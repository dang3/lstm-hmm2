ss
stos
add
out
les
mov
add
inc
or
lret
lret
notl
adc
sbb
aas
rcl
xchg
mov
enter
add
push
nop
xor
inc
sti
push
jns
ret
fnstcw
scas
mov
push
xchg
xor
je
int3
mov
xchg
popf
dec
jo
sbb
pop
xchg
aam
daa
jb
sti
push
xor
loop
pop
push
cs
mov
daa
jbe
stos
jecxz
insl
add
pop
mov
sub
jns
mov
cmpsl
pop
and
insb
std
jle
lret
repnz
xor
dec
imul
lods
lods
mov
call
nop
das
lods
xchg
lcall
popa
jno
cmp
leave
sbbl
int
lahf
fs
btc
into
iret
sbb
sub
in
inc
cmpsl
mov
jno
in
push
clc
cwtl
jmp
sbb
xchg
movsb
cs
cwtl
and
jbe
pop
mov
popf
jbe
sbb
sbb
bound
repnz
xchg
inc
or
mov
xchg
dec
pop
mov
nop
dec
test
dec
pop
mov
xchg
mov
fs
and
jg
mov
lock
sbb
xor
jnp
icebp
idivl
mov
sahf
xchg
xchg
lock
jns
lahf
adc
incl
dec
jg
imul
repz
aas
push
pop
inc
mov
pop
cmp
and
testb
xor
mov
cltd
scas
jp
adc
out
out
dec
push
cmp
daa
repz
mov
sub
cwtl
test
int3
mov
push
add
cs
test
inc
push
mov
pop
neg
xchg
fistps
cmpsb
icebp
dec
sbb
xor
lret
xchg
mov
jmp
mov
clc
push
mov
mov
sub
pushf
mov
push
imul
testb
dec
outsl
lock
and
js
inc
shll
mov
mov
shlb
cmp
call
jb
xchg
inc
enter
loope
jae
mov
dec
xchg
dec
insb
xchg
int3
mov
jnp
push
add
fisubs
rcrb
fidivl
sub
out
and
mov
daa
enter
push
xor
in
jne
add
or
sbb
out
inc
xor
stos
jmp
xchg
ret
loopne
cmp
and
shrb
pushf
push
fisubrs
arpl
imul
aam
cmp
lahf
in
fsts
loopne
fistps
std
test
ja
cltd
fwait
cmp
test
lods
mov
inc
addr16
imull
push
push
in
mov
lea
and
daa
push
fsubl
push
or
mov
lret
add
mov
mov
in
xchg
cmp
mov
stos
lret
mov
outsb
test
or
add
lock
clc
mov
jg
xor
adc
fdivl
fsubrl
mov
icebp
push
add
jg
mov
mov
and
lret
pop
adcb
jno
dec
xchg
scas
lods
adc
push
mov
imul
mov
push
add
repz
push
cmpsl
mov
fmull
mov
cmp
and
pop
add
and
jo
int
mov
mov
mov
lret
test
or
xchg
mov
dec
push
test
push
call
rcl
push
lock
enter
int3
push
and
daa
jmp
mov
add
adc
push
mov
cmpsl
push
pushf
jo
ds
loopne
xor
adc
mov
clc
mov
sub
dec
dec
adc
mov
mov
or
and
ja
mov
shll
popf
or
or
dec
mov
dec
fbld
inc
mov
stos
inc
aam
fs
jg
xchg
sbb
xchg
mov
sub
mov
mov
inc
sbb
nop
aam
pushf
sub
es
cld
cmp
push
mov
cmp
mov
sbb
pop
fst
movsb
push
pop
and
jg
pop
sub
shll
sub
push
iret
ret
out
stos
add
js
mov
dec
sub
mov
movsl
adc
xor
xchg
js
cld
pop
pop
lea
mov
dec
cmp
out
and
sbb
mov
lret
jge
sub
addr16
jmp
jb
fdivs
ss
out
repnz
test
mov
leave
dec
lahf
icebp
mov
inc
adcl
lods
lods
adc
pop
ljmp
outsb
cs
sbb
decl
sbb
mov
lods
xor
notl
push
or
xor
pop
jns
stos
test
cmc
fsubr
lea
fadd
jb
arpl
jo
push
inc
or
test
mov
dec
gs
cltd
ds
adc
out
and
mov
mov
sbb
inc
sbb
push
in
fldt
or
adc
arpl
jae
fs
sub
lcall
pop
inc
sahf
ds
clc
aaa
mov
xchg
fcompl
imul
fsubr
and
or
sbb
sub
shrl
push
pop
pop
xor
out
jae
out
jmp
test
sub
shll
cmp
icebp
xchg
aaa
scas
sub
int
rol
xor
into
mov
or
jg
ja
es
push
jg
stos
or
test
cli
jge
adc
sti
cli
adc
lods
insl
push
movsl
icebp
pusha
leave
adc
sub
aaa
dec
xor
test
add
jb
and
xchg
push
xchg
aaa
lcall
mov
and
xlat
pop
dec
leave
xlat
xor
fwait
in
mov
jnp
or
loopne
jmp
pop
mov
jecxz
int3
rorb
jne
test
jp
mov
jp
daa
mov
repnz
pop
out
sub
xchg
push
aam
mov
mov
aaa
jne
inc
xchg
xchg
push
inc
es
push
cmp
movsl
sub
or
fptan
push
outsl
sub
push
xchg
rcrl
inc
jge
lahf
add
cmpsb
jns
out
fidivs
rclb
lcall
xor
jmp
les
mov
loopne
rcrb
imul
pop
bound
mov
mov
mov
cmp
jne
push
popf
mov
cmp
mov
jmp
sub
adc
and
jge
scas
movsb
das
jnp
repz
pop
rcrl
scas
jbe
subb
jb
push
sti
outsb
test
push
or
sti
dec
push
sub
lret
in
jle
mov
xor
insb
dec
mov
iret
hlt
ja
jl
sbbb
mov
xchg
pop
outsl
mov
pop
int
dec
imul
lods
pop
hlt
mov
loopne
jp
xchg
mov
mov
xchg
mov
test
push
xchg
mov
cli
push
imul
pop
pop
fs
cmp
fwait
lcall
call
das
xor
add
fstps
inc
sub
rcrl
and
shlb
inc
movsb
lds
cmp
mov
sub
mov
decl
mov
cmp
inc
outsl
dec
popa
jp
es
push
pop
sub
push
pop
mov
mov
push
ficompl
ret
mov
outsb
jnp
pop
push
xchg
mov
lcall
testb
add
xchg
lret
mov
insl
test
jle
aad
xor
xchg
cmp
aad
xchg
insb
ss
lock
cltd
or
rorl
lret
cmp
adc
adc
jbe
shrb
cmp
in
repz
mov
mov
imul
std
pushw
sub
aaa
ret
and
loopne
dec
icebp
mov
repnz
rcl
aaa
mov
fcmovnu
shl
xchg
lods
pop
movsb
pop
xlat
ret
lea
mov
inc
mov
or
cmp
add
ljmp
xchg
fcom
add
mov
and
cmp
mov
mov
jbe
cmp
adc
add
cld
stos
push
mov
inc
sbb
pop
pusha
stos
test
xchg
sbb
jmp
sbb
cmp
pop
sysenter
mov
lock
jle
nop
in
cld
dec
aad
push
push
psrld
jnp
nop
mov
popa
mov
daa
add
jne
out
mov
notl
adc
add
and
imul
arpl
sbb
or
int
sbb
sbb
sub
jb
adc
xchg
inc
and
subb
sub
jno
mov
add
adc
repnz
call
mov
dec
push
lret
call
fildll
daa
loope
push
jae
mov
pop
out
int
es
add
aam
push
sub
movsl
sbb
push
or
xor
test
icebp
repnz
push
int3
repnz
scas
cmpsb
mov
add
rolb
outsl
pusha
mov
icebp
and
sub
data16
pop
xchg
mov
mov
leave
lds
or
xchg
xchg
leave
movsb
pop
movsb
or
loopne
inc
or
inc
and
insl
push
mov
cmpsb
fisttps
jle
in
push
stos
xor
pop
inc
mov
lods
mov
dec
out
popa
clc
sub
hlt
test
rolb
in
hlt
sbbb
or
dec
daa
stos
pusha
xchg
outsl
lea
inc
lcall
dec
xorl
dec
sahf
lods
sub
movl
jg
mov
mov
mov
cmp
adc
out
adc
mov
mov
scas
ss
inc
cmp
repnz
or
sub
outsl
or
js
pop
mov
jae
scas
jge
shlb
dec
dec
sbb
fldenv
mov
jg
push
fisubrl
cmp
jne
mov
jmp
add
out
sub
dec
icebp
cmp
and
and
fisttpll
sbb
cmc
xlat
addr16
es
sub
xchg
aaa
mov
push
mov
push
testl
dec
xchg
fmull
mov
dec
mov
iret
and
fcomi
test
bound
les
mov
lock
lea
out
scas
cld
jp
push
idiv
call
cmpsl
lock
adc
jle
in
xchg
push
mov
jge
jnp
fadds
cmp
sti
lea
pop
mov
out
mov
pusha
xor
and
pop
jb
adc
shll
sar
add
push
xor
adc
jmp
jno
adc
das
mov
xor
fcompl
pop
xor
adc
popf
out
sub
out
mov
mov
dec
adc
imulb
push
je
pop
movb
jno
mov
test
shlb
aam
insb
lods
movsb
or
mov
dec
pop
sub
aaa
pusha
test
dec
pop
leave
adc
sub
orb
dec
pop
aaa
inc
or
call
push
add
lds
pop
add
loopne
rcrb
fmul
scas
inc
jnp
xchg
movl
dec
lcall
repz
shll
pop
or
mov
addr16
roll
pushf
ds
dec
gs
mov
dec
addr16
test
sub
inc
pushf
addr16
push
inc
push
insl
pop
jge
out
add
mov
or
xchg
lea
fwait
adc
sub
popf
stos
dec
ss
mov
cmpsb
stos
fs
xor
js
sti
fcoml
fnstenv
inc
in
cs
mov
lret
lods
dec
dec
mov
rcrl
rorl
mov
sarb
arpl
jns
mov
inc
loopne
mov
test
loop
mov
popf
mul
testb
xor
push
cmc
mov
lods
aam
push
out
rcll
add
cmpsl
mov
mov
mov
aaa
dec
sub
daa
pop
push
roll
fildll
mov
sbb
pop
cltd
in
jl
jno
ds
sub
or
aad
inc
dec
push
bound
sub
jecxz
in
movsl
xor
fmul
ljmp
faddl
mov
fwait
jge
movsb
push
push
sub
push
jns
xlat
sbb
inc
stos
imul
hlt
push
jle
jb
lea
inc
sti
test
fs
cld
es
xor
imul
lds
and
stc
sbb
xor
or
les
mov
or
cmp
sti
icebp
es
mov
rol
out
shr
push
dec
or
cmp
cvtdq2ps
test
cmp
push
hlt
out
cltd
das
lret
jae
outsl
cmp
das
jle
mov
out
add
cmp
sub
mov
xor
cmpsl
mov
or
push
pop
sbb
cmc
mov
test
call
scas
std
push
stc
sti
lock
cmpsl
lret
jo
push
cltd
mov
fiaddl
mov
loope
and
test
mov
cmpsb
xor
hlt
mov
lahf
xor
lahf
sbb
dec
pop
lret
mov
xor
pop
xchg
fidivl
jae
es
out
mov
fiadds
adc
repnz
das
pop
cmpsl
mov
dec
xor
mov
push
sbb
fstps
push
ljmp
jne
aas
shrb
pop
cld
std
push
loope
add
inc
xchg
or
scas
outsb
test
pop
inc
mov
adc
lahf
push
sbb
aad
and
in
pop
rcll
cmp
sbb
adc
xchg
sbb
fimuls
sub
cmpsl
out
repnz
popa
adc
loop
subl
loope
jp
or
sub
sti
rcl
js
xor
cmp
inc
add
sbb
inc
xchg
stos
es
ljmp
test
mov
add
xchg
fisubs
add
inc
mov
ret
cli
cmc
popf
pop
ja
das
mov
mov
outsl
adcl
dec
cld
or
jnp
jmp
sbb
push
sbb
aas
popa
xchg
test
mov
push
fucomi
adc
sahf
pop
leave
negl
and
adc
ds
cli
pop
xchg
call
lahf
jmp
sub
xchg
test
sahf
ja
cs
sub
xor
xor
stc
push
xchg
sub
mov
jle
loope
insb
rep
les
or
jne
sahf
xchg
into
out
add
fldenv
daa
or
iret
or
fnstsw
jmp
shlb
jmp
ss
push
push
or
pcmpgtw
out
movsl
movsb
jg
mov
scas
dec
stos
adc
repnz
repz
icebp
popf
les
xlat
movsl
imul
test
mov
mov
test
repz
or
or
jecxz
sahf
test
cmp
leave
push
pop
mov
test
pop
push
adc
gs
fists
inc
mov
nop
mov
push
push
jb
nop
fistps
sub
jno
cwtl
xchg
js
dec
adc
cmp
loop
pop
nop
xor
pop
mov
push
test
popl
aad
mov
jo
dec
cli
insl
fnstenv
adc
out
out
lcall
aaa
ljmp
je
in
mov
cli
jmp
lock
in
lret
cmp
aam
sbbb
xor
loopne
ret
ss
pop
rorb
push
xchg
add
clc
jg
cmpsb
inc
or
dec
dec
pop
adc
cmpsb
sahf
mov
jbe
gs
jle
nop
sub
push
cld
mov
dec
fcos
mov
in
ror
cld
popf
pop
inc
jle
mov
xor
sbb
lahf
call
decb
cmp
lock
imul
ds
mov
sub
xlat
jns
sbb
movsl
cmp
ljmp
xor
incb
test
outsl
xor
and
pop
idivl
mov
xchg
imul
ja
test
std
aas
mov
add
aaa
or
shrl
jecxz
mov
add
xchg
and
push
test
pop
add
mov
rclb
cltd
out
cmp
int
outsb
cltd
pop
add
mov
pop
xchg
movsb
sarl
adc
pop
loope
add
dec
in
rcrb
stc
icebp
enter
cmp
pusha
push
xor
out
ret
ficoml
mov
and
loop
popa
dec
mov
shl
push
inc
hlt
lods
dec
lods
out
into
ret
and
stos
fwait
mov
pop
inc
fucom
inc
inc
mov
popa
pop
ss
pop
outsl
sub
cmovns
das
shrl
xchg
mov
inc
add
insb
lahf
mov
std
fsubl
leave
rcl
mov
inc
dec
lds
adc
or
xor
ja
les
dec
jge
fdecstp
mov
xchg
or
cmp
mov
cmpsl
movsb
sti
inc
push
cmp
mov
fsubr
sbb
mov
mov
orl
fdivl
in
subl
adc
lret
fcomp
adc
mov
mov
hlt
jle
fwait
das
rorb
jns
push
shlb
xchg
outsb
xchg
xchg
pop
dec
inc
stc
test
xor
sbbl
icebp
icebp
lret
cmp
and
insl
in
cmc
xor
lods
ficompl
dec
adcl
inc
pop
cwtl
push
xor
jo
mov
mov
jecxz
jg
repz
scas
inc
push
bound
and
rcl
cmp
scas
mov
mov
pop
idiv
call
cmp
in
stc
sub
loopne
adc
flds
jecxz
pop
lret
call
in
push
or
cwtl
sub
aam
xchg
and
ljmp
test
add
stos
rcl
sti
jo
sub
flds
in
cld
mov
enter
sub
out
mov
pop
or
push
insb
mov
icebp
xchg
mov
cmp
xchg
xor
cmp
ds
incl
fistl
or
pop
mov
jo
pop
cli
adc
fidivrl
pop
mov
mov
mov
ret
repnz
push
pop
jne
mov
xchg
lods
sbb
mov
scas
in
push
icebp
sub
mov
shrl
lods
test
dec
mov
mov
pop
push
fiaddl
cld
add
test
mov
dec
dec
sbb
jl
adc
hlt
jnp
movsl
sbb
jno
outsb
enter
xchg
ror
into
pusha
movsl
push
addr16
test
jp
hlt
xor
cmpsl
out
in
add
push
and
adc
sbb
clc
stos
popa
dec
inc
cli
shll
mov
xchg
cmp
in
into
fisubl
xchg
sub
test
mov
push
and
add
push
popa
sbb
jle
lock
data16
sbb
outsl
orl
jne
inc
jge
xor
adc
jg
pusha
shll
adc
std
dec
inc
sbb
jno
sbb
aam
scas
cmp
cmp
imul
in
jno
stos
cmp
lods
fidivrl
repnz
mov
cvtps2pi
mov
rol
mov
add
mov
xor
mov
and
decl
jge
mov
out
stc
or
mov
push
add
sbb
lea
in
ss
rcrb
lock
popa
or
int3
mov
aam
mov
add
cmc
leave
scas
pop
cwtl
cmp
jp
mov
imul
xor
sarb
or
or
mov
mov
pop
mov
fxch
add
enter
mov
dec
lret
rorb
pop
or
pop
push
jle
mov
lahf
outsb
dec
xor
xlat
mov
pop
mov
gs
lcall
cld
push
mov
and
ds
mov
xor
popf
dec
mov
jecxz
lea
and
mov
icebp
pop
push
jne
and
ljmp
push
out
int
mov
testb
orb
jle
xor
sub
lds
pushf
mov
sti
inc
and
push
sti
incl
outsl
js
outsl
sub
pushf
fwait
jmp
add
lahf
mov
add
sub
iret
fistps
adc
movl
push
push
dec
mov
andl
pushf
mov
cmc
or
or
imul
xor
cwtl
xchg
mov
loope
sub
int3
mov
int
sbbb
repnz
add
call
in
popf
and
fwait
mov
sahf
add
scas
and
addr16
shrl
push
jge
cmc
in
bound
and
roll
push
sar
repnz
jle
loope
and
mov
leave
insl
clc
dec
ss
inc
negb
and
stos
mov
adc
jae
and
stos
adc
aaa
mov
and
dec
popf
pop
ret
icebp
mov
icebp
aad
arpl
cltd
sbb
mov
xor
ffreep
cmp
push
sbb
jmp
add
loope
dec
cmc
cmp
add
shlb
mov
xchg
cmp
pop
aaa
rep
icebp
daa
pop
ja
or
testl
or
cmp
negl
inc
push
imul
adc
xchg
mov
mov
mov
aas
pop
or
popf
lcall
push
ret
dec
cli
inc
dec
scas
xchg
cld
push
loop
mov
adc
and
cmp
mov
ds
sub
adc
insb
aas
leave
xchg
call
mov
mov
iret
in
pop
in
inc
mov
jae
test
jecxz
sti
arpl
cmp
std
hlt
in
push
lret
mov
pop
adc
insb
add
mov
sbb
or
push
add
jo
sahf
test
data16
jo
xchg
stos
jne
cmp
sbb
lret
gs
fsubrs
fsubs
adc
std
push
lds
jo
in
data16
subw
cmpb
push
dec
lahf
call
pusha
mov
loop
or
leave
jno
test
pop
or
enter
mov
rclb
pop
stc
cmp
lea
push
jne
daa
mov
mov
push
insb
shrb
testl
mov
lock
out
and
aam
xchg
push
out
push
loope
jbe
dec
loop
into
adc
fsubr
lret
inc
fstpt
daa
and
cmp
pop
adc
ret
sahf
ret
adc
ret
mov
and
jmp
mov
or
lret
mov
adc
xor
scas
push
xor
loope
add
call
mov
inc
sbb
orl
and
xor
mov
sbb
sub
nop
jns
sti
mov
jnp
dec
mov
sbb
int
lcall
pushf
fdivrl
ds
mov
mov
stos
out
xor
out
adcb
cld
xchg
xor
repz
jno
fcompl
repz
fbstp
shlb
xor
pop
in
xor
pop
push
je
into
sub
lods
add
fsubs
hlt
ss
pushf
or
sbb
mov
inc
dec
mov
pop
adc
jnp
pop
lcall
sbb
pop
sbb
push
push
addr16
cmp
cmp
push
or
lods
jb
insl
mov
pop
xorl
and
and
fisttpl
adc
mov
test
cmc
fildl
idivb
push
cld
pop
cmp
aas
and
dec
mov
das
xchg
insb
addr16
test
cmpsb
mov
add
jne
test
mov
sub
fdivrs
jp
xchg
vmovhps
xchg
push
jl
inc
stc
sub
pop
insb
push
push
lahf
push
out
call
ja
jbe
fstpl
and
js
scas
xchg
out
xor
or
mov
stos
sub
sbb
lret
in
push
aam
mov
push
adcb
call
jnp
sub
sti
fs
gs
adc
lea
clc
nop
add
mov
add
popf
test
and
repnz
pop
movsb
lds
xchg
outsl
push
adc
push
ret
or
push
in
dec
and
imul
subl
push
cmp
xchg
xchg
std
cli
and
cli
cld
sti
bound
jle
add
xchg
in
adc
pushf
mov
idiv
movsb
dec
xchg
aad
sahf
popf
cli
sahf
into
add
movsl
push
add
fildll
or
sub
stos
xchg
lret
test
jb
or
push
xor
sub
jge
adc
lea
add
loope
out
sub
adc
int
xor
add
cmp
addl
data16
add
inc
repnz
mov
movsb
test
in
lods
mov
cwtl
dec
out
jmp
fsubl
dec
fistl
dec
cmp
dec
cmc
cmp
push
push
push
dec
push
and
jne
jmp
test
mov
jl
aad
jl
and
mov
lret
pushf
loop
ljmp
jmp
int
lea
mov
pop
xchg
mov
sti
jmp
jbe
xchg
rolb
jno
out
add
dec
and
in
lcall
loop
xor
and
cltd
movsl
inc
jns
in
dec
pushf
ss
xor
push
andl
mov
dec
mov
pop
sub
in
cmp
inc
insl
jl
call
push
iret
in
push
mov
loop
jns
imul
stos
scas
pop
push
enterw
das
jmp
insl
aam
shlb
insb
inc
in
lods
ljmp
inc
cmp
dec
cmc
push
sbb
popf
push
scas
imul
jl
pop
movsb
pop
push
adc
add
je
adc
pop
mov
js
insl
jl
enter
push
pop
mov
les
ret
call
pusha
cmp
fldcw
xor
push
sar
rclb
inc
xchg
clc
sahf
cs
mov
pop
mov
imul
adc
sbb
push
jbe
cmpsb
loop
cmp
bnd
adc
cmp
es
popf
xor
fs
push
std
push
or
mov
movsb
repnz
ret
xchg
insl
xor
jge
outsl
dec
or
cmp
test
hlt
inc
shrb
lret
sub
fcoms
and
into
mov
xchg
mov
fcomi
loop
out
xchg
cli
test
pop
dec
pushf
dec
or
mov
jbe
mov
mov
xchg
jle
imul
xor
add
repz
inc
mov
ja
push
xor
cli
inc
das
pop
movsb
fs
mov
test
dec
mov
add
jns
lods
and
lret
test
dec
inc
das
cmpsl
test
add
cli
cmp
pop
in
out
add
sub
outsb
lods
inc
ja
stos
jbe
movsl
mov
mul
leave
jge
leave
lcall
jmp
adc
or
sahf
push
inc
dec
addl
into
push
dec
stos
movsl
mov
shlb
adc
ds
test
test
fimull
push
mov
dec
loopne
cmp
dec
mov
mov
pusha
mov
ss
lods
sbb
push
and
push
negl
rclb
imul
stos
mov
jmp
pop
push
ds
and
fistpl
out
jl
movsb
adc
inc
pop
adc
pusha
test
jl
cmpsl
ljmp
sub
fiadds
cwtl
stos
cltd
mov
jg
lds
jl
jg
imul
sbb
sbb
cwtl
xor
pop
inc
and
or
test
fmul
fcoml
inc
sbb
pop
mov
xchg
stos
leave
mov
ret
xor
int
cld
sbb
lds
in
mov
inc
mov
mov
stos
mov
adc
jl
or
or
mov
xor
add
ljmp
pushf
cmp
jl
and
cmc
mov
sarb
jae
int
dec
or
xchg
dec
insb
and
xor
mov
sbb
pusha
push
arpl
inc
cmp
and
sti
rclb
movsb
add
imul
insl
popf
lcall
pop
adc
mov
in
xor
clc
or
fldcw
lods
inc
cmp
popa
pop
scas
xor
push
add
mov
jp
xor
mov
and
into
pop
and
sarb
inc
and
ficomps
stc
fnstenv
pop
mov
adc
xor
add
in
push
sahf
jg
cmp
fists
fsubrl
push
das
movl
add
adc
xor
dec
loop
cwtl
adc
and
sbb
sub
pop
sbb
mov
call
ljmp
insb
adc
push
into
mov
loopne
mov
ficompl
call
outsb
jl
jo
sbb
lret
cmpsl
sahf
test
cmp
movsl
mov
or
xchg
test
or
repnz
push
jecxz
or
dec
jecxz
fistl
push
call
xchg
dec
cmpsb
stos
push
call
sbbl
je
cs
adc
push
add
scas
or
stc
scas
in
iret
shll
mov
mov
leave
fidivl
lret
cmp
jns
mov
and
add
xchg
adc
scas
add
stc
notl
pop
les
sub
fldenv
dec
jo
outsl
mov
dec
jae
mov
cmp
sbb
scas
test
xlat
out
jns
pop
insb
pop
or
jg
lret
sahf
jge
test
lcall
xchg
shr
sub
popf
mov
sub
mov
push
dec
fisttpll
call
leave
mov
sub
mov
fnsave
cs
movsb
jp
xchg
ds
cmpsb
mov
lea
pop
jle
icebp
pop
inc
rcll
xchg
xchg
icebp
cs
sbb
daa
hlt
fs
dec
cmp
imul
jmp
xchg
call
cmp
mov
cmp
mov
sub
stos
dec
icebp
jecxz
stc
pop
xlat
cmp
dec
cmp
xchg
mov
ds
jno
mov
hlt
xorb
inc
mov
cmp
shl
std
fmuls
push
and
sbb
mov
cmp
dec
leave
jmp
shll
xchg
daa
push
test
stc
or
or
arpl
sub
push
fisubs
xchg
fwait
adc
sbb
cmpl
adc
subb
out
daa
and
ret
fistps
push
xor
jo
mov
ljmp
imul
mov
mov
jo
mov
pop
sbb
push
pop
mov
push
sahf
push
cmpsb
cmp
es
lds
pushf
ffreep
jbe
mov
add
popw
rol
push
adc
xor
sub
push
xchg
or
iret
add
add
sub
fwait
test
cmpsb
dec
xor
outsl
or
jo
mov
repz
jl
clc
test
gs
cmc
sbb
mov
pop
fimull
adc
ja
scas
xchg
mov
mov
and
movsb
fbstp
repnz
gs
or
es
sbb
shlb
std
fistpll
je
lds
addb
sub
sub
in
and
fsts
xor
jge
inc
xchg
mov
stc
jmp
insb
das
stos
hlt
sbb
loop
add
jne
or
hlt
lds
dec
lods
adcl
lcall
pop
out
inc
shll
gs
repz
inc
xchg
jge
cwtl
dec
pop
inc
mov
fstpl
cmp
rdpmc
adc
push
add
push
or
lahf
pop
xchg
jg
xorl
out
adc
shl
loope
dec
jae
xchg
fisttpl
adc
xchg
test
xor
call
pop
lcall
setge
mov
dec
loope,pt
xchg
cmpsb
pop
fistps
out
dec
push
lea
dec
push
dec
in
pop
or
sahf
inc
add
clc
test
add
popa
push
movsb
jae
adc
out
je
push
andb
dec
into
imul
sarl
xor
or
arpl
xor
cmp
shrl
andb
div
jno
cmp
mov
mov
lcall
add
ret
cli
mov
xchg
clc
dec
add
mov
mov
or
std
loop
aam
sahf
and
xor
sbb
movsl
je
sub
out
inc
jb
jp
in
inc
lret
stos
aam
aam
cltd
mov
inc
xor
push
cwtl
jl
gs
mov
mov
or
mov
mov
add
addr16
mov
fsubl
cmp
mov
add
lret
xor
pop
jno
or
sub
scas
sbb
mov
into
shlb
mov
push
xlat
mov
rolb
xchg
mov
mov
push
xchg
cltd
sbb
adc
jp
call
or
lahf
jae
xlat
aaa
fldl
movsl
xchg
cmp
jge
xchg
into
inc
mov
sub
adc
test
test
imul
movsl
clc
rorb
and
ds
cld
and
xor
int3
or
fidivs
pop
cmp
data16
adc
xorl
arpl
mov
push
mov
push
cmp
or
dec
lods
sub
nop
pop
xchg
loope
xlat
xchg
add
adc
pop
enter
mov
outsb
lret
add
std
jmp
mov
addr16
jmp
loope
xchg
std
cs
es
cs
std
sbb
xor
adc
jg
orb
jge
iret
aaa
addl
clc
mov
iret
lods
or
push
xchg
push
push
push
iret
sub
bound
mov
leave
roll
clc
mov
inc
mov
xchg
cli
lcall
imul
pop
dec
in
mov
lret
stos
cmp
xchg
dec
insb
in
test
mov
add
mov
dec
fistpll
fwait
mov
pop
sahf
nop
loope
inc
xlat
mov
aas
neg
lods
ds
sahf
pop
push
lods
push
fwait
scas
add
sti
sbb
arpl
inc
rcrl
or
inc
cmp
popf
fidivrl
xchg
ret
jns
inc
lret
mov
pop
xchg
jbe
and
lods
lods
ror
lret
sub
daa
cs
add
add
or
inc
lahf
lods
pop
mov
lods
cmp
fs
fnstcw
mov
jle
insl
inc
movsb
nop
lock
repz
aas
xchg
inc
pushf
mov
inc
jecxz
pop
sbb
sbb
ja
cltd
jle
aaa
ret
push
sub
aad
stos
pop
xchg
cmpsb
loop
jnp
imulb
add
in
fwait
mov
int3
js
jecxz
jne
inc
out
sub
cmpsb
sbb
push
add
or
into
xchg
fimull
mov
lret
mov
jb
mov
lock
mov
fisttpl
inc
scas
push
repnz
test
xchg
or
test
cwtl
leave
out
sbb
jb
inc
pop
cmpsb
add
loope
imul
psrad
sahf
dec
shlb
adc
jp
gs
cmp
shr
dec
mov
shrb
cmp
cmpsb
push
cwtl
and
div
add
add
ljmp
cmp
outsl
mov
and
es
jl
jbe
inc
neg
lods
mov
jnp
out
mov
and
jns
sar
lcall
fxch
sbb
cmp
push
cmp
xor
mov
in
in
nop
call
adc
or
fs
iret
pop
mov
push
dec
mov
bound
sub
mov
loope
scas
data16
test
nop
stc
dec
cmpsb
nop
xchg
adc
aaa
pop
mov
daa
rorb
sbb
out
pop
mov
jbe
fs
pop
mov
imul
ja
and
mov
jecxz
int
loopne
sub
or
repnz
or
sbb
cmpsb
outsb
iret
or
insb
jae
cmpb
aaa
popa
mov
into
mov
xchg
xchg
in
mov
xchg
inc
adc
push
xor
out
mov
add
push
pushf
pop
and
in
addr16
mov
iret
xchg
repnz
push
popa
lret
cmp
inc
jle
fmull
cmp
push
and
in
sbb
stc
fldt
mov
mov
inc
cld
scas
idiv
icebp
adc
dec
repz
mov
adc
mov
in
or
fs
mov
xorb
xchg
sbb
rcr
push
sbb
aas
cmpsb
das
test
inc
pop
ficomps
into
add
jge
jp
je
and
aad
test
or
pop
mov
mov
push
call
push
pop
test
or
adc
scas
add
xor
jmp
das
mov
scas
mov
xchg
jmp
imulb
sbb
jae
sbb
in
ja
leave
pop
out
int
fldt
push
sbb
imul
pop
enter
nop
xchg
cmc
stc
mov
cmc
inc
xlat
or
mov
dec
sbb
aad
and
or
sti
add
xchg
insl
push
icebp
cmpsl
mov
mov
xchg
lret
inc
mov
fnstcw
mov
aaa
fisubrl
outsl
in
daa
repnz
test
dec
ss
jnp
insl
xor
les
sbb
lds
jle
movsb
imul
dec
loop
dec
addl
inc
cs
jl
ljmp
dec
enter
fstpt
test
add
inc
repnz
aaa
and
leave
fisubs
cmp
test
sub
dec
out
loope
dec
std
inc
sbb
in
ja
xchg
xchg
cld
mov
out
mov
and
inc
jp
bnd
mov
mov
xlat
xor
fildll
shrb
xchg
shl
or
push
clc
insl
xchg
jnp
xchg
sbb
mov
gs
in
loopne
adc
mov
ja
cwtl
mov
das
adc
iret
das
es
xchg
cs
cmpsl
mov
adc
fs
aad
jecxz
test
xor
xor
pop
or
pop
and
sbb
test
mov
mov
sbb
cmpsl
cmc
in
das
cwtl
push
test
and
adc
test
jno
cmp
and
scas
inc
sub
jp
andb
lods
cltd
loop
leave
push
loop
ss
xchg
adc
lret
bound
data16
or
sbb
out
mov
push
xor
ljmp
pop
jecxz
add
mov
xor
cmp
cmpsl
es
les
sbb
std
stos
fiadds
mov
enter
mov
cwtl
dec
push
push
cmc
cmp
xchg
mov
inc
fdivl
aas
or
pop
mov
out
aam
or
push
xchg
js
cmp
ljmp
mov
adc
in
shlb
hlt
cmp
popl
movl
add
or
push
mov
pop
push
sub
mov
fadds
ret
xor
xchg
dec
pop
sbb
adc
data16
inc
mov
out
dec
cs
mov
cmp
jge,pn
mov
and
idivb
xor
pop
add
pushf
cmp
aas
test
pop
mov
inc
add
fs
insl
aam
xchg
xorb
repnz
sbb
pop
dec
cmp
push
rcl
or
push
sub
negb
test
mov
mov
and
gs
into
xlat
inc
push
push
test
add
push
jo
inc
dec
mov
sbb
cmp
mov
test
outsb
push
adc
push
dec
cmc
popf
mov
dec
sub
add
mov
push
dec
fisubrs
adc
xor
lcall
and
jnp
jg
adc
out
ss
jb
jmp
std
cmp
fsubs
inc
jle
pushf
outsb
cwtl
neg
scas
xlat
add
enter
std
inc
xchg
fistps
out
iret
sbb
xor
movsb
push
sbb
cmc
arpl
jmp
fimuls
jge
ljmp
fidivrl
add
cmp
push
std
in
mov
lret
or
lcall
xchg
nop
inc
popa
test
push
inc
imul
ret
sbbb
xchg
xchg
sbb
call
pop
jb
sbb
adc
push
add
mov
lock
sbb
adc
mov
push
aam
in
pop
and
pop
popa
and
cmp
push
push
or
pop
sub
adc
add
or
nop
movsl
xchg
jmp
cmpsb
repnz
mov
xchg
mov
inc
iret
mov
das
outsb
adc
xchg
mov
shrl
and
ja
dec
or
lahf
dec
ret
in
movsb
cld
inc
cmp
cs
in
cmpsb
mov
int3
icebp
or
rcr
clc
inc
sub
fwait
xchg
push
sbb
rorb
inc
mov
jl
add
xchg
jl
test
lods
dec
jmp
shrb
xchg
out
rclb
mov
lahf
aas
ss
lds
gs
xchg
or
push
or
dec
in
cmp
loope
call
out
mov
ret
add
push
into
mov
fbld
bswap
sub
outsl
gs
inc
mov
mov
les
add
lcall
cmp
xchg
push
cwtl
test
add
mov
pop
inc
pop
adcl
sub
cmpb
insb
pop
in
ret
test
out
rolb
adc
sbb
int3
ret
lret
mov
test
xchg
int3
pop
adc
test
stos
mov
jo
jp
inc
dec
mov
inc
das
test
cmp
sub
mov
call
aas
xchg
cmp
lods
mov
mov
xchg
loopne
fdivr
add
fistl
lahf
mov
out
leave
sbb
pop
push
test
mov
mov
pushf
mov
pop
push
aam
jge
and
out
push
in
xchg
outsb
pop
jbe
arpl
lret
push
les
jno
in
mov
scas
scas
je
dec
push
ds
leave
js
push
push
mov
jecxz
jne
inc
or
mov
repnz
and
jl
mov
cld
push
sti
push
xchg
gs
std
pop
popf
fstpl
cmp
mov
lret
ja
mov
xchg
mov
mov
fisubrs
or
pop
inc
lock
push
daa
jae
jecxz
xor
mov
outsb
jnp
out
lds
clc
aad
dec
enter
pop
in
cmp
repz
mov
jne
mov
jecxz
int
daa
pushf
in
push
pop
pop
sbb
das
dec
daa
sub
push
push
mov
and
sub
sbb
mov
scas
insb
enter
xor
clc
cmpsl
inc
out
test
fxch
cwtl
lds
testl
lods
add
test
aas
mov
adc
xor
adc
clc
xor
mov
loope
mov
sub
push
adc
sbb
cmpsl
pop
push
ljmp
roll
inc
xchg
jb
adc
es
jmp
push
mov
insl
sub
or
mov
repnz
ljmp
and
loope
push
adc
lret
mov
lahf
aad
and
stc
and
into
lret
mov
mov
andb
popf
push
jno
lret
dec
stos
out
cld
pop
cmp
cmpsb
sbb
xor
push
pop
lcall
shrl
mov
sub
mov
mov
jnp
xor
push
subb
push
mov
js
adc
xchg
sarb
and
sub
lock
fbld
fidivs
and
mov
sbb
clc
mov
movsb
cmp
ficompl
aam
push
addl
jb
mov
and
popf
sbb
xorb
mov
inc
mov
out
addr16
cmc
mov
loopne
mov
mov
aad
cs
inc
or
insl
gs
aad
xchg
jns
lea
or
shrl
mov
nop
pop
ljmp
jmp
adc
add
inc
adc
pop
mov
lods
dec
ficoms
ljmp
fcmovbe
xlat
fidivl
dec
shl
scas
repz
and
leave
jns
push
rcr
jns
sub
scas
test
nop
shll
sub
push
cmc
fsts
cs
jl
jge
cli
out
inc
dec
mov
pop
pop
sti
dec
mov
data16
or
sub
in
or
outsb
pop
add
push
pop
jne
addr16
movsl
xchg
push
data16
loopne
cltd
xchg
loope
mov
jg
mov
cld
sbb
mov
and
adc
dec
sbb
test
xchg
push
fdivl
xor
rorb
jo
pop
ds
sbb
pop
mov
test
psrlq
popf
loop
and
pop
lahf
shl
push
shlb
cld
inc
pop
jp
adc
sub
xchg
pop
mov
in
or
je
jl
movsb
add
insb
sub
daa
sub
xchg
pop
lods
pop
daa
movsl
sub
stc
aam
imull
in
jp
inc
cld
mov
outsb
and
lcall
lahf
and
fsubrl
adc
sarb
mov
lcall
jle
push
push
cmp
push
leave
adc
mov
mov
add
scas
adc
sub
inc
enter
mov
mov
scas
aad
mov
outsl
sbb
push
cmp
addr16
outsl
jecxz
and
jno
int
mov
xchg
adc
dec
sbb
jnp
shll
mov
inc
cmp
pop
ret
jle
add
mov
popf
nop
dec
out
jne
lock
inc
aaa
jbe
xor
mov
xchg
mov
pop
stc
cs
imul
int
ret
mov
xchg
jg
push
jne
adc
arpl
ss
fldcw
or
mov
daa
rolb
arpl
fs
push
mov
jne
icebp
dec
ficoms
call
pop
je
arpl
insl
inc
loopne
add
je
sub
pop
test
cmpsl
pop
out
push
nop
fprem
movsb
test
lock
aad
rorl
out
pop
xchg
inc
inc
addr16
jmp
cmp
fldenv
js
jl
cmpsb
xchg
xor
jl
and
addr16
mov
xchg
es
and
sub
out
add
mov
movsb
cmp
sub
in
or
add
test
fldl
xchg
pushf
inc
xor
inc
dec
outsb
aad
or
xchg
xchg
movsb
mov
les
outsl
xor
cli
je
outsl
clc
add
adc
add
and
mov
dec
adc
jmp
dec
pop
pop
sub
adc
jecxz
push
mov
lock
repz
adc
lahf
cmpsl
loop
fsubs
dec
jnp
es
and
jle
fiaddl
sti
fistpll
pcmpgtb
or
gs
jnp
inc
push
sti
cmp
jno
mov
imul
lahf
or
sub
insl
cmpsb
dec
out
lea
imul
jl
fs
in
jl
sub
fnstcw
inc
cld
inc
out
mov
jno,pt
mov
sbb
adc
sarl
mov
xlat
mov
bnd
sbb
repz
adc
adc
xor
adc
addb
pop
lea
mov
xchg
push
pop
mov
lcall
sbb
cli
add
xchg
and
push
out
outsb
dec
inc
mov
ss
mov
xchg
mov
leave
jge
dec
jge
out
add
out
sub
sbb
push
sbb
ljmp
push
cwtl
fisttps
xchg
sbb
test
pop
ss
mov
inc
xlat
jp
mov
and
stos
mov
jmp
cmp
xchg
rcrb
nop
shlb
jae
lods
sbb
imul
push
out
jp
push
stc
xor
pop
adc
pop
nop
push
lret
out
dec
into
xor
aam
jecxz
hlt
cmp
and
cmpsl
and
push
and
mov
jae
xchg
repz
std
iret
dec
add
out
sbb
mov
xor
jle
in
adc
clc
shl
jae
std
insl
lcall
xor
push
insb
xor
cmp
int3
bound
xchg
repz
mov
sub
ret
mov
adc
add
or
or
pop
je
in
ljmp
call
mov
pop
std
pusha
fucomi
stc
or
lods
cmpsb
mov
jnp
add
repz
sub
jge
roll
push
fwait
xchg
pop
dec
mov
cli
pop
xchg
dec
sbb
dec
ror
sub
xor
add
jne
cmpsb
test
sbb
pop
shl
dec
cpuid
sbb
lret
lock
ret
enter
repz
cmc
xchg
stos
sub
mov
loope
sbb
inc
xor
test
sub
jo
cmovne
call
loop
cmp
xorb
aaa
stos
popa
mov
neg
adc
mov
ret
in
sub
push
mov
and
ds
aaa
es
adc
mov
je
adc
addl
shll
and
jb
out
xor
iret
mov
lods
mov
pop
inc
and
ja
push
dec
out
pop
fisttpl
les
jns
int3
adc
mov
xchg
mov
pusha
jmp
scas
je
pop
adc
sub
jae
test
aaa
cmpsb
jb
lahf
imulb
mov
pop
or
dec
dec
pop
pushf
cld
jo
add
and
fcompl
mov
adc
insl
or
sahf
int3
hlt
lcall
or
push
pusha
popa
jnp
insb
adc
xor
lods
cwtl
movsb
test
jmp
jne
add
add
lcall
xchg
dec
xlat
add
das
adc
xor
cmpsl
mov
ficoml
xchg
xchg
stos
sub
cmc
mov
movsb
jl
sub
ja
in
sub
jb
or
jl
pop
outsl
add
ret
out
rcl
into
lret
mov
or
das
ljmp
push
and
jl
rol
xchg
and
jp
fs
fisubs
fsubs
orl
mov
arpl
sbb
loopne
xchg
repnz
inc
pusha
lret
sbb
ljmp
scas
scas
lcall
imul
jmp
mov
xchg
inc
into
xchg
jecxz
lea
add
mov
out
stos
add
mov
out
or
mov
pop
rorl
out
std
or
scas
lea
movsl
push
adc
pop
mov
rcrb
inc
jecxz
cmpl
lret
imul
push
lea
sarb
jns
sbb
shr
shlb
fistl
dec
xchg
adc
daa
and
out
cmp
or
add
loope
cmp
jne
cmp
test
xor
lods
xchg
mov
repz
push
pop
jne
int
cmp
add
out
cmp
lret
push
shlb
pop
hlt
sbb
mov
jno
lock
test
fidivl
push
nop
fisubrl
push
jbe
test
mov
ficomps
pop
movsl
push
pop
cmpsl
stos
cmp
clc
pop
fildl
in
loope
jnp
in
jl
push
mov
xchg
out
fimull
gs
out
cmp
nop
lock
popa
cmp
ljmp
jbe
push
fisubrs
push
mov
push
jmp
or
sub
jne
push
push
sahf
sbb
xchg
pop
negl
shrb
inc
mov
and
fiaddl
add
pop
scas
cmp
cmp
out
test
mov
dec
lcall
dec
add
arpl
push
xchg
in
push
mov
and
cmp
nop
mov
or
data16
outsb
xchg
aas
and
call
lret
je
dec
xor
add
jno
addr16
cmp
lock
jae
push
adc
js
enter
ret
aas
mov
push
leave
sub
cmp
lahf
rcl
outsb
sbb
div
pmaddwd
rcrl
mov
in
fidivs
inc
pop
dec
dec
fdiv
int3
fcoms
fcmovbe
enter
xchg
loope
mov
or
mov
iret
dec
sub
mov
in
xor
push
mov
adc
adc
out
gs
lock
add
add
shlb
adc
mulb
mov
inc
pop
xchg
lea
lock
test
test
addb
imul
jle
pop
sbb
je
mov
sub
stc
push
xchg
cmp
in
mov
fistpll
out
mov
addr16
and
mov
data16
int3
cli
and
fadds
aad
mov
inc
cmpsl
and
mov
daa
sub
dec
add
xor
lahf
loope
push
fisubs
or
xor
icebp
xor
mov
mov
sti
push
mul
out
inc
push
mov
cs
xor
sbb
sbbl
push
dec
addr16
pmovmskb
enter
add
xor
mov
jp
mov
mov
mov
jae
push
xchg
jg
out
fsubr
pop
pop
int3
cmp
jno
aaa
adc
popa
xchg
and
mov
xor
scas
xor
ds
scas
cs
das
stos
sub
jb
ljmp
sbb
imul
scas
jbe
ja
push
lock
lret
jns
arpl
or
xchg
or
cmc
mov
fwait
nop
aad
mov
cmc
fwait
sbb
rclb
cltd
call
sahf
xor
mov
cs
mov
jne
sub
jge
and
dec
inc
jo
mov
and
bound
movsl
outsl
jl
jno
xor
je
xor
inc
mov
imul
adc
jmp
imul
adc
outsb
mov
in
out
int
insb
mov
mov
mov
add
cmp
push
inc
addl
iret
jnp
mov
nop
cmp
pop
mov
leave
out
jae
cmp
repnz
out
neg
lcall
scas
mov
cmp
test
iret
fwait
inc
dec
dec
mov
sub
stos
inc
iret
ljmp
or
leave
mov
push
cmp
cli
nop
out
cmp
mov
jnp
stos
xchg
jb
mov
mov
loope
dec
insl
pop
sub
xor
push
das
sub
shlb
push
gs
mov
cmp
out
imul
pop
or
add
sbb
fs
adc
fcmovnbe
add
sbb
mov
in
add
adc
sahf
enter
jp
mov
jb
aaa
cmpl
pop
add
mov
mov
jo
scas
and
clc
arpl
inc
ljmp
or
cltd
fisttpl
je
and
loop
jb
cmpsb
sbb
cmp
xchg
scas
adc
idivb
scas
cld
mov
aas
ljmp
clc
xchg
imul
push
or
cmpb
lods
sahf
mov
sub
out
fidivs
inc
out
push
jp
mov
adc
xor
lods
dec
in
dec
cmp
vmread
sti
xchg
repz
movsb
lods
xchg
loop
std
loop
push
in
test
cmp
jmp
ja
mov
repz
jo
pushl
jmp
nop
push
std
mov
orb
mov
lds
addr16
cmp
add
inc
and
xchg
push
xchg
and
jge
les
stos
in
mov
insb
push
loop
push
imul
leave
cmp
aas
cs
stos
pop
std
ret
jae
sub
pop
jbe
push
loopne
jne
inc
pushf
lret
inc
dec
dec
cmp
xchg
xlat
mov
fdiv
push
xchg
dec
and
outsb
mov
xchg
xchg
loop
sub
sti
pop
gs
in
pushf
cltd
sub
xor
negb
xchg
cltd
cmc
mov
jmp
xor
lret
inc
into
cmp
ret
shlb
ret
call
xor
sbb
or
push
xchg
mov
ret
test
or
jmp
jne
mov
fbstp
int
arpl
or
lea
sub
fisubrs
negb
insb
push
xchg
loope
popf
insb
dec
adc
je
mov
mov
test
xchg
in
mov
test
push
push
mov
pop
lahf
xchg
aas
cmc
aam
scas
sbb
das
mov
fildll
cmp
les
fidivs
xor
ret
call
cmc
leave
clc
mov
pop
enter
insb
xchg
loope
mov
sbbb
cmp
adc
adc
add
test
sub
popa
orl
out
es
daa
sbb
out
ds
xchg
jo
ds
repnz
incl
lcall
xchg
push
dec
and
xchg
and
lcall
sub
mov
testl
mov
jmp
push
lahf
lea
mov
jg
mov
and
rcl
xchg
add
sbb
inc
into
cmp
aad
hlt
mov
xchg
dec
or
iret
pop
xor
sub
iret
inc
out
aaa
stos
sub
push
scas
out
fcoms
das
pop
add
pop
aas
int3
add
sub
ficoms
into
out
int3
fisubrs
adc
aaa
xchg
sbb
jne
push
cli
jae
daa
mov
ret
mov
mov
sub
arpl
dec
movsl
add
ret
sbb
add
jg
mov
test
jge
mov
lds
pop
test
mov
test
int3
xor
mov
xchg
std
test
shlb
hlt
addr16
cmp
stc
out
test
cmp
cmp
out
pop
inc
scas
in
dec
sbb
pop
mov
jae
push
xchg
test
xor
sbb
loopne
jne
addl
repnz
loope
mov
aam
mov
lcall
jl
nop
clc
sub
cmp
xchg
add
mov
sti
push
aaa
mov
lcall
out
jl
sbb
int3
jg
and
bound
mov
icebp
movsl
clc
jmp
push
push
xchg
add
call
out
or
mov
dec
inc
js
out
sbb
stc
pop
and
inc
push
in
and
xchg
jns
xor
cmc
movsb
dec
dec
or
or
push
ficoms
out
add
lds
mov
xor
je
sarb
leave
push
mov
and
je
out
pop
orb
stc
or
in
push
inc
adc
cwtl
sub
mov
push
sub
adc
sub
dec
fbld
shlb
adc
and
rclb
lret
inc
xor
sub
push
scas
cld
negb
sub
mov
leave
cli
mov
xor
jns
inc
scas
adc
ds
lods
push
lcall
jae
push
test
adc
xchg
add
mov
and
fisubrs
in
adc
inc
dec
pop
adc
jb
cmpsl
sbb
cwtl
ret
aaa
js
cmp
loope
mov
jle
xor
dec
and
or
cmpsl
stos
inc
push
test
pop
fldl
mov
scas
sbb
out
jmp
rclb
jecxz
arpl
xor
orb
ficoml
fldcw
movsl
scas
pop
push
repnz
pop
in
xor
sub
mov
mov
push
call
and
sarl
inc
xor
out
cmp
andl
repnz
addr16
adc
pop
shlb
dec
xchg
xchg
xchg
add
cli
lahf
jge
inc
cmp
aad
cmp
xor
push
jle
push
test
jge
dec
cmpsl
fisubs
xor
addb
mov
pop
outsb
int
adc
ja
and
or
cwtl
popf
fwait
push
adc
cmp
or
pop
xchg
sbb
push
daa
jl
hlt
mov
mov
mov
into
add
inc
lock
jns
and
sbb
mov
pop
mov
jl
ljmp
outsb
jg
pop
cmpsb
out
rcr
lea
rcl
sarb
loop
pusha
adc
bound
mov
shl
push
dec
dec
and
mov
test
or
lcall
lret
mov
popf
xchg
in
arpl
adc
mov
xchg
add
lahf
add
stos
sub
xchg
repz
sub
rclb
mov
push
mov
icebp
mov
xchg
enter
lret
push
ja
outsb
stos
cmp
cmp
mov
dec
insb
sahf
movsl
cmp
sbb
loope
sbb
test
test
inc
pop
xchg
in
pop
addr16
ljmp
mov
pop
insl
mov
das
pop
push
pop
adc
lea
sbb
cmpb
and
stos
aaa
inc
sbb
stos
fwait
inc
jae
inc
mov
lods
push
sbb
out
lods
test
cmp
rcll
or
push
push
cmp
lcall
daa
lret
roll
jnp
add
xchg
xor
and
aas
pop
jae
sahf
add
jb
mov
pop
mov
mov
pop
mov
inc
sbb
clc
inc
add
loopne
sub
test
cmp
cmpsb
neg
testl
and
add
xlat
pop
adc
xchg
xor
mov
jne
shrb
sbb
gs
adc
cltd
push
and
add
addr16
mov
dec
mov
in
mov
xor
sbb
in
loop
scas
out
or
pop
clc
sub
dec
lret
std
dec
mov
pop
test
js
pop
addr16
mov
stos
mov
repz
sbb
add
int
cwtl
outsb
je
repnz
jp
jl
out
insb
movsl
loopne
sbb
pop
scas
jns
sbb
or
sahf
inc
imul
mov
sub
mov
stos
cltd
movsb
xor
or
xor
adc
cmp
xchg
or
cmp
pop
dec
push
dec
sti
xchg
push
sub
adc
lret
mov
jae
lods
adc
sbbb
icebp
daa
shlb
cmp
stc
push
into
adc
cmp
xor
ret
shrl
mov
ret
out
fs
pushf
packsswb
in
xor
sahf
xchg
call
jp
and
pop
cmp
xchg
mov
jmp
sahf
mov
lods
mov
imul
fldl
rclb
movsl
dec
ja
ret
sbb
or
push
push
ja
xor
cmovg
cmpb
jbe
in
scas
and
mov
push
mov
es
xor
mov
push
leave
mov
pop
imul
cltd
repz
outsb
test
repnz
xchg
adc
add
jo
adc
hlt
es
stos
adc
dec
insb
icebp
xlat
inc
fmul
mov
leave
xchg
push
cwtl
packssdw
lea
and
sbb
add
sbb
lret
or
sbb
mov
inc
cwtl
movsl
sbb
imul
mov
test
in
test
lds
ret
addb
jns
cmp
jle
stos
imul
adc
aam
and
fstps
outsb
dec
xor
fwait
cmc
or
xlat
sub
pop
ja
push
cmp
paddsw
fnsave
nop
or
sub
mov
or
adc
add
and
test
jnp
xchg
xor
push
movsl
and
pop
mov
dec
popf
add
xor
fld
loop
jge
in
rcl
out
cmp
mov
ret
pop
xchg
dec
xchg
add
xchg
sub
cmp
loop
push
cmp
add
ljmp
insb
mov
rcrl
push
sti
dec
push
jg
xchg
jne
mov
or
dec
addr16
mov
pop
fucompp
pop
in
in
das
data16
mov
xor
lds
sbb
out
and
cmp
in
mov
mov
dec
adc
xor
sbb
in
pop
aaa
in
imul
cmpsl
insl
mov
push
pop
icebp
mov
mov
int
ja
inc
push
fbstp
ljmp
mov
pop
lahf
rol
rcr
aas
cltd
mov
jl
dec
xor
mov
test
adc
xor
rcl
dec
sbb
sub
dec
xor
pop
cmp
rorb
push
and
push
cmp
push
sub
adc
or
jae
or
xor
cmp
mov
mull
ficomps
pop
sub
xlat
add
in
jl
cli
fstl
xchg
mov
ljmp
adc
mov
scas
lahf
daa
and
sbb
loope
ds
or
ret
scas
inc
push
cmp
xchg
inc
in
ja
jns
and
sahf
lret
or
loop
or
lods
mov
adc
das
repz
sti
mov
sub
int
jmp
test
inc
fxch
cld
fsubr
pop
pop
loopne
and
sbbl
cmp
cmpsb
or
mov
rclb
adc
fdiv
cmp
mov
jl
rcr
and
ret
pop
push
outsl
leave
mov
incl
push
lods
cmp
and
clc
pop
mov
mov
daa
movsb
xchg
in
and
loope
jecxz
std
subl
lahf
cmp
mov
inc
cmp
aam
push
mov
je
dec
pop
loop
outsl
out
add
int
or
flds
fsin
xchg
loope
and
fsubs
test
sti
or
repz
mov
jp
loop
inc
rcr
or
sarb
inc
sarb
cmp
sbbl
xchg
int
xor
dec
jmp
xchg
add
ficomps
hlt
outsb
cmc
sub
xlat
pop
and
loope
cmp
inc
sub
test
cmpsb
sub
sub
adc
dec
sbb
data16
lcall
pusha
movsb
mov
ret
ss
fbld
mov
sub
jg
movsl
loopne
lcall
fstpl
out
mov
jno
loope
aad
dec
in
clc
shlb
sub
jl
repz
sub
nop
inc
js
pop
shr
cmp
pop
xchg
subl
lods
cmp
movb
xor
xchg
das
into
dec
pop
mov
outsl
rcrb
mov
sbb
and
nop
push
mov
enter
call
jl
xor
lret
xor
and
push
aaa
cmp
cwtl
push
add
pop
fs
ss
out
seto
daa
and
cmp
icebp
mov
xor
xchg
addr16
dec
arpl
jg,pn
push
push
loop
mov
mov
outsl
loop
cmc
ret
lods
cs
sbb
out
cmp
outsb
xor
xchg
nop
and
jno
mov
push
mov
inc
ja
sbb
pop
fsubrp
push
popf
sbb
int
inc
sub
mov
push
push
in
cmc
mov
or
pushf
sub
and
rclb
es
cmp
mov
loopne
dec
imul
stos
lods
int3
sub
loope
popf
nop
repnz
stc
jmp
add
sub
stos
stos
pop
mov
sub
cmpsl
mov
in
daa
push
jb
push
dec
out
mov
in
or
xchg
sub
data16
add
adc
inc
pause
add
lds
test
sbb
sub
popa
mov
stos
pop
adc
fucomi
xchg
push
push
sub
aas
cmp
cmpsb
push
push
dec
movsl
popa
mov
cmp
lret
jno
fadds
bound
adc
mov
push
int
in
xchg
adc
repz
and
pop
imul
push
mov
dec
xor
and
pop
jg
cli
bound
adc
mov
jecxz
sub
bnd
rcl
and
stc
pop
mov
mov
les
xchg
insb
daa
js
enter
mov
clc
adc
jbe
lahf
mov
in
xor
jo
pop
xor
inc
sub
je
scas
sbb
sbb
mov
mov
cmp
pop
iret
pop
sub
mov
xchg
clc
mov
popf
mov
stos
push
lret
aas
scas
test
out
ss
adc
sti
imul
into
shlb
pushf
dec
test
jecxz
es
sbb
pop
jg
cmp
fbstp
mov
dec
xor
push
push
fisttpll
addr16
scas
jp
push
pusha
push
icebp
sub
popf
rcr
cmp
ret
adc
fwait
xchg
movsb
and
test
sbb
fucomi
sti
adc
adc
dec
ss
and
shrl
or
or
adc
int
test
scas
roll
fcmovnu
subl
int
mov
jge
xor
cli
repz
cmp
in
xchg
sti
cmpsb
push
mov
xor
pop
scas
imul
sbb
mov
in
add
mov
push
repnz
gs
in
mov
jecxz
dec
adc
out
lret
enter
outsl
dec
test
clc
das
mov
les
sbb
add
sub
jo
js
mov
push
icebp
je
out
je
out
push
xchg
es
cmp
fisttpll
sub
sbb
dec
loop
xchg
clc
xchg
cmpsl
fnstcw
icebp
jbe
lret
addr16
mov
push
insb
mov
push
add
sbb
das
inc
mov
xchg
and
cmpsb
push
lods
xor
jbe
jae
aas
popa
aad
mov
fists
push
mov
sub
rcr
pop
rclb
dec
ja
popa
ja
dec
jae
jp
or
inc
pop
std
les
xor
adc
movsl
mov
nop
into
out
sbb
mov
scas
and
jbe
aas
pop
ror
dec
jne
add
addr16
xchg
les
das
lods
aaa
adc
sub
mov
les
lods
shr
cmp
lret
mov
sub
es
popf
testl
lods
enter
lahf
dec
or
xchg
xor
aam
and
icebp
cmp
push
scas
add
notb
lds
movsl
mov
pop
cmpsl
ja
test
aad
mov
adc
cmp
mov
sub
fucomi
mov
test
push
inc
inc
lock
hlt
and
and
stos
lock
rorl
mov
or
mov
push
or
scas
push
cmp
xor
sub
mov
clc
xlat
adc
pop
dec
mov
sub
mov
xchg
sub
stos
ds
lret
cld
xchg
rclb
xchg
fcmove
fiadds
stos
xchg
inc
add
sbb
fbstp
pop
and
dec
and
mov
lahf
jg
dec
dec
pop
adc
and
and
js
pop
or
xchg
lret
push
ret
adc
xchg
mov
and
add
repz
cmpsb
mov
sub
dec
add
mov
push
loope
push
cmp
adcb
jb
adc
inc
pop
jbe
mov
scas
lret
cmp
pop
and
add
sbb
push
mov
xchg
sbb
jo
and
stc
repnz
ss
mov
sub
fincstp
inc
ret
push
inc
test
add
sub
xlat
fldcw
sbb
add
xchg
dec
mov
dec
call
stos
stos
jmp
movsb
xchg
push
cld
sbb
jo
pop
xchg
andb
pop
and
scas
arpl
mov
jbe
loop
pusha
test
hlt
orb
mov
movsb
sub
mov
push
daa
mov
call
xchg
or
jbe
and
mov
repz
xacquire
out
into
ja
cmpsb
sti
push
int3
lcall
fisttps
pop
in
mov
xor
adc
cmp
mov
add
push
outsl
sti
xchg
push
in
mov
cmpsb
aam
xchg
ror
pop
pop
cs
fwait
xchg
add
push
push
xchg
icebp
dec
and
mov
out
lahf
movsb
dec
ret
pop
mov
ja
adc
xlat
xchg
push
ja
inc
in
insb
cmp
icebp
in
cmp
inc
scas
pop
mov
stos
scas
pop
sub
and
js
sahf
inc
bound
orl
mov
push
sbb
cli
mov
mov
xor
mov
addr16
jp
fs
push
jl
push
arpl
cmp
mov
mov
dec
dec
fs
lcall
xor
jp
pop
aad
rclb
dec
xchg
roll
dec
jne
int3
jno
inc
dec
mov
iret
add
push
dec
nop
mov
mov
fimuls
jnp
xchg
rcrb
arpl
fsubr
jbe
das
add
or
mov
loop
pusha
add
pop
pop
fwait
pop
hlt
jae
stos
sub
mov
call
push
icebp
xchg
or
add
in
pop
mov
push
test
mov
or
movsl
or
and
rorl
xchg
inc
and
fwait
ja
xchg
adc
pop
cltd
pop
mov
sarb
mov
aaa
or
cld
jns
cmp
das
inc
jecxz
or
mov
ss
fistpll
inc
inc
sub
outsb
jmp
inc
js
cmpsl
aaa
rolb
add
test
jmp
add
and
xorb
lea
push
cltd
or
loopne
mov
loope
mov
mov
hlt
test
mov
stc
std
aad
lahf
mov
pop
shrl
mov
int3
cmp
in
gs
mov
mov
ret
inc
push
aam
mov
movsl
xchg
bound
rcl
les
adc
xor
outsl
test
call
gs
fdivl
mov
jecxz
insb
icebp
call
xchg
ret
dec
adc
fistps
dec
mov
fisubrs
inc
inc
imul
mov
xchg
pop
cltd
dec
test
jnp
sbb
xchg
int3
jno
pop
call
mov
loope
pop
and
sbb
add
or
pushf
pop
repnz
insl
pop
jo
es
mov
leave
push
push
std
insl
xchg
lret
jl
arpl
insl
sub
xchg
lahf
and
xor
icebp
out
dec
inc
xlat
std
xor
push
and
sbb
cmp
lahf
or
insl
mov
test
jno
sbb
std
lcall
xchg
jmp
mov
mov
or
sub
dec
std
faddl
mov
bnd
push
push
mov
bound
rorl
cmc
fs
pop
sti
cwtl
arpl
dec
fistps
dec
mov
enter
hlt
sub
xchg
stos
dec
call
and
jecxz
movsb
aas
aaa
jge
outsl
rclb
fsubrs
pop
orl
and
lods
iret
rcr
cli
stc
loop
add
cwtl
insb
lret
add
dec
adc
mov
std
inc
roll
xchg
dec
and
xor
pusha
inc
cmp
dec
xchg
cmc
xor
mov
aaa
xchg
test
cmp
xchg
mov
inc
imul
sub
xchg
fldcw
rcr
outsb
or
inc
mov
cmp
xchg
inc
dec
mov
xchg
fisttpl
mov
movsb
jg
bound
aam
add
in
mul
repz
std
lods
or
cltd
out
cmp
mov
xor
inc
popf
orb
jmp
ret
push
fisttps
cmpb
cmpsb
push
lods
lcall
push
cmpsl
mov
pushf
lea
scas
or
lret
mov
add
xchg
dec
sbb
sub
and
cmp
popf
sub
es
pop
inc
lock
mov
jno
popa
sbb
dec
adcb
jl
fldenv
leave
pop
lret
add
inc
ljmp
or
xlat
jg
mov
shr
mov
fstl
pusha
out
dec
ss
loope
inc
cmp
sub
jl
jb
aas
nop
adc
sub
daa
push
xor
jge
mov
insb
fistpl
mov
clc
mov
xor
mov
sbb
pop
mov
jl
xor
movsb
and
loope
loopne
or
lahf
pop
movsb
push
arpl
or
cpuid
mov
xorl
out
xchg
subl
cwtl
add
dec
xchg
repz
dec
xchg
inc
cmp
shl
ret
inc
lahf
dec
xor
outsb
cli
sbb
mov
scas
push
lret
pop
sbb
imul
adc
stos
mov
bswap
cmp
push
adc
lcall
adc
seta
mov
jbe
insb
inc
inc
push
dec
enter
pop
mov
lock
out
sbb
jb
test
aas
or
mov
mov
fsts
jno
or
adc
aam
inc
movsb
and
mov
mov
lret
int
ss
pop
mov
adc
scas
xor
stos
mov
mov
mov
outsb
xor
in
mov
call
lahf
test
test
xchg
push
push
shlb
mov
pop
or
mov
call
mov
fisttpll
pop
mov
setnp
inc
test
dec
push
decl
js
rcrl
and
cvtps2pd
clc
aas
push
jo
pushf
or
pop
fiadds
push
rorl
rorb
adc
and
idivb
mov
jmp
mov
or
dec
sub
in
adc
mov
mov
ficoml
add
cmp
jno
jp
jbe
adc
sub
lcall
mov
imul
fnstenv
int
push
pop
xchg
jbe
and
repz
sub
stc
mov
sarb
aad
cli
das
outsl
xor
lods
ret
jp
call
or
mov
mov
mov
les
mov
mov
outsl
jmp
popa
xchg
jo
mov
mov
and
xor
sub
add
mov
insb
cmpsb
xchg
negb
jo
and
mov
inc
call
repz
jo
sub
bswap
adc
jo
std
push
daa
add
loop
dec
or
jecxz
mov
pushf
mov
jmp
aam
push
jne
jnp
xchg
jae
shl
shll
cmp
enter
scas
add
mov
rcrb
jnp
roll
sub
sub
lds
push
fcmovnu
mov
jmp
cmp
dec
cmpsl
pop
jge
inc
push
insb
pop
add
cs
outsb
jnp
mov
inc
sbb
adc
lea
fmuls
pop
dec
loope
fsubs
add
jnp
pusha
mov
cmp
jne
jmp
leave
lock
in
xchg
scas
mov
outsb
outsb
repnz
fisubs
mov
xor
mov
mov
outsl
cmc
fistpl
sub
movb
or
test
aad
imul
xchg
jecxz
xchg
out
pop
nop
dec
stos
adc
xor
jns
cmp
inc
add
sub
ljmp
dec
mov
pop
in
clc
bound
test
in
ljmp
cmp
neg
jns
cmc
repz
xor
adc
in
mov
test
popa
ffree
stos
xchg
stos
inc
pushf
mov
lcall
jno
xchg
jl
in
or
lods
cltd
sub
jmp
cs
dec
mov
sbb
jle
cmp
and
mov
jge
jne
sub
lcall
pop
mov
pop
bnd
test
jne
adc
iret
and
in
jno
fimull
and
fmulp
sbb
xchg
inc
sbbl
inc
dec
adc
mov
push
inc
lock
adc
cmp
rcrl
icebp
shll
xor
cmp
jbe
cmpl
dec
popf
cli
pop
mov
movl
cwtl
mov
mov
mov
adc
rcl
mov
shrl
arpl
in
mov
add
cmp
dec
xchg
jl
add
int
call
xchg
add
std
add
imul
stos
ret
sub
cmc
fstpl
into
fwait
das
mov
cmpsl
shlb
nop
sbb
lcall
xchg
inc
mov
jae
stos
xchg
lret
mov
pop
jge
shrl
jg
pop
notb
cs
bound
and
frstor
pushl
repnz
lods
sub
add
push
adc
sbb
in
xorl
sahf
ss
add
mov
xor
orl
clc
mov
mov
sub
stos
aad
not
fs
xchg
lea
mov
cmp
and
jmp
add
stos
mov
repnz
fsubl
dec
out
jb
or
test
pop
fnstcw
repz
fstps
lret
jo
leave
ret
ret
stos
jg
and
test
rolb
fucompp
mov
ret
sub
pop
in
dec
fsubrl
sub
mov
jae
sbb
mov
pop
sbb
jg
jnp
mov
mov
and
fwait
push
cmpsb
sub
scas
jae
push
addr16
mov
or
rorb
or
hlt
jno
in
pusha
rcll
push
xchg
das
fwait
sbb
fimull
xchg
jg
inc
lea
mov
addr16
mov
pushf
push
adc
xor
adc
inc
push
gs
push
push
das
je
popa
add
push
jp
sub
das
and
sbb
mov
add
mov
std
mov
fadds
sub
mov
add
xchg
xchg
or
sub
mov
es
mov
jg
push
add
scas
add
mov
push
imul
je
cmp
loopne
cmpsb
imul
mov
and
scas
jle
mov
xor
inc
mov
and
gs
repnz
mov
nop
icebp
and
push
fucomip
rcrb
pusha
push
rorb
jnp
jp
lret
add
rclb
add
outsb
xchg
jne
stc
and
push
call
mov
cmp
cmp
data16
push
push
icebp
bound
ret
negb
or
sbb
mov
pop
mov
push
sbb
inc
cmp
jbe
jne
cmp
addl
in
popa
sbb
aaa
stos
int
pop
movsb
sbb
dec
add
pop
xchg
pop
rorl
adc
push
push
ja
pop
shrb
repz
stc
mov
clc
mov
mov
push
orb
push
mov
jb
loope
arpl
mov
mov
das
pop
hlt
adc
mov
xchg
lahf
cs
inc
xchg
dec
ror
or
sarb
fldl
sub
lret
sub
loope
fwait
sbbl
cmp
pop
movsb
sub
and
les
test
jmp
or
cmpsl
cmp
xlat
insb
mov
push
daa
mov
in
add
sub
mov
cmp
pop
mov
mov
stos
xchg
sub
sbb
and
incl
shrb
xchg
lret
fcmovne
rcrl
push
mov
es
sbb
fwait
mov
xor
movsb
cli
cld
neg
outsb
dec
fisttpl
popa
outsl
sbbl
int
stos
aam
mov
movsb
push
lds
js
xchg
shl
mov
mov
mov
ficompl
add
loop
or
mov
andb
mov
shll
lahf
or
xchg
sahf
sub
je
in
xchg
ret
add
push
lock
arpl
mov
dec
inc
mov
sub
lcall
and
test
inc
or
out
hlt
inc
pop
adc
xor
jge
test
andb
push
and
call
aaa
pop
xchg
jp
mov
out
int
stc
mov
stc
xchg
sarb
clc
js
repnz
scas
rolb
pop
lret
xchg
sub
aam
lea
mov
mov
fisubrl
lods
cli
add
xor
add
xor
pop
jmp
addr16
in
inc
addr16
test
inc
ret
fwait
popf
push
fwait
test
lahf
insl
pushf
push
mov
aas
clc
js
aaa
int
repnz
and
mov
sub
repz
xlat
mov
out
mov
xchg
ljmp
sub
pop
pop
cmp
hlt
add
adc
movsb
out
int
fildl
mov
test
cmp
mov
jp
jae
stos
push
adc
mov
test
dec
mov
out
popa
aas
imul
out
cs
mov
sbb
imul
lods
cli
bound
xchg
sbb
push
not
cmp
jno
inc
ss
sbb
ljmp
lds
mov
cmp
or
adc
jmp
sarl
lcall
rolb
sbb
mov
sahf
sbb
ds
popf
dec
lods
dec
shrb
push
push
cmc
push
cltd
pusha
dec
lods
and
mov
mov
push
mov
push
push
mov
in
cmp
mov
adc
loopne
out
test
rcrb
cwtl
test
rcll
fdivl
xor
loope
stc
pushf
jbe
jae
iret
rolb
movb
cmp
aad
inc
daa
lret
popl
in
cmp
js
push
fcmovnu
sub
stc
daa
inc
mov
into
movsb
adc
mov
lret
xchg
mov
sbb
mov
sbb
je
inc
xor
jl
shrb
stc
pop
pop
mov
jmp
inc
cmp
add
movsl
sbbl
cli
mov
insb
fs
jl
js
jbe
mov
add
lcall
mov
fistpl
xchg
push
clc
inc
adc
inc
push
xchg
jmp
xor
xor
xor
shrb
adc
push
testb
xchg
mov
sbb
out
or
mov
add
mov
pop
and
xchg
xchg
or
pop
push
sub
jp
sbb
adc
fiadds
xor
push
and
mov
outsl
je
jnp
xchg
das
test
and
stos
aam
xchg
in
xor
add
xor
dec
int3
stc
data16
adc
pop
test
add
dec
push
hlt
pop
jae
sbb
adc
or
adc
cmp
js
addr16
mov
xchg
xchg
add
hlt
rcr
adc
sub
mov
mov
xlat
fs
inc
dec
aad
lcall
je
enter
shlb
lods
jae
jl
or
xchg
mov
xchg
lods
clc
push
clc
call
mov
rolb
mov
scas
scas
int
mov
shrb
inc
stc
dec
test
inc
rcrb
cli
jl
roll
rol
dec
push
cmp
call
mov
divb
outsb
cmc
and
lods
pushf
or
cs
jg
jmp
cmp
bound
mov
cli
adc
ficoms
es
hlt
xor
jbe
push
mov
jbe
xor
hlt
adc
lret
xor
test
daa
fcompl
arpl
test
gs
pop
scas
push
and
pop
mov
addr16
lea
inc
cmp
ret
ret
nop
pop
and
icebp
adc
ljmp
das
popf
lcall
cmpsb
push
in
iret
sub
into
fdivrs
push
lahf
add
add
mov
loope
inc
jecxz
and
cltd
cmc
fiadds
lock
cmp
out
push
pushf
ret
aas
enter
ret
test
pop
je
mov
sbb
and
in
stos
out
aaa
hlt
lock
sub
aas
sbb
sbb
mov
xor
bnd
pop
pusha
icebp
mov
xchg
popa
je
jno
aam
push
dec
lret
nop
subb
cmp
add
fsub
sti
dec
rcrl
aas
cmp
mov
add
mov
pop
jne
dec
sub
mov
pop
hlt
lret
add
shlb
dec
decb
dec
xor
and
cmp
adc
hlt
std
cltd
aas
or
das
jge
aas
outsb
push
fldenv
into
mov
add
dec
jbe
inc
aam
jae
lods
push
cmpsl
icebp
jbe
adc
lcall
out
js
push
pop
xchg
repz
addr16
jg
jns
aad
stc
fwait
pop
loopne
jp
in
push
sbbl
test
mov
out
jecxz
push
cld
push
pop
pop
pop
xor
fsubrl
gs
loopne
movsl
cwtl
add
mov
sbb
fnstenv
cmp
push
fdivrs
test
pop
mov
mov
hlt
mov
xchg
pop
lea
into
movzbl
xorl
inc
aad
cmp
xor
imul
adc
outsl
dec
aas
mov
inc
pusha
test
and
xchg
xchg
aam
loop
and
jle
and
jne
jae
mov
add
popa
fwait
adc
inc
pop
mov
jl
mov
or
and
cmpsb
xchg
mov
mov
jnp
insl
lret
and
shlb
pop
insl
std
jl
sti
out
sub
sbb
pushaw
insl
cmpsb
and
push
mov
sbb
insl
ja
fyl2x
xor
frstor
out
cli
dec
aas
pop
dec
hlt
cmp
pushf
out
jnp
pop
out
lret
std
aam
inc
mov
cmp
add
pusha
sbb
mov
das
or
ss
mov
orl
or
ljmp
jbe
push
test
fadds
mov
jg
xchg
adc
xor
int3
jp
cmp
inc
shl
or
cwtl
add
lcall
fisttpll
rorl
push
pop
ss
or
cld
mov
clc
mov
inc
jo
stos
repnz
outsb
jae
lcall
xlat
pusha
insl
xchg
add
jg
mov
sti
jne
fnstenv
lods
in
mov
jnp
pusha
je
fcomip
loope
xchg
mov
lea
jb
mov
push
lock
imul
adc
test
lock
inc
mov
mov
mov
add
sbb
imul
cwtl
xor
cmp
ljmpw
out
xchg
lahf
aad
sbb
test
popf
enter
mov
pop
loopne
and
add
xor
div
bound
push
out
push
and
leave
mov
xor
aam
bound
fs
push
loopne
insl
aad
fucomp
icebp
sub
dec
mov
xchg
xchg
movsb
cs
enter
cmp
out
jge
daa
fs
clc
in
dec
cltd
cmp
nop
adc
mov
cmp
ljmp
arpl
leave
xchg
xchg
fdivl
mulb
cltd
cs
sub
cmp
adc
mov
fildll
ret
inc
addl
sbb
xchg
jg
idivb
cmp
ja
outsb
test
test
or
lret
imul
xor
mov
bound
aam
into
ret
push
push
test
and
mov
push
and
sbb
push
lods
mov
add
cmc
inc
pop
lods
enter
adc
sti
popf
or
imul
jg
or
add
push
jge
mov
imul
outsb
and
mov
or
repnz
test
push
imul
add
jae
mov
jmp
je
sti
fisttpl
ret
mov
jb
lds
xor
negl
int3
fs
filds
mov
out
pop
mov
and
pop
mov
fs
add
or
pop
out
leave
cltd
mov
jne
shr
jge
cmp
mov
inc
out
cmp
pop
jp
xchg
mov
jp
loopne
push
pop
cmp
ljmp
mov
mov
push
outsl
adc
fld
iret
in
das
inc
fimull
mov
xor
mov
pop
pushf
std
adc
cmp
push
das
mov
xchg
ljmp
pop
and
xchg
popa
cs
das
insb
rcl
mov
mov
jbe
adc
add
js
loop
mov
pop
out
je
pusha
sti
inc
loope
ficoml
xchg
xor
jns
xchg
cmpsl
add
jecxz
clc
out
dec
pop
enter
mov
shr
and
xor
inc
data16
data16
lret
stc
testb
fnstsw
nop
jbe
movsb
es
mov
sbb
mov
aaa
pop
lods
sbbb
mov
cmp
adc
sahf
adcb
sbb
fwait
ret
scas
sbb
fsubrs
cmc
ret
insb
dec
add
aaa
jle
inc
outsb
in
jmp
clc
mov
ljmp
adc
mov
fstpl
dec
ret
ds
out
ljmp
bsr
adc
std
fisubrl
jp
sahf
scas
pop
data16
leave
clc
ljmp
enter
mov
jb
sub
scas
or
mov
xlat
xor
outsl
ljmp
repnz
rcrb
xchg
not
repz
sbb
icebp
cs
mov
and
xor
je
ljmp
jle
cmc
insb
jnp
inc
jp
ret
je
les
lock
cmpsb
adc
outsl
lahf
inc
jbe
jle
xor
sub
add
inc
xor
cld
pushl
push
out
xlat
sub
add
enter
enter
sub
push
xor
ret
loope
popa
add
sub
adc
cld
mov
loop
test
mov
xor
mov
or
jnp
lds
push
scas
stos
adc
cs
inc
xlat
adc
pushf
jp
cmp
cmpsl
ja
mov
push
arpl
shl
xchg
and
inc
insl
or
dec
nop
xchg
in
scas
dec
std
dec
loopne
sbb
push
outsb
lret
fimull
pop
or
adc
scas
mov
mov
loope
xchg
and
ret
cmpsl
cld
test
mov
dec
xor
repnz
cmp
incb
and
push
bound
or
mov
clc
and
mov
adc
cmp
scas
and
adc
mov
and
stos
push
mov
dec
xorl
popf
out
jno,pn
rcr
push
pushl
ds
mov
outsl
pop
sub
out
add
test
cli
pop
data16
pop
mov
mov
lret
xchg
xor
fidivrs
add
mov
and
shlb
push
imul
ret
test
sub
clc
clc
xor
outsl
add
lods
and
sub
add
psrlw
or
bound
pop
divl
adcb
pop
in
cmp
push
dec
push
data16
icebp
int
push
mov
pop
mov
shrl
jnp
mov
or
mov
and
sbb
jae
fldenv
ret
adc
lcall
test
insb
sbb
aaa
mov
imul
aaa
call
xchg
sub
in
push
xor
jno
jle
jecxz
pop
sub
mov
dec
and
inc
leave
jle
or
xor
pop
mov
test
in
inc
inc
call
out
cmp
movsl
mov
inc
in
xor
in
sub
subb
cli
fdivrs
pop
movb
pop
add
jb
xchg
shll
jno
hlt
mov
mov
imul
and
mov
sti
xlat
fcomps
adc
and
fiadds
and
cmp
pop
out
mov
sar
into
dec
fcoml
xchg
call
mov
push
pop
insl
cmc
lock
btcl
ljmp
and
pop
int
loop
mov
out
stos
xchg
aaa
push
lods
cmc
xorl
insl
fdiv
add
pop
nopl
iret
push
fxch
leave
fptan
and
pop
lcall
fwait
jmp
pop
inc
fcmovb
das
rcl
incb
mov
push
or
lds
aad
push
in
xor
movsb
fs
mov
mov
mov
lock
sub
inc
cmp
sub
shl
inc
mov
repnz
xor
mov
lret
pushf
sbb
adc
pusha
or
lcall
ss
jmp
sub
out
jecxz
mov
or
mov
jg
sub
lea
cli
and
pusha
push
addb
out
xor
sub
jmp
pop
mov
loop
cmp
cmp
push
cmp
xchg
inc
test
ljmp
aas
ret
push
push
in
lret
push
cmpsb
loop
mov
mov
in
mov
inc
xor
adcl
jb
mov
shr
jmp
fcmovb
pusha
and
data16
popa
call
rolb
or
icebp
mov
add
dec
ret
test
pop
mov
mov
test
jle
outsb
xor
and
cltd
lahf
inc
pop
xor
stc
aas
mov
pusha
mov
lcall
andb
sub
imul
aaa
jo
or
xor
insb
mov
inc
cmp
jg
push
insl
jmp
mov
mov
inc
mov
xor
push
xchg
mov
mov
cmp
lock
cltd
scas
jb
movsl
call
shll
xchg
sbbb
outsl
stc
push
inc
lds
mov
sbb
scas
inc
les
lods
xor
rclb
pop
mov
movq
mov
xchg
insb
call
xor
jo
or
sub
pop
xchg
mov
push
leave
inc
addr16
loope
shrb
dec
inc
lds
push
mov
jnp
xchg
imul
out
pmaxsw
cmpsb
cltd
repz
adc
jecxz
testb
cmp
sbb
loop
cmpsb
dec
jnp
insb
ds
cwtl
pusha
ljmp
data16
sbb
popf
jae
int
inc
in
xchg
orb
mov
shll
jnp
or
push
aam
or
imul
popf
cmp
push
mov
pop
ja
jecxz
pop
cmp
inc
stos
test
add
out
dec
lds
jmp
xlat
imul
lret
mov
gs
hlt
iret
mov
rcrl
mov
add
enter
and
orl
mov
cwtl
jne
jnp
aad
das
ret
inc
in
dec
jbe
or
call
or
nop
cld
inc
movsl
cmp
gs
stos
mov
jnp
out
cltd
cmpl
xchg
jno
and
pop
sbb
push
bnd
inc
int
dec
ja
xchg
push
push
or
xchg
push
lahf
pusha
and
mov
mov
out
insl
scas
cmp
cmpb
mov
lahf
inc
pop
adc
pusha
in
xchg
in
fidivl
xor
arpl
lahf
and
stos
pop
xor
jmp
lds
lret
cwtl
xchg
and
je
fs
mov
or
sub
inc
sbb
mov
pop
lcall
pop
mov
jbe
mov
or
inc
dec
cmc
inc
outsl
pusha
ficoml
out
dec
sub
lods
ss
cmp
repnz
push
js
addb
ret
jb
add
dec
cmpsb
lods
jp
xor
xor
push
dec
cld
imul
pop
stc
je,pn
pop
shll
orb
mov
and
aam
adc
subl
sbb
jo
sbb
outsb
jns
mov
pop
add
scas
pop
fdivl
pop
jle
cmc
outsl
push
loop
xor
mov
dec
xorl
jae
or
and
cmp
push
into
mov
dec
aaa
and
pop
inc
imul
lret
insl
pop
jecxz
pop
pop
inc
repnz
push
mov
movsl
test
pop
cmp
mov
lea
sbb
mov
sub
test
xor
insb
iret
imul
mov
das
sbb
call
out
fnstcw
out
test
stc
xchg
add
pop
aas
fwait
in
roll
mov
lock
sti
push
lahf
mov
add
lahf
pop
adc
movsl
and
and
xor
sub
insb
fidivrl
pop
nop
mov
jo
in
dec
or
sub
les
jno
leave
sahf
fwait
or
sub
test
dec
xor
xlat
mov
jge
xor
mov
imul
js
notb
cs
pusha
add
pushf
inc
mov
dec
cmp
or
test
mov
inc
dec
inc
jnp
dec
mov
in
imul
ja
jns
inc
rcl
stos
stc
dec
xor
inc
jno
sub
xlat
pop
pop
int
or
cli
lods
test
jl
fisubrs
enter
mov
xchg
gs
xor
xchg
adc
xchg
mov
psubsw
addr16
divl
addr16
in
shrb
int
or
fadds
mov
and
and
adc
adc
xlat
jno
sub
jl
mov
jecxz
sbb
push
iret
cli
xchg
clc
notl
test
outsb
push
popa
in
shlb
das
jecxz
repz
sub
xchg
and
loope
fwait
out
mov
mov
push
or
test
outsl
pop
or
cli
cld
inc
push
ja
sbb
test
mov
jle
or
or
roll
int3
add
or
push
in
push
ret
cmp
push
pop
imul
insl
mov
int3
sub
mov
jbe,pn
loopne
mov
push
sub
aam
jne
inc
push
push
lret
pop
scas
addr16
out
xor
test
aam
inc
xor
hlt
pop
mov
cmp
sub
cltd
sub
lcall
cltd
sbb
pop
pop
xchg
ja
and
mov
xchg
iret
int
inc
lret
sbb
mov
bound
sub
jbe
xor
cwtl
lret
sbb
adc
rorb
int
xor
orb
insb
pusha
enter
cmc
jae
cli
xor
sti
jnp
push
scas
sub
adc
mov
dec
out
out
dec
mov
fimuls
mov
shlb
int
fwait
call
push
mov
in
mov
ss
insl
sub
out
aam
xchg
mov
sbb
inc
xor
test
inc
mov
xor
shlb
aas
out
lret
enter
mov
arpl
into
or
mov
push
jecxz
and
xor
lahf
or
adc
dec
jae
jl
mov
jge
xchg
imul
sbb
inc
jne
mov
cmpsb
xchg
mov
pop
cli
nop
imul
cmp
out
jo
xchg
sbb
or
imul
dec
or
or
add
mov
dec
ret
pop
popl
popa
dec
pusha
adc
call
into
and
fwait
loopne
sub
clc
cmpb
imul
pushf
mov
loopne
push
int
shl
dec
xchg
cmpsb
sarb
iret
or
imul
mov
subb
push
jmp
push
xchg
push
push
push
cmc
lods
add
ja
sahf
dec
inc
test
scas
out
jecxz
cmp
out
inc
push
lahf
sahf
ret
pushf
rcrl
mov
add
pop
xchg
push
mov
sub
add
lret
sbb
ficoml
xchg
inc
cmp
test
and
ficoml
jg
stos
xchg
lds
sub
lods
loopne
mov
add
dec
in
add
sarl
imul
jle
outsl
loopne
dec
sbb
mull
jg
fldenv
inc
scas
xlat
incb
cmp
inc
dec
loope
inc
imul
mov
fsubl
fdivrs
jmp
loop
sbb
jge
push
jmp
insb
jno
ja
cs
iret
cmp
mov
xor
lods
lds
in
dec
inc
push
mov
lds
pop
xchg
test
adc
ret
pop
in
mull
jle,pt
mov
mulb
cmp
cmpsb
outsb
fwait
sbb
subl
xor
clc
lods
mov
lcall
add
divl
loope
inc
and
test
in
imul
dec
sti
les
dec
aas
movsb
adc
mov
add
fnstsw
push
mov
loope
in
xchg
xor
sub
and
mov
or
fcmovbe
inc
or
or
mov
mov
call
arpl
shll
das
dec
dec
das
or
in
daa
pop
rclb
mov
xor
push
xor
test
out
push
movsb
push
js
jno
jp
sarb
adc
daa
hlt
std
jge
sub
dec
mov
xchg
pushf
sbb
cmpsb
xchg
iret
out
cs
lds
std
lock
jae
mov
dec
pop
bound
std
pop
in
fiaddl
cmp
sarl
std
in
mov
fwait
sbb
cmp
rcll
lds
pusha
ret
pop
cmp
out
roll
mov
orl
fadds
pushf
xlat
add
mov
lods
cmp
sub
fildll
lret
int
xchg
cmp
scas
xchg
inc
jmp
sbb
pop
je
push
sub
clc
daa
adc
pop
sub
pop
fcmovnu
sub
cld
rcll
xchg
mov
lret
mov
or
dec
shll
gs
pop
and
add
and
or
add
xchg
sub
cwtl
sbb
stos
pop
idivb
pop
int3
jge
sub
mov
pop
cmc
jg
mov
js
fucom
mov
xor
xor
rsqrtps
inc
jbe
sub
rcrl
ds
cmc
mov
cmpsb
xchg
cltd
cld
jge
in
adc
popa
xor
cltd
mov
sub
push
cmp
test
clc
mov
pop
out
jp
mov
popf
shrl
xchg
mov
out
dec
ret
cmpsl
stos
jge,pn
fisubrs
leave
mov
lods
pop
pop
arpl
rcrb
lea
imul
cmpsl
push
add
xor
mov
pop
test
cmc
loopne
movsl
lds
ret
and
add
dec
out
xchg
es
sbb
xor
aaa
insb
cmp
mov
imul
xchg
icebp
pop
hlt
das
jbe
stc
xor
leave
xchg
sub
pop
adc
push
push
jb
fucom
jo
arpl
loop
sbb
mov
shl
lret
sub
sub
fdivrs
inc
jge
adc
xchg
mov
xor
and
outsl
aas
or
sbb
into
ss
adc
stc
repnz
dec
in
int3
outsb
test
lahf
xor
imul
into
add
stos
and
pop
test
inc
fmull
mulb
dec
enter
add
xchg
mov
aad
inc
mov
push
mov
jl
sbb
xchg
cli
xor
sub
jne
les
stos
arpl
negb
cli
mov
adc
pusha
xor
cmc
sbb
dec
sahf
rcrb
into
fcmovu
fidivrs
cltd
cmc
xor
fnstenv
fsubs
jle
jbe
or
ds
fcmovnbe
rcl
movsb
popf
loope
sub
add
mov
pop
mov
xor
sbb
jle
cwtl
or
imul
dec
push
inc
cmp
ljmp
jns
cmc
mov
cmp
test
inc
push
push
arpl
movsl
mov
push
mov
jge
jo
adc
test
dec
inc
add
xorb
lahf
bound
pop
dec
pop
mov
cwtl
loopne
pop
or
jle
adc
or
inc
xlat
lods
fsubs
sti
jb
das
push
add
xchg
lea
int
xchg
cmpsl
pop
imull
mov
je
jle
in
andb
mov
cli
fdivr
int3
lea
dec
or
cmpsl
fnsave
rcll
lods
jbe
ficomps
adc
cmp
dec
inc
roll
dec
or
cmpsl
jle
je
mov
out
sbb
mov
mov
adc
dec
sbb
pop
or
dec
in
imul
insb
lahf
xchg
into
scas
sub
mov
cmp
insb
push
adc
jno
add
jmp
ljmp
test
add
enter
cld
mov
xchg
inc
fnsave
adc
add
mov
scas
sbb
jp
xchg
pop
xchg
xor
sbb
repz
arpl
mov
or
jle
out
add
and
xchg
xor
push
jbe
pop
inc
push
and
les
aam
mov
or
aaa
mov
les
mov
xorl
jb
imull
sti
es
sahf
imul
iret
loope
repz
dec
xor
lea
push
scas
into
mov
andb
pop
inc
mov
inc
mov
mov
pushf
fisubs
pop
xor
inc
loope
jge
rcll
xchg
mov
outsb
and
in
insl
lret
addr16
insb
insl
mov
movsb
pop
jno
sbb
fldcw
das
sub
cmp
cmp
aaa
xchg
adc
push
inc
adc
insb
int3
stos
jns
mov
sbb
sbb
inc
ret
sub
jbe
out
dec
mov
mov
or
push
dec
xchg
xchg
dec
cmp
cmp
bound
dec
inc
dec
mov
push
aaa
test
inc
rolb
in
inc
int3
or
or
negl
xchg
pop
dec
lret
mov
jbe
inc
sbb
out
imul
fsubs
jmp
std
fs
negb
ret
inc
add
ss
xchg
arpl
or
and
mov
clc
sbb
add
lret
mov
mov
leave
sub
cmp
dec
push
cmp
repz
daa
and
orl
jnp
mov
jmp
js
in
lods
dec
pop
mov
cmc
dec
jl
pop
sub
pop
sub
insl
stos
cmp
imul
xchg
pop
or
mov
sub
mov
rorl
lcall
jecxz
pusha
stos
loope
out
out
sbb
pop
sub
jo
loope
dec
imul
xchg
adc
jp
repz
int3
jb
scas
cmp
rolb
popf
imul
sahf
mov
dec
in
xor
add
mov
dec
stc
ret
int
pop
out
xchg
cmp
xchg
add
push
or
inc
cmp
push
pop
add
ja
xchg
mov
pop
test
test
adc
and
bound
sub
int
mov
es
mov
inc
gs
mov
mov
push
sbb
in
icebp
mov
mov
mov
inc
imul
icebp
sub
test
loop
jns
iret
out
in
xchg
and
data16
xchg
mov
outsl
push
cld
test
pop
das
pmuludq
stos
fldenv
xor
jnp
adc
mov
xlat
lret
shrb
dec
pop
or
ds
shrb
cmp
ljmp
rclw
or
and
jmp
dec
mov
sub
add
xchg
movsb
push
mov
xchg
push
aaa
rdtsc
pcmpgtw
fiaddl
jb
fsubl
xchg
and
icebp
sbb
mov
mov
imul
ret
push
in
jge
jo
subb
push
sarb
out
cmp
jns
lock
sbb
adc
scas
out
mov
fiadds
mov
xchg
ficoms
ss
or
xchg
scas
dec
inc
inc
subl
xchg
lods
cs
mov
loopne
repnz
dec
cli
movsb
clc
mov
in
xchg
js
xchg
aam
test
inc
imul
and
xchg
lods
adc
dec
sub
icebp
nop
lret
or
or
insl
pop
add
xchg
jp
mov
popa
in
fcompl
lods
out
mov
fmull
jb
int3
out
lret
or
cmpl
cmp
cmp
mov
outsl
in
cltd
sub
jne
xchg
pop
inc
fadd
jns
into
cmp
push
sub
insb
out
jecxz
push
sub
mov
mov
push
push
add
movsl
sub
and
xor
mov
fisubrs
sbb
incl
movsl
pop
int3
dec
inc
jmp
in
test
mov
pushl
sbb
hlt
xor
xor
dec
outsb
push
out
fcmovnbe
hlt
lret
insb
mov
inc
sbb
jp
xchg
nop
sbb
dec
int
cmp
cltd
inc
xchg
xchg
xchg
sub
in
mov
pusha
or
fbld
cmp
sub
dec
lods
cwtl
mov
xor
mov
ja
mov
jne
jae
sbbl
fdivs
mov
push
sbb
int3
ret
test
dec
daa
xor
push
mov
sub
mov
sub
and
fwait
mov
adc
cs
pop
imul
repz
aad
mov
out
sbb
cmp
xchg
imul
imul
iret
mov
add
pop
imul
sbb
es
sahf
out
mov
pop
mov
or
addr16
inc
outsl
dec
adc
aas
jns
pop
mov
mov
inc
daa
push
cld
stos
dec
cmp
inc
testl
mov
mov
jge
sub
ss
mov
pop
lahf
xchg
xor
xchg
sub
cld
xorl
fisubrl
inc
aaa
xor
cmp
mov
das
fsub
mov
xchg
ja
mov
loope
lret
adc
dec
xor
and
je
jp
fdivrp
aas
jne
xor
inc
enter
and
das
inc
ss
adc
dec
imul
sbb
sub
pop
lret
cltd
push
mov
cmp
sub
js
xchg
pop
in
insb
insb
dec
lods
mov
and
lcall
inc
dec
fldt
data16
jne
data16
ret
xor
add
aad
incb
sbb
sub
in
add
fbld
and
out
xor
ss
pushf
jmp
xchg
mov
xor
add
xchg
ret
adc
mov
push
mov
out
push
jnp
enter
out
scas
cmp
cltd
fisttpl
push
and
ljmp
or
test
cld
fidivl
in
mov
pop
negb
out
and
pop
xor
mov
adc
lods
add
iret
adc
neg
or
or
lcall
push
imul
lcall
in
inc
mov
loop
arpl
fimuls
ss
xor
loopne
dec
outsl
jl
stos
mov
lds
cli
pop
adc
xor
dec
stos
addr16
mov
mov
ret
pusha
arpl
pusha
out
imul
fnstcw
and
popf
dec
fldl
pop
sub
cmp
jmp
jbe
add
mov
mov
iret
jb
std
mov
sti
movl
sahf
pushf
sub
add
cmp
pop
mov
xchg
testb
push
inc
jae
or
int3
inc
aaa
sub
inc
lods
outsl
loop
lods
sbbb
or
popa
stos
mov
js
popf
jno
flds
cmp
pusha
mov
dec
fs
adc
sbb
das
adc
mov
add
mov
mov
lcall
lods
adc
repz
pushf
call
mov
xchg
ss
push
je
mov
pop
loopne
loop
jl
leave
repz
cmpsb
jp
fcoml
lods
pop
gs
jmp
sti
ret
dec
out
inc
xor
popa
ret
inc
pop
push
test
pop
mov
adc
ret
inc
xor
mov
and
xchg
push
lret
mov
test
int3
outsb
jb
clc
gs
add
stos
in
pop
pop
pop
sbb
or
sub
cld
int
jbe
movsb
pusha
cmp
adc
outsl
cmp
sbb
enter
ret
outsl
cld
fdivrl
mov
and
lret
xchg
out
xor
das
fadds
test
repz
lcall
cmp
scas
sbbl
pop
jp
mov
jge
xlat
popf
ffree
jno
gs
mov
sar
mov
icebp
xchg
mov
scas
mov
mov
mov
loopne
and
sbb
xchg
inc
jge
lods
or
jmp
mov
or
fcomps
shr
xchg
lods
cmpsb
loopne
mov
fisubs
popa
aam
sbb
fdivl
cmp
add
add
popf
loope
stos
leave
lea
adc
rep
or
out
pop
jmp
in
xor
mov
mov
ficoms
pop
add
fisttpll
dec
xor
pop
ss
nop
push
sbb
insl
jmp
or
sahf
dec
scas
jecxz
sub
popa
mov
pop
sbb
pop
repnz
leave
jl
adc
pop
lds
pop
ffree
lods
mov
lret
ret
or
pop
cmp
pop
and
test
enter
dec
push
xor
adc
lock
cmc
popf
icebp
push
test
shll
sbb
dec
sbb
scas
imul
sub
xchg
sub
jns
mov
repz
inc
enter
add
push
push
ds
mov
stc
arpl
mov
movsl
push
add
push
fdivrs
rcll
jp
and
rolb
in
insb
clc
fidivs
xchg
mov
faddl
jecxz
pop
inc
scas
mov
or
cmp
fdivrl
adc
jno
data16
mov
je
jge
es
add
aas
sahf
dec
sub
flds
mov
sbb
popa
sahf
pop
jb
cmp
and
arpl
jmp
sbb
jp
or
push
fcmovnb
fs
lock
sbb
scas
test
stos
daa
movsb
mov
out
jnp
xchg
bound
dec
int3
adc
xchg
iret
add
xlat
inc
push
adc
pop
out
adc
pop
mov
ret
dec
cli
and
ljmp
jb
sbb
push
lds
test
scas
aad
je
fdivrs
sbb
push
fistpll
cmp
add
jmp
mov
pop
push
xchg
and
lds
mov
xchg
jle
ucomiss
cmpsb
and
shr
xor
cmp
mov
add
test
adc
fcomps
mov
lock
add
push
int
cmp
popf
jns
js
mov
push
hlt
gs
push
psubd
mov
pop
fldenv
aad
dec
mov
jge
movsb
jmp
pushf
xchg
lret
bound
mov
dec
jmp
jno
jg
jle
scas
rcr
shlb
ret
ljmp
jp
out
jo
shll
sub
fdivr
outsl
scas
out
testb
js
push
icebp
aam
pusha
addl
mov
or
inc
repnz
xchg
iret
pop
mov
out
dec
xor
add
jns
mov
jp
sub
jbe
stos
enter
cmp
out
or
cli
mov
inc
add
jnp
ja
mov
loope
nop
dec
pop
mov
or
dec
int
push
pinsrw
pop
pop
in
rcrl
pop
movsl
loopne
scas
pop
mov
es
lahf
fisubrl
fildll
and
aad
and
sbb
out
add
xor
xor
movsb
gs
inc
push
sub
jg
xor
mov
rcr
ds
dec
js
lock
movl
xchg
fnsave
cwtl
dec
add
jbe
xlat
daa
add
pop
mov
sub
movsb
push
dec
pop
das
push
push
pop
cli
cmpsb
inc
cli
movsl
cld
int
mov
lods
adc
jae
xchg
cld
dec
push
fwait
cmpb
jo
or
mov
enter
lods
xchg
fldt
xor
xchg
inc
mov
rclb
lds
shrb
shrb
sub
clc
xor
jne
jle
inc
sub
data16
popf
mov
jnp
fs
cmp
jbe
and
inc
add
add
enter
xchg
popf
push
jmp
jo
into
pop
mov
sub
xchg
es
mov
neg
aas
lahf
les
cmp
out
stos
orl
stc
faddl
mov
stos
sbb
xor
xor
pop
lret
movsb
call
sbb
rol
push
ljmp
jbe
xor
and
lret
xchg
push
lahf
mov
fisttpl
jne
cmc
push
shrl
lock
lcall
test
shrl
jo
in
xor
cmp
push
stc
imul
hlt
lock
loope
pop
pop
dec
cwtl
xchg
mov
insb
jge
push
mov
lods
fmull
or
xchg
fldlg2
insl
push
jne
push
cmpl
nop
ret
and
mov
pop
cmp
mov
sub
push
stos
push
test
xor
dec
xor
mov
andb
jb
in
jbe
jnp
mov
mov
dec
sub
or
call
int3
mov
or
fiadds
dec
adc
mov
daa
int
mov
bound
inc
insb
cmp
adc
iret
outsl
pushf
push
sti
sbb
mov
leave
push
icebp
mov
xor
pop
sbb
out
cmp
scas
xor
sub
in
jo
aas
xchg
mov
mov
out
xor
xor
xor
and
into
dec
leave
mov
data16
out
mov
cld
inc
mov
mov
leave
aaa
testb
push
test
lea
pop
dec
jmp
cmp
inc
outsl
leave
inc
push
ljmp
add
stos
inc
xorl
inc
xchg
lahf
mov
mov
into
lods
jns
mov
lret
adc
and
sti
je
sbb
outsb
andl
call
xchg
jp
push
daa
out
shll
mov
js
ror
dec
inc
cmpsb
add
data16
cmp
scas
adc
lahf
lret
in
jmp
ja
pop
push
imull
aad
jecxz
jl
nop
add
and
xor
mov
shrb
mov
std
daa
stos
pop
push
fistpl
xor
mov
aad
gs
jecxz
push
loope
dec
and
dec
test
sbb
mov
inc
divl
inc
adc
das
jle
ret
fcomp
div
call
andl
mov
mov
pushf
outsl
sbb
mov
ret
pop
fsubr
sti
movsl
imul
xchg
or
or
add
fistl
sub
push
in
add
inc
fcmovbe
xchg
xor
xrelease
pop
pushf
mov
loop
xlat
cli
pop
aaa
lods
xor
or
pop
inc
jl
rcll
fisttpll
push
pop
dec
adc
lret
in
in
ja
dec
enter
jb
gs
ret
and
decl
xor
out
popa
add
push
dec
ja
nop
into
ret
dec
stc
data16
xchg
xlat
notl
int3
or
andl
leave
xchg
inc
imul
push
mov
xchg
je
hlt
movsb
mov
adc
inc
xor
push
pop
pushf
into
test
mov
mov
test
popf
arpl
lcall
outsb
fisubl
mov
shrb
hlt
push
jo
hlt
lods
enter
push
fcmovnu
fwait
in
push
pop
mov
inc
repz
iret
xor
cli
mov
mov
adc
in
sti
xor
sub
imul
lret
scas
cmp
sbb
pop
or
adcl
mov
aad
cmp
jp
std
jbe
mov
out
fs
mov
aas
jnp
xchg
sub
les
cs
aaa
in
mov
sub
shll
add
pop
inc
inc
mov
loop
stc
test
out
inc
mov
or
add
cmp
test
mov
adc
add
fiaddl
leave
fldenv
mov
pop
es
cmp
loopne
pushf
jmp
mov
popa
mov
outsb
hlt
sub
in
int
inc
mov
rol
cmp
neg
in
sub
enter
jb
int3
adc
xchg
jp
aaa
mov
push
add
int3
fcmovu
mov
add
sbb
nop
inc
mov
ds
jbe
inc
mov
mov
sbb
xor
sti
xor
popf
cmp
test
faddl
loop
arpl
pop
jl
xor
cmp
jae
insl
adc
lock
push
mov
push
cmp
mov
fisubrl
aas
in
sub
xor
dec
mov
dec
mov
jmp
aaa
adc
pushf
xor
scas
mov
jo
mov
cwtl
xor
jecxz
movsl
andb
mov
pushf
dec
cs
daa
loopne
mov
push
push
imulb
ffree
mov
push
inc
or
ss
mov
cmp
sbb
jecxz
xor
je
fists
stos
jmp
in
out
cltd
bound
lods
jnp
and
cmp
adc
add
push
int
leave
repnz
fmuls
lret
mov
mov
xchg
fadds
repz
bound
rorl
pushf
aas
push
sub
in
jge
pop
adc
mov
inc
popf
es
test
cmpsl
shll
dec
popl
dec
jne
psllq
fs
data16
jg
adc
out
push
sbb
and
int3
lahf
sub
sbb
nop
xor
sbb
ss
or
jbe
lret
movsb
aad
or
mov
xchg
push
cli
andl
ret
and
andl
pop
test
leave
jo
icebp
xchg
jne
icebp
cs
add
lahf
xor
push
inc
mov
sbb
int3
aad
dec
and
mov
sbb
out
in
sub
pop
into
sub
leave
imul
adc
lds
daa
pop
jae
gs
sub
cli
pushf
xchg
and
dec
inc
dec
jmp
scas
xchg
xchg
fidivrl
cmp
popf
lods
dec
jns
mov
addl
inc
mov
add
mov
idivb
jl
pushf
mov
ja
pushl
iret
in
imul
and
jmp
cmp
mov
push
leave
fdivrs
lea
or
sub
aaa
mov
inc
or
push
imul
cli
call
mov
dec
mov
mull
mov
add
enter
fsubl
into
dec
das
mov
call
ja
push
mov
dec
outsb
lcall
in
push
push
lea
mov
dec
xor
push
je
pop
push
mov
test
lock
inc
arpl
push
lahf
mov
out
scas
adc
lock
xor
movsl
ret
mov
jecxz
push
adc
xchg
shrb
sub
or
outsb
aaa
push
ret
xor
xor
jno
or
imul
cld
push
imul
push
add
movsl
and
push
pop
call
faddl
cmpsb
add
lahf
inc
rcrl
xchg
scas
insb
mov
dec
mov
stos
jge
jno
adc
adc
push
sub
push
nop
loope
call
ret
ret
out
lds
std
cmp
sti
pop
or
cmpsl
add
fdivrl
in
cld
push
fadds
in
stc
cmp
mov
shl
test
iret
data16
mov
add
pop
shlb
jns
ds
push
pushf
cmpsb
divl
xchg
aaa
fwait
xor
dec
dec
xor
mov
cld
notb
ficoml
or
adc
ljmp
pop
in
push
dec
add
mov
arpl
add
dec
mov
adc
sbb
pop
dec
dec
lret
inc
out
imul
sbb
jne
fmuls
push
fsubr
cmp
movsl
push
faddl
int
mov
lods
mov
gs
adc
lods
add
jecxz
cltd
xor
mov
add
xchg
cli
xor
push
sub
mov
pop
fisubrs
or
sti
imul
addr16
xor
ds
add
and
pop
mov
add
ret
js
cli
cmp
data16
jecxz
mov
scas
lods
clc
mov
loope
loopne
lods
repnz
lods
mov
jo
adc
sub
mov
adc
fildll
fwait
nop
in
out
ret
cmpsl
dec
jns
repz
mov
mov
cli
xchg
popa
xchg
add
pop
jecxz
test
cmovo
fists
xor
xchg
fcmovb
add
adc
pop
xchg
notb
subb
icebp
add
fs
nop
iret
bound
test
cwtl
jo
push
into
and
and
in
fwait
aam
mov
shl
inc
rcrl
adc
xor
pop
sbbl
ficoms
push
push
mov
les
lods
cli
shll
cmp
sbb
add
loop
insl
pop
jle
lret
repnz
idiv
pusha
jae
push
outsl
cltd
sub
dec
dec
adc
mov
cs
sbb
js
shl
xor
add
js
arpl
popf
pop
mov
sbb
ffree
lock
or
pop
xor
inc
add
mov
fwait
and
cmp
jae
das
sub
cmc
outsb
dec
jb
sarl
int
movsl
add
iret
pop
mov
pop
add
rolb
fcomps
inc
cmp
pop
inc
dec
mov
push
sti
adc
sbb
out
mov
sbb
mov
push
and
jb
mov
ja
mov
test
adc
mov
outsl
js
xchg
scas
sbb
mov
xchg
out
sbb
jg
cmp
mov
popf
dec
pop
enter
add
adc
or
and
add
test
mov
ss
mov
xchg
lcall
mov
mul
fs
imul
pushf
mov
dec
sbb
fldl
lea
pushf
push
pop
call
mov
movsb
jnp
adc
aas
cmp
cmp
dec
leave
loope
fnstsw
loop
xchg
out
mov
cltd
jbe
in
mov
jno
les
jmp
fnstsw
aaa
repz
dec
jbe
pop
xchg
movsb
pop
loopne
jns
dec
xlat
xchg
or
cmpsl
push
dec
mov
cmp
xor
dec
mov
push
pop
add
nop
fidivrl
and
push
push
ja
aas
xchg
jmp
popa
inc
lcall
pusha
hlt
call
push
mov
xchg
es
pop
push
pop
orl
jge
xchg
pop
cmp
fldcw
pop
into
mov
and
gs
test
push
mov
pushl
pop
jge
sbb
lock
mov
adcb
popf
and
or
inc
mov
int
push
sub
push
ret
lea
cmpsl
inc
push
sbb
lea
out
inc
xchg
sub
je
sbb
inc
or
lea
and
stos
cmp
add
test
mov
out
xchg
sub
shll
xor
outsl
sub
mov
lods
push
frstor
push
pop
mov
push
adc
push
sbb
outsb
fimull
outsl
std
push
call
jmp
dec
mov
adc
inc
push
adc
adc
sub
push
les
adc
push
shrb
insl
xchg
fldt
gs
leave
push
dec
and
jecxz
clc
bound
dec
lds
popf
lea
rcll
stc
iret
std
cwtl
lods
imul
bound
iret
and
sti
cli
mov
jbe
movsl
push
xchg
ror
cmp
sti
sub
cmp
push
sub
adc
sbb
jl
lret
lret
addr16
and
fwait
stos
js
sar
push
xchg
in
adc
fistpll
mov
jge
mov
mov
xor
sub
mov
adc
cmc
cltd
or
mov
push
sbb
cmpb
cmp
sbb
mov
out
iret
and
sub
ds
pushf
push
mov
dec
fldt
fcompl
push
mov
cmp
scas
xor
mov
nop
push
ret
cmc
inc
inc
lods
jmp
dec
out
mov
js
lahf
out
xchg
cmp
loop
and
aam
and
sub
jmp
pop
adc
enter
andl
sarb
or
push
sbb
sahf
lret
or
jns
mov
movl
lea
aaa
or
movsl
cwtl
xchg
push
cmc
cmp
les
dec
xchg
push
scas
pusha
inc
in
cmp
into
jbe
and
test
pop
test
xchg
xchg
icebp
rcll
ja
jns
xor
cmp
inc
jae
out
mov
sbb
inc
cmp
push
sti
push
pop
data16
pop
fdiv
push
xchg
fistps
std
testl
xchg
aaa
mov
pop
scas
mov
cmp
push
aas
dec
sbb
pop
dec
cmp
repz
dec
shll
cmp
sub
cmp
pushf
pop
or
mov
jae
ss
js
jle
cwtl
aaa
neg
sbb
adc
jns
xchg
mov
jl
test
std
ret
dec
mov
sub
sub
xor
dec
in
imul
test
dec
icebp
add
jno
in
outsl
dec
int
rolb
les
fcomp
inc
or
dec
sbb
cmp
in
insb
fmull
jp
jbe
inc
not
lods
in
mov
pop
imul
fwait
mov
mov
and
mov
or
jne
sbb
out
cmpsl
xrelease
xor
mov
or
dec
mov
adc
inc
push
in
mov
daa
mov
test
jne
movsl
es
shlb
xchg
jns
shrb
cmp
mov
push
add
lea
iret
bnd
sub
cmp
sub
mov
insl
divb
adc
and
loope
cmc
pusha
addr16
das
data16
mov
pop
pop
sub
push
xor
ljmp
stos
mov
and
dec
js
aaa
pop
xor
xchg
or
lods
or
xchg
scas
ret
mov
outsl
push
adc
shl
fcomip
insb
inc
mov
pop
cli
outsl
popa
shll
es
decb
mov
aas
fimuls
adc
hlt
jg
ret
push
popa
andb
pop
jo
xor
mov
xchg
dec
cmp
push
pop
es
push
jmp
cmp
aad
xchg
mov
mov
inc
mov
jnp
dec
test
ds
movhps
push
int3
pop
adc
int3
sbb
lock
mov
mov
push
push
in
adc
sub
push
mov
mov
mov
test
testl
stos
scas
stos
mov
or
ror
sarl
push
sbb
and
push
in
cmpsl
cmp
adc
xchg
and
xchg
enter
sbbl
dec
mov
aaa
nop
sub
and
xor
adc
inc
xchg
inc
adc
ljmp
cmp
xchg
sbb
in
dec
gs
les
mov
xor
mov
add
insb
mov
mov
inc
pop
mov
ss
jne
nop
pop
inc
adc
or
std
jnp
pop
call
loope
sbb
pop
enter
test
jle
pop
or
daa
iret
and
mov
jb
insb
movsb
xor
jmp
push
lret
nop
sub
jbe
je
repnz
out
xchg
out
stos
scas
push
push
add
es
mov
fildll
xchg
js
sbb
or
cmpsb
adc
mov
pop
and
dec
jbe
and
fstps
inc
fsubrl
dec
jb
mov
shl
mov
sahf
xor
mov
or
loopne
add
fldenv
test
je
inc
repnz
cwtl
lret
rolb
sarl
fistpl
xor
test
sub
orb
dec
test
in
sub
and
out
xor
leave
push
or
stc
loop
movsl
cs
les
out
cli
jmp
testb
movsl
sbb
cs
in
jp
sbb
inc
nop
mov
pop
add
push
add
mov
popa
and
sbb
imul
dec
push
dec
test
cmp
in
test
jnp
sbb
pop
fsub
inc
cli
loope
sub
pop
into
bound
rcrl
shrl
mov
mov
sub
scas
jecxz
push
dec
xchg
ds
cmp
int3
imul
stc
cmpsb
mov
mov
cmc
jae
aas
or
push
pop
cld
sbb
jo
jmp
bound
adc
pop
into
movb
and
xchg
pop
xor
stos
dec
lods
jo
mov
mov
jge
addr16
sub
xor
add
mov
fstl
pop
nopl
push
mov
mov
pop
loop
fwait
scas
fwait
in
cmpsl
dec
sbb
lea
xor
xchg
test
push
xchg
mov
or
pushf
faddp
push
or
xchg
jb
data16
js
sub
cmp
adc
pushf
nop
push
adc
xchg
test
dec
jecxz
xor
fldenv
aam
adc
je
push
inc
ftst
mov
repz
aam
test
jns
sti
outsb
popa
leave
outsb
xchg
dec
add
pop
popa
outsb
loopne
inc
popf
cmpsb
fsubl
mov
add
sahf
js
xchg
sub
or
mov
mov
adc
rcrl
xchg
mov
push
shrb
sub
mov
sub
cmp
dec
adc
push
or
sub
add
or
lods
popa
out
in
test
ss
outsb
mov
sub
in
mov
aad
mov
cmp
movsl
pop
test
mov
ret
pop
shrb
fisubl
cmp
sbb
or
mov
mov
js
adc
ret
add
xchg
mov
mov
ret
pop
mov
lcall
lcall
sub
mov
shrl
push
out
rolb
fists
dec
add
push
daa
sbb
test
mov
mov
popa
loop
push
sub
xorb
scas
dec
les
cs
cmp
andl
pop
mov
in
insb
out
rorl
nop
mov
inc
les
cmp
pop
mov
loope
push
cmp
push
adc
jnp
adc
mov
addr16
and
xchg
xchg
push
jbe
mov
adc
xor
mov
ret
pop
movsb
les
push
or
cmc
push
sti
push
pop
lcall
mov
repnz
mov
mov
xor
inc
call
dec
sahf
cld
stos
push
aaa
sub
shl
jmp
inc
movsl
or
or
test
pop
mov
stos
mov
dec
rorl
sbb
jns
push
addr16
iret
mov
fists
push
xchg
push
movsbl
out
lret
add
push
imul
inc
mov
lods
loop
push
aaa
pop
push
rcll
fcoml
int
jo
fnstenv
ret
push
adc
and
adc
movsl
add
xchg
inc
das
out
imul
mov
ret
push
lahf
popa
std
jmp
and
test
lahf
dec
fs
js
imul
xor
mov
addr16
js
jmp
push
imul
fldenv
nop
je
pop
mov
or
jmp
and
push
push
xor
sbb
xchg
xchg
subb
xchg
xchg
ret
pusha
pop
jle
orb
int3
int
xor
xor
mov
pop
dec
lret
ror
cmp
lock
and
stos
in
inc
inc
mov
xor
frstor
jecxz
dec
test
cmp
push
movsb
cmpb
inc
push
and
mov
pop
ds
neg
repnz
cmpsb
and
xor
sbb
mov
insl
mov
pop
dec
les
outsl
test
lahf
mulb
dec
jbe
loopne
xchg
xchg
out
xor
inc
pop
cmp
inc
test
ret
mov
mov
popa
pusha
or
rcr
xchg
and
mov
cmpb
test
mov
pop
jle
mov
pop
rorl
mov
dec
mov
nop
arpl
pop
scas
rcrb
rorb
push
pop
imul
xlat
push
jb
add
and
imull
jecxz
lods
loopne
mov
jmp
pop
pop
cltd
enter
dec
push
lcall
sub
push
mov
cli
ret
in
test
push
inc
push
fidivrs
es
nop
roll
xchg
pop
xchg
dec
mov
cmp
rclb
lods
fnstenv
add
cltd
ret
sbb
xor
inc
push
dec
out
inc
push
pop
pushf
cmp
outsl
or
mov
test
mov
loop
movsb
push
mov
inc
enter
or
mov
jno
aas
in
mov
and
leave
push
push
das
and
inc
lret
and
js
js
xchg
out
scas
mov
cmp
stc
ss
jo
out
fdivs
xor
jno
int3
movsl
fsubrs
mov
and
jle
or
test
aas
bound
and
loopne
xor
pop
ret
xchg
mov
xchg
rol
push
push
stc
and
inc
popf
fwait
jo
or
stos
popa
stos
cltd
inc
and
xchg
subb
ja
xchg
cs
mov
repnz
jns
jmp
push
or
outsb
pop
jle
andl
jmp
pop
in
fwait
cmc
arpl
sbb
pop
adc
in
dec
fcompl
or
lods
pop
push
pop
mov
pusha
or
test
jbe
gs
dec
daa
sub
cmp
cmpsl
mov
add
subl
cmp
fwait
pop
inc
nopl
pop
fistps
hlt
dec
or
push
adc
pop
lods
out
imul
pop
repnz
lock
gs
nop
dec
rorl
pop
movsl
mov
fidivs
jmp
push
daa
inc
push
fdivrs
adcb
mov
mov
jecxz
cli
jne
jno
out
ljmp
jnp
push
scas
insb
xor
aas
sub
lock
or
test
imul
fcomps
xchg
add
cs
mov
test
loop
adc
xchg
je
lods
cld
dec
add
rorb
mov
sbb
sbb
inc
add
push
lret
arpl
jns
cs
xchg
fsubl
mov
inc
sti
or
test
dec
test
dec
fisttpl
in
loop
mov
add
leave
lods
int3
ljmp
push
bound
dec
sub
mov
mov
xor
mov
xchg
dec
imul
pushf
shll
add
mov
xchg
jns
mov
jp
out
je
lea
jecxz
addb
lods
xor
add
cmp
inc
lret
mov
mov
pop
popf
arpl
sbb
data16
gs
sub
jo
xchg
adc
fwait
xchg
movsl
push
push
insb
xor
mov
mov
or
push
in
push
pop
and
pop
lret
test
adc
clc
enter
in
int3
daa
das
ret
movsb
push
sahf
dec
add
jg
arpl
jmp
sbb
xor
imul
frstor
imul
stos
icebp
jmp
sub
mov
cmp
movsl
sub
ss
rol
shll
xlat
fistps
cs
repnz
fs
xchg
jo
xor
nop
push
mov
lods
cmc
gs
xchg
sub
push
ret
cmp
hlt
sbb
cmp
dec
jg
mov
mov
or
inc
das
dec
dec
push
shll
fisttps
xchg
bound
scas
das
jmp
pop
push
sub
inc
add
inc
das
sub
ret
mov
xchg
sub
sbb
inc
fdivs
das
jecxz
pop
pop
cmp
mov
mov
fisubs
lock
push
mov
icebp
ds
jns
and
lcall
loopne
pop
xchg
rorb
jge
ficoms
imul
pusha
rcrl
sbb
cmpsl
push
push
cmp
hlt
pop
iret
sub
jbe
js
pop
repz
push
movsl
aas
pop
xor
into
mov
out
jae
test
mov
add
out
inc
pop
out
pop
jne
mov
mov
out
cli
ret
dec
pusha
jno
cs
xlat
outsb
shr
add
shll
cmp
lahf
or
sub
imul
push
icebp
shlb
xor
sub
jnp
jnp
mov
pop
add
repz
fcoms
pop
out
fdivrp
push
sbb
add
lret
mov
xchg
push
mov
into
or
xchg
push
cmpsb
cmpsb
in
jmp
ljmp
fs
add
clc
sub
ficomps
jmp
mov
bound
sbb
xor
testl
xchg
dec
xor
mov
test
test
push
and
push
rcrl
popa
jle
jl
lds
push
mov
in
cltd
dec
repz
cmpsb
fwait
cmp
mov
push
add
dec
popf
and
arpl
push
push
dec
pop
mov
or
sarl
shll
stc
pop
fnstsw
jecxz
push
cmp
mov
dec
pop
xor
xchg
insb
sub
stos
daa
mov
leave
insb
aam
push
dec
call
dec
vdivsd
loop
add
push
movsl
push
leave
sbb
xor
test
fstl
mov
pushf
jge
pop
sub
jno
sub
dec
je
pusha
mov
add
test
cld
inc
add
mov
cmp
mov
mov
add
mov
imul
xchg
in
imul
add
shll
adc
xchg
setb
mov
sets
pop
loope
xchg
sahf
xchg
nop
jmp
repnz
popf
outsl
xchg
xor
mov
rcrb
mov
sub
inc
fcoms
add
lcall
data16
inc
mov
jns
sub
ss
adc
cmp
notb
movsb
push
or
sbb
roll
daa
sub
xor
mov
sub
roll
test
inc
pop
out
js
xchg
pop
cli
add
lods
in
repnz
lcall
sbb
pop
outsb
dec
pop
stc
push
test
dec
out
and
jne
cwtl
push
pop
adc
cmc
sahf
jmp
inc
imul
xchg
stos
adc
mov
jmp
mov
testl
loop
outsb
nop
or
repz
or
sahf
in
cmovns
cmp
push
pop
scas
jge
mov
cmp
jae
dec
mov
xor
aad
loop
push
jp
add
jno
rolb
sahf
mov
mov
mov
push
lahf
mov
inc
mov
in
sub
scas
mov
pop
ja
jns
sarb
adc
mov
mov
cltd
je
test
cld
xchg
jle
xor
lods
into
negb
pop
mov
push
xlat
sub
jne
ja
jnp
push
lret
aaa
fs
cld
leave
int3
pusha
jecxz
dec
pop
fsubs
gs
repz
push
sbb
cmpsl
push
insb
out
sbb
and
jge
stc
les
shlb
lock
xor
les
mov
jle
jg
add
sub
cmp
pause
cmp
mov
pop
loopne
add
sub
fiaddl
jae
inc
mov
aas
and
cmp
aad
pusha
lcall
or
xor
push
loop
icebp
aas
test
rcl
fistps
mov
push
pusha
jge
adc
adc
push
and
es
push
inc
inc
mov
cli
xor
std
pop
ror
sbb
cmpsl
test
jb
scas
in
stc
sbb
lahf
mov
inc
or
hlt
rcr
cmp
cmp
std
arpl
pop
movsl
enter
loope
sahf
sub
cmovl
add
cltd
mov
jns
mov
call
xchg
pusha
adc
cld
ss
leave
aas
insl
push
xchg
jmp
push
negl
pop
or
sbb
fs
jl
inc
fxsave
xchg
std
jno
sahf
pop
or
sub
jno
pop
xchg
push
insb
adc
add
mov
dec
xlat
repz
call
mov
rcrl
mov
push
fwait
iret
push
jbe
das
ret
and
and
out
sub
les
cs
add
and
call
ja
mov
insl
loope
mov
or
es
addr16
adc
in
sub
push
sahf
and
test
data16
dec
mov
nop
push
jmp
pop
inc
sub
rol
out
jbe
jb
imul
inc
outsl
stos
inc
fisttps
call
movsl
call
jnp
add
sub
hlt
out
lock
sub
lock
cmp
or
stos
iret
movb
mov
jno
in
lret
ffree
scas
notl
rorl
mov
stc
dec
movsl
dec
cmp
push
push
fmuls
sub
mull
adc
or
sbb
jge
and
je
shrl
sub
bound
test
lods
mov
dec
lret
pop
or
orb
adc
jno
nop
fs
sub
pop
add
shrb
dec
sbbl
add
cmp
fs
addl
andl
cmpsb
push
cmpb
mov
adc
test
pushf
adcb
loopne,pn
popa
sbb
cmp
xor
mov
add
xor
inc
jl
sub
inc
adc
pop
or
adc
inc
cld
movzwl
lcallw
mov
enter
cli
je
jle
push
stos
leave
std
xor
mov
pop
xchg
mov
daa
stos
imull
jbe
out
mov
popa
sahf
fs
sbb
inc
and
movd
cli
and
movl
jge
dec
fadd
push
ret
and
dec
sub
pop
inc
jmp
cli
mov
loop
loope
pop
sub
pop
inc
cli
addr16
jecxz
mov
xchg
test
or
push
pusha
pop
cmpsl
dec
scas
inc
and
in
inc
leave
inc
inc
inc
mov
scas
int3
adc
xchg
push
adc
lahf
push
mov
inc
and
cmpsb
aaa
add
add
jp
sub
arpl
ds
orl
cmpsl
shl
bnd
stc
repz
pusha
inc
rcl
int
les
mov
faddl
int
xchg
pop
jno
xor
jo
sub
mov
xchg
or
cmpsl
stos
movsl
ljmp
divb
cmp
in
push
jl
lahf
pop
scas
lea
add
lea
xadd
cmp
xchg
cld
aam
pusha
rorb
jge
std
je
sub
shll
mov
insl
mov
pop
dec
fisubrs
sub
ja
push
mov
popa
sbb
cmp
mov
pop
or
mov
pop
xor
out
mov
shlb
cmp
sbb
popf
cmp
aam
gs
push
shll
movb
popa
and
scas
fisttpll
imul
fists
xchg
xchg
ds
mov
cmp
xchg
fisubrs
dec
andb
in
mov
mov
push
rolb
scas
cli
shlb
add
and
divb
loope
cmp
sbb
popa
add
out
add
insb
and
cmpl
enter
jnp
insb
inc
fildll
or
jno
fwait
jp
jmp
lahf
xchg
out
mov
dec
stos
sarl
sub
sbb
xor
pop
cmovl
xchg
fs
xchg
aam
ss
icebp
rorl
cmpsb
fsubrl
inc
ss
xor
rol
dec
ljmp
adc
fucomp
lret
std
subl
push
xor
psubusb
mov
mov
popa
pop
in
faddp
cmp
loop
testl
push
jne
jge
dec
ja
and
fisubrs
aam
sub
sub
cltd
insb
or
stos
mov
cmp
xor
or
enter
cli
and
pop
ja
mov
lods
pushf
push
lret
xor
jo
aas
pop
jbe
cltd
lea
sti
cmp
inc
jno
loop
adc
sub
dec
lahf
sbbl
scas
test
shrb
imul
cwtl
push
pop
movsb
jecxz
mov
jne
adc
loope
mov
aad
mov
mov
cwtl
pop
pop
cltd
mov
mov
rorl
xor
fstpl
je
mov
sahf
cmp
inc
adc
cwtl
pushf
jg
ja
cmp
aas
pop
mov
xor
push
sub
pop
fmul
cmp
lret
sbb
stc
in
push
arpl
hlt
mov
gs
mov
stos
lods
movsb
xchg
jl
mov
neg
dec
lret
imul
lock
cltd
inc
xchg
xchg
xor
repnz
push
sbb
dec
inc
lds
std
cmpsb
je
pop
or
lahf
push
dec
shlb
addr16
imul
dec
shrb
cmpsl
loope
imul
inc
sbb
mov
and
mov
fdivrl
xlat
addr16
addr16
mov
lds
lea
test
test
mov
inc
mov
in
mov
cbtw
push
mov
in
fnstenv
xchg
jnp
in
dec
sbb
orb
shrl
inc
xchg
hlt
and
jg
insl
popf
push
loope
loope
sbb
ljmp
popf
fwait
dec
sub
call
in
fst
mov
xchg
push
scas
mov
mov
incl
xchg
fdivl
xor
mov
cmpsl
aam
fmul
push
xor
jge
mov
xlat
int
ret
out
push
cld
add
leave
shll
cmp
std
mov
and
lcall
lock
fldl
sbb
mov
xor
stos
nop
sbb
xchg
outsb
sbb
fwait
sub
mov
addb
out
mov
sbb
popw
sbb
repnz
pop
xchg
fdivrp
out
imul
sbb
call
imull
std
leave
adc
repz
mov
fmull
call
mov
lret
adc
out
mov
leave
popf
dec
pop
xchg
shl
aas
or
cltd
fsub
pop
lea
lahf
rcrl
mov
mov
in
adc
call
cli
jl
leave
adc
je
sbb
dec
add
stos
iret
mov
mov
or
cs
es
cli
inc
dec
inc
js
or
aam
or
mov
repnz
cwtl
stc
mov
or
jbe
push
mov
mov
pushf
call
test
jnp
push
xlat
push
jge
movsl
imul
sub
cmp
es
mov
xor
mov
movsl
mov
adc
js
outsl
jge
push
aas
mov
adc
xchg
push
mov
xchg
dec
insb
loop
lock
adc
pop
jl
test
xchg
mov
sub
int3
ljmp
jl
xchg
xchg
aaa
push
roll
ja
mov
pop
cmc
je
and
call
std
fdivrl
outsl
or
test
and
cltd
lahf
push
xchg
jne
xor
jnp
xchg
cmc
jbe
sub
icebp
mul
inc
push
fsubr
push
pushf
cwtl
in
rorb
mov
cmpsl
insl
sbb
rcr
jnp
cmc
mov
push
call
stc
jg
movsb
cmp
add
cld
sti
mov
mov
pop
ret
pop
test
je
aas
jge
jmp
and
push
por
test
sub
sbb
subl
in
dec
popf
icebp
mov
rcrl
mov
pop
xchg
lock
fstpt
scas
sbb
in
xlat
ljmp
out
mov
mov
sub
and
cltd
jg
mov
mov
push
out
or
jb
sbb
mov
daa
sbb
orb
dec
repz
jmp
loope
hlt
out
fucomp
pop
add
rcl
jle
xchg
inc
dec
daa
adc
mov
xchg
inc
out
sbb
xlat
or
andb
mov
dec
aaa
pop
xchg
int
dec
popa
adc
ds
fisubrl
pop
jg
and
cvtdq2ps
xchg
push
dec
insb
jle
leave
or
or
mov
bound
jge
pop
jge
push
push
sbb
adc
push
pop
mov
or
cmp
lcall
push
scas
mov
push
push
outsb
mov
jae
aad
repz
sti
adc
jl
and
mov
inc
scas
dec
add
inc
mov
pop
sub
push
out
jbe
movsl
sub
lds
fnstcw
mov
mov
sub
mov
mov
push
mov
in
or
xlat
sub
mov
adc
and
pusha
invd
mov
int
and
mov
xor
add
pop
push
scas
movsb
mov
imul
xchg
pop
and
dec
scas
scas
fsubl
or
jp
xchg
mov
hlt
mov
insb
cmp
loopne
jecxz
iret
loope
push
mov
xlat
fcmovnbe
or
or
cli
scas
or
scas
lret
test
lods
out
lret
in
adc
mov
jp
push
insl
cltd
jae
data16
clc
pop
int3
lret
mov
xchg
pop
pop
cmpsb
push
add
push
test
aam
and
mov
or
ljmp
jbe
inc
mov
fists
fmuls
out
repz
sub
int3
enter
adc
xchg
adc
fsubp
sbb
push
dec
testl
popa
inc
mov
jle
adc
sar
scas
mov
xchg
sub
loopne
jg
mov
pusha
fwait
push
scas
das
in
push
sub
push
das
or
bound
xchg
rcrb
mov
sbb
add
shr
mov
jo
pop
xchg
mov
cmpb
adc
xchg
or
cmp
fwait
push
mov
or
js
xchg
cmp
es
mov
or
addb
lods
stc
inc
adc
enter
not
jo
in
cmp
mov
shlb
clc
sbbb
xchg
xor
dec
rorl
push
setp
or
popf
fidivrs
mov
lret
pop
mov
clc
xchg
cmp
mov
sahf
and
pushf
inc
xor
test
icebp
scas
mov
push
push
xor
and
in
repz
adc
mov
xor
test
out
sbb
inc
pusha
jnp
mov
and
mov
loopne
movsl
push
sbb
imulb
sub
pop
mov
and
push
call
loope
sbb
and
insl
imul
push
rcrb
push
add
sub
int3
dec
pushf
sbb
bound
fdivrs
cmp
out
mov
mov
ret
xchg
aad
into
cwtl
add
sti
pop
xor
stos
jge
call
inc
sbb
sbb
and
xchg
test
jecxz
int3
fnstsw
les
aam
sbb
pop
fcmovbe
pop
xor
and
mov
xchg
adc
lods
and
cmp
jle
sub
lds
adc
and
xchg
cs
and
pminsw
and
xchg
xchg
inc
push
scas
push
or
add
lock
mov
scas
jmp
pusha
push
sub
movsl
pop
inc
xlat
mov
shll
pushw
outsb
imul
inc
ja
sbb
xor
xchg
or
stos
es
lods
adc
leave
jb
xchg
dec
mov
mov
es
xchg
lret
cld
or
mov
fsubs
pavgw
mov
or
inc
mov
lds
cld
outsl
adc
jl
icebp
mov
scas
aaa
sub
rolb
int3
pop
orl
test
push
or
adc
shl
or
aad
fs
xchg
fs
ljmp
aam
lahf
adc
mov
in
pusha
adc
push
jno
out
push
sub
dec
pusha
add
push
and
scas
jne
mov
mov
and
jp
mov
mov
nop
jne
inc
decb
pop
push
push
insl
xlat
sub
outsl
imul
out
xchg
in
push
cmp
fbstp
in
adc
rcll
sub
inc
sub
es
push
and
daa
aaa
xorb
testb
loop
in
rclb
les
loop
mov
xchg
mov
push
test
adc
in
mov
mov
mov
imul
push
in
loopne
push
pop
pusha
jecxz
jl
sti
mov
jp
lcall
dec
xchg
dec
jne
dec
sbb
fisubs
push
ss
and
adc
cmp
es
fistps
push
and
mov
or
roll
or
enter
and
cmp
jg
lcall
in
jno
cmp
or
dec
negl
in
dec
xor
xchg
sbb
and
das
ficompl
pop
lea
and
pop
out
loope
push
jl
fstps
pop
or
pop
cli
adc
push
dec
aad
pop
dec
repz
or
iret
adc
leave
push
jp
sub
rorb
roll
push
mov
fwait
aad
fwait
std
mov
inc
lret
lods
inc
xlat
lods
push
add
cmp
jne
inc
push
pop
and
sarl
cld
mov
and
fmull
call
data16
es
add
jle
or
sub
sub
fiadds
imull
int
scas
orl
cmp
xchg
jo
in
mov
pusha
xor
movsl
ja
out
adc
push
stos
clc
xor
mulb
xchg
or
inc
fucomp
btr
arpl
enter
mov
jl
dec
lcall
data16
mov
fnsave
mov
or
xor
loope
xchg
adc
xlat
cmc
std
insl
jne
out
jns
fcoml
mov
js
cltd
imul
mov
loope
jae
and
push
cmp
test
pop
push
cwtl
and
add
lea
scas
inc
inc
inc
jnp
sbb
pop
inc
outsb
arpl
add
mov
add
out
into
aas
sub
push
pop
jecxz
mov
dec
add
sub
jns
cmp
inc
jb
push
sbb
lods
push
dec
cmp
popa
jne
repnz
flds
jne
cltd
adc
dec
repnz
mov
punpcklbw
mov
add
jnp
sbb
fsubs
ds
xchg
fwait
into
dec
mov
jle
pusha
mov
addr16
inc
sahf
fiadds
test
dec
adc
sbb
dec
jge
rorl
in
shl
inc
cmc
daa
std
pop
in
xchg
shlb
sbb
adc
aaa
outsb
push
lods
mov
push
cmp
mov
jmp
adc
xchg
sub
mov
ret
sti
mov
inc
aad
inc
mov
xor
xchg
jne
das
push
int3
cmp
outsl
movsl
ror
adc
jmp
mov
es
shrl
add
icebp
mov
mov
xor
sbb
and
imul
movsl
ljmp
out
dec
outsl
addr16
idivb
fs
jns,pt
in
add
std
fstcw
clc
cmp
loope
in
mov
and
pop
fdivrl
popa
hlt
mov
cmp
into
add
jbe
das
outsl
jno
sub
aas
into
xor
or
jmp
shll
dec
jg
addr16
bnd
xchg
inc
insl
xor
dec
das
or
or
rolb
sbb
std
mov
stos
sbb
fists
iret
mov
xchg
fmull
movsb
hlt
xchg
mov
rcl
adc
icebp
add
lea
repz
pop
mov
mov
inc
mov
pop
sub
or
lahf
in
adc
dec
loop
fxch
pop
and
sub
xchg
subl
sahf
pop
jp
push
pop
jb
das
out
jmp
jbe
add
adc
movsl
push
in
jge
mov
jmp
es
pushf
xchg
cmp
je
cmp
outsb
lret
jns
int3
loopne
divb
js
or
jmp
cs
lcall
xor
and
xchg
pop
lret
jp
aad
lret
loope
inc
mov
mov
lods
add
push
cltd
and
xchg
int3
fistpll
push
cmpsl
int3
outsb
lahf
stos
xchg
aas
fistps
fprem1
in
and
rorl
mov
lea
xor
scas
jnp
cmc
ja
dec
faddp
push
jmp
sub
cmpsb
test
or
mov
fiaddl
int
jns
mov
jo
loopne
fsubrp
sbb
fisubs
pop
xorl
int
and
jb
dec
mov
xlat
mov
sbb
sbb
xchg
pop
xlat
xorps
cmpsb
fs
pop
lods
pop
test
adc
idiv
repz
cwtl
or
lock
jne
mov
xor
mov
roll
xchg
ljmp
daa
pop
push
inc
push
mov
dec
cwtl
cmc
das
push
popa
pop
mov
pusha
jne
inc
pop
lock
mov
repnz
mov
dec
jmp
xchg
insl
pusha
and
xchg
and
mov
pop
mov
in
adc
dec
xchg
cwtl
fdivs
stos
aam
adc
adc
enter
icebp
jecxz
xchg
pusha
or
sti
cmc
jo
stos
das
jge
ret
mov
int3
xor
sub
dec
lea
xor
pop
push
xlat
out
add
push
mov
loope
xchg
add
inc
dec
xchg
dec
subl
push
outsb
mov
mov
stc
cmp
dec
push
jb
imul
js
add
pop
adc
test
or
ret
and
mov
and
ret
or
divl
and
inc
cmpsb
ds
push
std
rclb
imul
dec
pause
xor
inc
dec
loope
push
dec
aas
xor
sahf
lcall
inc
ds
mov
add
stc
data16
xor
mov
xchg
out
mov
std
loopne
lret
inc
sarb
cltd
sti
decb
cmp
mov
push
xlat
cmp
scas
std
std
jecxz
ja,pt
mov
jecxz
movsl
lods
push
mov
mov
pop
mov
or
mov
vpandn
mov
insb
ret
das
mov
add
mov
jns
jg
xchg
or
ljmp
repz
jb
mov
cmp
js
dec
mov
addr16
mov
pop
in
ja
pop
int3
ja
ds
pop
sbb
jp
lea
sub
popf
sbb
aas
scas
scas
inc
xor
jnp
adc
subl
sub
xchg
fldcw
dec
jnp
cltd
into
out
xchg
loope
notl
dec
enter
jne
dec
hlt
lret
pop
sub
data16
mov
cli
inc
insb
mov
fnstcw
in
adc
pop
dec
dec
js
xor
data16
mov
mov
add
icebp
pusha
aas
out
and
repz
inc
and
movsb
scas
jg
push
inc
add
add
push
pushf
les
mov
cli
add
and
aad
mov
mov
mov
mov
jle
lret
in
fsubl
fwait
xor
cmp
fs
or
dec
cld
fs
sub
dec
out
movsb
fstpl
mov
bound
lret
iret
push
ljmp
cmp
lret
pop
xor
adc
mov
bound
lcall
and
movsl
mov
movsb
outsl
scas
cs
pop
pop
mov
xchg
dec
xchg
ja
insl
mov
mov
test
push
inc
shrb
aaa
fs
cmc
test
mov
sbb
scas
in
inc
out
jmp
dec
jl
jecxz
icebp
sub
nop
out
popf
xchg
iret
inc
mov
mov
inc
xchg
ds
dec
hlt
hlt
and
test
fsubrl
mov
jp
add
sbb
mov
out
pushf
std
popa
push
adc
inc
inc
mov
xchg
push
repz
ja
in
fiaddl
push
out
daa
icebp
sub
scas
mov
clc
aad
subl
lds
dec
iret
jl
dec
jne
dec
lahf
and
mov
cmp
sahf
lods
popa
aam
cmp
sahf
lret
pop
pop
loopne
test
cli
jl
gs
daa
xchg
mov
xor
movsl
pop
sub
add
into
push
cmp
and
dec
je
out
xor
or
xor
inc
pop
jno
rorl
clc
cmp
lret
jb
inc
add
insb
pop
in
aam
aaa
or
jo
out
adc
movsb
sub
stos
cmc
vphadddq
nop
adcb
pushf
in
cmp
lds
mov
or
std
stc
pop
rorl
and
addr16
mov
lahf
or
mov
call
flds
xor
sub
xlat
aam
cmp
fnstsw
in
lock
push
lahf
sti
fs
inc
gs
or
cmpsl
fildl
and
add
pop
sbb
ret
inc
xchg
cmp
pop
mov
cs
or
idivb
addr16
ja
mov
adc
cmp
mov
movsl
aam
fdivrp
mov
xor
sti
cmc
lods
aaa
leave
enter
test
pusha
xchg
inc
sbb
rcll
ss
aad
cmpsb
fidivrl
cwtl
sub
aas
popa
es
rcrb
mov
cwtl
cld
lret
lods
daa
inc
pop
jne
or
scas
cmp
mov
jp
mov
mov
mov
scas
popa
and
push
xchg
fs
push
or
sbb
and
insb
sti
pop
xchg
inc
sub
inc
in
cmp
imul
fcomps
or
jmp
inc
xor
xor
xchg
negl
test
cmp
xor
iret
out
mov
xchg
lods
cmp
in
repz
stc
mov
sahf
cmp
push
movsl
movsl
mov
adc
clc
sahf
xor
sub
repz
dec
xchg
ja
roll
dec
in
jle
mov
mov
adcb
xor
or
jne
scas
lret
cmpsl
call
aam
and
xchg
fs
mov
pop
in
in
or
sbb
repz
push
and
push
ret
xor
jno
pop
movsbl
xchg
sub
adc
outsl
stc
rcrl
outsb
out
pop
dec
lret
push
repnz
jp
inc
mov
mov
inc
test
aaa
data16
jae
fsubl
mov
popf
xchg
mov
inc
pusha
lds
pop
outsl
call
sbb
mov
shrl
mov
stc
add
je
push
sub
fisttps
insb
jg
lret
aad
sti
shlb
outsb
clc
out
pop
pop
pop
sbb
cmp
ret
mov
notl
mov
xchg
jne
addr16
in
jl
lcall
sbb
xchg
scas
add
in
jae
fcomps
sbb
imul
push
aas
xorl
insl
push
or
adc
out
arpl
in
jg
dec
test
aad
outsl
mov
mov
inc
inc
stc
das
pop
int
push
lods
in
or
cli
addl
pop
xor
add
pop
mov
or
std
add
jno
int
add
jg
dec
cmc
fwait
inc
xchg
pop
bound
mov
cltd
add
stos
pop
xor
pop
dec
ds
mov
pusha
in
sub
pop
pop
je
stos
cmp
inc
or
cmpsb
jb
notb
push
sub
sbb
lods
cmp
and
dec
and
xchg
movsb
imul
ss
xchg
jecxz
in
jb
loope
mov
cmp
fsts
xor
jmp
or
sti
faddp
adc
push
xchg
fdivr
sub
push
add
jg
mov
dec
dec
and
lcall
leave
dec
lret
stos
adc
jnp
sbb
cld
and
in
adc
bound
add
xchg
mov
jne
in
lret
sub
aaa
mov
jb
xchg
sar
sub
pop
ss
decb
adc
mov
addl
ret
jo
shrl
rcrl
cmp
cmp
bndldx
daa
scas
leave
fistpl
cmp
sub
inc
iret
inc
int3
mov
dec
lds
xchg
sub
cmp
sbb
push
sbb
inc
loopne
out
je
movsl
rorb
mov
xchg
inc
jle,pt
gs
aaa
xchg
pusha
push
push
inc
pop
jbe,pn
leave
sbb
pop
imul
jg
mov
aas
xchg
test
jno
jo
inc
mov
mov
xchg
sti
push
lds
xchg
fdiv
adc
jae
dec
dec
sahf
and
sbb
scas
adcb
out
xchg
scas
ficompl
pop
rcll
jno
lcall
dec
pop
lods
enter
popa
add
ss
sub
xchg
test
sub
pushf
mov
stc
mov
inc
out
imul
sub
sbb
dec
out
adc
arpl
and
jno
push
dec
cwtl
or
aam
incl
pusha
scas
rorl
xor
dec
add
push
inc
jb
pusha
and
aaa
ret
push
movsb
jne
inc
push
adc
push
pop
cmpsb
add
dec
jae
sarb
out
je
ljmp
imul
pop
jg
xor
adc
pushf
and
es
int3
sbb
pop
arpl
scas
jb
ljmp
cmp
inc
sbb
add
call
roll
add
push
int3
adc
push
push
scas
mov
dec
dec
inc
fsubrs
outsl
adc
cmp
xchg
mov
sbb
mov
insl
mov
aam
int
lods
sbb
popl
pop
stos
cmp
or
or
gs
inc
cli
pop
dec
add
ja
insb
add
mov
xchg
mov
sub
pop
stos
jmp
outsb
add
lret
mov
lret
ja
inc
mov
or
push
push
rcrb
je
push
ljmp
add
stos
dec
xchg
loopne
fisttpll
jl
dec
xor
dec
push
shrb
add
stos
cli
nop
jae
cmp
push
insl
push
pop
leave
loopne,pt
add
imul
inc
jecxz
andb
sarb
mov
jnp
call
ret
aam
and
test
or
mov
rcr
mov
mov
mov
ficompl
and
mov
xchg
sub
pop
jmp
dec
cmp
test
xchg
stos
orb
popf
adc
jmp
pop
adc
mov
int
int
pop
scas
iret
andl
rol
add
addl
cltd
adc
sub
std
ret
mov
pop
cwtl
mov
mov
push
icebp
int
cwtl
xlat
push
outsl
or
leave
test
jg
idiv
adc
out
jo
negb
dec
add
insl
cmp
dec
lcall
jmp
js
sub
pushf
mov
lea
hlt
ds
scas
cld
mov
jecxz
push
clc
xchg
jnp
inc
cmp
sub
out
fisttpl
adc
scas
test
and
leave
jbe
cmpsl
es
xchg
pop
dec
sub
out
in
addr16
push
lret
mov
cmc
mov
adc
gs
es
aam
lods
cli
push
cmp
das
fsub
sahf
fldcw
insl
push
fisttpll
pop
pop
mov
cmp
or
stos
mov
popa
and
xabort
adc
push
xlat
add
shll
popa
icebp
fwait
inc
pop
and
or
pop
jo
scas
xchg
pop
in
mov
insl
bound
imul
test
add
ds
lcall
inc
and
pusha
scas
ret
in
pop
mov
in
add
test
daa
ja
mov
test
xor
int3
ja
lock
mov
sti
cmc
xor
popf
jge
dec
fcmovnu
push
sarl
bound
insl
and
bound
cmp
xor
rcr
arpl
sub
push
cmpb
mov
dec
mov
jmp
test
mov
fcompl
or
fsubrs
fsubr
add
ret
es
push
mov
sub
xor
into
pop
mov
dec
insb
jns
mov
mov
les
xor
push
call
add
daa
mov
jb
jge
cmp
adc
ret
fldt
scas
xor
and
pop
dec
mull
sbb
or
outsb
scas
scas
pop
add
cmp
adc
clc
mov
cmp
mull
mov
aas
mov
in
sti
into
adc
pusha
cmpsl
mov
mov
push
cmp
add
dec
loopne
nop
mov
xor
mov
xor
push
lret
clc
mov
fidivs
div
mov
insb
leave
das
push
mov
stos
push
push
xchg
sbb
jnp
les
adc
pop
jle
aad
push
call
gs
lret
xchg
jge
jl
sub
mov
lea
int
pop
hlt
rorb
jne
scas
outsl
mov
inc
cmpsl
or
pop
jp
cmp
movsb
shlb
sbb
shrl
pop
movsl
mov
sub
jbe
jp
mov
and
inc
mov
cmp
jns
cmp
mov
inc
sbb
popa
lods
inc
daa
sub
cmp
dec
xor
rorb
cmpsb
mov
fnop
sti
inc
decl
repz
dec
int
cmp
rcrl
bts
sub
xchg
call
or
movsl
jmp
jecxz
mov
mov
or
xchg
xor
xor
push
add
pushf
mov
mov
jne
repz
jl
out
xlat
loope
sub
sub
jecxz
mov
lcall
pusha
outsb
scas
sti
inc
fisttpll
jge
ret
jno,pt
lahf
push
dec
dec
mov
loop
mov
pushf
push
push
mov
es
outsl
repnz
dec
int
inc
in
stos
sub
xor
ficomps
sahf
inc
sub
pop
in
mov
mov
out
imul
rclb
cli
cmp
xchg
xchg
imul
mov
mov
movsl
shll
incl
xchg
xchg
jnp
cmp
pop
fsubs
ja
add
out
jbe
xor
je
nop
dec
adc
in
cltd
lret
imul
insl
test
cwtl
xor
adc
push
enter
jb
fdivp
mov
ds
aas
and
cmpsb
iret
fcomp
pusha
int
jb
dec
icebp
inc
cmp
mov
cmpsl
lret
popa
ljmp
jae
xchg
push
push
and
add
push
xor
inc
pop
into
cmpsb
mov
data16
sbb
or
and
cmp
in
cmc
outsb
leave
push
inc
lcall
seto
xlat
mov
mov
xchg
call
mov
popa
imul
jecxz
lds
mov
cmp
add
dec
mov
push
test
iret
pop
push
jge
out
mov
inc
and
xchg
sbb
sbbb
fisttpll
movsl
xor
pop
imul
les
jns
movsb
into
xchg
sub
imul
std
cmp
js
int3
xor
mov
cmp
arpl
arpl
pop
clc
push
mulb
bound
notb
cld
out
push
cmp
inc
mov
and
loope
mov
and
out
shlb
xor
push
adc
nop
ficoms
rcrb
leave
pop
mov
lret
xchg
repz
sub
mov
iret
xor
cwtl
aas
cltd
mov
fcoms
add
jmp
ja
fdiv
ret
mov
andb
leave
or
pop
cmp
imul
xchg
ret
mov
dec
and
inc
cmpsb
jae
mov
cld
fwait
adc
mov
push
mov
jecxz
stc
add
add
subb
dec
adc
jbe
xor
cmp
adc
into
shrb
outsb
fnstsw
arpl
rep
dec
loopne
cmpsb
ljmp
xor
mov
xlat
adc
adc
add
jg
aas
or
push
mov
data16
jg
ror
pop
xchg
jle
add
mov
fmuls
mov
mov
out
jbe
cmc
jl
mov
pop
mov
pop
xor
xchg
push
shlb
das
push
lock
addr16
out
mov
aas
std
repnz
xor
mov
outsl
or
fsubrs
xor
lock
adc
cli
dec
push
cwtl
movsl
ljmp
lds
repnz
bound
aas
fmuls
lods
mov
aaa
jle
pop
pop
int3
push
mov
mov
cmp
adc
lahf
imull
jmp
sub
mov
aam
loopne
push
cmpsl
pusha
or
xchg
inc
cmp
shrl
mov
stos
pop
hlt
xchg
imul
mov
adc
les
jae
adc
jne
shl
subb
mov
pop
inc
mov
inc
je
sar
js
leave
fldenv
sbb
push
xor
or
jge
mov
xchg
mov
sbb
cwtl
xchg
and
jp
movsl
dec
xchg
pop
xchg
mov
jns
insb
pop
in
jb
fcomps
pop
loop
out
test
loopne
mov
cmp
call
out
dec
push
sub
in
sub
cmp
lods
and
fisttpll
xor
dec
mov
sarl
push
aam
or
lcall
adc
push
leave
js
outsl
inc
stos
pop
es
jne
fadds
aam
repnz
movsl
xor
or
scas
dec
fists
sub
add
inc
into
xchg
stos
inc
lock
test
insb
out
mov
mov
icebp
int3
loop
adc
jmp
loope
std
push
es
nop
xchg
dec
inc
jnp
pop
pop
cli
add
dec
loope
sti
sub
push
jbe
cli
adc
sub
mov
pushf
inc
loope
cmpsl
jecxz
xabort
pop
out
jp
xchg
pop
inc
inc
aaa
fninit
dec
push
fsubrp
fwait
int3
fstpt
mov
inc
cmp
out
lret
or
cmpsl
jp
test
dec
stos
xchg
inc
cmpb
or
ret
mov
push
inc
les
sub
jb
pop
mov
push
lock
push
cmpsl
xchg
call
push
movsl
push
mov
dec
mov
rol
jb
fxch
imul
add
lods
push
mov
xor
outsb
xchg
jl
fisubrs
hlt
scas
movsl
sbb
imul
or
jmp
or
sbb
jbe
or
mov
dec
lods
sbb
insl
push
adc
pop
sti
or
pop
cmc
cmp
mov
jb
call
stos
shrl
add
test
fistps
decl
mov
lret
dec
push
insl
inc
in
testb
cmp
sti
push
dec
sub
int
movsb
loope
clc
add
aam
mov
or
sarl
push
push
aam
push
push
or
add
or
daa
mov
mov
shlb
call
mov
push
mov
push
cli
push
pop
mov
rol
lret
in
fdiv
xchg
dec
adc
js
in
inc
sub
push
sahf
mov
arpl
xor
and
jmp
adcb
inc
jns
mov
cs
sub
dec
rorl
stos
sbb
xor
es
into
push
sbb
jmp
adc
cmp
in
dec
daa
pop
enter
dec
and
inc
js
ss
xchg
xor
sbb
push
testl
fsub
and
aam
cld
scas
sbb
cld
insl
cmp
test
negl
add
and
mov
jl
cmc
or
jp
jg
out
popf
mov
sbb
idivl
jo
add
cmp
push
mov
scas
icebp
mov
pop
call
adc
in
xchg
xor
cmpsl
mov
pop
xchg
movsl
mov
hlt
cli
test
jmp
mov
lcall
fcoms
lds
xchg
std
lcall
adc
movsb
or
sahf
sbb
add
mov
pop
pop
lods
inc
ss
push
arpl
jmp
pop
cmp
ror
nop
pop
mov
mov
mov
int
jg
jge
cmp
das
daa
cmp
fsubrp
adc
inc
es
out
xchg
std
arpl
mov
jmp
ds
cmc
clc
sbb
inc
test
mov
movsb
jmp
hlt
or
test
out
cmp
movsl
mov
jo
xor
xchg
movsb
test
repnz
loop
adc
outsb
addr16
jns
ret
adc
mov
push
fnstsw
xchg
and
jae
lret
mov
add
fmull
sbb
loop
dec
xchg
sub
lret
repz
sahf
or
mov
adc
out
mov
iret
xchg
testb
pop
cmp
mov
dec
cmp
movsl
lahf
adc
call
push
mov
sub
ss
addb
mov
sarb
insb
sahf
push
cmp
sbb
fsubrs
fdivr
in
lock
push
ror
outsl
and
fildl
mov
rcrl
cld
test
pop
repnz
leave
cli
popa
test
push
or
pop
movsb
ja
shr
mov
push
add
lea
cltd
push
adc
outsb
loopne
ljmp
cmp
jl
ja
xchg
imul
daa
loop
mov
dec
pop
int3
jge
sub
jmp
mov
mov
out
hlt
sbb
pop
pop
rol
lahf
mov
sbb
enter
mov
pusha
je
mov
push
xor
adc
sbb
jbe
mov
jl
test
sbb
cmpsb
leave
cmp
push
insl
paddb
pushf
xchg
xchg
sahf
mov
ja
xchg
jge
lahf
es
fwait
arpl
xlat
daa
adc
and
out
movsb
mov
adcb
lahf
out
xor
sub
mov
sub
adc
adc
imul
imulb
fwait
cli
add
popa
pop
in
bound
pop
jo
aad
into
sahf
fcomps
add
cmpsl
or
push
in
mov
jo
cmp
cmp
xor
xor
xlat
xor
daa
mov
push
sbb
sarl
int3
add
inc
add
nop
mov
sbb
mov
ljmp
xchg
pusha
xor
cmc
add
mov
mov
sti
sbb
jno
out
sti
or
mov
test
in
sahf
ljmp
and
in
mov
push
int
int3
inc
sub
push
push
adc
inc
iret
or
sbb
push
sbb
pop
mov
inc
shlb
add
inc
cmp
into
mov
mov
int
push
push
and
adc
sbb
cmpsl
pop
out
sbb
push
mov
cmp
scas
mov
or
and
rorl
sbb
mov
mov
xor
inc
mov
sbb
jge
mull
pop
imul
ret
pop
repnz
jmp
pop
mov
lods
push
cs
xor
xor
les
or
imul
out
mov
cmc
jo
pop
stos
rcrl
sbb
push
pop
movsl
mov
mov
push
outsl
add
lahf
push
sbb
in
lds
loop
mov
scas
fistps
mov
sbb
nop
adc
into
loope
bound
test
xorb
mov
push
idivl
aaa
xchg
xor
mov
and
add
mov
fcomps
xchg
cltd
movsl
popf
mov
enter
sub
mov
dec
mov
mov
adc
cmp
mov
sarl
pop
cmc
pushl
cmp
mov
sbb
sbb
insb
mov
pop
push
mov
int
inc
lods
mov
jne
ds
mov
add
and
push
sahf
xor
xchg
outsb
cli
pop
loop
and
imul
push
out
mov
aaa
add
mov
inc
sti
or
inc
loope
testb
jl
icebp
mov
push
movsl
pop
dec
lahf
and
fistps
rclb
jns
mov
daa
xor
mov
jne
out
popf
adc
cmc
jnp
into
lret
rep
cli
loop
icebp
dec
pop
repnz
pop
decb
test
aas
imul
or
sbb
pop
dec
iret
mov
ficoml
xchg
cmpsl
cmp
cli
pushf
and
mov
fsubl
hlt
inc
dec
insb
stos
aas
adc
decb
sti
push
or
sti
lahf
xor
ret
inc
adc
pop
push
sti
movsl
sahf
aaa
fsubs
into
clc
mov
xlat
dec
ret
out
jmp
sbb
icebp
adc
jp
rolb
dec
mov
rcrl
cmp
pop
or
pop
stos
lods
movsb
fisubrs
and
test
lret
or
mov
inc
jbe
cld
mov
mov
add
xorb
push
dec
xchg
sbb
pop
loope
or
xchg
enter
adcb
xchg
loope
lods
dec
jnp
mov
mov
fwait
lds
push
mov
push
inc
mov
or
leave
mov
xchg
icebp
mulb
dec
adc
clc
das
aaa
lret
loope
shll
dec
dec
push
arpl
dec
add
pusha
in
fcomip
sbb
into
jle
push
faddp
dec
and
stc
dec
daa
push
lods
lcall
jge
mov
jnp
mov
adc
jle
adc
popa
cmp
push
mov
mov
popf
jl
sbb
push
pushf
sbbb
mov
jns
loopne
movsl
ja
and
lods
popa
imull
scas
mov
pop
mov
mov
cmpsl
int
repz
movsb
sub
hlt
xor
aaa
icebp
xchg
add
roll
insb
dec
stc
cltd
ljmp
lcall
push
jno
outsb
mov
fistpl
in
cmp
inc
mov
test
je
or
dec
xchg
mov
arpl
subb
aad
add
fists
out
test
xor
into
leave
sbb
mov
mov
adc
popl
fwait
pop
mov
fistl
aam
loopne
mov
jl
es
shlb
push
add
mov
ds
imul
pop
fwait
mov
cli
inc
lods
or
mov
shrb
add
pop
sbbb
daa
clc
xchg
lds
adc
popa
test
enter
adc
das
insl
pop
shrl
test
dec
xchg
sahf
std
push
push
mov
mov
aaa
nop
nopl
syscall
movsl
shll
jns
inc
mov
mov
jae
xlat
and
out
inc
icebp
fwait
inc
fwait
arpl
and
js
lea
xlat
pop
fs
and
push
sahf
je
lahf
aad
pop
adc
aaa
sub
imulb
cmpl
jmp
cmpsl
adcb
xchg
roll
cmp
and
pushf
in
outsl
aas
add
imul
loopne
cltd
test
mov
and
or
add
adc
jp
loop
dec
mov
sbb
and
test
imul
stos
in
xor
cltd
loope
loopne
sub
mov
push
mov
addr16
mov
sub
mov
stc
fcmovnu
cltd
jg
cmpsb
mov
iret
xor
lock
stos
mov
inc
pop
hlt
sub
sbb
rcl
popa
inc
sbb
ja
pop
xor
inc
cs
outsl
push
xor
sbb
repnz
fnstenv
in
je
sub
cltd
fildl
inc
out
mov
pop
movl
imul
add
pop
mov
cmp
push
sub
lcall
scas
fadds
mov
int
in
cmp
sbb
icebp
dec
fisubl
jnp
sub
push
mov
lods
and
mov
jo
mov
mov
mov
jb
pop
fiaddl
dec
neg
adc
jb
pusha
lock
rep
jae
jo
insl
sub
insb
mov
dec
mull
lret
cwtl
scas
mov
jp
into
dec
sub
cmp
outsb
roll
sub
xor
je
in
xor
rorb
xchg
mov
mov
fstpt
jg
fnstcw
sub
pop
mov
push
rorl
mov
xor
cmp
fstps
jnp
loope
fimuls
mov
dec
xor
jb
dec
inc
scas
incl
inc
inc
cmp
adc
mov
loop
test
xor
inc
push
and
loop
scas
or
cmpsb
vorps
add
add
inc
pop
std
mov
hlt
mov
mov
shll
jp
cmpsl
sub
icebp
mov
shlb
xchg
cwtl
add
cmp
sub
xchg
aam
xchg
jbe
in
push
sub
jle
mov
add
in
pop
dec
movsb
fisubs
dec
imulb
jo
push
pop
inc
popf
and
adc
int
test
addr16
sbb
je
add
xchg
jle
movsl
adc
sub
push
repz
enter
pop
xchg
sub
lock
test
or
mov
jb
iret
movsb
and
or
ljmp
cwtl
shr
das
imul
add
lods
lcall
iret
enter
adc
int3
push
mov
inc
fimull
xor
add
fs
std
and
stos
xchg
mov
sbb
int
and
stos
jmp
push
add
in
cmp
inc
or
in
mov
outsl
loop
push
stc
gs
test
cmp
test
fidivrl
pop
adc
push
shrb
sti
js
dec
push
jo
movsb
ds
loope
mov
add
mov
sbb
sbb
nop
sti
dec
or
push
mov
sub
mov
in
dec
sahf
add
mov
dec
pop
sarl
pop
scas
fimull
nop
dec
fmul
addl
xorps
in
enter
mov
mov
dec
jns
les
pop
cmp
lcall
inc
xor
xor
arpl
shlb
bound
or
pop
test
pushf
jecxz
inc
and
ja
inc
scas
mov
sahf
pop
loop
xchg
cltd
fistpll
lahf
mov
addl
pop
mov
cmc
mov
mov
fadd
mov
loopne
dec
call
mov
sbb
jge
shl
mov
test
dec
mov
in
ja
movsb
lret
xchg
lcall
push
xor
dec
jmp
xchg
fiadds
mov
pop
mov
cmpsl
in
outsl
enter
movsb
xor
pop
push
lods
insb
push
fidivrl
xchg
popl
adc
jg
inc
push
int3
and
mov
adc
push
xchg
or
dec
push
mov
sub
daa
scas
les
push
rcr
sbb
cmp
call
mov
lret
push
jecxz
test
lods
out
mov
dec
ffree
fimuls
sbb
jmp
pushf
ret
push
push
fs
mov
and
mov
repnz
mov
pop
and
cmc
cmp
dec
adc
loopne
ret
pop
sbb
jb
aad
mov
mov
pop
sbb
xchg
sub
inc
insb
mov
arpl
sub
sub
pop
repnz
and
dec
imul
ret
es
fidivl
scas
xchg
popa
das
push
sub
into
sbb
arpl
cli
mov
iret
inc
xchg
lret
fisttpll
mov
out
jmp
jns
enter
add
xchg
xchg
repnz
iret
jl,pt
lea
sbb
in
stc
jnp
rcrb
popf
pop
jg
mov
andb
jnp
ret
std
adc
lock
scas
dec
js
xorl
jnp
adc
add
nop
pop
xorb
stos
push
mov
push
in
mov
jmp
jge
jnp
xor
aaa
adc
mov
out
xchg
loopne
push
mov
movsl
push
dec
in
mov
or
aas
int
lds
lea
js
shlb
xchg
loope
fsubrs
lahf
arpl
out
xor
insb
jmp
or
or
xor
mov
das
push
adcb
jb
add
xchg
ja
gs
je
inc
ret
and
xchg
lods
aas
mov
loope
ja
cmp
mov
inc
xlat
cltd
ja
inc
sarl
lds
cmp
outsl
push
inc
dec
add
xchg
lret
pop
int
sahf
mov
lea
ret
fstl
popa
sbb
rdmsr
xor
idiv
bound
pusha
push
arpl
lcall
je
adc
push
into
xchg
xchg
push
or
or
ret
insb
cld
addl
jo
dec
fadds
jp
xchg
test
push
test
xchg
into
push
jns
pop
pop
pop
xchg
push
insl
or
jnp
cltd
mov
outsl
out
push
fstpt
or
jp
push
idiv
jge
daa
repz
cli
call
cmpsb
test
fnstenv
iret
cmc
push
dec
adc
insb
ja
test
inc
and
pop
jo
push
add
in
mov
ret
fs
push
cli
mov
sub
jo
movsb
dec
insl
loop
fs
ss
mov
pop
es
into
xchg
imull
push
sbb
push
movsb
aad
les
xorl
push
inc
mov
cli
or
jb
jp
mov
inc
fadd
xlat
jb
les
mov
pop
cltd
mov
jp
mov
pop
dec
icebp
or
dec
dec
fwait
out
shr
iret
mov
add
mov
xchg
ret
mov
inc
xor
test
leave
pop
and
out
lock
sbbl
jecxz
pop
or
fwait
movsb
pop
mov
scas
xchg
fwait
inc
jnp
sub
jb
jae
cwtl
add
jp
add
push
push
jecxz
sbb
or
mov
jmp
jae
cmpsl
js
mov
xchg
icebp
xchg
sub
addr16
jbe
dec
inc
ret
imul
jge
mov
add
mov
out
cli
and
hlt
push
repz
pop
shlb
push
jp
test
ds
ror
inc
xchg
xor
mov
cmp
inc
lret
mov
flds
push
and
lcall
xor
mov
adc
fcmovne
insb
sbb
mov
dec
call
xor
cmp
mov
fsubrs
test
not
add
add
popa
ja
lock
out
stos
pop
xchg
adc
xor
int
push
leave
clc
leave
inc
mov
repnz
mov
adc
jecxz
out
bound
cmc
inc
test
add
adc
aam
xchg
ss
outsb
addr16
cmp
or
stc
cmp
les
in
sub
xor
adc
ret
and
or
mov
rclb
icebp
cmp
inc
out
or
jge
pop
mov
jge
pop
xchg
dec
inc
fwait
inc
cmp
cld
push
out
jmp
jp
mov
and
lret
inc
stos
test
aam
es
mov
mov
inc
jns
xor
adc
sti
push
adc
or
cmc
mov
cmp
sub
mov
inc
test
loop
jne
mov
fmuls
push
jge
lods
cmpsb
ret
ja
call
rcll
jnp
mov
ret
ds
mov
ds
sarb
into
aam
iret
cmp
rcll
js
cmp
xor
push
ss
adc
aad
jo
fbstp
mov
adc
cld
ficoml
jne
or
out
jnp
sahf
inc
mov
inc
pop
pop
ficoml
xchg
pushl
fidivrs
push
sub
repnz
sbb
out
imul
cmpsb
jb
stos
adcl
mov
push
add
jb
adc
scas
repnz
push
fldt
mov
in
xor
push
rclb
cli
fcoms
test
cmc
add
dec
xchg
jnp
std
xchg
xlat
cmpsl
push
xchg
push
jbe
inc
cmp
rcl
adc
and
and
inc
int3
cmp
lea
jbe
scas
cli
rcll
sahf
popf
and
push
adc
out
lea
or
into
and
add
test
sbb
mov
into
and
movsl
sbb
xor
mov
add
cmpsl
mov
cltd
es
sub
cmp
icebp
in
jmp
dec
dec
test
add
mov
xchg
das
push
repz
movl
and
cmp
scas
call
xchg
push
out
test
lahf
mov
testb
or
stos
les
pushf
inc
xor
xchg
in
popf
loope
xchg
testl
jno
shrb
sbb
ret
add
mov
les
sbb
mov
mov
sbb
and
leave
bound
adc
out
in
cmp
xor
push
inc
push
and
inc
mov
movsb
aaa
ss
bound
mov
inc
shll
movsl
and
ret
fisubl
pop
mov
mov
iret
sub
rcr
inc
jecxz
lds
in
insb
lret
mov
test
push
popf
int3
sbb
xorl
nop
xchg
int
nop
imul
ficompl
pop
pop
gs
ja
enter
mov
ret
in
outsb
cmp
lds
imul
mov
xchg
fimuls
ret
sbb
xorb
sahf
or
jb
pop
cmp
mov
push
jne
inc
test
and
ljmp
push
rcrl
fsubrl
add
push
ja
pop
imul
push
scas
fwait
mov
cltd
cmp
mov
sarl
clc
lods
icebp
add
out
jl
sti
gs
clc
movsb
mov
dec
cmp
into
test
inc
sub
shr
mov
mov
in
pop
gs
adc
stos
xchg
mov
aam
movb
lahf
scas
cmp
enter
jnp
xor
mov
faddl
adc
xchg
out
scas
mov
out
cmp
bound
test
dec
hlt
jno
mov
loop
xchg
mov
and
das
sub
in
mul
pop
push
into
dec
push
inc
cmp
lret
lock
jecxz
push
ss
jmp
ret
clc
mov
lahf
outsl
pop
mov
push
push
pop
mov
movsb
out
inc
mov
add
roll
das
imul
shl
add
gs
jo
shlb
loopne
inc
dec
cs
sub
pop
cmp
jecxz
adc
mov
ss
xchg
adc
push
xor
mov
pop
dec
mov
xchg
bound
sub
push
dec
push
pop
xchg
cmp
and
fs
mov
movsl
xorb
bound
xchg
mov
lcall
xchg
aaa
iret
xchg
insl
inc
cmp
and
sti
nop
sub
xor
adc
mov
lret
push
loope
mov
xchg
out
stos
aaa
mov
ljmp
push
dec
and
add
jg
jb
lahf
mov
push
sbb
repnz
test
ficoms
and
cmp
out
jmp
mov
popf
sub
adc
in
pop
sbb
sbbl
pop
inc
mov
mov
or
cld
ja
mov
sub
or
mov
mov
add
lret
push
or
movsb
xchg
sbb
stos
popf
dec
or
jle
jmp
xchg
out
xchg
sar
in
shlb
xchg
jecxz
shlb
pushf
loopne
arpl
mov
adc
cmp
sbb
mov
orb
xchg
rcr
inc
cmp
roll
add
or
sbb
jg
push
jo
aad
testb
push
or
pop
out
inc
sahf
ret
in
jo
in
fwait
or
dec
and
adc
shll
pop
dec
pop
lods
pop
out
mov
sbb
hlt
fcomps
xlat
inc
popl
test
jge
pop
lds
out
cltd
xchg
ss
sbb
mov
or
mov
and
push
fistpll
psubusb
aad
arpl
adc
das
add
or
xchg
sahf
jno
outsl
mov
or
repz
sub
mov
mov
ja
cltd
into
cli
hlt
inc
mov
outsb
fnstcw
repz
mov
xchg
or
cmp
jns
fwait
cmpb
in
pop
popa
mov
dec
leave
xor
push
mov
sub
inc
mov
xchg
adc
es
add
cmp
sbb
ficomps
cmp
pop
xor
int
cmp
mov
lret
lcall
add
jmp
jg
xor
arpl
cmp
iret
and
xchg
push
test
leave
je
mov
sub
inc
test
xor
test
stc
daa
adc
push
repz
adc
sub
jns
mov
jmp
je
or
out
add
addr16
loop
sub
fwait
adc
scas
cmp
loop
cmc
xchg
push
cmc
mov
mov
push
in
push
push
xchg
mov
or
mov
fwait
pop
jb
mov
lret
fs
xor
jns
pop
shr
mov
jae
js
mov
lea
xor
pop
or
cmp
xchg
int3
jmp
jmp
add
mov
add
into
dec
or
ja
test
fdivs
loope
or
cmpsl
pop
fsubrl
xchg
adc
icebp
mov
loop
loope
or
fs
cs
push
insl
out
loopne
cmp
mov
lahf
add
push
jno
lock
shlb
add
mov
push
cltd
jle
jecxz
adc
jl
test
pop
fidivs
icebp
pop
inc
xchg
adc
dec
push
push
mov
rol
mov
and
sub
push
inc
dec
daa
add
ljmp
cmp
xor
mov
outsb
jle
mov
and
jl
sbb
icebp
jae
out
mov
aam
stos
aaa
je
inc
xchg
mov
fmuls
test
loope
add
popa
repnz
xchg
pusha
sbb
nop
sbb
add
jle
jmp
shll
lock
aad
sahf
mov
mov
push
or
push
lock
popa
cld
stc
aad
xchg
scas
mov
mov
stos
xchg
lret
in
in
xchg
mov
repnz
insb
jne
int
sub
sbb
test
fnstsw
inc
xor
pop
adc
cmp
outsl
stos
mov
fsubl
adc
movsl
push
xchg
jg
mov
je
dec
iret
fisubrl
shll
mov
lock
push
inc
std
push
push
xchg
notb
fs
outsl
xor
inc
fldcw
les
dec
adc
sbb
in
jns
aas
out
mov
sti
lds
push
push
adc
dec
enter
mov
outsb
cli
xor
fwait
popf
ja
lahf
div
push
xchg
xor
lds
jecxz
gs
pop
repz
jg
pop
out
lock
nop
mov
push
push
fstl
stos
sbbb
test
mov
dec
jae
out
out
fsub
mov
sbb
add
ljmp
popa
stc
jp
lea
and
mov
mov
mov
push
and
sahf
jne
movsl
push
jmp
xchg
movsl
jg
call
imul
fucomip
add
jge
cs
add
and
mov
mov
ret
sbb
and
sub
les
sahf
cmp
repz
pshufw
das
lods
mov
add
mov
push
cmc
jns
cmp
xchg
mov
test
jb
lods
aam
lahf
mov
sub
das
aad
mov
movsb
push
sub
pop
cmp
push
fstps
hlt
sub
pop
out
aaa
hlt
js
rorb
mov
xchg
dec
imul
lahf
test
mov
add
jmp
mov
aaa
dec
push
fneni(8087
jle
pop
cmp
cmp
adc
cmpsl
dec
push
shlb
sub
jb
pop
lret
insb
ss
ret
push
and
call
addl
fcomi
sub
pop
push
sbb
cli
leave
test
call
icebp
add
cmpsl
adc
mov
scas
cmc
jnp
mov
fs
cmpsb
jnp
pop
cld
dec
jo
xchg
negb
inc
imulb
pop
daa
addr16
std
adc
add
call
xchg
and
mov
stc
pop
add
sub
mov
sbb
mov
sub
xchg
pop
in
ret
adc
inc
jmp
sbb
test
fisubrl
scas
aad
dec
stos
cwtl
add
mov
addr16
mov
decl
aaa
sbb
push
mov
push
adc
or
aam
pop
mov
add
mov
scas
lret
or
sbb
mov
jns
lods
xor
mov
test
pop
lret
mov
push
lret
mov
mov
dec
mov
xchg
jae
imul
push
loope
mov
sahf
mov
fistpll
shr
add
mov
je
cmp
lea
add
loopne
movsl
cs
repz
roll
pusha
xor
lahf
imul
notb
negl
mov
xchg
xlat
jecxz
jae
adc
sub
adc
or
sub
arpl
and
pop
lret
lds
sti
cwtl
imul
sbbl
jo
movsb
xor
jae
pop
push
xchg
les
cld
stos
sbb
mov
es
and
cld
dec
je
cli
dec
and
fldenv
dec
repnz
cmp
je
mov
mov
into
fsubrs
jp
movsl
pushf
lahf
cmc
cmp
loop
adc
daa
inc
addr16
pop
pop
dec
stc
cmp
out
jg
sbb
enter
call
cmp
iret
leave
iret
out
sti
lods
rolb
stos
rcrb
in
lods
fildll
push
int
into
jl
sub
mov
scas
lea
fwait
loop
movsb
test
dec
sbb
stos
pop
xlat
ss
ror
clc
fdivrl
inc
stc
push
addr16
inc
std
fsin
push
cmp
ljmp
ljmp
cld
popa
inc
int
ret
xor
fisubl
fldcw
pop
addr16
test
cmp
dec
out
or
push
cmp
inc
cmp
push
mov
sub
xchg
or
xchg
das
push
mov
mov
sti
jns
insb
lods
enter
xor
sarl
aas
inc
rclb
sti
popf
xchg
sbb
imul
jecxz
pushf
dec
xor
test
iret
stos
sar
adc
aas
mov
jmp
pop
dec
lret
call
repz
aam
inc
out
xorb
xor
push
arpl
inc
sbb
mov
cmp
lret
mov
call
dec
loop
and
add
adc
loop
dec
imul
and
cs
fcmovnu
or
loope
fldl2t
je
or
fbld
mov
outsl
inc
mov
pop
lea
scas
imul
mov
cmp
push
xor
lds
mov
insb
ss
lods
mov
out
sub
aam
xchg
movsl
les
cmp
aaa
cwtl
or
pop
jno
cld
adc
add
lock
mov
or
xchg
pop
arpl
popf
sbb
jnp
rcrb
fisttpl
add
addl
push
or
mov
je
cwtl
fcmovu
jbe
pop
xchg
inc
dec
shrl
inc
inc
sbb
loopne
mov
cltd
mov
push
inc
fisttpll
adcb
or
xchg
mov
fistpl
ret
cmp
pop
lods
xchg
adc
shlb
int
or
test
push
hlt
add
out
sbb
es
stos
out
sbb
push
movl
dec
insb
jl
call
mov
dec
rcrl
rclb
inc
pop
ja
cmp
or
push
mov
push
sub
imul
jnp
out
ficompl
loopne
push
ss
add
and
pop
shll
dec
or
fcomip
mov
xorb
ds
test
nop
aas
inc
push
sbbl
xchg
push
orb
mov
ds
loopne
jge
push
repz
jbe
enter
movsl
inc
push
ret
jge
imul
adc
mov
icebp
dec
enter
inc
xchg
fimull
popa
xchg
adc
xor
mov
daa
mov
fstps
pop
lcall
push
out
mov
lea
mov
inc
imul
xchg
mov
in
in
fwait
xchg
xor
xchg
pop
rorb
mov
fildll
inc
orb
mov
cmpsb
mov
jmp
cld
insl
loope
push
not
aad
inc
ficoms
mov
js
cld
pop
loopne
fwait
nop
movsb
mov
and
push
sahf
icebp
int
jb
test
clc
pushf
lods
push
mov
test
pusha
pop
les
imul
jecxz
aam
push
adc
repnz
xor
stos
bound
mov
test
out
daa
mov
add
sbb
mov
push
xchg
mov
imul
and
repz
test
cmp
clc
and
fwait
rorb
inc
mov
repnz
mov
ds
jmp
repz
or
jle
jg
sbb
js
test
lods
ja
sarb
fidivrl
lret
jmp
lock
popf
faddl
pusha
rorb
lock
cmp
push
add
shll
negb
test
popa
mov
and
ret
adc
ja
iret
push
xor
push
and
mov
dec
xchg
lock
push
jecxz
fnsave
adc
xor
shll
lock
idivb
dec
pop
in
dec
repnz
jb
stos
out
jnp
sahf
nop
js,pt
sahf
cmpsb
call
sarl
sar
imull
push
sub
ret
leave
cli
push
mov
sbb
scas
fidivs
sti
jne
imul
in
dec
jp,pt
jg
xor
inc
scas
pop
dec
push
and
add
or
push
jle
stos
mov
jmp
dec
mov
pop
lret
or
mov
pop
lret
data16
inc
cwtl
mov
add
nop
in
test
sbb
lcall
sub
nop
push
scas
sbb
flds
test
les
add
lods
mov
jbe
and
sub
mov
xchg
push
jae
fs
insl
fldl
push
in
or
cs
hlt
inc
or
lahf
pop
push
lret
adc
aam
jge
xor
push
or
leave
pop
xchg
xchg
sbb
jnp
pop
bswap
mov
in
das
mov
nop
jg
jae
hlt
cmp
repz
xlat
mov
or
repz
xchg
pop
mov
scas
int3
mov
stos
rclb
ljmp
adc
add
mov
les
push
adc
push
mov
dec
adc
jmp
mov
xor
inc
push
daa
jbe
lds
sub
loopne
push
mov
xchg
in
pop
fnstcw
and
out
push
cmp
and
xlat
xchg
jmp
movl
sub
ds
cltd
mov
mov
dec
cmpsl
mov
jg
add
adc
loope
jbe
std
mov
xchg
cmpsb
dec
mov
mov
or
adc
lea
neg
into
mov
hlt
out
hlt
incl
rcrl
bound
jmp
pop
ds
dec
mov
push
in
jg
iret
xor
arpl
mov
push
fmuls
dec
incl
jns
push
mov
pop
inc
cmpsl
mov
xchg
sbb
rcl
mov
mov
add
mov
dec
inc
xchg
lock
fisttpl
fs
lahf
ljmp
xor
sbb
pop
jmp
ss
shrl
mov
lods
mov
dec
negl
mov
mov
ljmp
cltd
cmp
hlt
sbbb
fldcw
jbe
fistl
out
ss
iret
push
mov
fdivrp
pop
repz
xor
testb
and
fstps
cwtl
jmp
sbb
xchg
fcmovnb
sub
jns
adc
mov
movsl
repz
xchg
mov
popf
push
jmp
mov
jns
cmp
lret
push
push
cltd
loope
fdivr
push
fdiv
inc
mov
sbb
jp
test
out
push
cmp
rcll
mov
and
xor
and
sar
adc
out
cmp
push
pop
xchg
ficompl
sub
mov
push
pop
and
push
pop
sub
mov
xor
lret
sub
lds
dec
push
dec
and
addr16
in
inc
dec
dec
cmp
or
pop
jo
xor
in
or
sub
es
stos
mov
inc
aaa
mov
or
sbb
jl
js
daa
jo
popa
fisubs
jb
out
mov
mov
pop
and
sub
fdivrs
lock
add
subl
add
or
pop
mov
sbb
dec
xchg
fiadds
lock
mov
pop
pop
sub
sti
pop
nop
sbb
jecxz
in
popf
inc
sbb
stos
in
push
mov
nop
ret
cmpsb
mov
inc
ja
sahf
dec
mov
es
popa
mov
cmp
insl
icebp
mov
or
cmp
dec
repnz
outsb
jle
or
notl
icebp
pop
lea
inc
jnp
and
jb
adcl
jmp
loop
jae
and
pop
cmpsl
sahf
pop
insb
inc
pop
push
xor
dec
nop
dec
hlt
inc
jno
sbb
cli
scas
mov
loopne
xor
mov
incb
jbe
dec
rol
pop
je
inc
xchg
inc
mov
int3
dec
out
test
cmc
pushf
repz
aam
les
dec
cmc
jecxz
or
lret
jno
xor
jns
inc
inc
push
adc
test
cmp
in
pop
sub
sti
jge
jno
fmull
imul
je
cmp
jle
aam
out
xor
ja
and
add
jg
lahf
mov
pushl
test
pop
inc
subb
and
les
jecxz
xor
out
push
mov
sub
rorb
test
lods
test
mov
ja
mov
xlat
call
mov
inc
lahf
fwait
mov
inc
out
cwtl
cli
andb
mov
js
adc
add
fnstsw
lret
lret
xor
pusha
clc
push
mov
mul
pop
imul
test
mov
aaa
cs
mov
pop
fbstp
in
ret
xchg
loopne
jecxz
pop
notl
aad
mov
inc
aam
pushf
data16
pop
inc
cwtl
int3
repnz
repz
movsb
adc
sbb
pop
pop
movsl
daa
mov
inc
nop
pop
ret
adc
push
movsl
and
push
jp
xor
dec
sbb
jno
outsl
lahf
sbb
test
dec
xor
fs
or
mov
sarb
and
cmpsl
pusha
cmp
lahf
adc
aas
jg
mov
jmp
xorb
les
push
imul
xchg
mov
dec
sahf
mov
cwtl
nop
jae
inc
jns
mov
clc
inc
loop
cmp
lret
sbb
pusha
sub
sbb
jbe
nop
sub
adc
xor
or
mov
shrb
cmp
add
fadd
lea
sbb
xor
je
in
sbb
or
sub
mov
xor
incb
xchg
dec
inc
icebp
fdivl
idivl
pop
or
jnp
loopne
insl
sbb
add
sub
add
push
pop
or
std
inc
repnz
mov
addr16
or
xchg
inc
sbb
and
mov
adc
xor
mov
pop
invd
mov
clc
jg
stos
leave
pop
aaa
cmp
in
dec
xor
sti
mov
sbb
sbb
gs
adc
ja
push
push
addl
sub
mov
or
daa
cld
into
popf
in
aas
movsl
push
and
xchg
push
jg
mov
inc
mov
push
repnz
repnz
mov
cmp
rclb
loop
movsl
pop
int
add
cmpsl
rclb
in
cmp
mov
adcb
cmc
sahf
sub
in
fs
arpl
fwait
mov
insb
imul
jno
push
and
stos
pop
and
rcll
inc
leave
fdivrl
add
lret
arpl
inc
repnz
add
test
mov
jno
repz
mov
jne
push
push
nop
movl
rclb
aas
xchg
push
push
test
fistps
jnp
test
sbb
jmp
push
sub
push
popa
sbb
mov
add
popa
mov
add
or
sbb
xchg
dec
int3
aad
inc
shlb
inc
or
inc
pop
addr16
sbb
jmp
mov
inc
ret
insl
icebp
leave
adc
mov
movsl
shll
add
add
arpl
xchg
lcall
daa
pop
ror
lahf
xor
jb
dec
xchg
popa
push
pop
add
inc
xchg
clc
cli
inc
mov
fbld
fildll
pop
out
mov
lea
mov
push
adc
or
in
dec
jle
sub
jne
pop
mov
cmp
out
imul
inc
in
mov
mov
imulb
stos
ret
xchg
cmp
ret
inc
repnz
and
cmpsb
mov
sub
sbb
popa
inc
insl
enter
cmp
ljmp
loop
push
jmp
fisubs
arpl
cmpsl
xchg
pop
insb
sbb
dec
out
loop
rolb
jg
adc
jl
sbb
les
mov
mov
and
push
xor
inc
pop
pop
popa
loope
xchg
xor
push
fildl
mov
out
lret
scas
ljmp
adc
jl
rcrb
addr16
je
mov
xchg
outsl
inc
stos
das
outsl
lcall
stc
xor
iret
dec
sbb
stos
jnp
fsts
loope
pop
int
pop
imul
cwtl
repz
sub
jb
out
lds
cmpsl
and
xor
fldt
sbb
fcmovbe
call
cltd
xchg
inc
fsubrl
cmc
insl
popa
scas
sahf
loopne
scas
mov
jmp
out
adc
lahf
adc
stos
push
mov
ja
ret
sub
aam
in
jle
outsb
push
jecxz
pushf
cld
scas
adc
enter
push
aas
cli
push
xchg
xchg
stc
cmp
cmpsb
inc
push
imul
in
sbb
add
movsb
inc
aam
in
mov
lea
jmp
pop
rorl
sub
lcall
out
ret
mov
dec
fnsave
test
daa
adcl
fisubrl
lahf
addb
fdivrl
outsl
lret
sbb
insb
push
push
sub
scas
xor
rclb
and
cmp
xor
shll
jg
xchg
xchg
dec
cmc
jle
aad
mov
fsubl
push
mov
call
js
push
push
sbb
push
int3
stc
and
andb
cwtl
sbb
adc
cli
push
insb
pushf
xor
arpl
mov
in
sahf
xchg
dec
push
sbb
push
jo
pop
scas
fisubl
xorb
mov
inc
xchg
ret
pop
in
pusha
mov
cltd
das
outsb
dec
fs
xor
jle
jp
in
shlb
jg
imul
jne
es
pop
or
dec
sub
mov
cmpsl
jno
int
mov
in
outsl
pop
pcmpeqb
jo
js
ret
lods
or
sbb
push
mov
loopne
repz
mov
mov
fisttpl
movb
cmpsl
pusha
xchg
pop
dec
mov
outsb
sbb
pop
or
xchg
push
push
std
cmp
push
mov
and
nop
add
add
std
cmp
cmp
lret
push
jo
hlt
std
fstl
inc
fsubrs
lea
pop
xor
aad
push
cmc
mov
icebp
sti
loope
dec
loope
push
pusha
addr16
rcll
arpl
cmc
test
fadd
adc
lahf
idiv
bound
xchg
pop
ja
pcmpgtd
xchg
pop
dec
xchg
rcrb
xchg
jb
and
mov
popf
xlat
fwait
jne
test
aas
lahf
or
iret
push
mov
cmp
lahf
insl
ljmp
ret
je
push
inc
fnstcw
rcr
scas
rcrb
inc
cmp
mov
mov
or
pop
aad
jge
repz
jg
std
mov
jecxz
cli
mov
lret
out
or
and
cwtl
inc
data16
cmp
cmp
bound
push
inc
orb
inc
scas
sbb
mov
ss
cmp
xor
adc
dec
cwtl
bound
xor
xchg
mov
push
push
popf
mov
std
dec
mov
inc
shll
in
mov
pop
xchg
lcall
shl
ljmp
pushf
add
pop
aam
push
xchg
cmp
loopne
frstor
xchg
inc
pop
lods
sbb
cmp
inc
jne
sahf
mov
repnz
loopne
cmp
lret
mov
lock
sbb
fwait
in
sbb
sbb
add
xchg
les
loope
mov
push
and
pushf
cmp
or
out
or
fisttpll
jmp
ret
mov
pusha
outsl
push
adcl
lods
or
push
add
rep
fdivs
fnstenv
mov
push
add
add
adc
xor
outsl
xor
leave
sti
xor
clc
jno,pn
adc
adc
cmp
dec
jp
loop
mov
mov
call
arpl
inc
jecxz
sub
int3
cmp
mov
stc
push
inc
jnp
ss
idivb
incl
xchg
je
rcll
sub
inc
bound
int
clc
mov
rcrb
hlt
pusha
rcrl
sub
add
sub
inc
loope
and
lret
pop
mov
scas
jae
cmpsb
sahf
adc
out
add
push
leave
outsl
bound
push
jo
ljmp
mov
add
cld
push
push
fisubrs
jbe
cmc
mov
xchg
ljmp
xchg
jne
fimuls
fsubrs
cmp
mov
pop
call
sbb
or
ret
andl
xor
jl
fidivrl
out
shrb
pusha
stc
pop
movsl
fwait
in
xor
cltd
xchg
xchg
jns
pusha
icebp
jb
jno
sub
mov
push
push
push
dec
add
out
jno
js
shlb
mov
dec
and
dec
dec
leave
pop
pusha
mov
jecxz
les
jno
pop
jle
jp
test
mov
xor
lcall
push
or
test
shl
xchg
scas
dec
fildll
sbb
loope
int3
adc
int
cmp
bound
insb
push
loope
mov
pop
bnd
pop
dec
imul
mov
cmp
js
dec
aas
lods
mov
dec
push
sbb
lcall
pop
test
add
scas
int
out
cltd
loop
jmp
mov
dec
mov
push
pop
ss
xchg
add
cld
push
push
js
or
out
stc
and
sbb
and
aaa
jb
jbe
pop
test
or
mov
movsb
mov
into
scas
in
scas
setle
sub
jno
movaps
mov
pop
daa
out
cmp
mov
push
pop
outsb
popa
mov
inc
cmpl
repz
or
sub
mov
push
jp
push
push
iret
mov
adc
les
lcall
mov
mov
fcmovb
in
leave
lret
clc
xchg
cs
test
mov
xor
inc
mov
cmp
out
cmc
fs
insl
movsb
or
daa
pop
pushf
jne
pop
dec
mov
mov
push
mov
lcall
xchg
cli
loopne
es
xor
dec
mov
mov
sbb
shlb
std
pop
call
jno
xor
out
loope
cmp
ss
dec
and
repz
push
mov
mov
adc
leave
js
xor
inc
add
xchg
push
pop
add
adc
push
scas
sti
sub
lcall
jns
cmovle
xchg
or
inc
cltd
and
inc
mov
mov
stos
adc
mov
mov
sub
mov
pextrw
mov
mov
movb
sbb
pop
out
add
add
gs
adc
adc
adc
mov
stos
add
adc
bound
lea
dec
gs
push
pop
shll
xor
mov
jno
iret
jnp
out
xchg
pop
iret
or
rolb
dec
sbb
pop
stos
out
andl
pop
setae
mov
cmp
pop
pop
push
xlat
repnz
arpl
lcall
xor
mov
lock
sbb
lret
adc
push
lods
cs
and
push
pop
std
lock
loopne
fistpl
fmull
outsl
stc
out
jg
xor
jno
inc
cmpl
add
sbb
aad
imul
fdivl
mov
inc
int
jnp
jg
insl
xchg
fst
mul
dec
add
pop
loopne
and
push
mov
outsl
mov
add
stc
outsl
sarl
inc
testb
cmp
push
and
repnz
int3
hlt
xchg
cmc
cli
add
mov
lcall
cmp
mov
movsl
push
cltd
jae
fprem1
lds
ljmp
dec
pop
lock
xor
idiv
inc
push
dec
mov
jbe
in
adc
pop
test
movsl
xchg
pop
cmp
or
mov
nop
in
jae
dec
or
sbb
data16
xchg
mov
inc
fdivrl
arpl
xchg
cmp
out
cmp
leave
ss
inc
sbb
and
ror
outsl
sbb
jmp
lock
test
rcr
lds
xor
cmp
lods
inc
subl
mov
fsubrs
ss
and
xchg
mov
scas
pop
es
and
lock
adc
lock
fsubrp
push
mov
adc
les
sbb
hlt
pop
cmp
pop
push
push
ds
lret
sub
dec
dec
leave
int3
faddl
jo
shlb
xor
loop
in
xlat
cld
push
ss
test
int3
mov
in
repnz
hlt
mov
push
pop
mov
cmp
mov
adc
movsb
call
push
pop
xchg
lods
push
xchg
je
mov
mov
pop
cwtl
nop
push
cltd
out
outsl
shrl
sbb
divl
sub
cmc
fs
roll
mov
mov
shrl
enter
ds
pop
ds
insl
inc
dec
repz
fsts
add
ret
movnti
mov
xchg
loop
push
jne
jle
popa
cwtl
add
out
repnz
bswap
cmp
jns
insb
pushw
imul
push
popa
stos
inc
gs
ret
adc
mov
jnp
dec
or
inc
mov
cld
sub
and
cld
jmp
push
inc
push
push
nop
ret
xor
pop
pop
jnp
rolb
adc
xchg
cmp
scas
cmp
in
push
inc
cmp
dec
clc
pop
cmp
aaa
dec
push
jae
and
jle
cmp
push
rorb
loopne
dec
ret
add
es
inc
cmpsl
jb
lret
enter
cmp
sub
xchg
daa
inc
cltd
mov
sub
push
jno
cli
mov
add
and
mov
adc
or
jns
sbb
dec
pop
inc
addr16
add
jb
adc
inc
xchg
imul
fs
lahf
push
or
mov
ficompl
mov
into
insb
mov
push
dec
pop
and
pop
sub
pop
mov
movl
sbb
rcll
filds
call
mov
adc
in
pop
gs
mov
rolb
dec
cmp
js
popf
jae
fs
mov
cmc
in
inc
ret
inc
cmp
repnz
adc
push
rclb
dec
sbb
xor
pushf
xchg
dec
test
popa
xor
dec
jecxz
cld
jle
popf
mov
lahf
adc
mov
outsb
mov
scas
adc
or
lcall
add
inc
loop
xchg
int
enter
inc
test
rolb
dec
mov
test
pop
dec
pop
movsl
mov
push
mov
push
sub
sbb
repz
xlat
dec
xchg
sahf
cmpl
popf
loope
call
adcb
xor
cwtl
std
push
sub
jbe
mov
aad
adc
and
jb
or
leave
mov
and
mov
int
jmp
xor
gs
dec
call
movsb
test
sbb
cwtl
jecxz
cmp
mov
xor
jo
int3
sub
lods
sbb
xchg
adc
fcoml
mov
inc
dec
xchg
xchg
in
dec
or
or
sbb
loopne
out
xorb
sbb
lret
or
je
imul
lcall
test
das
jp
mov
inc
stos
sbb
and
cmp
sub
sub
vcmpsd
sbbl
jle
stc
fadds
or
iret
inc
jg
hlt
adc
dec
lods
cltd
mov
jbe
jp
mov
outsb
ret
jecxz
imul
xor
lds
push
jecxz
test
pop
push
fildl
jge
sbb
mov
sbb
sbb
or
xchg
sahf
jge
push
push
repnz
scas
imul
xchg
or
pop
inc
sbb
lcall
dec
jp
push
shll
movsl
mov
int3
pop
pop
fnsetpm(287
mov
pop
andb
rcr
jmp
pop
xchg
rcrb
imul
mov
push
cltd
and
mov
insb
pop
shr
push
xlat
cmp
negl
mov
ss
inc
push
shrl
mov
sbb
sti
shl
daa
jne
jb
stos
test
sti
out
mov
scas
jns
or
ja
inc
in
xlat
cwtl
sbb
movsl
inc
mov
jns
lahf
or
adc
out
and
push
ficoml
mov
add
add
sbb
jne
mov
pop
fdivr
out
inc
icebp
cmc
imul
jo
sbb
leave
sub
sub
bound
fistpl
xor
mov
cmp
sub
xchg
dec
enter
cs
add
ds
mov
popa
inc
cmp
scas
dec
dec
scas
aam
lods
test
mov
or
jecxz
sahf
sbb
call
sti
jmp
in
jne
lahf
push
xchg
stos
dec
imul
test
and
lahf
mov
sbb
add
pop
push
cli
jl
bnd
shrb
adc
enter
mov
lea
xor
rolb
cltd
xchg
repnz
dec
ljmp
fistps
ljmp
cmp
test
arpl
cmpsb
cmp
adc
lods
xchg
pop
dec
call
repz
mov
outsl
push
xchg
push
dec
cmp
jb
cs
fisubs
fcomi
xchg
in
cmp
les
movsl
cmpsb
jp
fdiv
mov
adc
cmp
inc
sbb
fbld
loop
mov
das
pusha
popf
cltd
jb
jne
pop
inc
test
inc
cwtl
rcrb
insb
add
lds
mov
leave
mov
jbe
movsb
xchg
sub
aaa
leave
add
test
inc
cmc
inc
pop
inc
xchg
push
dec
mov
out
rcl
push
sub
sub
cmp
loope
daa
xchg
sbb
push
xor
stos
clc
dec
loope
pop
movb
outsl
jge
mov
jne
xchg
mov
inc
add
dec
in
sbb
mov
and
leave
insb
pop
and
icebp
lea
mov
mov
insb
movb
push
jmp
fs
sbb
or
adc
frstor
movsb
cmp
loope
shlb
jae
into
aaa
adc
jo
and
das
pop
pop
fwait
enter
xor
mov
mov
push
fxam
mov
pushf
push
jp
inc
push
rol
fistl
insl
add
bound
push
jp
dec
stos
cltd
inc
jmp
movsb
sbb
mov
xchg
idivl
nop
cmpl
fwait
dec
mov
test
lds
ja
pop
cld
lahf
mov
mov
xor
std
jl
pop
xchg
push
adc
test
cmp
in
xchg
mov
add
mov
pop
mov
mov
pop
jb
rol
xchg
dec
mov
xor
add
xor
jge
enter
fstpl
push
push
incb
lahf
in
subl
cmp
rorb
loopne
movsl
divb
xchg
idivl
dec
ss
call
sbb
xor
or
rorl
test
fildl
mov
dec
add
xchg
jg
dec
ds
sbb
xor
lahf
add
mov
testb
movsb
lret
cmp
jbe
insl
outsl
push
aam
dec
out
xchg
mov
add
add
push
sub
sub
add
vshufpd
cld
pop
and
mov
sbb
mov
jge
push
push
test
push
pusha
es
ret
andl
xor
dec
enter
das
shlb
cli
pushf
pop
insb
push
mov
loope
enter
push
sbb
xor
into
sahf
pop
test
xchg
jae
lret
pop
shrl
out
out
inc
jb
mov
fisttpll
or
fcoml
mov
mov
and
test
sbb
adc
divl
inc
and
xchg
xor
sarb
fadd
mov
mov
dec
push
aam
je
xor
mov
xor
sbb
clc
int3
and
add
lods
add
xor
xlat
outsb
lret
fnsave
jb
inc
mov
sbb
inc
push
pop
stos
imul
cwtl
pop
pop
jle
mov
stc
mov
and
test
inc
rolb
cmpsl
leave
loopne
pusha
xchg
test
pushf
fsqrt
in
hlt
inc
sbb
imul
addb
xor
test
testl
jb
cmpl
repnz
mov
popf
sub
pusha
rorl
sub
sbb
lods
call
add
pop
or
cmp
or
jns
jle
or
movsl
andl
fcomi
ret
out
mov
cli
into
enter
fs
and
adc
dec
cmp
icebp
add
sbb
ret
ret
loop
jg
lret
dec
lea
movsl
jle
mov
lahf
mov
mov
adc
jecxz
in
xor
xchg
sub
or
xchg
pushf
mov
arpl
in
js
test
pop
lods
mov
popa
ljmp
repnz
dec
push
add
push
xchg
inc
movsl
xchg
sbb
cwtl
sbb
je
std
mov
mov
pushl
push
push
fs
enter
roll
ficompl
adc
imul
dec
jne
pop
stos
mov
ret
inc
mov
xchg
mov
aad
mov
dec
jmp
add
repz
sbb
push
jg
inc
or
jns
sbb
xchg
or
pusha
in
add
jmp
add
insb
cmp
push
cmpsb
or
xor
cli
enter
fidivrs
lods
mov
xchg
cmpsb
in
inc
jecxz
dec
les
jo
fidivs
jp
stos
jmp
push
imul
imul
sub
leave
ret
jb
ljmp
fwait
das
add
icebp
pop
adc
stos
xlat
pop
sub
mov
mov
call
push
dec
cmp
add
mov
cmp
xchg
add
stc
imul
xchg
stc
xchg
sahf
mov
jecxz
test
popa
or
test
punpckhdq
sub
fmuls
pop
xchg
dec
dec
les
xor
test
dec
test
xor
popa
fidivrs
js
mov
out
add
xchg
jbe
add
ja
in
imul
cmpsl
aam
inc
fldl
add
stc
mov
dec
daa
jnp
inc
inc
mov
sbb
cli
call
stos
nop
pop
push
mov
pushf
add
xor
pop
hlt
cmp
dec
cli
or
test
inc
sub
xchg
push
cmovno
adc
cli
imul
aad
adcl
xchg
xchg
jl
xlat
jge
inc
jg
lock
cwtl
mov
scas
jge
dec
loop
dec
pop
xchg
test
repnz
mov
mov
ficoms
shll
inc
cmp
push
scas
xchg
lret
or
aas
lods
pop
sub
in
push
sbb
push
jae
rcll
pop
das
add
push
pushf
repnz
mov
sti
aaa
mov
aas
or
jne
enter
test
stc
mov
push
xchg
mov
in
cwtl
je
rol
or
loope
call
cld
out
pop
or
scas
xchg
mov
dec
adc
fistps
cwtl
int3
xchg
call
cmp
jle
inc
fidivs
stos
cmp
xor
push
aaa
ljmp
lea
or
or
and
push
repnz
sarb
jecxz
sbb
popf
das
sub
in
std
aas
pop
pop
shl
dec
adcl
out
aaa
out
popa
iret
add
in
aam
fstps
call
xchg
xor
faddl
cmp
sbb
std
ss
stos
mov
and
mov
iret
je
stos
into
outsb
or
and
sub
cmp
xchg
scas
add
jns
lret
cltd
fs
clc
push
xor
icebp
xor
loop
add
stos
pop
pop
cmp
call
loop
out
shrb
mov
add
xchg
mov
insb
sub
dec
sbb
std
shll
mov
and
lock
jmp
out
and
or
cltd
pop
cmpsl
add
loope
imul
xor
test
adc
mov
test
in
pop
cmpsb
jp
sub
imul
pushf
mov
jp
data16
roll
call
repz
xchg
in
dec
pop
mov
in
mov
and
cmp
jb
push
pop
mov
ficoml
out
mov
and
push
ja
idivb
lods
xchg
sub
les
loope
fsts
sbb
sub
imul
sbb
loopne
sub
jge
mov
and
imul
cmpsb
outsl
xchg
adc
xchg
mov
in
and
cltd
push
pop
stos
add
lea
pop
sbb
or
jno
push
mov
fcmovnbe
shlb
xlat
add
icebp
sub
orl
in
addr16
sbb
les
adc
cmp
adc
pusha
xorb
xchg
inc
adc
jecxz
movsb
clc
out
xor
shlb
add
sbb
jne
scas
push
cmpsb
test
data16
mov
inc
dec
stos
enter
stos
jne
mov
or
fstpt
mov
test
pushf
cld
add
pop
ret
mov
dec
inc
dec
and
in
mov
shlb
inc
aam
sub
arpl
dec
sti
sbb
hlt
repz
stos
mov
es
adc
imul
xlat
xlat
arpl
jno
inc
mov
popf
fiadds
fwait
xchg
nop
mov
push
lock
sti
push
mov
fmuls
stos
mov
and
pop
push
mov
jno
dec
nop
and
lcall
mov
inc
in
dec
scas
shl
mov
or
setle
mov
push
inc
mov
sub
loopne
mov
sbb
call
xor
jns
pop
pop
jno
adc
or
push
ss
out
push
adc
or
imul
loop
insl
jg
popa
mov
pop
stos
shll
jg
rol
add
stc
and
or
cmp
ret
jnp
out
notl
cld
fwait
imul
jle
mov
mov
je
jbe
adc
jmp
adc
out
inc
and
dec
das
dec
dec
repnz
inc
push
jo
gs
push
and
dec
inc
mov
jge
mov
xchg
lcall
stc
mov
pushf
mov
add
clc
icebp
cmp
xchg
xchg
sbb
push
fxch
ds
test
or
inc
adc
ss
xchg
mov
clc
push
adc
mov
js
cld
inc
mov
jnp
sub
rcrl
imul
nop
adc
mov
addr16
pop
cmp
mov
subb
push
shll
in
cwtl
iret
and
or
push
lea
push
push
in
js
cmc
outsl
jb
xchg
or
lret
bnd
xor
sub
loopne
call
push
dec
test
mov
pop
add
inc
imul
call
and
mov
loopne
xchg
mov
adc
mov
call
sbb
pop
xor
mov
push
daa
xchg
mov
stc
xor
pushf
inc
in
orb
and
jnp
push
sti
test
out
leave
test
mov
outsb
fwait
or
mov
sub
pop
insb
mov
repz
int
mov
aam
in
fldl
int3
and
lods
lcall
loop
hlt
push
mov
lahf
cmp
test
jecxz
mov
adcb
jno
out
lods
scas
lret
repnz
sti
add
out
leave
xchg
lds
mov
jno
ret
sbb
push
fs
push
mov
out
call
lcall
iret
mov
sub
cmp
aaa
lds
sarb
push
mov
es
fxch
push
cmp
mov
cmp
mov
xor
gs
xchg
xchg
or
mov
loope
adc
in
imul
in
ror
bound
loopne
and
or
or
movsb
or
scas
jae
mov
ret
sbb
ja
and
jmp
and
pop
sbb
int
hlt
inc
ret
out
push
int3
mov
movsb
daa
push
dec
jmp
test
sub
lods
rcrb
jge
imul
in
sti
sti
add
bnd
and
xchg
mov
jbe
pop
pop
mov
rcl
nop
push
cld
gs
add
jne
popa
js
push
and
insl
jnp
lods
add
mov
cmpl
sbb
cltd
add
jns
and
push
pop
adc
pop
hlt
jmp
js
enter
jbe
aaa
fistl
cmc
lahf
push
jg
push
or
int
push
lods
or
adc
xor
add
push
mov
mov
test
jae
clc
fs
pop
imul
and
cli
lods
add
mov
add
pop
push
push
mov
mov
loopne
xor
insl
inc
mov
mov
and
mov
xchg
stc
cwtl
insl
sbb
pop
int
mov
mov
mov
fnsave
ds
stos
add
data16
jle
loop
jmp
cmpl
adc
mov
xchg
cmp
inc
xor
pop
inc
and
push
int3
push
out
xchg
rcrl
sub
push
adc
sbb
mov
jno
mov
xor
ror
dec
mov
lock
xchg
filds
push
jbe
fs
or
push
push
mov
in
in
jns
sbb
add
push
outsl
inc
lods
in
es
fldt
xor
xchg
lds
xlat
sbb
gs
fimuls
mov
sar
lds
add
inc
add
insb
dec
jmp
adcl
sbb
pop
mov
out
repnz
daa
mov
ret
jmp
out
cmp
into
mov
enter
cld
in
adc
or
fsubl
paddsb
pop
inc
jmp
jb
in
fsubs
lahf
imul
rorl
or
jp
outsl
std
movsb
and
jmpw
mov
mov
icebp
adcl
xchg
rclb
add
js
aaa
bound
fwait
push
inc
mov
in
addb
xchg
mov
xchg
sbb
push
pop
or
insb
dec
cs
fwait
ss
sahf
pop
cmp
ja
jnp
xchg
js
dec
bound
cmp
mov
mov
popf
fsubrl
cmp
push
daa
pusha
sahf
push
inc
hlt
pop
dec
bound
mov
test
xor
nop
xor
inc
pop
push
jno
and
mov
movsb
jne
in
and
pushf
and
loopne
cmpl
jo
inc
lea
decl
push
jp
sub
mov
xchg
sub
jp
stos
jle
call
pop
negb
mov
pop
push
and
jb
mov
push
int
mov
xorb
pop
ljmp
sub
das
push
shlb
out
push
loopne
ficomps
pop
xor
push
sub
jnp
mov
jecxz
dec
fcoml
fstpl
sbb
adc
mov
aaa
das
adcl
mov
aam
mov
daa
fimull
mov
mov
adc
sub
mov
lret
adcb
mov
mov
mov
sbb
orl
adc
adc
dec
movb
lock
jl
subb
pop
and
sub
es
push
adc
xchg
inc
cwtd
sbb
lods
inc
scas
outsb
pop
ret
add
dec
nop
subl
enter
adc
cmp
inc
push
js
cltd
sbb
add
adc
call
es
and
add
ja
dec
scas
push
ss
mov
bound
pop
inc
push
scas
sti
repz
push
mov
popa
push
jmp
push
bound
mov
adc
test
fs
inc
jbe
loop
xchg
mov
insb
jns
loop
jns
push
xor
xchg
mov
jge
ret
aam
shrb
pop
je
loop
sbb
push
fwait
jp
pop
loopne
push
pop
push
es
xor
mov
loopne
cs
push
and
adc
out
mov
xchg
mov
shlb
adc
sub
pusha
inc
mov
add
mov
add
sub
out
sub
mov
mov
aaa
add
cmpl
ret
or
mov
mov
sbb
and
jne
sbb
dec
xchg
mov
mov
push
inc
vshufps
int3
adc
adc
sahf
inc
lods
cmp
lcall
repnz
jmp
xor
xchg
xchg
pop
dec
cli
push
xor
pop
or
sbb
push
and
lea
mov
inc
sub
and
test
std
cs
es
mov
xchg
mov
aad
mov
pop
cmpb
jle
xchg
movsb
jle
inc
fs
add
xor
lds
stos
cmpsl
out
mov
push
mov
sbb
inc
repz
in
sub
jnp
jnp
xchg
cltd
imul
bound
stc
call
cmp
repnz
orb
lcall
mov
xchg
lret
dec
xchg
or
out
lock
sub
pop
loopne
stos
adc
mov
add
pop
mov
push
cmp
xchg
test
push
scas
add
add
out
sub
cmpsl
jle
inc
scas
inc
pop
ficomps
into
dec
bound
mov
cmp
aas
mov
pop
icebp
lcall
rorl
dec
push
ficoml
push
cs
pop
cmc
cwtl
scas
stos
inc
push
adc
das
and
xchg
or
and
psllq
sub
cli
xor
cli
loope
mov
out
imul
insl
pop
dec
xchg
out
push
data16
xchg
lret
mov
xorl
pushf
jae
mov
dec
dec
nop
outsl
jbe
popa
cmp
add
sub
sub
inc
fcmovbe
rcrl
mov
test
xchg
cmc
cmp
pop
xchg
cmp
push
stc
pop
clc
mov
repnz
int3
add
xchg
shlb
out
adc
mov
sarl
sub
fcoms
inc
dec
jle
pushf
enter
repnz
push
inc
js
out
sub
jg
and
lods
popa
and
jle
rorb
mov
xchg
jmp
loop
bound
ret
leave
push
sbb
sbb
mov
into
in
int3
sti
fsubl
mov
xchg
test
das
aad
jno
xchg
leave
mov
jecxz
imul
mov
mov
push
fildl
dec
cli
pop
dec
mov
and
jge
or
aas
mov
incl
pop
mov
mov
scas
inc
insl
pop
xor
pop
cmp
fs
mov
inc
imul
mov
lea
xor
data16
shrb
icebp
sbbb
add
push
fisttpl
aas
js
and
mov
test
lods
cmpsl
mov
and
in
adc
adc
lahf
negl
push
cmovp
push
mov
rorl
xor
std
adcl
scas
mov
test
fisttpl
xchg
sub
mov
pusha
sbb
test
mov
cmp
add
adc
ja
cwtl
adc
stos
xchg
lret
jge
xchg
jge
mov
insl
icebp
andl
sbb
mov
cmp
jmp
add
inc
fmul
js
adc
mov
inc
or
loopne
jmp
jp
out
cmp
add
jnp
xor
in
adc
sub
lcall
dec
push
jbe
pop
inc
out
ror
and
xchg
sbb
xor
je
or
pop
or
ljmp
fisttpll
out
loope
out
mov
repnz
xchg
mov
lds
inc
outsl
xor
mov
or
xchg
imul
mov
out
iret
ja
inc
lret
xor
iret
stos
sub
fldt
fwait
test
arpl
daa
jne
push
dec
pushf
hlt
and
dec
add
pusha
js
je
xor
iret
xchg
add
scas
cmp
xchg
sub
jns
psubd
mov
mov
add
dec
or
mov
pop
xchg
into
pop
and
fistl
outsb
xchg
fistl
stos
incl
les
sbb
sbb
mov
and
mov
lret
sub
nop
add
dec
jae
mov
pop
mov
mov
in
xor
scas
outsl
pop
xchg
cmp
mov
xor
rcll
into
pop
mov
pop
arpl
dec
inc
adc
adc
insl
push
push
cmpsl
movsl
push
push
and
add
aad
in
shll
inc
cmc
orb
lahf
or
jnp
sahf
or
pop
lds
test
xor
scas
push
cli
xchg
rolb
cmpb
or
sbb
lea
jns
xchg
xor
std
cmp
dec
inc
mov
push
ljmp
movsl
cmp
fucom
pop
mov
sub
stos
test
push
das
push
sarl
jae
push
jmp
mov
in
sahf
sti
cmp
leave
jecxz
mov
cmp
cmp
movl
rclb
out
sti
les
xchg
xor
repz
loop
pop
mov
rorl
stc
mov
arpl
mov
rcr
ss
mov
mov
aaa
mov
cmc
das
pop
pop
lds
add
mov
in
mov
pop
insb
mov
enter
stos
mov
out
mov
dec
mov
loope
aaa
fmul
setbe
adc
fistpl
or
sub
jp
rclb
sbb
add
movsl
xor
xchg
mov
jnp
fucomp
mov
mov
rcll
test
das
data16
mov
lock
cltd
repnz
insl
cmpsb
cli
scas
lahf
mov
mov
and
cmp
inc
fsubr
mov
dec
fwait
ret
add
jo
aad
in
sub
xor
call
mov
dec
in
sbb
xchg
jl
lods
pop
roll
inc
or
cmp
outsb
mov
test
add
dec
mov
add
mov
add
enter
mov
std
mov
dec
or
nop
sahf
outsl
lods
fldl
push
iret
sbb
xchg
mov
mov
adc
push
ffreep
cmp
lods
cltd
xchg
and
mov
jp
sbbl
inc
in
xor
or
mov
nop
dec
fsubs
popf
jo
add
pop
popf
enter
stos
push
push
inc
rolb
and
push
sub
jnp
repnz
xchg
int
loop
cmp
cmp
add
adc
pushf
imul
lds
popa
nop
xchg
vpshlb
and
in
jge
dec
cmp
out
push
jns
test
or
dec
xor
push
leave
fsubrs
and
and
pop
movsl
inc
rorl
push
aas
stc
sar
or
or
mov
movsl
mov
dec
frstor
fidivl
outsl
pop
push
and
or
xor
stos
cmp
popf
dec
outsb
push
xchg
sub
push
jnp
fidivrs
mov
mov
sbb
cmp
int3
mov
aaa
and
addl
pop
cmp
fmull
xchg
repz
adc
mov
shl
in
iret
dec
pop
cmp
mov
pop
pop
bound
push
push
mov
es
mov
mov
pop
dec
pusha
adc
arpl
sub
fs
jne
xlat
cmc
nop
sbb
stos
loopne
xchg
jmp
cmp
jns
je
popa
fs
push
fsub
xchg
jg
sbb
in
add
or
int3
stc
enter
aaa
mov
out
mov
js
jbe
push
xorl
leave
test
fdivl
ljmp
xchg
cltd
xchg
inc
ljmp
sub
dec
xor
inc
popa
lahf
mov
mov
cltd
adc
mov
mov
push
fnstcw
aas
push
mov
mov
or
inc
lret
jp
lcall
dec
into
in
add
call
or
and
fwait
pop
adc
gs
pop
int
mov
hlt
enter
js
mov
ja
dec
fisubrl
outsb
push
jno
mov
xchg
push
stc
int
push
ret
push
popf
cmpsl
push
call
idivl
rorb
movsb
cmp
ret
aad
push
fwait
gs
mov
add
xlat
aaa
add
inc
xor
xor
xchg
lret
cmpsl
xchg
jnp
imul
loopne
push
insl
rolb
enter
mov
shlb
add
std
adc
loopne
pop
or
xor
mov
pop
mov
out
fiaddl
scas
mov
arpl
and
or
xor
cmp
out
sub
push
insl
pop
push
mov
pop
cmp
sbb
jge
sub
jmp
les
lock
mov
imull
or
pop
or
jge
aas
adc
xor
pop
mov
lcall
push
outsl
adc
cltd
rcrl
adc
push
addb
mov
adc
mov
gs
out
dec
ds
daa
outsb
sbb
sub
out
xor
out
push
sub
push
inc
mov
cwtl
mov
xchg
push
mov
inc
mov
les
jecxz
or
aam
xchg
xchg
pusha
cli
or
insl
add
sub
mov
jge
add
enter
ljmp
das
cmp
fstpt
pop
gs
xchg
mov
xor
orb
cmp
movsb
lods
inc
dec
mov
mov
test
pop
out
inc
add
std
cltd
bound
xor
fmuls
cmp
imul
mov
jnp
sbb
pop
subb
int3
ficomps
xor
sub
and
adc
adc
sti
lea
ret
in
cmp
mov
clc
frstor
xchg
add
xchg
in
pop
jnp
add
mov
subb
sub
inc
arpl
jl
adc
pop
ret
scas
cli
or
sti
loopne
ja
repz
push
adc
pop
mov
jo
xchg
imul
xor
cmp
stos
daa
stos
rcl
imul
xchg
dec
fdivl
add
xchg
lods
sbb
fiadds
mov
ss
cltd
shrb
call
sahf
out
inc
cwtl
adc
iret
dec
pop
push
push
rcrl
cmp
add
sub
lods
dec
xchg
nop
and
in
and
dec
cli
rcl
or
popl
test
lock
js
jo
fsubs
ret
daa
push
out
je
cmp
xor
cmp
jae
int
jne
aad
and
dec
cmp
mov
cltd
adc
rol
and
stos
or
dec
jae
fs
mov
nop
dec
fildll
testb
xchg
jle
jb
xor
sar
pop
push
cmpsb
and
lock
pop
and
out
push
sub
in
push
jo
in
mov
lock
jns
rolb
xchg
and
push
aam
arpl
xlat
call
lcall
inc
sub
into
decl
shl
mov
or
jb
pop
mov
mov
xor
mov
cld
cmpl
jle
rorb
sbb
xor
ret
pop
sbb
enter
mov
add
or
fs
mov
mov
shr
jbe
xor
in
add
dec
xor
and
sub
lds
mov
mov
push
in
cmp
aas
aad
leave
sahf
add
dec
cs
jl
mov
jno
push
ds
jb
outsl
in
mov
sub
push
mov
mov
xchg
test
andl
dec
xor
scas
pop
int
jb
ds
sub
in
shlb
adc
jmp
xchg
int3
sahf
mov
dec
and
xor
dec
cmp
add
dec
stos
or
xor
jne
ds
lock
inc
lds
fucomip
movsb
push
rolb
jmp
add
adc
mov
lods
popf
add
dec
dec
andb
pushf
inc
orb
cmp
or
jp
sbb
jne
lret
mov
cli
test
iret
ret
mov
adc
loop
add
pop
cltd
inc
stos
jle
pop
add
pushf
cmp
arpl
sub
test
dec
addl
mov
cmp
imul
loopne
jp
and
lcall
fdivl
fbstp
hlt
dec
iret
ret
adc
outsb
push
mov
inc
mov
push
fisubrl
clc
push
sbb
xchg
iret
mov
les
xlat
std
xchg
scas
xor
push
sub
push
mov
pop
mov
aaa
aaa
jb
jne
cmpsl
outsb
mov
cmp
rcll
or
aaa
push
push
scas
add
dec
sti
scas
outsb
scas
imull
ficoms
inc
punpcklbw
jbe,pt
in
xchg
jo
inc
xor
stos
push
sarb
dec
jbe
ret
or
dec
mov
scas
jmp
jne
inc
inc
call
jecxz
jmp
push
mov
push
inc
sub
fstpt
xorb
or
les
jecxz
jae
jno
int3
aam
push
inc
sarb
pop
push
pop
jb
push
inc
dec
sahf
or
test
lods
insl
ret
loopw
or
dec
lock
sahf
or
push
fwait
xchg
adcl
dec
fst
jo
mov
lds
mov
pop
jns
jl
add
inc
fstpl
cmp
add
fisubl
enter
cmpsb
faddl
jge
das
addr16
inc
sbb
xchg
popa
xor
add
push
bound
push
stos
or
jmp
add
arpl
and
push
in
rolw
popa
xchg
sub
divl
or
enter
add
aam
std
pusha
daa
xchg
push
xchg
sti
mov
cmp
aas
lods
dec
add
cld
rolb
pop
pushf
lret
dec
mov
push
ficomps
cli
push
and
gs
xor
cli
fiadds
outsb
aad
dec
add
scas
pop
in
mov
arpl
je
xchg
enter
mov
push
out
jp
or
pop
fsubrs
jmp
les
cwtl
push
iret
cld
popf
pop
mov
mov
aaa
mov
imull
stos
ds
arpl
jno
push
int3
shll
shrb
jne
scas
int3
jae
lods
movsb
in
sbb
jbe
push
push
test
pushf
orl
cli
or
mov
cmp
jne
push
pop
xor
mov
test
sub
xor
stc
cltd
ds
aas
leave
ds
idivb
add
inc
shlb
add
xor
add
xor
mov
shl
movsb
cmc
sbb
xor
xchg
or
mov
shrb
scas
mov
enter
test
hlt
aaa
add
sbb
xor
inc
pop
insb
sub
ljmp
xor
out
or
popf
stos
movsb
pusha
dec
ja
cmp
jnp
adc
ret
sbb
xchg
mov
adc
sbb
jns
out
outsl
int
add
stos
pop
loope
xor
xchg
push
test
std
xchg
push
xchg
shll
cmc
call
or
sub
notb
les
and
mov
add
or
fcomp
cmp
push
xchg
pop
push
stos
in
je
add
fwait
ss
pop
inc
lods
inc
push
cmpl
jne
sbb
mov
out
in
push
cmp
xchg
pop
xchg
imul
sbb
shrb
fs
sub
inc
ss
xor
mov
jmp
fistl
or
push
push
xchg
movsb
xchg
rcrl
cmp
stos
lcall
fisttps
pop
pop
vpshufhw
into
test
sub
insb
cmp
mov
sub
adc
adc
int
jo
lods
mov
jo
or
dec
clc
into
dec
inc
adc
test
push
push
add
out
pusha
aas
xchg
cmc
sahf
lret
out
mov
popf
out
cs
addr16
sub
lea
mov
xchg
aaa
adc
mov
ljmp
xor
fidivrl
adc
arpl
ret
or
stos
mov
mov
inc
push
cltd
lods
sub
inc
out
add
pop
inc
pop
movsb
ljmp
jp
sbb
adc
jp
faddl
cmp
mov
and
seto
outsl
notb
cltd
push
loope
mov
or
xchg
jmp
sbb
cmp
por
popf
lods
shl
adc
sub
adc
fsub
mov
shlb
push
or
arpl
sub
adc
hlt
insl
int3
jl
adc
sarl
hlt
mov
jne
xlat
adcb
fcmovb
into
xor
sbb
mov
push
out
nop
test
lds
dec
pop
xlat
pop
add
pop
cmpsl
int
and
xchg
push
push
mov
cmp
mov
cwtl
cmp
lods
insl
imul
xchg
push
mov
cs
adcl
fnstenv
jmp
pop
xor
loop
jns
sbb
addr16
clc
add
mov
or
xlat
pop
mov
mov
ss
push
pop
or
inc
sbb
cmp
dec
xor
cmp
push
scas
mov
rcl
adc
ret
das
int
mov
inc
lds
lcall
inc
or
pop
cmp
xor
fbld
and
inc
fwait
rcl
js
add
into
xchg
add
xor
and
fldcw
fs
cmp
lds
jg
adc
xchg
sub
mov
sub
pop
into
popa
mov
push
cmp
les
cmp
cld
stc
insl
jbe
aad
mov
inc
pop
ds
sti
outsl
cmp
adc
lds
into
out
dec
push
imul
mov
ss
sbb
or
mov
and
andb
or
jg
add
pushf
lret
xchg
pop
mov
pop
lahf
jns
xor
sbb
stos
fsts
fnsave
pushw
enter
int3
jecxz
cmpsb
xchg
inc
sti
out
sbb
or
fidivrl
ror
jae
sbb
out
inc
xchg
sub
sbb
dec
xor
xor
mov
xchg
mov
icebp
shlb
test
inc
data16
das
pop
inc
mov
push
dec
jmp
and
pop
jg
std
insl
add
into
into
mov
mov
nop
leave
lcall
loope
dec
pushf
faddp
cmp
mov
mov
dec
in
sub
fildll
push
or
outsl
jmp
mov
xor
dec
mov
shrb
lea
inc
jbe
dec
or
and
imul
push
test
xor
dec
out
cwtl
adc
in
sahf
cwtl
outsb
mov
mov
rorl
or
cmp
xchg
ret
mov
scas
adc
int
rcrb
mov
jnp
sbb
cmpsb
dec
mov
outsl
hlt
mov
dec
aaa
addr16
or
gs
add
sbb
mov
mov
pusha
subl
push
xor
std
outsb
shll
pop
out
and
sbb
push
xchg
xor
shrl
ror
mov
divb
lahf
adc
out
sub
insl
push
in
aam
nop
pop
cmpsb
pusha
push
shl
enter
je
xchg
sar
cmova
xchg
sbb
stos
xchg
mov
fwait
dec
in
xchg
pop
jl
mov
loope
js
in
mov
xchg
scas
jne
cwtl
sti
or
ror
cmp
pushf
inc
adc
dec
cli
dec
mov
scas
cltd
test
mov
movsb
sahf
xlat
outsb
push
outsb
xchg
push
adc
into
or
lds
inc
jmp
clc
sbb
es
stos
sbb
or
xor
push
rcr
push
or
lret
push
sti
in
mov
fisttpll
mov
sub
lock
mov
add
pop
mov
imul
int
js
arpl
or
push
jle
jo
jmp
dec
scas
mov
cld
rcll
pop
mov
bound
sbb
pop
aad
jbe
sub
aam
in
das
imul
movsb
cltd
sahf
push
push
data16
enter
mov
cmpsl
data16
in
stc
jae
jnp
and
pop
mov
xor
xchg
les
fnsave
jne
pushf
std
pop
and
or
out
adc
and
jle
sub
aas
pushf
test
pop
push
aas
pop
adc
and
mov
sub
push
cli
xor
ss
xchg
and
decl
repz
jecxz
mov
inc
mov
fidivl
popa
jmp
or
push
shlb
or
add
push
ds
or
mov
xor
mov
xchg
arpl
les
push
dec
ljmp
pop
jbe
xor
shlb
add
loopne
adc
stos
jnp
scas
jbe
sub
loop
mov
inc
lods
inc
ds
in
unpckhps
mov
pop
dec
sub
jge
push
push
xchg
adc
xchg
inc
mov
xor
jmp
jae
int3
mov
and
cmp
popa
inc
mov
shlb
ret
mov
pop
or
push
sarl
adc
cmp
out
sbb
pop
filds
into
cmpb
data16
leave
cmp
add
in
fwait
insl
fwait
mov
push
dec
rclb
loope
sarl
xchg
jns
cs
pushf
mov
pop
test
inc
dec
insl
or
out
push
mov
mov
cmp
shll
sub
or
into
add
mov
dec
pusha
xor
mov
bnd
in
xchg
pop
xchg
inc
in
adc
clc
xor
xlat
dec
jp
js
and
notl
sbbb
fucomip
stos
and
xor
leave
aaa
add
in
sbb
and
fists
push
sbbb
jns
xor
inc
mov
ss
in
and
es
loope
adc
and
ret
aad
je
or
into
jbe
arpl
aad
ficomps
fldl
pshufw
ret
sub
jae
rep
jp
ss
mov
movsl
dec
xor
pop
push
pop
ljmp
and
push
imul
push
xchg
xor
cmp
icebp
push
inc
lods
push
pushl
or
ss
adc
rcll
imul
and
sub
mov
push
sbb
sti
pop
pop
jnp
mov
dec
jb
sub
pop
test
pop
mov
jecxz
jne
or
stc
pop
jle
adc
jmp
outsl
test
es
dec
sbb
mov
inc
enter
outsb
inc
call
out
mov
xor
xorl
addr16
and
cltd
nop
lods
rorl
outsl
push
push
andl
inc
je
int3
adc
repz
sarl
addb
jnp
sahf
andl
idivl
jg
pop
lds
in
and
repz
cmp
sbb
lock
adc
push
nop
int3
das
push
lahf
xchg
mov
and
dec
add
popa
mov
adc
xor
mov
neg
in
xor
je
pop
inc
cmp
mov
insl
fldl
xor
cmp
push
ds
dec
cld
mov
pushf
push
aam
mov
mull
out
popa
xlat
icebp
mov
cld
or
cmp
or
jp
jle
sbb
sbb
pop
dec
dec
aaa
loop
lcall
stos
out
mov
push
add
mov
lret
pop
pop
xor
or
xor
sub
or
push
mov
lcall
xchg
push
stos
movsl
ljmp
or
push
xor
jmp
push
add
lret
inc
repz
iret
jno
cmpsl
cmp
in
or
mov
imul
ja
jne
cwtl
mov
aam
stos
stos
movsb
cmp
test
mov
mov
das
push
and
or
insl
adc
cmp
pop
ficoml
shlb
dec
push
ljmp
xor
int3
and
mov
push
decb
and
pushf
clc
fmull
jecxz
jg
and
xchg
dec
cmpsb
or
push
mov
test
and
adc
arpl
mov
insl
or
in
lods
jno
mov
popa
inc
add
jnp
inc
and
mov
cmp
sbb
fsubl
pop
lds
gs
xor
pop
bound
push
popf
pop
lods
movsl
or
mov
cmp
inc
aam
pop
fmull
data16
sti
cwtl
cmp
call
pusha
loopne
or
fwait
push
shl
pop
and
sbb
sti
rol
js
mov
adc
jo
leave
gs
cld
mov
dec
pop
fistps
mov
test
xchg
adc
pop
mov
lret
ds
popa
iret
in
and
or
xchg
push
es
mov
dec
dec
shrb
ja
mov
inc
push
roll
mov
dec
push
push
mov
sahf
flds
jl
into
rclb
add
js
pop
int
clc
jg
xchg
jne
cmc
arpl
mov
inc
inc
xor
jecxz
lods
leave
dec
jmp
or
std
xor
ljmp
inc
and
push
int
and
lods
sbb
out
repnz
jnp
cmp
xchg
add
dec
pusha
jb
ret
mov
push
push
jns
dec
cmp
mov
outsl
jg
fmuls
xor
cwtl
imul
sub
adc
gs
pop
or
jns
add
pop
inc
ret
lods
push
push
out
movsb
or
daa
popf
push
jecxz
subb
jge
fstpl
xchg
or
imul
ljmp
push
pop
mov
mov
add
mov
pop
push
ret
or
rcrb
mov
pop
dec
bnd
aaa
cltd
iret
fstpt
enter
push
das
sbb
aam
or
sub
inc
xor
mov
push
mov
test
loop
idivl
icebp
mov
adcb
push
sti
mov
lds
add
xchg
or
ficoms
fisubrl
insb
cmpb
inc
mov
jmp
insl
xchg
mov
xor
icebp
jbe
add
dec
jno
xchg
lret
push
out
cmpsl
insb
adc
sub
push
lds
popa
stos
sbb
xchg
testl
push
mov
pop
ror
ret
push
test
or
out
xor
bound
ds
repz
xor
sbb
sub
lea
adcb
movsl
idivb
fcmovbe
lods
push
and
fs
sbb
adc
dec
nop
cmp
popf
jl
jne
test
in
iret
into
dec
out
ficoml
push
dec
mov
inc
push
sub
lret
and
dec
into
jecxz
and
test
arpl
dec
jge
jne
mov
addr16
bound
or
sti
dec
mov
sbb
mov
rcll
mov
mov
mov
out
xadd
pop
mov
sub
xchg
sub
push
and
leave
or
mov
push
arpl
mov
cmc
aam
add
mov
pop
push
leave
or
das
xor
xchg
sti
push
mov
dec
mov
jns
and
xchg
fiaddl
ficompl
inc
xor
movsb
add
pop
in
dec
xor
ja
add
dec
adc
xor
or
test
ds
lods
out
sbb
sti
dec
into
and
pop
pop
jle
pop
in
jnp
in
xchg
xchg
mov
movsb
arpl
rorb
std
mov
test
fs
repnz
les
adc
and
addb
jne
and
pop
sbb
xor
mov
xchg
xchg
or
aad
fs
jae
dec
sti
mov
mov
inc
pop
fs
add
shr
test
or
out
mov
adc
in
movsb
adc
pusha
adc
mov
popa
stos
add
iret
sub
lea
cmp
mov
xor
push
mov
pop
cli
lea
jns
sub
call
pop
mov
stos
jo
xchg
loopne
fcmovnu
jbe
fs
adc
lea
sbb
das
cmp
xor
mov
add
repz
movsb
xor
pop
flds
or
insl
jmp
rcr
cmp
arpl
jmp
cmp
cmp
and
mov
dec
sub
push
daa
lods
adc
inc
cs
add
insl
adc
and
add
inc
arpl
daa
nop
ja
dec
jo
ficoms
push
repz
mov
mov
dec
sahf
incb
movb
xchg
mulps
std
xchg
mov
jge
jno
insb
ljmp
test
cmp
outsl
push
adc
cmp
test
and
stos
loop
inc
cltd
inc
xor
mov
mov
push
fstl
xlat
or
mov
xchg
mov
xor
pop
popa
xchg
out
out
int3
std
inc
sub
ja
lret
inc
add
or
mov
jl
loope
fcmovu
push
call
pop
roll
push
out
enter
jg
scas
dec
fneni(8087
mov
inc
add
mov
pop
mov
jns
inc
ja
loopne
add
mov
loop
fnstenv
dec
add
push
jle
fs
filds
xchg
add
or
jnp
iret
or
add
sub
adc
jo
negb
pop
mov
fsts
inc
mov
mov
cmc
xchg
jo
cmp
mov
dec
test
pop
mov
mov
adcb
test
adc
dec
or
inc
sbbl
scas
pop
sarl
pushf
and
xor
loope
xor
xchg
fbld
jmp
pop
bound
in
test
shll
outsb
jl
lods
and
fnstcw
mov
and
jne
je
push
push
ficoms
lods
jl
jge
jge
and
stos
clc
sbb
jg
int
cmp
bound
or
lea
leave
pop
mov
orl
jmp
xchg
cmpsl
jb
mov
lods
fisubrl
ljmp
inc
add
cmp
lcall
addl
and
dec
and
push
ret
push
sub
js
mov
gs
mov
es
jbe
inc
pop
xchg
outsb
aaa
outsb
and
fwait
adc
sbb
mov
add
sti
xchg
sub
fldt
mov
repnz
mov
ficoms
jnp
dec
int3
push
xor
movsl
fnsave
dec
test
sbb
or
insl
add
pop
jg
mov
mov
pop
js
adc
add
jl
mov
mov
iret
mulb
sub
in
mov
mov
in
inc
iret
lret
mov
add
lcall
mov
sbb
add
popf
stos
ss
mov
sbb
or
fcompl
xor
out
dec
fs
dec
popa
imul
mov
lret
insb
xor
test
sbb
testl
movb
adcl
fidivrs
lock
and
mov
popf
cmp
sbb
pop
scas
sahf
stos
push
addr16
out
aas
cmc
test
sbb
aam
scas
xchg
or
sbb
cmpsb
jmp
mov
adc
and
test
enter
out
xchg
add
jns
and
add
das
cwtl
sbb
pop
or
add
xor
clc
cmp
popf
pop
adc
notb
mov
pushf
cmp
arpl
and
fwait
std
adc
popf
cmpsl
in
lods
fsubp
or
inc
insb
cmp
into
dec
ljmp
jb
adc
inc
sbb
inc
popa
in
xchg
outsb
scas
cmp
imul
testb
call
mov
fsub
pushf
jmp
scas
mov
out
je
into
movsb
sbb
add
rorb
testb
test
xor
imul
or
push
pop
les
scas
dec
dec
mov
push
mov
out
and
cmp
sbb
fnstsw
fdecstp
lea
push
mov
inc
jae
lock
pop
or
or
xor
sub
and
mov
iret
mov
mov
sti
nop
jl
xor
cmp
imul
jmp
into
xchg
iret
xor
ljmp
stc
or
mov
aad
daa
cmpsl
add
xchg
mov
pop
addr16
ljmp
adc
inc
lds
push
sti
mov
adcl
cmp
sub
mov
lods
dec
lret
rclb
insb
mov
ret
scas
xchg
cli
mov
pop
shll
jecxz
inc
jecxz
fnstcw
cmpb
or
cmp
jb
fs
jg
imul
fcmovnbe
insb
inc
in
and
dec
inc
es
xchg
cmp
scas
mov
jae
and
cmp
sub
jmp
call
push
inc
lahf
fwait
outsb
stc
js
jp
pop
mov
mov
dec
shlb
pop
fimull
mov
lock
jnp
push
imul
add
iret
mov
push
call
repnz
mulb
push
test
fwait
and
mov
stc
mov
xchg
or
testb
adc
pop
movb
inc
or
rorl
xor
sbbb
jle
aad
mov
pop
pop
mov
aam
iret
inc
fistpl
loope
push
int3
jp
mov
ror
pop
and
out
scas
outsl
jnp
xchg
sub
dec
adc
int3
mov
shlb
and
jae
xchg
adc
xor
pop
pop
stc
jmp
imul
push
pop
push
mov
cmp
sub
or
lods
mov
loope
jns
mov
out
xlat
arpl
movb
jnp
lret
ljmp
xchg
xchg
sbbl
pop
lods
and
xchg
add
xchg
mov
aas
jecxz
addb
or
sbb
ljmp
cmpsl
call
popf
and
test
push
jp
and
xchg
andb
add
and
ljmp
xchg
pop
lcall
and
jl
mov
movsl
mov
shlb
adc
jge
sar
test
cli
mov
jb
mov
jno
jmp
add
in
jmp
std
xor
pop
leave
test
out
sbb
inc
cmpsb
pop
jge
test
imul
cmp
fprem
pop
pushf
pushf
dec
sbb
pop
fwait
and
lret
jecxz
cwtl
or
jne
pusha
cmp
jmp
into
arpl
mov
adc
and
adc
dec
jne
int
pop
stos
fwait
outsb
pop
shlb
cmp
dec
push
test
mov
pop
pop
fistl
jb
ficompl
rcr
xchg
aaa
std
inc
out
adc
out
push
std
scas
dec
daa
push
cltd
xchg
jo
aam
pop
ljmp
outsb
xor
dec
sbb
mov
pushfw
jp
and
icebp
push
inc
fldcw
pusha
mov
mov
mov
fwait
mov
fidivrs
push
orl
sub
call
movsb
in
in
int
nop
or
sarb
mov
xchg
cmp
es
negl
xchg
ret
mov
pop
jb
lock
into
sbb
and
aas
dec
ja
ja
sahf
shlb
add
mov
and
sbb
mov
inc
out
mov
lock
sub
xchg
pop
xchg
int3
jnp
adc
sub
mov
xchg
mov
inc
cmp
popf
pop
sub
fisttps
xlat
dec
mov
and
xchg
add
imul
in
test
fidivrs
inc
aad
mov
jmp
pushl
cmpsl
push
push
iret
xchg
push
push
stc
sub
xor
push
pop
adc
movlps
mov
mov
icebp
mov
dec
nop
sbb
sahf
add
inc
jbe
fdivrp
xchg
lea
into
jb
inc
push
outsl
sbb
lret
and
rorl
xor
push
or
outsl
xchg
mov
into
sub
fcomi
jnp
xchg
movsl
push
pop
jg
jae
jg
iret
or
jp
pushf
xchg
out
in
test
push
pusha
adc
xlat
mov
xor
loope
xchg
in
adc
rcrb
jae
dec
mov
xchg
adcl
outsb
aaa
fcmovu
pop
sub
pop
ret
test
jnp
cmpsb
je
popl
fistpl
test
dec
fidivrl
push
stos
mov
les
push
fs
mov
loop
xchg
daa
test
jmp
push
jnp
out
daa
mov
xchg
outsl
dec
push
pop
ss
mov
sahf
xlat
mov
in
or
imull
dec
dec
daa
jp
enter
jbe
pusha
pop
fstl
dec
cmp
pop
fadds
icebp
push
test
add
or
and
insb
and
sub
jmp
jg
scas
test
push
jl
xchg
mov
leave
aam
adc
sbb
jb
iret
add
aas
in
cmp
inc
xchg
insl
mov
movsb
orb
fwait
imul
add
cmp
mov
xlat
sub
jbe
cltd
mov
jmp
mov
shrl
jg
aad
cli
rcrb
xor
ret
jp
imul
icebp
xlat
cmpsl
inc
sbb
or
clc
clc
test
aad
push
cmp
mov
and
sahf
and
leave
add
mov
sbb
sbb
ljmp
or
data16
add
or
and
xchg
insl
mov
stc
shlb
inc
popa
lret
mov
aaa
hlt
ss
lods
pusha
stos
lret
cltd
push
scas
xlat
inc
je
add
iret
dec
mov
adc
jl
fs
and
xlat
lods
dec
add
adc
push
jno
lcall
shl
xor
out
rep
jecxz
fisubrs
mov
mov
add
mov
loopne
dec
pop
or
out
fwait
mov
mov
adc
push
inc
fidivrl
sub
das
lret
call
fisubrl
add
xchg
stos
or
jp
mov
call
cld
shll
cli
movsb
add
andl
mov
lret
push
and
addl
push
lock
out
push
or
sbb
xor
jns
iret
js
out
stos
je
cmp
in
loope
nop
stos
jp
ljmp
mov
xchg
sbb
push
pushf
push
pop
dec
mov
push
insb
sub
mov
aam
div
jecxz
daa
lea
jle
mov
das
dec
arpl
pop
push
aas
mov
call
cli
cmc
jp
popa
ds
sbb
xchg
push
gs
lret
jo
pop
icebp
pushf
out
jb
cmc
push
xchg
xchg
dec
cs
lds
inc
and
std
and
jno
fstl
lods
sbb
mov
mov
outsb
inc
pusha
movl
mov
push
sbb
adc
jne
mov
and
or
ret
push
push
adc
lret
cmp
in
xchg
fisttpl
lret
mov
aad
pushf
sbb
into
cmp
add
jns
jae
test
test
or
add
mov
and
outsb
test
lds
outsl
cmp
xchg
xor
int3
lret
loop
ret
outsl
mov
cmp
xor
sbb
outsl
xchg
incb
xlat
mov
stos
aad
push
aad
jle
cmp
jbe
sbbb
jbe
popfw
adc
jne
sbb
push
and
mov
outsb
fs
outsl
call
out
pop
mov
mov
push
mov
arpl
pop
cmpsb
sbb
jmp
add
adc
cwtl
fucom
jnp
and
fadd
lret
xchg
xor
xor
jmp
mov
mov
fdivl
adc
stc
aam
dec
cld
inc
lcall
call
fstp
aad
mov
enter
xchg
mov
mov
mov
pushf
fimuls
push
or
cs
push
pop
sbb
iret
fnstenv
cmp
adc
sahf
ret
jo
sti
sub
outsb
push
pop
xor
xor
sti
mov
and
cmp
mov
inc
inc
cli
adc
or
xlat
fwait
out
test
xchg
push
stos
xchg
test
push
movsb
ss
or
cwtl
mov
insl
call
jne
cmp
clc
push
pop
fildl
mov
jo
test
imul
cmp
sarl
das
xchg
fidivrs
mov
xor
mov
hlt
jne
ret
dec
or
notl
or
imull
pop
push
xor
hlt
fimuls
mov
fs
mov
xchg
add
mov
mov
int3
aad
sbb
xchg
loop
into
or
inc
jg
sub
cmpsl
dec
push
sbb
xor
mov
mov
inc
sbb
fcomip
mov
cmpsl
dec
fdivl
mov
fisubrs
lret
mov
rol
repz
push
int3
fadds
mov
out
out
and
hlt
cmpsl
mov
sbb
sbb
aam
out
and
pop
and
bound
fs
in
outsb
ja
movsb
xchg
jl
add
xlat
mov
shlb
gs
je
or
mov
sbb
and
loopne
mov
int
mov
mov
cmp
pop
push
pop
das
pushf
test
rolb
lret
movl
rolb
push
or
inc
xor
mov
adc
pop
xlat
mov
jg
xor
cmpb
xor
std
and
fsubrp
fcmovu
and
pop
cwtl
subb
mov
lods
dec
adc
add
lds
cmp
mov
insb
jnp
loopne
cltd
in
out
mov
jns
cmp
pop
inc
andl
pop
xlat
data16
loopne
jmp
pop
shll
je
or
pop
xchg
sarb
iret
roll
push
mov
xor
lods
push
cmc
lods
gs
faddl
pop
fnstenv
lds
fs
mov
xor
pop
ror
pop
xor
xchg
pop
stos
cmp
cmp
dec
or
sub
pop
lahf
or
jns
in
jno
lds
int3
push
and
xlat
mov
lcall
pop
sbb
nop
stos
stos
mov
hlt
adc
pop
mov
xchg
imul
add
adc
movsb
mov
mov
xor
mov
cmp
std
hlt
daa
sahf
loop
call
and
pushf
outsl
mov
pop
push
fs
hlt
jnp
jns
insb
ficompl
dec
xor
out
adc
int
mov
popf
jge
xlat
jge
push
xor
pushf
sbb
push
popf
or
lcall
dec
jcxz
aas
imul
xchg
scas
arpl
testb
lea
sub
push
cli
leave
cli
std
out
fsts
mov
ror
sbb
mov
fcmovnu
inc
and
shlb
pop
cmpsl
cld
loope
mov
std
imul
pop
push
pop
lret
stos
add
imulb
imul
enter
arpl
mov
loop
into
xor
aas
loopne
fdivs
push
sub
imul
es
inc
sub
or
jnp
pop
mov
add
pop
dec
mov
jne
scas
inc
xchg
fmuls
or
dec
dec
pop
ss
pop
mov
sbb
xor
mov
mov
xchg
inc
add
call
mov
nop
push
repz
fisubrs
inc
jp
dec
repnz
add
aam
mov
mov
cmp
cmp
insb
mov
and
movsl
repz
pop
mov
inc
ss
or
mov
ljmp
mov
outsb
pop
push
pusha
add
adc
push
in
addr16
test
pop
inc
and
imul
mov
xlat
sti
jmp
xlat
fwait
inc
js
repnz
lock
pop
jl
inc
cmp
mov
inc
loope
cmp
imul
push
push
jle
or
mov
dec
out
push
cmc
fisubrl
sbb
and
je
push
decb
sub
dec
push
call
inc
mov
mov
shrl
inc
cltd
lods
mov
xchg
mov
hlt
jl
mov
gs
fldl
loope
les
mov
clc
js
xlat
jb
mov
jecxz
test
test
mov
inc
imul
enter
mov
fnstcw
xchg
pop
es
in
shl
aas
sahf
cs
adc
in
inc
or
out
aam
mov
rcll
dec
imul
aad
sub
jp
aaa
movsl
cmp
mov
loope
fucom
sbb
aas
les
adc
popa
mov
pusha
bound
nopl
cmp
shlb
in
repz
in
in
arpl
dec
mov
mov
lret
mov
push
jle
je
dec
pop
lret
mov
aam
or
shl
sub
lret
inc
aas
xor
jp
stos
dec
fimull
aam
popf
sub
icebp
pop
mov
push
cmp
aaa
sub
out
subl
inc
jbe
out
xor
push
sub
mov
or
dec
mov
xchg
add
fadds
push
jnp
loope
lods
xorb
loopne
iret
aam
lcall
inc
pop
pop
mov
add
test
cmpsl
dec
xor
lea
mov
iret
xor
pop
push
jbe
mov
cli
mov
mov
addl
sbb
mov
leave
inc
jge
lock
jbe
and
jmp
inc
lock
mov
lods
or
mov
jp
or
mulb
jne
sbb
outsl
fucomp
cmc
pushf
jp
ss
and
xchg
repz
push
and
push
sub
ret
xchg
daa
sub
mov
ja
mov
fldl
xchg
fs
fistl
mov
ficoms
xchg
mov
cmp
hlt
or
les
aad
les
in
dec
jb
into
movsl
xchg
mov
jo
and
xchg
pop
mov
or
pop
sub
test
in
mov
mov
mov
ja
and
lods
inc
sbb
dec
dec
mov
pop
sbb
pop
fmuls
inc
idivl
fnstsw
out
call
jnp
dec
dec
ret
mov
jecxz
lock
rorl
add
push
ja
cmp
ljmp
pop
out
xor
jecxz
dec
or
inc
inc
addl
jb
jo
rolb
sub
test
lret
sub
mov
pop
or
jmp
xchg
mov
sub
jnp
mov
push
mov
pop
lahf
rolb
xor
push
mov
push
hlt
arpl
xor
negl
push
push
fsubl
rorl
push
out
sub
mov
or
add
shrb
andl
test
mov
sub
xor
sub
mov
jmp
test
mov
ret
pop
inc
test
xor
stos
lods
xchg
adc
aam
sub
hlt
pop
jle
cwtl
pushf
inc
roll
xchg
stc
loope
addr16
out
cmp
and
xchg
xor
cld
mov
mov
fs
bound
jb
call
ds
sbb
pop
sti
add
pop
pop
mul
add
movsb
inc
xchg
sar
aas
jnp
jae
fs
push
dec
rorl
out
jno
and
es
inc
std
mov
add
jnp
adc
cmpsb
subb
adc
push
imul
push
pop
mov
rcrb
jbe
or
sub
pop
lock
pop
jecxz
cltd
mov
jbe
or
jns
test
xor
mov
in
sub
xlat
pop
out
mov
mov
icebp
jne
ss
andb
test
fwait
out
into
js
push
pusha
lock
scas
xor
and
dec
rcll
mov
scas
loope
sbb
and
mov
js
lahf
add
jecxz
cmpsl
imull
mov
roll
stos
leave
fisttps
sti
push
test
cmpsb
xor
ja
sbb
jnp
shl
int
outsl
xor
fsubrs
inc
lods
or
outsl
stc
sbb
notb
sub
mov
cmpsb
lcall
aaa
pop
pop
fimuls
sub
mov
pushf
cmp
add
sahf
xor
mov
lds
movsb
jecxz
dec
in
out
mov
fidivrs
add
inc
jmp
test
in
sahf
or
adc
mov
dec
pop
mov
xchg
sub
lret
xchg
cmc
aas
rcll
mov
push
dec
rol
xor
imul
sub
lahf
iret
jnp
and
fucomip
lea
inc
add
test
mov
leave
add
imul
xchg
jns
jle
and
inc
cmc
clc
aam
jnp
xchg
add
ljmp
fldt
xchg
jnp
fidivl
stc
rorb
mov
cmpsb
gs
inc
pop
mov
jb
dec
or
mov
add
icebp
mov
imul
pop
fsubp
rcrl
sub
rcrb
pop
jb
cmp
push
add
aas
fimuls
daa
les
mov
in
mov
aad
pusha
inc
jo
fwait
inc
or
ja
in
pop
adc
xchg
cmp
stc
pop
xchg
inc
outsb
add
xlat
xchg
mov
mov
loopne
iret
lahf
xchg
cmp
mov
pop
les
stos
repnz
mov
subb
out
xchg
pop
mov
out
dec
xorl
sub
mov
sbb
js
sub
pop
or
xor
and
stos
jl
xorl
ljmp
test
and
mov
sub
mov
pushf
dec
nopl
xchg
cs
pop
test
idivb
test
daa
aad
in
mov
fwait
mov
adc
mov
mov
or
inc
aam
in
and
and
push
mov
popf
push
lcall
sbb
ljmp
cmp
repnz
add
addb
dec
scas
xchg
cld
cmp
pop
fcmovbe
aaa
shl
sbb
insl
movsb
mov
fwait
aaa
fdivl
xchg
xor
add
sti
push
inc
xchg
aam
test
daa
xor
fbstp
push
pop
cmpsl
mov
ret
leave
sbb
xchg
cld
adc
sub
test
scas
movsb
sbb
mov
stos
pop
insl
xor
mov
pusha
xchg
and
cs
mov
cmp
cld
adc
jl
in
data16
jge
and
adc
loop
inc
into
arpl
jecxz
inc
jg
mov
divl
scas
andl
mov
sbb
ds
push
jne
scas
shlb
sbb
or
ljmp
mov
sub
pop
adc
or
stos
dec
rolb
add
test
jl
inc
nop
jmp
xor
jae
xchg
lea
fisttpl
fistpll
inc
outsl
dec
and
add
pop
es
mov
iret
das
jge
inc
sub
jne
sub
mov
cwtl
push
imul
inc
dec
stc
mov
cmpsl
call
std
imul
out
stc
sub
mov
jmp
fidivs
adc
js
dec
ret
xor
dec
xor
and
xchg
loopne
lcall
mov
cwtl
cld
pop
pop
ret
into
stc
rclb
add
mov
in
sub
std
clc
sbb
dec
outsl
sbb
jae
les
push
rcrb
stos
xchg
push
insl
jg
mov
push
sub
icebp
mov
inc
or
in
mov
ja
es
mov
xor
sbbl
or
mov
sub
adcl
push
enter
mov
arpl
bound
dec
mov
fldl
cmp
mov
subl
mov
or
or
push
jmp
mov
ds
add
insb
dec
cmp
pusha
inc
fdivl
sub
fildl
mov
sbb
sub
pushf
mov
gs
jecxz
dec
xchg
dec
daa
jmp
enter
or
jne
loopne
aad
int
sbb
adc
push
aad
ret
loopne
fiadds
jbe
or
fbstp
testb
aad
lea
pop
lcall
pusha
sahf
data16
or
pop
call
test
insl
cmp
rolb
vpaddb
pop
push
icebp
call
sar
lds
mov
insb
push
inc
inc
stos
cmc
cld
sub
push
notl
cmpsl
outsb
ret
popa
stc
jge
int
aas
push
nop
ror
push
push
lahf
xor
add
imul
outsb
mov
push
xchg
jmp
nop
daa
popf
pop
imul
mov
mov
adc
cltd
jns
ja
mov
frstor
lods
sub
push
ficomps
xchg
pop
lret
fadds
ljmp
xor
jge
push
dec
aas
lahf
addb
mov
loop
cli
out
test
jmp
sbb
jmp
xchg
cmp
negl
sbb
xor
xchg
jle
test
mov
enter
repz
sbb
lret
ret
adc
sub
call
repz
push
cmp
pushf
mov
gs
pop
push
cmp
pop
imul
or
test
jns
bound
sti
adc
adcl
cmp
pop
push
and
into
or
mov
lods
sub
out
add
repz
pop
xor
mov
mov
mov
mov
lret
pop
or
xchg
push
mov
pop
adc
push
loopne
mov
stos
xor
and
cmpsl
out
cli
mov
push
or
sar
lret
cmp
xor
cltd
cmp
cmc
jge
not
jecxz
mov
fdiv
push
pop
mov
lods
hlt
mov
test
sub
ljmp
mov
aas
and
int
xchg
or
sub
stos
scas
js
es
pop
mov
mov
adc
pop
js
mov
cmp
nop
jb
insb
jne
out
outsl
in
out
repz
xor
push
xchg
push
lods
into
lds
daa
inc
push
xchg
dec
sub
stc
and
fimuls
inc
sub
fcomps
push
sti
iret
and
xchg
aaa
xor
pop
repnz
xor
insb
xor
fwait
mov
cmc
flds
pop
pop
cmp
pushf
push
leave
jmp
fdivrl
test
shrl
loop
lods
or
push
jecxz
push
loopne
jl
push
les
iret
daa
pop
lods
sbb
add
mov
cli
outsb
ret
rorb
and
mov
std
inc
imul
lcall
inc
mov
movsb
xlat
jmp
movsb
data16
fsub
xor
in
fstps
xchg
xorb
shll
push
mov
shrl
jge
cmp
sub
xor
pop
sbb
mov
xor
bound
out
repz
push
pop
call
and
push
adc
loop
mov
push
xchg
mov
mov
xor
nop
cmc
jmp
ret
mov
jb
stc
pop
test
movsb
out
test
rcl
pushf
movsl
dec
pop
xchg
or
mov
je
push
pop
mov
das
xchg
ret
inc
jl
and
scas
pop
add
mov
xlat
inc
jb
sbb
data16
push
pop
inc
mov
gs
inc
and
out
cmc
pop
int
jae
mov
and
jmp
push
pop
lret
jl
push
mov
pop
loope
pop
add
fwait
imul
minps
stc
test
mov
repz
xor
lds
sub
mov
ret
jb
hlt
das
lret
sub
dec
jns
and
call
pop
int3
mov
inc
cmp
ficoml
popf
stos
mov
xchg
sub
pop
xor
add
push
dec
push
mov
jle
out
push
stos
shl
ret
cmp
xor
push
cmp
mov
xorb
aad
scas
sbb
push
cli
pop
clc
fsubrs
imul
push
lret
xchg
das
ret
out
aas
inc
cmc
add
int3
mov
inc
mov
cmpsb
add
aam
ja
outsl
orb
std
sbb
cmp
in
xchg
clc
in
jecxz
popf
dec
cmp
repnz
and
lds
cmc
or
xor
inc
enter
movsb
std
lret
cmp
and
es
sbb
scas
mov
roll
xor
aam
push
pop
cld
jo
insl
fs
sub
push
or
cmp
or
cmpsl
or
sub
shlb
inc
je
inc
push
xor
inc
or
ds
adc
xor
pop
cwtl
ret
fisubl
or
inc
xchg
in
stc
pop
shlb
jmp
and
adc
xlat
sub
lahf
shrl
sbb
adc
inc
cmp
jle
push
xor
xlat
and
mov
dec
dec
mov
and
addr16
fidivrs
lret
mov
and
mov
icebp
push
stos
dec
out
xchg
aas
in
adc
sar
jbe
cwtl
stos
ja
mov
fsubr
fbstp
jge
outsw
rorb
mov
sub
add
mov
out
or
test
push
sti
pop
pop
fisttpl
pushf
cmp
xor
mov
int
add
jo
sar
mov
cmp
icebp
subb
adc
call
xlat
adc
push
outsb
fidivrs
push
ret
addr16
out
sbb
insb
xchg
mov
shlb
js
fstl
dec
xchg
or
mov
add
pushl
jae
xchg
mov
dec
push
aam
push
pop
loopne
jbe
arpl
jle
cltd
stos
jae
cmp
or
cmp
sbb
cmp
ljmp
sub
pop
pop
test
test
shr
ret
add
pop
jg
jmp
ret
and
xchg
pop
pop
fidivrl
jg
in
push
stc
inc
pop
jmp
jge
sbb
fs
xchg
sbb
bound
push
out
cwtl
xchg
ficoms
sub
insl
or
pop
and
jnp
pop
cli
ror
adc
shrb
fldcw
fsubl
jl
adc
inc
cwtl
test
adcb
bound
out
push
mov
leave
ror
lret
dec
outsb
mov
sub
xor
add
lret
aaa
jl
pop
sbb
repz
or
les
fistps
sub
pop
jle
add
test
in
nop
aam
and
jle
lahf
pop
adc
sbb
fldl
push
pop
cmp
hlt
mov
mov
das
test
aad
fxtract
fcmovne
cmc
inc
repz
push
sub
ror
fldenv
clc
xchg
cmp
stos
sbb
adc
cltd
lahf
push
sbb
xchg
mov
mov
aad
sbb
xchg
dec
repnz
aam
xchg
mov
lods
xchg
popf
dec
push
test
scas
or
test
and
hlt
lahf
movsl
mov
push
jbe
inc
cmp
arpl
sbb
jns
jmp
in
mov
cmp
jecxz
rol
ret
cmc
dec
addr16
pusha
subl
repnz
pop
xchg
jmp
jnp
sbb
inc
and
test
mov
scas
inc
add
insl
out
addl
ds
mov
decb
movsb
and
mov
dec
jecxz
outsb
xchg
sbb
les
push
mov
je
mov
and
and
in
insl
push
jl
pop
mov
ljmp
shlb
cmp
dec
cmpsb
cmp
imulb
cwtl
push
adc
push
pop
arpl
add
mov
scas
stos
jl
jns
aaa
in
mov
push
enter
jg
and
xchg
push
push
or
rorb
push
lock
lds
imull
mov
shll
lods
push
jno
cld
js
js
mov
mov
outsb
pop
outsb
and
push
sbb
xchg
xchg
ret
mov
cmp
push
vhaddpd
ret
dec
das
shrl
insl
jg
adc
mov
enter
in
movsl
outsb
mov
mov
lock
mov
arpl
jo
fidivrl
out
stc
mov
lcall
mov
aas
lahf
shl
or
sub
xlat
jge
rcll
push
outsb
int3
std
and
pop
push
sub
dec
cli
fidivrs
loopne
popf
jae
sbb
pop
inc
sub
cwtl
je
xchg
xor
sbb
xor
xchg
sub
mov
pop
sbb
mov
ret
pop
inc
movsl
pusha
xor
stc
inc
rcrb
bound
dec
mov
jo
and
cmp
and
adc
insl
xchg
dec
xchg
outsl
jecxz
mov
aad
cmpsl
inc
shll
mov
add
add
mov
nop
rorb
negl
scas
adc
lock
out
push
inc
xor
mov
mov
sahf
lods
dec
and
push
out
sbb
aad
cmp
fwait
inc
rcr
jp
mov
xchg
jne
dec
inc
push
inc
xor
push
fwait
idiv
divps
pop
mov
mov
pop
sub
repnz
xchg
mov
dec
notl
dec
mov
sbb
inc
mov
scas
adc
jne
mov
rcrb
clc
ds
lret
sahf
outsl
fistl
out
xchg
ds
xor
cli
or
mov
pusha
adc
xor
xor
test
or
add
inc
repnz
aam
dec
dec
lods
mov
pop
dec
cmp
daa
push
jg
mov
fst
jo
cmp
xchg
aas
lret
inc
and
mov
outsl
clc
lds
pusha
xchg
mov
jp
bound
ljmp
fisubl
cmp
dec
or
sarl
dec
negb
dec
cmp
call
out
pushf
pop
aas
jne
mov
mov
insl
aas
pop
mov
les
xor
or
xor
lock
mov
xor
pop
pushf
jno
andl
mov
pusha
divb
or
mov
addr16
mov
rorl
mov
pop
jmp
loop
push
mov
mov
mov
or
jo
fs
data16
shrd
mov
call
scas
cmpsb
fs
mov
pop
mov
pop
mov
pop
enter
in
push
sub
lods
add
fnstenv
shl
sbb
push
lcall
rcrb
add
loope
and
xor
pop
les
xchg
add
or
xor
cmpsl
mov
mov
fistpll
mov
lret
pop
sub
sub
mov
out
push
ret
scas
mov
add
lcall
ljmp
xor
mov
dec
cmc
sahf
inc
std
jp
xchg
jb
mov
repnz
sub
imul
subb
xor
adc
in
rorl
icebp
sub
ss
sar
leave
and
mov
push
adc
add
sti
mov
xor
cs
inc
jecxz
add
int3
out
into
aas
mov
push
inc
xor
sbb
inc
fmull
jns
test
pop
aam
cmp
dec
fnstcw
adc
mov
inc
repz
pop
xlat
sahf
adc
loop
ret
out
sub
pop
hlt
pop
add
jb
sbb
or
or
test
out
addr16
and
sbb
mov
jge
lahf
sbb
ljmp
leave
fdiv
mov
pop
jl
add
jmp
lods
dec
sub
jmp
adc
xchg
popa
aaa
mov
inc
mov
xor
or
test
add
in
pop
mov
fidivrs
xor
sub
sub
sub
add
daa
mov
xchg
cmp
push
rolb
cwtl
lock
mov
push
clc
stc
shrb
test
xchg
test
adc
icebp
add
fists
lea
jmp
sbb
mov
xchg
roll
inc
fldl
xchg
aam
adc
je
push
xchg
ror
sbb
mov
xchg
or
sbb
out
stos
aam
push
and
adc
sbb
mov
mov
popf
cmpsl
sbb
int
xchg
pop
aas
outsl
insl
or
lahf
pop
stc
inc
push
dec
dec
adc
clc
mov
hlt
negw
mov
pop
stos
push
pop
push
or
test
addb
dec
jnp
dec
shlb
push
fsubrl
adc
or
fcompl
imul
mov
xchg
ret
nop
out
or
pop
inc
loopne
call
sti
jle
jmp
imul
sub
sub
pushf
ret
sbb
xor
dec
jmp
lods
sbb
jmp
dec
aad
sti
pop
jae
pop
pop
ds
pushl
adc
mov
and
test
mov
xor
mov
movb
jae
loopne
push
adc
in
mov
mov
adc
or
outsl
dec
or
add
stos
cmpsl
mov
test
cltd
pop
xor
call
sbb
adc
xchg
jo
sub
aam
push
add
test
push
sub
inc
cmp
fs
mov
stos
lahf
mov
or
stos
daa
lock
or
mov
and
mov
pop
stc
add
loope
push
mov
test
jo
adc
js
cwtl
call
cmp
fs
sbb
bound
test
cmpsl
sub
mov
mov
insl
leave
dec
sbb
sub
cmp
mov
adc
jp
xor
aad
push
ja
gs
xchg
pop
dec
test
enter
or
jmp
push
xorb
ficoml
sub
dec
in
mov
cli
in
cmp
add
sarl
test
and
mov
adc
xchg
or
lahf
adc
cld
rcr
shlb
cld
popf
testb
dec
xlat
in
popa
fldl
ret
stos
inc
adc
mov
mov
bound
data16
icebp
daa
xchg
jbe
shr
stc
add
mov
mov
mov
ljmp
icebp
stos
cld
mov
push
xchg
jne
scas
inc
xchg
movb
mov
fists
cmpsb
mov
ret
add
adc
cmp
sbb
maxps
xchg
push
sub
xchg
push
pop
test
test
test
aad
movsb
loopne
adc
in
inc
mov
inc
mov
cmpsl
out
cmpsb
sbb
fisttps
inc
push
and
and
push
mov
dec
push
pop
pushf
fidivrl
scas
cmp
ss
testb
fdivrs
pop
mov
das
cmp
pop
cmpsb
test
fstpt
sub
add
cmp
pop
push
or
jbe
xor
cmpsb
push
cmpsl
push
push
jnp
mull
pop
subl
hlt
xor
das
std
sub
outsb
add
push
xchg
cmp
dec
notb
sbb
loope
jnp
pop
inc
adc
xlat
rclb
ror
enter
insl
cli
test
mov
pop
mov
test
dec
mulb
mov
mov
ret
add
push
dec
ja
pusha
push
hlt
inc
cmpb
out
mov
or
ss
push
pop
cltd
imul
xor
jns
add
xchg
scas
mov
push
stos
cmpsl
xor
pop
cmc
shrl
outsl
cmp
xor
decb
xchg
dec
lods
aad
cmpsl
outsb
loop
sub
mov
or
mov
fisubrl
pop
cmpsl
and
rolb
push
fwait
add
mov
xlat
adc
add
iret
dec
imul
xor
orb
mov
je
mov
lods
fs
adc
adc
xor
sub
lea
lret
outsl
mov
jmp
xor
call
leave
pop
push
push
mov
dec
shl
adc
cmp
cmpsl
out
daa
scas
or
loopne
pop
mov
pop
mov
in
xchg
stos
mov
sub
lahf
cmp
fidivrl
mov
cmpsl
lcall
iret
mov
mov
gs
lea
enter
sarl
mov
fisubl
lea
arpl
jp
les
stos
arpl
sub
mov
jg
in
cli
inc
loope
je
mov
dec
xchg
or
adc
or
and
sbb
out
pop
inc
jb
push
adc
stos
cmp
bound
lods
pop
jnp
cmpsb
icebp
mov
jne
andl
xchg
xchg
loope
mov
dec
bound
shrb
push
mov
fistpl
outsb
xchg
test
fistpll
jmp
inc
ret
xor
jg
aam
fistps
xor
lahf
lods
lcall
sti
xor
pop
mov
dec
and
movsl
and
int
mov
aad
outsl
rolb
in
pminsw
orl
aam
stos
mov
cmp
stc
or
add
clc
stos
cmp
into
mov
xor
enter
cmpsl
fstpt
or
jmp
sub
mov
repz
fstl
bswap
add
dec
sub
mov
out
sub
mov
into
mov
repnz
and
sub
test
inc
frstor
je
jo
xor
sub
push
imul
jle
and
loope
jne
push
mov
aad
push
inc
adc
mov
cmc
repnz
negb
mov
adc
scas
lahf
scas
sbb
rorb
dec
xchg
xchg
into
add
xchg
xor
fisubl
outsb
jb
jge
jbe
and
jbe
mov
cmp
jg
mov
roll
lods
mov
dec
xchg
mov
add
xchg
push
scas
add
fwait
push
shll
or
push
jecxz
xor
and
mov
pop
scas
sbb
lret
jp
mull
jge
mov
in
fiaddl
lds
adc
push
fwait
loopne
add
es
mov
mov
push
js
enter
test
lods
push
aas
xchg
daa
jmp
xchg
data16
or
jns
aam
push
and
iret
add
addr16
sub
test
cmp
and
in
in
imul
scas
xor
add
call
aas
cmp
adc
aad
mov
inc
mov
out
stc
movsl
lods
nop
dec
bt
out
rcrl
push
sahf
mov
dec
mov
loopne
inc
es
jl
fistps
sbb
adc
dec
out
dec
mov
cmc
and
pop
push
inc
adc
push
xor
push
lods
dec
dec
lahf
pop
and
push
cmpsl
cmp
dec
or
ret
cmc
outsb
mov
aam
movsl
pop
shlb
jo
movsl
push
mov
jl
mov
out
pusha
push
int3
aad
sbb
or
and
pop
push
lds
mov
sbb
js
cmp
push
adc
cmp
inc
clc
je
cmp
or
sub
or
pop
arpl
cmp
ja
or
lahf
ljmp
pop
pushf
pop
dec
popf
fs
mov
or
jno
sahf
bound
in
cmp
pop
das
xchg
test
pop
cmp
faddl
or
push
and
mov
mov
fwait
dec
je
rcrb
fwait
pop
je
jecxz
sbb
pop
aas
nop
push
adc
push
cwtl
xor
lods
xor
call
or
outsl
mov
push
aas
push
push
xor
stc
ss
cmp
adcl
xor
cld
cmp
divb
lcall
sahf
inc
add
inc
cmpsl
xchg
pop
fmul
jo
test
idivb
and
mov
or
cld
or
pop
loopne
lret
test
pop
std
cmp
nop
push
jmp
xchg
test
lret
sbb
lods
lods
sbb
xchg
lcall
push
mov
dec
negl
push
ret
pop
out
insb
lock
loopne
cmpsl
inc
inc
enter
aam
stc
out
and
xor
xor
stc
cmp
push
ss
adc
pop
mov
sti
popa
loope
xchg
pushf
push
inc
imul
outsl
jle
decl
aas
out
add
xor
jmp
int3
jg
jle
pusha
cmp
repnz
xor
pop
inc
push
test
mov
std
add
jns
in
popf
ficomps
repz
push
sti
scas
filds
data16
mov
jo
xor
lods
in
push
out
int
fisubl
mov
rol
adcl
rorl
inc
sbb
sub
pusha
mov
mov
aaa
jns
sub
push
sub
test
jge
jmp
jmp
shl
cwtl
dec
ficoml
and
pop
and
sub
cwtl
iret
and
inc
js
cmpsb
push
lret
std
fbld
test
test
mov
mov
inc
rcll
and
out
sbb
addr16
xchg
sub
cmp
stos
movsl
pop
rolb
pop
lods
sub
dec
gs
mov
mov
sbb
cwtl
fs
sti
lds
call
aas
pop
dec
rcrb
sub
outsb
add
pop
rcll
cmp
pop
push
adc
sbb
mov
jle
mov
xor
dec
out
repz
jl
push
fimuls
lcall
inc
cs
sub
dec
stos
mov
sub
cmp
lcall
shr
cmp
inc
ret
scas
jle
push
jbe
or
or
insl
and
movsl
jp
outsb
mov
sti
cmpsl
push
movb
sub
xchg
scas
sbb
pushf
lods
sbb
leave
mov
push
lret
push
stc
inc
jl
outsl
outsl
mov
cli
inc
bound
loopne
jbe
mov
mov
and
mov
nop
add
pop
jp
andb
dec
mov
add
dec
ret
mov
outsl
xchg
mov
xchg
dec
mov
or
jne
inc
ret
and
incl
sbb
add
repnz
repz
jmp
jmp
and
in
cld
ret
xor
jp
jo,pt
cmp
arpl
dec
outsb
repz
jl
xchg
mov
sbb
lahf
daa
adc
ds
sarb
das
cld
sub
popa
sbb
mov
lea
xor
pop
ds
mov
dec
faddp
xor
fiadds
pop
fwait
scas
adc
fiadds
jne
inc
ret
mov
pusha
jge
loop
pop
sarl
jnp
out
popa
jmp
cmp
test
mov
jecxz
cmp
out
jns
popa
sbb
mov
into
mov
cld
cmp
and
inc
shr
sub
mov
jae
xchg
pop
pusha
fimull
add
dec
loope
cvtdq2ps
mov
sti
push
loop
jne
or
movsl
pop
xchg
leave
or
sbb
dec
addb
movsb
dec
jg
dec
leave
enter
add
fiaddl
mov
int
popa
pop
enter
and
outsb
dec
add
popf
lahf
movl
xchg
in
shr
sub
xor
sbb
scas
inc
fs
jp
adc
cmpsl
jae
or
leavew
into
jmp
ret
xor
or
orb
mov
inc
xor
xor
icebp
mov
cmp
push
in
cmpsl
mov
jl
mov
ja
pop
mov
dec
fdivr
jmp
sbb
fcomps
popl
fwait
dec
fimull
xor
sbb
dec
enter
mov
jne
xor
pop
outsl
pusha
rcrb
in
xor
rol
notb
push
notb
mov
pop
mov
ret
call
adcb
das
mov
push
imul
lret
lods
mov
bound
xlat
add
xchg
fsts
xchg
jae
in
xorb
fldl
fmuls
inc
das
add
jmp
pop
jo
fistpll
mov
gs
pop
xlat
pop
sti
mov
dec
fldt
test
cltd
xchg
pop
and
shlb
call
or
pop
pop
xlat
push
xchg
add
iret
inc
ret
mov
adc
sbb
popa
repnz
pop
sub
sahf
adc
dec
sbb
mov
adc
jno
pop
push
adc
das
push
jl
sahf
call
and
fimull
add
jbe
jecxz
mov
xor
in
dec
sub
adc
push
cs
mov
pop
xchg
mov
cmpsl
push
mov
hlt
inc
out
mov
adc
mov
jns
push
pop
aad
je
subb
and
nop
cmp
inc
xorl
in
jle
lret
cwtl
daa
loop
movsl
pop
cmc
add
sub
and
stc
aas
call
iret
sahf
mov
jne
fistl
imul
out
loope
add
out
call
movsl
xor
test
xor
xor
mov
mov
insb
into
jbe
rorb
repnz
or
push
sbb
rorl
fdiv
leave
addr16
mov
cmp
mov
insl
or
lods
lcall
in
jns
jne
jl
jmp
sub
incb
les
mov
push
jo
and
mov
popa
mov
int3
mov
adc
roll
pop
cmp
enter
xor
pusha
out
jns
mov
test
pop
sub
jge
lret
mov
hlt
rorb
fwait
adc
pop
add
mov
mov
push
mov
pop
int3
aad
push
bound
insb
and
sbb
push
lds
add
imul
jnp
scas
push
adc
in
std
jbe
adc
cltd
ret
jmp
mov
leave
pop
outsb
aaa
add
sub
jne
popa
stc
insb
hlt
xchg
imul
pop
sub
add
std
mov
pop
jbe
jmp
fdivl
jo
xchg
cld
pop
inc
adc
pop
or
sahf
lcall
fistpl
gs
and
mov
mov
lods
xchg
or
cld
test
mov
pop
mov
xor
lods
push
jae
cld
mov
test
and
jmp
pusha
jbe
lret
mov
fwait
mov
xor
push
sub
push
addr16
stos
inc
movsl
jle
cmp
leave
mov
out
pushf
in
or
enter
testb
xchg
loopne
push
je
sbb
testb
cmc
lcall
inc
mov
popf
test
jbe
aaa
lods
pop
outsb
cmp
fdivs
mov
cltd
mov
es
adc
aam
imul
adc
jl
sub
ret
andl
jo
xchg
mov
mov
xor
outsb
pop
aas
sub
xor
mov
sarl
mov
je
jae
cmp
cmp
je
into
inc
sub
adc
inc
xor
xchg
dec
in
out
mov
mov
jge
mov
sarb
sub
mov
iret
clc
icebp
cwtl
jp
incl
xor
inc
insl
icebp
cmc
and
and
pop
xchg
pushf
repnz
pushf
inc
gs
sub
test
out
pop
dec
flds
test
ret
and
sbb
xlat
sbb
and
inc
and
iret
or
adc
pop
loopne
pushf
xor
xchg
sub
sub
jp
imul
adc
into
adcb
inc
cmp
inc
jae
or
mov
cmpb
cmpsb
or
xor
aaa
mov
add
jo
push
mov
popa
dec
loop
shrb
lcall
jnp
daa
andl
push
or
je
dec
decb
fldcw
fistpl
lods
sahf
pop
push
fs
xchg
js
pop
pop
sbb
lea
xchg
enter
inc
cld
inc
xchg
mov
cld
xchg
dec
mov
add
test
xchg
movsb
es
mov
gs
xor
or
sub
inc
loopne
mov
cmpsb
xchg
out
fdivrs
or
dec
imul
frstor
scas
push
pop
add
pop
cmpsb
xor
xchg
jmp
into
ret
pop
cmpsb
mov
jl
mov
add
xor
mov
clc
les
push
mov
cld
add
lods
xchg
mov
dec
adc
dec
push
fcoms
adc
xchg
stos
call
cld
pop
movsb
pop
ret
cmp
iret
xchg
adc
addr16
pop
jge
and
in
fcmovbe
cli
mov
jnp
mov
mov
mov
sysexit
mov
push
sahf
shrl
sarb
mov
test
aad
mov
sbb
les
jbe
dec
mov
cwtl
in
inc
push
sub
loopne
aaa
fistpl
movsl
jae
cmp
jg
xchg
push
out
ret
pop
sarl
aam
mov
arpl
inc
mov
sbb
mov
and
pop
fsubs
scas
stc
sub
fimuls
push
popa
jae
fisubl
sar
lret
rol
sub
mov
jl
pop
mov
add
in
jle
test
jp
repnz
cmc
add
cmpsl
dec
adc
lods
fldt
fwait
sbb
insl
mov
mov
ret
out
dec
in
xchg
fwait
loopne
cmp
imul
dec
pop
push
sbb
mov
cmp
loopne
movsb
mov
cmp
sub
in
pop
adc
std
fildll
sbb
and
lahf
fst
cmc
pop
in
or
shlb
cs
or
sub
sbb
outsb
pusha
xor
cmp
adc
loope
je
repnz
fisttps
lahf
lret
lcall
sbb
out
mov
mov
or
mov
mov
xchg
out
ds
shr
insb
das
add
push
fisttpll
mov
cmp
inc
pop
dec
in
loop
mov
lret
push
in
pop
add
jle
neg
pushf
mov
pop
dec
std
int3
mov
cs
jg
ss
xchg
js
or
lret
inc
xor
push
add
aam
cs
loope
mov
push
xor
cmp
fdiv
dec
imull
pop
mov
enter
inc
les
dec
or
xchg
pop
outsb
or
push
mov
add
lock
imul
pop
mov
mov
mov
mov
jle
ss
or
fldcw
push
cld
adc
push
mov
les
mov
jmp
in
and
sbb
jmp
outsl
xor
adc
lcall
jo
inc
out
adcl
sub
add
push
shlb
cmp
xlat
aam
adc
movsl
jae
pop
mov
dec
jge
mov
cmp
sbb
inc
cltd
xchg
pop
and
and
mov
pop
adc
or
repz
int
add
in
inc
xchg
imul
cmpsb
push
cwtl
add
jl
lahf
or
mov
push
sub
xchg
mov
dec
jge
add
movsb
xrelease
in
sub
and
rorb
sbb
cmp
jns
out
mov
and
push
push
movsb
add
jg
jg
out
enter
or
test
enter
cltd
and
and
inc
scas
pop
int
sub
inc
sbb
aas
cmp
repnz
lods
nop
fadds
mov
mov
ret
mov
lea
add
rcr
mov
sub
adc
sub
push
js
xor
sti
sub
lcall
xor
out
add
mov
loop
add
movsl
fisttpll
arpl
in
cli
into
repz
nop
mov
rorl
mov
scas
pop
xor
or
repz
shl
inc
data16
ljmp
jg
mov
test
fs
out
icebp
xor
jbe
pop
outsl
and
mov
add
jo
mov
into
roll
sarl
push
xchg
push
xchg
xor
flds
scas
cli
fdivs
scas
dec
mov
mov
adc
fdivr
sbb
mov
pop
cmpl
inc
insb
mov
cld
jg
pop
pop
lock
mov
fwait
jmp
stos
sbb
mov
push
jl
cmc
xchg
sub
or
xor
mov
or
sti
out
jmp
psubq
jp
jge
jge
out
shlb
mov
mov
stos
push
mov
or
addr16
push
adc
dec
lret
jnp
or
mov
insb
int3
jb
pop
cmp
pop
xchg
push
fdivr
mov
imul
test
outsb
out
je
and
sbb
mov
loop
jmp
jo
inc
mov
xor
arpl
mov
or
inc
daa
ret
fmuls
je
lret
bound
leave
iret
repz
notb
lahf
and
fidivl
or
jne
rolb
and
lods
outsl
adcl
js
inc
fwait
rcll
ret
dec
mov
in
cmp
adc
in
cltd
rcl
mov
jl
stos
in
cmpsb
call
out
dec
shr
adc
pop
push
cld
push
lods
popa
into
ja
jle
mov
imul
hlt
lahf
bound
ret
jae
fs
stos
fisttpll
movsl
pop
inc
js
mov
ret
xchg
out
cli
dec
daa
leave
sbb
stos
mov
xchg
jo
mov
clc
roll
jle
push
xor
insb
outsl
push
fidivrs
xchg
inc
xchg
cmp
scas
push
sbb
and
add
jae
cld
mov
xor
xlat
repz
pop
adc
data16
pop
push
mov
adc
mov
jae
mov
lcall
and
xor
inc
ret
inc
arpl
mov
and
adc
aad
dec
int3
sahf
add
dec
jp
xlat
push
idivl
dec
dec
adc
cmp
inc
adc
lret
insb
jnp
sbb
in
jo
outsl
xchg
and
and
push
or
out
jge
shlb
jecxz
fdivrl
push
popa
push
sbbl
ss
push
pop
or
xor
mov
test
int3
outsl
or
nop
mov
push
and
mov
movsl
mov
testl
pop
pop
cmp
lret
cmp
pop
gs
xchg
ret
add
sbb
movsb
mov
lds
scas
js
addr16
pop
mov
sub
jno
outsb
xchg
dec
rorl
cs
pop
in
or
jg
mov
dec
jmp
cwtl
jl
test
xchg
push
pop
lcall
mov
add
cmpsb
mov
jns
mov
imul
leave
cs
fucomip
and
xchg
sub
dec
fsubrl
repz
sub
lahf
pusha
lock
cmp
inc
sub
add
fwait
insb
push
jmp
rol
add
cld
in
cmpl
jno
jp
fs
movb
leave
add
push
jle
push
dec
mov
dec
mov
pushf
repnz
insl
shlb
fists
mov
pop
ljmp
add
call
dec
ror
scas
and
add
rdtsc
sarl
mov
jne
fildll
mov
inc
ja
xchg
mov
sub
push
push
inc
ja
fstpl
fldt
rcrb
adc
jb
pushf
sbb
icebp
pusha
aad
jno
inc
push
pop
repz
pop
fcmovu
scas
mov
stc
xchg
xchg
insb
mov
and
popa
js
add
lret
mov
movsb
mov
ja
dec
jb
nop
jnp
mov
sub
jnp
mov
cld
mov
leave
pop
push
incl
jns
cmp
es
rcrb
jnp
adc
jb
std
sahf
mov
stc
push
mov
and
mov
je
int
sub
mov
and
cmp
inc
popf
call
aas
fwait
cwtl
push
push
testl
dec
movsb
loop
sub
dec
xor
push
push
enter
test
and
ja
dec
xchg
cmc
lock
cmc
or
cmp
jge
mov
in
push
push
and
jno
fldenv
ficoms
insb
dec
divb
stos
mov
test
inc
lock
xchg
push
lock
dec
shl
jae
mov
xchg
xor
cmp
jl
imul
sub
hlt
hlt
sub
pop
jle
mov
cwtl
out
pop
inc
sahf
mov
mov
dec
add
sbb
push
push
out
adc
movsl
fs
cwtl
in
je
and
mov
pop
leave
jmp
jg
mov
inc
mov
test
mov
jmp
xchg
push
les
push
mov
pop
test
push
ja
sahf
pop
es
imul
das
xchg
mov
jmp
sarb
imul
scas
adc
adc
xlat
lods
test
shr
push
test
jb
in
push
aaa
cltd
dec
insl
pop
mov
mov
and
stos
aam
fisubrl
push
pop
dec
xchg
pop
mov
pop
inc
push
add
push
imul
sub
xchg
lahf
sub
sahf
cltd
push
xchg
mov
jge
mov
xchg
pop
inc
testl
sbb
out
sbb
sub
ss
push
popf
lock
std
lahf
test
mov
fisubs
in
or
aaa
stos
cltd
jg
xor
xchg
lods
gs
dec
sbb
or
sub
imul
adc
pushf
or
sbb
mov
push
popa
sti
dec
dec
dec
pusha
lea
aam
mov
clc
mov
pop
jmp
fs
xchg
pusha
add
sub
lds
xchg
mov
or
push
outsb
iret
ds
ret
lcall
mov
inc
add
fwait
insb
gs
push
dec
or
adc
pop
inc
test
sbb
lcall
push
fwait
push
int
adc
arpl
in
iret
mov
add
inc
add
fs
leave
leave
xorb
test
loop
dec
scas
push
fwait
lods
jae
clc
js
shl
daa
repz
sarl
xchg
inc
mov
stos
cmpsl
cmp
ret
cmp
jecxz
das
std
iret
pop
imul
ss
jo
jbe
lods
sbb
or
lods
inc
xor
jge
xchg
notrack
adc
mov
cmp
dec
push
push
negb
xchg
pop
jge
push
jbe
fsqrt
pusha
shl
stos
loope
cmpb
iret
loopne
push
mov
pop
out
or
mov
cmpb
push
cmc
outsb
in
lds
lds
inc
outsl
pop
imul
repnz
in
rcrb
cmp
push
xor
xchg
int3
add
xor
sub
adc
scas
jmp
loope
shrb
sub
push
jbe
cmpsb
and
mov
data16
shr
fdivl
icebp
jns
stos
adc
mov
ljmp
sbb
sub
push
push
xchg
jl
ror
cmp
mov
adc
ljmp
popf
std
xlat
pushf
pop
pop
fcmovnbe
and
sub
sbb
pushf
cmpb
mov
mov
sbb
dec
sbb
mov
cmp
sbbl
dec
mov
mov
cs
xor
push
bound
out
stos
insb
pop
movsb
ret
jne
sbb
loope
add
mov
enter
lret
mov
jecxz
pusha
sub
std
stos
lock
loope
repz
inc
push
pcmpgtb
incl
mov
cli
push
lcall
aas
lds
in
xchg
push
cmp
sub
jmp
scas
mov
test
mov
and
mov
jno
cwtl
mov
push
dec
mov
and
into
xlat
and
xor
xor
and
xchg
call
stos
inc
cmp
pop
or
mov
sarb
mov
lcall
mov
push
dec
jp
shlb
mov
jmp
nop
ljmp
out
mov
pop
lahf
je
sub
dec
sub
add
lds
push
cmp
int
test
push
mov
mov
loopne
aaa
pop
or
test
mov
mov
add
push
mov
jne
pop
sbb
and
xlat
add
test
mov
cld
stos
dec
add
imul
jmp
add
pop
jae
mov
inc
jns
dec
cmp
xor
hlt
adc
cli
dec
lock
cmp
adc
mov
dec
outsb
stos
sti
mov
xor
scas
movsl
cwtl
imul
adc
adcb
mov
add
push
mov
jg
daa
imul
out
cmp
movsl
fists
ret
test
subl
or
pop
mov
fidivrl
out
pop
scas
or
xorl
hlt
aaa
js
cltd
mov
add
sarb
cmpsl
jg
loopne
sbb
fildl
xor
test
lods
or
iret
aas
mov
iret
das
clc
dec
out
mov
or
sub
arpl
inc
xchg
ljmp
jl
addb
xchg
scas
in
pop
mov
loope
inc
add
daa
sbb
shll
add
xchg
mov
push
notl
adc
int3
movsl
xchg
invlpg
inc
rolb
mov
mov
xor
lret
nop
mov
add
cmp
xor
xor
add
jle
or
jb
push
adc
loop
lock
xchg
pop
and
popa
ja
mov
xor
push
pusha
dec
out
and
xor
fwait
adc
pop
adc
rorl
push
pop
cmp
loop
sub
jo
jno
jge
mov
dec
cmp
outsl
mov
js
jno
out
fdivs
stos
pop
fistpll
mov
add
in
leave
inc
dec
lock
aad
clc
lock
pop
aad
inc
add
jne
rorb
in
call
add
rcl
sbb
sub
inc
sbb
in
inc
ljmp
ret
pushf
loope
sub
cwtl
dec
clc
pop
pop
pop
movsl
and
jno
push
adc
bound
out
sti
sarb
inc
xchg
dec
inc
enter
mov
inc
cmp
cs
pop
sbb
sub
fmul
scas
testl
test
clc
and
mov
js
ret
out
cmp
ret
dec
or
stos
pop
jle
cmp
pop
or
mov
clc
sub
xlat
popf
pushf
test
pop
gs
cmp
ret
push
nop
cwtl
dec
xlat
cmp
fisubs
ljmp
jmp
sbb
aaa
jns
jno
aas
sbb
cmc
xor
cli
cmpsb
push
int
frstor
scas
xor
pop
adc
mov
sti
xchg
imul
push
in
stos
jle
lea
scas
std
inc
loope
rcr
faddl
dec
dec
cmpsb
out
mov
and
or
outsl
sub
jecxz
xlat
sbb
jo
xchg
movsb
push
push
lea
pop
push
test
inc
xchg
mov
ret
xchg
out
out
sub
enter
add
ds
out
loop,pt
jmp
cmp
xchg
gs
jl
push
popa
shrl
out
push
fbstp
dec
push
fisttpll
xchg
mov
sub
mov
fldt
jmp
mov
push
xchg
mov
test
jae
sub
repnz
push
insb
adc
dec
jmp
hlt
repnz
cmc
mov
movsl
daa
pop
fadds
xchg
scas
dec
adc
mov
int
lods
adc
mov
fldenv
ljmp
push
nop
push
cmp
leave
push
push
andb
clc
cmp
scas
push
mov
cli
stos
jecxz
pusha
inc
xor
mov
rcrl
sub
lret
jnp
mov
dec
outsb
test
std
jecxz
xor
shll
mov
pusha
lods
jo
push
aaa
cmp
sub
call
aaa
adc
lahf
pop
aas
mov
leave
mov
in
lods
sub
fdiv
shlb
cmp
xchg
mov
and
aad
fcomip
movsb
xchg
hlt
insl
aas
push
push
push
in
xor
jmp
ds
cmp
push
imulb
push
xor
jne
ljmp
inc
out
arpl
push
push
and
xorb
fidivrl
xor
or
fcmovne
and
popa
add
fwait
pop
test
adc
js
dec
sbb
in
inc
cmpsl
inc
mov
mov
inc
or
insb
movsl
data16
or
inc
int
add
mov
cmpsl
xor
aaa
cs
mov
fs
testl
sbb
sarb
in
scas
xor
inc
mov
xchg
mov
icebp
addb
ljmp
je
and
pusha
mov
xchg
inc
cmp
sbbb
ret
aas
mov
pop
inc
scas
test
insb
les
xorb
mov
sub
int3
inc
out
sub
mov
add
xlat
inc
jmp
cmp
mov
sbb
mov
jl
ljmp
aas
insl
loop
and
cmp
xor
insb
jmp
mov
inc
fistl
sbb
sbbb
into
enter
shrb
lret
pop
xor
sbb
dec
and
int
lahf
mov
movsb
scas
dec
add
test
out
aam
fcmovne
cmpb
sti
clc
push
popa
fs
add
nop
arpl
icebp
cltd
dec
mov
pop
cmp
pop
dec
sub
icebp
xchg
aaa
popf
rcr
jg
add
jno
push
ljmp
add
out
inc
add
pop
push
cmp
and
add
or
cmp
adc
mov
stc
mov
pop
mov
mov
out
add
mov
enter
dec
xor
pop
jb
fistpll
sub
lods
mov
scas
popf
mov
lret
xchg
cltd
out
ss
jg
jle
mov
orb
mov
stos
pusha
orb
lods
add
push
dec
aaa
repz
lds
xorl
popa
test
xlat
jne
sbb
das
cmp
iret
push
jmp
jb
aaa
cmp
adc
fcoml
imul
jo
mov
and
inc
sahf
loop
xor
xchg
xchg
std
unpckhps
stos
xor
bound
sti
outsl
fs
inc
sub
mov
jbe
iret
fimuls
add
in
jnp
mov
jge
push
and
stos
jge
xchg
xchg
xchg
cwtl
shr
mov
addr16
xor
push
jecxz
xor
aad
add
iret
xchg
or
repz
pop
inc
sbb
fs
fstpl
sbb
jbe
in
je
subl
jbe
sbb
push
popf
dec
fwait
sbb
insl
cmp
lahf
or
lods
pushf
pusha
aam
jmp
mov
and
push
loopne
iret
jno
mov
cmpsb
fcoms
cmpsb
fildl
lods
or
das
xchg
std
in
aaa
push
shl
arpl
adc
lret
js
mov
lret
dec
sbb
and
lahf
mov
xor
push
inc
in
inc
rcrl
lret
push
outsl
popf
pusha
scas
dec
mov
inc
aaa
dec
pop
jl
inc
jae
movsl
in
imul
out
jo
xlat
call
and
jle
aam
nop
out
stos
scas
jge
jns
push
stc
mov
jmp
xchg
fcmovnbe
jnp
xchg
mov
mov
ds
rcrb
scas
cmpsl
mov
jbe
cs
cli
mov
daa
nop
test
sbbb
dec
xor
cmc
js
cmp
add
or
push
xorl
std
sub
lcall
jbe
cwtl
pop
loope
cmp
jl
aaa
pop
pop
xchg
mov
aad
push
subb
loop
test
stos
sbb
out
cmp
push
rcrl
adc
sbb
sub
mov
xor
dec
movl
jg
xor
loopne
bound
stos
mov
mov
xor
lret
cmp
xor
fiadds
dec
xorl
inc
repz
mov
out
sub
xchg
shlb
sbb
shrl
sbb
sbb
mov
jne
fcmovnb
push
dec
std
stos
cwtl
xchg
inc
lea
inc
fwait
push
pop
mov
cmp
movsb
add
xor
enter
ret
or
bnd
mov
mov
dec
ret
inc
sub
int3
gs
sti
fildll
and
or
mov
fwait
leave
fcoml
push
pop
or
fisttpl
jp
jge
mov
daa
jle
jno
xor
ljmp
sarb
or
jnp
push
jl
pop
cmc
xorb
jecxz
mov
mov
lret
shll
jp
inc
add
notb
xor
insl
adc
sbb
sbb
add
xchg
aaa
sbb
lock
shlb
fidivrs
xchg
sub
xlat
mov
out
and
lret
lahf
xor
xchg
lret
add
mov
adcb
testb
cli
inc
jmp
popf
mov
sbb
push
data16
ret
aas
push
notl
rorb
push
sub
pop
ret
jl
loopne
push
xchg
scas
mov
ret
xor
mov
stc
in
push
mov
enter
loope
int3
std
jmp
jnp
int3
arpl
adcb
mov
call
inc
push
fmul
ret
cmp
ss
push
or
xor
rorl
cs
pop
xor
xor
push
xchg
jne
dec
adc
gs
loop
arpl
out
ret
ficoms
in
jne
lock
mov
jne
or
ja
inc
sbb
loopne
das
jmp
cltd
mov
mov
lahf
mov
and
outsb
inc
inc
push
sbb
adc
out
outsl
sbb
xor
pushf
pop
xor
xor
cli
mov
fidivs
or
enter
test
jge
div
jne
jbe
mov
loopne
pop
inc
and
push
sub
jns
and
fistl
popf
mov
xchg
je
dec
mov
mov
hlt
mov
idivl
or
out
jg
ret
xchg
sahf
andl
sub
rcrl
ja
cmp
mov
cmp
call
or
ds
jno
mov
popl
mov
inc
xlat
cmp
aam
arpl
je
xorb
sub
pop
test
test
mov
cmp
imul
test
dec
dec
aad
pop
pop
js
std
xchg
sarb
jmp
inc
lret
mov
jae
retw
aaa
dec
cld
mov
pop
loopne
adc
adc
stos
push
inc
pop
inc
mov
loopne
inc
and
xchg
dec
in
sub
mov
hlt
lods
mov
push
dec
into
push
dec
pushf
push
aaa
je
ret
loop
mov
pusha
call
mov
push
mov
jecxz
sub
cli
push
mov
in
and
mov
mov
xchg
hlt
iret
shll
adc
lods
idivb
cmpsb
int
gs
push
lods
xor
shrb
subl
jns
inc
je
sbb
dec
push
dec
test
jne
test
dec
int3
in
clc
inc
inc
sbb
lcall
xchg
mov
hlt
push
leave
sbb
outsb
repnz
aas
mov
push
les
shll
mov
sub
xor
or
iret
and
mov
xchg
lahf
pop
aaa
fisubrs
cmp
rorl
push
pusha
adc
mov
dec
cld
lods
lcall
cmp
xchg
push
insb
jb
xchg
or
popf
xor
imul
gs
pop
loop
testb
push
jg
pop
mov
test
jae
lock
cmp
cmc
mov
push
lahf
movsb
fnstsw
es
rcrl
sbb
je
inc
mov
and
inc
xchg
jae
int
es
cmpsb
mov
ret
out
pop
cli
pop
push
lcall
iret
cltd
std
mov
mov
jbe
sub
inc
sub
cltd
lea
pop
jbe
imul
lahf
and
arpl
arpl
cltd
fisttpll
imul
jo
cmp
movsl
and
into
fidivs
add
repz
cltd
clc
inc
daa
mov
jo
hlt
or
xchg
push
inc
repz
fstl
enter
stos
mov
dec
int
and
cwtl
mov
mov
lret
add
in
xchg
aaa
or
cld
bound
mov
loop
adc
outsb
adc
loopne
mov
test
and
aas
jb
mov
jbe
jle
lret
ja
add
sub
jb
and
stos
hlt
inc
sbb
sub
mov
sub
jno
sbbl
mov
ret
repnz
jne
lcall
aas
movsl
ret
addr16
testl
out
cltd
das
pop
inc
enter
adc
mov
stc
and
or
jge
or
test
xchg
pop
popaw
and
lret
aam
push
pop
or
stos
lret
xor
mov
movsl
inc
pop
adc
jnp
bnd
cld
lock
fidivs
shll
xchg
aas
xchg
cmp
sbb
ficompl
outsl
jg
pop
or
pop
loope
out
or
jg
lock
jae
sbb
or
mov
maskmovq
idivl
das
cmp
inc
pop
repnz
popa
inc
loope
jno
push
mov
bound
movsl
es
js
sub
jp
pop
into
add
in
xchg
mov
jmp
lods
push
mov
cmp
jge
jg
call
fs
mov
jnp
imul
lret
movsb
and
movsb
mov
in
mov
dec
je
jg
adc
pop
inc
push
outsb
push
mov
cmpb
sbb
cld
inc
loopne
lahf
pop
sbb
add
dec
add
pushf
test
jmp
inc
and
inc
pop
stc
lds
jo
push
jge
jo
aam
xchg
push
bound
jb
dec
out
cmpsl
rcrl
mov
mov
jbe
pushf
xor
mov
xchg
xor
xchg
push
xchg
inc
add
cmp
pop
add
sub
clc
test
dec
xchg
fs
inc
lret
sbb
or
jo
dec
lahf
adc
sub
lahf
sbb
pop
mov
in
lahf
pop
mov
subl
pusha
xor
hlt
xchg
jo
jns
insl
fcompl
fwait
sub
es
mov
cmc
adc
or
cmp
jge
mov
push
inc
mov
mov
pop
cli
cmp
loope
jns
push
ret
lahf
sbb
lds
push
adc
jbe
xchg
push
ljmp
call
and
fnsave
xchg
xchg
jb
popf
ficoms
push
sti
les
mov
xchg
push
jbe
mov
jno
les
xor
mov
pop
push
jne
add
in
xor
mov
repz
sbb
inc
add
push
std
pop
inc
mov
or
scas
cltd
je
rcr
or
stc
mov
push
pop
xchg
loope
int
lods
mov
test
scas
daa
inc
out
pop
xchg
mov
imul
or
outsb
insl
outsl
sbb
jbe
mov
out
add
dec
stc
insl
lret
cmpsb
pop
gs
xor
dec
mov
sbb
nop
repz
ja
test
test
add
xor
sub
pop
push
jmp
and
dec
dec
ljmp
jo
mov
sahf
lret
or
das
xchg
lock
sbb
fcmovnbe
jmp
mov
cmp
and
hlt
cli
loop
dec
bound
jge
sbb
pushf
aas
adc
nop
jle
int
nop
dec
push
std
outsb
mov
dec
mov
or
sub
fs
mov
es
insb
adc
pop
xchg
fisubrs
call
test
test
cs
sub
xor
dec
ficomps
mov
mov
es
loopne
fildl
adc
aad
ret
adc
sub
je
das
dec
add
dec
decl
out
lds
test
inc
imul
jl
jp
and
or
daa
aas
lret
enter
hlt
cs
mov
pop
scas
clc
jo
adc
out
sahf
sbb
jae
cltd
aad
jo
push
pop
add
push
xor
les
cmpsl
in
cmp
dec
push
pushf
roll
test
insb
inc
or
jns
jno
push
repz
adc
lock
cmp
frstor
je
xchg
scas
repz
cs
aas
jnp
push
inc
shlb
loop
cltd
pop
xchg
jg
mov
xchg
mov
add
cmp
ret
stc
push
jb
dec
insb
repz
sbb
mov
and
loopne
fs
into
push
xor
int
add
in
dec
in
test
pop
push
cli
test
iret
xchg
add
fnstcw
js
sub
sbb
and
pop
mov
pop
hlt
jge
mov
fistl
pop
movsl
fldt
rcrl
shll
sbb
push
fcoml
lds
xchg
sub
and
shlb
mov
cmc
lods
cltd
xchg
cmp
push
cmp
sub
out
jnp
scas
notl
add
cli
jp
cltd
push
popa
loope
mov
adc
sarb
sbb
jae
stos
cmp
mov
mov
rolb
pushf
mov
cli
test
mov
xchg
mov
xchg
push
inc
add
and
pop
jno
cmp
jp
data16
mov
mov
xor
stc
add
stos
cmp
jge
jg
push
sbb
dec
add
sub
pop
mov
xchg
cmp
cld
cmpl
xchg
add
icebp
sub
cmp
cmpsl
mov
adc
aaa
insl
popa
xchg
in
fs
mov
in
repnz
int3
mov
sub
popa
loopne
jge
mov
popf
inc
sub
xchg
jg
in
insl
sub
test
outsb
pop
out
inc
ret
aas
mov
sub
aas
dec
jne
js
pop
mov
dec
shrb
sbb
sub
aas
mov
xchg
sbbl
jo
and
sub
lods
dec
fadd
jg
cmc
push
xchg
adc
jl
or
or
add
lahf
adc
gs
cmp
mov
cmp
lock
leave
mov
pop
push
xor
pop
js
mov
dec
cmp
jne
inc
pop
mov
cmpsb
leave
adc
and
xor
sbb
fldl
push
lahf
xchg
gs
xchg
sbb
sub
sub
pop
adc
dec
cwtl
rclb
pop
rcll
sbb
lock
scas
cmc
or
sub
push
jne
fstpl
push
mov
in
ror
xor
test
push
mov
mov
cmc
out
add
in
sbb
sub
popa
pop
sti
lods
loopne
je
jne
cmp
sbb
mov
adc
xchg
pop
rorb
mov
out
jb
lea
xor
xchg
lds
mov
dec
mov
enter
sub
mov
xchg
rcrb
inc
movsl
xchg
shll
cmpsb
mov
mov
cmp
cmp
das
fidivrs
cmp
lcall
incb
clc
into
sbbl
mov
or
js
loop
pop
push
scas
sbb
cmp
cmp
imul
out
ljmp
xchg
mov
shl
lock
push
mov
popf
gs
andb
shll
lret
xorb
add
rclb
and
push
lea
aam
xorb
cmp
inc
loop
fnstsw
outsl
popa
flds
pop
stos
sbb
stos
daa
cmp
out
inc
sti
inc
nop
arpl
fldl
xchg
inc
mov
jge
mov
mov
aad
mov
insb
pop
dec
adc
jae
lret
push
popf
leave
jbe
rcr
rclb
lods
inc
jmp
inc
xlat
popf
out
fwait
mov
fs
cmp
xchg
push
insb
mov
dec
clc
ss
sbb
aaa
or
inc
add
clc
push
repz
and
pop
sub
mov
rorl
jne
xchg
loop
daa
add
push
push
in
lret
jbe
shll
insb
lahf
or
pop
pop
cli
lods
inc
cmp
rcrb
scas
push
lahf
jp
jecxz
jns
bswap
lock
sti
dec
cmp
in
mov
push
int
xor
push
xchg
sbb
mov
aad
push
rol
into
imul
or
in
mov
aam
mov
jecxz
adc
test
stos
pop
aas
mov
jb
jno
inc
cmp
stc
jne
xchg
lds
imull
int3
add
sub
cmp
push
data16
dec
loope
inc
pop
imul
scas
aad
inc
int3
nop
cs
lea
mov
adc
or
jecxz
xor
hlt
movsb
ds
mov
icebp
adc
test
sub
push
push
sbb
aaa
xchg
mov
cltd
leave
lret
jb
pop
sbb
sbb
fs
xchg
scas
xchg
xchg
pop
sbb
jg
data16
mov
push
lock
popf
incb
ret
xchg
in
push
and
cs
dec
nop
cmp
mov
andl
ret
xchg
arpl
push
or
loop
or
jae
subb
out
in
hlt
aaa
push
mov
or
sub
jp
xchg
sbb
jno
icebp
jnp
loopne
or
cltd
into
aas
stos
lods
mov
adc
pop
data16
sbb
and
mov
sbb
gs
mov
shll
xchg
inc
out
sarl
icebp
adc
mov
sub
xchg
push
cld
insb
inc
lahf
sub
daa
jecxz
fcmove
sbb
shrl
dec
push
cmp
mov
and
popa
lret
inc
mov
inc
repnz
add
push
jge
adc
in
test
mov
out
dec
dec
dec
cld
fs
push
sub
sbb
imul
inc
jge
imul
jle
jne
xor
imul
mov
orb
fnstenv
cwtl
rolb
or
push
cld
inc
sti
dec
test
xchg
stos
or
imul
add
mov
cmp
leave
rclb
shlb
test
and
dec
or
and
scas
cmpsl
and
cli
cmp
lcall
inc
fidivrs
mov
popf
add
cmpsb
imul
jge
jle
and
icebp
dec
push
mov
clc
jo
out
lahf
mov
xchg
stos
and
cmp
pop
and
sub
mov
shlb
rcrl
dec
cmp
mov
test
mov
mov
out
pop
sub
pop
lahf
cli
adc
in
xor
xor
fidivrl
lds
daa
cmc
sub
dec
jecxz
scas
testl
inc
lahf
outsb
mov
pop
inc
repz
lods
lods
fisubl
mov
sti
push
add
bound
push
aaa
xor
std
push
cmp
and
fstpt
jmp
rorl
adc
jp
rorl
popa
lods
xacquire
mov
add
popf
frstor
fidivs
cltd
loope
or
outsl
jge
mov
fincstp
and
loope
ret
lret
invd
int
movsl
cmp
pushf
int
cli
test
mov
sbb
lret
es
adcb
push
mov
sub
cmpsl
in
dec
int
add
add
xchg
outsl
mov
mov
loop
out
shll
lds
mov
mov
mov
mov
or
fsubrs
test
xor
rclb
push
out
test
rorb
xchg
out
scas
stc
stos
inc
and
aam
repnz
inc
cs
scas
lcall
int3
das
mov
jle
cmp
jo
lock
xor
lea
test
inc
das
jl
xor
aam
push
int
jmp
push
pop
arpl
popa
dec
in
sbb
jae
js
into
jg
daa
aaa
jmp
xor
test
or
mov
test
xor
cmc
cs
mov
sub
push
neg
push
lret
mov
xor
jb
cltd
sbb
dec
mov
cmp
int
and
push
sbb
lods
cmp
fcoms
es
sub
sub
ss
cwtl
push
xchg
or
mov
fldcw
lock
push
add
inc
mov
xor
add
pop
out
shll
add
push
test
push
aaa
adc
repz
mov
push
fdivs
push
mov
aaa
out
test
xor
sub
cmp
lret
jae
test
hlt
out
into
mov
jns
xor
push
int
shr
adc
sahf
sub
jnp
movl
mov
sbb
cli
dec
popa
sbbl
sti
adc
add
mov
repnz
test
popf
xchg
loopne
arpl
adc
adc
ds
and
mov
add
or
fs
dec
and
mov
xlat
cmp
lahf
cmp
sub
push
pop
and
or
into
inc
push
in
lock
stos
mov
mov
jle
inc
xor
cltd
loopne
mov
sbb
lds
in
sub
imul
fsts
cwtl
pop
xor
mov
inc
ret
dec
shll
stos
out
stc
and
or
in
mov
push
fisubrs
xor
inc
cmpsb
inc
fisttpl
mov
and
daa
sub
orb
fdivl
inc
js
std
mov
pop
adc
adcb
mov
insl
mov
add
xchg
push
inc
in
add
push
in
push
icebp
outsl
cmpsl
mov
clc
les
movsl
imul
dec
outsb
xor
add
jae
xor
xchg
fdivrl
push
cmp
mov
adc
sbb
or
pushf
mov
outsb
push
int3
icebp
sti
cmp
mov
cmc
sbbl
test
rclb
xor
or
xor
pop
xlat
jmp
shll
mov
sub
js,pt
loopne
and
gs
stc
dec
sbb
pop
and
das
pop
outsb
cwtl
rcr
xor
sti
adc
ficoms
scas
xchg
sbb
fimuls
fsubrs
xchg
pusha
popa
pusha
lahf
cmp
mull
sub
in
test
adcb
ret
adc
popa
dec
cltd
dec
fwait
or
fldcw
mov
call
sti
test
sbb
pop
in
filds
enter
aaa
sbb
jae
insb
imul
addr16
in
dec
fisubrl
xchg
hlt
movsb
and
es
clc
cmp
jae
and
stos
sahf
xchg
out
hlt
lret
mov
push
pushf
adc
xchg
and
test
hlt
jl
xlat
andb
test
popa
sarb
popf
jge
fs
jge
mulb
jbe
pop
xlat
test
push
aad
mov
lods
call
sarl
pop
or
mov
or
cmpsb
sbb
sbb
push
sbb
pop
pushf
adc
bound
dec
and
pop
test
fsubrp
gs
in
jae
inc
sub
sub
fistps
clc
leave
fldl
sbb
ret
ljmp
movsb
jo
push
aam
add
mov
dec
jne
xor
cmpl
xchg
push
lahf
je
jbe
push
sub
inc
mov
push
cmp
mov
mov
clc
mov
not
dec
pushf
xor
imul
fsubrl
jg
mov
xor
pop
nop
and
repnz
push
sub
mov
es
jg
mov
xchg
fsubp
push
or
xlat
ljmp
xchg
imul
sarl
dec
cmp
out
insl
mov
pop
in
cmp
xchg
imul
js
jno
mov
mov
lret
cs
push
lds
insl
mov
imul
dec
pop
dec
inc
lods
imul
data16
call
xchg
imul
int
sbb
sub
pop
rcr
fists
xor
in
dec
in
in
dec
dec
cli
xlat
fwait
cmp
adc
jmp
insl
bnd
adc
addr16
adc
adc
insl
add
jmp
aad
jno
hlt
fiaddl
mov
dec
into
cs
icebp
loopne
dec
out
jl
mov
pop
xorl
arpl
scas
ds
sahf
stos
inc
jae
cmp
cmc
dec
out
shrb
jb
addl
sub
mov
test
int3
outsb
clc
jae
outsb
push
pushf
dec
jne
sub
dec
imul
mov
sbb
pusha
add
adc
and
push
push
and
jle
fwait
fs
sub
sbb
int3
lods
dec
adc
arpl
nop
pop
insl
add
mov
sbb
and
jle
add
push
lahf
movsl
sbb
xorl
lret
cmp
mov
ljmp
cmp
test
jl,pt
push
mov
addb
hlt
jbe
dec
stos
mov
gs
inc
cmp
and
stos
iret
out
les
lret
aam
cld
lds
cmpsb
mov
or
lea
scas
pop
push
negb
push
and
nop
test
jno
das
jb
loopne
mov
pop
pop
loop
pop
xchg
jae
loopne
add
and
gs
mov
cmp
dec
mov
pop
test
cmp
and
nop
sti
hlt
sub
sub
out
daa
fwait
jge
or
xchg
jo
inc
fisubrl
jbe
loopne
repz
stos
add
mov
and
sahf
das
sbb
inc
icebp
push
jmp
cltd
in
aaa
aaa
sbb
dec
inc
mov
cltd
lods
jge
in
sarl
and
clc
pop
xchg
or
xor
mov
pand
adc
ret
pop
cmpsl
dec
and
insb
and
or
or
dec
xchg
sbb
adc
jl
or
stc
dec
lea
pop
jae
rol
notb
cmpsb
pop
xchg
and
or
les
push
dec
insb
xchg
push
shll
dec
inc
lock
lods
sub
mov
stc
adc
stos
test
xchg
repz
pop
jns
stos
xchg
push
mov
mov
jge
fidivrl
jo
mov
mov
xor
jae
movsb
fsubr
ror
mov
push
dec
jecxz
adc
test
fxch
stc
push
mov
stos
mov
sbb
and
mov
adc
clc
in
cmc
dec
xchg
int
pop
in
cmp
cli
pusha
movsb
adc
in
xor
mov
fs
hlt
mov
scas
ljmp
insb
mov
inc
xor
mov
lea
data16
ffree
ja
stc
jle
shlb
call
sahf
and
mov
les
push
cli
repz
fiadds
xor
bound
lock
or
sub
int
arpl
and
cmp
add
in
repz
inc
push
fldcw
stc
std
mov
sbb
inc
mov
jmp
data16
lret
pusha
mov
fiaddl
movsl
daa
enter
mov
add
dec
push
or
pop
les
test
lods
loop
or
xor
or
jb
bound
ljmp
adc
jecxz
out
or
lock
popf
and
insl
shlb
fbld
stos
repnz
sub
or
xchg
orl
cmp
pop
mov
fidivrs
fistps
es
pop
jmp
jmp
stos
mov
imul
leave
ret
mov
fistl
es
push
cltd
std
pop
mov
jecxz
inc
mov
imul
mov
dec
inc
xor
mov
icebp
mov
in
xchg
or
or
adc
aad
cmp
rcrl
iret
xchg
lods
jecxz
stos
inc
adc
dec
inc
outsl
pop
fs
in
lret
push
mov
jae
cmp
int
mov
imul
cli
ret
add
mov
or
cmp
pop
movsl
dec
xor
ds
out
dec
sub
popa
xor
push
outsb
jmp
xor
mov
icebp
xor
pop
sbb
test
pushw
pop
sub
cld
push
orb
inc
movsb
stos
aad
jge
fstpt
fwait
lcall
xlat
jnp
jns
adc
ljmp
xor
inc
or
sub
mov
pop
xchg
int
xor
in
adc
cmp
and
sub
int
fadds
stos
mov
fidivl
insl
and
leave
add
leave
jmp
adc
cmp
cmp
xor
pop
shl
jp
divb
jge
lahf
jbe
sbb
and
or
dec
sahf
pop
sub
cmp
adc
cmpsl
sub
adc
mov
pop
jae
je
stos
sahf
push
pop
mov
das
fisubl
xor
rcrl
jo
and
fcoml
pop
nop
and
jl
xor
jbe
insl
js
add
add
loope
sbb
iret
sub
dec
scas
std
mov
cmp
fisttpll
sbb
outsb
outsl
cld
xchg
adc
jmp
icebp
mov
out
mov
test
enter
ljmp
testb
xor
in
cs
lahf
or
push
push
mov
sub
negl
mov
pusha
rolb
shr
imul
sub
loopne
xchg
or
dec
jmp
fcomps
mov
mov
repnz
jo
jg
adc
xchg
add
pop
arpl
fs
and
cmp
pop
or
sub
iret
jle
fnstenv
add
les
imul
xchg
inc
adc
xchg
in
lods
adcb
xor
mov
mov
fmull
fsubrs
mov
cs
add
cmp
int
das
inc
fucomip
mov
pop
cmpb
sbb
xchg
xchg
sub
xchg
ljmp
pop
test
adc
push
pop
mov
scas
jne
inc
loopne
cld
sbb
cltd
adc
insb
dec
mov
fsts
aas
and
mov
into
adc
shlb
test
mov
fdivrp
push
sahf
lcall
pop
pop
push
aas
out
js
or
lea
or
lods
lock
dec
ss
sub
or
mov
icebp
or
nop
mov
xchg
enter
int3
xchg
adc
cmp
sbb
call
nop
call
sbb
arpl
sbb
loopne
xchg
and
aas
outsb
pop
or
jno
jmp
sbb
ss
inc
outsb
sub
sarb
cmpsl
inc
fmuls
repnz
adc
push
fldt
pop
dec
lock
jbe
pushf
sub
std
jp
inc
cltd
push
or
lea
test
xor
mov
and
out
inc
dec
inc
sbb
xchg
jno
orl
pusha
mov
and
add
sub
in
mov
mov
lcall
dec
rolb
in
cmp
push
imul
mov
arpl
hlt
scas
mov
xchg
shll
movsb
sbb
add
cld
dec
mov
jecxz
and
hlt
clc
add
lcall
push
ss
popa
pop
decl
in
int
packssdw
test
mov
popf
sub
cli
call
dec
popf
lock
dec
cwtl
push
mov
mov
lahf
in
scas
jle
or
xor
push
sub
push
or
prefetch
mov
mov
and
ds
mov
stos
scas
ficoms
mov
mov
cmp
das
into
mov
ret
pop
lods
in
sub
icebp
xor
push
ss
dec
mov
cmp
sbb
xchg
push
es
cld
pop
cwtl
cmpsl
lahf
fcoml
dec
mov
mov
popf
stos
in
aas
ficoms
fistpl
mov
or
cli
pop
dec
jle
stos
push
or
pop
aam
subl
mov
add
and
test
and
int3
lahf
push
jnp
mov
adc
add
pop
fcmovb
and
cmp
adc
or
xchg
sysret
stos
inc
pop
shlb
mov
movsb
add
pop
push
fsubs
outsb
aad
fidivrs
push
icebp
maskmovq
xor
sub
test
xchg
jecxz
ljmp
pop
repz
nop
pop
or
sub
xor
cmpsb
mov
outsl
adc
push
push
and
mov
wbinvd
popf
mov
into
aas
repnz
mov
inc
mov
mov
pop
xor
mov
fwait
in
rorl
mov
fidivrl
push
sahf
dec
mov
or
in
in
xlat
leave
pop
fwait
in
xchg
call
test
ret
ja
testb
outsb
mov
fimuls
popa
mov
test
or
pop
stc
sub
fsubrs
scas
lcall
nop
loopne
pop
xor
xor
adc
rolb
sub
dec
popa
or
jp
jno,pn
mov
jg
stos
pop
scas
add
push
int
loope
adc
roll
push
xchg
scas
dec
mov
imul
pusha
mov
push
xlat
addb
cwtl
adc
and
lret
mov
mov
cmp
push
or
mov
mov
popf
mov
pop
pop
push
adc
call
adc
mov
jb
or
xchg
fbstp
iret
sbb
roll
lcall
jne
mov
or
cmp
sub
int
and
dec
loope
shrb
jo
ds
mov
adc
sub
cmp
mov
lcall
hlt
mov
cld
push
dec
cmp
mov
adc
pop
xor
call
leave
in
aad
mov
fiaddl
xor
test
pop
sbb
clc
jae
lods
jg
push
or
jae
lcall
push
push
adc
pop
enter
in
arpl
in
ljmp
mov
jnp
jbe
push
lods
test
bound
xchg
pop
arpl
iret
popa
cmc
and
push
test
mov
cmp
fiaddl
jns
js
add
sbb
or
mov
jmp
jle
arpl
adc
mov
mov
cli
mov
js
jns
mov
adc
push
mov
push
dec
faddl
jnp
or
mov
adcl
stos
in
rorb
das
cmp
mov
add
clc
std
in
aam
jl
sub
mov
stos
xchg
lods
xchg
jl
pushf
daa
jbe
dec
inc
push
or
je
mov
cmp
adc
faddl
inc
sub
jb
sbb
out
sbb
jne
xchg
daa
mov
or
dec
sahf
addr16
pop
mulb
adc
jmp
fnsave
push
fs
shll
aas
jne
popa
fadds
gs
loopne
ds
scas
outsb
jo
int
cmp
jge
iret
inc
jne
outsl
mov
sub
xchg
mov
xchg
inc
sbb
movsl
xchg
mov
sub
push
shlb
orb
imul
sub
mov
mov
sub
scas
mov
call
jne
sub
cmpsl
shlb
movsl
and
add
addl
add
jp
into
push
add
pop
dec
xchg
nop
in
mov
adc
xor
movsb
das
shrl
mov
mov
stos
inc
or
add
mov
and
out
mov
mov
pop
xor
dec
or
dec
add
test
push
mov
dec
cmp
mov
xchg
sbb
das
mov
sub
xor
cmp
push
imul
lret
add
shl
negb
cmpsb
pmulhw
cmp
and
test
inc
push
pop
mov
add
addb
lret
mov
call
adc
or
cmp
in
enter
cmpsl
xchg
jle
sbb
mov
mov
stos
add
outsl
or
xor
enter
fadds
cmovle
cmpl
les
out
cs
sub
cs
push
mov
xchg
shrb
flds
pop
sub
movsb
fbstp
mov
shrb
mov
rclb
fdiv
inc
and
cmp
mov
scas
xor
ret
test
fcmovb
inc
dec
arpl
add
mov
movsl
mov
sub
aaa
fcmove
loope
into
je
cmpsb
mov
dec
jnp
insl
cmp
cli
jmp
jmp
sbb
lret
fdiv
pop
adc
cmp
and
dec
dec
fwait
out
add
jl
xor
call
mov
sbb
and
sbb
xlat
adc
jg
out
sbb
pop
cmp
popf
lds
imul
adc
imul
fstpt
cmp
sub
or
or
repnz
sub
aas
test
adc
pop
test
ret
rcrl
mov
jb
mov
in
sbb
push
cmp
push
and
and
adc
cmpsb
scas
jp
popa
fidivrl
int3
pusha
add
xor
gs
push
push
mov
imul
sahf
push
sbb
scas
shlb
mov
clc
fsubl
add
and
or
jg
aad
gs
test
pop
cmc
scas
fistpll
out
mov
push
outsl
stos
out
add
scas
mov
movsl
jne
add
cmc
enter
and
sti
and
mov
scas
push
push
push
jl
into
dec
out
push
and
push
sub
dec
leave
mov
cmp
sbb
pusha
pop
push
lods
cmp
jge
dec
mov
ret
jl
sbb
imul
inc
cmp
neg
xor
dec
xor
sub
inc
sarb
int3
stos
mov
sub
or
xchg
inc
mov
xchg
mov
ss
pop
dec
cmpl
stos
fildll
mov
mov
rcll
cmpsl
ja
fstpt
pop
lds
dec
stos
jne
loop
sti
test
outsl
cmp
jns
xchg
push
popf
in
das
pop
mov
pop
pop
jbe
fistl
pop
mov
inc
cmp
jne
test
call
add
inc
mov
cmp
fsubr
mov
jno
fmuls
ljmp
xor
jl
sub
loopne
outsb
mov
mov
and
jmp
fsubr
je
movsb
push
adc
stos
pusha
pop
icebp
push
inc
xor
jg
and
push
out
push
les
sbb
enter
xchg
jbe
jg
data16
mov
mov
lds
mov
cmc
mov
insb
lds
nop
lods
sbb
dec
mov
push
fisubl
push
xchg
ss
and
xor
std
movsb
fwait
or
cmovns
mov
mov
cmp
test
xor
mov
mov
shr
sub
or
adc
fnsave
sbb
xor
testl
loopne
out
subb
lcall
popf
out
pop
lret
cmc
js
dec
and
push
push
add
icebp
pop
int3
mov
mov
in
sub
cli
xchg
in
adc
pusha
mov
add
jecxz
int
and
clc
pop
sub
jmp
push
out
lods
xchg
mov
xor
jecxz
into
cmp
adc
xor
call
and
pop
pop
popf
pop
push
push
or
es
pusha
int3
xor
mov
ljmp
das
mov
and
in
daa
inc
js
ficompl
mov
or
cmc
fcompl
ficoms
test
movsb
in
fwait
jo
jnp
mov
mov
leave
or
lret
popf
sarl
scas
jecxz
jb
and
mov
add
jle
cmc
in
add
shr
mov
pop
es
aas
cmp
or
mov
js
idivb
xchg
pop
mov
sti
sub
fwait
or
pop
cmp
daa
add
cmpsb
movsb
loopne
or
repnz
outsb
cs
lock
push
repz
ret
rcrl
shl
cmp
stc
je
ljmp
or
adc
shll
cmp
mov
cmp
or
push
mov
lahf
shl
inc
aam
in
jns
pop
pop
lahf
test
orb
stos
in
loopne
cmp
shlb
push
xor
nop
mov
call
fwait
sub
mov
cmc
ja
mov
outsb
loope
jne
xor
pushf
push
sbb
mov
pop
daa
adc
jmp
out
jb
bswap
call
or
insb
xchg
mov
sbb
loop
lock
aas
lahf
pop
js
mov
mov
xchg
inc
ja
sub
and
pop
das
push
or
out
jb
sbb
into
in
xor
inc
in
std
mov
andb
pusha
mov
push
xchg
shll
insl
or
inc
ss
inc
mov
cmp
out
sub
arpl
lea
add
jns
push
push
xor
out
pop
pop
pop
stos
cmc
xchg
into
jns
add
jbe
jne
in
mov
sarl
aaa
sti
loop
mov
clc
ret
cmpb
int3
imulb
loopne
mov
jo
cmp
add
lcall
pop
bound
push
jg
rcll
cmpsl
test
jae
mov
addl
pop
js
jbe
les
pop
test
dec
incb
cli
enter
or
ficomps
lahf
nop
fwait
pushf
enter
xor
mov
pushf
cltd
fnstsw
into
popf
inc
mov
xchg
dec
xchg
sub
and
pop
imul
cmp
std
jno
inc
popa
dec
imul
ficompl
xchg
push
xchg
lret
push
xor
mov
jno
enter
insl
dec
push
or
pop
mov
sub
or
jno
cld
push
add
push
and
je
cwtl
jnp
adc
mov
pop
dec
push
out
jecxz
and
lret
inc
inc
aas
mov
loope
adc
ret
jecxz
add
push
rolb
mov
lcall
push
enter
pop
mov
inc
mov
aad
jo
addr16
pop
push
adc
cmpsb
mov
pop
xor
mov
mov
fs
dec
mov
adc
mov
out
dec
sbbb
mov
imul
inc
fildl
arpl
dec
addl
enter
sbb
and
mov
addl
ljmp
int
pop
jbe
rcl
cs
rolb
adc
mov
rcr
add
cld
stos
push
push
out
mov
pop
pop
jbe
or
mov
js
sbb
xchg
dec
xchg
and
sahf
cmp
push
clc
mov
sbb
fs
clc
test
sti
sub
cli
insl
mov
pop
mov
dec
or
inc
lcall
outsl
sbb
outsb
rorb
mov
vmaxss
lock
push
mov
dec
cmpsl
test
pop
stos
loop
enter
jge
and
out
cwtl
orl
insl
sub
adc
in
loop
ljmp
int3
push
or
fnsave
popa
xlat
or
push
lods
sub
call
or
aas
ror
sbb
push
push
pop
push
sbb
test
jb
dec
or
cmp
jns
loope
mov
and
ljmp
pop
int3
call
adc
adc
inc
fnsave
leave
jae
fadds
test
pop
pop
addr16
addb
xchg
add
xor
xchg
sti
push
mov
addl
repnz
jb
jmp
mov
or
mov
sub
or
fcoms
push
pop
sub
xlat
push
icebp
mov
icebp
fstl
sbb
mov
xchg
je
dec
cltd
push
clc
inc
mov
push
pop
push
in
or
or
inc
mov
xlat
and
cmpsl
bound
pop
adc
inc
ret
or
into
outsb
pop
mov
fiaddl
test
cs
test
jl
sub
xor
addr16
jl
out
arpl
adc
or
hlt
iret
mov
or
xchg
popa
bound
cld
jle
fwait
mov
pop
sti
imul
ja
sub
sahf
shlb
ljmp
xchg
daa
push
mov
xchg
ret
dec
cmp
inc
mov
mov
xor
ds
xor
sub
cmc
aas
cmp
movsb
loope
loop
mov
sbb
mov
push
sub
mov
mov
xchg
fwait
pop
xchg
and
mov
pop
add
sahf
inc
inc
push
jno
aas
jbe
lea
lcall
pop
sarl
sub
mov
xlat
adcb
mov
add
dec
stos
cmp
sub
cs
scas
sub
mov
out
es
sub
addr16
cmp
les
ss
inc
sti
incl
push
mov
movsb
pop
scas
leave
call
push
sub
sar
or
lock
out
mov
xor
lret
das
cs
pop
fidivl
jp
mov
fistpll
xchg
adc
mov
mov
xor
jge
or
cmpb
test
sub
xchg
pop
add
shl
dec
leave
movsb
out
and
xor
in
add
mov
jne
pop
mov
lods
sbb
out
xchg
in
inc
push
std
dec
push
dec
scas
fwait
call
out
or
out
insb
aaa
jae
cli
sub
shlb
dec
mov
push
mov
outsb
rolb
in
pop
sub
adc
clc
sub
xchg
adc
push
adc
repnz
js
sti
xor
mov
mov
dec
in
adc
jae
into
loope
jmp
test
push
movb
aad
and
jbe
mov
jo
xor
test
iret
ss
imul
mov
inc
pusha
imull
aas
cmp
test
sub
or
rcll
dec
popf
ret
push
mov
adc
mov
mov
push
nop
test
fdivs
or
xchg
shlb
or
dec
sbb
add
leave
nop
fnstcw
scas
pop
lret
loop
push
dec
pushf
xchg
mov
imul
in
and
jle
adc
popf
mov
rcll
xor
dec
js
sbb
xorl
and
fistpl
inc
aad
adc
add
fstpt
fnstsw
xlat
cmpb
xchg
lock
scas
push
dec
jae
lcall
shll
loopne
jge
sbb
push
test
sti
sbb
mov
data16
xor
inc
adc
xchg
fiaddl
imul
sub
arpl
jecxz
mov
mov
jmp
popa
repnz
jg
lea
repz
loop
ljmp
and
xor
nop
add
in
inc
sbb
or
pop
repz
or
nop
hlt
jb
push
dec
sahf
mov
sbb
xchg
sub
mov
jae
clc
push
lods
mov
and
psrad
sbb
aas
push
stos
lcall
push
mov
nop
jl
push
in
data16
mov
inc
xlat
js
pop
insb
enter
pop
pop
mov
or
dec
nop
jae
cmp
add
xchg
adc
lahf
cmc
gs
add
test
mov
cmc
arpl
jb
mov
xlat
push
in
dec
pop
adc
jecxz
in
mov
mov
sbb
lock
ffreep
subb
add
or
cmp
xchg
mov
sub
or
in
or
push
xor
mov
jne
add
lcall
data16
out
inc
and
push
xchg
sub
or
push
push
jne
test
push
or
push
inc
jge
jmp
movsb
xor
jo
hlt
fisubl
push
push
cmpsl
jmp
ljmp
ljmp
fidivrl
test
cwtl
xor
xchg
mov
repz
setne
mov
add
je
fidivl
xlat
fldl
sub
dec
fcoms
ljmp
dec
pop
dec
mov
fnstenv
out
pop
fsubrl
sub
loop
setp
mov
xor
xchg
mov
jmp
dec
or
stc
int
jb
sbb
adc
leave
xchg
jg
pop
and
or
adc
outsb
bound
and
and
mov
in
mov
ja
fiaddl
imul
xor
cmpl
imul
ss
xchg
jl
ret
enter
subl
xchg
or
js
sub
jecxz
adc
xchg
cmc
test
lret
arpl
sti
push
mov
ljmp
mov
pushw
dec
into
dec
loop
xchg
dec
dec
pushf
mov
pusha
pop
mov
ficompl
jno
xchg
je
mov
rcrb
inc
popa
mov
inc
push
cli
jg
xor
enter
mov
push
sti
int
sahf
jne
xchg
or
jg
pop
idiv
arpl
adc
fsts
fisubs
ja
in
das
nop
push
add
std
dec
push
adc
notb
cmpsb
inc
ja
in
xor
hlt
lock
dec
fstp
out
sub
xor
pusha
scas
pop
pop
bound
shrl
mov
push
or
aam
test
lret
loop
clc
dec
mov
dec
pop
test
data16
loope
enter
sti
jle
and
adc
pop
loope
cmp
sub
push
gs
xor
int3
mov
mov
dec
sbb
cmp
or
outsb
dec
scas
stc
push
imulb
mov
and
aam
xchg
test
and
dec
jle
lods
std
add
xchg
rolb
out
cmp
insb
ret
mov
adc
sahf
ficomps
arpl
les
in
push
sbbl
and
out
pcmpeqb
mov
out
sbb
add
sub
rcrl
int3
aas
mov
insl
mov
call
and
sti
and
movsb
sahf
sbb
mov
adc
lock
enter
movsb
nop
popa
xchg
xor
add
mov
pop
xchg
movsl
rsqrtps
popa
test
pop
out
mov
leave
mov
cmpsl
push
mov
ficoms
adc
inc
xor
add
push
dec
dec
pop
xchg
pop
rcl
clc
push
or
add
push
mov
mov
ret
cs
cmp
mov
add
ja
mov
in
mov
jns
cmpsb
daa
jmp
jl
ret
pop
das
lods
push
cmc
faddl
popa
mov
inc
stos
mov
push
add
stos
add
xor
xchg
outsl
fcomp
xor
sbb
adcb
lods
add
jge
ljmp
pop
or
int3
movl
repnz
and
outsb
test
test
outsl
cld
rorb
scas
ds
call
xor
mov
xor
sbb
pop
xchg
fildll
loopne
xor
je
test
xchg
mov
adc
jmpw
test
into
frstor
dec
mov
dec
shll
pop
cmp
xchg
lcall
aam
fistpl
ficomps
mov
movsb
scas
and
scas
adc
cmp
test
and
xchg
aam
imul
sbb
sub
mov
les
cmpb
jl
push
dec
shll
inc
inc
hlt
mov
and
sub
jmp
pop
icebp
cmp
xor
or
xlat
mov
sub
dec
sub
rolb
fdivl
fidivs
lods
cmpsb
cwtl
inc
pop
xchg
add
scas
roll
push
and
sub
test
fldt
mov
shlb
push
stc
adc
dec
push
stos
hlt
push
decl
popf
dec
decb
xlat
fdivrs
mov
iret
pop
xor
push
xchg
inc
test
or
nop
fimuls
mov
out
fadds
call
add
xchg
stc
inc
test
data16
mov
lds
mov
stos
ss
jo
aas
mov
inc
lret
mov
jae
and
mov
jmp
cltd
fnstcw
inc
and
push
fs
popf
aas
mov
xchg
test
adc
nop
xchg
jnp
cmpsb
lods
sti
inc
notb
mov
lods
adc
cmp
ss
push
xor
push
xchg
repnz
js
jb
xor
xchg
movsl
rol
scas
psubb
in
cld
dec
out
cmpsb
es
sbb
cli
cmp
dec
pop
pop
adcl
cmc
das
mov
mov
in
in
mov
out
fucomi
sbb
add
push
ja
mov
jl
lods
xlat
sti
push
insl
mov
mov
or
jmp
adc
mov
lock
mov
mov
inc
mov
fldcw
sbb
pop
aad
fwait
mov
sub
std
sub
add
leave
add
jle
in
mov
lea
add
pop
mov
f2xm1
add
inc
in
and
jge
das
lret
sub
xchg
mov
call
dec
movsl
adc
or
xchg
xchg
xor
ja
push
and
nop
repz
in
jae
add
leave
into
daa
jmp
ja
gs
pop
sbb
in
fwait
into
out
mov
testl
add
aad
xlat
mov
xchg
jle
jb
pop
mov
aam
mov
popa
lock
pop
mov
xchg
addl
or
loop
or
orl
sub
clc
push
dec
aaa
add
add
and
xor
xlat
idiv
xchg
mov
sbb
cmp
loop
sbb
pop
in
cs
gs
mul
inc
or
dec
and
mov
xchg
es
sub
adc
daa
xor
and
mov
cmp
lahf
sub
lahf
outsb
sbb
popa
stos
mov
mov
in
push
and
lea
push
fdivs
daa
pop
jp
inc
lock
incb
je
out
adcb
lcall
add
mov
out
dec
xchg
into
inc
mov
addr16
inc
cmpl
dec
push
fstps
ljmp
xor
rcl
pop
or
xor
icebp
in
push
or
pop
pop
mov
jbe
popa
daa
mov
cmp
lods
pop
popf
inc
ds
push
lds
daa
mov
xchg
cmp
push
dec
push
xor
std
dec
mov
dec
std
in
add
idivb
add
pusha
fsubs
aad
inc
mov
xlat
loop
pop
xlat
out
jg
daa
loopne
or
fildl
mulb
je
jg
pushl
and
ljmp
mov
jmp
pop
ret
adcl
cltd
jns
out
push
loope
jecxz
jmp
daa
and
int
outsb
fsubrp
push
and
push
repz
in
or
pop
out
leave
add
mov
ds
cs
xchg
movsl
gs
pop
lahf
push
fiadds
xlat
aam
mov
pop
out
test
imul
insb
sbbb
idiv
ficomps
test
adc
outsl
icebp
pop
dec
jg
out
inc
fsubrs
in
fadds
inc
add
sbb
loope
out
cmp
push
orb
pop
call
rcrl
mov
lods
inc
push
mov
push
into
iret
outsb
xchg
pop
gs
test
lret
mov
stos
popf
in
xor
jo
sub
mov
xchg
mov
mov
sbb
popf
inc
mov
inc
test
sub
es
stc
jne
lcall
xor
imul
cwtl
pusha
fstl
das
pop
dec
mov
mov
or
fwait
jns
xor
pusha
or
mov
mov
ucomiss
mov
and
jle
lret
adc
mov
sub
nop
popf
outsb
fwait
ds
mov
outsb
repz
add
sub
test
mov
jbe
push
inc
aaa
inc
pusha
cmp
pop
mov
sahf
cli
lahf
or
push
jmp
adc
loope
ja
xor
dec
lods
enter
add
sub
push
adc
mov
and
pop
hlt
jae
pop
dec
cmp
hlt
add
orb
fisubs
mov
pop
cwtl
out
add
test
xchg
jecxz
fcompl
sbb
add
mov
stos
imul
xchg
cmpxchg
jns
jae
movsb
xchg
jg
pop
dec
leave
cmp
xor
out
xor
push
cs
jge
clc
sahf
repnz
int
mov
cmp
test
pushf
aas
xor
cmc
shrb
mov
ss
mov
fsubs
lock
sbb
or
xchg
and
repnz
fildl
rcr
jne
push
jb
iret
xor
in
xor
mov
jne
push
orb
xchg
scas
pop
dec
jle
addr16
cmp
xchg
sub
mov
out
push
mov
fstpl
xchg
pop
dec
iret
bound
pop
enter
xchg
roll
sbb
in
pop
or
adc
icebp
daa
fucom
add
pop
lods
sbb
call
lock
inc
jne
mov
imul
adc
loope
mov
ss
or
sbb
lahf
fstpl
add
es
lods
sti
fisttps
dec
mov
bound
iret
lods
or
xchg
xchg
addl
mov
aas
jne
pusha
sbb
sbb
pop
stos
xor
popfw
jne
pop
jmp
addb
lock
dec
add
je
out
movsb
xchg
jg
jmp
fadds
pushaw
rcrl
lock
inc
lcall
sbb
push
push
fsubl
dec
hlt
insb
adc
pop
test
dec
pop
pop
pusha
or
std
xor
dec
stos
push
test
pop
pop
aaa
jno
cmpsb
cmpsb
or
lahf
in
push
cmp
icebp
movsl
pushf
sbb
sbb
or
out
adc
nop
inc
inc
add
cmpsb
dec
das
aam
sbb
stos
pop
cmpsl
movq
icebp
repz
add
insl
jns
out
mov
jge
lods
out
scas
and
mov
aad
or
jb
push
dec
sahf
int3
adc
mov
xchg
imul
into
repnz
lea
mov
sub
ss
xchg
mov
aad
js,pn
and
sbb
jae
dec
jg
inc
jb
xor
fwait
push
jge
dec
loopne
jno
xchg
fcomi
xchg
addr16
inc
jno
ljmp
outsb
pop
xchg
xorb
or
sahf
cmp
test
dec
push
xchg
pop
sahf
out
je
inc
sub
gs
xor
inc
ficoms
mov
outsl
push
add
gs
sub
movsw
and
sub
loop
rclb
in
push
mov
xchg
data16
dec
test
fstp
outsl
loop
out
xor
addr16
mov
mov
push
mov
cmpsl
xchg
add
aam
cli
or
mov
addl
int
out
dec
inc
lahf
xchg
int3
lahf
mov
dec
and
push
sub
idivl
push
mov
push
mov
sti
jnp
inc
fisttpll
xor
imul
aas
and
xchg
cmpsb
dec
call
filds
imul
or
aad
xchg
add
cmp
insl
stos
lcall
mov
jo
nop
stc
mov
xchg
imul
dec
and
fdivl
or
aad
dec
cmp
sub
mov
loope
xor
cli
scas
xor
push
pop
mov
pop
and
aaa
popa
jge
xchg
push
negl
push
inc
cmp
xchg
scas
adc
pop
int
into
push
push
add
lret
xchg
mov
hlt
sub
lock
sarw
out
xchg
int3
fbstp
mov
pop
testl
lods
cmp
push
out
sbb
aaa
outsb
in
or
mov
cwtl
add
std
push
mov
loopne
mov
mov
cwtl
add
mov
lret
fcoml
mov
scas
or
dec
xchg
or
push
mov
daa
aaa
mov
mov
cmc
mov
and
test
mov
pop
test
ret
pop
mov
mov
test
fsubl
jge
popa
int3
xchg
xchg
add
mov
arpl
fimuls
popf
bound
pop
lcall
push
loopne
fnclex
cld
dec
sub
or
clc
iret
mov
rorb
clc
sub
mov
add
gs
jb
and
cmpsb
daa
mov
add
loope
mov
mov
std
sub
in
mov
outsb
mov
pop
pusha
cwtl
lods
or
scas
adc
scas
subb
inc
call
movsb
xor
xor
insb
aam
dec
popf
mov
insl
mov
addr16
xor
sbb
mov
mov
and
mov
arpl
int3
cmp
sbb
sti
xor
and
js
cmp
mov
andl
push
jae
stc
sahf
std
or
ss
adcb
rolb
test
lea
add
ret
jns
jnp
clc
inc
enter
das
sahf
pop
xchg
xchg
orb
pop
pop
push
sub
cltd
pop
das
mulb
dec
stos
int3
shlb
jno
push
pop
sbb
aam
in
dec
in
cwtl
stos
aad
ret
popf
adc
andb
ficoml
dec
xchg
ljmp
inc
and
xchg
jb
mov
lods
push
ret
out
jmp
insb
test
enter
movsl
mov
lock
loope
cld
xchg
sbb
mov
push
mov
push
push
pushl
add
pop
lods
mov
mov
ret
jecxz
sub
loopne
rclb
pop
pop
cmp
cmp
bound
scas
loop
xor
and
mov
push
out
shrb
dec
cmc
add
mov
mov
sub
mov
imul
int3
stc
mov
and
addr16
jb
inc
pop
pop
outsl
aaa
xchg
jge
mov
mov
stos
loope
mov
add
mov
inc
ds
xchg
jns
leave
in
mov
push
popa
mov
inc
mov
ret
js
pop
addr16
into
jb
inc
mov
adc
pop
and
pop
into
test
addl
ret
daa
sbb
sahf
push
stos
lret
addl
cmp
adc
fs
lock
push
sub
out
xchg
pop
sbb
and
mov
insl
fucomi
sbb
sub
and
notb
outsl
cmp
pusha
out
jmp
cmp
dec
push
adc
sub
jg
call
adc
adc
mov
out
shlb
sbb
rorl
lret
jge
fdivl
adc
rdpmc
dec
bound
push
int
outsl
or
inc
pop
mov
add
imul
jl
iret
mov
xchg
orl
inc
cld
and
dec
mov
and
xor
add
int3
lock
jg
stc
and
imulb
test
hlt
cwtl
dec
jge
lods
ret
jge
mov
mov
fidivrs
add
inc
nop
xchg
jbe
lcall
std
mov
push
fildl
roll
in
xor
sub
ja
pop
shl
dec
fistpll
js
cmp
insb
inc
and
or
andb
out
repnz
fldt
xor
insb
mov
out
xor
dec
mov
inc
aas
decl
push
rorl
xchg
test
sarb
int3
mov
ss
lea
dec
popa
rclb
out
lods
mov
add
out
inc
or
lret
jl
mov
fadd
clc
enter
ret
movsb
xchg
fs
pop
add
and
outsl
mov
mov
sbb
jo
push
repz
jo
loope
sub
movsb
push
loopne
sub
adc
sbb
pusha
and
cld
dec
lret
dec
and
mov
jge
dec
or
call
rol
pop
sub
jmp
fiaddl
jle
adc
xchg
mov
bound
into
pop
movsl
in
dec
jmp
out
rolb
es
mov
stos
gs
xor
iret
mov
into
popa
rcr
fstl
cli
fidivrl
bswap
lret
enter
ret
jbe
cmp
mov
push
pushf
cmpsl
push
cmpsl
pop
sbb
in
fistl
inc
cmpsb
push
jl
mov
cwtl
push
lahf
xor
pop
jb
mov
or
aas
xor
lds
into
cltd
push
repz
inc
xchg
xchg
in
arpl
popf
outsb
std
lods
adc
cs
lods
shrl
xchg
jno
push
adc
push
cltd
decb
dec
mov
mov
add
push
or
jmp
or
cmp
iret
shl
cmp
out
cbtw
loop
mov
in
punpckhwd
cmc
inc
mov
push
cmpxchg
pop
pop
imul
daa
mov
outsb
fdivrl
xor
pop
push
jno
and
dec
xor
lock
out
out
jge
incl
std
xchg
sub
jnp
dec
js
mov
out
xor
or
cld
ljmp
dec
scas
divl
jae
inc
sub
fsubrl
sbb
mov
cmp
vcmppd
or
jmp
add
xchg
sbb
push
sub
fstl
and
addr16
stos
pop
faddl
sub
sub
mov
add
popf
inc
dec
push
shlb
push
inc
sar
jnp
push
cmc
push
popa
movsb
push
lds
dec
imulb
pminsw
push
dec
movsb
push
jp
mov
mov
test
fwait
push
pop
jns
stc
cmp
rcll
dec
cltd
or
or
xor
test
dec
lret
push
mov
jmp
or
mov
mov
inc
fimull
cmp
int3
xor
pop
in
pop
jns
stc
dec
jno
sti
or
jl
sar
mov
xor
mov
ss
fbstp
or
movsb
ror
cs
add
xor
aas
cmpsb
mov
inc
xchg
test
push
test
pop
jbe
sti
push
xchg
in
pop
test
cwtl
scas
and
fistpll
test
in
or
notb
pushf
fs
out
mov
cmpsl
fdivs
aad
mov
ss
faddl
rcrl
xchg
and
icebp
xchg
xchg
adc
or
pop
lods
cwtl
mov
arpl
pop
test
mov
cmp
dec
loop
cwtl
inc
or
or
push
pop
add
hlt
sub
and
xchg
xor
enter
push
sbb
fisttps
outsb
mov
push
jecxz
ss
std
subb
jp
jl
push
push
jno
aaa
outsb
mov
jl
pop
outsb
das
xchg
pop
sub
jge
dec
cmc
push
or
out
mov
test
aaa
pop
hlt
mov
stos
popf
aam
add
lds
into
push
test
inc
sbb
icebp
pop
mov
shlb
in
ss
mov
inc
dec
or
in
and
jno,pn
adc
fsubrp
dec
das
xor
inc
inc
cwtl
rcrb
push
inc
sti
cwtl
sbb
xchg
inc
jo
xchg
pop
in
std
in
sbb
fs
mov
adc
sbb
pop
lock
sahf
mov
dec
cmpsb
mov
mov
pop
add
sub
rolb
jle
aam
sub
inc
fildl
shlb
pop
xchg
lret
xor
jcxz
mov
ljmp
mov
leave
jle
shlb
ds
insb
aam
inc
js
in
imul
test
je
rclb
es
rolb
pop
divb
lahf
pop
jge
cmc
fidivrl
stc
in
dec
jge
mov
fwait
adc
adc
xchg
test
rep
gs
test
and
or
jp
jp
lahf
movsl
cmp
frstor
out
sub
ss
test
add
sbb
shrb
popa
add
fisubl
xchg
sub
jp
cs
pop
jecxz
or
andl
push
inc
and
fisttpll
and
pop
sahf
mov
and
lods
xlat
push
cmp
ljmp
leave
jp
mov
sarb
into
ljmp
cmp
sti
inc
add
lea
push
mov
dec
pushf
xchg
add
aam
jp
imul
bound
inc
lock
inc
sbb
adc
adc
jno
mov
insl
or
insl
mov
dec
sbb
add
jae
and
inc
mov
test
inc
dec
aad
adcl
mov
sub
test
inc
mov
jmp
add
and
push
in
mov
hlt
test
lahf
ljmp
rcrl
adc
push
or
push
push
sbb
mov
repz
sbbl
cmc
aas
pop
sub
adc
lret
les
out
mov
adc
mov
add
in
push
sub
pop
push
bound
lcall
sub
push
addr16
inc
mov
gs
mov
pusha
rolb
and
and
xor
pop
push
xchg
sbb
xor
mov
scas
lea
xchg
pop
movsl
loope
mov
test
repz
push
or
sti
pop
sub
outsl
mov
popl
inc
arpl
popf
repz
cwtl
repz
nop
jo
inc
or
out
iret
arpl
and
movsb
push
add
gs
adc
dec
out
movsb
in
add
fsts
xchg
xor
add
in
and
push
fmull
pop
js
insl
fidivl
cmpsb
xchg
add
fistpl
rcll
jne
sar
cmp
fwait
mov
repz
and
mov
andb
pop
and
loopne
add
iret
out
push
cmpsl
dec
inc
into
pop
push
mov
jg
jo
dec
inc
imul
pusha
fldl
fisttps
shr
data16
xchg
lahf
mov
fstpl
mov
mov
push
jge
dec
add
pop
sbb
ss
scas
sahf
fdivrl
sub
test
jne
in
cmp
xlat
cmp
unpcklps
movsl
mov
push
fwait
dec
je
movsb
sub
das
inc
push
lods
ss
push
in
push
fcompl
dec
scas
imul
inc
cmc
popa
inc
xor
or
cld
scas
ret
sbb
xor
stos
popa
xchg
es
push
test
faddl
jno
inc
lcall
lret
push
mov
pop
int3
pop
dec
flds
into
sarb
or
mov
adc
sbbb
ffree
push
and
rolb
cltd
test
mov
adc
push
xchg
scas
jbe
fcoml
imul
sbb
cmpsb
fnstenv
fdivrp
and
mov
fsubrs
movsb
adc
sub
push
sub
cmp
cmpsb
inc
idivb
lret
or
stc
cmp
lods
test
cmp
bound
sub
push
xchg
scas
sub
push
ret
pop
enter
andb
sahf
xchg
mov
rcll
inc
outsl
loope
mov
inc
xchg
add
or
shlb
dec
sub
inc
and
jmp
orl
lds
popf
and
mov
fstpt
push
loop
pop
jle
xchg
xchg
and
divb
ds
test
adcb
cmpl
xor
jo
jmp
jno
in
pop
pop
mov
in
popa
in
lret
loope
jno
sbb
sub
adcl
sbb
test
mov
push
mov
xor
incl
sbb
or
jnp
jae
or
shr
arpl
ljmp
stc
mov
fdivp
adc
jg
repz
adc
or
aas
cmp
mov
xchg
outsl
add
add
pop
gs
mov
or
addr16
aam
cmpsl
xchg
push
repz
jmp
rol
aam
repz
and
lret
xchg
pop
inc
xchg
imul
sahf
or
pop
movsl
loopne
mov
fistps
sub
pop
push
xchg
mov
push
in
dec
bound
mov
pusha
aam
fiadds
cmp
cmp
aas
decl
outsb
lea
ds
cmpsl
mov
and
arpl
insb
cmp
or
pop
cmpl
jns
out
scas
dec
inc
shlb
aad
cmp
daa
clc
mov
push
fmull
faddl
mov
mov
in
lods
outsb
daa
mov
sbb
mov
add
cmp
or
dec
lahf
je
mov
mov
ret
movl
dec
enter
cli
cmp
mov
or
lods
mov
pop
in
or
adc
clc
loopne
pop
pop
bound
in
mov
mov
xchg
rcrl
add
repnz
lcall
imul
lds
movsl
and
or
int
ret
subb
and
inc
mov
pop
pop
icebp
inc
outsb
lock
cmc
and
cmp
and
xlat
push
hlt
adc
js
fisubs
xor
mov
push
adc
inc
cwtl
cltd
and
repz
cld
mov
sbb
gs
xor
mov
inc
pop
mov
sub
sub
dec
movsl
or
repnz
xchg
jp
xor
xor
in
decl
xlat
clc
or
inc
mov
dec
lea
pop
inc
inc
mov
mov
rclb
push
fstps
add
dec
das
push
mov
push
and
xchg
int3
xor
push
jae
out
test
mov
mov
lods
sub
test
xor
shrb
jno
add
outsl
jge
ljmp
sub
test
mov
or
mov
mov
xchg
jp
pushf
mov
ret
fsubrs
mov
lock
pop
mov
cmp
pop
jb
ffree
lcall
arpl
xchg
sahf
cld
add
leave
faddl
pop
imul
cmp
dec
dec
sbb
cmp
fsubrl
inc
cmp
pop
xor
add
les
jl
mov
leave
lret
sbb
jge
pusha
fwait
lahf
mov
adc
scas
nop
loop
dec
cmpsb
pop
mov
lds
mov
push
bound
insl
mov
pop
cmp
aad
inc
sbb
gs
lods
mov
lahf
mov
sbb
arpl
mov
xor
pushf
das
inc
add
sbb
outsb
jo
sbb
test
outsb
je
out
jo
inc
ret
popa
cmp
adc
jg
xchg
or
pop
shl
icebp
sbb
fiadds
add
into
sbb
in
dec
stos
pushf
pop
jmp
or
push
add
push
cs
rorl
lods
sub
scas
xor
or
gs
xchg
xor
leave
out
jbe
adcl
sbb
jle
dec
pop
out
lcall
rcll
rcrb
pop
sti
test
lret
push
add
inc
into
and
out
hlt
insl
dec
or
pop
dec
loopne
inc
adc
xchg
cmp
test
jns
push
sbb
jnp
or
mov
xorl
adc
mov
je
fnstenv
stc
dec
into
mov
push
jecxz
cmp
or
adc
or
ja
xchg
outsl
push
pop
cli
scas
rol
add
adc
mov
in
daa
pavgb
dec
jbe
into
mov
ja
into
lahf
sarl
sub
jge
cmp
mov
pushf
data16
push
mov
add
outsl
btcl
sti
into
and
lret
fnstsw
je
imul
es
dec
adc
xor
xchg
mov
add
inc
outsb
addr16
sub
gs
mov
cmp
pop
fsubp
push
lea
ret
out
and
outsb
jns
stos
jno
shlb
and
into
fcmovbe
jl
or
leave
imul
mov
fs
fstp
or
loope
loop
cs
cli
movsl
sub
cltd
jecxz
pop
ret
jae
push
push
mov
dec
push
stc
mov
jle
outsb
adc
sbb
jne
sub
pop
add
dec
lods
or
iret
pop
lds
bound
mov
jg
enter
add
aaa
in
gs
cmp
adc
push
inc
mov
mov
xchg
sbb
pop
pusha
xor
ret
push
xor
pop
push
add
dec
pop
int3
imull
stc
je
test
mov
adc
xchg
bnd
call
dec
push
rcrb
pop
insl
cwtl
jns
mov
push
mov
out
fs
push
sbb
xor
lock
jb
pop
inc
cld
cwtl
or
cmp
sarb
push
mov
imul
pop
aam
xor
pop
or
push
cwtl
cmpsl
sub
roll
xchg
cmp
jbe
jno
roll
inc
mov
lahf
daa
mov
or
test
push
popl
rcrb
lods
jb
rorl
mov
inc
sub
stc
lahf
lods
jmp
je
inc
lods
addr16
mov
push
fcompl
nop
addb
repnz
and
jne
mov
enter
jbe
pop
dec
mul
inc
movsl
and
jl
inc
mov
sti
mov
adc
outsb
clc
pop
mov
push
or
in
paddsw
mov
outsb
xchg
pop
lcall
sbb
jbe
and
xchg
dec
and
inc
xchg
ret
push
stos
es
or
mov
xchg
pop
sbb
pop
and
into
clc
sti
xlat
data16
jmp
push
int3
xor
mov
lea
insl
rolb
dec
sarl
fbstp
xor
mov
mov
arpl
push
sar
jecxz
shrb
or
fsts
push
lcall
mov
add
xchg
mov
mov
imul
xchg
jg
pop
std
lods
sub
xchg
cmp
xchg
sub
sbb
push
pop
xchg
jl
pop
cld
fiaddl
ficoms
mov
inc
cwtl
rcrl
repz
xlat
sub
jmp
mov
dec
jno
stos
scas
add
lcall
sbb
jns
lea
arpl
jnp
fdivrs
add
pop
repnz
sub
cmp
outsl
mov
xor
in
dec
mov
dec
call
test
mov
shlb
jmp
xchg
sub
xor
pop
test
ds
je
cmpsb
addr16
jle
push
push
adc
pusha
out
mov
pop
je
ret
xchg
cld
xchg
cwtl
loope
je
data16
cmpsb
add
pop
shl
xchg
or
int
xchg
scas
fisttps
sar
push
mov
iret
or
sbb
es
jns
xor
xor
pop
sbb
xcrypt-cfb
cmpsl
and
and
adc
cmpsl
mov
cmpsb
mov
sahf
cld
sub
xlat
into
push
jb
sbb
popa
sub
push
or
int3
add
in
dec
call
push
xchg
sub
nop
xor
mov
aam
and
ja
pop
dec
mov
inc
mov
sbb
cmp
stos
jnp
inc
mov
sti
push
and
inc
add
push
or
xchg
pop
lea
mulb
pop
push
aas
xchg
rcrb
sbb
in
xchg
fsub
jb
mov
sbb
xchg
cltd
push
into
repz
xor
enter
sbb
jnp
xchg
mov
mov
pop
int3
adcl
and
adc
and
xchg
mov
out
pop
cmp
pushf
xor
sub
lahf
call
insb
je
mov
loop
jle
push
cmp
sbb
jno
pushl
mov
sub
jbe
jle
enter
lcall
add
fisttps
add
xor
jae
push
adc
lods
fbld
out
scas
in
pop
sti
pop
xchg
xchg
jno
pop
or
adc
movsb
mov
mov
dec
repz
mov
jp
dec
out
fldt
mov
ret
sub
sub
jae
rorb
cmpsb
bound
ss
jl
ja
bound
pop
jecxz
mov
scas
push
and
adc
jg
or
add
call
pop
js
pop
push
adc
mov
sbb
mov
enter
lahf
ss
sub
mov
in
or
insl
mov
imul
enter
mov
mov
sbb
push
mov
jne
inc
add
adc
and
inc
xor
adc
adc
pushf
ja
pop
pusha
jp
sahf
data16
xchg
pop
sbb
adc
cmp
xchg
or
repz
xor
push
push
and
push
jae
push
les
stos
in
das
lcall
cmp
scas
repnz
cmp
add
iret
and
mov
repz
sbb
in
cmp
pop
mov
inc
outsl
inc
jmp
adc
imul
subb
dec
pop
mov
out
xchg
aaa
icebp
int
loopne
lods
cld
pusha
adc
or
inc
test
cli
mov
push
xchg
rcrb
in
fstps
hlt
xor
and
ljmp
add
div
lock
in
xchg
insb
repnz
sbb
in
popf
adc
mov
shl
mov
and
cmp
xchg
mov
and
mov
data16
pop
adc
cwtl
insl
push
dec
ja
scas
push
popf
push
test
cs
xorb
or
jae
xchg
sbb
inc
cmp
decb
je
inc
jbe
rol
repnz
aad
outsl
mov
mov
dec
jle
mov
sbb
add
push
or
jecxz
loopne
loope
test
add
sub
mov
out
test
and
insb
and
xchg
xor
lods
mov
jmp
mov
lock
mov
push
popa
out
jmp
cli
insl
adc
stc
std
mov
jns
push
sub
sahf
addr16
dec
add
lret
inc
pop
in
jns
xor
aaa
sub
xchg
or
push
int
sub
mov
iret
inc
lock
jmp
or
mov
pop
in
sbb
inc
fcmovnb
adc
decl
sbb
cmp
xchg
cmp
add
cmp
insb
sub
mov
jne
pop
leave
adc
mov
mov
leave
jecxz
into
xor
push
mov
out
xchg
movsb
js
push
jne
fdivs
leave
insb
orl
dec
mov
or
mov
mov
pop
inc
in
leave
mov
fldpi
push
out
ja
and
mov
jecxz
imull
pop
je
dec
popf
testl
xlat
jns
lret
les
es
push
in
mov
lahf
pop
js
inc
mov
ja
adc
ljmp
arpl
hlt
cmp
mov
pop
sub
cmc
shl
sbb
cmp
jb
sbb
fs
insb
repz
xor
and
mov
xchg
jae
xor
mov
sbb
nop
lds
push
pop
sub
data16
sbb
adc
rol
pushf
jae
fidivs
ljmp
lret
mov
lds
ret
pop
lods
pop
pop
push
xor
push
cmovp
adc
std
mov
daa
int3
call
cld
xchg
or
nop
pop
xchg
xor
pop
cs
and
inc
imul
lret
push
or
stc
out
and
lcall
xchg
adc
cli
push
test
inc
lea
movsl
or
pushf
mulb
stos
ret
sbb
xor
sub
sub
adc
and
fimull
cwtl
or
leave
mov
mov
cmp
in
add
add
das
sbb
mov
and
outsl
lea
in
add
sub
xchg
cmp
movsb
inc
and
popf
xchg
fs
sahf
std
xor
pop
jae
cli
in
punpckldq
scas
mov
popa
inc
inc
popf
test
push
jp
ret
imul
pop
mov
in
pop
jge
sub
inc
shlb
adc
fwait
pop
jns
aaa
push
cmc
cmp
roll
xchg
repnz
mov
sbbl
push
test
cmp
xchg
mov
pop
add
loopne
insb
ret
dec
mov
jl
jo
push
jns
aad
mov
jo
fs
sbb
cmp
repz
jo
lea
add
loop
out
test
fisubl
lcall
inc
pop
fwait
jne
xor
outsb
push
data16
mov
and
sub
mov
jge
mov
xchg
jg
push
pop
jns
call
jle
xor
push
ret
loop
jp
lods
repz
aaa
out
inc
dec
movsl
sub
dec
test
in
iret
aad
adc
imul
int3
int3
jns
lods
imul
push
lcall
push
dec
scas
cli
cmc
inc
mov
dec
shr
push
mov
fcompl
jae
rolb
in
mov
mov
inc
mov
mov
sarb
movsl
lahf
pop
xorl
add
lret
aad
sub
dec
ret
leave
xlat
lcall
aam
jecxz
in
pop
leave
loop
popf
inc
fucomp
xor
ficoml
popa
fdiv
sbb
das
dec
test
call
push
sti
mov
scas
mov
or
imul
out
outsb
daa
hlt
mov
decb
xlat
inc
aam
lcall
sbb
call
aad
fldt
lods
mov
fmuls
jo
stc
xor
aad
test
icebp
je
xor
imul
dec
push
adc
xor
js
jae
scas
das
lea
xchg
fcoml
imul
sub
cltd
aam
cmp
mov
iret
push
vpmulhuw
fdivrs
inc
jb
sbb
fdivl
jecxz
fistpl
add
xchg
iret
inc
xchg
test
xor
movsl
mov
ficoms
xlat
sbbl
mov
or
cmpsl
xchg
pop
lcall
mov
add
sbb
add
orb
call
pop
mov
cltd
dec
leave
outsl
xor
pushf
movsb
mov
pop
add
sbb
jo
sbb
je
enter
sarl
push
jg
gs
cmp
mov
adc
mov
fnstcw
orl
push
or
enter
aaa
xlat
or
push
lds
sub
js
xchg
in
dec
and
sar
mov
incb
jle
je
das
popa
aam
pand
jge
inc
xchg
faddl
jae
push
xchg
push
inc
pushf
and
or
pushf
push
cld
jg
sbb
out
shl
or
imul
out
xchg
and
in
pop
xor
test
adc
mov
cmp
pop
push
jle
inc
pop
mov
cmpsl
mov
mov
sti
mov
push
cmp
lods
call
jns,pt
fiadds
lcall
cmp
adc
cli
cmp
push
push
les
in
data16
mov
dec
scas
xorb
cmpsb
ss
aad
shll
cmpsb
xor
pop
ficompl
inc
jb
inc
add
inc
mov
movsb
and
neg
pop
loopne
cltd
mov
aaa
jl
leave
sbb
data16
stc
lds
push
data16
mov
push
push
leave
push
push
les
or
fnsave
jmp
test
js
dec
xor
adc
rolb
mov
mov
xor
mov
lds
jne
adc
lods
jmp
jns
subl
lret
mov
sub
adc
xlat
pusha
mov
mov
add
dec
fmull
into
mov
in
mov
mov
sbb
or
dec
jle
sarb
std
mov
sbb
add
dec
cmpsl
pop
das
xchg
xchg
in
and
cmpsb
mov
dec
mov
dec
mov
pop
push
sbb
scas
adc
out
dec
mov
jp
fidivrl
lds
ret
hlt
test
xchg
insl
cmp
or
jae
xchg
dec
add
js,pn
fbld
sbb
pop
outsb
push
arpl
dec
cmp
lock
sbb
push
popl
push
mov
fisttpl
push
adc
orl
pushf
enter
or
mov
loopne
aaa
sub
push
xchg
jmp
in
rcrb
data16
insl
test
popf
rcl
lods
xlat
fstpl
mov
mov
xchg
add
dec
adcb
ss
jp
in
repnz
or
push
xor
fs
dec
push
push
and
sub
or
out
cs
insl
inc
rclb
and
push
sub
inc
jp
pop
cmp
cmp
dec
mov
sbb
push
out
fmul
add
push
xchg
mov
pop
pop
sbb
dec
fnstsw
jb
pushf
mov
adc
lock
arpl
arpl
sub
pop
mov
mov
negb
stc
add
jl
lock
scas
les
pop
lcall
mov
add
ror
push
into
mov
repz
gs
pushf
ja
adc
pop
insl
push
push
and
pop
adc
cmp
jmp
dec
inc
mov
int
cmp
bound
les
jo
add
ss
push
xchg
es
popf
xchg
jg
cmc
ret
push
shlb
mov
sub
popf
sbb
test
int
ds
popf
movnti
aaa
pop
mov
or
or
push
int3
mov
or
popf
adc
sbb
push
push
mov
popa
mov
mov
pushl
nop
mov
outsl
sbb
add
adc
mov
mov
xor
pop
push
inc
int
pop
es
jno
int
lods
adc
imul
imul
cli
cmp
cltd
cmpsl
arpl
popf
inc
pop
aad
data16
imul
push
cmpb
out
test
push
je
pop
int
mov
and
out
insb
into
jmp
xchg
dec
mov
pop
sbb
cmp
push
movsb
sbb
pop
mov
scas
jnp
inc
jle
push
rorb
pop
testb
jp
scas
out
or
dec
inc
cld
dec
dec
andl
shl
rcll
cli
int3
xlat
fs
or
jle
mov
jo
fidivrl
decl
test
adc
les
imul
xchg
bound
push
or
pop
fs
jecxz
dec
sub
adc
lret
pop
jl
out
push
shl
mov
xchg
jno
xchg
ret
pop
aad
incl
push
mov
idivl
clc
clc
xchg
push
insl
cmp
icebp
pushf
add
in
mov
cltd
lock
mov
mov
inc
hlt
sub
push
fnstcw
or
fldcw
pop
cmpsl
cmc
pop
mov
inc
xor
loope
or
lret
push
in
jns
or
sub
or
pop
call
test
jmp
frstor
insl
lds
into
sbb
dec
test
xor
add
xchg
xor
enter
mov
lds
ljmp
jl
xor
and
sti
pop
pusha
rolb
xchg
mov
jmp
js
add
outsl
inc
inc
in
xchg
rorb
daa
add
jmp
lods
adc
push
push
cmpsb
and
adc
push
jg
jecxz
imul
bnd
jo
push
xor
mov
cs
adc
test
inc
adc
test
or
leavew
xchg
std
and
push
cmc
movsl
lret
out
mov
mov
xorl
mov
cltd
xlat
lods
or
add
mov
test
cmp
jle
leave
lret
movsb
mov
stc
stc
sbb
jns
into
xchg
std
hlt
and
cmp
iret
sti
adc
daa
jge
inc
or
xor
inc
push
xchg
push
out
mov
shr
scas
divl
and
pop
pop
cmp
gs
mov
rorb
notb
pop
mov
nop
jnp
dec
outsl
xor
jge
ret
inc
adc
or
mov
enter
mov
add
je
mov
adc
es
xchg
aam
cmp
pushf
loope
adc
rolb
clc
dec
cld
mov
dec
or
mov
fwait
mov
mulb
jg
xor
lret
jle
xor
nop
test
inc
out
sub
inc
push
push
jns
ds
push
dec
xchg
shlb
inc
or
popa
gs
dec
sbb
cmp
fs
jecxz
das
mov
xchg
or
dec
dec
call
popa
aam
or
push
adc
xorl
and
xor
sbb
idivb
push
dec
cmp
outsl
mov
shll
xor
xor
jmp
add
dec
daa
mov
pop
div
fcom
push
dec
fstpt
sbb
pushf
mov
xchg
pop
mov
prefetch
clc
push
test
push
lods
xchg
pop
fdivrl
cmovne
and
add
sub
mov
xor
dec
fcomps
movsl
push
pop
push
aaa
push
cmc
inc
aad
iret
outsb
xchg
ss
insb
testl
cmc
imul
outsl
movsb
pop
out
dec
xor
repnz
ljmp
hlt
cmc
in
mov
push
cmpsl
push
ret
pop
test
pop
cmpsb
and
sbb
dec
repnz
test
xchg
push
jp
shll
popf
push
mov
in
and
jae
cmp
xchg
test
adcl
aad
mov
movl
ljmp
mov
fsts
fsubs
gs
inc
xor
pop
jle
inc
repnz
ret
sub
rcrl
stos
dec
ja
fs
lret
dec
inc
adc
or
lret
outsl
daa
stc
roll
inc
sbb
arpl
movsl
aad
or
adc
cli
aam
sub
clc
js
dec
fs
mov
inc
or
jmp
shrb
mov
adc
shrb
adc
mov
ret
sbb
adc
adc
pusha
bound
fisttps
push
cli
push
addb
jg
jno
sub
in
stc
adc
jg
popf
cmpsb
push
int3
in
jns
cs
js
sbb
jo
fstpl
addr16
mov
mov
ds
or
mov
pushf
movsb
xor
jnp
fwait
sbb
lds
cld
iret
mov
dec
cmp
shl
in
jne
aad
cmp
jae
mov
cmp
push
jnp
sub
outsb
aaa
or
cs
aas
imul
pop
xchg
or
std
lds
divl
out
loopne,pt
shrl
mov
mov
adc
lcall
add
mov
sub
je
cmp
scas
cmp
mov
aad
icebp
cmp
and
inc
pop
fbstp
sbb
mov
frstor
jb
repnz
enter
adc
pop
add
pop
and
dec
mov
outsl
mov
mov
adcl
in
fs
push
xlat
dec
data16
cltd
test
aaa
mov
sub
or
xchg
add
lods
sbb
adc
push
adcb
mull
pop
je
loopne
lcall
pop
ret
pop
testb
lcall
popf
fidivrs
pushf
jbe
push
lock
mov
adc
fimull
fwait
call
rcrl
dec
scas
pop
stos
xchg
mov
dec
das
jecxz
xor
mov
xchg
jmp
mov
mov
cmp
sti
jne
fstpl
xchg
pusha
imul
lods
scas
mov
mov
jns
fdiv
jecxz
ljmp
pushf
mov
aas
push
test
mov
push
push
addr16
add
lret
pusha
loope
adc
sbb
pusha
mov
cmc
scas
push
mov
xor
xor
push
jo
jle
push
and
add
add
lret
push
stc
imul
sahf
xchg
cmpsb
bound
xorl
or
enter
cmp
cld
lock
add
mov
pop
add
clc
xchg
inc
sbb
inc
push
mov
idivl
adc
rcrl
ficomps
sub
or
xor
insb
pop
sub
add
mov
inc
rcrb
pop
test
ret
imul
mov
push
in
mov
fwait
add
ja
popf
mov
in
int
sub
ss
add
cmpsl
sub
mov
inc
int3
mov
jge
xor
add
test
xor
js
xchg
pop
popf
out
in
jae
movsb
scas
jnp
ror
pop
clc
and
sub
addr16
out
stc
cmp
out
or
mov
outsl
and
cmp
lahf
adc
ret
sub
not
add
hlt
dec
jbe
rorl
dec
xlat
out
ja
lock
sti
add
je
xchg
fs
sbb
fwait
ljmp
loop
mov
js
xchg
into
add
or
xlat
mov
hlt
cmp
stos
pop
mov
mov
jmp
xchg
inc
sahf
and
movsl
movsb
sarl
mov
jno
dec
xchg
int
mov
dec
lds
gs
mov
scas
and
xor
pushf
sbb
pop
lods
ret
mov
cmp
lahf
bound
aas
jae
dec
hlt
repnz
daa
sbb
mov
fldt
push
out
stos
adc
sbb
dec
stos
repnz
fmull
and
add
sbbb
mov
sub
dec
aam
xchg
mov
sahf
sbb
popf
xchg
dec
mov
hlt
jbe
adcl
push
mov
sbb
jnp
cmpsl
sti
inc
or
stos
mov
mov
fs
xor
xlat
gs
out
adc
test
sbb
out
sub
ljmp
mov
insl
xchg
push
xor
testl
pop
xchg
adc
cmp
mov
call
sbb
mov
inc
cmp
shll
lcall
pcmpeqd
jo
pushf
fwait
jle
xchg
cld
mov
rorb
mov
mov
mov
cs
imul
ja
and
sbb
adc
xchg
and
mov
outsb
or
lret
fcomps
adc
xchg
aas
adc
sti
jg
jns
fdivs
loopne
nop
mov
xchg
fs
movsl
dec
ja
inc
mov
shl
pop
lret
pop
mov
jne
loop
int
jmp
repz
mov
aaa
mov
scas
or
in
mov
xchg
ss
xchg
mov
arpl
lahf
imul
mov
dec
sbb
jge
mov
add
ljmp
shlb
iret
gs
and
sbb
or
movsl
cmpsl
rcll
cmpsl
xor
aaa
stos
dec
cmc
pop
out
pop
bnd
xchg
sbb
paddusb
scas
fiaddl
or
mov
dec
mov
scas
fbstp
sbb
int
sbb
xchg
loop
xorb
mov
data16
add
inc
clc
mov
push
mov
cmp
dec
enter
adc
nop
mov
popl
rcrb
and
adc
lods
dec
pop
jne,pt
xchg
js
into
int3
push
inc
aas
pop
pop
push
movsb
inc
inc
mov
in
sarb
into
inc
sbb
dec
or
sbb
dec
cli
imulb
sbb
push
push
insl
fmul
pop
hlt
jg
rcrb
dec
fnstenv
mov
mov
mov
jge
cmp
push
mov
jno
lret
mov
lea
inc
xor
addr16
outsl
adc
fistpl
lcall
add
subl
movsl
clc
imul
add
pop
jle
cmp
mov
push
ds
cmpsb
int
in
imul
mov
cli
xor
cmp
scas
mov
mov
call
cli
scas
inc
cmp
dec
jne
insl
or
adc
or
jle
aaa
icebp
es
pop
jecxz
mov
sbb
sub
add
mov
xor
repz
lret
xor
int
rcll
mov
rcl
loope,pt
mov
cs
in
stc
dec
bound
sub
ja
in
dec
mov
add
jg
imul
lea
xor
imul
cld
push
fwait
repz
ss
push
mov
push
xor
mov
into
cmp
jnp
xor
push
fdivrs
notb
sbb
jp
int
test
aad
mov
or
cmpsb
inc
dec
pop
mov
xchg
mov
cmc
stos
gs
rorl
dec
pop
sbb
adc
sbb
popf
out
jb
adc
xchg
mov
or
repz
ss
out
sbb
add
lea
jmp
xchg
ret
inc
add
dec
pop
sub
cs
loopne
jecxz
xor
and
aaa
add
sbb
std
cs
xor
push
movsb
dec
lods
mov
or
xor
mov
cld
xchg
mov
ret
test
mul
sbbl
iret
xor
xchg
mov
adc
ret
push
jmp
mov
rcrl
xchg
pop
mov
or
cs
mov
mov
ret
in
adc
jecxz
xor
fldl
jbe
pop
out
xor
jmp
xchg
fcom
adc
in
xor
dec
inc
jnp
adc
es
xchg
jg
add
leave
lahf
scas
shl
adc
xchg
rorl
mov
xor
jae
jmp
jp
jbe
out
arpl
les
pusha
hlt
scas
std
iret
mov
adc
xchg
jbe
insl
clc
test
dec
cmp
push
push
and
jbe
shlb
inc
std
inc
add
fs
dec
xlat
mov
cmpsl
sahf
cs
repz
fldcw
xchg
sbb
lcall
or
cmp
push
ja
push
lea
out
or
daa
std
inc
je
sub
test
aam
mov
xchg
mov
cmpsl
and
ret
test
les
mov
lahf
andl
sub
icebp
lds
pusha
inc
xor
aam
add
pop
sarb
fwait
adc
pop
pop
lcall
test
insb
pop
add
add
mov
xor
lods
inc
iret
add
ret
stc
cmp
mov
jmp
ja
outsb
repz
out
repnz
xor
mov
inc
adc
add
lds
sub
movsl
bound
and
loop
dec
push
outsb
push
lret
mov
ljmp
pusha
test
pop
notb
popl
into
inc
dec
aad
jge
mov
out
test
sbb
dec
mov
jp
int
push
mov
jns
in
loopne
mov
mov
mov
push
lea
and
cmpsb
push
push
sbbb
mov
subl
cmpsb
into
cltd
sbb
or
lea
ss
icebp
pop
aaa
je
data16
and
push
sahf
ret
data16
js
push
icebp
mov
jecxz
add
fstpl
mov
in
push
in
sbb
popf
popa
dec
aam
movsb
in
mov
or
ret
pop
mov
mov
jbe
dec
addl
jb
fsubl
lock
outsl
popa
rcrl
push
dec
testl
sub
xor
rolb
jae
divl
cmp
fidivs
xchg
xchg
andb
fsts
jl
out
jne
xor
jns
sbb
adc
push
imul
push
inc
cwtl
mov
mov
out
das
rol
pop
lods
adc
mov
xlat
add
inc
ret
cmp
add
mov
xor
mov
push
in
pop
daa
xor
mov
cmp
sbb
mov
jae
adc
inc
xchg
or
test
dec
int3
data16
lock
jle
mov
pop
mov
movsl
mov
jno
adc
imul
and
icebp
inc
add
testb
das
scas
add
mov
in
push
shlb
fisubrl
add
bound
push
pop
xchg
lds
dec
out
addr16
and
sub
adc
dec
andl
adc
decb
test
cmpsb
xchg
adc
adc
daa
mov
pop
pop
inc
push
movsl
in
sub
rorb
inc
stos
and
xchg
jb
call
repz
pop
inc
mov
sar
inc
adc
orl
test
xchg
push
push
je
test
push
loop
mov
push
test
sarb
mov
xor
cwtl
push
dec
mov
mov
ret
popfw
popl
ljmp
nop
push
inc
jno
xlat
lods
push
sarl
shrl
mov
cmp
pop
dec
xor
adc
sub
xor
cmp
sub
movl
cmpsl
es
fsubr
sbbl
ljmp
pop
add
das
pop
mov
xor
xchg
es
int
jg
and
mov
adcl
test
gs
test
lret
js
push
aaa
sbb
push
mov
cmpsl
dec
insl
cmp
scas
inc
pop
push
pop
hlt
mov
or
les
push
xchg
loopne
loopne
stos
popa
movsb
lahf
in
orb
push
inc
fmulp
mov
pop
clc
shrl
push
das
cltd
cwtl
and
ficompl
push
sub
pop
and
push
xchg
lret
mov
dec
pop
imul
fwait
fs
push
adc
imul
pop
adc
xchg
test
xchg
mov
clc
data16
pop
cmpsb
push
in
push
inc
shll
pop
xor
mov
fwait
sub
call
mov
in
xor
xor
or
mov
rolb
adc
xorl
add
sub
sbb
inc
cmovl
jmp
mov
arpl
mov
sbb
adc
aam
jbe
push
fistpl
lcall
jg
pop
pop
lahf
inc
mov
mov
jo
pop
sub
fdivs
icebp
push
cmpsb
xor
notb
sub
push
sti
sbb
ss
movsl
mov
nop
aam
js
dec
insl
sub
dec
roll
xchg
mov
movsb
hlt
or
mov
dec
js
in
out
pop
gs
xchg
push
cli
and
in
jl
sub
outsb
cmp
addb
sub
sub
rcrl
add
xor
test
or
test
sahf
mov
in
pop
xchg
hlt
push
cmc
mov
jb
xchg
push
pop
push
adc
insb
xor
xchg
lret
mov
add
ds
ljmp
inc
sub
mov
out
inc
xchg
jp
dec
mov
popf
pop
daa
sahf
aad
inc
hlt
mov
lcall
sub
dec
sub
popf
push
mov
push
leave
popf
dec
dec
xor
shr
insb
mov
aad
shrb
xchg
into
ret
mov
or
mov
push
out
pusha
popa
aaa
push
in
rorb
mov
jno
loope
in
mov
sbbb
adc
dec
jne
pop
icebp
int3
adc
push
sbb
aam
cli
imul
xor
sbb
das
pop
jno
outsb
popf
les
pop
arpl
in
and
stos
cmp
cmp
ljmp
add
dec
rcll
dec
jne
fs
lea
lods
and
inc
mov
cmpsl
fwait
or
mov
mov
add
push
mov
sbb
fsts
pusha
cmc
jecxz
fsubrs
xchg
sub
xchg
mov
jnp
sub
std
cmp
shrl
daa
lcall
sbb
push
ss
add
dec
push
xor
add
andb
add
ror
or
fstps
adc
rcrb
cltd
ret
jmp
add
test
fsubrs
insb
xchg
std
mov
cwtl
jnp
xchg
movsl
outsl
mov
ss
mov
xchg
mov
push
and
add
imul
shll
mov
hlt
or
inc
ss
adc
imul
outsl
sub
pop
lea
or
inc
or
xchg
mov
bound
scas
add
inc
sub
jg
sbb
sub
mov
mov
lock
add
call
das
pop
sub
loopne
ja
imul
das
push
sbb
aaa
stos
pop
sbbl
cld
mov
icebp
js
dec
sub
in
or
pusha
sub
in
add
mov
jecxz
cmp
jbe
dec
xchg
addl
xchg
jb
dec
adc
mov
inc
xchg
adc
jmp
jecxz
call
je
mov
sbb
xchg
or
lock
rcll
stc
push
pop
int3
mov
pop
fwait
and
out
cmp
jno
mov
or
sbb
jnp
xchg
in
js
shrl
push
ljmp
je
xchg
jg
imul
mov
in
adc
jae
adc
fxch
fidivrl
sbb
sub
push
dec
aaa
and
in
jg
mov
sahf
popa
mov
dec
imul
and
in
lock
push
pop
in
mov
imul
pop
lods
sub
xchg
cmp
lods
movb
les
or
add
scas
test
sub
push
or
ret
cmpb
mov
packssdw
int
xchg
or
lcall
rorl
jp
mov
imul
push
jnp
mov
loope
and
jmp
cmp
jle
ret
test
xor
hlt
add
in
inc
icebp
test
pushf
jl
push
jno
jp
data16
or
popf
lock
xor
jmp
jo
pop
xchg
mov
inc
push
arpl
out
mov
fsubs
rorl
add
pusha
out
loop
lods
and
ds
and
xchg
dec
outsl
int3
arpl
mov
enter
call
flds
mov
ja
xchg
adc
lahf
ficoms
dec
int
mov
adc
add
jl
cltd
mov
ds
jne
inc
ljmp
dec
mov
adc
mov
xchg
int
push
or
or
arpl
sbb
xchg
and
out
insl
cmp
push
pop
movsl
jne
push
dec
sub
xchg
or
xchg
pop
outsl
jo
adc
dec
push
xchg
sbb
bound
leave
insl
loop
xor
jbe
loope
out
out
inc
dec
mov
and
mov
jbe
lcall
fmuls
test
or
xchg
pop
sub
adc
ret
mov
stc
pop
imul
lcall
xchg
xchg
xor
add
nop
data16
push
insb
loop
push
fcomps
icebp
ss
jb
jle
fnstenv
aaa
lds
aaa
insb
repnz
xchg
mov
mov
pop
push
jecxz
jge
arpl
in
cmc
shlb
xchg
in
xchg
fildl
into
or
push
lea
jns
icebp
sbb
mov
nop
lret
stos
lock
push
push
sbb
mov
xchg
fsubrs
jno
lock
lods
push
mov
decl
push
jnp
clc
ds
cmp
rolb
pop
hlt
and
sbb
in
icebp
dec
jge
ss
icebp
pop
aam
cmp
cltd
or
mov
xor
mov
mov
ficompl
les
in
sti
sub
pop
and
aaa
lods
push
sahf
xchg
xor
sbb
hlt
lcall
mov
int3
imul
fldenv
sbbl
stos
fcomps
sahf
mov
xchg
mov
xchg
dec
int3
push
dec
lods
fstpt
outsb
notl
mov
out
ja
push
loope
cmp
shll
std
faddl
outsb
fcmovbe
call
out
iret
out
jns
popw
test
insl
fsubr
mov
sbb
and
inc
test
inc
xchg
movsb
mov
push
out
mov
icebp
arpl
cs
in
sahf
in
and
ds
xor
xlat
in
cmp
in
lret
sbb
outsb
push
lods
jg
call
jecxz
andl
lcall
shrb
stos
sub
ret
inc
sti
add
popf
mov
xchg
jmp
xor
lret
jne
push
add
sub
jle
stos
jne
sbbb
or
inc
in
cmpsl
jle
and
test
pop
and
pop
movsl
js
loope
out
aas
in
xchg
or
ret
je
sbb
fsubrl
push
int
inc
mov
add
in
arpl
push
push
outsb
fwait
jae
xchg
sub
dec
cmpsl
pop
mov
cmp
mov
push
xorb
sti
dec
out
sahf
test
push
imul
vpunpcklwd
pop
pop
push
or
test
cmp
mov
aaa
mov
cltd
mov
out
jno
ret
jae
addb
dec
dec
inc
push
add
pop
out
sbb
lds
neg
btc
mov
mov
push
pop
shl
cs
dec
ret
imul
dec
push
add
popa
outsb
notb
or
in
data16
adc
jo
in
mov
ja
mov
jns
xchg
push
xlat
jne
ds
push
mov
xor
xchg
out
dec
inc
hlt
jb
in
repnz
repz
clc
jmp
mov
dec
mov
dec
xor
jge
mov
xor
loop
xchg
push
pop
das
pushf
lds
pop
mov
lods
xchg
push
dec
mov
inc
sub
xchg
add
and
js
add
lods
jge
pop
sub
adc
mov
out
push
aad
sub
xor
pop
loopne
mulb
or
ds
push
rcll
je
aaa
sub
hlt
xchg
xchg
push
push
jbe
sti
add
xor
adc
sahf
shrl
sar
shll
fs
and
push
test
or
sub
or
xchg
mov
lods
adc
adc
clc
or
mov
cmpsl
std
or
data16
dec
jle
outsl
push
xor
mov
outsl
mov
rcrb
xchg
rorb
lcall
loop
cmpsb
add
jns
mov
sub
sub
mov
add
in
adc
ret
sub
lahf
nop
lret
pop
push
xlat
and
cwtl
cmp
or
xchg
adc
mov
insb
pop
xchg
sub
dec
mov
call
jmp
test
xor
xchg
std
iret
add
push
ja
jle
add
cld
hlt
push
shl
inc
pop
pop
jge
stc
push
out
int3
sarb
dec
xor
cmc
mov
inc
in
loope
inc
xor
push
jmp
sub
mov
int
cs
pop
hlt
add
cli
daa
sub
out
add
loope
add
movsl
cmp
push
and
shl
and
sub
mov
out
xchg
jae
jb
repnz
ja
sbb
dec
mov
gs
addr16
push
inc
fcoml
adc
jmp
sbb
outsl
pusha
pop
xchg
or
in
ret
pop
lods
aad
test
xchg
sbb
call
movsb
lods
mov
xor
xchg
cmc
add
and
push
pop
jbe
shr
lods
icebp
dec
pop
add
xchg
je
jmp
mov
dec
mov
mov
cmpsl
xor
addr16
xchg
mov
inc
data16
add
mov
sbb
mov
nop
int3
xchg
outsb
jnp
mov
add
push
mov
xchg
mov
stos
push
and
sar
mov
int3
std
in
push
enter
inc
mull
test
mov
insb
loopne
aas
ficoml
mov
inc
xchg
test
jno
js
push
xchg
sub
loopnew
aad
shl
repz
dec
movsl
aaa
mov
enter
shrl
outsb
xchg
mov
in
fdivs
pmulhw
mov
and
loopne
xorb
push
rorb
adc
out
or
xor
in
pop
fidivrs
insb
dec
out
jb
adc
push
dec
shl
shlb
lea
repnz
cmp
hlt
sub
mov
jle
js
fcompl
pop
gs
jnp
mov
int3
popa
lock
cmc
push
cmp
stos
test
pop
sbb
lds
pop
push
popf
lret
leave
mov
mov
clc
and
cmp
sbb
mov
ds
pop
fistpl
cltd
dec
sub
cmp
hlt
repz
in
in
adc
aas
mov
fwait
int3
push
rolb
in
stc
jne
and
and
stos
dec
fists
xor
cmpsl
pop
adc
enter
jne
iret
stc
sti
leave
lods
inc
xchg
cli
sbb
fbstp
mov
push
lds
out
movntps
out
dec
int
sbb
js
insb
andnps
dec
dec
popa
out
add
pop
sbb
inc
xor
add
std
ja
inc
sub
iret
jns
jmp
mov
idiv
and
cmpl
pop
test
sbb
xchg
orl
mov
add
ss
push
xlat
sti
adc
int
push
repnz
adc
xor
js
or
sar
inc
mov
rcrl
in
pop
push
fs
mov
arpl
dec
cmp
push
jmp
jge
and
mov
pop
xchg
dec
lods
cmp
mov
mov
sahf
pop
cld
cmc
movsl
cli
xor
jg
or
stos
ja
mov
or
xchg
fisttps
cwtl
and
jnp
idivb
push
fists
mov
sbb
test
push
cmpsl
and
out
jno
test
pop
inc
cmp
cmpsl
in
jle
xchg
pusha
bnd
int3
cld
jbe
xlat
jno
sub
or
mov
or
and
pop
and
push
push
ljmp
popf
add
mov
xchg
adc
adc
sub
cli
or
cmp
push
sub
add
sbb
adc
jne
xor
xchg
lahf
xlat
fsubr
sub
scas
hlt
les
movsb
mov
dec
push
imul
dec
mov
addb
pop
jbe
popf
movsl
shrl
scas
push
jecxz
aaa
jecxz
cmp
pop
data16
leave
and
dec
out
lahf
xor
shll
imul
ror
pop
and
inc
push
ljmp
icebp
pushf
addr16
ds
push
push
mov
and
add
std
scas
mov
dec
inc
dec
sub
or
fimull
push
or
pop
mov
mov
mov
movsb
test
fldl
insb
jmp
fwait
push
fld
ja
pop
pop
nop
mov
dec
xor
inc
insl
push
test
sbb
inc
cmp
into
and
xchg
stos
das
mov
mov
js
sub
jp
jbe
jne
pop
das
mov
les
sub
lock
jo
inc
or
and
adc
jns
mov
cwtl
stos
cmpsb
mov
sbb
scas
call
test
jmp
sbb
mov
pop
inc
andb
cmp
dec
lods
out
lcall
cmp
inc
add
push
jno
xchg
lcall
cli
mov
push
sbb
fimull
repnz
dec
sahf
fldl
push
push
pop
pop
int
adc
jo
pop
sub
imul
sub
sub
add
mov
jmp
mov
and
dec
iret
les
jae
fsubp
shl
in
xor
jmp
mov
pop
arpl
out
sub
cmp
jnp
leave
xor
mov
js
sbb
sets
adc
sub
jno
push
mov
xor
push
add
sbb
sahf
push
das
or
arpl
ret
fsin
pop
mov
xchg
xchg
aad
fstpl
imul
outsb
repz
inc
sbbb
daa
ljmp
jno
xchg
imull
js
add
xor
jp
sahf
ja
xor
sarb
aad
mov
xchg
or
stos
cmp
popa
sub
xchg
jnp
xlat
add
out
mov
and
add
pop
int
sbb
popf
and
inc
mov
sbb
adc
dec
in
dec
mov
out
jecxz
xchg
cmpl
mov
cmpsb
sub
in
lock
and
in
pushf
jno
jns
addb
xlat
outsb
xchg
cmp
jb
jbe
loope
imul
aam
add
mov
push
push
daa
loop
xor
pusha
loopne
test
iret
pop
mov
clc
lahf
jmp
jo
inc
mov
inc
flds
xor
xchg
dec
dec
push
in
push
push
jae
movsb
cmp
jge
ljmp
popa
xchg
test
test
or
dec
lock
mov
push
stc
xchg
mov
xchg
inc
jle
stos
call
cmc
and
xchg
lret
push
cmp
jae
lahf
push
stos
add
les
fists
icebp
lods
sbb
mov
ljmp
ret
cmp
mov
or
push
movsl
cmpsb
int
dec
jo
enter
mov
dec
adc
int
push
psubb
gs
inc
nop
imulb
test
into
add
mov
jno
lock
dec
xchg
or
inc
ss
sub
inc
enter
inc
jo
jl
mov
sbb
mov
subb
fcmovu
movsb
out
movsl
mov
jle
and
les
or
jno
movsl
adc
xchg
mov
test
jecxz
jl
sbb
xchg
dec
imul
ret
mov
arpl
sbb
pop
rcrl
xchg
dec
andl
ljmp
cmp
insb
or
rolb
xchg
loope
inc
jge
xor
test
rolb
cmp
test
mov
aaa
nop
dec
cld
mov
or
rorb
inc
pop
and
hlt
adc
xlat
gs
das
sbb
mov
dec
loope
test
shll
cmc
push
mov
fstl
mov
outsb
ret
loope
mov
test
push
jge
test
mov
loope
inc
mov
repz
mov
or
mov
inc
xchg
mov
adc
cs
mov
and
cs
test
sub
xor
subb
jmp
cwtl
and
cmpsl
sbb
bswap
or
fs
leave
scas
movsb
lahf
cwtl
or
pop
call
rorl
scas
mov
jnp
sbb
repz
pop
mov
xchg
cltd
les
mov
mov
and
jp,pt
push
ret
adc
iret
xchg
or
push
sbb
pop
mov
add
jo
xchg
sbb
dec
sahf
out
test
inc
ret
mov
dec
add
sbbl
out
mov
sti
jnp
std
stc
mov
push
mov
push
insl
cmpsl
cmp
xchg
lods
insl
arpl
jecxz
jns
jnp
lds
push
mov
loopne
lods
lea
sti
xor
pusha
repz
mov
pop
fadds
xchg
scas
xchg
pop
xchg
dec
adc
shrb
mov
adc
std
jmp
clc
lods
jnp
jb
arpl
arpl
repnz
popf
cli
pushl
scas
pushf
mov
enter
lret
fildll
jno
jl
dec
or
mov
subb
lret
aam
or
adc
xor
xlat
xlat
mov
mov
jmp
add
int
dec
dec
cmp
jb
movsl
add
xor
aam
in
stc
pop
dec
mov
int
mov
ja
sbb
and
lds
xor
push
call
sahf
imul
adc
xor
clc
sbb
xchg
sub
xor
and
jecxz
jmp
pusha
fadds
int3
test
cld
sbb
cli
into
dec
loope
test
in
or
out
lcall
popf
fisttpll
adc
pop
adc
xchg
mov
and
hlt
ret
cmp
jno
into
cmp
imul
ja
mov
das
cmpsb
test
pop
lret
das
enter
stos
rclb
lods
jb
xchg
and
testl
xlat
mov
push
in
push
adc
mov
mov
push
xchg
aam
pop
lret
and
mov
xchg
pop
int3
sarl
call
into
shl
jnp
mov
scas
ret
inc
iret
loopne
adc
inc
jl
mov
push
mov
cmpsl
out
xchg
cmp
test
dec
mov
bound
pop
adc
or
mov
mov
mov
rol
mov
sti
jno
push
orb
push
mov
and
mov
cmp
mov
pop
filds
fmuls
fisubrl
scas
popa
xchg
es
and
sub
jns
sbb
test
arpl
dec
jle
dec
add
int3
out
fisttpll
dec
ret
popa
popf
jg
cmp
push
dec
fdivr
rorl
sub
sahf
aas
xor
pusha
mov
adc
xor
pop
mov
sti
clc
mov
inc
sbb
adc
sbb
pop
mov
popf
push
fwait
mov
xor
add
mov
push
jp
scas
hlt
stos
pop
sbb
mov
aas
ss
lods
fcomps
rcrb
test
cmp
cmp
xchg
add
mov
mov
lods
pop
sbb
iret
jmp
xchg
sub
push
xchg
stos
mov
ret
decb
fwait
in
scas
jo
mov
dec
fsubl
stos
lds
insb
out
mov
scas
xchg
add
jl
jne
dec
addr16
xchg
out
mov
push
or
push
inc
push
add
inc
lret
cmp
ss
test
lea
pop
jl
add
jns
ds
les
int3
in
and
test
push
ret
leave
daa
xchg
cli
mov
cltd
test
cmpsb
daa
call
sub
adc
inc
or
pop
pushf
mov
scas
lea
xor
mov
mov
adc
xchg
xchg
rcll
dec
clc
jbe
out
insb
add
inc
bound
rol
xor
mov
cmpsb
mov
scas
test
push
add
sbb
inc
enter
or
cmp
adc
clc
xor
nop
roll
ljmp
push
adc
mov
pop
insb
push
int
and
add
enter
mov
shll
xchg
sbb
stos
mov
rorl
int
xor
les
cmc
fnstcw
xchg
jns
adc
test
mov
mov
lret
sbb
adc
test
cld
js
push
jnp
inc
movsl
adc
cltd
adc
mov
push
xor
mov
icebp
negb
out
lret
dec
and
and
sti
shlb
dec
imul
jmp
or
mov
ja
push
int3
adc
stos
mov
lods
and
jns
cli
fsubr
sbbb
push
jae
leave
out
loop
xorb
sbb
push
imul
outsl
push
adc
daa
jbe
add
and
inc
inc
mulb
dec
bound
mov
xchg
jmp
adc
cmp
mov
dec
push
or
pop
shlb
and
icebp
or
pusha
and
pusha
adc
or
sbb
loope
cs
cmp
std
lcall
adc
sub
idivl
and
cmp
or
nop
out
cmp
pop
aaa
inc
push
xor
xor
inc
iret
fistpl
sbb
insb
xlat
aam
dec
lods
mov
fldenv
xor
inc
shll
mov
gs
mov
sahf
lea
pop
in
xor
pop
js
push
ss
movsb
mov
testb
or
outsb
loope
xchg
jo
or
sub
push
in
push
ljmp
fwait
adcl
add
pushf
and
mov
js
cmp
cmp
mov
push
push
call
shlb
push
enter
cmpsb
dec
addl
fiadds
bound
dec
stc
and
cmp
js
jmp
rol
aad
push
sahf
or
jns
loopne
add
inc
popa
or
dec
xchg
pushl
push
cmp
stos
shrb
hlt
xor
xor
roll
fnstenv
stc
mov
push
mov
rorl
sub
in
test
push
call
inc
or
bound
mov
mov
mov
pushf
pop
cmc
and
pushf
sub
xchg
mov
jmp
lock
push
push
loopne
pop
mov
movsb
fldt
subb
out
outsl
push
xchg
sub
xor
cmpsb
adc
popl
int
daa
in
mov
or
xor
xchg
push
inc
popf
mov
pop
loope
movsl
insb
loope
mov
rcr
and
ss
stos
loop
adc
pusha
stos
test
push
andb
push
lock
mov
mov
mov
shufps
insb
add
cmp
push
inc
aas
inc
mov
aam
ds
cmp
mov
xor
cmc
dec
insb
jl
in
push
mov
jno
test
out
jecxz
or
fmull
mov
add
fmuls
pop
das
add
pop
mov
sti
xor
subl
addr16
mov
cmc
inc
mov
dec
jae
shr
pusha
mov
mov
data16
repnz
scas
inc
add
mov
je
insl
outsb
stos
push
or
lock
fnsave
inc
ljmp
mov
and
sbb
cmp
repz
call
int3
scas
or
and
rclb
inc
fwait
outsl
mov
and
mov
push
xor
inc
xlat
stos
pop
inc
xchg
je
dec
ss
std
add
fcomps
cs
arpl
mov
js
xor
or
jp
flds
cmp
popf
ja
jns
ja
jbe
and
adc
add
xor
dec
lods
call
cmpsb
daa
xchg
adc
pop
cs
popf
int
cmp
mov
addl
mov
gs
pop
inc
inc
fcompl
call
jle
sbb
cmp
ljmp
mov
mov
div
pop
fwait
adc
int3
addl
mov
dec
pop
in
test
add
xor
xchg
sub
dec
out
in
insb
mov
lret
cmpsb
fdivrl
jbe
sbb
mov
push
shrb
cmp
pop
pop
push
jl
test
call
sub
in
pop
sti
repnz
xchg
dec
gs
test
sbb
sub
jg
in
mov
dec
insb
mov
dec
push
pop
adc
lds
in
jnp
xchg
sbb
cmp
mov
lds
or
aad
add
pop
adcl
js
insb
mov
lods
stos
fldcw
movsb
mov
pop
sbb
push
js
sbb
hlt
and
xchg
pop
sub
pusha
cld
test
xlat
cmpsb
ret
xor
insb
in
cmp
cmp
jle
rorl
pop
xchg
imul
add
lds
stc
fidivl
es
fidivs
jnp
or
aad
cwtl
sub
add
push
jecxz
inc
xor
jbe
mov
imul
es
jl
rclb
inc
adc
in
mov
lods
scas
push
es
clc
and
dec
movsb
xchg
mov
sub
cli
loope,pt
mov
add
mulb
aaa
daa
std
xchg
push
push
xchg
and
sub
pop
sahf
pop
sbb
das
jne
dec
sbb
pop
daa
mov
mov
lds
outsl
pop
pop
xor
mov
pop
insl
dec
mov
cli
fisubs
xchg
xchg
sub
inc
test
mov
out
push
insl
mov
or
repz
jecxz
nop
imul
and
sub
jno
xor
xor
sub
bound
xbegin
pushl
nop
pop
movsl
shlb
sub
add
into
shll
push
mov
popa
fisttps
pop
lcall
arpl
mov
in
inc
xchg
out
and
cmp
adc
sti
bound
out
repnz
sub
ljmp
sub
divl
js
outsb
cltd
inc
jne
lds
leave
pop
rclb
pop
adc
jmp
popf
sub
add
insb
xor
push
movsb
es
cli
jb
xlat
dec
cld
push
and
jns
mov
and
insl
sahf
std
mov
in
push
pop
or
sbb
jne
mov
push
pop
xor
movsl
mov
mov
mov
pusha
mov
mov
or
stc
es
test
dec
jo
jns
ljmp
inc
pop
inc
mov
fcoms
xor
adc
lds
cltd
jns
arpl
fnsetpm(287
sbb
out
and
lret
or
inc
test
jg
loop
cltd
dec
push
mov
xor
repnz
mov
adc
and
xchg
das
pushf
cs
movsl
xchg
adc
and
mov
out
adc
xchg
cmp
lcall
hlt
cmp
mov
and
mov
push
cwtl
add
adc
insl
push
pop
decb
sbb
mov
add
xchg
push
ffree
in
leave
mov
pop
jbe
sbb
push
mov
subl
sbb
imul
cmpsb
jge
out
pop
ss
stos
imul
mov
popa
fwait
bound
fisubrl
jp
inc
out
push
push
ja
xchg
lea
clc
rcll
enter
lock
test
testl
inc
sbb
add
fiadds
ret
divl
and
ja
sbb
mov
cwtl
das
adc
jbe
mov
ret
bts
xor
xlat
or
filds
jns
push
push
push
addb
mov
xor
mov
in
in
sub
fadd
ja
push
iret
jne
mov
lock
xor
sub
xor
sub
gs
gs
mov
stos
push
incl
sti
mov
loope
fidivrs
fcom
ja
add
in
mov
in
outsl
dec
sahf
pop
mov
dec
mov
dec
xor
in
int
popf
xchg
and
and
notb
fstps
scas
lahf
jmp
sbb
or
aas
movsb
adc
pop
je
add
push
gs
sbb
adc
insl
mov
lods
push
push
sbbb
lret
xchg
lock
and
cmp
or
xor
adcb
lds
lret
push
and
aas
push
jle
and
lds
orb
imulb
xchg
fstps
sbb
push
pop
push
fistpll
in
test
xlat
dec
xor
lret
sar
fwait
iret
add
stos
addr16
das
enter
movsl
push
leave
cld
xor
imul
mov
sub
xlat
mov
dec
adc
inc
jmp
xchg
push
loope
mov
sub
xlat
sub
inc
aaa
dec
push
add
dec
add
std
pusha
xlat
xchg
mov
ljmp
imul
mov
xchg
pop
pop
xor
xchg
test
ret
adc
pop
mov
cmp
stos
pop
pop
xor
and
inc
ja
outsl
in
sahf
lret
cs
mov
pmaxub
mov
cmp
gs
mov
hlt
dec
loopne
dec
adc
cmc
sbb
das
mov
clc
mov
fmull
dec
gs
mov
jns
rol
repz
jl
mov
clc
int3
repnz
test
in
daa
mov
mov
add
jns
pop
push
push
cs
insb
add
cmovs
dec
ret
sub
add
bound
notl
cmp
xor
pop
jmp
xlat
inc
lret
mov
ret
pusha
cmp
ficoms
mov
xchg
and
lcall
inc
fcoms
jbe
int3
sub
popa
lret
scas
sub
lock
popa
dec
lret
bound
cwtl
aad
dec
hlt
stc
fistpl
cld
call
pop
lea
es
jo
dec
jmp
aam
mov
push
adcl
popa
inc
gs
sub
fcompl
loop
jnp
mov
ds
xchg
inc
shl
and
cltd
shrl
rorl
dec
jbe
sub
sbb
test
jle
dec
adc
andl
sarl
sbb
dec
ljmp
pop
sbb
jecxz
jle
rcl
jmp
mov
aas
pop
sbb
mov
mov
loop
aaa
push
sbb
sti
push
daa
push
fwait
lods
sub
cs
mov
mov
lahf
inc
insb
pusha
xor
xlat
lahf
rcrl
fidivl
mov
xor
setg
sub
lret
ret
inc
add
jmp
push
cmp
pop
mov
daa
fwait
push
cltd
arpl
push
lret
fistpl
lods
jecxz
add
xor
mov
dec
xchg
mov
mov
xor
push
lret
mov
repz
sub
mov
mov
and
pop
adc
sbb
fiadds
mov
push
jl
shll
scas
xorl
nop
sbb
pop
pop
mov
and
aaa
add
ja
inc
add
fdivrs
xchg
repz
adc
mov
sarb
mov
xor
jno
and
inc
push
cmp
cmp
mov
jne
fsts
or
adc
mov
fcomip
push
js
aad
or
or
sti
hlt
xchg
add
jmp
inc
je
call
inc
add
xor
in
movsl
xor
mov
and
pop
comiss
jmp
bound
or
push
outsb
push
sub
or
sub
xchg
lret
movl
xchg
repnz
push
cmp
cmpsl
adc
int3
add
push
insb
stc
andl
lds
test
outsl
ja
subl
iret
mov
mov
imul
or
call
xlat
jmp
cmpsb
cld
in
out
xchg
in
pop
movsl
jnp
pop
mov
int
dec
dec
adc
or
and
xchg
outsl
sub
and
repnz
adc
or
inc
inc
jle
pop
mov
xor
push
mov
or
outsl
in
xchg
adcb
hlt
pushl
dec
popa
add
push
push
fdivs
add
and
clc
or
cli
add
xchg
outsl
jle
add
ret
xor
xor
inc
cli
ret
cmp
jp
das
or
or
jbe
in
ljmp
xchg
mov
sub
jmp
leave
add
int3
in
jl
mov
cld
rol
adc
stos
sub
adc
and
ljmp
emms
push
int
inc
enter
fisttpl
dec
dec
adc
into
movsl
inc
sub
cmp
shlb
imul
mov
sub
arpl
ljmp
enter
pop
push
push
ss
push
insl
cmp
cli
int
adc
xor
add
xchg
gs
outsb
cli
call
mov
jg
pop
pushl
cmp
or
dec
sbb
cmc
pop
pop
pop
jge
or
push
fs
mov
in
xchg
clc
xchg
in
icebp
flds
adc
aaa
add
out
lds
jge
gs
aaa
js
cmp
popa
int
fistpll
xchg
in
add
mov
or
xor
movsb
lock
adc
rorb
sti
mov
inc
es
pop
lods
fnsave
fdivrl
push
xchg
or
or
cmc
sbb
js
mov
in
adc
mov
jmp
daa
sub
push
aas
xchg
xchg
jne
sub
push
test
inc
adc
push
imul
lea
arpl
push
ret
ret
jae
xor
orl
jmp
movsl
icebp
dec
test
pop
addr16
lea
jae
out
shll
adc
sub
mov
add
ja
cmpsb
lods
cmova
aad
dec
dec
js
and
cli
cmpsl
int
xor
mov
out
movsl
mov
addl
xchg
faddl
pop
aam
int3
adc
test
loope
popa
xor
pop
mov
repz
and
aam
inc
add
push
rcrl
push
ss
sub
pop
pop
or
test
add
stc
pop
xchg
shr
push
dec
dec
movsl
out
sbb
mov
sbb
icebp
fildll
dec
bound
or
stos
push
push
iret
xchg
dec
fs
and
xorb
mov
mov
inc
cmc
sub
and
mov
xor
fs
jle
aas
in
adc
mov
clc
mov
bnd
xor
lds
dec
fnstcw
adc
and
dec
sarl
push
inc
cli
out
les
jp
and
xor
call
inc
scas
pop
mov
mov
pusha
int3
mov
pop
adc
repnz
cld
pushf
xchg
mov
sub
sbb
inc
sahf
xchg
jns
dec
addl
sbb
cld
lea
lahf
cmp
jne
dec
dec
leave
ror
gs
or
repz
ja
repz
add
push
shll
imulb
push
pop
into
adc
mov
xor
enter
adcl
insb
adc
cmp
inc
loope
jae
sbb
lahf
and
shll
fidivl
mov
imul
xchg
sub
fs
dec
lds
sub
sbb
mov
xorb
jge
xchg
pop
inc
add
sarb
out
sbb
hlt
andl
cmpsb
aad
dec
xchg
stos
inc
rolb
pop
pop
movsb
pop
lcall
and
push
jnp
pop
in
xor
inc
mov
sub
icebp
xor
fildl
xchg
addr16
mov
cs
sub
ss
mov
mov
sbb
adc
xchg
xlat
add
rcl
or
jae
and
sahf
mov
jg
pop
loop
mov
mov
mov
sub
mov
arpl
in
xor
xchg
sbb
cltd
das
sub
jge
imul
lock
mov
pop
cmp
or
xor
mov
daa
sbb
stc
int3
cltd
jg
mov
outsb
hlt
stc
pusha
and
xor
dec
insl
mov
lret
xor
int3
scas
jp
xchg
mov
jl
push
push
inc
dec
mov
jl
addb
lahf
sti
test
iret
fbstp
pop
pop
push
rol
push
xor
sti
in
mov
or
dec
scas
ja
btrl
xchg
hlt
and
mov
jecxz
mov
inc
dec
ljmp
mov
stos
icebp
push
cmp
sbb
mov
xchg
mov
add
and
jns
ljmp
or
or
mov
shlb
pop
shr
adc
mov
int3
or
push
cmpsl
cltd
and
dec
jb
jle
push
cmp
mov
add
xor
fsubp
ss
xchg
jne
mov
xchg
out
mov
push
pop
pusha
rcr
xchg
ja
push
sbb
lock
push
pop
sub
jp
sbb
cltd
stc
inc
hlt
pop
mov
push
ret
sahf
jmp
icebp
or
stos
popa
dec
push
mov
cmp
aam
adc
clc
daa
pusha
xor
and
sti
or
mov
or
mov
leave
vmovq
into
jmp
stos
js
inc
test
cmp
push
xchg
movsl
inc
sub
cmpsb
add
inc
nop
mov
push
fwait
and
out
iret
push
lods
in
inc
add
repz
pop
mov
inc
add
out
movsl
enter
pop
or
fcomp
dec
cmp
stos
aaa
stc
arpl
or
mov
xchg
popa
inc
jne
enter
loopne
jg
mov
les
push
cmpsb
cmc
scas
jle
or
aas
fmull
mov
mov
adc
and
dec
int3
xor
dec
add
or
inc
adc
shll
dec
mov
andl
push
mov
jne
sbb
js
jne
cmp
jge
sub
push
sahf
fucomp
pop
hlt
sub
fdivs
cmp
jnp
outsb
stc
popf
lock
dec
inc
lret
mov
shr
adc
xchg
fbstp
xchg
mov
inc
add
push
mov
xchg
aad
xor
dec
iret
rcll
std
stc
es
mov
lods
or
ret
add
mov
cli
mov
lret
inc
dec
or
ss
mov
sbb
gs
dec
sub
jl
add
cmp
adc
adc
test
in
dec
mov
xor
pop
testb
pop
push
inc
mov
popa
pushf
push
stos
bound
push
dec
adc
in
rorl
cld
sub
cld
test
push
in
stos
orl
out
add
adc
push
popf
mov
loopne
inc
subl
add
xchg
repz
fwait
sub
pop
jg
dec
pop
fmull
cltd
pop
movsb
mov
mov
push
and
mov
mov
jae
fsubrs
in
adc
repnz
cmp
stos
xchg
leave
loope
jo
sub
jmp
lret
testl
lret
mov
sub
jecxz
enter
aad
popf
pushf
shll
int
inc
fimuls
ja
add
scas
es
test
mov
loop
adc
and
nop
sub
out
pusha
in
or
loop
or
fcomi
aad
ficompl
stos
jmp
add
lret
adc
mov
lock
ja
ret
cmp
jmp
xlat
movsl
nop
shlb
mov
stos
js
loope
or
or
cmp
add
or
fldenv
jle
lock
aad
dec
sub
js
inc
cld
shll
push
pusha
or
push
incl
sbbl
inc
add
mov
jge
and
movsb
in
mov
mov
jecxz
or
xchg
pushf
fsubr
push
and
subl
stc
sbb
sbb
mov
int3
push
cwtl
cs
xchg
xchg
xchg
addl
inc
cmpsb
movsl
icebp
repnz
pushf
sub
hlt
fxam
jge
mov
sbb
rorb
jnp
ja
lcall
popf
sub
scas
mov
imul
mov
xchg
lcall
inc
sub
ljmp
push
stos
jl
push
pop
clc
je
jns
mov
fcoms
das
lock
ja
mov
sub
mov
hlt
jmp
pop
jge
inc
xchg
inc
cltd
in
or
scas
in
pushf
insb
inc
and
idivb
jnp
sbb
fsts
movsl
shll
mov
out
push
push
fwait
sub
mov
aaa
pushf
or
cld
push
inc
dec
push
fs
ret
popf
add
fnstcw
inc
fcompl
loopne
rorl
push
lret
ret
hlt
push
or
fidivrl
add
arpl
fnsave
enter
and
or
sbb
mov
repz
sbb
sbb
in
adc
adc
mov
jge
fsub
mov
hlt
xchg
cmp
notl
mov
and
push
or
pop
adc
fisubrl
shlb
hlt
aad
pusha
mov
repz
pop
jg
xor
loope
push
push
xor
push
aaa
cmp
cmp
mov
rcll
sbb
ret
mov
lods
andb
mov
call
dec
mov
pop
sbb
lret
rcrl
aaa
jp
std
in
push
mov
xchg
xchg
inc
lahf
leave
shl
imul
xchg
cmp
cmp
fldt
xor
data16
into
jb
icebp
insl
aaa
xchg
jo
dec
push
inc
cmp
sarl
outsb
add
cmpsb
lret
add
inc
daa
or
mov
sbb
loop
xor
fcoml
lods
lea
jne
cmp
or
je
int3
push
push
jle
xchg
xor
push
jo
add
lods
mov
nop
inc
adc
imul
xor
and
xorl
lds
mov
inc
roll
xchg
rclb
cmp
pop
cld
mov
das
aad
inc
push
or
inc
push
dec
cmp
mov
loopne
mov
daa
mov
lea
bound
and
pop
aam
out
xchg
cmp
aaa
sub
rep
imul
mov
lcall
out
andl
shll
fistpl
lds
lret
dec
jp
dec
mov
xchg
mov
stos
test
insl
cwtl
scas
sbb
pop
sub
and
es
inc
push
adc
push
sub
sbb
rclb
jl
icebp
seto
test
int
sub
int3
test
lock
and
outsb
fcmovne
xchg
clc
loopne
push
mov
pusha
test
cmpsb
into
xchg
cmp
lods
sub
xchg
push
fists
ror
pop
lret
xor
mov
pop
ret
sub
push
cltd
in
bound
dec
mov
sbb
pop
add
mov
imul
adc
dec
icebp
mov
xchg
mov
cmc
inc
or
or
sti
dec
shll
mov
jno
mov
test
add
pusha
xchg
movsl
mov
mov
xchg
jecxz
out
xchg
push
xchg
jge
mov
pop
ss
into
cmp
xor
clc
jmp
cmp
gs
enter
and
inc
lgs
fisubrl
dec
lds
sarb
inc
pop
call
pop
dec
mov
pop
ret
loope
stos
dec
movsl
lods
aam
mov
into
inc
or
add
scas
pusha
int
adc
inc
xchg
mov
dec
cmp
xchg
push
ss
push
popf
lock
adc
pop
loope
cmp
pop
cmp
movsb
and
loop
mov
mov
push
notl
push
adc
icebp
sbb
jp
add
and
jae
ja
jmp
push
xchg
insb
mov
nop
sub
push
insb
mov
xor
xor
mov
inc
mov
push
lcall
add
aaa
lods
mov
and
pop
mov
rclb
std
addr16
hlt
xchg
jne
cmpsb
pop
fsubrs
mov
and
pop
sbb
xor
pusha
mov
fmull
out
mov
and
je
jns
mov
mov
mov
add
add
dec
lods
inc
ds
aam
pushf
dec
or
cmpsb
cli
cmpsl
mov
sbb
add
loopne
bound
aam
xor
lret
insl
cmc
loopne
outsl
daa
mov
cmp
sbb
stc
mov
test
jae
paddsw
dec
inc
mov
stos
ja
xor
stc
sbb
js
insl
and
jbe
test
loop
frstor
je
dec
aaa
cmp
push
sarl
dec
pushf
inc
shll
or
sbb
cmp
sti
pop
or
dec
cmp
pusha
mov
lock
fistps
lcall
push
aas
loopne
outsb
arpl
mov
pop
movsb
outsb
adc
cld
cmp
mov
dec
jae
movl
mov
scas
sbb
sbb
dec
dec
jnp
mov
xchg
xor
cmp
inc
or
leave
scas
push
add
sub
sub
shl
fsts
jge
test
test
sub
movsl
jns
cmp
jl
push
mov
and
adc
sub
xchg
sbbl
mov
scas
leave
es
nop
stos
repz
and
xchg
pop
mov
jbe
cld
adc
xor
stos
out
sarb
imul
sub
mov
out
xchg
or
or
adcb
aad
cmp
sub
cmp
int
adc
or
arpl
jnp
mov
test
add
fnstcw
xchg
or
mov
sub
or
iret
jbe
pop
das
sub
imul
dec
sbb
outsb
aaa
adc
ret
andb
push
hlt
adc
aam
aas
mov
fsubl
in
jne
popa
jp
ss
fcmovu
sarb
xchg
bound
call
andb
inc
push
sti
push
jmp
mov
push
or
adc
imul
inc
mov
aam
xchg
mov
rorb
xor
push
sahf
pop
mov
jecxz
data16
cltd
fbld
les
adc
subl
jge
in
jge
fcompl
aaa
mov
jo
adc
ja
mov
subb
inc
mov
mov
pop
cmp
ja
daa
aas
stos
shlb
js
dec
cmpsb
repnz
pop
mov
sub
xlat
das
inc
movsb
test
mul
clc
mov
ljmp
jns
sub
repz
std
into
pop
mov
mov
xchg
lods
int
mov
sub
outsb
lock
stc
and
inc
add
xchg
fwait
cmp
sub
subl
or
mov
jg
mov
bound
push
lret
xor
cmp
ds
cwtl
rclb
enter
adc
sbb
sub
in
mov
mov
mov
int
mov
imul
sahf
push
mov
dec
lahf
rorl
outsb
inc
out
nop
and
adc
and
push
psrlq
xchg
mov
mov
xchg
sbb
adc
dec
xchg
push
lea
adc
cmp
dec
jg
sub
dec
mov
xorb
stos
mov
add
add
lock
popf
mov
push
lret
cwtl
xchg
jl
mov
sub
cmp
fcoms
pusha
shr
outsb
push
aas
cwtl
jns
and
xor
fwait
ret
inc
jno
scas
sub
outsb
cli
setge
add
sbb
mov
mov
mov
mov
jne
loopne
mov
and
lret
imul
xchg
ja
nop
out
fidivl
enter
jae
incl
fildl
ud0
jbe
inc
stc
popa
mov
mov
lea
popl
gs
and
aad
movsl
jg
sbb
add
push
mov
sub
test
repnz
aas
xor
shrl
inc
add
lret
out
mov
push
sbb
or
lock
jae
xor
insb
je
jmp
xor
test
jecxz
pop
mov
mov
mov
orb
mov
lahf
pop
jno
push
hlt
shrb
dec
ss
mov
loopne
movsb
inc
mov
cmpb
mov
bound
sarb
fistpll
sub
mov
leave
stos
imul
ljmp
adc
rorl
mov
jns
popf
cmc
jle
sahf
mov
outsb
cld
in
jbe
lahf
cmpb
mov
add
mov
xchg
cltd
js
ljmp
lahf
fincstp
icebp
lods
jae
sub
data16
mov
xchg
insl
adc
adc
inc
ds
xchg
xor
sti
and
testb
cmp
jae
das
mov
xor
and
push
and
sub
lds
mov
xchg
inc
jne
rcll
orb
loop
je
pop
in
data16
add
pop
aaa
mov
stos
jecxz
or
in
xchg
mov
inc
xchg
mov
add
scas
lcall
pop
js
dec
test
outsl
ds
in
enter
push
xchg
or
sub
cmpsb
push
and
iret
les
popa
leave
hlt
rclb
outsl
xor
js
arpl
iret
adc
inc
fildll
enter
xlat
daa
fwait
nop
xlat
mov
mov
mov
adc
in
push
lret
pop
mov
les
adc
out
mov
push
mov
mov
ja
pop
xorb
mov
fidivs
aas
stos
sahf
mov
shlb
pop
out
out
sub
cld
jnp
jg
mov
int
divl
mov
jnp
or
mov
push
pop
int
decl
cwtl
inc
sub
outsl
mov
fidivrl
push
outsl
rclb
sub
cmp
ljmp
pop
sub
push
ds
cmp
scas
inc
fdivr
sub
fildl
stos
test
jg
int3
or
and
cmc
je
arpl
cmp
pop
and
pusha
mov
jl
push
insl
lea
aaa
and
test
jne
or
cmp
lcall
xor
mov
pop
adc
or
mov
jns
cmc
sbb
push
nop
xchg
out
outsb
adc
stos
sub
mov
pop
int
dec
outsb
fisttpl
pop
stos
and
mov
pop
rcrl
jb
popa
push
xor
rorl
ja
lds
mov
and
jecxz
aas
pop
pop
test
and
int3
mov
adc
andb
bnd
mov
stos
mov
sub
dec
xor
xor
jbe
mov
popa
jo
shl
xlat
dec
mov
aam
movsl
pop
xor
cmpsb
inc
loop
decb
les
ds
adc
add
jge
fstl
cmp
cmp
sbb
mov
xchg
sbb
andb
call
es
lahf
insl
lock
pop
das
push
push
pop
movsl
pop
mov
inc
out
imul
pop
aam
push
std
mov
test
cli
cmp
call
pop
sti
rorb
fimuls
jo
daa
cltd
pop
repz
loopne
cltd
xchg
rorb
and
outsl
jg
add
jne
cmp
fidivrs
int3
out
les
push
xorb
cmp
mov
cmpsb
shlb
cmp
mov
mov
jb
ljmp
xlat
aad
loop
fstl
push
lahf
or
mov
cmp
fstpt
push
daa
or
in
and
inc
push
mov
js
shl
xor
cmpb
fistpl
inc
jae
ljmp
mov
add
cmp
mov
ljmp
add
in
add
mov
mov
fdivrl
xchg
sub
mov
cltd
lds
add
js
xlat
outsb
adc
xor
pop
pushf
push
xchg
loopne
mov
out
jl
fwait
mov
in
mov
test
cli
xlat
leave
repz
cmp
mov
pop
nop
dec
adc
jmp
fnstenv
xorl
aad
lods
and
cwtl
fdiv
inc
mov
jbe
jge
fdivrs
mov
int
ror
sub
xchg
or
jge
insl
std
xchg
mov
adc
sbb
jecxz
in
jge
or
push
mov
mov
mov
wbinvd
rol
test
adc
and
into
mov
push
lret
orl
cltd
pop
lret
xlat
cld
cmp
andl
arpl
mov
push
je
lods
dec
fcomps
hlt
push
add
lret
in
jbe
das
mov
lcall
jne
push
daa
mov
addr16
icebp
or
test
sbb
es
jge
and
xchg
stc
pop
push
xor
mov
or
inc
push
pop
gs
scas
cs
mov
jno
push
mov
repnz
push
scas
mov
dec
jge
jbe
cltd
fwait
bound
jl
aam
sahf
adc
mov
cs
ss
jge
xchg
ja
imul
cmp
ljmp
iret
jnp
xor
test
push
dec
test
outsl
popl
push
leave
xchg
int
lret
mov
add
mov
bound
or
mov
ja
repnz
xor
hlt
pusha
lret
xor
mov
dec
push
mov
sub
ja
or
popf
mov
xchg
mov
xchg
adc
cld
jae
xchg
pop
sti
pop
bound
test
je
pop
pop
mov
jae
inc
pop
push
mov
mov
mov
jmp
or
adc
ss
jge
addr16
or
ds
pop
cwtl
lret
scas
dec
pusha
sub
mov
and
push
inc
xchg
mov
sub
shll
xlat
jge
mov
push
aam
sub
pop
andl
inc
add
cmp
arpl
icebp
jecxz
out
mov
sbb
cmp
inc
arpl
xchg
mov
out
inc
or
ljmp
cld
cmp
and
dec
test
jmp
jmp
jmp
cmp
mov
je
in
pop
das
shll
arpl
nop
ljmp
xlat
inc
sbb
hlt
sbb
jl
daa
dec
or
lods
and
sbbl
or
pop
add
xchg
fcompl
xchg
sbb
jns
push
jno
mov
syscall
mov
mov
push
out
movsl
lret
and
jb
lock
fistps
js
cmp
ds
dec
inc
dec
xorb
sub
inc
outsl
dec
pop
inc
enter
adc
jge
push
xchg
push
clc
xor
push
neg
lds
aaa
push
xchg
cld
ret
sbb
mov
dec
rcr
repz
jbe
cld
leave
and
stos
or
mov
inc
lods
mov
adc
jg
mov
cmp
push
es
pushf
jne
or
ret
cmp
pop
lret
sti
dec
xor
or
sarb
scas
or
iret
cmp
lea
addr16
sbb
fcmove
aam
aas
jl
xor
stos
int3
pushl
adc
addr16
mov
test
cmp
mov
sti
push
xchg
ficoml
vmovlps
flds
xchg
mov
ds
xchg
shlb
jmp
cmp
and
sub
divb
popa
mov
int3
dec
sub
pop
mov
pop
sbb
jns
sbb
scas
subb
cs
xchg
xchg
push
jmp
movl
mov
mov
repz
aaa
xchg
mov
or
loope
mov
scas
je
daa
xor
in
popf
jae
icebp
sti
pop
cld
xlat
fnsave
into
aas
xor
push
pushf
stc
or
repnz
in
sub
xchg
lods
mov
cmp
fs
and
mov
imul
ret
pop
adc
lds
cmp
aam
add
sbb
xor
mov
inc
jbe
cs
mov
pop
sub
inc
inc
xchg
and
mov
sub
aaa
fisubrs
mov
insb
das
or
or
test
test
adc
repz
arpl
dec
hlt
cwtl
enter
les
ret
xchg
pop
shll
mov
and
sbb
in
incb
push
les
ficompl
jge
mov
cmpsl
pop
mov
adc
daa
je
repz
sbb
movd
daa
mov
jl
mov
int3
xor
stc
jns
xchg
sahf
cmp
les
xchg
testl
inc
xchg
push
lods
xchg
and
sub
adc
cwtl
in
cmp
jg
jne
sub
jo
jb
mov
enter
xchg
xchg
add
out
adc
js
js
aas
mov
scas
into
mov
adc
int3
out
and
jns
inc
pop
cmc
or
in
xor
loopne
aad
stc
jge
xchg
clc
mov
bound
or
sub
rolb
inc
aad
or
xchg
sbb
js
inc
cli
std
addr16
mov
mov
jne
pop
pop
sub
or
loopne
rclb
lods
adc
and
jae
xor
xor
sbb
or
bound
push
mov
rclb
rcll
adc
aas
imul
stos
fxch
insl
xlat
pushw
and
or
arpl
ss
outsl
xor
jbe
sbbl
sti
cmp
jo
cwtl
pop
in
xchg
in
lods
mov
test
xor
mov
dec
cmc
popf
fstps
sbbl
pop
addr16
push
inc
jnp
jle
adc
adc
ds
sbb
loopne
mov
sbb
push
fsts
sti
cltd
mov
jmp
loop
jns
lock
in
or
sbb
xchg
jecxz
sbb
or
lock
sbb
inc
shl
sbb
dec
test
mov
mov
cmpsl
and
outsb
dec
lds
xchg
mov
and
lret
pushf
xchg
jae
lcall
test
mov
pop
sub
fmull
dec
lds
out
xor
pop
mov
iret
cli
lahf
cs
lods
nopl
adc
jmp
mov
rorl
xchg
fsubl
mov
in
push
pop
xchg
insl
aaa
ret
int
and
jo
sub
dec
inc
fdivrl
imul
cltd
adc
mov
pop
jae
fwait
clflush
xor
add
push
add
inc
adc
ss
pop
cwtl
aam
cmp
pop
imul
push
dec
pop
scas
ljmp
enter
and
andl
fisttps
sbb
mov
jbe
pop
scas
mov
mov
push
and
ja
sbb
push
lret
xor
imulb
outsb
jmp
add
daa
negl
push
dec
addr16
push
lret
push
cmp
mov
xor
rcl
in
in
popa
xchg
mov
icebp
pop
mov
and
gs
push
shl
mov
push
dec
fs
dec
roll
push
inc
rol
sbb
and
orl
fmull
pcmpeqb
adc
or
sbb
dec
int3
mov
scas
icebp
aas
xlat
jns
nop
push
insb
divb
sbb
pop
xchg
cmp
dec
nop
xchg
cmpsl
sub
addr16
push
cltd
jo
inc
sbb
mov
sub
int
mov
jnp
fisubrl
adc
clc
test
mov
sbb
jmp
cmp
lods
xchg
jecxz
push
scas
push
fdivl
xlat
jecxz
inc
sbbl
sbb
dec
mov
xlat
pop
push
arpl
jbe
inc
push
xchg
arpl
movsl
mov
enter
inc
sarb
ret
mov
mov
xor
mulb
cltd
sub
iret
imul
in
lret
mov
pushl
pusha
sar
push
into
ret
addr16
jge
scas
mov
pop
push
and
xchg
inc
and
xor
xor
fs
rolb
js
inc
enter
sbb
test
adc
lahf
lds
pop
pop
cmpsl
xor
das
fistpl
fcomp
mov
in
hlt
dec
sub
shll
insb
shll
clc
jge
and
mov
std
dec
mov
xchg
or
mov
jl
jbe
out
test
push
lods
jo
mov
dec
push
js
add
sbb
and
xor
mov
scas
mov
mov
gs
ror
push
mov
xchg
in
xor
loop
inc
jle
sub
scas
call
jb
stc
fwait
and
lret
push
mov
ret
imul
jl,pt
gs
inc
add
jge
int
mov
or
clc
sbb
inc
imul
or
pop
xor
dec
pop
in
mov
or
sbb
scas
xchg
nop
adc
cmp
xchg
out
mov
je
jmp
scas
cmp
scas
outsl
sbb
rorb
in
ret
or
inc
push
mov
stos
sbb
inc
pop
mov
test
arpl
insl
jns
mov
and
push
adc
fmulp
pop
push
push
jl
popf
mov
dec
divl
xchg
mov
sub
stos
xor
jle
mov
test
cmpsl
das
adc
xchg
shrb
xchg
pop
in
popf
jo
int3
adc
scas
jnp
or
outsl
movsl
sbb
jl
loopne
or
cmc
inc
pop
lret
pop
xor
stos
jb
outsb
pushf
loopne
ret
ljmp
xchg
lahf
sahf
scas
sbb
inc
and
cmp
hlt
sub
fdivrp
into
push
orl
mov
lahf
cmc
leave
ljmp
scas
cwtl
out
sbb
es
and
adc
sub
inc
stc
mov
jle
or
lods
fisttpll
xlat
test
xor
mov
push
aad
fidivl
jle
movsb
sbb
fmuls
adc
leave
aam
add
idivl
pusha
adc
rcrl
push
mov
adc
jno
jns
lret
add
movsb
xor
cmc
dec
xchg
cli
bound
jne
xchg
sbb
shlb
cmp
imul
lock
mov
cwtl
shrl
mov
mov
xor
pusha
jo
lods
popf
es
test
add
gs
cmpsl
hlt
aad
inc
testl
mov
das
mov
mov
lcall
pushf
sbb
mov
sbb
or
js
mov
sarl
test
fwait
pop
scas
adc
lret
loope
jno
int
lods
sbb
mov
loopne
jnp
bound
jne
ss
loop
loopne
push
fucomip
into
jg
add
add
ljmp
pushf
mov
adc
xchg
push
rcrb
xchg
fcmovu
lret
xor
int3
mov
pop
sbbl
int
mov
cli
adc
pusha
into
cmpsb
fdivrl
popa
jle
and
into
mov
movsl
pop
or
in
dec
ds
mov
jp
push
movsl
gs
loope
adc
mov
sbb
mov
faddp
and
fs
push
fimuls
daa
sti
out
data16
pop
addb
ljmp
es
lret
das
icebp
xchg
aas
ficoms
xor
cmp
sti
hlt
sbb
mov
mov
pop
mov
xchg
shll
pushf
call
fs
test
jnp
pop
mov
loopne
fiaddl
jnp
cmp
lock
xor
pop
mov
sub
negb
repnz
in
pop
adc
pop
dec
jge
inc
adc
popf
xor
rclb
push
stos
pop
cs
sub
jl
sbb
dec
imul
add
pop
lret
adc
push
icebp
push
sti
fistl
out
loope
mov
std
int
nop
subb
mov
addr16
gs
dec
clc
adc
mov
sbb
push
push
inc
mov
test
pop
cmp
mov
pop
pop
cmc
popf
je
sub
ficoml
push
popa
subb
adc
rcl
out
mov
imul
inc
mov
inc
sub
icebp
sbbl
repz
adc
dec
jne
jg
jecxz
xchg
stos
dec
in
cmp
and
push
mov
sahf
popf
outsl
jno
add
je
mov
push
mov
adc
movsb
ret
pop
scas
adc
lods
push
lds
mov
xchg
int
or
mov
es
pop
scas
dec
add
sub
mov
js
or
cli
xor
fsts
jne
outsb
mov
test
movsl
dec
dec
fcompl
inc
cmp
push
push
jg
into
xor
dec
mov
js
mov
int
sbb
or
cmp
fsubrs
lret
mov
mov
rclw
and
leave
ja
mov
mov
pop
pop
inc
xchg
dec
roll
and
xchg
lods
pop
inc
jge
jmp
das
sbb
push
cld
jnp
je
mov
mov
roll
lds
stos
popf
mov
push
mov
daa
cmp
enter
clc
ret
in
jl
inc
dec
je
lds
int
mov
fcoml
xor
lock
add
or
les
push
sahf
xchg
cmpsl
adc
add
in
sub
mov
mov
lret
aad
leave
iret
mov
dec
int3
cmp
scas
mov
jmp
mov
cvtps2pi
mov
xor
mov
mov
inc
bound
es
lcall
jne
push
mov
pop
mov
lret
adc
adc
xchg
insb
xlat
aad
rolb
push
inc
enter
int
mov
jno
pop
xor
test
sub
xchg
inc
xchg
pop
xchg
and
arpl
outsb
cmpsl
sti
test
leave
shll
nop
dec
cmp
mov
lcall
ret
or
mov
mov
jbe
inc
inc
lcall
aas
jnp
nop
cmp
push
testb
inc
fsubr
mov
bound
es
in
xchg
in
sub
lcall
sbb
aad
fmuls
out
xchg
mov
adc
or
ret
sahf
push
or
add
jb
cmp
imull
jb
cltd
pop
lcall
sbbb
mov
xchg
fnsave
in
cmp
shll
mov
hlt
add
insb
test
sbb
xchg
sbb
xchg
push
data16
dec
fistl
lea
add
aas
ja
test
pop
aaa
or
jo
ja
lods
mov
loopne
inc
push
inc
shlb
jbe
fwait
pop
cmpsb
mov
fstpt
bound
js
fcomps
mov
mov
out
mov
jp
cmpsb
inc
xor
and
arpl
inc
jnp
inc
mov
pop
sti
mov
jle
fwait
sti
sub
loope
pop
jp
cmp
jmp
mov
inc
fmull
and
fisubs
jno
dec
jmp
stc
xor
loope
xor
cmp
leave
mov
leave
dec
mulb
xlat
sbb
and
jp
cmp
mov
jge
int3
add
jg
jo
and
push
fs
ja
rcrl
sbb
mov
imull
mov
ss
add
sbb
mov
jae
inc
lahf
ret
imul
sbb
push
adc
rclb
inc
lods
jbe
dec
into
mov
sahf
ss
mov
xor
pusha
jmp
mov
cmpsb
mov
mov
inc
test
or
xchg
shl
dec
inc
adc
jmp
jl
and
xchg
das
inc
loope
stc
mov
loopne
sbb
push
or
fimull
js
or
add
push
push
lock
sub
mov
jle
stos
pusha
andb
xchg
mov
add
out
jmp
outsb
push
fwait
push
lds
jle
cmp
stos
out
lret
hlt
and
jmp
lret
and
out
filds
cmp
and
int3
xchg
divb
cwtl
push
xor
add
shl
rolb
sbb
jl
ljmp
xchg
call
out
fistpll
and
inc
inc
push
insb
div
fld
sbb
jle
sti
lcall
rol
daa
sub
mov
and
mov
lahf
xlat
and
jmp
andb
dec
and
addr16
add
jmp
adc
popf
mov
mov
jo
loopne
mov
or
add
add
dec
in
push
fimull
out
cmp
pusha
or
icebp
sub
aam
jge
iret
shl
mov
adc
sbb
lods
sarl
mov
mov
inc
loope
mov
sbb
jae
stc
pop
inc
fs
xchg
aad
mov
or
cwtl
add
mov
stos
fadd
pop
fistpll
adc
push
jg
adc
xchg
stos
popa
cmp
lcall
sbb
stos
jns
push
lds
dec
pop
fdivl
pusha
stc
imul
push
movsl
inc
test
jmp
or
and
pop
aam
adcl
sub
inc
test
jb
fadds
and
roll
in
xchg
in
push
out
into
sub
mov
inc
setle
jo
stc
ss
mov
lods
pusha
ret
mov
mov
sub
jl
inc
jg
inc
out
push
scas
adc
mov
jge
jae
cmpsb
sbb
mov
sub
sub
jae
loope
cmp
jno
sahf
loop
ret
inc
inc
in
mov
std
pop
mov
es
sbb
push
sub
sbb
fsubs
fstpl
jno
sbb
push
scas
outsl
test
add
sbb
cld
loope
cmp
mul
sub
push
addr16
std
mov
inc
cld
and
repz
into
aaa
adc
pop
and
push
adc
outsl
imull
stos
dec
xlat
stc
ljmp
fadds
sbb
push
scas
sub
insl
cmp
cld
jne
dec
popa
pop
dec
and
aas
pop
int
dec
sub
fldl
push
mov
std
or
loope
cmpsl
arpl
lret
cmpsl
pop
add
xor
lahf
add
pop
inc
pop
outsl
loope
fistpl
sti
lods
pop
rol
aaa
pop
xchg
sbbb
rol
shr
imul
sub
xlat
iret
ds
xchg
mov
mov
inc
int
rorb
or
jp
hlt
movsl
aam
jp
imulb
popf
shr
adc
cmp
pop
cli
mov
dec
inc
jmp
ss
movsb
mov
mov
sub
dec
mov
sarl
dec
or
or
frstpm(287
pop
xchg
mov
rorb
fsubl
mov
call
mov
and
insl
mov
adc
jecxz
mov
pop
insl
scas
xor
jne
mov
cmp
aad
mov
sbb
sub
ljmp
sti
or
cmp
lret
jg
jp
dec
rcrb
pushf
jo
push
push
add
enter
mov
orb
lea
xchg
or
loope
pop
or
negl
push
int
sub
pushf
rorb
arpl
cs
roll
dec
or
or
sub
mov
xor
mov
push
ss
push
ret
js
xchg
mov
cmp
roll
ss
stos
shll
mov
rclb
xorl
cmp
add
push
jns
in
sbb
lahf
dec
mov
arpl
lcall
out
loopne
addr16
pop
adcl
cmp
sbb
inc
pop
dec
add
jns
mov
lods
inc
mov
scas
js
jbe
jg
add
mov
xchg
add
pop
adc
cmp
jae
lahf
jge
jmp
push
dec
js
add
push
mov
aad
fwait
mov
hlt
add
sbb
cmp
push
adc
sub
aad
jns
and
ret
cli
nop
js
ds
repz
pop
xchg
popf
mov
xchg
mov
pop
bound
test
orb
bound
jl
cmp
xlat
popf
mov
jl
test
test
daa
call
pop
sub
orl
addb
jmp
fxch
lsl
push
push
and
rolb
arpl
dec
and
in
inc
jle
xor
lcall
inc
dec
pop
and
rcll
pop
jp
test
fdivl
rol
divb
scas
adc
fxch
jge
lret
dec
sbbl
cmp
or
int3
lcall
jecxz
leave
dec
jl
jb
mov
cld
mov
add
aam
sbb
cmpb
fdivs
rcr
mov
call
or
xchg
aam
icebp
xchg
lods
or
mov
mov
daa
add
xor
jle
lds
dec
cmp
add
imul
and
jno
sbb
btr
cmpb
fists
cmc
cmp
add
sub
outsb
fcmovne
and
subb
xor
sbb
push
std
dec
mov
and
or
addr16
icebp
sub
mov
in
cmp
mov
ret
popf
jbe
mov
mov
inc
inc
add
lcall
sub
iret
xchg
fmul
sbb
nop
jo,pt
add
repz
fs
jb
xchg
mov
shl
push
push
or
jo
or
cmpl
insb
push
icebp
pop
and
mov
mov
xchg
sbb
adc
test
popa
push
lret
cwtl
pop
xchg
jge
sub
jnp
stos
movsb
insb
in
cmp
je
xchg
sub
jno
lahf
cs
or
xchg
jle
mov
xorb
dec
inc
pop
inc
insl
mov
negb
mov
inc
aam
push
mov
outsl
imulb
mov
jbe
cmp
push
enter
jae
sub
sub
xchg
inc
movsl
fildl
dec
mov
into
data16
inc
lods
mov
push
mov
jle
jmp
cmp
add
flds
lock
cmp
pop
fwait
in
xchg
lods
push
adc
hlt
adc
and
scas
popa
inc
pop
push
test
pop
jae
mov
or
test
gs
nop
lret
fadds
or
lea
xchg
out
shlb
sub
mov
lret
sub
add
fsubr
mov
xchg
sub
push
ret
xchg
lea
push
aaa
and
in
cmp
jmp
test
ret
leave
lock
dec
xor
or
lea
gs
mov
add
cld
mov
inc
xchg
ret
or
in
jge
xchg
incb
sub
xorl
fwait
mov
popf
bound
add
sub
mov
in
lcall
rolb
jbe
fwait
sbb
dec
push
in
pop
negl
or
repz
and
push
mov
dec
jno
sarb
cmpl
xor
adc
or
push
xchg
adc
mov
gs
or
sub
mov
andl
in
cltd
testl
ss
ja
orl
mov
orl
inc
mov
mov
cmp
add
xchg
pop
sahf
sub
jge
push
dec
inc
add
push
scas
sbb
jp
add
push
xor
pop
inc
aad
das
into
jo
xchg
push
adc
shl
cmp
add
jg
into
jmp
sbb
mov
test
or
int3
sbb
subl
inc
cmp
rorb
mov
pusha
mov
out
in
inc
or
dec
fistps
into
jno
les
fsubr
push
sahf
adc
call
fildl
push
aad
dec
or
cs
inc
cltd
fisubs
cld
shll
lock
in
mov
mov
lcall
cmpsl
jp
lcall
lcall
fildll
pushf
gs
cmpsl
mov
ss
push
fisubl
push
sbb
adc
popf
out
dec
pop
call
jmp
jle
add
data16
jbe
cs
lock
and
push
dec
sar
cld
pop
stos
loopne
ljmp
lcall
jb
lods
int
ja
gs
sarb
pop
inc
ret
aad
cmpsb
scas
aad
dec
and
inc
shl
pop
mov
push
inc
aad
pusha
push
inc
rcrl
pusha
xor
jmp
out
pop
leave
jecxz
pushf
in
bound
push
int3
inc
loope
lret
into
les
jmp
stos
mov
xor
mov
push
jmp
pop
lods
jo
cwtl
stos
push
sbb
loopne
add
in
and
adcb
mov
jns
mov
dec
push
mov
dec
adc
into
lret
cmc
lahf
jo
or
pmaxub
push
jno
roll
pop
and
fsubs
movsl
mov
or
jns
call
xchg
insb
xchg
push
xor
cltd
mov
cmp
xor
mov
or
fstl
inc
lods
in
adc
cmc
enter
andps
out
push
imul
mov
xor
cmpsb
outsl
sbb
movsb
sub
hlt
inc
std
hlt
mov
jg
pop
sub
subb
lret
in
cli
mov
pusha
in
gs
jp
scas
punpckldq
add
jmp
ds
int
cli
pop
out
jmp
sub
or
das
fisubl
mov
vcvttss2si
fidivrl
shl
pop
dec
in
push
xor
pop
loop
repz
add
jl
adc
cmpsl
mov
adc
fnstenv
adc
jb
sbb
pop
jg
and
test
dec
mov
aas
dec
lds
cmp
xor
je
outsl
es
xchg
cs
dec
and
adc
pop
and
icebp
pop
dec
jge
mov
add
or
out
scas
outsb
jo
mov
jno
push
stos
test
push
dec
push
ds
push
out
pusha
mov
ljmp
daa
push
jb
popf
aaa
add
jmp
mul
jmp
xchg
mov
cmp
repz
dec
movsl
outsl
or
nop
mov
ss
mov
stc
imul
adc
test
add
adc
arpl
jae
mov
push
pop
jp
and
jbe
popf
lret
push
cmp
mov
push
ret
jmp
das
xchg
test
add
pop
mov
sub
mov
push
sbb
fs
imul
bound
pop
loop
xchg
jl
call
loopne
mov
dec
xor
lods
jno
das
inc
pop
mov
lret
sub
xchg
fs
idivb
js
out
leave
sub
jbe
scas
ror
scas
stc
mov
mov
jnp
mov
xor
adc
int3
cs
jbe
ljmp
rclb
mov
xchg
out
jo
ljmp
je
cli
and
outsl
test
pop
jecxz
icebp
or
sbbb
stos
jp
rorl
lcall
sbb
divl
cmp
sub
fwait
sub
pop
scas
sub
and
iret
cmp
xchg
cltd
and
imul
mov
leave
sbbl
pop
xchg
xor
movsl
inc
and
aaa
adc
cmp
inc
push
push
mov
push
fnstsw
sbb
jmp
inc
aad
jae
jo
cli
and
mov
push
loop
bound
sub
jmp
dec
lcall
pop
xchg
iret
push
jp
shrl
pusha
pop
add
dec
jmp
in
dec
mov
les
je
outsb
aam
sub
call
sub
das
movsb
push
call
inc
ret
insl
sbb
and
pop
ret
pop
pop
mov
stos
jmp
xorl
xor
call
les
jns
mov
jns
mov
push
adc
sahf
clc
rcll
dec
ret
or
mov
jne
add
jle
xchg
roll
cmpsl
pop
jmp
adcl
sbb
mov
jg
push
std
xchg
sbb
sahf
repnz
shrl
pusha
jne
adc
sub
sbb
or
gs
imul
mov
mov
and
pop
push
pusha
cli
push
lahf
sub
test
add
xor
xchg
sub
fwait
je
lret
fbld
and
jo
inc
es
call
outsb
cli
lock
push
xor
push
lea
add
je
xchg
lods
dec
dec
sbb
loop
gs
adc
xchg
xchg
test
in
cmp
insb
imul
mov
sbb
or
inc
mov
idivb
aas
or
fisubrl
add
movsl
insb
cltd
ss
adc
mov
lahf
inc
mov
dec
scas
aam
adc
or
push
xchg
adc
fdivl
ficoml
pop
or
call
mov
popa
xchg
cmpsl
movsb
fwait
sbb
adc
shrl
scas
jnp
cltd
ret
les
push
sbb
es
repz
imul
xlat
add
ja
mov
push
push
in
rclb
sub
inc
cmpsl
outsl
sbb
mov
push
cli
leave
loop
gs
sbb
and
push
sub
xor
loopne
cld
xorb
cld
adc
jb
xchg
rcrb
push
cmp
cmp
ja
jnp
test
cmp
aaa
mov
repz
cmp
pushf
imulb
push
or
sbb
push
add
jbe
mov
aad
mov
cli
jno
push
sub
pop
movsl
in
xor
pop
xchg
sahf
mov
scas
jp
cmp
rcll
fcmovb
and
cwtl
push
mov
xchg
pop
jp
xlat
jnp
cmpsb
pop
aas
loopne
dec
in
xchg
ja
loopne
jns
enter
add
dec
cltd
fwait
jns
ret
and
xchg
pop
jecxz
jmp
or
outsl
sub
push
nop
sub
fisubrs
xor
imul
pusha
sbb
bound
mov
movsb
sbb
test
test
add
add
mov
xchg
jmp
sbb
jp
faddl
ficomps
icebp
loopne
bound
or
dec
pop
push
in
pop
or
repnz
mov
sub
and
sbb
in
sub
jns
jle
mov
loop
adc
inc
and
popf
mov
js
fs
xchg
test
ja
add
out
notb
lea
lahf
aam
inc
sti
movsl
cwtl
mov
testb
add
stos
cmp
cmpsb
imul
adc
pusha
xchg
sub
ret
mov
outsl
sub
sbbl
or
lahf
test
jnp
dec
mov
inc
lret
sbb
in
loopne
jno
xlat
mov
mov
pop
cmp
test
jp
xor
inc
add
jo
cmp
pop
xor
pop
sbb
inc
fadd
das
xchg
pop
mov
adc
push
xor
mov
mov
in
push
cmp
imul
mov
imul
cmp
scas
lret
movsb
xor
pop
xchg
jae
adc
push
mov
stc
ljmp
and
fs
mov
inc
jnp
stos
mov
push
das
cmpsb
lea
mov
imull
pop
push
mov
mov
jo
adc
push
addl
pop
jecxz
sahf
mov
shrb
push
stos
or
hlt
fnstenv
shll
push
repz
sub
das
adc
ljmp
pop
ss
data16
xchg
sbb
out
adc
and
lock
xor
mov
dec
movsb
or
hlt
xor
pop
ds
push
shrb
inc
pusha
mov
pop
fstl
sub
nop
test
xchg
aas
and
xchg
shlb
iret
shr
ljmp
cmp
ret
pusha
add
mov
enter
loop,pt
adc
add
adc
jae
inc
mov
adc
and
repnz
mov
xabort
call
inc
jns
cmp
xor
insb
pop
sbb
dec
and
mov
leave
sub
inc
sbb
xchg
gs
or
mov
adc
jp
ss
mov
mov
mov
mov
aas
push
test
cmpsl
or
dec
push
cmp
sar
lret
mov
jl
pop
jmp
mov
sub
or
mov
fstps
movsl
mov
mov
adc
or
lods
push
les
adc
push
sbb
and
jge
or
aad
or
gs
sub
jmp
cmpsl
mov
test
jle
sahf
outsl
xor
aam
or
ljmp
rorb
mov
nop
cwtl
dec
loop
movsl
hlt
cmpsl
push
gs
xchg
pop
adc
and
clc
mov
cltd
inc
push
popf
mov
pop
inc
aam
idivl
bound
mov
jl
add
push
fstl
movb
xchg
mov
and
outsb
out
pop
cltd
or
mov
jnp,pt
xchg
out
shrb
jg
xor
out
jg
jp
fsub
imul
xchg
sub
int
sub
shrb
adc
push
adc
sbb
scas
sub
mov
xor
xor
or
inc
mul
xchg
push
orl
popa
push
add
dec
cmp
adc
lock
enter
shll
cwtl
shlb
cli
jl
mov
mov
gs
sub
mov
loopne
xchg
xor
mov
mov
and
std
sub
inc
pop
adc
rol
xor
insb
cmp
xchg
lcall
and
arpl
dec
test
bound
pop
std
xchg
lret
push
fidivs
mov
xchg
xchg
cmc
jecxz
add
jb
sbb
rcrl
bound
mov
fistpll
sub
bound
mov
test
jge
or
imul
mov
mov
ss
dec
jb
scas
inc
outsb
mov
int
lea
das
lea
pop
and
push
shll
sub
fnstsw
mov
sub
sti
dec
jge
mov
shrb
mov
or
fimuls
mov
xor
hlt
xchg
push
leave
out
xor
xchg
sub
rcr
inc
push
jmp
push
div
fcmovb
mov
fyl2x
popf
stos
mov
mov
dec
nop
mov
imul
into
push
jmp
lods
cmp
jb
and
push
and
push
sbb
iret
fcomps
loopne
ret
dec
fdivs
shl
mov
push
js
dec
add
and
adc
sarb
fstl
sbb
rclb
mov
dec
out
pop
cltd
mov
xchg
ljmp
xor
mov
out
or
test
or
negl
mov
imul
sub
daa
imul
icebp
ret
inc
or
mov
out
mov
lods
dec
daa
stos
push
add
push
loope
loop
push
cltd
mov
mov
imull
pop
cmp
cmp
and
dec
mov
insl
adc
add
iret
inc
lcall
lcall
aad
cld
xchg
and
add
js
ds
mov
dec
push
das
repnz
jae
enter
inc
or
mov
mov
movsl
or
mov
repz
rorb
mov
into
pop
js
xchg
inc
test
jb
scas
cmp
dec
addb
ficompl
adc
ret
ret
scas
jmp
lcall
add
popf
mov
jmp
jne
sbb
sub
subb
cltd
icebp
loop
cld
mov
pop
pop
ret
mov
sbb
insl
pop
jns
inc
lcall
cmc
fadd
inc
dec
jmp
rcrl
cltd
xor
mov
mov
pop
in
jp
pop
mov
xor
jbe
faddp
repnz
rorb
or
jae
clc
daa
nop
push
imul
mov
popa
sbb
rorb
lods
shll
ja
cltd
cld
sbb
inc
fiadds
sub
push
adc
cmp
xorb
shrl
cs
jle
adc
test
stc
sti
cmpsb
lea
pop
cmpsl
push
inc
test
cs
mov
fldcw
movsl
nop
loopne
mov
xchg
andb
repz
push
repz
xchg
fnstenv
popf
sahf
or
and
and
or
insl
jecxz
add
ret
cmovle
nop
ret
sahf
sub
inc
imul
popf
gs
and
xor
jns
out
jmp
sub
lods
cmp
sub
mov
ret
jmp
shrb
xlat
into
push
fdivrp
mov
push
fidivrs
faddl
loopne
xor
and
push
fnstenv
ss
inc
andb
aad
cmpsb
sbb
das
inc
stc
dec
lods
or
ret
test
daa
dec
pop
out
mov
adc
inc
sub
mov
stos
mov
lahf
sub
adc
adc
add
aaa
ret
mov
jbe
popf
jl
xchg
dec
loopne
into
mov
out
cmpsb
test
add
dec
orl
xor
mov
cmp
and
xchg
push
jle
ficomps
xchg
fisubrl
leave
jne
xor
dec
pop
jns
jl
mov
fdivs
mov
cmp
lods
mov
fdivp
scas
cli
dec
shll
push
xchg
shlb
adc
mov
push
pop
mov
jmp
jae
stos
lret
cld
loopne
or
shll
mov
popa
and
shlb
pusha
dec
cmp
mov
orl
sub
mov
sbb
push
pop
xor
out
imul
test
imul
mov
sub
pushf
xor
cmp
cmp
sbb
inc
outsb
imul
cmp
xchg
js
mov
cwtl
andl
je
jno
mov
repnz
lds
mov
mov
push
mov
andl
mov
dec
lret
sahf
push
add
je
test
pop
fs
out
jbe
bound
mov
cli
sbb
pop
ds
or
inc
in
cltd
push
adc
and
stos
in
ret
mov
test
push
mov
cmc
pop
xchg
je
adc
sub
inc
sub
jo
hlt
jecxz
stos
es
add
lods
stos
sub
imull
mov
push
into
lods
cmp
cmpsl
lods
stc
pop
test
js
pop
cmpsb
dec
fwait
pop
das
sub
orl
scas
and
js
addr16
add
xchg
testl
cld
je
inc
ljmp
jns
in
inc
jbe
mov
push
adc
insb
inc
out
lret
daa
xchg
loope
out
jl
imul
add
aas
test
ss
outsl
cwtl
inc
dec
sti
cmpsl
stos
out
loop
testl
adc
aas
icebp
mov
movsl
inc
inc
nop
fnstsw
mov
mov
icebp
in
push
inc
aad
fs
lock
in
push
sarl
add
jecxz
jmp
aaa
insl
adc
sbb
stos
pop
lcall
pop
and
dec
jmp
cmpsl
sub
pusha
nop
pop
inc
pop
jl
gs
dec
pop
sbb
jp
cmpb
out
push
sbb
push
and
mov
inc
js
adc
cmpsb
ljmp
in
or
inc
fistl
fldcw
in
or
pop
mov
aad
sub
pop
sahf
and
lcall
lock
test
mov
push
aam
jmp
jmp
sub
inc
add
lds
ljmp
out
cs
jp
jne
mov
push
cmp
les
mov
mov
andb
adc
and
and
push
decb
xchg
pop
jno
in
xchg
adc
inc
cmpsl
mov
push
cmpsl
mov
cmp
jmp
arpl
and
mov
sti
lret
loope,pt
test
out
pop
mov
roll
jecxz
into
and
mov
out
jl
xchg
je
daa
movsl
mov
add
push
mov
int
mov
mov
testl
fstps
pop
mov
aaa
cmp
push
dec
dec
dec
sbb
mov
jae
mov
iret
aam
mov
add
push
je
push
js
pop
sbb
xchg
test
fcomip
cmp
jle
jg
xchg
imul
cmpsl
push
cld
pop
xchg
test
dec
cs
mov
xchg
dec
inc
sub
sarl
repnz
rcll
add
fcoms
pop
inc
cmp
add
push
fcompl
lods
jns
jns
xchg
stos
dec
push
gs
xor
test
cmc
push
pop
pop
xchg
mov
add
cmp
push
jmp
mov
adc
inc
inc
mov
and
jmp
dec
sbb
add
lock
inc
vpsllw
inc
insl
or
add
aaa
add
mov
das
addb
mov
pop
lock
cmc
orb
push
xchg
push
pop
mov
xor
mov
add
xchg
xchg
sahf
dec
and
aad
dec
outsl
and
aas
cld
jo
xchg
jg
adc
nop
xchg
inc
and
push
lods
test
push
xor
mov
daa
daa
incl
pop
daa
lds
mov
iret
mov
or
xor
vandnps
fstp
adc
leave
adc
dec
mov
dec
mov
sbb
adcb
mov
sub
inc
jae
add
pushf
leave
aaa
rcrb
in
scas
pushf
xchg
in
outsb
pop
xor
js
xor
jbe
sub
xor
inc
mov
add
pop
out
mov
mov
test
dec
lcall
cwtl
adc
aad
cli
popf
xchg
mov
stc
or
adc
loop
jne
call
cmpsl
mov
lret
pop
pop
pop
hlt
aas
out
scas
cld
cmp
lods
movsb
sbb
and
addb
mov
push
xchg
pop
cmp
sbb
aaa
fsubr
les
lock
sbb
pushf
jae
sub
scas
push
and
aam
stos
lock
addr16
mov
or
aas
ds
xlat
ret
push
xor
and
sub
jg
pop
xor
cmp
idiv
mov
xchg
cmp
arpl
adc
fldenv
mov
sub
pusha
inc
jne
pop
inc
pop
iret
jnp
mov
xchg
xor
pop
adcb
out
mov
in
mov
cmp
js
sahf
jne
jecxz
mov
inc
das
daa
fcoml
xchg
enter
lahf
mov
sti
into
and
leave
pop
je
mov
imul
in
adc
icebp
push
xor
negb
xlat
pop
and
pop
xor
in
xlat
push
pop
dec
addl
adc
add
push
loop
dec
inc
scas
inc
sarl
dec
loopne
xlat
push
data16
sbb
push
aam
imul
xlat
dec
js
in
fneni(8087
pop
inc
push
sub
cmp
push
enter
es
sub
inc
ret
aaa
pop
loopne
jg
jge
je
insb
hlt
pop
xor
mov
cmc
push
shlb
daa
int
in
cltd
out
es
mov
or
call
outsl
mov
dec
sbb
adcl
arpl
lods
cwtl
aas
mov
das
addr16
fwait
push
in
fistpl
shl
ret
cmc
or
jge
adc
rcll
testb
roll
mov
arpl
lods
out
outsb
xor
sarb
jl
movsl
lds
adc
push
sbb
or
or
sbb
popl
testl
pop
mov
imul
pushf
imul
lods
xchg
jle
lock
sub
in
add
lods
mov
lret
sub
jmp
test
xchg
jne
add
pop
pop
sub
adc
inc
inc
fwait
adc
push
mov
pop
adc
mov
rcrl
push
add
sbb
mov
xor
lret
pushf
repz
and
aas
sub
push
mov
movsl
roll
mov
push
fildl
xor
loope
dec
inc
sahf
daa
add
in
xor
inc
cmp
cwtl
cmp
cmp
pop
or
jle
lret
inc
cmp
popa
cltd
ja
lds
inc
outsb
test
loop
dec
sub
push
adc
scas
subl
adc
roll
push
aas
mov
js
cltd
stc
ret
lods
inc
or
adc
in
test
push
out
mov
mov
push
fucom
cld
mov
push
fsubs
push
mov
pop
pop
jle
and
ret
sub
dec
pop
xchg
lret
push
scas
lret
jne
xor
pop
jo
cmp
test
cltd
sbb
movsl
adcb
cmc
lods
ret
fs
cs
clc
xor
sahf
movzbl
xor
out
mov
mov
jmp
cmp
out
imul
je
adc
push
ja
rcrl
push
add
cmp
fdivl
xor
mov
push
rol
inc
mov
pop
and
popa
cltd
rcrb
and
mov
push
sahf
or
mov
inc
xor
scas
les
es
pop
out
fs
fnstenv
dec
lock
sub
sarb
bound
lea
lret
pop
sbb
imul
jb
or
test
inc
sub
xchg
adc
mov
push
int3
add
mov
xchg
fdivs
movsb
cmp
sub
roll
sub
xorl
sbb
mov
inc
mov
ret
jp
ficoml
outsb
fdivl
mov
rcl
jge
test
adc
inc
cmp
test
into
loop
dec
push
popa
mov
dec
jecxz
in
stos
cld
mov
adc
xor
scas
jl
loope
adc
xchg
inc
in
out
rcr
int3
pandn
mov
addb
xchg
xchg
xor
pop
cmp
data16
ja
dec
loope
push
mov
lahf
push
sbb
xor
mov
inc
rcll
int3
mov
loopne
loope
or
mov
leave
add
subb
pslld
xlat
jne
fmull
pop
fsts
in
pop
adc
bound
in
xchg
out
out
outsb
sbb
mov
in
adcl
cmp
mov
out
loop
call
mov
jecxz
and
int3
sub
imul
cld
stos
xchg
cs
add
mov
jg
in
xor
inc
sub
adc
push
into
out
mov
push
leave
mov
insb
div
cmp
add
xlat
jmp
icebp
inc
sub
jo
scas
sub
jle
jg
int3
cmpsl
jae
and
add
jle
add
lret
hlt
pop
jmp
out
jmp
inc
dec
loop
js
and
mov
add
icebp
mov
pop
jb
mov
adc
inc
dec
pushf
pop
outsl
jp
jmp
test
out
or
mov
inc
mov
mov
lods
jbe
mov
loopne
test
push
lds
notl
into
cltd
insb
fldcw
cmp
cmp
addr16
pop
mov
pop
push
mov
in
daa
dec
inc
dec
xchg
jae
fsts
add
or
sub
push
jno
inc
mov
out
in
jl
mov
mov
mov
xchg
pop
adc
imul
fnstcw
shl
inc
jne,pt
cli
cmpxchg
cmp
rcrl
fiaddl
add
xchg
sub
inc
jecxz
pop
mov
mov
out
push
mov
mov
adc
sbb
mov
xchg
cmp
push
sub
in
push
or
fwait
jecxz
pop
or
lock
lcall
xchg
xchg
mov
int3
repz
add
xor
cmp
xchg
sub
cmp
fisubs
int
cmp
stos
das
mov
mov
sub
imul
cmpsl
mov
lcall
scas
dec
or
lods
in
xchg
or
mov
out
and
xor
cli
cwtl
nop
daa
je
pop
sbb
or
xchg
sbb
sbb
test
push
into
adc
xchg
cld
xchg
lret
hlt
pop
int
fwait
cmp
and
shll
adc
addb
divl
imul
mov
push
sbb
lea
das
jns
popf
mov
orl
inc
sbb
lock
stc
mov
and
cs
sub
pop
push
fisubl
les
or
cmp
dec
cmp
xor
dec
shrb
int3
movsl
stos
into
and
outsl
sub
sbb
jae
sub
psadbw
loopew
sub
cld
xchg
push
sahf
clc
ret
rclb
ret
ret
adc
ljmp
pop
mov
ja
ret
mov
orl
sarb
int3
jp
pop
fcoms
mov
adc
push
cmp
call
xlat
aas
and
popa
aad
xchg
and
hlt
out
mov
imul
mov
and
dec
lods
pushf
mov
fmul
fs
sahf
repnz
cmp
hlt
test
aas
popa
mov
imul
jo
mov
fs
aas
mov
daa
ror
into
xchg
scas
into
mov
orl
das
cmp
sub
pop
xor
add
dec
mov
popa
aaa
adc
enter
adc
mov
push
xchg
in
dec
fldenv
xchg
js
mov
ljmp
or
bound
movsl
cmpsl
into
rcll
cltd
data16
sti
xor
orb
dec
scas
mov
adc
jmp
mov
sbb
pop
scas
or
jecxz
ja
inc
test
addl
jmp
sti
push
into
jecxz
add
mov
dec
inc
repnz
bound
out
movsb
loopne
loope
push
xchg
mov
out
mov
inc
sub
ret
push
shrb
test
gs
fildl
or
or
enter
mov
shll
sbb
dec
cmp
jo
xchg
push
dec
sbb
jle
xchg
fmuls
insb
fdivr
dec
jbe
lahf
xor
cmp
xorb
sub
mov
cmpsb
pop
and
xor
mov
cltd
push
mov
sar
lock
mov
cmp
test
mov
push
sub
sub
jl
aad
hlt
loopne
ret
movsb
ja
sarb
pop
mov
sub
cli
fcmovne
dec
sahf
test
or
mov
shll
test
out
pop
and
dec
stc
ret
xchg
jbe
inc
xchg
push
dec
and
push
lods
xchg
jp
dec
aas
cmp
into
mov
ja
mov
xlat
fdivrs
adc
mov
aas
cmp
and
add
mov
pop
sub
stc
mov
xor
xchg
dec
pop
dec
push
mov
xchg
sub
push
xor
lret
dec
xor
xor
pop
ja
xor
out
sub
leave
mov
mov
test
stos
pusha
adc
cmp
mov
dec
add
int
fsubrs
mov
jp
sub
dec
sbb
cmp
push
xchg
pop
or
add
cmc
inc
ret
sbb
std
push
call
inc
jecxz
arpl
pop
sbb
sahf
pop
icebp
loope
and
adc
sbb
or
xlat
dec
stos
mov
jo
sub
aaa
dec
cltd
rcll
push
outsb
mov
test
cmp
inc
scas
mov
stos
std
mov
mov
mov
aaa
jg
sbb
test
mov
sbb
mov
lahf
fs
imul
jne
jle
mov
movb
fistps
in
cmpsb
add
add
cs
inc
add
xchg
lret
addb
mov
or
lea
in
pop
push
adc
xchg
push
add
mov
mov
cmpsb
test
in
mov
aas
movsb
dec
push
and
sahf
inc
jno
push
jne
mov
mov
ret
jns
cmp
notb
das
aam
pop
lods
push
popf
lret
loopne
xchg
pushf
sbb
pusha
dec
out
js
test
pop
ret
push
data16
insl
iret
or
sbb
hlt
shll
clc
imul
popf
dec
das
ficompl
mov
mov
incl
adc
out
add
fidivrs
outsl
pop
arpl
or
ficoms
dec
jae
push
push
push
dec
pusha
and
pop
mov
aam
xchg
subb
ret
movsl
xchg
clc
pop
sub
push
push
jl
mov
inc
pop
je
enter
movaps
repz
xorb
stos
cli
enter
test
das
sbb
push
cmp
or
out
and
addr16
jbe
sub
and
push
cmp
pop
pop
dec
cmp
bound
gs
xlat
or
or
add
inc
jns
sub
into
xor
lods
and
repz
iret
dec
mov
int
shll
ret
jmp
push
add
mov
add
js
jle
pop
arpl
out
scas
xor
inc
mov
and
scas
ljmp
rclb
daa
xchg
into
aad
fcmovb
sbb
pop
test
popf
fistps
jo,pn
adc
and
in
mov
jge
into
or
mov
je
inc
aad
push
aam
cli
js
xor
fdivl
add
mov
cli
stos
sub
andl
int
test
adc
es
or
subl
test
pop
cmp
mov
dec
in
add
or
sub
mov
push
jo
mov
stc
int
jo
out
loopne
inc
out
nop
jl
shl
enter
movsb
add
jmp
cmp
cmp
sub
or
popa
sbb
sub
dec
test
in
push
sbb
pushf
push
mov
leave
xchg
popf
jge
xor
fs
fldcw
mov
sbb
outsl
mov
and
cmp
pusha
test
mov
in
dec
imul
mov
in
cmp
ret
int3
mov
sbb
enter
jne
xchg
lds
nop
pop
ja
lret
arpl
mov
scas
das
xlat
push
js
xchg
notb
sbb
scas
scas
stos
dec
adc
sub
adc
fisttpll
cmpsl
cmc
subl
lcall
push
in
sub
addr16
fimull
inc
out
add
and
aas
test
mov
xor
fs
or
in
jb
xchg
cmp
inc
dec
call
scas
lahf
rcrl
mov
lock
sub
cmp
pop
or
sbb
sbb
xchg
mov
pushf
ds
in
in
test
pop
pushf
dec
fists
andb
xor
inc
inc
pop
jge
rorb
call
lcall
adc
jo
aad
xor
dec
jle
xor
push
xchg
jmp
lret
or
push
mov
insb
call
ja
xchg
mov
pop
mov
cmpsb
xchg
pop
ficompl
cmp
sub
adc
jb
sub
inc
xchg
into
cmp
out
adc
or
xor
lock
int
ss
shll
pop
test
inc
inc
int3
mov
ss
cmp
ljmp
jae
xchg
leave
dec
out
mov
push
and
outsl
test
mov
push
pop
pop
push
fisubrs
popa
scas
adc
imul
stos
and
dec
in
pop
addr16
mov
xor
dec
mov
leave
mov
xchg
xor
mov
xor
shrl
inc
adc
out
cltd
aas
scas
in
pop
pop
push
popf
fisubrl
jno
js
mov
lods
imul
and
adc
cmp
inc
sbb
ret
push
dec
xchg
pop
ficoml
mov
fstpt
xor
dec
push
pop
nop
mov
fcmovb
xchg
cmp
xor
add
or
fadds
test
lds
pop
sbb
cmp
jg
or
jg
flds
mov
bound
push
aas
jbe
repnz
push
push
inc
loop
gs
adc
add
inc
push
sbb
and
cmc
add
imul
js
xorb
nop
or
pop
out
mov
jp
or
adc
cltd
test
or
jb
sub
inc
xchg
es
sbb
ret
lret
and
mov
add
jecxz
insb
nop
loope
fimuls
aad
sbb
mov
sarb
add
mov
dec
push
push
js
dec
shll
fadds
pop
mov
stos
jno
jnp,pn
inc
not
or
popa
inc
ds
push
addr16
sbb
cmpl
clc
inc
jge
cmp
hlt
add
dec
hlt
mov
jge
jnp
mov
movsl
mov
or
jmp
icebp
inc
rcr
adc
in
aam
hlt
jecxz
mov
in
mov
arpl
dec
pop
push
in
jno
popa
adc
pop
mov
lock
xor
xor
jecxz
jmp
iret
mov
lods
jae
ds
add
loope
pushf
xchg
dec
xlat
fwait
in
shll
stos
sub
and
je
and
sbb
lods
pop
mov
push
sbb
mov
daa
cmovl
out
xchg
xor
rcrl
xchg
cmp
jmp
xchg
in
jne
and
cwtl
pop
mov
shrl
mov
push
movl
adcl
lahf
into
xchg
fwait
and
mov
scas
pop
sbb
test
stc
pop
lods
inc
pop
dec
ds
pop
xorb
or
pusha
add
shll
mov
add
cmp
inc
insb
mov
daa
test
inc
nopl
push
adc
cmpsb
adc
rclb
pusha
dec
test
cmp
sub
or
stos
je
sub
repnz
mov
mov
imul
or
pop
out
sbb
mov
push
mov
xchg
jb
xchg
push
cmpsb
dec
sub
in
lcall
mov
add
ret
pop
leave
sub
pop
lahf
inc
cmc
mov
fistl
scas
out
test
or
arpl
lret
sbb
out
lret
popa
sbb
dec
test
and
iret
adc
gs
inc
test
sbb
add
in
mov
mov
ljmp
mov
sbb
xchg
and
in
adc
jp
das
scas
inc
sar
outsb
cwtl
sbb
push
pop
fmuls
xchg
nop
add
adc
sbb
or
jno
neg
sub
or
in
mov
outsl
sbb
or
mov
and
pop
mov
cli
xchg
adc
out
cs
jbe
cmp
add
or
mov
in
clc
add
sub
rcrb
adc
mov
inc
push
mov
shld
cmpsb
movsl
fcoml
insl
dec
popf
pop
loope
cmp
es
out
repz
shll
jg
cwtl
gs
iret
ss
jnp
or
sub
insb
push
sahf
nop
ljmp
cltd
ja
cmp
or
xchg
xchg
xchg
test
jbe
lcall
test
inc
sbb
mov
mov
mov
jmp
dec
cmpsl
inc
mov
push
xchg
ffreep
aam
popf
in
int
cs
fimull
jne
adc
in
jge
sahf
inc
or
repnz
bound
jbe
aas
test
int
xor
fdivrp
dec
xor
shlb
ss
clc
pop
and
lods
add
ja
bound
jo
mov
adcb
mov
test
cmp
adc
int3
loopne
ffree
and
cmc
imul
gs
push
inc
popa
add
jp
cmp
mov
sahf
test
cmpsl
push
adc
popa
xlat
dec
mov
lret
mov
shll
jmp
xchg
out
cmp
stc
dec
cmpsb
mov
imull
insl
lcall
cmp
loope
push
xchg
xor
push
pop
rolb
loope
aad
lock
sub
xor
sbb
dec
inc
jge
movsl
add
je
sbb
fsubrs
sbb
jle
clc
stos
xor
push
or
mov
mov
xchg
xchg
mov
jecxz
mov
aam
mov
xchg
cmp
push
pushf
xor
sbb
jl
cmpsl
fimull
js
daa
inc
inc
sbb
js
ret
mov
or
pop
pop
in
sub
addr16
jns
frndint
xor
movsb
adc
fidivrl
xor
mov
and
or
and
or
and
rorb
roll
loope
adc
arpl
addr16
fld
lods
jae
xor
cmpb
or
and
divb
les
pop
xchg
sbb
imul
lcall
sub
sub
addr16
sahf
cmp
pushf
inc
loopne
and
imul
aas
sub
push
repz
shlb
fnsave
sbb
aas
pushf
mov
mov
inc
out
or
dec
inc
rcrb
sbb
add
in
std
push
filds
insl
sbb
mov
adc
mov
push
lcall
leave
rorl
fs
mov
push
push
in
push
push
mov
in
add
jb
mov
test
mov
loopne
adc
cli
push
cld
fistpll
cmpsl
jnp
pusha
mov
test
addr16
ret
inc
add
mov
lds
mov
add
dec
imul
pop
hlt
fmull
xorl
leave
mov
scas
or
mov
push
sbb
jecxz
cmp
push
test
stos
lcall
lret
jmp
pushf
add
das
and
xchg
cmp
pop
push
popf
sahf
fmull
pushf
adc
rsqrtps
ja
sub
icebp
adc
or
fnstenv
in
leave
fstpl
sub
negl
xor
mov
sbb
add
mov
mov
je
xor
movsl
jb
mov
mov
push
lret
sbb
pop
cltd
mov
aas
sub
shrl
stc
cli
mov
jb
mov
stos
mov
fs
bound
insb
pop
ljmp
or
dec
pop
sbb
inc
sbb
push
leave
jl
jae
inc
sub
es
cmp
pop
cmp
pop
adc
sbb
xchg
xchg
jg
sub
xchg
mov
mov
sub
and
sbb
mov
popf
sub
cld
pop
push
imul
jbe
inc
loope
aam
es
or
sub
add
bound
jnp
outsb
xchg
add
loop
xchg
popa
cs
and
insl
movsl
sahf
jmp
sbb
mov
jmp
js
rclb
repnz
repnz
xchg
or
ds
pop
aaa
dec
sbb
daa
sahf
data16
dec
mov
cmp
jp
into
mov
in
cmpsb
add
push
rcll
cmp
or
in
xchg
mov
in
fisubl
aad
mov
sub
jmp
sbb
inc
pop
sub
sbb
push
xor
pop
sub
scas
and
xor
mov
lahf
xor
jb
movsb
mov
pop
ds
fwait
lcall
mov
pop
mov
in
jle
jle
aaa
dec
mov
dec
nop
leave
popf
jl
mov
push
enter
repnz
xor
sbb
ret
and
orl
xor
pop
jae
js
add
pop
lcall
imul
lds
cmp
cmp
arpl
mov
aam
rcr
adc
fidivrs
sub
repnz
inc
jg
cmp
adc
int3
imul
call
andb
dec
xchg
int
inc
mov
pop
add
jl
lret
out
out
push
inc
repnz
xlat
dec
mov
jl
add
imul
mov
in
jmp
adc
fnop
cmp
fcmovnu
mov
aad
mov
xchg
inc
jg
icebp
sbb
or
cmp
xchg
rep
ljmp
mov
testl
pushf
adc
and
add
pop
xchg
mov
sub
adc
xor
leave
das
lcall
jo
jo
sub
js
scas
into
push
aas
hlt
call
jmp
fsub
ss
push
out
enter
inc
cmp
in
aad
pop
mov
pop
adc
mov
adc
leave
insl
imull
jno
test
sub
add
outsl
pop
int3
push
cmp
mov
sbb
adc
aaa
xor
mov
fsubs
icebp
pop
test
adc
push
rcll
jne
jp
jne
jmp
popa
std
mov
jns
mov
xorb
cmp
jp
mov
fsts
jae
xor
mov
jl
mov
pop
mov
mov
call
sahf
stos
add
sub
mov
lret
aam
popl
push
xchg
dec
or
mov
push
movsb
xor
add
push
or
loope
and
shr
inc
scas
shl
ret
cwtl
mov
es
sub
insb
dec
dec
inc
mov
sub
push
sub
jp
sub
cmp
pop
and
xchg
push
push
pop
adc
push
rcrl
dec
sub
out
stc
icebp
xchg
insb
aam
mov
jge
xchg
in
mov
pusha
push
or
int
add
es
dec
mov
lock
mov
pop
ja
insb
lcall
dec
hlt
scas
jmp
mov
jae
push
sti
push
xchg
cmp
xchg
idivb
insb
out
les
outsb
inc
sub
jae
divl
jmp
mov
and
xor
sbb
mov
addr16
je
sahf
cmp
push
jmp
mov
inc
jecxz
shrl
orl
jl
mov
scas
shrl
push
iret
inc
lods
xchg
cmp
push
sub
and
or
pop
and
or
mov
pop
jmp
int3
or
sub
cmp
dec
sub
fldenv
mov
push
add
sbb
pop
xor
dec
test
addl
sets
and
pop
push
and
mov
adc
ret
and
push
pop
jo
ds
sub
stc
or
mov
jae
dec
in
aaa
inc
inc
pop
mov
aas
mov
sarl
xor
ja
xor
jbe
sti
cmp
mov
xor
adc
movsl
test
mov
mov
inc
pcmpeqw
enter
or
sub
sub
dec
pop
clc
in
lds
mov
dec
popf
cmc
cmp
push
addb
or
aas
cmp
push
add
out
fwait
out
xor
or
xchg
sarb
icebp
enter
xchg
movsl
cmp
dec
ret
pop
pop
and
xor
iret
pop
rolb
inc
pop
lcall
and
jae
ljmp
mov
ljmp
jl
out
repnz
push
adc
aas
ss
daa
xor
mov
outsl
int3
dec
add
test
push
popa
push
negl
xor
jg
insl
jns
push
push
loop
repnz
cli
dec
jge
mov
out
cmp
cmp
int
lret
jle
jnp
push
push
fldcw
popf
dec
fs
aas
popa
test
pop
ret
loopne
les
xor
pop
cwtl
cmp
mov
movsb
enter
addb
aam
repz
mov
lods
jl
sbb
jnp
outsb
cmpsb
movsb
out
lods
in
xchg
dec
outsb
hlt
xor
out
mull
mov
sub
pop
inc
imul
and
sarl
adc
jle
sub
imul
sbb
iret
out
test
clc
cmp
repnz
outsl
pop
add
push
lock
mov
out
roll
std
mov
pop
out
mov
pop
mov
mov
sbb
test
outsb
stos
je
sbb
and
ds
js
iret
inc
inc
outsb
call
adc
call
xchg
xchg
cmp
jecxz
aad
mov
jno
mov
mov
add
jns
push
mov
cmpl
inc
cld
mov
or
mov
std
in
mov
call
mov
aam
cmp
mov
test
xchg
sub
mov
pop
hlt
push
xchg
dec
push
cmp
fstpl
fimuls
jmp
sub
and
out
inc
dec
ss
jne
fstl
push
or
dec
mov
push
test
jb
jo
dec
nop
jg
inc
repz
cltd
jl
xchg
sub
imul
xchg
mov
mov
data16
and
mov
bound
inc
imul
add
dec
or
dec
fisubrl
int3
lea
daa
dec
fiadds
and
in
cld
or
fistps
dec
test
sti
and
add
add
sub
enter
mov
dec
sbb
cli
adc
aad
inc
cmp
and
adc
loopne
out
xchg
movsl
gs
pop
cmc
push
and
dec
mov
pop
sahf
out
jo
daa
into
stc
cmp
call
mov
xor
dec
out
or
pop
and
cmp
cmp
out
movsl
bound
addr16
add
mov
add
jns
rorb
hlt
out
out
push
outsb
add
adc
out
enter
ljmp
adc
pop
push
add
pusha
sbb
nop
mov
mov
repz
pop
daa
adc
bound
adc
mov
bound
mov
mov
xchg
fldenv
inc
andb
and
hlt
mov
cmp
or
filds
dec
shlb
jno
cltd
sahf
push
loopne
insl
lret
scas
push
and
jecxz
dec
es
sbb
popf
aad
jg
pop
fisubs
mov
test
das
or
out
xchg
sub
into
fadd
outsb
in
addr16
mov
jp
fwait
jb
fcmovnb
sahf
cmc
and
addr16
std
scas
push
mov
sbb
in
sahf
xchg
daa
out
iret
jne
ret
xchg
lret
cmpsl
daa
pop
xchg
jge
mov
dec
or
loopne
movsb
cld
mov
hlt
test
adc
ret
add
shlb
cmp
test
adc
and
inc
ja
xor
mov
mov
mov
pop
pop
dec
xchg
gs
rcll
mov
or
adc
pop
shl
sbb
lea
and
dec
mov
pop
push
repz
rolb
cltd
cmpsb
cmp
sbb
repnz
pop
movsl
sar
xchg
or
adc
andl
test
fsubl
xor
popa
push
mov
repz
scas
push
xor
xchg
push
add
jge
dec
mov
jne
ja
int3
pop
xchg
loop
lahf
in
ret
or
sub
xor
push
lods
sbb
lahf
mov
and
out
or
cmp
loope
enter
add
adc
xchg
mov
sbb
stos
push
sysret
aad
rclb
lea
out
test
cmp
in
cmpsb
sarl
xchg
push
xchg
xchg
shrl
sbb
mov
into
adc
cld
jno
cmpb
jne
jno
push
pop
lcall
fstl
xchg
xchg
test
cmp
stc
jae
jg
arpl
adc
or
mov
push
or
cmp
mov
or
dec
insl
jmp
dec
push
cs
insl
cmp
push
fidivrs
pop
xor
pop
lods
xchg
bound
push
mov
or
mov
xor
adc
jle
repnz
clc
js
push
xlat
adc
test
inc
paddw
mov
jae
arpl
and
iret
mov
xor
pop
fs
inc
aam
pushf
xchg
cmp
add
push
fwait
mov
ficompl
imul
mov
jge
gs
mov
ljmp
mov
outsb
je
cmpsb
fwait
mov
aam
cli
or
cmp
scas
and
push
mulb
mov
jge
xlat
movsb
shrb
cs
xor
mov
jbe
adc
mov
sbb
cld
sbbb
fsts
jecxz
dec
mov
mov
dec
dec
repnz
test
out
cmpsb
push
insb
imul
int
sub
and
lea
pop
and
mov
mov
or
push
pop
lock
ljmp
stc
mov
cmp
in
rorb
push
inc
outsb
lds
jmp
stc
jl
cmp
add
inc
idivb
shlb
jbe
sti
xchg
cmpsl
fcomps
mov
add
fstps
stc
loope
mov
shrb
fildl
and
stos
pop
in
or
arpl
insl
testb
sub
in
inc
mov
adc
call
scas
nop
push
ret
pop
lret
fwait
addr16
inc
pop
in
jp
arpl
sti
add
mov
jbe
pop
loopne,pt
test
mov
pop
cli
dec
imul
lea
test
xor
xlat
adc
es
sbb
cmc
fstps
xchg
ljmp
xor
lret
xchg
and
mov
xchg
fcoml
iret
aam
icebp
inc
mov
mov
dec
dec
inc
lcall
mov
test
clc
pop
and
or
addr16
test
jnp
adc
cld
es
cwtl
in
je
scas
cmp
push
cmp
mov
mov
cltd
lret
push
inc
out
or
insl
sub
lahf
cmp
add
and
mov
repz
mov
xchg
jecxz
nop
push
mov
popa
ds
daa
jmp
jl
andl
xchg
inc
movsb
cmp
fdiv
cmp
jge
inc
cmpsb
sub
jp
cmp
leave
mov
popa
cltd
or
test
ret
sbb
sahf
iret
leave
xchg
sbb
in
popf
dec
sub
in
and
xchg
mov
push
es
inc
add
sbb
pop
lea
mov
mov
cmp
xchg
pop
xor
insb
pop
cmp
pop
add
pop
shll
and
or
and
push
jno
aam
or
cltd
pusha
sbb
jne
dec
mov
lods
xchg
scas
inc
xchg
bound
lds
xor
test
lcall
data16
jo
nop
fsubl
adcb
dec
and
fstpl
das
inc
adc
pop
mov
fs
adc
push
int
sbb
adc
xchg
adc
jmp
push
sub
sub
rcl
push
inc
out
xchg
stos
ja
test
mov
adc
nop
fbld
mov
jnp
xor
mov
sub
pop
adc
std
outsl
ds
xchg
std
mov
das
imul
sbb
xchg
push
jo
repz
lods
dec
push
adc
or
outsb
xchg
pop
xor
jns
ret
inc
mov
jp
sub
xor
aaa
cli
jns
scas
sbb
pop
xor
aam
lock
cmpsl
fwait
inc
hlt
sbb
rolb
and
mov
fbstp
push
fldl
negl
xor
sbb
popa
xor
xchg
andb
stos
dec
inc
outsl
add
nop
xchg
xchg
pop
lcall
pop
or
call
inc
iret
mov
cwtl
inc
sbb
sub
insl
jp
lret
in
out
jmp
orb
sbb
popa
push
ss
adcl
push
inc
xlat
rcrb
std
adc
push
fnstsw
push
es
sahf
and
call
push
cmp
xchg
mov
int
dec
jp
and
mov
ret
sub
dec
xchg
fcoms
xchg
movsl
jb
cmp
or
jecxz
cs
and
cmpsb
mov
inc
ss
js
mov
lds
pop
mov
in
push
mov
pop
mov
pop
scas
dec
movlhps
rcl
mov
lahf
out
or
cmp
mov
xchg
xlat
test
fs
mov
stos
sub
pushw
cmp
repnz
shlb
or
dec
mov
fs
push
es
jo
fists
and
push
in
std
cmp
xor
mov
sbb
pushf
push
fmull
movsl
adc
add
out
and
add
xchg
mov
clc
xor
sbb
dec
aaa
js
insl
mov
imul
fadds
hlt
dec
adc
lea
into
or
sub
loopne
push
adc
inc
insl
mov
andb
lds
add
pop
push
push
popa
mov
mov
xchg
out
clc
rcr
adc
or
jmp
inc
int3
pusha
mov
sbb
test
sub
pop
repnz
push
push
cmp
les
shrb
jge
shll
std
sti
mov
mov
push
fmul
xchg
lcall
mov
inc
push
sub
push
imulb
pop
into
lds
dec
inc
cltd
popa
in
lock
mov
add
addr16
mov
es
mov
shl
dec
jmp
ficoml
jns
in
movsb
orb
add
add
testb
icebp
ja
mov
ret
jnp
stos
les
sub
adc
cmpsb
out
sbbb
dec
xchg
sbb
bound
mov
sub
rcll
dec
cmp
cmpsl
add
pop
jge
xchg
sahf
xchg
aad
sub
and
mov
test
push
ds
dec
cmpsl
call
xor
xor
jnp
pop
aas
iret
daa
inc
iret
or
rcr
mov
mov
jl
xchg
sbb
mov
pop
ds
dec
icebp
dec
or
out
repz
cmp
popf
inc
add
cmp
push
mov
mov
daa
pushf
adc
movsl
xor
outsl
subb
dec
xchg
adc
cltd
rcll
mov
jb
jmp
jl
mov
fcmovnu
rcrl
repz
shlb
ja
hlt
jo
xchg
daa
ja
sub
and
dec
push
pop
clc
cltd
and
adc
adc
loop
cmp
fcmovne
cwtl
arpl
bound
int
jno
mov
mov
sub
mov
movsb
test
xchg
stos
xchg
cltd
mov
pop
adc
and
sub
aas
dec
mov
mov
xchg
lds
in
loopne
shll
int
xchg
addr16
loopne
dec
or
cmp
fldcw
add
xchg
jecxz
mov
mov
mov
out
cmp
je
xchg
push
pop
lahf
cltd
jns
xor
lcall
mov
xor
ret
dec
stos
dec
sbb
rol
bound
push
fucomp
xchg
mov
leave
push
mov
sbb
xor
adcb
fcom
xor
cli
hlt
mov
jae
fs
popf
or
rorl
adc
xchg
xchg
or
cmp
jne
movsl
insl
insb
outsl
out
movsl
cmp
test
push
mov
dec
xchg
leave
std
into
mov
in
cmpsl
addr16
orb
mov
in
sbb
and
inc
cmpsb
or
popf
cmp
je
stos
or
and
repnz
xchg
mov
mov
scas
outsb
and
jnp,pt
jl
ficoml
lods
push
mov
xor
and
mov
sarb
jne
inc
sahf
push
lea
fsubrs
ret
bound
cmc
xchg
sub
imul
xchg
pushf
bnd
and
lods
fldcw
sarb
mov
scas
or
fisubrl
dec
jge
mov
in
loope
daa
aam
mov
lahf
call
test
jp
add
out
push
test
jle
fldt
fstps
stos
scas
sbb
or
sbb
xchg
pop
or
or
cs
sti
xor
and
add
lcall
in
add
fidivs
sbb
mov
sbb
shl
enter
dec
sbb
add
mov
stos
test
adc
std
in
push
or
push
mov
test
fdivr
bound
out
jne
xchg
mov
mov
mov
or
inc
aam
in
and
pop
jno
call
out
test
lea
mov
push
out
movsb
sub
adc
jmp
jmp
and
insb
inc
stos
mov
lods
push
in
dec
push
lret
dec
loopne
sbb
outsl
data16
and
cwtl
in
cmp
gs
inc
push
nop
in
mov
jbe
out
push
stos
fistps
or
push
add
add
jae
push
mov
mov
mov
jo
test
jp
aaa
push
add
daa
mov
idivl
lret
pop
sti
fbld
mov
addb
jne
push
cld
mov
push
adc
pop
cmp
outsl
jb
cli
xor
add
scas
sahf
jp
push
pop
pop
addl
jle
and
inc
push
cltd
push
and
ja
or
xchg
xor
push
scas
or
dec
test
lods
push
sbb
push
or
lds
and
mov
sbb
push
dec
sbb
fcompl
scas
cmpsb
sbb
inc
jge
push
sub
sar
dec
cmp
leave
fucomp
pop
and
pop
cli
hlt
dec
dec
aaa
cmpsb
imul
sbb
dec
cmpl
iret
cwtl
or
inc
jno
lahf
adc
sbb
push
sti
push
mov
jl
sub
out
mov
sub
jge
mov
push
cmc
lods
dec
add
in
pop
out
push
jne
scas
dec
popf
jb
je
mov
scas
sbb
inc
cmc
loope
pop
xchg
jne
arpl
xor
iret
push
mov
lea
pop
out
andb
sbb
pop
movsb
data16
popa
mov
test
xlat
xor
sub
xchg
or
dec
lods
in
rcrb
stc
jbe
add
testb
cmc
push
or
adc
jg
pop
ss
pop
adc
std
mov
mov
std
or
pop
push
jge
adc
jae
push
testl
cmp
dec
es
mov
imul
mov
lcall
sar
mov
in
cs
xchg
sahf
dec
pop
push
nop
cmp
in
and
and
or
inc
dec
mov
in
movsb
sub
xchg
lcall
mov
add
xlat
cwtl
sbb
and
pop
and
xchg
pop
in
or
sti
and
push
fisttpll
sbb
icebp
imul
xor
jns
nop
ja
popa
mov
add
mov
dec
lret
hlt
ror
int3
loopne
mov
and
dec
push
or
push
popa
mov
popa
stos
scas
or
lods
std
cs
negl
test
mov
popf
and
jne
test
pusha
rep
and
repnz
fcompl
mov
mov
je
xor
sub
scas
cmp
andl
jb
xchg
pop
hlt
dec
loope
xlat
mov
lret
xchg
inc
sbb
in
fdivrs
cld
out
jb
scas
sarb
cltd
mov
test
cmpsl
lcall
lea
mov
inc
adc
mov
jnp
daa
mov
push
sbb
arpl
jl
cmp
rcrl
aaa
rorb
xor
js
push
inc
stos
and
jae
les
dec
pop
shrb
pop
cmp
adc
jecxz
clc
xchg
push
inc
mov
arpl
ret
xchg
lds
dec
add
mov
test
ds
adc
mov
popf
or
mov
mov
jo
shll
ds
pop
pop
and
dec
nop
mov
cmp
push
mull
out
in
mov
cli
adc
loop
mov
lods
adc
in
or
pushf
xchg
into
movsl
mov
mov
test
push
jp
fisubrs
inc
push
dec
xorb
inc
insl
int3
test
push
lods
pop
dec
pushf
rcrl
mov
movsl
push
add
or
jb
das
das
rolb
mov
pop
incl
mov
mov
jnp
daa
pop
imul
pop
pop
ret
xchg
lret
push
clc
mov
hlt
or
cmova
mov
insl
loope
rclb
sti
sbb
cld
insl
adc
inc
fimuls
stos
ficoml
call
rclb
xor
imul
mov
xchg
fs
xor
icebp
sbb
dec
icebp
mov
sub
fcompl
dec
mov
ret
pop
pushf
cmpsl
inc
or
cmp
ds
adcl
fisubrl
hlt
push
pop
or
mov
cmp
dec
jo
inc
mov
loop
dec
das
mov
xor
cmp
mov
push
std
outsb
outsb
packssdw
adc
pop
dec
push
fstpl
xchg
inc
inc
mov
jae
mov
cld
sbb
add
mov
imul
and
adc
jns
mov
mov
pcmpgtb
addr16
sbb
icebp
inc
mov
pop
sti
and
fidivs
jl
add
pop
mov
jle
rcll
jno
loope
dec
or
adcb
jg
pop
dec
mov
fbld
mov
jo
ja
data16
shrb
les
mov
jae
int
lret
mov
test
in
insl
jge
daa
push
fstpt
data16
shlb
add
sahf
add
pop
shll
shlb
push
into
arpl
mov
addl
cld
lret
add
or
jne
and
push
mov
push
test
ficoml
inc
cmp
cmp
push
jo
lcall
cmp
fs
adc
add
aam
leave
sub
inc
repnz
mov
mov
out
iret
push
cs
dec
mov
dec
inc
xchg
xor
mov
mov
jmp
mov
add
dec
lods
shll
jb
inc
cmp
xorl
arpl
out
jg
scas
mov
imul
lret
mov
rol
pop
je
out
jb
push
lcall
xchg
inc
mov
stos
fwait
jne
dec
mov
nop
lock
test
test
sbb
mov
xchg
insl
mov
pop
sbb
loope
pushf
dec
sahf
gs
inc
xor
dec
or
sub
jle
sbb
gs
push
ja
mov
adc
xor
mov
std
std
lret
add
xor
add
imul
push
dec
sbb
pop
nop
stos
xchg
xchg
lock
cmpsl
cmp
cwtl
push
ja
js,pn
lods
fildl
hlt
movsb
in
outsb
adc
mov
je
sbb
add
pop
sbb
test
and
or
xorb
sbb
cwtl
sub
mov
outsb
dec
jge
out
sbb
aas
mov
jecxz
jp
bound
sbb
dec
aas
test
test
mov
xchg
jmp
iret
fdivs
mov
dec
insl
pusha
mov
dec
push
icebp
mov
sbb
cmc
lret
mov
mov
pop
cmp
mov
sbb
or
cmpsl
jne
dec
mov
and
outsb
dec
sub
jecxz
iret
rorl
outsl
push
pushf
je
mov
mov
addr16
xchg
xor
or
fcoms
xchg
sub
arpl
and
sbbl
test
push
nop
lcall
jmp
notl
inc
sub
fs
jbe
adc
imul
hlt
sub
shl
adc
aad
nop
shll
shl
cld
dec
fwait
ret
xchg
mov
add
mov
sbb
mov
imul
add
scas
sbbl
mov
push
imul
sub
fdiv
fidivrl
xchg
imul
pop
fwait
dec
rcrl
out
xchg
shlb
lar
xor
pop
and
mov
cmp
pop
gs
cmp
jg
ret
addl
aad
insb
dec
mov
push
fstpt
loop,pt
aas
lcall
lods
push
sti
inc
pop
inc
add
out
lods
push
iret
sbb
es
out
push
insl
add
clc
adc
mov
jne
push
loope
cmpl
subps
dec
jp
stos
lret
lock
test
xchg
xchg
outsb
mov
xor
test
add
sub
jmp
enter
mulb
jge
int3
jno
add
cmp
pop
orb
mov
cmp
cmpl
or
outsl
xor
mov
dec
in
mov
or
mov
inc
movsl
inc
fisubs
or
xor
sub
and
pop
sbb
das
sub
pop
add
fimull
sub
mov
and
sub
jb
lea
cmp
cmc
mov
push
cmp
fwait
rol
lcall
xor
dec
jle
sub
outsl
add
pop
inc
bound
jns
mov
sub
addl
mov
enter
out
xchg
enter
xchg
dec
xlat
iret
inc
sub
int
inc
push
fstpt
popf
test
push
inc
jp
xchg
in
push
xchg
mov
push
push
hlt
xchg
shl
lds
xchg
les
push
sbb
mov
mov
or
test
dec
push
xor
in
outsl
pushf
push
pop
insb
mulb
lds
call
scas
push
jnp
mov
inc
sbb
gs
lahf
ss
adc
lcall
negb
sbb
cmp
scas
cltd
in
outsl
pop
inc
cs
scas
in
out
lock
arpl
por
scas
xorb
dec
or
int3
xchg
dec
mov
cmc
fstpl
xor
add
adc
jnp
notb
ret
jno
js
fisttpll
mov
dec
insb
sbb
rclb
mov
pop
xor
sub
jb
mov
fcmovnb
pop
js
mov
shll
fwait
inc
dec
rcr
ja
aam
cwtl
cs
nop
mov
mov
inc
mov
xchg
cmp
add
pop
or
add
les
jg
test
test
jp
mov
call
mov
mov
popa
repz
js
sbb
pop
les
pop
push
ror
or
add
mov
cmp
sbb
and
cltd
movsl
xlat
lea
inc
jl
xor
nop
lds
stos
nop
movsb
pop
in
sbb
mul
aas
and
and
adc
out
insb
outsl
mov
jg
hlt
sbb
rcrl
lahf
mov
js
pusha
dec
fnstcw
inc
cmovae
fld
or
sub
test
jbe
inc
pop
out
mov
fnstsw
pop
jle
mov
fisubs
loope
lods
and
pop
xor
inc
and
push
out
sub
fists
or
pop
dec
lret
sarb
adc
xchg
shrl
add
jno
jge
lock
aaa
loopne
mov
stos
popa
sbb
push
jl
and
lea
out
imulb
and
inc
lcall
ja
int3
test
cmp
iret
loopne
inc
add
dec
outsb
jmp
filds
or
jmp
pusha
mov
mov
cli
mov
sti
sti
fldcw
sbb
lds
sub
add
test
fmull
jne
int
daa
jge
mov
dec
push
xor
xor
lret
aad
aad
and
imul
add
iret
pop
in
mov
xchg
fadd
sub
ss
pop
sub
cmp
jo
int
push
loop
dec
cmpsb
xchg
dec
push
shlb
movsl
inc
xchg
cmp
or
mov
mov
dec
mov
adc
or
xor
sub
inc
mov
jg
mov
aaa
sbb
ljmp
inc
repnz
cmp
push
or
rcll
arpl
jecxz
fwait
call
xchg
push
jb
jg
rcrb
clc
dec
rorb
test
int
sbb
je
mov
int
iret
pop
out
pop
xor
add
mov
cld
mov
imul
mov
iret
test
test
xor
xchg
pop
push
das
mov
mov
or
dec
out
movsl
and
push
out
and
push
sub
cmp
mov
mov
pop
cld
cmpsl
adc
ljmp
or
or
mov
push
call
push
cwtl
movsb
and
dec
movsb
push
aad
hlt
add
ret
cmp
popf
pushl
push
or
pop
in
cmp
xor
mov
scas
xchg
lahf
jmp
sti
ja
mov
pop
or
sbb
sbb
pop
enter
xor
fprem
movsl
mov
mov
pop
inc
and
add
rolb
nop
rclb
and
int
lret
mov
dec
jl
daa
call
mov
ds
push
add
cmc
iret
das
fistl
push
out
mov
std
and
sbb
mov
xor
adc
push
imul
sub
inc
push
fstl
insb
cltd
or
push
call
cmp
or
fldl2e
mov
jl
daa
cs
loop
rcrb
into
push
inc
push
push
js
jp
adc
ficoms
in
mov
or
xchg
insl
in
mov
imul
jg
mov
aas
xlat
jmp
call
mov
or
in
out
inc
mov
jo
shlb
fstl
fcmovnbe
pusha
aam
cmp
jns
js
mov
test
jle
xchg
sub
popa
mov
push
fsubrl
xor
in
pop
pop
cmp
pop
loop
push
cmp
xlat
or
enter
dec
dec
mov
pop
xor
mov
movsb
lods
fnstcw
dec
mov
cwtl
stos
cld
push
sbb
popa
push
mov
cmp
into
jns
mov
lock
sbb
lret
sub
outsl
mov
sub
xchg
xor
xor
sbb
mov
push
cmp
lahf
cmc
sub
std
leave
and
add
adc
out
sbb
push
adc
cmp
xchg
sub
jmp
mov
shr
ds
xlat
out
sahf
inc
icebp
test
ljmp
or
fstps
push
pop
adc
inc
mov
icebp
sbb
and
jo
or
cwtl
xchg
or
in
and
mov
outsl
push
call
or
mov
jbe
sbb
mov
mov
jno
mov
movsb
nop
cmc
mov
push
push
scas
and
roll
nop
jmp
mov
sub
jns
push
push
stos
aas
lcall
shl
iret
push
inc
cwtl
cmpsl
loope
or
outsl
mov
lcall
or
repz
adc
subl
sbb
add
mov
jl
and
pop
sbb
dec
jno
call
pop
cmp
pop
cmp
jecxz
enter
jbe
mov
adcl
push
and
lea
fiaddl
in
inc
out
cwtl
mov
repz
fdivl
jp
ljmp
icebp
sub
cld
pop
xor
in
cmp
cmpsl
jmp
sub
sbb
mov
lret
imul
out
scas
push
outsl
rol
inc
adc
and
std
lcall
inc
fisubs
icebp
stc
push
stos
out
scas
jge
es
scas
and
ja
pushf
and
xor
cmp
cmp
xchg
sub
dec
jp
mov
jns
dec
lds
outsl
hlt
into
cmpsb
pop
mov
fbld
mov
jl
clc
sar
adcl
add
or
xchg
or
nop
dec
aas
cs
mov
pop
mov
lds
test
pop
xor
jae
gs
or
inc
jae
loopne
in
dec
lahf
shll
mov
pop
or
std
jbe
iret
sti
loope
hlt
dec
outsb
loopne
test
cld
out
dec
lahf
xchg
sub
mov
outsb
test
xlat
ret
daa
push
sub
push
jo
cmp
pop
stos
loope
into
icebp
adc
and
pop
dec
insb
sbb
jns
cwtl
sbb
add
and
inc
pushf
cmp
dec
iret
adc
mov
les
fistpll
adc
outsb
and
repz
ret
pop
cli
outsl
inc
cmp
dec
cmc
mov
push
nop
mov
test
xor
or
dec
mov
push
imul
sub
stc
push
jle
xchg
int3
rorl
das
pop
mov
sti
push
push
testb
aad
enter
bound
adc
bswap
mov
aam
inc
ljmp
stos
aas
in
int
mov
cwtl
jae
and
sti
aad
cmp
lds
inc
stos
fbstp
andb
out
mov
push
xchg
jmp
mov
adc
mov
sbb
xor
cwtl
mov
pushf
jae
ss
adc
ja
mov
push
cmovnp
jnp
loope
push
sub
shll
sub
outsl
lret
pop
dec
outsb
mov
add
aaa
in
icebp
movsb
call
das
mov
dec
inc
stos
xor
imulb
mov
daa
xchg
hlt
add
jne
imul
dec
sti
and
dec
jp,pn
fsubl
mov
add
jl
dec
call
sub
lahf
mov
test
pop
clc
aam
xor
loopne
lret
sub
hlt
jb
xchg
in
test
aam
jae
inc
subb
imul
jecxz
or
pop
mov
xchg
mov
outsl
jbe
dec
fisubs
or
mov
mov
int
out
jbe
das
cmpsb
sbb
arpl
lock
sbb
adc
test
lret
andl
cli
xor
push
das
in
fs
iret
fnstcw
nop
push
inc
jecxz
inc
xchg
aam
test
mov
lret
mov
cld
fsubp
pop
push
push
fs
in
push
test
pusha
jmp
daa
repnz
je
out
xchg
shrl
cmp
movsl
in
mov
mov
stos
xlat
xchg
jp
jbe
cmp
cmpsl
mov
aam
leave
jp
loop
sbb
mov
sbb
jb
testl
aaa
into
sub
add
mov
or
mov
pushf
and
and
or
movb
lods
fstl
jge
and
xchg
ja
ljmp
fsts
inc
nop
cmpsb
pusha
pop
mov
inc
add
les
mov
jg
lock
mov
add
lock
xor
jbe
mov
lods
repnz
hlt
cld
shld
xor
not
out
or
push
xchg
cltd
xor
icebp
push
inc
mov
inc
scas
stos
push
ficomps
dec
enter
pop
lret
mov
out
icebp
dec
jbe
mov
xchg
jle
xor
jb
cmc
movsl
lock
jb
jbe
clc
je
mov
orb
jecxz
xchg
xor
rcr
sti
push
push
bound
pop
mov
cs
cmp
mov
cmp
in
cmp
fcomi
repnz
push
rcrl
pop
shll
int
mov
cmp
js
adc
add
push
push
or
test
ljmp
test
add
or
aad
inc
jecxz
inc
scas
push
xor
fnstcw
or
xchg
mov
xor
aam
mov
push
aam
loopne
xor
ljmp
mov
dec
shll
and
mov
xor
ficoml
je
mov
lcall
jle
fidivrl
mov
or
dec
popa
xchg
inc
sar
mov
les
stc
and
aam
jne
fwait
sbb
mov
bound
cmp
or
pop
add
jns
dec
daa
pop
xchg
inc
xchg
gs
and
and
or
fcompl
xchg
sbb
into
in
xor
outsl
aaa
out
and
loop
int3
rol
pop
stos
xor
adc
lds
rorb
test
jne
je
jo
sahf
jb
fucom
das
xchg
cld
xor
dec
clc
xchg
add
inc
fcmovnb
sub
rorb
fisubrs
stos
inc
insl
rcr
sbb
outsl
fists
push
add
mov
not
lds
jmp
fs
inc
sbb
mov
mov
addr16
or
daa
out
jge
jg
cmc
cmp
pop
or
inc
jle
xor
sbb
jne
adc
push
push
sbb
test
scas
dec
sbb
or
mov
pusha
pop
rolb
cmc
push
push
push
daa
push
mov
xchg
icebp
bound
fbld
out
or
mov
jo
cmp
pop
outsb
jns
adc
cld
mov
movsl
mov
cli
jg
jle
or
push
imul
mov
xor
bound
cmpsb
je
and
xchg
dec
popf
adc
add
inc
mov
mov
xor
xchg
lret
xor
pop
mov
jb
cli
out
cwtl
daa
xor
in
call
push
int3
or
idivl
push
mov
add
pop
cwtl
mov
ror
sub
sbb
fisubs
sub
inc
loop
negb
fildl
rcr
call
ficompl
jne
adc
out
aas
mov
fnsave
xchg
add
insl
mov
jg
cli
sahf
inc
lcall
int3
imul
jne
xor
sub
sbb
dec
or
push
mov
lret
push
mov
cltd
pop
mov
js
aaa
push
cmpb
mov
or
mov
cmpsl
ds
cmp
lea
sub
dec
scas
pushf
add
cmp
imul
test
adcb
cwtl
enter
jne
add
addr16
ffreep
inc
les
sub
and
jmp
xchg
andb
mov
xchg
lock
mov
cltd
insl
cwtl
ljmp
add
pop
out
push
arpl
frstor
and
and
xor
or
aaa
and
jle
in
das
stos
inc
scas
push
divb
pusha
jmp
lret
dec
mov
mov
cli
cwtl
xor
adcl
int3
rclb
pop
rcl
in
mov
xchg
mov
lret
and
push
sbbb
push
sahf
adc
stc
xlat
lds
clc
js
pusha
out
mov
pop
push
lods
pop
in
cmp
sub
orl
dec
cmp
mov
and
cld
jae
xor
jmp
imul
outsl
in
int3
cmc
leave
jle
sub
push
jp
stos
mov
sub
jb
out
shll
inc
in
mov
std
clc
lods
push
roll
pop
idiv
add
int
xchg
dec
movsb
jno
test
adc
or
iret
pop
xchg
adc
and
xchg
ljmp
test
push
scas
sbb
sbb
stc
js
jge
cmp
inc
or
mov
dec
cltd
cmc
mov
sarl
shlb
or
jne
lahf
aam
adc
add
mov
mov
lret
mov
push
lods
daa
pop
mov
pop
jl
mov
cld
lock
push
push
daa
mov
sub
mov
sub
xor
idiv
or
fsubs
in
in
sbb
pop
test
shrb
iret
ret
imul
dec
lahf
bound
push
pop
les
cmp
jnp
lret
xchg
je
jle
outsl
test
mov
dec
or
in
aam
sbb
imul
out
pop
adc
mov
aam
lret
arpl
rolb
ds
xlat
push
jmp
sub
xor
push
fiaddl
mov
repz
je
aad
imul
mov
ja
inc
cmpsb
lds
frstor
mov
mov
enter
shrb
jbe
addr16
call
cld
push
sbb
jg
sbb
adc
and
xchg
jle
dec
ret
scas
adc
test
and
insb
jl
or
loop
stc
stc
push
xor
leave
add
pop
mov
shl
add
jo
sub
jbe
inc
or
jge
adc
jmp
cmp
in
stos
sbb
es
xchg
push
jmp
popf
int3
mov
or
jo
rorl
nop
mov
lahf
xchg
jb
xchg
lcall
mov
push
sbb
mov
mov
adc
std
inc
mov
ret
mov
inc
sub
cs
cmp
dec
jo
stos
jge
jns
call
xchg
cmp
xchg
pop
fdivrl
xorl
push
or
dec
xchg
sbb
cld
pop
and
imul
adc
aas
in
outsb
push
sbb
out
inc
shlb
pushf
and
je
fstpl
xor
mov
aam
cmp
das
jmp
rcl
or
push
repz
decb
mov
mov
lds
test
mov
in
or
xchg
dec
mov
push
enter
stos
sbb
pushf
cs
xchg
scas
ja
push
inc
pusha
inc
mov
hlt
and
and
mov
loop
loopne
push
bound
insl
cmp
decl
push
add
cmc
jmp
idivb
mov
mov
stos
int
cmp
arpl
jle
nop
gs
xchg
jmp
pop
mov
ret
es
jl
in
je
ljmp
and
popa
pop
pusha
dec
pusha
mov
push
sub
xorps
pop
adc
inc
pop
or
popf
or
cmpsb
repz
out
xor
es
stc
in
mov
ret
xor
cwtl
mov
lods
push
push
js
jmp
scas
clc
cld
arpl
pmulhuw
lods
xchg
ljmp
dec
sahf
notb
jp
sbb
hlt
ja
mov
push
sti
pop
imul
test
xor
cli
add
cld
sar
ljmp
hlt
mov
or
iret
adc
push
movsb
inc
out
int3
or
dec
jbe
sbbl
movsb
xchg
testl
xor
mov
xchg
jno
nop
dec
mov
xchg
push
movsb
ret
jmp
add
jno
pop
mov
lock
jecxz
jp
hlt
mov
fs
test
pop
adc
out
fstps
jp
out
add
mov
lret
pop
push
mov
clc
push
pushl
mov
jge
mov
sbb
push
enter
mov
jmp
mov
fs
mov
mov
fs
rcrb
les
and
inc
inc
out
xorb
mov
aaa
bound
xchg
xchg
mov
bound
dec
shr
mov
pop
push
ret
repz
fsubl
inc
outsl
pushf
inc
adc
lahf
ds
nop
movsl
cmpsb
jge
xor
je
icebp
pop
fdivrp
popaw
pop
into
test
mov
sbb
movsl
jp
cmp
or
iretw
mov
adc
inc
mov
popa
das
add
fadds
and
dec
movsl
cmp
push
mov
mov
xor
lea
pop
xchg
daa
mov
jl
mov
inc
orb
xchg
test
cli
pop
cmp
adc
std
imul
inc
testl
ja
and
jbe
scas
negl
bound
idivl
xchg
aad
subl
lea
and
mov
lahf
push
lods
std
outsl
and
iret
sub
mov
mov
xchg
imul
repnz
pushf
ret
sbb
loope
mov
pushf
ss
dec
ret
rcll
mov
pushl
divb
lds
mov
mov
sbb
arpl
jecxz
dec
in
mov
ss
cwtl
mov
or
popa
inc
sarl
ficoms
ficoml
cmp
push
fldt
jnp
pop
inc
divb
bound
xchg
in
and
fiadds
imul
xchg
bound
icebp
xlat
cltd
cmp
cmp
add
lahf
inc
cmp
xor
stos
jp
mov
pop
in
ljmp
lods
pop
sbb
lahf
repnz
mov
lds
call
adc
adc
dec
pusha
dec
jle
jl
push
addr16
inc
jne
in
fisttpl
xchg
cmp
mov
int
push
fsubrs
xor
or
cmc
jge
mov
loopne
mov
andb
xor
xchg
or
cmp
sarl
sub
cmp
pop
mov
test
sbb
and
mov
test
test
jle
xchg
loopne
fwait
push
push
jle
std
pop
adc
movsl
xor
shll
lret
sbb
pop
adc
jbe
sub
add
loopne
mov
push
mov
lea
inc
jnp
inc
sti
mov
mov
cli
shr
in
outsb
sub
gs
mov
mov
mov
enter
pop
rclb
cmc
call
lret
xchg
mov
int
aas
jle
cmpsb
mov
cmpsl
das
mov
lcall
mov
add
repnz
cmp
adc
arpl
mov
test
inc
std
loopne
call
mov
jge
mov
cmp
xor
mov
sbb
adc
popf
cmp
subb
int
pop
lret
sti
adc
or
inc
add
sbb
xor
sub
sub
testl
mov
adc
imulb
clc
mov
ss
movsl
xor
cld
in
mov
mov
cmpsb
and
jne
xchg
in
insl
mov
xlat
fcompl
rcl
jnp
mov
daa
add
pop
xor
and
adc
adc
push
insb
jp
push
pop
xchg
add
sbb
ret
sub
aas
mov
test
mov
jo
mov
clc
cmpsl
testl
add
aas
sbb
dec
or
jge,pn
dec
and
jg
and
cmp
fldt
xchg
pop
cmp
notb
jge
pushf
andb
test
or
int3
in
inc
ficoms
mov
xor
cmc
sbb
sub
or
sub
mov
out
dec
xchg
cli
jnp
xchg
in
push
out
cld
into
adc
xor
andl
daa
out
cmc
pop
mov
insl
cltd
mov
addr16
jae
and
or
adc
fs
fwait
inc
popa
cmp
test
lods
stos
inc
sbb
jo
insb
and
test
mov
dec
lret
mov
dec
repnz
mov
xor
mov
mov
cmp
push
mov
sbb
or
scas
test
imul
add
xchg
push
jl
jb
iret
dec
stos
arpl
mov
mov
enter
outsb
in
sti
movsb
and
cmc
cli
adc
and
sbb
xchg
les
outsl
jnp
pusha
adc
testl
mov
xchg
pushf
imul
sbb
mov
sub
mov
mov
inc
repnz
dec
lcall
jnp
test
addr16
clc
xchg
rcrb
push
cld
mov
jle
mov
sub
mov
ret
pop
adc
in
push
cld
daa
scas
and
pusha
hlt
xor
inc
ss
ret
adc
orl
add
outsb
sbb
push
and
mov
aaa
movsl
push
adc
imul
and
mov
unpckhps
or
stc
mov
cltd
and
mov
test
jae
pop
jbe
jmp
test
sbb
andb
in
mov
jbe
push
sub
gs
dec
mov
stc
aaa
xchg
stos
cmp
cmp
mov
sub
pop
sahf
addb
pop
pusha
sbb
daa
pop
pop
jl
lock
faddl
inc
xchg
push
lcall
pop
scas
movsb
out
imul
and
adc
aam
jne
lcall
mov
hlt
loopne,pn
loope
sbbl
mov
lods
pop
cmpl
pop
mov
inc
push
insl
adc
pop
cltd
or
stos
arpl
dec
push
cmp
out
dec
pop
mov
add
sbb
ficomps
std
sbb
insl
jg
jae
cmp
push
out
dec
loop
xchg
mov
mov
jle
mov
stc
repz
jp
sahf
ljmp
test
push
xchg
push
sbb
or
popa
aad
push
lods
add
fcoml
dec
test
and
aaa
stos
shll
adc
mov
add
lret
adc
sbb
out
andb
inc
jg
stos
int
push
push
jnp
push
sbb
imull
addb
shrb
inc
in
subl
push
mov
test
std
xor
pop
mov
jg
dec
mov
fidivs
pop
or
push
cmpsl
dec
mov
rcrb
or
scas
aam
outsl
clc
shrb
enter
test
ret
xchg
pop
outsl
std
fs
pop
or
inc
data16
stos
popf
inc
xor
das
inc
sahf
push
lret
push
mov
clc
jle
repnz
in
cmp
movsb
int3
and
pop
push
xor
lahf
fnstcw
inc
adc
cmc
mov
or
mov
dec
aas
loop
pop
cwtl
push
pop
inc
add
sub
xchg
inc
mov
in
push
pop
cs
push
mov
mov
dec
or
pop
dec
jl
sahf
nop
leave
imul
sti
hlt
mov
cs
add
mov
mov
jmp
push
dec
push
pusha
sti
inc
adc
jno
test
nop
jb
std
sbb
into
jnp
mov
sub
aas
out
mov
outsb
stc
mov
aam
inc
cmpsl
add
dec
in
popf
lds
mov
jne
out
movsl
adc
divl
orb
into
out
in
xor
pop
and
sbb
std
cli
cli
mov
lods
cs
sub
lea
insl
lock
add
enter
stos
scas
mov
jle
pop
in
lahf
test
pop
ljmp
adc
cld
ds
rclb
and
insl
in
sti
and
leave
popf
jno
data16
fst
scas
adc
adc
loopne
jmp
test
inc
clc
and
push
lret
xor
jg
fwait
shrb
mov
add
rorb
mov
iret
mov
mov
sbb
cmpsb
push
jnp
or
in
push
sbb
outsb
loope
sbb
sub
dec
lds
loopne
push
fxch
ja
sbb
dec
mov
aam
push
sbb
ljmp
mov
jge
sub
cmp
or
pop
js
aaa
cmp
pop
mov
xchg
into
push
test
daa
push
fiaddl
dec
cmp
les
mov
mov
aad
and
fcomps
rorb
cmp
pop
idivb
push
pop
icebp
cwtl
cmova
adc
or
adc
out
pop
cmc
rcrb
test
out
popf
xchg
ja
xor
fistl
inc
ret
call
xchg
mov
inc
lock
add
fstps
jge
repz
iret
dec
pop
out
lock
xor
icebp
fisubrs
sub
mov
mov
imul
xor
lods
or
inc
add
xchg
sub
xlat
mov
cmp
mov
mov
popf
push
jb
push
enter
dec
orb
adc
shrb
in
stc
and
mov
es
mov
push
mov
mov
imul
shll
das
mov
aas
cmp
jns
jbe
and
inc
pop
inc
out
enter
ss
bound
fldl2e
mov
popl
loope
addr16
inc
lea
lret
add
xor
test
sub
mov
je
add
inc
jo
or
movsb
or
pop
xor
mov
jmp
mov
inc
inc
cmp
and
push
dec
dec
xchg
jmp
xor
jle
out
ljmp
push
call
pop
add
cmp
into
pushf
sbb
push
int
fistl
enter
lods
lock
scas
rolb
adc
out
cmp
in
out
jp
jns
jno
sub
and
push
jl
in
xchg
pop
add
mov
dec
inc
adc
insb
movsl
std
cmp
sbb
std
jmp
xor
and
addr16
push
sub
and
loope
and
out
or
mull
movsl
rolb
lds
clc
push
mov
jg
pop
mov
call
ret
test
push
es
iret
ja
jge
cmpsl
jp
ja
mov
ljmp
add
into
sti
dec
int
out
push
sub
mov
push
adc
cmp
insb
push
xchg
movsl
pop
or
xor
lods
and
add
iret
pop
dec
cmp
rolb
sbb
inc
ljmp
popl
or
pushf
out
lret
cmp
lock
mov
out
xlat
add
xlat
xchg
imul
cmp
sub
outsb
popf
xchg
adc
in
pop
push
adc
int
faddl
jns
mov
xchg
cmp
xchg
imul
sbb
xor
jae
idivl
in
fcmovne
push
sahf
pop
in
jecxz
pop
or
in
inc
jmp
push
in
das
sub
dec
sub
add
push
jae
push
aam
jns
and
leave
or
push
jae
pop
rolb
cmp
pushf
add
jp
cmp
bound
sub
popf
jnp
and
cmpsl
push
jecxz
sub
test
inc
ljmp
lods
mov
out
dec
ret
or
push
inc
pop
arpl
loop
push
imul
mov
mov
pop
inc
jnp
push
andb
movsl
and
sahf
sub
mov
lods
data16
or
or
cld
lea
mov
push
cmpsb
int
pop
movsl
jecxz
xchg
rcrl
cmpb
add
inc
mov
add
sbb
push
xor
adc
pop
xchg
enter
push
dec
fsub
inc
and
aad
dec
outsb
popf
push
movsb
and
adc
cmp
pop
jecxz
iret
or
cli
pop
and
mov
je
pop
mov
aam
xchg
adc
bound
lds
test
inc
pop
mov
adc
mov
cmpsl
and
leave
sbb
cwtl
sbb
ret
in
jne
add
or
stos
in
xor
ret
inc
fidivs
add
fcompl
or
mov
sub
adc
cmc
mov
cld
xchg
lods
mov
in
ret
and
scas
xor
lds
add
mov
push
cs
inc
das
jg
sbb
push
cltd
jg
cltd
adc
sub
in
or
dec
mov
test
les
add
insl
popf
pusha
mov
sarb
lret
jnp
or
ret
push
pop
sbb
cmp
jo
jge
push
or
inc
sahf
insl
cli
sub
jecxz
and
xor
inc
inc
push
mov
push
cwtl
arpl
mov
or
jnp
test
aas
ret
outsb
inc
mov
mov
out
in
mov
ljmp
jmp
ret
cli
out
enter
mov
push
jmp
jns
cmpsb
test
cs
jl
mov
shrb
std
pop
retw
rcrb
mov
cmp
sahf
rclb
lock
ljmp
enter
xchg
adc
push
jle
or
xor
lret
push
sbb
imul
mov
push
je
fwait
out
and
jb
sub
loope
jno
pop
call
dec
movsl
jp
mov
scas
push
ja
negb
mov
jl
sbb
and
mov
or
adc
jo
pop
jbe
xchg
pushf
gs
sbb
rcrb
xchg
jns
mov
gs
xor
ds
mov
in
mov
xor
rcl
test
lock
xlat
mov
push
into
imul
lret
xlat
iret
push
enter
mov
dec
les
sbb
or
or
cli
add
incl
or
repnz
cmp
push
mov
icebp
stos
mov
adc
push
sahf
daa
cmp
arpl
pop
pop
mov
out
mov
jmp
jmp
and
jns
sbb
jo
ljmp
cli
dec
pop
leave
je
pop
push
pop
and
je
lds
cmpb
cmp
std
lods
adcb
icebp
push
pop
lret
mov
cmpsl
daa
sbb
insb
push
mov
loopne
cmc
hlt
xchg
test
xchg
dec
rorb
stos
call
cmp
sbb
mov
pushf
and
cmpb
mov
clc
jnp
loopne
pusha
popf
cmp
movsl
lea
adc
cmpsb
xor
arpl
mov
js
xlat
xor
xchg
push
imul
stos
ficoms
jle
movsb
movsl
xchg
mov
shl
std
jae
cmp
mov
inc
dec
push
out
xlat
mov
or
and
mov
popl
orl
shrd
lcall
mov
stc
pop
xchg
push
pop
inc
negl
loop
push
mov
xchg
dec
mov
mov
and
mov
int3
xchg
push
inc
push
xchg
sbb
pushf
push
dec
dec
xchg
jbe
gs
out
and
adc
repz
lds
sbb
popa
jae
aaa
mov
and
adc
in
movsl
lea
jns
arpl
inc
out
mov
popf
xchg
test
mov
inc
in
push
jno
das
ja
je
xchg
scas
inc
inc
movsb
and
ss
push
jmp
lret
shll
or
pop
or
mov
inc
jl
jmp
jno
leave
addr16
xor
or
push
lods
xor
fcoms
jmp
push
negl
xor
in
xchg
shll
pop
push
fwait
inc
bound
js
fwait
and
sarl
add
data16
jb
pop
js
loopne
xor
jnp
ljmp
add
inc
pop
inc
push
add
cld
push
pop
adc
mov
pop
jmp
leave
sbb
or
mov
aas
cli
popa
icebp
arpl
bound
dec
jns
mov
jb
mov
test
xchg
sub
xor
jns
sbb
xchg
lcall
add
add
sub
mov
insl
out
adc
jge
mov
or
stc
xlat
xor
mov
out
shll
or
sbb
lea
add
inc
pop
pop
cmp
loop
outsb
and
call
fldl
mov
lahf
or
std
and
pushf
mov
xorb
xchg
cwtl
push
out
mov
cwtl
mov
mov
lret
call
cld
out
dec
fxch
adc
pop
xchg
jae
xchg
dec
pushf
sub
or
lock
enter
mov
ja
pop
sbb
data16
mov
and
push
sbb
pop
push
mov
add
les
adc
fidivl
scas
hlt
movb
lods
push
or
dec
mov
test
and
xor
and
cli
fcoml
roll
pop
add
lcall
mov
dec
or
dec
and
and
sub
repz
push
insb
inc
or
pushf
sbb
jne
imul
sbb
in
sti
clc
dec
adc
dec
add
sahf
and
cmp
add
sti
popf
outsl
sub
in
rorb
adc
std
jg
sub
or
ret
sahf
mov
mov
jle
cmp
adc
and
sub
movsb
aas
sahf
push
mov
testb
daa
ret
inc
or
repz
popa
pop
or
mov
xlat
adc
push
ret
cmp
adc
movsl
inc
pushf
jecxz
or
jmp
push
pop
rolb
pop
call
jge
dec
push
mov
stos
std
mov
xchg
sub
popa
add
add
mov
lds
add
cwtl
call
fidivs
ja
sbb
cli
mov
jnp
xchg
pop
or
dec
pop
lret
roll
xor
xchg
test
fistpl
mov
fidivrl
ret
mov
rorl
xor
not
adc
mov
or
or
jno
cltd
push
call
mov
ret
lds
sub
cmp
sub
xchg
addb
xor
test
push
sbb
aas
hlt
mov
sub
inc
sbb
shlb
pop
test
sarl
xchg
dec
pusha
mov
xchg
jne
mov
pop
mov
fs
fcmovbe
add
mov
sbb
inc
pop
rcl
add
je
loope
daa
sbb
cbtw
sub
jge
mov
or
xor
outsl
sbb
fidivs
pop
mov
lods
xor
or
test
loop
xor
push
push
push
idiv
outsl
xchg
dec
or
jae
cmp
mov
or
fadds
fdivr
int
ja
xchg
out
ret
nop
dec
pop
push
mov
scas
inc
mov
shlb
mov
cld
imul
sti
pop
push
out
imul
xor
push
cwtl
xchg
idivl
or
rcrb
paddsb
dec
push
fnstcw
gs
inc
pop
pop
inc
fidivs
xor
push
cltd
inc
or
and
outsl
mov
imul
push
popf
hlt
pusha
adc
aam
movsl
and
cmp
pop
in
adc
stos
adc
inc
inc
pusha
sbb
add
inc
ja
prefetch
notl
loop
sarb
mov
xchg
xchg
cwtl
and
call
mov
jmp
scas
adc
fs
je
push
inc
sarb
push
shl
or
adc
addr16
inc
xor
jnp
mov
ret
mov
push
sbb
lds
loop
sbb
lods
stos
insl
adc
sbb
cs
popf
stos
mov
mov
mov
inc
xor
cld
sar
stos
test
dec
outsl
fcmovbe
imulb
lret
xor
pop
dec
fimuls
cmpb
fisubs
popf
fxch
pop
push
std
out
adc
aas
inc
enter
lret
add
lcall
cld
and
loope
ret
xlat
add
je
dec
ds
jle
inc
adc
test
out
je
cmp
or
pop
in
add
dec
jl
jns
pop
push
clc
or
mov
adcl
fmul
adc
popa
movsb
scas
xchg
ret
xor
jno
mov
jbe
insb
xor
push
shll
jecxz
push
mov
movsb
cs
out
outsb
mov
or
mov
jp
mov
aas
mov
bound
sub
add
xchg
std
sti
inc
mov
aam
jecxz
mov
movsl
leave
jle
dec
es
std
stc
or
sub
pop
loop
aad
repnz
aaa
mov
push
pop
lods
push
inc
jle
mov
mov
clc
pop
sbb
dec
aam
stc
sub
faddl
in
mov
sub
mov
pop
or
inc
push
mov
mov
jb
into
mov
dec
add
xchg
es
outsl
popa
daa
daa
sub
iret
icebp
dec
les
jmp
jecxz
dec
lods
inc
repnz
or
push
xchg
push
sbb
push
push
stc
ret
rorl
or
popa
es
xor
and
mov
popa
repz
insl
std
or
add
or
cmp
mov
sub
push
fistps
xor
in
jge
mov
arpl
push
adc
lcall
loope
sub
jae
mov
fidivl
mov
in
dec
ljmp
inc
cli
lds
out
and
xchg
outsb
rcrb
jge
sar
push
nop
sub
mov
push
dec
iret
arpl
test
imul
inc
inc
repnz
pop
gs
ret
mov
clts
dec
aas
inc
filds
or
mov
fdivrs
push
sub
outsb
mov
fsubl
dec
lods
cli
cmp
mov
subb
lret
mov
push
pusha
dec
out
and
or
and
push
sub
and
les
mov
jno
jl
sti
and
fnstcw
lds
sti
pop
adc
or
pop
or
xor
je
scas
pop
mov
test
lods
outsb
lds
cs
add
mov
adc
sbb
push
scas
movsl
sbb
fdivs
mov
cmp
loope
jne
int
push
cli
mov
xchg
lret
jb
add
out
cmc
cmp
leave
mov
jo
mov
jmp
aam
ljmp
in
jnp
les
pop
cli
shld
mov
cmpsb
pop
adc
in
lods
addr16
iret
aam
pop
sbb
mov
arpl
lods
imul
pop
cltd
fldenv
dec
and
ss
shrb
je
clc
push
jnp
mov
mov
sbb
fisubrl
stos
jae
es
sub
or
xor
outsl
push
fstps
xchg
jnp
jnp
repz
or
push
add
movsb
int3
dec
addr16
adc
dec
xchg
lahf
enter
daa
xchg
pop
push
xor
mov
std
ja
mov
sbb
push
xchg
outsl
in
add
or
std
bound
lret
xor
shlb
jnp
insb
mov
aas
pushf
cld
test
call
xlat
jno
lcall
inc
xor
push
sbb
sbb
ret
shrb
fld
in
sbb
test
loop
movsb
pop
xor
out
inc
xchg
mov
pop
adc
sbb
xchg
leave
push
push
das
cld
xchg
pop
xchg
aad
cmp
sub
jb
ret
ret
div
cmc
adc
nop
adc
sub
inc
add
adc
dec
movzwl
sbb
mov
in
ja
jge
xchg
mov
out
outsl
jnp
push
add
cmc
pop
cmp
icebp
jnp
sub
lock
sbb
mov
lret
inc
fistps
inc
jae
shll
test
insb
sahf
inc
in
adc
cmc
cmp
out
lret
mov
into
jns
sahf
aaa
insl
int
sub
adc
into
clc
adc
or
xor
xor
cmc
aaa
nop
cwtl
rol
dec
repz
arpl
scas
cmc
add
jg
add
xor
pop
fs
or
adc
repz
inc
pop
test
sbb
or
cmp
out
rol
out
enter
fucom
inc
sahf
push
pop
pop
int3
scas
mov
and
cmp
fsubrl
addr16
sbb
jle
mov
adc
out
arpl
or
lock
mov
mov
popf
push
cs
sub
lock
sub
cld
mov
inc
push
fistpl
lods
movsl
rcll
int
push
gs
pop
mov
jp
dec
jg
inc
jl
pop
jmp
adc
mov
mov
sbb
lret
test
ds
enter
sarb
adc
push
in
jbe
outsb
leave
aam
jge
sub
push
jnp
cld
pop
loopne
call
add
mov
test
jge
mov
je
mov
out
cmp
sub
xchg
jb
add
sub
out
test
rcrl
aad
jmp
imul
and
push
xor
mov
int
xor
jo
cmc
in
cmp
cmp
or
mov
ret
push
cltd
sbb
add
rclb
dec
sub
daa
gs
xor
jbe
add
pop
les
mov
lret
loop
add
dec
jbe
mov
sbb
ljmp
mov
pop
cmp
cmp
xchg
dec
pop
dec
test
xchg
pop
movaps
lret
mov
js
out
push
or
or
cwtl
insl
fidivl
sarb
mov
inc
pop
rcl
xchg
and
mov
lahf
je
test
cmpsb
inc
in
jmp
jnp
movups
insl
fidivrs
jo
and
addr16
push
gs
sub
into
in
cmpsb
into
adc
xchg
xor
push
mov
lds
sahf
sarl
xlat
adc
mov
movsl
pop
mov
push
lds
push
scas
outsl
sbb
mov
arpl
arpl
cmp
jp
sarb
fadd
lods
out
mov
inc
inc
jg
mov
scas
dec
stos
aam
xor
sub
adc
and
ret
pop
mov
addr16
pop
adc
mov
mov
outsl
add
rolb
gs
or
mov
mov
dec
xor
inc
add
aam
gs
add
lea
mov
mov
fisubl
daa
mov
out
jne
negl
cltd
xchg
rorl
jbe
inc
adc
lahf
int
int3
push
adc
stos
mov
mov
pop
lods
jp
pusha
insl
mov
pusha
imul
mov
xchg
out
mov
fimull
inc
sti
jecxz
add
repz
xchg
jmp
out
or
mov
pop
jbe
jmp
or
loop
fisubrl
dec
popa
mov
repnz
loope
aas
cmc
mov
add
rclb
les
addr16
in
jle
outsl
sub
push
inc
sti
stos
inc
dec
cli
xchg
lock
dec
out
ret
cli
or
cli
mov
or
mov
mov
loope
jge
fsubs
icebp
fisttpll
jle
stos
sti
mov
sti
cmp
daa
mov
nop
in
pop
or
adc
jmp
popa
adc
imul
mov
adc
mov
in
sub
shrl
xchg
mov
insb
pop
xorl
inc
aam
dec
mov
mov
dec
pop
jne
add
repnz
mov
lret
inc
iret
clc
es
adc
aaa
nop
xor
pop
stos
push
xchg
jae
cld
xchg
scas
daa
cld
sti
jns
gs
sahf
jl
loope
mov
xchg
pusha
enter
cli
bound
cmc
es
rorb
fisubl
sbbl
popf
test
pop
int3
stos
fwait
and
inc
pop
or
xor
dec
dec
jbe
cs
or
dec
push
in
les
xor
push
repnz
loopne
adc
mov
fildl
shrb
jnp
aas
mov
outsl
lahf
jle
adc
push
inc
mov
xchg
cltd
inc
lret
pop
push
notb
rolb
jnp
hlt
inc
jb
nop
outsl
cmpsl
in
addr16
push
dec
aas
popa
hlt
xor
inc
addr16
sub
xchg
push
ljmp
jbe
xorl
test
in
gs
aas
mov
shrl
test
cmp
xor
push
out
movsb
xchg
jp
out
push
fwait
dec
jne
inc
cmp
cmp
mov
aaa
and
jp
sbb
cmpsb
hlt
jge
flds
fcmovnb
scas
inc
mov
cmp
inc
xchg
stc
mov
insl
iret
adcl
stc
into
xor
sub
test
loopne
jne
push
stos
loop
xor
enter
xchg
enter
pop
push
movsb
mov
insb
mov
add
jb
xor
stc
jecxz
mov
mov
jl
cld
shrb
push
mov
add
jecxz
cmp
leave
enter
cmp
ds
in
mov
pop
rolb
and
add
mov
ljmp
arpl
xor
lds
jg
enter
pusha
pushf
clc
movsl
jmp
lock
call
push
fisubrl
adc
jl
mov
sub
jge
loope
test
sub
push
bound
int3
out
in
inc
test
cmp
in
das
sub
or
ja
push
cmp
scas
push
xchg
pop
dec
pushf
xchg
repz
inc
xchg
mov
cmpb
cmp
jp
dec
push
mov
stc
add
fcompl
addr16
push
push
xor
inc
loopne
or
nop
push
dec
lds
repnz
or
jno
ja
adc
and
lret
push
inc
mov
mov
pop
ja
int
add
sarb
sahf
xor
jae
je
push
push
pop
and
cli
iret
pop
inc
lret
out
into
std
mov
int3
dec
jno
cmp
xor
scas
inc
out
loop
test
fwait
sub
data16
addl
mov
hlt
mov
jno
out
mov
jbe
adc
lods
adc
adcb
int3
inc
cmp
dec
pop
lods
mov
push
mov
scas
int
mov
dec
jo
mov
jmp
rcrl
add
adc
cli
mov
fcmovbe
int
lock
inc
sub
out
fists
adc
ficoms
inc
ret
adc
jecxz
ret
xor
fwait
jge
loop
jnp
push
icebp
xorl
in
xchg
int
xor
fdivs
das
sbb
push
mov
sbbl
and
cmpsl
pusha
add
roll
cli
xlat
and
lock
and
jae
mov
movsl
sub
ds
in
inc
mov
lcall
mov
int3
inc
adc
stc
into
fwait
stos
xchg
or
ret
inc
mov
pop
push
pop
xchg
in
ret
pop
shll
sub
jns
andl
enter
mov
pushf
cld
add
cmc
cmp
xchg
push
insl
out
fwait
mov
pop
pop
mov
jnp
es
loopne
sub
pop
jb
movsl
add
xchg
inc
fdiv
icebp
mov
push
and
test
push
call
sti
and
sub
mov
xchg
sbb
enter
inc
add
inc
push
adc
imul
cmpsb
sub
xlat
loopne,pt
jle
out
mov
push
cmp
test
popf
imul
mov
data16
dec
sub
mov
mov
iret
and
sub
push
sbb
or
test
inc
shl
cmp
sbb
nop
cmp
adc
cmp
jb
xlat
mov
jmp
orl
sbb
iret
ret
imul
jl
add
xchg
dec
push
dec
pop
mov
test
mov
orl
dec
ja
adc
sbb
out
enter
dec
jmp
sbb
cmpsl
sahf
mov
fimuls
mov
inc
cltd
mov
sub
pop
ret
dec
jnp
or
pop
repz
jge
cmp
out
inc
mov
pop
roll
xlat
ss
movsl
and
das
test
nop
scas
out
scas
dec
dec
add
pop
fisubrs
and
push
push
xchg
xchg
orl
sub
sti
dec
pop
cmp
dec
repnz
mov
fstp
jns
mov
imul
xor
scas
or
xor
sarl
xor
xor
inc
mov
fsubrp
pop
sbb
je
aas
inc
push
xchg
push
aaa
dec
insl
fstps
test
dec
lock
inc
insb
pop
pcmpgtw
pop
dec
es
cmp
adc
push
repz
mov
push
pop
pop
cmpsl
lods
imul
xor
sarb
and
iret
sbb
and
aad
cmp
test
jmp
in
xor
mov
shrl
lcall
inc
call
dec
and
push
fs
or
add
mov
andl
cltd
mov
push
xor
lods
test
push
sub
mov
sub
sub
cmp
nopl
mov
or
jb
push
fs
sbb
pop
rcrb
adc
fs
mov
add
cwtl
xor
ds
push
popf
pop
out
in
fisubl
push
cvtdq2ps
in
cld
stos
xorb
imul
outsb
pop
push
pushf
cmp
ja
mov
dec
sti
jl
cmp
fsubl
sbb
popa
pushf
enter
mov
add
mov
lret
ret
push
xchg
dec
ret
push
call
mov
rcr
movsb
jb
sahf
and
mov
je
push
sbb
mov
xor
mov
test
sub
clc
jmp
pop
inc
mov
cmp
jnp
loop
mov
jp
jbe
aad
test
ss
pop
and
add
shrb
sub
cs
andl
xor
rcll
inc
push
fldenv
stc
adc
test
mov
mov
imul
inc
mov
jno
fnstenv
fisubs
insb
popf
repnz
int
jl
push
or
jns
push
push
fdivr
mov
jae
ss
and
lds
or
in
add
outsl
sbb
xchg
movq
pop
mov
mov
pop
nop
shrl
mov
stos
and
fucomp
sbb
xchg
push
mov
xchg
mov
jo
adc
ds
push
inc
orl
pop
sbb
xor
add
lock
into
mov
push
mov
fldl
dec
rorb
sub
daa
into
jp
hlt
int3
dec
outsb
mov
rolb
pop
inc
insl
xor
js
ss
pop
xchg
cmovs
shr
ror
sbb
jl
and
push
inc
mov
shlb
ret
daa
fdivrp
jns
jp
lds
adc
mov
ljmp
sbb
daa
cmpsl
hlt
add
mov
jmp
mov
and
hlt
rcl
in
jecxz
aas
in
xchg
jge
dec
lahf
push
pop
ror
mov
enter
push
jae
lahf
das
ret
jmp
in
imul
in
subl
and
rol
and
jg
pop
pop
adc
mov
popf
test
inc
testb
hlt
mov
aaa
ret
adc
lcall
and
mov
mov
push
js
rol
xchg
push
or
pop
es
fadds
adc
fidivs
push
jb,pn
sbb
sti
out
mov
pop
xchg
aad
push
pop
out
inc
ficomps
hlt
cs
stc
push
add
lea
adc
pop
arpl
fimull
add
test
mov
cmpsl
adc
adc
mov
xchg
sarb
nop
xor
xlat
pop
in
inc
pop
push
cmp
shll
in
jge
inc
jnp
imul
xchg
es
mov
out
push
aam
int
leave
lods
xor
or
loopne
and
mov
jmp
mov
mov
outsl
mov
push
lea
mov
or
enter
or
lcall
stos
mov
fs
adc
fsubrs
shrb
adc
dec
lods
inc
pushf
scas
adc
lea
pop
xchg
cmp
pop
adc
in
mov
icebp
fsubrl
aas
hlt
sub
jns
sub
sar
call
or
sti
add
mov
dec
call
ror
in
dec
sbb
or
mov
inc
mov
addr16
xchg
cmp
int3
loop
dec
sbb
and
cmp
mov
or
in
les
es
mov
add
clc
dec
aad
jae
mov
mov
cmc
mov
and
jo
lret
mov
mov
pop
pop
nop
lock
fidivl
int3
dec
pop
add
mov
das
sbb
adc
das
xor
lods
mov
xor
pop
dec
std
xorl
inc
add
hlt
movsb
imul
or
popl
mov
les
cmp
in
xchg
adc
cwtl
cmpsb
sbb
xchg
pop
or
and
adc
cltd
dec
sarb
ljmp
pop
aam
sub
pop
popf
jecxz
adc
cmp
fiadds
notb
jl
mov
cmpsb
push
hlt
and
insl
jmp
into
mov
std
stc
mov
jbe
add
xor
loopne
loopne
xchg
mov
pop
es
mov
cmc
sbb
fwait
push
test
rcrl
pop
mov
mov
cmp
or
addr16
in
adc
and
jnp
mov
arpl
fldenv
enter
pushf
cld
push
in
sub
std
andb
stos
dec
ficoms
sbb
push
or
out
cmp
push
jle
popf
les
sbb
ljmp
aam
sbb
dec
fdivr
xchg
ljmp
push
pop
adc
pop
data16
sbb
inc
pop
test
lret
imul
xchg
cwtl
push
lcall
arpl
stc
push
pop
dec
popf
addr16
add
loope
inc
fpatan
jo
rcrl
dec
in
data16
or
and
dec
or
or
add
jl
mov
mov
loopne
data16
jne
sahf
dec
or
loope
jne
cmc
loopne
xlat
dec
inc
jns
cltd
or
clc
repnz
fiaddl
shrb
cs
daa
xchg
dec
push
dec
cmc
ljmp
orb
into
testb
and
cmpb
mov
sahf
ljmp
cs
test
jbe
mov
mov
sbb
decl
lret
repnz
lods
sbb
sub
mov
add
fyl2xp1
stos
xchg
shlb
in
mov
lea
imul
jge
ficoml
dec
loop
jb
aaa
inc
es
jne
pop
mov
out
adc
sbb
jbe
adc
mov
mov
mov
orl
sbb
jle
mov
inc
fsubl
push
bound
push
lea
icebp
call
mov
leave
and
das
scas
lcall
pop
ret
sbb
stos
mov
mov
add
xchg
imul
dec
jle
mov
pusha
push
stc
jl
scas
repnz
ss
es
ljmp
jmp
ljmp
sti
jnp
test
stos
xchg
imul
mov
std
inc
test
inc
jmp
sbb
push
lea
adc
and
push
pop
push
mulb
push
add
jp
out
sar
pop
mov
dec
pop
mov
mov
out
stos
jno
leave
mov
sub
out
jnp
repz
movsb
pop
pop
sbb
adc
das
in
sub
mov
or
mov
sarl
lss
inc
xchg
mov
sub
inc
adc
xchg
hlt
mov
mov
sub
outsb
in
cmpsb
sbb
jp
mov
ror
das
cwtl
out
pusha
int3
inc
negl
out
shrb
xchg
scas
out
adc
fidivrl
and
out
cmp
push
sbb
jl
xchg
imul
lds
xchg
in
adc
and
cmpsl
frstor
or
cmp
xor
mov
test
leave
jb
je
call
mov
imul
movsb
int3
mov
adc
push
cmpsb
lock
xchg
push
stos
aad
xor
popf
and
arpl
cmp
push
loopne
mov
and
mov
mov
sub
cld
lods
pop
fstp
flds
inc
stos
std
aas
push
push
jns
adc
call
aam
lods
dec
sub
cli
fucomi
pop
rcrb
outsl
aam
pushf
and
adc
daa
daa
dec
mov
inc
mov
sub
nop
push
testb
dec
sbb
sub
mov
mov
movsb
icebp
jg
fstpt
imul
dec
lahf
pop
getsec
mov
movl
xchg
aas
sub
push
leave
fidivrs
pushf
mov
adc
mov
cmpl
mov
insb
jbe
aad
sahf
mov
fidivrs
jbe
xchg
insl
adc
imul
loope
dec
and
push
push
cmp
xchg
jns
push
pop
fsubl
push
pop
sub
xchg
aad
insl
les
testl
lea
fimull
sub
fistpl
loopne
iret
out
test
loop
push
jl
rorb
or
daa
shl
sahf
jge
jne
or
mov
inc
inc
inc
push
mov
stc
fldenvs
inc
dec
ljmp
adc
mov
jecxz
add
sbb
push
inc
clc
pop
sbb
push
pushf
inc
flds
outsl
xor
push
pop
mov
arpl
cmpsl
movl
sbb
xor
scas
stos
pop
shll
dec
bnd
testb
mov
xor
jo
fidivs
js
or
cs
push
push
push
out
ss
dec
mov
jns
in
pop
jbe
push
push
jmp
push
mov
mov
cli
bound
in
ror
mov
mov
rcrl
xchg
imul
cmc
cwtl
iret
in
xor
movsl
mov
adc
lds
add
rclb
out
inc
fnstenv
inc
pusha
push
cmp
out
or
aaa
sub
aas
inc
ret
cs
cltd
push
lods
mov
mov
outsb
xor
ljmp
adc
cmpsb
in
push
jbe
xor
lock
lods
cmpsb
pusha
xor
movsl
adc
mov
into
cwtl
mov
cmp
mov
pop
pop
idiv
arpl
aas
push
pop
push
mov
cld
pushf
into
sbb
je
fstpl
inc
xor
dec
add
pop
inc
aad
jmp
add
pavgb
adcb
aaa
dec
sbbb
xchg
roll
xchg
mov
xchg
loope
ror
ficoms
add
pop
dec
stos
frstor
clc
adc
mov
inc
repz
std
and
add
pop
int3
les
lods
jg
push
loop
out
push
mov
loop
es
cmp
call
les
cwtl
and
mov
xchg
fsubrl
sbb
jb
and
sarl
insl
xchg
shl
dec
out
cmpsl
xlat
jno
pop
and
shrb
xchg
sub
in
push
leave
fdivrs
frstor
ljmp
lds
arpl
loop
in
loop
outsb
push
add
imul
cmp
jno
enter
jb
insb
incb
insb
pop
fisubrs
push
aam
inc
cltd
and
inc
pusha
sbb
inc
loop
pop
fisubrs
cmpsl
dec
inc
mov
subl
jl
jmp
cmc
test
adc
jmp
push
jge
mov
inc
jmp
jbe
lret
aas
aas
scas
test
push
int
les
cmp
fistps
mov
sarb
and
out
add
xor
jmp
cmp
push
dec
pop
and
fcmove
cmpsb
push
test
or
cmp
outsl
sbb
mov
adc
sarl
pusha
addr16
lret
dec
out
and
mov
out
lahf
adc
cmpsb
out
nopl
push
sbbl
imul
fbstp
add
std
movsb
sti
aam
mov
push
xchg
inc
fnstcw
aaa
sarl
mov
fs
lret
cmp
test
mov
xchg
scas
out
lret
pop
cli
and
cmp
pop
push
adc
jecxz
sbb
xchg
idiv
adc
adc
xchg
rcrb
add
stos
pushf
mov
lea
mov
lcall
sti
pandn
outsl
mov
ljmp
enter
ud1
imul
popa
into
jp
test
and
sub
and
pop
sbb
push
cmp
push
dec
out
push
mov
inc
mov
cmp
das
notb
inc
addr16
mov
mov
dec
ret
popa
hlt
push
icebp
mov
and
jne
mov
ss
daa
sub
outsb
loope
roll
adc
addl
push
pop
add
mov
and
and
jg
cmp
dec
inc
pop
cmp
and
inc
enter
pusha
and
cmpsl
imul
roll
insl
movsl
mov
adc
push
repnz
sbb
daa
cmpsb
push
sbb
pop
out
leave
xchg
lret
inc
fimull
lcall
mov
scas
mov
cs
xor
or
sbb
ds
xchg
ja
setge
cmp
les
push
aam
inc
jl
and
fs
or
jecxz
loope
sti
lcall
inc
xchg
addr16
mov
push
out
ss
adc
xchg
xor
ret
repz
cs
pop
xchg
jmp
ss
adc
cwtl
insl
xor
cli
xor
xchg
mov
fldcw
push
cld
cmpl
gs
loope
movsl
jns
loop
cmpsb
test
mov
jbe
add
inc
mov
bnd
test
adc
in
sti
dec
sub
inc
dec
imul
dec
icebp
pop
ja
lahf
repnz
mov
fcmovnbe
lcall
mov
scas
rolb
push
sarl
adc
push
aam
inc
repnz
cmp
add
xchg
mov
lods
sbb
lcall
cmp
imull
insl
pop
pop
sbb
mov
loopne
scas
shl
outsb
xchg
test
lcall
dec
push
jno
inc
loope
sub
pop
mov
cmp
dec
jbe
popf
mov
cmpb
and
or
mov
cmp
add
dec
mov
sub
aam
jae
inc
add
sti
loopne
daa
fidivrl
aam
subb
stos
pop
fwait
rorl
or
or
movsl
inc
cs
vmread
repnz
pop
fmull
movsl
xchg
pushf
rorb
xchg
loope
addr16
jns
imul
scas
sbb
pmuludq
test
jbe
push
mov
pop
jno
ret
jb
nop
sub
or
pusha
xor
xchg
hlt
cwtl
add
dec
jp
mov
mov
lret
adc
mov
inc
adc
cmp
dec
mov
fcompl
lret
incb
fsubl
cwtl
cmp
push
cli
lods
popf
mov
push
lock
hlt
mov
or
mov
mov
cld
lods
int
xor
aad
xor
into
test
icebp
stc
add
cs
and
andl
cli
pop
test
push
fildl
lds
xor
cltd
test
cmp
jbe
sarl
gs
es
add
adc
call
fsubrl
std
sbb
xchg
imul
add
aaa
cmpsb
jnp
scas
sbb
adc
stos
cltd
jns
outsl
fwait
cmpsb
mov
addr16
lcall
call
ljmp
dec
sbb
in
jmp
push
xchg
clc
stos
cli
ret
orl
push
or
mov
test
pop
hlt
int3
sub
test
stc
jp
xchg
cltd
mov
mov
xchg
jo
decl
mov
insl
dec
pop
pop
push
mov
jae
mov
loope
jle
jg
cmp
lahf
add
cmp
adc
imul
stc
sub
pop
or
cmp
in
dec
iret
scas
mov
add
int
sete
mov
imul
movsl
fistl
xor
or
or
and
mov
cltd
leave
inc
xchg
xchg
movsl
dec
arpl
mov
xchg
inc
nop
lock
aas
cli
jo
jecxz
inc
je
inc
jnp
dec
outsl
jne
fs
xor
iret
ds
shl
cwtl
pusha
enter
lods
lret
push
lds
fstl
xchg
sub
fistl
addb
test
pop
rcr
mov
das
lret
mov
imul
lret
das
cmp
popa
mov
jmp
xchg
dec
sbb
and
addb
inc
mov
jb
into
std
mov
imul
dec
xchg
nop
xor
mov
mov
in
stos
lods
dec
fdiv
jbe
cltd
inc
cmpsb
lds
cmp
adc
test
or
sarl
and
lock
add
jl
push
popa
cld
xchg
jno
mov
or
pop
jbe
in
mov
inc
andb
ja
les
mov
add
fdivs
std
pop
shrl
push
and
ljmp
inc
mov
dec
scas
mov
add
jae
enter
jl
pop
sahf
cmp
dec
sbb
xor
cld
mov
and
push
pusha
pop
mov
fsub
in
xchg
lahf
jns
sbb
pop
and
inc
xor
sbb
out
sub
stos
ret
pushf
minps
push
mov
jmp
adcl
adcl
out
dec
add
adc
je
sub
movntps
add
jae
shrl
sub
aam
iret
nop
out
lods
inc
loope
pop
mov
xor
cvtpi2ps
add
cmpsb
test
mov
or
cwtl
sbb
imul
sbb
fwait
cs
cltd
out
jae
xchg
mov
xchg
les
push
xchg
imul
pusha
and
mov
inc
sub
cs
push
mov
fidivs
adc
lock
mov
loopne
andl
loope
xor
stos
adc
scas
jg
aad
cmp
and
arpl
lcall
jmp
cwtl
mov
mov
sbbb
jmp
ret
sub
jecxz
notl
test
cli
je
imul
sbb
jae
push
clc
xor
lahf
das
mov
push
popa
xchg
adc
ret
mov
xor
fs
xchg
and
and
dec
scas
push
ficomps
jno
stc
mov
repz
push
cltd
mov
sub
cmpsb
ds
mov
mov
imul
jle
outsl
shll
inc
push
loope
pop
xchg
mov
cwtl
adc
call
dec
or
jnp
mov
imul
xchg
xchg
lahf
cmp
mov
insb
pop
dec
fcoms
mov
pop
shlb
mov
adc
mov
mov
xor
lods
sbb
test
inc
stos
adcl
int
lret
arpl
and
mov
mov
out
lret
cmp
sbb
js
adc
sbb
push
jb
pop
outsl
and
jp,pn
fcoms
mov
push
add
jl
gs
ja
pop
mov
repz
lods
push
pop
fadd
dec
ret
add
xchg
add
stc
xchg
sbb
test
cmp
mov
push
inc
inc
or
rcll
std
fld
and
dec
and
lret
test
inc
pusha
jle
imul
sbb
mov
idivb
adc
xor
pop
ret
cmp
xchg
push
add
pop
frstor
out
pop
sub
shlb
in
add
jno
pop
dec
cltd
mov
jb
pop
xchg
xlat
mov
mov
sbb
sub
pop
xchg
inc
lock
movsb
and
inc
out
sbb
cmp
fstpl
mov
outsl
xchg
lcall
stos
es
mov
in
fildll
mov
xchg
add
mov
lret
sub
jno
or
jae
dec
lds
inc
in
cmp
clc
in
dec
lret
cmpps
push
add
xor
cli
add
or
or
push
out
inc
scas
test
imul
fnstcw
push
in
or
subb
dec
fldpi
jg
mov
sarb
inc
pop
stos
or
fwait
inc
sbb
mov
pushf
pop
mov
addr16
iret
popl
sub
xchg
mov
in
and
lahf
push
loop
lods
dec
in
xor
cli
and
mov
sar
mov
cltd
push
cmp
push
jnp
mov
fstpt
iret
ret
sbb
pop
fnstenv
aam
add
in
aas
jp
shrb
out
jne
mov
add
pop
pushf
mov
out
out
adc
jecxz
sbbl
popw
pop
fistl
sbb
mov
or
or
xchg
inc
adc
insb
lret
lods
adc
stos
pop
inc
inc
arpl
out
inc
and
ss
jle
test
cmp
ss
sbb
adc
call
and
cmp
lcall
ds
sub
dec
adc
dec
cs
cmpsb
push
stc
add
sar
pushl
jnp
cwtl
out
mov
xor
repnz
mov
out
mov
cmpsl
xor
pop
lods
sbb
jle
xor
shrl
fwait
shrb
mov
jo
movsl
and
jp
mov
pop
test
in
call
pop
sub
repz
imul
dec
push
outsb
shll
cmp
bound
mov
sub
mov
xchg
mov
sarb
mov
fcompl
daa
dec
pop
in
mov
mov
mov
lahf
cmpsl
sar
scas
mov
test
xchg
ret
shr
xor
pop
dec
int3
and
or
out
repnz
add
add
pop
mov
and
push
out
shl
fimull
pop
inc
es
lret
or
addb
xor
xchg
adc
mov
push
mov
mov
adc
mov
mov
and
and
jo
add
adc
cmp
adc
cmpb
mov
add
pushf
negb
lahf
scas
sub
pushf
cmpsl
adc
xchg
sbb
ss
pop
je
sub
sub
push
xchg
lret
fwait
pop
ljmp
out
and
jne
lcall
mov
inc
outsb
ds
add
inc
std
xchg
insl
jp
xor
xchg
les
inc
popf
fcoms
cmp
xor
enter
mov
cld
orb
nop
jo
jb
sub
mov
mov
push
pop
mov
ja
aas
in
sub
add
adc
addl
adc
out
adc
add
les
xchg
mov
rcrl
jnp
sbb
jle
or
fdivrp
mov
clc
adc
inc
mov
xlat
test
jecxz
sar
repnz
sub
stos
push
push
inc
inc
pop
call
mov
jmp
pop
push
adc
subl
lcall
test
testb
out
rcrl
mov
lods
je
stos
xchg
imul
lods
int
and
stc
jnp
jmp
ror
hlt
rorl
cwtl
dec
push
mov
les
xor
lods
add
in
xchg
mov
jo
pusha
or
sbb
push
inc
pop
jp
sbb
sti
gs
push
into
test
addr16
pop
mov
cli
mov
pop
mov
ljmp
add
and
pop
lds
sbb
xor
mov
sbb
fsubr
ret
rcll
stos
sub
popf
push
mov
mov
xor
cmp
std
or
mov
sahf
lods
lock
int
push
lahf
mov
jnp
repz
dec
cmp
jne
fldl
in
sbb
shlb
rcll
insb
out
adc
shrl
push
add
pop
out
xor
xchg
pusha
push
lcall
mov
outsb
out
and
dec
je
subl
mov
inc
mov
cmc
push
gs
add
jge
enter
and
fdivrs
add
out
push
add
xlat
call
xchg
into
aas
mov
adc
xchg
cld
xor
popa
popa
sbb
jne
push
icebp
sbbb
sub
cmp
mov
sti
dec
pop
push
push
xchg
pop
and
cmp
jl
adc
adc
je
add
inc
dec
sub
popa
cld
pusha
xchg
stos
int3
negl
push
dec
shll
or
out
js
pop
sub
jno
into
test
push
scas
jecxz
push
inc
xor
adc
cld
clc
mov
sbb
scas
xchg
jle
mov
jo
icebp
test
push
add
or
lock
xor
pop
lcall
jo
mov
aas
in
pop
in
dec
push
cmp
jae
dec
jg
out
fst
repz
les
in
jns
out
lret
mov
lods
dec
sbb
insb
sti
push
dec
fadds
fsubs
pop
and
sub
xchg
insl
arpl
dec
cmp
or
inc
jns
cmpsb
es
sbb
or
enter
or
cli
in
mov
sub
daa
mov
sub
arpl
or
ljmp
xor
mov
or
daa
mov
cmp
in
out
outsl
sbb
lds
mov
into
cmp
lock
in
push
xor
lcall
test
test
sbb
push
push
jne
std
mov
and
cmp
mov
test
shl
lods
cld
fldl
imul
xor
je
adc
cmc
jno
mov
test
sub
and
jmp
jae
adc
fwait
sub
add
xchg
arpl
addr16
lret
aas
int3
test
leave
jge
loopne
push
test
flds
shl
addr16
pushf
sub
mov
fwait
int3
test
dec
push
mov
xor
jne
jbe
inc
scas
sbb
jmp
pop
push
flds
leave
loope
into
pop
push
sub
insl
es
incl
es
sbb
in
xor
push
jae
pop
jnp
clc
jb
jle
mov
dec
cmc
lods
xchg
inc
pop
jne
ficoml
push
aaa
and
inc
sbb
das
aaa
mov
and
mov
imul
mov
and
sbb
xchg
inc
sarl
add
lahf
lock
leave
pop
call
repnz
or
add
ret
push
fwait
aaa
popf
pop
fcmovbe
lods
cwtl
outsb
rolb
mov
dec
sti
mull
shll
sbb
jmp
cmp
xchg
push
int
add
fsub
or
mov
inc
mov
popf
or
push
add
mov
ss
mov
mov
xor
and
jno
ja
xorl
xchg
fcoms
and
inc
adc
ret
xor
xchg
pop
repz
sahf
mov
and
sub
jo
push
or
outsb
jne
add
mov
xor
push
inc
pop
lahf
repz
test
and
rclb
in
fldenv
jge
pusha
mov
stc
test
jmp
add
xor
rcl
pop
and
mov
jge
mov
add
pop
lds
inc
lret
out
sbb
sahf
outsl
dec
jmp
into
xchg
ret
notl
in
jb
subl
mov
dec
stos
adc
nop
xchg
mov
push
mov
cmp
pop
notb
push
sbb
mov
sub
iret
lahf
mov
ror
jo
jmp
mov
int3
mov
mov
xchg
in
js
mov
jg
push
mov
aam
pop
dec
pushf
jge
adc
xchg
and
push
sbb
popf
test
lods
push
mov
je
add
xchg
stos
lods
pop
dec
pop
testb
mov
xchg
mov
sbb
das
or
arpl
lcall
mov
mov
stc
mov
scas
or
mov
lret
pop
shrl
xchg
notl
test
push
in
sti
mov
out
repz
lret
mov
pop
jb
mov
cmp
shll
shrb
cmp
and
faddl
sbb
ret
insb
mov
mov
mov
cwtl
pop
push
lret
adc
movsb
loope
xchg
jb
or
pop
and
inc
jp
push
mov
cmp
and
jae
adc
cli
pusha
dec
and
and
out
test
mov
xor
add
sbb
das
xchg
push
test
daa
jmp
add
iret
mov
mov
lret
xchg
sub
inc
gs
dec
jle
sti
sti
addb
testl
stos
sub
pop
dec
fidivrl
cmp
push
push
sbb
je
pop
mov
mov
add
add
sbb
jg
dec
adc
xor
test
mov
push
dec
mov
in
call
aad
inc
push
dec
push
pushf
sbb
pop
lcall
les
in
adc
mov
lds
cwtl
push
xlat
mov
fs
cmp
inc
mov
adc
pop
inc
and
mov
mov
mov
cmp
in
xor
mov
dec
dec
aam
add
mov
cmp
sbb
mov
xor
arpl
inc
test
popf
divb
sub
enter
test
cld
xchg
imulb
lcall
adc
inc
xchg
mov
adc
mov
enter
arpl
divl
inc
out
xor
sub
cltd
and
out
inc
mov
call
loopne
jle
add
inc
mov
or
pop
adc
inc
call
pop
mov
shr
or
icebp
in
je
loop
push
dec
cmp
cmc
pop
xor
inc
loopne
insl
hlt
adc
lahf
push
shrb
stc
aaa
mov
xchg
stos
repnz
push
adc
inc
in
bound
add
jne
mov
in
popf
cwtl
xor
lahf
cmp
lahf
cli
xlat
scas
iret
add
cltd
leave
cs
mov
pop
jne
xchg
jle
adc
push
pusha
mov
sahf
scas
mov
pop
ljmp
mov
cmp
icebp
xor
into
xor
xchg
arpl
mov
in
sub
xchg
ret
xchg
mov
pop
inc
jno
pusha
shll
add
mov
mov
cmpsl
loope
sbb
push
pusha
sbb
add
inc
cmpsl
std
pushf
jo
stos
push
daa
in
mov
adc
repz
popf
repnz
stos
mov
pop
int
dec
loop
and
frstor
dec
sbb
xorl
mov
mov
ffree
daa
push
mov
mov
sub
pop
xor
lds
stc
fnstenv
mov
aaa
xchg
xchg
cmp
arpl
les
dec
and
jg
arpl
jnp
inc
mov
push
xchg
xchg
pushf
sbbl
call
lock
stc
adc
push
lods
cmp
mov
sub
pop
stos
pop
cwtl
popf
mov
inc
test
jge
mov
or
out
sbb
cs
mov
pop
and
loopne
xor
ror
pop
in
notb
in
xchg
iret
jge
stos
ret
cmpsl
shll
sub
sub
mov
jae
sbb
addl
sarb
dec
nop
test
pushf
add
fnsetpm(287
test
das
imul
outsl
mov
nop
inc
aam
mov
cmpsb
aaa
mov
mov
je
inc
fwait
inc
ja
fisttpl
shl
mov
int3
pop
daa
sbb
pusha
inc
xchg
push
testl
pop
pop
inc
testb
shlb
scas
push
je
test
shll
inc
add
repnz
fdivl
mov
into
in
outsl
pop
pop
and
je
push
mov
in
push
int
inc
and
pop
push
push
push
mov
dec
jmp
inc
fnsave
aaa
or
mov
xlat
push
pop
js
dec
or
test
lods
mov
push
mov
ss
repz
sbb
adc
xor
inc
sbb
push
xor
adc
out
enter
stc
jb
sbb
push
cs
cmp
mov
pusha
cmp
pop
repz
test
cmp
mov
das
gs
or
inc
push
dec
mov
rcrb
cld
movsb
scas
sub
jbe
mov
movsb
mov
mulb
inc
test
dec
fcoml
and
mov
xor
mov
data16
sbb
mov
add
loope
adc
cmpsl
mov
pop
dec
push
fcomi
mov
fcomi
sub
pop
cmp
addl
cmp
adc
pop
js
xor
rcrl
repnz
inc
out
lcall
pop
adc
call
lods
inc
clc
push
add
add
fisubs
loopne
mov
movsb
rcll
push
fnstcw
mov
outsb
movsb
ror
xchg
in
lahf
pop
cmpsl
fcoml
pushf
leave
call
jns
pop
int3
enter
xchg
push
movsl
bound
mov
stos
andb
out
daa
cltd
push
xor
mov
mov
addr16
insb
pop
add
paddusb
dec
pushf
add
loopne
push
scas
mov
xor
loop
inc
mov
adc
das
jle
add
inc
test
dec
cmp
push
fiadds
clc
jnp
mov
out
jl
loope
xchg
daa
daa
gs
roll
xor
lds
aaa
and
aas
xchg
outsb
xor
dec
aad
int
dec
mov
sbb
mov
mov
mov
mov
and
movsl
push
pop
fisubrs
mov
dec
mov
adc
test
pop
and
sbb
sub
cmp
xor
jb
push
inc
das
stos
xor
pop
mov
lods
fstpl
mov
in
or
cmp
and
clc
out
arpl
insb
mov
jmp
sbb
adc
pop
mov
and
jl
or
in
sbb
pop
xchg
xor
push
ret
xchg
xor
jmp
dec
shr
jns
cwtl
jo
pop
fcoml
data16
mov
ret
enter
sar
inc
pop
fbstp
mov
insb
jae
jno
imul
mov
pop
jle
lahf
xchg
les
jl
aad
jae
fs
fstl
ret
leave
push
out
pop
daa
adc
retw
cld
xor
daa
shll
jecxz
lds
pop
xchg
pop
mov
sbb
hlt
std
xchg
cld
cld
xchg
adc
push
aam
fcmovne
addr16
adc
or
jne
icebp
mov
pop
jae
sub
adc
mov
sub
clc
out
data16
xabort
sbb
insb
dec
inc
mov
lods
mov
dec
adc
push
and
ret
loope
jmp
mov
xor
inc
js
insb
nop
mov
fistpll
push
add
xor
sahf
mov
jmp
das
xor
sti
jp
stc
lds
shl
leave
movsl
test
imul
sti
filds
mov
cltd
jns
mov
ja
add
movsb
xor
add
jbe
test
inc
adc
ss
cmpsb
sbb
aaa
cmp
adc
dec
fs
fstpt
int3
xor
mov
call
adc
xchg
xor
adc
mov
dec
movaps
sti
sbb
mov
into
arpl
cmp
jbe
pop
popa
push
jbe
lret
in
movsl
dec
xor
xchg
xor
insl
movsb
pop
and
das
jg
adc
sbb
bound
jae
inc
mov
das
das
and
jns
sarb
stc
add
out
mov
and
push
pop
push
aaa
xchg
add
call
test
movq
movsb
mov
push
adc
and
adcl
cmp
in
lret
add
stc
sub
or
inc
popf
pop
add
sahf
mov
out
cwtl
cmp
inc
xor
je
mov
cld
outsb
ljmp
ds
nop
adc
and
cltd
adc
mov
cmp
addb
paddusb
adc
inc
jmp
shlb
fisubs
pop
xor
mov
cltd
loop
aaa
fwait
enter
push
enter
mov
test
stc
insb
mov
jge
xor
dec
movsl
cmc
mov
test
cltd
push
ret
mov
push
add
clc
adc
mov
not
jns
xchg
dec
and
stos
arpl
lods
or
xor
xorb
mov
outsl
push
and
cmp
sarb
mov
xchg
add
daa
hlt
mov
mov
jmp
xchg
mov
push
xor
in
push
mov
jb
mov
add
dec
dec
dec
dec
fsubr
scas
jbe
mov
pop
mov
pop
inc
insb
add
bnd
daa
xor
outsb
push
cmp
imul
adcl
push
out
loop
test
xorb
mov
sbb
add
xor
lods
or
cmp
mov
pop
nop
jbe
aaa
test
aad
cmp
sbb
jnp
inc
mov
leave
xor
mov
xor
inc
lods
mov
movsb
mov
inc
pop
je
fstp
jne
xchg
ds
mov
out
cli
inc
add
dec
daa
jo
clc
fwait
inc
xor
jno
int
jge
loopne
jle
loope
fsubs
jno
test
mov
push
mov
jecxz
mov
sub
loope
cli
sbb
xchg
lret
pop
or
xchg
frstor
jo
xchg
jbe
imul
dec
cmc
daa
inc
call
clc
cs
mov
cmp
xor
sahf
rcl
out
cmp
fcomps
testl
je
jbe
pop
inc
or
dec
mov
or
pop
pop
sub
dec
sbb
fcompl
mov
mov
cmp
fcomps
jne
stos
ror
adc
add
mov
xchg
add
mov
mov
mov
mov
xchg
popa
sub
add
xor
cmp
mov
into
add
or
and
sbb
adc
adcl
xor
adc
add
add
imul
xor
inc
push
mov
ds
fs
push
add
aam
cmp
idivl
daa
fisttpll
lret
test
jp
rcll
repnz
inc
rcll
punpckldq
pop
fs
jmp
in
mov
xchg
loopne
nop
xor
rcr
mov
outsl
rol
rcrl
loopne
sahf
sbb
lock
lret
or
sbb
iret
mov
add
sti
dec
sbb
cmpsl
sahf
add
xor
mov
adc
xlat
jb
inc
or
daa
mov
popa
rcr
icebp
and
push
xchg
inc
enter
scas
push
dec
stos
push
push
adc
fs
sub
sbb
push
adc
xchg
in
adcl
sub
das
mov
lods
scas
loopne
loope
push
mov
loop
sbb
mov
sbb
xlat
leave
int
pushf
fidivl
add
dec
inc
mov
or
or
mov
lea
fnstcw
xchg
push
adc
add
in
hlt
popa
cmp
adc
test
jbe,pn
gs
lea
lea
rorb
scas
xlat
mov
push
mov
repnz
adc
rcr
bound
repz
outsl
in
in
gs
and
xchg
xchg
fidivs
sub
cs
out
mov
dec
jge
rcll
mov
and
xchg
aaa
cmc
sbbl
push
or
jns
vmptrld
push
ret
arpl
inc
ja
inc
in
add
inc
stos
push
mov
mov
inc
ljmp
cmp
xchg
and
pop
gs
loop
jmp
cmpsl
outsl
push
test
fmuls
orl
rclb
or
jo
push
adc
push
lret
jno
shrl
icebp
fstpt
popa
mov
sahf
fwait
dec
lret
cvttps2pi
cmpsl
xchg
daa
stos
scas
dec
ja
mov
sbb
jl
pop
sbb
test
icebp
ljmp
mov
rcrb
sub
mov
mov
gs
inc
lods
popf
adc
fcomps
xlat
leave
or
scas
gs
ljmp
mov
inc
nop
sahf
jmp
mov
sbb
inc
repnz
jb
ss
lds
inc
push
or
inc
cmpsl
imul
in
dec
loope
push
jg
int
pop
cs
xor
push
js
mov
and
sti
faddp
pop
dec
adc
imul
pop
out
mov
int3
aam
adc
outsl
in
ljmp
fsts
data16
dec
fstpt
mov
or
mov
dec
inc
test
xchg
mov
and
xor
dec
fsubrl
xor
jne
push
pop
xor
mov
data16
sbb
cmp
jmp
test
mov
adc
outsl
into
arpl
iret
inc
clc
adc
stos
loop
dec
rcll
cmp
int
inc
or
pop
and
pop
pop
sbb
sub
adcl
aam
adc
popa
mov
mov
incl
and
dec
out
mov
add
sbb
stos
and
ret
loopne
fcmovnb
add
jne
mov
cwtl
cmp
popa
aas
or
mov
sbb
mov
push
jl
adc
or
test
cmp
cmpsb
push
sub
adc
adc
ds
cmp
and
or
dec
ja
mov
xor
dec
leavew
xchg
cmp
int
jno
cmp
imul
aad
xchg
push
ret
jo
xchg
ss
jge
mov
push
lcall
mov
test
jl
lock
inc
sub
outsb
adc
push
and
mov
rolb
in
fstpt
insb
dec
fistpll
roll
clc
xor
bound
popa
es
out
sbb
std
pop
or
cmc
dec
mov
xchg
push
sbbl
dec
les
and
dec
jb
ljmp
adcb
inc
dec
push
adc
cmp
fwait
pop
or
xchg
icebp
sbb
aam
inc
mov
cli
cmp
cmp
in
jle
sbb
dec
pop
sarl
and
fisubl
scas
das
xor
call
and
scas
fadd
jle
sbb
cmp
lock
mov
xor
xor
popa
cmp
popf
add
mov
movups
sbb
arpl
clc
rcr
not
ret
and
push
test
inc
mov
xchg
mov
jp
in
inc
fs
aas
cmpl
mov
stos
insl
repz
push
mov
cmpsb
test
cwtl
mov
jnp
push
or
inc
push
jne
rorl
mov
dec
or
pop
dec
or
mov
mov
ret
sti
std
lock
int
or
xor
and
int3
sahf
mov
rcrl
sbb
xchg
insl
inc
pop
cmp
stos
outsb
dec
jecxz
nop
mov
imul
adc
ret
das
mov
cmp
nop
pop
scas
sahf
xlat
mov
xchg
lahf
jl
add
iret
gs
cmpsb
push
mov
mov
xlat
adc
mov
jb
jne
icebp
sub
fwait
repnz
adc
data16
or
or
mov
hlt
add
add
sbb
in
data16
loop
ret
test
pop
mov
pushf
sub
nop
push
pop
mov
test
push
sub
aad
icebp
leave
rcl
cmp
out
inc
or
mov
xchg
pop
jle
xchg
jb
mov
add
add
out
out
ljmp
inc
and
jge
mov
xchg
xlat
ret
scas
scas
sbb
aas
fnstsw
rolb
pop
mov
pop
roll
in
xor
mov
sbb
enter
fs
gs
push
stos
repnz
dec
inc
movl
push
adc
cmp
lahf
pop
in
xor
ds
sub
neg
push
or
mov
cs
sbb
mov
pushf
scas
pop
scas
in
pusha
into
in
xor
in
pop
mov
ret
aas
jns
icebp
pushf
scas
outsb
out
jnp
sbb
and
sarb
dec
inc
push
fisttpll
cwtl
fldt
sub
jecxz
insl
dec
std
jae
pop
and
shlb
cli
insb
cmpsl
test
stos
leave
test
xchg
mov
js
sub
mov
jge
adc
inc
test
or
pop
dec
pop
and
mov
je
fists
test
lods
cmp
repz
fadd
icebp
in
cld
or
int
cmc
ror
sbb
jo
sub
movzbl
adc
movsb
inc
test
and
jmp
lahf
in
push
push
cli
sar
jb
mov
lods
daa
insl
pusha
fcmovb
ds
into
gs
inc
dec
mov
mov
xchg
jg
pop
push
and
jl
dec
sub
and
push
lds
jp
daa
lock
sbb
mov
nop
scas
cmp
sbb
je
outsl
out
outsl
pop
pop
test
test
mov
add
sub
sbb
add
mov
mov
push
roll
shl
popa
dec
xchg
movsl
inc
add
jecxz
pop
dec
dec
bound
fchs
movsb
mov
add
mov
mov
jge
dec
dec
inc
mov
addl
and
fs
jnp
mov
movsb
movsb
and
cmpb
or
fs
mov
sub
jmp
jno
add
fistpll
cmpsl
cmp
cmp
fistps
test
mov
push
mov
add
sti
add
cmp
jo
wrmsr
incb
mov
mov
les
adc
int3
sub
pop
cmc
insl
xchg
jns
repnz
pop
int
cmp
clc
sub
imul
jp
nop
pop
mov
push
lahf
insb
add
jo
adc
mov
xchg
sahf
inc
adc
addl
sti
mov
adc
lods
pop
loope
lds
and
jmp
aaa
pop
mov
mov
lret
mov
imul
sahf
mov
es
push
stos
scas
stos
and
cld
sub
int3
or
adc
lds
push
xchg
xor
jl
adc
pop
mov
pop
dec
test
inc
mov
leave
or
jg
pop
clc
mov
or
stos
hlt
test
loope
leave
ljmp
cmp
xchg
cmp
inc
ljmp
fs
ret
sbb
jbe
scas
mov
daa
sbb
test
mov
mov
mov
add
fisubrs
gs
lcall
sub
pop
mov
or
movsl
dec
js
js
addr16
and
outsb
outsl
mov
shll
insb
pop
movsb
filds
ja
sbb
movsb
inc
das
ja
sarb
lcall
xchg
or
xchg
aas
bsr
xor
je
sbb
add
mov
dec
mov
fisttpl
aaa
mov
push
loopne
push
pop
or
cmp
dec
mov
mov
jbe
pop
addr16
jge
lods
jmp
xchg
sub
bound
test
jo
jmp
or
shll
movsl
inc
sub
inc
cli
push
sbb
mov
sub
xchg
out
les
sbb
mov
dec
shrb
xchg
sub
bound
cmp
das
inc
mov
aam
pusha
xchg
lds
test
sub
outsb
sub
into
stos
mov
add
pop
sbb
and
pop
les
outsb
jb
insl
leave
outsb
lcall
loope
and
dec
push
std
pop
xchg
adc
adc
daa
and
pop
shl
xchg
rol
mov
adc
adc
mov
rcrb
pop
xlat
pop
mov
insl
pop
cmp
sbb
popf
mov
arpl
imul
js
pop
mov
cmp
testb
pop
push
push
jmp
loope
inc
mov
dec
dec
cmp
xor
adc
pop
push
pop
push
mov
mov
bound
pop
ret
fsubr
mov
pop
fwait
sbb
push
sti
leave
push
lods
out
dec
xchg
loope
pop
cmp
mov
notb
add
lods
dec
adc
fcmove
lods
fwait
je
imul
out
mov
sub
and
mov
in
cmp
push
add
jle
lods
fsts
mov
movsl
cmp
or
jle
mov
pop
data16
hlt
cmp
mov
fsubs
jmp
inc
shll
js
add
leave
sub
cmp
out
sahf
jne
flds
imul
mov
jp
stos
daa
sub
pop
fistpl
sbb
push
jg
pushf
js
scas
leave
mov
into
movsl
and
mov
enter
andl
push
inc
mov
int3
pop
pop
mov
into
sbb
xchg
cmpsb
push
subb
lds
bt
rorb
cwtl
dec
data16
mov
add
xchg
mov
dec
in
in
sbb
dec
aad
cmp
add
xor
sub
sbb
add
push
cltd
shl
push
stc
adc
pop
cli
pop
lahf
mov
mov
repnz
stc
aas
mov
dec
stc
loopne
jnp
jmp
andb
sub
dec
rcll
jns
lods
clc
cmp
jne
xor
addr16
push
fldcw
ljmp
xchg
mov
sahf
test
dec
add
inc
mov
cmpsb
leave
dec
mov
lcall
xchg
cmp
fdivs
out
xchg
and
fistpl
dec
in
fwait
mov
loop
or
gs
inc
addr16
movsl
mov
add
sbb
ja
jnp
mov
or
rolb
je,pn
and
dec
fstpt
repz
and
dec
pusha
push
call
lock
push
cltd
loop
sub
jbe
sbb
mov
sbbl
movsb
mov
cmp
cmp
fwait
xor
sbb
xchg
jb
hlt
mov
popa
test
iret
insl
jbe
mov
lcall
cmp
or
nop
xor
push
lods
std
xbegin
pop
mov
pop
adc
adc
xor
xor
pop
inc
jecxz
cmpsb
cmp
jle
mov
fldenv
cmp
iret
pushf
xchg
das
or
xor
xchg
xor
push
dec
xchg
call
xlat
insl
in
lods
jbe
mov
idivb
add
mov
mov
xor
subb
and
push
dec
push
push
in
and
rcrl
bound
inc
cmpl
and
aaa
cmp
adc
lods
cmp
inc
jnp
pop
lods
cmc
sub
jne
jl
stos
arpl
jae
int
fimuls
movsb
xchg
cmpsb
clc
mov
push
rcrl
jmp
addl
xor
cli
push
or
pop
or
inc
xor
int
aad
push
rcrl
lods
inc
adc
and
cld
daa
mov
push
and
pop
and
jp
cs
aad
xchg
mov
mov
xorb
cmp
in
jecxz
out
fisttps
gs
sbb
outsl
rclb
lods
push
arpl
sti
imulb
ss
mov
and
or
mov
fisttps
mov
add
push
mov
popa
xor
and
mov
or
jo
xor
adc
pusha
mov
add
adc
add
cmp
adc
fisubs
push
mov
lcall
push
dec
shlb
mov
dec
lret
jle
movsl
gs
dec
int
push
jmp
data16
fdivs
jle
mov
push
cli
adc
mull
and
mov
in
xor
loop
push
mov
movsb
mov
mov
dec
call
scas
les
xchg
cmpsb
shrb
leave
pop
mov
js
cmpsl
mov
xor
sbb
ret
rcr
sarb
dec
lock
and
xchg
scas
mov
jge
inc
repnz
jecxz
into
and
xchg
and
xor
ja
ficoms
sub
aam
shr
std
pop
in
cltd
daa
pop
push
fsts
sub
repnz
das
in
orl
adc
or
and
repnz
lock
loop
inc
fcmovb
test
add
mov
cmp
mul
popf
mov
inc
int
mov
fstpl
inc
jp
mov
sub
mov
sub
push
iret
push
mov
xchg
test
rol
shrb
jle
aaa
cmc
add
mov
stc
xchg
aad
pop
std
inc
in
test
sub
sub
lods
out
mov
pop
pushf
loop
out
test
cmc
jo
aam
fnsetpm(287
mov
mov
mov
pop
push
inc
cmp
cmp
in
leave
pusha
popa
shll
les
stos
iret
dec
sbb
insb
push
xor
adc
pushf
mov
push
sub
stos
out
mov
add
fstpl
mov
dec
adc
inc
sub
mov
inc
repz
jbe
inc
pop
xor
push
ret
cmpl
int3
mov
fmuls
lahf
scas
jno
arpl
jbe
fdivs
dec
lods
leave
xchg
fstl
push
push
jge
loope
jnp
das
cmc
mov
dec
shlb
add
and
cli
das
dec
ss
adc
mov
aas
outsl
aaa
rcrb
cmp
nopl
mov
in
pusha
inc
push
rcrl
out
cmpb
xor
cmpsb
fiadds
insl
and
cwtl
fildl
stos
js
ret
mov
cmp
jle
dec
fpatan
fcomps
outsl
cli
clc
cmp
cmp
out
imul
mov
xchg
outsl
mov
jecxz
pop
nop
add
movsb
mov
cld
out
xchg
xor
xchg
mov
imul
pop
shrb
mov
xlat
pop
push
fucomip
mov
push
into
test
popa
xor
call
aam
lods
sub
in
cmp
aaa
inc
ljmp
pop
stos
movl
sub
bnd
mov
aaa
xchg
xchg
rorl
sbb
bound
lock
push
sbb
ljmp
cmp
int
pop
push
ss
xchg
iret
stc
scas
dec
fildll
inc
lahf
out
cli
sahf
sub
jne
sub
addb
push
xchg
out
inc
jae
loope
pop
stc
subl
lods
dec
outsb
sbbb
lcall
in
mov
shrl
jno
jo
push
inc
mov
out
sub
mov
pop
mov
test
jl
js
xchg
int3
inc
inc
aam
xor
inc
rolb
ss
fnstenv
nop
push
mov
cmp
scas
push
subl
pop
xchg
rorl
lds
xor
cmc
add
and
adc
cmp
ffree
stos
pop
push
xchg
sbb
add
jl
pop
xlat
and
pop
dec
roll
sub
aad
sub
js
ss
ljmp
cmp
js
xlat
in
dec
cwtl
rcrb
xor
lea
cli
dec
adc
rolb
mov
push
sub
mov
jle
das
jns
cmp
sbb
aas
adc
add
popa
decl
xchg
push
fcoml
pushf
xchg
ss
in
cmp
lods
fcompl
adc
xchg
xor
adc
negl
rclb
mov
addl
out
imul
add
pop
push
scas
movsl
mov
int
ds
jge
out
imul
rorl
cmp
push
xchg
loopne
vmovmskpd
mov
sbb
push
jb
jecxz
loopne
xorb
clc
push
xorl
mov
andb
dec
arpl
push
cmp
cmp
jge
mov
mov
dec
mov
sti
add
cmp
add
das
stos
jmp
push
aaa
mov
adc
movsl
sub
test
add
js
test
imul
add
cmc
pop
test
push
mov
fadd
pop
fimull
and
add
lods
xlat
std
sub
or
cmc
outsb
insl
mov
mov
dec
push
daa
mov
pop
clc
jbe
or
sbb
push
jge
stc
ljmp
sahf
dec
lret
nop
lahf
fstpl
imul
fildll
mov
mov
push
pop
das
xchg
add
push
and
cmpsl
addl
aam
dec
cmpsb
jno
sbb
pop
push
daa
and
sbbl
cmp
mov
push
pop
mov
add
cld
mov
enter
dec
xchg
jno
mov
pop
test
jmp
jo
and
out
movzbl
xchg
scas
test
inc
mov
mov
mov
mov
mov
cmp
jge
fidivs
inc
xchg
imul
out
es
rorl
jl
push
test
pushf
add
add
sti
imul
subb
jl
mov
dec
add
ja
stos
fldl
fiadds
cmp
ret
push
pop
scas
popf
sbb
lahf
push
lea
xchg
mov
fs
jmp
adc
insb
jo
into
push
movsb
and
mov
add
dec
jb
xchg
test
dec
jl
adc
dec
fcoms
int3
push
add
adc
lock
sub
hlt
mov
or
add
lods
cmp
dec
and
lcall
inc
and
test
mov
aas
inc
pop
sub
insl
lock
lods
sbb
mov
xchg
or
es
pop
push
leave
inc
pop
test
cld
roll
not
repnz
out
repnz
cmpl
sbb
or
push
inc
jp
mov
xor
icebp
mov
ds
std
lret
add
pop
pop
xchg
dec
mov
add
stos
rolb
xlat
pushf
repnz
and
mov
cmp
or
fldl
aaa
mov
jle
je
mov
call
mov
pop
push
mov
jo,pt
pop
xor
shlb
cmpsb
jae
push
test
gs
or
nop
das
das
cmp
loopne
push
enter
dec
pop
push
xor
outsl
scas
hlt
test
popa
push
in
dec
ficoms
sti
sbb
iret
aas
jnp
inc
dec
sbb
xchg
sub
cmp
xchg
aad
sub
ret
fwait
add
repnz
jo
sbb
pop
add
push
mov
mov
cmp
stos
jns
jle
fsubrl
test
push
mov
cmp
and
inc
stos
xchg
iret
pop
fwait
jns
lock
add
dec
cmp
cmpsb
pop
js
ljmp
ja
imul
mov
rorl
fistpll
or
push
das
mov
sub
into
shlb
lret
jmp
aam
mov
mov
ja
lret
pop
aam
vpmaxsw
lcall
sub
arpl
or
imulb
fdivrs
cltd
dec
fwait
or
idivb
iret
fisubs
xlat
cli
or
cmp
xchg
out
ret
sub
inc
add
xlat
sub
rcl
in
fcmovnu
fucomi
lret
jbe
add
negl
mov
lods
ret
das
jecxz
xchg
sbb
bound
out
sbb
mov
and
cmp
and
cltd
jne
cmc
mov
inc
mov
jns
jbe
pop
aam
repz
insl
repnz
jns
bound
std
sub
xor
xchg
scas
jecxz
mov
clc
push
cmc
lea
mov
insl
jle
flds
loope
pushf
out
sbb
jnp
push
mov
dec
repz
pop
and
enter
add
pop
test
and
nop
daa
mov
test
imul
es
xor
or
mov
adc
fistpl
xor
inc
outsb
out
dec
push
mov
aas
mov
addr16
in
orl
lods
push
pop
xor
push
ret
mov
test
aas
scas
pop
add
das
push
in
ss
clc
in
repnz
cltd
mov
loop
pop
cld
sbb
pop
mov
enter
inc
mov
xchg
adc
inc
call
sub
xchg
jb
pop
or
lret
mov
cmp
xchg
mov
adc
inc
iret
mov
rol
aas
add
aam
push
mov
pusha
int
lahf
ja
mull
call
icebp
mov
and
pop
or
insl
ja
push
and
stos
and
cmp
cmpsb
scas
call
enter
aad
shlb
ljmp
push
or
cmp
push
loopne
mov
mov
aaa
loope
mov
jge
jno
and
movsl
push
jae
pop
andb
fnsetpm(287
je
sbb
jecxz
cwtl
jg
sub
loop
call
pop
mov
inc
jp
into
lret
sti
mov
jb
movb
dec
pop
cmp
push
xchg
out
scas
inc
or
jbe
fldenv
enter
jb
inc
xor
push
out
xchg
mov
inc
nop
insb
or
dec
mov
in
enter
enter
arpl
xor
adc
xor
dec
xor
aas
test
adcl
outsl
movsl
xchg
xchg
loopne
call
mov
pop
loopne
js
pop
ds
or
lea
ljmp
call
or
cmpsb
sbb
xchg
dec
xor
push
bswap
nop
das
cld
xchg
adc
aaa
lcall
fadds
inc
mov
fucom
xlat
shlb
mov
cld
lret
jmp
xlat
data16
xchg
test
jl
cmc
xor
mov
lock
sbb
insl
in
pop
fnstsw
imul
out
push
out
pmullw
xchg
repnz
popa
and
fdivrp
xlat
dec
or
ljmp
enter
ret
out
test
jns
imul
inc
mov
cmpsl
jae
outsl
fwait
test
lods
push
jmp
adc
test
out
mov
cmp
xchg
fwait
mov
mov
callw
cmp
jo
pop
pop
scas
lods
leave
or
mov
mov
xchg
xor
outsb
andl
xor
push
push
push
jb
test
lods
aas
loop
jge
mov
shlb
xchg
mov
call
adc
fiaddl
lret
ds
jmp
bound
or
insb
fisubrs
push
push
imul
and
popf
fs
iret
jecxz
movsb
test
jbe
cmp
add
jmp
lret
push
push
xor
add
arpl
ss
mov
dec
insl
test
test
sub
sub
xchg
push
jno
pop
adc
add
movsb
sbb
mov
imul
call
pop
jns
mov
pop
adc
inc
loopne
insl
loope
iret
inc
cmpsb
ret
jecxz
bound
jle
push
aam
push
sbb
pusha
outsb
sub
lock
rorb
adc
das
dec
xor
mov
stos
pop
or
xchg
lods
je
or
mov
clc
in
cmp
push
movsb
and
in
shlb
push
mov
lahf
scas
sbb
pop
sahf
dec
and
sbb
dec
rolb
aaa
imul
lds
mov
mov
dec
nop
and
xchg
rclb
out
inc
test
push
push
iret
and
mov
cs
je
mov
ja
jecxz
adc
or
adc
sub
and
mov
sub
mov
add
xchg
mov
imulb
inc
inc
mov
sarl
mov
repnz
aas
fistpl
cli
xor
ds
and
xchg
dec
cld
leave
in
pushw
fmull
in
add
jg
add
sbb
mov
push
xchg
xchg
and
xchg
rorl
mov
mov
dec
and
and
dec
push
mov
outsl
sarb
xor
push
icebp
lahf
rol
jg
bswap
ret
rclb
xchg
sub
dec
cmp
and
cmpsb
sbb
ret
jle
dec
mov
cmp
add
inc
push
pop
pop
cwtl
int
jns
or
inc
mov
and
call
insl
dec
cltd
cmpsl
out
push
out
cwtl
inc
xor
push
pop
mov
scas
lock
sahf
cli
inc
dec
mov
popf
sub
andl
xchg
loope
or
js
adc
inc
xchg
mov
push
pop
in
or
iret
pop
fildl
fs
add
or
xor
lods
lahf
shlb
addr16
inc
in
fwait
xor
mov
dec
data16
popf
movsb
lock
sub
mov
sahf
xchg
sarb
shlb
pop
dec
pop
push
insl
cmp
mov
leave
leave
lahf
xchg
inc
pop
movsl
xorb
insl
xchg
jg
xchg
xchg
sarl
adc
repnz
jmp
jns
jp
sub
pop
lds
adc
movsb
or
sbb
add
add
add
adc
addr16
jecxz
fidivl
in
push
lods
sub
add
dec
enter
mov
cmp
mov
jecxz
and
jmp
xchg
addr16
push
lahf
je
fsub
lret
in
jle
mov
lret
adc
push
fcmovnb
mov
out
sahf
jno
pop
std
sbb
in
stos
xchg
push
mov
shlb
mov
xor
sbb
adc
pushf
sbb
roll
lods
cltd
jg
call
js
add
frstor
xor
repz
scas
adc
ret
fldcw
outsb
mov
adc
mov
adc
insb
inc
jns
popf
pop
or
and
jg
test
dec
lods
cmp
movl
mov
mov
or
xchg
stos
repnz
mov
mov
cld
jmp
repnz
pushf
std
jno
outsb
sub
push
rorl
and
clc
test
popf
pop
mov
jmp
mov
outsb
cmp
dec
xor
jne
mov
ss
das
mov
xor
mov
xor
lock
addr16
mov
addb
gs
mov
subb
jge
mov
cmp
loopne
pop
pop
fldcw
cmp
hlt
xchg
dec
orl
sub
xchg
je
ret
out
push
out
pop
lds
or
movntps
inc
call
lods
pcmpgtw
mov
push
pop
sar
hlt
adc
cmp
lret
mov
out
lea
cmp
mov
pop
jge
and
or
outsb
test
int
xchg
mov
xchg
int
daa
mov
xor
pop
hlt
push
outsb
jb
aaa
icebp
out
and
movsl
idiv
cli
sub
mov
pop
sbb
in
hlt
push
pop
arpl
shrb
cwtl
mov
ret
dec
testb
inc
fs
mov
movsl
mov
dec
pop
xchg
jo
std
cmpsl
xchg
jns
mov
fists
mov
or
ljmp
out
sub
mov
in
sub
cmp
push
sub
mov
js
dec
sub
sub
jge
aaa
add
adc
and
or
push
out
pop
aad
pop
cmp
mov
cmpsb
ja
mov
inc
out
popa
inc
inc
xchg
adc
and
or
push
sbb
xor
sub
pop
mov
mov
and
push
mov
addl
or
mov
jmp
jmp
int
shl
subb
push
in
pusha
icebp
imul
mov
popf
mov
es
pusha
out
mov
out
repz
imul
push
mov
loope
and
add
movsb
pop
add
fs
scas
inc
mov
or
pop
jle
jnp
add
mov
mov
movsl
addr16
insb
dec
or
inc
dec
mov
inc
push
mov
mov
jns
jle
scas
out
inc
roll
in
jmp
mov
mov
mov
pop
in
out
sub
jge
jg
add
sub
adc
jbe
hlt
cmp
ss
xor
fsub
andb
xchg
dec
push
hlt
add
movsl
push
fld
xchg
and
mov
inc
sti
mov
jne
leave
pusha
jp
mov
in
and
inc
dec
add
push
mov
sbb
fcompp
adc
outsl
push
aas
and
mov
mov
jb
mul
cmc
mov
mov
mov
inc
cmp
movsbl
jge
mov
ds
fistl
test
sbb
cmp
pop
pop
fsubs
aaa
adc
fdivrp
xchg
sub
les
js
enter
insb
sbb
jmp
fidivl
jne
cmc
ds
and
sub
jns
mov
jge
test
repz
mov
push
jle
cmpsl
or
add
mov
subl
test
or
in
jns
xor
loopne
fstpl
subl
std
icebp
mov
emms
clc
xchg
push
ret
es
leave
push
dec
cmp
sub
and
jo
mov
and
mov
sub
push
and
mov
cmp
cmpsb
xchg
repnz
negl
lret
mov
adc
push
mov
iret
mov
or
ss
cmp
xchg
in
aas
xchg
aaa
and
dec
mov
leave
mov
xor
test
aad
xchg
jle
push
das
sub
fucomip
adc
and
int3
fldl2e
lock
or
dec
int
jecxz
cmp
fiadds
lea
or
adc
not
mov
stos
jg
push
jbe
pop
cmpsl
dec
arpl
aas
insl
cs
and
repnz
loop
mov
fildll
cmp
pushf
aaa
adc
jne
push
xor
cltd
pop
dec
int3
jnp
mov
mov
sub
or
jp
nop
mov
filds
stos
dec
cltd
ret
sahf
test
aad
mov
inc
push
cmc
push
jne
rcrb
das
mov
mov
or
jb
xchg
rcr
mov
ds
popl
fmuls
dec
jnp
cld
pop
lock
test
fsub
jo
pop
divb
xchg
pop
cwtl
sbb
int
jbe
adc
and
and
jge
xchg
xchg
mov
dec
jg
jno
test
xchg
lret
cwtl
push
iret
mov
add
and
test
mov
cld
push
or
or
xor
xor
outsl
pop
pop
mov
divl
mov
decb
into
xchg
lcall
sbb
jne
xorb
inc
dec
pop
mov
add
out
push
mov
in
loop
mov
scas
fdecstp
or
fs
insb
xor
pop
xor
add
movsb
icebp
mov
push
call
cmc
test
insb
pop
fmul
aaa
movsl
inc
pop
sbb
inc
xor
pop
jno
icebp
or
testl
cltd
jge
lds
aaa
pop
fldenv
pusha
pop
push
ret
dec
mov
push
push
aas
cmpsb
out
adcb
sub
or
test
jo
insb
mov
std
das
imul
lds
add
rorb
addr16
inc
imull
nop
push
fnsave
fbld
scas
mov
scas
out
jns
daa
and
fs
pop
push
or
scas
cmpsl
jb
pop
push
sti
pop
jno
and
adcl
mov
cmp
lds
pushf
and
js
mov
movsl
mov
lret
jns
js
std
mov
sbb
xchg
jg
outsb
xor
mov
faddl
jbe
aam
mov
xchg
add
into
xor
jnp
pop
iret
mov
shl
mov
jle
mov
mov
int
xchg
mov
push
lods
dec
arpl
sarb
add
push
test
les
cli
out
je
sbb
stos
sbb
jge
aad
cmp
mov
jbe
clc
or
adc
repnz
add
mov
fstpt
std
repz
je
and
fildl
sub
pusha
es
popf
dec
pop
sub
cmp
nop
xchg
lahf
xchg
rorl
xchg
fwait
sub
daa
sbb
call
cmp
dec
test
filds
mov
xor
pop
call
cmp
mov
icebp
call
fistl
rorl
enter
outsb
jg
pavgb
test
push
js
lcall
jmp
jno
xchg
leave
rclb
in
inc
clc
jg
loopne
jb
aaa
testb
hlt
mov
std
dec
fsubs
push
jne
int3
inc
xor
xchg
add
sbb
xor
les
push
popf
jno
jle
push
ret
hlt
push
jno
fs
in
jecxz
xchg
insl
pop
int3
fdivrl
xchg
out
pop
cmc
pushf
xlat
inc
sub
lcall
fwait
xor
movl
push
movsl
mov
mov
mov
popa
push
xchg
fldenv
adc
jmp
sub
daa
inc
jp
movsl
in
mov
div
mov
mov
leave
jnp
pop
xor
jae
add
dec
jecxz
jno
ljmp
and
movsl
aam
out
imul
sbb
or
icebp
pop
fs
rcll
mov
mov
repz
gs
push
push
sub
ret
push
movsl
sub
mov
sub
pop
sbb
and
mov
sub
pop
pop
push
mov
icebp
jle
js
jp
test
imul
push
mov
adc
jp
ret
jp
jl
push
scas
shl
das
xchg
fsubp
fimuls
push
inc
pop
ss
dec
cmp
out
divb
xor
call
in
cmc
mov
jmp
pushf
rcrb
testb
pop
mov
add
jno
sahf
xchg
int
push
jae
pop
flds
mov
ret
xchg
lret
test
fwait
out
cmp
sbb
jge
lds
js
push
btr
insl
xchg
ss
cmpsl
mov
dec
dec
jo
sbb
imul
mov
cmp
xor
mov
popf
outsl
pusha
mov
xchg
mov
subb
mov
stos
xchg
stos
jae
aam
mov
ficomps
sbb
outsl
ja
sarl
dec
push
out
jbe
test
andl
adc
push
mov
insb
jmp
fdivr
adc
inc
sub
cltd
jnp
sub
jge
mov
push
addl
mov
jno
aas
adc
addr16
sub
adc
in
inc
inc
leave
push
mov
lret
movsl
mov
fimull
adc
arpl
movsb
mov
in
movsb
lods
cltd
popf
add
out
fwait
sahf
push
outsl
adc
ds
fadds
dec
jbe
adc
inc
adc
mov
jnp
inc
cltd
cmp
cmp
and
mov
mov
jecxz
dec
mov
aam
push
xor
add
xchg
xchg
jmp
fnstcw
in
add
pusha
decb
inc
lods
shrb
ljmp
jo
lret
jl
push
jbe
lock
dec
inc
adc
sbb
dec
aas
pop
inc
jbe
adc
int
jmp
bound
xor
pop
jns
cmp
mov
je
lret
mov
fidivrl
mov
inc
sahf
push
xor
pop
xchg
pop
adc
xor
inc
xchg
mov
sarb
and
pusha
movsb
int3
jp
pop
mov
pop
insb
pop
aas
jmp
push
mov
scas
iret
add
inc
test
loopne
jmp
sub
adc
mov
mov
movsl
ljmp
mov
jl
pop
sub
lods
sub
sarb
ret
xor
movsl
insb
pop
or
cmpsb
addr16
mov
lret
mov
scas
in
add
lds
pop
jp
add
out
shlb
out
scas
xchg
sbb
and
mul
nop
ja
es
testl
xchg
imul
fsub
es
gs
int3
cltd
in
int3
or
jp
xchg
repz
xchg
xlat
aas
and
into
enter
fldl
cmc
aas
cmpb
jns
fidivrs
icebp
jp
outsb
dec
ror
add
dec
sub
jmp
jno
out
fcomip
dec
rorb
aas
jne
lds
out
test
add
std
cmp
pop
fnstcw
sbb
fucomp
or
out
add
inc
in
ja
sub
sbb
call
sbb
scas
mov
dec
lock
ffree
mov
movsb
add
jae
add
lahf
rol
addr16
sub
rcr
sbb
loopne
clc
xchg
cmpsb
sbb
xor
cmp
push
add
gs
xchg
mov
aaa
mov
push
int
mov
or
sti
cmc
ret
lock
ret
repz
sub
in
lret
inc
cmpsb
sarb
insb
pop
xor
jne
outsb
imul
sahf
mov
mov
mov
fistpl
mov
cltd
nop
loope
shlb
pop
or
mov
shll
movsb
dec
stos
lret
and
adcl
sbb
sbb
mov
lea
ret
and
imul
into
pop
push
pop
jno
enter
rcrl
mov
adc
push
sub
cmp
in
mov
clc
imul
mov
mov
mov
cli
ret
aaa
cs
add
push
fwait
hlt
jbe
je
scas
inc
dec
stc
sti
cmp
out
lcall
lcall
mov
imul
subl
jp
mov
fwait
ljmp
cmp
hlt
scas
or
mov
gs
sbb
dec
mov
iret
jp
outsl
inc
lds
mov
push
mov
sbb
mov
inc
gs
pop
call
fld1
pushf
mov
xchg
and
setg
hlt
movsb
mulb
fdivrp
adc
mulb
lods
arpl
test
int3
jne
adc
sarl
mov
or
mov
out
stc
popf
mov
call
es
pop
xor
jo
ret
jmp
into
or
add
stos
inc
mov
aam
pop
jns
pop
in
movsb
stc
scas
insl
sub
mov
and
cmpsb
cmc
cmp
xchg
sub
xchg
mov
mov
nop
pushf
inc
add
xor
sbbb
jb
test
mull
mov
fcomp
mov
jbe
add
mov
dec
xor
adc
jecxz
xchg
roll
xor
lcall
loop
dec
and
icebp
scas
decl
repz
sub
notb
repnz
push
sbb
cwtl
test
dec
cmc
xchg
add
jbe
add
inc
jl
out
gs
fstpl
mov
or
xchg
mov
pop
jp
sbbl
push
lret
sbb
dec
pop
sahf
cmpsl
into
pop
add
es
push
js
xorl
rcrl
mov
xor
xor
mov
push
pusha
clc
test
adc
pop
add
jecxz,pn
mov
hlt
outsb
ret
pop
mov
in
xor
cli
push
pop
pand
mov
sti
ret
fidivrl
jnp
stc
mov
dec
out
pop
xchg
mov
loop
fstp
jne
gs
clc
je
out
xor
xor
mov
xchg
or
add
adc
or
pop
xchg
dec
ljmp
mov
push
adc
pop
push
fwait
push
clc
inc
lcall
sub
int
clc
dec
push
sub
pop
mov
sahf
cs
imul
lds
shlb
lea
jae
clc
or
out
ret
push
mov
or
insl
js
and
das
dec
mov
outsb
loope
repnz
mov
lods
pop
xor
ja
inc
xlat
in
lods
pop
adc
jbe
into
sbbl
mov
aad
cmc
and
ss
shll
sbb
cwtl
pop
fst
fdivs
or
jbe
lods
fldln2
jo
mov
jmp
mov
insb
or
fstpt
xchg
push
pop
mov
call
mov
adc
repz
mov
mov
mov
lahf
or
lods
hlt
dec
mov
in
mov
fs
pop
cmp
or
jae
lods
mov
loop
aaa
push
insb
sub
and
add
adcb
push
popa
cmc
addr16
xchg
addr16
std
and
cmpsl
mov
mov
addr16
rclb
pop
iret
ror
push
sub
push
cmp
mov
adc
into
xchg
out
pop
mov
lea
and
lret
mov
out
psubsb
loope
popa
movsb
add
sub
inc
addb
addb
pop
mov
xor
clc
jg
movsl
mov
xlat
push
cwtl
nop
add
mov
inc
ljmp
xchg
dec
popf
mov
bound
add
shrl
int3
xchg
test
cmp
jb
std
cmp
scas
cmp
idivb
ret
loopne
inc
fsubs
sahf
cmpsb
add
cmc
cld
stos
inc
mov
and
lock
and
fisubrs
inc
bndldx
xchg
adc
mov
sub
xchg
leave
ret
sbb
dec
push
popa
sub
stc
jecxz
ret
pop
inc
mov
int3
ret
dec
stc
jo
mov
popf
pop
std
loope
mov
sbb
xchg
inc
dec
sbb
fistps
lods
insb
xor
insl
mov
and
sbb
aam
xchg
push
hlt
imul
dec
sub
dec
daa
dec
adc
fidivrs
xchg
sub
dec
pop
xchg
xor
scas
mov
jbe
rcl
js
sub
fneni(8087
insb
repz
sub
pop
cmp
lcall
fcmovbe
jmp
and
inc
jmp
test
adc
mov
test
mov
mov
shrb
lret
dec
das
outsl
mov
adc
xchg
scas
push
pusha
xor
push
clc
in
xchg
fnstenv
lea
psubsb
inc
xor
icebp
andl
ds
loopne
sbbb
lret
shlb
stos
pop
and
out
add
push
sbb
or
outsb
and
in
aas
push
ljmp
xor
fistpll
pop
call
or
mov
cmc
aaa
pop
rclb
xchg
scas
es
add
shll
arpl
das
push
jp
popf
mov
mov
add
pop
inc
loopne
arpl
add
in
insl
jne
xor
inc
xchg
or
outsl
mov
dec
loop
lea
add
push
inc
in
test
xchg
jno
or
pusha
xchg
fistps
in
ret
dec
jmp
subb
push
pusha
mov
inc
sti
mov
inc
or
int
or
dec
add
and
jae
testl
mov
and
mov
and
or
sub
mov
jo
adc
push
imul
mov
cmp
sub
inc
mov
pop
cmpsl
pop
insb
dec
jg
jns
jbe
aam
mov
push
xor
mov
decl
push
push
in
sub
enter
xchg
data16
arpl
loopne
or
insl
inc
push
inc
dec
adcl
pop
leave
loopne
push
adc
adc
sti
fdivrl
xchg
sub
pop
hlt
sub
xchg
mov
pop
sbb
in
adc
in
test
mov
push
cmpsb
push
mov
mov
mov
aad
into
mov
adc
sti
cmp
ret
ljmp
dec
cli
sub
fmuls
ds
pop
lret
shll
mov
sbb
cwtl
push
ret
pop
or
pop
dec
fcoml
in
mov
repnz
xchg
mov
ret
hlt
pop
addr16
stos
xlat
and
in
or
jmp
hlt
leave
ss
repz
ror
sbb
pop
pop
sbb
test
sbbl
pop
and
xor
mov
addr16
test
jne
lahf
mov
push
add
imul
mov
inc
xchg
mov
xchg
fcmovnbe
imul
arpl
and
xchg
jge,pn
inc
or
xchg
test
mov
inc
jmp
mov
sub
sbb
push
stos
pop
add
mov
fstpl
test
arpl
pushf
ficoms
add
arpl
gs
pushf
lods
dec
adc
jl
sbb
jecxz
push
or
test
out
cmpsl
mov
nop
mov
stc
mov
insb
dec
xchg
adc
es
xchg
gs
orl
in
stos
int
push
sub
rorb
xchg
js
add
pop
fisubs
mov
cwtl
aam
test
and
mov
push
mov
jge
dec
insb
sbb
push
mov
cmp
mov
je
lea
call
jo
movsl
jbe
call
lea
mov
jbe
loop
mov
jnp
adc
xor
in
adc
lock
push
pop
sub
and
mov
mov
es
mov
jl
dec
adc
xchg
sbb
cmp
sbb
ds
mov
push
xor
inc
mov
jae
hlt
xchg
lcall
fs
into
inc
out
mov
jp
outsl
and
push
mov
jbe
xchg
cmp
cmp
push
mov
subb
jb
jl
ja
xlat
or
or
xor
or
movsb
adc
fnstsw
arpl
dec
sar
cmp
nop
movsl
js
add
ss
and
xchg
data16
cmp
jmp
outsb
or
pop
xchg
bound
lock
out
xchg
loop
stos
in
xchg
pop
push
stos
and
cmp
xchg
pop
pop
adc
sub
jnp
rcll
mov
adc
and
push
les
push
push
jno
sub
xchg
add
xor
xor
jns
ss
aad
cld
popf
jo
sub
sbb
testb
jge
out
movsl
stos
adc
cmp
xor
cmp
js
jns
jne
or
dec
xchg
xor
lds
insl
js
sub
mov
outsb
call
add
enter
cmpsb
aaa
push
insb
adc
lahf
bound
mov
push
cwtl
fs
rolb
testl
sub
outsb
das
scas
inc
pop
cmp
sub
sarb
fwait
lock
inc
cmpsb
out
fisubl
dec
cmpsl
push
xchg
push
in
mov
add
cmpsb
sub
mov
jecxz
pop
addr16
dec
xchg
pop
or
lock
push
cmpsl
mov
popf
mov
pushf
mov
or
fimull
jle
mov
insb
cmp
fs
hlt
sbb
dec
lock
add
roll
and
adc
pushl
out
fildl
cltd
dec
add
add
adc
ret
stos
sub
mov
stc
neg
mov
mov
mov
and
fdivl
stc
mov
pop
xor
call
xor
ss
in
cld
cmp
push
popf
fimuls
ss
mov
outsl
fnstcw
jb
daa
xlat
cmp
fisttpll
pop
xchg
sub
push
add
jnp
cmpb
xlat
cltd
test
fdiv
xchg
mov
je
cltd
into
bound
bound
shrb
xor
or
pop
fstpl
addr16
xor
test
loop
push
imul
jle
out
lahf
or
icebp
daa
jmp
aad
mov
popa
xlat
jge
fsubrl
sbb
xchg
mov
and
imul
mov
push
pop
loop
pop
and
mov
ret
je
push
cwtl
fwait
pop
movsl
sub
les
je
or
jle
xor
adc
cmp
mov
subl
lock
push
js
jo
adc
jg
std
dec
cmp
mov
xor
loop
jb
stos
test
cmpsb
sbb
out
jns
push
adc
sub
loopne
adc
lret
xchg
out
add
loop
inc
in
xor
or
adc
push
add
lahf
lea
sahf
jb
inc
sub
xor
shrl
jl
pop
jge
pop
rol
lcall
lcall
leave
stos
inc
inc
fisttpl
jbe
mov
ja
or
adc
xchg
jmp
xor
inc
fstl
pop
add
mov
fisubrs
and
mov
dec
jmp
sbb
fisubs
xchg
mov
adc
or
sbb
nop
jl
aas
xchg
stos
mov
mov
and
xor
dec
ljmp
lret
test
mov
push
daa
jge
les
mov
pop
scas
das
push
pop
orb
fcomps
test
sbb
arpl
ficompl
cmp
inc
add
sbb
icebp
sbb
xor
push
test
mov
inc
inc
sbb
dec
xchg
and
lcall
sti
and
in
pusha
in
jecxz
and
mull
daa
mov
xchg
mov
fidivrl
stos
std
out
out
cltd
addr16
sub
cmp
push
insl
xchg
xor
mov
popa
xchg
pop
inc
stc
xor
dec
xlat
pop
push
cs
mov
out
sub
addr16
add
imul
push
jnp
add
jno
mov
lahf
inc
and
hlt
xchg
shr
pusha
xor
sbb
xor
inc
fsubr
lahf
stos
push
jnp
push
arpl
outsl
and
jbe
movsb
mov
sti
mov
jecxz
sti
ljmp
orb
cmp
adc
pop
adc
test
jae
andl
lds
jmp
adc
mov
popa
mov
mov
and
test
inc
push
add
in
push
or
rcrb
mov
adc
dec
scas
mov
fildl
bound
adc
lds
jp
sub
pop
fistps
in
push
xchg
ror
mov
stc
mov
lahf
pop
xchg
dec
xor
rorb
push
jge
shl
jp,pt
mov
mov
repz
mov
pop
and
fnsave
inc
aaa
and
xor
or
loop
mov
loopne
push
icebp
dec
fnstcw
fldz
repz
lds
cmp
std
shrl
jge
test
pop
in
adc
and
push
and
enter
or
lret
imull
cmp
jae
shll
loope
movsb
test
and
fcompl
jecxz
xchg
clc
test
jge
int3
lods
es
in
into
loop
push
sub
dec
ss
aad
stos
lcall
jnp
xor
pop
lret
jno
dec
pop
cmpsl
cmpsl
cmpl
add
in
test
loop
dec
aad
mov
les
aad
adc
dec
pop
push
mov
lock
pop
bound
mov
ficoms
cmp
imull
ds
andl
push
cwtl
cltd
jg
jmp
arpl
sbb
xor
imull
aam
jg
fadd
dec
aaa
shlb
xchg
xchg
sub
xchg
xor
into
sub
sbb
bound
lods
call
mov
adc
negb
adc
xor
sub
pop
leave
call
dec
int
pop
fsubrs
pop
inc
je
sub
xchg
enter
es
imulb
shlb
xlat
cwtl
fidivrs
push
inc
dec
test
icebp
push
mov
cmp
sbb
dec
shl
and
add
mov
and
dec
fwait
in
cwtl
xor
pop
add
xor
shr
lcall
pushf
cwtl
lods
or
test
arpl
fcmovnu
pcmpeqd
jb
inc
push
movsl
subl
shl
mov
pop
sbb
push
data16
mov
loope
push
lret
jp
je
in
out
and
loop
mov
test
lock
outsl
sahf
push
xor
pop
test
pop
das
push
call
shll
sub
arpl
test
stos
xchg
and
data16
sub
or
stos
pushf
mov
push
addr16
sub
xchg
inc
mov
mov
jno
ja
inc
ja
loop
add
xchg
sub
mov
push
add
xor
test
popa
add
mov
lds
pop
cs
addr16
pop
in
pop
xor
rolb
xchg
mov
or
and
jbe
and
cmpsb
mov
in
push
out
mov
out
pop
lret
out
test
add
sbb
roll
pop
out
fsub
mov
lods
aam
or
stos
pop
fwait
xor
pushf
jecxz
dec
test
xchg
mov
mov
push
sub
cmpsb
jl
loop
gs
jle
stos
jle
movsl
leave
fdiv
cwtl
or
dec
xor
inc
sbb
rclb
pusha
pop
xor
outsb
dec
daa
mov
cld
int
jae
fs
sbb
push
push
jne
aas
adc
js
test
dec
mov
cmpl
xchg
adc
mov
jmp
jne
jbe
bound
daa
cmp
sub
inc
push
push
dec
xor
ret
push
incb
ds
idiv
outsb
dec
add
pop
jbe
das
and
shlb
mov
mov
and
call
das
in
out
xor
mov
pusha
sbb
mov
pop
xchg
sub
and
mov
inc
cmpsb
cmp
rcl
xor
call
xchg
xlat
pop
mov
inc
sbb
add
stc
ret
adcb
fisttps
cmpsb
scas
jmp
jne
add
shll
lret
hlt
sbb
punpcklwd
cltd
mov
rcrl
adc
out
out
mov
cmp
cmpsl
and
lds
cltd
shr
mov
cmc
and
int3
test
push
jnp
pop
mov
data16
inc
sbb
lea
jmp
dec
mov
jmp
sbb
and
lahf
cltd
push
mov
and
pop
add
lahf
mov
imul
jg
mov
push
xor
fsubrs
mov
and
xchg
push
hlt
stc
lock
xor
adc
rcrl
and
pop
mov
mov
inc
sub
ret
pop
fistpll
inc
inc
and
ds
jle
cmp
jb
hlt
or
cmpsb
sub
and
xor
push
in
xor
fnstcw
or
fstpl
sti
lock
pop
insl
jle
jo
cmp
mov
dec
dec
mov
mov
push
pop
sbb
das
arpl
xlat
cmpl
mov
aam
pop
in
shlb
lea
lret
xor
mov
cmp
push
cmp
cli
adc
popf
pop
sbbb
fsubs
bound
ficompl
jns
or
jmp
or
ljmp
jnp
jg
push
pop
add
popf
out
pop
rcll
and
xor
popfw
mov
inc
repnz
push
and
cmc
add
arpl
xor
xor
loope
pop
cs
sub
bound
mov
outsb
adcb
push
sbb
aad
jl
sti
push
aad
in
jp
test
aas
scas
add
xchg
cwtl
cvtpi2ps
xchg
test
fstpt
sub
cmp
mov
aam
test
jmp
inc
xor
aas
sti
fs
or
inc
loop
mov
cmc
les
cld
popa
push
add
push
add
push
sti
addb
xchg
aaa
mov
outsl
jbe
decl
inc
je
cltd
add
jbe
wbinvd
fnstcw
je
daa
clc
dec
sti
adc
fmul
ffree
cmp
stos
mov
cmp
push
das
cmp
iret
lret
mov
pop
mov
xchg
mov
stc
movsb
jl
mov
stos
mov
sub
cmp
mov
pop
mov
cmpsb
dec
inc
jbe
repz
mov
les
ret
cli
mov
scas
fwait
adc
add
jmp
dec
cmp
push
push
int3
push
push
adc
jne
shl
or
fwait
pop
seta
or
rolb
jle
aam
mov
icebp
xchg
mov
insb
cmp
xchg
pushf
insb
xor
add
cmp
lahf
pop
fcomps
gs
push
rcrl
xor
jo
les
pop
imul
sub
pop
sub
and
sbb
ret
add
push
push
scas
dec
sbb
rcrl
mov
cld
jle
sub
xchg
scas
imul
jmp
jmp
jp
in
mov
add
sbb
xchg
ja
push
in
mov
daa
xchg
add
mov
or
jmp
adc
mov
movsb
cmpsl
jp
dec
popa
jno
dec
mov
cmc
call
imul
stc
cmp
push
mov
enter
sbb
ljmp
in
inc
push
in
inc
push
test
fildl
scas
xor
sub
sbb
les
mov
aam
in
cld
add
dec
decb
push
and
and
mov
insb
xchg
jns
test
int3
push
into
orb
dec
imul
movsl
cli
stos
adc
aad
cmp
inc
or
fisttpll
ret
bound
adc
dec
insb
and
outsb
and
ss
cmpsl
inc
jl
mov
push
and
mov
or
add
mov
lret
lods
dec
fwait
dec
mov
cmc
dec
sbb
push
loop
shlb
adc
xlat
outsb
xlat
push
or
loop
ret
out
cmpsl
pop
pop
lds
cmp
int3
ljmp
mov
popf
pop
cld
movsl
movsl
push
mov
add
setnp
test
xchg
popf
stos
lret
cmpsb
faddl
imul
xor
mov
jns
push
jne
in
int3
shl
ret
dec
mov
xchg
fwait
push
leave
popf
out
pop
mov
fcmovu
mov
xchg
adc
popf
nop
mov
mul
sbb
xorb
inc
aad
push
popf
imul
xchg
std
shrb
stc
add
and
adc
pop
aaa
sbb
test
sbb
mov
or
xor
sbb
xchg
scas
shl
jle
dec
sub
mov
mov
cmpsl
daa
sub
les
sti
dec
fidivl
mov
add
into
loope
fisubrl
cltd
mov
lock
or
aam
xchg
jle
cli
pop
fidivs
push
sbb
xor
idivb
xchg
insl
aad
push
or
movsl
fs
andl
addb
or
mov
shll
out
sbb
dec
push
call
mov
jnp
mov
stos
pop
add
ret
jp
fnsave
jno
pop
and
fsubrp
repz
rcll
sub
cmc
jmp
popa
idivb
out
cmp
jae
in
mov
popa
orb
xor
fisttpl
mov
lret
push
cs
mov
aad
mov
and
cld
out
sbb
popa
loope
or
inc
or
mov
imul
lahf
jns
pcmpeqb
test
mov
mov
sbb
fsubrs
push
ljmp
fistpll
xor
add
loop
lcall
cmp
bound
out
cltd
ss
inc
and
je
sub
push
out
and
adc
enter
mov
cli
loope
cli
notb
cmp
mov
pop
dec
adc
ja
sub
daa
scas
out
hlt
nop
enter
push
push
dec
into
aas
cmp
adc
pop
xlat
adc
adc
dec
lcall
mov
mov
nop
mov
and
fiadds
push
sub
inc
dec
mov
clc
lea
xchg
xadd
mov
mov
jno
repnz
mov
inc
cmp
adc
addr16
dec
cs
jp
cmp
mov
add
ds
inc
stos
sti
mov
ret
xchg
shrl
stos
scas
add
pop
sbb
scas
rcr
sbb
and
jge
adc
arpl
pop
pop
or
das
push
fnstsw
push
shlb
xor
mov
add
cs
outsb
sbb
mov
hlt
addr16
int
or
xlat
xchg
scas
pop
sahf
lods
sub
add
scas
mov
js
push
xorb
dec
rorb
inc
xorl
icebp
dec
ss
push
pop
jl
mov
aas
jae
leave
aad
xor
and
push
enter
cltd
outsl
mull
add
mov
lea
sbb
push
inc
popa
push
add
fisubs
rol
lea
push
gs
dec
insl
leave
test
xor
pop
std
jo
push
adc
or
movsl
xor
mov
roll
jae
ficoml
fsub
lret
lock
pop
inc
into
push
pop
sbb
pop
and
ret
adc
xchg
imul
cmp
fwait
in
pop
jmp
push
or
cltd
shlb
lods
imul
mov
push
mov
mov
add
sub
imul
das
mov
and
iret
jecxz
and
fbstp
cmpsb
ret
push
fisttps
cmc
push
aam
repz
xchg
loop
cwtl
mov
or
push
mov
cmpsl
jne
push
hlt
mov
cltd
cltd
jmp
cmp
pop
mov
lods
pop
jae
loopne
int
movsb
mov
hlt
inc
lock
sbb
inc
pop
les
pop
xchg
sbb
mov
loop
sbb
mov
mov
fdivp
mov
sub
dec
hlt
test
inc
sbb
xor
shl
mov
sub
dec
int3
pop
loopne
push
nop
negl
xchg
and
push
jmp
jmp
pop
pop
sahf
sbb
or
test
cltd
mov
mov
jl
in
mov
push
lea
jmp
notl
mov
loope
and
pop
xchg
test
ficompl
cwtl
dec
pop
shll
jo
sbb
cmc
stc
mov
mov
jne
and
les
sbb
jmp
pop
mov
aas
inc
bound
jae
ljmp
jp
mov
stc
fmull
aam
cmp
jne
mov
sub
movsl
movsl
test
push
sbb
fsubp
inc
ret
push
scas
test
testl
enter
mov
decb
dec
push
jp
pop
movsl
lods
loope
inc
sbb
xor
jne
mov
pop
xor
lea
mov
int3
daa
std
mov
sub
and
xor
inc
inc
jecxz
std
int3
out
and
xchg
outsl
dec
pop
shll
dec
cmpsb
mov
or
push
insb
inc
imul
adc
lret
mov
sbb
cs
push
mov
pop
dec
test
lea
lock
push
cmp
in
std
jmp
leave
orps
sub
and
mov
subl
jne
sub
orb
jle
incl
cmp
sbb
lock
add
shlb
jns
or
pop
mov
iret
jp
sub
cltd
aaa
pop
cmp
mov
lea
lods
xchg
add
ss
lods
lds
repz
gs
or
imul
or
pop
sbb
add
mov
ljmp
imul
push
ss
adc
sar
movsl
cmp
cmp
push
out
in
push
popf
lods
movsb
inc
pop
loop
outsb
push
push
push
push
in
testl
jb
inc
xchg
jno
xor
sub
mov
inc
fwait
leave
arpl
and
xor
sub
enter
movsb
iret
sbb
jb
adcl
fwait
push
cli
icebp
inc
xchg
add
lods
jbe
arpl
mov
inc
iret
mov
cmp
loopne
aas
negl
xchg
jl
repz
xor
jo
and
test
mov
nopl
inc
sub
push
pop
les
in
int3
out
pop
cld
std
push
movsl
test
repz
repnz
push
popf
sbb
xor
sbbl
stos
popf
sbb
adc
xor
add
js
pop
or
mov
sbb
cvtpi2ps
cmp
movsb
pop
adc
mov
xor
sub
call
je
add
addr16
test
fildll
adc
sub
push
xor
pop
adc
mov
call
cmpsb
imul
das
test
pop
insb
xchg
adc
or
xor
lods
hlt
in
hlt
push
pop
sub
and
mov
lds
xor
pop
sub
movsb
fimull
inc
push
jb
mov
adc
jnp
jae
aaa
insl
mov
sub
lcall
movsb
push
inc
hlt
cmp
mov
xor
cmp
or
jge
js
jb
cmp
addb
in
lea
arpl
jle
in
lret
movsl
jp
insb
pop
jmp
push
hlt
push
fidivl
xchg
add
sahf
pop
mov
ja
inc
inc
mov
mov
pop
nop
add
scas
outsl
popf
jle
sbb
fldt
xor
outsb
stos
cmc
xor
pop
push
adc
pop
adc
or
adc
lock
mov
push
push
add
sbb
je
push
dec
adc
push
enter
sub
push
test
jg
adc
cmp
jnp
pushf
ss
cmp
xor
cmp
xchg
pop
mov
mov
push
loop
sahf
xchg
fisubl
sbb
inc
aas
imul
jecxz
int
roll
in
pushf
repz
bound
xor
lds
lock
and
outsb
push
bound
jge
jg
pop
popa
nop
imul
in
push
lahf
cmp
loope
mov
jmp
or
enter
sub
or
dec
jae
lock
jno
jno
pop
int3
aam
jnp
dec
out
mov
lcall
repnz
lret
mov
add
bound
or
loope
sub
pop
push
pusha
ljmp
jl
push
sti
test
cmp
mov
stos
cmp
add
outsl
dec
xor
sahf
mov
dec
add
fwait
jbe
pop
fwait
xor
lahf
je
std
inc
pop
cmp
aam
xlat
daa
inc
jp
mov
mov
mov
das
vpshuflw
inc
lret
sub
lods
push
dec
adc
scas
xchg
dec
data16
cmp
scas
sti
or
in
push
test
adc
and
mov
inc
mov
dec
imull
and
stc
aad
icebp
out
sub
mov
mov
aaa
dec
xor
jns
stos
mov
inc
insl
push
and
pusha
icebp
test
add
add
enter
xlat
sub
pop
or
fidivl
loopne
aad
ret
jns
and
fs
jne
aaa
insb
mov
and
lahf
xchg
sahf
inc
js
imul
stos
out
cld
jno
pop
clc
or
call
int
sub
sbbb
mov
lahf
push
pop
jg,pn
test
cmc
arpl
pop
fwait
aaa
mov
push
scas
sbb
fsubl
loopne
aad
sub
mov
lock
or
cmpsl
add
xchg
jno
xor
and
jge
push
jo
push
sub
push
gs
jge
insb
pop
dec
lahf
push
dec
and
mov
mov
pop
push
inc
xor
movswl
repnz
xchg
pop
jnp
mov
fistps
inc
cmp
jo
cmp
dec
out
dec
push
divl
and
jmp
mov
mov
cli
in
insl
imul
pop
push
cmpsb
popa
or
movsb
insb
sub
pop
cmc
or
xor
cmp
inc
repz
cld
rorb
stos
adc
icebp
mov
cmp
mov
jae
xchg
or
inc
and
test
pop
or
and
sub
or
cmp
jmp
xchg
sub
mov
mov
in
leave
int3
and
or
sbb
scas
jno
aam
repnz
sub
jne
js
popa
cmp
cmpsb
mov
pushf
mov
jp
lahf
add
das
lret
mov
in
dec
inc
pop
addr16
xor
cld
out
outsb
cmp
pop
xchg
dec
xor
xchg
loope
in
idivb
je
hlt
arpl
loope
imul
adc
fwait
mov
addl
popa
cwtl
bound
imul
ja
inc
cmpsl
mov
cmpl
or
ja
leave
aad
cmc
jb
cs
or
repz
stos
mov
jae
faddl
stc
jb
in
mov
inc
jl
sbb
je
adc
sahf
pop
xchg
addr16
inc
notb
jo
aam
sbb
jno
xor
xchg
add
sbb
fadd
rolb
rcrl
or
dec
or
call
imul
mov
out
js
scas
lds
scas
jecxz
jo
inc
leave
push
ja
test
pop
inc
push
stos
adc
adc
mov
xchg
bnd
xchg
imul
sub
adc
pop
mov
lock
clc
je
mov
in
adc
loop
dec
iret
mov
pop
jae
jb
lret
lods
popa
sub
xor
mov
rorl
in
xchg
loop
fdivs
jbe
je
mov
add
mov
lods
fucom
lods
jl
push
dec
je
repz
lds
cwtl
mov
gs
mov
mov
cli
mov
push
push
cmpsl
sbb
test
iret
jmp
je
insl
int3
adc
lock
or
fcoml
jae
pop
cmc
scas
lock
fucomip
dec
not
dec
popa
sbb
ljmp
jmp
in
leave
cld
int3
stc
add
test
cld
mov
push
or
sub
xor
xchg
add
sbb
dec
nop
and
es
inc
xchg
push
sahf
xlat
sahf
and
hlt
or
add
es
push
sbb
psraw
imul
push
push
dec
dec
adc
in
xchg
push
pop
mov
pop
or
movsb
jl
lods
push
sub
sub
loopne
mov
and
outsb
inc
neg
push
sub
jb
push
movsl
jecxz
sbb
pusha
nop
into
leave
mov
push
in
movsb
stos
mov
pop
call
mov
or
cmc
jge
mov
push
mov
dec
repz
sbb
cli
sti
repz
in
imul
dec
pop
loope
adc
into
insb
or
pop
xchg
fidivrs
push
push
icebp
fstpl
loope
dec
sub
faddl
or
cmp
outsl
push
repz
pop
cmpsl
pop
cmp
xchg
mov
mov
repz
xchg
movsl
jae
ret
call
mov
mov
adc
test
test
orl
popa
js
std
loopne
loop
pop
mov
xchg
sub
arpl
popa
push
loopne
mov
or
mov
arpl
notb
dec
dec
lahf
jp
in
sbb
dec
xchg
cmp
cmpsl
xchg
cmp
movsb
out
push
mov
jne
mov
xor
or
sbb
jmp
lcall
cmovae
cmp
push
das
mov
adc
xchg
push
and
inc
sbb
mov
add
mov
jns
lods
nop
jp
test
imul
in
cmpsl
test
pop
sbb
out
test
test
dec
je
aaa
jmp
dec
imul
fsubrl
mov
dec
or
inc
popf
lret
jbe
cmpl
sti
and
shr
gs
pop
jecxz
inc
shlb
sbb
and
loopne
mov
push
or
and
mov
pop
xchg
lahf
in
push
dec
sub
xchg
ds
cmp
adc
and
mov
pop
add
pop
pop
cwtl
js
addb
daa
movsb
jl
jmp
mov
lods
and
ljmp
daa
clc
and
out
icebp
lock
jmp
jns
fisubrl
adc
dec
push
sbb
mov
sbb
pop
fyl2xp1
lret
shr
lahf
ret
jmp
cmc
aas
repnz
aas
add
cli
pop
icebp
mov
cmp
out
adc
mov
mov
sbb
inc
mov
lea
in
int
sub
push
sti
andb
inc
insl
jp
push
xchg
adc
xorb
pusha
das
outsl
rolb
rol
fsqrt
in
xor
dec
add
sbb
xchg
push
pop
out
fldl
imul
inc
nop
icebp
ffreep
and
dec
sbb
ret
push
add
xchg
gs
sbb
mov
ret
push
jecxz
mov
jb
cld
sbb
test
stos
fadds
popf
add
es
xchg
lret
bound
sbb
mov
sbb
sub
cwtl
loopne
xchg
mov
pop
ss
mov
and
out
jne
mov
cmp
mov
aaa
xor
add
pop
sbb
clc
mov
inc
push
es
cmp
fcmovnbe
shlb
fldt
jge
notl
loopne
sti
test
testl
xchg
cmpsb
or
mov
lods
adc
lods
lret
xlat
cmpsb
fisubs
dec
mov
and
outsl
data16
cmp
mov
mov
jle
mov
push
sub
mov
push
push
jbe
mov
decl
int3
test
insb
in
aad
ret
popa
fwait
mov
sbb
insb
jmp
stc
and
cwtl
andb
dec
imul
xchg
lret
nop
push
pop
fadds
movsl
mov
sub
cwtl
cld
fcmovne
inc
xor
xchg
mov
and
inc
and
pushf
push
icebp
push
out
lds
stc
mulb
movb
int3
add
adcl
cld
dec
mov
xchg
fwait
add
lcall
or
and
sub
and
mov
xor
fadds
in
sub
add
and
ffree
into
fimull
das
insb
popf
enter
repnz
lret
lock
or
inc
jp
add
and
sti
test
mov
and
and
push
xchg
dec
push
in
cmc
mov
cwtl
sub
and
and
stos
and
inc
sbb
lea
mov
jno
cmpsl
jnp
pop
jle
sbb
inc
stos
cmp
mov
fldt
fiaddl
in
mov
mov
stc
jecxz
ror
cmp
lret
into
cwtl
loope
out
dec
sbb
enter
scas
insl
mov
and
pop
xor
icebp
adc
xchg
pop
mov
dec
popf
testl
lea
lcall
mov
sub
mov
and
or
push
pop
test
mov
mov
pop
jmp
jp
add
dec
test
in
stos
inc
sahf
inc
mov
jne
push
jo
xor
in
mov
adc
inc
and
mov
mov
pop
sbb
or
daa
inc
mov
rcll
dec
pop
and
rcr
outsb
pop
roll
cwtl
cwtl
js,pn
cli
xchg
or
je
pavgb
pop
inc
dec
outsl
out
push
sbb
jl
xor
dec
inc
cmp
sbb
inc
in
lahf
mov
cltd
int3
sbb
xor
rcr
loope
test
ret
xchg
arpl
orb
stos
pop
lea
sbb
addr16
sub
inc
and
sub
lret
or
push
xchg
scas
pop
push
cmp
add
fidivrl
xchg
imul
or
xor
pop
out
scas
clc
adc
out
adc
xor
mov
psrlw
jnp
lods
push
add
incb
pop
stos
push
jl
inc
lods
mov
and
mov
push
xchg
inc
gs
cmp
iret
sbb
call
xchg
les
loop
xor
jmp
jl
pop
mov
leave
fsubs
push
or
ljmp
fcomps
popf
lcall
pop
sub
xchg
stc
in
jle
std
cltd
daa
mov
mov
mov
push
mov
movsb
int3
sub
add
lods
inc
mov
in
jbe
ds
dec
mov
dec
pushl
test
pusha
jl
xchg
data16
pop
xchg
call
sub
test
xor
idivl
cmp
mov
push
jno
jp
int
mov
insb
or
cmp
popf
leave
stc
mov
jnp
pop
sub
pop
xor
inc
mov
cmp
scas
movsl
lea
add
sbb
xchg
xchg
push
ljmp
xchg
imul
rcll
cmp
sub
stos
mov
ja
insb
mov
out
xchg
daa
ja
bound
fwait
adc
cmp
mov
call
mov
repnz
and
lds
xor
cmc
gs
repz
dec
stc
dec
sub
cmp
cmpsb
cs
cwtl
xchg
mov
clc
mov
push
xor
mov
dec
cmp
leave
fmull
shll
and
xor
ljmp
xchg
push
aas
ror
ret
cli
jg
xchg
popa
iret
cmp
or
xor
inc
inc
cmp
lret
fcmovu
jnp
sbb
fcmovb
xchg
xchg
jge
pop
push
push
adc
jo
movsb
mov
testb
cmpsl
mov
mov
movsb
lret
dec
inc
push
in
stc
add
push
mov
dec
xlat
daa
xlat
ljmp
sbb
add
adc
dec
in
pop
das
mov
or
in
sbb
add
in
mov
pop
cli
bound
add
fcomps
mov
jmp
jp
mov
pop
setg
imul
xchg
lret
shlb
xor
lods
pop
push
sbb
push
data16
outsl
jg
loope
incl
or
hlt
mov
inc
jle,pn
inc
push
jecxz
cmp
pop
adc
aam
or
sub
fcompl
negb
sub
arpl
es
incl
mov
mov
pop
loope
adc
cld
rclb
dec
push
sbb
lret
or
or
jns
gs
sbb
sub
test
fwait
lret
push
cmp
mov
clc
or
and
jne
adcl
aad
imul
sbbl
sbb
jecxz
add
out
push
rcr
sarl
out
scas
cli
test
jne
nop
push
mov
fisubrl
mov
mul
xlat
ja
lret
or
data16
outsb
lods
movsl
jg
and
mov
lcall
mov
xchg
jmp
lahf
lds
add
xchg
push
sub
shrl
jb
push
sti
push
stc
mov
stc
push
iret
call
pop
dec
notb
jnp
and
sbb
daa
xorb
inc
jp
push
jp
nop
adc
data16
pop
push
test
mov
aas
fisubs
bound
xchg
mov
movsb
mov
xchg
ljmp
push
fsubr
xor
rcll
or
mov
stc
imul
stos
push
mov
cmp
lods
inc
fwait
adc
cltd
mov
fisttps
mov
loopne
or
lds
mov
lock
jo
inc
cmpsb
add
mov
ds
sub
add
movsb
or
mov
sbb
imull
mov
ficoml
call
enter
pop
pop
cs
jmp
mov
push
and
sub
pop
ljmp
adc
rcl
dec
dec
sti
je
mov
into
dec
pop
sbb
ret
inc
or
loopne
ja
insb
jmp
pop
out
sbb
dec
or
dec
mov
push
add
xor
mov
push
mov
lcall
arpl
insl
or
push
in
push
and
jae
sub
das
ja
data16
and
push
push
lcall
rol
dec
sbb
call
adc
aaa
pop
shrb
shll
loop
mov
jbe
inc
xchg
idiv
movsb
and
or
mov
shll
add
pop
and
outsb
and
mov
loopew
loope
or
push
jno
inc
inc
out
add
sbb
xor
pop
and
push
jg
in
mov
lds
sahf
nop
repnz
in
sub
mov
orb
mov
cmp
adc
and
dec
adc
mov
fldcw
add
mov
mov
ret
lock
lret
xlat
mov
lahf
imul
jae
fcompl
cmc
insl
pop
pop
mov
ljmp
pop
ficompl
stc
sbb
and
test
sub
cmc
inc
adc
cmp
mov
jno
mov
push
rorl
cmpsb
xchg
adc
lods
inc
repnz
mov
subl
in
sub
sahf
bound
or
ffree
cmpsl
pop
push
inc
jb
das
add
jo
jae
jp
fadds
aad
insl
adc
cltd
pushf
push
mov
cmp
mov
sysret
lods
cmp
insb
cmp
sub
cmp
adc
inc
aam
lea
dec
mov
push
ss
xchg
arpl
xor
mov
add
dec
das
jg
sub
clc
pop
xor
stos
push
fisubrl
xchg
je
and
and
pop
pop
cmp
push
aaa
jge
lret
aad
out
mov
enter
cmp
test
bound
iret
mov
ljmp
iret
sbb
pop
mov
subl
pop
int
jo
push
xchg
add
mov
xlat
mov
push
loope
pop
adc
and
fisttpll
push
int
push
pop
add
mov
insb
add
fcomi
inc
addl
mov
adc
xor
aad
movl
xchg
ret
dec
pop
jo
cltd
repz
into
mov
leave
outsl
repnz
dec
mov
sbb
add
mov
lret
dec
cs
jo
jp
insb
pop
iret
incl
shlb
jmp
inc
nop
in
aam
in
and
inc
cld
sbb
shll
mov
sbb
out
mov
pop
and
jmp
ret
and
enter
pop
orl
in
add
std
mov
mov
or
mov
ret
add
aaa
sub
lret
ret
adc
out
shrb
xchg
mov
jg
aas
jmp
js
outsb
mov
xchg
je
jl
popa
ret
rcll
rol
sbb
aas
xchg
mov
ds
and
ljmp
je
adc
fisttpl
cmp
jle
rcrl
ds
pop
mov
add
pushf
xlat
sub
adc
mov
cmp
lods
pop
xlat
ljmp
fdivrl
fiaddl
push
cmp
xor
outsl
pop
cmp
sbb
stos
push
add
sbb
int
adc
cwtl
cmpsl
movsl
jecxz
pop
jge
sbb
add
cs
mov
mov
push
and
subl
fidivl
repnz
out
stc
pop
sub
add
push
jae
lea
sub
notb
cmp
mov
scas
rcl
adc
cmpsb
xor
jae
pushf
stos
sbb
sbb
icebp
lods
inc
insl
xchg
mov
xchg
movb
adc
or
jp
aad
ret
add
mov
jne
adc
fstpt
scas
lret
jae
ja
or
std
sub
cmp
inc
dec
or
add
jne
pop
mov
mov
arpl
in
int
aam
adc
mov
cmp
pusha
mov
jg
jge
shll
data16
orl
fbstp
jo
fisubs
sbb
pop
int
and
push
mov
arpl
leave
push
dec
insb
leave
inc
pop
dec
js
cmp
dec
frstor
in
dec
lea
jmp
test
mov
loop
or
xchg
cs
cmp
out
sbb
xchg
add
mov
fs
lcall
rcr
cmc
shl
inc
xchg
pop
cmp
inc
scas
rclb
dec
stos
mov
clc
xor
std
sahf
insb
lret
xor
inc
int
js
jno
push
and
movsb
fdivrs
ljmp
push
mov
mov
in
cmpl
popf
push
jno
dec
or
jns
dec
xchg
movsl
pushf
fld
lds
jne
imul
fisttpl
jnp
mov
add
add
in
andl
in
pop
lds
xchg
rorb
cmpsb
loope
adc
call
lcall
aaa
mov
pop
lods
fwait
neg
jmp
and
sbbb
jnp
out
inc
fcmovb
jb
lds
sub
xchg
or
fcomi
dec
mov
rolb
int
and
sbb
sub
mov
mov
jl
mov
pusha
pop
push
mov
iret
jne
jae
cwtl
rclb
loopne
and
gs
add
ds
inc
mov
data16
sub
aas
inc
enter
sbb
lea
sub
add
iret
adc
add
adc
stc
out
push
xchg
mov
clc
xor
or
sbb
inc
cmp
fbld
jle
lcall
cs
loopne
pusha
fwait
lock
enter
data16
jns
movsb
icebp
scas
cld
push
mov
add
mov
int3
push
inc
aas
loop
mov
xor
jae
sub
dec
xchg
daa
fs
push
xlat
push
nop
movsb
mov
jnp
mov
jo
orb
push
xlat
movsl
jp
xchg
mov
in
cmp
sahf
xchg
lods
inc
ljmp
scas
dec
andl
pop
jmp
mov
xchg
hlt
lret
mov
or
add
xchg
cltd
jae
push
cwtl
enter
pop
mov
fs
lods
dec
or
pop
push
das
adc
dec
aam
ljmp
fs
dec
mul
clc
cmp
outsb
shrl
jmp
fisubs
clc
jo
icebp
mov
cmp
push
push
out
loop
int3
lret
int3
inc
xorl
and
push
jae
cli
fwait
int3
mov
mov
push
xchg
arpl
mov
xor
cli
xchg
inc
loope
imul
imul
jg
fs
jle
popf
jns
fsubrs
xchg
sbb
jae
mov
xchg
popa
out
lods
pop
mov
inc
movsl
xor
or
jb
inc
enter
push
jp
mov
pop
in
iret
pushf
pop
int3
cs
jl
add
sbb
cld
sbb
call
out
icebp
pop
mov
mov
rcrl
and
test
or
into
mov
into
push
repz
ds
fstl
dec
add
push
stc
sbb
push
sub
sarl
jne
xchg
pop
pop
cli
stc
int
movsl
lds
jae
push
aam
lcall
dec
mov
fs
in
pop
sti
mov
xor
shlb
mov
inc
cmp
loopne
js
jle
sub
repnz
les
dec
imul
and
jle
mov
add
test
repnz
scas
out
cmpsb
xchg
inc
ja
loope
ret
stos
xlat
xlat
mov
das
pop
mov
cld
shll
lahf
and
testl
pop
add
aaa
std
cmp
mov
and
out
inc
inc
mov
dec
test
popa
mov
nop
sub
pusha
inc
fsubrl
pushf
aam
mov
and
xchg
rcr
jae
pushf
pop
mov
sbb
add
daa
xchg
push
cmc
movsb
pop
push
or
xor
xchg
mov
mov
stc
jae
lods
out
cwtl
push
pop
rorb
ljmp
bound
ljmp
xor
xchg
mov
shlb
out
pop
jmp
cmp
xor
daa
mov
cmpsl
aaa
cwtl
ret
addb
sub
loop
mov
inc
add
icebp
or
and
fs
sbb
or
dec
mov
insl
es
xchg
mov
push
or
xchg
stos
popa
push
fwait
adc
out
pop
push
and
in
jns
sbb
pop
out
pop
or
lcall
mov
xlat
je
ss
lcall
repz
cld
mov
mov
mov
mov
xchg
incl
pop
pop
mov
call
test
sub
lahf
movsl
lock
inc
inc
iret
xchg
stc
sub
push
sarb
aad
adc
jo
fcoms
inc
shll
mov
jnp
mov
lock
insl
imul
aas
mov
dec
mov
mov
cmp
std
or
push
fcoms
mov
dec
xor
xchg
mov
push
cwtl
bt
data16
out
dec
sarl
sub
or
xchg
aam
adc
jl
cmp
and
in
jge
jae
fistpl
or
std
ss
inc
mov
lcall
inc
inc
in
add
mov
dec
andb
jnp
sbb
lcall
popf
xchg
sub
out
pop
es
mov
icebp
mov
fwait
mov
std
stc
mov
mov
lcall
jle
out
mov
adc
push
jnp
test
fcomip
sbbl
dec
jo
into
mov
cmc
es
xchg
stos
pop
fwait
out
arpl
cmp
jmp
pusha
dec
and
push
ret
xor
outsb
or
mulb
test
nop
imull
mov
push
loop
inc
mov
adc
lods
fwait
cwtl
xor
int3
adc
inc
rcll
insb
sub
rcr
cld
lock
js
lock
iret
and
mov
pop
mov
mov
mov
insb
sarb
roll
jne
lods
cmpsb
enter
ljmp
adc
mov
jbe
rolb
rcrl
imul
in
pop
sarl
jbe
stos
mov
test
dec
adc
jg
mov
lret
sbb
mov
les
push
and
lret
fbstp
adc
jns
stos
jge
sub
xor
arpl
jnp
inc
xchg
shrb
divb
or
loope
cltd
popa
outsb
sbb
adc
jmp
or
loopne
in
dec
mov
dec
mov
ret
mov
mov
movsb
outsl
jp
push
cmp
bound
add
jb
insb
in
je
pop
mov
in
andb
adcb
sub
lods
inc
dec
push
xlat
pop
adc
das
scas
inc
fidivrl
cmc
jle
jp
or
ret
lds
lods
sbb
mov
adc
and
cmp
data16
sbb
xor
adc
push
ljmp
dec
jno
shr
mov
in
das
pop
dec
fistpll
lcall
stc
aam
iret
fidivs
or
jno
insb
sub
movsb
out
hlt
popf
dec
mov
jae
out
jl
jmp
and
icebp
les
mov
int3
xchg
lret
dec
add
repnz
or
push
push
outsl
loopne
cwtl
lret
mov
out
shll
mov
pop
adc
and
shrb
or
scas
pop
sarb
push
xchg
mov
lcall
and
cltd
pop
ret
and
in
inc
arpl
jne
lds
or
pop
xor
mov
add
fnstenv
lahf
test
inc
cmpsl
push
dec
stc
fbld
std
cmpsl
sub
inc
add
cmp
movsl
xchg
dec
sub
dec
cmc
hlt
outsb
ss
pop
adc
hlt
mov
push
pop
inc
sbb
jge
mov
sub
xchg
nop
and
cmp
dec
pushf
aas
jmp
dec
sbb
js,pt
pop
and
sahf
jg
inc
cmp
scas
nop
jne
lret
mov
dec
inc
xchg
jne
lahf
push
scas
mov
fisubs
repnz
sub
adc
aaa
movsb
sbb
sbb
mov
data16
iret
or
mov
loopne
jl
pop
jle
dec
mov
std
xlat
cli
popf
enter
mov
call
lahf
dec
xchg
push
push
fs
push
xchg
cli
mov
add
dec
les
sahf
jmp
shlb
sub
and
scas
scas
jmp
xchg
cli
push
movsb
js
mov
repnz
jg
iret
stos
test
ja
in
adc
cmp
and
mov
sub
fistps
repnz
aad
insb
out
adcl
add
aas
cmp
cmp
in
sar
and
aas
movsb
pop
inc
adc
pcmpgtw
pop
pop
or
sub
arpl
rorb
adc
insl
rorl
scas
lea
hlt
dec
push
xor
xchg
insl
dec
sub
and
cld
jg
ficoms
in
xor
fldcw
fdivl
fildl
dec
and
inc
xorb
cli
out
sbb
adc
sub
stos
popf
stos
ja
imul
mov
stos
jle
dec
jae
loope
pop
push
jno
mov
sbb
rcll
and
sahf
mov
cmp
movsb
addl
mov
push
mov
inc
mov
insb
mov
sub
xor
imul
or
jg
repnz
jge
rorl
jl
xchg
pop
pusha
add
inc
andb
mov
pop
jle
filds
imul
stos
push
rcll
mov
inc
scas
add
cli
adc
push
loopne
addl
dec
in
push
jbe
test
mov
sub
xchg
lret
pop
sahf
add
mov
in
push
sbb
lret
xor
imul
push
testb
sbb
repz
fucomp
roll
mov
mov
test
inc
cmp
push
pop
dec
mov
mov
inc
sbb
out
inc
dec
add
cmpsl
dec
jb
lods
mov
shlb
movsb
shrl
int3
jp
pop
pop
mov
test
bound
push
stos
into
lcall
jb
icebp
test
xchg
int3
mov
dec
sbb
xchg
pop
ds
xchg
je
pop
je
push
add
inc
es
pop
repz
je
ret
sbb
aam
fwait
push
scas
mov
mov
and
out
mov
jge
fisttps
pop
imul
mov
fnstsw
lahf
and
cmp
cmp
jb
jno
dec
xor
or
loope
pop
sbb
push
mov
es
xchg
shrb
mov
es
adc
pop
cmp
fcmovbe
add
int
outsl
pop
out
dec
pop
xor
adc
sbb
pop
mov
pop
jno
test
cwtl
test
in
out
repz
ret
das
frstor
push
outsl
aas
xor
dec
and
ret
jno
es
movsb
ss
jg
mov
es
mov
ret
pusha
mov
fs
addr16
add
in
rcr
fwait
addr16
decl
fwait
gs
inc
pop
sti
jno
and
outsl
mov
mov
es
lret
cwtl
loope
test
mov
fs
scas
dec
jae
pop
mov
lock
jne
mov
outsb
add
mov
add
push
int3
and
push
push
sub
fcmovnu
or
inc
hlt
mov
adc
cwtl
sub
inc
or
test
imul
add
stc
std
dec
jp
mov
jnp
mov
dec
test
pushf
sti
insb
nop
inc
xchg
repz
pop
int
test
mov
add
fcmovnb
jns
in
sub
int3
jg
jg
dec
xchg
sub
add
sub
xchg
ucomiss
cmpsb
nop
xchg
pop
jl
mov
insb
xor
icebp
mov
loopne
xor
or
fs
adc
cmp
fdivp
pop
lret
ja
cmp
mov
xor
test
push
movsl
outsb
sbb
push
fnsave
movsb
call
repnz
out
mov
in
test
xor
inc
lahf
cmp
mov
jo
inc
ret
cmpsb
out
jo,pt
inc
and
mov
xchg
dec
aad
add
pushf
pop
cmc
push
pop
push
mov
ret
testb
pop
repnz
int
lcall
dec
mov
xlat
add
adc
lea
in
xchg
adc
mov
sarl
mov
xor
jo
mov
leave
mov
daa
fldenv
mov
lcall
and
aad
xchg
scas
mov
aas
in
push
xchg
je
nop
rclb
movsl
lret
fldt
inc
xchg
pop
fwait
mov
enter
je
mov
rcll
sbb
jp
sbb
fisubrl
add
and
dec
fidivrs
cmp
je,pn
in
in
mov
add
xor
int
repnz
dec
sbb
inc
dec
jecxz
pop
mov
aam
xchg
sti
mov
pop
aam
cmpsl
mov
scas
cmp
cmpsl
inc
add
fcmovnu
or
in
popf
pop
push
lret
roll
jae
fistpl
stos
aaa
sub
ds
xchg
push
mov
negb
inc
lods
loopne,pn
fistl
sub
pop
xchg
and
fchs
fwait
aad
xchg
icebp
cmp
les
test
inc
push
adc
mov
mov
mov
inc
rol
mov
nop
movsl
lcall
mov
pop
jb
test
push
stc
adc
int
and
and
add
mov
sub
cli
push
jns
pop
outsl
test
or
dec
fimull
in
inc
int3
mov
sahf
add
sub
sbb
pop
push
dec
inc
mov
dec
push
mov
sub
mov
or
xor
scas
in
rcrl
add
in
sub
mov
adc
pop
movl
lret
add
or
dec
push
jae
push
ss
inc
aad
jno
fwait
loope
dec
push
xchg
push
imul
repz
add
jmp
test
inc
xchg
jecxz
mov
mov
mov
jg
jne
test
ja
mov
sarl
daa
xchg
inc
js
xlat
jp
hlt
jle
fdivrl
pop
stos
xor
notl
push
or
addr16
notb
nop
cmp
arpl
sarb
iret
sub
in
pop
pop
and
pop
cmp
insl
out
sub
xchg
out
cmp
or
push
mov
lahf
mov
outsl
and
and
xchg
stos
mov
mov
insl
push
add
in
gs
scas
rcrb
push
jmp
cmpsb
roll
scas
add
cwtl
xchg
enter
jb
push
ja
jge
cmp
and
mov
cwtl
repz
movsl
out
or
outsb
mov
aad
pusha
lods
mov
or
sub
mov
cmp
lcall
sbb
iret
cmp
decb
xor
fstl
mov
fistl
ret
inc
std
cmp
stos
push
dec
sbb
push
jb
aad
add
jmp
jle
push
sub
push
in
jnp
sub
into
inc
inc
xchg
cmp
cmpsl
lret
sub
inc
popf
push
cmp
mov
loopne
push
inc
sbb
scas
fcomi
sub
sarl
cmp
adc
hlt
jg
and
mov
mov
inc
xor
das
mov
jl
pusha
vcvttsd2si
stos
jle
cmpsb
sahf
in
sbbl
jo
and
jbe
jle
mov
mov
lds
pusha
int
adc
aam
sub
cli
in
jo
popf
call
pop
iret
jnp
aad
push
mov
stos
dec
cmp
add
ljmp
int
dec
xor
sub
add
idivl
sub
mov
js
pusha
jo
fisttpl
pop
insl
clc
or
mov
inc
lahf
mov
decl
xor
cwtl
jbe
pusha
fcmovnu
inc
add
shlb
das
outsl
popf
leave
and
push
pop
jno
bound
movl
rclb
add
dec
pop
dec
add
and
movsb
inc
les
inc
xor
sbbl
and
in
aaa
jbe
xor
mov
or
std
testl
and
movsb
in
test
or
out
js
stos
mov
mov
mov
cld
addr16
fisubs
int3
xchg
pop
fildl
divl
gs
mov
insb
mov
adc
stc
mov
cld
xchg
incl
imul
lods
cmp
xchg
or
fisttps
xorb
movsl
xchg
ds
sahf
mov
out
sub
rolb
sub
dec
xor
test
jl
aam
cmc
inc
lock
mov
cmp
push
push
sub
lock
xor
adc
outsb
lret
dec
mov
fsubl
sbb
xchg
mov
lea
sbb
xor
ret
jl
push
mov
add
in
push
adc
imul
lahf
mov
enter
xchg
xchg
push
xchg
lret
jo
or
jmp
lret
xor
je
cmc
rolb
aad
dec
fadds
ret
sbb
call
and
out
aam
out
movl
enter
pop
inc
out
mov
push
out
inc
or
lock
or
push
js
xor
decb
sbb
or
rcl
adc
xchg
roll
sbb
int
xchg
cli
jp
inc
mov
data16
jnp
xchg
fimuls
xchg
cmpsb
clc
andps
shll
psraw
adc
dec
adc
jno
arpl
call
daa
lret
daa
sbbl
jle
push
dec
mov
clc
xchg
push
xchg
call
scas
or
jmp
jno
in
outsb
movsl
stos
xchg
push
mov
les
jp
sti
popf
mov
dec
test
pop
jl
daa
arpl
lods
ret
and
lods
mov
cmp
xor
test
cmp
mov
lahf
pop
jno
rcrb
xchg
xchg
xor
mov
clc
or
jmp
inc
mov
jbe
and
fistpll
sbb
inc
sbb
and
adc
loopne
xchg
pop
loope
test
xorb
fstp
mov
mov
shr
inc
adc
lret
inc
pop
mov
cmp
insl
xor
out
push
sub
push
inc
out
jmp
int
roll
pop
inc
push
or
mov
repz
rcll
xchg
lret
insl
mov
and
mov
and
out
inc
push
rclb
adc
jb
push
pop
and
push
pop
mov
add
mov
cmp
mov
clc
fldenv
ret
das
outsb
loope
add
jae
les
dec
dec
jle
pop
je
ret
popf
repz
add
and
adc
idivb
insb
cltd
push
data16
jnp
leave
cmp
rorb
xchg
aad
or
pop
mov
test
outsl
or
sub
pop
in
and
push
push
mov
cwtl
js
mov
test
orl
clc
daa
xchg
dec
dec
lret
enter
icebp
pop
in
xor
pop
insl
cmp
xchg
clc
xor
or
clc
pusha
cmp
cs
idivb
movsb
dec
xor
inc
test
stos
outsl
sub
call
mov
cmp
cwtl
cmc
sbb
cmp
sbbb
lock
mov
or
or
les
mov
ret
std
clc
jl
sub
add
sbb
in
sbb
out
dec
mov
pop
sbb
fwait
xlat
cmp
pop
lods
ja
andl
add
fisttpl
mov
xorl
mov
sti
dec
daa
cmpsl
test
ret
mov
orl
cli
xorl
ror
mov
loop
loop
push
dec
cld
mov
sahf
and
inc
pop
imul
mov
xor
cmc
lods
jle
pop
bound
mov
inc
mov
scas
lahf
jmp
mov
inc
or
mov
insb
pop
cmp
pop
push
jge
lods
push
icebp
mov
ret
lock
add
cld
jge
jmp
and
mov
xchg
inc
sub
test
push
sbb
push
pop
shll
jp
xor
cmpsl
ret
xlat
pop
lahf
faddl
dec
xor
push
cmpsb
clc
adc
adc
jecxz
mov
filds
push
leave
add
push
mov
dec
mov
test
pop
xchg
push
cmpsb
dec
add
mov
jg
pop
cmp
jbe
inc
cs
cli
test
lock
and
mov
pop
in
push
push
mov
repz
xchg
outsb
pop
cmp
gs
add
or
rcrl
fistps
add
inc
mov
bound
fwait
push
sub
xchg
push
sub
and
mov
pop
sbbb
popf
dec
add
mov
dec
scas
fsts
pop
aas
int3
push
lret
cmc
imul
es
mov
imul
add
std
dec
push
and
pop
inc
outsb
cmpsb
xchg
mov
jo
jnp
lock
movsb
jmp
out
lds
inc
incb
cmpsl
cmp
loope
add
xchg
sti
pop
repnz
jb
aam
and
sbb
stos
ret
jno
push
mov
dec
lahf
les
pop
shll
jg
ss
push
mov
cwtl
mov
ds
lods
loope
mov
xchg
jno
pop
pop
push
popa
testb
push
adc
es
push
lret
test
insl
mov
adc
sahf
dec
cmp
jecxz
ljmp
iret
popf
popf
sbb
mov
push
jmp
aas
mov
imul
outsb
pushf
outsl
xor
or
into
xlat
jo
fyl2x
pop
dec
push
inc
lods
add
adc
xchg
adc
and
loopne
out
push
scas
mov
imulb
mov
js
jle
int
mov
pushf
xchg
pop
repnz
add
mov
jmp
or
nop
mov
sub
pushf
fcompl
pusha
je
cltd
pop
pop
inc
ffreep
sbb
jbe
push
pop
scas
mov
fcom
je
ja
pop
jno
adc
mov
outsl
push
psubd
sbb
pop
mov
mov
cmp
sbb
adc
mov
lahf
add
mov
or
rcll
and
lret
insb
fwait
xchg
adc
xor
mov
add
loope
mov
sahf
daa
xor
bound
xchg
mov
rcrb
out
mov
or
imul
and
mov
daa
xchg
cmp
pop
or
in
das
add
das
jo
cli
push
je
dec
jecxz
and
scas
addr16
loope
mov
adc
js
jl
out
pop
mov
sti
shrb
nop
mov
add
idivb
lret
sti
lret
mov
jo
jbe,pn
sbb
pop
int
jg
notl
pop
sub
js
mov
fsubrl
ljmp
test
cmp
pop
add
aad
out
loope
call
dec
pop
mov
stos
fnstenv
sbb
xchg
das
push
mov
lock
adc
add
push
adc
negb
lock
push
push
out
dec
in
pop
sarb
sub
call
mov
sbb
mov
ficoml
inc
jge
sbb
dec
in
and
lock
lods
loop
add
dec
and
xlat
in
xor
cmp
adc
pop
test
test
xchg
cmc
mov
psubw
xchg
pop
dec
inc
mov
or
test
dec
or
xchg
pop
cmp
bound
sub
xchg
es
inc
xchg
stos
movsb
cmpsb
push
in
leave
sbb
stc
adc
inc
aaa
or
xchg
pop
mov
xchg
dec
push
test
jle
rolb
int3
pusha
insb
and
sarl
scas
icebp
mov
ror
dec
push
jecxz
cmpsb
mov
dec
pop
mov
stos
cmp
add
xchg
mov
and
pop
outsb
or
dec
jo
mov
mov
icebp
inc
rolb
bound
push
dec
or
hlt
pop
jmp
lea
sbb
sahf
insl
test
adc
stos
and
and
stos
pushf
pop
lods
xchg
ret
mov
dec
loop
aad
sbb
arpl
movsl
ljmp
sub
xor
dec
test
push
cmc
and
pop
dec
adc
ds
cs
leave
shrl
sbb
lock
ret
mov
push
mov
or
pop
inc
decl
icebp
dec
out
jno
jge
shrl
jg
divl
inc
add
push
add
cmp
jno
sahf
jbe
push
jae
aaa
or
jbe
xor
add
in
cmp
sbb
lret
jge
or
dec
mov
repz
xlat
das
push
cmp
cmpsb
js
and
scas
leave
adc
xchg
das
test
xlat
and
push
dec
fdivs
jne
cmp
push
icebp
xchg
fsts
jmp
mov
int
mov
jnp
mov
mov
in
jl
push
push
xchg
in
sbb
jl
mov
jl
and
sub
sbb
sub
jl
adc
jbe
sahf
int3
in
pop
lods
popf
fdivr
cli
lcall
jmp
imul
nop
jnp
dec
inc
push
and
inc
popa
lods
in
cltd
mov
std
mov
dec
xor
mov
jo
push
repnz
jmp
dec
xor
pushfw
lds
pusha
mov
fstl
sbb
hlt
fwait
or
jp
in
popa
scas
cwtl
jne
inc
push
shrb
add
xchg
rcrl
pop
mov
adcb
mov
pop
ret
pop
cmpsb
insb
jg
xchg
imul
or
movsb
packssdw
and
or
insl
jmp
test
jmp
pop
in
mov
bound
shl
and
mov
mov
ja,pn
in
dec
adc
insb
jmp
lret
leave
push
jge
jne
lahf
loope
xor
add
mov
cmp
sbb
in
adc
cmp
cli
into
int
cli
out
adc
lds
sti
or
adc
frstor
ret
mov
mov
pop
jp
ja
sbb
ret
ds
imul
test
pop
push
mov
popf
ja
lret
sbb
xlat
sub
nop
mov
mov
aas
xchg
gs
add
movsl
or
mov
cld
cwtl
cmp
cltd
xchg
add
cltd
push
sahf
adc
lret
mov
lea
lea
loope
sahf
or
arpl
sub
movsl
je
pop
add
ljmp
into
xchg
in
andl
jecxz
hlt
xchg
into
aad
test
ja
jo
xor
and
push
push
pop
sub
insb
add
scas
inc
mov
cmc
jbe
popf
sub
or
cmpsb
outsl
sti
or
push
or
and
jno
iret
jmp
mov
add
mov
jecxz
pop
stc
push
in
aas
pop
jecxz
jae
sbb
and
scas
jl
or
lds
pop
push
mov
mov
xor
insl
sbb
mov
addr16
mov
dec
add
push
inc
mov
lret
mov
je
mov
mov
sub
cmp
idiv
decl
std
xorl
sub
fcomps
inc
cmp
shl
and
cmp
push
mov
sbb
pop
movsb
inc
inc
mov
jbe
stos
sti
sub
int
jp
sub
cmp
outsl
jmp
repz
lahf
enter
rcll
dec
or
shll
adc
loop
cmp
xchg
add
adc
in
and
sbb
cmpsl
inc
xchg
jb
cli
mov
sub
popf
rorl
xor
pop
mov
in
jb
ljmp
inc
pop
ss
push
xorb
pop
sbb
adc
loopne
mov
insb
cmp
inc
xchg
sub
mov
adc
ss
inc
sub
cmp
cmp
xchg
jecxz
mov
fwait
sahf
mov
jno
fadd
mul
repz
and
mov
sbb
pop
xchg
popf
xchg
imulb
jp
adc
add
dec
sbb
jecxz
fsubl
mov
stos
push
in
in
or
lds
inc
mov
outsb
mov
inc
sub
and
mov
loop
pop
out
push
call
sbb
add
mov
pop
fprem
mov
inc
imul
call
dec
or
fst
mov
cmovae
adc
xchg
lret
loop
pusha
adc
fmuls
je
inc
xchg
ficompl
jg
cli
and
and
dec
sahf
mov
sub
iret
daa
cmp
inc
repz
leave
in
mov
mov
mov
fld
outsb
cwtl
cmp
jae
and
mov
imul
cmp
xchg
and
push
out
push
imul
sbb
ja
in
pop
out
lahf
and
shl
inc
int3
cmp
shll
scas
dec
in
call
xchg
mov
ss
xchg
loop
repz
in
jg
mov
decb
pop
out
fwait
pop
out
aaa
pop
test
popf
pop
test
dec
sub
jae
negb
pop
pop
es
insb
cltd
jle
and
scas
dec
fistps
sub
das
leave
sarb
mov
mov
mov
aad
pop
xlat
or
clc
lcall
dec
push
scas
int
mov
jl
xchg
js
mov
xchg
shlb
shrl
xor
sub
push
xchg
lahf
sarl
fsubr
jae
xchg
pop
inc
cmp
xor
sti
pop
sbbl
add
cmpsl
cmpsb
jl
jecxz
je
jecxz
inc
cmp
inc
pop
iret
mov
push
xlat
lods
mov
enter
ret
iret
test
inc
add
sbb
enter
mov
mov
outsl
mov
adc
popa
insl
imul
mov
mov
sbb
add
stc
lods
aaa
mov
pop
test
push
xor
mov
outsl
lock
sbb
jg
add
cltd
pop
xchg
sarl
xchg
aaa
lock
cmpsb
jnp
mov
int3
out
adc
insl
out
sbbb
lret
inc
and
pop
hlt
cli
scas
pop
lods
out
mov
bound
fcoms
xor
push
ffreep
mov
in
xchg
jb
imul
jp
inc
out
mov
dec
inc
push
movsl
sbb
in
addr16
pop
cmpl
adc
pushf
fidivrs
adc
lret
dec
push
add
lods
lds
aaa
dec
jl
or
cli
cmc
cmpl
xchg
pushf
jp
gs
jmp
dec
mov
les
pop
aad
jmp
imul
mov
and
cld
jp
imul
xchg
lret
jne
leave
imul
sahf
iret
push
ss
fdivrl
mov
jmp
mov
stc
add
cltd
notl
pop
push
xor
lahf
adc
jo
sbb
sub
call
into
scas
decb
cmp
sbb
sub
dec
mov
or
aad
fistps
outsl
icebp
dec
jl
cmp
lock
add
mov
push
clc
testl
cmpl
scas
in
push
sbb
fiadds
jb
movsl
lret
loop
sub
lret
add
fmul
and
and
fldl
dec
sarl
ret
aad
js
mov
lea
negl
pop
lock
adc
add
jae
jle
sub
enter
xchg
std
inc
dec
xor
jl
cmp
or
jae
fstpt
mov
lret
xor
jge
dec
or
mov
pop
or
insl
lret
inc
dec
inc
ljmp
push
or
jo
jp
push
mov
sub
cs
pop
js
insb
sub
loopne
mov
stos
out
mov
mov
call
cli
mov
sbb
inc
arpl
add
dec
sbb
bound
andl
cmp
adc
push
and
dec
mov
gs
repz
call
sbb
xchg
movsb
and
mov
push
jle
jmp
mov
cmc
jns
add
outsb
sbb
test
repnz
div
sbb
jecxz
cwtl
ja
clc
mov
mov
mov
leave
lods
ja
dec
push
pop
sbb
xlat
scas
and
mov
jl
cmp
lret
or
fisubs
jbe
and
or
inc
mov
arpl
adc
push
jb
cmpsb
add
sub
sbb
jecxz
cmc
pop
hlt
and
push
sub
jg
and
sbb
and
dec
mov
lds
sbb
mov
enter
mov
outsl
je
imull
mov
leave
ret
add
jecxz
repz
xor
and
les
popf
fnsave
xchg
cmp
fs
pop
dec
imul
jae
pusha
sbb
enter
gs
mov
in
movsl
fcom
sbb
sub
aam
cmp
push
sbb
fucom
enter
and
sahf
ljmp
xchg
cmpsb
lcall
cltd
pop
xchg
sbb
jge
rcll
mov
dec
lret
and
mov
xor
les
mov
data16
es
push
lds
test
cltd
sbb
cmp
lds
jp,pn
je
shrl
insb
mov
cltd
sbb
in
add
push
xor
icebp
das
mov
int3
jb
mov
popf
mov
into
out
cmpsl
pop
sbb
mov
or
cmc
push
insl
lock
sbb
das
pop
sbb
pop
daa
ja
xchg
xchg
shrl
and
std
out
cs
pop
inc
mov
sarl
mov
push
ret
pop
lcall
push
mov
mov
js
sub
xor
call
mov
iret
movsb
fwait
inc
fdiv
icebp
dec
and
fisubrs
movsl
int
and
jnp
into
scas
in
lock
inc
dec
loop
mov
jecxz
push
mov
fbstp
pop
cmp
push
je
mov
inc
or
dec
inc
shr
and
mov
jg
pop
push
cmc
jge
mov
xor
adc
es
data16
cmp
pop
jb
and
mov
cmp
ljmp
xchg
cmp
hlt
mov
adc
adc
insb
jne
xor
jmp
lahf
mov
jo
jo
cmp
int3
lret
adc
dec
jge
mov
test
and
fbstp
cmp
aas
jl
adc
cmp
adc
arpl
jmp
mov
xchg
int
mov
inc
cli
mov
sarl
or
mov
lea
ficompl
pop
std
adc
out
cmp
pop
cmp
cwtl
sahf
xor
mov
pop
js
sub
mov
repz
fwait
in
sti
clc
sub
daa
or
dec
dec
add
cmp
iret
cmp
fdivrl
fimull
pop
fidivrl
lahf
sbb
lock
inc
dec
xorb
xor
inc
push
mov
sbb
xor
jecxz
test
loope
mov
fwait
adc
cltd
ret
sbb
cmp
adc
and
scas
and
aas
or
mov
xor
add
test
pop
sbb
dec
ffree
rclb
insb
pop
push
lret
test
inc
insb
mov
bnd
inc
dec
adc
sbb
sbb
sarl
and
or
rorb
sub
clc
cld
sbb
mov
ja
ret
nop
bndstx
push
mov
jg
lret
aaa
lret
inc
outsb
insb
nop
pop
lea
jno
or
pop
xor
and
inc
mov
dec
push
jp
std
add
add
rcll
push
mov
and
xchg
call
rcrb
icebp
cli
sarl
push
xor
aad
shl
push
adc
aaa
mov
cmp
pusha
cltd
rolb
dec
xor
cs
inc
jle
jo
mov
push
in
push
aam
scas
out
dec
nop
fdivr
fstpt
mov
imul
dec
roll
mov
ss
mov
loope
shrb
out
lock
sar
cli
ds
xor
dec
sub
xchg
mov
inc
or
out
scas
dec
mov
xor
xchg
jbe
sbb
mov
test
mov
rcl
dec
aad
push
push
adc
stc
fimuls
and
push
mov
pop
enter
mov
mov
mov
sbb
enter
test
xchg
xchg
mov
lds
dec
outsb
sahf
scas
and
out
lea
and
push
add
insb
xchg
add
out
addr16
adc
lods
fstps
in
sub
outsb
lds
loopne
jbe
sbb
add
add
jno
in
sbb
adc
imul
movl
fidivrl
popa
pop
sbb
dec
add
add
mov
shlb
jge
scas
bound
push
adc
cmp
insl
adc
jmp
adc
jb,pn
and
mov
xchg
cmpsb
mov
add
call
insb
adc
sbb
cmp
push
jno
dec
cwtl
fldcw
push
lcall
lret
inc
lods
aaa
pop
sub
pushf
add
scas
push
adc
sub
lds
cld
lods
outsb
mov
int3
jmp
ret
xor
pop
cwtl
adc
mov
out
aam
xchg
repnz
dec
add
lcall
xchg
fidivl
cmp
pop
cli
pushf
jp
adc
xchg
rorl
lcall
lods
jo
rol
fxch
icebp
fidivs
lea
mov
stos
jnp
xor
arpl
or
jbe
sti
cwtl
enter
dec
xor
bound
cmpsb
inc
adc
fbstp
inc
jle
sarb
in
dec
xlat
movsb
sbb
rorb
jae
in
into
lret
cmc
das
sahf
divb
lock
lds
test
scas
xchg
jo
sub
lods
push
push
xchg
lds
jns
rsqrtps
lcall
cld
pop
hlt
xor
ds
jge
pop
dec
dec
gs
dec
mov
mov
mov
fstpt
fnstenv
clc
sti
dec
jo
sti
pop
in
inc
adc
mov
js
add
enter
dec
mov
loope
insl
nop
mov
adcl
and
movsb
fwait
stos
mov
out
cmc
sbb
jbe
orb
dec
ljmp
sub
in
inc
inc
inc
dec
test
aaa
pop
mov
mov
ljmp
pop
out
mov
sub
int
push
jb
test
sbb
mov
std
jl
daa
loop
in
daa
dec
push
fidivrl
fldenv
jp
mov
xchg
scas
test
or
std
add
mov
pop
add
dec
fsubs
mov
stos
push
jns
xchg
ljmp
inc
sbbl
out
mov
add
mov
iret
adc
lock
push
pop
lret
dec
bound
mov
and
in
cld
sbb
ficompl
xchg
cli
jno
ljmp
push
ja
mov
sti
adc
pop
jne
dec
and
dec
sbb
scas
xor
sarb
fbstp
std
out
pop
xchg
movb
pop
rorb
in
cmp
bound
ljmp
cltd
jle
pop
jae
in
cli
push
dec
mov
in
in
xor
cwtl
setbe
push
mov
push
jecxz
std
mov
orb
mov
dec
and
into
cmp
iret
mov
push
mov
dec
push
repnz
insl
arpl
xor
imul
dec
push
or
pusha
aad
xchg
pop
xor
pop
xchg
fistl
mov
out
jae
lea
dec
js
pushf
mov
inc
loope
and
add
xchg
insl
or
sub
mov
mov
mov
inc
dec
or
ds
fisubrs
fildl
mov
ret
dec
mov
adc
adc
adc
jmp
sti
das
jne
adc
xchg
mov
dec
insb
cld
movsb
jne
fcoms
pop
mov
cmpl
cwtl
out
subl
jbe
clc
push
mov
sbb
ds
cwtl
cs
icebp
push
aad
push
sbb
je
inc
scas
push
outsb
cmp
loopne
lods
sbbb
add
xor
and
or
fsubrl
lods
dec
aam
cld
lods
add
fcoml
nop
sub
imul
sbb
pop
lahf
lods
fisubrs
repz
jb
mov
xor
mov
sbb
xor
sub
testl
ficomps
rorl
push
add
sarl
and
jb
js
mov
hlt
pop
test
stc
pop
cmp
daa
subb
jge
and
lcall
pop
cmovae
ja
mov
lods
xor
fucomip
dec
movsl
dec
fwait
adc
stos
jnp
push
cltd
outsl
aaa
inc
cmp
lcall
add
add
jo
xor
dec
frstor
cld
stos
stc
in
test
adc
ss
adc
pop
xchg
je
adc
call
ret
insb
orl
cwtl
mov
fildl
test
push
lods
test
aam
push
cmpsl
cmp
mov
sbb
ss
shlb
cmpl
aad
gs
pop
sbbb
in
rcrb
cmp
dec
sbb
xchg
outsb
jo
lds
mov
jno
mov
add
ss
mov
push
nop
mov
mov
lds
jle
outsb
dec
cmp
jb
int
mov
jg
hlt
lods
rcll
mov
int3
stos
mov
rorl
in
loop
sarb
mov
xchg
xchg
sbb
adc
push
push
adc
lds
sbb
data16
sbb
imul
xorb
add
jg
pop
filds
adcl
scas
add
sub
aas
rol
sub
xchg
stos
adc
test
test
mov
xorb
test
or
cld
mov
cltd
out
repnz
mov
push
xor
add
test
in
mov
sub
rcll
pop
dec
bound
out
cmp
aas
jecxz
pop
cltd
push
fwait
or
rcrl
cmpsl
loopne
daa
pop
mov
out
xchg
or
xor
adc
mov
cmp
idivb
mov
cwtl
dec
mov
inc
std
mov
cmp
imul
ljmp
jl
popf
rclb
repz
mov
nop
mov
xor
push
ret
xor
scas
xlat
dec
pushl
add
pop
aaa
out
dec
mov
das
pop
sbb
addr16
mov
inc
pop
daa
cs
stos
test
in
loope
jae
in
fadds
xchg
push
cmp
scas
hlt
popf
andl
sub
pop
add
pop
lcall
sub
cwtl
mov
stos
ds
sbb
inc
mov
fimuls
mov
loop
imul
aas
movsb
insb
dec
testl
stos
sub
jns
cltd
push
js
pusha
inc
je
push
jns
nop
je
cs
iret
sbb
sub
fcoms
icebp
in
pop
rorl
mov
inc
mov
add
dec
loop
pop
push
fstps
and
jmp
mov
and
cmp
out
popf
sub
inc
inc
sub
jnp
jnp
or
inc
push
cmpb
test
cmp
andl
push
mov
inc
jnp
test
repz
outsb
mov
cs
inc
mov
inc
mov
fistpl
cmp
xor
fcoml
out
nop
sub
add
movsb
add
outsb
mov
pop
pop
ret
push
lods
test
xor
je
inc
push
jl
sarl
in
pop
push
mov
test
adc
out
or
cli
nop
les
mov
and
test
push
popa
call
outsl
dec
inc
stos
xor
or
push
jle
lahf
xchg
mov
insl
js
sub
cmp
into
repz
insb
pop
neg
and
and
add
rcrb
inc
add
lds
pop
cmp
imul
fisubs
incl
mov
push
fstpl
nop
jg
out
mov
push
or
xor
mov
xor
stc
xor
pop
lds
pushf
jp
mov
test
in
mov
xchg
push
sbb
pop
sahf
add
and
cwtl
push
inc
jle
cmp
sbb
jnp
fiaddl
jl
cli
cmpb
iret
mov
enter
cmp
mov
nop
sbb
test
into
xor
inc
cmp
pop
pusha
sub
pop
mov
push
sti
stc
or
in
dec
ret
dec
addr16
xchg
jno
loope
mov
out
push
dec
and
adc
testb
out
ds
mov
out
lds
ret
ljmp
daa
lods
sarl
push
xor
fcompl
sub
push
mov
hlt
pop
arpl
push
cmp
mov
mov
mov
xchg
incb
nop
cld
mov
mov
xor
mov
jbe
xor
cmp
nop
push
push
arpl
sub
xor
cmp
test
das
ds
push
cmpsl
enter
ljmp
sub
stc
sbb
stc
xchg
es
xchg
fcomip
out
push
pusha
dec
jp
andb
jae
int
mov
mov
push
in
mov
in
pop
shrl
mov
or
or
sub
xor
pop
pop
bound
cmpsb
je
mov
cmp
jo
leave
mov
jle
mov
rorb
jbe
sub
aaa
out
dec
xchg
sti
lret
mov
movl
mov
mov
ficomps
out
xchg
jp
xchg
sub
or
aad
je
test
cmc
ds
push
fstpt
clc
mov
push
xchg
jo
vpshuflw
sbb
cmp
xchg
or
pop
mov
test
mov
pop
test
cli
push
aam
cmp
sub
scas
push
hlt
popf
jge
inc
adc
mov
push
je
prefetch
jecxz
insb
iret
cltd
add
rclb
jle
dec
dec
adc
or
dec
movsl
sbb
pop
insb
out
adc
movl
enter
mov
cmp
mov
dec
pusha
cmp
repz
aaa
outsl
lds
mov
ja
scas
ss
and
and
jns
cmp
lock
std
movb
inc
mov
out
test
pushl
lret
movsb
cmpsb
mov
pop
das
daa
add
pop
je
adc
or
stos
inc
sbb
stc
sbb
int3
int3
xchg
jae
push
insl
inc
mov
sbb
inc
jecxz
sbb
jnp
mov
pop
xchg
or
lds
test
pop
xor
ds
xchg
popf
orb
adc
iret
stc
sbb
xchg
push
mov
jp
sahf
insl
ret
daa
loope
std
push
outsl
into
push
adcb
popf
imul
pop
or
les
mov
mov
xchg
pop
or
and
fists
or
out
cld
cltd
push
addl
insl
repz
jmp
in
fidivs
insb
pop
pushf
push
flds
stos
outsl
jbe
mov
pop
push
mov
lds
mov
das
sbb
test
bound
jnp
call
xor
adc
nop
stos
xchg
repnz
fstps
lret
sub
sahf
and
sub
or
mov
aad
push
dec
or
pop
sub
dec
gs
adc
dec
pop
dec
ss
test
roll
adc
pop
test
jns
sbb
push
sub
dec
out
repnz
cmp
mov
repnz
cmp
adc
scas
fidivrs
movl
cmp
jecxz
loop
sahf
jae
or
xchg
in
int
xor
test
add
cmp
adcb
mov
lcall
lcall
and
imul
mov
nop
xchg
daa
jno
jbe
ficoms
xor
scas
mov
rorl
mov
iret
mov
mov
movl
or
scas
xlat
sub
xchg
pushl
or
mov
mov
pop
out
jg
or
cmpsl
clc
paddq
daa
scas
mov
or
int
je
lret
push
mov
cmp
pusha
je
shlb
mov
or
push
sub
icebp
fwait
add
int
and
adc
push
loopne
shll
add
adc
out
out
adc
xor
mov
sahf
xchg
negb
and
or
imul
ja
iret
jge
nop
add
popl
insb
mov
adc
mov
cs
scas
fwait
in
fsts
rol
pop
lcall
cmp
stos
push
repnz
stos
pop
adc
inc
cltd
and
cmp
xchg
out
adc
je
or
jecxz
hlt
adc
pop
sub
cmpb
push
test
xlat
in
or
ja
lods
inc
test
inc
sub
flds
outsl
lods
mov
inc
mov
add
sbb
sbb
mov
test
outsl
mov
push
fstpt
popa
mov
adc
push
sbb
xor
push
jo
into
mov
push
mov
leave
cli
clc
push
lret
push
and
sahf
sbb
jo
adc
iret
pop
sub
push
inc
lea
mov
cmpsl
jae
loop
stos
loop
fidivrl
stc
pop
cmc
push
cmp
cmp
lcall
dec
shlb
adc
push
aam
mov
test
xchg
rorb
dec
mov
aas
mov
pop
enter
fwait
xor
lcall
enter
sbb
imul
call
insl
loopne
cs
or
repnz
popf
add
lcall
pop
clc
sub
push
test
sbb
notb
add
push
roll
cmpsl
mov
xor
inc
aaa
push
cmp
xchg
pop
dec
gs
mov
inc
mov
fucom
icebp
neg
daa
mov
pop
scas
pop
dec
and
sbb
fimuls
fwait
dec
repnz
loop
jmp
push
add
loopne
sub
inc
pushl
push
jb
mov
ret
or
test
loop
and
int
aas
cli
mov
mov
jp
xchg
or
test
xchg
mov
sbb
and
into
inc
mov
out
mov
push
mov
xchg
mov
sbb
insb
mov
push
cs
loope
dec
mov
movsb
mov
pop
outsb
mov
shll
leave
xor
imul
in
clc
mov
mov
shr
lcall
fnstcw
jle
add
cmp
pop
test
shll
and
lahf
lahf
dec
bsr
jle
sbb
in
ret
jl
pushl
jp
dec
js
jbe,pn
mov
mov
addb
xor
adc
push
sub
jmp
xor
jle
pop
mov
xor
cmp
popf
rcrl
leave
in
into
dec
rcrl
fcompl
cmpsl
inc
xor
dec
fcompl
fnstsw
mov
mov
data16
mov
loope
loope
shll
adc
push
loope
adc
andl
xor
xor
pop
mov
addb
mov
xor
jb
aaa
add
pop
push
inc
dec
rcrb
dec
pop
aaa
call
jmp
and
jl
cli
lock
jmp
in
in
arpl
cmc
int
push
xchg
cmp
ficoml
cmp
sbb
dec
ret
bound
pop
add
hlt
lret
mov
or
int
mov
or
lods
pop
or
dec
pop
mov
sub
xchg
inc
mov
inc
pop
clc
out
jge
add
pushf
add
xor
sub
daa
outsl
cld
xor
aas
xchg
inc
mov
dec
mov
mov
test
scas
pusha
popa
ret
in
add
jnp
enter
push
push
les
adc
xor
jmp
mov
mov
pop
pop
stos
imul
repnz
fucompp
into
pop
es
push
call
cmp
jb
jg
sahf
test
fistpll
sub
xor
popa
mov
ficomps
pop
sub
cmp
ss
jo
ret
aam
movsb
dec
popl
or
jae
xorl
inc
sub
jg
cltd
sbb
lock
xor
bound
fs
xchg
add
outsl
pusha
jge
orb
add
imul
pop
mov
jnp
ja
dec
fidivl
fcoml
cs
cltd
and
leave
push
jne
xchg
dec
mov
lods
stc
mov
clc
pop
xchg
stos
lcall
loope
or
int3
stos
xor
aam
mov
jp
testl
add
mov
cmc
scas
xchg
sbb
repz
mov
mov
iret
jg
in
xor
fldt
cmp
int
repnz
pop
test
ds
sahf
and
aaa
arpl
ds
out
cmpsl
xor
mov
pushfw
lcall
mov
xchg
xor
cwtl
out
sub
stos
jp
add
xchg
aad
xor
mov
jmp
push
push
insl
and
xor
lret
dec
mov
dec
movsb
ja
or
cwtl
out
fstp
pop
leave
out
lds
pop
lcall
shll
jmp
push
insl
add
lods
push
cmpsb
ss
out
dec
push
sub
pushf
push
insl
lock
mov
cld
lods
dec
pop
mov
xorb
popa
fidivrl
arpl
or
fcoms
icebp
dec
adc
fldcw
or
gs
std
lret
lods
ds
cmp
scas
cmp
int
mov
lds
and
cltd
fnsave
add
sub
test
xor
outsl
cmp
cli
js
push
sub
mov
xchg
inc
loopne
cmp
cmp
pop
popf
pop
push
leave
dec
xor
adc
scas
lcall
cmp
loop
jne
je
and
lahf
cs
inc
adc
xor
xor
out
inc
jnp
fidivrs
int3
inc
jl
or
xchg
aas
lret
dec
mov
daa
xchg
mov
clc
cmp
jbe
stc
scas
sbbl
adc
jbe
repnz
movsl
push
int
bound
push
or
mov
fucom
imul
push
hlt
dec
mov
push
mov
nop
les
add
mov
lods
xor
test
add
stc
mov
sahf
addb
push
adcb
adc
test
push
jmp
stc
aam
jo
push
add
mov
fimuls
sub
xor
es
mov
push
shrl
fstps
les
ret
pop
loopne
ficoml
dec
adc
movsl
repnz
inc
cmp
ss
push
dec
ret
mov
jmp
lds
push
add
and
aad
mov
sub
dec
loop
psrlq
mov
fbld
mov
xchg
mov
mov
push
inc
mov
xor
leave
rcl
enter
xchg
mov
push
cmp
sub
jae
xor
pop
pop
lret
cmp
fsubrs
iret
jg
enter
sub
mov
popa
cltd
add
sbb
sub
repnz
cmp
in
adc
cmp
pop
cmp
sbbb
inc
mov
iret
rcr
rcll
cmc
mov
filds
dec
fwait
shrl
stos
je
scas
out
sub
jmp
enter
rep
adc
cmpsb
xchg
push
push
into
addr16
sbb
pop
cmc
es
mov
inc
in
dec
pop
sbb
cmp
pop
pop
add
lret
jp
lcall
inc
addb
call
por
cmpsb
insl
xorl
mov
sbb
sbb
test
pop
pop
xrelease
loopne
dec
jne
jne
into
add
dec
scas
xchg
sbb
loope
mov
in
jb
fs
addb
ret
dec
cmp
jmp
repz
inc
ds
mov
sub
sbb
xchg
cmc
test
fdivrl
mov
or
xor
cmp
push
aad
mov
lcall
dec
mov
mov
sbb
jno
fisubrs
cs
jns
lcall
mov
cltd
mov
pop
mov
sub
lea
test
fld
stos
push
mov
clc
sahf
rcll
mov
mov
addr16
and
push
in
sar
mov
orb
fcomps
dec
push
and
in
xor
cmp
dec
mov
sahf
lods
pop
sahf
cwtl
aaa
and
sbb
loope
call
jae
cmpsl
out
dec
pop
loope
jo
jnp
in
mov
mov
jne
and
mov
and
and
jge
mov
mulb
out
test
inc
int
ret
insl
push
arpl
inc
pop
les
xchg
sbb
mov
lea
popa
inc
inc
push
add
mov
rclb
sub
inc
sbbl
mov
lahf
stos
call
push
ljmp
aad
cmp
movl
cmp
add
cld
neg
fisubs
dec
stos
inc
imul
push
jg
movsb
push
inc
lret
ds
ret
pop
cwtl
ds
loope
or
xor
movsl
pop
mov
sbb
insb
pusha
imul
ror
ret
jge
xchg
aas
in
push
xor
or
outsl
fmuls
sbb
lret
xorb
push
pop
cli
xchg
pop
lock
cli
outsb
lds
jne
ljmp
bound
iret
cmp
mov
sub
push
bound
push
fcomps
js
clc
jae
addr16
push
lret
sahf
add
cmp
cld
adc
mov
ret
inc
fwait
jnp
add
pop
mov
outsl
js
loop
jge
jg
mov
add
or
loop
stc
or
cmpsl
push
fnstcw
test
push
xchg
cmc
push
das
jns
int3
inc
adc
inc
mov
scas
cmp
cmp
add
mov
cmpsl
lret
mov
or
cmpsl
inc
cmpsl
jg
lahf
inc
or
pop
out
cmp
mov
and
push
and
daa
ljmp
ja
or
js
sbb
push
push
jne
xor
icebp
cmp
mov
add
test
fwait
popa
jb
pop
xchg
jae
fs
into
test
cmc
mov
leave
pop
cmp
scas
xor
or
fstps
popf
cmpb
jecxz
arpl
ja
or
shr
pop
xor
inc
pushl
fwait
bound
dec
cwtl
out
cmc
imul
sahf
call
fistps
xchg
ljmp
outsb
dec
stc
mov
mov
cmp
dec
stos
rorb
pop
pop
sbb
insb
cli
push
sahf
cmp
fldl
fidivl
inc
in
mov
xchg
inc
arpl
adc
xor
add
subl
jo
call
and
pop
adc
pop
insb
xchg
repz
and
decl
popa
les
addl
xchg
push
push
fiaddl
sub
mov
push
lret
repz
call
mov
cmc
jns
push
fstpl
adc
pop
scas
flds
fiadds
and
imul
ret
gs
fucom
and
sub
mov
sbb
aaa
fnstcw
test
out
rorb
ficoms
adc
iret
push
test
clc
stos
inc
insl
outsl
sbb
out
dec
lret
int3
hlt
ret
dec
orb
rcl
mov
jae
std
and
pusha
dec
aas
and
jecxz
arpl
ret
xor
mov
mov
sahf
and
adc
imul
hlt
leave
stos
fcoml
test
mov
push
movsl
and
push
aaa
adc
or
stos
aam
ja
ss
add
inc
negl
adc
test
pop
sarl
mov
xchg
sub
cmp
cli
xchg
int3
clc
pop
adc
dec
es
xchg
rol
in
and
mov
sbb
ficompl
lahf
stos
jmp
popf
les
sub
inc
xor
sbb
and
pop
addr16
jnp
ret
je
hlt
ffree
and
lret
add
xchg
sbb
fcmove
out
push
jne
adc
movsb
add
or
xor
mov
arpl
mov
push
test
dec
or
ffreep
jmp
cmp
push
xchg
and
test
pop
and
insb
lods
or
aam
pop
sub
cmp
sub
imul
mov
aaa
sub
sub
and
mov
xor
popf
jo
adcb
adc
sbb
xchg
mov
int
sub
cmp
test
adc
xor
addb
inc
test
ljmp
ds
inc
or
sbb
test
std
mov
cld
rcrb
ret
mov
push
xchg
mov
push
mov
sbb
push
push
icebp
push
mov
lds
lahf
xorb
sub
push
push
inc
addb
ret
ret
out
imul
or
mov
movsb
iret
mov
pop
fcomps
add
int
fdivl
sub
xor
mov
jp
add
dec
lahf
std
jnp
cmp
fistpl
cmp
call
repz
add
cli
push
pop
movsl
movsl
pop
aaa
aas
mov
mov
fwait
jle
push
test
loop
movsb
adc
cltd
mov
mov
fstpl
fildll
lret
mov
mov
test
js
js
stos
sbb
daa
inc
icebp
shll
mov
and
cmpsb
mov
jge
xchg
addr16
lods
into
outsb
dec
sti
push
jno
push
cmp
sub
repz
in
imul
adc
push
rcr
dec
faddl
add
ficompl
or
sbb
adc
xchg
xor
lds
mov
mov
mov
and
mov
pop
xor
xor
mov
or
xchg
aaa
dec
adc
mov
out
jmp
dec
push
add
mov
push
mov
test
adc
push
mov
sbb
adc
pop
mov
int3
add
or
or
and
mov
mov
jl
push
out
push
mov
movsb
inc
ja
test
test
dec
adc
paddw
pop
or
iret
push
jo
mov
push
mov
repz
mov
lds
pop
push
fsts
mov
mov
stos
inc
insl
cmc
cs
pop
add
in
add
mov
xor
aad
ss
pop
std
inc
cmp
das
fdivr
jmp
dec
mov
loopne
mov
mov
icebp
in
shrl
cmp
mov
les
adc
lea
test
xchg
das
fidivrs
mov
jmp
stos
add
add
xchg
das
testb
lea
imul
jbe
and
push
cltd
mov
push
jle
mov
les
bound
arpl
push
shll
cmp
sbb
in
int
into
mov
push
pop
mov
inc
inc
arpl
adc
int
push
ss
imul
xlat
jmp
out
cmpsl
loope
frstor
out
in
or
jmp
sub
rcll
in
mov
ds
sub
psadbw
pushf
bnd
push
jo
or
pop
insl
frstor
mov
clc
out
inc
mov
cli
ds
sub
cltd
pop
or
jo
pop
movsb
sbb
jl
lret
mov
filds
mov
movsb
test
xchg
xchg
add
inc
inc
das
cmp
lcall
ja
imul
or
gs
adc
fnstcw
xchg
add
xchg
xchg
xor
push
pop
stos
fs
repnz
mov
iret
in
or
xchg
and
xor
arpl
ret
and
std
ss
lret
sbb
cmp
cmp
insb
mov
stc
ret
fstps
lds
cltd
bound
stos
stos
mov
mov
or
push
andb
test
repnz
jl
ds
scas
pop
insb
mov
test
fs
add
out
test
jp
dec
cmpsl
add
mov
mov
stos
dec
aaa
dec
jae
ja
jmp
cld
jmp
inc
push
mov
inc
clc
pop
add
xorl
inc
adc
and
jl
adc
loop
rcll
adc
push
sbb
xlat
jge
insb
jb
push
push
adc
imul
jne
mov
loope
mov
enter
aam
mov
push
rcrb
pop
call
mov
fcmovnu
xor
lock
pop
pop
aad
mov
mov
xchg
scas
lcall
lds
jg
xor
movl
cmp
popf
push
add
mov
xor
and
data16
nop
lret
jmp
cmp
mov
dec
xchg
in
adc
fs
and
mov
mov
lods
and
sbb
fs
xorl
gs
xor
hlt
sahf
mov
hlt
das
fldenv
xlat
cli
jns
push
lock
lds
ret
sub
push
xchg
inc
ja
adc
daa
xor
pop
push
pop
sub
int
icebp
cmpsb
xchg
mov
iret
sbb
sbb
pop
int3
out
xchg
lahf
ja
fmuls
or
pop
inc
aas
imulb
inc
pop
and
pavgb
jb
enter
dec
jmp
ja
xchg
aaa
cmp
lods
dec
fidivs
cmpsb
fsts
daa
sbb
sub
mov
add
pop
aad
and
test
push
out
rclb
sahf
gs
sub
inc
jae
add
sbb
pop
jmp
iret
push
sub
aas
jnp
aas
insl
shrb
loop
int
pop
mov
mov
pop
dec
dec
enter
dec
mov
fdivrs
xchg
movsb
mov
mov
test
inc
repz
cld
ds
jno
inc
sub
push
stc
arpl
lcall
and
and
jp
push
andl
push
mov
push
jp
mov
ss
jns
jne
fwait
outsb
aad
stos
lret
sbb
nop
test
xor
out
aam
cmp
mov
sbb
iret
in
lock
popf
xchg
repz
clc
dec
mov
mov
popa
inc
xchg
xor
imul
dec
pop
dec
xchg
xor
and
rol
sbb
and
lea
addb
push
jg
lret
add
mov
pop
les
xor
js
sbbb
jb
mov
sbb
push
ljmp
icebp
lcall
mov
lret
pushf
pop
or
in
js
cmp
push
xor
xor
adc
push
inc
sub
jg
and
fisubs
or
and
pusha
lcall
mov
cmp
shl
loop
jnp
dec
repz
push
add
cltd
cmpsl
adc
inc
cmpsl
popl
scas
inc
movsl
mov
andb
iret
push
or
pop
push
adc
mov
aam
xor
and
add
mov
stc
pop
fisubs
nop
xchg
push
ja
aad
outsl
xlat
jle
rolb
mov
and
ja
push
or
xor
mov
sub
adc
popa
imull
mull
dec
cmpl
negb
sbb
mov
repz
imul
xor
inc
fcompl
and
pop
in
jg
or
shrb
stc
mov
f2xm1
cmpb
sub
or
jbe
pop
xor
push
loope
loope
into
pop
cmp
mov
and
push
jb
mov
dec
pop
jp
popa
ficoms
nop
xor
ret
fwait
and
mov
loope
dec
hlt
adc
int
loope
ret
ret
cmp
pop
sarl
movsb
fwait
in
imul
dec
jmp
fsts
mov
or
adc
cmp
movsb
adc
xchg
mov
mov
inc
mov
dec
add
popf
mov
rcrl
in
mov
movsb
mov
cmp
dec
adc
and
push
scas
gs
movsb
clc
xchg
rolb
mov
and
aam
pop
incb
xchg
adc
cmp
into
pop
lds
pop
pop
dec
out
or
or
and
push
sub
jne
loopne
stc
scas
shl
hlt
mov
lcall
mov
pushf
xchg
decb
xchg
jo
xchg
jae
enter
inc
ja
sbb
xor
and
ds
shl
loop
push
xchg
pop
push
dec
inc
xor
and
es
xor
ljmp
aas
push
sbb
jne
je
adc
cmpl
inc
movsb
mov
int
adc
or
cld
cwtl
lea
add
mov
inc
cltd
push
cmp
xor
cmpsb
jg
xor
je
mov
sbb
mov
inc
jmp
push
lods
adc
add
add
mov
insb
pop
not
push
imul
ss
mov
push
mov
xlat
sub
inc
gs
cmc
lds
pushl
mov
mov
jns
adc
pop
mov
arpl
repz
fwait
stos
movsb
js
pop
push
add
xchg
jl
mov
aaa
stos
mov
leave
xchg
sub
inc
lods
xor
or
inc
pop
lods
dec
pop
data16
lahf
iret
loope
mov
cmp
cltd
aaa
fdivrs
cwtl
pop
cmpsb
aam
pop
test
repnz
insb
jmp
push
or
inc
cmp
call
rcr
insb
mov
aas
push
xchg
mov
out
mov
sub
scas
repnz
in
enter
mov
jge
sbb
lret
jmp
mov
imul
popa
adcb
cmp
pop
ret
xchg
cmc
xchg
add
push
pop
stos
jne
in
dec
mov
mov
decb
mov
add
push
pop
cltd
lret
add
les
jge
fwait
imul
clc
and
movsl
and
ds
jne
jmp
sti
push
cmp
push
add
aam
xor
jb
sbb
gs
mov
mov
mov
pop
jmp
pop
daa
inc
push
repz
fldl
out
incb
push
stos
int3
mov
sti
mov
or
push
xlat
xor
sub
loop
test
hlt
out
push
outsb
sbb
mov
push
or
push
and
inc
jmp
pop
ljmp
push
cmpsl
xor
cmpsl
and
mov
jns
aaa
aaa
rolb
aaa
loopne
aad
mov
mov
jb
pop
cwtl
mov
scas
mov
fdivs
scas
out
mov
xorl
or
adc
inc
or
xchg
scas
mov
adc
and
sbb
push
lret
and
mov
dec
and
aas
push
insb
sub
sbb
hlt
imul
jo
sub
lods
jp
jg
daa
ss
xchg
xor
xor
subl
adc
or
xor
xchg
sub
mov
dec
sub
dec
inc
lret
cld
fldenv
add
sbb
stos
int3
subb
mov
shl
mov
decl
mov
or
push
test
dec
test
adc
jno
aas
notb
sub
es
cmp
inc
jno
lods
data16
js
pusha
push
pop
popf
sub
jnp
lea
add
ret
adc
adc
ja
push
repz
jle
push
add
mov
jbe
aaa
hlt
mov
push
xchg
dec
dec
gs
hlt
leave
cmp
ret
ljmp
or
push
icebp
mov
fsubp
xlat
dec
mov
inc
andb
jmp
lahf
outsl
pushf
jo
ret
fists
adc
lret
in
out
pop
clc
dec
add
or
jp
ret
xlat
test
jg
mov
push
fldcw
ja
cmp
xchg
pushl
cmp
mov
shrb
sbb
ret
lea
push
shlb
and
lret
push
push
sbb
cwtl
xchg
clc
mov
xchg
hlt
adc
sub
cli
pop
dec
pop
adc
push
xor
xchg
ret
cmpsl
scas
in
adc
data16
adc
xchg
sub
clc
jno
cmp
cmp
jno
and
imul
mov
jmp
ret
push
or
daa
cmp
sbb
sti
lods
pop
and
in
or
adc
mov
ret
subb
push
sub
out
ljmp
sbb
fldt
push
sub
pop
jns
in
rcl
jne
push
xchg
xchg
sbb
push
push
js
pop
fwait
adc
lods
icebp
push
add
xor
jno
push
fs
cmp
pop
lcall
dec
mov
ret
xchg
imul
mov
nop
loopne
outsb
faddl
lcall
dec
dec
and
in
xlat
mov
mov
xor
cmp
je
and
xor
add
mov
shrl
mov
enter
xchg
test
andps
push
jmp
insl
add
cmp
aad
cmp
es
inc
iret
mov
and
cli
sbb
int
shr
or
cld
adc
cmc
cmp
es
dec
inc
loop
push
jb
mov
push
xlat
sub
pusha
xchg
test
repnz
dec
or
cli
daa
jl
inc
cltd
sub
xorl
cmp
xor
inc
sbb
dec
les
jo
jmp
push
imul
pop
lahf
loopne
jae
sub
or
outsl
lcall
fisubs
lret
sbb
push
pop
pop
inc
and
scas
cli
aaa
fadds
dec
jg
shll
mov
daa
jmp
into
icebp
xor
push
sbb
and
and
repz
int
test
cltd
xor
xor
cmp
mov
cmpsb
xchg
inc
lahf
mov
and
pop
mov
and
mov
out
adc
aam
insb
repnz
into
ljmp
repnz
int
mov
outsl
repz
pop
pop
enter
inc
sub
cmp
adcb
push
mov
adc
scas
neg
and
stos
add
lret
fldenv
rcll
ljmp
pop
cmp
mov
or
rcr
lods
cld
mov
int3
sbb
push
sub
push
inc
ds
sbb
adc
or
xchg
aaa
loop
push
mov
call
ljmp
leave
jp
into
fsubrl
mov
sbb
sbb
adc
sbb
mov
pop
sub
cmpsl
out
je
add
push
stos
shrl
fsubr
pop
adcl
mov
or
in
xchg
xor
jle
fidivs
cld
mov
inc
arpl
jae
sbb
pusha
imul
and
inc
jmp
fnstsw
ret
arpl
inc
mov
enter
sbb
sbb
int
dec
sub
xor
rcll
lret
lret
js
notl
mov
ljmp
mov
cmp
sbb
in
mov
hlt
mov
std
rol
sbb
xorl
inc
jnp
sub
sahf
decl
pop
fdivp
sub
ljmp
jg
mov
xchg
push
hlt
movsl
xchg
mov
mov
pop
mov
cli
and
inc
outsl
roll
int3
pop
fldcw
and
mov
push
int
sub
fidivrl
daa
test
lods
add
add
inc
fwait
push
sub
cmp
pusha
ret
mov
sub
or
jmp
jns
jae
and
call
test
push
xchg
mov
inc
mov
in
aad
in
xlat
std
push
mov
push
insl
sbb
leave
das
les
mov
pop
lret
or
cwtl
dec
sub
ljmp
in
push
nop
aad
mov
add
cmp
in
cmp
mov
xchg
repz
inc
jb
and
sbb
hlt
add
push
call
lods
pop
inc
repnz
test
jo
pop
jb
arpl
pop
or
jne
sub
adc
xchg
sbb
std
fldcw
addr16
sbb
enter
mov
jge
aas
and
xchg
daa
jle
mov
arpl
and
lods
cmp
mov
aaa
imul
lea
push
lea
or
mov
add
push
sub
inc
or
dec
cmpsl
fidivrl
jg
jg
cmp
pop
xchg
cmp
mov
popa
mov
sub
fidivrl
and
stos
jb
cmpsl
pop
add
imul
xor
bound
dec
adcb
pop
nop
mov
push
add
popf
xchg
ljmp
pop
push
dec
rclb
jae
movsl
les
ds
sbb
xchg
cmp
sub
and
dec
in
pop
sub
test
mov
xor
incl
xchg
repnz
push
sbb
push
push
clc
mov
call
push
dec
add
into
jns
sub
add
or
lea
aas
push
lock
pushf
mov
pop
rclb
push
cld
sub
push
stos
lock
xlat
mov
fidivl
in
sub
iret
xor
hlt
jp
sbb
add
dec
mov
mov
pop
fwait
cs
mov
sbb
sbb
mov
push
jne
inc
jb
pop
pop
daa
sub
inc
dec
cmp
inc
mov
cmp
xchg
test
mov
cmc
mov
push
jne
test
mov
or
pop
jp
sbb
pop
inc
adc
jae
cmp
adc
sbb
cmp
std
mov
lods
xor
test
std
imul
pushf
test
add
adc
sti
ss
popf
mov
jbe
lahf
pop
mov
out
pop
int
push
adc
fisubs
mov
jp
dec
data16
pushf
jmp
je
iret
sub
xchg
das
lods
adc
fisubs
rorl
jge
mov
mov
mov
mov
push
xor
lods
jecxz
xlat
loope
bound
xor
std
icebp
mov
fistl
inc
push
inc
or
pop
scas
cld
cmp
adc
shll
scas
jno
movsb
and
mov
push
adc
xlat
lea
or
jecxz
add
gs
bound
addr16
idivl
fcmovnb
adc
or
aaa
fiadds
lahf
fwait
sti
jb
jnp
pop
cmp
outsb
test
popl
fbstp
test
loopne
xorl
icebp
shrl
jg
jbe
mov
push
in
jle
pop
movsl
sbb
push
sub
and
fstpt
xchg
xchg
push
addb
mov
xor
in
dec
dec
imul
cmp
sahf
sub
dec
lahf
add
sub
mov
mov
mov
xchg
aam
push
insb
arpl
jbe
mov
movsl
arpl
and
xor
std
popa
ljmp
mov
adc
push
subl
mov
sub
dec
dec
lahf
fdivs
popa
jecxz
cmp
lock
pop
cmp
arpl
jmp
sbb
mov
sbb
push
test
test
pop
add
lahf
mov
xor
pop
rorb
or
cld
mov
xchg
sub
sbb
mov
add
in
mov
shrb
daa
sbb
pop
lods
mov
mov
insl
bound
mov
lcall
sbb
std
push
sti
call
out
and
hlt
popa
mov
and
lds
pop
stos
jne
and
mov
cmp
and
lret
cld
scas
scas
inc
xor
in
mov
push
int3
out
mov
mov
gs
jg
cmp
push
mov
leave
or
movsb
bound
xlat
mov
sar
or
or
or
xor
les
loope
lea
into
mov
push
mov
lea
mov
inc
adc
inc
xor
pop
jns
daa
out
and
test
std
fdivrp
xchg
nop
shrl
aas
and
lods
or
aad
add
mov
mov
test
in
jne
cmp
je
out
sbb
add
int
jp
lcall
pop
aam
bound
add
loope,pt
xchg
icebp
mov
push
aad
dec
fcmovne
ret
dec
add
pop
mov
jnp
nop
in
loope
dec
jno
mov
rorl
sahf
orb
add
test
ds
scas
ror
pop
or
pop
jmp
addl
xchg
inc
addr16
and
orl
dec
pop
jmp
sarb
jmp
lea
mov
out
stos
sbb
in
sbb
enter
cmp
lds
outsl
inc
movsl
loope
mov
push
jno
inc
cmpsb
cmp
cmp
jmp
mov
xor
cmp
jle
ror
mov
fistps
call
add
outsl
push
pusha
fistpll
outsb
loop
pop
xchg
dec
aam
xor
adc
jns
aas
cmp
and
flds
outsl
pop
jl
leave
add
andb
dec
cmc
mov
ljmp
in
jecxz
xchg
repnz
pop
pop
cwtl
loop
xorl
xchg
ja
in
xor
mov
pop
jno
arpl
cwtl
xchg
xchg
and
cmp
movsl
test
xor
cmp
cmpsl
test
out
jno
lcall
push
test
test
mov
adc
jae
fadds
int3
out
dec
jo
or
adcb
aas
lret
into
xchg
push
les
add
mov
das
aad
and
jl
jbe
push
fstps
push
scas
pusha
xor
adcl
mov
mov
push
sbb
pop
sub
pop
lods
dec
pop
add
sarl
rcll
sub
loop
sbb
push
adc
daa
adc
mov
jmp
aas
jl
pop
test
out
and
jg
pop
nop
test
dec
mov
mov
add
pop
jecxz
call
adc
xor
clc
mov
loopne
daa
lret
sub
clc
jae
dec
mov
jno
mov
inc
inc
jl
jns
jb
add
dec
movsb
repz
rcrb
push
mov
lods
pushf
dec
divl
dec
in
out
scas
aad
inc
mov
cs
fmuls
push
cmpl
and
and
sbb
mov
add
js
xor
dec
test
inc
pop
fwait
mov
mov
sbb
xor
ds
xor
repnz
nop
and
fcmovbe
aas
fisubl
out
jge
scas
ds
and
push
fidivs
jmp
xchg
dec
sub
mov
mov
inc
sbb
add
adc
push
push
icebp
jb
cmp
xor
adc
mov
lea
sbb
iret
or
test
mov
test
fisttpll
adc
into
cmp
fildll
xlat
fcomps
pop
out
arpl
or
cs
imul
sub
adc
dec
scas
das
push
movsb
sbb
inc
fdivrl
mov
inc
mov
cmp
jecxz
inc
xor
push
jmp
pop
mov
xchg
pop
fstps
xchg
adc
aad
mov
sbb
daa
mov
xchg
stos
out
fabs
ds
push
das
dec
fsubrl
add
cmpsb
xchg
aaa
inc
rcr
jmp
out
or
cmc
mov
loope
stc
pop
ja
les
aam
or
dec
jnp
sahf
adc
and
mov
popf
aad
push
dec
cltd
add
pop
add
es
aas
pop
cmc
mov
enter
fdivr
int3
jo
xor
lods
decb
mov
pop
hlt
jne
xor
mov
adc
and
or
mov
loope
inc
mov
jp
xchg
push
out
movsl
scas
mov
adc
iret
cli
outsl
lock
and
xor
adc
fs
rcll
movsb
pop
jecxz
into
inc
movsb
xchg
hlt
xchg
mov
mov
dec
xor
rcr
testl
mulb
lea
jl
xchg
aas
jb
cmp
sahf
lahf
jae
cmp
push
addr16
push
xor
ret
jno
push
pop
jb
mov
pusha
pop
scas
rorl
lods
stc
mov
fmuls
shlb
or
mov
or
pusha
mov
or
in
jge
inc
stos
aas
push
cmc
incl
inc
imul
push
cmp
push
or
pop
imul
pusha
mov
testl
test
jge
pop
clc
inc
mov
int3
in
insl
xchg
nop
stos
int
lahf
out
and
adc
cmpsl
mov
pop
shrl
jno
jl
fstpt
jo
dec
mov
adc
out
inc
faddl
jg
fstps
pop
jnp
repz
or
lcall
cmpsb
sub
je
daa
xchg
pushf
lea
inc
jl
insl
popf
imul
jecxz
and
daa
and
or
pop
push
out
or
out
movsb
and
nop
jl
popa
mov
in
cmp
insl
iret
fldenv
fadds
inc
mov
mov
jns
into
jae
push
sub
xchg
push
bound
loope
cmp
andb
and
cmp
jb
pusha
xor
test
mov
jmp
push
mov
es
fldt
stos
inc
push
push
jns
xlat
movsl
pop
xor
aam
rol
inc
add
xor
pop
dec
ficompl
loope
mov
sbb
adc
adc
int
dec
dec
rcll
loope
dec
xchg
aaa
lock
push
dec
out
pop
jecxz
cmpsb
mov
sbb
sbb
mov
out
arpl
xchg
dec
cmc
cmpsb
test
test
sbb
mov
push
mov
repz
jbe
xorb
dec
stos
mov
push
push
insl
out
sub
push
pushw
dec
inc
lods
hlt
push
in
fisttpl
test
inc
push
mov
jle
aas
mov
int
mov
std
ficoms
inc
imul
sbb
sub
cli
adc
push
scas
and
inc
jae
mov
cmp
insl
les
push
rolb
out
or
aad
or
jp,pt
adc
leave
scas
push
cwtl
fcomps
popa
movsl
ret
lea
lods
xchg
inc
fwait
push
cmp
dec
jbe
scas
dec
repnz
push
dec
mov
mov
jge
add
add
push
call
or
test
adc
pop
push
xchg
jne
ja
rcrl
add
ja
push
scas
pusha
mov
loopne
xor
xchg
insb
test
push
mov
out
lea
ret
iret
les
xchg
push
mov
roll
push
daa
mov
loop
mov
add
jb
jnp
ja
stos
out
add
cmp
jbe
insl
es
aaa
xchg
mov
inc
neg
imul
dec
pop
jl
push
cmp
xchg
xor
repz
sub
imul
in
popf
xor
insl
xlat
cmp
dec
cmp
pop
idiv
xor
outsb
mov
fs
xchg
cwtl
orb
es
mov
mov
add
xchg
xor
jno
add
inc
mov
rcl
mov
xchg
xor
pop
cmpsb
in
dec
cmp
push
test
push
mov
js
fs
scas
or
or
insl
mov
lcall
bound
sbb
repnz
push
and
out
or
mov
cmp
jg
cmp
das
xchg
dec
and
ljmp
xchg
and
push
jo
test
hlt
jbe
out
sbb
mov
xchg
sbb
sbb
scas
mov
xchg
aad
ds
pop
js
pop
out
xchg
shrb
adc
ret
or
shll
rorl
push
push
inc
je
and
jle
add
or
int
js
movsb
into
jbe
cmc
mov
cmc
andl
mov
xchg
sti
push
addr16
xor
fidivrs
fdivrl
mov
cmp
mov
add
mov
fisttpl
repnz
jl
nop
imul
mov
cmp
jo
jb
nop
add
call
filds
fidivs
cmpsb
lcall
mov
mov
das
je,pn
std
clc
cmp
push
inc
add
int
mov
fwait
jl
pusha
out
nop
int
pop
sbb
cmp
jbe
out
add
xchg
shlb
cmp
mov
pop
addr16
dec
push
mov
cli
pop
iret
or
nopl
je
push
xlat
out
xchg
out
imul
adc
scas
bound
cmc
enter
jecxz
mov
adc
das
mov
movsb
add
xchg
mov
dec
test
sub
jnp
int
fwait
mov
jmp
xchg
dec
test
lret
inc
mov
cltd
stos
nop
movsl
inc
cltd
mov
xchg
xor
cwtl
sahf
jl
inc
push
sbb
sbb
dec
andl
inc
mov
pop
in
jg
or
lret
xor
dec
int3
gs
xlat
jnp
push
fsubr
push
inc
icebp
and
dec
sbb
out
push
iret
or
push
int
loopne
and
mov
dec
lds
in
repz
mov
lods
push
push
cmp
or
in
add
push
inc
mov
push
pop
mov
mov
popf
sbb
scas
sub
stc
xor
daa
cmp
push
and
jbe
cmc
ss
xor
andb
sbb
pop
adc
dec
mov
loop
jle
push
dec
test
neg
push
add
data16
ret
sahf
xchg
pop
call
push
inc
add
pop
sub
mov
pop
arpl
js
lahf
jbe
pop
stos
xor
inc
sub
or
jle
ret
stos
inc
or
mov
fmull
xor
inc
js
jae
sbbl
lcall
fdivrl
dec
jae
sub
out
loop
dec
jnp
jg
cld
out
cwtl
bound
bswap
jb
jg
sbb
add
and
mov
mov
repnz
push
mov
mov
xchg
rolb
dec
mov
mov
mov
fsubrl
loope
leave
xlat
rcrb
in
or
mov
pushf
cmp
stos
pop
push
push
int3
and
je
sbb
aaa
lds
or
cmp
test
loopne
cmp
daa
out
and
in
pop
xchg
lcall
repnz
mov
pop
pop
pushf
push
fsubrl
sti
mov
push
push
jne
inc
test
mov
mov
enter
mov
call
je
and
pop
pop
sti
push
xchg
xor
out
movsb
mov
jno
and
mov
test
into
negl
out
add
bnd
xor
jmp
ss
addr16
std
lods
cmovbe
std
cmp
mov
mov
adc
inc
sub
and
add
xchg
jo
cmp
mov
out
push
hlt
or
out
shlb
out
adc
xorb
stc
sub
cmpsl
dec
jae
and
enter
dec
add
xchg
inc
push
add
dec
stos
notb
mov
ljmp
daa
pop
lods
sti
andb
lahf
outsl
sbbb
aad
lds
fistpl
enter
fisubs
or
fisttps
mov
xchg
dec
jecxz
stos
xchg
or
xor
xor
jge
pop
lods
sub
aam
pop
cmp
jmp
xor
xchg
pop
das
push
fbstp
mov
lahf
insb
sahf
add
in
nop
test
jecxz
jb
xchg
or
into
scas
jno
ss
pop
mov
cmp
cmpsb
xchg
mov
cli
fcompl
lret
or
mov
mov
lret
cwtl
fxch
std
lret
stos
je
fcom
lret
fldl
imul
mov
hlt
mov
rcrl
adc
mov
xor
sub
dec
jg
push
pushf
in
pop
in
push
and
ja
ds
mov
shr
sti
loopne
mov
xor
pop
in
jge
or
push
adc
cmc
push
sti
mov
push
add
jge
es
out
dec
cmpsl
int3
cmpsl
enter
mov
negl
mov
or
and
and
test
push
adc
and
dec
dec
sbb
jns
iret
adc
inc
xor
mov
push
outsb
cmp
xchg
xor
push
mov
out
xor
lahf
gs
std
mov
popa
adc
pop
xchg
or
fists
cmpsb
scas
cmp
leave
and
negb
xchg
pop
mov
jae
jne
ret
mul
stos
mov
mov
addr16
jmp
lea
mov
adc
in
dec
xchg
add
aad
cmp
pusha
mov
jae
js
cmc
or
test
mov
jns
jge
cmp
mov
loope
popf
or
icebp
mov
pop
xorl
mov
ret
xacquire
push
mov
inc
adc
sbb
mov
addr16
cmp
ljmp
mov
cmp
sub
ss
lds
sub
pop
test
pop
imul
sarl
lcall
inc
pop
js
jbe
out
sub
sbb
pop
jg
inc
push
mov
enter
push
cli
sbb
jecxz
inc
cltd
fmul
sti
lods
xchg
das
cmp
pop
push
enter
in
aas
push
dec
sarl
das
mov
pop
cmp
into
cwtl
jno
push
rol
lods
cmp
adc
jne
sub
push
adc
jl
mov
adc
jp
jecxz
inc
mov
cmp
cltd
cltd
in
lods
fmul
mov
push
outsb
aad
push
push
cmp
rcrl
aam
int
das
imul
shl
push
jns
push
aad
rcl
cmp
pop
test
dec
mov
adc
add
push
imul
or
inc
lock
pop
sbb
mov
dec
or
push
ret
movsb
scas
fs
mov
or
jae
fwait
adc
inc
pop
jb
jle
adc
sub
fs
scas
mov
cmp
stos
mov
mov
leave
lea
push
jbe
scas
repnz
xchg
sub
in
or
stc
in
lret
popf
jnp
xchg
stos
push
das
sub
add
inc
jne
in
leave
inc
push
xchg
push
std
lcall
lods
in
and
hlt
bound
hlt
daa
inc
fs
push
pop
and
jo
adc
das
fld
into
sub
lea
cs
es
xchg
cli
fdivs
mov
jne
xor
mov
into
shll
dec
jo
jnp
mov
dec
dec
mov
aam
and
fwait
and
mov
mov
test
aaa
lret
adc
ja
ds
outsl
lds
pop
dec
xlat
dec
sbb
rcll
out
push
add
xchg
or
ljmp
sub
out
getsec
dec
in
test
fistps
aad
adc
out
add
lcall
sti
dec
nop
cs
push
mov
cmpsl
std
pop
add
jge
mov
scas
std
movsl
sbb
push
adc
ficomps
mov
test
push
pop
popf
adc
test
and
aaa
sbb
push
push
adc
test
cmc
not
pop
cmp
gs
inc
pop
push
sbb
xchg
jne
cmp
mov
dec
in
notl
or
dec
push
jbe
lret
cmp
leave
xchg
add
push
jbe
or
xchg
pop
mov
mov
loopne
cwtl
outsl
add
std
xchg
es
pop
xlat
popa
xor
xor
rolb
and
fwait
add
into
or
aas
jb
inc
jmp
ja
pop
in
xchg
xchg
mov
cmp
pushf
jp
xor
cmp
inc
sub
inc
aas
mov
jp
cmp
inc
movsl
inc
dec
rorl
cmp
sub
ja
lret
cmp
cmp
repz
dec
test
mov
aaa
sbb
jo
imul
inc
xor
xchg
lahf
out
sahf
icebp
sbbl
pusha
push
movsl
or
aad
mov
insb
movsl
push
jle
popa
push
imul
sbb
gs
add
cmpsl
sub
inc
out
inc
pop
jns
xchg
pop
pop
or
adc
push
adc
in
inc
test
inc
xchg
into
ljmp
popf
cmp
test
icebp
movsb
adc
in
pusha
pop
fsubrl
loope
aam
cmp
imul
fmull
pop
in
loop
jo
push
cmp
aaa
fistpl
push
dec
push
outsb
push
jns
mov
lea
push
aas
nop
mov
push
cmp
add
fwait
cltd
mov
jno
jle
mov
mov
jae
jne
jge
jl
arpl
mov
ret
push
mov
adc
pusha
mov
inc
into
sub
and
inc
sbb
xchg
jne
xchg
adc
jg
xchg
inc
xor
pop
push
mulb
push
push
sub
and
push
sub
fstps
js
dec
jp
mov
dec
aam
insb
loop
addr16
fnstsw
add
inc
std
mov
rolb
inc
aad
dec
cmpl
mov
std
in
pop
stc
scas
std
data16
lock
movsl
xchg
sarb
add
push
ljmp
push
in
xor
and
imul
dec
cmp
sbb
sarb
dec
loopne
rclb
adc
sbb
sti
mov
mov
shll
arpl
mov
fimull
jg
mov
push
jge
mov
sub
pop
insl
je
xchg
sbb
jle
pop
mov
mov
out
mov
in
xchg
xor
shll
movsl
sub
in
xor
in
outsl
pop
std
mov
xchg
lahf
and
mov
pop
ret
xchg
xchg
daa
aaa
pop
xor
daa
in
pushf
cs
jg
xlat
jb
dec
test
lahf
pop
push
jbe
mov
stos
movsb
mov
and
push
pushf
inc
test
push
fs
inc
pop
enter
adc
cmpsl
xor
adc
imul
xchg
sbb
xor
dec
clc
pop
sti
inc
aad
out
add
xchg
outsl
push
arpl
popa
pop
adc
mov
iret
scas
mov
sub
sub
insb
inc
dec
mov
lcall
data16
dec
or
into
dec
movsb
push
pop
je
rorl
mov
sbb
idivl
js
xchg
adc
mov
xchg
mov
popf
out
pop
repz
mov
sub
mov
mov
repnz
lahf
and
mov
test
adc
jge
dec
insb
mov
add
jne
mov
cmpsl
out
adc
into
insb
sub
push
push
xor
push
and
repnz
fisubs
sub
inc
mov
cli
subb
mov
scas
in
test
inc
and
and
and
lret
inc
insb
xchg
bound
push
xchg
fsubs
or
mov
inc
push
repz
ret
pop
pop
out
cli
jb
xor
adc
adc
mov
mov
lds
adc
push
icebp
fisttpll
jle
mov
push
mov
icebp
daa
xchg
mov
sub
clc
xor
push
inc
jnp
jp
mov
sub
push
inc
pop
popa
inc
mov
aaa
mov
cmpsb
lds
adc
mov
jbe
scas
mov
push
ret
sub
aam
inc
adc
dec
in
popa
fnstcw
inc
add
popa
mov
xor
pop
adc
pop
pop
inc
in
adc
js
mov
mov
cmp
js
push
adc
xchg
jo
fwait
ja
inc
addl
pop
xor
ret
push
leave
test
xchg
addl
push
dec
mov
fbstp
enter
jb
lock
and
sub
push
or
add
push
out
lcall
js
xchg
sbb
inc
xor
in
inc
pop
cwtl
sbb
or
add
insb
add
sbb
sbb
xchg
push
adc
enter
mov
lods
dec
pop
out
add
sub
add
pop
inc
cmp
ss
imul
pop
sbb
pop
mov
jg
das
clc
adc
addr16
cmp
and
in
in
bound
pushf
sub
incl
push
mov
sti
xchg
mov
mov
je
rorl
add
dec
push
int
lcall
movl
imul
dec
addr16
cmpsb
pop
scas
adc
cmp
push
add
out
dec
or
cs
or
movsl
js
in
sbb
jno
pusha
idiv
jae
pop
push
sub
dec
xor
outsb
ss
test
outsb
mov
movsb
add
dec
ret
lret
lret
add
inc
pop
or
dec
es
push
cmp
xor
xlat
pop
xchg
xor
xchg
shlb
dec
aas
xchg
mov
movsb
push
xchg
inc
aaa
addr16
xchg
lahf
hlt
add
cltd
dec
leave
cmp
add
bound
xor
add
jle
add
int
sbb
shll
and
mov
shl
push
pushf
sub
lds
imul
out
dec
pop
and
adc
or
fwait
push
fidivs
inc
div
popf
mov
fstpl
arpl
adc
or
and
ss
sbb
cli
sub
xor
pop
fstpl
xchg
xor
jg
mov
test
sbb
jg
cs
add
mov
cld
xorb
pop
es
adc
dec
rcrb
xor
inc
inc
dec
lahf
js
mov
outsb
fdivrs
mov
scas
mov
das
mov
sarl
xor
sub
repz
sub
dec
pop
ds
inc
xor
out
push
push
jbe
daa
jp
push
stc
dec
or
dec
out
test
sbb
or
adc
nop
and
call
in
out
xorl
in
mull
sbb
mov
aam
jne
mov
gs
cmpsl
xchg
outsb
pop
push
inc
jecxz
or
ret
pop
add
xchg
ret
aam
stc
int3
shrl
js
xor
movsb
clc
fmul
mov
sub
outsl
mov
or
repz
inc
xor
mov
push
imul
adc
pop
xor
std
adc
test
lret
ret
fwait
add
sub
mov
mov
ljmp
lods
pop
jge
dec
imul
cmp
outsl
cmpsl
and
cld
or
dec
shrb
iret
repnz
fsubl
pop
aaa
lcall
jnp
mov
scas
out
sbb
dec
push
scas
pop
int
xor
arpl
notl
add
lock
add
js
data16
inc
sbb
cmp
orb
shll
ja
mov
sub
mov
mov
sbb
inc
mov
mov
call
rorl
mov
lock
pop
fidivrs
cwtl
sbb
inc
hlt
shll
xchg
nop
insb
and
cmp
cli
mov
lods
mov
icebp
jns
lods
das
mov
ret
sbb
sub
push
pop
cmp
sub
push
sti
xchg
xchg
ss
es
inc
mov
sub
sbb
loope
nop
lcall
push
mov
push
arpl
xchg
lahf
and
inc
leave
add
add
and
pop
in
sti
pop
stos
adc
sti
mov
stos
xor
mov
sbbb
jmp
xchg
lea
mulps
push
mov
outsl
mov
add
call
sahf
in
mov
pop
gs
fcomp
cmp
test
sbb
data16
cli
incb
mov
or
push
cmp
icebp
push
sub
add
pushf
ss
and
or
jge
pop
mov
ret
shlb
mov
popf
lea
loope
les
xchg
sub
or
lahf
mov
in
xor
inc
mov
in
add
dec
jp
cwtl
mov
cmc
dec
int
inc
mov
jle
inc
daa
adc
bound
dec
icebp
xor
fimull
iret
je
nop
pusha
aaa
mov
jnp
push
inc
insl
jns
adc
shl
insb
stos
in
jecxz
adc
dec
mov
push
test
adc
out
jne
xor
aas
data16
cmp
stc
mov
inc
mov
sarl
pop
lods
fmull
aas
mov
std
pop
orb
mov
push
cmc
and
inc
subb
cli
ss
enter
shll
iret
xor
adc
cmp
sub
push
pop
in
inc
ret
jmp
push
pop
negw
add
push
out
fdivs
adcl
data16
movsb
sub
mov
ret
aam
insl
push
push
cs
out
pop
inc
and
sbb
xchg
data16
out
xor
sub
jo
into
pop
hlt
daa
loopne
aad
xlat
mov
repnz
ret
data16
sbb
jl
lds
mov
adc
mov
or
ja
adc
push
mov
pop
loope
stos
mov
push
add
pop
jge
repz
push
add
hlt
pop
mov
dec
adc
jmp
cmc
das
xchg
add
dec
popa
jp
addb
cld
aas
mov
push
lock
fisttpll
xchg
inc
sbb
enter
lret
sub
test
and
hlt
add
sub
ret
xchg
push
imul
mov
pushf
xor
mov
cwtl
ja
jae
xor
dec
dec
jbe
test
adc
imulb
or
or
scas
mov
push
test
jg
xor
mov
cmp
xchg
and
decb
inc
in
arpl
std
cmp
push
shrb
repnz
cmc
aad
lcall
pop
cmp
cmpsb
dec
mov
imulb
pop
sub
sti
pop
shll
ret
xchg
inc
sbb
pushf
daa
dec
xchg
xchg
popf
rcrb
mov
js
dec
xor
adcb
outsl
jnp
sub
js
sbb
push
sbb
pop
xor
adc
movsb
pusha
stc
push
mov
call
xchg
dec
xchg
add
rcll
loopne
les
sub
dec
or
lcall
jns
dec
in
loop
daa
add
cmp
xchg
and
jb
nop
cld
sbb
cmpb
iret
add
dec
push
add
in
mov
or
and
inc
mov
mov
cmp
clc
add
jmp
mov
adc
xchg
daa
dec
pop
pusha
dec
fdivrs
call
fdivrs
nop
aaa
mov
lea
call
adc
cld
jns
dec
lahf
push
cld
mov
push
cli
adc
or
lret
xchg
jo
pop
sub
sbb
mov
in
in
dec
pop
mov
or
int3
mov
pop
push
fwait
pop
in
inc
mov
cmc
xchg
cmpsl
lock
pusha
out
mov
fimuls
add
mov
cmpsb
ret
sbb
int3
sub
fimuls
je
outsb
sbb
negl
gs
mov
inc
push
mov
fdivs
inc
sub
test
lcall
insb
push
into
dec
mov
scas
fmull
lods
push
push
inc
or
inc
stc
dec
push
cli
xor
dec
jecxz
inc
popf
push
sti
lret
dec
imul
in
in
jno
xlat
imul
cmp
jb
mov
shrb
mov
fsubrs
movsl
movsb
mov
addr16
xlat
popa
and
dec
and
mov
das
inc
dec
jns
bound
jb
sbb
add
mov
js
mov
adc
call
aad
cltd
stos
xor
leave
mov
inc
lock
shll
inc
sub
xchg
add
dec
xchg
inc
dec
fs
pop
les
decb
movl
out
pop
vaddsubps
fmull
popa
leave
sbb
int
jae
aaa
je
test
mov
add
mov
daa
sbb
pop
fsubrs
push
lods
mov
push
cmpsl
in
std
or
xchg
dec
or
iret
inc
mov
arpl
sub
inc
shl
fwait
ret
movsb
push
mov
adc
mov
cmp
imul
push
outsb
mov
sbb
xorb
adc
inc
aad
xchg
xor
fdivrl
fidivs
adc
and
fildl
lea
and
shrl
out
mov
dec
dec
pop
movsl
fwait
int3
movswl
loop
mull
sub
notb
fldl
mov
and
cmc
lock
sbb
xchg
jmp
aam
ret
pop
xor
mov
mov
hlt
ficomps
int
inc
adc
cli
pusha
js
sub
sbb
cmpsl
mov
jns
inc
fcmovnbe
fidivrs
insl
pop
iret
pop
in
outsb
and
mov
jmp
out
and
fisttpll
test
pop
shrb
mov
cmp
add
aaa
sbb
in
push
in
push
pop
rol
adc
xor
mov
xor
hlt
mov
fwait
mov
lock
ja
mov
lret
ja
rolb
cli
sub
imul
es
xchg
pop
outsl
addr16
cmp
xor
sbb
jg
and
cmp
faddl
pop
ss
insl
icebp
mov
rolb
jb
pop
shll
inc
dec
fwait
sbb
imul
ss
hlt
mov
inc
inc
cli
repz
data16
dec
dec
sub
scas
ds
roll
ds
fstpt
fnclex
out
xchg
shll
dec
lds
and
call
or
push
shlb
inc
lds
pop
xchg
xchg
xorb
outsl
sahf
fwait
cld
sbb
mov
clc
mov
cmpsl
sar
sub
and
es
enter
jle
add
push
sbb
push
add
shr
aaa
aam
in
rorb
ss
add
inc
test
outsb
nop
lahf
xor
jmp
repnz
mov
or
sbb
lods
outsb
push
and
adc
mov
aad
sahf
inc
int
jno
loope
pop
add
dec
cmc
or
jl
out
iret
mov
iret
lret
imul
push
fwait
mov
pop
mov
lahf
ss
loope
loop
cmc
icebp
inc
dec
es
gs
add
xor
jecxz
nop
pop
jmp
sbb
push
jge
fwait
pop
int3
xor
mov
push
dec
and
popf
fmuls
rolb
pop
mov
dec
dec
insb
subl
mov
push
mov
mov
and
mov
pop
push
pusha
aas
dec
nop
push
test
adc
mov
dec
fbstp
ds
aaa
inc
sbb
dec
repnz
popa
stos
adc
add
mov
dec
fwait
and
xchg
fidivrs
jmp
sti
inc
imul
mov
cwtl
mov
dec
iret
push
xchg
js
cmpsl
sub
js
mov
mov
pop
loopne
jge
repz
scas
sub
mov
add
xchg
icebp
insl
pop
sbb
mov
xor
pop
xlat
mov
bound
and
mov
fs
sub
cwtl
fwait
jp
mov
lea
push
lock
cmpsb
xor
fwait
sahf
dec
rcrl
jnp
or
sti
jo
mov
nop
imul
scas
ret
cmpsb
jl
mov
inc
fmuls
jo
mov
or
fldt
mov
xchg
and
lds
cmc
jae
sub
pop
and
jbe
stc
mov
ficoml
lret
mov
bound
dec
jno
xor
lds
aaa
dec
xor
out
push
sub
jo
in
mov
xchg
pop
out
dec
jmp
filds
add
push
dec
cmp
fistl
fs
mov
pop
cmpsl
into
jnp
movsb
sub
cmp
pop
arpl
or
sub
jmp
jmp
xor
cmp
fcmovnb
lock
sbb
jbe
add
sbb
jnp
je
pushf
xor
in
loop
aam
or
enter
les
call
pop
imul
into
inc
xor
shr
ljmp
cmpsl
mov
outsb
and
scas
stc
mov
or
jmp
inc
sub
push
pop
imul
pop
push
lds
rcll
xlat
into
movaps
cltd
push
or
lahf
fnstcw
cmp
and
stos
in
scas
push
test
pushf
jp
in
sbb
and
sbbb
or
cs
fcmovbe
xor
ss
adc
adc
faddl
fidivs
outsl
jae
add
fwait
inc
sti
or
mov
sbb
das
js
call
pushf
nop
inc
jns
sbb
dec
test
lock
xchg
dec
test
jno
call
dec
pop
push
push
jnp
fwait
in
push
mov
push
push
enter
dec
hlt
jmp
clc
in
xor
aad
int3
cli
mov
sarl
cmp
jl
int3
gs
call
jge
lcall
ret
or
jae
fs
nop
cwtl
aam
push
mov
rorl
xorl
sub
push
add
sti
add
lret
sub
subl
shll
pop
dec
je
pop
shl
inc
mov
add
lea
jo
test
mov
lods
sbb
data16
in
aaa
lea
fists
or
lds
mov
scas
mov
insb
shll
xor
mov
jle
jbe
imul
add
or
insb
daa
daa
xchg
mov
flds
jnp
out
sahf
lret
mov
xchg
push
dec
ficoms
dec
cmpl
mov
mov
addb
pop
fldln2
fsts
mov
test
pop
and
je
aaa
popa
inc
xchg
fistpl
loopne
ret
push
pop
mov
push
jp
mov
in
add
and
call
aaa
gs
rorl
outsl
mov
and
mov
push
inc
fwait
xchg
and
cmpb
es
data16
outsb
ja
mov
mov
cmpsb
ss
mov
jmp
sti
imul
outsb
mov
dec
inc
push
jbe
adc
or
pushf
xchg
es
and
sbb
xlat
movsl
divl
push
scas
xchg
dec
mov
jl
cmp
rorb
stos
shrb
lods
push
scas
push
or
sub
inc
ljmp
push
aam
or
jbe
int
lods
and
push
cmpsb
jae
adc
push
in
inc
je
xchg
fnstenv
test
test
out
push
mov
push
aas
hlt
and
ret
jb
shrb
adc
cmp
popf
loope
in
mov
lds
cmp
call
imul
mov
js
mov
ds
les
mov
ja
pop
pusha
mov
and
mov
in
outsb
sbb
jns
pop
addl
push
mov
sub
repnz
pusha
push
inc
and
fidivrs
arpl
popf
push
fisttps
aad
jnp
cli
shll
fld
dec
adc
stos
push
mov
jno
add
test
lret
movd
nop
rcrl
gs
jle
mov
cld
ss
sahf
testb
ss
loopne
sub
sahf
std
push
push
stos
add
mov
pop
mov
pop
inc
mov
lods
pop
and
pop
lcall
mov
and
inc
push
scas
sub
cli
dec
subb
jecxz
hlt
lock
imul
inc
dec
sub
out
repz
jecxz
gs
mov
and
les
push
push
adc
test
or
push
clc
mov
cmp
or
daa
xchg
imul
adc
loop
sti
aaa
insb
imul
call
or
cmp
ss
sub
push
mov
pushf
test
and
pop
push
enter
mov
mov
nop
xchg
or
nop
js
mov
push
out
push
jne
and
push
adc
imull
mov
fstpl
and
adc
lds
and
lea
ret
aaa
cld
mov
cmp
outsl
and
and
pop
mov
notb
fsubs
std
cmp
in
sub
xchg
scas
or
mov
int3
cmp
cmp
sbb
jmp
bnd
fcompl
in
or
mov
dec
adc
jb
and
call
inc
xchg
repz
and
dec
and
cmpsb
inc
xor
dec
data16
roll
cltd
clc
hlt
ret
xor
cmp
lahf
push
andb
aas
lea
mov
in
add
std
sbb
in
sbb
push
add
push
and
push
xor
and
test
sarl
in
and
mov
or
pop
cmp
inc
sbb
mov
test
pop
push
stos
dec
insl
loop
shrl
mov
mov
aad
xchg
add
les
imul
in
mov
push
push
in
not
push
pop
or
mov
xchg
pop
lret
mov
dec
cmc
int
jne
cwtl
out
xor
push
xor
mov
test
jp
mov
clc
push
cmp
insl
int
daa
repnz
cmpb
scas
enter
sbbl
mov
leave
inc
add
mov
movsl
je
mov
aaa
es
xchg
aam
add
aam
inc
inc
lret
jo
lds
inc
pop
scas
sahf
jae
test
shr
mov
pop
sub
popf
pop
cli
push
xchg
mov
cli
ret
dec
push
mov
sub
xchg
add
add
and
mov
nop
lret
xchg
cmpsb
ret
dec
in
add
in
and
mov
pop
pop
ds
or
xor
push
xchg
aas
loop
mov
push
mov
into
add
push
add
call
jo
imull
imul
ss
pushf
je
out
not
cs
faddl
push
lret
pop
adc
jbe
int3
sahf
lods
xchg
push
and
pushf
test
xor
cli
mov
push
mov
xchg
pop
pop
jbe
cli
xor
dec
mov
dec
push
push
out
pop
stc
out
sar
or
in
cmp
sbb
jl
pop
arpl
inc
add
fidivrs
arpl
repz
test
adc
jmp
scas
stos
ds
mov
js
xor
subb
loopne
lds
xlat
in
pop
stos
cwtl
jge
xor
je
dec
push
mov
inc
sti
cmpsl
fstpl
jp
mov
into
inc
lds
sub
mov
ljmp
ja
lods
xchg
sbb
pop
xchg
fisttps
stos
dec
adc
call
lea
rcrl
mov
pop
push
adc
mov
mov
in
sbb
shll
ljmp
ljmp
mov
jecxz
test
adc
fwait
in
push
add
push
mov
rolb
je
mov
arpl
mov
mov
cmp
add
test
pop
mov
ss
jnp
bound
fdivrl
add
iret
xchg
outsb
outsl
sahf
testl
cld
adc
aaa
jg,pn
mov
push
inc
pop
out
dec
jb
loopne
cwtl
cmpsl
aas
daa
push
scas
int3
adc
and
enter
leave
cmp
outsl
push
xchg
adc
pop
dec
pop
pop
cmc
xor
or
repnz
shl
call
mov
int3
out
fs
fstpl
jle
pop
dec
mov
in
outsl
outsl
or
lods
inc
js
mov
sub
lcall
jo
lcall
cltd
daa
mov
neg
popf
lret
bound
aas
fwait
cli
jle
leave
scas
push
in
mov
clc
lock
arpl
insb
nop
and
jnp
sub
in
loop
test
jp
adc
add
subl
js
push
pushf
sbb
add
aaa
popa
lea
imul
orb
dec
shrl
rol
mov
mov
mov
jge
mov
sub
ja
mov
pop
dec
lret
adc
or
loope
sub
loopne
dec
xchg
sbb
fcompl
ret
fldenv
xchg
mov
adc
jne
mov
or
jnp
in
mov
ljmp
inc
pop
sbbl
jmp
icebp
jb
notl
or
inc
scas
clc
mov
movsl
mov
add
add
pusha
xor
movsl
pusha
dec
fstl
mov
jp
cmp
pop
dec
scas
or
inc
xchg
jge
movsl
cli
adc
pop
imul
cmc
iret
sbb
jge
fstl
dec
cmp
sub
addr16
sti
lea
hlt
push
xchg
mov
mov
push
jno
in
pop
push
add
jge
inc
scas
push
insl
in
pop
fstpt
push
fistpl
dec
sub
ds
test
test
repz
inc
pop
adc
ss
adc
scas
in
into
and
aaa
mov
ljmp
mov
mov
push
add
add
push
adc
xor
out
addr16
and
pop
jge
inc
xchg
xor
inc
pop
popa
adc
es
ret
jl
adc
push
add
mov
lods
inc
ret
cltd
xor
stos
and
xchg
and
jmp
std
sub
jg
pop
adc
jae
jp
lock
icebp
testb
and
daa
sub
insb
pop
lea
mov
mov
mov
dec
sub
push
ffreep
movsb
xchg
xchg
add
inc
insb
mov
loope
xchg
rcrb
test
jbe
loop
mov
inc
dec
mov
push
ljmp
mov
jecxz
cmp
mov
fsub
stc
fistps
jbe
sbb
insl
es
dec
mov
sub
rclb
and
js
arpl
xchg
add
push
mov
mov
dec
out
fldenv
scas
push
stos
jne
ficomps
fiadds
lret
jno
add
adc
inc
inc
test
cmp
loope
xorb
addr16
in
je
jg
push
xor
pop
fidivrs
sbb
outsl
enter
rolb
insl
and
mov
inc
xor
lds
jle
sahf
push
repz
outsb
das
or
cmc
dec
and
das
imul
or
add
mov
sub
add
pop
push
je
pop
cmpsb
and
and
clc
mov
xchg
es
cmp
fists
das
fs
out
negl
sarl
repz
bound
ret
jb
les
pop
xchg
pop
outsl
movsb
aam
ljmp
pop
dec
sbb
sub
mov
add
add
mov
ljmp
adc
testl
popf
xchg
cmpsb
push
rol
hlt
out
cmp
xorl
xchg
test
xchg
movsl
ss
es
data16
mov
pushf
shrl
jae
call
aas
mov
fxch
shll
jg
mull
inc
add
lea
jg
repz
sbb
imul
xor
sbb
out
sub
aam
push
dec
sub
es
addl
cmpsl
ja
cli
dec
cmp
fldenv
lret
jge
jle
mov
xor
pusha
add
scas
and
dec
xchg
imul
jl
imul
dec
jecxz
pushf
sbb
sti
sub
rorb
andb
mov
rcrl
mov
daa
add
cmpsl
mov
daa
dec
sbb
mov
pop
test
push
mov
mov
outsl
adc
dec
aad
or
dec
adc
adc
xor
sbb
notl
int3
out
xchg
mov
and
mov
rcll
mov
pop
gs
repnz
clc
stc
add
shl
stos
aaa
arpl
inc
int3
imul
sbb
int
add
in
shll
pushf
or
xor
cmc
inc
daa
add
cmc
push
xor
roll
mov
ss
mov
scas
push
jno
add
out
mov
inc
leave
adc
roll
pop
scas
jecxz
mov
xchg
and
bound
mov
pushf
mov
xchg
aas
leave
sub
dec
xchg
adc
popl
std
and
dec
xor
xor
stc
lret
outsl
pop
cwtl
pop
or
dec
xlat
into
jl
fdivl
mov
test
push
imul
or
lahf
add
sbb
popf
arpl
pop
dec
sbb
push
push
push
aas
mov
aas
shl
cmp
lods
idivb
mov
mov
fs
pusha
imul
loopne
jbe
rcl
xchg
addl
insl
fwait
xchg
sub
cmpsl
popf
sti
shlb
pop
jno
mov
ss
sbb
pop
loopne
xchg
out
test
push
adc
test
jno
cmp
in
addl
gs
fbstp
fstp
movsl
rorb
lods
fists
pop
mov
aam
mov
imul
addl
fldt
insb
fldenv
adc
mov
or
cmp
sbb
fistps
push
push
inc
pop
gs
xchg
mov
add
inc
jp
push
call
sub
andb
mov
xor
out
in
mov
jno
jne
mov
adc
enter
fsubr
daa
out
sub
cmp
outsl
xor
or
mulb
mov
es
call
popf
jns
jmp
mov
adc
sub
pusha
xorl
js
clc
xor
iret
test
inc
sti
insb
push
shrl
stos
push
inc
cmp
scas
push
rorb
add
inc
add
xlat
sbb
stos
push
out
aas
mov
cmpsl
js
jns
cmp
mov
mov
cmc
add
sub
sub
lret
mov
add
inc
stos
fld
push
dec
cwtl
int3
push
lahf
push
sub
pop
lea
movsl
mov
out
inc
aam
movsb
mov
test
mov
mov
xchg
repnz
jmp
popa
adc
movsl
call
data16
lds
jns
shrb
push
cmpsl
movsb
inc
insb
test
push
cmp
cmpsb
loopne
jnp
sbb
dec
rclb
orb
mov
out
int
das
or
xorb
adc
mov
sbb
or
movsl
push
clc
xor
in
pop
repnz
fwait
call
daa
int3
out
jnp
lods
sti
dec
lahf
clc
xor
mov
into
enter
xor
int3
jo
mov
pop
sub
adc
pop
shll
test
stos
push
fwait
mov
sub
rcll
adc
roll
pop
or
mov
xchg
lret
mov
lods
adc
adc
xchg
shll
mov
dec
cmp
pop
popa
sub
mov
mov
inc
inc
out
adcb
callw
or
and
pushf
xchg
xor
and
in
call
fisttpll
mov
pop
stos
jecxz
mov
mov
adc
fs
aam
mov
scas
lea
push
add
stos
negb
and
or
enter
jmp
xorb
mov
xlat
sub
out
xor
into
cmp
lods
push
jecxz
jnp
mov
sub
sbb
sub
xchg
cld
gs
jecxz
ljmp
adc
mov
add
mov
push
shll
dec
aad
add
add
mov
pop
ret
jns
repnz
pop
movsb
pop
xchg
pop
push
cmp
push
rcrl
fwait
sbb
jno
sub
adc
cmc
ljmp
out
sub
jne
out
sarl
fdivl
cmp
or
pop
xor
jl
movsb
cld
imul
filds
rcrb
orl
or
adc
mov
in
cmovno
sub
cltd
out
jbe
sbb
or
cmp
cmp
and
push
je
sub
push
ja
inc
jmp
dec
fmull
mov
mov
test
jns
jmp
jo
cmpl
rcrl
data16
sbb
hlt
sbb
cmc
push
negb
mov
mov
mov
mov
sbb
lcall
and
mov
fimuls
add
mov
jmp
lcall
and
mov
xor
int
mov
aaa
sub
jmp
inc
xor
rcrb
movsl
push
jno
mov
daa
ja
sub
xlat
lcall
xchg
push
test
jo
arpl
cmpsb
or
lods
into
or
and
push
out
add
lds
mov
fcoml
or
sbb
pop
jbe
in
les
shlb
lods
sbb
add
cmp
cmpsb
je
dec
in
inc
xchg
repz
repz
in
lds
or
js
outsl
clc
cmpsb
fnstsw
pop
and
mov
mov
inc
jnp
cmp
mov
std
xlat
enter
mov
dec
sarb
sbb
js
and
leave
add
lahf
outsb
pushf
ds
popa
out
fadds
xchg
add
aam
sbb
jne
cmp
ret
xchg
adc
push
and
clc
jecxz
shr
mov
lds
mov
mov
in
mov
cmc
inc
je
mov
pop
cmc
dec
rorl
pop
mov
jmp
jae
ss
sbb
lahf
sarb
or
inc
popa
enter
dec
or
pop
out
or
fmul
adc
mov
xchg
outsb
sub
mov
dec
mov
xchg
imul
jns
or
gs
test
ret
sbb
fnstsw
into
fs
pop
jae
bound
adc
stos
xlat
notl
jb
xchg
xchg
out
addb
stc
dec
inc
fistl
adc
xchg
inc
idivl
dec
scas
jecxz
cwtl
ja
cmp
xchg
or
lahf
mov
rolb
aaa
jnp
push
lea
adc
sbb
jmp
cmp
xor
imul
pop
test
dec
add
mov
pop
mov
je
jge
imul
int3
js
mov
xchg
test
dec
mov
pop
adc
and
or
jle
fst
and
add
imul
imul
mov
xchg
add
jecxz
insb
out
adc
xor
into
xor
add
dec
jae
pushf
insb
xlat
jmp
ja
push
cltd
dec
negl
xchg
iret
jecxz
jae
ss
xchg
adcb
lret
scas
pop
daa
das
rorb
cmpsb
fstps
xor
dec
fdivr
inc
xchg
lock
cmp
inc
es
push
repnz
clc
mov
or
popa
xchg
repnz
mov
lahf
insl
inc
call
xchg
cmp
rclb
mov
sub
cltd
jmp
lahf
sbb
mov
lods
sub
dec
xor
cld
scas
lcall
mov
mov
sub
pusha
add
mov
aam
xorl
hlt
sub
add
fwait
loope,pn
popf
sub
mov
aaa
jl
push
cmp
xchg
movb
cmp
pop
fnstcw
leave
scas
insl
dec
rorb
push
insb
negl
mov
mov
int
and
popf
lret
add
les
mov
jl
push
inc
lds
and
jmp
mov
fistpll
dec
inc
sti
inc
aaa
pop
rclb
je
xchg
clc
imul
rol
add
cltd
xchg
icebp
pop
outsb
xchg
push
pop
add
xchg
xchg
cs
movl
arpl
imul
in
fiaddl
les
add
mov
add
and
inc
xchg
lret
pop
sbbl
popf
jnp
hlt
mov
cvtpi2ps
je
xchg
pop
scas
push
movsb
cmp
loop
bound
mov
insl
cld
fidivrs
jno
rcll
fdivrs
jge
adc
sbb
or
dec
mov
adc
adc
mov
push
add
int
inc
int3
add
sub
ret
loop
ja
pop
add
mov
mov
cmp
dec
cmpsb
shll
add
add
and
sub
in
jns
pop
mov
icebp
sti
and
jge
pop
aad
sbb
jp
add
daa
jecxz
lea
xchg
bound
mov
jp,pn
or
xchg
loopne
xor
outsl
insl
mov
xlat
mov
stos
into
scas
hlt
arpl
dec
pop
xorb
into
bound
xchg
outsb
adc
outsb
cli
pop
in
das
repz
xchg
cmp
ljmp
adc
inc
in
sbb
movsl
aas
pop
mov
push
aad
jmp
rcl
xchg
cld
lea
test
jg
cltd
inc
mov
xchg
orl
fsubs
push
das
rcr
stos
jns
sbb
arpl
int3
xor
or
mov
jne
stos
ficoms
add
lsl
dec
int
ja
les
adc
sbb
in
add
push
and
jmp
mov
jmp
andl
mov
add
mov
mov
xchg
bound
cmp
in
push
test
add
movsl
jge
or
mov
ds
mov
iret
subl
and
sarl
outsl
sub
aam
lods
cmp
push
test
mov
roll
jo
push
lds
push
nop
jecxz
mov
outsb
sub
and
imul
out
cmpsl
or
mov
movsb
fwait
lret
push
daa
adc
jmp
lea
test
cltd
in
test
into
dec
jne
je
sahf
jb
jmp
bound
mov
push
addr16
mov
fsub
sti
xor
enter
inc
pop
je
jae
adc
in
fs
mov
adcb
daa
stos
rolb
mov
and
jmp
imul
pop
es
mov
ja
or
notb
jbe
xchg
mov
imul
xchg
shl
roll
into
outsb
or
out
pop
in
xchg
cmp
push
mov
out
scas
iret
nop
lock
xchg
and
outsb
adcb
pop
out
bound
pop
jle
push
or
filds
fnstenv
push
pop
icebp
iret
sub
scas
popf
fwait
xor
sub
cmp
outsb
mov
fs
add
add
sub
mov
push
mov
dec
das
lods
mov
stos
outsb
loopne
xchg
adc
sahf
sub
dec
ss
pushf
pop
pop
sbb
mov
jl
sub
cmp
push
xchg
mov
ret
test
pop
roll
push
xor
inc
and
xchg
repnz
pusha
out
jmp
or
pusha
push
sbbb
mov
loop
xor
push
mov
arpl
cmc
ljmp
lods
mov
or
fbld
cltd
testl
cmpsb
dec
xlat
inc
sbb
repz
gs
sbb
lods
and
mov
cmp
pop
xchg
rol
popa
or
jne
loop
push
pop
adc
in
in
inc
inc
jns
inc
jbe
lea
mov
cmp
bnd
loopne
inc
js
xor
ud2
dec
outsb
popa
add
sbb
adc
enter
pop
lret
jp
lcall
lcall
cmp
adc
out
lds
inc
xchg
mov
inc
inc
adc
call
repnz
mov
dec
xchg
inc
lcall
mov
aaa
or
pop
testb
enter
lea
incb
imul
lcall
xchg
enter
cli
das
push
adc
loope
out
jle
xchg
mov
fdivrs
mov
mov
push
and
adcb
dec
aad
jl
jecxz
dec
sbb
outsb
cmp
fmul
in
sbb
xor
xchg
repz
les
adc
mov
pop
and
cmp
imul
andb
das
and
fidivrl
inc
loop
add
int
pop
mov
mov
push
movsb
jp
loop
cmp
dec
pushf
xlat
adc
es
outsb
in
sub
mov
sbb
sub
fistps
mov
push
loop
add
das
fcomps
mov
jne
push
iret
mov
mov
movsb
mov
push
imul
jbe
cmc
cmp
jae
jle
and
mov
or
data16
cmc
fs
cmc
add
andl
lock
out
es
je
mov
adc
jns
xorb
jno
or
repnz
pusha
sbb
xchg
mov
outsl
xor
pop
xchg
pop
xor
neg
pop
cld
xchg
inc
std
int
mov
cwtl
jns
sbb
aaa
repz
dec
mov
jbe
arpl
and
and
xor
aad
imul
divb
mov
xlat
dec
fnstcw
test
insb
aam
shrb
cwtl
mov
mov
inc
push
push
aas
aaa
pop
shlb
aad
imul
dec
mov
mov
add
pop
movsl
je
xchg
shll
and
sub
mov
popf
sub
inc
jb
push
xor
stc
adc
scas
xchg
jge
repz
xor
adc
add
js
adcb
addr16
jne
dec
idivl
mov
movsb
cld
mov
shlb
scas
or
test
cmp
into
ss
lods
cltd
out
dec
sub
imul
or
leave
lcall
jae
int3
enter
lds
cld
neg
push
xchg
push
ljmp
dec
dec
ljmp
aas
mov
pop
or
ret
test
out
je
sbbb
inc
or
adc
test
mov
mov
lds
or
xor
test
mov
scas
loop
sub
inc
cltd
mov
mov
jo
daa
push
xchg
pop
fwait
jg
and
xchg
rolb
inc
jmp
mov
insl
mov
rclb
jle
or
je
pop
pop
pop
push
mov
mov
add
mov
fs
mov
aas
pop
ficomps
mov
xor
push
insb
mov
test
jno
mov
mov
pop
cmp
push
loop
les
push
lods
popf
lock
cmp
cmp
pusha
cmp
ficoml
fiadds
jle
and
ss
pop
sub
push
test
gs
fnstcw
mov
jnp
pop
xchg
mov
cmp
xlat
sahf
inc
jbe
pop
test
dec
shl
loope
incl
xor
inc
jne
cmp
adc
xor
arpl
cwtl
and
adc
and
xchg
xor
iret
fdivl
inc
xchg
test
push
loopne
popa
popf
adc
pusha
sbb
jae
outsl
push
popf
sbb
aaa
stos
sub
cmpsl
mov
out
jo
outsb
mov
xor
inc
fucomip
push
xchg
mov
push
add
mov
add
push
mov
decl
mov
daa
push
pop
and
ss
xchg
scas
cmp
lea
xor
test
dec
fcmovne
xchg
pushf
cld
inc
sub
in
pop
cld
ret
test
jmp
jns
pop
pop
fwait
and
cltd
inc
sub
adc
sarl
push
push
add
loope
xchg
dec
mov
icebp
cld
xchg
outsb
or
add
and
or
cmpsb
fdivrs
lret
int3
test
outsl
test
dec
and
pop
push
sbb
ret
mov
imul
xchg
addr16
jbe
idivl
test
cmp
cmp
test
scas
outsb
das
adc
sbb
pop
lods
cmp
sbb
mov
xor
xchg
push
push
clc
shrb
push
gs
or
xor
xor
mov
aas
js
bound
je
xchg
stos
mov
fimull
aas
ljmp
mov
test
out
push
lods
push
sub
addb
adc
pop
mov
dec
movl
push
inc
aas
les
loopne
fdivr
xorl
xor
mov
dec
lret
sarb
mov
test
int
adcb
mov
pop
xor
ret
flds
add
in
ds
ds
jl
das
inc
cmp
jb
inc
mov
shlb
mov
sub
mov
sti
inc
add
mov
mov
hlt
sbb
in
je
mov
cmp
cli
jo
inc
or
inc
pop
enter
sbb
mov
pop
inc
in
lret
call
cmpsl
dec
fildll
daa
lret
in
filds
jge
lock
sub
mov
cmp
jmp
jp
cltd
mov
test
or
pushf
sub
sbb
xlat
xor
xlat
push
sbb
push
xchg
enter
mov
mov
sub
adc
sub
mov
add
rcrb
stos
mov
out
jge
pop
repnz
cmpsb
inc
cmc
inc
sbb
nop
stc
add
mov
pop
pop
xor
loop
or
lods
scas
push
movsb
mov
mov
gs
or
pop
loop
cli
mov
scas
popa
mov
ror
dec
out
pop
leave
in
int3
stos
inc
push
fprem1
in
pop
jns
pop
pop
gs
lret
les
in
in
mulb
cwtl
les
xchg
xor
mov
xchg
pop
adc
sarb
pusha
fcomip
out
mov
fwait
push
fists
jle
aaa
push
loopne
movsb
lret
nop
pop
je
test
js
push
jle
mov
lods
fnstenv
xor
test
ja
push
or
ss
dec
jno
cmp
xchg
inc
push
int
pop
sti
mov
sarl
jle
xchg
fs
sbb
jmp
sbb
fcmove
addr16
lcall
mov
das
sub
sub
mov
data16
repz
shlb
addr16
jne
sbb
das
dec
push
call
bound
out
push
mov
scas
or
mov
sub
xchg
add
cli
lret
push
push
out
ljmp
mov
jno
loopne
jl
push
sub
jmp
or
cmc
loop
push
lock
andb
mov
ret
xor
fs
mov
and
inc
inc
xor
xor
add
pop
mov
cmc
or
mov
cmpsb
scas
add
jb
mov
into
pushf
mov
loopne
jge
cmc
or
or
out
pop
and
aam
cmp
movsb
sub
cmp
ds
mov
arpl
cmpsl
or
jmp
fsubs
loope
stos
fsubr
popf
jmp
sbb
jp
jmp
mov
pusha
fsubrl
push
jno
jle
sbb
imul
mov
xor
pop
add
inc
dec
pop
clc
inc
fcmovb
ret
pop
mov
or
pop
pushf
and
mov
pop
leave
adc
nop
fstpt
jmp
xchg
fisubs
jae
lahf
icebp
mov
mov
leave
push
stos
push
xchg
fimuls
test
stos
test
sti
jno
xor
je
notb
int
push
xor
dec
pop
stc
adc
or
and
out
sbb
test
test
sbb
int
sarb
int
mov
lods
mov
shlb
sbb
push
push
and
sbb
inc
dec
xor
push
push
xlat
dec
pop
mov
jmp
int
lds
and
out
ss
add
out
push
and
fdivrp
and
insl
cmp
loope
rorl
or
inc
dec
test
add
scas
mov
xor
inc
dec
je
and
cld
push
ret
push
ficoml
int
nop
mov
inc
insl
xlat
inc
fisubl
xchg
sbb
xchg
xor
pushf
mov
out
cmp
dec
sbb
jb
push
pop
icebp
lods
out
stc
dec
in
add
leave
fadds
mov
cmp
xor
sahf
and
clc
mov
loop
or
and
stc
jp
popa
and
in
imul
int3
or
mov
lods
iret
sub
xlat
dec
nop
cmpsl
cmp
addr16
stos
lahf
movb
lea
mov
cmp
enter
adc
lock
aad
lods
or
fisubl
xchg
xlat
and
cmp
mov
push
pop
out
icebp
push
pop
xchg
push
inc
or
gs
decb
push
popa
xchg
adc
adc
mov
lret
inc
add
mov
arpl
inc
cld
jno
stos
jecxz
js
cmc
lea
push
xchg
sub
xchg
fwait
popf
pusha
shlb
pushf
pop
inc
add
pushf
jg
mov
int
add
cmp
mov
aad
out
stos
mov
and
cld
shll
cwtl
inc
sbb
das
xor
mov
fsubs
mov
xor
sub
cmc
mov
xor
xorb
cmp
and
xorl
cmp
stc
fldl
addl
mov
movsb
cmp
das
ja
fists
mov
inc
jecxz
mov
jo
sub
mov
push
out
push
and
fwait
aam
adcl
xor
mov
mov
sub
mov
sub
sbb
aaa
pop
mov
push
sbb
xchg
cld
stc
xor
int3
ror
xchg
lret
mov
rorb
pop
jbe
pushf
cmp
inc
out
jl
jle
sbb
dec
and
dec
sub
pushf
mov
and
mov
in
xchg
adc
ja
adc
ret
idiv
sub
pop
jae
and
sub
mov
insb
cltd
cltd
inc
fldenv
mov
stos
dec
xchg
lret
push
fstpl
jb
std
and
dec
clc
fstl
lds
std
test
fadd
and
jl
xor
mov
mov
out
cli
jl
movsl
add
loopne
mov
jns
ljmp
sbb
mov
insb
push
jne
mov
js
aas
jl
xor
sbb
mov
dec
call
mov
lcall
outsl
lret
mov
aam
data16
jns
les
data16
jp
inc
sbb
push
jb
enter
or
adc
and
pop
xchg
inc
fwait
xchg
fwait
mov
imul
mov
jmp
enter
nop
pop
std
pop
xchg
cs
adc
out
lock
mov
mov
les
jns
push
or
xor
ss
push
imul
pop
or
movsb
jae
test
and
lds
ljmp
and
ror
push
loope
ljmp
add
cld
test
insb
fisttpll
jecxz
mov
jnp
out
gs
pushf
dec
popl
pusha
clc
inc
cmp
mov
and
js
add
mov
sbb
push
mov
and
mov
pop
pop
call
jp
xchg
xchg
mov
lods
cmp
lds
ss
jno
push
cmp
enter
loop
into
lret
repz
lods
iret
popa
imul
out
ss
sbb
cs
or
or
mov
aad
cwtl
xchg
ja
or
adc
rorb
jl
xchg
and
stos
mov
cmp
xor
and
mov
jns
dec
jnp
ret
cmpsl
adc
test
outsl
push
inc
aam
add
jecxz
sub
xchg
fists
push
int
jp
mov
popf
es
imul
bound
test
psraw
sbb
dec
imul
sbb
mov
xor
dec
dec
mov
in
mov
scas
rcll
inc
stos
lods
push
and
je
pop
sti
push
dec
fcoms
dec
cmpsb
mov
aas
hlt
dec
xlat
cmp
dec
movsl
or
test
mov
mov
fcompl
fcmovnbe
mov
sub
adc
xchg
mov
cli
mov
shlb
mov
cmpsl
jp
jne
cmpsb
jns
inc
das
cwtl
fisubrs
inc
inc
sub
popa
jb
push
test
out
ljmp
pop
add
data16
mov
cli
jne
pop
mov
ret
insb
lcall
stos
xchg
repz
inc
fs
cmpsb
fldenv
pop
xlat
insl
std
leave
rorl
push
xchg
mov
lret
dec
mov
xchg
mov
lock
stc
mov
leave
pop
sub
add
jl
addl
jge
mov
shlb
nop
push
out
pop
cmpsl
inc
or
sub
jb
fs
test
in
sub
or
xchg
inc
ret
pushf
packsswb
adc
mov
popf
fstps
sbb
mov
lret
and
or
sahf
add
mov
or
in
mul
adc
pop
xchg
les
stos
ljmp
dec
cli
or
mov
sub
lret
out
movsl
scas
push
das
call
aas
pushf
or
and
mov
scas
fisubrs
jo
movsl
push
scas
pop
ljmp
mov
js
xchg
or
mov
fldl
xchg
sbb
fnsave
outsb
xchg
add
mov
das
mov
daa
imul
xor
mov
dec
std
adc
cltd
clc
fwait
decl
idivb
jp
pop
stos
sbbl
in
mov
add
dec
add
pop
xchg
pusha
roll
xchg
mov
not
sub
jp
popa
jae
data16
push
push
daa
test
rcll
int3
push
in
ss
lret
cmp
dec
or
repnz
mov
daa
iret
jp
outsb
dec
sbb
mov
xchg
xchg
xor
mov
inc
mov
mov
ret
shr
jnp
icebp
xlat
mov
sub
movsl
lods
mov
fisubs
int3
out
out
in
das
mov
sub
jbe
pop
shrb
aas
inc
mov
adcb
and
stos
cs
mov
mov
xchg
int3
xchg
mov
cmc
pop
sbb
sub
and
lock
cmp
mov
mov
cli
push
adc
mov
mov
fidivrs
popa
jp
pop
jecxz
outsb
dec
inc
lods
and
int
icebp
cmp
push
xchg
mov
fstps
out
lret
inc
ss
inc
inc
shrb
sarb
pop
out
adc
or
pop
cli
mov
lea
imul
repnz
mov
ficompl
test
dec
leave
cwtl
mov
into
bound
nop
pop
xor
adc
inc
fisttpll
jg
aam
jmp
js
lods
xor
cmp
fldcw
inc
mov
mov
test
cwtl
jb
push
fsubr
es
fmuls
cmp
std
jne
dec
mov
adc
lahf
adc
jae,pn
sub
cwtl
pop
xor
inc
and
lcall
stos
dec
add
ljmp
int3
inc
mov
cld
cmpsb
lret
aam
push
or
icebp
mov
jae
pop
dec
movsl
mov
pushf
push
fildl
push
clc
pop
fwait
insb
pop
adc
jae
shrl
es
jae
sahf
les
mov
xchg
lret
jbe
dec
push
stc
xchg
fisttpl
and
sbb
xchg
cwtl
jmp
movsl
ja
add
sbb
shrb
inc
lds
mov
inc
adc
addr16
into
cmp
add
add
xchg
xchg
lret
mov
mov
das
dec
dec
adc
mov
int3
mov
leave
fwait
jg
into
mov
sbb
pusha
mov
daa
xor
push
jle
xor
push
sub
mov
insb
sub
inc
ja
or
je
repz
mov
aam
push
fwait
lea
addb
test
xlat
outsb
mov
push
add
mov
xchg
sarb
xor
mov
pop
pop
push
adc
push
popa
mov
cli
push
nop
das
lds
add
popa
jno
scas
rcll
mov
inc
cmpsb
cmp
setb
mov
cmp
or
hlt
iret
je
inc
das
add
aaa
add
mov
pop
jecxz
cmpsb
addr16
pusha
mov
nop
pop
sub
push
cmp
cmp
and
cmp
fwait
mov
push
and
stc
ja
jno
sbb
rcrb
jae
dec
dec
mov
jmp
pop
mov
aam
or
or
insl
push
lcall
mov
xchg
movsb
push
mov
popa
add
sbb
pop
sti
fwait
dec
cmp
mov
ds
cmp
mov
cld
dec
mov
bound
sbb
mov
sub
fnstenv
in
adc
ja
nop
insb
push
sub
lea
mov
dec
loope
ret
push
in
and
cmp
sbb
inc
push
mov
das
inc
sbb
xchg
push
inc
push
pop
sub
dec
leave
cld
lods
imul
and
loope
mov
lret
out
jecxz
cmp
inc
out
mov
fldenv
sub
ficompl
sub
iret
icebp
aaa
cld
xchg
insl
jge
iret
cli
clc
xchg
jae
pop
push
inc
add
outsb
or
jl
and
xchg
repnz
jecxz
leave
inc
mov
and
sub
shlb
stc
loopne
out
dec
jnp
sbb
inc
data16
sub
lods
lods
push
ss
pushl
mov
inc
push
mov
sar
gs
xorl
pop
adc
lods
xlat
or
in
clc
xlat
xor
es
pushf
xor
mov
fildll
shlb
mov
add
andl
jp
mov
dec
cmc
or
mov
bound
adc
mov
or
pop
nop
and
inc
jne
cld
cmc
rcrb
pop
xchg
imul
xor
movsl
cmpsb
pop
movsb
and
fisttpl
push
mov
cmpsb
leave
in
out
shrb
xchg
pop
mov
pop
arpl
imul
sbb
aad
rorb
arpl
inc
test
div
sbb
inc
dec
test
cmp
std
and
mov
push
or
pop
les
push
lds
cmp
inc
xchg
xchg
adc
pslld
not
pop
insl
lods
mov
data16
jmp
mov
shll
inc
fwait
sub
fiadds
lret
arpl
fcomip
add
cwtl
hlt
or
clc
dec
mov
shl
push
jb
cmp
outsb
add
adc
dec
mov
sarb
mov
mov
movsl
xor
ja
xchg
mov
arpl
lock
xchg
xor
lock
mov
bound
inc
push
rcrb
out
inc
je
cmp
xor
dec
repnz
adc
in
pop
xchg
dec
push
pusha
push
mulb
ds
outsl
xor
inc
outsl
cli
out
fs
fcoml
adc
arpl
popf
and
xchg
mov
adc
xor
stos
lahf
cmp
mov
push
lcall
lds
ljmp
rcrl
loope
xor
orb
out
cmpsb
push
call
iret
repz
pop
push
cmpsb
dec
ss
cmp
jecxz
fsts
mov
jbe
lret
out
or
mov
dec
repnz
sub
mov
pop
mov
pop
xchg
sbb
iret
push
test
repz
fisttps
ss
and
rep
loopne
push
or
sahf
xchg
jne
push
in
jbe
cmp
jecxz
sub
das
mov
rcll
fcomps
mov
or
int
out
jmp
mov
push
mov
mov
movsl
xorl
insl
pop
loope
xor
testb
repnz
mov
lock
outsb
in
cmp
lea
loope
insb
leave
xor
lret
cmp
sub
sbb
arpl
aam
inc
jae
mov
inc
adc
adc
cmpsl
shlb
iret
cwtl
rcl
sub
mov
loop
or
aam
sarb
aad
div
test
inc
dec
aaa
push
das
arpl
add
jne
mov
test
insb
mov
dec
stos
mov
jcxz
ret
push
scas
mov
ljmp
dec
and
sbb
cmp
dec
loop
and
lods
testb
nop
fs
sbb
adc
push
dec
shl
mov
mov
dec
cmc
into
or
cmp
addr16
mov
enter
adc
dec
jb
mov
in
mov
cli
and
pop
in
fdivrs
sbb
imul
mov
sbb
movsl
nop
jmp
lret
adc
sbb
mov
add
push
in
and
push
scas
add
xchg
js
sbb
movsl
cmp
cmp
sub
test
pop
pop
jmp
sbbb
leave
fs
pop
add
clc
inc
shlb
xchg
addl
sbb
push
cmpsb
mov
xor
adc
lret
icebp
imulb
dec
mov
arpl
sti
in
cmp
int
outsl
mov
adc
jno
loop
movsl
nop
shlb
cmp
mov
enter
das
cmp
std
inc
ds
insb
sbb
dec
out
jg
sub
jl
cmp
imul
dec
int
das
add
cmpsb
adc
aaa
call
stos
adc
pushf
test
lahf
mov
dec
mov
stos
xchg
xor
jg
cld
cmp
cmpb
xchg
ja
out
pusha
mov
fwait
mov
movsl
adc
mov
pop
aad
mov
mov
out
and
jge
nop
cld
lock
out
in
dec
push
cmp
push
rcrb
daa
adc
and
repnz
lock
add
stos
and
popf
pop
iret
loopne
mov
sub
or
cltd
mov
loopne
and
fstpl
sub
and
mov
or
push
pop
clc
in
adc
add
dec
or
sub
rcll
stc
mov
or
mov
xchg
sub
inc
lock
test
mov
xor
dec
outsb
shlb
pop
mov
stos
xor
nop
aas
arpl
lahf
mov
xchg
mov
add
push
lods
inc
loop
pusha
out
cmp
inc
push
roll
int3
mov
push
addb
je
sti
xchg
mov
fwait
xchg
aas
dec
ljmp
js
and
std
movl
or
and
repz
lahf
lods
sbb
cmp
rcrl
cli
ds
dec
push
cmp
fbstp
hlt
fbstp
outsl
negb
sti
iret
repz
stos
adc
mov
lods
pop
push
dec
add
lahf
cmp
push
adc
leave
mov
lds
mov
push
test
sar
mov
fstl
inc
push
das
lock
shlb
jae
arpl
ds
mov
inc
sbb
stos
shrb
es
sbb
mov
iret
lock
and
lock
push
pop
fndisi(8087
sbb
sbb
mov
lods
lds
lahf
inc
mov
iret
ficomps
in
or
movb
cmp
sbb
or
fsubs
aaa
and
adc
lret
mov
jnp
shrb
mov
dec
cmc
faddp
mov
in
iret
fwait
sub
cmp
call
lretw
jmp
mov
pop
mov
push
stc
aad
fs
jmp
gs
imul
xor
add
test
pop
add
pop
xchg
pop
adc
adc
hlt
mov
or
clc
add
sub
in
dec
cs
sbb
out
cmp
fwait
cmpsl
jbe
cltd
in
loopne
mov
shr
into
rcrb
xor
dec
sub
cli
jb
and
subl
xor
mov
pusha
cmp
mov
xor
pop
sub
cld
pop
cmp
push
fwait
pop
data16
les
pop
fcompl
inc
pop
inc
rcl
mov
shl
inc
push
sbb
fsubs
iret
add
leave
xor
adc
jmp
rorl
out
jb
fsubs
pop
movsb
test
daa
push
ret
mov
pusha
test
xchg
ss
jo
cmp
cltd
push
jns
fcomi
int
and
add
inc
sbb
and
mov
xchg
adc
xchg
gs
adc
sbb
ret
and
mov
cltd
mov
fistl
jmp
addr16
repz
fiaddl
fstps
outsb
mov
fdivrl
xlat
adc
sti
outsb
aaa
xor
clc
jae
lahf
push
add
lock
testl
add
cli
dec
lret
push
xor
jp
or
repz
adc
adc
pop
loopne
push
fwait
adc
subb
mov
pushf
dec
adc
fwait
pop
sti
push
lret
aad
scas
insb
jg
imul
scas
mov
cmp
ja
jecxz
shrb
mov
sub
inc
test
mov
jae
lock
jecxz
sbb
ret
cmp
xchg
ljmp
mov
subl
repnz
xchg
dec
push
xor
int
repnz
mov
outsl
and
or
inc
add
add
in
pushf
mov
lods
jmp
stc
fistps
jge
je
cld
repz
push
mov
sbb
xchg
fistpl
flds
xchg
inc
pop
mov
pop
jb
leave
in
dec
nop
in
push
mov
sahf
xor
mov
mov
push
xor
mov
int
insl
dec
sbb
shlb
xor
add
icebp
dec
mov
addb
mov
push
xchg
push
push
push
jp
mov
std
cwtl
mov
ja
sbb
cwtl
mov
xor
imul
imul
or
push
push
sub
cmpl
pop
in
push
repnz
add
mov
jmp
mov
jl
ret
dec
jae
push
loope
push
loopne
mov
add
sti
outsl
call
andl
test
outsb
mul
lock
cmp
dec
test
mov
xor
inc
jae
push
rcrl
pop
sub
pop
mov
div
cld
pop
hlt
pop
add
or
shll
ja
stc
and
dec
dec
push
xor
inc
mov
pop
pop
cmp
adc
pop
sahf
lods
test
push
stos
dec
ret
jl
scas
sbb
in
iret
sub
adc
movsl
aas
ljmp
pop
mov
insl
sub
les
sbb
jbe
xchg
or
jmp
test
xor
clc
aad
imul
inc
add
pop
test
ss
out
pop
xchg
mov
add
xor
stos
jp
imul
fnstenv
push
rcl
lahf
rcll
and
adc
push
in
jg
dec
adc
push
mov
cltd
iret
xor
adc
sbb
xor
outsb
jge
mov
rcrl
outsl
cltd
pop
dec
jl
lcall
in
sub
das
enter
sbb
mov
fsubrp
pop
lret
cmp
or
jp
pop
andl
inc
push
sbb
pop
cmp
lods
xor
stos
imul
fwait
call
out
xchg
dec
xor
sub
push
or
jl
cmp
movsl
scas
adc
push
sbb
std
int3
ja
xchg
xchg
mov
jecxz
out
stc
in
adc
and
mov
pop
sub
xor
jmp
xor
rcr
adcb
sahf
push
or
stos
jo
movzbl
arpl
sub
lcall
in
je
cmpsl
sbb
cmp
popf
pop
fwait
aaa
in
mov
pop
xchg
popf
xchg
and
insl
push
gs
push
xor
mov
fnstenv
xor
mov
pusha
or
sbb
mov
int3
call
jnp
add
cmc
pop
bound
sub
cmp
or
jo
sbb
aad
cmp
ret
pop
inc
lods
add
xchg
call
jmp
clc
push
sbb
mov
sub
or
imul
cld
in
push
pop
shll
repnz
jns
sahf
movsl
add
scas
aam
sbb
popl
inc
jecxz
repz
je
clc
mov
xchg
push
fcoms
cmpl
xor
scas
imul
jp
cmc
push
mov
pop
leave
insl
lods
repz
mov
mov
xor
cmpsl
mov
sub
pusha
nop
xor
mov
repz
loop
aam
out
cli
jp
or
xor
jns
shlb
push
push
cmpsl
xor
jae
data16
int
jae
stos
ja
lret
lods
xchg
shll
cmpsl
mull
icebp
mov
rol
je
dec
cltd
mov
xchg
daa
lret
pop
mov
xchg
outsb
aaa
icebp
int3
sbb
sbbb
sbb
ret
cmp
push
movsl
sbb
add
arpl
outsl
addl
rcll
dec
adc
dec
sbb
sub
movsb
mov
dec
stos
imul
jp
mov
and
push
mov
call
jmp
out
decl
sub
decl
loopne
sbb
xchg
or
fcoms
and
or
shufps
xchg
ret
push
mov
lcall
sub
jno
xor
adc
shlb
sub
mov
rcrl
or
decb
mov
testl
pop
popa
divl
mov
xchg
push
or
jmp
dec
cmp
mov
inc
adc
push
nop
pop
cs
xchg
mov
jne
jge
into
orl
cmp
cmp
xlat
out
lds
add
sbb
lret
mov
push
mov
sti
stc
dec
fists
pop
icebp
adc
lea
mov
or
rorl
xchg
shl
mov
mov
or
movsb
popf
add
imull
ds
adc
sbb
imul
arpl
pop
sbb
mov
insl
mov
in
mov
xchg
mov
mov
xor
in
inc
mov
insb
sub
dec
mov
mov
cld
test
roll
xor
jmp
mov
jns
notb
stc
pop
sbb
push
inc
hlt
xchg
push
hlt
aad
fcoml
jo
inc
and
pop
mov
dec
xor
jo
push
outsl
inc
xor
aad
shll
pop
sti
inc
add
fimuls
or
push
mov
cmpsl
jno
ljmp
or
mov
pop
jns
inc
leave
cmp
cli
and
sbbl
mov
mov
and
inc
dec
jmp
lods
and
add
cmp
sub
xor
xchg
repz
xor
test
sbb
mov
dec
dec
mov
pop
cli
jp
ret
mov
sbb
mov
and
into
pop
std
insl
cmc
jnp
lock
stc
add
jmp
fistpll
inc
dec
rorb
pop
rcrb
mov
test
push
pop
push
push
es
and
stc
add
ret
dec
out
lret
cmc
xor
daa
das
and
pushf
insl
fsubrl
jle
je
sub
pop
adc
push
imul
out
sbb
add
adc
add
nop
mov
fcomps
add
aaa
mov
push
and
inc
iret
pop
add
xor
cmp
arpl
adc
and
adc
mov
xchg
add
jno
dec
xchg
jno
aas
inc
pop
adc
or
pop
mov
adc
or
sub
icebp
jne
jb
pop
and
mov
pop
fnstenv
jno
push
xor
or
ljmp
or
jbe
ja
negl
mov
xlat
dec
pop
inc
mov
enter
mov
ret
mov
push
ret
sbb
adc
and
rcll
in
xchg
stos
je
mov
mov
pop
imul
cmp
stos
pop
mov
jp
std
shrl
pop
insb
stc
mov
add
out
pop
out
lods
push
cs
jnp
cmp
scas
loopne
mov
cwtl
mov
int3
into
ljmp
or
hlt
and
xor
rclb
inc
lahf
adc
call
aas
lods
dec
mov
dec
xor
ljmp
xchg
push
cwtl
and
mov
dec
ret
sub
push
insl
cmpsb
pop
inc
inc
shll
aad
insl
mov
mov
js
xchg
flds
ss
xchg
inc
mov
cmp
out
adc
arpl
stc
push
and
adc
mov
sti
imul
shlb
rolb
xor
inc
or
xor
inc
out
or
dec
xchg
xchg
inc
jne
out
scas
loopne
aam
mov
jge
pop
mov
jns
mov
pushl
mov
mov
pop
sbb
lcall
aam
popa
mov
test
xchg
and
cmp
xchg
stos
inc
clc
lret
or
insl
rorb
jo
lcall
stos
cmpb
pop
xchg
mov
xchg
push
sbb
sbb
popa
sarl
dec
cmp
adc
leave
dec
push
aad
jns
js
aas
cmp
mov
popf
imul
out
xchg
push
dec
inc
adc
test
loopne
std
dec
incl
hlt
rcrl
add
pop
pop
scas
dec
shll
lret
pushf
aam
sbb
dec
push
inc
inc
int
cli
mov
stc
push
sub
xor
stc
pop
rclb
scas
js
mov
cmp
pushf
out
stos
jns
mov
dec
mov
je
inc
mov
xor
fdivs
mov
add
js
fs
sti
scas
notb
outsl
and
mov
jge
negb
lds
subb
jecxz
insl
xchg
mov
pop
fsubrs
and
push
cltd
jns
inc
icebp
xchg
inc
xchg
arpl
jbe
rcll
push
add
jecxz
sbb
cltd
xorl
jp
dec
mov
push
or
and
or
jbe
push
stos
dec
xchg
mov
stc
loopne
or
shrl
mov
jge
cli
xchg
sub
push
imul
mov
call
sbb
or
sbb
daa
jge
mov
mov
xor
inc
or
pop
insl
out
pop
sub
mov
xchg
or
testb
out
push
mov
dec
inc
and
andb
mov
in
mov
push
test
in
clc
leave
negb
ds
xor
and
mov
cmp
push
lcall
pop
in
inc
and
shlb
jbe
icebp
mov
inc
cmp
subb
pop
into
mov
rolb
shlb
push
iret
push
test
mov
enter
ljmp
mov
aaa
shlb
push
imul
pop
out
and
pop
test
lahf
lea
ja
sbb
leave
sub
jecxz
leave
out
out
mov
mov
xchg
pushf
popf
jp
jp
mov
or
add
mov
adc
into
bound
loopne
dec
in
push
mov
cmp
xor
jge
sbb
test
dec
push
hlt
call
cmp
push
stos
pusha
mov
mov
repz
jge
xchg
test
into
test
mov
ds
xchg
outsl
movsb
mov
into
xlat
push
enter
ficomps
lock
push
icebp
iret
mov
addl
clc
and
mov
inc
or
pop
mov
enter
out
lock
movsb
scas
and
cli
pusha
aad
jno
test
rorb
jp
inc
int
push
out
cmp
repz
cmp
inc
jg
fmulp
out
cmp
jb
mov
xchg
inc
ds
int3
or
xor
jl
aaa
cwtl
cmp
sub
inc
stc
leave
inc
fistpl
jmp
cwtl
push
inc
cmp
fs
xchg
pop
lahf
adc
xorb
pop
cwtl
push
and
dec
cli
insb
mov
mov
imul
xlat
xchg
hlt
mov
ljmp
and
sbb
mov
sbb
push
jmp
shlb
push
push
push
mov
jmp
popf
ret
rcll
xchg
mov
inc
cld
jge
pop
mov
cmc
xor
dec
and
jle
sahf
pop
mov
popa
nop
xor
sbbb
loope
aas
rcr
cmp
pop
sub
add
imul
jmp
es
insl
push
mov
push
mov
or
and
mov
imul
mov
pop
mov
fistpl
movsl
pop
push
dec
pop
xor
xchg
sbb
jmp
and
cmp
push
sub
aas
mov
and
sub
sbb
lock
jmp
jl
int3
pop
xchg
mov
mov
inc
pop
xadd
jbe
push
sub
and
in
mov
in
mov
in
int3
adc
pusha
jp
aam
lds
mov
mov
nopl
nop
sbb
and
push
pop
frstor
and
cmpl
lods
sbbb
rclb
and
rclb
mov
divl
or
push
inc
mov
cs
or
shlb
add
dec
mov
sub
push
mov
cwtl
into
push
fmull
sbb
cmp
inc
jmp
push
rolb
ret
in
bound
je
cmp
js
mov
lea
adc
sub
lds
adc
in
je
repz
dec
or
das
and
int
jae
aad
mov
jecxz
push
push
jge
pusha
addr16
adc
dec
inc
lock
adc
adc
mov
jmp
cmp
jne
in
push
sbb
lods
leave
inc
test
je
mov
xor
fnstcw
adc
cwtl
jne
push
in
sarb
mov
pop
int
negl
xor
ret
clc
mov
rolb
cmp
int
das
cmp
cli
sarl
or
sbb
aaa
push
pop
xor
fists
test
dec
sti
pop
inc
mov
pop
xchg
iret
cmp
cmpb
outsl
pop
lret
sahf
push
stc
cmp
push
add
lods
cli
jbe
xor
pop
cmp
jae
imul
xchg
fsin
mov
add
jns
sub
bnd
movsl
in
mov
fcmovnu
stos
sbb
test
fcompl
push
mov
rol
imul
adc
movsl
push
int
aam
shll
mov
out
lods
pop
inc
and
lcall
hlt
pop
outsl
push
jno
mov
arpl
lret
pusha
ds
inc
aas
dec
add
dec
iret
and
mov
xchg
aas
sbb
ja
idiv
andb
out
mov
adc
mov
leave
rcll
mov
imul
mov
and
push
lea
cmp
daa
enter
sub
dec
int3
fcoml
inc
xor
jne
outsb
push
subb
and
jbe
jae
inc
sub
add
out
je
lahf
and
fisttpll
insb
pop
mov
push
adc
inc
out
lods
push
or
pop
std
mov
bound
mov
sbb
mov
cmp
and
lcall
xchg
sahf
call
lock
insb
pop
lea
jle
out
outsb
cmp
adc
outsb
adc
add
cs
cmp
cmpsl
notl
int3
push
mov
xor
fimull
aaa
adc
ja
rorl
cmc
mov
ss
and
test
lahf
jb
mov
inc
dec
fsubrl
enter
pop
fdivs
in
mov
xchg
adc
popa
push
adc
mov
dec
add
repnz
xor
scas
test
mov
mov
or
sub
outsb
shl
sbb
xor
push
xor
inc
add
jmp
pop
lea
push
xor
js
fwait
add
push
adc
add
pop
imul
insb
insb
push
insl
sbb
das
ja
push
mov
ret
xchg
fwait
cltd
push
leave
sbb
mov
jne
ret
mov
daa
mov
add
cmp
out
rcrl
pushf
cmp
dec
mov
ret
and
in
sbb
shl
adc
add
adc
popf
lret
jle
cmc
push
out
push
push
les
mov
sahf
jp
mov
and
inc
push
dec
icebp
stos
xchg
jns
push
and
push
jle
loop
hlt
xchg
leave
sub
std
and
push
pop
push
xchg
or
bound
outsl
ss
inc
aaa
jno
pop
xor
adc
inc
xor
mov
fldl2t
pushf
ret
in
mov
pop
mov
outsl
out
aas
jbe
mov
push
aaa
shll
xchg
aas
call
and
test
test
fists
ret
xchg
mov
jl
add
xchg
lock
out
out
lret
xchg
inc
pop
and
mov
js
movb
imulb
push
sub
popa
mov
imul
push
imulb
mov
stos
rorb
out
nop
je
mov
lret
imul
ror
mov
cmc
scas
ljmp
and
dec
mov
in
or
cmp
js
scas
inc
mov
or
push
push
or
jb
lcall
jl
and
xchg
mov
jmp
xchg
dec
mov
fwait
mov
cmp
and
lods
data16
jb
out
sbb
mov
jns
add
insb
xchg
in
xor
rcrl
cmpsl
hlt
out
aaa
mov
cmp
sahf
mov
xor
dec
add
cmpsl
es
mov
ljmp
js
mov
rol
and
or
pushf
cltd
mov
dec
push
or
inc
adc
out
push
sti
popfw
fwait
sub
sub
or
scas
mov
subl
jae
pop
mov
fucomip
call
pop
call
push
cltd
popa
fdivrs
je
and
fucom
lcall
mov
or
mov
fbld
pop
dec
popf
lret
jg
in
mov
addl
mov
inc
call
cld
int3
cmc
mov
mov
hlt
sub
in
dec
arpl
dec
arpl
xchg
cmp
xor
sub
xchg
or
mov
test
js
jno
pop
fldl
insl
in
fst
pop
cmpsl
fcomi
mov
dec
stos
xchg
ficompl
enter
cmp
and
stos
adc
pop
sub
inc
mov
fwait
dec
addr16
add
inc
stos
xchg
sbb
ds
mov
add
add
or
mov
fnstenv
and
ss
xor
jno
fadd
iret
xchg
inc
adc
push
inc
pop
mov
mov
xor
or
mov
and
ret
pop
inc
jae
cld
push
outsl
mov
xchg
xchg
mov
lahf
loopne
dec
push
cmp
add
std
enter
dec
iret
insb
enter
shrb
jno
lock
or
xor
jle
shrb
stos
cmpsl
fisttps
push
std
iret
mov
and
fadd
gs
jge
pop
lret
push
in
adc
mov
out
repz
dec
inc
jbe
jmp
call
mov
and
cld
sub
sbb
push
and
jbe
dec
inc
pop
je
pop
mov
push
ljmp
faddl
sbb
bound
xchg
mov
jl
mov
rcr
imul
stc
push
sbb
adc
add
mov
inc
int3
cmp
jmp
shl
add
loope
push
nop
into
fildll
arpl
jno
cltd
push
fucomi
lahf
cmpl
push
jecxz
mov
adc
out
mov
pop
insl
sub
mov
fs
jnp
sbb
lods
out
or
pop
popf
sub
push
insl
adc
xchg
sarl
call
stos
mov
jecxz
mov
push
aaa
daa
inc
loopne
mov
les
ret
add
pop
ret
mov
mov
rorl
jp
xchg
push
mov
int3
ss
rcrl
insb
or
cvtdq2ps
push
add
iret
in
mov
xchg
mov
add
imul
adc
repz
or
fnsave
mov
sbb
jns
shlb
xchg
mov
mov
cmp
pop
push
dec
hlt
loope
fistl
or
mov
mov
mov
rclb
mov
cld
dec
xor
popa
hlt
sub
xor
mov
in
jge
push
je
pop
daa
fmul
mov
jnp
std
add
cmpb
jns
jb
fst
insl
dec
sub
ljmp
xchg
mov
sub
fcomip
outsl
cli
movsl
scas
pop
stos
lret
out
cltd
outsb
pusha
push
push
add
sbb
enter
imul
fidivs
xor
push
aad
dec
pop
les
cmc
xchg
mov
fs
add
dec
fdivrl
stos
jae
push
jl
or
out
xor
push
insb
imul
mov
push
push
cmp
gs
fcoml
daa
andl
adc
lcall
xor
nop
loopne
mov
mov
das
sarb
mov
pop
or
jbe
adc
jp
mov
add
xor
inc
mov
sub
add
sub
mov
sub
imul
jl
xchg
dec
test
leave
jne
pop
inc
andl
pop
cmc
in
lods
call
je
inc
incb
std
push
hlt
and
or
push
dec
loop
sub
lods
mov
lret
cmp
xor
stos
leave
and
fdivs
rolb
test
adcl
inc
das
mov
ret
xchg
or
or
mov
mov
sti
bound
jecxz
mov
bound
ror
lret
push
int
fsubrs
sbb
popa
jo
sub
repz
jge
clts
sbb
cld
sub
inc
adc
mov
mov
pop
xchg
jmp
insb
dec
mov
xchg
push
mov
mov
sub
pop
inc
test
ds
js
lods
xchg
jno
imul
mov
xorb
xchg
movsb
xchg
sbb
shrl
push
lret
mov
pop
xchg
jnp
scas
cmpsl
mov
int
fs
ret
fdivs
insb
les
aam
xor
adc
fisubrl
sub
std
and
jge
movsl
popa
or
jp
push
decl
daa
and
push
xchg
out
ds
repnz
enter
xchg
ja
test
dec
jo
push
lds
lahf
sbb
inc
cli
insb
repnz
dec
mov
jns
int
sbb
dec
inc
pop
cli
cmp
jb
inc
leave
aam
jne
adc
mov
and
cmp
jg
repnz
push
rcr
icebp
iret
pop
mov
std
cmp
jne
sub
mov
sub
outsl
mov
add
xchg
add
lock
les
mov
ds
push
cmpsl
ret
mov
popa
in
sbb
jge
rclb
mov
push
scas
mov
xlat
aad
jb
iret
and
cmp
mov
jbe
cltd
das
scas
fadds
mov
pushfw
push
rorb
cmpsb
pop
aaa
rcll
xor
dec
cmp
loop
mov
adc
mov
bound
test
jmp
xchg
and
and
jnp
call
fidivs
lret
test
xor
fdivl
decl
pop
fnstsw
jo
ret
stc
pop
call
lahf
lods
inc
push
push
lcall
push
jnp
cmpsl
sbb
sbb
pusha
xchg
test
pop
lahf
mov
adc
mov
stos
cli
add
lods
jns
cld
test
jge
out
xchg
xor
test
mov
or
sti
insl
cwtl
xchg
add
scas
mov
sbb
ljmp
mov
adc
movsb
mov
xchg
dec
fs
incl
or
adc
scas
outsl
sub
cmp
mov
mov
push
in
fwait
test
cmpsb
in
insl
test
icebp
ljmp
lcall
xchg
test
lahf
es
popa
or
cmp
iret
out
ljmp
add
jne
mov
pushf
popa
and
adcl
fstps
rcll
push
or
push
lret
add
int
outsb
ja
and
imul
ds
pop
inc
pop
dec
cmpsl
inc
cld
mov
sbb
cmpsb
mov
call
push
add
movsl
sahf
xchg
xchg
xor
test
shrl
inc
fxch
pop
hlt
adc
push
or
xchg
dec
mov
push
mov
sbb
mov
pop
pop
cltd
lds
mov
ds
fiaddl
insb
cmp
insb
sbb
mov
inc
enter
data16
jno
sub
cwtl
pop
push
sbb
mov
aam
jl
movq
jg
inc
add
popf
shll
lret
push
das
aaa
fisttps
xchg
into
jne
or
or
add
or
xchg
sbb
cmc
pusha
fcomps
lea
mov
imul
mov
int
add
mov
sub
rcll
ljmp
sub
pushf
fnstenv
imul
cs
jbe
fcmovbe
push
dec
aam
int3
test
ret
ficoml
jl
hlt
xor
inc
xchg
repz
loopne
cwtl
cmp
push
aaa
push
mov
dec
pop
pop
lret
push
lods
mov
movsb
push
inc
testb
adc
jnp
popf
pop
lods
fldt
jg
xchg
pop
movsb
sub
lds
cmpsb
data16
test
dec
out
mov
pop
add
push
and
sbb
jb
pop
rclb
jnp
xor
shrb
mov
aam
clc
bsr
insl
mov
add
std
aam
fdiv
mov
mov
cmpsb
popf
inc
daa
lea
gs
push
fxch
jae
popf
cmc
idivb
pop
or
dec
or
or
nop
out
and
shll
lahf
scas
or
mov
mov
hlt
dec
inc
lods
and
or
pop
aas
sbb
mov
cs
hlt
aad
and
outsl
inc
adc
jnp
stos
xor
stos
stos
cmc
vpaddw
repnz
pop
mov
and
xor
inc
in
sub
or
sbb
mov
idivl
mov
mov
mov
cmp
out
sbb
mov
sub
or
xchg
lahf
addl
jnp
cmp
loop
push
cmc
nop
mov
xor
nop
xor
mov
inc
int3
mov
add
cli
jg
lret
outsl
fucomi
inc
inc
pop
fistl
pop
rcrb
xchg
pop
jno
cmpsb
sub
fs
jge
adc
leave
je
xchg
add
jl
loop
sbb
mov
cmp
out
arpl
jb
call
fs
int3
int
xchg
rorl
hlt
add
push
pop
push
push
int3
inc
aam
sarb
inc
jle
std
xchg
arpl
pop
stc
idivl
scas
std
push
in
jno
cmpsb
xchg
pop
psrlw
xor
inc
or
in
push
lock
fnstenv
jl
or
aam
xchg
add
popa
in
mov
sub
or
pop
rolb
out
jecxz
adc
sub
add
add
cmp
leave
mov
sub
push
dec
sti
dec
cmp
pop
push
jmp
and
cmc
or
xchg
jbe
das
rcl
add
loopne
dec
pop
xor
cld
and
mov
loope
xor
pextrw
pop
xor
lret
scas
inc
std
fstpt
mov
in
idivb
cmp
and
repz
sub
enter
mov
dec
out
faddl
scas
movsb
icebp
add
call
inc
mov
sbb
cld
jmp
inc
call
sti
and
repnz
or
fidivs
push
add
jno
clc
push
push
std
push
sahf
xchg
popf
fsts
cwtl
push
andb
cmp
jg
xchg
int
cmp
dec
aam
into
lret
mov
insb
je
pop
jge
adc
cmc
sub
pop
xchg
pop
and
test
test
sahf
out
add
dec
mov
stc
jnp
mov
int
jae
dec
sbb
out
je
cmp
xchg
bound
aaa
aad
pop
jp
aaa
jl
out
push
or
cmpsb
stc
in
inc
pop
sub
mov
adc
cld
push
adc
jl
xchg
rcr
lock
ljmp
ror
xchg
inc
fcoms
movsb
sbb
inc
push
sub
pop
loope
sbb
lret
aam
mov
mov
dec
orl
jmp
push
mov
cld
xchg
sti
push
xchg
dec
ror
push
fsubrl
sbb
jecxz
and
jg
in
jae
xchg
mov
cmp
sbb
sub
repnz
dec
sbb
test
cltd
push
cmp
pop
mov
and
pop
sahf
sahf
mov
cs
fidivrs
ficoml
xchg
jecxz
repnz
cmpl
pop
or
xchg
or
outsb
loopne
push
outsb
mov
test
insb
xchg
jb
subb
jb
mov
cmpsb
sbb
repnz
jbe
inc
xor
xchg
pop
addb
pop
in
mov
ds
or
shrb
in
out
pushf
mov
lods
stos
mov
xor
adc
popa
loopne
cwtl
mov
ljmp
xor
xor
lcall
and
xor
mov
movsl
mov
cmp
push
imul
add
sbb
pop
dec
movb
fwait
cwtl
test
ficoml
call
mov
xor
pop
xchg
es
mov
add
mov
test
out
mov
sahf
cli
dec
out
xor
shll
push
adc
jp
imul
daa
std
pushf
inc
and
movd
pop
in
add
mov
mov
mov
push
sub
sub
pop
lds
aas
push
mov
in
icebp
push
mov
push
push
mov
mov
jns
outsb
mov
stc
cmp
or
mov
dec
daa
mov
dec
cmp
lods
dec
cli
test
add
outsl
xor
pop
xchg
push
fcompl
xchg
push
jmp
xchg
lods
mov
and
adc
out
ds
aas
or
scas
jne
out
fnstcw
fsubl
add
sub
arpl
add
popf
adcb
je
addb
pop
aad
int
dec
push
xor
loopne
stos
push
fs
ret
int
into
das
nop
in
loope
jp
jmp
aaa
fsubp
int3
xchg
sub
cmp
inc
icebp
mov
jg
insb
cmp
jns
popl
dec
push
mov
xchg
daa
xchg
outsl
cmp
icebp
insb
outsb
jecxz
cmp
in
shrl
mov
xchg
pop
fwait
push
imul
pop
hlt
lea
daa
inc
scas
insb
icebp
xchg
sub
pop
aas
inc
gs
mov
arpl
cwtl
mov
stos
cmp
lds
test
cmp
fs
add
sub
ret
add
movsl
xchg
fisubs
push
push
cltd
lock
cmp
andb
sbb
test
aaa
pop
add
js
mov
lret
xrelease
aaa
or
int
sti
test
jns
test
testb
xchg
jns
xchg
jge
lds
fmulp
cmp
adc
mov
insb
ret
jae
jae
test
push
mov
imul
pop
push
mov
gs
pop
sti
test
cmc
push
mov
out
push
movsl
cld
mov
mov
jmp
xor
pop
lock
std
aaa
xchg
push
dec
jle
mov
or
add
je
imul
add
or
add
popf
mov
inc
rorb
lcall
loope
pop
cmpsl
pop
test
mov
es
xor
dec
rorl
xchg
sub
push
sub
sbb
or
jle
aam
into
and
xorb
das
mov
cs
jg
jns
jns
inc
jmp
jge
stos
insb
sub
push
add
test
lds
xchg
arpl
xchg
lock
mov
in
mov
cmp
icebp
std
pop
mov
lods
in
lock
mull
fldl
mov
sub
push
push
test
dec
lret
cltd
outsb
faddl
lcall
sbb
jo
lods
jnp
scas
adc
xchg
cmp
sub
les
je
leave
mov
ret
push
ljmp
xor
popf
sub
sub
and
int
lock
mov
fdivl
aaa
fistpll
adc
and
jno
insl
mov
nop
sub
pushf
and
jg
mov
mov
mov
insb
inc
sbb
fstpt
fsubrl
mov
inc
clc
xor
push
orl
lds
iret
jae
call
sub
ljmp
icebp
add
mov
mov
sbb
jmp
mov
mov
popf
test
test
jecxz
pop
mov
cli
in
jnp
mov
inc
fcomp
push
and
dec
scas
mov
adc
jmp
and
push
icebp
jae
in
sub
push
xchg
mov
mov
mov
add
push
mov
sbbl
or
cld
jle
or
fiadds
mov
insb
fisubl
pop
je
mov
mov
sub
ja
movsl
dec
pop
in
adc
loop
cmp
lret
mov
jno
lret
mov
sub
pop
std
fnstenv
pop
or
fnstsw
add
mov
xor
adc
push
pop
mov
push
sbb
cmpsb
lock
push
jge
adcl
les
imulb
jp
inc
xchg
aas
xchg
andl
xor
jne
push
movlps
or
dec
scas
or
jae
push
movsl
dec
daa
sbb
inc
xor
lock
adc
les
mov
xor
dec
adc
fmul
or
push
and
cld
mov
or
ficoml
scas
aad
or
mov
loope
sti
inc
mov
dec
rclb
mov
scas
stos
pop
mov
sbb
mov
dec
aad
ds
int3
or
rorl
loop
in
sbb
faddl
rorb
cltd
inc
xchg
les
jmp
sub
mov
jmp
add
dec
cmp
sub
insl
cmp
test
sub
aaa
jb
cmp
inc
xchg
jo
mull
cwtl
push
jbe
add
loop
jae
leave
dec
pop
push
dec
push
fsubrs
and
jmp
cltd
outsb
inc
jg
push
add
addr16
insl
mov
pcmpgtd
scas
js
xor
cmp
addr16
cmpsb
push
cld
adc
sub
mov
js
cmp
dec
fwait
pop
and
lret
fidivl
aaa
push
rclb
cmp
sahf
sub
sbb
faddp
mov
subl
fists
rol
add
push
push
cmp
or
imul
mov
repnz
jb
aad
in
out
xor
dec
pop
inc
cmp
pushf
shrb
lods
adc
loop
pop
mov
mov
rcr
cltd
cs
dec
pop
dec
cwtl
jno
jl
dec
scas
dec
mov
xchg
iret
push
bound
aam
sub
movb
data16
mov
aas
sbb
dec
jecxz
jp
jo
xor
push
mov
cmp
inc
xchg
or
daa
call
push
lock
fsubrl
js
jne
push
fwait
enter
xor
sub
adc
repnz
int3
lods
int3
cs
roll
mov
dec
fldcw
pop
adc
or
xlat
xor
into
and
loopne
in
lods
adc
adc
pop
sub
mov
movsb
jge
pop
mov
cmpsb
mov
adc
jne
pop
xchg
jns
repnz
inc
rcrb
sub
pop
in
out
std
enter
sbb
dec
in
mov
ret
out
add
xchg
lcall
inc
dec
lock
cli
lock
mov
hlt
cmpsb
lods
xor
fisubrs
repz
test
outsb
or
cmpsl
cmpsb
scas
and
pushf
gs
loope
xchg
mov
outsl
mov
test
arpl
mov
outsl
bswap
jg
cmp
addb
rorb
sub
out
das
cld
cwtl
pop
mov
mov
pop
pusha
stos
pop
bound
cmc
dec
mov
pop
aas
aad
inc
mov
mov
xlat
xor
pop
icebp
aam
fdivl
dec
test
sbb
cltd
bound
shrl
xchg
pop
notb
sbb
fnsave
lock
aad
cmc
sbb
sbb
fnstcw
shr
addl
fmuls
mov
mov
or
mov
sbb
addl
lcall
xchg
sub
mov
sti
xor
sbb
test
push
aam
or
xchg
inc
int3
cs
std
lods
cmp
inc
mov
fisubl
les
jge
cmpsl
mov
ljmp
xor
sbb
dec
outsb
cmp
adc
subl
push
mov
lahf
xor
mov
sub
adc
fisubl
sub
fs
inc
stc
psubsb
ficomps
add
subb
inc
outsb
es
and
jg
push
cmpsl
lock
sbb
daa
mov
setno
xchg
popa
jne
mov
pop
insl
add
lea
shrb
repnz
inc
shll
push
jo
testl
sbb
outsl
xor
xchg
rorb
mov
lea
and
aaa
fistl
and
stos
hlt
mov
jo
lds
push
scas
sbb
out
and
lahf
adc
xor
xor
mov
fcomps
lret
sub
stos
push
int
icebp
fcompl
outsl
sub
pusha
mov
mov
mov
scas
adc
sahf
fldt
dec
dec
push
xor
sub
add
push
pop
xor
movsb
mov
sub
daa
fwait
aas
pop
insl
adc
cmp
or
int
gs
xor
adcl
xor
mov
rol
sub
mov
insb
pop
std
cwtl
mov
xchg
movsb
inc
pop
stos
xchg
push
xchg
cwtl
fwait
subl
popa
mov
push
and
mov
lret
push
sub
push
cmp
dec
push
xor
adc
dec
push
inc
mov
jb
imul
mov
movl
dec
js
out
jno
push
mov
ficoms
aam
stos
into
out
sti
mov
cwtl
xchg
cmp
sbb
mov
movsb
push
xchg
jno
xor
mov
mov
test
lret
dec
loope
ficoml
jae
pop
orb
hlt
in
sub
and
pop
arpl
test
xor
pop
dec
cs
gs
push
mov
pushf
inc
xchg
fcoml
hlt
inc
add
add
inc
imul
adc
inc
insb
cmp
dec
pop
cltd
in
jge
pop
mov
mov
imul
ja
lock
hlt
test
outsb
mov
pop
adc
test
mov
pop
sbb
divb
cmpsl
cmp
lcall
dec
sub
scas
xor
iret
sub
int
outsl
stc
pop
stos
pusha
pop
das
push
jl
icebp
fdivl
arpl
xchg
idivb
movsl
adc
pop
pop
jnp
jo
or
cs
adc
xlat
ljmp
pop
xchg
std
mov
fcoml
jg
repnz
adc
pop
jo
mov
pop
dec
insl
and
out
and
cwtl
add
daa
sub
sbb
xchg
dec
jnp
ret
add
flds
jecxz
add
in
iret
nop
or
sbb
push
mov
xlat
inc
lret
nop
imul
sub
mov
int
xchg
imul
adc
add
arpl
add
mov
push
xchg
aad
clc
loope
outsb
cld
in
inc
data16
pushf
sub
cmp
je
int
xchg
sub
fwait
cmpsl
mov
xchg
bound
mov
inc
int
mov
mov
mov
push
jg
fyl2x
mov
js
jne
ret
sub
mov
push
loop
ljmp
jecxz
xchg
xchg
pop
mov
adc
jb
pop
push
in
shlb
cltd
dec
adc
or
lret
pop
sub
leave
jns
xchg
mov
mov
test
dec
mov
mov
add
adc
fisttps
loope
int3
mov
aas
or
arpl
sti
pop
fsubl
fisttpll
cmp
jecxz
mov
or
loop
adc
movsb
aaa
imul
sbb
pop
stos
aas
xor
leave
stos
popa
shll
ret
in
popf
and
pop
xor
push
dec
andl
das
jg
jns
jns
insl
xlat
pop
push
jle
outsb
jns
mov
addr16
lock
fwait
xchg
cmp
rcrl
lret
mov
push
push
mov
rcrb
int3
inc
rorl
jo
jb
sub
xor
inc
jb,pt
or
mov
dec
xchg
sub
mov
mov
pusha
sarb
dec
jbe
pushl
pushf
xor
sbbb
cli
movsb
insb
pop
popf
adc
pop
or
test
sub
and
pop
jp
test
jne
test
das
fdivrs
fmuls
dec
add
ljmp
jnp
je
notl
sub
mov
jns
jne
push
mov
jae
shrl
or
jg
fs
pop
pusha
mov
out
lock
in
out
nop
jl
hlt
pop
out
fcoms
dec
repz
das
lods
in
push
sti
mov
pop
out
pop
not
cmp
jo
aad
xchg
int
sub
data16
add
subl
xchg
mov
rorl
mov
add
add
gs
push
filds
aas
iret
pop
adc
movsl
push
xchg
mov
fmulp
cmp
les
pop
test
dec
test
stos
add
repz
and
sub
xlat
xchg
jno
xor
fwait
in
and
pop
shll
les
mov
jmp
insb
dec
aad
pop
xor
test
js
xor
shlb
mov
pushf
shrl
das
cltd
std
data16
cmp
lret
dec
rcl
lahf
jbe
dec
mov
scas
adc
repz
loope
jbe
adc
mov
mov
add
dec
jmp
and
or
hlt
push
je
lret
inc
pop
adc
pop
add
shlb
adc
sub
sub
je
mov
or
xor
xor
cs
cs
fiadds
xchg
pop
push
test
sub
es
out
jns
js
clc
repnz
mov
fimuls
mov
cmpsb
jge
std
mov
in
inc
jne
fsts
shlb
es
div
lea
je
add
jae
loope
or
cmp
cmpl
xor
lods
and
add
dec
in
xchg
loope
mov
add
cmp
lahf
ja,pt
fisubrl
out
pop
arpl
int
pushf
inc
shll
testl
test
xchg
dec
xchg
adc
sahf
cld
daa
in
dec
jbe
and
cmp
sti
jae
mov
pop
pop
cmpsb
push
lock
sbb
mov
loope
fld
adc
fdivl
iret
das
add
add
test
and
rolb
cld
bound
notb
cld
lret
xchg
ret
icebp
jbe
adc
outsb
push
lret
adc
xchg
cld
add
bound
and
popa
cmpsb
cmp
xchg
or
push
or
xchg
out
dec
or
inc
negb
push
cltd
fnsave
movups
push
adc
loope
adc
ret
rolb
adc
clc
push
jmp
lcall
stos
call
and
dec
rcrl
pop
jp
adc
dec
xchg
xchg
mov
mov
cmc
mov
sbb
push
in
popf
cmp
inc
and
jnp
fistpl
jecxz
fiaddl
sbb
sbb
int3
xlat
sar
cwtl
sbb
adc
lock
push
push
jnp
in
lock
add
ljmp
jo
push
shll
cld
lds
test
cmpsb
mov
lods
cmp
add
inc
sub
and
sbb
adc
cltd
addl
mov
push
jmp
repnz
sub
inc
cmpsl
ss
cmp
out
sti
inc
inc
push
mov
inc
sub
lcall
push
mov
and
sub
pop
repz
sti
mull
dec
bound
mov
push
les
cmp
out
scas
jmp
mov
sbb
adc
xchg
jno
xchg
cmpsb
data16
xlat
lds
sbb
mov
dec
data16
xchg
cs
lods
jns
lea
out
js
rcl
xor
stos
out
push
dec
clc
sub
mov
mov
pop
mov
mov
mov
or
je
imull
mov
cmp
mov
xor
roll
jnp
insl
int
fsts
in
shll
and
mov
inc
lea
mov
push
lds
dec
pusha
sahf
mov
ljmp
lds
adc
ja
std
mov
in
cmp
test
pop
sbb
or
lea
mul
or
jns
xor
adc
sub
jp
outsb
inc
sub
cmpsl
mov
mov
ret
push
lret
aad
mov
xchg
jle
sbb
inc
add
inc
xchg
pop
fiaddl
cli
idivl
xchg
sub
sti
mov
push
fidivl
cmpsb
sub
xchg
cmpsb
into
test
repz
inc
mov
jl
das
aam
xor
mov
lret
pop
fmulp
jge
add
push
sub
and
mov
lea
outsl
sbbl
xchg
out
inc
xor
adc
lods
jns
and
je
jge
lcall
cwtl
adc
jg
test
xor
sub
popa
pop
arpl
jmp
jge
xchg
negl
xchg
mov
add
adc
adc
or
dec
or
lds
out
pushl
pushf
addr16
ret
lods
or
xchg
outsl
shl
lea
cwtl
cmp
ja
mov
orl
cltd
popf
std
pshufw
testb
jb
shrl
divl
mov
loop
lods
in
clc
add
dec
imul
jbe
jns
fwait
sbb
pushaw
or
int3
sub
adc
std
ja
nop
lock
pop
sbb
jnp
xor
mov
popa
xchg
jb
jecxz
daa
and
adc
test
sub
int
rcl
dec
ret
loopne
jecxz
and
pop
cmp
and
mov
xchg
jp
cs
push
aas
loopne
sbb
les
bound
pop
add
cmpsb
dec
pop
test
mov
repz
sahf
insl
addr16
push
jnp
pop
in
pop
fstl
imul
or
push
cmp
push
sbb
das
fnstenv
cmpsb
dec
inc
pop
xor
inc
punpckhbw
adcb
adc
shrl
xchg
test
pop
stos
imul
jg
aas
rorb
sbb
fdiv
adc
rorb
push
adc
lds
and
call
sbb
outsb
into
js
ja
mov
addr16
stos
push
adc
push
xorb
push
push
cmovge
sbb
mov
rorb
addl
aam
jae
xchg
ficoml
pushf
cmpsl
sbb
xorb
fdivs
les
rorb
lea
fcmovne
cmp
push
aas
int
cmpsb
ret
adc
xchg
mov
fwait
inc
sub
pushf
dec
das
or
popa
icebp
out
int
jno
data16
mov
sbb
je
push
push
cmp
repz
add
std
adc
inc
js
inc
jnp
add
mov
icebp
or
and
mov
movl
mov
jg
movzbl
cmp
nop
test
push
iret
out
mov
in
fdiv
push
mov
sub
sbb
arpl
pop
aaa
adc
jbe
test
fmul
mov
jl
dec
aad
jnp
adcl
shlb
inc
adc
mov
mov
fstpl
add
inc
push
repz
sti
hlt
add
or
mov
lret
movsl
scas
adc
and
mov
out
sti
xchg
dec
inc
popa
ds
pop
push
cmpsb
stc
and
push
insl
ljmp
inc
jmp
cmpsl
jle
xor
sub
sbb
inc
fstpt
xchg
stos
pop
call
lahf
xchg
inc
pop
aad
dec
mov
push
jmp
or
lods
fwait
lahf
mov
sub
js
dec
mov
loopne
push
adc
enter
mov
inc
es
fdiv
mov
in
pushf
cmpsl
mov
sti
and
push
cmpsb
fistl
aaa
test
adc
je
jb
ss
sub
clc
and
mov
sar
dec
inc
sub
cmp
mov
mov
clc
stos
pop
mov
scas
mov
scas
mov
mov
cmp
dec
lods
rorb
shrb
addr16
movsl
hlt
lcall
jnp
mov
xchg
aas
rorl
lock
loop
pop
mov
xorb
dec
popa
pop
rcrl
mov
or
sub
insl
xchg
js
sti
aas
jecxz
cmp
fdivp
cli
outsb
and
test
subb
mov
fwait
mov
aam
ret
std
mov
or
mov
stos
dec
adc
mov
cwtl
push
mov
fwait
arpl
dec
popa
and
mov
lods
push
fiaddl
rolb
lods
pop
popa
lret
pop
dec
dec
adc
test
insl
notl
test
cmp
icebp
mov
decb
cs
mov
loope
inc
lret
incb
sbb
mov
add
punpcklbw
dec
add
xchg
inc
js
sbb
lods
imul
lods
popf
push
fimuls
fistps
mov
fsubrs
shrb
xchg
shl
cmp
popf
movsl
push
inc
cmp
aam
xchg
insb
imul
enter
lcall
daa
sub
sbb
dec
hlt
add
sub
cmp
jle
sbb
int3
mov
sarl
jge
xor
cmp
push
adcb
lods
xchg
hlt
inc
mov
rolb
jno
mov
bound
sub
mov
fldl2e
mov
jp
je
dec
cmp
cmpsb
sbb
mov
push
ljmp
loope
xchg
test
mov
nop
into
dec
sub
or
pusha
sbb
pop
clc
sbb
ljmp
and
loop
pop
jns
cli
icebp
cli
jo
int3
test
push
xchg
or
cs
ret
arpl
pop
fbld
mov
mov
adc
mov
mov
sti
or
mov
xchg
icebp
jbe
adc
fimuls
iret
mov
sub
cs
mov
dec
and
xchg
gs
jecxz
xor
xchg
enter
testl
adcl
lahf
lock
xchg
test
mov
mov
lock
movsl
jbe
insl
mov
jb
shl
ficoml
and
jecxz
std
fstpl
test
adc
jecxz
push
std
rcll
test
and
pushf
lret
pushf
jns
ret
movhps
add
adc
mov
cmpsb
sub
adc
flds
loopne,pn
jbe
insb
pop
loopne
sbb
in
cmp
in
es
xchg
inc
mov
add
push
enter
pop
sahf
mov
dec
aad
push
mov
sbb
lods
or
xchg
xor
es
inc
test
ljmp
dec
sub
cmp
imul
stos
aaa
sub
mov
outsb
sbb
and
lahf
rcl
and
pusha
mov
mov
fdivl
and
mov
ljmp
out
lods
cmp
jle
lds
cmp
in
dec
jns
jecxz
test
xlat
cwtl
aaa
ja
into
mov
mov
mov
add
xchg
nop
or
addr16
mov
cmp
or
xor
fsts
sbb
popa
mov
jle
push
test
out
ret
xchg
fisubrl
cwtl
addr16
add
push
bound
orb
repz
in
popf
sub
mov
jno
andb
push
pop
sub
inc
adc
inc
in
xor
push
rcrl
inc
mov
jnp
adc
xor
sbb
lahf
push
and
arpl
lret
mov
test
mov
mov
sbb
repz
add
repnz
push
mov
pop
mov
cmc
leave
mov
pop
jge
loope
cmp
sub
mov
pop
pop
inc
mov
push
insl
xor
push
in
vmovlpd
jae
es
or
movsb
pop
inc
pop
jmp
adc
std
sbb
shrl
add
mov
push
test
push
inc
mov
jae
mov
nop
add
mov
pop
mov
mov
inc
lods
imul
push
inc
jnp
cmp
lds
push
mov
pop
int
int
ret
int
mov
fucomp
ret
cmc
imul
pop
es
cltd
xchg
inc
scas
cwtl
mov
sbb
pop
mov
sbb
sti
decb
adc
lahf
inc
cmp
lahf
les
test
add
sahf
inc
addr16
jo
cli
or
xchg
mov
leave
push
pop
call
mov
lods
push
mov
mov
iret
pop
shll
lock
jno
xchg
add
add
lcall
jecxz
ljmp
xchg
mov
ds
mov
gs
pop
inc
sbb
push
fidivs
int3
ret
test
loopne
xor
rolb
test
rcrb
cmc
dec
add
sub
in
in
stc
mov
or
clc
out
test
incb
stos
mov
sub
sub
lods
movsl
arpl
dec
and
mov
mov
rol
mov
pop
aas
pop
clc
pop
stc
and
ret
lret
sahf
enter
loope
aam
cwtl
outsb
lcall
out
jge
int3
xchg
add
push
inc
icebp
das
dec
fcmovb
jno
cwtl
dec
test
movsl
add
push
xlat
pop
rcl
das
push
or
inc
movsb
psrld
xchg
or
das
das
fiaddl
arpl
loop
xchg
jb
xchg
jo
xchg
mov
inc
in
mov
sub
push
mov
outsb
adc
mov
jno
mov
clc
mov
fucomi
fst
shrl
adc
sbb
mov
scas
scas
push
jecxz
ss
push
test
jb
pushl
sub
in
mov
int3
or
ret
jbe
in
gs
popa
or
jne
mov
outsl
int
push
inc
lret
pop
movsl
jmp
scas
mov
cmp
and
xchg
cltd
repz
es
js
xor
dec
xorb
pusha
pop
test
pop
and
dec
inc
add
dec
xor
push
loop
in
sub
std
inc
mov
stos
sahf
inc
sub
xchg
jnp
mov
dec
pushf
pop
in
push
cld
push
inc
xor
and
lahf
or
data16
imul
cmp
sbb
shll
movsb
mov
stc
sbb
mov
std
ror
xchg
ja
dec
xchg
mov
sbbb
mov
jp
push
ret
fadd
mov
push
adc
add
inc
arpl
sbb
xchg
add
and
sub
lods
pop
lea
das
or
fstl
and
out
lds
movsb
push
or
xchg
js
mov
out
lods
sbb
leave
pop
gs
aas
mov
loop
mov
xchg
add
arpl
push
ljmp
iret
pop
fidivs
add
mov
sahf
scas
dec
push
fs
fistpll
dec
cwtl
push
lock
cmp
mov
mov
es
or
in
rcll
gs
add
ds
and
into
or
dec
aaa
push
pop
out
insl
mov
scas
fbstp
sub
ss
fwait
movsl
lock
mov
push
add
adc
sub
xchg
int
inc
sub
adc
ss
stos
jmp
jecxz
int
fimull
sub
sbb
cmpsl
addl
imul
jmp
sbb
mov
mov
faddp
rolb
and
fistpll
sub
mov
or
mov
into
jl
push
mov
lcall
dec
loopne
adc
lret
pop
scas
divl
divb
std
mov
movb
repnz
mov
mov
das
cmp
stc
dec
sahf
hlt
cmp
mov
outsl
cmp
data16
cmp
int3
inc
test
out
mov
shufps
cld
adc
xor
pusha
adc
push
add
sbb
and
dec
fwait
and
fdivl
mov
out
movsl
imul
mov
jae
xor
push
mov
aas
imul
mov
bound
out
mov
cld
xchg
inc
dec
mov
hlt
adc
lock
mov
mov
xor
popf
push
imul
sub
outsb
xchg
nop
out
shl
fnstsw
pop
out
js
int3
sti
jnp
jecxz
push
push
in
jmp
leave
sbb
aad
xchg
lods
mov
pushf
push
and
movsl
outsl
mov
jns
xchg
pop
scas
xchg
rclb
jle
or
push
sub
xor
push
fs
or
adc
pop
xlat
sahf
xor
pop
mov
lods
xchg
mov
dec
adc
popa
jns
adc
sbb
jne
and
sub
cmp
jne
jmp
mov
jecxz
mov
push
push
int
sbb
lret
icebp
cs
lea
int
stos
loop
xchg
push
lahf
out
popa
sbb
mov
adc
xor
add
test
sbb
xchg
add
mov
xor
inc
jmp
arpl
int
adc
fiadds
mov
sbb
cmpsb
cli
rcll
dec
and
es
adcl
scas
inc
movsb
push
icebp
int
add
adc
cmp
setge
into
daa
pop
movsb
das
mov
not
mov
in
jbe
lea
subb
std
or
in
fsubl
mov
xor
mov
mov
mov
fisttps
jns
mov
fwait
in
sbb
clc
mov
movsb
stos
fidivs
pop
fwait
cmp
outsl
pop
out
inc
pop
xchg
fmul
int
mov
and
inc
add
ss
sbb
add
sahf
push
and
popf
lret
rcrl
jecxz
popf
inc
cltd
decl
icebp
repz
pop
ljmp
lods
loopne
movsb
add
push
cmp
jns
inc
cmp
bound
add
rclb
in
jle
outsb
in
jno
pop
and
push
jmp
pop
ficoml
pop
in
inc
xor
aam
mov
pushl
inc
adc
cmp
popf
pusha
pop
cld
and
jle
cmc
xchg
add
xchg
and
xchg
pop
push
inc
pop
daa
dec
inc
sub
inc
faddl
inc
and
out
adc
sarb
jle
not
inc
push
outsb
cld
pushf
loope
sub
mov
fbld
push
or
xor
fsubrp
cs
mov
jg
cmp
cld
push
int3
ja
or
sub
inc
pop
mov
mov
movb
js
pop
test
sti
in
or
scas
fsubrl
sbb
xlat
gs
into
mov
push
pop
push
fsubs
pop
cmp
mov
je
movsl
mov
dec
add
loope
jns
pop
inc
adc
loopne
jp
xor
xchg
sub
ret
or
js
rcrb
lret
shrl
adc
push
out
mov
lds
or
or
mov
movsl
aaa
and
dec
notb
jge
in
std
mov
jae
jnp
test
cld
aas
cli
insb
xchg
inc
shll
xor
mov
sub
push
jp
xor
or
dec
jmp
out
jecxz
xchg
pop
sub
ds
sbb
mov
adc
pop
xchg
ss
test
xor
xchg
ret
pop
pusha
push
pusha
dec
in
enter
xchg
sahf
leave
je
adc
cmp
push
sti
sbb
loop
leave
adc
das
shl
adc
xchg
imul
push
not
push
fisttpll
and
add
add
cmp
ds
sti
loop
adc
fldt
mov
xacquire
xor
xchg
shlb
xor
les
push
repz
add
sahf
in
cmp
lds
fdivrs
mov
std
std
xor
lds
ret
mov
lret
sbb
les
mov
mov
test
lcall
je
stc
adc
push
gs
and
pop
sbb
loope
sub
out
cmpsl
pop
jmp
cmp
cld
stos
stc
scas
sbb
in
dec
ret
xchg
pushf
adcb
add
daa
add
rcl
mov
stc
mov
fdivs
in
nop
dec
and
idivl
data16
inc
dec
sub
dec
mov
arpl
xchg
cmpsl
cmp
cmp
jne
addr16
push
in
push
mov
fsubrp
out
call
adc
out
push
jmp
sti
sti
sub
add
ljmp
dec
xchg
bound
inc
and
sub
adc
ljmp
or
daa
fnstcw
fwait
popf
rcrl
pop
dec
xchg
sub
lcall
int
cmpsb
daa
adc
xor
inc
xchg
call
sub
aad
or
lar
sub
dec
push
lcall
daa
cmp
out
clc
adc
sub
fimull
pushf
arpl
add
inc
rolb
fucomi
lahf
dec
in
add
push
into
add
pop
dec
fists
dec
sahf
rclb
mov
lret
jno
insb
xchg
call
cmp
jno
mov
in
fs
fmul
std
cmp
cmpsl
nop
mov
pop
leave
and
push
and
fisttps
jnp
daa
ja
sarb
les
add
int3
sub
je
aas
pop
xor
or
in
jge
icebp
pop
scas
pop
cmp
push
das
out
cli
std
ret
jns
fdivr
mov
push
jp
jg
cmp
add
loope
dec
cmpsb
sub
sti
cwtl
test
pop
mov
pop
int3
out
iret
insb
sub
aad
mov
shlb
jne
not
cs
sub
lcall
into
fs
test
mov
repnz
push
stos
loope
mov
mov
sahf
xor
or
or
insb
push
cmp
rclb
and
js
aam
lret
push
divps
or
dec
gs
sahf
stc
daa
lret
pushf
sahf
or
mov
mov
xchg
add
shrb
push
xchg
mov
adc
aas
inc
movb
stos
dec
fcomps
fcoms
dec
loopne
fucomip
mov
mov
and
loopne
xor
lock
and
andl
test
cmp
dec
fwait
sub
and
jp
xor
jns
inc
out
imul
or
out
in
xchg
mov
mov
mov
jp
std
xorl
mov
push
push
xchg
mulb
mov
clc
jnp
mov
shrl
xchg
xchg
push
aaa
notb
lea
sub
xor
stos
xchg
pop
fistl
mov
in
sub
out
push
cmp
movsb
aam
xor
sbb
outsb
sub
mov
fnstsw
mov
mov
pop
hlt
or
out
mov
lock
mov
mov
fs
mov
mov
cmp
mov
rolb
pusha
or
push
popa
rolb
cmpsb
mov
iret
push
and
mov
mov
mov
lds
sub
mov
mov
mov
jecxz
or
aad
jg
cmpsb
and
adc
mov
push
out
adc
imul
jmp
and
les
pushf
or
test
pusha
jae
cmp
inc
dec
repz
nop
call
xor
repnz
repz
cmc
inc
inc
shrb
xor
ret
mov
mov
push
push
in
push
lret
cmp
mov
fadd
mov
lock
dec
lahf
push
fnstenv
push
shl
aad
sub
je
mov
cmp
inc
xchg
clc
test
mov
movsb
sahf
inc
push
push
ret
fiaddl
nop
inc
or
ss
leave
mov
aam
push
add
insl
mov
inc
fwait
cld
stos
loop
dec
mov
mov
jb
pop
xor
mov
pop
inc
sbb
in
test
cmp
add
push
enter
push
jo
cmpsl
push
js
lock
dec
adc
sbb
jmp
mov
jmp
shrl
aas
or
rcrl
xchg
and
es
jmp
lods
dec
mov
enter
arpl
sub
push
test
lret
mov
ss
ds
mov
ffree
or
shl
pusha
dec
mov
jne
xlat
mov
pop
and
ret
and
sbb
inc
bound
jge
fiadds
mov
insb
fmul
mov
test
sbb
jmp
jbe
push
insb
sub
sub
add
repz
push
popa
inc
dec
stc
xchg
sbb
leave
sub
xchg
inc
mov
insl
jo
data16
les
in
adc
dec
movsl
fwait
jo
fstpt
shll
out
sbb
cmpsb
jl
in
lahf
pop
cmp
rol
adc
popf
xchg
inc
fs
out
enter
xchg
lgdtl
inc
imul
inc
lcall
cli
pop
cmpsl
gs
fimuls
mov
nop
mov
hlt
push
stc
mov
dec
cwtl
sahf
dec
mov
jno
add
scas
mov
arpl
out
pop
call
cmpsb
cmp
pushf
jle
cmp
jb
pop
adcb
mov
cmpsl
jle
jnp
push
xchg
jb
sub
mov
pop
lret
gs
xchg
sub
and
push
sub
pop
out
mov
call
jbe
pushf
push
sub
sbb
lods
out
mov
xor
jnp
mov
into
popf
mov
and
dec
add
or
cmp
mov
mov
xchg
and
aam
sbb
arpl
jmp
add
push
push
jge
sub
leave
jns
jnp
fsubrs
lods
mov
es
and
pop
pop
mov
mov
sub
mov
pop
sub
dec
or
mov
adc
sbbb
or
shlb
mov
xor
in
dec
test
hlt
or
mov
inc
imul
fucomip
mov
dec
incl
mov
outsl
push
test
adc
xchg
sub
cmp
pop
push
addb
or
test
lock
fdiv
test
test
dec
xor
mov
cltd
das
stos
out
mov
sbb
test
xchg
insl
aad
cmp
dec
add
mov
aaa
daa
push
shll
mov
fdivrl
push
movsl
mov
loope
iret
in
in
gs
fs
mov
ljmp
xor
jo
mov
push
out
pusha
ja
jmp
cltd
add
adc
clc
push
nop
sub
jg
dec
jecxz
outsb
sbb
ss
inc
scas
scas
push
mov
sbb
shll
in
pop
or
cwtl
and
mov
mov
mov
cmp
lods
push
push
dec
imull
cwtl
pusha
test
jl
pop
adc
mov
add
inc
mov
push
dec
lret
or
push
inc
push
pusha
cld
mov
jecxz
jno
std
scas
cmpsl
xor
adc
sbb
mov
scas
insb
into
iret
pop
iret
das
lret
inc
sti
arpl
push
jo
xor
xor
loopne
add
rol
repnz
frndint
jmp
out
jns
mov
aas
mov
mov
clc
push
dec
mov
and
mov
incb
fmuls
sahf
push
movsl
inc
mov
xchg
push
xorl
xchg
in
xchg
jmp
paddq
mov
ret
orb
cmp
jns
clc
clc
faddl
out
dec
or
cmp
sbb
push
push
mov
fidivrs
dec
lret
pushf
sti
roll
mov
fsubrl
inc
fidivs
imul
test
push
dec
add
push
outsl
fsubr
pop
jg
cld
push
mov
fisubs
aaa
orl
repnz
imul
or
cmc
cld
mov
xchg
test
in
fucomip
and
or
sub
idivl
mov
dec
mov
sti
jp
and
and
lods
sahf
out
lods
sti
jp
rorl
push
sbb
cmp
arpl
dec
dec
cmp
aas
inc
pop
enter
add
shr
lret
sbb
and
push
out
xchg
jb
add
xchg
push
pop
pushf
loop
mov
imul
and
push
cmpsl
jo
icebp
aas
pop
cli
dec
mov
xor
stc
mov
arpl
inc
cmp
ljmp
scas
stos
test
in
int
mov
adc
xorl
adc
movsb
loope
daa
fdivs
pop
adcl
test
sbb
and
jge
popa
rcrb
lea
inc
mov
dec
loopne
adc
mov
jge
xchg
repnz
lret
shl
xchg
cmp
dec
cmp
and
jl
lea
inc
rol
ljmp
or
mov
mov
pop
jo
cmc
sbb
les
dec
sti
cmp
adc
and
fsubrl
push
das
add
fbld
scas
fnstenv
mov
insl
std
or
movsb
call
xorl
into
jmp
rcrl
arpl
mov
sbb
dec
xchg
or
push
scas
outsb
inc
mov
xorl
and
cmp
mov
mov
in
rcr
adcl
dec
pop
dec
ficompl
std
das
pop
pop
mov
push
aam
mov
jmp
repz
sbb
loope
xor
gs
es
mov
mov
and
pushf
jg
popa
mov
mov
fadds
not
ss
jp
call
fistpll
mov
jg
add
cli
shlb
add
pop
movsl
push
js
mov
andw
iret
pop
and
jbe
ret
push
fistl
rcr
lock
push
adc
jb
mov
ds
outsl
xor
dec
xor
pop
push
and
mov
dec
pop
mov
dec
clc
rcr
cltd
ror
add
sub
jnp
ret
int
movsl
lock
dec
xchg
popa
jns
loop
stos
lret
mov
sahf
cmp
pop
inc
pop
lods
or
out
insl
dec
cmp
lret
jmp
js
add
cli
mov
aad
sti
xlat
cmp
pusha
pushf
mov
cmc
outsl
jb
cmpb
push
mov
xchg
mov
dec
aad
sub
mov
add
cmp
fdivs
roll
jecxz
xchg
vhaddpd
add
sbb
in
and
mov
mov
sub
jnp
lods
in
arpl
xor
and
dec
stc
lret
movsb
ja
and
mov
ret
outsb
ds
fs
pop
fmuls
lret
icebp
and
fsts
inc
and
call
cmp
int3
in
jecxz
std
stos
test
imul
sub
xchg
mov
fnstsw
cmc
insl
ljmp
add
insb
sub
pop
int
add
ds
push
mov
loop
js
fidivrl
xchg
pop
into
ret
push
lahf
imul
sub
adc
pop
cltd
fidivrl
push
mov
cmp
inc
cmpsb
mov
ljmp
aad
xchg
shr
test
shlb
add
loopne
or
xchg
mov
jl
scas
and
mov
and
push
or
arpl
or
cwtl
or
notb
xchg
fimuls
jecxz
repz
outsl
or
pop
mov
or
pop
xcrypt-ofb
cmpsl
push
jmp
js
dec
add
push
clc
dec
fidivrl
adc
pop
test
dec
add
adc
push
pop
fwait
loope
mov
hlt
repnz
xchg
xlat
cli
xor
sub
sub
ja
andb
inc
lds
push
dec
mov
pop
std
mov
lock
xlat
int3
pop
mov
mov
aam
shll
push
gs
xchg
testb
dec
push
js
add
call
pop
mov
ja
fld1
out
fwait
popf
mov
xor
xor
or
push
cmc
xor
ret
div
adc
push
jb
xchg
or
cmp
enter
ret
mov
xor
mov
pop
xor
push
shlb
dec
sbb
aaa
in
wrmsr
ficoms
les
subb
dec
mov
and
ret
xchg
stc
pop
add
out
imul
dec
stos
js
enter
clc
sbb
lods
frstor
jecxz
ficoml
fisttps
xor
and
fpatan
or
sti
push
mov
xlat
lret
cwtl
lods
sub
inc
cmp
rcll
cld
dec
frstor
andl
mov
inc
fdivr
inc
xchg
into
iret
push
es
shrb
mov
and
push
mov
xchg
mov
mov
mov
add
push
mov
cmpl
inc
ror
adc
sahf
lock
xchg
popf
gs
hlt
and
pop
cmpsb
ret
jno
rolb
mov
mov
loopne
dec
mov
ljmp
inc
in
cltd
mov
mov
add
cmpb
dec
mov
dec
sub
mov
test
movsb
call
imul
sbb
sbb
popaw
push
jb
push
push
mov
fwait
xchg
ret
inc
out
sub
repz
cltd
ds
fs
xor
insb
fwait
mov
inc
sahf
scas
add
dec
and
popa
mov
es
xchg
lret
push
cmpsb
mov
and
aam
push
outsl
loope
and
or
or
js
in
xchg
xor
add
imul
cmc
clc
lret
cmp
xchg
rcrb
lea
xchg
fdivs
lods
mov
or
aam
lea
stos
xor
cmpsb
mov
push
jecxz
cmc
cld
ret
lea
xchg
movw
ficoml
adc
jnp
inc
sub
js
add
push
cmp
and
pop
lret
neg
lahf
repz
shll
and
mov
testb
std
je
int
push
sub
sub
mov
mov
cs
enter
inc
ja
lret
jbe
lods
lds
or
popf
mov
push
jp
cmpsb
movsb
xchg
adc
inc
push
pop
adc
das
sbb
sti
mov
insb
xor
mov
dec
mov
push
mov
lahf
add
gs
add
fwait
cmp
cli
mov
cmp
mov
jns
dec
das
std
push
test
dec
jo
inc
and
cmp
push
aaa
mov
fwait
cwtl
arpl
push
adc
xchg
and
and
jmp
cmp
xchg
loopne
sbbb
ja
adc
dec
fsubr
and
lock
sub
pop
mov
push
or
pop
cli
mov
pop
or
movsl
aam
dec
out
mov
adc
out
lds
lods
cld
push
mov
mov
outsl
jbe
push
sbb
adc
mov
or
pusha
loop
sub
dec
adcb
pop
mov
push
push
clc
pop
and
pop
cmp
outsl
add
mov
out
sub
xchg
cmpsl
push
xorb
xchg
xlat
jbe
xchg
scas
lret
sti
clc
mov
or
inc
add
mov
iret
mov
pop
jecxz
fnstenv
inc
arpl
inc
aas
sub
adc
jmp
iret
push
jno
sub
xor
out
addr16
add
and
jle
ja
out
std
inc
inc
pop
ja
cmpsb
fdivs
stc
adc
xor
dec
cmp
pushf
cmp
push
sbb
lods
arpl
mov
mov
or
or
mov
popw
jb
adc
ret
xchg
xlat
and
je
lea
sti
sbb
cmp
and
push
mov
ret
push
out
sub
sub
and
aam
push
push
pop
or
loope
and
mov
cmp
lret
mov
stos
mov
mov
test
dec
dec
mov
sub
adc
mov
inc
add
addr16
fistpll
lahf
retw
jg
ret
pusha
scas
icebp
scas
pusha
jecxz
cmp
lock
loopne
sbb
ds
cmp
in
sub
sbb
ror
addr16
add
enter
loopne
mov
int3
jns
xchg
aad
xchg
stc
fbstp
push
pop
iret
and
lahf
inc
hlt
jae
and
jmp
dec
sub
lea
add
and
adc
sub
lods
and
push
shl
daa
sub
mov
jb
cmp
jbe
shrl
insl
repz
push
xchg
out
and
mov
adc
push
out
aam
pop
hlt
cwtl
in
leave
push
loopne
or
add
aad
mov
mov
push
popa
imul
cmp
icebp
rorl
adc
aam
jbe
scas
pop
andb
lods
lods
jnp
and
cmp
std
test
out
scas
aad
stc
mov
leave
adc
push
jae
in
aad
mov
enter
cmp
cld
icebp
cmpsl
bound
test
test
sbb
mov
mov
ja
xor
sbb
stc
fs
cwtl
sbb
jnp
sub
or
loopne
in
faddl
pop
mov
fimull
int
pop
or
inc
mov
inc
mov
sub
loope
jp
fsubl
sbbb
jge
aaa
jle
and
fwait
sbbl
nop
cmp
mov
dec
ror
cltd
xor
loope
and
in
lahf
jae
hlt
mov
mov
push
fs
sbb
pop
xchg
jo
lahf
inc
push
push
stos
dec
pop
cmp
push
jne
or
pop
push
sti
inc
sti
out
mov
ret
xchg
jb
xchg
sbb
jmp
push
out
push
imul
rcll
hlt
dec
dec
cmp
push
sbb
mov
fsubs
mov
ss
cmp
lea
ja
ds
inc
dec
pop
cmp
in
xor
stc
js
ljmp
cmpsb
push
pop
bound
cmovno
inc
out
subb
xor
out
push
icebp
push
repz
inc
inc
mov
pop
movb
and
or
mov
and
jmp
outsl
or
movsb
mov
cmp
cmp
lds
mov
mov
inc
fildl
ljmp
and
dec
out
cmp
loop
js
aad
xorl
stos
adc
test
es
ljmp
jne
adc
pop
sbb
push
pop
popf
dec
push
pop
inc
xchg
inc
xchg
fdivp
mov
inc
adc
ja
loop
repnz
iret
repnz
fidivrs
bound
pop
fidivs
xor
adc
testb
lahf
xor
pop
jp
cmpsb
stos
loop
adc
sbb
adc
add
xchg
pop
cmp
fisubrs
clc
mov
or
es
lret
aas
loopne
cmpsl
aam
rolb
test
shlb
rcll
xor
in
mov
sub
in
mov
repnz
xchg
mov
jo
dec
dec
into
iret
test
mov
lods
mov
xchg
mov
aaa
popf
not
dec
leave
inc
inc
cli
pop
jmp
pop
fistl
add
mov
addr16
mov
lret
xchg
outsb
incb
mov
mov
fwait
rep
cli
cmp
aam
and
sahf
push
mov
lahf
fwait
loopne
aas
es
cltd
mov
push
mov
movsb
shl
mov
fs
sbb
bnd
lock
push
loopne
repz
pushf
mov
scas
pop
push
cmc
lods
fcomps
loope
loop
pusha
mov
and
push
dec
mov
mov
jae
out
jnp
cmpsb
out
adc
call
push
bound
arpl
insl
or
inc
xchg
sub
xchg
cli
outsl
movl
adc
fcompp
mov
subb
leave
pop
stos
mov
cmp
in
push
cs
mov
xchg
lods
or
push
je
cli
adc
mov
jae
mov
in
sub
out
pop
mov
fisubs
mov
push
mov
fsubl
test
arpl
xchg
addl
daa
xor
pop
cmp
leave
or
fsts
loope
mov
adc
cwtl
xchg
or
mov
je
jno
out
rcrb
cmp
push
scas
cs
mov
aaa
or
cwtl
adc
xor
cmp
add
mov
popf
iret
push
les
and
dec
push
xchg
dec
into
nop
xor
sti
dec
leave
roll
cmc
jnp
adc
xor
or
cmp
xor
aam
int
jle
cmp
push
out
push
mov
xor
pop
cld
fimull
cmp
outsl
cmp
jmp
popf
jl
mov
cmp
or
pop
daa
sbb
sub
mov
mov
ja
movsb
out
sbb
add
or
jns
mov
movsb
pop
mov
ja
xchg
insl
push
pushf
sti
lea
pop
imull
test
rcl
pop
cs
mov
sub
fnstcw
push
test
adc
ret
mov
inc
mov
ret
xchg
cltd
mov
cmp
dec
or
xchg
je
ljmp
pop
insb
xor
cmp
adc
inc
stos
mov
xchg
mov
jl
dec
mov
in
jnp
or
repnz
mov
xchg
and
add
inc
cmpsl
jge
cmp
sahf
mov
dec
std
mov
ret
inc
xorl
cmc
pop
ja
jmp
push
jne
in
cmpl
sti
jae
dec
test
shlb
mov
test
or
mov
repz
cmp
scas
call
sti
mov
pop
sub
inc
or
mov
sbbl
mov
outsb
jo
lock
xchg
mov
cmpl
pop
lcall
gs
mov
push
adc
and
sub
inc
dec
xchg
loop
xor
insb
mov
jecxz
inc
sub
adc
out
lret
pop
lock
loope
cmpsl
jle
dec
cli
fcmovu
lods
psrld
cli
loope
and
mov
pop
mov
in
movl
frstor
or
xlat
inc
icebp
push
mov
adc
xor
aad
cs
cmp
cmp
xchg
pop
lret
notb
rcrl
mov
add
pop
popl
mov
mov
dec
es
jb
cmp
adc
mov
repz
repz
jmp
mov
out
lods
hlt
mov
mov
lods
arpl
mov
popf
jg
adc
xor
adc
lcall
ja
xchg
in
lods
push
xor
adc
mov
mov
aas
adc
mov
mov
or
out
aam
mov
cs
or
out
inc
fistpl
js
test
and
jl
ret
cmp
pop
clc
test
push
dec
shl
push
pop
mov
pop
jae
adc
test
testl
test
cwtl
aas
insl
enter
add
jbe
popa
pop
es
push
je
ljmp
dec
adc
loop
sbb
nop
cmpsb
cld
mov
lcall
test
mov
and
pop
fs
pop
pushf
or
pop
loopne
fists
pop
sbb
pusha
inc
pop
test
test
mov
lret
loop
std
test
adc
mov
inc
hlt
and
jbe
in
repz
inc
mov
js
insb
pop
add
mov
adc
or
pop
adc
nop
sahf
test
cmp
mov
dec
loop
push
push
or
jmp
push
adc
mov
loope
fistl
and
xor
dec
loopne
mov
adcl
xor
cmp
mov
cmp
xchg
ljmp
jmp
mov
ljmp
dec
push
lds
leave
ljmp
cmp
cmp
mov
inc
sarl
std
lock
js
shl
push
jo
adc
repnz
sub
les
and
fistpll
test
flds
fcoms
mov
xor
int
outsl
mov
leave
gs
mov
fsubr
mov
enter
in
mov
test
into
mov
nop
loope
mov
ret
mov
in
mov
scas
out
gs
inc
jnp
fisttps
iret
lods
or
out
dec
pop
cmp
clc
subb
lret
push
hlt
into
mov
idivb
and
add
mov
enter
and
cli
cmp
jae
adcb
add
cmc
xor
xor
out
test
add
add
mov
xchg
push
movb
inc
push
sub
jno
addr16
movsl
cld
jnp
xor
notb
add
mov
jp
mov
into
sbb
lret
fnstcw
xor
ja
insb
sub
xchg
lret
lret
pusha
push
shl
hlt
out
cwtl
ss
punpckldq
mov
or
mov
push
inc
cmp
mov
xchg
jecxz
jno
cmp
push
fidivl
sub
cmp
popf
lahf
dec
daa
xor
cmp
mov
pusha
jns
ljmp
jg
into
maskmovq
divl
imul
add
pop
aas
xor
das
mov
ss
movd
inc
leave
lcall
rcll
lds
mov
ds
mov
insl
mov
adc
in
shrl
mov
fsubp
sub
fs
dec
ss
ds
jns
add
ljmp
jmp
inc
or
nop
nop
xor
push
push
pop
fdivr
test
dec
mov
mov
xchg
mov
ss
xchg
mov
push
leave
xor
cli
mov
fistpll
adc
cltd
cmp
cld
jle
sub
dec
jbe
jl
xchg
iret
xchg
xor
adc
xor
xchg
mov
pop
cwtl
sbb
mov
cwtl
add
pop
jl
int
xor
es
mov
sbb
xchg
mov
lock
sar
sub
addr16
stos
in
add
nop
adc
push
js
sub
mov
dec
fstpt
xor
fidivrl
clc
xor
xor
jno
inc
inc
ret
or
aam
je
bound
xor
mov
jmp
adc
xor
shl
sti
call
bound
imul
xchg
mov
mov
in
push
push
or
push
inc
pop
pop
xchg
jns
stos
out
mov
jne
test
repz
shll
dec
jbe
fsubrs
dec
sbb
inc
in
adc
push
sub
fwait
adc
sbb
arpl
cld
lods
je
sub
or
aam
jmp
call
and
mov
aad
push
cld
xor
cmp
and
fwait
daa
add
mov
inc
mov
dec
repz
mov
inc
dec
daa
sub
xchg
fstl
push
adc
jl
inc
dec
lods
push
add
adc
aaa
int3
stos
adc
jg
mov
jg
out
mov
mov
dec
clc
jmp
dec
fmul
stos
pop
lock
dec
xorl
sti
cld
repnz
mov
sbb
dec
push
fbld
ja
js
cmp
icebp
sub
mov
or
dec
mov
popa
adc
pushf
stos
mov
js
jp
in
imul
push
mov
pop
pushf
loop
arpl
fisubrs
fisubs
mov
ss
mov
scas
js
aam
jg
aas
pop
jp
out
adc
sar
cld
cmp
insb
fiaddl
or
jbe
jbe
or
aam
lock
push
push
mov
push
test
gs
movsl
adc
push
clc
adc
jo
fcoms
fucomip
sub
ds
push
xchg
cmp
push
fists
dec
jns
xchg
std
rolb
shl
pop
outsl
mov
mov
mov
fwait
mov
jg
sub
cld
cmp
fistl
cld
dec
push
pop
inc
icebp
xorl
outsb
lock
cmp
push
sbb
xchg
sub
into
mov
add
cs
jo
stc
leave
aas
and
xchg
or
movsb
int
pop
jecxz
insb
push
and
jae
mov
iret
stc
sbb
in
out
insb
mov
out
pusha
orl
push
cmp
dec
pop
inc
adc
xchg
movsb
add
jle
mov
aad
mov
sbb
les
xchg
test
xlat
xchg
repz
mov
cwtl
js
inc
lods
push
xchg
into
jno
outsl
leave
imul
pop
frstor
and
aam
lods
xchg
xor
adc
pop
pop
add
jae
xor
push
lock
mov
loopne
outsl
push
cmpsl
sahf
jb
xchg
xor
lock
ljmp
mov
push
push
sbb
into
shll
jo
test
loop
fdivl
test
loope
outsl
loope
xor
pop
adc
or
leave
add
rclb
add
shll
stos
dec
rorl
cwtl
je
jecxz
sub
push
ss
stc
in
inc
cmp
or
sub
outsb
xchg
jne
testb
lds
adc
mov
test
dec
inc
mov
lods
xor
pusha
mov
push
pop
pushf
inc
fcmovne
push
inc
push
out
pop
xchg
cmp
fistpl
xchg
add
xor
adc
xchg
pop
add
leave
leave
sbb
cmc
sub
dec
adc
mov
cli
movsl
ret
jno
outsl
mov
and
cld
enter
loopne
inc
xor
or
lea
rorl
popf
sbb
iret
das
insl
mov
enter
mov
shlb
cmp
add
out
test
filds
cld
imul
jp
popf
and
fists
mov
lea
pop
lods
int3
pop
mov
popf
jo
test
jp
popf
rorl
inc
ljmp
pop
mov
sbb
out
xchg
mov
lret
inc
rclb
jb
jnp
sarl
cli
mov
pop
fdiv
add
pop
lret
xor
aaa
push
inc
and
dec
sar
pop
add
filds
pushf
sub
not
adc
or
ljmp
mov
or
jp
bound
test
cmp
shrb
add
sahf
and
mov
pop
mov
jecxz
or
ja
popf
fsubl
mov
jmp
jns
aam
push
aaa
mov
add
pop
add
sbb
negl
inc
std
shrb
cs
push
push
jecxz
cmp
leave
jne
in
jnp
cwtl
dec
cmp
xchg
popf
nop
mov
cvtps2pi
sub
repnz
scas
push
sqrtps
and
lds
inc
add
mov
pusha
rcrl
xor
scas
scas
xor
sbb
popa
or
clc
and
in
dec
pop
cwtl
out
mov
jle
lahf
mov
inc
dec
repz
jmp
xchg
andb
cld
nop
adc
sti
xor
pop
mov
and
jae
out
mov
rcll
int
aad
xchg
outsb
or
xchg
or
sahf
and
arpl
jmp
lods
and
iret
shlb
ljmp
rolb
decb
aaa
lcall
pop
push
and
cwtl
mov
or
adc
fxch
push
es
bound
in
jae
and
fcompl
jbe
std
dec
ja
jno
mov
adcl
and
inc
add
mov
jnp
wbinvd
pop
adc
pop
mov
scas
cmp
aad
gs
xchg
lock
aas
lods
leave
xchg
lcall
outsl
test
add
sbb
iret
jg
jmp
rorb
out
push
sub
push
inc
hlt
inc
mov
imul
mov
pop
repnz
les
sbb
je
ret
add
bound
jo
leave
push
lcall
add
sahf
sub
dec
and
mov
shll
jmp
sti
mov
iret
cmc
andps
into
mov
sub
jle
lods
mov
in
sbb
jne
mov
fnsave
mov
lret
mov
arpl
pop
clc
aas
mov
call
int3
idivb
cmp
test
cmpsl
inc
bnd
mov
inc
stos
mov
mov
repnz
mov
lea
xor
jne
mov
es
sti
cmp
mov
inc
mov
call
bnd
add
push
shll
xchg
rcl
sbb
and
mov
dec
fmull
fs
fcom
inc
enter
sbb
push
dec
inc
mov
out
mov
punpcklbw
push
dec
fidivrs
mov
xchg
mov
pop
ds
arpl
into
sbb
fisttpll
inc
fadds
sub
je
mov
mov
inc
sbb
clc
ret
dec
mov
insb
inc
andb
inc
add
and
sbbb
cmp
idivb
xor
cmc
ljmp
addr16
outsb
inc
sbb
inc
cli
xor
sti
push
rorl
lcall
mov
in
dec
sahf
jo
scas
fdivr
and
scas
inc
sub
adc
add
movsb
push
sahf
call
sub
ljmp
aas
imulb
lahf
jg
add
jne
sbb
sbb
repz
loop
inc
and
bound
push
fdivr
std
xchg
lret
push
out
sahf
adc
mov
daa
sti
ljmp
jno
lock
cmp
dec
in
rcll
ret
hlt
push
rol
pop
shr
outsb
push
push
jne
ret
les
jns
mov
cmp
mov
push
pop
pop
jns
jae
xchg
inc
inc
dec
and
inc
dec
adcb
cwtl
lods
leave
stc
or
cmp
jns
es
cli
mov
je
out
sub
sbb
call
fwait
pop
jne
dec
dec
outsl
inc
sbb
loop
push
push
mov
push
stc
fwait
and
push
imul
jnp
test
jl
repnz
out
inc
and
loope
pop
mov
or
pushl
movsb
jge
pusha
out
lret
jl
sbb
jecxz
cs
sub
xor
out
mov
mov
and
jnp
mov
shrl
int3
and
fimull
lds
inc
inc
pop
push
and
pop
jmp
pushf
hlt
test
xchg
inc
pushf
xor
stos
addr16
test
sbb
lods
into
dec
jp
imul
xchg
pusha
mov
inc
pop
pop
cwtl
sub
std
jl
addl
sub
jle
inc
mov
icebp
xchg
cwtl
popa
adc
mov
and
and
rclb
pop
mov
xor
ja
jecxz
clc
cmp
jns
repnz
cli
cmp
mov
gs
sub
cmp
xchg
aas
cmp
cs
or
mov
lret
shrl
int
pop
arpl
addb
mov
mov
pusha
lods
sbb
xchg
mov
adc
push
mov
add
test
inc
sbb
dec
loopne
js
test
rorb
cwtl
imul
push
lcall
mov
inc
mov
adc
movsl
popa
inc
adc
sahf
je
xchg
xor
jo
mov
addb
sub
xchg
add
popf
or
aam
les
sar
imul
scas
das
mov
lea
pop
cwtl
test
cli
dec
jae
aaa
mov
shll
jp
or
inc
dec
rcll
hlt
cmpsb
add
into
and
mov
pop
cmp
outsl
xchg
pop
sub
inc
adc
or
add
cmp
aaa
test
inc
adc
pushf
movb
popa
push
dec
dec
rcrl
mov
sub
sbb
mov
dec
int
pop
out
sbb
mov
cltd
loop
inc
in
cmp
lock
jns
xchg
idivb
pop
sbb
pop
push
es
movsb
div
sbb
add
clc
xchg
sahf
xor
lods
pop
jl
adc
test
adc
mov
and
sbb
in
insl
jo
or
std
sar
push
adc
leave
mov
pop
rcll
mov
clc
cmp
mov
cwtl
dec
cmp
mov
in
dec
jmp
or
mov
jns
movsl
int
mov
ficompl
inc
cmp
adc
mov
jns
jne
pushf
test
push
inc
aam
mov
adc
pop
in
sbb
xor
mov
inc
into
adc
sub
pop
loope
out
cmpsb
and
shll
cmp
sahf
cmpl
arpl
sbb
dec
mov
mov
out
mov
pop
jg
jbe
dec
iret
jae
jo
sub
mov
lock
mov
scas
jne
xor
mov
dec
xchg
push
mov
out
or
inc
scas
push
inc
add
pop
push
test
mov
scas
inc
dec
inc
adc
call
mov
mov
inc
adc
xchg
mov
ret
mov
repnz
sub
sbb
lret
mov
popa
shrl
in
lods
xlat
loope
jb
jmp
adc
inc
and
or
std
add
dec
popf
out
mov
mov
pop
cmp
mov
dec
dec
xor
cld
imul
sarl
insl
dec
sbb
out
cmp
sub
repnz
pop
cmp
sbb
popf
mov
add
movsb
test
adc
fwait
int
imul
popa
icebp
xchg
inc
outsl
adc
shlb
fidivl
daa
enter
aas
jbe
loop
bound
outsb
mov
jge
ds
je
cmp
nop
popf
out
pop
push
arpl
jp
sahf
cli
shrl
or
je
aam
dec
div
dec
pop
and
daa
lock
xor
iret
sub
scas
push
push
flds
notb
push
mov
lock
adc
ja
stos
pop
jecxz
ja
xchg
xorl
dec
adc
mov
stc
jne
mov
movb
pop
mov
hlt
mov
gs
mov
into
repnz
xor
or
or
dec
adc
sbb
sub
add
repz
jne
lcall
ret
xchg
adc
mov
movsb
test
cld
sub
test
adc
push
insb
inc
je
lret
mov
mov
mov
adc
stos
cmp
xchg
cmp
cli
cs
fnstsw
lahf
push
je
icebp
mov
fs
lret
aaa
jo
repnz
aaa
fisttps
xor
sbb
sbb
mov
cmp
inc
je
ljmp
or
fidivrs
dec
cmp
lahf
cli
pop
sub
push
rcl
fnstcw
clc
pop
xchg
lahf
mov
adc
in
or
and
lds
mov
addr16
pop
rcrl
mov
test
test
in
mov
or
int3
ds
xchg
add
fisttpll
ja
sub
outsl
lcall
sub
inc
dec
pop
andl
das
jg
iret
dec
test
xor
xor
sbb
mov
ds
popa
inc
mov
inc
repz
sbb
fisttpl
sbb
cmpsl
mov
ret
int3
xlat
xchg
adc
pop
dec
insb
push
and
push
mov
fbstp
push
lods
fs
ficoms
lret
int
sarb
mov
adc
orb
filds
dec
aaa
lahf
or
clc
pop
push
sbb
icebp
into
lods
xlat
adc
sub
test
mov
sbb
lds
inc
sbb
xchg
cmpl
out
pop
rclb
cmpsl
fcompl
repnz
and
addl
sub
rcrb
ret
pop
jl
pop
dec
sub
xchg
push
push
stc
and
cltd
inc
or
shl
jecxz
push
jmp
movsb
ret
add
jp
movsb
pop
mov
jge
ja
mov
cld
mov
call
leave
mov
inc
aam
jnp
cld
mov
inc
pop
test
lahf
sbb
imull
test
rclb
fmul
cwtl
movb
fistps
lea
cmpb
inc
mov
push
mov
mov
lahf
jp
xor
ds
push
or
inc
sbb
push
xchg
mov
mov
inc
ja
out
push
xchg
mov
lea
notb
mov
add
push
popf
push
lods
mov
dec
mov
pop
lret
jmp
jnp
sbb
sub
mov
popf
flds
mov
jecxz
scas
stos
mov
push
cmpsl
loope
push
xchg
mov
push
jg
cmp
aaa
xor
pop
mov
mov
jo
psllq
jbe
fsubrs
popa
jbe
adc
lods
cmp
jmp
ret
xchg
bound
xor
add
ja
das
jg
mov
pop
push
sbb
sbb
add
ljmp
jae
ror
xor
xor
lahf
cli
lret
sub
adcb
jmp
pop
insl
add
pop
dec
mov
adc
shlb
mov
inc
cmp
lea
and
cwtl
clc
adc
lret
and
icebp
movsl
cmp
loope
rcrb
call
out
das
jge
add
xchg
push
jns
movsl
or
pop
lret
testl
mov
and
fiadds
js
dec
inc
mov
push
and
sub
cmpb
clc
inc
add
xchg
loopne
xlat
sbb
fcmovnb
loope
pop
dec
jo
mov
fadd
xchg
les
jecxz
int3
fistl
mov
mov
je
mov
je
scas
jle
sbb
jg
es
add
xor
fdivp
xlat
dec
pop
xor
jl
enter
outsb
dec
ja
fs
pusha
push
mov
dec
cs
jbe
lea
push
mov
cmp
es
lds
in
inc
shll
mov
adc
jns
mov
inc
mov
loop
mov
andl
ja
adc
adcl
xchg
cmpsb
inc
and
adc
cmc
mov
and
ret
daa
ljmp
mov
stos
fldl
pop
xchg
mov
mov
mov
aam
shll
rorl
fadds
stos
xor
xchg
test
ficomps
aaa
negb
add
int3
lds
or
jne
cmc
ja
cli
shrb
push
mov
adc
lods
and
mov
gs
push
add
out
add
push
jnp
into
roll
xorl
xchg
xchg
mov
add
or
pop
sarb
pop
or
movsl
lahf
fnstenv
mov
je
xchg
aaa
cmpsb
xchg
push
dec
inc
cmp
xchg
int3
rcll
imul
adc
mov
ret
sbb
lret
push
dec
cmp
cli
cltd
repz
jbe
jg
arpl
inc
in
pushf
add
daa
fwait
jbe
push
repz
repnz
cmp
stc
mov
repz
sub
and
test
xchg
jno
rcrb
xchg
pusha
iret
jbe
int
mov
stos
invd
pop
pop
mov
sbb
dec
mov
mov
rolb
push
pop
xor
pop
xorb
fisttps
sbb
insb
sub
ljmp
scas
cmp
mov
gs
fisttps
xor
out
cmp
add
imul
fisubs
js
gs
pop
data16
and
lret
cmp
xor
adc
std
insb
jns
out
mov
mov
push
loopne
inc
jae
dec
push
sarb
and
stos
xor
cltd
jne
arpl
aaa
je
or
scas
adc
mov
pop
sub
lock
in
aas
repz
xchg
pushf
sbb
sbb
test
fs
div
cmp
push
es
into
cmp
jl
add
cwtl
mov
mov
jno
dec
cmc
mov
add
scas
pushf
inc
fmull
lock
adc
jge
orb
inc
cli
xor
xor
push
xor
mov
divb
repz
addl
pushf
aad
cld
fiadds
mov
lahf
adcl
jne
sbb
sub
test
int
fistl
es
mov
mov
sarl
jo
xchg
jge
sbb
mov
jb
xchg
sbb
ret
roll
pop
loope
xchg
sbb
lea
rorb
mov
jmp
adc
or
cmp
push
or
testb
stos
mov
push
dec
in
arpl
clc
lods
in
lret
imul
ret
adc
mov
dec
test
das
fistl
push
inc
in
push
push
ret
sub
mov
jne
jle
xchg
sbb
fldt
hlt
std
inc
jne
mov
sti
xlat
inc
pusha
das
push
mov
stc
sbb
test
mov
popa
jg
pop
scas
adc
xchg
inc
icebp
and
pop
cli
stc
jp
pop
mov
hlt
pop
out
mov
outsl
xchg
aaa
dec
xor
in
sbb
add
and
mov
mov
and
loopne
and
inc
lret
mov
sti
or
cmc
insl
out
or
or
cmp
pop
pop
scas
movsb
int
jo
loope
ret
cmp
pop
fnstenv
je
mov
push
mov
jns
pop
xor
ja
sub
outsl
or
push
test
dec
fmuls
mov
pop
lahf
pop
sbb
movsb
and
and
lret
ret
dec
fs
mov
inc
cmpsb
fisttpll
sbb
ret
insb
out
lds
pop
movsl
nop
adc
pop
into
push
mov
inc
mov
sbb
movsb
cmp
cld
int
fadd
cmp
mov
stos
cmp
test
mov
jl
pop
mov
xchg
int
ret
popa
stos
cmpsl
sub
pop
loope
pop
pop
jecxz
addr16
dec
xor
mov
pop
sbb
out
ret
sub
inc
lock
scas
addb
out
fwait
daa
mov
in
add
scas
push
cmc
mov
or
test
sbb
and
and
lea
sbb
sub
lods
xchg
push
fistpl
subl
sbb
push
jmp
lahf
adcl
pop
frstor
inc
jbe
fstps
xchg
jbe
adc
dec
mov
push
inc
fsubrs
dec
loopne
pop
popf
jecxz
sbb
xor
or
in
loope
xchg
xor
inc
push
push
mov
lret
xor
in
xor
cmpsl
xor
inc
lret
das
js
stos
jb
cmp
mov
xor
add
jg
mov
adcb
xor
xor
repnz
lock
sub
arpl
or
fnstenv
aaa
mov
dec
ja
xchg
lcall
push
popa
lcall
and
add
daa
cmpsl
aam
cmp
cmp
rcll
rcrb
inc
mov
add
and
pop
ds
mov
adc
gs
in
push
test
ja
and
cmp
mov
sub
or
sbb
sti
mov
pop
scas
in
push
ret
mov
test
fsubr
test
adc
int3
lret
xor
push
out
pop
ret
inc
sub
jle
sbb
and
mov
imul
aam
push
fldt
aaa
gs
dec
xchg
aam
mov
lock
shlb
stos
cmp
mov
in
dec
or
int3
xlat
jae
dec
jnp
cld
enter
lods
push
sub
or
mov
into
mov
imul
dec
in
pop
ret
dec
jae
mov
jge
scas
xchg
add
add
jne
push
das
add
pushf
xchg
arpl
loopne
sub
or
sbb
lds
inc
inc
popf
shr
mov
lahf
adc
addr16
adc
push
mov
mov
in
jbe
jmp
frstor
jge
nop
adc
pop
hlt
daa
mov
stc
jns
subb
lea
les
dec
or
sbb
push
dec
scas
mov
jp
sbbl
dec
sub
loop
aaa
fistpl
xchg
in
mov
push
fstl
sahf
sbb
inc
pop
and
movsl
lahf
push
stos
mov
aas
mov
or
add
and
lock
adc
jle
mov
outsb
je
sub
imul
mov
push
xor
jmp
and
popf
and
xchg
xchg
arpl
fldt
daa
adc
lds
xchg
shl
imul
or
int
jg
addb
lds
aas
and
fsubs
bsf
sub
or
adc
insb
add
adc
roll
add
or
orl
and
xor
pop
icebp
dec
cmp
mov
and
mov
in
insl
stc
mov
or
lods
pop
pop
cmp
fsubl
jne
jecxz
pop
or
sbb
mov
or
push
xor
lret
sub
mov
nop
repnz
mov
in
daa
sbb
add
out
and
sahf
and
sbb
sbb
add
clc
add
dec
pop
pushf
loope
lock
cs
push
pop
cmpl
sub
shlb
rcrl
xchg
jno
fists
xchg
inc
fdivrs
mov
jb,pn
add
out
xlat
jl
insb
pop
xchg
sub
jg
cwtl
cmpsb
adc
jmp
movsl
sbb
sbb
imul
cld
imul
and
flds
out
aaa
arpl
and
repnz
sub
movsl
and
inc
fwait
sub
jo
mov
push
mov
jns
xlat
fwait
xchg
lcall
push
mov
xchg
out
xor
mov
mov
jae
rcll
sbb
daa
pop
das
lock
into
cmp
pop
jne
cmp
jb
sub
cwtl
xchg
push
adc
cmp
mov
outsl
push
dec
sahf
sbb
out
sub
mov
add
sti
and
add
mov
iret
lea
lret
or
test
sub
iret
fwait
fwait
cld
push
or
mov
mov
call
mov
xchg
pushf
jmp
pushf
nop
fsubrs
sti
pop
mov
mov
mov
mov
cmp
scas
dec
xor
add
shll
lahf
sbb
insb
shr
inc
mov
jae
xlat
mov
xor
jno
into
inc
and
and
cmp
adc
sbbl
fwait
pop
ffreep
adc
stos
pop
push
cltd
je
enter
push
cmpb
cmp
fistl
adc
aam
xchg
inc
in
jle
sub
sbb
shlb
sbb
sti
int3
sub
mov
sub
xchg
jle
xchg
mov
add
lods
inc
xor
xchg
pop
int3
jle
das
out
mov
jno
js
cs
dec
repnz
sub
fcompl
inc
mov
icebp
adc
xchg
lods
rorb
cmp
push
ljmp
push
push
ror
pop
aad
rorb
shr
pop
mov
sub
xor
push
rclb
and
add
xor
cwtl
xor
mov
sbb
iret
mov
xchg
cmp
ss
jo
jmp
xchg
xchg
movswl
push
fwait
in
dec
pop
jmp
cmp
sub
jecxz
and
call
inc
fistpl
add
out
push
loopne
enter
sahf
cltd
sub
or
lret
cmpsb
bound
and
and
dec
push
mov
jmp
ss
jnp
lods
xchg
movsb
clc
mov
cltd
lea
stc
cli
lcall
cmp
xor
shl
shrb
fstpl
les
mov
shll
xor
jo
fidivrs
ficompl
inc
push
pop
mov
xchg
call
jmp
jo
and
into
mov
inc
ds
inc
inc
icebp
lret
dec
imul
cmp
pop
dec
ret
in
xlat
sub
in
call
loope
push
mov
fists
cmc
aas
stc
mov
mov
fwait
call
sbb
mov
dec
mov
fisttps
cld
push
lods
lea
xorl
inc
dec
out
pushf
sbb
pop
push
inc
jns
js
push
pop
adc
and
mov
mov
ret
sub
mov
pop
and
rcrb
lods
adc
ret
jmp
daa
mov
in
arpl
leave
add
imul
adc
xor
dec
test
shl
imull
hlt
mov
lret
jae
les
sbbb
or
xchg
dec
mov
negb
jo
loope
mov
fcomps
enter
shrl
add
jmp
pop
loopne
nop
aas
xor
lret
xchg
std
das
and
push
and
push
or
xchg
sbb
jns
inc
pusha
adc
push
cmp
sub
int
aad
sub
das
push
xchg
mov
sbb
and
xor
push
add
cmp
cwtl
arpl
push
fisubrl
enter
cltd
pop
pop
jno
cmp
mov
jle
daa
xchg
std
lods
mov
test
xor
xor
jp
push
out
mov
pop
jo
mov
jnp
sahf
movsl
test
xor
cmpsl
and
sbb
or
test
fistpl
in
in
xchg
add
add
sti
or
in
inc
bound
lods
aas
and
out
fidivs
popf
jb
cmp
mov
jg
mov
data16
movsb
dec
stos
inc
lods
js
jl
cmp
sbb
jg
shll
inc
sbb
in
cmp
jg
pop
sbb
enter
bound
mov
dec
dec
lock
and
jns
shll
xchg
arpl
add
aas
ret
sbb
xchg
mov
shr
inc
fsts
sahf
fucomi
dec
fwait
adc
loopne
mov
popa
shll
mov
cmp
push
cmp
mov
pushl
or
test
dec
xchg
mov
hlt
dec
scas
inc
fildl
ljmp
dec
daa
push
push
push
inc
dec
test
xor
and
adc
dec
enter
jl
mov
icebp
hlt
popf
gs
fdivs
arpl
mov
xor
shl
pop
fmuls
ss
iret
daa
mov
dec
pusha
sub
jno
cmpsb
lcall
movsl
mov
ds
aaa
into
pusha
test
jge
cltd
lock
scas
sub
xchg
mov
push
mov
xor
jnp
inc
repnz
mov
inc
out
aam
loop
pop
ds
stc
and
dec
icebp
xor
sbb
inc
lods
xor
or
pop
lea
jmp
test
scas
pop
mov
push
mulb
dec
pushf
ss
mov
mov
jmp
xchg
xchg
mov
inc
or
xor
jno
out
hlt
fisubrs
mov
out
inc
add
flds
adc
shrb
lcall
jge
xchg
xor
jecxz
out
and
adc
insb
dec
enter
pop
adc
test
sub
dec
gs
push
xor
mov
jns
sbbl
inc
fcoms
xchg
aad
scas
inc
sub
pop
sbbb
jns
mov
adc
movsb
cmp
repz
fisttps
or
cmp
sub
push
and
in
ljmp
jne
sbb
hlt
sbb
lcall
inc
rcll
cwtl
and
mov
cmp
pop
into
daa
push
mov
sbb
xchg
test
nop
mov
mov
mov
ss
hlt
shl
cmp
cmpsl
pop
in
mov
add
push
or
pop
mov
loop
je
cmp
inc
cmp
into
fstpl
daa
adc
stos
add
mov
cmp
repnz
inc
inc
or
dec
xchg
in
loop
stc
pop
rolb
push
add
jge
and
jp
push
and
out
pop
imul
outsb
stos
mov
mov
not
out
push
fimull
xlat
cmp
push
mov
fcomip
cld
orl
mov
test
push
shlb
aaa
mov
movsb
rclb
sub
mov
sbb
and
int3
cmp
rcr
inc
add
mov
ds
lret
std
sbb
push
xor
sahf
xor
jp
and
and
mov
aam
les
push
clc
push
movsb
in
arpl
add
mov
mov
bound
mov
pushl
clc
xor
cmp
call
inc
push
insb
pop
add
fisttpll
scas
insb
cmp
and
adc
es
sbb
stc
jecxz
ret
or
cltd
je
adc
mov
mov
and
and
shrl
test
push
lret
add
xchg
std
std
insb
or
addr16
lods
fucomip
add
or
arpl
sti
lret
cwtl
jecxz
scas
mov
jbe
cmp
test
out
sub
jbe
and
push
lcall
jmp
shrl
fcomp
setae
cs
or
inc
imul
fs
jmp
xchg
xor
outsb
pop
lret
cmp
cld
fsubrl
push
sahf
icebp
lahf
inc
rcl
and
inc
inc
inc
movsl
stc
les
jne
xchg
add
in
in
int
lret
je
adc
int
jge
pop
jle
sbb
xor
add
into
and
mov
cmp
fnstsw
outsl
fucom
test
popa
cli
outsl
ja
loope
pop
out
inc
insb
dec
cmpsb
mov
add
out
stos
dec
mulb
and
xchg
cmpsb
mov
js
adc
push
out
clc
movsl
test
sar
addl
mov
jl
arpl
mov
popf
scas
mov
popf
push
xchg
sub
and
sub
dec
test
mov
movsl
dec
mov
xchg
ja
jle
call
stos
pushf
outsb
cmc
out
mov
lods
mov
xchg
mov
cmc
pop
sub
movsb
pop
sub
sahf
mov
add
mov
pop
add
gs
ret
xor
inc
lock
fisubl
insl
add
sbbb
shr
repz
outsl
jno
sti
shrb
xchg
fs
mov
add
sbb
push
roll
and
dec
jmp
and
xor
jmp
add
inc
inc
pop
lret
out
xchg
dec
ret
and
sub
mov
cmp
push
cmpsb
adc
in
and
or
inc
adc
xor
into
fbstp
cmp
call
sub
outsl
sub
add
inc
stos
std
cwtl
mov
pop
sub
pop
fimull
sub
and
sub
or
rorb
mov
js
cmp
movsb
pop
cltd
scas
sti
fs
lds
sbb
or
fbld
pushf
push
jl
or
mov
mov
push
ret
xchg
cltd
stc
addr16
cmp
out
or
xor
and
push
pop
mov
push
and
inc
icebp
mov
in
lods
jnp
mov
and
or
xchg
cmp
loopne
cmc
testl
fistl
movsl
mov
call
andps
andl
cld
in
xchg
xor
mov
jmp
inc
out
js
add
sub
and
gs
push
cmp
cmp
int
adcb
lock
rcr
enter
nop
cmpsl
cmpsb
aam
adc
or
push
loop
fwait
xchg
mov
ss
inc
orb
mov
sub
push
xchg
xor
push
aam
or
scas
pop
enter
pop
sarl
fisubl
movl
sub
clc
inc
xor
cmp
and
cmp
adc
mov
mov
daa
scas
lahf
int
push
inc
cltd
adc
or
orb
lahf
movsl
xor
cmp
dec
lahf
fcomps
sub
pop
dec
push
div
repnz
sti
es
pop
sub
mull
pusha
in
lods
cmp
mov
in
ljmp
cmc
pusha
imul
inc
mov
pop
leave
mov
lods
mov
xorl
sbb
out
ficompl
add
pop
jbe
lock
in
mov
jge
orb
ljmp
sub
mov
adc
ret
aaa
repnz
xchg
jp
sub
cmpsb
insl
mov
pop
push
adcb
jbe
enter
cmp
lahf
imul
pop
lahf
popa
loop
lahf
in
sbb
cmpsl
lea
sub
xchg
fisubrl
ljmp
sub
scas
cmp
lds
das
pop
loope
push
jle
lret
adc
in
push
popa
loopne
pushf
jge
sub
mov
jae
clc
fisttpl
cmp
in
test
int3
sarb
ds
lods
dec
mov
pop
add
fadd
dec
and
movsl
xor
bound
and
adc
fwait
aam
mov
out
cmc
xor
test
xor
sbb
xor
out
push
or
test
adc
and
loope
test
pushf
subl
mov
into
fs
mov
and
movsb
jno
fiaddl
imul
cltd
je
in
data16
dec
jg
jnp
mov
push
enter
xor
or
push
in
lret
fxch
es
test
add
sub
movsl
mov
cmp
sar
and
vmread
pop
sub
push
mov
fs
movzbl
imul
cwtl
or
out
jl
aas
xor
xor
pop
xor
cwtl
mov
mov
addr16
add
rclb
jp
push
jle
sahf
mov
add
xchg
cmc
movsb
xor
sahf
jge
jle
or
jl
lret
arpl
jns
std
int3
mov
insb
xor
push
aaa
sbb
gs
repz
addr16
popf
adc
sbb
mov
mov
xor
push
sub
out
adc
in
fsubrs
cmp
xor
shrl
or
into
out
rolb
mov
jae
jecxz
xor
sub
pop
loope
stos
shll
cmp
add
mov
sub
hlt
fcomp
jns
test
jns
push
divl
fdivs
out
lcall
push
mov
sbb
adc
stos
out
scas
in
push
es
jmp
push
pop
sbb
test
popl
mov
lods
sub
push
sub
les
pop
mov
out
adc
jg
cld
jae
scas
inc
dec
inc
jmp
and
xor
mov
ja
sbb
xlat
mov
aaa
jb
cli
sbb
jle
fisubrl
fmuls
sub
xor
sbb
adc
cmpsl
push
jne
ss
movsl
int
pop
or
fsubp
adc
cmc
lahf
sub
ja
push
push
cmp
lods
mov
dec
jns
scas
add
aas
pusha
mov
mov
add
cmp
mov
xor
dec
sar
push
iret
push
pop
scas
mov
or
pop
mov
loopne
aas
jecxz
jb
call
cmp
pop
out
ret
and
insb
pop
out
ss
cmp
or
xchg
dec
sub
push
mov
and
cltd
popf
ret
fcmovnbe
jle
jae
inc
push
push
adc
add
idivl
mov
xchg
test
or
and
sub
orb
sub
push
mov
stos
popf
out
dec
in
fnstenv
enter
jg
pop
cli
mov
mov
aas
mov
insl
int
jmp
sub
xor
sbb
in
inc
adc
popa
in
cmp
je
add
pusha
mov
add
cmp
xor
sub
xor
inc
pop
int
mov
fucom
jl
jmp
or
xor
out
dec
push
or
mov
rcrb
lret
mov
cmc
popf
inc
mov
fcmovb
mov
ss
or
or
push
stos
sarl
mov
xor
adc
sahf
das
mov
mov
sub
dec
cmovle
out
lcall
pop
pop
pop
add
nop
fcomi
popa
insb
or
jns
mov
dec
out
pop
and
push
push
and
out
mov
mov
or
push
mov
loop
pextrw
and
dec
mov
jge
dec
cli
ret
aam
into
push
movsb
sbb
cmp
sub
dec
lahf
jb
sbb
andb
mov
inc
cltd
mov
cmc
jecxz
jmp
outsb
inc
adc
fldl
sbb
mov
jecxz
stos
sbb
lret
cmp
cmc
sub
push
sbb
aaa
or
inc
stc
and
inc
sbb
xchg
dec
inc
cmc
flds
xchg
sub
xchg
cmp
add
push
mov
xor
testb
jg
mov
shrb
jg
test
or
mov
xchg
outsl
xchg
int3
add
push
ljmp
pop
cwtl
xchg
push
and
out
jecxz
test
sub
pushf
jmp
jno
sahf
pushf
test
enter
mov
inc
stos
mov
cli
js
movsl
popf
push
into
vinsertps
pop
cld
mov
cmpsb
jae
imul
push
adc
cmp
rorl
pop
sbbl
adc
add
add
jae
roll
rcrb
inc
lods
xlat
mov
es
stc
jo
movsl
lea
inc
adc
xchg
inc
and
in
mov
adc
lock
je
push
notl
xor
xchg
xchg
pop
lods
inc
sub
mov
hlt
fstpl
inc
filds
cwtl
jl
adc
rcrb
cmp
push
fimuls
sbb
shrl
stos
adc
lret
mov
inc
mov
add
gs
dec
sub
mov
xor
mov
pop
add
mov
cmp
andb
dec
mov
mov
ret
push
inc
xchg
addr16
shrb
repnz
insb
push
jno
and
adc
or
mov
icebp
idivl
paddusb
push
push
dec
mov
loopne
mov
out
or
xchg
stos
lret
mov
iret
dec
jmp
insb
add
sub
jno
inc
sub
fsubr
push
inc
stc
adc
mov
inc
jnp
jne
push
mov
lea
ds
scas
mov
xchg
cmp
aaa
xlat
mov
mov
mov
jg
ret
das
sub
mov
cli
hlt
lret
in
pop
mov
pushf
clc
jb
pusha
loop
jns
mov
cmpsb
out
push
sbb
and
imul
repz
gs
imul
rolb
xchg
dec
or
jp
or
addl
mov
pop
jnp
jbe
jns
push
movsl
push
sbb
xchg
inc
jp
jg
stc
sub
mov
add
cli
shll
fs
pop
pop
add
or
mov
mov
ret
mov
and
mov
jae
stc
and
sbbb
adc
jne
frstor
sbb
mov
gs
and
sbb
mov
imul
mov
and
sub
inc
inc
aaa
push
arpl
and
das
sbb
inc
in
aaa
mov
or
repnz
stos
cld
add
pop
or
cmp
ds
push
mov
cmp
stos
loopne
imul
mov
jo
insb
nop
pop
clc
clc
mov
fidivrl
cmp
cmp
out
out
lock
loope
or
add
sub
mov
xlat
clc
rcll
lret
inc
testl
jae
mov
fwait
sbb
xor
repz
push
cwtl
or
xor
imul
mov
inc
pop
out
cwtl
xor
aad
outsb
sbb
pop
ss
adc
sarb
add
push
mov
xchg
loop
mov
jno
and
inc
jle
addr16
fbld
sbb
ret
or
pop
in
sub
inc
mov
popa
stos
call
iret
xor
sbb
push
sbb
test
add
loop
pusha
mov
stos
or
dec
push
jb
sti
stos
mov
in
test
push
hlt
inc
dec
and
xchg
or
adc
sahf
sbb
lret
mov
clc
add
fwait
data16
sbb
outsl
gs
jbe
repz
sbb
fiadds
outsl
subb
push
ficompl
int3
test
push
out
cmp
adc
xchg
jle
xor
jo
hlt
call
stos
mov
mov
jnp
adc
jp
rcrb
out
xor
enter
sbb
fcompl
jmp
cmp
cwtl
push
sub
adc
push
mov
loopne
js
cmpsl
filds
rclb
shlb
dec
adc
scas
adc
xlat
inc
jg
sub
push
pop
bound
and
xor
rorl
out
jp
xor
sbb
or
sub
out
push
add
shl
sbb
or
in
fwait
push
add
adc
or
xor
scas
mov
in
add
not
pop
and
jne
jg
outsl
lea
and
mov
ret
sub
daa
int3
add
mov
jp
sbb
or
push
xor
divl
mov
cmp
xchg
dec
jb
mov
popa
js
jp
sub
inc
fs
aaa
nop
dec
popa
pop
in
outsl
pop
adc
imul
aad
sub
dec
adc
mov
jns
roll
lret
jg
enter
enter
out
or
inc
das
or
push
push
stc
int3
es
pushf
dec
idivl
push
stos
shl
jae
add
lret
call
testl
dec
mov
add
xchg
popa
cli
sbb
pushf
notb
fsubrl
sti
adc
cli
xor
pop
ja
adc
mov
mov
sbb
sub
aaa
imul
cwtl
js
pop
push
in
or
mov
sub
mov
push
fstps
mov
sarb
mov
push
ds
je
xchg
and
ja
add
cmp
dec
repz
push
jb
push
into
out
dec
jnp
sub
movsl
ret
pop
push
test
mov
xchg
mov
cs
ret
lock
enter
and
sub
hlt
fsubrp
dec
mov
repnz
sahf
add
iret
stos
test
clc
add
test
xlat
insl
mov
and
pop
lds
pop
mov
push
lea
subb
mov
adc
pop
imul
jp
shr
push
jno
js
loope
xlat
lock
out
mov
and
add
ja
jle
xchg
inc
mov
out
repz
jp
dec
pop
cmp
enter
shlb
loopne
sub
int3
cmp
xchg
mov
mov
push
cmp
out
mov
sti
lcall
cmp
repnz
fbstp
lret
push
xchg
in
mov
jnp
xchg
sub
in
dec
ss
rorb
lods
mov
mov
push
cmp
and
add
jecxz
imul
leave
movb
inc
subl
pop
out
push
out
sbb
mov
or
test
inc
dec
mov
sbb
jl
mov
jae
in
push
pop
movsb
inc
lcall
pushf
stc
es
pushf
and
pop
jae
imull
dec
cld
xor
xor
cmp
or
js
fstps
jnp
aaa
test
dec
sbb
movsb
and
fisttps
jnp
scas
xchg
xchg
loop
or
fcmove
shrl
push
loop
loop
jnp
xchg
sahf
pusha
dec
inc
or
mov
xchg
cmp
jno
xchg
negb
dec
enter
lds
xchg
and
ror
push
or
in
jmp
pop
lcall
jmp
sbb
test
push
mov
je
add
jo
cmp
pop
js
mov
or
mov
mov
add
pop
adc
popf
dec
sbb
mov
dec
xchg
ljmp
mov
lahf
lods
aam
lods
loopne
or
sbb
dec
mov
lods
adc
jmp
popf
clc
push
and
push
imull
xchg
outsb
leave
cmp
dec
call
enter
in
stc
sub
movsb
pop
xor
mov
call
sbb
cwtl
dec
cwtl
icebp
je
mov
jnp
fldcw
aam
xor
adc
aad
and
push
dec
fsubs
cs
mov
pusha
hlt
mov
and
repnz
add
clc
mov
push
outsb
out
test
in
dec
ss
enter
inc
ds
add
pop
stc
cmc
push
addr16
into
xlat
imul
jl
shrb
ds
jge
and
js
aaa
push
lret
mov
icebp
mov
testl
jae
push
mov
addr16
push
int3
jg
sub
mov
aam
dec
inc
cmpsb
xchg
std
cmp
ss
sub
cmpsl
sub
shrl
mov
push
adc
adc
jge
jb
cmp
sbb
out
inc
xchg
adc
and
imul
and
hlt
dec
incl
pushf
xor
es
mov
shll
out
repz
xor
push
mov
outsl
int
outsl
faddl
rcr
push
push
nop
daa
and
push
xchg
es
add
fstpl
inc
cvtdq2ps
mov
pop
or
adc
fistpl
adc
adc
push
and
pop
fninit
clc
dec
imul
sbb
in
xchg
movsb
mov
aam
scas
sbb
inc
es
test
or
movsb
pop
cmp
mov
aaa
and
iret
ss
out
imul
push
testb
stc
and
rcrl
mov
mov
push
testl
xor
cltd
pushf
and
mov
inc
fstps
cmpsl
jecxz
xchg
mov
imul
popa
add
inc
or
and
mov
jne
subb
jno
notl
in
adc
fistpll
lock
dec
cmp
xor
repz
jecxz
scas
cmp
scas
jmp
rorb
mov
std
or
sub
mov
scas
push
cmp
out
out
lret
xor
push
dec
lea
sub
push
or
xor
mov
sbb
pop
adc
stos
or
pop
pop
icebp
xor
mov
mov
pop
and
push
lret
cmp
xchg
mov
jl
stc
addr16
mov
xchg
rclb
ds
fistpl
cmp
hlt
loopne
inc
lret
leave
dec
cmpsl
xchg
mov
hlt
sbb
lock
mov
and
popl
aaa
incb
imul
mov
loope
dec
aad
pop
jge
repnz
pusha
adcb
lods
xor
mov
popa
mov
adc
cmpsb
into
dec
pop
sub
jle
push
pop
cmp
cmp
in
popa
push
scas
gs
in
or
mov
clc
scas
cmp
add
jl
movsl
xchg
xor
or
mov
adcl
jb
icebp
jae
cmp
lcall
jns
jl
sbb
inc
mov
push
sti
dec
sbb
das
jle
dec
xlat
sbb
adc
popf
aaa
add
sbb
aad
int
out
mov
leave
push
xchg
cmp
loop
add
xor
mov
or
incl
dec
imul
add
scas
sahf
cld
pop
insb
icebp
inc
call
mov
arpl
insl
pushf
addb
mov
and
push
mov
mov
xchg
imull
cli
push
enter
int3
pop
cmc
dec
fcompl
inc
xchg
lds
hlt
add
pop
pop
jbe
icebp
fwait
sbbb
das
aaa
or
into
mov
or
adc
shrb
dec
repnz
cmp
push
test
roll
sub
mov
cmpb
nop
out
lds
div
pop
cwtl
push
inc
mov
rcll
int3
pop
push
fldenv
popf
daa
cmp
fs
push
movsb
das
idivl
inc
sbb
daa
mov
into
lcall
jge
stc
stos
ljmp
cmpsb
and
pushf
and
cltd
imul
add
pop
or
dec
imul
inc
jle
lds
or
ret
sti
das
or
in
xor
in
in
out
inc
cmpsl
incb
dec
mov
sub
adc
mov
pop
jle
mov
cmpsl
inc
js
ret
movsl
jnp
les
fistps
imul
lea
adc
rcrl
pop
and
fnstsw
lcall
cmp
ficoms
and
push
mov
pop
in
push
jns
adc
pop
movsb
adc
cltd
push
in
popl
cmp
mov
add
ja
jp
push
push
mov
addl
and
xchg
xchg
andb
dec
mov
in
sub
inc
icebp
scas
cwtl
push
inc
jmp
or
mov
dec
lcall
fcompl
popa
scas
and
movsl
js
ja
std
adc
std
in
mov
das
mov
mov
aaa
inc
jns
or
push
aaa
aam
out
pop
fadds
je
hlt
mov
int
push
or
pop
sub
inc
mov
test
jge
clc
cs
sahf
pusha
mov
mov
sbb
minps
mov
fiadds
test
pop
cli
insl
push
cmp
add
cmp
sbb
ja
jo
data16
push
cmpl
shll
outsb
jno
test
push
js
in
cmc
lcall
sub
mov
scas
mov
dec
fs
inc
jae
adcl
push
mov
add
fisttps
xchg
cli
imul
or
mov
or
xchg
jb
cmp
addl
inc
bound
insb
fisttps
push
xor
mov
clc
orl
add
jae
inc
dec
ret
ret
arpl
sub
fs
cmc
push
aad
xlat
mov
out
sub
inc
mov
add
out
jmp
cmp
setbe
xchg
nop
jecxz
movsb
into
lcall
pop
mov
lea
bound
adc
stc
fwait
and
jns
xchg
leave
loop
and
cmc
push
mov
movsl
sbb
push
add
mov
or
stc
fists
mov
test
xchg
and
mov
jge
adc
mov
shlb
add
pop
popf
arpl
and
sti
pop
mov
sbb
push
mov
filds
bound
adc
aas
sbb
test
lret
xor
fisttpll
iret
shll
ja
xor
mov
push
aas
das
pop
popa
sbb
stc
icebp
mov
jbe
sbb
cmpsl
cmp
xchg
dec
popa
aaa
jo
cltd
hlt
loopne
dec
jl
dec
mov
push
shrl
fcomip
into
fstpt
inc
jo
cmp
or
xor
shlb
mov
rolb
repnz
mov
add
push
repnz
mov
cvtps2pd
insl
test
mov
xchg
test
bound
jb
movl
dec
outsb
cmp
pop
mov
mov
js
or
loop
mov
arpl
dec
test
xchg
imul
rcrl
add
jo
daa
pop
popa
jecxz
pop
push
sahf
mov
push
test
push
rorb
icebp
xchg
pop
jle
aaa
adc
pop
xchg
icebp
test
aaa
xor
jmp
sti
clc
push
das
in
dec
cmpsb
std
ljmp
xchg
rorl
bound
sahf
fldt
pop
sub
pop
mov
mov
mov
outsl
push
or
jecxz
sbb
add
aas
stos
pop
insb
in
movsb
repnz
jno
xor
cmp
lds
jle
push
das
mov
lret
sub
push
jnp
cmp
ss
add
jle
inc
data16
mov
adc
xchg
imul
int
pushf
pusha
rcrl
push
data16
popw
fwait
mov
rcr
ds
sub
loop
pop
push
adc
push
adc
jno
pop
jne
xor
test
xchg
cmp
stos
sub
lret
js
mov
mov
and
mov
mov
cmpsl
pop
movsl
push
ja
stc
stos
dec
push
sub
sub
adc
or
dec
mov
sarl
cmp
or
mov
out
xor
mov
push
sahf
add
in
xor
push
mov
push
xchg
xor
lods
dec
icebp
std
lock
sbb
dec
jge
icebp
sti
mov
aam
call
jb
fidivrs
lock
mov
or
jo
mov
outsb
lcall
stc
sahf
fidivrs
fs
out
dec
ljmp
lahf
adc
fnstenv
rcrl
mov
pop
test
mov
push
push
inc
aam
pop
stc
insb
lret
xor
mov
push
and
sarl
dec
pushf
push
lock
pop
popa
mov
inc
cmc
mov
mov
mov
fdiv
xchg
movsl
dec
pop
push
ds
pop
pop
or
cmp
mov
sub
fs
cmp
sbb
bound
mov
movsb
mov
xchg
inc
lea
push
mov
push
cmp
add
out
push
or
fld
cld
jbe
mov
cmp
push
sub
aam
xchg
sbb
loope
in
inc
add
jmp
add
sbb
es
fisubl
and
lcall
jmp
sub
arpl
aam
xor
pop
in
push
sbb
fldenv
xchg
jno
mov
test
dec
inc
rolb
in
mov
stos
sub
enter
cmpsb
inc
dec
sti
push
dec
or
scas
cwtl
test
mov
test
and
mov
decb
xchg
and
mov
xchg
sub
push
adc
mov
mov
add
aad
or
adc
cmp
aam
and
sub
push
dec
push
pop
scas
add
mov
xchg
pop
fdecstp
mov
add
mov
movsl
into
popf
xchg
pop
mov
mov
int
fs
inc
jg
and
je
jnp
pop
movb
push
sub
mov
cld
aad
out
out
call
pop
jae
adc
inc
ljmp
or
jp
adc
xchg
dec
mov
mov
in
mov
inc
jecxz
pop
adc
movsb
xor
int3
or
ret
out
shll
lods
cli
test
lret
inc
mov
push
dec
test
jl
fwait
and
out
popf
pop
pop
cmp
lods
cltd
loop
shll
sub
cltd
adc
jp
icebp
aam
push
out
fimuls
mov
pusha
jo
cwtl
cmp
sbb
jnp
mov
mov
mov
dec
cld
out
mov
in
mov
movl
pop
cmpsb
nop
adc
pop
jp
es
xchg
push
insb
ljmp
push
jnp
or
ds
xchg
lcall
shr
movsb
jns
icebp
lret
es
scas
test
pop
mov
icebp
cmpsl
fcompl
or
push
add
xchg
cmp
js
cmpsb
add
push
fucomp
int3
add
fwait
xor
test
mov
mov
cli
les
mov
mov
lods
repnz
popa
xor
dec
xchg
lock
das
fstpt
push
mov
cltd
test
dec
mov
insl
dec
or
mov
push
mov
aam
or
inc
test
arpl
and
cld
jns
popa
in
fs
jmp
xchg
mov
insb
mov
hlt
divl
out
adcl
pop
ret
dec
jo
in
mov
lea
pop
fwait
inc
in
aaa
pop
or
mov
push
mov
nop
cs
lcall
inc
in
frstor
imul
subb
lock
outsb
mov
jge
pop
mov
pop
xchg
arpl
in
call
popa
out
push
iret
imul
xchg
data16
sbb
mov
out
jge
mov
mov
push
dec
sub
cli
outsb
push
std
mov
das
jmp
jne
mov
dec
xchg
dec
imul
ljmp
inc
xor
cmpsl
pop
add
adc
lods
fiadds
cmp
dec
xchg
nop
cmpb
push
stos
or
sub
insb
popf
fwait
or
inc
addl
pop
fadds
push
add
lret
dec
cmp
in
push
and
adcb
adc
inc
dec
mov
mov
inc
mov
repz
dec
or
inc
cmpb
xchg
data16
loopne
mov
pusha
out
addb
add
out
mov
mov
frstor
insb
and
fisubrl
mov
sub
mov
xor
pop
mov
push
stos
arpl
push
popa
mov
xor
xchg
into
pop
cmp
fisttpll
cmpb
rclb
jg
jns
mov
xchg
add
add
add
mov
ficoms
cmp
sti
rcrb
dec
inc
fldt
test
daa
and
jecxz
cltd
jmp
push
enter
xchg
gs
lcall
xchg
clc
mov
jb
mov
pop
mov
je,pt
xor
cmpsl
sub
add
mov
sub
mov
xchg
inc
out
and
push
or
jmp
cmc
inc
and
popa
das
sbb
jp
cltd
dec
xor
jbe
std
scas
pop
js
push
dec
xchg
xlat
scas
out
dec
mov
mov
adc
and
loopne
sub
push
or
mov
jl
popf
cltd
movsb
jne
pop
mov
mov
test
mov
push
xchg
jle
sahf
dec
lock
mov
mov
pushf
fstpt
rcr
arpl
aas
ret
mov
mov
in
push
mov
inc
cmp
pop
rorl
ret
pop
fdivrs
std
stos
jl
mov
xor
xor
out
push
and
in
adc
xchg
jbe
inc
punpckldq
mov
push
pop
jo
jl
pop
jb
cmpsb
or
mov
icebp
sub
loop
std
xor
push
push
in
or
xlat
xchg
stos
pop
adc
in
loope
cli
jb
jbe
cmp
ss
or
add
sbb
jmp
mov
push
dec
or
pop
sbb
pop
sub
rcrb
xchg
push
pop
sub
fldl
add
push
xor
je
test
popf
test
jae
fidivl
movsb
jne
mov
and
icebp
or
xor
xor
ja
sarb
push
xlat
jns
inc
icebp
inc
inc
push
mov
fs
ret
xor
pop
test
ljmp
push
in
lahf
ficompl
add
out
xchg
cmp
sbb
adc
std
mov
mov
dec
adc
scas
adc
pop
push
adcl
clc
aas
ja
lahf
add
pop
ret
inc
aaa
aam
inc
scas
and
adc
add
loop
ret
add
dec
daa
xchg
outsb
movsb
mov
adc
mov
jg
push
das
hlt
jnp
shl
test
es
clc
push
in
xchg
sub
arpl
das
and
testl
fs
scas
push
xchg
sbb
dec
jge
aas
jmp
inc
xchg
or
dec
mov
outsb
inc
cmp
add
dec
cli
xorb
idivl
js
in
add
mov
pushf
push
iret
mov
adc
mov
push
adcl
lret
sub
mov
lods
es
clc
movsb
jbe
or
dec
mov
mov
push
cmp
cltd
movsl
out
int3
mov
adc
outsb
addr16
push
es
cmp
jbe
push
adc
mov
jns
nop
pop
icebp
aam
notl
push
mov
out
push
mov
in
lds
adc
ficoml
das
sbb
and
push
and
fists
sbb
stos
dec
xchg
mov
jbe
sbbl
adc
inc
fsubrl
mov
loopne
adc
and
inc
fmulp
mov
inc
int3
push
ja
test
gs
add
mov
jne
dec
mov
jp
fwait
push
loopne
insb
pop
pop
pop
xchg
push
mov
je
lcall
push
jno
loop
add
pop
push
test
scas
mov
int3
jne
movsl
push
fs
sti
mov
sti
pop
das
gs
jbe
pop
pop
out
clc
cs
or
pop
jecxz
cmp
xor
sbb
jno
dec
mov
out
add
inc
ds
sbb
push
cmpsb
lret
or
outsl
cld
aaa
mov
ss
cmpsl
in
cmp
cli
dec
imul
sub
sub
sub
jnp
sti
cwtl
xor
into
loopne
out
add
cli
mov
xchg
sub
mov
bound
fimuls
popf
dec
pop
test
dec
stos
shll
rcl
out
jle
sbb
mov
jbe
mov
xor
mov
mov
push
fs
cltd
les
pop
adc
pop
ficoms
adc
cmp
imul
inc
cltd
ret
repz
fmul
sub
adc
pop
movsb
imul
shr
fst
xchg
push
cmpsb
mov
hlt
xor
mov
fbstp
cmpsl
fnstsw
lods
arpl
mov
jmp
jnp
xchg
addr16
std
cltd
dec
in
lods
in
push
push
xchg
sbb
out
push
in
cs
mov
mov
jo
enter
mov
jl
enter
daa
mov
imul
mov
add
pushf
sbbl
popf
and
jo
push
jbe
rolb
mov
icebp
xor
and
mov
cli
push
push
subb
jle
or
or
cmp
out
mov
enter
or
push
cld
mov
repnz
scas
push
mov
xchg
xchg
pop
mov
dec
pop
or
dec
xchg
sub
xlat
aam
jbe
sbb
push
mov
leave
and
in
jne
lock
xor
cwtl
aaa
repz
fbld
cmp
out
out
ret
adc
mov
dec
adc
stc
cli
adc
call
sahf
mov
xchg
out
xor
movsb
sub
hlt
mov
ja
pop
aad
icebp
xchg
addl
xchg
mov
xchg
fxch
or
xlat
in
mov
add
imul
pop
mov
and
imul
push
fmul
jg
xor
or
jmp
dec
insb
inc
xchg
dec
mov
addr16
icebp
int3
arpl
ds
jns
shr
add
imul
or
stos
or
imul
mov
and
push
xchg
hlt
push
xlat
call
jecxz
call
mov
mov
mov
mov
jno
fmuls
push
xchg
insl
jle
icebp
cli
ret
inc
sahf
pop
notl
lods
xchg
lcall
pop
loop
pop
lds
jge
push
aaa
push
outsb
in
int
xor
ret
pop
shl
add
insb
sub
mov
test
fiadds
enter
add
mov
es
in
mov
pop
out
loope
add
jns
shl
cmp
sub
push
je
adc
jmp
out
or
repz
shrl
arpl
mov
and
out
push
mov
outsl
jno
or
pop
lret
push
pushf
ret
ja
rep
outsb
push
shl
jb
lcall
sahf
pop
mov
rcll
in
pop
lret
xchg
lods
ljmp
xor
mov
adc
mov
gs
sbb
push
lea
scas
lret
jecxz
sub
jns
inc
dec
sarl
push
ss
add
dec
std
cmpsb
adc
negb
add
out
bound
mov
aaa
andb
stos
out
jnp
jne
outsb
icebp
popf
cs
sub
cmpsl
out
repz
or
xchg
loop
pop
loope
dec
lock
aas
adc
pop
outsl
mov
out
add
pusha
fwait
mov
xchg
mov
push
cmp
loopne
inc
pop
mov
mov
lock
popa
out
sbb
push
or
or
jae
and
or
adc
inc
cmp
pop
lahf
in
xchg
stc
and
cmp
pop
and
cmpsb
mov
out
push
cmp
mov
push
lods
or
daa
aam
inc
std
js
std
cmp
mov
icebp
mov
xchg
adc
push
cld
push
push
mov
rorl
repz
sbb
ret
es
mov
cmp
dec
pop
or
lret
xchg
and
scas
and
in
sub
xchg
xchg
lcall
sahf
inc
rcl
xor
mov
xor
cmp
xchg
arpl
inc
inc
mov
adc
add
data16
aad
fucomi
jmp
add
es
or
fdivrl
arpl
sub
stc
lahf
popf
arpl
ds
fsubl
push
in
mov
cli
das
les
call
jns
xchg
in
mov
sub
inc
cmpsl
mov
or
cli
pop
addr16
push
push
enter
lahf
into
ret
add
fsubrl
push
mov
inc
add
ljmp
add
sub
mov
mov
aas
adc
mov
jl
inc
insl
pusha
cmc
arpl
int
lret
aad
xlat
xchg
adc
jb
adc
or
dec
or
sub
adc
into
leave
insb
test
and
in
dec
subl
push
roll
out
sub
push
or
inc
mov
add
mov
movb
lcall
and
inc
div
pop
fs
inc
roll
out
and
cmp
nop
jg
bound
xchg
pop
xchg
push
push
pop
pop
push
out
or
repz
jo
scas
fadd
das
out
cmpsb
mov
bound
cmpsb
cmpsl
pop
jne
cld
imul
xchg
cmc
fcmovnb
ret
pop
paddw
push
cmp
insl
gs
fsubrl
cmpsl
pop
adcl
rclb
push
pop
sub
mov
sbb
jp
push
stos
cmp
loopne
dec
push
icebp
jnp
imul
call
lret
icebp
add
dec
loopne
mov
dec
push
dec
mov
testl
mov
jo
pop
push
pop
mov
test
pop
inc
xchg
es
and
and
loop
xor
lret
jmp
or
and
push
lods
stos
mov
dec
push
adc
out
adc
add
xchg
jp
insl
inc
inc
push
es
sub
add
mov
mov
xor
in
clc
add
pmullw
out
mov
push
mov
aas
jo
cs
hlt
mov
test
imul
in
fdiv
dec
cltd
mov
pop
mov
inc
cmpsl
mov
xor
add
add
test
xchg
jo
cmp
xchg
mov
add
cmp
inc
dec
mov
movsl
gs
mov
leave
xor
push
jl
aam
xchg
test
or
xchg
sub
es
test
leave
or
adc
lods
mov
cwtl
xchg
out
push
lds
cmc
ds
sarl
push
mov
aad
xchg
pop
addr16
sub
add
xor
xlat
addl
inc
imul
not
push
fbld
jno
mov
ror
in
sub
pop
imul
lret
jb
add
out
cmp
add
mov
and
pop
push
loop
cmc
outsb
mov
jno
xor
imul
and
xchg
test
sbb
ja
test
sbb
adc
push
add
loope
lahf
jne
int3
adc
mov
xchg
repz
imul
hlt
adc
ja
push
mov
xor
push
test
cltd
add
cmpsl
ds
or
sbb
cmpsb
in
add
inc
inc
or
in
push
in
insb
mov
inc
add
fistpl
vpsadbw
aaa
cmp
mov
xor
test
xchg
xchg
jo
dec
enter
dec
inc
out
test
pop
in
sti
cmp
das
scas
sub
idivl
xchg
fld
xor
cltd
sbb
shll
sub
pop
mov
ja
icebp
lret
and
into
loop
repz
sub
fisttpl
fsubrp
mov
inc
and
xor
xor
adc
aas
test
call
add
cld
inc
pop
and
cmp
mov
push
cmpsl
daa
sbb
mov
movsl
and
inc
jg
idivl
repnz
ds
and
xor
cmp
pop
dec
cwtl
and
push
sahf
fidivl
jne
cmp
inc
out
sti
aas
sti
popl
mulb
or
mov
and
adc
lret
in
push
ss
iret
lods
sub
push
jl
iret
sbbb
push
sarb
dec
movsl
adc
addr16
repz
lcall
popf
push
mov
in
pop
sub
cmpsl
xor
pusha
mov
sbb
fs
fstl
jg
nop
lret
and
arpl
jae
mov
ret
orl
test
loope
lahf
outsl
xor
mov
aam
dec
xor
fldt
mov
lock
cs
add
movb
push
aaa
lea
or
je
pop
fsubrs
inc
ja
popa
out
loope
pop
add
sub
sarl
aam
cwtl
mov
sub
das
clts
push
and
stos
test
jb
jo
sub
mov
mov
push
cli
cli
pop
cld
call
pop
cltd
cs
fwait
and
sahf
xchg
jmp
mov
jle
pop
sti
mov
mov
out
in
into
incb
cmpsl
cld
jne
push
lock
pushf
popa
sbb
push
pmaxub
cmp
jge
or
aam
mov
dec
mov
mov
sbb
sbb
rolb
inc
mov
test
subl
dec
aas
add
or
add
loop
xor
cmp
std
sbb
outsl
add
or
lods
in
aad
js
and
xor
mov
jl
outsb
leave
push
iret
inc
jecxz
sbb
je
sbb
icebp
or
outsl
orl
and
cmp
mov
mov
inc
hlt
jbe
repz
xchg
and
loopne
xchg
or
mov
xor
pop
cmp
mov
pusha
sub
mov
xlat
sbb
inc
cwtl
mov
dec
jle
in
push
imul
jno
sub
mov
lret
pop
adc
shlb
movsl
rcr
cmp
mov
mov
adc
pop
push
push
push
sti
mov
add
jne
mov
sbb
push
inc
mov
xlat
add
inc
shlb
roll
divl
push
xor
push
adc
mov
jne
roll
push
adc
fs
ljmp
cmp
ja
inc
ds
jo
iret
cld
xchg
adc
test
mov
pusha
je
aas
stc
dec
push
dec
aas
xchg
dec
cwtl
dec
fiaddl
shl
mov
out
pop
cmc
push
pmulhw
push
pop
call
mov
pop
aam
or
cmp
mov
lret
and
icebp
push
andl
lds
add
and
sahf
ds
mov
pop
ljmp
lret
pop
imul
cmp
lds
cmpsb
mov
pop
cmp
push
es
cmpl
mov
add
icebp
mov
lods
cltd
adc
scas
adc
rorb
sub
subl
cli
or
and
repnz
xchg
dec
push
das
in
jecxz
mov
loope
mov
add
dec
aas
push
xchg
outsb
ds
xlat
mov
cs
outsb
xchg
int3
sbb
shlb
pxor
and
cli
adc
shrl
mov
test
lret
jmp
sti
pop
jmp
aaa
dec
cli
mov
popa
nop
fadds
incl
lods
jg
sbbb
jecxz
test
std
mov
gs
cli
test
mov
inc
insl
adc
push
adc
loope
mov
mov
xchg
int3
jl
cli
dec
scas
dec
and
add
mov
jno
add
xor
and
outsb
sub
inc
dec
sub
add
cltd
lret
mov
ficomps
push
loop,pn
pop
iret
or
jmp
jecxz
imul
xor
mov
adc
xchg
andl
lahf
call
mov
cmpsb
sti
pop
jb
mov
jno
icebp
out
jo
loopne
jge
imul
or
repnz
pop
cli
insl
push
das
call
mov
imul
pop
sbb
fdivrl
js
mov
cmpsl
dec
xor
adc
push
dec
imul
push
sti
add
test
xchg
jnp
pop
loopne
mov
mov
mov
scas
xchg
aad
jmp
jmp
sub
xchg
push
ret
ret
pop
lcall
push
cmc
lret
dec
mov
scas
lods
and
mov
mov
xchg
xchg
lahf
xchg
insl
aaa
aam
xchg
sub
xchg
mov
xor
lahf
repz
lcall
icebp
mov
in
loopne
adc
pop
mov
pop
clc
push
test
pop
pushf
jnp
test
shll
sbbl
mov
insl
pop
popl
mov
cmp
cmpsb
cmc
jno
enter
fs
stos
pop
cld
push
mov
aaa
jb
push
cmpsb
add
and
push
xor
sub
sarb
dec
xor
mov
fs
jmp
je
push
push
jne
sub
leave
jle
idivb
int
hlt
xchg
shrb
roll
and
inc
fisttps
shr
jle
inc
sub
fildll
aam
xchg
imul
pop
add
stos
hlt
jae
leave
popf
fimull
xchg
repnz
lods
lock
sbb
push
pushf
je
out
cmp
imul
xchg
scas
int3
pop
dec
push
loopne
xor
popf
inc
push
adc
das
gs
ljmp
add
cs
push
dec
inc
insl
pop
ja
and
out
and
mov
roll
addr16
mov
popf
jo
pop
sbb
lcall
add
fidivrl
icebp
add
div
imul
hlt
dec
dec
cmpsl
inc
mov
and
mov
dec
pop
data16
dec
repz
cmp
orl
and
mov
dec
mov
cmp
insb
pop
jb
icebp
cmp
sbb
aas
lods
or
movsl
mov
arpl
dec
jo
jl
mov
pop
ds
fldl2e
mov
andl
cmp
mov
cmp
sub
fdivs
push
aad
cmc
xchg
loopne
xchg
ds
add
add
cwtl
pop
mov
pop
dec
mov
xchg
lds
cwtl
sub
fdivr
or
out
jl
push
clc
test
fwait
sbb
lret
jecxz
sbb
mov
cmc
dec
mov
stos
push
xchg
test
enter
icebp
pop
xchg
lock
inc
mov
sbb
gs
pop
lahf
subb
pop
in
inc
stos
sub
pop
movsl
pop
pusha
lahf
fildl
xor
andb
cmp
cmp
cltd
sbb
std
or
dec
cwtl
or
sub
mov
bound
adc
pop
mov
decl
xchg
rcll
bound
jo
pusha
and
mov
rcrb
lods
jmp
loope
imul
ss
aaa
sub
xor
repnz
and
test
sarl
scas
sub
fs
jge
es
addr16
ret
in
in
push
clc
or
mov
pushf
jb
inc
ret
cmpsl
jecxz
leave
movsl
and
hlt
push
sarl
shrb
aam
test
loope
inc
popa
lcall
adcb
mov
xchg
subb
xchg
xchg
aad
popa
mov
fnstenv
shll
xor
xchg
ljmp
outsb
shll
sbb
roll
lds
ret
cmc
xor
sahf
cmp
ja
pop
adc
inc
fwait
add
cmp
repnz
dec
adc
push
mov
push
sub
shlb
in
movsl
hlt
movsl
in
lret
inc
push
mov
mov
jno
notb
inc
jo
xlat
cld
inc
cmp
icebp
cmp
imul
cmp
sub
or
je
pop
or
pop
andb
mov
out
js
test
jns
mov
dec
negb
clc
or
mov
insb
sbb
imul
fwait
clc
sti
mov
test
scas
lock
icebp
daa
and
leave
fnstenv
stos
imul
mov
pop
arpl
xchg
pushf
imul
out
enter
lock
jns
je
cmp
sti
jae
cmpsb
and
in
iret
mov
fwait
pushf
dec
clc
xchg
scas
loope,pt
mull
pusha
subb
pop
mov
fnstcw
push
jae
mov
add
sbb
loope
adc
and
pop
loop
xchg
lock
or
icebp
dec
cwtl
inc
push
push
add
ja
sbb
loop
mov
in
lahf
jo
dec
sub
arpl
dec
ret
mov
mov
jp
mov
cld
clc
test
mov
lret
push
fsubl
ret
ljmp
xlat
iret
mov
ljmp
add
loop
aas
dec
leave
addr16
test
leave
mov
aaa
xlat
es
shll
test
in
fistl
adc
pop
and
sub
leave
cmc
clc
fsubr
or
pop
mov
cmp
ret
mov
push
push
xchg
pop
and
cmpsl
xor
cvtdq2ps
mov
int3
in
sbb
fcomps
push
and
or
jmp
jl
bound
loope
jle
vmovntps
push
loopne
jecxz
mov
lahf
shll
mov
xchg
xlat
add
or
jmp
xor
ret
push
mov
xchg
sti
data16
mov
mov
shll
ja
sub
enter
jecxz
inc
or
push
stos
pop
repz
cmp
and
outsb
mov
mov
jg
fnstsw
int
pop
pop
adc
cmp
arpl
push
cmpsl
sbb
mov
pusha
or
sub
sbb
adc
xor
mov
ret
xlat
ret
hlt
in
xchg
sub
shll
in
add
out
gs
push
negl
es
aad
add
daa
in
cmp
jnp
sti
sbb
fnstsw
pop
xor
test
nop
insb
in
mov
insb
jae
push
adc
stos
inc
sub
jae
pop
lock
test
adc
pop
xchg
cmp
cmp
das
into
dec
pop
movsl
mov
mov
xlat
push
lock
in
cs
push
dec
xchg
xor
pop
inc
ret
test
sub
cmp
rorl
push
pusha
ret
mov
movl
aaa
call
jle
jns
or
cltd
sub
xchg
cmp
pop
sbb
cmpsb
inc
imul
out
jne
dec
push
sub
cmpsb
pushf
add
das
add
nop
les
cmpsb
movsb
into
dec
and
dec
insl
aam
cmp
mov
into
pop
and
inc
pop
sarb
add
sbb
loope
shr
xor
nop
lcall
cmp
fidivrs
ja
inc
jnp
xor
out
add
movsl
mov
jmp
dec
and
fcompl
cmp
imul
divl
lds
dec
mov
sub
addb
idivl
test
cld
fwait
jno
sbb
adc
imul
sub
pop
or
mov
dec
jae
jp
push
test
mov
inc
mov
pop
mov
jo
fwait
clc
dec
jmp
ret
jl
jbe
sub
in
mov
xchg
and
and
push
cld
jae
add
sbb
and
xor
std
xchg
xor
outsb
aad
cld
hlt
mov
adc
sub
bound
xchg
add
xor
mov
inc
insb
push
fwait
shlb
xchg
nop
inc
call
sub
cmpsb
pop
daa
imul
push
push
inc
jecxz
adc
mov
scas
mov
fists
push
into
popa
clc
imul
and
pop
cltd
rorb
jnp
inc
mov
fcoml
mov
cmpl
inc
adc
xlat
and
dec
or
rcrb
mov
es
and
push
lock
clc
xor
sub
mov
daa
sub
sbb
ljmp
xchg
movsl
ja
int3
in
adc
or
or
fbstp
inc
sarl
push
xchg
jne
es
pop
mov
push
mov
loop
popf
jmp
cli
lret
dec
or
enter
and
xchg
pusha
and
jnp
sub
sub
jns
stc
jp
test
dec
jo
sub
mov
dec
pop
mov
fs
sub
pop
or
xchg
sub
or
mov
out
pop
and
push
push
push
add
stos
into
fbstp
mov
add
adc
repnz
sub
sahf
sahf
jecxz
cs
test
fbstp
mov
rcrb
jne
aaa
lds
pop
and
cli
mov
cmp
and
nop
mov
push
xchg
dec
out
xchg
icebp
push
popa
jnp
insb
cmpsl
cmpl
call
mov
nop
in
mov
or
lods
test
cwtl
jae
mov
daa
or
iret
adcl
gs
mov
dec
add
or
jecxz
out
adc
jnp
ret
cmp
dec
inc
ds
cmp
and
adc
daa
stos
inc
jl
add
rcl
cli
xchg
xchg
or
stc
jmp
or
dec
pop
jae
das
test
lret
pop
loop
xchg
xchg
lcall
or
jmp
push
lods
xchg
inc
add
in
js
xchg
dec
in
test
lahf
mov
popa
inc
add
je
cmp
shlb
jne
pop
inc
sub
popa
xchg
mov
outsb
push
stc
shll
or
lock
adc
mov
or
inc
inc
dec
mov
arpl
sbb
cmp
fldl
sub
pop
std
ds
pop
dec
dec
jmp
or
add
popf
pop
imul
pusha
push
stos
js
sub
adc
cmp
mov
pushf
push
cmp
adc
mov
xor
pushf
movsb
adc
cmp
insb
mov
lret
mov
bound
stc
push
fstl
fsubs
sti
ficomps
jecxz
xchg
lock
stc
inc
add
scas
sbb
jb
imul
xchg
cld
shll
popf
jnp
pop
push
and
sbb
push
inc
pop
cmpl
out
lcall
add
mov
or
cmp
sbb
insb
mov
push
and
dec
xchg
shll
sbb
push
divl
bound
test
popa
data16
lds
lods
pop
and
adc
inc
push
inc
or
xor
movsl
clc
jno
xchg
mov
test
add
xlat
push
sub
cmc
xchg
leave
dec
or
mov
popf
testl
add
jbe
data16
dec
outsb
cltd
ds
pop
popl
ret
jle
lret
xor
gs
notl
lcall
xlat
pushf
mov
or
sub
pushf
ljmp
xchg
cmpsl
andl
sbb
dec
xchg
xchg
in
push
inc
sti
testl
lds
xor
imul
rcrl
or
std
fcoms
bts
jge
and
adc
test
int
popf
push
orb
add
das
scas
sti
sti
xor
pop
sbb
push
jp
mov
mov
movsl
in
loop
sub
call
out
jl
mov
lock
aad
xchg
call
adc
shl
mov
shlb
mov
lcallw
cs
pop
std
adc
fidivs
xchg
cmpsl
test
iret
out
mov
xchg
sub
dec
test
loope
lods
test
stos
in
imul
mov
popa
leave
jns
xor
cmpsl
subb
jo
pushf
ss
in
out
mov
aas
je
push
adc
push
push
ret
xorb
pop
add
xchg
mov
xorb
xchg
scas
sub
fidivrl
dec
mov
inc
psadbw
movsl
rorl
mov
stos
adc
clc
dec
mov
fcoml
cmp
inc
and
mov
sub
or
xor
ljmp
push
push
iret
imul
imul
mov
mov
popf
int
mov
imul
mov
sub
mov
mov
dec
push
dec
popf
push
gs
xchg
sar
stos
sbb
jno
imul
aad
mov
jbe
sbb
je
pop
inc
jle
inc
stos
jno
dec
aas
sub
outsl
ret
out
mov
mov
ffree
mov
outsb
pusha
in
pop
xchg
scas
push
orl
mov
xor
mov
sbb
aas
insl
pop
loop
mov
and
xor
jbe
add
test
adc
lret
lea
push
pop
ljmp
les
jge
pop
sbb
stos
cltd
scas
add
insb
negb
or
out
mov
xchg
adc
je
imul
decb
cmpsb
lods
push
jecxz
insb
fldl
in
xor
ss
aaa
xchg
mov
test
out
dec
cmc
test
lahf
or
dec
adc
movsb
pop
xchg
mov
mov
out
cld
outsb
mov
test
lret
icebp
jmp
lock
int3
icebp
or
push
rolb
xor
testl
and
cmp
mov
pop
mov
iret
push
imul
fucomip
or
or
cmp
xlat
mov
sub
jb
adc
mov
pop
insb
sub
fisttps
fldl
inc
jno
test
jnp
mov
or
mov
popf
adc
adc
out
out
fists
mov
or
sbb
fwait
and
add
sub
mov
arpl
sti
aam
and
into
and
stos
out
push
lock
out
jb
mov
sbb
std
sub
test
and
out
aam
mov
xchg
pushf
filds
mov
lods
or
add
mov
push
fs
mov
jmp
lea
sbb
ror
stc
imul
arpl
or
inc
mov
dec
sti
inc
insb
pop
pop
and
cmp
sar
fwait
scas
popf
movsl
ljmp
daa
shl
cs
or
xchg
insl
in
adc
inc
pop
cltd
inc
adc
leave
xchg
push
fadd
loop
out
aad
sbb
adc
pusha
pop
inc
in
xor
cmp
sbb
pop
test
loope
sub
push
sbb
imul
dec
lock
xchg
orb
xchg
pushl
sti
cli
mov
int3
loope
mov
or
stos
mov
mov
mov
shr
aad
xor
dec
jecxz
out
addl
or
pop
movsb
xlat
push
je
aam
movsb
iret
rcll
cmp
stos
xchg
adc
xchg
aas
cmp
lcall
je
cltd
adc
stc
xor
ret
fisubl
filds
rcrl
sbb
mov
pusha
stos
aam
nop
cmp
dec
and
push
and
ret
push
sti
inc
push
adc
outsl
test
xchg
arpl
cmp
insl
fcoml
mov
adc
ljmp
cmp
mov
sub
or
int3
inc
testb
push
and
lock
gs
jle
mov
push
fstps
dec
outsl
mov
js
sbb
filds
cmp
push
inc
enter
in
aad
insl
adc
inc
in
out
into
pop
cmpsl
mov
mov
aas
je
rorl
sub
adc
je
fnsave
test
sub
add
xchg
sbbl
fidivs
xchg
fldcw
mov
data16
out
addb
add
jns
push
adc
sbb
mov
sbb
pushl
cltd
and
cmp
rcr
sahf
scas
mov
mov
inc
jb
xchg
inc
mov
out
das
pop
lock
bound
ret
and
pop
fcmovb
xchg
shlb
imul
xor
xor
sbb
xor
data16
mov
lahf
add
pop
xor
push
pop
fneni(8087
xor
lods
imul
rcl
mov
pop
dec
mov
mov
pop
push
mov
xlat
fistl
dec
lcall
aas
cmp
out
fisubrl
ret
or
mov
lea
outsb
inc
cmp
push
incb
push
aas
inc
or
mov
iret
leave
mov
xchg
cmp
xchg
daa
dec
sbb
cmp
xor
loop
dec
shll
pop
mov
ret
aaa
ret
ret
pop
xchg
pop
dec
xchg
scas
shrl
popf
stos
enter
mov
sbb
dec
jb
sub
xchg
pop
jl
mov
cwtl
push
pop
and
sub
test
add
hlt
in
imul
inc
mov
ss
sub
mov
in
iret
sahf
adc
cmpsb
or
fcmove
mov
xor
sub
push
xor
out
xchg
mulb
push
sbb
or
call
xor
sbb
sbb
lret
mov
dec
call
mov
adc
jae
repz
in
sub
add
fisubs
mov
lret
repnz
or
and
lcall
test
adc
test
adc
xchg
dec
xor
repz
scas
xor
and
jae
dec
les
sub
scas
mov
negb
das
pop
mov
lods
ret
roll
imul
insl
or
and
mov
orl
pop
or
jne
jmp
jne
rorl
js
fldenv
or
fists
inc
stc
aam
int
mov
std
addr16
dec
cmp
pop
in
mov
test
in
dec
jae
sub
fs
sbb
push
xchg
adc
rcr
lods
ret
das
stos
xlat
cmp
jns
or
fistpll
xor
jl
cmp
ja
xor
xchg
cmp
roll
xor
loopne
jae
cmpsb
mov
cli
mov
in
jnp
cmp
sbb
lcall
lahf
cmp
xchg
jl
inc
mov
bnd
insb
mov
fisubs
jb
ljmp
mov
cmp
das
pop
imul
ss
dec
push
push
dec
pop
mov
lahf
xchg
jecxz
xor
dec
imulb
fldcw
cs
imul
sub
test
xor
mov
dec
inc
pop
int
lret
mov
inc
jmp
cmc
mov
cmp
push
mov
sub
out
or
or
xor
xchg
sbb
std
xchg
adc
icebp
outsb
ljmp
pop
cmp
pop
mov
imul
ja
mov
pusha
shrb
add
adc
add
add
repz
cld
pop
pop
ljmp
or
dec
mov
sbb
sbbl
leave
push
push
subb
mov
inc
nop
jg
xchg
inc
stos
loop
movsl
adc
pop
dec
mov
xchg
and
pop
in
push
addl
sub
pop
push
lahf
jge
sbb
lret
lcall
pop
inc
fistpl
fs
xor
mov
in
testb
sbb
push
adc
addr16
cmp
push
js
out
mov
andb
ret
xchg
jl
jne
andl
sti
imul
add
rcll
and
jb
fidivs
lret
or
xchg
jmp
imul
cmpsb
cmpsl
aad
jmp
nop
or
pop
scas
inc
stos
mov
xor
pop
inc
inc
lret
fdiv
addr16
lods
cs
mov
xchg
add
daa
jmp
scas
xchg
xchg
adc
inc
test
imul
movsl
scas
in
inc
loope
fistl
mov
stos
adc
scas
cs
mov
jg
movsb
mov
pop
mov
sub
push
iret
push
xchg
in
xlat
out
cmpsl
jb
jae
mov
daa
test
mov
sub
adc
shll
nop
ror
adc
insl
dec
sub
dec
ljmp
xlat
mov
fsin
jle
jmp
xchg
stos
lcall
inc
xchg
sub
enter
jl,pn
cmc
in
add
shrl
test
sub
or
add
mov
inc
jnp
pop
cs
std
leave
push
lods
repnz
lock
add
test
js
mov
mov
ljmp
lret
stos
inc
rolb
aas
push
jnp
lret
or
rcrb
mov
xor
lret
in
jbe
cli
ffree
pop
jl
addr16
jbe
dec
cmc
punpcklwd
jo
iret
outsl
fwait
in
enter
xchg
movb
cmpsl
pushf
fcomps
ljmp
xlat
sbb
popf
push
std
jb
pop
ds
enter
and
xchg
pop
mov
sub
outsb
or
lret
cmp
mov
mov
into
stos
ret
mov
mov
inc
cmp
cltd
rorb
lods
scas
popa
fmulp
jbe
scas
jle
push
movsb
pop
xorl
lods
add
or
mov
push
aad
inc
push
xchg
call
xor
sarl
shlb
xchg
or
jb
leave
rol
negb
jg
js
xchg
dec
or
add
sub
cmp
pusha
pop
xor
ficoms
ss
arpl
loopne
int3
sub
inc
xchg
mov
lods
jae
xchg
icebp
mov
push
pop
std
ret
fidivrl
in
insl
stc
jnp
xor
in
mov
lea
adc
aas
fyl2x
push
aas
sar
dec
pop
xchg
sub
mov
mov
jo
leave
sub
sti
xor
mov
inc
in
jle
js
mov
icebp
ret
mov
into
cmp
push
test
mov
sbb
mov
or
jge
int3
ret
push
mov
inc
cwtl
xchg
and
testb
or
lahf
sbb
stc
and
jb
mov
repnz
mov
mov
push
daa
ficomps
sbb
sarb
outsb
xor
push
ja
mov
movsl
imul
movsl
pop
insl
test
je
sbb
push
jnp
out
inc
jle
adc
inc
jecxz
test
sti
sti
sbb
cmp
lret
mov
xchg
js
jae
mov
mov
mov
test
xchg
insl
push
mov
iret
mov
or
imul
pop
enter
dec
les
and
pop
xor
jnp
dec
in
jne
cmp
push
sub
pushf
ret
loope
insl
xchg
stc
fidivrs
rep
les
jmp
mov
xor
mov
mov
sub
push
mov
pusha
xor
lcall
dec
testb
mov
adc
jle
mov
shrl
adc
adc
repnz
clc
aam
xchg
std
mov
inc
test
push
xorb
mov
or
aam
sub
sahf
add
insb
xor
and
call
sbb
adc
inc
push
add
add
add
jns
dec
por
pop
dec
add
testl
repz
and
add
clc
ret
pop
nop
mov
jae
push
push
add
fnstsw
add
cld
inc
pop
cmp
cmc
jge
aad
xlat
xor
cmp
lods
adc
xchg
xorl
add
gs
xchg
or
gs
sub
xor
call
mov
gs
daa
shlb
push
sti
jg
rcll
mov
shlb
sub
fs
pop
gs
mov
dec
cmp
xchg
cli
mov
mov
pusha
mov
insb
ret
jbe
popa
mov
inc
xchg
xchg
pop
scas
xor
ljmp
push
mov
dec
adc
pop
cli
pop
mov
push
or
outsb
pushf
rcrb
sub
and
js
push
lret
xor
pop
or
jmp
es
cmp
push
cmp
js
mov
loop
and
jnp
es
dec
push
fnclex
cmp
cltd
push
dec
inc
imul
push
xor
push
test
mov
fstpt
repz
sub
cmpsl
divl
xchg
popf
cwtl
sbb
icebp
leave
mov
leave
outsb
mov
cmp
pop
sub
xchg
out
jge
push
fiaddl
adc
lret
dec
inc
inc
mov
inc
sbb
fcompl
sbb
inc
repnz
mov
xchg
pusha
call
adcl
ss
xchg
movsb
mov
rcrl
icebp
imull
out
roll
or
mov
clc
pop
rcll
mov
data16
sti
in
adc
daa
mov
push
jecxz
pop
add
lcall
ds
fidivs
xor
sub
xor
loope
test
pop
or
inc
shll
sub
outsb
orb
ret
add
sbb
push
shll
test
inc
dec
stos
push
jmp
mov
sbb
inc
xor
cmp
ljmp
loop
add
fisubrs
clc
mov
shll
inc
mov
insl
fidivl
push
je
pop
xchg
sbb
mov
je
jg
jae,pt
cs
pop
add
in
cmp
sbb
sbb
push
jno
mov
iret
or
push
push
loopne
pop
cwtl
jb
pushf
add
pop
xchg
js
and
xor
or
push
dec
mov
mov
xor
js
out
lds
mov
mov
fwait
cld
cwtl
mov
add
loopne
test
dec
dec
dec
push
sub
push
das
rcrb
int3
mov
push
xchg
push
mov
or
push
mov
or
inc
mov
aam
and
stos
push
ret
ja
push
addl
mov
in
int3
xchg
mov
xor
pop
scas
icebp
jecxz
fiadds
rcrl
mov
inc
push
stos
iret
fidivrs
test
test
adc
addr16
and
lahf
test
sarl
push
insl
stos
jge
fbstp
shr
std
cmp
daa
pop
out
jno
xchg
adc
lods
and
cmp
inc
loop
int3
mov
mov
and
scas
lcall
xchg
pop
fsubs
jb
stc
add
jge
repnz
insl
nop
lods
push
lret
mov
int3
hlt
pop
incb
test
notl
repz
mov
stc
aas
jp
mov
push
dec
and
aam
nop
jg
or
es
push
test
mov
cmp
jecxz
shlb
sbbb
jne
mov
mov
test
adc
xchg
stos
loope
sahf
bound
or
pop
mov
subl
dec
xor
jo
mov
xlat
cmpsb
insb
adc
sti
sbb
stos
pop
jns
and
rcll
repz
scas
jecxz
int
sub
rolb
test
push
es
push
repz
ret
out
mov
push
inc
enter
xor
sub
adc
aaa
mov
cmp
dec
lods
stc
and
out
jle
not
mov
mov
pop
cli
lea
fisubrs
rcl
pop
dec
push
and
sbb
loope
pop
lods
mov
jmp
add
cs
cltd
addr16
mov
in
clc
cmp
cmp
push
push
inc
andl
or
int
rcll
xor
gs
int3
adc
and
push
pop
and
cmp
cld
out
fnsetpm(287
stos
add
repnz
lods
call
push
mov
pop
or
das
ljmp
dec
cmp
into
xor
les
shlb
or
loope
push
sub
shll
stc
and
dec
push
leave
cmp
xchg
sbb
loop
jbe
aad
scas
roll
ret
pop
adc
mov
pop
cmpsl
cmp
jne
jl
les
outsl
aam
xor
shrl
les
frstor
lock
inc
movsb
inc
dec
pushf
test
lret
sahf
daa
xchg
sbb
loope
out
hlt
mov
ds
add
mov
and
stc
jge
pushf
lret
inc
lahf
xorl
insl
mov
xor
cmp
lret
test
mov
jg
movsl
loopne
push
add
repz
xchg
fnsave
in
cmp
jge
notb
and
inc
push
jns
or
mov
testl
dec
cld
xchg
popa
mov
stos
nop
push
mov
out
shlb
pusha
stos
dec
scas
lahf
pusha
adc
enter
mov
xchg
sbb
adc
out
fisubrl
xor
cmc
out
mov
inc
shlb
fwait
pop
xchg
pop
and
movsb
loop
add
sbb
imul
lock
aaa
sbb
in
dec
xchg
loop
and
movsl
mov
jp
mov
shll
sub
xchg
or
int3
mov
icebp
jle
push
pop
mov
es
mov
cmc
adc
sbb
push
push
mov
pushf
sub
mov
xchg
js
pop
dec
sahf
push
pop
xchg
jmp
push
inc
out
pop
xchg
cmp
mov
xchg
movsl
daa
or
xchg
adc
jl
sbb
shl
lods
pop
push
loope
pop
daa
add
nop
push
mov
jmp
jnp
pop
adc
popf
icebp
xor
sbb
xchg
and
jmp
adc
repnz
and
adc
cmpsb
add
popa
and
or
sub
sbb
xlat
mov
push
push
dec
jne
pop
jmp
sub
outsl
mov
lods
pop
mov
in
cmc
dec
mov
shll
cld
enter
sbb
adc
adc
or
mov
cmpb
in
arpl
sbb
loope
je
cmp
mov
or
out
add
jmp
mov
cld
fnstsw
cltd
gs
jmp
push
xlat
icebp
pop
clc
xorl
and
dec
rorl
popa
or
mov
xor
decl
rorl
orb
fwait
lret
add
push
push
and
inc
divl
sbb
inc
stos
fsubp
out
inc
daa
insl
fmul
ds
sbb
xlat
fadds
and
mov
cmpsb
jecxz
pushf
je
jp
mov
cmpsl
jg
inc
pop
sti
mov
xor
shlb
aam
std
popl
sbb
shll
jnp
jmp
or
sti
insl
outsl
jp
aaa
mov
mov
iret
jb
pop
cmp
push
js
xor
in
lods
jl
mov
lods
or
fs
sub
jae
xchg
sbb
fmulp
fptan
mov
in
ret
std
lock
sub
add
mov
jge
cwtl
mov
cwtl
int3
test
int3
pop
lret
adc
xor
mov
dec
aas
out
pop
test
cmp
ja
icebp
cmpsl
and
pop
dec
call
xchg
popa
pop
cwtl
gs
cmp
and
sahf
repz
cmp
mov
mov
lock
leave
scas
inc
jno
das
mov
jo
or
add
push
jmp
dec
xchg
mov
adc
inc
adc
sbb
ret
push
mov
push
fistpll
sbb
arpl
rorl
cs
jbe
jge
pop
loopne,pt
sbb
sub
mov
rorl
popf
inc
mov
mov
mov
xchg
pop
into
xor
mov
pushf
sbb
fsubl
inc
lcall
cmp
push
push
sahf
push
push
addl
pusha
aam
jbe
imul
fmuls
sahf
add
cmp
jp
rdmsr
cmp
mov
nop
adc
sarl
cld
cmpsl
loope
shlb
adc
dec
mov
std
fldt
ret
mov
test
in
pop
in
jns
xchg
mov
es
call
dec
push
dec
cmp
push
mov
adc
or
jmp
mov
mov
mov
mov
jl
orb
es
mov
sub
add
push
sbb
mov
sbb
lret
xchg
pop
xlat
loope
in
cmp
clc
dec
int
and
arpl
popa
mov
pop
mov
mov
pop
popa
int
enter
dec
push
movl
andl
and
xlat
in
jp
inc
xchg
cmp
stc
pop
cltd
cmp
mov
adc
lock
inc
cwtl
and
cmpsb
es
mov
mov
data16
test
scas
pop
or
mov
jne
xchg
ljmp
test
scas
jns
imul
clc
push
ud0
xor
hlt
testl
mov
xchg
xor
dec
dec
mov
xchg
test
xchg
inc
sti
js
int3
mov
pop
clc
pop
sub
mov
mov
push
mov
test
sbb
sub
mov
mov
xchg
or
pop
jns
xor
pop
and
adc
imul
imul
enter
sub
popa
mov
sbb
rolb
dec
cld
adc
mov
sbb
lea
aaa
pop
sbb
push
repz
movsl
fimuls
daa
jne
pop
push
fwait
insl
xlat
ss
fisttps
pop
push
test
add
pop
and
xchg
ljmp
in
loope
mov
ret
fsts
lods
inc
ljmp
and
inc
jo
fdivl
sub
mov
movsl
push
leave
lret
pop
dec
mov
pushf
psrlw
adc
testb
push
push
addr16
mov
hlt
fidivs
sbb
mov
arpl
lcall
ss
mov
sub
out
mov
fdivs
out
aas
push
outsl
adc
xchg
add
out
xchg
cmp
cmp
sbb
push
jb
pop
mov
sbb
lret
lret
mov
push
inc
pop
loop
arpl
adc
outsl
in
ja
dec
and
movsl
inc
pushf
pushf
push
mov
out
inc
add
push
sub
dec
dec
sar
dec
fst
mov
dec
xchg
lret
sub
dec
sub
or
mov
lods
add
xchg
mov
pop
test
push
jne
bound
dec
and
stos
sti
jp
pop
pop
enter
data16
jnp
ds
inc
out
xor
scas
or
in
and
jae
xorb
and
xor
mov
cmp
rcr
es
inc
mov
test
ror
mov
jns
add
mov
ror
rorl
es
mov
sbb
lcall
jmp
orb
sbb
gs
movsl
int3
and
xchg
ds
jmp
lret
xor
or
jecxz
test
aaa
jns
int
cmp
push
push
pop
xchg
or
outsb
addr16
outsl
inc
insb
ja
xlat
sbb
inc
cmpsl
movsb
add
adc
adc
mov
jl
pop
movsb
xchg
jbe
int
push
or
pop
mov
pop
adc
movsl
adc
in
push
addl
dec
or
fmul
mov
rcl
xor
out
mov
lret
out
fnstenv
jl
ds
mov
and
and
fbstp
push
int3
mov
xlat
aad
sbb
test
inc
in
jecxz
sub
push
cwtl
add
adc
ja
mov
mov
sbb
mov
mov
leave
inc
aas
dec
xor
add
pop
ret
scas
flds
daa
pop
or
push
out
fidivrs
stos
fs
aam
repz
fnstsw
mov
push
xchg
arpl
xchg
mov
int
pop
and
insl
aad
sub
cwtl
mov
in
cmp
lahf
inc
cmp
cmpsl
enter
in
cmp
sub
push
adc
jp
shlb
mov
enter
aaa
arpl
add
cmp
aaa
mov
or
dec
adc
decb
mov
cmc
aaa
ja
fistl
push
xor
stc
jae
xchg
out
jge
loope
out
lods
sub
cmp
les
or
and
sbb
mov
mov
enter
fildl
fsubl
xor
xor
js
push
rolb
mov
mov
mov
aas
mov
sbb
stc
push
add
mov
hlt
mov
or
mov
sti
shll
adc
leave
daa
sub
dec
ljmp
ja
fnstsw
sbb
scas
in
dec
hlt
stos
test
sub
out
mov
push
out
xchg
insl
xor
xchg
pop
push
out
orb
arpl
iret
mov
test
jp
sub
pop
jbe
cmp
jecxz
lds
adc
rolb
cs
lcall
and
jne
mov
mov
mov
scas
lods
push
sub
mov
mov
adc
pop
subl
cmp
lds
or
pop
pop
xlat
adc
sub
movsl
mov
sbb
fiaddl
rolb
sbb
cmp
lcall
inc
loopne
icebp
jae
lods
or
mov
lret
dec
sbbl
dec
icebp
pop
stos
movsb
sarb
mov
push
loopne
pop
xchg
out
loope
scas
cltd
ja
adc
out
jmp
sarl
stos
fbstp
inc
mov
jno
cmc
sub
je
call
jb
nop
inc
mov
push
mov
sahf
add
mov
cmp
and
add
sahf
xchg
mov
iret
mov
loop
inc
lret
sbb
dec
mov
iret
sub
aam
jle
push
push
or
mov
cmc
nop
and
fwait
stos
adc
xchg
dec
push
mov
and
pusha
lahf
into
pop
dec
push
jno
pop
sub
sbb
xchg
xor
xor
jmp
aas
jle
mov
mov
insb
push
fcmovu
sub
mov
inc
iret
pushf
push
push
test
aad
mov
adc
clc
inc
push
mov
daa
into
lock
sbb
dec
and
scas
stc
jbe
stos
sbb
ret
mov
pop
dec
inc
mov
adc
xchg
inc
daa
dec
cmp
test
add
fistpll
iret
lret
adc
stos
sahf
cmp
out
adc
adcb
or
dec
test
dec
imul
adc
out
sub
es
dec
fidivrl
lea
outsb
xor
insb
mov
scas
push
pop
sub
push
cmc
adc
fcom
xorb
push
add
mov
xor
cmp
xor
xbegin
scas
sti
push
inc
orb
shl
leave
sahf
dec
int3
fwait
rcr
dec
or
and
movsb
jns
xchg
inc
lods
inc
out
push
iret
sbb
js
cmp
lods
push
sbb
mov
call
inc
push
mov
lret
hlt
sub
push
dec
cs
sub
jne
mov
xchg
mov
jle
aas
fdivs
xchg
in
fwait
sbb
jecxz
inc
xchg
mov
pop
xchg
jmp
jg
push
push
cmp
and
sbb
pop
in
aas
imul
clc
out
lahf
loopne
outsl
jecxz,pn
int
repnz
add
and
inc
adcb
lods
cld
push
inc
cli
fistpl
push
test
add
iret
subl
mov
bound
into
add
xchg
loope
pop
ret
sbb
push
inc
push
add
cmp
sahf
jg
fimuls
jp
subb
cld
sub
call
sub
in
imul
lock
les
inc
jno
add
push
mov
out
jae
push
adc
stos
fnsave
add
lea
pop
inc
int3
adc
push
mov
insl
es
jo
jnp
xchg
inc
adc
sub
aas
sub
xchg
stos
int3
jbe
mov
adc
rolb
cmpsb
xchg
mov
jp
mov
jnp
cmp
adc
pop
rolb
int3
iret
add
cwtl
and
mov
xor
dec
repz
push
test
cltd
test
mov
decl
lret
out
mov
cmp
test
xor
aaa
jp
or
movlps
fwait
scas
insl
mov
std
xor
xor
and
sub
mov
mov
test
adcb
mov
lret
or
xorl
fistps
je
sarl
cli
popf
movsl
sahf
cwtl
loope
cmc
test
loopne
ss
xchg
pop
int
or
fmuls
xlat
sub
stos
cmp
idivl
cld
sub
into
xchg
inc
dec
mov
dec
lret
pop
xchg
sub
push
push
add
imul
dec
repnz
sub
sbb
pop
push
add
gs
pop
dec
es
and
les
lahf
inc
jp
shl
dec
hlt
or
dec
push
push
or
inc
mov
push
jmp
lods
or
loopne
mov
cltd
lds
popf
jmp
int3
mov
cmp
out
hlt
xor
popf
dec
jg
test
pop
jl
pop
cld
in
aam
jp
or
ds
mov
in
cs
sub
fnstenv
loop
add
test
sti
xorb
and
xor
lods
pop
jp
mov
jno
bound
test
push
ja
imul
xchg
xor
jns
dec
adc
mov
insb
jle
xchg
cld
int
cmp
stos
mov
aas
push
aad
adc
lahf
cmp
bound
inc
cs
das
dec
xchg
cmpsl
rolb
mov
add
push
dec
xchg
dec
imul
push
pop
push
pop
adc
cmpsl
fstpl
movb
inc
scas
xchg
cmp
cwtl
jle
decb
sub
es
loopne
inc
push
clc
addl
mov
push
or
inc
hlt
sub
arpl
push
pop
popa
sub
jge
sti
mov
lcall
es
hlt
jb
jge
stos
insl
mov
xor
fwait
xchg
push
mov
mov
or
dec
jne
dec
sbb
fidivl
push
inc
test
out
inc
rcrl
loope
das
xchg
xchg
jmp
imul
dec
cli
dec
loop
in
repz
arpl
aam
ds
orb
sub
test
daa
out
rcll
sbb
mov
adc
push
jns
mov
inc
decb
and
xor
int3
inc
addr16
insb
out
rorl
repnz
int
xchg
test
in
shrl
sbb
jge
mov
inc
es
int
xor
fs
mov
adc
lret
repz
cli
pop
or
push
aad
sti
xchg
lcall
mov
ror
push
pop
insl
daa
lea
or
inc
mov
adc
je
outsb
jae
popf
and
xor
mov
movsl
pushf
push
xlat
lcall
insb
addr16
call
dec
icebp
notl
and
xor
sbb
and
add
mov
adc
scas
inc
and
xchg
mov
aad
adc
xor
clc
add
dec
mov
push
sti
nop
clc
jns
sub
push
cmp
jbe
jns
les
mov
dec
dec
and
jle
mov
iret
lret
jb
or
lret
pop
mov
lods
call
cwtl
outsl
mov
clc
mov
jnp
cmp
in
cwtl
inc
fdivrp
fwait
jo
or
icebp
pop
mov
mov
cmp
test
jge
out
pop
fdivrl
mov
ljmp
mov
xor
and
nop
dec
es
sbb
test
sub
jle
cmc
aas
mov
pusha
xor
push
push
mov
stc
test
lods
xor
sbb
pop
in
repnz
adc
pop
lret
mov
mov
mov
rorl
cltd
outsl
addr16
fnstsw
or
cs
pop
lds
popa
dec
and
in
xchg
out
or
push
sahf
shr
pop
dec
lods
addr16
xchg
mov
imul
mov
imul
push
xchg
cs
flds
xchg
rcrl
mov
sar
sbb
mov
ret
loope
sbb
movsb
or
sbb
imul
hlt
sti
addr16
subb
xor
adc
sbb
and
mov
mov
sbb
test
dec
xor
mov
xlat
js
je
mov
xor
mov
pushf
mov
pop
fs
inc
sbb
sub
mov
push
cwtl
cmpsb
dec
jno
cmp
rol
pop
mov
stc
or
inc
add
lods
inc
xor
adc
je
pushf
aaa
sub
fisubrs
js
adc
cmp
xchg
out
inc
add
gs
push
popa
hlt
stc
int
xor
mov
push
push
lret
in
xlat
mov
push
jecxz
and
ds
dec
lahf
lret
or
jb
or
xor
dec
pop
sbbl
pusha
push
and
xchg
sub
stos
push
mov
push
and
dec
xor
mov
cmp
jg
mov
cltd
lret
xchg
dec
divb
sbb
inc
mov
lret
inc
jmp
mov
insb
insb
xor
dec
push
pusha
fsubl
shl
ret
js
inc
jle
and
mov
jecxz
mov
jo
xorb
mov
mov
bound
dec
addl
movsl
out
fwait
scas
sub
mov
inc
call
push
cmp
cmp
shll
repz
dec
pop
in
dec
sub
jmp
xor
and
lret
repnz
cmp
subb
js
jo
add
sahf
mov
ds
fisttpl
fimuls
prefetcht0
mov
pusha
loopne
and
mov
pop
xchg
push
sub
push
cmp
dec
loope
dec
jecxz
sub
and
out
cmp
imul
push
ret
int
pop
mov
push
jb
pushf
int3
cs
sub
push
mov
fs
cs
mov
das
roll
in
sbb
arpl
jnp
and
sbb
shl
xchg
push
fidivrs
std
mov
xor
stc
fs
add
sbb
stc
mov
cs
mov
incl
jb
pop
sahf
mov
int3
xor
fidivrs
lds
jb
inc
lods
int3
pusha
scas
loopne
fs
int3
out
nop
cmc
dec
shrb
popa
cld
int
and
mov
add
lock
cld
xor
push
in
sbb
daa
mov
mov
jp
xor
repnz
adc
sbb
aad
iret
or
mov
mov
jns
mov
fdivp
sbb
mov
aas
loope
sbb
mov
jg
mov
ss
sbb
nop
dec
dec
popf
mov
aad
jne
pop
and
xor
push
and
into
icebp
addr16
int
fcmovnu
inc
ds
and
xor
xchg
lods
push
push
lcall
push
bound
mov
cmp
xor
and
adc
adc
add
xor
cld
and
das
lret
dec
cmp
mov
loop
push
push
dec
jns
mov
adc
xor
mov
sbb
fimull
cmc
lds
fildll
xchg
hlt
mov
jg
test
loope
jge
add
lods
add
lds
in
aaa
int3
popa
inc
mov
lea
cmp
sub
lds
loope
arpl
jle
jge
adc
lea
adc
outsl
inc
mov
shlb
loope
leave
or
loop
idivl
xor
mov
sahf
int
clc
add
stos
ret
sub
frstor
sahf
out
imul
and
popf
jno
mov
aas
push
mov
insb
ja
xor
mov
cld
rcrl
iret
mov
adc
cmp
bound
std
jne
pop
pop
repz
fcomps
ss
cs
aam
xchg
inc
xchg
mov
jno
in
ja
scas
inc
sarb
push
mov
rcr
mov
int
fwait
mov
outsb
and
sub
xor
xchg
push
dec
mov
test
and
sbb
adc
xorl
fdivs
fs
xchg
in
jae
cmp
data16
into
inc
mov
sub
dec
rolb
pop
jge
dec
pushf
xchg
pop
in
jns
mov
pop
cmc
fdiv
mov
cld
adc
jecxz
dec
lret
int3
ja
fldenv
jle
js
inc
cmpsb
loope
adc
add
stos
cmp
sbb
add
push
hlt
pop
icebp
scas
fsts
fmul
sti
cmp
xor
xchg
jo
pusha
ja
adc
pop
add
loop
and
cmp
jmp
pop
cmc
ljmp
jle
jns
cli
clc
jnp
psrad
decb
cli
jb
jecxz
mov
jmp
stos
pop
lcall
push
out
add
stos
dec
lret
rcrl
popf
pop
xchg
pop
jmp
mov
out
mov
je
cltd
jle
or
push
mov
cmp
fistpl
es
push
in
out
cmp
jno
mov
mov
lret
in
iret
cld
add
or
fsubl
outsl
mov
xchg
mov
pop
jae
xor
mov
jl
lahf
push
and
or
lods
outsb
sbb
call
std
cmp
mov
or
xchg
loop
xor
or
sub
sti
xchg
xchg
js
push
ljmp
xchg
and
mov
out
in
inc
bound
lea
push
cmp
fstpl
in
lock
xchg
aad
pop
shll
and
mov
fdivrl
gs
stc
push
in
insb
mov
adc
adc
push
fimuls
and
and
movsl
std
imul
cli
stos
std
sub
and
addl
stc
gs
push
dec
mov
dec
mov
int
or
ja
arpl
das
outsl
fbstp
cs
dec
jbe
pop
leave
mov
mov
mov
cltd
inc
xor
popf
call
jecxz
sbb
aas
int
imulb
dec
cmp
sbb
repnz
push
arpl
adc
jecxz
mov
addr16
inc
push
test
sub
rcrb
mov
jmp
push
dec
out
jno
int3
mov
xchg
in
lret
mov
add
hlt
push
sub
lret
push
push
addl
xor
or
mov
dec
mov
mov
jne
mov
stc
movsl
push
inc
and
adc
inc
faddl
xchg
jmp
pop
lds
lea
xchg
sbb
test
sti
jno
or
out
mov
aaa
and
jns
pop
jp
mov
flds
xchg
out
sub
adc
mov
bound
ja
cltd
es
cmp
sbb
mov
add
test
scas
in
adc
mov
ret
lea
xchg
mov
dec
fmull
jmp
sti
dec
aaa
mov
cmpsb
pop
jl
cmp
xchg
xchg
jl
pop
notb
push
adc
mov
aaa
ret
push
xchg
mov
jo
iret
mov
sub
mov
inc
cltd
sti
mov
sub
int3
outsl
pop
mov
sbbb
jns
jmp
inc
les
mov
retw
and
jb
int
mov
mov
ja
and
sahf
xorb
sub
cmp
iret
cmp
icebp
xchg
hlt
dec
jno
mov
cld
cwtl
icebp
add
dec
dec
pop
loop
stos
dec
dec
nop
fidivrs
mov
inc
lods
lods
add
push
das
adc
and
aas
lahf
mov
jo
push
insb
arpl
mov
xchg
jae
into
lods
add
xchg
out
xchg
cmp
repz
jl
mov
ret
int3
mov
dec
pop
in
adc
fwait
push
repnz
adc
test
cmp
div
nop
push
loope
mov
adc
loope
imul
xchg
int
out
std
fisubrs
jge
cltd
idivl
test
dec
lret
in
popf
shlb
push
loop
into
loope
imul
rcr
into
inc
mov
mov
cmp
popa
adc
je
dec
test
mov
mov
jnp
and
nop
jl
mov
pop
subb
and
test
pop
aam
ljmp
mov
mov
cmp
imul
stos
shrb
cmp
mov
aam
aas
adc
xor
shrb
cmc
fsubr
and
jmp
mov
sti
mov
xchg
inc
push
fldenv
mov
dec
shll
into
cmc
jbe
insb
jo
mov
and
ljmp
mov
mov
aas
cs
loop
jge
ret
ss
sbb
insb
aam
fwait
addr16
or
mov
adc
sti
ds
pop
out
sbb
pop
dec
test
cmp
repz
jmp
push
mov
jle
dec
sub
insb
mov
stc
push
fwait
dec
push
jns
push
gs
dec
es
subb
sbb
adc
xor
pop
lahf
jle
hlt
pop
inc
repz
inc
add
aam
pop
or
or
aam
loope
mov
jae
sbb
push
dec
jmp
stc
repnz
or
push
cmc
shlb
push
mov
pop
lcall
out
dec
mov
dec
add
add
mov
and
push
mov
dec
sub
pop
xor
aas
sub
xor
cld
dec
into
xchg
arpl
jecxz
in
jp
adc
fisubs
outsl
mulb
mov
shr
add
pusha
xchg
inc
test
aaa
aam
jp
outsl
mov
and
test
mov
adc
mov
dec
shlb
out
pop
jle
jp
ljmp
insl
sbb
shlb
into
xor
scas
jne
int
mov
in
jno
mov
sbb
pop
aas
jne
inc
ret
outsl
ds
dec
xchg
cmp
ss
ret
sbbl
and
cld
pusha
push
xor
dec
mov
jns
mov
add
nop
mov
pop
arpl
and
xchg
mov
mov
add
dec
jge
push
call
clc
xchg
xor
xor
insb
dec
pop
inc
jno
sbb
cmp
int3
sar
imul
dec
dec
ret
lcall
push
outsb
cld
or
in
stc
lret
out
rolb
into
daa
pop
lcall
dec
in
xor
movb
int
mov
fwait
mov
shll
rcll
sub
ret
lcall
fiadds
sub
jmp
stc
pusha
push
push
outsb
iret
mov
in
and
and
mov
jmp
sbb
push
sti
mov
int3
jl
jnp
mov
aaa
push
add
or
mov
or
mov
ret
stos
dec
or
inc
nop
and
sbb
xchg
xchg
into
pushf
test
add
lret
scas
push
push
shll
push
xchg
and
test
jne
das
ret
jmp
mov
call
test
sub
insl
adc
add
std
xor
fistl
mov
dec
sbb
adc
lahf
lods
imul
in
push
jb
or
cmp
inc
loop
mov
das
fcomi
imul
xchg
out
ljmp
cltd
mov
jp
fsubrs
mov
cmp
testl
mov
loop
and
out
sbb
xchg
mov
aaa
push
addb
js
jecxz
push
ss
jecxz
das
or
rolb
xlat
xchg
loopne
stos
jecxz
and
and
pusha
dec
pusha
test
addr16
pop
mov
int3
or
notl
fwait
inc
pop
and
ds
fisubrs
cmp
stc
adc
mov
cld
mov
fldcw
bound
sbb
cmp
clc
repz
lret
sahf
mov
test
sahf
mov
xor
mov
jg
ja
dec
cmp
cmp
and
cmc
sub
inc
sbb
sbb
shrl
inc
sahf
jge
lret
jmp
mov
push
cltd
adc
fadds
into
ret
shlb
sbb
aaa
int
jp
or
fwait
xchg
push
sub
add
mov
inc
out
pop
xchg
int3
movsl
scas
cmpsl
mov
or
out
push
fidivrs
jg
ljmp
inc
movsb
test
cmp
mov
xchg
jl
stos
inc
pop
mov
push
inc
aam
jb
cmp
inc
imul
inc
xchg
pop
jl
out
xor
add
add
stos
int3
fdivrp
dec
push
lret
cmp
lea
xor
in
iret
xlat
jle
push
dec
inc
ds
cli
adc
cmc
out
pop
int
hlt
shl
mov
sub
sbb
aaa
mov
inc
mov
jmp
sarb
stos
cmpsb
shlb
pusha
xor
andl
testb
sub
cmp
insb
sub
imulb
mov
idiv
lods
cmpl
neg
or
jae
add
inc
out
xor
stos
je
cwtl
fldl
fs
aas
sub
pop
pusha
rcrb
adc
xor
mov
mov
pop
aas
push
mov
test
sub
aam
jne
adc
mov
lods
jo
mov
push
mov
mov
lret
dec
shll
cmp
xchg
pusha
aas
jne
mov
loop
push
push
fisttpll
in
mov
je
cmp
mov
call
pushf
stos
mov
xchg
dec
and
inc
aas
jg
repz
imul
das
sbb
push
aas
push
ret
mov
xchg
xlat
daa
daa
inc
addr16
xor
mov
nop
cmpsl
stc
xchg
int3
xchg
adc
and
cmp
rorl
mov
insl
int
inc
imul
sub
das
sbb
sub
push
inc
into
rol
or
push
push
rcrl
lret
scas
xchg
jns
stc
cld
inc
in
movsl
mov
push
pop
xchg
sub
xor
mov
test
sar
or
stos
inc
jecxz
or
or
cld
and
mov
ret
cmp
fs
sbb
ds
xchg
push
lret
or
in
cs
jp
push
mov
or
ja
jge
push
inc
dec
jno
adc
adc
mov
pusha
pusha
lods
or
insl
les
push
ret
pop
pop
mov
dec
out
mov
mov
loop
jp
in
xor
cltd
push
or
sub
je
scas
ficoml
aam
call
shlb
inc
bound
xchg
rcrb
jecxz
cmpsl
and
sub
ds
popa
cmp
scas
gs
dec
negb
mov
xchg
in
insl
jae
xchg
rcrb
cmc
js
iret
xchg
lret
rolb
jo
xchg
sarb
cld
xchg
push
loope
loope
test
movsb
pop
arpl
and
dec
mov
xor
jecxz
pop
call
xor
pop
ss
or
ror
outsl
add
jge
aam
cwtl
xor
adc
loopne
and
mov
fs
mov
jle
andl
ret
rol
inc
pop
mov
dec
xchg
jne
addl
fdivs
int3
inc
cmpsl
sub
inc
cmp
sarl
mov
xorb
push
rol
sbb
cmp
xchg
aas
pop
add
dec
xchg
in
jne
fsub
xchg
add
sub
and
je
iret
leave
mov
nop
lcall
mov
adc
std
mov
sahf
inc
ljmp
push
imul
add
and
jb
popa
imul
xor
or
push
shlb
test
icebp
mov
mov
bound
dec
fcmovnbe
mov
test
inc
jecxz
sbb
pushf
fstpl
out
and
pop
shlb
icebp
or
repnz
sub
push
mov
add
in
cld
lret
pop
push
daa
pop
js
jae
push
lcall
xchg
insl
mov
lods
out
shrl
test
cmp
cltd
inc
leave
stos
add
jns
sbb
pop
pop
flds
sbb
jl
ret
or
std
mov
sbb
sub
sub
mov
push
inc
or
mov
icebp
das
push
imul
test
xor
cmp
in
pop
das
jno
pop
jmp
rcll
popa
jns
push
out
sbb
inc
sub
xor
jmp
roll
mov
loop
pop
mov
push
mov
into
ja
inc
call
xor
cmp
xor
or
push
cli
rorb
inc
shlb
dec
dec
cmp
adc
scas
hlt
ror
mov
lods
or
ljmp
cmp
sbb
lods
cmp
repnz
repz
inc
lcall
sbb
push
js
cmp
test
loope
or
jo
int
cmpsl
mov
movsl
loopne
mov
xor
mov
dec
movl
std
mov
jae
adc
xchg
in
bound
sbb
insb
fnstenv
das
popa
sbb
test
je
lcall
jno
xchg
cmpsb
jb
mov
aad
mov
into
inc
fisttpll
mov
movsb
cmp
inc
and
inc
sbb
pop
jl
lods
mov
add
nop
mov
rclb
popl
jp
test
int
and
repnz
add
jecxz
mov
dec
js
andb
add
rolb
or
push
xchg
xor
pop
or
cld
and
xlat
or
shrl
test
pop
mov
arpl
dec
pop
mov
pop
mov
sbb
mov
add
jns
out
popa
das
dec
pop
mov
js
pushl
sub
rol
ror
sub
rcl
mov
loopne
mov
pop
pushw
mov
lods
adc
in
and
out
or
es
sub
stos
adc
mov
pop
imul
push
movsl
stos
xchg
shrl
enter
out
push
mov
setb
lcall
dec
dec
sbb
fnstenv
xor
or
push
inc
sub
aaa
movl
hlt
insl
xchg
scas
rorl
leave
sti
jae
cmp
mov
clc
push
cmc
xchg
mov
xchg
stos
gs
insb
mov
xchg
int3
and
jbe
shrb
loopne
les
gs
push
lret
ds
mov
mov
mov
and
fisttpll
adc
loop
dec
sbb
cmpsb
and
cmp
ljmp
addr16
xchg
add
mov
mov
or
add
jae
add
test
cmpsl
js
mov
adc
cmp
pop
and
insb
xchg
inc
fldenv
inc
lds
negb
jae
jmp
sub
inc
loope
inc
jb
aad
jl
ret
xchg
leavew
loopne
iret
xchg
je
fsubrl
and
fld1
sbb
push
les
jl
dec
mov
pop
ss
push
mov
inc
shrl
fisubrs
dec
cmc
or
fldcw
lds
loopne
call
cmp
sbb
mov
aad
lret
movsl
call
mov
es
xchg
xchg
out
mov
sbb
lret
mov
jno
ss
sub
xchg
jecxz
cmp
inc
inc
int3
xchg
mov
add
mov
lock
mov
rcrl
jne
jecxz
mov
adc
sub
out
mov
test
xchg
in
jecxz
inc
aas
addr16
xor
mov
roll
lcall
sbbl
add
mov
lods
jae
jl
rolb
lcall
mov
jo
pushf
jmp
jo
inc
addr16
and
adc
inc
incb
ret
mov
testl
testl
adc
mov
dec
push
and
mov
arpl
or
sbb
mov
arpl
aam
push
daa
lea
push
mov
aaa
repnz
std
daa
adc
add
add
sbb
rcl
cmp
sub
incb
out
addr16
add
sahf
sbb
fwait
sub
ds
mov
xchg
push
js
pop
das
mov
jmp
mov
fidivl
mov
xchg
cmp
mov
jle
push
inc
adc
ds
outsl
movsl
push
and
push
push
scas
daa
mov
leave
jmp
dec
rcl
xchg
rorl
cmp
ror
ja
fcmovu
mov
pop
lea
sbbb
outsl
out
jns
adc
je
xor
mov
pop
jmp
shll
jne
or
inc
fdivp
enter
mov
jo
mov
or
pop
push
lret
or
mov
std
sbb
testb
inc
mov
sub
mov
imul
in
mov
aas
or
fistpll
add
scas
xchg
cmp
bound
mov
rorb
mov
lds
movb
add
or
adc
stos
adc
cmpb
xchg
mov
xor
xchg
mov
out
popa
dec
jnp
js
xlat
xchg
imul
clc
jbe
dec
adc
jnp
gs
stc
inc
or
push
xchg
test
and
dec
xor
mov
xlat
add
inc
fsubrp
mov
in
cmovb
mov
movsbl
aad
iret
dec
es
fwait
mov
es
inc
outsb
shll
and
mov
adc
add
add
push
int
sti
sub
imul
mov
sub
in
pop
orb
cmpsb
or
mov
push
punpcklbw
ret
repnz
out
push
push
ja
adc
je
outsb
push
cmp
xor
ret
and
xchg
cmp
ficoml
inc
add
clc
xor
insl
movsb
dec
fsub
cld
test
movsb
cmp
dec
sbb
repz
mov
adc
adc
cmp
scas
test
sub
sub
fcomip
dec
cmp
xchg
sbb
subl
arpl
mov
push
jns
outsb
std
cmpsb
mov
pop
jns
std
pop
sbb
std
adc
inc
fcomp
adc
push
mov
push
xor
nop
jae
cmp
pop
mov
dec
je
jae
pop
out
dec
push
in
cmp
adc
enter
movsb
outsb
sub
outsl
mov
inc
lret
ljmp
xor
mov
inc
popf
mov
loop
pop
mov
cmpsl
mov
xchg
nop
out
mov
in
out
add
mov
mov
or
xor
xchg
sbb
mov
loopne
fmull
popf
and
lcall
jecxz
scas
pop
dec
fisttps
mov
clc
cmp
cmp
cld
dec
das
cli
and
push
rcrl
mov
cltd
sbb
pop
jg
scas
push
xchg
nop
cmp
outsl
push
fcompl
jne
xchg
cmpsb
jb
add
sbb
pop
nop
imul
sub
imul
push
xlat
test
and
mov
xor
in
or
mov
lcall
mov
push
arpl
mov
sub
enter
sub
stc
popf
ss
push
jp
cmp
inc
jno
or
fisttpll
or
cmp
fdivrs
lcall
data16
xchg
scas
lret
cmpsb
int3
cmp
int
test
lock
divl
cli
push
mov
xchg
mov
jbe
dec
pop
clc
adc
sbb
outsl
xchg
push
push
adc
out
clc
inc
pop
mov
sub
test
sub
mov
outsl
adc
outsl
cmpsb
dec
clc
mov
and
sbb
mov
dec
into
aad
xor
sti
sti
test
push
fmul
xor
lcall
jae
push
std
imul
jns
pusha
push
inc
jbe
das
pop
imul
repnz
in
adc
in
pop
xchg
outsb
loopne
int3
xchg
cmp
or
add
add
push
pop
cli
sub
or
sbb
mov
int
and
mov
adc
mov
out
in
mov
adcl
mov
test
sbb
js
mov
inc
and
call
add
adc
aad
sbb
fcmovnu
mov
aam
mov
xchg
pop
ds
xlat
pop
jne
pop
mov
pop
and
pop
jae
cmpb
cli
adc
pop
adc
fists
dec
add
repnz
cmp
test
mov
xchg
push
fisttps
mov
insl
and
xchg
mov
add
push
jae
sub
je
push
xor
inc
mov
and
mov
cmp
fisttps
out
jnp
pop
call
adc
dec
pop
add
std
add
and
adcl
cmp
lahf
int
imul
lock
inc
nop
lods
stc
lret
mov
movsl
notb
rolb
data16
sbb
pusha
pop
dec
iret
push
xchg
mov
pop
popf
rorl
add
cli
xchg
fdivs
notl
or
pop
ss
or
mov
mov
pop
ret
lods
inc
push
movsl
sarb
fcomp
insb
ljmp
jp
rcr
scas
aam
pushf
and
xchg
dec
xchg
mov
mov
pop
inc
xchg
dec
dec
jbe
dec
les
or
sbb
xchg
inc
lcall
aam
pop
mov
cmpsb
inc
pop
mov
mov
int3
jno
mov
je
fimuls
or
dec
xor
mov
ret
and
into
js
lods
dec
pop
add
ret
and
cmp
ss
push
sahf
dec
aad
ljmp
fisttpl
xor
jnp
jecxz
imul
lock
popf
jg
mov
ret
aad
arpl
mov
movsb
mov
cmp
repz
ficoml
xlat
enter
adc
adc
call
dec
jno
in
cmp
sbb
aaa
incl
xchg
jne
inc
or
jle
add
push
pop
lahf
mov
data16
sub
leave
mov
loopne
and
jne
mov
fldcw
cmp
int3
aad
pop
jae
dec
out
sub
jmp
mov
addr16
sahf
aas
dec
mov
pop
or
sub
dec
inc
mov
mov
into
mov
mov
fbld
add
fstpt
lret
mov
mov
movsb
adc
or
cmp
cmp
push
out
pop
mov
jp
je
sbb
lods
inc
or
cmp
cltd
das
call
inc
sahf
out
cs
and
and
sub
add
insb
xlat
stos
add
scas
lods
cmp
lret
xor
les
jnp
jo
mov
aad
jnp
adcb
fiadds
cmp
cmp
std
mov
mov
xchg
adc
inc
movsb
outsl
jl
lock
leave
fimull
fiaddl
xchg
adc
movsb
mov
imul
movsb
mov
mov
mov
pushf
rol
test
popa
outsl
fbld
pusha
cmp
fisubs
scas
push
pop
mov
lret
xchg
ds
shr
fdivrl
out
call
cmc
out
pop
je
sarl
or
and
adc
add
popa
ljmp
out
sub
and
mov
mov
dec
and
mov
cmpsl
pop
outsl
push
sub
mov
adc
sar
scas
test
cmp
into
inc
xor
jb
and
fidivl
xor
xor
push
add
add
or
shrl
jg,pt
mov
push
mov
shrl
les
adc
pop
rorl
mov
cli
lret
mov
xlat
mov
fisttps
stos
ret
mov
pushf
insl
and
pop
and
pop
xor
aas
jg
mov
jae
test
ret
mov
push
lods
push
outsb
sbb
inc
xlat
gs
push
stos
ret
stc
add
mov
pop
sti
push
jecxz
sbb
shll
mov
mov
shlb
cmp
and
mov
fs
scas
jae
jmp
shll
repnz
add
mov
push
cli
and
push
xchg
test
out
imul
and
jle
inc
or
mov
outsl
stos
das
sub
mov
lret
cmp
fstps
inc
dec
pop
loopne
sub
lock
jnp
inc
shll
add
iret
push
jo
addr16
imul
dec
mov
and
adc
es
ret
test
pop
aad
or
xchg
add
inc
xchg
pop
adc
test
inc
or
xor
mov
loop
mov
add
jo
in
push
out
imul
jbe
push
sub
pop
inc
iret
jmp
add
push
fsin
adc
push
adc
mov
mov
xorb
pop
fsts
mov
xchg
mov
lock
out
ret
push
outsb
push
inc
inc
pop
cmp
adc
adc
add
dec
cmp
xorl
jg
shlb
mov
pusha
mov
dec
shlb
fisttpll
xchg
mov
push
cmp
out
pop
outsb
mov
mov
jb
loop
jle
jno
shr
pop
pop
and
xor
repz
xchg
adc
in
jnp
adc
pop
and
sub
pop
shl
mov
push
mov
cmpsl
iret
cmp
fadd
jns
or
xor
insb
sub
movsl
pop
jle
mov
scas
sbb
aas
loopne
ljmp
sub
jecxz
stc
pushf
dec
addr16
jbe
popf
test
idivb
sbb
jbe
lods
jecxz
push
jb
adc
repz
loope
sbb
push
ficoml
or
out
xlat
sub
add
sbb
repnz
out
and
loop
sub
mov
lods
js
movsl
mov
outsb
hlt
cmp
outsb
and
mov
cmpb
jp
out
adc
movsl
xchg
push
cmc
and
jmp
mov
xor
in
shl
dec
dec
dec
sti
jbe
fs
outsb
push
test
add
stos
je
jge,pt
movsb
int3
push
sub
dec
fnstcw
pop
clc
imul
mov
push
cmpb
ja
pop
pop
and
xchg
mov
pop
fcompl
imull
xchg
add
push
in
mov
push
mov
mov
pop
mov
in
push
fstpt
addr16
mov
add
xchg
adc
xchg
pop
stos
daa
pop
inc
test
repnz
and
addl
incb
je
lds
popf
add
cmpsl
cmp
iretw
shrl
cmp
mov
cmp
loop
scas
out
movsl
push
push
mov
sbb
lahf
test
adc
ret
pop
imul
xlat
and
les
stc
stc
jno
stos
sbb
sbb
cmpsb
loop
xchg
push
mov
jp
call
sbb
stos
xor
adc
rcll
test
add
xlat
std
out
jae
movsb
mov
mov
dec
jge
arpl
jl
jne
fildl
ret
sbb
jo
rorl
cmp
in
out
test
mov
test
adc
cmp
jno
arpl
inc
addr16
lret
fwait
lock
lret
xchg
shll
inc
ror
je
add
push
arpl
mov
jne
aas
adc
testl
cmp
xchg
push
repnz
and
xlat
subl
and
add
clc
add
xchg
add
mov
cmp
cmp
jg
movsl
sbb
fwait
or
cmc
outsl
jb
jmp
in
into
push
js
movl
pop
divb
sub
mov
mov
scas
and
lret
aad
jae
push
divl
mov
add
sbb
cmc
mov
or
pop
mov
es
adc
pop
add
adc
jmp
cli
out
pop
inc
sbb
jne
sub
mov
aad
shll
in
add
jg
pop
ja
cwtl
sahf
cmp
roll
jp
dec
or
ss
mov
cmp
aad
lods
xchg
dec
ljmp
pmaddwd
fnstcw
inc
loope
pop
xchg
xchg
sbb
and
out
pop
sub
sti
sbb
jae
cmc
addl
sbb
adc
xor
inc
sub
push
pop
jg
add
cmp
cmp
lret
inc
push
inc
dec
in
inc
dec
repz
loope
les
scas
outsb
or
sbb
pshufw
sbb
cld
jecxz
out
cmpsl
shrl
adc
sti
mov
scas
mov
inc
jns
sahf
ret
push
es
int3
fidivs
std
mov
fcoml
insb
in
sarl
and
ret
mov
ficomps
in
jg
xchg
test
fcmovbe
mov
out
cmp
iret
dec
adc
mov
daa
mov
es
cmp
sbb
adc
arpl
call
test
jmp
loope
gs
and
inc
outsb
cmp
cmc
shlb
iret
push
cmp
scas
xchg
mov
fbld
repz
sub
lock
clc
out
cld
ss
aam
scas
dec
clc
into
dec
mov
gs
mov
or
cmp
out
mov
popf
mov
popa
cmpsl
arpl
jbe
and
js
xor
lods
jecxz
cwtl
dec
pop
pop
movsl
imull
ret
ja
xor
push
adc
mov
fistpl
loop
cmp
sbb
repnz
cmpl
pop
jecxz
pop
add
rcl
lret
push
and
lods
sbb
scas
push
repz
dec
sbb
icebp
sbb
push
dec
xor
adc
dec
inc
inc
repnz
jnp
jnp
sub
out
pop
lret
incb
hlt
leave
jo
xchg
ss
loop
popf
xor
shrb
cmp
pop
vcomiss
mov
nop
jmp
sbb
iret
xchg
jb
pop
pop
or
icebp
lea
jmp
aaa
or
jno
rol
jo
movsb
xor
mov
cmp
and
pusha
movl
rcl
push
push
and
std
sub
fisttpl
dec
out
je
loopne
cs
adc
adcb
push
cli
lahf
fildl
pusha
dec
xor
mov
cld
dec
enter
cmp
sbb
or
dec
cmp
out
int3
insb
mov
xlat
in
pop
es
sarb
in
jae
lods
lret
cmp
mov
adc
rcrb
cmpl
push
sub
push
test
jo
jbe
push
dec
jmp
xor
insb
inc
xor
and
fimuls
test
mov
mov
mov
jb
mov
ror
cmc
repnz
or
xchg
and
mov
lret
adc
stc
data16
in
int3
inc
or
out
fbld
jecxz
lret
inc
or
push
inc
add
add
mov
or
push
sub
sbb
shr
mov
out
push
testb
push
mov
iret
movsb
sub
xchg
cmp
insb
mov
cwtl
rcll
adc
stc
stos
dec
ja
lret
in
dec
cli
adc
mov
pop
sub
and
mov
lds
mov
mov
stc
mov
test
notrack
sub
jecxz
sbb
mov
xor
notl
repz
pop
mov
sbb
icebp
in
jo
inc
mov
pop
adc
pop
fcmovb
aas
xchg
hlt
push
test
push
iret
outsb
pop
xchg
inc
in
mov
ret
incb
jns
outsb
xor
adc
xchg
mov
jle
push
sub
pusha
aad
push
inc
pop
in
fildll
xor
hlt
pop
fildl
mov
pop
xchg
mov
adc
jle
or
jns
sub
les
daa
xor
add
pop
inc
les
cld
cmp
cmpsb
xchg
or
jbe
aaa
sub
orl
movsl
pop
or
push
stos
movsb
cltd
cmp
pop
popf
cmpsl
xchg
insb
rol
stos
insl
and
xchg
cmpsb
movsl
push
mov
push
mov
cmpl
cs
cmp
fidivrl
pop
mov
bound
outsl
cmp
pop
hlt
lret
sbb
rclb
mov
mov
popf
das
cli
add
and
mov
jne
cmp
add
test
or
leave
dec
jbe
movsl
ljmp
outsl
xchg
mov
leave
or
stos
add
bound
xchg
in
mov
adc
jge
inc
cmp
sbb
and
mov
divl
mov
sarl
int3
scas
and
cwtl
lret
add
jnp
in
les
out
aad
jmp
stos
ds
int3
popf
sahf
stos
ret
or
test
je
or
dec
push
push
sahf
add
mov
inc
push
daa
test
pusha
imul
pop
daa
pop
adc
mov
sbb
and
mov
pop
out
insl
daa
sub
aam
test
jbe
mov
gs
loopne
xchg
out
out
adc
arpl
push
dec
cmp
push
mov
mov
xor
jo
mov
ret
stos
dec
dec
mov
pop
out
repnz
inc
adc
jge
test
stos
or
dec
sbb
adc
insl
fstpl
mov
daa
test
inc
aam
icebp
std
jb
cld
repnz
insb
xchg
add
stos
shlb
fadds
and
mov
scas
dec
popa
jle
and
insb
adc
hlt
outsl
rol
and
mov
es
sbb
push
addl
xor
inc
push
ficoms
xor
sbb
cmp
mov
and
nop
mov
int3
lods
push
push
jnp
xchg
mov
test
ja
jle
movsb
inc
mov
pop
ficomps
or
fistpll
cmp
lods
xchg
mov
or
lods
pop
push
push
xlat
mov
mov
mov
das
push
xchg
push
inc
dec
xor
sahf
popa
push
icebp
repnz
cmp
cld
paddusw
dec
mov
sbb
das
insb
popa
test
out
leave
shlb
pop
psubb
cltd
push
inc
add
jae
bound
pop
sub
or
jo
inc
xchg
dec
jae
out
mov
mov
lret
hlt
mov
in
pop
xlat
popa
dec
lea
dec
addr16
and
rcll
loopne
sub
popf
mov
sbb
mov
sbb
subb
dec
popf
jno
jl
pop
jns
pop
pop
jne
movsl
or
mov
adc
sarl
ret
scas
aas
js
xor
and
xor
push
xor
rcl
fsubr
push
ret
aad
mov
out
sbb
icebp
dec
push
into
shll
jne
outsb
cmpsl
mov
or
inc
mov
dec
ds
ja
or
out
in
cmpsl
push
jno
insb
or
pop
pushf
hlt
insb
ss
scas
into
xchg
cmp
cmp
rol
sbbb
jb
inc
sbb
sbb
mov
movsb
inc
dec
pop
xchg
loope
incb
cltd
inc
loopne
pop
das
pop
aas
subb
or
xor
lahf
into
or
pop
push
mov
int
lret
cmpsl
inc
in
mov
mov
lahf
pop
push
lahf
and
pop
mov
scas
mov
fisubl
sbb
iret
mov
cltd
je
out
mov
mov
insb
cmp
pop
or
lods
xchg
addb
jecxz
mov
roll
rcr
lret
jle
out
out
jecxz
data16
ja
push
xor
jb
mov
sarb
fisubl
daa
xchg
and
adc
cltd
cmpsb
pop
inc
push
fidivl
xchg
lods
sub
and
aam
xchg
ficoml
inc
rolb
iret
hlt
pop
fmul
dec
pop
or
enter
add
push
mov
adc
ret
xor
mov
cmp
sbb
and
rcr
outsb
mov
mov
or
leave
mov
sub
movsl
xchg
andl
xorl
mov
sbb
mov
xchg
sub
mov
mov
sub
test
push
test
ds
mov
cwtl
mov
clc
or
and
push
icebp
js
in
dec
shll
loopne
lea
xchg
shr
fnstcw
xchg
or
inc
xor
inc
adc
rcl
xchg
xchg
pop
into
gs
adc
fsubl
add
xchg
or
push
imul
addr16
adc
adc
mov
mov
xor
dec
arpl
out
pop
out
or
out
push
cli
addr16
nop
xor
cmp
cmp
jbe
dec
shlb
and
mov
pop
cmc
stos
in
sarb
jbe
mov
ds
call
adc
sahf
sub
mov
xorl
clc
pop
dec
mov
loopne
mov
mov
fs
lcall
xorl
mov
aaa
or
arpl
sub
repz
lock
fbld
lcall
inc
dec
lret
push
fisttpl
dec
ja
bnd
mov
xchg
xorb
push
arpl
sub
hlt
jl
hlt
mov
push
shrl
fdivl
pop
test
jge
push
or
mov
mov
leave
adc
jmp
in
scas
aad
mov
cli
cmp
mov
outsb
dec
out
loop
push
cli
out
mov
daa
mov
xchg
testl
out
xchg
loopne
sbb
je
sbb
imul
fistpll
sub
and
xchg
ret
mov
xor
xorb
cmp
dec
dec
and
add
mov
xchg
ds
inc
ljmp
iret
sub
add
pusha
mov
jne
lcall
pop
jp
fadds
add
inc
cld
insl
fwait
in
sub
or
mov
pop
call
repnz
push
xchg
divb
cmp
push
mov
and
mov
xchg
insb
lea
repnz
dec
push
jne
and
or
mov
clc
andb
out
jle
mov
or
xor
into
cli
jb
dec
and
pop
jae
jmp
mov
lea
test
xor
push
adc
push
data16
stos
pop
scas
fidivl
or
push
push
dec
mov
and
xchg
loope
adc
and
mov
adc
rcll
movsb
mov
push
lret
ljmp
mov
mov
gs
cmp
or
sbb
outsb
outsl
pop
mov
push
lods
xchg
push
cs
arpl
sarl
in
sbb
mov
inc
or
pop
xchg
jg
dec
jae
jns
and
ljmp
mov
xchg
xchg
adc
xchg
les
jb
and
mov
mov
xor
idivl
sbbb
pop
scas
inc
out
inc
test
inc
cltd
inc
dec
dec
addb
jp
jnp
enter
gs
cmp
mov
cltd
and
sub
insl
xchg
arpl
add
cmp
jge
adc
cmpsl
or
dec
repz
dec
and
lods
mov
mov
jp
cmp
push
dec
rcr
cmp
add
out
push
or
adc
jle
fnsave
pop
in
or
clc
jns
in
sbb
jp
hlt
or
xchg
rclb
lods
arpl
aam
sbb
lods
mov
push
pop
add
xchg
and
fidivl
or
lret
sub
hlt
stos
loope
or
inc
or
jb
arpl
lods
push
adc
dec
jle
dec
push
push
cmc
mov
push
cwtl
jl
jle
xchg
daa
push
pop
jecxz
sbb
mov
inc
pop
and
add
loopne
loope
ret
gs
cmc
xchg
clc
cmp
loop
pop
or
lret
xchg
inc
and
fwait
insl
cmpsl
lea
sub
mov
jp
mov
fs
sub
mov
sbb
add
mov
push
outsl
or
cmp
jecxz
xor
notb
nop
mov
mov
adc
sarb
push
pushf
inc
cmpsl
inc
inc
add
and
pop
insl
adc
mov
mov
loopne
and
shrl
insb
adc
pop
dec
sarl
bound
daa
in
push
int
adc
dec
test
out
shll
or
scas
arpl
jns
mov
add
jmp
mov
cli
push
adc
aad
dec
leave
lods
stos
shlb
or
mov
inc
push
lret
mov
mov
shlb
ret
sbb
mov
sbb
xchg
cmp
push
movsb
das
mov
clc
add
pusha
cmp
cmp
push
xchg
out
cmp
popf
mov
scas
push
in
negl
cmpsl
dec
adc
dec
int3
out
les
leave
push
movsb
and
mov
mov
jno
mov
cmpsl
call
repz
out
popa
sbbl
and
xor
dec
xchg
adc
adc
not
adc
cld
adc
out
dec
lea
push
cmpsb
add
leave
and
cmpsl
out
mov
xchg
int3
inc
push
leave
enter
popl
mov
fs
pop
mov
add
xlat
pop
mov
xchg
dec
mov
andl
dec
push
out
cmp
cwtl
jg
add
int3
cmp
jle
push
jge
nop
mov
ds
sbb
cmpsb
adc
add
push
lods
insb
push
sarb
jo
xorl
lods
iret
cmpsl
inc
aam
aam
mov
dec
pop
push
mov
idivb
lea
push
dec
stos
in
mov
adc
in
mov
push
jecxz
pop
mov
push
pop
frndint
inc
mov
pop
mov
xchg
fwait
ret
test
cld
pop
jge
je
enter
push
and
add
jo
pop
loope
lock
mov
fildl
jb
mov
ret
test
ljmp
data16
xchg
pusha
mov
popa
mov
mov
mov
jmp
mov
mov
mov
jne
fsubl
sbb
jecxz
das
push
xchg
adc
push
or
xchg
jb
fbstp
pop
push
popf
rorl
andb
jecxz
mov
aad
and
inc
jo
sub
aaa
add
mov
pop
xor
add
in
inc
add
flds
js
sub
pushf
xor
inc
call
pop
mov
mov
xor
mov
cltd
pop
mov
xchg
test
mov
adc
add
daa
movsb
jecxz
cwtl
addb
leave
das
insb
and
ljmp
aad
push
push
sbb
aam
lcall
insl
dec
aad
jno
add
fdivl
cmc
mov
les
rclb
and
mov
add
mov
sar
lret
lret
jecxz
mov
mov
ret
shl
cmp
cmpsl
mov
addr16
in
xor
stos
orb
add
insl
lods
and
dec
fisubl
add
aam
cmp
sbbl
mov
ljmp
sbb
mov
test
lcall
sti
insl
cli
popa
xor
dec
jge
mov
insb
mull
imul
push
mov
stos
je
in
loop
aam
outsl
jmp
sbb
popw
xchg
lock
jmp
xchg
int3
mov
fistpll
add
cmpsl
inc
jecxz
movsb
outsb
stc
std
xchg
pop
and
outsl
xor
cwtl
cmp
mov
xor
jb
sub
push
sub
adc
stos
mov
xor
xchg
pushf
xchg
mov
cli
mov
loop
push
stos
gs
inc
xchg
movsb
jbe
shl
dec
insl
jle
push
insl
dec
je
repnz
pop
sarl
insb
mov
popa
or
loope
dec
jb
pop
je
out
arpl
lods
pop
mov
out
push
cmp
fs
into
inc
cmp
outsb
or
ljmp
mov
jge
jecxz
popa
xchg
xchg
fs
xor
js
adc
jne
add
shlb
fmull
inc
hlt
inc
mov
sub
cmp
test
test
ja
in
cmpsb
sub
dec
mov
push
adc
sub
sarb
enter
sub
dec
xchg
pop
test
adc
dec
add
xor
pop
pop
xchg
mov
xor
inc
test
rorb
push
pop
push
out
xor
dec
sbb
add
adc
lods
push
pop
fiaddl
add
mov
mov
sub
cmc
ret
fcom
xor
pop
adc
data16
pop
dec
leave
faddl
xor
adc
pop
scas
out
fwait
leave
fdivrs
sbb
pop
add
or
popa
xor
mov
mov
pop
xor
and
inc
and
sti
adc
shlb
popa
fldpi
outsl
addr16
loope
out
call
jnp
enter
cmp
fisttps
int3
nop
or
inc
pop
rclb
out
push
test
adc
test
cmp
gs
gs
add
pop
pop
push
into
test
xorb
inc
jl
lods
je
and
scas
mov
mov
test
ds
xor
cmpsl
out
pop
lods
les
push
ljmp
dec
rclb
mov
xchg
jb
aad
jge
pop
cli
scas
dec
mov
fs
orb
mov
faddl
inc
push
or
jecxz
sbbl
xor
jge
mov
jne
insb
out
cs
neg
xchg
movsb
dec
dec
lock
mov
mov
test
ja
xor
or
dec
push
fs
repnz
jae
xchg
call
push
js
sbb
test
mov
or
out
out
xor
das
sbb
fnstsw
mov
mov
ljmp
stc
inc
sbb
ljmp
add
cmp
test
fwait
sbb
inc
push
fmul
movsl
sub
rdtsc
daa
shlb
clc
lods
pop
mov
or
out
cmp
cmp
cmp
xor
shlb
mov
jns
shrl
push
and
in
sbb
inc
and
ret
ja
loope
mov
xchg
mov
pop
cmp
sbb
dec
cmc
sub
int3
int3
fisubrl
ljmp
outsl
dec
sub
xchg
xchg
xchg
dec
in
fs
mov
jno
mov
pop
sti
inc
xor
jne
bound
sets
fsubrl
invd
mov
jl
cli
push
push
cmp
mov
jmp
js
ret
fmull
cmp
mov
xchg
mov
mov
add
sub
loop
mov
movsl
out
test
add
jb
push
lahf
rcr
mov
cmpsb
sub
test
jge
call
in
cmpsl
adc
jae
xchg
xchg
je
cmc
in
xor
push
mov
out
adc
test
rorb
mov
cmp
xor
lock
push
push
test
in
ss
cmp
pop
sub
outsb
stos
add
pop
imul
gs
mov
in
sbb
inc
push
imul
imul
or
stos
jmp
jg
adc
jne
decl
mov
fldenv
jb
pop
sbb
rol
jno
xchg
addr16
jnp
dec
push
cld
es
xchg
sar
jmp
jo
mov
adcb
mov
and
movsb
js
subb
clc
clc
xor
int
bound
or
cmpsl
stos
pop
xlat
scas
mulb
into
fisubs
push
loope
dec
mov
fwait
ret
sub
push
and
orl
add
mov
mov
into
shrl
cmpb
sbb
std
aaa
es
sti
test
sbb
lock
xchg
mov
lock
or
movsb
mov
lods
and
sbb
sarl
mov
jb
cltd
movsb
ljmp
mov
mov
in
fsubs
pop
cld
in
xchg
cmp
lods
lods
adc
adcl
in
add
mov
movsl
mov
add
addl
inc
out
xor
mov
or
cmp
cwtl
movsl
inc
inc
sbb
xchg
push
mov
mov
sub
outsl
cmc
adc
jnp
jp
sub
mov
jbe
mov
fwait
sub
pusha
test
mov
std
pusha
testb
ret
subb
movsb
nop
ljmp
cmp
jmp
mov
frstor
mov
ds
js
gs
push
jg
dec
dec
sbb
decl
pop
jo
inc
mov
data16
call
push
cmp
aas
sti
push
test
mov
dec
roll
xorb
add
ljmp
fsts
push
dec
xor
xorb
mov
mov
jnp
pop
or
jne
fldpi
arpl
cmp
push
notl
pop
add
push
leave
xor
dec
inc
mov
fdivrl
adc
or
fwait
outsl
fs
daa
mov
or
movsl
call
loopne
cmp
jg
mov
sub
xchg
dec
xor
in
les
not
out
sub
jl
fsubrl
mov
push
add
push
arpl
lock
jae
jo
xorl
mov
out
push
mov
pusha
outsb
jae
mov
sbbl
fiadds
pop
mov
xlat
out
dec
jle
fidivrl
fistl
mov
testl
fistps
int3
test
push
xor
sbb
lahf
out
sbb
lods
mov
cmp
insb
mov
gs
mov
mov
jae
test
mov
and
sub
xchg
out
std
or
sti
dec
mov
and
orb
movsl
mov
add
sub
inc
scas
pusha
int
adc
test
and
xor
inc
std
test
inc
jmp
xor
out
cmp
loop
out
xchg
mov
daa
roll
mov
cltd
out
inc
fcmovu
sti
inc
add
mov
std
and
pop
sahf
sbb
dec
push
mov
fwait
xlat
fs
push
and
jnp
mov
shrb
and
arpl
push
xchg
mov
add
xor
aam
push
xlat
rcll
iret
fldt
fmull
and
je
shlb
mov
inc
out
mov
jns
movsl
adc
in
addl
mov
das
pop
loop
sbb
jle
pop
mov
jae
mov
push
fisubrs
cmpsl
add
dec
jp
arpl
pop
push
add
sub
rclb
push
or
popf
psubq
lds
sbb
push
enter
leave
add
cmpl
jp
gs
sub
push
jmp
notb
negb
movsb
adc
mov
mov
fsubs
fwait
jmp
mov
adc
int3
cmp
xor
push
or
loopne
jns
xor
xchg
sarb
or
and
mov
cmpsl
push
aas
and
lret
adc
ja
and
xor
cmp
mov
iret
adc
andl
into
mov
jae
jp
push
daa
mov
jmp
xchg
lea
fistpll
lea
jecxz
sarl
pop
mov
xor
pop
aas
test
pop
lods
dec
jb
lea
subb
cmc
xchg
add
xchg
imul
mov
jnp
xor
jnp
lret
fsubp
jl
stc
mov
iret
out
outsb
jbe
pop
ret
imull
sbb
idivl
lcall
pop
inc
jno
je
cmpsb
fmull
arpl
sub
dec
ret
imul
push
ret
and
cmp
add
jg
and
mov
jp
cmp
fs
es
loopne
lods
fbld
xchg
jmp
ds
loopne
and
lods
shll
cmc
outsb
lods
mov
pusha
imul
dec
mov
movsl
mov
arpl
bound
sahf
push
mov
jno
jmp
push
imul
decb
push
roll
outsb
lahf
mov
mov
ret
not
xor
cmp
test
jle
adc
push
xchg
xchg
sbb
rclb
sbb
adc
loope
jl
ss
add
xchg
xchg
xchg
mov
inc
daa
ror
adc
and
aad
pushl
aam
cmp
aam
push
or
mov
es
mov
jns
aaa
call
and
rorb
ret
fmull
cmp
or
mov
xor
inc
jp
repz
std
mov
mov
mov
lods
es
mov
cmp
sahf
aaa
inc
into
pop
stos
lahf
sub
push
mov
cld
xor
lea
sbb
int3
jne
push
mov
lods
incb
fildll
sub
mov
dec
xchg
push
adc
test
pop
loope
sahf
sbb
mov
out
cmp
dec
push
lret
xchg
jg
rcll
xchg
and
dec
mov
mov
jno
jne
cli
into
pop
stos
test
mov
cltd
mov
jne
insb
cmp
pop
mov
loop
sbb
clc
and
in
sub
or
xchg
jg
scas
imul
out
ficompl
push
cmp
mov
repnz
or
fwait
lahf
insb
subl
dec
gs
cmpsl
enter
xchg
movsb
sub
cmpsb
loop
mov
inc
pop
test
inc
pop
push
jae
cmp
cld
sub
mov
cwtl
outsb
adc
popf
popf
mov
pop
es
stos
or
jbe
sti
push
ror
sub
and
dec
fimull
lods
push
lahf
int3
push
mov
jmp
int3
xchg
mov
xor
dec
cmp
mov
mov
insb
pop
add
and
pop
orb
mov
xchg
shrl
mov
lods
test
ror
mov
xor
popa
imul
lcall
mov
jnp
jmp
sbb
mov
dec
test
scas
push
xor
jmp
mov
dec
mov
mov
mov
fs
ja
sbb
sub
out
fcomp
xlat
out
fiaddl
cmp
icebp
mov
jge
test
int
out
fisubrl
push
data16
adc
dec
and
and
pop
hlt
pop
xchg
or
ja
pushf
mov
jbe
rclb
or
mov
mov
jb
jge
inc
ret
pusha
dec
repnz
outsb
mov
sti
mov
pop
iret
pop
dec
pop
mov
out
mov
xor
mov
icebp
push
in
lods
roll
jo
mov
and
jmp
cmpsb
adc
call
lahf
rcl
stos
je
mov
inc
jae
std
or
imul
push
lods
test
stos
enter
jnp
jl,pn
mov
sbb
fsubrp
add
push
dec
fs
xchg
mov
add
mov
aas
pop
sti
xchg
lret
and
adc
int3
cmpsl
mov
adc
sbb
mov
fs
in
fs
xchg
aam
pop
xchg
jmp
icebp
loop
movsb
mov
mov
pop
jne
cltd
mov
testl
das
cmc
and
sbb
les
or
jecxz
lcall
sub
leave
lcall
jecxz
rol
pop
add
push
lock
mov
jb
xchg
xor
popf
cltd
xor
sub
xchg
push
inc
cmc
xor
mov
das
mov
cmp
mov
pop
js
sbb
sub
mov
xchg
pushf
jns
shll
jbe
dec
pop
add
bound
add
inc
loopne
not
pop
or
es
sbb
jecxz
inc
out
mov
leave
lds
or
sub
ret
adc
push
shlb
fs
or
jb
add
xor
js
int3
ljmp
push
cs
jp
lcall
imul
jnp
cmp
or
fists
jae
push
mov
iret
cli
xchg
std
pop
enter
pop
jl
test
in
mov
mov
call
clc
outsl
lea
ja
mov
mov
cmpsb
adc
mov
dec
or
jmp
into
sub
push
mov
loop
inc
adc
mov
mov
in
push
sbb
cltd
ljmp
or
lret
ret
sbb
dec
icebp
cmp
xlat
and
into
lock
fdivl
shrl
es
hlt
dec
and
push
mov
push
aas
push
scas
inc
inc
outsl
inc
push
pop
inc
and
mov
sti
xchg
out
dec
pop
dec
and
cmp
xchg
adc
inc
xor
cwtl
mov
dec
das
pop
mov
inc
xor
addr16
dec
xchg
les
or
out
push
icebp
mov
xchg
mov
push
mov
lods
iret
lds
roll
rorb
sahf
insl
cs
stc
mov
or
call
jp
mov
adc
pop
outsl
or
add
jp
js
jle
lcall
aad
cmpb
andl
in
daa
xor
psubq
cmc
xorl
add
outsl
es
cwtl
inc
adc
std
sub
inc
dec
fimull
fsts
add
aaa
mov
inc
sub
sub
imul
insb
test
aas
jl
shr
cli
jle
ror
cli
pop
cmpsb
xchg
int
lock
negb
lock
and
xchg
sub
mov
loop
ret
add
xchg
sub
add
push
pop
mov
ror
push
push
jo
imul
inc
outsb
lret
sub
mov
jge
jns
arpl
mov
mov
sub
test
mov
mov
repz
mov
rclb
icebp
mov
mov
xor
popa
adc
xlat
aad
sbb
lea
xchg
std
sbb
leave
pop
pop
mov
dec
pushf
cli
repnz
cltd
cmp
jb
scas
add
xor
mov
xchg
or
lahf
ds
jle
push
push
nop
into
push
mov
jp
add
roll
mov
addr16
xchg
xor
popf
lcall
pop
dec
and
and
cmpsl
add
aaa
push
mov
lret
call
ss
push
imul
xchg
sti
not
mov
sarb
xor
aas
test
inc
jne
cmpl
shlb
dec
stos
and
aad
push
clc
ret
lock
in
sbb
and
jl
add
bndstx
mov
shl
push
inc
adcb
iret
fsts
mov
push
repz
sbb
xchg
hlt
dec
cmc
std
sub
jae
push
jp
xchg
sbb
cmp
pop
lcall
jl
xor
cmpsl
xchg
mov
mov
int
or
addl
int3
or
jecxz
jle
xlat
mov
ds
sbb
decb
xchg
pop
adc
jp
mov
xor
jbe
int3
repnz
outsb
jae
inc
dec
leave
fmull
or
mov
and
mov
mov
xchg
push
cmp
or
shlb
jne
inc
cmp
loopne
mov
jbe
lods
push
in
ret
loope
sub
push
cmpsb
pop
ss
cmpsb
ficompl
xchg
jb
mov
popa
dec
pop
movsb
mov
call
mov
pop
pop
jmp
in
mov
bound
push
outsb
jnp
xor
adc
jle
js
sbb
notb
xor
xchg
xor
adc
stc
xchg
dec
mov
push
adc
loope
out
or
outsb
fs
and
push
stc
into
repnz
push
std
daa
xchg
jne
jns
std
addl
jl
cmc
pop
movsb
ds
nop
mov
cld
or
cmc
mov
xchg
loop
iret
gs
dec
sub
jmp
mov
cli
iret
jle
out
xor
inc
loope
loop
pop
shlb
scas
out
or
les
cmp
dec
inc
xor
stos
pop
xor
inc
add
mov
lcall
pop
jne
push
loope
je
or
sbb
adc
or
mov
mov
mov
out
mov
jno,pn
icebp
sbb
repnz
inc
ss
mov
jnp,pn
loope
add
push
add
test
sub
out
sbb
out
push
mov
out
push
ret
mov
mov
movsl
sbb
aas
sub
inc
jl
push
xchg
lds
xchg
mov
imull
lahf
imul
leave
and
jno
insl
and
jge
or
inc
mov
cltd
and
sbb
and
xor
push
dec
loopne
adc
xchg
pop
dec
call
popf
insl
push
cltd
lods
adc
sub
cwtl
ds
sub
js
mov
lret
aas
shll
lcall
pop
das
adc
sbb
sbb
data16
mov
jg
out
stos
ljmp
movsl
ja
shll
inc
pop
jmp
adc
adc
mov
cmp
cmpsb
jb
test
imul
add
pusha
dec
cmpsl
mov
pop
pushf
les
jbe
insl
std
push
jg
sub
std
in
mov
psubw
mov
mov
xlat
xor
cmpsb
xchg
sbb
add
mov
or
ficomps
test
push
mov
lock
push
cmp
lods
pop
pop
fisubrs
movsb
iret
lock
pop
mov
shll
scas
fsubs
aad
pop
in
fisubrl
rsm
mov
sub
pop
mov
data16
imul
cs
out
jns
lahf
scas
jecxz
mov
mov
mov
js
aas
xchg
mov
rclb
inc
jg
adc
pop
fsubrs
mov
enter
jl
mov
or
mov
xchg
adc
ja
nop
mov
mov
js
sub
jns
mov
push
pop
sbb
jecxz
hlt
dec
imul
xor
mov
sbb
cld
mov
dec
lret
ret
push
sub
lds
mov
shlb
pop
push
fstpt
into
xchg
pop
popl
mov
sbb
out
xor
adc
lahf
aas
jecxz
pop
push
lret
xor
jecxz
push
ds
shll
push
cltd
je
iret
xchg
mov
adc
sub
and
mov
mov
mov
roll
insl
inc
add
dec
adc
pushf
repnz
aam
mov
jmp
dec
jb
call
shll
sub
ror
sahf
add
fcomp
fmull
pusha
or
jb
inc
mov
inc
xor
ss
dec
enter
es
repz
lcall
adc
inc
sbbb
add
adc
fxch
out
sahf
cwtl
pop
imul
ds
fcompl
jecxz
stos
adc
or
testl
lock
fucomip
dec
inc
mov
mov
imul
or
jecxz
leave
pushf
ljmp
or
mov
or
nop
lahf
adc
adc
push
stos
dec
mov
adc
add
pusha
test
xchg
ja
cmp
daa
mov
sti
jl
push
or
testb
sahf
jno
mov
cld
or
xchg
and
push
ljmp
jns
popa
jg
shlb
push
stos
dec
stc
xchg
cmp
pop
cld
push
mov
adc
inc
js
jg
cmpsl
cmpsl
dec
shl
jae
mov
aaa
movntps
pushf
push
sub
testl
lret
xchg
jno
frstor
inc
mov
mov
xchg
or
xor
test
rcll
iret
test
or
jge
adcl
lgs
test
clc
jae
mov
sbbb
cli
fimuls
pop
cwtl
jae
dec
push
sbb
les
mov
jns
clc
ret
pop
je
pop
pop
shrl
int3
popa
mov
cwtl
adc
shlb
pusha
inc
sub
and
cmp
cmc
dec
adc
adc
cmc
jle
ret
inc
cmpsl
cmp
inc
mov
lock
jg
rolb
lret
pop
xchg
push
fmuls
jecxz
dec
add
test
test
pop
jns
jne
adc
pop
shlb
add
xor
push
inc
cmp
ds
fiaddl
cmp
sub
fdiv
inc
pushf
push
xchg
pusha
outsb
push
adc
mov
mov
insl
shrb
xchg
loope
stc
inc
mov
sahf
and
mov
and
test
subl
rcrl
inc
mov
sbb
dec
push
lea
pop
push
sbb
mov
and
mov
mov
pop
jns
aas
fnstsw
pop
in
or
insb
jmp
les
outsl
in
push
daa
loop
lret
mov
fmull
xor
fs
dec
mov
fstpl
adc
adc
es
leave
in
jno
or
lods
dec
fstp
insb
adc
mov
pop
in
dec
and
xchg
call
scas
ss
adc
cwtl
xor
sbb
imul
clc
roll
pop
shl
ret
nop
dec
add
fadds
std
dec
out
lret
nop
loope
dec
dec
ja
jno
mov
out
sub
inc
sub
fs
sbb
in
sub
in
popf
pop
incl
jg
lcall
jnp
test
xor
addr16
daa
mov
sub
inc
test
dec
mov
cmpsb
clc
or
push
data16
dec
xchg
mov
mov
mov
ljmp
unpckhps
dec
daa
sti
in
aam
or
xor
mov
loopne
push
ja
dec
gs
sti
add
repnz
imul
adc
call
pop
lcall
les
mov
adc
sti
fildl
roll
pop
pop
jecxz
ds
jp
sbb
jl
push
sbb
mov
dec
push
xchg
push
sti
inc
lahf
sarb
repz
mov
lea
pop
push
das
and
dec
cmc
sbb
cmp
data16
sbb
mov
pop
ja
fsubs
mov
outsb
sub
jecxz
imul
in
inc
lock
and
jo
sahf
mov
push
rorl
mov
fisubl
aad
lods
ret
mov
fldcw
xchg
push
fildll
hlt
clc
jb
test
fstpt
scas
lahf
cmpsl
pop
insl
mull
pop
push
push
sarl
gs
cmp
xchg
mov
sub
mov
sub
lahf
lods
push
sub
jecxz
out
dec
xorb
inc
xor
enter
mov
mov
outsb
cmpsl
mov
aas
push
adcl
lock
inc
call
jbe
add
sbb
imul
xchg
mov
pop
sbb
xchg
lea
and
bound
jnp
push
add
cmpsb
jmp
xor
in
xor
lcall
mov
or
push
imul
xchg
xor
or
mov
mov
mov
into
and
jno
dec
push
add
mov
jb
dec
jle
outsl
aad
jecxz
loop
scas
push
pop
std
and
push
aaa
nop
loope
bound
addr16
outsb
adc
jae
pop
push
sbb
jbe
bound
xchg
lahf
stos
xchg
sub
mov
dec
jge
insl
mov
push
ffree
or
add
push
add
test
nop
adc
enter
add
jmp
aaa
cmp
insl
roll
xor
fistpl
mov
fsubs
xchg
sub
and
daa
xchg
xchg
into
roll
adc
rcrl
push
cmp
repz
out
mov
dec
mov
inc
mov
jno
out
mov
dec
add
imul
aas
inc
mov
mov
inc
lahf
dec
int3
mov
fsubrl
scas
cmpsl
xchg
jno
es
and
test
stos
mov
sti
lea
fstpt
into
jb
jp
add
dec
cs
jb
jne
pop
stos
mull
mov
jge
add
daa
fs
xchg
dec
fs
shrl
cltd
cmc
in
mov
insl
jno
mov
xchg
adc
inc
ds
sbb
js
adc
sub
mov
cmp
push
mov
adc
imul
outsl
mov
and
leave
and
mov
add
adc
mov
mov
push
mov
pop
popa
jns
nop
lock
mov
enter
lret
or
mov
jo
jmp
mov
test
cli
pop
pop
pop
cmpsb
fadd
pop
adc
adc
in
mov
adc
cmp
into
cld
mov
xor
xchg
push
pop
clc
xor
fldl
ret
or
dec
ja
pop
cmc
push
stos
cmp
inc
out
in
sub
xchg
test
into
nop
dec
out
mov
or
mov
arpl
push
pop
ds
push
pop
mov
add
sbbl
jp
mov
test
insl
bound
pop
ja
out
ret
fsubs
cmp
adc
inc
jae
add
popf
cmp
push
in
fnsave
or
push
or
iret
adc
das
push
cmp
push
out
push
lock
into
addb
insl
xor
ds
sbb
xor
or
fadds
mov
pop
cmp
adc
in
stc
das
inc
jp
push
mov
and
repz
imul
std
je
div
jno
mov
fldt
fistps
in
jns
vmovntps
and
jp
jno
popa
pop
pop
jne
push
fisubrl
rclb
push
lahf
mov
sbb
bound
adc
or
xor
jle
into
popa
pop
add
movsl
cmp
mov
pop
popa
ret
adc
mov
inc
in
push
into
inc
sub
mov
movsl
xor
xchg
jnp
jne
bound
cmp
xchg
push
push
out
fcom
mov
mov
nop
xchg
orl
ss
push
lret
ret
mov
jae
hlt
pushl
sub
popa
test
std
repz
adc
sbb
push
in
out
fs
test
std
cmp
mov
jl
aam
inc
mov
lret
sbbb
movsb
decb
jl
out
pop
mov
push
fistps
popa
lret
push
cmp
int
dec
xor
pop
fsubl
stc
pusha
xor
loop
lret
je
sbb
pop
xchg
into
popa
rolb
outsl
pop
shrb
add
fists
cmpl
movsb
mov
pop
or
shlb
inc
xlat
mov
lret
mov
dec
ret
jle
mov
mov
cltd
call
cld
pop
mov
jl
cmpsb
roll
inc
fistps
mov
ficomps
cld
jo
mov
or
aas
sbb
test
push
sbb
out
cli
push
cmp
call
pop
sub
sub
leave
dec
adc
scas
popf
pop
notb
inc
mov
dec
adc
xchg
push
mov
lret
sbb
or
cltd
inc
ss
hlt
push
jp
and
mov
push
dec
jo
dec
sub
leave
jle
inc
and
jecxz
sbb
sbb
je
fstl
les
out
mov
push
insl
push
in
pop
mov
jo
or
clc
bound
jo
xchg
jp
add
push
mov
cmp
sub
jge
adc
dec
cvtpi2ps
shlb
out
hlt
cmp
mov
fwait
les
push
call
xchg
lahf
into
mov
insb
outsb
stos
loope
popa
xchg
ljmp
mov
cmp
mov
rcrb
mov
cmpsl
push
stc
sub
fwait
in
enter
repnz
or
aad
mov
mov
outsl
xchg
dec
adc
xchg
lret
cli
outsl
out
cmp
dec
and
inc
mov
jecxz
xor
cmp
add
scas
fstps
or
cmpsl
cmpsb
gs
inc
cli
test
std
clc
jg
mov
repz
test
push
mov
push
xor
jle
adc
cmpl
shll
lret
cmp
dec
in
add
jge
jl
mov
xchg
sbb
xlat
loope
aaa
aad
push
subl
or
dec
scas
mov
hlt
mov
pop
shr
das
xchg
iret
pop
push
jnp
lock
outsl
pop
inc
lcall
jne
ja
ljmp
movsb
mov
add
cmpsb
stos
push
je
aas
dec
lock
jl
sbbb
mov
push
aaa
jns
push
sbbl
cmp
xchg
push
inc
cmpsb
bsr
inc
pop
std
clc
push
push
fs
lods
sbb
pop
push
mov
mov
hlt
jne
loope
xchg
in
mov
jb
xchg
cmc
or
cmpl
cmpsb
fidivl
inc
je
aad
pop
mov
mov
inc
jl
insl
mov
mov
nop
and
das
out
mov
mov
dec
and
inc
scas
test
or
cmpl
jns
cmp
testl
add
mov
push
test
cmp
int3
out
std
jmp
adc
mov
arpl
out
and
cmc
inc
out
in
pop
out
pop
out
jmp
mov
test
mov
inc
shll
fwait
add
mov
dec
sub
jo
mov
push
daa
mov
test
leave
jno
pop
idivl
cmpsl
mov
ja
arpl
out
jl
sub
out
pop
inc
sbb
int
xchg
mov
xor
les
mov
aaa
in
pop
lea
mov
ljmp
and
ss
movsl
shlb
rcrl
lcall
push
addr16
mov
cs
push
fisttps
shrb
mov
pop
iret
shlb
dec
inc
mov
ljmp
mov
add
mov
mov
mov
in
pop
cmpsb
lcall
lock
fnstenv
adc
bound
jnp
pop
scas
sub
jle
mov
test
int3
out
insb
fnstenv
je
pop
sub
and
pop
mov
adc
cld
push
mov
cmp
aaa
outsb
mov
cmp
push
jl
fwait
inc
jmp
iret
imul
test
mov
mov
outsl
ret
sub
push
push
cmp
aaa
sbb
outsb
mov
pop
lods
or
shlb
out
mov
dec
mov
sbb
loope
pop
pop
shlb
dec
mov
enter
sub
xchg
jl
or
adc
dec
cmpl
sti
sahf
dec
pop
pop
fwait
ja
outsb
mov
mov
add
jns
mov
xor
fdivs
ficoml
rcr
inc
pop
inc
sbb
out
ss
jo
rclb
fnstsw
inc
inc
ds
push
or
sahf
cmpsl
dec
xor
xchg
iret
jle
jmp
stos
mov
loope,pt
imul
sub
ret
arpl
cld
sub
sub
fiadds
pop
lahf
dec
inc
inc
dec
imull
dec
lret
mov
test
andb
sub
imul
xor
int3
dec
out
in
and
cmp
and
sub
pop
out
call
std
in
out
cld
jg
pop
push
jne
ret
sbb
ds
outsb
and
or
mov
jb
movsl
jae
mov
movsl
sahf
pop
insb
adc
mov
fildl
in
sub
mov
icebp
dec
inc
and
xor
insl
mov
mov
loop
mov
repz
mov
int3
mov
or
pop
xor
push
and
dec
fwait
jecxz
pop
sub
and
pushf
pop
push
daa
pusha
mov
mov
mov
sub
xchg
xorl
daa
lret
mov
sbb
sub
jae
repnz
mov
cmovg
mov
fistpll
or
xchg
out
xchg
mov
and
imul
rcrb
popf
cmp
stc
pop
push
dec
icebp
lea
scas
xor
int3
es
addr16
repnz
push
cwtl
sarb
push
or
mov
push
in
pusha
in
and
xchg
adc
les
or
push
xor
fld
inc
std
inc
fcmovnb
lret
mov
stos
mov
ror
add
adc
mov
popf
call
clc
ljmp
sti
test
jne
sub
xchg
mov
divb
xor
pop
mov
pop
push
test
rorb
jne
stos
adc
sbb
xchg
lea
adc
in
inc
add
lods
fadds
sbb
aad
incb
add
adc
mov
rcrb
push
clc
sbb
fmul
or
movsb
jp
mov
adc
pop
or
mov
into
pop
mov
add
std
add
and
cltd
stc
das
loopne
xchg
outsl
sbb
mov
push
push
push
imul
out
iret
inc
movl
out
sub
int3
jb
aas
or
je
cmp
sarb
mov
push
push
pop
insb
mov
pop
stos
rolb
and
shll
scas
fbld
shr
pop
sub
add
mov
fimuls
mov
xor
aas
xchg
test
iret
lret
cmpsl
add
xchg
outsb
clc
inc
push
fcmovnu
sti
test
mov
sub
sbb
xchg
pusha
jle
insb
and
dec
ja
adc
inc
or
dec
jne
adc
cmp
inc
mov
je
je
and
xorl
xor
inc
push
bound
dec
mov
pop
sub
cmc
sbb
cs
fs
and
add
std
push
call
fcompl
xor
mov
aad
or
outsl
and
in
loopne
xor
rcrl
jns
jl
and
int
lcall
dec
je
mov
sub
add
pop
mov
pop
in
lret
dec
push
ret
push
inc
and
inc
cmc
lret
inc
pop
inc
add
mov
xor
orb
inc
movsl
sti
sub
sub
mov
test
clc
je
into
xor
adc
or
ljmp
fnstcw
push
jbe
in
xchg
mov
cmp
repnz
xchg
pop
cltd
cli
pop
ljmp
lcall
cmp
js
adc
jne
push
lock
cmp
sti
enter
add
test
cld
std
ret
cmp
xor
stos
repz
push
popa
leave
mov
or
cmp
lahf
pushf
mov
ret
stc
ja
pop
test
cmpsb
adc
xor
stos
xor
lea
aas
or
xchg
jno
dec
stos
ret
jmp
sahf
aaa
adc
testl
data16
aas
cli
and
xchg
repz
jmp
ljmp
lock
xor
jge
flds
iret
dec
out
pop
xor
xchg
fwait
andl
xchg
push
ds
out
dec
mov
mov
xchg
sbb
clc
cmp
cltd
xchg
xorl
out
mov
pop
jo
jne
inc
push
xchg
jo
xchg
dec
inc
daa
loope
outsl
mov
adc
cltd
imul
push
dec
insl
cmp
jecxz
aad
inc
fisttpl
mov
mov
nop
out
jo
add
or
std
pop
loopne
and
xchg
jne
inc
arpl
mov
and
pop
inc
mov
cmpsl
loop
pop
jp
pushf
orl
popa
jecxz
push
sub
inc
mov
mov
mov
push
adc
cmp
test
xchg
sub
imul
mov
cld
lahf
xor
idivb
scas
andb
ret
fcmovb
mov
dec
and
mov
gs
cld
aam
mov
imul
and
add
loope
xor
pop
sbb
pusha
push
cmp
jbe
cltd
xor
js
add
and
inc
aam
shll
insb
addr16
xchg
std
sub
mov
fidivrs
popf
aam
and
sahf
stos
jae
adc
out
jae
xlat
orl
mov
out
sbb
and
dec
mov
cmpsb
xchg
mov
cld
iret
movsb
lret
xsha1
cmpsb
into
hlt
mov
int
int3
stos
xchg
ljmp
jnp
xchg
push
pop
ja
xor
std
std
call
je
xchg
jp
push
jbe
dec
addb
lock
hlt
ljmp
cmp
or
shrb
fcomi
cltd
add
inc
adc
and
mov
pop
and
mov
shrl
jnp
sbb
add
mov
stos
adc
lods
adc
sbb
jo
add
stc
addr16
inc
sub
add
pushf
lret
cmpsl
dec
dec
ficoms
xchg
cmpsb
cmp
push
clc
mov
fs
jmp
int3
shrl
out
add
or
mov
dec
adc
sti
int
adc
sahf
pop
sub
stos
xor
mov
loope
frstor
push
jge
push
push
mov
fstp
inc
nop
mov
mov
xor
cmp
jp
ja
mov
arpl
push
cwtl
push
sbb
leave
cli
sahf
aas
aam
nop
push
jmp
sub
xor
jmp
test
leave
mov
sub
aad
movsb
mov
xor
mov
sbb
dec
push
mov
xlat
mov
cmp
mov
cmc
pusha
call
into
xor
mov
sub
xchg
jb
fwait
insl
sub
jle
adc
fildll
mov
test
cltd
push
nop
jmp
jg
hlt
xchg
pop
sahf
aaa
popa
lret
int3
popa
icebp
dec
call
ret
icebp
xchg
repz
xor
in
imul
lds
sub
roll
scas
fucomi
rcrb
jle
stos
push
hlt
push
jecxz
out
mov
sbb
mov
mov
add
cmc
ss
and
push
loopne
add
xor
insb
push
movsl
adc
push
clc
js
es
ljmp
es
jae
dec
fisttpll
jge
mov
rolb
subb
push
jge
int
jno
lock
and
sub
and
aaa
sbb
sub
push
mov
jp
push
and
mov
in
ss
xor
cmp
movsl
mov
push
test
shrb
stos
cmp
sbb
clc
mov
dec
lock
int3
clc
fnstsw
push
sub
in
fmuls
repnz
adc
adcl
cltd
cwtl
push
push
out
add
out
enter
mull
int3
mov
cmc
test
xchg
test
xor
or
add
es
jbe
fidivs
add
push
arpl
leave
sbb
shr
loop
mov
ss
leave
pop
mov
dec
stc
mov
lods
pop
push
call
mov
cmp
lds
mov
jle
lods
inc
push
inc
inc
xchg
jae
lds
sti
push
in
cmp
add
js
add
mov
test
out
pop
insl
mov
or
fs
dec
shr
out
stc
xlat
jle
pop
sbb
imul
mov
loop
cld
push
lods
xchg
das
mov
loop
mov
pop
lcall
jb
sahf
scas
mov
arpl
in
and
test
lea
in
add
cli
stc
je
in
cmp
inc
into
xlat
movsb
push
mov
in
fadd
iret
fnop
pop
and
sti
cmpsb
movsl
sub
adc
inc
add
leave
lock
inc
test
imul
out
mov
cli
test
jmp
mov
into
xor
inc
movsb
jp
in
or
mov
inc
fmuls
sub
jmp
mov
push
leave
add
xchg
cmp
iret
enterw
xchg
int3
xchg
xor
or
mov
adcb
dec
or
leave
sub
cmc
push
dec
mov
and
cs
push
xor
xchg
mov
notl
pop
test
mov
mov
push
cmovs
imulb
pop
rcrl
mov
andl
stos
insb
stos
mov
xchg
and
sub
push
sbb
jns
cmp
cwtl
sbb
scas
test
lock
xlat
ficomps
nop
and
mov
sbb
cs
ret
ficoml
mul
es
pop
mov
dec
aaa
insb
pop
popf
dec
mov
adc
lcall
in
pushl
rorb
inc
mov
mov
push
mov
pop
and
push
lods
fnstenv
clc
shll
dec
pusha
ljmp
push
movhps
lds
xlat
das
sbb
mov
and
enter
add
stc
repnz
pop
mov
mov
push
mov
xorl
xor
mov
lea
inc
dec
xchg
pop
mov
dec
cli
ret
test
sahf
mov
lods
in
and
cmp
pop
xlat
aad
loope
adc
or
sub
mov
push
jns
mov
addr16
cmpsl
mov
andb
jmp
es
cmpsb
shll
cmp
mov
xchg
or
fmull
ss
nop
xor
repnz
popa
jnp
fmull
mov
sub
jl
cli
fisttpll
jo
loopne
mov
dec
lods
cwtl
add
shlb
ja
scas
stos
jle
adc
dec
fistps
sub
push
cwtl
xchg
in
or
mov
xchg
inc
scas
sub
negb
mov
mov
lods
mov
mov
lea
clc
mov
cmpsl
sbb
sbb
jp
push
hlt
es
jae
out
dec
sub
mov
jge
out
xor
inc
int
stc
jb
xchg
jle
sbb
xchg
push
aas
call
push
lahf
sbb
nop
movsb
xchg
jl
ss
or
jg
dec
dec
push
or
cltd
cltd
movsb
hlt
cmpsb
inc
scas
push
aad
mov
jle
sbb
imul
dec
adc
int
mov
mov
test
unpckhps
mov
dec
rcrb
ret
add
mov
mov
and
fstpt
dec
mov
mov
cmp
imul
mov
and
shrl
fldt
js
or
xchg
jmp
pop
pop
testl
fs
push
pop
xchg
es
push
out
test
and
fbld
cmp
push
test
push
add
mov
sti
push
or
fldcw
jl
jmp
sahf
ds
mov
mov
push
xchg
xchg
inc
dec
sbb
shr
mov
aad
leave
gs
arpl
inc
jb
ss
repz
push
repz
push
ljmp
dec
insl
jb
cmpsl
and
sub
mov
dec
scas
add
repz
add
aam
mov
mov
repz
aad
insb
add
loopne
cs
or
cmp
out
fs
in
mov
sub
adc
push
imul
push
sub
mov
aam
pop
sbb
push
les
rol
bound
les
call
jmp
or
test
mov
xchg
in
jp
cs
aaa
xor
mov
push
fsubrl
jns
pop
in
cltd
and
push
lock
pop
sti
mov
jb
push
out
mov
xchg
push
lea
stc
cmp
mov
pop
data16
mov
cltd
dec
inc
xlat
aas
sub
pop
mov
je
or
loopne
enter
sub
ret
mov
mov
std
popf
push
rcrb
sti
ljmp
mov
pop
cmovae
xor
sbb
test
in
sbb
das
fildl
js
pop
mov
mov
pop
aam
xor
ja
popf
out
xor
jo
sub
or
sub
and
shll
xchg
stos
inc
adc
cmp
repnz
jle
in
jmp
cli
mov
into
rolb
xchg
xor
es
xchg
mull
and
cmp
pop
mov
ret
jge
adc
mov
imul
lock
push
movsl
lret
shrb
iret
sbb
jae
cmp
shlb
adc
xor
jno
fbld
loopne
imul
imul
dec
out
mov
lret
jo
and
ds
mov
sbb
stc
push
in
pop
fcomp
mov
sub
push
mov
loop
int3
jp
or
dec
cmp
ret
call
clc
daa
mov
jb
sti
and
push
arpl
push
push
ds
mov
ss
jnp
cmp
or
enter
std
pop
push
shrb
push
xlat
fs
sub
daa
jmp
mov
jne
cmp
iret
addr16
ret
sub
add
adc
sub
pop
test
fdivrl
and
sahf
out
testb
sarb
sub
push
sbb
push
or
inc
mov
int3
mov
cwtl
clc
jnp
mov
outsl
add
inc
lock
or
repz
cmc
adc
push
in
aaa
loop
mov
clc
or
and
xorl
clc
fdivr
das
or
in
mov
xchg
xchg
xchg
xlat
push
jl
jb
cltd
sbb
sbb
mov
stos
sub
ret
sar
rorb
daa
xchg
and
jmp
sbbb
out
cltd
lods
pushf
mov
outsl
cmc
adc
insl
and
xchg
push
fdivl
dec
fmull
push
sub
test
lds
fistpl
pop
inc
mov
std
aam
jbe
mov
mov
daa
insl
stc
adc
sbb
fisubl
leave
dec
mov
call
clc
pop
frstors
ds
out
mov
mov
or
inc
loop
xor
clc
ss
sbb
std
lret
mov
andl
hlt
test
or
inc
xor
push
popa
push
ss
push
std
mov
out
ficomps
arpl
lahf
enter
xchg
adc
xor
dec
bound
loopne
cmp
repz
push
pop
xchg
inc
sbb
xor
cmp
push
add
sub
movsl
jne
test
cmpsb
push
mov
push
jl
mov
add
f2xm1
jb
push
mov
sbb
jo
mov
add
and
add
push
ret
dec
cld
pop
adc
xlat
inc
inc
pusha
mov
inc
rcll
jae
je
mov
fiadds
inc
and
push
into
in
xor
sub
fwait
jmp
push
push
fisubl
lahf
lock
fisttpl
lock
push
push
push
je
xchg
mov
adc
fstpt
jecxz
adc
repz
pop
rorl
jg
push
cs
fwait
pusha
add
sbb
int3
test
pop
pop
bound
xor
int
popf
in
test
sarl
movl
mov
repz
push
xchg
lds
out
jle
inc
push
decl
mov
nop
cpuid
xchg
xchg
mov
jne
scas
pop
jnp
hlt
xor
sub
jmp
out
out
ror
leave
rcrb
shrl
inc
scas
xchg
jg
adc
fdivs
pop
xor
gs
adc
in
clc
scas
aad
add
test
mov
mov
push
int
mov
jnp
pop
pushf
sub
and
idiv
popf
cltd
cltd
mov
loope
dec
inc
imulb
push
sub
sub
fistl
dec
flds
mov
xchg
std
push
mov
cmp
faddl
cmc
movsb
notb
shll
inc
sub
mov
pop
fnstcw
add
and
jp
sbb
or
sbb
js
mov
notb
sub
into
int3
pusha
loopne
mov
clc
clc
mov
mov
lret
pop
lds
jno
fildll
add
rorb
pop
pop
xor
push
test
mov
fstpl
loopne
shrb
inc
push
into
pop
jb
inc
divb
mov
imulb
pop
iret
fcmovu
adc
add
mov
jmp
ror
hlt
cmp
pop
fstpt
mov
mov
mov
xchg
lock
xchg
jg
mov
dec
fwait
cmp
cmp
push
adc
sbb
insl
lods
pop
lret
xchg
inc
pop
rcrb
clc
pop
or
mov
pusha
das
push
sbb
push
sub
mov
mov
push
mov
add
cmp
and
pop
inc
ret
dec
inc
adc
dec
jg
stos
sub
das
aam
pushf
mov
and
scas
push
icebp
dec
in
mov
xor
inc
das
movb
add
pop
test
mov
mov
movsl
arpl
mov
jg
dec
rcrl
dec
mov
movsb
loopne
xor
cmp
jmp
lret
insl
bound
jp
xchg
and
stc
inc
out
repz
push
pushf
cmp
loop
jno
lret
aas
cmp
sbb
xchg
or
mov
jge,pn
jle
pop
out
dec
jecxz
in
pop
pop
jecxz
rcrl
mov
cmc
insb
stc
ljmp
cmp
lds
push
ret
cld
insl
inc
out
nop
stos
fnstcw
mov
cmp
int3
dec
pop
pop
pop
sarl
dec
jns
pop
clc
dec
stos
shlb
ret
into
loope
sti
jne
or
xchg
scas
push
and
mov
mov
jae
jne
pop
xor
rclb
xor
into
leave
cmp
lods
sub
imul
in
aaa
push
xor
lds
orb
adc
outsl
mov
adc
js
mov
fistps
mov
ljmp
sub
and
and
mov
pusha
or
iret
jge
xlat
cwtl
pop
std
int3
pushf
or
aam
jns
fldl
xchg
mov
lret
fwait
out
mov
cmp
hlt
sub
cmpsb
xchg
enter
sub
inc
mov
int
pushf
repnz
sti
test
nop
je
ljmp
pop
int
sahf
mov
pop
mulb
xchg
cmp
xchg
push
stos
sahf
jg
mov
fsubr
test
in
fwait
jae
lods
push
adc
fs
mov
aam
outsl
add
or
inc
loope
gs
lret
mov
xlat
ja
sub
xor
lods
je
repnz
movl
adc
insb
push
jne
sub
ret
pop
and
bound
cmpsl
jle
mov
stc
jge
mov
dec
ffree
dec
std
pop
push
fwait
pop
sub
popf
dec
xor
das
std
adc
arpl
xchg
sbb
test
pop
and
sub
mov
in
dec
popa
sbb
cmp
fadd
pop
push
add
int3
xor
inc
push
add
xchg
fistpll
or
std
out
mov
adc
inc
call
hlt
adc
mov
test
adc
stos
clc
dec
dec
icebp
pop
xchg
fists
cmp
hlt
mov
stos
clc
adc
notl
inc
sbb
inc
mov
movl
ljmp
scas
or
pop
push
cmpsb
sahf
arpl
adc
mov
and
dec
pop
sub
jae
in
and
jecxz
add
dec
frstor
mov
pop
dec
adc
call
aaa
sub
adc
adc
cltd
in
cmp
dec
enter
fcompl
pop
stos
dec
xchg
nop
shrl
pop
stc
aaa
mov
and
inc
adc
movsl
xor
xor
outsb
pusha
rcl
xchg
add
mov
xor
push
sub
sub
in
outsb
in
adc
adc
sbb
push
enter
xchg
sbb
sbb
push
lret
test
jne
cmp
dec
mov
cld
cli
dec
fdivrl
lret
pop
or
or
les
out
leave
and
repz
cmc
inc
sbb
mov
inc
push
cli
es
scas
sub
outsl
and
in
int
daa
sbb
sar
mov
fs
fsubs
sti
sub
xlat
sbb
pop
andl
and
lahf
icebp
adc
inc
push
push
aaa
xlat
xor
cmp
xchg
mov
xchg
jmp
fmulp
adc
xor
fadds
in
jg
mov
leave
mov
outsb
inc
xor
fs
call
data16
or
leave
jbe
nop
jmp
pop
cmp
xchg
pop
aas
sahf
cmp
stos
mov
dec
out
mov
jne
sub
sahf
pop
lods
clc
fiaddl
imul
push
dec
les
and
xchg
pop
je
aam
into
or
pop
pop
notb
mov
push
fmulp
mov
movsl
jnp
call
and
adc
in
adcl
insb
xor
or
scas
out
andb
mov
popa
mov
push
pop
subl
sub
xchg
inc
sub
xchg
pop
cmp
mov
jnp
add
andl
push
mov
ret
in
bound
xchg
bound
nop
stos
lret
adcl
cmp
or
pop
inc
add
orl
xchg
push
or
loopne
mov
ljmp
mov
jno
mov
add
xchg
and
lret
push
xchg
jle
std
cmp
loopne
popf
ds
xor
shrb
leave
jle
loop
adc
and
push
rolb
imul
incl
dec
lret
ret
xor
stos
jecxz
divl
in
in
stos
mov
pop
mov
and
cmovno
outsb
or
rolb
mov
jb
cmc
loop
mov
add
sub
cmp
xchg
xor
inc
and
mov
mov
in
inc
inc
sub
insl
inc
sahf
fldcw
xchg
mov
push
pop
mov
inc
cmp
into
mov
adc
gs
and
cmpsl
jge
and
notb
sbb
mov
mov
push
stc
mov
je
sahf
jle
jbe
call
pop
adc
xor
push
loop
outsl
mov
add
pop
fwait
cmpsb
mov
test
fsub
loope
mov
inc
arpl
cwtl
jg
scas
leave
mov
testl
xor
mov
sbb
and
push
insb
in
int
jnp
call
jo
jle
scas
adc
mov
shlb
xor
cltd
xchg
add
sub
dec
sub
ljmp
clc
push
shll
mov
iret
adc
rorl
mov
and
outsl
xchg
orl
sar
push
push
jno
or
decb
rcl
xchg
lret
test
cmp
push
adc
ljmp
and
gs
xor
leave
fidivrs
test
loop
jb
lods
pop
ret
les
mov
cmp
inc
or
incb
fwait
mov
inc
leave
inc
cmpsl
sbb
jmp
fbstp
adc
jmp
xchg
icebp
sbb
mov
jnp
into
jns
pop
fidivrs
jbe
cmp
jmp
aas
enter
dec
mov
sbb
pop
xor
xchg
mov
std
add
lcall
add
cmp
xor
icebp
stos
xchg
fcomps
enter
inc
adc
jno
sti
shrl
cmpb
movsb
pop
fidivs
add
xchg
mov
push
mov
popa
int3
push
dec
in
jns
jmp
sti
call
push
ret
repz
cmp
lcall
add
push
sub
push
push
cs
sub
xchg
and
repz
nop
or
jmp
xlat
sbb
daa
in
jns
out
iret
xor
push
enter
inc
test
das
pop
dec
mulb
push
xchg
shrb
xor
push
adc
stos
lret
cltd
in
mov
add
dec
mov
inc
arpl
lret
mov
jg
mov
mov
adc
test
mov
rol
std
fcmovnu
ret
ror
xchg
rcll
sub
into
divl
push
mov
inc
ret
lock
js
sbb
mov
loope
push
mov
xor
inc
cwtl
cli
adc
stos
ja
sub
jp
pop
xorb
in
lock
jl
xor
js
mov
lcall
and
jo
or
add
aad
xchg
adc
daa
and
cwtl
jge
movsl
push
xbegin
mov
xlat
lret
and
sbb
sub
sbb
xlat
or
addr16
jp
and
mov
jg
outsl
inc
xchg
and
mov
and
cld
loope
push
out
pop
xchg
fildl
fsubs
cwtl
lock
pop
das
cmovnp
or
jae
xor
cmp
pop
fnstenv
loopne
scas
and
gs
xchg
fsubrs
cltd
cmp
adc
mov
xchg
cmp
push
in
dec
dec
push
notl
and
xor
ret
lret
add
jb
sbb
pop
or
pop
out
in
mov
jp
lock
fstpt
cmp
fisubl
fwait
pop
lcall
cmp
cs
add
mov
lods
and
mov
insl
mov
lods
testb
pushaw
orl
jae
notl
sarb
inc
mov
sbb
rcrb
xchg
mov
cmpsl
sub
js
movsb
push
in
pop
jecxz
push
fs
inc
dec
cltd
sub
lods
popf
call
add
jbe
cmp
push
mov
inc
mov
fs
lret
mov
fldcw
cmovno
psubsb
je
mov
jmp
sbb
out
jge
mov
or
mov
xchg
cmpl
add
sbb
dec
fisubrl
dec
pop
mov
pop
push
mov
dec
mov
negb
mov
jle
fidivs
jmp
rcl
in
xchg
sub
jl
inc
sub
add
outsl
cmp
pop
jecxz
sub
clc
jnp
pop
xchg
xchg
fsubrs
mov
cmpsb
repnz
fsts
sub
shlb
jp
pop
adc
gs
push
sbb
sub
jecxz
mov
ficompl
rol
cld
outsb
pop
pop
or
dec
add
dec
outsb
in
cmp
sbb
stc
add
jp
pop
fsubr
pop
jne
out
js
jbe
xor
xchg
inc
lock
mov
push
mov
pop
cmc
and
pop
mov
or
in
aad
xchg
pusha
mov
cmp
into
adc
xor
mov
fwait
xchg
clc
out
jp
aam
sbb
sarb
xchg
into
daa
movsl
and
or
gs
loope
push
and
cmpsl
inc
sub
icebp
pop
leave
aam
lea
leave
fs
hlt
pusha
sbb
jecxz
mov
lret
aaa
rcrb
or
out
add
mov
mov
sti
rcll
and
jmp
fsts
aam
add
xchg
mov
scas
push
jne
add
subb
ret
out
dec
out
test
dec
mov
gs
jnp
xorb
add
pop
ja
fistps
mov
das
jo
fs
mov
fcoms
or
out
push
mov
mov
adc
jae
aam
sub
jne
lahf
cltd
fdivrl
mov
in
jbe
repz
rcll
into
adc
out
mov
imul
add
loopne
push
inc
mov
sub
inc
xor
xor
cld
lahf
inc
inc
outsb
pop
mov
pop
xor
inc
inc
js
push
and
xor
cld
or
dec
lcall
insl
loope
mov
mov
nop
cmpsl
insl
int
shrb
mov
jg
out
hlt
jb
cmp
push
call
adc
mov
sbb
xchg
andl
pushf
xor
push
mov
jp
mov
mov
sbb
mov
or
jb
loope
loop
fiaddl
icebp
xchg
jo
fistl
insb
push
pop
in
repz
test
shlb
or
mov
push
jp
jnp
sub
sbb
push
and
test
ret
aam
mov
lock
sbb
mov
fldenv
push
adc
mov
push
stos
ret
lds
add
xlat
out
dec
notb
into
inc
mov
jbe
shll
pop
dec
pop
push
dec
sub
cmpsb
test
imul
push
cmp
xchg
syscall
fwait
mov
mov
sbb
jl
jbe
fdivrs
neg
test
out
and
push
mov
mov
xchg
js
repz
cmpsb
call
xchg
adc
add
jb
enter
adc
lods
jbe
repnz
out
lea
adc
stos
adc
jne
inc
repz
rcrl
mov
hlt
in
cwtl
dec
mov
leave
into
jmp
cmp
xor
mov
dec
push
dec
sub
sub
or
adc
jge
arpl
jo
pop
pusha
negb
ret
fs
xor
xor
and
mov
mov
test
xchg
loop
inc
cwtl
mov
loop
aas
mov
xchg
fisubrs
jp
add
sub
sub
fcmovnu
cwtl
bnd
js
push
orb
and
cmp
and
push
mov
jo
mov
sbb
dec
mov
sbb
enter
dec
aam
xchg
jmp
fistps
and
mov
or
mov
cmp
das
in
out
dec
negl
rcrb
sub
addl
dec
test
mov
aam
sbb
adc
imul
pushf
in
mov
sub
and
shll
in
jo
sub
addb
and
or
add
scas
aad
nop
fldenv
aaa
mov
out
in
insl
mov
pextrw
in
ja
adc
fisttpl
sub
adc
test
pushf
subb
scas
and
sbb
repz
pop
cmp
adc
jb
and
seta
cwtl
mov
lds
idiv
or
mov
xchg
jo
jnp
sub
push
sbb
testb
push
xor
lods
lcall
adcl
addr16
sbb
test
push
aad
clc
xchg
leave
bound
aas
jge
or
dec
cli
sbb
sahf
inc
add
gs
xchg
mov
pop
push
push
xor
inc
mov
lock
push
inc
call
lods
mov
mov
fsubrs
dec
mov
pop
sahf
jae
dec
cmp
cmp
mov
dec
xor
addr16
sti
mov
aas
push
stos
dec
stos
sub
and
cmp
or
add
stc
push
push
xor
and
and
mov
fs
xchg
jmp
int3
test
repnz
imul
cmp
push
xchg
push
or
and
rcrb
pusha
leave
shlb
cmp
js
stos
mov
hlt
mov
cs
ja
leave
mov
andb
lock
xor
test
jp
adc
fisttps
mov
cltd
pop
sbb
sbb
sti
xor
std
fistpl
pop
cltd
insb
in
pop
sbb
je
jmp
pop
es
add
sbb
xor
inc
jnp
jmp
push
lret
enter
xchg
pop
pop
jne
cmp
sub
insb
pop
push
arpl
add
call
xor
mov
lock
xchg
mulb
push
jl
rcl
scas
pop
adc
sbb
mov
xor
cwtl
repnz
cmpb
sahf
jnp
sub
sbb
push
jmp
dec
pop
insl
popa
mov
daa
fidivrl
div
pop
pop
inc
out
les
iret
push
stos
int3
sbb
das
xchg
test
cmp
add
sbb
lock
xchg
xchg
pop
add
jae
sub
mov
into
cld
pop
or
pop
and
cmp
test
fs
cmp
fsub
push
sti
jl
xor
push
push
ljmp
test
sbb
lret
or
dec
add
andl
dec
sub
cld
sbb
jmp
sbb
push
push
jno
adc
xchg
add
dec
xchg
cmc
dec
subl
popf
or
cmp
jne
out
mov
or
cltd
cmc
ds
addr16
out
pushf
mov
ds
imul
or
jbe
mov
xchg
inc
daa
adc
pop
xor
fcoml
test
repnz
dec
out
sub
mov
pop
jns
jno
add
xor
sbb
mov
cmp
add
xor
add
lock
mov
into
int3
call
div
imul
into
gs
sub
mov
cmp
imul
pusha
jb
test
out
enter
xchg
sbb
pop
int3
pop
out
dec
and
daa
xchg
stos
ds
mov
push
or
pop
pop
outsb
push
stc
sub
cld
xchg
popa
shl
inc
lods
adc
add
jl
pusha
movb
inc
and
clc
mov
adc
in
push
in
enter
sub
or
out
dec
mov
mov
add
xchg
jne
or
daa
test
ret
call
push
jbe
adc
mov
mov
mov
fists
cmp
and
jecxz
mov
xor
scas
lahf
and
js
or
out
mov
rcll
lods
int
mov
decl
and
std
leave
outsb
nop
fnstenv
mov
aam
mov
mov
cld
xchg
repz
jecxz
pop
dec
test
adc
movsw
mov
cwtl
imul
jno
jp
push
pop
jmp
fmull
sbb
jae
mulps
dec
pop
add
int
pop
add
xor
movsb
ret
dec
rcl
xor
insb
insb
fbld
fmuls
inc
outsb
pop
pop
mov
lea
lock
dec
xchg
adc
insb
push
pop
dec
xor
mov
sbb
pop
insb
pop
jecxz
outsb
mov
push
repz
maskmovq
testl
rcll
mov
mov
jl
aas
out
insb
sbbl
aaa
hlt
or
lcall
cmp
push
push
xchg
mov
rorb
lret
sbb
or
dec
popa
push
cmc
mov
flds
inc
fldt
mov
inc
add
dec
add
adc
divb
inc
dec
orb
in
ficompl
mov
jnp
incl
mov
pop
xchg
jae
push
leave
pop
arpl
fcomp
pop
pop
test
out
add
cmpsl
and
dec
or
roll
sub
fmull
std
rolb
pop
in
cmp
jl
xchg
scas
adc
outsb
xchg
arpl
and
mov
nop
lods
inc
nop
fistpl
test
jb
hlt
test
movsb
push
lret
mov
mov
pop
pop
pop
xchg
ja
xchg
jecxz
and
jne
cld
or
mov
xchg
pop
popf
pop
outsl
or
xchg
repnz
mov
push
push
movl
adcl
lock
repz
enter
ds
pop
je
pop
add
mov
out
aaa
mov
mov
dec
subl
leave
je
std
cmp
fdivrl
insl
pop
js
cmp
or
rorb
pop
xchg
sub
dec
scas
xchg
loope
dec
scas
sub
mov
ds
sub
jmp
push
hlt
jb
notl
and
jge
xchg
and
mov
rcrl
add
out
adc
fsts
add
fldenv
ficoms
outsb
scas
sbb
push
jmp
cli
sub
sbb
aas
push
mov
ds
pop
cmp
xchg
sbb
cmp
fisubl
in
pop
jmp
mov
popf
in
jb
popf
push
mov
ficoml
call
out
push
or
xor
jnp
jmp
cltd
mov
outsl
fmul
jne
popa
repz
mov
pop
xor
adc
scas
pop
sub
lea
pop
pop
xchg
aam
push
sub
fimull
jae
out
xor
adc
fsts
sti
mov
aad
xor
je
inc
and
popf
rcrl
test
addr16
jns
ja
push
push
loop
fs
out
clc
in
jo
pusha
cltd
sbb
pop
iret
leave
hlt
mov
or
mov
test
inc
xor
repz
mov
in
xchg
lcall
sbb
inc
enter
mov
xchg
stos
in
call
cmc
pop
ljmp
add
mov
rcll
xchg
and
pusha
xor
pop
lcall
addr16
or
ja
stc
xor
and
lds
lock
dec
mov
in
mov
mov
sbb
xor
test
inc
stos
fimull
aas
cld
adc
cs
mov
lret
jmp
je
pop
pop
push
jnp
jno
js
or
pusha
sub
jmp
jno
adc
insb
fs
pop
cmpsl
push
xor
in
jl
es
scas
jge
mulb
adcb
mov
mov
ss
add
mov
loop
je
or
hlt
jb
hlt
cmp
push
adc
or
ja
xor
scas
test
int
cmp
and
clc
pop
and
push
mov
int
xor
inc
fistpl
addr16
inc
xlat
shlb
xorb
xor
popf
rorl
lret
shlb
out
aas
xor
aaa
inc
fs
sahf
jl
lods
pcmpeqw
jg
inc
daa
mov
sarl
bound
lret
inc
inc
int3
lcall
popf
mov
and
aam
dec
add
sub
jg
subb
sub
stos
in
cmp
and
mov
rcrb
add
std
dec
pop
cmp
scas
or
mov
add
orl
lea
add
add
frstor
shll
xchg
lods
mov
xor
dec
xor
pop
js
dec
lock
inc
in
cli
iret
fs
mov
ss
cltd
cmp
jle
jg
xor
push
sub
enter
jae
jnp
mov
mov
fldcw
jecxz
cmp
inc
loope
push
sbb
pop
sub
out
cmpsl
add
lret
negb
popf
loop
rol
les
stc
xor
movsl
aam
cwtl
push
xchg
add
cmp
mov
cmp
pop
ret
mov
out
dec
cltd
mov
cmpsl
and
aaa
fsubl
out
jbe
dec
xor
pop
mov
bnd
pop
scas
cmp
mov
jo
cmc
jo
push
in
pop
bound
orb
adc
ss
xchg
mov
mov
xchg
mov
movsl
das
icebp
adc
jns
ljmp
and
lea
insl
scas
jns
pop
or
xchg
inc
cli
sub
call
or
add
and
jecxz
in
fmuls
daa
xchg
push
fmuls
jecxz
sbb
test
in
cwtl
sbb
mov
into
mov
xchg
repnz
gs
push
xor
outsl
dec
in
pop
test
mov
push
sarl
add
pop
ret
fdivl
fucomp
or
xchg
rorb
lods
insl
mov
mov
mov
lods
jp
push
mov
inc
adc
jl
divl
inc
xchg
dec
jle
mov
rorb
sbb
xchg
jns
pop
push
mov
mov
adc
lret
jle
lock
fadds
aad
xor
xor
aam
sbb
and
sub
push
xlat
data16
fcmovu
mov
sti
xor
dec
loop
inc
push
sbbl
push
xchg
jbe
loopne
inc
inc
sbb
loopne
in
negb
ja
out
pop
pop
mov
popa
pop
jae
mov
or
leave
mov
arpl
cmp
in
cltd
adc
mov
fdivr
inc
js
jl
arpl
adc
mov
stos
jne
leave
mov
pushf
out
pop
push
jne
fsub
cmpsl
imul
add
inc
mov
pop
roll
lock
cwtl
pop
loop
dec
mov
jp
sbb
or
leave
mov
dec
mov
pusha
cmp
pop
cmp
push
int
scas
mov
sbb
shlb
scas
add
mov
pop
scas
ja
jmp
mov
test
dec
dec
mov
mov
fsqrt
add
gs
fcom
jb
dec
imul
ja
or
outsb
xchg
ficoml
data16
hlt
cmpsl
push
xchg
das
test
push
mov
iret
mov
out
daa
cmp
push
mov
mov
mov
mov
sub
icebp
fdiv
lds
inc
push
shlb
add
jmp
mov
lret
mov
pop
or
push
push
clc
cli
mov
stos
add
xchg
xor
loope
cmp
stos
mov
mov
fs
inc
sti
fldcw
adc
jle
mov
leave
aam
or
psubd
cwtl
movsl
scas
or
lea
cld
int
jbe
daa
ljmp
mov
cmp
mov
loope
jp
insb
mov
rcrl
in
xlat
mov
mov
cli
mov
adc
movsl
shll
leave
int
lea
scas
js
mov
int
dec
lods
pop
and
xchg
mov
dec
int3
sahf
pop
jg
ret
fldt
outsb
xchg
xchg
ficompl
push
pusha
sahf
scas
stos
fidivs
ret
dec
or
cmp
adc
push
cmp
imul
mov
pop
xchg
adc
push
inc
loopne
std
and
adc
ss
xchg
cmp
inc
and
ljmp
fimull
insb
scas
idivl
dec
jmp
or
in
push
inc
jae
xchg
push
jp
jno
lock
rol
scas
test
sbb
or
inc
add
xchg
add
pop
and
xor
ficoml
mov
aad
push
popf
sahf
mov
jno
pop
push
stos
pop
es
test
dec
call
loopne
pop
js
pop
pop
and
xlat
jno
push
jns
add
xchg
pop
xchg
sbb
pop
icebp
fcmovu
sub
xchg
mov
mov
xchg
xor
nop
xchg
jle
push
shl
dec
pop
fisubs
adc
xor
lret
dec
imul
insb
cmp
fisubs
daa
push
in
repnz
or
movsb
and
dec
push
lret
into
lahf
cld
subl
aad
lea
xchg
sbb
jg
stos
shll
rcll
push
pop
dec
in
icebp
jnp
push
fwait
adc
icebp
sbb
mov
xor
out
ja
mov
loope
push
xchg
cmpsb
jo
mov
dec
js
out
out
loope
aad
addb
or
rol
jo
fmuls
dec
push
sub
fidivrs
loopne
pop
and
cmpb
add
call
jp
mov
clc
fbstp
leave
mov
jmp
adc
outsb
mov
add
cmpsl
out
inc
dec
mov
out
push
mov
cs
imul
xor
xor
xlat
xchg
shll
sbb
and
xor
mov
lret
out
cmp
mov
test
lea
jp
jo
mov
sub
mov
lcall
inc
pushf
sbbb
push
sbbl
mov
call
mov
push
movsb
cmp
in
xchg
push
inc
nop
mov
adc
mov
andb
scas
inc
pop
jae
cltd
push
enter
jg
xor
mov
imul
sti
lcall
test
hlt
fnstenv
cmp
xchg
int3
lcall
push
adc
push
movsb
int3
cmpsb
sub
and
pop
dec
sbb
push
inc
pop
mov
sti
or
ret
jae
add
mov
clc
stos
cli
outsb
mov
pmuludq
mov
sbbl
lahf
mov
mov
in
ret
stos
mul
divl
mov
loopne
loopne
sahf
pop
push
hlt
xchg
or
jae
ret
test
jle
aaa
test
repz
or
in
dec
sahf
sbb
jle
insl
nop
mov
mov
and
das
sub
push
aas
ljmp
cmc
xchg
mov
dec
xor
inc
out
inc
jb
sbb
test
xlat
call
je
addr16
idivl
loope
dec
pusha
jne
sub
mov
imul
negb
pop
fisubrl
scas
ret
push
sub
pop
leave
movb
xchg
adc
sbb
dec
xlat
test
jnp
orb
jno
mov
xchg
out
cs
pop
stos
scas
jae
call
cmc
mov
lea
outsl
popa
jp
and
scas
inc
scas
jmp
lahf
dec
or
xchg
sub
aad
xchg
jb
cld
push
popf
sarb
push
push
mov
mov
pop
add
push
sbb
out
cltd
mov
addr16
hlt
insb
mov
inc
ret
cmp
pop
inc
xchg
jmp
insl
mov
aaa
fsubrl
push
out
mov
pop
imul
enter
sbb
sub
leave
push
cmp
rdmsr
or
out
cmpsl
sahf
and
in
iret
aas
mov
push
pop
push
in
cmp
pop
mov
inc
or
sti
fdivl
inc
inc
mov
mov
int3
pop
in
and
into
sub
lods
and
pop
xchg
pop
popf
cmp
pop
rorb
xchg
cltd
mov
addl
insb
and
fsub
add
or
jns
mov
popf
add
imul
mov
and
or
roll
fs
jae
xchg
jecxz
into
push
jle
xchg
cmc
adc
xor
ret
cmpb
sub
aaa
cltd
sbb
in
out
sbb
scas
adc
es
and
xchg
loope
cmp
mov
imul
dec
cmpl
out
mov
mov
adc
jnp
push
push
or
lea
inc
add
ds
icebp
and
mov
and
jns
mov
cmp
dec
push
lea
xchg
pop
test
mov
daa
cs
int
push
rol
cwtl
pop
std
cs
mov
pop
negb
in
lock
xchg
mov
sti
lea
push
rcrl
adc
fwait
and
mov
jl
xchg
adc
daa
stos
in
jb
jl
aad
out
imul
xchg
pop
aad
mov
sub
cmp
cltd
sahf
fucomp
ret
cmp
adc
aas
je
pop
xchg
xor
movsb
sahf
nop
adc
jecxz
fidivrl
sub
cmp
sbb
or
mov
bound
mov
fsubrs
dec
jl
ds
push
jl
mov
jl
cwtl
push
stc
insl
fwait
sbb
idiv
jae
sub
mov
mov
orl
out
mov
pop
xor
mov
repnz
dec
push
sub
sub
icebp
arpl
mov
mov
mov
pop
jecxz
insl
mov
jge
lods
push
cmpsl
mov
adc
adc
and
loop
inc
jp
sbb
or
gs
pop
into
inc
or
push
icebp
dec
sub
fs
aad
lahf
mov
into
ja
ret
push
push
lods
push
sub
mov
jge
out
jbe
fnstsw
inc
cltd
inc
add
cli
sbb
lods
cmp
pushf
test
das
js
adc
mov
adc
push
jnp
aad
test
lds
mov
mov
jbe
call
aam
mov
sub
ret
repnz
rolb
mov
push
dec
cmp
cmp
js
and
mov
sub
nop
pop
push
cmpsl
into
cmp
add
mov
cmpsl
push
mov
addr16
adc
jae
mov
fadds
push
loop
sub
loop
test
rolb
inc
leave
cmp
xchg
mov
fisttps
sbb
mov
dec
inc
call
mov
hlt
into
mov
subb
sarb
sbb
shlb
pop
push
add
dec
test
jecxz
out
or
add
addr16
mov
pop
fldl
pop
std
fidivs
enter
push
xor
or
lock
lods
push
dec
test
pop
inc
and
inc
shlb
mov
jg
add
jecxz
cmp
add
int
xchg
or
adc
pushf
inc
outsl
cltd
sub
hlt
pop
aam
orb
mov
xlat
out
shll
mov
popf
movsb
pop
shll
ljmp
push
ja
inc
xchg
inc
mov
repnz
jno
loope
outsl
xor
sbb
in
mov
clc
dec
fmull
push
dec
gs
jb
pushf
jae
rorb
out
aam
lahf
ljmp
mov
mov
sahf
repz
xor
js
test
inc
test
mov
push
lahf
sub
mov
jg
xchg
daa
popa
std
enter
push
and
cltd
fidivrl
mov
outsl
clc
test
or
push
mov
jl
lret
call
add
push
or
cltd
mov
sub
and
mov
mov
lahf
push
adc
pop
ds
cs
inc
dec
dec
pop
je
pop
test
arpl
dec
popf
test
hlt
inc
aas
cmp
dec
adc
dec
lock
decb
sarb
stos
push
mov
or
mov
in
adc
inc
bnd
sub
mov
outsb
lock
dec
scas
out
add
mov
cltd
push
insl
lahf
jl
adc
cli
mov
pop
jns
das
jo
addr16
in
inc
mov
add
out
lret
add
shlb
mov
stos
pusha
cltd
repnz
insb
cmpsb
outsb
add
push
sbb
push
leave
pushf
adc
jp
fdivrp
xchg
es
mov
outsb
xor
pop
daa
sub
jg
push
int
mov
sarb
add
movsb
xor
xchg
outsl
sti
out
push
pop
xchg
test
fstpl
pop
in
addr16
test
jno
push
and
cmp
pop
fnstsw
push
shl
ret
lcall
ja
add
cwtl
cmp
sub
bound
jl
ficomps
fs
std
mov
lds
addb
xacquire
and
mov
mov
out
push
or
cmp
fs
sub
mov
jmp
pop
cmpl
fld1
cmpsl
mov
xchg
mov
in
fisubrl
dec
or
leave
jo
inc
jns
sbbb
js
xor
and
int
roll
pop
inc
sarb
lcall
out
mov
jae
int
clc
nop
sti
jecxz
xor
push
dec
mov
enter
sub
sub
push
iret
jns
push
icebp
ret
sahf
test
jmp
xbegin
mov
ret
hlt
scas
and
sub
sub
mov
test
test
or
jbe
les
jbe
jp
popl
pop
push
push
pop
cmp
mov
enter
cmpsb
and
jge
popf
mov
daa
fnstenv
pop
xchg
pop
push
aam
fucomp
cmp
icebp
sub
inc
dec
push
mov
xchg
aad
add
or
inc
xchg
mov
push
imul
sub
nop
pop
loop
jnp
icebp
sub
test
lea
das
inc
cmp
sub
loopne
adc
pop
adc
sbb
dec
mov
fcomi
adc
mov
repz
or
jns
xchg
fwait
cmp
int3
test
ss
mov
int3
div
lea
xor
icebp
cmpsb
dec
imull
pop
mov
lea
cmpsl
cmp
cmp
fsubrl
mov
outsb
in
and
stc
mov
int
pop
push
lock
scas
test
sub
imul
daa
jbe
addr16
jp
fcomps
cmp
stos
daa
les
push
imul
mov
aas
dec
cmp
inc
and
fdivp
fnstcw
adc
fists
mov
sub
mov
js
pop
dec
ror
stc
inc
xor
add
mov
ljmp
insb
fisubs
aam
dec
and
ds
test
cmovo
xchg
dec
cmpsl
loopne
cli
jmp
js
lret
ret
fdivs
std
dec
je
test
lcall
clc
out
sub
es
bound
popa
mov
js
push
pop
and
lods
bound
and
out
push
push
pop
dec
roll
adc
pusha
dec
xchg
das
xor
xlat
mov
imul
or
or
adc
mov
cmp
in
insl
adc
xor
fbld
cli
pop
mov
icebp
xchg
dec
mov
jb
pop
mov
and
fs
xlat
je
dec
mov
adc
inc
fsts
jo
lcall
xchg
dec
out
repnz
xlat
mulb
sub
cwtl
arpl
or
neg
cltd
mov
mov
js
out
out
loopne
add
arpl
mov
mov
cmp
and
mov
mov
jne
lret
insl
aas
cmp
jae
jmp
mov
lods
sub
ret
jle
cmp
push
data16
sub
shll
mov
add
pop
and
fistl
pop
rcr
cmp
fcompl
ret
lret
xchg
and
mov
scas
cli
repz
bound
and
icebp
rorb
sbb
xor
jge
rcll
pop
sbb
leave
adc
mov
ljmp
je
shrb
add
or
jmp
dec
test
rorb
sub
adc
or
ja
je
addl
mov
jge
imul
add
sbb
mov
pop
sub
daa
cmp
jno
inc
addl
jns
sub
aad
mov
xchg
jo
shl
out
sbb
xchg
cmp
sub
insb
aaa
mov
pop
push
fsubrl
hlt
cmp
and
adc
mov
push
sbb
xor
mov
or
push
push
ret
mov
fs
mov
mov
jo
loop
fldcw
xor
push
ljmp
das
adc
push
or
outsb
ds
es
mov
pop
jecxz
ret
and
add
mov
inc
or
bound
inc
lea
dec
mov
pusha
mov
xchg
mov
mov
cmp
mov
dec
and
movsl
mov
lahf
dec
ficoms
outsl
add
mov
imull
push
enter
xchg
imul
pusha
pop
lret
pusha
push
lds
sarb
mov
dec
inc
jbe
ds
sub
sub
int3
push
mov
rcl
mov
lcall
fidivrl
dec
xchg
insl
mov
cwtl
pop
adc
mov
push
std
mov
add
dec
and
test
mov
dec
adc
ror
cltd
sahf
jp
fcmovb
push
push
ficoms
push
movsb
sub
add
imul
and
mov
push
push
ret
mov
scas
xchg
jp
xchg
into
scas
std
cli
lcall
into
xor
loop
and
ja
jmp
mov
inc
rcrb
xchg
push
jae
clc
jns
pop
sub
inc
cmc
call
aad
gs
add
push
dec
adc
lret
dec
add
shlb
push
jge
jp
lcall
or
lods
push
jbe
inc
and
call
pop
jmp
repz
inc
push
mov
cmp
sbb
shl
jb
and
scas
cmp
sub
adc
pop
mov
fiadds
imul
sbb
addr16
jo
mov
and
mov
add
addb
idivb
push
ja
into
dec
cmp
inc
adc
call
jb
lret
add
sysenter
test
ret
cmpsl
fwait
std
mov
repnz
pop
xchg
jbe
push
fisubrs
mov
fidivrs
outsb
daa
push
jg
cwtl
mov
outsb
dec
aaa
dec
push
cmpsl
push
sti
add
imul
insb
inc
scas
sbb
sbb
lods
and
insb
xchg
jo
mov
sub
aas
sbb
dec
out
mov
sti
mov
mov
hlt
ret
push
mov
push
add
mov
jne
in
or
repz
mov
movsb
mov
ljmp
push
dec
ds
and
dec
adc
sub
push
xchg
mov
mov
shr
xchg
stos
sub
and
cmp
xchg
mov
lret
jb
lcall
pop
cs
adc
repz
adc
push
push
ss
sbb
es
sub
lcall
data16
fidivrl
ret
push
add
lret
cmp
negb
mov
adcl
lret
xor
in
pop
pushl
lret
inc
test
add
bound
adc
shll
sub
sub
sar
data16
lds
iret
scas
adc
popf
xchg
jno
insb
shrb
mov
dec
lock
out
dec
out
jecxz
rorb
mov
in
aam
jnp
sbb
mov
nop
lret
mov
loopne
jge
jns
mov
jno
ret
outsl
imul
outsb
xchg
inc
test
xchg
adc
adc
dec
cmp
mov
stos
mov
pop
std
inc
lea
ds
jecxz
out
pop
sbb
push
lret
or
xchg
movsb
sub
xor
xchg
mov
xchg
divb
pop
cmp
or
ficoml
jmp
inc
sti
jmp
cmc
mov
pop
sbb
cmc
mov
call
daa
or
jb
in
cltd
outsb
repnz
andb
lret
mov
in
outsb
cmpsl
ret
add
scas
insl
pop
mov
add
or
aam
jae
pushf
lea
lods
and
mov
pop
imul
lods
sub
sbbb
cmp
mov
lret
inc
adc
mov
dec
push
sbb
aam
add
inc
mov
add
pop
dec
jecxz
movsb
adc
mov
out
arpl
daa
jg
mov
bnd
bound
rcrb
arpl
fstpt
cld
jns
pop
out
add
js
imul
push
xor
adc
add
stos
xchg
add
push
jge
add
add
xor
add
push
mov
xchg
inc
test
mov
jns
push
xorl
inc
xor
and
lret
rclb
fwait
mov
inc
inc
popa
or
rolb
call
add
pop
or
pop
push
shll
fnstsw
aam
sub
nop
xchg
ljmp
ljmp
or
sub
cmpsl
xlat
rcrb
add
jg
aad
xlat
pop
popa
icebp
loope
ja
test
data16
cmp
cltd
nop
enter
cmp
adc
or
les
stos
adc
call
adc
xchg
adc
xchg
leave
jg
fbstp
gs
fisttps
cs
inc
add
pop
mov
and
push
adc
adc
sbb
out
in
pushf
adc
lods
lods
stos
js
adc
pop
xchg
sub
mov
cmpsb
test
push
mov
mov
xchg
out
push
insl
xor
xchg
add
popl
mov
mov
loop
sahf
gs
stos
rcll
cmpsb
lods
pop
and
lcall
ja
cmp
push
addr16
ljmp
pop
adc
pop
adc
pop
in
jb
jg
mov
add
popf
inc
jge
loopne
cmpsl
and
imul
pop
dec
inc
cmpsb
jne
inc
pop
imul
popf
cltd
inc
sub
pop
and
out
mov
sbbb
out
mov
in
add
push
into
pop
pinsrw
mov
xchg
movsb
fsts
jl
dec
lcall
mov
adc
jl
jmp
sbbl
lea
sub
push
pop
inc
dec
cmpsl
push
mov
mov
jp
adc
repnz
or
ds
jno
std
pop
test
mov
bound
mov
fistps
lahf
jo
outsl
ret
xchg
push
in
adc
aas
adc
pop
or
cmp
je
xchg
pop
andl
jno
push
jb
xor
add
cli
pop
or
insb
cs
and
jnp
testl
mov
cmp
popa
xor
inc
gs
popa
mov
mov
sbb
test
fsubrl
mov
xor
mov
adc
push
imul
dec
jb
jno
inc
aaa
stos
in
repnz
lock
rorl
sbb
mov
cld
aaa
pop
xchg
mov
fildll
sub
sub
cmp
jbe
jecxz
sbb
in
movsb
mov
dec
into
inc
aam
insl
jl
lret
cmp
sbb
les
popf
xchg
cs
js
lods
dec
bound
mov
xor
fdivs
adc
xchg
test
pushf
outsl
add
jbe
test
mov
and
pop
mov
jns
in
or
mov
mov
add
dec
cmp
adc
pop
int
call
adcl
pop
add
int
lret
push
mov
push
push
sbb
jmp
test
sbb
sub
rclb
push
xchg
movsl
pop
or
ret
lahf
cmp
test
push
jbe
fcoml
xchg
or
xchg
pop
cltd
add
data16
inc
cmp
mov
jnp
aaa
or
mov
mov
xlat
push
jl
or
mov
or
nop
test
pop
push
shll
into
jne
sarl
xadd
xchg
mov
pop
in
aad
loope
dec
xor
sbb
mov
popa
mov
ret
ja
add
mov
call
dec
sbb
in
cs
cltd
in
div
outsb
jecxz
jmp
pop
out
inc
pop
shl
addr16
cmpsb
fdivrl
mov
scas
pop
xor
cmpsb
xor
loopne
mov
sahf
jb
ja
nop
cmpsl
mov
dec
incl
popl
loop
inc
lea
sbb
inc
add
sub
int
pop
cmp
xlat
jecxz
cli
adcl
inc
jge
lods
xor
dec
xlat
push
add
pop
addr16
jge
cld
flds
or
ret
add
hlt
and
mov
jg
dec
lcall
xchg
xchg
adc
cmpsl
pusha
jnp
std
aad
into
hlt
popa
je
mov
and
jp
rep
dec
push
pop
arpl
xchg
clc
hlt
clc
mov
xor
dec
and
ds
cmp
es
sbb
ds
jl
dec
cmp
or
pop
and
mov
pop
add
xor
lods
cmpsb
in
jl
pop
loop
jp
sbb
fiadds
and
out
in
jns
out
sarb
pop
adcl
outsb
in
in
iret
roll
test
push
arpl
rcll
push
shr
imul
jmp
xchg
fisttpll
and
push
inc
jl
dec
adc
xchg
daa
cmpsb
js
repz
jp
mov
xchg
iret
fucomip
cmpb
sbb
inc
dec
repz
jg
negb
mov
aam
pop
pop
xchg
int
dec
andb
into
push
lods
cs
mov
lds
rorb
sbb
je
and
sbb
add
mov
jb
mov
mov
enter
sub
xor
cmp
call
push
and
jo
jnp
mov
fwait
stos
push
into
in
jmp
imul
sbb
shll
testl
dec
jnp
in
movsb
repnz
xor
adc
adc
hlt
mov
in
pop
call
dec
dec
out
xor
sbb
sbb
push
fisubrl
cmp
addr16
out
mov
jnp
push
lds
imul
bound
daa
xor
fdivl
fwait
or
adc
pop
stos
or
add
push
adc
ljmp
cmpsb
out
xor
xor
sbb
jns
mov
es
add
sbb
stos
scas
or
add
push
or
dec
jmp
xorl
mov
testl
jbe
jmp
out
outsb
inc
arpl
and
mov
add
add
mov
cs
dec
mov
icebp
fmull
out
jns
add
adc
addr16
mov
in
pop
cmp
mov
push
dec
jmp
xchg
mov
insb
ja
test
push
or
loop
hlt
fadds
sub
pop
jl
dec
arpl
call
add
test
in
hlt
cmp
add
inc
sbb
dec
icebp
push
lret
sbb
cltd
sub
insl
outsb
flds
xchg
xor
mov
lods
fs
les
fstps
fwait
lea
push
push
mov
jp
add
inc
imul
shlb
idivl
adc
mov
add
dec
mov
outsl
mov
inc
push
sub
loope
sub
sbb
push
pop
jbe
hlt
lahf
cmp
add
push
adc
ret
out
dec
mov
int
or
add
mov
cld
ror
cwtl
and
insb
push
adc
imull
sbb
cmp
dec
adc
stos
pop
int3
push
outsb
push
test
sbb
jno
mov
ja
out
das
fstpt
pop
add
lret
stc
xor
out
xor
sbb
cmc
ret
stc
hlt
test
and
repz
jb
aas
and
int
dec
iret
int3
inc
sub
or
pop
arpl
jne
enter
lea
add
cld
sub
xor
and
rcrb
rclb
andb
call
xchg
add
insb
push
and
xchg
lods
adc
aam
and
lcall
in
xchg
and
je
xchg
popa
ret
test
mov
inc
add
mov
addr16
add
lea
xchg
push
stos
sub
scas
xchg
mov
not
sub
adc
dec
push
outsl
outsl
sbb
adc
out
lret
push
adc
addb
and
pop
and
jnp
dec
xor
pushf
xlat
pop
cmp
mov
daa
or
mov
mov
jnp
mov
mov
adc
sub
add
mov
push
push
scas
mov
into
fisubrs
sti
filds
push
aaa
fdiv
insl
mov
mov
jb
bnd
in
and
cs
dec
je
aad
and
in
push
cli
ljmp
addr16
fnstenv
lahf
jnp
inc
out
dec
jg
mov
mov
xor
les
test
stos
inc
rcl
roll
hlt
mov
cmc
sub
mov
aad
inc
fwait
adcb
inc
add
mov
cli
rol
fsubrl
adc
pop
push
pop
je
int3
xor
push
gs
jmp
xchg
js
xchg
test
xlat
jecxz
push
sub
clc
or
or
mov
adc
clc
lods
fistps
or
in
cli
stos
xchg
sbb
das
pop
shl
into
cmp
shll
nop
stos
jne
cli
mov
sbb
jmp
sub
hlt
enter
sbb
jge
shll
pushl
or
jno
bnd
sbb
lds
mov
mov
shr
adc
loop
ret
out
or
das
cmp
mulb
sbb
pop
pop
out
jne
test
jae
loopne
loopne
inc
mov
pop
xchg
xor
add
dec
icebp
pop
fcomip
pop
dec
inc
mov
mov
xor
pop
pop
std
lcall
cmp
dec
sub
das
ret
ret
adc
mov
pop
push
cmp
movb
jns
xchg
pop
mov
xor
pop
pusha
sub
xchg
sub
ds
in
out
je
xchg
jmp
stos
sahf
push
loop
cltd
imul
lock
outsb
out
jno
sbb
imul
adcb
dec
xchg
xchg
jae
sub
xor
jle
sbb
adc
repnz
lret
mov
inc
adc
notb
insb
and
add
jge
cmp
add
negl
mov
std
xchg
xchg
pop
add
jb
out
loop
daa
jle
shl
xchg
xor
lods
cld
mov
in
loope
add
inc
notl
orl
jle
ss
lods
mov
dec
popa
shlb
inc
pop
leave
ret
ret
inc
or
jecxz
negb
xchg
sbb
stos
lahf
cmpsl
outsl
mov
or
push
cltd
subb
orl
cmpsl
mov
or
xor
pop
adc
dec
mov
sub
xchg
insl
mov
mov
or
mov
les
pop
jge
insl
pop
add
jns
out
scas
mov
cmpsl
enter
lcall
jbe
pop
xor
jecxz
cltd
pop
mov
mov
mov
nop
inc
or
scas
das
test
imull
jmp
add
inc
sbb
and
enter
adcl
jmp
inc
cmpb
pop
push
neg
fbld
or
fwait
je
repz
jbe
adc
je
jge
gs
notb
push
icebp
fwait
lcall
ja
push
cmp
or
cli
loope
cmp
aas
ljmp
cmc
xchg
xchg
sbb
jns
adc
out
ret
int3
mov
in
jae
sub
rolb
cmc
loope
loop
and
jecxz
fistl
and
ret
dec
mov
ja
icebp
filds
sbb
xor
xchg
jle
inc
fistpll
add
sub
popa
lea
ss
mov
mov
and
fistpl
inc
movsb
push
repnz
sub
stos
dec
repz
popa
cmc
inc
sbb
jo
pop
fwait
movsb
sub
addr16
dec
jmp
js
bound
pop
xchg
rcl
cwtl
mov
aaa
hlt
negl
push
rcll
adc
xor
int
cmpsl
ret
or
loop
pop
adc
test
cmp
xchg
sbbl
gs
adc
ret
lcall
sub
stos
mov
in
inc
jge
mov
mov
js
xlat
xor
adc
inc
lret
arpl
leave
push
fwait
int
inc
add
push
pop
icebp
iret
lret
cmpsb
pop
fidivrl
lock
mov
in
in
pop
ror
jp
push
aaa
sti
dec
ss
push
adcl
loopne
pop
mov
inc
lods
push
adc
andl
jge
xor
sbb
add
adc
mov
mov
jp
mov
pop
pop
div
dec
xor
add
fdivp
out
imul
out
test
xor
jp
outsb
add
pop
adc
push
push
pcmpgtb
cmpsb
push
in
xchg
jne
mov
inc
loopne
xchg
xchg
adc
cli
pop
mov
adc
lods
lcall
aas
jns
inc
fwait
pop
jecxz
pop
jge
in
cltd
jbe
and
sbb
fistl
jle
and
mov
sbb
in
xchg
inc
cmp
pop
mov
inc
sahf
and
outsl
jg
lret
pop
xchg
negb
pop
scas
fcomps
or
fists
orl
loope
pop
in
xor
leave
nop
dec
out
inc
mov
xor
arpl
fwait
inc
xchg
jmp
pop
flds
inc
ds
mov
pop
lret
es
lret
adc
fsub
xlat
out
and
ds
mov
jae
arpl
jae
push
or
inc
dec
sbb
sti
jecxz
shlb
and
cmp
stos
push
lcall
and
loopne
push
in
arpl
fwait
arpl
ffree
cmp
add
xchg
pop
pushf
lea
in
mov
cwtl
add
xchg
adc
jp
loop
cli
inc
and
lret
pop
data16
mov
mull
mov
imul
or
sub
imul
scas
popf
lods
dec
push
add
or
push
std
icebp
xchg
mov
lock
shlb
jp
fdivrl
cmc
xorb
in
or
sbb
jbe
lret
divb
cmpsl
ret
or
lods
out
adc
aam
shr
or
push
push
js
inc
or
repz
or
mul
pop
push
es
push
neg
insl
pop
sti
sti
pop
arpl
shlb
int3
sahf
inc
xchg
sub
mov
imul
ds
push
loopne
xchg
dec
sbb
fiadds
mov
jp
mov
fwait
or
sarl
mov
cli
sbb
stos
mov
push
inc
cmp
xor
loop
jmp
jge
ud2
popf
lods
mov
xchg
pop
loopne
ja
mov
fsubl
pop
test
inc
idivl
es
jmp
outsl
inc
ljmp
pop
lods
cmp
jg
jg
add
pop
cmp
sub
mov
adc
not
mov
pop
mov
cli
jae
inc
outsb
push
and
adc
sbb
sub
jg
mov
xchg
push
into
push
xor
daa
movsl
inc
xor
fwait
mov
jo
aas
shll
neg
jg
les
jecxz
cld
sub
sub
jb
xor
pop
inc
insb
inc
xor
shrl
xchg
and
jae
std
jmp
leave
jp
xchg
js
add
scas
mov
or
jns
jecxz
das
pop
cld
xor
mov
push
in
inc
ret
dec
clc
cmp
add
in
ret
pop
push
add
cmp
and
xchg
mov
push
xchg
mov
les
and
ret
pop
insb
cs
mov
xlat
push
cmc
scas
and
sahf
and
adc
cmpsl
in
xor
pusha
call
cmpsl
push
testl
xor
mov
out
push
mov
mov
call
mov
lea
xor
loop
xor
out
xchg
daa
adc
jg
test
push
mov
inc
mov
mov
sub
inc
outsb
adc
pop
idivl
loop
sti
lock
xorb
imulb
mov
insb
repz
pushf
popa
adc
pop
ud2
dec
adc
sub
jecxz
fisttpl
add
scas
outsl
ret
scas
adc
gs
add
mov
scas
xor
inc
mov
addr16
xor
adc
add
pop
or
hlt
clc
push
cmp
mov
xor
mov
cmp
pop
and
shll
mov
addr16
insl
pop
mov
clc
or
mov
xor
push
fdivl
inc
sarl
xchg
push
aam
stos
in
mov
jb
and
scas
test
test
out
xchg
sbb
xchg
mov
mov
movsl
pushf
jne
mov
sbb
icebp
mov
jb
outsb
hlt
sbb
adc
or
lds
in
adc
test
jns
jne
adc
jbe
mov
leave
clc
popa
ret
pop
aad
sbb
xchg
fisubrl
mov
pop
jnp
cmpsl
cli
mov
mov
call
inc
xor
shrb
ljmp
in
pop
push
mov
addb
mov
outsb
pop
add
hlt
clc
cmp
daa
jp
sub
roll
push
and
cmp
mov
or
push
adc
rol
daa
push
in
jns
push
inc
jp
add
cmp
adc
sub
mov
fsts
rcll
repz
cs
cwtl
pop
pop
fdivs
pusha
push
adc
sbb
bound
adc
loopne
or
enter
pop
mov
test
cmp
lahf
decb
cmp
aaa
loop
filds
lea
cmpsl
sbb
dec
sysret
ret
call
jo
xchg
dec
movsb
cli
jno
push
mov
jge
gs
loope
xor
jae
mov
dec
pusha
repz
add
cmc
sbb
bound
lret
iret
cli
shlb
fwait
aas
mov
iret
test
mov
add
mov
mov
insl
adc
cs
mov
fdivl
out
jnp
inc
jmp
aas
dec
pop
movsl
inc
daa
cmc
call
xor
rcll
aad
bound
orl
jne
or
jg
aam
das
lret
shr
pop
daa
adc
out
pop
loopne
cmp
mov
jle
xlat
test
stc
sbb
movsb
lret
mov
pop
jecxz
jno
and
andl
outsl
or
das
mov
mov
push
fildll
leave
xor
stos
cs
or
pop
mov
adc
jae
pop
cmp
sub
jno
push
cld
daa
pop
cmp
xor
iret
cmpsl
xor
enter
xchg
dec
fmul
and
xchg
xlat
mov
jo
mov
faddl
pop
pop
push
cs
into
js
xor
std
cmp
arpl
dec
pop
dec
mov
sti
jmp
pop
in
mov
aaa
into
ljmp
mov
jg
sbb
push
stos
or
enter
jnp
mov
ror
xchg
mov
loope
je
mul
movsb
push
sbb
cli
jg
imul
cli
fwait
arpl
fcoml
sbb
xchg
pop
fiaddl
xorl
dec
mov
mov
xlat
cli
iret
pop
cmp
add
test
mov
arpl
into
jle
dec
xchg
inc
scas
repz
sbb
mov
fnsave
dec
add
add
dec
mov
popa
xchg
test
xchg
sub
mov
mov
out
xchg
pop
xor
subl
pop
push
mov
lret
push
sbb
mov
add
sti
shl
pop
pop
or
stos
test
adc
iret
addb
mov
ja
jno
ja
mov
loop
push
dec
enter
popf
and
jb
cs
test
dec
mov
and
pop
xlat
pop
add
outsl
mov
cmpsl
repnz
jp
jnp
insb
push
lcall
jmp
pop
rorb
movsl
sbb
sbb
xchg
cwtl
sub
rcrb
cmp
cli
ret
pop
cmp
or
arpl
loopne
fsubrs
xor
fstp
cmc
push
inc
jge
xlat
cmp
ljmp
les
lahf
scas
sub
out
sub
arpl
push
xor
adc
out
adc
mov
mov
push
in
add
call
and
or
sub
pushf
or
into
pop
sbbb
shrl
popf
lds
jae
dec
mov
mov
mov
movsb
dec
rcrl
mov
out
int3
mov
das
sti
addr16
imul
push
pushf
mov
insl
add
cmp
fnstenv
sbb
pop
sbb
shl
stc
mov
sbb
cmp
pusha
pop
js
cmpsb
adc
pop
and
fwait
outsb
inc
jmp
push
adc
lds
push
jns
addr16
fsubrs
repnz
mov
fnstenv
popa
ror
add
cmpl
mov
int3
mov
inc
ja
pop
ss
adc
mov
add
pop
loope
jecxz
dec
stos
pop
loopne
jns
call
iret
addb
push
add
jp
and
or
cmpsl
arpl
cli
jae
rcl
cmp
jmp
imul
xchg
adc
mov
notb
inc
loope
je
js
cmpl
push
xor
cmp
inc
inc
int
cld
xchg
loope
jl
subl
outsl
lret
shl
inc
push
mov
pop
subb
ss
arpl
and
dec
inc
cli
fs
js
pop
jecxz
dec
push
jecxz
les
int3
les
jmp
fcoml
xor
pop
das
dec
es
dec
rclb
sarb
int
mov
xchg
or
push
test
cmp
shll
orl
jp
adc
mov
adc
add
aas
testb
outsl
sbb
ja
sub
xor
es
call
pop
pop
add
scas
mov
loopne
jecxz
xchg
imul
mov
fisttpl
jmp
icebp
push
out
ficoms
adc
dec
pushf
adc
sbb
stc
or
pop
and
xchg
and
cltd
inc
lcall
xchg
xchg
push
aad
test
jo
mov
cmp
test
inc
stos
fs
xchg
add
pop
sub
mov
push
rol
fdivrl
out
add
sub
mov
inc
mov
mov
imull
movsb
pop
cmp
xor
popf
cmp
push
aam
or
pop
jl
loopne
addl
movsl
jecxz
leave
pusha
mov
mov
dec
rolb
adc
xchg
hlt
fwait
push
push
cmp
sub
jbe
lahf
push
popa
mov
pushf
lcall
data16
xchg
or
push
mov
inc
mov
imul
pop
pop
mov
out
mov
xor
pop
push
jecxz
mov
inc
dec
sbb
movntq
scas
pcmpeqw
cmp
add
in
mov
jp
dec
mov
xchg
icebp
jl
xchg
lock
cmp
push
add
lods
push
sahf
jge
or
pop
test
cltd
je
dec
pop
cs
fsubrs
mov
push
pop
sbb
or
sub
daa
dec
or
in
iret
cmp
dec
outsl
mov
out
pop
test
push
xchg
mov
sti
xor
mov
hlt
cmc
cmp
or
xlat
test
inc
inc
mov
lock
xor
pushf
mov
shl
cli
cmc
sahf
sub
xchg
pushf
stos
add
jo
pop
xchg
stos
mov
in
cltd
bound
jns
mov
adc
fldt
inc
rcrl
or
push
jmp
cmc
push
xor
popf
jae
aaa
and
mov
sbb
mov
test
cmp
inc
das
jmp
mov
sbb
push
loop
fwait
test
add
rclb
ret
mov
incb
fcmovnb
jne
out
fcoml
sti
lret
pop
sbb
sbb
mov
sbb
add
test
sbb
push
jb
out
mov
jb
jmp
outsb
mov
dec
stos
push
ficoms
sbb
cmpsl
fsub
lods
fs
and
mov
outsl
dec
rorl
pop
ret
xor
mov
pushf
loopne
nop
pusha
mov
leave
shll
test
lods
test
bound
cli
add
ja
cmp
xchg
inc
insl
push
add
push
mov
cmp
test
pop
stos
jge
test
les
sbb
dec
xor
cmp
fsubrl
jb
popa
add
test
push
ljmp
stos
mov
rorb
adc
lods
and
pop
fildl
cmp
adc
sub
in
ds
pop
incl
ja
push
push
sbb
add
mov
mov
test
cld
inc
xlat
aam
cli
popf
cltd
pop
jl
jecxz
stos
cwtl
push
in
cs
jns
cmpsb
or
mov
sub
cltd
lcall
popa
mov
jno
jbe
loope
xchg
cwtl
fcomps
test
popa
jle
dec
mov
ret
call
insb
mov
mov
in
enter
fnstenv
ja
iret
cmc
xchg
push
jg
jns
cmp
xor
cmp
insl
das
pop
pushf
mov
daa
add
aaa
shrb
imul
out
sub
mov
jl
test
and
sub
cmp
mov
sbbl
mov
dec
cmpl
xor
xlat
jmp
mov
or
lea
arpl
sbb
out
in
mov
jge
loopne
xor
and
pop
int3
pushf
lods
imul
jnp
add
nop
adc
jb
jp
loop
or
jg
xlat
pop
test
sbb
xor
lds
shl
lods
mov
clc
jle
and
jo
sub
add
adc
mov
insl
rcrb
push
fdivr
xchg
cmp
fistpl
pusha
icebp
ss
cltd
dec
and
out
cmc
insl
dec
dec
sub
mov
fs
js
aas
js
lret
mov
lcall
lcall
js
cli
push
xchg
in
push
mov
xor
cmpsl
mov
pop
aas
jle
inc
stos
mov
dec
push
cmp
pop
or
push
dec
pop
ss
mov
or
jno
xlat
sar
scas
and
aaa
pusha
and
in
add
push
mov
jge
mov
pop
adc
push
outsb
lar
add
idivb
xor
sbb
cmp
lds
call
inc
and
jl
inc
dec
jb
mov
or
dec
sbb
sub
scas
jae
xor
popa
loope
inc
out
mov
cmpsb
xor
lock
or
pop
xchg
mov
cwtl
mov
add
dec
mov
mov
out
xchg
fldt
test
mov
aaa
pop
or
cmp
xchg
and
lds
add
mov
ja
jmp
movsb
mov
aad
inc
or
mov
adc
subb
cmp
or
add
mov
sbb
stos
jb
sti
xor
push
mov
pop
lods
popf
inc
mov
inc
cmc
xor
test
xor
adc
cwtl
sbb
mov
out
pushf
sub
and
or
out
imul
fmul
add
dec
lds
mov
or
mov
sub
cmpsl
jle
xor
mov
jno
popl
cmp
arpl
pop
dec
adc
fdiv
rclb
xchg
aam
dec
push
movsb
pop
xor
add
insl
int
movsl
std
mov
mov
sahf
insw
iret
xor
dec
icebp
dec
mov
sbb
andl
mov
push
hlt
in
movsb
xor
fs
cld
and
sub
push
jl
mov
pusha
dec
dec
or
cmp
aaa
and
mov
js
push
loop
aam
pop
cwtl
mov
add
not
or
inc
dec
outsb
lods
scas
loope
and
into
rolb
js
xor
in
jbe
sbb
je
push
add
add
xor
jb
push
dec
adc
pushf
sahf
jecxz
subb
stc
fyl2x
dec
mov
and
xchg
mulb
sbb
cwtl
pop
negb
lods
pushf
cmp
and
fnstcw
jge
xor
pop
test
ret
cwtl
fidivs
repz
pop
sbb
push
lock
xchg
pop
shrb
bound
fcompl
in
xor
inc
rcll
shl
leave
or
aas
cmpsb
cmc
inc
xor
js
xor
and
xor
jb
das
jp
dec
rorl
fists
pushf
xor
data16
add
ret
dec
stos
int
loope
incl
inc
lcall
push
les
xor
push
mov
mov
call
push
mov
cmpsb
xchg
push
ja
sub
psraw
cmp
sub
hlt
xchg
mov
movsb
jb
and
cmp
adcb
stos
into
jne
sub
loope
popf
insb
and
jo
ret
call
dec
mov
lods
rcrb
add
out
mov
rcrl
push
cmp
cli
pop
pusha
mov
xor
add
cmp
in
jns
dec
push
jmp
dec
insl
orl
inc
cmp
into
cwtl
ljmp
xor
push
clc
ljmp
xchg
mov
mov
enter
jo
push
inc
sbb
pusha
shrl
mov
adc
and
push
cld
in
mov
sahf
jp
sbb
popf
movsb
movhps
shlb
dec
lahf
addl
or
arpl
jle
inc
aam
aam
xchg
mov
insl
dec
cmp
ljmp
movsb
and
mov
scas
test
movsl
shlb
push
fisubl
mov
mov
aaa
push
xor
aas
adc
mov
mov
repnz
popf
aaa
mov
xor
lret
and
xor
sar
fcoml
adc
jbe
inc
inc
rcl
bound
xor
or
dec
inc
push
movsb
sbb
ljmp
out
ss
mov
pushf
cli
add
push
shll
stos
iret
aam
mov
inc
test
cwtl
jne
daa
mov
dec
jmp
push
icebp
add
or
movsl
leave
and
cmp
arpl
sub
and
xchg
xchg
iret
xchg
jle
pop
mov
arpl
call
dec
les
sti
je
stc
adc
add
xor
inc
inc
xor
lock
test
inc
test
jle
push
enter
notb
sbb
jmp
addr16
sub
jae
and
mov
cmp
sub
jno
lahf
gs
test
jo
mov
es
in
in
cli
nop
push
lcall
mov
test
stos
or
in
inc
stos
lds
mov
push
mov
bound
pushf
dec
dec
ret
xlat
lret
popf
mov
mov
mov
push
repnz
sahf
scas
rclb
cmp
push
adc
loope
cmpsl
mov
fdivs
dec
push
dec
mov
or
jae
int
sub
or
adc
out
sti
data16
pop
mov
aaa
inc
js
xchg
popf
xchg
adc
push
je
mov
xchg
daa
je
repnz
and
add
int3
mov
fcos
push
add
imulb
fcompl
xchg
cs
mov
jle
or
adc
bound
and
sub
inc
mov
inc
xchg
ja
fsubl
pop
rclb
and
sub
sti
movsl
into
rcl
je
andl
or
or
pop
or
lods
std
adc
push
xlat
movsb
sahf
sbb
adc
scas
test
cmp
ja
out
js
dec
or
cmp
mov
ret
idivl
pop
add
psrlw
loopne
adc
push
mov
push
pop
add
iret
ret
lret
pop
jle
cmp
bound
imul
pop
loop
sahf
rep
push
mov
sub
int
outsl
jne
nop
sub
into
and
jmp
cwtl
scas
mov
mov
int
stos
push
mov
movsl
jle
stos
jae
sbb
cmc
out
or
scas
adcl
xor
sub
adc
mov
xchg
push
movsl
or
call
adc
bound
out
insb
fadd
jg
or
mov
jne
push
movsl
sbb
add
xor
insl
jl
into
ljmp
push
mov
jecxz
adc
or
mov
into
iret
insb
add
pop
aas
lea
sbb
aas
pop
inc
mov
inc
imul
push
mov
sub
dec
push
lock
jbe
movsb
push
daa
push
xchg
mov
popf
and
fildl
fnstenv
sbb
lret
ds
cmp
fldl
addr16
mov
arpl
mov
sub
js
mov
or
mov
add
pop
ljmp
cmpl
mov
add
push
cmp
dec
dec
xchg
add
sub
dec
inc
mov
mov
gs
mov
and
cmc
xor
push
mov
mov
push
gs
pop
push
pop
in
add
movsl
leave
subb
xchg
aas
sbbl
or
stc
sbb
mov
pop
dec
adc
ret
xor
fwait
and
lret
sarb
pushf
je
push
sbb
enter
xor
icebp
cld
sub
inc
xchg
pop
pop
adc
popf
adc
addr16
sub
xchg
adc
mov
xchg
pop
hlt
sub
out
dec
out
adcl
cmpsb
insl
mov
out
push
incb
xor
loop
mov
cmpsl
sub
aaa
mov
add
out
daa
sub
push
inc
in
mov
or
dec
push
or
and
outsb
or
fcomi
push
test
loope
mov
inc
jle
inc
xor
cmp
add
inc
adc
add
outsl
aas
push
mov
cmp
out
es
and
pop
leave
add
push
fs
xor
movl
hlt
xchg
out
xchg
jmp
icebp
cs
and
out
je
outsl
push
pop
add
mov
inc
push
pop
xor
jp
mov
imul
ljmp
stc
jbe
call
lahf
clc
arpl
jb
mov
fidivrl
sbb
lret
jle
jle
cmp
stos
cld
mov
and
and
hlt
jg
pushf
test
cmovle
jb
incb
xchg
inc
into
sbb
movsl
std
push
fiadds
neg
add
es
jo
jge
arpl
ss
ror
mov
shrb
ucomiss
mov
imul
xlat
cmpb
xor
test
jo
insl
rorl
or
ja
ss
dec
in
cmp
orb
xchg
dec
sbb
inc
or
sbb
mov
adc
sahf
nop
pushf
lds
adc
sbb
cmp
outsb
mov
and
push
adc
push
and
int
xchg
ds
mov
fucomip
xor
jno
xchg
xor
hlt
push
jnp
loop
call
jecxz
icebp
sub
dec
dec
pop
push
mov
jmp
pop
pop
outsl
mov
test
pop
jge
int3
xlat
into
fstl
pop
leave
push
mov
int3
xchg
test
sbbl
stc
dec
ret
sub
ss
movsb
mov
out
rdpmc
jmp
movsl
cmp
cmpsl
repz
sub
fnstenvs
dec
pop
cmpsb
int3
push
cld
xlat
pop
sbb
out
and
cmpsl
and
jp
mov
inc
sar
lea
lahf
jns
dec
pop
mov
js
or
test
int3
dec
ret
ret
mov
pop
stos
in
adc
push
add
mull
loopne
aam
inc
or
call
lcall
and
and
or
test
or
lds
and
nop
cwtl
arpl
and
sbb
xchg
or
ret
stos
lcall
repnz
stos
aaa
push
sub
sbb
sbb
ljmp
mov
loopne
mov
sub
ljmp
pop
pop
jp
daa
jne
or
dec
je
out
and
sbb
or
lret
and
sub
mov
adc
sbb
jae
mov
jle
fcoml
ret
mov
xchg
sbb
xchg
and
setae
mov
rcr
mov
stc
jle
xor
test
leave
push
push
in
add
insl
icebp
and
out
loope
loopne
lds
in
sbb
or
inc
stos
test
outsl
push
or
in
cwtl
unpcklps
pop
jb
cmp
jnp
addl
cs
mov
inc
mov
xchg
mov
xchg
add
hlt
sub
fwait
jns
data16
sarl
add
mov
aas
mov
scas
xchg
loop
aam
xchg
lea
bound
fidivs
call
pop
inc
push
push
outsb
loope
cmp
adc
inc
decl
push
int
sbb
out
sbb
inc
insb
mov
cwtl
dec
jmp
lcall
mov
pop
ret
bound
aad
stc
and
xchg
jne
jo
xor
mov
mov
add
call
push
stos
mov
test
lcall
inc
and
pop
fdivrl
and
or
dec
push
lock
jo
ss
fists
js,pn
sub
inc
clc
iret
sbb
jmp
imul
jb
int3
lock
daa
xor
std
les
ja
xchg
and
jecxz
pop
in
pop
cs
fwait
or
pop
imul
xor
sar
orl
sarb
movsb
and
pop
or
ret
cmp
aaa
jbe
mov
ds
add
and
in
or
pop
and
lods
dec
push
orb
adc
es
sub
pop
push
cmp
movsb
orb
inc
repz
scas
rol
mov
xchg
test
in
outsb
into
popf
xor
popa
push
pop
push
or
int
mov
into
loopne
mov
fdivl
inc
unpckhps
pop
mov
cmp
mov
out
adc
sbbb
adc
loop
je
jl
inc
frstor
jg
test
dec
test
xchg
add
sbb
lcall
ljmp
adc
and
fnsave
pop
adc
inc
jne
push
jne
sbb
xor
sub
dec
pop
or
fsub
mov
iret
mov
cmc
sub
stc
jo
push
xlat
cmp
xchg
push
mov
mov
jo
mov
cld
test
int
into
popf
fnstenv
or
push
stos
mov
sbb
cmpsb
lods
cmp
push
call
int
xchg
aaa
push
scas
sbb
or
insb
pop
movsl
loopne
xor
ds
mov
stos
dec
inc
push
pop
xchg
mov
dec
scas
xchg
mov
push
mov
ror
lods
xor
or
rorl
jno
pop
xlat
xor
xchg
mov
stc
lcall
lds
pusha
push
add
sbb
sti
jne
jns
flds
or
jbe
loope
push
repz
aas
or
and
mov
inc
sbb
xlat
mov
sub
cmp
inc
jno
loopne
addb
sbbl
mov
adc
adc
jnp
xchg
bound
push
or
loopne
xor
popa
xor
and
jno
inc
fwait
and
pop
inc
jge
rcll
das
aad
rorl
jnp
shll
fs
clc
outsb
and
scas
or
inc
mov
or
adc
into
incb
insl
xchg
dec
je
jle
or
dec
inc
xor
sbb
movsl
std
jae
adc
fidivrl
es
test
or
aaa
pop
mov
call
inc
cmpsb
xor
outsl
jg
imul
and
dec
jb
outsb
fdivp
outsl
push
pop
jle
aas
ret
iret
jbe
cld
cmp
movsl
mov
movsb
dec
xorl
cli
fsincos
mov
fdivrl
movsl
push
test
dec
pushf
jb
jg
lret
aad
push
aaa
mov
xchg
icebp
xchg
sbb
adc
sub
pop
sub
out
js
mov
sbbb
or
pop
ja
bnd
std
dec
dec
sbb
lods
jmp
sub
lahf
pop
push
mov
imul
and
iret
push
adc
popf
jecxz
jo
movsl
pop
adc
sbb
adc
mov
out
lahf
push
fs
and
xchg
pcmpeqb
jo
pop
shrb
pop
stos
pop
aaa
add
int3
out
inc
mov
xchg
xchg
or
addl
push
inc
cwtl
push
adc
movsl
loope
inc
test
add
loop
xchg
cmp
aad
leave
dec
lret
xchg
icebp
add
push
push
mov
mov
push
jb
xchg
cmpsl
jg
cli
mov
dec
and
xchg
adc
inc
dec
lret
popf
xchg
inc
sbb
cwtl
in
outsb
push
aaa
push
dec
sbb
mov
mov
cmpsb
outsl
test
adc
push
jne
add
in
lea
fdivs
popf
pop
cli
jmp
es
or
rcrb
daa
mov
mov
push
aam
in
pop
stc
imul
pop
test
cmpsl
sbb
int3
cmp
sub
xor
mov
cmpsb
cmp
dec
repnz
idivb
popa
lds
sbb
jp
pushf
popa
xor
insl
mov
js
cli
insb
push
xorb
jnp
dec
nop
int3
jle
imul
ljmp
xor
mov
lea
ljmp
dec
jecxz
ja
ror
test
sahf
mov
add
and
pop
loopne
sbb
xor
ror
repz
lahf
sub
xor
jmp
jle
popa
jge
decl
pop
mov
mov
subb
cld
mov
pop
mov
sub
cmpsb
scas
jo
shll
cltd
sbb
cli
xchg
sbb
inc
mov
mov
lret
and
jae
jae
cs
outsb
mov
adc
js
xchg
into
test
adc
scas
sub
mov
pop
or
test
mov
sahf
dec
shrl
mov
popf
lret
and
ljmp
jl
cmpsl
sbb
movzwl
mov
daa
jae
movsb
popf
jge
add
ljmp
int3
sarb
js
dec
pop
fcoms
sub
jecxz
out
mulb
sbb
loope
pop
add
jg
xor
pop
or
or
mov
test
add
xchg
mov
std
cmpsl
dec
xchg
mov
addr16
add
in
mov
sbb
imul
add
inc
or
dec
mov
inc
mov
jb
adc
rorb
jmp
mov
add
cwtl
imul
mov
sti
mov
dec
and
testl
flds
out
sub
dec
jecxz
add
aas
or
push
iret
add
movsb
mov
and
inc
xchg
add
push
dec
xchg
ficomps
adc
xchg
lea
xchg
push
pop
insb
sub
jns
xchg
adc
inc
stos
add
mov
orl
mov
out
je
mov
add
sub
dec
imul
cmpsl
insl
js
js
adc
pop
mov
jns
js
cwtl
mov
ret
jp
inc
mov
int3
sti
pop
ss
cmp
or
es
mov
lods
dec
add
int
inc
mov
and
mov
inc
push
push
outsl
les
pop
outsb
insb
arpl
jecxz
les
xor
xchg
xor
dec
add
mov
test
outsl
test
sbb
call
cmp
sub
inc
push
jb
mov
sub
xchg
cmp
es
push
mov
mov
dec
and
cmc
fsub
jge
cmpsb
lret
mov
scas
or
aam
data16
mov
sub
icebp
cwtl
mov
mov
int
pop
inc
das
imulb
popa
jp
scas
jbe,pn
test
adc
shl
mov
adc
test
xor
mov
fsubrl
cli
lods
int3
clc
mov
dec
hlt
push
mov
sub
testl
pushf
fdivr
mov
ret
adc
mov
mov
cmp
movsl
lcall
testb
jp
push
lcall
repnz
out
sbb
dec
loopne
cmp
lcall
lcall
mov
push
inc
mov
push
inc
sbb
pop
add
icebp
sbb
gs
and
add
sbb
mov
clc
js
test
jle
fwait
sarb
push
aad
push
test
mov
rolb
clc
cmp
fwait
ror
out
int3
sbb
data16
mov
xchg
pop
aas
xchg
fdiv
stos
pop
mov
push
leave
inc
into
jnp
pop
push
lock
fcomps
and
pushf
adc
pop
aaa
pop
mov
aam
ljmp
hlt
lahf
insl
test
cltd
mov
or
sub
jbe
ja
mov
cmp
ss
lcall
divl
stc
int3
cmp
out
push
add
adc
aaa
test
testb
pusha
jns
mov
mov
xor
inc
inc
nop
and
inc
rolb
inc
sbb
fmuls
pop
jno
dec
pop
cli
lods
or
xchg
cmc
mov
jnp
pushf
inc
lock
sahf
cmovo
cmpl
dec
fistpl
fbld
out
inc
mov
ljmp
in
sti
pop
cmp
stc
adc
mov
mov
movmskps
mov
inc
xor
das
in
pop
adc
xor
xor
int
mov
and
jmp
push
vhaddpd
pop
lret
mov
mov
push
mov
ljmp
jb
scas
movsl
test
inc
xlat
inc
or
ja
loope
aad
adc
fcom
negb
nop
lock
jae
out
mov
dec
add
xchg
int
fistps
fdiv
cmp
lret
imul
jne
and
mov
adc
sub
xor
sub
imul
mov
lcall
xchg
mov
or
shrl
cmpsb
push
movsb
es
cmp
icebp
or
ljmp
mov
dec
cmp
mov
lds
lea
jo
shlb
or
xchg
ss
in
adc
mov
fs
shl
test
sub
jae
push
adc
ljmp
decb
test
lea
cmp
jnp
ret
ret
out
jl
aas
sbb
and
idivl
lret
mov
popf
fisubs
mov
test
test
adcl
xor
xchg
test
cmp
sbb
pop
push
sarb
clc
push
adc
lds
xlat
gs
and
test
mov
xor
pop
test
mov
jno
lods
dec
inc
pop
cmpsb
leave
fwait
xchg
or
pushf
jge
out
jecxz
in
test
xor
sub
sub
out
rorl
pop
xor
jne
sbb
xor
cltd
fs
push
rorb
inc
in
push
and
push
sub
pop
xlat
xorb
cmp
mov
sub
je
pop
push
xor
aam
cmpb
mov
inc
xor
arpl
adc
mov
fsubr
adc
js
jae
mov
repnz
lock
or
push
mov
cli
repnz
outsl
addr16
sbb
outsl
inc
fnstenv
hlt
test
xor
icebp
adc
push
test
and
adc
nop
push
aas
lds
je
out
sbb
inc
dec
mov
sbbl
xchg
mov
scas
and
testb
cli
ss
enter
pop
jnp
sub
cmp
jno
rolb
cmp
test
sbb
xchg
mov
ficoml
jno
sbb
xchg
into
add
icebp
xchg
push
fs
mov
dec
lret
inc
hlt
iret
dec
cmp
pop
insl
adc
xchg
fsubr
mov
or
xor
test
rcll
inc
xchg
stos
add
shrl
je
aas
xlat
dec
std
aaa
pop
lret
jns
pop
shll
mov
lret
jno
mov
add
jg
mov
mov
loope
repnz
push
cmpsb
jne
shlb
xor
lods
pop
retw
sbbl
or
xchg
push
pop
mov
hlt
insl
jae
cmp
cmp
cltd
cmp
dec
jae
pushf
dec
inc
add
push
push
mov
syscall
and
inc
bound
out
in
iret
enter
cmp
sub
fistpll
into
xchg
push
jnp
movsb
fmull
mov
mov
sbb
lods
xor
hlt
push
xor
mov
xor
mov
pop
cwtl
iret
hlt
push
pop
je
fidivrl
dec
xchg
mov
sub
jmp
mov
icebp
loope
pusha
daa
shrb
xor
icebp
movsb
add
std
cmc
sub
push
iret
cmp
adc
adcl
sub
sub
add
adc
cmp
push
imul
and
stc
xor
inc
fwait
xor
lods
lret
pop
popa
jmp
clc
jne
ljmp
mov
inc
orl
sbb
out
dec
mov
sahf
mov
movb
hlt
rolb
fs
out
js
dec
out
mov
pop
lods
bound
sbb
mov
mov
sti
inc
in
jmp
add
dec
sbb
jae
daa
cwtl
int
mov
inc
push
jge
aad
mov
mov
ret
divb
lret
in
and
popa
aaa
jp
mov
lcall
jle
pop
shl
pop
jmp
fwait
dec
lds
lret
imul
cli
in
pop
xor
inc
mov
out
repz
adc
rcl
push
jo
test
xchg
xchg
pop
cmpsb
faddl
mov
lea
lcall
jb
adc
adc
jnp
add
test
add
lds
cmp
mov
rep
fmulp
mov
add
test
cmp
xchg
testb
jmp
sti
shll
add
addl
test
pusha
pop
insb
aas
sbb
sbb
push
dec
inc
cmpb
cmpsb
lds
mov
mov
leave
popf
push
adc
repnz
scas
aas
sbb
xor
test
mov
pop
pop
jno
fisubl
movsb
or
xchg
out
mov
mov
testb
push
lods
sub
mov
mov
push
fisubrs
mov
ja
fsubrs
sbb
int
lcall
hlt
ljmp
outsb
bnd
dec
jne
or
int3
mov
cmc
out
lock
cmp
jp
mov
insb
jp
fidivs
adc
inc
ret
out
cld
adc
in
inc
pop
cmp
push
testl
mov
addl
xchg
cli
movsb
lret
sub
jae
inc
scas
jno
jnp
cmp
sub
push
cmc
or
mov
out
jnp
mov
pushf
mov
cmp
inc
cmp
cmp
popa
add
icebp
add
jne
xchg
lea
xor
jp
and
lods
fs
movsl
mov
loop
fildll
push
inc
shlb
push
mov
in
and
aam
in
insl
xchg
push
jecxz
pop
xlat
dec
add
adc
add
mov
inc
jg
sbb
mov
dec
mov
sub
std
test
dec
pop
test
out
push
push
and
cmp
in
or
sbb
lret
xor
mov
cwtl
mov
inc
xchg
ss
enter
rol
hlt
pop
ucomiss
push
mov
and
pop
fildll
call
in
lea
test
movsb
push
dec
push
and
sbb
sarb
imul
enter
loop
in
ficoms
dec
scas
jae
jle
mov
sbb
in
pop
loope
inc
xchg
jne
in
mov
push
push
es
xor
mov
cmp
sbb
or
in
hlt
add
pop
sbb
sarb
push
dec
sbb
js
inc
test
push
pop
out
mov
mov
int
inc
adc
mov
filds
test
mov
cmc
pushf
loop
dec
or
mov
movsl
and
orl
pop
aam
shrl
dec
out
jne
mov
push
clc
jg
or
add
push
notb
mov
ljmp
push
insl
xchg
in
or
popa
lods
cmp
sarb
sub
testl
repnz
pop
or
and
push
lock
xlat
sub
cmpsb
roll
fwait
jbe
inc
scas
stos
mov
stos
mov
sub
cli
in
shl
mov
lock
loop
gs
jge
cmp
cmpsb
lcall
sbbb
lret
xor
mov
cltd
sahf
jg
and
cmpsb
pop
out
dec
mov
rclb
add
mov
cwtl
sar
addr16
mov
js
adc
shll
imul
pop
sbb
out
jo
xchg
mov
jnp
popf
jmp
xchg
les
scas
into
sub
fwait
mov
sub
pushf
xor
outsl
roll
push
sahf
imulb
mov
pop
dec
ja
mov
orb
xchg
mov
rcrl
popf
fildl
mov
pop
cmp
push
repnz
je
jb
or
pop
ret
gs
inc
out
insb
in
dec
sbb
jns
sbb
jmp
insb
cs
sub
jmp
mov
aam
mov
mov
push
and
adc
pusha
into
adc
sti
fsubp
xor
adc
sti
pop
fildll
sti
push
add
cmp
std
lods
or
test
xor
scas
mov
lahf
bound
pop
jb
jbe
xor
neg
je
push
push
repz
jl
mov
test
push
pop
ficomps
popa
js
jbe
enter
pop
cmp
repnz
jecxz
fbstp
jg
cmp
imul
outsl
aas
jo
mov
lea
sbb
dec
push
mov
mov
dec
jl
sub
dec
cmp
pusha
add
push
sarl
es
je
mov
and
mov
mov
adc
xchg
and
xchg
lahf
adc
popf
ss
ret
cmp
call
sub
xlat
inc
push
int
sub
sbb
loope
iret
mov
push
outsl
sahf
mov
loope,pn
mov
adc
pop
int
std
dec
stos
jmp
mov
sbb
mov
dec
fwait
mov
sbb
xor
add
fwait
adc
inc
pop
es
push
pushf
ljmp
dec
push
neg
sbb
xor
in
xchg
inc
mov
push
cltd
das
xor
mov
and
dec
cltd
nop
lods
sti
aam
jp
ffree
int3
mov
fwait
in
in
faddl
shll
jp
dec
pop
adc
push
das
lock
scas
lret
cmc
or
pop
shr
jb
mov
call
xchg
call
jl
dec
and
and
inc
mov
aas
popa
xchg
adc
jo
inc
lods
xchg
fneni(8087
mov
shrl
pop
adc
cmpsb
test
mov
push
icebp
ja
stos
xchg
mov
ret
subb
leave
cli
mov
test
xchg
cmp
jp
fwait
inc
xchg
inc
cld
ljmp
je
loop
daa
lods
inc
xor
inc
add
inc
popf
test
pop
inc
cmp
jne
dec
xchg
repnz
mov
test
lock
scas
mov
xchg
xchg
ficomps
sbb
pusha
xor
scas
fisttpl
in
mov
xor
xchg
add
jmp
mov
push
xchg
sbb
inc
ss
jnp
scas
xchg
xchg
ret
mov
xlat
pop
jnp
pop
stos
mov
mov
out
adc
push
dec
mov
push
fildl
mov
mov
push
pop
pop
sub
adc
add
out
popf
cmp
pop
bound
add
adc
xor
sbb
idiv
mov
adc
xor
jl
xor
xchg
inc
or
std
in
loop
or
movsb
aad
xor
mov
jb
sub
mov
nop
xor
push
mov
shll
lcall
fldcw
loop
fidivrl
pop
pushf
dec
or
sbb
clc
lret
dec
cmp
das
xor
std
clc
ret
lds
cltd
sub
xor
cli
pop
lret
sbb
test
fnsave
mov
lods
sbb
xchg
and
cs
jne
icebp
aam
xchg
dec
add
insb
or
xchg
and
orl
loop
ret
cmp
add
rcll
shr
cmc
fcomps
add
mov
cltd
mov
xlat
pushf
outsl
js
out
lcall
xor
int
pop
mov
shll
push
mov
jp
mov
pop
fcoml
push
stos
sbb
xor
jg
cmp
mov
lea
and
jl
das
sbb
mov
sbb
pop
arpl
inc
in
xor
pop
dec
xor
dec
add
mov
es
sbb
shrb
test
sbb
notb
ds
rorb
xchg
add
mov
mov
xchg
cmp
cmpsb
sbb
outsb
out
mov
call
sub
add
lods
sbb
dec
outsl
mov
ds
mov
or
aam
xchg
xchg
lods
xchg
inc
sub
mov
jns
adc
dec
fsts
add
out
leave
lods
jae
mov
arpl
pop
push
mov
mov
iret
loop
jmp
mov
mov
test
testb
stos
xchg
test
xchg
pop
rcll
mov
dec
decb
mov
int3
add
lea
rcll
pop
stos
ficoml
mov
jg
add
xchg
inc
pop
pop
sbb
inc
sub
and
xor
pop
mov
pop
jbe
sbb
inc
mov
scas
dec
xor
leave
mov
pop
aas
xchg
pusha
mov
push
shl
sbb
push
or
pushl
ret
insb
rcrl
xor
lea
dec
sbb
push
fnsave
mov
test
loop
cmp
inc
adc
call
cmp
loopne
shrl
das
jbe
add
lret
ljmp
hlt
xor
sub
icebp
es
mov
jb
mov
lds
inc
aam
enter
adc
gs
enter
cmpsl
or
push
push
sarb
mov
cmp
scas
je
jge
jae
jmp
cmp
fdivrs
stc
inc
cmp
jo
into
or
adc
aam
es
clc
pop
fsub
scas
fmuls
shl
sub
cmpsb
sbb
je
adc
icebp
loope
cmc
nop
adc
jne
xchg
xchg
imul
sub
inc
cmc
mov
clc
nop
sbb
ret
lcall
out
lock
test
jns
ret
cld
xchg
mov
mov
add
scas
sbb
in
iret
or
js
cmpsb
dec
iret
jae
loop
test
repz
loope
mov
stc
popa
movsl
fucomip
pop
nop
incl
pop
adc
xor
mov
sti
pop
sarb
mov
hlt
mov
ljmp
cmovnp
xorl
sbb
cltd
lea
xchg
scas
push
in
fnsave
loope
jmp
aam
ss
xor
mov
xchg
stc
sahf
cmpsl
jmp
cld
cs
cmpb
mov
in
add
sbb
iret
mov
ss
inc
mov
test
adc
lret
pop
mov
xchg
ljmp
mov
push
enter
cltd
ror
lods
in
adc
push
ss
xchg
in
jmp
mov
je
jecxz
mulb
mov
ds
fstps
rolb
and
or
pop
fiaddl
cltd
mov
insb
popf
jp
jmp
inc
popa
xor
push
dec
mov
mov
sub
rolb
mov
lods
dec
push
jp
stos
add
mov
or
lds
shlb
inc
jl
cmp
andl
mov
orb
push
test
add
aam
dec
dec
leave
or
inc
mov
test
mov
dec
int
fsubrl
das
cmp
ss
aas
jmp
js
scas
mov
sub
adc
es
std
push
dec
lret
xorb
lds
push
jmp
addr16
push
fsts
push
xchg
mov
push
jg
pop
rcrb
jns
lcall
sbb
repnz
mov
bound
std
add
dec
lret
xor
lahf
add
pop
das
xchg
stos
cmp
adc
pop
subl
pusha
imul
inc
ret
lahf
insl
pop
test
mov
mov
adc
insl
dec
mov
dec
cld
sbb
daa
or
xchg
fisubl
sub
icebp
mov
popf
pusha
cmp
movsb
les
push
ret
or
fs
int
cmc
jne
outsl
pop
je
pop
or
lahf
push
jb
sbb
adcb
xchg
js
out
sub
sbb
sbb
and
out
rolb
into
flds
add
stos
dec
in
sub
sub
and
out
outsl
adc
mov
shr
xor
mov
sbb
pop
dec
sahf
hlt
out
pop
inc
hlt
inc
cli
jg
subl
data16
addl
pop
scas
dec
sbb
cmp
clc
mov
aam
or
shr
sub
push
mov
fdivrs
adc
mov
or
or
pop
xchg
inc
adc
lods
xor
jecxz
adc
jge
ds
int
mull
mov
xchg
in
jl
insb
jne
in
jne
daa
and
outsb
lahf
sbb
cmp
imul
js
mov
push
pop
imul
mov
scas
into
dec
xchg
cmpsl
xor
add
mov
sbb
xchg
ljmp
jecxz
fwait
insb
jnp
and
in
push
std
xchg
sbb
xchg
cmp
sbb
xor
hlt
in
rcl
inc
mov
xor
inc
je
jge
ja
add
add
std
cmpl
sub
fstpl
setns
hlt
test
adc
jl
adc
out
je
pop
inc
inc
adc
push
mov
int
mov
mov
mov
insl
sarl
lahf
imul
jno
test
add
rcrl
or
scas
mov
roll
aam
cmp
mov
inc
jp
mov
pop
mov
xor
pop
xchg
aam
sbb
adc
dec
loopne
sarb
mov
shll
cwtl
rcll
pop
cltd
xchg
xchg
mov
adc
jns
fidivrl
daa
out
iret
jbe
je,pn
pushf
imul
popa
fwait
out
stc
jbe
in
dec
or
or
xor
xor
jp
aam
xchg
lods
data16
fistpl
dec
mov
out
lds
fwait
jne
das
mov
daa
loop
xchg
in
mov
inc
cmp
fstl
fidivrs
arpl
pop
xor
out
in
or
icebp
ljmp
jmp
in
push
mov
add
out
xchg
rolb
imul
pop
repz
shrb
cmpsb
test
fsubrs
mov
cmp
ljmp
sbb
pop
push
mov
add
xchg
sbbl
adc
adc
es
mov
insb
push
loopne
mov
das
mov
call
jae
lret
push
je
fxch
xchg
aad
leave
lahf
or
mov
sti
sub
lret
movl
cmpsl
cmp
pop
adc
xchg
mov
lock
scas
ret
cld
mov
jbe
dec
pop
ret
jbe
push
lea
adc
jle
cmpsl
lahf
push
add
xchg
imul
sub
lea
sub
push
xor
xor
sbb
out
adc
jnp
stc
ds
data16
ret
mov
shr
negb
movsb
mov
out
push
fsubs
xor
popa
mov
jb
push
stc
pop
add
pop
imul
xlat
mov
or
lret
mov
shll
cmp
aas
push
pop
xchg
sub
mov
mov
jno
pushf
xchg
stos
stos
cmpsl
insl
jecxz
fildl
insb
xchg
or
inc
aaa
mov
xchg
cmp
leave
adc
push
cmp
subb
in
shrb
daa
xor
arpl
and
inc
sub
inc
lods
popa
rcrb
pop
pop
adc
and
xchg
pop
loopne
lds
lret
test
in
loope
xor
push
mov
and
into
inc
lahf
sahf
dec
sarb
pushf
adc
sub
add
shlb
jbe
add
rcrb
or
into
xchg
imul
inc
arpl
jle
lret
insb
mov
inc
xor
aas
fistl
mov
lcall
or
adc
dec
inc
imul
data16
xor
mov
rol
imul
mov
out
daa
imul
stos
or
dec
fcoms
lods
iret
or
out
daa
sub
push
xchg
adcl
dec
inc
push
popa
rcr
adc
out
inc
dec
in
fisubl
addb
nop
inc
push
aad
cld
lods
leave
xchg
test
jno
pusha
pop
cmp
mov
cmp
xor
mov
pop
fistl
adc
sub
lret
xchg
jg
addr16
inc
push
xor
in
testl
dec
ja
ds
adc
adc
pop
lock
popf
or
icebp
mov
aad
jo
data16
inc
shrb
mov
xchg
sarb
pop
pushf
xor
adc
lock
mov
addr16
cmp
mov
mov
stc
or
mov
mov
daa
lahf
or
or
lods
jp
scas
xlat
andb
dec
mov
xlat
sahf
mov
int
xor
mov
dec
or
xchg
out
mov
inc
cli
mov
inc
mov
daa
out
stc
inc
mov
fucomi
fdiv
sahf
sbb
mov
icebp
dec
mov
xor
loop
or
inc
dec
jecxz
fildll
jnp
push
repnz
cmp
int3
pusha
jl
fsubs
push
pop
xchg
dec
pop
and
push
aas
sbb
cld
dec
cmp
insb
sbb
cmpsl
jge,pt
fwait
mov
adc
imul
push
lds
sarb
cmp
xor
xor
adc
lds
imul
pop
push
pop
outsb
adc
orl
add
pop
or
leave
jo
sub
pop
adc
sub
stc
mov
cwtl
mov
xchg
sbb
repnz
push
add
lea
stos
hlt
mov
cmc
shrb
add
and
sub
lea
xlat
test
mov
xchg
std
lret
mov
xchg
sbb
out
push
push
inc
or
sbb
addl
mov
aaa
sbb
or
ljmp
cmpsl
in
dec
mov
inc
add
sub
push
and
adc
mov
flds
or
scas
cmp
xchg
hlt
adc
loop
add
pop
icebp
mov
ret
decl
mov
push
pop
jns
pusha
sbb
mov
sbb
hlt
jno
cwtl
lock
inc
cmp
cmpsb
call
push
enter
repz
adc
adc
mov
mov
sahf
movsb
mov
dec
fimuls
adc
pop
xchg
or
rep
xchg
adc
push
jae
imul
or
popf
mov
dec
ret
imul
mov
mov
scas
cmpsl
sti
test
push
cmpb
sti
mov
insl
jbe
fmuls
cmpsb
in
xor
adc
mov
sub
mov
fchs
enter
clc
sbb
add
std
sbb
push
mov
les
push
pop
rolb
call
orb
xor
inc
add
pop
xor
test
jmp
test
cmpb
or
adc
xor
or
test
mov
test
test
add
aaa
icebp
das
inc
xchg
xchg
ds
pop
out
jecxz
cmp
mov
dec
add
pusha
jb
mov
rcr
lock
pusha
dec
push
js
cmp
push
push
pop
cld
jmp
lret
mov
pusha
add
ret
ret
scas
mov
and
mov
cmpsb
adc
xchg
pop
pushl
mov
xchg
mov
sub
lock
sbbl
mov
xor
jle
mov
clc
stc
fsts
pushf
adc
fidivrl
aam
mov
cmp
jne
popa
std
sub
fdivs
jnp
adc
push
outsl
xchg
pop
fs
and
xor
fidivrl
fisttpl
inc
jge
cmp
sub
nop
loope
cmpl
sbb
dec
scas
dec
pop
jmp
xchg
movsb
cmpb
adc
ret
push
mov
pop
push
cmp
push
push
repz
repz
call
mov
and
cmp
dec
or
dec
jne
cwtl
jge
ja
sahf
push
jmp
addr16
xchg
stos
imul
test
mov
scas
xchg
push
jo
addr16
push
pop
sti
adc
pop
cmp
xchg
cmp
sbb
sar
push
sbb
mov
lods
mov
cmpsb
pusha
je
inc
inc
xchg
outsb
aas
int
push
sbb
cld
pop
xchg
lods
mov
lret
and
cmp
lds
std
or
xchg
testb
clc
in
mov
or
sti
inc
pop
nop
and
leave
push
sbb
lods
mov
pop
aad
scas
es
adc
add
xor
inc
in
std
repnz
inc
mov
rcr
pop
stos
je
jb
adc
add
or
insb
fidivl
jb
int
das
mov
xchg
test
shrl
les
push
push
movsb
es
mov
dec
rcrb
add
xchg
push
popa
fisttpll
xchg
fstps
sarb
push
enter
sub
fisubl
cmpsb
or
fidivl
cmp
dec
iret
pushf
or
pop
negl
rorb
daa
popa
mov
sub
popa
mov
pop
xchg
addr16
pushf
jle
enter
call
pop
imul
ret
cs
aaa
push
push
mov
shld
adc
ret
cmp
out
ljmp
or
add
mov
inc
movsb
push
and
or
add
jbe
mov
xor
popf
xchg
xorl
loop
adc
std
leave
mov
push
inc
stos
dec
or
iret
in
clc
xor
leavew
xor
mov
andb
pop
lahf
mov
iret
sbb
cmp
sub
subl
cmp
jae
mov
les
mov
sti
mov
fsub
test
adc
push
std
shll
into
test
mov
mov
xchg
testb
jmp
jns
bound
sbb
inc
js
imul
pop
mov
push
movsl
xchg
imul
pop
movsb
push
mov
sub
pop
jbe
push
push
in
xor
in
mov
test
push
lock
mov
inc
xlat
sbb
call
add
push
xlat
ss
sarb
int3
pusha
lcall
mov
add
popf
leave
inc
sub
inc
iret
mov
inc
pop
cmpsb
or
repnz
imul
jns
lahf
loope
fwait
pop
mov
dec
xchg
push
push
mov
add
mov
jbe
imul
fiadds
xchg
push
sub
rcl
sub
movsl
loopne
jge
in
push
in
aam
mov
cld
inc
out
jp
imul
pusha
push
std
and
fisubrl
jp
out
cmp
push
clc
xor
pop
pop
daa
imul
adc
inc
stc
shll
push
push
sub
jp
je
je
adc
or
sbb
jg
or
sahf
and
pop
lods
push
sti
xor
test
or
dec
out
inc
imul
stc
jge
inc
fistps
xchg
sahf
fcom
inc
out
lock
insl
cltd
and
imul
mov
data16
sbb
loop
loope
dec
dec
in
jl
jbe
adc
and
sub
ss
adc
or
punpckhdq
sub
pop
and
dec
lret
jge
lret
pop
mov
loopne
call
fsts
out
jmp
js
lahf
dec
popf
enter
lods
in
push
in
xchg
sbb
fs
xor
insb
jns
mov
sub
jnp
in
push
sbb
push
pushf
das
test
lods
and
dec
pop
ret
nop
addb
lods
lcall
out
push
in
cmc
mov
rcll
mov
cmc
daa
or
sbb
dec
and
mov
out
mov
in
push
jp
sbb
pushf
mov
cs
in
or
inc
int
jl
mov
inc
scas
mov
int
mov
arpl
jge
dec
mov
and
aam
gs
loopne
lods
cmp
out
pop
push
jg
imul
sbb
xchg
jbe
adc
bnd
adc
xchg
outsl
in
jb
mov
jns
push
push
shlb
xor
mov
cmp
xchg
pop
mov
push
mov
aaa
push
int3
sub
aad
add
or
stos
test
adc
scas
cltd
arpl
jmp
aad
and
jle
mov
inc
mov
lcall
sbb
cmp
popf
popa
adc
adc
mov
cmp
int3
sbb
and
xor
sahf
sub
add
inc
cmpsb
pop
popf
mov
jmp
test
stos
gs
pop
jg
xor
in
jmp
fcos
or
pusha
sub
sub
xchg
add
subl
cmp
in
sahf
fdivl
data16
fs
pushw
repnz
mov
xchg
gs
fstps
ljmp
mov
mov
dec
out
in
fs
add
push
dec
push
cli
cmp
mov
cmc
aad
out
daa
push
dec
scas
dec
aad
cmpsl
fiadds
arpl
pop
leave
cmc
sub
lea
jne
add
adc
rcr
shrb
and
cmp
inc
mov
loop
inc
mov
jl
jecxz
fdivrs
lds
cmp
push
jns
fisubl
sbbl
jo
pop
dec
mov
shll
clc
push
icebp
mov
lds
outsl
add
mov
jbe
cmp
sbb
loope
and
inc
xor
mov
cmpsb
orb
mov
inc
jmp
adc
into
cwtl
enter
xor
pop
fstpt
jl
mov
inc
jne
or
data16
jp
inc
xchg
jae
enter
dec
mov
insb
fwait
sub
xchg
movsl
or
inc
lcall
sub
lret
cli
mov
and
fnsave
inc
mov
push
adc
dec
or
mov
repnz
dec
mov
out
pop
sbb
rcl
and
jbe
in
call
cs
jbe
rcll
icebp
sub
pop
jl
add
inc
jg
int
cwtl
ror
xor
cmp
add
aam
mov
xor
jae
fadd
decl
rol
je
div
push
js
pop
cmpsl
rorb
inc
test
nop
hlt
repnz
sti
imul
and
sub
inc
sbb
mov
jns
mov
nop
sub
lret
imul
ja,pt
xchg
aam
mov
jns
dec
pop
ds
mov
test
jmp
xchg
jns
out
test
cmp
js
pop
mov
int3
fwait
mov
cwtl
sbb
and
mov
mov
faddl
xor
push
mov
jns
xchg
push
int3
fdivrl
mov
xchg
hlt
dec
mov
sbb
cli
fisubrs
mov
push
pop
test
mov
sbb
dec
dec
mov
jmp
adc
and
or
lods
push
arpl
lds
insl
fisubrs
cmpsl
sub
shl
hlt
adc
sub
dec
xor
mov
pop
inc
enter
pop
seta
xchg
popa
fcomp
jmp
jle
mov
rcrl
lea
les
lret
add
jo
cwtl
icebp
mov
xor
subb
pusha
cltd
push
iret
and
push
cli
jb
cmp
sub
in
dec
xor
sbb
lahf
sub
mov
std
or
sub
clc
xchg
aad
or
dec
and
jg
and
push
xor
insl
adcb
dec
mov
addl
ud2
rcrl
orb
mov
hlt
push
adc
push
xchg
xor
xor
dec
fs
out
shrl
aaa
sub
mov
rcrl
gs
push
mov
jle
or
cwtl
mov
stos
test
es
icebp
xor
jnp
sub
bound
dec
jg
jne
fstl
ja
push
mov
cs
inc
dec
xor
pop
in
enter
jl
push
imul
out
add
dec
and
xlat
pop
or
lahf
ss
xchg
adc
cmp
inc
inc
mov
inc
ss
leave
mov
ret
aam
fdivrs
insb
xor
lea
arpl
lds
jbe
dec
pop
push
dec
xchg
sbb
jae
je
mov
xchg
sbb
and
mov
cld
pop
mov
inc
call
jnp
dec
cmp
mov
xor
fimuls
sub
cmpsb
xor
aam
subb
dec
les
aam
imul
aad
cmpsb
inc
push
push
cwtl
push
mov
fs
outsl
cmp
adcb
sub
adc
test
in
jmp
stos
push
mov
push
mov
sbb
xor
xchg
idivl
sbb
cmp
dec
xor
mov
pop
in
outsb
and
lcall
add
pop
cmpsl
sbb
xchg
popf
add
outsl
std
add
mov
scas
adc
rolb
add
repnz
xchg
pop
cwtl
nop
sbbl
ret
dec
xor
je
mov
mov
cmc
jl
shl
insl
inc
mov
fcoml
or
ds
insb
push
fisubs
cltd
pop
add
addr16
insl
stos
pop
in
sbb
testb
xchg
imul
adc
push
xchg
mov
pop
mov
lds
lret
flds
addr16
test
cli
dec
call
loopne
adc
add
ret
iret
push
adc
scas
cmp
repnz
cwtl
cld
rorl
out
out
repz
and
cmpsl
adc
dec
push
aam
mov
pop
out
or
inc
jle
std
inc
dec
sub
rolb
dec
cmp
loope
call
enter
sbb
jg
cmpsl
insl
inc
adc
fdivrp
scas
push
adc
stos
cmp
imull
jmp
jge
xor
push
inc
xchg
mov
dec
icebp
push
mov
add
lods
lods
mov
cmp
enter
imul
std
aam
mov
cltd
shlb
inc
fisubs
push
pop
into
int3
mov
fdivrl
imul
inc
mov
fdivrl
imul
cs
inc
pop
mov
sub
les
xlat
mov
xchg
and
add
repz
mov
xor
arpl
fcmovb
pop
jecxz
jg
sarb
sbb
in
test
adc
dec
popf
loop
dec
jo
push
aas
int
mov
ret
pop
pop
jnp
out
push
xlat
pop
sub
scas
scas
mov
js
xchg
loopne
mov
adc
add
jle
jl
pushf
sbb
pop
sub
mov
adc
adc
mov
jp
rolb
jecxz
mov
mov
jns
in
adc
jb
xlat
int
pop
repnz
jge
and
push
dec
mov
push
scas
xchg
adc
cmp
push
lds
jbe
xor
mov
gs
ja
add
adc
or
sub
repnz
outsl
or
aam
dec
flds
jno
je
decb
add
test
cli
int
adc
xchg
fs
pop
ret
pop
xchg
daa
sbb
shrl
dec
pop
sbb
not
mov
addb
inc
push
insl
sti
jnp
nop
add
pop
sbb
loope
lret
mov
push
pusha
push
aaa
jnp
ret
popf
int3
push
gs
mov
xchg
imull
das
or
pop
lcall
cltd
insb
fadds
dec
inc
jg
push
ficoml
ret
fwait
rclb
pop
insl
xchg
or
add
insl
fucomi
jecxz
jne
jecxz
sub
cli
push
int
xchg
fisubl
mov
cmp
add
xchg
or
xor
ret
arpl
pushf
cmpsb
imul
lods
mov
sbb
pop
fcompl
jmp
mov
push
gs
fadd
xor
idivl
les
mov
pop
jl
jne
xchg
ret
jb
push
imul
lods
outsb
in
dec
and
shl
adc
jg
mov
aam
jne
sbb
ror
sub
cmp
fwait
clc
xchg
out
orb
arpl
ss
cmp
sbb
inc
call
addr16
fwait
mov
inc
inc
inc
mov
adcl
dec
push
cmc
push
fwait
inc
fldl
dec
sub
into
mov
test
orb
int3
and
mov
test
nop
push
jmp
pop
int
pop
adc
lods
mov
lock
sti
cmp
insl
out
test
fdivrl
add
and
ja
inc
aad
stc
repz
pushf
xchg
jmp
inc
xchg
in
es
lods
xor
or
xchg
and
lcall
divb
stos
xchg
imul
sbb
test
adc
nop
cmp
addl
stos
push
and
fcoml
inc
aaa
sbb
lods
and
pop
or
dec
dec
clc
push
pop
pop
jnp
cmpsb
mov
inc
xchg
push
add
sub
cmp
and
inc
mov
das
or
push
mov
loop
push
xchg
push
fisttps
mov
fprem
cmc
decb
ret
das
in
js
adc
mov
lea
je
xor
inc
int3
dec
sub
popf
jg
fistl
or
clc
pmulhw
out
and
dec
sbb
in
and
cmpsl
xor
add
out
in
aas
xchg
and
repnz
shl
mov
rolb
xchg
dec
call
jle
jle
ss
aas
test
inc
xchg
xor
and
loope
sbb
in
push
xchg
loop
inc
rolb
jno
dec
ljmp
sbb
cmp
adc
inc
sub
pop
xlat
cli
test
or
jecxz
mov
lds
push
xchg
clc
dec
bound
sti
cmc
cs
mov
stos
test
out
sub
sar
sub
jns
sub
je
jne
out
xchg
xchg
sub
enter
pop
test
add
jl
stos
imul
or
std
inc
or
cwtl
push
int
test
and
shll
iret
inc
and
loopne
xor
leave
mov
jp
es
enter
repz
arpl
dec
ret
xlat
movsl
mov
push
add
cmp
xchg
or
push
cmp
inc
lahf
popa
xchg
fdivrl
xor
pop
add
jmp
pop
ljmp
les
add
out
add
adc
cld
push
jo
mov
movsl
adc
out
add
push
pop
pop
add
aam
jb
and
fisubrl
call
jle
inc
into
adcl
lods
ds
cwtl
lret
leave
lds
inc
dec
dec
push
mov
mov
aas
fidivrs
and
scas
lret
addb
sbb
cmc
mov
stos
adc
inc
hlt
lret
add
int
sbb
dec
rcr
test
out
rcrb
pop
add
sti
out
xchg
ljmp
mov
push
cwtl
dec
test
add
sub
in
or
cltd
js
mov
cvtdq2ps
aas
inc
fwait
mov
mov
pop
xchg
in
xlat
adcl
sub
cmp
or
sbb
inc
dec
inc
and
sahf
insl
pop
mov
sbb
adc
xor
xor
and
cmp
pop
test
lds
xor
insl
pop
inc
bound
mov
clc
push
push
mov
dec
les
and
push
sahf
jmp
add
cmp
xchg
dec
repnz
data16
loope
xchg
sbb
mov
ret
mov
xlat
jns
sub
fsub
add
jp
mov
cwtl
or
sbb
push
stos
cmp
pop
icebp
sub
or
pop
mov
fimull
in
fs
imul
mov
push
or
push
sbb
out
pop
or
ss
into
jmp
int
pop
mov
jp
das
insl
dec
cmpsl
adc
sbb
or
mov
lret
and
sarl
dec
jo
jo
mov
fcompl
inc
jmp
clc
dec
adc
cld
scas
jle
adc
insb
push
adc
adc
popa
jp
and
test
xor
shlb
test
pop
cmp
outsl
pop
popa
sbb
loopne
repz
outsl
sahf
leave
xor
inc
sti
fmul
cmp
push
dec
xchg
mov
fs
dec
xchg
mov
stos
mov
mov
ja,pt
push
inc
daa
fcomps
jmp
and
lahf
xchg
test
mov
stc
ja
jae
mov
mov
adc
jbe
mov
mov
pushf
sahf
mov
outsl
jmp
decb
out
in
push
xchg
stos
sarb
fdivl
orb
addr16
mull
lea
sub
push
fsts
mov
pop
mov
pop
fcmovb
lcall
cmpsl
psubb
push
loop
xchg
mov
dec
fwait
inc
mov
in
xchg
xchg
gs
push
adc
cmp
int3
pop
or
pop
lret
dec
sbb
push
and
out
inc
loopne
lods
adc
push
pop
sbb
lcall
add
cld
adc
cmpsl
adc
and
mov
push
mov
push
in
sub
fs
dec
leave
movsl
stc
call
dec
xchg
mov
mov
push
addr16
push
out
cmpsb
jp
scas
nop
and
cmpsb
jnp
jle
fs
rcrb
mov
out
pop
iret
sarl
push
mov
ljmp
sub
pop
cmpsb
lcall
xchg
loop
xor
jp
xor
lret
dec
mov
xlat
dec
jno
mov
in
orl
jmp
into
mov
jb
and
popa
movsl
out
add
fs
stos
mov
jmp
or
icebp
pusha
mov
test
imul
out
add
or
les
pop
and
xor
adc
add
xchg
fwait
addr16
mov
xor
ja
jnp
in
cmp
mov
movsl
or
ror
mov
mov
sub
aam
jnp
loope
out
mov
lret
out
or
inc
sub
and
ret
pop
inc
mov
mov
cmp
movsb
xor
cltd
lock
push
fstpl
xchg
mov
gs
inc
bound
adc
jnp
incb
xor
repnz
sub
adc
push
xchg
push
mov
aad
inc
inc
dec
enter
sbb
sbb
lods
push
sub
mov
pop
int3
insl
mov
outsl
mov
jno
cmp
pop
in
lretw
test
mov
or
pushf
cmpsb
stos
dec
sub
or
mov
sbb
sub
adc
imul
jg
xchg
mov
aad
pop
bound
data16
jbe
fwait
insb
mov
inc
rcll
xchg
mov
shrl
push
dec
and
loop
sbb
scas
ds
ds
divb
mov
andb
xchg
cld
sbb
out
jecxz
lcall
jge
loopne
cmpsb
sbb
les
cmpsb
out
add
pop
push
dec
cmpb
gs
ja
sbb
aaa
das
sbb
sqrtps
addr16
imul
ljmp
jg
jge
xchg
repnz
in
or
xchg
jge
xchg
pop
sub
dec
insl
test
insl
and
ret
jo
les
jp
repz
cmpb
sti
push
mov
out
pop
xor
add
ret
mov
cmpsb
int
add
loop
addr16
insl
cmp
and
dec
or
mov
adcb
arpl
lock
lcall
hlt
cmp
sahf
mov
inc
fucom
out
cltd
push
fistpll
adc
xchg
cmp
or
inc
test
lcall
dec
sbb
into
cs
outsb
test
add
add
shrl
adc
or
or
pop
pop
cmp
adc
adc
push
jle
aaa
lock
mov
clc
inc
or
and
cmp
adc
mov
mov
aam
popa
loop
or
lahf
arpl
push
dec
movsb
xchg
hlt
hlt
sub
dec
mov
shrb
sub
add
sbb
jp
jg
into
mov
add
jmp
ss
jmp
in
mov
xchg
imul
les
fmuls
adc
out
sub
dec
imul
fsts
push
add
mov
pop
or
addr16
cmp
jo
inc
aaa
jno
adc
dec
sarw
jb
fdivrp
pop
xchg
ret
js
pushf
adc
in
dec
pop
aad
jo
push
call
lahf
push
add
and
lahf
jae
stos
add
mov
rcl
pop
fidivrl
mov
inc
pushf
adc
aad
dec
ret
daa
sti
jmp
mov
cmp
cs
dec
call
jns
xchg
mul
mov
lds
fsts
lods
idiv
rol
jnp
mov
and
add
js
ss
js
test
insb
inc
popa
hlt
lahf
fwait
cmp
test
inc
inc
xchg
out
ss
out
add
mov
js
jo
push
cld
inc
loope
adc
out
lods
ljmp
cmp
sbb
mov
mov
sti
out
int3
pop
xchg
push
xor
mov
push
in
divb
push
inc
mov
or
and
cmp
inc
shlb
ds
cmp
sub
sbb
divb
cmp
std
rclb
ret
push
data16
sub
dec
adc
aad
gs
scas
jmp
popf
add
xchg
arpl
ss
subb
daa
scas
xor
pusha
push
aam
mov
sbb
jge
hlt
pop
and
inc
jnp
lock
je
pop
pop
push
lods
push
push
int3
push
into
xchg
add
jle
mov
jns
mov
push
out
lret
mov
testb
inc
inc
or
ja
ss
inc
rcrl
and
fsubrl
add
pop
out
mov
adc
out
int3
jb
leave
aam
mov
test
mov
sub
adc
pop
xor
shll
lods
jge
adc
fdivr
hlt
iret
add
dec
sub
mov
mov
outsl
xor
mov
imul
cmp
test
pop
cltd
mov
adc
xchg
shlb
movsl
pusha
sbb
cli
lahf
adc
mov
sub
fsubl
js
adc
in
cmp
fdivrp
pop
xor
jecxz
mov
xlat
adc
lcall
and
out
aam
push
std
out
jo
test
jg
jecxz
xor
mov
cmp
repnz
adc
lret
add
dec
popa
mov
and
roll
in
ror
aam
mov
mov
mov
insb
loop
xchg
xchg
popf
xchg
mov
es
inc
test
test
call
rorl
sbb
or
arpl
outsl
mov
pop
sbb
out
inc
or
push
pop
inc
push
xchg
cmp
jecxz
jmp
cwtl
outsl
mov
xor
test
jecxz
xor
sbb
imul
jns
pushf
out
xchg
and
add
and
insl
push
cmp
leave
aas
xor
or
js
out
push
pop
sbb
bound
jecxz
aam
cmp
add
push
mov
xacquire
lods
imul
arpl
lret
xchg
and
dec
dec
ret
inc
and
xchg
into
or
lret
mov
ret
xchg
daa
cmc
add
out
icebp
jmp
repz
addb
push
pop
stos
imul
mov
fwait
dec
rolb
movsl
push
jl
sti
pop
adcl
jle
jne
mov
das
in
cmpsl
call
addr16
outsl
mov
inc
jne
lret
jo
mov
cmp
inc
sub
jb
mov
ret
xor
ss
pop
data16
lods
cmp
clc
dec
out
inc
dec
push
xor
sbb
jo
mov
and
xchg
push
ficomps
rcl
sbb
xor
jbe
fiadds
mov
and
mov
mov
push
in
into
inc
xchg
lods
sbb
xchg
cmp
xchg
add
nop
or
jno
dec
cmp
xor
xor
sub
inc
mov
push
jl
dec
lock
inc
sahf
push
or
cs
jl
cs
aas
adc
mov
jnp
movsl
sub
lahf
push
outsb
leave
shrb
test
movsl
inc
imull
js
insl
jecxz
push
outsb
cmpb
out
stc
ret
sub
pop
add
sub
mov
sti
sub
pop
pop
lds
stc
outsb
mov
push
scas
pop
mov
mov
loop
aam
aam
mov
push
repz
jl
and
inc
in
push
sbb
imulb
mov
icebp
inc
ja
pop
rcrl
fldenv
lcall
rcr
mov
negl
mov
add
ret
test
stos
ja
clc
inc
hlt
push
sbb
test
das
and
test
xchg
push
jge
add
stc
jbe
jle
inc
inc
daa
shrl
pushf
lcall
in
arpl
jmp
leave
or
xchg
arpl
xor
sbb
mov
adcb
fistpl
test
inc
cmp
inc
test
mov
ja
dec
les
sbb
inc
lds
lret
enter
out
or
mov
mov
adc
push
cmp
jns
push
push
test
dec
fdivs
dec
and
jne
pop
cld
push
xlat
lock
sti
mov
rclb
lret
leave
or
lea
adc
and
sbb
aam
push
mov
pusha
xor
aam
sub
jl
push
cmp
xchg
push
mov
adc
pop
lock
lock
jo
jecxz
je
std
jns
call
lcall
fnstsw
jle
sahf
add
pop
sub
out
fcomps
mov
fisubrl
sub
xchg
jae
test
xchg
pop
inc
test
cmpsl
sub
push
sarl
test
idivl
inc
subb
test
sbb
inc
bound
movsl
adc
mov
lock
nop
adc
iret
sbb
sbb
insb
push
ret
mov
jno
mov
cmpsl
repnz
sbb
fbstp
call
mov
aaa
xchg
xchg
lds
out
or
ret
lahf
adc
xchg
pop
clc
pop
pusha
xchg
add
lea
popa
mov
jne
shll
test
or
les
cmp
rclb
sbb
enter
mov
dec
scas
push
inc
in
imul
push
fmulp
ja
cmp
sub
or
pop
mov
add
nop
mov
pop
insl
rol
pop
dec
vpsrlw
sahf
popl
fstpl
lods
and
mov
mov
xchg
subl
js
enter
lea
mov
mov
mov
rcl
mov
jb
pop
add
enter
sub
cmpl
ljmp
shl
and
and
mov
mov
cmp
lods
mov
or
roll
into
mov
inc
jle
or
insb
lret
aas
push
xor
lods
sub
stos
fistps
add
inc
stc
sub
imul
sub
aaa
outsl
mov
or
push
inc
je
pop
xchg
sahf
xchg
sub
mov
xlat
inc
enter
ret
lds
test
xor
sbb
cmp
ljmp
inc
in
fs
push
into
stos
mov
cmp
test
sbbl
pop
nop
mov
pop
mov
dec
fwait
ret
insb
lock
and
push
pop
xor
popl
push
mov
hlt
or
jb
enter
fcmovbe
lahf
add
or
test
cmpsl
jp
mov
cmp
mov
fprem
popf
cli
jne
xchg
push
aad
mov
xor
outsl
or
xchg
add
fists
outsl
ret
mov
iret
out
addb
in
sub
jecxz
jbe
xor
push
loopne
xor
xor
aam
jne
push
jmp
mov
shlb
and
lods
shr
pop
divb
mov
mov
scas
pop
shrl
mov
pop
jnp
xlat
pop
inc
pusha
jns
pop
fsubr
xor
mov
xor
test
into
pop
popf
push
into
outsb
test
push
shrb
cld
repz
ret
xchg
and
and
mov
mov
jecxz
or
sub
adc
mov
ficoml
stos
in
and
adc
jge
ja
ljmp
pop
mov
cwtl
int
mov
popf
pushf
pop
xor
pop
insl
ficomps
dec
sbb
jp
sub
or
outsl
inc
xchg
jae
fldl
sti
icebp
mov
push
out
insb
cmp
fcomip
jb
data16
push
cmc
popa
dec
mov
and
add
stc
jl
rcrb
syscall
add
and
insl
pop
mov
and
or
dec
stos
shrb
cmp
sbb
lods
mov
scas
mov
and
mov
xorl
fidivrl
cmp
lods
arpl
int
inc
jns
es
jl
jge
push
jns
xor
idivl
adc
inc
mov
add
pusha
xchg
loop
mov
cmp
jl
mov
jbe
mov
lock
and
dec
in
rcrb
push
jle
and
test
adc
jecxz
in
jg
sub
fnstcw
jno
mov
push
jp
outsl
and
loopne
pop
push
jnp
sub
imul
push
aas
dec
lds
inc
subps
mov
lret
xor
test
or
shrw
xor
pop
lea
push
push
mov
cmp
out
jns
mov
sarb
hlt
inc
jl
mov
lods
mov
pop
arpl
sbb
shll
dec
dec
inc
add
insb
das
lcall
test
push
or
nop
jns
and
sarb
scas
mov
leave
xor
pop
mov
jecxz
nop
cwtl
pusha
pop
inc
in
mov
dec
stos
jge
repz
mov
fldt
sbb
int
fbld
mov
and
push
mov
mov
fimuls
imul
dec
lock
inc
inc
xchg
cmp
testb
pop
inc
arpl
and
ljmp
arpl
jo
outsb
cmp
add
jbe
cmp
sarb
and
dec
jnp
or
sub
les
add
scas
or
xchg
hlt
sbb
cld
orl
sub
sub
cmp
dec
loope
xchg
notb
fdivrl
push
dec
push
mov
lahf
add
ror
push
xor
push
and
cmpsb
pushf
mov
dec
je
mov
jecxz
cmp
test
fmull
dec
es
outsb
or
cmp
and
sbbl
ljmp
cltd
aad
cmp
mov
mov
loopne
adc
push
pop
shl
fs
jg
ds
hlt
mov
adc
push
mov
and
insb
popa
cmpsl
lret
or
adc
or
loop
and
jnp
pop
inc
loop
insb
cwtl
and
movsb
or
adc
inc
xor
mov
fsubs
push
repnz
testb
clc
ss
adc
pop
cmp
inc
xchg
jb
jg
jnp
or
jg
sbb
inc
cmp
jmp
jecxz
iret
repnz
sahf
xor
xchg
loopne
js
psubsb
push
inc
popf
pop
icebp
xchg
test
dec
pop
mov
mov
lea
fs
sbb
xor
rol
nop
je
mov
push
mov
xor
ret
shll
push
mov
stos
cmpsb
mov
arpl
lahf
add
cld
test
push
mov
cmp
mov
lods
addr16
dec
imul
mov
into
adc
dec
sti
ja
dec
or
add
mov
ss
movsb
mov
shrl
insb
adc
cmpsl
push
cld
pusha
fnstsw
mov
inc
sub
rolb
les
mov
push
lock
adc
shl
hlt
cwtl
cmp
scas
insb
mov
inc
aas
xor
mov
ret
daa
or
aam
dec
scas
mov
sbb
rorb
mov
int3
xor
mov
stos
fst
out
add
rcr
and
inc
fisubrs
pop
int
jp
int3
sbb
cmp
dec
cmp
push
aad
sarb
adc
jmp
aas
mov
loop
cltd
call
add
inc
aad
cmpsb
pop
xor
mov
subb
sub
fwait
popa
inc
insb
fidivl
sub
jno
jbe
int3
lret
mov
mov
insb
mov
jl
cmp
lcall
aad
mov
je
subl
mov
mov
outsl
mov
sbb
lret
daa
or
into
jno
mov
leave
sbb
stos
movsl
sbb
clc
div
rorb
mov
shlb
or
aad
inc
call
fwait
pop
loop
inc
or
lds
out
push
sub
cwtl
mov
aam
inc
sbb
inc
mov
ret
clc
imul
ja
cwtl
addr16
aam
mov
cmp
sub
mov
push
lds
mov
ds
pop
jbe
out
and
or
loop
push
movsb
nop
mov
enter
jno
xlat
pushf
push
lods
jnp
mov
inc
dec
cmpsb
and
dec
ret
pushf
or
icebp
ret
xchg
lahf
sub
cmc
aaa
mov
dec
ror
and
mov
cmpsl
pop
mov
pop
or
jle
sub
dec
in
mov
testb
out
scas
pusha
outsb
sbb
fwait
rolb
ja
inc
insb
sahf
mov
pop
andps
fsub
cwtl
out
mov
add
lock
or
filds
or
adcb
add
test
mull
sti
xchg
cmp
call
pop
adc
mov
aas
mov
hlt
mov
cwtl
lea
cwtl
int
add
cmp
dec
scas
fnstenv
xor
xorb
push
add
mov
daa
fisubl
mov
mov
imul
sub
sub
xor
cld
add
mov
lcall
pop
je
dec
loope
mov
setnp
lods
rcrl
test
push
incl
repz
rcrl
into
hlt
lods
cli
cld
jbe
out
repz
lods
add
mul
movsl
das
mov
iret
adc
sub
xchg
push
sbb
sub
xorb
push
jnp
push
outsl
rorl
push
testl
scas
and
or
cwtl
not
mov
add
aad
xchg
inc
sbb
adc
push
xchg
shrl
push
int3
mov
mov
push
rcr
stos
xor
dec
lret
test
rorl
std
pop
or
sub
mov
andb
mov
ss
pop
push
mov
pop
add
jg
popa
cmp
push
sub
mov
js
fs
mov
add
mov
push
or
lock
adc
mov
dec
hlt
and
lret
adc
scas
jnp
aad
fnstenv
insl
jl
sbb
jp
jae
push
call
arpl
jb
sbb
repz
add
cli
or
xor
xor
add
aad
push
mov
sbb
and
xor
ja
ds
cmp
sbb
mov
mov
shrl
clc
cmp
fisubrl
in
ja
add
sub
ret
fistl
or
inc
testb
out
mov
in
frstor
dec
call
inc
xor
mov
xchg
hlt
cld
int
addr16
data16
xlat
ror
xchg
or
jnp
int
add
sub
sbb
cltd
adc
jg
mov
sbb
loope
sbb
mov
in
popa
stos
movsl
adc
sbb
orl
rorl
repnz
sbb
cltd
inc
inc
test
xlat
subl
push
sub
xor
ja
xchg
xor
or
ficomps
mov
shl
popf
hlt
push
xchg
pop
rolb
adc
jno
fisubrl
or
and
cmp
int3
push
daa
movb
adc
mov
test
push
jmp
xor
ss
cmp
sti
jae
movsb
lea
inc
in
shlb
cmpsl
xor
adc
xchg
mov
jg
mov
inc
aad
mov
sbb
cmp
xchg
ret
push
loope
pop
dec
inc
cld
inc
fwait
pop
mov
cmp
mov
mov
and
stos
shrb
dec
mov
add
popa
shl
scas
sti
jmp
stc
sbb
mov
sahf
sub
and
add
xchg
push
jmp
into
shlb
mov
js
loop
sub
aas
push
fisttpl
cmp
mov
xlat
fdivs
int
sbb
add
fwait
negb
negb
jp
jns
sbb
jecxz
lahf
les
in
jle
add
sbb
cmp
movsb
pop
int3
inc
pop
jp
cwtl
sub
mov
mov
and
gs
into
jp
imul
ds
jmp
xchg
cld
ja
xchg
mov
mov
cmp
sbb
movsl
sbb
nop
jb
xor
insb
xchg
loopne
xchg
xchg
pop
imul
xchg
mov
fwait
lds
fldenv
add
pop
jge
mov
push
dec
popf
aam
jmp
test
out
mov
dec
sub
into
ds
sbb
pop
and
add
mov
cmp
je
loop
iret
imull
cmp
movsb
jno
mov
mov
fsubrp
adc
push
jle
fadds
xor
or
push
dec
lods
jne
repnz
add
rcrl
imul
pop
insb
cs
ja
xchg
mov
push
lock
out
xor
jbe
adc
add
add
into
rorb
xlat
insb
idivb
loope
mov
mov
pop
cmpsl
sub
and
adc
and
leave
lcall
mov
push
push
sub
pop
jp
cmp
cmpsl
in
mov
aad
int3
jp
data16
cmp
in
lret
faddl
cmp
ljmp
jg
mov
sbbb
cmp
and
mov
lcall
ljmp
lea
mov
test
call
js
ja
mov
test
or
outsb
bound
pop
pop
jno
stos
mov
xor
test
dec
sbb
out
addr16
dec
push
nop
jbe
fisubrs
sbbb
loop
inc
jne
sbb
cwtl
lcall
movsl
cmp
or
inc
stos
das
mov
hlt
shrb
sbb
fisttpll
xchg
and
cmp
mov
cli
lcall
cmpsb
pop
fists
xchg
xchg
jne
xchg
add
scas
add
push
inc
add
or
imul
sub
jge
shll
dec
and
test
lods
pop
xchg
cmpsb
mov
cmp
lcall
leave
xchg
dec
lret
ja
mov
pop
movsb
cwtl
mov
imul
inc
xchg
ja
and
push
sarl
ds
xor
and
sub
sub
fisttpll
adc
in
mov
push
pop
pop
sbbb
pop
add
addb
xchg
repz
ficomps
mov
xchg
xchg
xchg
jnp
cmp
decl
lods
xchg
push
jnp
mov
gs
jge
or
sahf
je
lret
nop
mov
fldenv
cltd
mov
cli
cli
out
call
mov
outsb
push
js
dec
in
ret
testb
cmp
mov
imul
push
sbbb
std
sub
sbb
movsb
bound
xchg
shl
mov
shlb
pop
push
and
adc
sbb
aaa
arpl
jge
cli
mov
mov
push
int
push
pop
lret
int
add
sub
outsl
dec
inc
movsb
jne
hlt
cmpb
xchg
idivl
outsl
xchg
mov
mov
shlb
or
popf
dec
mov
fs
stc
xlat
cmpsb
lods
fwait
stos
and
xor
outsb
xor
mov
cltd
jp
mov
pop
fildll
int3
xor
inc
push
outsl
xor
outsb
lds
sub
lods
mov
xlat
mov
mov
movsl
sbb
jae
cltd
inc
mov
ss
out
sbb
fsubrp
popf
mov
fiaddl
imul
mov
pop
cs
jg
sarb
loope
cli
mov
cmp
fistpll
mov
mov
xor
test
mov
ret
jmp
xchg
add
cmp
shlb
testl
sub
call
and
insl
adc
push
cmp
insl
jnp
js
push
jp
ret
mov
outsb
jge
icebp
push
adc
push
mov
push
jns
out
dec
jg
shll
mov
xlat
jge
add
ss
in
sbb
adc
dec
xor
addb
orl
repz
fld1
pop
jnp
lods
xor
jb
ljmp
cmp
movsl
lcall
sbb
cmp
stc
ss
scas
cmp
cmp
sbb
les
std
mov
out
sbb
outsl
cld
or
stos
mov
shlb
and
leave
sbb
std
adc
mov
mov
insb
pop
jmp
sub
inc
pop
int
adc
mov
fisubrl
mov
jb
lret
mov
sbbl
xchg
int
sub
adc
push
and
in
popa
mov
xorl
sbb
pop
je
pop
adc
std
mov
sbb
add
sbb
mov
loope
or
mov
ss
jge
sahf
push
mov
iret
stos
test
loop
aam
or
add
mov
and
nop
push
test
mov
fwait
rep
sub
mov
mov
or
aam
nop
adc
imull
cmp
shll
arpl
cwtl
mov
xchg
ret
fcmovu
push
mov
or
pop
lahf
xor
adcl
mov
cmpsb
lret
pop
or
and
xchg
pop
test
int3
push
loop
daa
xchg
mov
pop
lock
out
imull
aaa
and
subl
push
push
nop
repnz
mov
shr
ret
movsl
in
sbb
and
push
pop
adc
and
xchg
jge
inc
test
sub
jbe
xor
lahf
sub
sahf
mov
stos
mov
test
sbb
out
clc
fadd
cmp
xchg
das
xor
or
cmpsl
lret
jmp
dec
sub
pop
inc
fsts
movsb
xchg
outsb
cmp
loope
movsb
loop
out
inc
inc
xchg
jge
push
pop
test
aam
dec
jp
pop
paddsb
imul
mov
push
das
inc
rolb
pop
pop
mov
xlat
mov
sbb
sub
and
push
mov
mov
bound
jmp
lcall
cltd
lret
xchg
outsl
pop
sarb
adc
cmc
push
and
or
push
xchg
cwtl
or
fs
dec
push
jbe
repz
clc
add
jnp
xchg
iret
in
xor
jnp
cli
leave
cmp
dec
push
mov
cmp
inc
mov
lods
mov
jbe
adc
pop
sti
popa
add
push
push
lods
bound
js
pop
fdivr
adc
inc
sub
das
shl
icebp
lcall
scas
aad
mov
inc
out
rolb
push
inc
push
adc
mov
sbb
xlat
stc
pop
xchg
stos
push
movsb
lds
cmp
inc
lods
cmp
mov
in
cmp
xor
jecxz
loope
push
movsb
add
xchg
sbb
cwtl
pop
je
imul
mov
test
sbb
inc
in
fnsave
sbb
mov
test
mov
cwtl
xor
jne
idivb
pmaddwd
popw
testl
jnp
fscale
inc
sub
and
sub
popa
sbb
lahf
pop
cmp
and
jno
inc
sbb
add
adc
lahf
scas
inc
icebp
and
hlt
out
adc
pop
sbb
cmpsb
add
or
call
loop
mov
imul
xor
sbb
std
inc
es
jbe
or
pop
mov
and
int
mov
jns
mov
das
add
test
mov
movsb
shl
mov
mov
jmp
push
fdivs
xchg
cmp
int3
or
out
push
loope
push
mov
sub
push
mov
shll
dec
std
js
sarb
lods
xor
and
inc
xchg
je
das
cmp
pusha
xor
mov
scas
xchg
mov
dec
dec
sbb
and
xlat
test
push
xchg
sbb
jg
icebp
jb
out
mov
paddw
aas
rcrl
mov
js
ret
stos
sbb
shlb
int
mov
mov
addb
fildl
or
inc
sub
cli
cltd
dec
pop
adc
jno
adc
and
cwtl
fnstsw
idiv
xchg
ds
adc
into
mov
sbb
pop
daa
test
or
mov
cwtl
addb
pop
add
push
sub
dec
xor
mov
jae
stc
les
jle
xor
dec
jge
repz
mov
mov
stc
pop
jecxz
inc
aam
dec
xor
mov
sub
scas
xor
std
xor
push
dec
leave
xchg
in
repz
mov
push
dec
xchg
add
mov
adc
jns
int3
inc
rcrl
sub
aas
xlat
aad
nop
mov
stos
std
leave
mov
sbb
ret
jns
pushl
xor
dec
inc
das
xchg
or
dec
sbb
fwait
enter
into
hlt
lock
mov
dec
push
jae
cltd
cli
pusha
lds
mov
mov
inc
pop
subb
nop
jle
add
std
jno
sti
cs
stc
iret
orl
mov
sbbl
fcmovnbe
ss
cld
ret
push
dec
mov
fsts
and
push
add
push
cs
rcrl
das
leave
sbb
stc
cmp
xchg
in
cwtl
cmpsb
mov
jmp
lds
mov
push
daa
mov
sbb
icebp
ret
adc
xchg
jmp
fsubl
inc
in
xor
ss
jp
dec
lret
push
jno
hlt
je
lods
popl
sarl
hlt
lods
sahf
out
adc
ljmp
push
mov
insl
sbb
xchg
jl
add
cmpsb
push
dec
add
inc
adc
inc
in
dec
int3
mov
loopne
addr16
lahf
xor
ja
pop
rcrl
cmp
jno
mov
ds
fwait
jecxz
sbb
pop
or
cmp
fsubl
or
ja
js
pusha
and
ret
jge
mov
imul
mov
jns
aad
test
repz
adc
aam
lea
ret
fwait
outsb
mov
imul
testb
fmul
repz
xor
push
and
jns
jle
imul
ja
pop
push
and
and
cmovs
xor
dec
cmp
es
push
and
xor
push
mov
jno
shlb
fcmovnbe
shll
not
insl
or
push
push
mov
inc
xor
aad
mov
jne
out
adc
sub
call
jle
cmc
or
adc
sbb
nop
ss
and
adc
les
mov
imul
sub
int3
mov
jnp
xchg
mov
jmp
hlt
xchg
push
loope
jmp
shl
pop
call
dec
enter
cmpb
mov
push
xchg
lods
in
or
xor
out
stos
xor
cmp
mov
imul
pusha
push
test
das
cli
inc
jl
and
xchg
jb
cmp
sbb
mov
sti
sub
int
cmp
xorb
jecxz
loop
fldenv
insb
jge
stc
push
in
in
add
pop
into
inc
daa
sub
lods
xchg
test
lahf
inc
add
rcr
negb
add
jo
out
cmp
popa
pusha
xorb
mov
cmpsb
mov
sub
mov
pushf
and
call
loopne
or
insl
xorb
xchg
aas
test
sarb
test
addr16
push
repz
inc
aad
add
and
clc
push
pop
jno
fiadds
and
adc
mov
pop
mov
js
stos
stos
fisubrs
cli
icebp
and
aas
jns
cltd
cmp
pop
enter
mov
sbb
sti
mov
mov
ret
sbb
cmc
sub
lods
out
fs
sahf
test
pop
and
inc
xor
int3
mov
dec
lret
push
mov
test
dec
inc
es
sbb
jne
jmp
mov
in
jno
popa
cmpsb
in
xor
add
arpl
shl
pop
dec
daa
xor
test
jecxz
insl
lret
js
imul
fnstsw
sahf
es
or
or
mov
jp
mov
push
cmc
cmp
in
pop
and
push
lcall
movsl
mov
bound
mov
mov
push
stc
jp
movsb
shll
push
cmp
xchg
dec
cmc
pop
fwait
mov
jecxz
cmpsb
jp
popf
cld
subl
fstpl
fnstsw
mov
xchg
out
adc
out
loope
mov
jecxz
rcrb
adc
mov
adc
fmul
js
ja
js
cltd
sahf
jg
xchg
mov
push
pop
lds
adc
scas
inc
mov
pop
dec
lret
dec
out
popa
pushf
xor
leave
or
mov
or
add
rcl
adc
mov
jp
repz
push
ficomps
into
cmp
lea
je
pusha
jbe
push
xchg
pop
xchg
sbb
jp
cmp
mov
sub
mov
xchg
inc
xor
add
inc
dec
test
fldenv
add
mov
sbb
mov
or
test
mov
outsl
into
or
xor
sti
fildll
lret
scas
test
inc
xor
loop
hlt
jo
std
mov
mov
and
add
cmpb
mov
and
sub
inc
sahf
ja
mov
jbe
sub
leave
scas
or
lods
arpl
and
push
jo
cmp
push
repnz
mov
popf
add
push
mov
xchg
or
xor
sahf
sub
mov
filds
js
xchg
xchg
mov
shl
jo
les
mov
mov
pop
orb
or
xor
test
cmp
or
test
aad
fidivrs
test
mov
repz
lahf
nop
inc
enter
ja
fdivs
in
std
cltd
dec
enter
pop
arpl
mov
popf
shlb
fsts
mov
xchg
call
fiaddl
mov
sub
mov
jp
js
in
sbb
xor
out
clc
imul
test
insb
ds
inc
mov
nop
ret
add
cmpsl
roll
adcl
pop
sub
adc
mov
xchg
leave
test
push
or
push
je
jecxz
pop
xchg
or
lea
adc
int3
mov
sbb
int3
mov
or
fildll
jl
push
dec
fisubs
ficompl
jle
and
sbb
lcall
cmp
adc
pop
push
jbe
fucom
pop
mov
js,pn
mov
test
daa
movsb
popa
push
adc
clc
xchg
inc
mov
inc
std
lahf
mov
loope
mov
test
and
movsl
mov
in
or
dec
and
and
out
popf
xlat
ss
inc
jl
sub
mov
push
lret
xlat
jl
push
add
cmpsb
sub
mov
pop
mov
fistl
sbb
mov
inc
jns
xchg
pop
sbb
dec
lea
add
ljmp
or
movsl
dec
lods
stc
pop
pop
mov
xchg
mov
xchg
sub
nop
add
fdivs
daa
fdivrl
vmread
mov
es
ljmp
lret
sub
pop
fxch
fdivr
ror
fmul
js
push
orl
mov
mov
pop
lret
adc
imul
push
add
push
dec
cmpsb
mov
pushf
mov
mov
gs
stc
add
jle
push
or
test
add
ds
and
sub
fs
loop
lgs
js
cmp
pop
imul
pop
mov
adc
or
add
pop
push
sub
rolb
push
leave
addb
or
sbb
loopne
adc
std
xor
sub
stos
test
xor
jge
xchg
add
test
orb
add
ss
xchg
mov
jmp
pop
pop
mov
cmp
gs
aas
mov
inc
lret
roll
adc
cmpl
pop
fistl
dec
fcoml
and
mov
mov
inc
mov
loopne
in
in
jmp
mov
add
ja
adc
jb
and
cwtl
mov
les
or
push
icebp
ret
dec
add
fisttpll
cmp
stc
inc
xchg
dec
cwtl
inc
nop
arpl
and
negb
xchg
xor
push
popf
jle
add
sub
xor
and
pop
fildll
add
sar
pop
ret
lahf
gs
sub
mov
pop
fcompl
imul
xchg
push
inc
inc
jecxz
repz
ja
inc
out
add
push
pop
pop
cmpsb
cmp
insb
push
xor
xchg
cmc
mov
inc
adc
xor
push
sub
push
imul
mov
aam
rcr
fnstsw
pushf
lret
popa
divb
stos
jg
aaa
push
stc
and
bound
imul
gs
mov
mov
add
cmp
hlt
js
pop
push
out
xor
sub
je
das
and
xchg
addr16
adcb
dec
icebp
inc
cs
cmpb
cwtl
das
inc
outsl
cmp
psubusb
stc
stos
pushl
loope
sti
dec
or
push
mov
mov
pop
xor
adc
insb
dec
sbbl
test
jg
ror
scas
jecxz
pop
test
sbb
out
lcall
cld
cmp
add
popf
icebp
les
push
std
loop
pop
add
scas
loop
mov
xchg
or
sbb
sbbb
ljmp
jecxz
or
and
mov
push
repnz
adc
xchg
lahf
lret
jl
cvtpi2ps
jmp
pusha
mov
push
inc
and
jecxz
test
pop
cmpsl
jo
lahf
xchg
pop
outsb
jno
jge
divb
gs
sbb
loope
mov
cmp
cmc
std
scas
push
fstpt
inc
aad
es
addr16
push
stos
jae
fs
mov
inc
lret
adc
mov
ds
adc
rorl
shll
jb
pop
insl
incb
sub
bnd
ds
shr
adc
mov
insb
mov
push
adc
sbb
addr16
ss
int
dec
xchg
mov
inc
mov
push
dec
scas
pop
pop
add
ljmp
push
in
inc
or
adc
loop
or
lods
cmp
hlt
xchg
pop
and
xor
mov
push
dec
cmp
cmp
outsb
fsin
clc
mov
mov
push
pop
add
fdivp
jle
nop
dec
shl
or
and
jmp
int3
and
jmp
push
repnz
push
push
push
dec
dec
dec
call
sub
sbbl
adcb
dec
inc
ret
call
sbb
aad
int3
mov
xchg
fsubs
push
mov
test
ss
loopne
sbb
fcomip
call
dec
inc
sbb
dec
dec
mov
jo
into
std
repnz
xchg
outsl
and
or
inc
cltd
lea
mov
jno
lods
sub
sub
mov
sbbb
xor
adcb
addl
sub
cmp
add
shll
xchg
fisubrl
in
pop
dec
xchg
xor
ss
int
jecxz
sarl
in
dec
jb
test
int3
test
jae
lret
mov
jmp
jae
ss
fwait
jae
sub
push
jo
clc
dec
aaa
aad
or
scas
mov
adc
inc
cmc
out
sbb
notl
mov
mov
jmp
pop
jo
cmp
mov
cmc
pushf
test
cmp
adc
jbe
sbb
jl
clc
hlt
repnz
vmovntdq
xor
fiaddl
adc
jbe
inc
scas
xor
sbb
sarb
call
sub
fs
mov
fwait
mov
fnsave
lahf
lods
pop
add
mov
test
aad
mov
stc
xor
push
mov
sbb
xchg
fisttpl
int
cld
cmc
roll
sbb
scas
lret
loope
nop
mov
and
mov
mov
mov
int3
xor
leave
dec
xlat
push
ds
jns
mov
xchg
dec
add
jns
test
push
inc
out
mov
add
dec
cmp
jp
pop
mov
cmp
bound
cs
sub
adcl
cli
lock
stos
iret
cmp
into
loope
cmpsl
sbb
and
es
pop
mov
lea
ja
dec
adc
les
jle
ja
shll
iret
sub
pop
movsb
stos
xchg
or
jle
movsl
jnp
call
cli
pushf
add
scas
push
pop
movsb
mov
xchg
adc
into
jo
jmp
je
test
xor
out
in
adc
shlb
pop
in
jne
insl
stc
mov
fcomi
mov
rcll
pop
jle
subl
inc
loop
and
movsl
push
lds
insl
je
lea
ror
ljmp
jg
mov
enter
inc
sub
icebp
xchg
lock
dec
rorl
cmc
das
rcr
inc
iret
or
jl
and
dec
ficompl
add
cwtl
ret
sub
nop
jnp
push
sub
adc
mov
adc
aaa
cmc
push
jbe
sarb
fwait
adc
imul
ja
push
shlb
or
inc
fldenv
mov
out
cld
add
sahf
add
int
fnstcw
xor
repz
icebp
push
cmpsb
in
sub
push
in
cmp
fists
sbb
and
mov
cmp
std
popf
inc
out
push
push
cmpsl
add
cs
shl
cmpb
dec
cmp
sub
imul
add
xor
add
mov
outsl
jmp
cmpsb
xor
lods
outsl
xchg
daa
aas
in
xor
dec
jnp
sub
xor
or
jns
fsubp
jmp
jb
jno
pop
add
ret
jle
fs
hlt
repz
aas
scas
cli
call
inc
inc
repz
popf
xchg
and
pop
fiadds
inc
jno
mov
mov
enter
cmpsb
inc
cmp
movsb
les
fmull
scas
in
fstpt
lahf
push
hlt
outsb
mov
xor
xchg
in
nop
lahf
jne
jo
cmp
jb
ror
cltd
ret
jl
jnp
lds
int
dec
cld
cmp
aaa
cmp
adc
ficomps
jmp
repz
loope
pop
sub
inc
pop
or
je
shrb
movsb
mov
and
aam
lcall
jecxz
jmp
into
xchg
std
sbb
sub
out
sub
jb
fdivs
int
sub
adc
cmc
fists
push
pop
into
inc
and
add
movsl
aaa
dec
shl
adc
xor
jl
and
testb
push
jg
pop
fisubs
pop
fdivrp
iret
call
or
test
mov
push
mov
xlat
or
lods
push
outsl
aas
jb
jle
or
sub
ss
inc
cltd
pop
aad
jmp
jmp
aad
shl
mov
adc
add
sti
or
mov
repz
sub
cltd
andl
popf
push
fwait
mov
sub
dec
out
xor
push
cs
pushf
imul
test
fdivrl
hlt
adc
cmpsb
fistpl
xchg
divl
mov
and
and
push
imul
movsb
int3
insl
inc
scas
jns
aaa
call
lahf
pop
in
mov
data16
arpl
add
mov
shll
sub
movsl
push
test
sub
push
cwtl
jg
push
insb
mov
fs
lcall
clc
push
sahf
sub
faddl
popf
aam
mov
sub
lret
cmpsl
ja
xorb
push
rorl
lea
mov
jae
jge
and
int
sbb
add
cmp
mulb
mov
out
push
push
push
mov
faddl
cli
cmp
popa
or
loopne
lock
sahf
test
lods
js
cltd
mov
jno
or
test
insl
sub
xor
cmpl
cltd
loop
mov
out
insb
xchg
cmc
mov
pop
arpl
cmpsl
rclb
jl
and
pusha
xor
test
rolb
pop
imul
push
pop
cld
inc
cwtl
jp
hlt
loope
movsb
out
jl
popa
xchg
or
imul
pop
xchg
in
mov
movsl
mov
int3
mov
mov
xchg
mov
fnstsw
lcall
inc
push
in
dec
pop
push
fs
outsl
jno
jb
pop
in
jbe
inc
cmpsl
stc
cmp
test
dec
in
push
shr
cltd
xor
shll
cmpsl
xchg
sub
push
arpl
inc
orb
inc
rcll
popf
loop
mov
lds
rcrb
and
sbb
sub
stos
pushf
mov
lea
mov
icebp
inc
xor
and
dec
popa
test
inc
xlat
jno
outsb
lods
and
lcall
rcll
test
mov
hlt
imul
stos
popf
scas
rorb
call
es
mov
sub
xchg
push
mov
mov
jbe
enter
les
iret
imul
int3
imul
shlb
push
cmpsl
sbb
jge
rclb
nop
mov
xor
dec
push
fmull
data16
lods
jo
or
jmp
lcall
in
dec
lds
lock
or
xchg
ret
clc
rcll
in
dec
cmp
ljmp
xor
xchg
sub
inc
pop
xlat
sbb
movsb
mov
push
sbb
and
and
aad
xchg
inc
and
arpl
xchg
mov
and
lods
dec
inc
or
mov
pop
xchg
inc
push
arpl
mov
call
out
lret
add
mov
sbb
clc
mov
ljmp
push
movsl
ficoms
xchg
ss
xchg
sub
lock
dec
test
test
mov
and
inc
stos
mov
xorl
stc
mov
jns
xor
xchg
dec
push
in
or
or
sub
add
dec
and
cmpsl
inc
xchg
rclb
xchg
jmp
lret
mov
xor
push
test
xchg
and
sbb
sbb
enter
gs
jnp
mov
out
pop
cmpsl
repnz
insb
lcall
inc
lock
rcpps
xor
push
push
rclb
call
cs
push
arpl
lcall
pop
out
enter
mov
stos
push
dec
lahf
mov
cmpsb
imul
jp
xlat
or
popa
cmp
fs
cld
jno
pop
mov
stos
sbb
or
mov
sub
push
cmp
stc
andb
xchg
fmul
mov
sbb
enter
jno
sbb
mov
fnstcw
out
stos
add
lret
fsub
loop
add
mov
sbb
jnp
cmp
shll
scas
lcall
push
clc
enter
dec
mov
movsl
lock
aas
insl
arpl
inc
out
sbb
xorl
aas
mov
pop
dec
inc
mov
adc
rcrb
add
jmp
roll
xlat
xor
mov
fsubs
lea
ja
add
aaa
jae
pushf
rorb
dec
jmp
add
arpl
sbb
lcall
pop
sub
dec
push
outsl
xchg
adc
pop
les
push
aad
push
cmp
push
insl
mov
lahf
ja
mov
jbe
shrl
sub
pop
int
adc
jo
xchg
test
mov
rcl
push
pop
ss
push
cmp
xor
add
xor
xor
pop
xchg
jl
push
insl
subb
sbb
jp
in
cmp
mov
push
sub
jecxz
cmp
je
push
add
ss
fwait
movsb
test
jmp
out
sub
das
push
repz
fs
cli
iret
test
out
cmp
push
mov
mov
stc
cmpl
int
mov
div
ljmp
inc
fucomi
orl
mov
popa
mov
in
push
or
cmc
pushf
and
ret
cli
jg
cmove
adc
pop
sub
bswap
pop
icebp
lods
data16
push
gs
wbinvd
getsec
pop
sbb
pop
jns
xor
sub
scas
jbe
cmpsl
loop
popf
int3
cmpb
fwait
inc
pop
inc
aam
fidivrs
repz
sbb
cmp
cmp
test
shl
cmc
inc
pop
scas
aam
adc
pop
pop
pop
test
push
sbb
in
cs
xor
or
jp
ds
push
cld
inc
leave
mov
ror
add
imul
mov
imul
xor
out
sub
lcall
push
xchg
jp
subb
mov
pop
pop
jo
push
sahf
out
pop
rorb
aas
inc
fdivl
mov
mov
inc
fwait
ret
in
pop
mov
ret
loop
addr16
aas
adcl
shr
xor
pusha
dec
and
mov
hlt
cld
scas
xor
lcall
in
inc
insl
jmp
sahf
adc
sbb
mov
insb
cmpsb
xor
in
ljmp
adc
xor
push
iret
jg
fists
clc
stc
cwtl
stos
aas
xlat
xchg
test
xchg
or
jle
int3
into
in
ljmp
mov
fdivl
rcrb
addr16
imul
cmp
xchg
push
and
pop
or
adc
repz
aas
and
xchg
sub
mov
mov
fsubr
mov
dec
in
dec
cmp
popf
sahf
inc
and
push
push
dec
adc
push
sahf
loope
movsl
ljmp
dec
dec
imul
and
arpl
cmpb
cltd
or
pop
rclb
xchg
std
pop
add
cli
addr16
push
cmp
pop
movsl
and
hlt
inc
dec
sub
ja
push
sbb
mov
rorb
mov
dec
mov
jge
push
enter
or
test
std
hlt
mov
jne
test
xor
mov
gs
in
xchg
insl
mov
ja
push
int
imul
dec
sarb
pop
push
lret
test
bound
cs
mov
into
addr16
pop
ss
popf
jmp
je
lahf
and
xchg
popa
out
or
imul
outsl
ds
lds
sub
dec
icebp
std
xor
fisubrl
push
cmp
ja
arpl
fsub
push
je
popf
cmp
cmp
fstpt
cmc
rcrl
scas
sahf
dec
fsubrl
push
mov
in
push
fs
xor
sbb
loop
sub
dec
scas
shr
insb
sbb
mov
outsb
cwtl
imul
aaa
or
xchg
hlt
cmc
mov
pop
jecxz
sub
jbe
stc
repnz
cmc
sarl
imull
or
fs
add
lahf
xchg
adc
ret
jnp
hlt
pop
daa
stos
test
add
bound
jle
aas
ficomps
dec
lret
lret
push
push
cs
stc
lcall
in
adc
xchg
inc
adc
fdivr
outsb
ja
sbb
add
xchg
push
adc
mov
mov
pop
out
mov
mov
mov
aaa
add
bound
sbb
push
pushf
movsl
hlt
in
addr16
mov
jns
sub
mov
pop
jno
inc
test
sbb
add
test
rcrl
add
lock
mov
mov
cmp
inc
call
cmp
adc
fsts
cli
xchg
mov
hlt
dec
sub
mov
xchg
pop
and
jecxz
and
das
pop
mov
jne
jg
pop
rcrl
jb,pn
add
rorb
and
jmp
in
and
pop
cmc
or
cmp
test
ret
push
outsb
pushf
xchg
sbb
xor
cmpb
fwait
inc
test
ds
pop
lcall
imul
jns
sbb
test
mov
xor
clc
fwait
mov
loopne
dec
push
in
xchg
and
push
jmp
int3
sbb
loope
fwait
mov
lret
cmpsl
and
push
or
negl
cltd
std
out
adc
mov
mov
inc
mov
iret
cmp
lods
scas
push
sbb
dec
dec
jns
cli
jp
mov
sbb
cmp
js
scas
sub
xchg
repz
jbe
pop
in
stos
jno
xchg
lcall
ret
pop
aas
outsl
push
or
add
xchg
lods
pop
dec
add
test
lods
and
ljmp
test
adc
shll
cmp
mov
shrb
push
or
inc
mov
inc
pop
cmp
or
test
fisttpll
cmpsb
adc
pop
leave
cmp
ret
sbb
popf
xchg
adc
adc
hlt
push
push
and
mov
xor
loop
js
and
shrl
add
hlt
push
stc
or
repnz
outsb
sti
inc
clc
sbb
adc
int
mov
inc
jg
xchg
fwait
clc
pop
ret
jb
enter
stos
cmpl
mov
push
cmp
int
pushf
jo
movsb
es
pop
and
sahf
scas
es
jl
xchg
jmp
outsl
int3
push
jl
imul
in
push
cmc
jmp
ja
cwtl
int3
adc
imul
sub
sbbl
jmp
cmpsb
hlt
inc
rcll
or
sub
loop
insb
pop
xchg
and
ljmp
test
mov
movsb
push
imul
dec
or
cmc
lret
cmc
xchg
aam
inc
rolb
or
call
cmp
and
sub
fsubr
push
mov
push
pop
int
push
add
pop
sbb
sbb
adc
xor
pop
cs
cmp
mov
mov
fwait
mov
in
sbb
pop
fistpl
hlt
cmp
sbb
jnp
inc
addl
cmp
mov
out
and
inc
mov
cmp
insl
mov
call
test
or
push
stos
fsub
push
outsl
mov
aad
movsb
bound
and
push
aad
dec
push
xchg
sub
mov
xor
dec
and
cltd
or
ret
or
negb
mov
mov
dec
hlt
rorb
mov
xor
repnz
sub
leave
cmpsb
cmp
scas
cmp
aas
jl
add
jle
dec
and
cmp
or
push
fidivrs
mov
dec
mov
and
adc
push
or
loopne
rclb
add
mov
xchg
lea
dec
mov
pop
shl
cmp
add
fnstsw
fsubrl
xor
int
cmpsl
and
fdivl
andl
adc
movsb
mov
dec
mov
popf
dec
fcoml
addb
mov
enter
pop
jno
mov
mov
pop
imul
mov
or
push
inc
test
dec
repnz
dec
jle
xor
das
test
ret
mov
ja
mov
push
sbb
notl
sbb
fcoms
std
repnz
cld
dec
sub
aam
dec
mov
cmc
mov
or
les
push
jne
stos
push
dec
divb
cmp
jge
pcmpgtb
jo
or
inc
push
popa
icebp
mov
scas
and
imul
mov
out
ljmp
hlt
shrb
sub
sbbl
pop
pop
shll
loop
shll
mov
into
fwait
adc
js
sahf
pusha
mov
xor
cmp
repz
scas
dec
dec
dec
sbb
loope
out
rcl
test
jb
test
call
or
cmpsb
mov
jo
inc
jnp
xor
arpl
sbbb
sbb
sahf
mov
adc
adc
xor
popf
lea
mov
inc
mov
clc
sti
xchg
movsl
or
mov
daa
bound
or
bound
cltd
inc
or
jns
sbb
and
shl
loopne
xor
adc
jg
in
jne
add
cli
sub
jp
je
sub
cmpsb
and
add
xor
pop
sahf
jmp
pop
push
adc
imul
jno
aas
ljmp
test
in
cmp
ret
fwait
push
xchg
out
lea
xchg
ljmp
out
mov
imul
popa
xchg
in
sub
xchg
push
repz
and
pusha
or
mov
outsl
cmp
cs
mov
inc
ds
push
jne
inc
test
lahf
sub
cmc
in
loopne
sahf
push
ja
sbb
lahf
loop
push
fcmovnbe
leave
sub
inc
mov
decl
int
pop
cld
fdivl
sbb
rcrl
mov
and
jne
add
into
popf
lahf
popa
dec
ret
loopne
push
scas
sub
mov
mov
lea
inc
jge
in
loop
pop
cmpb
mov
dec
mov
jmp
loop
mov
xchg
sahf
ja
lahf
scas
aas
dec
pusha
dec
dec
or
mov
je
cltd
push
mov
adc
mov
inc
or
pop
enter
fs
cmp
lahf
out
movsl
sub
push
int
pusha
sti
mov
call
movsl
dec
fstps
pop
push
lea
imul
cmp
jbe
adc
jbe
push
test
insb
aaa
xchg
sub
test
pop
xor
int3
pop
dec
xor
daa
daa
adc
xor
test
cmp
or
mov
jmp
pop
add
loopne
cld
in
cli
ja
cwtl
add
out
jl
and
aad
fsubp
pop
cmp
mov
out
jnp
push
lock
movsb
or
bound
ljmp
cmp
shrl
sub
shll
and
push
sub
sub
nop
sbb
inc
loope
stc
pop
push
pusha
sbb
scas
pop
xchg
imul
mov
jae
rep
adc
loope
addb
dec
adc
std
movsb
imul
mov
stos
in
mov
subb
cmp
aaa
cmp
sub
dec
outsb
jp
test
pop
subl
adc
dec
xchg
pusha
jp
pop
adcl
out
clc
xchg
or
jnp
xor
or
pop
mov
push
sub
aas
iret
pop
sub
inc
pop
add
or
arpl
shll
mov
jp
mov
dec
cmp
lods
icebp
mov
in
fwait
xchg
and
pop
fistl
add
xchg
paddd
add
or
daa
repnz
xchg
inc
mov
mov
cmp
jl
mov
push
sub
mov
pop
data16
push
xchg
jecxz
xor
inc
movsb
cmpsl
push
es
and
pop
mov
les
inc
ret
fldl
sarb
mov
es
xor
xchg
dec
cld
mov
in
lock
out
add
fadd
fwait
sbb
xchg
add
scas
repnz
lds
cmc
xchg
jo
or
or
lret
mov
cli
and
xchg
or
fsub
and
cmc
xor
sub
dec
stos
sti
call
mov
das
jns
dec
push
or
push
push
mov
test
outsb
cwtl
cmp
mov
xor
inc
push
shrb
xor
mov
ljmp
pop
sub
add
imul
shll
call
inc
push
add
xchg
inc
mov
jp
ljmp
mov
pop
fwait
lods
aaa
xchg
out
mov
clc
cwtl
jo
mov
dec
loope
jo
jnp
ja
mov
jae
nop
add
inc
cmp
mov
push
add
imulb
xchg
cltd
jecxz
inc
xchg
inc
xchg
dec
test
xor
sbb
out
lcall
add
aam
jle
xchg
cli
or
cvtps2pi
scas
jb
ds
rclb
lahf
testb
sbbb
popf
sbb
sti
jbe
rcrb
jae
sub
inc
pop
movsb
and
mov
and
and
sub
add
jb
icebp
imul
mov
aad
add
adc
jae
pushf
jle
push
pop
cld
cli
ss
fwait
pop
imul
pop
clc
das
add
in
lods
sbb
test
dec
cmp
jns
xchg
jge
insl
pop
jmp
mov
sub
sub
adc
pop
jmp
jg
add
test
cmp
adc
mov
push
adc
xor
add
out
popa
xchg
ljmp
or
dec
mov
int3
jae
and
add
sub
mov
cmp
or
or
fstl
andw
pop
fsubrl
fildl
jnp
out
pop
inc
sahf
popa
loopne
inc
xchg
dec
mov
or
daa
xor
je
je
loop
sbb
cwtl
imul
test
adc
xchg
popf
out
arpl
dec
popa
or
cli
shlb
int3
and
adcb
mov
fs
cmp
inc
jae
lock
testb
mov
repz
test
mov
cmpsb
push
movsb
in
xor
out
mulb
xchg
fimull
idivb
xor
jge
fildl
fs
inc
sub
or
nop
enter
push
les
dec
jae
and
icebp
addr16
xchg
pop
mov
out
roll
mov
cmp
jp
sar
les
into
xchg
sahf
mov
push
lock
iret
ja
insb
cmp
rclb
cmpsb
stos
enter
inc
ds
popa
pushf
and
sahf
lret
andl
scas
sub
and
or
mov
mov
loop
push
les
push
in
jo
inc
and
push
xchg
sbb
orb
jle
push
sarb
push
xchg
mov
jns
sub
outsl
mov
mov
push
stc
loop
mov
mov
adc
sub
mov
or
mov
inc
bnd
stos
mov
xchg
data16
and
js
lock
shlb
lds
lea
mov
loop
or
lods
pandn
adc
and
fnstenv
xor
adc
shr
xchg
bound
insl
and
adc
pop
mov
enter
add
push
aaa
xor
ljmp
ss
mov
pop
lods
xchg
int3
sub
or
test
in
rep
mov
cmp
jp
mov
std
fstps
inc
lock
inc
mov
pop
mov
mov
imul
push
cltd
aas
push
push
push
int3
lods
ret
mov
ja
repz
popf
push
mov
outsl
dec
or
in
xchg
insb
lds
cmp
dec
scas
lahf
or
lcall
ljmp
clc
cmp
jae
mov
pop
push
mov
orl
idivl
jb
lods
mov
adc
xchg
loope
jg
mov
and
lock
js
mov
fwait
gs
jb
roll
mov
cmp
fldl
leave
xchg
sti
sbb
add
mov
xor
mov
les
pop
mov
mov
mov
ret
incl
popf
xchg
out
sbb
fwait
adc
and
or
sbb
jmp
lcall
mov
push
and
push
stos
adc
inc
inc
insb
lea
mov
or
xchg
sbbb
push
jb
popa
xor
cmp
out
sub
subb
jp
pop
mov
mov
xorl
fwait
adc
sarl
push
ret
and
addr16
iret
or
mov
dec
push
rol
aaa
std
mov
fcmove
lret
add
test
adc
outsb
xor
pop
pop
mov
ds
adc
sbb
mov
or
sahf
pop
inc
aaa
icebp
jg
jle
xchg
out
cvtpi2ps
push
lock
xor
mov
jecxz
adc
shl
je
xchg
and
push
push
pop
lahf
pusha
dec
sub
pop
lret
jae
scas
cmp
lcall
mov
mov
cmp
add
push
fmull
lock
mov
inc
pop
mov
adc
loope
sub
sub
xchg
sahf
js
fldenv
ds
xchg
stos
call
dec
mov
add
fmuls
push
dec
aas
int
add
xor
jb
inc
or
nop
mov
scas
lret
mov
call
test
mov
adc
gs
adc
cld
add
pushf
mov
daa
push
sarl
js
scas
loopne
arpl
scas
in
cwtl
cmpsl
jecxz
jb
jle
adc
dec
les
pushf
pushf
push
push
dec
and
out
fsts
inc
outsb
sbb
inc
cmp
xchg
jo
loopne
mov
jmp
lods
mov
ret
and
loopne
pusha
rorl
mov
xor
fwait
jb
xchg
fldcw
push
gs
inc
push
mov
push
mov
pop
pop
je
dec
push
push
movlps
pusha
xchg
sub
fwait
sub
fstpl
mov
jp
ret
daa
pop
xchg
ds
addr16
clc
bswap
sub
rclb
sbb
mov
lods
sbb
jle
test
xlat
lcall
xchg
pop
or
mov
or
mov
mov
aam
and
sbbb
adc
daa
test
cmc
insb
mov
cltd
xchg
movsb
cwtl
gs
insl
ret
cmp
int3
pop
pop
sbb
mov
test
mov
or
cmp
leave
mov
outsl
lock
pop
mov
inc
push
and
jnp
add
xchg
inc
imul
cmc
fs
jmp
repz
mov
fbstp
cs
nop
rorb
push
push
cmp
repnz
mov
loopne
cltd
dec
push
pop
aas
xchg
mov
pop
adc
push
or
js
je
out
es
in
test
push
insl
mov
jb
pop
adc
push
aaa
xchg
stos
mov
or
leave
jae
jbe
into
fimuls
xchg
adc
push
in
das
and
out
pop
lcall
test
mov
pop
mov
outsb
lahf
inc
pop
mov
xor
inc
push
inc
into
jle
sti
fucom
sub
icebp
hlt
jae
push
cmpsb
and
insl
jp
mov
or
cmpsl
scas
sub
inc
jnp
jae
jmp
aas
popf
or
inc
mov
mov
add
mov
dec
cs
pop
repz
xorb
in
cwtl
inc
mov
jbe
add
xchg
sahf
or
mov
les
xchg
adc
pop
adc
les
pop
ret
xor
loop
dec
leave
fsub
sub
jo
and
pop
inc
rorl
cmpsb
ret
icebp
cmp
out
imul
and
movsb
outsb
and
jg
adc
movsl
mov
pop
mov
jne
xor
jl
add
add
and
lahf
nop
jo
sahf
ljmp
mov
sub
les
test
into
jecxz
loope
lret
jge
aaa
or
inc
leave
mov
pop
pop
push
push
dec
ja
mov
xor
aaa
cs
xchg
lmsw
xchg
outsl
leave
int3
xchg
ret
adc
pop
push
adc
push
and
fldl
dec
push
rol
outsl
inc
mov
sub
or
xchg
lahf
bound
aad
push
cwtl
xchg
leave
lods
in
lds
pop
cmp
mov
call
sbbb
js
mov
pop
xchg
mov
shlb
fidivs
sar
scas
xlat
loope
outsl
pusha
xchg
loope
in
aas
imul
and
push
inc
pop
mov
iret
call
cmc
test
mov
enter
mov
and
pop
add
inc
shrb
mov
daa
add
sbb
dec
pop
in
mov
pop
fs
data16
and
das
enter
sti
pop
das
inc
dec
jge
pop
and
inc
add
and
adc
icebp
std
into
loop
bnd
jmp
arpl
sub
mov
clc
mov
pop
mov
into
push
jmp
lods
shrl
movsl
jmp
push
fistl
xchg
subb
dec
clc
cmpl
stos
inc
cmp
push
ret
iret
enter
lds
jecxz
je
sbb
int
lahf
cmpsl
or
add
adc
add
movsl
std
test
push
cmp
pushf
idivl
sbb
stc
cwtl
sbb
mov
xchg
xor
sub
and
mov
in
fisttpl
xchg
dec
and
sub
pop
iret
mov
dec
push
mov
pop
in
lods
pop
mov
outsl
popa
in
adc
xor
addr16
pop
cmp
inc
enter
add
sbb
inc
add
movsl
pop
outsb
in
rol
dec
sub
hlt
or
sbb
test
sbb
push
sub
psllw
jl
push
adc
adc
scas
inc
cmpsl
add
xchg
xlat
xchg
adc
mov
pop
push
loope
std
mov
or
jg
test
cmpb
pop
mov
stos
dec
jbe
jne
sbb
stos
cs
xor
mov
jbe
jo
adc
jmp
movsl
lock
adc
pop
adc
sub
xchg
js
cmp
mov
add
cmpsl
xchg
and
sub
sbb
pop
popa
icebp
sar
mov
add
aam
in
std
lods
mov
push
pushf
outsb
das
imul
push
lcall
incl
idivl
cld
mov
jbe
mov
push
dec
call
fnstcw
data16
dec
pop
in
dec
ljmp
push
xchg
mov
adc
sti
mov
into
and
push
cmp
clc
sbb
das
cmp
pop
ret
js
push
inc
mov
mov
int3
lret
jmp
inc
add
mov
ja
loopne
pop
aaa
fistps
inc
push
and
fistl
and
mov
pop
fnsave
jmp
and
stos
out
aas
sbb
jmp
loop
adc
xchg
xchg
pop
enter
hlt
xor
sbb
push
insl
stc
or
jae
sar
xor
sbb
ljmp
adc
and
test
pop
stos
mov
inc
in
cli
scas
out
cmpsb
xor
adc
pop
xor
push
jp,pn
adc
lahf
stos
and
repnz
imul
in
aad
sbb
ds
icebp
push
mov
add
sub
mov
pop
int
cmp
mov
fs
aas
push
push
mov
popa
push
fsub
shll
rorl
cs
out
ret
xor
inc
adc
fnstsw
sahf
sub
mov
jns
dec
mov
mov
sub
and
sub
or
cmp
fs
pop
push
movsl
xor
stos
rcrb
lcall
push
fsubs
scas
lret
mov
lret
mov
sahf
addl
cmp
and
sbb
data16
cmp
sbb
jae
add
adc
sub
sbb
out
into
sub
mov
and
pop
cmpl
rorb
jmp
xor
jae
inc
sub
dec
inc
push
mov
xor
and
jo
test
ljmp
adcl
adc
jbe
push
daa
aas
popf
mov
popa
mov
inc
popa
mov
sub
mov
sub
xchg
iret
dec
bound
pop
mov
or
pop
mov
jl
lret
je
ret
pop
jbe
or
xor
adc
fidivrl
xchg
mov
stos
stos
enter
sahf
mov
jno
or
push
sbb
sbb
dec
or
jo
test
gs
adc
iret
sub
call
inc
mov
pop
cmc
mov
adc
insl
dec
mov
mov
pop
out
add
xor
push
mov
icebp
aaa
ficoms
mov
and
push
inc
pop
stos
pop
push
lock
or
lock
jnp
insb
push
xor
mov
dec
es
negb
popf
or
fwait
rcrb
pushl
cwtl
cmp
mov
push
sbb
cmp
fcompl
adc
jge
shrb
in
sub
lods
dec
gs
mov
mov
jo
adc
pop
adc
xor
inc
mov
mov
insb
arpl
enter
xor
in
scas
rcll
iret
add
sbb
lret
leave
xchg
jae
incl
sbb
xchg
add
adc
inc
jge
in
pushf
out
mov
or
dec
test
cli
sub
or
insb
ficoml
jbe
mov
dec
movb
rorl
sti
xchg
pop
pop
and
adc
adc
rolb
jle
inc
ss
push
lods
push
sbb
xlat
popa
jo
mov
push
int3
mov
mov
rolb
mov
ret
fldl
or
movsb
ret
lods
imul
xchg
and
sub
ja
sbb
jb
sub
sbb
push
out
jne
push
les
or
jecxz
xchg
add
cmp
xsaves
sub
lahf
or
jo
inc
popa
push
ret
adc
adc
mov
je
xlat
or
jmp
push
lahf
jg
js
lret
orb
sbb
jbe
or
adc
loopne
mov
jl
push
repz
and
mov
into
stos
in
aaa
cmc
pop
pop
scas
cmp
je
add
push
xchg
jns
inc
fldcw
mov
mov
das
outsl
mov
lds
mov
popf
dec
jg
test
clc
cwtl
jecxz
jp
sti
mov
aad
test
andb
add
inc
fistl
xor
aam
xor
mov
sub
in
mov
add
out
rcrl
jne
mov
mov
jbe
cmp
or
fidivs
and
add
test
add
sbb
push
testb
mov
push
add
aaa
dec
mov
mov
cld
or
add
mov
dec
push
push
fcoml
pop
jae
adcb
sbb
jne
push
movsl
adc
dec
adc
push
push
dec
aaa
pop
mov
in
pop
std
inc
sti
xor
pop
mov
repnz
ja
sub
cmp
mov
das
sbb
adc
push
cmp
rcr
xchg
adc
and
lods
into
les
add
push
mov
scas
int3
dec
mov
jb
adc
aas
cmp
cld
inc
inc
xor
in
test
push
out
cmp
jmp
adc
xchg
into
lods
ds
andb
mov
cmp
cmp
fisttps
pusha
sbb
aas
bound
ficoms
xor
sub
sbb
cli
pop
scas
out
popa
dec
pop
int3
xchg
notb
cmp
dec
lds
mov
inc
xchg
push
hlt
or
scas
jae
mov
imul
in
jg
stos
ja
fldcw
mov
mov
push
int3
xor
push
or
in
jge
gs
fdivl
insl
adc
add
push
add
mov
rorl
sbb
jmp
aad
or
rclb
xchg
aas
cmpb
sub
jle
mov
dec
cmp
std
aas
pop
pop
std
pop
inc
aad
lods
jo
ret
mov
jecxz
mov
mov
lods
lret
or
fisttpll
stos
sbb
xorb
shrb
shrl
rcrl
andl
or
cmp
loop
pop
outsb
repz
push
sbb
insb
mov
sub
cmp
imull
dec
mov
fadd
lea
lds
popa
pop
rcrb
js
or
dec
sub
lret
shr
in
xchg
adc
popa
inc
mov
es
push
and
outsl
pop
push
mov
ret
repnz
xchg
cs
jne
ja
leave
push
fists
jmp
mov
mov
inc
dec
mov
push
or
outsl
inc
les
xlat
cmp
dec
test
or
gs
push
outsl
mov
push
insb
push
push
jmp
fidivrl
aaa
out
test
inc
not
xor
cmpsl
sub
bound
mov
xor
mov
stc
mov
add
xor
sub
iret
pop
loop
roll
sub
ret
jns
hlt
mov
mov
jecxz
js
testl
or
adc
or
mov
xchg
dec
inc
pop
out
stos
pop
popa
xchg
inc
mov
testl
jl
inc
or
sarl
call
cmp
sub
pop
inc
inc
out
ret
mov
or
loop
dec
jp
iret
daa
mov
push
cmpsb
xchg
mov
mov
cwtl
dec
int
mov
add
pop
nop
xchg
sub
clc
sbb
cmp
test
bound
mov
std
mov
mov
sti
sbbb
pop
int3
test
xchg
out
push
add
sbb
xchg
xchg
hlt
cmpb
daa
lds
data16
out
dec
xchg
jge
mov
mov
dec
mov
mov
inc
dec
fbld
test
jnp
shr
pusha
mov
ret
mov
dec
sub
icebp
cmpsb
mov
rorb
jecxz
leave
adc
jmp
out
stos
pushl
cld
push
pop
insl
popf
add
aaa
mov
mov
cwtl
call
sub
stos
sub
push
mov
push
je
repz
nop
js
shl
push
jae
adcl
jle
sub
loop
pop
inc
push
mov
mov
and
xor
xchg
aaa
mov
add
cmp
sbb
aas
lds
orl
push
inc
push
movsb
fdivrl
xchg
mov
mov
shll
mov
jecxz
xlat
cli
cmp
hlt
xchg
ret
scas
adc
cmp
es
mov
int3
fsubrl
jge
in
and
loope
insb
pop
push
xor
sbb
adc
sub
and
lret
repz
pusha
outsb
clc
jb
test
jp
ss
daa
mov
xlat
xchg
cmp
call
xchg
adc
add
lods
movsb
fidivs
jbe
push
fisubl
mov
push
shl
bnd
xchg
cmpsb
ja
icebp
in
je
sbb
movsb
pop
sbb
push
sub
pop
mov
add
push
pop
shr
lret
ds
lock
mov
int3
mov
cltd
push
jg
int
jmp
sbb
movl
dec
xchg
insb
push
daa
cmp
insl
stc
cltd
rcl
mov
mov
mov
out
sbb
stos
cs
or
mov
sbb
popw
xor
call
sbbl
fstp
je
rcll
das
mov
and
fsubr
xor
int3
fstpt
icebp
pop
push
add
cmp
cwtl
mov
outsl
aad
add
daa
popa
mov
mov
mov
mov
stos
icebp
xchg
add
repz
ret
push
loope
test
unpcklps
aam
outsb
cwtl
jecxz
inc
fstpt
fs
mov
je
push
xor
into
les
pop
xor
jmp
cwtl
roll
or
mov
sbb
outsb
mov
and
arpl
push
jl
sub
int3
mov
int
setae
test
cmc
cwtl
aad
push
or
pop
repnz
xchg
out
pop
mov
pop
repz
sar
fsts
rol
gs
shl
xor
mov
mov
in
mov
inc
sub
movsb
lahf
ret
or
xor
int
jb
ljmp
in
mov
adcl
inc
jp
adc
out
mov
dec
shlb
adc
arpl
jnp
and
loop
jbe
add
ret
jns
fnsave
sarb
sub
popf
mov
test
int3
cmp
stos
mov
jne
sbb
shrb
xchg
push
mov
mov
sub
pop
or
sbb
mov
pop
mov
pop
jo
or
loope
sub
js
push
xor
xor
cwtl
loop
mov
and
inc
xor
xor
xlat
lea
in
fidivrs
jo
dec
pop
mov
push
js
lea
in
push
mov
sbb
rcrl
in
int3
dec
sub
add
and
cmc
lcall
jle
xor
adc
popf
and
add
scas
pusha
mov
clc
xchg
outsb
fwait
cmp
dec
insl
xchg
imul
popf
cmp
mov
addl
xchg
add
mov
dec
ja
ret
cmp
mov
test
inc
dec
and
push
jg
xchg
sahf
mov
call
ss
xchg
pop
repz
add
sub
cmc
mov
outsb
xchg
daa
subb
jns
sbb
cmp
xchg
in
add
adc
mov
and
adc
aas
mov
inc
aam
pusha
out
clc
and
mov
repz
pushf
mov
out
data16
jg
test
sahf
jg
mov
lret
jb
int3
push
mov
icebp
out
mov
cmc
xchg
push
cmpsb
test
fstpt
idivl
sub
pop
fldt
dec
and
mov
lea
sbbl
or
insb
xchg
push
repz
push
push
repz
lahf
in
das
mov
add
lds
and
ds
rclb
jecxz
clc
loopne
outsl
jno
fisttpll
mov
push
cmp
and
fldz
shll
sahf
arpl
mov
pushf
or
cli
sub
sbb
jb
out
sti
mov
scas
push
xchg
jle
pop
hlt
cli
popa
cli
roll
add
dec
xor
out
xchg
xchg
sbb
jbe
adc
mov
dec
xor
enter
sub
or
jne
sbb
imul
jno
push
into
clc
adc
jecxz
lret
ja
loop
cmpsl
lock
sub
and
rcrl
mov
inc
shlb
dec
lret
in
rol
loop
rorl
into
insb
mov
int3
jbe
hlt
sarb
jns
hlt
sub
push
pop
mov
or
cmpsb
pop
sub
cmp
lahf
in
dec
lret
cmp
xlat
stos
push
mov
cld
out
jne
es
jp
xor
ss
loop
push
and
mov
fcoml
sub
sub
das
dec
inc
xlat
fmulp
jmp
dec
push
xchg
lcall
inc
xchg
inc
fcmovnb
or
cmpsl
addr16
inc
in
xor
gs
rorb
iret
push
push
xor
test
xor
popa
mov
inc
sbb
lock
jl
push
gs
push
inc
int
pop
mov
cmp
std
iret
jp
inc
pushf
aas
cwtl
jno
int3
mov
loop
mov
push
xor
cli
popf
cltd
ss
dec
inc
pop
mov
add
and
or
jle
iret
mov
imul
imul
and
scas
pop
iret
call
add
pop
mov
push
push
movsb
cmp
cmp
sbbb
mov
adc
mov
loopne
test
stos
and
dec
and
popa
fwait
pop
lahf
or
jo
xchg
cltd
pushf
mov
cs
imul
dec
shl
xchg
dec
fnstcw
add
cmp
sti
imul
jp
mov
push
cmp
cltd
shlb
outsb
in
cmp
xchg
ja
mov
int3
shll
pop
imul
fisttps
jae
repnz
ljmp
jl
xchg
add
push
aaa
mov
xchg
xor
jmp
jge
xchg
push
leave
jmp
test
fldl
cld
je
dec
int3
mov
fdivrl
imul
ss
arpl
mov
mov
stos
pop
adc
push
outsl
or
dec
repnz
loop
iret
cmp
js
test
sbb
jb
stos
and
adc
stc
push
pop
sbb
jns
faddl
outsb
sbb
cld
jbe
loope
push
push
cmpsb
enter
std
xchg
push
decb
pop
jbe
sub
sub
mov
inc
jne
sti
gs
lret
sbb
mov
push
pop
inc
cmp
fldl
jecxz
mov
mov
rcrl
stos
pop
cltd
aad
pop
push
outsl
insl
adc
inc
dec
dec
pop
pop
mul
mov
add
jnp
push
hlt
aas
cwtl
inc
add
fmuls
or
pop
sbb
mov
jae
pop
pop
aas
int
negl
mov
mov
stos
out
insb
dec
lcall
push
mov
jg
insl
xor
loop
insl
dec
sbb
mov
mov
movsb
xchg
insl
mov
push
cmp
daa
aam
in
push
enter
frstor
mov
or
mov
inc
es
bound
dec
mov
xchg
cli
mov
test
les
and
jecxz
xlat
adc
sbb
sub
pop
pop
push
fwait
push
sahf
xchg
call
sbb
rorl
cmc
mov
lods
sub
push
push
daa
jns
mov
push
inc
imul
mov
ret
fwait
data16
repz
out
xchg
jp
pop
cwtl
es
cs
inc
int
mov
test
jp
push
hlt
inc
test
sub
sub
push
add
cmpsb
sbb
lods
adc
cli
insl
in
inc
lods
sbb
inc
insb
pop
dec
push
cmpsl
sbb
push
and
cmp
sti
outsb
xor
js
imul
stc
into
add
jb
push
mov
and
fwait
mov
clc
lods
sub
in
sbb
lahf
pop
fdivrs
mov
fcompp
xor
push
dec
rolb
incb
pop
fsubl
lret
in
mov
cmpb
and
pop
ds
call
lret
jle
mov
or
les
mov
daa
jnp
cmp
stos
xchg
mov
cmp
adc
jg
gs
mov
pop
in
xor
xchg
movsb
inc
bound
adc
mov
adc
mov
xchg
push
ljmp
cld
scas
mov
adc
adc
inc
xchg
xchg
ja
in
lods
xor
or
es
lea
sahf
call
cmp
and
sbb
push
inc
mov
ror
xor
xchg
sub
mov
cs
push
pushf
int3
das
or
pop
push
outsl
int3
xchg
add
into
push
movsb
xor
jp
lahf
test
mov
cmp
les
jae
xor
xchg
pop
jne
cmp
adc
addr16
adc
jnp
xlat
out
mov
sbb
gs
xchg
push
add
in
xchg
js
inc
dec
icebp
inc
outsb
popf
add
call
and
push
lahf
push
pop
rclb
sbb
add
repz
mov
mov
push
jb
scas
mov
cmpsb
xor
sti
dec
mov
jae
cmp
inc
sub
adc
dec
test
sbb
cmp
cmp
jg
jb
cmpsl
adc
frstor
arpl
cmpsb
and
ret
lods
adc
call
insb
jbe
daa
mov
jmp
or
mov
push
push
xchg
shlb
sbb
mov
daa
sbb
cltd
bound
ficomps
add
or
adc
sbb
push
addr16
ret
sub
push
dec
lcall
lds
in
in
lock
rorl
out
xlat
xor
popa
mov
sub
jle
test
xchg
xchg
adc
movsb
and
push
inc
rcr
mov
and
push
not
or
mov
sub
outsb
movsb
sti
mov
pop
addl
cmp
in
or
xor
outsb
mov
rolb
jb
mov
push
inc
int
mov
inc
mov
test
xor
lock
adc
and
lods
mov
sub
add
arpl
dec
or
loopne
outsb
int
mov
mov
in
xchg
xchg
insb
sti
mov
mov
test
aam
adc
cmp
dec
or
cmpsl
push
and
mov
mov
std
inc
enter
fwait
cmp
fistpll
jne
out
fisubs
loope
push
loop
xchg
in
sbb
pop
cmp
fwait
subl
jae
stc
mov
addb
xor
lret
mov
sbb
mov
add
movsb
mov
xchg
add
push
xor
roll
adc
stos
dec
into
or
pushl
push
push
aas
ja
or
add
scas
data16
out
rorb
out
ljmp
int
fsubl
cmpsl
iret
xor
mov
sub
in
lods
movsl
jmp
mov
fwait
das
push
xor
cltd
dec
xchg
sbbl
dec
sbb
mov
push
call
repz
cmpsb
inc
ficompl
loopne
aas
xor
ret
icebp
repz
push
int
inc
mov
fisubl
inc
sbbb
xchg
xchg
and
test
shlb
stos
gs
call
nop
xor
sbb
fs
je
push
insb
shrl
lret
and
repz
or
pushl
push
lods
xchg
popa
add
test
out
mov
es
xchg
mov
pusha
or
mov
sbb
ret
or
and
jge
inc
sti
xchg
or
adc
or
stc
lahf
movsl
pop
xchg
or
pop
sub
repz
jae
mov
xor
push
aad
sub
jb
xor
jae
aaa
dec
xor
mov
fwait
in
mov
aaa
aad
clc
mov
pop
in
or
or
jmp
outsb
dec
mov
lahf
jns
roll
shrl
push
outsb
shr
bound
mov
leave
mov
and
repnz
test
inc
adc
cmp
adc
mov
xchg
or
subb
xchg
insl
xchg
in
hlt
add
jbe
movsb
imul
stos
std
push
lds
jb
inc
ret
xor
inc
fwait
sub
les
stos
aad
test
push
xor
in
xchg
jmp
jl
inc
adcl
inc
or
test
push
bound
jbe
lret
jne
cmp
lahf
xor
xchg
repz
mov
push
cmp
add
inc
nop
sub
dec
dec
ret
aas
push
mov
adc
push
insl
test
pop
cli
shl
pop
adc
mov
inc
outsl
test
mov
push
inc
mov
jmp
jle
mov
dec
jmp
push
cmp
xlat
xor
and
outsl
mov
xlat
and
lock
adc
pusha
mov
cli
adc
inc
aad
test
cmp
fstpl
out
dec
and
mov
into
incb
sbb
push
dec
sarb
inc
shl
aas
mov
cwtl
mov
jb
adc
jmp
mov
es
pop
push
cmpsb
pop
mov
jbe
fstpl
dec
rorb
dec
xor
mov
mov
ret
int
sbb
sbb
adc
jb
xchg
xchg
aad
add
popa
sti
mov
cmp
add
rcll
push
test
sbbb
lahf
imul
movsl
jle
adc
xchg
xor
xorb
sub
push
stos
mov
sbb
shl
test
adc
decl
gs
xchg
mov
sub
pop
inc
popa
sub
cs
or
mov
mov
xchg
jmp
int
jmp
cmpsb
dec
adc
sbb
adcb
xchg
arpl
adc
sub
push
sub
lahf
mov
pop
shrl
mov
inc
fs
push
mov
jbe
jbe
shlb
test
sti
jl
and
fiadds
jnp
mov
cmp
imul
mov
pop
ljmp
lahf
mov
push
hlt
mov
iret
test
aad
insl
mov
xor
inc
imul
push
ds
je
mov
mov
add
jns
sbb
lret
fnstsw
adc
call
sbb
lods
xchg
push
ret
adc
fimuls
mov
push
mov
mov
into
ret
mov
or
inc
inc
lret
mov
fadd
mov
or
into
mov
jecxz
fs
pop
sbbl
sub
lods
lods
ret
push
adc
push
sbb
mov
scas
lock
pop
ds
lds
pop
pop
popf
cld
test
int
pop
push
or
filds
cmp
sub
lret
lret
mov
sahf
ja
inc
jge
pop
mov
ja
aaa
sub
subb
mov
loope
xchg
out
loopne
imul
mov
xchg
mov
mov
test
dec
push
dec
outsb
clc
and
stos
stc
jecxz
cwtl
aas
sahf
test
cwtl
ja
stos
stos
jge
mov
ljmp
push
mov
jge
add
cmp
lock
lret
jns
mov
ss
xor
fucomi
cmp
stos
les
mov
dec
jle
mov
ja
push
mov
jo
sub
ret
pop
adc
xchg
out
xor
or
mov
mov
sub
pushf
and
and
sub
mov
dec
push
pushf
mov
insl
xchg
jns
repnz
add
push
sub
add
mov
fwait
inc
mov
test
out
cmp
jbe
dec
add
mov
scas
push
repz
ljmp
mov
or
xor
mov
mov
mov
stc
pushf
dec
filds
fcoms
sub
cltd
loope
cld
adc
mov
loopne
and
in
js
adcb
das
rcl
js
popf
arpl
mov
pop
adc
aad
adc
mov
ficomps
imul
sbb
cmp
mov
les
fcmovnbe
add
rcl
xor
mov
icebp
std
xorl
daa
in
pushf
xor
push
stos
inc
cmc
lods
push
jl
add
ljmp
rcrl
sub
and
fwait
movsb
loopne
nop
dec
js
push
sbb
daa
loope
sbbb
adc
push
add
jg
nop
sbb
and
fucom
pop
test
pusha
shrl
cmp
icebp
insb
loop
mov
push
inc
out
adc
inc
pop
pusha
aas
mov
add
mov
dec
pop
pop
loopne
dec
das
ljmp
inc
repnz
pop
jle
xor
into
push
sti
adc
adc
cld
and
sbb
subb
cs
imul
popf
fidivrl
shl
mov
ljmp
sbb
insl
shl
scas
arpl
xor
sarl
shrb
enter
js
mov
fwait
negl
ss
pop
sbb
filds
mov
dec
sti
xchg
ret
push
mov
mov
jne
leave
test
or
jbe
nop
xor
call
aas
pop
loope
add
lods
fisttpll
sub
push
cmp
sbb
xchg
cmpsb
cmp
dec
test
adc
pop
into
cmpsl
pop
and
jns
fldenv
daa
cmpsl
mov
xchg
dec
rolb
xorb
push
pop
aas
mov
xor
ds
xor
ds
rorl
mov
cmp
add
cmp
sar
jp
dec
sbb
rep
mov
jmp
xchg
bound
pop
add
fcompl
inc
xor
shrb
popf
inc
or
and
add
lret
cld
lds
scas
das
jo
lods
stos
adc
out
jecxz
sarb
sbbl
lea
aas
push
pop
sub
outsl
xchg
and
loopne
sbb
xor
cmp
ja
loope
cmp
fwait
popf
cmp
sbb
push
je
test
sahf
add
shrl
mov
pop
mov
pop
add
cld
lds
outsl
pop
mov
mov
adc
std
stos
mov
aaa
mov
mov
or
rclb
push
or
jecxz
adc
or
lea
inc
pusha
stos
fistpl
cld
xchg
imul
enter
pop
xchg
lock
icebp
popa
fwait
rcrl
adc
cmp
outsl
lea
lret
jnp
push
sbbb
aam
xor
mov
test
or
dec
dec
xor
cmpsl
sbb
inc
xor
inc
fs
jno
es
mov
fistps
jb
sbb
sbb
inc
hlt
shrb
fcomi
or
sbb
test
in
sti
adc
lret
pop
fidivrl
icebp
loopne
jb
imul
fisttpl
mov
push
fbstp
clc
leave
nop
pop
add
insl
shlb
dec
mov
xchg
js
sub
decb
jne
push
pop
mov
mov
int3
xchg
sub
xor
std
je
loopne
add
popa
in
popf
fldcw
test
sbb
jae
je
and
pop
cwtl
mov
fsubl
fdivs
mov
sub
aas
fwait
jle
add
or
fsts
js
mov
shlb
inc
aas
mov
or
mov
mov
jns
pusha
lds
ret
js
and
mov
adc
add
cmp
xor
inc
sub
test
and
ret
aaa
and
mov
sub
ss
sub
sub
cmp
stos
outsb
xor
xor
push
xor
pop
loop
insb
das
loopne
fisubrs
dec
daa
mov
xchg
call
inc
or
push
loop
pop
out
xchg
aas
pop
loopne
ja
cmp
inc
dec
pop
mov
xor
fmulp
lret
je
or
lock
das
jne
sbb
int
rcll
pop
dec
mov
scas
jb
jnp
aas
jne
insl
pop
hlt
mov
pop
pop
adc
xchg
mul
out
xor
outsl
ffree
aas
loop
and
adc
pop
sub
push
insb
inc
inc
fisttps
std
mov
xor
mov
inc
std
mov
mov
aad
shll
mov
dec
cmp
notl
insb
lds
push
xchg
dec
pusha
fxch
pop
ret
stos
inc
mov
enter
scas
lahf
add
pop
int3
xchg
in
xor
mov
add
loope
fsubr
mov
int3
rorl
insl
je,pn
xchg
pop
mov
inc
loop
mov
dec
mov
fwait
xchg
bound
idivl
and
jbe
push
fsubrl
or
push
fwait
loope
adc
sbb
push
cmp
mov
or
decb
data16
sbb
xchg
inc
mov
adc
xchg
and
add
jg
mov
sti
dec
sub
xchg
mov
into
mov
push
pop
imul
aas
push
sahf
ret
xchg
jp
or
aaa
xchg
aas
push
sub
das
fisttpll
in
pop
cmp
insl
cmp
or
mov
enter
or
loop
es
lock
cs
mov
jns
or
cmpb
loop
mov
ficoml
mov
dec
xlat
pop
ja
leave
scas
mov
ret
mov
fstpl
xor
insl
scas
jno
adc
pop
ss
and
lahf
push
fs
repz
ds
rolb
mov
inc
inc
sbb
xchg
jmp
jge
jbe
fnstsw
scas
sub
fcmovnu
or
inc
out
jg
popf
lahf
xchg
lret
scas
loopne
pop
gs
jecxz
fstpt
inc
push
jp
push
push
adc
mov
lock
cli
mov
sar
outsb
icebp
into
xor
aam
cmpsb
jle
jnp
cmpsb
and
leave
popf
xor
xor
pop
cmp
lea
xchg
int3
in
repz
pop
ss
cltd
inc
jnp
in
xor
fwait
xchg
push
test
ja
int
push
mov
jle
push
mov
adc
mov
lds
jle
xchg
push
mov
stc
stos
scas
xor
outsb
lahf
cld
imul
cmpsl
cmp
mov
in
shr
add
cwtl
mov
sub
divps
movsl
adc
jnp
ja
sub
negl
mov
adc
mov
subl
push
rolb
xlat
xor
sub
jp
nop
addb
lock
pop
sarb
aas
jl
or
in
fsubrl
lock
test
out
mov
add
insb
clc
sub
fld
mov
xchg
sbbl
inc
push
divb
xor
inc
in
clc
cli
sahf
adc
lds
adc
mov
fs
ds
int3
jle
inc
sti
daa
dec
dec
movb
sbb
das
cmp
das
adc
push
dec
xchg
xor
pop
lcall
cmp
lock
dec
push
push
add
das
push
add
lret
xor
mov
xchg
sarb
jns
mov
inc
call
jp
outsb
aad
mov
push
scas
roll
lock
cmp
sbb
daa
pop
inc
mov
lcall
ret
or
inc
rclb
and
cltd
ror
cmp
or
call
cmc
mov
sbb
push
imul
dec
push
fstpt
into
and
pusha
lret
bound
mov
jl
fidivl
nop
cmp
fwait
push
add
xchg
lods
sbb
mov
loope
into
addr16
arpl
cmpsl
shll
mov
mov
ret
shll
xchg
jl
and
or
sub
cmc
pushf
jb
sti
mov
rorl
pop
clc
mov
aas
and
push
mov
lods
mov
mov
inc
addb
mov
jae
adc
movsb
bound
xlat
into
test
stc
and
fnstcw
faddp
xchg
sub
sbb
in
push
fucomip
xchg
xchg
ljmp
jecxz
pop
movsl
push
ss
pop
mov
in
mov
jae
mov
mov
xchg
rorl
dec
int
mov
inc
pop
xchg
iret
cmp
cmpsb
dec
pop
adc
insb
cmp
cmpsb
mov
clc
rorb
xchg
jp
scas
lcall
inc
mov
outsl
cli
adc
sbb
mov
sbb
and
jo
mov
jecxz
add
loope
dec
shlb
lods
ficomps
push
mov
lock
dec
and
adc
fdivrl
mul
loopne
in
xorl
pop
mov
pop
mov
add
dec
mov
mov
cmpsl
loope
jl
jle
dec
test
call
stos
je
fwait
leave
inc
mov
insb
dec
jle
inc
pushf
stos
xchg
dec
adc
inc
outsb
xchg
sub
mov
pop
aad
pop
imul
test
scas
mov
and
sub
push
and
jno
xchg
mov
cmp
cwtl
dec
movsl
enter
mov
mov
push
lahf
cs
adc
cld
or
push
insb
les
leave
pop
lret
cwtl
mov
adc
cmpsl
daa
mov
sti
sub
frstor
inc
in
add
push
outsb
movsl
cwtl
mov
icebp
inc
fcompl
mov
test
xor
xor
test
xor
adc
sbbb
nop
std
je
popa
fists
pop
xchg
jns
cmp
loopne
test
and
and
repz
inc
jae
in
ret
les
cmp
cmp
push
mov
inc
and
mov
insb
in
mov
add
xchg
adc
or
xchg
cmp
push
faddl
push
jecxz
int
sar
scas
decb
inc
cmp
ret
testl
cmc
cmp
push
test
into
ret
add
xchg
xchg
mov
outsb
push
sub
mov
and
mov
mov
dec
sarb
stc
sahf
loope
xor
mov
cwtl
push
sti
pop
or
movsl
xor
dec
cltd
out
addr16
out
pushf
enter
and
enter
sbb
sub
call
cmc
and
inc
xor
mov
dec
or
pop
mov
sub
hlt
fsubrl
dec
pusha
or
jb
enter
pop
lret
ja
dec
add
sub
cmp
mov
adc
mov
xchg
cmp
push
lds
mov
sub
or
ds
jno
jbe
rcll
pop
pusha
nop
push
jno
mov
lock
sub
xchg
push
lock
pop
cmovne
fsts
adcl
xchg
cld
xor
cltd
cli
movsl
add
enter
subw
sbb
or
push
and
mov
insb
rclb
inc
push
jmp
das
pop
stos
or
test
mov
mov
into
push
sub
mov
xchg
shll
adc
imul
jp
bnd
adc
inc
push
or
lock
sbb
mov
dec
test
xlat
orl
lret
cli
jp
ss
pop
pop
mov
mov
or
cmp
and
or
stc
leave
daa
lea
inc
and
addl
fmuls
mov
mov
test
movsl
dec
mov
loopne
fnstcw
xor
push
mov
push
inc
mov
sti
es
sbbl
fldenv
sub
xlat
xchg
and
push
pushf
push
add
icebp
cmp
sub
test
and
xor
push
sub
rorb
ficompl
insb
xlat
push
test
outsl
stos
add
imul
pop
sub
add
fisttpll
add
fprem
sbb
lahf
inc
add
das
loope
cmpsb
mov
cmp
pop
popa
fwait
xor
repnz
fdivrp
outsl
xor
inc
mov
xlat
xchg
lret
mov
dec
mov
movsl
test
es
movsl
jbe
mov
sbb
into
out
sub
xchg
shl
outsb
mov
mov
cmp
dec
mov
in
mov
jb
pop
push
and
jge
xor
push
and
iret
shrl
leave
cmp
pop
mov
mov
lods
es
or
orl
ss
fsubr
or
or
sub
inc
cmovnp
cli
cmpsl
lret
nop
and
mov
fcomps
out
mov
mov
daa
shrb
outsl
sbb
inc
les
xchg
jge
mov
lods
bnd
jae
stos
cld
xor
jbe
cli
sub
mov
push
fiadds
stos
rorb
addb
jecxz
and
js
push
inc
mov
dec
pusha
xchg
mov
ss
daa
movsl
sbb
sti
stc
ja
xchg
or
cmpsl
and
and
mov
push
push
mov
jo
sbb
call
addb
cltd
mov
inc
jb
ffreep
xor
es
add
dec
mov
jmp
push
scas
repnz
add
daa
lock
out
xor
int3
xor
fwait
scas
add
sub
and
sbb
ror
loopne
cltd
outsb
cwtl
push
cmpsl
mov
inc
mov
xchg
sar
clc
cld
iret
mov
mov
sub
inc
xor
xchg
adc
dec
mov
addr16
cmc
sbb
inc
mov
lcall
xchg
movsb
les
enter
jl
cmp
xchg
les
shr
mov
xor
in
or
mov
jb
insb
and
dec
xor
dec
push
punpcklbw
insb
cmc
cmp
and
dec
js
and
push
int3
stc
dec
movsb
jb
jg
lahf
and
out
mov
ja
repz
adc
mov
pop
adc
pop
out
jnp
mov
pop
add
lods
mov
or
or
lods
mov
cld
sub
fldl
mov
aas
insb
ja
add
les
loopne
lds
dec
mov
cltd
hlt
add
adc
add
stos
aaa
out
rolb
adc
fsts
cwtl
jne
adc
int
fdivl
pop
mov
pusha
jns
dec
js
mov
sbb
mov
loope
jnp
mov
popf
iret
inc
cltd
adc
mov
rcrb
testl
bound
fs
int
xor
cs
xchg
sub
ja
jle
hlt
pop
or
ds
add
imul
dec
aad
push
cli
js
pusha
mov
subb
cmc
enter
adc
leave
mov
push
adc
inc
pop
mov
hlt
sbb
imul
cs
stos
nop
lods
test
sbb
pushf
sub
js
dec
lret
pop
xor
inc
in
sub
outsb
mov
xchg
xor
rcrb
lret
push
cli
pop
and
sub
or
push
mov
test
lea
aas
pop
mov
mov
lock
or
iret
sbb
bound
imul
mov
and
pop
lods
jbe
testb
addr16
xor
test
ljmp
shll
jg
jle,pn
or
xor
or
or
imul
mov
cmp
fs
loope
or
in
push
jp
in
and
sub
dec
mov
cmp
sbb
dec
push
pop
ftst
shr
sti
pop
jne
xchg
inc
andb
pop
sbb
ret
push
les
xchg
into
jae
aaa
or
dec
out
sbbb
pop
rcrb
pop
jmp
fcoml
and
ja
popa
pop
xor
jecxz
jp
scas
outsb
enter
sbb
jl
aam
lret
adc
faddl
rclb
or
lret
xchg
inc
dec
jge
xor
ret
divl
ret
addr16
fs
ficoml
push
sbb
es
into
pop
adc
jmp
loopne
sti
inc
loopne
das
adc
adc
mov
adc
push
pop
lcall
cmp
mov
aam
faddl
lods
ljmp
scas
xchg
rclb
subl
daa
aam
push
sbb
in
or
xor
insb
cmpsl
in
mov
fisubs
loop
dec
mov
jbe
push
lcall
or
pop
jg
imul
pop
and
jbe
stos
xor
mov
test
adcb
xor
call
jne
cld
in
or
incb
sub
enter
test
addr16
push
inc
mov
and
in
jle
testb
mov
push
pop
rep
iret
and
add
xchg
inc
andl
sub
inc
in
mov
pop
arpl
fisttpll
cmpsl
xor
aaa
ret
fmull
aaa
cwtl
push
andb
mov
mov
xlat
sbbb
les
add
addl
fimuls
das
mov
cmpsb
cli
or
xchg
jbe
mov
sahf
sbbb
xchg
sub
mov
clc
sub
push
nop
or
mov
cmc
jnp
scas
enter
pusha
js
push
xchg
in
out
cli
mov
dec
fstpl
cltd
sub
cltd
xor
cmp
jae
test
push
lret
and
adc
faddl
push
mov
push
inc
jo
stos
mov
nop
push
mov
fstpt
data16
jnp
test
enter
loop
push
mov
das
mov
or
cmpsb
dec
sahf
movsl
orb
xchg
and
mov
lea
lods
stos
cwtl
jns
dec
fwait
mov
add
lock
addr16
cmovb
jp
mov
sbb
imul
pop
mov
mov
mov
and
mov
lret
nop
sub
push
mov
movsb
mov
loope
or
mov
popf
or
popf
sub
pop
cli
add
sbb
dec
popf
ds
js
push
jmp
or
or
add
je
push
loop
lahf
cmp
mov
xlat
fsubrl
dec
sbb
jb
frstor
pop
je
add
inc
cltd
outsb
je
push
fnstcw
mov
popf
outsb
or
sbbb
lods
arpl
xchg
insl
push
jmp
subb
rcl
divb
xlat
in
insb
test
jg
clc
xchg
std
cmpsl
ret
push
jecxz
mov
lods
mov
stos
bound
xor
xlat
dec
pop
dec
out
test
fstpl
je
inc
in
movl
pushf
out
arpl
cs
cmp
into
in
mov
movsl
fidivl
pusha
cmp
pop
and
lahf
adc
rorb
addr16
imul
mov
mov
lret
cld
in
or
scas
push
mov
rorl
fwait
mov
push
or
fdivl
scas
cmpsb
in
stos
jb
mov
push
jne
lods
movsb
mov
dec
xor
mov
cmp
push
cmp
cmc
jg
sbb
gs
push
in
dec
jb
int3
mov
mov
cmp
mov
cmp
adc
jmp
rcrl
mov
lcall
cltd
in
xlat
daa
lea
mov
mov
imul
dec
loope
pushf
mov
or
and
enter
mov
incb
mov
arpl
cmp
sub
outsl
mov
jg
insb
sbb
pop
stc
jge
lahf
or
mov
adc
daa
ljmp
jge
std
lret
ficomps
mov
mov
xchg
in
mov
xchg
or
or
mov
xlat
leave
adc
loop
jp
in
and
add
sub
cmp
loopne
mov
dec
inc
inc
mov
xchg
xchg
stos
leave
out
test
push
inc
xlat
and
lahf
push
ds
ljmp
nop
push
shrl
addb
outsl
inc
jnp
xor
js
ficoml
mov
xor
lods
pop
out
pop
adc
dec
xor
adc
xor
push
lret
fldt
outsl
adc
sbb
sbbb
adc
sti
push
xor
outsl
jb
or
sti
pop
pop
aas
xchg
fisubrl
ss
lock
in
adc
div
pop
and
aas
sbb
mov
inc
lahf
xchg
lods
pop
cwtl
and
inc
addr16
mov
add
mov
mov
pop
push
rolb
mov
xor
xor
or
std
jo
cld
dec
cld
xor
or
in
shl
out
fwait
mov
or
xor
enter
lock
or
mov
push
fucomip
addr16
cmp
out
insb
jne
lods
jnp
pop
pushf
xor
adc
mov
inc
mov
shrl
movsb
inc
xlat
mov
mov
pop
xor
cli
data16
fisubrs
and
je
into
jae
aam
in
jbe
lods
ss
das
lahf
adc
lock
andb
mov
mov
orl
orb
cmc
dec
add
jg
jns
out
cs
es
push
ret
adc
pop
lods
mov
cmpl
mov
push
arpl
stos
or
test
push
stos
aas
clc
mov
push
pop
or
shrl
xchg
test
leave
es
fs
cld
pusha
xchg
mov
ss
push
call
pop
das
push
aas
aas
inc
jp
pop
adc
ljmp
inc
xor
lahf
xor
dec
movsl
push
push
in
dec
cmc
push
out
sbb
add
addb
mov
pop
ss
or
les
lods
lahf
pop
sub
sub
xlat
jns
xchg
lds
mov
push
and
jae
jns
xchg
lret
out
xor
mov
dec
aaa
int3
mov
stos
notb
sbb
cmp
iret
fidivl
not
jbe
test
dec
or
adc
sub
addr16
and
cmp
cmpsb
inc
imull
adc
add
es
push
sub
adc
sarl
push
out
sub
jne
or
dec
bound
push
divl
stos
push
mov
int3
xor
jl
pushf
jge
insb
ja
push
ljmp
das
aaa
cmpb
shlb
sbb
adc
shlb
inc
movsb
imul
xchg
nop
lcall
inc
dec
xor
cli
pop
lock
mov
mov
nop
adc
sbb
fists
jns
push
fnstsw
mov
add
test
cmc
push
lret
dec
adc
das
movsb
rolb
push
cli
dec
sti
inc
pop
pop
sub
pop
lret
pop
in
inc
sti
notl
lds
sub
jecxz
add
xor
mov
add
mov
mov
jno,pt
repnz
out
std
mov
and
cwtl
imul
cld
lret
int
adc
leave
and
insb
int
iret
dec
jle
mov
mov
mov
mov
aaa
jo
int3
loop
sbb
sbbb
lods
subl
jno
jnp
mov
sub
scas
sbb
and
dec
js
xchg
xchg
add
push
out
mov
addr16
adc
lret
or
mov
ja
shrb
int
mov
adc
jno
add
cmpb
or
lret
lret
mov
or
sbb
cmp
ds
out
push
mov
cmp
adc
out
pop
inc
lods
add
clc
xlat
imul
push
jl
adc
movsb
leave
mov
mov
cmc
nop
movsb
adc
add
lret
test
sbb
pop
lret
les
jbe
dec
xchg
fidivs
jmp
push
loopne
mov
sarb
or
andl
adc
mov
jbe
mov
mov
fs
jg
popa
xor
orl
ss
stos
inc
pop
dec
movsb
xchg
inc
pop
pop
lcallw
push
and
lret
mov
push
jbe
daa
mov
nop
fcmovnu
outsb
add
push
sub
mov
inc
aad
imul
imul
lcall
fisttpll
push
or
pop
hlt
or
leave
and
cmp
xchg
shl
out
xlat
std
and
movsb
fs
jl
xor
popa
xchg
cmp
outsl
mov
sub
sub
outsb
roll
push
int3
xor
mov
out
stc
clc
enter
push
sbb
pop
cwtl
and
incl
add
fsubp
inc
out
xchg
mov
fidivrl
jl
and
cltd
orb
add
mov
and
data16
mov
in
popf
cwtl
fcomi
and
movsl
ds
inc
call
imul
xorl
push
fcomi
movl
stc
adc
les
and
or
cmpl
fs
adc
or
mov
xchg
push
mov
stos
xchg
xchg
sbb
and
vmwrite
sarl
cltd
repnz
pop
jne
int
pop
sbb
aas
fsubrl
dec
sbb
or
lock
and
loopne
xor
and
cmpsl
push
xlat
inc
xchg
mov
xchg
mov
xchg
and
inc
xchg
in
repnz
in
xchg
inc
or
fldcw
std
nop
fcoml
dec
and
mov
scas
or
sbb
push
cltd
int3
out
test
out
mov
cmp
scas
repnz
or
mov
rcrl
inc
in
aam
jp
testb
sub
data16
and
lret
fnsave
outsb
mov
mov
mov
hlt
cmp
pop
pop
mov
mov
sbb
xchg
push
imul
jle
ror
mov
cld
testb
daa
cld
xchg
nop
push
cmp
sbb
adc
ret
add
mov
adc
test
push
mov
hlt
insb
enter
jbe
mulb
push
jg
dec
mov
or
cmpsl
imul
lret
inc
jecxz
fisttps
pop
mov
data16
les
sahf
out
movsb
sub
sbb
push
movsb
incb
jnp
add
fstpt
insl
lcall
cs
or
push
and
sbb
sbb
cmp
pop
mov
inc
subb
test
mov
test
cmp
xchg
jae
repz
sbb
dec
outsl
arpl
sbb
mov
std
sub
std
mov
xchg
lea
inc
orb
hlt
push
mov
mov
push
das
ljmp
and
mov
mov
mov
add
mov
dec
jg
loope
dec
xchg
cld
cmpsl
cmp
push
and
dec
sbb
sub
ret
xor
and
mov
mov
mov
dec
add
add
pushf
fnstcw
je
repnz
mov
xor
sub
cmp
addr16
mov
mov
sbb
inc
outsl
call
lods
int3
adc
ja
lods
cmpsl
jp
dec
xchg
push
loop
inc
jge
insb
fisttpll
add
push
mov
or
jecxz
test
stos
pop
mov
push
inc
mov
jge
fstpt
mov
jae
mov
jmp
test
pop
jecxz
pop
sub
inc
popa
scas
jns
int3
stos
repnz
adc
movsb
inc
mov
aaa
push
mov
mov
lahf
dec
and
enter
cli
mov
fnstcw
cmpsb
test
mov
push
rcrb
jp
pusha
jo
push
pop
int3
pushf
sub
fs
ret
mov
cmp
fmuls
or
mov
rcrb
jecxz
inc
pop
sbb
sub
mov
jnp
imul
out
mov
push
jno
jno
mov
add
aaa
or
add
hlt
lretw
jns
std
push
test
jno
jne
xchg
daa
aam
scas
lods
inc
sub
dec
or
dec
inc
lahf
insl
jo
pop
ret
jnp
cltd
mov
nop
xchg
insb
cmc
dec
arpl
js
pop
aaa
or
jg
inc
cmpsl
sar
sbb
iret
ljmp
cld
je
mov
ljmp
imul
or
in
jb
add
adc
pushf
icebp
xchg
mov
cmp
sbb
mov
cli
cmpsb
call
xchg
inc
jecxz
and
mov
or
insb
dec
mov
sbb
scas
push
pop
mov
gs
dec
adc
and
add
jae
imul
sub
aam
and
aad
push
xchg
adc
fistpl
neg
cmp
mov
pop
daa
lods
dec
aad
push
sub
stos
scas
cli
sahf
cmp
das
dec
inc
hlt
fwait
jge
jg
iret
data16
xchg
int3
cmpsl
inc
ret
inc
cmp
aas
ss
cmp
add
cmp
push
lcall
dec
incb
jle
fwait
mov
je
mov
sub
push
insl
mov
mov
lds
sub
std
je
in
daa
in
test
and
out
jle
mov
out
xlat
in
mov
adc
ret
cld
call
pop
and
aad
xor
sbb
mov
adc
jle
xor
popf
fwait
adc
lea
pop
insl
in
iret
movb
or
scas
fistpl
ret
dec
stos
xchg
imul
cmc
pusha
imul
aas
mov
sub
inc
mov
aas
fdivrp
test
neg
xchg
jecxz
mov
push
gs
xchg
pushf
push
in
jno
cmpsb
lods
out
movsl
push
fs
pop
js
dec
sbb
aaa
mov
bound
jns
cmp
out
lcall
cmp
xchg
aas
fdivr
into
aas
ret
das
mov
push
loop
push
xor
push
jbe
movsl
pusha
and
xchg
xchg
aas
sti
mov
mov
mov
icebp
adc
pop
inc
sarb
lock
inc
cmp
lods
inc
mov
adc
push
mov
test
jge
xor
cs
lock
loope
jno
xchg
out
sub
mov
xor
push
loop
sbb
and
push
dec
pop
or
jnp
mov
jecxz
stos
push
pop
pop
jbe
pop
push
popa
loopne
push
mov
sub
leave
add
or
xchg
add
sarl
stc
and
out
jmp
sub
or
mov
cmpsb
fsubrl
mov
iret
dec
jo
add
test
out
cmp
add
movl
fwait
cmp
push
outsb
nop
aam
lds
fst
sbb
or
and
lahf
andb
pop
dec
mov
and
stos
pop
cwtl
clc
and
xchg
cmpsl
fwait
sub
leave
ret
inc
pop
mov
loopne
stos
bound
ret
aaa
adc
loop
sbb
mov
fstpt
inc
out
xchg
ljmp
xchg
sub
rclb
pop
sub
mov
adc
lahf
sub
leave
cmpsl
jl
sti
inc
mov
xor
inc
add
insl
nop
incl
loop
lock
lret
bound
and
mov
inc
mov
jle
lcall
xchg
in
mov
paddq
addr16
or
or
repz
jl
fnsetpm(287
adc
and
push
data16
cmpsl
cltd
mov
aaa
adc
xchg
je
cmc
dec
das
sti
adc
push
inc
stc
inc
int3
jbe
mov
rolb
mov
ret
shlb
jg
movl
hlt
lods
je
xor
pop
mov
or
movsl
int
xor
out
cltd
rorb
js
or
xchg
call
dec
js
adc
xchg
fimull
jle
imul
mov
push
inc
lret
rclb
scas
in
add
dec
leave
jnp
movsb
jmp
rcrb
lahf
adc
pop
pop
shlb
fdivrl
dec
xchg
mov
cmp
lret
dec
hlt
mov
mov
jno
mov
push
scas
mov
push
push
mov
loope
pusha
mov
add
xor
cmpsb
fstps
and
xchg
inc
out
xchg
scas
inc
pusha
jecxz
jmp
movsb
push
push
lods
mov
pop
fimull
mov
mov
cmp
stos
push
jp
jl
enter
out
jl
pop
push
lret
dec
cmp
dec
or
pop
data16
rcl
xor
leave
fcoms
jecxz
adc
gs
push
leave
pop
movl
mov
mov
jae
or
ja
call
ss
inc
ss
call
je
xor
inc
ds
xchg
xchg
dec
add
mov
cwtl
inc
movsl
fucomip
out
add
sbb
addl
inc
mov
xchg
mov
fisubrs
repz
jns
in
sbb
cltd
outsl
adc
pop
loopne
or
test
rclb
dec
clc
clc
fnstenv
pop
inc
jmp
icebp
aas
and
aam
mov
add
xor
mov
mov
xor
push
push
adc
imul
jns
arpl
mov
cmp
leave
loope
lahf
test
daa
sbb
inc
mov
sub
into
push
sbb
in
jno
xlat
dec
and
int
mov
in
jmp
mov
divb
addb
pop
cmpsl
or
sbb
insb
mov
cmp
jno
sbb
add
jbe
je
subl
lcall
cmpb
popl
and
mov
mov
lea
mov
xchg
push
xchg
push
icebp
stos
pop
pop
stc
xor
dec
pop
jecxz
and
ret
sbb
lods
shl
dec
enter
adc
aam
mov
mov
cmpsl
fnstenv
mov
sub
mov
jne
pop
push
into
mov
dec
cmpb
mov
jecxz
imul
sub
mov
fdivp
pushf
int
cltd
repz
cmp
xchg
xor
cmp
push
enter
inc
xchg
fnstcw
lods
or
pop
addr16
hlt
sbb
in
xchg
mov
or
adc
sti
pusha
fcoml
pop
sub
lea
into
and
inc
sub
xchg
mov
and
popa
mov
stos
mov
add
push
mov
sbbl
fstps
clc
outsl
push
stos
xor
cmpsl
nop
iret
mov
lods
cmp
cmp
jle
inc
aas
adc
mov
gs
rolb
xor
fcmovbe
mov
jl
arpl
repnz
dec
and
out
daa
lret
std
adc
cmc
mov
push
arpl
sbb
xchg
je
test
or
jns
ss
std
xor
out
or
xchg
xor
cld
dec
repz
or
adc
xor
scas
sub
jbe
push
adc
ret
xchg
fwait
loope
sub
movsb
psubw
ja
int3
imul
mov
or
xchg
arpl
inc
xchg
jns
nop
into
mov
lea
in
outsb
and
sub
out
ja
in
imul
das
ror
pop
stos
cmpsb
loope
stos
xor
push
sub
scas
sbb
out
sti
and
dec
aad
mov
push
cmpsl
adc
movsb
js
pop
decl
or
add
mov
add
mov
sub
pop
pop
lds
sub
xchg
inc
fucom
jmp
add
adc
lock
inc
lcall
stos
addr16
cmpsb
mov
push
sti
xchg
std
xchg
aam
xor
jno
adc
in
fs
scas
and
fsubs
nop
aad
ficomps
push
jmp
lods
jnp
daa
pop
lea
in
out
xor
sub
rcrb
lahf
outsb
lret
jns
sub
push
shrl
fs
mov
movsb
cwtl
add
test
jns
mov
fimull
fwait
popf
sti
pop
or
fs
pop
mov
aaa
pop
sbb
push
nop
ret
mov
push
add
fcmovnbe
test
cmp
jge
incl
jmp
dec
scas
inc
mov
pop
pop
aad
mov
push
and
iret
xchg
sub
hlt
sub
stos
ja
add
mov
jo
cmp
std
enter
adc
pop
push
jecxz
dec
popf
mov
adc
jno
test
adc
push
shlb
sub
mov
xchg
mov
adc
mov
out
or
lret
add
and
leave
push
enter
loope
jae
test
adc
inc
insl
xor
pop
mov
xlat
jge
addr16
or
sbb
add
movsl
lret
xor
pop
incl
lret
push
ds
fstpt
cmp
shll
sub
mov
icebp
sbb
movb
push
ret
pushf
mov
les
std
lea
or
mov
jl
fsts
out
ret
icebp
mov
add
icebp
add
xor
fisubrl
cmc
cmp
in
dec
roll
outsb
jl
in
jne
sub
cs
jl
and
jae
loop
xor
rorl
jmp
add
rcr
jbe
ds
es
pop
jno
xchg
add
pop
mov
push
das
imul
push
daa
push
fbstp
sbb
lea
xchg
jns
sbb
push
mulb
jp
mov
int3
mov
loopne
or
sarl
jnp
icebp
out
adc
dec
dec
mov
xor
add
fwait
sub
jp
jns
sub
mov
inc
sub
inc
cmp
pusha
lea
adc
ljmp
sub
inc
push
nop
push
mov
mov
aas
insl
or
and
xchg
xchg
sbb
movlps
repnz
mov
push
std
adc
jle
lret
pop
lret
or
jg
cmp
or
dec
jmp
mov
xor
sbb
ja
push
sbbb
push
das
jge
je
add
adc
sub
pop
dec
inc
jl
js
fs
inc
jge
adc
pop
xchg
dec
jle,pt
insl
cmpb
aam
jae
cmp
xor
push
adc
sahf
and
adc
hlt
or
mov
sbb
inc
xor
add
loope
fsubr
gs
cmp
clc
stos
test
and
jmp
jmp
dec
cmpsl
adc
mov
push
incl
cmpsb
clc
inc
mov
adc
mov
out
lds
mov
mov
adc
xchg
sbb
ret
movb
mov
insb
mov
mov
test
iret
jbe
cmc
movsb
xor
bound
insl
push
in
and
rcl
fnstsw
stc
cmp
xor
jge
out
loopne
sub
data16
xor
and
cli
cmp
fdivr
icebp
sti
out
sub
rcl
stc
sub
adc
mov
sbb
fs
in
pop
data16
lret
mov
inc
aas
add
sub
loop
cmp
xchg
add
enter
dec
cmpsl
and
idivb
jnp,pn
in
jg
xor
or
mov
in
and
xchg
fistps
jl
out
jle
movsl
mov
ret
mov
or
insb
mov
or
adc
call
insb
pop
pop
out
xor
add
ret
iret
pop
or
js
push
inc
fcoml
loope
fwait
js
pop
andl
fdivl
loop
pop
jecxz
push
pusha
pop
push
xlat
mov
test
pop
stos
or
jne
lret
ljmp
shll
in
movsl
jl
xchg
incl
mov
cli
movsb
dec
sbb
xbegin
sub
cmpsl
jnp
aaa
das
cld
pop
shr
cwtl
and
push
hlt
out
cld
xor
and
in
mov
xor
std
test
shlb
dec
mov
cmp
icebp
rorl
scas
shrb
cltd
shlb
mov
lret
out
lea
roll
fs
ss
data16
mov
pop
shll
jne
lods
cmp
xchg
gs
jb
je
les
insl
dec
pop
push
mov
out
jo
mov
mov
repnz
push
jle
add
push
dec
xchg
pusha
ljmp
add
sbb
hlt
adc
insl
ds
int3
psubsw
cmp
js
arpl
jae
mov
xlat
push
and
mov
jp
lods
cmp
outsb
pop
jae
and
in
mov
shlb
dec
ret
leave
popa
imul
fmuls
add
out
add
inc
or
mov
sarl
mov
outsl
test
mov
call
imul
and
rcr
call
lea
xor
push
ljmp
fisttps
adc
jo
in
add
sbb
fistps
jne
mov
push
dec
sbb
frstor
pop
mov
mov
xchg
lods
cli
or
push
pop
jbe
push
mov
jle
mov
mov
mov
ret
or
mov
out
sbb
inc
int
stos
pop
sbbl
inc
and
pop
mov
adc
mov
and
jmp
movsb
les
clc
cmp
fistps
lret
sbb
pop
out
insb
dec
frstor
js
mov
push
lcall
in
das
cmc
leave
jae
add
int3
movsl
dec
add
repz
or
test
jnp
or
ljmp
sbb
xchg
cmp
inc
xor
cwtl
test
xchg
adc
int3
rcll
mov
push
clc
inc
lea
mov
or
xchg
jmp
add
out
je
fstl
lahf
in
push
and
add
mov
sbb
adc
pop
out
outsl
sub
mov
push
pop
lock
repnz
add
movsl
das
mov
ret
push
jo
imul
call
pop
addl
test
popa
mov
addr16
mov
push
out
mov
das
stc
xchg
sti
lds
aaa
inc
push
fistps
pop
fstps
pusha
cmp
mov
sub
cmp
xchg
push
cmpsb
or
imul
scas
fidivs
sub
and
pop
mov
dec
in
ljmp
imul
sti
movsl
lret
mov
aaa
or
enter
cmc
add
cmc
xor
daa
popl
lods
shll
in
pusha
sbb
mov
jmp
mov
adc
add
lds
shll
sti
ret
outsl
mov
cwtl
call
into
jmp
sub
mov
jo
js
push
jae
mov
add
pop
mov
push
outsl
inc
xlat
mov
stos
aas
andl
lods
imul
movb
stos
push
add
push
ret
negb
je
scas
ja
stos
jns
scas
ret
andb
leave
scas
fs
decb
jmp
mov
into
icebp
xor
xlat
adc
pusha
add
pop
and
ret
scas
add
fistl
cmpsb
push
in
cli
hlt
ret
or
clc
mov
and
lods
ret
ret
rcrb
cmp
pop
sub
lods
inc
add
cmc
pop
push
push
nop
push
imul
push
or
cmp
daa
out
or
outsl
adc
inc
xchg
jo
add
cmp
push
xchg
sbb
orl
stc
pop
test
cmc
adc
or
jg
cwtl
clc
sbb
imul
adc
inc
outsl
lahf
das
adc
ret
mov
or
push
clc
inc
fcomps
pop
inc
stos
adc
je
mov
mov
out
sub
mov
test
cmp
mov
daa
in
in
adc
cmp
cltd
xchg
dec
int
mov
mov
stos
sub
pop
fists
inc
out
hlt
adc
imul
push
or
inc
xor
sbb
rcrl
jecxz
aam
dec
outsb
icebp
data16
mov
bound
imul
ja
sbb
sahf
data16
sbbl
jnp
repnz
add
movsl
pop
outsl
inc
jne
xor
adc
imul
fwait
and
push
jno
lds
scas
divl
and
movsb
fmull
add
dec
loope
fisttpll
mov
pop
fcoms
and
dec
mov
jle
jbe
fnstsw
repnz
mov
jge
jl
bswap
dec
stc
aas
cmpb
cmp
jl
inc
pop
dec
repz
mov
xor
add
xchg
lds
push
in
xchg
cmp
mov
out
pop
mov
loop
cmp
adc
fwait
jmp
xor
jecxz
in
pop
mov
negb
das
mov
mov
out
sbb
mov
div
mov
lret
add
push
xchg
movsl
movups
push
inc
daa
xor
lret
in
adc
sub
call
pusha
cs
stos
out
gs
xchg
xchg
or
lret
mov
stc
jg
mov
mov
pusha
and
fdivl
popf
test
fwait
cmp
pop
mov
popa
push
adcl
xchg
dec
loope
arpl
cwtl
adc
jmp
dec
xchg
adc
rol
push
add
imul
or
xchg
or
cmp
pusha
mov
ljmp
or
out
lock
mov
adc
or
jecxz
xor
push
sub
das
xchg
dec
sbb
loope
insb
insl
stos
fsubl
jp
xchg
imul
cld
and
inc
jbe
sahf
or
nop
jp
fsubrl
sti
adc
in
popf
cltd
sbb
andb
mov
or
and
jg
adc
sbb
lcall
insb
fnstcw
imul
ja
pop
int
sbb
repz
mov
mov
jb
es
mov
jb
repnz
and
shrl
xor
lcall
push
pushf
sub
or
in
nop
insl
xor
push
mov
push
shl
sub
push
test
lods
mov
repz
enter
xchg
jmp
stos
mov
jmp
es
loopne
lds
ret
adc
loope
loop
push
sbb
das
iret
mov
movsb
cs
into
mov
icebp
cmp
loope
lea
aad
inc
int3
xchg
outsl
repz
rcr
jmp
addr16
push
push
sbb
pushf
ret
jp
je
fs
jl
jno
lods
cmpsl
mov
test
xor
outsb
xchg
cmp
fdivr
in
jl
repnz
xor
jno
jo
or
repnz
out
inc
jg
mov
xchg
fmuls
scas
mov
pop
push
and
icebp
mov
test
fcoml
jo
push
cs
mov
cmpsb
jmp
and
or
jne
sahf
mov
pop
jns
orb
cmp
add
rorb
ds
adc
jecxz
in
cmp
imul
outsb
sub
inc
adcb
push
add
mov
sub
in
sbb
sbb
xchg
pushf
lods
push
lcall
je
ss
xchg
push
pushl
pop
and
sbb
adc
jecxz
jecxz
cli
lretw
jl
or
adc
ret
out
je
and
fadds
das
arpl
data16
xchg
adc
mov
push
push
add
movsb
jbe
test
xchg
sub
cmpsb
int3
fisubrs
xchg
mov
mov
in
adcb
stos
push
out
out
dec
stos
inc
mov
sbb
mov
and
xchg
jge
pop
mov
xorl
xor
stos
jns
push
jbe
xor
mov
lahf
push
test
fildll
movsb
insb
push
xor
mov
cmc
or
and
inc
pushf
test
clc
push
add
outsl
pop
adc
ljmp
adc
sti
test
xchg
les
icebp
mov
lret
call
jl
and
insb
dec
jns
enter
or
xchg
mov
mov
dec
sub
mov
xchg
push
sahf
cwtl
adc
sbbb
add
daa
fwait
cmp
xor
add
shl
loope
aas
push
dec
imul
mov
repz
lods
or
adc
rep
sub
fadds
clc
and
popf
outsb
test
jl
cwtl
inc
cmp
pusha
dec
or
and
rolb
mov
push
dec
cmp
sbb
mov
xchg
cmp
dec
movsl
pop
add
js
cmp
stos
movsb
into
je
inc
pop
aad
push
pushf
pop
orl
push
popa
mov
inc
xchg
xlat
rorb
fcmovbe
rcl
imul
pop
inc
pop
shll
lret
dec
pop
jnp
rcrb
and
pop
sbb
push
fstps
push
mov
jo
jecxz
add
aaa
daa
insb
sbbl
ljmp
mov
or
jo
push
jg
rclb
je
lcall
add
inc
shrb
and
bound
cli
xchg
pop
jmp
daa
mov
jmp
repnz
mov
movsl
mov
pushf
stc
sbbb
pop
add
decl
lret
dec
xor
xchg
fldt
pop
out
pop
dec
es
adc
mov
xchg
clc
pusha
xor
out
pop
test
pop
psrad
fs
push
jne
loopne
jp
outsb
and
fildl
push
insb
mov
xchg
xchg
inc
dec
dec
lcall
cmp
fdivrs
phsubd
mov
clc
adc
xchg
mov
leave
leave
inc
or
insb
xorl
imul
insl
mov
sub
arpl
adc
mov
xlat
xchg
pop
dec
xlat
adc
jmp
xor
pop
jno
shll
test
leave
or
dec
lods
lods
fistpl
jge
imul
mov
sbb
dec
in
outsl
icebp
aam
lea
gs
xor
mov
outsb
lahf
pop
out
rolb
cltd
push
sub
andb
outsb
jns
add
scas
mov
cmpsl
mov
outsl
dec
sub
xor
add
test
mov
add
mov
dec
add
and
in
xchg
mov
sbb
cs
ss
adc
pop
dec
repnz
arpl
rorb
mov
push
dec
cmpsb
adc
or
loop
jne
push
pusha
sub
dec
popf
push
jo
loop
pushf
cmp
rcrb
adc
add
xchg
add
add
dec
insb
xor
mov
mov
add
push
lock
inc
pop
mov
jno
rorl
push
icebp
sub
cwtl
pop
enter
int
mov
cmp
adc
dec
clc
jns
xor
pop
mov
movsb
jno
icebp
std
add
out
adc
es
cld
fs
jnp
stc
pop
xor
sub
popf
pusha
jp
loop
cltd
dec
push
and
add
xor
inc
xchg
dec
push
scas
inc
push
popl
dec
aaa
mov
fcompl
jo
outsl
push
pop
mov
fmull
jne
fildl
rorl
cli
adc
mov
jp
sub
sub
and
ss
adc
xchg
xchg
pop
jmp
add
ljmp
push
push
hlt
add
dec
add
or
mov
mov
mov
pop
movsb
mov
ret
xchg
dec
pushf
out
push
jb
xchg
sti
test
pop
push
adc
jg
repz
xchg
xchg
mov
enter
mov
and
add
cmpsl
push
shlb
int
cmp
adc
jle
fnstsw
adc
or
sbb
insb
cmp
mov
shl
xor
push
xchg
int3
movsl
subl
mov
fdivs
sub
std
pop
cltd
test
xchg
jns
popl
inc
xor
addr16
inc
ss
jmp
pop
pop
mov
shrl
std
add
repz
fcom
mov
test
insb
mov
and
int3
xor
fnstenv
xchg
ja
lods
clc
xor
icebp
inc
mov
mov
jns
cmpl
int
jno
mov
add
jnp
mov
pop
cli
enter
dec
adc
ss
sub
insl
xor
push
dec
lahf
xchg
jecxz
mov
adc
shrl
inc
xchg
and
xchg
dec
fnstenv
mov
das
pop
insb
fmull
dec
loope
mov
test
push
xorb
pop
jno
fdivrl
sub
call
dec
sub
lock
lahf
mov
mov
fnstenv
into
adc
shlb
js
outsl
dec
fistpll
sbb
aas
xchg
rolb
mov
add
mov
xor
or
xor
xor
add
call
ja
movsl
jae
aam
sahf
xchg
jmp
cld
sub
lahf
sbb
mov
dec
repz
aas
mov
push
add
in
mov
inc
outsb
hlt
jg
das
jmp
jle
jne
sbb
jbe
shlb
pop
rorb
pop
pop
fwait
mov
push
push
mov
lcall
dec
and
mov
and
mov
jge
bound
scas
mov
scas
xlat
sub
jne
les
mov
mov
rorb
mov
jb
test
lods
xor
sbb
lret
lods
test
pop
fldz
icebp
adc
push
inc
decb
cltd
imul
add
xchg
pop
sub
mov
push
push
push
mov
mov
sbb
call
mov
pop
or
out
lret
or
jmp
roll
sub
inc
jl
xlat
cld
mov
jae
mov
add
hlt
inc
sbb
dec
or
mov
push
jecxz
sahf
xchg
mov
adc
int3
outsl
iret
unpcklps
pop
popa
dec
push
pop
es
cltd
push
arpl
hlt
inc
lea
adc
outsl
and
hlt
xchg
ret
das
lds
imul
sbbb
xchg
mov
xor
imul
pop
xor
fcmovbe
or
loopne
sti
xchg
jns
loope
adc
mov
dec
lds
fsubr
push
adc
fldl
xchg
lret
cltd
subb
add
aaa
icebp
jns
mov
ja
ds
cwtl
movsb
loope
sub
push
fidivs
enter
shll
add
push
or
aam
test
pop
add
icebp
leave
cmpsl
shl
dec
lock
mov
sub
jae
jge
mov
je
iret
aad
push
inc
mov
push
mov
mov
ret
pop
outsb
ret
push
mov
clc
pop
mov
adc
lahf
lahf
cli
mov
cmp
repnz
adc
notb
lcall
push
bound
subb
mov
mov
mov
and
aas
add
push
lea
mov
movq
pop
push
outsl
push
mov
insb
lret
popf
addr16
ljmp
rolb
je
mov
in
pop
sbb
test
int3
ret
leave
sub
sub
pushf
out
div
addr16
arpl
addr16
sub
scas
icebp
jnp
repnz
sarl
lcall
daa
sarb
cs
or
add
insl
fs
stos
add
loopne
bound
xor
outsl
xchg
das
decb
icebp
xchg
mov
xor
ja
inc
mov
adc
mov
gs
add
jg
lret
jae
adc
leave
sub
loopne
add
test
stos
ds
pop
test
pop
psraw
pshufw
inc
inc
xor
xchg
mov
and
test
call
pop
push
fmull
aam
dec
testl
sbb
test
iret
sbb
mov
xlat
mov
outsb
cmp
adc
aam
jns
sub
inc
jp
outsb
imul
gs
insb
cmp
lods
inc
jno
cmp
clc
out
test
loop
or
xor
fcmove
cmp
jmp
in
cmp
orl
pop
mov
test
popf
mov
std
fwait
and
das
mov
test
rorl
decb
push
jmp
add
add
mov
test
pop
outsl
push
jno
mov
or
repz
jecxz
repz
xor
aas
lahf
outsl
ret
mov
leave
xchg
fwait
push
rolb
imulb
aad
sub
and
mov
mov
nop
pop
bound
sub
aam
mov
push
sti
cmp
mov
outsb
icebp
jb
xor
dec
test
mov
sbb
scas
ljmp
sbbl
jp
lods
sahf
push
imul
jno
arpl
add
and
mulb
insb
push
mov
jmp
stos
int3
sti
sahf
ja
mov
int3
jae
fistl
or
add
out
jns
in
or
fsubrs
loopne
out
cs
fcoms
enter
js
jbe
lock
pop
inc
or
xor
in
xor
sti
inc
fwait
sub
roll
or
dec
xchg
aam
out
or
sbb
push
lret
ja
cmc
aad
pop
and
push
int
pop
cltd
push
pop
sarl
outsb
sbb
lods
test
imul
sub
jo
pop
outsl
sbb
loopne
test
les
cmp
mov
and
sub
in
pop
push
lret
decb
inc
adc
xlat
cmp
movsl
pusha
pop
mov
inc
xor
xorl
and
scas
insb
xlat
andb
mov
out
push
dec
cmp
loope
sbb
and
push
mov
and
mov
lahf
pop
rolb
cmp
push
adc
repz
push
xchg
jo
jp
arpl
enter
xor
and
mov
push
fidivs
iret
push
sub
sub
mov
arpl
sub
loop
loopne
in
add
mov
fwait
cmc
sub
pop
shlb
and
int
aad
mov
idivl
pop
xlat
sbb
push
xchg
or
mov
push
cmpsb
push
in
pop
outsl
cmp
inc
mov
push
gs
add
xor
in
mov
cmp
stos
jmp
ja
pop
insl
ret
mov
inc
leave
popa
addr16
mov
mov
cli
mov
leave
in
cli
aad
popf
mov
ss
jmp
inc
jg
outsb
cmova
repz
xor
lods
stc
inc
jg
mov
std
lods
add
stc
jle
cmp
pop
stc
mov
mov
jne
lods
sbb
fst
fadd
es
jmp
scas
mov
adc
fdivs
add
or
push
mov
jno
mov
fs
lods
aaa
add
test
inc
or
lret
pop
ffreep
bound
sub
mov
cmp
cmp
ja
xchg
repnz
adc
push
cli
andb
sub
or
xor
inc
mov
lahf
clc
icebp
push
jmp
push
repz
and
or
inc
lods
imul
xor
add
and
xchg
addl
mov
jno
les
fcomps
pop
jnp
imull
mov
popf
jb
lea
loop
jno
in
ret
enter
push
cmpsl
pop
push
sbb
add
lods
add
daa
add
repnz
mov
inc
push
int
xor
test
cmpl
enter
push
sahf
fidivrs
mov
push
int3
push
mov
mov
mov
sub
sbb
out
out
jbe
mov
push
jns
sbb
cwtl
fcmovbe
int3
lcall
push
xor
aaa
shrb
xor
mov
jne
in
or
inc
test
mov
push
mov
imul
sub
xor
rcll
cmpsl
gs
pop
outsl
int
test
push
addr16
or
std
sub
push
xchg
pop
stc
push
hlt
je
sub
hlt
push
sub
adc
out
xchg
cs
pop
dec
and
jbe
dec
outsl
jne
daa
xchg
or
sub
cmp
mov
xchg
ds
dec
mov
adc
das
add
jmp
push
fidivl
stos
mov
mov
loopne
lret
jmp
dec
stos
popf
xchg
sti
je
mov
inc
jns
push
xchg
mov
cmpsl
jnp
call
enter
jg
outsb
add
inc
dec
add
adc
cmc
lock
int
in
dec
fs
ret
cmpsl
lahf
test
shll
imul
add
or
xchg
sbb
and
outsb
mov
lea
aas
cmp
cld
push
push
cmpb
shrl
pop
cld
mov
pusha
push
mov
nop
xor
push
mov
jnp
int
xchg
sub
sbb
push
inc
popf
lock
movd
cli
mov
pop
jge
mov
adc
fwait
pop
test
cli
adc
xor
rcrb
dec
mov
mov
popf
xor
outsb
adc
outsb
sbb
inc
dec
xor
aam
jg
lret
adc
sub
xor
adc
inc
scas
pop
jg
sbb
in
lds
push
test
jb
cwtl
mov
scas
in
jecxz
sub
les
jecxz
add
pop
xchg
outsl
pop
mov
push
fldenv
adc
jo
pop
std
mov
lcall
insb
aad
inc
data16
jl
fisttpl
push
adc
mov
push
rol
dec
mov
cmp
lret
pop
shll
test
mov
notl
dec
mov
and
mov
data16
and
xor
sbb
xor
mov
xor
cld
mov
out
inc
ficomps
pop
dec
data16
sub
ret
call
dec
jecxz
lods
mov
loop
mov
orb
dec
xor
bnd
dec
xchg
rorb
cs
push
cmp
lret
cwtl
inc
insb
and
dec
inc
mov
gs
mov
xchg
movb
cmp
mov
int3
push
fidivs
jo
fidivs
or
fists
push
idivl
ds
mov
add
inc
adc
into
dec
lds
push
mov
pushf
lcall
pop
mov
sub
stc
lods
incb
fisttpl
adc
shr
sub
cltd
dec
imul
int
cmc
xor
sbb
dec
insb
inc
cmpsb
xor
mov
adcl
fcmovb
or
test
cmp
fcmovnbe
sub
cmp
in
inc
pop
out
cli
sub
ja
fdivp
pusha
in
mov
sbb
scas
mov
outsb
scas
fdivrs
popa
cmp
loopne
pop
inc
sbb
dec
add
mov
and
mov
aad
inc
lahf
cmp
xchg
pop
or
lcall
test
lods
xchg
js
lret
lea
imul
mov
sarb
js
cmc
int
addr16
icebp
fsubrs
jbe
roll
test
cs
push
fwait
addb
xor
and
ss
add
fadd
adc
dec
jno
cwtl
repnz
shrl
rclb
cmc
out
adc
lret
fdivr
mov
test
arpl
sub
neg
fcmovb
dec
cmc
mov
adc
mov
and
sub
cmpsb
push
js
pop
nop
imul
loopne
into
jb
cmp
push
out
lahf
lahf
cld
mov
xchg
mov
popf
pop
adc
outsl
flds
xchg
mov
or
idiv
icebp
xchg
or
dec
ja
cmp
and
lods
pop
push
sbb
sbb
cmpsb
push
ret
fdivl
xchg
sti
sub
hlt
sbb
jne
fnstenv
add
mov
push
jle
xor
std
fldl
add
sbb
insl
cmp
iret
mov
ret
xchg
addr16
inc
out
das
sarb
rorl
rolb
push
mov
dec
outsl
lahf
inc
add
mov
pop
xchg
and
xor
xchg
sbb
cmpsl
movsb
cmc
fsubp
lods
insl
pushf
repnz
sub
outsl
adc
mov
inc
lods
cmp
mov
mov
cmp
fists
adc
sub
dec
mov
mov
clc
gs
in
loope
sub
mov
in
scas
mov
adc
sbb
stos
dec
cmp
pop
fwait
adc
fimull
pushf
jns
adc
add
jo
lahf
sbb
mov
stos
xor
inc
push
adc
shll
add
aas
cmp
dec
jae
jbe
repnz
loopew
xor
mov
pop
inc
dec
push
test
ss
test
dec
loope
cmc
adc
mov
icebp
mov
and
in
mov
popf
hlt
in
test
mov
sarb
dec
pop
jb
push
aad
or
ret
loope
or
es
daa
lret
popa
outsl
xchg
in
xchg
pop
mov
roll
in
or
and
inc
pusha
cmp
inc
push
lret
mov
test
scas
out
rorb
xor
stos
sahf
shll
mov
fstps
sbb
cmpsl
ss
jl
call
aaa
pop
and
aam
mov
fdivs
je
xor
cmpsl
push
lea
mov
arpl
cli
stc
mov
mov
jns
xor
jbe
or
or
sub
mov
push
xchg
cmpsb
mov
popf
mov
and
push
or
das
or
push
lcall
cmp
mov
push
pop
mov
add
dec
push
call
inc
rol
pop
jns
into
fnstenvs
push
dec
pop
add
sub
add
push
decl
or
jge
ret
mov
pop
ja
cmpsb
andl
insb
cmp
daa
xor
xchg
push
inc
out
pop
lds
in
ljmp
mov
cmp
stos
or
fsubl
jge
mov
inc
mov
mov
inc
inc
push
dec
sbb
add
test
jns
cld
jmp
leave
not
or
movsl
mov
push
pop
dec
popf
aaa
fld
sbb
sub
xchg
jae
lret
aas
insl
in
aam
dec
lret
sub
adc
mov
xchg
pop
sub
inc
lock
cmp
lods
sbb
ljmp
int3
push
test
enter
mov
sbb
pop
mov
inc
dec
push
sbb
push
test
fadd
rolb
shrb
repz
xor
jo
sbb
push
insl
cmpps
adc
pop
xchg
inc
andb
mov
fisttps
or
repz
div
and
xchg
stc
ljmp
jl
cli
mov
adc
out
push
mov
inc
cmp
mov
add
xchg
add
repz
pop
jmp
stc
aad
jb
movsb
add
sbb
sti
adc
repnz
nop
xor
push
cmp
mov
outsl
or
jle
movsl
sti
fbld
out
jbe
push
loopne
xchg
movsb
fwait
jae
mov
pop
into
mov
xchg
fists
fnstcw
inc
push
out
xchg
jbe
or
mov
or
inc
sbb
pop
jecxz
xchg
add
dec
sbb
fnstsw
adc
push
lahf
rorl
popa
and
gs
es
cmp
out
mov
push
ss
or
xor
outsl
lea
ljmp
rclb
sti
xchg
std
mov
rorl
mov
dec
mov
dec
adc
xchg
pop
pop
mov
rcl
stos
xchg
sub
rolb
push
subb
mov
jno
stc
stc
in
add
cli
int
lret
fwait
xrelease
lods
int
adc
lds
aam
dec
mov
rcl
mov
dec
jle
cmp
negl
dec
bound
and
jmp
es
int
inc
push
add
sub
fldl
mov
sbb
movsl
inc
mov
pop
sub
fsubrs
call
aam
or
cmp
mov
jmp
gs
push
sahf
nop
testb
bound
popf
xor
jecxz
xchg
stos
add
scas
mov
sub
sub
inc
ret
jmp
mov
out
cltd
andl
push
mov
jge
cld
in
ja
sarb
add
stos
add
rcrl
scas
inc
lcall
gs
push
aad
pop
bound
add
inc
fisubl
stos
push
xchg
stc
outsb
aas
stos
ds
sub
cmp
loopne
and
jmp
das
mov
adc
insl
mov
loope
push
sub
sar
or
fsubs
jg
mov
stos
dec
pop
scas
adc
cmp
imul
ret
les
sbb
cmp
aas
mov
fistps
dec
mov
jb
dec
sbb
cmpsl
push
out
lods
cmpsl
cwtl
inc
dec
addr16
scas
rolb
repnz
ret
mov
sbb
sub
negl
xorb
dec
xor
cs
jg
fcoms
pushf
jmp
pop
dec
mov
mov
divl
shlb
mov
and
sbb
fs
xor
in
mov
call
or
xchg
xchg
sbb
ds
push
add
mov
inc
aaa
pop
in
fisubl
clc
dec
orl
mov
fcmovne
xor
push
hlt
dec
dec
rol
cli
push
outsb
setne
jb
or
jns
pop
xchg
xor
pop
sub
jb
fcomps
cli
jmp
cmc
and
pop
loopne
and
push
sub
jge
shll
cmpsb
movsl
sbb
ljmp
imul
cmp
icebp
lcall
dec
or
mov
cs
cs
sbb
jl
xchg
fmuls
push
imul
cmpsl
fwait
mov
and
adc
mov
push
inc
add
mov
int3
cmpsl
movsb
adc
adc
ljmp
pusha
daa
sbbb
insl
lods
push
adc
movsl
mov
fidivrl
call
sahf
sub
sbb
sti
or
adc
mov
cmpsb
mov
mov
xchg
and
inc
mov
cmp
xchg
loop
push
imul
adc
subb
scas
adc
adc
icebp
shlb
jne
cmp
aas
sbb
lea
and
jbe
fisubrs
popf
xor
pop
imul
xchg
stc
mov
in
aam
jmp
fnstcw
sub
test
adc
pusha
push
add
ljmp
adc
mov
shlb
jge
rclb
mov
mov
dec
fs
push
add
sub
xor
in
stos
push
aaa
xor
inc
inc
pop
icebp
in
xor
test
sarb
dec
pop
mov
lret
jp
jbe
jae
arpl
push
mov
adc
loope
test
fs
ds
std
push
xor
lods
sub
adc
scas
das
repz
lret
in
inc
push
mov
mov
repnz
and
jge
jns
les
fdivrl
dec
shrl
or
jle
or
out
icebp
cmp
push
jle
bound
jb
sbb
aam
mov
inc
mov
push
int3
push
inc
imul
sub
mov
sti
fistl
add
dec
pop
adc
fdivs
in
fcomps
shll
sbb
sahf
mov
add
in
inc
or
ja
mov
daa
int3
xchg
daa
push
pop
mov
shrb
cmp
push
mov
mov
inc
push
or
sub
xor
test
sub
leave
insl
addr16
scas
jo
ja
mov
mov
call
inc
cmp
stos
xchg
pop
dec
mov
sub
add
sub
les
pop
imul
push
adcb
cmp
cltd
mov
mov
adc
xchg
stos
enter
in
xchg
cld
mov
test
cmpsl
aam
out
nop
sub
or
cmpsl
les
push
or
cld
lea
cmp
mov
cmp
in
leave
dec
push
movsb
testb
movb
xchg
stos
sbb
push
dec
mov
sarb
gs
cs
sbb
jns
int
sbb
sbbl
lods
cmp
jns
pop
popf
dec
jnp
dec
pop
ret
xchg
jge
hlt
cmp
shlb
inc
dec
push
jmp
and
xchg
inc
jo
icebp
pusha
sbb
add
in
aaa
insl
inc
sub
mov
pop
test
mov
ror
ss
icebp
sbb
fiaddl
mov
push
mov
fnstenv
aad
sahf
adc
movsb
push
hlt
lods
fsub
ss
pop
sbb
cld
les
sahf
clc
in
and
lock
add
jae
rcrl
and
loope
outsb
aad
adc
cltd
mov
pop
pushf
jp
rol
add
or
mov
xchg
cmp
fildl
rcrb
pop
pop
cmp
add
pusha
andb
popf
lods
sarb
stos
jl
out
mov
jb
fcmovnbe
iret
xchg
data16
ljmp
mov
pop
dec
pop
inc
sub
loopne
jbe
and
sarl
pop
scas
jge
divl
dec
cmp
aas
sbb
push
fldcw
hlt
sub
bound
mov
xchg
dec
xchg
outsb
enter
push
push
loope
push
push
clc
jnp
cltd
fwait
xor
xchg
push
fidivrl
adc
leave
adcl
hlt
pop
rcr
stos
pop
sub
ret
gs
push
cmc
push
stos
jp
dec
sub
and
insl
dec
and
mov
ret
je
jne
inc
xchg
fdivs
xor
scas
ss
mov
jp
int
inc
pop
sub
leave
lods
mov
xchg
dec
xor
push
add
popa
add
push
jecxz
test
scas
popf
and
cmp
into
icebp
fwait
push
mov
in
mov
xchg
pop
mov
aad
aad
xor
das
movsl
in
xor
mov
cmp
inc
jbe
std
out
pop
mov
dec
call
jb
jge
ret
sub
in
jmp
outsw
pop
sbb
pop
dec
push
stc
inc
cmc
in
mov
push
ret
jge
aam
cwtl
out
xchg
mov
pop
pop
xor
xchg
sahf
repz
mov
sbb
adc
and
aaa
sub
jno,pt
pop
mov
sbb
dec
push
dec
imul
sbb
lret
push
lret
sti
divb
ror
enter
xchg
ljmp
cmp
nop
out
add
int
mov
dec
insb
jge
mov
dec
push
mov
popf
cmc
aas
xchg
in
lret
in
call
jg
sub
dec
and
cmpsl
leave
and
sbb
addr16
andb
inc
jne
nop
mov
add
fs
movsl
in
aad
mov
mov
pop
icebp
repnz
test
lcall
sbb
xor
mov
loope
fldl
cltd
xor
xor
sbb
je
add
adc
rolb
cli
xlat
loope
fistpl
dec
push
and
jg
add
cmp
aad
sahf
mov
out
stos
in
fdivr
sub
leave
test
dec
pop
sbb
out
xchg
rcrb
sub
outsl
test
ss
cwtl
rorb
and
fstcw
into
repnz
mov
push
faddl
cmpsl
dec
pop
and
pusha
fisubs
jle
dec
fwait
mov
adc
imul
dec
sub
mov
jg
inc
in
sub
inc
je,pt
adc
jl
mov
repz
push
stos
push
or
sete
mov
imul
push
xchg
scas
xor
pop
sbb
jp
inc
xor
mov
lret
sbb
xor
push
xchg
clc
push
lock
shrl
inc
aaa
mov
sub
push
sti
stos
loopne
adc
dec
sub
xchg
les
mov
adc
out
test
sbb
jns
dec
ds
sub
fnsave
mov
sub
aam
push
xor
mov
mov
fistpl
filds
and
cld
ret
push
loope
dec
jmp
sub
dec
cmp
mov
cmp
lret
and
sbb
add
mov
lea
adc
xor
mov
mov
stos
xlat
dec
jnp
jo
test
xchg
pushf
pop
shrl
xchg
add
sbb
into
and
xchg
nop
cs
mov
lds
or
xchg
jns
cmovp
jmp
sbb
leave
and
ficompl
outsb
or
aam
mov
sub
std
xlat
daa
sbb
jp
scas
inc
inc
movsb
mov
out
cmp
jg
ds
movb
sbb
pop
and
jne
push
xorl
push
pop
push
scas
xchg
rolb
inc
jnp
mov
imull
pushf
subl
movsb
and
sbb
push
mov
test
lcall
and
rep
pop
mov
mov
dec
pop
imul
punpcklwd
outsl
out
dec
xor
xchg
push
or
xor
mov
gs
lods
sahf
mov
xor
das
repnz
mov
bound
outsb
pushf
les
pop
pop
sub
sub
sub
imul
incl
dec
sbb
mov
dec
inc
jmp
sbb
pop
dec
in
out
scas
int
out
adcb
or
filds
inc
dec
mov
push
mov
iret
dec
fcoms
lods
adc
add
or
sti
mov
jmp
ljmp
inc
pop
call
data16
popa
xchg
cmc
sti
xor
mov
orl
ljmp
ja
and
xor
sub
pop
nop
jb
mov
shr
jge
adc
jbe
add
or
xchg
ret
mov
rcrb
into
sbb
push
cmc
jmp
mov
sbb
in
xchg
jle
jae
add
jo
aam
lds
vmread
jle
je
sti
orb
push
mov
sbb
jns
or
push
inc
mov
int3
arpl
ss
in
pop
fcomip
dec
negb
mov
push
ret
outsb
jb
jmp
call
xchg
lcall
fucom
and
jle
mov
imul
movsl
test
shlb
xor
fmulp
test
in
test
dec
pop
lcall
scas
fists
aad
icebp
mov
loopne
xchg
dec
popf
lahf
dec
outsl
mov
ret
roll
jmp
dec
xchg
mov
shll
cwtl
stos
les
sbb
push
test
pop
mov
into
mov
mov
out
pop
iret
icebp
js
mov
xchg
testl
sbb
jb
dec
pop
orb
xor
sarb
mov
pop
sub
adc
adc
cld
pushf
fisttpl
insb
andl
jne
push
aad
add
jge
fcomps
jge
push
mov
xor
jnp
fsubrs
push
loope
fwait
out
xchg
int3
or
outsb
or
mov
xchg
adc
xchg
and
cmp
mov
rcrl
dec
pop
sar
arpl
mov
inc
jp
pushf
shlb
jmp
fidivs
push
jno
add
cmp
jbe
roll
std
rorb
push
mov
and
or
pop
mov
popa
push
scas
mov
sbb
fisubrs
mov
jns
fimuls
ja
xlat
mov
test
js
iret
xchg
int
mov
xchg
loopne,pn
cmp
xor
push
mov
xchg
pop
cltd
clc
mov
sarl
test
inc
jge
mov
add
and
pop
call
gs
sbb
testl
jnp
and
popa
mov
je
sarb
fcoms
das
ret
pushf
jne
cmc
mov
out
test
pushf
or
pop
push
lahf
mov
push
ljmp
int
sub
shrb
insb
push
test
mov
dec
out
incl
push
popf
xor
scas
dec
mov
dec
cli
pop
mov
lea
jge
hlt
rorl
adc
ret
scas
dec
add
push
pop
lods
mov
or
xor
daa
mov
fmul
fistl
mov
mov
cmc
mov
jno
jbe
scas
test
cmpsb
sbb
into
testb
cltd
push
push
fimuls
sbb
sbb
out
jge
enter
dec
cmp
xchg
btc
daa
fisubrs
jno
xchg
or
out
call
inc
hlt
lods
out
pop
inc
mov
daa
cmpsb
pushf
pop
push
push
pop
sub
es
out
pop
mov
mov
arpl
and
xorl
mov
and
andb
pop
xor
adc
pop
push
push
cmpsb
jnp
and
leave
test
dec
daa
cli
cli
or
jne
inc
cmp
mov
unpckhps
cmc
jno
sbb
aaa
or
test
or
das
ljmp
xor
cmovb
inc
scas
shll
cmp
adc
out
arpl
fisttpll
int
mov
mov
in
push
cmp
icebp
xlat
roll
rclb
sub
sub
or
push
lock
sti
test
mov
mov
fstps
pop
pop
repnz
fidivrs
mov
rcll
mov
adc
adc
mov
imul
icebp
int3
xor
xchg
mov
mov
std
movsb
stos
hlt
paddd
cmpsl
aad
adc
xchg
decb
xor
push
xchg
ror
dec
test
xchg
ret
daa
dec
sbb
sahf
sahf
xchg
or
push
cmc
fs
popf
xchg
fdivrp
add
push
and
mov
pop
mov
sub
push
shll
cmp
pop
mov
inc
gs
jns
xor
icebp
jp
es
loop
fsts
mov
xchg
or
mov
or
or
std
dec
std
sbb
and
push
sbb
sub
xchg
dec
test
stos
or
shlb
mov
mov
ljmp
ret
je
in
dec
mov
outsl
sbb
jp
jnp
jns
mov
incl
cmc
and
out
push
std
jnp
xchg
adc
and
in
fxch
in
pop
rolb
mov
out
cmp
xlat
sbb
or
add
sti
fiaddl
aad
adc
loope
repz
mov
push
cwtl
add
inc
jmp
testb
in
cmp
pop
int3
test
rcrl
sbb
adc
in
push
mov
lea
and
lret
jle
hlt
fisttpll
stc
lahf
mov
sbb
movsb
bound
rolb
cli
push
ror
fisubl
pcmpeqd
and
enter
xor
push
jp
pop
lods
or
mov
mov
stc
pop
mov
shrl
addr16
sbb
rol
jle
mov
insb
and
je
or
mov
adc
enter
out
sub
into
jmp
out
lock
cmp
mov
shll
mov
jno
sbb
push
sub
stc
inc
fnsave
cltd
pop
jle
rcrb
out
lcall
and
sub
dec
inc
push
xchg
sub
xor
pop
not
into
repz
add
xchg
idivl
mov
push
cmp
xor
and
loopne
int
lods
fdivrs
mov
repz
in
mov
push
mov
mov
sbb
cs
and
mov
push
xchg
fdivr
stc
cmpl
cmpsl
inc
repz
shll
cmp
cmp
stos
mov
in
lcall
adc
in
in
jge
fwait
cmpsl
inc
inc
fbld
xor
sbb
aaa
sub
lret
mov
xlat
push
dec
add
addr16
imul
push
or
lods
loop
mov
cmp
pop
outsl
xor
shlb
jecxz
xchg
mov
pop
in
lods
into
cmp
dec
repnz
jecxz
dec
inc
xor
shl
aad
jns
sbb
cmp
dec
cld
out
out
or
add
test
jb
addr16
mov
dec
sbb
enter
scas
jno
ds
ss
aaa
out
lcall
fsubrl
mov
sarb
clc
in
xor
pop
sub
lods
push
jb
jecxz
dec
push
rorb
out
mov
pusha
xchg
mov
or
pushf
loope
adc
ja
pushf
imul
add
mov
fisubrl
popa
push
adc
mov
push
mov
test
and
movsl
xchg
dec
cmp
dec
xor
dec
mov
loop
stos
test
movb
insb
into
cmpsb
rcr
pop
or
and
stc
pusha
cmpsb
test
icebp
imul
iret
mov
adc
and
adcb
mov
jne
adc
shrb
pop
les
jb
mov
push
loop
int3
cmp
cvtps2pi
repz
push
xchg
addr16
js
pop
mov
sti
movsl
dec
test
push
lods
fwait
mov
pusha
adc
dec
lods
inc
cwtl
sbb
sub
adc
loopne
xor
push
adc
les
hlt
mov
bound
jp
or
jbe
sti
inc
xor
addr16
int
fnstcw
xchg
fwait
sbb
cmpsb
das
inc
sarl
xchg
das
stos
sub
inc
xor
cmp
fimull
push
icebp
into
sub
jg
scas
jno
cmp
test
or
or
xor
cmp
sub
aaa
movsl
popf
shrb
imul
mov
inc
ret
test
xchg
push
mov
es
mov
jle
sahf
fimuls
push
jle
pop
ret
movsb
js
push
stc
mov
cmp
lcall
ljmp
sbb
xor
rclb
fwait
mov
adc
sar
dec
pop
nop
or
pop
jnp
repnz
test
adc
push
inc
repnz
xchg
ret
sbb
into
dec
mov
pop
pop
test
mov
std
aam
and
pushw
sbb
data16
fdivrl
push
push
or
mov
insb
int
dec
jno
aaa
mov
mov
push
adc
test
jg
repz
fstpt
imul
push
call
inc
outsl
cld
lock
imul
adc
jg
cmc
sub
dec
fcmovnb
repnz
mov
iret
or
out
pop
shl
dec
xor
pop
mov
out
adcl
arpl
movsb
out
sbb
mov
sbb
daa
inc
movsl
scas
fisubl
xchg
add
adc
into
fstpl
ret
push
xor
sbbl
mov
aaa
sub
mov
imul
iret
sub
cli
clc
ret
rol
mov
and
orb
outsb
test
or
and
cmp
jno
es
add
mov
testb
imul
mov
push
dec
pop
xchg
stos
xchg
jb
and
mov
mov
mov
cmp
fidivs
fwait
add
jno
mov
mov
or
sahf
push
jge
je
nop
mov
outsb
mov
jg
repz
xchg
jg
sbb
popf
cli
sbbb
mov
fs
std
sub
aad
or
or
inc
dec
mov
lods
and
adc
sub
pop
shlb
shl
lret
popa
dec
cli
add
aaa
out
fistpll
pop
dec
mov
lock
mov
mov
push
xchg
cli
stos
je
jno
inc
xor
jae
xchg
jmp
mov
into
mov
std
repz
std
and
test
mov
shr
and
pop
adcl
push
in
jecxz
sbb
inc
and
pop
inc
es
aam
mov
sub
idivb
in
fstp
xchg
data16
or
xlat
int3
mov
xchg
leave
out
out
add
stos
out
cmc
sub
aas
mov
push
fwait
iret
push
jl
test
sahf
mov
mov
sarb
lret
mov
imul
push
addr16
sarl
adc
gs
shll
outsb
fimuls
or
jns
push
jmp
cmpsb
inc
popf
inc
and
and
bound
addl
dec
pop
mov
adcl
out
daa
and
inc
xlat
iret
mov
pop
push
pop
inc
mov
std
mov
dec
cwtl
aad
add
mov
jge
cmc
mov
and
std
cli
adc
push
and
adc
jbe
cmpsb
dec
xor
mov
lcall
cli
dec
mov
or
or
mov
negl
add
cmp
shrb
jge
call
out
or
mov
mov
xor
pop
pop
push
test
inc
pop
inc
xorb
push
mov
out
xchg
pop
adc
je
popa
lahf
rcrl
int
push
cmp
and
movb
sub
cmc
or
and
rolb
negb
or
mov
mov
test
mov
sub
call
daa
lods
aam
in
jmp
dec
jmp
cmp
dec
xchg
es
int
add
mov
pop
inc
jg
sarl
cmp
jle
mov
xor
and
jle
imul
pop
dec
das
jl
sbb
xchg
shr
jo
add
hlt
sbb
leave
repnz
mov
hlt
cmp
in
push
push
mov
and
lret
sbb
loopne
cwtl
mov
push
sub
sbb
movsb
ds
popa
pop
aaa
xchg
add
stc
jecxz
test
and
adcb
inc
sub
jo
pmulhw
addb
leave
test
push
mov
inc
ficomps
iret
stc
data16
and
sub
or
lea
fsubl
and
dec
xchg
xor
arpl
xchg
push
push
xor
dec
jp
push
pop
mov
adc
scas
lea
jb
lret
cmp
sti
xchg
xor
out
inc
xchg
xchg
int3
jg
out
sub
push
stos
dec
push
mov
lock
in
add
fistps
stos
and
dec
cli
cmpsb
movsw
push
xor
add
ret
test
ja
mov
cli
jge
mov
mov
sub
pop
sti
arpl
mov
or
call
and
sub
adcl
ds
pop
enter
fidivs
scas
pop
mov
push
lret
dec
ds
int
mov
push
stos
int3
inc
and
lock
dec
xor
enter
lcall
scas
std
mov
daa
lods
or
inc
sti
in
cmc
and
jge
xor
andb
sub
int3
iret
dec
mov
pop
jno
aad
arpl
iret
fstps
decb
movsl
inc
test
in
pop
scas
mov
cli
pop
mov
or
jae
insl
leave
ljmp
stc
mov
mov
or
bound
insl
int
xlat
mov
mov
sahf
jo
mov
jecxz
ret
add
mov
cmp
xor
xchg
pop
jbe
cmpsb
or
inc
outsl
cmp
cli
fildl
jb
stos
or
xor
scas
mov
xchg
pusha
push
xchg
fcompl
popa
xor
shll
movsl
adcb
jp
dec
ds
je
xor
mov
aad
sub
xor
popf
mov
sbb
push
negb
fucomip
aas
js
push
stos
lcall
fcomp
add
mov
les
mov
jae
mov
push
push
repnz
cmpsb
repz
fwait
test
repnz
adc
aam
xchg
ss
icebp
test
xchg
je
aas
adcb
aam
aas
aam
lods
icebp
cmp
pop
pop
mov
push
int3
sub
pushl
sbb
cmp
lods
dec
sub
arpl
sub
into
pop
dec
pop
jno
adc
popf
popa
jmp
mov
movsb
cld
in
sbb
ljmp
gs
insl
or
lahf
jecxz
aaa
movsl
mov
movsb
stos
je
push
inc
hlt
and
int3
out
loopne
scas
lock
xor
aaa
mov
outsb
js
out
sarb
mov
iret
lock
shrl
lcall
sub
popf
sbb
push
test
or
ss
or
pop
ret
fcomps
mov
jns
jbe
cmpsl
add
jns
mov
jecxz
or
fildll
addr16
inc
pop
xor
insb
mov
ret
rclb
push
sub
aaa
pop
aaa
cmpsb
and
sub
mov
pop
outsl
insb
mov
lret
inc
test
jbe
sub
and
fisubs
or
xchg
gs
sbb
xchg
push
pop
out
xchg
sub
push
xor
add
xor
inc
cmp
mov
or
iret
jle
aad
mov
les
lods
pushf
fldt
dec
xor
pop
inc
movsb
cs
sub
mov
inc
mov
inc
jnp
out
dec
xor
xor
dec
ja
ficompl
mov
push
in
testl
or
lods
mov
cmpb
mov
out
cs
das
cmp
aad
or
push
inc
mov
sbb
icebp
push
mov
les
inc
iret
js
fidivl
push
and
lret
fistpl
push
test
xchg
arpl
cld
fstpt
loopne
aam
pop
mov
js
cld
push
jns
ljmp
ljmp
fldl
sbb
loopne
pusha
cmc
or
sahf
push
shll
dec
xchg
pop
in
add
mov
insl
dec
xor
sbb
shll
dec
pop
dec
mov
mov
mov
add
in
ja
mov
pop
sahf
mov
or
pop
fs
int3
jns
test
call
pop
out
daa
pop
push
gs
sbb
pop
mov
add
lock
ljmp
loop
mov
jnp
pop
loop
out
or
mov
cmc
ss
lods
jnp
sbb
adc
sub
shll
ljmp
aaa
sub
mov
es
pop
pop
in
mov
dec
add
ret
stos
pop
pop
fiaddl
adc
fnstenv
dec
pop
lock
cld
jge
inc
lret
in
loop
and
inc
sbb
push
sahf
fidivs
loope
in
mov
sub
xlat
orb
stos
adc
adcl
jo
stos
and
xchg
dec
mov
sbb
mov
mov
test
inc
pop
dec
cli
mov
jmp
lock
xchg
pop
push
lret
cmp
pop
pop
mov
dec
push
sbb
push
sbb
mov
mov
lcall
mov
or
xchg
cmc
adc
cltd
cmp
pushf
int
mov
push
cmpsl
jne
mov
pop
imul
xchg
jbe
lods
inc
imul
or
addb
xor
push
aad
sub
sbb
in
jecxz
pusha
std
pop
xchg
shlb
xlat
sub
sbb
or
movsb
xchg
scas
sub
data16
or
in
jle
aaa
test
push
mov
insl
inc
dec
push
mov
dec
sbb
and
out
jge
test
stos
negl
stos
sti
jecxz
rcrl
lret
inc
xor
out
ret
hlt
je
mov
mov
sbb
jnp
jmp
sub
push
inc
push
xchg
mov
rcr
xchg
in
jp
mov
nop
dec
sub
lds
orl
pop
dec
sub
loop
mov
add
push
or
xor
ret
mov
inc
decl
or
mov
addb
adc
ficomps
pop
push
or
dec
insb
rcrb
jns
dec
jns
lods
cmc
leave
jge
cwtl
adc
or
push
mov
mulb
xor
int
js
orl
lea
jle
push
cli
fcoms
mov
inc
rorl
jge
in
hlt
mov
popa
cli
xchg
popa
cmp
sub
aam
cwtl
cld
into
aad
dec
inc
iret
sarb
addr16
inc
add
inc
add
push
cmpsb
fistl
pop
addb
add
mull
scas
movsb
push
or
loop
and
cmpsl
cwtl
sub
cmp
pop
jbe
pop
add
fiadds
enter
andb
movsl
push
cmp
sahf
mov
repnz
aad
outsl
jo
roll
cmp
mov
idivl
xchg
push
out
or
stos
push
aas
testb
xor
stos
inc
mov
pop
sub
divl
je
push
lea
sub
mov
test
pop
lods
adc
ret
loopne
sbb
les
fnstsw
sarb
in
jnp
js
mov
jmp
push
in
popf
sub
adc
stos
push
aaa
outsb
out
decl
fstl
push
sbb
lods
xchg
push
cs
xchg
jmp
in
or
icebp
adc
sbb
scas
movsl
in
and
jecxz
rorl
jo
sarb
xchg
sub
jns
cmp
data16
jmp
pop
mov
popf
mov
adc
inc
lds
push
pop
jge
enter
mov
inc
sub
mov
mov
imul
sub
jmp
xchg
popf
mov
mov
shl
fnstsw
clc
push
and
push
and
cmp
sub
push
mov
call
test
and
inc
or
and
pop
out
iret
scas
popf
popa
sti
pop
sbb
inc
ror
xchg
cmp
js
dec
or
mov
cmp
sub
sbb
sbb
je,pn
or
jle
outsb
add
dec
fstpt
jge
mov
lods
xchg
cli
jb
pop
je
cli
out
jnp
das
mov
jnp
pop
dec
mov
pminub
std
mov
fimuls
dec
inc
aaa
loope
mov
lret
jg
iret
fldcw
sub
or
xchg
sbb
notb
jl
insl
loope
mov
mov
repnz
dec
dec
or
pop
dec
fiaddl
add
scas
fs
cs
xchg
push
fwait
cmp
call
ss
out
pop
jo
add
fildll
mov
inc
inc
out
mov
and
pushaw
mov
rcl
inc
es
test
dec
aam
push
clc
fisttps
out
cmp
push
and
and
stos
sub
and
jo
psubw
loop
out
jo
icebp
push
in
or
insb
sbb
mov
xor
mov
movsb
enter
cmpsb
pop
jge
outsb
jo
mov
icebp
sbb
sub
dec
setg
daa
add
jmp
lcall
xor
jmp
movsl
lret
inc
lods
adc
xor
mov
adc
cmp
scas
cwtl
mov
jg
adc
incb
inc
xor
cmp
mov
xchg
pop
cli
jmp
repnz
test
into
xchg
xchg
nop
or
in
lret
mov
dec
jp
movsl
push
sbb
jge,pt
sub
pop
ret
jnp
sti
outsb
cmp
pop
loopne
scas
mov
imul
cmpsl
jae
sbb
xor
test
ljmp
or
cmp
lcall
orl
jns
sbb
test
push
push
dec
jmp
jns
dec
jae
cwtl
mov
jo
mov
fstpl
mov
test
xlat
test
sbb
lcall
in
mov
jl
call
sub
test
mov
subb
inc
leave
pop
int
sbb
ret
lret
cld
xchg
loope
pop
imul
imul
cmp
outsl
mov
sub
je
xchg
jecxz
in
fisubl
push
push
adc
out
pop
jae
mov
xchg
aad
andl
int
ret
popa
ja
add
fmuls
popf
xor
fnstcw
aam
daa
decb
push
mov
testb
mov
and
sbb
mov
xor
mov
rcrl
dec
lret
clc
fcompl
mov
je
jmp
fwait
gs
imul
inc
mov
shrl
rorb
sbb
xor
rorl
jbe
dec
push
or
stc
push
clc
sti
loop
or
sub
cmp
bound
pop
adc
adc
enter
xchg
loop
sub
add
cmp
flds
sub
pop
mov
mov
shl
icebp
scas
mov
mov
xor
pop
pop
aad
out
inc
xlat
xchg
xchg
pusha
inc
push
fcmovb
inc
push
andl
jnp
js
or
cmp
and
mov
xor
ficomps
sbb
push
fstpl
je
or
adc
sub
lds
addr16
out
xchg
test
loopne
mov
imul
mov
mov
pop
jae
sti
push
xchg
fsubs
in
stc
lods
lcall
add
sbb
dec
adc
pop
sbb
adc
idiv
cmp
mov
fstpl
fwait
cwtl
insb
xchg
jp
adc
lahf
test
adc
pop
dec
movsb
sbb
adc
iret
xor
es
cs
fwait
mov
mov
pop
or
out
or
mov
mov
push
xchg
pop
cmp
mov
fisttpl
in
push
sbb
sbb
gs
adc
rolb
scas
push
orb
std
cltd
pop
push
push
mov
pop
fnsave
cmp
xor
adc
sub
arpl
inc
add
movsl
cmpsl
decb
push
cmc
lock
popa
xchg
pop
es
shl
mov
xor
daa
les
xchg
mov
scas
push
mov
mov
fstp
jne
sbb
xor
push
lahf
std
xor
insb
ss
pop
pusha
add
scas
pop
or
cmp
xorb
inc
cli
in
dec
stos
aam
dec
ja
iret
cmpsl
push
hlt
mov
xchg
xor
out
in
mov
mov
adc
mov
das
jb
rcl
pop
ja
jecxz
sbb
mov
dec
xor
mov
data16
pop
dec
scas
cmp
pop
outsb
ja
pavgw
fdivs
fstl
push
cmc
scas
mov
push
dec
mov
fdiv
jb
jo
xchg
lock
movsl
pusha
jnp
dec
hlt
push
aaa
movb
shll
mov
add
mov
lcall
in
inc
sbb
mov
ja
cmp
stos
insb
loopne
jl
jle
sub
jmp
sahf
sarb
imul
lea
stc
addr16
push
xor
sub
pop
ja
in
sub
arpl
lds
jnp
fcmovne
mov
stos
cmp
insl
and
and
xchg
and
iret
jbe
ds
out
pop
test
dec
sub
imul
es
imul
int
inc
clc
mov
fs
mov
cmp
pop
jp
sub
or
xchg
push
inc
sahf
adc
lret
cmp
popa
mov
sub
inc
adc
loop
sbb
mov
push
jle
testb
imul
mov
xor
rol
sub
pop
pop
push
add
imul
hlt
stos
sub
and
push
popf
pop
mov
imul
call
out
mov
jle
or
xchg
ror
pop
push
nop
cld
fidivs
or
inc
sahf
cmp
mov
outsl
push
scas
push
inc
lea
jmp
add
or
cmpsb
mov
sbbl
icebp
and
jmp
mov
jno
add
lcall
cmp
mov
mov
rolb
jnp
lcall
dec
js
sahf
pop
jo
ds
call
aam
add
or
loop
icebp
push
xor
mov
in
mov
or
out
imul
call
push
cltd
mov
fcoml
cmp
sub
jecxz
notb
cltd
xor
repnz
dec
xor
cmp
iret
inc
cld
iret
in
popl
incl
xchg
inc
ds
call
in
xchg
mov
pop
jbe
adc
imul
loopne
js
addb
aam
pop
dec
sub
stos
loop
ficoms
xor
jmp
mov
mov
push
xor
mov
adc
testl
pop
cmc
inc
rcl
cmp
inc
mov
inc
lcall
xor
push
bound
data16
xor
push
push
in
mov
push
mov
cltd
arpl
push
xchg
test
xchg
jp
clc
gs
sub
insl
test
test
sbb
mov
cmp
jne
xchg
int3
je
xchg
pusha
pop
mov
cltd
insl
std
xchg
jo
in
test
push
divb
andb
jl
xchg
pop
xorb
mov
adc
mov
iret
leave
xchg
mov
dec
addl
pop
sub
hlt
pop
dec
and
clc
test
push
inc
and
outsl
inc
sti
adc
notl
mov
push
insb
in
adc
sbb
inc
imul
or
xor
mov
ficoms
push
xchg
cmc
cmc
dec
frstor
adc
cmp
adc
mov
icebp
inc
out
jmp
jle
jae
cltd
out
pop
mov
cli
icebp
add
cmp
sub
out
cmc
pop
fcmove
mov
inc
adc
sub
mov
sbb
loope
pop
ret
jmp
adc
cmp
icebp
sub
xchg
rol
sub
cmp
jecxz
or
sahf
xlat
xchg
xchg
js
add
nop
test
add
fcmovnb
xchg
clc
pop
sub
jno
out
cwtl
cmp
popa
pop
movsl
or
pusha
cmpsb
push
mulb
test
jno
mov
cmp
cmp
scas
xchg
imul
faddl
and
pop
sbb
pop
mov
test
popa
je
arpl
fstps
add
enter
dec
cmp
inc
sbb
mov
mov
pop
pop
dec
jnp
in
or
jg
inc
arpl
test
add
jbe
popf
mov
dec
enter
roll
jns
dec
std
outsb
jp
daa
or
cmp
dec
cmpsb
fstpt
jbe
jae
cmp
test
andb
or
das
mov
out
push
aaa
repz
cld
lea
dec
adc
sbb
sbb
pop
in
cmpsl
ss
js
es
pusha
out
stos
js
test
scas
std
xor
in
lcall
in
testl
add
sbb
int
ja
add
pop
std
aas
movsb
pop
fisttpl
jmp
mov
shr
les
outsb
lock
and
jo
xor
adcb
test
in
adc
repnz
jne
xchg
sbb
push
adc
scas
sbb
xchg
sub
dec
je
into
jle
dec
outsl
pop
and
xor
pop
or
cltd
push
cmp
xor
int3
cmp
jg
mov
sub
add
xor
testb
or
xlat
inc
lods
mov
and
push
sub
mov
out
sbb
enter
into
mov
sub
adc
push
mov
pop
mov
popa
loop
loop
xor
sbb
outsb
jb
dec
fcmove
ja
push
push
mov
cmp
push
cmp
lea
out
jle
adc
dec
or
mov
rcr
pop
in
or
in
cwtl
mov
lret
sub
ds
and
shl
pop
divl
popa
rorb
bound
aas
into
inc
in
lret
in
loope
mov
decb
or
popf
lods
push
outsb
int
xor
lods
xchg
in
bound
scas
pop
cmp
ret
jg
xchg
out
movsl
and
xor
in
dec
pop
xlat
loopne
pop
xchg
add
test
repz
sub
and
jb
lcall
mov
jno
lret
shll
sub
adc
ljmp
mov
fldenv
adc
xchg
jns
scas
jecxz
scas
dec
mov
lret
jo
add
xchg
push
ret
clc
inc
repnz
mov
sbb
cltd
pop
arpl
fdivl
fbld
js
test
jle
scas
sub
dec
js
fwait
mov
lahf
lods
jns
hlt
fistl
adc
pop
or
inc
stc
push
sub
fcom
das
push
in
hlt
out
adc
fimull
mov
inc
dec
adc
add
and
lock
shll
repnz
mov
shrl
movsl
arpl
inc
jg
rolb
cmp
clc
xchg
sub
repnz
lea
dec
jp
inc
in
sub
jbe
lods
sbb
pop
and
test
mov
mov
xor
daa
mov
and
or
popa
pop
xor
imul
jns
push
pop
sub
adc
xor
imul
mov
push
scas
mov
iret
mov
sub
dec
rorb
lret
adc
push
divb
pop
subb
cmp
lcall
pop
push
inc
enter
pop
pop
mov
pop
mov
lret
mov
fs
and
inc
test
mov
push
lahf
mov
sti
add
repnz
stc
std
sub
cmp
lahf
rorb
push
jbe
add
outsb
sub
fwait
and
fldt
shl
sub
sub
sbb
xchg
call
outsb
lds
inc
or
inc
in
sbb
daa
ds
sahf
pop
andl
ret
les
movsb
and
je
dec
mov
es
into
or
lea
addb
aas
in
mov
roll
fwait
adcb
sub
or
lock
sub
dec
pushf
arpl
stos
fstps
jp
cmp
dec
das
sub
jo
push
mov
fldcw
ds
adc
gs
fwait
test
jns
jnp
test
jl
lods
and
mov
addr16
pusha
xchg
popa
sub
scas
and
lret
lcall
push
icebp
lds
adc
stc
aad
sub
pop
push
xchg
sbb
jae
pop
pop
int
imul
jnp
outsl
ljmp
mov
lock
out
inc
jnp
inc
adc
test
mov
shlb
sahf
and
ljmp
gs
dec
aad
xor
loope
mov
stos
leave
pop
sbb
mov
repz
insb
add
or
cmp
lret
fwait
xchg
stos
aad
test
jb
pop
insl
out
out
shlb
arpl
jns
aaa
mov
in
mov
mov
xor
imull
cmp
flds
sbb
lret
push
fwait
in
fists
jns
mov
pop
addr16
icebp
push
mov
add
sub
jecxz
mov
adc
mov
fwait
cs
imul
repz
mov
dec
sbb
xor
xchg
push
jl
xor
gs
stc
in
push
pop
mov
loop
int
fucomi
aaa
in
adc
movsl
movsl
add
aam
inc
mov
int
aad
lea
jns
xchg
xchg
scas
inc
lods
sbb
sub
mov
fwait
sbb
adcb
out
mov
into
lock
loope
mov
fistl
sbb
rcll
dec
cld
adc
insl
out
test
lods
aas
xor
out
and
push
outsl
lea
ds
mov
lcall
jg
sub
out
add
lret
roll
ljmp
ljmp
jno
xchg
inc
stos
scas
sahf
jl
adc
jg
sub
pusha
push
jne
or
cmp
mov
cmc
xor
or
or
mov
inc
aas
mov
fsubs
icebp
pop
outsl
mov
ds
adc
sti
lock
cld
rcl
roll
lods
lcall
aam
jg
pop
mov
dec
jno
cmp
mov
repnz
xorl
xor
sbb
out
and
inc
push
jno
push
inc
lock
clc
std
or
cmp
arpl
data16
jecxz
aam
mov
cmp
roll
fld
cmp
xchg
pop
dec
mov
xchg
enter
aas
mov
or
pop
xorb
xchg
mov
sbb
leave
add
mov
stos
enter
cmc
jae
mov
mov
test
sbb
hlt
add
inc
inc
and
mov
xor
aam
cmp
out
out
or
xor
add
xchg
xor
jns
mov
jmp
popa
xor
or
roll
push
aaa
cli
sahf
inc
dec
push
jg
stos
cmp
shrl
fldt
cs
push
xchg
mov
loop
rcr
test
fxch
cld
push
pop
mov
les
dec
rcrl
adcl
pop
sbb
das
push
dec
into
test
sahf
cmp
push
mov
or
test
int3
out
xlat
pop
dec
xchg
mov
sbb
sbb
or
cmp
mov
int
push
inc
and
in
jno
cmp
testb
and
adc
xor
mov
in
sub
jnp
sub
jp
nop
cmp
or
or
aas
adc
popa
sarb
jno
js
xchg
dec
cli
sbb
and
xchg
mov
inc
jp
int3
icebp
mov
lock
popf
cwtl
pop
leave
sti
and
outsb
scas
frstor
leave
icebp
add
xchg
pop
xor
lock
jecxz
jmp
xchg
xor
pop
mov
mov
and
sbb
add
mov
pop
cmp
js
mov
fcomp
xor
xor
sub
xchg
pop
adc
inc
dec
jae
outsb
inc
je
aas
or
fadd
into
fidivs
cmp
sti
lahf
or
xor
sbb
jae
xor
iret
ret
mov
lcall
push
push
out
movb
cmp
movsb
xchg
cmp
and
loop
and
lret
imulb
pcmpgtd
std
pop
mov
dec
sub
fistl
pushf
jne
mov
mov
popf
dec
shrl
lret
ss
mov
testb
jp
enter
test
das
ficoms
aad
xchg
sub
pop
rcr
adc
pop
bound
ret
in
dec
aad
sub
or
fistpll
mov
cld
pushf
cmp
bnd
xor
mov
cmpb
dec
cmc
fldt
add
pop
in
and
int3
das
pop
cmp
ja
aas
gs
inc
and
xor
loopne
add
mov
filds
fnstcw
sub
mov
lods
dec
les
aam
xchg
add
lcall
arpl
and
mov
pop
insl
mov
cmpl
xor
cltd
jp
mov
adc
leave
rcr
mov
jbe
hlt
push
mov
inc
stc
sahf
dec
out
rcll
dec
ds
ret
push
jo
test
scas
sbb
dec
sahf
andb
xchg
fstps
subl
push
mov
sbb
mov
mov
fwait
sbb
cmp
das
ja
and
xchg
add
test
ss
ss
pop
out
lods
push
and
push
mov
push
or
xchg
outsb
jns
mov
ja
orb
or
imull
fwait
dec
xchg
dec
out
add
sbb
push
popa
nop
std
rolb
or
movsb
out
xchg
imul
inc
mov
les
push
mov
cmp
stos
mov
jg
cmc
sub
scas
inc
pushl
frstor
xor
cs
dec
out
adc
filds
mov
clc
mov
inc
mov
ret
pop
mov
negl
mov
out
fs
add
sbb
push
sbb
in
je
adc
adc
dec
pop
mov
mov
pop
loopne
jmp
or
pop
dec
adc
mov
cli
or
push
gs
lea
and
push
jg
xchg
cmpsl
mov
xor
adc
outsl
mov
lcall
jmp
jae
xor
push
pop
inc
or
mov
in
rcl
push
push
mov
stos
mov
sub
pop
push
lds
cld
xchg
mov
nop
fcoms
add
push
push
popl
sarb
cmp
pop
sbb
test
jne
iret
and
ret
mov
jmp
mov
mov
pop
stos
and
cld
xchg
cltd
mov
scas
jecxz
leave
sub
jae
fs
cmp
aad
das
sub
dec
data16
inc
movsb
or
insl
lds
cwtl
adc
push
inc
into
loope
jnp
pop
add
gs
pop
sbb
lea
int
xchg
sbb
or
xchg
xchg
jb
fistpll
pop
pop
mov
push
mov
iret
lret
aad
jns
jp
mov
movsb
int3
push
or
and
push
mov
dec
jp
jne
es
rcrb
fmull
jmp
sbb
cld
fwait
push
mov
add
cmp
loop
rcll
jns
clc
in
mov
dec
sub
add
in
test
subb
mov
jo
add
add
sub
xlat
mov
lock
pop
sbb
push
add
jmp
popa
imul
dec
dec
cmp
xchg
pop
jbe
mov
xor
mov
jle
leave
pop
cmp
xor
push
pop
test
pop
add
enter
pop
dec
mov
ds
mov
mov
jmp
pop
inc
mov
adc
out
shll
shll
mov
adc
xchg
lahf
jge
inc
mov
leave
jnp
jb
movsb
fldl
pusha
xlat
scas
mov
and
stc
dec
insl
cmpsl
gs
cmp
je
imul
outsb
lods
into
fistps
fisubs
cs
mov
js
mov
mov
or
and
mov
sub
icebp
mov
jae
lcall
jge
adc
mov
imul
cwtl
or
insb
or
xchg
or
add
das
mov
adc
mov
test
push
mov
js
push
push
stc
insl
and
lea
dec
clts
xchg
cmpl
push
xor
js
inc
repz
push
adc
test
jo
sbb
jae
pop
fidivrs
sbb
mov
inc
cmp
int
or
cmp
ret
jae
js
cld
sbb
loop
push
sbb
xchg
call
push
cmp
and
lds
dec
xor
push
stos
cmpsl
mov
je
adc
mov
pop
in
test
imul
repz
jo
adc
mov
and
pushf
dec
push
xor
push
cmpsb
mov
sub
inc
mov
les
je
fabs
cmc
cmp
add
adc
mov
pushf
xchg
fcmovu
xorps
nop
jp
fisubrl
jg
mov
shlb
jnp
or
xchg
lret
add
mov
cmpsl
sub
pop
repz
lret
and
in
sub
lea
mov
sahf
cmp
ret
int
pop
adc
cmp
popa
repnz
xor
cltd
sbb
out
mov
ss
xor
or
cmpsb
dec
dec
mov
loop
mov
push
xor
sbb
or
lcall
or
dec
mov
fsubrl
add
dec
jecxz
jge
adc
dec
sbb
outsb
pop
fsts
popf
cli
pop
div
push
imul
mov
mov
test
jge
ja
push
mov
mov
inc
sahf
in
dec
mov
sub
cs
push
mov
push
cli
lods
cld
iret
sbb
scas
add
pop
inc
fldcw
and
adc
test
mov
cli
subb
lods
in
mov
les
arpl
pop
out
inc
mov
sbb
push
out
fdivrp
rclb
cld
lret
je
adc
rcll
xchg
orl
jl
xchg
cs
cmpsl
xchg
inc
jmp
cwtl
jo
add
in
adc
add
loop
dec
aad
push
mov
dec
mov
ss
pop
lcall
out
xor
repnz
push
or
push
inc
sarb
test
aas
add
lods
in
ja
xchg
call
dec
xchg
mov
les
shll
aaa
sbb
ja
xchg
aam
hlt
xchg
aam
inc
leave
sub
sub
ja
movsl
aam
sub
xchg
sbb
roll
jecxz
gs
jp
nop
aaa
jae
pop
into
rorb
jmp
cli
cli
pop
pusha
lock
and
xchg
sbb
lret
jle
sub
mov
shrl
aaa
int3
mov
dec
jge
xor
and
pop
push
lea
lret
xchg
sbb
pop
sahf
dec
es
sbb
and
xor
mov
xchg
and
xchg
mov
sbb
leave
test
cltd
jnp
iret
fildl
dec
sbb
and
loop
mov
add
cmp
mov
and
xchg
push
dec
jae
adcl
js
xlat
dec
cltd
pop
mov
in
pop
xchg
jne
push
xchg
shlb
pop
daa
scas
mov
test
scas
pop
or
fmul
xlat
lahf
fwait
jns
adc
dec
outsb
mov
aam
push
jp
mov
lcall
push
xor
mov
and
xor
adc
or
mov
pop
jo
pop
push
sub
and
inc
push
divb
jae
into
inc
mov
js
pop
adc
mov
mov
andl
out
mov
mov
xchg
mov
xor
loop
cltd
mov
sub
xor
adc
dec
gs
xchg
mov
mov
setno
push
sub
ret
fs
xchg
pop
into
sbb
push
jnp
sar
gs
into
fwait
outsl
push
adc
jecxz
popf
inc
mov
js
xchg
pop
ja
in
xor
scas
out
enter
mov
out
lret
xor
emms
add
add
ljmp
cmp
ds
cmp
add
mov
mov
push
daa
dec
mov
add
test
fcomps
fstl
adc
pop
inc
push
mov
imul
cmpsb
inc
cmp
out
sbb
out
xor
outsl
in
test
mov
test
ror
push
out
sti
add
mov
arpl
xchg
xchg
ret
sub
test
cmpsl
jle
sub
shl
adc
dec
mov
mov
xor
adc
push
cmp
mov
mov
mov
iret
sti
mov
pop
mov
ja
or
xor
test
mov
jae
test
sti
mov
or
dec
int
int3
xchg
push
adc
sbb
mov
mov
xchg
jecxz
push
mov
stos
fs
xchg
cmc
loopne
xor
inc
test
jmp
pop
imul
jecxz
clc
sahf
push
test
mulb
into
shl
xchg
in
push
aad
scas
in
data16
mov
lret
andb
outsl
or
std
mov
inc
cmp
lret
enter
mov
sub
ds
xor
int
cwtl
and
clc
add
das
std
sub
dec
dec
aaa
mov
adc
in
xorb
or
aad
shll
mull
cltd
arpl
xchg
int3
push
mov
rorl
incb
pushf
mov
mov
mov
rcrb
das
loop
into
andl
mov
jg
cs
pop
pop
cmpsb
inc
cltd
add
push
add
repz
xchg
mov
fwait
gs
or
pop
jg
mov
adc
add
xor
iret
pop
sti
jle
jno,pt
mov
js
fistpl
repnz
mov
dec
imul
repz
dec
sub
nop
cmpsb
mov
arpl
inc
pop
push
lret
jne
cs
mov
aam
or
neg
and
pop
out
addr16
ret
and
ss
idivl
pop
shll
sub
insl
push
sub
cltd
mov
xchg
int3
icebp
sti
cmp
fwait
sahf
jmp
or
shrl
nop
mov
out
push
or
push
scas
sbb
mov
xchg
pop
cmc
loopne
inc
ljmp
lret
popa
test
push
jne
into
rcrb
add
mov
dec
popa
mov
repnz
adc
jo
or
leave
xchg
rolb
jnp
dec
mov
sbb
sbb
lahf
jo
in
sub
xor
testl
pop
pushf
fsubrl
in
ret
push
and
and
iret
insl
mov
ljmp
jge
insb
lret
xorb
rcrl
fldenv
dec
fwait
inc
fidivl
xchg
in
mov
mov
test
or
mov
and
mov
jno
fcoms
dec
jle
dec
and
cmp
sbb
jbe
sbb
pop
inc
dec
cltd
push
or
mov
sbb
mov
gs
mov
adc
repz
adc
lods
mov
cld
push
jle
enter
cltd
stc
jo
rcr
jb
mov
lock
mov
sbb
cmp
pop
ja
aas
or
popa
mov
mov
adc
sbb
frstor
lret
xor
enter
pop
inc
xor
cli
inc
and
dec
mov
adc
cld
sbb
in
cmp
mov
xchg
outsb
or
or
loope
in
mov
nop
mov
push
jg
shr
inc
jp
test
orb
adc
and
xor
lret
sbb
lahf
call
mov
jo
imul
jb
cmp
mov
stos
icebp
cmp
or
dec
iret
sbb
scas
clc
sbb
imul
ror
cmp
inc
aad
jo
adc
out
in
jbe
adc
fidivrl
adc
in
inc
popa
rcr
push
das
sbb
cmc
sti
xor
adc
call
gs
pop
popa
negb
or
inc
gs
dec
dec
adc
ja
pop
jp
pushf
pusha
pop
push
and
out
jo
pop
test
xchg
iret
fcom
dec
les
rcll
lds
daa
push
adc
scas
mov
lock
and
cli
scas
call
insl
mov
or
ret
sub
movsb
rolb
lret
ds
dec
mov
xchg
cmpsl
nop
mov
pop
loope
mov
inc
aam
push
dec
adc
inc
lods
jge
stos
mov
stc
test
dec
mov
mov
shll
xchg
mov
and
add
jae
dec
and
mov
push
lret
adc
int
rclb
mov
imul
aaa
xor
jnp
test
jmp
xchg
test
mov
loop
lds
xchg
mov
sbb
adc
out
xor
loope
sub
xchg
and
jne
sbb
xor
popf
jae
pusha
lahf
jo
arpl
sbb
jb
add
xor
xor
add
ret
les
lcall
fmull
cmp
rol
test
mov
or
cmp
cmp
mov
fisubrl
ljmp
fists
into
sbb
adcb
insb
scas
test
sbb
mov
push
lahf
mov
or
out
dec
insb
movsb
mov
mov
scas
mov
push
sbb
shl
int
lods
jnp
or
push
jno
pop
mov
jnp
fistps
call
icebp
jge
push
pop
xchg
daa
inc
repnz
jp
xchg
popa
push
std
mov
test
dec
sub
repnz
inc
xchg
or
lods
repnz
je,pn
and
shl
sub
call
pop
imul
mov
or
pop
inc
psubd
push
loop
dec
sub
mov
xor
loope
pop
rorl
jns
mov
out
cmp
das
add
jnp
dec
lret
xchg
ret
in
cli
pop
fwait
nop
jmp
mov
aam
dec
test
shrb
xor
push
je
ret
aad
or
mov
mov
mov
inc
insl
aaa
cld
sbb
lret
lock
mov
cmpsb
lahf
ss
test
int3
sub
jmp
cld
sbb
loopne
dec
jne
mov
push
xchg
xor
sahf
lds
dec
daa
lods
xchg
jb
scas
neg
int3
sbb
sub
js
popf
xchg
movsb
or
mov
in
mov
jnp
sar
movsb
jmp
xchg
xchg
int3
arpl
dec
in
data16
adc
inc
jbe
mov
pop
gs
cmc
imul
or
dec
adc
pop
push
lahf
shll
out
add
in
add
ret
sahf
movsl
rcr
icebp
lcall
pop
sub
lock
pop
mov
shrb
rorl
leave
pusha
sbb
sub
in
mov
inc
add
sbb
pusha
xorb
dec
or
xor
lret
ds
stos
fisttpl
std
xchg
or
cmp
fyl2x
adc
pop
addr16
scas
sbb
int3
dec
cmc
leave
or
adc
and
jne
fisttpll
mov
adc
add
xor
sbb
enter
pushf
fmull
jbe
or
lods
and
xor
mov
mov
arpl
dec
icebp
cli
mov
inc
pop
test
outsl
sbb
in
jmp
mov
cltd
insb
push
ljmp
jnp
lods
mov
test
fs
out
ds
jg
sbb
xchg
cld
ret
lods
out
ljmp
imul
inc
or
int
aam
aad
sbb
cs
mul
out
sbb
cmpsl
dec
shrb
stos
cmp
adc
sbb
les
ss
iret
mov
adc
punpckhbw
push
std
test
dec
orl
inc
int3
fisubl
mov
insl
xchg
arpl
mov
mov
addr16
icebp
mov
adc
jge
cs
push
repz
push
xchg
ret
and
mov
or
sub
dec
int
inc
xchg
sbb
stc
scas
scas
mov
clc
fcmovnbe
lods
mov
mov
sub
icebp
jnp
adc
adc
fisubrs
add
push
cltd
stos
inc
ss
repnz
pop
loopne
lcall
xlat
clc
les
pop
sti
nop
push
sbb
loopne
sbb
fxch
and
stc
pusha
mov
sub
cmc
jns
jb
jmp
sub
rcrl
mov
inc
mov
imul
loop
andl
js
push
test
pop
inc
aad
sbbl
push
call
sbb
lock
pop
pop
int3
jmp
and
out
and
and
sub
mov
scas
dec
imul
xchg
sbb
fwait
int
or
push
xchg
mov
mov
ljmp
ret
add
dec
aad
icebp
insb
pop
test
inc
test
jmp
mov
inc
jae
adcb
mov
dec
sbb
aam
dec
push
xor
xchg
sti
outsl
stc
rcr
orl
out
xor
push
imul
adc
add
add
inc
movsl
push
xor
inc
push
mov
cmp
dec
xor
mov
cmp
lcall
stos
test
xchg
rorl
push
sub
cmp
xchg
pop
jns
add
pop
int3
fstps
mov
xchg
mov
inc
add
pop
aam
pop
ret
dec
cmpsl
adcb
test
call
inc
push
xchg
daa
inc
xchg
sub
jo
in
inc
push
rcrl
xchg
jns
imul
fisubs
cwtl
mov
out
nop
pop
mov
push
mov
add
xor
lret
xchg
or
sbb
xor
push
pop
stos
add
jae
cmp
xor
jg
jecxz
lret
cmp
jne
cmp
fdivrs
pop
adc
incl
out
add
fidivl
mov
mov
outsl
loopne
stos
add
mov
mov
cmp
aad
mov
fdivs
pop
push
push
add
ds
stos
leave
xchg
mov
insl
pop
subl
push
xchg
out
push
jmp
jmp
push
pop
mov
mov
test
mov
inc
mov
adc
lret
mov
addr16
xchg
leave
mov
sub
inc
fimuls
lcall
lods
ljmp
ret
dec
rol
pop
cmc
push
cli
imul
lea
cmc
jp
decb
cwtl
in
xchg
xchg
pop
fiadds
mov
lahf
popl
in
js
push
ds
xlat
mov
mov
fsubs
pusha
jns
pop
in
push
add
sub
sbb
lods
cmc
xor
in
cmp
jle
dec
lea
or
pop
pop
imul
mov
push
lahf
fs
sbb
lcall
lods
mov
sbb
and
xchg
into
xlat
jbe
jle
mov
outsl
pop
int
les
fldenv
sub
sub
mov
sbb
push
jb
or
mov
sarl
int3
dec
stos
fwait
stc
pop
add
pop
aad
pop
jecxz
jo
int
into
pop
stos
pop
lods
int3
mov
cmp
pop
cmp
add
xchg
imul
lcall
dec
arpl
and
mov
outsl
cmp
fdivl
in
mov
les
lods
jl
push
sub
testb
fists
dec
inc
pop
divb
lahf
pushf
cli
ss
xor
xchg
sub
jbe
xchg
repz
xchg
add
pop
loope
loopne
rclb
sub
inc
fs
mov
lock
jmp
movsl
addr16
xchg
xchg
shrl
push
fld
out
cmpsb
adc
dec
ljmp
clc
int3
cs
sbb
std
popf
add
ja
push
xchg
xlat
mov
push
or
mov
lods
sbb
pop
dec
out
add
xor
iret
std
scas
sarl
push
in
cmpsb
es
pop
bound
or
push
jle
xor
mov
fnstsw
or
cmpsl
inc
test
aad
testb
and
leave
sbb
dec
call
jb
or
and
dec
sarb
or
test
lcall
movsb
inc
mov
xchg
aad
movsl
sub
icebp
clc
sub
mov
xchg
jl
mov
dec
mov
lods
loopne
test
inc
xchg
in
xor
insl
and
jo
jnp
mov
fs
ret
pop
or
repnz
notb
cmpsb
fwait
ljmp
shll
leave
xor
into
xchg
xchg
cmp
fcomip
sub
sbb
push
xchg
xchg
insb
adc
cmp
stos
sub
mov
faddp
shrl
pop
imul
adc
pusha
push
mov
and
out
sar
jg
push
fstps
xor
push
sahf
mov
cmpsb
adcl
stc
dec
shlb
lahf
push
scas
lock
ja
outsl
insb
bound
loope
pop
movsl
or
hlt
pop
push
mul
icebp
and
aaa
nop
push
or
fnstsw
jp
aas
jbe
mov
inc
gs
mov
mov
mov
iret
xchg
push
inc
and
fiadds
adc
cmp
add
mov
fcoml
ss
jmp
call
or
popf
fsubrl
xchg
jle
pop
enter
mov
xchg
mov
bound
mov
mov
xchg
cmp
sub
mov
mov
test
je
outsl
movsl
push
mov
adc
mov
jmp
and
into
xlat
add
add
fildll
call
and
add
sbb
test
imull
jp
or
cld
clc
jle
jge
xchg
cmp
ss
xor
loope
xor
test
cmp
or
xor
adc
or
into
adc
fiaddl
sti
mov
push
inc
mov
fildl
cmpb
jp
fxch
xchg
mov
neg
dec
pop
aad
add
mov
sahf
push
jmp
sbb
std
iret
aam
mov
cmp
mov
mov
xchg
mov
cmpsl
testb
dec
fwait
sti
xchg
push
fists
outsb
shl
fdivs
xor
mov
mov
shlb
pxor
fwait
mov
or
popa
fmuls
xchg
xchg
movsb
fdivl
push
pusha
and
dec
mov
jo
pop
lret
mov
scas
dec
andl
lea
dec
xlat
ljmp
aaa
add
xor
fldcw
dec
mov
out
mov
and
jmp
adc
ret
dec
mov
in
es
fimull
movsb
push
and
stos
rorl
mov
add
dec
call
cmpsl
jbe
xor
cmp
shr
dec
popa
shlb
rol
orb
dec
imul
inc
sbb
rcll
sbb
jg
imul
mov
lods
push
xchg
or
sbb
adc
push
jae
mov
das
ja
fsubs
dec
dec
mov
add
sbbl
lahf
adc
pop
lret
adc
pop
jp
cmpl
jp
jle
push
cltd
outsl
adc
and
inc
and
test
aad
arpl
or
hlt
cmp
daa
lret
test
xchg
mov
addr16
out
cld
push
fldl
divb
mov
sbb
shlb
mov
ficoms
mov
sahf
out
pop
mov
xorl
scas
jae
pop
mov
lods
popa
bound
out
leave
les
pop
xlat
jb
shrl
push
mov
hlt
popf
sub
aam
or
dec
push
dec
outsb
sub
popa
sbb
es
mov
mov
outsl
movsb
push
jg
jo
cmp
je
mov
rcll
aaa
lods
cmp
mov
cmpb
into
icebp
jae
dec
push
sbb
cmp
sub
out
dec
dec
outsb
mov
xchg
ret
out
pop
and
jb
or
mov
mov
sbb
ja
xor
imul
ljmp
mov
and
es
fbstp
shrb
ss
push
mov
xchg
add
shlb
addr16
push
adc
dec
sub
xchg
jle
and
arpl
mov
idiv
stos
mov
dec
cld
xchg
repnz
rolb
insb
xchg
pop
inc
fsts
xchg
mov
out
jb
push
dec
push
mov
xchg
stos
into
ds
sub
pop
fsubrl
movsl
and
loopne
sbbl
clc
mov
inc
stos
adc
xchg
and
lret
xor
jle
mov
sbb
rcrl
xor
jnp
or
xchg
pop
dec
aam
cmp
sbb
sub
inc
test
jo
in
xchg
das
sub
mov
test
sub
dec
out
inc
pop
fbld
aas
push
adc
movsl
insl
or
clc
jg
rolb
cmc
push
mov
mov
mov
or
lret
in
inc
cmp
and
add
jb
fcompl
xor
fdivs
jg
sub
jmp
aam
push
push
out
xchg
inc
hlt
sbb
sub
fs
jmp
negl
ret
int
sbb
sub
dec
xor
test
mov
push
mov
mov
push
aas
or
pop
lcall
leave
int
in
mov
rcrb
push
imulb
xor
xchg
addr16
cmp
cmp
insb
adc
jno
decb
mov
movntq
pop
ds
cmp
sti
out
pop
sbb
in
idivb
sysret
dec
add
mov
jns
lods
insl
call
or
push
sbbb
sbb
daa
and
out
dec
inc
inc
lret
cs
pop
cmp
push
popf
popf
rorl
sti
mov
mov
push
je
mov
enter
out
fstps
mov
test
mov
fidivrl
loopne
cmp
and
test
mov
mov
out
mov
subl
out
add
jo
mov
mov
cmp
push
dec
sbb
in
mov
mov
dec
push
aaa
ret
mov
loopne
jmp
pusha
add
out
mov
jno
std
cli
rorl
aas
mov
xchg
pushf
xorl
fildl
xchg
rorb
jne
jbe
scas
dec
sub
fstl
loope
lods
adc
and
nop
pop
loope
sbb
push
pop
in
push
xor
rcl
push
sahf
cld
dec
and
jge
and
sbb
push
out
inc
mov
into
mov
sbb
pop
aam
repnz
faddl
movsl
dec
mov
aad
inc
std
outsb
in
insl
lods
sub
test
cltd
pop
aaa
pop
out
and
xchg
xchg
fdivl
stos
or
div
fisttpl
pop
adcl
enter
sub
push
mov
xchg
inc
insl
cltd
jns
mov
inc
cmc
popa
and
iret
aaa
inc
mov
or
cmpsl
push
in
les
sub
sub
testb
sub
add
adc
pop
cli
das
jnp
jle
test
out
mov
dec
into
scas
loop
jg
mov
jns
retw
push
pop
sub
cltd
int
dec
inc
sub
mov
push
test
pop
and
popa
mov
dec
mov
mov
daa
fisubrl
lods
push
sub
pop
inc
out
test
aad
or
cmp
cmp
pop
jge
mov
shll
pop
daa
cli
adc
loop
jae
or
int
jb
adc
cli
jmp
add
int3
test
inc
adc
aas
movl
mov
adc
sub
fisubs
pop
ljmp
inc
daa
mov
jg
adc
mov
add
dec
mov
cli
pop
aaa
movd
aam
xor
xchg
xchg
push
in
movsb
jns
sub
lods
stos
jge
mov
in
mov
jle
mov
jne
repz
adc
add
adcb
xchg
and
lods
inc
into
xorl
ret
inc
cmpsb
inc
sbb
xchg
xchg
xchg
or
mov
add
scas
adc
pushf
shlb
mov
movsl
leave
mov
loop
and
dec
jg
into
pop
and
and
and
add
adc
mov
dec
jl
lea
inc
mov
dec
sub
lret
pop
mov
and
movsl
fucomp
xchg
push
jnp
pop
out
fcomi
push
xchg
ds
jp
lahf
imul
fisttps
imul
cmp
dec
sub
push
push
push
cmp
push
mov
dec
test
lock
push
mov
ljmp
out
test
inc
stc
push
sbb
cld
out
aas
and
add
mov
inc
inc
ret
push
xor
mov
push
sarb
or
pop
push
jmp
sbb
jo
inc
and
lcall
js
fwait
imul
ljmp
fcoms
in
xchg
enter
ret
mov
imul
sub
sub
xor
lods
in
mov
fnstenv
add
mov
lahf
xchg
cwtl
mov
pop
mov
pop
rol
addr16
orl
out
out
ss
out
or
adc
jle
mov
loopne
into
add
mov
lret
fwait
add
movsb
mov
test
mov
mov
sub
xlat
mov
shll
mov
and
push
orl
jno
mov
popf
sub
cmpb
cmpl
mov
shrl
jmp
movsb
jbe
lfs
scas
pop
ss
test
pop
or
pop
inc
rorb
jmp
adc
enter
call
stc
js
adc
add
scas
sahf
test
fsubr
add
inc
lea
insb
or
jmp
mov
testb
ja
outsl
inc
cmp
push
xor
mov
and
xor
in
loope
andb
sub
push
cli
push
sub
mov
push
fsubl
hlt
cwtl
in
inc
mov
xor
pop
rcll
xlat
mov
jns
pop
mov
inc
leave
idivl
push
daa
test
pop
mov
sahf
or
cmp
fisubl
mov
bound
test
jle
lds
add
lcall
clc
xor
push
aam
mov
test
xchg
add
test
sbb
lods
stos
push
jb
adc
aaa
inc
sbb
in
push
mov
xchg
xchg
cmpsb
rorb
push
xchg
pushf
sub
imul
xchg
add
xor
mov
mov
arpl
push
mov
inc
and
inc
mov
test
jg
mov
xchg
mov
mov
cld
repz
icebp
push
pop
inc
lods
insl
cmc
cwtl
pop
jb
clc
jne
xor
adc
and
gs
enter
sub
and
jo
movsl
xchg
hlt
xchg
jecxz
pop
loopne
cmp
aad
inc
clc
dec
dec
sbb
popa
adc
sub
jno
rcll
sti
sbb
jnp
and
push
scas
loopne
lcall
sub
push
test
lods
inc
push
jge
lcall
lcall
xchg
add
js
andl
push
push
xchg
adc
sbb
lea
and
das
ret
scas
add
inc
insl
inc
into
pop
jb
push
outsb
jns
pop
outsb
cld
shlb
aam
jnp
push
std
ljmp
test
cmp
incl
int3
pop
pop
add
mov
cmp
popa
jne
inc
icebp
das
adc
loopne
push
std
out
mov
addl
inc
adc
dec
mov
loope
dec
mov
test
mov
shrl
repz
mov
mov
jnp
pop
sbb
lret
icebp
cmp
xor
cwtl
sub
movsb
sbbl
ret
pop
push
ret
or
bound
mov
mov
add
faddp
cmpsb
xchg
aas
jo
dec
or
push
xor
mov
mov
jbe
push
rcrb
sar
sbb
inc
push
push
fildll
fldl
sbb
sbb
xchg
clc
insl
sbb
xchg
outsb
gs
push
pop
arpl
ljmp
test
jl
sub
mov
dec
test
dec
mov
or
insl
xchg
sti
rolb
sbb
sbb
add
pop
sbb
inc
mov
dec
dec
dec
in
add
leave
jns
scas
rcll
loope
je
test
mov
xchg
add
rol
mov
addl
sarb
out
rcrb
aam
mov
cs
pop
and
shll
imul
imul
adcb
xor
dec
fs
inc
jbe
and
lret
pop
notl
fyl2x
cmp
cmp
ja
cmp
mov
stos
lea
stos
cmp
in
ljmp
push
lock
inc
pop
and
stc
adcb
movsl
sub
lea
sub
xor
lods
pop
sub
aad
fdivrl
fnstsw
adc
stos
clc
push
das
sub
ret
sub
out
pop
dec
rcrb
les
jae
ret
sub
mov
jp
out
inc
lods
in
js
xchg
push
sbb
fisubl
mov
aad
in
adc
fcomps
pusha
sbb
or
push
repnz
and
mov
adc
out
dec
inc
and
mov
mov
dec
andl
inc
add
inc
shr
ds
int
or
inc
int3
es
movsb
cmp
ja
and
adc
and
jge
xor
adc
imul
test
mov
inc
mov
push
jg
and
f2xm1
mov
roll
sbb
xchg
adc
xor
testb
xorl
mov
shl
xor
jmp
push
into
add
stos
pop
imul
cmp
std
int
fidivl
aad
loope
addr16
sbb
push
cmpsb
mov
jmp
out
popa
or
pop
stos
ss
sbb
bound
incb
inc
pop
in
mov
inc
sti
cmpsb
int
or
sub
adc
shrb
pop
in
jle
jge
dec
test
std
movsl
sbb
xchg
popa
lock
movsb
push
inc
cltd
popa
mov
daa
test
cmpsb
insb
mov
sarl
sub
inc
inc
and
lock
inc
push
outsl
pop
ss
in
push
cmp
fs
je
xchg
sbb
cmp
ret
lret
ljmp
adc
mov
mov
loope
jle
movsl
in
rcrl
aaa
inc
aaa
add
rorb
in
ret
inc
sub
bound
sbb
inc
jle
or
hlt
pop
into
pop
push
xchg
push
fcomp
lcall
push
ljmp
adc
mov
roll
sbb
shrl
push
ret
ljmp
or
add
in
mov
and
sarb
insb
call
add
fmuls
push
addb
push
sub
movsl
inc
lahf
addr16
incb
cmp
pop
mov
iret
hlt
nop
xchg
pop
shl
or
and
scas
xor
nop
iret
jp
ret
mov
jmp
addr16
mov
xchg
pop
ret
popa
inc
pop
jbe
jns
sbb
clc
push
int3
push
jmp
mov
adc
push
movsb
shlb
sub
scas
mov
pop
pop
fildl
add
and
hlt
inc
shll
or
mov
xchg
adc
xor
sbb
outsb
dec
mov
adc
inc
mov
jo
push
adc
pushf
push
lea
int
add
insl
into
sahf
push
dec
push
js
xchg
xchg
fldt
mov
scas
jl
stc
xor
mov
pop
mov
lock
nop
gs
mov
cmp
stc
nop
cld
iret
popa
cli
adc
pop
xor
sbb
inc
push
pop
mov
shrb
jmp
mov
gs
or
int
es
pop
leave
push
and
inc
outsl
cmpsl
test
ud2
or
jecxz
xchg
dec
mov
or
nop
mov
jns
push
out
push
adc
aas
push
pop
int3
shlb
xchg
clc
inc
mov
popa
fnstcw
in
das
xchg
add
mov
inc
hlt
push
hlt
cmpsl
outsl
outsl
out
xor
and
popf
add
lds
pop
ljmp
pusha
push
dec
shl
cmpsb
lods
xchg
and
mov
subl
xor
in
xchg
nop
sub
sub
movsb
icebp
mov
or
jo
mov
mov
inc
inc
push
mov
jg
mov
stos
loop
cmpsb
or
call
rcr
jns
test
std
shll
sti
pop
adc
test
sbb
gs
and
jns
mov
fcmovnb
loope
jp
addr16
mov
incb
cmp
shrl
add
push
js
jl
leave
cs
sub
test
pop
decb
mov
dec
pop
aaa
jecxz
lret
inc
add
in
jmp
jae
inc
sub
popf
faddl
mov
clc
xchg
lret
sbb
fwait
repnz
cmpsl
mov
int
gs
aaa
fbld
xchg
lods
or
or
xchg
stos
outsb
adc
gs
cmpsl
pop
and
mov
cmp
mov
stos
out
shl
inc
cli
aad
ja
xor
adc
xchg
aam
out
dec
xor
xor
dec
roll
sub
aam
sbb
fmul
or
aad
jne
daa
mov
cmp
inc
add
dec
lods
ss
ret
fldl
sbb
push
int
and
mov
in
jns
jge
add
in
movsl
or
add
mov
aad
push
mov
jmp
jle
sbb
mov
mov
mov
aas
jnp
mov
in
mov
ret
das
mov
aas
out
dec
test
out
imul
sbb
iret
push
lahf
push
push
sbb
cwtl
add
sbb
insl
sbb
pop
aad
jp
mov
xlat
clc
pop
sub
int3
inc
adc
test
aas
out
adc
mov
cmp
pusha
push
mov
mov
and
cmpsb
int
mov
imul
movsb
mov
adc
dec
ret
cmp
adc
int
mov
jecxz
mov
cld
pop
sub
jno
push
xchg
push
mov
dec
out
js
lret
mov
fiaddl
mov
mov
movsl
or
inc
pop
dec
jb
cmpsb
in
inc
lock
je
into
test
repz
shrl
pop
sbb
inc
lret
add
lret
incl
stos
inc
movsb
sub
adc
stos
or
scas
push
inc
popa
aam
popa
sbb
jmp
inc
cwtl
int3
pop
stos
jo
addr16
es
sub
sbb
jecxz
out
ret
xchg
stc
adc
add
insl
cmp
mov
in
sti
jle
into
ret
repz
cli
push
xor
mov
mov
leave
dec
and
leave
mov
mov
pop
rorl
add
fists
aad
sbb
bnd
loop
ficompl
test
call
cli
push
push
sarb
mov
mov
shl
lea
pop
sub
add
sbb
pusha
jbe
jae
je
js
jl
scas
and
pop
pop
repz
scas
or
les
pop
inc
repnz
aaa
jo
xchg
dec
iret
push
push
xchg
cmp
push
fmuls
push
push
push
lcall
ja
pop
fsubr
fstpl
jge
dec
into
cmp
jl
into
xchg
cltd
xor
je
sbb
ficomps
mov
fwait
gs
cs
loop
mov
inc
outsl
subl
rcl
inc
mov
and
es
add
sahf
es
js
ret
mov
cs
push
xor
add
mov
inc
leave
idiv
mov
jno
jne
pop
sbb
mov
push
les
fadd
stos
xor
pop
out
in
stc
jne
in
pop
lods
fdivr
mov
cwtl
xor
and
repnz
sub
mov
push
ds
jl
jb
jbe
inc
add
pusha
jecxz
outsl
pop
fwait
int
pop
dec
outsb
sbbb
jmp
inc
pop
pop
jne
out
mov
fcoms
dec
ret
repz
xorb
loopne
adc
xchg
int3
push
std
icebp
and
lds
ljmp
xor
mov
pop
mov
mov
insl
push
not
enter
xor
jnp
dec
mov
ds
fld
clc
adc
enter
jne
insl
addb
addr16
push
aaa
popf
cmpb
dec
loopne
inc
jne
divb
mov
sbb
imul
push
data16
xor
sub
jo
das
scas
xor
push
mov
xchg
icebp
ds
testb
sbb
mov
sahf
dec
adc
mov
sub
mov
fldt
add
cmp
jb
cld
rcll
cmpsb
pop
pop
movsb
cli
fwait
aam
xchg
push
xor
mov
scas
jbe
and
add
push
jp
xorl
xorb
add
clc
stos
mov
repnz
aas
inc
cld
xchg
scas
xorb
shrb
adc
popf
mov
inc
sub
pop
in
test
int
ljmp
int
or
aas
pop
lock
sbb
rclb
lods
pop
cmp
jo
sbbl
dec
xor
sub
inc
pop
repnz
ds
imul
jns
aad
or
fcoms
inc
inc
stc
ja
and
aas
and
mov
cli
push
call
mov
xor
sbb
xor
lea
inc
lahf
sbb
mov
pusha
stos
mov
cmp
mov
jge
fisttps
sahf
sbb
inc
ret
mov
xchg
sub
mov
dec
sti
cmp
mov
xlat
in
jne
aad
cld
aad
out
and
gs
shl
roll
sbb
mov
repz
adc
fldt
mov
cmp
negb
pop
inc
inc
and
mov
sub
push
out
test
dec
or
mov
dec
inc
out
movsb
sbb
movsl
and
fs
rclb
add
pop
arpl
insl
inc
mov
pusha
sbb
jmp
adc
mov
sub
inc
pop
pop
pop
call
xchg
xlat
jecxz
and
loope
subb
mov
pop
cs
adc
ficoml
loopne
sbb
push
rolb
or
dec
jo
adc
jmp
mov
stos
mov
adc
sub
or
push
mov
push
imull
or
adcb
adc
int
cmp
pop
pop
jno
fxch
int3
dec
sbb
add
adc
push
mov
stc
je
inc
or
shlb
or
pop
enter
nop
lea
nop
xchg
push
pop
imul
es
lret
cmp
inc
jae
lods
rclb
out
or
addr16
push
inc
and
xor
arpl
int3
xchg
faddl
dec
add
or
xor
ja
mov
gs
and
fistl
es
push
sbbb
push
xor
cmpsl
xchg
je
aad
icebp
out
cmp
mov
in
imul
lods
mov
push
ljmp
mov
out
jge
enter
xchg
ficompl
sbb
adc
loop
cld
push
xchg
pop
das
push
inc
cmp
arpl
addr16
cmc
adc
cmp
xchg
pushf
shl
mov
inc
movswl
repz
imul
ficompl
pop
ret
out
mov
or
inc
pop
out
mov
rcl
and
adc
push
aaa
push
push
mov
dec
or
in
sbb
or
mov
pop
test
fmuls
dec
hlt
lea
dec
fstpt
push
add
out
jnp
mov
xchg
add
into
es
mov
cmp
dec
cmp
call
fldt
imul
mov
xchg
or
mov
jb
or
aam
mov
xchg
adc
clc
ret
push
in
xchg
pushf
pop
pop
imul
pop
mov
movsb
sbb
inc
sub
jns
xor
mov
jbe
push
mov
inc
add
in
into
pusha
std
inc
xor
sbb
mov
pop
mov
mov
pushf
out
or
lods
fwait
stos
jl
sub
out
or
sahf
jb
xchg
mov
dec
inc
or
or
je
cmp
rolb
in
fsubr
out
mov
xor
inc
sti
mov
push
jns
push
movsb
addl
imul
push
popf
mov
stos
jmp
and
xchg
pop
in
cmpsl
mov
push
mov
mov
pop
shlb
in
mov
std
gs
test
sti
xor
lcall
push
lcall
add
std
sar
and
sub
or
mov
pop
sahf
push
xor
loope
add
int3
push
push
add
sbb
out
dec
lret
mov
std
fdivr
scas
ss
outsl
int3
jo
adc
test
cwtl
fimull
pop
cmc
adc
cld
cli
or
xlat
jne
sub
xor
inc
jl
sub
das
fisubl
push
sbb
add
push
outsl
insb
jns
pusha
push
mov
inc
add
push
insb
out
cmc
aam
add
lret
sbb
dec
hlt
push
fs
cltd
and
cs
cmpl
jge
push
out
aaa
xchg
test
sarl
repz
pop
inc
ds
jl
mov
dec
xchg
add
or
in
inc
rclb
xchg
daa
mov
loope
mov
loop
jecxz
xlat
jno
rorb
push
inc
push
enter
xorl
ljmp
shll
lcall
cmp
addr16
fwait
sub
das
nop
out
pushw
mov
adc
push
int3
lcall
xchg
sbb
mov
xchg
and
and
movl
pushf
cmp
es
pop
sbb
fmul
cmc
lret
aaa
inc
bound
aam
xchg
shlb
hlt
push
cli
in
or
xchg
mov
pop
rolb
cmp
jno
lock
int
add
or
data16
fisttps
lods
mov
push
adc
fldcw
popf
fists
cmpl
dec
gs
mov
xchg
loopne
jmp
movsb
jp
xchg
in
lock
push
lds
push
jge
add
repnz
pop
inc
inc
js
gs
jae
jnp
addr16
repz
addr16
adc
lock
jmp
gs
out
cwtl
ret
adc
leave
incl
cmpsb
jmp
push
mov
cmp
dec
or
pop
jo
cwtl
outsb
shll
pop
int
cmc
imul
fidivrl
xchg
cmp
xor
jge
add
mov
stc
jo
xchg
mov
stc
xor
adc
out
mov
fsubp
dec
adc
in
add
or
lret
push
jp
sbb
jg
mov
lcall
sub
loop
popf
mov
ss
pop
inc
dec
and
dec
pop
jmp
repnz
cs
daa
lods
pop
inc
add
bsr
dec
mov
fisubrl
cmp
add
add
lods
movsb
push
ljmp
setge
aaa
cmp
mov
pop
mov
pop
in
xor
mov
icebp
ljmp
xchg
int3
inc
stc
adc
push
cmpsb
fld
les
rcr
or
aaa
out
push
and
fcmovb
pop
mov
ret
push
pusha
add
dec
cmpsl
ss
test
out
pop
xor
jmp
push
sbb
pop
mov
out
jp
es
mov
stos
loope
cmp
icebp
pop
cli
xorl
xor
cltd
mov
sbb
sti
mov
arpl
fcmovne
std
adcl
lds
movsl
push
xchg
jmp
cmc
cmp
pop
jns
inc
test
jecxz
push
lock
jne
das
movsl
sub
adc
lcall
rdpmc
lahf
sti
out
jae
jae
pop
jne
pop
push
and
enter
xor
lret
cmp
loop
in
xlat
inc
xchg
movl
push
mov
test
mov
andb
sub
cli
sub
add
rcll
mov
int3
adc
sub
mov
in
subb
mov
aam
test
std
adc
dec
ret
jns
sbb
fldl
push
arpl
insl
xlat
xchg
pop
lods
repnz
xlat
xchg
pop
pop
adc
mov
mov
mov
data16
and
imul
cltd
dec
inc
inc
jno
ljmp
mov
xchg
dec
aad
stos
out
ja
bound
lock
pop
cmpsl
xor
mov
or
clc
test
decb
xchg
int3
inc
sti
pop
push
mov
aam
clc
mov
push
xchg
imul
adc
pop
xchg
ljmp
aas
iret
add
adc
push
in
xchg
mov
xchg
add
push
fwait
aam
mov
adc
mov
movsl
xchg
pop
and
in
push
out
adc
lods
jmp
arpl
mov
lea
imul
mov
xchg
adc
cmp
ja
mov
push
dec
jns
inc
inc
push
mov
sub
jge
mov
push
dec
adc
sub
jns
jg
test
adc
sub
subb
cmc
inc
es
mov
mov
mov
loopne
add
pop
pop
cld
adc
in
dec
mov
and
mov
xor
pop
mov
iret
test
aas
xor
pop
aas
dec
mov
or
aam
ja
push
sub
jns
sub
nop
mov
mov
addr16
shl
enter
fmuls
rcr
push
mov
sub
cmp
addr16
int
lret
pop
jl
xlat
sub
xor
daa
loop
mov
cmpsb
sbb
pop
fdivs
stos
cmp
pop
xchg
out
mov
es
or
pop
movb
out
add
cmc
test
push
cli
aad
mov
ficompl
pop
xor
adc
into
fsubrl
push
dec
mov
cld
cmp
and
add
xor
mov
ret
pusha
pop
mov
and
xchg
mov
and
icebp
jo
lock
dec
addr16
aad
xlat
dec
xor
cmpsb
pop
test
push
sbb
data16
leave
mov
xor
pop
std
mov
lret
std
sub
add
jnp
mov
sub
cwtl
add
or
test
mov
cs
cmp
cli
inc
jl
dec
mov
mov
pop
or
and
imulb
mov
inc
cltd
js
sbb
and
mov
mov
pop
xchg
repnz
adc
aad
jne
sbb
in
pop
pop
xor
lods
xor
dec
cmp
cmp
cltd
pop
adc
add
outsb
sbb
cli
jae
test
or
xchg
es
adcb
push
faddl
jae
push
mov
sahf
loope
notl
gs
xchg
es
xchg
pop
out
xor
inc
daa
xchg
add
xchg
push
mov
imul
hlt
mov
inc
inc
cmp
xchg
sub
cwtl
inc
mov
mov
adc
arpl
push
aas
addr16
leave
jno
push
cmpsl
add
sbb
cmp
mov
mov
and
aad
xor
or
into
jg
repnz
dec
mov
pop
adc
push
sub
movsl
adc
xor
jno
imul
sbb
mov
xlat
popl
fcom
outsl
call
adc
xchg
dec
and
aam
mov
pop
cwtl
pop
dec
adc
pop
out
xor
cmp
into
sbbl
xchg
pop
repnz
mov
jp
cwtl
addb
fwait
mov
push
mov
int
scas
repz
jp
fs
insl
out
push
or
adc
jne
or
popa
mov
or
mov
or
push
gs
pop
push
or
mov
dec
loope
and
das
in
outsl
jmp
les
ret
stos
or
sub
test
and
rclb
mov
mov
cmp
xor
data16
sub
sbb
xlat
mov
hlt
xchg
push
xchg
enter
push
cmpsb
pop
inc
mov
cmpsl
pop
adc
mov
cmp
jnp
fcmovne
mov
clc
xlat
cwtl
loopne
or
pop
fisttpl
pushl
sub
ffree
fsts
push
sbb
lcall
sbb
adc
adc
sbb
nop
inc
mov
mov
insl
mov
popa
cmpsb
sbb
adc
xchg
push
fldl
and
jmp
sahf
ljmp
adc
test
xor
jle
mov
inc
out
push
xor
mov
jbe
gs
push
push
mov
mov
pop
leave
pop
sbb
mov
xor
xlat
or
dec
cmp
adc
shll
mov
and
xor
cmpsl
lahf
fcmove
ss
les
xor
xchg
lcall
loop
mov
add
xchg
mov
xor
mov
add
sbb
push
dec
lea
cwtl
push
lahf
and
or
sarl
fwait
mov
dec
mov
pop
dec
and
test
xor
xchg
inc
mov
stc
xor
push
mov
push
lock
add
sbb
inc
xchg
stc
data16
push
adc
lock
and
add
cmpsb
in
ds
bound
mov
add
outsl
sahf
dec
test
lods
push
in
inc
cld
mov
insl
and
or
and
push
es
mov
pop
xor
pushf
mov
je
jmp
sub
in
mov
lods
xlat
sub
lcall
inc
mov
push
cmp
or
icebp
int3
jmp
xor
jb
lret
jae
cltd
jns
int3
int3
xchg
xor
pusha
xor
shrb
stc
lcall
mov
jl
adcl
cmp
out
popa
push
sahf
and
ljmp
loope
call
dec
mov
call
mov
in
pop
mov
rcll
fs
stc
jo
dec
movsl
cli
ret
mov
sub
xchg
mov
sub
scas
fisubs
ds
aam
cli
sti
das
movsb
jns
notb
mov
and
add
mov
les
adc
leave
hlt
pop
ret
loope
xchg
xchg
adc
pop
clc
sub
ss
xor
fiadds
test
jecxz
lret
stc
xchg
mov
mov
add
fsub
adc
sbb
cmp
stc
mov
data16
jae
repnz
push
push
inc
subl
pop
inc
cmpsl
cmp
movsl
dec
and
pusha
out
icebp
xor
sbb
call
fiadds
nop
movsl
inc
mov
jg
fsubrs
lret
dec
xchg
mov
movsb
outsb
push
push
out
repz
movsl
in
idivl
jo
lods
test
sbb
cmc
xchg
mov
mov
test
test
test
jecxz
push
icebp
xor
dec
and
inc
sbb
out
sub
inc
or
in
or
cmc
xor
mov
push
push
loopne
adc
in
das
aad
clc
push
jnp
jle
push
adc
pop
decl
push
inc
add
sbb
scas
repz
add
addr16
je
insl
in
push
and
push
sbb
or
sbb
xchg
mov
addr16
or
mov
pusha
add
repz
jnp
outsl
xor
rcl
iret
pusha
xchg
mov
fcompl
push
repnz
clc
mov
sbb
subb
jae
jmp
outsb
pop
test
push
pop
fs
cli
mov
push
hlt
dec
dec
sub
push
aaa
cmpsl
fldz
cmp
mov
aad
xlat
mov
insl
fs
xor
test
in
popf
mov
ret
int
mov
decb
cmp
dec
sarl
int3
cmpsb
scas
ss
lcall
adc
lret
push
inc
bnd
cmp
dec
add
pop
and
dec
repz
xchg
jae
movsl
in
sub
test
dec
insl
add
pop
push
jg
inc
cld
jbe
xchg
xorl
aaa
lret
pop
add
jae
rcrl
arpl
cmpl
add
into
mov
xor
and
leave
xorl
mov
shl
mov
inc
mov
xchg
or
cmp
in
fldcw
leave
inc
mulb
repz
inc
out
test
cmp
in
or
or
push
loop
dec
jbe
out
pop
in
out
dec
and
scas
mov
cmpsb
push
dec
push
jns
push
sahf
or
mov
ljmp
mov
mov
mov
imul
out
add
leave
aam
xchg
xor
bound
hlt
mov
push
ljmp
inc
mov
sbb
push
sub
aam
mov
mov
xorb
ja
adc
sbb
in
mov
jecxz
or
push
mov
cmp
jecxz
mov
mov
insl
cmp
sahf
test
dec
xlat
cltd
mov
mov
aaa
loop
leave
or
xor
nop
sub
xor
xor
ljmp
mov
push
sub
repnz
bound
mov
push
ds
popa
push
push
fsubrl
xorl
xchg
cmc
pop
pop
stos
xor
add
int
fadds
daa
out
sarb
cld
xor
jns
fdivs
jl
dec
adc
mov
enter
pop
bound
and
jno
not
xor
test
add
imul
test
ja
pop
mov
loopne
repnz
jle
sub
mov
pop
and
pop
push
push
imul
in
jp
fisubrl
jns
mov
ja
push
sub
cmc
jae
test
cmpsl
lret
sti
or
out
xor
mov
leave
imul
es
insb
mov
add
jg
das
call
xchg
add
mov
pop
pop
push
xor
mov
lods
mov
and
fistl
pop
jl
clc
dec
insb
mov
outsl
xchg
clc
es
sarb
cltd
sbb
fwait
add
sahf
scas
divl
push
lret
outsb
mov
test
mov
es
mov
sbb
and
or
lret
ss
daa
jl
inc
int3
xchg
icebp
xor
out
je
inc
das
iret
sub
outsl
repz
icebp
add
arpl
mov
and
xor
cmp
dec
push
mov
je
push
jno
mov
sbb
scas
imul
cli
adc
mov
inc
fwait
pop
sbb
sbb
or
sbb
push
cli
pop
lods
clc
scas
jle
gs
or
mov
mov
mov
loop
and
xor
and
and
lock
cmp
add
fmuls
mov
je
push
adcb
cmp
loope
push
dec
push
mov
push
in
push
stc
sbb
or
mov
cmpsl
aas
stos
in
popa
stos
and
movsl
outsb
movsl
dec
jne
mov
aad
mov
sbb
subl
adc
mov
pop
cmp
dec
inc
adc
mov
mov
mov
sbb
and
mov
push
sti
je
push
or
lret
ljmp
es
int
pop
imul
inc
out
fcmovbe
or
ljmp
insl
imul
loopne
dec
adc
pop
inc
jo
pop
add
cmpsb
xchg
sbb
negl
movsl
out
out
addr16
lahf
stc
mov
xor
in
inc
mov
xchg
fidivl
cmpsb
xorb
adc
push
addr16
mov
push
xor
sbb
jecxz
repz
dec
test
leave
adcl
mov
fnstenv
sub
mov
xor
js
in
adc
or
and
or
cltd
icebp
xor
shlb
pop
xchg
pop
cmp
ljmp
ret
mov
sub
fwait
aaa
popf
adc
aad
pop
in
notl
add
mov
lods
or
inc
cli
pop
out
nop
or
add
pusha
cmpsb
and
xor
sub
dec
ret
mov
mov
aaa
sub
in
and
push
inc
jnp
out
lds
nop
filds
dec
or
xor
jbe
sub
hlt
ficoml
jge
jge
xchg
mov
xchg
js
fcompl
mov
inc
xor
xlat
loopne
sbb
insl
test
sbbb
or
mov
jnp
pop
add
data16
cli
faddp
xchg
in
subl
ss
in
clc
and
pop
stc
popa
dec
insl
add
push
mov
mov
dec
push
fnstsw
out
outsl
pop
addb
pop
adc
pop
and
pop
fnstenv
mov
incl
jle
sbb
aas
pushf
cmc
cmp
jae
stc
adc
mov
pop
stos
mov
clc
lcall
test
je
cmpsb
jp
mov
mov
dec
and
ret
nop
xor
mov
adc
ja
jb
lods
jno
push
add
xchg
push
ja
rcl
pop
stos
push
cmp
or
cmp
adc
jne
leave
es
and
shlb
inc
fdivl
mov
aas
dec
mov
and
pop
je,pn
jecxz
mov
jb
xor
cmp
mov
jno
jns
cmp
pushf
rorl
mov
in
and
dec
push
iret
sub
movsbl
xor
push
repnz
or
pusha
outsl
jbe
jns
imul
loop
pop
pop
sub
xor
clc
jbe
jle
cmp
push
xlat
adc
pop
mov
mov
aas
aam
mov
cmp
sub
daa
and
xchg
aad
hlt
les
out
lods
dec
movb
inc
xchg
push
jns
dec
rolb
lcall
jo
es
aam
push
and
bound
add
sub
icebp
mov
lahf
daa
push
gs
cmp
clc
ljmp
popa
sub
push
inc
sti
jno
lcall
xchg
sbb
and
cmpsl
sbbl
movsb
xchg
sbb
movsb
lret
inc
int
lahf
dec
xor
addb
out
cmpsb
lock
pop
movsb
movsb
gs
ss
shlb
sub
or
sub
push
dec
mov
test
inc
ret
jne
lods
mov
andl
test
xor
mov
xor
xor
aaa
test
jbe
xchg
and
pop
push
jmp
xchg
leave
out
pop
negb
stc
add
push
rcl
xorl
scas
lret
sbb
imul
clc
push
jns
xlat
jne
inc
pushf
mov
scas
dec
cmpsb
pop
mov
pop
jb
xor
mov
inc
aas
nopl
cli
sbb
divb
movsl
and
in
xchg
es
xchg
scas
inc
jae
insl
add
pop
pop
xor
fmuls
sbb
sub
fsts
add
cld
cltd
aaa
jecxz
jno
andl
cmpsb
int
sbb
cmp
pop
cli
adc
add
xlat
sarb
add
test
repz
or
xor
cltd
insb
gs
mov
mov
mov
push
dec
lret
or
cmp
jo
pop
fstp
mov
aas
inc
outsb
pop
mov
rcrl
gs
mov
mov
insb
dec
loope
mov
jns
fldcw
roll
rolb
dec
sub
jae
into
lahf
and
and
cwtl
or
shl
aad
movsl
clc
popf
cmp
sub
cmp
dec
add
pop
fldl
out
jnp
and
and
rorb
int
xor
fwait
repnz
out
ret
test
adc
mov
sbb
adc
sbb
imul
mov
and
sti
sbb
ret
xor
decb
add
mov
dec
add
cs
das
push
pop
sub
pusha
aam
aaa
dec
aad
cmc
hlt
es
lret
pop
adc
in
and
scas
mov
sub
cwtl
fs
sti
push
dec
lock
insl
arpl
shrl
enter
sbb
jns
cmp
data16
sbb
aam
or
imul
pop
out
rclb
aad
or
or
aad
shrl
ret
orb
xchg
lret
insl
sbb
in
cmp
and
sbb
testb
test
and
sub
xchg
xchg
mov
fnstcw
loopne
jge
je
hlt
push
add
sbb
mov
sub
xor
shll
push
xor
push
data16
das
popf
sub
cmp
hlt
xchg
mov
out
jle
pusha
fistl
cmp
dec
mov
mov
test
mov
and
and
aas
pop
icebp
adc
imul
call
mov
cltd
jge
fs
dec
out
dec
imul
mulb
imul
mov
shll
adc
cmpb
sub
dec
add
ret
fists
mov
iret
dec
xchg
in
icebp
cmp
outsb
jmp
adc
push
addr16
movsb
repnz
jb
lcall
les
in
sub
inc
jg
sub
mov
int3
rcll
loope
xor
xor
ret
loopne
out
call
test
jl
int3
js
lods
bound
inc
ja
nop
inc
scas
jg,pn
insb
sbb
or
in
xchg
mov
iret
inc
push
sbb
cmp
jb
push
enter
mov
loopne
jmp
sbb
pop
inc
mov
lret
jmp
out
ss
push
icebp
mov
sbbl
kmovb
mov
sti
pusha
xchg
inc
sbbb
and
or
xor
xabort
or
xchg
aam
pop
sub
xchg
das
rcrl
test
cmp
cli
push
out
dec
or
stc
mov
jno
lret
lcall
jl
jl
pop
mov
dec
test
mov
adc
jecxz
out
and
mov
pop
jle
jns
rorb
mov
fcomps
popa
mov
jp
mov
add
test
testl
mov
imul
pop
mov
mov
fidivrs
ret
imul
cmc
push
pop
sub
jle
bound
lods
adc
mov
mov
adc
out
mov
rcrl
cmpsb
push
inc
repnz
fildl
int
dec
in
mov
shrl
adc
dec
xor
mov
sbb
loope
sub
add
xor
gs
rol
stc
pop
out
jne
jl
dec
cmp
aaa
push
push
test
popf
rol
pop
mov
leave
loopne
xchg
mov
add
dec
jbe
xchg
or
fwait
or
dec
scas
out
xor
arpl
mov
mov
jge
mov
jo
mov
dec
ja
xchg
jo
leave
jl
sub
add
cmp
inc
les
repz
pop
ljmp
hlt
and
cltd
add
hlt
dec
movsl
ucomiss
and
ret
xor
pop
sub
stos
inc
inc
jo
sub
push
in
call
push
rcrl
daa
dec
les
popl
jecxz
imul
mov
inc
pop
and
lods
cmp
jmp
ljmp
int
cmp
aas
dec
in
cmp
xchg
cmp
cmpb
imul
mov
sbb
test
inc
adc
lret
movl
jnp
lret
ret
aaa
push
cmpsl
out
test
aam
push
push
sbb
outsl
shr
les
ljmp
inc
adc
test
je
pop
mov
mov
dec
or
push
sbb
xchg
in
int
add
push
push
pop
insl
xchg
sub
in
enter
inc
rcrl
mov
or
jmp
int3
fstpt
cmp
jp
cmp
xor
cmp
and
cmpsb
or
xor
pushf
lret
inc
cmp
jae
iret
test
nop
push
mov
call
mov
test
add
rclb
sbb
adc
lods
push
testb
mov
inc
test
iret
mov
roll
les
test
enter
xchg
add
cmc
adc
test
add
outsl
outsb
fdiv
mov
inc
cmpsl
inc
ret
ret
hlt
push
sbb
mov
xchg
fabs
xor
mov
aam
movb
push
sbb
add
fs
kxnorb
mov
stc
mov
xchg
mov
outsl
xchg
jp
add
mov
cli
clc
clc
jmp
test
dec
les
jg
mov
add
push
scas
cltd
sahf
sub
cli
cli
ret
push
sub
divb
dec
jecxz
sbb
jae
andb
test
xchg
pop
sub
dec
mov
mov
xor
clc
imul
mov
adc
cs
jbe
sub
pcmpeqw
insb
fwait
lods
shr
dec
out
mov
cmpsb
dec
test
xchg
fwait
dec
cmp
pop
xor
fnstsw
adc
icebp
jl
addr16
das
push
movsl
stc
xor
shr
outsb
lods
aas
mov
in
jb
lret
jbe
jmp
jecxz
ljmp
push
and
ret
push
cmp
xchg
fsubrl
xor
movsb
xor
testb
jo
push
xchg
mov
pushf
jl
mov
jp
fnstsw
jne
jb
and
cs
xor
subl
jne
popa
call
test
enter
sub
mov
das
leave
sbb
mov
stc
mov
inc
fmul
mov
andl
sbb
mov
test
cmp
jo
cmpsb
fisttpl
bound
add
nop
aad
ja
das
clc
dec
and
adc
movb
mov
cmp
push
fwait
pop
addr16
jns
sub
and
push
dec
sub
cld
push
rorb
mul
ljmp
or
lock
push
cmp
xchg
out
pop
cli
pop
xorl
dec
arpl
movsb
lods
pop
cmc
sbb
xor
aaa
ss
and
loope
xchg
in
mov
aas
jl
pop
xlat
lock
pushf
lahf
mov
frstor
mov
pop
loope
fcmovne
adc
mov
imul
cmp
mov
push
cmpsl
lahf
pop
fsubrl
fstp
aaa
push
xor
push
xor
adc
xor
test
insl
or
mov
add
sub
cmc
jae
cli
cmp
or
stos
sti
jns
or
push
arpl
mov
idivb
mov
mov
and
xlat
icebp
pop
xchg
inc
jns
jnp
cmc
popf
xchg
aad
subl
inc
sub
les
sbb
xchg
outsb
pop
mov
jb
jnp
std
mov
pusha
jp
push
lock
inc
mov
in
mov
sarl
mov
icebp
jmp
andl
jne
outsb
inc
cld
outsb
xor
mov
cmp
mov
mov
mov
call
popf
in
or
in
and
test
adc
inc
std
nop
out
sub
fisubrl
test
push
ss
lret
sahf
push
push
push
test
inc
cmp
aam
lret
or
cmp
lcall
sbb
in
lea
inc
dec
mov
ja
mov
and
fwait
aas
fs
xorl
leave
xchg
shll
inc
mov
fldl
mov
mov
lds
out
jp
sti
lea
rolw
jo
cmpsb
mov
imul
sbb
cmp
xor
repnz
jbe
fs
insl
fisubrl
xchg
mov
cli
ss
push
cld
jnp
repnz
ret
lret
add
sub
and
mov
fwait
and
stc
pop
pop
negl
jg
int
lret
push
inc
popa
dec
daa
in
dec
sahf
fimuls
mov
gs
or
pop
and
inc
mov
call
jle
in
fimuls
cmp
push
std
mov
jns
pop
popa
sbb
cltd
sti
jo
mov
sub
mov
add
aas
push
push
or
and
pusha
repnz
icebp
add
mov
sahf
add
and
sbbl
dec
pop
shll
lods
lods
call
sbb
add
iret
out
lahf
adc
loope
aam
ljmp
mov
mov
mov
jle
ret
xchg
lea
test
pop
inc
pop
pop
enter
aas
sub
push
les
push
enter
xor
test
scas
into
or
in
int3
mov
inc
push
mov
arpl
popf
jb
mov
or
mov
mov
or
ficoms
xchg
loope
icebp
int
shll
push
popf
cltd
dec
mov
or
jmp
into
or
cmpb
inc
decb
in
dec
mov
mov
adc
lock
cs
dec
or
push
push
pop
pushf
cmp
popf
sub
shrb
and
mov
sub
pop
adc
adc
imul
movsl
sub
or
popf
or
sbb
pop
inc
adc
int3
fimull
addb
mov
daa
xchg
push
jle
inc
es
ret
das
clc
nop
push
and
jg
je
push
mov
into
call
lahf
sbb
or
adcl
pop
outsl
cmpsb
pop
in
mov
sbb
or
in
xor
mov
sbb
xchg
pop
aad
mov
inc
xor
xor
jp
sbbl
fsincos
stos
push
test
mov
jae
adc
ja
pop
ljmp
loopw
pop
rorl
popf
cmpsl
jle
mov
int
jecxz
imul
addl
sbb
mov
mov
xchg
rcrl
jo
lret
pop
repnz
lods
mov
xchg
rolb
push
lock
sbb
pop
mov
push
nop
dec
inc
dec
gs
mov
dec
lea
push
mov
push
shll
pop
outsl
pop
xchg
cwtl
pushf
lahf
push
pop
push
lcall
inc
jmp
sub
push
cmpsb
lret
pop
aad
inc
sub
push
lods
outsb
daa
fisubs
mov
add
mov
in
pop
cmpsl
or
and
and
xchg
jge
cli
clc
fcompl
fistpl
fldcw
push
sub
popa
and
mov
push
cld
leave
add
das
cmpsb
cmpl
bound
inc
lock
xor
nop
push
push
jmp
xor
je
adc
fbstp
xchg
jno
jae
bound
inc
jnp
leave
aaa
outsl
sti
or
xchg
shr
shlb
xor
push
add
mov
mov
inc
aad
inc
push
mov
jae
sub
lret
xor
call
xchg
aad
stc
and
ror
mov
je
and
sbb
xchg
rorl
mov
or
sbb
fwait
sbb
imul
arpl
enter
mov
add
pop
add
aas
jnp
int3
xor
lea
add
xchg
mov
popa
lods
or
jmp
insl
pusha
data16
xchg
mov
mov
xlat
ljmp
rcrb
lret
in
add
mov
dec
rclb
lock
adc
adc
lock
xchg
inc
inc
outsb
iret
jg
scas
jne
jle
jmp
out
xor
arpl
lds
jl
fcomip
cmp
loop
xchg
add
mov
jecxz
push
cmp
test
loop
mov
mov
mov
dec
pop
mov
or
sti
int
sbb
movsl
fndisi(8087
or
std
stos
lods
fimuls
or
es
fcmovne
dec
inc
sub
adc
push
nop
cmp
lret
push
mov
bound
or
inc
jns
das
jge
xor
je
mov
iret
dec
mov
sbb
mov
sbb
adc
cmp
jp
cmp
xchg
sbb
jmp
loopne
cmp
mov
sbb
ja
dec
mov
stos
xor
push
enter
pop
loop
push
pop
lods
cmp
aam
leave
in
and
cmp
aaa
hlt
pop
sub
jge
pop
or
push
adc
mov
out
mov
push
lret
stc
mov
fwait
das
jmp
mov
aad
scas
pop
sti
add
cmpsl
inc
shlb
cld
xor
pop
pusha
mov
mov
adc
pop
add
inc
int3
push
cmp
lea
xchg
mov
loop
mov
push
xchg
les
pop
stc
dec
mov
iret
rorl
imulb
sar
add
test
mov
mov
sahf
hlt
dec
repnz
shlb
ret
push
push
push
mov
jb
frndint
imul
fidivrl
dec
sbb
repnz
mov
nop
adcl
jle
adc
fs
les
mov
scas
adc
cltd
mov
nop
aaa
loope,pn
and
ret
rcrl
jle
push
jbe
mov
ja
lods
pushf
mov
aas
add
dec
out
push
shlb
aaa
fs
stc
or
dec
push
repz
mov
js
jnp
dec
xorb
repz
sub
in
call
jmp
ja
xlat
stos
cmp
popa
mov
push
test
subl
test
and
lea
mov
aaa
jmp
adc
push
aad
adc
aaa
iret
mov
hlt
jle
sub
inc
dec
cld
mov
xor
dec
sbb
movsb
sarl
mov
add
jne
and
aad
enter
ret
pushf
out
push
xchg
sahf
bound
les
movsl
pushf
jg
mov
pop
aam
mov
repz
sahf
adc
mov
popl
or
ljmp
dec
pop
and
daa
mov
ja
push
dec
mov
adc
sbb
sub
mov
sbb
adc
cmc
aad
dec
dec
sub
outsb
sahf
sahf
call
xchg
and
gs
jecxz
std
lcall
sbb
lcall
arpl
call
cwtl
xchg
mov
dec
mov
and
test
out
mov
jecxz
cltd
pusha
in
cs
fnsetpm(287
bnd
mov
add
mov
test
adc
clc
sti
fsub
mov
dec
push
stc
mov
scas
iret
xor
test
ja
int
popf
in
adc
pop
out
bound
dec
inc
push
push
loopne
push
sbb
or
xchg
jae
pop
mov
inc
popf
jp
hlt
lret
dec
lret
test
lods
push
test
mov
mov
mov
les
inc
lret
testb
inc
out
into
mov
cld
push
cmp
stc
cmp
cmp
mov
adc
int3
pop
jno
xor
inc
inc
stos
jp
fdiv
mov
adc
xlat
movb
mov
mov
into
mov
sahf
push
mov
mov
cltd
xchg
mov
roll
call
cmpsb
adc
push
jge
imul
test
or
sub
adcb
inc
rorb
insl
add
int
add
inc
out
shrb
jo
xor
aad
int3
mov
shl
dec
imul
jp
rorb
xchg
add
repz
subl
in
jno
stc
stc
mov
push
gs
inc
iret
cwtl
jo
cmpsb
cmpsl
je
insl
xor
ficoml
mov
in
mov
cmp
or
jae
movsl
shlb
jl
cmp
mov
in
lcall
lods
mov
xor
pop
shlb
mov
jno
add
fwait
inc
into
push
pop
adc
clc
pusha
fldcw
pop
or
pop
cs
jmp
int
jmp
mov
sbb
ss
push
mov
cmp
loop
and
mov
or
sbb
mov
push
fninit
fdivrl
dec
mov
mov
mov
add
dec
lahf
push
cmp
dec
inc
push
inc
ret
push
sahf
adc
cmp
jecxz
mov
repz
sub
pop
jo
inc
sub
add
mul
test
sbb
cmp
mov
cmp
sub
push
pop
popf
jb
sahf
dec
mov
or
clc
dec
pop
testb
in
mov
push
iret
sub
jl
iret
jle
fnstcw
xchg
and
adc
push
dec
push
mov
shrl
xchg
jno
sub
orl
popa
mov
aaa
jns
or
or
jne
adc
sbb
repnz
aad
dec
cs
lea
int3
mov
push
push
fimuls
inc
shlb
lock
pop
mov
dec
mov
dec
jne
movsb
and
ss
mov
or
adc
rcr
sub
sbb
pop
out
cmp
ds
pop
jno
js
jo
inc
cmpsl
iret
ja
push
fcoms
push
lcall
ljmp
xor
scas
push
add
movsb
jb
cmpsl
sarb
repnz
out
jnp
sub
pop
sahf
pop
mov
daa
and
jbe
pop
shl
jge
es
mov
or
sti
fisttpl
aaa
xor
sbb
clc
or
cld
and
cmp
push
in
ljmp
sbb
xor
ds
mov
jb
mul
fsubrs
js
shrb
lret
dec
mov
rclb
test
inc
pop
mov
xlat
shll
adc
xor
lock
fnsave
in
loope
and
jb
cld
sub
pop
jmp
and
test
out
in
jns
cs
jae
stc
cld
pop
aas
ljmp
hlt
mov
std
jne
jecxz
push
inc
or
icebp
and
sub
mov
in
mov
daa
cmp
adc
add
pop
sbb
mov
fistps
aas
ret
das
test
aad
mov
sbb
inc
jns
xchg
loop
arpl
lret
pop
popl
mov
mov
dec
jle
mov
mov
jns
pop
cwtl
adc
clc
xor
rorb
xchg
fucomp
dec
sub
inc
cmpsl
dec
cmp
outsb
out
adc
loopne
sub
xor
loopne
rorb
jl
test
sub
xchg
xor
out
pushf
push
jb
dec
inc
rep
stos
int
popa
xchg
mov
sbb
mov
lock
mov
sbb
push
data16
jnp
std
xorl
dec
xor
mov
dec
pusha
pop
jecxz
icebp
hlt
mov
mov
rcrb
out
jbe
test
pop
in
push
popa
leave
lds
lock
xor
fistps
dec
jb
idivl
jl
test
aas
sbb
mov
incb
imul
pop
test
mov
aam
movsl
lds
fnstenv
add
sub
xchg
add
cmc
xor
pusha
loop
enter
inc
loopne
inc
sub
cwtl
leave
sub
mov
ds
xor
add
iret
int
fs
push
or
into
insl
push
mov
ret
mov
pop
mov
shl
std
mov
cmp
fiaddl
cltd
fcmovne
mov
out
popf
push
xchg
outsb
xor
les
jl
in
inc
out
push
xchg
dec
add
fwait
mov
dec
xchg
pop
push
lods
aas
pop
xchg
xlat
pop
pop
push
outsl
repz
dec
iret
mov
inc
jno
das
data16
mov
insl
addr16
pop
sahf
mov
loopne
mov
flds
xchg
dec
adc
jbe
sub
pop
push
rorb
xchg
xchg
jae
inc
jns
aad
sahf
in
incl
cmp
cmpsb
aaa
loope
int3
dec
lods
jo
repnz
idivl
fists
xchg
clc
or
ret
fistpll
pop
ja
mov
pop
out
fisttpl
in
and
dec
dec
cmp
mov
and
push
in
sbb
mov
idivl
adc
dec
movsb
movsl
mov
out
cmc
das
in
jns
jge
inc
jb
pop
daa
loope
sbb
push
popl
lret
ss
jb
movsl
dec
and
sub
cld
repnz
daa
sub
xlat
movsl
notl
in
sub
add
cs
sub
test
jp
call
fwait
cmp
jg
dec
jo
aad
jecxz
int3
pushf
or
jb
loopne
inc
mov
test
out
jne
std
ror
clc
xchg
ja
fisubs
test
aas
and
fsts
mov
fisubrs
aam
add
arpl
out
popa
push
push
addb
mov
in
addl
repnz
add
imul
notb
fstpl
push
push
jecxz
xchg
in
notl
loopne
and
rcl
idivb
mov
ja
sbb
xor
ret
sbb
or
push
ret
cmp
insl
pop
mov
icebp
mov
aam
mov
imulb
mov
jo
sahf
out
add
enter
sub
xor
mov
cmp
cmp
jl
jmp
filds
iret
mov
pop
or
sub
lods
arpl
xor
js
test
fidivl
mov
lret
lods
xor
lds
rcrb
int
cwtl
pusha
push
adc
xor
outsb
cmp
push
jae
movsl
mov
xchg
aaa
ds
in
mov
and
add
sub
rcll
mov
adcb
scas
push
xlat
nop
aad
jmp
leave
pop
fisubrs
nop
fdiv
pop
test
call
loopne
out
xchg
loop
adcb
stos
push
lods
cmc
and
test
sarl
add
sub
gs
icebp
repz
adc
and
mov
mov
lds
shrb
xlat
mov
or
orb
in
data16
sbb
pop
aam
cmp
imul
sub
xchg
jno
lock
mov
and
js
ss
arpl
dec
and
sbb
push
mov
decl
stos
and
int3
imul
xchg
sub
push
ret
cmc
inc
insl
iret
imul
xchg
repnz
mov
aaa
xor
or
sahf
fdivrl
mov
jno
shll
fsubrl
pop
mov
sbb
xchg
andb
mov
cmp
xchg
cmpsb
test
test
mov
cmc
xchg
insl
push
push
fistps
ja
and
mov
pminsw
mov
inc
jecxz
popa
add
push
insb
adc
je
test
stos
mov
scas
cmc
sub
jno
mov
push
dec
addr16
cvtdq2ps
pop
inc
ret
xchg
cmp
mov
scas
dec
sub
mov
adc
push
mov
jbe
fdivrs
das
out
add
mov
pop
dec
pop
aam
pusha
ja
push
mov
cmp
ficoml
lahf
pop
and
cmp
sub
xor
int3
or
enter
mov
mov
lret
std
in
sub
xchg
flds
xor
fisubrl
in
xchg
push
fdivl
in
lcall
dec
lods
add
ljmp
lods
and
and
sub
push
and
inc
and
cli
jle
xor
sbb
lods
mov
or
jl
cmpsb
outsl
push
cmp
xchg
flds
insl
cvtps2pd
mov
sti
push
gs
std
jo
sub
push
pusha
xchg
in
test
in
mov
and
aas
int
movsb
xchg
push
jp
outsb
lods
mov
shlb
loope
jl
std
mov
dec
rol
adc
insl
decl
inc
push
pop
push
xor
inc
std
aaa
hlt
adc
push
adc
xchg
imul
gs
dec
xchg
mov
xor
stc
mov
mov
ds
mulb
loope
pop
mov
dec
xchg
lock
std
data16
inc
xchg
test
mov
xchg
sbb
mov
sbb
test
xchg
stc
add
cmp
xchg
in
lret
pop
mov
lock
jb
pop
frstor
std
lods
sub
jnp
xchg
sarl
in
fldt
in
stos
dec
xchg
shll
sbb
aas
adc
aam
mov
jmp
jp
dec
out
pop
jg
adc
mull
test
mov
pusha
ljmp
lods
aam
popf
iret
shrb
loop
mov
insb
repz
push
aam
sub
or
mov
ret
testl
iret
clc
out
cmpsl
imul
sbbl
notb
add
pop
pop
mov
mov
dec
movsb
outsb
out
fsts
sar
mov
mov
fstl
jl
xchg
fiadds
divl
gs
lret
add
popa
leave
or
xor
or
idivb
filds
enter
mov
nop
hlt
xchg
push
or
adc
scas
mov
leave
mov
sahf
rcr
iret
cmp
into
int
or
cmp
mov
popw
cmp
std
repz
mov
ds
add
je
jne
dec
push
lods
add
fstp
cwtl
ja
sub
sub
jbe
in
dec
popa
dec
push
insl
cmp
jnp
push
jb
test
mov
sbb
sbbb
add
sahf
cltd
jo
mov
mov
out
xchg
and
add
xlat
cmp
std
dec
sahf
enter
js
jge
les
cmc
in
mov
aaa
jl
jmp
scas
mov
aas
mov
fstl
jno
push
xor
arpl
push
push
xor
adc
nop
mov
add
mov
movsb
mov
sbb
mov
cmpsb
push
add
popa
push
mov
and
push
sub
fistl
mov
jmp
xchg
and
dec
aaa
prefetch
pop
push
repnz
andl
xchg
adc
fsubp
into
sub
or
dec
cld
jb
mov
clc
outsl
loope
loope
xchg
movsl
pop
pop
sbb
add
xchg
aam
adc
jl
mov
jg
push
xchg
add
int3
lock
sub
push
fdivp
dec
jno
pop
pop
mov
sub
adc
add
in
sarb
decl
pop
cmp
lds
xor
add
les
inc
lods
pop
and
dec
sbb
push
sbb
mov
int3
add
or
test
leave
pusha
in
repnz
insb
xchg
adcl
ljmp
outsb
mov
daa
pop
push
add
scas
xchg
daa
popa
test
xchg
mov
cmp
adc
je
xor
dec
fwait
int3
adc
in
cltd
adc
push
or
fs
xor
movsl
push
icebp
test
ret
xchg
xor
cmp
inc
ja
mov
loop
add
iret
sahf
stos
xor
aad
imulb
jecxz
dec
xor
inc
sahf
repnz
cmp
cmp
sub
pop
xchg
xchg
inc
cli
inc
fsubp
mov
fldt
jge
push
push
roll
call
mov
add
sub
iret
jmp
nop
daa
fdivrl
test
push
addr16
xchg
jg
dec
jmp
xchg
lods
cwtl
arpl
inc
fidivrl
dec
jecxz
cmpsb
scas
push
jne
dec
or
in
ret
cli
mull
clc
mov
rorl
xor
pop
xchg
pop
adc
push
xlat
inc
xchg
mov
inc
inc
mov
mov
call
test
das
pop
add
jo,pn
insl
fcmovu
jge
add
xchg
in
hlt
and
int3
add
sbb
xor
movsb
clc
xchg
add
aad
adc
hlt
test
shlb
data16
push
dec
mov
mov
dec
push
int3
cs
mov
roll
imul
dec
mov
jle
ja
fnstcw
xchg
dec
jns
pop
jbe
push
in
xchg
aad
adc
int
inc
aas
sti
mov
mov
ret
shl
es
test
jb
lret
pop
out
sti
xchg
xchg
adc
mov
in
lods
mov
or
cmp
dec
xchg
in
jns
rclb
loope
das
insl
jecxz
or
in
lea
mov
xor
fsubl
or
dec
add
adc
in
and
push
outsb
rcl
mov
pushf
sbb
test
lock
jg
cwtl
imul
jle
push
cmp
adc
pop
dec
nop
stos
jmp
sbb
push
pop
mov
mov
or
icebp
cmpsb
jbe
fadds
lahf
dec
aas
adc
jecxz
lret
and
xor
push
or
fnsave
dec
sbb
mov
das
lds
xor
out
xor
mov
push
fs
mov
int
orb
arpl
push
in
repnz
jecxz
mov
loopne
mov
pop
loopne
call
sub
test
lahf
xor
push
les
mov
sti
movsb
in
jne
sub
mov
scas
fldt
outsb
in
hlt
dec
cmp
daa
mov
hlt
xchg
fcmovbe
das
adc
mov
xchg
xchg
jne
mov
aaa
arpl
add
sbb
jnp
sub
mov
or
sti
das
push
lea
sub
push
fisubl
add
dec
cmpsl
lret
inc
imul
mov
iret
or
mov
jg
leave
sub
jae
popf
xchg
and
cmp
imul
cwtl
jmp
stc
movsl
mov
sarl
cmp
inc
ja
scas
jl
and
lea
and
sbb
clc
out
scas
sub
repz
add
in
mov
shll
pop
add
scas
cmpsb
fsubl
jg
das
mov
sbb
add
push
insl
xor
je
mov
stos
xchg
or
xchg
in
out
sub
xor
das
pop
lds
sub
cmpb
sub
loop
leave
movlps
shrb
mov
and
inc
inc
outsb
sbb
insb
or
adc
fcmovnbe
jle
sub
popa
push
test
adc
mov
push
cld
xchg
sub
data16
and
xor
ret
mov
push
mov
mov
jg
flds
xchg
rcll
les
xor
pop
clc
test
sub
dec
test
xor
lret
cld
sbb
sub
cmp
mov
data16
push
inc
icebp
mov
outsb
jl
mov
jno
jg
push
jmp
int
inc
gs
inc
add
jnp
out
sbb
or
or
mov
inc
mov
mov
pop
inc
xor
pop
testl
lods
inc
cs
xlat
fists
inc
pop
push
movsb
adc
mov
ds
inc
dec
jmp
loop
pop
popa
sbb
xchg
xorb
xor
daa
std
dec
out
in
clc
jg
int
and
les
aas
jmp
cmp
addr16
stos
movsl
in
lods
ss
push
xor
imul
or
jmp
or
push
ds
cld
in
and
xor
pop
adc
inc
push
pop
push
cmp
xor
push
out
push
or
cwtl
sub
push
inc
inc
hlt
popa
and
pop
insb
nop
movl
and
mov
push
adc
mov
or
enter
pop
or
lods
sub
ret
insb
jmp
adc
push
mov
adc
adc
rol
jmp
popa
sbb
cmp
sub
or
divl
int3
adc
xor
scas
aaa
and
push
stc
and
pop
lcall
push
loop
dec
mov
fildl
mov
adc
xorl
rcll
lock
popa
daa
adc
pop
aad
sbb
cmp
jae
xchg
push
lcall
jnp
lret
sbb
add
jbe
sub
mov
and
in
bound
mov
dec
adc
cld
popf
xor
call
cli
push
cmpsl
xor
lahf
or
fcoml
dec
or
sub
jecxz
cmpsl
mov
jl
push
nop
adc
repz
mov
add
jle
insb
mov
js
int
in
dec
dec
mov
outsb
pop
in
push
cwtl
xlat
in
and
nop
divl
jnp
imul
mov
cld
mov
loopne
shrb
and
pop
cmp
adc
stos
fstpl
mov
mov
scas
scas
daa
sti
out
mov
call
bound
xchg
nop
inc
in
les
cmp
pop
push
push
sub
not
xchg
and
fsubl
adc
aaa
jmp
mov
fistpl
push
imul
adc
imul
sarl
jl
mov
push
inc
jo
bound
fwait
and
stos
xor
jns
pop
das
push
pushf
hlt
call
and
pushf
test
test
jle
cmpsb
xor
repz
cmp
cld
jge
out
loop
lods
add
sti
jl
mov
in
push
dec
jl
outsl
and
sbb
mov
cmp
xchg
loop
jp
pushf
hlt
fisubs
mov
cmp
cmp
mull
pop
mov
dec
xchg
xchg
mov
cmc
xor
xchg
cmpb
call
sub
out
push
pop
inc
or
das
shl
repnz
hlt
mov
adc
ret
xlat
jge
cmp
add
jl
push
jg
jne
pop
push
mov
in
test
ljmp
scas
adc
dec
xor
mov
pop
or
les
lcall
divl
cmp
mov
jne
ja
push
sub
or
xor
pop
loop
fmull
sub
add
outsb
add
aam
mov
or
movsb
pop
mov
bnd
in
fsubrs
ja
jo
cmp
lret
sbb
icebp
sbb
jge
or
daa
test
loop
push
dec
mov
loopne
mov
loopne
inc
push
add
out
fld1
jb
ss
dec
sbb
in
or
add
push
or
push
clc
fimuls
xor
xor
dec
xchg
test
push
lds
movsl
pushf
dec
sbbl
pop
fwait
fdivrl
cmp
in
and
dec
cmp
and
lret
ljmp
sbb
leave
inc
mov
dec
inc
ds
stc
or
fidivrs
inc
push
dec
mov
mov
imul
and
ret
rol
call
fadds
dec
jg
or
std
sub
cmp
decb
inc
jns
cmp
inc
sbb
movsb
push
sahf
fdivp
add
dec
sbb
inc
cmp
test
xchg
rcll
loope
push
xchg
push
inc
fmul
repz
jmp
cwtl
mov
push
mov
cmp
pusha
mulb
adc
and
test
jbe
cmc
or
ja
dec
mov
inc
ret
repnz
inc
add
or
mov
inc
rorl
shrb
push
and
into
and
mov
rolb
or
shlb
ja
cli
imul
pop
jb
das
in
jle
or
lahf
pop
rdmsr
sbb
adc
dec
mov
fisubl
pop
push
outsb
aas
push
pop
xor
fistpll
adcb
inc
xchg
shrl
or
xchg
sub
cmp
repz
dec
inc
xlat
mov
imulb
cmp
lock
aas
xchg
stc
mov
cli
push
test
add
pop
loope
push
fcomip
mov
jb
add
sub
lds
outsl
and
push
clc
and
mov
aas
negb
punpckldq
add
enter
jmp
sbbb
push
cmp
int3
cmp
sub
dec
adc
jp
mov
andl
xor
xlat
xor
cwtl
mov
jmp
dec
and
je
jl
jne
fisubl
sbb
packssdw
xor
xor
mov
test
mov
rolb
lcall
les
pop
rorl
xchg
movsl
mov
xorl
fsubs
repnz
add
test
pop
mov
imul
sbb
push
push
fadds
cld
push
cli
add
int3
ret
ljmp
or
lahf
ret
into
push
mov
scas
fmuls
adc
mov
loopne
inc
popa
lahf
jmp
push
add
int3
xchg
fcoml
jmp
insb
nop
loop
je
pusha
orl
push
outsb
cmp
push
xchg
add
xorl
loop
addr16
xchg
or
data16
test
sub
adc
std
scas
pusha
mov
int3
popa
or
mov
add
lea
mov
negb
addl
roll
fiadds
adc
fs
and
andl
cmp
mov
xor
push
lods
ljmp
bound
adc
adc
aam
int
add
test
dec
ret
mov
mov
repz
imul
mov
xchg
dec
lahf
adc
or
xchg
ds
mov
mov
mov
std
jle
push
loopne
sbb
jnp
insb
xchg
mov
jle
leave
lea
cwtd
ljmp
cmp
xchg
xorb
iret
mov
push
xchg
ss
scas
into
sub
fwait
xor
mov
idivb
jnp
lcall
sbb
mov
fxch
push
or
test
push
pop
pop
std
ss
loope,pt
mov
sarl
push
out
pop
mov
sbb
jmp
das
mov
das
das
lock
enter
loop
testb
stc
xor
imul
dec
cld
cwtl
aad
mov
lods
pop
nop
insl
sub
cmp
shlb
ficoms
gs
pop
mov
push
scas
pop
daa
lods
xchg
inc
lcall
rcrl
imul
mov
adc
lahf
adcb
std
or
mov
jle
jbe
insl
xacquire
and
fistpll
xchg
fidivrl
test
lea
icebp
sbb
pusha
mov
bound
push
xchg
nop
pop
fbld
test
mov
cmpsb
push
sbb
mov
lods
pop
dec
cltd
call
loopne,pn
sahf
mov
jmp
jns
es
mov
loopnew
jne
cwtl
pop
sub
stos
movsb
jnp
xchg
pop
std
bound
mov
jbe,pn
cltd
ss
fimuls
cmpsl
push
sbb
sub
loope
fbld
sahf
arpl
repnz
sbb
adc
popa
and
pop
fcomi
and
jne
push
pop
out
xchg
xchg
mov
stos
mov
xchg
inc
adc
jo
or
sub
sbb
sbb
ds
test
loop
jne
pop
subl
cmp
mov
pop
jno
xlat
rcll
lahf
mov
addr16
push
loop
jnp
movsb
pop
roll
sbb
rorl
clc
out
clc
add
mov
cs
jg
cmp
dec
xor
leave
add
rclb
fsubrs
dec
xchg
xchg
cmp
inc
aad
mov
pop
inc
adc
lcall
pop
jbe
jno
cmpsb
test
and
negb
js
inc
out
rcr
sti
push
add
mov
sarl
je
xchg
mov
adc
dec
arpl
bound
daa
jp
ret
sbb
mov
js
mov
enter
or
xor
rorb
subl
pop
ss
aad
imul
dec
push
imul
les
push
fs
adc
adc
repz
inc
aas
mov
sbb
dec
xchg
inc
out
mov
fwait
jle
inc
pop
js
lds
mov
push
iret
sti
jmp
and
push
out
movsl
sbb
jns
fcom
xchg
mov
subb
imul
mov
lahf
inc
imul
jo
mov
and
xchg
mov
hlt
push
fwait
aam
xor
jne
fs
out
fcmove
addr16
pop
and
dec
push
aad
sub
loop
negb
xlat
inc
inc
fistl
out
rorl
inc
pushf
repz
bound
scas
pop
xchg
push
gs
sahf
pop
aad
and
fcmovu
fwait
lret
or
jmp
std
mov
dec
pop
jnp
fstps
cwtl
and
push
pop
movsb
mov
push
andl
sahf
insl
fnsave
sub
fwait
aas
repnz
sub
pop
mov
inc
mov
and
sub
je
test
lds
in
push
ljmp
xchg
jbe
cmp
xchg
into
add
shr
popf
sbb
xchg
xchg
std
loopne
and
sub
pop
xor
pusha
scas
aam
dec
fldcw
push
mov
mov
pusha
and
inc
pop
pushf
mov
push
lods
pop
jecxz
mov
aaa
jno
and
cli
mov
xor
xor
leave
cmpb
add
lods
sub
push
jp
dec
mov
rcll
or
pop
mov
inc
jp
das
sbb
xor
mov
mov
push
loope
cmp
insb
inc
jnp
xchg
and
xchg
xor
or
ret
out
or
push
fstps
hlt
sub
gs
fldenv
enter
outsb
roll
xchg
cmp
mov
adc
arpl
test
stos
mov
dec
xor
inc
adcb
jmp
dec
clc
mov
mov
xlat
ret
ljmp
gs
out
addl
std
daa
mov
scas
push
outsl
mov
mov
imul
xlat
xor
dec
push
push
in
sbb
dec
sbb
aas
xor
sahf
xlat
cmpb
test
mov
jb
mov
in
pop
orl
mov
movsb
mov
sub
dec
enter
lcall
lret
add
mov
scas
lcall
out
adc
push
rcr
sbb
dec
adcl
add
inc
adc
pop
fnstenv
xchg
xchg
mov
je
push
fstpl
lock
sub
push
sbb
xor
fldl
pop
xor
sti
insb
push
xchg
imul
cmp
mov
lret
cs
jns
in
jo
arpl
adc
jg
push
xchg
add
mov
xor
icebp
pusha
mov
push
loope
add
addr16
xlat
cli
push
pop
inc
mov
push
es
sti
mov
sub
icebp
xor
leave
std
xor
pop
pop
mov
mov
mov
sbb
xchg
addr16
fidivrs
sub
mov
add
dec
pop
addr16
insl
scas
cmp
xchg
in
fwait
jle
xchg
sti
cmp
mov
mov
inc
adc
mov
mov
out
hlt
aaa
sbb
pop
push
paddsb
aas
lods
js
aad
sbb
roll
mov
test
xor
rcr
xchg
lahf
push
div
pop
jg
out
add
icebp
stc
sub
mov
lahf
xchg
addr16
add
push
jne
lea
sbb
cmp
mov
mov
insb
xor
pushf
ret
call
jge
mov
inc
xor
dec
das
jg
xchg
push
add
pop
outsl
cmp
dec
or
fldl
sbb
push
adc
out
sahf
jp
ljmp
cmpl
xchg
stos
sub
aad
cmpsb
push
popw
cli
aad
mov
xlat
imul
jle
loop
dec
and
outsb
orps
das
arpl
cli
scas
add
cmp
xor
and
arpl
in
cmp
aas
clc
jno
sub
inc
out
pop
and
and
dec
sub
mov
dec
push
and
stc
movsl
fcompl
loope
into
dec
cmp
popf
mov
scas
enter
out
xor
cmp
sbb
roll
xor
dec
nop
dec
dec
inc
movsl
sbb
mov
inc
mov
bound
stc
cs
ret
cld
repz
push
testl
addb
lock
sub
fs
cmp
push
stos
add
mov
shll
mov
sbbb
mov
push
movsb
jae
inc
ret
jbe
or
js
xlat
xchg
cwtl
fistl
push
js
imul
cmp
xor
call
push
mov
rorl
mov
pusha
cwtl
out
iret
jno
daa
dec
test
cmp
adc
fldl
push
aaa
insb
jecxz
and
inc
dec
lahf
mov
xchg
out
fmuls
cmp
cli
pop
enter
clc
xchg
ds
mov
test
pop
adc
pop
jecxz
mov
mov
push
stos
dec
scas
roll
outsl
inc
ja
movsl
mov
jecxz
lcall
xchg
xchg
mov
lock
inc
xlat
sub
push
aad
in
aas
sub
xor
mov
out
ffree
incl
push
stos
fsubrl
fwait
mov
loop
out
sbb
enter
adc
mov
push
sbb
mov
and
scas
sub
sub
call
fbld
shlb
rorl
add
pushf
adc
xchg
scas
cmp
pop
mov
cmpsl
rcrb
push
cs
pop
sub
xchg
and
sbb
jb
rorl
sub
rcr
pop
mov
nop
push
dec
jge
pop
fisubs
pop
movl
mov
repz
xor
cmp
insl
aad
jge
mov
in
pop
push
in
insb
ja
add
aas
cmc
fldt
cmp
rcrl
fwait
daa
call
repnz
xor
es
cmp
sbbl
mov
adc
dec
sbb
iret
cmpl
scas
inc
xchg
xor
aam
mov
or
jnp
lods
into
rcl
cs
cltd
pop
cmovg
jns
push
or
js
cmp
jge
xchg
jecxz
xchg
out
icebp
xor
test
stos
in
mov
jbe
stc
test
jno
dec
pop
inc
jno
test
push
fiadds
call
mov
pop
cs
lret
insb
in
fldt
mov
lods
mov
sbb
adc
sbb
jmp
iret
push
add
andl
cmp
mov
call
data16
test
mov
or
mov
add
adcb
cmc
sahf
mov
add
mov
mov
adc
xchg
gs
ffree
push
mov
bound
sub
aad
xor
lea
in
leave
ja
or
pop
jmp
mov
add
out
or
lods
dec
mov
and
dec
divb
in
pusha
enter
dec
es
frstor
xlat
subb
stc
mov
bound
jle
sbb
mov
int3
imul
mov
xor
push
inc
mov
sub
mov
mov
addb
pusha
add
mov
inc
in
mov
cld
dec
fcomp
jmp
imul
xchg
inc
jnp
xchg
mov
outsl
sar
sbb
cmp
pop
lods
mov
xchg
mov
add
and
das
inc
add
enter
mov
shll
lods
pushf
mov
stos
jae
enter
leave
fisubl
sbb
dec
addr16
xor
je
test
inc
scas
sbb
lock
xchg
in
ljmp
mov
and
into
jge
push
push
sarb
sub
pop
mov
xchg
ja
adc
adc
inc
fwait
or
call
bt
jp
adc
mov
std
mov
iret
and
out
cmp
sahf
xchg
jmp
hlt
mov
mov
push
pop
jbe
mov
cmp
xor
cli
insl
js
loopne
enter
aaa
add
or
sub
imul
out
pusha
sub
rcrl
cmp
gs
cmpsl
xchg
push
sbb
sub
cmp
test
leave
push
mov
jg
mov
inc
cmpsb
decb
lahf
mov
xlat
rorb
hlt
xchg
cltd
xor
push
jne
js
insl
push
inc
dec
aam
pop
insb
test
xchg
adc
in
xor
rorb
aaa
xorl
pop
fucomip
jae
lods
mov
fdivrl
and
inc
sarb
popa
dec
mulb
rorl
mov
xchg
adcb
jb
fwait
nop
pop
cmp
or
add
jmp
sti
jp
push
fcomip
mov
xlat
add
nop
jo
loope
enter
jnp
test
pop
pop
push
mov
mov
and
mov
arpl
mov
pop
xor
add
mov
jmp
cmpsl
out
pop
sahf
outsl
mov
adc
push
faddl
mov
push
push
imul
pop
pop
push
pop
jle
sbb
xchg
inc
int3
adcb
psubusb
add
das
xor
sub
cmp
mov
cmp
xor
pop
sbb
fwait
adc
je
not
cmpsb
sub
pop
gs
pop
mov
mov
scas
mov
push
xlat
filds
adc
arpl
mov
xor
cwtl
sarb
call
fistpl
add
inc
mov
jge
frstor
add
xchg
inc
loope
sub
cs
out
pop
cltd
mov
lret
lds
test
decl
cmp
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
add
movl
cmpl
jge
mov
cmp
je
xor
mov
push
push
push
push
call
incl
cmpl
jle
movl
movl
mov
cmp
jl
lea
mov
mov
mov
or
sub
add
lea
mov
mov
mov
or
add
mov
add
test
jl
sub
sub
sub
addl
lea
mov
mov
mov
imul
imul
mov
jmp
movl
pushl
pushl
pushl
pushl
call
mov
or
mov
and
add
sub
xor
mov
movl
movl
mov
add
sub
incl
cmpl
jle
jmp
movl
lea
mov
mov
mov
sub
add
mov
imul
sub
subl
testl
jl
add
addl
add
call
add
add
test
je
sub
add
je
subl
add
add
sub
push
call
call
movl
mov
imul
mov
push
call
call
mov
pop
ret
nop
nop
nop
push
mov
add
mov
mov
sub
add
cmp
jne
sub
test
jl
sub
and
adc
add
sub
sub
movl
movl
lea
mov
mov
mov
or
mov
sub
mov
and
testl
jne
add
sub
add
xor
mov
movl
lea
mov
mov
mov
add
add
add
sub
cmp
jne
add
xorl
sub
cmpl
je
movl
cmpl
jne
mov
inc
mov
cltd
idiv
sub
cmpl
jne
movl
mov
add
sub
incl
cmpl
jle
mov
mov
mov
mov
movl
mov
inc
push
mov
pop
mov
cltd
idiv
imul
mov
movl
mov
cmp
jne
push
call
movl
pushl
push
push
push
call
xor
mov
pop
ret
nop
nop
push
mov
add
mov
xor
mov
xor
mov
push
lea
push
call
movl
lea
mov
mov
inc
mov
mov
mov
cltd
idiv
imul
mov
incl
cmpl
jle
mov
mov
pop
ret
nop
nop
nop
push
mov
add
xor
mov
movl
movl
mov
add
imul
mov
incl
cmpl
jle
mov
shl
mov
add
sub
cmp
jl
add
add
test
je
sub
or
adc
sub
sub
xor
shll
xor
mov
incl
cmpl
jle
mov
mov
pop
ret
nop
push
mov
add
movl
cmpl
jl
xor
mov
sub
testl
jb
add
testl
jl
and
sub
or
sub
or
movl
movl
mov
cmp
jg
movl
movl
lea
mov
mov
mov
sub
sub
movl
movl
movl
mov
or
sub
mov
jmp
adc
cmp
jl
or
add
addl
incl
cmpl
jle
jmp
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
movl
movl
lea
mov
mov
and
mov
sub
sub
movl
cmpl
jne
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
movl
movl
movl
mov
or
sub
add
sub
test
je
sub
subl
adc
cmpl
jne
movl
lea
mov
lea
mov
mov
mov
mov
imull
mov
xor
mov
incl
cmpl
jle
jmp
movl
movl
mov
cmp
jle
add
sub
jl
adc
sbb
test
ja
adcl
add
adc
and
jmp
movl
mov
and
add
sub
adc
test
jb
add
sub
add
add
xor
mov
movl
cmpl
jge
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
imul
mov
incl
cmpl
jle
movl
movl
mov
cmp
jle
movl
cmpl
jne
mov
and
mov
inc
mov
cltd
idiv
add
jmp
mov
inc
push
mov
pop
mov
cltd
idiv
add
sub
test
jb
add
and
addl
xor
mov
incl
cmpl
jle
movl
mov
or
mov
and
imul
mov
cmpl
je
mov
add
sub
movl
movl
mov
add
imul
mov
movl
lea
mov
mov
mov
add
mov
add
test
jl
and
test
ja
subl
sub
addl
sub
add
add
test
jne
sub
add
jb
add
add
add
add
mov
pop
ret
nop
push
mov
add
xor
mov
movl
cmpl
jne
addl
or
test
jne
or
test
jb
sbb
addl
add
xor
mov
incl
cmpl
jle
incl
cmpl
jle
movl
cmpl
jne
add
subl
testl
je
sub
sbb
cmp
jb
adcl
xor
sub
add
movl
movl
mov
cmp
jle
xor
mov
movl
movl
lea
mov
mov
mov
mov
or
sub
add
incl
cmpl
jle
movl
cmpl
movl
movl
movl
mov
and
mov
or
add
add
movl
movl
lea
mov
mov
mov
or
sub
add
add
add
cmp
jb
add
test
je
add
orl
or
add
and
add
sub
cmp
jl
sub
add
xorl
movl
cmpl
jne
xor
mov
incl
cmpl
jle
xor
mov
movl
movl
mov
and
add
mov
sub
subl
testl
jl
sub
test
jl
sub
sub
adc
add
incl
cmpl
jle
jmp
xor
mov
incl
cmpl
jle
or
adcl
test
jb
sub
addl
cmp
jne
add
or
subl
add
movl
mov
imul
sub
or
adcl
cmp
jl
add
add
ja
add
adc
adcl
sbb
subl
xor
mov
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
incl
cmpl
jle
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
add
sbb
test
ja
subl
and
mov
pop
ret
nop
nop
nop
push
mov
add
xor
mov
sub
test
ja
add
test
jne
add
add
or
sub
incl
cmpl
jle
adc
testl
jb
sub
add
testl
je
add
add
add
sub
movl
cmpl
jl
xor
mov
incl
cmpl
jle
xor
mov
xor
mov
movl
movl
lea
mov
movl
mov
mov
or
imull
sub
incl
cmpl
jle
incl
cmpl
jle
add
sbb
sub
jl
sub
sub
add
xor
mov
movl
lea
mov
mov
mov
add
mov
incl
cmpl
jle
movl
movl
movl
mov
and
mov
inc
mov
cltd
idiv
sub
movl
movl
mov
or
imull
mov
sub
sbb
test
jb
or
add
sbbl
add
movl
cmpl
movl
mov
imull
mov
addl
sub
cmp
jl
add
add
xor
mov
incl
cmpl
jle
xor
mov
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
movl
cmpl
jne
movl
cmpl
jge
movl
lea
mov
movl
mov
mov
or
imul
mov
lea
mov
mov
mov
and
mov
inc
mov
cltd
idiv
add
movl
mov
cmp
je
movl
movl
mov
or
add
add
incl
cmpl
jle
movl
movl
movl
mov
or
mov
inc
mov
cltd
idiv
mov
movl
mov
add
mov
subl
add
testl
jl
add
test
jb
sbb
sub
sub
add
mov
imull
mov
sub
add
cmp
jne
sbb
addl
add
sub
sub
jb
add
add
jne
subl
sub
sub
sub
sub
mov
pop
ret
push
mov
add
and
test
je
sub
test
ja
adc
sub
sub
sub
sub
add
test
jne
add
cmp
jne
xor
xor
add
movl
movl
mov
cmp
je
movl
movl
lea
mov
mov
and
mov
sub
mov
movl
lea
mov
lea
mov
mov
mov
and
mov
add
sub
movl
movl
mov
and
mov
inc
mov
cltd
idiv
mov
movl
cmpl
movl
cmpl
jg
sbb
sub
test
ja
add
and
sub
movl
movl
mov
add
imul
mov
mov
cmp
addl
test
jne
or
cmp
jne
addl
add
add
sbb
sub
movl
mov
or
mov
inc
mov
cltd
idiv
imul
mov
movl
mov
add
mov
add
cmp
ja
add
sub
test
jl
sbb
subl
subl
adc
add
add
movl
mov
imull
sub
movl
mov
or
add
imul
mov
xor
test
jne
add
sbb
mov
and
mov
sub
sub
sub
add
test
jb
or
and
sub
and
add
test
jb
add
add
mov
pop
ret
nop
push
mov
add
xor
mov
add
add
test
jb
sub
sub
add
sub
incl
cmpl
jle
or
testl
ja
sub
sub
movl
movl
lea
mov
mov
inc
mov
cltd
idiv
mov
xor
mov
xor
mov
movl
movl
mov
or
mov
or
sub
add
incl
cmpl
jle
xor
mov
xor
mov
movl
lea
mov
mov
mov
add
mov
incl
cmpl
jle
incl
cmpl
jle
incl
cmpl
jle
movl
movl
mov
and
imul
imul
mov
addl
test
jl
sub
testl
jne
addl
add
sub
andl
subl
sub
xor
mov
xor
mov
movl
movl
lea
mov
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
and
test
ja
add
test
ja
add
add
add
addl
movl
movl
mov
or
add
add
incl
cmpl
jle
movl
cmpl
jne
movl
mov
cmp
movl
lea
mov
mov
mov
add
mov
subl
cmp
je
addl
subl
cmp
jb
add
subl
sub
add
adc
incl
cmpl
jle
movl
movl
mov
or
sub
mov
xor
mov
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
add
incl
cmpl
jle
xor
test
jl
add
cmp
jne
sub
or
add
subl
add
add
sub
test
je
sub
testl
jne
sub
add
add
sub
sub
addl
add
jl
add
test
ja
sub
sub
add
add
sub
add
sub
test
je
add
addl
sub
xor
mov
sub
add
test
jl
sub
test
jb
and
or
sub
incl
cmpl
jle
xorl
xor
test
jne
adc
sub
cmp
ja
add
andl
sub
mov
pop
ret
push
mov
add
movl
lea
mov
lea
mov
mov
mov
mov
mov
or
sub
imul
mov
and
or
ja
sbb
add
xor
xor
mov
xor
mov
movl
movl
mov
sub
imul
mov
incl
cmpl
jle
incl
cmpl
jle
mov
mov
mov
mov
pop
ret
nop
nop
nop
push
mov
add
movl
cmpl
jl
xor
mov
incl
cmpl
jle
xor
mov
movl
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
imul
mov
addl
addl
test
jne
sub
sbb
or
movl
movl
lea
mov
lea
mov
mov
mov
mov
imul
mov
sub
sub
jl
and
sub
test
jb
xor
addl
add
sub
incl
cmpl
jle
movl
movl
mov
add
mov
movl
mov
or
imul
sub
xor
mov
incl
cmpl
jle
movl
cmpl
subl
sub
test
ja
adc
add
sbbl
add
movl
cmpl
jl
movl
mov
imul
sub
xor
mov
incl
cmpl
jle
jmp
sub
sub
test
ja
sbb
adc
sbb
add
movl
movl
lea
mov
mov
mov
imul
mov
xor
mov
movl
cmpl
jg
xor
mov
incl
cmpl
jle
xor
mov
movl
cmpl
jl
xor
addl
testl
jb
add
cmp
ja
sub
sub
add
sub
incl
cmpl
jle
incl
cmpl
jle
xor
mov
sub
sub
cmp
jne
and
add
add
or
incl
cmpl
jle
adc
add
test
je
add
and
add
add
mov
pop
ret
nop
nop
nop
push
mov
add
movl
movl
lea
mov
mov
mov
and
imul
mov
cmpl
sub
adc
cmp
jb
sub
test
ja
and
add
sub
adc
movl
cmpl
je
cmpl
jne
add
test
jl
sbb
sub
add
add
movl
lea
mov
mov
mov
or
add
add
cmpl
jg
lea
mov
movl
mov
and
mov
mov
or
imul
sub
lea
mov
mov
mov
or
mov
and
sub
imul
mov
xor
testl
jl
add
sub
add
adc
lea
mov
lea
mov
mov
mov
and
mov
add
add
sbbl
sub
jb
subl
test
jb
add
sub
sub
or
add
mov
shr
xor
mov
movl
mov
cmp
jl
add
test
je
add
test
jl
add
sub
add
and
lea
mov
mov
mov
mov
and
imul
add
jmp
mov
sub
imul
mov
xor
mov
incl
cmpl
jle
mov
mov
pop
ret
nop
nop
push
mov
add
push
movl
movl
pushl
pushl
pushl
push
call
push
call
pushl
pushl
pushl
push
call
pushl
call
call
pop
mov
movl
cmpl
jne
call
movl
mov
add
imul
mov
sub
add
cmp
jb
sub
sbb
and
jb
sub
add
xor
add
andl
push
push
push
call
call
movl
cmpl
jle
call
jmp
movl
lea
mov
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
mov
cmp
jg
xor
mov
xor
mov
movl
mov
imul
add
incl
cmpl
jle
incl
cmpl
jle
subl
mov
cmpw
jne
xor
mov
movl
lea
push
lea
push
call
adc
xor
cmp
jne
sub
xorl
addl
incl
cmpl
jle
movl
movl
movl
push
pushl
pushl
pushl
pushl
call
and
subl
test
jb
add
add
cmp
jne
add
add
add
xor
adc
lea
mov
lea
mov
mov
mov
or
mov
add
add
mov
pop
mov
pop
ret
push
mov
add
xor
mov
incl
cmpl
jle
and
sub
test
je
and
sub
add
movl
cmpl
jle
movl
mov
inc
mov
mov
cltd
idiv
add
call
xor
mov
xor
mov
incl
cmpl
jle
movl
mov
and
mov
inc
mov
cltd
idiv
mov
movl
mov
imull
imul
mov
xor
mov
sub
adc
cmp
jl
andl
xor
add
incl
cmpl
jle
pushl
call
mov
movl
mov
cmp
jl
movl
mov
and
imul
mov
subl
cmp
jne
add
test
jne
sub
subl
sbbl
sub
movl
cmpl
je
mov
or
imull
imul
mov
cmpl
jge
add
test
jb
add
testl
jl
addl
add
add
addl
add
xor
or
adc
ja
add
test
jl
add
add
sbbl
add
call
mov
movl
cmpl
jge
movl
lea
mov
mov
mov
mov
or
add
imul
mov
jmp
movl
lea
mov
mov
mov
imul
sub
mov
mov
movl
mov
sub
mov
mov
shr
mov
xor
mov
incl
cmpl
jle
shrl
movl
movl
mov
add
sub
addl
cmp
jne
sbb
subl
test
jb
sub
sub
and
sub
addl
mov
xor
movl
mov
cmp
call
xor
mov
and
add
sub
jb
sub
testl
je
or
sub
sub
sub
sub
movl
mov
cmp
jl
movl
lea
mov
mov
mov
add
mov
jmp
movl
cmpl
je
movl
mov
sub
add
add
adcl
test
jne
add
test
jne
add
add
add
movl
movl
lea
mov
mov
mov
sub
add
mov
cmp
jne
sub
sub
cmp
jl
sub
add
addl
sub
cmpl
jne
movl
mov
inc
push
mov
pop
mov
cltd
idiv
add
jmp
cmpl
jne
movl
movl
mov
add
mov
jmp
add
test
jne
subl
sub
andl
mov
mov
pop
ret
nop
nop
nop
push
mov
add
xor
mov
movl
cmpl
jle
movl
cmpl
je
movl
movl
mov
imul
mov
jmp
add
subl
cmp
je
add
orl
cmp
jb
sub
sub
add
addl
jmp
and
add
je
xor
xor
incl
cmpl
jle
add
sub
ja
and
test
je
xor
add
sub
or
movl
movl
mov
imul
mov
and
sub
test
jne
add
sbb
sub
movl
movl
mov
sub
mov
adc
testl
je
xor
and
xor
sub
test
ja
sub
add
test
ja
or
and
sub
movl
mov
add
imul
mov
mov
add
sub
xor
mov
xor
mov
cmpl
jg
movl
lea
mov
mov
mov
imul
mov
jmp
or
cmp
ja
sub
sub
subl
movl
movl
mov
and
add
add
incl
cmpl
jle
incl
cmpl
jle
add
add
cmp
jne
sbb
sbb
jne
add
or
add
sub
mov
pop
ret
push
mov
add
movl
movl
lea
mov
movl
mov
mov
and
add
mov
xor
mov
movl
movl
lea
mov
mov
mov
add
mov
incl
cmpl
jle
and
sub
test
jne
or
sub
cmp
jb
sub
sbbl
sbb
sub
movl
movl
movl
mov
and
imul
mov
movl
movl
movl
mov
inc
mov
cltd
idiv
mov
movl
mov
inc
mov
cltd
idiv
sub
lea
mov
mov
mov
imul
mov
movl
movl
lea
mov
mov
mov
or
imul
add
or
add
or
ja
or
or
test
jb
sub
add
add
sub
sub
xor
mov
mov
and
mov
inc
mov
cltd
idiv
imul
mov
adc
sub
add
jb
add
test
jl
and
sub
add
add
sbb
incl
cmpl
jle
cmpl
jge
xor
mov
mov
cmp
je
and
test
jne
sub
testl
ja
addl
add
sub
xor
movl
mov
inc
mov
mov
cltd
idiv
mov
incl
cmpl
jle
cmpl
jne
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
sub
add
andl
test
jb
addl
and
sub
jmp
cmpl
jne
mov
cmp
movl
movl
mov
cmp
jg
sub
cmp
je
subl
and
xor
mov
lea
mov
mov
mov
mov
and
imul
imul
mov
add
sub
test
jne
or
testl
je
sub
add
add
sub
sub
incl
cmpl
jle
lea
mov
mov
and
mov
sub
add
movl
mov
imull
mov
cmpl
add
add
sub
jl
add
sub
mov
pop
ret
nop
nop
push
mov
add
movl
movl
pushl
pushl
pushl
pushl
pushl
call
lea
mov
mov
mov
or
mov
and
sub
add
movl
movl
pushl
pushl
pushl
pushl
call
xor
mov
mov
cmp
je
pushl
pushl
pushl
pushl
push
call
pushl
pushl
pushl
pushl
push
call
pushl
call
jmp
mov
sub
sub
pushl
pushl
pushl
push
pushl
call
sub
and
testl
jl
add
add
sub
sub
cmpl
jl
movl
lea
mov
mov
mov
imull
add
call
jmp
movl
lea
mov
mov
mov
add
imul
mov
movl
mov
inc
mov
mov
cltd
idiv
sub
sub
test
jb
sub
xor
incl
cmpl
jle
subl
xor
testl
je
subl
sbb
push
call
call
mov
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
xor
mov
movl
movl
mov
add
mov
incl
cmpl
jle
decl
je
pushl
pushl
pushl
call
jmp
movl
pushl
call
movl
pushl
call
push
pushl
pushl
pushl
call
add
xor
test
je
sub
xor
add
movl
movl
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
movl
movl
lea
mov
mov
mov
imull
imul
mov
addl
add
sub
jne
subl
add
xor
jb
sub
add
subl
call
subl
cmp
je
andl
addl
test
ja
sub
subl
add
or
add
mov
mov
pop
ret
nop
nop
push
mov
add
movl
movl
lea
mov
lea
mov
mov
mov
mov
add
add
adc
test
jb
sbb
xor
sub
xorl
xor
mov
or
test
je
add
sub
add
incl
cmpl
jle
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
add
movl
movl
mov
sub
mov
sub
add
cmp
jb
sub
sbb
test
jl
andl
add
sub
xor
sub
test
jb
xor
sub
test
ja
add
add
xor
add
add
or
test
ja
sub
test
jb
and
sub
sub
adcl
xor
mov
incl
cmpl
jle
sub
test
ja
addl
adc
cmp
jl
add
add
sbb
movl
mov
inc
mov
cltd
idiv
mov
and
test
je
add
addl
test
jne
sub
xorl
andl
movl
cmpl
jne
movl
cmpl
jge
movl
cmpl
jne
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
add
jmp
movl
lea
mov
movl
mov
and
mov
add
mov
movl
movl
mov
add
imul
mov
add
sub
add
jb
addl
sbb
testl
jl
sub
sub
sub
addl
addl
movl
movl
mov
add
mov
xor
mov
xor
mov
movl
movl
lea
mov
movl
mov
and
mov
mov
or
sub
mov
movl
lea
mov
lea
mov
mov
mov
mov
sub
add
incl
cmpl
jle
incl
cmpl
jle
movl
lea
mov
mov
mov
mov
and
sub
mov
add
add
cmp
ja
add
add
test
je
adc
adc
and
add
sub
subl
orl
testl
je
adc
test
ja
sub
add
addl
sub
add
add
add
testl
jb
sbb
sub
movl
cmpl
jl
sub
test
jb
subl
add
sub
jmp
subl
test
ja
add
test
ja
or
add
add
add
xor
mov
add
add
testl
je
sub
sub
sub
incl
cmpl
jle
sub
adc
test
je
sub
subl
add
jb
sub
sbb
sub
and
mov
pop
ret
nop
push
mov
add
push
lea
push
call
xor
mov
movl
cmpl
jg
movl
mov
add
sub
add
and
jl
add
add
cmp
jl
add
sbb
or
add
jmp
movl
movl
pushl
pushl
push
push
call
sub
adc
cmp
jl
add
sbb
addl
movl
mov
add
imul
mov
incl
cmpl
jle
xor
mov
movl
lea
mov
mov
and
mov
inc
mov
cltd
idiv
imul
mov
incl
cmpl
jle
movl
pushl
pushl
pushl
call
movl
movl
pushl
pushl
pushl
call
push
lea
push
call
subl
cmp
je
add
add
je
subl
sub
sbb
movl
mov
or
imull
add
movl
mov
or
sub
imul
mov
pushl
pushl
pushl
call
movl
lea
push
lea
push
call
push
call
movl
movl
push
pushl
pushl
pushl
call
mov
pop
ret
nop
nop
nop
push
mov
add
movl
cmpl
jle
movl
cmpl
movl
movl
lea
mov
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
sub
test
jl
or
cmp
ja
add
sbbl
and
movl
cmpl
jge
movl
movl
lea
mov
mov
mov
mov
or
imul
mov
sub
sub
test
jb
sbb
sub
add
jmp
movl
cmpl
jg
movl
mov
sub
add
subl
add
sbb
ja
subl
sub
addl
sbb
xor
mov
xor
mov
movl
movl
lea
mov
movl
mov
and
mov
inc
mov
cltd
idiv
sub
incl
cmpl
jle
xor
mov
incl
cmpl
jle
incl
cmpl
jle
movl
movl
lea
mov
movl
mov
mov
and
add
add
addl
sub
test
jne
sbb
xor
xor
movl
lea
mov
mov
mov
add
mov
sub
sub
test
jl
sub
or
ja
xor
xor
add
add
sub
movl
mov
and
sub
imul
mov
movl
movl
lea
mov
mov
mov
sub
sub
xor
mov
movl
lea
mov
mov
mov
imul
sub
incl
cmpl
jle
mov
add
mov
movl
lea
mov
movl
mov
mov
or
add
mov
lea
mov
mov
mov
or
mov
and
add
sub
subl
sbb
cmp
jl
or
add
test
jb
sub
addl
add
sub
cmpl
jg
xor
mov
mov
or
mov
sub
sub
incl
cmpl
jle
jmp
movl
lea
mov
mov
inc
mov
cltd
idiv
sub
sub
test
ja
subl
sub
jl
and
sbb
xorl
adc
mov
pop
ret
nop
push
mov
add
xor
test
jne
add
addl
xor
movl
mov
or
mov
inc
mov
cltd
idiv
mov
sub
cmp
jb
sbb
sub
jb
sub
add
sub
addl
sub
movl
cmpl
jge
movl
cmpl
cmpl
je
movl
cmpl
jg
movl
movl
mov
add
mov
sub
test
jl
sbb
testl
jl
sub
sub
sub
lea
mov
mov
mov
and
imul
imul
mov
or
add
testl
ja
sbb
testl
ja
add
or
sbbl
add
movl
movl
lea
mov
mov
mov
imul
mov
add
cmp
jne
add
sub
test
jne
and
adc
subl
subl
add
addl
xor
mov
incl
cmpl
jle
sbb
add
jl
add
test
jl
or
sub
or
sub
add
xor
test
jne
add
test
ja
sub
add
sub
add
cmpl
jg
add
add
cmp
ja
sub
cmp
jne
add
sub
addl
sbb
movl
mov
cmp
jle
movl
movl
mov
add
mov
and
test
jl
addl
cmp
jl
sub
andl
add
sub
sub
sub
adc
jl
adc
sub
or
ja
add
add
xor
adc
mov
pop
ret
nop
push
mov
add
push
push
push
movl
cmpl
jg
lea
mov
mov
mov
add
mov
sbb
cmp
jne
sbb
xor
test
je
add
sub
subl
sub
add
and
cmp
jne
add
sub
test
jne
adc
and
sub
sub
cmpl
jmp
movl
mov
cmp
je
xor
mov
movl
mov
and
mov
or
add
mov
mov
add
sub
lea
mov
mov
mov
mov
and
add
mov
incl
cmpl
jle
movl
mov
or
mov
sub
mov
movl
lea
mov
lea
mov
mov
mov
mov
add
imul
mov
sub
cmp
je
add
add
mov
movl
cmpl
jg
adc
add
test
ja
sub
add
add
xor
mov
xor
mov
incl
cmpl
jle
incl
cmpl
jle
mov
sub
test
ja
sub
test
ja
adc
sub
sub
subl
mov
push
call
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
xor
mov
movl
mov
imull
mov
mov
cmp
jne
movl
lea
mov
mov
and
mov
imull
sub
add
test
jne
sub
sbb
test
ja
sub
sub
addl
subl
xor
mov
xor
mov
movl
movl
pushl
push
pushl
pushl
call
movl
mov
and
sub
imul
mov
add
add
testl
je
sub
subl
sbbl
incl
cmpl
jle
call
incl
cmpl
jle
movl
movl
push
pushl
pushl
pushl
call
xor
mov
lea
mov
mov
and
mov
add
sub
mov
or
add
imul
mov
add
testl
jb
sub
sub
cmp
jl
add
sub
add
and
add
movl
cmpl
jg
push
push
push
push
call
sbb
test
ja
xor
test
je
sub
orl
sub
add
jmp
pushl
push
pushl
pushl
call
incl
cmpl
jle
movl
movl
lea
mov
mov
mov
add
mov
sub
testl
je
add
and
sub
xor
mov
call
movl
mov
and
imul
mov
incl
cmpl
jle
cmpl
je
call
movl
movl
call
pushl
pushl
push
pushl
call
sub
test
jl
and
add
push
push
push
push
call
movl
movl
pushl
pushl
pushl
push
call
pushl
pushl
pushl
push
call
call
addl
add
je
subl
or
movl
movl
mov
or
mov
inc
mov
cltd
idiv
add
add
add
test
je
sbb
testl
jl
addl
sub
sub
add
sub
pushl
push
call
mov
movl
movl
pushl
pushl
call
movl
pushl
pushl
call
pushl
pushl
pushl
call
pushl
pushl
call
pushl
pushl
pushl
call
call
mov
sub
movl
movl
movl
push
pushl
pushl
pushl
call
mov
imull
sub
push
pushl
pushl
pushl
call
push
pushl
push
pushl
pushl
call
mov
cmp
jae
movl
cmpl
jge
call
movl
lea
push
lea
push
call
add
add
cmp
je
or
test
jb
add
add
and
xor
add
sub
call
pushl
pushl
push
pushl
call
pushl
pushl
call
mov
movl
movl
pushl
pushl
push
pushl
call
pushl
pushl
push
pushl
call
call
xor
mov
movl
movl
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
movl
movl
lea
mov
mov
mov
imul
sub
sub
test
je
sbb
and
test
jne
sub
sub
sub
xor
add
add
call
call
call
cmpl
jne
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
add
sub
and
je
sub
cmp
ja
addl
orl
sub
subl
sub
movl
movl
push
pushl
pushl
push
call
push
pushl
pushl
push
call
call
movl
movl
push
pushl
push
pushl
call
xor
mov
movl
mov
sub
add
movl
pushl
pushl
push
call
cmpl
jg
lea
mov
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
sub
push
push
push
call
jmp
xor
mov
movl
pushl
pushl
push
call
incl
cmpl
jle
incl
cmpl
jle
pushl
pushl
pushl
call
movl
pushl
push
pushl
push
call
add
cmp
jl
sub
test
jne
sub
add
adc
add
sub
movl
mov
add
mov
call
movl
call
pushl
push
pushl
pushl
pushl
call
movl
pushl
pushl
pushl
call
movl
lea
mov
mov
and
mov
mov
and
imul
imul
mov
cmpl
je
mov
jmp
mov
mov
xor
mov
movl
movl
pushl
pushl
pushl
pushl
call
lea
push
push
call
add
cmp
jb
add
cmp
jne
sub
sub
sub
sub
sub
incl
cmpl
jle
movl
movl
pushl
push
pushl
pushl
call
movl
lea
mov
mov
mov
or
mov
and
imul
imul
mov
xor
mov
call
incl
cmpl
jle
movl
cmpl
jl
movl
cmpl
jne
movl
push
pushl
push
pushl
call
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
adc
test
je
sbb
add
jne
adc
add
xor
adcl
call
sub
test
je
sbb
testl
ja
and
sub
sbb
sub
add
movl
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
sub
movl
movl
mov
or
sub
sub
pushl
push
call
lea
mov
mov
mov
sub
imul
mov
add
add
cmp
jne
sub
sub
test
jl
sbb
sub
adc
add
call
mov
movl
movl
mov
and
mov
or
imul
add
mov
cmp
jne
movl
mov
or
imull
sub
push
lea
push
call
xor
mov
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
imul
mov
pushl
pushl
pushl
call
pushl
pushl
pushl
call
call
incl
cmpl
jle
jmp
movl
lea
mov
mov
mov
sub
imul
mov
xor
mov
movl
mov
sub
imul
mov
incl
cmpl
jle
call
xor
mov
push
call
sub
addl
cmp
jne
add
add
ja
add
adc
add
add
movl
movl
lea
mov
mov
mov
add
add
pushl
call
add
add
cmp
ja
add
subl
test
ja
sbb
add
adc
sub
sub
incl
cmpl
jle
xor
mov
movl
movl
movl
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
call
andl
add
test
jb
sub
cmp
ja
sub
add
adc
incl
cmpl
jle
xor
mov
sbb
sub
cmp
jne
subl
add
test
jl
sub
add
add
sub
sub
add
movl
cmpl
jne
call
add
test
je
sub
add
add
add
movl
movl
mov
and
mov
sub
imul
mov
add
test
je
subl
test
jb
add
sub
xor
add
mov
add
mov
sub
and
test
jne
subl
subl
add
jmp
movl
lea
mov
mov
mov
and
add
mov
call
mov
inc
mov
mov
cltd
idiv
mov
movl
lea
mov
lea
mov
mov
mov
mov
add
add
subl
and
jl
sub
add
incl
cmpl
jle
mov
add
mov
movl
movl
movl
push
pushl
pushl
pushl
call
push
pushl
pushl
pushl
call
push
pushl
pushl
push
call
push
pushl
pushl
pushl
call
push
pushl
pushl
push
call
pushl
pushl
call
movl
lea
mov
lea
mov
mov
mov
mov
sub
add
movl
lea
mov
mov
mov
sub
sub
addl
test
jl
and
adc
test
jb
sbb
add
sub
call
xor
mov
movl
movl
lea
mov
mov
inc
mov
mov
cltd
idiv
mov
incl
cmpl
jle
movl
lea
mov
lea
mov
mov
mov
and
mov
sub
add
sub
test
jne
or
test
je
sub
addl
sub
sub
push
call
movl
pushl
pushl
pushl
pushl
call
xor
mov
movl
movl
mov
sub
imul
mov
incl
cmpl
jle
xor
mov
movl
cmpl
je
movl
movl
mov
add
add
movl
pushl
pushl
pushl
pushl
push
call
and
cmp
jb
and
test
jl
add
sbb
add
add
sub
pushl
pushl
pushl
pushl
push
call
pushl
pushl
pushl
pushl
push
call
jmp
movl
movl
push
pushl
pushl
pushl
call
subl
xor
test
jne
adc
adc
add
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
imul
mov
sub
and
test
jl
sbbl
adc
add
orl
lea
push
call
movl
movl
mov
cmp
jge
push
call
and
test
jl
adc
testl
jl
sub
subl
add
andl
or
movl
cmpl
jne
call
add
cmp
jne
and
add
test
ja
add
sub
sub
add
add
jmp
movl
mov
sub
imul
mov
incl
cmpl
jle
call
mov
call
movl
mov
add
imul
mov
xor
mov
push
call
movl
lea
mov
mov
mov
and
mov
sub
mov
incl
cmpl
jle
pop
pop
pop
mov
pop
ret
nop
push
mov
add
movl
cmpl
jg
movl
movl
pushl
pushl
pushl
push
push
call
movl
push
pushl
pushl
push
call
flds
fmuls
fstps
movl
movl
lea
mov
mov
mov
add
mov
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
movl
cmpl
jl
cmpl
je
xor
mov
movl
movl
movl
mov
or
mov
and
add
imul
mov
sub
testl
jne
sbb
or
test
ja
add
sub
sub
add
addl
movl
mov
and
imull
mov
sub
adc
test
jne
adc
or
test
je
add
sub
or
and
incl
cmpl
jle
jmp
call
movl
movl
mov
sub
add
pushl
call
flds
fdivs
fstps
movl
push
pushl
push
pushl
push
call
flds
fmuls
fstps
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
add
movl
mov
imull
sub
flds
fmuls
fmuls
fstps
adc
sub
test
jl
add
add
je
add
sub
and
sub
sub
xor
xor
mov
movl
lea
mov
mov
mov
imull
mov
incl
cmpl
jle
movl
cmpl
jg
movl
pushl
pushl
pushl
pushl
pushl
call
sub
cmp
je
sub
and
jl
sub
add
xor
pushl
pushl
pushl
pushl
pushl
call
pushl
pushl
push
pushl
call
or
test
je
add
subl
test
je
xor
add
sub
add
add
jmp
movl
lea
mov
movl
mov
mov
and
mov
inc
mov
cltd
idiv
add
movl
mov
sub
mov
push
pushl
pushl
call
movl
mov
imull
add
sub
cmp
jne
or
or
test
ja
adc
sbb
sub
sbb
sbbl
flds
mov
pop
ret
nop
push
mov
add
movl
movl
mov
cmp
xor
mov
movl
movl
mov
or
mov
sub
mov
sub
sbbl
cmp
jne
add
add
or
movl
movl
mov
inc
mov
mov
cltd
idiv
mov
incl
cmpl
jle
movl
movl
lea
mov
lea
mov
mov
mov
mov
imull
mov
movl
movl
lea
mov
mov
mov
imul
mov
movl
mov
or
mov
and
imul
mov
add
test
jne
xor
add
sbb
movl
mov
sub
mov
movl
cmpl
je
movl
mov
cmp
jne
jmp
sub
sub
cmp
jne
sub
or
test
jl
sub
sub
or
sub
sub
xor
mov
movl
lea
mov
mov
and
mov
inc
mov
cltd
idiv
mov
incl
cmpl
jle
add
sub
test
jne
sub
test
je
add
sub
sub
addl
adc
add
adc
test
ja
sub
cmp
je
add
add
or
xor
add
addl
mov
pop
ret
nop
nop
nop
call
ret
nop
nop
push
mov
add
movl
movl
mov
or
mov
inc
mov
cltd
idiv
mov
sbb
test
ja
subl
sub
add
sub
movl
movl
mov
or
mov
and
sub
sub
movl
cmpl
jg
sub
test
jl
adc
sub
add
movl
cmpl
jle
movl
movl
lea
mov
lea
mov
mov
mov
mov
sub
imul
mov
and
cmp
jne
or
cmp
jb
subl
add
add
subl
sub
jmp
movl
lea
mov
mov
mov
add
add
lea
mov
movl
mov
mov
and
imul
mov
add
or
ja
xor
testl
jne
xor
and
sub
sub
sub
movl
movl
mov
cmp
jge
add
subl
test
jb
sbb
subl
sub
movl
lea
mov
mov
mov
add
mov
movl
movl
lea
mov
mov
mov
imull
sub
movl
mov
inc
mov
mov
cltd
idiv
add
sub
sub
cmp
jl
sub
add
test
jne
add
add
sub
sbb
xor
mov
incl
cmpl
jle
movl
mov
inc
mov
mov
cltd
idiv
add
sub
cmp
jl
sub
sub
test
ja
sub
sub
sbb
add
adc
sub
test
je
add
test
ja
sub
or
add
mov
pop
ret
nop
push
mov
add
xor
mov
add
sub
cmp
ja
sub
sub
incl
cmpl
jle
add
add
test
ja
subl
and
sub
movl
movl
mov
inc
mov
mov
cltd
idiv
mov
movl
cmpl
je
movl
movl
movl
mov
or
add
mov
xor
mov
movl
mov
imul
imul
mov
add
add
cmp
jb
add
cmp
jl
add
sub
addl
or
addl
sub
incl
cmpl
jle
xor
mov
movl
movl
mov
sub
mov
add
add
testl
jne
sub
test
ja
add
add
adc
orl
incl
cmpl
jle
xor
mov
incl
cmpl
jle
xor
mov
movl
movl
lea
mov
lea
mov
mov
mov
mov
sub
imul
mov
incl
cmpl
jle
movl
movl
lea
mov
mov
mov
mov
or
add
mov
movl
cmpl
jge
movl
mov
imul
imul
mov
jmp
sub
test
jl
add
and
and
movl
movl
mov
cmp
jne
xor
mov
sub
cmp
ja
xorl
test
jne
add
sub
add
add
andl
incl
cmpl
jle
movl
mov
inc
mov
mov
cltd
idiv
mov
xor
mov
incl
cmpl
jle
movl
cmpl
je
add
testl
jb
sub
sub
subl
adc
xor
mov
sbb
test
jl
add
sub
add
sub
incl
cmpl
jle
jmp
movl
mov
or
add
mov
sub
xor
jb
add
add
or
mov
pop
ret
nop
nop
push
mov
add
movl
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
movl
cmpl
jne
xor
mov
sub
test
je
sub
testl
jne
or
sub
add
subl
incl
cmpl
jle
movl
movl
lea
mov
mov
mov
sub
mov
or
test
ja
sbb
test
je
sbbl
add
sub
movl
cmpl
jne
movl
movl
movl
mov
or
mov
inc
mov
cltd
idiv
mov
movl
mov
sub
mov
jmp
adc
test
je
subl
sub
test
jne
sbbl
sub
add
sub
sub
adcl
test
ja
xor
sub
sub
movl
cmpl
lea
mov
mov
inc
mov
mov
cltd
idiv
add
sub
test
jl
add
add
test
jl
add
sub
add
sub
adc
xor
mov
xor
mov
xor
mov
add
addl
test
jne
add
add
cmp
ja
add
or
add
add
sub
add
incl
cmpl
jle
movl
lea
mov
mov
mov
add
mov
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
incl
cmpl
jle
incl
cmpl
jle
mov
imull
imul
mov
add
test
jb
add
sbb
add
movl
movl
lea
mov
mov
mov
or
imul
mov
sub
test
ja
subl
cmp
jne
add
sbb
sub
add
mov
pop
ret
nop
push
mov
add
movl
movl
lea
mov
movl
mov
mov
and
add
mov
sub
add
testl
jl
orl
add
adc
movl
cmpl
jle
movl
movl
mov
add
add
jmp
addl
test
jne
sub
sub
test
jne
subl
sub
add
xor
mov
movl
movl
mov
cmp
jg
movl
mov
cmp
jl
movl
movl
lea
mov
mov
mov
or
add
mov
jmp
jmp
movl
movl
movl
mov
or
sub
add
movl
movl
lea
mov
mov
mov
and
sub
imul
mov
incl
cmpl
jle
movl
movl
mov
inc
mov
cltd
idiv
mov
xor
mov
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
sub
sub
add
je
add
sub
test
jl
or
sub
xorl
movl
cmpl
incl
cmpl
jle
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
and
xor
cmp
jl
add
and
sub
add
xor
mov
add
and
cmp
jne
sbb
xor
cmp
ja
and
xorl
sub
subl
incl
cmpl
jle
sbb
subl
cmp
ja
add
cmp
jne
sub
add
sub
movl
cmpl
je
xor
mov
movl
movl
lea
mov
lea
mov
mov
mov
mov
imul
imul
mov
incl
cmpl
jle
movl
movl
mov
imull
mov
movl
lea
mov
movl
mov
mov
and
mov
or
add
imul
mov
sub
xor
cmp
jb
subl
add
test
je
add
adc
adcl
sub
orl
mov
pop
ret
nop
nop
nop
push
mov
add
movl
movl
mov
and
mov
and
imul
imul
mov
lea
mov
mov
and
mov
mov
and
add
imul
mov
sbb
cmp
je
add
add
test
jl
add
sub
add
add
or
movl
movl
movl
pushl
pushl
pushl
call
mov
sub
imul
mov
pushl
pushl
pushl
call
push
push
push
call
mov
movl
lea
mov
mov
inc
mov
cltd
idiv
mov
call
movl
mov
sub
add
movl
mov
inc
push
mov
pop
mov
cltd
idiv
sub
mov
add
mov
push
call
call
mov
mov
pop
ret
nop
nop
push
mov
add
movl
movl
lea
mov
mov
mov
sub
mov
movl
cmpl
jle
movl
mov
sub
mov
movl
lea
mov
mov
inc
mov
cltd
idiv
imul
mov
movl
movl
mov
and
add
mov
add
test
je
add
testl
je
subl
adc
add
sbb
or
cmp
je
add
sub
test
jl
subl
sub
xor
sub
add
add
and
cmp
jl
sub
cmp
je
sub
xor
sbbl
sub
sub
movl
lea
mov
mov
inc
mov
mov
cltd
idiv
imul
mov
movl
mov
or
add
sub
movl
cmpl
jl
xor
mov
movl
mov
or
mov
inc
mov
cltd
idiv
add
or
testl
jl
add
add
movl
mov
or
mov
inc
mov
cltd
idiv
add
incl
cmpl
jle
jmp
movl
mov
or
mov
sub
mov
addl
sub
test
je
or
cmp
je
sub
sub
sub
sub
sub
sub
jb
add
sbb
jne
or
sub
sub
add
add
mov
pop
ret
nop
nop
push
mov
add
movl
cmpl
jl
movl
movl
mov
sub
mov
movl
movl
lea
mov
mov
mov
sub
mov
movl
cmpl
jg
lea
mov
lea
mov
movl
mov
mov
or
mov
sub
add
jmp
xor
mov
subl
sub
cmp
ja
sub
orl
testl
jl
sub
addl
add
incl
cmpl
jle
movl
mov
cmp
je
sub
test
jne
add
test
jl
addl
sub
add
sub
add
sub
movl
movl
mov
add
imul
mov
xor
add
cmp
je
add
add
cmp
jb
add
add
add
sub
sub
movl
cmpl
je
movl
movl
movl
mov
and
mov
or
add
add
jmp
movl
movl
mov
inc
mov
cltd
idiv
mov
movl
cmpl
jg
movl
cmpl
jge
xor
mov
incl
cmpl
jle
add
adcl
test
jb
sbb
or
test
jne
sub
subl
add
sub
subl
cmpl
jg
jmp
add
cmp
jl
add
xor
and
jl
adc
sub
sub
add
cmpl
jl
movl
lea
mov
mov
mov
imul
mov
movl
movl
mov
or
imull
mov
movl
cmpl
jle
xor
mov
lea
mov
lea
mov
mov
mov
mov
add
sub
movl
cmpl
incl
cmpl
jle
cmpl
jl
jmp
lea
mov
mov
mov
imull
sub
sub
adc
test
jb
and
test
jne
sub
add
add
addl
adcl
test
jb
sub
cmp
jb
and
sub
sub
add
xor
mov
pop
ret
nop
nop
push
mov
add
movl
movl
pushl
pushl
call
movl
lea
push
lea
push
call
xor
mov
call
add
add
sub
jb
adcl
xor
adc
add
call
movl
pushl
pushl
pushl
pushl
call
xor
test
jl
subl
sub
cmp
jl
add
sub
sub
and
pushl
pushl
pushl
pushl
call
call
mov
mov
xor
mov
xor
mov
movl
movl
movl
mov
and
imull
imul
mov
or
cmp
ja
sub
subl
testl
ja
sub
sub
and
xor
add
sub
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
add
or
sbb
cmp
jl
addl
test
jl
add
add
sub
addl
sbb
add
movl
pushl
pushl
pushl
pushl
push
call
incl
cmpl
jle
incl
cmpl
jle
xor
mov
push
call
incl
cmpl
jle
movl
cmpl
jle
push
call
xor
mov
push
call
movl
movl
mov
and
mov
sub
mov
pushl
push
push
call
incl
cmpl
jle
push
call
add
add
cmp
jne
xor
xor
testl
jne
add
sub
addl
adc
sub
add
cmpl
je
xor
mov
movl
movl
mov
cmp
jle
sbb
xor
sbb
jne
sbb
add
add
incl
cmpl
jle
movl
movl
lea
mov
mov
mov
sub
mov
lea
mov
mov
mov
add
add
decl
add
test
jb
sub
or
cmp
jb
add
sub
sub
and
adc
call
mov
movl
mov
sub
add
movl
mov
cmp
je
movl
mov
cmp
jg
movl
lea
mov
lea
mov
mov
mov
mov
add
sub
jmp
or
cmp
jb
sbbl
sub
test
ja
addl
or
xor
sbb
add
sub
jmp
xor
mov
movl
mov
or
add
mov
lea
mov
mov
mov
sub
imul
mov
incl
cmpl
jle
movl
movl
mov
sub
sub
xor
mov
movl
movl
mov
sub
add
add
test
jb
sub
cmp
jne
add
sub
sub
adc
sub
incl
cmpl
jle
mov
and
cmp
jne
movl
movl
lea
mov
lea
mov
mov
mov
mov
sub
imul
mov
mov
imull
add
movl
movl
mov
cmp
jg
movl
mov
sub
sub
movl
movl
mov
imull
imul
mov
mov
inc
mov
mov
cltd
idiv
sub
mov
and
imull
add
mov
test
je
add
add
sub
jl
add
adcl
test
jl
add
add
add
sub
sub
movl
jmp
movl
mov
and
sub
sub
xor
mov
movl
lea
mov
mov
inc
mov
cltd
idiv
sub
adc
test
ja
add
cmp
jl
subl
subl
add
sbb
add
testl
jb
addl
cmp
jne
xorl
sub
sub
add
incl
cmpl
jle
xor
mov
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
sub
andl
test
jl
add
sub
test
jl
sub
xor
add
xorl
cmpl
jne
movl
mov
sub
imul
mov
and
sub
cmp
jne
sub
test
jl
add
sub
add
sub
mov
add
imul
mov
mov
cmp
jne
xor
mov
movl
movl
mov
add
mov
add
sub
test
jb
add
add
cmp
jl
subl
sub
and
add
add
test
jne
add
cmp
jb
add
add
add
sub
add
incl
cmpl
jle
movl
cmpl
jl
movl
lea
mov
mov
mov
imull
imul
mov
add
subl
cmp
jb
orl
test
jne
andl
subl
sub
sub
sub
xor
mov
incl
cmpl
jle
movl
lea
mov
movl
mov
and
mov
inc
mov
cltd
idiv
imul
mov
cmpl
jne
movl
pushl
push
pushl
pushl
call
movl
xor
mov
movl
movl
pushl
pushl
pushl
pushl
pushl
call
lea
mov
mov
mov
imul
mov
push
call
incl
cmpl
jle
pushl
pushl
call
mov
movl
movl
movl
pushl
pushl
pushl
pushl
call
subl
cmp
jne
add
test
jl
sub
add
addl
xor
sub
pushl
pushl
pushl
pushl
call
pushl
call
cmpl
je
movl
pushl
pushl
pushl
pushl
call
sub
sub
test
je
add
xor
test
ja
addl
and
add
sub
subl
mov
cmp
jl
call
jmp
movl
pushl
pushl
push
pushl
call
and
addl
test
jb
add
sub
test
jne
adc
add
sub
sub
movl
lea
mov
mov
mov
imull
add
mov
mov
pop
ret
nop
nop
push
mov
add
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
movl
cmpl
jge
xor
test
je
and
sbb
cmp
jl
add
or
add
add
jmp
subl
sbb
test
jb
add
test
jb
and
adc
sub
sub
movl
movl
mov
and
mov
inc
mov
cltd
idiv
mov
sub
or
cmp
jne
and
add
addl
and
movl
movl
movl
mov
or
mov
or
add
mov
movl
lea
mov
mov
inc
mov
cltd
idiv
mov
addl
add
test
jb
add
sub
add
addl
test
je
sub
test
jb
sub
addl
add
add
xorl
sbb
movl
mov
and
add
mov
xor
mov
sub
subl
sub
jl
add
add
and
sub
incl
cmpl
jle
addl
add
test
ja
add
sub
cmp
ja
add
sub
add
sub
add
mov
add
imul
mov
sub
andl
sub
jb
add
add
cmp
je
sub
sub
and
sub
adc
movl
lea
mov
mov
mov
imul
imul
mov
add
add
jne
or
sbb
adc
sub
movl
lea
mov
movl
mov
and
mov
imull
mov
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
sub
movl
mov
add
sub
xor
test
ja
add
add
sbb
sub
addl
test
jne
sbb
add
test
je
sub
addl
sub
subl
add
mov
pop
ret
nop
push
mov
add
movl
movl
pushl
push
pushl
push
pushl
call
movl
pushl
push
pushl
push
pushl
call
pushl
push
pushl
call
add
sub
test
jne
and
cmp
jl
add
xor
sub
add
pushl
push
pushl
push
pushl
call
pushl
push
pushl
call
pushl
pushl
push
pushl
call
xor
mov
pop
ret
nop
push
mov
add
movl
movl
lea
mov
movl
mov
or
mov
mov
and
imul
imul
mov
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
sub
pushl
pushl
pushl
call
movl
cmpl
jg
xor
mov
call
sub
xor
test
je
xorl
add
cmp
jne
or
sbb
or
add
incl
cmpl
jle
cmpl
jle
movl
movl
pushl
pushl
pushl
pushl
pushl
call
jmp
xor
mov
movl
movl
pushl
pushl
call
xor
mov
sbb
cmp
jl
adc
addl
sub
movl
movl
pushl
pushl
pushl
pushl
pushl
call
incl
cmpl
jle
incl
cmpl
jle
movl
movl
mov
or
mov
and
sub
imul
mov
xor
mov
movl
movl
lea
mov
mov
mov
imul
sub
xor
and
cmp
je
adc
add
sub
incl
cmpl
jle
call
mov
movl
mov
sub
sub
movl
mov
and
mov
inc
mov
cltd
idiv
imul
mov
decl
je
pushl
pushl
pushl
call
jmp
movl
movl
lea
mov
mov
mov
add
sub
call
call
call
movl
cmpl
jge
movl
cmpl
jl
movl
movl
push
pushl
pushl
pushl
call
sub
add
jne
add
add
jb
add
add
sub
add
xor
add
mov
cmp
jle
lea
mov
movl
mov
mov
mov
or
add
mov
jmp
lea
mov
mov
mov
sub
mov
xor
mov
movl
pushl
pushl
push
call
add
testl
jb
sub
add
adc
mov
imul
add
addl
cmp
jne
sub
add
pushl
pushl
push
call
call
incl
cmpl
jle
movl
cmpl
jle
movl
movl
pushl
pushl
pushl
call
lea
mov
mov
mov
imul
mov
mov
and
sub
sub
jmp
pushl
call
pushl
call
pushl
push
pushl
call
mov
or
mov
sub
imul
mov
movl
mov
add
mov
xor
mov
movl
pushl
push
pushl
pushl
pushl
call
subl
add
cmp
jb
or
sub
test
jl
addl
sub
sub
incl
cmpl
jle
mov
mov
pop
ret
push
mov
add
jmp
lea
adc
push
sub
call
movb
pop
mov
jmp
sbb
ret
adc
add
xor
mov
mov
inc
mov
mov
push
mov
mov
mov
xor
push
call
pop
test
je
add
pop
fistl
ret
call
jne
call
test
je
sub
mov
js
add
and
mov
mov
call
jmp
mov
call
into
cmp
add
pushf
pop
pop
pop
ret
movb
lea
mov
xor
pop
ret
mov
mov
pop
pop
pop
ret
mov
mov
call
add
or
mov
aam
add
ret
mov
incl
xor
pop
pop
push
mov
push
push
push
push
add
push
push
push
mov
mov
mov
call
mov
ret
mov
mov
mov
mov
call
pop
pop
ret
mov
sub
mov
lea
je
cmp
je
jmp
mov
mov
mov
mov
push
mov
test
jne
call
cmp
mov
add
add
cmpb
jne
xor
jmp
xor
pop
add
mov
add
mov
xor
call
jmp
and
mov
jae
and
mov
iret
jne
ret
jae
mov
jmp
cmp
je
push
call
mov
call
jmp
xor
pop
call
mov
mov
mov
call
test
jne
mov
call
mov
ret
mov
call
ret
call
test
je
sub
mov
add
xchg
inc
add
mov
push
call
pop
pop
pop
ret
mov
call
xor
push
mov
mov
lea
mov
call
jmp
cmp
jne
mov
ret
push
ret
sub
jb
jmp
cmp
jne
mov
ret
add
mov
or
test
jne
xor
pop
pop
pop
ret
mov
jmp
pop
pop
pop
ret
mov
push
mov
call
ret
pop
pop
mov
push
add
add
add
mov
ret
lea
push
push
lea
push
mov
add
cmp
add
cmpb
je
mov
call
shl
push
mov
mov
add
cmp
mov
push
mov
mov
call
mov
call
mov
ja
mov
mov
push
lea
call
ret
test
ret
mov
call
test
jne
ret
ret
test
jne
mov
mov
adc
lea
mov
jmp
mov
lods
mov
add
movb
mov
xor
jmp
mov
mov
adc
mov
mov
mov
sub
jmp
adc
push
mov
mov
ret
mov
mov
mov
jmp
xor
pop
pop
push
mov
mov
xor
push
push
pushl
mov
mov
push
push
call
test
je
mov
jmp
pop
ret
and
mov
and
xor
pop
pop
mov
jmp
addl
push
lea
xchg
add
add
push
push
mov
cmpb
jne
mov
mov
call
jmp
mov
mov
mov
call
add
mov
add
mov
test
je
mov
pop
pop
mov
pop
ret
cmp
jne
mov
jb
jmp
mov
aam
add
mov
mov
call
shl
push
call
ret
add
jae
mov
call
mov
mov
mov
call
pop
pop
ret
test
jne
mov
adc
push
movb
push
mov
sbb
mov
push
add
add
mov
call
jmp
add
push
addb
lea
push
movb
jmp
mov
jmp
subl
mov
mov
mov
call
movl
lea
push
sbb
mov
push
jmp
sub
movl
dec
jmp
pop
ret
mov
mov
sub
sub
add
push
push
mov
mov
mov
call
test
jne
mov
mov
push
call
xchg
add
add
call
xor
pop
pop
jmp
cmp
jne
xor
push
push
cmpb
jne
ret
pop
ret
add
mov
adc
add
lods
bound
add
cmp
jne
xor
pop
pop
pop
mov
push
mov
mov
mov
call
mov
pop
pop
pop
pop
ret
lea
call
sub
jb
sub
mov
adc
mov
call
test
jne
mov
jmp
xor
pop
pop
pop
ret
pop
pop
mov
push
cmp
mov
nop
push
push
push
push
push
pushl
mov
mov
and
push
add
jmp
mov
mov
xor
push
add
jmp
and
jns
dec
or
inc
jmp
lea
pop
add
mov
inc
add
push
mov
call
lea
movb
pop
sub
mov
mov
mov
xor
movb
xor
jmp
push
push
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
push
mov
push
add
push
add
jmp
mov
mov
movb
pop
mov
ret
jmp
incl
mov
cmp
jb
jmp
cmp
jne
mov
mov
jmp
call
mov
mov
add
add
mov
add
mov
shr
test
jne
mov
jmp
mov
mov
movswl
ret
adc
add
mov
push
push
pushl
mov
incl
sub
add
lea
xchg
add
push
push
pushl
mov
mov
mov
push
push
push
pushl
mov
cmpb
jne
fdivrs
push
ret
pop
ret
push
pushl
mov
mov
mov
mov
mov
xor
call
incl
sub
mov
shlb
push
inc
cmp
ja
mov
test
jne
mov
mov
pop
ret
mov
call
mov
mov
shlb
rclb
and
add
and
add
add
je
mov
call
mov
xor
add
lea
cmp
xor
add
call
jmp
push
mov
fistl
inc
inc
call
pop
pop
mov
call
test
sub
mov
mov
incl
sub
add
jne
add
mov
call
xor
mov
add
mov
add
pop
ret
call
mov
xor
mov
call
mov
xchg
add
test
je
jmp
mov
jmp
add
push
mov
mov
test
push
push
push
mov
mov
jmp
mov
mov
rorb
push
push
pushl
mov
decl
add
add
add
push
push
call
test
jne
mov
jge
cmp
jge
movl
inc
mov
inc
jmp
add
push
mov
push
push
call
add
jmp
add
pop
dec
jmp
dec
jne
inc
adc
pop
lea
jmp
mov
mov
jmp
mov
mov
add
call
test
je
cmp
je
cmp
je
cmp
je
mov
jmp
and
orb
xchg
add
je
ret
mov
mov
mov
push
ret
push
push
push
pushl
mov
lea
push
mov
add
push
call
mov
xchg
add
ret
xor
push
push
lea
mov
call
xor
push
mov
mov
ret
call
jmp
pop
ret
jge
xor
pop
pop
ret
push
mov
xor
pop
pop
ret
push
push
push
push
mov
push
push
push
mov
mov
mov
lea
jo
ret
xor
pop
pop
mov
push
xor
pop
pop
je
pop
mov
push
lea
mov
call
mov
xchg
add
and
mov
ja
jmp
jle
cmp
jbe
mov
mov
sub
mov
jmp
pop
pop
ret
jmp
add
push
jmp
lea
call
movb
jmp
cmp
jne
xor
jmp
jmp
mov
sub
push
mov
mov
push
jmp
mov
mov
cmp
add
mov
mov
inc
inc
cmp
jbe
pop
ret
cmp
je
or
movb
pop
ret
test
je
mov
add
mov
mov
xor
push
push
mov
call
mov
call
je
mov
call
mov
xor
push
mov
add
inc
imul
mov
adc
add
js
inc
push
push
mov
push
push
push
mov
mov
add
push
push
adc
rcll
add
rclb
add
push
push
push
pop
push
mov
mov
movb
lea
mov
or
mov
add
incl
inc
lea
xchg
add
mov
push
pushl
mov
incl
je
xor
xchg
add
jno
add
aam
add
pop
pop
mov
pop
ret
push
mov
add
sub
jb
jmp
cmp
lret
rep
mov
jmp
mov
xor
mov
add
movl
mov
xor
add
mov
lea
lea
jmp
mov
mov
lods
jmp
xor
stos
sub
mov
pop
mov
mov
dec
jne
movb
dec
mov
push
mov
mov
push
movb
jmp
mov
lea
add
pop
ret
mov
test
jne
mov
pop
ret
test
add
mov
call
mov
test
jl
inc
inc
cmp
ja
ret
mov
mov
add
test
je
push
call
mov
test
je
mov
pop
pop
mov
pop
ret
cmp
jne
mov
jb
mov
mov
fdivs
rclb
add
push
push
push
mov
mov
adc
mov
add
rcrb
push
mov
jmp
mov
test
je
mov
movb
call
jmp
xor
pop
add
mov
mov
js
inc
and
push
push
lea
push
mov
push
mov
mov
mov
mov
mov
mov
jmp
xor
mov
jmp
pop
leave
call
lea
push
push
push
jmp
add
mov
mov
mov
mov
xor
movb
mov
sbb
xor
jmp
mov
add
mov
mov
add
jmp
push
push
call
add
xor
mov
inc
cltd
idivl
mov
inc
incl
jmp
mov
mov
adc
mov
jmp
mov
mov
call
adc
mov
dec
jmp
add
xor
jmp
pop
pop
pop
mov
pop
ret
mov
lea
add
push
lea
push
mov
push
call
pop
pop
pop
ret
push
call
push
call
test
je
push
cmp
mov
mov
mov
mov
pop
ret
call
test
jne
call
add
sub
jb
jmp
mov
mov
sbb
add
pop
xor
push
mov
push
push
push
push
push
push
pushl
mov
mov
push
mov
test
jne
mov
je
xchg
add
mov
call
lea
mov
call
xor
pop
pop
pop
pop
push
sub
mov
add
fs
push
xor
push
mov
add
pop
pop
pop
mov
pop
ret
pop
mov
push
sarb
ret
jge
xor
pop
pop
ret
push
mov
xor
pop
pop
ret
push
push
push
push
mov
push
push
push
mov
rorb
loop
movzwl
jmp
mov
push
sub
jmp
xor
mov
mov
jmp
add
pop
movb
mov
lea
push
mov
sub
call
mov
mov
pop
mov
add
mov
lea
push
sub
sbb
call
xor
add
add
pop
mov
inc
xor
adc
push
sub
mov
call
mov
mov
sub
pop
mov
mov
lea
mov
mov
call
add
dec
add
push
jmp
mov
jmp
lea
call
mov
jmp
xor
mov
mov
jmp
movzbl
addb
mov
mov
jmp
or
inc
jmp
lea
stos
add
mov
jmp
mov
mov
mov
call
xor
pop
pop
pop
ret
push
cmpb
je
lea
mov
call
mov
dec
aam
add
add
add
push
xor
push
mov
push
mov
push
call
test
je
push
lea
call
ret
jmp
add
lea
jb
jmp
mov
pop
pop
pop
ret
pop
pop
pop
ret
jmp
xor
pop
pop
ret
movl
pop
ret
dec
je
mov
call
pop
pop
pop
mov
pop
ret
pop
ret
push
push
lea
mov
call
mov
xchg
add
add
mov
movl
jmp
pop
pop
ret
mov
call
xchg
add
add
add
rclb
push
push
mov
mov
jmp
mov
test
je
mov
call
cmp
ja
mov
add
dec
push
add
mov
test
je
call
jne
mov
test
je
lea
mov
call
mov
mov
aam
add
pop
ret
pop
ret
push
pushl
mov
cmpb
je
cmp
jne
ret
call
aam
add
or
add
push
pushl
mov
mov
mov
lea
push
lea
or
mov
add
push
lea
call
ret
xor
mov
ret
jmp
add
lea
add
push
push
push
push
mov
push
push
mov
mov
xor
push
mov
mov
mov
add
push
push
call
mov
test
jne
mov
pop
ret
call
xchg
add
jg
add
ret
call
xor
pop
pop
pop
ret
push
cmpb
dec
mov
aam
add
jmp
xor
pop
pop
mov
push
ret
pop
ret
push
pushl
mov
mov
mov
mov
pushl
mov
mov
and
imul
mov
call
xor
pop
pop
ret
test
jne
cmpb
mov
mov
push
mov
mov
mov
mov
mov
call
shl
push
mov
add
mov
mov
call
inc
mov
xchg
add
cmpb
and
add
add
pop
ret
pop
pop
call
mov
xchg
add
xor
pop
pop
mov
push
push
push
call
mov
mov
call
push
adc
add
decl
add
sbb
add
push
push
push
mov
mov
xor
mov
jmp
add
mov
pop
pop
ret
call
mov
mov
pop
pop
pop
pop
pop
pop
pop
ret
jge
cmp
jl
lock
je
push
mov
mov
add
test
jne
xor
push
push
call
jmp
mov
mov
mov
incl
xor
pop
cmp
jne
mov
mov
and
rclb
adc
xor
pop
pop
pop
mov
push
testb
add
loopne
enter
incl
xor
pop
pop
pop
ret
xor
push
mov
push
push
call
cmpb
mov
xchg
add
shr
add
add
mov
push
call
ret
test
je
push
call
lea
ficoml
add
mov
add
ret
movb
push
mov
push
je
cmp
jne
mov
add
add
insb
pop
add
mov
xor
jmp
lea
call
inc
jmp
addb
mov
sub
mov
call
lea
add
mov
push
mov
mov
adc
push
jmp
cmp
jb
movb
movb
movb
xor
mov
mov
xor
jmp
mov
push
sub
call
add
mov
sub
pop
adc
sbb
jmp
mov
call
sbb
pop
sub
mov
add
mov
sub
mov
push
mov
call
sub
sub
pop
mov
add
sub
mov
add
jmp
mov
lea
add
test
jne
mov
pop
ret
test
je
or
push
push
push
xor
push
push
push
push
mov
mov
mov
add
mov
add
pop
pop
pop
mov
push
pushl
mov
cmpb
je
cmp
mov
mov
mov
mov
add
je
lea
call
pop
pop
ret
pop
ret
jb
sub
jb
jmp
mov
xor
push
add
mov
mov
add
mov
mov
test
jne
mov
call
mov
cmpb
jne
mov
or
lea
push
add
mov
call
push
push
mov
mov
push
sub
mov
shlb
rcrb
mov
push
pushl
mov
cmpb
jne
mov
add
push
push
push
sub
jmp
mov
add
jmp
pop
ret
mov
lea
add
jae
add
mov
push
cmpb
je
ret
pop
pop
push
lea
call
sub
mov
lock
call
jmp
mov
test
jne
xor
pop
pop
lea
add
call
mov
shl
push
call
mov
push
push
push
pushl
mov
mov
mov
ret
mov
mov
add
mov
mov
mov
mov
call
xor
pop
pop
mov
mov
add
loopne
add
mov
mov
test
je
sbb
mov
add
sub
push
push
call
mov
mov
pop
pop
pop
pop
pop
ret
jne
adc
add
decl
lea
xor
add
add
jno
add
jmp
imul
lea
mov
xor
movl
xor
add
jmp
add
add
jmp
mov
mov
mov
mov
mov
jmp
xor
add
jmp
pop
pop
pop
pop
pop
jmp
pop
mov
xor
sbb
mov
jmp
subb
movzbl
push
mov
add
jmp
and
mov
mov
add
and
jns
dec
or
inc
jmp
xor
mov
inc
and
jns
dec
or
inc
jmp
mov
mov
mov
mov
mov
call
mov
mov
adc
mov
adc
mov
mov
call
mov
sbb
mov
xor
mov
add
call
add
sbb
jmp
sub
adc
mov
push
sub
call
mov
stos
add
jmp
mov
ror
sub
subl
add
jmp
push
mov
jmp
movl
pop
mov
pop
sub
add
pop
mov
lea
ret
mov
mov
add
je
xor
push
mov
xor
push
mov
xor
pop
pop
ret
mov
mov
sbb
mov
fmull
xor
jmp
and
imul
mov
push
push
push
ret
pop
pop
pop
ret
test
je
call
lea
xchg
add
mov
ret
jne
mov
call
jmp
incl
xor
pop
pop
pop
mov
push
mov
or
mov
pop
ret
sub
je
push
call
mov
call
jmp
pop
ret
pop
mov
mov
inc
push
dec
add
mov
call
lea
mov
xor
mov
mov
push
ret
lea
mov
call
mov
call
jmp
pop
pop
pop
pop
ret
test
je
mov
add
push
call
pop
xor
cmp
jne
mov
movzwl
mov
jmp
mov
lea
cli
xor
add
mov
mov
inc
inc
cmp
jbe
call
mov
xchg
add
lock
pop
ret
push
push
pop
push
push
push
ret
push
push
push
mov
add
mov
add
ret
mov
call
cmp
jbe
call
mov
add
call
mov
call
mov
aam
add
call
mov
test
jne
xor
push
push
pushl
mov
incl
xor
or
lea
call
jmp
cmp
jne
mov
ret
push
ret
mov
mov
ret
pop
ret
call
push
pushl
mov
cmpb
je
push
push
push
pop
mov
push
adc
xor
incl
jmp
push
sub
mov
add
pushl
sbb
sbb
call
sbb
mov
xor
sub
sub
jmp
mov
ret
mov
mov
add
jmp
mov
mov
sbb
mov
add
mov
sbb
lea
mov
jmp
dec
mov
lea
shl
lea
mov
xor
sbb
mov
mov
mov
jmp
pop
pop
jmp
mov
add
push
push
push
jmp
mov
mov
push
mov
call
mov
pop
lea
mov
mov
jmp
mov
mov
mov
call
mov
sub
jmp
add
push
mov
call
jmp
inc
addl
addl
jmp
add
xor
push
lea
jmp
xor
call
sub
pop
mov
sub
pop
mov
xor
sbb
add
lea
add
mov
mov
jmp
add
dec
jne
mov
mov
sub
movl
mov
mov
subl
mov
mov
xor
lea
jmp
sub
mov
jmp
sub
mov
je
lea
mov
mov
mov
call
cli
mov
aam
add
jp
add
call
jae
loop
lea
mov
lea
xchg
add
xorb
jmp
pop
pop
pop
ret
mov
incl
pop
ret
jmp
mov
mov
mov
rcrb
ret
test
jne
mov
call
mov
lea
xchg
add
inc
add
mov
mov
incl
cmp
jne
mov
call
mov
ret
jne
mov
call
push
cmp
add
jnp
add
pop
ret
push
push
push
mov
mov
incl
add
mov
mov
incl
pop
ret
mov
call
mov
sub
mov
push
movzbl
push
mov
movswl
push
mov
jmp
sbb
mov
subl
jmp
sbb
lea
sub
push
mov
call
mov
add
pop
dec
mov
jmp
mov
adc
push
mov
mov
dec
push
jmp
sbb
movl
sub
push
movl
call
jmp
mov
xor
jmp
mov
shl
and
shr
or
mov
movsbl
xor
inc
jmp
mov
mov
pop
pop
mov
push
pushl
mov
cmpb
je
pop
mov
pop
ret
push
mov
xchg
add
push
push
push
push
mov
push
push
mov
push
push
lea
push
call
cmpl
jne
ret
mov
mov
call
adc
lea
pop
pop
ret
incl
pop
ret
test
jne
mov
call
mov
call
xchg
add
rcrb
cmp
fdivl
xor
jmp
test
jne
ret
pop
pop
mov
mov
mov
or
mov
adc
mov
push
pushl
mov
mov
mov
mov
pop
ret
mov
mov
mov
call
xchg
add
add
rclb
push
push
push
mov
sub
cmpl
jne
ret
jae
mov
jmp
mov
mov
add
shr
adc
add
mov
call
mov
lea
call
test
jne
mov
call
xor
mov
mov
add
mov
jo
add
call
lea
mov
mov
call
mov
xchg
add
add
add
mov
call
ret
cmp
ja
ret
mov
ret
mov
call
pop
mov
mov
mov
add
push
push
push
mov
jmp
push
call
mov
pop
pop
pop
ret
jmp
cmp
jbe
mov
mov
call
ret
mov
call
pop
mov
jmp
mov
mov
call
add
xchg
add
add
call
sti
lods
jne
mov
call
jmp
pop
push
call
mov
mov
mov
add
xchg
inc
lea
sub
push
xor
jmp
mov
cmp
jae
jmp
sub
xor
add
push
xor
push
mov
add
jmp
push
add
sbb
mov
mov
add
movb
sbb
call
adc
jmp
cmp
jb
jmp
mov
sub
push
mov
mov
mov
call
lea
mov
mov
subb
mov
jmp
mov
push
add
jmp
add
add
push
push
call
xor
xor
mov
xor
mov
add
jmp
lea
mov
lea
push
sbb
call
jmp
push
mov
push
push
lea
cld
sub
mov
sbb
xor
sub
addb
subb
mov
sbb
add
jmp
mov
pop
ret
jmp
push
mov
add
push
push
mov
lea
push
mov
push
mov
push
call
jmp
pop
pop
pop
mov
pop
ret
mov
mov
inc
movsb
movb
lea
mov
incl
sub
add
call
add
lea
test
jne
mov
push
push
push
mov
mov
jmp
mov
push
mov
mov
pop
jne
xor
push
push
pushl
mov
cmpb
jne
xor
pop
pop
mov
push
push
add
mov
jmp
cmp
je
mov
mov
mov
call
jmp
pop
ret
sub
mov
jne
mov
call
jmp
incl
xor
pop
pop
pop
mov
push
xchg
add
add
and
add
jle
add
dec
inc
add
pop
mov
mov
add
jmp
pop
mov
dec
jne
lea
adc
pop
mov
dec
jne
jmp
mov
test
je
add
mov
add
push
mov
add
jmp
mov
sbb
mov
mov
add
mov
push
mov
mov
jmp
movl
mov
sub
call
xor
lea
jmp
mov
movl
mov
mov
ret
je
push
ret
mov
mov
mov
mov
pop
pop
ret
push
call
jg
je
ret
mov
add
mov
incl
sub
add
pop
ret
jne
add
push
push
push
push
mov
push
push
push
push
add
mov
add
mov
call
pop
pop
ret
mov
movb
incl
mov
mov
cmpl
sub
xchg
add
add
jae
mov
call
cmpb
and
mov
call
mov
jmp
cmp
mov
pop
pop
pop
pop
ret
mov
cmpb
jne
mov
mov
xor
push
push
add
rcl
inc
enter
xor
pop
pop
push
mov
pop
pop
pop
ret
jg
xor
push
push
decl
sbb
add
add
fisubrs
add
add
imul
jl
inc
subb
sub
dec
jmp
mov
push
xor
mov
sbb
subl
mov
xor
mov
jmp
shr
adc
add
jmp
cmp
ja
jmp
sub
mov
xor
mov
mov
add
lea
sbb
mov
sub
mov
mov
mov
adc
mov
jmp
sbb
mov
jmp
add
mov
xor
push
adc
adc
mov
call
adc
jmp
add
mov
push
mov
movb
call
add
push
add
push
lea
jmp
cmpb
jne
jmp
push
sub
mov
call
mov
pop
jmp
mov
add
mov
mov
add
mov
xor
jmp
jmp
mov
jmp
push
mov
jmp
xor
mov
mov
xor
mov
mov
xor
mov
xor
add
mov
add
and
jns
dec
jmp
xor
mov
push
add
mov
mov
jmp
add
pushl
jmp
push
jmp
add
movzwl
mov
dec
jne
mov
xor
mov
push
jmp
mov
jmp
mov
add
ret
sub
mov
mov
add
call
mov
mov
call
mov
call
mov
shl
push
add
mov
in
add
push
push
push
mov
mov
mov
xor
pop
pop
push
push
pushl
push
push
mov
mov
add
mov
pop
push
call
mov
mov
mov
xor
push
mov
push
push
add
mov
push
push
push
push
ret
xor
push
push
push
lea
xchg
add
sub
mov
push
call
data16
xchg
add
mov
mov
mov
mov
pop
ret
ret
push
push
push
push
push
push
pushl
mov
incl
sub
lea
push
sub
mov
push
subl
jmp
