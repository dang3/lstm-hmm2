push
mov
add
movl
cmpl
jl
xor
mov
incl
cmpl
jle
xor
mov
movl
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
imul
mov
addl
addl
test
jne
sub
sbb
or
movl
movl
lea
mov
lea
mov
mov
mov
mov
imul
mov
sub
sub
jl
and
sub
test
jb
xor
addl
add
sub
incl
cmpl
jle
movl
movl
mov
add
mov
movl
mov
or
imul
sub
xor
mov
incl
cmpl
jle
movl
cmpl
subl
sub
test
ja
adc
add
sbbl
add
movl
cmpl
jl
movl
mov
imul
sub
xor
mov
incl
cmpl
jle
jmp
sub
sub
test
ja
sbb
adc
sbb
add
movl
movl
lea
mov
mov
mov
imul
mov
xor
mov
movl
cmpl
jg
xor
mov
incl
cmpl
jle
xor
mov
movl
cmpl
jl
xor
addl
testl
jb
add
cmp
ja
sub
sub
add
sub
incl
cmpl
jle
incl
cmpl
jle
xor
mov
sub
sub
cmp
jne
and
add
add
or
incl
cmpl
jle
adc
add
test
je
add
and
add
add
mov
pop
ret
nop
nop
nop
push
mov
add
movl
movl
pushl
pushl
call
movl
lea
push
lea
push
call
xor
mov
call
add
add
sub
jb
adcl
xor
adc
add
call
movl
pushl
pushl
pushl
pushl
call
xor
test
jl
subl
sub
cmp
jl
add
sub
sub
and
pushl
pushl
pushl
pushl
call
call
mov
mov
xor
mov
xor
mov
movl
movl
movl
mov
and
imull
imul
mov
or
cmp
ja
sub
subl
testl
ja
sub
sub
and
xor
add
sub
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
add
or
sbb
cmp
jl
addl
test
jl
add
add
sub
addl
sbb
add
movl
pushl
pushl
pushl
pushl
push
call
incl
cmpl
jle
incl
cmpl
jle
xor
mov
push
call
incl
cmpl
jle
movl
cmpl
jle
push
call
xor
mov
push
call
movl
movl
mov
and
mov
sub
mov
pushl
push
push
call
incl
cmpl
jle
push
call
add
add
cmp
jne
xor
xor
testl
jne
add
sub
addl
adc
sub
add
cmpl
je
xor
mov
movl
movl
mov
cmp
jle
sbb
xor
sbb
jne
sbb
add
add
incl
cmpl
jle
movl
movl
lea
mov
mov
mov
sub
mov
lea
mov
mov
mov
add
add
decl
add
test
jb
sub
or
cmp
jb
add
sub
sub
and
adc
call
mov
movl
mov
sub
add
movl
mov
cmp
je
movl
mov
cmp
jg
movl
lea
mov
lea
mov
mov
mov
mov
add
sub
jmp
or
cmp
jb
sbbl
sub
test
ja
addl
or
xor
sbb
add
sub
jmp
xor
mov
movl
mov
or
add
mov
lea
mov
mov
mov
sub
imul
mov
incl
cmpl
jle
movl
movl
mov
sub
sub
xor
mov
movl
movl
mov
sub
add
add
test
jb
sub
cmp
jne
add
sub
sub
adc
sub
incl
cmpl
jle
mov
and
cmp
jne
movl
movl
lea
mov
lea
mov
mov
mov
mov
sub
imul
mov
mov
imull
add
movl
movl
mov
cmp
jg
movl
mov
sub
sub
movl
movl
mov
imull
imul
mov
mov
inc
mov
mov
cltd
idiv
sub
mov
and
imull
add
mov
test
je
add
add
sub
jl
add
adcl
test
jl
add
add
add
sub
sub
movl
jmp
movl
mov
and
sub
sub
xor
mov
movl
lea
mov
mov
inc
mov
cltd
idiv
sub
adc
test
ja
add
cmp
jl
subl
subl
add
sbb
add
testl
jb
addl
cmp
jne
xorl
sub
sub
add
incl
cmpl
jle
xor
mov
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
sub
andl
test
jl
add
sub
test
jl
sub
xor
add
xorl
cmpl
jne
movl
mov
sub
imul
mov
and
sub
cmp
jne
sub
test
jl
add
sub
add
sub
mov
add
imul
mov
mov
cmp
jne
xor
mov
movl
movl
mov
add
mov
add
sub
test
jb
add
add
cmp
jl
subl
sub
and
add
add
test
jne
add
cmp
jb
add
add
add
sub
add
incl
cmpl
jle
movl
cmpl
jl
movl
lea
mov
mov
mov
imull
imul
mov
add
subl
cmp
jb
orl
test
jne
andl
subl
sub
sub
sub
xor
mov
incl
cmpl
jle
movl
lea
mov
movl
mov
and
mov
inc
mov
cltd
idiv
imul
mov
cmpl
jne
movl
pushl
push
pushl
pushl
call
movl
xor
mov
movl
movl
pushl
pushl
pushl
pushl
pushl
call
lea
mov
mov
mov
imul
mov
push
call
incl
cmpl
jle
pushl
pushl
call
mov
movl
movl
movl
pushl
pushl
pushl
pushl
call
subl
cmp
jne
add
test
jl
sub
add
addl
xor
sub
pushl
pushl
pushl
pushl
call
pushl
call
cmpl
je
movl
pushl
pushl
pushl
pushl
call
sub
sub
test
je
add
xor
test
ja
addl
and
add
sub
subl
mov
cmp
jl
call
jmp
movl
pushl
pushl
push
pushl
call
and
addl
test
jb
add
sub
test
jne
adc
add
sub
sub
movl
lea
mov
mov
mov
imull
add
mov
mov
pop
ret
nop
nop
push
mov
add
xor
mov
add
sub
cmp
ja
sub
sub
incl
cmpl
jle
add
add
test
ja
subl
and
sub
movl
movl
mov
inc
mov
mov
cltd
idiv
mov
movl
cmpl
je
movl
movl
movl
mov
or
add
mov
xor
mov
movl
mov
imul
imul
mov
add
add
cmp
jb
add
cmp
jl
add
sub
addl
or
addl
sub
incl
cmpl
jle
xor
mov
movl
movl
mov
sub
mov
add
add
testl
jne
sub
test
ja
add
add
adc
orl
incl
cmpl
jle
xor
mov
incl
cmpl
jle
xor
mov
movl
movl
lea
mov
lea
mov
mov
mov
mov
sub
imul
mov
incl
cmpl
jle
movl
movl
lea
mov
mov
mov
mov
or
add
mov
movl
cmpl
jge
movl
mov
imul
imul
mov
jmp
sub
test
jl
add
and
and
movl
movl
mov
cmp
jne
xor
mov
sub
cmp
ja
xorl
test
jne
add
sub
add
add
andl
incl
cmpl
jle
movl
mov
inc
mov
mov
cltd
idiv
mov
xor
mov
incl
cmpl
jle
movl
cmpl
je
add
testl
jb
sub
sub
subl
adc
xor
mov
sbb
test
jl
add
sub
add
sub
incl
cmpl
jle
jmp
movl
mov
or
add
mov
sub
xor
jb
add
add
or
mov
pop
ret
nop
nop
push
mov
add
and
test
je
sub
test
ja
adc
sub
sub
sub
sub
add
test
jne
add
cmp
jne
xor
xor
add
movl
movl
mov
cmp
je
movl
movl
lea
mov
mov
and
mov
sub
mov
movl
lea
mov
lea
mov
mov
mov
and
mov
add
sub
movl
movl
mov
and
mov
inc
mov
cltd
idiv
mov
movl
cmpl
movl
cmpl
jg
sbb
sub
test
ja
add
and
sub
movl
movl
mov
add
imul
mov
mov
cmp
addl
test
jne
or
cmp
jne
addl
add
add
sbb
sub
movl
mov
or
mov
inc
mov
cltd
idiv
imul
mov
movl
mov
add
mov
add
cmp
ja
add
sub
test
jl
sbb
subl
subl
adc
add
add
movl
mov
imull
sub
movl
mov
or
add
imul
mov
xor
test
jne
add
sbb
mov
and
mov
sub
sub
sub
add
test
jb
or
and
sub
and
add
test
jb
add
add
mov
pop
ret
nop
push
mov
add
movl
movl
lea
mov
mov
mov
and
imul
mov
cmpl
sub
adc
cmp
jb
sub
test
ja
and
add
sub
adc
movl
cmpl
je
cmpl
jne
add
test
jl
sbb
sub
add
add
movl
lea
mov
mov
mov
or
add
add
cmpl
jg
lea
mov
movl
mov
and
mov
mov
or
imul
sub
lea
mov
mov
mov
or
mov
and
sub
imul
mov
xor
testl
jl
add
sub
add
adc
lea
mov
lea
mov
mov
mov
and
mov
add
add
sbbl
sub
jb
subl
test
jb
add
sub
sub
or
add
mov
shr
xor
mov
movl
mov
cmp
jl
add
test
je
add
test
jl
add
sub
add
and
lea
mov
mov
mov
mov
and
imul
add
jmp
mov
sub
imul
mov
xor
mov
incl
cmpl
jle
mov
mov
pop
ret
nop
nop
push
mov
add
movl
movl
lea
mov
movl
mov
or
mov
mov
and
imul
imul
mov
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
sub
pushl
pushl
pushl
call
movl
cmpl
jg
xor
mov
call
sub
xor
test
je
xorl
add
cmp
jne
or
sbb
or
add
incl
cmpl
jle
cmpl
jle
movl
movl
pushl
pushl
pushl
pushl
pushl
call
jmp
xor
mov
movl
movl
pushl
pushl
call
xor
mov
sbb
cmp
jl
adc
addl
sub
movl
movl
pushl
pushl
pushl
pushl
pushl
call
incl
cmpl
jle
incl
cmpl
jle
movl
movl
mov
or
mov
and
sub
imul
mov
xor
mov
movl
movl
lea
mov
mov
mov
imul
sub
xor
and
cmp
je
adc
add
sub
incl
cmpl
jle
call
mov
movl
mov
sub
sub
movl
mov
and
mov
inc
mov
cltd
idiv
imul
mov
decl
je
pushl
pushl
pushl
call
jmp
movl
movl
lea
mov
mov
mov
add
sub
call
call
call
movl
cmpl
jge
movl
cmpl
jl
movl
movl
push
pushl
pushl
pushl
call
sub
add
jne
add
add
jb
add
add
sub
add
xor
add
mov
cmp
jle
lea
mov
movl
mov
mov
mov
or
add
mov
jmp
lea
mov
mov
mov
sub
mov
xor
mov
movl
pushl
pushl
push
call
add
testl
jb
sub
add
adc
mov
imul
add
addl
cmp
jne
sub
add
pushl
pushl
push
call
call
incl
cmpl
jle
movl
cmpl
jle
movl
movl
pushl
pushl
pushl
call
lea
mov
mov
mov
imul
mov
mov
and
sub
sub
jmp
pushl
call
pushl
call
pushl
push
pushl
call
mov
or
mov
sub
imul
mov
movl
mov
add
mov
xor
mov
movl
pushl
push
pushl
pushl
pushl
call
subl
add
cmp
jb
or
sub
test
jl
addl
sub
sub
incl
cmpl
jle
mov
mov
pop
ret
push
mov
add
movl
movl
mov
cmp
xor
mov
movl
movl
mov
or
mov
sub
mov
sub
sbbl
cmp
jne
add
add
or
movl
movl
mov
inc
mov
mov
cltd
idiv
mov
incl
cmpl
jle
movl
movl
lea
mov
lea
mov
mov
mov
mov
imull
mov
movl
movl
lea
mov
mov
mov
imul
mov
movl
mov
or
mov
and
imul
mov
add
test
jne
xor
add
sbb
movl
mov
sub
mov
movl
cmpl
je
movl
mov
cmp
jne
jmp
sub
sub
cmp
jne
sub
or
test
jl
sub
sub
or
sub
sub
xor
mov
movl
lea
mov
mov
and
mov
inc
mov
cltd
idiv
mov
incl
cmpl
jle
add
sub
test
jne
sub
test
je
add
sub
sub
addl
adc
add
adc
test
ja
sub
cmp
je
add
add
or
xor
add
addl
mov
pop
ret
nop
nop
nop
push
mov
add
movl
movl
mov
sub
mov
sub
add
cmp
jb
sub
sbb
test
jl
andl
add
sub
xor
sub
test
jb
xor
sub
test
ja
add
add
xor
add
add
or
test
ja
sub
test
jb
and
sub
sub
adcl
xor
mov
incl
cmpl
jle
sub
test
ja
addl
adc
cmp
jl
add
add
sbb
movl
mov
inc
mov
cltd
idiv
mov
and
test
je
add
addl
test
jne
sub
xorl
andl
movl
cmpl
jne
movl
cmpl
jge
movl
cmpl
jne
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
add
jmp
movl
lea
mov
movl
mov
and
mov
add
mov
movl
movl
mov
add
imul
mov
add
sub
add
jb
addl
sbb
testl
jl
sub
sub
sub
addl
addl
movl
movl
mov
add
mov
xor
mov
xor
mov
movl
movl
lea
mov
movl
mov
and
mov
mov
or
sub
mov
movl
lea
mov
lea
mov
mov
mov
mov
sub
add
incl
cmpl
jle
incl
cmpl
jle
movl
lea
mov
mov
mov
mov
and
sub
mov
add
add
cmp
ja
add
add
test
je
adc
adc
and
add
sub
subl
orl
testl
je
adc
test
ja
sub
add
addl
sub
add
add
add
testl
jb
sbb
sub
movl
cmpl
jl
sub
test
jb
subl
add
sub
jmp
subl
test
ja
add
test
ja
or
add
add
add
xor
mov
add
add
testl
je
sub
sub
sub
incl
cmpl
jle
sub
adc
test
je
sub
subl
add
jb
sub
sbb
sub
and
mov
pop
ret
nop
push
mov
add
xor
mov
movl
cmpl
jle
movl
cmpl
je
movl
movl
mov
imul
mov
jmp
add
subl
cmp
je
add
orl
cmp
jb
sub
sub
add
addl
jmp
and
add
je
xor
xor
incl
cmpl
jle
add
sub
ja
and
test
je
xor
add
sub
or
movl
movl
mov
imul
mov
and
sub
test
jne
add
sbb
sub
movl
movl
mov
sub
mov
adc
testl
je
xor
and
xor
sub
test
ja
sub
add
test
ja
or
and
sub
movl
mov
add
imul
mov
mov
add
sub
xor
mov
xor
mov
cmpl
jg
movl
lea
mov
mov
mov
imul
mov
jmp
or
cmp
ja
sub
sub
subl
movl
movl
mov
and
add
add
incl
cmpl
jle
incl
cmpl
jle
add
add
cmp
jne
sbb
sbb
jne
add
or
add
sub
mov
pop
ret
push
mov
add
movl
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
movl
cmpl
jne
xor
mov
sub
test
je
sub
testl
jne
or
sub
add
subl
incl
cmpl
jle
movl
movl
lea
mov
mov
mov
sub
mov
or
test
ja
sbb
test
je
sbbl
add
sub
movl
cmpl
jne
movl
movl
movl
mov
or
mov
inc
mov
cltd
idiv
mov
movl
mov
sub
mov
jmp
adc
test
je
subl
sub
test
jne
sbbl
sub
add
sub
sub
adcl
test
ja
xor
sub
sub
movl
cmpl
lea
mov
mov
inc
mov
mov
cltd
idiv
add
sub
test
jl
add
add
test
jl
add
sub
add
sub
adc
xor
mov
xor
mov
xor
mov
add
addl
test
jne
add
add
cmp
ja
add
or
add
add
sub
add
incl
cmpl
jle
movl
lea
mov
mov
mov
add
mov
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
incl
cmpl
jle
incl
cmpl
jle
mov
imull
imul
mov
add
test
jb
add
sbb
add
movl
movl
lea
mov
mov
mov
or
imul
mov
sub
test
ja
subl
cmp
jne
add
sbb
sub
add
mov
pop
ret
nop
push
mov
add
movl
movl
lea
mov
mov
mov
sub
mov
movl
cmpl
jle
movl
mov
sub
mov
movl
lea
mov
mov
inc
mov
cltd
idiv
imul
mov
movl
movl
mov
and
add
mov
add
test
je
add
testl
je
subl
adc
add
sbb
or
cmp
je
add
sub
test
jl
subl
sub
xor
sub
add
add
and
cmp
jl
sub
cmp
je
sub
xor
sbbl
sub
sub
movl
lea
mov
mov
inc
mov
mov
cltd
idiv
imul
mov
movl
mov
or
add
sub
movl
cmpl
jl
xor
mov
movl
mov
or
mov
inc
mov
cltd
idiv
add
or
testl
jl
add
add
movl
mov
or
mov
inc
mov
cltd
idiv
add
incl
cmpl
jle
jmp
movl
mov
or
mov
sub
mov
addl
sub
test
je
or
cmp
je
sub
sub
sub
sub
sub
sub
jb
add
sbb
jne
or
sub
sub
add
add
mov
pop
ret
nop
nop
push
mov
add
xor
mov
movl
cmpl
jne
addl
or
test
jne
or
test
jb
sbb
addl
add
xor
mov
incl
cmpl
jle
incl
cmpl
jle
movl
cmpl
jne
add
subl
testl
je
sub
sbb
cmp
jb
adcl
xor
sub
add
movl
movl
mov
cmp
jle
xor
mov
movl
movl
lea
mov
mov
mov
mov
or
sub
add
incl
cmpl
jle
movl
cmpl
movl
movl
movl
mov
and
mov
or
add
add
movl
movl
lea
mov
mov
mov
or
sub
add
add
add
cmp
jb
add
test
je
add
orl
or
add
and
add
sub
cmp
jl
sub
add
xorl
movl
cmpl
jne
xor
mov
incl
cmpl
jle
xor
mov
movl
movl
mov
and
add
mov
sub
subl
testl
jl
sub
test
jl
sub
sub
adc
add
incl
cmpl
jle
jmp
xor
mov
incl
cmpl
jle
or
adcl
test
jb
sub
addl
cmp
jne
add
or
subl
add
movl
mov
imul
sub
or
adcl
cmp
jl
add
add
ja
add
adc
adcl
sbb
subl
xor
mov
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
incl
cmpl
jle
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
add
sbb
test
ja
subl
and
mov
pop
ret
nop
nop
nop
push
mov
add
mov
xor
mov
xor
mov
push
lea
push
call
movl
lea
mov
mov
inc
mov
mov
mov
cltd
idiv
imul
mov
incl
cmpl
jle
mov
mov
pop
ret
nop
nop
nop
push
mov
add
movl
movl
lea
mov
movl
mov
mov
and
add
mov
sub
add
testl
jl
orl
add
adc
movl
cmpl
jle
movl
movl
mov
add
add
jmp
addl
test
jne
sub
sub
test
jne
subl
sub
add
xor
mov
movl
movl
mov
cmp
jg
movl
mov
cmp
jl
movl
movl
lea
mov
mov
mov
or
add
mov
jmp
jmp
movl
movl
movl
mov
or
sub
add
movl
movl
lea
mov
mov
mov
and
sub
imul
mov
incl
cmpl
jle
movl
movl
mov
inc
mov
cltd
idiv
mov
xor
mov
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
sub
sub
add
je
add
sub
test
jl
or
sub
xorl
movl
cmpl
incl
cmpl
jle
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
and
xor
cmp
jl
add
and
sub
add
xor
mov
add
and
cmp
jne
sbb
xor
cmp
ja
and
xorl
sub
subl
incl
cmpl
jle
sbb
subl
cmp
ja
add
cmp
jne
sub
add
sub
movl
cmpl
je
xor
mov
movl
movl
lea
mov
lea
mov
mov
mov
mov
imul
imul
mov
incl
cmpl
jle
movl
movl
mov
imull
mov
movl
lea
mov
movl
mov
mov
and
mov
or
add
imul
mov
sub
xor
cmp
jb
subl
add
test
je
add
adc
adcl
sub
orl
mov
pop
ret
nop
nop
nop
push
mov
add
push
movl
movl
pushl
pushl
pushl
push
call
push
call
pushl
pushl
pushl
push
call
pushl
call
call
pop
mov
movl
cmpl
jne
call
movl
mov
add
imul
mov
sub
add
cmp
jb
sub
sbb
and
jb
sub
add
xor
add
andl
push
push
push
call
call
movl
cmpl
jle
call
jmp
movl
lea
mov
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
mov
cmp
jg
xor
mov
xor
mov
movl
mov
imul
add
incl
cmpl
jle
incl
cmpl
jle
subl
mov
cmpw
jne
xor
mov
movl
lea
push
lea
push
call
adc
xor
cmp
jne
sub
xorl
addl
incl
cmpl
jle
movl
movl
movl
push
pushl
pushl
pushl
pushl
call
and
subl
test
jb
add
add
cmp
jne
add
add
add
xor
adc
lea
mov
lea
mov
mov
mov
or
mov
add
add
mov
pop
mov
pop
ret
push
mov
add
movl
cmpl
jge
mov
cmp
je
xor
mov
push
push
push
push
call
incl
cmpl
jle
movl
movl
mov
cmp
jl
lea
mov
mov
mov
or
sub
add
lea
mov
mov
mov
or
add
mov
add
test
jl
sub
sub
sub
addl
lea
mov
mov
mov
imul
imul
mov
jmp
movl
pushl
pushl
pushl
pushl
call
mov
or
mov
and
add
sub
xor
mov
movl
movl
mov
add
sub
incl
cmpl
jle
jmp
movl
lea
mov
mov
mov
sub
add
mov
imul
sub
subl
testl
jl
add
addl
add
call
add
add
test
je
sub
add
je
subl
add
add
sub
push
call
call
movl
mov
imul
mov
push
call
call
mov
pop
ret
nop
nop
nop
push
mov
add
xor
mov
add
add
test
jb
sub
sub
add
sub
incl
cmpl
jle
or
testl
ja
sub
sub
movl
movl
lea
mov
mov
inc
mov
cltd
idiv
mov
xor
mov
xor
mov
movl
movl
mov
or
mov
or
sub
add
incl
cmpl
jle
xor
mov
xor
mov
movl
lea
mov
mov
mov
add
mov
incl
cmpl
jle
incl
cmpl
jle
incl
cmpl
jle
movl
movl
mov
and
imul
imul
mov
addl
test
jl
sub
testl
jne
addl
add
sub
andl
subl
sub
xor
mov
xor
mov
movl
movl
lea
mov
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
and
test
ja
add
test
ja
add
add
add
addl
movl
movl
mov
or
add
add
incl
cmpl
jle
movl
cmpl
jne
movl
mov
cmp
movl
lea
mov
mov
mov
add
mov
subl
cmp
je
addl
subl
cmp
jb
add
subl
sub
add
adc
incl
cmpl
jle
movl
movl
mov
or
sub
mov
xor
mov
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
add
incl
cmpl
jle
xor
test
jl
add
cmp
jne
sub
or
add
subl
add
add
sub
test
je
sub
testl
jne
sub
add
add
sub
sub
addl
add
jl
add
test
ja
sub
sub
add
add
sub
add
sub
test
je
add
addl
sub
xor
mov
sub
add
test
jl
sub
test
jb
and
or
sub
incl
cmpl
jle
xorl
xor
test
jne
adc
sub
cmp
ja
add
andl
sub
mov
pop
ret
push
mov
add
movl
movl
pushl
push
pushl
push
pushl
call
movl
pushl
push
pushl
push
pushl
call
pushl
push
pushl
call
add
sub
test
jne
and
cmp
jl
add
xor
sub
add
pushl
push
pushl
push
pushl
call
pushl
push
pushl
call
pushl
pushl
push
pushl
call
xor
mov
pop
ret
nop
push
mov
add
movl
lea
mov
lea
mov
mov
mov
mov
mov
or
sub
imul
mov
and
or
ja
sbb
add
xor
xor
mov
xor
mov
movl
movl
mov
sub
imul
mov
incl
cmpl
jle
incl
cmpl
jle
mov
mov
mov
mov
pop
ret
nop
nop
nop
push
mov
add
xor
mov
movl
movl
mov
add
imul
mov
incl
cmpl
jle
mov
shl
mov
add
sub
cmp
jl
add
add
test
je
sub
or
adc
sub
sub
xor
shll
xor
mov
incl
cmpl
jle
mov
mov
pop
ret
nop
push
mov
add
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
movl
cmpl
jge
xor
test
je
and
sbb
cmp
jl
add
or
add
add
jmp
subl
sbb
test
jb
add
test
jb
and
adc
sub
sub
movl
movl
mov
and
mov
inc
mov
cltd
idiv
mov
sub
or
cmp
jne
and
add
addl
and
movl
movl
movl
mov
or
mov
or
add
mov
movl
lea
mov
mov
inc
mov
cltd
idiv
mov
addl
add
test
jb
add
sub
add
addl
test
je
sub
test
jb
sub
addl
add
add
xorl
sbb
movl
mov
and
add
mov
xor
mov
sub
subl
sub
jl
add
add
and
sub
incl
cmpl
jle
addl
add
test
ja
add
sub
cmp
ja
add
sub
add
sub
add
mov
add
imul
mov
sub
andl
sub
jb
add
add
cmp
je
sub
sub
and
sub
adc
movl
lea
mov
mov
mov
imul
imul
mov
add
add
jne
or
sbb
adc
sub
movl
lea
mov
movl
mov
and
mov
imull
mov
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
sub
movl
mov
add
sub
xor
test
ja
add
add
sbb
sub
addl
test
jne
sbb
add
test
je
sub
addl
sub
subl
add
mov
pop
ret
nop
push
mov
add
movl
movl
lea
mov
lea
mov
mov
mov
mov
add
add
adc
test
jb
sbb
xor
sub
xorl
xor
mov
or
test
je
add
sub
add
incl
cmpl
jle
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
add
movl
cmpl
jg
movl
movl
pushl
pushl
pushl
push
push
call
movl
push
pushl
pushl
push
call
flds
fmuls
fstps
movl
movl
lea
mov
mov
mov
add
mov
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
movl
cmpl
jl
cmpl
je
xor
mov
movl
movl
movl
mov
or
mov
and
add
imul
mov
sub
testl
jne
sbb
or
test
ja
add
sub
sub
add
addl
movl
mov
and
imull
mov
sub
adc
test
jne
adc
or
test
je
add
sub
or
and
incl
cmpl
jle
jmp
call
movl
movl
mov
sub
add
pushl
call
flds
fdivs
fstps
movl
push
pushl
push
pushl
push
call
flds
fmuls
fstps
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
add
movl
mov
imull
sub
flds
fmuls
fmuls
fstps
adc
sub
test
jl
add
add
je
add
sub
and
sub
sub
xor
xor
mov
movl
lea
mov
mov
mov
imull
mov
incl
cmpl
jle
movl
cmpl
jg
movl
pushl
pushl
pushl
pushl
pushl
call
sub
cmp
je
sub
and
jl
sub
add
xor
pushl
pushl
pushl
pushl
pushl
call
pushl
pushl
push
pushl
call
or
test
je
add
subl
test
je
xor
add
sub
add
add
jmp
movl
lea
mov
movl
mov
mov
and
mov
inc
mov
cltd
idiv
add
movl
mov
sub
mov
push
pushl
pushl
call
movl
mov
imull
add
sub
cmp
jne
or
or
test
ja
adc
sbb
sub
sbb
sbbl
flds
mov
pop
ret
nop
push
mov
add
xor
mov
sub
test
ja
add
test
jne
add
add
or
sub
incl
cmpl
jle
adc
testl
jb
sub
add
testl
je
add
add
add
sub
movl
cmpl
jl
xor
mov
incl
cmpl
jle
xor
mov
xor
mov
movl
movl
lea
mov
movl
mov
mov
or
imull
sub
incl
cmpl
jle
incl
cmpl
jle
add
sbb
sub
jl
sub
sub
add
xor
mov
movl
lea
mov
mov
mov
add
mov
incl
cmpl
jle
movl
movl
movl
mov
and
mov
inc
mov
cltd
idiv
sub
movl
movl
mov
or
imull
mov
sub
sbb
test
jb
or
add
sbbl
add
movl
cmpl
movl
mov
imull
mov
addl
sub
cmp
jl
add
add
xor
mov
incl
cmpl
jle
xor
mov
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
movl
cmpl
jne
movl
cmpl
jge
movl
lea
mov
movl
mov
mov
or
imul
mov
lea
mov
mov
mov
and
mov
inc
mov
cltd
idiv
add
movl
mov
cmp
je
movl
movl
mov
or
add
add
incl
cmpl
jle
movl
movl
movl
mov
or
mov
inc
mov
cltd
idiv
mov
movl
mov
add
mov
subl
add
testl
jl
add
test
jb
sbb
sub
sub
add
mov
imull
mov
sub
add
cmp
jne
sbb
addl
add
sub
sub
jb
add
add
jne
subl
sub
sub
sub
sub
mov
pop
ret
push
mov
add
push
lea
push
call
xor
mov
movl
cmpl
jg
movl
mov
add
sub
add
and
jl
add
add
cmp
jl
add
sbb
or
add
jmp
movl
movl
pushl
pushl
push
push
call
sub
adc
cmp
jl
add
sbb
addl
movl
mov
add
imul
mov
incl
cmpl
jle
xor
mov
movl
lea
mov
mov
and
mov
inc
mov
cltd
idiv
imul
mov
incl
cmpl
jle
movl
pushl
pushl
pushl
call
movl
movl
pushl
pushl
pushl
call
push
lea
push
call
subl
cmp
je
add
add
je
subl
sub
sbb
movl
mov
or
imull
add
movl
mov
or
sub
imul
mov
pushl
pushl
pushl
call
movl
lea
push
lea
push
call
push
call
movl
movl
push
pushl
pushl
pushl
call
mov
pop
ret
nop
nop
nop
call
ret
nop
nop
push
mov
add
xor
mov
incl
cmpl
jle
and
sub
test
je
and
sub
add
movl
cmpl
jle
movl
mov
inc
mov
mov
cltd
idiv
add
call
xor
mov
xor
mov
incl
cmpl
jle
movl
mov
and
mov
inc
mov
cltd
idiv
mov
movl
mov
imull
imul
mov
xor
mov
sub
adc
cmp
jl
andl
xor
add
incl
cmpl
jle
pushl
call
mov
movl
mov
cmp
jl
movl
mov
and
imul
mov
subl
cmp
jne
add
test
jne
sub
subl
sbbl
sub
movl
cmpl
je
mov
or
imull
imul
mov
cmpl
jge
add
test
jb
add
testl
jl
addl
add
add
addl
add
xor
or
adc
ja
add
test
jl
add
add
sbbl
add
call
mov
movl
cmpl
jge
movl
lea
mov
mov
mov
mov
or
add
imul
mov
jmp
movl
lea
mov
mov
mov
imul
sub
mov
mov
movl
mov
sub
mov
mov
shr
mov
xor
mov
incl
cmpl
jle
shrl
movl
movl
mov
add
sub
addl
cmp
jne
sbb
subl
test
jb
sub
sub
and
sub
addl
mov
xor
movl
mov
cmp
call
xor
mov
and
add
sub
jb
sub
testl
je
or
sub
sub
sub
sub
movl
mov
cmp
jl
movl
lea
mov
mov
mov
add
mov
jmp
movl
cmpl
je
movl
mov
sub
add
add
adcl
test
jne
add
test
jne
add
add
add
movl
movl
lea
mov
mov
mov
sub
add
mov
cmp
jne
sub
sub
cmp
jl
sub
add
addl
sub
cmpl
jne
movl
mov
inc
push
mov
pop
mov
cltd
idiv
add
jmp
cmpl
jne
movl
movl
mov
add
mov
jmp
add
test
jne
subl
sub
andl
mov
mov
pop
ret
nop
nop
nop
push
mov
add
xor
test
jne
add
addl
xor
movl
mov
or
mov
inc
mov
cltd
idiv
mov
sub
cmp
jb
sbb
sub
jb
sub
add
sub
addl
sub
movl
cmpl
jge
movl
cmpl
cmpl
je
movl
cmpl
jg
movl
movl
mov
add
mov
sub
test
jl
sbb
testl
jl
sub
sub
sub
lea
mov
mov
mov
and
imul
imul
mov
or
add
testl
ja
sbb
testl
ja
add
or
sbbl
add
movl
movl
lea
mov
mov
mov
imul
mov
add
cmp
jne
add
sub
test
jne
and
adc
subl
subl
add
addl
xor
mov
incl
cmpl
jle
sbb
add
jl
add
test
jl
or
sub
or
sub
add
xor
test
jne
add
test
ja
sub
add
sub
add
cmpl
jg
add
add
cmp
ja
sub
cmp
jne
add
sub
addl
sbb
movl
mov
cmp
jle
movl
movl
mov
add
mov
and
test
jl
addl
cmp
jl
sub
andl
add
sub
sub
sub
adc
jl
adc
sub
or
ja
add
add
xor
adc
mov
pop
ret
nop
push
mov
add
movl
cmpl
jl
xor
mov
sub
testl
jb
add
testl
jl
and
sub
or
sub
or
movl
movl
mov
cmp
jg
movl
movl
lea
mov
mov
mov
sub
sub
movl
movl
movl
mov
or
sub
mov
jmp
adc
cmp
jl
or
add
addl
incl
cmpl
jle
jmp
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
movl
movl
lea
mov
mov
and
mov
sub
sub
movl
cmpl
jne
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
movl
movl
movl
mov
or
sub
add
sub
test
je
sub
subl
adc
cmpl
jne
movl
lea
mov
lea
mov
mov
mov
mov
imull
mov
xor
mov
incl
cmpl
jle
jmp
movl
movl
mov
cmp
jle
add
sub
jl
adc
sbb
test
ja
adcl
add
adc
and
jmp
movl
mov
and
add
sub
adc
test
jb
add
sub
add
add
xor
mov
movl
cmpl
jge
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
imul
mov
incl
cmpl
jle
movl
movl
mov
cmp
jle
movl
cmpl
jne
mov
and
mov
inc
mov
cltd
idiv
add
jmp
mov
inc
push
mov
pop
mov
cltd
idiv
add
sub
test
jb
add
and
addl
xor
mov
incl
cmpl
jle
movl
mov
or
mov
and
imul
mov
cmpl
je
mov
add
sub
movl
movl
mov
add
imul
mov
movl
lea
mov
mov
mov
add
mov
add
test
jl
and
test
ja
subl
sub
addl
sub
add
add
test
jne
sub
add
jb
add
add
add
add
mov
pop
ret
nop
push
mov
add
movl
cmpl
jl
movl
movl
mov
sub
mov
movl
movl
lea
mov
mov
mov
sub
mov
movl
cmpl
jg
lea
mov
lea
mov
movl
mov
mov
or
mov
sub
add
jmp
xor
mov
subl
sub
cmp
ja
sub
orl
testl
jl
sub
addl
add
incl
cmpl
jle
movl
mov
cmp
je
sub
test
jne
add
test
jl
addl
sub
add
sub
add
sub
movl
movl
mov
add
imul
mov
xor
add
cmp
je
add
add
cmp
jb
add
add
add
sub
sub
movl
cmpl
je
movl
movl
movl
mov
and
mov
or
add
add
jmp
movl
movl
mov
inc
mov
cltd
idiv
mov
movl
cmpl
jg
movl
cmpl
jge
xor
mov
incl
cmpl
jle
add
adcl
test
jb
sbb
or
test
jne
sub
subl
add
sub
subl
cmpl
jg
jmp
add
cmp
jl
add
xor
and
jl
adc
sub
sub
add
cmpl
jl
movl
lea
mov
mov
mov
imul
mov
movl
movl
mov
or
imull
mov
movl
cmpl
jle
xor
mov
lea
mov
lea
mov
mov
mov
mov
add
sub
movl
cmpl
incl
cmpl
jle
cmpl
jl
jmp
lea
mov
mov
mov
imull
sub
sub
adc
test
jb
and
test
jne
sub
add
add
addl
adcl
test
jb
sub
cmp
jb
and
sub
sub
add
xor
mov
pop
ret
nop
nop
push
mov
add
movl
movl
mov
or
mov
inc
mov
cltd
idiv
mov
sbb
test
ja
subl
sub
add
sub
movl
movl
mov
or
mov
and
sub
sub
movl
cmpl
jg
sub
test
jl
adc
sub
add
movl
cmpl
jle
movl
movl
lea
mov
lea
mov
mov
mov
mov
sub
imul
mov
and
cmp
jne
or
cmp
jb
subl
add
add
subl
sub
jmp
movl
lea
mov
mov
mov
add
add
lea
mov
movl
mov
mov
and
imul
mov
add
or
ja
xor
testl
jne
xor
and
sub
sub
sub
movl
movl
mov
cmp
jge
add
subl
test
jb
sbb
subl
sub
movl
lea
mov
mov
mov
add
mov
movl
movl
lea
mov
mov
mov
imull
sub
movl
mov
inc
mov
mov
cltd
idiv
add
sub
sub
cmp
jl
sub
add
test
jne
add
add
sub
sbb
xor
mov
incl
cmpl
jle
movl
mov
inc
mov
mov
cltd
idiv
add
sub
cmp
jl
sub
sub
test
ja
sub
sub
sbb
add
adc
sub
test
je
add
test
ja
sub
or
add
mov
pop
ret
nop
push
mov
add
push
push
push
movl
cmpl
jg
lea
mov
mov
mov
add
mov
sbb
cmp
jne
sbb
xor
test
je
add
sub
subl
sub
add
and
cmp
jne
add
sub
test
jne
adc
and
sub
sub
cmpl
jmp
movl
mov
cmp
je
xor
mov
movl
mov
and
mov
or
add
mov
mov
add
sub
lea
mov
mov
mov
mov
and
add
mov
incl
cmpl
jle
movl
mov
or
mov
sub
mov
movl
lea
mov
lea
mov
mov
mov
mov
add
imul
mov
sub
cmp
je
add
add
mov
movl
cmpl
jg
adc
add
test
ja
sub
add
add
xor
mov
xor
mov
incl
cmpl
jle
incl
cmpl
jle
mov
sub
test
ja
sub
test
ja
adc
sub
sub
subl
mov
push
call
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
xor
mov
movl
mov
imull
mov
mov
cmp
jne
movl
lea
mov
mov
and
mov
imull
sub
add
test
jne
sub
sbb
test
ja
sub
sub
addl
subl
xor
mov
xor
mov
movl
movl
pushl
push
pushl
pushl
call
movl
mov
and
sub
imul
mov
add
add
testl
je
sub
subl
sbbl
incl
cmpl
jle
call
incl
cmpl
jle
movl
movl
push
pushl
pushl
pushl
call
xor
mov
lea
mov
mov
and
mov
add
sub
mov
or
add
imul
mov
add
testl
jb
sub
sub
cmp
jl
add
sub
add
and
add
movl
cmpl
jg
push
push
push
push
call
sbb
test
ja
xor
test
je
sub
orl
sub
add
jmp
pushl
push
pushl
pushl
call
incl
cmpl
jle
movl
movl
lea
mov
mov
mov
add
mov
sub
testl
je
add
and
sub
xor
mov
call
movl
mov
and
imul
mov
incl
cmpl
jle
cmpl
je
call
movl
movl
call
pushl
pushl
push
pushl
call
sub
test
jl
and
add
push
push
push
push
call
movl
movl
pushl
pushl
pushl
push
call
pushl
pushl
pushl
push
call
call
addl
add
je
subl
or
movl
movl
mov
or
mov
inc
mov
cltd
idiv
add
add
add
test
je
sbb
testl
jl
addl
sub
sub
add
sub
pushl
push
call
mov
movl
movl
pushl
pushl
call
movl
pushl
pushl
call
pushl
pushl
pushl
call
pushl
pushl
call
pushl
pushl
pushl
call
call
mov
sub
movl
movl
movl
push
pushl
pushl
pushl
call
mov
imull
sub
push
pushl
pushl
pushl
call
push
pushl
push
pushl
pushl
call
mov
cmp
jae
movl
cmpl
jge
call
movl
lea
push
lea
push
call
add
add
cmp
je
or
test
jb
add
add
and
xor
add
sub
call
pushl
pushl
push
pushl
call
pushl
pushl
call
mov
movl
movl
pushl
pushl
push
pushl
call
pushl
pushl
push
pushl
call
call
xor
mov
movl
movl
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
movl
movl
lea
mov
mov
mov
imul
sub
sub
test
je
sbb
and
test
jne
sub
sub
sub
xor
add
add
call
call
call
cmpl
jne
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
add
sub
and
je
sub
cmp
ja
addl
orl
sub
subl
sub
movl
movl
push
pushl
pushl
push
call
push
pushl
pushl
push
call
call
movl
movl
push
pushl
push
pushl
call
xor
mov
movl
mov
sub
add
movl
pushl
pushl
push
call
cmpl
jg
lea
mov
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
sub
push
push
push
call
jmp
xor
mov
movl
pushl
pushl
push
call
incl
cmpl
jle
incl
cmpl
jle
pushl
pushl
pushl
call
movl
pushl
push
pushl
push
call
add
cmp
jl
sub
test
jne
sub
add
adc
add
sub
movl
mov
add
mov
call
movl
call
pushl
push
pushl
pushl
pushl
call
movl
pushl
pushl
pushl
call
movl
lea
mov
mov
and
mov
mov
and
imul
imul
mov
cmpl
je
mov
jmp
mov
mov
xor
mov
movl
movl
pushl
pushl
pushl
pushl
call
lea
push
push
call
add
cmp
jb
add
cmp
jne
sub
sub
sub
sub
sub
incl
cmpl
jle
movl
movl
pushl
push
pushl
pushl
call
movl
lea
mov
mov
mov
or
mov
and
imul
imul
mov
xor
mov
call
incl
cmpl
jle
movl
cmpl
jl
movl
cmpl
jne
movl
push
pushl
push
pushl
call
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
adc
test
je
sbb
add
jne
adc
add
xor
adcl
call
sub
test
je
sbb
testl
ja
and
sub
sbb
sub
add
movl
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
sub
movl
movl
mov
or
sub
sub
pushl
push
call
lea
mov
mov
mov
sub
imul
mov
add
add
cmp
jne
sub
sub
test
jl
sbb
sub
adc
add
call
mov
movl
movl
mov
and
mov
or
imul
add
mov
cmp
jne
movl
mov
or
imull
sub
push
lea
push
call
xor
mov
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
imul
mov
pushl
pushl
pushl
call
pushl
pushl
pushl
call
call
incl
cmpl
jle
jmp
movl
lea
mov
mov
mov
sub
imul
mov
xor
mov
movl
mov
sub
imul
mov
incl
cmpl
jle
call
xor
mov
push
call
sub
addl
cmp
jne
add
add
ja
add
adc
add
add
movl
movl
lea
mov
mov
mov
add
add
pushl
call
add
add
cmp
ja
add
subl
test
ja
sbb
add
adc
sub
sub
incl
cmpl
jle
xor
mov
movl
movl
movl
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
call
andl
add
test
jb
sub
cmp
ja
sub
add
adc
incl
cmpl
jle
xor
mov
sbb
sub
cmp
jne
subl
add
test
jl
sub
add
add
sub
sub
add
movl
cmpl
jne
call
add
test
je
sub
add
add
add
movl
movl
mov
and
mov
sub
imul
mov
add
test
je
subl
test
jb
add
sub
xor
add
mov
add
mov
sub
and
test
jne
subl
subl
add
jmp
movl
lea
mov
mov
mov
and
add
mov
call
mov
inc
mov
mov
cltd
idiv
mov
movl
lea
mov
lea
mov
mov
mov
mov
add
add
subl
and
jl
sub
add
incl
cmpl
jle
mov
add
mov
movl
movl
movl
push
pushl
pushl
pushl
call
push
pushl
pushl
pushl
call
push
pushl
pushl
push
call
push
pushl
pushl
pushl
call
push
pushl
pushl
push
call
pushl
pushl
call
movl
lea
mov
lea
mov
mov
mov
mov
sub
add
movl
lea
mov
mov
mov
sub
sub
addl
test
jl
and
adc
test
jb
sbb
add
sub
call
xor
mov
movl
movl
lea
mov
mov
inc
mov
mov
cltd
idiv
mov
incl
cmpl
jle
movl
lea
mov
lea
mov
mov
mov
and
mov
sub
add
sub
test
jne
or
test
je
sub
addl
sub
sub
push
call
movl
pushl
pushl
pushl
pushl
call
xor
mov
movl
movl
mov
sub
imul
mov
incl
cmpl
jle
xor
mov
movl
cmpl
je
movl
movl
mov
add
add
movl
pushl
pushl
pushl
pushl
push
call
and
cmp
jb
and
test
jl
add
sbb
add
add
sub
pushl
pushl
pushl
pushl
push
call
pushl
pushl
pushl
pushl
push
call
jmp
movl
movl
push
pushl
pushl
pushl
call
subl
xor
test
jne
adc
adc
add
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
imul
mov
sub
and
test
jl
sbbl
adc
add
orl
lea
push
call
movl
movl
mov
cmp
jge
push
call
and
test
jl
adc
testl
jl
sub
subl
add
andl
or
movl
cmpl
jne
call
add
cmp
jne
and
add
test
ja
add
sub
sub
add
add
jmp
movl
mov
sub
imul
mov
incl
cmpl
jle
call
mov
call
movl
mov
add
imul
mov
xor
mov
push
call
movl
lea
mov
mov
mov
and
mov
sub
mov
incl
cmpl
jle
pop
pop
pop
mov
pop
ret
nop
push
mov
add
movl
movl
lea
mov
movl
mov
mov
and
add
mov
xor
mov
movl
movl
lea
mov
mov
mov
add
mov
incl
cmpl
jle
and
sub
test
jne
or
sub
cmp
jb
sub
sbbl
sbb
sub
movl
movl
movl
mov
and
imul
mov
movl
movl
movl
mov
inc
mov
cltd
idiv
mov
movl
mov
inc
mov
cltd
idiv
sub
lea
mov
mov
mov
imul
mov
movl
movl
lea
mov
mov
mov
or
imul
add
or
add
or
ja
or
or
test
jb
sub
add
add
sub
sub
xor
mov
mov
and
mov
inc
mov
cltd
idiv
imul
mov
adc
sub
add
jb
add
test
jl
and
sub
add
add
sbb
incl
cmpl
jle
cmpl
jge
xor
mov
mov
cmp
je
and
test
jne
sub
testl
ja
addl
add
sub
xor
movl
mov
inc
mov
mov
cltd
idiv
mov
incl
cmpl
jle
cmpl
jne
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
sub
add
andl
test
jb
addl
and
sub
jmp
cmpl
jne
mov
cmp
movl
movl
mov
cmp
jg
sub
cmp
je
subl
and
xor
mov
lea
mov
mov
mov
mov
and
imul
imul
mov
add
sub
test
jne
or
testl
je
sub
add
add
sub
sub
incl
cmpl
jle
lea
mov
mov
and
mov
sub
add
movl
mov
imull
mov
cmpl
add
add
sub
jl
add
sub
mov
pop
ret
nop
nop
push
mov
add
movl
movl
mov
and
mov
and
imul
imul
mov
lea
mov
mov
and
mov
mov
and
add
imul
mov
sbb
cmp
je
add
add
test
jl
add
sub
add
add
or
movl
movl
movl
pushl
pushl
pushl
call
mov
sub
imul
mov
pushl
pushl
pushl
call
push
push
push
call
mov
movl
lea
mov
mov
inc
mov
cltd
idiv
mov
call
movl
mov
sub
add
movl
mov
inc
push
mov
pop
mov
cltd
idiv
sub
mov
add
mov
push
call
call
mov
mov
pop
ret
nop
nop
push
mov
add
movl
cmpl
jle
movl
cmpl
movl
movl
lea
mov
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
sub
test
jl
or
cmp
ja
add
sbbl
and
movl
cmpl
jge
movl
movl
lea
mov
mov
mov
mov
or
imul
mov
sub
sub
test
jb
sbb
sub
add
jmp
movl
cmpl
jg
movl
mov
sub
add
subl
add
sbb
ja
subl
sub
addl
sbb
xor
mov
xor
mov
movl
movl
lea
mov
movl
mov
and
mov
inc
mov
cltd
idiv
sub
incl
cmpl
jle
xor
mov
incl
cmpl
jle
incl
cmpl
jle
movl
movl
lea
mov
movl
mov
mov
and
add
add
addl
sub
test
jne
sbb
xor
xor
movl
lea
mov
mov
mov
add
mov
sub
sub
test
jl
sub
or
ja
xor
xor
add
add
sub
movl
mov
and
sub
imul
mov
movl
movl
lea
mov
mov
mov
sub
sub
xor
mov
movl
lea
mov
mov
mov
imul
sub
incl
cmpl
jle
mov
add
mov
movl
lea
mov
movl
mov
mov
or
add
mov
lea
mov
mov
mov
or
mov
and
add
sub
subl
sbb
cmp
jl
or
add
test
jb
sub
addl
add
sub
cmpl
jg
xor
mov
mov
or
mov
sub
sub
incl
cmpl
jle
jmp
movl
lea
mov
mov
inc
mov
cltd
idiv
sub
sub
test
ja
subl
sub
jl
and
sbb
xorl
adc
mov
pop
ret
nop
push
mov
add
movl
movl
pushl
pushl
pushl
pushl
pushl
call
lea
mov
mov
mov
or
mov
and
sub
add
movl
movl
pushl
pushl
pushl
pushl
call
xor
mov
mov
cmp
je
pushl
pushl
pushl
pushl
push
call
pushl
pushl
pushl
pushl
push
call
pushl
call
jmp
mov
sub
sub
pushl
pushl
pushl
push
pushl
call
sub
and
testl
jl
add
add
sub
sub
cmpl
jl
movl
lea
mov
mov
mov
imull
add
call
jmp
movl
lea
mov
mov
mov
add
imul
mov
movl
mov
inc
mov
mov
cltd
idiv
sub
sub
test
jb
sub
xor
incl
cmpl
jle
subl
xor
testl
je
subl
sbb
push
call
call
mov
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
xor
mov
movl
movl
mov
add
mov
incl
cmpl
jle
decl
je
pushl
pushl
pushl
call
jmp
movl
pushl
call
movl
pushl
call
push
pushl
pushl
pushl
call
add
xor
test
je
sub
xor
add
movl
movl
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
movl
movl
lea
mov
mov
mov
imull
imul
mov
addl
add
sub
jne
subl
add
xor
jb
sub
add
subl
call
subl
cmp
je
andl
addl
test
ja
sub
subl
add
or
add
mov
mov
pop
ret
nop
nop
push
mov
add
mov
mov
sub
add
cmp
jne
sub
test
jl
sub
and
adc
add
sub
sub
movl
movl
lea
mov
mov
mov
or
mov
sub
mov
and
testl
jne
add
sub
add
xor
mov
movl
lea
mov
mov
mov
add
add
add
sub
cmp
jne
add
xorl
sub
cmpl
je
movl
cmpl
jne
mov
inc
mov
cltd
idiv
sub
cmpl
jne
movl
mov
add
sub
incl
cmpl
jle
mov
mov
mov
mov
movl
mov
inc
push
mov
pop
mov
cltd
idiv
imul
mov
movl
mov
cmp
jne
push
call
movl
pushl
push
push
push
call
xor
mov
pop
ret
nop
nop
mov
mov
jmp
mov
jmp
pop
ret
sub
mov
call
cmpb
je
dec
je
jmp
mov
ret
jmp
mov
mov
mov
mov
inc
dec
jae
loop
mov
shl
push
mov
mov
mov
call
mov
mov
call
ret
mov
mov
mov
cmp
add
dec
je
xor
pop
pop
mov
push
call
sub
mov
add
mov
mov
cmpb
jne
ret
mov
sbb
mov
cmp
push
or
add
mov
pop
ret
push
ret
pop
ret
pop
pop
ret
call
mov
mov
sub
add
subb
add
or
add
js
inc
push
push
mov
push
push
push
mov
fmuls
add
mov
mov
add
add
mov
add
mov
shr
test
jne
mov
and
movzwl
sub
mov
jmp
mov
lea
pop
pop
ret
pop
pop
pop
ret
pop
ret
mov
mov
call
mov
test
je
xor
mov
mov
call
movb
adc
sub
add
mov
add
ret
pop
push
pushl
fs
mov
jne
pop
pop
pop
ret
push
pushl
mov
mov
call
pop
mov
or
mov
add
mov
mov
call
push
push
push
push
push
push
push
push
push
push
mov
mov
iret
mov
xor
push
mov
push
mov
push
or
je
mov
ret
pop
sub
mov
add
shrb
sub
add
xor
pop
ret
mov
push
call
pop
call
pop
pop
mov
mov
mov
mov
xor
jmp
jns
dec
or
inc
jmp
mov
pop
mov
movsbl
jmp
mov
sub
mov
ret
mov
sub
lea
sldt
mov
mov
push
call
mov
test
jne
mov
push
mov
mov
call
mov
add
add
pushl
mov
cmpb
jne
push
push
lea
call
ret
mov
mov
and
push
pop
push
call
lea
mov
call
ret
lea
push
call
mov
adc
lea
mov
add
mov
mov
mov
mov
call
mov
call
and
movb
fdivs
add
je
xor
push
mov
add
pop
pop
pop
ret
jne
mov
mov
call
sub
je
add
push
push
mov
mov
mov
mov
call
mov
test
jne
or
mov
and
push
sub
add
sub
add
pushl
mov
cmpb
jne
mov
call
mov
mov
pop
ret
mov
mov
mov
adcb
mov
call
ret
cmp
jbe
call
mov
mov
call
sub
mov
adc
fadds
push
push
push
push
push
lock
jnp
add
fdivs
add
push
push
push
push
push
pop
jmp
pop
mov
push
fs
mov
add
add
mov
call
cmpb
jne
xor
jmp
xor
pop
pop
ret
push
push
mov
mov
add
sub
push
call
jmp
pop
pop
pop
ret
lea
mov
mov
call
mov
push
call
pop
mov
mov
push
xor
mov
sub
call
movzwl
stos
sbb
add
sbb
pop
mov
jmp
mov
lea
addb
push
jmp
mov
mov
xor
mov
lea
jmp
dec
mov
mov
push
mov
mov
mov
jmp
mov
lea
add
call
pop
ret
jmp
call
mov
xor
push
push
mov
mov
mov
push
pushl
mov
incl
xor
pop
pop
je
mov
cmp
je
sarl
cld
jne
mov
call
pop
pop
pop
mov
call
test
je
add
mov
xor
pop
call
mov
add
sub
jb
mov
push
mov
mov
mov
mov
mov
inc
les
rcrb
cmp
fdivl
xor
jmp
test
jne
ret
pop
pop
mov
mov
mov
call
cmp
mov
push
push
mov
push
call
mov
jmp
cmp
mov
pop
pop
pop
mov
jmp
mov
xor
mov
mov
add
add
push
push
call
xor
xor
mov
xor
mov
add
mov
add
and
jmp
mov
push
sub
lea
add
call
mov
jmp
mov
add
pushl
mov
add
call
lea
sbb
mov
xor
mov
jmp
push
mov
jmp
mov
xor
mov
mov
jmp
add
xor
push
inc
mov
mov
push
mov
sub
inc
mov
mov
call
movzwl
mov
jmp
sub
ret
mov
lea
add
jmp
mov
ret
shl
push
mov
mov
or
add
pop
pop
cmpb
jne
xor
jmp
test
jne
ret
pop
pop
mov
sub
mov
lea
call
mov
test
jne
lea
call
xor
pop
pop
push
push
xor
push
push
pushl
mov
mov
sub
mov
sbb
add
mov
int3
jg
add
mov
add
mov
sub
mov
mov
push
push
jne
push
pushl
mov
incl
sub
add
movb
xorb
fsubr
and
test
jne
ret
or
mov
xor
pop
pop
pop
ret
push
lea
call
out
mov
movb
mov
mov
call
mov
jmp
mov
mov
jne
cmpb
je
xor
pop
pop
mov
push
call
je
add
sbb
add
ret
push
call
ret
call
mov
mov
rolb
add
sub
mov
call
mov
call
lea
mov
call
nop
sub
jae
add
pop
ret
pop
pop
pop
ret
push
push
mov
mov
mov
xor
pop
pop
pop
test
je
mov
call
sub
clc
jae
add
xor
push
push
mov
mov
mov
mov
mov
mov
add
rclb
push
push
incl
ret
je
push
ret
mov
mov
mov
mov
pop
pop
ret
push
call
jg
je
ret
mov
add
add
mov
jmp
push
mov
jmp
dec
jne
adc
adc
mov
push
mov
push
mov
mov
mov
call
mov
mov
jmp
jne
sub
push
mov
push
xor
movl
push
jmp
push
mov
add
push
jmp
mov
subl
call
adc
test
je
sub
mov
jmp
push
mov
push
push
jmp
adc
pushl
dec
push
add
call
mov
mov
call
lea
adc
push
mov
call
mov
mov
mov
add
subb
mov
inc
xor
mov
sbb
xor
mov
addb
mov
jmp
addl
addl
jmp
xor
sbb
addl
shr
add
add
mov
xor
lea
lea
mov
xor
sub
mov
jmp
xor
mov
ret
sub
mov
ret
push
mov
mov
cmp
jne
ret
pop
mov
mov
call
push
sub
jae
add
mov
xor
mov
jmp
add
mov
bound
add
add
pop
pop
ret
mov
jmp
and
mov
mov
mov
push
mov
pop
mov
mov
mov
mov
push
pushl
mov
incl
xor
push
mov
push
push
mov
sub
mov
pop
ret
mov
mov
call
test
jne
xor
pop
pop
pop
ret
sub
mov
sub
add
mov
push
call
mov
pop
pop
pop
push
push
mov
push
mov
mov
sub
mov
jmp
mov
mov
add
jmp
mov
dec
jne
adc
pop
jmp
push
mov
add
push
push
jmp
adc
mov
push
mov
mov
mov
push
jmp
mov
mov
push
adc
lea
dec
call
jmp
cmpb
jne
jmp
sub
mov
add
cld
jmp
lea
mov
mov
push
adc
pop
movl
xor
adc
jmp
mov
dec
addl
call
sbb
sbb
lea
mov
jmp
xor
jmp
adc
mov
push
dec
jmp
mov
mov
mov
mov
jmp
xor
mov
lods
adc
cmp
jl
mov
sub
jmp
mov
mov
sbb
push
mov
adc
xor
call
inc
pop
mov
movb
push
add
mov
call
sub
pop
inc
mov
lea
mov
call
inc
mov
push
mov
push
adc
call
subb
mov
xor
pop
xor
xor
pop
mov
lea
xor
mov
jmp
xor
sub
sbb
push
jmp
xor
cmp
jmp
mov
jmp
add
mov
push
lea
adc
jmp
jne
mov
movzwl
mov
jmp
sub
mov
lods
jne
mov
call
jmp
pop
push
call
mov
mov
mov
mov
pusha
inc
add
fdivl
ret
mov
call
ret
pop
jmp
pop
mov
mov
sbb
add
call
test
jne
mov
jmp
pop
pop
mov
mov
aam
pushf
pop
ret
xor
pop
pop
call
pop
ret
mov
dec
jge
andl
lods
sub
je
add
sub
add
jne
add
mov
call
ret
push
pushl
mov
mov
inc
or
lea
push
call
mov
xor
jmp
mov
mov
call
mov
mov
pop
pop
pop
ret
mov
incl
mov
cmp
jb
jmp
mov
sub
sub
xor
sub
sbb
mov
mov
sub
xor
mov
sub
sbb
mov
mov
jmp
addl
add
call
jmp
sub
inc
push
jmp
mov
inc
incl
cmp
jb
jmp
cmp
jne
dec
mov
addb
mov
subb
lea
add
pop
sub
mov
subl
jmp
xor
mov
mov
xor
mov
mov
xor
mov
xor
add
mov
add
and
jns
dec
or
inc
jmp
mov
jmp
shl
and
shr
jmp
push
push
jmp
add
lea
mov
mov
xor
pop
pop
mov
call
cmp
ja
mov
add
mov
fsub
jl
enter
mov
push
push
call
push
call
ret
push
push
push
mov
mov
xor
push
mov
push
mov
mov
call
loopne
add
pop
pop
lea
call
pop
ret
xor
push
push
push
push
push
push
push
mov
add
xor
pop
pop
pop
lea
mov
mov
mov
mov
mov
add
add
outsl
add
lea
mov
call
ret
lea
push
call
mov
mov
sub
je
add
add
pushl
mov
mov
mov
lea
push
lea
push
and
pop
pop
pop
ret
test
je
lea
call
jmp
cmp
jne
mov
test
mov
dec
add
mov
pop
ret
sub
jb
jmp
mov
sub
add
mov
mov
mov
sub
push
call
jmp
pop
pop
pop
ret
lea
mov
mov
sub
add
cld
pop
pop
pop
mov
pop
ret
push
ret
pop
call
ret
mov
push
test
mov
mov
pop
mov
xor
pop
pop
pop
ret
je
push
jne
cmpb
jne
call
xor
push
mov
add
push
pop
pop
pop
ret
lea
or
lea
add
loop
pop
mov
push
push
push
mov
mov
mov
pop
call
test
jne
call
cmpb
je
dec
je
mov
mov
ret
mov
mov
call
mov
xor
push
mov
xor
push
add
sub
mov
push
mov
push
add
push
call
jmp
cmp
jne
xor
push
mov
add
push
push
push
mov
mov
mov
add
dec
test
jl
inc
cmp
ja
mov
test
jne
pop
pop
pop
ret
push
mov
mov
mov
call
mov
pop
mov
movb
test
add
push
mov
call
push
push
push
push
ret
test
je
mov
call
pop
mov
push
add
add
add
pushf
jns
add
mov
call
test
je
cmp
je
subb
mov
fdivl
add
add
pushl
mov
incl
xor
pop
pop
lea
mov
call
xor
push
mov
push
push
incl
mov
subb
call
movl
mov
pop
mov
jmp
mov
mov
dec
push
mov
sub
mov
push
mov
jmp
mov
cmp
ja
jmp
push
mov
push
mov
jmp
mov
add
add
jmp
pop
pop
pop
jmp
sbb
mov
movb
push
lea
mov
call
mov
mov
xor
pop
add
sub
mov
mov
add
sbb
push
add
call
add
pop
sub
mov
mov
dec
push
mov
jmp
mov
mov
jmp
sub
stos
adc
sbb
xor
dec
jne
mov
mov
jmp
lea
mov
sbb
jmp
lea
push
mov
mov
call
jmp
mov
add
lea
adc
mov
lea
mov
mov
mov
sub
shr
mov
jmp
mov
adc
push
mov
jmp
add
mov
push
mov
mov
inc
call
jmp
add
add
push
push
call
add
xor
mov
inc
cltd
idivl
jmp
lea
movl
lods
mov
add
dec
lea
sub
xor
add
sub
dec
jmp
mov
mov
add
push
call
pop
jmp
mov
mov
push
jmp
pop
pop
pop
ret
sub
lea
add
pop
pop
ret
pushl
ret
pop
pop
mov
push
lea
cmp
mov
jl
js
add
and
mov
mov
call
jmp
mov
lea
test
je
mov
jmp
and
pop
ret
lea
call
ret
push
ret
pop
add
mov
subb
ret
push
push
push
push
mov
add
push
push
push
push
mov
push
push
mov
or
mov
inc
cmpb
and
add
add
pop
ret
pop
pop
call
cmpb
sub
jo
add
call
pop
mov
call
pop
pop
pop
ret
push
mov
mov
inc
call
sub
adc
movb
mov
mov
jmp
mov
xor
mov
xor
and
mov
mov
add
and
jns
dec
or
inc
jmp
mov
movb
mov
push
mov
push
mov
sbb
add
push
jmp
pop
pop
pop
mov
pop
ret
add
mov
pop
ret
call
jmp
pop
pop
pop
ret
pop
pop
pop
ret
jmp
mov
cmp
mov
call
lea
mov
call
mov
call
pop
pop
mov
movb
inc
mov
inc
nop
call
jmp
cmp
jne
ret
jbe
pop
pop
pop
pop
pop
ret
pop
pop
pop
ret
call
jmp
sbb
mov
add
pop
pop
pop
ret
and
mov
cmp
ja
mov
shl
push
mov
push
push
push
xor
lea
stc
mov
mov
xor
push
call
pop
test
je
mov
call
cmp
mov
jbe
mov
push
mov
mov
test
jne
cmpb
jne
push
push
push
push
mov
push
push
push
push
mov
mov
ja
mov
mov
call
mov
mov
jmp
adc
mov
mov
mov
mov
movl
adc
jmp
mov
jmp
sub
lea
mov
mov
mov
mov
mov
call
xor
pop
mov
mov
push
add
mov
test
je
call
jne
mov
test
je
lea
adc
mov
cmp
add
mov
call
cmpl
jne
mov
pop
pop
pop
ret
sub
je
push
add
push
push
mov
mov
xor
mov
mov
ret
sub
ud1
pop
je
add
add
shrb
add
mov
xor
pop
pop
mov
pop
push
lea
call
mov
cmp
or
lea
clc
mov
mov
mov
pop
mov
pop
ret
pop
pop
ret
push
lea
push
call
ret
je
lea
push
push
push
movb
fucomip
mov
sub
pop
jmp
push
addb
add
push
mov
push
jmp
lea
mov
jmp
pop
movsbl
jmp
or
inc
jmp
push
adc
mov
push
mov
lea
call
mov
adc
mov
call
sbb
add
mov
jmp
mov
mov
sub
mov
fsubrl
add
clc
sbb
sar
add
sub
add
pop
pop
pop
pop
ret
mov
ret
push
push
mov
mov
mov
dec
add
cmpb
je
mov
mov
mov
call
mov
push
mov
mov
lea
leave
pusha
add
je
mov
call
mov
call
pop
ret
push
push
push
push
pushl
mov
orb
mov
add
lea
mov
call
mov
call
test
jne
mov
call
push
push
mov
cmp
add
mov
aam
add
push
call
ret
jne
xor
pop
pop
mov
push
lea
mov
call
sub
add
pop
add
pop
pop
ret
mov
mov
pop
pop
pop
ret
jge
xor
push
push
movb
mov
jmp
mov
xor
jmp
add
push
push
mov
lea
push
mov
jmp
sbb
pop
xor
lea
mov
mov
jmp
and
mov
mov
xor
incl
jmp
add
sub
call
lea
add
addb
push
jmp
mov
lea
xor
mov
adc
mov
mov
mov
mov
mov
jmp
mov
jmp
sub
mov
lea
rep
jmp
pop
mov
mov
mov
mov
jmp
add
sub
sbb
mov
subb
call
mov
ret
sub
mov
jmp
add
mov
sbb
push
sub
push
mov
mov
mov
push
movb
mov
call
addb
mov
push
mov
push
movb
push
mov
mov
add
push
jmp
sub
push
add
mov
jmp
lea
mov
jmp
pop
addb
mov
mov
pop
lea
ret
add
mov
pop
mov
push
pushl
mov
cmpb
xor
movb
and
movb
cmp
je
mov
mov
call
sub
mov
call
pop
call
lea
mov
call
mov
mov
xor
cmpb
jne
mov
pop
ret
mov
mov
call
ret
lea
mov
mov
mov
mov
xor
pop
pop
mov
mov
lea
add
in
add
xor
pop
pop
jbe
lea
call
pop
pop
ret
xor
pop
pop
mov
push
pushl
mov
sbb
pop
add
ret
mov
add
mov
lea
push
push
push
push
push
push
pushl
mov
incl
sub
mov
jo
movb
push
push
mov
mov
call
mov
lea
mov
mov
mov
mov
movb
incl
mov
mov
incl
add
mov
movb
mov
mov
add
sub
jne
xor
push
add
push
mov
mov
incl
mov
mov
mov
call
jmp
mov
call
mov
push
mov
push
push
push
sub
jnp
add
push
add
pop
call
mov
xor
call
mov
push
call
test
je
xor
pop
pop
mov
push
mov
call
test
jne
mov
mov
mov
mov
call
test
je
cmp
pop
jae
movb
xor
pushl
mov
incl
xor
pop
pop
pop
pop
pop
pop
mov
cmp
mov
ret
mov
movb
incl
add
mov
movb
incl
pop
ret
mov
sub
jnp
add
in
mov
call
pop
pop
ret
jae
loop
jne
mov
pop
ret
pop
ret
lea
call
movb
test
add
outsb
add
call
mov
call
mov
mov
mov
mov
ret
mov
ret
mov
add
and
mov
jmp
cmp
mov
sbb
mov
ret
call
push
pop
pop
mov
push
mov
mov
mov
add
call
jmp
mov
mov
call
push
push
mov
mov
pop
mov
call
sub
jnp
add
mov
mov
mov
call
mov
ret
sub
mov
pusha
mov
mov
ret
pop
mov
push
lea
call
ret
pushl
mov
mov
add
mov
mov
mov
mov
inc
mov
mov
fdivs
rcrb
push
mov
mov
mov
cmpb
je
push
mov
mov
add
mov
push
pushl
mov
incl
jmp
mov
mov
add
jmp
cmp
je
mov
mov
call
sub
jae
add
xor
mov
incl
mov
mov
incl
pop
ret
pop
push
push
push
xor
push
push
add
mov
test
add
cmp
jne
mov
xor
push
push
pushl
mov
mov
push
lea
mov
call
mov
call
lea
mov
call
test
or
mov
add
mov
call
mov
xor
push
mov
push
mov
mov
mov
incl
je
mov
call
cmpl
jne
mov
mov
lea
mov
mov
call
add
jmp
mov
dec
jne
sbb
push
movb
add
call
mov
movswl
movzbl
pop
adc
mov
add
lea
mov
push
sbb
call
mov
pop
sub
mov
movl
dec
xor
push
mov
mov
push
xor
mov
push
sbb
addl
push
jmp
mov
mov
push
adc
jmp
pop
mov
jmp
mov
mov
pop
pop
ret
mov
mov
enter
jmp
pop
call
mov
push
mov
sub
mov
fadds
inc
dec
mov
push
call
test
je
mov
push
lea
mov
call
fsubrl
add
mov
ret
pop
mov
test
je
jmp
mov
pop
pop
ret
lea
mov
mov
push
mov
mov
sub
jnp
add
ret
mov
test
jne
ret
pop
pop
pop
ret
push
mov
xor
pop
pop
mov
push
lea
mov
call
add
lea
nop
cmp
add
lea
mov
mov
mov
movb
incl
mov
movb
incl
mov
movb
incl
mov
mov
mov
mov
mov
push
pushl
mov
lea
mov
mov
add
add
jmp
xor
mov
mov
xor
jmp
subb
sbb
add
mov
jmp
pop
pop
mov
pop
ret
mov
mov
ret
call
mov
call
mov
xor
push
call
xor
pop
pop
pop
mov
push
ja
add
mov
sbb
add
incl
add
mov
mov
incl
pop
mov
movb
je
mov
pop
ret
test
jne
xor
pop
pop
pop
ret
mov
jmp
pop
pop
pop
ret
mov
push
mov
call
ret
pop
pop
add
mov
push
push
mov
mov
add
push
push
pushl
mov
mov
mov
add
mov
jne
mov
call
xor
jmp
and
imul
mov
push
push
push
ret
pop
pop
pop
ret
test
je
call
sub
mov
mov
cmpb
jne
xor
pop
pop
mov
push
mov
leave
call
lea
jmp
xor
mov
inc
and
jmp
sub
xor
subb
adc
mov
jmp
push
mov
add
push
push
push
jmp
inc
mov
inc
cmp
jb
movb
movb
movb
jmp
pop
ret
jmp
sub
push
addl
jmp
mov
add
mov
mov
add
mov
xor
jmp
mov
mov
sub
add
push
ret
call
shl
push
push
pop
mov
pop
ret
pop
ret
jbe
mov
mov
push
lea
push
call
mov
xor
jmp
mov
mov
call
mov
mov
mov
xlat
mov
xor
mov
add
incl
xor
pop
pop
je
mov
sub
mov
push
pushl
mov
mov
push
call
xor
push
mov
push
add
push
call
mov
mov
inc
add
jmp
cmp
je
xor
push
push
pushl
mov
mov
add
mov
xor
push
mov
add
add
add
pop
push
lea
call
pop
ret
push
push
push
or
in
incl
dec
adc
push
call
add
jmp
push
push
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
jae
jmp
sub
mov
mov
lea
lea
call
jmp
xor
mov
movl
ret
mov
mov
mov
adc
inc
and
push
call
mov
mov
mov
movb
mov
pop
add
mov
mov
mov
call
pop
pop
pop
ret
mov
ret
xor
pop
pop
pop
pop
ret
incl
mov
movb
decl
movb
add
mov
call
mov
mov
mov
push
movsb
jae
add
pop
pop
jne
xor
push
push
pushl
mov
cmpb
jne
xor
pop
pop
mov
push
fisttps
add
rclb
push
push
push
push
push
push
push
mov
lea
mov
add
test
je
mov
call
test
push
mov
mov
test
jl
mov
movl
push
add
call
add
sbb
stos
xor
mov
pop
subl
jmp
mov
mov
mov
jmp
pop
jmp
jns
dec
jmp
movsbl
xor
inc
jmp
sub
push
jmp
mov
movb
push
jmp
inc
jmp
mov
jmp
xor
sbb
call
inc
adc
xor
pop
jmp
mov
mov
mov
jmp
xor
jmp
mov
cmp
jne
jmp
push
mov
mov
xor
mov
jmp
or
mov
jmp
add
ror
add
add
mov
dec
jne
sbb
mov
sub
sub
mov
add
add
xor
mov
jmp
movl
mov
mov
sub
movswl
push
xor
mov
add
call
add
pop
adc
mov
addb
jmp
mov
mov
jmp
mov
subb
xor
mov
shl
jmp
pop
pop
jmp
dec
pop
movswl
inc
jmp
add
sub
mov
xor
mov
mov
jmp
shl
push
frstor
mov
inc
idivl
mov
fldl
insb
push
cmp
mov
mov
xchg
add
add
lods
addb
movsl
cmpl
pop
out
inc
fdivrs
movsl
push
mov
sbb
mov
movsb
xlat
pop
and
fs
lcall
in
gs
xor
push
cmpsb
popf
mov
or
loope
fisubs
lret
sub
xor
ffree
imul
adc
sub
adc
repnz
push
enter
mov
add
push
cltd
insl
add
jne
into
sub
mov
add
outsl
cmp
mov
jge
dec
add
std
rcll
add
rcrl
ds
out
mov
xor
mov
cmp
clc
inc
add
ds
scas
inc
std
cli
dec
xchg
push
cmp
xchg
lret
xchg
pop
sub
sbb
stos
inc
outsb
or
cmc
test
cmpsl
or
and
roll
push
dec
enter
sbbl
int
mov
jns
dec
ss
mov
cmp
cmp
in
pusha
inc
add
cmpsl
gs
pop
sub
xchg
sbb
cmp
enter
jmp
mov
movsl
sub
mov
jl
pusha
pop
cld
pop
jecxz
xchg
fdivrs
insl
int3
mov
cmpsl
inc
in
and
mov
and
mov
js
sbb
fimuls
push
mov
cwtl
ljmp
push
mov
pop
dec
lahf
js
jae
mov
pop
dec
and
js
shrb
arpl
adc
out
and
fsubrs
in
pop
imul
leave
adc
sti
mov
fstl
mov
mov
push
inc
scas
mov
ja
jo
mov
push
push
push
stos
or
std
pop
clc
les
pusha
mov
pop
outsl
mov
les
bound
pop
sar
pop
lcall
int3
fucomip
ficompl
pop
pushaw
adc
pop
out
pusha
ja
gs
pop
dec
push
pop
push
jl
outsb
clc
lods
push
lret
inc
es
loope
mov
sbb
aad
xchg
adc
jmp
rcrb
stos
sub
mov
fadds
cmpsl
pop
mov
imul
ljmp
lea
inc
mov
cmpl
out
dec
or
xor
adc
shlb
mov
sbb
pop
xchg
popf
adcl
xchg
mov
mov
ljmp
xor
jmp
xor
mov
mov
push
jle
cmp
mov
mov
pusha
add
out
loopne
lds
lahf
pop
js
adc
xchg
cs
mov
xor
sub
xor
pop
fimull
bound
inc
inc
cmp
les
jl
sub
push
push
sbb
mov
in
push
jae
shll
lea
lods
in
test
or
jne
outsl
xor
pop
jno
and
std
decb
es
movsl
add
fcoms
rcrb
jbe
addr16
out
cmpl
mov
popa
jp
mov
sahf
fabs
adc
add
imul
sub
push
divb
fistpl
add
fistpl
mov
mov
mov
popa
mov
or
sbb
sbb
in
mov
xor
shlb
mov
adc
es
enter
jb
hlt
push
jns
jne
add
imul
lcall
cmc
xchg
xor
mov
test
push
subl
sub
jo
dec
inc
dec
mov
adc
mull
test
popa
daa
js
popl
sarl
insb
dec
pop
ret
mov
clc
jae
cmpb
pop
bound
repnz
or
sub
loope
mov
mov
mov
push
sub
and
shrb
add
pushf
inc
sbb
mov
ja
mov
shrl
cs
push
fucom
jae
ja
ljmp
jo
loop
jns
mov
jp
mov
inc
sarb
aas
dec
inc
fldcw
push
lods
inc
in
jnp
xchg
lahf
or
call
in
loop
xchg
add
sarb
pop
ret
and
andl
xchg
nop
push
movsl
movsl
iret
inc
lcall
push
adcb
lods
or
sub
outsb
and
lret
cwtl
fcompl
xor
mov
je
cmp
clc
or
fucomi
mov
pop
mov
hlt
outsb
mov
jno
inc
cmc
add
pusha
mov
es
cmp
daa
mulb
mov
das
xor
mov
sarl
fucomp
hlt
test
popl
mov
lods
xor
stos
movsl
push
dec
or
adc
stc
dec
std
fmuls
lahf
xchg
insb
pushl
data16
xchg
dec
popf
lahf
clc
movsb
push
add
lods
js
ss
cmp
fidivs
je
sbb
das
dec
arpl
sti
adc
addr16
outsb
andl
sarb
jge
jg
push
adc
std
aas
jg
sub
mov
popa
in
cwtl
out
enter
and
filds
mov
cmp
mov
pushf
pop
mov
xor
arpl
sysenter
sahf
or
pop
jmp
jbe
or
adc
mov
push
cwtl
fldt
stos
adc
fucom
fidivs
adc
fistl
push
lea
cmp
in
jae
dec
jne
fwait
mov
and
xor
popl
adc
scas
or
xlat
test
ljmp
mov
enter
and
jl
inc
xor
cmpsl
cmp
cmp
movsl
aad
es
icebp
gs
xor
mov
ljmp
push
jecxz
xchg
jl
cmp
mov
inc
mov
cld
jmp
inc
mov
ljmp
cmpsl
push
ljmp
inc
inc
loop
and
in
sbb
int3
es
jo
jne
outsb
dec
or
imul
adc
jmp
push
push
orl
push
decl
into
iret
sub
mov
xadd
jae
mov
xor
mov
mov
mov
lret
stos
mov
cmp
adc
arpl
push
push
add
mov
cmp
clc
mov
mov
hlt
dec
lcall
cmp
cmpsl
push
lcall
mov
jns
or
addr16
icebp
out
jbe
sahf
repz
push
xchg
cmp
stos
addr16
mov
cld
and
lcall
sarl
sub
fnsave
fdivrs
lods
iret
mov
mov
icebp
or
fisubrs
aad
add
xchg
xor
jne
mov
xchg
lea
stos
repz
das
mov
or
or
out
sbb
stos
adc
sub
mov
lock
shll
orl
ret
fwait
divl
mov
jge
sub
cmp
lds
dec
mov
sub
lods
inc
aam
pop
dec
push
icebp
movsb
add
xchg
xchg
pushf
cmp
cmp
pop
std
imul
jmp
push
sub
xor
in
icebp
push
and
out
jmp
rorb
sti
push
arpl
daa
jl
aam
lcall
cmc
repz
stc
xchg
fistpll
sbb
shr
inc
add
shrl
cmp
jg
push
inc
push
repz
cli
mov
inc
lahf
dec
adc
movsl
push
cs
ljmp
xor
pop
test
mov
cmp
fs
pushf
inc
movsl
or
bound
loop
mov
cmp
fucomi
loop
cmpsb
clc
mov
incl
mov
mov
xlat
sub
bound
aad
add
int3
int3
es
stos
andl
movsb
jo
pop
sub
jbe
add
clc
mov
test
pop
cmp
popa
ss
lds
out
push
lods
sbb
clc
andb
aas
jmp
out
jp
ror
dec
int
subb
ljmp
lods
outsl
aaa
mov
sti
ret
sub
mov
insb
pop
inc
clc
dec
or
addb
pop
andl
jo
push
test
xchg
stos
ljmp
mov
jb
jno
xor
lret
pop
mov
repz
jp
mov
aam
mov
bound
mov
dec
xchg
cltd
pusha
xor
js
lahf
mov
xchg
daa
scas
cmc
rolb
out
dec
inc
cmp
enter
xchg
mov
hlt
jo
sbb
psrlq
cmp
mov
add
rclb
pop
shlb
es
test
out
xchg
mov
xor
out
add
aaa
negl
xchg
add
inc
push
mov
ds
test
imul
int3
dec
in
scas
cld
cld
lret
xlat
sarl
imul
mov
cwtl
add
pop
roll
iret
jbe
mov
inc
xchg
scas
pop
mov
jo
cmc
add
repz
test
mov
mov
mov
aaa
popa
push
testl
mov
pushf
jns
out
stc
pop
push
xor
ja
xchg
pushf
dec
jmp
and
push
je
inc
out
mov
mov
xchg
movsl
add
sbb
lea
loope
jl
cmp
bound
pop
call
xor
xchg
cli
push
add
imul
push
fisubs
mov
jge
ss
sub
mov
or
sbb
fldcw
mov
pop
xchg
jge
pop
push
das
xor
inc
pop
scas
hlt
lret
sub
cmpsb
mov
mov
mov
sub
fs
test
xor
xchg
test
je
shr
jmp
pusha
xor
test
pop
mov
sbb
inc
std
jecxz
cmovne
ds
jle
lcall
inc
stos
rcll
lret
add
mov
adc
lea
or
ffreep
fbld
cmp
jno
fcoml
push
push
lcall
jge
data16
cltd
mul
cltd
push
jns
insb
pop
add
testl
or
sbb
rolb
sti
cltd
addb
orl
scas
cmp
shll
xchg
mov
lret
xor
andl
cld
mov
xchg
lcall
popf
and
inc
inc
xorb
push
pop
ja
imul
push
fwait
rol
push
call
xor
pop
cmp
or
aaa
std
mov
sbb
shll
loope
imulb
leave
or
dec
sbb
xorb
cmpsl
xchg
mov
fcmovnbe
insb
inc
inc
mov
push
jne
aam
mull
sahf
or
adc
imul
pop
adc
mov
inc
cmp
lret
movsb
insl
inc
decl
rclb
and
fisubs
cs
mov
jbe
sbb
inc
imul
shll
fdivs
mov
add
sar
push
fs
aad
jno
sbb
lahf
mov
mov
dec
dec
loopne
lods
pop
push
mov
pop
push
sbb
sub
sub
hlt
cwtl
daa
pop
and
cmp
ja
ljmp
imul
cli
cwtl
test
inc
daa
int3
xchg
imul
clc
lods
dec
aad
inc
push
shl
frstor
mov
lcall
loop
mov
xchg
gs
testl
dec
rorb
cmp
mov
out
add
cmpl
stos
into
outsb
pop
sbbb
enter
rorb
dec
lods
pop
inc
bnd
and
push
ds
or
or
aas
mov
loopne
pmuludq
jle
daa
and
cmp
lret
movsb
in
inc
scas
add
xchg
cmp
sbb
out
and
ds
fistpll
div
mov
jp
jge
addl
cmpsl
xorb
int
and
jo
mov
cmp
es
sahf
outsl
or
mov
das
add
sti
jg
xlat
cltd
lods
adc
mov
push
mov
pop
cmp
jge
inc
popa
mov
push
mov
adc
cmp
cltd
dec
dec
bound
shlb
or
movsl
mov
xor
sbb
out
in
push
sub
xchg
cmp
or
mov
jbe
xor
mov
jae
sub
stos
out
imul
jmp
push
sbb
cmp
mov
repz
cs
pop
movsb
in
es
cmp
push
jecxz
imul
cmp
leave
cwtl
xchg
adc
mov
in
mov
cmp
dec
stos
sbb
sub
cmpsl
xor
mov
test
pop
xchg
ja
stc
lock
out
cs
lds
out
dec
ja
sub
lock
and
decb
mov
mov
fcoml
xchg
fnsave
ja
in
pop
sbb
adc
push
daa
push
sahf
cmovle
pop
call
push
pushf
or
mov
xchg
mov
push
cmp
jnp
rcll
data16
outsb
stc
mov
mov
add
mov
pusha
aam
cmpsl
jnp
xor
popa
inc
push
fidivrl
outsb
mov
lahf
or
rclb
sbb
jg
sbb
jne
fisttpll
test
pop
xchg
iret
enter
or
cmp
sbb
cmp
sbb
mov
out
std
in
inc
sarb
and
sub
int3
sub
lds
mov
inc
add
stos
pop
leave
adcb
fwait
and
mov
push
test
and
out
adc
dec
pop
fsubl
lcall
jne
mov
mov
push
mov
popf
adc
xchg
mov
daa
arpl
mov
cmpsl
aas
push
das
inc
jbe
sbb
adc
mov
pop
push
outsb
dec
pop
shr
push
arpl
les
pop
jecxz
dec
mov
repz
xor
insb
pop
popa
or
xor
push
jno
xchg
adc
or
jp
andb
das
mov
add
cmp
mov
lods
cmp
mov
repz
cmp
mov
aaa
rclb
orb
mov
test
mov
cld
test
cmp
fdivr
out
jbe
cmc
outsb
addl
xchg
mov
loop
das
cli
dec
xchg
ja
jno
out
dec
dec
jo
jl
ljmp
ss
jl
jo
enter
push
xchg
leave
mov
fisttpll
add
mov
push
mov
cmp
mov
and
daa
or
push
mov
sbb
js
movsb
cmp
leave
jno
test
dec
sti
repnz
push
and
xor
aam
inc
ds
aaa
xchg
cmpsb
cmp
arpl
roll
push
fsub
xchg
orl
in
mov
cmp
or
pop
divb
stos
sub
push
stos
cmpsl
movsl
jge
inc
xlat
ds
mov
ss
push
push
xor
jnp
dec
inc
in
sarb
push
and
aaa
pop
mov
fisubl
xorl
std
mov
lea
push
mov
inc
pusha
push
mov
fdiv
testb
xor
stos
or
scas
les
inc
lods
mov
mov
in
mov
mov
int3
and
mov
ljmp
std
pop
adcb
jmp
ret
rolb
cli
notl
sub
mov
jl
icebp
push
scas
adc
xchg
out
push
sti
jp
fstl
lea
mov
jmp
push
cld
inc
arpl
ja
add
pop
cmp
sbb
pop
cmp
int
mov
xlat
push
stos
aad
divb
das
aaa
adc
inc
adc
not
xchg
dec
fsts
cmpsl
ret
idivb
out
mov
sbb
pop
test
mov
ja
pop
pop
xorl
xchg
je
pop
mov
sbb
jnp
inc
sub
enter
mov
aam
test
out
pop
call
adc
push
add
into
mov
dec
es
int3
imul
aaa
or
inc
add
out
clc
pusha
fbld
adc
cmpsb
mov
lods
cmp
jno
rorb
mov
inc
stos
inc
daa
rcrb
jae
jae
xchg
mov
jle
pop
movsb
inc
fs
fs
mov
xorb
imul
les
sub
nop
inc
cltd
add
or
shr
and
fisubrl
das
stos
push
xor
dec
lahf
jle
inc
aam
stc
fucomp
adc
xorl
pop
sub
mov
jnp
lock
ret
ret
jge
scas
data16
lret
add
aam
add
lods
sbb
mov
das
or
sub
pop
push
js
pop
popa
xor
xchg
pop
jo
int
sbb
adcl
sub
cmp
adcb
mov
jl
ret
xor
shlb
and
xchg
mov
in
or
ds
mov
daa
rcr
lret
xchg
pushf
push
adc
paddb
dec
dec
pop
sbb
clc
jecxz
cld
mov
inc
iret
das
movsl
jo
out
xor
push
jb
pop
mov
insb
jge
jo
add
lahf
cmc
test
jecxz
out
fdivrl
sub
rol
imul
xlat
inc
hlt
loop
imul
cmp
mov
jg
cmp
sub
pop
ljmp
sti
std
daa
xchg
and
sbb
inc
push
adc
sbbl
clc
mov
mov
dec
and
mov
lods
popf
xor
push
inc
mov
stc
jnp
adc
repz
inc
lret
adc
push
push
std
cmpl
jge
lcall
mov
xchg
bound
icebp
nop
outsb
into
mov
stos
movsb
das
fwait
lcall
es
movsl
add
sbb
xchg
dec
or
mov
ret
out
and
call
jp
sahf
cmp
mov
xor
lret
mov
or
or
stc
add
inc
mov
in
test
sub
push
in
mov
add
imul
pop
xor
in
xor
or
or
ds
xorb
daa
inc
adc
cltd
scas
js
aaa
lea
data16
and
dec
cmp
stos
jmp
sbb
and
mov
mov
aam
jp
jne
xchg
in
aam
push
data16
and
xchg
fistl
xchg
mov
out
cmpsl
sbb
js
cli
xchg
lahf
or
jp
push
jae
outsl
pop
add
aas
sbb
jns
add
les
pop
push
mov
enter
imul
add
sti
scas
in
inc
por
inc
sub
mov
int3
jns
push
outsl
imul
xor
loop
and
add
mov
loop
adc
jb
sub
fisttps
or
push
or
or
ljmp
pop
imul
jle
es
adc
cmp
mov
add
adc
mov
sbb
push
xlat
fwait
adc
or
cwtl
xor
mov
test
rcrl
xor
push
aam
aas
mov
aam
in
or
inc
pop
ja
in
lahf
adc
jnp
or
in
outsb
out
inc
jne
sub
mov
in
and
fnstcw
movsl
push
pop
daa
xorb
fs
ja
addr16
arpl
test
mov
call
push
aaa
sbb
xor
mov
rcll
dec
jp
dec
sarb
add
mov
sub
cmc
aaa
or
cmc
cmp
aaa
in
aad
pop
cli
fisubs
dec
or
loop
arpl
cmpsl
xchg
std
fistps
adc
cwtl
dec
pmaddwd
push
in
mov
fcomps
inc
lea
inc
popl
xor
imul
pop
xchg
cmc
inc
xor
aaa
sbb
gs
pop
fwait
repz
sbb
push
mov
mov
dec
mov
stos
ret
data16
mov
stos
cmp
cmp
cmp
pusha
stos
sub
inc
cmp
je
sti
fsubl
and
dec
pop
add
test
xchg
xor
fnstsw
loopne
jno
fisubs
or
les
add
cmp
gs
mov
pop
xorb
gs
decb
enter
nop
mov
xchg
fmull
cld
test
es
jmp
mov
mov
mov
push
mov
sub
mov
js
test
fiaddl
loope
in
or
jne
mov
sbb
popl
jg
fwait
cmpsb
and
or
mov
push
in
xor
leave
stc
test
mov
negl
testl
xor
sbb
add
out
cmp
lock
pop
js
xorl
sub
call
and
cmpsb
sub
mov
pop
push
mov
dec
sbb
push
cmp
rorl
sbb
imul
mov
jmp
mov
in
and
inc
and
je
lea
and
and
sbb
xorb
dec
dec
dec
adc
fnstcw
es
lret
sbb
xchg
dec
cld
xchg
inc
cmpsb
es
jge
push
mov
adc
data16
dec
lcall
stos
xchg
in
xchg
popa
pop
jmp
lods
cmp
mov
mov
jmp
ljmp
sar
mov
mov
sbb
or
adc
dec
push
sbb
das
push
push
addl
sub
enter
mov
jae,pn
out
add
push
pop
adc
push
sub
cs
fidivrl
mov
mov
fs
xor
and
test
push
clc
stos
lahf
inc
xchg
cmp
out
jmp
enter
add
or
or
fisttpll
scas
inc
shl
jae
mov
shr
aad
fcoms
or
movsb
loope
add
popf
aas
mov
cli
push
test
ja
dec
xchg
lods
or
incl
imul
mov
mov
je
mov
out
outsb
adc
sbb
loope
lea
stc
mov
pop
rorb
cld
fdivs
xchg
das
dec
addr16
dec
pop
in
jne
out
jns
inc
xlat
inc
stos
pop
xor
leave
lahf
push
sub
sub
cmp
jbe
loop
insb
aad
test
sti
popf
stos
in
push
scas
cmp
sbb
fcoms
jp
and
mov
sub
insl
sbb
shll
fxtract
xor
push
mov
ljmp
ja
sub
int3
fwait
jecxz
leave
lock
mov
mov
orl
mov
fwait
rcrl
shrl
imul
sub
leave
xchg
test
xchg
lahf
xor
cwtl
mov
mov
imul
adc
dec
ja
sbb
and
mov
fcomip
jae
test
cmpsb
loopne
test
test
loopne
mov
cmovnp
sub
loop
ds
push
xchg
vpaddq
inc
orb
cltd
cmpl
int
pop
jbe
fists
cmc
or
enter
and
mov
lahf
jae
inc
jno
popa
lods
cmp
clc
out
addr16
orb
sbb
enterw
xchg
loope
cmpsl
adc
and
ret
mov
jbe
es
mov
stos
js
pushf
dec
loopne
es
mov
stc
rcl
add
fidivrs
adc
and
stos
les
fiaddl
add
mov
add
push
insb
cmc
pop
sbb
lea
repz
cltd
inc
test
sub
bound
xchg
mov
jge
fstpt
sbb
movsb
cmc
out
dec
int
push
pop
xchg
add
in
mov
test
mov
lret
jnp
mov
outsb
adc
gs
pop
sub
in
inc
lret
jmp
push
cmp
dec
jnp
mov
gs
xchg
push
dec
xor
out
nop
xor
enter
sub
adc
inc
cmpsb
dec
cld
fwait
scas
in
adc
jle
or
push
stc
sahf
loopne
jno
mov
imul
icebp
cmp
push
dec
jg
push
test
adc
xchg
adc
adc
push
pushfw
add
jb
sbb
adc
push
in
jg
test
sub
jmp
adc
xchg
pop
int
or
mov
mov
mov
cmp
mov
fs
js
dec
add
daa
cmpsl
scas
and
cmpsb
xor
inc
sti
cli
insb
nop
cmp
xchg
ret
in
in
pop
sub
mov
js
subb
std
mov
dec
lock
shrb
xchg
xor
xchg
in
mov
and
jno
fsub
mov
jnp
mov
sbb
jae
mov
in
push
movsb
adc
arpl
jae
jmp
xchg
or
jle
xchg
popf
sahf
shll
test
das
inc
adc
in
push
mov
inc
rol
jne
outsl
push
xor
add
testb
or
mov
in
jmp
pop
adc
cmp
sub
rorb
stos
je
std
jp
add
pop
xor
mov
xchg
mov
dec
stos
rorb
jns
loopne
jnp
pop
adc
mov
sub
mov
cmp
ret
push
mov
imul
sbb
sarb
or
mov
or
inc
dec
cmpsl
inc
adc
bound
mov
je
and
xor
cwtl
popf
sub
sbb
dec
add
add
cmp
outsl
push
jb
xor
push
inc
sub
pushl
shlb
or
repnz
ret
cmp
call
jo
sbb
dec
mov
fnstsw
mov
jnp
sub
lock
shll
out
rcrb
adc
xchg
mov
sbb
test
das
sub
orl
or
aam
xor
sub
fcoms
push
stc
ret
sub
jno
popf
adc
iret
mov
jg
loop
or
imul
mov
mov
leave
sbb
insl
mov
mov
add
cltd
mov
pop
mov
insl
in
loope
xor
outsl
jp
cld
lret
sarb
jnp
push
mov
add
jnp
mov
mov
jle
sbb
into
insl
pop
popa
xchg
push
xor
scas
movsl
jecxz
rolb
movsw
jecxz
inc
std
mov
pop
or
popf
popa
mov
dec
test
mov
orb
cmp
mov
gs
mov
pushf
pop
ret
xlat
sbb
mov
sub
ljmp
cmc
or
sbb
in
js
int3
adc
fs
daa
xor
fstps
fbstp
sti
sub
pop
enter
je
icebp
cmp
cmpsl
ret
test
and
mov
ret
adc
jg
xchg
xchg
xor
cmpsb
dec
cmp
jle
xor
test
pop
prefetch
jg
adcb
negl
push
movsb
sar
pop
jge
xor
jnp
lret
jb
mov
pop
xlat
das
filds
mov
inc
cmp
sti
addr16
clc
sub
ja
in
and
xchg
dec
mov
add
sub
jmp
sub
dec
test
cmp
push
test
cmp
clc
xchg
and
adc
stos
xchg
out
mov
daa
das
inc
add
jbe
adc
jnp
cmp
mov
xlat
pusha
arpl
clc
sbb
dec
and
jecxz
subb
xchg
orl
mov
rcrl
js
sub
daa
in
sub
mov
jmp
dec
ds
mov
es
addb
adc
dec
cmpsb
cmp
dec
mov
jnp
sbbl
mov
scas
mov
jge
fldcw
dec
push
add
aad
push
or
ljmp
push
jo
loopne
lahf
std
xchg
test
and
das
repz
popa
pop
inc
in
push
sub
sti
imul
or
fidivl
sub
inc
xor
shll
es
add
mov
jnp
pushf
in
or
leave
shr
sets
inc
or
rcr
mov
mov
push
mov
mov
or
mov
lret
lahf
mov
xchg
dec
inc
mov
push
mov
xchg
xchg
ljmpw
lret
mov
std
in
lods
fsubl
mov
inc
xchg
int3
xor
addb
xchg
sbb
jl
xor
mov
xor
dec
mov
bswap
insb
pop
mov
push
mov
mov
xor
imul
pop
xchg
mov
gs
aam
inc
and
fmulp
adc
mov
fstps
dec
pusha
and
hlt
popl
aas
ror
std
pop
cmp
stc
es
std
mov
testl
sub
insl
popa
inc
mov
mov
test
nop
shr
mov
int
lcall
call
in
ficomps
outsb
and
adc
ds
mov
lods
xchg
pop
fildl
or
icebp
daa
push
add
jmp
sahf
jae
loopne
xchg
jns
aaa
mov
push
inc
loopne
cmp
lret
pop
cltd
adc
mull
scas
bound
adc
inc
ret
jnp
xchg
jg
pop
jg
ljmp
push
pop
leave
xchg
movsb
rcr
cltd
ss
xlat
rcrl
js
jnp
faddp
into
into
test
xchg
jg
mov
cmp
and
jbe
lahf
and
mov
outsb
or
dec
add
adc
lcall
punpckhdq
imul
sbb
add
test
pushf
sub
call
dec
sbb
sub
xchg
jl
dec
jo
pop
lods
arpl
mov
xchg
inc
xor
and
and
push
sbb
xor
hlt
sti
mov
mov
sahf
or
imul
lds
jge
xor
jg
jl
mov
inc
pop
mov
repnz
mov
out
pop
in
sub
lods
xor
inc
insb
cmp
outsb
sbb
adc
mov
inc
dec
scas
repnz
dec
mov
dec
pop
fcomps
pop
add
inc
jo
mov
jp
and
hlt
popa
xor
mov
repnz
adc
jl
mov
sahf
sub
xchg
mov
inc
aam
xor
jl
js
sahf
xor
repz
addr16
sbb
mov
and
and
add
xlat
ret
jl
jmp
orl
lcall
or
mov
mov
fcoms
ss
outsb
inc
sarl
cmp
push
sahf
inc
pop
cli
test
outsb
mov
cmpb
xor
leave
push
jae
or
out
dec
and
aam
and
mov
pop
fiadds
mov
mov
xchg
fstl
pusha
jge
dec
data16
cmp
inc
jmp
insb
std
jno
push
sub
dec
enter
jae
sub
pop
sub
or
pop
ret
dec
sbb
add
outsb
xor
fbstp
data16
test
mov
inc
mov
ljmp
xchg
rclb
sub
inc
and
aad
and
stos
ja
insl
dec
inc
iret
inc
xchg
cmp
out
mov
or
xor
cmpsb
lret
push
xchg
addb
sub
adc
adcb
in
clc
mov
movsb
test
call
stos
inc
or
or
push
and
dec
or
iret
stos
adc
sbb
xchg
leave
cmp
sub
xchg
test
in
lods
cld
into
cmp
dec
mov
mov
jecxz
fldt
ret
jge
cmp
push
cmp
insb
or
sti
adc
popf
mov
inc
cli
fildll
call
cmpsb
sub
push
add
cmp
loope
xor
cmp
dec
jp
xchg
push
add
jl
jmp
inc
pop
in
ja
mov
outsl
xchg
adc
std
popa
std
jo
sbb
leave
sub
mov
mov
in
adc
mov
xchg
ret
fidivrs
push
daa
fimuls
in
or
dec
xchg
dec
gs
push
add
pop
push
xchg
inc
loopne
jecxz
out
push
in
out
mov
in
int3
sbb
or
push
jle
popf
std
je
xchg
pop
or
lret
rcrb
stc
ja
and
bound
cmp
insl
adc
push
insb
pop
rorl
movsb
mov
and
xor
xchg
dec
pop
js
mov
stos
inc
repz
or
fisttpll
shl
lcall
imul
pop
push
mull
leave
gs
jmp
push
push
call
cmp
lods
lret
push
adc
gs
xor
je
les
xor
pop
and
and
or
mov
push
pop
ljmp
mov
addr16
cli
xchg
jb
test
jno
mov
jbe
lret
out
push
dec
ret
adc
aaa
and
in
xor
add
fbstp
les
icebp
ffree
test
fwait
jge
imul
xchg
ret
push
lahf
sti
inc
cli
dec
add
ja
outsb
call
inc
ret
dec
inc
xchg
out
das
into
ud0
arpl
jno
jl
sub
and
xchg
mov
sarb
out
push
and
and
sahf
jl
mov
add
fdiv
adc
or
js
jne
jne
aad
into
nop
cwtl
mov
inc
xchg
out
fnsave
pop
lret
repz
enter
loope
aad
sub
jnp
popa
es
xor
popf
notl
inc
lea
popa
sbb
hlt
cltd
test
and
repz
xchg
pop
jmp
sahf
jae
ljmp
scas
iret
addr16
sbb
enter
test
xor
mov
push
push
pop
cmp
bound
push
cli
xor
ja
fists
pop
push
cli
sahf
push
insl
mov
mov
ret
push
mov
out
pop
jae,pt
fs
jp
dec
int3
pop
mov
dec
cmp
cmpsl
ret
cmp
push
inc
daa
dec
mov
cmp
loop
pop
mov
mov
test
inc
stos
out
movsb
cli
mov
stos
mov
rol
test
sub
add
mov
mov
add
mov
xor
fisubl
mov
lret
push
adc
js
mov
cmpsb
pop
cmp
pop
rcll
cmp
cmpsl
sub
mov
repz
fmull
sbb
xor
add
cmpsb
outsl
fwait
xchg
mov
outsl
cmp
sub
leave
or
cld
out
jae
xchg
or
xor
and
jle
cmp
sbb
call
iret
je
dec
into
push
cmp
xchg
add
jns
sub
mov
mov
gs
mov
ret
js
aaa
sub
repz
jns
imul
jge
iret
aam
je
aad
jns
xchg
ffreep
push
pushf
sbb
mov
add
ret
nop
sahf
sbb
in
add
mov
and
dec
mov
aad
ljmp
in
in
jns
loope
popa
or
enter
jecxz
push
shl
jno
mov
mov
cmp
inc
push
sbb
push
xor
xchg
std
xchg
insl
movsb
xlat
fwait
lods
adc
xor
adcl
pop
add
clc
cmp
push
mov
mulb
es
adc
mov
imul
hlt
jecxz
imul
pop
insb
adc
push
sti
push
pop
dec
aaa
mov
adc
fsub
and
mov
pop
dec
jnp
pop
arpl
xchg
rcrl
ror
stos
jns
xchg
xchg
shlb
outsb
jle
outsl
xchg
std
loopne
jb
addb
mov
inc
or
or
jb
mov
jae
push
or
imul
lcall
aaa
les
jmp
in
imul
movsl
int3
jecxz
movsl
scas
jns
cmp
and
aaa
push
sbbb
jne
test
pcmpeqb
sbb
lret
sbb
adc
pop
inc
inc
loop
pop
outsb
and
mov
cli
ss
out
loop
test
stos
flds
xchg
push
arpl
xchg
mov
jp
cltd
xor
dec
rorb
fnsave
fldenv
je
xchg
push
insb
xor
mov
inc
or
xor
cltd
test
movsl
mov
sbb
xchg
xchg
push
add
fiadds
or
pop
out
add
sub
xchg
mov
data16
pop
arpl
loopne
fs
lret
mov
imul
jp
inc
lea
jle
inc
and
iret
mov
xchg
cmp
lret
xor
jecxz
loop
test
xchg
dec
cmp
add
sti
rorb
push
jp
fwait
pop
xor
shll
stc
add
xor
fs
hlt
mov
lea
loop
jge
loopne
inc
in
andl
adc
insb
xor
je
sub
mov
rcll
jns
adc
lcall
loop
es
cmp
jb
sahf
stc
int
nop
in
pop
push
inc
jl
push
push
adc
lods
shrb
loopne
mov
dec
fcmovne
jns
xchg
inc
daa
lcall
dec
js
cli
pop
push
iret
inc
lea
sub
js
js
jne
adc
cmp
push
ficoml
mov
mov
fdivrp
or
imul
pop
or
dec
shlb
outsb
mov
je
das
rorl
add
mov
ds
xchg
push
adc
push
ror
lods
cmp
pop
js
ds
fcomps
sub
pushf
mov
push
push
imul
fdivrl
clc
gs
mov
cmpsl
sub
xchg
je
lcall
xchg
lret
ret
ret
icebp
adc
cli
cld
dec
cs
insb
shrl
cmpsl
lahf
xchg
fldenv
inc
adc
cmc
add
mov
out
iret
gs
or
enter
notb
pop
out
push
mov
sub
pushf
outsb
fimuls
movsl
adc
and
mov
cli
cmp
jecxz
lods
mov
arpl
insl
adc
mov
dec
pop
bound
aad
pop
xor
inc
sbb
add
out
mov
out
inc
std
aas
outsl
std
fisttpl
sbb
stc
mov
andl
pop
xorl
xor
ss
or
jbe
mov
fmull
shr
in
sahf
and
andb
pusha
mov
sbb
subl
mov
cltd
add
add
lods
mov
xchg
lahf
jecxz
jge
in
scas
psrld
cmp
cs
or
xchg
gs
and
call
shll
dec
and
aad
cwtl
mov
pop
mov
inc
sbb
xchg
rolb
xor
ret
pusha
das
push
xchg
or
adc
fbld
xchg
dec
out
pop
decb
mov
push
sbb
dec
jns
insb
pusha
mov
xchg
gs
pop
imul
mov
xchg
lret
rclb
ret
out
jns
and
imul
repz
in
jmp
sub
in
lods
scas
jmp
xor
jecxz
test
insb
in
les
push
xchg
jns
xchg
out
imulb
add
xor
or
inc
ljmp
fcompl
mov
mov
xchg
or
cmp
test
aam
cwtl
lds
es
inc
xor
movsl
xor
shlb
lret
mov
jo
mov
outsb
cmp
dec
rolb
scas
insl
push
stos
lret
dec
inc
pop
mov
ja
jnp
sub
je
mov
imul
adc
adc
jbe
out
sub
sbbl
cltd
xchg
orl
xchg
and
jle
sub
jnp
test
out
add
fistpl
mov
orl
or
scas
xchg
mov
mov
pop
repz
out
inc
fs
fisubs
das
mov
xor
dec
loop
xchg
repz
cs
xchg
out
repnz
aam
push
xchg
inc
mov
es
dec
mul
into
ret
add
cld
movsbl
sub
iret
test
aaa
xchg
cmp
or
mov
xchg
hlt
int
push
inc
into
push
imul
push
imul
cmp
jge
jne
lea
jge
aas
imul
aas
std
bound
out
mov
cmc
lahf
test
jl
pop
jg
sbb
inc
fimull
push
add
xchg
inc
fistpl
sbb
rcll
lret
adc
pusha
add
or
jg
int
out
loope
and
stc
cmpsb
imul
lds
xchg
inc
push
pop
std
inc
add
push
in
and
flds
cs
cmc
adc
jmp
hlt
call
bound
pop
pop
fstl
or
sti
pop
into
fldl
lock
push
push
les
and
ret
test
gs
test
sub
mov
add
lock
dec
adc
ds
sysexit
out
adc
enter
cmpsl
cmpsb
cmpl
jmp
lods
dec
push
push
fstpl
cmpb
sbb
cmp
mov
dec
ret
push
into
shrl
add
sbb
adc
cwtl
out
sbb
xchg
jnp
push
cmpsl
sbb
adc
jae
xlat
repz
ret
or
pushf
mov
je
jns
mov
ret
mov
lret
xor
shll
jne
call
push
mov
mov
js
int3
inc
test
sbb
or
jns
leave
imul
dec
in
test
push
pusha
jns
mov
adc
std
mov
push
sub
mov
jbe
stos
inc
adc
loop
push
sbb
sbb
mov
inc
or
daa
push
cwtl
enter
iret
push
push
xor
div
add
mov
mov
pushf
popf
lret
cli
pop
cmpsb
je
xchg
lock
push
mov
cmpsl
lret
sbb
pop
sbb
sub
in
mov
gs
pop
loope
cmpsl
mov
leave
pop
xor
cmpl
mov
leave
mov
push
adc
xor
rorl
inc
adc
xor
pop
push
mov
leave
fdivrl
rol
outsl
in
mov
test
pop
hlt
sub
ja
jl
push
je
lret
daa
sbb
adc
xchg
add
les
mov
clc
jo
dec
push
or
push
int3
jmp
fs
sbb
fs
cmpsb
sub
scas
addl
jle
subb
lahf
cmp
dec
cmp
fistl
ds
in
fs
bound
jl
das
ret
call
not
je
ret
cwtl
mov
add
jp
fsubl
decl
loope
int
mov
mov
xchg
mov
ds
pop
sti
xchg
mov
dec
or
mov
xor
fildl
dec
pop
xchg
ret
mov
test
outsl
pop
xchg
pop
int
jbe
mov
mov
jbe
adc
push
sub
push
shrl
scas
test
out
sahf
sub
loop
pop
or
pop
xor
inc
push
mov
leave
add
das
mov
das
inc
sbb
out
add
dec
mov
popf
repnz
rorl
or
shll
ljmp
pop
in
and
push
ja
sub
dec
shrl
sbb
mov
lods
mov
and
dec
lcall
pop
int
jnp
push
cwtl
leave
and
dec
mov
cmp
inc
sarb
test
cmc
mov
jae
or
push
dec
mov
aad
push
fmuls
sbb
push
int3
scas
mov
aad
push
repz
subl
in
sub
cmc
flds
in
add
mov
popf
stc
loopne
int3
insl
scas
sbb
dec
lods
cltd
in
movsl
popf
dec
fbld
cmp
sub
mov
jnp
lret
sbb
and
xchg
cmp
outsl
jl
ljmp
fbld
dec
xchg
cmpsl
ljmp
lea
leave
mov
mov
mov
outsb
mov
mov
dec
roll
pop
mov
mov
cmp
dec
and
mov
aaa
mov
push
pop
xchg
cmp
int3
mov
pop
jle
les
lcall
outsb
mov
add
mov
push
push
das
call
orl
cmc
pinsrw
inc
jmp
jecxz
jns
pop
xchg
xchg
imul
xchg
mov
mov
stos
jmp
push
push
jg
pop
mov
inc
rcrb
adc
sbb
or
jne
jb
rdmsr
sti
into
fadds
sahf
in
ss
mov
jae
cmp
add
lods
cmpsl
lea
jns
dec
push
out
mov
cmp
pusha
andl
xchg
lods
sub
lret
xchg
pop
fcmove
adc
mov
scas
leave
aam
add
jle
jl
pop
imul
out
mov
test
mov
mov
add
mov
push
xor
cwtl
sbb
test
and
mov
inc
or
sub
stos
repnz
hlt
hlt
cwtl
jnp
mov
add
mov
add
cmp
fwait
outsl
push
jb
mov
mov
dec
sbb
in
mov
stos
pushf
cmp
and
inc
push
loop
icebp
fists
adc
mov
adc
dec
ja
mov
cmpsb
mov
repz
mulb
fs
scas
dec
or
or
out
loopne
mov
out
jo
sahf
into
push
mov
inc
mov
sbb
pop
pop
adc
les
lahf
or
lcall
inc
in
mov
adc
int
fldl
orl
mov
pop
cmpsl
or
xor
loop
push
add
xchg
inc
xchg
mov
inc
ja
daa
inc
das
adcl
or
xor
sub
or
cltd
pop
xchg
sub
fcomp
aad
add
add
push
ss
mov
mov
or
js
cmc
rorl
pop
std
js
dec
addr16
pop
cmp
outsl
sahf
mov
jecxz
and
cmpsb
daa
xchg
sbb
cli
xchg
jbe
repz
loop
dec
dec
in
lret
test
aaa
mov
mov
adc
mov
adc
loop
push
fists
cmp
lods
mov
inc
inc
mov
cmp
pop
mov
inc
ret
pop
jle
inc
push
dec
sub
cmp
test
push
fcompl
icebp
pop
adc
out
and
pop
fistpll
cmovne
insb
in
adc
in
xor
sti
arpl
repnz
push
lcall
pop
stc
cmp
add
aam
xchg
dec
add
iret
addl
in
sbb
and
and
push
xor
stos
xorb
jle
stos
mov
das
sub
ret
sbb
pusha
jge
hlt
pusha
push
ja
jae
ret
xchg
in
hlt
into
imul
add
stc
xchg
imul
adc
shlb
and
ret
jl
push
repnz
fdivs
outsb
mov
jle
jl
dec
mov
cmpsl
sub
sti
or
dec
adc
fs
sbb
fidivs
lds
lods
sub
pop
into
sbb
sub
test
fldt
fwait
mov
test
mov
sub
xor
aad
sti
es
test
pushf
fucomp
arpl
adc
push
inc
out
mov
inc
mov
jl
fdivs
adcl
pop
mov
sahf
pop
addr16
fwait
pop
fistl
mov
xchg
push
fucomp
jg
mov
decb
sub
stos
int
xchg
shlb
inc
pop
cmp
ret
pop
push
int3
iret
in
lret
adc
stos
mov
inc
loopne
pop
xchg
nop
inc
sbb
in
xor
add
pop
jge
pop
notl
mov
ja
xchg
ret
xorl
scas
ficoms
dec
jg
ret
xor
outsb
neg
mov
sub
rcrb
gs
push
pop
fnstcw
mov
aaa
bnd
ficoms
jbe
and
or
mov
jg
xchg
mov
inc
popa
mov
mov
lds
mov
lods
push
ss
or
push
mov
aas
not
add
push
mov
cwtl
and
cmovb
or
daa
adc
jge
push
xchg
movsl
xchg
xorb
lds
loopne
sub
loope
std
pop
or
push
mov
jae
sti
sub
mov
jne
mov
fwait
sub
xor
adc
fwait
or
xchg
or
xchg
jne
and
das
mov
mov
jl
repz
outsb
pop
int3
lods
mov
int
das
repz
or
decl
push
xlat
mov
leave
adc
mov
loopne
insl
push
cmp
fdivs
fldt
lods
jmp
push
bound
pop
cmp
mov
divb
push
repz
dec
jb
add
call
mov
mov
and
in
dec
in
mov
and
hlt
dec
lds
xchg
xor
ficomps
cmp
xor
lock
jp
fstp
or
fdivp
aam
adc
xchg
jmp
pop
insb
inc
mov
out
insb
adc
cmp
nop
mov
mov
addb
add
pushf
sbb
mov
movlps
mov
sbb
sbb
mov
lea
mov
push
push
inc
test
or
xor
or
lods
je
mov
mov
pop
inc
popf
pop
arpl
sbb
adc
mov
call
sub
dec
sti
pop
push
lahf
inc
negb
mov
enter
pop
xchg
sahf
dec
jg
jge
sar
movsl
sub
jns
xchg
flds
test
pop
test
pop
lahf
cmp
lret
and
lock
cmp
out
cmp
pusha
push
das
loopne
cmpsb
sbb
aam
fiaddl
mov
add
xchg
gs
test
sbb
jae
in
sbbb
js
cmpsl
sbb
adc
mov
dec
pop
fcmovne
cmp
xor
and
cmpb
rcl
pop
negl
imul
jne
cmp
inc
adc
mov
cli
and
dec
cmc
mov
sbb
inc
out
lods
xor
cld
imul
cmc
cmp
outsb
jge
pop
imul
jle
dec
mov
test
bnd
leave
add
inc
sbb
add
and
outsl
loope
test
leave
mulb
test
jp
push
sub
ss
subb
por
sub
adc
std
sub
mov
out
jmp
jae
int
pop
mov
stos
mov
cmpsl
dec
dec
outsl
loope
int3
clc
add
or
pusha
popf
leave
icebp
repnz
cmp
hlt
push
out
cmp
ret
push
push
imul
jne
adc
or
shlb
mov
xchg
loope
cmpsb
ja
popa
sbb
xor
aam
xchg
callw
ja
xor
mov
dec
jae
testl
cmp
add
jns
inc
inc
mov
or
in
xchg
fldl
dec
jns
pop
or
lret
and
dec
xchg
in
push
into
xchg
xor
push
add
popa
xchg
and
xchg
bnd
push
ljmp
pop
int
sub
shll
subb
stos
and
xor
les
cmp
or
scas
mov
cmp
pop
cmp
dec
push
sahf
push
jg
pop
mov
shrl
xor
adc
test
pop
cld
xor
xor
fiadds
sbb
fdivrs
fcompl
movsl
js
jnp
jecxz
test
imul
test
das
push
push
adc
aaa
pop
jle
out
sub
mov
sub
loopne
jp
push
jno
fs
icebp
sub
addr16
sub
dec
cmp
push
jo
push
inc
and
adc
in
and
frstor
jno
inc
jnp
push
or
add
cmp
push
addr16
fwait
shr
outsl
pop
lds
mov
test
sub
call
sub
sub
stc
mov
cmp
pop
test
jecxz
pushf
push
ljmp
jecxz
dec
xor
sbb
cmpsl
or
lock
hlt
negl
jno
js
push
pusha
cmpb
popf
call
pop
cltd
jge
inc
xchg
mov
adcl
push
ret
pop
cwtl
mov
push
enter
lock
jne
rol
and
insl
xchg
adc
jp
lret
int
jmp
inc
and
gs
xchg
jbe
jle
js
outsl
or
shr
lret
jno
sbb
insl
scas
imul
lret
xchg
int
jo
ret
mov
xchg
ljmp
inc
push
jns
cmpsb
iret
inc
mov
cmp
mov
aas
cld
lcall
movsb
mov
sbb
test
dec
inc
stos
push
nopl
cmpb
fcmove
add
dec
in
ficoml
popa
ljmp
loop
mov
jae
sbb
cmp
and
pop
nop
xchg
add
insl
test
mov
sbb
jo
push
leave
clc
nop
dec
inc
fildll
add
mov
cs
insb
popa
outsb
mov
outsb
es
hlt
mov
jmp
fistpl
jb
int3
rorb
inc
push
leave
cmpsl
in
push
mov
mov
iret
rorb
sbb
dec
aaa
orb
clc
cmpsb
out
inc
mov
aam
jnp
and
push
dec
mov
mov
inc
outsl
rorb
inc
push
pop
icebp
sti
mov
adc
test
mov
shll
arpl
fcomps
sti
decb
sub
rcll
push
out
js
inc
cmp
loopne
adc
fsubp
pop
sub
vmread
xchg
into
push
rcr
iret
addl
pop
or
mov
ret
push
ror
sbb
push
xchg
les
sub
loopne
xchg
xor
int3
aam
cmp
repnz
std
push
clc
push
out
cmp
repnz
adc
or
fimull
jle
cmp
xchg
and
push
jg
loopne
sub
mov
mov
pop
fadd
andl
popa
xchg
jo
jl
sahf
lock
ret
cli
mov
in
and
mov
pop
popf
loop
mov
loope
mov
scas
bound
and
dec
faddl
push
xchg
push
sub
xchg
mov
push
lods
mov
xchg
fwait
and
xchg
dec
mov
sub
pop
mov
pushf
xchg
dec
test
cmp
adc
scas
jg
mov
out
mov
jbe
pop
jp
into
in
outsl
inc
mov
adc
loop
pop
xchg
add
xor
stos
mov
cmp
cmpsl
stos
mov
cli
into
clc
mov
pop
xchg
sarb
iret
pop
aad
add
push
add
mov
shl
stos
test
loopne
push
mov
adc
dec
and
stc
mov
inc
mov
sbb
dec
xchg
and
lahf
fidivs
arpl
sub
push
jg
and
xor
inc
inc
rorw
xchg
push
jb
sbb
rorb
and
int3
mov
scas
sbb
adc
mov
mov
xchg
out
xchg
mov
add
or
cmp
mov
add
push
adc
popa
loop
cmp
stos
cmp
jo
ror
adc
push
negb
xchg
inc
out
sahf
pusha
mov
mov
iret
rcr
jno
incl
mov
jo
or
fisubs
or
sub
int3
jnp
pop
mov
cmp
pop
fnsave
jno
or
adc
or
repnz
clc
in
fbstp
xor
mov
call
cmc
adc
adc
mov
adc
push
adc
fiadds
xor
xchg
lret
int
xor
jno
mov
jg
inc
call
test
xchg
sti
aas
out
and
int3
cli
or
mov
gs
push
pop
outsb
jecxz
cmp
cmp
lret
sub
xchg
inc
mov
adc
std
stc
jecxz
lock
xchg
pop
and
popa
enter
adc
iret
xor
mov
push
stc
aad
repz
and
adc
add
mov
hlt
cltd
push
cmp
push
fwait
ljmp
mov
test
pop
jbe,pt
setge
add
jo
pop
inc
mov
or
xchg
testb
je,pn
jle
push
jg
mov
inc
adc
xchg
aaa
pop
pop
in
pop
pop
or
mov
es
or
xchg
sarl
push
push
fistpl
test
mov
icebp
xchg
ds
sbb
fdivrl
int
sbb
iret
fisubs
out
pop
daa
out
cmpl
pop
pop
pusha
incl
idivl
rcr
jb
xchg
fstpt
jbe
js
jae
sub
dec
and
lahf
ret
daa
ficoml
cmp
int
dec
in
inc
add
stos
sub
pop
mov
lcall
pop
enter
lods
push
jnp
hlt
mov
insb
rcrb
and
enter
sub
pop
xlat
inc
mov
js
repz
inc
or
loope
cmpl
jb
sbb
imul
mov
cmpsb
call
push
sarl
push
mov
lods
repnz
int
incb
rcrb
mov
roll
inc
fwait
jne
xchg
sub
int3
inc
inc
cmc
mov
sti
ja
xlat
push
cwtl
fwait
sub
scas
sub
mov
das
fldcw
xchg
or
lret
cmp
cld
test
or
add
mov
test
or
cld
imul
loopne
out
xchg
jo
xchg
pop
xchg
pop
cwtl
push
cmpl
adc
or
jl
push
jg
ljmpw
xor
out
pushf
lahf
into
stos
mov
movsl
inc
fs
or
scas
lea
lods
in
push
and
sbbb
mov
jns
xor
int3
dec
mov
in
out
es
and
add
lea
cmp
es
daa
fs
mov
or
inc
call
int3
jb
lret
ljmp
push
xchg
xchg
mov
sub
push
xchg
push
jae
cld
in
sbb
jb
push
stos
cmp
lahf
jecxz
fbld
jae
inc
lret
in
cmpsb
adc
in
add
fnstenv
push
adc
int3
mov
in
lea
les
cmp
inc
cld
inc
jg
jo
ds
mov
xor
adc
jbe
dec
aas
aas
cmp
and
jne
data16
and
mov
xchg
fistps
scas
mov
insb
adc
arpl
add
fstl
cmp
mov
adc
imul
pop
cmc
bound
xor
xchg
lods
xchg
xchg
outsb
xchg
hlt
add
addr16
in
repnz
movsl
pop
negl
jno
sub
mov
add
xor
add
mov
pop
and
mov
pushf
ljmp
arpl
sub
aas
xlat
mov
xchg
jecxz
xchg
lods
pop
xor
cld
jb
dec
insb
fisttpll
lock
mov
and
inc
or
and
cld
push
aad
xchg
lret
ljmp
adc
aas
hlt
loopne
sbb
cmp
fildl
jno
inc
sub
mov
pusha
sbb
push
divb
sub
inc
inc
push
mov
test
jb
xchg
mov
mov
xor
repz
fidivs
or
rorl
mov
adc
sub
push
jp
mov
xorb
xor
or
and
adc
mov
mov
adc
lea
cwtl
ss
lea
xor
mov
aas
pop
test
sbb
jne
xor
mov
out
outsl
call
repnz
aas
and
movsl
pop
addr16
rcrl
imul
pop
shlb
inc
adc
repnz
in
insl
loope
xchg
push
inc
fldcw
mov
pop
js
xchg
xchg
mov
mov
jne
lds
mov
cmp
sbb
mov
push
cwtl
loop
lock
pop
mov
and
repz
mov
into
mov
sbb
data16
cs
and
jge
aad
ljmp
jno
ljmp
mov
in
and
lcall
mov
in
pop
push
xor
daa
jg
fbld
xchg
cs
cltd
lods
adc
mov
cmc
sbbb
sbb
mov
cmp
xchg
movsb
adcb
and
jl
inc
movsb
push
pop
lahf
ret
pop
sbb
and
mov
outsl
mov
js
sub
shl
pop
jae
inc
cmp
aad
and
mov
mov
cwtl
jecxz
xchg
cmp
mov
pop
aas
jl
inc
insl
imulb
sbb
push
xchg
sub
dec
jb
fstpt
mov
or
mov
mov
xchg
push
cmpsb
stos
xlat
test
testb
aaa
les
sbb
add
pop
cmp
ret
mov
xlat
ljmp
ss
fnstenv
scas
jp
dec
test
dec
push
push
sti
dec
cmc
dec
loop
jae
leave
in
je
or
push
or
test
add
je
popf
icebp
es
and
lock
cmc
sbb
in
adc
mov
push
adc
inc
les
xor
sbb
out
daa
pop
sti
mul
bound
loope
mov
imul
add
fistpl
sbb
stc
pop
stc
sbb
mov
xchg
es
pushf
enter
xor
xchg
jle
icebp
mov
lahf
add
lea
bnd
lret
roll
mov
push
mov
icebp
jno
je,pt
push
stos
cmp
repnz
push
push
lret
cmpsl
adc
mov
xchg
int3
movsb
inc
push
pop
cmp
fsub
xchg
fdivrl
add
mov
movsb
inc
arpl
mov
mov
aaa
shlb
stc
pop
jg
pop
test
xchg
fs
xchg
mov
push
in
mov
mov
mov
in
gs
xchg
adcl
loop,pt
jb
out
fsubl
dec
lds
popf
orl
push
jg
or
jp
xor
stc
jae
les
test
inc
push
mov
sarb
push
cmp
in
mov
xchg
jns
push
pop
inc
enter
dec
scas
arpl
cmpl
inc
xchg
aad
cwtl
pop
mov
cld
sahf
dec
mov
loope
in
rol
lock
adc
cmp
sbb
jle
dec
testb
adc
cwtl
push
js
lds
cmp
mov
xchg
inc
add
push
cmp
mov
cmc
repnz
xor
mov
push
pop
sbb
je
sti
jmp
aaa
fcomip
out
push
cmpsl
pop
mov
xor
sbb
jb
pop
lret
pop
adc
cmpsl
xchg
dec
data16
fcompl
push
dec
insl
add
fadds
in
rcr
sbb
sub
sbb
cs
mov
fildl
cmpsl
cmc
aaa
scas
hlt
or
sbb
sub
test
sub
mov
fs
jno
push
imul
dec
xchg
movsb
xor
aam
shll
jmp
pushf
mov
in
xchg
sub
or
mov
call
push
or
je
mov
xor
jp
add
adc
nop
addr16
and
in
add
in
mov
sub
ret
pusha
sbb
xor
repnz
ja
stos
pop
mov
mov
cmp
lcall
or
cmp
es
arpl
sbb
mov
dec
test
into
ror
fbstp
sbb
ret
ljmp
push
lret
or
cmp
push
loopne
push
pop
nop
inc
mov
xor
testl
mov
jecxz
inc
jne
and
cltd
test
stos
test
xor
cltd
call
aas
out
cli
shll
ficoml
jae
out
mov
outsl
hlt
mov
dec
xchg
fnstsw
aaa
pop
lods
loopne
es
push
stos
test
ss
or
xchg
push
xor
pop
dec
jo
repz
psubq
push
jg
jp
jo
in
cmp
ret
and
adc
sti
lods
ja
mov
mov
clc
xchg
fiaddl
jae
sahf
mov
or
mov
xor
mov
paddd
pop
adc
mov
or
mov
adc
cmpsl
dec
pop
movsb
or
lahf
insl
mov
inc
sub
mov
jns
dec
out
icebp
push
pop
pusha
mov
xchg
out
fildll
push
inc
dec
dec
ljmp
xor
cmp
jle
aaa
negb
and
or
sub
jns
push
adc
dec
shlb
cli
sub
mov
dec
and
stos
dec
mov
push
xchg
xor
push
xchg
xchg
loopne
sub
daa
scas
push
fsubrl
xor
cwtl
pop
xor
movsb
push
ljmp
and
cmp
add
add
out
pop
xor
out
and
xchg
orb
flds
int3
stos
outsl
call
call
jbe
mov
test
cmpsl
mov
inc
faddl
cmp
test
jnp
add
test
xor
jo
sub
rorl
stc
dec
fidivs
or
dec
int3
popa
cmp
mov
fisubs
addb
test
js
inc
push
sbb
mov
jb
mov
push
out
inc
lods
push
scas
jle
push
das
fbstp
ja
ja
push
jbe
inc
fimull
mov
add
sbbl
call
outsl
push
mov
dec
push
loop
dec
sub
mov
dec
xlat
push
cmc
ss
dec
jle
cmp
addl
enter
xor
dec
notb
sti
jg
cmp
ds
inc
pushf
xor
andl
push
je
add
mov
loope
loopne
xbegin
cmp
jbe
cli
out
test
and
mov
loop
pop
movl
shll
imull
in
push
mov
xchg
les
xchg
inc
pop
out
inc
lods
pop
push
push
int
and
add
mov
pop
jb
mov
cmp
sub
sbb
insb
loope
pop
xchg
fdivl
push
movsb
pop
popa
mov
ret
mov
lods
ljmp
mov
xchg
fs
pop
dec
push
shlb
sub
sbbl
push
pop
sbb
cld
push
lret
lds
arpl
pop
mov
aaa
hlt
mov
andb
pop
pop
cltd
adc
lret
lock
je
sub
dec
lods
jge
ficoms
mov
in
jo
mov
test
dec
fistl
stos
jle
mov
adc
out
inc
mov
mov
lods
xor
lahf
ror
sbb
fucomp
cmp
xlat
rcrl
test
xchg
jbe
xor
xchg
xchg
stos
sbb
pop
out
stos
dec
pop
cmp
pop
xor
jle
push
cs
or
and
adc
cmc
es
inc
xchg
into
test
lahf
dec
push
dec
inc
xchg
jbe
pop
push
sub
lret
sbb
mov
adc
or
out
sub
jbe
cmc
rcl
mov
ret
cmp
test
inc
dec
shll
xor
mov
add
adc
sub
cmpl
push
or
lods
je
sbb
fs
push
adc
out
aaa
int3
iret
jp
lcall
cmpsl
movsb
ja
mov
push
ljmp
cli
sub
sbb
out
xor
test
clc
stos
xor
push
andb
push
jnp
dec
popf
sarb
pusha
cmovnp
fisttpl
rorl
pop
popf
dec
sti
inc
fistpll
orb
sub
mov
and
aad
outsl
mov
jl
jl
sahf
xor
sbb
out
daa
pop
test
outsl
push
aam
jb
or
sub
push
xchg
mov
mov
and
data16
pop
mov
insl
ljmp
pop
loop
call
rclb
adc
fiaddl
adc
imul
mov
sub
mov
jmp
stos
cmp
adcb
dec
and
and
shl
dec
sub
jns
aam
cmp
inc
jb
iret
xchg
and
adc
jmp
insl
loopne
pop
hlt
sub
fistl
rorb
lds
push
xlat
push
or
pop
icebp
jb
add
mov
push
jg
vrcpps
mov
lods
test
cs
cmp
in
mov
mov
and
or
arpl
mov
pusha
xor
mov
aad
dec
in
xor
mov
js
push
ficoml
inc
jb
enter
cmp
ja
fsubr
pop
mov
lea
push
dec
lret
dec
fldt
sub
dec
inc
shlb
stc
cs
jb
inc
add
fadds
sbb
mov
dec
dec
or
insl
jmp
lods
or
inc
imul
mov
sar
mov
dec
in
push
adc
jmp
movsl
into
jle
cmpb
outsl
xor
stos
pop
mov
ja
fimull
addr16
push
clc
mov
sbb
mov
mov
dec
out
push
mov
bound
std
or
in
sub
cmp
add
inc
mov
xor
sub
lcall
test
pushf
adc
xchg
out
cwtl
call
jns
or
jae
pop
int
mov
popf
xchg
cli
movsl
pop
insb
pop
cmp
int
sub
aas
push
outsb
xor
push
pop
inc
mov
xchg
dec
fbld
int3
lock
and
inc
std
push
xor
pop
jmp
sub
push
mov
mov
addr16
test
or
ja
add
jae
mov
and
mov
sahf
aaa
add
lea
out
mov
addb
xchg
call
push
aaa
xor
faddl
push
je
test
xchg
int3
add
mov
jle
int
push
inc
fistpl
into
add
iret
mov
xchg
push
and
jecxz
sub
int3
mov
stos
imul
rolb
es
pop
cmp
mov
lahf
lcall
mov
xor
js
cmp
in
imul
notb
xchg
shll
imul
bound
test
aas
push
dec
pop
pop
jbe
ds
cmovg
ja
sbb
jmp
push
dec
push
add
sahf
pushf
pop
pop
and
imul
jb
stc
sbb
or
lret
mov
dec
push
adcl
jle
loop
loopne
inc
ret
and
loope
movsb
aaa
xor
lods
mov
rolb
in
dec
jns
push
inc
inc
inc
xor
in
dec
test
pop
push
rcrb
aaa
mov
sbb
lock
sbb
call
test
out
call
lret
movsb
daa
add
loopne
aad
jmp
push
adc
jecxz
push
sub
les
sarl
lahf
cmp
lahf
orb
movsl
mov
inc
lea
lods
push
cmp
ljmp
loopne
xchg
cmpsl
and
mov
push
cmp
push
lahf
xor
loope
jo
insb
xchg
leave
add
mov
jp
jae
adc
gs
dec
sbbb
call
push
repnz
aaa
adc
mov
pop
test
insl
inc
clc
sahf
xchg
pop
mov
push
test
subb
jbe
cmp
incl
aaa
cmp
xor
test
testb
push
push
pop
dec
adc
ss
mov
imul
outsl
jg
js
movsb
bound
push
xchg
pop
mov
andb
les
ss
in
aam
jl
jl
push
and
jb
and
mov
mov
mov
push
add
inc
aaa
jo
stos
addr16
or
inc
xor
imul
jno
andb
sub
mov
push
addr16
jbe
push
jns
fcmove
ret
push
ljmp
push
lcall
les
adc
mov
cmp
hlt
outsb
popa
ss
ljmp
and
in
add
jecxz
jmp
xchg
les
lea
mov
test
ljmp
pushf
out
aad
sbb
and
stos
add
ret
stos
xor
adc
and
push
mov
std
push
pop
xchg
mov
pop
popf
push
mov
dec
movsb
imul
lock
and
pop
push
gs
pop
mov
jle
ljmp
or
push
add
ds
pop
lock
jno
outsl
jg
mov
cld
les
pusha
das
push
aam
nop
pop
int3
jp
nop
std
pop
stos
xchg
mov
cmpsb
jb
inc
nop
mov
movsb
push
pop
lret
push
jns
lock
pop
gs
xorb
xchg
add
ljmp
call
ret
ret
pop
bnd
cltd
sbb
pop
inc
inc
mov
repnz
in
sub
bound
loopne
mov
adc
insb
rorl
out
mov
fiaddl
lds
sub
mov
jb
xor
cmc
leave
mov
jnp
es
sarl
ljmp
pmulhuw
xor
icebp
iret
fwait
pushf
and
imul
es
cli
xor
orl
jmp
loope
sub
lret
xchg
jp
and
mov
mov
sbb
adc
pop
push
mov
mov
pop
dec
sub
jae
les
push
pushf
cmp
pop
sub
test
push
xchg
les
stos
or
mov
outsb
ret
cmovae
pop
addr16
imul
cmp
mov
leave
lahf
pushf
test
and
loopne
iret
test
inc
loop
jl
xchg
in
popf
dec
jne
dec
ror
das
cmp
jbe
sbb
bound
in
sub
mov
insb
outsb
mov
push
int3
xor
xchg
inc
ret
rcrl
mov
out
int
cmpsl
mov
mov
push
js
pop
pop
dec
mov
hlt
sbb
sub
sbbl
or
pop
ret
or
lret
or
jo
mov
dec
cwtl
movsl
lods
ficompl
pop
adc
movsb
xlat
fucom
xchg
pushf
jne
enter
popf
push
enter
add
loopne
jo
mov
inc
and
add
outsl
inc
fcoms
iret
ss
cmp
or
fsubs
scas
or
sbb
cmp
pop
xchg
popa
insb
dec
and
dec
cmpsl
mov
cld
sub
or
stc
cltd
jb
mov
in
jmp
mov
dec
in
jl
mov
pop
lcall
repz
and
arpl
push
xchg
xor
daa
add
out
fcomip
sbb
out
push
adc
jp
lcall
inc
jns
inc
dec
ja
pop
arpl
sarb
sub
ja
push
incb
mov
sarb
mov
jnp
fbstp
mov
pushf
bound
push
xor
lahf
js
mov
dec
push
cmp
scas
push
cmc
fmuls
mov
iret
sbb
jbe
push
or
mov
shlb
test
ret
dec
testb
sbb
lcall
test
sbb
pop
jge
xchg
lret
cmp
mov
and
pop
adc
push
push
loopne
cmpsl
sbb
stc
inc
jns
mov
stc
jnp
clc
popa
arpl
cmp
cmpsb
push
lds
mov
add
mov
push
mov
add
inc
ret
push
in
inc
mov
or
pop
mov
cmp
arpl
nop
mov
xchg
add
xchg
repz
push
shlb
jbe
jmp
pop
iret
and
sahf
jb
popf
pop
jecxz
adc
cmpsl
mov
sbb
pop
mov
call
sbb
push
sbb
push
into
outsl
ret
test
xchg
sbb
mov
mov
push
fs
dec
mov
xchg
inc
jne
adc
rol
push
js
repnz
imulb
or
jle
adc
roll
loop
cmp
pop
mov
jns
jno
ret
inc
push
inc
jbe
cwtl
adcl
pop
dec
and
xlat
bound
mov
push
imul
aas
mov
mov
inc
aas
idivb
xchg
fists
xchg
je
mov
inc
movsb
dec
mov
call
dec
scas
add
jnp
aam
add
hlt
pushl
inc
fwait
outsb
add
scas
stos
jecxz
or
leave
push
lock
fbld
imul
call
fildll
sub
sbb
dec
test
into
scas
data16
add
aad
push
shll
sub
mov
add
stos
mov
xor
mov
les
jmp
or
sub
xor
and
cli
fadd
xchg
jnp
outsl
mov
rolb
adc
xor
daa
out
mov
stos
push
shlb
enter
and
or
adc
lea
jne
les
sbb
inc
fs
movsb
lret
pop
fadd
mov
push
mov
xor
je
subb
mov
movsb
mov
lahf
orl
ljmp
fs
imul
mov
pop
push
xlat
es
jmp
inc
mov
loopne
or
mov
in
cwtl
je
fwait
add
push
mov
push
xlat
jge
sub
movsb
and
mov
or
or
pop
add
shr
mov
mov
ret
shll
loopne
sbb
adc
adc
test
pop
mov
jb
pop
xor
in
lret
mov
fisttps
into
xchg
lcall
and
lods
mov
fdivl
fcmovne
aad
push
xchg
and
or
xor
loopne
xchg
push
mov
add
cmp
pop
repnz
jecxz
jns
sbb
mov
sub
adc
aas
dec
pop
test
sub
lods
leave
jbe
jno
das
lods
addl
out
insb
pop
cmc
decb
xlat
cmp
adc
inc
sbb
xor
dec
test
xor
cmp
mov
cld
mov
jbe
pop
fistl
xchg
std
cltd
mov
pop
lahf
inc
pop
dec
or
hlt
jmp
ret
mov
inc
xor
dec
dec
lds
psrlw
test
and
lahf
scas
ja
lock
xor
loop
mov
jp
les
sub
mov
cmp
inc
stos
push
faddl
ljmp
fs
xchg
mov
lods
and
frstor
js
xor
call
jmp
stc
inc
mov
mov
loop
aas
test
mov
andl
lods
pop
lods
xor
lods
shll
nop
punpcklwd
divb
push
dec
mov
push
jo
jle
in
pop
sub
adc
pop
and
andl
dec
movsl
adc
repnz
sbb
sub
gs
mov
in
mov
test
add
sbb
daa
mov
scas
xor
stc
fistpll
in
mov
outsl
aad
cli
xchg
loope
xor
in
lcall
ljmp
cmp
lea
mov
mov
call
sub
sti
pop
mov
je
enter
out
pop
push
xchg
popf
fildll
mov
mov
jbe
out
ret
pop
dec
adc
std
inc
push
mov
movsl
les
subl
adc
fucomi
ss
push
xor
imul
test
cmp
xchg
cmp
jecxz
in
cmp
dec
xchg
xchg
push
nop
sbb
jbe
lods
aaa
call
pop
ljmp
stc
aad
adc
push
in
aas
fcmovnb
nop
push
lret
enter
out
add
outsl
mov
xchg
mov
fwait
loope
dec
sub
mov
sub
gs
repnz
jnp
xchg
rorl
je
or
enter
dec
jo
repz
inc
outsb
mov
mov
sub
cmpsl
scas
aad
push
sub
cwtl
rorb
lahf
call
mov
imul
outsl
sub
in
xor
lods
js
fnstsw
cmc
xchg
lahf
push
cmpsl
dec
das
addl
pop
jg
les
pop
aas
adc
jmp
dec
pop
xchg
mov
repz
xchg
cmpl
inc
mov
sbb
dec
mov
add
andb
xor
enter
js
xchg
sar
ret
and
mov
push
or
jecxz
loope
scas
leave
xor
scas
imul
pop
push
xchg
mov
pusha
frstor
push
mov
mov
roll
mov
js
daa
lea
sub
pop
add
or
fcmovnbe
xor
lea
scas
push
shlb
pop
insb
dec
data16
call
movsl
mov
lds
push
push
xor
adc
call
xchg
xchg
pop
ficompl
xor
jl
mov
cmc
sub
out
test
add
sbb
sub
loop
arpl
pop
inc
jg
adc
lds
sarb
mov
mov
pop
xorl
enter
push
iret
add
daa
jecxz
repz
in
clc
imul
push
lret
cltd
xchg
ds
enter
mov
test
popf
repz
sub
adc
hlt
scas
push
pop
fstpt
push
jbe
ss
scas
cmpsb
shll
mov
sub
cmpsb
daa
cmp
cmp
js
mov
lds
jno
insl
jl
repnz
lret
xchg
mov
add
inc
mov
dec
test
jno
xchg
cmc
inc
mov
call
pop
inc
lods
sti
dec
lea
xor
inc
lods
movsb
addl
leave
xchg
sbb
bnd
stc
xlat
pop
test
xor
mov
nop
jmp
xor
ja
ljmp
push
mov
mov
lret
js
lds
mov
mov
xlat
xor
pusha
subb
sarb
nop
adc
out
inc
jecxz
cmp
and
jle
aad
push
jecxz
xor
xchg
stc
clc
mov
fcmovbe
popa
clc
mov
pop
mul
and
shrb
js
xor
push
in
popa
dec
mov
mov
fsubl
sub
sub
cmpsl
add
bound
aad
push
sbb
ficoms
xchg
or
jo
pusha
cld
mov
add
cltd
dec
pop
into
or
int
add
jl
lret
or
sub
add
mov
push
xchg
pop
push
sbb
jmp
add
xchg
mov
popa
sbb
das
mov
dec
ret
stos
or
cwtl
adc
add
inc
rcll
mov
xor
cmp
sub
gs
xchg
icebp
pop
lock
ljmp
sti
sbb
movb
into
cmp
mov
aas
popf
jnp
stc
adc
arpl
pop
fists
mov
out
pop
stc
fucomi
xchg
lock
das
and
fdivs
mov
fwait
lahf
mov
xchg
jl
jp
out
dec
movsl
lock
cmp
fistl
xchg
fiadds
adc
hlt
jmp
aas
or
cmp
stc
fdivr
mov
dec
mov
data16
int
inc
pop
lahf
int3
aad
movl
or
andl
pushf
mov
ret
adc
cmp
sahf
adc
aas
sbb
sub
mov
shl
dec
xchg
add
cmc
push
outsl
movb
cmp
popa
jae
and
lods
xor
mov
mov
and
sbb
and
fcomps
push
shl
lea
loope
outsb
test
adc
mov
mov
sub
fistpl
in
rorl
or
push
inc
enter
enter
mov
jl
jecxz
cmc
loop
stos
aas
pop
dec
jmp
repz
jnp
aad
enter
aad
adc
movsb
jae
dec
into
in
or
cmc
out
and
call
and
testb
sub
push
mov
lds
mov
jnp
mov
cmp
dec
test
cmp
dec
ficoms
int
dec
sahf
xchg
cmc
jb
sub
lds
mov
mov
mov
pop
fabs
ficompl
sbb
daa
pop
sub
mov
or
call
sub
sbb
jge
test
push
cld
insl
cmc
inc
dec
in
push
into
leave
inc
push
mov
jge
fists
xor
sbb
jno
stos
gs
xor
fldt
adc
mov
lods
pop
inc
jmp
call
into
je
in
mov
push
and
cli
mov
ror
idivl
loope
xchg
pop
xor
pop
push
mov
mov
jnp
and
cmpl
mov
push
push
cld
mov
sbb
adc
fs
jl
cmpsb
insl
out
shrb
stc
std
add
xchg
inc
add
out
mov
lahf
pop
lret
insl
int
add
or
test
arpl
inc
repnz
or
shll
pop
inc
mov
xchg
outsb
xorps
mov
jbe
out
aas
sbb
nop
and
adcl
sub
inc
mov
popa
divl
insl
cmp
fstl
mov
mov
jecxz
insl
stos
mov
in
mov
je
and
mov
xchg
in
push
outsl
cmp
int3
scas
mov
insb
fdivrs
lahf
jne
adc
dec
xchg
sub
jne
pop
pop
es
mov
mov
add
inc
xchg
stos
out
sbb
cmp
arpl
sahf
not
pop
push
test
repnz
test
and
sbbl
mov
pop
cwtl
in
lds
sbb
mov
inc
dec
cmpsb
mov
fnsave
frstor
imul
or
fwait
repnz
push
dec
mov
push
or
out
jle
out
and
cmc
mov
push
and
lock
push
out
dec
mov
flds
inc
mov
jb
cmp
mov
xor
lods
xchg
ds
mov
inc
loope
sarl
cmp
pop
pop
cmpsb
shll
adc
inc
adc
sub
nop
flds
jle
scas
inc
das
testl
pop
pop
fsub
add
lock
das
adc
add
and
aaa
cmp
xchg
pop
testb
mov
fisubl
mov
pop
orl
call
sub
gs
popf
fcmove
mov
fldcw
js
add
lds
jne
pop
das
jge
push
lds
loope
push
mov
mov
cmpsb
mov
sbb
adc
test
ret
adc
adc
and
cmpsl
jno
push
mov
stos
lock
mov
hlt
iret
ds
stos
xor
iret
mov
add
loop
imul
fwait
sbb
or
incb
inc
adc
stos
lds
mov
aaa
in
adc
mov
sub
addr16
addl
shrb
cli
arpl
adc
xchg
scas
sbb
pop
pop
push
fisttps
cmp
popf
inc
jb
out
or
sub
sub
push
add
mov
push
add
pop
push
pop
fdivl
pop
adc
xor
and
test
popf
bound
push
pop
pop
adc
daa
stos
jl
imul
stos
ja
sub
push
push
mov
outsl
movsb
adc
sbb
xchg
xor
xor
cmc
mov
mov
nop
jbe
movsb
cmp
test
test
cmp
cmp
cs
arpl
decb
push
sbb
cmp
push
jp
mov
outsl
flds
or
fs
mov
imull
xchg
out
fistps
or
xor
leave
xor
xchg
and
sub
adcb
loope
mov
cmc
inc
incl
push
sarb
jne
nop
mov
jl
jbe
mov
dec
mov
jmp
sbb
aad
mov
js
loopne
mov
into
sub
rcll
lea
addr16
jmp
aaa
inc
cmp
test
aad
adc
shlb
xor
push
enter
test
mov
in
mov
addr16
sbb
dec
scas
popa
div
sahf
pop
cmp
sbb
mov
inc
xor
nop
mov
loop
ja
and
ljmp
pop
sbb
pop
lahf
in
test
fcomps
mov
dec
cmp
cltd
jnp
xlat
push
jecxz
xor
gs
xor
push
xor
dec
push
std
adc
ja
nop
mov
dec
push
rclb
flds
and
enter
and
xchg
pop
pop
fcomi
xchg
rcrb
cmc
dec
pop
push
or
repz
lock
lds
js
imul
divl
mov
xor
pop
out
inc
out
push
or
jl
int
int
dec
pop
test
fwait
test
test
lods
testb
fsubrs
cs
xchg
xchg
and
inc
push
pop
jo
jns
pop
stos
jmp
fucom
mov
mov
test
int3
and
mov
shlb
mov
cmp
inc
and
neg
rolb
adc
addr16
lcall
insl
jecxz
and
sub
mov
pop
pop
fldl
es
pop
hlt
cmp
jl
fisubrl
inc
lcall
inc
pop
out
fnstenv
lock
out
int
mov
clc
and
lock
push
push
adc
jb
sahf
fsubrp
sub
test
jo
test
sub
out
pop
inc
imul
iret
lahf
add
hlt
insb
dec
icebp
paddq
pop
shll
push
fisttpll
pmaxub
sbb
inc
aam
jecxz
xor
lock
mov
xchg
adc
std
into
mov
jno
mov
or
inc
into
mov
dec
sarb
aas
and
and
dec
mov
and
mov
rorl
mov
push
scas
mov
push
xorb
lret
xchg
dec
and
scas
xor
dec
mov
xor
add
mov
pop
cwtl
fcmovnbe
mov
out
mov
jns
out
mov
int3
fstps
mov
test
inc
or
cmpsl
sbb
sub
jle
sbb
fidivl
mov
push
aaa
push
sub
ud0
cltd
inc
push
push
adc
jl
jb
ljmp
mov
jge
leave
sbb
jnp
jl
data16
adc
xchg
push
push
add
outsb
fldcw
and
loopne
sub
movsb
mov
clc
dec
sub
lret
aaa
test
pop
xchg
cwtl
stc
jae
leave
sbb
dec
ja
add
daa
or
inc
fisubs
test
test
push
fcmovnb
mov
push
inc
adc
movsl
punpcklwd
dec
push
mov
fs
popf
loop
adc
xchg
bound
cmp
imul
sbb
adc
and
mov
ja,pn
ss
bound
mov
jns
loopne
pop
push
fistps
popf
pushf
jns
loopne
mov
in
pop
dec
pusha
jae
iret
stos
ljmp
mov
scas
std
inc
fldt
pushf
push
subl
cltd
push
xchg
arpl
pushf
loope
adc
out
xor
xlat
loop
or
sbb
dec
sbb
mov
aas
dec
inc
int3
push
jno
je
lahf
notl
mov
sbb
into
pop
dec
and
fimull
push
je
in
xchg
dec
leave
push
fisubrs
and
mov
insb
cmp
sbb
mov
xor
loopne
jl
int
jno
push
in
out
pop
outsl
scas
cmp
jns
inc
ffreep
sub
in
and
movsb
fs
lock
outsl
adc
adc
unpckhps
cmp
out
imul
hlt
test
mov
fwait
pushf
sub
sahf
or
jg
aaa
adc
adc
push
adc
mov
outsb
push
and
xchg
movsb
test
jge
mov
mov
mov
add
mov
xor
xchg
fsubrs
test
mov
ret
or
and
pop
inc
ss
stos
mov
into
jb
lcall
inc
jb
ljmp
ds
repz
bound
mov
outsl
lahf
add
mov
icebp
and
adc
movsl
gs
push
inc
jp
dec
mov
xor
mov
stos
lea
inc
icebp
mov
inc
mov
push
push
clc
jnp
jecxz
stos
cli
cmpb
sub
lret
xor
insb
in
mov
int3
mov
mov
in
daa
mov
ja
call
or
inc
jae
cmp
ds
push
xchg
adc
lcall
mov
ljmp
repnz
dec
adc
jns
pop
ret
das
jge
jmp
movsl
faddl
and
popa
push
fwait
jbe
int3
pushf
cmp
les
cmp
mov
jne
divl
mov
mov
fs
in
fs
or
adc
pop
mov
jl
jns
jae
mov
ret
stos
sub
xchg
mov
insb
xchg
out
data16
mov
data16
sbb
idivl
sub
shr
out
cmovnp
out
loop
jnp
or
or
jle
gs
dec
mov
pop
out
imul
mov
xor
jnp
push
jmp
lahf
testb
in
shrb
jmp
sarl
jp
lcall
jecxz
and
daa
pop
dec
aas
xchg
fmull
mov
nop
jno
addr16
rorl
mov
outsl
aam
fbstp
test
fs
inc
jg
lret
testb
xchg
add
pop
ret
pop
stos
mov
pop
mov
in
arpl
fistpll
lds
inc
sbbl
mov
test
mov
dec
add
mov
fcom
rcrb
outsb
js
imul
in
sub
scas
mov
push
inc
jns
sbb
clc
sti
inc
scas
pop
adc
inc
lods
rol
jmp
mov
add
sarb
jle
shrb
mov
jbe
int
out
pop
mov
adc
insl
xchg
cwtl
ja
jl
fldl
lock
inc
mov
jle
mov
std
fcoms
aaa
hlt
lahf
imul
xchg
rclb
cmp
xlat
jns
or
mov
lret
add
and
pop
mov
leave
fidivs
int3
add
or
aad
cmp
jg
insb
js
cli
fldenv
xor
jne
adc
mov
loope
nop
call
fucompp
xor
es
gs
xchg
pop
out
mov
clc
in
pop
int
addl
scas
aas
lcall
leave
add
pop
imul
pop
in
xchg
add
xor
repz
inc
adc
loope
test
std
movsl
mov
sub
sub
mov
or
mov
sti
pop
xor
pop
push
leave
aam
test
sbb
les
cmp
out
jb
in
movsl
mov
mov
mov
jns
jb
lods
cs
and
or
xor
mov
sbb
push
xor
je
xor
lret
jp
mov
insl
outsl
les
scas
and
int3
mov
movsl
xor
xchg
xor
leave
jb
xor
ja
repz
jno
jle
sbb
loopne
pop
sub
inc
inc
pop
sbb
mov
ss
repz
aas
test
fwait
popa
jb
aam
idivl
mov
lcall
shll
imul
gs
or
mov
sub
jl
cmc
mov
or
out
sti
dec
push
add
dec
arpl
sbb
xor
add
out
fiaddl
add
fldenv
mov
cltd
mov
xorl
aam
sub
or
shll
shl
ja
and
fdivr
sub
add
pop
aaa
or
out
or
xchg
mov
xchg
loop
sbbl
mov
or
out
mov
icebp
push
mov
rolb
or
enter
xor
xchg
and
mov
pop
xchg
stos
cmc
ficoml
mov
cmp
jo
mov
pop
mov
outsb
adc
cmpsb
int
ret
jbe
sbb
sbb
lods
pop
add
cld
sub
mov
dec
jnp
setl
add
inc
es
inc
mov
je
rorb
nop
jg
add
or
jg
out
jmp
sbb
into
jns
mov
repz
outsl
cmpsb
or
movsl
test
int
mov
out
pop
xchg
mov
outsb
cmpsl
inc
js
mov
dec
fnsave
or
or
in
loope
cmp
jecxz
ja
ljmp
int
xchg
xor
hlt
hlt
push
fwait
lahf
jmp
xor
mov
pop
cmpsb
push
adc
sbb
iret
mov
outsl
jmp
fs
movsl
mov
inc
xor
lea
int3
fbld
fldl
pop
dec
push
inc
sub
dec
pop
movsl
cmc
aaa
mov
pop
lret
xchg
cs
dec
outsl
jle
test
inc
imul
pop
roll
mov
cwtl
into
adc
clc
add
dec
jno
vmovmskps
dec
sub
jno
clc
loope
bound
sbb
jmp
js
dec
mov
testl
xchg
lock
push
and
shlb
mov
daa
aas
dec
fcoms
test
push
mov
jl
add
and
cmp
addr16
decl
mov
out
cmp
clc
sbb
cs
roll
sbb
fcoml
pop
mov
nop
adc
push
or
lods
in
push
cs
incb
out
test
lods
jbe
mulps
movsb
test
pusha
mov
data16
inc
and
xlat
mov
xchg
and
or
popf
and
xlat
push
or
outsl
out
xor
js
cmp
fcompl
xchg
jb
mov
sahf
pop
cwtl
pop
xchg
adc
sbb
stos
xor
fdivrp
imul
xor
sti
and
in
push
in
test
pop
stos
push
mov
stos
dec
leave
cltd
clc
xlat
pusha
icebp
xchg
fldenv
ljmp
pop
add
adc
std
push
das
lock
filds
cmp
and
inc
mov
lods
mov
loope
out
stc
fcompl
lds
lods
xorb
mov
enter
pop
scas
movsl
leave
ss
hlt
dec
adc
jbe
xchg
daa
dec
push
mov
mov
into
xor
sbb
leave
mov
cwtl
cmp
push
mov
inc
jl
rolb
test
fmull
jne
fistps
adc
les
cmpb
or
xchg
sahf
sub
cmc
inc
xchg
int
movzbl
andl
sbb
inc
pop
inc
rcl
div
push
mov
lret
xor
xor
push
jno
sub
outsb
jbe
pop
fwait
adc
movl
repnz
ss
insb
xlat
out
lahf
push
and
and
push
jle
mull
fwait
pop
fbld
stos
cmp
adc
sti
xchg
push
and
push
loop
outsl
repnz
or
mov
ss
into
dec
push
outsl
jae
jb
lods
xorl
adc
add
adcl
mov
or
daa
or
addr16
bound
lds
or
xorb
js
fidivl
inc
and
nop
jno
sub
rorl
inc
or
mov
add
pop
mov
shll
mov
scas
push
dec
push
rcrb
inc
inc
pusha
push
push
insb
lock
es
fsubrs
lock
mov
pop
xor
jp
pusha
inc
dec
pop
subl
iret
jl
arpl
and
adc
scas
in
mov
and
pop
push
inc
add
adc
in
pusha
pop
outsl
repz
js
test
scas
cmp
xchg
lret
insl
push
out
aaa
fbld
stc
cmp
loopne
aad
dec
mov
or
adc
dec
stos
lds
sub
outsl
mov
lret
fstps
clc
lret
sbb
ret
and
xor
aad
fsubrl
push
iret
loopne
push
xchg
iret
mov
pop
outsl
inc
orb
xchg
sub
sbb
shlb
lret
les
pop
mov
mov
xchg
inc
xchg
push
fwait
xlat
jp
xor
out
mov
push
push
sub
xchg
into
loop
mov
mov
mov
and
push
ret
daa
lods
repz
dec
addr16
arpl
mov
adc
push
cmp
xchg
dec
ja
mov
pop
je
push
adc
push
dec
pop
mov
push
loope
enter
btc
jmp
not
cmp
mov
xchg
pop
pop
movsl
mov
hlt
and
and
push
sub
std
leave
out
push
pop
cmp
push
fisttpl
shrl
pushf
fwait
add
pop
cmp
mov
cmp
sbb
inc
sub
jo
sbb
scas
addl
push
adc
scas
iret
xchg
mov
pusha
jne
cwtl
das
push
or
dec
fwait
add
inc
sbb
imul
fmull
add
or
shr
outsb
mov
xor
xchg
cmp
xor
call
sub
repnz
insl
loopne
popa
cmp
bound
cmpsl
stc
roll
sub
push
dec
pop
inc
pop
leave
pop
fisttps
xor
ds
push
cltd
jmp
repz
xchg
in
cmp
loopne
jle
and
add
inc
xchg
ret
xchg
cs
push
in
fsubl
popa
outsb
shll
and
and
or
pop
lret
xor
clc
mull
scas
mov
xor
adc
pushf
or
xchg
or
jae
jae
and
leave
xchg
cltd
pop
mov
fcompl
or
xor
roll
std
dec
popf
cmpsb
push
adc
lods
jg
xor
mov
cmpsb
jns
dec
cmc
fdivrl
and
xchg
arpl
xchg
cs
mov
xchg
js
push
mov
push
test
cmp
push
mov
nop
mov
iret
push
lret
in
sbb
int
pop
push
pop
mov
adc
or
mov
jle
pop
add
leave
mov
cmp
call
cmp
test
fdivr
inc
jg
jb
push
dec
inc
xchg
scas
ret
inc
cmpsl
std
divl
adc
fcmovu
scas
stos
sarl
out
jne
mov
xchg
add
fwait
and
xlat
int3
mov
rorb
aaa
sbb
aas
js
push
dec
jo
push
mov
ret
cmpsl
jge
loop
xor
test
data16
push
hlt
in
jp
xchg
pop
jo
adc
shrl
sbb
enter
inc
and
in
stos
clc
sahf
mov
xchg
mov
add
lods
sbb
sub
mov
adc
orl
je
pop
fldcw
mov
pop
pop
ffree
dec
mov
insb
sti
aad
dec
addr16
dec
lods
cli
icebp
enter
mov
sub
xchg
out
sub
mov
jmp
imul
fwait
mov
and
push
xchg
inc
mov
xlat
scas
fs
stos
mov
and
and
loop
gs
stos
sbb
jecxz
jecxz
push
test
repnz
rcrb
xor
lea
loopne
popa
fdivrs
mov
mov
sub
mov
imul
cmpsb
push
dec
push
or
ret
les
pop
sbb
test
in
xchg
and
ja
lock
adc
mov
fisubrs
add
mov
fistps
jmp
dec
pop
fnsave
leave
imul
stc
xor
jg
cmp
pop
push
std
pop
push
imul
adc
cld
adc
jg
push
lods
xchg
mov
mov
cs
orb
pop
cld
pop
test
mov
xchg
sub
inc
je
enter
lods
in
dec
lret
push
and
xor
mov
jb
sbb
aad
push
hlt
or
push
outsb
or
iret
mov
pop
fiadds
ljmp
cltd
subl
bound
add
ret
sub
xchg
cmp
loop,pt
jmp
pop
pop
pop
outsb
mov
sahf
into
in
adc
inc
or
add
adc
jp
test
sbb
push
pop
adc
mulb
push
add
add
cmp
and
jnp
bound
aad
clc
adc
push
movb
cmp
cmp
push
pop
es
out
cmp
dec
mov
inc
xchg
jo
mull
xchg
jp
inc
cmp
fstpt
mov
sti
scas
jmp
in
mov
nop
out
pop
pop
fstps
es
sbb
addr16
push
lea
sahf
test
add
mov
dec
cld
jae
test
rorb
mov
mov
or
add
cmp
xor
or
jmp
out
rorb
dec
sub
mov
stos
jns
push
fs
cmp
push
add
cmpsl
dec
cmp
setg
jle
lret
shll
fstps
pop
in
shlb
sbb
outsb
orb
or
and
mov
inc
and
pop
fwait
mov
pop
fwait
sub
imul
dec
in
push
fidivl
push
call
scas
loope
and
fstp
push
pop
and
jo
das
aaa
push
cmp
fistl
loopne
dec
sub
ret
repnz
in
aaa
mov
lock
cmc
in
mov
sub
loop
cs
test
mov
sbb
mov
cmp
lahf
add
inc
fmulp
ja
lock
sub
and
fistpll
push
scas
ret
pushf
mov
sbbb
outsb
dec
inc
js
ja
roll
test
jno
aam
inc
jg
jno
or
pushf
mov
mov
dec
mov
int
lret
sti
test
sbb
mov
xor
fs
xor
pusha
sub
dec
and
inc
dec
std
cmp
pop
adc
mov
cmp
adc
arpl
inc
or
lahf
add
int3
mov
mov
stos
jns
test
movsb
mov
pop
dec
pop
ret
data16
xor
sub
cmp
nop
add
xchg
cmp
mov
push
iret
ljmp
mov
push
pop
shl
inc
out
mov
adc
les
xor
sub
lods
lea
lahf
xor
sub
push
cmp
insl
aam
mov
or
hlt
add
nop
mov
dec
or
inc
cli
imul
sbb
jg
scas
test
rorl
jne
xchg
insl
sbb
iret
xor
popa
mov
lds
mov
fisttps
dec
jns
outsl
mov
lds
jo
js
adc
add
scas
sbb
int
xlat
push
jecxz
int
fisubrl
mov
rorb
mov
je
scas
xor
mov
fsub
xchg
clc
push
imul
das
push
sbb
or
pop
xlat
nop
xor
je
pop
xchg
pop
in
pop
in
loope
leave
repnz
adcb
add
loop
cmp
push
mov
cmp
add
fisttps
dec
sub
xchg
test
cs
xchg
inc
xchg
neg
dec
mov
mov
jl
xchg
enter
iret
xor
jmp
in
out
mov
lahf
xchg
fstl
jl
in
mov
mov
out
sub
adc
xchg
adc
mov
icebp
xchg
adcl
inc
pusha
or
mov
xchg
insl
pop
inc
and
pop
jp
subl
jmp
fidivrs
sub
ror
sub
sub
mov
pop
movsl
stos
pop
addr16
xlat
cmpb
push
inc
test
fstpt
pusha
adc
sarb
arpl
int
das
mov
xor
and
mov
scas
and
cld
jns
cmp
das
ret
pop
jb
cmp
jns
sub
scas
lds
sub
dec
in
in
mov
xchg
push
or
cmpsb
push
mov
jecxz
mov
add
cmp
repz
loopne
insb
call
push
pushl
arpl
mov
scas
lahf
enter
mov
mov
pop
mov
inc
mov
jae
in
addr16
dec
lret
push
pop
jns
sub
and
adc
out
inc
fcompl
or
outsl
xchg
jp
pop
dec
shl
aaa
adc
jne
cld
fs
mov
and
dec
cmpsl
data16
xchg
inc
imul
outsl
fstpl
nop
adc
inc
mov
jne
sbb
xor
push
les
sbb
out
pushf
mov
into
xchg
jne
dec
mov
sti
xchg
fiaddl
push
dec
add
shlb
sbb
add
jns
mov
sbb
repz
jl
add
icebp
pop
out
jae
sub
push
lahf
and
mov
sub
push
gs
mov
push
leave
sbb
cmpsl
repz
and
call
clc
sti
pop
xchg
fsts
nop
push
adc
jne
mov
lcall
das
cmpsb
in
daa
mov
ret
and
jns
add
jg
movsl
in
lods
mov
std
sub
sbb
xchg
add
pop
inc
lods
jo
outsl
into
cltd
test
jne
jp
divb
cld
ljmp
push
repz
push
cmpsb
jmp
dec
movsl
popa
das
dec
mov
subb
lret
push
enter
and
in
scas
ja
cwtl
mov
lahf
mov
jecxz
movsb
push
leave
push
imul
xchg
sbb
int
fstpt
and
push
lret
lret
jmp
aas
mov
inc
out
pushf
lahf
inc
ret
repnz
cmp
sbb
xlat
add
ret
mov
and
xchg
nop
mov
push
insb
fdivrs
xchg
xchg
or
sbb
rorb
jp
jge
sbb
xorb
inc
movsl
stc
cwtl
sub
mov
cld
xor
push
iret
rcrb
cmp
mov
aaa
adc
adc
sub
push
jl
out
testb
mov
sti
jb
clc
stc
mov
pop
add
or
test
pusha
data16
jge
jl
sbb
enter
jmp
jne
stos
out
mov
shlb
loopne
pop
push
mov
cltd
xchg
push
jle
sbb
add
inc
mov
cwtl
cmp
dec
sbb
es
pop
inc
cmpsl
dec
lahf
mov
mov
inc
cmp
outsb
adc
test
ja
sbb
mov
out
push
adcb
and
mov
setns
push
jecxz
roll
or
outsl
test
dec
in
das
push
xchg
jae
add
pop
inc
call
and
sub
inc
divb
stc
mov
mov
sub
push
test
xor
mov
xchg
mov
repnz
lret
shll
test
adcb
sbbl
sbb
pop
test
cmp
into
adc
js
addr16
cmp
cmp
dec
aaa
pop
sbb
jl
sub
or
test
sbb
mov
cmp
or
loope
fidivrl
xchg
popa
arpl
xchg
in
add
inc
out
stos
sub
cmp
xor
add
shrb
adc
mov
out
scas
sub
clc
leave
or
loope
xchg
sub
std
mov
sub
stc
cmp
jns
xchg
testl
xor
into
sti
sahf
sub
test
cld
arpl
mov
add
inc
sub
push
mov
arpl
inc
mov
sbb
clc
mov
psubw
gs
arpl
addb
mov
lods
add
jns
pop
aaa
adc
add
imul
nop
adcb
pop
mov
hlt
les
jnp
xchg
das
and
mov
mov
pop
dec
xchg
inc
fsubrs
xchg
popa
fsubrs
aas
pop
lret
mov
add
dec
sbb
mov
fwait
sti
adc
je
jle
insl
enter
xor
lods
scas
std
lods
add
xor
daa
ret
jbe
dec
pop
mov
lock
xchg
in
or
and
test
icebp
mov
sar
shrb
fsubrl
fistl
loopne
push
arpl
shlb
sbb
xlat
adcb
sbb
mov
enter
cmpsl
pop
pop
loope
in
xor
sbb
sbb
and
push
loop
xor
das
adc
mov
arpl
dec
rcr
xchg
hlt
xchg
shrl
gs
test
xor
adcl
aas
test
sbb
xchg
outsl
addb
cld
xlat
push
rclb
idivb
insb
stos
aaa
mov
adc
inc
shr
jecxz
shll
stc
popf
or
lahf
gs
jge
add
pop
pop
push
jg
cmc
jo
sbb
arpl
cmpsb
fs
xchg
pop
pop
ss
jg
mov
add
shll
jbe
xchg
bound
xor
xchg
sbb
sub
sbb
and
xor
mov
xchg
mov
mov
xor
dec
sub
mov
mov
pop
xor
aas
ja
push
cs
pushl
mov
xchg
adc
push
lahf
dec
es
cwtl
and
push
shlb
aas
mov
flds
cwtl
mov
push
out
imul
mov
sub
sbb
mov
push
cltd
xchg
dec
pop
nop
jne
pop
mov
cs
xor
lahf
inc
push
fwait
jmp
dec
xchg
inc
mov
aam
mov
iret
in
cmp
pop
jp
and
lods
cld
nop
jne
ss
and
test
lret
xor
mov
nop
icebp
ret
movsb
xor
pop
mov
and
iret
add
mov
movsb
leave
loope
xchg
xchg
xor
mov
pop
add
aad
scas
je
sub
insl
bound
lock
es
and
push
and
and
ss
or
filds
data16
or
push
add
mov
jl
pop
movsl
cli
test
mov
std
test
or
aaa
pop
in
push
in
xchg
sahf
pop
outsl
dec
pop
stos
out
lcall
push
icebp
movsl
cmp
add
and
mov
fucomp
push
leave
shlb
cwtl
pop
jmp
jmp
aad
mov
push
jle
mov
rcrb
inc
pop
and
enter
int
dec
add
jnp
xor
popa
jge
pushf
int
int
ljmp
mov
and
lcall
sbb
jecxz
clc
mov
cmp
push
movsl
jecxz
pop
adc
mov
imul
sub
mov
sbb
nop
out
mov
xor
iret
outsl
sub
andl
mov
xchg
out
cmp
hlt
cwtl
mov
and
fs
imul
rolb
xor
and
dec
inc
data16
inc
sbb
lret
loope
fisubs
cmpsb
jmp
and
pop
bound
inc
arpl
sar
jnp
cltd
stos
xlat
addr16
adc
dec
orb
mov
jno
pop
mov
in
negl
mov
enter
in
and
mov
aas
xor
sti
xchg
mov
mov
test
xchg
shll
test
push
fsubl
or
cld
incb
lds
xor
push
sub
sbb
mov
push
sbb
adc
cmp
or
sub
cli
jo
xor
mov
in
mov
imul
push
mov
outsb
fldt
es
faddp
jne
insl
sub
inc
adc
lock
push
test
lcall
jb
and
mov
das
lods
pop
pop
add
jnp
lods
out
cmp
ret
sbb
out
ror
aam
lcall
sub
jnp
es
mov
mov
in
sbb
jae
sbb
sbb
xor
mov
icebp
xor
mov
rcll
push
insb
stos
cs
xlat
stc
fldcw
cmpsl
mov
dec
rclb
fcomps
leave
loope
test
xor
jge
aam
inc
pusha
and
adc
stc
inc
xor
dec
outsl
test
inc
dec
pop
xchg
aad
test
shrb
mov
gs
push
mov
loopne
inc
clc
out
insl
xor
rcrl
mov
mov
mov
ljmp
push
mov
adc
mov
xchg
icebp
lds
ret
mov
int3
mov
inc
and
xor
or
daa
gs
dec
jno
rclb
lock
adc
jge
pop
testl
sahf
rcr
nop
lea
andw
or
cmc
lods
lea
xchg
adc
gs
sub
add
dec
pop
fwait
inc
sbb
fdivs
clc
scas
push
mov
sbb
aaa
out
je
fdivrs
push
push
sub
repnz
mov
mov
jb
addl
and
ret
in
or
xlat
test
xor
add
or
fiadds
es
out
int3
test
je
lret
pop
ret
cmp
push
and
lock
jp
push
push
iret
stc
outsb
mov
loopne
jns
rclb
cmp
pop
cmpsl
imul
pushf
adc
add
and
adc
inc
mov
jbe
aaa
xor
test
repnz
mov
adc
jae
addr16
push
add
in
ficoml
lods
lcall
pop
js
inc
loope
aam
adc
sbb
xor
adc
mov
cld
inc
fildll
jns
in
mov
cltd
cmp
jbe
push
xchg
enter
imulb
not
sbb
inc
sub
mov
cmp
pop
lcall
nop
lods
mov
std
cmp
mov
push
scas
cmp
jbe
jmp
lock
push
loopne
or
sbb
cmp
add
and
mov
mov
sub
dec
mov
jbe
stos
pop
in
adc
sub
cmp
scas
jecxz
mov
push
repnz
mov
fdivrs
mov
sub
dec
mov
mov
xchg
jb
mov
jl
add
rolb
dec
adc
cmp
stos
sub
sbb
sbb
stos
push
idiv
mov
andl
dec
iret
js
mov
jg
pusha
dec
and
mov
push
xor
cmp
sbbl
push
dec
inc
nop
lea
sub
ja
test
mov
arpl
enter
adc
subl
jbe
adc
cmp
sub
jmp
xchg
out
fdivrl
jle
loop
xchg
inc
out
adc
jecxz
jge
sbb
lds
sbb
or
daa
inc
sub
les
dec
add
jno
push
xor
es
je
or
xorl
arpl
ds
insl
pop
mov
hlt
shll
add
cmp
loop
mov
dec
out
push
popl
mov
in
sahf
aam
scas
test
or
mov
mov
sti
lret
repz
and
shrl
inc
sarl
jp
popa
in
enter
int
lret
jecxz
loop
movsb
dec
negb
mov
ds
iret
bndldx
mov
movsl
rclb
inc
stos
aas
sbb
in
add
dec
mov
call
pusha
leave
mov
cwtl
mov
pushl
pushw
cmc
int
jmp
push
pop
push
bound
jge
jbe
dec
cmp
pop
push
test
or
add
daa
test
iret
and
idivl
mov
movsl
popa
xchg
push
and
xchg
scas
mov
movsl
fdivrl
jle
xchg
mov
pusha
lret
or
or
subb
int
mov
xchg
stos
popf
add
adc
jno
jmp
das
cmp
sub
xchg
adc
mov
or
inc
andb
xchg
pop
mov
fs
adc
por
lret
push
lret
lret
mov
add
add
adc
lcall
loopne
xchg
aam
sbb
push
dec
mov
test
movsb
cli
mov
aam
inc
push
stos
imul
jno
push
aam
or
add
sub
add
fbstp
cltd
dec
mov
mov
cwtl
sbbb
cwtl
pop
inc
fisubl
pop
xor
adc
mov
cmpsl
dec
je
xchg
add
mov
stos
cmpsb
cmpsl
mov
cwtl
mov
jb
or
push
pushf
ror
push
or
xor
shr
mov
mov
int3
or
int
sbb
shlb
xor
stos
dec
sub
fcompl
leave
and
das
ret
sbb
mov
jns
mov
test
push
lea
mov
push
sbb
cs
rorb
mov
xor
and
iret
jne
adc
dec
cmpsb
and
jno
push
iret
mov
fwait
mov
mov
ja
test
mov
das
popa
pop
les
or
xchg
mov
test
push
test
arpl
cmp
xor
sub
xchg
sbbb
aas
adc
aaa
and
test
jp
stos
outsl
push
std
add
test
in
popa
movsl
push
ja
xchg
xlat
inc
fildl
add
mov
xor
jnp
stos
jno
dec
cmp
cmp
or
pop
hlt
cmp
mov
test
loop
add
sahf
sti
mov
xor
push
in
mov
push
xor
xor
add
sbb
cmp
rcl
dec
mov
inc
push
stos
stos
fbstp
jg
cmp
jo
int
xor
sbb
stc
ds
in
shlb
sbb
pop
nop
loop
test
pop
adc
mov
pushf
ljmp
add
mov
xchg
dec
inc
pop
xor
shll
xchg
xchg
hlt
lea
fs
dec
cli
jp
jp
pop
or
or
mov
stc
add
mov
or
std
orb
jl
in
cmpsb
data16
out
push
and
mov
dec
dec
add
cmc
cmp
xor
gs
dec
push
mov
pusha
cmpsb
cwtl
test
cltd
dec
mov
inc
ficompl
push
lahf
mov
stos
or
push
fs
and
mov
mov
lock
std
mov
and
dec
fbstp
ds
inc
pop
push
cmp
inc
pop
imul
ficoms
cli
adc
out
mov
jne
nop
add
into
pushf
and
jg
jl
sub
jnp
cmovge
adc
test
ljmp
stos
sub
or
addr16
jl
aad
mov
aaa
movsb
adc
cmp
stc
sub
dec
std
shrb
mov
jbe
pusha
pushf
es
jno
fs
sahf
xchg
lds
cmp
daa
sbb
mov
ja
xchg
jmp
sahf
lea
data16
pop
inc
or
popl
and
mov
insb
xor
ret
aas
aam
adc
inc
addl
fdivs
jge
mov
pusha
mov
xor
adc
jns
pop
mov
out
add
adc
mov
and
dec
in
loopne
mov
lcall
dec
jmp
add
leave
les
mov
jbe
xchg
scas
dec
inc
jno
jbe
jb
xchg
in
sahf
imul
popf
or
ficoml
rol
jp
les
test
pop
sbb
insb
add
sub
xchg
jg
cmpsl
and
js
push
test
in
mov
cmp
mov
xchg
jae
enter
dec
mov
jg
mov
enter
aad
jbe
mov
mov
pop
iret
adc
loop
and
cltd
daa
fdivs
sbb
xor
loopne
mov
xor
repnz
enter
fldcw
adc
or
lods
imull
mov
or
xchg
les
lds
push
push
or
fwait
adc
adc
mov
addr16
daa
mov
jne
sbb
int3
in
push
in
cld
and
sub
mov
jg
jecxz
outsl
cs
or
loopne
dec
lret
cmp
rolb
and
mov
push
insb
jl
mov
aam
sbb
cmc
jno,pt
iret
pop
jno
inc
jns
inc
jae
push
mov
fidivrs
les
cmp
mov
cwtl
or
sbb
xchg
jae
fldt
cld
mov
test
lret
test
mov
dec
into
repnz
icebp
pop
inc
inc
add
mov
push
xchg
pop
shll
shlb
push
mov
ja
cmp
mov
cli
dec
inc
dec
adc
rcll
pop
leave
aad
push
iret
cmp
out
jo
pop
je
and
mov
clc
pop
out
shrb
xchg
sbb
xor
mov
aas
jge
pop
or
xor
mov
dec
adc
loope
fistpl
scas
mov
mov
cmp
pushf
cli
pop
inc
xchg
iret
dec
pop
mov
push
lret
sti
fnstenv
das
test
jbe,pt
pop
sbb
pop
mov
and
lds
dec
ds
jle
pop
mov
lods
xchg
pop
dec
das
popa
cmpsl
call
cmpsb
popa
call
cmp
mov
mov
dec
jmp
repz
sti
inc
or
jecxz
loopne
cmc
adc
in
inc
mov
pop
std
into
int3
or
rcrl
lcall
push
push
clc
cmpsl
cwtl
mov
bound
mov
and
dec
push
movsb
popf
cmp
and
loop
ja
push
pop
push
fistpl
push
jg
leave
les
stos
mov
bnd
addr16
arpl
inc
mov
dec
jge
jns
jg
mov
shlb
and
addr16
push
jmp
cwtl
dec
fstl
or
loop
popa
sahf
xchg
js
inc
and
cmp
mov
fldcw
lret
jle
cli
inc
jge
mov
pop
mov
fsubl
cmp
imul
pop
sub
enter
testb
mov
xor
fpatan
ss
sbb
inc
aas
scas
xor
jl
insl
data16
mov
mov
insb
sub
cmpsl
or
ret
add
jg,pt
push
dec
and
xchg
adc
in
pop
popa
aaa
in
jle
jp
shlb
mov
adc
cmp
out
into
ss
fcoml
push
ja
cmc
dec
cld
ficompl
out
arpl
mov
xor
sti
pop
pop
push
mov
mov
jg
fistpll
movsb
sbb
jnp
xchg
ja
add
sub
inc
aaa
clc
lods
sub
push
rol
in
cmpsl
fadd
ret
xor
pop
mov
cmp
sbb
dec
push
lahf
aad
sbb
cmpsb
jecxz
cli
rol
cmp
mov
xchg
and
cmp
out
test
iret
les
js
js
mov
ret
and
imul
mov
fistpl
cmp
and
test
mov
inc
sti
or
mov
out
stos
popf
decl
into
repnz
icebp
push
jmp
mov
subl
mov
popf
loop
and
push
jl
cmpsb
adc
stc
xor
insl
cltd
sbb
inc
sbb
imul
das
jo
jns
mov
gs
adc
pop
and
sbb
jg
aad
in
jo
out
inc
cmpsl
in
mov
push
mov
mov
push
imul
xlat
xor
stos
mov
rcll
sub
xlat
mov
loop
xor
dec
pop
add
and
fistpl
je
jae
inc
test
fiadds
call
sub
arpl
loop
and
cmp
aaa
insb
jb
mov
mov
cmpsb
dec
cmp
mov
add
in
iret
ljmp
xlat
mov
xorb
es
cmp
inc
mov
popf
or
sahf
xlat
addr16
leave
pop
pop
jne
cmp
lods
aaa
dec
imul
data16
pop
mov
pushf
outsl
test
cmp
xchg
xor
inc
lret
mov
jns
in
leave
and
and
inc
sub
adcl
jbe
mov
add
xor
push
test
dec
cmp
xchg
adc
daa
pop
loopne
enter
dec
or
std
mov
nop
out
in
pusha
and
ret
fwait
add
fdivs
and
push
add
and
mov
xor
jge
cld
scas
jne
xchg
pushf
lods
insb
push
adc
cmp
ret
mov
iret
jge
lods
fst
mov
push
icebp
jb
and
mov
shlb
test
and
pop
cmp
dec
mov
or
cmp
dec
incb
loopne
sarl
mov
lea
sbb
shlb
ffree
jmp
enter
rorb
mov
sbb
push
arpl
loopne
mov
add
shr
in
push
popf
mov
sbb
mov
sbb
dec
inc
push
jns
into
stos
push
and
rorb
bound
mov
out
rol
xchg
stos
popa
lds
and
pop
sub
and
fsubs
add
push
inc
add
les
sub
imul
cmpsb
ret
iret
test
andb
inc
outsb
and
push
cmp
pusha
pop
sub
imul
pop
daa
rolb
cltd
add
shrl
and
and
pop
inc
cmp
aas
daa
pop
cmp
scas
mov
mov
test
sub
std
cmc
mov
mov
xor
or
call
ffree
add
jg
mov
add
jmp
adc
fstl
cmp
adc
inc
jg
xchg
pop
outsl
xlat
jbe
aad
xchg
enter
mov
bound
jnp
jbe
add
mov
xor
mov
push
add
mov
mov
stc
cmp
in
out
pop
jl
shr
inc
mov
push
sbb
cmpsl
xchg
jb
jb
fsubs
notb
sbb
je
xor
cs
xor
cmp
mov
mov
xor
ret
jo
jmp
xor
xchg
pop
pop
mov
xchg
pop
daa
shlb
inc
les
and
cmpl
sub
mov
jae
call
mov
mov
inc
lods
addr16
sub
aam
and
inc
dec
push
dec
jbe
xor
rorl
in
or
sahf
test
xor
loopne
mov
push
out
and
sub
test
out
xor
insb
adc
ss
je
sbb
shrl
add
jp
sbb
adc
cli
mov
xchg
sub
out
sti
dec
mov
notb
int
xchg
int
imul
sbb
aad
daa
cmp
outsb
xchg
mov
jle
test
or
movsl
roll
in
in
fstpt
loop
std
hlt
pop
and
repz
rorb
mov
mov
pop
jne
aaa
ja
mov
sahf
jecxz
stos
push
pop
insb
std
insl
or
adc
rcrl
lret
pop
fsubrl
icebp
int
sbb
dec
mov
js
gs
xchg
push
hlt
push
icebp
mov
insl
mov
addl
add
adc
iret
lret
push
mov
out
je
fmull
mov
mov
aam
jae
out
data16
out
push
mov
test
ljmp
outsb
repz
aaa
jl
xor
jecxz
adc
sub
sub
dec
sti
push
inc
adc
aad
add
pop
ret
dec
int3
loope
pop
movsl
sub
lahf
adc
add
cwtl
dec
fld
in
les
jecxz
ljmp
add
mov
inc
mov
shrl
fs
lods
iret
mov
mov
sub
leave
push
mov
clc
ret
inc
imul
lcall
mov
fwait
insl
imul
pop
lcall
mov
inc
aas
sbb
cmc
scas
inc
stos
and
lahf
lret
loope
inc
adcl
sub
sub
les
pop
mov
push
jae
adc
sbb
cwtl
push
xor
pop
mov
push
insl
pop
movw
and
rcrl
and
mov
xor
popa
or
stos
dec
movsl
add
call
cld
notl
pop
fistpl
mov
mov
loop
insb
or
mov
add
cmp
lock
sbb
sbb
pop
clc
push
jp
xor
cmp
addb
shlb
mov
in
or
mov
and
sbb
adc
and
adc
js
in
aas
or
pop
insl
js
icebp
and
and
fsubrs
test
inc
shrb
pop
or
or
jns
test
xlat
mov
jecxz
pushf
dec
aad
jp
sub
jb
mov
out
and
xor
pop
aam
push
test
imul
movsb
fisttpl
shr
pop
pop
shrb
pushf
pop
cmp
inc
jecxz
xor
and
test
lret
or
orb
out
inc
and
dec
test
fisubrl
arpl
mov
addr16
into
dec
push
adc
adc
repnz
push
add
pop
inc
ret
add
test
fs
insl
xchg
jne
stc
je
enter
cmp
repnz
mov
adc
out
negb
enter
pop
mov
adcb
sub
enter
aaa
js
ret
push
mov
push
fwait
into
pop
pop
xor
dec
ds
sbb
xchg
repnz
add
ljmp
lcall
aam
cwtl
adc
cmp
pop
mov
pop
daa
and
cmp
movsb
adc
cmp
stos
sub
orl
and
repnz
jb
movsl
push
mov
ret
push
mov
push
out
mov
mov
imul
in
push
jnp
cmp
leave
add
jg
shrl
test
pop
adc
dec
add
sub
out
aas
xchg
popa
fcmove
push
jne
fldl
lods
jns
cltd
popf
fstl
push
dec
or
insb
shr
push
mov
fs
cwtl
lahf
je,pt
rcl
xchg
adc
push
jge
jno
push
inc
mov
adc
add
lods
ds
push
pop
cmp
call
cbtw
sub
dec
int
jb
add
sub
adc
inc
lods
xor
hlt
cmc
hlt
pop
data16
movsb
test
dec
push
out
jp
pop
scas
fstpl
insb
hlt
leave
into
xchg
sub
leave
inc
imul
jg
out
repz
icebp
pop
scas
pop
xchg
jbe
data16
cmp
jmp
mov
fdivrs
jg
popf
mov
aas
and
orb
icebp
ret
filds
repnz
roll
push
push
pusha
stos
daa
adc
es
cmpb
hlt
out
jno
repz
insb
add
cmpsb
mov
inc
pop
push
push
pop
shll
clc
xchg
clc
add
push
pop
add
mov
imul
popf
in
pop
mov
fsubp
insb
jl
rorb
in
xchg
and
movsl
mov
push
sbb
mov
ljmp
push
fucomip
sub
mov
test
add
inc
xchg
popf
xchg
dec
add
mov
cwtl
rcrb
xchg
mov
dec
ja
sti
lea
scas
sub
xchg
rcr
fdivrs
ret
inc
fldcw
inc
jo
rcrl
jno
orl
xor
cltd
cmp
mov
ds
jae
in
push
aad
arpl
push
xor
push
mov
hlt
sti
jmp
jle
jle
mov
mov
lcall
sub
ds
mov
dec
lods
imul
dec
pop
inc
in
xor
pop
xchg
xor
jl
jge
xchg
stc
xchg
xor
sti
inc
mov
jecxz
fiadds
push
pop
and
dec
lahf
shll
adc
or
lret
adc
cwtl
in
stc
movzwl
cld
in
cmpsb
ror
jne
nop
aad
std
jl
and
arpl
push
test
dec
sub
adc
popa
lret
aas
sub
mov
int3
pop
push
jle
push
out
repnz
in
pop
loop
mov
mov
jae
in
xor
mov
mov
and
cmp
test
inc
xchg
mov
mov
mov
sub
aad
or
pop
test
loopne
les
add
sub
repnz
loope
adc
mov
imul
sub
jmp
adc
cmova
repnz
sbb
add
lods
pop
xchg
sub
jb
jge
movsl
jnp
push
pop
addb
js
mov
aad
scas
mov
push
mov
xchg
es
jp
gs
or
lcall
lea
test
in
add
int
movb
loopne
push
movsb
add
mov
adc
push
jg
imul
jge
mov
sub
lea
leave
ja
addl
and
dec
cmp
out
popa
cmp
push
cwtl
add
push
jne
pushf
xchg
jmp
dec
dec
das
mov
les
xchg
mov
xor
jno
test
jne
outsb
sbb
std
mov
push
inc
sar
lret
xor
pop
mov
mov
adc
cld
insb
mov
or
faddp
pop
lahf
push
fstpl
fdivp
sti
imul
sub
out
pop
idiv
jns
les
nop
fxch
in
jle
pop
or
mov
xchg
mov
xor
pusha
loope
inc
add
inc
icebp
xchg
sub
stos
ljmp
sub
add
sub
mov
jge
sbb
out
in
inc
sbb
xlat
adc
push
cmp
add
mov
sbb
pushf
dec
inc
pop
add
inc
lods
dec
into
sbb
inc
inc
push
arpl
out
std
rcrl
rcr
lea
hlt
repnz
cli
adc
xor
js
sub
inc
sub
cmc
cmpsb
sbb
lods
jle
xor
dec
stc
mov
loope
cmp
popa
sbb
in
js
dec
push
fs
shll
xchg
pop
in
jb
push
mov
stos
cmpsl
mov
sbb
push
cmpsb
pusha
popf
mov
jmp
mov
cs
push
mov
sbb
pop
mov
movsb
nop
fcmovb
daa
xchg
iret
jns
aam
cmp
scas
and
les
bound
leave
dec
push
ret
or
ds
push
mov
sub
sbb
loope
cmp
lods
dec
clc
dec
xchg
mov
shlb
jmp
push
adc
xchg
lret
ret
insl
inc
sbb
mov
mov
cmpsb
or
cs
dec
xchg
xchg
insl
mov
adc
cli
mov
inc
adc
stos
js
pop
aam
sub
into
mov
fmuls
mov
leave
push
mov
in
or
pop
and
ja
mov
mov
mov
jo
outsl
in
sahf
aad
int
jb
popa
and
push
ds
movsl
insl
xor
jne
rorl
pcmpgtw
add
ds
mov
and
sub
mov
pop
xchg
mov
out
xchg
mov
sbb
push
js
cwtl
mov
xorw
mov
insl
cld
mulb
jb
pop
dec
cld
cld
inc
jo
scas
add
test
std
jp
sub
call
jno
add
fiadds
inc
jmp
push
add
stos
sbb
loopne
xchg
lahf
mov
into
push
sub
fimull
fdivrs
hlt
in
ss
mov
add
out
adc
sbb
lds
cmp
lret
lret
mov
add
fldenv
lret
cmp
pop
out
dec
dec
push
or
lret
rolb
das
adc
add
jnp
mov
sbb
push
cmp
mov
rcrb
adc
into
cmp
pop
mov
dec
rcll
push
xchg
xchg
pop
mov
xchg
dec
shrl
iret
inc
mov
sbb
cwtl
fsubs
cs
fidivl
mov
pop
jno
dec
and
out
xor
inc
addl
enter
je
inc
xchg
and
push
inc
mov
ret
insb
mov
add
lcall
sub
pop
loope
ret
add
jg
jae
mov
fisttps
les
jge
cli
xchg
call
or
sub
jbe
lods
movsl
outsb
mov
push
xor
cmp
lods
stos
push
mov
mov
jle
sub
jmp
cmp
ret
cmpsb
clc
ss
or
jae
push
xchg
in
adc
insl
mov
jbe
pop
xchg
xchg
orl
mov
ss
insl
xchg
dec
movsl
lret
lret
sub
sub
push
inc
int
lret
mov
setl
jne
cmp
mov
jb
xor
jns
push
in
inc
fadd
sub
lea
inc
pop
cmpsb
aad
rcrl
sbb
ret
jecxz
pop
mov
xchg
xor
enter
cmp
and
sub
outsb
stos
das
pop
aam
xor
jecxz
adc
sub
sarb
mov
pop
cmpsb
test
add
jmp
cld
adc
add
mov
fnstcw
inc
xchg
xchg
push
movsl
inc
pusha
pushf
xchg
dec
mov
add
popa
outsb
push
mov
fistps
orl
iret
test
adc
je
inc
aas
push
mov
in
fisubrl
fsubs
enter
dec
jnp
dec
sbb
cmpsl
jp
mov
test
or
jle
sahf
push
addr16
lds
mov
pop
fwait
gs
jb
jl
add
mov
popf
push
jmp
xorl
adc
popf
adc
cmp
test
fnsave
js
sbb
into
dec
add
pop
fisubrl
cli
fwait
sub
mov
pop
dec
andb
and
xchg
mov
mov
imul
add
mov
sbb
pop
daa
mov
sahf
jg
inc
jmp
lret
and
xchg
and
cmpsb
xchg
cmp
call
jno
iret
clc
mov
les
cmp
cli
cwtl
or
jge
bound
nop
cld
fisttpll
jge
inc
xor
js
sub
mov
fs
movsl
add
adc
and
push
jg
dec
ljmp
push
push
jbe
imul
cmpsb
adc
repnz
lret
out
into
loope
add
add
into
jmp
idivb
pop
add
mov
lcall
push
shlb
dec
add
loopne
iret
stos
sbbb
xchg
adc
rcll
sahf
mov
cmp
or
xchg
push
daa
ret
les
hlt
test
add
dec
or
sub
push
cmc
add
push
sub
add
mov
cwtl
fwait
add
xor
sbbl
push
out
fidivs
test
push
dec
rolb
add
jmp
adc
sbb
mov
dec
cli
aam
push
cmp
sbb
adc
scas
int3
in
jle
lds
scas
test
mov
out
test
negl
ja
pop
or
enter
movb
fsubl
xchg
shrl
imul
dec
push
inc
adcb
cmpsb
sbb
adc
dec
gs
out
and
jae
xlat
pop
dec
jl
repnz
ss
shl
xor
sub
add
fucomi
pusha
xchg
stos
push
xchg
or
popl
xchg
adc
lock
xchg
jge
stc
push
movsb
pop
out
dec
andl
insb
sbbb
fabs
shlb
and
jne
pop
sarb
ljmp
scas
gs
add
sub
ja
iret
cmp
sbb
xlat
push
pushf
push
cmpsb
mov
imul
ret
pop
or
push
cltd
push
rclb
dec
mov
cmp
xor
pusha
in
lahf
fwait
je
push
imul
mov
loopne
xor
jns
adc
cmpl
add
movsl
mov
popa
add
in
push
jns
mov
add
xor
mov
test
add
cmp
sahf
jnp,pn
sbb
fsts
jne
xchg
dec
mov
pop
dec
push
xchg
lcall
mov
scas
arpl
fcomps
in
repz
popa
jecxz
dec
xchg
jo
cli
push
and
adc
pop
ret
cmpsb
ljmp
mov
nop
jecxz
or
xchg
lret
ror
imul
shlb
shrl
orl
dec
outsl
jae
cmp
mov
sub
rorb
jle
lods
mov
mov
sbb
shrl
mov
scas
cmp
je
inc
mov
insl
and
mov
jb
loopne
xor
cwtl
es
insb
sbb
xchg
shr
jo
adc
lods
sti
movsl
xchg
mov
mov
cwtl
test
adc
push
and
imul
xorb
jae
and
or
lock
lea
outsb
inc
or
sarl
nop
xchg
outsl
xor
mov
cmpb
mov
repnz
or
sub
ficoml
outsb
pop
xor
sub
std
jl
jle
stc
pop
sub
jns
ss
push
add
xchg
mov
fimuls
cld
cmpsb
fld
ss
divb
adc
xorl
push
mov
jae
gs
mov
ss
adc
icebp
ss
xchg
fdivs
dec
iret
int
or
fcom
dec
pop
clc
add
insb
jno
data16
jns
cmc
fldl
cmpsb
adc
or
scas
push
fnsave
mov
cmp
xor
push
mov
mov
mov
aam
mov
lods
xchg
je
leave
stos
lea
sub
pop
out
mov
add
xor
in
add
pusha
add
stc
mov
dec
loope
and
fldt
andl
scas
add
test
cmp
popf
aaa
scas
mov
xor
push
cmp
mov
sbb
jl
jg
ljmp
movsb
xchg
push
jg
dec
sub
xchg
lock
push
push
movsl
lock
jmp
arpl
jmp
xchg
ret
dec
fs
adc
add
mov
sub
mov
inc
cmc
xchg
mov
push
mov
and
stos
sbb
sbb
mov
fidivl
xor
xorb
in
js
dec
add
mov
mov
pop
or
loop
and
xchg
test
out
stos
xchg
xchg
ljmp
rolb
push
or
jp
es
incb
cmp
xchg
sbb
shlb
ret
ret
ret
pop
cmp
xchg
push
pushf
mov
inc
dec
dec
je
out
pop
out
jo
rolb
or
call
mov
data16
xchg
pop
pop
dec
add
dec
cmpsl
cmpsl
mov
aaa
jmp
cltd
push
mov
jmp
pop
mov
shrl
or
data16
ss
add
rcll
inc
idivl
in
mov
sbb
jmp
add
je
addr16
cmp
xchg
mov
gs
test
push
adc
mov
inc
jp
adc
xor
jb
lods
cmp
sub
cmp
js
insb
jle
xchg
popf
addl
xchg
or
mov
fdivrl
test
loope
cmp
lret
je
push
push
jne
xlat
insl
les
sub
ret
mov
adc
mov
mov
xchg
fnsave
dec
push
sbb
jle
insl
pop
xchg
mov
iret
mov
sub
hlt
imul
lret
or
fstp
loopne
faddl
and
hlt
ds
fildll
cmp
or
shlb
mov
adc
jae
insb
sub
mov
fs
mov
pop
sbb
dec
mov
and
sahf
sbb
xor
push
gs
xchg
adc
mov
cltd
loope
test
xor
xchg
int3
and
add
ljmp
inc
inc
jecxz
push
sbb
cs
adcl
das
mov
shl
cmp
rolb
add
cmp
popa
jecxz
rorl
ficompl
pop
inc
xchg
loop
sub
jp
mov
rolb
pushf
scas
mov
mov
mov
scas
cld
adc
int
pusha
lds
inc
cmp
mov
icebp
push
and
fldl
fisubs
ret
nop
shll
add
lret
mov
bound
les
les
mov
xchg
popa
sbb
adc
jmp
call
dec
cltd
fwait
jbe
mov
push
lods
arpl
scas
and
push
cmp
iret
xchg
inc
cmc
cmp
dec
xor
repz
jle
sbb
xchg
jnp
lds
out
mov
cmovl
sbb
aaa
inc
shll
cwtl
add
push
fcomps
cs
xchg
sbbb
or
xchg
lret
add
rolb
loopne
fdivl
or
lea
jge
mov
add
dec
jp
add
dec
mov
or
lods
pop
inc
inc
mov
fucomi
xchg
pop
lret
mov
adc
fnstsw
sti
mov
enter
ss
mov
jno
ret
lret
std
adc
mov
xor
pop
insl
jo
test
push
push
cwtl
and
shlb
lock
out
or
aad
loope
cltd
pop
in
hlt
jg
inc
mov
aad
jae
pop
adc
inc
push
mov
mov
mov
mov
inc
dec
xchg
lcall
pop
xlat
jmp
xor
lods
inc
sub
sub
loop
cwtl
jge
aaa
lock
stc
lods
xor
shll
mov
aas
jl
mov
or
ret
mov
jge
test
xor
jecxz
es
repz
xor
nop
pop
adc
mov
jb
dec
push
sub
jl
adc
mov
add
mov
nop
pop
sub
adc
push
into
pop
pop
ljmp
popf
mov
dec
cmp
jp
add
int3
xorl
xchg
dec
mov
push
data16
fdivl
mov
cmpl
xchg
movsl
fistpl
sub
fiadds
lret
mov
imul
fisttpl
loope
mov
dec
fcompl
push
push
lret
fld
pop
xchg
push
jb
or
int
loopne
cs
xor
scas
mov
inc
cmpsl
scas
cld
fistps
xor
xor
jge
fsub
fldt
push
jecxz
popf
xchg
lds
sub
jecxz
pop
shl
adc
jo
sub
das
lea
lods
daa
pop
jmp
jb
iret
push
loope
ja
mov
mov
inc
ret
scas
sbb
inc
arpl
jl
pop
jae
fbld
sbb
add
push
enter
xor
test
sti
adc
cmp
flds
and
cmp
pop
sub
or
and
or
dec
movsb
lret
sbb
in
loope
int
aad
mov
mov
xorb
fcomip
pushf
or
insb
fstpl
mov
inc
fisttps
sub
push
adc
std
ret
sbb
ss
ja
mov
push
insl
lods
int3
jge
scas
test
loopne
jb
cli
ret
sbb
adc
sti
xor
int
jb
mov
dec
les
dec
out
movsl
mov
scas
js
jp
roll
movsb
and
and
adc
dec
mov
std
jecxz
lret
lea
in
arpl
xchg
xchg
mov
data16
push
imul
adc
or
inc
loope
push
fdivl
adc
inc
lcall
into
xchg
adc
or
and
mov
cmp
lahf
cmp
dec
cmp
lret
addr16
les
andb
es
dec
mov
mov
cmpsl
dec
repnz
add
fs
lea
inc
jb
fmull
iret
xor
jae
cs
inc
adc
bound
imul
outsb
pop
mov
pop
add
sbb
rclb
ja
imul
lahf
sbb
test
addl
loop
lea
int
mov
mov
mov
enter
sub
orl
imulb
mov
dec
cwtl
jnp
inc
cmc
stos
jbe
xchg
xchg
sbb
and
std
cltd
jmp
pop
into
sahf
xchg
cmpsl
and
out
repz
loopne
mov
and
out
cli
loop
insb
pusha
mov
mov
sbb
out
jl
fwait
cmc
sbb
mov
test
aam
xor
lods
adc
or
xor
sbb
push
rcr
out
xchg
fisubrs
lahf
jl
bswap
mov
push
pop
mov
pushf
dec
leave
leave
sub
add
xchg
xchg
xor
clc
xor
jne
int3
stos
lret
cmpsl
rclb
lods
jp
push
dec
ljmp
pop
adc
arpl
and
outsb
lret
insb
bound
sub
jae
js
loop
pop
lahf
inc
cld
xchg
inc
cmp
das
mov
dec
inc
mov
lds
out
jbe
and
mov
repz
gs
and
mov
add
jo
icebp
inc
lock
or
jmp
and
mov
lods
cwtl
sbb
sub
jmp
jnp
inc
loope
ret
jb
xor
xor
and
add
popf
inc
inc
xchg
loop
sub
insb
aaa
push
mov
or
xor
js
cmp
mov
add
cmp
mov
pop
addl
aam
adc
xchg
aad
sbb
jns
dec
dec
or
adc
add
mov
xlat
sub
push
jle
mul
lret
inc
push
in
push
xchg
sti
add
ds
add
in
out
fcomps
inc
in
adc
fiadds
mov
insl
jb
lea
jne
loopne
or
cmp
add
pop
lea
xchg
xchg
or
rolb
xchg
les
xor
lds
movsl
lock
jno
fcomps
and
cld
out
dec
cld
out
outsb
jae,pn
ljmp
adc
pop
push
repnz
mov
mov
ljmp
loopne
or
pop
sbb
xchg
pop
jo
add
push
and
mov
and
std
test
push
and
mov
mov
jecxz
xchg
mov
and
inc
xchg
lahf
lea
out
loop
movb
mov
sbb
jne
inc
dec
pmulhuw
mov
loope
fldcw
cmpsl
rcr
outsb
daa
cmc
or
in
inc
sub
cmpsl
push
xchg
and
jle
test
ljmp
fdivrs
cmc
inc
jp
xor
sbb
xlat
add
jmp
std
pusha
inc
mov
xchg
enter
mov
mov
cmp
fstpt
aaa
out
jecxz
mov
push
movsb
enter
push
xchg
mov
lcall
sub
or
in
testl
inc
lret
pop
fldenv
xor
mov
stos
xchg
push
addr16
cld
push
filds
testl
arpl
mov
in
icebp
data16
inc
cwtl
je
ja
stos
mov
and
and
in
sbb
mov
data16
jecxz
push
jnp
xlat
ds
add
in
mov
iret
mov
pushf
insl
das
sbb
int3
iret
pop
mov
clc
or
das
push
shl
bound
out
jae
or
jno
pop
cwtl
lods
pop
push
mov
push
mov
mov
fsubrp
xor
jmp
stos
shll
mov
sbb
mov
mov
xor
shrb
stos
jmp
adc
imul
push
mov
lods
cmp
cld
dec
pushf
imulb
mov
sbb
sbb
nop
je
or
je
push
jno
repnz
xchg
ret
xchg
andl
movsl
stos
sub
das
jo
outsl
sbb
mov
test
mov
scas
mov
dec
jne
xor
jge
mov
loopne
pop
pop
jp,pt
clc
leave
test
imul
mov
sbb
adc
add
pop
mov
shlb
pop
mov
inc
jae
lret
cmp
mov
addr16
test
xor
mov
xor
out
shll
into
cs
daa
xor
test
dec
sarl
in
imul
fwait
aaa
or
cmp
imull
xor
loop
in
sub
add
andl
sub
sub
xor
imul
pushf
stos
test
sub
idivb
aad
push
mov
fbld
ljmp
push
int
mov
push
nop
or
mov
cmc
and
jge
stc
sahf
pop
and
jecxz
das
mov
in
ss
movsb
pop
pop
in
dec
fstps
test
aaa
sub
mov
enterw
test
stc
sub
xchg
pushf
lcall
pusha
out
sub
push
push
and
daa
sub
call
shl
ja
sub
cmp
mov
dec
aad
pop
and
lret
mov
xor
cs
cmp
sbb
jns
sbb
aad
pop
pop
pop
fistpll
xchg
cmp
mov
or
xor
mov
and
loope
dec
das
xor
cltd
fildl
sub
inc
pop
dec
inc
jnp
jne
in
rcrl
fwait
jae
loope
in
mov
jb
add
xchg
or
xor
movsb
mov
stos
add
or
dec
test
add
xchg
push
cmp
lret
jge
mov
cmp
lods
pushf
xchg
xchg
dec
loope
lods
jp
les
mov
add
xchg
dec
pop
fwait
shl
daa
and
fucomi
ret
das
fnstenv
lret
in
lahf
sub
mov
jbe
inc
push
push
cli
inc
mov
xor
push
movl
sub
repnz
pop
hlt
out
push
jmp
int3
xchg
mov
mov
imul
popa
and
push
xchg
cmc
dec
mov
mov
mov
nop
cwtl
cmp
inc
mov
add
sub
les
dec
dec
inc
js
adcl
pop
fidivrl
mov
fucomip
aaa
mov
cmp
shll
ret
jp
or
cld
aam
ret
xchg
add
scas
sbbb
mov
pop
sub
stos
jmp
aas
in
movsb
fistps
mov
mov
or
int3
insb
mov
in
fnop
fimuls
mov
test
cs
adc
or
nop
jno
jnp
jle
out
mov
call
mov
aas
frstor
jmp
dec
lea
rolb
xchg
xchg
sbb
rcr
data16
ja
bound
sbb
cmpsl
mov
pop
push
andl
mov
mov
push
sbb
hlt
js
cmp
aaa
mov
xchg
cltd
adc
adc
xchg
mov
mov
imul
mov
jb
leave
lds
shlb
mov
imul
push
std
dec
imul
and
xchg
xchg
insl
cmp
aas
scas
mov
lea
push
daa
inc
inc
ficompl
pop
xchg
mov
sbb
cmp
or
xchg
mov
inc
adc
push
lcall
push
dec
xchg
fistps
aas
or
cmp
lahf
stc
and
shrb
stos
clc
lahf
and
popa
pushf
or
mov
sbb
sub
inc
add
les
jbe
jbe
add
mov
mov
push
sub
mov
stos
xchg
sbb
inc
dec
pop
negl
test
xor
ja
imul
xchg
cmc
add
jns
add
pop
lahf
cmc
jo
mov
cmp
push
dec
fldl
and
das
mov
imul
sub
inc
pop
test
add
movsb
pusha
fildll
lcall
inc
int
cmp
ja
push
stos
cmp
add
cmp
loop
pop
mov
testb
std
insl
sub
mov
inc
jae
lret
cmp
sarl
mov
cmpb
push
mov
in
inc
pop
dec
pop
and
movsb
pop
repz
loope
in
outsl
mov
hlt
outsl
and
movsl
test
lods
notl
push
cwtl
pop
in
add
inc
xchg
xor
cmp
enter
aaa
aam
mov
cmp
jbe
into
sbb
out
bound
movsb
pop
sub
rorl
test
dec
inc
aam
xchg
movsb
mov
inc
sbb
into
xchg
mov
or
jno
std
js
xchg
xor
lods
scas
mov
push
push
add
adc
adc
or
mov
jns
iret
sub
adc
sbb
pop
fbld
std
in
adc
cli
jp
push
fmulp
xor
inc
ss
mov
xchg
call
aas
pushl
orb
cpuid
negb
xchg
stos
lds
pop
clc
inc
rolb
ljmp
mov
adcb
aam
fsubp
inc
fidivs
add
cmp
xchg
in
sbb
adc
in
lods
jmp
sub
int
ror
xlat
mov
sub
add
push
cld
and
aam
mov
pop
ja
cmp
fwait
jg
inc
add
dec
out
pop
push
jg
lods
sub
cmp
sbb
xor
inc
or
xchg
pop
dec
or
sub
sub
push
imul
cmp
mov
fistps
mov
daa
mov
mov
jnp
inc
loopne
add
inc
jle
mov
pop
cli
inc
out
nop
neg
xchg
stos
and
add
mov
jp
ds
jp
in
fistpll
xor
dec
mov
adc
jb
lcall
dec
cmpsl
shl
orl
mov
rcll
jp
and
jo
push
mov
mov
jns
add
dec
jl
aam
mull
repz
sbbl
sub
mov
adc
mov
call
or
push
dec
sub
call
jnp
mov
cmp
rcl
lods
add
jnp
xor
add
lret
gs
stos
push
mov
sahf
gs
lock
sti
cmc
sub
int
pop
or
cmp
fsubs
cmpl
push
lret
dec
ds
jp
cli
arpl
movb
lret
cmp
sub
mov
sbb
mov
xlat
clc
imul
sbb
push
pop
mull
fldt
cmpsb
and
push
add
shll
test
lret
bound
jns
pushf
pop
data16
sarl
xlat
into
or
outsb
xor
mov
js
fcomps
push
int
insl
and
shrl
xor
cmpsb
into
adc
sti
sbb
dec
adc
pop
pop
aaa
push
addl
scas
sbb
arpl
push
cmp
add
pop
xchg
out
mov
movsb
pop
xchg
add
mov
lret
imul
pusha
jne
pop
lcall
imulb
ficoml
daa
test
pop
ret
scas
push
xchg
push
jg
jmp
xchg
push
sbb
int
pop
lea
aas
and
pop
push
and
xor
pop
jmp
call
imul
push
lods
dec
in
lahf
pop
shl
add
fcompl
jns
rcr
mov
jnp
push
xor
movsb
jle
dec
mulb
dec
mov
xchg
add
inc
inc
or
dec
mov
dec
pushf
loopne
mov
call
in
lds
scas
jl
lds
pop
and
or
sti
push
loope
push
jns
mov
rol
test
mov
aas
xor
mov
adc
push
adc
xor
mov
mov
jmp
add
cmp
sarb
cs
pop
mov
shll
sbb
popa
inc
push
ds
out
addr16
sub
mov
addr16
cmp
iret
mov
enter
jp
stos
jnp
jb
jns
fwait
imul
add
dec
mov
pusha
loope
mov
imul
jo
mov
das
decl
and
mov
in
mov
fcmovnb
test
aad
jl
loopne
add
sbb
test
xchg
mov
or
push
cmp
mov
test
sti
fadd
sbb
lods
mov
push
stc
and
pop
mov
rorb
rcll
push
push
jmp
aas
pop
adc
jl
xchg
fwait
adc
pop
ret
mov
scas
enter
jg
outsb
pusha
ret
movsb
mov
in
out
lds
jnp
pushf
fndisi(8087
sbb
jnp
mov
gs
js
xchg
push
ljmp
insb
add
lods
or
repnz
mov
xor
data16
pop
mov
packssdw
push
sbbl
andl
push
lret
lods
test
ss
xchg
jle
cmp
mov
fiadds
xchg
xchg
lret
jge
rcrb
mov
push
jno
in
jp
hlt
scas
data16
or
dec
pop
jo
test
xor
and
cs
aaa
je
xlat
push
call
mov
xor
scas
push
xchg
xchg
inc
cmp
int3
push
gs
cmp
in
mov
mov
out
push
int3
out
test
jne
imul
aam
xchg
jl
adc
je
es
push
negl
cmp
scas
jl
in
push
or
xor
je
lock
inc
or
and
call
inc
jle
lods
push
fdivr
popa
and
insl
aam
dec
jbe
das
xor
jns
imul
out
loop
xchg
iret
in
mov
movsl
pop
andb
movsl
xchg
push
outsb
cmc
sbb
sti
xchg
pop
adc
bnd
mov
push
jns
pushf
pop
jg
push
or
mov
jl
push
push
jmp
and
fdivrs
sub
out
nop
pop
xchg
and
pop
rol
imul
xlat
dec
xor
cmp
mov
cmp
jae
repnz
and
dec
addb
movsb
pop
xor
das
push
loope
aad
arpl
xchg
dec
xchg
movsb
rcl
imulb
scas
test
dec
push
dec
out
and
mov
sbb
out
std
jns
sbb
sbb
imul
mov
add
int3
mov
roll
or
arpl
push
leave
mov
loope
sub
cmp
xchg
imul
lods
ret
push
addb
mov
push
adc
add
mov
ss
push
aas
aam
clc
imul
xchg
jecxz
xchg
loop
hlt
xchg
push
cmpsl
jp
inc
dec
ds
and
adc
sahf
test
ds
xchg
sub
fidivs
repz
jns
sub
xchg
rcrb
and
cli
inc
addb
jp
fldenv
lret
test
cltd
adc
adc
or
xchg
pop
aam
andl
fiadds
dec
ficompl
sub
pusha
cmp
and
cld
lea
pop
dec
pop
push
or
mov
add
dec
and
jnp
out
leave
pop
mov
mov
clc
jne
mov
fwait
int
mov
push
das
outsl
in
aam
adc
pop
iret
andl
push
ret
dec
lcall
loope
add
bound
xor
sbb
and
sbb
pop
repz
xor
stos
cmp
mov
add
popa
xor
cmpsl
imul
cltd
or
clc
sbb
and
mov
push
mov
sbb
mov
insb
push
cmp
xorb
icebp
mov
xor
dec
dec
dec
push
leave
dec
or
outsl
push
or
in
stos
add
xchg
and
pop
imul
mov
inc
pusha
and
push
lods
je
subl
pop
jg
mov
aad
addl
or
arpl
aas
push
mov
inc
jne
repz
enter
add
push
out
cmpsl
shrb
sti
dec
sub
and
cmpsb
test
jne
adc
jae
ret
jnp
push
jle
jnp
push
fstl
mov
loope
aam
test
in
adc
inc
fmull
dec
pop
adc
push
dec
pop
adc
add
repnz
jae
xchg
lds
insl
cmp
mov
sub
test
mov
jno
ja
sub
mov
mov
mov
imul
or
jae
lock
daa
xor
in
mov
dec
arpl
subl
mov
enter
jnp
pop
dec
sti
mov
mov
into
in
sub
xchg
jle
stos
cmpsl
into
sahf
mov
inc
push
fadd
mov
xor
adc
lods
std
aaa
stc
adc
xor
sti
push
xchg
out
mov
xchg
and
pop
test
pop
les
mov
inc
in
push
push
cmp
in
in
test
jb
fs
adc
and
dec
jmp
mov
sbb
mov
roll
cld
adc
push
std
hlt
sub
jns
lahf
sbb
and
adc
js
fwait
movsb
outsl
div
shll
and
enter
out
clc
stc
jno
xor
outsb
jge
xchg
and
jle
aad
test
pop
inc
dec
stc
push
ss
in
popa
adc
sbb
sbb
out
mov
jo
jp
testb
cmc
xchg
mov
mov
lods
not
mov
sbb
mov
jns
pop
or
inc
in
bt
shlb
push
dec
mov
mov
inc
mov
lea
pop
or
fwait
xlat
lods
adc
pop
mov
cmc
test
push
out
pop
and
xor
mov
mov
mov
xchg
mov
pop
push
inc
jp
fdivrs
lock
lods
in
movsl
push
xor
mov
jo
or
xchg
ja
in
jbe
mov
pop
mov
mov
and
xchg
daa
in
outsb
mov
jecxz
movsl
inc
cs
fwait
inc
xchg
mov
sbb
pop
jb
cmp
cltd
xor
mov
or
nop
cli
mov
ret
add
fdivrl
mov
xchg
xchg
iret
nop
fisubrs
insb
adc
fimuls
and
inc
add
hlt
mov
jns
clc
mov
je
and
notb
fidivrl
les
pop
imul
jno
repz
loope
movsb
dec
and
jecxz
popf
dec
ss
sub
jnp
push
fisubrs
push
and
lahf
mov
mov
add
outsb
cli
addl
out
add
mov
pop
scas
in
sub
xchg
imul
pop
inc
arpl
adc
fstpt
in
pop
mov
add
adc
xchg
inc
add
inc
icebp
adc
inc
daa
repnz
pop
inc
fcmovb
test
test
stos
pop
fnstsw
push
arpl
roll
rcl
sti
icebp
pop
sbb
adc
pop
sub
rolb
and
add
rcll
inc
jecxz
mov
sbb
out
inc
mov
cli
pusha
jp
xchg
scas
fbstp
fsts
mov
xchg
rcll
iret
or
shlb
xlat
outsl
push
fcomps
mov
lods
pusha
mov
xor
cmp
in
xchg
aaa
mov
dec
push
scas
outsl
pop
and
add
xor
roll
ss
stos
stos
test
mov
sahf
imul
add
inc
cmpsl
std
aad
sbb
xchg
test
ss
cmp
das
mov
push
xlat
xor
pusha
and
rol
and
xchg
jg
ja
cli
mov
mov
loopne
out
int3
aam
popa
xchg
pop
test
xchg
popf
xor
sbb
idivl
mov
cmp
and
add
cltd
cmp
jmp
cmpl
loopne
and
lods
jb
push
or
cmp
push
scas
fsubs
repz
incl
nop
push
xchg
pop
pop
pushf
xlat
in
fwait
push
notl
sbb
pop
and
sbb
adc
xor
rol
mov
push
jnp
push
or
sahf
pop
jecxz
dec
or
push
test
pop
roll
push
aas
push
stos
pushf
inc
leave
cs
das
xchg
jns
fbld
mov
daa
mov
call
sub
pop
popf
test
orl
dec
xchg
pop
std
xchg
mov
mov
insb
xor
xchg
jp
adc
sbb
out
push
fimuls
or
add
jmp
lods
ds
xchg
push
cmp
out
mov
imul
data16
loope
and
rdtsc
pop
jmp
shlb
inc
sub
inc
adc
pop
mov
mov
cltd
call
dec
mov
push
cmp
in
mov
pop
xchg
cmpsl
add
inc
add
inc
das
int
and
lods
into
in
outsl
sahf
sub
push
cltd
adc
test
xor
push
lcall
jg
adc
in
push
inc
or
add
loope
mov
dec
cld
lds
inc
and
sarl
clc
and
adc
rorb
in
cmp
mov
out
mov
mov
mov
into
aam
lods
sbb
inc
mov
pop
pop
outsl
sbb
test
jno
popa
sub
mov
push
push
icebp
ret
mov
insl
pop
or
sahf
lret
jp
dec
stos
sbb
xor
gs
xor
mov
mov
fisttps
jecxz
mov
sbb
pop
adc
pop
add
lahf
test
jo
add
dec
mov
negb
or
movsl
clc
cmpsb
movsl
lock
jae
test
fnstcw
aas
leave
add
js
pop
stc
jp
out
lock
jmp
add
mov
fimull
pop
or
adc
shrb
jmp
es
aas
pop
imul
and
xorb
push
dec
cmc
sub
push
dec
hlt
sbb
mov
jge
xor
ficompl
mov
jge
xchg
inc
inc
cld
call
lods
xchg
mov
lret
inc
or
dec
cmp
cs
fiadds
xchg
push
popf
mov
aad
addr16
addl
pop
pop
in
gs
push
lods
leave
lods
fsubrp
push
fisttpll
dec
gs
scas
dec
jae
iret
and
xchg
xchg
shll
add
aam
movsl
xchg
mov
test
out
adc
and
je
aad
cmpsl
xchg
mov
mov
mov
xchg
bound
ss
jg
sub
pmulhw
and
mov
rclb
fldl
push
jge
in
arpl
xor
push
fists
mov
dec
loop
jnp
mov
pop
call
and
sub
stc
mov
xor
adc
xchg
call
out
ljmp
inc
cmpsb
mov
xor
ja
sub
mov
rorl
jae
pop
mov
xor
addl
sub
mov
test
inc
jg
fcomps
dec
add
jle
push
sub
push
mov
pop
ss
ficoms
ds
mov
adc
jo
mov
mov
loop
fs
or
shrl
ret
xchg
add
mov
movsl
push
pushf
ljmp
sub
pop
arpl
rcrb
cwtl
jmp
ret
xchg
out
je
int3
sub
xchg
mov
jb
rcl
mov
inc
push
sub
push
lods
push
cli
lcall
and
ret
dec
fists
stos
adc
mov
push
adc
cmc
stc
inc
mov
ss
push
flds
adcb
push
lods
push
xchg
mov
mov
dec
jo
xchg
fptan
das
rcl
push
dec
cs
jbe
push
pop
jb
inc
mov
pusha
or
bound
sub
aas
out
mov
inc
xlat
iret
inc
aad
into
aam
out
jecxz
test
inc
aam
mov
pop
fs
aaa
jae
xorb
fisubl
xlat
xor
mull
loope
ljmp
popf
test
jmp
pop
mov
push
mov
xchg
mov
rorl
add
icebp
or
cmp
dec
fisttpl
les
sub
sbb
jl
andl
inc
push
jl
aas
xchg
sarl
xlat
and
sub
mov
stos
es
fiaddl
jae
push
sbb
jecxz
ss
xchg
push
and
or
loope
negb
mov
fmull
and
cmp
loop
cmc
push
pop
cld
loope
jecxz
xchg
lahf
aam
test
push
pop
shll
cmpl
add
xor
sarb
or
mov
add
ss
cmp
mov
aad
lock
mov
mov
mov
inc
mov
push
testb
lock
mov
inc
mov
aad
lcall
lock
inc
add
lret
mov
ror
imul
imul
push
and
xor
mov
bndstx
jne
loop
pusha
inc
fsubrs
cltd
into
ljmp
pop
stos
xchg
jae
icebp
cwtl
mov
int
cltd
ljmp
adc
xor
je
negb
out
push
push
pop
and
cld
out
lcall
or
adc
jle
fildll
test
pop
jb
in
cmp
xchg
inc
xchg
pop
rorb
subb
push
adc
inc
mov
clc
push
ficompl
daa
lods
push
lret
ret
mov
shlb
ret
lods
aam
test
imul
mov
in
push
mov
push
cwtl
fcmovbe
push
cmp
out
dec
xchg
dec
mov
in
mov
sbb
mov
sub
inc
push
push
add
jg
iret
fdivs
jl
mov
jb
pusha
pop
and
popa
popa
in
dec
stos
imul
addr16
into
int
xor
push
mov
insl
xchg
call
push
inc
inc
in
aaa
mov
jo
out
adc
cs
ss
cs
fldt
adc
push
xchg
mov
mov
push
jno
lcall
dec
xchg
mov
ds
nop
out
pop
add
dec
push
nop
mov
shl
cmc
mov
adc
rcll
inc
sbb
mov
stos
sbb
shll
or
cmp
add
lret
mov
adc
pop
fcmovnb
testb
fwait
pop
adc
add
add
into
xor
pop
jp
imul
lods
cmp
mov
mov
mov
or
not
rcrb
and
sbb
aam
and
mov
sbb
mov
xchg
daa
push
pusha
jg
rcll
gs
test
xlat
and
test
bound
in
pop
ds
jg
aaa
xor
mov
xor
addl
or
mov
mov
pushf
xchg
push
xchg
adc
xorl
dec
pop
sbb
popf
out
ds
add
add
outsb
rclb
sub
xor
push
mov
xor
lcall
bnd
cmp
xchg
popf
scas
aas
icebp
cmp
or
jl
movsl
dec
arpl
gs
cld
loope
addr16
xor
mov
adc
imul
mov
pand
ret
ja
rorl
mov
push
push
xchg
fs
in
or
jb
xor
repnz
mov
adc
jbe
mov
fs
mov
sub
cmp
mov
mov
outsb
insb
fstl
testl
cmp
inc
sub
pop
pop
mov
sbb
imul
lahf
add
inc
or
sbb
pop
into
inc
xchg
cmp
ficoml
dec
sub
pushl
das
pop
cmp
mov
mov
jp
dec
push
cmp
ja
cmpsl
notb
cli
xchg
push
test
stc
inc
xlat
jl
test
and
stos
scas
xor
clc
xchg
lods
xchg
sti
push
and
mov
add
bt
push
int
leave
or
sub
imul
sbb
inc
sbb
cmp
das
xor
push
adc
push
js
aam
mov
cmpsl
iret
cld
negb
and
adc
out
lahf
fdivrl
inc
inc
push
in
ret
and
lret
call
cs
aaa
popf
pusha
pop
mov
ret
jb
xchg
bswap
or
stc
mov
xchg
sbb
iret
adc
andl
cs
lahf
jle
push
xor
orl
lods
dec
aaa
pop
add
push
lret
or
pop
or
stos
fidivrs
unpcklps
cmpsb
xchg
and
inc
xor
mov
test
pop
sbb
lods
ficomps
ds
mov
shlb
cmpsl
ljmp
push
out
leavew
xchg
das
pop
dec
adc
xor
mov
pop
jg
imul
sub
call
cltd
mov
jne
pop
testl
xchg
and
test
in
out
fmuls
iret
test
ljmp
jns
push
jnp
outsl
mov
pop
inc
lea
xchg
sbb
dec
mov
push
sbb
aaa
sbb
or
dec
sbb
lods
fs
inc
xchg
add
subl
aam
adc
imul
fwait
repnz
ljmp
dec
or
movsb
mov
sahf
pop
arpl
std
idivl
dec
adc
pop
out
test
movsl
popa
cmp
imul
clc
push
push
xchg
int3
mov
mov
pop
cld
mov
inc
stc
pmulhuw
inc
aaa
mov
mov
mov
repnz
mov
daa
dec
add
jg
add
mov
imul
push
stc
or
int
jae
xchg
dec
fs
je
adc
jbe
sub
test
fimuls
pop
pushf
inc
stos
dec
adc
out
pop
lock
fldl2t
cmp
pop
cwtl
fisttpl
jo
and
into
xchg
add
dec
insl
scas
rcll
push
cltd
adc
mov
mov
sbb
ljmp
xchg
loopne
stos
cmp
cmpb
pop
mov
mov
xchg
and
jg
mov
add
mov
enter
jle
or
sti
dec
mov
cmc
ss
push
jg
xor
mov
xor
pop
call
in
mov
mov
mull
pop
cltd
in
pop
in
je
mov
push
rcrl
push
bnd
iret
js
cld
cmp
test
pop
sub
sbb
mov
bound
icebp
hlt
test
enter
mov
fdivp
dec
cwtl
dec
sbb
dec
arpl
popa
mov
inc
xchg
popf
lret
lock
das
cmc
mov
push
sub
std
int3
rcr
mov
mov
push
inc
pushf
sbb
mov
sti
lret
jo
cmpsb
pushl
mov
xorl
mov
scas
movsb
pop
in
loopne
or
lret
aam
and
aad
out
sti
xlat
scas
sbb
jp
movsl
incb
mov
push
fnstsw
adc
or
sub
repz
repnz
push
dec
dec
xor
pop
adc
xchg
fnsave
ds
dec
push
cmp
fcom
inc
jmp
enter
push
sub
mov
out
mov
lods
out
mov
jne
stos
in
out
jbe
inc
fisttpl
int
jg
jl
sub
test
and
or
push
test
sbb
orb
inc
add
add
pop
mov
add
pop
xor
or
cmp
dec
rcrl
mov
aaa
pop
or
ret
out
lahf
pop
sub
int
mov
mov
sbb
adc
loop
mov
outsb
test
xor
xchg
sub
mov
jmp
mov
out
xchg
into
imul
sbb
xor
inc
cld
push
jge
jmp
push
push
lock
cmp
or
add
gs
and
jmp
ja
pop
mov
imul
aaa
push
xor
packuswb
xor
sti
shrl
call
jo
fidivrs
lret
dec
sbb
insb
push
push
adc
jae
sbb
out
lahf
jmp
dec
xor
out
add
jnp
test
lock
jmp
pop
cmp
cmpsb
sbb
loope
lock
test
dec
push
stos
pop
push
xlat
insb
das
popf
out
mov
lahf
pop
sub
inc
cmp
stos
sub
sbb
push
lea
inc
mov
inc
sti
cmpsl
iret
xor
add
mov
sti
sbbb
lret
and
mov
stos
jge
out
hlt
fcompl
test
sub
icebp
test
scas
fists
sbb
lea
cmp
pop
js
mov
pop
jl
mov
push
ret
out
xchg
or
adc
jb
inc
cmpsl
movsl
aad
decb
inc
insb
andl
pushf
rcrl
insl
pop
shrb
aam
or
sub
push
sbb
lcall
mov
xchg
cs
fistpll
ljmp
decb
mov
or
cwtl
or
jp
cmpsb
jb
mov
mov
hlt
or
mov
scas
mov
push
popa
insl
repz
pop
mov
mov
xor
les
mov
adc
pop
push
mov
pop
jb
test
negb
jecxz
push
out
mov
or
jns
jo
sub
mov
addr16
adc
mov
inc
call
xor
xchg
push
fsub
ret
dec
repnz
rep
or
sti
cs
mov
pop
call
xor
scas
cmpsl
and
call
jecxz
cmp
scas
xor
addr16
mov
sbb
popa
movsl
repnz
int
fs
scas
iret
std
jg
ret
mov
test
sti
xchg
xchg
pop
aaa
xor
int
inc
scas
xor
jmp
decl
aas
jp
test
nop
fidivrl
test
loop
pop
sti
mov
and
sbb
jae
mov
mov
ds
or
xlat
and
or
cmp
iret
pop
dec
inc
scas
sub
inc
js
cs
push
jmp
loop
push
and
lcall
ds
xor
mov
aam
fistpl
push
cmp
ret
sarl
pop
add
cmp
scas
push
clc
mov
push
jecxz
aas
inc
jg
fldl
loopne
mov
and
xchg
pop
xor
sub
inc
mov
push
imul
in
cmp
sbb
iret
aam
add
inc
pop
inc
arpl
sahf
cwtl
push
push
push
jg
enter
enter
xchg
add
cmp
ja
mov
xchg
add
cmp
out
test
jnp
and
inc
sub
jae
mov
inc
pop
rclb
ret
adc
xchg
jmp
pop
mov
cmpsl
popf
mov
jge
cmpb
pop
mov
xchg
sub
leave
adc
aad
add
dec
lret
lret
popf
bound
xchg
subb
mov
sbb
mov
in
cmpsb
fisttpl
sbb
stc
xor
mov
out
fwait
jge
into
sar
jns
rcr
stos
dec
sarl
pop
rcr
and
int3
or
mov
lea
mov
movsb
mov
dec
add
int3
mov
xor
and
inc
jl,pn
xchg
push
out
mov
cmp
popa
push
push
mov
mov
jecxz
js
insl
popf
fucom
cmp
push
cwtl
dec
mov
jb
insl
repz
aaa
dec
imul
mov
mov
jns
test
and
inc
mov
mov
jp
leave
inc
stos
out
hlt
mov
mov
mov
mov
sbb
call
adc
insl
sub
jmp
mov
adc
mov
and
pusha
cwtl
or
in
and
jo
mov
out
out
aad
push
mov
sti
data16
lock
sti
cltd
jne
es
inc
repz
fsubr
repz
outsl
pop
inc
pop
cmpsl
inc
cltd
mov
mov
lods
idiv
mov
ret
add
mov
lds
pop
rclb
pop
mov
xchg
mov
push
mov
sub
sahf
lcall
loopne
pusha
xchg
pop
pusha
adc
in
or
push
xchg
ljmp
rol
dec
mov
pop
xchg
sub
mov
or
mov
mov
sbb
popf
mov
cltd
int3
enter
insl
xchg
pop
gs
ds
jecxz
adc
roll
jmp
cmpsb
ljmp
push
dec
adc
call
fs
mov
xor
bound
div
imul
ss
inc
cwtl
pop
dec
call
faddl
cs
dec
rcrb
pop
mov
dec
pop
cmc
sbb
je
clc
fimull
test
data16
push
test
fiadds
movsb
dec
mov
lahf
shlb
gs
mov
imul
xor
push
adc
mov
pop
clc
jbe
lcall
cmp
idivl
push
or
mov
xorl
std
push
dec
xchg
mov
jnp
dec
jge
ret
sahf
mov
fdivrs
in
scas
mov
push
jge
ss
adc
repz
divl
xchg
vmwrite
lea
out
sbb
xchg
sub
or
sub
add
bound
push
lds
inc
inc
movsb
inc
fistps
or
imul
fildl
jle
arpl
or
jbe
mov
push
mov
cs
jbe
push
out
adc
jle
push
fsub
jl
out
rolb
xchg
shrb
xor
fstps
mov
push
mov
fdivs
jbe
out
pop
mov
out
mov
imul
shll
test
sbb
daa
xchg
mov
push
adc
sbb
jmp
fdivrs
push
sbb
hlt
insl
iret
rclb
adc
jmp
call
xor
xor
fsubs
aaa
lock
mov
mov
mov
jae
call
pop
std
out
rcrl
sbb
scas
andb
loope
test
mov
lcall
add
sub
cltd
adc
sbb
xchg
data16
out
dec
xchg
jnp
aaa
inc
push
js
pop
scas
insl
inc
movsb
loope
shll
xchg
scas
jne
mov
push
dec
push
movsb
mov
repz
mov
pusha
adc
inc
repz
ja
fwait
mov
int
enter
dec
aam
das
test
pop
cmp
test
and
popa
mov
cmpsl
lret
mov
in
cmp
mov
in
and
inc
lods
jp
jl
push
mov
mov
xchg
xor
cmp
sub
mov
pop
hlt
dec
ljmp
cmpsl
jmp
sub
mov
aam
bound
cmp
in
or
push
aas
dec
lods
dec
and
loopne
js
add
sub
fsts
fidivl
mov
and
add
out
dec
dec
xchg
inc
imul
lret
add
mov
faddp
sbb
test
imul
sbb
fimull
int
subb
out
shrb
fildll
jnp
lods
or
in
jle
pop
mov
aaa
shll
imul
adc
mov
scas
xor
add
jle
push
js
and
mov
mov
xchg
add
jge
adc
in
jecxz
sbb
outsl
aam
inc
cld
inc
inc
inc
sbb
out
mov
shll
or
ror
push
adcb
insl
test
test
jmp
xorb
xor
into
movsl
and
inc
ljmp
dec
add
sbb
mov
enter
sbb
adc
dec
std
xchg
mov
int
add
pop
in
sbb
aad
out
out
add
dec
jmp
push
in
aas
popa
pop
adc
xchg
icebp
shl
xor
mov
les
movsb
mov
rclb
push
dec
aad
aad
jge
ja
cmpb
mov
orl
add
std
pop
sbb
mov
inc
cmc
scas
mov
xchg
aad
mov
sbb
ret
pop
xchg
aaa
adc
jge
dec
out
cmp
and
out
xor
push
or
outsb
jo
xor
cmp
movsb
xor
loopne
lahf
push
pop
shrl
dec
inc
outsb
pop
dec
enter
and
movsl
dec
inc
mov
mov
pusha
cwtl
dec
test
or
hlt
int
mov
or
pop
add
pusha
pushf
arpl
stc
ficoml
add
repz
push
pop
mov
shlb
imul
and
pop
jnp
or
cmp
mov
xchg
shll
cwtl
not
and
shr
push
cwtl
jle
push
pop
fwait
xchg
rclb
mulb
cmp
add
jecxz
movsl
icebp
fwait
xorb
int
outsl
xchg
xchg
jns
fistl
std
mov
lahf
adc
stc
mov
push
mov
xchg
pop
xor
std
push
xchg
and
hlt
mov
add
push
imul
mov
test
mov
inc
jno
mov
sbb
add
inc
xor
inc
jne
iret
push
fisttpl
sbb
clc
jns
dec
pop
xchg
addr16
mov
outsl
pop
rcll
sub
cmp
mov
cs
and
ret
cmp
push
mov
loopne
out
mul
add
or
jns
jb
xor
mov
in
inc
jo
fwait
jnp
lea
js
bound
cmc
scas
mov
insl
dec
scas
outsl
sub
loope
les
sub
out
xchg
cmp
es
ja
add
fcom
pop
test
cltd
repnz
lea
test
subb
jmp
adc
mull
push
cmp
insb
pop
pop
cmp
mov
push
leave
cmpsl
loopne
in
mov
dec
push
jg
jns
pop
jle
xchg
int3
outsl
mov
dec
into
testl
pop
mov
lcall
adc
in
jl
popf
leave
daa
lcall
add
sbb
aaa
out
lcall
add
test
movsl
xchg
lods
xchg
imull
mov
jbe
and
mov
xchg
mov
lret
inc
mov
mov
clc
sbb
test
adc
pop
adc
ljmpw
inc
das
insl
fdivp
outsl
daa
push
cltd
fcoms
mov
push
mov
addr16
cmp
outsl
push
out
xor
cmp
clc
or
push
jle
push
popf
subb
sbb
stos
clc
and
stos
add
jle
fmull
xor
sub
push
jno
dec
ds
cmpb
mov
arpl
cmp
mov
insl
jl
ljmp
je
mov
mov
std
inc
mov
jns
mov
hlt
inc
das
mov
data16
icebp
mov
xor
jbe
sarb
daa
lods
and
xlat
jo
dec
cmovno
mov
push
adc
push
mov
gs
insl
fwait
notb
mov
xchg
sarb
mov
in
hlt
out
popa
jle
and
jmp
dec
insb
in
push
push
movl
dec
xchg
xor
adc
pop
test
cmp
aaa
dec
mov
ss
data16
cmpsb
sub
push
roll
imul
jl
lea
rclb
mov
and
nop
movsb
lahf
mov
notl
mov
mov
push
cmp
int
fstpl
mov
jne
loop
mov
xchg
fcoms
or
cmp
cmpsl
cmp
and
lret
aad
jbe
cmp
cmp
sub
repz
les
push
xchg
aam
loop
cmp
mul
jp
pop
cld
or
or
adc
shll
out
fisttpll
sbb
push
inc
lret
in
in
movsl
nop
adc
dec
adc
and
pop
mov
repz
mov
xchg
sbb
and
and
lods
jno
mov
lcall
push
cmpsl
push
sbb
mov
int3
push
mov
insb
aad
cwtl
in
jle
nop
out
daa
icebp
ret
lret
jae
mov
sbb
imul
jae
adc
inc
call
icebp
or
leave
mov
pop
lods
pop
rorl
call
add
pop
inc
mov
mov
pop
jae
mov
out
fcompl
mov
outsb
fwait
push
or
loope
pop
testb
insb
cmp
xor
lahf
adc
adc
xor
lahf
xchg
jg
repz
xchg
jge
add
addb
push
xor
in
inc
add
jmp
adc
daa
sbbb
enter
pop
pop
mov
imul
and
pop
imul
add
popf
mov
test
adc
jnp
lods
es
test
enter
xor
clc
rcll
mov
inc
push
out
imul
inc
adc
rolb
fimull
or
imul
pop
fcoml
sbb
lret
pushf
adc
adc
or
outsl
push
push
in
add
sbb
addr16
inc
out
dec
xchg
test
sti
mov
loop
cmp
into
xor
mov
xor
jne
or
shlb
jle
test
cmp
bound
iret
fldcw
popa
xorl
xchg
or
push
cltd
pop
mov
add
jbe
push
xchg
mov
sub
sbb
icebp
adc
enter
mov
adc
xor
cmc
movsb
rcll
jle
xchg
pop
loop
push
cli
adc
sbb
aas
sub
lods
sbb
cli
movsl
adc
cmp
out
insb
xorb
sub
mov
jae
movsb
ret
mov
leave
arpl
pop
fstl
fs
rcrb
sbb
ret
ds
cmp
movsl
or
pop
es
inc
mov
fstpt
fistpl
sub
stc
pop
mov
xchg
inc
cmp
mov
inc
cmpsl
lock
push
into
mov
mov
pop
sub
mov
jo
mov
hlt
sahf
xchg
mov
loopne
xchg
sbb
stc
mov
mov
and
pop
movsb
push
push
sub
xor
iret
mov
stos
lock
ljmp
jmp
enter
jp
pop
or
into
aas
and
fucomip
aas
std
push
out
pop
add
xor
loopne
inc
fwait
test
mov
mov
cwtl
cmpb
push
cmc
scas
mov
sub
or
mov
dec
lret
push
rclb
sbb
ja
pop
xchg
in
decl
dec
cmp
push
fdivs
addr16
stos
xor
add
jo
test
pusha
shrl
push
out
or
aad
push
inc
jbe
jbe
fs
mov
aas
out
sub
and
lds
fadds
inc
lods
fsubr
movsb
dec
jo
lret
stos
push
fstps
jns
mov
sti
xor
jg
shl
daa
mov
out
subl
xlat
sub
gs
in
cwtl
pop
stos
xchg
fmull
inc
pop
stos
pusha
jl
jecxz
jecxz
mov
std
loop
inc
xlat
cmc
sub
imul
dec
aam
or
faddl
outsb
fcoms
and
testl
push
inc
jge
data16
push
lods
aaa
pop
cmp
fadds
cmp
repnz
loopne
lcall
shlb
and
out
add
imul
cmp
fisubl
ja
mov
dec
cli
jl
repz
xor
xor
aaa
mov
ret
aam
mov
addr16
xchg
xchg
cs
cmpsl
lret
xchg
into
mov
aam
stos
or
mov
pop
xor
dec
mov
dec
fldl2e
xchg
adc
cli
push
adc
andl
or
lds
std
movsl
lock
shl
fmull
dec
inc
psubd
jno
ljmp
mov
repnz
sub
ds
sbb
push
js
xlat
fsubs
mov
dec
mov
mov
jb
ja
pusha
and
mov
dec
add
mov
cltd
stc
inc
mov
and
movsl
cs
data16
scas
cld
and
adc
pop
fcmovu
mov
jnp
jp
pop
jecxz
lahf
push
stos
data16
out
jnp
enter
dec
jo
lock
mov
nop
lods
cmp
aas
scas
loope
dec
clc
add
ja
xorl
aam
jnp
movsb
outsb
sub
jbe
pop
xchg
call
xchg
adc
out
fistl
adc
mov
into
and
or
movsl
lock
rorl
icebp
lds
out
stos
or
pop
test
orb
dec
dec
ljmp
add
stc
dec
sbb
xchg
and
pop
sbb
xchg
xor
das
stc
loopne
lcall
inc
add
xchg
pop
mov
cwtl
sub
and
popf
movsl
loop
push
stos
mov
ret
maskmovq
imull
xchg
loope
xchg
mov
imul
adc
repnz
test
mov
aad
int
dec
push
outsl
mov
pushf
pop
dec
fldl
add
mov
fisubs
xor
inc
mov
shl
add
test
mov
imul
lock
movsb
xchg
je
mov
test
pop
pop
ds
int3
outsl
add
sub
mov
xchg
inc
in
imulb
cld
scas
daa
lea
push
cmp
mov
roll
lods
das
xchg
xlat
repz
xchg
rcrl
pop
stos
retw
int3
pop
and
pop
decl
xchg
enter
xchg
inc
movsb
inc
stos
insl
lods
push
orb
pop
icebp
loope
pop
cmp
negl
stos
stos
pop
shll
jno
sub
repnz
iret
push
pop
sbb
pop
pop
cmp
ljmp
nop
adc
lea
add
je
loope
mov
popf
fwait
les
sbb
loope
jae
pop
or
imul
mov
dec
das
movsl
xor
and
andl
pop
push
pusha
dec
das
and
add
or
fs
mov
sti
adc
call
inc
jb
xchg
lret
push
mov
lahf
dec
rcll
cwtl
push
or
push
and
sbb
cltd
scas
mov
inc
jae
mov
ljmp
inc
cmpsl
aas
inc
push
adc
out
adc
jno
push
lock
sub
and
xor
lds
xor
aas
push
push
mov
cltd
mov
mov
imul
xchg
pop
xchg
shlb
mov
aad
maxps
xchg
jge
dec
lahf
add
movsl
lods
out
imulb
repnz
fidivrs
push
sahf
out
push
cmp
ucomiss
jl
add
xchg
inc
mov
imull
dec
fisubrl
mov
cmp
mov
mov
stos
std
pop
clc
lods
jne
iret
clc
pop
shl
sbb
and
pop
shl
imul
add
sbb
and
push
jle
push
sbb
shll
ficomps
loope
setge
aas
inc
cmp
test
outsl
pusha
pslld
xchg
imul
mov
stos
dec
subb
mov
mov
mov
sub
inc
repnz
ds
scas
cmp
dec
dec
sbb
mov
addr16
xchg
aam
clc
sbb
push
adc
pop
daa
out
mov
sarb
in
jmp
xor
popf
clc
jns
sbb
jns
aas
hlt
adcb
jge
sbb
dec
push
lds
lods
adc
jl
push
cmp
test
and
clc
shr
popa
xchg
lods
stos
inc
lcall
enter
push
loope
fdiv
dec
stos
jae
sub
sub
dec
aad
icebp
fnstenv
or
neg
and
xchg
repnz
push
xlat
inc
aas
in
inc
mov
push
jl
mov
sahf
inc
dec
lods
nop
fcmovne
push
xlat
ljmp
push
jecxz
xorl
xchg
or
pop
loopw
pop
dec
and
std
fcompl
movsb
mov
ja
pop
rcrb
out
jbe
shll
repz
or
push
aam
xchg
insl
dec
rclb
dec
shll
fimuls
jmp
aam
loop
push
dec
sbb
push
rcrl
xor
decb
push
jns
out
aas
jo
outsl
mov
enter
out
icebp
int3
cs
add
pop
mov
mov
cld
mov
daa
add
sbb
outsl
inc
stc
cmc
adc
bound
sub
loope
mov
filds
xchg
stc
pushf
lret
fwait
call
dec
lods
xor
loopne
ds
and
adc
aas
sub
mov
jbe
and
xlat
insb
adc
cld
negl
push
pusha
fstpl
mov
dec
fwait
jno
xlat
loop
cmp
imul
dec
push
push
and
mov
xor
arpl
pop
jg
and
arpl
and
rorb
pusha
xchg
shrb
sbb
push
sub
in
or
movsb
lcall
push
icebp
lds
mov
popa
dec
add
cltd
gs
addl
fnstsw
push
and
shll
int3
mov
or
sbb
sub
fstpl
push
aas
test
cmpsl
loop
xchg
out
jmp
addr16
into
jae
and
push
jecxz
pop
out
in
cli
jmp
cmc
add
lds
insl
and
scas
mov
jle
inc
jmp
insb
popf
mov
scas
jo
loop
scas
aad
mov
push
and
out
cmp
dec
pop
lock
xor
testb
sbb
mov
dec
mov
adc
xor
ja
jg
pop
into
dec
pop
cltd
push
lods
leave
push
test
pop
mov
push
xchg
pop
xor
sub
sbb
and
jp
mov
out
out
repnz
jbe
push
scas
out
sti
fdivs
aas
pusha
sub
or
idivb
hlt
test
jne
sub
mov
les
and
add
stc
sbb
sbb
fs
shlb
aam
rcr
cmp
mov
mov
adc
jns
imul
stos
pop
and
or
clc
lock
push
aas
filds
push
pop
mov
iret
insl
mov
sub
jae
movsl
xor
adc
fidivs
lret
xchg
jge
lahf
sbb
mov
out
loop
loop
and
roll
pop
pop
cli
jb
jmp
loop
mov
mov
cwtl
faddp
sub
mov
jle
dec
mov
adc
jae
rorb
xor
mov
jo
cmp
call
test
shlb
cld
pop
pop
push
hlt
les
aad
mov
lock
or
jo
addr16
es
pop
inc
adc
jmp
mov
out
jge
add
rclb
xchg
lcall
pop
cmp
fistps
ret
push
mov
fists
sub
mov
or
jp
ficomps
das
mov
stos
cli
mov
xor
mov
cmp
adc
mov
clc
cli
mov
or
test
lds
mov
mov
jecxz
sbb
sbb
cmp
sub
iret
aad
icebp
fcompl
mov
lret
into
cmpsl
sub
ret
inc
push
sbb
sub
jns
jae
test
and
sbb
jmp
leave
jmp
rcl
jle
leave
jl
xor
insb
aad
aam
cmp
cmp
sbb
orb
aam
adc
xchg
adc
mov
call
rorb
lahf
das
insb
mov
pusha
add
add
sbb
adc
icebp
xor
cmpsb
cmp
push
inc
call
xchg
outsb
sbb
shlb
lods
jge
test
adc
mov
aam
fdivrp
rorb
outsl
hlt
int3
std
stos
fsubl
jle
pop
cli
push
outsb
notl
stos
or
and
bound
bound
inc
mov
adcb
arpl
ja
sarl
mov
xor
push
inc
dec
pop
inc
jo
pop
pop
loop
enter
cmp
add
mov
imulb
xchg
sub
inc
or
shr
jae
or
jbe
test
sbb
lds
nop
cmc
or
xor
inc
decb
aad
andl
aad
xor
out
ret
adc
imul
dec
loope
aam
icebp
pop
inc
ficomps
outsl
sub
pop
push
sub
int
call
or
mov
insl
jbe
sub
sub
nop
je
dec
ljmp
sbb
push
shlb
lahf
cs
mov
sbb
movsl
xchg
adc
test
mov
inc
cmp
cld
sbb
adc
dec
jge
pop
pop
fldt
clc
add
cmp
std
mov
push
jns
xchg
lods
outsb
out
outsl
mov
inc
ja
insb
pusha
sahf
ret
andb
loop
and
cmp
push
inc
mov
shrl
iret
mov
or
mov
xor
insb
push
cmp
push
pop
mov
mov
sarl
mov
fucom
mov
das
mov
das
or
dec
pop
inc
push
cld
xor
icebp
xor
enter
shrb
divl
xor
insl
inc
lahf
dec
or
sarb
jle
sbb
sbb
add
xlat
pop
insl
fstl
push
std
in
rclb
adc
fs
cld
xchg
mov
ret
popa
jg
rcr
leave
xor
inc
es
fidivrs
test
mov
out
sub
pop
sbb
jge
cmp
pop
mov
push
aam
push
add
cld
and
movsb
dec
or
adc
push
add
adc
into
jp
cmp
and
les
lods
xchg
sub
enter
xlat
mov
or
repnz
xlat
int
jne
in
popa
or
imul
arpl
sbb
xor
dec
je
sub
dec
repz
cltd
movsl
icebp
sub
das
into
and
aaa
rcrl
int
and
dec
iret
outsb
mov
fimull
inc
cmp
jnp
fndisi(8087
sbb
inc
mov
daa
cmp
mov
out
pop
gs
xor
pop
and
jecxz
in
push
push
xchg
dec
pop
cmp
xchg
fbld
subb
orl
in
stc
repnz
xchg
aam
fbstp
fsub
movsw
mov
mov
andl
push
outsb
or
ret
mov
gs
imul
pop
cli
pop
mov
or
test
adc
ljmp
fimull
subl
cmpsb
jno
mov
cmp
iret
je
add
or
cmp
xchg
jp
cmp
adc
out
out
mov
xchg
lahf
jl
xor
mov
mov
int
movsb
add
icebp
cmc
stos
out
in
aas
icebp
or
adc
jns
jp
jbe
mov
test
call
lods
ret
or
sahf
push
insb
add
lock
push
fs
or
aaa
push
xchg
mov
pushf
add
xor
mov
sub
stos
sti
inc
push
dec
dec
clc
and
ficoms
push
test
inc
cmp
cmp
into
mov
sbbl
adc
incb
xchg
inc
xchg
ja
popa
loop
and
shrb
push
sahf
fwait
dec
cmc
cs
mov
outsb
mov
mov
pop
popa
jp
or
add
nop
xor
add
sub
xor
in
ljmp
and
mov
mov
mov
bound
rcll
es
sti
mov
inc
jp
jge
out
dec
test
pop
jp
loope
in
push
sahf
test
mov
push
add
jae
mov
xchg
loope
mov
mov
js
jnp
scas
add
inc
mov
cmpb
jle
pop
or
sahf
popa
push
dec
adc
or
imul
inc
pop
and
dec
notl
cltd
flds
mov
icebp
scas
lret
push
mov
cmpsl
pusha
dec
mov
ret
negl
xchg
cwtl
ret
xor
dec
cmp
pop
cwtl
outsl
cmp
sahf
int
out
es
int3
mov
mov
xchg
into
rorb
addr16
cmp
jo
xor
les
aaa
cltd
add
cld
in
mov
ja
pcmpeqw
aaa
clc
imul
mov
or
shrb
outsb
dec
lahf
push
sbb
in
shll
out
cs
xor
add
push
lock
stos
and
fsts
xor
ficoms
jo
adc
and
addr16
add
mov
xor
xor
lods
adc
mov
cmpsl
daa
add
jne
inc
or
push
jb
loopne
sbb
cltd
ss
leave
pop
insb
in
std
jae
push
shrb
fidivrl
fwait
daa
cmpb
fbld
add
jae
jge
not
rcrb
jb
cmp
popa
jp
repnz
int3
clc
xor
mov
mov
or
pop
movsb
lcall
fidivrs
lock
in
sbb
cltd
xchg
cmp
in
inc
rcr
pop
daa
rclb
pop
and
aam
out
inc
jns
adc
inc
sub
mov
lods
adc
into
outsb
or
shlb
mov
ficoms
add
mull
jl
add
movsl
rcrl
jecxz
lcall
repnz
push
scas
add
test
inc
sbb
xor
mov
pop
fs
shlb
and
mov
adc
xchg
les
test
mov
shlb
mov
sbb
inc
jno
fistpll
insb
lahf
das
fcomps
or
jo
inc
insl
adc
lods
cmp
pusha
and
leave
cmp
adc
or
push
pop
or
pop
push
jp
sub
leavew
das
loop
lret
adc
jmp
xor
sbb
ljmp
dec
mov
push
inc
mov
and
dec
shlb
xor
into
repz
ss
inc
mov
or
mov
inc
pop
mov
es
jecxz
xor
stos
mov
jmp
les
add
ficomps
xor
mov
shrl
addl
out
aam
dec
sti
sbbl
lea
loop
shl
and
push
cmp
jmp
je
jne
add
in
test
mov
dec
mov
scas
fisubs
dec
adc
jae
cld
dec
xor
push
xchg
test
sub
xlat
or
test
or
pop
pop
fdiv
aad
mov
sbb
pushf
fs
mov
fisubl
je
pop
pop
dec
enter
xchg
pop
ja
lret
scas
xor
es
aas
push
cltd
xchg
push
lea
or
or
push
dec
out
cmp
push
jl
cmp
jle
stc
cmpsb
cmp
inc
xorl
es
insb
or
ret
decl
jne
adc
lahf
rclb
fstpl
hlt
jnp
loope
testl
cld
xchg
push
addr16
loopne
adc
scas
lods
iret
jne
xor
pop
clc
int
xlat
gs
push
rolb
xchg
inc
out
xchg
in
dec
lock
mov
sub
scas
add
mov
mov
cld
ret
sahf
imulb
pushf
inc
jg
lods
jp
rorb
icebp
ds
cli
mov
iret
nop
cmpsb
outsl
cs
sub
xchg
pop
pushf
mov
fisubs
dec
int
stos
cli
jno
push
fisubrl
out
and
and
in
out
dec
sbb
push
dec
mov
inc
stos
pop
push
xor
xchg
in
repnz
jmp
aas
loop
mov
std
push
pop
adc
pop
stos
test
or
insl
jl
mov
push
jns
adc
movsl
cmp
inc
and
adc
inc
xchg
inc
mov
xor
pop
movsb
cmpb
mov
fldl
lret
mov
cmc
mov
rcrl
repz
inc
adc
lret
test
xchg
jne
shlb
xchg
pop
xor
mov
loop
inc
aaa
mov
outsl
iret
jl
xchg
ljmp
push
aaa
data16
gs
aam
or
aas
ret
outsl
mulb
mov
mov
imul
popf
or
mov
jo
cmp
or
shr
out
jo
adcl
dec
out
aas
movsb
xlat
sub
je
pop
data16
dec
mov
mov
xchg
inc
sbb
add
mov
jno
test
fsubrs
push
in
dec
or
add
cmp
lret
punpcklwd
ret
scas
andl
aas
mov
cbtw
ficoml
das
inc
sub
mov
mov
stos
inc
xchg
xchg
es
mov
jle
loope
xchg
jmp
in
in
inc
prefetcht0
test
out
sub
adc
push
cmpsl
mov
jo
push
call
and
jnp
xchg
aad
clc
testb
popa
pushf
scas
fiadds
mov
push
les
mov
mov
aaa
insl
outsl
inc
push
sbb
lret
xlat
js
repz
aaa
pop
es
stc
aam
sub
sub
scas
jnp
leave
or
cld
dec
pop
lret
xor
adc
es
mov
mov
xor
shll
adc
or
and
inc
inc
leave
dec
inc
push
push
hlt
negb
and
in
xchg
and
les
pop
push
cwtl
jmp
lret
fiaddl
mov
pxor
mov
in
lds
mov
sub
pop
imul
or
fcomi
xorb
into
inc
bound
shlb
mov
popa
arpl
int
sub
sbb
cmp
xlat
test
aaa
dec
pop
imul
rcr
rcr
add
inc
jp
mul
add
mov
out
dec
ds
loop
xchg
pop
pop
daa
pushf
aaa
shll
fnstcw
in
mov
rol
dec
inc
sbb
push
xor
mov
aaa
xor
push
in
lret
jbe
push
mov
cmp
xchg
iret
pusha
pop
xchg
or
dec
xor
xchg
push
dec
add
xchg
push
outsl
lea
mov
jl
add
dec
xchg
mov
dec
fimuls
adc
mov
xchg
es
rcrb
pop
jae
mov
icebp
mov
xor
clc
jne
enter
mov
leave
inc
shll
loope
mov
lea
push
leave
mov
or
fidivl
push
jg
or
and
mov
adc
and
fwait
cmp
pop
aas
in
lret
shlb
jl
test
inc
int3
xor
adc
xchg
mov
or
pop
sub
mov
mov
cmpsb
jg
inc
out
sbb
sti
lock
pop
and
dec
sbb
mov
cwtl
and
outsb
mov
xor
cli
ret
fstpt
push
pshufw
lea
andl
lret
mov
lods
ret
xor
outsl
jne
sub
or
mov
xorl
sarb
jbe
js
adc
stc
loopne
in
pop
stos
popl
adc
mov
std
mov
out
stc
cld
clc
mov
cltd
jp
rol
pushf
dec
sarl
push
dec
mov
jle
jecxz,pn
fcmovnu
lahf
cltd
cmp
push
mov
xchg
add
je
movsb
push
popa
jp
rcl
leave
add
jmp
outsl
xchg
movsb
jnp
dec
test
mov
popa
cs
mov
pushf
jo
iret
sbb
ret
pushf
sbb
aam
xchg
ss
scas
idivl
ja
cmp
popa
outsb
cltd
sbb
pop
fistpl
shlb
and
cwtl
xchg
call
shrb
jmp
pop
mov
shll
je
cmp
pop
mov
lea
hlt
lods
mov
jns
adc
rcll
std
pop
in
mov
lea
enter
stc
stc
pop
or
cs
stc
cmp
gs
pop
nop
fstpl
inc
lcall
pop
xor
insl
out
insl
mov
mov
jbe
jge
push
jne
jecxz
les
jns
adc
loopne
icebp
add
cmpsb
cmc
adc
mov
xor
inc
pop
pushf
or
and
out
lsl
dec
das
adc
aam
imul
dec
mov
pop
mull
fwait
cmpsl
insl
mov
pop
sbb
pop
jle
adc
jmp
push
push
inc
pop
mov
ret
pop
outsl
cmp
repz
mov
sbb
pop
addr16
outsl
add
mov
cld
push
xchg
int3
dec
jmp
sbb
push
mov
rorb
ret
inc
cli
push
sbb
inc
int3
lods
test
push
mov
ss
cltd
imul
pop
mov
insb
cli
and
stos
enter
sub
xlat
outsb
rcrb
mov
pop
andl
ret
jno
xchg
lret
sbb
shlb
add
cmp
inc
adc
enter
jge
outsb
xsha1
cmpsb
dec
xchg
repnz
jge
pusha
bound
sub
mov
daa
movsb
or
pop
hlt
icebp
les
lret
xchg
bound
sahf
inc
lret
cmpsl
mov
xchg
stos
dec
stc
xlat
cltd
imull
test
mov
popf
repnz
jecxz
loope
xor
jae
inc
popf
mov
loopne
sbb
aam
xchg
out
je
sub
mov
and
icebp
mov
xor
inc
mov
add
xchg
add
aad
in
jne
jno
and
mov
pop
test
aaa
adc
sub
repz
sbb
sub
sar
out
lcall
popf
std
rorl
out
pop
cltd
jb
sbb
jbe
add
sbb
dec
push
dec
int
push
mov
test
data16
loope
jae
in
out
repz
loop
sbb
out
ret
cmp
pop
lods
lret
mov
cmp
jge
add
cmp
aam
pushf
pushf
mov
or
mov
in
scas
je
test
xchg
xor
out
jmp
mov
xor
stos
or
fsts
pop
xchg
decb
cld
popa
mov
sub
sub
adc
lret
lods
lods
mov
xor
push
mov
daa
adc
or
jno
inc
sbb
dec
loopne
sbbb
or
cmc
jo
int
sahf
imul
mov
inc
cmp
inc
scas
in
inc
mov
fwait
arpl
or
sub
fs
outsb
das
push
push
mov
mov
iret
pusha
pop
xchg
xchg
sub
lea
fwait
cli
adc
jne
ljmp
shrb
xchg
insl
or
xor
lods
pop
inc
inc
cmp
push
orb
les
xchg
push
add
rorl
in
fbld
xchg
lret
in
mov
pop
lret
adc
xchg
push
lret
scas
pop
mov
mov
sbb
push
insl
push
xchg
pop
xor
pop
arpl
mov
ss
inc
popa
add
shll
fwait
push
or
outsb
insl
div
or
mov
repnz
into
dec
lret
stos
in
lcall
call
jns
bound
jle
rcr
mov
lea
pop
movsb
pop
ljmp
cmp
cmp
cmc
mov
pop
lds
aam
and
add
nopl
inc
cmp
mov
addr16
imul
xor
roll
mov
jge
andb
scas
fnstsw
out
idivb
dec
pop
rolb
inc
mov
mov
or
rcll
testl
pop
stc
stos
sbb
or
mov
test
int3
scas
add
call
std
daa
bound
popa
add
ja
or
cmp
int3
or
jb
cmp
int3
fcmovb
test
callw
imul
adc
mov
andb
aaa
adc
fs
icebp
shlb
sbb
lahf
mov
adc
idivb
or
repnz
test
aas
jb
negb
inc
sub
dec
sti
pop
sub
mulb
hlt
jne
jmp
call
out
inc
cmp
jns
xor
xchg
adc
pop
mov
aaa
lds
stos
adc
cld
aad
mov
das
mov
cmp
xor
sti
movl
insl
jg
fildll
mov
popa
dec
push
or
jmp
xor
mov
add
mov
xor
pop
into
aam
cltd
jle
out
fwait
xor
pushf
mov
sub
adc
lock
fadds
fstp
push
pop
jmp
aaa
add
dec
dec
mov
sbb
mov
mov
push
push
or
orb
movsb
sub
xchg
mov
mulb
xorb
sahf
mov
lods
inc
test
jns
cli
push
push
ret
rolb
inc
call
jae
mov
gs
fucomi
outsb
jmp
lret
lahf
jo,pn
cmpsb
jo
adc
mov
mov
mov
mov
push
loope
adcb
daa
divl
cmpl
xor
call
repz
push
push
idivl
xor
mov
insl
outsb
sub
shl
cld
pusha
adc
cmp
push
mov
aas
adcb
out
imul
js
aam
and
imul
mov
or
xchg
shll
cmpsb
dec
cmp
daa
scas
sbb
scas
inc
push
push
inc
in
lds
les
pop
leave
mov
sub
pop
roll
xchg
lods
cmpsl
jmp
pushf
jb
push
jmp
repz
sub
incl
insb
fdivl
nop
and
cli
and
jnp
test
mov
fiadds
mov
pushf
jnp
adc
xlat
jne
and
shrb
mov
mov
and
roll
popf
rorb
outsb
fisubs
xchg
mov
in
push
scas
je
aam
pop
cmpsb
xor
loope
jge
and
adc
hlt
cmp
repz
adc
loope
cmp
inc
pop
mov
mov
xlat
jg
cltd
jp
push
mov
in
jbe
xchg
jo
inc
pop
cs
pop
cmp
push
cmp
inc
mov
dec
in
pop
push
int3
rcr
pusha
jecxz
xor
mov
insb
push
loope
int
push
stos
mov
shlb
jmp
mov
lods
shr
ja
xor
mov
sar
out
and
lds
ss
mov
push
leave
and
loopne
pop
cmpxchg8b
or
je
in
mov
sub
aam
test
xor
mov
loopne
xchg
movsb
mov
outsl
xor
imul
shll
sub
andl
xchg
and
mov
inc
sub
sbb
pop
in
in
inc
inc
add
mov
lods
ret
dec
aad
add
jmp
in
pop
push
loope
or
repnz
imul
sbb
int3
insl
inc
fs
faddl
lock
pop
pop
rcl
es
out
fisubl
pop
add
sbb
jmp
cs
mov
sub
mov
popa
arpl
cmp
fdivrs
addr16
pushf
call
js
pusha
outsl
sbb
nop
adc
adc
xchg
jae
mov
daa
loope
fbld
movsb
repz
pop
and
and
dec
push
xorl
pop
add
lods
mov
insl
mov
and
dec
jmp
mov
rorl
fwait
imul
xor
mov
test
push
inc
pusha
add
sbb
add
mov
scas
or
hlt
and
push
int
mov
mov
scas
pop
cmp
loopne
or
sbb
mov
mov
test
stc
xchg
mov
sbb
sahf
sub
xor
cltd
subl
lret
sub
insb
js
cmp
pop
into
nop
pop
movsl
loope
pushf
inc
dec
mov
aad
lret
ss
cmp
add
xchg
or
dec
push
imul
test
and
or
inc
mov
push
adc
scas
sub
inc
inc
jbe
inc
dec
arpl
in
sbb
and
xchg
sub
lea
imul
insb
imul
aad
add
push
mov
sbb
pop
test
arpl
pop
das
inc
sahf
enter
add
sub
rorb
fstpl
and
sarl
loop
sbb
in
mov
and
sbb
mov
mov
adc
sub
cld
in
xchg
bnd
push
jge
fists
outsb
dec
and
or
out
lret
xchg
test
jecxz
aam
jnp
popa
sti
fisubrl
mov
imul
mov
scas
std
pop
mov
cwtl
adc
in
inc
das
je
sub
push
mov
orl
stos
lock
push
out
dec
ljmp
sbb
aaa
cmp
add
xor
inc
mov
sbb
jnp
sub
call
imul
outsl
mov
mov
push
addl
mov
and
mov
daa
ss
and
mov
add
rcl
add
js
add
and
nop
mov
lods
pop
sti
subl
not
mov
adc
mov
cmp
dec
cmp
xchg
test
and
jbe
inc
jecxz
mov
inc
xor
cmp
and
sub
fstp
mov
add
rorl
cs
mov
mov
pop
cli
test
inc
fsubrl
mov
fistpl
push
jnp
mov
int
add
ds
addr16
mov
or
aaa
fcmovnu
jo
addr16
pushf
add
shrb
sbbl
lea
pop
mov
repz
pop
mov
addb
jmp
and
mov
sbb
mov
mov
mov
inc
outsl
rcrb
mov
inc
cli
cs
or
imul
fisttpl
cs
mov
loop
test
dec
xlat
xchg
mov
push
inc
pop
scas
subb
cli
and
cltd
nop
jmp
push
insl
jg
outsl
push
aad
nop
out
mov
enter
dec
aam
test
icebp
inc
std
aas
jbe
in
leave
xchg
cmpsl
and
pop
sarb
dec
mov
xlat
out
pusha
mov
out
imul
xor
in
dec
call
sbb
inc
inc
gs
xor
xchg
mov
js
mov
popa
rol
push
loop
pop
aad
xor
push
aad
xlat
xor
loope
add
push
pusha
mull
stc
aas
lock
inc
mov
imul
rcl
gs
sub
xchg
mov
or
outsb
ret
sub
roll
scas
stc
shlb
or
add
xchg
xchg
mov
pop
xor
ret
and
and
or
fnstenv
jb
pusha
cmp
inc
int3
cmp
mov
pop
lock
test
lods
xchg
imul
shlb
mov
imull
inc
dec
fcompl
cmp
mov
jmp
mov
or
cmp
rorb
out
rcll
ror
adc
cmpsb
xchg
aaa
mov
jle
imul
pop
loop
jbe
jo
cmp
mov
dec
xchg
aaa
lea
push
xchg
mov
push
enter
cs
scas
test
lock
jb
push
aam
mov
lods
jb
mov
cmp
xor
je
in
cmpsb
inc
lods
pop
push
jle
xor
mov
test
xchg
mov
stos
gs
into
stos
cmpsb
cmpsl
lods
rcl
xor
mov
push
adc
sub
cmc
mov
mov
xor
mov
clc
xchg
les
mov
xchg
cwtl
mov
push
mov
scas
shld
cwtl
xchg
mov
aaa
les
jp
sbb
enter
faddl
leave
push
inc
sbb
enter
orl
mov
sbb
adc
fcoms
sbb
inc
inc
fnstcw
jg
push
shll
sub
jbe
push
mov
adc
hlt
sbb
scas
sbb
orb
mov
push
adcb
jb
movsb
push
ja
inc
lret
dec
sub
or
xor
imul
mov
jae
or
cmp
mov
cmovb
pop
pop
sbb
int3
mov
pop
dec
push
inc
outsl
in
lret
popf
notb
push
cmp
js
xchg
ss
insb
lret
ljmp
xor
les
in
ss
out
sub
pushf
jne
cmp
fld1
out
sarl
in
xchg
sbb
leave
popa
mov
sahf
jb
adcl
daa
sbb
fsts
std
loope
or
xchg
xor
mov
mov
test
loop
movsw
push
mov
nop
adc
xchg
dec
and
imul
daa
mov
xor
shl
lods
nop
fisubs
dec
sub
cltd
and
push
sub
sarl
fimull
mov
or
jmp
and
xchg
shl
stc
mulb
push
popf
fidivs
cwtl
jns
pop
cmp
sti
loope
in
dec
xchg
xchg
aas
sbb
in
add
lcall
adc
ret
mov
push
nop
inc
das
add
sub
scas
lods
xchg
push
test
fisubl
xchg
jmp
pop
pop
fisttps
sarl
aas
sub
mov
ljmp
push
out
xlat
mov
add
ljmp
pop
mov
mov
test
xor
add
push
dec
pop
in
pop
mov
js
xor
and
lods
cmp
sti
push
mov
subl
neg
insl
jg
push
push
scas
add
add
gs
enter
cmp
lss
xor
or
in
jne
dec
and
and
aaa
dec
push
xchg
dec
push
pop
lea
rorb
scas
xor
push
outsl
xchg
pop
or
scas
dec
and
jmp
cmp
fsubrl
insb
sbb
mov
in
in
je
daa
test
pop
mov
dec
jae
xchg
shrl
dec
fildll
xor
add
pop
outsl
sub
adc
mov
and
jno
rcrl
push
jmp
jle
xor
lahf
push
ljmp
cmp
mov
push
in
sbbb
mov
cli
mov
outsb
ss
movsl
test
in
test
xor
in
shlb
mov
incl
gs
orb
mov
sahf
fldcw
and
jo
xchg
push
in
mov
insb
imul
mov
nop
cmp
sbb
cmp
jp
dec
mov
arpl
push
dec
inc
lret
jp
jle
mov
aad
out
mov
mov
ljmpw
sbb
data16
mov
daa
pop
jmp
mov
andl
aas
xchg
add
inc
cmp
xchg
hlt
rorb
shlb
jb
ret
mov
lds
push
cmp
mov
mov
incl
xchg
dec
pop
xor
xor
mov
test
popa
lea
dec
mov
andb
mov
clc
std
cmpb
cld
cmpsl
xor
notl
cmpsb
xor
push
in
xor
sbb
cli
fadd
dec
icebp
cmp
ja
push
pop
insb
cvttps2pi
mov
adc
push
jne
clc
leave
ss
pop
les
add
cmc
aam
faddl
repnz
mov
push
loope
mov
cwtl
mov
cwtl
adc
pushf
ds
testl
stc
in
cld
in
sbb
lea
ds
aad
add
add
insb
gs
cmpsl
aad
dec
mov
sub
mov
xor
js
sub
inc
mov
pop
fsubr
jge
out
or
xchg
jge
add
fnstenv
mov
call
cmpb
jb
enter
xchg
mov
js
stos
mov
jbe
and
inc
imul
addr16
pop
dec
or
mov
ljmp
leave
adcb
incb
sahf
sbbb
push
add
mov
jbe
push
or
dec
outsb
xor
mov
mov
lea
xchg
int3
jecxz
into
movsb
xor
jno
add
adc
add
jne
inc
dec
shrl
sbb
add
adc
adc
xchg
xchg
xor
loopne
push
fdivr
xor
push
adc
cltd
sbb
jns
mov
xchg
inc
das
add
cltd
fcomps
inc
push
bound
and
jb
pop
rcrb
mov
sbb
mov
jbe
push
sbb
dec
jbe
jg
fsubrs
jge
stos
push
lcall
mov
mov
sub
xchg
rcrb
data16
dec
xchg
repnz
loopne
shl
cmp
mov
or
iret
dec
dec
mov
es
test
xchg
out
scas
out
push
jo
sbb
lret
stos
ss
shlb
inc
movsb
jl
mov
shrb
inc
inc
mov
push
jp
inc
inc
fnsave
pop
mov
jle
mov
test
push
stos
inc
lcall
sub
int
arpl
sbb
test
imul
in
repnz
jo
insb
adc
xor
xor
jnp
and
xor
mov
popa
dec
nop
push
not
inc
pop
aas
decb
sahf
int3
hlt
idivb
and
dec
cmp
lods
dec
xor
and
jle
dec
jo
mov
mov
jnp
mov
scas
mov
and
mov
lock
fdivrl
mov
dec
mov
lret
bswap
xor
bound
mov
shl
mov
daa
xor
pop
xchg
pop
addr16
fiaddl
sahf
cwtl
and
loope
adc
adc
inc
push
addr16
add
jge
stos
or
mov
push
jp
es
rorb
filds
das
ljmp
pop
sbb
das
sbb
adcl
mov
jb
jge
add
std
enter
cmc
enter
ret
jno
jmp
sti
cmpsb
sub
divb
mov
and
pop
push
sub
cmpsb
cmp
loope
scas
movsl
lcall
dec
or
bound
mov
inc
cltd
and
push
inc
sahf
outsb
or
clc
pop
xchg
rorb
jno
inc
and
stc
stos
stos
in
pop
cmp
push
cmp
xchg
test
in
stos
push
fstpt
jecxz
add
sbb
imul
aam
rep
mov
outsb
insb
cld
pop
sahf
push
cld
mov
sbb
cmpsb
add
je
jecxz
jo
dec
aad
mov
lret
mov
stos
shrl
jl
and
push
scas
loopne
xor
test
mov
jl
es
popa
sub
mov
dec
push
xchg
push
xchg
ss
nop
sbb
pop
mov
jae
or
xor
fwait
iret
lea
into
arpl
inc
mov
adc
fstl
add
or
mov
in
cltd
sbb
inc
cmp
stc
movsb
insl
push
fldcw
rorl
fwait
repnz
in
es
add
divl
dec
in
adc
ficoml
jnp
or
jo
and
sarl
pop
shrb
fs
mov
and
test
movsb
mov
pop
dec
and
adc
fildl
fstps
xchg
and
gs
clc
ss
in
and
aad
out
adc
and
lods
dec
inc
insl
shrl
loope
cmp
lods
mov
xchg
lods
pop
fisubrs
out
mov
mov
ret
ja
push
popa
stos
shr
ret
pop
enter
leave
mov
adc
sub
adc
es
push
divl
orb
sbb
out
lret
aam
mov
jo
dec
js
mov
imul
stos
xor
push
cmp
pop
stos
cmp
cli
sub
aam
stc
cmp
repz
jmp
icebp
cmp
cld
repnz
fstpt
imul
fwait
mov
or
cmp
jne
ret
and
js,pn
cmp
cs
loop
xor
ljmp
divb
sub
mov
loope
ficoml
hlt
sar
outsb
ljmp
xchg
insl
fdivrl
or
inc
insl
imul
inc
or
cli
test
sub
in
cld
fwait
mov
push
stc
push
mov
or
mov
pop
or
cmp
push
cmp
sub
fwait
pop
imul
into
in
mov
dec
fildll
sub
sub
les
and
xor
testl
mov
cltd
sub
jecxz
dec
loopne
push
imul
clc
int3
test
or
leave
jle
mov
adc
rcll
fists
aas
push
jmp
cmpsb
inc
fiaddl
sbb
fsubrs
adc
fldt
pushf
nop
mov
nop
enter
jl
sub
mov
xor
jle
aad
xor
movsl
xor
mov
jp
jb
lret
ja
lret
cmpb
xor
cmp
je
add
dec
xlat
fucomip
in
int3
jg
test
mov
mov
inc
sbb
aam
bound
push
mov
lret
jb
scas
sub
inc
imul
xor
mov
cs
out
mov
cmpsl
jno
inc
ret
jno
test
in
sbb
lock
repnz
in
push
inc
test
and
xor
push
add
mov
rorl
and
jge
or
pop
sarl
mov
out
jnp
leave
imul
fisttpll
dec
loope
jbe
out
and
and
mov
cmp
movsb
rclb
cmp
mov
aas
ljmp
inc
xchg
aaa
jp
inc
pop
jno
cmpl
mov
and
adcl
imul
sbb
arpl
cmp
movsl
pop
adc
pop
mov
mov
call
xor
out
sbbl
mov
fldcw
adc
mov
fisubl
dec
inc
add
pop
mov
ss
dec
movsl
push
out
xchg
push
ljmp
cmp
sub
gs
jge
push
mov
pop
jmp
mov
dec
xchg
lds
jge
jb
mov
sub
cli
and
sbb
inc
pushf
cs
push
add
adc
out
push
jle
rol
fisttps
sbb
int3
mov
test
jne
testl
out
lret
std
shl
daa
jbe
adc
lds
pop
jnp
ds
not
push
faddl
ja
pop
mov
out
cs
jns
pop
or
loopne
jnp
jnp
loopne
fistl
xor
je
mov
ror
jg
sbb
add
imul
cs
jo
jge
push
push
sub
es
dec
mov
and
adc
jbe
mov
add
jae
xchg
test
push
push
mov
push
lretw
inc
sbb
mov
sahf
aaa
jmp
pop
hlt
shl
sbb
and
stc
in
in
ja
sqrtps
mov
shlb
in
push
mov
nop
pop
mov
mov
jne
pop
out
adc
ficomps
loop
and
std
push
and
mov
addb
inc
sbbl
int3
push
inc
lcall
mov
testb
int
xchg
mov
dec
lcall
ja,pn
push
movaps
enter
jge
inc
sub
and
push
cmp
fdivrs
add
mov
inc
sahf
aad
cmc
bound
or
mov
pusha
icebp
in
xchg
pop
mov
loope
ds
outsb
lret
xchg
jg
inc
mov
mov
clc
dec
dec
and
jl
push
call
and
xor
xchg
fnstsw
lods
nop
mov
in
mov
xlat
shrb
jmp
fdiv
mov
sbb
push
dec
pop
jns
mov
cmpsl
mov
dec
mov
add
mov
fyl2xp1
iret
ffreep
mov
repnz
jne
sub
popw
je
rorb
push
int3
cmc
jle
lret
xor
inc
insl
or
mov
insl
clc
or
mov
jle
add
imul
rol
pop
xchg
pop
dec
add
sti
cmp
dec
dec
mov
push
call
sarb
mov
inc
imul
fsts
sahf
out
push
ds
inc
dec
mov
cld
shrb
dec
int3
mulb
cmp
je
mov
adc
push
push
cltd
mov
sub
sahf
jb
xor
or
ss
popl
push
pop
test
aaa
lea
sbb
xchg
push
mov
xor
in
mov
fdecstp
adc
repnz
insb
stc
sti
hlt
popaw
jno
push
outsb
call
adc
subl
sbb
cltd
rorb
xor
lods
push
mov
and
jo
cwtl
cld
stos
sbb
stc
shl
sub
lret
jg
in
jge
sub
xlat
mov
push
fs
dec
jecxz
lahf
cs
cmp
sub
fisttps
loope
dec
sub
fstps
jb
ret
sub
mov
cmpb
fistl
into
clc
int3
pop
in
fs
jne
lahf
std
push
push
add
ret
ljmp
ret
cmp
movsl
aaa
mov
aaa
pop
sub
pop
sbb
fdivp
sub
xchg
bound
mov
outsb
sbb
mov
dec
rorl
dec
dec
addb
sub
mull
popa
pushf
mov
jo
xchg
or
mov
js
push
mov
xor
inc
pop
test
sub
enter
fists
orb
cmpsl
xchg
add
adc
adc
xor
and
inc
js
mov
cltd
adc
or
adc
int
dec
aam
pop
lcall
xlat
add
sti
jle
insb
cmp
xchg
push
ljmp
outsb
test
inc
dec
je
data16
jmp
popf
stc
mov
push
icebp
mov
shll
stc
out
aam
push
aad
and
outsb
ja
add
jl
xchg
aas
dec
enter
popa
push
cmp
sbb
iret
mov
xchg
test
sub
cmovbe
lcall
jl
pop
lods
xor
push
jge
test
sub
jp
mov
mov
pop
rorl
mov
dec
jne
data16
jge
jl
sub
sub
cmp
jmp
cmp
movb
sbb
sbb
shll
popf
inc
daa
jp
adc
pop
int3
stos
in
jecxz
sti
lea
cmp
jp
clc
and
roll
out
jge
test
inc
or
jle
mov
loopne
pop
xchg
mov
adc
stos
int
jns
nop
iret
into
mov
loopne
jmp
jns
and
int3
jb
add
pop
leave
fcoms
jecxz
lea
data16
or
adc
dec
xchg
cmpsb
lahf
stos
pop
add
jmp
mov
stos
mov
scas
dec
pop
sub
dec
outsb
ret
jae
push
aad
jge
repnz
cmp
aas
dec
push
lods
dec
pop
xlat
mov
cld
gs
das
imul
fsubl
dec
inc
jo
cmp
jno
out
inc
aad
fcoms
mov
cmpsb
jo
xchg
sahf
push
enter
hlt
adc
pop
push
ss
les
jge
lahf
cmpsb
sbb
call
ss
add
xlat
jecxz
lret
scas
jl
int3
and
add
adc
adc
mov
mov
dec
mov
pop
push
lea
aas
sbb
jne
mov
repnz
icebp
mov
adc
pop
and
mov
push
or
pop
inc
sub
push
or
shr
jge
aam
jae
insl
sbb
jne
cmpsl
xor
push
loop
mov
movsb
pusha
jecxz
addl
mov
addps
sbb
jb
sub
or
or
into
mov
push
fisubl
and
inc
insb
test
sub
rorb
outsl
jle
mov
cmp
imul
cmpl
loope
adc
xor
cmc
testl
aaa
sub
dec
ja
fsubrp
fs
dec
sahf
add
subl
iret
bound
pop
pop
int3
push
mov
fldenv
xchg
inc
ss
jo
gs
fisubrs
loopne
into
cwtl
and
fnstsw
add
jle
inc
jns
das
jle
xchg
xor
and
add
push
xchg
data16
adc
lret
sub
shlb
pop
or
call
sbb
mov
pushf
or
lock
inc
ret
mov
js
or
push
push
push
inc
aam
es
and
ss
rol
jo
fcmovne
dec
out
js
scas
movsl
nop
ficompl
cmpsb
enter
imul
lock
pop
mov
and
xchg
push
sti
test
mov
test
sbb
mov
shld
stc
jmp
pop
mov
mov
pop
lcall
jmp
dec
xor
add
fldenv
fcomip
mov
ss
push
add
lea
dec
fiaddl
decb
push
inc
jae
push
sbb
cmpsb
sbb
or
mov
cmp
sbbb
je
faddl
adc
sahf
lock
call
nop
pop
xchg
fimull
xor
nop
es
jge
ja
ret
popf
jbe
and
daa
mov
shll
pop
cmpb
ljmp
pushf
mov
insb
add
ret
xor
test
insb
adc
shl
jns
push
aas
aad
mov
xchg
jp
out
jecxz
sbbl
add
fiaddl
lods
outsb
push
dec
push
jp
pop
bound
repnz
mov
int
loopne
pop
fiaddl
aas
cli
cs
cmp
insb
fdivl
cmp
out
jg
sahf
inc
xor
sub
cltd
sahf
pop
loope
xchg
jb
fbstp
inc
and
addb
jnp
dec
pop
xchg
jg
adc
inc
cmp
loopnew
jbe
es
ja
addr16
inc
mov
mov
aas
sub
add
test
sbbb
aaa
xlat
aad
pop
dec
jb
push
push
xchg
jl
stos
mov
mov
sub
or
scas
nop
and
lahf
sub
dec
and
push
pop
xor
push
daa
cmp
insl
fnstenv
ret
cmpsb
ljmp
lcall
call
movsb
sub
sub
lods
ret
dec
subl
sbb
inc
sub
cmp
dec
out
fimuls
and
xchg
xchg
add
ret
stos
mov
popf
dec
sti
mov
jb
mov
int3
cli
and
rcrl
mov
and
addr16
fdivrl
mov
mov
shlb
imul
insl
lcall
jns
add
push
inc
test
movsl
mov
mov
jnp
lock
ret
ret
popf
mov
xchg
out
sub
sub
jp
arpl
mov
inc
cmpsb
loope
pop
sahf
into
sub
jp
cmp
cmc
rcl
xchg
xchg
clc
mov
mov
pop
outsb
ret
mov
pusha
add
fildl
imul
mov
add
into
jns
mov
addr16
cmp
in
dec
cmpsb
repz
or
std
push
adc
fwait
pop
out
das
dec
or
mov
jb
pusha
and
xor
in
mov
or
jp
loope
cwtl
jns
call
pop
or
popa
sti
jl
xor
xchg
fisttps
fstpt
daa
adc
lret
cmp
jge
mov
mov
jo
data16
cmp
int3
jno
jl
movsl
pop
sbb
lock
mov
inc
addr16
repz
pop
cmpsl
sbb
or
mov
cwtl
mov
or
inc
sahf
inc
jne
jb
mov
in
sbbl
jb
adc
pop
sub
jg
jg
xchg
addr16
jecxz
iret
add
cmpsl
pop
std
ljmp
ret
test
mov
lds
ljmp
mov
cli
adc
jb
adc
fsts
fnstsw
js
or
cmpsb
test
hlt
or
mov
xor
mov
mov
sbb
iret
ja
scas
sub
fdiv
mov
xchg
movsl
cmp
pop
idivl
test
xlat
mov
push
jns
mov
es
fidivrs
lcall
fxch
int3
xlat
les
and
ffree
insl
cmp
cmp
sub
test
stc
add
mov
push
ljmp
inc
and
out
adc
xchg
lret
jmp
js
push
sub
fs
cmp
lret
mov
xchg
mov
push
js
add
dec
dec
ret
cli
lods
cmp
cwtl
push
jns
pop
mov
jno
addr16
pop
test
adc
push
or
push
mov
add
in
rorl
adc
cmp
and
cld
ret
cmpsl
inc
scas
mov
cmpsb
xchg
lret
mov
ss
cmp
mov
sbb
call
orl
add
arpl
and
pop
das
fcmovnbe
not
mul
jnp
subl
call
mov
adc
jp
shlb
int3
int
mov
das
jnp
std
pop
les
pop
rcrb
sbb
adc
test
jns
push
mov
mov
cltd
sub
xor
mov
lea
mov
in
in
cmpsb
push
mov
mov
imul
cmpsl
mov
mov
xlat
ficoml
fcom
stc
shr
in
lea
shll
faddl
es
inc
ret
inc
mov
movsl
push
ss
push
pop
xchg
sub
jle
movsl
mov
cmp
movsl
xchg
sarb
subb
pushf
mov
sbbb
pushf
movsb
data16
in
or
fwait
pop
rcrb
xchg
dec
add
jg
inc
negb
adcl
outsl
pop
test
push
imul
shll
ficompl
push
cmc
stc
pop
mov
jne
xor
or
xchg
cmp
loopne
mov
xor
or
psraw
mov
mov
lock
movaps
cmp
pop
stc
xorl
jp
jae
loope
lret
in
mov
mov
shl
ds
pop
add
fnop
stos
cld
rcrb
scas
dec
ret
fwait
cmp
clc
pop
stc
jae
sub
and
pop
mov
es
dec
and
loope
dec
mov
jge
sti
nop
mov
sarl
push
inc
pop
jle
sbb
push
and
into
ljmp
loop
ret
mov
pop
sub
dec
jle
cmp
adc
push
cwtl
jge
push
insb
nop
jne
dec
mov
sub
test
enter
lahf
or
pushf
xchg
test
dec
push
sbb
xlat
sub
mov
aam
loope
hlt
pcmpgtb
pop
sbb
jb
sub
sti
cmp
add
cs
xchg
les
movsb
int
shlb
in
addr16
mov
add
xchg
es
xor
adc
sub
jmp
jp
lods
fstpt
push
dec
fwait
fwait
pop
xor
add
mov
movl
aam
jb
js
cmp
sarl
dec
rcrl
add
cmc
xchg
fisubrl
push
dec
mov
lret
mov
je
sbb
out
or
addb
js
dec
or
lea
repnz
icebp
and
or
data16
push
lods
cmc
xor
jle
lock
push
rcrb
inc
add
push
xchg
add
clc
repz
cmc
es
lds
ljmp
jge
adc
loope
xor
ret
in
ja
add
test
shrl
adc
popf
dec
pop
sbb
jo
push
mov
mov
dec
addr16
sub
push
jb
into
and
and
ror
fstpt
cltd
pop
mov
in
std
mov
fistpl
inc
inc
addr16
push
mov
popaw
xor
cmp
jnp
mov
lret
mov
outsl
mov
dec
mov
dec
cmpsb
mov
into
cmpsb
int3
out
push
cmp
aad
popf
mov
jecxz
data16
xchg
xor
call
rcr
iret
loop
adc
fistl
jle
xchg
mov
mov
jb
loopne
divb
adc
pop
popa
adc
inc
fisubs
fldt
and
mov
cmp
outsb
test
adc
add
addl
lahf
jo
aas
inc
mov
in
std
jl
dec
mov
pop
xor
lcall
mov
jnp
sarb
sahf
les
cmp
in
mov
pop
mov
sbb
inc
fwait
inc
xchg
mov
xchg
mov
icebp
mov
stos
ret
pushf
jnp
dec
sarl
mov
pop
mov
jae
pop
fisubs
mov
cvtdq2ps
and
aad
out
insb
nop
dec
dec
dec
pop
jno
testb
xchg
mov
or
xchg
popa
xchg
addr16
dec
test
xchg
xlat
cmpsb
stos
push
je
mov
sbb
pop
negb
in
or
cltd
pushf
ss
ficompl
fwait
push
jge
jecxz
subb
dec
call
in
int
cmp
fcoml
aas
lahf
sahf
add
cmp
push
dec
add
inc
insl
cmp
push
test
aas
cmp
xchg
dec
loopne
enter
je
pop
xlat
and
push
lcall
aam
outsl
repz
es
sbb
enter
sbb
mov
cmpsb
push
xchg
movsb
or
sub
or
sbb
jg
cmpb
lcall
mov
aam
mov
xor
js
sbb
js
push
sbb
adc
loope
shrl
adc
add
mov
mov
jbe
sbb
pop
cmp
xlat
mov
xor
hlt
ds
cltd
pop
cltd
jb
mov
ljmp
arpl
fwait
pmaxub
scas
sub
aad
xchg
fcoml
dec
out
mov
dec
add
sbb
xor
pop
mov
dec
gs
push
lret
dec
dec
movsl
movsb
jle
and
fbld
or
or
inc
sbb
shll
inc
into
jae
es
pop
arpl
aam
je
nop
fstpt
test
pop
mov
test
push
cmp
jns
push
lea
jge
inc
es
xchg
mov
lcall
or
or
xor
fsubrp
push
out
popf
jb
gs
xlat
mov
mov
or
xlat
cmp
mov
push
sub
cmpsb
mov
add
cmp
xchg
pop
pop
repz
sub
shl
pop
xor
cld
cwtl
or
stos
outsb
sahf
pushf
jnp
in
jb
shrb
insl
jno
xor
push
dec
movsl
sub
out
xchg
dec
cwtl
adc
mov
mov
hlt
mov
std
movsb
lahf
shll
dec
fsubrl
mov
cli
xor
dec
xchg
sub
shlb
add
insl
or
add
daa
inc
fcompl
mov
std
filds
pop
mov
inc
int
mov
mov
das
add
xchg
cmpsb
xchg
jbe
xchg
xchg
xchg
xor
adc
testl
mov
xchg
clc
pop
xchg
adc
int
jg
add
cltd
in
mov
test
push
and
insl
pop
fimuls
or
add
mov
dec
ja
mov
push
cmp
or
push
stos
fisubl
js
push
dec
lret
jne
xlat
shl
test
test
xchg
push
jb
mov
and
sub
add
or
pop
mov
jne
xchg
sbb
dec
insl
pop
cmpsb
pop
out
xchg
std
aas
bnd
sbbb
lret
repnz
notb
jo
mov
repz
sub
xor
fistpl
sub
pop
xlat
mov
out
insl
dec
sub
jnp
mov
into
ficoms
xchg
xor
jg
mov
insb
xor
into
bound
and
movsl
jb
mov
jno
enter
jmp
pop
into
lea
adc
inc
jae
test
neg
test
jbe
cmpsl
ret
push
testl
movsb
mov
sbb
mov
popa
cmpsl
xchg
rcpps
mov
mov
out
mov
repnz
ljmp
in
pop
lods
cwtl
lcall
xlat
inc
jo
nop
int
mov
dec
fsubrs
cmp
cld
xor
mov
nop
dec
enter
jae
sbb
cs
and
jl
mov
inc
inc
mov
ficompl
inc
lret
mov
in
out
bound
cwtl
xor
into
push
jle
push
ja
enter
and
std
and
add
pop
jle
cltd
mov
add
pop
ret
cmp
pusha
mov
and
ds
iret
sbb
mov
inc
iret
dec
clc
aas
lods
cmp
adc
inc
push
test
inc
inc
sbb
shlb
movsl
movsb
xchg
lods
or
popf
repnz
xchg
dec
pusha
mov
inc
cmp
outsb
cmp
add
cmpsl
mov
into
aaa
sbb
into
mov
je
mov
sub
cmpb
jne
popf
mov
popa
stos
ljmp
sbb
in
pop
adc
mov
lea
dec
pop
add
jg
jb
aas
fildll
aam
stos
fisubrs
ficoml
cltd
sbb
or
mov
inc
mov
pinsrw
out
insl
push
sti
mov
xor
lds
stos
inc
into
out
push
and
inc
test
nop
sbb
sub
inc
pop
mov
and
daa
inc
lds
xor
insl
pop
jle
pop
adc
fistpll
int3
out
mov
popa
sub
jb
das
mov
sbb
dec
adc
mov
in
lds
jnp
cmp
mov
ja
sbb
or
mov
rol
ja
outsl
fldl
test
adc
or
popa
adc
ljmp
lea
push
in
aas
cli
inc
ljmp
out
sbb
bound
xor
in
sub
decl
negb
nop
pop
cmp
dec
je
test
mov
jno
xchg
mov
mov
sub
sbb
mov
icebp
xchg
sahf
push
jl
cltd
sub
outsb
sub
xchg
rcr
jp
or
sbb
mov
jp
in
sbb
sbb
mov
jmp
push
sbbb
cmp
xor
xchg
sahf
in
inc
mov
push
fnstenv
push
sub
rcr
sbb
lods
mov
xchg
cmc
mov
cmp
mov
or
push
fldt
in
and
scas
pop
stos
lods
push
mov
mov
imull
in
and
mov
test
mov
pop
subb
xchg
sub
sbb
inc
and
out
nop
cld
sbb
lods
cmp
sti
and
jbe
sub
int3
mov
xchg
pop
mov
in
jp
sbb
mov
js
xchg
test
mov
xchg
mov
imul
cmp
jae
jno
or
aam
jmp
sbb
rolb
scas
pop
jno
movsb
mov
mov
stos
push
gs
rcrl
pushf
mov
out
cmp
inc
and
mov
and
cld
push
mov
add
in
movsl
push
subl
pusha
sbb
lea
push
jbe
shll
cmc
inc
and
pop
dec
repz
push
out
sub
add
cmpsl
pop
fsubp
cltd
aaa
cmp
inc
inc
mov
test
movsl
jge
mov
pop
xor
or
mov
xchg
fdivrl
jge
jo
push
xor
loopne
dec
cltd
and
dec
pushf
inc
lcall
aas
mov
xorl
mov
into
mov
bnd
inc
loope
inc
jnp,pn
jae
mov
arpl
dec
push
mov
xchg
in
loopne
das
jb
je
mov
mov
gs
add
xor
scas
and
xor
scas
sbb
in
rorl
ret
mov
in
sbb
out
enter
xor
stc
jmp
sarb
or
cs
sub
rorl
rorb
inc
dec
xchg
in
shrl
es
mov
test
outsb
cmpsl
inc
ds
xor
xor
out
inc
ret
cmp
movl
cmp
mov
testl
adc
jg
mov
in
jge
dec
es
dec
pusha
pushf
xchg
mov
and
in
mov
cmp
test
jno
addr16
jnp
sub
cwtl
je
sbb
cmp
cmp
cmp
outsl
sub
adc
bound
mov
and
movsl
into
pop
cmp
and
loope
push
or
and
lahf
xchg
sub
hlt
or
xchg
add
jp
adc
sbb
dec
ret
xchg
xchg
lcall
test
xor
fmulp
scas
jbe
jle
mov
addb
jns
cmp
ds
insb
xchg
add
movb
daa
sarb
mov
lea
dec
out
sbb
mov
xchg
jecxz
iret
lret
push
mov
mov
nop
add
dec
cmp
aam
xchg
cld
push
dec
repnz
and
enter
repz
adc
addr16
insb
pop
xchg
xlat
xchg
push
pop
nop
popf
test
mov
movhlps
mov
mov
out
int3
andl
mov
sbb
je
sbb
fstpt
mov
loope
xchg
mov
imul
inc
call
jnp
inc
mov
sbb
mov
cwtl
xor
movsl
push
fstpl
movsb
ja
cmpsl
jle
sti
lahf
ficoml
jp
sar
xchg
and
add
jp
push
mov
in
push
arpl
lods
jb
inc
ds
fstps
push
cmc
out
cs
mov
lods
and
xchg
and
xor
dec
fdivl
mov
pop
xchg
movsb
shlb
pop
sub
xchg
dec
mov
jo
in
jbe
adc
xchg
sub
push
pop
mov
add
pop
cmp
xchg
inc
and
jne
das
xor
pusha
and
out
mov
mov
or
adc
push
mov
adc
push
out
xchg
inc
xor
pop
shll
stc
ret
mov
inc
rorl
lods
pushf
jecxz
lret
cmpb
mov
xor
pop
std
xor
cmp
addb
cmp
in
in
mov
mov
iret
fildl
pop
sahf
lret
ret
roll
adc
inc
mov
xlat
adc
pop
mov
mov
mov
push
aam
dec
or
popf
test
pop
push
add
into
subl
bswap
pushf
jo
mov
hlt
inc
in
jle
push
inc
testl
sub
rcl
sti
xor
insl
loopne
cltd
jbe
adc
xchg
lds
daa
mov
cli
mov
xorl
cli
out
adc
and
add
gs
fsubs
ljmp
daa
stos
insb
lret
sub
dec
cmpl
and
sar
popf
out
cwtl
roll
clc
add
roll
jge
add
and
out
and
imul
mov
and
xor
inc
mov
popf
sub
mov
mov
out
bound
jno
stc
lock
inc
data16
inc
imul
test
repz
xchg
into
and
mov
inc
sub
cli
pop
or
push
inc
call
cltd
daa
inc
or
fnstenv
jbe
popf
inc
jns
push
ja
inc
pop
pop
ljmp
jne
add
fcomps
sbb
lea
cmp
mov
sti
cwtl
adc
jl
push
testl
push
jecxz
pop
loope
adc
in
testb
ja
mov
adc
iret
stos
xorl
pop
vmread
jbe
add
mov
dec
push
jbe
cmp
ret
inc
cmp
inc
dec
mov
jle
add
loopne
cmpsl
test
mov
shrl
jle
mov
test
lea
arpl
and
jg
cwtl
add
xchg
pop
push
fs
pop
and
aad
mov
xor
sbb
push
add
xchg
divl
in
outsb
ret
shrb
jecxz
scas
sub
ret
mov
fnstsw
int3
imul
push
or
daa
stc
movsb
inc
aam
addr16
cmp
xlat
dec
add
mov
mov
int3
lock
add
scas
xchg
outsl
push
adc
shrb
sbb
xor
sti
inc
push
pop
mov
sbb
subl
and
imul
add
push
or
inc
std
fildl
xor
pop
sbb
sbb
add
in
sbb
add
push
in
jnp
add
lock
pop
lock
adc
xchg
rcrb
dec
imul
shrb
or
push
add
mov
mov
and
and
mov
adc
fsubl
sub
repz
cmp
das
xchg
idivb
pop
iret
pop
cld
in
mov
fstps
aaa
jmp
mov
lds
push
mov
inc
inc
pop
jecxz
pop
jb
jle
shlb
sub
mov
mov
lret
push
sub
push
repz
xor
sbb
es
and
cld
jb
lcall
jae
push
pop
icebp
xlat
lahf
mov
pop
daa
test
sahf
gs
push
add
adcl
ja
mov
fnstenv
push
sub
xor
mov
js
jns
shrb
add
outsl
int
jb
mov
cmc
cmc
or
sahf
loopne
out
fdivp
mov
ds
std
mov
xor
pop
in
subb
sbb
fwait
rcll
into
fs
sbb
mov
jns
mov
fld
mov
es
cmp
sub
dec
mov
clc
xor
jnp
icebp
and
out
popa
fistl
sahf
repz
xchg
push
mov
aam
mov
or
xor
into
cli
dec
jl
and
in
test
cs
adc
pop
js
sub
addr16
ror
lahf
push
call
push
in
pop
outsb
imul
fsubr
popa
rolb
aam
push
test
dec
jmp
inc
repz
test
test
cmp
sbb
dec
and
cmp
int3
pop
pop
loope
jno
inc
sub
bound
inc
mov
test
ds
stc
pop
rcll
sub
xchg
jge
dec
in
lret
mov
inc
dec
mov
rorb
jns
jne
pop
pop
add
jl
rcr
mov
jp
inc
outsb
dec
cmpsb
jg
mov
sub
in
mov
cs
adc
inc
jne,pt
mov
add
in
sbb
insl
movl
sbb
mov
or
std
pop
pop
nop
push
or
arpl
popa
repnz
fisubs
dec
std
push
imul
shr
frstor
mov
mov
cmp
test
xor
fstps
aad
push
dec
loopne
push
daa
xor
scas
scas
xlat
inc
stos
ja
in
xchg
mul
xor
dec
add
and
mov
add
int3
sub
addb
and
add
or
add
iret
mov
popf
xchg
sub
iret
insl
mov
lds
jp
test
lret
jns
fisttpll
aam
out
xor
jbe
std
jmp
cltd
pop
and
es
popf
imull
lds
mov
data16
test
inc
int
xor
mov
stos
jo
adc
scas
insb
adc
aas
popf
cmp
push
inc
stos
loope
pop
jns
repz
sahf
call
in
push
jns
sub
repnz
xor
addb
push
mov
outsb
test
xor
sar
and
mov
mov
rclb
fnsave
test
std
aad
inc
lret
push
inc
ljmp
or
push
pop
imul
aaa
and
mov
mov
imul
xchg
lock
jg
loope
mov
arpl
push
dec
je
rolb
xchg
push
les
and
jecxz
jb
jge
sbb
aad
rolb
xchg
push
filds
rclb
daa
ss
sbb
pop
cld
outsb
dec
cmp
dec
ljmp
cltd
iret
mov
xlat
jne,pt
pop
fcompl
xchg
fstpl
mov
mov
out
xor
rep
sub
loope
mov
pop
xor
cmp
jnp
pop
int
sbb
dec
insl
cmp
push
sub
sbb
pop
call
jnp
inc
push
pop
xor
int3
js
aas
movsl
fidivrs
mov
aas
outsl
ret
dec
cmpsl
in
les
leave
xchg
dec
adc
repz
mov
or
stos
cmp
and
aad
fisubrs
mov
cmc
or
daa
popw
ja
cmp
sub
dec
and
fwait
subb
ficompl
stos
cmpl
mov
in
or
jnp
or
xchg
das
iret
dec
add
push
xor
outsb
es
pop
inc
xor
jae
push
xor
test
xchg
mov
popf
xor
ror
pop
add
clc
mov
sbb
dec
data16
and
inc
sub
mov
scas
dec
mov
xor
fists
sbb
push
mov
adc
add
das
adc
mov
testb
cmc
lret
roll
shrb
push
out
js
lcall
pop
fists
jge
inc
ds
xor
in
addr16
pop
test
mov
out
mov
out
leave
and
sub
insb
sub
out
pop
add
mov
lret
out
xchg
or
jmp
mov
movsb
sub
pop
jecxz
sbbl
cmp
lods
roll
fnstcw
pop
cmp
mov
push
mov
je
cs
jmp
jmp
and
mov
push
and
adc
or
pusha
add
xor
negb
or
into
adc
pop
jae
or
repnz
stos
clc
cmp
mov
arpl
outsb
push
cwtl
pop
xchg
xchg
mov
lcall
mov
lods
dec
xchg
jbe
mov
cmp
gs
orl
or
pop
ret
movsl
sbb
pop
mov
cli
daa
jecxz
sbb
jle
push
sbb
dec
push
sahf
mov
fidivrl
xor
xchg
aaa
mov
lcall
js
clc
push
xorl
sbb
sub
in
nop
rclb
mov
cld
mov
cmpl
or
mov
jae
fsts
xor
jg
mov
aam
dec
out
add
xlat
xchg
lret
lds
std
dec
push
mov
in
std
mov
lcall
andl
divb
jbe
pusha
jo
test
xor
or
in
imul
adc
imul
dec
mov
adc
sub
into
pop
sbb
arpl
or
cmc
push
mov
cmp
xchg
jmp
sbbl
shlb
outsl
in
push
inc
mov
sarl
mov
jno
xchg
ret
dec
aam
cmp
mov
ss
or
mov
idivb
or
rorl
adc
rclb
test
lods
sub
and
lods
testl
sbb
ljmp
int3
push
mov
loopne
sbb
cmp
in
or
cmp
into
mov
sbb
push
pop
rcrb
push
subb
jb
push
mov
rcrb
and
cmpsb
or
lock
cmp
xchg
sub
add
in
mov
test
and
shrl
mov
adc
sarl
push
cmp
xchg
and
cmp
pushf
mov
cmp
adcb
or
cmp
pop
cwtl
rorb
pop
mov
mov
sahf
jmp
jnp
sbbb
mov
inc
mov
pinsrw
sti
lahf
xchg
xor
mov
jmp
sbb
add
test
stc
and
pop
out
lods
lds
or
mov
adc
lret
inc
sbb
out
jl
xor
outsb
fsts
push
pop
adc
fsubl
dec
mov
lret
mul
mov
addb
add
test
xchg
in
lret
insb
sti
shrb
mov
mov
faddl
mov
lcall
mov
inc
push
sbb
add
insl
add
inc
mov
sbb
xchg
pop
pop
lahf
jg
cmp
inc
or
mov
sub
xchg
iret
sub
stos
xchg
out
pop
cwtl
push
shll
pusha
outsl
loop
faddl
test
inc
loop
enter
mov
decl
daa
jb
push
js
cmp
mov
int
pop
mov
sarb
and
shrl
cs
das
cmp
mov
fdivs
jle
inc
push
lea
outsl
mov
loop
outsl
lods
das
mov
sbb
int
adc
bnd
cld
inc
js
mov
bound
jbe
roll
push
or
mov
lea
int3
mov
jae
add
pop
scas
push
dec
sti
xchg
xchg
push
lock
fs
nop
aaa
lock
mov
jo
sahf
pop
fwait
dec
lahf
cmpsb
xor
je
out
icebp
in
or
or
fistpll
push
cwtl
mov
test
push
jg
jne
hlt
in
adc
cmp
stos
data16
aas
rorl
cmpsl
adc
sbbl
or
cld
lods
or
and
das
push
popa
les
cmpsl
out
or
cld
push
mov
aam
lods
fldcw
pop
add
fnsave
sbb
sti
out
lock
push
mov
mov
lods
jg
inc
clc
aaa
mov
push
adc
pusha
xchg
lds
push
loopne
jp
or
jbe
xchg
inc
pminub
imul
mov
stos
and
jnp
pop
mov
rcll
in
add
jno
cmp
pop
fsubs
loopne
add
jns
xchg
and
adc
and
ret
pop
loopne
or
rol
cmp
fucomp
es
xchg
xlat
mov
or
bound
in
lahf
dec
cmp
xchg
xchg
pop
inc
or
std
xor
dec
jae
dec
stc
popa
nop
add
sbb
sahf
js
roll
adc
push
iret
andb
xor
cli
fnstcw
popa
sub
mov
xchg
sahf
push
jae
fcoms
pop
je
add
fwait
push
sbb
insl
sbb
mov
je
insb
xchg
aaa
std
fsubrp
xchg
cmp
stos
in
lods
jnp
push
in
xchg
mov
ret
lcall
je
jp
push
mov
mov
adc
in
xchg
adc
adc
int3
sbb
clc
push
nop
or
arpl
mov
imul
ret
pop
sub
leave
adc
rcrb
pushf
jp
jmp
push
and
adc
sbb
sub
pop
push
outsl
test
scas
jne
adc
maxps
push
nop
sbb
xor
dec
loop
stc
xchg
mov
add
or
addr16
xchg
scas
mov
inc
and
cmp
inc
jnp
insl
ret
jge
ret
hlt
push
icebp
pop
pusha
lret
adc
inc
cli
rcl
test
loop
sarl
mov
mov
ret
and
rcr
pusha
pop
push
adc
in
push
or
fmul
cmp
subl
fs
fcoml
scas
push
test
insb
fimuls
and
jg
enter
das
fnstenv
cmpsb
mov
shl
add
in
sbb
push
mov
imul
ret
mov
jg
jge
ret
and
xorb
sub
jp
mov
das
inc
movsb
jmp
jp
lea
addl
mov
xor
sbb
push
dec
nop
popf
cmpsl
push
sahf
cmp
and
push
fistps
dec
sub
mov
push
ss
xor
shrl
in
sbb
hlt
or
les
push
scas
cmp
fcmovnbe
pop
pop
xor
cmpsl
pop
sti
repnz
hlt
pop
mov
fdivrl
mov
mov
sbb
push
imul
pop
lret
xchg
add
mov
insl
je
into
cmpsb
ljmp
dec
add
lods
inc
cmpsl
adc
xchg
out
fimuls
out
test
or
jecxz
test
jo
iret
rcl
push
dec
in
vmread
cld
pushf
icebp
int3
push
test
mov
out
andb
mov
lea
push
mov
xor
int
push
in
push
or
sbb
roll
ss
fcomps
mov
insb
int
mov
sarl
mov
xor
shl
sub
clc
insl
cmp
lahf
sbb
dec
pop
outsb
xorl
mov
imul
stos
leave
jne
popa
add
or
and
sub
xchg
add
std
test
fwait
shlb
sbb
notl
sub
scas
mov
std
fldl
dec
pop
adc
dec
and
js
loop
sub
pushf
lods
dec
dec
inc
popa
incb
or
lcall
ljmp
mov
mov
pop
adc
dec
enter
arpl
mov
push
cld
jg
rcr
or
std
jl
xor
fucomip
repnz
loope
pushf
testl
inc
rcrl
xchg
pop
mov
std
cmp
mov
cmp
jno
jge
lock
test
insb
out
and
iret
pop
out
pushf
iret
jecxz
repz
xchg
xor
cmp
sbb
decb
xchg
lods
cmp
aaa
pop
mov
aaa
outsl
mov
or
mov
cmpsb
fwait
shlb
cmc
into
inc
inc
mov
mov
addl
push
fs
subb
popa
mov
and
mov
pushf
stos
push
mov
mov
and
inc
push
orb
fistpll
sbb
popa
sbb
add
push
inc
push
or
je
adc
enter
jae
xlat
cmp
mov
std
fcomp
push
mov
notl
fwait
mov
mov
xlat
adc
inc
push
adc
xchg
inc
sbb
lds
mov
sar
repz
stc
les
push
cmp
mov
jae
into
out
or
stos
or
insl
aad
dec
ja
test
sbb
enter
push
xchg
xorb
push
mov
or
mov
push
cli
xchg
jmp
jmp
push
jle
mov
adc
jmp
stos
out
push
lods
ficomps
cmp
cmp
lea
repnz
icebp
push
fists
jecxz
pop
imul
call
dec
jmp
or
lcall
mov
shrb
psraw
scas
test
mov
mov
push
int
cmp
shl
fnstenv
scas
sub
sti
add
mov
add
mov
out
clc
out
mov
mov
dec
inc
lret
lret
and
or
dec
mov
scas
sub
js
lea
loope
jg
ret
call
mov
mov
mov
push
dec
pop
mov
and
lds
dec
cwtl
mov
mov
out
mov
cwtl
int
int
fsubl
out
jmp
cwtl
bound
sbbb
add
arpl
sub
das
pop
cmc
cwtl
cmp
pop
insl
loop
cwtl
push
shr
je
test
adc
mov
sti
imul
ret
test
icebp
adc
mov
adcb
dec
jle
outsb
aaa
fmuls
addr16
jbe
out
stos
push
sub
mov
sbb
andb
cli
std
call
js
mov
and
loope
mov
shll
fwait
jmp
or
cltd
cmp
into
mov
rolb
xchg
pop
jmp
out
mov
jns
lock
int3
cmp
xor
or
das
xchg
cmp
jno
data16
dec
and
xor
or
mov
cmp
pop
adc
cld
adc
and
add
int3
jge
push
add
jg
cmpsl
pop
aas
insb
stos
test
cmp
test
cmp
divl
loopne
out
xchg
in
loopne
fidivs
movsb
mov
loopne
sub
repz
jb
fcompl
je
adc
popa
push
push
std
inc
mov
aas
and
and
cmp
shrb
repz
sub
inc
pop
dec
dec
xchg
iret
dec
rorl
adc
je
aas
inc
das
xchg
fs
and
and
mov
pushf
xor
pop
outsl
lahf
pop
jns
repnz
cmp
into
mov
std
in
rolb
sbb
inc
outsl
sarl
jnp
jge
jno
add
xlat
dec
jo
out
ljmp
mov
cmc
inc
mov
pushf
and
inc
test
jecxz
cwtl
add
enter
into
fdivp
pop
bnd
adc
dec
sbb
mov
mov
sahf
cwtl
sub
lahf
int
xchg
lods
ds
sbb
bound
push
xchg
lea
pop
mov
sar
adc
and
idivb
stc
add
sub
outsb
mov
popl
iret
gs
dec
pop
mov
sub
mov
ds
mov
mov
ja
or
adc
arpl
mov
lret
xor
push
scas
push
push
addr16
nop
jle
insl
inc
in
mov
adc
fcomps
cwtl
push
inc
xchg
xor
inc
dec
imul
arpl
pushf
shll
sub
adc
loopne
insl
mov
stos
pop
pushf
das
cmp
add
mov
adc
clc
aaa
push
pop
movsl
inc
roll
and
sbb
int
inc
cs
pop
repnz
xor
pop
pop
stc
insl
cmp
jle
pop
jae
sbb
inc
sbb
sub
dec
sub
sbb
rcrb
lahf
fwait
les
scas
std
jns
das
mov
aad
fsubl
mov
test
call
fidivs
adc
btsl
sbbl
cmpsl
and
push
pop
sub
mov
and
loop
cmpsb
dec
cmc
imul
add
mov
flds
testl
test
andl
and
push
andl
inc
sbb
or
sarb
imul
cmpsl
loop
dec
push
inc
lret
mov
in
push
sbb
mov
mov
or
lods
mov
add
or
dec
mov
mov
rolb
mov
insl
btc
shlb
jmp
mov
in
push
jno
ret
sub
adc
mov
sub
sbb
lret
push
pop
pusha
aaa
sub
in
stos
pop
aad
fwait
in
jns
jl
enter
addr16
stos
pop
push
inc
mov
jae
outsl
mov
ljmp
pop
stc
jecxz
pop
mov
mov
cs
xchg
cli
in
and
or
in
fsts
add
pop
dec
add
xchg
or
or
push
mov
test
and
lock
loopne
lret
push
in
lret
mov
cmp
push
sub
inc
pusha
mov
adc
xchg
jae
xchg
ror
push
in
or
adc
xchg
or
sbb
add
or
xor
add
push
mov
mov
cwtl
inc
xor
loop
in
jnp
cmc
in
cli
jecxz
aas
insb
mov
xor
fmulp
add
pop
jo
int
dec
pop
out
inc
sub
shlb
mov
fcomps
mov
inc
or
ljmp
xor
movsb
lds
xor
es
aad
jo
mov
sub
inc
xchg
xchg
mov
jmp
mov
fiaddl
jge
ret
cmp
sub
pop
xchg
loop
mov
je
sbb
movsl
fstpl
lahf
and
pop
mov
mov
mov
cmp
push
aad
outsb
mull
push
les
xor
popf
dec
sbb
cmpsl
fwait
mov
loopne
mov
xor
fucomi
push
stos
inc
sbb
mov
cmc
fstpl
pop
outsb
subl
int
pushf
or
inc
mov
lret
push
ret
pop
dec
pop
or
pop
dec
add
jmp
shrl
fstpt
push
cmp
lahf
insl
or
pop
scas
xchg
dec
xlat
mov
mov
cmpsl
pop
adc
lds
or
adc
movsl
xchg
sbb
mov
shlb
mov
ljmp
sub
imul
sub
pop
cmpsl
pop
test
popf
xor
int
sub
pop
ja
es
shrl
fnstenv
fs
enter
cmp
mov
mov
cmp
push
sbb
cmc
shll
jmp
lods
in
jno
jle
cmpsb
cltd
xchg
sbb
xchg
push
xchg
loope
push
jo
nop
jge
repnz
loope
test
pop
or
mov
push
cltd
jno
inc
inc
cmp
pop
ss
adc
sub
mov
add
mov
add
inc
repz
jae
inc
lea
pop
insl
hlt
lret
add
add
jge
out
mov
daa
jae
enter
mov
test
push
loop
push
iret
loope,pn
add
dec
push
mov
push
int
mov
mov
leave
or
stos
out
pop
pop
adc
dec
insl
xchg
push
mov
jnp
mov
hlt
into
or
lods
gs
pop
or
pop
ja
pushf
push
nop
sbb
adc
jl
dec
and
lods
je
mov
sub
jne
cmc
dec
shll
nopl
scas
fnsave
pop
adc
lcall
mov
cmp
rorl
ret
loop
test
data16
shll
inc
jbe
cmp
gs
mov
icebp
in
or
test
pushl
loop
sbb
mov
push
hlt
in
sbb
inc
push
sub
gs
daa
hlt
cmp
test
pop
mov
or
lret
popf
mov
xor
xlat
negl
xchg
jo
adc
mov
mov
nop
pushl
mov
repnz
pop
in
mulb
dec
sbb
pop
xlat
imul
push
cmp
hlt
cmp
mov
sbb
add
add
icebp
sub
in
adc
aas
pop
notb
jp
fisubrl
fucomi
insl
xchg
es
dec
mov
in
ljmp
js
push
sarb
cmp
mov
xchg
xor
and
test
xlat
loop
insb
fcompl
movsl
in
outsl
stc
out
or
aad
mov
mov
scas
addr16
scas
mov
mov
pop
add
add
and
rcrl
ficompl
test
icebp
lcall
cmp
neg
orb
mov
or
stos
sbb
aas
mov
std
test
xor
mov
xor
lds
popa
out
pop
cmp
lods
add
xchg
bound
pop
pop
and
hlt
leave
inc
jmp
arpl
std
stos
or
or
xor
outsb
jne
fcoms
in
clc
sti
out
cs
and
mov
jp
les
inc
adc
inc
push
rcrl
jae
adc
and
mov
aam
inc
xor
xlat
enter
jo
aaa
shrb
add
enter
sahf
pop
jbe
xor
fistl
pop
pop
xor
aaa
sbb
test
cmc
std
mov
sub
dec
adc
roll
push
xchg
lcall
inc
imul
adc
jnp
fbld
les
dec
call
mov
mov
pop
mov
fsubrs
adc
arpl
mov
mov
push
rcr
mov
mov
mov
or
adc
add
push
fwait
gs
jbe
mov
and
lret
sub
and
decb
sbb
movsl
mov
imul
bound
lods
jecxz
aam
insl
sbb
fisubrs
pop
gs
outsb
or
outsb
test
mov
push
mov
cmp
mov
nop
pop
pusha
jmp
loope
andl
ljmp
adc
out
add
add
or
fisubrl
xchg
call
movsl
xor
push
push
xchg
sbb
inc
insb
pop
negl
xor
adc
pop
ds
out
iret
cmp
pop
lret
xlat
rolb
ljmp
or
jl
cmp
xchg
sahf
adc
sub
pop
notb
xchg
ds
mov
addr16
push
mov
cmp
push
inc
mov
int
sub
cli
test
push
inc
loopne
in
arpl
shlb
sbb
dec
or
pop
mov
out
push
lret
cmp
out
out
int3
jnp
in
outsl
mov
sub
insb
aas
incb
imul
push
loope
add
xor
sarb
in
dec
imul
insl
sub
sahf
mov
cmp
push
subb
pop
jno
push
sub
push
inc
popa
push
xor
dec
ret
mov
inc
fstps
inc
xor
cwtl
arpl
or
lods
mov
jge
fdivrl
daa
rorb
sbb
push
jns
sub
sbb
sbb
adc
inc
inc
jge
dec
bound
pop
aas
mov
enter
mov
cmp
jp
insb
push
imul
mov
int3
xchg
outsb
fistpl
addr16
testl
cmp
jp
cmp
jbe
ds
call
hlt
hlt
mov
std
add
movsb
pop
imul
mov
pop
sub
xor
pusha
call
jg
sub
dec
mov
jnp
jnp
jp
fadds
mov
lock
adc
push
dec
and
add
pop
sbbb
or
out
jo
push
ja
test
xchg
cltd
int3
adc
pushf
test
movsl
bound
rclb
cmp
sbb
sub
addl
pop
cmp
mov
es
outsl
adc
jle
cli
aad
jle
nop
mov
lret
jge
lock
arpl
gs
icebp
sub
push
or
lock
pop
add
pusha
sub
sub
lods
xor
mov
and
dec
cmc
add
lods
lods
inc
mov
loope
xchg
stos
sbb
mov
or
pop
icebp
push
sti
insl
adc
aam
jmp
sbb
sub
jb
mov
sbb
jmp
scas
adc
in
lahf
insl
popf
xchg
push
rcl
out
fildll
idivl
cld
fadds
dec
xchg
xchg
pop
pusha
out
xchg
xchg
negl
outsb
mov
cli
sbb
or
clc
dec
stc
push
fnstsw
testl
jnp
fildll
ret
cld
mov
xchg
lods
lods
jg
insb
notb
cmc
loope
or
sbb
lods
xlat
int3
mov
and
xchg
and
sbb
stc
out
xor
sbb
sub
mov
mov
imul
add
adc
adc
mov
cmp
arpl
int
cmpb
outsl
clc
mov
mov
jb
adc
ljmp
ss
aaa
sbb
sbb
jg
lret
aas
mov
test
pop
lock
jp
push
loop
shll
cli
outsb
pop
jns
add
xchg
xchg
add
movsb
inc
in
cld
dec
das
lds
xchg
or
aaa
cmpsl
lods
lret
and
xor
cmp
xchg
lret
cmp
gs
inc
pop
jne
iret
xchg
xor
in
outsl
ds
repz
arpl
xor
in
pop
xchg
es
test
or
dec
fdiv
fistl
lahf
sbb
cmp
sbb
and
shll
in
jl
push
das
xchg
movsb
idivl
out
mov
scas
mov
mov
dec
stos
mov
addb
cmp
sbb
xor
pop
xchg
jmp
pusha
push
ja
inc
mov
push
daa
ficomps
mov
inc
pop
jbe
daa
icebp
adc
cmp
pop
in
jle
and
or
mov
fsubrl
xlat
pop
lahf
push
jne
arpl
pop
cmc
jl
popf
add
js
iret
mov
fsubrs
or
cmpsb
loop
ja
sub
or
stc
add
pushl
ret
xchg
mov
or
lcall
imul
adc
adc
add
out
xchg
sub
cwtl
lods
xor
shrb
adc
leave
ret
push
sub
loop
js
out
fsubrl
push
roll
jb
and
lods
leave
push
cli
xor
sub
lret
mov
cli
xchg
push
inc
pop
inc
cwtl
enter
sbb
insl
js
and
adc
test
aam
inc
es
mov
roll
out
xor
inc
xor
sbb
lock
cmp
mov
xor
sahf
push
call
jg
xor
mov
sahf
pushf
popa
cmp
lods
pop
sbb
in
out
notl
lods
mov
loop
lret
mov
dec
add
mov
fwait
insb
lcall
pop
mov
xor
or
lahf
frstor
enter
pop
in
mov
outsb
fnstenv
jae
pop
push
lea
and
xchg
mov
xor
mov
and
pop
cmp
push
ja
rcr
les
jo
cli
and
imul
daa
aas
add
inc
push
mov
dec
repnz
cmp
inc
push
ret
fdivrl
push
jnp
aaa
shl
xor
cltd
popa
pop
pop
std
lret
cs
mov
lret
pop
rol
jl
mov
cmp
ss
repnz
leave
mov
xor
cmpsl
pop
sub
insb
insb
test
sti
dec
repz
inc
mov
adc
stos
fstpt
mov
in
inc
enter
incb
push
lret
jno
aad
xchg
cwtl
pop
faddl
lret
pop
pop
fisubs
std
add
sbb
or
push
cmp
arpl
mov
mov
ret
or
pop
bound
add
test
in
push
cwtl
push
pop
movsl
mov
dec
cwtl
gs
sub
clc
mov
mov
xchg
jg
cmp
pop
andl
push
arpl
fdivl
adc
cmp
out
stc
dec
clc
cwtl
pop
je
icebp
push
cmp
pushf
aaa
mov
mov
stos
xor
ja
sub
push
push
test
hlt
scas
xchg
pop
and
ja
jmp
xor
lods
pushf
aad
or
xorb
int
lret
in
inc
repz
rorl
jle
pop
addl
sahf
jns
add
imulb
pop
cs
lods
scas
dec
add
jb
dec
add
cs
dec
addl
test
push
stos
enter
aam
jg
insl
imul
dec
in
cwtl
jmp
jo
test
js
bound
sti
outsl
nop
jp
jnp
fcoml
xchg
cmp
adc
jae
lock
lods
insl
cmpl
jne
dec
sbb
in
dec
or
mov
gs
jnp
js
adc
ss
dec
idivb
hlt
add
leave
jnp
ret
nop
pop
lds
pop
ds
push
sbb
fistps
ds
movsl
jb
pop
mov
inc
push
sub
xor
and
popf
sub
and
and
fadds
push
repnz
cmpsl
enter
vxorps
dec
aad
push
and
cmp
push
mov
int
mov
or
stos
mov
out
lock
dec
ljmp
test
cld
inc
and
leave
cmp
gs
cmp
sub
inc
mulb
loop
fcmovnu
xchg
ret
dec
jno
mov
fs
into
test
cmp
add
lods
sahf
repnz
mov
fnstcw
push
fisubs
int
aaa
jle
xchg
fst
mov
inc
mov
aaa
mov
sbb
filds
sub
dec
mov
ret
push
out
sbb
or
push
push
or
mov
movsb
in
or
adc
or
shr
xorl
jg
pop
rclw
fistpll
pop
add
xchg
scas
xchg
xlat
pop
sbb
nop
pop
xor
shlb
jns
xchg
jne
mov
fsub
dec
inc
inc
repnz
xchg
stc
aam
mov
call
lahf
data16
sbb
lock
jmp
dec
xor
cmpsl
or
sbb
pop
lret
bound
pop
jnp
loope
xor
dec
mov
jo
rclb
add
mov
mulb
xor
fstl
sub
adc
scas
jne
scas
popa
jno
push
push
cmp
adc
inc
mov
mov
adc
je
scas
nop
ja
adc
das
sbb
jmp
in
ja
out
mov
adc
xor
in
les
sbb
fcomp
sahf
fs
dec
pop
xchg
jnp
mov
pop
sub
dec
negl
aad
sbb
sbb
adc
jg
fs
inc
push
jge
js
xlat
fmul
push
or
test
into
sbb
jo
lcall
arpl
lcall
cwtl
insl
cmpsl
lahf
cmp
add
outsb
inc
cmpsb
js
loop
mov
xchg
decl
lret
lock
or
in
repz
adc
hlt
mov
mov
outsb
adcb
icebp
push
jle
pop
cmpsb
insl
fcmovne
inc
adc
stos
fmuls
fwait
adcb
mov
aaa
sub
mov
aam
mov
inc
in
scas
dec
mov
inc
xor
cmpsb
pop
lret
pusha
push
jb
rol
mov
cmp
lods
push
mov
enter
xor
stos
xchg
and
cld
xor
pop
loope
lock
hlt
cmp
cltd
nop
fs
jno
sub
dec
hlt
orl
push
xor
imul
inc
pop
push
cmpsb
xor
dec
xor
movsl
add
dec
addb
and
cmp
notb
test
das
inc
lock
sub
dec
mov
mov
and
rcrl
cmp
xlat
mov
dec
push
fs
and
lret
jne
popf
mov
inc
adc
ret
std
pop
push
or
fisubrl
dec
xor
push
sub
lods
imul
mov
ror
inc
or
adc
adcl
fsubs
push
pop
arpl
sub
fdivs
xchg
das
cs
mov
out
mov
test
dec
cmp
stos
or
cmc
adc
std
ljmp
hlt
popf
pop
fsts
inc
leave
lcall
outsb
adc
sub
dec
sub
and
dec
fsubrs
sbb
pop
dec
mov
xlat
jecxz
push
inc
adc
sbb
dec
pop
cmp
sahf
push
pop
fidivrl
sub
jl
daa
pop
cmp
jmp
push
inc
mov
cmp
sti
icebp
adcl
stos
fcmovbe
pop
roll
sub
rorb
jbe
sub
in
mov
jns
push
pop
sbb
mov
aaa
or
das
cmp
mov
repz
adc
pop
jg
movsl
mov
xchg
rolb
fistpl
cli
inc
js
mov
sahf
mov
lret
icebp
lods
lret
pop
dec
rorl
sub
imul
jbe
test
add
xchg
dec
sub
lret
ljmp
mov
in
divb
pusha
adc
ret
pop
cmc
cmc
push
or
and
shrb
pop
ret
sbb
in
out
jns
std
lret
xlat
shl
xchg
out
scas
pop
cmpl
data16
neg
jg
adc
outsb
ds
into
mov
sub
popf
add
insb
jp
test
xchg
mov
in
mov
lcall
shll
cld
add
shlb
js
call
sbb
inc
push
mov
push
cmp
pop
mov
pop
adc
rcrl
add
lcall
ficoml
int3
push
pop
jecxz
addr16
out
and
or
xor
mov
les
jns
pop
and
dec
cmp
sub
std
xchg
stos
and
call
add
jbe
daa
mov
mov
imul
cltd
push
jge
sub
insb
mov
ljmp
popf
ret
inc
jnp
push
fs
insl
pop
daa
mov
mov
push
and
dec
cmp
xchg
sti
in
and
fstps
nop
inc
or
outsl
mov
pop
faddl
test
add
or
addr16
cmpb
gs
jmp
adc
cmp
into
mov
mov
jns
dec
frstor
sbb
xchg
loope
xchg
add
jmp
mov
ja
call
sbb
inc
sarb
mov
jmp
mov
inc
pop
or
lcall
data16
imul
and
pusha
inc
mov
pop
mov
repz
into
lret
in
fstps
dec
in
pop
pop
sbb
xchg
cmp
xor
xor
fwait
es
or
clc
iret
lea
in
test
push
lock
xor
cli
cmovl
repnz
bound
popf
mov
cwtl
fcom
mov
push
cli
pop
cmp
mov
mov
fwait
inc
and
loope
push
pop
mov
adc
xlat
sub
inc
mov
xor
cwtl
pop
cmpsb
icebp
cmpsb
mov
insl
push
mov
in
cwtl
push
dec
fstps
adc
fisubrl
mov
rol
out
imul
add
push
xchg
jbe
cwtl
and
andl
and
mov
test
dec
fildll
cs
stos
xchg
negl
mov
sub
nop
andl
cwtl
int
push
mov
jecxz
addb
fsts
mov
mov
cltd
loopne
pusha
inc
ficoms
push
insb
mov
mov
je
sbb
xor
aaa
push
mov
xor
mov
mov
clc
outsl
rorl
xchg
mov
out
sub
movsl
std
inc
mov
mov
popa
lea
dec
add
adc
mov
push
es
lods
mov
inc
and
pop
jbe
mov
pop
aaa
mov
lds
cmp
gs
mov
aad
test
or
or
and
jno
lahf
add
adc
fwait
stos
xor
dec
jns
xchg
leave
xchg
insb
jp
scas
add
pop
out
and
inc
inc
stc
lds
cmp
adc
jmp
and
xchg
pop
and
sti
push
cmp
insb
loope
adc
fstpl
mov
iret
mov
test
cmp
ds
inc
shlb
pop
int3
adc
repz
add
mov
pop
mov
mov
inc
jp
sbb
pusha
push
sahf
push
mov
lcall
jmp
mov
std
cmc
push
xchg
mov
push
cli
int3
rcr
rcrl
pop
mov
adc
aam
test
jle
cmc
xchg
cli
inc
cmpb
repnz
dec
mov
or
mov
mov
dec
mov
inc
lret
jbe
mov
inc
scas
out
cmp
fnstenv
imul
repnz
mov
adc
ret
mov
lods
repnz
pop
popl
sub
mov
movsl
inc
cmp
and
jmp
dec
loop
add
inc
mov
nop
out
imul
rcrl
imul
arpl
or
dec
pushf
out
xor
mov
inc
xor
hlt
xor
adc
jno
sbb
outsl
mov
push
mov
ljmp
insl
fwait
int3
hlt
in
pop
out
mov
enter
sub
sti
jg
mov
pop
clc
pop
cmp
xchg
loope
pop
sub
jo
or
inc
test
mov
adc
push
pop
push
repz
int
cli
push
je
es
icebp
mov
ss
loopne
pop
js
jno
dec
sub
das
mov
into
daa
mov
stc
or
movsb
inc
mov
pop
jo
add
test
or
xchg
dec
clc
mov
fs
mov
or
mov
cmp
jo
xorl
sbb
js
pusha
ret
mov
and
mov
pop
push
les
sbb
aam
popf
pusha
mov
iret
adc
xchg
xchg
dec
ficompl
and
or
andl
fdivrl
mov
rclb
je
xchg
pusha
test
andl
and
push
rcrl
fnsetpm(287
loopne
xchg
cmpsb
ljmp
out
pop
lahf
test
fsubs
xor
xchg
adc
inc
mov
sbb
xchg
xor
fnsave
ret
xchg
mov
out
jns
lea
pop
xchg
lods
push
adc
push
sub
or
xor
adc
jne
xchg
fucomip
out
repz
sub
or
aad
sub
sub
or
data16
bound
inc
fnsave
stos
lds
mov
xchg
cmp
jmp
mov
xchg
sub
add
mov
scas
mov
push
mov
pop
stos
inc
or
cmpl
int
sti
cmp
lea
cmc
hlt
pmaxub
mov
ss
mov
add
sar
pop
repnz
mov
sti
adc
xor
fldt
repz
xchg
es
jge
push
int
mov
stos
lock
inc
or
pop
loop
dec
data16
inc
xchg
out
cld
jg
ljmp
push
push
jbe
mov
lea
icebp
jg
mov
mov
in
push
jbe
mov
push
xlat
add
jge
cmpsb
mov
sti
je
xor
mov
add
lcall
jle
dec
into
movsb
lock
cmp
insl
add
lret
shrb
adc
scas
mov
dec
stc
xor
dec
cwtl
roll
pushf
shrb
mov
repnz
sbb
mov
movsl
iret
fnstenv
adc
push
mov
mov
shll
and
lret
outsb
dec
jb
push
pop
sbb
pop
xorl
inc
and
sahf
popa
cmc
arpl
lahf
fists
pop
adc
mov
push
sub
sbb
push
pop
movsb
fcomps
pop
push
mov
daa
sub
sbb
pop
aas
push
or
jl
jno
pop
mov
push
xchg
mov
jge
jge
add
notb
cmpsl
test
cs
rcl
adc
lgdtl
popa
dec
pop
push
xchg
mov
pop
ss
imul
xchg
mov
repnz
in
stc
addr16
cmp
pop
sub
jmp
adc
pop
mov
rorl
dec
inc
addr16
sub
push
mov
stc
push
pop
and
lcall
and
sub
xor
cltd
mov
stc
rclb
ds
jmp
push
jmp
pop
mov
pop
orl
pop
mov
loopne
lret
negb
daa
popf
inc
repz
lds
adc
call
mov
out
dec
icebp
fildll
jns
and
imul
cmp
cwtl
push
scas
or
fs
sub
or
lcall
movl
ret
outsb
popa
add
xchg
jle
adc
xlat
add
or
jo
xor
cwtl
mov
push
mov
jnp
nop
ror
fadd
daa
inc
clc
cmp
cmp
popa
pop
in
adc
outsb
loop
lods
xor
aad
inc
lock
lret
mov
add
jmp
insb
out
mov
enter
cmpsl
mov
cmp
mov
jge
jecxz
mov
mov
mov
lcall
xor
leave
xor
cmp
cltd
outsb
add
sub
pop
bound
pop
test
push
in
pop
pop
xchg
lret
js
sbb
ret
push
cmp
sub
push
fstl
bound
adc
adc
mov
lcall
repz
movsb
fs
sbb
out
cmpb
inc
sub
sub
in
pop
mov
addl
sbb
outsb
dec
xor
mov
pop
cmp
add
in
mov
or
mov
call
cmp
mov
sub
jbe
sbb
aam
flds
jb
cmp
ja
adcl
or
out
sub
xor
and
movsb
cmp
test
lea
jle
add
pop
je
add
out
and
jnp
add
fwait
test
and
xor
xchg
mov
or
cmpsl
add
addb
sbb
js
sub
pusha
imul
mov
cmpsb
or
cmc
pop
cli
insl
and
xor
hlt
test
mov
dec
stc
insb
jnp
addr16
hlt
sbb
fisubs
mov
lahf
push
popf
pop
inc
cmp
cmpsl
insl
in
out
lret
jnp
ss
stos
cmc
test
mov
pop
cmpsb
xchg
push
lahf
jl
add
sub
jp
jae
fnstcw
mov
cmpsb
imul
pop
mov
and
jmp
cmp
dec
fsubr
mov
dec
fists
loopne
xchg
das
stos
fiadds
filds
bound
repz
int
mov
icebp
pop
push
jo
int
adc
pop
fcmovne
mov
testb
ret
push
xchg
pop
cli
ret
out
cmp
cmp
sbbl
ret
out
cmp
ja
aas
fdivl
jbe
cmp
mov
pop
dec
aaa
repnz
aad
je
sub
xor
loopne
fisubl
xchg
jp
xchg
mov
les
xchg
shll
adc
dec
cmp
push
into
add
jecxz
dec
test
popl
sbb
mov
gs
pop
insl
sbb
mov
pop
in
mov
mov
call
idivb
jb
xor
mov
hlt
mov
mov
cmp
jo
dec
sub
js
ds
sahf
pop
add
sbb
lret
call
cmc
inc
clc
nop
mov
ret
push
int3
xor
jmp
dec
gs
sub
pop
loopne
and
lods
ss
mov
mov
xor
xchg
xchg
mov
jbe
sub
sbb
cmp
das
rorl
iret
xchg
pop
stc
fstp
jne
xchg
fcmovnu
stos
icebp
xchg
out
and
mov
sbb
lock
jle
leave
data16
call
out
push
ret
fyl2xp1
mov
cmpsl
mov
ja
call
mov
mov
mov
ds
inc
popa
push
int3
mov
xchg
xchg
lods
lea
and
dec
fdivrs
aad
fcomps
xchg
ss
aaa
inc
sbb
sub
mull
loopne
sbb
and
cs
push
sub
cmp
or
add
dec
xor
stos
out
mull
shrl
jmp
pop
dec
jnp
ret
push
xchg
xchg
push
mov
dec
and
lods
inc
cmp
xor
je
loop
lret
and
adc
out
cmp
lock
mov
inc
inc
aaa
orb
pop
imulb
and
mov
jg
les
jne
into
pop
test
imul
dec
push
mov
aad
push
push
into
xchg
clc
jno
daa
and
lret
sbb
clc
and
popa
aaa
push
jge
mov
nop
into
lods
clc
xor
cli
inc
and
xor
addr16
sub
subb
xlat
push
mov
xchg
leave
cmp
insb
sti
inc
sub
loope
shll
sbb
ds
mov
jecxz
mov
inc
addb
inc
ljmp
in
inc
or
repnz
mov
mov
icebp
adc
repz
inc
lock
adc
and
nop
gs
cmp
clc
adc
int
cwtl
and
inc
mov
fs
dec
adc
cmp
and
cmp
or
xor
fisttps
mov
cltd
mov
test
xchg
inc
or
push
cmp
cmp
in
aas
push
xchg
adc
out
rcrb
push
sarl
mov
fwait
or
lods
cmp
adc
lods
mov
cmp
cmp
xlat
and
scas
jmp
andl
mov
push
lods
push
jg
push
fbstp
add
dec
push
lea
mov
mov
xlat
and
push
sbbl
pop
clc
aam
sub
lds
push
mov
fistl
cmp
push
dec
in
ss
sbb
xchg
cmpsl
cmp
jbe
mov
clc
push
push
xor
lods
xor
adc
xor
add
sub
sbb
test
jne
pusha
add
inc
lahf
jp
or
jbe
cmp
outsb
sbb
push
mov
nop
fwait
jbe
xlat
xchg
xchg
std
mov
sbb
sbb
xlat
adc
dec
jg
lcall
sub
mov
out
xchg
mov
rcrl
dec
popa
dec
jo
sbb
lahf
hlt
xchg
dec
aaa
aad
enter
sbb
mov
inc
pop
lcall
mov
sub
rorl
mov
dec
pop
std
push
mov
adc
cwtl
repnz
jl
or
sarb
dec
inc
push
loope
insl
sub
orb
xor
aas
fdivl
dec
fdivr
xor
pop
xor
aaa
xor
pop
daa
push
jg
movsb
jno
pop
iret
inc
and
in
mov
lahf
je
sub
repz
nop
sbb
jecxz
xor
dec
xor
and
push
mov
xchg
jne
push
mov
dec
and
xchg
ret
jb
jp
lret
adc
add
jo
or
packssdw
dec
and
mov
fadds
add
pop
stc
cmp
ret
call
mov
idiv
in
sub
cwtl
dec
add
cmpsl
add
add
lret
incl
mov
xchg
push
sbb
ljmp
pop
fisttpll
push
into
jae
xchg
jbe
xchg
jne
mov
test
xchg
fadd
cwtl
fdiv
int3
pop
push
dec
cltd
jmp
pop
cmp
clc
xor
rcrb
cmpsb
out
sub
or
leave
mov
jno
mov
or
or
in
and
imul
cwtl
stos
aad
xor
pop
cld
loop
std
inc
test
mov
testl
xchg
repz
ret
or
sub
ror
xor
test
fimull
xchg
std
pop
lock
xchg
je
lret
inc
sub
aaa
jecxz
lds
xor
imul
dec
cwtl
sub
lea
iret
test
and
and
out
push
icebp
int3
jb
int3
adc
dec
sbb
test
test
cmp
mov
jecxz
test
test
jns
sub
stos
xor
test
les
out
dec
xchg
mov
ret
clc
mul
ror
hlt
push
push
pop
fucom
push
sbb
es
or
mov
mov
xchg
jmp
jl
movsbl
fwait
hlt
pop
mov
push
out
imul
jno
jb
sbb
ja
add
repnz
ja
fsubr
mov
dec
lods
mov
or
imul
adc
push
mov
xor
lock
stos
mov
aaa
arpl
in
test
out
jmp
mov
hlt
outsb
sub
pop
stos
cmp
lea
cmpb
roll
sub
mov
loope
pusha
sbb
fsub
gs
jecxz
and
je
inc
sbbl
mov
ret
add
push
roll
dec
js
dec
sub
nop
mov
push
jns
inc
cld
in
mov
xor
dec
idivl
lock
jle
inc
sbb
dec
stos
mov
ret
jp
xchg
repz
cmc
or
add
adc
adc
stos
jno
mov
clc
fisttpll
mov
pop
and
sbb
test
xchg
add
sbb
aam
sti
pop
push
lods
jo
push
xor
das
inc
sbb
xor
dec
jge
fs
sahf
mov
mov
pusha
or
shlb
pop
push
adc
bound
insl
or
in
hlt
outsb
das
add
stos
push
sub
lret
inc
stos
pop
clc
repnz
jnp
cmpb
add
push
fiadds
adc
test
inc
pop
xor
aas
jnp
push
rdtsc
leave
cld
fdivrl
adc
cli
mov
cltd
push
movsb
lds
leave
xchg
movsl
movsb
lcall
pop
dec
cmp
inc
push
test
int
imul
push
mov
sbb
out
adc
aam
sbb
mov
jmp
in
mov
aaa
pop
cwtl
pop
cmp
jge
test
xchg
inc
lock
je
push
inc
lret
add
xchg
xor
bound
sub
pop
and
repz
fcmovnbe
jg
cld
insb
dec
daa
in
push
push
std
cmp
mov
mov
lahf
sub
in
dec
cmp
xchg
cmp
aas
mov
dec
cmp
outsb
adc
pop
mov
outsb
mov
popf
dec
adc
inc
and
or
push
imul
pop
bound
sahf
mov
dec
scas
inc
fdiv
mov
add
xchg
jecxz
push
lods
int3
pushl
xchg
cltd
xor
pop
nop
mov
bnd
fstl
jmp
fstpl
pushf
fldt
pop
mov
jg
test
pop
cwtl
dec
in
sbb
int3
jae
push
ljmp
mov
push
mov
mov
xor
pop
std
push
iret
inc
jge
ja
inc
pop
mov
insb
repnz
repz
popf
sbb
lods
dec
add
fwait
pop
jo
add
dec
jecxz
and
xchg
pop
movsb
xchg
push
push
rol
xchg
lods
cltd
lods
ss
jp
inc
das
mov
leave
repz
cmpsl
adc
lretw
xchg
inc
imulb
or
jge
and
pop
sbb
add
jp
or
mov
fldcw
mov
orb
ss
cmp
mov
lods
mov
push
cs
pause
push
or
testl
stc
mov
pop
mov
cmp
repz
add
clc
mov
ds
sub
adc
cmp
inc
mov
adc
xchg
into
stc
xchg
xchg
das
fwait
mov
popa
pop
bound
call
subl
stc
mov
cmp
out
pop
lock
aaa
test
xchg
lret
xlat
or
and
xchg
and
test
mov
scas
mov
movsb
inc
cmp
inc
hlt
inc
cmp
movsb
ja
mov
jae
shrb
imul
or
xchg
sub
mov
or
inc
or
mov
or
mov
lea
repnz
xor
cs
sub
sub
imul
ss
addb
jp
stos
mov
loop
js
cmp
int
or
push
popa
popa
pop
jns
fidivrs
pop
gs
pop
loop
push
cmp
ljmp
pop
push
pop
jmp
inc
mov
adcl
dec
xor
jg
out
xchg
jb
mov
and
and
into
mov
in
push
and
cwtl
sub
fnstsw
shlb
jge
sbb
bound
arpl
or
push
dec
popa
mov
xchg
movsb
cltd
xchg
xor
aas
lret
mov
popa
xlat
jns
jnp
lods
fisubs
mov
jo
js
adc
lret
add
mov
loopne
add
outsb
stos
dec
shlb
aaa
js
cmp
adc
mov
mov
icebp
in
jl
stos
stos
xchg
sub
out
lods
decl
fs
cmpsb
pusha
repz
mov
jnp
cmpsl
insb
cmp
ret
xchg
cmp
add
ljmp
and
add
test
add
scas
cld
jmp
dec
pop
inc
lahf
arpl
xchg
xor
and
sub
adc
add
test
popf
xor
mov
push
movsl
fucomp
imul
adc
sbb
dec
icebp
clc
es
xchg
push
cmp
mov
xchg
jae
in
push
jl
push
mov
out
sub
pop
xchg
sbbl
dec
jo
mulb
or
mov
scas
sbb
mov
test
push
xchg
cmp
ret
addr16
xor
inc
bound
out
add
inc
fsub
icebp
bound
bound
xchg
pop
adc
shrl
adc
dec
pop
arpl
xchg
jnp
or
sub
hlt
fcmovnbe
insl
test
lahf
lea
cmp
test
ja
xor
mov
xor
scas
in
cmc
mov
fdivr
dec
jae
dec
cltd
test
cmpl
popa
rcrb
xchg
outsb
mov
rorb
adc
out
out
mov
add
test
mov
pop
lods
iret
orb
mov
ss
ljmp
aam
jnp
lock
movups
mov
push
out
sub
adc
cs
adc
popa
scas
or
xchg
jbe
arpl
push
push
mov
mov
cld
or
inc
mov
in
push
mov
dec
pop
imul
in
fwait
jg
lock
clc
aad
popf
ret
das
jns
push
xchg
mov
inc
or
and
in
sub
inc
sub
adc
push
pusha
mov
push
add
jo
test
out
lahf
daa
cmpsb
int3
mov
loop
push
addr16
mov
xchg
add
jnp
in
xchg
repnz
int
push
or
in
stos
cmp
xlat
add
sub
add
sub
into
or
cltd
test
aam
jae
xchg
pop
cpuid
or
nop
mov
es
pushf
mov
push
lods
add
add
cmp
adc
sbb
cli
pop
push
pop
fidivrl
test
idiv
add
dec
mov
sub
mul
xchg
lods
cwtl
sti
hlt
neg
dec
xchg
jb
pop
insl
sbb
filds
hlt
xchg
jnp
aam
nop
jecxz
scas
xor
mov
shrb
mov
test
int
scas
sub
mov
addr16
fwait
inc
das
lret
mov
fcmovne
pop
mov
hlt
add
les
sahf
pop
in
adc
sub
hlt
sbb
push
push
int
xor
mov
mov
dec
sbb
cmp
mov
inc
pop
mov
idiv
mulb
or
fnstcw
loopne
ret
pop
cmp
ja
add
div
xchg
dec
xor
jbe
lcall
xor
outsl
sbb
push
xor
das
push
pop
insl
ret
cmc
xlat
adc
cs
jg
cmp
fnstcw
mov
sbb
imul
inc
popf
orb
stos
inc
jb
pop
inc
jmp
fisubs
sub
rcrb
sbbl
stos
imul
out
sar
cmc
insb
adc
rorl
jnp
push
cmp
mov
rolb
and
sbb
add
mov
loopne
jae
mov
out
fdivrl
pop
jb
ficomps
mov
std
mov
dec
movsl
in
and
or
aaa
inc
sub
mov
pop
clc
gs
mov
push
data16
fs
popf
mov
lock
mov
push
pop
ret
fldl
fimuls
push
adc
xor
xchg
push
jae
adcl
adc
in
pop
add
xchg
lahf
pop
fbstp
lahf
jns
adc
mov
out
pushf
or
mov
mov
push
lock
mov
jmp
inc
addb
out
xor
js
jae
xchg
inc
test
sub
mov
cld
sahf
jmp
pop
and
fwait
pop
inc
and
jge
inc
es
data16
and
int3
scas
lahf
cmp
mov
popa
xor
xchg
mov
lret
aad
mov
and
je
sub
inc
outsl
sbb
jge
push
test
jmp
ficompl
mov
push
mov
or
add
adc
pop
cmp
insl
jp
leave
divb
xchg
mov
aas
mov
push
mov
lea
repz
shll
add
in
pop
outsl
mov
pop
stos
popa
pusha
dec
xorb
xchg
fs
lret
xlat
inc
ljmp
push
jbe
mov
mov
repnz
mov
in
std
ds
nop
dec
iret
popa
sahf
mov
or
jns
mov
ret
stos
inc
sbb
mov
mov
sub
and
mov
ljmp
cmp
sub
sub
lret
add
push
pop
jmp
jmp
inc
dec
xchg
pop
xor
outsb
sub
jecxz
mov
mov
add
or
inc
adcb
outsl
jbe
pushf
sub
cmpsl
xchg
ljmp
adc
pop
mov
gs
notb
pop
mov
scas
add
push
jno
cs
xchg
movsl
pop
repz
xchg
adc
adc
inc
ret
test
push
rcrl
loopne
dec
mov
mov
sub
pop
xor
imul
xchg
je
fisubs
xlat
mov
cwtl
fistpl
mov
sbb
xchg
jecxz
out
add
sbb
addl
rcl
xchg
and
loope
pop
cwtl
scas
ficompl
mov
int
testb
mov
subl
xor
sub
or
sahf
pop
aas
and
mov
cmp
xor
xchg
mov
out
mov
xorl
mov
cmp
mov
out
mov
mov
cmp
ret
inc
sbb
adc
inc
in
stos
inc
mov
cmp
jnp
jo
dec
shl
mov
shl
stc
adc
mov
lret
dec
popa
push
aad
enter
pop
xor
pop
pop
enter
xchg
jmp
movsb
loop
pop
imulb
push
cmp
push
mov
in
test
xor
add
lock
sub
jl
xchg
sbb
incb
sub
sub
repnz
adcl
cmp
in
outsl
sbb
xchg
xlat
sub
mov
xor
lods
cmp
addr16
jecxz
add
loope
or
das
js
pop
and
cmp
iret
aaa
xchg
mov
or
aaa
mov
ret
loopne
or
out
cld
stos
pop
dec
roll
xchg
cmc
mov
mov
in
jecxz
mov
inc
ficoml
clc
mov
push
push
xor
rclb
pushl
cmp
sub
iret
cmp
fsubl
cld
mov
fcompl
jne
lods
push
insl
or
inc
dec
mov
xlat
scas
push
jl
jecxz
mov
push
les
cmpsb
xor
fwait
int3
adc
jmp
cmpsl
daa
jge
call
andb
xor
pop
inc
mov
aaa
pop
lds
divl
jo
es
inc
mov
jmp
lock
jge
add
pushl
divb
inc
xchg
lods
add
inc
mov
dec
movsl
adc
cmpsb
mov
fstl
sarl
dec
mov
sbb
fidivrl
mov
cmp
inc
sbb
loope
adc
mov
mov
divl
shld
addl
sti
scas
mov
or
inc
dec
dec
test
sub
cmp
popf
adcl
mov
popa
imul
pop
scas
sub
or
push
xchg
xchg
dec
xor
in
pushf
mov
loop
sub
push
enter
pop
lods
xor
inc
dec
jbe
push
imul
test
arpl
repz
out
mov
lahf
mov
xor
aad
data16
jge
sahf
aad
mov
scas
inc
ja
dec
mov
sub
je
ret
sub
and
cmp
stos
aad
out
fdivp
pop
and
and
icebp
xchg
ret
daa
jae,pn
pop
das
add
adc
and
xchg
cwtl
mov
inc
adc
xchg
mov
ss
xchg
cmp
sub
push
pusha
jae
push
cmp
adc
clc
cmp
out
decl
je
stos
pop
jo
fidivrl
add
mov
out
in
repz
sahf
and
test
mov
cmp
test
fildll
adc
mov
fistpl
hlt
sbb
fwait
fcoms
aad
mov
inc
or
and
inc
out
ret
push
js
adc
lret
out
clc
shl
dec
ja
jo
ret
into
aad
decl
mov
lods
push
push
dec
cmp
imul
mov
shll
cmp
inc
test
popf
push
insl
xlat
fdivrs
enter
js
dec
adc
repnz
xchg
jge
pop
mov
cmp
daa
jae
pop
push
dec
out
and
cmp
stos
sahf
sub
aaa
sbb
mov
push
into
push
cmpsl
sub
jbe
sub
inc
and
and
jmp
je
and
pop
cmp
daa
je
ret
and
out
adc
lods
in
inc
sbb
mov
mov
shll
int
imul
push
jp
dec
insl
cmp
scas
out
mov
cmp
ss
repz
bound
ljmp
lea
xor
inc
xchg
addr16
cwtl
mov
sti
dec
pop
jmp
adc
jp
in
add
lods
push
mov
mov
add
addl
push
testb
ds
sbb
cli
or
add
pop
mov
xchg
and
or
cmpsb
mov
xor
xor
movsb
and
ret
sbb
enter
inc
pop
pop
jecxz
pop
fists
jne
mov
int
mov
push
scas
les
addr16
mov
lods
mov
fsincos
cld
ss
mov
bound
xchg
push
clc
push
fcomps
inc
or
mov
sbb
outsb
push
and
hlt
aad
adc
inc
fisttps
out
xchg
cmpsb
gs
jo
in
xor
lea
pop
ret
rorb
inc
sahf
es
jmp
pop
jge
das
mov
insb
xor
lret
inc
cmp
data16
int
push
nop
jle
aaa
mov
int3
push
push
shrl
in
sub
sub
enter
hlt
lods
cltd
xchg
ljmp
jo
jb
cmp
jle
sbb
cmp
jnp
mov
push
push
loop
mov
sub
js
repz
cli
dec
inc
or
adc
jae
push
jp
les
xchg
stos
lock
outsl
adc
jecxz
call
repnz
mov
dec
push
mov
jae
jbe
call
jecxz
sahf
sbb
out
cmpb
adc
cmp
enter
cmp
jns
cmp
scas
leave
nop
roll
pop
push
xor
shlb
outsl
lret
sub
ficoml
sbb
notl
xchg
mov
sbb
jg
mov
pop
sti
lcall
add
fs
pop
cmp
inc
repnz
stc
sbb
or
adc
fsubp
sbb
adc
sbb
add
outsb
cmp
pop
cmp
jnp
ret
and
sub
cs
aaa
add
pop
and
insb
push
xchg
or
xor
mov
js
loopne
mov
pop
push
dec
push
push
inc
and
fcmovu
and
cmp
pushf
arpl
inc
enter
xchg
mov
sbb
mov
outsb
add
divb
fidivrl
adc
test
sbb
adc
cmp
stc
inc
idivl
push
loop
addr16
out
xchg
pop
incl
hlt
xchg
adc
jmp
mov
add
lods
xchg
mov
leave
mov
stc
cmp
rclb
loope
in
jno
pop
push
pop
push
nop
aad
repnz
mov
jae
loope
call
inc
jle
fwait
lock
xchg
cmp
sbb
mov
adcl
pop
stc
dec
xchg
in
adc
xor
jno
test
adc
out
dec
xor
xor
movsb
hlt
aam
testb
clc
out
stc
enterw
xchg
test
push
testl
jb
jecxz
inc
scas
pushf
add
pop
jge
into
inc
push
test
jno
add
bound
lretw
fcoms
das
mov
leave
sub
and
mov
movsl
ret
pop
sbbl
push
mov
icebp
loop
inc
jmp
pop
mov
test
push
and
xchg
cmp
sub
lods
jmp
add
pushf
jecxz
jns
inc
push
or
lea
sti
insl
scas
dec
push
out
push
mov
in
lock
cmp
and
lock
xor
loope
popf
xchg
mov
adc
fstpt
leave
xor
test
push
cmpb
and
cmp
push
ljmp
in
xchg
sbb
or
pop
mov
xorl
call
cmpsb
scas
cmpsl
fists
cli
mov
jne
xor
add
cmp
or
imul
dec
lds
stos
cmpsl
add
push
cmpsb
xchg
dec
xor
fdivl
daa
mov
jbe
pushf
add
and
movsb
pop
mov
xchg
cwtl
mov
sub
push
mov
scas
subl
jnp
sbb
ficompl
stc
jg
sbb
sub
mov
in
stc
mov
dec
mov
mov
out
mov
and
jg
cmp
mov
xor
repnz
xor
int3
icebp
mov
rclb
xor
fwait
push
pop
dec
or
fsts
dec
mov
and
jbe
jne
aaa
push
mov
idivb
and
movsb
push
add
pop
push
mov
push
and
daa
shl
add
mov
ret
out
mov
inc
sbb
mov
lcall
mov
mov
pop
hlt
ss
xor
xorl
in
sahf
jae
sub
leave
ss
inc
or
cmp
cld
imul
mov
mov
fs
aas
mov
lods
test
cmp
push
sbb
push
pusha
xchg
cmp
shll
outsl
jmp
mov
lahf
sub
dec
out
mov
xchg
add
lds
adcl
cmpb
dec
push
test
xchg
shll
jle
call
mov
cld
loopne
bound
out
pop
mov
push
mov
sarb
xchg
push
repz
cld
cmp
adc
leave
scas
in
lcall
xor
mov
jge
sub
jp
enter
in
add
push
add
pop
mov
lret
loop
push
das
jle
std
push
aam
cmp
fisttpl
daa
cmp
out
mov
or
inc
mov
in
or
jl
pop
adc
push
sub
or
mov
xchg
sahf
push
clc
repz
xchg
aaa
and
and
jno
pop
es
enter
add
and
out
in
pop
jo
in
outsl
daa
sub
dec
and
arpl
cmc
and
jle
clc
wrmsr
pop
add
lret
pop
sbb
imul
pop
push
dec
fptan
out
cmp
inc
filds
sbb
lahf
in
into
loop
test
std
adc
dec
mov
out
mov
mov
mov
mov
aaa
insb
xor
loopne
mov
ss
shll
push
or
popf
mov
popf
ljmp
lock
push
dec
xchg
negl
mov
mov
inc
nop
insb
mov
enter
pop
mov
and
mov
pop
repz
packsswb
pop
arpl
add
aas
addr16
ret
inc
jae
dec
add
xchg
stos
imull
add
xchg
mov
cmp
and
jmp
xorb
in
movsl
add
xchg
in
jmp
xor
or
xchg
dec
jle
cmp
jecxz
add
xlat
cmc
jne
or
or
sub
mov
mov
and
push
stos
inc
mov
cltd
test
lock
pushf
aaa
aad
push
inc
adc
ret
pushf
cmp
mov
into
push
pushf
in
popa
dec
cmpsl
int
adc
add
mov
mov
iret
jp
adc
test
data16
inc
add
repz
cmp
jne
cmp
push
lods
hlt
test
fistpll
pop
pushf
andb
xor
sbb
daa
push
pop
lcall
lahf
cmp
lret
imul
icebp
mov
push
mov
stos
jmp
jbe
mov
push
and
fcoms
mov
lds
adc
xchg
outsl
and
push
jne
cmpsb
fidivs
sbb
jge
adc
test
jl
outsl
shl
lret
cld
sub
imul
icebp
andb
mov
stc
mov
dec
bound
push
dec
sbb
inc
pop
ret
icebp
sti
xor
mov
pop
movsb
sbb
jmp
scas
popa
sar
popa
push
ljmp
stc
rol
ja
pop
aaa
jo
les
je
popf
adc
lahf
adc
cmp
push
add
sub
cmp
imul
pop
jmp
mov
inc
popf
mov
dec
lcall
adc
fsts
mov
ja
or
mov
push
fstps
sub
cmp
sbb
addr16
inc
mov
and
xlat
inc
je
cltd
test
sub
les
or
loopne
std
push
xchg
hlt
sti
je
and
insb
adc
rcl
test
daa
nop
push
popf
popa
iret
lea
xchg
sbb
ja
adc
es
daa
imul
xor
ljmp
in
jne
mov
cmp
cs
xor
xchg
and
inc
dec
or
testl
xor
movsb
scas
stos
sub
jl
repnz
mov
mov
fwait
adc
push
adc
xchg
ret
push
jnp
add
mov
sub
rcr
int3
dec
pusha
or
xor
sub
aam
cs
insl
xchg
mov
cs
retw
pushw
addl
and
addr16
mov
inc
lds
jge
stos
inc
mov
dec
pop
mov
and
mov
mov
cli
imul
mov
sub
mov
adc
inc
rorl
test
xchg
mov
pop
mov
push
adc
add
add
rol
popf
mov
dec
jmp
cmp
sub
inc
repz
sub
and
sub
push
mov
fidivrl
inc
repnz
or
imul
pop
scas
mov
iret
ret
xchg
jno
sti
push
loope
add
subb
xchg
mov
mov
pop
test
sbb
sub
xchg
add
sub
or
sub
mov
mov
pushf
and
dec
jge
lods
cmp
ud1
mov
pop
daa
aas
pop
adc
jae
cmpsb
pop
fldl
jg
jbe
dec
es
xor
jno
das
test
mov
das
pusha
inc
adc
clc
out
les
outsl
sbb
adc
mov
sub
sbb
shlb
mov
adc
lds
add
mov
stos
fiadds
inc
jns
repz
dec
push
loope,pt
cld
mov
fldcw
jae
or
xor
add
pop
xor
out
aas
inc
cmp
std
sub
fwait
pop
pusha
push
ret
rolb
pushf
add
xor
push
ffree
test
mov
adc
adc
sbb
and
cmp
pop
inc
into
add
mov
addb
mull
sbb
push
scas
mov
jo
mov
scas
mov
jae
xchg
bound
adc
loop
mov
pop
sbb
jne
rcr
push
pop
out
mov
shlb
add
add
and
in
sbbl
out
outsb
pop
int3
inc
sbb
and
push
cmpb
in
movsb
outsb
mov
cld
roll
xor
out
jb
sahf
inc
mov
movsl
fisttps
cltd
mov
lods
pushf
dec
push
fmull
imul
adc
shll
rcrl
loop
sahf
sub
fcomps
mov
mov
mov
jp
pop
test
shrl
dec
adc
shrb
inc
dec
shll
fisubs
jle
es
add
data16
add
scas
xchg
or
xchg
stos
arpl
shrl
pop
sbbb
inc
cmpsl
push
sbb
add
adcb
cmp
out
rorl
out
mov
std
adc
and
fbld
push
mov
cmp
or
mov
pop
dec
gs
add
insl
adc
popf
sbb
pop
sbb
leave
jecxz
loop
mov
push
inc
loopne
xchg
jne
aas
in
lret
pop
or
dec
sbb
stos
add
ljmp
in
es
call
ja
outsb
push
loop
or
push
inc
jo
dec
cmp
jl
jge
ja
push
push
xchg
inc
cmp
rclb
xor
cwtl
sub
fsub
jge
push
outsb
mov
xchg
adc
rcll
mov
iret
xor
jno
mov
stc
jmp
lods
sarb
sbbb
dec
inc
cltd
lret
xchg
cmovg
mov
pop
sarb
aas
inc
add
sub
pop
jge
mov
xchg
fdivrs
stos
bound
movsb
mov
addr16
jbe
mov
mov
mov
aad
mov
dec
leave
hlt
pop
call
js
push
mov
clc
negb
and
stos
aas
pop
inc
loop
cld
fincstp
sub
mov
sub
jp
sbb
mov
push
stos
mov
push
mov
movsl
cmpsl
add
sub
scas
loopne
lcall
mov
mov
call
cmp
mov
cltd
mov
loopne
xlat
pop
jno
roll
outsl
clc
xchg
mov
mov
pop
inc
xchg
mov
aas
jl
xchg
popf
xor
sarb
loope
jmp
shlb
stos
fs
mov
notb
dec
shll
ret
addr16
mov
call
inc
and
push
sub
test
cltd
ja
pop
repnz
icebp
push
mov
call
insl
inc
cmp
mov
or
aas
ret
repz
sub
rolb
sbb
dec
inc
arpl
psubd
shr
mov
je,pt
adc
loope
jns
lock
shlb
or
out
mov
mov
push
ret
pop
std
sub
dec
xchg
add
dec
sub
repz
xchg
clc
jmp
pop
sbb
dec
jmpw
jb
and
mov
enter
jg
mov
aam
dec
bound
or
not
mov
fwait
pop
in
les
dec
dec
mov
subb
scas
pop
ficompl
out
das
push
sbb
dec
nop
out
push
idivl
pop
jo
sbb
shl
mov
add
ficoml
inc
pop
rcrb
or
movsl
jg
dec
in
dec
ret
and
jae
sub
lea
out
xor
push
or
jmp
hlt
inc
mov
sub
test
int3
in
push
or
or
sbb
cmp
test
pop
mov
fimuls
repnz
mov
sub
push
cld
sub
lahf
aaa
dec
iret
mov
leave
push
cld
aaa
leave
push
inc
jle
lret
scas
in
ja
and
lods
int3
sub
lret
imul
push
mov
jg
push
dec
push
out
mulb
cmp
lods
inc
mov
and
or
push
movsl
test
push
in
aas
push
jmp
dec
movsl
or
xchg
mov
xor
andl
mov
jle
cmp
push
pop
ja
leave
shll
negl
sub
cwtl
inc
cmp
xor
shrl
std
xchg
sub
pop
jp,pn
add
orl
cmp
push
mov
idivb
lock
pop
loope
pusha
test
icebp
testb
ficoms
arpl
rcrl
lds
frstor
rorl
mov
jno
iret
push
scas
sbb
dec
fisttps
or
loope
xchg
es
push
pop
pop
and
ror
xchg
pop
mov
mov
dec
pop
xchg
pop
lea
xchg
stos
sti
clc
adc
data16
lahf
rcll
adc
ss
and
jbe
loop
push
shr
leave
negl
adc
ss
xlat
fcompl
jns
les
ds
ja
cmp
in
out
ret
cmpsb
lock
jge
jecxz
mov
xchg
call
rol
scas
jae
xchg
shll
xor
add
mov
and
pop
and
popf
sub
adc
addb
adc
rcr
pop
add
repz
outsb
scas
mov
lea
adcl
cmc
mov
dec
adc
lods
xlat
pop
sub
mov
aad
sahf
int3
iret
pusha
cmp
std
divl
cmc
mov
out
in
jno
movsl
test
shl
mov
scas
ss
fxtract
jmp
gs
sbb
mov
pushf
out
mov
in
sub
jmp
sbb
xchg
mov
stos
mov
pop
mov
fs
pop
xor
out
mov
mov
jl
je
adc
adc
adc
dec
fbld
test
lock
repnz
sbb
xor
icebp
fwait
repz
in
int
in
movsl
mov
xchg
scas
hlt
in
iret
push
push
outsb
pop
out
stc
mov
dec
push
orl
cmp
lret
bound
nop
fs
cmp
inc
xor
pop
inc
mov
jo
repz
out
aas
es
roll
and
and
mov
pop
cmc
adc
cmc
xchg
dec
adc
xchg
jg
mov
jae
push
adc
hlt
adc
mov
test
cmp
addr16
jno
ret
mov
lds
cmpsb
pop
push
dec
daa
dec
pop
icebp
inc
jb
sahf
rol
push
call
into
mov
mov
ja
mov
jo
mov
mov
outsb
jmp
daa
int
inc
xor
jg
mov
incb
and
sbb
mov
stos
cli
jge
jno
mov
or
and
or
lods
lock
mov
and
hlt
pop
fs
icebp
push
int3
sahf
loopne
roll
cmp
mov
stc
sti
rcr
loope
in
dec
inc
cmp
jo
mov
dec
jbe
dec
add
add
mov
jge
mov
and
lea
mov
int
cs
rcr
mov
fists
push
test
or
push
sbb
mov
mov
sahf
addl
add
lcall
aas
das
jmp
mov
shr
and
ja
sbbl
xchg
shll
and
mov
paddsw
cwtl
popf
mov
stc
bound
jno
aad
pusha
and
test
mov
idivl
hlt
mov
pushl
adc
cltd
int3
call
lret
sub
pop
xor
rcll
inc
mov
xchg
mov
jb
int3
push
fs
andb
data16
dec
lods
jbe
mov
pop
ja
stos
fcmovb
dec
xchg
mov
stos
ret
pusha
add
sti
sub
push
es
clc
fldl
mov
dec
stos
cmpsb
test
sbb
jl
enter
jne
push
mov
stos
push
loope
cmp
cmc
inc
orb
jle
add
subl
aad
jo
insb
mov
aaa
inc
cmp
mov
lods
adc
cmp
push
out
cmp
add
mov
das
jmp
or
add
or
icebp
inc
mov
push
add
sti
mov
mov
adc
dec
in
jecxz
inc
pop
jecxz
bound
jno
cmp
xchg
iret
or
mov
xor
addr16
call
test
lea
xchg
and
je
das
cwtl
mov
ja
cmp
arpl
adc
lahf
adc
subl
notl
jnp
enter
inc
sbb
sub
cltd
loop
lret
mov
xchg
leave
jl
ljmp
js
mov
mov
lds
rcrl
and
adc
mov
pop
jns
jle
lea
fistpl
int3
xor
dec
loopne
xchg
out
sub
inc
mov
push
push
ror
inc
sbb
ja
push
inc
idivb
ficoml
mov
dec
sub
mov
push
cld
mov
adc
loop
cltd
and
fwait
test
lret
scas
mov
xchg
mov
or
std
mov
sub
dec
scas
stos
and
fildll
test
lock
popf
mov
pop
movsl
sub
cmp
insl
dec
sub
mov
sbb
rclb
shr
test
dec
dec
pop
lret
dec
jb
inc
clc
rcrb
arpl
stos
in
sti
and
push
xor
jl
adcb
or
in
popa
jecxz
jno
inc
das
mov
jnp
xchg
js
daa
push
imul
mov
xlat
in
push
arpl
jne
pop
or
mov
mov
out
arpl
jo
insl
daa
sub
les
repnz
mov
xchg
xchg
lcall
push
add
jle
in
cmp
mov
int
lds
andl
ja
push
mov
xchg
mov
jbe
imull
sbb
pop
imulb
leave
jp
mov
sahf
dec
scas
lret
mov
insb
jge
pop
or
arpl
fcmovbe
das
mov
push
sbb
rorl
ror
mov
daa
jecxz
movsb
cmpl
or
adc
pop
pusha
adc
stos
and
jnp
cmp
sahf
js
cmpsl
inc
mov
fists
inc
ret
mov
add
adc
push
sbb
loopne
sub
test
lahf
jp
fsubrl
pop
call
pusha
add
xchg
xchg
movsb
mov
adc
mov
in
mov
dec
sbb
sub
out
sub
xor
nop
mov
iret
dec
inc
ja
pop
cmp
subl
out
int3
or
out
and
mov
stc
mov
or
push
xchg
inc
xchg
inc
push
or
mov
mov
cmpsb
leave
cmp
fstpt
jg
fisubs
fdivs
lods
enter
pusha
lahf
outsl
xchg
xor
xor
xchg
lea
fldl
mov
mov
orl
push
pop
mov
dec
adcb
insl
js
mov
aas
sbb
je
jb
test
xchg
out
and
fsubl
stc
dec
ret
mov
testl
sub
lret
stos
jg
icebp
into
inc
pop
jb
jp
push
inc
and
cmp
add
and
scas
sbb
test
inc
aaa
xchg
inc
cwtl
filds
pop
notl
mov
pushf
in
mov
fisubl
scas
mov
js
sbb
jp
cmpb
insl
mov
aam
lods
sub
imul
xchg
or
push
mov
xlat
mov
inc
push
or
adc
sarb
loope
dec
xor
push
inc
push
dec
leave
loop
orb
rcll
loope
pushf
push
pop
push
push
mov
or
rcrb
aad
in
ret
sbb
push
pop
out
mov
sub
enter
testb
mov
jg
test
scas
sub
and
dec
jp
adc
ror
seto
idivb
int
int3
test
aam
ja
push
movsl
pop
jecxz
push
add
daa
xchg
imul
mov
int
push
pop
dec
pop
leave
inc
fnstenv
mov
lret
daa
out
jle
enter
xchg
jo
test
out
jmp
push
mov
loope
outsb
test
push
and
out
mov
sti
lock
push
movsl
mov
stc
shll
ret
lds
in
ja
fsubrl
lret
jno
je
adc
adc
add
lods
dec
jb
fwait
mov
inc
test
sarl
aam
sarl
mov
ret
hlt
jg
loopne
fiadds
test
sarb
fsubrl
or
push
and
pop
jo
cmp
jnp
dec
sbb
add
mov
push
pop
or
movsb
add
mov
push
fucom
xor
cmp
insl
or
fldenv
sub
enter
jae
inc
inc
jno
xor
stc
pushf
mov
test
fmull
mov
push
aad
test
mov
sbb
inc
lds
or
dec
popa
test
mov
mov
stos
and
xchg
mov
int3
xor
cmp
das
or
inc
sbb
dec
ficoms
mov
mov
pop
inc
mov
mov
mov
push
pop
and
or
jae
pusha
es
xor
mov
mov
fisttpl
jg
leave
cmp
mov
mov
dec
cltd
loopne
fld
ret
testl
stc
xchg
arpl
or
inc
xlat
mov
aaa
fs
cmp
aam
mov
or
push
pop
ret
mov
xchg
and
rcl
jge
stos
push
sti
jl
sbb
or
sbb
mov
notb
jl
mov
dec
daa
pop
shlb
loop
ret
adc
xchg
sbb
jmp
adc
pop
add
add
push
setnp
and
and
jge
mov
dec
dec
fnstsw
mov
sbb
xchg
mov
cli
mov
mov
add
lahf
cmpsl
inc
sub
xchg
inc
das
mov
and
xor
cs
adc
in
movsl
cmp
push
outsb
xor
bound
in
cmc
out
test
xchg
mov
push
mov
push
sbbb
cli
shll
cmp
sbb
dec
mov
push
cwtl
loope
std
hlt
je
sub
and
xchg
pop
jbe
rcrl
jbe
aaa
push
lahf
pop
mov
push
add
mov
inc
ss
lods
cmp
fiadds
fwait
add
lahf
adc
xchg
fs
pop
and
cmovno
push
push
jo
adc
sbb
mov
repz
stc
xor
jmp
mov
stc
leave
xor
add
insl
nop
xor
push
leave
mov
lret
jbe
pop
xor
pop
sti
sti
adc
push
shr
jecxz
xor
lds
arpl
cmp
push
jns
loop
std
loop
fimull
push
dec
xchg
fcmovnu
jge
inc
push
and
sub
pop
xor
lock
arpl
iret
shl
xor
scas
aam
cmpb
loope
scas
cmpsl
in
lcall
mov
jae
loope
xchg
iret
lock
pop
xchg
shlb
jmp
js
call
scas
das
in
outsl
out
sbb
jb
jge
jb
adc
pop
add
sbb
scas
cmp
mov
sub
cmpsl
sahf
cmpsl
sub
jecxz
sub
arpl
jnp
ds
jns
xor
outsl
sbb
loope
je
mov
xchg
js
jb
out
jo
mov
push
xchg
in
loop
add
jb
lods
jb
or
mov
and
loope
addb
xor
repz
icebp
or
fnsave
sarb
les
mov
fldcw
pop
pushf
xchg
mov
pop
inc
xor
mov
int
push
sarl
fcompl
fwait
imul
pusha
inc
sarl
xchg
outsb
lods
dec
pop
ret
jp
cld
xor
jl
mov
mov
fcomps
scas
inc
mov
xchg
in
sub
je
es
push
pop
inc
sbb
xor
mov
fwait
enter
jnp
pop
flds
fisttps
inc
imul
jnp
fbstp
insl
or
scas
xchg
dec
imul
inc
popw
jge
cltd
mov
push
mov
mov
pop
les
mov
dec
jp
dec
jnp
jnp
fcomps
lret
aas
inc
sbb
jge
dec
jge
jmp
adc
dec
lret
bound
lcall
test
jge
sti
mov
jne
dec
inc
clc
cmp
and
mov
je
cmpsl
jecxz
dec
iret
jns
xchg
pop
rcll
adc
clc
sub
aas
les
inc
fs
dec
rcrb
cmp
insb
mov
stc
dec
movb
mov
stc
inc
sub
mov
lods
out
inc
jnp
or
pop
fldz
je
dec
in
xor
xchg
push
incb
mov
stos
les
sahf
and
iret
mov
cltd
pop
lods
lcall
mov
cmp
xor
adc
sub
sub
lock
jae
std
fmull
push
mov
push
sbb
imull
ret
loope
adc
lds
mov
js
adc
cltd
pushf
sbb
fmul
out
dec
fdivr
sbb
jecxz
xor
ss
ret
jb
pop
aam
js
adc
sbb
mov
lods
push
xor
mov
hlt
sbb
adc
mov
in
movsl
das
mov
mov
cmp
rorl
mov
enter
lret
hlt
inc
aaa
dec
or
lock
adc
leave
scas
mov
pop
sub
or
sti
jmp
movsl
mov
push
call
inc
sti
inc
int
in
je
jmp
mov
fisttps
imul
sub
pop
in
mov
push
aam
cmc
push
ror
fimuls
mov
push
sub
mov
sarb
mov
cltd
jo
mov
mov
mulps
mov
lds
cs
clc
test
cmp
in
add
push
pop
push
ljmp
cli
mov
and
sub
xor
xor
lock
and
push
mov
leave
int
xor
adc
jno
mov
outsl
sti
or
mov
icebp
xor
sub
daa
mov
out
imul
mov
popf
xor
lds
dec
popf
inc
imul
pop
dec
cmp
or
test
fiaddl
insl
scas
add
xor
lods
mov
fwait
xchg
add
cli
sub
test
cmp
mov
mov
or
arpl
mov
pop
ss
test
test
jns
es
pop
mov
std
push
pusha
xorb
mov
mov
pop
cmp
inc
imul
inc
xchg
fwait
xor
js
add
std
loope
dec
and
inc
sbb
cmp
add
pop
dec
repz
bound
push
enter
loope
inc
mov
lret
cmp
fwait
ja
push
in
nop
fcomi
jl
int3
jnp
gs
test
xchg
mov
add
lods
mov
aam
lock
loopne
fidivrl
mov
icebp
fisubl
mov
popf
adc
fildl
mov
mov
rorb
mov
xchg
add
in
test
in
sub
enter
fdivrp
pop
mov
cwtl
inc
cltd
push
fsubrl
jbe
sbb
popa
sbb
fwait
jg
lock
and
inc
imul
enter
dec
pop
mov
mov
test
xchg
popa
enter
xor
pop
shlb
int
cmpsl
jp
xor
out
xor
add
pop
mov
add
add
aas
push
fidivrs
add
leave
fisubs
mov
mov
loop
sbbl
inc
cmp
popf
sub
cmp
sbb
enter
cmpsb
jns
hlt
ds
aad
mov
es
jb
data16
cli
shll
ret
ret
mov
sbb
inc
jle
scas
fistpl
insb
fstl
fbstp
dec
cld
mov
inc
cli
addr16
mov
ror
inc
and
fnstsw
arpl
loope
les
jge
fiadds
imul
fldt
imul
jb
mov
jo
leave
fucomip
popf
add
dec
mov
xchg
dec
int
push
xor
push
dec
mov
or
shlb
clc
hlt
add
pop
ret
jne
pop
lcall
sub
dec
stos
popf
pop
add
push
adc
or
lret
xchg
xorb
dec
gs
adc
push
mov
call
rcrb
and
adc
or
mov
jne
jge
inc
cmp
xchg
push
adc
mov
stos
loop
xor
and
outsl
mov
push
fwait
gs
test
jmp
mov
insb
stc
je
adc
jnp
dec
pushf
push
mov
mov
fisttpll
mov
push
push
aam
xchg
dec
push
and
das
sbb
mov
mov
std
mov
fwait
push
int
movsb
sbb
insl
mov
shl
sub
mov
cli
jge
jns
pop
jge
stos
repnz
mov
lcall
mov
pushf
out
lcall
ss
jl
pop
adc
lock
into
sbb
aas
xchg
xor
dec
scas
ficoms
cltd
test
sub
jl
hlt
test
dec
sbb
and
call
out
inc
fisttpl
pusha
inc
xchg
jb
or
adc
cmp
xchg
xchg
mov
jns
xchg
pop
mov
push
add
jp
fcoms
xor
lods
sbb
into
mov
mov
in
es
jmp
push
iret
fnstenv
xor
push
inc
leave
nop
loop
mov
aaa
jecxz
imul
das
push
mov
push
xor
das
xor
rolb
pop
pusha
xor
repz
std
or
mov
daa
lods
lret
fsubrs
shlb
add
cmp
jns
enter
xor
adc
add
test
inc
cmc
add
aas
mov
push
xor
xchg
faddl
andb
rcrl
dec
std
gs
xor
or
xchg
outsb
out
es
fwait
and
xchg
int3
cmp
lea
cmp
jmp
out
or
pop
je
popa
xchg
pusha
jp
movsb
push
cmp
xchg
out
push
add
dec
movsl
fldenv
mov
pop
jae
filds
jmp
mov
add
mov
mov
testl
adc
jns
data16
add
clc
inc
fdivs
push
leave
mov
adc
mov
or
repnz
or
in
btr
cmp
xchg
je
xchg
test
cmp
push
cmp
or
fwait
and
push
les
aaa
es
lcall
xor
test
lods
push
add
ljmp
push
mov
or
jg
ja
test
xchg
cmpsl
cmpsb
xor
jmp
mov
sahf
out
rolb
mov
mov
mov
sub
mov
out
mov
mov
xchg
or
les
push
cmc
inc
sub
test
in
or
gs
test
sarb
je
or
test
add
ret
mov
outsl
jmp
test
add
fcoml
xchg
xorb
pop
pop
dec
out
fistpl
clc
and
repz
xchg
inc
mov
add
jb
pop
sar
rcll
shrl
in
xlat
adc
sub
mov
fstp
dec
or
imul
aad
stos
lock
xchg
sbb
push
pop
mov
les
jmp
cmp
cmp
mov
ja
cld
add
jne
mov
inc
mov
sub
push
and
dec
cmpsb
xchg
adc
push
jge
inc
rcr
jbe
sbb
repnz
lds
bnd
aas
dec
xchg
iret
add
inc
fsubrl
aam
stos
mov
mov
outsl
mov
push
ror
mov
add
mov
test
imul
jnp
mov
and
ret
clc
cmp
clc
dec
dec
aam
fcmovbe
mov
cs
inc
sbb
adc
and
push
mov
pop
addl
loope
and
pop
or
gs
out
xor
sub
and
mov
jnp
lret
jno
add
ret
mov
jecxz
dec
mov
mov
mov
imull
xchg
cmpsl
pop
rorb
rcrb
mov
negb
fldenv
ja
mov
inc
leave
push
inc
xchg
and
dec
push
mov
fcoms
cmpsb
inc
ds
repnz
push
push
cmp
sub
sbb
or
or
and
xchg
ret
mov
push
jg
push
lds
mov
getsec
stc
push
cli
ret
sbb
mov
aaa
movsb
xchg
fs
orb
subb
mul
cs
jbe
lret
cmpsb
cltd
ljmp
mov
mov
scas
lds
das
adc
outsb
mov
xchg
call
mov
cld
hlt
mov
sarb
das
sub
ror
out
pop
loop
fbstp
imul
arpl
clc
mov
xorl
mov
dec
sub
outsb
mov
fdivrp
add
dec
leave
daa
jp
inc
retw
mov
ja
sub
mov
push
cmp
lahf
bound
shlb
es
mov
imul
adc
mov
add
xchg
frstor
cmpsl
push
and
sbb
mov
hlt
dec
lods
sarl
xchg
mov
mov
mov
jg
popa
xchg
add
pushl
mov
sub
sub
adc
pop
arpl
subl
int
cmp
clc
fsubrl
int
mov
or
cmp
cmp
dec
xchg
shr
inc
mov
gs
loope
cmpsb
movsl
pop
jge
xor
ss
and
xchg
or
call
push
movsl
shlb
mov
scas
pushf
scas
outsl
xchg
mov
int3
insb
icebp
ds
repz
adc
movsb
jns
test
fdivp
xor
stos
jecxz
inc
mov
inc
jno
push
test
pop
insb
inc
call
in
outsl
popa
aam
adc
scas
jmp
in
in
nop
mov
or
sbb
lock
xchg
rcrb
dec
shlb
dec
jnp
inc
inc
rcrb
imul
lock
sub
fnstsw
cli
pop
inc
adc
ret
les
and
aas
xor
jge
dec
inc
xor
lret
xchg
mov
addr16
int
push
inc
iret
int3
cmpsb
sbb
divb
out
leave
jne
push
dec
pop
test
add
dec
in
push
stos
inc
inc
xchg
in
adc
movsb
xchg
movsb
dec
pop
mov
testb
inc
ds
xchg
cmp
insl
mov
push
cs
sub
out
lret
pop
jecxz
cli
fnstcw
repnz
xchg
stos
stos
jmp
inc
jge
sbb
mov
insb
aas
test
ljmp
xchg
mov
js,pn
hlt
xor
jle
mov
outsb
mov
ret
xor
je
inc
mov
push
iret
sbb
mov
scas
clc
xor
xor
ds
leave
lock
pop
sub
jnp
cli
mov
mov
stos
or
jo
popf
inc
pop
jne
call
xor
inc
mov
mov
jmp
mov
sbbl
call
push
out
das
push
das
push
sub
in
jg
sub
push
fisttpll
out
test
sbb
in
jb
fwait
jmp
rolb
rcrl
icebp
dec
test
jb
pop
xor
adc
pushf
inc
xchg
pop
xchg
call
cmpsl
xlat
cmpsl
test
out
mov
fdivp
das
xor
xorb
and
arpl
pop
mov
std
test
fld
scas
cmpsb
fbld
dec
cmp
mov
mov
sbb
enter
lcall
lret
adc
scas
sub
fsubrs
mov
enter
sbb
xor
insl
enter
dec
adc
mov
jb
les
sti
fdivl
dec
and
pushl
orl
pop
xor
nop
mov
ret
les
inc
adc
inc
out
vpavgb
sub
repnz
xchg
fstpl
jge
xlat
inc
adc
roll
sbb
push
sbb
daa
add
dec
imul
mov
push
push
stc
fildll
das
pop
in
repz
dec
xchg
loopne
or
cmpsb
stc
loop
push
fs
insl
xor
clc
es
data16
mov
push
adc
sub
imul
jno
loop
stos
mov
sbb
leave
hlt
xor
hlt
and
test
je
mov
rolb
jmp
xlat
flds
fcomps
mov
sahf
adc
push
xor
pop
add
lea
dec
adc
pop
movswl
loope
adc
mov
insb
loop
fxch
xor
mov
inc
xor
dec
sub
jno
movsl
in
jne
test
ret
jg
out
icebp
and
pop
mov
mov
dec
push
or
cltd
mov
stc
pop
dec
mov
lret
dec
mov
fstp
out
int3
fnstenv
cmpsl
emms
dec
subb
fisttpll
sbb
std
test
dec
clc
add
outsl
or
xlat
mov
inc
daa
pop
test
and
inc
lahf
sahf
int3
repnz
movl
aaa
ror
pop
mov
sbb
mov
loopne
rorb
mov
mov
and
adc
ficompl
mov
jno
movsl
movb
pushf
or
flds
das
mov
or
mov
mov
inc
jmp
lahf
mov
iret
mov
mov
gs
into
mov
pop
testl
scas
sub
dec
xchg
lret
out
sbb
dec
jecxz
aam
jmp
mov
cmp
ljmp
sub
decb
sbb
idivb
hlt
scas
in
lret
or
sahf
and
mov
int
inc
push
xor
imul
lock
enter
sub
dec
jg
inc
add
adc
loopne
stos
cmp
enter
dec
dec
mov
movsb
xor
mov
insl
test
shll
adcb
pop
cs
jae
cmpsl
cmp
loope
scas
push
testb
mov
push
pop
sub
stc
imul
inc
dec
ret
shrl
mov
dec
cmc
test
push
ljmp
and
push
leave
pop
aas
sbb
jbe
xor
cltd
pop
lret
sub
lea
pop
mov
xchg
add
or
fwait
add
cmp
rol
adc
ds
dec
xchg
add
cmpsb
fmull
inc
push
jns
add
adc
or
in
push
xor
popf
mov
movsl
nop
mov
xchg
arpl
and
fs
daa
push
inc
cwtl
xor
mov
inc
dec
sbbb
iret
mov
clc
xchg
pushf
push
mov
out
sbb
repnz
icebp
mov
scas
ret
in
stos
or
pop
dec
dec
mov
inc
shrb
into
stos
jnp
gs
nop
dec
imul
shll
clc
mov
dec
sbb
jge
ljmp
addr16
pop
testb
xorl
movsl
cltd
movsl
xorb
pop
xor
and
dec
out
imul
push
les
push
lock
sbb
xor
scas
in
loopne
stos
shr
mov
lcall
pop
jae
je
aad
mov
and
es
push
sbb
sub
pop
outsb
in
outsl
ret
pushl
pop
js
dec
das
sbb
fisubl
cmp
xor
imul
add
adc
mov
outsb
popa
dec
aad
cmp
cmpsl
ss
jecxz
test
sub
sub
cmpb
leave
xor
push
movsb
pop
dec
and
mov
add
push
ret
iret
test
sub
inc
jno
jae
orl
jne
leave
or
pop
sbb
adc
scas
cltd
cltd
jle
cmc
push
int3
fstps
imul
enter
mov
adc
add
jb
dec
fidivrl
lret
mov
out
jbe
mov
and
push
std
enter
imul
dec
fimuls
popf
daa
testl
jle
and
cmp
ja
es
lods
out
dec
mov
test
dec
adc
sub
movsb
adc
xor
leave
scas
insb
clc
dec
push
fistpl
out
pop
xchg
scas
cmp
mov
insb
loopne
push
js
outsb
out
hlt
popa
loop
xor
mov
xlat
lds
cmp
sub
ret
xchg
jge
lret
jmp
and
out
into
sub
out
jbe
xor
cmpsb
in
cli
js
arpl
or
pop
fldcw
or
jle
cmp
shl
sar
gs
sub
jl
ja
les
arpl
jmp
xorl
xor
or
xor
sub
xor
push
fcomps
fsub
cmp
pop
mov
adc
or
mov
push
movsb
cmp
pushf
xor
pop
stos
mov
addl
and
leave
ret
les
pop
aam
dec
push
call
jecxz
shll
popa
pushf
push
adc
fadd
adc
cmp
xchg
fisttpll
cmpsl
movsl
mov
xor
add
out
decl
aaa
in
adc
mov
es
add
enter
les
ds
aad
fwait
pop
jb
adc
push
pushf
insb
mov
sub
lret
leave
in
pop
mov
xchg
lock
xchg
test
or
int3
ja
in
jecxz
leave
jle
inc
and
jo
rclb
and
divl
jb
mov
addb
inc
sbb
shr
imul
mov
mov
std
adcl
stc
push
jns
inc
xchg
sbb
repnz
aaa
in
jmp
inc
and
arpl
mov
push
aaa
jmp
jl
loop
jb,pt
ds
out
jl
inc
cld
inc
leave
call
mov
jb
xor
push
pop
jb
test
mov
jp
dec
pop
lods
jg
cmc
or
iret
shrl
iret
ret
pushf
sub
mov
adc
repz
cltd
call
int3
dec
dec
test
sub
mov
test
xor
cmp
popf
mov
fwait
clc
pop
and
insl
add
adc
and
cmp
jl
dec
xchg
stos
adc
mov
lock
pop
inc
dec
add
frstor
rol
shlb
jae
lock
lock
loopne
psadbw
roll
mov
test
lret
xchg
pop
sbb
push
or
gs
add
xor
lahf
stos
insl
mov
mov
dec
and
pop
adc
pop
pop
pop
push
sbb
faddp
mov
jne
call
stc
out
sub
sbb
sub
imul
and
cs
arpl
jmp
fstpt
fcomi
jbe
das
lock
cmpsl
xlat
popf
and
push
xorl
inc
inc
loope
inc
mov
fisubl
fwait
xlat
ds
xchg
sub
sarl
sub
jg
sbb
rcrl
test
imul
xor
sti
imul
adc
daa
movsb
push
aaa
or
fwait
sarl
inc
into
jl
push
in
in
lcall
adc
mov
mov
clc
daa
das
out
icebp
xchg
out
pushf
and
inc
inc
sarb
mov
xor
loopne
fwait
cmpsb
aas
sbb
popa
xchg
mov
cmp
fistps
xchg
inc
or
nop
cmp
or
and
in
rol
mov
gs
inc
add
lock
and
xlat
pop
call
and
mov
push
xlat
sbb
xchg
xor
push
hlt
dec
call
stos
jbe
inc
cmpsb
sbb
loopne
loopne
pop
pop
fbld
jg
sub
cltd
addb
repz
mov
mov
and
inc
clc
pop
std
and
dec
rorl
scas
or
in
add
repnz
pushf
sub
fs
int
jo
pop
dec
andl
repnz
cmp
cmp
cwtl
rcr
add
jae
dec
int
mov
push
sub
xchg
pop
insl
sbb
mov
sbb
call
sbb
push
fldenv
lret
rcll
call
test
lret
lret
inc
daa
pushf
jne
pop
jae
adc
mov
mov
rcr
sbb
pop
call
mov
movsl
mov
cmp
push
jp
push
add
stc
popa
jb
test
mov
in
mov
nop
stos
adc
arpl
loop
pushl
insb
jbe
xchg
fstps
pushf
mov
and
and
insb
cmp
xchg
roll
loopne
out
or
pop
clc
push
icebp
mov
adc
bound
daa
call
sub
fstl
sti
xlat
rol
outsl
in
mov
xchg
movsb
fsubrs
rol
cmp
mov
mov
mov
movb
adc
adc
icebp
jmp
dec
pop
mov
xor
add
push
or
jle
ss
mov
sub
loope
loop
dec
data16
lret
mov
jmp
lret
cwtl
movl
adc
push
loop
cmp
cmp
das
and
xlat
add
mov
cmpsb
lret
outsl
dec
iret
xor
imul
loopne
xchg
cmc
mov
pop
testl
rcrb
shll
nop
and
out
pop
cmp
orl
cmpsb
loop
lahf
jno
jp
test
mov
lds
negb
cs
les
xchg
cs
aad
adc
lods
jge
xchg
aaa
shll
xchg
inc
das
cmp
lret
inc
bound
icebp
sub
add
popa
mov
xorb
imul
add
loopne
and
jg
hlt
movb
mov
mov
subl
add
hlt
stc
sarb
pop
out
fs
fwait
sub
fistpll
mov
xor
cmc
test
rorb
jmp
icebp
sub
dec
adc
cmp
and
insl
xchg
cmp
xchg
mov
sahf
and
ds
pop
mov
stos
jo
push
cwtl
push
pop
jmp
adc
scas
mov
xor
test
lcall
jl
inc
pop
aad
in
hlt
cltd
mov
xchg
ret
inc
xchg
sub
sub
int3
in
xor
xchg
dec
aas
add
rcrl
mov
pop
outsl
dec
ja
jge
pop
stc
in
subl
xchg
add
dec
stos
dec
out
dec
jns
xchg
cmp
inc
mov
insb
inc
call
jae
ret
nop
push
mov
mov
mov
and
lods
andb
xchg
or
push
mov
daa
clc
cld
push
imul
out
inc
and
mov
movsl
shrb
movsl
sub
pop
add
xchg
mulb
sub
cmc
std
xor
rcr
adcl
sub
loopne
dec
cld
sub
psllw
add
or
out
xchg
push
or
mov
loope
pop
or
insb
mov
jbe
fld1
jmp
ja
xchg
cs
fdivs
dec
orb
out
sbb
shll
fistpl
ss
xor
cwtl
and
jns
or
bound
jmp
or
dec
mov
mov
lods
jg
aaa
mov
loope
cltd
sub
dec
in
mov
and
cmp
add
clc
jo
jp
pop
push
or
in
fidivrs
xor
lds
call
cmpsl
gs
add
test
scas
xchg
pop
movsl
in
testb
xlat
xor
inc
nop
push
sbbl
inc
loop
xlat
cmp
sub
fisttpl
jle
xor
xchg
pop
jl
jb
or
lret
jle
in
movsl
pop
rcr
test
lods
add
cs
jl
loope
add
and
int
cmp
push
shrb
call
sub
push
test
addr16
in
mov
adc
sbb
sarb
and
mov
outsb
ret
push
int3
fwait
mov
sar
jp
push
sub
inc
leave
and
shl
dec
fistpl
nop
inc
and
sbb
stos
pop
lcall
adc
mov
mov
popf
jp
mov
push
inc
rclb
fcomp
cmc
pop
fadd
xor
out
mov
pop
mov
cmp
and
mov
adc
jle
call
mov
inc
ljmp
je
mov
pop
cmp
inc
push
repnz
shr
repnz
mov
mov
push
in
getsec
lods
xor
sahf
adc
call
push
xor
and
cwtl
ljmp
aaa
cli
adc
cmp
adc
mov
pop
icebp
fdivrl
aaa
pop
xor
pop
jne
cmpb
fidivs
out
je
movntps
xchg
jge
push
or
repnz
ljmp
mov
lret
inc
mov
in
inc
leave
dec
push
sbb
pop
push
add
aad
jb
dec
test
cld
iret
out
sbbl
jl
shlb
in
fistpl
fsubl
pop
psubw
shl
mov
mov
xor
mov
std
out
mov
mov
mov
xchg
cli
push
arpl
aam
adc
std
loopne
or
loop
jle
es
into
xchg
push
inc
cmp
mov
push
in
insl
jae
imull
sub
xchg
orb
shll
mov
add
sarl
nop
inc
enter
and
jnp
sti
inc
sbbb
pop
int
addb
sahf
lock
ret
sub
mov
mov
dec
fwait
sub
outsb
mov
sti
and
mov
cmpsl
mov
into
outsl
in
rcrb
int3
push
inc
xchg
xchg
add
xchg
loope
add
and
pop
jle
aad
imul
es
lods
pop
mov
jbe
xor
movsl
adc
fisttpl
sti
cmp
cmp
fs
enter
std
mov
insb
shl
jb
jb
and
mov
decb
lock
lods
cli
jl
out
aas
add
jnp
cs
and
push
mov
push
shll
mov
push
sub
sahf
pop
mov
jne
xchg
stc
xchg
pop
nop
cmp
pop
cltd
cmp
jbe
hlt
or
xchg
lods
fcomps
mov
nop
mov
bound
jnp
fldcw
xchg
mov
aaa
xor
out
jle
inc
movsb
pop
jg
and
scas
push
inc
sub
add
arpl
push
sub
jecxz
dec
xor
pop
sbb
mov
add
lret
leave
push
lea
andb
mov
test
xchg
bound
out
mov
test
loopne
sbb
lea
aas
fwait
xor
aad
adc
into
inc
mov
mov
aas
aaa
xchg
test
pop
push
aas
pop
fistl
xor
sub
pusha
jle
dec
lcall
mov
sub
mov
popa
mov
mov
adc
lock
cs
out
popf
xor
mov
push
mov
fnstsw
int
xor
dec
orl
loopne
in
aas
inc
rorb
out
and
xchg
push
xor
popf
cmpsb
mov
fsubrp
out
mov
mov
push
inc
xor
ror
test
test
adc
push
dec
adc
pop
pop
sbb
jb
rol
mov
aas
sbb
int
adc
pop
xchg
add
push
int
or
ret
inc
fcmovb
push
mov
xchg
pop
stc
jo
int
mov
pop
aaa
sbb
fsubl
into
cmp
push
adc
shrb
push
sub
stos
ljmp
pop
inc
dec
out
cmp
xor
sbb
lahf
adc
sub
push
imul
in
out
ficompl
jne
mov
shrl
test
aas
cmp
adc
das
sub
jg
mov
mov
addr16
adc
data16
cmp
push
mov
push
cwtl
inc
cld
lea
and
test
sbb
dec
into
xchg
mov
aaa
into
call
or
push
add
ret
aad
test
lods
dec
inc
xchg
imull
das
add
cmp
xchg
cli
test
fmull
dec
xor
nop
enter
daa
popa
gs
lods
sub
mov
mov
mov
cwtl
leave
std
sub
fisttpll
or
add
ljmp
cmp
test
dec
mov
ds
pop
cmp
jle
add
inc
jo
dec
faddp
cmp
inc
adc
aas
mov
xchg
mov
mov
jne
fsubrl
addb
in
adc
fisubs
and
mov
jge
ds
mov
cmc
xchg
sti
ret
fstpt
mov
or
or
inc
mov
push
test
into
sub
xchg
jno
pop
testb
sub
loope
and
sub
jmp
cld
jmp
jo
mov
mov
imul
cmp
xchg
shrb
adc
ret
push
cmp
imul
lea
cmp
mov
adc
ja
push
loope
fisttpl
out
test
dec
icebp
adc
fldt
shrb
aas
sub
or
push
enter
test
ss
xchg
stc
aam
push
jbe
js
popa
or
stos
rorl
std
es
push
rclb
lahf
jb
jnp
sub
pop
jp
push
jp
mov
mov
insl
cmp
inc
mov
push
lods
mov
pop
outsb
rcl
inc
in
jecxz
sub
mov
push
add
sbb
aam
int3
jl
inc
popa
push
inc
push
mov
push
movsl
out
divl
pop
in
inc
js
imul
mov
mov
inc
dec
xchg
jb
push
cmp
xchg
dec
adc
jo
clc
mov
mov
shll
jb
adc
fnsave
inc
test
inc
mov
aas
setns
int
cwtl
pushf
testb
pop
cmpsl
jmp
shr
jbe
jp
rcl
and
imul
cmpl
and
stos
xchg
dec
mov
popa
outsb
aaa
js
imull
pop
mov
cs
dec
pop
mov
sbb
push
cmp
or
mov
fbld
out
push
mov
jb
inc
pop
push
push
fstl
test
mov
adc
test
mov
push
lods
imul
clc
jnp
push
into
dec
dec
add
out
jae
ret
mov
sbb
cmp
scas
mov
inc
mov
movsl
subl
fdivrs
jno
xchg
stos
dec
rorl
jnp
shrb
in
sbb
inc
mov
mov
aad
and
push
pop
add
inc
mov
fisubs
jge
inc
mov
inc
or
xor
xor
mov
dec
sub
ret
fdivl
jge
addr16
adc
addr16
xchg
loope
jae
hlt
cmpsl
fldl
repnz
test
fldt
bound
jle
mov
xchg
sti
dec
ret
pop
mov
jo
jecxz
test
dec
insl
ljmp
call
push
movsb
xor
dec
ljmp
sub
jb
xchg
jmp
push
push
pushf
rorb
fdivrs
enter
lods
cmp
push
outsl
or
cld
cmp
inc
cli
rcrl
lcall
in
pop
in
pop
sub
ja
cltd
sbb
aas
into
cld
xchg
mov
cltd
lret
lock
lret
xor
or
and
dec
mov
cmp
mov
popf
cs
aaa
js
lcall
arpl
in
adc
mov
mov
icebp
adc
ja
xor
jbe
sub
push
in
js
add
pop
lret
jnp
out
jae
jb
loop
mov
xor
dec
into
rol
scas
inc
fcompl
mov
xor
push
push
xchg
imul
sbb
data16
std
mov
sbb
mov
xor
xrelease
gs
sub
lock
inc
cli
jmp
xchg
outsl
push
aas
ss
jnp
push
add
jne
sarl
inc
jmp
push
xor
pop
mov
adc
adc
mov
jg
xchg
loope
ret
daa
test
clc
jb
les
mov
stc
mov
push
cmp
je
mov
and
fidivs
outsl
push
shr
ret
jne
ja
mov
pop
loopne
inc
insl
or
jb
dec
test
xchg
andl
inc
mov
test
adc
ljmp
cmp
stos
mov
push
arpl
xor
mov
je
mov
fstl
jbe
rorb
lock
cwtl
mov
mov
inc
loope
mov
outsb
and
jle
xor
sbb
inc
dec
sarl
aad
in
test
les
lret
cwtl
rorb
sarb
loopne
aaa
mov
mov
jns
mov
rclb
xor
pop
jp
mov
js
mov
test
adc
mov
mov
push
loopne
repz
out
int3
imul
mov
sbb
jg
push
jo
stos
ret
sub
fnstenv
xchg
movl
adc
push
xor
in
pop
fsubs
mov
jae
add
xchg
push
jp
and
fwait
dec
inc
push
scas
in
mov
xchg
xchg
cmp
pop
mov
mov
sub
cmp
push
mov
test
div
lds
imul
cld
push
or
sbb
loope
ret
jp
mov
mov
popa
cmpsb
adc
pushf
cmc
xchg
popa
dec
ljmp
dec
lds
xchg
inc
jl
pop
push
repnz
inc
pop
fldenv
lods
push
dec
rclb
or
sahf
rdmsr
les
lcall
inc
ret
test
mov
mov
sbb
push
aad
add
push
inc
mov
call
inc
jnp
adc
cld
mov
fldl
nop
cli
cmp
jge
imul
mov
xor
stos
rolb
in
and
dec
js
pop
repnz
out
push
or
push
push
xor
fiaddl
inc
ljmp
push
pop
mov
std
xlat
mov
mov
and
pop
inc
repz
push
sub
stc
imul
int
popa
inc
xchg
mov
push
std
orl
test
js
popf
xor
mov
loope
adc
int3
mov
xor
rcll
xor
mov
cli
dec
divb
xchg
jmp
inc
mov
push
js
movsl
jge
adc
pop
add
vandpd
insl
mov
test
sbb
sbb
adc
out
sbb
add
fwait
ja
movsb
stos
fstps
hlt
pusha
add
imull
ficoml
cmpl
out
dec
outsb
pop
pusha
push
sar
adc
sbb
pop
rol
push
je
out
or
dec
and
sbb
and
sbb
inc
and
movd
jle
out
pushf
xchg
out
lods
xchg
faddl
xor
cltd
imul
xchg
push
mov
mov
je
or
sbb
imul
xor
push
mov
aam
movsb
push
lds
lods
aaa
loop
sti
mov
sub
add
push
in
jle
jle
ss
popa
mov
xchg
iret
data16
or
add
in
pop
test
hlt
mov
outsb
sbb
jae
mov
aaa
lret
js
push
data16
insb
ficoms
js
push
xchg
test
orl
iret
push
mov
inc
mov
je
sub
adc
mov
cmpsb
sbb
sbb
xchg
out
dec
clc
ja
aaa
hlt
or
add
loop
pushf
popl
pop
add
scas
push
repz
cmpsb
insb
ret
imul
pop
or
daa
pop
jno
xchg
sub
arpl
sbb
adc
loop
inc
xor
xor
ja
add
or
les
pop
push
and
xor
loopne
mov
movaps
jecxz
sub
int3
aas
inc
lcall
or
cmc
jns
pop
lahf
repz
stc
int
mov
sub
shr
push
push
cltd
push
cltd
and
pop
leave
sbb
cmp
jae
dec
stos
adc
cmp
add
and
inc
adc
popf
test
imul
icebp
xchg
popf
cltd
cltd
adc
jnp
inc
pop
outsb
sbb
lahf
std
pop
ret
shl
bound
dec
jmp
xchg
nop
mov
imul
sbb
ret
sub
not
push
xchg
popa
cmp
mov
mov
mov
adc
pop
mov
cmp
popf
fdivs
mov
cmp
inc
adc
fisubl
sbb
jmp
repz
mov
lea
jae
cwtl
adc
sbb
add
sbb
push
push
push
jecxz
xor
imulb
popa
xor
stos
pop
dec
loop
in
lock
push
xor
popf
xchg
mov
data16
and
cwtl
mov
mov
add
pop
mov
in
add
mov
and
repz
xlat
pushf
jl
test
push
push
ficoml
add
lods
and
dec
dec
dec
mov
test
shrl
fadds
neg
lcall
sti
das
jno
mov
sbb
ret
imul
and
pop
roll
aad
xchg
add
add
dec
hlt
xchg
fisttps
lods
js
xchg
mov
mov
and
push
push
dec
push
sahf
out
in
inc
out
or
xor
scas
mov
out
call
movsb
mov
xchg
mov
push
cmp
jl
push
in
mov
jae
push
jle
jecxz
insb
es
mov
inc
stos
insb
mov
cmp
mov
cmp
stc
aam
or
shlb
leave
ljmp
and
int
jmp
push
jecxz
jno
pop
ss
idivb
add
orb
gs
sbb
les
sti
frstor
je
out
das
and
arpl
fninit
or
iret
iret
cwtl
add
jne
sub
pop
stos
lret
dec
and
pop
xor
icebp
jb
jl
and
cmpsl
add
shl
insb
push
and
cmpsl
fcomi
mov
test
add
sbb
aad
fistpll
dec
and
or
stos
cmp
inc
jmp
or
and
lods
mov
lods
stos
xorl
inc
sarl
add
jp
inc
or
inc
pop
rcll
dec
and
mov
jmp
sbb
sub
out
xchg
out
outsl
roll
loope
pop
mov
rolb
ds
test
and
loop
clc
call
mov
inc
aad
neg
add
jle
test
in
test
out
push
inc
push
push
jmp
stc
into
lret
das
push
pushw
inc
or
es
dec
push
shlb
pop
sbb
xchg
cli
sub
mov
adc
mov
clc
cltd
stos
sub
sbb
cmc
add
xchg
push
sub
dec
add
jle
add
xchg
sub
push
lahf
push
adc
das
fwait
aam
pop
arpl
sub
popa
push
xor
and
aam
pusha
cmc
cmc
ds
and
pop
sbb
int3
mov
mov
repnz
dec
push
into
test
push
xor
imul
mov
or
mov
fmull
sbb
dec
xor
xor
test
lret
jbe
out
mov
mov
push
lcall
adc
je
in
xchg
push
in
loope
xchg
xchg
mov
add
pushf
sub
enter
mov
icebp
out
aas
shlb
sub
adc
lock
cmp
enter
mov
sahf
fdivrs
inc
adc
lret
scas
jge
iret
insb
movsl
mov
stc
andl
sub
inc
dec
loope
mov
jbe
sub
fisttpl
jno
aad
mov
push
adc
in
aad
cmp
insl
pop
test
test
pop
push
pop
sbb
xchg
std
push
mov
ficomps
in
cmc
jle
push
cmp
or
sub
cwtl
shr
pop
cltd
hlt
pop
mov
mov
lds
shl
sub
and
push
cmpsb
pop
sbb
jns
mov
jbe
cmc
xchg
and
xchg
pop
shl
cs
mov
xor
shrb
jg
ret
in
mov
fs
imul
ds
push
aam
sub
fisubl
inc
push
aaa
mov
adc
cltd
xlat
and
mov
xchg
mov
pop
cwtl
sub
pop
int
rol
cmpsl
addb
pop
call
lock
add
stc
sub
lods
std
nop
xor
loopne
scas
push
inc
fcmovnu
push
jge
testl
cmp
mov
add
fdivrs
add
adc
jno
daa
lds
push
add
test
std
add
aas
cld
mov
or
outsb
xchg
es
or
push
bound
je
push
jo
adc
lods
push
xor
mov
mov
cwtl
xchg
sub
cmp
inc
outsb
imul
xchg
push
inc
jl
jmp
and
mov
int3
and
leave
mov
out
cmp
fmull
jo
xchg
shlb
icebp
gs
xchg
mov
bound
add
or
pop
pop
testb
in
cmp
mov
xchg
hlt
int3
test
shlb
arpl
sbb
inc
jle
icebp
scas
or
movsl
dec
arpl
daa
or
jecxz
cmp
int3
mov
adc
mov
outsb
loope
scas
clc
jle
cmpsb
js
ficomps
push
fcmovbe
and
and
jns
test
mov
mov
nop
jecxz
ja
ljmp
sbb
imul
jo
js
cld
adc
mov
mov
mov
xchg
dec
hlt
push
cmpsl
xor
jns
push
mov
outsb
jge
cmp
jle
jg
jmp
mov
jnp
lcall
xchg
lods
iret
xchg
xor
shld
jmp
loope
jl
xor
push
sub
pop
imul
mov
fbstp
unpcklps
jge
sbb
and
call
pop
mov
iret
mov
add
cmp
mov
xchg
scas
or
jns
or
xor
gs
sti
mov
jo
std
out
sub
jg
cmp
xor
adc
es
lock
mov
sbb
jmp
idiv
fwait
call
dec
inc
or
pop
sbb
aam
outsw
icebp
pop
mov
pop
and
mov
cmp
sbb
mov
scas
data16
xor
push
aaa
andb
dec
repz
mov
jo
fcomps
repnz
mov
js
and
stc
filds
mov
cwtl
icebp
gs
or
xchg
lret
push
push
add
stc
push
cli
addr16
xchg
jb
bnd
cltd
add
dec
out
lods
inc
push
rcrb
inc
insl
nop
aaa
xchg
sub
lea
xor
pop
and
push
fsubrl
fdivrl
sahf
decb
mov
xorb
fsubrs
sbb
push
cmp
enter
aad
xchg
movsb
loope
sbb
cs
push
mov
add
lcall
loopw
xor
adc
popa
sbb
xchg
jns
movsl
into
xchg
pop
in
cmp
sahf
jle
out
aas
ficoms
push
or
in
shl
dec
cltd
loopne
lret
fcomps
mov
add
jb
pusha
int3
jb
sub
xor
xor
xchg
xchg
out
stos
xor
jne
mov
or
adc
and
mov
jmp
cmp
shlb
cwtl
lods
jo
pop
iret
jae
and
aad
in
sbb
pop
mov
je
dec
sbb
fwait
sub
or
sarl
daa
lret
repz
or
loop
das
orb
adc
inc
or
sbb
in
je
popf
pop
sbb
xor
movsb
adc
push
push
lods
insl
xor
mov
push
in
popa
mov
push
in
lds
jae
movsb
xchg
xor
aas
cmp
sbb
fstpt
mov
adc
or
shrb
or
imul
fstp
jns
rolb
cltd
xchg
scas
repz
enter
cs
adc
xchg
sub
mov
jbe
fcomip
repz
stos
xchg
sub
sub
fstp
pop
call
insl
or
jg
aaa
cltd
xor
stc
sti
loop
mov
aad
xchg
popf
mov
xchg
sub
push
in
inc
sub
out
cmp
notl
sbb
and
add
inc
push
enter
push
shlb
stos
mov
call
mov
sbb
imul
mov
pop
adc
cmpsl
cs
inc
mov
out
ja
pop
push
mov
xor
push
in
jns
or
mov
dec
adc
lods
pop
out
mov
sub
pop
outsl
xchg
subb
aam
loop
loope
in
out
jae
add
in
mov
insb
push
mov
mov
and
or
mov
cmp
sub
xchg
jae
jnp
pop
pushf
adc
xchg
and
test
outsl
decl
cmp
sub
dec
sbb
std
test
inc
cmc
jecxz
enter
xor
test
shlb
jnp
or
fsubr
jne,pt
cmc
adcb
cmpsl
dec
gs
jb
int
mov
jp
jns
mov
mov
jg
sub
sub
fidivl
add
cld
inc
int3
cmp
xchg
int
test
or
xchg
adc
xchg
fcompl
fdivl
mov
mov
xchg
shrl
nop
imul
mov
push
ja
dec
jnp
push
xor
push
dec
lret
nop
push
cmpsl
iret
movsl
xchg
sbb
mov
cmp
xlat
inc
outsb
cltd
fucom
cwtl
nop
push
jmp
ja
jp
push
arpl
xor
lds
sub
pushf
frstor
jno
fidivs
mull
xor
fldcw
adc
add
pop
shrb
sub
push
mov
stos
dec
mov
push
push
fidivrs
mov
call
or
push
add
jl
std
test
sub
loopne
push
scas
ds
cmp
loop
outsl
xchg
shrb
icebp
dec
mov
fimull
mov
gs
ljmp
std
sbb
or
ds
cltd
inc
popf
or
lods
cld
les
cmp
mov
leave
int
aaa
jg
mov
sbb
dec
sub
rcrl
inc
call
pop
and
mov
sbb
jle
mov
mov
outsb
mov
pop
leave
lahf
inc
out
lds
or
sbb
pandn
push
ja
cmpsb
jmp
jmp
sub
jmp
cmp
jecxz
fdivl
sti
inc
or
out
and
lcall
frstor
push
imul
dec
repz
xor
pop
push
sbb
push
sti
loop
pop
es
and
sbb
dec
push
inc
loop
shrb
in
fwait
jbe
sbb
adc
mov
movsb
std
pop
divl
jle
mov
in
lret
arpl
repz
in
test
arpl
xchg
xor
lahf
push
adc
in
cmc
lcall
cmc
lret
in
mov
mov
push
jae
out
lds
sub
inc
xchg
jbe
sbb
mov
add
repnz
inc
rcrb
push
push
je
cmpsl
aam
xchg
xor
loope
sub
and
icebp
lcall
mov
mov
jae
iret
addl
inc
mov
push
rolb
cltd
fwait
test
clc
inc
popa
cs
mov
scas
mov
dec
cmp
in
push
imul
and
cld
lock
xchg
movsb
and
inc
dec
test
push
fs
mov
aas
gs
sbb
or
enter
clc
fwait
cld
and
imul
sub
jb
xor
pushf
jne
xor
cwtl
fxch
cmp
push
sub
call
cmp
jb
js
mov
pop
add
aad
cmp
dec
test
gs
and
sub
xchg
and
dec
call
sqrtps
or
xchg
hlt
subl
push
or
inc
inc
push
aam
int
cld
jecxz
lea
mov
add
fistps
cs
rcll
cmp
push
mov
mov
mov
sarl
xchg
bound
clc
jmp
loop
mov
push
popfw
jecxz
mov
es
cmp
mov
and
out
jne
ror
repz
mov
fcmovne
xchg
and
cmp
mov
inc
sbb
xchg
lret
and
in
mov
scas
dec
mov
dec
inc
cmp
subb
shrb
dec
mov
lret
lock
cmc
xchg
xor
mov
ss
leave
add
inc
rcll
sub
push
lock
jns
xchg
out
xchg
sbb
loop
cmp
sbbl
push
xor
jb
jge
das
xchg
jmp
pusha
cmp
leave
dec
sbb
add
cmpsb
insb
cs
daa
lods
push
mov
insl
sub
pop
icebp
jnp
hlt
cmpsb
sub
cli
lahf
loope
and
xchg
imul
loopne
xor
mov
inc
stos
sahf
sbb
dec
or
mov
push
dec
cld
jle
arpl
xchg
ud0
xchg
lahf
negb
mov
mov
xor
jbe
rcrl
inc
push
icebp
push
lret
cld
dec
subb
hlt
outsb
lahf
adc
cs
inc
frstor
scas
adc
pop
sub
sub
xchg
adc
xor
lods
add
test
flds
inc
push
les
inc
in
mov
mov
inc
cmp
repnz
mov
fdivs
mov
icebp
jmp
into
fs
repnz
xchg
xchg
es
mov
scas
arpl
push
stos
dec
loop
mov
test
imul
cltd
adc
mov
push
fnstsw
into
pusha
jp
pusha
addl
int
inc
loope
pop
test
cmc
dec
mov
dec
mov
out
add
stos
push
sarl
roll
pop
jne
mov
dec
in
pusha
sub
into
pop
subl
pushf
mov
repz
jo
adc
and
fwait
xchg
out
ret
ljmp
pop
and
push
mov
adc
fdivs
jge
mov
adc
cmp
push
ret
mov
iret
enter
lods
in
cmp
pop
aad
mov
inc
mov
and
mov
adc
pop
idiv
sbb
mov
mulb
hlt
xchg
sub
inc
divl
adc
jle
mov
mov
mov
jmp
and
fimuls
and
jne
movsl
inc
sbb
aaa
lret
xor
enter
inc
leave
arpl
adc
ret
ret
fisubs
mov
sbb
sbb
mov
mov
aad
sub
shll
xchg
push
lods
jecxz
jmp
clc
jle
outsl
popa
adc
inc
in
xorb
enter
cwtl
add
add
fnstcw
nop
rcrl
scas
in
dec
xchg
in
mov
lret
stos
cmp
push
mov
test
pusha
je
xchg
mov
or
jne
dec
lods
sub
pop
ss
fsubrl
mov
scas
xchg
inc
js
and
in
fs
mov
sub
add
arpl
movsl
mov
or
jo
imul
push
xor
mov
adc
ss
xchg
inc
xchg
icebp
mov
mov
cmp
cmp
loopne
fs
in
cwtl
shll
sbb
jmp
out
xchg
fldl
dec
and
and
fidivrl
inc
xor
into
popf
jne
fdivs
pop
or
popa
mov
pop
movsl
add
cmp
andb
aad
push
addr16
mov
mov
enter
pusha
fcoms
das
jle
xchg
jmp
sbb
inc
jnp
cmp
inc
int
xrelease
sub
sbb
loopne
push
addr16
ds
out
lods
mov
xchg
and
inc
dec
scas
or
data16
mov
ret
stos
inc
in
inc
stos
pop
sub
mov
xchg
sbb
dec
or
imul
mov
insb
data16
fldl
adc
mov
lret
popa
inc
fidivs
clc
movsl
or
das
in
sub
test
jg
aaa
xlat
mov
push
cmp
inc
push
lods
jae
ficomps
leave
and
dec
mov
scas
repz
or
pop
lods
lods
cwtl
aas
sbbl
push
mov
xchg
pop
pop
pop
cld
and
dec
into
fsubl
je
add
mov
imul
mov
jge
arpl
fldl2e
mov
xchg
xchg
dec
mov
and
test
and
and
mov
fildl
xchg
decb
add
cli
mov
xchg
push
js
addr16
std
sub
jmp
enter
fstpl
add
push
lret
push
jne
and
push
mov
jmp
mov
pop
pop
and
and
and
jbe
add
aad
mov
jne
test
arpl
je
mov
pop
jecxz
jno
lods
imul
insl
notl
in
imul
movsb
in
shlb
jne
or
mov
sub
xor
mov
lret
cld
jp
into
fs
insl
jne
mov
and
sbbl
and
fcoml
pop
insl
mov
aam
out
cmpb
push
xchg
insb
testb
jge
jns
cmc
inc
je
sub
mov
movsl
mov
and
je
or
add
xor
je
aas
fdivl
mov
pop
sub
dec
sub
jbe
mov
shl
aaa
jge
icebp
mov
sub
dec
leave
es
lret
ret
es
mov
cmp
sbbl
fcomps
xchg
cmp
std
inc
fisubs
aad
imul
cli
cs
or
cmc
xor
repz
sub
sbb
push
push
adc
int3
into
data16
je
imul
hlt
xchg
or
lods
adc
lahf
clc
scas
xchg
cmpsb
stc
shrb
pushf
adc
adc
jge
pusha
pop
popl
bound
or
sub
test
jno
push
cmp
xor
fs
xor
fcoml
lods
clc
adc
cmp
adc
xchg
dec
pop
lds
xchg
les
adc
out
aaa
xor
mov
hlt
xchg
jge
xchg
aam
movsl
int3
in
lods
or
inc
roll
sbb
je
sbb
or
in
jg
adc
out
inc
push
cld
and
lcall
dec
cwtl
jae
xchg
xchg
jo
lods
shll
and
fs
jns
xchg
dec
dec
dec
dec
je
mov
iret
aaa
and
pop
mov
fisttps
mov
movsb
sbb
mov
shrb
fmuls
pushf
or
bound
cmp
fidivs
inc
mov
pop
rclb
add
and
lcall
and
adc
push
imul
pushf
ret
and
xor
push
add
push
cmp
pop
stc
lods
icebp
dec
fmuls
or
repnz
into
cmp
mov
aad
inc
adc
mov
xchg
or
pusha
fdivr
imul
mov
cmp
lcall
push
dec
fisttps
add
lds
lods
ficomps
sub
les
test
mov
inc
inc
cmp
sarl
adc
ja
mov
push
jns
push
les
inc
loopne
test
mov
lea
imul
rorb
push
mull
jo
or
lahf
rep
shlb
inc
stos
cmp
or
ja
into
inc
dec
add
outsl
xchg
add
xor
sti
dec
notl
pusha
pop
bound
cmpsl
sarl
jge
push
addl
xchg
fistpll
insb
aad
scas
jl
xchg
or
mov
mov
out
fdivr
sbb
xor
sahf
clc
fsts
cmp
push
rclb
arpl
mov
rolb
movl
lods
inc
or
dec
or
pop
add
rorl
cmpsb
or
subb
subl
and
stos
inc
pop
idivb
mov
dec
call
out
mov
push
fcoml
adc
xor
and
push
jmp
push
push
push
mov
mov
mov
adc
rol
movsl
inc
adcl
dec
xchg
mov
adc
cmp
mov
add
push
or
int
aaa
add
or
dec
fidivrl
cltd
aam
shlb
bound
pop
pop
test
cld
ret
scas
lods
jo
or
aad
push
aam
jge
push
stos
outsl
pop
cmp
mov
mov
mov
dec
test
test
xor
cmp
adc
sub
adc
lea
adc
movsb
cmp
sub
sarb
or
mov
or
xchg
rcr
jo
cs
je
mov
mov
lds
xlat
push
test
clc
cwtl
push
mov
mov
sub
or
xchg
sbb
mov
mov
rcrl
imul
ret
out
popf
mov
mov
nop
js
cs
push
daa
inc
xchg
cwtl
subb
mov
aaa
push
fidivl
push
pop
mov
and
dec
je
adc
push
mov
dec
mov
and
mov
popf
pop
divl
mov
jo
adc
mov
mov
adc
jl
and
xchg
nop
outsl
xor
xchg
and
das
jbe
daa
jno
push
icebp
pop
mov
jl
icebp
sub
icebp
sbb
jb
inc
lret
mov
cmc
loopne
sbb
shlb
add
xlat
sub
repnz
dec
dec
or
out
jbe
test
push
das
and
test
imul
cmpsb
das
lods
ficoml
lock
push
cltd
lahf
pop
pop
rcrl
fiadds
adc
pushf
mov
test
jle
es
pop
xor
sahf
lcall
add
movsl
mov
and
or
adc
out
mov
add
test
add
push
in
mov
nop
ss
and
icebp
push
push
cmp
pushf
mov
and
repnz
fistpl
scas
push
fcomps
lea
repnz
xchg
aas
or
dec
mov
int3
iret
cmp
push
cmc
cltd
sti
jmp
and
adc
bound
jmp
mov
out
push
insl
sub
mov
nop
scas
adc
jae
fimull
jge
cmp
inc
jae
pop
in
in
dec
pusha
lds
iret
jge
pop
test
jle
movsl
fmuls
cmp
or
mov
mov
popa
jle
arpl
push
imul
add
xchg
mov
pusha
mov
add
addr16
subb
ds
jle
xor
pop
mov
adc
lret
outsb
daa
inc
shrb
xchg
pop
mov
xor
and
stos
insl
aas
shrb
pop
sub
adc
or
dec
icebp
sub
inc
imul
stos
add
sbb
scas
arpl
fidivrl
fs
xor
mov
sub
add
dec
mov
jnp
mov
out
add
cli
imul
and
mov
fsub
and
gs
jmp
and
enter
sbb
push
and
dec
mov
push
lahf
aaa
add
adc
outsl
sub
les
cli
and
pop
data16
dec
inc
lock
mov
cmp
adc
sub
adc
ds
mov
push
push
out
sbbb
js
test
in
in
cmp
shr
mov
add
arpl
xchg
mov
sbb
js
dec
or
push
mull
fcmovnu
xchg
sar
mov
push
orb
call
dec
leave
xorb
leave
clc
xor
js
dec
lea
xchg
cmc
scas
sbb
mov
jno
and
int
xor
frstor
shrl
stc
pop
jmp
cld
arpl
sbb
aas
negl
test
adc
and
jge
inc
sbb
int3
bound
test
pop
popf
push
jecxz
push
mov
sbb
inc
cmpsb
or
push
rorb
xor
or
ss
dec
dec
movsb
jecxz
iret
sub
push
adc
ret
lods
dec
sub
xchg
loop
and
movsl
movsb
ljmp
and
rcrb
and
jb
dec
ss
mov
inc
cmc
stos
repnz
inc
jg
add
test
cmovge
and
sbb
enter
pusha
or
sbbb
xor
jnp
je
pop
fisubrl
notb
int
fbstp
inc
xchg
fiaddl
out
pop
jmp
mov
adc
loope
xlat
push
mov
mov
sub
and
add
sahf
loop
jae
and
iret
mov
in
jmp
mov
dec
jo
and
cmp
push
sbb
jo
mov
mov
jecxz
int
pop
adc
mov
jno
add
dec
sub
iret
pop
loope
jae
sbb
mov
int
xor
cmp
jmp
xor
xchg
scas
jb
sub
lds
cmp
mov
jns
inc
loopne
andl
sub
dec
stos
jle
and
cmp
dec
fcos
test
jmp
pop
inc
mov
int
int3
add
cld
repz
movsl
rcll
push
dec
test
js
pop
addr16
mov
cli
test
repz
fcoms
inc
xor
dec
mov
xor
lret
es
pop
mov
sbb
pop
icebp
push
add
shl
shl
pop
pop
push
pop
lods
push
fistpll
push
pop
ds
xchg
jp
jne
test
hlt
aam
jge
ja
xchg
adc
inc
fnsave
je
xchg
stc
rcll
pop
xchg
jecxz
adc
jno
notl
popa
sti
clc
pop
addr16
int
inc
lods
push
mov
daa
mov
xchg
jge
mov
push
xchg
ss
sbb
or
pushf
negl
imul
jmp
popf
aam
mov
fisttpll
icebp
or
leave
jno
cmp
xchg
into
jnp
out
inc
push
inc
or
movsb
and
mov
lds
fstpt
int3
arpl
cmp
popa
mov
stos
shll
imul
cmp
sub
mov
or
mov
std
dec
fiadds
aad
pop
mov
jae
call
mov
inc
add
imul
pop
sbb
js
loop
jne
dec
pop
into
sbb
cmpsl
or
cltd
push
lea
imul
roll
jmp
pop
fdivrl
ljmp
pop
jmp
fisttps
inc
mov
inc
mull
lods
sub
fwait
mov
adc
lahf
data16
in
scas
arpl
sahf
imul
sub
xchg
cli
mov
inc
pop
or
sbb
inc
ljmp
mov
pop
mov
rolb
cmp
lahf
je
ds
insb
fcoml
fcom
cmp
add
jp
scas
mov
push
xchg
outsl
adcb
mov
push
mov
loop
mov
sbb
ret
xchg
in
mov
mov
xor
imul
push
pushf
mov
mov
pusha
das
mov
cwtl
xor
cmp
mov
mov
cmp
pop
js
daa
push
adc
je
pushf
pop
mov
in
out
mov
aad
and
aaa
or
test
sbb
push
divb
sbb
sub
outsb
call
fisubl
sahf
dec
jb
fwait
dec
mov
xchg
mov
dec
mov
mov
lcall
loopne
icebp
outsb
sar
pop
repnz
sahf
sbb
enter
xchg
movsl
inc
clc
enter
cmp
or
and
out
sub
pop
std
jno
out
shl
xchg
pusha
jle
dec
or
cmc
fdivrs
mov
roll
nop
repnz
push
lods
inc
jae
jmp
jae
cmp
mov
pop
lret
aad
xor
aas
int3
push
cmp
adc
jl
mov
sahf
leave
test
jns
mov
out
jge
sub
cmp
bound
clc
xchg
scas
fstpl
std
mov
aam
scas
and
int3
push
cwtl
fcoms
iret
mov
fisttps
cltd
aas
shrl
xchg
jmp
ds
inc
add
push
or
and
mov
mov
mov
in
jge
sub
ficomps
out
mov
lahf
sbb
sub
adc
and
lcall
aaa
pop
iret
fs
mov
mov
movsl
enter
push
cmp
cmpsb
mov
loope
addr16
popf
mov
cli
add
cld
cmc
and
add
jl
inc
cltd
divb
leave
pop
popf
pushl
sti
mov
test
sbb
add
loope
xchg
aam
test
pusha
mov
subl
jmp
xor
push
out
data16
scas
daa
cwtl
lods
xchg
pop
pusha
mov
push
jno
or
mov
pop
cmp
insb
inc
mov
push
icebp
jge
pop
push
popf
dec
pop
sti
jbe
sbb
and
dec
fldt
xchg
gs
cmc
fdivp
inc
addl
shrl
push
notb
sbb
sub
les
mov
jp
dec
adc
out
in
das
aas
fsubl
pop
ds
or
xchg
mov
inc
sti
aaa
push
sahf
mov
rorb
in
pushf
lcall
clc
mov
dec
pop
jb
aaa
scas
pop
mov
xor
pop
mull
or
stc
std
push
pop
inc
arpl
ljmp
leave
mov
addr16
xchg
addl
and
movsb
xchg
sub
ret
sti
outsb
dec
in
push
jne
cld
pushf
sub
xchg
icebp
mov
mov
aas
cmp
push
aas
loope
xchg
loop
inc
ret
sti
int
mov
mov
xor
repz
outsl
adc
add
push
inc
xor
stc
pop
es
push
lret
jb
or
cmc
jno
mov
in
add
cmp
jns
scas
jno
test
mov
pusha
stc
dec
xchg
xor
outsl
mov
sub
mov
cmc
pop
ficoml
jo
or
repz
mov
xor
and
mov
cmp
inc
std
mov
mov
es
inc
push
cmp
fiaddl
jns
push
inc
mov
scas
in
xor
xchg
dec
iret
in
dec
pushf
and
fwait
fdiv
je
popl
lret
mov
cmp
mov
movsl
push
xchg
pop
mov
sbb
push
lret
adc
sub
icebp
cs
dec
pusha
cmp
lods
adc
mov
lods
and
inc
lock
pop
xchg
xor
ljmp
fidivl
pop
xchg
push
gs
push
and
mov
idiv
add
imul
pop
and
cmp
inc
les
pop
cmp
sar
push
and
lods
hlt
mov
add
adc
mov
lahf
test
push
sbb
push
xor
mov
and
pop
cwtl
jg
cmpsb
sub
adc
add
shll
gs
aam
cmc
mov
jg
jle
aam
mov
sbb
pop
pop
mov
leave
sti
enter
or
mov
hlt
jecxz
sti
shlb
scas
pop
cmpb
adc
xor
mov
adcl
mov
or
jns
xor
jg
inc
leave
fs
mov
lock
pop
out
out
jno
xor
push
popf
xchg
adc
in
in
or
push
aaa
stos
mov
shll
mov
mov
jb
xchg
or
jae
pusha
std
fnstsw
inc
adc
mov
mov
sahf
mov
push
lret
add
add
pop
sub
jo
sub
popa
xor
and
push
push
je
es
mov
dec
pop
xchg
mov
pop
cmp
insl
or
stos
movsb
pop
xor
mov
insl
stc
cmpb
sub
mov
or
test
push
adc
xor
mov
addr16
cmp
sbb
mov
movsl
stos
xor
js
mov
mov
xor
fld
fsubr
sbb
sbb
jno
add
xchg
sahf
adc
flds
cmp
roll
ret
cmp
xor
mov
ret
mov
jmp
xchg
cmpsb
inc
and
pop
je
push
aas
push
mov
xchg
and
fldl
insl
in
mov
pop
scas
loopne,pt
aas
adc
mov
stos
int3
and
push
cmpsl
cmp
push
aad
pop
mov
sub
shll
xor
dec
in
jno
mov
adc
xlat
out
filds
ss
ja
leave
je
movsb
adc
popl
out
mov
stos
loope
inc
sahf
sub
mov
mov
push
aad
sbb
sub
xchg
adc
daa
jo
mov
pandn
dec
call
pop
jl
push
fwait
mov
mov
out
into
dec
push
add
mov
xor
mov
cwtl
sbb
pop
out
shll
fnstcw
fs
cs
cs
and
movsl
mov
mov
aad
cmp
jno
and
lret
out
and
and
out
push
mov
push
addr16
outsl
mov
fsubp
dec
cmp
gs
adc
addr16
pop
push
test
fdiv
aam
dec
pop
fs
test
adc
aad
pop
es
cli
int
outsl
loopne
pop
and
jno
divl
mov
adc
inc
into
add
scas
stos
cld
sbbl
sub
xor
pop
jnp
xor
jge
xchg
loope
push
shr
cli
add
scas
cmpsl
adc
int
mov
dec
jns
out
out
sahf
mov
push
stos
js
mov
jo
mov
push
mov
pop
cmp
stc
icebp
sbb
pop
lea
movsl
jo
in
sbb
dec
dec
ja
ljmp
cld
dec
or
adc
xchg
xchg
pop
repz
js
loope
xchg
cmp
sub
jbe
cltd
aaa
add
subl
and
popf
or
lods
or
push
ds
iret
aas
jp
or
and
adc
int3
mov
cmp
rorl
pop
dec
cs
addr16
mov
fiaddl
lret
sub
in
jp
fs
mov
loop
insl
sub
inc
popf
push
xchg
mov
inc
mov
roll
lea
test
push
mov
jmp
dec
adc
inc
aas
cmpsl
inc
mov
inc
inc
aad
fcmovu
aas
insb
add
inc
pop
repnz
add
movsb
jno
stc
cli
mov
inc
icebp
in
mov
mov
and
add
jne
adc
or
cs
and
cmp
xor
aas
sub
mov
icebp
jmp
jp
fcoms
jmp
mov
fisttpl
mov
adc
xor
add
sub
pop
push
and
popf
test
xor
inc
jge
lds
pushf
mov
sbb
jl
xor
and
jae
jne
insb
sub
mov
insl
fyl2x
mov
lcall
inc
in
fwait
add
popf
insb
mov
addr16
push
xlat
cmc
dec
mov
or
or
jp
arpl
ljmp
call
mov
or
popf
loope
lock
cs
out
sarl
adc
mov
dec
sbb
in
and
xchg
jecxz
pop
push
pusha
jg
pop
outsb
inc
add
sahf
dec
iret
cmpsl
in
adc
lods
xchg
aad
icebp
shlb
insb
addr16
xchg
pop
movups
cmpb
inc
fsub
nop
and
jo
mov
lret
mov
or
pop
cmp
inc
and
mov
sub
dec
pop
or
test
aad
push
push
es
fs
cmp
push
bound
ja
pushf
icebp
sti
mov
stc
ss
xchg
adc
fldcw
iret
sub
pop
push
jne
dec
jl
imul
int3
cmp
shll
fiaddl
push
push
jbe
cmpsl
mov
insl
jecxz
int
dec
or
repnz
jns
and
mov
in
cmc
sahf
call
cmp
mov
sub
mov
adc
rcrb
in
lahf
push
outsl
popa
mov
out
imul
cmpsl
stc
imul
imul
orb
or
inc
pusha
pop
jo
xchg
cmpsb
mov
jp
fstpl
add
sub
jne
or
shlb
divl
inc
call
call
in
popf
out
adc
pop
inc
mov
and
inc
cmp
fistpl
jl
add
mov
xor
ss
popf
and
xchg
dec
mov
arpl
test
movb
fcompl
dec
and
mov
cmp
sbb
jbe
or
jb
ret
sbb
movsl
lock
aaa
jge
or
xchg
aaa
sbb
pop
add
jge
std
cwtl
loopne
gs
and
idivb
fwait
sbb
movsb
gs
xor
or
push
xor
leave
pop
sar
sbb
xlat
mov
ficompl
stos
pop
cltd
or
je
xchg
mov
cmp
dec
mov
mov
mov
sub
sub
jnp
lods
imul
mov
or
out
fsts
movsb
aad
and
scas
inc
xor
jg
neg
mov
jbe
cli
inc
jmp
jmp
fidivrl
xor
mov
out
fs
pop
repz
push
test
repz
sbb
mov
fistpl
repnz
add
jno
jg
xchg
dec
mov
inc
clc
testb
inc
xchg
scas
adc
imul
adc
out
mov
repz
pop
lock
arpl
popa
add
aam
inc
adc
and
adc
repz
sbb
aaa
adc
pop
imul
gs
std
loop
inc
fiadds
or
push
sbb
add
sub
xchg
nop
in
iret
and
das
cltd
data16
shll
scas
mov
aam
nop
loopne
jmp
mov
movsb
mov
out
into
decl
or
add
jbe
mov
or
arpl
and
sti
stos
push
test
cmp
cli
loope
roll
in
xchg
mov
add
xchg
fwait
in
dec
jge
adc
ljmp
test
faddl
or
add
xor
in
mov
adc
jecxz
jecxz
xor
cmp
scas
orl
adc
out
jno
or
or
testb
sub
jp
inc
xchg
push
dec
rorb
sub
inc
dec
xchg
icebp
cmp
cmpsb
dec
mov
stos
push
xor
xorb
leave
xchg
push
fcoms
pusha
test
mov
cmp
loope
jle
mov
ret
orl
lods
popa
jecxz
aad
push
movsb
cmc
je
sbb
lock
push
xchg
push
out
xchg
mov
fmuls
mov
cltd
and
repz
rorb
scas
mov
ss
outsl
sbb
data16
mov
bound
loope
jl
sub
pop
sub
or
push
loop
fidivrs
ret
mov
jno
mov
push
stos
repz
push
jae
rcl
pop
sti
test
stc
dec
dec
mov
add
fs
add
mov
mov
pop
and
test
sbb
pop
nop
cmpsl
ds
mov
cmp
cmpsb
push
jmp
dec
insl
stos
loope
loopne
lea
or
aaa
add
sub
dec
nop
fcoms
in
outsl
mov
aam
scas
cli
call
xor
cltd
push
notb
jnp
mov
cmpsl
aad
or
or
cmp
or
pop
cmpsb
test
fwait
cmpsb
movsl
shlb
inc
cltd
aad
popa
lods
mov
in
mov
lea
cmp
mov
jmp
movsl
incb
add
andl
bound
rcr
shrb
nop
hlt
fimull
sbb
xchg
clc
mov
out
stos
stos
lds
ret
xor
xor
sbb
loope
pop
jmp
test
popa
in
push
nop
jne
push
dec
lret
shlb
popf
pop
xor
inc
sbb
outsl
add
icebp
testb
mov
push
in
add
pop
icebp
fs
cltd
cmp
cs
gs
call
int
pop
divl
jns
xchg
call
push
fwait
jle
dec
dec
jbe
in
scas
cmp
dec
and
addr16
pop
inc
pop
ss
pop
fs
popf
add
pop
or
sbb
sub
arpl
jmp
and
out
ret
mov
mov
jmp
adc
stos
xor
sbb
adc
in
rorl
mov
lret
rcr
dec
mov
mov
test
cmp
sub
mov
mov
out
mov
fwait
inc
enter
mov
lds
jmp
and
stc
pop
lods
sub
fstpl
repz
cltd
pop
push
sub
pop
mov
cmc
xor
adc
sbb
insb
mov
add
lahf
lock
addl
jmp
xchg
pop
stos
movsl
mov
cmp
mov
mov
xchg
ret
test
push
push
enter
pop
pushf
scas
movsb
inc
sbb
pop
dec
fiaddl
mov
xchg
pop
bnd
scas
cs
push
insb
shlb
arpl
cs
pop
movsl
cmp
push
jo
xchg
jae
adc
adc
lock
insb
cmp
pop
jmp
das
sub
xor
xchg
into
jp
dec
nop
xchg
cmpsb
mov
cmp
push
adc
fimull
aad
testl
dec
pop
jle
xchg
leave
or
pop
adc
pop
push
cwtl
jp
jno
inc
addr16
jmp
hlt
xor
js
test
shl
test
mov
arpl
sub
scas
xor
in
andb
fwait
mov
jne
mov
leave
add
pop
out
sub
sbb
inc
pop
inc
jg
cmp
mov
or
icebp
outsl
jmp
or
dec
cwtl
call
or
mov
mov
and
push
pop
ljmp
or
sbb
shll
pushw
into
xor
add
inc
fstpt
cld
es
mov
jnp
scas
std
xchg
mov
xlat
jmp
lock
fwait
mov
leave
push
pop
pop
fnsave
out
pushf
popa
loope
adc
xor
and
int3
push
pop
insb
cmp
cmp
out
movb
pusha
jge
cmp
push
adc
test
clc
pusha
mov
lahf
cmpsb
movsl
pop
jmp
xlat
mov
and
scas
mov
loop
push
movsl
scas
inc
vcvtpd2psx
das
xchg
xor
add
fcoml
arpl
mov
push
mov
dec
add
xchg
imul
loope
fsts
testb
das
lds
add
loope
jne
mov
xchg
add
sub
mov
dec
rorb
add
mov
je
pop
mov
and
mov
shlb
mov
sahf
jg
dec
dec
insl
adc
into
test
clc
push
imul
adc
sbb
or
ret
add
data16
mov
pusha
adc
std
nop
jp
icebp
add
jbe
dec
sbb
hlt
cltd
js
fwait
lock
jno
pop
mov
bound
lds
aad
jo
sub
es
inc
xchg
xchg
push
rolb
dec
stos
pop
jl
fidivl
adc
sub
ds
mov
add
icebp
je
xchg
cmp
test
sbb
or
scas
testl
cmc
sahf
movsbl
pop
mov
cld
imul
inc
pop
xor
test
in
xor
scas
mov
sub
mov
bound
arpl
call
fcmovnbe
and
xchg
xchg
sbb
mov
andb
pushf
sub
fdivs
imul
lahf
xchg
mov
call
pop
xorb
fisttpll
pop
or
mov
sahf
ret
and
mov
dec
ljmp
sbb
inc
loope
sub
pusha
inc
fadds
rorb
sub
xor
add
push
les
push
data16
pop
outsl
enter
inc
inc
xlat
imulb
xchg
popf
fsubs
repz
test
inc
daa
shll
dec
shl
jmp
ror
push
xlat
ret
xor
jno
rep
push
les
ljmp
aad
xchg
add
jae
jo
dec
mov
mov
je
int
add
mov
mov
mov
sbb
add
lcall
adc
or
loope
data16
fistps
stc
testl
in
mov
mov
xor
movsb
ljmp
mov
xchg
add
into
loop
mov
sub
and
test
cmp
push
scas
lret
push
add
xor
das
stos
or
add
cmc
pop
scas
dec
popl
out
cmp
dec
sub
sbb
scas
lea
or
fcmovbe
jns
aad
mov
insl
test
push
dec
leave
nop
pop
pushf
sub
jle
sub
cmp
fistl
and
pop
add
fisubs
push
jl
dec
inc
jo
push
cmc
popa
mov
xchg
jne
out
aam
inc
pop
loope
sbb
inc
sub
jl
inc
mov
leave
or
pop
inc
mov
fcomps
lret
push
dec
fs
repnz
xor
add
neg
sbb
ret
sbb
daa
das
insb
int
out
das
mov
sbb
push
xor
out
adc
mov
loope
std
mov
jge
int3
push
popf
xchg
lret
push
testb
cltd
pmovmskb
scas
sbb
mov
repnz
mov
xchg
lea
aad
mov
jle
pop
mov
fistpll
add
mov
shrb
sbb
inc
fistpl
push
scas
in
push
iret
push
leave
push
xor
ret
imul
mov
scas
fistps
pop
stc
and
iret
mov
pop
sub
out
stos
negb
add
testl
cmp
dec
xor
cmp
or
add
loope
mov
dec
roll
xchg
clc
jecxz
cmp
push
call
xchg
push
jecxz
lret
shll
sub
add
or
adc
add
add
push
or
mov
fsts
or
push
int3
aad
inc
cmc
pop
js
adc
frstor
pushf
or
inc
jecxz
sbb
cmp
out
jnp
in
insl
mov
mov
push
dec
jge
pop
dec
sub
sub
sbb
idivb
stos
pop
scas
mov
testb
xlat
push
push
or
lock
sahf
mov
adc
jne
sbb
dec
sbb
sbb
pop
xor
inc
dec
aam
or
lret
into
fs
pop
sbb
push
jp
jg
add
outsl
mov
ss
lds
int3
or
scas
adc
jns
dec
pop
fs
mov
push
sti
pop
lret
xchg
xor
inc
xabort
push
xchg
int
lea
dec
imul
inc
jo
sub
idivb
push
int3
mov
mov
push
mov
fnsetpm(287
into
imulb
std
sti
repz
repz
sar
test
sbb
jo
sarb
add
lea
mov
jmp
sti
xor
pop
dec
push
lret
je
push
sahf
mov
pop
cmp
jle
test
cmpb
not
repnz
xchg
cmpsb
sub
xor
outsb
fidivl
in
testb
xor
jo
add
hlt
test
inc
jo
push
dec
dec
dec
lahf
lods
xchg
sbb
cmp
pop
cltd
fmull
fsub
in
inc
call
out
arpl
and
adc
adc
gs
lea
mov
mov
jl
mov
jecxz
mov
dec
lcall
xor
push
dec
insb
cwtl
mov
insb
orl
inc
out
xor
push
mov
fs
sbb
daa
daa
out
sbb
pop
shll
and
adc
push
pop
mov
iret
mov
push
stos
scas
push
cmpb
push
pop
push
enter
loope
shlb
dec
mov
test
adc
pop
xchg
in
fwait
jecxz
das
sbb
and
sbb
cwtl
icebp
mov
les
xchg
xchg
xchg
popa
sahf
push
inc
cmp
fidivrs
xor
call
push
lock
sbb
sbbl
les
testb
jo
dec
cmp
icebp
in
movsl
outsl
arpl
jp
jo
push
cli
cmpsl
sub
loope
adc
daa
pop
movsb
cmp
fnstenv
mov
rcll
aaa
lahf
lods
pop
ret
testl
sbb
rcll
das
aam
inc
jp
sahf
ljmp
inc
sub
loopne
jmp
cmp
jp
roll
mov
icebp
mov
mov
popa
jmp
stos
outsb
cmc
out
jmp
sbb
ds
stos
mov
cmp
pop
js
call
outsb
jo,pt
inc
insb
in
mov
pusha
mov
je
and
xlat
xchg
and
mov
mov
addr16
outsl
gs
jno
sbb
or
push
xchg
lea
jnp
sub
adc
out
lea
adc
add
sub
sti
enter
dec
icebp
sub
scas
and
mov
and
xchg
mov
push
pop
lods
sbbb
or
adc
cs
nop
cmpsl
dec
and
mov
lcall
movsb
or
or
ds
jne
xlat
adc
imul
and
outsb
int
enter
cld
mov
cld
pop
xor
das
in
mov
sub
xchg
pop
mov
sbb
popf
iret
inc
mov
lea
mov
or
fdivs
repnz
and
add
dec
pushf
push
fisttpl
cwtl
imul
pushf
adc
mov
lahf
nop
xlat
add
mov
pop
or
adc
popf
data16
mov
lods
inc
pop
loop
inc
loopne
adc
xchg
lcall
aas
mov
icebp
push
divb
jmp
push
out
les
es
popf
mov
mov
jg
insb
or
xor
and
outsb
aaa
xchg
pushf
fcoms
outsb
or
pop
leave
loope
sub
aas
movsl
jo
ljmp
andb
dec
sub
push
jmp
sub
and
rcrl
sbb
sub
fimuls
lcall
pop
movsb
in
mov
bound
fisubrs
sbb
or
icebp
lds
enter
push
dec
jp
bound
cmc
adc
lret
shlb
ja
mov
in
ss
jl
lret
sbb
xchg
fsubl
push
aad
xor
dec
movsl
aam
cmpsb
or
and
jbe
jae
lret
ret
mov
leave
loop
jne
idiv
out
ljmp
and
test
jl
add
jge
popa
xchg
jno
movsb
addb
mov
jge
xchg
into
push
mov
add
fnstenv
and
outsl
repnz
pop
mov
cmpsl
and
loopne
pop
mov
js
stc
lock
pop
mov
xor
adc
lods
xor
out
push
jo
xor
hlt
jmp
and
inc
push
scas
add
cmpsb
sub
cmp
fneni(8087
mov
adc
or
outsb
das
decb
push
dec
outsl
xor
gs
mov
fstpl
mov
fcmovb
mov
jns
leave
jle
sbb
push
es
stos
inc
pop
outsb
pop
je
repz
hlt
jle
dec
popf
into
dec
xchg
sti
ret
adc
ret
or
outsb
add
das
out
jnp
ret
sbb
mov
js
cs
std
xor
mov
cwtl
mov
dec
add
adcb
in
mov
aam
and
sbb
int
push
mov
in
dec
pop
cmp
xchg
into
jbe
inc
pop
xchg
das
hlt
push
jnp
jns
jle
and
cltd
mov
dec
mov
push
push
mov
jne
cmp
xor
xchg
push
pop
shlb
xchg
arpl
outsl
push
aam
mov
data16
test
and
lds
sarl
adc
pop
adc
add
into
incl
add
jg
push
lcall
jno
imul
shrl
dec
icebp
insb
mov
jo
push
imul
nop
add
and
sbbb
sub
fwait
rolb
cmp
and
fisubrl
mov
adc
loop
fists
hlt
ja
hlt
test
dec
sub
xchg
push
and
jbe
enter
iret
mov
adc
mov
stos
test
mov
jns
xor
ss
lock
jecxz
cltd
dec
aaa
add
xchg
aaa
cmp
inc
scas
in
adc
mov
test
sbb
movsl
arpl
jg
xchg
repnz
rol
in
push
sbb
sub
iret
enter
inc
push
arpl
into
lds
out
sub
sbb
aam
je
sub
sbbb
mov
xchg
mov
cld
sbbl
das
pop
lret
xlat
add
sub
pop
outsl
add
xchg
xchg
mov
hlt
adc
jno
mov
push
loope
lea
sub
lock
inc
cmp
shll
fmull
cmc
xchg
push
jecxz
push
cmp
push
dec
push
and
jecxz
in
popa
sbb
mov
mov
fwait
adc
fwait
pusha
sbbl
mov
shl
xchg
inc
mov
xchg
iret
inc
pop
xchg
inc
stos
enter
shll
roll
mov
mov
pushf
out
push
das
pop
loopne
xor
jge
iret
int
dec
mov
cmpsl
imul
push
or
cmc
sub
test
mov
pop
ss
add
pop
div
push
jecxz
jns
test
jo
xchg
loope
or
cli
mov
mov
xor
push
cmp
jmp
inc
jp
push
dec
xlat
add
and
out
cmp
sbb
cmp
out
jno
xchg
or
cmp
popf
jp
and
cli
dec
outsl
in
pusha
jecxz
mov
addr16
push
jae
or
push
cmc
push
jecxz
loope
lods
scas
push
loop
jns
popf
fwait
or
mov
cld
xlat
or
setnp
scas
sbb
rcrl
dec
sub
pop
sub
cli
js
lea
jne
ss
mov
push
adc
add
jp
push
push
ljmp
stos
pop
inc
in
rorb
and
sub
shld
and
or
mov
xchg
jp
push
xchg
inc
int3
lea
leave
cld
mov
iret
fwait
fs
hlt
pop
ds
add
sub
in
mov
out
dec
cmp
out
jmp
xor
adc
shrb
loopne
scas
push
in
jg
scas
push
cmp
pop
scas
adc
or
aam
add
nop
in
lods
push
mov
cs
or
cmp
aad
js
xchg
lcall
ds
add
lock
lcall
cmp
xor
addr16
cmpl
fcmovb
int
pop
cmp
ljmp
frstor
mov
xchg
inc
cs
sub
mov
xlat
jno
jmp
mov
mov
cmpsl
xor
cmp
xchg
jns
cmpb
cli
repz
dec
out
les
rcrb
fs
les
sub
inc
jbe
lods
sub
mov
adc
enter
sub
sarb
fwait
jno
fxch
add
mov
prefetcht2
mov
lahf
cmp
jge
shlb
jb
mov
pusha
add
jge
sub
pop
push
lea
mov
insl
sub
imul
xchg
push
sbb
mov
or
fcomps
lahf
pusha
rolb
leave
pusha
sub
call
aas
xor
insb
jns
xor
stc
and
or
xor
xor
and
filds
enter
ds
lret
pop
mov
mov
daa
mov
xchg
xor
fbld
rol
adc
subb
sub
fcompl
xor
out
into
orl
fs
inc
lret
outsb
or
sbbb
cmp
xor
int3
jne
cli
fwait
stos
or
lock
push
adc
xchg
pop
cmp
dec
mov
mov
mov
loop
lret
out
add
leave
mov
xor
das
adc
sahf
outsl
adc
aad
addr16
or
leave
je
mov
and
int
jno
call
in
xchg
frstor
inc
or
jnp
bound
pusha
clc
in
cs
xor
ret
stc
aaa
mov
or
jo
push
lock
cmpb
adc
cmpsl
xchg
insb
dec
aam
cmpl
imul
shl
inc
ss
cmp
sbb
cmp
pop
mov
iret
fsubrp
mov
ds
dec
rcrl
hlt
mov
cmc
lret
cmp
push
sub
ljmp
jo
aas
cmp
mov
jg
and
xchg
lret
push
movsb
aam
jns
pop
xor
adc
add
outsl
pop
mov
movsl
and
xchg
pop
rorb
jno
jmp
rcll
lret
mov
js
lahf
ljmp
push
lret
xlat
push
sbb
iret
ss
int3
lret
mov
lahf
inc
sub
inc
mov
cwtl
push
push
outsl
mov
je
cmpl
mov
inc
fiadds
addl
mov
jns
add
rorl
sbb
test
daa
test
jmp
jb
testb
adc
mov
push
sub
addl
gs
push
imul
movsb
andl
insl
cltd
test
notl
xchg
lret
sub
jmp
mov
mov
jb
lock
out
andl
mov
jp
into
out
and
lcall
out
cli
cmp
lahf
and
mov
xchg
fimull
addb
jecxz
in
xchg
and
fmulp
jnp
fidivrl
jl
push
out
mov
decb
sub
push
jle
inc
fldenv
paddq
mov
xchg
adc
clc
push
scas
loope
inc
cmpsl
mov
and
stc
xor
insl
mov
sti
outsl
outsl
dec
add
sahf
and
lcall
ljmp
pop
sahf
xor
mov
scas
rol
and
lea
popf
pop
fcoms
push
addb
and
in
rolb
mov
sub
mov
mov
mov
in
xor
enter
sub
xor
fistpl
jae
ljmp
xor
pop
mov
or
xchg
arpl
fnsave
adc
lahf
pop
dec
jg
lret
mov
enter
sub
faddl
mov
addb
mov
scas
add
arpl
pop
popf
das
sbb
sub
dec
xchg
xchg
adc
cs
leave
push
xor
mov
insb
out
mov
adcl
xor
das
pop
imul
jecxz
stc
repz
dec
mov
add
push
subb
dec
clc
mov
sbb
jl
cmc
add
fwait
dec
mov
orb
xchg
push
mov
test
jp
mov
iret
mov
les
mov
lds
dec
xchg
xor
lea
sub
mov
pusha
jle
mul
cmpsb
test
cmc
pop
dec
pushl
cmp
xchg
and
popa
iret
stos
cmpsb
jns
inc
ret
cwtl
das
xor
into
jmp
in
inc
roll
test
mov
movsl
inc
jae
in
sub
lods
adc
shll
mov
adc
arpl
sahf
in
jecxz
pop
fwait
sbb
popl
pop
std
pop
ds
adc
testl
clc
push
clc
sbb
xchg
jle
sub
mov
or
dec
xor
and
icebp
xchg
push
pop
pop
inc
idivl
sbb
in
pop
fdivrs
nop
add
sarl
sbb
test
xchg
cmc
xchg
movsb
mov
jmp
inc
or
lret
adc
adc
fmull
xor
out
adc
cmp
pop
fsubrs
shr
rcrl
inc
xor
pop
mov
fs
mov
notb
cmp
mov
pop
mov
int3
stos
shrl
pop
pop
xchg
sahf
push
scas
leave
xorb
jmp
adc
jnp
adc
mov
xchg
insb
jae
or
loopne
aaa
mov
jno
outsb
cs
cld
pop
outsb
std
cwtl
loope
ret
notb
flds
push
cmpsl
in
or
push
jp
mov
divb
out
fs
pushf
mov
jae
adc
pop
hlt
sti
or
add
pop
pop
movsb
pop
add
lods
test
addb
repz
cwtl
fcomps
cmp
adc
stos
fisttpll
cmp
lret
loop
inc
aad
mov
push
push
dec
push
mov
fs
hlt
bound
or
repnz
or
pop
test
push
in
aaa
or
inc
xchg
lea
in
dec
jb
nop
sbb
mov
adc
sbbb
jns
jecxz
sub
or
clc
mov
mov
fs
ss
shrl
in
jecxz
push
repz
stos
in
sub
sti
push
jmp
into
push
movsb
xchg
loopne
jle
xorb
inc
cmpl
sti
cmp
add
fwait
icebp
pop
loope
push
lods
jns
vmread
jg
pushf
add
pop
lahf
std
xor
imul
hlt
pop
mov
out
call
int3
out
or
sub
cmp
or
cli
es
ret
imul
sbb
xchg
lret
xchg
enter
sub
aam
pop
mov
pop
jnp
dec
lret
movsl
mov
push
scas
jbe
hlt
aas
sbb
and
fldl
insl
repz
add
popf
dec
bsf
sub
pop
cmpsb
ss
mov
mov
enter
jg
jb
jmp
jecxz
push
and
imul
pop
fldcw
inc
in
pop
lcall
push
sub
out
cmc
jecxz
sbbl
jnp
xor
loopne
hlt
popf
pop
aas
popf
stos
jg
or
test
mov
int3
push
push
mov
out
mov
add
inc
or
popa
push
push
sub
mov
cwtl
mov
das
jecxz
shlb
daa
shll
pop
fisubs
insb
push
stos
fwait
mov
repnz
clc
mov
loopne
inc
and
sub
test
bound
inc
pop
je
pop
inc
xor
cmp
push
mov
js
popa
dec
xor
sahf
and
dec
cmp
movsl
sahf
loope
xlat
push
add
fstps
xor
in
stos
repz
mov
loop
xchg
push
jecxz
nop
ret
sub
iret
sar
lcall
int3
lret
mov
mov
lret
hlt
arpl
sbbb
sahf
jecxz
stos
and
icebp
sbb
or
push
or
out
mov
repnz
pushf
mov
dec
add
adc
or
in
push
jno
fs
daa
xchg
sbb
icebp
adc
sbb
mov
mov
das
or
jne
inc
ljmp
jl
jb
popa
sub
xor
jecxz
xor
rcrb
ljmp
loope
ficoml
mov
inc
rcll
push
sbb
dec
mov
lea
mov
pop
jo
fadd
or
imul
xor
mov
mov
cwtl
stos
pop
jmp
js
mov
movsb
in
imul
popf
or
mov
rorb
pop
adc
pop
adc
mov
shrl
cs
sbb
loop
mov
mov
mov
sub
pop
xchg
addr16
add
int3
jb
xor
es
jge
mov
imul
scas
arpl
pop
mov
frstor
ret
jg
loopne
sbb
mov
cli
movsl
nop
movsb
jno
das
push
adcl
int
xor
xor
or
and
loope
or
mov
aas
movsb
pop
scas
call
jbe
fwait
pop
and
in
xchg
adc
cs
inc
ss
test
pop
stc
inc
cmp
mov
mov
fxch
in
fisttpl
push
sub
jmp
out
dec
mov
mov
ja
sub
lahf
fcmovbe
sbb
addb
in
adc
arpl
xchg
repnz
cmpsb
aas
push
sbb
mov
fistpll
dec
or
lock
int3
dec
pop
cmpsl
dec
dec
and
xchg
aas
notl
fs
aam
xchg
and
stos
fldcw
lahf
mov
xor
xor
sub
xchg
xor
adc
fstps
lods
fistl
dec
popl
bound
push
mov
scas
jae
mov
js
out
lret
inc
mov
mov
stc
frstor
loope
in
xchg
cmpb
jl
stc
stos
sub
pop
and
mov
xchg
jmp
adc
mov
mov
jp
xor
cld
jno
repz
mov
xchg
fidivrl
or
sub
ss
lahf
mov
cmp
xchg
xlat
adc
test
adc
push
insl
jne
test
add
cs
cwtl
mov
sub
inc
test
dec
jne
jno
adc
test
in
shl
pop
lods
movsl
jp
or
jmp
sbb
jge
push
lret
cmp
test
pop
ret
pop
mov
inc
jmp
out
scas
pop
int3
arpl
xor
xchg
mov
cltd
push
out
idivl
bound
loopne
jne
popf
roll
cmp
aad
add
outsl
mov
popf
mov
or
lret
call
test
ret
bound
out
rcll
imul
inc
lods
scas
cmp
pop
cwtl
ja
and
push
mov
addb
cs
rcrb
mov
mov
loopne
loopne
imul
das
or
ds
inc
pop
ds
adc
mov
jmp
addb
pop
jle
aas
cltd
dec
and
pusha
popf
movb
sbb
outsl
ds
mov
cmc
xchg
leave
imul
and
add
jp
repnz
je
jl
xor
and
push
cli
pop
pop
ds
das
xlat
cmp
cmpsl
mov
sub
mov
push
outsb
sarb
xchg
daa
movsl
adc
sbb
divl
je
out
dec
jno
ljmp
sarb
mov
iret
dec
stos
mov
scas
or
bound
cli
xchg
jnp
sbb
xchg
ficompl
pop
std
fldl
lahf
mov
stos
aam
idivb
loopne
xchg
add
cmp
jb
or
and
rorl
push
jo
sub
xchg
inc
aam
aas
dec
sub
xchg
cmpb
dec
mov
adc
sti
icebp
std
cmp
outsb
or
inc
sar
dec
add
xchg
xor
into
stos
sar
adc
add
nop
test
std
inc
add
fdivrs
enter
or
add
cmpsb
sbbb
shl
dec
xchg
inc
jno
xchg
rcll
mov
bt
sti
mov
scas
lret
add
bt
lock
loope
pop
push
jae
push
je
xchg
xchg
pop
jb
cs
fs
mov
jg
push
ja
cs
andl
mov
test
xor
nop
xor
ficompl
outsl
out
mov
lcall
and
push
jg
sub
es
mov
mov
xlat
jnp
xchg
sbb
data16
sbb
std
sbb
rolb
jl
add
jle
in
out
sbb
mov
mov
out
push
sub
xchg
pop
repz
add
test
xor
lret
xchg
sarl
stc
ffreep
cmp
push
fxch
xor
movsl
cmp
or
shrl
mov
pop
rorb
sub
xchg
jl
fiadds
xchg
mov
hlt
fs
inc
push
xchg
std
dec
inc
mov
xor
pusha
and
outsl
push
test
mov
jb
cltd
sbb
xorl
mov
lahf
xchg
sbb
ja
push
cli
int3
sbb
aam
inc
faddp
ds
ljmp
pop
bound
cld
movsl
mov
cmp
into
xor
adc
mov
movsb
push
arpl
repz
clc
popf
xor
lahf
sahf
stc
movsl
jae
movsl
mov
out
mov
mov
push
lock
inc
flds
test
cli
mov
addr16
mov
repnz
sub
jle
imul
lods
push
out
cmp
mov
pop
push
sbb
xor
in
sub
nop
ja
ds
negb
sahf
js
aad
mov
shlb
addl
call
es
jecxz
pop
mov
imul
std
gs
into
jns
mov
call
std
xchg
xchg
ss
in
adc
pop
das
divb
fisubrs
xchg
movsb
cmp
jbe
and
fdivl
repnz
fwait
push
js
lahf
adc
imul
fidivl
mov
xor
push
jg
stos
push
adc
push
das
or
mov
sahf
and
fbstp
in
pusha
push
mov
push
aad
retw
fadds
cmp
lods
xchg
mov
jnp
push
xchg
cmp
shl
xor
les
ret
and
jge
fucompp
pop
js
imul
mov
and
lods
push
sub
pushf
adc
enter
xchg
xchg
or
push
and
rorb
push
xchg
lea
jg
inc
sbb
fadds
add
mov
fidivrl
bound
gs
xlat
mov
push
insl
dec
inc
dec
sbb
or
scas
outsb
push
inc
out
cli
jnp
push
sbb
inc
adc
adc
mov
push
sbb
jmp
idivb
clc
fdivrs
daa
fistps
inc
imul
negb
loopne
mov
mov
inc
push
push
add
orb
cltd
lret
icebp
adc
fcmovnb
add
jbe
jmp
jg
outsb
or
sti
aas
cmpsl
jle
xor
les
mov
repz
push
sti
mov
repz
add
subl
jmp
lds
loopne
fs
push
scas
jne
movsl
jl
sbb
jle
push
shll
dec
pop
or
add
pop
lret
inc
mov
or
mov
cmpsl
mov
pop
cmp
xor
xor
xor
shll
xchg
xor
popf
xchg
jno
mov
sub
mov
cltd
or
in
scas
lahf
mov
push
pusha
rorl
arpl
jo
adc
dec
inc
pop
or
add
add
test
dec
mov
jns
xchg
add
push
je
mov
push
lahf
sbb
xorl
or
insb
scas
fxam
cld
adc
rcrl
xor
stos
push
cltd
pop
gs
and
jl
fbld
adc
xorb
and
jne
adcl
mov
push
push
xchg
lret
fsubs
xchg
leave
cmp
cmpl
loope
sbb
and
inc
ss
push
mov
call
add
xor
sbb
out
test
xlat
jnp
xor
dec
dec
xchg
xchg
lcall
fcomps
fstp
mov
push
enter
sarl
out
xlat
or
cwtl
jle
mov
imul
or
push
cmp
cmp
sarb
inc
cmpsl
sbb
adc
icebp
mov
jmp
daa
aam
jmp
jb
in
addr16
push
adc
cld
pop
iret
int
mov
pop
and
xor
vpaddusb
rorl
cli
mov
addr16
pop
popl
dec
xchg
and
outsb
popf
jnp
dec
jg
mov
xorl
mov
repz
push
pusha
add
out
xchg
or
push
dec
dec
outsb
stos
or
jmp
inc
divl
push
inc
mov
mov
das
and
xchg
les
fldl
je
jbe
xchg
and
cltd
jg
ss
sub
scas
dec
cmp
jmp
cmp
out
sbb
icebp
lahf
das
and
mov
xchg
sub
aad
fidivs
xor
mov
scas
movsb
push
hlt
mov
mov
inc
cmp
fwait
mov
insb
xchg
lea
mov
xor
mov
insb
arpl
imul
mov
cmp
ss
dec
sbb
pop
mov
and
call
mov
ret
stos
sbbl
test
shl
push
push
dec
and
shlb
inc
sahf
repnz
jno
cmpsl
mov
pop
enter
test
mov
mov
cmp
xlat
pop
push
jno
std
jmp
je
and
pop
stos
js
dec
pusha
bts
adc
loope
pushf
leave
adc
movsb
cs
lret
mov
movsb
test
mov
mov
repz
imul
adc
push
adc
cmp
lahf
and
jle
mov
sub
mov
mov
out
push
mov
adc
sbb
xchg
std
test
icebp
jne
bound
dec
inc
xor
nop
sti
dec
stos
jecxz
or
or
and
rclb
loopne
ds
fsub
adc
shll
aaa
mov
js
fs
and
inc
fs
cmp
movsb
in
pop
mov
repnz
lods
leave
xchg
fldcw
cmpsb
xchg
push
pop
cld
jp
jle
int
lcall
mov
or
add
test
fdivrs
shlb
add
xor
out
xlat
cld
fs
insb
aad
into
mov
inc
sub
mov
in
mov
ret
mov
fdivs
shlb
loop
mov
mulb
mov
xlat
in
and
das
xchg
dec
lahf
mov
jl
pushf
cmpsb
jb
add
inc
pusha
xchg
sub
sub
scas
inc
leave
jno
insb
push
cmp
lret
or
iret
add
pop
dec
lds
dec
inc
imul
xchg
test
sbb
and
mov
test
pop
pop
add
int
bound
dec
or
fmul
sub
lret
jl
mov
ljmp
jmp
gs
cli
inc
test
sub
fiaddl
das
sbb
test
pop
pop
pop
and
push
idivl
icebp
out
and
add
sub
jle
or
cs
pop
add
movsl
sub
dec
xor
sti
push
xchg
or
sbb
test
stos
arpl
cmp
in
sbb
popf
ret
gs
in
jo
lret
in
inc
sahf
add
icebp
jb
push
enter
xor
cmp
and
dec
and
in
rorb
loope
adc
fcoml
cmp
movsb
push
xchg
xor
xchg
dec
and
rcrl
or
or
xor
mov
mov
jecxz
and
or
jge
std
cs
aam
mov
pop
push
subl
into
mov
add
jl
test
jo
jno
pop
cwtl
lds
daa
push
push
dec
xchg
mov
rorb
int3
popf
pop
sbb
push
push
mov
jne
ror
daa
or
dec
push
and
ds
mov
cs
adc
call
lds
mov
mov
stos
sar
sbb
sbb
into
sbb
stos
ja
sahf
fadd
lds
dec
js
call
cmp
inc
lret
cwtl
lahf
mov
xchg
mov
cli
bound
sub
lods
jmp
inc
dec
mov
popf
adc
pop
leave
lret
daa
out
and
out
ret
notb
pop
mov
int3
repnz
xor
aaa
inc
insl
cmp
jecxz
popa
push
add
or
push
sbb
add
mov
fldenv
leave
jbe
das
jnp
gs
data16
inc
mov
jns
jl
push
test
mov
dec
aad
mov
mov
pop
or
popf
xchg
stos
fprem1
repnz
adc
movsl
add
adc
aas
xor
add
shll
cmp
popa
mov
daa
mov
stc
gs
data16
jo
cli
lods
inc
dec
mov
and
mov
into
adc
add
mov
pop
sbb
jae
loop
lahf
test
jo
dec
jne
into
dec
shlb
es
and
pop
sub
bound
add
mov
cmp
lcall
ret
outsb
lock
sub
pushw
mov
lea
sbb
cmc
dec
pop
add
mov
xchg
sub
aas
cltd
cmp
xor
fdivrs
rcr
mov
sbb
push
fdivrl
cmp
incb
sub
and
mov
mov
xchg
stc
mov
xor
xchg
sub
daa
mov
sahf
js
pop
pop
imul
lahf
sub
fucomip
push
cmpsb
lods
movsl
dec
aam
in
mov
mov
dec
mov
loope
leave
gs
into
cwtl
push
push
or
pop
mov
and
imul
js
or
cli
or
repnz
je
imul
cmp
and
loop
inc
jns
rolb
idiv
stc
lds
jp
dec
gs
leave
and
dec
jmp
dec
loope
cld
sub
testl
lods
jnp
leave
cmp
mov
jo
push
test
mov
pop
sahf
pop
lods
xor
jae
push
pop
aad
imul
adc
xor
loopne
mov
jl
xchg
pushf
or
sbb
iret
mov
int3
jge
jmp
andb
gs
stc
lods
pop
rcl
outsl
dec
psllw
inc
out
and
or
mov
push
fisubrl
aas
adc
xchg
mov
mov
rclb
mov
xor
out
shll
sub
pusha
in
add
xchg
adc
and
testl
push
jle
jb
xchg
lods
aam
xlat
lret
rcrb
cmp
daa
divl
xchg
mov
and
popf
jl
jbe
mov
pop
dec
lock
faddp
cmpl
and
xchg
jge
pop
jb
xor
add
out
dec
xchg
loope
int
fldt
mov
inc
lret
repz
mul
into
cld
xchg
cltd
xchg
or
push
addr16
and
js
push
lcall
xchg
movsl
and
arpl
loop
mov
fcomp
stos
fldt
out
enter
jns
and
adc
xchg
sbb
dec
xchg
jmp
subl
xor
jle
and
mov
loope
push
xor
jnp
cmpl
sti
int
or
xchg
cmp
out
and
lds
push
pusha
mov
stos
xlat
xchg
sahf
or
aam
cmp
mov
cmp
add
mov
pop
jbe
aad
adc
dec
gs
add
out
xor
sub
dec
in
lds
pushf
repz
cli
stos
xorl
or
dec
loop
inc
jb
xchg
dec
out
iret
inc
into
inc
aaa
adc
inc
out
shll
adc
loopne
jmp
mov
jno
xchg
test
fildl
mov
scas
dec
rol
or
push
jno
xor
or
sub
push
into
mov
fdivrl
and
mov
mov
mov
mov
ljmp
popf
aas
xchg
into
dec
fidivrs
insl
sbb
mov
xchg
repz
xchg
add
cmp
lret
cwtl
clc
mov
shrl
rcr
add
push
push
jp
adc
mov
int3
push
rcr
sbb
imul
add
mov
pushf
leave
in
call
jl
clc
xchg
sbb
and
push
push
pop
cmp
adc
daa
int
push
jg
cmp
clc
cwtl
cmpsl
or
xchg
sahf
xor
sub
call
sbb
and
add
leave
inc
and
inc
cmc
or
jbe
pop
and
sbb
cmp
rorb
adc
mov
enter
gs
or
xchg
inc
sarb
inc
push
cmpsb
stc
imul
dec
loope
movsb
lret
mov
or
add
mov
arpl
add
jns
lfs
dec
push
xor
loope
sbb
call
fmull
adc
ljmp
lret
mov
mov
in
fucomp
loop
popf
cwtl
lret
sub
sbb
pop
stos
jo
adc
fs
and
repnz
outsb
mov
in
lahf
xchg
pop
adc
mov
sbb
je
adc
jne
pop
mov
mov
mov
mov
jmp
std
jle
movsb
stc
orl
push
nop
out
pop
jecxz
std
ss
int3
and
cmc
test
jl
pop
pop
iret
jecxz
sbb
inc
jecxz
xchg
jbe
outsl
jmp
fcoml
imul
xchg
mov
mov
cmp
pop
cli
movsl
popf
fnsave
rol
dec
push
push
inc
sbb
push
dec
cmp
cli
push
rcrl
lahf
mov
or
nop
into
sbb
rcrb
jnp
mov
and
test
xchg
lret
sub
outsl
pop
out
cmp
popa
bound
je
int3
addr16
adc
sub
cmp
iret
mov
add
in
inc
xchg
dec
out
or
insl
inc
adc
test
push
es
pop
ljmp
jns
lods
mov
xchg
adc
push
lds
ffree
popf
inc
push
xor
mov
push
dec
lcall
sarl
aam
mov
jecxz
lret
fnstsw
jbe
iret
out
shll
inc
lcall
loop
cmp
or
push
aas
pop
xor
outsb
ret
pop
adc
int
outsl
insl
call
adc
mov
iret
inc
jns
xor
outsb
push
add
and
call
dec
mov
dec
push
xchg
sbb
adc
repnz
dec
js
push
int3
lahf
aad
push
pop
frstor
cli
flds
je
pop
or
sbb
dec
or
clc
jb
jnp
adc
add
xchg
scas
ds
das
test
mov
pop
mov
pushf
outsl
testl
fisubs
adc
xchg
pop
jmp
fbld
rolb
jl
xchg
jg
mov
std
or
call
mov
shlb
repnz
stos
imul
aad
fildl
cmc
pop
cli
in
push
lahf
mov
pusha
cmp
add
cmp
nop
lret
orb
pop
mov
jb
cmp
inc
jnp
mov
jle
push
cli
and
cmp
xor
or
ds
cmpsb
loope
mull
pop
dec
mov
nop
pop
cli
adc
pusha
sahf
xor
addr16
and
xchg
or
lods
imul
imul
scas
mov
inc
xor
add
inc
pusha
xchg
es
add
xchg
jge
les
mov
call
mov
ret
sbb
shll
dec
cmp
sbb
fs
in
add
push
jns
movsb
dec
jmp
rclb
or
push
daa
sub
jecxz
into
sbb
sub
test
and
movsb
aam
and
ds
pop
jo
andb
rcrb
sbbb
jecxz
or
jp
cmpsb
outsl
jnp
push
push
fwait
in
addr16
js
xchg
adc
mov
imul
into
rcrl
xchg
cmp
out
addr16
mov
jno
mov
jl
pop
or
sbb
ljmp
leave
test
mov
cltd
mov
cmp
stos
rorb
sbb
and
inc
mov
lcall
xchg
dec
pop
movsl
push
je
adc
sub
lahf
loopne
sub
jb
and
pop
xchg
add
arpl
sbb
jae
test
jl
mov
cmp
xchg
idiv
repz
into
mov
inc
int3
movsb
add
push
out
pop
adc
std
fldcw
push
sub
shlb
add
ret
pop
in
leave
idivl
ret
mov
xor
pushf
sar
ljmp
xchg
jne
xor
push
pop
adc
sbbb
ret
pop
add
push
gs
sub
in
addb
pushf
js
sbb
add
mov
popf
stos
lods
clc
mov
std
std
mov
insb
sbb
adc
inc
xor
loop
push
mov
fstpl
push
sbb
out
mov
pop
enter
adc
imul
pop
outsl
sub
mov
jbe
ljmp
mov
xchg
jle
mov
iret
pop
fwait
jp
test
pop
mov
sahf
jne
sti
sbb
push
dec
inc
loop
and
adc
dec
out
xchg
sbb
xchg
arpl
sbb
mov
sub
push
or
enter
cli
into
lea
stos
inc
std
iret
or
xor
cmp
or
cmp
adc
rcl
xchg
jo
mov
lret
mov
cmpsl
fisubs
push
stos
mov
cli
cmpsl
pop
aaa
adc
sbb
test
repnz
stos
popf
jnp
cltd
pop
dec
test
lods
stos
imul
pop
addr16
xchg
pop
jle
jl
leave
rcrl
xchg
xchg
inc
pop
pop
mov
repz
mov
add
pop
rol
cltd
or
push
in
or
daa
loope
aam
in
mov
stos
repz
into
mov
hlt
add
loope
jge
jbe
lret
inc
inc
jnp
pushf
and
sub
push
mov
sbb
dec
test
xor
mov
pop
sub
or
adc
mov
jo
pop
cmp
fisubrs
leave
mov
imulb
imul
leave
dec
push
sti
inc
push
add
mov
clc
rcl
push
sub
cmpsl
sbb
fchs
add
out
movsb
mov
mov
je
xchg
mov
sarl
add
and
xchg
add
adc
pop
shlb
ljmp
shrb
leave
xlat
iret
push
cmp
sbb
add
mov
push
and
sbb
jecxz
sbb
ret
xor
xchg
adc
push
cmc
xchg
incw
mov
jp
out
cltd
and
push
lods
inc
cltd
mov
loopne
pop
ret
xchg
ret
pop
icebp
xchg
or
jge
lret
lcall
nop
jg
shlb
cmp
push
mov
sti
inc
inc
ret
lret
mov
scas
adc
cmp
idivb
in
stos
enter
sbb
cltd
aas
adc
hlt
pop
lock
mov
test
inc
out
dec
or
lahf
inc
and
popf
loope
push
shlb
call
xor
addl
aaa
inc
inc
or
or
addr16
fdivrs
sbb
repnz
dec
mov
imul
add
inc
cmp
jecxz
push
jne
shlb
test
stc
pop
cli
sti
cli
push
lcall
adc
pop
fcomip
mov
in
cmp
scas
jge
add
xor
movups
lret
test
inc
inc
dec
fmuls
jns
xchg
add
ja
in
jg
mov
popf
xchg
sub
bound
test
fidivs
xor
bound
jb
lock
mov
mov
add
or
sarl
aaa
cmp
jg
fldcw
jno
push
hlt
mov
add
cmp
dec
aaa
daa
jbe
fadd
adc
jbe
xchg
inc
faddl
arpl
cli
rorb
enter
gs
add
sub
push
or
mov
pop
daa
sub
mov
sub
pop
mov
je
lock
movsb
sub
jge
outsb
lock
sub
mov
fisubrs
xchg
adc
sub
mull
lahf
je
pusha
int3
jnp
cwtl
in
add
adc
push
test
daa
push
mov
jns
rcll
sbb
pop
in
push
adc
fisubrl
shll
inc
arpl
out
cmpl
mov
leave
sub
lahf
js
xorl
mov
out
insl
iretw
addb
sbb
mov
pop
int
mov
mov
sub
sub
push
leave
and
ds
data16
nop
ljmp
fimull
jecxz
bnd
sbbb
aad
pop
add
loop
add
fwait
mov
pop
push
lock
xchg
popf
pop
add
sub
jmp
dec
outsb
push
ss
or
sub
outsl
push
loop
cmpsb
sub
mov
mov
adc
popa
hlt
push
dec
rol
push
stos
mov
cltd
int3
or
sbb
cmp
filds
test
lea
add
subl
xor
ds
and
inc
mov
or
mov
and
push
stos
lahf
mov
sub
arpl
insl
sahf
pop
cli
les
es
cwtl
imul
mov
jb
orb
lret
movsb
insl
test
ds
xor
adc
pop
cmpsb
lcall
mov
inc
inc
inc
mov
in
lods
nop
mov
inc
mov
dec
in
adc
mov
mov
cmp
sbb
fiaddl
push
lret
cld
stos
pop
fsubl
mov
sbb
sbb
cwtl
push
xchg
pop
rclb
xor
cwtl
sub
lds
imul
dec
mov
pop
outsl
and
test
pop
sbb
cli
in
vpsllq
aam
mov
sbb
daa
out
test
gs
cmc
mov
xor
and
in
xor
loope
cli
dec
ljmp
ljmp
pop
push
aam
push
mov
mov
movsb
fcmove
enter
int3
mov
test
or
enter
ret
xchg
test
andl
pop
icebp
sahf
mov
pop
pop
pop
in
aad
add
cmp
sub
dec
inc
pop
movsb
adc
xchg
outsl
xor
mov
pop
shll
adc
dec
call
sbb
pop
pop
pop
jbe
sbb
std
jg
lock
mov
ror
jne
xchg
lds
mov
inc
sub
negb
outsl
iret
lret
dec
ret
xlat
xchg
aas
ror
lret
stos
fnstsw
push
popf
sub
mov
mov
shll
scas
insl
jl
jle
jmp
inc
push
or
ss
addr16
cmp
inc
lret
or
mov
cmpb
add
push
or
ja
push
pop
inc
or
cmp
mov
xor
push
sbb
mov
js
sahf
les
fs
jb
sbb
mul
rcll
std
in
movsl
int
xor
xor
pop
insl
nop
mov
stos
mov
pusha
out
cs
stc
mov
jmp
bound
add
ss
outsl
popa
cmp
jl
inc
sub
cltd
ds
push
pop
jl
loopne
mov
push
add
mov
movsb
mov
adc
cmp
pushf
notb
rcll
cmp
pop
lea
mov
js
rcrb
sbb
adc
adc
mov
mov
mov
jecxz
inc
pop
push
adc
sub
mov
jbe
jp
sbb
mov
xchg
data16
mov
sbb
mov
add
bswap
fdivr
bound
jno
shll
mov
push
xchg
enter
out
add
pop
push
mov
mov
bound
lock
repz
cmp
mov
js
or
cmc
lret
push
outsl
test
les
adcb
fwait
push
cmp
xor
mov
push
mov
and
mov
cmp
pop
inc
jbe
cmpsl
inc
push
jns
nop
test
sub
sti
mov
jae
mov
xor
shrl
enter
stos
xchg
jbe
cmp
fwait
repnz
jnp
inc
aam
mov
xchg
sub
inc
cmpsb
sti
pop
sbb
cmp
cmp
push
rclb
popa
sarl
sub
daa
mov
cmp
push
mov
adc
sahf
cmp
cmp
jg
add
mov
add
dec
pop
and
insb
shlb
daa
dec
in
adc
dec
pop
mov
inc
mov
repz
inc
out
jg
cmp
sar
arpl
addr16
xor
out
out
cli
mov
out
pop
jne
bound
loop
mov
cmpsl
cmpsb
xor
jb
push
leave
mov
cmc
ret
mov
adc
out
ss
adc
das
add
mull
push
sub
push
or
orl
pop
loop
sub
sbb
add
shrl
in
jmp
mov
adc
or
out
fiadds
orl
sti
adc
imul
jne
repnz
inc
popf
inc
subb
inc
mov
inc
xchg
or
icebp
sub
xchg
into
cmp
in
shlb
adc
lcall
aam
push
inc
aas
mov
mov
mov
jnp
jns
addr16
dec
jl
sbb
jl
lea
sbb
push
pop
ja
lahf
add
push
push
adc
aas
mov
jp
cmp
or
jmp
dec
push
xchg
pop
aaa
test
movsb
and
add
push
inc
add
in
xchg
loopne
fwait
shll
or
out
push
or
sahf
cmp
cmovl
dec
pop
int
fbld
aaa
sbb
adc
mov
shr
lods
je
mov
shlb
test
jmp
cltd
xor
cmpb
cmp
enter
loopne
sub
fsubrs
dec
mov
dec
mov
add
rol
loopne
bound
nop
in
jne
jp
in
scas
sbb
push
cli
insb
inc
jmp
in
sub
lods
stos
les
iret
pop
and
in
popa
loope
clc
jge
fldt
stc
lock
roll
mov
pop
outsl
inc
jge
lds
cmp
lret
out
xor
lahf
xor
mov
mov
adc
jne
cmp
das
dec
mov
scas
shll
and
pop
pushf
fcomps
iret
mov
and
mov
dec
test
jns
push
ds
mov
stc
iret
aas
add
test
iret
stos
mov
outsb
leave
ja
pop
int3
sahf
xchg
xchg
fisubrs
hlt
stos
jb
mov
pusha
sub
loop
andb
dec
pop
cmc
lcall
sbb
inc
jne
xchg
mov
popf
jne
mov
push
mov
movsb
jl
data16
mov
cmp
daa
sbb
in
cs
mov
cmp
add
into
int3
adc
scas
mov
sbb
mov
cmp
inc
lock
jno
xchg
xor
insl
inc
shrl
nop
cld
mov
mov
movsl
sahf
inc
test
pop
out
and
or
mov
shrb
call
add
sbb
adc
sub
sahf
dec
mov
es
repnz
ja
pushf
mov
or
mov
jg
in
mov
cmp
push
es
loope
rcrl
mov
adc
jnp
call
std
stos
mov
dec
xlat
clc
iret
test
push
sbb
stc
ljmp
lret
mov
mov
lcall
std
add
pop
stos
and
adc
xchg
inc
cmp
sbb
push
mov
push
mov
mov
pushf
jle
fs
add
and
mov
jge
add
jne
repz
leave
push
xor
dec
data16
mov
add
pusha
mov
aaa
and
iret
sbb
sub
rcrb
mov
push
jbe
adc
stos
into
lret
sahf
repz
push
dec
bound
xchg
pop
mov
lock
ja
nop
push
sbbb
inc
push
and
sti
cmp
fcmovne
ss
pushl
inc
jp
mov
sbb
mov
add
orl
scas
ss
test
arpl
nop
jg
into
fdivrp
jg
bound
pop
cmp
lcall
es
and
arpl
mov
cmp
cmp
out
sub
cmp
loop
loop
dec
xor
or
les
adc
jb
icebp
push
leave
and
jns
cmp
mov
imul
int
ret
rcll
lock
jl
mov
aas
lds
nop
xchg
cmc
mov
in
mov
enter
jge
push
fwait
sub
icebp
mov
std
xor
cmpsl
push
in
xchg
cld
jmp
das
cmpsb
lds
out
lds
xchg
enter
loop
fadds
push
cbtw
call
inc
add
cmpsl
inc
xor
daa
cmp
sahf
mov
sbb
xchg
xor
xchg
movsb
sti
mov
in
scas
jmp
jne
sub
xor
mov
loop
pop
fiadds
jb
nop
mov
jge
cmp
jge
dec
inc
out
dec
add
cmp
nop
popf
sub
imul
cld
pop
add
clc
imul
shlb
loope
loop
addb
mov
fsts
mull
mov
xor
jmp
icebp
lret
addps
jns
dec
xchg
cs
testl
fimuls
mov
imul
aaa
push
int3
inc
frstor
les
xchg
lahf
push
inc
and
xor
jns
je
cmpsl
adc
shl
lea
xchg
mov
lods
xor
xchg
jno
mov
lds
dec
pushf
sub
mov
push
jno
sub
test
fldl
aad
pop
lock
xchg
add
pop
mov
pop
inc
xor
and
adc
push
test
lods
arpl
pop
movsb
push
pop
lret
aas
xchg
in
mov
add
jb
stos
jle
pop
scas
int3
push
lea
fs
sarb
push
push
and
ja
popa
bound
cld
mov
push
in
sbb
inc
sbb
push
mov
sti
imul
aam
sub
mov
xchg
xor
testb
mov
mov
mov
aaa
loopne
push
mov
lret
push
mov
sub
or
jnp
je
ja
mov
aam
jae
movb
int3
mov
xor
mov
es
outsl
adc
lods
push
test
xlat
in
test
into
adc
test
jb
ret
and
jecxz
fstl
mov
and
fs
push
inc
pop
mov
test
mov
or
cld
mov
mov
les
mov
mov
sub
je
popa
add
sahf
push
sahf
test
mov
dec
xchg
dec
lahf
js
je
sbb
outsb
ret
cwtl
push
and
mov
or
sub
xor
cmp
jle
add
cli
int3
ds
adc
sbbb
ret
cmpb
inc
sbb
outsl
mov
push
inc
sub
out
xchg
lret
jmp
xchg
inc
jg
in
xchg
loop
push
mov
bound
cmpsl
iret
jae
dec
push
push
pop
xorl
scas
dec
cmp
dec
int
ret
test
jl
pop
sub
scas
scas
call
sbb
ret
frstor
in
addr16
int3
pop
call
or
jo
out
sbb
adc
pop
enter
movsl
xchg
sbb
les
ss
mov
cltd
mov
jb
arpl
rcl
dec
orl
adc
adc
push
dec
aad
cwtl
add
lods
lea
adc
dec
lods
push
mov
and
sub
loope
or
and
or
cmp
aaa
lods
mov
loop
loop
push
sbb
fwait
inc
cmp
mov
sbb
adc
inc
inc
or
roll
dec
adc
mov
stos
lahf
in
pop
testl
repz
mov
sub
test
jecxz
jecxz
mov
add
out
xor
movsb
data16
popf
sbb
push
in
lea
popa
and
xchg
push
cmpsb
sarb
xchg
aad
ret
xchg
ficoms
pop
lea
daa
cmc
fimuls
jmp
push
and
jmp
test
jae
or
xchg
cmpsb
cmpsl
int
mov
jnp
hlt
out
mov
pop
mov
inc
xor
jb
xchg
outsb
and
hlt
inc
xor
jmp
add
mov
mov
xor
xlat
xchg
popf
and
push
test
sbb
push
repz
cmp
movsb
ja
sbb
adc
rcrb
xlat
cmp
pop
outsl
call
sub
pushf
fxch
xchg
fsubrs
scas
xor
pop
inc
mov
mov
jp
cmp
dec
incl
add
xchg
xor
mov
and
insb
in
ds
mov
out
sub
sbb
inc
mov
ja
cld
adc
addr16
movsbl
jnp
sub
inc
enter
sub
dec
dec
push
jne
scas
cmp
sahf
cmp
xchg
adcb
sub
sub
mov
loopne
push
loop
sbb
pop
out
push
fucomip
out
push
mov
dec
push
scas
inc
out
cld
mov
test
ficoml
aaa
jg
dec
add
cmp
jb
lea
les
dec
push
mov
imul
in
xchg
jmp
push
lahf
xchg
cmpsb
cmp
push
mov
xor
stos
sbb
lods
add
or
test
jne
mov
call
inc
enter
loop
lods
pop
cltd
cmp
popa
fs
in
adcb
jb
sbbb
repnz
xchg
repz
inc
inc
pop
jge
out
xchg
addl
and
jg
inc
sbbl
subl
xor
test
jl
es
jb
and
fmull
scas
test
fadd
clc
js
sub
xor
inc
xchg
incb
xorl
push
xor
rolb
push
dec
jno
xor
sbbb
or
jne
sbb
lret
aaa
mov
lret
or
mov
cli
dec
adc
dec
ja
mov
cwtl
mov
jecxz
addr16
fnstcw
xchg
adc
int3
sti
add
inc
ja
sub
test
cmpsl
mov
lahf
cwtl
fdivl
lds
adc
fstps
fldl
test
hlt
fstps
dec
cmpsl
dec
xchg
mov
int3
outsb
inc
lahf
sub
mov
aas
test
popa
test
testb
enter
cmp
loop
cmp
push
push
adc
fs
ret
jnp
das
inc
int3
lods
add
call
push
add
push
in
sahf
add
or
call
clc
fcmovnb
ret
xor
jge
test
and
clc
push
sub
loope
jle
and
or
scas
lods
leave
aaa
outsl
int
pop
lcall
clc
rep
mov
insl
lret
ror
stos
mov
sub
outsb
cltd
pop
jo
popl
inc
push
orl
push
sub
rorl
fisubrs
enter
cmp
xchg
sbb
stos
fs
mov
enter
imul
add
mov
fstl
sbb
xchg
dec
xchg
cmpl
jae
loop
std
mov
cs
jge
xchg
fcom
add
jle
movsl
mov
insb
sub
mov
cmp
ja
xlat
and
push
xlat
cmpsb
dec
mov
nop
xor
push
movsb
and
lcall
arpl
fnstcw
push
in
lods
xor
pop
adc
pop
mov
mov
mov
adc
fucomi
mov
xor
mov
and
xchg
mov
inc
jmp
inc
sbbl
push
push
sub
mov
sbb
clc
pop
repz
lds
std
es
fdivrs
les
adc
scas
test
call
add
cmp
push
incb
ret
sbb
stos
dec
sbb
gs
xor
adc
adc
mov
mov
and
mov
xchg
lds
mov
insl
ds
xor
daa
push
psubusb
push
add
repz
loop
fwait
and
pop
fcoms
cltd
sbb
jb
dec
test
pop
jo
mov
dec
ffreep
sub
cmpsb
mov
and
adcb
or
mov
dec
test
stc
out
mov
addl
cmp
mov
mov
adc
in
dec
nop
xor
lock
fcoms
addr16
repnz
mov
fildll
les
jmp
xlat
jmp
sbb
pop
sbb
sbb
and
aaa
fidivrs
cmp
sub
dec
shr
dec
push
in
lods
pop
dec
ret
dec
imull
lret
dec
inc
testb
sub
and
lret
jnp
cltd
lret
int3
cwtl
pushw
lahf
iret
sub
pop
pop
xorl
and
aas
inc
push
or
or
mov
icebp
in
mov
mov
mov
repnz
push
ret
in
xlat
inc
scas
insb
aaa
into
in
jge
mov
and
xor
inc
test
mov
mov
stos
cmp
lods
push
dec
int
mov
mov
push
adc
jp
add
fldt
out
ds
pushf
fmuls
adc
inc
nop
xor
jmp
nop
adc
and
imul
jmp
cmp
lods
mov
sbb
stc
int3
fs
ss
pop
xor
gs
xor
into
shll
ds
movsl
adc
mov
arpl
sahf
pop
psubw
clc
cmp
cmp
push
imul
scas
popf
jns
mov
jmp
ss
xor
popa
mov
pop
stos
repz
dec
daa
or
lret
call
dec
loope
mov
push
jmp
popf
lods
ret
push
xor
push
dec
movsl
pop
or
nop
xorb
in
cmc
loop
aam
fbld
pop
neg
jle
sahf
sub
cwtl
jge
test
pop
push
inc
xchg
jne
pop
push
sbb
imul
sub
add
inc
mov
int
push
mov
mov
mov
and
add
xor
psrad
andb
adc
in
sbb
dec
jnp
cmc
ret
fidivrl
clc
fstps
mov
in
cmp
xchg
mov
xchg
int
test
sbb
idivl
enter
sbb
add
xor
inc
popa
push
adc
xor
sbb
jg
ss
fistpl
mov
or
add
jg
pop
pop
aam
mov
movsl
iret
lods
push
cwtl
int3
jecxz
xor
add
test
mov
sbb
sub
dec
cli
in
les
xchg
stos
sub
cmp
add
inc
sub
mov
sub
scas
push
cmp
jp
fistpl
xor
dec
jg
push
insl
cmp
cmp
xchg
shrb
subb
adc
out
in
push
gs
out
xchg
outsw
xor
filds
fwait
sub
inc
jne
mov
mov
out
fs
dec
shrl
clc
ja
or
and
lods
subb
mov
inc
mov
sub
lods
roll
jp
adc
mov
sub
dec
lods
into
or
xchg
jmp
adcl
gs
mov
mov
dec
rorl
sub
mov
daa
mov
sbb
mov
es
mov
mov
loope
jnp
ja
sub
cmp
jnp
mov
lods
jmp
gs
imul
mov
in
sub
insb
imul
add
lret
stos
jbe
popa
xor
pushf
scas
add
lods
jmp
stos
jmp
cmp
adc
ja
push
push
adc
stc
lcall
sar
sahf
dec
and
inc
mov
mov
push
inc
cmp
mov
lods
xchg
inc
mov
fisttpll
xor
push
and
hlt
jb
or
mov
pop
data16
dec
xor
in
and
pop
cli
lds
mov
iret
lcall
mov
adc
mov
test
xchg
or
add
rcrb
sbb
out
out
jle
xchg
adc
outsl
and
call
icebp
cmp
or
outsl
fwait
inc
mov
jp
jb
inc
mov
fwait
xor
cld
dec
mov
bound
or
xchg
pop
negl
lea
test
orl
mov
jmp
lret
add
adc
cs
inc
scas
ja
out
cmp
cmp
push
xchg
das
push
adc
dec
push
pop
cwtl
add
loop
adc
mov
pushf
xchg
dec
insb
or
js
fiaddl
ja
sti
lds
fs
jno
repz
pop
push
mov
loopne
xlat
and
in
adc
mov
mov
add
ljmp
filds
in
adc
inc
dec
sub
fcoms
xchg
pop
jle
dec
ja
add
pop
ficompl
incb
pop
inc
push
fs
push
add
pop
pop
add
pop
mov
rorb
fsubl
sub
cmpsb
dec
ja
adc
lock
fs
sub
daa
icebp
push
pop
mov
cltd
cmc
cwtl
mov
mov
repz
ljmp
sahf
clc
js
movsb
pcmpgtd
sub
fisubrs
dec
dec
jp
sbb
inc
lahf
inc
jge
push
or
jnp
adc
xchg
add
rorl
ret
repnz
popa
sbb
loop
insl
lock
cmpsb
cmp
cmpsl
cmpsl
call
aaa
xorb
rcll
aaa
fmul
lahf
jl
sti
mov
adc
fmuls
sti
fidivl
ret
dec
out
mov
and
jle
sbb
fmul
lahf
ret
lock
hlt
fdivl
jno
sub
xor
mov
cmpsb
push
xchg
cwtl
push
mov
push
loop
mov
iret
nop
test
sbb
adc
xchg
sub
icebp
les
in
xor
stos
lret
test
add
adc
punpcklwd
cmc
cwtl
cmp
xchg
dec
pop
enter
pusha
scas
inc
or
xor
movl
cmc
mov
loop
inc
xlat
fdivrl
mov
fwait
xchg
adc
jl
mov
ljmp
lock
jns
mov
xor
inc
test
lret
xor
mov
push
xor
in
hlt
xchg
shll
rdtsc
in
inc
add
jge
gs
mov
lret
test
dec
cld
outsb
xchg
inc
fdivrl
movsl
xor
add
dec
cmpsb
fwait
cltd
xchg
xlat
cmpsb
mov
idiv
or
xchg
jns
dec
add
into
movsb
sub
cmp
mov
pop
jo
imul
popa
adc
rcrl
dec
mov
ds
xor
mov
cmp
mov
jb
or
mov
rclb
ret
push
lahf
fiaddl
not
or
loop
lahf
outsb
adc
fsubl
flds
mov
xchg
xchg
lret
inc
add
fsts
adc
js
sub
cmpsl
out
lods
andb
sub
xor
cwtl
stos
sbb
and
sub
jmp
lea
popa
enter
xor
jl
xchg
out
xchg
pop
shll
lea
sub
in
movsl
call
ss
adc
and
fidivs
add
in
mov
jecxz
outsb
pop
inc
add
sub
and
fisubrl
pop
sbb
gs
jl
mov
push
push
or
cmp
nop
pop
imull
dec
fisubrs
iret
popf
pop
dec
es
pop
xlat
icebp
and
xor
jl
addr16
repnz
iret
mov
je
daa
je
fdiv
push
iret
lcall
je
test
mov
xor
test
mov
pop
stos
mov
cwtl
pop
popf
ret
cmp
xchg
xchg
sbb
add
mov
push
xchg
jnp
push
cmp
pop
xor
mov
outsb
cmpl
out
lds
mov
cmp
leave
jnp,pt
popf
clc
mov
adc
or
insl
add
adc
sbb
fisubs
jno
push
adc
xor
scas
inc
imul
movsb
jo
es
inc
leave
lea
lea
lret
out
xchg
ret
arpl
xlat
and
inc
push
js
lds
std
xlat
arpl
add
and
pop
mov
inc
push
xor
lret
pop
adc
xor
cmp
add
sbb
ret
lahf
movsb
sbb
push
pop
lcall
gs
pushf
outsb
imul
aas
cli
jl
mov
mov
and
test
jae
mov
or
fdivl
in
jge
adc
pushf
jns
or
lahf
movsb
sub
inc
inc
pop
out
cltd
push
jmp
cs
js
rorl
sub
mov
std
and
pushf
incb
sbb
and
nop
leave
xchg
ljmp
push
mov
loopne
dec
mov
imul
out
popa
xchg
and
test
scas
addr16
into
xlat
mov
test
ss
fdivrs
and
sbb
mov
enter
and
fiadds
fwait
dec
scas
mov
xchg
mov
inc
or
mov
lds
and
lods
mov
ja
hlt
mov
in
lcall
dec
in
jle
imul
shrb
add
mov
xchg
add
rol
fnsetpm(287
push
sti
out
mov
inc
out
add
sub
push
sub
jo
mov
and
pushl
dec
and
mov
pusha
xlat
cmpsb
imul
sub
push
push
dec
lcall
push
jge
sbb
cli
jg
mov
and
cltd
scas
dec
cmpsl
enter
push
xor
test
push
ficomps
xchg
sbb
ljmp
ret
mov
scas
into
in
or
xchg
mov
xor
fs
xchg
sbb
scas
lods
cmpsl
add
outsl
mov
or
dec
imul
and
and
popa
movsb
outsl
testb
fmull
cmc
fiaddl
ljmp
or
rclb
cmp
jl
rolb
movq
push
testl
push
sbb
jno
jmp
aam
mov
cmp
mov
pop
sbb
sbb
test
add
lods
cmp
fucomip
push
lahf
push
out
jle
xorl
sub
lods
mov
in
invd
testl
add
or
cli
fistpl
lea
lods
mov
adc
xchg
jp
lret
adc
or
nop
insb
mov
mov
negl
mov
fmull
cs
and
and
jg
in
or
sub
test
mov
fdivr
push
and
xor
cmp
sbb
jbe
fidivs
and
insb
sub
sbb
aad
int3
mov
mov
jmp
inc
dec
xchg
jp
push
ja
rcrl
pop
xchg
jae
sbb
sub
inc
popa
fstpl
mov
dec
mov
decl
sbbl
outsl
gs
rorl
mov
pop
add
xchg
xchg
andps
rep
popf
arpl
scas
mov
cmpsl
pcmpgtw
cmp
dec
adc
lret
pop
leave
ljmp
mov
roll
jmp
arpl
mov
aad
loope
sub
dec
dec
cwtl
test
aaa
sbb
mov
movntq
out
push
fidivl
sbbl
add
push
fdivs
fidivrs
xchg
sub
hlt
iret
lds
inc
adc
jno
cmp
test
jl
xor
xlat
idiv
mov
inc
adc
jne
inc
data16
lods
push
sub
add
mov
jmp
sbb
das
fldl
pop
push
jno
call
xor
jnp
xchg
pop
jb
push
sbb
inc
scas
jnp
mov
lea
negl
push
in
insb
or
mov
nop
cld
mov
fcoml
cmp
test
lods
loop
das
jno
pop
sub
psubusb
xor
pop
mov
and
cltd
xchg
jo
lods
in
mov
into
push
xchg
sub
push
out
adc
out
jge
negb
adc
xchg
clc
push
dec
mov
stos
adc
mov
mov
sub
lcall
ret
stos
lea
lods
data16
mov
xor
jb
mov
mov
fistps
sahf
and
sbb
adc
mov
clc
push
fisttpll
iret
sub
pop
mov
push
add
enter
das
adc
dec
dec
jnp
push
lds
cmp
or
jmp
mov
push
movsl
das
loopne
jbe
dec
push
gs
aam
pop
xchg
call
mov
pop
mov
inc
imul
pop
popl
stos
movsb
pop
bound
cmc
mov
dec
jg
std
jg
or
int
jbe
jne
jo
scas
dec
call
mov
or
xor
pop
mov
daa
jmp
adc
cwtl
cmp
int3
dec
jp
out
adc
xor
lds
xchg
je
int
aaa
aad
fstpt
enter
push
adc
mov
adc
mov
cmp
sub
cmpsl
cmp
jle
mov
pusha
shr
stos
dec
aaa
mov
pop
sub
mov
into
xor
fisttpll
add
sahf
iret
hlt
pop
inc
dec
cmc
call
inc
mov
mov
repz
sbb
mov
jns
orl
jecxz
inc
lahf
sbb
pop
popa
jmp
push
and
je
rcll
ja
mov
jecxz
fs
xor
xchg
stos
leave
sub
dec
fldt
xchg
in
mov
cmp
in
cli
mov
xchg
mov
stc
sub
sbb
xchg
mov
jno
xor
mov
in
pop
adc
test
outsl
addr16
mov
outsb
std
fdivl
js
mov
cwtl
mov
inc
cld
addl
jecxz
xor
inc
not
add
jmp
jo
pusha
or
iret
icebp
or
jo
in
fucomi
hlt
les
inc
inc
int
adc
or
test
mov
sbb
sub
mov
mov
and
or
xlat
ss
adcb
dec
andb
or
mov
jg
bound
inc
mov
mov
out
fwait
imul
stc
jb
xchg
outsl
int3
pop
stc
movsb
scas
and
scas
pop
adc
dec
aas
jp
test
and
mov
shll
or
cwtl
pop
sub
stc
lea
les
push
mov
cltd
or
push
aam
enter
sti
scas
pop
arpl
jb
mov
scas
xor
ss
movsb
mull
xchg
enter
rcll
notl
pop
test
jno
js
dec
mov
outsl
lahf
cmp
dec
push
movsl
cmp
jae
push
add
and
pop
mov
push
xchg
mov
icebp
std
test
scas
xor
sbb
xchg
pop
mov
cld
std
adc
mov
jbe
fxch
jge
aas
push
aaa
or
dec
dec
add
pushf
arpl
lcall
mov
shll
std
popa
add
sahf
sub
jge
out
repz
jbe
adc
cmp
in
je
gs
cmp
dec
jae
pop
push
xor
rclb
mov
cmp
add
cwtl
mov
fwait
sbb
mov
mov
cmpsb
mov
in
ds
jae
es
jecxz
adc
sbb
lock
xchg
jle
add
int
ss
xchg
mov
mov
jg
stos
sub
mov
rcrb
dec
pop
and
or
ficompl
mov
ret
push
dec
out
mov
push
sbb
icebp
jle
sbb
pop
push
out
loopne
mov
or
mov
mov
pop
mov
je
lock
mov
bound
out
mov
shr
push
xchg
jae
push
adc
lret
and
mov
pop
sub
stos
mov
mov
arpl
push
mov
sbb
sbb
mov
cmpsl
xor
cmpsl
cltd
pop
call
push
mov
js
ljmp
pop
dec
popa
or
add
movsb
push
or
jns
jle
cwtl
aaa
dec
xor
push
mov
mov
sahf
sti
add
adc
mov
xchg
inc
add
cmp
loope
movsb
or
xor
push
inc
mov
inc
sub
dec
jp
lret
mov
xchg
and
pop
arpl
or
int
out
les
cltd
jmp
into
xor
xchg
push
call
push
ret
xchg
mov
cwtl
or
pop
and
test
fcmovne
lods
lahf
sub
fstpl
shl
push
rolb
iret
and
aaa
testl
sub
shlb
mov
jns
aam
lods
cmc
lcall
or
jmp
cmp
adc
mov
mov
mov
fmull
xlat
add
iret
pop
sbb
adc
hlt
pusha
test
out
mov
dec
or
call
push
movsl
call
hlt
push
int
pop
test
cmpsl
les
sbb
stc
sub
mov
aad
sub
mov
enter
push
sub
dec
lret
outsb
jno
pop
lret
and
or
push
mov
mov
sub
mov
jne
xor
arpl
fxch
fxtract
push
mov
lock
mov
and
in
dec
xchg
stos
sbb
and
push
mov
test
or
dec
pop
cmp
lret
jecxz
roll
jecxz
push
imul
dec
jge
lea
loope
lock
pop
fsub
pop
cld
cltd
fbld
int
xchg
mov
cld
mov
or
mov
push
mov
repz
mov
dec
pop
push
loopne
ljmp
imul
mov
pop
popf
outsb
insl
outsb
fistpl
icebp
sbb
fwait
dec
push
mov
pop
pusha
xor
sbb
dec
add
lret
xchg
stos
daa
rolb
fwait
orb
imulb
inc
imul
scas
popl
cmp
inc
repz
push
push
xchg
or
cld
push
in
mov
cltd
pop
sub
push
jb
lret
xchg
xchg
sbbb
rolb
push
inc
jno
sar
shll
cmc
scas
cmpsb
mov
add
sub
insl
xor
add
ret
push
pop
inc
mov
xchg
mov
fstps
mov
pop
cmp
jae
arpl
test
xchg
jp
fmul
les
sahf
lret
ja
mov
jb
push
arpl
in
outsl
test
rcrb
pop
pop
scas
insb
ss
hlt
and
cld
add
xchg
adc
aaa
dec
test
scas
ljmp
add
push
cld
or
and
pushf
pushf
mov
data16
mov
test
das
cwtl
fwait
adc
jg
and
or
mulb
leave
movsl
lods
pop
mov
cs
xchg
push
into
push
inc
and
popa
loope
inc
sbb
pop
test
xor
push
stos
fidivrs
xchg
inc
das
stos
pop
shll
add
pop
aad
mov
push
pushf
cmp
ret
mov
mov
ds
in
cmovbe
inc
mov
test
inc
xchg
testb
add
pop
jne
repnz
sub
pop
pop
pop
sti
popf
fisubl
cwtl
mov
popf
jmp
pop
ja
inc
pop
gs
jo
pop
xchg
mov
mov
add
dec
sub
jecxz
mov
in
or
jg
bound
mov
cmpsb
adc
xchg
pusha
dec
xlat
rcrl
push
push
adc
fimuls
and
mov
and
inc
aas
mov
mov
sbb
into
jo
or
mov
cmp
rcrl
and
pop
inc
fldenv
in
lret
dec
popa
dec
sbb
cmp
push
pop
popf
ljmp
push
push
jmp
xchg
adc
add
add
add
or
aam
jo
push
and
cmpb
cli
cmp
loope
std
int
cwtl
cmc
jnp
jo
data16
and
cmp
xor
mov
or
mov
mov
xor
inc
lods
dec
test
or
test
scas
pop
inc
dec
mov
hlt
cltd
outsb
dec
mov
inc
sub
stos
xor
movsb
jb
xchg
lods
and
fnsave
in
mov
sub
mov
sub
dec
cli
adc
cltd
lods
inc
or
mov
out
popa
mov
bound
jae
sub
rclb
sbb
push
jnp
xchg
mov
jmp
mov
push
into
clc
aam
les
dec
cs
rorl
ficompl
mov
push
into
inc
mov
movsb
sbb
repz
inc
ljmp
cmpsb
sub
mov
pop
js
ljmp
orl
dec
stos
subb
loopne
in
mov
sbb
adcb
mov
inc
imul
clc
and
orb
adc
dec
xor
lret
cs
aad
mov
xchg
or
insb
daa
push
xchg
inc
rcll
lret
scas
and
xlat
inc
cmp
fnstcw
int
mov
inc
aaa
mov
sub
sub
stos
xchg
jle
fimuls
cmp
dec
popf
je
inc
xchg
mov
fidivrs
lret
pop
imul
es
jecxz
popf
lock
add
aam
cmp
pop
adc
or
mov
sub
lock
fstl
lock
inc
jnp
jmp
add
cmp
sbb
and
mul
mov
daa
aad
jne
xchg
je
mov
mov
mov
lahf
filds
popa
push
sub
fs
cld
cmpl
scas
in
or
push
cmp
rolb
cmp
add
push
fs
xchg
or
fstps
jno
je
int
enter
popa
imul
stc
pop
or
cmp
sahf
dec
push
stc
jl
jmp
inc
cld
fnstsw
imul
xchg
sub
dec
out
lahf
sbb
into
mov
mov
ss
cmpsb
loope
adc
xchg
test
cmp
xchg
adc
xchg
lea
insl
sbb
and
mov
sub
ljmp
test
inc
fidivrl
andl
adc
jo
mov
in
rcrl
sti
ja
jl
mov
popf
sbb
adc
shlb
mov
pop
dec
les
xchg
add
dec
dec
push
cmc
scas
jb
shlb
popl
int
push
mov
ja
loop
fisttps
punpcklwd
add
movsb
loope
mov
pop
jmp
jecxz
punpcklbw
push
inc
pushf
mov
pop
in
insl
lock
aad
cmpsl
fwait
roll
movsl
into
mov
insl
scas
fisubs
test
adc
dec
push
pop
mov
or
lret
ret
mov
mov
xchg
sbb
or
repnz
popa
xor
into
mov
or
ss
push
and
mov
outsb
cwtl
mov
dec
jg
adc
sbb
inc
mov
dec
jle
lods
xor
notb
add
adc
jae
mov
test
mov
imul
loop
cli
jo
in
or
decb
push
fdivrl
mov
xchg
leave
lret
sti
icebp
or
or
std
push
jmp
mov
popf
xchg
fs
out
lock
fidivrl
out
pop
pop
jo
adc
outsb
fsubr
and
stc
imul
xor
pop
mov
lcall
or
add
frstor
outsl
mov
hlt
addr16
mov
test
xchg
xor
cs
ds
out
lea
cld
repnz
jb
das
cmp
mov
dec
loop
mov
test
rclb
push
and
xchg
sbb
push
mov
lcall
jg
xor
mov
push
push
outsb
and
stc
adc
sub
mov
fbld
ficoml
sub
push
push
mov
ljmp
jo
loopne
xchg
mov
icebp
ljmp
gs
jmp
out
cmp
mov
or
cwtl
fsub
enter
lods
sub
stos
jno
lcall
and
loope
pop
rorb
ror
mov
inc
int
and
mov
dec
out
sub
sbb
xor
aas
hlt
imul
cmp
icebp
ja
popf
mov
inc
cmp
jmp
jne
adc
xorb
je
push
jns
and
xchg
push
jg
je
pop
fwait
xchg
sub
mov
fmulp
loopne
fiadds
lahf
out
cmp
jmp
jb
or
les
loopne
fcmove
addr16
movsl
imulb
icebp
pop
rol
je
jae
jg
pop
sti
jb
int
dec
cmp
and
adcb
push
movsb
push
and
and
rcl
scas
in
ret
das
notb
xor
adc
mov
jo
shll
mov
adc
fistpll
add
push
js
adcl
clc
jge
leave
imul
pop
xor
icebp
fcompl
cmp
dec
sub
pop
mov
imull
out
rorb
and
push
icebp
fidivrs
fstpl
lahf
mov
push
mov
add
or
xchg
jno
and
stos
add
jle
ljmp
insb
mov
out
hlt
pop
arpl
jle
mov
out
es
add
and
jge
xchg
pop
pop
dec
mov
lods
daa
pop
dec
xorl
pushf
mov
push
aas
jp
xchg
iret
push
sbb
outsl
arpl
movb
insb
mov
sbbl
adc
pop
mov
les
ret
xor
std
pop
cmp
lret
pushf
lods
xor
adc
pop
jo
mov
jo
push
jmp
or
into
roll
test
inc
in
sub
push
cmp
cmpsl
sbb
mov
inc
aas
push
push
repnz
push
push
mov
aad
outsl
vpmaxsw
pushf
in
cmpsb
dec
je
pop
push
xchg
in
hlt
fs
or
dec
mov
sarl
push
mov
or
lret
jge
ret
mov
pop
inc
shlb
arpl
and
movsl
lcall
std
shrb
mov
fwait
aam
add
into
cmpsl
cmp
add
mov
or
pop
bound
inc
insb
sarl
pop
jnp
jg
mov
lds
sbb
jns
cmp
dec
mov
cmpsl
sti
outsl
pop
lret
xor
loop
sbb
mov
fsubrp
sub
cmp
xor
mov
sub
mov
mov
dec
mov
fs
dec
push
cmpsb
in
cmp
mov
pop
and
sarb
dec
gs
add
iret
movsb
jle
orb
mov
jmp
add
jg
jg
fisubl
call
outsb
and
aas
adc
cmpsl
sbb
js
pop
sbb
sbb
pop
dec
add
mov
jne
negb
outsb
lahf
sbb
iret
mov
shl
and
mov
inc
lds
dec
movsb
xchg
rorb
icebp
mov
sbb
pop
rcl
and
mov
xchg
popf
push
pop
enter
shlb
lock
jb
sti
cmp
loope
add
inc
xchg
and
int
push
mov
push
mov
stos
push
xchg
cltd
inc
or
mov
addr16
jns
insl
pop
adc
mov
imul
loope
adc
cmpsb
icebp
xor
cmpb
pusha
pop
mov
cmc
pop
cmp
pop
call
rorl
outsl
pusha
sub
push
pop
push
leave
xchg
fcompl
jo
xchg
push
pavgw
lahf
int
dec
fisubl
xor
inc
sub
dec
mov
and
mov
clc
lods
data16
xor
inc
xchg
test
jno
cmpsl
popa
dec
inc
and
lret
sub
ss
cmp
push
fadds
push
xchg
cmc
mov
add
jns
sbb
sub
mov
push
cmpsb
fmuls
aam
popa
push
dec
cmp
sbb
add
test
add
push
loopne
fcmovnb
dec
je
cmpsl
cmp
dec
jnp
add
push
pop
out
jbe
fistps
add
out
std
std
jp
ljmp
arpl
orb
in
sti
mov
mov
mov
dec
jb
sub
dec
and
xchg
adc
idivb
cmpsb
stos
repz
clc
xchg
test
leave
frstor
shrl
dec
dec
xor
add
xorb
addr16
faddl
addr16
ja
and
imul
icebp
xor
add
mov
dec
mov
or
mov
xchg
xchg
dec
cmovno
notb
fcmovnbe
hlt
dec
lds
sub
ljmp
es
sub
xchg
popf
push
orl
les
insb
pop
jae
les
sahf
pop
dec
in
push
aas
or
insb
lret
inc
mov
pop
cwtl
or
shrb
jp
xchg
dec
mov
pop
add
cmp
dec
xchg
lahf
rcrl
pushf
push
push
and
xor
jo
lret
lret
test
fstps
push
mov
jle
loope
fcmovnu
dec
cli
shr
add
push
push
dec
in
xchg
mov
out
imul
or
out
mov
lcall
add
add
adc
fwait
pop
loopne
pusha
fmull
mov
pop
enter
arpl
pushf
mov
ret
lahf
jge
out
push
xchg
or
ds
xor
jns
cs
mov
jbe
sbb
xchg
add
cmp
xchg
or
push
dec
jne
push
sahf
bound
jle
mov
outsl
sbb
ljmp
shlb
sbb
sub
cltd
jl
daa
rcrl
xchg
pop
adc
movsb
lcall
fisubl
mov
cmp
pop
xchg
jg
testb
popa
rcll
inc
mov
lcall
xor
icebp
mov
mov
pop
and
push
int
pcmpeqd
imul
push
sti
add
sbb
sub
fildl
mov
into
jno
xor
sub
aas
jl
jecxz
xchg
dec
push
inc
mov
pop
ljmp
stc
sbb
mov
std
inc
std
cmp
lcall
sub
cmpsb
jo
and
pminub
push
insl
pop
dec
adc
jl
cwtl
and
lods
mov
inc
push
dec
clc
jl
lea
inc
dec
jge
imul
test
orb
add
add
lods
dec
pop
jae
pop
dec
pop
push
adc
jns
xchg
cmp
push
sub
cmc
and
adc
add
mov
add
and
dec
jbe
add
imul
jbe
into
add
repz
jo
or
cmc
loope
outsl
imulb
nop
and
pop
out
movsl
dec
testl
cs
stos
cltd
shlb
imul
mull
loopne
movsl
adc
fisubs
sbb
jg
jg
jb
and
stos
iret
add
mov
lahf
in
loop
shr
or
pop
jne
mov
mov
pop
jns
imul
jae
inc
mov
mov
enter
into
in
repz
and
xor
push
fisttpll
cltd
cmpsb
mov
into
repnz
fisttpll
sub
aas
jns
insb
sbbl
pop
insl
push
push
jle
mov
sub
mov
pop
pop
adc
mov
mov
pop
and
shr
mov
mov
jo
xchg
popa
mov
adc
jnp
scas
fdivl
add
sbb
mov
ret
stc
xchg
xchg
xchg
pushf
jo
cmp
outsb
pop
mov
mov
xchg
out
test
fs
aad
push
pop
push
mov
in
mov
mov
fsubrl
mov
gs
push
popf
in
and
mov
push
data16
add
mov
lcall
sbb
cmp
sub
outsb
test
jnp
fcmovnb
pop
ret
pushl
imul
mov
addr16
cmp
pop
gs
mov
lods
xor
mov
and
sbb
sub
and
adc
mov
leave
fs
dec
test
test
cmp
repz
shlb
outsl
xlat
jmp
je
movsl
cli
lahf
ret
loope
cmp
push
add
push
pop
sub
cmp
rolb
cmc
sbb
outsb
dec
jmp
or
call
jl
mov
adc
cld
lahf
mov
push
rorl
inc
mov
jl
int3
mov
aas
outsb
cmp
add
inc
mov
mov
dec
insl
aad
loope
shrb
dec
jp
and
repz
fs
pushf
loop
sbb
inc
inc
rcrl
fwait
leave
adc
push
test
push
test
mov
and
daa
xor
pop
or
inc
test
pop
xchg
adc
imul
mov
xor
xchg
icebp
dec
adc
push
stos
push
in
inc
xchg
pushf
cmp
push
lahf
cmp
lret
mov
push
and
clc
lds
loop
cld
or
mov
sub
stos
inc
fisttps
adc
or
sub
mov
aaa
xchg
out
mov
pop
pop
mov
xor
loope
scas
pop
test
shl
fadd
mov
jl
sbb
xchg
loopne
popf
mov
or
lea
jae
pop
mov
or
outsl
aas
adc
adc
push
in
repnz
mov
enter
shl
jbe
push
xor
fsubr
sbb
fiaddl
subb
pop
jnp
int3
int
in
rorb
dec
adc
or
and
and
mov
xor
cmp
lret
cltd
rclb
lret
sub
dec
cwtl
dec
pop
cmpsb
and
clc
ja
mov
inc
push
iret
mov
pop
mov
jno
xor
lods
jmp
dec
sbb
lahf
xor
or
adc
addr16
ss
pushf
lods
add
sbb
mov
scas
dec
sti
mov
sbb
call
xor
fistps
test
bound
int3
xchg
pop
mov
mov
cmp
stos
xor
and
jne
aad
lcall
and
xor
shr
test
popf
push
in
cmpb
add
xlat
movsb
mov
sub
shll
inc
add
xchg
ds
dec
inc
faddp
mov
arpl
add
shl
loopne
inc
add
pop
lock
sbb
mov
xor
mov
sbb
cmpl
xor
test
push
bound
movsb
aas
popa
dec
vmovups
mov
add
aam
jne
pop
and
imul
lret
jp
mov
leave
jbe
mov
stos
ja
or
inc
movsl
insb
sbb
es
shll
add
dec
jp
je
xor
jns
out
mov
inc
subb
popf
push
test
int3
cmp
sub
mov
neg
in
out
or
cmp
mov
cmpsb
cld
stc
lds
outsb
inc
ja,pt
mov
adcl
aaa
push
xchg
cmp
and
jmp
clc
test
xor
ljmp
out
int3
repnz
repnz
lods
stos
iret
sti
add
stc
hlt
mov
fcmovu
test
xlat
xor
sub
cmpsl
jge
rorl
into
xor
shrb
sbb
push
popl
adc
xchg
jp
pop
dec
inc
ficoml
rorb
push
ljmp
cld
lret
or
dec
xlat
daa
cmp
push
dec
repnz
cmp
orb
je
in
test
push
repz
cmp
xor
ficoms
xor
sbb
adc
jns
sbb
int3
cmc
lock
sub
lds
cld
scas
lds
mov
mov
adc
mov
push
ljmp
dec
into
movsb
mov
sub
cmpsb
cltd
dec
fimuls
push
pop
mov
mov
fisubrs
loopne
stos
xchg
int
test
mov
loop
movsb
dec
dec
push
jge
in
loopne
xchg
popf
stc
lret
imul
cmp
mov
jns
int
pop
push
fpatan
std
fwait
insb
cmp
push
testl
mov
pop
mov
xorb
dec
test
cmpsb
add
sub
hlt
imul
jnp
pop
aas
clc
lret
popf
lcall
aas
xor
scas
mov
inc
mov
pop
add
cld
or
addb
sbb
icebp
es
dec
mov
push
jae
or
or
xchg
sti
cwtl
lods
lcall
js
mov
jmp
sbb
orb
mov
mov
mov
dec
push
sbb
push
cmp
stc
gs
cmp
mov
sbb
imulb
cmp
jb
es
outsl
cmc
xchg
aad
push
out
mov
inc
cmp
mov
dec
inc
mov
in
ljmp
andl
or
adc
jo
les
cmpsl
mov
arpl
in
fnstenv
or
aas
addr16
mov
or
dec
sbb
imul
sbb
sbb
jmp
notl
cmpl
cmp
in
cwtl
adc
nop
and
test
addr16
xchg
pop
or
sub
sar
dec
into
sbb
enter
sbb
outsb
rorb
rcrb
stc
stc
cltd
addr16
inc
add
cmp
cld
ljmp
mov
mov
iret
iret
or
add
out
leave
test
mov
cmc
add
mov
jge
arpl
adc
mov
xor
aad
pop
lahf
sub
push
ret
fidivl
mov
loope
adc
sbb
add
xor
cmpsl
mov
mov
xor
js
push
pop
scas
pushf
push
fisttpll
lret
rorl
cmpsb
pop
sub
cmp
adc
push
jg
push
test
sub
sub
fbld
insl
ret
or
jbe
xchg
pop
sub
pop
movsl
cmp
sbb
inc
shll
or
lahf
mov
fwait
cmpsl
cld
xchg
outsb
pop
pushf
dec
das
cmp
jp
cmp
jle
sub
mov
int
imul
sub
push
pop
pop
fldl
adc
mov
pop
lcall
pop
pop
imul
cmp
lea
pushf
inc
adc
call
test
xchg
aaa
xor
repnz
insl
test
insb
aas
pusha
xor
push
sub
dec
mov
test
xor
xchg
aam
testb
cmpsl
test
rolb
movsw
mov
inc
loopne
and
and
psubusw
lods
sarb
lahf
out
sub
inc
out
ss
jecxz
add
fdivrs
cli
shrl
pop
mov
out
pop
in
lahf
cli
jg
lret
outsb
sub
xchg
fcomps
leave
dec
jo
mov
ficomps
jae
and
ret
mov
lret
lcall
stos
in
out
adc
out
push
and
adc
js
mov
xor
xchg
jecxz
xorb
xchg
mov
pop
mov
push
xor
xlat
shrb
xchg
leave
and
sbb
push
movsl
sbb
push
pusha
jnp
push
ljmp
enter
fisttps
and
cmpsl
je
ret
xchg
dec
jae
jge
mov
mov
insl
jbe
adcb
cs
hlt
in
imul
scas
cmp
mov
and
sub
mov
sti
and
xor
mov
into
dec
pushf
xchg
adc
and
adc
ljmp
xchg
cmp
imul
rol
outsl
aad
cmp
scas
shll
addr16
fbstp
shll
xchg
inc
test
popa
push
pop
or
push
jp
sahf
xor
inc
or
pop
adc
mov
adc
xchg
cld
sub
dec
inc
outsb
dec
ud0
mov
call
push
je
fwait
sbb
mov
shrb
inc
arpl
mov
xchg
popf
jo
lcall
ret
xor
cmp
daa
cmp
mov
jg
lds
mov
fstps
and
jno
inc
sbb
pushf
lds
movl
stos
and
mov
mov
repz
pop
into
inc
lds
jmp
cld
imul
sbb
sbb
xor
pusha
xchg
mov
mov
push
pop
inc
outsb
cltd
or
push
insb
sub
mov
xor
repz
cmpsb
aaa
int
push
mov
cmp
pop
pusha
xchg
or
cltd
in
fildl
adc
push
cmp
add
push
scas
js
rcl
stc
adc
popa
jge
dec
pop
mov
sub
and
lods
adc
jecxz
inc
dec
daa
sub
mov
cmp
dec
mov
sub
popf
es
adc
xor
leave
mov
add
push
aam
xorl
cmpsb
loopne
rclb
adc
mov
out
shrb
sbb
xor
mov
dec
dec
mov
dec
pop
movsl
mov
inc
mov
mov
in
push
leave
aad
and
sahf
stos
xor
and
mov
pop
pop
mov
call
mov
test
shrl
fistpll
dec
hlt
jbe
cmp
xor
add
jne
lcall
iret
or
and
add
cs
jmp
test
ret
push
dec
and
scas
stc
sub
xabort
xor
int3
dec
cld
pop
mov
int
sub
xchg
fistpl
testb
pop
mov
aad
cmp
add
push
hlt
mov
repz
cli
xchg
mov
gs
or
je
pop
cmpsb
inc
dec
xor
xchg
jno
xchg
or
aad
cltd
mov
and
leave
xor
aaa
jns
cli
sti
call
int3
add
mov
xor
loop
adc
pushf
sbb
sbbb
lahf
mov
iret
add
jmp
push
xlat
subl
pop
cmp
shlb
add
adc
mov
inc
cltd
insl
lock
daa
xchg
sub
adc
stos
sub
pop
dec
fidivl
incl
lcall
jge
repnz
stos
fcmovnb
sub
out
lock
mov
enter
jnp
cli
pop
aam
neg
xchg
mov
inc
and
sbb
dec
outsb
jge
aaa
clc
cltd
jae
adc
shll
inc
add
sub
test
mov
pop
jb
leave
push
fs
addl
jno
int
fldcw
push
xchg
adc
out
pop
pop
movsl
fldl
out
lock
mov
fcoms
loop
jecxz
mov
iret
inc
pop
jne
adc
and
enter
lods
imul
mov
pop
in
aam
xchg
cmp
mov
inc
dec
data16
stos
insb
das
mov
pop
cmp
sarb
jp
std
lods
add
push
add
test
rorb
lds
daa
mov
xor
movsl
insb
dec
cmpsl
cmp
cs
push
inc
ja
movsl
sub
fnstenv
mov
imul
jnp
aam
dec
dec
insb
or
stc
cmp
xor
inc
and
cmp
sbb
xor
push
sub
pop
adc
push
rolb
in
outsb
mov
jnp
jecxz
add
sbb
cmc
cltd
xor
add
xor
adc
cmp
test
cmc
jle
mov
sbb
mov
mov
or
js
ss
sbb
pop
dec
jns
bnd
fs
mov
add
mov
pop
les
mov
add
xlat
ret
push
aaa
cli
les
fildll
cmp
testl
mov
cs
stos
inc
scas
jne
or
pop
lret
jne
jg
or
fdivrs
jns
pop
xchg
fcompl
enter
push
mov
leave
out
xchg
imul
lds
mov
sub
rcll
or
ja
jns
mov
mov
xor
and
clc
mov
in
xchg
mov
jg
in
xchg
sub
aas
jmp
in
icebp
scas
jecxz
dec
lock
out
and
cld
sub
push
dec
push
sbb
pop
adc
cmpsl
gs
ret
push
ljmp
icebp
adc
cmp
popf
jge
or
mov
loope
or
repnz
xchg
test
shrl
pop
mov
std
cld
insl
fsubs
test
in
cmc
jne
std
jge
xor
test
or
push
es
movsb
xchg
sbb
insl
pop
push
ljmp
jmp
xchg
cmp
sub
iret
in
mov
daa
icebp
lcall
sbb
xor
sbb
jb
roll
lahf
pop
pop
cwtl
ret
ss
sub
inc
pop
jl
imul
lea
int
pusha
sub
xchg
push
cmpsl
imul
xor
pop
cmp
mov
dec
lock
dec
inc
imul
pop
ficoml
popa
andb
hlt
out
jecxz
int
cltd
mov
adc
std
sarl
test
int3
dec
jo
adc
xlat
xor
xor
lods
inc
call
test
cmp
outsl
aaa
sti
adc
jae
sub
cltd
sub
mov
bnd
lds
add
mov
daa
sti
repz
xchg
out
arpl
jge
cmp
push
cmp
jmp
movsb
aaa
mov
testl
and
insb
repz
sbb
out
lods
js
push
aad
iret
and
sub
nop
cmc
mov
pop
or
pop
mov
mov
push
xchg
inc
sbb
xor
push
dec
and
dec
scas
jle
ja
mov
gs
ss
ret
mov
mov
pop
fsts
fs
sub
popf
add
cmp
bound
mov
clc
pushf
fdivrl
icebp
and
xchg
xchg
movb
push
addl
inc
inc
arpl
mov
cmpl
popa
sub
mov
rolb
pop
mov
push
push
pop
test
shrl
inc
cmp
jecxz
fldt
movsb
and
mov
in
movsl
adc
test
in
or
xor
jg
lock
data16
imul
gs
das
call
inc
dec
xchg
je
aad
ljmp
sar
sub
stos
sub
push
stc
and
dec
movsl
fs
or
or
and
cmc
movsb
in
insl
jo
aas
xchg
repz
add
or
daa
mov
mov
jle
adc
jmp
mov
inc
fisttpll
stos
je
lock
sbb
mov
imul
dec
push
repz
cmp
or
add
clc
test
mov
sahf
movsb
lcall
mov
popl
jno
push
xchg
test
push
lcall
xor
fdivr
mov
cltd
outsb
jno
push
loope
xchg
jae
flds
xchg
adc
pop
push
dec
loope
fisttpl
jg
xor
aas
or
pop
aam
sub
jae
pop
xchg
popa
inc
out
xchg
sub
adc
jecxz
orl
xchg
imul
aaa
mov
in
data16
push
cld
push
arpl
icebp
out
inc
mov
push
mov
cmp
or
xchg
mov
adc
and
bound
cmpl
dec
and
lret
std
mov
xchg
or
jbe
mov
xchg
mov
push
inc
push
xor
aaa
out
adc
jno
cmp
ret
mov
sti
or
sbb
call
cld
int3
sub
xchg
lret
sbb
jmp
inc
push
inc
sbb
lods
int3
scas
adc
bound
outsb
jge
cmpsb
mov
pop
xchg
adc
inc
shl
popa
adc
mov
test
sub
js
shrb
dec
sbbl
cmpsl
inc
dec
test
sbb
in
in
mov
add
xorb
arpl
pushf
or
repnz
in
jo
jbe
lahf
enter
sarl
int3
cs
mov
test
mov
cmp
notl
inc
int
and
xor
mov
push
mov
mov
in
pop
xor
jo
je
xchg
push
fdivrs
push
pop
mov
mov
frstor
sub
aad
push
in
rorl
repz
jge
jmp
lret
add
and
pop
fistl
push
gs
repz
movsl
pop
nop
inc
add
sarb
fimull
pusha
dec
xchg
pop
daa
adc
call
sub
jbe
add
in
sbb
sbb
int
sti
pop
cmc
and
outsb
dec
fsubl
inc
mov
dec
push
repz
and
jge
imul
daa
inc
cli
bound
fst
jno
ret
jnp
inc
adc
fstp
inc
mov
aam
jno
sub
ja
and
fimull
jecxz
sahf
mov
inc
dec
mov
inc
adc
xor
push
sbb
xchg
push
je
xchg
repnz
sahf
sub
xchg
mov
mov
popf
cli
cwtl
ret
cld
insb
push
rorb
mov
xchg
add
push
loope
fs
mov
fwait
pop
dec
push
xchg
or
sub
and
cltd
xor
or
testb
shl
jp
mov
inc
jne
cs
xchg
lcall
push
leave
mov
aam
or
ds
dec
call
stos
mov
push
das
jns
jne
fstpt
repnz
loope
imul
test
cs
adc
adc
mov
in
jo
call
and
add
insb
pusha
jge
leave
inc
ja
fdivrl
cmpsb
jae
andl
icebp
dec
fisubl
xchg
mov
scas
pop
mov
adc
mov
push
loopne
cmc
sti
or
mov
iret
sub
cmp
imul
jg
sbb
outsl
pushw
test
add
push
insl
lcall
jae
cmpb
sub
aam
sbb
mov
data16
push
fnstsw
stc
adc
mov
imul
lret
pop
das
adcb
and
sti
stc
mov
shll
add
pop
loope
daa
iret
out
cmpsl
cs
andb
jne
mov
fisubrl
into
or
aas
xor
push
inc
in
add
sbb
popf
ret
mov
or
mov
in
insb
xor
fistpll
or
jle
dec
orl
ljmp
jle
mov
test
mov
stos
pop
addl
ljmp
out
pushf
lcall
inc
mov
jne
cmp
pusha
inc
cmpsb
repz
leave
ja
push
xor
ja
mov
test
mov
mov
faddp
sub
movsl
push
imul
mov
mov
inc
push
addr16
lret
xor
addl
pop
bound
imul
jns
in
and
iret
popa
ja
add
movl
in
jg
ficompl
jnp
mov
sub
jo
inc
gs
dec
in
ds
add
or
popa
inc
js
and
jo
std
sbb
sub
cmp
xchg
sbb
rol
pushf
xchg
pop
jae
test
adc
dec
cmp
fs
push
jnp
dec
adc
test
add
aaa
adc
and
jecxz
rolb
push
mov
adc
xchg
mov
ds
idiv
cmpsl
fisubrl
or
dec
add
data16
pop
mov
fistl
sbb
push
out
push
push
das
negb
rcrb
cltd
xorl
fstps
imul
stos
sbb
and
std
jo
cs
push
dec
lods
aad
mov
mov
cltd
pusha
cmp
fstpt
and
test
jg
sub
jns
jbe
int
push
mov
outsb
cmp
imul
outsb
push
xor
dec
bound
push
pop
das
lret
test
popa
int3
aaa
push
in
mov
fbstp
insl
movsb
mov
pop
mov
icebp
pop
fdivs
mov
daa
xor
inc
pop
test
je
cli
stc
xchg
ss
out
xor
push
push
dec
dec
mov
mov
add
lcall
or
inc
call
push
mov
daa
xchg
mov
push
movsb
xor
aad
mov
pop
adc
cmp
mov
icebp
push
inc
enter
rcr
or
mov
xchg
inc
call
int
adcb
inc
ds
jns
adc
xchg
imul
ja
cmp
gs
in
rcrl
stos
inc
push
dec
daa
sbb
pop
ret
test
and
push
je
icebp
movl
jge
dec
mov
sbb
push
decb
movsb
and
stos
loopne
scas
jecxz
mov
inc
adc
outsb
xchg
push
mov
pushf
jge
or
fwait
popf
cltd
jae,pn
and
push
ds
pusha
xchg
bound
fs
enter
sub
loope
scas
jecxz
dec
jne
imull
xchg
leave
mov
rorb
push
dec
and
xchg
and
jo
test
fmul
pop
sub
out
scas
push
adc
imul
add
xlat
mov
add
xchg
fdivr
pop
jne
mov
cwtl
cmc
push
pop
fistl
ja
jae
jno
mov
imul
sbb
xchg
and
sub
inc
cwtl
stos
inc
jl
inc
imul
in
popf
push
xchg
arpl
divl
dec
int
sbb
pusha
pop
push
in
mov
loope
and
or
add
or
sbb
push
cmpsb
call
lret
adc
pop
cld
jo
mov
dec
call
inc
addb
in
mov
sbb
fisubrl
xchg
rorb
stos
or
hlt
outsl
hlt
daa
test
jg
dec
test
cmp
loop
dec
nop
int3
popf
cs
push
nop
movsb
mov
fildll
mov
ret
adcb
iret
pop
hlt
jnp
jnp
xchg
sbb
mov
cmp
mov
pop
jne
inc
push
in
pop
test
icebp
outsl
push
sub
xor
rorl
push
sbb
xor
subl
adc
push
add
inc
sbb
popa
xchg
push
jg
movsl
ficoms
movsb
or
inc
scas
push
daa
in
fdivs
roll
jb
push
mov
jmp
jmp
fwait
movl
adc
pop
in
cltd
dec
push
dec
sub
add
test
add
cmp
mov
jb
mov
pop
mov
aam
mov
outsl
xchg
aam
fsubl
insl
fcmovnu
dec
das
sub
xchg
mov
push
or
shr
cli
daa
int
push
xor
cld
mov
push
xchg
popf
popa
inc
jge
addr16
add
sbb
adc
jmp
hlt
fidivl
mov
into
cmc
scas
lcall
loop
hlt
dec
decb
pop
aam
lcall
sub
xchg
mov
fisubrl
test
in
xchg
mov
mov
out
or
jbe
les
call
cmp
adc
in
icebp
mov
sarb
adc
sbb
xadd
cmp
icebp
cmp
dec
loop
cld
sub
aas
sarb
lods
loope
push
out
sub
outsl
and
cwtl
imul
out
sub
stos
lds
push
loopne
lods
in
sbb
cmpsl
icebp
loop
or
and
mov
dec
sub
jb
nop
mov
add
jmp
pop
in
mov
test
cmp
cwtl
jno
hlt
fldt
mov
push
push
inc
mov
mov
mov
imul
mov
add
jge
mov
mov
fwait
lcall
inc
jecxz
pop
fisubl
jnp
roll
push
xorb
inc
mov
cld
aam
call
jnp
jle
inc
mov
out
push
inc
push
lcall
ret
jmp
and
idivl
mov
out
lcall
and
cmpsb
sti
add
gs
jecxz
popa
sub
mov
enter
movsb
stos
sub
push
push
movsb
dec
push
pusha
push
mov
and
mov
or
mov
andl
xor
hlt
cwtl
cmp
bound
push
mov
xchg
decb
pop
fsts
call
mov
and
lock
cmp
xor
iret
sbb
aad
push
call
iret
sbb
repz
pushf
cmp
scas
sub
in
or
xchg
inc
imul
mov
lea
inc
jl
push
jns
mov
push
rol
pop
xor
add
in
or
lds
sub
jg
outsb
test
xchg
pop
idiv
sti
out
fldl
or
or
cmpsb
lea
sub
push
mov
add
dec
push
mov
nop
pop
lret
xor
int
subb
mov
pushf
xchg
pop
movsb
or
bound
outsb
sub
adc
cmp
push
adc
addps
mov
pop
popa
cmpb
in
fisubrl
push
sub
xor
xor
sbb
insb
add
test
xchg
pop
jp
xchg
mov
push
ja
test
jge
xchg
outsl
call
cwtl
arpl
repnz
sti
dec
xor
jecxz
loope
gs
mov
into
fists
push
mov
pop
add
mov
cwtl
sbb
cmp
scas
jae
lods
das
mov
sub
int
mov
cmp
push
cltd
pop
cli
xor
mov
cmp
push
sbb
xor
pop
or
jne
xchg
mov
jge
mov
lods
subl
sbb
gs
cwtl
rcll
popa
lods
mov
push
fsts
insb
mov
test
xor
andb
fimuls
push
jno
inc
inc
xchg
cmpsl
dec
mov
sahf
adc
shrl
test
add
jae
or
ljmp
cs
fadds
jbe
fnstenv
insl
popf
aaa
cmp
arpl
bound
std
ret
aam
enter
ds
or
push
stos
in
inc
andb
pop
psraw
movsb
dec
vcvttsd2si
cmp
dec
dec
scas
shlb
mov
pop
xor
xor
pop
cwtl
movsb
cmp
test
repnz
cld
cmpsb
mov
add
cs
jp
xchg
pushf
cs
setns
adc
rcll
es
xchg
test
push
sub
and
sub
mov
mov
cmpsl
out
out
repnz
jns
movsb
mov
dec
nop
mov
out
fistps
or
scas
jnp
inc
js
add
jmp
inc
ret
add
cmc
mov
lds
test
lods
in
mov
cld
jge
in
mov
xor
sahf
daa
dec
push
sub
shrb
or
push
cmp
xchg
insb
jecxz
xor
cmp
in
idivb
popf
adcb
and
or
and
cld
pop
mov
xchg
pop
insl
out
xchg
pop
stos
cmpsb
mov
es
jecxz
sub
insb
dec
pop
pop
test
clc
scas
into
das
or
mov
cmp
cmp
pusha
call
dec
adc
pusha
or
xchg
ret
mov
inc
orl
jl,pn
add
xchg
rcr
pop
add
sbb
std
pop
dec
dec
mov
push
push
aad
aam
and
add
sub
movq
pop
je
daa
pop
dec
dec
and
xchg
adc
rol
ds
fmull
mov
pop
movsl
test
rol
shll
clc
mov
dec
or
cmpsb
mulb
dec
out
mov
inc
test
or
fildl
test
mov
sub
movsb
popa
push
mov
gs
xor
in
jmp
sbb
adc
gs
push
imul
inc
jne
sbbl
or
dec
dec
push
jecxz
mov
xor
mov
mov
out
sub
movsl
fstl
mov
cmp
jp
jg
jecxz
and
dec
push
mov
pusha
sbb
inc
mov
mov
loop
lahf
cld
sub
out
fnstenv
adc
cltd
xchg
inc
inc
push
lock
mov
xchg
in
mov
fisttpll
add
pop
ret
std
inc
sub
in
sbb
jecxz
fbstp
or
das
xor
jge
incb
xchg
mov
loop
mov
add
pop
sbbl
add
xor
mov
mov
sar
ja
aaa
xchg
lcall
xchg
add
mov
rorb
xchg
out
enter
inc
mov
inc
insl
dec
pusha
loop
pop
mov
ja
add
xorb
inc
inc
xchg
inc
ljmp
iret
ss
push
loop
clc
leave
pop
das
gs
sbb
mov
cmp
rcll
out
and
stos
aad
cmp
nop
sbb
push
push
je
xchg
mov
data16
add
xbegin
xor
xor
push
push
inc
mov
fdivrp
mov
pop
mov
xcrypt-ecb
cmpsl
dec
popa
pop
xlat
leave
sbb
or
add
sbb
arpl
fbld
not
popf
iret
in
jno
mov
adc
and
ja
cmp
mov
pop
jae
dec
lea
mov
push
lds
rorl
repz
dec
into
movsb
jbe
leave
ljmp
test
js
add
jge
in
sahf
fidivrl
jno
pop
xor
mov
mov
adc
ljmp
xchg
sub
mov
mov
test
popa
notb
push
sbb
xor
dec
add
stos
sub
ljmp
adc
adc
fwait
rcrl
test
mov
mov
xchg
jno
insl
popf
and
loopne
xor
movsl
mov
ret
add
leave
lods
ret
cmp
out
cmp
dec
sbb
cmp
daa
xor
ret
xchg
jp
push
sbb
mov
pop
lods
std
mov
inc
cmp
repz
repz
in
xchg
rcrl
fsubrs
sbb
das
xchg
in
lock
aad
fs
pop
ficompl
or
mov
dec
adc
push
jno
cwtl
call
rcll
xor
cli
mov
scas
push
nop
and
aad
sahf
stos
push
add
inc
in
scas
lods
repnz
xor
push
push
xchg
mov
lcall
inc
fimuls
test
aam
out
lods
nop
fcompl
imul
clc
pop
jne
mov
xor
pop
int
pop
imul
mov
bound
sbb
adc
and
test
push
cltd
test
dec
cmc
or
stc
jl
pop
dec
sbb
adc
cmp
add
mov
out
insl
les
or
jecxz
or
pop
cmp
sbb
cwtl
xchg
vpsubsw
mov
mov
xor
shlb
repnz
gs
jge
movsb
ljmp
xchg
sbb
in
rcll
add
es
insb
lds
pop
sahf
loop
lock
out
jp
ss
fcoms
cmp
sbb
xchg
ja
cmpl
xchg
inc
cltd
nop
mov
jl
pop
int3
bound
jp
movsl
cmp
push
xor
ret
repnz
ret
jnp
in
and
pop
in
fbstp
repz
sbb
sbb
inc
lret
mov
test
dec
ds
lret
nop
es
ret
jmp
cmp
xchg
in
fdivr
mov
movsl
adc
mov
sub
sub
jne
cmpsl
testl
decl
jl
dec
mov
mov
out
popa
popf
in
xchg
cmpsb
cmp
push
adc
and
daa
shl
test
addr16
jl
data16
pop
dec
adc
jae
mov
test
push
pop
dec
sub
jecxz
jbe
push
loope
lods
mov
in
sbb
dec
dec
mov
mov
shlb
pop
mov
and
push
xchg
aad
nop
cmp
movsb
pop
aas
cltd
push
sbb
fcompl
xlat
push
movsb
sbbl
dec
xor
daa
xchg
xor
outsb
xor
xchg
adc
jno
add
sbb
out
dec
jns
xlat
xor
in
loopne
push
insl
push
push
or
xor
ss
hlt
sub
pop
pusha
adc
mov
pusha
jp
mov
push
or
stos
cmp
hlt
out
and
and
adc
or
jmp
insb
sbb
and
fidivs
test
mov
sbb
sbb
xchg
les
inc
cli
sub
dec
cmp
pop
jp
jne
pop
cmpsb
repz
lods
mov
adc
icebp
jo
add
add
pop
inc
fnstsw
orb
jns
and
mov
aad
sahf
rorl
mov
rcrl
push
rclb
adc
cmp
add
xchg
in
cmpsl
mov
orl
pop
cmp
lock
or
push
dec
popf
mov
dec
call
or
pop
or
mov
mov
js
lods
pop
popf
imul
cmp
sarl
int3
lods
inc
ret
mov
fwait
call
std
mov
lret
shll
add
test
insl
andb
mov
clc
mov
fsubrl
sub
lock
cmp
das
jmp
leave
mov
lock
mov
adc
dec
fs
ss
pop
in
push
sbb
cld
lret
enter
ds
jnp
mov
dec
xchg
or
daa
mov
leave
test
aaa
roll
jmp
hlt
xor
rcrb
in
mov
xchg
mov
int
and
lret
stos
cmpsb
adc
jns
push
jno
cwtl
jl
cmpsl
fbld
test
mov
or
fadd
stos
lcall
ss
daa
pop
xchg
xchg
lea
out
push
outsb
mov
mov
mov
cmp
sub
test
dec
std
dec
and
push
xor
fnstsw
dec
mov
lahf
out
mov
scas
ja
lds
mov
jmp
icebp
pop
or
jge
add
shr
rcrl
xlat
inc
adc
fstps
mov
sarl
sub
xchg
inc
mov
dec
sbb
cmp
insl
mov
mov
add
xorb
test
testl
jecxz
aad
pushf
scas
xchg
mov
jecxz
mov
repz
andps
loop
outsl
sbb
pusha
or
ret
xchg
test
dec
inc
sub
js
mov
or
adc
add
sar
mov
mov
sbb
ss
es
dec
sub
fsubl
mov
into
pop
push
mov
jp
cmp
add
mov
dec
fisubl
mov
pop
sbb
inc
lahf
push
out
leave
fistps
mov
fnstsw
dec
inc
out
xor
lea
test
shlb
adc
cmovae
pop
sbb
xor
out
jp
jne
or
popl
push
push
mov
divl
jecxz
xchg
lds
dec
fsqrt
lods
enter
popa
pop
push
sub
pusha
cmp
dec
pop
dec
or
mov
jmp
ja
aad
cwtl
cmpsb
push
xorl
idivl
push
std
sbb
mov
and
into
mul
jg
dec
out
mov
or
fs
stos
inc
lret
dec
fwait
push
cli
cmpsb
and
into
xchg
xchg
subl
pushf
mov
or
sbb
repnz
loope
cmp
xor
cltd
cltd
add
es
stc
push
xchg
sbb
and
mov
adc
iret
xor
popl
cmp
cli
cs
in
bound
mov
hlt
movsb
dec
test
aad
or
or
sub
mov
aas
loopne
mov
inc
mov
test
lahf
out
or
aaa
fcomps
mov
repz
push
push
pop
add
and
jae
fwait
xorl
sub
test
xor
push
mov
mov
out
dec
fs
add
jo
ror
sbb
sbb
or
aam
iret
xor
hlt
arpl
popa
insl
bound
popf
or
mov
pop
std
sahf
dec
sub
mov
sahf
mov
sbb
xchg
aaa
jnp
call
jo
xchg
lcall
into
sahf
std
cmp
xchg
pop
fidivl
or
xorb
jmp
iret
mov
and
inc
and
aaa
aaa
mov
test
xchg
btr
rcrl
cltd
mov
loop
in
inc
outsb
js
push
adc
and
in
xchg
and
dec
js
int3
fnsave
loop
orl
dec
xchg
repnz
js
rcl
outsb
jmp
pop
jle
cltd
repnz
fldt
inc
jb
imul
xorb
mov
mov
clc
add
jmp
test
mov
lock
cmp
add
popa
mov
push
lock
mov
xor
loop
mov
xor
fdivl
rolb
mov
out
jecxz
insb
jbe
outsl
lods
loopne
dec
mov
testb
rcl
mov
jg
pop
jnp,pn
push
repnz
xchg
add
sub
sub
xlat
inc
cmpsb
das
fmul
cmp
xchg
and
jp
mov
in
jle
sub
adc
mov
cltd
les
pop
sti
add
loope
pop
repz
scas
mov
mov
and
push
out
cmp
cld
add
loope
dec
jb
push
shlb
aad
push
cmp
test
mov
js
push
xchg
mov
and
mov
mov
test
add
xchg
repz
sbb
aaa
lcall
sub
popa
popf
aam
adc
int
aaa
leave
mov
jnp
fidivl
mov
cmp
outsb
out
sub
and
fists
hlt
sahf
int3
les
mov
add
sbb
ss
popa
daa
fildll
cmp
hlt
adc
rol
pop
call
fnstcw
sbb
push
notb
test
push
cmp
daa
mov
fsubrp
mov
imul
pushf
stc
or
jo
push
mov
dec
icebp
fcomi
or
ss
mov
stos
pop
aas
int
dec
fidivl
mov
aam
js
inc
mull
lret
mov
pop
adc
rolb
dec
jg
mov
add
xor
jp
repz
ret
pop
xorl
mov
mov
mov
sub
xor
push
xchg
cs
enter
xor
cwtl
xchg
jp
add
lods
cwtl
cli
and
inc
xor
inc
cltd
loop
mov
add
xchg
divb
jmp
mov
cltd
dec
or
pop
dec
loope
rcll
push
jb
mov
bound
cmpsl
in
pop
lock
nop
ljmp
xchg
inc
add
imul
jne
mov
insb
fildl
repz
push
mov
xchg
in
mov
xchg
mov
insl
rcrl
in
cmc
les
mov
sub
xchg
jg
icebp
push
ja
aad
and
ret
push
push
cmp
push
roll
mov
jle
jo
sub
lock
arpl
shll
xchg
mov
push
dec
xlat
mov
iret
sti
repz
out
iret
mov
in
push
adc
into
dec
in
jbe
inc
movsb
aas
stc
aas
xchg
pop
fcoml
mov
insl
add
fldl
lcall
aas
cmp
and
push
mov
out
inc
mov
jmp
scas
dec
gs
dec
nop
mov
push
lret
add
in
orl
mov
mov
aad
popf
inc
js
ja
lret
sbb
pusha
mov
movsl
icebp
inc
int3
ror
add
aad
mov
adc
fildll
xor
mov
pop
xor
push
pop
xchg
jbe
dec
aam
addr16
sbb
jl
dec
fbld
pop
out
cmc
push
dec
adc
dec
rolb
lcall
jmp
jge
pop
dec
mov
aam
andl
mov
push
pop
sub
cmc
mov
push
jge
jg
outsb
or
mov
push
push
loopne
mov
inc
sub
and
and
sbb
pop
movsl
jle
cmp
or
fcoms
test
popa
mov
push
inc
push
imul
xchg
add
mov
add
mov
outsl
testb
mov
mov
pop
subb
je
and
scas
sarb
inc
stos
loop
sbb
stos
mov
loop
jno
cld
mov
mov
cltd
inc
lds
testl
and
sub
lret
mov
gs
push
dec
jo
xlat
test
bound
nop
xchg
daa
aad
clc
js
es
inc
loope
push
sbb
movsb
push
or
add
scas
xor
scas
xchg
sti
movsb
jb
mov
xor
cwtl
lret
lret
jnp
push
dec
cmp
adc
mov
mov
or
ret
add
mov
mov
loop
xchg
sub
das
clc
push
daa
or
test
jb
and
mov
lret
push
js
in
push
movsl
test
stc
add
jge
push
movsb
into
test
fstps
mov
mov
sbb
mov
cs
ja
pop
loope
loop
xor
call
mov
divb
or
pop
dec
xor
push
sub
cli
inc
leave
aas
dec
push
das
shlb
push
jecxz
dec
jb
sub
cs
mov
sub
xchg
in
sbb
dec
mov
or
or
out
ds
clc
push
lock
pop
mov
jmp
mov
js
cmpsl
mov
adc
inc
sahf
rorl
fstps
adc
test
push
testl
adc
icebp
loop
adc
mov
ret
shl
fdivr
mov
dec
mov
scas
cmp
ss
mov
sti
and
les
out
outsb
or
push
enter
hlt
in
fucom
mov
shl
orl
push
loop
adc
stos
js
mov
shlb
inc
jo
loopne
inc
insb
push
pop
adc
pushf
jle
mov
rorl
stc
mov
std
pop
mov
ljmp
sti
push
mov
insl
mov
push
fwait
sub
das
fidivl
scas
mov
cwtl
mov
insl
pop
or
pushf
add
nop
test
mov
in
test
jp
fcomi
inc
xchg
mov
xor
in
fidivs
add
aas
sub
lock
subb
inc
mov
sbb
sub
loopne
popa
es
nop
jns
mov
fcom
or
loopne
dec
jp
adc
movsl
jge
insb
shlb
pop
pop
loopne
ret
push
nop
lods
adc
jno
rol
into
xchg
push
test
mov
ss
sub
loop
push
adc
or
mull
dec
stos
stos
jae
mull
imul
xchg
sahf
jmp
mov
ficoms
fwait
cld
mov
inc
shl
sbbb
faddl
les
push
cli
mov
jbe
cs
fwait
pop
outsl
stc
lea
xchg
shl
xor
sbbl
fwait
call
push
loopne
fisttps
je
inc
pop
imul
adc
aam
out
mov
lret
arpl
cmp
jle
aad
js
mov
mov
and
cwtl
jno
call
outsl
mov
test
add
addr16
rcrb
mov
scas
je
add
addr16
aam
adc
push
and
ds
jne
daa
arpl
jno,pt
test
sti
stos
mov
icebp
mov
jecxz
insb
jecxz
xor
iret
in
xchg
and
in
cmc
mov
mov
mov
xor
and
aad
jns
es
dec
xchg
repnz
add
xchg
inc
push
jecxz
out
push
lahf
sub
push
das
lret
push
inc
push
add
pop
cs
and
out
and
mov
ret
iret
mov
insb
aam
je
rcrb
sbb
test
push
and
xor
add
sub
dec
and
cmp
mov
orb
push
jl
push
push
mov
mov
add
pop
hlt
imul
add
scas
lods
repnz
leave
jae
dec
call
sar
out
stc
jae
xor
dec
xor
sarb
ss
dec
push
jecxz
cs
jno
push
mov
dec
shl
or
add
sub
inc
push
in
fsts
add
jae
dec
test
inc
sub
testl
lret
mov
jns
add
inc
movsb
adc
or
jmp
and
push
mov
xor
int3
repnz
mov
and
xor
iret
int3
icebp
cmp
in
lret
rclb
into
outsb
inc
icebp
call
push
rcr
mov
adc
cltd
jnp
fwait
test
int
fstpl
add
repz
out
mov
dec
js
fsubl
cmp
sbb
sub
jge
aad
jle
mov
mov
push
nop
daa
xor
push
pop
add
fwait
xchg
add
into
add
xor
sbb
std
and
shl
inc
jne
jmp
call
add
test
ret
jl
sbbl
int
add
sbb
jge
nop
and
xchg
ja
push
cmc
dec
lock
adc
xor
and
add
adc
out
movsb
push
or
lret
sbb
mov
lods
pop
push
xchg
dec
loopne
jg
dec
cmp
aad
stos
in
ss
icebp
ds
inc
cld
mov
test
bound
stos
popf
xlat
in
loop
mov
repz
mov
lcall
or
jp
decl
add
in
mov
cmpsb
mov
add
sbb
es
jp
add
outsb
lods
vmulpd
call
mov
les
aas
or
in
xor
cmp
adc
mov
cmp
xor
out
insb
dec
scas
pop
mov
lds
xor
lret
in
jecxz
bound
lock
lahf
movsb
xor
and
sub
loope
test
jmp
int
fs
sub
push
mov
jo
pop
xchg
dec
fldcw
ds
cli
mov
loop
jno
lret
xchg
mov
inc
shrb
out
push
push
out
outsl
adc
repnz
outsb
sti
inc
decl
add
or
mov
adc
test
push
cmc
xchg
fcoms
imul
rcrb
mov
push
mov
imul
movsb
sbb
hlt
fbld
cs
xchg
jg
dec
pop
xor
insl
es
repz
scas
mov
mov
cwtl
or
jp
out
lods
mov
jmp
pop
sbb
or
imul
fwait
pop
ret
pop
lds
xchg
lds
and
mov
sub
orb
sbb
jns
js
test
loope
imul
push
sbb
xor
mov
adc
pop
hlt
and
cltd
dec
loope
inc
sub
inc
cmp
and
dec
mov
mov
es
push
enter
popf
imul
sub
iret
lds
pop
aam
ja
pop
cmc
and
gs
and
pusha
in
xchg
sbb
sbb
and
dec
sbb
fistpl
push
idivb
pop
icebp
jecxz
adc
std
into
cmp
push
jo
inc
adc
loop
mov
scas
jmp
out
inc
mov
add
add
or
fxch
and
mov
xchg
fldenv
or
adc
je
jo
je
pop
data16
dec
call
dec
xchg
cmp
sub
les
sub
sub
fs
jmp
popf
pushfw
stc
sbbb
push
stos
jo
popf
fistl
lods
lods
push
cld
sbb
cmpsb
adc
add
dec
jb
add
repz
xor
push
dec
inc
sub
inc
stc
push
imul
jecxz
out
rorb
in
add
lahf
lcall
scas
push
xchg
mov
test
xor
jb
and
jo
popa
jle
sbb
dec
add
cmp
sub
sarl
pop
pop
pusha
mov
push
xor
mov
push
or
lret
adc
test
popa
cli
notl
adc
push
sbb
dec
fcompl
fidivs
je
cmp
sbb
lods
lods
inc
mov
sbb
push
shrb
pusha
mov
dec
dec
push
mov
inc
dec
sbb
inc
xchg
das
pop
or
adc
adc
dec
cs
ss
fistps
inc
int3
cmp
cmp
and
out
adc
shll
fsubrl
adc
sahf
iret
jmp
jb
and
test
shlb
add
dec
push
andb
lcall
xor
cs
mov
mov
ret
cmc
xor
sbb
fstps
mov
lcall
sti
pop
lock
lds
xor
and
in
test
jecxz
je
aas
inc
jb
ficoml
jp
adc
shlb
xor
xor
sbb
cmpsl
cltd
icebp
shlb
cmp
imul
or
movsb
cmpsl
mov
sbbb
push
xchg
ret
dec
push
rclb
xor
sub
xchg
adc
cld
je
dec
rorl
and
and
fst
stos
loope
lock
lods
test
out
loop
outsb
pop
out
dec
sbb
mov
push
enter
pop
mov
stos
pop
mov
sub
mov
jecxz
imul
shl
cmpsb
cli
ss
or
lods
cmp
stos
test
je
push
fucom
mov
loope
push
imul
pop
out
fcompl
loope
in
jle
cltd
es
pop
mov
sub
sbb
inc
mov
test
mov
call
scas
or
mov
outsl
add
dec
sbb
dec
mov
fwait
movsb
inc
add
ja
cmp
sbb
popf
mov
stos
shlb
xchg
insb
dec
ret
push
loope
ja
push
mov
mov
jo
xor
cli
or
push
push
das
movb
mov
sub
pushf
mov
inc
sbb
xchg
insl
out
inc
std
das
int3
test
mov
repz
fdiv
test
cmp
and
cmpps
push
loopne
cmp
sbb
xchg
movsb
mov
lret
das
mov
sbb
arpl
mov
rcll
sbb
outsb
gs
leave
lock
xor
ja
add
sbbl
imul
call
xchg
mov
out
sub
sbb
jns
or
fwait
xchg
ja
or
jp
jl
or
dec
mov
in
sub
sub
sub
loop
std
aaa
enter
pop
outsl
aad
in
addb
mov
cmpsb
cs
rcll
adc
pop
pop
fistps
movsb
test
add
push
mov
mov
mov
shr
xchg
jae
aaa
std
jmp
xchg
pop
mov
sahf
mov
and
push
jmp
mov
cmp
pop
mov
pop
fdivs
xor
jge
dec
cwtl
inc
or
lret
loope
sub
leave
lret
mov
xchg
jecxz
inc
in
dec
lods
int
dec
sub
jbe
jae
add
dec
jbe
push
lret
sbb
xor
iretw
inc
ljmp
cmpsl
inc
sbb
lcall
ds
push
sub
js
push
xor
sub
insb
mov
dec
cmp
nop
loope
testl
mov
add
in
lret
movsl
jns
pushf
mov
jge
or
lret
dec
or
xlat
pop
in
jmp
or
mov
bound
stos
fnstcw
push
lods
insb
ret
mov
aaa
push
movsb
mov
xchg
lods
sub
push
xchg
ret
clc
dec
cmp
mov
mov
mov
sub
popl
jae
insb
hlt
mov
ja
icebp
cmpsb
mov
sbb
scas
ret
pop
lret
sub
jb
shl
xchg
sbb
add
cmp
cmp
jmp
mov
inc
xor
test
sbb
loope
push
leave
mov
fimuls
xor
xor
cmp
stos
enter
add
add
add
in
lods
pop
repnz
cli
ja
gs
arpl
push
negl
incb
jnp
xor
fists
in
push
sub
arpl
insb
pusha
xchg
aad
adc
fwait
adc
add
lret
jp
lcall
lea
jo
std
mull
xor
sbb
shlb
andl
cmp
mull
or
jae
mov
mov
cmp
pop
shrb
inc
push
adc
sarl
imul
add
push
std
imul
adc
dec
popa
call
mov
jb
dec
popa
inc
pop
in
push
jb
arpl
daa
jle
test
adc
nop
in
xorb
outsl
dec
cmp
dec
lods
jnp
dec
push
jge
add
sub
test
cmpsl
mov
jmp
ret
mov
inc
repnz
mov
out
inc
and
mov
inc
shrl
adc
lret
dec
test
fidivs
aam
pop
shl
es
xchg
push
and
mov
mov
push
push
push
hlt
es
adc
push
dec
rcll
ret
push
and
std
shll
lock
gs
std
js
add
xorl
arpl
pop
lods
dec
cs
dec
jb
ljmp
dec
jp
roll
cltd
inc
cmp
mov
in
lret
hlt
and
mov
imul
adc
dec
add
dec
lea
mov
sbb
lods
add
aad
clc
in
push
dec
nop
mov
dec
cli
xor
jns
ret
into
loopne
lea
lds
jg
add
push
mov
imul
into
ret
mov
inc
cld
cwtl
leave
out
outsb
or
pop
jo
mov
pop
in
lods
adc
mov
jae
int3
cmpsb
lret
das
xchg
clc
stos
andl
push
xor
popa
xchg
cltd
xlat
add
incl
nop
les
add
movl
lds
push
jmp
jg
in
stos
addr16
push
mov
xchg
sbb
mov
sbb
sbb
lret
cmp
fsubrs
inc
xlat
shlb
sahf
pop
dec
mov
jo
mov
mov
lcall
pop
mov
sbb
mov
int3
xor
aas
jl
scas
jnp
pop
push
shll
out
stc
pushf
rcrb
orl
sub
fs
xchg
rorl
les
in
jp
inc
orl
out
sbb
sti
mov
out
mov
or
bnd
push
out
icebp
addl
lahf
lock
lock
daa
push
aam
pop
imul
and
pusha
push
fsincos
test
in
aas
xchg
xor
repz
test
lret
rcll
std
mov
fiaddl
inc
fisttpl
push
cld
and
je
rorb
fcmovne
jge
mov
inc
push
inc
in
and
imul
imul
sub
cmpsl
call
push
jbe
scas
shrb
dec
test
inc
ret
lret
fisubrs
push
leave
mov
fidivs
pop
test
les
out
mov
fdivl
leave
inc
jb
mov
rol
and
std
jl
cmp
mov
repz
fnstenv
out
mov
aaa
sub
pop
outsb
sbb
int
fdivl
sbb
rcl
mov
jnp
xchg
mov
fwait
bnd
mov
inc
sub
les
shl
push
xor
jae
jbe
or
and
arpl
inc
jno
inc
cmc
int
subl
mov
pop
ss
les
inc
dec
xchg
sub
aam
mov
sbb
sarl
mov
or
lds
cwtl
jbe
pushf
pop
adc
inc
fdiv
cltd
idivb
rcll
sbb
test
xchg
inc
pushf
mov
das
les
loope
inc
lods
scas
jb
push
int
out
mov
cmp
mov
add
mov
rol
and
mov
sbb
sub
outsl
add
lahf
dec
add
cld
insb
cli
int3
repz
in
mov
xor
sti
jae
push
sbb
mov
jns
sub
sbbb
sbb
mov
push
pop
jo
mov
aas
sub
push
out
xchg
pop
jne
cmp
push
jg
pop
cwtl
dec
loope
pop
aad
mov
cmpsl
pop
aaa
xchg
xchg
cmp
stos
ja
das
sub
in
lret
mov
mov
in
xchg
mov
push
ret
inc
enter
test
imul
and
das
dec
mov
fwait
push
jno
popf
sub
div
popa
lahf
es
mov
scas
lods
pushf
ja
scas
inc
adc
popf
mov
in
mov
std
jle
push
inc
inc
in
dec
fldcw
jno
fwait
sahf
adc
jo
sub
dec
sbb
cmp
inc
cltd
roll
pop
mov
mov
insl
in
out
jae
pusha
pop
fstpl
rcrb
add
les
cmpsb
push
jbe
out
mov
fistpl
bnd
lea
dec
andb
js
test
scas
push
hlt
mov
movsl
xchg
stos
outsb
fiadds
outsl
je
cld
xor
pop
repz
stc
rcll
mov
jp
xor
push
sub
adc
popf
incl
cmp
dec
mov
js
in
inc
jge
xchg
xor
sarb
in
xchg
ljmp
cld
or
test
pop
push
pop
sub
push
push
bound
mov
js
and
xchg
ss
sbb
mov
or
cmp
push
andl
in
pop
inc
add
faddl
pop
js
push
test
add
jp
cmc
insb
jns
movsb
bound
icebp
jmp
mov
dec
mov
xor
sbb
nop
inc
xor
xlat
outsl
inc
in
movsl
xchg
pop
and
pop
and
push
loopne
in
lods
mov
lret
mov
js
mov
push
xor
cmc
lods
les
or
or
sbb
dec
cmp
dec
idivb
push
xor
and
insb
mov
hlt
xchg
repnz
jae
sub
lahf
push
push
xchg
pop
xchg
push
nop
or
scas
out
je
clc
dec
or
roll
push
daa
icebp
shlb
icebp
loop
ret
dec
jg
stc
ljmp
in
mov
jp
fstps
fistpl
lret
jecxz
jo
stos
cmp
sub
ja
daa
sahf
sarb
mov
lea
dec
imul
ret
mul
mulb
cmc
push
xor
icebp
cmp
in
lock
sahf
test
in
xor
xchg
daa
nop
ljmp
es
bound
and
stos
outsl
sahf
pop
cmpsl
call
cld
jge
nop
pushw
xor
xchg
das
ljmp
sbbb
inc
call
adc
adc
inc
push
lock
lahf
in
and
push
pusha
fnstsw
ljmp
add
mov
push
addr16
lahf
xor
pop
loopne
test
movb
cmp
scas
push
popa
sarb
push
hlt
movsb
pop
adc
cmp
out
cmp
mov
xor
xor
mov
xor
mov
jmp
and
enter
jle
adc
jbe
push
test
outsb
cld
jmp
pop
cmp
adc
in
jp
insb
div
jle
js
jge
out
inc
daa
roll
fucom
push
inc
sarl
inc
fisubl
je
inc
cmp
mov
jbe
push
pop
ljmp
mov
test
sub
mov
push
or
or
jl
jno
aam
insl
and
lret
add
xchg
jmp
mov
push
and
scas
push
out
in
dec
or
push
sar
fstl
push
inc
mov
stos
mov
jle
js
fs
jnp
loope
stos
jnp
sub
xorl
jbe
sub
lret
xor
fstpt
ret
je
test
lret
out
lds
xor
stos
xchg
ja
push
hlt
mov
and
push
pusha
jb
outsl
mov
jns
scas
js
outsl
and
scas
fmull
dec
out
and
out
daa
pop
jb
in
dec
loop
out
insb
jae
aaa
scas
mov
adc
pop
mov
xor
in
pop
xor
jl
xchg
mov
add
ljmp
add
and
test
or
xor
lods
jb
push
pop
ljmp
pop
and
adc
into
and
jb
pop
fisttpll
gs
or
xchg
mov
sbb
cmp
call
aaa
pusha
repnz
cmp
cld
in
out
xlat
sahf
mov
outsl
cmp
les
test
jmp
inc
mov
add
xchg
push
lods
mov
int3
and
jmp
cmc
or
das
mov
push
pop
xor
cmp
or
add
sub
xlat
xor
xor
push
add
jle
pop
push
inc
lods
daa
jg
mov
aas
cwtl
dec
adc
sbb
in
lcall
dec
mov
shrl
and
fwait
xor
mov
scas
pop
pop
inc
add
into
pop
aaa
fstpl
insb
es
push
and
loop
push
mov
xchg
bound
cmp
loope
pusha
xchg
aam
les
push
cmp
inc
add
sub
xchg
fdivrs
cmp
push
ss
push
loopne
fistl
ljmp
dec
into
call
out
pop
add
popf
jb
je
or
pop
cmpsb
ficomps
mov
and
inc
and
leave
adc
sub
jae
jae
lods
adc
popf
mov
pop
jmp
dec
rcll
das
in
fs
aad
aaa
fs
in
pop
insb
popa
jbe
outsl
mov
sub
mov
repnz
add
fdivs
dec
scas
jae
clc
sbb
jge
inc
adc
sahf
out
lcall
xor
repz
fnop
test
adc
shlb
xorl
push
hlt
es
out
lret
dec
xor
hlt
adc
es
popa
or
xchg
mov
push
fdivrl
xchg
dec
stos
adc
sub
sbb
adc
add
xorb
mov
cmc
xorl
insb
lock
notl
cmp
mov
scas
aas
jmp
xor
dec
add
mov
add
inc
jns,pt
inc
sbb
push
xchg
adcb
shll
mov
loope
addb
or
mov
xchg
push
std
mov
loopne
insb
lcall
es
lret
push
aaa
inc
jmp
pop
cmp
dec
loop
stos
aam
test
pop
mov
imulb
dec
jns
lods
add
sbb
popf
lods
push
and
cmp
add
and
lahf
and
das
icebp
int
add
pop
or
stc
dec
dec
sbb
iret
in
xchg
lock
mov
adc
add
aam
add
icebp
and
outsb
lea
xor
push
or
cmpsl
hlt
dec
out
mov
and
fld
mov
imull
or
adc
adc
imul
shl
out
and
dec
clc
sbb
and
push
pop
and
ror
out
lds
lock
rorb
dec
or
pop
mov
sub
movsb
jmp
sbb
xchg
cmc
xor
shrb
cld
or
je
mov
cmpsl
mov
mov
mov
ret
push
arpl
movsl
in
pusha
mov
mov
mov
lea
add
adc
push
nop
push
sub
sahf
fs
jmp
lods
jbe
imul
inc
out
jmp
lcall
inc
scas
int
dec
push
mov
fcmovnbe
scas
loop
cmp
or
enter
mov
sti
mov
gs
inc
or
loop
inc
cmp
and
repz
imul
push
hlt
popa
dec
int
inc
mov
movsl
push
pop
lds
jns
mov
loop
jg
leave
and
xchg
arpl
outsl
add
pop
jp
lret
inc
imul
in
rcl
mov
test
mov
sub
jne
test
ret
cs
bnd
in
ljmp
les
adc
jl
aas
and
ss
mov
add
out
inc
xorb
outsb
lcall
int3
pop
mov
aaa
dec
test
jge
xor
inc
pusha
rcll
xor
pop
stc
ljmp
fidivs
inc
cwtl
mov
je
leave
out
mov
lods
push
fsubs
out
test
insl
jge
xor
jecxz
pop
cvtpi2ps
add
bound
mov
add
xchg
cmpsb
jno
mov
in
incl
inc
pop
xchg
fdivs
js
cmp
sti
and
bnd
nop
repz
loop
outsb
lods
push
push
pop
in
enter
push
lock
arpl
out
mov
hlt
xchg
popf
dec
pop
pushf
hlt
sbb
xchg
jg
xchg
xor
lods
ficoml
jg
andl
rcrl
push
jg
add
pop
in
mov
jg
mov
fsubr
in
jmp
cmc
mov
jl
les
clc
sub
loope
mov
add
sbb
outsl
fs
xchg
pop
add
aad
sarb
mov
ret
push
adc
dec
cmp
lods
jp
jns
and
jecxz
add
pop
hlt
or
add
negl
jns
xor
xchg
mov
ficoml
shll
mov
popf
xor
add
and
xchg
dec
nop
scas
mov
sbb
and
lock
mov
sub
xchg
shll
fistl
ret
cs
pop
ret
fucomip
jnp
sbb
add
icebp
jle
jae
insb
and
ja
cwtl
and
sub
movsl
ja
jge
shl
push
dec
xor
out
mov
cs
iret
std
test
ja
or
jecxz
sbb
dec
lahf
cmpsb
dec
inc
sbb
or
add
push
jmp
dec
jo
enter
jl
loop
jge
push
mov
stos
test
shrb
mov
cmpl
ret
push
mov
scas
adc
rclb
jl
lahf
sub
add
aas
pop
or
mov
xchg
aam
inc
mov
stos
xchg
or
inc
shlb
mov
cmovns
aas
pop
sub
adc
mov
mov
add
stos
inc
fcompl
mov
mov
in
cli
jge
or
cmp
adc
aaa
out
push
cmpsl
push
or
xchg
ror
out
inc
inc
sbb
sbb
bndldx
xor
insl
imul
xor
mov
push
sub
jno
or
adc
pop
push
popf
mov
lds
faddl
insl
dec
jb
sub
iret
push
cmpsb
popaw
and
call
test
shlb
fildll
dec
shlb
leave
and
test
mov
or
xchg
or
out
leave
sub
cmc
pop
mov
or
sar
cmp
jg
lods
jno
lds
jno
and
push
mov
lock
inc
aaa
rcrl
cmp
js
loope
out
iret
mulb
rcl
pusha
in
dec
adc
cmp
les
pop
iret
cmpl
cmp
cwtl
add
dec
jbe
add
mov
jl
rorl
adc
rcll
andl
xor
andb
leave
xlat
xor
mov
jp
out
and
in
jmp
jmp
add
data16
push
and
sub
xchg
cmp
nop
mov
mov
out
out
test
mov
pop
xor
in
rolb
add
scas
aam
mov
push
adcl
les
les
ljmp
xchg
repz
mov
addl
jp
fcmovu
mov
pop
pusha
jno
stos
push
pop
mov
adc
mov
dec
xchg
and
repnz
or
test
subl
movsl
aam
arpl
push
and
pop
aad
pop
mov
hlt
and
sub
push
mov
inc
lods
add
cltd
popa
outsb
mov
mov
jg
cmp
mov
and
sbb
push
aaa
push
sahf
sub
shl
mov
aaa
push
mov
andl
scas
out
popf
je
imul
sbb
scas
rcrb
mov
cmp
shlb
mov
mov
cmp
setge
inc
popf
push
in
push
out
adc
jmp
cmp
sub
push
leave
mov
into
jg
cs
push
repnz
adc
adc
call
pop
xchg
xorl
pusha
scas
outsl
flds
dec
and
enter
pop
cmp
ja
push
mov
data16
or
inc
mov
dec
cli
mov
or
mov
jns
or
jp
push
push
test
and
fldcw
pusha
xchg
sbb
inc
scas
jne
imul
pop
test
xor
xchg
stc
jmp
pop
or
ds
daa
jae
xor
fbstp
arpl
push
test
push
aaa
inc
imul
fisttps
or
out
adc
jg
add
cmp
leave
fcoml
xchg
mov
push
add
dec
pushf
in
sbb
insl
and
int3
jno
xchg
out
mov
bound
xor
mov
push
jp
inc
mov
mov
push
pop
jle
push
aaa
mov
pop
leave
xchg
jnp
jmp
insb
aaa
rcr
int3
cmp
push
jno
adc
fldt
adc
push
xchg
lret
adc
jno
movsb
ss
xchg
sbb
xchg
imull
int3
in
xor
shl
idivl
mov
pop
lret
jmp
adc
imul
fwait
lock
std
mov
fimuls
dec
mov
aas
inc
hlt
shrl
fs
in
push
sub
loope
push
dec
scas
sarb
lods
fxch
mov
cld
sbb
mov
call
popa
xor
pop
inc
icebp
jbe,pt
push
xchg
adc
imul
mov
mov
jb
jno
push
xchg
cmc
jp
std
fidivl
mov
fdivs
scas
lret
push
sbb
sbb
call
add
push
mov
in
test
lcall
test
pop
mov
lret
pop
sbb
add
hlt
inc
lock
repz
cmp
xchg
adc
call
out
adc
adc
inc
addr16
adc
lock
mov
mov
dec
cli
mov
xchg
xchg
les
mov
stos
aaa
cmp
push
xor
mov
pop
and
sub
push
sbb
mov
xchg
pusha
addr16
mov
inc
sub
adc
sub
mov
movsl
jmp
popf
mov
xchg
shlb
decb
iret
mov
imul
push
pop
js
int3
clc
out
pop
imul
pop
scas
out
daa
adc
jno
fdivs
jge
xchg
repnz
call
mov
test
ds
push
cmpsb
and
je
sahf
outsl
mov
cli
sbb
adc
add
lods
add
es
clc
cmc
cli
adc
iret
lods
add
push
add
out
sub
adc
inc
and
stos
into
sub
mov
in
mov
shrb
hlt
mov
hlt
adc
jb
out
cmc
sub
or
lret
out
adc
ds
cmpsl
pop
aad
xlat
outsb
test
xorb
or
pop
jae
psubusb
xor
sti
enter
sbb
inc
xchg
or
fs
imul
pop
xor
les
sbb
lcall
shl
dec
or
adc
ljmp
hlt
lret
mov
push
sti
std
scas
outsb
iret
in
stos
mov
in
arpl
xchg
pusha
mov
ret
mov
push
fisttpll
xchg
dec
jecxz
push
sti
adc
sarb
cmp
mov
pop
adc
sub
movsb
sub
out
dec
out
xchg
xor
sub
adc
fpatan
pusha
or
ja
and
mov
out
sub
int
lret
shll
in
mov
lods
dec
fs
jo
ret
pop
jp
mov
lods
lock
pop
xchg
rcr
iret
enter
popa
push
movsb
subb
dec
add
aas
int
cld
inc
pop
shl
cmc
push
mov
lds
xchg
cld
gs
pop
sub
pop
popa
scas
fisubrs
adc
stos
mov
je
test
shr
daa
frstor
dec
aam
rorl
sub
loope
iret
cmpsl
mov
cmpsl
xchg
or
je
loop
sbb
sub
jle
outsb
sbb
dec
and
shlb
dec
cwtl
insl
lea
cmp
das
inc
pop
mov
out
jns
int
into
js
add
and
sbb
mov
pop
xchg
dec
sbb
jmp
arpl
sbb
scas
pop
stos
sbb
push
fchs
lds
lea
or
and
dec
xchg
xchg
or
lea
fcompp
mov
push
xchg
imul
dec
dec
mov
es
push
add
clc
sarb
test
pop
jo
je
add
adc
jp
mov
lret
inc
pop
rolb
aad
stos
out
lret
and
imul
mov
ss
addb
imul
mov
or
sub
cmp
dec
xlat
push
sub
xorl
and
int
mov
ljmp
xchg
mov
jecxz
loop
mov
jo
sub
cmp
sub
mov
data16
aaa
xchg
inc
cmp
dec
dec
cld
iret
mov
and
mov
sub
ja
and
mov
out
cmp
jae
loopne
test
add
sbb
push
nop
scas
inc
sbb
mov
push
adc
jecxz
pop
push
mov
dec
loopne
add
xor
mov
mov
divb
dec
std
lock
dec
sbb
mov
out
xchg
stos
dec
fisubl
jne
sarl
mov
mov
icebp
jl
test
out
iret
das
nop
jo
stos
idiv
cmpsb
xchg
adcb
xlat
xchg
incl
add
orb
lret
sub
push
cs
cmpsl
adc
jmp
loopne
std
inc
in
mov
or
dec
jle
out
xchg
icebp
adc
or
mov
loope
lahf
cmp
mov
scas
mov
aad
testl
loope
pop
and
push
mov
cmp
xchg
in
pop
inc
pop
ret
stc
xor
popa
push
imul
xor
jl
mov
and
dec
jo
sub
and
fwait
popaw
mov
cwtl
jg
jecxz
jl
mov
sbb
nop
cmp
jg
jbe
xchg
or
sub
pop
fisttps
push
test
inc
test
sub
out
sub
xor
or
test
pop
nop
pop
arpl
jb
out
mov
clc
movsb
sub
es
int3
js
inc
add
popa
mov
lds
pop
or
stos
stos
lahf
dec
out
xor
in
pushf
mov
mov
aaa
in
push
push
cld
lcall
shll
out
std
add
lods
ret
xchg
push
cmp
lock
add
out
mov
sbb
add
xchg
sti
lea
mov
iret
call
repz
call
and
cmpsb
mov
sarl
stc
lock
cli
cmp
mov
cmp
addl
stos
sahf
mov
outsb
aad
pop
mov
or
lcall
inc
ljmp
xchg
jg
sub
xlat
sbb
std
je
imul
nop
xchg
dec
cli
jb
dec
add
ficomps
xchg
dec
mov
stos
jae
incl
jae
or
jno
pop
cmp
adc
hlt
clc
mov
jecxz
loopne
inc
ret
popf
lea
fisttps
in
adc
push
jnp
enter
dec
mov
inc
cmp
leave
cmp
es
daa
cmp
xchg
clc
rorb
outsb
xchg
adc
mov
mov
sbb
iret
jo
mov
aaa
adc
xchg
iret
rclb
cmpsl
jb
inc
rolb
push
fbld
aaa
ljmp
rcl
sub
jne
mov
iret
jnp
jb
sbb
les
adc
jmp
loop
sub
xchg
decb
mov
xchg
adc
loop
cmp
cmp
imul
push
mov
stos
pop
clc
and
pop
sub
les
xchg
push
push
and
int
cltd
popf
push
add
lods
fwait
shll
pop
and
xor
jno
arpl
in
pop
in
fimull
test
xlat
mov
dec
mulb
jge
ficompl
out
or
dec
pushf
mov
rorl
push
pusha
mov
sub
xchg
roll
popf
cmp
or
sub
jae
adc
outsb
sbb
xchg
cmp
xor
sbb
pusha
les
sahf
loope
adc
push
bound
pop
jle
sbb
sarl
icebp
into
pop
sbb
test
aaa
ljmp
push
pop
inc
in
out
xor
fistps
lock
mov
mov
int
and
xchg
adc
xchg
mov
ret
test
xor
jo
adc
loopne
mov
cmp
adc
xlat
dec
sub
ljmp
gs
addl
adc
pop
ficoms
stos
lahf
ljmp
jbe
mov
push
stc
dec
bound
aad
cmc
data16
lret
jbe,pn
and
cmpsl
pop
push
lcall
arpl
mov
pusha
pop
lcall
xlat
jl
sbb
push
jno
out
sbb
xchg
xor
mov
xchg
cmpsl
movsb
shl
lods
adc
sbb
and
fwait
jnp
add
sub
fmull
push
lcall
jg
rcll
cltd
mov
popa
in
je
sbb
cmpsl
mov
adc
sbb
out
dec
adc
mov
sub
or
adc
testb
out
push
cs
ds
outsl
xchg
and
ljmp
stc
cmp
push
sbb
and
jmp
call
enter
dec
fcoml
sbb
inc
fwait
andl
dec
cmp
xlat
fwait
xor
or
pop
std
push
mov
sub
scas
sti
or
inc
or
inc
add
lret
sub
xorl
push
lods
mov
push
or
mov
fisttps
xlat
shr
ret
arpl
insl
repnz
std
dec
mov
pop
push
push
dec
mov
fs
fimuls
xchg
xor
jb
hlt
pop
aas
cmp
cmp
sbb
jno
xchg
pop
rclb
decl
cltd
adc
lods
movsb
inc
fdivrp
icebp
push
out
xlat
in
int
shrb
insb
adc
jmp
xchg
and
ret
dec
or
cld
sbb
in
jg
cltd
lea
xchg
loope
xchg
icebp
inc
adc
cmp
push
or
fcom
shll
jne
popa
popf
cmp
sub
mov
dec
xor
mov
xchg
sahf
repz
jbe
pop
push
push
fsts
sub
jae
pushf
incl
jl
cmpsb
ljmp
cmp
out
jle
inc
dec
test
or
fisubrl
xor
jnp
insl
cmp
inc
sbb
xchg
sub
jnp
movsl
or
clc
push
test
cmp
lahf
dec
mov
cmpsl
movsb
mov
mov
and
cli
bound
fcmovu
lahf
pop
dec
das
add
mov
cwtl
stos
inc
fcmovnbe
fcmovu
rcr
push
mov
inc
ret
in
pop
in
xlat
fsubrl
xchg
jne
or
addr16
icebp
clc
int3
fisttps
or
adc
les
das
and
add
mov
sbb
repz
push
push
pop
outsl
mov
imul
add
mov
mov
cmp
add
imul
sti
pop
xor
dec
test
in
xor
xor
xor
or
addb
dec
je
in
push
cmp
inc
cli
rcr
data16
ror
inc
inc
mov
sub
adcb
or
mov
movsl
inc
std
add
jbe
mov
adc
mov
lock
in
fidivl
cmp
push
add
outsb
adc
cmp
pop
lea
push
cmp
or
movsb
icebp
mov
imul
addl
stos
gs
cmp
stos
rclb
sbb
xor
xchg
push
ret
or
sub
ja
xchg
xor
dec
or
arpl
idivl
pop
xchg
and
inc
dec
inc
xchg
mov
idivl
out
stos
pop
dec
nop
fs
sbbb
scas
punpckhdq
inc
dec
pop
lahf
push
es
pusha
mov
xor
jmp
cmc
andl
jbe
xchg
fs
cmp
jo
pop
jmp
lret
scas
out
and
inc
lea
ljmp
movaps
adc
in
das
movsb
pushf
xchg
or
push
inc
xchg
es
shlb
bound
ljmp
cmp
sbb
mov
pop
mov
mov
shrb
adc
fwait
and
ljmp
call
es
xor
cmpsb
sbb
fldl
cli
mov
cmc
roll
pop
dec
push
out
mov
and
add
pusha
inc
icebp
ficompl
insl
push
sahf
bndldx
imul
push
leave
and
adc
mov
in
sbb
fsubrs
and
test
or
xor
adc
pushf
fdivl
adc
repnz
in
jb
jo
insb
aaa
out
jge
jg
push
lock
push
jg
xor
jg
sbb
add
cmp
sarb
loope
xlat
mov
xlat
xchg
jb
subb
stos
gs
out
xlat
ss
push
jmp
mov
ret
adc
out
adc
push
mov
pop
fcoms
sahf
inc
stc
cmp
loop
jae
push
cmp
aaa
xor
adc
outsb
xchg
and
outsb
mov
push
jo
fidivl
sub
mov
adc
repnz
pop
test
scas
mov
in
or
mov
mov
mov
daa
lret
push
cmp
subb
ficoms
lds
push
movsl
push
mov
xlat
pop
dec
int3
lea
adc
insb
jns
sbb
push
inc
popf
outsb
xlat
add
hlt
or
dec
dec
insb
loop
dec
pusha
adc
into
je
mov
adc
notb
out
das
push
mov
xchg
or
out
xchg
test
push
mov
dec
outsb
mov
sub
inc
cmp
sub
cld
jo
inc
loop
loop
fs
dec
mov
pop
push
bnd
push
lret
out
repz
xchg
pop
int
push
jbe
xor
mov
xor
loopne
push
lret
push
push
stos
ja
movsb
sub
cs
jno
xor
cmp
inc
jne
mov
mov
cmp
iret
sbb
pop
in
sbb
jb
sub
jg
push
inc
sub
les
xchg
les
lods
mov
scas
cmp
mov
dec
inc
outsl
les
fnsave
ja
loopne
pusha
loop
adc
inc
fs
adc
push
repnz
adc
sbb
stos
daa
mov
loopne
js
xchg
testl
sbb
out
jo
pop
lock
int
xchg
rol
mov
pushf
daa
and
mov
push
in
fsubrs
rcrl
mov
mov
lcall
je
loope
cmp
xor
andb
test
sub
popf
fnstenv
sti
scas
xor
push
mov
enter
push
idivb
repnz
ljmp
jge
add
xchg
inc
cmpsb
add
inc
or
lret
inc
pop
rol
add
xchg
push
pop
dec
adc
sbb
mov
jnp
pop
andb
call
lcall
mov
push
lods
rorl
js
rorl
hlt
sub
ss
scas
or
dec
or
xchg
jp
sub
sbb
leave
out
sbb
cmpsl
movsb
adc
ljmp
rcrb
arpl
and
adc
xchg
ret
insl
aam
and
cli
and
arpl
jo
xchg
in
mov
push
cmp
adc
and
jp
pop
das
scas
aad
pop
hlt
push
test
xchg
mov
xchg
aam
imul
or
jp
fdivl
push
inc
push
scas
mov
sub
scas
mov
pop
lahf
sub
or
inc
stos
loope
push
not
dec
jo
arpl
or
pop
test
adc
movsb
cmp
sbb
out
div
mov
inc
loop
out
or
and
sub
in
and
xchg
xor
inc
fisubs
rcrl
dec
sub
cmc
js
pop
jp
xchg
xor
cmp
mov
dec
aam
push
xor
sbb
xchg
testb
pop
lods
jp
mov
cmp
scas
hlt
popf
insl
pop
shlb
inc
sub
in
ljmp
push
pop
rclb
sub
adc
loope
inc
xchg
pushf
outsl
push
pop
inc
pop
jmp
ret
push
movsl
or
xor
xchg
outsb
add
or
xchg
pxor
mov
xor
mov
dec
cmp
gs
movsl
mov
mov
xchg
stc
fistps
or
pushf
fs
inc
sbb
cmp
xor
cmp
cmp
adc
inc
cmc
sbb
adc
adc
pop
add
stc
mov
xchg
mov
and
sbb
pop
ficomps
mov
scas
inc
xchg
cmpsb
inc
lret
aam
or
enter
push
int3
shll
int
cmpsl
inc
cld
xor
mov
mov
aas
sbb
dec
sbb
sub
cmp
cs
xlat
add
mov
dec
cli
push
push
adc
mov
cli
xor
sub
sbbl
sahf
mov
lret
inc
adc
les
cmp
push
das
lock
push
xchg
cmp
inc
inc
mov
mov
jbe
mul
sbb
lock
sub
jg
cmp
sbb
adc
aaa
adc
sbb
pop
pop
es
ret
jle
aad
scas
movl
mov
push
jbe
xchg
jb
loop
dec
fbstp
movsl
or
idivb
jecxz
sub
rorb
add
or
call
pop
ja
int3
int
cmpsl
sub
pushf
cmp
rcr
mov
add
pushl
lahf
adc
dec
fidivrl
cmc
out
jmp
sub
sub
push
xor
xchg
xchg
in
or
xor
lea
stos
fwait
inc
fsubrl
sub
add
sub
xor
xlat
jno
in
cmpsl
push
dec
xchg
mov
loop
hlt
aas
addl
dec
pop
add
dec
nop
in
test
pushf
std
lahf
clc
lds
sub
jo
pop
out
jle
popa
mov
dec
aas
dec
sti
mov
jo
aaa
inc
adc
mov
repnz
inc
pop
push
dec
ds
sarl
mov
shl
int3
mov
insl
cwtl
fwait
and
cmp
mov
add
add
sbb
pop
dec
ds
add
stos
jno
das
out
insb
cli
leave
int
movsl
cmp
pusha
loopne
cld
xlat
cltd
cwtl
sub
and
or
sub
xchg
pop
lahf
shrb
add
lcall
dec
les
dec
shll
lcall
mov
hlt
push
xor
or
sbb
clc
test
push
pop
push
cli
pop
fmull
mov
dec
inc
clc
push
std
data16
pop
push
es
push
insb
add
es
js
std
dec
pop
xchg
pop
pop
and
lret
daa
xor
xchg
les
xchg
ror
and
sbb
rcpps
test
mov
adcb
es
mov
sub
fcomp
pop
fistpll
add
xchg
rorl
mov
inc
lods
cmp
adc
pop
les
push
push
inc
les
jo
rclb
test
dec
ret
xlat
ret
mov
rcrb
std
jne
jge
testl
repnz
sub
xchg
test
outsl
cmp
sbb
fadd
mov
push
jl
xchg
sub
push
xor
push
push
xor
inc
movsbl
mov
push
sub
xor
ret
iret
xor
rorl
xchg
test
stc
xor
je
cwtl
fbld
outsl
or
sub
mov
xor
das
aas
subl
inc
jne
daa
mov
xchg
inc
addb
ja
das
mov
imul
xorl
call
mov
mov
add
rcll
daa
stc
movsl
mov
outsb
insb
xchg
iret
dec
scas
in
sub
movsb
adc
pop
cltd
int3
jg
dec
sub
inc
cmpsb
lcall
and
ret
loope
sub
addb
sub
inc
xor
sub
aam
stc
out
jg
mov
test
sbb
and
inc
dec
in
pop
bound
or
pusha
mov
mov
mov
fidivs
mov
icebp
jecxz
movsb
sub
cmpsl
push
mov
inc
loopne
push
mov
or
pop
pop
or
mov
or
xchg
imul
push
jb
aas
sti
inc
das
data16
movsl
mov
sarb
stc
and
jns
xor
ret
jecxz
mov
or
fstpl
xor
test
int
cmp
mov
mov
xchg
std
leave
fisttps
icebp
arpl
daa
pop
arpl
shlb
out
pop
mov
inc
call
mov
nop
lea
add
clc
jns
add
je
sub
cmp
ljmp
push
pop
popa
inc
stc
sahf
ss
xchg
mov
pop
cmp
out
dec
add
mov
xchg
call
pop
fdiv
push
sbb
cli
orl
pushf
xor
push
int3
movsl
xchg
leave
icebp
xchg
or
jnp
fisubrl
adc
xchg
mov
popf
mov
inc
stos
dec
sub
inc
dec
movsl
insl
lods
hlt
lods
lock
xorb
xchg
sti
lods
pop
xchg
mov
dec
sub
movsb
leave
jle
in
inc
test
cs
cmc
lret
shlb
jmp
push
xor
addr16
pop
out
int3
test
add
sub
xor
fiadds
and
bound
sarb
dec
adc
ret
mov
pop
sbb
js
sub
movsb
nop
test
jo
cwtl
inc
jge
shlb
cli
loop
faddl
cmp
lds
dec
pop
mov
pop
cs
jno
aam
clc
shl
mov
mov
fdivrs
stos
fnstsw
xchg
ret
adcb
js
das
scas
ja
cmpsl
jo
jbe
rorl
test
mov
add
pop
bsr
cli
lcallw
cmp
xlat
and
pop
mov
jecxz
push
insl
popf
flds
clc
test
call
add
push
shlb
pop
test
data16
out
dec
push
aas
cli
xor
shlb
iret
popa
jmp
inc
dec
cmp
fildll
out
jb
lahf
iret
or
cmp
ficomps
cmp
aas
or
push
lock
ds
sbb
movb
jg
xlat
dec
mov
sbb
mov
dec
or
cmp
aam
inc
shlb
cmp
imul
bswap
or
mov
add
aam
insb
test
push
jmp
loope
lahf
mov
jne
dec
xchg
inc
pop
xchg
dec
repnz
push
daa
sub
or
and
cmpsb
ds
mov
dec
pop
xor
sahf
flds
lods
fcoml
das
inc
fbld
jle
test
xor
inc
mov
inc
mov
ja
mulb
adcl
aad
sbb
and
outsb
lret
jb
and
outsb
enter
pushf
cmpsl
test
iret
js
outsb
stos
movsl
dec
movsl
adcl
xor
push
in
pop
jle
outsl
mov
popf
subb
mov
adc
mov
push
int3
mov
xlat
ret
bound
adc
mov
or
adc
shr
sub
jmp
fldcw
xor
jb
fsubrl
inc
sbb
lds
test
jo
xchg
sahf
or
lds
ja
xor
mov
daa
call
pop
sbb
xchg
xchg
aas
fsubl
jns
and
or
sbb
sub
js
out
adc
cmp
fnsave
imul
shlb
push
rol
fisttpll
cltd
ret
jl,pn
sub
sub
mov
daa
in
mov
add
push
inc
into
cmc
xlat
xor
mov
clc
arpl
mov
cmp
addr16
cmp
andl
xor
cli
sbb
ret
clc
pushf
mov
xchg
mov
xlat
jl
mov
insl
inc
sbb
pusha
xchg
dec
leave
out
jno
ljmp
hlt
push
mov
jbe
sub
add
mov
lods
mov
cmc
jecxz
scas
inc
popf
or
popf
orb
scas
stc
sbb
push
xchg
aad
repnz
mov
pop
jecxz
mov
pop
or
dec
xor
ljmp
pushf
and
aas
mov
dec
mov
rolb
inc
jp
push
jae
movsb
inc
mov
sahf
popf
enter
cmp
mov
lahf
jbe
sub
inc
arpl
jns
imul
adc
repnz
rclb
aaa
lcall
fdivl
imul
sbb
mov
xchg
outsb
test
icebp
std
mov
insb
addb
add
cmp
sub
cli
jmp
jmp
push
adc
push
push
xchg
adc
pop
vmread
fcomps
aad
pop
fdivs
mov
push
xchg
es
inc
push
aas
adc
cmp
aaa
sbb
sbb
outsb
mov
lea
repnz
and
popa
ja
xor
mov
dec
jo
int
adc
icebp
push
pop
adc
push
cld
mov
les
insb
xchg
jbe
scas
sub
pop
aaa
add
push
push
mov
aad
mov
mov
dec
pop
pop
fwait
pop
daa
pop
stos
jl
pop
pop
pop
cmp
gs
loop
mov
pop
mov
fcmove
fstl
inc
push
pop
jno
mov
inc
push
bound
movsl
ficoms
and
test
xchg
xchg
mov
out
sbbl
dec
sbb
into
lret
mov
mov
pusha
cmp
es
stos
or
push
into
push
nop
es
insl
in
add
fmulp
dec
gs
xchg
jecxz
dec
mov
xchg
fildll
in
sbb
cmp
mov
sub
dec
cmpl
xor
jge
dec
push
icebp
mov
jae
repz
lret
dec
cmpsl
into
shr
pop
cltd
pop
jo
lods
outsl
into
sub
xor
ss
push
mov
call
into
fldt
aaa
adc
pop
pop
fucom
imul
addr16
stos
xchg
xchg
push
add
loope
cmp
out
mov
sbb
repz
jnp
push
inc
fsubs
pop
sub
int
adc
iret
or
or
cmpl
and
xchg
add
cltd
sub
movsb
fmulp
ja
pushfw
lahf
decl
fwait
push
and
sub
rcrb
dec
jb
movsb
add
sub
push
rorb
loop
insb
inc
roll
jge
mov
mov
cmp
cwtl
imul
or
scas
pop
loope
cmp
dec
pop
sub
push
jb
and
mulb
xor
mov
stos
jnp
push
adc
and
and
mov
flds
mov
scas
rol
xor
call
ja
push
repz
cmp
add
test
bound
daa
or
fcmovb
push
jno
push
leave
test
repz
sub
je
xchg
loop
jno
push
jle
xchg
pop
clc
sbb
xchg
add
push
es
imul
sub
xchg
outsl
xor
cmp
and
cltd
xchg
pop
pavgb
into
fcomip
and
and
sub
sub
decb
insl
push
rclb
or
push
hlt
and
enter
inc
push
pop
mov
int
dec
aad
lret
leave
mov
loop
sub
push
push
jno
sbb
pop
push
push
shlb
fwait
jbe
and
mov
and
xchg
stos
xchg
pop
aas
dec
adc
fwait
dec
lods
dec
push
daa
rorl
fsubrs
fwait
jo
cwtl
xlat
add
imul
dec
cmp
clc
leave
pushf
inc
mov
fs
scas
js
test
pop
out
dec
mov
aam
mov
mov
test
fsubs
jg
enter
lahf
sbbb
pop
insb
or
adc
outsb
js
cmc
cmpsb
push
xorl
and
pop
lahf
pop
scas
jno
jmp
xor
cmp
cld
negb
jo
pushf
mov
in
adc
les
insb
or
xchg
scas
sub
in
insb
test
xor
nop
rclb
jp
dec
or
cmpsl
and
mov
jp
mov
ret
ss
push
in
rorl
ds
push
mov
pop
jmp
xor
push
or
lock
adc
cmp
popa
xor
sub
mulb
xor
xchg
std
hlt
lcall
push
dec
leave
adc
out
pop
js
inc
push
adc
dec
adc
sbb
and
xlat
xchg
xor
rol
jge
rclb
test
je
scas
scas
popa
xor
adc
mov
cmp
loop
mov
sarl
add
sahf
fldenv
roll
scas
ds
outsb
mov
jb
lea
pop
mov
push
sub
mov
and
negb
sbb
daa
rcll
sti
gs
jp
jno
es
and
imul
adc
cli
imul
es
xor
push
shl
mov
jle
mov
pop
or
fidivs
pop
frstor
pop
xlat
outsl
pop
push
das
xor
dec
xor
pop
aaa
mov
mov
pop
test
stc
jno
mov
cwtl
inc
mov
sbb
jae
fs
aam
mov
mull
out
lahf
hlt
mov
mov
outsl
in
stos
les
sub
push
repz
ret
cs
xor
mov
jge
stc
sti
pusha
push
loope
mov
push
imul
push
add
test
push
mov
xor
ror
pop
cwtl
stos
loope
push
mov
jecxz
mov
cmp
xlat
jb
cwtl
cmp
lahf
faddl
push
inc
inc
adc
or
clc
out
cmc
stos
test
dec
push
xor
enter
ficoml
mov
dec
dec
sub
aas
dec
mov
outsb
add
inc
loop
jg
rorl
mov
ret
sbb
aam
iret
sub
repz
mov
std
push
lods
rol
xchg
pop
bound
aam
rclb
scas
mov
in
cld
loopne
jle
add
scas
imul
sahf
cltd
cwtl
or
pop
cmpsb
dec
loopne
out
std
mov
adc
out
sub
mov
xlat
leave
shlb
jnp
xchg
out
add
aaa
mov
in
in
dec
fsubl
popa
xor
stos
xchg
js
cmpsl
aas
xor
xchg
push
cmp
filds
js
ss
dec
sbb
mov
xchg
add
push
xor
lret
xchg
repz
and
mov
cmc
sub
add
dec
aas
es
pop
mov
xchg
call
int3
mov
lret
lret
lret
test
in
movsb
popa
out
cmp
cmp
fmul
aam
jg
xor
hlt
aam
rcll
sub
push
rcr
adc
daa
int3
out
sub
add
test
sbb
jmp
or
xor
cmpsl
cmpsb
scas
push
scas
sbb
mov
jp
jnp
xor
dec
push
push
mov
les
push
into
cmpsl
push
inc
and
mov
aam
and
ret
mov
xor
loopne
mov
daa
lods
shrd
mov
shrb
lods
lds
les
imul
xor
jg
or
leave
stc
fmull
cs
sarb
fcoml
loope
jecxz
out
je
es
mov
fldenv
dec
cs
hlt
in
insb
mov
inc
ja
xor
inc
stos
cld
mov
andl
movsb
mov
mov
adc
inc
test
popa
pop
cmc
outsb
daa
fcmovbe
push
outsb
fstp
rcl
pushf
mov
xor
mov
rcrl
xchg
lahf
or
je
dec
loop
mov
int
lea
pop
cmp
fisttpll
enter
addr16
das
dec
aaa
xchg
mov
mov
pop
out
cmc
push
addb
add
sahf
inc
shrl
xlat
arpl
decb
jecxz
cmc
ficomps
f2xm1
ljmp
dec
ss
push
je
not
sbb
inc
push
mov
cltd
jb
das
xor
mov
xchg
es
dec
inc
iret
sbb
mov
pushf
sbb
jae
push
ret
mov
mov
test
lods
or
ret
or
push
int
int3
stos
ljmp
xchg
push
and
mov
cmc
cli
mov
mov
xor
xor
cli
xchg
push
insl
push
loope
push
inc
es
push
es
lcall
mov
pop
pop
pop
add
cmpsl
pop
cmp
jno
imul
je
pop
nop
pop
jne
mov
in
lods
nop
jne
insb
and
sbb
ss
movsl
ja
ret
testl
into
popa
subb
out
jb
mov
cmp
es
and
pop
outsl
xchg
int3
pop
hlt
sbb
cmp
mov
cltd
hlt
push
inc
je
repnz
mov
push
lcall
popa
sbb
fsubl
sbb
cmp
leave
in
mov
call
daa
jle
and
ficoml
push
mov
stos
mov
cmp
sti
lahf
pushf
jge
jp
stos
jno
test
cld
mov
pop
cmp
mov
push
jecxz
shrl
or
fildl
jae
jge
dec
out
jno
gs
lret
gs
test
inc
jae
idivb
mov
and
lahf
lret
lods
rcrl
pop
pushw
mov
mov
ret
mov
insb
std
jno
out
push
sbb
mov
outsb
mov
xchg
aad
and
cmc
jmp
jnp
ja
jb
sbb
push
push
inc
mov
sar
ss
push
xchg
mov
mov
addr16
out
testb
pop
in
jae,pn
sub
and
aam
xchg
int
cltd
ret
or
jmp
lahf
push
into
adc
sahf
loope
out
push
jl
cmp
arpl
cmp
es
xor
lods
ftst
das
cltd
pop
imul
movl
mov
mov
push
xor
mov
lods
pop
add
xor
icebp
scas
test
lcall
fs
jnp
add
mov
roll
mov
jl
addl
sub
push
cmpxchg
mov
lret
orb
mov
and
test
iret
sbb
rol
or
gs
icebp
in
sbb
lret
xchg
mov
out
mov
xor
sti
stc
mov
inc
push
call
mov
data16
ror
ljmp
test
dec
add
imul
ret
jae
inc
ror
fadd
xchg
pop
pop
movsl
push
ret
xor
stos
add
push
std
sub
and
xor
dec
test
ds
daa
aam
push
repnz
cltd
ret
xchg
xor
fucom
xlat
push
fwait
cmpsb
mov
sbb
sbb
mov
stc
pop
pop
ret
mov
js
adc
dec
paddsb
sub
ljmp
xlat
vmwrite
ret
lock
dec
std
lahf
repz
dec
call
jmp
push
dec
cmpsl
shll
out
inc
test
jecxz
jp
cmp
xchg
in
mov
and
filds
in
nop
xor
add
inc
adc
mov
mov
popa
pop
shl
into
out
mov
fmull
mov
or
jb
stos
or
jno
pop
add
rcrl
jl
jmp
rcrl
push
les
or
fimull
ret
mov
mov
xchg
xchg
in
test
scas
in
xor
or
sti
roll
sbb
fsubrs
inc
cmp
jp
int3
xchg
xchg
movsl
insb
pop
lret
push
stos
push
cmp
push
push
push
and
adc
mov
sub
mov
xor
cmp
popf
push
insl
nop
lods
imul
fwait
and
int
clc
pop
xor
push
adc
add
push
ja
pop
dec
aam
add
jmp
into
mov
inc
rcr
sub
xchg
cmp
outsl
mov
out
test
fs
pop
lock
pop
insl
add
cmp
push
mov
iret
mov
gs
shrl
loopne
pop
adc
mov
jp
mov
adc
std
js
test
subl
sbb
cwtl
mov
lds
icebp
cmpsb
dec
out
outsl
sbb
iret
xor
mov
mov
push
push
aaa
cmpb
jmp
mov
add
imul
pushf
out
sub
inc
xchg
popa
ss
xchg
pop
mov
hlt
add
jg
push
in
gs
inc
sti
daa
stos
test
ss
and
adc
or
lods
je
out
cmc
jmp
rorb
xchg
and
push
repz
add
idivl
inc
mov
pushf
cmpsl
stc
gs
jbe
add
mov
lret
push
jp
push
loopne
mov
pop
cmpb
fimuls
mov
repz
aam
push
adc
inc
cmp
jmp
into
rclb
ljmp
scas
roll
aaa
mov
cmpsl
rolb
jb
cld
lcall
or
push
das
cmp
or
push
mov
pop
push
sbb
jbe
lcall
rorx
das
dec
fnsave
sahf
lahf
aaa
or
loope
daa
in
mov
nop
icebp
shrb
js
lds
sbb
xchg
and
cld
xor
ljmp
jb
xor
cmp
lods
cmp
lea
test
arpl
jle
fnstenv
dec
or
jae
lock
pop
push
fxch
outsl
xor
stos
dec
pop
aad
cmp
mov
mov
inc
adc
dec
mov
hlt
push
sbb
push
clc
cli
sbb
clc
fwait
pop
fcoml
std
cmp
sbb
dec
dec
sbb
sbb
xlat
enter
ret
aaa
mov
adc
or
sbb
add
inc
pop
or
je
js
pop
scas
inc
fiadds
scas
jb
imul
inc
cmp
cmp
pushf
mov
sub
sub
mov
rorb
xor
clc
dec
adc
cmp
out
inc
push
sub
sti
jns
xchg
iret
sub
insl
jb
and
stos
fwait
and
push
inc
lret
cwtl
dec
addr16
xchg
out
xchg
mov
inc
mov
inc
inc
ror
xchg
pop
stc
sub
nop
mov
adc
ret
cmp
daa
push
in
dec
hlt
xor
xchg
push
inc
movsl
std
in
and
push
cmp
dec
cmpb
scas
stc
lea
pushf
ret
mov
ja
fstl
mov
jno
imul
ljmp
push
test
pop
pop
aas
loopne
push
pop
add
cs
or
mov
pushf
dec
dec
lods
mov
fmulp
sub
xor
outsb
out
stos
filds
push
jge
jmp
inc
or
inc
fildll
push
test
push
movsb
daa
fs
push
or
adc
push
stos
mov
mov
daa
in
cmpsb
mov
inc
jae
push
mov
dec
iret
dec
inc
into
and
push
or
iret
fidivrs
pop
jb
pop
mov
lea
push
repnz
loope
dec
jne
out
xchg
scas
lahf
sbb
pop
sbb
sub
shlb
jns
xchg
aaa
imul
dec
ja
sbb
leave
jne
iret
out
xor
lea
sbb
rorl
gs
ret
lods
rcrl
filds
xor
imul
outsl
xchg
jecxz
scas
lods
dec
adc
ret
dec
push
popa
pop
fwait
stc
or
ja
xor
mov
jbe
negb
cmc
pop
pusha
sub
mov
mov
shrl
push
xchg
mov
cmp
dec
fwait
mov
stc
test
jno
movsb
add
lods
div
loopne
mov
and
sub
mov
clc
push
leave
es
imul
mov
cmp
rorl
jg
xor
mov
outsl
jle
ss
icebp
inc
mov
sub
mov
repz
xchg
cmp
cmpsl
rolb
cmp
outsl
sub
rcrb
fsts
jge
mov
ficoms
sub
cmp
mov
cs
lea
lods
jecxz
push
sub
mov
xchg
inc
ret
adc
pop
stos
inc
xor
and
int
jl
xor
cmp
cmpsb
les
call
pushf
jb
mov
lock
pop
mov
fdivrs
add
or
cmp
cmpsl
cmpsb
adcl
popf
pop
jno
gs
xchg
das
jno
pop
mov
and
fcmovnu
or
xor
and
cmpsl
xor
xor
add
sbb
rcrl
out
sbb
das
in
sub
out
stos
cltd
jbe
scas
outsl
add
lret
xchg
shll
add
dec
push
mov
fwait
call
orl
in
cmp
jno
jl
xchg
pop
lock
jno
mov
movsb
sti
sub
push
xor
inc
add
cmp
lods
mov
mov
int
nopl
push
repz
and
xorl
mov
fldenv
inc
sbb
add
pop
addr16
sarb
movsl
cmp
insb
lods
cli
out
and
mov
incl
and
mov
adc
jmp
test
push
sbbl
ds
std
das
mov
sub
xchg
or
divl
js
push
insb
pusha
orl
adc
and
lods
loop
cmc
adc
les
fsubl
mov
xchg
fs
mov
popa
out
shrl
aas
push
mov
out
pop
repz
addr16
scas
repnz
in
push
aaa
push
mov
jne
movsb
rcl
push
test
stc
mov
lcall
ret
rol
cmp
dec
les
jge
cmpl
inc
jae
push
fstps
sub
cmp
and
xchg
data16
mov
adc
inc
sarl
dec
and
dec
jmp
xor
xor
inc
add
and
je
mov
mov
dec
inc
and
push
sbb
loop
pop
mov
mov
cmpsl
mov
icebp
js
dec
and
push
sti
adc
jge
push
adc
iret
rclb
cmc
fwait
out
ret
pop
fcmove
cmp
jmp
cmp
inc
mull
xor
add
mov
iret
push
add
inc
pcmpgtw
ds
test
hlt
int3
xchg
jae
add
jle
xor
xchg
jp
cmp
outsb
mov
leave
lret
ds
rcr
inc
mov
xor
ljmp
andl
dec
push
xchg
dec
decl
sbb
adc
mov
push
fwait
shrb
popa
sub
loope
ret
fwait
and
push
inc
sbb
xchg
insb
into
cmp
int3
xchg
fcmovb
adc
popa
cs
fstpl
sti
cwtl
call
adc
push
push
xchg
sbb
mov
das
lret
pop
popf
outsl
test
pop
inc
mov
cmp
aam
gs
fistpl
ja
daa
aad
ljmp
mov
loopne
pusha
xrelease
mov
cmpsb
xlat
pop
mov
pop
testb
jle
push
mov
cmp
jns
test
cmpsb
sbb
push
data16
mov
bound
xchg
icebp
xchg
cvtps2pi
imul
movsl
xor
and
subl
cmpsl
scas
push
test
jbe
mov
pop
lods
outsb
data16
pop
lcall
or
mov
aad
cmp
add
mov
mov
cmp
adc
xchg
nop
push
lds
dec
mov
mov
mov
cmpsl
xor
incl
lods
lds
cwtl
jns
cmc
idiv
fnstenv
push
std
test
sbb
xor
arpl
push
xor
sub
rcl
xchg
jge
jb
bound
jecxz
xchg
dec
stos
aad
dec
ret
xor
mov
jp
out
sub
daa
inc
test
into
or
push
xor
outsb
movsb
lret
and
sarl
push
repnz
jge
arpl
into
push
lods
jl
lahf
mov
data16
push
add
call
cwtl
lods
and
mov
inc
cmpsl
mov
enter
int3
xor
pop
iret
ss
jge
xchg
jle
add
and
fcompl
xchg
sbb
test
ja
jno
jb
pushf
jno
les
add
sub
cmp
loopne
mov
insb
iret
sub
out
sub
dec
sub
mov
adc
cmp
jne
push
mov
mov
in
loope
lods
call
push
cwtl
mov
idivb
dec
sub
gs
xchg
fld
pop
shl
or
fwait
adc
lret
cmp
pop
mov
inc
dec
fwait
mov
insb
push
mov
test
mov
fldenv
mov
push
jge
rcl
fdivr
adc
subb
or
add
jl
mov
cmc
insb
rol
mov
loope
jbe
inc
jmp
repnz
in
bound
aas
jg
xor
cmp
mov
les
sub
mov
adcl
rorb
outsl
lods
sub
scas
add
inc
fisubrl
xchg
enterw
mov
shlb
sbbl
lret
push
xor
pop
pop
mov
xor
pop
mov
lds
dec
test
dec
scas
push
int3
jne
sub
sub
scas
std
mov
sbb
mov
xorl
adc
dec
jmp
fwait
jge
mov
cmpb
dec
push
in
lds
repz
pushf
movl
jle
jns
sub
mov
repnz
lds
dec
cmp
pop
mov
int
jg
pop
inc
mov
jg
lret
mov
icebp
in
incb
sbb
cmc
inc
cli
sbb
add
iret
xor
pusha
cmp
test
nop
decb
cmpsb
mov
sahf
sub
dec
aas
xchg
in
decl
ljmp
bswap
sub
mov
daa
repnz
sbb
jmp
leave
nop
pop
ss
loopne
leave
test
xor
pop
xchg
dec
mov
mov
mov
xor
loop
mov
loop
std
adcb
aaa
pop
fcoms
int3
dec
xor
scas
xor
mov
adc
sbb
cmp
ja
mov
nop
add
enter
push
in
scas
xorl
dec
dec
xchg
in
sbbb
aad
stos
mov
in
sub
mov
ljmp
mov
insb
sub
mov
jle
mov
mov
dec
pop
xchg
xlat
mov
stos
sbb
or
add
sbb
scas
mov
mov
aas
aas
xchg
addr16
xchg
or
fistl
sarl
fadds
int3
stos
push
rclb
jg
repnz
jle
pop
push
cmp
mov
sub
mov
xor
loope
mov
ss
add
dec
sub
xchg
insb
std
fnstsw
push
imul
mov
gs
out
cmp
xchg
mov
repnz
aad
xlat
fwait
loope
jge
cli
cmc
das
stos
and
test
jbe
and
xor
push
mov
movsb
pop
stos
xor
sub
mov
adc
adc
insl
xlat
sub
push
inc
jecxz
cmp
imul
push
clc
fs
mov
std
adc
push
test
sahf
shl
rol
cmp
mov
mov
cmp
scas
icebp
and
xorb
push
mov
je
jne
xchg
add
out
das
fwait
daa
into
imul
and
jno
int
lret
pop
in
arpl
stos
data16
add
leave
call
push
mov
xchg
mov
movsl
xor
mov
pop
mov
xor
decl
push
push
inc
outsb
add
repnz
cmp
lahf
leave
mov
jecxz
push
sub
jae
ret
mov
mov
sbb
in
inc
xor
fisttps
repnz
mov
out
mov
sarl
mov
fcoml
cs
push
adc
jnp
mov
or
imul
movntq
xchg
or
lcall
loope
test
popf
mov
xor
addr16
mov
daa
pop
xor
ss
dec
lds
push
and
jle
int
testb
adc
xchg
sbb
out
repz
cli
scas
popf
cmp
mov
into
xchg
and
pop
aad
jo
notl
cli
and
lcall
icebp
nop
or
cltd
push
mov
sub
mov
mov
les
int
movsb
scas
adc
pop
adc
mov
pop
cmp
iret
addr16
and
pop
cwtl
gs
iret
mov
jle
shll
xorl
pop
mov
or
sub
adc
fdivs
fnsave
lea
lods
xlat
xchg
movsl
gs
inc
inc
fidivl
sbb
xorl
sub
leave
fcmovne
ret
das
shrl
cmpsl
or
inc
pop
dec
push
mov
dec
out
add
lret
mov
cltd
push
in
mov
incl
lahf
add
movq
push
xchg
lea
imul
out
mov
dec
push
add
push
xor
xchg
mov
aas
cmp
jnp
loopne
inc
loopne
mov
sahf
cmpsl
scas
sub
xor
lea
mov
dec
push
fadds
jmp
insl
mov
shll
xor
or
mov
jle
outsb
mov
lahf
xchg
pop
je
and
sub
jp
or
jbe
adc
jno
pop
inc
push
ret
jae
lret
xor
inc
mov
mov
xchg
in
or
sub
push
mov
cld
xlat
bound
mov
and
inc
and
adc
mov
jg
test
call
or
faddl
mov
outsb
test
dec
out
jg
std
rcl
adc
lods
push
or
das
add
sub
enter
mov
jb
test
mov
fidivrl
and
lahf
in
shll
ds
mov
jp
es
sub
add
jbe
mov
cli
jb
sbb
loop
xchg
xor
jg
mov
das
inc
xchg
inc
pushf
rcl
adc
in
sahf
jno
sti
and
push
jle
shrb
ljmp
xor
lret
dec
pop
push
imul
cmpsl
dec
inc
adc
jle
jb
inc
ljmp
mov
ret
ljmp
jo
jbe
sti
jno
pushf
fstpl
xor
cmpsl
stos
fldenv
scas
xchg
add
loopne
addl
aaa
out
in
sub
sub
es
or
lahf
mov
push
pop
mov
shlb
xchg
add
ret
dec
test
call
icebp
ret
pop
jbe
fsts
mov
mov
mov
pop
add
imul
fwait
jge
outsb
jle
leave
mov
insl
jns
pop
imulb
sub
in
aaa
add
lahf
out
adc
leave
lcall
ljmp
or
movsb
or
push
clc
jae
scas
add
push
rol
je
out
cmp
stos
lret
push
jg
push
arpl
lds
decl
xchg
sub
xorb
sbbl
mov
fisttpl
int3
jnp
cmp
pop
adc
pop
mov
scas
dec
jo
scas
mov
ss
fists
loopne
fxch
int3
rol
andl
pop
lret
sbb
xor
fildll
fisttpl
mov
cmpsl
ret
push
mov
mov
and
push
jle
adc
fsts
repnz
cli
push
imul
ficompl
mov
out
xchg
lcall
mov
ficoml
jecxz
out
fisttpll
movsl
mov
xor
fxch
mov
sbb
out
std
jno
and
dec
or
xchg
nop
jge
inc
fisttpl
in
jle
mov
sbb
dec
pusha
dec
test
int
mov
or
ljmp
sub
clc
and
arpl
int
jnp
cwtl
jl
call
inc
xlat
and
aam
cmp
or
mov
shll
insb
mov
in
rclb
cmp
lahf
xchg
sahf
push
dec
cmc
or
in
aas
or
int
mov
mov
xchg
enter
ss
sbb
cmpsb
loopne
es
dec
frstor
mov
sarb
testb
add
and
xchg
inc
stos
xchg
les
dec
adc
cmp
add
pop
mov
subl
or
pop
stc
int3
test
cwtl
jp
cwtl
test
ret
frstor
dec
sar
cmp
and
sub
arpl
pop
xor
aam
insb
rol
lea
mov
push
xchg
int
out
add
cmpsb
test
loop
fisubrs
or
inc
loope
pop
cmp
repnz
fsts
mov
jle
out
lcall
and
xorl
rclb
fidivrs
inc
ror
inc
fwait
shl
add
cmp
push
js
mov
xchg
ds
add
sarl
or
add
mov
divb
mov
aas
push
rolb
das
test
mov
int3
int
adc
xor
push
int3
loope
fisubs
js
idivl
sub
xchg
xchg
mov
push
sbb
scas
enter
sahf
sbb
pop
sbb
ror
pop
sub
lods
gs
jo
ss
xor
xchg
jp
and
cmpsl
pop
pushf
jl
adc
in
xchg
push
stos
xchg
jecxz
push
shl
scas
push
dec
loop
cmp
pop
jp
and
sbb
inc
xchg
imul
push
or
addr16
adc
inc
xchg
push
cmpsl
adc
push
push
cwtl
jmp
stos
pop
push
out
rolb
sub
je
xchg
stc
scas
mov
jbe
imul
adc
xchg
cwtl
ret
mov
iret
jmp
sbb
or
in
stos
loop
sti
dec
pop
aad
mov
push
push
jbe
lds
lds
mov
clc
out
lods
jge
adc
lret
in
fs
les
push
pop
adc
das
push
scas
or
fdivrs
aad
sbbl
jnp
or
aas
cmp
mov
cwtl
js
push
js
mov
adc
cmp
test
pop
mov
ret
push
mov
ljmp
xor
inc
cld
jle
xor
mov
imul
mov
inc
sub
xchg
mov
jl
and
loope
sub
jp
and
pop
das
loope
cli
mov
sbb
inc
iret
ret
je
sbb
mov
adc
adc
mov
mov
mov
in
movsb
mov
pop
mov
test
ljmp
add
movsl
jge
stos
mov
nop
int
xor
cwtl
repnz
repz
cmp
cmp
in
loope
mov
leave
dec
push
jne
jbe
scas
mov
xchg
jp
out
push
mov
jnp
sarw
add
fcmovu
filds
fisttpll
mov
jge
loope
lahf
sahf
push
mov
in
sti
ljmp
sbb
nop
ror
loope
ja
out
xchg
ja
ljmp
mov
pop
xor
insl
mov
xchg
xchg
jnp
mov
mov
aaa
out
mov
insl
adc
stos
or
andl
sub
xchg
loopne
jo
fcompl
adc
mov
push
sub
call
sbb
adc
rcrb
repnz
js
aam
jbe
data16
lods
pop
lods
cmp
push
clc
or
adc
inc
xor
adc
in
stos
dec
adc
push
mov
pop
xchg
mov
dec
jle
cmp
push
inc
lods
rclb
test
sub
lahf
stos
popa
pop
popf
inc
mov
notl
cs
cltd
xchg
sahf
fwait
cmp
ljmp
mov
and
pop
inc
test
pusha
movsl
push
xchg
aad
jecxz
and
mov
mov
aas
stc
mul
int3
or
bound
mov
loope
adc
fcmove
and
test
pop
notl
movsl
dec
fsubl
inc
jge
add
mov
ss
bound
les
inc
lods
jno
dec
lret
xor
loop
loop
repnz
sti
xor
pusha
clc
push
test
push
mov
inc
mov
and
fldl
ljmp
outsl
sub
mov
xor
out
notl
adc
clc
adc
adc
inc
cmpsl
adc
cs
mov
adc
push
notb
ror
push
inc
lock
and
shrb
push
cltd
pop
dec
pop
ds
pop
stos
jbe
mov
popf
sub
lea
jecxz
pop
stos
and
outsb
test
pop
xchg
addr16
pusha
shr
add
mov
push
popf
int3
xchg
out
jl
mov
jo
lret
bound
pop
popa
mov
fldcw
repnz
sti
xchg
shr
nop
fstps
inc
xchg
lret
adc
sub
mov
cmc
add
pop
and
sti
cltd
sub
out
lahf
pop
pop
ret
or
dec
loope
jg
test
xchg
mov
xor
nop
test
in
sub
sub
fildll
ss
adc
jnp
lahf
cwtl
or
jns
jge
pop
cmpsl
push
repz
pop
lds
cli
pusha
loope
out
cmpsl
sbb
into
cmp
ror
out
sub
push
pop
out
or
pop
lret
rolb
clc
inc
mov
jmp
in
movsb
test
xor
jbe
sub
sub
popf
fdivrs
mov
scas
and
mul
rcll
aas
xor
mov
pop
pop
push
cmp
subb
lock
push
cmp
adcb
mov
jo
in
mov
arpl
es
xchg
sub
pop
dec
popa
mov
mov
pop
inc
lret
jbe
xor
and
xor
inc
mov
push
aas
test
mov
and
and
adc
or
fwait
jne
inc
in
jp
cmp
pop
test
dec
addr16
fsubs
sbb
int3
and
out
pusha
jns
push
shrb
ja
and
fptan
jl
dec
mov
lods
xchg
cs
cmp
clc
popa
lods
adc
push
or
sbb
xor
push
mov
and
sub
and
add
sti
mov
jg
aas
sub
fisubrl
inc
in
test
popf
sub
jl
cmp
and
xchg
mov
and
out
cmc
sbb
fsubl
out
enter
adc
loope
andb
jge
sbb
inc
mov
cwtl
fisubrl
sti
scas
jp
sub
mov
add
cld
jne
in
add
push
and
pop
addr16
cld
add
mov
or
addr16
int
pop
or
lods
push
data16
jne
inc
or
pop
enter
add
mov
iret
int3
and
jecxz
scas
xor
jbe
or
xchg
popf
mov
outsb
xor
push
or
sub
pop
lret
push
cmp
cmp
xchg
movsb
jo
scas
inc
addl
inc
cltd
int3
iret
scas
out
ja
and
xor
mov
dec
xchg
inc
int3
sbb
xorl
ror
sbb
pusha
dec
lahf
dec
sbb
sbb
repz
add
mov
and
dec
adc
mov
or
test
fsts
xor
cmp
dec
sahf
push
lock
jmp
or
decb
inc
xlat
loopne
pop
mov
and
in
sub
insb
stc
ret
and
xchg
movsb
and
out
cmp
xor
loopne
adc
add
adc
push
cmp
add
into
pop
or
sarl
xchg
lret
mov
adc
jb
sub
mov
insw
jnp
xor
lods
xchg
out
out
enter
bound
aaa
sub
cli
inc
adc
rolb
fidivrl
cmp
jecxz
push
push
loopne
mov
push
das
xor
fmuls
sub
scas
mov
cmp
inc
add
xor
pop
xor
ret
jns
and
push
int3
ficoml
inc
sbb
outsl
mov
faddl
push
shl
pop
cs
sbb
das
and
cld
sahf
inc
cmp
addr16
cmp
dec
fs
dec
fmull
cwtl
cmp
fmul
lds
or
shlb
sbbb
cmp
or
lock
jg
loop
cmp
inc
jb
mov
add
jo
xchg
sti
jns
inc
dec
xchg
sub
inc
fxch
cmpsb
lcall
loope
and
and
mov
or
cmpsl
mov
mov
inc
mov
jl
je
movsb
push
movsl
test
int3
jo
push
mov
mov
fdivs
jns
sbb
sbb
and
xchg
adc
cmpsl
repz
sbb
movsl
lret
enter
jp
outsl
aam
sarl
sahf
dec
push
in
mov
lcall
shrb
or
scas
push
pop
xchg
and
fbld
cmpb
xchg
cmp
push
xchg
dec
jg
rcrb
into
jmp
cld
pop
push
mov
adc
ss
pop
cltd
or
push
mov
lahf
and
cmp
jl
les
add
push
dec
dec
lahf
mov
int
shrb
xor
adc
and
xor
leave
push
daa
sbb
negb
lea
adc
lods
cmc
jns
rorl
adc
pushf
dec
mull
mov
mov
ja
enter
mov
sbb
lahf
and
pop
stc
in
cwtl
loop
and
jg
add
sbbb
xchg
fcomp
cmpsb
fwait
pop
addr16
in
imul
icebp
fnsave
pop
rcrl
out
xlat
popf
imul
fs
mov
aam
mov
sub
xchg
jl
jmp
fsubs
pusha
mov
or
mov
xor
out
jge
inc
call
into
sub
push
loop
dec
in
pop
fcomp
jle
into
lcall
inc
xchg
xchg
adc
mov
cmp
push
fimull
stos
cmpl
jns
leave
push
xchg
in
std
sbb
xchg
fdivl
movsl
pusha
aaa
psrlq
mov
sub
mov
mov
loop
cli
lahf
jnp
fiaddl
testb
mov
jno
in
cmp
mov
and
and
push
jnp
out
ja
ljmp
and
mov
and
leave
pop
sub
cli
shr
or
dec
xchg
push
fs
scas
in
or
adc
pop
push
dec
movsb
inc
jno
hlt
imul
jnp
fists
adc
lea
fnstenv
fsubrp
inc
es
ljmp
xchg
xor
in
test
in
repnz
pop
imul
ret
mov
call
shrb
adc
xor
stos
dec
lcall
mov
movsb
or
and
adc
pop
andl
mov
sbb
mov
mov
mov
adc
cwtl
pushf
or
adc
shrb
and
sbb
dec
insl
mov
mov
pop
enter
jns
dec
add
subb
and
jecxz
ret
in
jecxz
and
rcrl
pusha
mov
xchg
mov
xchg
popa
das
mov
cmp
push
out
mov
mov
inc
out
adc
or
mov
scas
xchg
mov
lea
cmc
dec
jl
or
loopne
mov
dec
pop
push
jecxz
jp
mov
loopne
xor
xchg
and
lcall
pop
or
dec
mov
ret
push
shlb
fneni(8087
popfw
push
mov
xchg
push
dec
adc
lret
cmp
jmp
rorb
cmpsb
hlt
rcll
adc
call
int
inc
dec
mov
es
data16
fldz
push
lds
push
inc
dec
daa
in
xchg
sub
fnstcw
aas
stos
fildl
test
add
inc
cltd
sbb
jae
ja
arpl
cmc
jmp
dec
dec
mov
int
inc
jo
test
je
sbb
inc
or
xchg
jnp
xor
dec
loop
fistps
mov
lods
pop
xchg
or
icebp
xchg
mov
mov
int
into
cmpsb
fwait
and
mov
pop
inc
stos
addb
push
jnp
and
xchg
adc
ljmp
add
nop
cwtl
fs
cmp
ds
add
push
repnz
dec
jb
mov
mov
push
xchg
je
pop
mov
xchg
enter
cmp
ror
imul
sti
jnp
lahf
pop
xor
es
sub
cmc
cmp
mov
sbb
imul
dec
lahf
and
jno
mov
ror
add
cs
nop
mov
xchg
scas
cmp
mov
fdivl
mov
pop
sbb
lods
mov
test
mov
jno
mov
lods
sbb
sbb
mov
int
mov
add
stos
and
dec
xor
sahf
adc
cwtl
inc
xchg
pop
out
out
add
jns
out
test
xor
mov
mov
xchg
xor
mov
mov
cmp
lock
mov
fstl
sub
stos
and
stos
inc
xchg
push
into
js
shll
jbe
dec
js
icebp
pop
cmp
rcll
add
mov
test
and
add
nop
test
add
xor
push
sti
stos
add
jmp
sub
adc
xor
dec
out
xchg
mov
pop
out
mov
or
out
inc
pop
in
jl
cltd
push
lds
lcall
lods
sub
xchg
fsubr
xchg
js
mov
loope
pop
rcr
mov
xchg
in
sbb
and
int
mov
pushf
inc
mov
pop
insb
sbb
imulb
cs
mov
jns
cmpsb
sahf
pop
sub
je
popf
out
scas
dec
fwait
dec
sbb
clc
out
aam
or
int
mov
out
into
shrb
or
repnz
rcl
icebp
mov
mov
mov
lods
jl
jg
inc
jbe
fdivrp
cmpsl
push
out
jbe
lahf
pop
add
pop
insb
clc
xor
sbb
loope
jae
push
call
add
push
jp
push
sub
ja
mov
sbb
cmp
cwtl
popl
cmp
imul
push
std
pop
push
pop
stos
mov
andl
mov
xlat
test
test
xchg
in
jg
pop
sub
cwtl
pop
inc
inc
adc
lret
xchg
out
add
mov
pop
mov
rorb
sub
int3
cmp
in
pop
mov
outsb
cmpsb
clc
mov
inc
pop
divl
jo
subb
stc
lret
dec
sub
lcall
loope
inc
cmpsb
pop
and
mov
jbe
dec
cmp
push
jns
adc
in
mov
out
inc
dec
data16
mov
add
sahf
ret
mov
imul
jns
push
test
push
jge
add
mov
sbb
jne
lcall
nop
mov
dec
jo
ljmp
mov
mov
fcoml
xchg
out
test
adc
dec
mov
push
mov
cmp
and
mov
adc
xor
pop
xor
out
push
xchg
mov
jp
mov
or
iret
pop
adc
inc
mov
mul
pop
push
lret
shufps
mov
mov
andl
cmp
pushf
pop
jns
mov
xchg
xorb
movsl
scas
sarl
data16
scas
mov
and
adcl
out
mov
pop
jae
push
sub
xor
lret
or
sub
mov
jl
ret
xchg
ret
fsubrs
popa
xlat
or
outsb
add
mov
push
inc
stos
pushf
aam
cmc
cmc
pusha
jge
pop
mov
mov
aaa
fcom
nop
adc
sub
outsb
cmp
push
sub
leave
ret
xchg
xor
iret
faddl
cmp
js
mov
fwait
je
mov
push
outsl
insl
repz
mov
xchg
mov
ja
loop
xchg
dec
jae
or
xchg
push
pop
pop
mov
push
dec
pop
jle
sbb
lret
repnz
add
xor
cmp
mov
and
jecxz
jae
jecxz
addr16
mov
ss
lahf
xchg
fs
add
or
fisttpll
mov
jle
sbb
test
repz
ds
ret
rclb
dec
pop
dec
out
std
inc
jns
inc
sbb
arpl
ret
aas
and
mov
or
or
jnp
lds
jg
arpl
out
sub
popf
lahf
xorb
stos
pop
roll
add
out
adc
sti
into
push
or
dec
push
and
inc
or
jno
bound
mov
mov
add
mov
jl
aas
scas
movsl
lods
clc
pop
insl
fidivl
sbb
add
push
fcoml
and
sahf
jge
std
js
leave
repnz
mov
out
cs
xchg
or
inc
mov
icebp
sbb
adc
mov
data16
cmpsl
mov
addb
jns
xchg
add
push
sub
push
hlt
push
push
lds
xor
cmp
dec
orl
inc
sub
je
mov
sti
or
je
or
cld
hlt
pop
adc
cmp
ja
repz
xchg
ja
shll
xlat
imul
xchg
jg
shl
cmp
adc
in
fcoml
fs
ljmp
mov
std
mov
sub
insl
and
stos
mov
lods
hlt
jmp
in
push
cmp
and
fwait
push
push
xchg
mov
in
inc
and
xor
xchg
push
or
test
cwtl
and
mov
dec
test
cmp
or
jo
and
fimull
jecxz
dec
imul
fistpll
stc
cmpsl
push
iret
lret
movsl
jmp
icebp
xchg
int3
xchg
imul
cmp
pop
dec
inc
int3
xor
popf
xacquire
mov
sub
pop
mov
shrl
aas
dec
and
push
sub
push
inc
pop
xlat
mov
pop
sub
pop
sub
int
xchg
nop
sti
push
sub
adc
mov
and
das
sti
pop
mov
jmp
or
add
or
das
xchg
stos
cmpl
push
xor
aam
add
inc
nop
jecxz
mov
and
xchg
or
xor
daa
insl
bound
sbb
mov
lcall
and
push
xchg
insl
mov
push
jno
xchg
movsb
outsb
stos
jmp
rol
dec
sbb
dec
out
push
fwait
sahf
xlat
inc
fisubs
call
jl
lock
lods
mov
inc
sub
into
jb
je
inc
dec
cmovb
int3
cmp
shl
lret
cmpsl
mov
xor
popf
push
shl
jl
jbe
hlt
cmp
xor
pusha
xlat
mov
and
loopne
mulb
jo
adc
jg
adc
adc
test
adc
fcompl
stos
add
les
adc
into
rcrb
cli
and
dec
sbb
imulb
lea
test
lcall
in
cwtl
jecxz
fld
stc
scas
push
loop
mov
pusha
xchg
sbb
clc
test
cmpsb
mov
imul
cmp
and
mov
jns
aad
add
dec
jp
add
cmp
mov
dec
pop
or
mov
mov
inc
bts
ljmp
cld
add
repz
xchg
dec
pop
cmp
enter
insb
adc
inc
out
shl
test
add
cmp
ret
cmp
mov
int3
cmpsl
jbe
shll
repnz
cmpl
sbb
sbb
adc
testl
mov
cmp
add
cli
sbb
or
inc
enter
jle
cmp
sbb
mov
repnz
mov
out
das
sbb
mov
arpl
stc
pop
test
jae
push
mov
mov
lock
lret
sbb
daa
push
insl
fsubr
pop
add
clc
push
mov
ret
pop
call
ljmp
fisubl
inc
in
or
jnp
xlat
fadd
int3
icebp
dec
mov
daa
add
and
jge
inc
add
sub
jecxz
lcall
pop
mov
push
lock
xor
inc
push
lods
pop
out
dec
loop
sub
xchg
mov
dec
xor
push
push
pop
pop
jp
rcll
push
mov
pushf
push
loopne
adc
cmpsl
mov
ret
mov
pop
jae
call
jo
jns
cmpsb
std
jo
mov
or
fnsave
lock
push
cmc
inc
ror
stc
insb
add
stos
pop
jns
adc
call
jmp
lret
push
jae
pop
pop
sbb
xchg
stc
dec
mulb
mov
jle
cli
test
scas
inc
cmp
rol
xchg
mov
sbb
pusha
cs
out
sbb
in
repz
imul
iret
or
cmp
cmp
adc
pop
jno
dec
mov
movsb
adc
pop
fdivrp
cmpsl
sbb
pusha
and
fisttpl
mov
ds
xor
sbbb
shlb
inc
xorl
cmp
int
mov
int
add
movsl
sbb
add
jecxz
test
std
nop
jl
nop
and
and
inc
dec
fistpl
frstor
scas
inc
sbb
inc
scas
cmp
pop
out
adcb
dec
pop
mov
out
push
jno
mov
rorl
fldenv
addr16
arpl
jge
arpl
add
mov
lret
scas
mov
call
movsb
jmp
bound
vpcomgtud
fwait
lods
lods
or
aad
xchg
add
movsl
push
mov
js
mov
push
or
dec
arpl
and
dec
icebp
jnp
pusha
in
mov
add
test
and
fsubs
cmp
pop
out
maskmovq
divl
dec
loope
jno
adc
jmp
aas
jecxz
std
lock
and
and
or
imul
xchg
aas
xchg
gs
xor
fsubl
test
out
orb
sub
mov
inc
xchg
push
mul
scas
or
iret
sbb
outsb
in
pop
sbb
mov
movb
jmp
mov
enter
cmpsb
cmp
mov
shll
lea
insl
loop
and
int
jecxz
insl
enter
xchg
jnp
mov
jecxz
ret
sub
lret
roll
cli
push
repz
xor
out
sbb
jno
sbb
in
dec
js
test
jns
mov
ds
sub
dec
fxch
fbld
cs
sub
xor
xchg
push
je
add
aam
cmpsl
mov
lock
mov
jns
jne
pushf
dec
jo
test
jle
jbe
pop
ljmp
in
sub
or
inc
paddsw
pusha
pop
adc
fstps
lahf
out
jne
xor
jbe
dec
test
sub
mov
movsb
dec
push
adc
ljmp
mov
out
pop
dec
xchg
fucom
testb
sbb
jb
mov
daa
sbb
insb
xchg
jmp
add
jecxz
and
outsl
and
ss
or
loop
call
in
jmp
inc
mov
stos
adc
imul
popa
sti
mov
inc
test
ss
add
or
sbbl
adc
sbb
repnz
pop
xchg
imul
add
idiv
aas
je
loopne
testl
test
push
mov
push
cmpb
mov
div
orl
mov
stos
pop
pop
pushf
adc
dec
jnp
push
fs
jo
les
movsl
mov
and
inc
orl
lret
xor
jne
bound
xchg
push
insl
scas
jne
aad
gs
emms
cmp
aam
cld
imul
pop
xor
aas
cltd
js
xchg
stos
scas
outsl
mov
int3
jbe
subb
adc
push
xlat
js
lahf
pop
aas
lods
pop
jne
and
fistps
or
aad
ljmp
aam
int
sbb
in
xor
stos
mov
jae
enter
cltd
xor
mov
neg
dec
cmp
cmp
mov
add
xlat
repnz
add
insl
fdivrl
mov
arpl
mov
imul
cmp
sub
lcall
jle
sub
out
or
mov
stos
fs
mov
daa
clc
pop
aas
add
xchg
icebp
pushf
sub
xor
inc
rorb
and
mov
mov
popf
add
xchg
jns
push
jb
sbb
adc
jb
adc
mov
iret
cmpsb
movsl
cli
cs
fucom
sbb
pop
xor
aaa
int
jmp
and
leave
cmp
mov
and
out
xchg
cltd
mov
test
jge
ds
mov
cmp
xchg
mov
std
xchg
xlat
sub
inc
je
adc
movb
sbb
cmp
sub
jle
push
pop
lds
fdiv
adc
sbb
xchg
fildl
mov
inc
out
mov
add
pop
push
adc
cmp
lahf
mov
in
push
rep
cmp
or
jne
stos
mov
adc
popa
ljmp
into
fdivrl
incl
pop
push
dec
push
xor
xor
ds
or
xchg
sub
or
roll
push
sub
mov
xlat
mov
xor
std
arpl
push
inc
mov
and
xor
in
or
xchg
push
cmpsb
das
call
aaa
bound
iret
out
jno
xor
inc
ficomps
popa
mov
or
push
rolb
mov
lret
cmpsb
or
dec
adc
sbb
scas
ja
sub
mov
or
fdivrl
into
and
sti
mov
stos
cmpsb
inc
pop
mov
adc
call
jge
out
xchg
jns
xor
mov
movsl
jg
mov
dec
pop
mov
ficomps
lcall
sbb
push
ret
test
iret
mov
fidivrl
insb
push
sbb
sar
dec
fs
pop
cwtl
bound
outsl
adc
inc
sbbb
push
dec
dec
loopne
decb
mov
mov
add
pusha
icebp
out
rcrb
cltd
fcmovnbe
push
and
in
mov
add
je
je
sarl
sbb
sub
xor
std
mov
xchg
mov
test
cmpsb
jge
sub
pop
cltd
aaa
not
stc
icebp
test
cltd
aas
nop
cmp
mov
sarb
fistps
cmp
out
dec
sub
fisubl
lods
or
gs
mov
xchg
add
icebp
pop
pushf
xchg
mov
mov
mov
cmp
ret
sub
aam
fs
push
and
loope
ja
sahf
data16
mov
aaa
fwait
aas
and
outsb
push
aas
mov
icebp
mov
repnz
sub
out
imul
push
lcall
mov
repnz
push
imul
fcomip
movsb
push
inc
sbb
imul
add
adc
mov
aad
adc
dec
loop
outsl
pop
lods
pushf
adcb
mov
popf
adc
lods
cmp
sub
xchg
inc
or
pop
pop
jnp
sub
popl
scas
cmp
outsl
aad
cmpsb
cltd
pusha
enter
cld
shrl
dec
cmc
push
icebp
leave
cmp
imul
adc
dec
jp
and
and
iret
lcall
lcall
leave
lock
sub
ret
push
push
push
push
out
clc
add
in
ja
ficoms
ljmp
fstp
cmc
mov
adc
mov
xchg
and
mov
je
fidivrl
inc
mov
bound
imul
xchg
lret
enter
inc
add
int3
dec
imul
pop
adc
xchg
xchg
sbb
pop
jl
fdivl
mov
pop
push
pop
inc
push
push
dec
into
in
lret
ds
inc
shrl
cmp
push
je
lahf
repz
dec
push
add
jg
rorb
out
add
cmp
jp
lret
popa
daa
push
popa
cwtl
outsl
out
movsb
mov
push
push
mov
mov
adc
mov
iret
shll
loopne
scas
loopne
push
cld
std
dec
rorl
lds
sbb
inc
imul
inc
es
and
cmpsl
loop
lret
inc
sbb
repz
pop
mov
inc
pop
movsl
mov
pop
pop
cmp
fisubrl
stos
pop
aad
data16
stc
or
dec
jmp
ret
mov
push
add
std
mov
and
arpl
sbb
mov
dec
cmpl
or
mov
jnp
stos
pop
pop
mov
push
jmp
addr16
adc
fiadds
loopne
push
scas
cli
out
push
clc
std
ss
pop
mov
mov
bound
or
jo
icebp
cmp
mov
aam
mov
sub
mov
sub
sub
cmp
xchg
add
pmulhw
sarl
sbb
ficompl
mov
dec
iret
mov
mov
xchg
scas
mov
aas
popf
mov
add
daa
xchg
jae
pusha
xchg
icebp
push
out
push
into
pushf
add
and
fdivp
inc
lret
dec
sub
push
ficoml
aaa
imul
movsb
in
std
loopne
dec
hlt
mov
stc
iret
gs
dec
dec
aaa
aam
test
ficomps
add
xchg
jmp
xor
push
xchg
sub
add
xor
or
roll
mov
and
in
pop
xor
cltd
xchg
leave
inc
sbbb
ss
cmpl
sbb
mov
adc
addr16
inc
jge
dec
inc
stos
cwtl
pop
clc
insl
or
je
jg
pop
xor
mov
in
and
dec
test
je
xchg
insb
clc
inc
sub
sub
dec
imul
inc
clc
xchg
push
ficoml
inc
and
push
int
mov
insl
push
lahf
mov
divl
dec
mov
jbe
js
jmp
jge
leave
int
mov
es
aam
orl
sub
inc
rcll
fistpl
pop
dec
add
xor
mov
sub
sbb
adc
loop
mov
lods
cmpsl
stos
xor
ror
es
push
xchg
aam
add
and
push
cmp
jo
popa
or
jmp
push
adc
mov
push
sub
subl
cmp
stos
inc
movsl
fs
and
out
add
cmp
in
daa
sbb
fiadds
ds
popa
ja
lcall
fnstsw
sub
mov
xor
fsubrl
mov
jae
cmpsl
out
and
repz
xor
pusha
dec
icebp
cmp
lret
add
cmp
in
fdivl
push
shlb
mov
inc
lods
mov
das
mov
cmovne
movsl
inc
out
cmp
push
cmp
in
mov
aaa
sub
idiv
xchg
adc
mov
pop
aad
push
aaa
and
es
add
inc
xchg
jb
out
pop
pop
test
mov
mov
mov
fsubl
jp
jecxz
lcall
sbb
mov
sub
cmp
cli
arpl
dec
rolb
das
pop
dec
sbb
clc
inc
inc
xchg
rol
jno
scas
pop
mov
ljmp
pop
imul
lds
push
pop
out
popa
mov
es
push
aaa
mov
jecxz
sbb
inc
jp
push
xchg
mov
fcompl
xchg
cltd
adc
hlt
push
jo
fwait
sahf
push
lock
jl
stos
mov
cltd
call
xchg
popa
out
push
cmp
or
jmp
lock
pop
jb
sahf
adc
mov
or
cs
or
jb
sbb
rorl
imul
jb
jno
xchg
das
pop
add
cltd
mov
pop
imull
int
pop
pushf
jge
dec
fstps
arpl
or
shll
dec
frstor
push
aam
scas
ljmp
stc
pop
inc
jg
xchg
sbb
dec
orl
xchg
lret
push
xchg
fnstsw
jecxz
or
loopne
push
push
loope
testl
or
clc
repnz
jne
push
leave
or
rcrb
cld
jg
pop
movsb
aad
mov
push
jge
dec
dec
js
jl
mov
add
xchg
popa
jb
jge
ja
shr
aad
jp
mov
add
xchg
sub
hlt
mov
cmp
xor
or
push
push
movsl
mov
xor
notb
inc
mov
cmpsl
xchg
fiaddl
xchg
adc
cmovge
cmpb
pop
push
pop
mov
movsb
aam
adc
in
pop
jl
addr16
ss
inc
pop
bound
sub
xor
xor
mov
push
pop
arpl
jl
cmp
mov
xor
fcmovnb
jno
loop
pop
xchg
jmp
dec
ss
inc
test
jns
xor
notl
inc
leave
stos
pop
add
add
imul
in
or
roll
push
push
adc
inc
lods
lcall
cmp
xor
fdivl
es
push
les
xlat
mov
add
lock
pusha
shl
add
lds
push
inc
pop
sti
jl
dec
cwtl
arpl
sub
dec
ja
inc
push
mov
out
add
and
xchg
jg
adc
sub
push
jne
push
and
mov
jne
xor
push
movsb
sub
call
je
lcall
push
jl
ss
je
and
lret
scas
sub
aaa
pop
jne
daa
cmc
sti
pusha
sub
lea
push
inc
xor
adc
mov
in
add
adc
stos
xchg
mov
adc
mov
pmaxsw
sti
movl
pop
fimull
mov
xor
jge
notb
dec
mov
inc
arpl
decb
jb
inc
out
jge
mov
lret
dec
inc
jecxz
xchg
leave
sub
loop
das
xor
aad
fwait
hlt
push
cltd
xchg
mov
nop
frstor
pop
jnp
xor
call
sbbl
jecxz
enter
arpl
inc
jo
and
cmp
jo
test
fdivrl
xchg
push
ja
or
bound
lret
loopne
outsl
dec
xor
lds
push
xor
or
cs
cmp
sahf
out
lock
pop
and
enter
pop
lods
lret
sub
and
loope
pop
leave
sbb
mov
cltd
mov
insb
add
xchg
cltd
cli
loop
lret
dec
aam
dec
inc
cmp
cmp
dec
cmp
in
lods
and
lret
xlat
jmp
jbe
std
dec
gs
ficoml
mov
shlb
out
fsubl
xchg
movsb
push
lods
inc
pusha
mov
aad
nop
and
cmp
jno
out
xchg
or
dec
hlt
dec
add
cmpsb
lret
mov
cld
testb
jge
sbb
ds
out
dec
add
dec
dec
dec
je
jg
sub
dec
add
call
pushf
xbegin
rclb
fldl
inc
mov
pop
cmp
orb
dec
enter
arpl
test
out
in
adc
push
scas
aam
ficoml
ret
in
jno
aaa
fwait
cmp
inc
aaa
push
sbb
add
jge
dec
dec
inc
mov
and
rcrl
pop
push
xchg
mov
int
push
in
jl
dec
sub
lret
sbb
cmp
add
xor
mov
mov
and
pop
adc
mov
add
ret
clc
cmp
push
nop
cmp
dec
mov
mov
stc
xlat
or
popa
mov
rcl
xchg
dec
mov
xchg
aas
mov
mov
aad
push
imul
repz
xchg
jp
shl
pop
lds
addl
mov
adc
lods
in
neg
fsts
negl
imul
test
mov
repnz
xlat
shrl
std
sbb
cmpsb
mov
sub
xor
mov
cmp
ss
add
pop
jnp
push
mov
pop
or
mov
or
pop
push
popl
fcompl
cli
js
in
sahf
andb
cmp
ss
push
std
es
push
push
sub
ljmp
jmp
mov
bound
pop
sub
cmpsl
aad
mov
adc
arpl
outsl
sub
das
xchg
ficompl
jo
sbb
repnz
shrb
mov
add
push
or
push
sub
pop
xchg
in
mov
fldt
mov
in
addr16
xor
das
adc
fdivs
sahf
mov
dec
or
adc
adc
push
pop
sbb
scas
sub
mov
repnz
inc
and
jno
and
cmp
subl
push
or
cltd
test
jne
xor
push
das
loopne
lods
cmp
jns
mov
jmp
je
or
xchg
in
andl
jnp
mov
mov
scas
testb
mov
xchg
push
jmp
push
mov
lock
in
std
or
lret
jnp
in
mov
inc
pop
push
xor
push
adc
or
movaps
push
sbb
pop
repz
push
sti
inc
jb
mov
aaa
mov
sub
inc
loope
fcoml
sub
push
leave
aaa
mov
dec
push
popl
jo
xchg
jle
insl
lods
adc
jnp
jle
pop
xchg
or
add
add
sbb
fsts
adc
mov
push
push
dec
jo
lods
dec
cmc
mov
jbe
stos
bound
sub
pop
bound
dec
in
pop
outsl
stos
hlt
test
mov
arpl
inc
push
negb
jnp
xor
xchg
sub
movl
sbb
xchg
sub
jno
fcmovu
fucomp
shll
push
sbb
cmp
adc
mov
xchg
loopne
or
mov
ljmp
xchg
adc
pusha
subb
mov
xchg
cwtl
dec
iret
int
add
shll
test
cmp
movsb
xor
cmp
push
icebp
shl
pop
in
jne
stos
inc
ss
adc
sbb
cmp
inc
push
and
pop
sub
popa
cmp
fdivrl
push
mov
mov
add
ret
pop
fdivrs
xchg
nop
pop
mov
gs
sbb
arpl
jno
daa
xor
sbb
mov
push
btr
inc
cltd
inc
xchg
pop
jbe
mov
cwtl
add
dec
push
adc
enter
pusha
inc
pop
out
and
add
and
out
xor
in
mov
dec
sarb
rolb
or
dec
mov
ret
in
iret
into
scas
fimull
into
pop
mov
shll
cmpsl
mov
dec
jmp
push
cmp
fildl
push
arpl
push
xchg
clc
ljmp
enter
xchg
add
ds
fdivrs
fsubrp
cwtl
test
mov
stos
stc
or
aam
into
or
push
sbb
jl
or
dec
push
ja
mov
cmp
pop
int
adc
push
ret
mov
pop
or
or
sbb
lgs
sbb
imul
sti
shll
xlat
sbb
movsb
sub
cmp
in
dec
add
xor
jo
sub
imul
mov
js,pt
aas
ret
adc
loop
xchg
pop
fwait
daa
or
cmp
fimull
scas
cmp
mov
std
push
add
loop
mov
or
sub
nop
hlt
cmc
jo
mov
mov
and
jns
daa
adc
mov
inc
push
or
pusha
hlt
pop
or
or
and
lcall
sub
inc
sbb
mov
push
mov
add
and
jge
outsb
and
pop
jns
lock
push
or
icebp
vpcmpeqd
sti
fsubrs
mov
xchg
mov
mov
out
orb
popf
mov
repnz
xor
xchg
idivb
mov
fnsave
cmp
das
xor
push
adcl
out
dec
scas
repz
dec
xchg
lds
dec
pop
imul
dec
aaa
hlt
dec
mov
push
and
stos
ret
scas
add
push
pop
xor
xchg
or
imul
hlt
ja
mov
aam
aaa
outsb
lcall
jmp
xor
jp
mov
lcall
sub
mov
cmp
xor
and
xchg
in
xlat
outsl
pop
mov
insb
mov
push
push
daa
std
rcrl
or
pop
test
cmp
jmp
sub
shlb
inc
mov
push
xor
cmp
les
test
test
xchg
aad
cwtl
pause
mov
notb
lds
lcall
cmp
mov
mov
in
mov
and
push
and
or
jb
sbb
sub
push
mov
ljmp
jge
nop
sbb
jae
dec
sahf
stc
hlt
sbb
mov
sub
sbb
arpl
mov
xlat
aaa
pop
jo
scas
mov
jae
mov
cmp
mov
test
vmulss
xor
lds
hlt
mov
mov
movsl
mov
sbb
jb
inc
inc
daa
mov
xchg
mul
push
sbb
jge
aaa
cmpsl
push
or
outsl
pop
adc
add
pop
mov
roll
nop
int
push
push
rcr
stc
mov
jmp
fs
daa
jo
mov
or
sub
stos
mov
push
or
push
outsb
dec
inc
mov
imul
cmp
inc
or
stc
daa
rcrl
dec
lahf
xchg
sub
add
ss
mov
mov
jg
jle
add
jne
sub
jle
subl
cltd
pop
xlat
push
pop
xor
jp
sbb
xor
add
in
cmp
xchg
gs
mov
adc
and
into
pop
cmp
inc
iret
gs
shrl
jmp
rorl
cmp
cmp
and
xchg
jns
xor
push
addr16
hlt
je
sahf
out
inc
jb,pt
lods
cmp
scas
mov
ds
sbb
cwtl
pop
sbb
loopne
mov
roll
es
mov
stos
push
xlat
fwait
sub
pusha
push
xchg
in
scas
xchg
out
dec
push
sbb
cmc
pusha
mov
sub
out
dec
les
int
js
cmpsb
or
push
push
in
jbe
fincstp
jl
fdivrp
fwait
push
add
mov
jae
aad
xor
xlat
xor
icebp
in
mov
daa
pusha
cld
data16
dec
nop
add
push
lcall
cmpsl
int3
andb
fwait
xchg
fwait
in
mov
add
mov
imul
cmp
inc
pop
test
inc
or
jecxz
les
jbe
adc
xchg
outsb
push
das
shll
sub
test
cli
jne,pn
icebp
out
loopne
sahf
lahf
jns
jne
ret
fcmovnbe
dec
dec
xchg
cs
movsb
adc
push
push
add
sti
loope
data16
add
push
add
std
pop
xchg
mov
mov
mov
jmp
pop
cmc
clc
repz
insl
fmuls
mov
inc
or
and
popf
icebp
imul
into
pop
rcll
mov
sti
jns
cmp
inc
cmc
outsl
jo
leave
inc
sub
fstp
inc
lea
ds
imulb
mov
lahf
push
insb
xchg
dec
rorb
jl
stos
push
mov
pop
jle
lahf
and
jg
aaa
les
sub
add
and
push
nop
push
pop
arpl
adc
jne
loop
aas
insb
jmp
int3
pop
mov
lahf
popa
lods
cwtl
push
add
sti
inc
sub
iret
dec
inc
mov
repnz
sahf
and
mov
adc
push
aaa
faddl
cmpb
cmp
imul
pop
fadds
cmpsl
and
lcall
and
stc
pushf
repz
cmp
jecxz
fdivs
andl
aaa
stos
push
mov
data16
add
sub
gs
pop
mov
adc
repnz
push
xor
push
lods
inc
std
add
xchg
and
add
ds
sub
aad
sahf
xchg
pop
jb
das
sub
outsl
jg
mov
adc
push
inc
fisubrl
lcall
dec
dec
or
xchg
mov
jle
jge
das
pop
inc
ffree
ret
push
lea
mov
aad
mov
cli
add
lret
daa
repz
clc
dec
mov
ret
shrl
out
loope
and
testb
movsb
and
popf
mov
pusha
lahf
ret
movsl
addb
out
push
adc
movsb
lods
sub
cmp
cltd
cld
pop
cld
imul
sbb
sbb
mov
sbb
sub
and
mov
or
jae
xchg
or
mov
lds
insl
roll
and
fmul
inc
rorb
lret
mov
push
leave
test
sbb
loop
jns
stc
sahf
outsl
insb
jl
sub
ret
jl
jmp
mov
sbb
dec
sbb
jns
mov
stos
rorl
fistps
cmp
push
jmp
stos
mov
adc
insb
cwtl
scas
dec
sub
gs
xchg
outsl
cld
ss
je
jns
gs
sbb
test
sbb
or
call
movl
leave
aad
lock
mov
lcall
rcrl
pop
cmpb
rcll
inc
lret
cmp
xchg
out
outsl
push
jno
repz
push
aas
cmp
dec
and
dec
std
pop
aad
cmp
clc
cmp
lock
push
cld
rorl
xor
cmp
sub
lret
rcll
call
adc
cmp
jae
ljmp
push
xchg
mov
jle
pushf
test
mov
and
lods
jnp
inc
pusha
mov
jecxz
adc
into
push
ds
fmulp
rcr
xchg
mov
mov
adc
enter
ja
push
popf
test
aas
mul
mov
push
imulb
stc
sub
or
mov
lcall
jo
stc
adc
push
xchg
js
out
loope
add
std
or
jge
daa
jge
scas
aad
adc
outsl
cld
or
pop
inc
push
hlt
and
xchg
sub
rcll
sub
fadds
ss
out
mov
es
lret
push
jg
scas
icebp
inc
out
inc
push
outsb
test
in
decl
cmp
push
testb
or
xchg
popa
or
pop
call
mov
in
popf
adc
aad
stos
xor
ljmpw
test
mov
hlt
adc
lret
bound
out
adc
add
and
cmpsl
inc
aas
cmp
es
inc
push
cmp
sub
cmp
fsubrl
and
sub
mov
or
subb
adc
jne
xor
mov
mov
sbb
xor
loope
fiadds
fisubrs
inc
std
sub
sbb
xchg
pop
call
jne
push
mov
cmp
xchg
insl
test
or
lcall
les
in
lds
imull
dec
mov
inc
imul
sub
scas
jo
repnz
inc
jnp
pop
rcr
sub
dec
add
out
and
outsb
cwtl
pop
mov
jl
lds
xchg
ret
adc
dec
jmp
fsubp
mov
ljmp
xchg
jae
sub
hlt
push
jp
push
mov
xlat
jl
mov
adc
inc
mov
xor
mov
pop
lock
mov
orb
push
outsl
decl
arpl
call
movl
daa
fs
in
pop
sbb
xchg
inc
mov
sbb
push
jne
or
jecxz
imul
icebp
je
enter
je
imul
sbb
pop
orb
adc
aas
sarl
xor
push
iret
xor
std
xor
sbb
pop
fdivl
rcrl
mov
lea
xlat
scas
xor
xchg
push
out
adc
jecxz
leave
or
and
pusha
shrl
xor
xorb
jae
add
cwtl
js
jb
das
movsl
or
nop
bnd
movsl
out
mov
int
test
cmp
repnz
adc
aam
insb
xor
imul
and
jmp
ja
cmc
push
dec
mov
push
mov
fildll
push
add
iret
out
xchg
loop
gs
ja
cmp
mov
push
cltd
inc
pop
mov
out
jle
in
sbb
sti
out
cmp
ss
cmp
sub
mov
mov
pop
cwtl
add
mov
pusha
jb
jle
into
mov
shr
ret
lahf
insl
out
push
mov
fmul
mov
push
push
mov
fwait
inc
test
inc
add
loop
ljmp
pop
push
negl
insb
adc
cmpsl
or
push
aas
mov
sbb
les
out
stos
cs
cmc
push
xchg
mov
jne
cmp
push
pop
ficoml
jecxz
xchg
fidivs
push
enter
fs
mov
loop
mov
cli
dec
mov
push
lods
insl
mov
jg,pt
ret
cmp
cli
jp
mov
push
fistl
hlt
pop
lea
add
cwtl
popa
jge
insl
jne
adc
xor
push
xor
popfw
aaa
dec
arpl
into
sbb
in
lods
adc
add
int3
and
shrl
dec
add
nop
ja
pop
out
sbb
fistl
loopne
das
dec
loopne
jecxz
cmp
xchg
ficomps
push
sub
mulb
inc
cld
pop
mov
iret
or
lret
jnp
sbb
scas
or
setae
jp
outsl
gs
sarl
push
fsubrs
pop
stos
jl
xor
in
fscale
test
lret
ds
pop
movsb
roll
xlat
jg
shll
or
cli
outsb
icebp
dec
movl
mov
sub
mov
push
jb
loopne,pn
icebp
mov
xorl
std
push
popf
mov
xor
scas
lret
jb
sar
cmp
jae
rclb
xchg
fdivs
loope
out
repnz
or
xchg
push
stos
jnp
mov
subl
lods
or
cmpsb
mov
idivl
mov
mov
or
lret
sbb
push
test
fwait
pause
sti
inc
in
xchg
out
mov
cmpsb
sub
cli
pop
inc
adc
cwtl
es
lods
sub
in
mov
aaa
inc
and
lods
xor
subl
sti
pop
int3
mov
lahf
icebp
fsubp
jns
mov
ret
cs
pop
inc
loope
cwtl
inc
lods
incb
push
jns
outsb
dec
cld
andl
jne
mov
pushf
sbbl
int
insb
roll
das
or
mov
inc
and
pop
jecxz
pop
xchg
out
jmp
sbb
xor
popa
stc
mov
mov
jbe
fwait
lret
leave
movsl
loope
out
jbe
arpl
jle
call
jbe
adc
and
fcompl
and
adc
xor
add
repz
cwtl
or
daa
mov
insl
lret
dec
and
movsb
imul
std
fwait
mov
lret
jbe
xorb
xchg
add
arpl
jno
loope
xlat
test
pop
jns
aaa
fdivrs
push
xchg
jge
add
inc
mov
and
adc
sbbb
stos
dec
imul
mov
je
dec
fldt
lods
das
fnstsw
fmull
shrl
push
fadds
imul
int
mov
popf
dec
lret
push
add
sbb
or
lret
int3
stos
add
ret
stos
sbb
cwtl
xor
cli
imull
push
out
sub
aas
ja
sarl
cmpsl
pop
ss
imul
or
xchg
jne
insb
jp
gs
cli
cmp
cmp
idivl
test
add
jge
sti
sbb
or
cltd
mov
fnsave
icebp
pop
clc
fstpt
ficoms
out
loop
je
mov
adc
mov
sbb
mov
in
hlt
sub
ffreep
xchg
ret
addl
push
jbe
and
addr16
push
push
fsubrl
push
loop
fdivrs
stos
dec
sbb
fisttpll
xor
jecxz
in
std
mov
xor
fdivrs
add
in
into
enter
mov
scas
repnz
sti
clc
les
outsl
aad
jno
test
xchg
dec
or
out
xchg
bound
stos
les
add
sub
fcom
pop
notl
inc
popf
push
aad
mov
and
push
push
inc
mov
cld
sub
mov
out
and
sub
inc
arpl
cmp
out
loopne,pt
js
mov
das
xchg
mov
pop
adc
enter
sub
push
inc
or
bound
mov
aam
shll
sarl
pop
pop
pop
inc
sbb
xchg
lcall
xor
mov
and
push
jp
inc
mov
xchg
adc
ss
icebp
mov
out
rcrb
inc
sbb
std
or
xchg
imulb
repnz
mov
sarl
lods
cmpsb
sub
pop
lea
enter
mov
cmpsl
xchg
dec
jmp
adc
push
xchg
sarl
shl
shll
inc
xlat
arpl
scas
mov
jl
push
cmp
repnz
clc
xor
nop
pop
mov
rolb
xchg
fs
test
adc
xchg
add
mov
or
cmpsl
jno
adc
je
xor
jle
mov
push
push
movl
rolb
sahf
fldln2
sar
loop
jns
mov
push
cwtl
mov
and
xor
frstor
dec
stos
mov
or
jl
mov
mov
xchg
sbb
adc
jmp
and
mov
fiadds
mov
pop
in
icebp
test
into
mov
nop
mov
or
and
sbb
push
fcompl
sub
into
push
int
mov
jp
rcl
lds
mov
dec
cmp
adcl
ljmp
push
inc
push
sub
cltd
or
in
stc
cmp
mov
cmp
mov
cltd
xor
add
cmp
daa
js
jg
mov
inc
popa
push
and
scas
mov
mov
incb
or
mov
jmp
cmp
stos
add
std
and
cmpsb
push
or
dec
gs
addr16
push
xor
jl
add
jp
sbb
lret
test
mov
add
aaa
sarb
add
in
mov
sub
dec
jge
adc
xor
or
scas
xlat
sbb
shrl
scas
sbb
fldcw
popa
lods
cmc
lret
jno
push
or
cmc
dec
sub
sbb
push
adc
pop
mov
cmp
xchg
dec
jg
int3
mov
adc
aaa
cld
inc
push
sahf
hlt
sub
shlb
mov
pushf
push
mov
jns
push
and
loop
cmp
out
sbb
pop
push
push
push
mov
sbb
es
lods
push
fwait
xchg
pop
xchg
out
ret
jns
jnp
xchg
pop
dec
ss
jno
sub
mov
out
pop
push
shrl
jno
push
call
xor
cmp
out
rcrl
dec
ret
mov
ds
add
cmpsl
andl
push
dec
pop
cmpsb
ret
mov
popa
mov
addb
xchg
aaa
cmp
fistps
inc
sub
cwtl
adcl
push
adc
inc
xchg
pushf
outsl
push
clc
pop
push
jp
mov
mov
jne
and
call
std
sub
out
arpl
popf
adc
pop
sbb
cli
add
rolb
mov
cmp
and
ja
imul
cmpsl
frstor
push
adc
dec
cld
arpl
test
mov
das
jnp,pt
cmpsl
cmp
xchg
xlat
adc
leave
inc
sbb
and
imul
xor
jge
in
sbb
adcb
jb
popa
pop
fnstcw
dec
push
or
add
xor
inc
xchg
rcll
sahf
sbb
inc
sbb
cs
mov
cmpsb
es
fbstp
pop
sub
mull
sahf
sbbb
cmpb
in
inc
dec
mov
cmpb
mov
aaa
dec
mov
insb
sbbl
lds
repnz
sub
dec
ljmp
push
mov
in
jo
test
nop
sub
pop
add
pop
mov
es
xchg
or
push
sub
movsb
hlt
or
fstl
cmp
lahf
out
lock
int
xor
mov
mov
push
stos
and
mov
mov
dec
dec
je
push
add
pusha
mov
hlt
int
or
and
jge
xchg
stos
ret
pop
mov
repz
nop
inc
xchg
add
mov
pop
in
pusha
mov
pop
pop
iret
pop
imul
stos
dec
out
in
mov
pop
icebp
leave
les
aad
aaa
inc
scas
dec
aaa
cmc
pusha
sub
addb
fnstenv
ss
iret
jb
cmp
imull
add
rcll
daa
jg
cmc
popa
sub
jnp
push
ret
fdivl
stos
sub
ret
shlb
sbbl
mov
outsl
xchg
cmp
mov
mov
xor
mov
rclb
pop
push
stc
adc
popa
aam
outsl
dec
daa
sub
sbb
mov
lock
push
pop
mov
push
cmp
adc
sub
out
rclb
test
push
shlb
int
roll
fimuls
mov
inc
xchg
loop
add
pop
jns
cmp
enter
mov
mov
test
cmpsl
out
gs
sahf
cmp
in
xchg
shll
ds
dec
cli
pop
push
fs
add
pop
es
data16
pop
mov
mov
sahf
sbb
or
in
loope
movsb
movsl
mov
adc
push
ljmp
int
jo
std
add
pop
jg
es
cmpsb
iret
les
or
mov
into
jg
adc
xchg
shlb
ljmp
es
ficoml
push
sti
push
dec
in
jmp
mov
bound
shr
sub
cmc
stos
dec
fsts
into
daa
push
mov
mov
fidivl
data16
mov
aad
inc
mov
inc
aam
pop
imul
mov
adc
push
mov
xchg
test
sbb
mov
iret
addr16
jge
orb
mov
xchg
enter
stc
cli
test
lock
addr16
jle
dec
mov
roll
in
inc
iret
xlat
popa
js
sti
jmp
jl
aad
fdivs
sti
mov
sbb
dec
push
mov
cmovo
daa
mov
andb
stos
out
imull
mov
shrl
addr16
pop
leave
in
pop
out
shlb
out
out
ljmp
mov
cmpsl
jae
adc
xchg
mov
xchg
jbe
loopne
int3
das
mov
push
or
xlat
push
jae
mov
sbb
pushf
fstpl
scas
xchg
int
adc
jns
mov
sub
aaa
out
int3
jmp
mov
popf
mov
xchg
xor
shll
jge
lcall
icebp
int
pop
lahf
inc
cmp
push
loopne
and
jl
test
inc
rolb
pop
cmpsl
rclb
das
test
fwait
inc
xor
nop
stc
jle
add
daa
xchg
repz
xchg
cltd
ret
jne
mov
lods
sub
cmpsb
lods
cmp
inc
xchg
fidivrl
dec
les
mov
outsl
lahf
sarl
jp
xchg
lods
dec
sub
mov
out
xor
pop
outsb
or
cmp
jns
add
mov
pushf
sub
mov
mul
or
pop
jecxz
scas
ss
jg
or
call
mov
xchg
mov
inc
xchg
sub
lahf
lods
mulb
subb
push
or
dec
push
out
pop
rcrb
or
insl
pusha
mov
push
call
cmc
stos
mov
ret
push
imul
paddsb
sbb
scas
pop
dec
sbb
mov
and
pop
adc
xchg
mov
add
std
faddl
repz
ret
mov
sbb
test
sub
popf
int3
inc
jp
xor
mov
loopne
sbb
push
jbe
add
rolb
mov
arpl
fcompl
ret
ret
inc
mov
add
cld
rol
es
in
sub
jns
shrb
or
filds
outsb
xor
dec
aaa
je
insb
rcll
push
test
cld
es
cwtl
jecxz
imul
dec
add
pop
inc
push
sbb
outsb
or
jl
hlt
cli
shll
sub
popa
test
and
ja
repz
mov
lds
lds
add
jp
dec
mov
ret
cmp
and
in
cmp
sbb
xor
roll
fsubs
xor
push
nop
out
lret
pop
je
rcll
pop
into
out
mov
aaa
enter
mov
adc
dec
or
hlt
test
pushf
test
out
fstpl
push
out
in
or
mov
cli
aaa
mov
hlt
inc
mov
imul
xchg
dec
mov
cs
rcrl
cwtl
movsl
lret
mov
dec
or
adc
cmp
dec
gs
xchg
pop
popf
jnp
and
outsl
enter
xchg
leave
dec
cltd
mov
add
fdivr
lret
adc
jge
rolb
leave
dec
testl
xchg
cli
jns
mov
or
sbb
mov
push
push
fiadds
fcomp
loopne
pop
popa
arpl
scas
hlt
fbld
lds
sahf
xchg
std
jns
mov
out
mov
push
cmc
push
imul
aaa
mov
adc
push
push
pop
adc
xchg
jmp
in
push
sub
clc
mov
hlt
sub
sarb
jnp
or
add
decl
call
jbe
fildl
mov
outsb
and
adc
imul
xor
jnp
cmp
sub
or
add
sub
inc
and
push
in
out
sarl
jo,pn
mov
dec
dec
imul
mov
jmp
dec
push
xor
je
add
dec
orb
xchg
inc
cmpsb
sub
sub
out
enter
fimuls
test
jns
jge
or
nop
fnstsw
mov
lods
push
adc
les
stc
es
jbe
out
cmp
pop
add
jnp
inc
lods
xchg
out
ret
das
fbstp
cld
add
mov
ret
out
sub
jo
adc
sbb
clc
fdiv
mov
int
stc
mov
inc
clc
fcomip
lret
mov
xor
push
jecxz
sub
xchg
mov
xor
and
es
sbbl
repz
sahf
lret
loopne
add
sub
decl
adc
lret
pop
or
push
sbb
mov
inc
stos
adc
push
push
or
mov
pushf
cld
mov
pop
rclb
mov
push
jae
xor
shl
sahf
adc
movsb
pop
mov
pop
mov
inc
cmp
je
mov
xor
rcrl
and
ret
xor
pop
fists
sbb
jmp
cmp
ret
dec
mov
data16
addr16
aad
pop
xlat
loope
cs
pop
pop
dec
imul
aas
loop
arpl
stc
or
cltd
pop
push
mov
xchg
dec
mov
inc
inc
dec
adc
hlt
adcb
sarl
pop
and
mov
insl
push
cmp
jg
pop
and
call
jne
andb
push
popf
cmp
mov
pop
jle
popf
jne
jbe
mov
cmc
js
leave
push
outsb
jge
ja
dec
mov
mov
add
xor
xor
fcoml
add
lea
sbb
xchg
lret
fwait
or
scas
jl
andl
inc
test
push
mov
js
fnsave
cmp
xchg
jns
dec
adc
clc
dec
xor
mov
jp
jb
in
into
mov
test
outsb
shrb
xchg
fs
dec
loope
push
inc
retw
call
shll
pop
insb
sbb
push
sub
inc
popf
or
es
pop
or
subl
orb
insl
addr16
repnz
add
pop
lods
stos
lret
sbb
inc
adc
not
xorb
outsb
pop
pop
jp
test
in
sub
mov
cmpsl
add
mov
icebp
mov
sti
pop
or
pop
stos
mov
cli
bound
pop
test
sbb
pop
adc
mov
jae
je
into
nop
inc
cmpsb
out
lret
push
icebp
movsb
adcb
out
pop
pop
sub
pop
fidivrs
mov
and
ret
outsl
imul
lock
push
xchg
sti
mov
test
je
lds
aas
sti
popa
add
dec
outsl
dec
clc
push
adc
push
xchg
dec
mov
xchg
js
sub
movsb
lret
mov
data16
repz
pop
push
inc
filds
jnp
enter
mov
aad
out
fwait
repz
mov
andl
adcl
iret
pop
adc
movsb
ret
cmp
sub
lahf
mov
stos
cld
or
pop
or
scas
les
dec
das
push
push
xlat
sub
sub
fs
scas
jmp
sub
hlt
lcall
mov
push
mov
out
mov
in
leave
jne
outsb
test
ffreep
imul
push
pop
je
hlt
rcll
lret
sbb
fists
loopne
int3
aaa
ficoms
pop
xchg
mov
push
je
ja
das
add
dec
fwait
mov
fdivrl
scas
and
pop
and
sbb
repz
std
hlt
in
and
pop
mov
xlat
mov
std
popf
xor
jbe
add
into
sbb
adc
int3
adc
shrb
dec
mov
je
mov
ja
aam
cwtl
mull
and
rolb
push
xchg
sbb
cld
inc
leave
sub
scas
inc
popf
add
and
aad
adc
push
push
push
lods
jle
test
jbe
xchg
loop
xchg
aas
jmp
cmc
xor
jns
adc
imul
lcall
sbb
out
les
mov
sahf
cmp
out
cmc
sub
out
je
jns
aad
cmp
cmpsb
repnz
xor
lock
test
mov
subb
mov
xchg
xor
sub
hlt
cmp
sub
aam
jg
mov
lret
loop
out
and
rclb
shl
rcrl
dec
lret
fsubl
cmp
rclb
xor
dec
shr
jge
bnd
pop
out
insl
xor
jge
icebp
shlb
pop
cld
fildll
in
out
das
enter
adc
jno
es
aam
xchg
pop
mov
adc
out
out
pop
jae
cld
xor
push
xchg
xrelease
jno
ljmp
mov
enter
adcl
and
jno
inc
inc
out
std
xchg
push
fiaddl
pushf
mov
push
leave
mov
jb
cmp
int3
rolb
push
mov
push
lcall
in
jp
jnp
es
and
xlat
sub
testb
shrb
dec
clc
and
sbb
mov
pushf
xor
movsb
imul
lcall
push
jmp
ret
repnz
dec
mulb
fstpl
add
pop
loopne
rcr
loopne
xchg
cmpsb
mov
xchg
test
iret
call
adc
pop
lret
or
push
mov
inc
test
pop
test
stc
pop
inc
inc
jno
mov
icebp
cmp
mov
mov
mov
inc
mov
adc
insl
adc
sub
lret
pop
add
pop
inc
lods
xchg
int
insl
cmpsl
hlt
stos
cs
je
and
inc
sti
xlat
mov
imul
mov
fsubs
xchg
inc
aas
test
push
adc
pusha
or
icebp
xchg
xchg
and
xchg
pop
push
fidivrs
add
in
add
cbtw
dec
sub
push
jmp
dec
adc
adc
xchg
aaa
repz
pop
outsb
aas
push
mov
mov
clc
xchg
cmc
push
fildll
lret
sbb
out
push
and
cmp
cmp
push
pop
cli
mov
outsb
clc
cwtl
mulb
enter
xchg
fsub
loop
pop
sbb
pop
mov
test
loopne
fxch
push
out
mov
push
push
push
in
push
mov
imul
mov
and
and
xor
mov
lret
fsts
sbb
out
call
stos
jge
stc
jo
inc
lds
push
xchg
pop
and
popa
movsb
test
pop
dec
or
inc
icebp
out
int
in
cmp
cmc
xchg
sti
sbb
or
aaa
mov
and
lock
roll
lea
push
cmpl
imul
je
jo
jb
xlat
or
lahf
shll
shlb
pop
or
dec
add
and
sub
fldpi
cmp
repz
mov
inc
xchg
in
mull
movsb
or
es
ljmp
mov
and
rorb
aaa
jge
leave
sub
jecxz
mov
xor
pop
mov
stos
cmp
mull
in
cmpsb
daa
insl
add
imul
mov
fcmovb
push
test
xlat
popl
loope
pop
inc
pop
fistps
fmul
nop
cltd
mov
rcrb
push
lds
mov
sbbl
or
mov
lods
push
mov
and
sub
add
or
jno
sub
pusha
xor
sar
loope
shr
in
add
ret
xlat
cmp
push
popf
add
add
mov
pop
decb
fnstsw
pop
mov
sbb
outsl
mov
pop
inc
fsts
fcomps
push
mov
popa
jmp
out
pop
ds
insb
mov
mov
mov
sbb
mov
dec
lahf
fsubs
add
pop
mov
jge
mov
push
clc
cmp
and
andb
ja
sbb
adc
out
jbe
testb
jmp
je
adc
bound
incb
lret
ja
inc
push
lds
cmp
mov
adc
mov
add
xchg
mov
jo
cmp
das
jle
insl
imul
loop
xor
pop
lds
jle
cld
adc
je
mov
jp
push
lea
sub
aas
aad
add
cmc
dec
push
sti
push
imul
cmpsb
rolb
pop
outsl
out
or
adc
dec
cmp
sbb
pusha
subl
leave
xlat
jmp
aaa
mov
int3
cwtl
and
mov
add
xor
mov
out
xor
push
cs
cld
or
clc
sti
cmp
stos
lahf
pop
xor
pusha
nop
out
sti
push
rorl
fnsave
add
sbb
ljmp
dec
fwait
mov
or
out
jle
sub
xor
imulb
adc
out
fcomi
js
lahf
sbb
push
push
xchg
xor
adc
xorb
push
pop
xor
xchg
rcll
xchg
push
pop
pop
or
cmp
das
data16
popa
adc
lret
and
sbb
fdivrs
test
xor
mov
xchg
dec
sbb
std
ja
cwtl
pop
jne
mov
adc
lods
jle
pop
cmp
cmpsl
jae
jp
prefetcht0
jecxz
dec
jmp
dec
or
popa
jns
mov
and
adc
fldcw
mov
mov
or
sub
icebp
lods
push
aad
lret
push
push
int
xor
das
lea
mov
fs
in
or
shll
insl
movsbl
push
shl
inc
mov
std
addb
jb
popf
js
movsl
in
clc
mov
adc
inc
mov
inc
jae
add
cmp
ret
leave
jo
and
pop
enter
lods
fiadds
int3
insb
scas
out
adc
mov
out
ret
pop
and
or
inc
lret
jl
in
aad
mov
nop
out
sub
cmpsb
test
pop
cltd
mov
mov
xor
fnstcw
js
inc
fs
cmp
and
addl
mov
jbe
dec
addr16
fimuls
push
mov
call
sti
dec
fs
push
mov
sub
rcrb
inc
adc
clc
xchg
inc
mov
ret
aam
out
repz
loopne
add
dec
inc
cmp
fstps
mov
jo
adc
daa
rclb
fadd
stos
pop
cwtl
and
xchg
pushf
cmpsl
xchg
mov
jg
push
xor
or
gs
fistpl
ret
jbe
pop
std
insb
call
outsb
aad
pop
outsl
mov
es
or
leave
shr
into
hlt
sub
jg
nop
jno
xchg
cmp
jns
push
ljmp
test
aaa
imul
mov
mov
ljmp
pushf
sti
das
loopne
jnp
adc
mov
dec
inc
and
outsl
or
ss
shll
pop
and
mov
push
mov
mov
or
hlt
pop
aas
mov
iret
adc
xchg
cmp
sub
push
imul
jb
sti
shl
sub
lock
stc
loop
mov
or
cli
bound
inc
push
sar
fs
repz
ss
push
jge
sbb
push
out
mov
mov
inc
ficomps
int3
cwtl
out
lret
je
cmpsl
test
cmc
sub
dec
and
mov
sti
dec
mov
push
out
xchg
lret
adc
das
push
fsub
fwait
out
nop
loope
pushl
out
ds
cmp
sbb
adc
xor
jl
cwtl
shll
fwait
push
cmp
dec
imul
cmp
in
loop
fstpt
jno
jp
stos
jns
pop
pop
les
sub
jno
push
in
jmp
es
push
in
imull
mov
pusha
leave
fmul
mov
shll
stos
fwait
push
gs
lods
popf
fstpt
out
sbb
lret
rcrl
add
or
push
je
push
dec
pusha
inc
iret
shrb
aam
mov
jl
nop
push
push
jo
movsl
jno,pt
or
in
into
pop
and
adc
test
fistpl
mov
xchg
stos
insb
mov
xor
iret
or
icebp
fisttps
ret
pop
insb
push
sbb
aas
xlat
std
push
outsl
mov
mov
inc
in
push
mov
jg
in
into
rolb
adc
lret
pop
mov
testl
pusha
mov
aas
mov
xor
xchg
dec
add
push
inc
orl
sbb
inc
ds
sbb
or
stc
mov
add
mov
mov
ss
xchg
mov
dec
mov
fisubs
sub
insb
mov
jmp
testb
jl
cmp
std
pop
mov
fnstsw
inc
xor
cmpsl
loop
or
jns
imul
and
notl
aas
xor
js
adc
fwait
adc
into
gs
mov
loopne
inc
in
lcall
lods
loope
jecxz
jmp
arpl
xor
ljmp
rol
pop
inc
dec
pop
xor
mov
jmp
xor
mov
pop
inc
jo
ljmp
in
xor
sub
stc
in
inc
negb
pop
xchg
add
mov
call
mov
adc
sbb
stos
mov
lods
int
inc
cmpl
pop
jae
bound
sub
scas
leave
sbbl
data16
cmpsb
push
pop
iret
inc
push
and
mov
loop
xor
jo
out
hlt
rcll
cmp
sub
adc
mov
xchg
call
ret
adc
push
ret
out
movsb
sahf
xor
outsl
cmpsb
cmp
out
push
push
add
scas
mov
out
ret
sbb
insb
das
mov
push
sub
out
lret
notb
cmpsl
movsl
add
ret
fstpl
imul
push
push
insl
sti
ds
js
cmp
add
jne
in
inc
jle
fnstenv
xchg
lods
arpl
sbb
sub
in
rcrb
push
mov
pop
insb
ss
imul
mov
dec
ret
scas
mov
stc
test
incb
addr16
fs
cmp
add
mov
cmp
and
xlat
jg
fsubrs
mov
add
jns
fsubrs
fs
das
sbb
icebp
push
mov
in
sbb
jae
imul
mov
iret
xchg
jns
or
fldenv
test
xchg
inc
cmp
lret
and
and
mov
xor
insb
mov
into
fmul
xor
xchg
fdivl
ds
rclb
shlb
loopne
mov
mov
shrb
lock
and
ror
cmpsl
sbb
icebp
shll
mov
or
add
imul
xchg
into
and
jb
add
inc
jae
loop
jg
and
pop
sbb
push
push
dec
add
mov
push
test
lods
pop
popf
xchg
mov
and
inc
jmp
enter
pop
mov
int3
scas
adc
lahf
cmp
in
clc
stc
bound
ds
mov
inc
mov
and
xor
dec
mov
test
xlat
push
xchg
push
test
lcall
cmp
popf
cli
ret
fnstenv
loope
mov
out
xchg
imul
scas
push
xchg
les
test
outsl
fcmovbe
mov
lea
sahf
loopne
test
mov
push
in
lcall
push
movsb
imul
sub
daa
cmc
push
leave
cmpsl
jmp
mov
fadds
rcrl
add
jne
icebp
jo
add
mov
stc
imul
loope
sub
scas
lcall
mov
ljmp
bound
pop
mov
lret
jp
lea
fnstsw
mov
aam
into
cli
insb
stc
mov
rcrl
popf
call
outsb
cli
xchg
notl
cltd
addr16
shll
inc
outsb
lds
and
lock
loope
mov
xor
inc
addr16
sbb
adc
pusha
cwtl
aas
or
adc
and
push
xchg
cmp
imul
ja
in
lret
pop
test
push
dec
sbb
jge
lcall
mov
lods
fs
cmp
fildll
daa
pop
mov
lods
bound
icebp
lret
adc
mov
mov
in
cmp
ret
scas
mov
add
adc
and
aam
push
sbb
aad
and
enter
popa
mov
adc
sbb
lods
dec
push
or
lds
lods
cmp
and
pop
dec
enter
mov
shll
fldenv
mov
mov
mov
add
mov
mov
aas
cmp
test
push
es
mov
jno
out
mov
mov
ljmp
insl
out
sbb
xchg
pop
xchg
jmp
call
adc
cs
inc
push
jecxz
iret
ret
pop
cmc
rcr
test
aaa
push
lret
sub
in
xor
push
out
xchg
in
daa
sub
loopne
cmpsl
cmc
inc
movsl
in
xchg
test
movl
push
lods
push
push
lock
mov
cltd
daa
inc
jmp
cmp
pop
mov
test
cmp
inc
xlat
lds
and
int3
cmpsl
inc
mov
nop
cmpsb
or
out
sbb
sbb
lret
pop
jo
decb
jae
xor
push
jb
push
xor
stos
or
mov
cmp
adc
outsb
dec
sbb
hlt
enter
and
stos
fistpll
xchg
lret
lods
jle
shrb
aaa
add
js
lret
pop
push
cltd
lds
mov
push
xlat
adc
mov
mov
cmp
sbb
scas
mov
cmp
push
mov
not
xor
cmc
cmc
add
js
push
jbe
fstp
dec
fsubp
mov
popa
sub
loop
push
popa
lret
xchg
mov
adc
mov
and
mov
aas
lcall
out
sti
pusha
or
movsl
mov
inc
mov
in
jbe
adc
mov
cmp
clc
xchg
xor
or
stos
jno
inc
ror
mov
cmp
inc
ds
psubusb
les
sub
pop
jbe
cmp
pop
loop
cmpsl
xchg
in
scas
push
pop
out
sbb
repz
pop
mov
fdivrp
sub
or
sti
xchg
sub
sub
jne
add
or
movsb
ds
xchg
push
xor
adc
outsb
adc
lcall
or
mov
popf
adc
mov
xchg
fwait
bound
sbb
xchg
mov
mov
dec
mov
filds
sbbb
sbb
std
lret
psubw
loope
dec
cmpsb
xor
mov
pop
jecxz
pushf
fnop
xchg
adc
xlat
xchg
iret
mov
adc
lret
jp
stos
fsubs
mov
xor
xchg
aas
scas
fadds
sahf
sbb
daa
test
mov
or
ss
je
push
enter
xchg
xchg
push
scas
fwait
daa
mov
sub
div
mov
aaa
mov
out
bound
rcll
xor
xor
jg
jg
push
ja
dec
mov
mov
or
pop
inc
and
mov
cmp
fidivs
fnstsw
adc
or
xor
mov
push
inc
and
test
mov
mov
lds
adc
ds
sub
push
inc
mov
jle
call
in
aas
adc
xchg
mov
cmp
sbb
popf
popf
and
sbb
insb
int
sbb
inc
enter
adc
pop
jnp
inc
je
xchg
iret
xor
mov
je
imul
dec
lods
int
mov
stos
jns
roll
inc
and
sbb
inc
ret
cmp
lods
sbb
jns
arpl
sub
jp
or
mov
icebp
xchg
xorb
cli
mov
in
outsl
pusha
cmp
rclb
or
daa
cwtl
mov
adc
lcall
mov
sub
repz
fnsave
push
repnz
xorb
or
or
sub
lcall
and
sub
inc
mov
loop
mulb
lahf
push
andl
lea
xor
add
push
div
cvtpi2ps
cmp
lds
imul
ds
scas
sbb
movsl
subl
and
lods
cmp
jnp
inc
push
mov
jl
rcr
gs
lahf
iret
pop
loop
pop
in
add
sbb
inc
jo
inc
in
out
aad
jne
push
in
icebp
jle
or
dec
jnp
xchg
push
sbb
dec
clc
push
jecxz
mov
loopne
jnp
testb
xorl
sub
jnp
in
subb
arpl
sbb
mov
in
jecxz
lods
push
stc
frstor
and
xor
sbb
inc
mov
jmp
add
adc
inc
sub
cwtl
lcall
lret
arpl
cmp
mov
xor
sub
fidivrs
mov
jno
or
ror
mov
data16
popa
loopne
jns
inc
mov
movsl
push
subb
dec
mov
aas
jmp
leave
push
outsb
dec
sbb
cmp
dec
lods
frstor
stos
testl
hlt
fwait
jo
sub
dec
int
hlt
add
cmp
aad
xlat
xor
dec
mov
pop
jns
sbb
xlat
test
mov
and
out
mov
adc
xor
iret
pop
std
imul
and
flds
mov
mov
lods
pop
aas
inc
cmp
test
or
or
je
mov
cmp
cld
imul
mov
jmp
into
or
xor
sbb
inc
lds
gs
rcll
sub
or
scas
mov
pop
lret
pop
ja
dec
and
lods
gs
mov
xor
and
dec
into
and
or
subb
mov
lods
add
add
test
push
dec
frstor
roll
add
add
dec
mov
xor
js
or
cmp
and
inc
dec
xor
into
mov
dec
or
lea
xor
rcrb
imul
hlt
jl
inc
idivb
ds
pop
mull
stos
push
rcr
pop
sti
gs
in
in
sbb
inc
leave
loopne
rolb
test
sarb
test
shll
scas
jne
mov
sti
push
and
mov
out
mov
mov
cmpsl
popa
jno
inc
iret
nop
je
mov
inc
push
cmp
test
fsubrl
pop
mov
sub
sub
dec
lret
xor
popa
mov
and
sbbb
loopne
sbb
or
or
inc
stos
dec
test
cmp
mov
xchg
sbb
cmp
fbld
pop
pop
jmp
icebp
lahf
js
push
mov
adc
int3
push
loope
les
jecxz
sub
cwtl
or
push
mov
adc
pop
repnz
cld
ss
pop
push
xchg
and
lods
inc
mov
lods
pop
adc
call
adc
lret
jmp
pop
mov
and
cmpsl
mov
lea
insl
dec
loope
add
jnp
nop
cmp
jle
movsl
movsl
dec
dec
aam
cli
jnp
sub
fisttps
lods
test
xchg
repnz
gs
sbb
add
test
sbb
inc
out
add
xor
mov
push
inc
xor
push
jb
push
cli
stos
lahf
rcrb
push
pop
xchg
xchg
ret
rcr
aam
sahf
adc
inc
dec
xchg
rcr
adc
sbb
bound
loop
jbe
or
jo
ret
and
dec
outsb
xchg
jg
daa
jae
add
xchg
aaa
push
fdivrl
and
nop
dec
xor
and
sbb
jmp
adc
into
cmpsb
stos
shlb
jmp
fidivrs
in
icebp
leave
mov
and
rcrl
xlat
mov
movsb
push
fdivr
jmp
cmp
jns
or
pop
cmp
movb
cmpsb
lods
clts
lret
nop
xchg
sbb
outsb
nop
add
pop
jae
popa
add
mov
ja
push
in
mov
addl
mov
sahf
mov
mov
mov
lret
ror
lods
dec
lcall
inc
or
idivb
mov
out
xor
mov
mov
jmp
rcrl
div
xchg
jb
insl
popf
leave
adc
add
pop
shlb
push
loopne
mov
arpl
sarl
xchg
outsl
pop
imul
adc
orb
pop
jmp
mov
rcrb
bound
mov
inc
push
call
jbe
pop
popa
or
sbb
inc
xchg
cltd
lcall
out
pop
out
movsb
int
sbb
ret
or
in
imul
popa
xlat
jg
push
into
imul
loope
fs
insl
frstor
jp
jmp
sarl
or
or
dec
je
cld
inc
dec
js
test
dec
push
pop
pop
sub
lret
gs
mov
es
repz
fwait
out
sbb
fisubrs
inc
inc
test
adc
movsb
aas
jg
fs
lret
push
cmp
pop
hlt
mov
test
adc
inc
add
out
ret
into
dec
dec
ficoms
movsl
cmp
pop
cmpsb
imul
fisubl
cmc
xor
cs
cmpsb
bound
test
sbb
les
jae
adc
fildll
fwait
out
jle
mov
js
inc
dec
and
hlt
mov
xchg
pop
push
insb
push
out
cmp
pop
push
xchg
addr16
jbe
ss
imul
test
test
out
xchg
ds
ror
dec
jp
sbb
push
mov
enter
and
data16
aad
or
ss
enter
test
mov
sub
ret
cmp
adc
out
ret
call
jle
push
xchg
icebp
lahf
filds
mov
or
daa
adc
sbb
pushf
ss
and
std
or
movsl
out
xchg
sbb
bound
add
imul
lcall
pop
cmp
aas
push
jae
or
cmpsb
ret
pop
jecxz
ret
jge
inc
and
loope
scas
jmp
push
inc
nop
sbb
mov
pop
sub
stos
stc
jbe
ds
adc
lret
loopne
ds
and
xor
mov
xchg
divl
iret
jl
rorl
inc
jge
inc
je
ja
mov
mov
scas
pop
mov
cmp
lock
sbb
pusha
test
popf
cmp
orl
sub
jle
test
and
rorb
cwtl
pop
in
inc
insl
icebp
incl
lods
lret
loopne
pusha
popa
jnp
fsubrl
push
cmp
cmp
mov
or
push
mov
pop
movsb
pop
iret
push
aas
neg
mov
inc
loope
cmp
lahf
xchg
fildl
test
fcoms
negl
jo
or
push
lahf
xlat
enter
subb
inc
bound
fnstsw
dec
arpl
adc
cs
into
push
lock
or
idivl
xchg
pop
sub
sub
fmull
mov
fiaddl
jne
lahf
jmp
out
push
clc
xchg
aam
push
add
je
aam
scas
or
test
lock
and
adc
push
test
test
push
mov
mov
jno
add
push
cmp
or
cmpb
ret
adc
popa
pop
push
iret
inc
je
cmp
add
cli
lret
fisubrl
push
int
or
mov
aas
jns
std
mov
inc
inc
ds
popf
mov
fwait
add
std
dec
pop
mov
xchg
adc
add
xchg
mov
icebp
adc
dec
ljmp
clc
imul
ljmp
inc
dec
and
xchg
outsl
xchg
in
xor
xor
into
push
add
shl
das
pop
mov
cmpsl
addr16
sub
mov
sub
mov
jl
xchg
sarb
lea
add
subb
jle
add
in
int
jp
fwait
nop
mov
gs
je
je
rolb
mov
fsts
fdivr
and
repz
ss
adcl
not
sub
fists
mov
push
and
cmp
and
rolb
bnd
sub
les
pop
and
cmp
xor
cmp
fisttpll
add
fisttpll
or
fistpll
arpl
call
out
pop
push
jmp
cmpsl
cmpsb
jno
pusha
or
pop
add
orl
pop
pusha
popa
pop
jl
aad
movl
popl
add
mov
add
xchg
inc
pushf
or
and
xor
pushf
and
adcb
roll
outsb
jbe
cmp
inc
mov
pop
xor
sub
in
cli
dec
mov
cmp
dec
jne
dec
fistl
jmp
out
je
jg
aad
scas
hlt
dec
pop
cmp
scas
in
es
add
sbb
in
or
mov
sub
sbbb
mov
lods
in
jno
lret
test
jge
pushf
nop
jg
dec
add
lock
loopne
xchg
lods
xchg
push
leave
and
loope
js
leave
jmp
enter
shrb
dec
mov
pop
push
mov
sbb
cli
cwtl
cmp
sbb
mov
and
daa
cmc
fs
arpl
inc
dec
fwait
xlat
scas
ret
enter
imul
inc
fisubs
fldt
mov
and
cld
xlat
cmpl
lds
cwtl
rorb
movsb
jmp
lret
fidivrl
shrl
out
jno
push
imulb
sbb
pusha
in
lcall
aam
push
movsl
fwait
out
cwtl
adc
lea
sbb
out
inc
std
inc
nop
fucom
test
push
inc
inc
push
mov
fs
and
cmpsb
jne
jmp
sti
in
jbe
xchg
jae
cmp
icebp
ja
sub
hlt
fsubrl
mov
inc
jecxz
test
fistps
jo
pop
aad
ds
mov
add
cmp
pop
imul
push
out
pop
xchg
or
mov
lock
mov
ret
xchg
cmp
rol
dec
ret
sub
ret
lahf
dec
stos
lock
add
mov
sbb
popa
sub
jnp
cmp
pop
mov
rol
dec
inc
xchg
rorb
in
and
push
add
add
in
leave
xor
jp
arpl
clc
and
xor
sbb
dec
jmp
ljmp
popf
dec
mov
cmpsb
popf
add
data16
int
cmpsb
gs
mov
mov
mov
sbb
dec
cmpsl
pop
cld
jae
dec
sti
mov
in
pop
gs
addl
es
and
aam
push
xchg
jg
cmp
sar
sub
ror
imul
call
jbe
mov
mov
insb
gs
sub
ficompl
xlat
fidivl
loope
xor
adc
adc
xchg
fs
arpl
mov
pmuludq
shlb
inc
cmp
faddp
mov
push
pop
scas
mov
nop
ret
loopne
out
orl
push
mov
int3
xchg
add
daa
loopne
ja
xor
loop
jecxz
push
inc
jnp
mov
cmp
sahf
sbb
rorl
adc
mov
cmpsb
add
insb
in
mov
into
adc
aaa
mov
or
aad
adc
movsb
fstpt
sbb
cmp
dec
xchg
adc
jle
test
xor
bound
pushf
mov
push
test
sbb
fdivs
dec
je
fs
imul
movsb
loop
mov
mov
xchg
push
daa
dec
aad
cltd
inc
sbb
sbb
leave
jne
cmpl
in
enter
mov
rcr
mov
inc
adc
jne
stos
add
jp
adc
cld
stos
mov
rcrl
int3
jnp
pop
pop
sub
sahf
mov
mov
shlb
sbb
or
mov
mov
sbb
ds
pop
in
mov
jo
mov
out
xor
add
into
push
pop
in
gs
sbb
jp
daa
xchg
stc
mov
pop
jnp
mov
cmc
out
mov
xor
pop
cmpsb
xchg
les
or
dec
aas
test
mov
adc
es
or
icebp
push
outsl
pop
add
push
das
gs
jb
stos
jmp
outsl
lock
mov
sbb
mov
fbstp
inc
lock
pop
aad
mov
xchg
sbb
xlat
subb
sbb
push
je
mov
in
mov
mov
jb
or
dec
fwait
xor
aaa
insl
idivb
fmulp
sub
aad
icebp
add
add
push
shrb
pop
lahf
icebp
xor
pop
sub
cmp
aam
stos
push
inc
daa
cmp
ds
icebp
cmp
or
and
movl
adc
data16
ss
bound
test
add
pop
loop
cltd
sbb
insl
ret
xor
mov
cmp
jae
cmc
or
adc
ds
adc
imul
xchg
adc
push
mov
push
dec
lods
dec
sti
or
add
shll
jae
sub
push
xchg
leave
dec
jecxz
inc
scas
pop
xor
jl
and
dec
fimull
and
enter
loope
adc
sbb
outsb
test
sub
dec
sub
mov
and
xchg
mov
fcoml
fstl
shll
test
mov
int3
clc
fmul
xor
dec
test
ret
insl
call
nop
daa
lods
rorb
in
mov
movsl
xchg
sub
lods
pop
pop
xor
out
call
dec
ljmp
mov
enter
jl
xor
iret
rorb
jo
sahf
xor
daa
in
into
push
aad
into
pop
cmp
adc
int
lds
in
inc
fidivs
data16
enter
rcr
into
jecxz
mov
or
mov
pop
int
add
jae
jmp
inc
lahf
movsl
xchg
das
cmp
mov
hlt
jp
pop
push
mov
mov
fdivrp
cmp
cli
scas
add
jns
js
scas
xlat
and
call
lahf
out
or
lret
sahf
xchg
popf
xchg
pop
push
xor
hlt
popf
xor
scas
xchg
loope
inc
repnz
xorb
xchg
and
sub
push
dec
lods
lret
outsl
and
mov
sahf
pop
pop
mov
out
xor
and
out
adc
in
pop
xor
repz
mov
scas
mov
cmp
and
adc
or
rcll
imul
add
scas
out
scas
dec
aaa
inc
out
imul
cmp
fstl
pop
jbe
mov
lods
sbb
push
sbb
xchg
add
lahf
hlt
leave
lods
cltd
and
nop
adc
nop
aad
push
js
inc
jno
lds
addr16
mov
mov
iret
repz
repnz
push
mov
aaa
inc
add
and
rorl
xor
ljmp
outsl
cmpsb
cmp
mov
ds
nop
jns
ds
jmp
les
les
fs
dec
leave
mov
ljmp
sbb
fwait
repnz
xor
dec
xchg
jae
add
add
test
lahf
jbe
rol
icebp
xchg
popf
sarb
jbe
add
and
mov
leave
adc
and
jbe
pop
and
les
mov
push
add
cwtl
shll
lock
addr16
xchg
jecxz
fcmovnbe
sbb
mov
adc
or
add
outsl
jno
iret
lods
sbb
fstp
push
leave
mov
cmp
ficoml
sub
sbb
mov
mov
das
jo
fiaddl
push
mov
sub
push
bound
cs
cmpl
outsl
aam
mov
pop
mov
jnp
aaa
jg
push
ja
mov
ret
pusha
push
nop
inc
inc
xchg
pop
iret
sbb
jno
or
ret
inc
mov
mov
shr
bound
sahf
push
dec
ret
in
int3
jecxz
in
stos
push
or
adc
mov
jle
cmp
popa
cmpsb
push
adc
repz
hlt
push
push
in
add
in
scas
loope
mov
fldenv
push
outsl
or
and
xchg
mov
andl
andl
outsl
loope
xor
pop
and
shll
sub
fsubs
xchg
sub
sub
push
xchg
dec
jnp
and
fstpl
jne
out
outsl
dec
cmp
scas
sub
dec
push
adc
ret
lods
mov
jle
and
icebp
pop
rep
rclb
xor
loopne
xchg
arpl
mov
xor
xchg
fwait
sbb
ja
fistps
js
leave
dec
mov
iret
test
gs
sub
or
das
push
and
out
leave
inc
pop
shl
rolb
jns
pop
jle
jecxz,pt
mov
pop
ja
imul
outsl
pop
jp
jo
inc
insl
ja
sbb
cltd
mov
rolb
std
adc
xor
bound
mov
jmp
enter
mov
les
push
or
push
push
lods
cmp
ret
shlb
scas
cmpsb
cmpb
mov
xchg
xor
stos
jo
fwait
sbbl
add
test
inc
cmp
xor
and
ss
test
xchg
pop
sub
xor
aas
cwtl
arpl
jmp
pop
jl
ljmp
mov
mov
lods
scas
or
jle
jns
or
stos
outsb
mov
incl
sbb
pusha
fnstsw
mov
xchg
in
jp
sbb
xor
enter
mov
push
cwtl
xchg
pop
jne
bswap
dec
imul
repnz
ficompl
cld
call
jp
lret
imul
iret
movsl
ja
sub
cs
ficoml
call
setbe
dec
aas
std
wbinvd
inc
mov
adc
xor
mov
ljmp
mov
mov
mov
test
int3
cmp
sub
lods
push
jbe
ljmp
outsb
sbb
dec
dec
sarl
sub
push
sbb
aam
fucomip
mov
loopne
cmp
jmp
or
mov
ret
out
cmpsl
stc
stos
inc
mov
test
jo
dec
adc
stos
xlat
scas
nopl
enter
cld
stos
into
add
or
sbb
outsb
adc
xacquire
aas
cmp
lds
rorb
idivb
mov
cmpsl
add
inc
pop
lcall
repnz
rcr
negb
call
sub
sti
movl
leave
outsl
in
cmp
xor
sarl
enter
mov
adc
or
mov
xchg
pop
lret
das
mov
inc
loop
push
add
lcall
mov
insb
fstl
mov
ljmp
movsb
sbb
inc
stos
repnz
xchg
ret
imul
lds
mov
scas
and
popf
in
mov
inc
adc
subl
std
push
sub
in
test
add
xor
inc
dec
ds
icebp
insb
test
rcrb
xor
inc
es
pop
icebp
xorb
iret
push
pop
faddl
data16
jne
ds
shr
das
cmp
push
push
loop
jle
rcr
dec
pop
repnz
add
ret
cltd
sbb
mov
fdivs
roll
nop
jge
ljmp
in
lock
xchg
xchg
pop
sti
popa
push
popf
fs
enter
sub
psadbw
or
out
xor
mov
push
xchg
clc
stos
add
sub
or
sarb
dec
xchg
in
ret
xor
xchg
and
mov
sbb
xchg
jg
adc
pop
out
test
lods
xchg
jb
ret
push
popf
push
dec
jne
fwait
sbb
loopne
rcr
inc
push
xchg
and
dec
xor
adcb
mov
cmp
in
sbb
add
fcoml
xor
leave
int
mov
mov
mov
push
stos
and
out
les
les
add
mov
aaa
push
jge
inc
iret
push
inc
mull
mov
ret
push
iret
jecxz
mov
loop
subb
mov
adc
or
or
sub
fildl
cmpsb
inc
mov
push
ret
std
mov
inc
movsb
roll
xor
adc
icebp
sub
fnstsw
out
aam
lret
sub
icebp
pop
dec
mov
les
jno
lock
fsubrl
xlat
stos
mov
xchg
das
lds
loop
or
dec
mov
xchg
jns
out
jo
ret
mov
icebp
jo
cld
inc
mov
cli
nop
mov
fsubr
jo
xor
add
mov
inc
test
sbb
xchg
fidivrl
negl
pop
jmp
cmp
jbe
or
rcrb
mov
ret
or
jbe
sti
sub
mov
stos
add
lcall
loope
or
and
arpl
pop
cmp
leave
in
jbe
jp
icebp
mov
js
mov
push
aam
sahf
shlb
sub
jle
xchg
test
ja
and
lods
mov
mov
push
inc
aas
mov
sub
cmp
sbb
xchg
push
push
push
dec
nop
mov
push
addr16
mov
mov
push
push
gs
ret
lahf
movsl
or
cmp
push
and
into
outsl
js
cmpsb
mov
mov
mov
jp
mov
test
xor
push
es
jbe
outsl
jl
mov
lret
mov
icebp
decb
gs
add
je
mov
and
xchg
cwtl
movsl
stc
xor
mov
daa
sbb
adc
ret
mov
andb
cmp
std
dec
call
test
jecxz
js
roll
mov
rcrb
mov
and
std
xchg
das
vmulss
inc
xchg
push
or
insb
mov
cmpb
cmp
rolb
xor
repnz
cmp
int3
shrl
mov
mov
jae
cmp
mov
inc
icebp
lret
jo
pop
in
je
xor
pop
mov
clc
fwait
and
std
mov
cltd
or
mov
lret
sti
jecxz
mov
out
jb
jns
lcall
push
push
cltd
and
jbe
sti
repnz
pop
jg
aas
mov
movsl
lcall
sbb
ljmp
inc
cmp
div
mov
dec
mov
and
mov
adc
lahf
out
pop
roll
pop
xchg
mov
mov
shlb
push
mov
les
and
xchg
sub
test
pop
mov
sub
lret
inc
add
stc
rcl
cli
mov
mov
divl
mov
shlb
lea
test
jno
aad
dec
je
stos
xchg
mov
out
xchg
mov
aad
inc
mov
inc
cmpsb
fwait
div
inc
and
mov
pop
negl
jp
or
js
outsl
add
cld
stos
stos
fildll
jb
fdiv
lcall
outsb
and
fistpl
adc
push
adc
fisttpll
dec
mov
jns
sti
xor
pop
repz
je
flds
in
adc
iret
xchg
int
aam
push
cmp
lods
mov
aam
sub
test
inc
pop
sbb
xchg
mov
adc
mov
daa
stos
fdivs
rcl
scas
or
dec
into
arpl
enter
mov
push
fs
add
bound
iret
cltd
ret
js
sub
push
outsl
mov
outsb
loop
pop
popa
or
insb
pop
mov
aaa
mov
jb
test
jmp
out
xor
adc
push
dec
jns
sub
lods
lods
aad
or
popf
jbe
jo
dec
rolb
mov
icebp
dec
or
push
inc
mov
cmpl
jmp
mov
scas
push
cmp
dec
push
xor
sbb
and
jecxz
cmp
push
xchg
negb
lret
lea
cmc
mov
int
and
xlat
call
sub
or
fnstenv
adc
repz
push
xor
shlb
add
jae
dec
push
inc
push
push
aad
repz
push
xchg
cld
push
sbb
add
imulb
aam
push
mov
das
xlat
jnp
ret
shlb
adc
adc
les
mov
mov
push
sbb
rorb
xor
cmp
jmp
insl
fdivl
inc
mov
das
jecxz
mov
cmc
mov
adc
mov
cmpb
or
int3
sbb
andb
insb
int
adc
lea
rolb
aas
stos
sete
scas
push
fcompl
imul
jecxz
lods
test
mov
cmpsl
adc
imul
loope
xchg
add
gs
bound
xor
and
repz
inc
shl
push
shll
inc
fdivs
insl
das
jmp
pushf
and
bound
push
jbe
stc
mov
or
sub
mov
pop
and
in
xchg
out
sub
rcr
xor
pop
mov
lods
pop
add
out
imul
out
mov
scas
mov
xor
and
idivl
fwait
cmc
fdivrl
mov
fisubl
inc
test
aam
repnz
mov
test
cmp
and
and
mov
add
outsb
xchg
and
push
subl
pushf
and
imul
clc
push
imul
test
add
xchg
pop
daa
out
clc
aam
cld
cwtl
fstps
lret
adc
cmp
sub
mov
shrb
mov
lods
lock
ljmp
inc
push
leave
rcl
repnz
clc
orb
hlt
fcompl
movsb
lret
sbb
out
fdivs
mov
test
adc
dec
fildll
sub
sub
lret
cmp
lock
push
inc
lcall
dec
mov
repz
dec
lds
lods
sti
or
pop
enter
pop
into
mov
insb
push
dec
cltd
push
loopne
pop
or
inc
pop
jae
popa
lret
jb
xchg
cmpsl
in
sub
push
movsl
cmp
or
dec
lock
das
xchg
add
icebp
lods
pop
mov
test
iret
dec
js
sbb
test
scas
push
xor
adc
das
xchg
cli
pusha
xchg
push
aad
mov
xchg
mov
scas
nop
incb
scas
testl
stos
and
mov
or
sbb
jo
xor
out
xor
loope
stos
and
push
icebp
cmp
hlt
push
pop
fldenv
xor
into
adc
imul
cmp
leave
lods
leave
jl
lds
dec
mov
das
pop
add
xor
bound
loope
add
bound
lea
push
cwtl
jge
sbb
lcall
dec
adc
ss
jg
repz
jmp
sbb
jle
xchg
lret
jge
pushf
dec
push
lock
jp
jbe
into
jecxz
mov
outsb
adc
shll
das
lret
cmp
add
dec
dec
mov
add
mov
add
int3
add
nop
aad
push
hlt
sarl
xchg
jl
pushf
cmpsb
sbb
sbb
cmpsb
cmp
movsl
outsb
subl
jb
push
mov
icebp
fs
cmpsl
pop
mov
and
out
jg
out
xor
ror
jne
aad
add
fucomp
sub
adc
lods
cmp
lcall
mov
filds
js
mov
mov
inc
mov
bound
push
out
out
xchg
shrb
xor
mov
cs
into
test
les
loope
xor
jnp
push
loope
dec
mov
lret
add
fildl
stos
les
sbb
xchg
push
mov
and
scas
pushf
mov
inc
jle
bound
fstpt
adc
cli
pushl
sbb
mov
cmpsl
dec
not
lcall
xchg
into
inc
shlb
and
push
daa
mov
adc
pop
outsb
sahf
lcall
xchg
jmp
ss
adc
movsb
push
imul
xchg
test
aaa
xor
jle
cld
and
inc
dec
addl
add
cli
push
push
mov
fistl
mov
enter
push
pop
out
or
pop
cmc
cmp
cmpsl
pop
cmp
push
shrb
das
movsl
clc
and
lds
add
jns
jnp
pop
pop
aaa
or
mov
lea
lahf
jg
outsl
mov
das
cmp
dec
outsb
cmp
fsubrp
test
jle
mov
jp
xchg
push
mov
cmp
pop
fdiv
mov
sti
popf
mov
inc
cwtl
xchg
divb
add
jae
insb
push
add
inc
ja
sub
cs
xor
jae
imul
xor
or
jmp
loop
in
cltd
cmp
cld
movsb
sbb
push
dec
add
mov
jecxz
mov
jno
movsb
or
sbb
stc
shrb
adc
mov
mov
sbbl
fs
or
int
sti
andb
cmc
out
out
movsb
xor
dec
out
aaa
sbb
sub
sbb
fcomi
add
cmp
xor
push
std
pop
rclb
sub
sbb
mov
scas
lret
cmp
mov
sub
sub
cld
jge
sbb
dec
nop
or
xchg
adc
xor
pop
cmp
xchg
aad
lcall
ss
fisttps
pop
lcall
lcall
pop
into
movsb
cmpsb
in
dec
loop
push
dec
mov
sahf
fimull
lret
cmp
jnp
lea
cmc
push
dec
arpl
insb
test
sahf
ret
pop
sub
cltd
xchg
inc
fimuls
xchg
push
insl
xchg
xlat
lock
movsl
insl
test
cwtl
es
fcmove
inc
cmp
shll
sbb
sbb
stos
add
pop
xchg
rcll
push
out
fmuls
pop
popa
and
mov
inc
jle
andb
mov
insl
adc
or
mov
jmp
inc
out
pop
jno
arpl
cmpsb
inc
mov
pop
in
frstor
lods
fcompl
sahf
lds
xor
mov
mov
test
and
pop
repnz
mov
xor
dec
arpl
fwait
std
arpl
mov
jne
and
add
sub
mov
out
das
mov
les
pop
popa
xor
loopne
cmp
dec
xorb
or
sbb
push
sbb
dec
adcb
sbb
and
enter
or
push
movsb
shll
pop
cmp
je
sub
lock
push
inc
add
mov
sahf
mov
into
aam
mov
outsb
xchg
pop
mov
cmp
xchg
or
and
out
shll
les
fwait
cld
into
ss
hlt
and
mov
or
nop
out
das
sub
mov
cmp
aaa
or
sub
rcrb
add
adc
cmp
xchg
inc
lahf
in
dec
in
add
roll
mov
and
aas
jbe
in
vpmacsww
mov
repz
sti
scas
mov
fbld
es
and
sub
sbb
sbb
orb
mov
fsub
test
xchg
push
ss
stc
xchg
das
and
stos
jne
fnclex
cmpsb
into
push
test
xchg
cwtl
and
pop
add
sahf
xchg
mov
pop
int3
xor
std
sub
xchg
and
daa
mov
xchg
inc
cmp
adc
xorb
dec
dec
jbe
in
test
xchg
jp
and
mov
mov
daa
in
xor
jnp
inc
out
pop
out
pop
call
jmp
int
lret
lret
cwtl
lcall
les
mov
aaa
sbb
mov
or
mov
and
ds
cmpb
push
popa
sarl
cli
daa
add
test
std
mov
rcrl
mov
cmpsb
mov
sub
popa
stos
lcall
add
pusha
pop
xor
mov
cmp
push
addr16
pushf
xchg
test
jg
and
aaa
addl
jae
movsb
fists
sbbb
xchg
mov
add
fidivrl
sbb
cmpsl
shrl
push
cli
xor
pusha
push
fnstenv
jbe
adc
xor
cmp
sbb
push
out
dec
mov
pop
subl
rol
hlt
pop
out
xchg
and
in
push
adc
xlat
mov
roll
mov
xchg
aaa
push
ficompl
xor
lret
xor
insl
cmpsb
mov
andl
push
xchg
lock
cmp
sub
xor
inc
mov
pop
adc
jne
sub
in
adc
ss
mov
lock
cwtl
fnstenv
mov
jno
jns
sub
jp
adc
add
sbbb
scas
test
push
pusha
stos
lret
jae
repz
ss
or
incb
inc
je
pop
push
and
adc
xor
rclb
push
ficoms
add
das
icebp
inc
mov
lea
rorl
mov
push
and
jne
inc
es
imul
pop
mov
cmp
jle
mov
fxch
es
popf
dec
aaa
sub
fistl
mov
repnz
cld
or
cmp
movsl
sub
pop
push
shrl
icebp
adcl
inc
mov
xchg
and
mov
lcall
rolb
lock
mov
repnz
xchg
and
cmp
xchg
imul
xor
lcall
or
sti
pop
dec
sti
mov
xchg
cmpsl
mov
aaa
mov
mov
adc
jae
pop
inc
mov
cs
les
xor
cmpsb
loop
jl
mov
repz
ss
adc
mov
cmpl
push
sub
int
and
loope
inc
push
jno
mov
add
movsw
lea
cmpsl
ja
xor
cmovbe
pop
lcall
roll
loop
mov
clc
jne
push
sti
xor
mov
das
xchg
stos
aad
pop
mov
test
mov
push
in
out
push
mov
and
loopne
pop
cmpsl
pop
fsave
xchg
lods
lahf
xlat
pop
clc
mov
xchg
push
cmp
enter
push
pushf
and
or
insl
gs
or
je
fidivl
aad
ss
lods
fldt
sahf
pop
jno
shrb
stos
psraw
adc
dec
sub
add
jmp
jp
inc
push
jmp
adcb
lcall
cli
mov
hlt
mov
nop
fwait
adc
or
cmp
hlt
push
or
out
popf
mov
sub
cwtl
sti
stc
test
int3
into
mov
rolb
mov
mov
cltd
ja
xchg
add
loope
jae
out
test
and
shlb
add
aas
sub
insl
add
xchg
fcomp
jge
push
nop
bound
leave
cmpsb
fistps
cwtl
sub
sbb
mov
or
popf
sbbb
gs
lods
cwtl
pop
les
imul
sbb
xchg
inc
cli
inc
mov
lret
cli
push
or
movsl
aad
shll
mov
enter
sbb
jmp
sub
push
pop
pop
jle
push
mov
jge
out
dec
lahf
or
sarl
jp
mov
inc
pop
or
jp
fisttpll
dec
shlb
mov
je
pop
fwait
cmc
out
cld
orl
popl
sbb
sub
jle
lods
inc
inc
mov
enter
movl
loopne
cmpsl
nop
dec
addl
nop
mov
mov
and
ret
pop
fcmovnb
fisubrl
pop
sub
pop
aad
or
stos
inc
mov
mov
in
aas
adcb
lds
mov
xchg
add
rol
sbbb
out
mov
lods
jp
insb
mov
repnz
insb
outsb
repnz
int
pop
xchg
add
mov
pop
cmp
or
push
enter
leave
jne
andb
lahf
shll
dec
mov
fstpt
push
fcmovb
out
dec
adc
je
or
addr16
pop
shl
lcall
fimuls
dec
lods
jae
push
mov
iret
and
lcall
dec
sub
or
loopne,pn
lock
inc
fstpt
inc
lock
ds
xchg
into
and
mov
mov
cmc
add
mov
into
nop
fucomp
pop
mov
outsl
cltd
mov
mov
mov
mov
les
inc
sub
inc
insb
push
imul
imul
pusha
pop
or
pop
je
sarl
mov
cmp
cli
shlb
dec
adc
jl
lahf
aaa
rcrb
cwtl
or
test
sbb
mov
shll
push
and
aam
inc
repnz
es
ja
pop
dec
cli
sarb
cmc
mov
pop
es
sub
movsl
fwait
or
test
cmp
in
cli
mov
test
mov
dec
push
mov
sbb
push
dec
push
push
mov
mov
jb
lahf
cli
push
lods
shrl
sbb
mov
inc
mov
inc
enter
call
into
inc
push
xor
sbb
outsb
aad
cwtl
inc
dec
mov
push
jno
fildl
xor
call
dec
sti
or
xchg
test
lret
and
addb
mov
inc
divl
stos
mov
pop
cli
or
in
popa
orb
insb
sbb
arpl
push
lods
xor
stc
arpl
mov
jne
fprem1
popf
push
mov
mov
pop
ss
push
cmp
lret
cld
xor
jp
jno
std
xchg
cld
rcrb
sbb
xor
out
stc
mov
mov
sahf
push
loopne
outsl
ret
iret
shlb
dec
js
outsl
sbb
add
in
push
adc
sbb
ffree
mov
xor
jle
inc
leave
enter
negb
cmp
and
xchg
pop
inc
cmp
add
scas
pop
push
or
pushf
cmc
inc
push
pop
cmp
outsl
fs
mov
test
pop
push
push
sub
nop
jo
in
lahf
push
xor
and
ds
test
out
push
shrb
movsl
fwait
ds
and
lret
cmpsb
jae
pushf
imul
ljmp
push
in
pop
fdivl
int3
je
out
int
push
inc
ret
xor
rorb
fucom
in
fldpi
clc
ds
dec
mov
push
push
dec
ret
mov
jg
inc
xchg
sub
cmp
mov
xor
jo
out
int3
js
movsb
jle,pn
in
cmp
pushf
pop
les
push
mov
xchg
insl
jae
push
dec
out
je
or
adc
ret
mov
sub
in
out
lcall
jmp
mov
xor
loope
in
idivl
xor
je
cwtl
aad
fsubrp
mov
insl
xchg
or
adc
rolb
notl
pusha
push
add
lcall
adc
cs
dec
push
or
rcll
fwait
in
mov
xlat
xchg
cmp
sbb
jle
xchg
pop
lea
int
scas
pop
movsb
mul
adc
shlb
adc
pusha
int
out
and
loop
sbb
mov
push
sbb
repnz
cmovge
push
dec
xchg
cmp
or
push
pop
fs
and
int3
movsl
loop
dec
fcmovne
and
mov
sahf
jb
inc
bound
icebp
mov
outsl
xor
xor
mov
push
mov
sahf
jp
int
xchg
mov
xchg
add
push
lods
ja
nop
fisubrs
lret
icebp
push
adc
mov
bound
mov
adc
in
fisttpl
fsubl
ljmp
ds
stc
lods
arpl
frstor
adc
roll
scas
jmp
call
add
aas
xor
inc
int3
mov
inc
jle
xchg
out
pop
pop
ret
mov
inc
popa
outsl
and
xor
in
add
fisubs
mov
int3
shlb
jle
jns
dec
outsl
in
fcoms
loopne
test
xor
filds
jmp
stos
xchg
loope
push
push
cs
sahf
lcall
mov
sbb
aam
inc
dec
jo
mov
dec
pusha
int3
sbb
loop
xchg
lods
push
xchg
out
inc
sub
pop
fnstenv
inc
js
lret
jmp
loop
fldt
ds
ret
push
mov
lcall
inc
adc
sbb
pusha
pop
bound
mov
xor
jmp
in
mov
xor
nop
aad
sbb
jne
cmp
inc
faddp
sbb
hlt
std
inc
jne
add
out
xor
aam
sub
lcall
and
loop
fcoml
push
int
cmc
movzwl
push
in
pop
mov
pop
cmp
mov
in
out
inc
ret
adc
ss
adc
loopne
icebp
int
xlat
inc
or
test
add
outsb
mov
loop
sub
lods
mov
or
rclb
cmpsb
pop
repnz
sub
mov
jge
or
pop
movlps
push
dec
sbb
jecxz
loopne
js
jg
or
in
inc
rcrl
mov
sahf
push
sbb
cwtl
and
pxor
data16
imul
iret
rolb
pop
roll
movsb
rclb
dec
stos
mov
out
andl
mov
mov
testl
pop
popf
stc
enter
inc
fwait
shrl
ret
lea
fwait
orb
jp
outsl
and
gs
cmp
loope
xor
hlt
lret
sbb
xchg
sbb
loopne
lahf
das
stc
adc
jns
push
mov
jmp
dec
or
test
dec
mov
enter
xor
jns
inc
inc
pop
xchg
fcomps
test
sbb
sbb
mov
jnp
rcr
lods
daa
cmp
xor
and
fsubr
or
xor
jecxz
lds
xor
mov
or
iret
fmul
aam
fidivs
imul
push
aas
daa
mov
dec
inc
cwtl
fdivrp
mov
icebp
stc
cmp
test
and
mov
loope
xlat
xchg
push
nop
xchg
jb
shll
xchg
cmc
or
push
mov
pop
in
loop
in
popl
sub
fcmovbe
sbb
sub
sub
xchg
sub
cmc
mov
mov
jmp
xchg
push
lods
mov
scas
rcll
jb
sub
mov
fmul
xchg
call
mov
fisttpl
adc
mov
jbe
lret
mov
daa
movsb
mov
lea
aaa
cmp
fimuls
dec
add
orb
inc
or
stos
repnz
std
mov
adc
ffreep
cmp
gs
sub
pop
adc
sub
inc
into
addr16
outsl
mov
add
pop
pushf
jae
fcomps
inc
pop
mov
lods
push
sbb
sti
xchg
inc
sbb
sub
mov
lds
lods
js
dec
add
sbb
pop
data16
shrb
mov
lds
mov
cltd
pop
inc
rcll
or
movsb
mov
xchg
out
xchg
push
insl
lods
jne
jg
nop
jb
cwtl
test
jge
xchg
jns
mov
pop
xchg
and
sub
insl
dec
movsl
int
mov
cmp
addr16
add
repz
test
xor
fsubrs
movsl
mov
out
daa
xchg
xor
pop
pcmpgtd
xchg
dec
mov
pop
test
test
lea
notb
pmulhw
mov
xchg
inc
stc
adc
or
mov
in
sti
fbld
jae
mov
lahf
cmpsb
pop
lds
pop
sbb
xchg
add
test
jecxz
enter
jae
es
push
dec
dec
mov
sbb
enter
jb
shll
sbb
jcxz
sbb
in
scas
xor
add
sbb
ret
push
inc
insl
adc
or
aad
xor
dec
mov
dec
dec
push
fdivs
push
mov
cmp
dec
int3
add
add
in
loop
jno
fildl
mov
iret
xchg
push
stos
jnp
pop
and
mov
je
xchg
mov
xor
ja
loope
adc
push
or
lds
enter
cwtl
jo
jecxz
and
loop
es
rolb
or
adc
pop
popa
in
push
imul
sub
enter
fimull
mov
notb
dec
push
push
mov
xor
test
mov
loope
xor
loope
jo,pt
pop
inc
call
cmc
mov
jg
push
cmp
test
sub
cmp
fcoml
lcall
sbbl
jp
push
or
jns
push
es
dec
fisubs
jo
cmpsl
arpl
dec
xor
xchg
or
sub
inc
push
mov
push
neg
or
popf
pop
xchg
mov
mov
or
jl
out
dec
lcall
lock
mov
cmp
je
pop
xor
dec
cmp
testl
mov
divl
add
iret
push
fwait
push
sub
repnz
stc
jge
inc
sbb
mov
int3
or
sub
je
hlt
mov
sbbl
dec
lds
movsl
push
push
sbb
jle
adc
or
xchg
loopne
jmp
pop
outsb
orl
jb
orl
push
pop
test
mov
call
mov
rcrl
fstpl
out
and
cwtl
test
pop
fcmove
cmp
pushf
push
lret
xorb
push
outsl
fbld
jbe
pop
push
push
addb
mov
aas
inc
fcomps
mov
aaa
xlat
or
fs
xor
mov
lea
nop
adc
arpl
clc
sarb
pop
sub
and
into
ja
inc
jge
shl
or
dec
and
xor
shrl
subb
icebp
mov
mov
mov
inc
sub
imulb
cld
mov
aaa
pop
fmull
dec
push
adc
inc
inc
xor
pop
stos
jns
mov
scas
hlt
iret
sub
jmp
cs
mov
or
ja
mov
pop
lahf
dec
and
jbe
xor
mov
pop
xor
xchg
idivb
xor
movsb
and
adc
pushf
sub
movsb
sub
jmp
xor
lods
adc
dec
inc
in
pop
cmpsl
loop
aas
arpl
sbb
mov
arpl
int
ret
sbb
fstpt
push
jecxz
loopne
sbb
fsubrl
pop
cmp
daa
jns
shl
loopne
js
adc
das
inc
scas
adc
mov
jb
and
mov
pop
int3
xor
dec
cmc
dec
dec
xchg
popf
jl
xor
mov
arpl
adc
out
sub
mov
lcall
stc
jl
orl
jl
sbb
orb
ror
and
ja
lods
push
cmpl
mov
mov
push
repnz
push
lret
cmp
adc
bound
mov
ljmp
fsubrl
or
in
ljmp
jg
aas
mov
push
jecxz
xor
mov
jo
popa
adc
push
pop
out
fwait
mov
or
js
sub
fists
in
scas
add
add
mov
scas
sub
imul
data16
xchg
arpl
cmp
rorl
hlt
cmp
mov
outsb
mov
fldenv
shll
pop
xor
mov
jo
aad
fisubs
or
rorl
addr16
ss
test
jnp
sti
push
pop
arpl
mov
ret
lcall
pop
inc
aam
rcrl
or
push
inc
sub
rcr
aas
lock
xor
adc
dec
mov
mov
jbe
lds
movhps
jb
xor
fsubp
jne
mov
xchg
mov
dec
xchg
sarb
out
xor
bound
leave
mov
loopne
fisttpll
adc
dec
shlb
sub
bound
jle
subb
jge
or
push
ss
adc
add
aam
subb
xchg
and
stc
xchg
or
subl
lds
inc
or
xchg
fcomps
add
lcall
mov
dec
push
mov
jb
dec
sti
cmp
sti
pop
hlt
sti
aad
dec
sub
aad
mov
jmp
popa
fwait
imul
xor
xchg
push
aas
pop
inc
rclb
jo
fimuls
addb
call
lcall
repnz
lds
adc
or
cmpsl
pop
data16
repz
icebp
adc
hlt
aad
inc
inc
imul
fmull
pop
dec
adc
ja
cwtl
js
jle
out
cwtl
pop
addr16
lret
jno
rdpmc
mov
int
inc
sub
sti
out
aaa
push
repnz
ljmp
movsb
popf
rol
pop
mov
jbe,pn
xchg
in
push
les
pop
cltd
popa
std
mov
call
push
mov
adc
mov
dec
or
jno
cmp
cmp
test
pushf
mov
inc
jmp
cmp
adcb
iret
cmp
adc
mov
cwtl
ret
mov
popf
fs
lds
call
ret
push
inc
jecxz
shrl
aam
cmp
xchg
shl
sahf
fmuls
aaa
cmp
mov
add
mov
mov
pop
lret
lret
add
push
xchg
pop
jp
int
mov
pop
mov
imul
dec
cld
and
je
movsl
push
push
insb
imul
and
mov
test
pop
mov
jnp
testl
add
push
ficomps
push
iret
das
push
inc
adc
mov
shr
push
popa
lcall
cwtl
sbb
loope
and
lcall
addr16
sub
movsl
movsl
xorl
stos
push
mov
out
sbb
push
inc
mov
mov
jg
popa
mov
push
mov
xor
int3
sbb
and
jb
sarl
and
xchg
pop
mov
pop
or
in
pop
repz
cld
fildl
lahf
popf
adc
aad
mov
mov
orl
xor
xchg
push
out
jg
mov
and
stc
push
inc
pop
xchg
movsl
mov
ljmp
jno,pt
mov
in
adc
push
xor
pop
mov
mov
lret
jae
js
ror
or
fldenv
lods
lea
arpl
inc
fdivrl
mov
adc
cmp
add
movsl
mov
scas
xchg
ss
nop
dec
cmp
sub
ret
mov
xchg
or
loopne
fld
fldenv
dec
stos
ljmp
js
cmp
cs
mov
or
sahf
inc
popf
mov
popaw
les
in
cmpsl
movsb
sub
cmp
stos
jns
test
aad
movsl
push
iret
mov
sarl
cltd
pop
jo
inc
jnp
roll
cmc
or
push
dec
hlt
xorl
in
js
fists
lcall
sbb
sarl
fidivrs
cmc
xchg
adc
flds
lea
sub
mov
nop
roll
lods
lcall
call
jmp
test
in
hlt
mov
sub
cmpl
das
scas
mov
add
fs
in
add
adc
lds
std
mov
stc
fistpl
fstl
jl
call
pop
push
stos
mov
adc
out
dec
outsl
jmp
iret
frstor
hlt
jle
int
pop
jbe
or
jne
jle
insl
out
js
stos
adc
and
pop
mov
ret
add
adc
jae
jnp
xor
out
sbb
mov
cmp
mov
mov
dec
pop
ja
jmp
mov
push
lock
and
sahf
fcoms
xor
loope
loopne
xchg
loope
es
subl
cmpsb
loop
add
cmpsb
aas
xchg
rorb
mov
sbb
out
gs
ds
not
mov
mov
mov
sub
aaa
jb
movsl
fldcw
imul
es
cld
mov
push
sub
and
movsb
xchg
sbb
ljmp
faddp
xchg
repz
jp
in
cmc
dec
pop
fisubrs
add
in
pop
outsl
mov
adc
jecxz
test
xchg
call
repnz
mov
inc
aad
pushf
sbb
mov
adc
xorl
test
dec
repz
lahf
push
sbb
movsb
dec
movsb
mov
and
push
jle
inc
mov
xor
mov
inc
mov
dec
outsb
test
je
mov
mov
aaa
sbb
add
or
lret
jl
mov
jle
push
inc
or
aaa
mov
testb
or
xor
insl
jbe
in
sub
scas
jns
push
popf
mov
daa
dec
gs
mov
cltd
popa
pop
adc
dec
sahf
arpl
bound
pusha
hlt
iret
arpl
mov
stc
fisubrs
stc
add
test
mov
out
test
xchg
push
cmpsb
jge
fwait
repnz
or
xchg
or
adc
inc
mov
iret
dec
test
mov
xorb
or
mov
adc
jbe
adc
testl
lods
jne
stos
jb
mov
arpl
mov
cmp
shrb
test
fmull
dec
test
mov
jns
mov
jge
xchg
out
insl
fidivrs
mov
jge
add
addl
add
insl
jno
jle
in
add
push
jle
xor
hlt
call
jbe
cs
jne
xchg
sbbb
cwtl
mov
imul
mov
mov
out
ret
lods
cmp
mov
scas
lahf
out
rcrl
data16
push
stos
fucomp
add
jecxz
pop
sbb
or
jle
les
adc
push
add
and
scas
adc
xchg
adc
insb
and
mov
clc
xor
push
insb
hlt
jb
sub
mov
inc
xor
push
lods
xlat
outsl
popf
ret
cmp
hlt
mov
adc
lcall
mov
in
aam
mov
scas
push
dec
imul
fisttpl
jo
fbld
mov
incb
vmovntps
dec
pop
mov
subl
add
adc
mov
fwait
xchg
push
mov
cmpsl
dec
aam
pusha
aas
pop
fnsave
fnstsw
push
pop
inc
ljmp
lock
les
xchg
cmp
xchg
xchg
clc
frstor
mov
cmpsl
sub
xchg
aas
sub
mov
sub
jecxz
test
xchg
dec
loopne
push
jecxz
push
scas
in
mov
movsl
outsl
dec
cmp
lret
sti
out
mov
and
sbb
int3
xlat
sbb
mov
xor
and
pop
pop
push
sub
aaa
or
out
outsb
cs
inc
lcall
xlat
add
mov
icebp
push
adc
jp
fstps
push
rorb
jnp
xchg
fdivs
arpl
cltd
mov
outsl
into
fdivl
test
ffree
enter
in
sbb
dec
pop
and
rclb
add
in
adc
push
nop
adc
pop
fcoms
push
add
fwait
add
mov
pop
je
mov
mov
mov
enter
mov
pop
pushf
popf
sub
lret
ljmp
scas
call
pop
jne
push
lea
xchg
inc
aad
xchg
dec
jge
fwait
cmpsl
jb
aas
fiadds
ja
pop
hlt
roll
push
add
pop
jl
data16
add
sub
and
gs
mov
cwtl
mov
adc
xchg
mov
cs
int
std
int3
pop
mov
dec
cs
mov
test
push
mov
outsl
jecxz
sbb
in
scas
mov
bnd
shlb
in
fcmovne
inc
fwait
outsl
aam
mov
adc
sub
in
fildl
int3
mov
outsb
mov
push
aam
and
mov
sti
repnz
or
js
sub
lds
sbb
inc
cli
pop
jmp
pop
sbb
setge
repnz
lock
adc
inc
imul
dec
xor
push
out
in
ret
pop
xlat
popa
sbb
leave
sub
test
in
in
xchg
mov
fucomi
sub
lcall
lcall
aaa
and
out
ja
sub
loope
out
push
add
xlat
push
mov
pop
imul
shrb
xchg
repz
dec
xchg
bound
sbb
xlat
mov
test
pop
mov
addl
fisubrl
cli
mov
iret
pop
jle
fidivrl
adcl
data16
and
aaa
aas
add
fistpl
pusha
mov
shrb
mov
movsl
fidivl
sbb
pop
inc
dec
jne
push
jno
jns
shll
fs
shr
xor
jge
mov
loopne
and
fs
outsb
mov
lods
outsb
mov
loope
daa
push
sub
sub
jecxz
ja
inc
or
fnsave
mov
jbe
lods
dec
push
enter
ss
pop
repnz
in
imul
iret
lcall
movsb
push
inc
push
push
push
test
cmp
out
jmp
test
and
mov
xor
daa
cli
cltd
or
adc
ret
and
mov
push
shr
jmp
adc
clc
jl
cmp
inc
insb
sahf
out
mov
cwtl
cli
mov
movsb
fimull
push
xchg
push
out
jbe
dec
arpl
xchg
push
out
push
je
mov
pop
rcrb
mov
jne
adc
add
mov
imul
or
mov
xchg
outsb
push
inc
insl
cld
jle
shrb
lret
jno
les
jno
adc
out
and
mov
mov
fistpll
lcall
or
and
movsb
and
cmc
or
pop
cltd
sbbl
inc
pop
add
insl
in
adc
sub
cmp
sti
outsb
ljmp
fimull
xor
mov
arpl
mov
stos
stc
je
in
dec
xor
aam
push
push
mov
pop
pop
dec
cmpl
jns
nop
inc
pushl
jge
push
inc
dec
sub
jmp
add
dec
add
jle
fdivp
mov
ret
push
jno
push
in
mov
inc
popa
enter
popf
inc
or
push
or
or
orl
psubusb
incl
mov
out
fisubrl
lods
cmp
sbb
inc
push
mov
sub
jge
movsl
arpl
rep
scas
fwait
jns
xor
movb
loop
mov
fiadds
out
cmp
out
out
lea
insl
hlt
dec
jg
lods
ret
les
popf
nop
xor
mov
cli
out
ss
lods
xchg
dec
lea
ss
stos
arpl
out
mov
addl
cs
sub
je
xchg
jge
inc
xor
dec
mov
xchg
out
cmpsl
dec
test
inc
mov
cmp
pushf
add
movsb
mov
sbb
xchg
sub
fwait
test
push
les
inc
adc
mov
mov
jle
insl
loope
sti
out
imul
pop
inc
das
insb
fcoml
pop
inc
nop
in
xlat
fldenv
xor
mov
jae
out
data16
sbb
pop
imul
clc
xchg
scas
addr16
cmp
push
data16
popf
jns
sub
pushf
pop
int
adc
adc
jmp
mov
cmpsl
fwait
push
into
sub
jle
insb
or
rcl
push
scas
cmp
jge
enter
lahf
xor
sub
sarl
je
subl
repnz
dec
or
pop
pusha
add
inc
xor
lds
pop
mov
and
mov
inc
in
xchg
jae
stc
ss
xchg
js
jo
movsl
imul
xor
hlt
js
call
lret
out
push
xchg
lret
jns
fs
in
jl
add
ficomps
lret
push
fisubrl
and
jne
jle
mov
pop
pop
pushf
movsl
aad
mov
mov
ss
cmp
ret
xchg
fidivl
and
cld
or
add
fwait
fs
push
fisttpl
popa
cmpsb
imul
sub
jo
jb
or
out
out
sub
call
pop
mov
dec
sub
mov
add
or
sub
or
js
pop
push
test
clc
cs
aaa
push
leave
xor
xor
icebp
cmpsb
lcall
xchg
push
dec
int3
add
int3
rolb
loop
shl
add
hlt
push
xchg
jno
jmp
adc
push
pavgb
adc
clc
adcl
sub
add
xchg
imul
xchg
in
idivb
pusha
pop
insl
cmp
mov
rcll
jnp
fisttps
mov
cmp
mov
js
fsubrl
xchg
push
mov
js
mov
repnz
mov
fstpl
fdivl
nop
cwtl
pusha
push
in
int3
shll
adc
or
sub
andb
mov
dec
loope
cmpsb
fs
sbb
xor
lods
xor
aas
cmpb
sub
repz
mov
movl
test
sbb
lods
sub
mov
push
stos
inc
cld
pusha
xchg
mov
push
inc
loopne
pop
sub
pop
gs
adc
inc
sub
je
cli
and
add
xchg
sub
add
pop
pop
dec
test
jg
clc
add
dec
rol
cli
sbb
sub
adc
addr16
dec
loopne
push
push
inc
xchg
push
rolb
cmp
filds
inc
push
fisubrl
jle
and
movsb
adc
xor
lods
fs
arpl
dec
stos
lahf
adc
mov
mov
push
pop
out
outsb
lods
xor
cmp
test
lahf
adc
jle
pop
add
mov
or
lods
shl
fdivs
ret
test
xchg
lret
call
or
cmc
call
xor
pop
sbb
add
bound
lods
sub
rcrb
cmp
sarl
mov
loop
add
jmp
cmp
xchg
xorb
pop
mov
fsts
fstl
cld
cltd
lods
inc
imul
push
mov
loope
clc
or
stos
fs
push
addr16
ss
add
iret
jmp
sbb
addr16
adc
shl
mov
and
dec
into
and
pop
dec
or
xchg
and
ds
push
or
shl
loop
loop
add
cmp
popa
pop
or
loopne
and
mov
imul
sbb
out
fnstcw
inc
popf
cmpsb
lahf
and
pop
mov
andb
lcall
scas
inc
adc
mov
jecxz
mov
mov
int3
fnsave
in
test
out
pop
bound
xchg
add
ret
rolb
fdiv
or
lea
lret
leave
jnp
aam
int3
ret
mov
jecxz
pop
mov
das
and
test
xorl
and
cmp
and
jmp
xchg
lock
lds
mov
cmpsl
movsl
sub
and
cmp
pop
pushf
push
jno
jns
mov
inc
adc
sub
push
dec
pop
std
js
fistpl
adc
addr16
inc
scas
push
test
or
outsb
test
push
out
dec
out
cmp
movsb
push
out
movsb
test
sub
sub
mov
sub
jl
xor
cmp
mov
je
dec
adc
push
mov
in
xor
test
mov
bound
out
add
fsub
test
stos
cmp
movsb
scas
scas
or
test
lahf
fidivs
jnp
sbb
in
mov
cli
xor
or
xchg
aaa
loope
inc
outsl
adc
stos
mov
dec
repz
or
imul
cmp
leave
pop
cli
xchg
dec
cmpsl
vrsqrtss
dec
push
cmpsl
add
outsl
cmpsb
pop
jp
inc
shll
andb
test
pop
out
lods
sub
aad
in
outsb
test
pushf
xchg
cld
mov
cmpsb
testl
or
xor
cs
fcmovnu
jnp
mov
insl
jmp
sbb
cmp
sub
out
roll
es
outsb
sahf
lahf
repz
lds
cmc
lahf
nop
push
push
sti
sahf
popf
lret
mov
push
jle
ja
scas
inc
ja
push
outsb
add
jg
add
and
mov
test
fwait
rol
sbb
inc
inc
fisubrl
jnp
sbb
or
and
fimull
dec
das
adc
hlt
sub
sbb
jl
cmpl
or
sbbb
sbbb
ds
push
adc
shlb
imul
mov
inc
mov
inc
jl
test
testl
repz
rorl
popf
mov
mov
testl
xor
sbb
fcompl
stos
jmp
ja
gs
xor
mov
inc
mov
in
dec
mov
sbb
imul
push
pop
push
adc
popa
test
pop
mov
jne
orb
jge
jp
xor
jl
dec
test
imul
test
fisttps
repnz
fisubs
push
icebp
js
jp
pop
subl
cld
add
cld
gs
push
ret
aad
pop
iret
inc
cs
jmp
pop
ds
jecxz
orb
ret
dec
push
rclb
or
in
inc
push
dec
xlat
inc
scas
mov
pop
pop
loop
fnsave
xchg
cmp
cmpsb
pushw
cmp
scas
pop
xchg
test
fwait
dec
dec
sub
ja
sbb
subl
test
xor
dec
cmpsb
fimull
mov
xor
dec
repnz
sbb
or
cmp
push
adc
outsb
pushf
cmp
out
pop
jo
outsl
ret
cmc
xchg
les
out
cmpsb
pop
adc
rorb
movsb
scas
and
test
popf
fisubl
ficompl
sub
dec
insl
mov
jns,pn
xor
fwait
mov
popa
dec
fwait
test
push
dec
lea
fisttpll
fldenv
jmp
push
mov
push
lahf
fisttpll
mov
jo
mov
movsb
out
cmp
adcb
aas
xor
cmpsb
mov
push
movsb
mov
sub
mov
lret
xor
lods
cld
pop
pop
mov
loope
in
scas
movsl
xchg
push
lods
imul
xor
mov
inc
jb
ja
jecxz
fimull
js
mov
cmp
fcmovb
subl
xchg
arpl
adc
into
xchg
andl
dec
pop
jno
mov
jne
pop
loopne
add
mov
cmp
ljmp
mov
mov
pop
daa
inc
ja
jecxz
movsl
xor
andb
scas
or
dec
push
add
sub
mov
ss
jmp
out
push
inc
xchg
adc
ljmp
lahf
mov
ret
jp
add
fisubl
jno
orl
std
add
ficomps
sti
xor
leave
jmp
mov
push
in
jmp
or
lock
push
loopne
subb
test
cmc
push
cmc
std
imull
stc
out
xchg
test
push
repz
cmp
dec
cmpsl
call
aas
xchg
or
or
jae
or
in
cmp
mov
add
dec
dec
dec
jae
scas
cli
js
push
and
pop
lock
mov
movsb
pop
dec
inc
and
in
pop
insl
or
adc
dec
lock
or
in
in
loope
out
negl
push
in
ret
push
test
sti
xor
pop
jns
cmp
and
fs
pop
in
stc
dec
pop
nop
push
pop
pop
or
test
xor
cltd
es
xor
lret
outsb
jle
mov
mov
test
jmp
and
xchg
ds
ds
adc
and
xchg
in
and
mov
mov
fs
lods
arpl
sbb
mov
adc
push
add
aad
fs
ja
inc
addr16
out
jbe
stos
popa
mov
pop
mov
dec
and
popf
mov
ret
test
popf
repz
fisubl
pop
and
popf
mov
and
negl
jo
fwait
imul
test
shll
es
xor
push
xor
adc
push
ds
fwait
fs
or
adc
push
jo
mov
popa
in
push
dec
mov
mov
imul
outsl
loopne
int3
pusha
jnp
rcrb
push
jno
inc
ja
test
mul
aaa
lods
aad
mov
cmpsb
inc
push
sahf
ret
mov
jno
adc
jo
iret
dec
adc
cmp
fdivrp
daa
sbb
push
mov
shrb
sbb
jl
fwait
orb
pop
mov
jl
xor
out
fldl
mov
cmc
push
or
mov
xchg
mov
jnp
inc
lods
push
jns
xchg
sub
cmpsl
xchg
push
xchg
mov
xor
popf
and
cmp
mov
inc
clc
dec
adc
addr16
icebp
push
lods
adc
lret
arpl
mov
jo
fstpt
les
clc
fisubl
mov
js
hlt
sub
pop
cmp
cs
push
sub
mov
pop
ret
std
flds
jno
ficoml
dec
lcall
iret
mov
in
push
push
adc
fistps
push
into
sbb
cmp
mov
mov
xchg
mov
push
pop
add
pop
pop
std
popf
xchg
adc
fchs
arpl
cld
add
aam
in
mov
lret
jle
hlt
jno
adc
and
xchg
jns
jne
lods
loope
subl
or
xchg
cmp
dec
pop
ret
stc
rol
out
nop
mov
lahf
lods
cmpsb
dec
sub
sbb
cmp
and
inc
in
or
rcll
std
xor
lods
int3
cmp
sbb
insl
xchg
ret
lock
gs
pop
stc
fisttps
pop
insl
sbb
jne
js
xchg
pop
mov
sbb
aad
icebp
test
mov
mov
push
insb
mov
xchg
ljmp
test
or
mov
jge
lea
pushf
lahf
insl
push
mov
mov
jp
incb
add
sbb
lods
sbb
leave
outsb
test
dec
push
inc
lea
mov
mov
aad
push
rcrl
arpl
xchg
and
cltd
jo
cmp
stos
fsts
pop
add
aam
mov
lock
pop
call
dec
mov
jmp
jl
lea
add
fisubrl
inc
lahf
mov
into
das
push
adc
sarb
pop
mov
das
lods
repz
inc
addr16
dec
aam
sub
in
pop
jg
fisubl
aad
add
popa
mov
in
jbe
push
or
push
fisttpl
cltd
pop
pop
xchg
sbb
inc
cmp
out
xchg
in
mov
cmp
push
incb
frstor
lock
lock
dec
sub
push
movsl
add
adc
mov
aad
sbb
outsl
popf
aas
jmp
in
pop
xchg
or
cmp
dec
jle
pop
outsb
out
add
je
adc
les
pop
xchg
outsl
mov
sub
push
and
push
out
imul
and
dec
leave
dec
pusha
mov
and
add
aas
jg
pushf
and
mov
dec
xor
clc
sub
popf
push
popf
mov
add
and
daa
pop
scas
push
pop
cmp
out
mov
movsb
or
sti
insb
jae
pop
jmp
gs
xchg
mov
lock
call
push
sarb
push
test
xor
jl
es
notl
data16
int
mov
and
mov
and
add
adc
adc
ja
xchg
push
das
test
dec
and
cld
pop
dec
inc
fidivrl
and
cmc
jecxz
fnstenv
std
in
popf
je
arpl
ret
into
dec
sbb
out
mov
xor
out
mov
repnz
fistpll
mov
jbe
pop
shll
xchg
shll
outsl
std
sbb
mov
mov
aas
outsl
lret
in
jg
adc
lcall
je
nop
jb
test
mov
leave
push
int3
xchg
loop
cmp
mov
mov
push
sbb
push
or
inc
mov
mov
push
nop
rcll
out
push
pop
fcmovb
lods
fnstenv
movsl
lcall
sbb
push
mov
adc
daa
lea
push
push
lea
mov
andb
scas
rcr
fwait
imul
pop
lahf
loop
lahf
jmp
test
xchg
mov
fld
push
jbe
sahf
xorl
pop
gs
test
or
xchg
loop
cwtl
insb
add
jmp
mov
icebp
cmpsb
jle
xor
leave
jmp
lret
push
mov
sub
ja
and
adc
mov
and
and
cmp
stc
aas
pop
rcrb
xor
jo
and
jo
divb
jnp
or
enter
xchg
aam
mov
jno
add
push
adc
inc
lods
cmp
outsl
out
cmp
cmpsl
mov
xor
mov
test
jbe
outsb
cwtl
lds
lret
lods
fsubs
jnp
mov
and
cmp
inc
cwtl
xor
mov
and
inc
jns
in
and
stc
lcall
xorl
sbb
sub
cmpsl
std
in
rol
dec
ljmp
or
add
sbb
mov
jecxz
jg
out
cmp
jmp
push
mov
std
stc
cld
jge
xor
movsb
dec
fisubs
rcr
adc
enter
in
and
sbb
ret
add
xor
fldl
jge
popf
xor
imul
cmc
push
push
mov
xorl
jecxz
mov
xchg
adc
sub
pop
cmp
mov
in
xchg
adc
insl
jae
mov
jmp
inc
jne
pop
pop
cmpsb
stos
imul
sbb
inc
stc
ds
mov
in
add
aam
aad
fisttps
cmc
xor
adc
cmp
loope
das
movsb
rolb
shll
ja
cmc
int3
xor
pop
pop
popa
enter
fildl
or
push
imul
cmp
lock
jo
hlt
popf
insl
adc
mov
arpl
pop
mov
sbb
jecxz
hlt
lds
jns
jb
fwait
push
aad
push
aam
cmp
xor
ret
xor
test
xlat
out
loope
inc
fdivr
jecxz
insl
add
or
dec
push
out
test
in
sti
shll
mov
repnz
repz
insb
sub
push
jbe
adc
cltd
mov
push
test
cmpsb
loope
cld
scas
cmp
cmp
repnz
inc
push
popf
out
cmp
pushf
and
lea
mov
xchg
or
adc
jno
add
push
cmp
popf
fsubrl
add
dec
pusha
add
lea
stc
jne
add
mov
xlat
or
push
dec
xchg
in
aas
dec
pop
aas
cs
xor
adc
adc
data16
pop
xchg
in
xchg
xor
cmp
jecxz
dec
andl
rol
arpl
or
xchg
cld
push
sbb
or
mov
adc
jmp
push
fadd
sbb
mov
pop
pop
sbb
or
test
lds
popa
mov
adc
lahf
clc
stc
cmpsb
call
loope
dec
iret
insl
scas
jmp
or
and
mov
inc
pop
mov
popa
shlb
or
push
cwtl
add
decb
ret
and
adc
cmp
pop
out
imul
push
sbb
aas
std
shll
push
xor
mov
lret
in
es
arpl
pop
fwait
test
jle
dec
xchg
roll
mov
hlt
mov
stc
pusha
xlat
fwait
in
mov
ret
mov
in
mov
std
movsl
sub
roll
sbb
ds
mov
iret
js
mov
mov
out
mov
lea
inc
imul
mov
xchg
jl
aam
inc
pop
xor
ja
dec
iret
adc
lret
das
rorb
out
ffreep
ret
mov
sbb
xorb
jp
xchg
mov
push
jle
in
xchg
out
adc
popf
imul
cltd
or
cmp
push
cmp
dec
and
leave
xchg
fcompl
sbb
xchg
mov
mov
in
sub
and
xchg
add
lods
sahf
lock
imul
adc
cmp
mov
cmp
int3
sbbl
ret
clc
test
jne
les
aam
push
sub
nop
lea
in
pop
jb
ss
adc
icebp
in
fldcw
filds
andl
inc
arpl
dec
leave
push
pop
aaa
xchg
pushf
scas
pushf
test
adcb
fs
sub
mov
imul
rep
rcrl
cli
jge
mov
pop
dec
pop
sub
xor
sub
test
popa
ret
mov
jno
mov
loope
pusha
insl
rorl
adc
movl
loope
outsb
cmp
test
ds
sahf
xor
leave
pushf
sbb
outsl
jg
mov
pop
or
push
pusha
fsub
add
xor
fsubs
stos
outsb
jb
pop
mov
outsl
jle
mov
mov
int3
scas
xchg
mov
dec
sbbl
ss
mov
mov
imul
or
iret
ss
rorl
test
sub
mov
repz
push
ja
mov
ja
mov
fmull
push
hlt
lcall
add
push
imul
test
or
rcrb
cmpl
adcl
clc
mov
inc
into
jecxz
xchg
icebp
es
pop
test
sbb
pop
adc
repnz
mov
aas
rolb
adc
aam
pop
jl
aas
hlt
mov
lret
dec
add
imul
pop
pop
add
gs
xor
dec
addb
aam
andb
cwtl
into
mov
and
das
push
fdivrs
daa
lea
cltd
sub
lock
sub
cmp
push
in
mov
pop
xchg
pushf
roll
repz
aad
insb
add
rol
in
and
adc
cld
cmpsl
rorb
jb
xchg
mov
addr16
cmc
xchg
or
pop
call
xchg
lahf
lock
or
cmp
xchg
lods
test
adc
in
xor
pop
jp
adc
jae
jbe
cmp
in
repz
lcall
aaa
pop
lods
dec
repz
mov
sahf
pop
xor
out
lahf
dec
sbb
jle
inc
push
out
lds
cwtl
leave
icebp
mov
inc
aad
adc
push
add
xchg
loope
pop
test
decl
cltd
mov
out
cmp
in
dec
pop
inc
jns
mov
fisttpll
xchg
sbbb
lahf
mov
pop
loop
pop
push
les
mov
pop
pop
pusha
cmp
cmp
aaa
or
das
aad
jg
out
or
lret
daa
shll
jmp
push
cmp
gs
or
scas
adc
roll
pop
mov
ss
or
pop
jo
inc
loope
lods
repnz
add
insl
jl
cmp
cmc
mov
rcrb
jge
push
imul
mov
dec
das
call
mov
popf
stos
test
insl
imul
pop
ja
sub
cmp
dec
jb
sub
fs
cmpsl
stos
sub
pop
cmp
and
sahf
dec
push
cli
xchg
jns
inc
je
sbb
inc
shlb
cld
jmp
mov
or
pop
inc
jb
insl
rcr
mov
add
fsub
xchg
inc
or
pop
test
ljmp
mov
inc
idivb
pop
mov
mov
test
mov
scas
in
adcb
xorl
adc
xor
xchg
pop
xchg
push
and
sahf
adc
cmp
mov
sub
or
xor
inc
es
fs
sub
or
hlt
cltd
add
jnp
pop
dec
out
push
idiv
std
mov
xchg
xor
lret
adcb
gs
add
adc
dec
sbb
pop
pop
xor
mov
loopne
inc
pop
inc
sub
sbb
cli
clc
mov
addr16
std
fsubl
jmp
mov
fcomp
mov
fsubrl
orb
xchg
push
sbb
ficompl
mov
daa
ret
xor
out
dec
iret
push
int
sbb
stos
mov
cli
mov
xor
or
hlt
xor
pop
mov
inc
push
iret
insl
mov
jno
dec
dec
insl
inc
push
cli
lret
add
mov
add
mov
mov
stos
jp
dec
rolb
mov
mov
and
bound
fildl
dec
jne
xchg
mov
lods
imull
push
fstcw
sub
nop
outsb
xchg
ljmp
movsl
shll
aad
shll
push
insb
sub
sahf
pop
out
jp
and
ja
cmpsb
mov
pushf
and
add
adc
aad
ret
pop
dec
jnp
dec
xchg
dec
mov
rcll
shr
sbb
jmp
add
sarl
push
mov
mov
sub
push
jmp
sub
dec
out
jns
xchg
sub
push
xchg
lods
fcomps
inc
mov
fnstenv
enter
fisttpl
cld
pop
fcomp
int
shrl
or
or
stos
dec
cltd
enter
pop
jl
and
pop
sub
mov
repz
add
test
shll
xorb
add
lock
push
mov
pop
addr16
imul
jmp
inc
sub
daa
inc
pop
mov
movb
mov
jo
lret
lds
movsb
sbb
adc
dec
mov
dec
repnz
mov
loope
adc
enter
dec
cmp
shll
call
push
mov
data16
loopne
mov
add
or
ds
jbe
jp
cmp
cmp
scas
cltd
sub
pop
xor
pop
cs
mov
pop
and
out
ds
repnz
outsb
pop
xchg
pop
push
mov
jmp
push
inc
sub
daa
pop
pop
aad
mov
inc
jbe
mull
popf
push
dec
in
adc
insl
mov
int3
inc
ud2
pop
aas
sub
fdivp
sub
scas
fdivs
popf
and
imull
cwtl
loop
test
pop
fidivrl
push
jnp
dec
into
faddl
mov
cltd
movsl
or
movsb
fnsave
mov
gs
pusha
mov
or
sahf
jae
mov
dec
jo
push
stos
or
lea
pop
sub
push
mov
cmp
xchg
lcall
fidivrl
scas
mov
pop
sbb
int
lcall
ret
out
jno
jmp
and
lds
ljmp
xchg
lret
in
xchg
loope
das
dec
xchg
sbb
imul
lcall
test
xchg
arpl
mov
xor
in
mov
pop
sub
mov
int3
pop
inc
mov
outsl
sbb
jno
bound
addl
lahf
cmp
xchg
push
xchg
pop
or
xor
cmp
jle
sub
lahf
loop,pt
fisttpll
movb
sbb
cmp
jae
cmc
adc
add
xor
daa
std
jp
imul
adc
ficompl
jl
stos
lds
lcall
inc
adc
mov
pop
adc
lods
mov
enter
xor
inc
shll
sbb
test
stos
pop
push
das
or
mov
ja
xchg
cli
sub
dec
inc
dec
mov
mov
int
repz
push
sbb
adc
aam
mov
fsubrl
int
cld
cmp
stos
clc
push
shlb
xor
adc
leave
push
push
dec
push
leave
sahf
xor
out
dec
lods
push
outsl
adc
add
fsubl
inc
call
shlb
cmpb
mov
cmp
clc
inc
inc
dec
and
pop
fstl
test
jmp
xchg
xchg
cmp
test
inc
sub
pop
or
sub
mov
inc
and
push
js
xor
lcall
mov
push
pop
add
mov
push
cmpsb
jo
aad
pop
push
jecxz
sub
and
xor
addb
sbb
mov
dec
enter
sub
add
mov
jae
hlt
addb
ljmp
jae
pop
mov
mov
pop
and
pop
sub
add
sbb
sub
xor
repz
jle
ret
in
dec
sbb
iret
xchg
mov
pop
insl
push
sbb
sarb
lds
cli
fistl
aaa
mov
push
clc
and
dec
insl
fwait
notb
js
xor
es
sub
jbe
cmp
in
insb
ror
aaa
dec
movsb
rolb
inc
repz
push
mov
jecxz
add
sbb
cmc
mov
sarb
test
fisubrs
adc
sub
scas
loop
imul
aas
push
cmpb
movsb
mov
add
out
push
iret
mov
pop
push
and
lods
hlt
xor
mov
dec
sbb
mov
subb
fcoml
xlat
test
mov
lods
gs
push
hlt
mov
imul
add
lods
test
inc
scas
dec
or
sbb
sub
fwait
xor
mov
lock
or
dec
or
or
sbb
loope
insb
popa
jnp
add
stos
pop
ds
lds
cmp
idivb
pop
pop
xor
and
mov
xor
in
clc
jge
cmp
mov
push
enter
test
or
out
negl
cmp
adc
dec
pop
filds
push
inc
cmp
ljmp
and
dec
xchg
or
js
jne
dec
jle
sbb
jno
jno
dec
mov
stos
aas
and
js
lods
xor
mov
adc
add
xchg
jns
clc
outsl
dec
pop
bound
sbb
and
jno
dec
push
loop
rcl
lahf
int
dec
ja
inc
cs
mov
sbb
andl
sbb
xchg
xchg
pop
inc
sub
pop
test
in
and
adc
pusha
icebp
or
push
inc
nop
jbe
and
and
int
lock
mov
and
mov
dec
mov
push
aas
mov
sbb
lahf
mov
test
mov
sub
enter
cmp
into
jg
mov
jae
xchg
add
xor
sbb
fldz
fidivrl
movsb
pushf
dec
pop
cli
sarl
aaa
jmp
stos
push
sbb
adc
iret
or
loopne
je
xor
idiv
mov
lea
es
andl
fsub
sahf
xchg
out
xchg
adc
cmp
xchg
add
test
test
xchg
jb
xlat
sub
sub
test
stc
inc
ljmp
movsb
add
xor
insb
lds
lods
mov
cwtl
insl
mov
pop
shr
movsl
es
inc
mov
mov
jo
adc
xchg
fnstsw
ljmp
sub
jbe
aas
xchg
sub
ret
mov
outsb
cmpsl
ret
mov
fnstsw
push
fidivl
sub
aaa
and
scas
mov
cmp
aaa
cmp
push
repnz
push
mov
cmp
fs
or
push
mov
push
js
pop
cld
loope
scas
xor
aad
cmpsb
cld
loope
adc
fisttpl
std
jns
divb
inc
lahf
xor
push
cmp
pusha
or
mov
sub
data16
pop
mov
pop
dec
jae
xchg
into
movsl
sbb
sbb
fucom
push
jl
daa
inc
cmc
out
cltd
dec
push
mov
cmp
jg
pushf
mov
popf
movsl
cmp
out
push
sub
shr
ficompl
fmull
ljmp
or
add
cmp
cltd
inc
mov
clc
js
fldt
addr16
test
sahf
xchg
jge
jnp
and
pop
mov
inc
test
xchg
or
sub
fcoms
mov
push
pop
inc
dec
repnz
fcom
xchg
cmpsl
adc
fdiv
arpl
dec
mov
cwtl
mov
icebp
and
outsl
or
adc
out
xor
out
cmp
inc
outsl
popa
leave
stos
ljmp
mov
or
mov
dec
mov
add
sar
mov
inc
mov
int
out
inc
jns
xchg
mov
enter
mov
mov
lret
dec
shlb
stc
mov
dec
les
imull
stos
std
or
ja
inc
add
roll
cli
inc
pop
add
cmp
fsubrl
aam
mov
in
and
or
dec
movsb
sub
fisubl
fstpt
das
push
mov
ljmp
dec
pop
mov
jp
sbb
mov
std
dec
mov
sub
push
xrelease
int3
fistps
xlat
push
jl
add
pop
inc
ds
aad
scas
mov
loope
loope
push
ljmp
je
flds
in
cmpsl
mov
jb
outsl
pop
pushf
xchg
mov
or
clc
ret
adc
push
xchg
lahf
movb
lods
jns
mov
sub
addl
adcb
xchg
xchg
pop
adc
xor
pop
test
jl
mov
jl
jns
hlt
fsubrl
or
cmp
cmp
mov
popf
shll
dec
clc
stc
popf
in
inc
or
fstpt
cld
sub
shll
fwait
test
out
ss
cmp
mov
jnp
add
inc
inc
pop
movsb
lods
mov
fstpt
sub
xchg
out
popf
stos
frstor
lods
cmpsl
fildl
push
sub
scas
in
int
dec
sbb
or
pop
bound
xor
aam
data16
jne
sysret
outsb
jecxz
test
dec
mov
jno
cmpsl
mov
push
adc
sub
mov
or
push
decl
pop
icebp
and
icebp
movsb
jmp
inc
hlt
ja
bound
rcll
push
cwtl
xchg
out
cltd
or
mov
mov
lfs
adc
dec
movsb
adc
inc
das
insl
bound
lret
mov
loopne
push
dec
aaa
sub
xchg
in
imul
sbb
repz
cs
add
jl
cs
ja
ja
enter
cmp
cld
xchg
push
jle
push
mov
cmp
pop
je
roll
lods
fdivl
add
xlat
dec
outsb
mov
stos
andl
outsl
sub
insl
sbb
daa
mov
cld
or
int
cmpsl
das
insl
aad
xor
mov
push
mov
push
jmp
pop
lcall
icebp
and
lahf
jnp
jb
lds
adc
cmp
les
cmp
cltd
sahf
adc
dec
push
inc
fiaddl
cmpsb
aad
mov
sbb
xor
mov
pop
lea
in
jnp
sbb
mov
inc
lock
mov
shlb
stos
mov
mov
stos
push
mov
aad
jle
jno
call
adc
jbe
stos
das
pushf
pusha
xor
cmp
xor
mov
push
pop
xor
jge
push
pop
aad
push
push
imul
jo
test
sub
ret
push
cli
aad
inc
sbb
outsb
outsl
mov
mov
push
ffree
jmp
xchg
fsubl
insl
dec
xor
mov
sbb
xor
add
inc
inc
das
mov
dec
lcall
xor
lret
xor
push
dec
inc
loopne
lds
test
ret
xor
xor
jb
xchg
mov
and
int
dec
mov
fs
dec
xor
xchg
dec
mov
loop
rcll
subb
pop
mov
add
in
repz
ss
popa
sbb
pop
in
lods
mov
and
pop
loopne
aaa
das
xchg
add
jmp
popf
dec
jle
lret
pop
xor
les
inc
mov
scas
push
loopne
push
aam
pushf
jnp
es
adc
mov
arpl
sbb
test
push
bound
jmp
pop
loopne
ja
pusha
pop
push
push
cwtl
repz
call
jbe
pop
sti
pop
pop
in
test
xchg
xchg
push
popf
mov
adc
sahf
mov
imul
sbb
mov
adc
int
sub
out
jl
ret
xchg
addr16
cmc
or
add
xor
or
inc
cwtl
lret
adc
ds
pop
dec
xchg
fsubrl
pop
rorb
and
mov
xor
insl
loopne
and
sub
adc
subb
ja
xchg
out
insb
xor
lret
jge
xchg
mov
rcll
adc
test
in
rol
pusha
pop
xchg
iret
inc
add
mov
add
sub
loopne
popa
xchg
or
mov
cmp
dec
pop
aam
scas
pop
psubb
xor
pop
mov
int
jbe
inc
and
xor
sbb
popa
and
lret
mov
fcmove
loopne
jbe
adc
add
leave
lock
leave
jnp
fnstcw
cli
mov
xchg
push
outsl
arpl
scas
push
push
aad
pusha
cwtl
je
clc
pop
dec
mov
mov
jl
sarl
ljmp
shll
int3
into
xor
sub
shlb
mov
imul
fldl
jge
jg
sub
pushf
push
arpl
lret
js
mov
sbb
pop
movsl
aad
push
sub
or
push
aaa
inc
mov
inc
test
rcl
add
pop
jnp
stos
xor
mov
std
add
lret
fwait
sub
push
push
aas
nop
push
xor
mov
add
jge
fcmovu
clc
sti
xchg
mov
lods
leave
sub
dec
mov
add
pcmpeqw
scas
cmc
push
xorl
jno
inc
add
fstps
idivb
js
push
in
rcrl
movsb
inc
pop
sub
xchg
iret
xchg
pop
mov
fwait
andl
mov
lods
cltd
dec
push
dec
dec
mov
ss
imul
bound
leave
into
sti
mov
or
insl
movsb
lea
stos
sbb
fdivrl
inc
mov
lret
in
pop
sub
pop
nop
loop
nop
dec
inc
pop
adc
add
andl
lahf
xchg
fs
add
sahf
aas
or
cmp
sti
mov
mov
sbb
fcoms
and
shrb
xchg
pop
clc
pop
outsl
enter
test
cmpsb
int3
lds
popa
out
push
in
inc
fs
out
out
jmp
pop
sti
add
xor
shll
add
mov
out
test
or
jbe
xchg
in
push
sti
pop
mov
outsb
xor
jge
fwait
int
mov
imul
stc
adc
popf
or
divb
or
test
cmp
push
jb
lea
xor
and
mov
fildll
ret
or
and
pop
xchg
mov
adcb
scas
mov
mov
mov
hlt
adc
aas
jno
leave
mov
cs
sub
pop
xor
mov
insl
nop
shl
adc
jb
movsl
bound
mov
cmp
dec
or
loope
jno
mov
out
mov
xchg
nop
pop
ljmp
mov
push
pusha
ds
ljmp
cmp
stc
lods
out
cmp
lret
loope
cld
out
dec
nop
out
insl
mov
cmp
mov
mov
jb
test
stos
nop
mov
insl
lret
cltd
cmp
pop
sbb
incl
scas
fldcw
add
movsb
xor
and
rcrb
call
sar
mov
negb
dec
dec
stos
xchg
and
and
inc
fmull
add
repz
fldl
inc
imul
es
xchg
pop
cltd
cmp
dec
insl
fildl
ss
jg
cmp
xchg
and
and
outsb
mov
insl
dec
jne
test
aaa
mov
aad
loopne
in
adc
nop
repnz
ret
addr16
dec
dec
jae
pop
aad
push
sbb
mov
mov
neg
movsl
in
jg
jg
pop
push
adc
fucomip
mov
outsl
mov
xchg
call
ss
imul
mov
jge
das
mov
hlt
daa
cmp
std
xchg
and
in
xchg
jne
xor
cmpsl
adc
adc
mov
in
enter
push
mov
mov
ljmp
ret
mov
les
mov
xor
mov
jns
add
push
cltd
stc
cld
ljmp
xchg
imul
jbe
xorl
inc
loope
push
cmp
out
add
sub
ljmp
push
jle
ja
ret
sub
mov
outsb
fimull
dec
int
sbb
pusha
jno,pt
inc
out
call
inc
cltd
mov
shll
or
mov
mov
dec
xor
jae
call
ret
mov
pushf
movsl
add
adc
pop
stos
daa
ficoml
push
roll
inc
ficomps
cltd
roll
jle
and
clc
in
xchg
push
pop
das
loopne
jno
and
inc
popa
adc
mov
pop
add
mov
xchg
rolb
fdivl
sbb
and
cmp
xchg
jne
ds
inc
jl
into
and
test
mov
xor
pop
mov
sbb
push
jae
dec
orb
dec
in
inc
pop
push
pop
dec
loope
xor
mov
sarb
cli
lods
jmp
lret
cmc
xor
mov
xchg
mov
add
adc
push
pop
shll
xchg
jle
xchg
jbe
xchg
lock
push
sub
cmpsl
movsb
push
pop
push
adc
scas
or
insb
idivl
outsb
jns
jp
dec
mov
loopne
adcb
dec
pushf
leave
pop
cli
or
div
cmp
aas
ds
fisubrl
mov
jp
or
dec
shll
inc
fs
outsb
jns
push
imul
xlat
cmp
fisubrl
mov
clc
push
fs
fcmovnb
and
int3
xchg
xor
dec
cmp
cmp
or
push
push
jnp
mov
iret
shrb
insb
test
fwait
stc
pushf
xchg
in
dec
dec
jns
or
xchg
push
aas
jbe
cmp
out
mov
arpl
mov
dec
mov
jp
fisttpll
test
xchg
pop
cmp
orb
and
sbb
imul
out
in
xor
dec
imul
push
lahf
dec
xor
shrl
sar
sbb
loopne
popf
xchg
pop
pusha
or
cmpl
mul
les
add
cmpb
outsb
or
leave
cmpsb
sti
jmp
sbb
mov
jb
push
sbb
movsb
or
sbb
lds
cmp
aaa
and
clc
and
in
fists
shlb
cmp
jns
mov
mov
in
js
emms
jnp
pushf
imul
outsl
adc
jg
insb
sub
fwait
mov
int
xchg
jl
sub
pop
cld
loopne
int3
and
fadds
xor
out
mov
daa
inc
aam
mov
sbb
and
ljmp
pop
mov
sbb
aam
pop
fnstsw
into
mov
push
mov
les
xchg
fwait
test
mov
mov
mov
out
sub
adc
stc
cmp
inc
inc
inc
and
jg
xchg
jne
subl
fucomi
mov
loope
pushf
sub
das
mov
icebp
shlb
aam
stos
cmp
sbb
jp
imul
add
out
iret
sub
mov
leave
mov
das
iret
repz
jle
jns
out
lret
push
mov
pop
int3
xchg
clc
xor
scas
incl
push
push
jge
jnp
insl
push
repnz
repnz
ret
jb
jl
add
jecxz
adc
clc
inc
std
mov
or
jns
lcall
out
and
and
xor
jge
lea
hlt
cmpsb
rcrl
stos
out
or
dec
xor
mov
ja
clc
cltd
push
mov
cmp
rcrb
xlat
fists
dec
dec
cmc
into
inc
jge
xor
mov
xor
pop
lea
loop
in
pop
js
clc
pop
mov
sar
mov
mov
inc
mov
jg
jmp
sub
sbb
adc
hlt
lock
mull
jbe
sbb
jo
sahf
jns
insl
inc
mov
push
or
inc
dec
cmp
movsb
mov
jb
or
push
mov
sub
sahf
out
add
inc
jg
xor
iret
out
stos
mov
std
imul
and
push
push
in
lea
insb
test
mov
cmc
mov
test
pop
lods
jno
outsl
rcll
scas
dec
push
aaa
dec
add
shl
movsl
sbb
data16
fs
inc
mov
dec
push
mov
lret
and
fs
ficoml
sbb
stos
lret
jl
js
fwait
add
dec
arpl
lds
nop
pusha
aad
mov
lock
push
imul
shll
test
fucom
sbb
adc
fdivrs
repz
push
mov
out
mov
lahf
call
pop
jg
out
cmc
add
inc
scas
lret
xor
lahf
sbb
shll
in
in
mov
cmp
cmp
or
mov
mov
push
or
ret
jmp
jne
mov
dec
cwtl
out
pop
dec
das
add
addb
stos
or
pushf
imul
scas
dec
icebp
push
ds
in
xchg
xchg
jb
fwait
lds
int
loop
push
fs
cmpsl
repnz
dec
pop
loope
aam
xchg
dec
push
fwait
jne
ficompl
push
repz
mov
sti
sbb
mov
lods
mov
push
jecxz
in
imul
or
jg
pop
adc
in
mov
icebp
inc
bound
inc
jne
add
xchg
jb
rclb
inc
push
inc
gs
int
sub
int
push
sub
faddl
ds
sub
and
repz
outsl
mov
pop
mov
xor
enter
push
mov
out
dec
aaa
push
push
loope
dec
rorb
ss
dec
adc
adc
xchg
push
mov
fwait
jbe
int3
aam
stos
mov
sbb
mov
das
pop
lcall
loopne
cltd
mov
jae
pop
inc
nop
mov
shr
repnz
andl
ret
mov
out
psubusw
faddp
testl
rclb
xor
adc
mov
gs
shlb
xchg
jge
and
jo
pop
cmpsl
cmp
jno
gs
lcall
movsl
movsb
int3
ja
es
inc
push
push
ret
out
clc
push
das
cmp
mov
loope
insb
ss
movb
mov
repnz
lcall
adc
sarl
cs
sub
outsb
mov
call
jmp
pop
or
data16
and
int
sub
or
adc
nop
fisubs
xor
nop
cmp
es
mov
je
subb
in
call
fldenv
and
out
cmpsl
dec
cltd
push
mov
cmp
cli
push
jb
add
orl
enter
cwtl
xorps
outsl
xchg
outsb
mov
das
dec
pop
out
lret
loopne
fildll
jg
in
sti
ja
adc
jnp
aas
dec
push
push
ret
pusha
cltd
test
xchg
or
mov
sub
mov
fisubs
in
aad
fsubs
and
outsl
out
divb
mov
js
xchg
adc
fwait
jge
addl
lcall
jecxz
lds
arpl
jnp
xchg
xchg
addr16
or
sbb
out
test
sbb
shll
or
stos
call
jne
in
movsl
call
push
decb
idiv
mov
or
arpl
dec
or
imul
out
push
push
addr16
pop
lgdtl
mov
aaa
jg
xchg
cld
pushf
pop
lock
xor
sub
into
jno
aam
fisubl
lods
adc
push
int
sar
pop
aad
jle
sbbl
movsl
cltd
jg
in
adc
sarb
cmp
test
mov
mov
push
or
shlb
sbb
inc
lock
pop
divb
inc
push
mov
lock
mov
add
sub
fdivrs
jae
xchg
lahf
push
add
push
mov
jg
test
std
repnz
cmp
mov
cmp
sahf
mov
xchg
cmp
adc
js
mov
xchg
fsts
ljmp
repz
push
xor
rcrb
or
mov
inc
imul
ret
decb
lods
sbb
add
xchg
daa
jge
pop
mov
mov
add
rcrb
rcll
mov
sub
lret
in
pop
cwtl
pop
and
fistpl
in
jge
lcall
dec
ret
xchg
xor
lret
fs
pop
inc
xor
mov
mov
in
sub
pushf
mov
jo
ja
fs
cltd
lcall
and
sub
sbb
pop
imul
addb
in
lcall
inc
insb
mov
dec
movsb
shll
and
stc
ficoms
enter
pop
int
nop
popa
sub
rorb
xchg
cmp
sar
pushf
mov
leave
sub
xlat
mov
and
dec
sub
mov
vphaddubq
nop
leave
xchg
xor
add
fdivs
int3
imul
aad
stc
loope
mov
pop
inc
data16
sbb
xchg
sbb
xchg
out
inc
xchg
mov
flds
push
sbb
int3
sbb
mov
inc
shlb
mov
loope
xlat
jmp
mov
out
into
notb
push
dec
mov
icebp
lea
jmp
hlt
push
das
push
fwait
scas
inc
lcall
jle
sub
idiv
mov
aam
rolb
push
mov
mov
mov
dec
shlb
lahf
jecxz
cli
pop
jle
imul
pop
mov
cmp
dec
push
mov
icebp
lods
or
sarl
mov
mov
ret
pop
mov
xor
add
adc
lea
fisubs
paddb
xchg
cmp
or
sbb
cltd
loopne
ljmp
mov
mov
hlt
xchg
sbb
inc
std
pop
outsl
dec
imul
push
shll
loop,pt
or
les
ljmp
mov
xor
jbe
or
mov
into
mov
int
mov
xor
shlb
mov
clc
divl
mov
js
adc
je
or
push
jnp
or
fistpl
lods
jecxz
movsl
test
ret
jmp
mov
loop
push
xchg
out
xor
add
int
ds
cmp
and
sbbl
repnz
insl
inc
lock
push
aaa
add
push
repnz
add
pop
std
mov
inc
fcomp
lods
xchg
mov
mov
addb
or
and
mov
push
xchg
pop
lret
or
inc
mov
jmp
stos
lock
sbb
mov
aad
and
push
push
loope
lods
repnz
sub
cmpsb
inc
inc
jp
je
mov
pop
mov
add
xchg
in
mov
xor
shr
jmp
adc
sub
jecxz
mov
insb
xor
adc
jp
popf
push
test
or
das
sub
lds
push
xchg
xchg
cmpl
add
incb
xchg
jns
pop
mov
pushf
daa
inc
mov
cmpsl
cltd
je
clc
sti
int3
es
lock
pop
dec
cmpsb
lock
inc
sbb
clc
xchg
lods
or
dec
sub
loopne
shrl
stc
cmc
icebp
sahf
cmp
jge
mov
testb
es
in
fs
movsb
xor
in
aad
jmp
inc
ss
jo
unpcklps
rcll
sbbl
js
jno
and
dec
sbb
in
inc
aam
lahf
mov
sbb
jl
pop
xor
fs
sarl
icebp
mov
int
sub
mov
stos
lods
xor
xchg
xor
sahf
and
jle
add
sub
ljmp
mov
stos
push
scas
mov
scas
mov
test
pop
mov
int3
lret
fdivs
push
std
mov
shll
mov
sub
ficompl
lcall
mov
inc
add
mov
imul
inc
or
adc
sbb
jns
pop
lahf
dec
or
mov
mov
jo
outsl
fidivrl
jne
and
cmp
mov
clc
gs
roll
jnp
push
icebp
enter
out
dec
movsb
xchg
or
leave
out
mov
jl
leave
int
out
out
imul
out
jl
or
and
adc
inc
dec
jecxz
pop
shlb
mov
pop
xchg
add
inc
xor
into
push
int3
icebp
dec
fsubs
dec
xchg
fs
aaa
sbb
out
cmp
jle
pushf
in
das
jl
push
or
stc
sub
cmp
jo
imul
ficoml
mov
cld
cwtl
xchg
cmp
rcr
lahf
cmp
test
aas
jbe
add
mov
test
dec
push
jb
clc
sub
dec
sub
and
xor
and
movsl
push
mov
clc
addr16
jge
fcoms
adc
mov
add
sub
jmp
pop
adc
xchg
mov
push
in
mov
dec
iret
les
in
repz
int3
sub
aad
push
in
adcb
stos
scas
jecxz
pop
imul
stos
and
out
aad
inc
or
hlt
pop
add
into
int3
push
sub
ja
out
sbb
cwtl
test
clc
xor
idivb
rcl
xor
pop
dec
inc
ret
jle
mov
fidivrs
or
arpl
orb
ss
repz
incb
jo
sbb
mov
and
pop
jno
xor
mov
in
and
pop
pop
jle
push
fstpt
insb
jnp
outsl
xor
pusha
cmp
shlb
dec
cmpsb
jne
rcr
or
mulb
lods
pop
cmp
xor
sbb
das
cli
push
jae
pusha
das
aad
inc
push
dec
sub
subl
ljmp
addr16
das
dec
ds
movl
loopne
repz
in
push
ljmp
mov
aam
add
and
mov
sub
in
in
add
inc
outsl
push
add
sbb
pop
cmp
sbb
pop
je
mov
int
or
cmpsb
pop
xchg
pop
es
mov
dec
add
and
test
popf
popf
mov
movsl
xchg
and
in
mov
jnp
stos
scas
jns
pusha
xor
inc
inc
mov
orl
xchg
jns
js
xchg
xor
push
xchg
mov
mov
jmp
negl
sub
sbb
shll
or
ret
stc
push
xchg
dec
jl
test
cmp
stos
ja
aam
sub
jo
add
insl
ljmp
push
les
sub
mov
push
lret
add
or
cmc
aaa
nop
xorb
or
mov
cli
std
loopne
shl
jns
gs
je
inc
ljmp
test
jmp
dec
nop
pushf
mov
loope
jmp
sub
movsl
mov
sub
xchg
sbb
xchg
mov
stos
push
or
ret
xor
mov
cwtl
arpl
dec
insb
sbb
inc
lcall
mov
in
shrb
pushf
scas
or
mov
fstpl
cmp
pusha
aas
mov
push
in
mov
pop
push
test
rol
sbb
pop
mov
mov
cli
push
daa
mov
xchg
cli
jno
and
mov
je
adc
xor
inc
loop
xlat
aad
fistpl
addr16
shlb
mov
popa
dec
out
imul
or
ss
mov
cwtl
dec
mov
dec
inc
push
and
enter
mov
enter
adc
imul
jl
push
jle
push
lods
sahf
and
mov
pop
mov
lods
cmp
testl
push
pop
pop
movsl
mov
jnp
out
sbb
mov
inc
adc
test
pusha
sarl
sbb
adc
sbb
fs
xlat
pop
push
sub
push
mov
clc
popa
or
mov
cwtl
push
movsb
outsl
adc
es
dec
loop
addb
lock
sub
sub
adc
test
sbb
push
and
sub
repz
lea
pop
xlat
cmp
pusha
xor
push
sub
fs
or
aam
gs
mov
outsb
shrb
push
dec
jmpw
jno,pt
jae
push
in
aad
pop
push
movsl
lret
addr16
out
in
pop
inc
add
inc
push
loope
fwait
pop
insl
dec
stos
xor
mov
movsl
or
out
es
scas
jb
lret
inc
in
pop
div
hlt
into
push
nop
lret
mov
dec
dec
int
xor
ret
pusha
int3
inc
mov
fucomi
ss
cs
lahf
aas
scas
icebp
dec
mov
jns
add
pop
aad
sbb
insl
cmp
push
inc
outsl
xchg
sbb
push
loop
cwtl
or
pop
dec
or
divb
sub
fldenv
adc
xchg
mov
daa
loopne
nop
mov
mov
idivl
sbb
cltd
jl
dec
jge
cmc
adc
cld
mov
or
dec
xor
test
jle
pop
loop
loope
mov
mov
xchg
add
sub
cmpsl
clc
popa
xchg
push
in
cmp
pop
fisttps
repz
retw
ds
scas
pop
xchg
bound
pop
push
sbb
cmovp
inc
icebp
jo
jle
mov
dec
mov
dec
cmp
pop
push
cltd
test
adc
xlat
dec
xchg
loop
pop
pop
ret
sbb
mov
push
xchg
mov
mov
ljmp
pop
pop
call
mov
mov
leave
je
outsb
sub
cld
xchg
jmp
adc
mov
negb
push
xor
clc
sbb
mov
inc
sbb
lahf
in
xor
stos
movsb
outsl
mov
and
jecxz
add
outsl
imul
dec
fidivl
popa
lds
adc
mov
sbb
pop
or
das
pop
pop
inc
out
adc
add
mov
cmp
jo
xchg
xchg
jae
scas
in
jbe
mov
std
stos
push
push
jbe
out
mov
ret
jae
fisttpll
jne
fldlg2
mov
mov
lock
int3
jle
pushf
fs
mov
and
les
and
dec
and
xor
rol
sub
fcoml
hlt
loopne
shl
mov
jecxz,pn
inc
push
in
push
popf
or
jne
adc
add
pushf
int3
push
jmp
jne
jle
pop
inc
or
add
mov
xchg
adc
stos
and
mov
aas
das
cmc
outsl
fwait
push
sahf
add
rcr
mov
lcall
pop
fildll
sub
and
xor
xor
xor
lods
popa
xchg
adc
adc
pop
adc
jno
cmp
jo
arpl
lahf
sub
rorl
popa
jb
cli
jno
jae
xchg
jns
insb
shl
jle
fs
pop
push
mov
push
lea
inc
loopne
sti
mov
lds
xchg
lods
jne
inc
push
notb
xchg
jecxz
movsl
xchg
adc
pop
aad
rcrb
lret
and
das
inc
sbb
pop
aam
sub
sub
add
or
xchg
outsb
pop
out
xchg
xor
pushf
add
rorb
inc
or
jmp
mov
push
or
ret
jae
test
cwtl
push
and
mov
scas
push
mov
jno
outsl
sbb
ss
push
dec
mov
dec
jp
lea
push
jns
cld
dec
mov
mov
mov
incl
jge
pop
data16
or
std
mov
dec
pop
pop
in
adc
loope
jmp
popl
xchg
mov
shrb
and
dec
mov
rolb
mov
movsb
lahf
lods
inc
pushl
or
js
push
mov
push
call
adc
repnz
out
pushf
inc
push
test
clc
mov
sub
scas
jne
das
xor
cmp
mov
dec
dec
fwait
and
ss
sbb
or
push
xchg
or
ja
or
outsl
je
xor
or
mov
jo
sbb
sbb
sub
in
mov
pop
fidivs
and
cld
and
rcrb
insb
xor
int
pop
stos
xor
out
sbb
out
jg
pop
cmp
adc
rcrb
xchg
fwait
sbb
push
scas
test
repnz
xchg
rol
pusha
cmp
les
lcall
faddl
fists
jl
sbb
daa
out
inc
adcl
imull
fldl
rorb
fwait
push
iret
or
dec
inc
movsb
test
cmp
cmp
mov
pop
jbe
jo
sub
mov
inc
daa
popa
pop
jne
push
out
xor
sub
fdivrs
enter
test
xchg
xor
inc
adc
push
adc
inc
std
nop
fptan
test
cs
mov
call
lret
out
mov
hlt
sti
mov
jg
dec
mov
lahf
es
sbb
mov
pop
ja
adc
shrb
xor
xchg
push
and
dec
sahf
mov
arpl
cmpsl
stos
into
cmpsl
addb
sbb
mov
push
xchg
mov
cmpsb
inc
mov
outsl
cmp
shr
std
mov
xor
fidivl
jbe
call
imul
ja
fcomps
cmp
in
cmp
adc
out
sbb
loop
xchg
scas
pop
sbb
xchg
mov
test
and
xchg
inc
popa
idiv
inc
pop
jl
sub
stos
and
iret
rclb
jge
pop
pop
arpl
imul
sbbb
fnstcw
ds
out
inc
jge
cmp
fisttpll
iret
push
add
sbbb
push
lds
adc
jmp
adc
add
sbb
xchg
pusha
out
pop
dec
jecxz
sbb
push
sbb
cwtl
scas
pop
call
dec
inc
mov
in
sbb
mov
outsb
jmp
lds
inc
sbb
stos
ret
sub
pushf
add
pop
outsl
and
push
daa
mov
jle
xchg
bswap
lret
mov
push
lcall
fstpt
std
scas
in
repz
insl
mov
lret
sub
daa
mov
cmc
jo
repz
jp
add
daa
cld
lods
orl
lahf
aas
mov
jne
mov
xchg
movsb
mov
pop
imul
data16
clc
inc
in
mov
dec
or
sub
es
mov
into
and
pop
cmc
mov
das
jmp
std
leave
sti
sbb
adc
push
out
sub
mov
pushf
pop
movl
movsb
push
in
sbb
scas
fisttpll
das
pop
cs
sub
ret
and
push
mov
hlt
cmp
loope
test
xchg
fs
outsb
insl
loopne
loope
sbb
mov
lea
sub
rcrb
sub
sub
jecxz
outsl
pusha
in
push
ds
mov
push
repz
and
sub
cmp
sbb
xor
mulb
sub
js
outsb
out
andl
sti
icebp
jle
cmp
cmp
pop
push
xorl
mov
in
bound
out
add
jae
jp
loopne
sub
insl
pop
fs
sti
push
out
xor
pop
std
mov
mov
inc
or
ljmp
scas
adc
lods
or
flds
cwtl
pushf
outsb
lahf
inc
sbb
mov
imul
fs
mov
pop
add
imul
ljmp
push
sbb
jp
cmp
xchg
and
inc
or
mov
loope
fldcw
roll
fs
les
cmp
daa
fnstsw
ret
pop
pop
int3
or
jecxz
loop
sub
add
es
sbb
cld
adc
hlt
dec
rep
cmp
mov
adc
in
jle
inc
xchg
stos
mov
mov
shrl
call
or
outsl
out
sub
cmp
mov
popf
mov
sub
nop
mov
xlat
cli
or
inc
sbb
dec
mov
adc
mov
sar
push
in
js
or
cmpsb
adc
mov
add
arpl
pop
out
scas
inc
lret
incb
sarb
test
sub
cld
cld
cld
pushf
mov
and
out
mov
jo
push
hlt
xchg
out
imul
ja
ret
in
das
xor
jp
mov
cmp
adc
cmpsl
ljmp
and
mov
lret
jno
push
jge
and
lods
pop
cld
ficoml
dec
jbe
push
fsubrl
mov
jg
push
mov
cmp
xchg
fimuls
add
repnz
jae
inc
mov
or
mov
lahf
add
fsubp
es
mov
and
mov
jl
and
daa
cs
out
jecxz
mov
sti
stc
adcb
cmp
xor
inc
adc
aam
cs
push
dec
ds
iret
mov
ja
lcall
xlat
in
cmp
mov
xchg
aaa
inc
notl
mov
je
fdivrs
and
push
dec
iret
cmp
pop
int
dec
cmp
dec
adc
mov
adc
fucomip
ja
sti
fs
jbe
or
or
hlt
add
xor
add
jno
xchg
cmp
je
mov
sbb
lahf
in
pop
loop
inc
mov
ret
int3
ds
pop
js
outsl
aas
add
dec
fneni(8087
testl
loop
ret
lds
push
inc
arpl
adc
cwtl
insb
in
sti
sub
sbb
shl
cld
cwtl
mov
stos
inc
fstpt
jno
xchg
pop
movsl
orl
or
pop
rol
dec
repnz
pop
testl
mov
addl
scas
mov
popf
in
cld
mov
sarb
aam
pop
in
xchg
out
and
and
movsl
lcall
data16
push
adc
in
pop
inc
push
insb
or
mov
sahf
pop
aam
dec
jmp
xchg
add
gs
and
mov
push
jl
dec
xchg
sub
cld
int3
pop
push
add
and
sub
mov
int3
push
sti
mov
icebp
test
repnz
mov
outsb
out
lock
fdivl
xor
into
test
mov
sbb
push
jo
or
or
loop
sub
fcomps
hlt
insb
cmp
dec
int3
xchg
mov
fimuls
xchg
jbe
outsl
dec
mov
jge
xchg
inc
cmp
push
pop
mov
push
lret
xor
adc
stos
lahf
xlat
xchg
repnz
sub
cmp
sub
in
or
cmp
pop
mov
push
mov
insb
gs
xchg
xchg
inc
fmuls
mov
xor
jl
inc
add
sbb
xchg
lods
leave
push
pusha
push
pop
sub
stos
sbbb
sbb
int3
xor
fdivs
mov
sub
sbb
in
adcb
add
mov
popf
pop
sbb
divl
push
nop
ret
pop
jle
fmull
frstor
mov
jmp
jg
xlat
inc
and
out
stos
loopne
dec
int
loopne
inc
mov
xchg
and
outsb
adc
pop
negl
addr16
mov
or
cmp
in
push
in
les
jne
or
popa
enter
out
cltd
movsb
jg
shl
fwait
jb
testl
test
das
add
jne
xor
mov
je
cmpsb
lea
dec
fs
test
repz
xor
insb
loop
mov
push
pop
addr16
negb
mov
add
pop
sbb
sub
iret
ror
insb
pop
cmpsb
cmp
ljmp
jmp
push
sti
pusha
icebp
and
arpl
loopne
rcl
add
es
mov
cmc
inc
pop
ss
push
fsubrs
je
fistpll
lret
mov
cld
mov
call
pop
stos
pusha
add
loop
insl
sub
xor
jbe
or
ret
mov
pop
mov
mov
jo
mov
shlb
adc
mov
adc
fsubl
mov
je
mov
int3
push
loop
lahf
mov
mov
mov
ret
mov
fwait
and
rcr
xchg
lahf
imul
xlat
xchg
jnp
xor
sbb
leave
dec
push
inc
mov
sub
dec
fisubl
dec
in
sti
push
pop
jnp
leave
mov
rorb
enter
fiadds
push
or
inc
lret
xor
les
and
nop
scas
lahf
fidivrs
or
arpl
mov
dec
mov
mov
jecxz
add
lds
xchg
inc
mov
ss
cmpsb
or
cmpsl
push
xlat
xor
xor
sbb
mov
cmp
out
cmpl
push
inc
pop
push
sub
sahf
popf
fmulp
push
jge
sub
cli
and
dec
mov
mov
pop
pop
xchg
adc
push
adc
dec
inc
flds
loope
add
sbb
mov
mov
sub
addb
push
pusha
jmp
call
inc
clc
jle
in
add
insb
mov
jecxz
fsubr
cli
lcall
mov
inc
shrl
out
stos
or
daa
inc
xor
jl
popf
mov
or
shll
sub
push
mov
nop
xor
mov
or
cltd
jle
out
xor
mov
in
xchg
xlat
push
pop
fstpt
sbbb
outsl
sub
mov
pop
cmp
pop
mov
fsubl
ss
jmp
cmp
cmp
jns
jo
and
stos
mov
fdivl
dec
ss
push
mov
movsl
jge
mov
xor
or
push
mov
repnz
je
dec
push
stos
es
mov
loope
ffree
jle
pushf
enter
fwait
enter
imul
xor
shrb
int3
imul
loopne
fnsave
das
stc
cs
fs
xor
mov
mov
mov
mov
call
push
xor
jge
outsl
cmp
ljmp
cltd
xor
mov
mov
cs
pavgw
jae
leave
mov
sahf
push
jns
pushl
xor
lods
ja
imulb
push
cld
xchg
mov
lods
pop
and
out
lcall
jp
pop
sbb
push
iret
pop
pop
pop
push
aam
mov
aad
out
cmp
arpl
cld
adc
add
xchg
out
sbb
scas
adc
pop
int
adc
mov
adc
fs
int
inc
scas
xor
inc
adc
pop
ja
popa
pop
imul
adcb
push
in
in
mov
or
lods
mov
mov
pop
int3
pop
mov
mov
ss
xor
je
mov
mov
mov
sahf
mov
pop
jle
adc
push
call
lods
xchg
rclb
dec
xor
xchg
aaa
dec
push
jo
pusha
jp
outsb
xor
inc
sbb
call
lcall
cmp
mov
lahf
sti
lods
rcrb
dec
jns
jmp
add
push
add
push
inc
add
push
in
and
data16
out
idivb
clc
cmovne
mov
js
xchg
sub
loope
xor
fadds
sbb
sub
test
inc
sub
cmovns
xchg
dec
mov
in
iret
pop
imul
adc
jmp
es
adc
out
outsb
xor
icebp
and
xchg
lahf
out
mov
lret
xor
int
and
fadd
hlt
or
pop
fdivrs
cmp
mov
andl
daa
aaa
pop
jnp
movb
aam
cmpb
das
test
jecxz
jg
push
push
js
dec
jle
pop
test
cmp
sar
mov
xchg
cmp
mov
push
xlat
lret
cmp
inc
add
aad
cmp
pop
dec
cmp
ret
testb
lods
push
push
out
imul
push
fcom
pop
push
cmp
jo
pop
mov
mov
jge
scas
aaa
xorl
xor
loop
scas
push
xchg
mov
inc
push
pop
xor
xchg
xor
fsubr
inc
jae
dec
cwtl
loope
mov
jge
shlb
xchg
ja
push
inc
xchg
shll
fdivs
loop
test
mov
add
jnp
jae
mov
out
repnz
add
scas
mov
push
push
int
mov
dec
cs
push
xor
gs
jecxz
lret
mov
into
scas
and
mov
xchg
rcll
xchg
cmp
shrl
std
iret
xchg
out
push
dec
fcmovb
jns
sub
subb
sub
ja
aad
lcall
jmp
loopne
jp
sbb
xor
fisttps
mulb
push
pop
icebp
scas
data16
pop
jmp
mov
mov
fsubr
loop
jne
in
jecxz
jno
cmp
xchg
sbb
inc
xchg
jbe
test
mov
addr16
bound
push
cmpb
xor
mov
mov
loope
scas
fnstenv
in
dec
mov
std
lret
mov
and
mov
fstpl
sbb
cmp
outsb
addb
adc
mov
or
pop
loopne
inc
jg
push
cs
cli
lds
cld
aad
mov
inc
adc
int
nop
jecxz
add
push
inc
imulb
data16
movsb
jns
lcall
fidivl
fiaddl
mov
test
cmp
testl
dec
aam
mov
xchg
and
mov
movl
int
jnp
inc
enter
int3
sub
imul
fwait
loope
int
rcrb
comiss
bound
mov
sbb
call
inc
ret
hlt
xchg
pusha
mov
imul
pop
sub
sti
sub
scas
pop
cmpsl
imull
jle
adc
jnp
mov
in
shll
imul
mov
sub
mov
sbb
inc
rcrb
cld
lret
hlt
inc
ja
cltd
movl
pop
sub
push
push
loope
lahf
cmp
jb
push
hlt
jecxz
mov
ja
out
inc
shll
dec
out
cmpb
fwait
cltd
test
or
jb
xor
jbe
add
dec
loopne
adc
emms
jo,pn
mov
mov
xor
fidivs
jmp
cmp
mov
inc
sub
jne
push
and
xchg
mov
xlat
dec
sub
adc
sbb
bound
cmp
lea
sbb
int
popa
fs
sbb
adc
dec
sbb
sub
imul
idivb
shrb
addr16
adc
mov
mov
push
mov
adc
imul
lcall
lods
pop
xor
fidivs
ljmp
in
mov
pop
shl
adc
push
cs
inc
mov
jecxz
adc
lock
cmpb
stos
push
push
popf
ss
es
negb
ja
sbb
fsubrs
imulb
mov
lahf
out
cmp
xchg
adc
and
mov
xor
cmp
sub
inc
js
out
jl
cwtl
mov
negl
insb
andb
popf
daa
test
clc
das
cmp
repnz
xchg
loopne
inc
imul
inc
out
and
mov
mov
pop
lods
aaa
mov
xor
push
mov
insl
lret
test
arpl
inc
mov
int
cwtl
cmp
aaa
lcall
jmp
aas
mov
adc
push
add
jno
divb
js
mov
les
adc
incl
dec
add
push
pop
xor
adc
ljmp
idivb
test
int
hlt
iret
leave
rcrl
aaa
and
jnp
mov
mov
js
adc
adc
push
mov
jbe
sub
xchg
sub
filds
mov
mov
mov
lcall
cltd
mov
movsl
test
mov
mov
xor
outsl
repz
out
fsqrt
pop
mov
test
ret
or
cmpsb
push
cltd
pop
test
clc
jp
psubq
lea
loope
in
sbb
imul
ljmp
and
mov
inc
arpl
xor
add
xchg
rcrb
mov
out
sbb
gs
icebp
dec
cmp
pop
movsl
mov
mov
aaa
insb
xor
lret
lahf
jns
and
dec
mov
sti
in
mov
adc
xor
fwait
stos
scas
out
pop
lret
mov
dec
or
mov
xor
cmp
out
sub
xor
mov
int3
xchg
fcoml
jbe
int3
or
sbb
cmp
insb
dec
aas
addl
ds
push
call
xchg
lods
jmp
rorb
mov
paddb
pop
xor
test
stos
mov
sub
jp
xchg
xchg
jbe
out
imulb
inc
subl
sub
loopne
jl
incb
clc
fadds
mov
pop
jnp
ret
mov
sub
inc
incl
jo
mov
inc
adc
in
pop
mov
xchg
repnz
lcall
fcoml
scas
pop
test
movsb
repz
inc
call
cld
mov
nop
enter
fcomps
mov
push
out
xchg
test
fldl
xor
xchg
or
cmc
inc
cltd
add
mov
xor
rclb
push
call
jmp
int3
fidivrl
fsubr
lcall
and
clc
xchg
xor
aas
enter
dec
int3
leave
push
xor
jmp
push
jp
sbb
arpl
test
lea
leave
and
cmpsb
add
dec
fisttpll
sahf
ds
jnp
sbb
mov
jnp
subb
xor
cmp
out
xlat
mov
dec
pop
mov
sbb
mov
loopne
outsb
rorl
or
imul
jmp
js
pop
xchg
add
mov
jge
loope
inc
fwait
pop
jno
scas
das
lahf
icebp
sbb
lret
push
not
mov
or
fsubrs
inc
ds
jge
call
daa
add
inc
les
testl
pop
adc
push
cmp
mov
repz
xchg
push
or
repnz
jo
push
mull
pop
push
gs
push
in
cmp
cmp
in
add
insl
mov
jne
out
and
jbe
jne
adc
xchg
xchg
test
addl
xlat
adc
dec
cltd
cmp
iret
dec
fimuls
sub
sbb
jecxz
repz
dec
lret
loopne
stos
or
lea
aas
mov
sub
roll
sahf
lea
and
je
das
and
push
sub
scas
icebp
mov
mov
pushf
adc
mov
add
ds
scas
ja
sbb
lahf
out
imul
bound
adcb
cmp
adc
xchg
push
add
dec
cmp
xor
push
or
test
pop
cwtl
xor
mov
fucomi
jnp
addl
cmp
imulb
ret
pop
cmp
rclb
jp
jge
cmp
jnp
cmp
xchg
fadds
mov
inc
pop
and
outsb
sarb
into
js
aas
dec
dec
mov
testl
mov
sub
lahf
gs
lods
jecxz
xor
std
stc
sub
stos
cmp
jno
out
and
loope
lods
add
mov
pop
fmuls
rcrl
jge
test
cmp
sub
mov
jbe
icebp
xor
scas
mov
cli
mov
adc
test
divl
sbb
jbe
pop
pusha
adc
lods
test
ret
add
rorb
lods
scas
orb
or
aas
inc
dec
sbb
in
xchg
xchg
adc
call
shrb
sub
or
sbb
sti
mov
sub
xchg
push
repz
pop
leave
test
or
dec
shrl
add
js
aaa
and
inc
mov
jb
mov
mov
jns
inc
mov
adc
jecxz
negl
int
mov
push
xor
jge
push
mov
aam
jnp
mov
cmp
out
fdivrl
mov
enter
lret
pop
add
outsb
es
icebp
leave
mov
lds
pop
mov
stos
fwait
sbb
and
cmc
aam
adc
xchg
ljmp
subb
cld
push
jae
push
ja
adc
nop
data16
je
xchg
adc
inc
mov
xchg
imul
push
cmpsl
and
imul
test
xor
and
rcrl
mov
or
aad
mov
ljmp
pop
sbb
jp
aam
pop
xchg
or
jle
adc
mov
inc
ret
in
xor
add
xchg
jg
sub
jle
iret
nop
adc
xchg
inc
mov
rorl
adc
insb
in
xchg
mov
cmpsb
test
pop
rorb
sahf
mov
movsl
and
mov
js
push
fiadds
mov
fmull
inc
lcall
dec
leave
inc
sub
es
jb
lods
push
fsub
mov
movsb
push
cmp
mov
fstps
subb
leave
push
jbe
mov
and
cmp
loopne
cmp
pop
push
pop
mov
xchg
jnp
pop
popa
cmpsl
mov
fldenv
cltd
jnp
das
shlb
xlat
test
mov
mov
jmp
pop
jnp
add
pop
movsb
add
sbb
cmp
or
sbb
inc
rolb
sub
fnsave
popf
adc
imul
ss
call
adc
xor
dec
and
push
inc
imul
imul
inc
mov
stos
adc
or
adc
mov
out
sbb
lret
xor
pop
lock
mov
xchg
xor
neg
inc
xor
movsl
aas
xchg
aas
add
xor
cmp
mov
jo
ss
jne
or
or
mov
cli
jae
rclb
outsl
cmp
pop
push
call
mov
sub
sub
jae
shrb
mov
xchg
adc
ljmp
xchg
in
xor
aaa
lock
loopne
cli
pop
shrb
cmp
jb
and
pop
dec
fnstenv
movsl
or
arpl
xchg
adc
mov
sub
jo
call
push
in
dec
in
mov
xor
mov
iret
xor
jne
call
sbb
xchg
jmp
shl
mov
jno
aad
jo
inc
jne
xchg
dec
into
mov
imul
ret
dec
xlat
out
cmp
js
sti
xchg
mov
loopne
das
adc
popa
add
loopne
add
pop
jae
bound
out
jle
cmp
adc
xchg
push
je
inc
fnstenv
loop
sti
mov
push
test
inc
test
jmp
fs
mov
out
orl
int3
or
test
lcall
out
aaa
mov
jbe
mov
in
in
mov
inc
leave
fs
lods
adc
inc
xchg
jg
popf
sbb
dec
jno
cmp
cmpsl
push
fimuls
lahf
es
ss
fldenv
add
xor
scas
jae
sbb
clc
add
rcl
push
les
rcl
fildl
or
outsl
mov
fidivrl
cmp
lock
vcmpps
in
xchg
adcl
aaa
roll
xchg
pushf
mov
sbb
push
mov
pushf
std
cmp
adc
jmp
xchg
popl
adc
xchg
rorb
daa
js
shlb
adc
rcrb
cmp
sub
jae
sbb
popa
fcompl
hlt
sub
out
xchg
pop
incb
cltd
lods
loop
add
lret
push
lret
sbb
push
decl
icebp
pop
xchg
testb
jnp
call
lret
repnz
inc
es
inc
addr16
mov
pusha
mov
push
jle
cmp
shll
xor
fs
add
and
fstpl
test
mov
mov
and
push
pushf
xor
lahf
dec
sbb
push
lods
cli
mov
dec
stc
cwtl
sub
sbb
adc
lods
mov
jge
das
outsb
add
adc
or
fisubs
int3
cmpsl
push
and
mov
add
cmp
sub
scas
js
pop
sub
out
js
xlat
repz
test
add
xchg
cmpsl
jl
sub
lds
jb
test
mov
out
push
cld
and
cmpsb
punpckldq
mov
popa
pop
xchg
xchg
jno
dec
inc
loopne
fimuls
dec
xchg
or
xlat
jo
cld
inc
mov
lcall
xchg
lock
fimuls
sub
ljmp
cmp
idivl
loope
in
or
xor
xchg
mov
iret
loope
icebp
das
jo
pop
push
decl
pushf
lea
inc
jmp
arpl
push
loopne
sbb
ret
out
sub
aaa
mov
inc
xor
mov
pop
xor
nop
or
or
scas
push
std
sbb
sub
dec
pop
inc
inc
orl
insb
call
pop
adcb
inc
adc
rcrb
and
mov
cmp
xchg
push
xchg
cmp
std
xchg
jbe
sub
movsb
add
sti
adc
cmp
int
cmp
xor
std
les
jae
call
sbb
movsl
cwtl
and
pop
pushf
lret
in
mov
test
dec
add
or
int
sub
lods
xorb
xor
mov
fildll
and
jns
dec
loopne
jge
popa
jle
icebp
std
cmp
pop
sbb
sbb
fisttpll
dec
xor
push
and
add
xor
int3
insb
push
enter
iret
in
dec
jp
ret
mov
pop
add
mov
aad
mov
xlat
adc
xor
mov
mov
sub
or
loopne
cmp
pop
cld
sub
dec
loope
iret
inc
ja
jmp
sahf
test
push
or
xchg
pop
movsb
adc
daa
push
mov
mov
sbb
or
sub
jmp
fsubrl
push
pop
sbb
in
enter
pop
loope
les
xchg
inc
loopne
xchg
inc
cmp
out
stos
nop
pop
subb
xor
xchg
ret
mov
and
xchg
test
subb
sub
pop
and
push
xor
scas
adc
dec
mov
xlat
aad
dec
out
call
jp
pop
test
sbbl
sub
das
mov
jle
cli
push
mov
pop
mov
lret
jne
and
popf
inc
mov
adc
ljmp
pop
mov
jnp
adc
pop
mov
negl
in
xor
jno
rclb
jmp
fmull
popa
repz
repz
xchg
jmp
push
imul
push
aam
adc
pop
inc
or
stc
jo
sbb
in
xchg
test
xchg
or
or
jge
iret
daa
out
adcb
loop
pop
cmp
pop
sbb
scas
sbb
fistps
testb
or
or
ret
push
leave
push
bound
push
push
pushf
and
xlat
hlt
pop
mov
mov
jp
int3
cmp
ret
dec
fwait
mov
and
sti
ljmp
mov
mov
mov
mov
or
and
cwtl
out
rcll
stos
mov
loop
cwtl
rolb
insb
in
adc
xchg
out
adc
add
sbb
cmp
jle
adc
lcall
rorb
imul
sbb
insl
leave
lods
imul
push
cli
sub
inc
aaa
mov
sbb
aad
cmp
ret
xchg
jb
or
loope
ret
xlat
inc
arpl
xor
out
testb
cmp
fsubrp
push
mov
adc
push
fs
lods
adc
ja
and
test
stc
jbe
push
aam
in
jo
xchg
jmp
xchg
sti
xor
mov
dec
xchg
lret
sub
sbb
pop
push
fdivr
mov
insl
bound
xchg
call
lret
mov
lcall
cs
pusha
jne
aaa
shl
loop
jl
pop
mov
add
jge
mov
push
xchg
out
jmp
js
movsb
sbb
fisubs
popf
in
lods
mov
in
mov
mov
sub
out
jb
add
xor
sub
add
ljmp
and
mov
bswap
movsb
mov
inc
jbe
inc
mov
sub
dec
gs
mov
mov
xchg
mov
pop
ja
xchg
fidivs
jecxz
outsl
mulb
ja
mov
pop
icebp
test
jae
je
jecxz
or
data16
lods
das
or
lea
or
xchg
jle
movsb
jl
cmp
mov
aas
xchg
imull
out
ss
sub
jl
xlat
std
push
shll
idivb
cld
inc
ja
mov
stos
dec
out
sub
push
cltd
scas
xor
into
jb
and
iret
sbb
or
aas
xchg
xchg
mov
ret
cwtl
lahf
xorl
lods
scas
inc
jg
loop
mov
mov
add
and
lods
loopne
push
mov
orb
addl
adc
inc
xchg
loopne
xchg
jl
mov
xor
popf
mov
lret
sti
daa
aam
sbb
pop
outsb
aad
pop
out
or
cmp
or
sarb
pop
ljmp
xchg
pop
push
lahf
imul
cmp
pop
aas
inc
push
mov
insl
aaa
lret
pop
arpl
jb
dec
pop
dec
sub
pop
fwait
mov
mov
or
sbb
movsb
test
inc
movsl
cmp
add
mov
adc
jmp
cmpsb
fdivrs
roll
xlat
int3
enter
shlb
add
lcall
hlt
xchg
push
push
es
stos
mov
mov
pushf
jae
iret
rcrl
aas
xchg
je
fcomps
ljmp
inc
xor
pushf
mov
inc
inc
cmpsb
adc
lret
mov
daa
pusha
fwait
mov
pop
sti
push
sub
jmp
push
mov
enter
scas
or
push
in
insb
and
adc
sub
dec
inc
sub
movb
mov
mov
add
and
sub
mov
xor
das
imul
das
loop
ret
mov
lea
push
outsl
mov
push
call
ja
negb
add
mov
bound
pushf
xlat
xlat
test
nop
pushf
shl
fidivrl
aas
push
aas
out
or
cmp
or
mov
push
push
call
adc
nop
pop
push
leave
dec
dec
out
or
cmpsb
je
inc
in
ret
jmp
andl
out
pop
jns
dec
leave
scas
add
push
jbe
pop
push
jg
lock
xorl
xor
sbb
das
jne
subl
push
in
mov
sub
cmp
stos
pop
addr16
push
mov
push
mov
jg
push
hlt
jne
cwtl
xchg
inc
test
pop
cmp
popl
mov
jge
and
sbb
jbe
movsb
add
cmpsl
jb
adc
lock
mov
push
in
dec
sub
shr
jecxz
lods
pop
nop
dec
xor
inc
jbe
dec
jg
add
loop
or
dec
or
stos
test
sub
push
es
ljmp
pop
mov
sbb
rorb
adc
sti
out
push
xor
jmp
arpl
xchg
pusha
add
dec
inc
jnp
and
jo
mov
cmpsl
xchg
call
fnstenv
and
dec
fs
jl
bound
roll
iret
out
mov
cmc
inc
sub
inc
and
mov
xor
rorl
mov
subps
stc
loope
and
int
add
xor
push
mov
in
stos
popf
inc
test
movb
sbb
bound
mov
movsl
pop
lret
xchg
add
stos
out
or
fbld
push
or
push
mov
jmp
xchg
cmpsb
ficompl
in
movsl
daa
push
hlt
pop
lret
aaa
cmp
frndint
bound
xor
mov
gs
outsl
popa
or
cld
dec
insb
iret
push
popa
mov
idiv
test
mov
std
lea
jb
sbb
or
pop
cli
ficomps
jno
pavgb
shlb
inc
js
icebp
fsubs
inc
stos
in
sbb
pop
cmpsb
insl
icebp
add
setne
xor
xor
pop
imul
push
mov
lds
rcll
add
or
pop
stos
repnz
jl
xchg
sbb
and
pop
and
ret
ds
jno
add
aas
scas
lock
bound
mov
sbbb
in
or
div
cwtl
cs
cli
lret
push
dec
lea
and
push
xchg
sub
aaa
popf
cmp
sti
pop
sbb
rorb
and
pop
adc
or
mov
arpl
fidivs
sub
rorl
in
mov
test
mov
push
jne
ret
aaa
push
repnz
pop
inc
arpl
pop
outsb
fwait
pop
add
ja
int
cmp
arpl
mov
ss
cmp
bound
fwait
movsb
jl
cmpsl
xchg
cli
inc
sbb
iret
xor
mov
in
sahf
and
push
adc
mov
inc
loope
je
xor
iret
add
dec
mov
loop
mov
push
mov
xor
orb
mov
fcmovb
es
repnz
xor
mov
lods
scas
sub
xor
loop
cmp
notl
jmp
push
and
mov
xchg
mov
ffreep
scas
sbb
jmp
xchg
ja
xor
sub
fisttps
call
mov
cli
lods
daa
into
mov
xor
jp
cmpsl
cmp
rep
ljmp
cmp
test
mov
cwtl
pop
faddp
dec
das
in
jbe
inc
test
and
and
lcall
xor
add
sub
jbe
jns
ja
push
sbb
push
and
xchg
xlat
sub
sti
lds
mov
js
jb
not
cmp
movsl
push
mov
into
cmc
cmp
fdiv
mov
mov
leave
mov
adc
jne
sbb
or
insb
jg
int
xchg
icebp
fcompl
ss
movsb
mov
leave
rcll
xlat
mov
fs
xor
lret
aam
xchg
or
adc
xor
add
imul
xchg
aad
jns
sub
aad
sti
pop
cmp
arpl
into
mov
dec
xor
repnz
xor
lock
mov
fldenv
cmc
test
sbb
adc
cmp
sub
outsl
cs
out
ja
jmp
adc
sbb
enter
mov
push
out
jl
mov
and
pop
cmp
out
mov
xor
movsb
mov
jg
ljmp
mov
push
and
loopne
sbb
outsl
mov
pusha
or
out
mov
sbb
xchg
lds
lds
daa
adc
cwtl
test
adc
out
subb
test
push
callw
push
and
sbb
add
adc
ret
ficomps
vhsubpd
out
negb
xchg
dec
das
inc
inc
scas
loop
adc
fcomps
data16
test
lock
popa
out
int
xchg
add
push
adc
aam
xor
adc
addr16
shll
pop
sub
cmp
or
dec
adc
movsb
movsb
add
or
sub
mov
int3
fisubrl
insl
jg
sub
lods
aaa
ljmp
adc
mov
mov
push
roll
xchg
fcomip
push
cwtl
mov
pop
sub
mov
pop
mov
scas
mov
adc
pop
ret
hlt
jae
out
xor
test
hlt
cltd
es
mov
leave
movsb
add
lds
cmp
mov
mov
push
sar
jl
jle
clc
jae
decl
loope
pop
scas
mov
insb
ret
scas
lods
out
or
push
xor
rorl
pusha
imul
jbe
je
jp
add
lea
lock
add
jb
scas
xchg
lcall
fimull
sub
push
mov
mov
mov
lds
repz
adc
stc
ret
or
je
pop
test
clc
pusha
push
sub
les
add
mov
iret
icebp
les
xchg
test
sub
jnp
call
xchg
xor
mov
push
mov
add
pop
add
out
dec
loope
lahf
or
arpl
mov
jne
jg
insl
push
jl
cli
lods
mov
xchg
push
dec
pushf
push
and
and
nop
aad
fistpll
pop
inc
sub
je
add
aam
push
push
ja,pt
dec
sub
clc
pop
ret
lret
arpl
xchg
inc
dec
in
data16
insb
mov
leave
cmpsl
mov
out
sub
xchg
xor
lahf
cmp
loope
and
arpl
mov
cmp
or
dec
sub
std
bound
lds
aas
js
test
and
mov
mov
data16
xchg
pop
jns
sbb
and
mov
sti
jmp
mov
pop
push
mov
sub
push
shrl
fcmovnb
movsb
rcl
jnp
cmp
sub
mov
pop
insl
pop
cmc
stos
cli
das
daa
mov
call
add
outsl
imul
sbb
dec
pop
and
xor
std
not
xchg
sub
push
out
xchg
leave
xor
push
loope
sub
inc
fmuls
movsb
dec
mull
ret
jne
add
fnstenv
ss
cs
cmpl
xchg
daa
adc
sahf
or
movsl
pop
popf
jmp
pop
das
jecxz
in
aas
inc
mov
test
cmp
mov
pop
jnp
mov
adc
out
sbb
dec
mov
lret
aas
push
pop
movsl
xor
adc
je
mov
jge
popf
xlat
or
jmp
add
rcl
les
xorl
dec
push
jmp
sti
mov
mov
outsb
xchg
scas
xchg
sbb
bound
inc
test
mov
dec
jo
jne
imulb
daa
mov
loop
push
mov
dec
and
fsts
int3
and
sbb
rcrb
jg
mov
jnp
ss
gs
lcall
sbb
aad
adc
lret
add
addb
addb
movsl
inc
push
sbb
sub
movsl
ret
das
xor
inc
sub
icebp
and
and
sbb
pop
fidivrl
fidivrs
lea
ja
xchg
sbb
test
in
rolb
mov
push
and
loop
push
mov
sub
movsl
stc
pop
or
cltd
sub
xchg
daa
dec
pushf
add
mov
std
out
xor
pop
or
mov
cmp
pop
daa
ss
inc
inc
adc
push
js
jl
jae
je
mov
cmpsl
mov
loop
pop
idivl
and
in
sbbb
dec
rorl
stc
cmpsb
cmp
cltd
xor
aas
int3
add
mov
scas
mov
mov
in
clc
jae
xchg
xchg
addr16
shl
cld
mov
inc
sub
xor
adc
lret
add
xchg
adc
popa
mov
fidivrl
inc
jl
adc
inc
adc
push
sub
inc
xchg
dec
aas
fsubrl
mov
sub
mov
repnz
mov
push
cmp
in
jle
jo
into
in
mov
pop
jae
aaa
lods
movsl
adc
jb
push
call
mov
mov
xchg
mov
pop
push
push
imul
mov
xor
jl
fildll
jg
inc
mov
push
test
imul
cmp
jbe
and
call
fisubs
mov
lcall
test
jle
imul
cmp
popa
shl
xchg
jno
sbb
jecxz
pushf
rcll
add
xor
xor
es
pusha
out
out
nop
popa
out
jge
int3
loopne
mov
inc
push
stos
mov
in
sub
leave
aam
mov
jle
in
decl
inc
pop
pusha
inc
repnz
mov
sti
cmpsl
sub
xchg
lahf
mov
sti
insb
mul
xor
fiadds
ficompl
mov
and
arpl
and
ja
ds
add
mov
rclb
cmp
xchg
jecxz
es
xchg
fdivrs
mov
dec
cmpsb
fistpll
mov
pop
insl
mov
pop
pop
daa
rcll
sub
loop
mov
adc
ljmp
inc
orl
inc
add
or
les
xchg
pusha
xchg
pushf
mov
and
in
sbb
jae
cmp
lds
jp
dec
pop
fcmovnbe
cmpsl
adc
fldlg2
out
sub
popf
enter
jo
pushf
mov
icebp
lods
and
ljmp
mov
outsl
popf
cli
loopne
loopne
lret
push
jl
sbb
and
insl
ljmp
mov
outsl
xchg
xchg
dec
inc
shlb
rcrl
aas
test
movsb
or
mov
push
mov
ds
pop
mov
stos
sti
mov
or
inc
lock
shrb
adc
dec
sbb
xchg
enter
xchg
or
or
sbb
ror
int
or
jg
mov
mov
call
push
stos
ds
nop
rcl
es
cmp
movsb
fwait
pop
insl
fstpt
mov
sbb
push
movsb
adc
je
lods
out
mov
xor
ljmp
insb
jns
cmc
ret
cmpsl
subl
and
push
in
ss
dec
rol
or
fucomp
repnz
les
iret
stos
xchg
mov
lds
int
popf
fs
push
add
out
push
cwtl
clc
xor
adc
lods
lahf
or
xchg
mov
aas
jb
mov
das
mov
fbstp
sub
jg
cmp
insl
add
sbb
add
inc
jno
and
aas
lret
mov
add
repnz
xchg
mov
xchg
cmpsb
sbb
cmc
inc
add
mov
xlat
adc
gs
add
jo
imul
xor
unpcklps
pop
lret
mov
add
xor
push
ret
negb
fmull
xlat
ss
jo
sub
inc
push
test
sbb
addb
cmp
sub
dec
push
in
std
fwait
clc
or
in
ficompl
pop
mov
das
scas
test
inc
jmp
popa
push
and
jns
je
inc
call
lret
lods
mov
mov
sub
js
or
aad
pop
pop
enter
xlat
jb
mov
push
dec
jecxz
ds
call
inc
lods
dec
push
add
cmp
and
je
add
xchg
sahf
jno
div
mov
sbb
xchg
adc
movsl
sbb
sbb
xor
or
jo
push
adc
popf
pop
dec
push
or
insl
loope
test
mov
stos
mov
inc
mov
in
pop
movsl
cmp
je
xor
mov
in
cmpsl
out
or
into
loopne
inc
scas
or
cs
push
xlat
hlt
cwtl
adc
mov
cltd
push
clc
fwait
imul
sub
les
icebp
icebp
adc
adc
adc
sbb
sub
daa
sbb
jne
push
sbb
loop
mov
dec
inc
jl
scas
push
lret
pop
add
adc
arpl
cltd
and
repz
aaa
ljmp
lea
mov
sbb
gs
xchg
and
mov
outsb
xor
xor
sub
xchg
into
jae
sbbl
out
pop
sbb
jecxz
mov
cmp
flds
dec
jb
cltd
iret
and
and
fdivs
or
nop
imul
add
scas
or
push
xchg
loopne
pusha
int3
enter
cmp
fldt
stos
and
cwtl
sub
pop
jecxz
scas
add
rcrl
dec
jmp
add
loopne
lods
icebp
lods
cld
andl
into
xchg
inc
aas
mov
cmp
in
cwtl
pop
rolb
les
daa
sbb
inc
pushf
icebp
adc
mov
xor
push
mov
mov
add
push
scas
xchg
out
or
and
dec
xor
bound
movhps
lods
push
popa
jae
shrl
jp
andb
shlb
pop
or
and
es
xchg
stos
arpl
inc
jae
push
or
push
out
mov
jns
loopne
jo
enter
mov
mov
std
pop
lds
cltd
sbb
cmp
cmp
mov
scas
sbb
mov
aaa
push
adc
int3
dec
lods
pop
sub
inc
cmp
mov
enter
dec
aam
lret
sub
mov
sbb
push
inc
stos
pop
cs
and
sbb
adc
push
and
cld
jae
jmp
outsb
sbb
or
loopne
push
mov
pop
hlt
push
ja
stc
imull
cmp
or
test
mull
jns
fsubl
out
dec
mov
and
jmp
aad
or
int3
fstps
jne
call
pop
aas
dec
in
fsubs
xor
jne
jp
pop
cli
mov
test
lahf
push
sub
mov
enter
xlat
ja
movsb
inc
iret
lea
loop
inc
cwtl
jle
arpl
fiaddl
std
add
pop
lcall
push
js
filds
movsl
pop
jmp
dec
xor
mov
lcall
xchg
mov
cmp
jnp
sbb
push
daa
mov
lcall
jns
dec
dec
jp
or
addl
mov
fdivr
out
call
shll
xor
add
sub
jnp
mov
sahf
add
pop
pop
jecxz
ss
mov
loop
sti
aaa
lret
mov
adc
dec
or
xchg
das
inc
ficomps
and
loopne
test
push
push
push
mov
js
hlt
or
fsubs
pop
test
popa
je
lea
ljmp
psubw
hlt
imul
div
adc
daa
rcll
sbb
dec
pop
in
jne
push
push
pop
pop
int3
mov
push
movsb
push
idivl
in
inc
add
mov
ljmp
or
or
adc
push
subb
cmp
popa
ficoml
inc
stos
sbb
and
or
test
popf
sub
icebp
mov
into
mov
pop
cmp
and
js
add
sbb
dec
lea
xchg
sub
les
sarb
mov
inc
push
stc
inc
negb
or
inc
jbe
stc
mov
dec
mov
and
add
in
adc
fwait
pop
popa
adc
loopne
inc
aaa
jg
testl
mov
xchg
fs
data16
add
cmp
pusha
adc
mov
lods
xor
jns
mov
bound
stos
cmp
gs
sbb
pushf
cmp
outsl
stos
or
pop
adc
andps
testb
jnp
sar
xor
adc
fstps
pop
push
add
xor
push
mov
cwtl
out
lahf
push
dec
rcl
lods
insl
out
std
in
xchg
jl
mov
xor
jns
test
nop
bound
mov
xor
mov
ja
mov
icebp
fimuls
add
mov
sbb
je
and
jecxz
es
or
pusha
xor
lds
stc
xchg
lahf
and
pop
xor
out
mov
adcb
sub
add
fs
loop
test
mov
pop
sbb
imul
add
cltd
mov
movsl
lahf
pop
cwtl
or
testl
cs
adcl
aaa
dec
paddd
imul
xchg
ret
aaa
shll
into
aam
sbb
xchg
scas
mov
and
cmp
lcall
inc
mov
cmp
push
jo
push
sti
das
ss
shlb
or
pop
cmp
sub
cli
bound
mov
fidivs
mov
hlt
out
jmp
sub
inc
dec
and
pop
mov
pop
dec
jno
mov
dec
push
jbe
andb
popl
and
sub
and
bound
js
sahf
aad
pop
outsb
pop
nop
leave
jae
testl
and
xor
movsb
cli
repz
push
mov
push
lcall
dec
adc
shl
pop
jbe
leave
sbb
sub
lock
movsl
pop
add
add
or
mov
repnz
xlat
lret
xor
cmp
sbb
addr16
push
dec
push
push
mov
loope
and
mov
addr16
data16
scas
jbe
dec
mov
sub
loop
dec
loopne
out
les
lea
es
repz
leave
nop
int
mov
sbb
fnstenv
cmp
xchg
daa
xchg
mov
gs
lock
pop
ret
push
cmp
aas
ss
cmpsb
and
or
sti
lods
out
mov
fstps
jne
push
cld
jmp
negb
lret
das
mov
add
xlat
mov
sbb
outsb
dec
loope
mov
mov
and
mov
xchg
mov
xchg
inc
or
pop
arpl
shll
ja
cmp
idivb
flds
xchg
sub
loop
jnp
fwait
enter
mov
push
fwait
push
xchg
cmp
adc
push
rorl
ljmp
lods
push
sub
insb
cld
mov
clc
sbb
das
pop
rorb
push
pop
xchg
dec
xchg
push
xor
daa
mov
adc
pop
xchg
repz
bound
in
mov
push
pop
ja
iret
fistl
stos
adc
adc
push
cs
pop
loope
or
lret
cmp
dec
xor
sub
xchg
cwtl
scas
and
push
ret
xchg
fiadds
mov
addl
mov
fs
mov
mov
cmp
and
popa
shrl
sub
xor
xor
sbb
loope
add
inc
dec
jns
icebp
inc
popf
push
pop
int
mov
xlat
push
roll
out
fsub
ret
dec
pop
add
test
push
sub
xchg
xchg
je
repz
mov
shll
sbb
je
pop
dec
out
scas
dec
pop
dec
push
mov
inc
testb
pushf
das
mov
mov
xor
cwtl
js
iret
loope
adc
loopne
push
mov
sbb
lods
mov
dec
fdivr
jp
push
dec
pop
sahf
fidivl
aam
cmp
std
xor
rorb
sub
xchg
xchg
xchg
sub
or
dec
mov
dec
f2xm1
js
mov
sbb
push
sbb
stos
dec
jp
sub
pop
mov
pop
ss
clc
lea
mov
or
test
cli
cmp
fimuls
pop
pop
jne
cs
les
inc
mov
push
xchg
cmp
rcrb
ljmp
and
pop
cmp
fists
pop
pop
push
push
div
inc
shr
push
in
adc
hlt
push
add
js
xchg
scas
mov
jns
jbe
fcompl
shll
push
ret
push
mov
faddl
jbe
pushf
xor
fisttpll
mov
int
shlb
dec
ljmp
push
andb
jecxz
cmp
add
movsl
sub
push
push
add
sbb
add
dec
mov
pop
scas
ss
and
cmc
shl
dec
je
test
and
cld
xlat
xchg
push
mov
xchg
sub
adc
mov
add
xchg
je
push
sbb
add
cwtl
and
je
or
mov
cmp
add
mov
hlt
mov
test
hlt
popa
add
mov
jbe
bound
movsb
pop
and
inc
mov
insl
dec
mov
push
xor
pop
inc
fxam
sub
mov
call
je
dec
enterw
mov
pop
lret
sbb
into
push
xchg
sbb
cli
int
jo
adc
call
outsl
adc
pop
int
das
or
push
add
sbb
add
jo
aad
jo
jae
ret
jg
bound
lahf
jae
fcos
mov
lods
rol
sbb
cmp
inc
scas
xchg
adc
lods
fs
fdivl
xchg
push
xor
or
lret
icebp
rol
push
inc
xlat
push
lds
mov
sub
or
fstps
mov
lcall
xor
rcr
ja
repnz
andb
jne
sub
fs
sub
mov
test
cltd
je
xchg
in
or
mov
jns
xorb
or
or
cli
push
jp
fisttpll
jb
stc
les
jne
out
xor
cmpl
and
popf
jp
shl
loop
jecxz
mov
int
into
shlb
aas
ror
mov
pop
scas
jbe
cli
clc
add
dec
aad
loopne
lahf
ret
inc
lea
push
push
add
insb
mov
fsts
cmp
adc
movsl
outsb
cmp
inc
aam
repz
mov
xor
adc
sub
xor
lock
push
mov
pop
jo
xchg
mov
bound
faddl
push
jmp
movsb
xor
xchg
mov
push
out
cmpsl
pop
ficoms
adc
in
xor
cs
push
push
cmp
loopne
push
inc
je
push
dec
xchg
fisttpl
in
test
cmp
push
sub
dec
cld
or
dec
cmc
out
fisubs
mov
ljmp
xchg
sti
or
cs
std
leave
mov
add
mov
fstpt
push
imulb
mov
popa
jb
pusha
push
jg
jo
es
sarb
inc
iret
imul
add
fwait
mov
push
dec
fistpl
fildll
imul
andl
or
mov
jbe
mov
cli
pop
add
aas
enter
cmc
inc
mov
sub
fldenv
fldl
adc
xorb
dec
popa
and
je
pop
loop
add
lcall
ret
mov
ret
mov
das
stos
inc
add
cltd
dec
mov
xchg
sub
dec
movsb
scas
or
lods
in
mov
mov
dec
pop
scas
mov
add
ja
add
mov
imul
aaa
jno
lock
dec
push
pop
sbb
aad
test
sbb
out
adc
cmc
pusha
pop
hlt
mov
scas
xchg
mov
mov
arpl
loope
in
loop
push
and
mov
mov
or
sbb
rolb
and
cmp
add
mov
call
sub
or
xlat
jo
mov
sub
in
fmuls
pop
pop
adc
imul
lock
fcomps
lcall
das
push
mov
and
sub
stos
sarb
mov
and
mov
pop
cmpsl
xchg
out
inc
fnstsw
sbb
out
mov
xchg
subb
testl
sub
cmpsb
xor
subb
inc
jnp
push
push
inc
lds
inc
ljmp
leave
dec
outsl
push
outsb
fstp
xchg
outsb
mov
lods
loopne
test
and
mov
insl
xchg
jns
mov
inc
orb
fisubs
push
lcall
xchg
fistpll
and
pusha
xchg
sti
cltd
jbe
rcll
imul
xor
xor
mov
imul
outsl
adc
pop
mov
mov
push
inc
inc
in
cmp
call
adcl
and
fistpll
out
jnp
subb
fwait
icebp
insb
shl
sub
or
dec
outsb
outsb
xor
cli
jnp
in
xor
dec
add
ljmp
ljmp
mov
mov
mov
add
xchg
scas
add
js
loop
sub
xlat
stos
or
rorl
push
or
sub
and
shl
sbb
jge
jecxz
mov
xchg
or
int3
fs
sub
add
and
sar
out
movb
sbb
push
rorl
lret
jp
xchg
mov
cmp
andb
jge
push
add
nop
popa
cwtl
pop
push
lds
ret
leave
int
jbe
xor
imul
dec
prefetch
insl
sahf
mov
sub
and
divl
pop
adc
lahf
mov
aaa
push
push
sbb
xor
lcall
mov
int3
cmpsb
xor
adc
stos
repz
std
fadds
xor
pop
ss
js
xchg
fisttpll
add
sti
mov
push
cmpsl
lcall
sub
clc
fadds
mov
and
sbb
xchg
loop
xchg
inc
repz
sbb
js
push
cmc
sti
nop
fdivp
ret
fisttpl
icebp
and
and
mov
mov
enter
mov
lds
cltd
add
xchg
adcl
mov
shlb
ss
xlat
push
pop
xchg
in
test
xchg
mov
and
add
test
inc
loope
xor
hlt
mov
sub
int
call
pop
cmp
ss
cld
hlt
scas
ret
mov
pop
adc
mov
loopne
pop
imul
cmpsb
pop
sub
ljmp
push
mov
jecxz
cmc
lock
dec
sub
fmull
mov
sub
popa
lea
mov
push
mull
pop
gs
and
pushf
xor
arpl
xchg
mov
add
mov
sbb
imul
jbe
adc
dec
xor
and
sub
iret
rcrb
push
and
push
jbe
lock
cwtl
pop
mov
aas
jecxz
hlt
push
push
clc
sub
sub
cmp
sub
xchg
btr
dec
divl
cmp
xlat
ret
jne
lods
jmp
adc
mov
in
jnp
cmpsl
lds
dec
mov
add
cli
or
scas
arpl
stos
mov
fcmovne
push
push
test
xchg
ret
mov
scas
lds
ljmp
xor
aaa
imul
test
sub
jb
jl
dec
mov
iret
in
jge
movd
inc
aad
adc
iret
insb
pushf
scas
addr16
lcall
cmp
add
adc
test
push
je
aad
test
dec
repz
hlt
in
xchg
aas
lea
je
sub
and
in
lret
or
cmp
leave
mov
not
mov
inc
ret
clc
cmpsl
dec
dec
inc
jbe
into
lcall
stos
cmpsl
xchg
sub
scas
sbb
jne
inc
out
lcall
and
int
xchg
mov
lock
cmp
enter
lock
addr16
inc
xor
mov
push
imul
enter
push
mov
scas
dec
jl
loopne
push
cmp
pop
es
hlt
aas
jle
xorl
cmpsl
sub
add
jecxz
adc
arpl
call
dec
sub
and
xchg
pop
cmp
repz
cmpsl
cs
push
fisttpll
push
adc
inc
int
dec
cmp
ja
xchg
dec
call
js
and
test
pusha
rcl
sbb
xchg
sbb
pusha
push
jle
adc
dec
rcrb
dec
outsl
pop
add
out
mov
mov
popa
sbb
popf
fistpl
cmp
je
mov
xor
sub
xchg
cmpsl
ss
stc
add
mov
das
shl
pushf
mov
movsb
aas
pop
and
mov
pop
push
outsb
inc
push
jg
mov
arpl
das
mov
xchg
jne
je
clc
mov
jecxz
inc
mov
jae
icebp
rorb
mov
addr16
sub
ss
lcall
js
lcall
push
sbb
inc
mov
jle
adc
pop
clc
pop
inc
pop
fcoml
adc
push
lret
mov
jno
in
mov
add
cs
negb
dec
int
jmp
mov
dec
dec
mov
inc
std
add
jmp
popa
add
sbb
loopne
das
jp
in
addr16
stos
sbb
ret
mov
clc
push
jl
arpl
je
xchg
mov
jae
xchg
fstpt
out
dec
inc
fsubs
pop
and
cmpsb
jmp
jae
dec
test
or
aaa
aad
add
or
xor
mov
cmpsb
push
jo
mov
stos
mulps
cmc
or
mov
cmpsb
push
rclb
ds
mov
sbb
mov
sbb
or
es
xchg
ja
test
roll
popf
lods
push
ret
mov
push
mov
lcall
xor
mulb
idivl
rorb
es
and
adc
cmpsb
add
mov
and
popf
movsb
cld
test
fbstp
cmp
xchg
and
xchg
xchg
dec
gs
xchg
lds
cmp
fsub
mov
jae
cs
jb
cmpsl
js
xchg
xchg
lods
xchg
rorl
mov
xchg
mul
ja
lcall
xchg
xor
xor
test
test
xchg
push
cmpsb
out
rclb
jb
in
arpl
pusha
ljmp
cli
mov
mov
es
xor
adc
push
movsb
pop
fisubrl
insb
sbbl
sbb
add
ljmp
jo
jns
call
test
inc
cmp
add
out
rol
push
cli
negb
push
mov
or
mov
icebp
sub
pushf
mov
bound
xchg
jp
mov
fsubl
and
xor
inc
cmpsb
push
notl
mov
jno
mov
pop
mov
filds
sbb
mov
jge
mov
mov
ja
and
leave
push
dec
movmskps
jbe
hlt
and
popa
cmc
push
fucomi
ja
movsl
aas
stc
repz
pop
jbe
test
mov
mov
mov
push
cmp
stc
push
inc
cwtl
andb
mov
scas
daa
ret
fdivs
lret
mov
fmul
mov
mov
in
int3
lret
push
adc
xor
push
lret
jmp
mov
shrl
ja
push
lods
int3
jl
shll
mov
ret
mov
sub
add
xchg
mov
loop
fstl
adc
xchg
add
sub
bound
gs
lods
and
in
data16
push
inc
aas
aas
shr
add
pop
xchg
mov
jne
int3
mov
sbb
jns
and
inc
scas
je
xchg
les
test
fcomps
cmp
ja
repz
nop
push
and
push
jo
in
scas
adc
enter
inc
pushf
fst
clc
dec
fcomps
add
shr
pop
cli
in
or
adc
xchg
mov
mov
or
mov
sti
ror
fsub
movsl
shll
sub
addr16
add
sub
or
mov
in
push
and
hlt
loop
test
stc
add
xorl
sub
out
sarb
fdecstp
sub
mov
mov
outsb
jg
add
in
lock
gs
jo
jmp
cmp
push
dec
add
xor
call
lods
fcmovnbe
loop
cmpsl
mov
dec
xor
mov
das
sbb
lods
dec
adc
pop
das
dec
popa
ds
mov
sahf
mov
jo
push
push
sarb
mov
js
or
test
stc
fnstsw
hlt
mov
mov
inc
insb
mov
notl
jecxz
mov
mov
in
mov
jo
mov
enter
mov
aas
adc
xchg
test
imul
push
jmp
decl
ret
or
inc
mov
cld
rcrb
js
lret
xchg
xor
mov
dec
xor
testb
and
popf
mov
out
push
mov
add
jmp
add
repnz
sti
cmp
arpl
aas
orb
mov
mov
push
mov
sti
stos
xchg
mov
cmpb
call
add
daa
ja
cmp
mov
push
pop
jne
lds
mov
arpl
jp
pusha
insl
jno
fs
and
sbb
movsl
fdivl
xchg
orb
incb
mov
movsb
and
aaa
cmp
pop
sub
or
mov
mov
pop
das
sti
and
outsb
cs
cmp
add
insb
inc
iret
jbe
pop
leave
sbb
inc
sbb
dec
jb
std
sub
fs
push
aas
add
test
out
adc
leave
xchg
test
pusha
pusha
mov
loopne
ja
out
push
scas
mov
xchg
cmpl
jecxz
adc
cmpsb
jno
jg
mov
dec
movsl
clc
filds
dec
sub
bound
loopne
hlt
cli
in
xchg
push
fsubl
mov
in
lock
jmp
inc
sub
out
mov
iret
into
les
nop
gs
jg
add
insb
rcr
loope
push
inc
loop
xor
rcr
repnz
adc
or
jmp
mov
imulb
enter
js
nop
push
imul
mov
xchg
rcll
add
sbb
movsl
fisubs
ja
cmpsl
popf
push
xchg
imul
add
jnp
in
popf
popf
xor
aam
mov
nop
jo
lret
add
or
push
enter
adc
ljmp
push
mov
or
inc
xor
cmp
bound
add
lods
sbb
adc
fiaddl
test
mov
dec
cmpsl
sub
push
out
xor
and
push
imul
push
adc
dec
scas
push
mov
cmpsl
pop
lds
sbb
mov
xor
leave
sahf
xor
jb
pop
lret
or
and
mov
jge
fdivrs
out
mov
push
lret
cmp
pop
cwtl
push
pop
ret
adc
pop
imul
dec
fcoms
mov
jb
jle
les
loopne
mov
cmp
pop
push
pop
mov
adc
cltd
in
outsl
js
add
clc
lock
stos
in
outsb
push
nop
or
cs
in
addl
and
jbe
xchg
push
insb
notl
je
push
add
dec
jmp
sub
mov
stos
pusha
jmp
cmpsb
clc
xor
stc
add
repz
aaa
mov
rorb
cltd
mov
push
mov
inc
xchg
test
pop
sub
cmp
mov
lods
inc
jle
cmp
andb
pop
pop
loopne
sub
aaa
cld
imul
in
arpl
loope
lret
inc
insl
push
push
icebp
pop
xchg
sti
pop
xorl
cmp
mov
sub
mov
mov
mov
fwait
repz
lods
mov
xorl
sbb
inc
mov
pop
test
popa
imul
ljmp
test
or
lcall
outsl
cltd
dec
jl
daa
enter
lret
jl
sub
iret
pop
sub
push
or
pusha
xor
out
sti
xchg
push
cmc
fwait
inc
pop
inc
cmpsl
enter
sarb
push
xchg
inc
xchg
outsl
in
dec
into
inc
int
loopne
subb
rorl
lock
xor
movsb
push
add
cmpsl
icebp
outsb
js
push
out
pop
bnd
int
test
movsl
nop
adc
jo
imul
or
sbb
into
pop
mov
hlt
and
xchg
gs
lret
pop
ret
shlb
and
sti
pop
xchg
ja
jl
pop
push
jbe
add
aad
pop
add
addl
lock
dec
cmp
fcompl
movsb
movsb
xor
test
dec
popa
fwait
andb
mov
inc
sub
loopne
xchg
inc
and
add
or
lcall
lret
out
lret
mov
mov
mov
ret
movsb
fldenv
out
adc
mov
and
icebp
in
inc
pop
insl
dec
xchg
inc
dec
xor
sub
fcompl
daa
hlt
out
add
pushf
daa
into
cli
mov
pop
pushf
mov
pop
subb
lcall
mov
loop
cli
adc
jns
in
add
jnp
push
shlb
dec
mov
cmpsl
inc
inc
imul
shrb
xchg
xchg
test
gs
push
or
test
mov
repnz
sbb
mov
push
mov
jecxz
aaa
pop
scas
jp
jp
leave
jnp
repz
lahf
int
ffreep
fisubs
add
js
test
aas
add
lret
or
ja
cmp
jbe
pushf
inc
xor
sar
in
push
rol
and
xor
push
rcrb
aad
cmpsl
imul
push
mov
fsts
fstl
lds
andl
jne
add
jecxz
repnz
popf
lds
scas
mov
dec
push
add
sub
sub
lahf
xor
gs
push
push
mov
nop
mov
and
inc
cmp
add
push
push
iret
in
insb
aad
sti
add
sbbl
sub
inc
xor
push
lea
dec
clc
sahf
adc
cld
aas
xlat
rcl
inc
testl
sbb
lea
mov
lds
jecxz
imul
jb
icebp
mov
adc
iret
movsb
mov
insb
and
push
bound
cmpsl
das
and
mov
and
mov
rcrl
mov
dec
push
daa
adc
mov
out
fs
movsb
jno
add
sub
ret
pusha
add
imul
jp
pop
aaa
dec
dec
test
adc
ss
or
or
aas
mov
jb
sub
mov
lods
sbb
inc
mov
mov
hlt
mov
fistps
btc
aam
push
test
shrl
shlb
js
aas
xor
cmpsl
hlt
popa
mov
cmp
mov
inc
movsb
ret
or
dec
xlat
sti
jbe
or
push
xor
push
push
cmp
iret
insb
inc
sbb
sahf
push
inc
mov
xchg
and
fnstsw
push
pop
jns
insl
nop
jp
sub
jne,pt
icebp
cmp
pop
lods
push
daa
mov
push
push
ds
push
addr16
ja
and
add
push
sbb
pop
pop
in
out
mov
add
mov
mov
xchg
cmp
jno
lods
ficoml
mov
jae
xchg
aam
mov
test
mov
xchg
shr
or
rol
sarb
xchg
shlb
and
jnp
pop
movsb
push
mov
mov
push
inc
fs
leave
mov
and
inc
pop
sbb
loope
aaa
scas
mov
push
outsl
pop
rorl
xchg
jp
sub
dec
xchg
scas
daa
in
inc
fstpt
add
sub
jns
pop
cwtl
pop
enter
inc
stc
idivb
or
stos
sub
loope
lea
jl
mov
push
and
insl
cli
cmpsl
push
pop
rcrb
inc
add
loopne
fcoml
ljmp
das
fninit
jmp
test
fildll
cmp
cld
mov
hlt
pop
dec
cmp
outsb
rorl
jge
jg
orb
sbb
cmc
cmp
and
sub
sub
or
pop
cmp
mov
rcl
xor
jne
test
jmp
in
imul
dec
sbbb
push
xlat
int3
pop
jge
std
pop
sub
int
push
cltd
cmp
xchg
pop
aas
mov
xor
lock
inc
xchg
pop
stos
dec
adc
sbb
ficomps
mov
dec
jo
pop
sbb
aaa
cmpsb
mov
loope
jmp
xchg
dec
icebp
push
jae
mov
pop
cltd
repz
inc
pusha
jl
xor
ja
push
jecxz
push
fnsetpm(287
ret
add
jnp
pop
push
push
cmp
test
push
pop
hlt
mov
and
outsl
jbe
adc
sbb
shrl
sbb
and
or
and
push
pop
nop
adc
icebp
xor
xor
or
scas
andb
mov
addl
dec
xor
aas
fisttpll
jle
arpl
ror
outsl
add
nop
jno
mov
stc
scas
idivl
xchg
ret
cmp
in
mov
fbld
sbbb
repnz
dec
rcrl
nop
jmp
sahf
mov
cmpsb
xchg
out
dec
je
jns
shr
xlat
mov
xchg
call
dec
sbb
jecxz
sub
add
mov
mov
mov
sub
imulb
scas
pushf
ffreep
push
push
test
xor
adc
stos
push
jae
mov
je
das
jmp
mov
pop
fwait
popf
xchg
or
xchg
mov
cmp
aas
push
es
mov
jmp
push
test
addr16
jb
je
loopne
js
and
sbb
mov
test
mov
movsl
imul
fsubrs
cwtl
fistpl
jne
inc
lret
sub
sbb
mov
push
sbb
ja
sti
popf
pop
sbb
sub
or
inc
std
popf
mov
mov
rcrl
sbb
sub
dec
out
push
adcl
arpl
sbb
jecxz
xchg
push
aad
test
in
insb
xchg
adc
movsb
pop
lret
push
leave
fisubrs
cmp
out
or
cwtl
cmp
lcall
pop
imul
xchg
pop
es
push
jp
cs
outsl
fadd
dec
jbe
rcrb
pop
inc
xchg
and
test
mov
or
in
iret
sti
les
inc
mov
dec
mov
fs
add
xor
cmpsb
enter
int
ss
pop
cwtl
pop
in
xchg
xor
fstpl
push
mov
pushf
insb
pop
dec
sub
repnz
cli
nop
push
xchg
pusha
lcall
mov
jl
cmp
push
popa
mov
cmp
mov
jo
cmp
push
bound
aas
pushf
dec
in
in
in
lock
orb
lcall
or
push
dec
jns
xchg
lods
or
ja
jl
popf
sub
xor
in
insl
fimuls
lds
lods
jbe
fmull
lahf
xor
loope
push
popf
testb
mov
pop
loop
mov
cmp
std
out
sarl
jle
dec
cmp
dec
dec
inc
cmpsl
mov
fucom
sarl
out
jge
jmp
pop
out
clc
pop
or
sbb
stos
repnz
mov
sti
lock
mov
xchg
fidivrl
test
imul
scas
sbb
jne
xchg
jae
loope
mov
outsl
xchg
pop
test
add
dec
in
xor
stc
ja
sub
repz
pop
psubusb
fwait
add
jmp
lods
fldt
ret
lcall
sbb
lcall
add
sbb
push
pop
adc
mov
vdivsd
pop
test
cmp
mov
xchg
pop
or
fs
into
jg
mov
loope
out
in
movb
jp
jbe
outsl
mov
inc
mov
mov
ret
mov
sub
arpl
scas
push
xchg
xchg
lret
icebp
data16
rorb
inc
jp
ja
sbb
push
push
push
xchg
mov
and
je
cmp
icebp
cmp
adc
or
and
call
mov
push
jge
jo
aam
jecxz
sub
mov
test
imul
mov
jp
or
loopne
pop
mov
xchg
add
xchg
push
aas
mov
cltd
sbb
mov
repnz
xchg
mov
scas
addr16
fidivrl
mov
jb
shll
div
pop
xor
lcallw
jno
sti
lods
je
repnz
add
mov
rcrl
inc
xchg
in
lret
adc
andb
test
stos
fsubr
sbb
dec
xlat
popf
inc
or
sub
arpl
push
push
xchg
cmpl
es
in
hlt
push
fcoms
clc
mov
xchg
mov
sub
jge
cs
sahf
pop
pop
push
mov
jae
push
xchg
push
outsl
mov
sbb
pop
cmp
jge
rcrb
sbb
jo
in
stos
fisubrs
mov
pop
cwtl
arpl
lods
loope
leave
test
inc
test
jmp
pushl
mov
fdivrs
pop
jmp
cltd
lock
and
jno
sub
loop
cmpsl
jge
push
std
xor
jnp
ficoms
int
xor
adc
push
push
std
fimull
adc
bound
shrb
int
dec
stc
mov
jle
adc
push
sarb
ljmp
js
lods
dec
jnp
pop
gs
pop
out
sub
dec
leave
fldcw
jns
stos
cs
enter
dec
in
mov
fadd
cmp
xchg
inc
pusha
out
pop
jg
fisttpll
test
sbb
push
fidivl
pop
pop
popa
sub
adc
and
adc
out
mov
addr16
push
jae
test
pop
fbld
dec
adc
outsl
and
mov
jmp
loop
test
in
stc
pop
mov
cmpsl
popa
and
sub
lcall
adc
push
dec
cwtl
movsb
mov
das
stos
mov
cmpsb
sub
loope
test
xchg
icebp
callw
cmp
or
push
xchg
dec
or
add
dec
and
scas
jne
mov
and
push
shrb
mov
gs
lods
or
out
jbe
mov
adc
add
add
pop
out
shl
cli
sbb
stos
in
dec
out
clc
je
btc
mov
dec
imul
push
call
sbb
js
or
lods
daa
add
aas
je
std
or
jl
cmpsl
pushf
stc
les
fisubrl
test
mov
test
fwait
pop
jecxz
cs
adc
or
cld
es
lret
adc
mov
neg
cli
sbb
imul
pop
mov
pop
orl
and
arpl
push
mov
mov
inc
fs
sub
loop
fcomps
test
jmp
pop
add
int
sti
pop
insl
sbb
mov
repnz
lods
or
repz
les
adc
jbe
cld
or
outsb
mov
sti
adc
jae
xchg
out
out
dec
push
or
enter
popf
inc
and
jp
sarl
movsb
mov
pop
lahf
cli
pop
test
adc
jmp
repz
or
push
lret
mov
cld
dec
icebp
cld
mov
mov
mov
je
shll
jecxz
push
popf
mov
es
loop
mov
notl
fwait
lods
push
mov
out
jno
or
mov
adc
repnz
xchg
in
fildl
insb
xchg
test
inc
inc
repz
adc
mov
sub
movl
sbb
insb
adc
scas
lods
cmc
inc
dec
inc
push
icebp
in
mov
xchg
ss
ljmp
cmpsl
mov
mov
push
std
mov
sub
or
fists
dec
cmp
push
xchg
pop
lods
and
ror
xchg
dec
cmp
leave
mov
cmp
cmp
add
arpl
sbb
mov
fwait
mov
adcl
shl
hlt
lret
mov
decl
clc
pop
xchg
mov
xchg
inc
xchg
fstpl
shlb
jge
push
js
ja
jns
cmpsl
orl
mov
jle
out
in
xor
dec
and
test
test
pop
jle
pop
data16
mov
jbe
sbb
jb
mov
inc
repnz
aas
jge
iret
inc
xor
pop
stc
pusha
call
xchg
pop
jmp
mov
xchg
push
and
pop
ja
lods
aas
ret
jmp
inc
mov
mov
mov
bound
cltd
xchg
dec
fstp
out
hlt
ret
shlb
mov
mov
movsl
push
push
or
inc
stos
jb
loope
icebp
cld
inc
sti
pushf
ss
scas
sbb
mov
test
inc
lods
nop
sbb
pop
aas
sti
scas
out
andl
movsl
in
neg
jne
loope
ja
in
mov
aad
data16
xchg
popf
cmp
mov
push
dec
sbb
jb
and
fadds
dec
in
add
push
mov
test
mov
push
adc
sub
mov
sub
mull
pop
lret
outsb
adc
adcb
leave
push
lds
jne
scas
fdivl
shl
cltd
pop
outsl
outsl
dec
xor
xor
subl
or
cmp
push
int3
adc
out
imul
mov
push
jg
int3
adc
add
int3
enter
or
sbb
push
insb
mov
pop
out
jo
cli
lret
repnz
inc
pop
out
push
adc
or
push
test
in
cs
cmc
and
mov
inc
push
pusha
dec
xlat
mov
insb
sbbl
pop
and
int
pmulhw
push
xchg
outsb
data16
pop
cs
pop
push
add
mov
inc
pop
aaa
icebp
inc
jbe
jl
imul
popf
jns
adc
leave
aam
dec
mov
pop
daa
cmp
fisttps
out
adc
arpl
xor
sub
pop
mov
and
jbe
pop
mov
leave
lahf
fnstsw
test
dec
fistpll
outsb
mov
int3
iret
push
aam
stos
fwait
arpl
cmp
adc
dec
sbb
jmp
daa
fmulp
cmpsl
xchg
pop
pop
dec
mov
andb
xchg
mov
push
or
cwtl
cmc
rolb
cmp
dec
jge
cwtl
push
xchg
int
push
mov
das
add
mov
arpl
mov
call
ljmpw
lea
cmpsb
rcll
sub
push
repz
in
lahf
leave
jecxz
fcompl
movl
loope
sahf
mov
insl
xchg
into
inc
xor
mov
stos
out
inc
pushf
dec
aaa
aaa
scas
loopne
mov
mov
jnp
scas
push
mov
std
fcomi
xor
push
push
fsub
xchg
out
pop
and
dec
pop
fisubrs
dec
sub
movsl
jmp
jmp
or
mov
xor
lcall
out
sub
lahf
cmc
cld
cld
int3
xor
ret
jbe
ljmp
mov
mov
mov
cld
inc
in
mov
sbb
inc
pop
dec
push
jmp
jl
xor
sub
out
xor
std
and
dec
sub
xor
lea
clc
jnp
add
das
add
push
and
dec
add
in
sbb
push
sarl
dec
pop
nop
sbb
jo
jns
dec
fcmovu
addr16
sub
push
jge
ja
test
out
mov
pop
sti
mov
xor
lret
or
sbb
sti
jno
nop
xchg
aas
das
mov
jle
addr16
xchg
lcall
jmp
mov
les
xchg
cltd
fsincos
xor
pop
ror
xchg
lods
sub
insl
es
out
ja
pushf
sub
xorl
jns
mov
sub
mov
test
mov
popf
cmp
cmc
xchg
add
dec
xor
push
or
notl
inc
cmpb
outsb
inc
xchg
mul
adc
jl
inc
adc
repnz
je
and
mov
stos
mov
cmp
out
xchg
inc
aas
in
movsb
and
imul
test
mov
mov
mov
jle
lock
push
pop
aam
add
pop
imul
jg
fiaddl
mov
lret
insb
lds
xchg
loop
mov
sbb
insl
repnz
jno
or
out
push
and
ja
pop
jbe
hlt
jnp
push
iret
fst
les
fisttps
xor
push
push
data16
mov
test
add
lea
inc
cmp
push
jo
movsb
mov
push
aad
std
leave
aas
mov
fs
popf
jmp
shll
adc
push
ja
jge
nop
fcmovnb
stos
daa
insl
adc
add
xchg
aam
fsubrs
imul
les
inc
outsb
sbb
pop
xchg
mov
mov
push
mov
inc
aad
dec
into
aas
or
pop
pop
pop
movsl
call
mov
mov
insb
adc
repz
jp
sub
imul
cltd
dec
loopne
test
xor
adc
flds
jl
xchg
ret
ljmp
jb
andl
ljmp
loope
jno
sub
cmp
clc
inc
pop
xchg
int
fmulp
and
cs
nop
sarl
fisubl
xchg
jmp
inc
aaa
push
arpl
dec
mov
mov
mov
je
mov
fs
cmpsb
sbb
push
ficoms
sbb
into
inc
adc
adc
ds
pop
cld
jecxz
xchg
mov
roll
rorb
cli
cmp
int3
mov
data16
lods
pushf
inc
ja
sub
ret
mov
test
xor
pushl
in
sarb
in
lret
lcall
sub
lods
repnz
inc
jle
push
push
shrb
push
jns
int3
ds
pop
repnz
add
jge
jl
inc
ds
insl
scas
call
das
fwait
ljmp
mov
dec
inc
mov
sbb
mov
xchg
add
in
aas
mov
bound
enter
and
int3
mov
imul
sub
jae
fcompl
int
fimull
sub
test
mov
push
lret
fcoml
fwait
sti
roll
mov
insl
js
push
sahf
sbbb
jae
rolb
les
adc
xchg
mov
cmp
mov
push
cwtl
pop
mov
add
cmpsb
xchg
movsl
add
adc
lret
inc
xchg
dec
pop
sbb
adc
jb
ret
decl
push
shll
insb
dec
dec
or
js
inc
jb
outsl
and
rorb
pop
lret
aaa
pop
mov
pop
cli
mov
hlt
sub
cwtl
mov
jge
ffreep
shlb
push
pop
andl
in
jno
jns
addr16
es
mov
cli
into
in
cmc
out
push
enter
cmp
push
or
inc
dec
jns
arpl
imul
sarl
sarl
push
xor
pop
popf
dec
shrb
pop
xor
mov
out
lods
test
dec
into
cld
sub
inc
pop
scas
dec
or
andb
adc
jns
push
xor
aaa
cmp
hlt
mov
dec
and
and
movsb
xchg
pushf
nop
fistps
test
mov
dec
ds
adc
pop
lods
push
mov
hlt
outsb
rclb
mov
in
dec
push
push
mov
pop
mov
mov
test
js
dec
and
pop
adc
sbb
xchg
push
xor
cwtl
test
jbe
fmull
shr
add
add
mov
mov
xchg
bound
bound
sbb
cmp
repnz
mov
push
and
repz
fldenv
or
pop
jne
arpl
fiaddl
cwtl
and
jo
sbb
cmp
push
js
push
add
cmc
lock
jbe
fsubrl
xlat
call
pop
jmp
repnz
cwtl
arpl
sub
xor
pop
sub
adc
lods
jne
xchg
xor
push
jge
shrl
mov
loopne
in
push
push
mov
sub
sbb
icebp
dec
push
inc
pop
or
lods
clc
ficomps
inc
cmp
dec
ficompl
mov
inc
dec
dec
lods
outsl
jg
add
lds
adc
jb
add
fcomp
mov
scas
jns
or
push
ret
iret
or
mov
jne
jecxz
loope
mov
mov
xchg
sub
aad
cmpl
int
inc
mov
lods
add
scas
int3
pop
mov
aad
push
mov
mov
insb
pop
test
out
jo
mov
testl
sub
and
sbb
repz
outsb
movzbl
sub
add
lods
adc
testb
sub
mov
sbb
ja
fidivs
dec
and
ljmp
adc
addl
cmp
xchg
dec
adc
xchg
mul
arpl
push
dec
adc
in
imulb
and
stos
adc
xchg
incb
aas
inc
push
pop
in
fildll
sub
pop
dec
loope
ja
xor
push
mov
outsl
fcoml
fstpt
imul
mov
xchg
fimull
aaa
adc
dec
and
xchg
sbbb
sti
mov
sbb
and
adc
xor
mov
fwait
jno
mov
xor
pop
mov
stc
mov
jb
shr
aad
cli
mov
lods
inc
jle
in
mov
add
and
scas
std
fs
and
pop
lea
push
or
lock
pop
fadds
mov
mov
sub
pop
push
int3
cltd
mov
push
cmpsb
insl
sub
lods
shll
dec
adc
pop
sbb
lock
mov
fnstcw
push
or
push
and
ficoml
add
notb
lret
dec
sbb
in
repnz
and
xor
sbb
pop
imul
jno
test
push
aam
ljmp
cmpsb
pop
mov
dec
lock
xor
sbb
jae
inc
clc
mov
mov
fisubl
lods
imul
addr16
sub
mov
sub
bnd
sbb
mov
sub
sub
xor
std
jge
in
cmp
aaa
sub
push
hlt
sub
dec
cmpsl
clc
mov
pushf
addr16
inc
mov
adc
or
cmp
xchg
jne
push
loope
xchg
xor
cmp
xorl
push
nop
cs
jmp
and
or
push
sti
mov
rcrl
rsm
adc
repnz
jle
sti
imull
lock
mov
popa
add
pmullw
xor
ffree
pop
and
lea
addr16
ds
xchg
and
push
jno
mov
xchg
dec
push
xlat
mov
mov
pop
ds
je,pn
jno
adc
xorl
sahf
jmp
cmpsl
push
sub
pop
cs
aas
pop
add
jle
xchg
fisubs
jo
enter
rcll
sub
adc
inc
mov
jnp
enter
inc
add
pop
lret
lahf
cmp
ret
pushf
cmp
pop
adc
dec
pop
jae
xchg
mov
es
std
cmpsb
leave
and
test
sbb
and
addr16
in
mov
mov
rclb
dec
stos
addl
js
sub
pop
aaa
je
jo
scas
inc
mov
mov
fstl
insb
cmpsl
repz
pop
inc
dec
jmp
rcr
repz
repz
mov
daa
mov
sub
sbb
stos
xorl
sbb
xchg
int
mov
outsb
adc
pusha
hlt
fucomi
sbb
adc
arpl
or
fidivl
inc
sahf
sub
pop
popa
lea
dec
mov
or
inc
loope
verr
test
and
insb
add
xor
or
push
xchg
cmp
add
and
cmp
pop
sarb
fisubl
jle
inc
fs
jge
adc
lock
mov
data16
lea
cmpb
or
ja
sbb
into
sub
repnz
cmpsb
xor
sub
pop
rcrl
lods
lods
pop
imul
gs
jb
mov
repnz
out
inc
add
pop
jnp
and
push
out
adc
adc
loop
push
xchg
xchg
cmp
lcall
addr16
dec
push
lcall
inc
divb
ds
pop
movsb
stc
mov
or
fnstcw
sahf
mov
inc
test
xor
xchg
and
cli
daa
les
outsb
inc
adc
repnz
lcall
and
jne
pushf
imul
test
dec
idivb
stos
arpl
cs
or
outsl
fnstcw
iret
pop
dec
insb
dec
xchg
in
mov
jle
loop
dec
lea
inc
sahf
out
out
dec
je
imul
fs
push
testl
pop
pop
lods
cli
mov
cmp
aaa
stos
sub
xchg
nop
adc
loop
fsubs
scas
pop
outsb
cltd
in
lret
push
jg
jl
aad
sub
jbe
icebp
jb
ffree
cmp
sub
dec
xchg
leave
push
jl
adc
pop
mov
mov
pusha
jns
add
pop
pop
sub
lods
pop
rcll
std
ss
fwait
imul
add
dec
jbe
inc
lea
jecxz
mov
push
jl
out
and
adc
cmc
sub
xchg
test
jmp
jg
adc
adc
ds
jg
mov
fcomip
mov
jnp
dec
add
fimuls
aad
dec
mov
sub
mov
push
das
pop
pop
je
aam
mov
inc
repnz
inc
lock
in
mov
in
negl
lds
push
lcall
call
rorb
mov
lret
call
push
aas
cmc
push
nop
xor
dec
test
das
push
cltd
xor
lahf
mov
int3
or
sti
test
mov
daa
repz
pop
pop
mov
and
decb
mov
and
push
jo
fadds
mov
inc
mov
adc
xor
rclb
adc
icebp
mov
jmp
popf
inc
pop
add
mov
mov
popf
repz
or
xor
push
pop
test
xor
jo
jmp
mov
add
lret
mov
rol
pop
mov
pop
xor
xchg
sahf
sbb
dec
push
fldt
inc
fwait
les
loope
sub
push
mov
dec
inc
sub
pop
adc
inc
or
clc
pop
lret
adc
jns
sub
movsb
fidivrs
adc
int
dec
cwtl
dec
and
mov
or
lods
push
adc
cwtl
mov
fimull
mov
rcrb
pop
mov
imul
jnp
mov
fiaddl
mov
lds
std
adc
pop
sbb
cli
mov
das
push
je
test
inc
outsl
inc
mov
adc
out
pop
jecxz
fnsave
adc
out
stos
add
mov
adc
stos
loope
imul
sub
nop
mov
js
leave
xchg
cmpl
cs
add
dec
xchg
sub
out
imul
sub
mov
cmp
pop
flds
lods
pop
into
sbb
in
sub
mov
xor
out
leave
push
aaa
cmp
icebp
and
ljmp
in
test
iret
sbb
push
mov
pop
jge
add
test
aad
dec
sub
cmp
mov
js
mov
mov
add
jb
xchg
jecxz
xchg
or
mov
cltd
into
test
xlat
sbb
dec
arpl
aaa
and
or
xor
ret
xor
cmp
mov
jo
fstpt
mov
mov
dec
add
loope
js
and
xchg
int3
lds
cs
dec
movsb
cld
lods
sbb
add
push
sarb
mov
in
data16
ljmp
jno
dec
xchg
dec
mov
hlt
sbb
sti
xchg
ret
fbstp
dec
pop
ret
cmp
adc
xchg
ret
ljmp
mov
xchg
inc
mov
bnd
repnz
push
add
or
adc
sbb
out
sub
sub
es
test
lret
shlb
fisubrl
push
out
inc
dec
lret
loopne
xor
inc
lds
lods
test
sbb
mov
dec
mov
jnp
sahf
inc
xchg
jo
xchg
xchg
xchg
sub
arpl
adc
pusha
sub
mov
adc
sarl
pop
inc
sbbl
negb
mov
pusha
jmp
jae
lret
mov
and
shrb
pop
xlat
pop
sub
inc
mov
rcll
adc
or
dec
fdivrl
shll
and
aad
js
ret
mov
push
test
adc
xchg
call
sbb
arpl
repnz
push
xchg
jbe
sbb
dec
push
arpl
jmp
nop
data16
ret
imul
insb
movsb
out
xor
stc
imul
dec
int
enter
repz
fstps
pop
inc
lock
lret
sarl
xor
add
push
movsl
xchg
scas
inc
flds
rcr
stos
inc
push
sbb
dec
iret
orl
push
call
mov
loope
vpmacsdqh
jp
fisttpl
call
scas
mov
jo
ss
cli
xchg
inc
inc
add
scas
jo
dec
mov
je
addr16
push
adc
dec
mov
mov
push
mov
ljmp
inc
cli
dec
mov
and
es
out
ret
aad
repz
add
ficoms
clc
and
nop
ja
and
jecxz
lods
inc
jg
add
xchg
mov
mov
fs
setno
aas
bound
movsb
movsb
jp
mov
sbb
out
dec
push
ret
lret
sbb
repnz
in
ficoml
push
div
sub
out
sbb
fwait
dec
fcomps
mov
icebp
sub
xor
cltd
cmp
fdivl
add
add
jnp
fstl
arpl
mov
pop
je
mov
arpl
jmp
jl
rorl
iret
and
or
sahf
mov
jne
int3
in
outsb
add
jns
push
aas
arpl
inc
jno
dec
inc
mov
push
aaa
push
adc
andl
arpl
or
adc
cmpsb
setbe
mov
push
pop
mov
repnz
mov
leave
insb
ret
inc
inc
aaa
idivl
and
popl
ss
mov
adc
xchg
lods
xor
xor
mov
test
pop
imul
addl
adc
pop
inc
cmpsb
cmp
jne
outsb
std
out
pop
movsl
mov
add
jns
filds
xchg
std
push
and
xlat
adc
iret
lcall
dec
out
in
in
ret
add
pop
inc
clc
inc
cmp
outsl
arpl
jl
cmp
sub
movsb
sbb
push
std
push
icebp
xchg
inc
add
add
cmc
cmp
les
cmp
sub
movsb
xchg
adc
jne
jge
pop
sbb
cli
sbb
jl
dec
test
jns
jne
xchg
xchg
insb
xchg
xchg
xchg
pushf
dec
add
hlt
cmpsb
inc
iret
aaa
inc
sahf
les
adc
push
mov
sahf
repnz
jne
popl
cmp
and
dec
push
xor
aaa
mov
lea
push
loop
cmp
mov
sti
sub
adc
insb
fmuls
call
arpl
or
sbb
call
pop
out
in
ss
and
jge
leave
in
mov
push
sub
cmp
popf
aad
cmp
add
clc
inc
jno
clc
sahf
pop
sub
dec
pop
cmp
push
cmp
out
jg
inc
ljmp
mov
xchg
test
cmp
or
add
xor
popa
jecxz
mov
add
mov
loope
aas
mov
fisubrs
in
sbb
outsl
mov
fstpl
int
decb
jo
jge
mov
addb
into
js
jmp
and
cld
sahf
mov
mov
pop
or
shll
in
push
mov
jmp
flds
orb
cmp
or
bound
fnsave
lods
push
pop
subb
xchg
shll
shrb
fsub
xchg
call
xlat
xchg
jmp
pushf
mov
arpl
and
inc
sub
aas
rorl
repz
loope
pop
dec
mov
ljmp
pop
or
jae
sub
mov
filds
mov
jnp
sub
xchg
push
ficoms
andb
mov
adc
in
int
iret
in
dec
push
pop
jns
inc
notl
jbe
sarb
sub
adc
add
rcrb
lret
movsl
dec
scas
cmp
fistps
fsubl
test
fs
sub
push
insb
pop
pop
repnz
mov
mov
les
clc
popa
jb
idivb
daa
xchg
iret
daa
sub
and
inc
fnstenv
mov
aad
fistps
jne
or
aam
push
and
pushf
pop
mov
xchg
pop
iret
sbb
aad
int3
pop
ljmp
mov
sbb
jle
cs
ja
xor
sbb
mov
cmc
leave
lea
stc
xor
movsb
fcmovnu
sahf
pop
xchg
notb
push
imul
xchg
inc
pop
add
jl
sub
sub
xchg
sub
sbb
push
push
mov
out
arpl
xor
ret
js
jmp
mov
add
cmp
xchg
adcb
jp
pop
aaa
mov
adc
adc
push
mov
mov
and
jp
cli
leave
inc
mov
mov
jle
cmpsb
xchg
sub
ret
adc
mov
movsl
mov
jle
pop
in
pusha
pop
sub
es
cmp
sub
xor
in
push
sar
leave
mov
mov
mov
loopne
and
ror
outsl
hlt
mov
notb
xor
mov
outsl
mov
pop
pushf
fsubl
gs
out
ja
or
xchg
sahf
adc
pop
leave
mov
fidivrs
and
ss
mov
mov
imul
dec
shll
jae
cs
popa
inc
pop
loope
mov
int3
sub
loopne
aas
fwait
pop
xor
xchg
jmp
push
fidivl
hlt
cmp
lea
inc
negb
leave
mov
repnz
mov
sbb
lds
push
arpl
mov
shrb
dec
bound
mov
xchg
in
in
mov
ret
pushf
jne
icebp
ds
mov
clc
dec
test
sbb
std
and
lods
loop
mov
out
inc
je
ss
fwait
cmc
ds
in
adc
push
out
add
sbb
rolb
clc
adc
loop
and
pushf
stos
adc
sahf
repnz
adc
xor
xchg
dec
das
lock
dec
lcall
fdivs
adc
not
and
sarl
push
inc
sti
mov
sbb
push
mov
mov
aaa
stos
push
dec
imul
sub
or
scas
jge
mov
test
inc
scas
push
inc
jl
jg
ss
xchg
xchg
mov
popa
into
test
popa
sbbl
mov
and
ret
xor
das
jae
sub
dec
testb
inc
lahf
sbb
sub
mov
sub
arpl
push
xor
pop
popf
add
jo
sbb
mov
data16
pop
out
xor
je
test
pushf
stos
sub
jecxz
sub
les
ror
imull
mov
mov
in
adc
rclb
jbe
bound
mov
cwtl
mov
xor
jp
fs
jnp
sub
push
mov
dec
icebp
stc
sub
lods
inc
push
pop
mov
dec
mov
cli
fsubl
mov
dec
mov
shll
push
adc
imul
dec
pushf
sbb
bnd
and
int3
adcl
or
or
add
xchg
pop
lods
imul
leave
nop
xor
sbb
push
das
cmc
aam
out
adc
and
inc
ljmp
inc
clc
push
hlt
inc
and
xor
xlat
ja
popa
icebp
mov
dec
dec
lds
pop
sbb
mov
add
inc
andl
pop
insl
or
lock
mov
adc
cmp
xor
push
mov
cltd
cmp
sub
mov
jmp
in
nop
jo
cmp
xor
or
sub
or
add
jne
repz
mov
ja
inc
push
or
lods
shrl
or
or
fcmovb
test
cmc
add
xor
out
sub
andl
add
rcrl
int
jae
adc
iret
rcrb
adc
inc
mov
sbb
cs
pop
in
mov
shr
andb
pop
outsl
mov
inc
pusha
and
out
adc
arpl
inc
mov
jno
lahf
jbe
push
mov
jns
outsb
mov
icebp
adc
sub
loopne
push
aas
ret
sbb
leave
rcrl
push
nop
push
repnz
push
xorl
xchg
jo
pusha
xor
inc
shrb
push
adc
push
mov
in
push
xorl
sub
add
sub
pop
mov
mov
shll
xchg
jmp
in
jb
jns
cltd
popf
mov
and
and
mov
cmc
jl
jns
jno
loopne
sbb
push
or
sbb
push
dec
push
daa
test
push
xlat
fisttpl
mov
dec
test
mov
push
lcall
inc
push
sub
jo
mov
mov
sbbb
xor
sbb
jns
adc
mov
nop
in
jg
fisttpll
adc
icebp
imul
sub
mov
repnz
add
imul
mov
pop
cmp
pop
ret
add
jmp
jne
lcall
push
jb
push
adc
sti
jns
mov
jns
aas
aaa
adc
out
subb
jns
jge
cmp
test
das
shufps
lea
mov
cwtl
xor
jbe
push
pushf
adc
add
or
adc
mov
mov
int3
fcoml
into
mov
xor
adc
stos
jo
mov
push
push
js
sub
mov
sub
inc
repz
mov
ds
sbb
add
into
andb
jecxz
push
aam
cmp
mov
fstpt
iret
push
out
test
repnz
mov
mov
mov
and
xchg
jg
clc
push
pop
cwtl
in
pop
cli
fwait
rclb
insb
orl
test
add
dec
or
and
push
add
cmp
fimuls
pop
mov
rclb
xchg
cld
jl
push
mov
ljmp
popa
jge
fistpll
mov
scas
lret
pop
lods
shrl
and
icebp
shrb
mov
jne
mov
cmp
jle
test
pop
test
push
cmp
mov
lret
pushl
dec
and
shl
hlt
jp
jnp
outsl
jecxz
xchg
inc
sub
rorb
int3
stos
int
add
pop
out
movhps
imul
or
add
pop
push
pop
popa
add
out
pop
popf
fadd
femms
jecxz
out
cmpsl
or
xchg
into
xor
adc
add
dec
out
scas
pop
pop
or
sbb
out
push
lea
daa
mov
out
jge
push
fldl
lcall
incl
jns
fdivrl
imul
sub
xchg
sbb
mov
adc
jge
jp
and
push
jl
js
in
mov
fidivrs
push
pusha
addr16
icebp
mov
insl
inc
or
push
repnz
negb
sbb
bound
lea
in
ja
in
insb
pop
nop
dec
cmp
mov
or
in
sarl
lock
inc
arpl
ret
test
rcr
or
sbb
frstor
sahf
test
xlat
mov
adc
lods
outsl
sbb
movsl
push
jnp
xor
fcomps
aaa
bound
jl
or
lahf
pop
inc
testl
mov
faddl
fcoml
jg
pop
adc
js
sbb
pop
jge
jnp
and
dec
pop
fidivs
mov
mov
push
mov
cmpsb
pop
xchg
enter
mov
aas
adc
mov
xchg
outsb
scas
jg
pusha
loop
stos
in
pop
mov
es
out
cwtl
xchg
cli
pop
roll
dec
into
adcl
fldcw
aas
pop
std
lds
scas
lods
nop
ret
jge
into
jae
jge
or
je
in
arpl
push
mov
fwait
xor
sub
sbb
mov
jge
push
sbbb
xchg
nop
push
jae
mov
mov
mov
sarb
aad
ljmp
add
call
shr
dec
jmp
xchg
daa
mov
test
fsubrl
push
arpl
or
rcrl
enter
lahf
add
out
test
cltd
lds
roll
lret
loopne
test
cs
aam
sub
jecxz
popf
adc
in
loopne
arpl
inc
dec
mov
lock
add
leave
mov
or
cmp
mov
mov
mov
das
xor
or
ret
ss
pop
pop
push
ljmp
push
xlat
flds
xlat
leave
fsubrs
ss
fcomi
adc
xor
or
aam
sbb
test
loope
adc
pop
mov
inc
scas
mov
push
mov
adc
lret
jnp
mov
push
mov
subl
fisubrl
push
and
dec
or
imul
xchg
aas
mov
xchg
mov
std
push
fadds
mov
aaa
mov
jbe
add
cmp
shl
dec
xor
leave
push
mov
fstpt
jnp
lea
dec
inc
cmpsb
mov
adc
ljmp
aaa
ret
pop
or
stos
dec
jne
pop
aam
push
push
test
in
pop
jns
repnz
notb
sbbb
cld
mov
cmpb
pushf
outsl
pop
shlb
sbb
mov
pop
mov
cmpsb
daa
sbb
ret
in
or
inc
pop
or
xor
jo
movsb
mov
fdivrs
sbb
xchg
mov
adc
sub
daa
cld
imul
adc
dec
es
popa
ficompl
add
ja
xor
push
mov
pop
popf
dec
cmpsb
jno
daa
xor
sbb
in
push
imul
mov
nop
xchg
stos
mov
int
cmp
ljmp
xor
lcall
dec
fiaddl
ss
popa
dec
xchg
pop
sbb
inc
imul
cs
inc
xchg
pop
mov
mov
push
lods
incl
dec
ficompl
ds
push
sbbl
or
or
sahf
mov
mov
dec
incb
imul
mov
cmp
lahf
outsb
pop
cli
dec
and
jle
pop
push
jno
push
in
add
nop
push
mov
push
or
imul
cmp
idivb
cli
outsl
jge
shll
fwait
icebp
outsb
fcmovb
repz
push
or
scas
into
lahf
stc
adc
sti
push
xchg
sbb
mov
aad
xlat
in
add
xor
mov
outsl
inc
adc
sub
movsl
xchg
aas
dec
bound
iret
test
jb
dec
and
subl
dec
test
adc
movsb
dec
push
inc
xor
sub
or
int
jp
jo
add
je
test
jmp
fbld
inc
jle
roll
int
insb
jne
imul
push
cmpsl
sub
pop
clc
or
cmp
adc
subb
jle
pop
adc
or
jne
in
or
enterw
bound
jns
xchg
out
out
mov
or
lret
jg
and
ss
aad
mov
or
int
outsb
adc
roll
cltd
sbb
push
dec
push
mov
and
clc
push
sub
dec
sarb
cmc
pushf
mov
push
js
push
mov
push
mov
sbb
sub
xchg
dec
xor
mov
pop
jno
jb
cmp
inc
rorb
idivl
mov
mov
lods
pop
pushf
add
dec
in
popa
sub
iret
in
push
jae
js
insl
push
add
pop
pop
and
xchg
lcall
aam
fs
fisubl
add
pushf
mov
mov
popf
mov
xor
mov
mov
dec
stos
or
in
inc
cmc
mov
fisubrs
repnz
nop
mov
xor
push
add
mov
arpl
cmp
aas
push
cmp
jae
mov
addb
mov
add
cmp
inc
sbb
pop
inc
dec
dec
js
imul
roll
push
push
jne
mov
add
or
lcall
dec
dec
iret
in
jmp
push
stos
ljmp
ljmp
scas
sbb
sbb
add
pop
sbb
int
cwtl
mov
out
icebp
int3
pop
adc
stos
xor
ja
ret
aam
xchg
subl
stc
cli
insb
and
loope
xor
dec
sub
and
xchg
push
scas
mov
mov
mov
jbe
or
mov
adc
jp
test
mov
ds
dec
fcomip
enter
or
xchg
sub
xchg
gs
inc
mov
mov
adc
lods
inc
in
sub
fistps
sbb
imul
movsb
ret
push
pop
add
leave
fsubl
les
mov
mov
insl
js
pop
push
sbb
pop
sahf
push
xchg
mov
mov
jecxz
jmp
push
jl
mov
sbb
sbb
cmc
mov
aad
stc
sbb
ss
filds
lds
adc
pop
sbb
dec
dec
dec
mov
pop
mov
inc
lods
fildl
mov
aad
cmp
dec
sbb
nop
xchg
pusha
dec
dec
and
jg
je
pop
xor
scas
mov
or
js
sbb
mov
mov
adc
mov
mov
sbb
movl
mov
lock
inc
push
xchg
xlat
mov
negb
lds
and
ret
adc
cmpsl
dec
in
dec
xor
jl
nop
adc
cli
xchg
jb
testb
cltd
jns
push
mov
ds
add
mov
adc
fcom
into
in
std
lcall
aaa
ljmp
cmpsb
sbb
pop
mov
in
lods
xor
and
lcall
dec
adc
mov
cmpsb
mov
pop
sub
push
mov
pushf
jno
jo
or
add
repz
pop
mov
and
xor
or
stos
out
lock
cmc
jns
jle
push
jl
loop
ja
cwtl
xchg
movsb
addr16
icebp
int
or
aaa
xor
adc
push
and
outsl
loopne
rcl
jp
push
dec
rcl
in
jae
cltd
lahf
xchg
movsb
loopne
loop
pop
testl
jecxz
mov
outsb
push
or
mov
nop
xor
cmp
stos
mov
dec
movsl
jg
mov
mov
subb
pop
sahf
mov
loope
xor
clc
cmp
lods
hlt
cmp
push
dec
movsb
iret
adc
adc
and
ds
fcomps
and
mov
lret
shll
lret
fstpt
bound
rcr
add
test
mov
ret
out
adc
cmpsb
mov
cmpb
or
pop
inc
fisubrl
sbb
dec
fdivrp
sub
pusha
sub
inc
push
inc
push
pop
xor
into
xor
mov
adc
sub
mov
pop
push
sbb
lahf
aam
jae,pt
mov
insb
xchg
insl
shr
ret
fcmovu
sbb
jmp
push
imul
jg
testb
adcl
fwait
jg
jp
xor
inc
cmc
outsb
sbb
or
test
ficoms
mov
mov
aam
mov
mov
bound
pop
repz
inc
or
cmpb
add
sti
inc
pop
adc
inc
and
xchg
pusha
ja
imul
dec
addr16
mov
xor
pop
les
ljmp
add
xor
aas
jbe
inc
enter
mov
push
push
xor
insl
xor
cmpsb
sbb
mov
cmpsb
loop
push
jbe
mov
nop
push
hlt
sbb
iret
ds
jmp
mov
fdivl
jp
adc
and
dec
jle
hlt
sub
adc
xchg
call
adc
mov
adc
outsl
push
pop
mov
popf
stc
std
stos
out
pop
cmp
adc
mov
mov
std
pop
test
fwait
enter
dec
push
shlb
in
rcrl
fsubrl
cs
gs
in
adc
cmp
std
je
dec
jae
push
push
pop
out
xchg
sub
push
adc
je
jecxz
xor
mov
add
iret
mov
lret
mov
sbbl
jle
add
and
das
dec
aas
lds
fprem1
sahf
xchg
ret
scas
shll
cltd
xor
adc
cmpl
fdivrp
cltd
loop
push
xchg
sub
push
sub
repnz
jle
hlt
push
and
cltd
mov
pop
add
std
sub
mov
push
or
repnz
sbb
test
mov
pop
inc
adc
jb
popf
rcl
sbb
adc
out
jb
das
popf
and
bnd
sbb
and
ja
cwtl
insl
cmp
sub
sub
push
xchg
cmp
sub
popf
test
inc
sbb
cmp
test
lods
cmpsl
add
push
leave
gs
sub
imul
mov
scas
into
dec
add
mov
jg
push
in
mov
pop
into
stos
pop
push
dec
daa
ret
subl
jecxz
push
popf
stos
rorl
jmp
cmp
xchg
jnp
mov
jo
dec
out
pop
mov
mov
out
pop
mov
xor
dec
inc
push
mov
push
push
divw
ret
or
xor
fdivs
xchg
bound
cmp
or
xchg
jmp
sub
addr16
inc
aas
clc
push
pushf
cwtl
outsb
jp
test
jmp
ss
push
arpl
pop
add
mov
test
sbb
xor
lea
xor
xorb
mov
ja
push
mov
cltd
or
fnsave
cltd
jp
pushf
pop
aaa
cli
adcl
lock
or
dec
mov
pop
adc
addr16
daa
or
pop
jb
sbb
jp
and
push
pop
mov
out
mov
lods
cmp
xor
cli
dec
mov
push
iret
pushl
inc
mov
outsl
sub
cmp
add
xchg
mov
orl
mov
inc
movsl
xchg
sub
les
subl
test
mov
insl
repnz
mov
movsl
inc
or
inc
fucom
jg
jbe
fistps
jmp
xor
cmp
inc
stos
lock
mov
cmpsb
cmc
outsb
and
nop
and
scas
xchg
in
ficoml
inc
test
or
add
rolb
mov
cltd
test
push
stos
pusha
fisttps
sub
lcall
xchg
and
push
inc
and
movsb
faddl
mov
stos
mov
inc
sub
sub
jl
mov
inc
push
inc
mov
mul
out
xchg
sub
lret
fs
mov
jle
pop
or
jne
jb
rolb
pusha
add
inc
sbb
cmp
mov
cmpb
std
pop
fstl
stc
out
pop
xchg
xchg
mov
xchg
cmp
mov
je
test
lcall
iret
cwtl
and
mov
sbb
out
mov
add
jecxz
scas
push
shll
cmpsb
pop
dec
adc
dec
xor
rep
cmpsb
push
push
out
cmp
mov
fisttps
push
jp
lret
pushf
sbb
sbb
xor
jns
outsb
mov
mov
bnd
push
test
fs
repz
cmp
test
insl
or
and
scas
cvtps2pd
push
sbb
jp
ss
ljmp
mov
jg
faddl
arpl
lcall
and
stos
sub
push
xlat
xchg
shlb
xor
sbb
mov
mov
ss
flds
mov
push
cld
or
lods
mov
dec
lea
xorl
in
jmp
sbb
fidivrs
lcall
lcall
in
iret
mov
sub
aad
ret
clc
into
test
cmp
jg
push
xlat
and
dec
stc
dec
sti
lea
data16
fcmovnb
cmp
mov
std
inc
xchg
pop
int
pop
sbb
fdivrp
fdivrp
mov
andl
mov
and
divb
jmp
sti
or
pop
cmp
pusha
jmp
cld
loop
std
pop
pop
sbb
cmp
xchg
add
leave
fldenv
mov
adc
fistpl
das
outsb
insl
test
pop
scas
mov
lock
mov
and
xchg
lock
lds
test
addl
and
add
push
sbb
popf
push
adc
xchg
leave
xor
mov
incl
cli
xorl
push
xchg
jmp
out
fbld
mov
in
rorb
arpl
add
hlt
adc
jmp
arpl
hlt
push
pop
cmpsb
cmpb
dec
fcmovb
sbb
mov
lahf
inc
gs
pushf
dec
dec
mov
insl
push
pop
js
push
pop
je
fnsave
iret
add
sbb
int3
pop
or
lea
adc
pop
scas
cmp
nop
inc
ljmp
cmp
push
dec
pusha
and
fidivs
inc
and
cmpsb
cli
jns
fcomps
mov
lahf
mov
repnz
sbb
test
mov
and
in
notb
sti
fildll
pop
fisubrl
add
outsb
sti
insl
pop
push
xchg
add
or
fcmovnb
sub
dec
lods
ret
push
push
inc
jl
add
into
and
push
lea
rolb
rolb
pop
jae
fisubs
in
xor
mov
shrl
and
shll
sti
mov
aaa
data16
mov
sbb
dec
mov
pop
or
xorl
sbb
gs
test
add
push
ret
jno
dec
add
lret
dec
rol
add
push
cmc
lods
test
pop
sub
pop
in
push
inc
pop
add
mov
cmp
inc
adc
mov
por
push
sbb
sbb
lea
aad
daa
fcoms
pop
in
int
inc
shl
imul
mov
ds
xchg
fdivs
push
loopne
in
cmpsb
push
jle
sbb
sub
mov
add
aaa
mov
es
mov
jecxz
xchg
add
rcl
cmc
mov
pop
add
imul
aam
aas
dec
pop
hlt
int
xchg
pop
cs
sub
loopne
jbe
rolb
stc
inc
outsl
loop
mov
data16
add
pop
adc
push
outsl
xlat
adc
pop
nop
push
sub
pop
pop
jo
shrl
das
pop
cmpsl
dec
sbb
mov
lods
push
adc
sar
add
test
in
mov
sub
mov
dec
or
out
add
cmpsl
lock
mov
int3
es
mov
divl
or
minps
daa
and
in
dec
dec
pop
sbb
mov
mov
dec
subb
imul
xchg
lods
rcrb
outsb
test
cmp
lods
imul
test
adc
pushf
in
rorl
aaa
out
xor
mov
mov
enter
cmp
leave
jno
sbb
rclb
cmp
xlat
mov
dec
pop
in
jge
or
inc
pop
pop
pop
mov
dec
sti
loope
xchg
jge
pusha
jbe
push
jne
sbbb
sbb
in
enter
sar
jns
pop
arpl
xchg
dec
cmp
stos
rolb
ljmp
xchg
lea
pop
into
mov
cmp
ret
push
movsb
sbb
push
lods
jnp
mov
dec
imul
sarl
lret
lahf
movsb
or
fldl
gs
cltd
lahf
ljmp
mov
sbb
jmp
sub
mov
adc
xchg
add
mov
cwtl
jne
adc
sbb
pop
inc
test
out
xchg
clc
mov
leave
outsb
inc
cltd
cli
pop
mov
loop
aas
movsb
aad
adc
sahf
adc
arpl
xor
mov
xor
aas
jns
cmp
fyl2xp1
popf
lods
ja
pop
xor
cli
lods
hlt
sub
insl
push
xchg
xchg
inc
mov
mov
nop
bnd
add
push
push
mov
cmp
push
nop
xchg
aaa
out
call
mov
dec
dec
push
repnz
repz
cmc
inc
addb
or
out
in
in
jge
shll
dec
or
and
daa
xchg
add
in
scas
leavew
loopne
nop
sbb
aaa
sub
neg
mov
or
test
insl
cld
subl
pop
mov
test
test
sub
pop
inc
popf
jecxz
enter
mov
loop
mov
shlb
movsb
or
stc
inc
les
cmp
hlt
sar
pushf
mov
popf
aas
add
jmp
movsl
mov
pop
adc
xchg
or
jnp
sbb
lods
pop
sbb
mov
mov
and
mov
les
adc
pop
pop
shrl
arpl
xchg
xor
fwait
mov
jp
mov
pusha
ret
jmp
mov
rclb
mov
je
or
psubsb
jnp
repnz
hlt
pop
leave
jle
xchg
push
sbb
add
cmp
or
pop
jo
and
xlat
mov
pop
imul
lds
sbb
das
dec
sbb
mov
mov
cwtl
test
push
inc
fdivrp
add
pushf
jno
enter
testb
lods
test
out
repz
orl
xchg
daa
sbb
adc
stos
push
pop
and
add
lods
out
insl
mov
and
mov
psubb
xlat
inc
movsl
fucomi
call
sahf
inc
mov
and
adc
les
sti
repnz
pushf
push
jl
fldenv
cmp
and
jge
iret
stos
push
jae
and
cmp
scas
mov
xchg
and
and
sbb
rcll
popa
fnsave
movsl
or
shrb
scas
les
and
decl
pop
sbb
gs
sahf
les
in
add
lcall
mov
add
push
or
dec
out
push
out
fwait
dec
adc
push
inc
lds
inc
fstps
sub
sti
les
ret
mov
xor
aam
fdivrl
mov
cmpsl
or
add
cmpsb
sbb
jle
mov
dec
mov
pushf
sbbb
inc
out
mov
mov
movsb
int
push
sub
stc
lret
out
cmp
add
pop
xor
or
add
mov
cmp
sub
jl
punpcklbw
adc
inc
lahf
rcl
mov
ja,pt
jmp
and
fidivs
push
scas
stos
frstor
pop
pop
add
add
ret
repnz
pushf
dec
xchg
outsb
ret
sti
das
lock
cmp
stos
rcrb
xchg
inc
mov
addr16
mov
mov
xchg
jle
push
xchg
inc
push
gs
jnp
stc
dec
xor
insl
test
shl
mov
lock
addr16
mov
and
in
xor
fcmovnbe
iret
add
pop
or
mov
dec
call
inc
arpl
mov
stos
and
sysenter
mov
ds
mov
repz
pop
maskmovq
testl
mov
jne
out
mov
sbb
fwait
int3
scas
dec
cld
insl
aam
and
mov
mov
jne
fcompl
js
xlat
cmp
fwait
ss
push
sbb
loope
sub
int
call
scas
or
dec
idivb
pop
jmp
dec
insl
mov
js
js
ja
out
leave
adc
dec
add
ret
push
fwait
scas
sub
cwtl
xchg
mov
push
sahf
mov
mov
mov
das
loop
xchg
outsb
mov
inc
mov
adc
adc
sbbl
les
popf
outsl
cmpsb
sahf
mov
and
testl
and
mov
insl
imul
ja
mov
and
push
inc
mov
sbb
lahf
mov
push
xchg
leave
push
xchg
fdivs
xchg
pop
add
repnz
out
lds
cmc
cmp
jae
pop
popa
pusha
inc
pop
xor
and
fidivrl
jbe
icebp
sbb
push
jno
jle
mov
ljmp
nop
or
rolb
iret
negl
xor
ds
xchg
jbe
or
mov
ret
mov
dec
mov
mov
push
out
das
or
out
je
insl
cltd
dec
aas
jne
mov
dec
insb
es
aas
mov
mov
mov
mov
inc
dec
jnp
dec
je
push
add
in
cmp
dec
sbb
push
push
repz
inc
popa
mov
and
push
cmp
insl
xchg
stos
xor
cmpsb
jno
shlb
xor
add
int
cmp
fwait
xchg
sbb
jecxz
out
fdivs
xchg
fcmovu
pop
mull
int
movsb
test
adc
xchg
sub
xchg
sbb
mov
xor
cmpsb
jge
pop
sar
pop
ss
dec
lds
and
dec
cmpsl
add
mov
dec
or
in
mov
xchg
ret
cwtl
daa
mov
aas
lret
mov
xor
test
fistps
add
inc
push
arpl
jge
pop
dec
add
ficoms
mov
lock
sbb
cs
andl
xor
repz
push
xor
pop
mov
rclb
push
jp
add
sbb
in
sbb
push
movsb
jno
cmpsl
loope
in
lcall
sub
nop
mov
adc
inc
test
fisttpll
fldl
in
cmpl
std
ja
or
ret
jnp
adc
in
pop
std
sub
mov
and
cmp
jb
fcoms
and
jle
out
ret
and
add
inc
mov
mov
dec
cmp
sub
push
out
mov
movsb
mov
push
mov
jbe
cmc
jge
sub
andb
dec
nop
push
rcl
lods
lods
leave
inc
pop
adc
mov
adc
cmp
dec
inc
sbb
push
sbb
xchg
mov
gs
flds
or
in
stos
push
enter
mov
movsl
lea
enter
sbb
jge
mov
and
stc
sti
push
movsb
inc
sbb
outsb
scas
inc
pop
out
mov
rcrb
sti
aad
pop
jb
leave
fsubrl
cmp
adc
push
sub
arpl
xlat
fsts
mov
sbb
adc
inc
in
push
stos
leave
int
jmp
gs
fstpl
sti
das
std
mul
and
cs
xor
scas
inc
je
sub
sbb
sti
push
rclb
and
pop
pop
loopne
rcrl
mov
dec
in
in
subb
adc
xchg
jae
mov
dec
mov
xchg
scas
push
outsb
jo
ss
xor
adc
in
repz
fs
add
inc
inc
mov
into
lds
idivl
xchg
cwtl
push
and
les
sbb
out
loop
xchg
jl
fstps
dec
sbb
mov
or
inc
or
test
je
pop
mov
aad
mov
insl
roll
jnp
or
inc
jmp
sti
jne
xor
jae
adc
push
mov
sbb
shll
push
rorl
add
cmp
and
sbb
and
jp
pop
pop
arpl
jmp
push
cmp
mov
sbb
dec
jl
adc
add
jp
test
cmp
orl
lret
jnp
jl
push
jno
inc
pop
data16
shll
movsb
xchg
nop
call
jb
lea
repz
ret
push
cmc
mov
outsl
sbbb
sub
and
stos
adc
insb
icebp
hlt
mov
scas
cltd
shrb
cmpsl
jl,pn
jl
filds
fwait
into
xchg
mov
hlt
fwait
xchg
jmp
xchg
stc
lret
ds
mov
vrcpss
jmp
test
adc
lahf
int3
cmovnp
xor
popf
or
push
flds
mov
insl
mov
jbe
enter
test
mov
fdivrs
in
fimull
xchg
sbb
jmp
mov
push
sbb
sub
fisubrl
sub
shr
popf
xchg
mov
push
insb
sahf
out
xchg
aas
lret
dec
mov
add
and
dec
stos
daa
and
mov
push
cmpsb
int3
in
adc
ljmp
outsb
ljmp
ss
add
cltd
aam
pop
fisubl
ja
dec
fdiv
imul
or
in
in
addr16
fwait
lahf
sahf
add
pop
into
cmp
cmp
sub
mov
int3
jbe
icebp
icebp
or
call
ret
inc
repz
pop
lret
sti
xchg
push
nop
xor
lret
daa
fisubs
adc
xchg
lods
cmpsl
inc
outsb
out
pushf
jae
mov
out
push
aas
das
xchg
mov
aam
movsl
sub
sub
jno
pushf
mov
hlt
dec
imul
jns
movsl
test
push
cmc
mov
jne
in
pop
xor
xlat
mov
ljmp
adcl
xor
adc
xchg
inc
lds
xchg
shlb
mov
sbb
rorb
sti
addr16
jbe
xor
pop
or
mov
mov
or
dec
rcr
cs
pop
ljmp
pop
add
lahf
insb
and
and
inc
pop
push
mov
inc
jecxz
pop
mov
sahf
jns
ja
pusha
sub
xlat
cmpsb
ja
inc
in
mov
sbb
mov
sbb
mov
xchg
rorb
xor
ret
nop
add
and
loop
mov
pusha
js
lcall
pop
je
jno
stc
out
testl
xor
test
scas
dec
and
popa
insb
enter
adc
mov
rolb
inc
inc
push
out
add
rorb
pop
mov
mov
loop
imulb
leave
ss
aam
xchg
sub
aaa
dec
cmp
rolb
adcb
inc
adc
loop
jno
loop
push
fs
xrelease
xor
aad
sub
xlat
jg
ret
les
add
out
add
mov
aad
fisubs
push
test
jmp
or
jp
test
inc
lret
out
sbb
xor
mov
adc
push
jl
je
mov
out
shrb
add
mov
pop
cld
sub
fisubrl
add
push
mov
dec
lods
push
mov
push
adc
lds
js
insb
cltd
jle
pop
sbb
fimull
sahf
popf
xor
or
sbb
or
sarb
aad
or
mov
fsubp
test
xchg
js
imulb
dec
sbb
jno
insb
xor
xchg
inc
mov
call
iret
test
mov
adc
inc
xor
xlat
lds
jecxz
mov
nop
ja
cmp
sbbl
data16
dec
pop
sahf
xchg
cmp
jns
push
mov
mov
sbb
leave
rcrb
jle
fscale
cli
mov
pop
sub
ret
mov
jecxz
or
in
mov
pop
notl
push
fwait
notb
jp
or
or
pop
xchg
jg
int3
add
inc
clc
cmpl
out
pushf
lds
or
rcrb
mov
ret
leave
into
xchg
and
clc
lret
and
test
sbb
mov
jb
shl
arpl
aam
mov
je
push
mov
pop
insl
or
ret
les
lds
mov
gs
outsl
icebp
xchg
inc
aam
sbb
or
xchg
aam
neg
add
sub
rorl
ret
lods
lret
les
xor
ret
push
pushf
jo
cmp
pushf
mov
ss
icebp
jne
mov
stc
ja
orl
sub
sahf
sti
and
push
mov
addr16
inc
add
sub
xor
mov
push
btsl
arpl
bound
and
pusha
add
popa
adc
icebp
adc
stos
sbb
or
jns
fldt
sub
push
fistps
pop
sbb
xor
cmp
add
cli
mov
dec
scas
dec
mov
cmp
adc
sbb
push
pop
push
test
not
test
cmc
dec
popf
daa
in
test
jne
xor
sbb
outsb
jl
xor
cmpl
mov
in
stc
pop
push
out
sub
es
in
mov
cld
daa
fdivs
loope
lret
sar
js
test
jecxz
jo
lret
aaa
fcom
adc
xchg
ret
idiv
lea
iret
jmp
mov
push
fidivrl
add
xchg
xchg
leave
sub
nop
scas
pop
je
test
dec
pop
pushl
add
pushf
push
adc
test
inc
pop
mov
test
xor
xor
jg
dec
divl
and
pop
in
push
addr16
cld
and
cli
mov
mov
xor
push
aad
sbb
mov
pop
push
pop
test
lcall
sarb
push
inc
repnz
cmp
or
lods
sbb
cmp
mov
rep
test
frstor
pop
push
adc
jmp
pop
adc
lret
rcrl
minps
ror
outsl
xlat
push
adc
ljmp
add
pop
scas
mov
sbb
in
inc
pop
arpl
and
insl
mov
jns
sub
leave
push
xchg
sub
mov
jae
jo
out
rclb
lcall
pusha
mov
sub
dec
xor
int
imul
fildl
cmp
pop
out
adc
test
xor
or
imul
xchg
movsb
sbb
jl
es
or
outsb
fs
pop
push
outsb
xchg
jp
dec
test
and
sbb
loopne
ja
sub
jae
mov
sbb
mov
or
pushf
loopne
out
xlat
pusha
jmp
dec
dec
ja
pop
stc
scas
es
rorl
int
les
ja
sub
repnz
movb
iret
jecxz
imul
push
xchg
pop
or
or
jno
jae
clc
loop
outsb
mov
mov
mov
in
out
mov
aam
outsb
dec
stos
pushl
popa
stos
jmp
out
in
dec
out
adc
mov
bound
movsb
jle
je
outsl
mov
push
push
icebp
mov
sub
pusha
add
stc
loope
or
or
xchg
cld
in
push
in
mov
das
in
sub
or
mov
and
sbb
dec
mov
roll
popf
clc
jb
nop
adc
sbb
xor
subl
inc
or
pop
out
jne
lahf
repz
mov
xor
pop
xchg
pop
lret
fwait
imul
push
clc
in
jno
repz
xor
pop
ret
mov
test
mov
fidivrs
push
mulb
test
dec
and
mov
fstps
nop
adc
in
xor
push
lods
pop
cmpsb
cmp
add
orl
dec
lods
addb
adc
ja
mov
insl
lods
push
jle
xchg
xor
sbb
outsb
pop
add
xchg
call
repz
fstps
sub
in
dec
lock
inc
cwtl
lea
cmp
dec
xchg
js
outsl
mov
mul
pop
xorb
lahf
iret
cmpsb
xchg
jo
push
ret
jp
jecxz
inc
jge
push
hlt
lret
test
dec
mov
jno
xor
insb
push
out
adc
imul
repnz
xchg
div
dec
lods
ljmp
std
mov
push
pop
in
or
pop
xchg
fiaddl
mov
neg
xorb
adc
outsl
mov
adc
jne
mov
or
xor
test
sarl
pop
icebp
xor
sbb
mov
mov
shlb
test
sub
xchg
ret
into
fs
and
inc
mov
xor
sub
inc
rolb
mov
add
pop
sbb
ds
pop
xchg
je
xchg
int
fidivrs
fsub
and
push
out
mov
adc
mul
sub
dec
hlt
dec
sbb
cld
pop
jp
xchg
xor
iret
out
mov
jns
leave
out
or
orl
and
xchg
jp
pop
lods
pop
and
ss
push
les
aam
xor
fwait
push
jbe
andl
lods
orb
cmp
hlt
mov
xorl
mov
cmp
mov
cltd
push
ficoms
fdivl
jae
aad
dec
add
mov
outsl
hlt
jo
mov
cmpsb
mov
loope
xlat
mov
pop
inc
push
mov
out
sbb
les
xor
mov
decb
mov
jbe
lds
lds
pop
cmp
mov
ret
sbb
xchg
rcll
jne
and
fcompl
fwait
mov
mov
or
fcmovnb
lea
mov
xchg
popf
push
mov
mov
dec
sub
ret
sbb
xchg
leave
sub
jmp
cmp
rol
dec
jl
orb
aad
mov
and
push
sahf
xor
jne
gs
jb
jmp
adc
adc
xchg
cmpsb
rcll
data16
mov
aaa
and
cltd
mov
dec
jo
mov
lret
lods
inc
int
ret
das
push
sub
mov
mov
movsl
or
pushf
add
pop
mov
jbe
xor
fdivl
subb
add
shrl
add
push
data16
sti
jmp
cmpsl
or
repz
shlb
pushf
rcr
mov
adc
mov
sbb
mov
add
fldcw
cltd
mov
stos
mov
adc
test
sbb
loope
xlat
and
and
sahf
fbld
incl
xchg
mov
jae
repz
mov
in
cmpsb
stc
push
movb
xchg
push
cwtl
push
inc
inc
mov
aas
mov
push
out
ss
xchg
jno
aam
out
cltd
mov
pushf
inc
jns
insb
fists
sub
imul
shll
lock
sub
testl
jg
stos
ja
test
mov
and
ret
mov
loop
push
rorb
aaa
push
mov
push
test
push
rorb
or
add
xchg
pop
movl
xor
out
ds
add
cmpsb
jge
andl
sbb
xor
lahf
lods
notb
jp
enter
mov
outsb
loop
sub
mov
fiaddl
les
xlat
les
orl
lods
fsubrs
adc
popa
imul
aas
xor
fsubs
cmovge
imulb
or
mov
and
mov
cmp
push
mov
mov
mov
in
outsb
fwait
test
jle
rcrb
lock
ja
fwait
lret
negl
ret
movsb
inc
dec
test
xor
mov
cmc
out
inc
sbb
ret
stos
int
pop
jle
cmp
idivl
add
sbb
add
sbb
xor
adc
push
jg
mov
and
inc
test
or
jmp
jecxz
les
mov
imull
cmc
mov
and
mov
inc
ds
insb
mov
cmpsl
imul
ss
call
and
jmp
sub
fs
adc
xor
es
enter
xchg
ret
movsb
les
cld
mov
daa
fs
jl,pn
push
ljmp
xchg
mov
jge
dec
cmp
sub
iret
shr
inc
callw
push
add
cwtl
mov
sub
shl
sbb
mov
pop
movsl
xchg
das
lcall
mov
rol
ret
pop
stc
xlat
inc
cmc
test
push
mov
jns
sub
inc
fxch
cmpsb
mov
pop
in
stos
add
mov
xlat
popa
daa
out
fucom
inc
sbb
mov
out
sbb
loope
in
dec
sbb
adc
test
sbb
fdivr
cvtss2si
negl
aam
dec
daa
add
push
int3
leave
shll
add
mov
cli
insb
mov
sbb
lret
aas
jb
or
aam
test
push
push
jae
xor
sub
jns
iret
cwtl
xchg
mov
adc
cld
aas
mov
mov
xor
decb
daa
push
pop
sub
arpl
cmp
mov
push
cltd
inc
sbb
or
mov
dec
pop
push
lods
mov
cmp
ljmp
ret
in
ret
mov
lahf
inc
pusha
nop
adc
jbe
pusha
adc
out
mov
cmp
sbb
std
outsl
stos
mov
jne
movsb
jno
mov
test
ficoms
xor
shlb
lret
out
xor
js
sub
and
out
push
ret
test
ret
popf
push
inc
lds
push
fcoms
mov
stc
pop
lods
cld
icebp
cmpb
or
dec
push
rcrl
loop
sar
push
int3
push
movzbl
repz
scas
add
out
test
call
pop
xlat
scas
jle
ljmp
addb
xlat
daa
addb
js
test
hlt
push
pop
xor
mov
mov
cmp
movsb
and
jo
adcl
ja
aaa
daa
mov
push
mov
lock
movsl
mov
ret
cmp
push
ret
loope
cmc
or
xchg
sub
xchg
out
imul
gs
lock
jp
lret
addr16
mov
ret
ljmp
inc
repz
dec
add
mov
mov
loope
rcrb
xor
insl
es
push
add
mov
ja
std
or
push
cmp
ret
push
nopl
pop
test
inc
les
push
icebp
mov
mov
dec
xchg
xchg
mov
or
cmpsb
adc
ljmp
cmp
jns,pt
dec
xchg
dec
and
imul
mov
in
pop
testb
nop
cmp
lds
leave
adc
inc
ljmp
jo
pop
adc
out
xchg
lret
and
adc
jge
xlat
shl
fsts
push
enter
mov
xor
mov
xchg
xor
call
aaa
stc
in
ficoms
pusha
sti
cmpsb
inc
ss
std
icebp
lcall
sti
outsb
cmp
in
aas
iret
cwtl
loopne
jmp
test
mov
ret
push
notl
out
add
in
cmp
cmp
in
cmp
clc
insb
fs
addr16
jbe
dec
iret
outsl
xchg
and
sarl
jmp
xchg
pop
dec
movsl
inc
int
sub
or
scas
test
lods
cs
and
mov
xor
clc
jnp
movsl
mov
gs
outsl
ds
xchg
test
add
mov
imul
push
mov
ljmp
xchg
and
jno
push
lret
dec
test
adcb
and
mov
jp
test
dec
stos
into
and
aas
ret
test
mov
leave
jp
jo
mov
adc
pop
push
icebp
add
mov
insb
mov
stos
jb
fsubs
or
cmp
bound
push
orb
mov
push
sub
push
adc
push
adc
xchg
fisubrs
rcrb
mov
cmpl
fs
fisubrs
xor
sub
dec
push
icebp
xchg
scas
pusha
mov
pop
jp
pushf
inc
add
xchg
addr16
mov
into
mov
loopne
push
hlt
enter
rolb
cmp
xor
pop
fistpll
shl
loop
mov
sbb
aaa
add
mov
sbb
mov
sti
inc
scas
ret
or
adc
add
and
imulb
js
mov
cmp
jno
xchg
xchg
inc
in
int
in
dec
mov
push
lock
pop
add
push
add
inc
mov
loopne
xchg
je
mov
jle
push
arpl
or
mov
adc
or
push
inc
mov
ja
jno
in
or
xor
push
xor
fidivl
add
dec
aad
xchg
gs
fsubrp
mov
push
jno
jecxz
ds
add
push
int3
adc
bound
sub
shrl
scas
and
rcr
je
shll
daa
into
ds
sub
insl
or
pop
or
in
cmpsl
lds
pop
test
or
lock
fs
andb
jecxz
mov
imul
les
js
dec
mov
pop
dec
dec
jg
add
frstor
cmp
mov
add
push
dec
mov
inc
push
es
addb
dec
and
movb
jge
stos
fcmovu
pop
gs
push
jne
cmc
mov
nop
sahf
in
mov
ret
adc
pop
je
and
adc
xchg
sbb
jno
out
cmp
mov
mov
mov
test
push
insl
fs
jge
and
push
jle
mov
sub
rorb
sbb
int3
adc
shrl
sub
mov
pop
insb
inc
cmp
sti
mov
push
inc
xchg
cltd
lds
add
and
fldt
dec
push
push
leave
or
add
adc
aaa
pop
xchg
pop
repnz
inc
ds
stc
pop
push
movsb
popf
pop
fstpt
lds
dec
push
and
mov
into
into
adcl
pop
ja
push
movsb
dec
ss
mov
leave
xchg
jl
add
lods
stos
cmp
stos
and
test
mov
std
or
adc
std
scas
aam
jmp
stos
int3
in
and
lret
cmpsb
jg
sub
push
in
pop
inc
mov
fcmovne
fsub
repnz
repnz
insb
mov
jno
and
inc
pusha
gs
add
sbb
cmp
ds
outsb
stos
gs
iret
mov
xor
add
jns
and
lret
add
sub
cli
sub
mov
jg
jne
pusha
pop
mov
bswap
mov
iret
dec
inc
pop
adc
and
not
xchg
jne
cmp
clc
jnp
je
ja
movsb
scas
cmc
test
lock
std
pushf
adc
sub
sbb
push
imul
bound
cmp
std
hlt
lods
sti
mov
sub
imul
shrb
jecxz
add
jmp
imul
xor
ret
xchg
push
fcoms
lret
cwtl
push
mov
hlt
enter
mov
and
leave
inc
lods
and
cmp
mov
jo
mov
lods
or
faddl
adcl
out
inc
xchg
repnz
mov
subl
pusha
sahf
out
out
mov
arpl
outsb
inc
cmpsl
adc
sub
fwait
aas
mov
xor
movsb
inc
popf
push
mov
mov
mov
mov
pop
mov
adc
mov
sub
pop
icebp
cmpsl
dec
rcrb
mov
repz
xor
es
mov
and
push
add
pop
sub
dec
pop
pusha
adc
pushf
test
cmp
mov
call
cmp
mov
std
xor
xor
cmpsb
pop
clc
xor
and
pop
loopne
cwtl
insl
mov
enter
mov
test
es
dec
inc
mov
cld
jmp
insb
and
int
push
cs
fcomps
repnz
mov
push
lods
or
insb
test
sub
push
icebp
scas
push
jmp
jge
cwtl
insl
aad
jg
add
insb
js
cmpl
push
imul
rolb
jns
bnd
xor
mov
dec
mov
cmc
add
lcall
popf
negb
cmp
xor
ret
mov
jmp
ljmp
push
out
rorb
shlb
rcll
cltd
lods
ljmp
leave
pop
sub
out
cwtl
rcrb
sbb
in
cmp
sbb
idivb
inc
jnp
shrb
lea
stos
ja
cmp
or
add
push
test
rcrl
loopne
test
jg
insl
cmc
iret
pusha
add
aas
imul
sub
xor
jp
fstps
mov
les
ficoms
nop
out
inc
inc
add
hlt
mov
test
fdivl
cmp
mov
xchg
in
mov
outsl
es
xor
sti
jno
dec
mov
and
mov
mov
adc
arpl
sbb
mov
cmp
mov
pop
adc
mov
sbb
je
xchg
shll
push
cli
shld
pop
mov
divl
jg
xchg
into
sti
aam
and
jbe
ret
std
lods
gs
xchg
test
cmpsl
into
adc
andl
pop
push
mov
mov
mov
adc
rcr
adc
roll
sub
flds
jne
and
scas
repnz
push
ret
out
rolb
push
xchg
mov
cli
call
xor
push
adc
enter
push
loope
and
sub
cltd
push
push
out
cmp
sahf
add
push
nop
repz
pop
jb
inc
xchg
inc
cltd
out
mull
add
lods
push
in
adc
fcmovne
gs
fnstsw
and
movsb
pushl
jnp
xlat
xchg
dec
pop
lret
cmp
sbb
je
pop
jno
les
loop
shrb
push
pop
cltd
jae
data16
shlb
inc
inc
insl
or
sbb
in
add
pop
sar
xchg
cmp
mov
insb
mov
pop
mov
enter
scas
out
push
pop
sub
fwait
inc
mov
push
popf
jmp
xor
aaa
mov
add
inc
mov
fnstcw
mov
inc
push
sbb
cld
push
push
push
sub
jno
xor
and
int
fcomi
inc
or
int
xlat
movsl
inc
in
jnp
cmp
loopne
sub
adc
cmpsb
add
cmp
add
test
test
inc
sub
js
cmp
jo
mov
out
push
pop
jae
cmp
clc
test
lods
fwait
clc
inc
jl
movsb
pop
mov
clc
push
out
or
outsb
push
lds
cli
xchg
in
in
mov
sub
into
inc
je
pop
sbb
lcall
cmp
daa
rcl
pop
mov
fisubs
add
jmp
popa
mov
mov
lods
jle
mov
das
jb
in
mov
push
fwait
pop
arpl
into
add
hlt
sbb
cld
mov
dec
sub
xchg
cwtl
inc
ljmp
testl
push
and
mov
sbb
cs
fldt
push
adc
cwtl
push
ret
xlat
mov
xchg
jae
aas
mov
adc
or
test
cmp
movsl
push
jmp
push
sub
das
fmull
mov
pushf
inc
cmp
decl
sub
js
mul
pop
mov
adc
hlt
mov
stc
add
cli
add
xchg
push
pusha
stos
jle
movsl
nop
mov
pop
cli
repz
mov
xchg
add
adc
dec
out
jmp
pushf
jb
mov
cld
mov
mov
nop
push
push
push
mov
testb
push
lds
add
ja
pop
inc
mov
das
and
fdiv
test
add
sahf
cmp
xchg
fwait
aad
lds
cltd
lods
outsb
scas
or
and
gs
inc
push
adc
dec
xor
push
mov
push
cmc
fsubs
mov
adc
pop
mov
pop
js
pop
repnz
pop
loope
bound
in
jns
je
pop
sahf
ljmp
sub
cwtl
jle
cld
call
aaa
int3
cmp
lds
loopne
in
test
repz
out
mov
and
rorl
jo
cld
fisttpll
mov
xchg
sub
mov
ret
dec
clc
cli
add
add
movsb
addr16
cltd
aaa
xchg
ds
cmpsb
cmp
mov
adc
and
push
mov
loop
push
mov
cmp
jle
xchg
xchg
ja
mov
int
jne
push
aam
int3
pop
and
dec
fs
push
ja
jmp
dec
xor
rep
jno
sti
in
cmp
icebp
xor
add
mov
cmp
jge
aas
xchg
inc
outsl
out
xor
pushf
mov
sub
jno
add
pop
push
mov
icebp
int3
and
xchg
xchg
shrb
push
pop
mov
push
jmp
lods
add
and
call
clc
jecxz
mov
sub
or
adcb
mov
cmc
mov
aad
and
dec
pop
mov
ret
push
mov
push
into
std
sbb
dec
sbb
sti
js
xor
sbb
ret
cmpb
mov
add
dec
mov
mov
xor
mov
inc
hlt
test
xchg
add
sbb
dec
inc
jnp
insb
loop
xor
pop
cmp
xchg
push
xchg
mov
and
cmpl
rcll
movsl
add
popa
sti
fcoml
ss
js
and
ss
aaa
mov
dec
je
mov
test
mov
push
int3
jno
push
sub
iret
clc
std
push
jnp
push
xchg
pop
aad
fcoms
or
jle
iret
mov
outsb
push
cmp
pop
and
jae
jbe
in
jbe
dec
mov
lods
or
test
cltd
data16
adc
sarb
jns
mov
ljmp
push
cmpsb
loope
or
cmc
mov
popf
stos
jp
fwait
adc
arpl
pop
mov
lods
add
fmull
imul
lret
sahf
loope
mov
mov
inc
mov
push
push
jp
sbb
loope
mov
ljmp
push
add
test
cli
clc
lods
jno
push
xchg
lret
pop
mov
ret
mov
add
cmc
je
jg
push
sub
out
pop
int
sub
loopne
push
mov
sti
cmp
repz
fistpl
pop
mov
mov
adc
inc
push
jp
jns
je
ljmp
xchg
add
fidivrl
out
dec
push
jno
cmpsb
call
jno
rcrb
ret
aaa
inc
jbe
push
sub
push
sub
cmpsb
call
xchg
push
xor
add
ficoms
subl
or
loop
shlb
inc
icebp
pop
fildll
loope
cmpsb
sub
ljmp
leave
clc
mov
fidivrs
dec
cwtl
add
cmp
pop
cmpsb
jb
cs
pop
out
mov
insb
cmp
mov
test
lock
shr
cmp
push
clc
popa
cwtl
aaa
sub
mov
jno
adc
mov
pusha
jnp
xchg
jg
mov
scas
test
inc
mov
cli
dec
jnp
xchg
rolb
push
or
dec
insb
mov
mov
sahf
roll
aad
insl
pop
scas
lahf
filds
aad
dec
inc
icebp
push
push
fld
cmp
cmp
push
test
mov
lods
or
leave
lcall
ret
movb
in
xchg
rorb
mov
cvtdq2ps
insl
cli
jecxz
mov
inc
insb
shlb
xlat
lea
ss
mov
out
cmp
xor
pop
imul
pop
cwtl
aam
in
cmc
mov
mov
lock
stc
ret
lahf
pop
sub
and
xor
pop
orb
adc
pop
adc
push
cmp
xchg
jmp
jmp
dec
jnp
sbb
aam
mov
pop
cmp
aad
xchg
push
in
cmp
pop
cmpsl
cs
repz
dec
mov
xchg
sti
cltd
xor
pop
mov
and
clc
add
pop
sarb
cmpsl
test
sub
push
rcrb
stos
daa
jg
mov
push
cmp
push
orb
mov
in
mov
movsb
cld
mov
stc
and
add
lcall
cmp
fildl
cld
cmp
push
jmp
xlat
outsb
js
inc
push
and
xchg
adc
rcr
mov
lods
icebp
xor
fwait
cmp
outsb
lock
loope
cmpl
mov
adc
rorl
lcall
and
cmp
sbb
sub
xor
repnz
scas
das
or
mov
xchg
mov
push
stc
mov
ret
add
outsl
cwtl
sub
push
rep
lods
push
and
ss
sbb
cltd
aaa
jecxz
ja
ds
pushf
adc
xor
add
test
in
add
fsubrs
xchg
jno
add
cmp
rcl
aam
lods
xor
out
mov
cwtl
push
je
aad
inc
mov
adc
lods
fwait
loope
daa
out
push
nop
add
ficomps
clc
push
adc
sarb
outsb
or
add
add
loop
hlt
push
or
dec
pop
lea
cmc
mov
push
aad
es
cmpsl
or
jmp
jnp
fiadds
push
xor
icebp
ljmp
xchg
xor
adc
loope
or
xor
incl
in
and
rcl
or
mov
adc
int3
mov
stos
test
dec
leave
mov
stos
jle
push
movsl
pop
test
lret
or
mov
call
std
in
pop
sti
aad
and
insl
pop
inc
add
mov
mov
cmp
je
sbb
mov
jnp
mov
mov
div
comiss
mov
xchg
dec
pop
outsb
push
mov
jns
jae
xor
rol
push
xchg
test
fcomi
pusha
pop
push
mov
jle
push
push
mov
xor
das
dec
fxch
icebp
loope
popf
ficoms
cmp
outsb
cmpsl
gs
sub
push
mov
or
and
addr16
xchg
adc
insl
jle
ds
xor
mov
call
fdivl
jne
pop
dec
adc
stc
and
push
cmpsb
cwtl
push
pop
mov
pop
out
or
pop
std
les
incl
fnstcw
add
lret
dec
fistpl
imul
push
add
movsb
mov
xchg
loope
icebp
jge
pushf
jge
push
push
pop
movl
mov
xorl
mov
cmp
es
adc
cmpsl
mov
movsb
icebp
leave
mov
mov
loop
or
jmp
pop
mov
and
dec
fistps
hlt
ss
out
ret
push
cld
dec
divl
faddl
and
imul
mov
or
notl
sbb
into
insl
xchg
repnz
scas
push
cmp
popa
sbb
jo
out
enter
bound
dec
and
cs
fwait
lahf
inc
jmp
sub
std
push
test
mov
in
mov
add
cwtl
movl
fldt
push
rclb
std
mov
pop
movsl
jp
fisttps
cmp
movsl
fwait
sub
push
dec
push
inc
mov
add
clc
out
push
xor
add
loope
mov
mov
enter
aas
aas
xchg
fcoms
adc
in
cwtl
xor
or
mov
ds
xchg
dec
fisubrl
fdivrl
cltd
mov
scas
cmpl
stc
push
pop
stos
pop
popf
add
mov
push
pop
iret
aam
push
or
lods
adc
mov
mov
hlt
inc
adc
xchg
loope
cwtl
sbb
cli
dec
leave
leave
sbb
or
mov
pop
sar
cmp
adc
stos
sub
imul
fwait
jg
xor
sahf
xor
xchg
mov
fdivrp
imul
stos
inc
dec
repnz
arpl
in
fs
sbb
fistpl
xchg
jb
fldenv
pop
inc
in
and
add
jnp
and
or
cmp
jge
popf
cwtl
aam
rcrl
mov
pop
test
pop
mov
out
repz
leave
xchg
rcll
jle
int
int3
xchg
arpl
jb
xchg
xor
fists
sbb
xchg
pop
andb
adcb
xor
add
dec
rclb
xchg
xchg
cs
mov
mov
out
mov
fidivrs
mov
or
xchg
pop
add
sub
mov
dec
pop
leave
enter
xor
mov
lods
cmp
jl
sub
inc
call
aas
insb
test
rolb
aas
mov
fs
test
cmpsl
das
inc
add
leave
sub
pop
rolb
sub
mov
mov
inc
and
jo
lahf
es
shl
inc
lds
mov
icebp
cmpl
popf
aam
and
cld
dec
aas
in
hlt
push
cli
fnsave
mov
imul
popf
repnz
clc
imul
sahf
pusha
push
push
les
popf
xchg
std
int3
scas
inc
xor
or
pop
inc
out
jne
and
nop
lods
add
mov
fwait
dec
and
shll
insb
divl
push
lret
jns
sbb
sub
fistl
jge
pushf
pop
roll
add
pop
or
dec
jbe
rol
push
shlb
mov
dec
mov
and
js
frstor
aam
mov
xchg
cld
jg
mov
repz
pop
and
rcll
leave
sub
cmc
cwtl
push
cmp
shr
mov
fstpt
cmp
add
jmp
jns
fwait
push
fdivrl
jno
lods
inc
or
jmp
daa
push
fcomp
in
jnp
or
in
adc
mov
out
lock
outsb
ficoms
xchg
xor
hlt
push
mov
and
mov
xchg
sub
cltd
repnz
mov
sub
loope
add
rcrb
push
xor
sahf
jb
cmp
push
pop
js
dec
lea
stos
mov
aaa
dec
rcl
pop
out
popf
idivl
rolb
pop
loope
sbb
sti
and
fs
jbe
sbb
out
adc
mov
and
cmpsl
inc
add
sub
jae
xchg
and
xchg
fmuls
xor
cli
loop
add
lret
push
and
and
jecxz
aam
cmp
push
dec
pop
stc
mov
subl
jae
mov
test
clc
sti
pop
jg
lret
adc
cmp
cmc
add
js
rolb
pushf
movsl
jb
pop
scas
addr16
mov
jle
sbb
fs
and
lods
stos
out
cmp
pusha
pop
bound
ficompl
mov
movq
mov
adc
add
shr
inc
add
mov
mov
mov
sbb
inc
mov
mov
sarb
stos
pop
xchg
push
idivl
or
dec
nop
out
xchg
ficoml
add
shrb
jg
stc
cli
cmp
movsb
or
jecxz
and
cmpsl
pop
or
in
push
fldcw
xchg
jl
divb
jecxz
pop
out
lods
mov
ja
pop
inc
imul
fwait
pop
fldl2e
mov
outsl
iret
mov
test
and
add
mov
pop
inc
sbb
cmpsb
lcall
test
insb
popa
jecxz
das
push
dec
or
push
ret
push
sbbl
jb
xchg
pusha
or
push
aas
inc
stos
mov
cmc
rclb
or
cmpsl
mulb
cmpsb
mov
scas
je
or
aas
movsl
cmc
add
add
pop
cmp
jmp
popa
insb
bound
clc
push
into
aaa
and
fcompl
fstps
push
aad
out
push
cmp
cmpsb
xlat
bound
push
mov
ljmp
or
sbb
xchg
pop
push
xor
xchg
mov
sub
scas
inc
pop
push
push
lods
mov
push
rolb
dec
or
int
int3
xchg
and
jle
iret
inc
xchg
or
pop
in
xor
push
dec
sti
jl
push
jb
clc
dec
add
leave
idivb
ss
mov
jl
mov
repnz
aas
fists
mov
dec
cmp
jo
dec
leave
cmp
shrl
jl
out
stos
cmc
aad
icebp
je
jecxz
sahf
roll
jle
mov
push
mov
js
xor
aam
jo
inc
sbb
adc
adc
and
jp
int3
mov
sub
cmc
pop
and
lock
in
nop
enter
inc
xlat
les
xorl
sbb
pop
ds
mov
lods
and
mov
sub
repz
jle
cld
cwtl
adc
mov
inc
push
fs
testl
int
or
xchg
xchg
iret
push
adc
mov
dec
cmc
lods
scas
inc
fcmove
lahf
inc
sub
jp
lea
and
mov
sbb
pop
pop
loopne
or
mov
mov
sbb
lcall
xor
inc
fisttps
test
data16
add
pop
jp
jle
lcall
aas
int
scas
sub
es
xchg
andb
jge
cli
lea
jbe
jmp
adc
push
add
pop
fidivrl
or
into
push
add
sub
inc
jae
in
mov
sahf
test
dec
rcll
ficoms
jecxz
or
mov
add
jb
add
pusha
iret
and
fwait
jo
in
sbb
sub
test
xchg
andl
test
fsts
push
mov
xchg
sti
sub
ret
xchg
clc
and
int
sahf
in
addr16
ds
adc
incl
mov
pushf
fistl
pop
mov
imul
jmp
xor
or
jmp
movsb
iret
mov
push
mov
imul
jns
out
ss
mov
lods
xchg
call
aas
call
pop
xchg
cmp
negl
cmp
mov
rclb
pop
in
icebp
pusha
std
lods
daa
lahf
xor
pop
or
adc
xor
aam
cmpsl
mov
xor
in
mov
or
inc
cmpsb
sub
dec
cs
xlat
push
and
nop
push
mull
into
xchg
xor
push
xchg
jecxz
jl
adc
ss
mov
cmp
fnstenv
mov
and
jmp
xchg
ret
or
sti
sub
mov
les
cmp
sub
les
fisttpl
out
bound
adc
push
cmp
jg
mov
xor
jmp
jne
or
and
loopne
sub
jmp
andb
scas
xlat
push
aam
inc
cmp
sahf
in
ja
shlb
or
filds
int
data16
or
xor
out
repz
ljmp
jg
lcall
dec
repz
mov
inc
jecxz
shrb
pop
xchg
pop
mov
sti
inc
outsl
ret
add
or
repz
or
add
je
and
and
xor
xchg
or
adc
int
jmp
xor
shll
dec
add
mov
jo
test
jg
rcrl
iret
in
xor
decl
push
mov
fisubl
xchg
mov
loope
mov
add
int
orb
xor
cmp
xchg
pop
lock
xor
ret
xchg
xor
mov
mov
adcb
or
push
mov
sub
push
leave
lret
pop
cmp
xchg
js
insb
sub
ret
ret
push
popf
into
mov
xchg
testl
dec
inc
test
mov
outsl
cmp
or
adc
pop
js
cmp
mov
mov
popaw
or
dec
pop
mov
sbb
fcom
push
lods
repz
ror
xor
inc
out
js
and
lret
aaa
mov
flds
in
inc
rol
out
cwtl
stc
or
dec
loop
jmp
cld
call
mov
cwtl
pop
and
sbb
push
pop
dec
inc
xor
pop
js
lahf
cli
aam
scas
cld
repz
push
shrb
imul
ficompl
cmp
repz
out
xchg
dec
sbb
jecxz
sub
movsl
iret
mov
aaa
inc
loope
sbb
cs
mov
jge
sbb
pop
lds
stos
pop
add
add
std
mov
stc
fisttpl
pop
mov
js
addr16
xchg
xorb
pop
lds
push
jo
daa
test
dec
and
xchg
xorb
jbe
add
lahf
and
mov
sbb
sub
xor
sub
enter
andb
fildl
int
jmp
frstor
pop
add
jp
into
jle
testl
icebp
dec
dec
mov
mov
inc
mov
int
sbb
xchg
sbb
rorb
stos
cmp
inc
out
sbb
fcoml
cmp
aam
in
xor
mov
lock
gs
cmp
loop
xchg
jecxz,pt
push
dec
push
add
clc
es
add
jne
lahf
pop
data16
aad
sbb
gs
ja
mov
sub
cmp
jg
stos
cmp
lods
jecxz
dec
fidivl
inc
add
icebp
pop
das
pop
mov
lock
jno
or
loopne
adc
adc
and
jge
fdivrl
jecxz
xor
out
cs
sti
or
repz
cmp
sbb
mov
pop
sbb
es
xchg
dec
inc
repnz
lds
xor
mov
sbb
push
push
push
xchg
dec
movsb
test
sahf
ss
or
mov
ficomps
pop
enter
jle
lret
test
and
shufps
jb
out
call
lea
test
jl
rclb
inc
xchg
sbb
cltd
icebp
mov
and
sub
mov
push
scas
loope
andb
ret
mov
push
popa
sbbb
mov
add
fsubrl
mov
mov
sbb
adc
in
loopne
or
dec
add
cmp
movsl
jmp
daa
movsl
rorb
sarb
aas
hlt
adc
mov
fs
mov
dec
je
add
adc
adc
sbb
adc
rorl
and
push
bnd
out
inc
inc
hlt
push
clc
add
xchg
mov
out
test
test
sbb
sub
sbb
bound
out
aas
and
pop
push
test
inc
repz
pop
xchg
inc
xor
push
lds
mov
or
in
cmpsl
cmp
jbe
leave
test
test
mov
or
cmp
fsubr
out
lds
mov
xor
ljmp
loop
mov
mov
mul
clc
xlat
or
ljmp
scas
lods
lret
flds
mov
dec
jbe
mov
inc
das
sarb
add
pop
push
cmp
stc
mov
aas
add
inc
pop
lret
and
sti
loop
mov
lods
mov
sbb
popa
and
xor
fwait
sub
jb
out
push
inc
addr16
push
or
pushf
cs
sbb
inc
repnz
adc
cmp
andl
dec
cmp
mov
leave
fdivr
jge
xchg
or
shl
hlt
and
js
outsb
inc
xchg
adc
lret
dec
insl
inc
in
sbb
or
inc
inc
aam
push
js
pop
das
jecxz
sahf
xchg
mov
mov
addr16
inc
mov
cmp
jae
lods
ljmp
mov
pop
mov
lahf
test
push
dec
mov
sub
fistl
cmpsl
flds
mov
cmp
movsb
mov
mov
in
add
mov
xchg
sahf
out
xchg
sub
pop
lds
stc
jl
lea
mov
adc
incb
je
enter
std
insl
lds
test
cld
fisubrs
cltd
dec
lcall
add
cmp
dec
mov
mov
cmp
cmp
mov
ret
pop
push
add
pop
mov
or
jle
xchg
movsl
inc
in
push
fucomp
or
lcall
fidivrl
pop
jo
imul
mov
or
sub
out
jae
loop
mov
lret
ljmp
fimuls
addb
pusha
lock
mov
ja
mov
sub
cwtl
pop
push
jl
pop
mov
das
aad
imul
pop
mov
jno
cmp
inc
xchg
lcall
mov
sbbb
push
xor
test
sub
add
imul
xchg
xor
or
or
loope
mov
lcall
jb
out
mov
test
cmc
dec
cmp
das
and
lahf
pop
pop
cmp
sbb
adcl
dec
inc
and
cmp
lods
enter
jb
pop
lods
push
push
push
push
into
sub
shlb
shl
je
add
mov
cmp
mov
nop
jecxz
in
push
js
loope
mov
cld
ja
dec
mov
push
cwtl
push
shll
iret
cmpsl
cmp
or
lods
es
cmpsb
shr
movsl
add
mov
mov
push
xchg
pushf
pop
push
and
adc
xchg
cmp
mov
dec
and
shlb
pushf
out
jne
out
sbb
add
mov
in
jg
pop
insb
push
in
mov
test
insb
pop
xchg
sbb
and
shl
iret
mov
sahf
adc
push
mov
out
sub
mov
ss
arpl
dec
nop
dec
jmp
out
inc
cmc
test
push
mov
dec
stos
pop
jns
dec
jp
inc
outsl
jns
movsb
jns
cli
lds
fs
cmpsl
jl
lahf
pop
pop
call
add
data16
hlt
add
dec
ficompl
fmul
loopne
popa
cmp
xor
mov
and
test
fistpll
test
pusha
inc
pushf
rol
dec
ljmp
adc
ror
inc
push
adc
pop
aam
jp
xor
decl
and
cmp
push
fs
inc
inc
stc
xchg
or
daa
imul
dec
sub
cpuid
pop
stos
mov
push
fcoms
sub
movsb
dec
xchg
int
loop
rorl
jae
mov
pop
cmp
mov
sahf
out
negl
imul
jae
es
mov
inc
mov
xchg
js
ret
enter
int3
outsb
in
mov
movsl
lret
ficoms
mov
sti
sbb
leave
and
xchg
lret
mov
repz
in
xor
jl
jl
rolb
out
cltd
ds
fyl2x
sub
call
sbb
daa
das
pusha
mov
aad
sahf
js
push
sub
sbb
sub
das
sub
or
adc
imul
push
and
cmp
push
sbb
rorl
add
repz
sub
dec
pop
unpcklps
pushl
lea
adc
clflush
xor
sub
int
ss
orl
imul
or
aad
aad
enter
add
jge
or
call
aad
out
clc
sbb
pushf
rcrb
loope
hlt
enter
xor
mov
ja
ljmp
dec
test
bound
sub
repz
sbb
xor
adcl
mov
js
adc
cmpsb
xor
push
loope
call
gs
int3
fisttps
xchg
mov
insb
hlt
rorl
mov
xor
popf
hlt
adc
pushf
sub
outsb
popa
pop
and
mov
mov
cmpsl
cli
mov
jbe
push
xchg
mov
insl
jo
pop
pop
icebp
sbb
out
mov
dec
cmp
dec
clc
jno
lcall
jbe
das
sbb
xor
test
je
xor
inc
xchg
push
cltd
stc
sarb
or
add
call
adc
mov
shlb
mov
sbb
mov
cli
inc
xorl
jmp
mov
sub
adc
mov
stc
or
or
push
in
mov
out
xlat
inc
scas
cmp
jbe
adc
rcrl
pop
and
pusha
icebp
in
inc
mov
in
lahf
ja
pop
fdiv
stos
gs
mov
popa
lret
adc
fcmovu
aad
incb
inc
in
mov
inc
or
xor
daa
add
mov
adc
sbb
flds
lcall
sub
xchg
je
push
sub
push
in
fwait
mov
add
mov
xor
out
inc
dec
shll
mov
adc
add
faddl
test
cwtl
aam
sahf
sub
add
push
scas
cwtl
fwait
jns
sub
fnsave
push
loope
mov
fldt
ljmp
lahf
fstp
aaa
adc
dec
sar
shll
jno
jl
push
xchg
sub
out
jno
push
js
jg
mov
mov
or
out
mov
or
in
loopne,pn
xor
je
mov
sbb
test
push
cmp
imul
ljmp
aaa
das
fistl
push
mov
ret
inc
leave
cmpsl
xchg
xor
and
xchg
mov
rcrl
bound
inc
mov
sti
and
or
jle
inc
fnstsw
cs
test
dec
adc
inc
xor
jnp
push
rcrl
jle
cwtl
dec
mov
lock
jb
push
pop
cmp
addr16
adc
jno
daa
dec
jo
stos
insl
adc
sbb
sbb
mov
mov
mov
push
or
repz
outsb
or
std
lret
shl
cmc
das
ficoms
lea
mov
pop
push
div
lea
xchg
adc
mov
cmp
test
ja
and
pop
inc
je
fbld
sahf
jp
dec
movsb
lock
mov
jae
imul
in
cmp
stos
out
scas
out
das
ds
mov
xlat
add
sbb
fadds
mov
movb
in
shll
mov
fstpt
popf
dec
xor
mov
fldcw
mov
or
push
lahf
xchg
adc
cmp
adc
cmp
cmp
sub
xchg
sub
xchg
pop
stc
jo
cmp
shl
pop
or
push
pop
sti
xchg
fidivrl
pusha
and
xchg
das
sbb
or
pop
test
or
or
inc
add
mov
mov
push
push
fdivrp
dec
mov
movsb
add
movsl
inc
shll
push
iret
or
sbb
insb
loop
jnp
push
cmp
cmp
add
jne
push
xor
xchg
sbb
test
jnp
adc
aaa
adc
mov
adc
xchg
aad
lods
pop
xchg
outsl
rorl
push
push
int3
stos
cltd
data16
mov
cs
and
inc
cmp
ret
jecxz
lret
bound
aam
inc
testb
jne
rorb
addr16
dec
push
add
jbe
into
push
push
sbb
cmc
sbb
add
dec
push
enter
mov
fcomps
mov
xlat
sub
leave
adcb
mov
test
ds
imul
jmp
adc
call
dec
nop
and
push
fidivs
inc
push
mov
mov
adc
mov
push
sbb
dec
pop
xor
test
xchg
pop
mov
rclb
cwtl
or
xor
int3
and
stc
or
mov
pop
std
hlt
mov
add
mov
and
enter
movsl
test
jae
mov
push
lcall
outsb
std
mov
je
xchg
fwait
icebp
jmp
cmpsb
and
rolb
xchg
jo
cli
cwtl
and
adc
and
xor
fs
dec
inc
mov
movsw
pop
pop
mov
push
stos
fucom
jae
add
jg
jmp
mov
sub
sub
xchg
fwait
xchg
mov
dec
cmp
sbb
sub
imul
leave
out
jnp
cmp
mov
out
jns
in
dec
scas
push
rorl
mov
mov
adc
and
dec
jae
jmp
inc
mov
loope
xchg
cmc
dec
subl
xchg
mov
in
lock
mov
add
repnz
jno
idivl
adc
push
pop
xor
xchg
or
nop
adc
fldcw
sub
fsts
xor
jg
mov
jp
dec
push
dec
mov
cmp
push
adc
loopne
push
or
adc
adc
xchg
sbb
ficompl
stc
mov
mov
mov
inc
cwtl
add
sbb
adc
repnz
jns
fildl
cld
inc
shrl
rcrb
push
push
test
mov
xor
and
fildll
arpl
popf
and
into
mov
dec
rcll
scas
sub
mov
add
jae
out
pop
jnp
mov
ss
xlat
cld
sbb
jg
push
out
sar
cmpsb
hlt
dec
sub
iret
fstl
mov
clc
and
bound
stc
jge
cmp
or
xor
pop
add
lcall
adc
subb
jnp
leave
and
bound
jecxz
andb
xchg
lds
lods
mov
out
lds
mov
pop
scas
dec
into
adc
daa
outsb
adc
scas
cmp
les
mov
mov
dec
mov
sbb
mov
or
negl
int
cmp
stos
aam
das
jb
add
jo
pop
jo
call
sbb
es
or
mov
incb
cmp
scas
pop
jbe
mov
dec
push
mov
jo
out
lods
add
mov
inc
sbbb
cmp
push
js
add
and
sub
sub
fs
nop
fucom
movsb
jb
cmp
loope
inc
in
mov
cmp
rcr
cs
xor
and
pop
cmp
aaa
add
pop
add
test
test
cmp
hlt
mov
and
push
xchg
mov
mov
push
lret
and
sub
xchg
in
hlt
je
mov
push
stos
out
inc
xor
push
gs
xor
jmp
cld
xchg
pop
adc
pop
jl
adc
push
lock
jg
neg
popf
in
decl
nop
jne
iret
sub
xchg
sbb
imul
pop
mov
test
aam
add
fsubrp
loope
js
aad
cli
dec
or
push
or
stos
inc
sbb
loopne
sub
jnp
mov
push
out
test
xor
inc
sub
sbb
and
inc
mov
pop
ss
mov
push
or
push
jg
push
and
rol
xchg
scas
je
ret
dec
xor
call
or
sbb
add
or
bound
sti
mov
xor
pop
fmuls
cmc
pop
mov
push
sbb
mov
nop
mov
xor
fnstsw
and
in
mov
scas
inc
je
add
jno
push
cli
sub
aaa
sub
mov
lods
mov
mov
dec
loopne
dec
xor
jle
push
stc
inc
sbb
out
scas
divl
loop
pop
push
mov
add
pop
jl
aad
and
mov
pusha
js
jmp
aad
pusha
lea
popf
lods
xor
fucomp
adc
lock
int3
sbb
imul
aam
xor
adc
sub
movsb
inc
out
insb
push
rcll
das
add
sti
and
mov
mov
mov
dec
mov
std
jne
sub
addr16
lahf
push
sbb
cwtl
dec
xorl
in
xlat
jbe
stos
xchg
inc
push
xchg
mov
rolb
and
bound
or
xchg
xchg
adc
fstl
aaa
or
out
sub
outsb
xchg
xchg
mov
and
push
pop
and
cwtl
and
or
outsl
mov
push
inc
sahf
xor
in
xor
xchg
xchg
mul
test
or
lcall
stos
aaa
je
aaa
sahf
inc
and
push
xlat
jnp
pushf
mov
adc
loopne
out
pop
decb
sbb
jp
sar
jecxz
fwait
je
test
in
data16
adc
popa
jp
or
fisubl
xor
adcl
cld
inc
fistl
push
inc
or
push
add
xchg
xchg
mov
shll
xor
imul
xchg
cmpsl
into
mov
rolb
xchg
pop
repnz
and
adc
out
dec
imul
repz
push
or
mov
xlat
es
out
imul
sbb
rorb
lock
add
std
xchg
das
lcall
cmp
ficompl
lock
dec
pop
ret
outsb
push
into
fisubrs
sete
or
mov
mov
imul
andb
adc
sahf
pop
sub
pushf
mov
outsl
test
inc
bound
cmp
inc
and
ljmp
sbb
push
ret
icebp
pop
sbb
push
jne
pop
rcrl
sub
popf
data16
sar
xor
out
frstor
mov
push
cmp
mov
test
std
nop
mov
into
adc
pop
rcl
adc
fstps
das
jg
mov
xor
fstps
stos
cmp
std
inc
adc
out
or
lcall
xchg
cmp
clc
adc
mov
add
bound
out
sti
iret
sbb
adc
xchg
jmp
mov
addr16
stos
dec
popf
fs
mov
pop
jns
push
adc
mov
ljmp
loope
insl
add
lahf
repz
adc
jbe
xchg
and
imul
in
cmp
adc
adc
ficoms
xor
test
scas
sub
jb
xchg
sub
inc
cmp
scas
sbb
inc
mov
mov
push
stos
xchg
pop
inc
loope
xor
movsb
loope
cltd
cli
mov
jg
shll
xor
adc
add
jl
mov
push
inc
xchg
mov
std
inc
sti
int
sbb
data16
dec
mov
std
mov
cmpb
xlat
inc
and
les
or
in
cld
or
cld
jo
push
imul
pop
xchg
cmp
incl
pop
scas
push
inc
sahf
or
mov
pop
sub
xchg
pop
out
adc
fwait
mov
sbb
pop
adc
loop
test
arpl
inc
test
xchg
xchg
or
das
in
inc
in
cmovg
sub
dec
sbb
dec
ja
mov
mov
or
sub
fs
lahf
sub
hlt
in
out
adc
shrb
and
les
test
test
push
jge
or
push
lcall
sbb
jnp
repnz
or
incb
sub
mov
inc
dec
repnz
hlt
add
pushf
sbb
sub
jge
mov
xchg
into
sbb
out
mov
cmp
or
fucomip
fiadds
fidivl
loop
sub
pop
scas
push
div
andl
inc
lea
js
dec
loope
or
pusha
into
out
jg
mov
pop
mov
es
inc
in
xchg
adc
push
adc
subb
adc
cmpsl
dec
clc
out
push
jne
out
mov
mov
mov
movsl
out
xor
mov
push
movsw
frstpm(287
jmp
test
fdivl
into
nop
xor
mov
shlb
scas
insb
dec
mov
xor
int
nop
pop
inc
pop
jg
aas
lret
jbe
sbb
lahf
sti
xchg
dec
and
rorl
mov
pop
jnp
mov
adc
mov
icebp
es
aam
mov
push
jle
mov
jmp
fildll
cmp
sbb
popf
test
pop
or
cmp
leave
dec
cmp
xchg
jno
iret
testl
jmp
adc
jo
rclb
pop
dec
out
jmp
repnz
les
jmp
popa
aad
movsl
dec
es
imul
or
rcl
pop
cmp
xchg
or
dec
dec
ret
cmp
cltd
daa
jle
in
inc
jp
stos
fsubrl
pusha
ljmp
or
outsl
mov
cmp
fisubrs
ds
jecxz
dec
jecxz
add
inc
cs
dec
pop
mov
lcall
int
test
dec
cmpsb
mov
ret
sbb
mov
mov
lods
out
loopne
inc
add
insb
xlat
jecxz
or
push
sbb
clc
shll
cmp
mov
loop
xchg
pop
jne
clc
jno
sub
inc
int
ss
lret
nop
aad
push
sbbl
mov
xchg
sti
clc
int3
sub
push
dec
out
dec
pop
loopne
out
cmp
pop
rcrl
gs
test
out
cmp
mov
dec
xchg
test
mov
add
sahf
inc
dec
fabs
lcall
jns
gs
fistps
inc
push
or
int
scas
stos
insl
mov
lret
imul
sbb
mov
push
shlb
popa
ja
pop
jl
mov
cmpb
popa
ficomps
mov
mov
jp
nop
mov
and
popf
dec
decb
mov
rorb
and
adc
mov
pop
cwtl
dec
inc
rcrb
ja
push
mov
xor
adc
mov
fisttps
jmp
xor
int
cltd
adc
mov
sbb
lock
lds
mov
xchg
cmp
popl
jo
leave
test
pop
xor
add
filds
mov
rclb
insl
xchg
cmp
pusha
pop
fimuls
pop
andl
out
pushf
dec
aad
cmp
inc
fsubl
shrl
andl
into
push
sahf
out
push
add
cltd
push
pop
mov
int3
jg
movd
pop
jae
xor
add
rorl
mov
mov
fldcw
add
lcall
mov
or
mov
in
cmp
aaa
std
mov
mov
int
cmpsl
push
jb
sbb
pop
jbe
push
xchg
jg
sbb
push
adc
repnz
sbb
loop
insb
pop
or
test
cmp
rorl
lcall
lret
jbe
popa
mov
orl
xor
stos
inc
aad
mov
inc
xchg
out
sarl
pushf
ror
jb
fisttpl
push
leave
push
adc
rclb
pop
add
aad
loop
jg
mov
mov
inc
repz
dec
cmp
popf
push
in
adc
xor
mov
push
push
hlt
sub
dec
or
jecxz
xor
xchg
je
repnz
cld
clc
xchg
cmc
insl
dec
cmp
cmpsb
cmp
xor
or
cmp
pop
aad
jle
mov
stc
mov
sbb
mov
sti
in
sahf
mov
xchg
aam
sbb
int3
or
cmp
shll
adc
es
sbb
mov
push
imulb
adc
sbb
out
sbb
mov
or
inc
inc
in
mov
ret
cmp
in
dec
scas
sbb
xchg
mov
pop
jge
dec
push
cs
xor
jno
ljmp
adc
rcll
rcl
insl
add
hlt
adc
in
jl
or
jle
mov
insl
mov
stos
xor
insl
mov
aad
popf
fsubs
mov
or
movb
out
adc
ret
sub
sub
pop
aaa
mov
cmpsb
mov
shll
out
xchg
inc
sub
daa
ljmp
mov
imulb
xor
or
pop
and
cmpsb
xor
ds
or
out
std
inc
andb
sub
mov
mov
push
and
push
dec
push
icebp
cli
pop
dec
adc
mov
enter
xor
cmp
push
cmp
cmc
fldcw
cwtl
pushf
dec
mov
push
in
fcoms
lds
addr16
pop
xchg
cmpb
shll
stos
sahf
pusha
xchg
fucom
cmpsb
xchg
outsl
rolb
xor
repnz
into
mov
jg
ror
jmp
sbb
ss
fs
cmp
sbb
mov
inc
mov
cmc
fdivs
sub
dec
adc
jge
sbb
scas
mov
or
test
loop
dec
inc
lock
jne
stc
bound
insb
sub
lods
xchg
inc
je
lods
stos
stc
imulb
dec
fwait
or
or
ret
fwait
aam
cmp
or
and
sahf
in
cmp
inc
cmp
popf
sbbb
scas
sbb
mov
or
xor
pop
add
push
push
sub
and
cmp
and
jg
dec
cmp
pusha
ret
outsb
mov
mov
fldt
sbb
cmc
adc
cli
rep
daa
js
or
xchg
sar
testb
inc
iret
popa
jae
stc
paddq
jge
cmp
cmp
mov
or
sti
inc
mov
iret
dec
and
clc
mov
rcr
pop
aas
fiaddl
dec
enter
shrb
pop
test
sub
in
push
mov
pop
or
cli
mov
jns
aam
fwait
insb
bound
add
pop
mov
push
cmpsl
psubd
inc
and
jg
xchg
push
or
jae
dec
aad
dec
ret
adc
add
data16
sub
lock
mov
addr16
imul
fstpl
pop
scas
pop
cmp
dec
or
mov
call
inc
test
mov
xchg
lcall
ret
int
mov
cmp
sbb
xor
nop
mov
inc
imul
adc
push
xor
xor
xchg
arpl
xor
lret
inc
inc
gs
aas
fistpl
mov
push
and
popa
xchg
or
dec
adc
in
sub
mov
inc
repnz
popa
pusha
xor
dec
movsb
push
loop
cmp
xchg
loope
pop
rolb
in
fcmove
inc
mov
jb
xchg
sbb
push
repz
add
sbb
dec
into
shr
int
popa
jno
mov
gs
mov
inc
inc
in
pop
push
aad
xchg
int3
in
jae
sti
int
scas
test
mov
dec
mov
mov
movsl
mov
cmp
mov
mov
sub
push
or
aas
adc
movsl
js
pop
xor
jbe
int
imul
jnp
rclb
jmp
dec
ret
xor
mov
cmp
fdivrs
dec
add
bound
jle
sub
popf
push
stos
imul
pop
xchg
jae
mov
test
cmp
sti
inc
xchg
or
mov
aaa
stc
inc
pop
sbb
lret
bound
pop
loope
sbb
scas
shlb
mov
pop
inc
jl
push
xchg
push
xlat
repnz
push
push
fiaddl
add
jg
pop
push
mov
sbb
sahf
hlt
add
cmp
sbb
push
and
faddl
mov
std
push
adc
sbbb
fs
push
cli
dec
xchg
ds
sahf
das
std
mov
fildl
inc
ficompl
jns
data16
push
jo
push
pop
mov
and
cli
sub
test
in
sub
loope
xchg
xlat
cmp
fs
sbb
mov
mov
fnstenv
dec
les
pop
push
cmp
lcall
sub
out
in
push
into
pop
jge
xor
fldt
sub
lock
pop
xchg
fldcw
pushw
test
inc
ljmp
dec
pop
mov
jge
mov
sbb
mov
arpl
popa
push
sub
mov
xor
lock
fidivs
sub
aam
jo
mov
and
pop
cmpsl
leave
fs
mov
jp
lahf
call
mov
mov
and
xchg
test
sahf
jb
pop
ljmp
jo
in
xchg
xchg
cltd
cmp
enter
lcall
inc
lock
stc
mov
jnp
out
cmp
int
out
push
mov
jecxz
sub
out
cs
cmpsl
das
jns
test
jecxz
in
test
or
andps
es
sub
les
adc
std
insb
fiadds
mov
sbb
lcall
aad
inc
scas
cmc
repz
mov
lods
fyl2x
sub
cli
add
pushf
hlt
lret
pop
cmp
lahf
rcll
in
into
pop
mov
sbb
jp
xchg
jae
pop
mov
and
jecxz
rcrb
xchg
fistps
cmp
push
and
pop
pusha
push
lock
lods
adc
aas
popa
add
adc
lock
cmpl
scas
add
imul
push
adc
shll
loope
adc
sti
fstp
movsl
ret
incb
das
or
ret
push
adc
test
and
xchg
dec
lea
jb
imul
cmp
lahf
inc
pop
push
andl
inc
jecxz
cmp
xchg
bnd
xlat
data16
decb
mov
push
cltd
ss
or
stos
push
stos
call
aas
add
inc
jl
jno
push
dec
into
into
cld
cld
aaa
scas
and
inc
pushf
call
inc
loop
or
adc
or
mov
pop
sub
or
and
jg
mov
adc
add
cmp
push
addb
push
stc
repnz
fbld
fcomps
mov
xor
sbbl
loope
clc
xor
dec
mov
mov
test
jl
cs
imulb
and
in
cmc
add
lcall
cwtl
or
ljmp
pop
cmp
jge
int
lcall
and
dec
or
add
lds
mov
xchg
adc
aas
data16
xor
lods
mov
xor
fisttpll
lret
shl
rolb
inc
inc
jns
leave
push
cmp
push
xor
push
mov
ret
icebp
mov
jb
das
cltd
leave
loope
and
mov
add
outsl
xchg
imul
into
mov
into
mov
xor
ss
dec
enter
add
lock
xchg
push
outsb
pop
loop
xchg
or
test
or
push
fs
or
les
and
enter
test
iret
jl
or
mov
mov
ficoml
pop
jecxz
testb
sub
jg
lcall
mov
or
pop
aad
jb
ret
push
out
dec
mov
dec
iret
ljmp
sbb
and
test
pushf
pushf
inc
mov
sbb
mov
lods
icebp
push
decl
cmp
jae
aaa
ljmp
xchg
push
sbb
adc
popl
outsl
mov
shlb
pushf
inc
ljmp
test
repz
sbb
in
cmpsb
xchg
out
xchg
subl
pop
loop
sub
adc
jmp
mov
cli
pushf
icebp
iret
loopne
js
mov
rclb
pop
pop
push
pop
dec
add
sahf
cmpsl
inc
push
xchg
ss
cmp
xchg
leave
jae
xchg
jle
out
sarl
mov
insb
cld
jno
inc
pop
pop
sub
sub
lahf
cmp
mov
jnp
jle
inc
and
fsts
lds
xchg
stos
ljmp
pop
leave
push
mov
std
cs
xchg
sbb
dec
or
xor
jp
push
aas
push
clc
lahf
mov
test
and
mov
xor
fwait
or
popf
lods
lods
insb
loope
loop
inc
mov
lcall
pop
lret
xchg
inc
pop
push
test
lcall
sub
shrl
pop
mov
in
xor
lods
inc
scas
cmp
cmpsb
inc
icebp
test
jno
aad
ss
dec
xchg
dec
movsl
jl
sbb
cld
xchg
mov
mov
pop
mov
call
sub
sbb
out
xor
arpl
aad
arpl
pop
imul
insl
push
push
fs
push
ss
sbb
in
sbb
ret
xorl
lahf
fcmove
mov
or
lret
ret
popa
mov
pop
xor
inc
pop
adc
lds
and
outsl
cmpsl
outsl
adc
sbb
jae
cld
jns
dec
adc
idivb
jp
loopne
sub
jecxz
pop
lods
out
cmp
imul
shl
ret
js
sub
jb
adc
loop
inc
cmp
fnsave
push
das
int3
in
or
pop
mov
inc
jg
imul
fdiv
out
mov
test
es
dec
push
push
in
mov
or
insl
mov
popf
mov
jge
fnstsw
add
shlb
adc
or
lcall
pop
sbb
into
aaa
xor
push
test
xor
aas
cmpsl
fisubrl
adc
lods
push
fstl
movsb
inc
icebp
lahf
sbb
ret
jns
cwtl
and
add
sbb
adc
push
into
mov
cmp
xor
clc
and
outsb
scas
jnp
sub
movsb
ss
sbb
popw
rcrl
inc
mov
mov
ss
iret
int3
mov
push
jg
rorb
iret
xor
sub
mov
mov
mov
stos
dec
inc
xchg
pop
stos
sub
leave
pop
leave
mov
fdiv
push
mov
not
and
jp
cmc
cwtl
xor
shlb
ja
stc
outsl
andl
shl
push
sub
or
dec
adc
cmp
add
jns
sbb
xchg
negl
ja
stc
popf
cltd
es
in
add
xorl
mov
push
jb
fisttps
push
xor
sti
test
cmpsb
cmp
negb
sbb
ljmp
and
mov
jo
vmread
hlt
cmpsl
pop
jge,pn
inc
call
jo
push
das
popa
adc
test
mov
insb
sub
or
loope
xchg
inc
mov
inc
dec
xor
mov
sub
jp
loope
xchg
adc
or
mov
push
fsubs
mov
mov
stos
and
xor
lahf
cs
jnp
pop
ficomps
imul
mov
stos
adc
cmp
sub
fstpt
or
fcoms
into
push
inc
pop
xchg
call
je
cmpsl
sti
adc
push
ret
mov
mov
lahf
sbb
push
insl
in
pop
subl
dec
addr16
push
cs
call
das
cmp
addr16
rclb
mov
cmp
sbb
loop
jne
imul
mov
pop
or
add
pusha
shlb
sbb
ror
ror
inc
xchg
add
and
js
dec
xchg
xchg
add
outsb
out
add
xchg
push
dec
in
pusha
orb
cltd
pop
pop
sub
inc
test
leave
std
insb
mov
inc
aaa
mov
aam
int3
or
push
xlat
jge
incl
movsb
ror
aaa
adc
mov
jbe
in
or
cmpl
mov
mov
mov
lods
jle
cmpneqps
cmpb
mov
out
subl
ret
cmpsb
fiaddl
and
out
mov
sti
mov
and
scas
adc
mov
sahf
or
sbb
jge
inc
xor
add
xchg
dec
stc
bound
outsl
bound
and
ljmp
and
fcoml
shll
movsl
and
iret
rorl
movsb
push
jnp
and
dec
pop
mov
xor
enter
ja
mov
add
sbb
scas
pop
inc
add
shlb
loope
stos
fbstp
adc
clc
pop
mov
std
outsb
mov
adc
xchg
push
leave
repnz
push
xor
or
std
jns
cmp
push
mov
add
aas
dec
mov
ds
outsb
xlat
divps
outsl
xchg
inc
mov
and
cltd
roll
mov
bound
or
out
ret
mov
sub
and
and
ja
add
lods
imul
loope
scas
jne
std
roll
inc
sub
fs
inc
mov
lods
xlat
mov
lcall
lock
sbb
pushf
aad
fdivr
xor
es
into
les
mov
andl
inc
mov
sub
loop
mov
jecxz
inc
icebp
mov
add
xchg
xchg
inc
mov
cwtl
inc
mov
and
pop
cmpsl
cli
sub
and
mov
xor
sub
jg
jo
sbb
popf
adc
lcall
mov
cmp
adc
jmp
push
xchg
fsubl
andl
ljmp
outsl
shrl
lcall
in
out
mov
ja
xchg
je
jns
or
lods
inc
lret
or
xchg
add
insb
xchg
mov
mov
test
pop
rolb
insl
xchg
push
out
in
cmp
xchg
push
sub
test
es
mov
xor
in
sbb
inc
sbb
xchg
cmp
stc
push
scas
aam
sub
lahf
mov
ret
sbb
sub
stos
inc
call
test
int3
add
inc
sub
add
out
xchg
ret
out
pop
cmp
in
adc
ret
ja
in
adc
or
mov
out
test
jbe
popa
mov
es
cmpsl
xor
imul
fs
iret
mov
add
sbb
je
sti
cmp
dec
lret
cld
xor
stc
push
pop
fisubs
and
hlt
push
lods
xchg
inc
fs
dec
enter
lea
repnz
xchg
mov
pop
idivl
loope
xor
pop
xor
ret
xchg
sub
cmp
test
in
out
jl
inc
les
fdivr
sub
andb
sub
int3
mov
inc
aad
lret
mov
popa
fistl
push
jmp
iret
icebp
xor
mov
dec
pusha
out
push
and
lret
sbb
orb
xchg
add
xchg
lods
ficomps
dec
sahf
inc
add
outsb
movsl
and
dec
das
sar
lcall
rorb
xchg
and
ficoms
push
cmpl
push
adc
or
sahf
sti
pop
push
add
pop
shl
fimull
or
cmp
pop
les
insb
roll
ss
mov
inc
mov
es
or
fs
daa
sbb
es
xor
add
jbe
repz
fbld
mov
dec
sub
repz
test
movsb
pop
lret
stos
pop
out
pop
adc
lds
jg
mov
into
jecxz
or
push
mov
lea
and
in
imul
xchg
cmp
sarb
test
inc
mov
and
xchg
pop
xor
in
pop
sbb
mov
sbb
cli
iret
fucom
lahf
dec
adc
into
leave
int3
push
and
sub
scas
popa
mov
pavgb
pusha
add
adc
enter
xchg
mov
add
enter
in
dec
movsl
mov
add
outsb
in
loope
pop
dec
add
test
mov
and
adc
xchg
andb
add
jl
pop
repz
in
and
xor
stos
aas
rcrl
mov
inc
push
repnz
pop
data16
popa
xor
mov
cmpsl
dec
fldcw
nop
mov
sbb
lods
popf
adc
mov
loopne
inc
pop
js
jo
cmpsl
sub
aad
cwtl
ror
das
inc
and
lods
outsl
lods
aad
nop
push
popa
sbb
fnstsw
jecxz
pusha
jns
pop
pop
call
int
jecxz
popf
xrelease
mov
scas
iret
adc
aaa
rolb
mov
jae
sbb
and
push
push
iret
das
out
lea
mov
test
popa
roll
test
rcr
stos
scas
shrb
rorb
cli
int3
jo
jge
add
add
test
xchg
int
jns
mov
xor
jmp
ret
dec
test
cmp
adc
sarb
int3
dec
mov
enter
leave
xlat
je
popa
insl
in
inc
rorb
mov
pop
cld
pop
push
sub
sbb
shl
xchg
pop
jo
pop
push
lods
push
cmc
je
loopne
ret
push
lret
lcall
out
mov
pushf
push
jns
inc
imul
vmovddup
hlt
dec
cmp
mov
ret
adc
lds
rorb
mov
and
repz
cmpsb
or
pop
cld
bswap
fnsave
jb
add
cmpsb
mov
scas
xchg
jp
push
jp
daa
scas
aam
lds
mov
adc
jo
cwtl
fistpl
test
stos
inc
pop
pop
fnsave
jb
mov
and
push
ljmp
adc
cs
out
xor
lret
xor
dec
test
mov
or
or
push
iret
ljmp
outsl
push
or
pop
shl
xchg
repz
sub
lret
jg
negl
fld
insb
in
leave
imul
cltd
outsb
sarb
adc
push
inc
inc
and
mov
scas
leave
in
push
mov
adc
jmp
pop
ljmp
jno
jmp
mov
jge
ret
dec
mov
fisttpl
nop
inc
insl
push
add
mov
fcomi
and
bound
mov
sub
out
xlat
xchg
fiadds
dec
add
testl
mov
dec
mov
cmp
pop
push
cmp
push
mov
aam
jno
int3
pop
dec
out
or
jbe
insl
loop
pusha
daa
push
mov
aaa
test
out
into
sub
pusha
cmp
mov
jns
rclb
setne
inc
inc
fcoms
or
jg
and
dec
dec
daa
mov
pusha
or
leave
aas
push
sarl
into
jp
outsb
sub
loopne
repz
ja
sub
inc
in
in
mov
scas
je
lock
xchg
push
xor
ret
inc
add
or
rol
and
mov
jl
add
push
mov
jb
out
push
insb
mov
inc
add
insl
aaa
xchg
sbbb
nop
imul
shrb
adc
cld
filds
adc
sbb
cmc
fistl
cmpb
addr16
rcl
fldlg2
xchg
adc
push
fadds
sbb
xchg
jno
xchg
dec
in
es
inc
outsl
pop
nop
movl
gs
push
xchg
repnz
stc
push
and
cmpsl
mov
mov
ficomps
sbb
dec
add
add
mov
flds
dec
popa
scas
rol
cmp
les
out
cmp
jbe
fs
push
sub
lahf
shlb
cltd
pop
jb
dec
jo
adc
and
btr
stc
mov
and
shlb
or
shl
cmp
push
fildl
dec
ret
loopne
or
jg
push
out
outsl
jl
aam
sbb
pop
pop
outsb
xchg
scas
sbb
pushf
pop
push
orb
fdivrs
sub
inc
in
dec
dec
xchg
inc
fstpl
bsf
dec
negl
or
sahf
rolb
inc
inc
jmp
dec
mov
sbb
push
pop
dec
arpl
or
les
xor
sub
jno
jl
xchg
add
leave
pop
xor
loop
cmp
hlt
pop
daa
xchg
xor
aas
in
jno
test
fnsave
leave
pop
shlb
arpl
sbb
pop
push
adc
mov
mov
xor
ficomps
sbb
mov
fwait
sub
fcmovne
push
push
mov
push
in
aam
ficoml
mov
in
dec
mov
lods
xchg
lahf
or
xchg
sti
dec
jmp
lret
add
dec
pop
fadds
jg
inc
pop
inc
pop
fwait
sbb
bound
pop
mov
cmpsl
sbb
je,pn
int3
xor
xchg
addb
sub
add
and
outsl
cmp
rcrb
pop
xlat
adc
push
mov
push
test
mov
mov
ljmp
mov
cmp
mov
sbb
stc
add
dec
jmp
ret
sub
xchg
out
cli
rolb
jb
int3
xor
push
xchg
outsb
dec
jle
mov
inc
sub
iret
shll
lret
dec
repz
fsubr
inc
xchg
test
cmp
mov
rorb
pop
xchg
jl
test
popa
pop
sti
cmp
or
sti
roll
out
push
fidivs
cmpb
xorl
ror
daa
shll
jg
push
mov
sbb
push
xchg
add
cli
mov
mov
mov
stos
jmp
rorl
cld
pop
cld
fiadds
in
cmc
cmc
leave
scas
mov
push
sti
pop
aad
pop
fstpt
xchg
shlb
jo
pop
push
mov
inc
adc
je
in
fildll
je
cs
cmp
cmp
pop
or
in
dec
icebp
lods
lock
mov
mov
mull
jge
adc
xor
mov
mov
popa
in
lret
ss
aas
mov
and
and
push
adc
ret
cmc
dec
lahf
mov
out
in
or
or
and
sahf
test
roll
dec
inc
and
mov
addr16
jl
mov
mov
sbb
jnp
cmp
push
mov
gs
stos
sub
dec
pop
cmp
lds
fs
sahf
sbb
add
aam
xchg
mov
dec
fsubs
cmp
pushf
mov
test
mov
jnp
xor
inc
inc
push
out
mov
jge
inc
jns
mov
lods
push
mov
mov
adc
scas
aaa
adc
mov
into
sbb
mov
out
mov
loope
rorl
stos
gs
rclb
cmpsl
sbb
add
mov
add
enter
dec
cmpsb
or
mov
cmp
cltd
aam
or
jge
or
imul
rcrb
or
jle
jecxz
lret
popa
xor
daa
fstpt
add
test
inc
loopne
cmp
jb
cld
das
lea
mov
and
pop
rorb
pop
mov
xchg
xchg
push
pop
xor
sub
lret
es
push
cmp
daa
dec
add
insl
das
outsb
xor
inc
xchg
cltd
iret
aas
iret
ljmp
lock
fidivrl
ds
lods
sub
jbe
outsb
mov
and
push
lock
int
push
inc
sbb
push
in
adc
mov
data16
out
das
imul
mov
call
pop
adc
jge
test
xor
fdivrl
fidivrl
clc
cli
sbb
das
xor
sbb
popa
and
mull
push
dec
jnp
stos
fs
aaa
test
add
jecxz
inc
scas
xchg
jge
inc
or
loopne
mov
jne
scas
bound
pop
xchg
call
fcmovne
sti
cltd
jno
jo
add
dec
negb
mov
mov
in
dec
ret
std
xchg
mov
gs
test
xchg
dec
fisttps
pop
cmp
pop
jmp
loope
and
xor
push
sti
mov
dec
mov
rorb
std
shrb
add
mov
aad
jle
sbb
mov
mov
cli
adc
je
popl
jne
sub
xchg
ror
xchg
leave
popf
fcoms
dec
push
enter
ret
pop
rolb
stos
incl
imul
aaa
push
jnp
test
add
sub
pop
xor
inc
jg
jno,pn
add
stos
lods
sti
mov
inc
push
mov
xchg
movsl
je
push
call
dec
sub
pop
sbb
sbb
hlt
inc
push
xchg
insb
movsb
push
cmp
imul
movsl
fisttpll
sti
scas
sbb
sbb
cli
xchg
xor
jge
sarb
fisubrl
test
pop
mov
je
or
cmp
popf
popa
leave
iret
ljmp
adc
sti
jl
ss
ja
add
sbb
jnp
jne
push
jp
popa
mov
call
push
mov
popa
dec
lea
pop
xchg
push
inc
int3
cmp
jae
aaa
mov
and
bound
lret
aad
push
dec
ss
add
xor
shr
pop
pslld
mov
xor
sub
adc
add
pop
lret
ret
lds
mov
cmp
cmpsl
cltd
js
sbb
inc
jg
mov
iret
lcall
push
add
and
ja
movsl
loopne
popa
rcrb
jbe
cmp
lods
ljmp
aas
int3
lahf
pop
xor
lcall
push
sarl
sbb
adc
movl
bound
mov
xchg
and
pop
test
repnz
int3
push
test
pop
sbb
pushf
inc
adc
jge
pop
movsb
insl
add
sbb
adc
mov
mov
pop
fbstp
adc
ljmp
add
xlat
or
adc
lret
adc
std
push
push
pop
repz
fisubrs
or
pop
push
bnd
xor
insb
sarb
xchg
add
in
mov
sub
or
dec
mov
inc
scas
pop
std
xchg
lret
push
dec
mov
adc
push
ficoms
push
jno
jg
or
bound
pop
inc
dec
dec
insb
add
int
or
aaa
andb
addl
pop
aad
outsb
add
arpl
popf
jns
jmp
and
mov
xchg
out
fistps
dec
mov
lock
hlt
mov
es
mov
arpl
shll
mov
mov
out
mov
fsub
push
test
push
inc
mov
dec
pop
push
lock
sub
push
inc
std
xor
xlat
jecxz
testl
and
repnz
fidivl
xchg
push
pusha
xchg
andb
fstpl
xchg
mov
push
inc
xor
jp
xchg
sbb
jge
fmull
adc
jb
out
rcrl
mov
or
fsubl
xor
mov
addl
jnp
inc
dec
dec
adc
outsb
loope
popl
out
lods
ret
push
adcb
inc
sub
sub
fwait
pop
lret
dec
pop
jbe
scas
das
push
mov
adc
fisttpll
inc
xlat
shll
and
andb
mov
cltd
sub
pop
and
add
ret
or
xchg
dec
test
or
ds
inc
lcall
mov
daa
cld
inc
dec
jb
shl
jnp
ja
inc
mov
cmp
movsl
xchg
xor
xchg
dec
xchg
ror
in
inc
cli
mov
pop
inc
pusha
outsb
adcl
xor
popa
cmpsb
loop
mov
dec
imul
das
negl
movsl
mov
fstpt
notb
dec
loopne
mov
insb
ret
push
jno
aas
aad
mov
xchg
pusha
out
mov
nop
xchg
sub
or
push
adc
adc
fwait
shrb
incl
mov
lret
xchg
inc
inc
inc
fidivrs
adc
out
lret
in
call
xchg
xor
lods
mov
jg
mov
inc
or
adc
test
adc
push
cli
mov
inc
mov
cs
xchg
out
or
dec
cmp
stos
out
sbbb
enter
pop
mov
cltd
xchg
mov
ficompl
xchg
inc
lds
cmp
jb
adc
aas
sbb
jnp
or
fsubrs
outsl
sub
jmp
mov
add
xchg
movsl
cmp
pop
xor
sub
cmpsb
sub
stc
mov
roll
mov
dec
scas
lcall
repnz
cmp
ljmp
or
cli
pop
movsl
sbb
int
jns
nop
inc
inc
jecxz
std
fcoml
daa
and
arpl
pop
cmp
or
popa
test
add
sub
in
shrb
faddp
or
xchg
sbb
sti
sub
stc
push
in
loopne
rolb
cmp
int3
mov
mov
jo
jp
mov
xchg
inc
sub
or
rclb
les
mov
sbb
and
adc
add
pop
pop
lds
div
loopne
dec
rorb
dec
lret
dec
negb
rol
inc
mov
cmpsl
cli
xchg
das
xchg
enter
jl
pop
mov
jmp
mov
sti
fsubs
leave
es
sub
pop
cwtl
push
jne
inc
pop
ficomps
sub
cmp
and
jo
fiaddl
repz
or
fcmovne
mov
insl
add
xor
pop
les
ds
cmp
outsb
push
les
cmc
xorl
insb
sbb
push
jns
jo
or
fisttpll
bound
mov
cltd
movsl
jle
inc
inc
and
fs
ficompl
idivl
dec
loop
divl
cmpsl
fiadds
mov
jge
xchg
in
std
cwtl
mov
sbb
dec
xchg
test
sub
push
or
insb
push
and
movsl
outsl
jmp
ja
cmc
in
outsb
aas
add
sahf
sbb
add
inc
gs
sarb
jecxz
lods
cmp
push
cmp
jge
lahf
sbb
cltd
add
int3
inc
dec
cmp
out
cs
rcll
mov
sub
mov
push
mov
inc
mov
mov
js
push
aaa
mov
mov
outsl
mov
rcl
pop
rcrb
pop
call
rcrb
sbbb
shlb
orps
or
loopne
adc
pusha
lret
fsts
frstor
xchg
mov
xlat
in
stos
mov
adc
dec
dec
out
mov
pop
push
xor
or
stos
push
adc
cld
mov
xlat
xor
pop
add
neg
mov
dec
inc
pusha
adc
adc
and
xchg
shlb
jo
pop
sbb
ja
les
cmp
sbb
cli
adc
ret
add
imul
xchg
out
dec
cmpsl
xchg
adc
sbb
sub
in
loop
movsb
xchg
push
call
dec
jmp
xor
sti
push
pop
daa
subb
mov
sbbb
daa
test
add
jnp
adc
les
mov
fninit
xchg
in
les
sub
ficompl
inc
inc
xor
xchg
jae
push
mov
xchg
xchg
cmp
dec
xchg
call
sbb
pushf
sbb
in
je
mov
loop
cmp
mov
or
mov
inc
xchg
pop
pop
out
in
pop
xchg
jb
test
adc
jno
ljmp
imul
cmpsl
add
or
daa
loopne
js
xchg
test
call
pop
outsl
add
cmpl
test
cmp
cmp
jbe
sti
subl
into
popf
in
jnp,pn
xchg
ja
mov
scas
mov
dec
sub
ja
pop
mov
pop
leave
push
adc
cwtl
cli
shlb
sub
data16
cmp
push
mov
xchg
cli
cld
into
pop
xchg
xchg
add
cmp
arpl
xor
loope
lock
stc
bound
mov
xchg
jge
pop
mov
rol
pop
imul
push
sar
cmp
xchg
cmpsb
pop
mov
les
enter
lods
pop
aad
daa
aad
js
xor
xchg
xchg
faddp
xchg
adc
jecxz
jb
sti
orb
cmp
out
shr
dec
and
xchg
adc
cwtl
test
call
das
int3
pushf
data16
mov
les
imul
stos
cs
aam
push
daa
mov
jge
pop
cs
sub
cmp
inc
dec
dec
fwait
mov
jge
sbb
add
mov
loope
and
sbb
mov
ss
out
stos
iret
add
adc
jno
push
add
fcomps
jg
adc
outsb
aas
cmc
inc
stos
lret
xchg
std
or
push
pop
adc
jl
and
push
ds
dec
sub
sarl
mov
stc
mov
insl
bound
fnstcw
sarb
orb
jmp
jns
arpl
rol
faddl
cmp
lods
aaa
rcrl
mov
insl
cs
mov
das
xchg
clc
mov
mov
scas
cmp
out
xor
ja
push
mov
sbb
mov
addr16
or
test
daa
leave
push
pusha
mov
out
gs
sbb
or
cmp
shrl
sub
adc
sti
lock
test
xchg
addr16
pop
repz
mov
jge
ds
ret
push
stos
icebp
xor
mov
jge
fadds
lock
push
hlt
sbb
cmp
fbstp
in
mov
lcall
mov
xor
xchg
lcall
popf
js
cltd
popf
xor
xor
ds
xor
inc
scas
pop
mov
fiadds
enter
dec
test
mov
adc
test
pop
mov
push
jne
mov
xchg
lock
xchg
pop
dec
jmp
inc
lock
loope
dec
popf
sbb
fnsetpm(287
jge
sub
cmpl
sbb
add
js
cmp
mov
ds
mov
and
out
aaa
mov
ficompl
sub
sarb
dec
pop
or
or
roll
mov
xlat
popf
jg
or
jns
mov
cltd
test
or
test
mov
mov
jl
arpl
pusha
push
les
pop
xlat
repnz
scas
sbb
int3
mov
test
sahf
pop
jno
sub
aad
push
outsb
movsl
mov
call
divb
bound
jecxz
mov
mov
adc
lahf
pop
jne
add
pop
jbe
dec
push
iret
inc
mov
in
out
aaa
rcrb
push
jle
cmp
cli
xlat
mov
or
data16
mov
mov
aad
leave
add
dec
lock
push
sbb
adc
mov
xor
cmp
inc
dec
test
jns
arpl
mov
mov
sub
loopne
xor
dec
adc
sbb
pop
das
cmp
addr16
cmp
mov
xchg
lret
pop
mov
mov
cs
xchg
icebp
int3
inc
sub
and
inc
shl
mov
mov
jnp
mov
add
adc
call
fnstcw
add
sub
sub
test
in
xchg
cmpsl
andl
sub
jbe
or
scas
push
mov
push
push
repz
dec
cmp
inc
jge
and
fnstsw
lcall
out
sbb
adc
cmp
adc
js
mov
add
mov
bound
sbb
int3
inc
and
jg
pop
xor
pop
int3
shlb
cmc
mov
push
call
xor
addr16
xchg
jnp
pop
sbb
repz
notl
movsb
or
sub
adc
ss
enter
repz
gs
hlt
mov
pop
notl
sti
aas
lods
jne
sub
icebp
stc
clc
fildl
out
and
pop
test
adc
cmp
mov
lret
mov
mov
pop
mov
xor
jl
sbb
out
fsubp
or
mov
jp
fisttpll
xor
xor
inc
adc
fistpll
repnz
movsb
hlt
fwait
pop
test
cwtl
add
push
xlat
cs
push
mov
xor
xor
jbe
out
cltd
lods
xchg
cmc
cmovnp
mov
mov
fwait
inc
inc
sub
aad
pop
dec
mov
dec
vmread
iret
cmpl
dec
and
push
dec
leave
xchg
ljmp
ljmp
popa
popa
pop
push
repnz
push
js
out
cltd
mov
cmc
sbb
not
push
jg
mov
adc
je
push
mov
jle
adc
sarb
std
stos
mov
push
xchg
xor
data16
andl
cmpsb
pushf
and
lods
or
and
mov
lods
call
sub
jae
stos
sub
adc
push
pop
dec
mov
aas
test
icebp
inc
repz
pop
xchg
pop
jae
pushf
sbb
fisttpl
xor
xor
rcrl
mov
xchg
mov
cwtd
xchg
cmp
mov
in
jle
sub
sub
hlt
out
cmp
mov
jle
int
sub
pop
pushf
in
lahf
jmp
mov
scas
test
mov
dec
aam
push
mov
nop
leave
mov
addr16
mov
ljmp
fs
or
shll
mov
stos
push
and
xchg
cmp
xchg
pop
jle
lock
or
insl
sahf
adc
jnp
mov
dec
pop
push
push
mov
insl
daa
mov
icebp
ret
pop
or
push
pop
add
notl
pop
jp
pop
mov
testb
lret
repnz
adc
mov
adc
cmp
adcl
fldcw
and
xor
mov
push
add
shrl
cmpsb
shrb
push
dec
rorl
loopne
pop
push
cmp
mov
sbb
adc
pop
pop
cmp
mov
cltd
ljmp
add
push
aam
xchg
mov
mov
pshufw
mov
and
movsl
das
add
loop
cmp
shll
mov
push
sbb
dec
into
mov
divb
sub
xor
sub
add
pop
push
lods
daa
lahf
xchg
inc
rolb
rcll
call
mov
stc
adc
pop
pop
pusha
cmpsb
or
xchg
out
pop
repz
inc
inc
add
popa
jg
pop
inc
add
jle
test
jge
es
les
mov
popa
adc
push
insl
inc
inc
cmp
sbb
test
xchg
jno
jl
pop
mov
ds
sub
push
out
lods
mov
xchg
ror
enter
aad
adc
push
jmp
sarl
add
js
mov
xor
imul
dec
mov
mov
jno
cmp
arpl
dec
push
stos
pop
pushf
xor
imul
fsubr
fsubrl
loopne
aam
cli
popf
dec
sbb
mov
cmp
lret
stos
nop
arpl
and
call
arpl
addr16
mov
in
mov
out
mov
testl
inc
je
mov
inc
in
mov
push
fistpl
mov
mov
xchg
push
mov
xor
sahf
xchg
pop
nop
loop
in
enter
shll
es
dec
pop
fidivrs
cwtl
sbb
lods
xchg
fistl
push
xor
and
lahf
fadd
insb
in
inc
jae
enter
cmp
cmp
jp
mov
or
push
sub
mov
out
add
std
shlb
mov
cmpsb
es
mov
pop
push
shrl
jle
mov
or
adc
xlat
jae
loopne
push
lea
jns
mov
mov
rclb
xchg
das
push
mov
frstor
popl
ljmp
xor
loope
cmpsb
ss
test
stos
add
cmp
push
xchg
adc
dec
sub
xchg
fnstsw
jae
hlt
pusha
movsl
cmp
add
stos
or
leave
pop
js
out
or
sub
sub
inc
mov
add
pushw
jge
mov
pop
mov
call
jns
loop
xor
cmp
sahf
fcomi
add
xchg
pop
arpl
xchg
imull
mov
loop
sbb
mov
in
int3
pop
cmpxchg
cmp
xchg
int
mov
pop
fiadds
arpl
pop
adc
pushfw
cli
add
sbb
stos
push
push
jmp
pop
mov
lock
cs
add
mov
xchg
arpl
mov
add
rolb
mov
pop
mov
idiv
mov
mov
data16
mov
cmp
cmp
or
out
mov
aas
push
dec
mov
or
xchg
pop
adc
stos
push
clc
push
aaa
ljmp
in
dec
in
jno
jg
lret
js
jg
repnz
stos
inc
cmp
jecxz
mov
inc
sub
and
pop
into
cld
fidivl
test
ret
mov
aam
je
adc
cmc
cmc
add
mov
mov
xchg
jmp
cld
aad
stos
jmp
aam
fiaddl
pop
loop
pop
cmovs
pop
push
sbb
mov
fnstsw
inc
pop
xorl
adc
lret
fisttps
in
mov
fiadds
lahf
je
andl
repz
or
cs
jnp
xchg
add
sub
js
loope
cmp
adc
arpl
es
jns
jl
ljmp
inc
mov
scas
push
pop
jge
test
jmp
or
cmp
sbb
push
and
negb
mov
xchg
xchg
cld
or
test
mov
push
subl
mov
fnstsw
fwait
sbb
cmpb
ret
jne
hlt
lock
movsl
stos
repz
into
pop
out
push
xor
loop
inc
mov
push
push
lcall
xchg
mov
or
pop
fcoms
stc
push
in
or
ljmp
fnsave
int3
push
sub
inc
lods
stc
lret
adc
xor
jl
add
pop
mov
loope
jmp
insb
mov
push
jle
sahf
mov
add
pop
aam
test
nop
xchg
dec
test
push
pop
mov
orb
icebp
mov
fcmovnbe
movsb
add
pop
bound
pusha
loop
sbb
subb
sbb
or
cmpsb
lods
mov
cmp
repz
iret
lret
stos
mov
or
add
lret
pop
cli
addl
fiaddl
xchg
shl
mov
arpl
jbe
fsubs
inc
nop
sahf
ret
lock
mov
jecxz
jp
push
lret
or
cli
push
shrl
scas
fucomp
mov
mov
dec
outsb
mov
out
arpl
and
jo
loope
or
addr16
scas
adc
and
dec
adc
sbb
xor
andb
test
scas
subl
xlat
mov
inc
fiaddl
mov
hlt
jmp
nop
mov
insb
loopne
lahf
repz
les
hlt
inc
adc
push
mov
jb
bound
lret
nop
xor
jnp
xor
or
aas
sbb
inc
xchg
push
push
push
sbbb
mov
push
mov
je
or
sarl
sub
in
cwtl
push
sbb
popa
cli
xchg
xchg
fidivrs
sbb
aas
and
xchg
mov
mov
std
rol
jle
jmp
sub
es
push
cli
xchg
push
fxam
out
jge
pop
push
or
gs
jmp
push
roll
add
cmp
pop
xor
and
cmp
shrb
push
dec
das
shll
push
inc
xor
fs
pushf
arpl
jp
cmpsl
mov
aas
dec
dec
aad
cmp
in
hlt
add
push
add
and
inc
mov
int
je
cwtl
mov
int3
pop
fwait
adcl
push
std
jne
dec
xor
pop
arpl
lods
roll
mov
mov
xor
popa
ret
xchg
xor
sub
or
or
mov
and
popf
jne
cmp
pop
adc
lds
popa
and
out
cmc
sbb
fwait
in
movsb
sti
jne
ss
mov
aas
pop
mov
notb
mov
icebp
mov
push
push
cmp
or
cmp
in
push
push
dec
inc
inc
test
mov
jl
sti
outsl
mov
pop
jmp
sbb
fnstsw
leave
popa
loopne
or
and
and
inc
mov
add
xor
inc
frstor
push
jo
push
pop
lahf
push
adc
inc
subb
mov
adc
push
push
cmp
xor
mov
mov
mov
cli
push
lcall
xor
ret
into
out
cld
aad
aam
sub
fidivrl
insl
xchg
jg
es
fadd
add
or
jmp
test
xchg
outsl
push
orb
std
mov
mov
call
lcall
mov
shll
lcall
xchg
int
mov
sti
jo
or
stos
xor
inc
mov
lcall
fadd
imul
lds
fstl
negb
xchg
sbb
aam
rcrl
lods
insb
xchg
mov
lock
repnz
dec
ret
scas
ja
ret
sbb
cmp
pusha
nop
mov
repz
adc
jbe
icebp
dec
mov
aas
call
mov
iret
lock
mov
xchg
pushf
dec
pop
lret
inc
repnz
adc
or
lahf
xchg
sbb
call
fs
xchg
lock
fldln2
adc
outsb
das
mov
jnp
cltd
es
into
idivl
les
push
das
sbb
adc
in
cli
pop
add
repnz
jb
les
push
aam
aam
cmp
mov
pop
push
and
ljmp
stos
js
sbb
mov
call
in
test
and
test
test
and
jl
mov
push
int
cld
leave
or
and
rcl
push
movsb
insb
lret
inc
jp
sub
dec
daa
scas
xor
inc
addr16
jne
ss
or
lods
mov
in
inc
dec
and
rcll
loopne
inc
filds
arpl
cli
xchg
and
data16
dec
cmp
cmp
js
jb
add
and
jge
in
mov
je
inc
mov
mov
scas
pop
call
lahf
in
insb
iret
mov
test
lret
sub
cmpb
mov
sub
cld
xchg
inc
add
jl
inc
jge
mov
movsl
loope
imul
aad
pushf
adc
push
mov
inc
test
mov
and
mov
push
hlt
add
loopne
xor
repz
popa
divb
jbe
cmpsl
xchg
aas
rorb
pop
lcall
jae
add
or
mov
xchg
lret
inc
lods
xchg
int
push
andl
ljmp
cltd
xchg
jns
or
push
cmp
push
add
mov
mov
popf
push
pop
xchg
dec
cmpsl
negb
lods
js
ds
inc
imulb
push
xchg
push
inc
mov
enter
xchg
jg
add
testl
int
push
dec
sbb
push
mov
pop
cmc
mov
xchg
outsb
lods
stos
out
pop
icebp
push
lcall
fidivl
mov
sub
dec
loop
or
cld
pop
mov
cmpsl
lods
ljmp
mov
mov
les
std
rclb
sbb
imul
fcmovu
push
int3
insb
or
cmp
adc
fdivrs
and
dec
arpl
out
inc
adc
bound
or
jle
mov
roll
and
iret
adc
stos
pop
cmp
jge
xor
fldcw
rclb
xchg
mov
fld
xor
push
rorb
out
dec
imul
cwtl
push
icebp
ret
sub
jle
mov
xor
stos
cmp
cmpsl
sbb
scas
jge
push
stos
jnp
test
jecxz
pop
xor
jl
add
aad
mov
ljmp
sub
jge
int3
cmp
fsubl
cmpb
pop
pop
fiaddl
inc
test
gs
mov
ja
mov
cmp
daa
pop
ds
fwait
push
cmp
xchg
xchg
jg
jns
lds
jns
sub
pop
cmp
scas
and
xlat
pop
divl
divb
adc
pop
mov
fnstsw
jg
aad
enter
lock
and
sbb
push
sub
xchg
test
xchg
cmp
nop
add
jae
adc
fstps
icebp
fldcw
pop
setg
sub
dec
xor
insb
popa
fwait
sti
and
jne
xchg
shlb
cmpsb
sub
jno
popa
pop
jp
psraw
sar
dec
in
decb
add
inc
push
cs
in
and
fldcw
adc
or
xchg
push
mov
test
mov
test
shll
test
ds
jbe
mov
or
add
dec
push
sub
inc
push
into
adc
push
push
test
push
adc
jl
or
loop
pushf
push
jo
push
aam
mov
push
in
sbb
mov
jecxz
lret
dec
mov
icebp
jle
or
lods
ljmp
jns
push
fcomps
loopne
aad
xor
es
lahf
pop
adc
and
cli
nop
imull
mov
mull
arpl
sbb
cmp
mov
mov
sbb
jecxz
pusha
push
orb
aas
clc
or
or
push
clc
push
mov
ffree
test
js
addl
test
nop
fdiv
sub
arpl
cwtl
jno
dec
lods
lods
mov
mov
data16
push
enter
xchg
out
cmp
push
imul
outsb
mov
pop
lds
xchg
in
ss
dec
and
dec
jb
ret
mov
enter
in
popf
filds
cli
je
faddl
test
push
cwtl
cwtl
mov
fistpll
scas
in
div
imul
mov
mov
or
in
fnsave
negb
cmpsl
push
mov
xor
push
sub
xor
inc
js
or
mov
mov
jae
lods
stos
nop
push
mov
shll
cmp
add
mov
inc
dec
addr16
pop
push
fwait
mov
inc
enter
jne
shlb
add
dec
sub
out
push
mov
mov
xchg
and
out
push
xor
push
jbe
pop
adc
adc
testl
mov
mov
lea
add
xchg
push
imul
out
stos
mov
out
push
stc
fdivs
clc
push
push
sbb
xchg
cld
in
fistps
pop
negb
enter
inc
jne
mov
jae
adc
xor
das
shll
add
sub
stc
or
out
pop
sbb
fnsave
xor
fstl
ficompl
aaa
dec
sbb
add
xchg
xlat
sahf
cmp
in
ficomps
adcb
and
lret
ja
lods
jne
cmp
jl
movb
stos
icebp
push
fidivrl
aas
addr16
push
dec
cmc
ja
add
adc
push
movsb
inc
ljmp
mov
mov
imul
cmp
jge
notb
scas
fwait
jle
jle
sti
cmp
fmulp
xchg
sub
jns
dec
jle
lcall
pop
iret
xor
push
jl
fs
sub
mov
ds
ds
mov
sarl
adc
stos
test
stc
daa
in
inc
iret
int
cmp
inc
into
push
fdivrp
inc
out
lcall
test
pop
cmp
lret
cmp
mov
xchg
ret
cld
mov
lds
aas
sbb
outsl
js
mov
cmp
insl
pop
push
and
ss
xchg
ljmp
push
cmp
sub
and
push
inc
jmp
add
xor
outsb
aaa
xchg
cmp
in
ja
add
fstp
loopne
push
nop
inc
jo
clc
sbb
fwait
xlat
je
fdivrs
ret
xor
pop
pop
adc
adcl
mov
cltd
decl
mov
fsts
cmp
mov
or
cmc
test
inc
mov
mov
cmp
xchg
jb
xor
mov
pop
mov
xor
icebp
movsl
or
pop
nop
add
push
rcrb
cmp
imul
xchg
adc
dec
sub
lcall
inc
cltd
sub
lock
mov
mov
pusha
sub
mov
cmp
mov
hlt
hlt
test
sub
pop
mov
leave
cmpsl
xor
rolb
mov
mov
mov
inc
dec
nop
test
hlt
push
sbb
inc
aas
mov
pop
pop
fldcw
sahf
mov
cmp
mov
aas
out
xchg
push
popl
xlat
je
pop
push
sbb
xchg
leave
cwtl
push
cmp
push
iret
movsl
pop
adc
mov
add
dec
rolb
adc
mov
inc
or
andb
repz
cmp
mov
shll
mov
std
xor
xor
pop
and
outsb
cwtl
ss
mov
and
or
scas
enter
movsl
or
test
popa
in
fs
cmp
sbb
or
xor
mov
shlb
in
stc
shrl
or
adc
dec
inc
mov
out
movsl
rol
in
cld
test
imul
dec
jecxz
loop
mov
ljmp
sub
lds
push
std
repnz
push
adc
test
mov
add
or
adc
inc
adc
push
data16
dec
mov
aam
int
clc
fcoms
ret
pusha
arpl
ret
inc
xchg
adc
inc
and
cs
test
xchg
dec
clc
xor
xor
fisubrs
aaa
mov
test
push
notl
pusha
sbb
jle
and
sub
adc
pop
jp
aaa
test
es
push
es
adc
push
cltd
cmp
jb
icebp
jns
icebp
dec
cmp
adc
icebp
add
into
cli
push
mov
les
mov
fiadds
sbb
test
mov
xchg
test
ret
scas
lds
dec
push
std
sub
jb
push
loop
jns
adc
fistps
sbb
icebp
dec
dec
pusha
leave
iret
jnp
xor
pushf
test
aas
pop
bound
mov
fisubs
in
jecxz
data16
inc
call
or
add
adc
mov
xor
inc
addr16
arpl
add
fadds
testb
ret
mov
jle
aad
inc
repnz
jnp
pop
dec
out
jg
rol
push
or
ret
mov
jnp
cwtl
inc
stc
mov
jbe
pop
inc
stc
sbb
out
push
cltd
cmpsl
mov
cli
and
test
inc
test
js
in
test
dec
inc
shr
jge
xor
inc
xchg
add
mov
mov
fimull
jecxz
mov
mov
movsb
mov
lret
inc
cmp
popf
cmp
pop
sbb
dec
sbb
inc
add
jb
adc
xor
jb
add
sbb
lcall
mov
out
xchg
mov
push
lods
ljmp
xchg
xchg
pop
scas
cmp
xor
push
inc
in
loope
jbe
mov
cmp
pop
inc
mov
jp
lret
shr
xchg
test
repz
add
fcoml
mov
cmp
movsl
outsb
and
movb
fwait
jns
loopne
movsl
mov
ret
vaddsubps
testl
xor
mov
loop
jmp
out
call
jo
fdivp
lock
mov
jae
insb
iret
outsl
lods
xchg
sbb
adc
mov
add
xor
xchg
and
lret
dec
cmpsl
aas
loop
lods
rcll
xchg
daa
push
js
pop
insb
fcompl
fimuls
outsl
test
ja
sti
shrl
insb
ret
lea
and
push
aad
popf
test
das
mov
xlat
clc
mov
insl
icebp
inc
jne
mov
out
ret
xchg
cmpsl
lods
loop
dec
js
mov
imul
jp
pop
fcomip
or
add
fisttps
loopne
xchg
mov
mov
enter
out
sbb
aad
add
dec
scas
stos
gs
xlat
mov
lods
loopne
test
and
push
out
aad
inc
jnp
sbb
movsb
arpl
and
repz
sbb
inc
push
inc
mov
insl
pop
jmp
mov
lret
cmc
mov
sub
imul
push
xchg
xchg
and
mov
inc
popf
dec
mov
fldcw
jnp
data16
adc
and
in
cmp
movsb
repz
or
push
fwait
inc
pop
xchg
pusha
outsb
pop
fcompl
cs
lods
rcrl
mov
lret
lods
int3
xlat
inc
jno
sbb
and
inc
adc
dec
lds
and
lret
jl
push
xchg
sbb
jmp
out
andl
xor
dec
jno
out
pop
mov
test
into
repnz
and
sbb
sub
cmp
and
mov
std
cmc
stos
add
adc
sbb
xor
cmc
xchg
mov
fldl
out
xchg
pop
mov
push
stos
lahf
add
lds
inc
xlat
xor
xchg
jno
iret
mov
je
lret
and
inc
cmp
arpl
insb
cli
sub
lret
jb
xor
pop
test
mov
addl
dec
shrl
adc
in
ret
shll
dec
pop
sbbl
adc
xor
lds
pop
shll
jle
mov
stos
ret
callw
cmp
data16
jno
stos
jne
pop
jmp
pusha
pop
xchg
lods
fwait
call
cwtl
cli
xor
call
xchg
sub
cmc
jecxz
inc
xor
and
ljmp
repz
adc
push
cli
dec
and
fisubl
pusha
adc
and
xchg
add
addb
jp
jge
loopne
scas
mov
insb
sbbl
add
insb
lcall
push
lret
and
mov
xchg
ffree
xor
inc
jns
std
push
outsb
sub
cmp
insl
shl
pusha
sbb
push
in
xchg
jb
fwait
cmpsb
add
out
push
cwtl
inc
clc
mov
jns
mov
and
nop
fdivp
mov
xor
push
aam
xor
outsl
dec
cmc
fprem
mov
dec
inc
loopne
orl
push
and
add
inc
hlt
mov
push
jl
sub
pop
jecxz
xchg
movsb
sahf
xchg
pop
pop
out
mov
insl
jns
inc
push
mov
adc
outsl
jp
repnz
sbb
mov
xor
or
xor
jns
lret
xchg
sahf
mov
lret
stos
aam
aad
mov
push
dec
push
cwtl
and
dec
mov
data16
xlat
stos
add
stos
push
leave
inc
add
jb
adc
lock
pop
mov
xchg
sbb
rcll
leave
add
mov
imul
fisubs
inc
pushf
and
pusha
popa
in
scas
lret
sbbb
sub
xchg
imul
cmp
bound
movsb
jbe
cli
mov
mov
pusha
lods
mov
sbb
rcll
fwait
pop
mov
cltd
jmp
mov
pop
adc
andl
cmc
jae
push
dec
mov
test
subb
and
or
mov
fnstenv
iret
cs
lea
bound
lds
repz
mov
lock
sidtl
clc
pop
stos
mov
sbb
dec
es
lret
xchg
mov
nop
inc
dec
xor
adc
xchg
jmp
mov
test
mov
push
enter
dec
lock
sub
jecxz
add
and
jg
fimull
and
mov
lds
mov
test
push
dec
cmp
and
je
je
test
aam
rcrl
in
mulb
mov
dec
in
mov
imul
cmc
jae
mov
out
cld
addb
push
sbb
inc
and
popf
fldl
lea
pop
pop
shll
jns
jo
pop
mov
rcrl
inc
push
imul
cmp
pop
lods
aaa
sub
sbb
call
fldl
push
out
ficoml
outsl
xchg
adc
es
mov
ss
jge
add
jnp
mov
dec
mov
pusha
mov
xor
lret
sub
or
incl
loopne
insb
ljmp
push
ret
data16
xor
dec
je
push
aas
fnsave
adc
jno
pop
call
aaa
push
jbe
inc
mov
lock
cli
sub
testl
pop
rcrl
decb
push
sahf
sti
xchg
addl
inc
mov
xlat
sbb
xlat
negl
sbb
ss
xchg
popf
lds
cmp
xchg
mov
sub
adc
mov
sub
addl
or
jb
sub
insl
test
pushf
call
mov
dec
mull
sbbl
ds
data16
aas
cld
adc
dec
repz
jne
nop
xor
enter
fstl
stos
fwait
mov
les
je
push
daa
call
loope
sbb
out
xchg
xor
iret
hlt
or
sbb
pop
jle
or
dec
jle
cmp
pop
sbb
insl
test
out
mov
es
mov
div
pop
test
aad
aad
sub
in
pop
mov
out
fmull
sub
stos
sub
mov
lods
aas
sbb
jbe
add
cmp
loope
xchg
int3
pop
cmp
sub
push
je
data16
cmpsl
sahf
xchg
mov
stc
gs
add
pop
mov
mov
mov
shl
cmovb
iret
imul
fwait
inc
fbstp
mov
jl
iret
out
aas
je
popa
mov
fsubl
adc
jge
fs
or
cmpsl
push
imul
je,pn
inc
lds
mov
pusha
add
dec
js
jns
xor
shrl
fisubs
or
movsb
xlat
fcmovb
pushf
rclb
cmp
push
fistpl
xchg
fisubrl
inc
clc
shl
dec
mov
mov
enter
pop
add
xchg
fldl
in
xor
fst
out
push
pop
insb
call
cltd
lds
test
pop
insb
and
push
out
dec
cli
sti
fstps
imul
mov
loopne
stos
and
jecxz
negb
jle
lret
scas
mov
das
jne
test
test
xchg
or
lods
mov
pop
dec
stos
mov
sahf
pop
xor
mov
je
adc
scas
cmpsb
mov
inc
add
jge
stos
aas
pop
les
inc
aad
sti
xchg
movsb
dec
xor
push
and
hlt
add
test
mov
sahf
mov
mov
sub
adc
cwtl
push
lret
fistpll
stos
loope
jmp
imul
aad
xchg
inc
popf
test
or
loopne
push
jmp
dec
cmp
outsb
fstps
mov
cmp
xchg
lret
xlat
push
fisttpll
popf
into
sbb
mov
xor
stos
ret
shrl
xchg
daa
lods
xor
mov
ret
sub
mov
stos
or
inc
mov
test
aam
stc
out
lret
jmp
pop
xchg
sub
inc
lahf
dec
mov
in
pop
sub
mov
scas
pop
js
cmpsb
sahf
sbb
push
shlb
sub
ret
dec
aam
jp
sbb
push
ret
testl
hlt
jbe
push
fcom
adc
test
jmp
add
cmpl
or
sub
and
iret
pop
inc
or
add
jecxz
cmpsl
cmpsl
and
fimull
and
stos
push
lds
mov
es
out
mov
sbb
lret
mov
outsb
out
sbb
pusha
xchg
cmpsl
cmpsb
pushf
ljmp
jbe
inc
loope
sbbb
pop
dec
push
testb
add
stc
in
push
ljmp
loopne
int3
aaa
jne
leave
adc
xor
ret
lock
mov
cmp
cmpb
or
mov
push
add
in
dec
jl
lcall
and
ljmp
jne
je
dec
cmp
xchg
inc
inc
call
pop
fisubs
mov
cld
pop
aad
inc
pop
pop
popa
xor
add
scas
lods
cmp
xlat
mov
sub
rcrl
inc
jle
inc
out
mov
jae
push
sub
loop
call
fucomp
out
xchg
nop
cmp
jl
shlb
mov
cwtl
bound
push
cmpsb
ret
or
sub
sub
out
stos
mov
pop
popa
filds
adc
mov
sub
xchg
sarb
in
cmp
dec
dec
aaa
lcall
sbb
in
cltd
add
out
in
js
fdivl
adc
sub
pop
xchg
push
shlw
mov
idivb
outsb
sti
inc
adc
sti
push
mov
xchg
push
lods
inc
add
inc
and
sub
jge
repnz
adc
mov
sub
ja
cmp
add
pop
mov
sbb
xchg
insl
pop
loope
movsl
mov
push
jb
push
sbb
pop
cmp
dec
sahf
cmc
out
mov
jmp
test
jmp
or
lret
pop
adc
stos
repnz
jp
out
and
out
mov
out
aaa
mov
lcall
mov
xchg
push
inc
and
adc
out
ja
xchg
jb
mov
push
cmpsb
adc
orb
call
mov
loop
jge
clc
inc
pop
sbb
jnp
jo
jnp
push
in
insb
jns
ret
fidivs
repnz
popl
jp
xchg
xor
push
adc
outsl
test
pop
dec
shr
jmp
mov
mulb
icebp
add
inc
pop
jmp
xchg
sub
in
inc
push
push
push
insb
fs
sbb
adc
add
outsl
xlat
faddl
or
pop
gs
cmpsl
mov
iret
mov
repz
inc
push
or
sub
test
mov
or
sbb
fidivrs
and
mov
or
shrb
hlt
rorl
stos
push
xor
mov
cwtl
add
sahf
mov
adc
cmpsb
mov
pop
bound
dec
call
jne
adc
cld
inc
mov
jbe
push
push
mov
dec
mov
ja
mov
xchg
out
jg
mov
in
iret
mov
mov
out
insl
repz
sahf
addr16
sti
jge
mov
push
aaa
xchg
mov
xchg
jns
addb
jbe
out
xor
and
sub
aas
inc
sti
xor
repz
nop
aam
sub
popf
les
mov
mov
jmp
enter
adc
std
mov
and
push
hlt
pop
add
jg
mov
pusha
lret
jl
jne
mov
sti
popa
xchg
popa
test
sbb
out
lea
aaa
scas
jge
xchg
add
inc
sbb
mov
imul
and
lea
add
fdivr
push
mov
mov
inc
jg
dec
mov
xor
pusha
shll
ja
aam
sub
jle
not
dec
xchg
pop
and
jns
enter
orl
loope
dec
dec
faddl
dec
add
cmp
dec
xchg
push
clc
lea
stc
neg
rolb
add
inc
or
sbb
data16
xchg
loope
jae
ss
cmp
xor
push
cld
mov
xchg
adc
pop
aas
fimuls
enter
lods
pop
test
cltd
test
es
or
inc
in
imulb
jle
mov
cmp
sar
pop
xchg
adc
int3
push
cmp
pop
jg
fucom
inc
insl
inc
jge
jne
sub
test
movsb
sub
sahf
mov
push
add
idivl
shrl
repz
adc
adc
push
in
aad
int3
jge,pn
xchg
xorb
arpl
jecxz
push
and
adc
add
insl
rorb
mov
popa
enter
pop
sahf
cmp
push
mov
adc
cs
push
mov
mov
xor
lahf
icebp
or
mov
mov
sub
call
adc
out
mov
mov
fwait
add
sub
pop
sub
mov
rorb
mov
jb
into
pop
out
and
rolb
mov
lret
call
jp
cmp
daa
je
stc
xchg
in
lret
lods
inc
test
xchg
xchg
lret
movsl
ret
mov
sbb
decb
pusha
mov
rcl
mov
cwtl
leave
or
pop
aaa
jp
inc
pop
scas
xor
lods
dec
lea
jg
outsb
aaa
shrb
mov
xchg
push
mov
xor
push
push
and
lods
pop
mov
mov
iret
or
fprem
dec
push
push
lods
insl
loopne
cmc
in
xor
ficomps
push
jae
ss
jge
xor
icebp
push
xchg
lcall
sbb
jl
std
fstpt
ret
jnp
xor
fxch
dec
aas
inc
adcb
cli
icebp
inc
popa
lret
push
daa
mov
out
bound
cmp
es
mov
cmp
das
call
imul
and
mov
pusha
pop
popf
sbb
out
mul
inc
pop
icebp
je
cmc
repz
loop
cmc
int3
repnz
test
sbb
jmp
lret
into
sub
aad
and
dec
add
lahf
add
or
cmc
mov
ror
xchg
mov
les
or
mov
jge
cmc
push
daa
imul
inc
rcl
stos
dec
mov
sub
hlt
stc
or
xor
outsb
enter
pushf
jo
in
pop
mov
mov
cltd
push
lret
lret
sbb
xchg
cmp
mov
mov
decl
pop
mov
movsb
dec
mov
dec
sbb
and
or
add
popa
repz
mov
fcompl
sti
imul
pop
adc
mov
mov
mov
jg
sarb
pop
ja
add
xchg
add
sbb
lea
repnz
sbb
cmp
inc
aad
repnz
pop
mov
xchg
test
ljmp
in
jae
pop
jecxz
movsl
orl
lahf
jbe
or
push
fcmovnbe
stc
or
insb
ficomps
sarb
inc
sbb
movsb
cli
mov
roll
add
mov
xor
inc
jne
pop
pop
out
push
lds
mov
sub
sbb
sbb
cmp
mov
cmp
iret
sti
jle
enter
in
loopne
lea
xor
adc
test
out
cld
loopne
mov
inc
push
cmp
fadd
cli
mov
lret
mov
sbb
mov
cmp
cwtl
push
and
mov
push
xor
shlb
nop
pop
adc
mov
and
mov
sub
inc
iret
sarl
mov
push
dec
push
mov
push
sahf
lds
push
fldt
or
cmp
sarb
in
xchg
fmul
push
out
xor
xor
lods
mov
jmp
and
jb
xchg
sti
adc
mov
daa
inc
ret
outsl
popl
xchg
jle
sti
pushf
xchg
repz
movb
fstpt
xor
mov
aaa
inc
stos
xor
scas
jae
xor
out
adc
nop
stos
xchg
and
shl
lahf
dec
test
or
imul
dec
adc
enter
xchg
cmp
fadd
adc
mov
fcomi
push
add
mov
push
out
lret
jg
jb
sbb
pop
jns
sbb
repz
lea
xchg
nop
sbb
xchg
mov
inc
xchg
popa
xchg
sub
cmpsl
ret
push
mov
dec
mov
flds
sbb
jne
int
lahf
jne
cmpsl
jo
shll
mov
jge
popa
push
shl
cmp
iret
nop
cmp
mov
or
ds
lods
sbb
adc
cs
mov
mov
sub
jno
aam
clc
in
std
inc
rcll
push
inc
nop
push
ss
xlat
push
jne
repnz
mov
das
sub
adc
sub
shrb
ds
mov
push
pop
fstl
jge
or
out
fisttpll
mov
mov
push
adcb
stos
jb
pop
out
pop
mov
pop
jns
xor
mov
aaa
or
push
cmp
and
xorb
mov
push
xor
mov
xor
int
outsl
and
adc
cltd
push
out
cmp
adc
and
stos
xchg
push
and
sub
mov
xor
sbb
cld
jo
adcl
push
mov
push
int
mov
lcall
lods
aas
inc
add
cmpsl
cmp
mov
lock
cmp
mov
and
je
fstpt
xor
sti
aas
xorl
jbe
mov
adc
cmpsl
sbb
or
ret
push
orb
int3
sbb
inc
xlat
js
je
mov
ja
add
sub
dec
inc
and
mov
lcall
mov
aas
repnz
jnp
addb
or
adc
dec
mov
dec
nop
cwtd
stos
enter
fdivrp
push
loope
daa
movd
dec
or
mov
sbb
rolb
cmpsb
clc
add
xchg
sarl
dec
leave
gs
mov
jne
cltd
xor
pop
fists
out
sub
lds
pop
mov
sub
lock
or
pop
shlb
sti
inc
test
cmp
adcl
pop
xchg
mov
mov
cmp
mov
mov
mov
or
lahf
inc
in
stc
stc
inc
jne
sub
popa
jnp
jecxz
fistpl
cmpsb
jo
sub
adc
push
and
ret
push
fstpt
dec
movsb
ljmp
sbb
xchg
not
fisttps
jbe
mov
sbbb
jl
fs
stos
fnstcw
aam
mov
add
aas
mov
xchg
mov
mov
int3
sbb
rol
and
jecxz
movsb
pushf
pusha
lock
or
out
mov
lock
stc
or
js
scas
mov
mov
lret
xor
sbb
in
jl
data16
dec
adc
mov
mov
mov
call
outsl
xchg
pop
icebp
pop
adc
int
sbb
xchg
loope
sub
std
test
and
lds
mov
in
sbb
rcr
xor
out
sub
mov
inc
inc
iret
fdivrp
add
jle
stos
xor
sbbb
ja
push
fidivrs
iret
sub
test
outsl
push
pusha
push
pop
xor
dec
cmp
mov
repnz
jl
push
loop
inc
pop
or
jg
adc
xchg
xchg
mov
mov
repz
mov
jmp
pop
or
pop
imul
bound
test
cmp
mov
mov
jl
mov
clc
aad
add
movl
cmpsl
fs
fcompl
adc
jmp
std
sub
inc
ljmp
xchg
jne
xor
stos
loop
sub
jecxz
dec
pop
lret
mov
aaa
loopne
in
mov
adc
jmp
add
lds
fstpt
movd
and
int3
cli
xor
scas
xchg
push
cmp
inc
xchg
mov
stc
popa
xor
and
int3
adc
fnstsw
popf
das
mov
das
sbb
ret
lcall
xor
mov
ret
cli
outsb
addl
jp
pushf
mov
hlt
cmp
outsb
jno
cs
lds
fisubrl
pop
xchg
push
int3
push
jge
fidivrl
mov
push
mov
rcl
leave
dec
cmpb
ss
pop
add
xchg
push
cmp
mov
cmp
jae
in
cwtl
clc
push
push
push
movsb
jbe
scas
mov
pop
stos
stos
inc
jecxz
test
ja
imul
mov
xor
outsl
loop
or
bswap
and
sahf
mov
je
cli
negl
lock
orl
mov
inc
adc
fnstcw
jecxz
cmpsb
xor
and
mov
bnd
ljmp
fcomps
inc
mov
je
mov
ljmp
cmp
mov
les
movsb
xor
lea
adc
mov
add
scas
loopne
shlb
cmc
mov
test
jmp
dec
mov
jno
jp
cwtl
mov
and
ljmp
sub
aam
xor
out
and
mov
xchg
ds
out
mov
mov
mov
xor
out
xchg
add
add
mov
xlat
lcall
insb
add
dec
dec
movsb
je
push
jbe
pop
jne
outsl
daa
xor
ret
data16
adc
jne
int3
xchg
or
inc
sub
sbb
jne
into
enter
and
push
sbb
dec
arpl
mov
enter
std
jg
leave
and
jg
imulb
mov
daa
fidivrl
jle
out
cltd
mov
push
addr16
out
gs
mov
sbb
xor
push
dec
cs
incb
js
or
jecxz
mov
push
jno
or
or
dec
fcompp
cmp
iret
stc
jecxz
aas
dec
gs
imul
shll
add
imul
lods
jno
int
jge
jae
ja
aaa
aad
clc
insb
jle
outsl
int3
test
rcrb
stos
pusha
push
cmc
fidivrs
into
adc
mov
adc
jb
mov
mov
test
jmp
rolb
jp
or
xor
mov
xchg
sti
addl
adc
out
testb
mov
xor
mov
mov
int
inc
lret
sbb
cmpsl
arpl
std
jb
scas
xchg
mov
ds
shrb
test
jge
cltd
mov
fbstp
sbb
mov
outsb
int
jg
sub
mov
cli
push
jmp
dec
mov
inc
das
into
out
xchg
movsl
repnz
bnd
stos
sbb
add
or
cs
repz
jmp
add
nop
sub
xchg
aam
mov
add
pop
sbb
movsb
js
setb
mov
push
xchg
mov
cmp
rcl
cmp
test
outsl
or
xchg
lret
mov
and
pop
fwait
ss
fs
cmp
gs
ret
mov
movsb
in
cli
and
mov
dec
pop
mov
orl
jmp
fsts
shll
jle
cmc
fsubr
loope
cld
push
add
mov
imul
sti
icebp
fstpt
ljmp
dec
aam
outsb
jno
call
insb
insb
mov
insl
in
and
cli
cs
jge
sbbb
addr16
jnp
hlt
add
pop
add
pop
push
add
xchg
mov
sbb
jae
ss
push
push
test
or
jge
addb
sub
mov
scas
or
pop
pusha
dec
mov
cmp
sub
mov
scas
pop
pop
mov
and
push
inc
pop
xchg
mov
fbstp
mov
and
mov
inc
adc
sbb
sbbl
icebp
addl
push
and
adc
shlb
iret
out
mov
mov
pushf
jle
leave
out
mov
adc
je
mov
push
cmpsl
pop
out
jp
pop
leave
adc
mov
sbb
push
lahf
stos
xlat
inc
sub
insb
sbb
adc
ret
push
jle
xor
mull
stos
jno
leave
popf
aad
pop
and
daa
push
jge
or
inc
jl
jmp
xor
sbb
pop
scas
fiadds
cld
out
aas
ficoms
mov
sbb
into
sub
ret
and
inc
enter
xor
loopne
js
push
pop
jbe
xchg
sub
push
or
mul
bound
testb
sbb
cmc
push
dec
sub
movsb
pusha
and
icebp
icebp
jae
adc
loopne
int3
in
int3
mov
mov
scas
add
inc
cmc
lahf
mov
adc
mov
xor
cmp
cmc
popa
mov
pop
push
lret
movsl
jmp
test
adc
into
je
loopne
repz
arpl
into
inc
fsubrs
scas
xlat
lahf
xchg
push
mov
mov
mov
dec
adc
mov
add
clc
add
sbb
xchg
dec
aaa
cmc
cmp
into
lds
inc
lcall
sti
mov
aad
addl
mov
mov
cmp
rcrb
fsubl
inc
jl
xchg
sahf
jns
mov
mov
std
stc
xor
mov
push
or
sub
fsubrp
mov
mov
xchg
addr16
pcmpeqb
fwait
hlt
stc
push
push
cli
popl
pop
sub
push
xchg
dec
ret
jecxz
mov
cld
pop
addr16
mov
sub
inc
shr
push
push
ret
push
hlt
dec
inc
test
lea
sub
icebp
icebp
xchg
inc
xor
loope
test
inc
stos
test
pushf
lods
sti
cmp
enter
dec
test
vmwrite
bound
aas
cmp
cmc
jb
pop
pop
and
clc
xchg
add
mov
loop
mov
cltd
xchg
mov
sub
sarb
pop
jno
xchg
inc
xor
mov
sbb
mov
sbb
shl
push
int3
rclb
shrl
lods
mov
cmp
dec
out
mov
cmp
mov
ret
mov
push
mov
or
pusha
cltd
iret
add
pop
popa
jp
cld
jbe
inc
mov
mov
xchg
mov
push
hlt
in
cmp
jnp
lahf
rol
and
pop
fcmovbe
push
push
mov
push
cmp
aam
dec
or
out
mov
cmpsl
outsl
dec
or
jnp
jecxz
cmp
not
cmp
mov
lret
das
jo
add
out
add
and
dec
ss
mov
pop
sahf
mov
stos
incl
sbb
test
push
add
push
insb
lret
mov
jns
sbb
pop
sub
push
sub
outsb
and
adc
mov
push
adc
push
shl
repz
fstl
xor
out
mov
roll
jle
cmpsl
loop
imul
mov
mov
movsl
pop
dec
dec
fstl
frstor
pop
dec
aas
mov
fidivl
imul
sarl
sbbb
icebp
clc
das
mov
les
mov
xchg
bound
cmpsl
add
std
enter
gs
nop
loope
sub
push
mov
xchg
push
jge
mov
inc
cmpsb
js
xor
sub
push
aas
sahf
jle
in
fsubrl
aam
jns
mov
push
fwait
pop
shld
movsl
mov
push
inc
mov
push
dec
and
fs
fdivl
inc
arpl
aam
lret
inc
int
aaa
jb
insb
add
push
sub
xchg
cs
jbe
scas
lock
mov
pop
adc
rclb
repz
rcrl
push
sbb
scas
inc
xchg
and
pop
adc
mov
dec
sbb
dec
arpl
push
or
fnstenv
pop
lea
fisubrs
add
bound
lret
popa
sbb
or
fistpll
pop
cmp
xchg
testb
push
in
mov
sub
mov
scas
daa
inc
xrelease
icebp
ret
repz
insl
mov
popa
pop
xchg
mov
cmpsl
ret
sub
push
pop
ja
dec
push
fadds
jge
inc
lds
add
test
pusha
add
xlat
sbb
je
push
mov
iret
cmp
aam
cwtl
hlt
inc
add
in
mov
stos
andb
sbb
pop
push
cmp
dec
dec
mov
sbb
add
iret
xor
push
jo
add
xchg
add
xchg
dec
out
jg
inc
inc
and
mov
add
test
in
mov
and
insb
pop
push
addr16
jns
xchg
test
test
in
add
int
enter
jp
mov
out
cwtl
test
iret
cmp
cmp
fsubl
dec
cmpsl
push
mov
pop
xchg
js
cmpsl
pop
cwtl
and
xchg
mov
cwtl
add
call
inc
lcall
mov
mov
xchg
and
inc
mov
sub
xchg
cmp
loop
mov
stos
cmp
loop
fstl
repnz
push
xor
add
fisttpll
mov
xchg
cli
mov
and
in
roll
lea
add
jne
jo
add
addr16
and
sub
int3
cmpl
mov
out
adc
mov
or
in
add
ret
insl
mov
ljmp
dec
xchg
ret
lahf
pop
test
inc
lods
xor
pop
out
lahf
popa
lcall
add
inc
mov
test
dec
mov
push
adc
sub
dec
push
pusha
rolb
xor
icebp
fldcw
add
repz
movsl
stos
cmp
pop
test
popf
or
cli
mov
lods
inc
sbbb
push
xchg
push
mov
stos
arpl
scas
inc
sub
cmp
jl
nop
lret
push
out
adc
jo
adc
inc
cmp
sub
mov
das
sub
addr16
cmp
xor
mov
pop
data16
sti
sbb
stc
nop
loop
xchg
mov
xor
jl
and
scas
dec
dec
jns
lods
jnp
mov
or
subl
std
jge
aad
mov
ljmp
pop
scas
pop
aaa
adc
pushl
cmp
and
sbb
aad
push
or
cmpsb
push
add
jmp
mov
popf
lea
dec
mov
ljmp
xor
push
ret
call
jne
jmp
cld
jnp
fs
insl
inc
sub
inc
fistpll
ljmp
and
addr16
sbbb
xchg
add
xchg
lcall
pop
jmp
aam
push
ret
popa
int3
sti
sti
dec
ds
ds
inc
stos
dec
stc
fcomi
dec
xlat
dec
ret
out
cli
mov
sbb
xchg
js
imul
fmul
sub
jge
iret
sbb
inc
loop
cmp
mov
adc
addb
mov
movsb
int3
ret
cltd
icebp
sahf
mov
lret
clc
or
test
outsb
das
movsl
add
add
cmp
mov
out
mov
mov
and
push
rcrb
pop
in
sbb
cwtl
mov
scas
dec
or
and
mov
xor
xor
out
sub
jmp
xor
lock
int
mov
jp
ret
fs
faddp
inc
xchg
das
cwtl
jb
jmp
pop
pushf
lret
mov
aad
xchg
cld
sbb
jnp
clc
pushl
mov
inc
jmp
testl
int3
pushf
cmp
mov
sub
in
repz
call
pop
pop
mov
xor
in
jb
rcrb
push
sbb
xor
push
mov
dec
mov
push
pop
pushf
addr16
push
cmp
lods
and
js
je
mov
or
inc
arpl
outsl
mov
rcll
pop
xor
int
stc
daa
mov
fcoms
ret
jbe
jo
pop
sbb
jp
mov
mov
ja
imul
sub
adc
adc
xor
out
xor
ja
dec
push
mov
mov
push
popa
loope
inc
xlat
adc
inc
dec
pop
inc
fisubrs
mov
and
cmc
mulb
push
mov
lcall
and
mov
xchg
fwait
jne
jnp
mov
imul
pop
out
lret
arpl
scas
fmull
pop
push
shr
xchg
lcall
mov
cmc
sub
ljmp
sar
mov
and
repz
test
pop
xor
inc
jns
dec
rorb
nop
add
popa
or
or
mov
adc
push
pop
test
fsub
test
shll
int
jo
inc
ja
xchg
jg
inc
mov
iret
or
call
jge
icebp
std
negb
fisttpll
jle
ljmp
stc
push
cmpsl
push
or
xchg
push
jae
pusha
add
ss
push
pop
jns
in
and
pop
cmp
inc
aaa
pop
adcb
sahf
cmpsb
sti
inc
rcrl
inc
ds
mov
aad
aam
mov
push
inc
lods
mov
sbb
xlat
adc
dec
addr16
or
mov
shl
dec
in
lahf
inc
loop
add
push
fildll
aaa
roll
mov
rcrb
lret
mov
popf
inc
xor
mov
cmovbe
vmwrite
cmp
inc
loop
nop
push
outsl
int3
cmp
arpl
or
in
push
fstpt
and
adc
dec
pushf
repnz
lret
jmp
bound
dec
jae
dec
push
ja
pusha
adc
pop
pop
xor
nop
and
mov
aam
mov
sbb
jns
or
std
pop
loope
pop
dec
add
sbb
mov
mov
ds
negl
scas
push
cs
shll
pop
push
pop
dec
inc
outsb
inc
fidivl
in
outsb
add
andb
cmp
add
dec
mov
inc
mov
ljmp
movsl
sub
out
fsubrs
jns
fnsave
int3
into
aam
add
xchg
push
inc
stos
icebp
int
es
cmp
fidivrl
sarb
dec
adc
ss
sub
imul
insl
adc
leave
ss
int
xor
cld
jle
inc
loopne
push
push
gs
fwait
dec
in
in
mov
jae
dec
or
fwait
lock
aad
xor
xor
clc
cld
dec
push
int
mov
pushf
mov
pop
fcmovnb
lods
fs
insl
rcrl
fld
cmp
xchg
ja
fldt
sbb
fucomip
lcall
lds
bound
cld
jne
dec
aad
filds
imul
add
sbb
pop
push
popa
out
inc
js
jp
fcoml
xor
pop
add
pop
cwtl
push
sbb
out
and
call
inc
adc
das
jns
pushf
loope
jbe
cmpsb
xchg
jns
jnp
subb
mov
pop
mov
fs
xor
leave
js
gs
out
sub
push
or
mov
sub
jl
cmp
aad
int3
andb
int
xchg
test
call
shlb
inc
testl
push
push
xor
adc
fidivrl
and
cwtl
and
sbb
jmp
verr
in
aas
fwait
cmpsb
jae
fwait
and
in
insl
mov
inc
mov
cmp
xchg
loope
imul
call
sub
testl
andb
subl
dec
pop
mov
add
jae
lahf
mov
sub
cmp
xor
sub
cmp
mov
imul
inc
cmp
mov
idivl
inc
ret
idivb
test
pop
push
push
test
pop
or
and
jno
jp
inc
dec
pop
or
cld
mov
test
cmp
mov
outsb
add
outsl
jg
sbb
inc
inc
test
mov
pop
push
cmc
jae
cltd
ret
add
mov
insb
jle
call
jge
movhps
mov
sbb
xchg
adc
jo
imul
cmp
sub
sbb
ret
ficomps
inc
in
in
lea
cmp
insb
notb
mov
mov
or
mov
dec
pusha
pop
xchg
sbb
sbb
pop
xchg
mov
add
pop
aas
dec
pop
mov
inc
adc
cmp
fnsave
int
fcoml
sbb
in
je
cmp
incb
cmp
mov
cmp
dec
cmpb
sub
mov
cwtl
mov
jo
cmp
mov
add
xchg
orl
ret
mov
gs
or
test
fmull
repnz
sbb
jmp
lretw
jo
push
xor
or
pop
lods
cmc
push
dec
push
into
cs
icebp
sarb
add
sub
lods
mov
hlt
dec
adc
fstpl
pop
add
gs
pop
cmp
sbb
pop
mov
dec
inc
inc
in
mov
add
dec
popa
repz
out
jle
popa
pop
insb
insb
xor
ds
sarl
inc
or
fs
mov
clc
jb
inc
mov
sbb
dec
in
pop
movsl
dec
push
in
push
jl
shlb
leave
loop
inc
mov
scas
aam
jmp
mov
mov
and
jp
mov
scas
pop
mov
mov
jp
dec
insl
jg
sbb
push
and
add
les
dec
and
and
enter
mov
shll
sub
jnp
sub
sub
insb
and
cmp
add
or
sti
push
sub
mov
rcrl
insl
sub
cmc
andb
pop
aad
xchg
data16
movsl
loopne
adcb
imul
cmp
push
mov
and
lds
cmpsb
jns
das
pop
ss
xor
imul
in
in
and
push
ficoml
arpl
cmpsl
pusha
ret
add
pop
jg
repnz
push
gs
mov
enter
and
aad
popf
adc
and
sti
dec
ficomps
cmp
stos
pushf
mov
call
test
jmp
rorb
cmp
shr
rcl
sar
rcrl
xchg
mov
sbb
bound
dec
jmp
fisttpll
js
sub
xchg
insl
push
pop
or
push
xchg
shl
or
inc
push
add
lret
lds
jo,pn
pop
adc
adc
dec
cltd
lcall
inc
shr
push
adcl
sarb
cmp
dec
mov
inc
fwait
repnz
dec
aas
mov
sbb
out
mov
pop
jns
outsl
adc
mov
leave
dec
lahf
jns
inc
or
mov
pop
push
adcl
cmp
pop
mov
mov
cli
and
popa
xor
nop
into
ja
daa
es
mov
decl
xchg
inc
sub
pop
mov
or
sub
lret
ss
sbb
mov
repnz
add
cmp
das
xchg
and
add
int
jns,pt
jb
mov
mov
sbb
push
inc
out
iret
arpl
repnz
add
dec
xor
pcmpeqw
adc
ret
ja
inc
dec
xorb
gs
in
mov
insb
ficoms
mov
sub
ljmp
pop
sub
sub
das
mov
mov
ds
adc
jmp
lds
sbb
xchg
inc
scas
add
inc
inc
pop
push
pop
adc
pslld
loop
loopne
int3
mov
mov
ss
movsb
cmpsb
inc
imul
popa
movsb
ljmp
inc
jl
cmp
cltd
mov
ljmp
stc
int
push
test
les
add
cmpb
sub
ljmp
arpl
xor
cltd
dec
aad
in
lret
inc
neg
mov
test
sbb
gs
test
rcrb
lret
adc
lcall
mov
ja
inc
insl
les
cmp
scas
fs
push
jno
jle
jmp
and
fsubr
notb
adc
shlb
adc
dec
cmc
sub
mov
das
stos
aaa
push
cmp
and
hlt
fwait
xchg
sub
mov
xchg
mov
lds
xchg
mov
push
cmp
cmp
sahf
xchg
cmp
call
pop
jmp
push
and
insl
push
fcompl
mov
dec
test
push
mul
flds
jns
mov
mov
mov
xchg
add
mov
inc
gs
pop
mov
push
push
sub
cmp
sbb
shll
inc
push
stos
dec
int
lcall
rorl
lret
mov
xor
stc
dec
cwtl
mov
sbb
sbb
rclb
adc
repnz
sbb
rol
mov
jle
cli
shrl
and
sbb
xor
movsl
jae
adc
stc
and
test
daa
hlt
dec
pop
in
mov
jmp
or
loope
xchg
js
loopne
push
movsb
sti
cs
outsl
call
and
pop
sub
mov
jb
arpl
jo
std
push
mov
mov
and
add
rcl
or
push
cmp
cmpsl
or
cmpsb
push
sub
mov
jne
ds
filds
push
mov
jne
mov
cmpsb
pop
sbb
mov
sahf
test
cmp
out
sub
xor
stos
das
out
adc
cmp
cld
das
jns
jmp
pop
leave
popf
pop
and
or
mov
jecxz
dec
push
xchg
ds
cmp
dec
sbb
subb
sarl
dec
movsb
loope
pop
aas
mov
dec
pushf
js
sbb
scas
imul
mov
sub
xor
scas
popa
scas
ror
mov
push
in
std
cmp
xchg
orl
adc
cwtl
test
data16
daa
imul
xor
loop
inc
add
loop
imul
xor
imul
pop
sbb
adc
xchg
in
lea
xor
stc
test
fcoms
jnp
pop
xor
ja
mov
or
add
dec
out
or
pop
loop
lods
in
push
loope
inc
pop
xor
aaa
adc
xchg
and
mov
fnsave
test
in
cmc
adc
fldl
jge
fldt
psubsw
sahf
repnz
hlt
shr
out
xor
lea
push
stc
xor
roll
jmp
jmp
and
ds
out
add
jmp
mov
pop
mov
cmp
icebp
mov
negb
jnp
mov
mov
mov
xlat
add
mov
jns
push
add
loopne
xlat
cmpsl
mov
jb
push
addr16
inc
or
popf
loop
je
inc
and
repz
adc
rorb
or
stc
sti
cmp
xor
sub
push
xor
mov
and
xchg
inc
popa
jae
je
and
lahf
mov
fistpl
push
loop
and
mov
fs
iret
outsb
jo
sub
out
xchg
add
dec
jo
jmp
inc
fwait
or
test
fstl
dec
sahf
jnp,pn
add
jge
mov
mov
test
fwait
add
je
push
js
mov
push
movsl
fiadds
xorl
mov
xlat
stc
das
insb
je
sbbl
sbb
xlat
mov
ja
add
inc
adc
lds
ret
dec
sbb
or
bound
cmpsl
xchg
arpl
outsb
cmp
sar
rolb
jno
adc
cmp
shll
cmp
and
and
loop
rcrw
push
scas
jo
lahf
cmp
fbld
rorb
or
int3
call
mov
mov
shll
cld
inc
nop
mov
mov
daa
mov
int3
push
mov
test
and
cld
push
cmpb
mov
fidivrs
cmpsl
push
inc
cltd
out
jg
test
jle
inc
test
sub
stc
cmpsl
faddl
int3
stos
adcl
out
xchg
rcrb
cmp
mov
jecxz
inc
movsl
mov
xchg
sahf
dec
scas
insl
inc
push
pop
cmp
ret
push
and
in
out
popa
add
fnsave
sbb
and
insl
mulb
adc
aad
xor
or
xchg
or
repz
fldenv
das
sbb
or
addr16
or
jg
gs
ja
push
sbb
in
dec
mov
fwait
cmp
test
ja
gs
gs
xor
aam
push
out
pop
bound
add
inc
xchg
ds
mov
jp
push
lcall
in
pop
ficoml
sbb
movsl
scas
fistpl
xor
mov
push
repz
cs
sbbb
cmc
fmull
vaddss
jg
lea
sbb
jbe
cld
add
pop
pop
test
lret
into
dec
dec
lea
stc
push
and
fiaddl
mov
cmp
leave
sub
stc
je
mov
inc
imul
aas
mov
sarb
push
xchg
inc
inc
out
je
clc
pop
mov
out
inc
mov
inc
or
call
sbb
push
dec
jg
mulb
mov
sarb
shl
sub
clc
and
repnz
xor
pop
stos
loop
xor
fwait
daa
inc
cmc
jle
lret
sahf
sbb
dec
out
or
out
in
ficompl
stos
xchg
mov
adc
iret
imul
notb
jbe
push
jp
nop
pop
mov
stc
push
push
movsl
jl
push
es
sub
adc
adc
cmp
add
cwtl
scas
nop
jge
adc
adc
cmp
jg
jl
push
and
dec
or
andb
imul
icebp
sub
iret
aam
xor
mov
lahf
aaa
pusha
and
jae
sub
dec
test
sub
pushf
fisubrl
xchg
inc
cld
movsb
push
dec
stos
add
adc
lahf
fists
es
icebp
outsb
insb
insl
test
push
mov
add
gs
out
mov
fwait
aaa
mov
pop
or
dec
add
add
add
movsl
das
mov
ds
inc
aam
add
jle
mov
xchg
pop
adc
xchg
js
fadd
xchg
arpl
aas
out
aad
xchg
push
out
sbb
fs
addr16
dec
into
push
adc
ss
mov
mov
movhps
jmp
fstpt
mov
cmp
inc
or
aas
pop
add
pop
in
inc
orl
stos
sbb
es
cmc
xor
add
shll
pop
arpl
cmpsb
sub
shll
mov
dec
and
nop
jne
loope
je
scas
xor
inc
pushf
jge
sbb
push
ljmp
out
stc
mov
adcb
daa
and
sbb
ficomps
jge
popa
fidivrl
out
jbe
incb
pop
jge
mov
fs
scas
int3
mov
dec
xchg
test
xchg
mov
pop
jmp
ret
sub
adc
jle
push
inc
sbb
fcmovbe
stc
notb
dec
mov
cltd
punpckhdq
ja
mov
add
push
clc
xor
shlb
shlb
mov
imul
pusha
cmp
xor
push
dec
mov
jno
pop
daa
sub
imul
cmpb
cwtl
mov
push
pop
pop
fcompl
adc
ss
mov
inc
push
pop
xor
fdivrl
out
cmp
in
lcall
adc
jae
cmp
mov
push
das
mov
adc
std
cmpsb
cmp
pop
cmp
orl
arpl
test
jge
xchg
insb
xor
and
das
fimull
shrl
xchg
and
dec
pop
mov
scas
mov
outsl
xor
push
adc
int
sub
jle
push
add
pop
test
push
lcall
cmp
fdivrl
push
dec
mov
fldenv
xor
pop
jo
mov
mov
out
adc
leave
add
xchg
daa
mov
rcll
and
fs
rclb
push
andb
fnsave
pop
push
out
jmp
jmp
and
push
mov
adc
push
xor
pop
out
shlb
data16
lods
iret
xor
ret
sarb
lods
inc
sub
and
mov
push
pop
mov
inc
movsb
leave
rcll
in
js
cli
out
pusha
and
lret
lret
scas
mov
cmpl
pop
pcmpgtb
pop
mov
insl
mov
jp
adc
jmp
sub
outsb
and
in
ret
inc
int3
sub
jo
in
in
mov
ja
test
int
dec
scas
repz
jo
jb
and
cmp
int
nop
mov
sub
lahf
repnz
mov
clc
stos
xor
imul
jecxz
sub
movsb
jno
mov
jl
dec
dec
syscall
sbb
mov
orb
ja
les
mov
loopne
das
or
adc
jbe
std
mov
xchg
and
pushf
call
add
lahf
arpl
sbb
mov
cli
adc
sub
dec
xchg
mov
xor
les
cmpsb
insb
mov
mov
jmp
jb
jmp
int
mov
push
cmp
or
gs
mov
lret
imul
ret
push
cmp
int3
mov
dec
dec
mov
jno
adc
cmp
cli
sbb
jg
mov
push
in
push
mov
mov
xor
xchg
xor
xor
fcmovne
sbb
orb
or
jle
add
cmp
scas
xor
mov
or
stos
xchg
mov
in
jb
pop
push
int3
add
popa
cmp
cs
xor
mov
add
stos
loopne
int3
repz
push
aaa
or
xor
xlat
sbbl
sub
js
fistpll
leave
imul
ret
pop
repnz
mov
in
loop
add
jb
inc
sbb
cmp
push
dec
xor
jmp
sbb
les
je
ja
jg
aaa
add
inc
pop
adcl
adc
adc
ss
sbb
mov
jne
mov
cs
push
fmul
popf
push
cltd
mov
xlat
or
xchg
or
in
test
add
icebp
dec
es
adc
repz
push
rorl
lds
xchg
dec
aam
add
adc
jnp
fld
jl
les
xchg
aad
lds
jo
lods
sub
pop
aad
xor
in
cmp
cmp
mov
cld
push
lahf
dec
and
cltd
in
pop
and
lahf
dec
adc
mov
mov
outsl
popf
sbb
inc
lods
ret
push
sub
in
je
cmp
xor
xlat
sub
dec
popa
or
ret
sub
cmp
inc
push
push
jb
imul
out
es
fwait
inc
out
int
and
lea
das
int
popa
mov
std
inc
sub
stc
cli
mov
das
pop
dec
imul
dec
inc
lods
mov
or
sbb
xchg
jb
ss
mov
push
lods
loope
xchg
add
in
shr
jp
push
ret
stos
mov
out
pop
or
ljmp
and
jns
dec
ret
jmp
push
or
repnz
mov
jmp
push
fadds
test
ljmp
add
mov
aaa
stc
xor
into
jbe
mov
mov
mov
xlat
sbb
in
repz
push
ja
idiv
test
imul
mov
mov
add
arpl
sbb
into
jp
cld
sbb
and
lods
xchg
ljmp
out
cmp
jns
cs
negb
pop
and
pop
fistpl
in
repnz
stos
imul
xchg
cmpsb
xorb
push
push
adc
dec
jmp
mov
and
mov
or
mov
daa
fcmovbe
negl
pop
add
inc
push
mov
sub
pop
mov
xor
adc
shll
call
hlt
aaa
pop
xor
dec
pop
cld
mov
shrb
cmp
mov
fidivs
adc
cwtl
inc
in
aad
pushf
fsubs
pop
push
ret
jbe
popf
mov
mov
cli
pop
adcl
add
fdivp
dec
pop
test
mov
lea
mov
or
mov
and
dec
dec
stos
add
mov
imul
lahf
ja
and
mov
inc
jmp
push
pop
or
mov
or
push
jae
rcrb
fsubrl
ljmp
mov
incl
and
add
scas
xchg
shlb
cltd
clc
xor
in
lea
dec
or
iret
iret
cmpsb
sub
sahf
mov
xor
jno
sbb
xchg
cmpsl
scas
pusha
jp
fbld
xchg
xor
pop
in
ds
xor
xor
push
stos
mov
inc
add
push
pushf
xchg
jne
fstl
insb
sbb
or
or
lcall
adc
mov
das
lock
add
add
cmc
jb
mov
jo
jb
push
pop
push
mov
stos
call
repnz
lods
cmc
sarb
jno
pop
add
and
mov
dec
aas
or
insl
imul
scas
mov
xchg
dec
roll
test
pop
jo
ficoms
xchg
ljmp
imul
out
mov
sarl
or
pop
fcoml
cmp
mov
xor
imul
loope
jmp
jb
sti
lret
popf
xchg
iret
jbe
push
cmpsl
scas
sbb
and
jo
or
push
aad
mov
sbb
or
scas
xor
pop
lret
cmp
jle
or
mov
mov
cmp
sub
inc
mov
xchg
pop
repz
jg
and
test
sub
pop
ss
insb
icebp
or
nop
xor
repnz
ljmp
add
adc
call
nop
loope
insl
xchg
sub
nop
adc
mov
pop
repnz
jl
imul
ret
xchg
aas
popa
lock
dec
cmc
dec
cwtl
pushf
mov
adc
insb
mov
lock
aas
xlat
adcb
mov
lods
push
inc
insl
add
sbb
mov
cmpsb
lret
je
cmpsl
imul
push
sti
add
testb
push
mul
and
jbe
gs
outsb
push
lea
push
fs
js
out
out
xchg
xchg
fimull
xchg
cs
dec
ds
xor
int3
inc
test
xchg
bound
or
or
addr16
mov
fwait
loop
push
shlb
push
mov
dec
mov
mov
add
stc
test
cmp
loopne
push
xchg
and
mov
enter
mov
jge
xor
xchg
pop
jno
inc
insb
pop
lods
adc
cmp
inc
sbb
fldcw
sar
inc
jecxz
imul
je
and
loop
sti
cltd
add
cmp
add
adc
push
mov
pop
mov
sbb
in
dec
pop
inc
adc
push
rolb
std
xor
cltd
lahf
xchg
and
and
scas
stc
xlat
mov
fucom
jmp
and
and
popf
jnp
mov
xor
or
sub
cli
pop
fstps
mov
mov
pusha
fwait
notb
inc
pushf
push
repz
adc
adc
shlb
xchg
push
adc
repnz
dec
aad
push
outsb
popa
xor
push
inc
test
mov
scas
jle
pop
aam
or
andb
pop
test
inc
out
adc
movb
mov
or
arpl
fs
das
ficoml
sub
inc
mov
subl
fimuls
adc
cwtl
rorl
mov
push
lods
clc
mov
or
loop
push
jmp
sahf
inc
pushf
sub
jmp
jns
mov
jnp
mov
aad
dec
add
sub
loope
cmc
jl
xor
popf
leave
push
jg
sti
jecxz
mov
jle
pop
pop
popa
xlat
push
orl
mov
nop
adc
outsb
jnp
mov
ror
xor
inc
push
cmp
in
push
inc
inc
std
dec
jnp
gs
sub
cmp
nop
mov
push
outsl
aam
sti
sub
pop
ret
cld
dec
lods
pop
push
fmulp
mov
pop
mov
pop
clc
sbb
pop
sahf
jmp
mov
pusha
sbb
sti
pop
cmp
xor
and
mov
enter
push
inc
ds
jne
push
inc
hlt
add
lods
mov
stc
mov
cli
enter
dec
push
xor
sub
push
faddl
shll
gs
sub
xlat
andl
clc
and
xchg
or
or
jl
pop
inc
jmp
push
pusha
sub
lea
ret
xchg
mov
repnz
dec
push
daa
iret
dec
ljmp
lea
js
pop
or
mov
xor
xor
sbb
dec
movsl
cwtl
push
jo
shrb
pop
ret
mov
jb
push
xor
pop
mov
pop
mov
jp
movsb
sub
mov
jne
aam
jnp
dec
mov
scas
arpl
jnp
mov
dec
push
dec
jp
jle
or
xchg
imul
lahf
cmpb
mov
jb
mov
inc
test
xor
mov
mov
xor
je
js
cmp
push
or
sub
icebp
mov
jecxz
jb
sahf
inc
scas
mov
sbb
bound
adc
nop
push
sub
dec
loop
mov
cmpsb
mov
movsb
push
jg
jmp
aam
leave
pop
push
sbb
cmp
rcl
call
adc
addl
push
add
xor
stc
dec
inc
test
cmp
xchg
jge
cmpsl
ror
cmp
push
and
inc
cmp
int3
jae
shl
out
les
jb
mov
ss
shrl
jmp
or
ljmp
data16
stos
cs
and
add
stos
xor
mov
xor
popa
sbb
fisttps
jne
test
notl
pop
aad
jo
repnz
and
in
and
pusha
insb
adc
mov
lods
push
push
or
movsb
and
push
push
xchg
or
shrb
cmp
movsb
sub
aad
or
sub
rcll
cmpsl
orb
inc
andl
mov
jp
sub
mov
addr16
dec
pop
pop
test
out
jne
xchg
adc
xchg
cmpsb
push
xchg
outsl
cltd
aaa
cmpsb
stc
mov
mov
mov
mov
stos
mov
mov
lods
xchg
xchg
cmp
mov
mov
lcall
jmp
ds
push
scas
fsubl
dec
lods
xor
inc
xor
jl
aas
mov
nop
adc
fcmovnb
aaa
in
sub
iret
jle
cltd
nop
inc
int
and
aas
cmpsl
sbb
lahf
dec
cmp
testl
rorl
and
insl
lods
jmp
sub
in
sub
in
ffreep
adc
mov
xchg
loop
cmp
mov
xchg
sbb
push
notb
jge
mov
lret
lahf
mov
dec
cmp
sub
sarl
adc
xchg
pop
mov
mov
lahf
and
lods
jge
and
in
int
and
xchg
ss
test
ljmp
pop
hlt
jno
xchg
pop
imul
sub
in
fwait
dec
push
testl
jne
lret
shr
enter
pop
popf
and
int
pop
mov
cmp
jg
lret
aad
mov
std
and
dec
lcall
mov
pop
psrld
mov
inc
push
mov
sub
std
mov
jmp
imul
rolb
mov
add
imulb
scas
and
cmp
xchg
cmp
dec
mov
ss
int3
insl
loopne
insl
sarb
pop
jo
inc
out
mov
std
cli
imul
das
rcll
movsb
xlat
inc
jmp
dec
push
add
xchg
movsb
jle
jecxz
mov
pop
fimuls
sbb
inc
xchg
pop
stc
pop
adc
mov
xlat
mov
fadd
jle
les
scas
dec
cmpsb
sub
lret
inc
or
cld
and
loopne
or
aas
faddl
sbb
fxch
jp
outsl
movsl
pop
mov
push
mov
cmpsl
imul
js
mov
ja
push
cmp
aad
cmp
jecxz
test
push
lods
notl
mov
sub
cmp
add
hlt
add
filds
push
popa
cltd
enter
pop
adc
ficoml
daa
inc
pop
inc
rolb
push
sbb
lret
mov
add
loopne
inc
inc
lret
pusha
sbb
stos
enter
fildl
loope
daa
push
js
ss
or
add
sub
fcoml
or
adc
lock
jmp
out
addr16
aad
jae
sbb
cmpsb
pushf
mov
adc
gs
ljmp
xchg
lret
or
ljmp
xor
fcomip
ficomps
push
movsl
iret
mov
jmp
les
ret
sbb
pop
mov
shl
fcompl
js
xor
or
aad
test
and
mov
mov
and
or
ja
mov
mov
mov
jp
cmpsl
shrl
arpl
aas
jb,pn
in
push
popf
mov
inc
in
fisubs
lcall
popf
pop
bound
lahf
fcoms
mov
clc
sbb
inc
outsl
rorl
jmp
loope
sbb
sub
pop
addr16
fdivs
pop
enter
cmp
outsb
sarl
push
js
test
mov
lds
lcall
cmp
adc
sbbl
in
mov
repz
mov
sbb
fldl
mov
mov
xchg
jbe
loop
outsl
scas
cmp
xchg
insb
loope
js
lret
pop
fs
cmpsb
mov
inc
scas
sub
aas
jnp
roll
cltd
and
arpl
sub
mov
mov
orb
fists
cmp
mov
xor
lods
adc
jae
and
pop
imul
and
insb
fidivs
and
jo
nop
mov
push
push
ss
in
push
test
jns
aam
jne
lret
ret
dec
in
imul
adc
jne
fistl
fidivs
lcall
and
cs
push
popa
repz
in
incb
outsb
xorl
es
xchg
xor
fwait
pop
mov
jb
adc
iret
aaa
test
cmpsl
adc
or
movsb
jne
sub
and
sub
dec
fsubrs
mov
iret
data16
add
push
add
insl
dec
scas
orb
vmread
inc
cmpsb
jp
jle
xchg
cmpsb
fildll
sarl
cmpb
mov
lahf
mov
je
push
movsb
jnp
rcrb
stos
repnz
or
mov
js
test
cltd
aad
dec
xchg
mov
inc
add
mov
push
push
rorb
test
cltd
cmpsb
subl
mov
sahf
jns
not
js
push
and
push
cli
cli
fistl
cmp
pop
insl
inc
popl
fnstsw
dec
addr16
in
icebp
das
out
jb
mov
aas
push
mov
shlb
cmp
xchg
clc
outsb
addb
sbb
pop
sbb
cli
popa
jle
lcall
shrl
sub
mov
lret
inc
inc
imul
sti
ss
mov
xor
mov
pop
cmp
push
mov
and
jo
not
dec
sahf
lahf
lahf
add
into
ficoms
or
mov
sti
jbe
push
inc
es
stos
dec
xor
repnz
jmp
lea
cmp
pop
jl
xchg
jb
sbb
and
dec
sahf
xchg
fdivs
sahf
std
jno
leave
movsl
push
mov
mov
insl
lret
or
test
mov
js
iret
stos
jecxz
dec
data16
ret
arpl
int3
xlat
repz
inc
out
test
xchg
cmp
jns
cmp
jl,pn
cs
gs
in
add
mov
in
andb
push
insb
cltd
jmp
aad
insl
add
or
xchg
xchg
push
pop
repz
pop
int3
sub
mov
insb
out
push
and
mov
adc
cwtl
repnz
xor
int
sub
mov
shll
cmp
xor
mov
inc
push
add
sahf
pop
cmp
pop
data16
mov
in
outsb
pusha
lods
jbe
ljmp
xchg
cwtl
mov
push
sbb
repnz
ljmp
adc
fisttps
outsb
scas
lock
repnz
nop
push
push
mov
sbb
sarl
insb
and
sub
pop
out
sbb
cwtl
mov
mov
add
xor
fidivrs
pop
push
sahf
rolb
mov
aad
call
and
push
jns
repz
daa
cld
xor
xor
call
push
push
jne
jp
add
inc
push
adc
xchg
mov
fmuls
adc
lods
push
sub
jmp
jo
rep
lock
movsl
xchg
xchg
aas
int3
mov
pop
push
add
je
insb
cmp
pop
enter
roll
push
mov
cmp
sub
paddb
fbstp
ja
adc
push
imul
pop
xchg
mov
add
mov
in
stos
ja
pop
jle
xchg
movsl
ja
js
aaa
andl
lahf
jge
insb
dec
mov
aaa
push
pop
nop
mov
mov
fmuls
or
shlb
mov
mov
jbe
gs
loopne
fistl
call
fcmovnb
lret
test
adc
push
insb
je
xor
mov
add
loope
outsl
lds
sbb
push
das
jmp
jle
cmp
mov
xchg
dec
push
sub
jbe
sbb
sbb
ret
push
mov
jge
frstor
pop
jnp
dec
jge
push
outsl
push
jl
dec
mov
push
jmp
add
inc
inc
cld
loope
popf
jns
mov
pushf
fdivrs
mov
and
shlb
push
push
or
dec
add
pusha
test
repnz
ret
leave
or
mov
aad
add
in
int
fsubs
sub
push
and
lods
daa
push
ljmp
sub
or
call
mov
cmpsl
jnp
stc
shrl
hlt
and
jb
fwait
add
push
cwtl
bound
mov
push
jmp
inc
add
out
clc
or
fcomps
jmp
xchg
dec
push
sbb
rorl
rolb
shr
jae
das
jmp
inc
ret
fnstsw
mov
ror
repnz
fildll
stos
or
push
addb
push
and
sbb
mov
into
ret
inc
cltd
roll
ljmp
lds
imul
cwtl
pop
mov
pusha
cltd
xlat
xor
pop
fcmovnbe
loopne
push
dec
cmp
push
and
fisubrl
adc
sub
xor
ret
pop
or
mov
repnz
push
fs
cli
mov
jne
jnp
push
sti
sub
daa
dec
in
xor
clc
push
cli
cli
lds
mov
ds
andb
cmpl
jmp
lods
sbb
imul
pop
repnz
popf
mov
sub
mov
shl
dec
push
into
gs
and
dec
push
cwtl
jl
int
in
inc
fldln2
mov
sarl
in
andb
mov
cmp
xor
popa
adc
inc
arpl
mov
mov
out
repnz
stos
jno
sahf
inc
popa
dec
js
rcrl
or
xor
jbe
iret
cmp
out
insb
adc
leave
mov
out
pop
lahf
cmc
gs
dec
push
imul
sbb
mov
jle
jmp
xchg
sti
test
aad
push
pop
ret
rolb
imul
push
xchg
pop
jmp
mov
testb
push
jns
jae
inc
loop
jle
pop
sbb
pop
dec
ljmp
adc
outsl
lahf
and
rclb
mov
adc
cmpsl
jbe
pop
bswap
fcomps
push
ds
pop
ds
mov
xor
arpl
xor
inc
mov
mov
lods
add
je
test
clc
movsb
bound
cmpsb
addr16
add
xchg
jb
negb
leave
push
test
cli
pop
fstps
mov
stc
xlat
das
out
mov
adc
push
add
cmpsb
xor
jno
int
xchg
rcrl
fisubrs
repnz
cmc
rorb
mov
sub
or
inc
sti
pop
out
adc
pop
lods
jne
in
mov
cmp
jg
pop
pop
dec
daa
addb
test
dec
add
inc
push
scas
ljmp
fwait
aam
sbb
or
pop
inc
pusha
bound
sbb
xor
ja
nop
dec
jl
pop
inc
mov
pop
cli
out
mov
mov
clc
enter
sbb
dec
leave
push
imull
mov
cli
out
xchg
mov
fldl
loope
ss
dec
popa
in
sbb
jecxz
fimull
clc
push
xchg
arpl
cmp
jecxz
inc
rcll
je
add
sbb
adc
mov
sub
cmp
ret
jns
jno
add
mov
call
mov
push
xchg
add
pop
jl
imulb
jae
sub
fldcw
push
andl
xchg
loope
add
or
insl
jae
repz
mov
adc
mov
xchg
and
push
fisttps
adc
mov
pop
inc
pop
jnp
icebp
lahf
pop
adc
and
and
or
mov
or
cli
cmp
ljmp
test
sub
inc
inc
cmp
pop
xchg
cmc
or
sub
xor
sub
aam
cld
adc
cmp
and
sbb
stc
sbb
cmp
pop
xor
je
pop
in
enter
xor
sub
xchg
sub
push
adc
mov
fsubr
cmp
das
addr16
jg
jo
adc
mov
inc
jae
loopne
lahf
pop
and
cmp
pop
inc
repz
movsl
jne
insb
and
jge
sub
mov
insb
cmpl
add
dec
enter
lahf
push
dec
push
repz
inc
insb
out
sub
insb
dec
add
nop
gs
repz
call
divl
fsts
mov
xchg
icebp
in
sbb
add
repnz
mov
pop
lret
push
cmp
inc
dec
cld
or
dec
adc
push
addr16
out
push
pusha
div
sub
mov
push
adc
punpcklbw
inc
lcall
push
cmpb
push
xchg
xchg
and
cli
cmc
sub
or
pop
adc
mov
xlat
jbe
mov
arpl
jge
mov
pop
and
fs
inc
add
cmp
aaa
mov
jno
push
xor
push
std
mov
pushl
aam
adc
add
push
mov
add
outsb
out
push
outsl
aad
pop
shlb
xchg
ret
sbb
push
pop
test
jmp
adc
aaa
les
cld
aaa
addr16
cwtl
mov
scas
icebp
pushf
loope
cwtl
imul
push
mov
cwtl
out
lods
xchg
xor
cmp
or
jmp
mov
lds
lret
fldt
jmp
inc
fiadds
imul
xlat
cmp
data16
je
pop
adc
xor
out
inc
fs
in
push
int3
and
cmp
adc
imul
sub
and
inc
imul
mov
cmp
cmp
jle
sar
xor
sbb
lret
in
std
inc
jne
inc
jmp
mov
xor
clc
cmp
mov
push
pop
mov
and
stc
aaa
sahf
inc
bound
lods
sub
mov
nop
iret
push
sbb
cs
jmp
jmp
xor
outsb
jnp
xlat
pop
cmp
ss
sub
cmpl
lahf
adc
fldt
test
push
mov
fs
pop
sub
call
lahf
adcl
fcmovnb
push
lret
hlt
arpl
int3
cld
sub
mov
xchg
shrl
int
shl
pop
and
popf
and
xchg
mov
insb
rorl
bound
mov
cmp
cmp
jl
mov
aaa
push
mov
addr16
xchg
fcmovnb
mov
outsb
ss
inc
aaa
ret
cli
shr
xlat
lahf
clc
mov
sub
lds
je
lods
and
loope
dec
out
adc
xchg
cmp
lret
mov
mov
inc
sti
inc
pop
je
out
shrb
pop
out
ja
mov
test
lods
adc
enter
or
dec
je
pop
cmp
jne
test
cld
outsb
xchg
push
stos
xchg
outsl
jae
pop
fstl
pushf
negb
and
aaa
jl
lcall
dec
int
call
loopne
xor
es
fmul
flds
fidivrl
jbe
mov
mov
fdivrs
cmp
cwtl
rol
push
cld
in
xor
fs
gs
out
sti
flds
lret
das
addb
addr16
lock
add
arpl
jg
ljmp
dec
jno
sub
lea
out
sahf
dec
mov
int
mov
adc
sbb
call
ss
popf
mov
andb
filds
je
in
aam
insl
xchg
loopne
cmpsl
rcll
sub
jecxz
mov
mov
ljmp
int
movsl
stc
stos
nop
lds
sub
mov
inc
call
into
pusha
pop
movsl
pop
sbb
cmp
push
add
in
ss
add
lea
cwtl
addr16
xor
jae
jg
repnz
nop
mov
add
pop
adc
test
mov
pusha
fidivl
add
in
sub
mov
dec
jo
notb
decb
outsl
inc
mov
ds
fistpll
push
iret
jae
mov
test
jle
mov
adc
es
or
mov
loopne
push
shll
pusha
inc
mov
out
std
pop
add
out
xor
mov
ret
and
outsb
push
sbb
insb
adc
xchg
jne
jb
ret
repz
aas
or
cwtl
mov
dec
into
je
mov
cmp
adc
pop
xor
jp
push
mov
repz
or
sub
mov
call
in
sub
sbb
mov
jb
push
push
in
add
jb
popa
andb
aam
pop
inc
jle
pop
adc
test
negb
nop
sub
scas
pop
arpl
mov
mov
loope
xorl
inc
pop
push
jb
xchg
xor
aaa
or
jbe
xlat
mov
shrl
scas
ds
out
pop
dec
add
aam
xchg
lea
dec
enter
loopne
jo
mov
or
push
int
push
shll
outsb
fidivs
mov
mov
hlt
jns
push
cli
or
push
cmpsb
cmp
cmp
fcoml
arpl
je
dec
sbb
les
adc
cmp
xchg
lcall
rcrl
cmp
pop
xor
pushl
push
or
das
mov
push
shrb
or
daa
xchg
mov
dec
scas
inc
pop
inc
xor
sub
mov
add
adc
xchg
iret
mov
mov
mov
das
xor
test
fstl
test
test
scas
xor
lahf
dec
jge
gs
scas
push
push
shrl
es
xor
xor
js
push
jmp
inc
lret
inc
test
add
enter
fstpt
jg
pop
inc
pop
mov
or
sbb
xor
ds
cmp
iret
movsb
mov
lret
inc
imul
cmp
mov
dec
sbb
scas
lret
and
iret
mov
adcl
push
fdivl
cmp
inc
push
jmp
scas
das
sbb
pop
mov
fisubrl
jnp
mov
loop
fsubrs
rolb
testl
and
enter
pop
andl
jo
jp
mov
lea
pusha
push
inc
gs
out
push
ret
sub
jno
test
adc
ret
jl
push
bswap
lods
sbb
fsubs
mov
add
scas
dec
push
insl
incl
mov
fstps
in
sub
or
adc
fcompl
fisubrl
lods
mov
mov
jns
rcrl
xlat
pusha
fwait
shr
in
and
add
cld
lds
jg
mov
stos
jp
adc
jne
outsl
xor
pop
pop
fldenv
mov
adc
ljmp
icebp
push
loopne
push
xchg
cmp
mov
daa
leave
test
and
insb
xchg
mov
addl
cmc
mov
lock
and
cmp
xchg
stos
out
inc
loop
push
xor
imul
push
dec
jne
push
and
pop
or
je
jns
jmp
mov
les
pop
into
cmpsl
adc
pop
and
movsb
aam
mov
mov
adc
lock
push
pushf
insb
scas
fisttpll
mov
sub
adcl
xor
mov
fistpll
dec
sub
mov
add
test
sub
push
mov
mov
xlat
cmp
lret
cwtl
xchg
xor
and
popf
mov
movl
push
push
mov
inc
and
loope
cmc
xchg
sti
in
lods
adc
ret
pop
or
dec
sti
lods
es
cmpsl
rorl
fidivl
dec
xor
in
lahf
je
gs
pop
lahf
aaa
jo
mov
into
dec
xor
ljmp
inc
sub
bound
mov
pop
xor
mov
cmp
fsubl
push
cmpsl
mov
mov
xchg
xor
cltd
mov
imul
sub
das
cmpsb
pop
cmpsb
fidivs
and
aad
hlt
aam
fmuls
mov
mov
fldl
roll
xorl
dec
mov
push
sub
and
testb
dec
cmp
test
aaa
dec
pop
mov
push
fwait
mov
lcall
cmp
sbb
imul
fdivs
fsubr
adc
ds
inc
aaa
scas
outsl
mov
or
sub
insl
stc
scas
jg
and
je
and
stos
in
fs
icebp
movsb
rorb
mov
xor
inc
test
cmp
ret
call
in
in
add
pusha
ret
dec
stc
dec
mov
aam
rcrb
lahf
and
mov
cmpl
bound
add
cld
pop
rorb
jmp
and
testl
into
jae
mov
dec
daa
psllq
test
push
mov
loope
mov
and
xchg
cli
mov
sub
sbb
shll
ss
xor
fstpl
insb
cmc
lret
mov
sbb
pop
lahf
pop
jb
sbb
push
cwtl
mov
jae
adc
test
mov
push
outsl
xchg
xchg
dec
adc
sub
gs
jo
mov
jbe
test
insb
sub
inc
divb
or
xor
sbb
and
out
test
lods
pushf
fcomp
scas
jmp
push
shll
pop
push
leave
cmp
xchg
cmp
cmc
pusha
stos
or
cmpsb
insb
mov
pop
add
jne
inc
icebp
bound
mov
bnd
mov
icebp
out
out
popa
stos
jecxz
arpl
dec
subb
int3
dec
test
pop
stc
mov
das
leave
aad
or
cmc
cmp
or
mov
cmp
ja
bound
hlt
pxor
mov
out
das
and
out
jge
fidivrl
push
repz
sti
fcmovnu
out
or
fistl
loope
mov
data16
cmp
xchg
cltd
clc
shll
jns
stc
dec
in
cmp
lock
pop
xor
push
or
test
sarl
hlt
icebp
mov
jp
shr
mov
clc
cmp
mov
jl
pop
cmpsl
mov
xchg
xor
or
adc
inc
jns
outsl
dec
xlat
sahf
jmp
data16
iret
aad
loopne
sbb
jo
mov
cmpsl
push
and
xchg
scas
dec
cmp
ret
cmpsb
gs
popw
jbe
pop
xor
and
clc
pop
dec
push
loop
xlat
xor
rcl
sahf
mov
adc
inc
aam
jge
and
iret
jne
movsl
xchg
or
or
sbb
mov
inc
jecxz
mov
insl
xor
dec
jg
lahf
mov
into
test
and
mov
mov
mov
sahf
dec
mov
addr16
outsl
inc
dec
mov
dec
mov
stos
adc
es
cmp
mov
fwait
push
cmc
sub
mov
je
mov
js
outsb
in
dec
test
call
xor
es
xor
jmp
imul
push
repz
sbbb
jecxz
out
mov
loope
xchg
jmp
hlt
mov
mov
sbb
flds
inc
push
subl
xchg
lods
daa
push
inc
stc
int3
clc
sbb
scas
sbb
xchg
scas
add
cmpl
jb
cmpsl
push
inc
xchg
mov
xor
jae
ds
es
xor
mov
repnz
arpl
and
stos
mov
fdivl
ja
int3
lret
or
xchg
adc
pop
mov
leave
push
cmc
pop
hlt
and
xchg
pop
mov
daa
lahf
andb
push
test
pop
lea
stos
cmp
mov
outsb
jno
pop
andb
inc
out
and
push
jge
xchg
add
inc
cwtl
adcw
je
inc
pop
mov
xchg
inc
jmp
fcomps
lret
dec
lcall
xor
push
add
cmp
inc
aad
lock
out
mov
out
inc
pop
and
mov
nop
shlb
and
loopne
jo
push
gs
fldl
mov
add
sub
loope
mov
movsb
push
dec
idivl
fisubs
es
gs
aad
or
pop
jge
add
jg
clc
icebp
jp
xchg
xchg
insb
cmpsb
add
xor
out
dec
movsb
inc
jmp
mov
cli
scas
xchg
test
inc
sahf
int
mov
cld
add
imul
add
push
pop
sarb
push
push
sub
out
ret
mov
mov
pop
mov
pop
test
ss
dec
mov
es
les
jecxz
jno
lahf
fs
cmp
push
inc
lahf
mov
jae
inc
nop
jae
mov
and
pushf
xor
mov
inc
fldl
and
pop
mov
pop
inc
push
loopne
sub
repnz
sub
dec
jb
mov
stos
mov
push
insb
arpl
daa
or
jecxz
fnstcw
or
add
sbb
add
sbb
mov
fsubrl
aaa
or
adc
fsubr
insl
aam
xchg
pop
ret
out
fildll
shr
movsl
cmp
push
mov
jbe
adc
sub
cmp
fdivs
pop
mov
insl
je
in
gs
add
insl
mov
cmc
mov
int3
jle
fsts
ja
sbb
enter
es
push
jp
push
pop
mov
sti
ss
sbb
out
fwait
out
sub
outsl
push
lods
in
fistl
icebp
cmp
pop
jle
loop
push
jb
inc
insb
movsb
ficompl
std
and
jl
mov
sti
mov
popa
je
add
shl
shlb
push
js
cmp
mov
sub
aaa
test
in
das
aad
dec
xchg
psubd
scas
rolb
lea
dec
ljmp
dec
outsb
sbb
add
jnp
inc
lea
and
pop
and
mov
stos
xor
dec
xchg
repz
inc
test
pop
les
dec
mov
or
mov
pop
and
pop
mov
and
and
cltd
repz
out
push
imul
scas
jl
enter
mov
pop
jns
pusha
xlat
xchg
clc
loopne
xor
fsincos
cwtl
popf
stc
insl
and
lds
nopw
fidivrl
mov
loope
clc
cli
push
jb
les
jmp
mov
lds
pop
fiadds
jb
cmp
mov
pop
addr16
adc
jmp
cmp
and
mov
mul
mov
repz
fwait
mov
jmp
in
out
sahf
mov
sbb
lds
orl
inc
sbb
je
pop
adc
or
xchg
push
cmp
mov
jmp
js
imul
sbbb
jno
rol
psubsw
addl
sbb
stos
xor
int3
ss
and
xchg
test
sbb
mov
dec
test
push
pushf
out
mov
cmp
push
iret
push
ret
iret
pop
xor
mov
xchg
cmp
xchg
xor
pinsrw
lcall
aam
adc
jle
mov
jecxz
mov
imul
xor
stc
loop
stos
in
push
lret
fsubrl
adc
xchg
rcrb
xor
int
cmp
jo
cwtl
arpl
lret
jb
fistl
movsb
or
push
cmp
loope
xchg
mov
ret
or
or
pop
inc
sarb
out
movsl
and
inc
fcomps
pop
adc
cltd
sub
add
inc
mov
imul
cmp
fdivs
lahf
cli
and
mov
bound
sbb
fildll
sbb
pop
ret
divl
lds
and
mov
mov
stc
inc
imul
xchg
adc
imul
sbb
fsubrs
jge
push
push
mov
stos
loop
jp
mov
daa
imul
cmc
xor
cmp
adc
and
imul
mov
pushf
aad
sbb
xchg
dec
mov
mov
stc
call
adcl
jmp
xor
and
inc
aaa
xchg
push
mov
and
sbb
aad
fwait
dec
jge
loop
sbb
push
and
xchg
lret
pop
cmp
pop
test
dec
add
xor
jae
cmp
cmp
cs
inc
lcall
mov
lcall
jg
push
mov
add
adc
push
test
adc
aas
bound
jno
push
and
mov
pop
aam
fs
xor
cmpsl
lods
push
sub
cli
mov
pop
inc
pop
lahf
nop
or
mov
jle
lahf
adc
sbb
fstps
push
mov
clc
dec
and
subb
dec
insb
es
jno
ljmp
xor
mov
push
jno
orb
mov
in
sbb
sbb
out
xor
icebp
push
loope
in
rclb
rcrl
ret
into
mov
jns
pop
push
outsl
mov
or
fnstcw
ret
sti
cmp
hlt
dec
cmp
js
lods
das
inc
xchg
or
mov
pop
sbb
lret
inc
add
mov
xorl
in
xlat
lgs
adc
cwtl
test
cld
and
outsl
jnp
lods
and
xchg
shll
repnz
mov
out
mov
inc
pop
out
xchg
xor
lods
clc
test
jno
loopne
push
aam
pop
jnp
cmp
frstor
cmp
jmp
jecxz
push
hlt
outsb
xor
ljmp
or
and
jmp
jl
jecxz
in
mov
cld
adc
fsubrl
inc
faddl
and
jae
push
repz
xchg
add
iret
rorb
pop
xchg
push
push
test
das
mov
sbb
cltd
std
cmp
scas
push
xchg
mov
xchg
inc
rcrb
movl
addr16
out
push
mov
push
aam
clc
outsb
int3
and
sarl
mov
and
popa
inc
sbb
mov
push
lcall
push
sbb
jne
iret
xchg
bound
xchg
sub
jge
mov
push
movsb
movsl
and
mov
out
out
test
pop
push
mov
jl
sbb
add
xchg
dec
lret
popa
jae
les
call
xlat
jmp
xor
pop
jbe
xor
mov
push
cmp
pop
xor
dec
stos
lret
inc
cld
lea
jb
stc
ret
jmp
lahf
or
lret
repnz
insb
push
push
inc
addl
scas
pop
es
shr
inc
push
xor
mov
xor
cmp
xchg
and
dec
fnstcw
and
pop
rcr
add
cmp
dec
pop
aam
lods
lcall
repnz
sbb
cmp
sub
out
jp
mov
rcrl
jle
iret
out
sbb
cmp
test
std
js
or
je
cmp
mov
sarl
inc
iret
test
sub
pop
adc
sbb
jg
jns
outsb
fs
jbe
push
mov
aad
add
rcrb
fidivrs
pop
or
sub
push
xor
scas
adc
push
insb
xchg
dec
movsl
push
lcall
xchg
fmull
cmp
pop
push
stc
inc
mov
ja
std
push
pop
in
gs
push
push
gs
fistps
or
aaa
jne
adcb
and
call
mov
or
shr
xchg
clc
imul
and
jbe
mov
adc
in
lods
insl
pushf
aam
fwait
push
pop
jbe
es
adc
jmp
xor
sbb
rcl
add
lock
dec
pop
inc
jne
dec
sbb
adc
jg
js
das
test
inc
hlt
jns
xor
stc
push
mov
sbb
pusha
cmp
scas
xlat
mov
movsb
pop
jne
lret
sarb
aam
clc
imulb
push
nop
das
ds
mov
repnz
cmc
push
push
outsb
cmp
mov
mov
xchg
je
dec
pop
adc
push
push
nop
mov
sub
jns
iret
mov
mov
or
or
aas
or
ja
in
or
mov
jmp
jecxz
js
or
mov
adc
test
xor
adc
ljmp
jns
mov
xchg
les
push
fwait
out
jnp
hlt
and
xchg
es
or
mov
xchg
lahf
mov
gs
rol
outsl
mov
sub
add
cmpb
or
stc
icebp
push
ss
aas
dec
xor
push
jmp
aas
iret
xchg
xor
pop
adc
pop
cltd
test
sbb
and
mov
cmp
jb
mov
mov
mov
adc
sti
stos
sarl
jmp
insl
add
in
lahf
lock
xchg
mov
out
cmp
xor
add
or
jg
lea
cltd
xchg
xor
sbb
in
aad
aaa
fnsave
rolb
iret
bound
movsl
inc
aas
iret
mov
mov
adc
jns
push
arpl
jg
mov
inc
sbb
add
adc
and
lea
imul
mov
mov
inc
sub
xchg
add
rcrl
addr16
cmpsl
add
dec
inc
mov
lods
adc
cmp
jmp
notl
inc
push
int3
adc
imul
sarb
push
push
in
sub
sbb
test
xor
sbb
and
jp
mov
xchg
nop
and
popf
enter
and
mov
sub
loopne
add
icebp
pusha
nop
cmpsb
pop
jo
fbstp
pop
push
sub
mul
ror
mov
dec
lahf
jb
xor
xor
ja
in
sub
sub
imul
push
lret
aad
insl
negl
fscale
clc
adc
mov
cmc
lock
push
imul
fstps
leave
imul
cmp
addr16
and
xchg
adc
sbb
mov
fwait
divb
cmp
js
jecxz
lahf
mov
dec
cmp
stos
cwtl
popf
push
sub
ret
push
inc
ret
and
stos
cmc
xchg
jle
pop
popf
pop
sysret
and
push
cmp
out
dec
adc
pop
sti
sub
fptan
aas
ret
xor
daa
stos
lock
mov
nop
je
ret
mov
add
adc
cmpsb
imul
int3
cltd
mov
pop
cmp
pop
movsl
dec
pop
adc
pop
pop
dec
push
mov
push
inc
shll
dec
pop
push
mov
cltd
xor
sbb
lods
and
add
scas
dec
ror
ljmp
movsl
out
shlb
xchg
js
jns
out
in
or
dec
shrb
xor
pop
dec
aas
cmovnp
aaa
mov
out
scas
mov
mov
leave
xchg
mov
mov
mov
xchg
bound
mov
sub
cli
js
push
pop
mov
ja,pt
ljmp
jp
add
sub
xchg
inc
cli
loopne
pop
shrl
push
cmpsl
sahf
jp
hlt
pop
mov
push
xor
mulb
mov
repz
neg
xchg
fistps
sar
push
jnp
pushf
das
dec
ljmp
std
adc
xor
faddl
icebp
cmc
sbb
mov
imul
dec
jg
notl
icebp
xchg
outsb
push
hlt
mov
pusha
mov
movsb
out
push
mov
in
sbb
out
dec
inc
fnstenv
das
mov
ret
in
call
imul
cli
negb
jl
ds
xchg
inc
movsl
inc
mov
mov
out
jmp
mov
arpl
outsl
push
jb
mov
pop
insl
lods
pop
arpl
xchg
ret
sub
xchg
adc
dec
lcall
outsl
xor
stc
sbb
hlt
mov
das
sbb
mov
in
aad
cltd
push
push
xchg
xor
xchg
jne
gs
int3
jge
movsl
cmpsl
cmc
stos
dec
icebp
xor
out
jmp
lcall
repz
mov
mov
hlt
sbb
cmp
mov
jb
mov
or
xor
data16
sti
stos
jb
xchg
cli
mov
and
mov
sbb
sti
mov
or
jb
push
in
adc
popf
mov
or
test
mov
and
inc
in
push
xchg
inc
jge
aam
fisubs
lret
testl
cmp
dec
cmp
or
call
sub
push
add
jl
cwtl
and
cmp
fdivrs
inc
pushf
lock
popa
push
adc
or
out
dec
adc
add
push
pusha
in
mov
lods
pop
dec
xor
imul
out
sub
sbb
inc
mov
insl
es
aam
lock
lds
mov
lret
mov
pop
push
sub
popf
mov
cmpsb
lret
mov
dec
stos
popa
pop
cmp
cltd
sub
jg
dec
enter
xor
icebp
das
in
or
cmp
in
insb
mov
mov
lea
movsb
movsb
rorb
ffree
or
mov
mov
sbb
je
jae
fst
subl
pop
insb
jl
fwait
jl
pop
mov
or
aas
push
int
xor
mov
hlt
or
and
test
jae
movsl
cmc
xchg
mov
cwtl
insb
jbe
push
push
sub
ret
dec
pop
cwtl
inc
and
mov
pop
mov
dec
xor
mov
mov
mov
stc
jge
jmp
push
and
inc
cmp
xor
lahf
into
mov
cld
lea
ret
pop
in
rorb
movsb
xchg
outsl
xchg
xchg
lahf
dec
ja
pop
imul
add
xchg
sub
add
in
xor
inc
fs
pop
incl
imul
dec
loopne
fwait
add
stos
shlb
mov
repz
cmp
cmpsb
push
sbb
fnstcw
fistps
adc
aad
and
xchg
inc
sbb
stos
or
cmp
aam
jmp
mov
movb
dec
not
add
lods
lock
sahf
and
icebp
adc
adc
cli
fsubrs
in
mov
push
enter
cwtl
jno
inc
or
lods
lock
and
xlat
pop
loopne
mov
push
rolb
sub
dec
stos
inc
aas
xchg
and
push
dec
lods
mov
pop
sbb
adc
mov
fwait
or
mov
leave
or
mov
jmp
mov
addr16
xchg
cmp
sub
shll
xchg
xlat
jmp
cwtl
cmp
test
jae
jle
sbb
and
gs
cmpsl
cld
call
jo
mov
sub
push
call
fists
cmp
fs
and
stc
xchg
inc
scas
les
test
or
xchg
mov
xchg
ffree
or
mov
jp
jne
int
movsb
xchg
iret
int3
insl
movsb
inc
clc
aad
aam
jae
add
add
sub
lahf
cwtl
fisttpl
pop
xlat
and
in
int3
push
shlb
push
movsb
pop
inc
mov
adc
in
das
lret
adc
sbb
repnz
pop
test
test
jge
xchg
movsb
pusha
mov
shrb
xor
xchg
out
push
clc
push
mov
dec
sub
mov
pop
or
and
mov
jns
rorb
movsl
xchg
das
add
into
scas
xor
jbe
xchg
push
xor
pop
and
dec
mov
test
or
lret
hlt
sarl
repz
jmp
sbb
cmp
shlb
mov
lret
sub
out
push
inc
ja
push
hlt
fisubs
sbb
add
pop
lret
movsl
dec
inc
popa
or
adc
dec
pop
add
xchg
cmp
dec
and
fwait
xor
push
lret
in
xchg
mov
arpl
and
push
fs
adc
mov
stos
in
adc
fwait
mov
mov
jmp
add
int3
or
cmp
fwait
icebp
aaa
leave
xchg
aaa
and
adc
mov
jae
jmp
push
shll
mov
pop
lea
cld
push
dec
jg
daa
dec
inc
push
out
mov
loop
lret
in
jge
stos
mov
repnz
mov
cwtl
adc
xor
pop
jns
inc
sar
xor
mov
popa
push
aaa
test
mov
xor
rorb
cmp
pop
faddl
out
stc
in
jge
mov
lock
push
inc
add
repz
dec
pop
inc
mov
clc
pushf
dec
xchg
loop
add
test
pop
add
subl
rorl
jns
movsl
dec
inc
scas
mov
adc
sub
vmovhps
mov
inc
mov
sti
add
test
popf
ds
xlat
mov
xchg
imul
jno
pop
pop
push
dec
sbb
or
iret
fistps
in
bswap
add
call
mov
lahf
sqrtps
pop
enter
xchg
adc
xlat
imull
fildl
push
or
dec
xchg
mov
or
jo
xchg
std
and
xor
lahf
xchg
cmp
sbb
or
movsb
sti
lds
dec
or
lret
or
xor
leave
jns
jle
lret
cs
xchg
loopne
movsl
push
mov
pop
or
movsl
out
sti
xlat
lret
mov
sbb
adc
mov
adc
jge
into
int3
imul
cld
sahf
pop
cmp
xor
cwtl
out
jmp
fs
jne
aaa
sub
mov
inc
mov
ss
scas
pop
lcall
xor
stc
fmull
pop
in
es
js
lods
jle
fs
mov
fstl
enter
xchg
testl
mov
inc
xchg
pop
sub
jnp
cs
cwtl
push
into
stc
popa
nop
loope
scas
adc
mov
inc
pop
dec
pop
js
jp
mov
and
aad
outsl
shrb
jge
mov
sbb
pop
sti
push
push
xor
add
arpl
and
gs
hlt
xchg
xor
mov
mov
cs
daa
pop
hlt
push
mov
dec
push
repz
sarb
ret
dec
gs
jns
cs
jo
imul
stos
pop
cmpb
mov
inc
mov
pop
rcrl
fsts
mov
mov
outsl
sbb
int3
in
push
mov
clc
cli
cmp
mov
lods
into
push
popf
mov
lock
mov
dec
push
xchg
sub
jp
ret
jnp
das
push
cmp
fstpt
cmc
push
cmp
std
sbb
mov
aad
fdiv
aam
sub
push
inc
xor
sbb
clc
jbe
movsb
fwait
jmp
xchg
push
sbb
jne
sahf
cmp
and
xchg
xchg
push
rcll
das
out
ret
pop
sub
rcl
in
and
insl
fsubl
jecxz
jecxz
inc
jg
mov
cmp
aas
ljmp
hlt
sbb
xor
xchg
sbb
jmp
loop
dec
cmp
bound
pusha
andb
sbb
pushf
push
stos
cmp
push
and
dec
enter
cmp
mov
jg
repz
dec
jge
fmull
sub
xor
popf
mov
mul
sbbl
out
fcomps
sub
enter
in
push
xlat
dec
or
repnz
std
push
je
sub
sub
cmp
jle
mov
dec
leave
icebp
idiv
push
xor
icebp
or
loop
mov
xlat
add
mov
xor
push
xchg
pop
cmpsl
orb
rcrl
xor
dec
jo
cmp
ror
xchg
inc
push
add
mov
mov
dec
jne
push
arpl
repnz
pop
adc
lea
shll
inc
inc
lds
fwait
repz
lcall
inc
inc
lret
loopne
jle
not
or
neg
mov
add
add
test
shll
pop
adc
jb
xchg
insl
lods
rcr
push
inc
push
pop
mov
jg
inc
or
add
negl
push
xor
or
pop
inc
insb
cli
inc
jo
decb
mov
mov
push
and
mov
and
ret
jle
loop
negl
push
rcrb
push
xorl
shlw
loopne
or
xor
ds
test
stc
out
cwtl
les
cwtl
push
sub
jmp
mov
pop
push
mov
es
enter
mov
int
push
orl
loopne
sub
shl
fadd
pop
push
roll
mov
mov
daa
mov
sbb
jo
out
adcl
popf
pop
insb
add
mov
and
jle
mov
pop
jmp
idivb
push
movsb
in
mov
lahf
inc
cmp
push
into
in
lods
jno
stc
jl
hlt
call
fcoms
dec
fwait
mov
loopne
pop
sahf
inc
or
or
out
jp
add
pop
loopne
daa
add
xor
xchg
bound
dec
out
add
pop
inc
mov
roll
pop
sub
test
xchg
mov
loope
sti
cmp
bound
nop
xchg
sub
add
ja
dec
movsl
popa
mov
and
pop
divl
xor
loopne
jg
ja
or
in
lock
push
cmpsb
mov
jecxz
pop
or
mov
mov
fidivrs
cmp
adc
cmp
adc
dec
jnp
les
push
pop
insl
jns
push
pop
mov
frstor
push
stc
add
mov
mov
pop
jnp
fstl
or
es
dec
mov
in
lock
inc
inc
std
icebp
ja
pop
fs
lea
xchg
aad
pop
pop
push
insl
push
and
loopne
and
out
jp
fmull
fisttps
adc
add
jns
lods
and
mov
mov
cmp
scas
je
stc
outsl
imul
std
repz
test
pop
inc
fcompp
push
inc
test
je
jge
iret
pop
loop
dec
adc
outsl
jae
xchg
inc
pushf
jne
push
int3
mov
and
cmpsl
jb
jbe
fs
xor
dec
rolb
bound
xor
jno
out
jg
cmc
daa
mov
jle
mov
movsl
sbb
and
ss
sub
repnz
cltd
cmc
enter
jns
pop
cmp
mov
fwait
cmp
imul
clc
add
and
mov
test
add
pop
mov
sbb
push
aaa
ds
pop
sbb
icebp
sti
xor
out
fiadds
fs
push
movsl
push
into
in
add
or
out
ljmp
jmp
pop
jp
cmc
movsl
dec
adc
cmc
fs
ss
lock
test
cmpsl
call
mov
mov
xchg
fdivrp
jno
pop
jnp
stc
hlt
dec
fwait
clc
pop
jge
pop
mov
jbe
dec
arpl
aad
das
cmpsl
fnop
push
scas
pop
lods
repnz
jb
inc
int
dec
sub
mov
jl
stc
out
inc
fadds
pop
dec
aam
hlt
scas
lods
xor
pop
fisttps
int
pop
jae
and
lahf
leave
mov
dec
aad
push
inc
repnz
pop
stos
insl
pop
popf
pop
enter
sarb
insl
xor
call
sti
jmp
imul
ret
cmpsb
les
push
or
sbb
mov
sbb
xchg
clc
dec
cmpsl
mov
shlb
xchg
mov
cmp
lcall
cli
dec
out
ss
push
popa
mov
xor
mov
add
sub
ficoms
mov
lea
arpl
iret
and
sub
push
push
ss
fiadds
jmp
inc
jecxz
movsl
sti
xor
dec
jecxz
dec
and
push
cmp
les
jb
out
subl
neg
out
add
cs
mov
outsb
imul
add
repz
push
fstps
out
inc
jns
hlt
pop
adc
push
inc
mov
js
push
xor
push
js
push
daa
inc
sub
jae
inc
push
fnstcw
fsubl
aas
jb
inc
sahf
out
in
shll
mov
repnz
pcmpeqw
cmp
jo
add
jae
aaa
mov
enter
mov
les
xchg
inc
push
daa
add
hlt
mov
aad
sbb
loop
movsb
das
mov
and
jp
ja
sbb
or
ret
dec
sub
add
sbb
rolb
arpl
sub
inc
test
inc
push
fsub
sub
jae
stos
push
jmp
in
push
in
movsl
jb
mov
inc
push
jp
in
push
jge
xchg
mov
sub
mov
adc
fwait
mov
xchg
or
cmp
sbb
inc
les
lds
sbb
cld
addb
mov
imul
add
jle
cmpsl
and
jno
fadds
sbb
in
les
pop
xorb
out
orb
cmp
fcmovne
jecxz
dec
pop
inc
out
push
mov
add
in
dec
mov
popf
sbb
and
add
leave
sahf
test
cmp
movsb
dec
add
pop
xlat
add
fldl2e
in
xor
clc
push
pop
andb
inc
mov
in
jecxz
data16
pop
push
mov
push
call
rclb
pop
adc
testl
jb
scas
adcl
rcll
sbb
xor
jg
mov
je
mov
lods
dec
aam
sbb
int
cmpsl
pop
jnp
popf
sbb
jno
je
fdivs
and
test
jne
xor
imul
scas
push
cmc
and
fnsave
test
in
xchg
xchg
mov
push
cli
in
outsb
leave
mov
lods
aam
push
inc
add
pop
push
push
mov
xor
cmp
xchg
notl
cmp
aaa
icebp
out
fstpl
sbb
lods
icebp
loope
aam
inc
roll
call
mov
sbb
dec
push
inc
sbb
imul
fdivr
pop
cmp
jne
pop
dec
int3
loopne
shlb
xor
dec
push
scas
xchg
sbb
or
mov
test
int
cmp
dec
dec
sbb
dec
out
pop
stos
jne
daa
cmp
nop
or
test
pop
adc
cmpsl
inc
sub
push
lret
out
pop
jnp
xchg
cli
pop
add
sbb
rcr
mov
xchg
xchg
mov
mov
insb
mov
clc
aas
xor
dec
mov
jbe
ret
and
in
xchg
jno
jno
out
inc
sbb
pop
cmp
add
jl
insb
pusha
lret
test
pop
sti
flds
dec
add
enter
adc
pushf
jbe
or
test
sbb
add
inc
pop
loopne
xchg
inc
xchg
movsb
test
pop
repz
addl
dec
add
sbb
and
push
push
movsb
dec
pop
iret
mov
add
mov
ja
jae
cmp
inc
outsl
stc
aaa
sti
repz
lahf
xchg
inc
std
jmp
es
scas
fildl
xor
rclb
js
jno
add
inc
daa
sti
pusha
jo
push
sbbl
mov
aas
adc
jmp
aaa
rorl
pop
bswap
outsl
jle
push
scas
mov
es
adc
lock
mov
cltd
sub
test
mov
or
lcall
je
push
xchg
mov
imul
jns
popf
stc
out
rol
mov
pop
mov
dec
or
nop
xor
add
test
mov
jl
in
les
push
mov
shl
mov
das
call
int
es
xor
cli
sub
subl
and
jne
pop
sti
fisubs
xchg
jle
ficomps
aad
push
mov
movups
enter
ficoml
std
call
xchg
cli
lods
shrl
pop
or
or
pop
jno
iret
daa
stos
jbe
push
cmp
test
cmp
icebp
mov
jnp
pushf
shrl
or
dec
dec
mov
rcl
cmpsl
adc
es
jae
rclb
add
mov
int
mov
mov
xor
and
stos
jo
push
cwtl
js
nop
and
jae
push
pusha
shll
inc
out
int3
lahf
mov
fisubrl
xlat
hlt
jns
outsl
lret
stc
mov
out
stos
stos
pop
push
add
and
insb
add
mov
fstpl
mov
add
inc
push
xchg
cmp
imul
sahf
loope
mov
mov
xchg
mov
dec
mov
das
mov
repnz
mov
iret
add
negb
flds
das
cmpsb
clc
sub
jle
xchg
js
out
arpl
lods
jns
outsl
jo
outsb
movsl
push
sbb
cmp
mov
dec
aad
adc
mov
leave
xor
clc
jp
xchg
enter
pop
shll
or
inc
jae
mov
jp
andl
push
sbb
out
dec
xchg
imul
push
and
cltd
imul
push
xchg
mov
push
in
push
xchg
mov
out
sub
cmp
mov
dec
in
xchg
shr
fimull
xor
outsb
lods
pop
jecxz
iret
and
stos
xor
stos
push
add
aaa
xor
mov
in
inc
mov
dec
shlb
loopne
mov
fstps
inc
imul
clc
rcr
test
mov
push
dec
sti
mov
in
mov
sub
inc
mov
fiadds
and
test
cmp
out
into
mov
xchg
cmp
dec
mov
arpl
jp
or
aaa
inc
xchg
dec
iret
movsl
shl
push
in
fdivrl
shrl
iret
test
test
pop
sub
mov
enter
ret
mov
mov
test
jo
pop
push
dec
lods
mov
jns
jno
mov
push
outsb
mov
mov
add
jne
lock
insb
out
mov
mov
daa
mov
sbb
fcomps
sub
sub
dec
xchg
cmp
jb
fdivrs
in
out
mov
div
mov
lret
pop
jmp
and
jo
cmp
int
sbb
rol
push
aam
loopne
mov
jle
pop
xchg
loopne
and
cld
inc
call
out
test
cmp
cmpsl
fidivrl
outsb
mov
pushf
sti
add
loop
leave
jg
or
aaa
dec
sahf
imul
sbb
outsb
adc
cltd
arpl
nop
and
scas
sti
mov
mov
and
outsl
jbe
repnz
rcrb
cmp
aas
fwait
mov
nop
push
sbb
mov
mov
cmc
mov
lcall
mov
mov
fbstp
lcall
ljmp
adc
jp
xorb
jle
xor
add
mov
adc
icebp
int
daa
pusha
sub
mov
jne
ss
inc
jp
mov
xor
mov
pusha
dec
rcrb
pop
jne
cwtl
movsl
nop
loope
vcomisd
sbb
pop
mov
repz
jns
or
fcoms
imul
cmpsb
outsb
mov
add
xor
lods
add
pop
or
sbb
sbb
sbb
cs
lds
jo
insb
popf
mov
negb
push
add
test
ljmp
cmc
testl
jo
jnp
out
int3
dec
movsb
mov
and
inc
adc
mov
pop
jmp
mov
mov
cmp
mov
fdivr
inc
mov
mov
sbb
xchg
mov
les
shll
inc
cmp
and
xchg
fdivl
lcall
clc
fmuls
sub
in
rcl
aad
cmp
lock
cmp
fs
jecxz
dec
vmwrite
lea
mov
daa
std
cmp
cli
lahf
jns
jge
xchg
nop
push
ljmp
jae
adc
cmc
divb
ljmp
xor
sbb
popl
pop
and
cmp
rol
cmpsl
push
loope
fmull
pop
mov
out
stos
aaa
test
mov
add
sub
mul
lcall
adc
jns
pop
push
cmp
js
lds
aaa
or
fmulp
clc
inc
jae
xor
mov
adc
jnp
ret
mov
fidivl
jae
sahf
add
cmpsb
repz
call
loop
push
jnp
pop
xchg
leave
mov
xor
std
lcall
dec
into
inc
insl
push
sub
lods
movsl
movsb
nop
loope
add
cli
cmpsb
movsb
sahf
mov
icebp
mov
sarb
out
mov
or
ficoms
sbb
add
ljmp
xor
scas
ret
pop
adc
push
mov
add
cltd
mov
xor
add
inc
mov
out
cwtl
mov
call
mov
into
sub
dec
pop
xchg
int3
jno
xchg
hlt
mov
push
mov
insl
jnp
test
lcall
push
add
and
fdivrp
cmc
loope
mov
addr16
dec
mov
push
mov
loope
cwtl
outsl
sbb
into
pusha
xchg
adc
push
cmpsb
cmp
gs
or
mov
sub
push
iret
das
adc
xlat
dec
insb
xor
int
add
sub
inc
lds
rcr
mov
mov
rcrb
aam
test
xchg
cmp
bound
out
popa
mov
pop
sahf
cmpsb
in
aas
loopne
adc
xlat
imul
adc
inc
les
shl
mov
jns
lcall
hlt
pop
add
and
pop
lret
daa
mov
or
pop
lret
cmc
fs
ffreep
sub
cmovb
mov
jbe
in
out
dec
xchg
push
mul
xor
sbb
les
fists
stc
mov
jge
fdivs
mov
push
xlat
cwtl
loopne
sub
dec
movsb
es
out
stos
mov
repnz
cmp
lret
mov
movsb
sbb
js
sti
sbb
inc
push
dec
or
inc
ret
jecxz
xchg
and
jge
add
jns
fwait
xchg
inc
icebp
sbb
js
or
mov
mov
add
mov
scas
inc
cs
mov
insb
dec
adc
arpl
jb
scas
adc
push
and
out
cmp
shll
or
pop
push
mov
fdivl
shll
push
cmpsl
andb
push
xor
mov
xchg
push
mov
push
cmpsb
adc
add
mov
pop
cmp
mov
sub
outsl
sub
mov
fnstcw
and
fwait
add
pop
inc
jge
addb
insb
out
mov
sti
push
adc
ret
mov
pop
pop
xchg
and
adc
inc
fistps
dec
sub
sub
xchg
mov
outsb
jae
mov
cmp
mov
shll
bound
or
test
lcall
insb
or
xor
and
jns
lea
daa
adc
int3
sbb
mov
fwait
add
inc
scas
sbb
mov
xchg
adc
adc
sbb
pop
ss
fildll
aad
sti
dec
imul
and
add
xchg
inc
stos
or
push
jno
push
fimull
pop
insl
sub
add
sbb
lea
fs
subl
sub
data16
sbb
mov
std
std
iret
dec
pop
inc
loopne
in
mov
mov
test
insb
pop
or
sbb
dec
pop
ud2
and
int3
outsb
icebp
jno
fsub
adc
lds
jg
int3
lock
lea
shlb
mov
mov
sbb
inc
ret
add
pop
scas
push
mov
adc
fwait
xlat
inc
daa
mov
and
xchg
clc
dec
ds
mov
push
sbb
pop
lods
mov
lods
or
pop
popa
cmp
inc
lahf
pop
jecxz
inc
sbb
gs
adc
jg
or
dec
xchg
ds
repz
ss
idivl
mov
fwait
loopne
icebp
inc
jne
or
sub
orl
inc
mov
add
repnz
push
rclb
mov
xlat
int
dec
pop
adc
jge
sub
and
ja
pop
sub
push
mov
repz
je
and
loop
scas
pop
cmp
lret
test
mov
jecxz
inc
aas
adc
leave
and
ds
outsb
jno
xchg
aas
inc
sub
inc
cltd
daa
fists
or
pop
or
lahf
cld
lods
std
cmp
xor
ljmp
pushf
lods
cmpsb
xchg
imulb
andl
inc
test
or
add
int3
movsl
lods
incb
jle
pop
imul
pop
ja
nop
cltd
popa
add
mulb
into
and
sub
jecxz
push
add
sub
pop
sbb
push
lock
dec
mul
call
push
and
cs
and
jb
in
xchg
in
stos
stos
xor
adc
popf
xchg
call
dec
lahf
test
adc
insl
icebp
loope
pop
rclb
jbe
mov
sbb
xchg
cmc
push
jo
xchg
jae
add
test
out
pop
stos
lock
aad
jnp
lcall
xor
dec
test
jecxz
movsl
sub
and
movsb
or
pop
mov
dec
mov
stc
insb
fimuls
add
inc
pop
dec
ficompl
inc
jg
inc
xor
fwait
repz
pop
ret
pop
and
call
out
mov
mov
mov
cwtl
pop
movsb
cli
icebp
mov
fucomip
mov
aas
xchg
push
loopne
pop
or
cwtl
sbb
adcb
add
jnp
cmp
repnz
or
sub
sub
add
push
or
pop
lods
pop
fisttpl
outsl
ret
out
mov
xorb
out
add
mov
sbb
das
xor
lds
jmp
out
btr
mov
imul
xchg
inc
sbb
jl
rcll
incb
pop
pop
lods
mov
iret
daa
mov
push
cmp
and
sbbb
out
mov
adc
repnz
sub
cmc
push
test
mov
into
push
and
lock
scas
sbb
loopne
mov
ret
xchg
add
scas
jge
fisttpl
or
and
dec
pushf
cmpxchg
int
adc
jecxz
outsb
xchg
cmp
fisubrs
xor
in
icebp
cld
cmp
data16
jae
adc
pushf
dec
aam
dec
iret
lds
xchg
aaa
push
fldl
inc
xor
xchg
lret
imul
sub
xchg
xchg
movsl
sbb
cwtl
sbb
xor
cmp
icebp
push
adc
mov
loopne
adc
xchg
movl
add
xor
and
clc
pop
shll
test
scas
mov
lret
jmp
repnz
fsubrl
std
popa
mov
cmpsb
inc
dec
cmpsb
movsb
cmpsb
jl
adc
test
pop
push
sbb
xor
clc
jnp
addr16
push
andl
rolb
ja
pushf
xchg
stc
and
push
notb
jg
xor
incl
jnp
gs
pop
sub
jnp
cli
lahf
push
add
stos
dec
push
xchg
popa
jns
pop
mov
ret
ret
sbb
out
push
inc
jl
push
pop
jae
jne
insb
xlat
cltd
scas
pushf
fisttpll
scas
orl
loop
mov
fdivrs
sub
add
jecxz
jb
inc
inc
jno
mov
and
push
daa
inc
or
test
fwait
in
or
js
out
mov
nop
mov
sub
fwait
mov
xor
aam
inc
pop
das
pushf
pop
mov
int
loope
xchg
hlt
sbb
xchg
adc
xor
int
sbb
ret
mov
insl
js
insl
mov
mov
mov
pop
aam
fcoml
stos
aas
rcll
loop
stos
mov
lock
push
fucomp
pop
mov
inc
push
mov
outsb
xor
sar
or
inc
int3
xor
iret
cmp
std
xor
cmpsb
shlb
movsl
pop
pop
mov
push
push
sahf
bound
incb
mov
outsb
subl
inc
out
jns
fdivs
popa
add
xchg
fdivrs
fdivs
push
xchg
cs
int3
mov
f2xm1
fisttpl
adc
dec
sbb
adc
sbbl
cltd
icebp
outsb
xor
xor
sti
add
push
clc
in
iret
pop
pop
mov
popa
sbb
mov
cmp
fisubrs
pusha
push
xchg
add
pop
fstp
enter
jl
pop
pop
xor
cmp
aas
mov
rol
cmp
cmc
insl
sub
sub
cltd
xchg
and
cmpb
cmpsb
jg
fdivrl
outsb
mov
mov
dec
xchg
sub
mov
daa
pop
rcr
and
dec
mov
adc
and
pop
or
xor
popa
shrb
push
adc
pushl
ret
mov
out
sbb
ljmp
test
fwait
icebp
push
hlt
mov
adc
push
inc
lea
mov
imul
loopne
pushf
js
stc
int
mov
jbe
or
cmp
pop
loopne
bound
mov
aas
pop
mov
push
push
xchg
mov
push
fdivr
cltd
enter
mov
dec
sbb
jne
sti
in
lret
fs
out
push
sub
inc
jg
and
and
mov
xorb
xlat
jno
mov
fcmovbe
sti
sbb
imul
lahf
sub
jbe
and
sbb
imul
test
inc
dec
negl
xchg
mov
adc
imul
ret
dec
xlat
add
sarl
cli
and
test
rcrl
mov
pop
mov
movsb
cmp
adc
push
stos
cltd
cmp
dec
loop
stos
or
mov
cmp
pop
outsb
mov
in
lcall
or
rcr
pop
dec
fcmovne
dec
paddsw
xlat
dec
cmc
mov
mov
int3
adc
dec
cmp
push
test
and
stos
fisttpl
mov
pop
mov
pop
xor
mov
mov
push
clc
push
mov
jbe
lahf
imul
repnz
add
inc
dec
in
xlat
mov
test
push
dec
xor
mov
ds
xor
push
out
mov
or
lock
shl
nop
and
cs
add
out
push
and
inc
call
inc
xchg
aaa
fwait
dec
icebp
inc
test
insl
mov
or
sub
mov
xchg
push
dec
movb
xor
pop
scas
nop
add
movsl
inc
in
jp
cmp
arpl
push
int3
sbb
orb
jns
mov
popl
mov
jns
scas
xchg
cld
jb
dec
lock
jns
jbe
or
fldt
jp
aas
xchg
ljmp
xchg
mov
ds
or
stos
cmp
xchg
mov
inc
sub
scas
cmpsl
dec
adc
js
add
rorb
jb
fidivrs
outsb
mov
mov
mov
shll
int
ljmp
cwtl
or
dec
fldt
sub
fadds
shlb
xchg
jmp
scas
mov
imul
pusha
andb
dec
pop
and
orl
dec
jge
and
cli
pop
push
and
inc
push
pop
adc
js
dec
lods
xchg
or
inc
xchg
call
cmpsb
popa
inc
lret
push
fldenv
pop
outsb
enter
xor
movl
sub
lahf
pop
sbb
ffreep
movsl
mov
sub
cmp
popf
add
adc
subl
xchg
inc
push
inc
mov
or
rorb
push
mov
sbb
xchg
stos
lock
jnp
in
in
imul
jg
adc
push
adc
movsb
adcb
out
clc
or
push
ljmp
mov
repnz
or
iret
dec
js
or
insb
das
jge
mov
sub
dec
movsl
xchg
lods
daa
in
rclb
aam
sbb
out
and
outsl
jge
inc
aad
mov
insb
xor
cmpsb
loopne
cmpsb
jecxz
decl
imul
dec
dec
inc
mov
das
push
adc
add
and
fstl
sbb
sbb
repz
cmp
sahf
pop
cmpsl
shlb
mov
xorb
mov
add
fnstsw
push
adc
nop
outsb
push
jbe
xchg
and
stos
sub
aam
xor
loopne
shlb
push
sarb
xchg
pop
testb
dec
inc
mov
jo
pop
adc
jne
pop
iret
mov
push
test
sbb
xchg
mov
mov
scas
push
cmp
cmpsl
faddl
cltd
gs
mov
pushf
inc
dec
adc
cwtl
xor
mov
gs
loop
xor
sti
test
xor
mov
sbb
mov
fmull
mov
popf
loope
mov
stc
mov
bound
and
shrb
movsb
push
in
lret
in
mov
outsl
mov
sub
or
lds
out
sub
dec
xor
mov
ffreep
pop
mov
sbb
push
es
popf
or
ds
gs
push
je
call
sub
test
std
dec
outsb
add
lret
bound
sahf
addl
arpl
mov
mov
pop
xor
cli
dec
inc
xchg
lret
mov
lock
in
inc
pslld
fstpl
out
xor
in
and
mov
insl
pop
jecxz
repz
lret
push
xor
sbb
outsl
xchg
xchg
mov
xchg
dec
cmpsb
negl
cmpb
repz
jp
cltd
stos
and
js
cli
loop
fmuls
add
mov
imul
jg
lcall
movsl
mov
iret
mov
fildl
imul
jp
and
mov
repnz
enter
xchg
push
outsl
pusha
shr
loop
dec
pop
neg
test
pop
sub
or
popa
push
xor
adcb
inc
push
mov
popa
repnz
mov
adcb
push
lock
repz
jnp
test
daa
sbb
adc
inc
add
repnz
fisttps
or
std
or
incb
xchg
dec
in
stos
and
shr
or
test
or
push
or
push
stc
mov
insb
xchg
frstor
xor
or
cmpsl
test
mov
mov
sbb
hlt
mov
sbb
jo
pop
sbb
cltd
fimull
xchg
and
mov
lock
pop
loop
xchg
jecxz
out
xchg
in
jp
mov
xchg
pop
adc
mov
addr16
lds
xchg
xor
or
mov
scas
jg
sbb
mov
arpl
das
in
lock
xor
mov
xlat
inc
sbb
xor
cmp
test
xchg
dec
cli
cmp
shll
jge
inc
add
lahf
inc
pop
mov
add
dec
lods
lods
adc
fildll
mov
stos
in
xor
xchg
push
cmp
add
xor
pop
ss
xchg
sarl
jecxz
fistpl
push
cli
in
mov
test
out
cmc
xor
pop
ljmpw
lods
add
adc
ror
xor
insl
push
jmp
xchg
sub
mov
bound
pop
aas
or
aam
xchg
call
lcall
jle
mov
lds
cmp
pushf
cmp
cmp
add
inc
jns
dec
push
jle
or
stos
test
into
sub
mov
stos
test
or
xor
out
and
dec
pop
and
sub
inc
mov
in
mov
pushw
lods
fildll
int3
imul
std
pop
add
int3
lret
mov
mov
adc
inc
repz
mov
and
incl
cmp
push
inc
xor
lock
mov
sub
and
inc
mov
lret
xor
jb
pop
cwtd
fldt
cmp
pop
data16
push
mov
add
push
jbe
sbb
dec
in
ret
xor
jl
lcall
je
push
outsb
in
in
rcrb
outsl
lahf
movsl
ret
cwtl
int
addr16
jg
in
lock
push
mov
mov
imul
mov
mov
daa
dec
mov
lcall
cmpb
cmp
adc
loopew
sub
cmp
cmp
jns
xor
mov
or
das
adc
aam
in
aaa
cltd
mov
add
jbe
lret
in
inc
fcoml
aas
loop
and
aas
cmp
push
dec
movsl
adc
insb
xor
sahf
xchg
cmp
add
pushf
mov
push
arpl
dec
dec
xor
mov
sti
or
cmp
bound
aas
cmpsl
dec
imul
sbb
adc
jne
pop
scas
jns
inc
xor
bound
xchg
insl
imul
xchg
loop
push
loope
rcll
dec
movsb
pop
dec
xor
and
hlt
repnz
mov
xchg
mov
je
and
loop
iret
fsubr
mull
addr16
test
jbe
mov
daa
lcall
cmp
adc
enter
movsl
cmp
dec
inc
iret
loop
adc
lahf
pusha
jno
and
pop
notb
push
out
or
mov
sbb
frstpm(287
adc
mov
mov
andl
scas
ficoml
std
jge
repnz
mov
jg
push
xor
jns
loop
push
xchg
addr16
cmp
test
and
push
ds
fwait
inc
pop
add
jne
fidivrl
dec
lods
addr16
cmpsl
cmp
into
push
aas
xor
sub
sbb
push
les
insb
sub
lock
adc
sub
inc
pop
fists
mov
jle
ret
loopne
or
mov
and
mov
movsl
xchg
jno
iret
cs
and
jb
sub
or
loope
mov
lock
insl
clc
push
cli
mov
lahf
dec
shrl
sahf
sub
out
dec
mov
sbb
lret
mov
lea
shr
xchg
push
jle
hlt
fistps
jnp
cmc
out
scas
jb
pop
xor
mov
xor
fnsave
es
mov
fidivrl
repz
sbb
or
pop
sub
and
jg
jo
dec
mov
adc
sub
jp
or
mov
mov
pop
mov
sahf
mov
data16
xchg
mov
mov
jle
mov
stos
aaa
icebp
mov
push
push
mov
jge
rolb
inc
mov
fwait
aaa
inc
xchg
out
or
mov
adc
mov
cmp
out
xchg
loopne
xchg
and
cld
and
lock
imul
push
lods
add
call
insl
and
and
movsl
cmp
ja
into
cmp
scas
push
stos
jns
fdivrs
sub
or
push
xchg
mov
dec
and
aaa
sbb
sbb
out
xchg
mov
in
lcall
jne
push
imul
push
in
js
imul
mov
jae
adc
pop
mov
dec
mov
jecxz
sub
mov
popl
jge
mov
dec
mov
adc
push
cmp
jge
xchg
test
lds
stc
cwtl
dec
add
dec
lcall
imul
jbe,pt
push
mov
pushf
push
hlt
lds
std
jb
loopne
xchg
test
clc
xchg
rol
fsubl
popa
and
fadds
xor
lcall
stc
mov
xor
push
loope
ror
and
fsubl
cli
push
and
push
ds
jno
inc
in
pop
lea
mov
clc
lret
in
nop
sub
roll
sar
insb
lock
int3
xchg
dec
cmp
xor
or
movsb
es
jae
or
std
iret
dec
sub
fs
inc
jl
xchg
outsl
pop
mov
mov
dec
lahf
mov
aas
mov
xchg
ljmp
pop
ret
das
dec
clc
sbb
mov
psubb
insl
cmpsl
xor
das
repz
outsl
ficoms
xor
push
mov
xchg
jmp
or
lds
shl
out
mov
or
stc
pop
dec
in
test
cld
mov
push
dec
enter
std
pop
pop
icebp
push
out
inc
cltd
in
fwait
stc
pop
pusha
and
enter
jecxz
gs
jo
iret
cmc
enter
ljmp
insl
adc
and
loop
shr
nop
mov
ss
loop
sub
inc
popa
aas
pop
mov
adc
je
and
test
mov
arpl
das
in
sub
dec
xor
jbe
stos
xor
xchg
push
or
push
mov
pop
mov
adc
outsl
or
xchg
xlat
xchg
mov
mov
mov
fcomps
dec
mov
xor
test
iret
outsl
das
xor
lea
decl
gs
pop
call
sbb
gs
pop
sarl
out
jne
mov
rcrl
inc
adc
add
int3
loop
ljmp
mov
dec
aas
push
push
pop
adc
into
pop
jmp
push
and
je
sahf
jmp
inc
insl
xchg
inc
aas
jae
repnz
pmullw
xchg
jg
jns
add
out
dec
jp
idiv
ret
mov
stos
sbb
or
outsb
movsl
or
mov
mov
inc
pop
cli
xor
mov
inc
or
mov
aas
jo
mov
jg
mov
roll
sub
ret
mov
je
jb
lret
jne
cmp
mov
lea
roll
movsb
xchg
push
std
aam
lods
rorl
sbb
mov
mov
cwtl
lds
xlat
shrb
test
xor
test
scas
popa
shr
mov
lods
test
pop
cmp
push
and
cmc
jns
adc
sti
mov
addb
aam
and
lcall
jns
pop
repz
test
jne
call
pop
cli
shrl
rep
add
or
push
incb
jb
xlat
lret
adc
xorb
inc
add
daa
mov
push
inc
cmp
adc
enter
in
mov
jl
sub
ds
loop
sar
pop
mov
movsl
fnstenv
fcomip
and
ljmp
inc
popf
iret
adc
pushf
dec
jle
xchg
stos
lods
dec
insl
jmp
add
mov
inc
scas
cmp
fld
cmp
movsl
push
es
scas
call
iret
es
mov
into
clc
iret
int
mov
xor
sti
stos
push
loopne
push
lods
adc
pop
pop
pop
adc
aam
das
sub
mov
scas
or
jge
push
test
ret
inc
dec
push
mov
push
push
lods
xor
and
jecxz
jl
pop
inc
jnp
add
xor
out
mov
add
shld
cmp
add
cs
js
imull
add
popa
lock
mov
mov
ucomiss
pusha
push
add
shll
movsl
mov
mov
bound
jae
jmp
xchg
push
out
push
mov
dec
in
stc
out
mov
pop
sbb
dec
sbb
lret
add
scas
mov
xchg
mov
push
movsl
in
inc
cmp
push
jbe
mov
xchg
mov
test
ja
clc
cmp
outsl
pop
mov
push
jne
dec
imul
les
and
lea
fildl
sub
inc
lahf
imul
jnp
xchg
ja
sbb
xchg
push
ret
dec
aam
cmc
cmp
xor
pop
push
loopne
cmp
pushw
and
push
pop
jne
cmp
xchg
push
cmpsl
jecxz
add
lods
jno
and
aas
add
sbb
movsb
mov
jo
jne
addr16
stos
jl
es
sahf
call
inc
and
pop
jo
in
insb
dec
jle
pusha
jne
jecxz
and
cmp
xlat
imul
xor
mov
dec
in
lahf
sbb
mov
aaa
jl
cltd
aad
xor
and
clc
push
aaa
leave
inc
int
data16
sub
in
out
inc
lret
sub
jne
in
mulb
sub
xor
lahf
inc
xor
or
mov
dec
fidivrs
cmc
shll
and
test
push
int3
push
ljmp
sahf
shr
lcall
xor
push
cmpsb
inc
xchg
mov
sub
cmpb
mov
jmp
outsl
inc
push
xor
int3
sahf
rolb
push
push
push
cmp
outsl
imul
scas
pop
mov
mov
repnz
repz
lea
test
jns
pop
dec
into
out
in
repnz
pusha
mov
shrb
xchg
imul
nop
fimull
jecxz
das
mov
push
jns
jg
mov
mov
pusha
aam
pop
mov
imul
cltd
push
cld
loope
cmc
aas
cmc
ficomps
jae
outsl
jns
push
push
lods
pop
fwait
jecxz
push
shrl
adc
mov
mov
lret
cwtl
add
jl
mov
xor
sub
push
test
jne
pop
bound
pop
in
pop
sahf
fimull
xchg
lret
ret
dec
cwtl
sub
cwtl
shlb
sub
xchg
movsl
mov
lea
outsl
sub
add
sbb
arpl
sub
cs
pop
or
mov
jbe
dec
mov
adc
push
mov
sub
inc
out
test
jg
jno
mov
addl
stos
add
and
lods
movsl
out
inc
lds
lea
sub
push
mov
add
xor
lods
push
mov
lods
mov
fwait
mov
int
cs
divl
stos
sbb
cmp
outsl
movsb
dec
loop
mov
add
testl
and
adc
xor
and
xchg
jb
xchg
mull
ja
popa
fwait
inc
and
mov
in
mov
lock
and
xlat
and
cmp
lds
dec
push
pop
jp
jae
jo
int3
iret
adc
lea
test
call
xor
je
rcrl
add
in
pop
insb
aaa
das
push
mov
pop
jg
dec
xchg
lahf
jge
cmp
std
sub
add
mov
sbb
adc
dec
xchg
mov
pop
jns
fldcw
inc
sub
mov
pop
or
shll
pop
add
sub
cmp
sub
lahf
ss
into
imul
adc
loope
in
inc
xor
xchg
inc
je
fmull
xor
aas
notl
clc
lods
cld
push
in
mov
mov
mov
jne
neg
pop
pop
orl
add
xchg
psubusw
in
jae
ret
lret
ret
add
inc
and
fiaddl
mov
call
add
jno
call
fsub
pushf
movsb
jmp
mov
cmpsb
dec
fadds
or
ljmp
xchg
data16
sub
xchg
jno
repnz
jp
movsb
mov
addb
mov
or
test
sahf
cmp
xchg
lahf
or
loope
and
in
cld
out
inc
mov
rorl
fcomp
xchg
inc
dec
loope,pn
lea
outsb
pop
sbb
lock
dec
divl
sub
mov
jle
push
les
jp
andb
or
push
scas
loopne
into
xor
imul
pop
movsl
mov
cmpl
add
dec
aaa
nop
cwtd
inc
lods
fwait
lods
sub
xchg
mov
fucomi
adc
mov
out
test
fcompl
pop
int3
sbb
in
push
les
icebp
pusha
inc
imul
icebp
dec
jecxz
add
xcrypt-ecb
cmpsl
setae
gs
aam
std
or
imul
jo
insb
xchg
xchg
jp
leave
je
orb
mov
fsubl
es
aam
or
shlb
lret
add
negl
ret
stc
fxch
mov
pushf
mov
loop
bound
fistps
aad
fdivl
dec
jns
cmpl
lret
xchg
and
mov
into
inc
mov
arpl
stos
test
dec
mov
xor
insl
or
xchg
out
repnz
jns
pop
cli
or
inc
sbb
mov
loope
push
aas
mov
xchg
mov
xor
pushf
add
or
mov
popa
fsts
jl
xor
mov
jno
lcall
jl
adc
lcall
fcomps
pop
icebp
shlb
or
enter
cld
fcomps
clc
dec
push
fstps
test
cmp
pop
shrb
sub
rorb
cld
mov
data16
andb
or
inc
fs
xor
fxch
cmp
std
jl
add
add
dec
lock
movq
out
dec
pop
fsubr
mov
xchg
adc
xor
adc
enter
fwait
mov
f2xm1
mov
gs
in
outsb
jns
outsl
out
mov
in
test
pop
repnz
dec
jle
rcl
push
push
dec
pop
fsts
mov
mov
iret
cli
or
nop
xor
push
scas
test
iret
incl
fs
cmp
stos
mov
fiadds
lcall
je
jnp
cltd
sub
sbb
loope
dec
adc
addr16
hlt
cmpsb
fiadds
shl
mov
jbe
cmpsl
sub
sub
fildll
mov
stc
cmp
sub
add
bound
bound
gs
dec
adc
repz
mov
mov
fsubrl
inc
mov
mov
mov
out
andl
test
loope
xchg
addr16
xchg
lcall
lods
pop
mov
les
xchg
outsl
mov
jo
cmpsl
xchg
mov
fs
and
mov
and
sbb
imul
adc
loopne
pop
xor
fsubrs
jne
insl
andb
add
xor
in
popf
add
stos
fcoml
push
cmp
sub
ret
mov
pop
xchg
xorb
and
movsl
cs
decb
movl
pop
lcall
xchg
imul
ficomps
xor
mov
mov
rcll
xchg
js
xor
test
push
jno
adc
lods
push
sbb
out
mov
aaa
and
pop
lock
ja
jbe
sub
out
enter
lds
lret
cmovb
stos
in
cmp
lea
jns
das
sarb
pop
out
mov
mov
lret
in
shll
add
cmpsl
adc
out
mov
xchg
mov
in
jg
cld
mov
add
push
roll
and
repz
xchg
idivl
lahf
aaa
xchg
mov
lahf
movsb
or
pop
cmp
fidivl
imul
add
mov
aad
in
adc
inc
sub
xor
mov
sub
ret
ja
mov
pushw
push
xchg
or
scas
in
pop
push
cmpsl
push
cmpb
xor
mov
in
and
aaa
xchg
and
cmc
mov
stos
add
mov
add
push
bound
pusha
enter
ret
sub
push
sub
daa
fidivrs
and
push
mov
shll
sub
sub
mov
cs
lret
ret
inc
mov
insb
addb
push
jp
aam
add
add
mov
fcmovbe
mov
mov
cmpsb
sub
enter
ja
and
mov
loop
mov
dec
pop
mov
or
sbb
es
fidivrl
fldenv
movsb
lret
xchg
pushf
gs
add
xor
aam
sub
fs
lods
aam
mov
push
test
cmp
iret
orb
add
hlt
xchg
mov
test
leave
pop
fsubs
jae
cwtl
fxtract
inc
mull
xchg
or
xor
mov
jle
adc
jmp
adc
push
pop
cltd
sbb
addr16
and
imul
sub
insb
jns
sbbb
dec
aas
movsl
inc
inc
lahf
inc
icebp
jmp
mov
inc
or
xchg
pop
pop
sbb
sub
jl
mov
jno
loopne
cwtl
push
loope
in
imul
sbb
imul
and
cmp
and
cli
add
subb
inc
xor
aas
cs
xchg
xor
inc
sbb
mov
push
icebp
mov
push
inc
inc
inc
pop
mov
cmp
push
push
sub
fdivl
clc
stos
or
mov
rcr
jo
shll
pop
mov
xlat
cwtl
push
xor
js
not
daa
dec
daa
icebp
jns
xor
lret
mov
pushf
mov
push
pushf
nop
add
adc
lret
popf
mov
loope
pop
fstl
sub
loope
incb
cmp
orb
xor
mov
xlat
push
add
enter
mov
push
mov
sahf
jge
mov
mov
or
sbb
jl
push
out
jge
ds
jp
add
arpl
add
in
xlat
sub
stos
sbb
loope
fs
add
dec
pop
mul
lds
dec
or
or
or
aam
repnz
inc
add
jnp
jbe
test
aas
xchg
jno
xchg
jnp,pn
gs
and
addl
push
pop
xor
mov
in
inc
cwtl
test
lea
dec
out
lahf
xchg
ja
pop
mov
scas
bound
inc
push
jmp
mov
nop
pusha
add
push
insl
jo
test
xor
fldl
adc
cmc
jns
pop
push
pusha
jnp
icebp
xchg
jne
or
outsb
int
out
orl
in
jno
adc
stos
loopne
dec
iret
popf
nop
adc
or
inc
xor
lock
rorb
fptan
hlt
mov
and
ljmp
andl
inc
les
mov
in
or
mov
cs
lea
sbb
pusha
cmp
ret
and
add
ss
les
mov
adc
imul
mov
test
cmpsb
movsb
pusha
xchg
cmc
mov
and
mov
lods
pop
xchg
jmp
mov
fldcw
sahf
or
cmp
shll
sbb
ss
jo
mov
lcall
cmpsb
xchg
pop
mov
popa
or
pop
pop
jle
filds
xchg
sbb
add
lea
inc
subl
push
arpl
jle
xchg
sub
lods
mov
xor
sub
repz
mov
dec
mov
mov
dec
fwait
mov
adc
jae
jns
mov
cmpsb
mov
das
push
adc
gs
inc
push
mov
fisubrs
push
mov
xchg
adc
loope
push
fcomps
cmpsb
inc
sub
cli
ds
push
jge
popf
dec
cld
inc
sbb
into
fnstenv
xor
mov
mov
out
xor
pop
mov
jns
imul
xchg
mov
adc
or
shr
sbb
jecxz
sbbb
ja
imul
ret
std
and
push
cmpl
mov
xchg
cmpsb
jo
cmp
insl
movsb
sbb
int
pop
dec
mov
cmc
out
lcall
adc
adc
sub
testl
inc
push
sti
jg
xchg
aas
fsts
cs
fcmove
pushl
leave
xchg
jle
push
pusha
stos
jp
jecxz
cltd
nop
pop
pop
inc
hlt
sarb
mov
bound
xchg
mov
and
pop
and
imul
cld
fidivrl
lods
xchg
rcl
and
pop
and
data16
mov
pop
and
mov
call
add
sub
pop
in
insb
lret
test
pop
loope
mov
sahf
adc
sub
icebp
jmp
mov
insl
rep
or
and
pop
jno
jbe
or
sub
lds
popa
ret
and
lods
mov
ficoms
pop
sub
cmpsl
adc
movl
in
cmp
mov
repz
ficompl
js
add
out
xor
xor
dec
ficoml
xchg
adc
jl
push
push
aaa
jmp
push
cs
mov
mov
test
add
sbbl
cltd
testb
enter
or
mov
dec
cmpsl
and
pop
sbb
jl
pop
fldt
int3
inc
dec
mov
aam
sub
pop
push
test
sbbb
cltd
inc
cltd
loopne
xchg
fsubs
insb
mov
push
cltd
dec
lahf
mov
cmp
and
mov
push
outsl
xor
mov
cmpsl
ficomps
mov
mov
adc
mov
xor
mov
sub
leave
lret
addb
subb
mov
mov
mov
pop
cmpsl
icebp
and
pop
leave
or
fisttpll
push
imul
adc
mov
push
mov
jp
test
xor
add
lret
sub
into
fdivs
lcall
add
xlat
repz
mov
test
inc
push
lds
cmpb
cmpsl
sbb
repz
outsb
inc
loope
inc
stc
movb
push
testl
mov
pusha
ds
cmc
clc
pop
fdivr
xor
lahf
sub
cmp
pinsrw
cli
cwtl
mov
inc
test
inc
cwtl
add
fisubs
mov
sarb
fwait
dec
pop
stc
push
dec
sbb
push
push
ret
mov
shll
pop
lea
sahf
sub
arpl
add
test
adc
in
dec
bts
jge
lahf
fcoml
or
mov
add
xor
arpl
pop
dec
in
call
repnz
mov
sub
decl
int3
jg
adc
cmp
add
mov
clc
outsl
sub
pop
ss
jl
ljmp
cmp
sbb
insb
std
jmp
push
mov
inc
adc
sub
mov
mov
fstl
popa
cmpsb
test
std
jp
or
ror
mov
stos
pop
fdivr
push
mov
sub
sahf
mov
dec
cs
aam
xor
mulb
into
stos
lahf
popl
xor
pop
inc
pop
or
bound
dec
push
jo
xchg
aas
push
adc
stc
fstpl
push
insb
xchg
sbb
iret
gs
jle
or
sbb
in
xor
pop
or
loope
pop
repnz
mov
lds
cmc
pop
or
sub
inc
xchg
jmp
js
rorl
insl
adc
jo
or
inc
movsb
pushf
fsubrl
or
xor
leave
mov
push
cmp
dec
pop
inc
sub
adc
pusha
inc
jbe
jae
jbe
inc
lods
andb
mov
or
cld
mov
inc
and
popa
xchg
subb
outsl
mov
iret
xor
mov
cmpsb
inc
add
pop
pop
inc
lea
aad
ljmp
fnstenv
push
jns
icebp
sahf
out
dec
loope
sbbl
sbb
mov
insb
sarl
in
push
pop
inc
int3
add
pop
clc
adc
push
lea
inc
adc
sub
addr16
cld
xchg
mov
inc
mov
int3
pop
xchg
jle
roll
add
int
sahf
jl
cltd
shr
adc
aaa
shll
cmpsb
mov
sbb
call
jns
and
inc
daa
sbb
outsl
xor
sar
imul
inc
inc
test
mov
sub
jo
je
data16
outsb
push
fcom
cmp
mov
ret
jp
jne
gs
push
xor
js
and
adc
add
int
jnp
lcall
mov
stmxcsr
fwait
pop
insl
fldt
mov
fimull
mov
fsqrt
adc
insl
cs
insb
cld
and
push
add
ffreep
repnz
jb
aam
sub
sub
xor
insl
jecxz
xorb
xchg
lea
and
ret
inc
adc
movsb
jg
jbe
in
cmp
adc
sub
push
es
adc
mov
pop
fwait
aas
adc
fcompl
leave
ja
cld
fstl
out
ret
pop
mov
or
icebp
dec
sub
sbb
pop
outsl
enter
and
jl
sub
lahf
jb
pop
push
out
adc
mov
frstor
xchg
pop
dec
lret
push
lock
dec
pop
icebp
push
test
cli
andb
int3
cli
fistps
ja
inc
and
push
idivl
add
inc
jns
cmp
pusha
mov
mov
fwait
outsl
loopne
jbe
addr16
ds
sbb
inc
xor
rcr
fs
in
aam
inc
inc
lds
inc
inc
out
xchg
shr
jbe
xor
fwait
lret
adc
push
cwtl
xchg
pop
xor
xor
push
jne
xchg
aas
mov
pop
mov
lret
jmp
dec
orl
jns
sbb
outsb
add
das
mov
cmp
sbb
adc
gs
xor
xor
dec
test
cmc
cmp
shll
loop
or
sub
pushl
add
xchg
pop
clc
jnp
dec
mov
jns
or
mov
and
add
or
shrl
add
mov
dec
mov
push
in
mov
outsl
stos
xchg
mov
jne
addr16
or
mov
insb
in
pop
stos
add
lahf
xor
stos
jb
push
sbb
iret
dec
loop
loop
stos
or
shll
adc
ss
jg
out
and
pop
loope
jbe
mov
rorl
mov
mov
push
and
int
mov
pop
pop
rcll
or
push
mov
arpl
lahf
dec
jge
rcll
xchg
sub
jnp
mov
mov
js
fwait
pop
pop
fcoml
adc
cmpsb
jp
data16
adc
shlb
iret
imul
add
xlat
insb
mov
and
pop
mov
or
sbb
popf
aam
cwtl
cmpb
insb
ret
sub
lds
xor
cli
adc
push
cmp
xor
push
scas
clc
mov
fst
sub
imul
stos
inc
neg
sub
xor
test
imul
mov
inc
mov
push
xor
sbb
xchg
mov
or
js
mov
nop
sub
adc
dec
xchg
js
out
cmpsb
xor
fucomip
lret
inc
push
sbb
fimuls
test
or
ss
xchg
xor
xchg
xchg
sub
inc
push
push
sbb
lock
jge
loop
fdivrs
cmpsb
outsl
mov
jg
sub
or
xchg
scas
ja
add
addr16
data16
jae
adc
add
mov
mov
lret
inc
push
or
inc
or
mov
decb
mov
xlat
test
inc
sub
call
in
jbe
push
adc
mov
test
add
hlt
movsl
rol
mov
push
cmp
hlt
jmp
adc
pop
rcr
int3
mov
movsl
push
xchg
scas
cltd
movsl
scas
ret
pop
icebp
fmulp
fcmovu
cmpsl
mov
xor
cmp
lahf
scas
xchg
jo
jp
bound
mov
movq
jae
and
xor
xchg
ss
pushf
push
jne
cmp
jecxz
faddl
jp
mov
jo
pusha
lods
xchg
jmp
xchg
dec
add
lret
adc
cmp
movsb
lods
pop
mov
mov
pop
pop
jns
jo
pop
cmp
add
fisubs
sbb
cmp
fiadds
and
push
mov
lods
lcall
sub
cmpsb
cmp
pop
popl
mov
outsb
mov
cld
or
sbb
ja
dec
pop
push
jne
inc
inc
inc
cmp
lock
out
adc
or
sub
mov
std
jnp
pusha
stc
cmp
mov
loopne
dec
lret
push
lods
out
jnp
mov
fsubrl
ljmp
cmp
dec
xor
fwait
insb
jle
test
loopne
mov
out
inc
pop
add
js
or
push
hlt
mov
pop
mov
mov
daa
mov
pop
test
or
mov
sbb
sub
cmp
and
or
filds
outsl
mov
test
jne
popl
jmp
cld
mov
movsl
fiaddl
repnz
or
pop
in
nop
loopne
es
add
lahf
jbe
xchg
loop
sbbb
pop
mov
mov
bound
sar
xchg
jno
or
xorl
adc
pop
andl
test
mov
out
jno
movsl
mov
jnp
ljmp
mov
fcoml
adc
push
pop
adc
jae
into
mull
popf
mov
dec
sbb
dec
mov
cs
adc
cmp
pop
and
loopne
ret
nop
fcoms
fcomip
orl
dec
outsb
jge
push
jg
pop
add
mov
shll
mov
and
aam
adc
xor
orb
pushf
add
jns
and
decb
loope
outsb
jo
scas
cpuid
push
dec
adc
inc
arpl
ss
inc
push
test
xor
mov
cmp
mov
xchg
mov
push
lret
ss
notl
sub
dec
adcb
mov
lods
cmc
xorb
xchg
pop
and
xor
dec
divb
pop
stos
imul
add
aad
mov
xchg
sti
xor
jbe
xor
rol
push
rcl
cltd
adcl
xchg
movsl
les
fidivs
aam
lock
movsl
jae
or
in
adc
push
test
sub
fsubl
testb
loopne
jecxz
roll
cwtl
imul
inc
popa
dec
xchg
pushf
or
dec
mov
mov
sub
push
cmp
rorb
out
jb
jge
sbb
xchg
mov
out
pop
sahf
inc
inc
fists
and
mov
ss
dec
cmc
dec
lods
sub
lea
jbe
mov
jns
into
addb
insl
in
add
xchg
inc
in
lods
jl
loop
rorl
dec
ja
int
sti
lahf
mov
lods
mov
or
mov
mov
jg
xchg
mov
out
sub
mov
pop
mov
push
test
xchg
xor
dec
or
jno
xlat
mov
adc
scas
or
in
sar
xor
or
out
pop
les
inc
lods
insl
inc
adc
xlat
rclb
push
mov
les
jmp
xchg
push
sbbb
push
fwait
mov
mov
add
loope
fiadds
jno
and
gs
iret
adcl
xor
sub
cmp
scas
jge
int
movsb
xchg
dec
xchg
in
notl
test
push
lds
mov
sub
sbb
int
aad
ja
jns
inc
jo
test
adc
das
ucomiss
xor
das
xchg
lock
lock
push
addb
pop
mov
or
adc
cmc
rep
lock
fadds
test
adc
iret
outsb
or
push
cs
dec
sub
xchg
mov
inc
call
inc
cmp
pop
xchg
xchg
and
icebp
and
mov
out
cs
xor
or
imul
xor
jp
into
inc
add
push
cmp
mov
mov
arpl
pop
gs
sub
push
aaa
mov
hlt
mov
pop
mov
sbb
lock
bnd
mov
lea
bound
or
iret
adc
pop
mov
push
add
pop
pop
mov
stos
shl
sbb
scas
xor
pop
ficompl
insb
add
iret
js
pop
clc
out
sar
sub
in
xor
or
in
popf
loopne
dec
inc
stc
popa
repnz
push
add
test
inc
and
shl
xchg
call
mov
cmp
enter
adc
sbb
push
out
ret
cmp
fcmovnb
and
inc
jb
std
pop
xor
xchg
cltd
stos
cmp
pop
adc
clc
sbb
xchg
test
push
pop
cmp
push
mov
jae
test
idiv
and
cmc
fisubrl
mov
jno
xor
cmp
test
cmp
nop
das
push
call
push
jmp
cmc
test
aam
dec
cmp
xor
orl
leave
push
or
push
test
xchg
cmp
cmc
add
xchg
les
mov
jecxz
jp
lcall
packuswb
sub
scas
mov
cmp
or
in
push
mov
sbb
lret
pusha
in
ja
fwait
in
mov
cltd
repnz
rcl
loopne
inc
arpl
sub
rorb
repnz
fnstcw
je
xchg
ret
cmp
mov
dec
cmp
push
outsb
lahf
fisubl
icebp
lds
cmp
cli
dec
leave
xchg
jo
mov
fistpll
aaa
jecxz
push
push
or
dec
call
addr16
adc
inc
inc
inc
filds
scas
movsb
adc
xor
daa
dec
icebp
fucomip
mov
call
es
pushf
ret
jne
insl
sahf
pop
pop
mov
xchg
fstl
hlt
in
out
xchg
add
je
adc
sub
incl
sqrtps
loop
rolb
fwait
and
jno
adc
xor
cmp
outsb
sub
and
ficomps
mov
ds
cli
cmpl
jg
jns
mov
sub
test
repnz
mov
adc
jle
cmp
mov
sbb
inc
scas
dec
in
cli
sub
mov
test
out
or
sti
pop
and
cmpsl
jns
xchg
sub
enter
xor
jge
mov
movsl
fwait
out
cmc
adc
cmc
jp
fists
sti
popa
mov
addr16
mov
jmp
insl
sti
ret
lahf
imul
mov
leave
inc
pop
pop
shlb
inc
call
mov
mov
in
adc
es
enter
lret
jl
aaa
insl
adc
loop
and
add
insb
orb
fsubrs
xor
mov
mov
clc
call
jo
or
add
xchg
mov
sub
lahf
loop
sarl
push
icebp
mov
addr16
fwait
out
dec
inc
loop
inc
xchg
pop
enter
and
push
pushf
and
jns
dec
xlat
ljmp
insl
dec
enter
fdivr
or
jecxz
out
dec
lods
sub
mov
out
into
cmp
in
push
cmp
into
cmc
mov
ds
outsb
outsl
in
jns
and
fisubl
push
test
dec
sti
adc
push
sarl
sub
jmp
or
jno
xchg
and
jns
xlat
lahf
pop
int
mov
push
add
pop
outsl
int3
lods
mov
push
fsub
int3
cmpsb
cmp
sbb
fldz
les
popf
xchg
xor
js
adc
xor
fidivl
pop
push
push
mov
out
enter
cld
add
xor
adc
addr16
out
fbld
and
mov
mov
repz
xor
add
lods
dec
dec
shll
xchg
add
xchg
repnz
lea
xor
fbstp
pop
cmp
data16
push
cmp
fisubs
jae
jno
jge
xor
lea
stos
add
outsb
aaa
test
rorl
mov
insb
cmc
in
sub
movsl
mov
stos
js
mov
stos
fcom
pusha
popa
dec
xor
lds
out
and
stos
call
bound
pop
xchg
in
aad
lds
bound
cli
js
jns
inc
mov
mov
add
cld
into
mov
mov
mov
jns
mov
int3
ja
int3
int
xchg
inc
and
out
jo
bound
shl
js
dec
xchg
insl
dec
inc
sub
int3
mov
xchg
push
lds
es
push
lahf
push
pushf
cmp
fucom
and
cmc
aas
push
fisubs
xor
push
arpl
out
mov
pop
xchg
sub
sub
popf
jge
fnstsw
sbb
xor
mov
enter
aam
arpl
inc
push
sbb
imul
jecxz
inc
ret
add
mov
xlat
pop
mov
fistl
pop
mov
inc
xchg
adc
and
pop
in
stos
in
sub
cs
inc
cli
aaa
scas
das
shl
adc
push
xor
sub
in
mov
pop
and
jne
inc
inc
out
insb
lds
aas
mov
xor
stos
mov
mov
push
dec
or
xorb
mov
cltd
mov
nopl
dec
outsl
scas
ljmp
jbe
test
xchg
push
cmc
and
push
mov
les
sbb
mov
test
and
xchg
mov
mov
add
push
icebp
cmp
adc
aaa
in
dec
mov
icebp
xor
push
cmp
cmpsb
xchg
scas
cwtl
mov
loope
lcall
daa
pop
push
out
addb
test
xchg
rorl
sub
or
scas
mov
into
xor
jge
mov
mov
cmc
arpl
test
dec
imul
pop
sbb
jp
aad
xor
sbb
push
sub
xor
ja
sbb
enter
ret
pop
cmpsb
and
sbb
daa
fidivrs
sub
rorb
pop
pop
mov
push
cwtl
lcall
insl
jmp
popf
ljmp
push
adc
js
lcall
aam
filds
xchg
mov
mov
push
dec
xchg
add
pusha
ret
mov
adcb
adc
push
mov
jle
add
lret
dec
out
jae
mov
stos
pop
movsl
adc
sub
adc
loop
js
cmp
sbbb
add
cs
cmpsl
mov
sub
or
lret
das
cmpsl
ret
and
mov
mov
inc
adc
into
mov
jns
stos
arpl
mov
das
cltd
dec
shlb
push
cmp
es
pop
fwait
into
pop
dec
nop
mov
scas
shlb
dec
popa
test
das
add
jp
mov
aaa
mov
inc
mov
aas
push
mov
jne
rcr
out
out
shlb
xchg
in
jle
dec
xchg
add
lcall
scas
in
stos
repnz
roll
fadds
mov
mov
xchg
mov
or
outsl
dec
dec
daa
xchg
pop
je
inc
ret
popa
mov
jl
out
and
add
ret
aad
push
pop
lcall
mov
popf
test
dec
xchg
mov
scas
loopne
jg
cmp
push
test
xchg
adc
shrl
int3
test
test
out
pusha
or
stos
pop
fxam
subl
imul
ret
icebp
lret
jl
sub
leave
imul
inc
movb
xor
repz
fwait
xchg
std
pop
jae
orb
aas
stc
adc
iret
xchg
inc
sti
pop
imulb
stc
sbb
stos
loopne
push
sbb
mov
push
pusha
pop
sub
mov
lods
daa
inc
jae
add
cld
orl
shr
inc
iret
push
adcl
lahf
mov
aad
outsb
push
in
xor
icebp
mov
out
pop
sub
clc
jl
inc
adc
aaa
mov
sbb
andb
ljmp
pusha
or
stos
dec
sub
adc
ss
loop
push
int
push
stc
pop
fwait
and
sub
mov
sti
js
dec
lods
mov
xor
or
in
loop
aad
mov
add
sbb
xchg
mov
pop
mov
push
cmp
lahf
popa
fisubrs
inc
andl
cmp
into
ss
pusha
xchg
subb
inc
int3
inc
or
sub
lcall
push
insb
push
push
cmp
cmpsl
das
shll
pop
jo
or
les
shlb
cmc
insb
shrb
jns
sub
adc
sbb
sub
and
data16
lods
mov
mov
test
in
data16
sub
mov
fidivl
in
adc
test
lds
popa
xor
cmp
adc
mov
lods
mov
xchg
out
pop
addr16
adc
and
pop
cwtl
es
push
push
cwtl
pop
add
dec
rcr
je
cmpsl
lods
push
loopne
ret
lods
mov
decl
imul
push
std
pop
cld
jbe
xchg
psrld
loop
icebp
adc
adc
xor
pop
xor
jg
adc
sti
dec
pop
cmp
in
mov
ja
xor
push
xlat
or
add
sahf
cwtl
cmp
jp,pt
adc
push
loop
or
ret
xchg
dec
pop
pop
in
dec
hlt
loop
xor
cmp
mov
ds
cld
jae
ljmp
mov
fmull
jmp
rcr
push
icebp
repnz
cltd
adc
mov
fs
popa
leave
mov
pop
divl
fs
cmp
add
mov
cmp
and
add
testl
pop
sbb
push
cmp
pop
loope
pop
pop
pop
ret
aaa
das
xchg
call
mov
mov
repz
negl
or
jne
hlt
outsb
inc
mov
bound
jmp
adc
or
or
sub
hlt
pop
dec
push
add
sar
test
xor
sarl
sbb
mov
jno
sub
lock
lahf
out
sbb
mov
adc
jl
add
fldt
mull
xchg
sub
jae
into
lds
cltd
les
and
xor
jl
scas
add
and
inc
call
dec
sti
orl
xchg
scas
dec
aad
enter
cwtl
loope
xor
push
pop
dec
lret
test
addl
xchg
push
jmp
into
push
jae
shl
test
jno
outsl
mov
or
lods
lds
mov
fidivs
testl
or
shlb
dec
das
mov
and
jg
cmpsb
shr
leave
sbb
and
stos
dec
jno,pt
shrl
int3
hlt
popa
pop
adcb
pop
aaa
repnz
inc
iret
sbb
sti
lret
adcl
ficoms
add
adc
sub
aam
aaa
lods
jp
fimuls
or
fprem
dec
dec
sbb
loopne
loop
stos
xchg
hlt
mov
sbbl
andb
xchg
push
rcrl
adc
popf
xor
pop
jl
xchg
js
pop
push
adc
dec
push
lock
sbb
pop
les
mov
mov
xchg
push
mov
pop
jecxz
adc
fstpt
imul
dec
adc
or
sub
popa
inc
fsubrs
rcr
aas
sub
fbstp
xor
xor
or
adc
pop
mov
xchg
dec
jecxz
scas
mov
cld
in
jp
jmp
mov
push
inc
movsl
jg
repz
cmpl
out
push
leave
fiadds
xor
inc
mov
fsub
pop
mov
jae
in
or
pop
xchg
lret
gs
cmp
cld
xor
outsb
fwait
inc
add
fisubrs
in
loop
jo
jno
ja
nop
iret
dec
pop
mov
xor
enter
xor
ret
sahf
xor
or
adc
sahf
jmp
psubsb
mov
push
icebp
inc
fwait
mov
xor
push
cmp
pop
add
mov
mov
push
xor
pop
mov
lcall
xor
aad
stos
sbb
mov
out
jo
sub
jmp
fnstsw
pop
scas
mov
and
sti
pop
inc
insb
mov
cmc
jb
cmp
lds
pop
add
jb
je
and
and
push
sub
lahf
shl
ds
sbb
enter
pusha
cmpb
sub
sti
or
pop
idiv
bound
sub
loopne
jge
inc
jecxz
cmp
xchg
insb
ljmp
jmp
aaa
lret
arpl
popf
mov
or
pop
push
xor
icebp
push
xchg
sub
lock
int3
repnz
sub
adc
pusha
xchg
enter
xchg
rol
push
add
sbb
in
jno
mov
mov
pop
pop
pop
inc
sbbl
adc
xchg
mov
std
cmp
lahf
pop
iret
jecxz
pop
aam
xor
jb
repnz
sub
xchg
pop
pop
test
pop
je
aaa
mov
ljmp
nop
fcompl
test
xchg
test
ret
nop
clc
icebp
mov
mov
jg
push
add
mov
pop
sarl
push
push
push
fldenv
test
dec
ljmp
inc
sahf
sarb
xchg
xor
dec
fisubs
pop
pop
ret
and
add
pop
add
push
lcall
loope
adc
into
pop
mov
cli
push
insl
fiaddl
pop
or
xchg
loopne
fs
cmp
jp
cmp
push
mov
xchg
push
loopne
mov
or
leave
mov
mov
sub
mov
mov
nop
pop
sarb
sub
fwait
sbb
jl
jns
pcmpeqw
dec
lods
mov
sbb
inc
inc
inc
lcall
in
mov
loop
adc
out
sub
mov
hlt
sbb
inc
add
jle
fistpl
outsb
push
jg
jmp
and
jle
pusha
cmp
adc
push
xor
arpl
xchg
jno
mov
pusha
outsb
lcall
or
inc
push
insl
ljmp
out
int3
mov
call
push
int3
push
mov
or
imul
xchg
cltd
fisubs
inc
pop
pop
mov
outsl
cmp
mov
push
mov
xor
xchg
ret
insl
lods
mov
xchg
pop
aam
aas
dec
inc
push
mov
loopne
mov
daa
aaa
cmp
cwtl
pop
jecxz
adc
mov
fbstp
dec
popa
pop
sbb
popa
mov
sarl
push
add
xor
les
xchg
mov
pop
inc
fbstp
test
shl
imul
pop
imul
mov
xchg
cmp
xchg
inc
add
ficoms
enter
scas
mov
movsb
sbbb
dec
adc
cmp
pop
aad
das
mov
adc
pop
lcall
in
pop
jno
xchg
cmc
lret
adc
xor
mov
out
lahf
lret
insl
jo
ja
jno
jno
sub
lcall
ud1
dec
dec
idivb
std
xchg
nop
sub
xor
jp
jg
mov
aad
jnp
push
mul
cmp
cmpsl
inc
lock
cmp
xchg
lock
xor
les
xchg
fcoml
pusha
fwait
inc
aaa
adc
mov
xor
pop
dec
dec
cmc
mov
mov
or
dec
pop
and
mov
daa
mov
inc
xchg
mulb
cmc
dec
lahf
clc
mov
jg
adc
decl
aaa
push
cs
mov
inc
xchg
lea
pop
negl
and
inc
push
dec
pop
mov
cli
dec
cmp
cmpsb
dec
jg
repnz
mov
sub
pop
mov
mov
jo
imul
sahf
fs
imul
xchg
pop
cld
shl
daa
in
pop
pop
cld
cmp
mov
and
push
and
cs
sbb
mov
xchg
test
adc
sbb
sub
and
sub
stos
push
cmpsl
mov
mov
fdivrp
out
jae
lret
int
pop
sbb
out
or
enter
in
pop
or
sub
test
sbb
mov
out
punpckldq
cltd
inc
dec
mov
xor
sbb
and
dec
add
mov
lods
pop
adc
xchg
mov
cltd
mov
outsl
dec
lgs
addr16
ljmp
aad
nop
mov
fwait
mov
cmp
dec
xchg
nop
sub
push
dec
insl
mov
mov
xor
arpl
mov
cltd
push
imul
imul
int3
xor
test
pop
jb
mulb
lcall
lret
data16
or
dec
push
mov
call
das
add
sub
lahf
xor
enter
pop
insl
stos
negl
push
fstps
addr16
popa
jo
rclb
popf
lock
in
pop
movsb
arpl
xor
adc
lods
xchg
add
fisubl
movsb
in
shrl
dec
shll
out
dec
pop
pop
inc
pop
fcomps
push
dec
mov
jnp
adc
adc
mov
and
lock
and
cmp
hlt
mov
push
jns
mov
into
mov
enter
test
inc
adc
pushf
sub
lods
bound
dec
push
xchg
push
lods
cmpsb
or
dec
insl
push
test
daa
sbb
and
out
popa
arpl
add
sbb
fadds
and
or
add
scas
dec
sub
arpl
xor
adc
fsts
fiaddl
int3
ret
inc
rorl
out
enter
out
and
lock
inc
jo
xchg
fs
neg
pop
mov
lahf
inc
push
xchg
fimull
push
cmp
pop
js
int
nop
fwait
cmp
or
cmpb
xchg
add
mov
mov
int
imul
mov
mov
sub
dec
fidivs
push
jo
out
aad
hlt
bound
mov
or
xchg
hlt
xor
movsb
inc
jno
ficomps
or
cmpsl
jno
sub
aad
test
stos
dec
mov
push
ljmp
mov
mov
mov
je
or
scas
ljmp
imul
lret
lret
rol
add
ficoml
jmp
loop
push
lahf
bound
inc
xchg
xor
pop
push
dec
scas
dec
pushf
jle
adc
loop
push
and
xchg
adc
stos
push
jecxz
fwait
jmp
adc
outsl
mov
adc
sbb
ficompl
mov
repnz
mull
clc
outsl
addb
call
inc
jp
sub
xor
mov
and
inc
lahf
fcomps
dec
bswap
and
ds
xor
ljmp
mov
mov
mov
nop
push
add
data16
bound
pop
push
mov
notl
add
sbb
imul
arpl
das
inc
fisubrs
cmp
mov
inc
sbb
shll
adc
add
clc
mov
out
jge
aam
out
pop
fnstsw
sbb
pop
push
stos
cmpb
inc
mul
mov
fucomp
inc
xlat
js
and
in
add
or
push
rcr
or
dec
test
mov
js
push
mov
ja
xlat
sbb
jle
nop
xor
orb
ss
mov
loop
xorb
adc
lock
mov
cmp
jmp
dec
xchg
int3
imul
mov
push
aas
outsb
movsl
add
shll
inc
pop
shrl
xchg
adc
mov
mov
test
cwtl
int3
and
or
cwtl
mov
jne
cld
pop
ret
sub
sahf
lahf
aam
sbb
daa
xchg
ret
jmp
int3
mov
int3
sbb
ss
jb
sub
negb
xchg
int3
cmp
test
mov
loopne
cmp
out
xor
pop
fdivrs
push
add
add
sbb
ljmp
mov
sub
sbb
stos
xor
out
popa
ret
mov
in
jae
mov
mov
and
lret
push
pop
push
push
std
mov
mov
xor
adc
jmp
ret
dec
cmp
inc
mov
rcrl
xchg
les
repnz
aam
inc
outsl
inc
lea
out
out
inc
adc
loop
aas
or
je
shll
jo
testl
pop
scas
xchg
pop
pop
xlat
aaa
mov
cmp
adcb
outsb
lods
sbb
or
sub
repnz
in
outsb
bound
lcall
mov
mov
mov
arpl
fcoms
out
mov
jecxz
adc
mov
or
inc
add
arpl
mov
mov
imull
mov
mov
jb
push
in
cmp
cmc
jle
push
dec
mov
hlt
dec
inc
enter
shll
cmp
and
gs
adc
clc
inc
push
xchg
xchg
test
push
fsubl
dec
movsl
loope
mov
mov
das
aaa
sbbl
movsl
push
mov
jmp
scas
push
push
sbb
mov
sti
push
jl
dec
sbb
or
cmpsl
pop
pushf
js
sahf
lods
nop
insl
fstpl
xor
inc
xorl
rclb
and
mov
mov
mov
sbb
ret
pop
call
enter
cltd
xchg
push
fisubrl
enter
incl
xor
sub
into
inc
test
jae
mov
mov
les
push
cmc
dec
sub
int3
sub
push
arpl
pop
mov
cltd
cmp
push
mov
scas
hlt
mov
sbb
sbb
inc
pop
leave
or
and
or
rolb
cmp
sarl
xchg
movsb
sbb
push
dec
jb
sti
add
inc
lret
cmpsb
mov
push
or
jl
xchg
pop
add
and
repnz
or
lcall
outsl
add
mov
nop
std
xchg
add
mov
lods
dec
insl
das
dec
mov
lahf
out
fimuls
push
jns
jno
rolb
push
insl
rorl
inc
or
idivl
add
out
in
xchg
loop
flds
in
push
or
inc
jno
mov
into
pop
xor
lea
out
lcall
jl
mov
ds
cmp
pop
lahf
mov
pop
int3
ds
cld
scas
dec
adc
mov
pop
nop
popf
push
and
adc
mov
push
negb
outsb
and
jbe
jo
xchg
mov
sbb
push
xchg
into
loope
cltd
push
mov
ret
bound
adc
jnp
loope
push
dec
mov
push
sarl
mov
bound
leave
adc
jg
sub
jecxz
loope
pop
sub
push
pavgb
adc
xor
dec
or
in
jl
push
sub
pushf
xor
adc
bound
mov
mov
das
aam
cli
mov
xchg
push
jmp
sbb
insb
cli
loop
pop
jle
and
stos
stos
out
fcompl
dec
push
mov
or
out
int
xor
cltd
in
es
fs
nop
arpl
push
repnz
stos
xor
ds
jge
sbb
lea
stc
dec
decl
mov
cmp
xchg
add
adc
js
stos
stos
xchg
xchg
les
in
pushf
mov
cmc
loop
loopne
mov
aas
in
imul
xor
and
and
lret
mov
push
push
mov
and
cmp
ret
movsb
or
test
inc
gs
adc
mov
into
ss
mov
inc
cmp
roll
xchg
in
add
mov
fucomip
out
sbb
fadd
adc
addr16
dec
into
push
cmp
in
pushf
xchg
rcr
xor
lret
mov
sahf
jb
jmp
push
out
orb
into
nop
lahf
outsl
fildll
lahf
rcrl
mov
sub
data16
fisubrs
dec
je
sub
sti
js
mov
js
in
adc
push
fldenv
out
aaa
fs
call
xchg
lret
xchg
inc
and
inc
mov
scas
repz
pushf
int3
lock
loopne
sub
pcmpgtd
daa
les
dec
jge
sub
inc
sub
movsl
int3
outsl
or
sbb
jne
dec
dec
jb,pn
dec
mov
dec
jae
ja
inc
test
je
mov
fmulp
push
jb
repnz
push
ljmp
add
pop
inc
clc
daa
mov
aas
repnz
xor
sti
test
xchg
and
cld
dec
xchg
and
cmp
rorl
lds
jp
sahf
inc
lahf
xchg
les
clc
lods
mov
outsb
mov
sbb
je
dec
inc
negl
mov
sub
arpl
insb
push
mov
jns
jnp
xor
mov
push
aam
fs
nop
cmp
pop
ja
stos
imul
repz
jecxz
cli
mov
lds
mov
xor
push
push
popf
je
cmpsl
andl
arpl
mov
inc
pop
add
cmp
out
xor
push
fiaddl
addl
push
pop
stos
bound
adc
add
mov
jo
jg
dec
or
dec
dec
sbb
sbb
push
jns
into
ljmp
out
test
lods
movsl
lds
jo
enter
mov
test
sahf
lods
sub
push
cmpsl
inc
std
jle
mov
hlt
lock
ret
xor
cwtl
out
sbb
rcrl
adc
push
mov
xor
xchg
mov
ror
cmp
pop
fs
and
repnz
cmovge
mov
test
loope
push
shll
cmp
sub
repz
scas
loope
push
and
fstl
xchg
or
jo
and
std
inc
or
inc
inc
mov
sbb
push
movzbl
pusha
mov
mov
pop
nop
dec
rorb
ret
adc
sub
mov
bound
cmp
sbb
in
push
jbe
mov
jmpw
pop
adc
mov
repnz
push
fsubs
push
popf
pushf
fiaddl
lret
mov
out
pop
add
orb
enter
popf
xchg
lods
testl
dec
inc
test
add
call
push
icebp
sbb
icebp
jle
sub
sbb
pop
mov
test
push
pop
cs
mov
mov
add
leave
xchg
sbb
xchg
loope
in
xchg
mov
ret
gs
adc
fiaddl
mov
pop
shll
xor
incl
popf
mov
negb
fsqrt
shlb
or
sbb
adcl
sbb
or
idiv
mov
add
jg
fistpl
inc
jo
sub
or
lods
mov
in
pusha
fbld
jle
mov
cmp
inc
fnstcw
add
in
jp
das
mov
addr16
in
test
outsl
ret
inc
dec
out
jecxz
dec
push
jmp
lea
lahf
xchg
cmc
ja
and
cli
xor
out
sub
ljmp
add
dec
cmp
dec
and
push
xor
aad
sub
cltd
and
dec
in
ret
fwait
xor
int3
mov
in
jb
xchg
js
sub
pop
clc
clc
pop
scas
mov
cltd
test
adc
mov
movsb
pop
mov
jmp
and
lock
imul
add
pop
mov
mov
pop
xor
adc
add
cmp
xchg
into
sbb
sbb
lds
mov
pop
jne
jae
adc
sbb
test
pusha
xor
aas
fdivl
or
test
outsb
ficompl
out
push
inc
cmpsb
mov
in
arpl
imul
xchg
mov
or
pusha
enter
mov
inc
lahf
cs
aad
sub
sbb
fcmove
sahf
jb
xor
cmpl
sub
mov
push
sahf
ret
jae
dec
jge
xor
adc
push
loope
or
mov
cmc
cmp
aas
cwtl
out
dec
sbb
inc
sbb
xor
xor
mov
sub
inc
jns
mov
sbb
jb
pop
or
ret
mov
dec
mov
enter
push
push
imul
mov
add
jbe
jb
inc
lret
cld
jne
xchg
jg
jmp
stc
push
divb
inc
add
fstpt
mov
dec
push
clc
test
fsts
gs
repz
push
mov
nop
cld
nop
jl
sub
iret
sbb
iret
ljmp
push
dec
xor
fsub
mov
insb
stos
xor
push
sub
clc
shrb
pop
mov
clc
xchg
leave
rcrb
pop
loopne
in
mov
pcmpeqb
inc
inc
repnz
pop
xlat
jae
pop
pop
mov
mov
pop
out
sbb
jnp
fsubr
push
test
cwtl
jg
data16
in
les
add
mov
sbb
sub
xor
xor
fcomps
in
mov
mov
aaa
inc
mov
inc
adc
js
add
or
stc
test
test
dec
imull
mov
jns
push
lcall
jle
fninit
lret
or
ss
cmp
cmc
sbb
or
imul
in
push
pop
sbbb
mov
addr16
push
fwait
mov
mov
js
xchg
xchg
pop
test
fisubs
mov
data16
es
call
mov
xorb
cmpsl
jnp
shll
jno
int3
es
mul
xor
cs
icebp
ja
pop
add
jp
outsb
in
fwait
and
mov
aad
out
outsb
popf
sahf
mov
adc
mov
stos
jnp
jp
add
ljmp
cmpsb
int3
or
outsl
cmpsl
cmp
pushl
sbb
xchg
movups
test
jle
imul
inc
jno
sub
add
push
pushf
imulb
and
sub
xor
les
ja
sbb
bnd
mov
mov
mov
jle
xchg
pop
jmp
push
jecxz
mov
pop
pop
es
and
push
pop
stos
data16
cld
mov
sbbb
out
sbb
jmp
fwait
getsec
divl
mov
mov
push
jne
ljmp
and
push
or
addr16
sahf
fcoms
imul
pop
out
dec
es
call
cmp
sub
jl
pop
cmp
push
mov
pop
fnstsw
aad
xor
int3
arpl
cltd
outsb
mov
xor
mov
xor
and
jns
popf
jno
xchg
add
cmp
test
insl
es
inc
in
cld
lock
int
sub
mov
lahf
pop
cmp
mov
cmp
add
ss
jecxz
aaa
fldcw
les
sbb
sahf
or
add
mov
dec
mov
movsb
dec
jno
arpl
std
popf
fcomps
repz
xlat
iret
fiaddl
add
mov
mov
hlt
adc
mov
inc
cmc
dec
dec
xchg
add
push
sahf
mov
clc
mov
pop
sbbl
in
xchg
scas
ss
dec
xor
imul
jg
mov
nop
popa
or
xor
icebp
popa
push
scas
fwait
sub
inc
fnstcw
fists
xor
lcall
xchg
dec
adc
cmc
loop
pop
cmp
mov
into
lret
mov
sub
or
cltd
push
bnd
jbe
jno
out
inc
test
out
mov
xchg
sbb
xor
push
push
pushl
lds
lods
dec
push
jle
divl
out
dec
adc
fwait
add
mov
movsl
cmp
imul
out
sub
stc
sub
jmp
icebp
or
cwtl
popa
push
mov
or
fadd
xor
dec
jbe
mov
stc
fcom
or
fdivs
or
cmpsb
and
pop
enter
mov
data16
rolb
jecxz
push
nop
adc
xchg
loop
shll
pop
sbb
stc
sarl
mov
fs
xchg
xchg
xchg
std
push
xchg
mov
cwtl
mov
es
inc
pop
pop
pop
shrb
das
mov
inc
jmp
aad
mov
pop
movsl
jns
ss
int
shll
push
inc
add
mov
gs
cmp
imul
cmp
push
enter
ret
cmp
jmp
xchg
in
sub
push
jg
and
xchg
dec
sbb
leave
iret
in
mov
mov
sbb
iret
cmpsl
clc
loop
sahf
mov
pop
ljmp
rcll
int3
cmpl
push
push
je
cmp
and
sbb
push
in
inc
cld
adc
mov
dec
push
pop
test
xor
shlb
mov
ret
out
sbb
insl
xor
roll
lret
stc
loope
xor
inc
ja
dec
dec
xchg
imul
push
jnp
push
cwtl
out
jge
xchg
filds
mov
test
xorb
jne
cmp
dec
inc
sbb
adcl
mov
rcr
int3
jnp
sahf
dec
jns
cmp
or
scas
xchg
mov
jo
bound
sbbb
lcall
pop
pop
push
mov
dec
dec
addr16
sbb
lods
or
or
hlt
inc
lds
mov
out
fs
lock
adc
jbe
mov
out
mov
or
pop
fidivrl
mov
sarl
xlat
enter
es
mov
repz
adc
outsl
adc
dec
lock
shr
ficoms
addr16
jne
sbb
mov
insb
sbbl
inc
inc
pop
into
outsb
add
or
pop
cmp
xchg
adc
test
push
dec
fisttpl
mov
dec
push
lret
adc
adcb
int3
iret
in
xor
aaa
ret
inc
movsb
jecxz
test
mov
push
movups
jle
je
movsb
ljmp
push
pop
test
insb
repnz
decb
mov
cmp
mov
fnstenv
mov
cmp
sbb
in
gs
jl
inc
jle
aad
cmp
jmp
in
pop
inc
jmp
clc
pop
inc
mov
lcall
add
jnp
arpl
cld
stos
or
xchg
fwait
in
call
cmpsl
test
nop
or
ret
jecxz
shrb
push
mov
int3
shl
add
sbb
push
sub
aad
and
aam
mov
popf
push
mov
sub
rolb
sbb
daa
cmp
repnz
inc
cmp
xor
out
das
loopne
out
in
adc
fdiv
and
pop
adcl
or
nop
mov
mov
jbe
pop
jge
push
and
lcall
ja
aad
or
inc
stc
mov
sub
mov
repz
inc
push
fs
mov
lods
push
fsts
sub
cmpsl
cmp
or
pop
xchg
jne
push
fists
push
repz
rol
or
dec
les
and
xchg
out
or
test
dec
sub
arpl
pop
fwait
xchg
push
scas
push
lods
out
loopne
in
pushf
jg
lods
cmp
fnsave
push
or
adc
pop
lret
ret
xlat
test
push
bound
push
mov
xor
loopne
xchg
push
jno
stc
or
sub
add
mov
pop
int
in
fidivl
inc
dec
xor
sbb
js
fucomip
adc
faddp
out
fisttpll
je
jmp
mov
push
scas
mov
test
adc
mov
xchg
ljmp
call
mov
loop
pushf
lret
je
imul
fs
insb
shll
repnz
sub
addl
cmp
lcall
push
pop
aaa
adc
or
mov
or
xlat
lcall
push
push
jecxz
imul
or
scas
dec
aam
xchg
jmp
std
js
and
insb
fs
pop
adc
xorl
cmp
aam
mov
mov
insb
fwait
mov
stos
mov
int
mov
pop
pop
nop
add
jp
mov
cmp
sub
fldt
lret
fnstsw
pop
mov
cld
fbld
mov
inc
test
fdivrs
pusha
mov
movsl
icebp
pop
cmp
ffree
inc
popl
out
xorb
ret
out
cmc
popf
leave
xor
ss
sahf
mov
sahf
std
je
pop
push
jno
adc
inc
xchg
inc
xor
push
call
mov
sbb
out
or
sbbl
cmp
pop
outsl
cmp
dec
mov
ffree
aas
adc
cmp
mov
mov
ja
sub
shll
jns
xor
inc
jnp
aad
mov
mov
and
rcl
imul
mov
xor
add
xchg
and
cltd
ret
adc
xor
push
mov
mov
lretw
pop
add
jo
mov
dec
xchg
push
dec
test
test
cmp
shll
mov
mov
dec
imul
mov
xor
lret
sub
dec
je
mov
dec
push
mov
pop
shll
adc
sub
imul
pusha
pop
adc
mov
lods
mov
jne
popf
nop
xor
nop
cmpsl
pop
push
std
push
sbb
inc
mov
rorl
jge
shrb
hlt
mov
test
mov
xchg
lock
arpl
mov
inc
arpl
cmp
push
cltd
push
push
test
jbe
inc
adc
popf
rclb
mov
cmp
insl
dec
dec
imul
push
imul
jle
ja
sti
or
inc
adc
mov
cmc
test
shl
or
xchg
movsl
bound
push
and
add
mov
push
fstl
mull
dec
lea
out
movsb
addl
nop
cli
in
lock
mov
sub
xchg
cmc
cmp
mov
pushf
repz
out
mov
mov
jb
das
or
mov
das
lret
popf
ljmp
inc
push
add
fstl
jns
push
xchg
adc
pop
std
mov
dec
xlat
pop
sarb
test
in
adc
rorl
mov
icebp
clc
adc
pop
push
iret
stos
mov
push
xadd
xchg
fdivrs
jae
dec
enter
mov
jge
add
loop
xchg
ljmp
cltd
add
hlt
xlat
out
sbb
data16
ret
sub
fnstcw
jl
jle
inc
dec
cmc
popf
pop
and
fdivp
mov
or
fsub
pop
dec
arpl
out
in
inc
andl
jmp
mov
clc
and
test
or
fiadds
sbb
std
push
xorb
loope
sub
enter
xor
mov
adc
adc
sbb
mov
xchg
jbe
xchg
cwtl
inc
mov
rcrl
or
xorl
popf
cmpsl
ret
xchg
test
xchg
cli
jmp
jns
pop
cmp
and
enter
fsts
xchg
bound
repz
mov
or
int3
push
xor
push
dec
ret
pushf
nop
rcrl
pop
cmpsb
xor
mov
add
ffree
aaa
and
je
int3
ret
pop
sbb
jmp
in
jecxz
test
pop
or
push
clc
lret
testl
hlt
push
adc
cmc
call
aaa
adc
daa
es
test
xor
jne
shrb
iret
outsl
das
xchg
push
xchg
pop
cmc
fldt
cmp
xchg
rcrb
dec
lcall
stos
mov
or
cmp
fistl
push
dec
mov
xor
nop
call
add
fs
pop
in
jb
adc
outsl
stos
xor
sarb
mov
int3
gs
inc
nop
mov
repz
jge
cmp
push
mov
add
fistpll
fcoms
fisubrs
arpl
test
aam
mov
cld
sbb
adc
ret
or
adc
jae
ds
push
sbb
outsb
outsb
insb
fwait
mov
dec
push
xor
pop
mov
movsb
mov
lds
cs
jno
test
stos
add
sbb
dec
dec
fistpl
push
lcall
js
pop
sub
add
lahf
jnp
mov
aaa
jg
sbb
jmp
jbe
pop
cmp
pop
insb
movsl
mov
and
lods
pop
add
popa
sub
dec
and
lds
mov
cmpsb
dec
scas
cmp
push
push
stc
out
mov
lret
push
data16
cmpsb
lret
push
cmpsl
es
imul
int
or
dec
push
and
mov
jne
femms
adcl
inc
adc
call
mov
mov
mov
test
push
int3
and
jo
inc
das
and
jmp
inc
shlb
fwait
aaa
es
dec
xchg
inc
pop
shll
test
xchg
cmp
xchg
and
xor
mov
mov
jmp
push
dec
inc
jne
sub
movsl
mov
xor
adc
inc
fs
es
dec
and
cmp
or
push
inc
in
jb
cmc
cwtl
pop
fptan
imul
mov
stos
pop
fstps
add
icebp
and
adc
sub
mov
popa
sbb
lahf
andl
mov
pop
rdseed
sub
enter
sub
mov
rcl
add
js
push
push
adc
mov
inc
pop
jb
cs
add
and
icebp
dec
xchg
lock
leave
mov
push
mov
mov
dec
cmp
jmp
fs
movsb
mov
push
call
adc
sub
movsb
mov
mov
aam
mov
pop
jnp
test
mov
cmc
add
mov
nop
aad
add
shlb
in
mov
inc
lds
leave
mov
js
add
add
mov
sub
or
mov
fsubrs
pop
ds
scas
inc
cs
jb
pop
jecxz
pop
jo
or
or
inc
nop
push
pop
mov
lahf
jl
cmp
pop
or
shll
adc
in
lea
push
dec
and
call
mov
cmpsl
lahf
sbb
xor
sahf
mov
lea
je
gs
nop
sbb
inc
mov
cmp
add
inc
dec
sbb
out
adc
xchg
je
cmp
loopne
mov
or
inc
in
scas
push
mov
xchg
outsb
mov
push
mov
pop
out
xchg
mov
fs
adc
test
int3
or
dec
clc
lock
xor
aad
add
loope
mov
sbb
shrl
es
call
shlb
in
subl
xchg
arpl
or
fdivrs
test
mov
inc
cmp
jb
fistl
sub
popa
sub
and
push
jmp
int3
mov
and
iret
nop
lret
insb
pop
mov
cltd
sahf
repz
int3
icebp
jmp
in
movb
ds
fldt
popa
cli
in
insl
xor
in
insl
bound
in
cmp
dec
mov
lret
ffree
mov
cmp
outsl
pop
ss
fldl
aam
pop
cmp
mov
mov
shl
mov
mov
ret
push
sahf
push
dec
push
stos
sbb
dec
aaa
popf
and
loope
inc
pop
jge
shrl
pop
popa
in
dec
and
outsl
out
rcrb
mov
outsl
sbb
scas
pop
sub
pushf
test
and
add
xchg
and
xlat
mov
pop
mov
cmp
push
daa
inc
cmpsb
mov
and
push
cmp
sahf
or
pop
test
cmp
int
call
out
push
scas
sbb
pop
cmp
popf
pop
data16
rorb
push
out
jnp
xchg
cmp
outsl
jbe
out
sbbb
xchg
dec
ret
push
mov
outsb
cmpsb
pusha
pop
cmpsb
sub
sahf
inc
pop
sbb
enter
mov
aad
repz
mov
repz
das
xchg
loope
sub
dec
mov
test
sahf
xor
dec
push
dec
push
sub
adc
jnp
cmp
call
out
lds
or
fcmovnu
pop
mov
jnp
cli
push
inc
push
jmp
jbe
popf
and
jmp
je
mov
pop
mov
jo
fucom
insb
mov
dec
fbld
xchg
jo
cmpsb
outsl
roll
mov
into
jo
test
add
or
sbb
push
mov
popa
or
daa
pop
aas
aad
xor
in
ljmp
test
pop
addr16
stos
jle
loope
push
bound
mov
lock
mov
jne
aam
gs
pop
lcall
arpl
out
inc
iret
call
add
lea
gs
jp
or
xchg
or
lods
push
push
rcrb
lcall
cli
shll
xor
adc
mov
fldcw
out
dec
dec
xchg
xchg
inc
loopne
lods
inc
mov
adc
mov
sti
pop
sub
xor
xor
pop
not
fldl
loopne,pn
mov
adc
ffreep
js
lds
pop
fwait
je
add
lahf
enter
repz
mov
pop
cmp
inc
loop
inc
clc
scas
or
das
xorb
sub
sti
rcll
jg
adc
cmpsl
mov
stos
xchg
sbb
subb
and
mov
sub
xor
cmp
cmp
bound
pop
testl
lret
cmpsl
hlt
mov
call
in
cmp
lret
dec
fmull
xor
adc
mov
and
adc
jge
mov
xchg
jo
xor
lds
lahf
negl
add
mov
fwait
fwait
xor
inc
and
popf
lahf
outsl
mov
fsubrl
imul
cld
inc
imul
ret
leave
adc
ret
es
imul
mov
dec
dec
cmp
es
cmp
inc
dec
int3
sub
push
popf
xor
into
xchg
add
sub
cmp
jne
cmp
fldl
mov
xor
in
cld
movsl
and
dec
sbb
inc
jmp
jmp
pop
xorb
loope
pop
push
mov
dec
bound
rcr
inc
out
adc
out
test
xchg
out
loope
or
in
cli
cmc
and
cmpsl
mov
or
in
ret
cmp
into
aad
and
inc
insl
inc
jae
fcmovne
jno
enter
cwtl
cmp
xchg
dec
stos
es
mov
test
mov
adc
aam
add
push
sbbl
aas
scas
or
ds
and
pop
into
mov
inc
cltd
sbb
adc
adc
mov
push
js
insb
fnclex
in
lock
fists
jecxz
inc
jg
mov
mov
sbb
lret
or
cmp
jp
js
mov
dec
sub
pop
jo
shr
test
ss
pop
mov
or
test
xchg
std
inc
gs
adc
xchg
push
or
movsb
idivl
rorl
aaa
test
test
decb
das
xchg
aaa
fcomps
sahf
loop
xchg
pusha
gs
mov
fistpll
je
xchg
leave
mov
adc
xrelease
cmpb
dec
jl
aad
adc
shll
jecxz
sbb
fs
insb
ficoms
cltd
mov
repnz
repnz
hlt
jb
dec
cmpb
adc
icebp
pop
fs
enter
jb
aam
pop
pop
jecxz
loop
ret
sbb
push
mov
xchg
or
and
imul
mov
test
aam
and
mov
xchg
pop
out
mov
dec
cmp
cltd
popf
jbe
cld
jb
mov
fwait
sub
scas
hlt
push
sahf
cld
adc
stos
imul
dec
stc
inc
pop
lea
ss
cmp
pop
ret
pop
sbb
popa
dec
loop
fcomps
fwait
jp
fsin
or
sbb
jle
mov
gs
dec
ja
jne
xor
cltd
adc
pmulhuw
pop
or
xchg
mov
xor
dec
xchg
je
dec
mov
scas
adc
pop
mov
js
icebp
and
jecxz
jl
mov
pop
andb
xor
dec
clc
jmp
xchg
pop
ret
scas
dec
mov
ftst
pop
mov
mov
xor
out
adc
imulb
outsb
adc
xchg
fs
and
cs
movb
je
adc
sub
inc
dec
loopne
jle
mov
jb
sub
fwait
dec
push
pop
or
or
andl
push
adc
pop
mov
and
test
add
mov
in
sub
adc
jne
pop
adc
inc
and
in
and
fadds
jmp
xor
adc
cmp
lods
movsl
mov
xchg
pop
sub
mulb
jmp
jp
lcall
subb
mov
push
pop
push
outsl
pushf
lock
lods
pop
and
cld
jnp
orl
idivl
clc
push
push
lret
adc
arpl
and
inc
and
mov
stos
stos
xchg
cmp
shr
stc
sub
dec
ljmp
inc
mov
subb
lahf
lock
unpcklps
in
xchg
dec
pop
adc
addr16
es
xchg
xor
aaa
and
mov
nop
cmp
adc
loopne
out
adc
jne
xchg
push
arpl
xchg
gs
jecxz
pop
sub
mov
pushf
cli
cmpsl
pop
mov
lret
add
test
cmp
xor
sub
sbb
push
into
lds
cmp
divb
push
pushl
inc
mov
dec
pop
cwtl
dec
imul
call
jg
xor
fld1
dec
movb
sub
dec
out
rolb
rorl
scas
jle
aam
sbb
ror
xchg
push
inc
dec
and
outsl
mov
mov
xchg
jecxz
sti
stos
pop
scas
adc
aaa
adc
loope
addr16
sar
rcr
fwait
aad
dec
jbe
stc
iret
hlt
push
stc
jns
iret
testl
outsb
cltd
pop
insl
inc
cmp
idivl
repz
idivb
lea
aaa
in
sbb
adc
cmpb
repnz
mov
aaa
outsb
xor
xor
mov
mov
cmc
gs
add
jmp
xor
icebp
je
ret
add
dec
or
fimuls
add
cmpsb
je
sbb
rcrb
push
mov
decl
nop
shr
in
xor
adc
pop
push
xchg
pop
inc
xchg
xor
or
aad
lock
out
dec
out
ud2
xor
aad
mov
int3
xor
subl
stos
hlt
mov
adc
adc
sti
mov
or
aaa
dec
pusha
imul
in
addr16
stos
leave
xor
ja
mov
lcall
push
fnstsw
push
cmpsl
fisttps
add
mov
and
or
rolb
ds
jnp
lret
pop
jb
fidivrs
add
xor
cmpb
push
sub
call
rcll
pusha
cmp
sub
fimull
pop
adc
cmpb
decl
gs
xchg
and
notl
das
xchg
push
xor
lea
ficoms
repz
pop
xchg
shr
mov
test
mov
pop
aaa
mov
xor
daa
dec
movb
inc
dec
test
cmp
in
push
lcall
sbb
leave
inc
je
mov
rcrb
dec
and
cmpsl
add
xchg
hlt
inc
mov
movl
repnz
jno
add
aad
or
out
jmp
aam
jns
imul
repnz
push
sbb
xor
sub
and
dec
ret
xchg
std
jne
addl
add
add
jp
mov
cmpsl
mov
or
dec
push
mov
cli
mov
jbe
pushf
mov
push
es
fwait
adcl
call
imull
stc
or
jmp
fistl
cmc
fcomp
testl
xor
xor
pop
push
fcompl
jb
mov
pop
jae
add
cli
divb
push
mov
xor
cmp
jl
and
test
lcall
sbb
sbb
ret
test
in
andl
loopne
pop
jmp
push
mov
jnp
rcrb
sub
cwtl
sub
push
xchg
in
xor
and
cmp
inc
je
sub
ja
cmp
jmp
fcomp
lcall
cmp
repz
ss
adc
jbe
push
test
mov
xor
mov
or
dec
insb
inc
cmp
mov
mov
add
ret
pop
lcall
jne
ret
insb
shl
xchg
mov
sub
mov
push
cmp
test
nop
or
jbe
aaa
ss
jne
xchg
xor
fadds
push
or
and
fdivl
push
out
test
out
in
cmpl
sub
sbb
dec
jns
mov
jl
jbe
cmp
repnz
testb
stc
xor
jns
jg
push
xor
dec
aaa
xchg
lea
mov
stc
sti
ds
mov
mov
clc
xchg
test
pop
adcl
mul
mov
data16
fdivrl
pop
stos
out
add
sub
out
stos
int3
je
negl
enter
inc
adc
lahf
jmp
lea
adc
notl
imul
test
xor
mov
and
mov
sub
sub
inc
inc
or
dec
aad
addr16
sbb
pop
inc
and
out
xchg
dec
and
aas
dec
mov
xor
push
sub
xchg
dec
pop
fwait
pop
add
xor
mov
mov
mov
ljmp
in
or
or
lret
lods
pop
out
or
loope
rcll
jns
ret
test
int3
dec
and
test
scas
movsb
add
inc
dec
lret
testb
pop
out
adc
mov
imul
insb
push
loope
mov
in
add
mov
mov
add
flds
jno
xchg
repnz
out
adc
adc
roll
in
std
inc
or
jb
fisubs
lock
adc
into
popl
add
mov
addr16
mov
xchg
push
dec
xchg
push
mov
icebp
arpl
fsubrl
cmp
push
sub
mov
adc
gs
or
lcall
mov
xor
push
leave
nop
pop
int3
xchg
pop
jg
xchg
ljmp
lcall
nop
jb
or
or
scas
xchg
mov
fildl
fs
xor
scas
push
pop
xchg
push
stc
fidivl
int
pop
xor
dec
jb
mov
pop
xchg
push
or
mov
xchg
push
sbb
aas
xchg
jge
adc
bnd
test
fnstenv
inc
or
mov
add
sarl
cld
stos
add
and
rclb
fstl
cmc
and
call
jmp
out
xor
mov
pop
std
repnz
jle
or
cli
test
xchg
rcll
aad
pop
cs
das
push
aam
pop
shl
out
mov
dec
adc
rorl
xchg
testb
fsubrs
and
clc
add
cltd
jl
fistps
jp
icebp
scas
xor
xchg
fists
jp
sub
add
lods
call
jbe
mov
rcr
inc
out
jle
push
out
ss
xchg
std
aaa
lock
loope
inc
mov
addb
adc
or
cwtl
ror
push
fmuls
push
adc
lods
insb
jae
add
adc
pop
ret
jbe
push
sbb
dec
test
and
inc
call
add
dec
pop
add
mov
dec
xchg
inc
icebp
fdivr
mov
in
popa
imul
imul
push
mov
aaa
push
sub
enter
scas
test
and
jp
sbb
enter
inc
sub
xchg
push
mov
sub
xor
cmp
iret
sub
jae
and
or
jae
lock
lahf
jb
and
iret
das
mov
ja
cmp
mov
pop
ljmp
adc
aas
daa
cmpb
pop
dec
pushf
inc
in
jnp
rcll
dec
or
jnp
lods
or
ja
add
dec
mov
sbbl
frstor
cmpl
inc
inc
ja
push
loopne
and
aaa
jmp
imul
push
test
sub
aad
mov
jno
mov
lock
aaa
sbb
stos
adc
or
push
sbb
insb
aaa
pop
dec
and
cmp
push
inc
in
clc
loop
and
mov
xchg
inc
pop
pop
adc
shlb
or
jnp
rcrl
or
in
xor
sahf
cmc
or
dec
testb
les
and
into
cmpsl
adc
jle
es
popf
sub
jmp
ss
sub
cmpl
cmpl
sub
rolb
fucomp
outsb
xchg
icebp
cmpl
andb
mov
sbb
jl
test
mov
or
ja
movsl
cmp
insb
arpl
test
cmp
dec
scas
out
aaa
in
jle
sub
xor
lods
fwait
daa
popa
jl
xlat
das
jp
cwtl
js
inc
adc
call
mov
dec
inc
sub
dec
pop
outsb
mov
out
jne
lods
add
dec
jl
or
stos
jae
lcall
pushf
or
jecxz
pop
xchg
mov
xchg
ret
lahf
pop
mov
inc
addr16
scas
dec
out
popf
lods
testl
sub
fidivrl
insb
and
mov
mov
push
jno
popa
lock
sbb
sbb
repz
nop
out
adc
and
inc
push
sbbl
out
push
test
adc
pop
out
fcom
fsubrp
xlat
mov
out
adc
xor
push
in
add
data16
xchg
aas
add
lcall
mov
jge
dec
adc
fdivrp
pushf
mov
repz
cmp
sub
imul
lods
loop
rcrl
mov
pop
jl
pusha
out
movsl
enter
mov
ret
fs
in
ss
in
insl
test
stc
popa
inc
lods
dec
add
xchg
adc
inc
scas
mov
mov
dec
add
loopne
push
loope
inc
sub
sbb
inc
shr
mov
sub
ret
mov
xlat
insb
jle
insb
cld
mov
and
aam
pushf
lds
movsl
rol
js
dec
fstpl
pop
int
roll
or
cld
jmp
out
jmp
and
cmp
pminub
iret
lods
adc
xor
push
mov
pop
cltd
push
jmp
jns
adc
push
sub
sahf
les
cld
in
iret
push
inc
pop
pop
dec
sbb
in
cs
pop
popa
sbb
pop
fdivl
xor
push
movhps
inc
jl
push
into
pusha
and
fisttpll
test
bound
sbbl
jns
mov
jno
pop
mov
push
sbb
sarw
lret
aas
push
mov
jbe
icebp
mov
cmovno
lcall
cmp
cmp
push
in
imul
mov
testl
addl
repz
jecxz
and
mov
in
scas
push
xor
fstpl
cltd
mov
popa
dec
jmp
xor
add
push
jle
cmp
fildll
ljmp
cmc
dec
sub
pop
push
pop
and
les
cmp
imul
leave
inc
and
mov
add
std
icebp
lds
incb
add
push
shl
sbb
cld
push
lcall
inc
cmpsb
xorps
mov
data16
mov
mov
int
push
xchg
push
push
les
mov
inc
gs
xor
repz
imul
fisttps
sub
or
push
adc
push
bound
les
sbb
js
test
stc
imul
lods
mov
push
cwtl
loopne
sbb
sti
pop
mov
cmpsb
or
pop
mov
add
cmp
xor
xchg
push
lods
iret
mov
add
mov
xchg
jb
xor
mov
push
cmp
in
popa
sub
xchg
idivb
sub
fldenv
gs
ror
fs
pop
cmp
sbb
add
out
and
fists
into
add
movsb
leave
data16
loopne
push
gs
into
or
sub
stc
sub
mov
lret
lock
and
mov
inc
bound
sub
jl
jecxz
js
hlt
mov
xchg
psrld
ds
insl
adc
jg
cli
sub
pop
lea
and
mov
and
insl
cmpsb
adc
rolb
xchg
and
arpl
fdivs
cs
jb
fwait
push
mov
ror
mov
dec
test
arpl
adc
add
adc
mov
movsb
lcall
jge
into
push
and
sahf
mov
jl
jb
js
push
arpl
or
sub
dec
sarb
or
lods
aas
sbb
jno
sub
sub
adc
adc
sbb
test
xchg
or
andb
xchg
push
shll
and
popa
cltd
sub
inc
in
mov
mov
cmp
cmp
arpl
mov
mov
mov
jmp
mov
mov
mov
imull
lods
mov
aaa
lock
jg
mov
icebp
in
sub
ret
push
loope
test
inc
loopne
push
pop
data16
stos
xor
mov
clc
cli
xor
jg
mov
ljmp
xor
pop
je
or
add
and
js
aad
jl
mov
shlb
les
and
cmp
cmpb
rolb
lds
dec
cmp
cwtl
push
add
pop
insb
or
paddw
or
pusha
arpl
add
ds
mov
shrb
cmp
adc
mov
in
or
push
aam
add
push
adc
into
sbb
cmp
or
sbb
ret
push
flds
pop
shll
mov
cmpb
out
jmp
rclb
out
cmpsl
cmp
sahf
in
cmp
mov
data16
dec
xlat
adc
sbb
pushl
stc
lock
negl
leave
cmp
and
mov
and
shrb
inc
pop
add
cli
sbb
fwait
loope
fsts
push
inc
push
fistpl
sbb
jle
mov
cmp
jmp
and
dec
xchg
ret
lock
inc
es
hlt
jae
xor
add
pop
mov
sbb
mov
mov
jmp
mov
and
mov
ret
rolb
jne
les
in
mov
add
add
add
mov
lret
es
dec
and
dec
aad
es
sarb
mov
scas
lea
pop
into
sub
mov
cs
fs
pop
jge
in
insl
dec
xchg
mov
sbb
loopne
dec
xchg
xchg
pop
in
xchg
xor
adc
mov
testl
adc
cmpsl
into
mov
stc
sti
dec
inc
mov
push
stc
clc
pop
cmc
pop
jnp
jl
mov
sbb
test
sbbb
faddl
lcall
hlt
mov
test
bound
mov
add
cmp
cli
or
jno,pn
lods
mov
adc
push
leave
jl
sbb
lds
popa
jns
sar
repnz
out
cmp
loop
cmp
pop
xchg
cmp
add
popa
push
xchg
je
mov
jl
sub
cmp
cmp
and
fmull
sahf
add
neg
xchg
dec
inc
shrl
sbb
mov
int
push
lds
sbb
insb
lcall
ss
xor
and
cmpsl
mov
mov
cld
mov
mov
jae
mov
lahf
jge
cmpsl
mov
filds
sti
aam
or
test
pop
lock
cmp
inc
xchg
pop
cli
dec
arpl
dec
lds
ss
xor
mov
jl
pop
cmp
inc
xor
and
or
sub
sahf
jne
enter
loope
xor
icebp
xchg
jle
ficompl
fsubrs
into
dec
sti
xchg
ljmp
push
sub
cmp
pop
cmc
mov
test
es
inc
sarb
jo
call
into
xor
inc
nop
int3
xor
sbb
cwtl
cmp
lea
iret
jae
sub
cmpsb
jp
dec
and
sub
les
cmp
imul
jmp
das
sbb
xchg
aad
pop
cmp
mov
and
shlb
cmp
xor
mov
jp
jae
or
mov
xor
add
into
sti
xor
nop
addr16
subl
and
lock
fcomps
cwtl
inc
xor
inc
dec
cmp
adc
arpl
pop
jb
mov
mov
arpl
jmp
push
mov
fdivrl
cmpsb
das
push
adc
out
add
add
sbb
xor
mov
mov
out
xchg
push
popf
fstl
push
in
rcrl
mov
cltd
test
mov
int
sub
shl
in
and
or
ss
ds
mov
lea
das
mov
cwtl
pusha
sarl
adc
cmp
sub
ljmp
movsl
ror
fadds
sbb
ljmp
pop
rcl
ds
stos
test
ss
and
std
rorb
mov
sub
clc
sub
bound
jge
pop
test
add
loope
in
scas
pop
add
pop
addr16
xchg
push
bound
adc
aaa
lret
sub
dec
aam
add
lahf
loopne
pop
pop
sahf
mov
pop
sahf
or
fcmovnu
xor
sub
mov
jecxz
cli
int3
jns
sbb
lret
aad
inc
xor
pop
sbb
add
pop
loope
adcb
addr16
fistps
test
leave
call
arpl
mov
pusha
popf
lds
imul
sbb
imul
out
in
xchg
push
xor
rolb
adcl
lods
mov
out
xor
mov
flds
mov
fs
sub
vhsubpd
xchg
not
fs
dec
rcl
cmp
xor
aad
addl
push
dec
popa
repnz
icebp
jo
and
sub
mov
push
lahf
or
or
mov
mov
cmp
jmp
mov
mov
pop
lret
push
add
mov
imul
xchg
out
xor
sbb
fistpll
push
fcompl
ja
add
push
sbb
lods
dec
or
adc
and
and
dec
sbb
std
lea
xlat
jmp
cmp
inc
cmp
iret
inc
leave
cmp
in
mov
enter
repnz
sahf
test
xor
cmpsl
and
mov
js
jns
sbb
xchg
loopne
or
lcall
addr16
sbb
inc
jp
fstpl
pop
ficoms
push
dec
mov
add
xchg
out
testb
push
dec
in
adc
aaa
mov
jecxz
es
push
addl
insl
lret
jmp
popa
jne
cltd
add
mov
in
dec
stos
mov
clc
outsl
jecxz
std
push
cmpsl
or
add
jle
scas
aam
jmp
xor
repnz
xchg
jl
dec
xchg
cmc
pop
push
shl
dec
jmp
out
jmp
xor
sti
das
nop
lds
imul
dec
mov
xor
dec
mov
shl
out
mov
mov
fsubs
xor
cld
fs
xchg
test
push
outsl
add
jne
cmp
sub
sti
cmp
andb
jb
and
mov
lahf
sbb
repnz
xlat
xor
in
push
popf
int3
mov
push
leave
and
aas
or
in
mov
cmpsl
mov
outsb
pop
fimuls
sbb
mov
in
jne
mov
dec
or
addb
mov
incl
inc
cmp
test
jle
bnd
dec
sarb
mov
jl
dec
fldenv
movsl
sbb
cltd
sbb
add
sarl
outsl
mov
push
int3
cmpsb
mov
mov
sub
ds
xlat
xchg
test
shlb
pop
xor
add
movsb
sbb
xchg
xor
stc
pop
lcall
mov
mov
pop
repz
mov
repz
rorl
jmp
mov
ss
mov
jl
lahf
add
mov
mov
dec
inc
sbb
dec
mov
addl
push
adc
xor
pop
stos
xchg
mov
sub
add
mov
mov
add
pop
mov
loop
lods
pop
shrl
jnp
and
fildll
rolb
mov
inc
dec
sahf
adc
cmp
ret
in
inc
adc
loope
mov
lea
mov
inc
arpl
or
push
mov
lea
out
imul
and
arpl
dec
ja
stos
arpl
popf
mov
insb
sbb
xchg
sub
mov
ret
pop
mov
rcll
out
outsb
icebp
xor
xor
je
push
bound
xchg
jo
rclb
or
lock
jmp
js
fdivl
pusha
test
stos
repz
lods
cmpsb
fwait
pusha
fcomp
scas
iret
pop
and
sub
mov
mov
jnp,pn
cmc
int
hlt
cmp
dec
sbb
jns
lods
jecxz
adc
sub
je
fwait
mov
imul
mov
cld
and
sub
sbb
loop,pn
adc
sub
imul
sbb
out
pop
xor
test
fsubrl
mov
pop
lds
sub
inc
lret
mov
mov
movsb
jae
cwtl
jbe
ljmp
fisttpll
int3
add
les
test
xchg
inc
mov
dec
jns
mov
and
mov
pop
rol
xchg
xor
imul
inc
push
repz
jecxz
xchg
subl
int
loop
jnp
test
pop
test
out
pop
js
lods
push
or
cmpsl
out
dec
pop
stos
or
xchg
pop
aaa
in
cmp
and
out
add
mov
pop
mov
fnstcw
jo
out
xor
push
xor
xchg
icebp
loope
test
xchg
loope
push
add
mov
cmp
mov
mov
addr16
jnp
pop
mov
dec
sub
jns
cmp
inc
movsb
fucomp
popa
adc
push
je
les
adc
push
push
mov
pop
shr
shrb
sbb
enter
aaa
clc
pop
cmp
jae
lods
jge
loope
out
fs
movsb
stos
call
pop
daa
xor
cli
cli
cmp
icebp
jbe
pop
push
cmpsb
out
mov
xor
lret
adc
ja
jne
adc
pop
repnz
push
push
orb
mov
ds
xchg
fstpl
push
adc
push
adc
pop
fmuls
int3
sbb
adcl
stos
andb
stos
adcb
inc
mov
leave
test
icebp
push
cld
sub
push
inc
je
dec
mov
push
push
dec
push
xchg
adc
adc
data16
cmp
xor
lret
adc
aam
iret
dec
lea
adc
push
imul
daa
mov
inc
loope
xorl
fucomi
jns
dec
or
mov
clc
stc
mul
rcl
dec
out
and
aaa
jnp
xor
test
pop
test
fiaddl
enter
xchg
cmp
cmp
cmpsl
inc
movsl
jae
fists
mov
jecxz
fwait
jle
sti
mov
adc
enter
lret
cmp
push
dec
bound
pop
push
scas
mov
mov
mov
push
call
shrl
cmp
sub
call
pop
stc
and
or
push
pop
push
test
dec
adc
fwait
and
por
popa
mov
movl
fisttpll
fcomps
repnz
out
lock
cmp
outsl
rclb
sahf
fidivrs
xchg
out
fwait
or
ja
test
add
dec
cwtl
shll
arpl
cs
mov
lea
inc
dec
cmp
xlat
or
xor
in
scas
and
push
inc
mov
adc
push
mov
mov
sub
sub
clc
icebp
cltd
pop
ja
mov
es
loope
xchg
dec
or
mov
mov
xorb
adc
fcoms
les
in
xchg
xchg
mov
sub
mov
mov
ret
ret
xchg
nop
out
out
mov
movsl
or
rcll
xchg
push
test
cmp
jp
sbb
adc
subl
pop
xchg
add
pop
mov
fs
rcll
pop
jnp
or
pop
xor
pop
insl
pop
mov
data16
gs
repnz
scas
movsb
scas
or
push
and
lea
out
in
clc
rcrb
fs
leave
shlb
pop
cs
cli
scas
test
enter
sbb
insb
out
imulb
dec
fnstenv
ljmp
das
xchg
dec
arpl
jle
test
js
ret
sbbl
loop
adc
jae
bound
lock
push
fcmovb
popa
outsl
hlt
sub
aas
ret
repz
dec
mov
and
test
lret
lock
sub
lods
cmc
mov
inc
mov
mov
imulb
dec
or
je
cmp
pop
in
in
mov
xchg
imull
daa
mov
pop
sahf
outsb
add
cmpl
dec
popl
mov
jb
pop
cli
rcr
in
inc
sbb
mov
les
inc
std
lea
xor
adc
inc
ss
cmpsl
arpl
test
jo
aaa
inc
sub
repz
ss
aas
aaa
ja
mov
xor
mov
push
jecxz
dec
ljmp
lret
addr16
loopne
mov
adc
loop
test
repz
negl
sbb
in
jb
shll
adc
sub
pop
inc
int3
xor
adc
repnz
outsl
adc
aaa
adc
mov
push
or
lcall
test
xor
mov
push
imul
jecxz
jne
out
scas
sbb
pop
xorl
pop
pop
adc
inc
inc
ret
ja
mov
repz
call
ljmp
in
sarl
popa
int3
faddl
lcall
adc
sarb
mov
push
add
cmp
push
test
mov
aam
inc
ret
jmp
dec
xchg
add
dec
cwtl
mov
std
inc
adc
ret
cmp
scas
cli
mov
inc
in
call
scas
and
sbb
or
mov
jle
loopne
fldl
aaa
shr
sub
jne
bound
jge
xchg
xchg
dec
lock
adc
test
inc
mov
imul
push
push
ficoms
adc
mov
popf
cli
pop
xchg
outsl
pop
cli
mov
inc
xchg
xchg
insl
push
cmpsb
les
and
daa
rolb
nop
jle
jg
iret
stos
dec
cmp
fcmovnbe
aas
dec
xchg
clc
add
cwtl
sbbl
and
xor
jne
dec
push
in
je
mov
dec
jmp
mov
mov
mov
or
mov
pop
mov
push
jg
sbb
ljmp
or
loope
adc
xchg
push
adc
hlt
lret
xlat
adcb
jl
mulps
clc
xor
ljmp
push
cs
mov
sub
nop
sub
pop
inc
les
lret
jno
out
cld
push
ret
call
cmp
imul
imul
adc
je
in
pop
adcb
stos
imul
fxch
mov
cli
mov
pop
inc
adc
adc
cmp
mov
push
out
sbb
inc
rcll
jmp
push
sub
mov
sub
outsl
and
push
sahf
adc
mov
icebp
data16
cmp
mov
mov
insl
in
or
das
push
out
adc
rcl
shl
jnp
xor
mov
in
push
ljmp
jbe
orb
push
in
cwtl
cmp
or
fbstp
and
fdivrl
enter
pop
cmp
int3
inc
ret
push
push
mov
jp
test
mov
out
add
cmp
ror
mov
mov
sub
arpl
sahf
rcr
jo
pop
sub
pop
mov
addr16
pop
js
push
sbb
loope
sub
fadds
repz
sub
test
jns
inc
scas
adc
xchg
add
icebp
add
int
pusha
mov
mov
or
cmp
in
cmp
cmpsb
xor
inc
jl
mov
or
pop
jle
insl
pop
loope
lahf
fs
sub
adc
ljmp
sbb
mov
shlb
sti
dec
push
or
lock
popf
je
imul
hlt
into
mov
stos
aad
shrl
insl
mov
push
insl
push
xchg
daa
stos
jmp
xor
notl
jnp
jns
pop
xchg
popl
xchg
in
shlb
jae
icebp
cmp
outsb
lock
aaa
mov
sub
jle
xchg
insl
idiv
ror
iret
lea
test
sbb
lea
adc
repz
xlat
movq
pop
fisttpll
mov
xchg
push
test
push
dec
sarb
push
movsb
jne
mov
cmp
fbld
adc
aad
cmp
or
aad
les
test
daa
pop
mov
inc
mov
call
arpl
xchg
movsl
xor
xor
add
cmp
sbb
xor
fstp
mov
lret
and
jge
mov
fstl
jmp
scas
stos
int
jp
and
and
jne
or
add
adc
xchg
add
mov
push
xchg
or
pop
adc
pushw
dec
jecxz
ljmp
fidivl
movsl
jns
aad
cltd
inc
push
push
stos
ficompl
sbb
mov
leave
mov
inc
fwait
or
aaa
pushf
inc
add
addr16
pop
or
roll
mov
inc
ret
cmp
fnstsw
and
add
dec
sub
and
mov
cmp
pop
iret
movmskps
xlat
push
or
jl
stc
popf
or
mov
rol
dec
add
sbb
sbb
mov
cmp
enter
xor
movsb
push
sub
rolb
mov
sbb
or
sysexit
loopne
lcall
fisubrs
push
mov
pop
test
jecxz
xor
push
push
lods
pushf
lods
decl
and
imul
mov
mov
mov
dec
sbbb
dec
jbe
sub
addr16
mov
inc
mov
js
inc
adc
imul
ror
jns
int
inc
sbb
inc
mov
scas
call
mov
scas
scas
lods
cmp
lahf
imul
dec
test
andb
mov
jle
jno
push
cmpsl
ljmp
movsl
scas
pop
add
nop
leave
lret
sbb
jp
or
and
jnp
xlat
ret
es
xor
out
shll
pop
xor
and
xchg
and
rorl
sbb
std
jge
pop
or
xchg
aaa
arpl
cmp
mov
jno
imul
sub
push
dec
xor
call
sub
scas
xor
add
sbb
adc
ret
push
xchg
stc
or
out
scas
xlat
cmp
jge
cmp
sub
push
lds
roll
cli
xor
push
lock
cld
shr
jno
mov
xchg
mov
popf
inc
push
xor
dec
ret
and
dec
xor
xchg
loopne
sbb
mov
jo
rorl
not
les
cli
inc
add
rcll
push
mov
roll
cltd
xor
adc
mov
xchg
fmulp
mov
cmp
jns
push
stc
sub
insb
mov
in
xchg
daa
or
inc
xlat
pop
mov
jns
sbb
mov
je
xchg
andb
dec
mov
daa
jl
mov
lods
fldl
and
cmpsb
add
test
ret
aad
inc
dec
stos
mov
and
das
add
mov
enter
pop
addr16
mov
mov
push
push
add
push
inc
aad
nop
cmc
adc
mov
mov
cmp
enter
clc
jle
je
mov
cltd
add
into
push
pop
sahf
pop
scas
fcomip
rolb
enter
vpunpcklbw
add
xchg
fbstp
insb
out
pop
dec
leave
imul
cmp
enter
mov
inc
inc
inc
sarb
cmp
in
bound
cmp
pop
mov
mov
in
xchg
add
mov
sbb
mov
add
mov
mov
mov
jbe
addr16
hlt
adc
hlt
mov
mov
adc
mov
rol
or
movsb
jp
pop
sbb
and
dec
and
sub
mov
movsl
out
xchg
dec
dec
mov
pop
mov
xor
sahf
imull
hlt
and
imul
out
popa
in
adc
xchg
mov
push
lds
out
enter
jbe
sbb
xor
xchg
rcrb
lret
or
cmp
je
int
pop
jnp
ror
xor
imul
mov
dec
mov
call
je
and
iret
jle
sbb
push
fwait
insl
xor
sub
mov
cmp
outsb
add
ja
pop
push
aad
jns
mov
cmpsb
inc
pop
push
mov
or
adc
loopne
push
mov
fcomp
js
cmpsb
add
cmpsb
outsl
inc
cwtl
js
mov
pop
and
cmpsb
add
cli
test
push
mov
fnstenv
push
adcb
ljmp
sub
mov
hlt
xchg
sti
or
xor
jae
add
nop
pop
jno
fstl
dec
push
test
out
sbb
jg
aas
popa
xchg
xorb
dec
jmp
and
insb
clc
in
test
outsb
fs
xchg
xlat
ret
js
pop
sbb
pop
push
mov
xor
outsl
or
mov
aam
inc
out
adcb
fnstcw
xchg
sub
out
ljmp
mov
cmp
sub
lock
pop
mov
or
sub
and
repnz
and
dec
mul
out
sbb
int3
test
das
cmpsb
seta
push
cmp
adc
sbb
sbb
sti
mov
data16
sbb
jmp
mov
call
scas
inc
inc
sbb
pop
imul
dec
push
jno
xchg
jno
lea
es
sbb
and
cmp
sub
and
cmp
mov
outsb
dec
and
hlt
pop
jp
mov
mov
or
and
cmc
push
xchg
cltd
aad
cmpb
mov
xor
push
add
jle
lea
mov
insb
int
nop
push
aas
aas
jae
popl
pop
lods
cmpsb
mov
inc
in
xchg
inc
daa
and
dec
rolb
lcall
stc
imul
push
inc
daa
cmpxchg
es
dec
jae
icebp
push
iret
xchg
out
jl
xchg
sbb
rorb
stos
test
xchg
mov
mov
rcl
out
push
call
sbb
push
cmp
ss
or
rcll
and
cld
ret
aad
dec
icebp
aam
or
or
add
push
mov
int3
sbb
and
adc
mov
lret
cmp
mov
and
and
mov
push
push
cmp
xchg
push
and
sub
mov
insb
mov
or
pop
cmp
test
jno
add
xchg
push
in
push
jae
xchg
xchg
aad
sub
stc
iret
dec
pop
add
testb
jne
out
lcall
mov
or
push
sbb
dec
cmp
inc
loop
mov
movsl
cmp
ror
jb
or
mov
mov
stos
or
fdivp
call
mov
sbb
mov
and
pop
mov
xchg
aam
addr16
mov
in
cmp
and
hlt
lods
add
movsl
xchg
imul
cltd
sbb
push
cmpsb
mov
std
fwait
dec
push
or
cmp
aas
cli
xchg
scas
fcompl
in
cmp
mov
xor
fadd
cmp
ss
lods
add
dec
xchg
inc
fsubrl
or
cmp
pop
and
add
push
xchg
imull
lcall
fcoml
loop
jge
mov
jns
fxch
fdivrp
shll
jmp
jle
xlat
andl
xor
mov
adc
cmp
hlt
fsts
cmp
mov
push
shll
inc
outsl
leave
in
sbb
push
add
je
inc
mov
inc
pop
mov
insb
fwait
shl
pusha
mov
bound
fsts
lock
push
mov
leave
ret
xlat
dec
bound
imul
insl
jno
data16
sub
sbbb
adc
cld
add
adc
cmp
pop
shl
push
jl
adc
and
inc
loopne
inc
jecxz
scas
dec
rolb
cmp
aam
addr16
xchg
loop
jp
inc
or
dec
pop
xchg
cmp
mov
pop
mov
mov
sar
push
lock
gs
xor
iret
dec
mov
jecxz
ss
arpl
mov
inc
scas
movb
in
xchg
xorb
or
lcall
jns
and
pop
inc
mov
mov
mov
les
or
mov
sub
and
xor
add
scas
pop
bound
shr
sub
testb
aas
mov
mov
ret
mov
ja
sub
pop
outsb
or
in
rcl
jo
loop
psllw
fadd
mov
xchg
sbb
pop
rorl
addr16
gs
cmc
inc
lahf
daa
in
cli
lret
int3
jmp
clc
sub
cmp
rcr
and
cwtl
sub
inc
loopne
jg
xor
inc
andl
scas
xorb
shll
out
xor
insb
push
imul
sub
cmp
pop
mov
or
aam
cmp
test
repz
in
lock
rcll
mov
and
fsts
xor
ljmp
fwait
cmp
imul
pop
ja
repz
test
adc
mov
push
mov
das
out
leave
loop
ror
push
push
aaa
loope
ret
cmp
out
jae
shll
mov
test
xchg
data16
push
ficoms
xor
iret
dec
and
xchg
mov
sti
sbb
push
sbb
or
enter
push
shrb
adc
mov
aas
outsl
pushf
ret
stc
outsl
aaa
int
mov
add
aad
je
jnp
js
fwait
add
xchg
xlat
sbb
mov
jmp
test
xor
mov
out
push
add
push
loope
mov
gs
ds
negb
mov
adc
xchg
xor
mov
jns
in
push
call
sahf
xchg
int
fistl
jne
xchg
cld
fs
mov
sbb
pop
sub
jb
sub
pusha
xor
dec
cltd
mov
jae
cld
sbb
ds
cmp
cltd
sub
dec
rorl
mov
and
jle
mov
and
loop
mov
jnp
fisubl
daa
rorl
lcall
adc
sub
nop
stos
les
cmc
fld
movb
out
mov
les
jne
out
push
xor
je
in
loop
fistl
mov
aad
and
popf
or
stos
pop
aaa
push
mov
arpl
das
and
into
cld
out
pop
and
xor
scas
mov
test
inc
mov
out
enter
pop
add
ret
fwait
xor
jp
dec
push
jbe
ret
gs
push
and
dec
push
and
iret
mov
inc
sahf
fnstsw
mov
lcall
mov
cmp
jmp
cmpsb
mov
adc
xchg
jb
orb
in
enter
out
jecxz
xchg
lret
push
fdivp
inc
idivl
dec
sbb
mov
push
jle
daa
shl
push
push
xor
dec
aas
insl
test
jmp
or
and
xor
pop
pop
add
je
movsb
jns
adc
int3
push
bound
dec
xlat
dec
mov
push
jbe
arpl
xchg
repnz
mov
jne
enter
push
test
mov
add
sub
pop
clc
imulb
pop
jl
inc
clc
cmc
add
loopne
pop
outsb
ret
fldl2e
ss
mov
sbb
jbe
aas
fimuls
outsb
mov
jbe
sbb
jns
adc
out
mov
and
mov
repnz
adc
or
cltd
mov
pop
sub
xchg
int
stos
push
addr16
hlt
cmpsb
lea
mov
loope
jle
lahf
xlat
out
lods
cltd
push
xchg
enter
fprem
clc
dec
cmp
shlb
neg
fdivrl
lods
jg
leave
jmp
adc
add
negb
pop
sbbb
int3
sbb
inc
mov
and
xchg
pusha
sbb
jne
subl
cmpsb
sti
cli
mov
mov
xchg
pusha
hlt
pop
jnp
push
nop
outsl
inc
stos
and
and
adc
jecxz
js
pop
pop
and
aas
sbb
xorl
xor
je
mov
popa
stos
lea
scas
stos
dec
or
lea
xchg
je
push
jmp
call
and
adc
ljmp
push
pusha
and
enter
mov
inc
fcoml
inc
les
js
xchg
fldenv
mov
jbe
ret
shl
sbb
shlb
push
leave
sub
clc
and
dec
fs
xorb
fnstenv
movsl
sbb
jg
jg
dec
dec
mov
or
gs
ja
mov
ficoml
jmp
ss
ljmp
test
fcomp
mov
add
dec
ja
adc
or
adc
outsb
fs
bound
test
mov
test
test
jae
xchg
fiadds
scas
xor
push
ja
push
fldcw
out
jle
call
stc
mov
ja
subl
add
int
push
insb
adc
in
mov
mov
divl
shrb
pop
or
pop
mov
jge
mov
mov
jae
popa
jb
gs
ret
icebp
inc
cmpsl
aam
cld
jbe
or
xchg
lea
xchg
add
popa
mov
add
addr16
push
add
ljmp
imul
jl
jbe
pop
int3
enter
fsubl
loope
inc
or
pop
mov
fiadds
cs
and
cmp
add
loope
xchg
cltd
mov
push
push
xchg
xor
aam
movsl
aaa
in
enter
jge
sub
xchg
addr16
pop
or
inc
adc
fxch
movsb
xchg
andb
push
fwait
insb
fldcw
and
movsl
loop
les
dec
adc
call
and
testb
aas
sar
cmp
mov
jae
and
inc
pop
jmp
shl
cmp
mov
add
xlat
fs
loop
and
lods
xor
daa
in
pop
rcrl
scas
xchg
sbb
fisubl
xlat
sbb
xchg
imul
jb
dec
or
add
outsl
xchg
sub
rol
lcall
fs
cmpl
lahf
cli
subl
and
arpl
add
shll
pop
imulb
xchg
out
int3
cmp
xlat
mov
movsb
cmp
mov
bound
mov
sbb
mov
addr16
popl
fwait
dec
out
imul
add
fsubrl
jno
sbb
push
push
mov
inc
int
mov
orl
std
lock
out
lcall
pop
repz
aaa
in
inc
xor
gs
cmpsb
add
or
jmp
lods
sub
or
stos
ret
or
push
enter
aas
lahf
cmc
jnp
and
dec
mov
loop
add
and
fidivrl
inc
inc
pop
add
adc
inc
inc
xor
test
inc
add
sbb
add
imul
hlt
or
repnz
mov
test
lock
bound
movsl
lahf
cmp
inc
ljmp
cmp
subb
cmp
jecxz
in
movsb
dec
sbb
cmp
rcrl
inc
sub
xchg
xchg
dec
add
icebp
xchg
inc
aaa
or
shrl
in
shlb
mov
pushf
cli
fcoml
push
xor
pop
or
or
xor
sbb
in
out
popf
xchg
push
leave
push
and
mov
mov
dec
jmp
push
loope
out
test
or
out
inc
mov
and
sbb
lret
cli
dec
cmp
movsb
xor
xor
jne
shrd
pop
popa
sbb
stos
mov
xchg
sub
sub
roll
mov
xor
test
imul
jbe
lret
xchg
es
or
lods
dec
sbb
daa
xchg
addl
out
popf
es
int3
bound
lahf
daa
mov
and
out
cmp
jae
cld
mov
cli
mov
ficoml
jnp
stos
mov
adc
mov
jmp
xor
pop
mov
add
mov
push
jmp
mov
mov
cmp
repz
lds
repz
sub
mov
xchg
pop
dec
dec
pop
jp
les
mov
jnp
mov
lods
pop
pop
and
mov
pop
pop
xchg
sbb
mov
rclb
xor
imul
shrb
sbb
inc
in
cmpsl
ds
mov
popa
jb
xchg
jns
adc
lods
jmp
sub
xchg
aam
pop
mov
inc
outsl
lret
mov
push
popa
sbb
lock
fdivs
mov
mov
lock
imul
ljmp
inc
and
and
ret
xor
int3
xor
sub
popf
dec
lcall
std
cmp
pop
mov
adc
lahf
in
mov
adc
ffreep
ljmp
push
inc
popa
fs
es
sbb
jge
mov
wbinvd
cmpsl
add
cmp
cmc
in
jp
lret
loopne
pop
inc
or
dec
loop
test
dec
inc
pop
add
lcall
js
jns
scas
loope
push
ret
sbb
mov
icebp
pop
stos
xchg
sarl
stc
cmp
pop
adc
loopne
pusha
jl
adc
push
push
out
mov
idivb
rcrb
mov
jnp
xchg
cmp
mov
mov
aad
mov
popa
lds
add
pop
jle
pop
ss
cmp
pushf
roll
in
or
and
xchg
out
and
sbb
jo
popa
mov
loopne
sbb
fimull
dec
xor
sbb
pop
flds
insb
clc
mov
popw
mov
enter
cmpsb
adc
fsubrs
pop
lds
lret
dec
mov
pop
jo
xor
ss
repnz
aam
scas
hlt
cli
fidivrs
sub
dec
and
insb
mov
push
mov
scas
cli
ja
pop
pop
loope
int3
pop
shl
sub
or
push
xchg
fiaddl
addr16
or
orb
and
sbb
pop
insb
fistl
cmp
sub
and
inc
push
bound
and
xor
push
lret
ljmp
lret
xor
fnstenv
xchg
lock
imul
cmpsl
ss
xchg
cmp
fadd
mov
movsl
out
lock
or
stc
sbb
scas
mov
ljmp
int3
pop
jns
jbe
dec
jl
xor
idivb
mov
movsb
js
inc
in
cmpsl
cmp
pop
outsb
fnstenv
andb
xchg
lret
push
ret
scas
andl
dec
aas
xor
movsb
xor
loop
jno
testl
fistpll
push
jno
loopne
nop
movsl
stos
cmc
xlat
les
leave
test
fs
es
into
shr
mov
sbb
cmovae
jg
jp
adc
inc
cltd
test
insb
inc
fcom
pop
ffreep
pop
pminsw
and
es
mov
and
xor
sbb
adcb
imulb
ss
mov
movsb
or
adc
inc
and
repnz
mov
add
fsub
clc
addr16
inc
leave
pop
aam
sub
or
movsl
pop
stos
push
imul
cmp
pop
pop
stc
sbb
enter
test
cmc
cmp
fstpt
sbb
imul
out
xchg
mov
and
pop
push
lock
jge
movsl
fadds
outsb
scas
pop
add
jae
inc
nop
sub
jge
push
xor
add
pusha
fdivrs
ljmp
outsl
lcall
xchg
mov
xchg
adc
das
addr16
fsubrs
jbe
xchg
mov
ret
rclb
pop
repz
cltd
jbe
stc
shll
mov
mov
adc
mov
imul
sarl
mov
stc
xchg
popa
in
dec
lcall
cmpsl
mov
or
stc
xlat
jg
dec
cmpsl
sti
imul
add
hlt
or
cmp
out
xor
sub
jne
push
pop
inc
dec
cs
push
or
fdivrp
int
cmc
add
cmpsl
incl
sub
popa
xor
push
push
insl
jmp
xchg
mov
outsl
mov
and
sbb
jo
xorb
push
push
and
lods
add
outsl
mov
outsl
jb
flds
aam
popa
ror
repnz
rol
mov
shll
nop
scas
cmp
mov
or
aaa
js
add
push
clc
not
lahf
movsb
jp
pop
test
bnd
add
movsl
or
dec
pop
push
rclb
decb
jb
fs
adc
int3
push
cmc
pop
jecxz,pn
mov
push
jmp
adc
and
mov
fs
out
test
mov
add
mov
and
mov
popa
mov
pop
or
incb
pop
xchg
sub
popf
dec
stos
mov
insl
in
int3
testl
xor
cmp
xor
inc
outsb
ret
vsubsd
subl
in
sub
mov
push
mov
mov
lea
lret
add
test
xorl
fidivl
pop
pop
adc
jmp
test
lea
jae
cmp
in
fnstenv
into
sub
mov
dec
xor
xchg
mov
mov
test
xlat
mov
jle
jp
sbb
sbb
dec
add
stos
mov
enter
mov
in
popa
lret
push
adc
xlat
push
lcall
sbb
lods
lret
addl
adcl
scas
pop
adc
pop
test
loop
sub
xor
sbb
test
sub
pop
clc
negb
jnp
daa
test
mov
xchg
fsubr
test
push
cmpsb
cmc
fldcw
leave
mov
cmp
ss
lret
fisttpll
fcmovnb
mov
inc
xor
call
mov
inc
movsl
mov
stos
and
mov
loope
mov
jle
ja
jge
addb
dec
mov
adc
aam
lret
or
xchg
add
jnp
pop
xor
in
jge
sub
dec
and
mov
stc
outsb
push
cli
iret
stos
sub
sbb
xchg
add
mov
decb
stc
ret
xor
rep
add
in
clc
cmp
repnz
adc
fdivrs
jmp
stc
pop
decb
stos
mov
mov
add
mov
adc
mov
leave
mov
sub
push
jecxz
mov
sbb
mov
sbb
sub
fwait
pop
mov
mov
add
fcoml
mov
xor
lret
xchg
andb
inc
lds
imul
mov
mov
and
js
cmp
into
push
in
aad
or
xchg
xor
and
clc
inc
xchg
movsb
jge
cmpl
fildl
cmp
int3
sbb
stos
test
pop
dec
mov
xor
dec
rcrb
ret
xchg
test
imul
cli
mov
dec
stos
lcall
sub
mov
mov
out
pop
push
les
getsec
mov
stos
lret
fcompl
out
sti
inc
lock
rcrl
add
push
lahf
inc
scas
and
enter
loope
pop
clc
out
ljmp
ret
popa
cmc
outsl
xor
inc
aad
xchg
or
aad
add
xor
fmul
cmpl
fbstp
xchg
adc
xchg
iret
adc
push
jp
ja
adcl
jp
call
xor
pop
ja
push
add
sti
jo
pop
sbbl
xor
int
sub
push
stos
ss
mov
pop
jne
push
stos
fwait
cltd
mov
ss
push
in
leave
and
jle
leave
outsl
pop
cs
lea
xchg
into
fisubrs
adc
pop
mov
adc
dec
fwait
adcb
sbb
scas
push
sti
stos
jb
mov
push
std
cld
dec
fwait
in
inc
cltd
dec
stos
mov
mov
icebp
mov
fwait
fwait
push
movsl
cmp
stos
sbb
mov
or
out
cwtl
arpl
sahf
mov
jge
xchg
or
fwait
imul
jmp
cmpsl
icebp
dec
cld
xchg
push
enter
cmpsb
mov
mov
mov
sub
and
mov
rcr
and
jle
or
sub
data16
cmp
movsb
add
sub
mov
ds
sub
xchg
push
xchg
dec
sbb
shlb
sahf
mov
js
scas
divl
fdiv
mov
or
sbb
jae
test
mov
andb
scas
ljmp
jge
xor
xor
aas
ficoml
cmp
fadd
daa
jmp
xchg
je
test
pcmpeqb
pop
incl
fdiv
mov
jbe
xor
stos
xor
adc
es
fsubs
in
and
mov
das
scas
rolb
test
insb
pushl
test
bound
mov
decl
sti
sbb
pop
mov
pop
adc
sub
adc
add
adc
dec
inc
push
dec
inc
and
lahf
sbb
sbb
orb
aaa
fimull
mov
aam
pop
orl
pop
push
cld
rorb
pop
fstpl
mov
in
add
mov
xor
mov
mov
sbb
mov
sbb
xchg
inc
dec
sbb
pusha
int
push
sbb
cmp
mov
jg
cmp
movsb
xor
nop
add
cmpl
sub
xchg
js
sub
jge
jno
and
cwtl
push
imul
lock
sbbl
push
test
out
and
dec
int3
shl
lock
mov
xchg
lock
push
jmp
int
pop
shll
cmp
pop
or
and
mov
scas
mov
adc
fsubl
mov
inc
mov
push
lcall
pushf
stos
mov
cld
imul
lock
pusha
xchg
fldt
mov
scas
ss
imul
inc
mov
mov
pusha
pop
fsubrs
rcll
movsl
sub
jae
test
sbb
out
inc
jnp
lret
xlat
mov
dec
push
aas
ret
add
mov
scas
addr16
addr16
out
inc
dec
pop
ret
jle
sbb
mov
aad
sbb
push
cmpsb
das
push
lahf
mov
or
and
cld
ljmp
mov
mov
lret
sub
rorl
gs
arpl
pusha
daa
sub
aas
or
lahf
jns
scas
in
repz
std
mov
jns
cmp
in
mov
push
std
popf
inc
sub
std
repz
sub
pop
fnstcw
xor
jae
ret
pop
sbb
dec
dec
or
addr16
push
adc
cmpsb
sub
out
xor
and
cli
gs
mov
lret
xor
pop
xor
out
shll
movsl
outsb
js
and
and
lea
and
jp
outsl
negb
fcmovnb
aas
lret
sub
mov
popa
dec
mov
sub
xchg
and
mov
pushf
mov
add
lret
xchg
dec
into
ret
bound
mov
outsb
xchg
and
ja
idivb
push
cmp
mov
inc
push
cltd
adc
lret
std
dec
and
xor
pop
rcrb
dec
xor
sbb
cltd
mov
and
sub
sbb
jg
jecxz
push
xor
or
adc
dec
test
loope
dec
xchg
mov
mov
divb
movsl
ret
call
inc
fidivl
jbe
punpckhdq
jle
xlat
loop
or
pop
fistl
pushf
xor
add
dec
packsswb
xstore-rng
cmpsl
inc
dec
stos
bound
xchg
cld
adc
jae
push
cmp
int3
and
push
cmpsl
jne
sub
push
sbb
aaa
mov
sub
push
push
and
pop
push
aas
jg
aaa
push
sarl
enter
cmp
mov
shll
addl
cmc
jo
aam
and
fdivl
or
sub
pop
cld
push
push
pop
pop
pushf
sbb
fiaddl
mov
push
pop
jle
jbe
loopne
pop
mov
pcmpgtw
out
mov
and
and
mov
loope
xor
or
test
lret
adcb
jecxz
out
lret
mov
fcomps
insl
push
mov
mov
lcall
dec
test
sbb
decl
into
sbb
ficoms
lods
in
xchg
inc
outsb
sub
push
push
xor
insl
cld
out
repnz
rolb
clc
mov
mov
xor
dec
adc
std
sbb
loope
or
cmp
xor
scas
mov
jne
loop
lods
and
mov
xchg
sbb
xchg
sub
push
pop
jge
int3
rol
cmpsb
cmp
mov
mov
pop
mov
pushf
mov
movsl
inc
cmp
pop
cmp
mov
or
int
pushf
pop
lea
std
mov
add
dec
sub
movsl
inc
popa
outsl
lret
orl
lock
std
mov
xor
cltd
inc
mov
mov
xchg
and
inc
test
adc
push
jb
mov
call
lret
cltd
push
lahf
dec
jge
out
inc
jmp
mov
and
cmp
and
jbe
push
out
jno
and
pop
test
test
mov
pop
cmp
push
icebp
lcall
scas
cld
xchg
jge
adc
jp
xchg
inc
incl
lods
adc
cmp
mov
push
lock
mov
mulb
sub
addr16
nopl
add
dec
or
cs
sub
popa
fistl
mov
adc
jb
roll
mov
outsb
jmp
pop
jnp
in
les
adc
pop
out
data16
not
std
and
cli
jae
and
into
fnstsw
outsb
test
inc
pop
nop
push
push
mov
shl
mov
pop
out
mov
insl
and
dec
in
scas
jo
ficompl
pop
add
dec
out
or
xchg
pushf
pop
addr16
sbb
mov
mov
add
dec
xchg
inc
insb
mov
mov
pop
add
mov
sahf
pop
aam
mov
mov
pushf
cmp
aas
jge
scas
push
movsl
add
pop
int
sub
cmpsb
xor
push
scas
sahf
sar
flds
inc
sahf
push
rol
pop
out
jecxz
push
in
lahf
repz
inc
sub
daa
insb
shrl
cmpsl
push
inc
mov
dec
mov
mov
jb
movsl
arpl
xchg
in
jbe
les
push
mov
mov
dec
jp
pop
ret
inc
adc
sbb
add
fwait
loope
rolb
sub
scas
jb
pop
xor
dec
pop
mov
xor
mov
jae
inc
push
inc
call
push
and
add
ret
in
dec
xorb
clc
mov
sbb
shll
out
jge
push
lods
aaa
sbb
inc
add
les
push
sahf
dec
pop
cmp
and
dec
fstpt
fwait
lods
fld
sub
ret
mov
loopne
lods
enter
pop
mov
bound
scas
xor
add
xchg
xor
mov
jp
imul
out
outsl
lds
aaa
cmpsl
movsl
mov
push
jns
outsl
jp
jo
xchg
fistpll
push
xor
mov
popa
cmpsb
cmpsb
mov
sti
push
mov
cli
or
pop
mov
xor
inc
fs
jl
scas
pop
add
mov
xor
out
ret
fsubl
xchg
jno
lret
xor
ret
cmc
adc
cmp
jle
mov
mov
ret
pop
cmp
shl
and
arpl
push
push
cmp
push
xchg
jge
jno
mov
push
mov
ret
or
sub
int3
loop
xchg
insl
testl
shll
idivl
xchg
fcomps
out
pusha
pop
push
enter
add
sbb
movsb
xchg
cmp
inc
or
clc
inc
xlat
stos
dec
mov
xchg
fnsave
or
popf
push
iret
shlb
in
fisubrs
out
or
rcrb
stos
sbb
fucom
mov
xchg
inc
outsl
jbe
add
xchg
stos
adc
addr16
cli
lods
push
fdivrs
ret
dec
notb
adcl
dec
mov
pop
das
adc
lods
movsl
mov
mov
outsl
sbb
fsub
cmp
and
pop
and
push
cmc
sbb
in
jmp
and
xchg
inc
and
sub
push
stos
ret
ds
push
stos
xchg
dec
arpl
lcall
pop
es
pop
imul
arpl
or
add
xchg
enter
sub
xchg
adc
push
xchg
aaa
ljmp
mov
mov
sbb
mov
mov
bound
ficomps
fsub
jecxz
push
inc
sub
call
jp
out
cmpl
fidivs
push
daa
in
mov
insb
xchg
and
xchg
or
in
xchg
cmpsl
arpl
fwait
loopne
in
sbb
sub
mov
xor
lahf
subb
push
sbb
dec
mov
xor
dec
stc
incb
in
add
loope
punpckhbw
mov
xchg
mov
adc
loope
mov
out
cmpsb
ja
pminub
cmp
shll
or
sub
scas
mov
sub
pop
xchg
dec
cmp
popa
jnp
sub
iret
lret
adc
and
cmpsb
mov
or
cmpsb
and
xor
inc
ljmp
xor
pop
or
mov
movsl
aas
jns
dec
inc
add
loopne
pop
mov
cltd
enter
or
jnp
cmpps
out
inc
dec
push
add
cmpsb
xor
das
stc
cmp
cmp
mov
sub
add
jno,pt
rolb
imul
add
rclb
jp
repz
scas
ss
daa
ret
push
pop
std
push
pop
sbb
push
mov
xchg
subl
jno
ret
pop
outsl
jmp
fisubs
lock
xchg
lret
sbb
mov
sbb
out
dec
sub
or
mov
xchg
cwtl
aam
push
xchg
loop
mov
mov
jecxz
jbe
push
mov
aam
xlat
sub
fldl
jo
pop
mov
push
sahf
mov
push
mov
pop
lock
aad
test
outsb
mov
jnp
cwtl
dec
call
lcall
and
dec
xchg
addr16
adc
test
dec
adc
out
xchg
lahf
fistpl
or
sub
dec
dec
dec
repnz
mov
arpl
ja
push
mov
mov
repz
addr16
movsb
inc
test
xor
adc
roll
sub
push
shll
daa
cmp
mov
cmpsl
andb
or
adc
pusha
call
pop
jnp
aaa
mov
inc
mov
cld
or
sub
pop
scas
jl
xchg
jp
outsl
xor
jne
stos
mov
sbbb
add
xchg
insb
sub
jno
in
rclb
inc
fcoml
ss
stc
sahf
es
insb
lcall
pop
movsb
fildl
push
pushf
pop
arpl
fld
add
push
insb
xchg
jl
cmp
jbe
sub
aas
push
outsl
js
xor
ror
lcall
inc
cmp
or
js
inc
mov
loope
add
sub
ljmp
aam
push
out
adc
lret
pop
dec
call
xchg
add
mov
out
cltd
push
sbb
jb
clc
inc
cmp
lock
dec
adc
gs
dec
push
test
sub
js
fwait
incb
mov
jge
mov
push
in
and
scas
das
xchg
cmp
dec
mov
mov
mov
pop
dec
sub
arpl
xchg
push
cmp
stos
in
sub
jle
fwait
and
push
xchg
pop
cmp
shr
sub
rcr
push
sbb
xchg
repz
adc
xchg
cld
xor
mov
pop
scas
or
ljmp
lods
push
fstps
out
cmp
or
and
insl
enter
rorb
dec
out
jmp
test
out
shr
rolb
insb
outsb
stc
dec
mov
aam
rcl
xchg
add
xorb
loope
test
mov
add
cwtl
mov
das
cli
pusha
add
jl
xor
lds
pop
jg
aad
cmp
loope
scas
mov
fmul
xchg
xor
imul
push
js
repz
pushf
gs
xchg
add
cmp
imul
jo
in
push
mov
ss
pop
pop
nop
push
push
lea
into
dec
aad
jge
stc
mov
je
adc
dec
negl
fstps
xchg
cmpsb
test
das
sbb
pushf
iret
lods
add
or
adc
pop
gs
std
fsubr
push
pop
mov
test
dec
add
cmp
mov
mov
aas
dec
clc
stc
push
enter
cmpsl
pop
jecxz
fisttpll
inc
mov
xchg
dec
dec
mov
mov
mov
push
inc
cmc
mov
jns
fdivl
cs
xor
shlb
cmp
mov
cltd
dec
mov
pause
add
icebp
add
xor
jbe
ds
fs
test
jl
fldcw
lahf
imul
lods
inc
inc
sub
imul
pop
stos
pop
add
mov
scas
out
fnstcw
test
jl
xchg
mov
lret
and
push
icebp
and
gs
repz
js
outsl
inc
mov
push
push
je
syscall
lock
inc
pop
push
enter
mov
jmp
cs
push
mov
and
loopne
xchg
add
cmp
repnz
aad
data16
jb
xchg
sahf
push
xor
xchg
mov
loope
cmp
mov
lret
idivl
aam
inc
xor
mov
enter
and
push
cwtl
add
push
pop
out
das
inc
ficomps
pop
popa
jo
sub
pop
xor
dec
negb
sbb
incl
insl
std
or
add
cld
adc
mov
fs
mov
addb
cmp
and
rol
cmp
mov
adc
fadd
xchg
xor
inc
fadds
sub
cmp
mov
add
jns
clc
stc
shr
daa
dec
test
jle
filds
les
out
int
cmp
int
xchg
pushf
add
jmp
xor
xchg
inc
adc
jmp
leave
mov
mov
cs
popa
sbb
js
loop
sbb
fisubl
mov
lret
xor
call
lahf
jnp
loope
dec
hlt
cli
xchg
add
pop
jnp
jle
or
rcl
sub
mov
int
mov
xchg
push
scas
push
push
lahf
mov
aad
add
mov
xchg
aas
insb
daa
xor
sbb
xor
neg
mov
inc
adc
mov
cs
cvtps2pd
ss
xchg
mov
int3
sub
add
or
lods
pushf
data16
sarl
add
imul
cmp
aas
in
jmp
add
aaa
sbb
lods
push
mov
out
mov
add
mov
lret
xor
add
inc
adc
xlat
pop
loopne
sbb
push
sbb
icebp
xchg
fildll
xor
push
enter
mov
or
pop
or
in
addr16
inc
jge
and
push
in
xchg
jmp
push
sbb
and
rcll
adc
cmp
pop
popa
cmpsl
popa
fsubrp
je
lds
pop
mov
sub
and
cmp
bound
push
pop
fisubrl
ljmp
fisubrs
jnp
add
test
mov
int
pop
jg
sti
xor
sbb
adc
pop
ret
add
mov
dec
cli
sbb
imul
call
popf
test
xor
aas
mov
popa
push
sub
pop
xor
lods
xlat
and
je
sub
push
mov
sar
dec
inc
jbe
cwtl
xor
xchg
test
lds
insb
xchg
scas
loop
xor
inc
bound
jl
dec
mov
pop
in
adc
inc
lock
mov
xor
jb
pop
push
jmp
pop
pop
or
and
sahf
dec
cwtl
arpl
dec
pop
jae
sti
stos
adc
data16
ljmp
outsb
or
insl
mov
pushf
sahf
mov
sbb
xchg
das
add
loope
in
bound
ficoms
fstpt
xchg
mov
mov
xchg
mov
pop
insl
and
pop
add
adc
mov
cmpsl
adc
dec
xchg
out
mov
stc
cmpsl
lea
cmp
dec
cmp
div
test
xor
push
es
cmp
rcll
stc
inc
in
je
adc
lret
sbb
or
xor
leave
fisttps
cld
out
sub
mov
out
or
push
frstor
outsb
adc
mov
adc
push
and
or
mov
adcl
mov
into
in
jnp
jecxz
push
push
dec
pop
cs
sbb
sahf
repz
out
sbb
leave
inc
ljmp
sbb
xor
add
jnp
bound
cwtl
jae
imul
adc
ss
mulb
dec
xor
hlt
jg
mov
testb
jmp
sub
cli
mov
test
aas
add
inc
fidivrl
into
mov
push
jp
and
pop
popf
mov
addr16
dec
fwait
mov
fidivl
rclb
mov
mov
dec
lds
mov
inc
sub
nop
loopne
call
aaa
sub
sub
inc
std
cmp
add
ffreep
adc
into
enter
bound
repz
or
gs
loop
adc
insb
cmc
xor
add
roll
jg
xchg
sbb
int3
xlat
je
push
dec
adc
mov
popf
push
repnz
pop
test
adc
xchg
mov
ja
icebp
std
jns
in
inc
adc
xor
movsb
in
call
aas
cmp
repnz
fdivrs
out
scas
pusha
add
fs
jmp
xchg
dec
cmpsl
mov
adc
fwait
nop
mov
fstps
rolb
jle
push
push
fs
insl
push
cmpsb
sbb
repz
add
and
popa
add
xchg
sub
lea
cld
fnstenv
fisubs
sarl
jp
leave
sub
std
xchg
sub
inc
pop
negl
imul
and
std
fldl
adc
clc
fisttpl
jp
insb
xlat
in
ss
insb
jmp
aam
rcrb
imul
mov
push
es
lods
add
add
xchg
pop
mov
xchg
push
inc
and
sbb
das
jl
mov
scas
pop
cmc
ficompl
inc
and
cmpsb
out
int3
mov
out
sub
sub
clc
ljmp
inc
lcall
cmpsl
mov
mov
pushf
adc
stos
inc
outsb
cmp
fistl
xor
push
xchg
and
jle
mov
nop
push
push
frstor
xlat
pop
ror
mov
pop
cli
mov
call
mov
mov
xor
mov
xor
js
lcall
mov
fucomi
mov
test
push
adc
sub
sbb
mov
faddp
dec
push
xor
jmp
jbe
ljmp
testl
cwtl
sbb
push
or
mov
enter
jne
mov
shl
push
sbb
jle
inc
outsl
xor
out
sbb
shrl
inc
xor
xchg
sub
dec
in
jmp
and
and
or
mov
push
int3
xchg
xchg
call
nop
or
imul
mov
xchg
adc
pminsw
nop
lea
js
jns
nop
sti
or
cs
sub
mov
push
andb
stos
mov
out
sbb
mov
test
mov
rcrl
mov
mov
lcall
scas
inc
testl
pop
ja
adc
inc
mov
cmp
fs
push
or
out
jmp
pop
insl
pop
popf
mov
and
or
xor
cmc
daa
mov
pop
jno
adc
or
sbb
push
dec
stos
or
out
jge
repz
into
lea
lods
test
push
push
mov
fisubrs
out
sbb
mov
push
mov
aas
rorl
mov
js
mov
test
idivb
sub
lcall
lods
sbb
cmp
clc
fcompl
jge
enter
sbb
je
mov
pop
mov
pop
dec
in
or
mov
cmp
push
push
shlb
sbb
ficomps
dec
dec
jnp
popa
xorb
fs
jg
ret
in
inc
jmp
jge
ret
jecxz
and
out
jbe
lret
lds
dec
lcall
out
arpl
cmp
or
add
popf
out
mov
mov
jo
insl
mov
movsl
out
imul
aam
or
mov
sbb
mov
js
and
or
mov
pushf
cmpsl
imul
xor
adc
sub
lods
pop
loope
jns
and
xchg
inc
sbb
out
jbe
jecxz
lods
cmp
sub
aas
and
cmp
sahf
int
lret
sub
mov
repz
data16
pushf
cmpsl
cmp
movsl
in
sbb
imul
dec
inc
push
pusha
xchg
mov
xchg
mov
outsb
cmpsl
mov
sub
int
mov
sbb
adc
cmp
jle,pn
mov
iret
lods
sub
js
cmpsl
adc
sub
insl
cwtl
or
mov
call
ljmp
sti
jg
cmp
mov
or
loopnew
cmpsl
xor
jmp
pop
ret
push
mov
inc
aam
add
sub
mov
lret
and
xchg
xchg
pop
mov
jns
pushf
out
mull
shl
sub
aam
jne
xor
mov
andb
jmp
mov
repnz
comiss
imul
dec
roll
xor
gs
cmp
mov
aad
out
pushf
repnz
mov
lret
pop
sub
add
filds
inc
leave
enter
sub
push
inc
dec
lea
mov
fisubl
js
cltd
pop
cmpsl
packsswb
mov
jbe
in
inc
test
sbb
push
pop
mov
loop
lret
rcrl
or
dec
repz
aas
mov
flds
rcrb
outsl
in
jle
js
notb
insb
lcall
jae
sahf
push
in
pusha
mov
and
outsb
add
dec
mov
mov
daa
xor
pop
dec
xchg
cs
adc
pop
fs
test
add
sub
lds
mov
stos
xor
adc
lret
out
in
ret
and
int3
idiv
cmp
aad
cmp
xchg
pop
fistpl
jge
add
push
mov
mov
loopne
push
add
mov
stos
into
pop
call
jecxz
jae
pusha
adc
sub
add
xlat
push
jne
pop
ss
stos
pop
lds
cld
add
or
mov
push
jl
jp
cs
cs
outsl
add
popa
mov
xchg
stos
xor
pop
push
sahf
in
sub
mov
sahf
nop
insb
sub
sub
xor
cmp
cs
shrl
rorl
lret
jecxz
sub
pop
xor
fmull
xchg
push
int3
or
decb
or
fadds
pop
into
or
add
inc
rol
fcoml
movsl
jne
sbb
sub
dec
jl
inc
dec
sub
xor
shl
dec
pop
or
inc
stos
adcl
mov
loop
xchg
repnz
xchg
scas
nop
rcrl
xchg
loope
fsub
lods
xchg
mov
mov
loopne
insl
pushf
mov
inc
loopne
mov
mov
inc
lret
hlt
mov
insb
xor
sahf
xlat
fbld
sbb
into
mov
mov
loope
inc
dec
jb
cs
mov
movups
add
mov
xchg
pop
test
push
cmpl
add
cvtps2pi
dec
pushw
mov
sbb
mov
mov
mov
xchg
stc
cmpsb
imul
and
sbb
mov
xor
fcmovb
mov
cmp
sub
xor
inc
repz
bound
insl
push
xorl
enter
mov
imul
jle
out
out
jb
cmpsb
gs
les
aaa
gs
jmp
lret
and
loope
xor
test
xchg
dec
nop
js
and
cltd
pop
nop
jmp
scas
cwtl
dec
jbe
xchg
push
add
xor
mov
and
insb
lcall
call
lods
jg
push
cli
lods
test
out
std
insb
sbbl
std
sub
test
pop
pop
pop
xchg
insb
mov
pop
je
pop
mov
lahf
rclb
sbb
out
push
xorl
out
adc
lret
std
data16
mov
out
push
xor
fdivs
pop
push
jns
or
inc
test
cmc
push
icebp
adc
bound
and
or
in
jmp
cmc
sbb
mov
dec
repz
test
cmc
fiadds
aaa
jne
xchg
negb
adc
jecxz
sub
dec
push
adc
xor
cld
mov
mov
loope
icebp
incl
pop
test
xchg
pop
sub
popl
divl
testl
scas
inc
jge
push
add
and
and
jno
daa
mov
cmp
daa
or
popf
mov
lods
ja
sub
xchg
push
lods
sahf
sahf
mov
addr16
sub
jmp
frstor
daa
dec
jmp
pop
outsl
push
or
das
jge
lahf
mov
mov
lods
int3
inc
mov
outsb
mov
movb
movl
inc
lea
cmp
add
xlat
scas
pop
mov
xchg
sbb
lea
xchg
testb
leave
pop
push
addb
mov
sub
scas
sahf
jno
and
push
add
fdivl
inc
je
lds
pop
call
sahf
mov
lcall
adc
insb
outsl
xor
xor
sbb
or
push
adc
lock
cmpb
out
dec
xchg
movsl
sub
lods
lret
fbld
aaa
xor
sbb
push
xor
adc
push
lock
daa
orb
fsubs
cmpsl
mov
and
lahf
enter
dec
xor
push
pop
mov
cmp
aaa
imull
xchg
rcl
push
loop
stos
lea
lods
popa
dec
mov
push
xchg
ljmp
cmp
fs
js
pop
inc
dec
call
ja
mov
pop
or
jmp
rcl
xchg
and
shrl
out
fdivl
fidivl
outsb
repnz
sub
call
scas
adc
pop
lods
enter
aam
xchg
cli
inc
sub
loop
pop
ds
jo
rolb
and
jp
xchg
jecxz
dec
mov
ss
mov
shrb
add
jl
push
adc
ret
or
shrb
in
in
dec
sbb
divb
fldt
ds
xor
scas
push
das
inc
pop
dec
xor
jbe
test
add
and
xchg
sbb
out
cmp
xor
mov
cmp
and
cltd
aam
mov
or
ficoml
cwtl
test
inc
insb
mov
movd
mov
data16
outsb
pop
push
lcall
add
or
mov
mov
lea
loop
mov
xchg
jp
test
push
fdivl
inc
push
fistl
mov
mov
imul
loope
lret
jb
and
xchg
and
jge
xlat
mov
repz
xchg
mov
lds
test
inc
or
iret
fisubl
mov
out
outsb
and
cld
jno
xchg
add
stos
adc
xor
push
xlat
dec
fdivs
adc
jbe
inc
adc
pop
pusha
lea
dec
out
xor
pop
out
or
shl
ljmp
dec
imul
fstpt
pop
inc
and
aad
pop
aam
push
pop
aas
pop
out
or
cmpb
das
jmp
sbb
ret
andl
sbb
adc
adc
data16
out
adc
push
arpl
sub
aad
and
ljmp
adc
or
fst
fs
icebp
rol
roll
popl
fwait
loop,pn
popf
push
pop
mov
flds
mov
gs
test
mov
lods
fwait
push
pushf
mov
add
jg
sub
icebp
push
ljmp
insb
jbe
pop
je
inc
ret
rcl
xorb
repz
loopne
addr16
pop
mov
push
dec
mov
in
sbb
lds
incb
adc
fmuls
pop
jnp
adc
test
pushf
incl
jmp
aaa
loopne
push
dec
test
imul
sbb
mov
sahf
outsb
shll
je
mov
int
and
inc
sbb
cmp
sarb
cmp
add
adc
mov
mov
push
push
mov
xchg
jg
loope
aad
mov
jg
jbe
pushf
int3
mov
stc
mov
sbb
dec
dec
add
xor
xor
rcl
jne
xchg
cmp
stos
pop
cmp
out
fidivrl
or
or
push
mov
bound
dec
mov
out
aas
mov
lahf
fcomp
in
je
adc
fwait
pop
mov
pop
mov
lcall
ljmp
gs
sub
mov
mov
cld
pop
pusha
pop
mov
sub
in
sbb
xorb
sbb
ds
daa
and
flds
cmp
sbb
sahf
icebp
push
mov
mov
mov
inc
and
int3
rolb
mov
xchg
mov
lea
mov
xchg
das
imul
cmpsb
out
push
and
cltd
add
pop
popf
stc
sahf
in
gs
xchg
adc
cmpb
outsb
jmp
and
add
add
and
rcrl
cmpl
flds
notl
sbb
pop
or
jbe
enter
shll
aam
xchg
pop
pop
scas
es
out
test
imul
or
call
push
mov
into
cmp
mov
adc
jmp
sahf
push
aaa
mov
movsl
push
dec
sti
add
repnz
ja
xchg
jno
push
add
dec
sub
add
sub
xchg
in
in
jne
movsl
add
int
das
stos
pop
mov
or
popl
add
orb
mov
add
fcmove
dec
lahf
adc
fcmovne
ds
dec
push
push
frstor
mov
shlb
cmp
sbb
dec
ficoms
jecxz
mov
hlt
xchg
or
jnp
push
sub
int
mov
mov
dec
pop
inc
js
sub
jno
pop
push
mov
inc
fcomp
pop
lcall
mov
mov
in
add
adc
sbb
hlt
in
push
pop
jecxz
je
jge
nop
aam
mov
push
dec
stos
int3
pushl
lds
es
push
mov
xor
mov
cmpsb
and
lahf
jne
mov
adc
mov
push
test
sbb
icebp
mov
cli
inc
in
sub
mov
lcall
out
repz
inc
adc
mov
mov
test
bsf
inc
and
xor
dec
jmp
imul
inc
and
jb
mov
dec
in
les
xor
inc
pushf
xor
adc
ljmp
or
mov
mov
fsubl
in
sbb
leave
fists
add
rcrl
cwtl
leave
mov
outsb
subl
sti
jnp
push
gs
xchg
xor
push
jg
xchg
and
je
clc
fdivs
out
jo
icebp
insb
hlt
scas
cmp
addr16
int
fimull
add
add
push
imul
aaa
push
lcall
in
gs
jmp
std
imul
adc
fimuls
mov
testb
pop
adc
or
jns
push
hlt
cmp
es
xor
or
inc
jl
movsl
adc
ret
addl
xchg
pop
movsb
lods
out
or
repnz
dec
sbb
mov
lcall
mov
dec
jge
js
inc
subb
lret
hlt
popf
outsl
or
cmc
xor
jp
loopne
out
add
sbb
cmp
push
jmp
adc
es
sbb
push
push
add
dec
jae
jno
fcom
loopne
bound
dec
int3
icebp
pop
shrl
call
test
fcmovnu
mov
loop
jl
jle
xchg
clc
in
or
xor
sub
andb
loope
push
mov
dec
mov
cs
cmp
push
clc
nop
xor
cli
jns
ret
cmp
add
sub
fsubrp
jle
push
popa
hlt
sub
or
and
pop
cmp
fiadds
popa
pop
jg
push
mov
cmpsl
pop
fwait
push
push
sub
daa
pop
push
imul
mov
push
imul
cli
pop
sbb
xlat
or
jbe
mov
mov
sub
mov
push
and
mov
lea
in
lcall
icebp
mov
fwait
and
push
mov
adc
loop
mov
out
adc
ljmp
shlb
daa
xchg
xchg
mov
addl
jo
lahf
lret
push
jp
subl
xlat
add
vmaxps
ja
add
cmp
out
lret
stc
mov
mov
roll
cld
cmp
subb
xor
adc
jb
mov
xor
fs
add
fsubr
imul
pop
stos
add
push
xor
dec
rcrl
hlt
std
mov
cmc
xchg
imul
adc
mov
sbb
insb
loopne
lods
shll
sub
scas
sar
fimuls
xor
and
in
pop
imul
js
mov
test
lahf
pusha
mov
adc
sub
dec
mov
or
lret
xor
icebp
cmc
pop
les
sub
jne
sbb
mov
mov
xchg
pop
rdmsr
jno
imul
jae
sahf
cmpsb
jle
mov
shl
inc
cmpsb
ret
jmp
push
push
xor
loope
xchg
mov
jno
ret
nop
mov
sbb
pop
nop
jnp
shll
mov
es
shll
addb
lea
mov
pushf
fnstenv
aaa
adc
pop
loopne
pop
fcmovu
jle
mov
xchg
push
lahf
rolb
faddp
out
call
pop
scas
sub
jae
fisttpl
push
int3
add
and
mov
sti
add
dec
ficomps
mov
cwtl
cmp
popa
rcll
cli
ds
dec
sbbb
mov
add
ja
jb
stc
rorb
push
xchg
sahf
dec
inc
mov
sbb
fwait
call
xchg
cmp
xchg
je
pop
fisttpl
lcall
mov
fdivr
cli
jmp
call
lcall
test
std
jae
clc
or
adc
outsl
ja
jmp
testl
xor
movsb
add
jb
stos
cli
test
iret
adc
mov
test
movsb
adc
pop
lods
mov
or
mov
lock
pop
cli
jmp
and
or
shll
cmpsl
jbe
ror
mov
adc
jle
mov
pop
stos
mov
jae
xchg
cmpsb
mov
pop
in
divb
fldenv
cmpsb
mov
in
or
or
fs
mov
jnp
pop
pop
and
lock
fstpl
adcb
es
jne
cmc
adc
sub
push
push
lock
or
lret
movsl
add
pop
cmp
push
ret
push
out
jae
das
push
or
and
jge
pop
inc
leave
mov
push
lret
lret
arpl
test
push
or
sbb
les
sti
xchg
inc
push
sbb
fnsave
push
add
mov
and
sbb
cli
test
adc
fsubl
inc
lret
pusha
jge
push
xor
aas
rcll
popa
aad
test
jg
in
pop
repnz
sub
inc
mov
sub
adc
loope
mov
rcrl
add
pusha
xchg
movsl
mov
pop
sbb
mov
jb
mov
fistps
je
xchg
movsl
push
xchg
adc
xor
lods
loopne
iret
add
pop
andb
ds
lock
dec
fucomi
add
inc
pop
subb
sub
pop
jb
xchg
jae
pop
dec
imul
jmp
data16
movsl
aas
test
lret
fwait
xchg
xor
pusha
out
rolb
xchg
ljmp
insl
dec
push
push
mov
insl
ljmp
sub
push
enter
inc
sub
push
out
rcr
imul
je
insl
and
jb
xor
test
imul
xchg
and
and
lods
insb
xchg
dec
and
xor
in
inc
and
and
jg
lea
test
mov
xor
sbb
or
sbb
or
jl
addr16
fistl
push
iret
imul
repz
fwait
nop
jge
xlat
loopne
fcompl
fstpl
mov
sub
lret
jne
push
sub
andb
inc
push
jo
mov
jle
mov
bound
xor
decl
insb
jmp
xchg
jb
repnz
dec
add
and
enter
mov
inc
inc
jne
dec
imul
roll
lock
add
mov
dec
or
rol
sbb
push
push
das
mov
push
movsb
adc
adc
mov
xchg
cmpsl
popf
add
aas
xchg
bnd
mov
sub
into
sbb
shr
out
xchg
mov
sub
jbe
jge
mov
enter
or
js
adc
mov
sub
arpl
push
push
jno
ljmp
js
bound
test
ret
lock
cmpl
aad
dec
stc
inc
dec
pop
pop
int
adc
test
jl
or
mov
loopne
int3
in
inc
mov
cmp
lret
and
out
push
xchg
push
mov
push
mov
or
adc
in
push
int
rorb
dec
out
pop
sbb
cli
and
or
sti
cmpsb
sub
dec
pop
cmpsl
mov
mov
mov
xchg
mov
dec
sbb
dec
enter
cmpsl
inc
ss
cmp
and
repz
mov
pop
or
xor
arpl
je
out
lock
mov
xchg
ret
hlt
scas
bound
ljmp
mov
imul
jmp
and
pop
push
in
pop
sub
or
nop
push
std
fs
lahf
imul
dec
enter
outsl
push
arpl
cmp
push
push
in
mov
push
xor
and
in
jecxz
addr16
lret
dec
xlat
adc
ds
push
push
jb
out
ficoml
out
add
pusha
call
popf
imul
add
push
stos
add
adc
sbb
pop
subl
aam
outsl
movsb
ja
mov
push
std
cli
out
out
xchg
cmpsb
jae
jp
dec
push
es
cmc
popf
jl
jmp
int3
pop
sbb
fildll
cld
iret
insl
iret
pop
lea
sub
inc
push
mov
adc
mov
lret
cmc
xchg
pop
test
outsb
mov
std
xor
cmp
ficompl
cltd
xor
xor
lods
pop
out
lods
loopne
xchg
out
or
ljmp
movsl
out
sbb
dec
sti
xor
and
repnz
push
and
jbe
enter
mov
leave
sub
jg
jno
push
faddl
in
cmp
xchg
dec
lods
outsl
jnp
cmpsb
push
sbb
pop
int
cmpsl
add
inc
repnz
movsl
mov
pop
negb
dec
jbe
insl
xor
inc
rorb
shl
loopne
test
mov
adc
repnz
sbb
orb
je
xchg
nop
sub
xchg
leave
repnz
mov
jle
insl
mov
adc
push
nop
push
mov
pop
stc
loopne
dec
sbb
sub
aaa
lods
add
rcrl
mov
or
and
imul
inc
mov
popa
jo
inc
inc
in
mov
mov
cwtl
mov
pop
in
pop
mov
mov
push
adc
popf
dec
jle
das
decb
and
cmp
iret
div
loop
test
jle
push
adc
fnstcw
mov
out
lea
popf
push
leave
inc
add
lahf
or
lods
insl
fsts
push
pop
xchg
insl
push
out
test
cmpl
add
fstpt
sbb
scas
mov
mulb
fisubrl
scas
mull
sub
lret
mov
push
repz
rcll
mov
xor
xchg
repz
roll
xor
dec
xor
mov
jle
add
dec
inc
fcomps
jb
stos
shr
mov
nop
mov
cmpsl
popa
shll
adc
pop
xorl
bound
add
loop
push
es
insl
insl
mov
fsubrl
or
ss
notb
jg
push
xchg
xchg
cmp
jb
jns
xchg
sbb
pop
sub
and
loop
inc
lret
lods
test
aaa
mov
inc
inc
add
lds
sub
dec
ja
fcoms
xor
gs
pusha
push
pop
ljmp
adc
ss
xor
push
sub
or
lret
pop
shl
inc
adc
cmpsb
insb
mov
dec
cld
or
jmp
cmp
pop
and
cli
fwait
das
mov
jmp
pop
cli
or
loop
xor
push
dec
inc
lahf
movl
fwait
arpl
data16
into
data16
xchg
mov
xchg
in
lahf
fldl
cmp
das
inc
jle
sbb
mov
jno
divb
rolb
outsl
aas
jecxz
xchg
push
add
shll
dec
sbb
sub
jg
cmpsl
xor
fcomi
scas
ljmp
enter
lock
js
cltd
dec
dec
jns
rclb
les
xor
and
es
jo
mov
test
test
mov
xchg
adc
out
xchg
adc
sbb
push
scas
rcll
jg
xchg
inc
inc
frstor
push
or
sahf
out
inc
mov
aad
mov
xlat
aad
das
outsb
jecxz
push
sbb
jns
xor
imul
push
push
lods
in
fs
inc
push
dec
pop
adc
popf
jb
sbb
inc
jns
insb
dec
mov
enter
fdivrs
dec
pusha
ret
xchg
and
inc
sub
dec
and
push
cmc
rorl
leave
cltd
push
push
mov
fsubrs
jno
pop
xor
in
mov
adc
mov
testl
and
mov
icebp
loop
clc
pop
int3
lock
je
adc
mov
loope
add
push
jnp
push
pop
jns
ljmp
sahf
xchg
call
lea
inc
lahf
aas
lcall
sub
pop
inc
or
addr16
or
xchg
dec
popf
stos
sub
std
inc
and
movb
ljmp
lock
jp
jno
mov
dec
les
loop
test
sbb
int3
jnp
test
ret
fisttpl
cli
pop
push
aaa
in
add
xchg
dec
lods
in
sbb
jle
or
rcrl
nop
ljmp
shlb
test
adc
sbbl
cmp
cmp
repnz
icebp
sbb
mov
cwtl
ja
sub
repnz
sub
out
sbb
mov
pop
icebp
repz
cmc
mov
es
xchg
movsl
xor
cmp
push
or
ds
pop
les
hlt
mov
and
or
into
push
and
xchg
jge
out
pop
shrb
lock
testb
sbb
rorl
aad
adcb
push
dec
icebp
mov
add
push
adc
sub
int
jl
cld
inc
pop
adc
mov
pop
add
fmull
ret
jae
in
inc
leave
cmp
insl
or
stos
jge
xor
in
mov
xor
jmp
sbb
inc
mov
mov
movsb
cmpsl
loope
insb
sbb
sub
rol
jmp
popf
stos
lods
inc
cmp
insb
gs
cmc
daa
div
xor
sub
xchg
std
mov
sub
xor
loopne
shrl
ja
stos
jmp
scas
cmp
push
cmp
lods
inc
xchg
sbb
outsl
stos
mov
dec
mov
sub
ret
test
aam
fwait
sbb
mov
mov
xchg
push
out
pusha
fadd
inc
sub
xor
adc
xchg
xchg
repnz
push
iret
lahf
or
cli
stos
lret
ljmp
push
loop
push
jl
jle
movswl
pop
inc
mov
lds
pusha
std
sahf
cltd
int
lahf
adc
push
movsl
xor
loopne
jmp
sbb
ds
aas
adc
ret
in
mov
mov
adc
clc
jl
or
mov
ret
lods
ret
int3
aaa
sbb
mov
sub
add
mov
xchg
dec
mov
in
xlat
inc
push
stos
adc
xchg
and
sbb
sahf
jmp
cmp
xchg
dec
push
mov
mov
cmpsl
lret
fmull
add
ret
adc
xchg
in
push
sub
pusha
movsl
mov
aaa
neg
mov
xor
std
mov
ss
push
sbb
sub
lock
or
xchg
mov
aaa
mov
xor
push
xor
repz
pop
or
into
or
in
mov
add
mov
xchg
adc
xor
dec
dec
fildl
xlat
daa
into
push
out
dec
adcl
test
es
out
push
in
out
frstor
jnp
lcall
push
pop
imul
lret
and
stos
cltd
push
test
adc
xchg
les
and
arpl
stos
push
aam
jbe
insb
lcall
or
daa
movsb
test
clc
xor
cmp
sarl
imul
into
das
xchg
loop
testb
xchg
xor
daa
cmp
inc
push
ja
xchg
cmp
xchg
dec
aaa
pop
ja
pop
ss
je
loopne
mov
or
ja
mov
jae
aas
push
in
outsb
push
loop
and
shr
xchg
inc
gs
push
push
pop
cmpsb
ret
jle
js
subb
repnz
scas
jb
movsb
push
lea
sbb
divb
in
addr16
mov
clc
or
mov
mov
rolb
bound
sbb
sub
sahf
imul
pop
cmc
mov
xchg
movsl
adc
fimull
add
pmuludq
test
inc
mov
insl
cmc
fwait
fs
in
sahf
and
mov
mov
and
mov
and
insb
push
pop
stos
hlt
or
xor
pusha
dec
jno
dec
ljmp
outsl
push
or
dec
loopne
inc
mov
xor
sbb
cmpsl
dec
into
mov
in
jg
and
insb
dec
test
in
dec
dec
ficomps
cld
inc
cmp
fs
xchg
pop
lahf
data16
mov
jg
es
ss
mov
pushf
ficoms
and
insl
out
pushf
scas
mov
paddsw
lods
mov
repnz
cmpsl
cmp
insb
ficompl
xchg
xchg
fidivrs
int3
stos
popa
arpl
adc
aad
mov
sub
push
add
std
cmp
jae
mov
and
lahf
push
xor
testl
dec
lret
or
dec
xchg
movl
jne
outsb
shrb
pop
add
mov
jbe
xchg
icebp
sti
push
out
adc
or
push
out
add
cmp
daa
fucomip
outsb
pop
xor
pop
hlt
repnz
ja
test
sahf
mov
sub
or
push
xlat
jo
xchg
std
cmpsb
stos
xchg
aas
add
push
jnp
xor
in
into
push
inc
addl
clc
dec
mov
int3
jl
push
add
pop
int3
cmp
mov
mov
sbb
mov
mov
adc
popf
je
xchg
notl
mov
mov
or
test
movsb
ficomps
outsb
fs
pop
test
add
sbbb
nop
aam
daa
ret
sbb
push
xlat
insl
dec
in
rorl
test
sub
xchg
addr16
repz
pop
pop
or
push
or
push
xchg
or
das
xor
in
xchg
add
rorb
in
test
cmp
enter
sbb
xor
call
sbb
cmp
and
mov
jp
fisubs
pop
cmp
jmp
push
lds
lcall
jge
cmpsl
scas
cmpsb
push
jo
nop
insl
cld
scas
arpl
mov
xorb
test
pop
jae
dec
xchg
cmp
es
dec
jmp
xchg
jno
cmp
sbb
inc
out
dec
mov
adc
dec
filds
addb
mov
dec
mov
mov
out
loope
jge
mov
pop
or
xchg
call
hlt
idivb
cmp
dec
cmp
mov
sbb
cmc
dec
xor
outsb
mov
inc
sbb
add
dec
sbb
mov
mov
daa
add
inc
data16
push
jmp
xchg
pop
mov
mov
sahf
inc
test
jecxz
and
enter
push
push
stc
lahf
pop
pcmpgtw
mov
dec
out
cwtl
insb
mov
jecxz
into
cmp
in
jg
outsl
jp
dec
add
sbb
xchg
jbe
rorb
mov
adc
xchg
sub
dec
in
jg
fisubrs
push
gs
xor
sbbb
in
rclb
cmp
sub
leave
push
mov
adc
iret
push
xor
lahf
outsb
mov
arpl
mov
shlb
push
mov
inc
shlb
imul
lods
cmp
jmp
sub
repz
lds
pop
gs
outsl
subb
cmpsb
sub
ss
cli
fmull
test
outsb
neg
or
add
scas
jb,pn
jge
jae
loopne
xchg
jle
jg
mov
push
les
mov
add
hlt
and
fs
enter
xchg
jo
hlt
mov
in
clc
xchg
cmp
sub
insb
sub
loope
inc
insb
dec
scas
mov
inc
aaa
and
xchg
jecxz
xchg
push
xor
ss
in
insl
inc
shl
and
aas
xor
push
rorb
das
icebp
pop
jo
lahf
add
jg
xchg
dec
cmp
push
hlt
mov
enter
pop
ss
and
call
mov
pop
pop
loop
stos
lock
es
adc
es
jl
shll
cmp
cwtl
pop
mov
in
push
push
shlb
sbb
dec
mov
dec
lret
or
pop
cmp
jae
pushf
movsb
in
add
jnp
dec
sbb
lret
xchg
fsubs
jecxz
jns
sbb
aam
fmuls
lahf
dec
lret
nop
cmp
idiv
adc
sti
jle
and
mov
sub
push
inc
push
aas
movsl
and
push
ja
cmp
mov
outsb
jg
out
inc
pop
bound
jg
sub
jns
ja
dec
leave
shrb
mov
cmc
stos
gs
ret
xor
lcall
inc
popf
and
push
mov
bound
outsb
sahf
and
negl
ret
fwait
mov
roll
lds
xor
mov
bound
dec
lret
int3
inc
add
dec
int
mov
jne
cmpsb
and
lret
pop
cli
sbb
jno
xor
sbb
repnz
pop
enter
imul
mov
sub
out
push
fldl
repnz
notb
mov
out
insl
scas
insw
mov
mov
rcl
xchg
jns
pop
dec
ds
dec
push
cs
adc
jb,pn
out
jo
xlat
sub
mov
lock
out
pop
xchg
in
or
xor
xor
shl
mov
sbb
addr16
pusha
xor
xchg
dec
xor
sarl
repnz
adc
pop
inc
out
mov
sub
mov
push
test
es
imul
sti
cmp
andb
addr16
sub
in
push
sub
pop
add
or
iret
sbb
push
test
imul
stos
mov
inc
jle
and
jno
mov
xchg
pop
xchg
filds
push
cwtl
jmp
adc
adc
gs
xor
add
add
int3
call
mov
mov
in
adc
cmp
push
xchg
out
add
mov
gs
cli
mov
dec
icebp
pop
out
outsb
sbb
sahf
jle
outsb
daa
cmp
enter
clc
call
inc
pop
push
xlat
fidivl
imul
add
push
add
and
das
add
pusha
xor
or
movsl
in
sbb
add
icebp
in
test
pushf
xlat
jmp
cs
mov
adc
dec
jnp
in
repnz
fsubr
cmpb
or
dec
jl
mov
jmp
and
iret
in
stos
int3
test
shll
xchg
push
pop
add
xchg
pushf
mov
push
lock
mov
dec
repz
mov
loope
je
pushf
stos
inc
xchg
xlat
test
xchg
sbb
movsl
lcall
data16
sahf
mov
cld
add
push
lret
mov
ret
xchg
jmp
std
mov
jno
rcll
push
mov
cs
mov
iret
fidivrs
insb
lock
push
stos
icebp
div
dec
push
push
mov
out
enter
out
inc
scas
mov
sub
test
sub
cmp
ljmp
into
or
ret
xor
push
cmpsb
jl
std
inc
arpl
push
lret
cld
stc
cwtl
imul
sar
jmp
jo
mov
push
les
loop
dec
stos
loopne
xchg
ss
fcompl
jno
clc
add
xchg
ja
jne
adc
popa
ja
loopne
daa
hlt
lret
pop
sub
rcll
dec
sbb
xchg
jb
mov
mov
cs
movsb
xchg
inc
mov
stos
jle
jbe
aaa
add
pop
shl
test
cmpsl
stos
pop
or
cwtl
adc
add
mov
scas
sbb
iret
lcall
mov
rclb
out
call
test
mov
lock
mov
adc
mov
fstpl
pushf
sbb
push
mov
add
cmc
jp
lret
sti
pop
fistl
adc
jmp
andb
call
dec
je
das
sbbl
dec
jmp
in
cmp
mov
or
jge
pop
out
je
xor
and
ljmp
test
in
mov
mov
test
add
pop
mov
add
lea
push
test
push
daa
iret
ss
outsb
into
or
hlt
dec
push
xchg
in
mov
cli
jle
lea
daa
mov
fistps
and
lds
push
call
fdivp
push
or
out
mov
ficomps
jge
dec
cmpsl
jns
push
jns
push
xchg
ja
dec
mov
adc
cmpsl
or
push
jecxz
jmp
dec
xchg
movswl
mov
js
fildl
xchg
inc
sbb
jmp
icebp
dec
jecxz
das
pop
push
push
add
add
movsb
call
dec
clc
dec
mov
movsl
sub
test
push
ret
cmc
mov
mov
sub
adc
lods
pop
cli
dec
cmc
sbb
mov
test
push
js
push
call
xchg
sbb
daa
mov
mov
bound
jle
cmp
dec
je
lret
inc
xor
jl
insl
jmp
lods
xor
inc
out
jg
pushf
fcoml
pop
lea
aaa
ljmp
or
xor
dec
int
loop
in
ficoms
dec
insb
ljmp
movsl
je
dec
pop
cmp
inc
cld
xchg
call
fists
dec
ret
lock
loop,pt
bound
and
push
mov
test
addr16
aaa
arpl
sub
test
sub
xor
sub
dec
rcl
cmp
adc
bound
dec
jecxz
decl
out
push
jb
test
in
push
push
xchg
sbb
xacquire
xor
cmp
dec
mov
xor
addb
adc
ja
shll
mov
ja
icebp
sbb
xchg
mov
jbe
imul
adc
inc
and
mov
cli
fnstcw
sub
testb
jmp
pushf
test
clc
xlat
sbb
test
jb
idivb
jbe
inc
mov
or
mov
sub
inc
lods
mov
mov
jo
shll
cmp
xchg
cmp
das
clc
cmp
sbb
nop
inc
shll
jg
and
push
mov
inc
jmp
dec
out
xchg
inc
push
sbb
mov
inc
lea
daa
stos
imul
jmp
aad
cmp
xor
mov
addl
mov
int3
dec
and
dec
bound
sbb
vpsrld
sbbb
lret
sbb
mov
xchg
or
pusha
xchg
in
pop
aam
adc
mov
adc
mov
sbb
mov
addb
mov
pop
push
sarb
fmuls
dec
data16
mov
cmpsb
dec
sbb
sub
in
add
dec
cs
dec
pop
xor
out
shrl
mov
push
cmp
xchg
mov
xor
cmp
and
roll
inc
inc
adc
std
sub
lret
cmp
sub
jle
repnz
adc
mov
repnz
push
enter
insl
popa
movd
fwait
rclb
xchg
jnp
pop
pusha
add
mov
ljmp
adc
sub
xor
out
sub
mov
popf
ja
aas
fistps
and
pusha
imul
sbb
nop
xchg
adc
lods
ret
pop
or
popf
push
mov
cs
jmp
adc
ljmp
aad
lds
mov
mov
mov
dec
pop
rcll
hlt
enter
dec
cmpsb
mov
xchg
ss
movsl
adc
test
notb
imul
shlb
cmp
in
inc
fyl2xp1
mov
gs
dec
fidivs
outsl
flds
adc
inc
pop
inc
jp
push
pop
push
inc
mov
xchg
pushf
ds
stos
pop
cli
out
xchg
add
cld
xor
cmc
stc
mov
and
sahf
push
std
lods
in
out
push
mov
repz
pop
repz
int3
stos
cmp
pop
jp
iret
cmp
pop
cmp
cmc
and
inc
or
mov
cs
xchg
fisubl
enter
testl
mov
rol
rcrb
bound
inc
jnp
sub
mov
sub
addr16
push
xor
push
outsb
pop
stc
push
insl
cmp
sbb
test
adc
shrb
push
lret
inc
inc
add
cmp
jp
fnstcw
cmp
mov
sbbb
std
pop
add
test
cltd
push
pop
fcomp
stc
xorb
mov
aas
or
leave
or
pop
sbb
push
repnz
dec
push
xor
xor
icebp
dec
sub
insl
or
push
jmp
push
lret
int3
into
xchg
push
insl
adc
cmp
out
and
jnp
std
and
or
mov
xor
jns,pt
fidivs
adc
xchg
jbe
xor
outsl
mov
sub
inc
ret
sub
mov
je
mov
cwtl
mov
mov
std
aaa
out
cmp
or
shll
and
aam
pop
dec
xor
pop
sub
fldl
add
inc
fisttpll
inc
jge
les
jb
xor
adc
push
mov
add
xlat
mov
inc
les
push
bound
aaa
imul
mov
out
jb
ret
je
ds
cld
push
dec
aam
bound
inc
fistl
jle
xor
mov
mov
rcrl
mov
sbb
mov
int3
scas
and
mov
cltd
jns
sbb
pop
ss
andl
sbb
adc
sbb
out
jae
pop
push
sbb
sahf
sub
aad
add
mov
and
sub
cmpsb
cli
fprem1
pop
sbb
jne
cmp
stc
or
pop
fadd
fisttps
imul
adc
rcrb
push
in
push
in
cmc
xor
xchg
lock
mull
sbb
icebp
and
add
popa
in
data16
pop
out
insb
mov
jns
ljmp
jl
cmc
inc
shlb
jbe
rcrb
iret
xchg
jbe
loopne
jne
mov
sbb
jbe
insl
imul
fidivs
sbb
add
xor
mov
xchg
jecxz
and
add
fmull
or
addr16
cld
aam
das
sub
pusha
jnp
call
sbb
call
lahf
sbb
std
cld
lods
sti
ficoml
ror
lahf
out
pop
test
loop
push
jmp
out
scas
xor
sbb
lea
dec
pop
data16
cmp
adc
jae
xchg
sub
jmp
lods
add
into
ret
ficompl
xor
push
in
add
push
pop
sub
jge
stc
push
movsl
dec
jae
mov
test
icebp
cmpsb
lock
jno
xchg
aad
dec
pop
jle
jl
xchg
insl
sub
imul
mov
mov
cmp
jno
add
out
pop
and
lret
xor
int3
daa
xchg
clc
dec
movsl
adc
mov
jge
hlt
push
adc
imul
fs
shll
sbb
mov
repz
cltd
fdivl
fldl
nop
xchg
or
dec
loop
mov
inc
sub
test
sahf
pop
add
xchg
inc
adc
into
ret
push
mov
addr16
mov
dec
jb
push
xlat
in
mov
iret
and
lret
lar
sub
in
mov
ret
jg
push
cmp
cli
inc
js
outsb
fsts
out
jp
sahf
mov
cmp
xor
xchg
sub
jns
in
xor
adc
scas
repz
jg
push
fdivr
mov
les
xor
mov
lods
mov
mov
stos
dec
std
jbe
stc
jne
adc
xorl
pop
icebp
dec
or
test
std
and
pop
enter
push
sbbl
outsl
cmp
cmp
sbb
popf
push
cmp
and
add
aas
daa
insb
andb
push
pop
je
fisubl
leave
adcb
into
mov
ljmp
sbb
cmpsl
xor
stc
scas
and
cltd
cmp
jg
jo
add
test
mov
xlat
das
enter
add
push
cwtl
mov
imul
mov
adc
and
pop
ficoml
push
push
popf
push
outsb
push
lahf
in
bound
xchg
push
loope
loop
sbb
dec
loopne
mov
sub
push
test
into
lcall
or
paddsb
shll
mov
add
cmc
xor
push
pop
xchg
mov
adc
cmpb
xchg
test
fs
adc
xor
sbb
xchg
sbb
cmpsb
js
pop
xor
adc
pop
outsl
lods
dec
mov
add
xor
cmp
or
mov
pop
mov
scas
jns
push
cmc
and
lahf
arpl
out
in
es
in
mov
inc
aam
dec
cmp
jp
or
out
xor
mov
add
inc
or
int
jmp
xlat
rorb
subb
andl
xchg
pop
cwtl
fidivrs
cli
popa
popa
insb
sbb
pop
jb
nop
sbb
mov
adcl
and
cmp
xor
lcall
loopne
pop
sbb
pop
pop
pop
sahf
cmp
leave
loopne
into
cmp
mov
fisubl
in
pop
sub
mov
pop
adc
add
lea
or
mov
fstl
jb
dec
dec
scas
iret
loop
mov
or
and
sbb
xor
gs
mov
cs
mov
mov
add
ror
xchg
mov
es
push
popa
mov
movsl
mov
mov
push
push
cwtl
test
cld
lds
jg
in
mov
add
jecxz
mov
sub
xchg
aas
push
xchg
outsb
es
aaa
cmpsb
out
addr16
inc
scas
push
add
mov
or
add
sbb
lahf
pop
test
sbb
inc
pop
mov
adc
inc
divl
sub
call
incb
push
std
aad
out
cltd
jg
adc
ret
mov
mov
mov
sub
cltd
and
hlt
mov
hlt
rorb
shrb
inc
insb
xchg
mov
push
or
mov
xchg
xlat
pop
jb
stos
jle
dec
dec
orb
scas
or
mov
imul
mov
and
pop
mov
add
popl
ret
dec
inc
frstor
lret
fcoms
lret
fucomip
pop
popf
repz
cmpsl
inc
cmp
mov
insb
pop
xchg
xor
sbb
and
xchg
btc
addr16
jmp
mov
subb
jg
les
or
pop
loopne
repz
xchg
sti
mov
and
mov
scas
das
push
movsb
push
xchg
sub
aas
das
adc
mov
adc
push
push
mov
push
repnz
adc
in
jo
int3
add
pop
aaa
push
nop
and
mov
adc
loop
inc
fwait
xor
cmpsl
movsb
dec
push
add
negl
and
xor
push
dec
mov
andb
clc
xor
roll
lcall
testl
mov
pop
mov
sub
xchg
mov
icebp
add
xor
pop
or
sub
pop
xor
add
xchg
ficoml
dec
and
xchg
and
and
ret
mov
push
fs
dec
xchg
mov
roll
int3
loope
push
push
or
std
clc
adc
push
scas
jae
ds
push
sub
and
fwait
mov
lods
in
imul
addr16
popa
sahf
pop
jmp
adc
lea
dec
jnp
xorb
and
adcb
mov
cmpsb
loop
stos
cmp
imul
and
rcrb
push
loopne
jmp
scas
pop
loope
cmp
in
mov
lcall
mov
mov
fwait
stc
mov
inc
pop
xchg
sahf
out
cmp
cli
cmp
jno
shlb
loop
mov
lds
adc
push
adc
or
xor
dec
mov
ds
xlat
inc
sub
das
xchg
int
xchg
lcall
sarl
in
inc
in
pop
push
jmp
cmpsl
aas
add
subb
jnp
in
mov
arpl
jnp
jmp
aaa
adc
in
mov
jp
cmp
and
mov
iret
in
adc
mov
out
jle
sbb
xor
test
jle
fsubrl
xlat
popa
lock
stos
add
dec
cmc
stos
pause
push
mov
subb
inc
jo
mov
testb
pop
or
jmp
lock
stos
adc
icebp
movsb
int
sbbb
mov
subb
pop
notb
mov
andl
dec
test
outsl
mov
imul
xchg
fimuls
js
lret
lret
jmp
adc
rcrl
scas
push
into
mov
lret
sub
repz
pop
lcall
testb
enter
mov
cltd
loopne
js,pn
jnp
inc
xor
jo
fstpl
cmp
sbb
xchg
jnp
sbb
je
sub
test
hlt
mov
sub
dec
fiaddl
or
xor
pop
adc
add
or
add
outsb
scas
sti
popa
adc
push
vunpckhpd
mov
lcall
xchg
scas
mov
test
jb
mov
in
pop
sub
and
xchg
call
into
scas
test
jbe
into
add
pop
add
pop
leave
mov
mov
std
loopne
divl
hlt
addr16
cmp
adc
push
and
stc
fldl
fbstp
push
outsl
imul
add
loope
les
mov
imull
loopne
inc
loope
mov
ja
jge
lcall
pop
ret
hlt
sub
imulb
pop
adc
cmpsb
movl
loopne
mov
lock
add
fiadds
mov
shlb
xchg
lea
outsb
dec
rorl
push
repz
scas
popl
xchg
mov
xor
dec
repz
jno
dec
inc
jg
jg
mov
lock
fists
test
sub
add
jae
jae
decb
daa
and
mov
notl
or
pop
dec
xchg
pop
push
movsb
pop
adc
pop
pusha
mov
add
mov
enter
sbb
or
orb
cmpsb
lock
mov
add
jb
inc
push
xchg
inc
pop
repz
push
add
xchg
aaa
inc
fdivr
fldz
jne
idivb
jp
ret
push
adc
cmp
xchg
stos
xchg
push
ljmp
mov
pop
and
dec
push
push
mov
sti
lret
dec
cs
insb
mov
xor
push
out
jo
pop
sub
out
jle
jmp
push
or
mov
or
js
lods
insb
addl
out
xchg
jo
popf
jle
inc
fwait
push
lods
loope
add
add
adc
add
int3
insb
dec
push
sarb
jge
sub
outsl
pop
mov
ss
loop
jecxz
sbb
cmp
sbb
insb
scas
or
mov
inc
push
pop
jge
or
jne
int3
pop
push
ror
mov
jns
xchg
jne
mov
pushl
sub
and
inc
mov
in
push
loopne
scas
dec
fbstp
xchg
sbb
lahf
jmp
pop
int3
repnz
mov
xchg
pop
push
mov
xor
nop
adc
push
aam
fistpll
sub
data16
cmpsb
pop
pop
ds
mov
divb
adc
fbstp
ja
mov
inc
add
or
out
jp
xor
mov
jmp
dec
xor
push
cli
inc
icebp
sbb
xor
or
xor
mov
repz
and
dec
ror
or
add
scas
jg
xlat
dec
sbb
insb
pop
jge
rcrl
cld
stos
cltd
mov
in
add
add
loop
mov
icebp
push
cwtl
mov
push
xor
jg
xchg
pushf
fisubl
and
ds
xchg
mov
shlb
iret
lret
popa
ret
int3
mov
xor
mov
mov
jge
mov
int
adc
jae
cmp
mov
jecxz
sbbb
xlat
lea
shl
mov
cmp
jb
and
pop
mov
push
pushf
lahf
ss
insl
and
jo
sahf
fiadds
sti
mov
jl
and
jo
mov
cmp
rcrl
nop
ss
mov
lret
add
ja
ret
mov
push
inc
xchg
adc
int3
mov
push
and
mov
xchg
lea
fdivs
xchg
aam
repz
cmp
jp
mov
lods
inc
xchg
inc
fwait
clc
mov
test
ffree
jns
sub
das
xor
ret
mov
sub
lds
xchg
sti
jnp
cs
xor
test
test
cmpsl
push
inc
push
test
mov
adc
mov
aaa
mov
popf
dec
xchg
idivb
jae
repnz
cmc
daa
push
lds
movsl
and
add
or
and
pop
roll
movsb
push
push
fsubl
xor
icebp
sub
pop
ds
and
inc
je
push
push
dec
dec
jge
pop
icebp
mov
xorl
sbb
loop
daa
cltd
and
jne
jle
xchg
xor
cmp
fmuls
lea
les
adc
inc
fmul
inc
cmp
movsl
out
mov
inc
dec
adc
mov
dec
iret
jle
dec
xchg
adc
push
movq
xchg
rolb
lods
xor
daa
fsubs
add
lret
jl
pop
xor
sub
xlat
sbb
push
push
mov
decb
pop
hlt
sub
and
cmpb
add
in
cmp
dec
jge
icebp
pop
loopne
mov
lret
mov
popa
or
or
popf
jnp
inc
nop
ljmp
pop
orl
fisubl
sahf
xlat
fildll
mov
ja
ja
dec
lea
xchg
jb
adc
in
fists
sub
xor
adc
jnp
mov
dec
fwait
or
jle
sub
or
push
fisttpl
test
sub
lret
cmp
movsl
hlt
dec
mov
push
mov
pop
fs
sahf
sti
lods
push
sub
sub
inc
test
sbb
out
sbb
iret
stos
out
sbb
cmpl
xchg
jg
mov
xor
cmpsl
and
addr16
adc
rcrl
xor
pop
cmovb
dec
sub
loop
cmpsb
adc
sahf
push
mov
cld
or
and
fildl
pop
das
mov
lret
lds
test
inc
fnstsw
adc
push
out
xor
inc
loope
add
leave
movq
test
pop
mov
testl
sbb
hlt
fadd
mov
scas
or
clc
daa
mov
or
es
test
mov
aaa
add
cmpl
xchg
lret
adcl
and
call
push
ss
mov
dec
repz
imul
sub
mov
fldl
fcomp
loopne
push
xchg
imul
iret
mov
xchg
push
xbegin
popa
in
xchg
add
mov
aas
pop
xchg
sar
adc
test
clc
pop
lods
pusha
jne
xor
inc
out
loop
or
adc
arpl
cmp
cwtl
adc
aas
cmpsl
push
cs
push
call
dec
or
je
insl
ret
lods
and
dec
fcoml
ret
jge
insb
mov
mov
mov
jne
mov
or
out
loop
pop
mov
adc
outsb
shll
sub
or
lret
scas
mov
xchg
jmp
fdivrp
jnp
xor
cmpsl
pop
sbb
push
mov
or
fsubrs
mov
bound
dec
popa
mov
cmp
fildl
in
inc
call
jmp
mov
lret
mov
push
arpl
loopne
es
insl
adc
or
xchg
in
dec
in
push
in
movsb
sbb
pop
insb
scas
lahf
sub
std
mov
inc
das
test
faddp
mov
adc
or
cmp
or
pop
repnz
rcl
adc
mov
mov
repz
xchg
lds
movsb
in
adc
and
dec
add
out
push
jle
outsl
shll
outsb
and
push
dec
pop
xor
and
xlat
adc
das
cmp
out
inc
adc
pop
mov
sahf
popf
push
cmp
adc
pop
adc
rcll
sbb
push
jb
xchg
push
imul
aas
test
nop
sub
fadds
sub
aas
cmpsb
sbb
loopne
push
aas
jle
pushf
mov
push
sbb
and
cld
out
lock
add
mov
dec
mov
hlt
jp
jbe
test
bound
cs
andb
pop
adc
adc
cltd
fnsave
sub
mov
fstpl
or
scas
pop
cmpsl
inc
xor
ret
int
daa
mov
in
xor
in
fchs
xchg
mov
addb
inc
pop
mov
cmc
stos
mov
xor
sbb
arpl
inc
divl
dec
imul
inc
jle
inc
pop
inc
out
mov
lret
ficoms
cmpsl
iret
in
fisubs
lcall
flds
inc
mov
xor
je
fcompl
jp
insb
shl
cli
push
and
clc
pop
mov
xchg
xchg
lods
sbb
outsl
mov
test
das
dec
ret
xchg
jp
mov
aad
push
movsb
cmc
scas
push
cwtl
cmp
mov
jl
fnstenv
push
inc
fstpt
pop
fstpt
mov
or
pop
and
stc
and
ja
dec
je
or
jb
lret
scas
xor
pop
add
xchg
add
push
pop
cs
jmp
andb
das
push
and
jp
ss
and
imul
xchg
loop
neg
aam
and
aaa
jmp
es
pop
lcall
dec
ret
xchg
pop
ret
jbe
mov
jl,pt
or
icebp
push
sub
pop
add
adc
popf
bound
mov
scas
and
je
popa
adc
push
lea
scas
sbb
push
mov
cmp
pop
xorl
testl
xchg
and
sbb
rcrb
xor
add
pop
imull
sub
mov
mov
loope
mov
mov
out
adc
nop
inc
xor
inc
mov
jmp
mov
inc
cmp
js
arpl
imul
sub
mov
lahf
xchg
push
lcall
iret
in
pop
fcomi
push
jge
enter
cmp
cwtl
je
les
ja
pushf
aam
outsb
sub
stos
mov
dec
mov
xor
inc
adc
pop
dec
xor
mov
jg
or
push
or
lret
aaa
nop
mov
jno
stos
lods
dec
adc
dec
repz
lret
pop
or
jge
push
add
xorb
jecxz
pop
out
xchg
mov
roll
pop
out
and
xchg
add
and
outsl
mov
lea
jnp
add
inc
imul
and
mov
sbb
loop
scas
cmp
shr
sbb
andb
pop
outsl
fwait
pop
aam
cmp
aam
push
sub
movsl
sbb
xor
clc
sbb
mov
daa
shrb
mov
std
sub
push
dec
cmp
jmp
jbe
shrb
xchg
pop
sbb
in
xchg
mov
daa
cmp
push
es
mov
push
adc
in
push
xorl
test
cli
cmp
jbe
pop
out
cmpsb
mov
jl
dec
mov
in
insb
xchg
ja
dec
adc
jge
add
outsb
loope
or
mov
jae
and
fmuls
inc
dec
or
dec
sub
dec
cmpsl
test
cmpb
xor
mov
lds
jne
jle
cmp
lahf
xor
shrl
pushf
lds
rolb
xchg
jo
and
push
jnp
jbe
aam
out
jle
push
inc
xor
mov
mov
int
fistpl
pop
les
in
cmpsl
js
xchg
out
or
int3
xchg
sbb
mov
bound
inc
mov
mov
cmpsl
sub
or
sahf
xor
add
addr16
pop
cld
pop
rcll
sarb
fdivrs
mov
and
mov
fstpt
pop
dec
jecxz
cmp
stos
cmp
mov
dec
stos
movsb
jae
add
in
and
movsb
addr16
mov
add
or
roll
pop
das
dec
cmp
xlat
shrb
xchg
lods
out
sbb
popa
and
sub
push
dec
push
xchg
dec
shrb
sub
into
jno
xchg
jle
fld
mov
rcll
xor
pop
cmpsl
data16
push
stos
int3
fcomps
je
lcall
scas
push
or
out
into
popa
stc
sub
pop
dec
test
dec
out
hlt
test
pop
add
pop
cmpsb
testb
sub
movsl
mov
das
cmp
leave
imull
dec
leavew
repz
mov
inc
inc
in
cmpsb
xchg
cwtl
xchg
jmp
insb
sub
rclb
aas
and
nop
mov
sbb
push
fadd
in
loope
sti
cmpsl
subl
mov
mov
adc
cld
das
les
sbb
mov
jns
lcall
push
mov
xchg
or
aaa
in
push
vandnps
pushf
add
sbb
push
mov
and
pushf
or
pop
inc
aas
popa
pop
mov
iret
mov
cmp
mov
es
loopne
mov
out
into
cmpsl
sub
les
mov
ss
rolb
sub
jmp
jmp
fsubs
xchg
aaa
icebp
xor
sub
jo
xor
inc
movsb
sbb
inc
imul
and
frstor
push
pmullw
mov
mov
xchg
dec
ja
push
call
cs
jo
pop
pop
sbbb
lcall
movsl
pop
pop
fidivs
enter
into
int3
mov
push
fstpl
jmp
pop
repz
into
adc
mov
repnz
xor
push
test
mov
or
sub
mov
sub
movsl
ljmp
rorb
mov
pop
ret
mov
iret
daa
sarb
in
xchg
orb
int
adc
or
xchg
arpl
mov
inc
ret
sbb
cli
xchg
cmp
xchg
mov
jno
push
hlt
mov
xchg
fistpl
mov
jne
mov
xchg
loop
arpl
daa
in
movsl
rcrb
pusha
fcmovnb
xchg
pop
dec
test
adc
or
sti
lahf
data16
test
scas
fistpl
andb
xchg
pop
lret
inc
xchg
scas
out
pop
push
adc
xor
rclb
loop
jb
pop
hlt
and
push
call
jmp
dec
movsb
test
or
xchg
mov
mov
add
sbb
lock
xor
mov
xor
pushl
stc
sub
test
push
outsl
push
test
repnz
xorl
mov
js
cmp
ret
js
mov
mov
mov
dec
sub
rol
fmul
cmp
lahf
push
ss
cwtl
loope
jae
cmp
jae
rcr
mov
jl
cmp
and
negb
add
orb
mov
mov
mov
xchg
push
mov
lods
mov
int
lcall
jnp
lock
sbb
jns
push
std
das
call
int3
pop
or
cmpb
mov
out
dec
dec
imul
adc
out
ret
mov
mov
in
sti
movsl
cmp
pop
pop
rolb
into
aad
xchg
push
mov
std
jecxz
and
pop
xchg
xor
dec
fdivrs
sbbb
inc
mov
arpl
mov
cmp
push
add
mov
aaa
mov
xlat
negl
sahf
cmp
sub
sub
inc
sahf
ret
daa
aam
movsb
stos
cld
mov
out
mov
add
hlt
mov
push
popa
or
sub
out
jo
shlb
into
das
mov
popa
xor
xchg
mov
xchg
stc
lds
pop
cltd
xchg
test
mov
xor
cmp
add
sarb
ja
pop
faddp
cmpsl
repz
push
cmpsb
push
into
xor
or
adc
xchg
fdivr
addr16
imul
xchg
mov
add
andl
or
sub
mov
cmp
and
inc
adc
ret
popa
incl
sbb
bound
and
adc
stc
xchg
andl
mov
xor
xchg
xor
sbbl
mov
xchg
and
test
sub
cmp
das
lock
aas
popa
xor
dec
dec
xor
mov
cmpsl
sbb
sti
mov
sahf
lcall
mov
xchg
mov
xor
xorb
adc
inc
lods
push
inc
add
dec
lahf
test
je
insb
mov
push
je
push
or
jne
cmpsl
push
sbb
dec
bound
mov
xor
scas
jb
repnz
jbe
xchg
lret
jne
dec
aaa
loope
fs
test
cld
loopne
sahf
sub
xchg
pop
nop
pop
pop
rcrl
mov
idivb
mov
das
inc
xlat
adc
sub
hlt
cmp
sarl
xchg
dec
xor
and
mov
inc
xchg
inc
mov
or
daa
adc
xor
mov
mov
xorb
mov
sub
fstl
fistpl
push
or
and
push
roll
sbb
jne
inc
pop
in
jecxz
stos
lret
mov
adc
in
xchg
popf
mov
push
sbb
lea
aaa
xchg
mov
addb
das
jbe
frstor
push
adc
mov
mov
in
clc
fimull
adc
cmpsb
nop
rol
ffree
jae
fstpl
aad
add
fistpl
scas
scas
movsl
push
dec
rcll
pop
mov
scas
stc
scas
mov
mov
out
fdivrl
or
dec
xor
xchg
out
cwtl
mov
movsl
mov
std
mov
dec
xchg
loope
sub
mov
adc
ret
adc
ficoml
jle
and
repz
addr16
daa
icebp
aaa
lcall
xor
pop
pop
movsb
or
push
enter
in
sti
push
daa
pushf
mov
push
adc
lds
or
inc
nop
out
fmuls
and
ficoml
adc
xor
inc
jle
and
cs
sub
stos
test
dec
outsl
push
aam
lahf
jb
push
sub
outsl
or
xor
push
push
jo
in
in
or
mov
ja
in
xchg
mov
mov
pusha
scas
push
jle
mov
mov
shlb
fstpt
jb
mov
popf
mov
cmpsb
push
cwtl
jae
pop
adc
test
jb
hlt
mov
cmc
movsb
imul
xchg
and
inc
mov
inc
or
je
pusha
fisttps
cmp
jecxz
cmp
xlat
jbe
add
xor
mov
dec
fs
outsl
fsubrl
push
mov
sub
and
pushf
push
inc
jp
sarl
aaa
cmpsl
cli
lea
dec
movsl
cltd
mov
addb
incl
mov
out
sbb
hlt
or
test
std
sbb
mov
xchg
in
jno
mov
push
mov
test
sbb
mov
add
repz
mov
mov
sbb
xor
mov
insl
xor
imul
lcall
sarl
rcrb
flds
push
lea
jne
and
add
xchg
adc
push
movsl
inc
adc
popa
push
orl
inc
jbe
add
ja
adc
push
cwtl
dec
fldenv
pop
adc
adc
das
in
jp
mov
clc
lods
mov
sbb
add
call
sub
mov
pop
in
dec
adc
sbb
stos
lcall
dec
test
mov
scas
cmp
jg
push
mov
inc
mov
pop
fstps
rcll
fs
rolb
cmp
cs
xchg
mov
dec
cmp
xor
cmp
jle
movsb
and
lea
jg
sti
or
xor
adc
mov
insl
and
and
xchg
mov
negl
xchg
popa
je
jmp
mov
adc
mov
lea
xchg
rcll
jo
iret
int
out
rolb
lret
mov
out
xor
cltd
push
movsb
add
inc
push
adc
fnstcw
xchg
in
popa
repnz
orb
cmp
add
push
movsl
inc
xor
out
jne
lret
sub
lret
mov
dec
ljmp
xchg
in
in
hlt
mov
std
mov
jne
sarb
ljmp
mov
xor
jb
xchg
inc
scas
lds
sbb
fnstenv
mov
mov
hlt
movntps
std
lret
ja
dec
fidivl
ja
mov
dec
lahf
xor
mov
sarl
stc
adcb
sbb
adc
stos
or
cmp
push
mov
mov
out
sub
xchg
cwtl
fdivrs
in
loope
ret
xlat
inc
jb
pop
push
or
xchg
dec
adc
jno
and
jecxz
xchg
daa
pop
fsts
shll
fsubrp
jno
mov
and
je
xor
xor
sbb
fdivl
cltd
out
sbb
adcb
sahf
sub
xchg
roll
dec
lods
xchg
lcall
iret
inc
daa
imul
cmpsl
jle
jl
outsb
fdivrp
and
in
mov
mov
int
pop
leave
cmc
xchg
mov
ret
sbb
xchg
lret
mov
movsl
fdivl
pop
and
loope
sbb
rcrl
in
push
adc
cmp
clc
lahf
repz
ljmp
lds
add
fs
add
sbb
pavgb
pop
in
xchg
rcrl
cmpsl
mov
and
adc
xchg
fs
jae
sub
push
js
lret
mov
xor
insb
stos
dec
sub
movsb
or
loopne
daa
push
jne
or
sbb
adc
scas
stos
shll
rcr
pop
mov
mov
push
xor
enter
out
data16
cmp
push
in
int3
cmp
mov
mov
cmp
inc
iret
xlat
out
movsl
and
sbb
sbb
mov
mov
mov
mov
mov
push
lret
imul
add
dec
shlb
push
mov
aad
pop
pop
cvtdq2ps
push
jns
hlt
xor
aas
enter
jle
lods
mov
and
xor
cwtl
rorl
das
call
loopne
push
fwait
push
or
xchg
out
ja
lahf
mov
cmc
jle
jbe
jb
xor
sub
es
roll
je
or
lcall
or
push
shll
ficomps
in
inc
popa
pop
dec
or
sub
xor
adc
and
repz
push
lahf
inc
out
mov
ss
mov
mov
sbb
lcall
add
inc
adc
jge
fcoms
out
adc
sahf
sbb
sub
push
cmpsb
add
jecxz
cmp
popa
push
inc
push
xchg
iret
stos
sub
mov
aaa
fstl
popa
push
pusha
aam
in
pushf
lcall
xlat
das
or
scas
in
jbe
stos
inc
push
ja
dec
pop
addr16
loop
lret
push
mov
sub
inc
add
insb
and
or
mov
xchg
dec
push
sbb
mov
mov
loopne
and
inc
sub
out
and
xor
out
xchg
hlt
je
test
lcall
shrb
lock
cmpsb
sbb
lcall
inc
xor
push
inc
push
or
into
or
es
es
testb
insl
sub
cld
xor
or
sarb
cwtl
xchg
shll
test
ljmp
sbb
bound
and
ror
inc
arpl
and
icebp
divb
dec
add
inc
addl
add
dec
mov
lret
pop
ss
inc
dec
dec
cmp
xor
mov
jb
popa
jp
loopne
in
iret
mov
xlat
fwait
push
add
mov
insl
dec
shlb
int3
pop
loop
inc
and
jmp
scas
push
pop
mov
rorb
dec
cmp
or
scas
cmp
roll
clc
fisttpll
xor
and
filds
jg
lock
std
sahf
inc
mov
int
mov
sub
das
xor
pop
lret
data16
push
inc
add
mov
add
cmp
mov
ret
mov
test
sahf
test
xchg
sbb
jg
xchg
or
int
add
dec
icebp
sub
mov
nop
mov
repz
cltd
pop
cmc
pop
xlat
mov
sbb
cwtl
push
dec
inc
mov
sbb
nop
clc
ss
xchg
mov
mov
sub
and
cmp
repnz
popa
push
push
sbb
or
jnp
fists
pop
out
mov
in
mov
dec
stos
jnp
lret
dec
popa
sar
sub
mov
rolb
ljmp
cmpsb
jae
cmpsb
jg
popf
cs
pop
cs
ljmp
rcrb
xchg
push
mov
out
push
cli
adc
ds
out
repnz
aas
orl
arpl
mov
rclb
pop
jns
lock
jge
test
cld
frstor
dec
call
shlb
xchg
mov
stos
mov
mov
pop
cld
jecxz
and
jecxz
ss
xor
leave
mov
lret
enter
fwait
adcb
loope
stos
bound
or
and
testb
dec
test
das
inc
std
and
mov
mov
pop
icebp
jns
add
push
mov
addr16
call
data16
adc
dec
je
or
pop
adc
sub
mov
mov
subb
push
jns
jnp
std
fsubrs
fwait
sbb
fsubp
out
push
jne
push
cmc
cmc
sub
test
add
ficomps
inc
pop
pop
mov
jns
jmp
movsl
lods
or
scas
push
mov
cltd
cld
scas
fimuls
shlb
inc
add
stos
mov
add
inc
dec
push
xchg
jecxz
test
sarb
sub
pop
xchg
mov
sub
jb
scas
ja
xor
popf
dec
mov
mov
or
test
sbb
xchg
or
stos
leave
out
mov
rcpps
aam
cmp
mov
push
push
push
inc
xchg
mov
and
sbb
push
jmp
jns
js
dec
xchg
dec
in
cmpsb
int
push
or
cmp
cld
xchg
inc
repz
mov
aaa
hlt
clc
mov
fimuls
clc
lcall
leave
jb
sbb
jle
cmpsb
arpl
rclb
sub
cmpsb
and
aad
inc
inc
shr
sbb
sarl
mov
mov
mul
push
bound
mov
ja
xchg
sub
push
fimuls
mov
xor
push
mov
jl
cmc
xchg
js
sbbb
jbe
sub
movb
pop
cmpsl
mov
cmp
sub
inc
fs
push
jno
fdivr
xchg
lods
push
jge
ljmp
rcrb
xlat
xor
push
inc
xor
cwtl
jle
aaa
es
adc
sbb
push
sub
outsl
out
nop
out
pop
or
sub
inc
inc
push
stos
cmp
pop
add
fsubp
jle
cli
in
movb
fidivrl
add
imul
stos
nop
es
xchg
out
shll
fs
push
mov
into
loopne
mov
outsb
push
push
mov
lahf
repnz
fisttpl
bound
inc
ss
jnp
xor
mov
mov
xchg
ss
mov
mov
cmp
in
inc
addr16
inc
scas
xor
push
bound
shll
daa
lods
jge
sbbb
sbb
cmpsl
sbb
pop
xor
xor
pop
outsl
sbb
sub
pushf
push
inc
sub
adc
sahf
out
pop
popa
mov
roll
mov
in
stos
aam
cmc
dec
push
jae
inc
movsl
mov
shlb
jp
bound
mov
or
pop
add
sub
les
ficompl
pop
cs
test
add
iret
loopne
repnz
loop
mov
mov
hlt
mov
sub
scas
pop
jb,pn
cmp
jecxz
icebp
adc
pop
jecxz
mov
sub
lock
pop
mov
arpl
fcomps
lret
iret
push
fnstsw
imul
add
fwait
pop
push
mov
movsl
test
stos
jnp
es
sbb
leave
sahf
adc
rcrb
shlb
icebp
add
aad
push
jl
test
jg
lret
dec
or
out
dec
jmp
sub
xchg
jmp
xor
lret
mov
ret
push
aam
jmp
pop
sarl
mov
mov
test
jnp
outsl
test
adc
out
rcr
mov
push
xchg
in
cld
loopne
outsb
test
cmp
std
test
or
jle
push
sub
loop
xor
and
xchg
negl
or
inc
mov
sbb
ficoml
daa
adc
and
mov
and
xor
fisubs
xor
fdivrs
cmpsl
jne
pop
fisttpl
push
lock
add
popa
xor
leave
dec
rol
sub
xor
je
in
jle
fdivr
hlt
insl
inc
add
cmp
rclb
ljmp
lods
and
mov
lret
imul
push
ret
inc
xor
repnz
mov
loop
add
loopne
ss
cwtl
mov
int
icebp
mov
je
arpl
fwait
mov
stc
loope
xchg
dec
jne
adc
int
jecxz
xchg
and
lcall
pop
jno
imull
sub
mov
cmp
pusha
scas
push
adc
aam
cli
cwtl
insl
jmp
hlt
mov
sub
mov
mov
and
add
xchg
call
aam
hlt
dec
out
sti
loope
xor
aas
lahf
dec
jp
cmp
cmp
mov
add
dec
jle
fstpt
pop
pop
pop
push
loope
mov
test
jl
xchg
ljmp
pop
cmpsl
fimull
sbb
xchg
mov
ss
cmc
sbb
pusha
sub
pop
or
pop
mov
int3
mov
xchg
xorb
xor
mov
mov
in
cmp
add
push
mov
dec
dec
std
cmp
push
xor
dec
addl
inc
adc
push
movsl
ljmp
pop
fwait
xchg
push
xchg
mov
add
lret
xchg
add
sahf
shll
jae
out
push
mov
ror
cld
and
daa
adc
xor
or
ss
push
cs
mov
aas
dec
mov
mov
cs
test
push
cld
push
shll
sub
inc
jno
clc
jmp
cmp
cmc
std
sbb
std
icebp
push
lret
outsb
mov
mov
and
popa
cltd
and
xor
cltd
out
xchg
mov
in
pop
fadds
mov
loop
push
sbb
getsec
fsub
mov
mov
cmp
fcomip
xchg
in
xor
stos
pop
imul
aaa
mov
xchg
loope
jmp
add
pushf
and
fstl
sbb
movups
filds
push
shll
xchg
std
scas
mov
scas
pop
jge
lret
sti
out
cmpsl
cmc
adcb
add
dec
bound
test
xchg
shll
push
or
inc
ret
sbb
call
fcoms
sbb
dec
sbb
outsb
push
jge
sub
lahf
iret
les
xchg
mov
mov
not
xlat
push
sbb
fcmovnu
out
or
mov
imul
jecxz
lcall
mov
enter
mov
add
into
sub
imul
push
pop
jg
jns
cmp
mov
mov
add
popf
and
or
xchg
movsl
mov
pop
push
cld
inc
mov
cmp
repnz
xlat
test
pop
sbb
stos
adc
inc
mov
mov
add
hlt
push
rcrb
xchg
pushf
pushf
push
mov
sbb
mov
adc
fiaddl
mov
mov
jb
xorb
push
lahf
cmp
es
fsubs
imul
pop
xor
daa
pop
adcb
mov
push
stos
es
frstor
push
imul
mov
cmc
dec
push
aam
call
or
fnstsw
jmp
scas
in
sbb
and
xchg
push
fmuls
mov
or
aad
add
aas
iret
popa
bound
sbb
mov
call
and
mov
mov
out
push
jg
sub
inc
inc
faddp
jb
mov
std
inc
popa
lahf
and
scas
aam
and
fbld
inc
mov
cltd
out
js
push
das
jns
push
jge
popf
mov
lock
add
jnp
rcl
xchg
pop
out
and
adc
pop
fs
inc
inc
adc
hlt
dec
sarb
jne
push
inc
push
hlt
or
pop
push
pop
lock
ja
xchg
js
push
or
hlt
andb
xor
fildll
or
testl
pop
ss
in
loope
cmp
jle
data16
insb
push
push
sbb
lds
scas
daa
cli
mov
add
orb
jle
sub
xchg
push
pop
call
cwtl
push
push
adc
arpl
pop
test
jge
test
insb
shl
jbe
in
mov
adc
or
aas
loopne
push
sahf
pop
loopne
adc
adc
insb
pop
pop
rclb
xor
mov
gs
ret
movsl
add
xor
push
adc
jl
or
xchg
rcll
or
xchg
add
sbb
daa
mov
sub
xor
mov
lcall
in
xchg
pop
hlt
mov
cmpsb
cmp
arpl
test
stos
mov
jne
sbb
roll
in
shrl
jp
outsb
jno
and
cmp
push
jae
push
arpl
xor
aam
mov
mov
je
pop
and
cmp
bound
cmpsl
inc
aas
inc
cmc
stos
idivl
push
pop
fcomps
push
inc
test
pop
paddd
lcallw
adc
call
sub
std
movsb
push
mov
jne
cmp
mov
fwait
mov
push
pop
mov
mov
cmp
push
ljmp
addr16
adc
mov
daa
subb
mov
inc
leave
adc
out
pop
sbbl
mov
mov
ftst
and
mov
out
mov
fdivrp
push
cwtl
xchg
outsb
inc
dec
jno
pop
outsb
sub
adc
inc
add
pushf
mov
and
mov
lcall
mov
mov
shlb
sbb
push
je
ret
ja
xor
jecxz
imul
push
pop
ret
roll
mov
fwait
pop
or
jo
pop
or
mov
inc
mov
inc
les
mov
outsl
fcmovne
pop
fsubrl
adcb
inc
add
mov
fptan
adc
out
aam
rcr
js
adc
lock
ljmp
xchg
mov
push
lock
mov
pusha
inc
sub
push
inc
ja
sub
mov
ljmp
fidivs
enter
cmpsl
mov
ror
push
pop
aaa
fldt
sbb
cmp
jl
push
dec
xor
jmp
push
dec
aas
aad
jge
cmpsb
mov
dec
in
push
ret
cmc
push
mov
sub
in
jmp
mov
adc
repnz
jae
xor
jp
and
add
mov
scas
imul
push
lahf
xchg
push
push
cmpsl
push
aaa
stc
hlt
lods
stos
xchg
clc
pop
notb
xchg
lret
imul
xchg
fs
xor
add
or
pslld
insb
xor
sbb
lcall
sahf
add
incl
push
clc
push
cld
xchg
dec
jbe
add
xchg
adc
lods
sub
jno
pop
adc
movsb
cmp
xchg
push
sbb
jmp
xor
xchg
lahf
mov
sahf
idivb
mov
xchg
jle
and
sub
adc
loopne
imul
popl
daa
out
outsb
lret
je
dec
ret
scas
or
jae
jmp
add
cmpsb
push
fs
js
jne
sarl
xchg
cmp
xchg
fiadds
pop
add
shrl
cmp
inc
pop
jle
aas
xor
adc
push
add
mov
idivl
stc
sub
jns
mov
mov
cli
imul
fdivr
fistpl
aaa
pop
cltd
data16
std
and
out
lods
dec
daa
dec
ljmp
mov
fs
cwtl
daa
and
loope
jmp
push
cmp
jbe
mov
cld
push
sbb
adc
xor
stc
mov
push
in
sbbl
and
cmp
xchg
mov
cmp
std
mov
xchg
out
mov
mov
mov
mov
add
leave
stc
test
xor
imul
les
adc
iret
dec
xlat
jmp
into
stos
hlt
inc
pop
push
loopne
bound
fdivl
jecxz
fcmovnb
loopne
lret
push
mov
push
mov
xor
ret
in
int3
inc
push
mov
mov
out
adc
jnp
lods
sub
dec
pop
jne
cli
mov
dec
leave
fcmovu
insl
cmp
in
or
xor
mov
call
call
sub
mov
pop
mov
out
test
pop
cmp
push
aaa
and
pop
mov
inc
loope
sbb
in
sbb
hlt
mov
cs
ljmp
xchg
test
lods
xchg
jne
sbb
cwtl
pandn
test
xchg
push
pop
mov
lds
or
addl
lahf
leave
push
scas
push
jp
outsb
cltd
inc
mov
lret
ljmp
mov
cmp
push
in
or
imul
inc
outsl
out
and
stc
aam
shlb
mov
cmc
and
jae
mov
fisttpl
arpl
sub
mov
pop
arpl
shll
xlat
push
outsb
arpl
mov
push
sbb
shll
cmc
jecxz
dec
pop
daa
lock
mov
test
or
int3
jne
ja
pop
repnz
cmp
js
daa
test
aam
cs
cmpsb
leave
or
loope
and
jb
dec
jecxz
xor
xor
sbb
dec
pusha
cmp
cltd
jns
int
jb
leave
xor
int3
sub
es
pop
dec
mov
fsubl
stos
pop
iret
mov
mov
mov
stos
stos
cmp
scas
and
or
mov
sbb
stos
cmp
inc
adc
xor
jl
and
in
ds
xor
jmp
loopne
mov
mov
mov
fmulp
repnz
fucomip
xorl
xchg
push
lods
inc
add
inc
sub
insb
and
lock
mov
mov
sub
fs
fstps
push
movsl
ror
mov
pop
jg
pop
mov
imul
pop
cltd
add
or
cmp
arpl
es
xchg
daa
pop
lret
addl
sub
pop
jecxz
pop
cmpsb
repnz
cmpl
mov
pop
xor
and
dec
jl
and
jl
stos
xchg
rcll
dec
jbe
in
test
lds
fcom
add
ficomps
enter
stc
jp
push
sbb
movsb
sub
xchg
pusha
insl
sbb
cwtl
cmp
lds
lcall
mov
cmpsl
imul
shrb
repnz
push
add
sub
sbb
vpmacswd
fs
push
aas
xchg
daa
fildl
cmc
bound
loopne
popf
mov
test
leave
add
push
inc
xchg
and
add
push
repnz
scas
mov
jle
repnz
and
movsl
stos
xor
or
loopne
mov
push
jne
cmc
push
cs
mov
out
sub
test
orb
test
mov
rorb
xchg
lds
jb
sbb
jl
gs
dec
dec
push
push
repnz
leave
jg
add
mov
and
jl
mov
sbb
xchg
pop
mov
mov
xor
sarb
imul
add
and
shll
je
call
inc
ss
inc
hlt
fisubl
mov
mov
insb
pushf
lods
in
cmpsl
cli
push
push
add
insl
cld
xchg
cmp
aas
jb
and
lahf
std
gs
lret
movsb
mov
lds
stc
xor
cmp
cltd
mov
mov
nop
jmp
aad
dec
cmpsb
in
daa
outsl
jle
jae
jmp
push
push
cmc
sbb
and
mov
das
push
loopne
pushf
jno
das
cmpl
pop
hlt
push
and
aaa
imul
in
xor
adc
mov
movb
arpl
xor
iret
js,pt
ljmp
jmp
imul
mov
sbb
cli
or
dec
inc
xor
cmpb
clc
arpl
les
pushf
lods
sub
mov
je
dec
insb
es
outsl
rcll
push
test
jne
scas
sbb
sub
out
out
jge
xchg
leave
orb
lret
repz
ror
pop
mov
xor
gs
xlat
cmp
stos
les
daa
in
mov
nop
cld
lahf
jl
sbb
fsubr
jle
setnp
jp
sbb
xchg
pop
das
jmp
mov
mov
testb
ljmp
out
add
test
test
dec
xor
call
mov
addl
in
std
pushf
addr16
stc
xor
popf
in
in
fprem1
test
sahf
mov
pop
or
adc
fimull
int3
push
pop
cmc
mov
arpl
jg
btr
pop
fnstenv
xchg
or
pop
jnp
std
mov
repnz
pop
out
or
and
imul
repnz
or
ficomps
ret
jns,pt
adc
inc
mov
andb
jae
inc
sti
jg
notl
cltd
xor
outsb
mov
mov
xchg
mov
xchg
pop
cs
cmpl
mov
add
xor
jmp
pop
sbb
or
cltd
in
mov
cs
or
inc
jl
xchg
outsb
rol
insb
dec
mov
xor
das
jmp
add
imulb
aam
xchg
xchg
testb
xchg
dec
nop
int3
jbe
fnstsw
dec
divb
pop
cmpsl
add
fcmovnbe
dec
xorl
imul
mov
sbb
xorb
cld
jno
xchg
xor
adc
lret
mov
sbb
fcmovnbe
lcall
mov
push
xchg
sbb
sbb
push
inc
inc
lea
adc
bound
mov
push
sbb
inc
cmc
inc
das
shl
xchg
xor
and
sbb
xchg
and
xor
inc
ret
and
xchg
int3
sbb
fbstp
jnp
stos
adc
and
pop
test
call
int
fidivrs
sbb
jecxz
mov
jnp
ljmp
insb
mov
mov
das
inc
ja
popf
cli
ficoms
jmp
push
bnd
mov
sbb
sbb
push
push
mov
shlb
repz
jbe
and
push
add
xchg
lret
or
cmp
and
add
sbb
test
inc
fistpll
xor
adc
or
inc
inc
push
xor
cltd
pop
or
cwtl
push
fdivrl
fwait
rcrb
pop
imul
mov
adc
outsb
adc
sarl
das
mov
pop
pop
test
or
sub
call
pop
in
pushf
in
cs
add
aaa
mov
aam
inc
lret
sub
jno
and
and
mov
sub
aaa
cmp
in
adc
inc
push
xor
push
cmp
test
scas
addl
mov
jns
add
inc
push
adc
cs
ljmp
int
fwait
xlat
aad
icebp
mov
mul
and
pop
pop
fdivrl
mov
fdivs
jmp
cld
jle
int3
cmpsb
loope
mov
ret
push
add
xchg
inc
mov
test
xor
filds
jp
inc
sahf
shll
pop
inc
push
lods
mov
inc
popa
xlat
scas
sub
adc
das
popl
and
dec
dec
fs
cs
cli
test
repz
stos
lahf
pusha
data16
push
xchg
push
insl
pop
loope
orl
and
cld
jns
lahf
adc
int3
ror
fs
in
mov
pop
jb
cs
push
pop
dec
data16
fdivrs
mov
push
add
sub
addr16
movsb
xor
cmpsb
fistpl
cmp
push
mov
lahf
stc
std
inc
je
icebp
mov
push
repnz
popf
pop
cmp
inc
xchg
jl
push
subl
popf
add
aad
xchg
aas
sub
lret
xor
add
xchg
test
pop
xor
lock
in
lcall
hlt
sbb
xchg
mov
dec
pop
mov
cld
sarb
neg
aaa
lods
adc
xchg
jno
cmc
pop
xor
mov
popf
adc
pop
in
or
xchg
inc
push
cli
sub
mov
call
mov
int
lods
jb
out
push
mov
fcoml
mov
inc
push
xchg
xor
lds
je
adc
jo
in
fimull
jo
icebp
xchg
mov
mov
test
mov
mov
sarb
jg
pusha
arpl
call
push
pop
in
jg
mov
xlat
out
lods
jnp
ss
push
orb
into
sbb
movsb
adc
in
fsts
mov
shll
or
cmp
mov
dec
and
lock
pushf
inc
xchg
push
out
push
add
mov
call
nop
sub
dec
or
call
or
repz
aas
sub
and
leave
pop
ret
idivb
xor
mov
pop
sub
sbb
sahf
out
test
jbe,pn
idiv
rcll
jecxz
push
into
add
frstor
and
aas
xchg
fnstcw
test
mov
stos
rclb
cmpl
sarl
lcall
jmp
inc
fs
pop
xchg
dec
imul
adc
jp
add
pop
mov
stos
gs
fistl
mov
add
shrb
mov
push
inc
jbe
test
nop
add
push
int
out
push
popa
jecxz
sbb
xchg
jg
and
addr16
iret
nop
dec
push
dec
inc
imul
xchg
out
icebp
fistpll
inc
lock
dec
es
shl
insb
jecxz
out
out
adc
dec
in
arpl
cli
push
push
cmp
jge
icebp
mov
stc
popa
lods
jle
daa
int3
movsl
cmp
add
add
scas
aad
out
push
into
cld
mov
aaa
cmpsb
mov
imul
sbb
mov
dec
mov
push
clc
and
int
pushf
push
hlt
data16
lcall
fisubs
test
pop
leave
repz
loope
movsl
outsb
mov
push
fs
xchg
fldcw
ds
decl
sub
pop
fcoml
inc
and
cmp
and
in
in
jnp
inc
outsl
popf
ret
mov
lds
cli
dec
push
outsl
jl
clc
test
lods
adc
call
or
xchg
mov
iret
xchg
or
cld
mov
aam
pop
imul
std
loopne
in
int3
adc
inc
jnp
jns
and
adc
xchg
shl
xchg
or
cmp
adc
aas
push
mov
leave
lgs
mov
stos
mov
lea
into
sbbb
lret
into
jb
dec
xchg
inc
pop
fwait
loope
push
insb
insb
cmpsb
and
es
movsl
xor
cmpb
outsl
rcll
stos
and
push
outsb
sbb
stos
sbb
and
mov
fs
arpl
push
cmc
or
pop
jb
shrl
xchg
test
ja
xchg
scas
pop
rcll
in
out
sbb
scas
lret
mov
add
les
repz
pop
movsb
cmpsl
inc
mov
cmpsl
xchg
subl
rol
ja
test
sbb
mov
aad
movsl
xchg
push
cmc
adc
cli
jnp
xchg
push
ds
xchg
dec
jo
or
dec
cld
jo
daa
jl
jge
mov
aam
js
mov
stc
sbb
mov
push
jns
sub
cmp
lcall
int3
push
sub
xor
inc
add
pop
adcl
imul
dec
dec
push
jns
lea
sahf
in
or
dec
std
gs
fwait
xchg
mov
loop
jge
lcall
imul
xlat
cmp
in
sub
fiaddl
jnp
jo
jle
lds
mov
pusha
cld
jmp
mov
mov
imul
jne
mov
les
xchg
and
lret
stc
mov
mov
mov
sahf
pop
push
mov
and
xor
cli
mov
cmp
inc
push
jecxz
out
jmp
mov
add
mov
sbb
mov
push
jge
dec
cmc
jmp
xchg
sub
jle
add
shll
mov
pop
cmp
mov
xor
jmp
mov
je
pop
push
mull
mov
xchg
jae
jl
pop
pop
add
inc
fs
jae
shrl
leave
jae
sub
push
inc
les
push
ret
add
push
cmpsl
mov
out
xchg
push
push
mov
cmp
add
test
pop
aaa
dec
pop
jecxz
sub
stc
jmp
lods
cli
cwtl
clc
xchg
xchg
int
add
in
fs
and
dec
lods
sub
dec
sbb
push
pop
das
inc
ret
xor
pop
pop
add
loopne
or
xchg
stc
or
mov
in
pop
lock
fdivp
cmp
sbb
loop
mov
mov
push
mov
pushf
sbb
pop
repnz
cmp
sub
dec
pushf
lahf
dec
mov
fidivs
push
nop
pop
push
in
jb
mov
jno
mov
xlat
js
es
lods
test
pop
adc
icebp
rcl
push
outsb
iret
pop
jle
idivb
pop
mov
sbb
xchg
push
stos
jmp
adc
sub
enter
sti
aaa
mov
repnz
add
sarl
or
and
xor
dec
mov
repnz
xchg
rcll
mov
mov
icebp
dec
cmpsb
pushl
jecxz
orl
add
repz
sub
test
xchg
dec
mov
mov
popf
in
fstpt
pop
cld
movsl
nop
jmp
jle
cmp
test
cmp
outsl
push
push
push
fadds
mov
lret
rclb
mov
lret
cmp
jbe
dec
popa
mov
ret
sub
test
xor
cwtl
xor
xor
and
mov
fs
pop
add
mov
fwait
cmp
sbb
or
ret
add
das
sbb
movsl
fldl
lods
popf
xchg
or
pop
cmp
sub
fsubrl
dec
je
mov
fidivl
mull
dec
fcomip
or
lods
inc
icebp
test
es
sti
inc
fdivs
or
sbb
fs
lods
cmp
out
test
xchg
cli
pop
xchg
cwtl
cmp
mov
loopne
adc
fsts
les
pop
add
or
fnstsw
cmpsl
repz
add
ja
in
insb
ja
lods
shl
xor
lahf
mov
imul
cmp
push
pop
pop
xor
push
repnz
mov
inc
lea
sbb
mov
stc
movsl
insl
sarb
jp
fmul
stc
cwtl
sti
cld
sbb
adc
dec
test
outsb
aas
ret
pop
rcll
shrb
sar
clc
mov
rorb
sahf
jg
sub
loop
pop
dec
and
je
push
mov
adc
je
fcomps
pop
fldl2e
fidivl
gs
push
mov
vaddsubpd
loopne
popf
dec
rolb
movsbl
mov
inc
cmp
mov
out
xchg
mov
xchg
jp
add
fwait
pop
pop
jnp
and
or
sub
jg
scas
movsl
into
cmpb
pop
pop
xor
lret
lods
sbb
push
in
sbb
fs
add
aas
sbb
sbb
pop
xchg
dec
ror
lods
js
cwtl
push
xor
xor
repz
mov
sti
aam
sbb
in
stc
fcmovnu
test
xor
xor
mov
sub
filds
and
dec
xchg
lret
das
sbb
adc
pop
jge
mov
popa
dec
inc
enter
iret
loopne
and
nop
pop
mov
pop
push
xor
mov
xchg
mov
aas
push
enter
jns
mov
bnd
jmp
cld
mov
jb
fildll
or
hlt
mov
xchg
mov
push
inc
sub
xlat
cmc
ljmp
mov
push
inc
xchg
iret
rorl
inc
dec
add
hlt
cs
hlt
fsubr
clc
push
fstl
xor
and
popf
pop
pop
loop
fwait
add
orl
lock
xchg
popf
pop
in
lods
cwtl
jmp
lcall
push
cli
mov
loope
jns
sbb
jg
jae
in
loope
movsl
mov
adc
add
inc
and
jl
push
sti
outsb
xor
cmp
push
mov
insl
xor
stos
cmp
in
mov
rclb
add
mov
mov
mov
stc
in
sbb
notl
add
sub
fldenv
mov
mov
push
adc
jo
lahf
movsb
lcall
mov
mov
dec
shrl
push
xchg
enter
std
sub
stos
mov
and
pop
fimuls
loope
lahf
dec
mov
jge
inc
mov
hlt
pop
add
addb
les
into
and
inc
push
xor
stc
sbb
jbe
aaa
rolb
inc
inc
dec
adc
fdiv
cmp
and
idiv
test
or
pusha
jb
pop
mov
sub
loopne
and
jle
fnstcw
jl
pushf
push
sti
sbb
add
pop
push
imul
dec
lock
fwait
mov
int3
cmp
xchg
icebp
dec
jbe
adc
and
pop
mov
push
cmp
xlat
cmp
mov
es
jae
lods
add
insb
or
dec
imull
add
andl
lea
inc
in
xor
cmpsl
cmc
push
xchg
lcall
lds
addr16
adc
fisubrl
sti
xor
scas
sbb
movsl
mov
fwait
push
scas
xlat
cmp
jne
cmpsl
adc
mov
push
dec
cmp
dec
in
lods
mov
pusha
xor
dec
jns
fimuls
adc
and
clc
cmp
cld
test
iret
sarb
or
movsl
mov
xor
addr16
lahf
add
lods
mov
imul
push
cmp
fiaddl
fcomps
sub
pop
mov
mov
inc
sbb
mov
loope
mov
or
push
add
and
sbb
stos
inc
aad
push
outsl
xor
mov
pop
addr16
daa
jo
cmp
lret
pusha
xchg
sbb
cmp
inc
scas
mov
xchg
jno
jae
pushf
dec
inc
jmp
xor
movl
add
xchg
cmc
sahf
push
and
in
andb
in
xchg
inc
loopne
lcall
inc
push
xchg
inc
scas
add
jnp
insl
ror
faddp
push
mov
sub
dec
xchg
aam
pop
push
imulb
mov
jp
fistpll
insl
mov
call
lahf
jmp
sub
fidivrl
xlat
mov
pop
mov
sarl
pop
cmpb
dec
imul
pop
push
xchg
les
mov
jb
cmp
ljmp
add
push
std
ret
add
movsl
mov
jno
int3
fcoml
ss
fs
mov
cli
and
fsubrl
xchg
lahf
mov
mov
movsb
or
adc
pop
add
and
out
mov
jbe
push
mov
shll
xlat
mov
dec
jmp
pop
lcall
ret
add
icebp
dec
dec
and
xchg
sub
lret
dec
mov
push
pop
aad
arpl
xchg
sbb
mov
dec
pop
push
xor
dec
sbb
mov
mov
dec
aaa
pop
clc
clc
test
sbb
cmp
mov
fwait
add
ds
insl
or
xchg
imul
nop
mov
or
vmovlps
aaa
push
add
je
popf
int3
stos
add
pop
mov
push
insb
into
dec
pop
in
push
adc
cmp
rcr
dec
or
sbb
mov
call
cld
push
popa
mov
xor
popa
and
or
arpl
iret
push
adc
cmp
push
xor
mov
popa
aam
sub
sbb
xchg
inc
xchg
fiaddl
sbb
push
mov
call
dec
jecxz
sbb
imul
fs
or
sub
fdivl
cmpsb
mov
rcll
xlat
push
mov
mov
out
mov
cld
and
jecxz
sub
jecxz
lret
push
cmpsl
sbb
add
je
dec
xor
inc
icebp
pop
adc
in
out
mov
push
xor
ja
inc
mov
xchg
movsb
pushf
sbb
stc
jb
lret
jle
add
push
rcll
fidivrl
cmp
or
or
xor
mov
mov
lds
sahf
sti
dec
jbe
mov
fdivs
int3
push
push
or
out
pop
movsb
mov
add
jbe
mov
pop
js
inc
mov
sbb
in
data16
fcomps
inc
in
jns
das
sub
mov
xor
and
pmaxsw
xor
or
mov
lahf
shrl
add
pushf
mov
lret
mov
adc
aas
sbb
add
lock
cli
adc
sub
dec
dec
lret
xor
xor
lcall
sbb
arpl
inc
pop
pushf
mov
out
mov
jns
lret
pop
subl
adc
sub
pop
out
push
lds
sbb
hlt
sub
sub
xor
jl
mov
insl
inc
inc
inc
outsb
mov
lds
aas
push
lret
or
cmpsb
lea
xchg
and
xchg
adc
jb
bound
scas
inc
push
cmp
sbb
mov
xchg
in
ds
or
psrlw
cmp
adc
fs
mov
loopne
cmp
cmp
mov
dec
ljmp
mov
adc
xchg
push
dec
add
aas
pop
sub
mov
xchg
mov
lret
push
inc
dec
xchg
mov
mov
cwtl
in
cmp
jo
mov
mov
test
mov
lret
sbb
lret
add
mov
loopne
lds
cmpsb
jne
mov
add
mov
iret
das
lret
or
in
mov
jge
mov
inc
insl
loope
xchg
xchg
push
mov
stos
lds
orb
mulb
lahf
and
cmpl
or
arpl
or
lds
dec
dec
jl
dec
mov
pop
pop
inc
inc
xchg
stos
mov
or
lds
rclb
inc
xor
shl
icebp
pop
xorb
fs
sahf
mov
repnz
mov
mov
cli
push
xchg
sti
sbb
loopne
push
std
iret
in
aaa
bound
lcall
push
xchg
leave
test
push
pop
test
xchg
mov
mov
sbb
pop
push
xlat
test
in
insb
mov
mov
add
mov
out
std
sbb
aam
das
lods
fwait
cmp
pop
cmp
ror
or
fwait
movsb
jb
loop
xchg
sbb
data16
idivl
inc
mov
jno
mov
stc
pop
mov
jmp
stos
hlt
fidivs
jb
aam
addr16
sbb
in
mov
gs
adc
cmp
mov
xchg
dec
sbb
dec
je
pop
inc
jb
xchg
jno
jmp
pop
orb
jecxz
push
sbb
adc
and
push
mov
ljmp
shrl
nop
inc
dec
push
mov
mov
loop
mov
out
lret
sbb
jecxz,pt
mov
xor
push
pmovmskb
push
sti
xor
lcall
nop
lea
jp
inc
roll
fdivr
addl
jecxz
mov
xor
sbb
dec
stc
jle
adcl
cltd
jle
nop
cltd
sub
std
aam
dec
push
sub
inc
pop
xchg
fildll
iret
lcall
jge
scas
mov
xchg
stos
mov
dec
jle
inc
scas
mov
movl
test
xor
mov
mov
stos
shlb
outsb
je
push
mov
xor
mov
ja
lret
inc
sbb
xchg
negb
lret
subl
xchg
outsb
pop
xchg
sbb
sbb
leave
test
int3
sub
imull
fs
lahf
sti
subl
jmp
mov
add
es
xor
js
sbb
jne
subb
pop
xlat
or
xchg
push
mov
sbb
ret
jl
pop
pop
xor
lahf
js
std
das
inc
inc
lret
xchg
sti
or
push
int
mov
mov
add
jecxz
and
ds
dec
xorl
sbb
das
fmuls
fisttps
push
je
stos
push
mov
sub
or
mov
out
mov
and
mov
test
xor
sbbb
out
ret
pop
sub
mov
jmp
outsb
add
push
jbe
add
xor
xchg
push
pop
in
xchg
push
mov
rolb
out
lods
mov
in
test
sbb
scas
cmp
gs
lret
nop
les
inc
aas
int3
movsb
adc
movsb
mov
shl
xor
jecxz
lds
sarl
add
lea
neg
jnp
inc
lock
sub
mov
sahf
or
popf
mov
test
imul
movsb
imul
push
int3
xor
scas
movsl
cmpb
or
mov
loop
sbb
pop
push
movsb
sbb
aad
mov
fldln2
ficoms
ficoml
jg
inc
push
pop
xor
xor
push
les
pop
rorb
xchg
ds
test
lret
xchg
and
into
loopne
and
jecxz
cmp
or
ja
shrb
xor
xchg
in
dec
repnz
ret
mov
mov
cmp
jo
or
jmp
and
dec
mov
add
rolb
bound
mov
iretw
adc
dec
jp
outsb
adc
test
in
jae
add
inc
pushf
fisubrs
fnstsw
pop
icebp
fsubrl
mov
xor
arpl
fstpl
xchg
fmuls
fmull
out
in
aaa
add
xchg
ljmp
dec
push
fbstp
addr16
sub
fists
fadd
push
pop
jge
xchg
or
mov
push
mov
retw
jl
lock
pop
testl
ljmp
pop
loopne
jae
push
push
pop
and
iret
inc
push
ja
dec
shl
or
ja
leave
push
sbb
mov
mov
insl
std
cs
push
xchg
pop
pop
clc
push
jbe
lods
mov
cmp
and
repnz
nop
jle
ja
insl
mov
fnsave
xor
cld
in
shrb
mov
cmc
lods
std
inc
push
arpl
jp
inc
pop
js
jecxz
xchg
inc
imul
push
into
fnstenv
mov
ljmp
imul
imul
xorl
pop
test
das
push
out
test
adc
lds
into
lock
push
or
mov
aam
add
sti
push
cmpsl
lret
mov
imul
gs
cltd
or
xchg
addl
cmc
mov
inc
add
inc
pop
cld
movsl
add
dec
jae
cli
jo,pt
jg
inc
sahf
xchg
test
lock
or
test
lret
xchg
and
jmp
xor
outsl
sub
daa
push
cmp
jo
movsb
push
dec
out
xchg
push
lret
or
jae
add
push
pop
mov
repz
sbb
dec
and
mov
out
mov
or
pop
sti
mov
rcrb
repnz
jnp
lret
push
mov
rclb
cmp
add
in
stos
xchg
fwait
mov
iret
push
push
mov
pop
pop
out
or
cvttps2pi
gs
aad
xchg
inc
jle
xlat
repnz
stc
out
ljmp
cld
imul
dec
mov
xor
hlt
rcrb
jmp
mov
pushf
inc
dec
pop
jmp
arpl
jp
aam
loopne
cli
sbb
test
mov
push
and
push
dec
pop
sub
sub
cmp
push
aaa
push
jp
mov
out
pop
stos
lcall
pop
aas
xchg
push
daa
push
loopne
aam
pop
push
push
push
hlt
insl
cmc
int
stos
mov
dec
imul
push
cmp
inc
or
cmpsl
adc
shlb
cmpsl
push
jmp
cmpsb
orb
sub
push
adc
repnz
stos
inc
adc
xchg
pop
pop
push
les
mov
lret
dec
mov
sbb
xchg
add
jbe
or
in
cmp
andl
xchg
push
and
lea
mov
jne
xchg
clc
filds
push
cmp
rolb
dec
jg
inc
stos
adc
add
cmp
sub
add
arpl
out
mov
gs
daa
ret
repz
lahf
inc
add
add
addr16
add
inc
in
shrb
bound
rcl
mov
sarl
loope
movsl
cmp
xor
xor
imull
mov
sub
push
pop
stc
repnz
xchg
js
xchg
in
repnz
jmp
mov
mov
adc
push
test
int3
test
popf
shll
testl
lcall
sbb
pushf
adc
xchg
adc
jmp
cmpsb
je
pushf
in
mov
lahf
les
push
xchg
push
dec
jmp
lods
xchg
sub
xchg
out
dec
sahf
in
cld
call
ss
jbe
clc
movl
ds
add
testl
jb
mov
data16
pusha
sbb
xor
insl
in
push
mov
mov
and
sub
inc
jp
mov
jmp
jbe
or
mov
or
fisttpll
or
fnsave
xchg
jge
pop
inc
or
jle
pop
push
ret
mov
insb
add
aas
in
insl
shll
inc
out
enter
mov
repnz
in
cld
pop
loopne
xor
imul
lods
sbb
xor
or
stc
xchg
or
xchg
mov
shrb
mov
push
xchg
push
loopne
jle
popf
dec
xchg
inc
cmc
mov
mov
addb
cmpl
adc
jnp
adc
out
pushf
adc
fwait
outsb
aaa
cmpsb
push
in
jns
lret
addr16
insb
iret
inc
cmp
add
int
jae
lcall
dec
pusha
arpl
test
lcall
imul
jns
and
aas
sub
stc
in
pop
mov
dec
test
dec
imul
imul
push
movsb
fcmovne
test
sbb
je
js
imul
mov
mov
mov
ljmp
push
arpl
lcall
and
fs
enter
jg
lcall
jle
rcrb
out
sub
mov
ja
pop
pushl
popf
js
insb
or
leave
in
test
jle
mov
add
mov
shrl
das
jl
clc
js
aad
and
hlt
push
arpl
daa
bound
or
push
mov
lcall
repnz
iret
stos
and
aad
in
fwait
sub
mov
fsubl
into
mov
mov
pop
mov
sbb
push
pop
push
dec
fiaddl
push
repz
push
or
pop
mov
mov
dec
nop
pop
es
popa
mov
dec
out
sarb
inc
ja
test
sub
cmc
fstl
fdivrs
cwtl
test
rcrl
mov
repz
sti
imul
adc
rcl
and
dec
je
clc
enter
cmp
je
incl
in
testb
roll
mov
shll
sub
int
push
popa
mov
loopne
cmp
loopne
xchg
or
mov
pop
lea
mov
or
adc
jo
out
xor
sbb
or
sub
aam
push
lods
aad
xor
and
fcmovnbe
cltd
mov
out
out
push
mov
mov
mov
push
fildll
lret
subb
add
lahf
in
mov
xor
pop
push
pop
aam
pop
nopl
fdivrs
icebp
fcomi
dec
jno
pop
fsubs
push
stos
or
cmp
mov
loope
lods
and
out
inc
stos
mov
fs
jg
dec
xchg
sub
shrl
mov
pop
mov
jbe
gs
aam
das
sub
loopne
push
popf
xor
cmpsl
sahf
fs
ja
xor
movsl
inc
push
adc
outsb
stos
mov
mov
popf
insb
flds
mov
int
insl
pop
mov
pop
subl
sub
cltd
dec
mov
dec
xor
jecxz
test
test
push
ja
sub
mov
sub
leave
scas
mov
mov
xor
ret
fucomip
lea
sahf
dec
adcl
xchg
test
test
pop
imul
sub
pop
and
jo
push
xchg
pop
xchg
addr16
idivb
xchg
hlt
cwtl
push
push
jno
xchg
movsb
mov
scas
es
int3
dec
shrl
cs
xorb
dec
jns
daa
and
ret
lds
cs
js
and
xchg
and
pop
in
lret
test
outsl
imul
adc
adc
jmp
fildl
dec
incb
cmc
loope
cld
jne
dec
jp
pop
ficompl
aad
sub
mov
cmc
sahf
jge
faddl
xor
popa
push
sub
add
and
add
dec
cld
out
popf
ret
push
and
inc
fdivs
cmpsb
ss
pushf
add
outsb
xchg
fdivl
pop
pop
sub
mov
or
rcrl
insb
push
add
push
dec
repz
jb
aas
cmpsl
rclb
inc
int3
pop
adc
aaa
sub
cmp
fists
sbb
lds
lods
in
sub
scas
imulb
stos
xchg
fwait
jb
lret
fwait
mov
inc
out
aaa
les
and
das
pop
sub
std
rcll
push
inc
inc
sbb
mov
pop
pop
sbb
aas
flds
push
jmp
iret
sub
xlat
out
enter
sub
ljmp
mov
mov
dec
adc
push
jns
subl
sarb
mov
push
xlat
jp
dec
mov
mov
jns
movb
inc
mov
insb
sub
dec
stc
out
icebp
add
das
pop
add
addr16
mov
sbb
in
out
stc
insl
xchg
jno
dec
inc
int
cli
pushf
sub
lret
outsb
and
jno
mov
mov
outsb
aam
pop
jo
jl
in
je
xlat
cmp
in
or
dec
cmpsb
add
lret
xchg
pcmpeqb
fdivs
loope
std
icebp
adc
cmp
dec
pop
push
inc
sub
icebp
inc
insl
das
push
push
fwait
xor
icebp
mov
lods
jmp
aad
sub
loopne
add
jb
jb
adc
inc
out
pop
pop
rol
or
add
test
push
xchg
adc
sub
or
xlat
or
test
lcall
cmc
lahf
in
loopne
mov
test
mov
cmp
sub
pop
mov
lods
outsb
inc
cmp
imul
out
xor
and
xor
iret
jge
out
and
daa
dec
lock
inc
and
ficoms
lock
add
bound
cmp
popa
mov
js
test
mov
push
or
popf
pop
inc
and
xlat
xor
lret
es
frstor
dec
add
nop
dec
es
dec
xchg
push
jne
and
adc
push
push
popa
ljmp
mov
les
push
jle
xchg
sbb
xchg
sub
in
bnd
pop
mov
mov
cmp
sbb
add
xchg
sti
xor
sbb
lods
jle
cmp
push
or
ds
add
int
cmp
fiaddl
pminsw
in
setp
bnd
shr
lock
std
pop
out
ljmp
pop
inc
cmpsl
fwait
cmp
mov
outsl
sbb
jg
mov
imul
lahf
mov
shll
inc
mov
mov
out
insb
sbb
lcall
push
cmp
cmpsl
in
mov
jle
and
pop
out
add
fsts
rcrl
hlt
adc
xor
cmp
rorb
adc
and
in
jns
out
or
jmp
lret
sbb
xchg
ret
pop
pop
imul
notb
and
sbb
adc
sahf
idivl
shll
pusha
loop
sarb
pop
vpminsw
jg
mov
mov
adc
adc
stos
jne
push
and
mov
xchg
mov
out
push
enter
xchg
xor
scas
xchg
stc
ljmp
mov
adc
xchg
sti
fldcw
xchg
xor
aam
or
push
add
test
adc
lods
push
inc
add
lds
mov
fwait
pop
aam
sarl
sub
push
add
out
pop
daa
dec
inc
cmpsb
cmp
xchg
push
push
mov
negl
mov
sbb
leave
in
sbb
xchg
hlt
or
divb
jecxz
stc
imul
pop
push
pop
push
adc
xchg
xchg
mov
jl
subl
test
cwtl
insl
divb
dec
adc
clc
fisubl
int3
outsb
mov
inc
xor
xchg
jmp
push
lock
add
pop
and
jne
scas
stos
push
out
aaa
jb
mov
sub
add
mov
addb
divb
mov
ss
cmp
aas
stc
ds
aaa
xor
cmpsl
iret
pop
push
jmp
fwait
xor
mov
jnp
ljmp
jae
nop
int
jmp
or
lcall
dec
pop
or
cmc
xor
push
in
aaa
fbstp
negb
xor
aas
inc
aad
dec
rolb
mov
outsb
mov
dec
orl
pop
fwait
push
movsl
pop
clc
xchg
ret
dec
fmuls
xchg
lods
dec
movsb
in
mov
xchg
xchg
pop
mov
je
and
rcrb
mov
mov
add
adc
inc
notb
test
fsubrl
aad
roll
pop
rcl
push
cmp
ljmp
push
jb
dec
sub
xchg
fucomi
test
pop
xchg
cmpsb
fdivs
ficomps
add
fwait
sub
test
or
jbe
addl
pop
gs
je
dec
es
imul
in
xor
loopne
mov
pop
mov
dec
jg
cmp
fnstcw
ss
mov
xor
in
jmp
sti
out
sub
jg
lcall
imulb
pushf
inc
sarl
push
mov
or
pop
inc
or
pop
pop
or
dec
jmp
sub
pop
shlb
mov
es
dec
invd
in
std
jmp
cmp
sbb
pop
mov
push
jge
or
cmpl
into
iret
inc
in
je
xchg
imul
loopne
insb
xchg
iret
movsb
fld
pop
enter
je
adc
sahf
pop
cwtl
adc
stos
vpsrld
mov
adcb
mul
xchg
ljmp
xchg
adc
fisubl
xor
fs
jmp
fstl
outsl
movsl
rcl
xor
ret
sarl
cmpsb
push
enter
stc
cmp
add
lods
bound
popa
adc
mov
jno
les
je
jns
popf
test
jnp
js
mov
mov
cmp
push
out
mov
dec
in
out
lahf
mov
mov
mov
fwait
add
push
cmp
outsb
mov
out
push
dec
push
sub
inc
or
mov
xchg
mov
inc
out
rorl
pushf
faddl
push
dec
adc
ljmp
dec
js
gs
jo
imull
adc
in
int3
loopne
jg
pop
xor
jbe
out
xor
inc
push
pop
inc
xor
fs
mov
jg
jns
sbb
mov
leave
sub
mov
sete
cmp
test
pop
test
test
mov
pop
or
enter
inc
add
mov
test
adc
stos
hlt
in
sub
call
pop
pop
insb
inc
in
imul
andl
sbb
and
pop
push
xchg
loopne
dec
sub
mov
loopne
int3
in
rcr
cmp
hlt
sub
or
lcall
jge
subb
push
push
mov
mov
aaa
mov
mov
es
pop
xchg
push
bound
sub
decl
sub
fsubrp
mov
or
inc
lret
std
xor
sbb
enter
cmc
cmp
jb
inc
mov
add
push
ja
pop
xor
int
or
mov
arpl
push
pop
xor
scas
cli
push
cmpsb
sbb
bound
rcrb
xchg
int3
jp
add
add
and
inc
pop
cmp
add
test
sahf
fists
adc
mov
pop
and
push
xor
sbb
insb
lods
lss
hlt
or
mov
movsb
inc
repz
sbb
sbb
push
push
ret
test
mov
mov
cmpsl
fists
dec
ja
xchg
jb
cmp
nop
sub
cltd
dec
add
in
nop
pop
adcb
jle
int
cmpsb
sbb
sbb
shrd
adc
cld
lahf
add
test
pop
mov
dec
cmp
insl
jno
lret
add
arpl
dec
pop
sbbb
mov
jmp
pop
pop
outsl
and
mov
cld
xlat
jmp
cmp
mov
adc
cld
jg
pop
inc
cmp
dec
inc
dec
lcall
fadds
gs
ret
loopne
mov
int
cltd
mov
mov
xchg
pop
into
int
fdivl
adc
jecxz
out
dec
dec
mov
mull
das
into
jbe
outsb
push
pop
push
mov
dec
xchg
out
xor
xchg
sub
scas
adc
sbb
loop
mov
popa
inc
push
sbb
push
adc
ss
out
test
add
das
jp
fdivs
mov
push
jno
scas
xchg
fsub
cmp
fs
scas
xchg
jno
cmc
xchg
nop
adc
rcl
pop
push
rolb
adc
xchg
outsl
sbb
pop
ds
and
pop
xchg
icebp
pusha
push
fldl2e
xchg
mov
xor
cli
jge
jl
pop
pop
out
inc
mov
push
mov
xchg
sub
fst
notb
cmp
sbb
sbb
cmp
xchg
mov
insl
jno
lods
test
adc
movsb
cltd
dec
shlb
rcrb
inc
cmc
mov
imul
and
push
scas
roll
sahf
jno
xchg
push
xchg
xchg
andl
cs
stos
mov
add
movsb
adc
or
sbb
dec
inc
jae
xchg
push
cwtl
ror
cmp
xchg
adc
in
inc
fcoms
inc
and
fcmove
mov
jns
mov
jp
roll
adc
in
aam
lahf
adc
std
xor
sti
aaa
mov
add
xchg
pop
xchg
sub
je
dec
int3
jns
sub
loopne
scas
sub
std
adcl
and
mov
mov
xchg
mov
cmp
nop
loop
jp
add
loope
test
dec
jne
mov
mov
test
jl
add
jne
out
fldl
pop
jne
imul
xor
fidivs
sti
repz
cmp
loopne
pop
pop
fsubrs
out
pop
lods
cmp
repnz
sub
xchg
xor
xchg
shlb
stos
aad
loopne
aaa
push
faddl
pop
mulb
shll
nop
enter
xchg
fwait
pextrw
xchg
les
jae
in
mov
mov
xlat
mov
mulb
xchg
lds
and
push
push
jg
push
out
push
xor
xor
iret
xchg
jl
enter
push
insl
jae
cmp
movsl
out
and
cs
adc
adc
nop
sbb
iret
adc
aas
nop
mov
xchg
rcr
call
mov
scas
cmp
ficompl
ror
pop
cwtl
and
mov
and
out
gs
jmp
adc
cld
pop
jg
jecxz
lret
mov
fisubl
adc
enter
mov
mov
aaa
xchg
mov
push
pop
out
add
jmp
xlat
lahf
popa
jae
push
sbb
in
lahf
pop
sub
test
lret
xchg
adc
pop
gs
test
ror
xchg
jne
nop
push
scas
addr16
repz
pushf
push
adc
cmp
xlat
xor
in
fsubrs
jge
cmp
mov
mov
or
mov
addr16
push
xchg
adc
arpl
subb
push
inc
addb
adc
inc
sub
bound
jb
inc
shlb
test
mov
add
mov
aad
or
cmc
xor
lds
sahf
insl
xor
sub
clc
xchg
pop
dec
outsl
mov
gs
nop
adc
in
xchg
lock
push
jmp
sub
pop
or
jecxz
int3
lea
scas
sti
lea
add
lret
in
mov
lret
add
mov
leave
xchg
push
inc
or
sbb
push
jns
out
mov
push
pop
jge
in
test
add
xchg
jnp
xor
sbb
lea
cmp
mov
push
jge
or
inc
andb
push
add
cmp
into
lock
pop
adc
or
dec
xchg
xlat
leave
mov
push
hlt
cld
fstpt
xchg
jge
jg
jb
adc
mov
fs
pop
jne
jno
mov
xchg
xchg
and
lds
pop
leave
out
xchg
and
xchg
scas
out
inc
jle
jecxz
xlat
das
aas
xor
int3
inc
push
in
sub
ret
arpl
outsb
imul
aas
dec
or
lret
add
jg
and
stos
mov
xchg
imul
cmp
call
push
clc
lret
and
jnp
cmpsb
push
jl
xchg
cmp
rclb
mov
add
stos
fistl
mov
addr16
adc
iret
push
adc
push
jle
icebp
mov
pop
push
jmp
and
lock
popf
jns
xchg
jmp
cmpsl
mov
jle
and
mov
push
push
xchg
mov
rorl
jle
inc
adc
bound
sub
test
cmpsl
outsl
test
mov
and
in
push
cli
and
popa
and
jne
add
test
adc
pop
inc
imul
fld
lods
test
xor
cmp
stos
popa
shll
pop
mov
push
lcall
popf
int
sbb
mov
popa
inc
testl
rcl
aas
mov
subb
mov
xor
push
push
cld
cwtl
cld
pop
sbb
mov
shll
jo
aas
mov
jb
inc
xor
dec
pusha
push
cld
xchg
cmpl
inc
int3
lret
mov
mov
mov
jnp
fsubrs
mov
les
enter
fisubrl
rcrb
out
cmp
sub
mov
sub
imulb
add
test
jb
xor
push
in
add
sub
push
shr
push
push
xor
leave
xchg
xlat
xor
pop
cmp
fdivrs
cmpsl
sbb
sub
inc
add
mov
inc
mov
out
aam
insl
loopne
fimull
inc
push
push
adc
popf
xor
jmp
adc
xchg
sbb
pop
gs
add
pop
mov
insb
push
stc
push
loopne
loopne
pop
js
push
xchg
movsl
xor
jmp
and
jae
jnp
ret
inc
xchg
add
mov
cmpsb
jg
xchg
cs
and
cmp
lret
leave
ljmp
sub
cli
mov
mov
mov
andb
jno
sub
je
push
jle
imul
inc
add
js
xlat
add
sbb
mov
mov
add
mov
lret
mov
shrb
cmp
shlb
mov
push
insl
js
jle
mov
ret
ret
stos
cwtl
push
and
lock
fidivrl
lret
movsb
and
mov
ljmp
xchg
pushf
pop
pop
or
push
stc
xchg
rcll
inc
dec
xchg
test
mov
xor
sbb
cld
pop
mov
faddl
popa
pop
mov
pop
or
into
push
push
sub
sbb
ficompl
cs
xor
fcoms
dec
inc
das
jle
jp
cmpsl
add
pop
xor
inc
jl
aad
cmpsb
imul
inc
inc
inc
testl
pop
mov
movsb
aaa
jo
cltd
ljmp
mov
movups
sub
mov
xor
pop
sbb
xchg
cli
mov
mov
adc
push
mov
in
or
mov
cmovo
lret
pop
and
lea
cmp
mov
mov
xor
inc
xchg
outsl
add
mov
mov
inc
clc
and
out
int
jne
sahf
hlt
lret
loope
push
pop
xor
and
and
xchg
in
movsl
nop
cwtl
fistpl
sahf
jno
xor
xor
hlt
push
xor
pusha
pop
or
dec
jae
movsb
pop
test
xchg
add
stc
mov
jb
cli
jns
dec
pop
js
lock
jbe
push
sbb
pusha
lret
mov
xchg
ret
jno
mov
jns
pop
lret
dec
sub
jno
adc
ja
jns
pusha
mov
jp
dec
sub
je
jmp
xchg
rcll
jg
pushf
jle
ret
aaa
adc
adc
mov
mov
mov
sbbl
aas
mulb
sbb
mov
jne
cld
xchg
loopne
cmp
inc
orb
jo
insb
nop
fstl
icebp
pop
popf
pop
xor
xor
gs
das
insb
add
pop
and
mov
out
aaa
cli
mov
xor
mov
inc
cmp
test
or
jle
fcomps
mov
icebp
push
lret
xlat
int
jb
aad
sahf
xchg
and
and
add
mov
inc
xchg
xor
add
lods
inc
icebp
dec
push
faddl
or
icebp
mov
out
mov
push
lds
test
cmp
cmp
xlat
sbb
icebp
jbe
movups
and
or
mov
and
jno
or
sbb
jecxz
add
repnz
pop
cmpsb
iret
dec
out
mov
dec
mov
mov
stos
daa
fimull
mov
fnstenv
cld
in
push
dec
out
jo
inc
push
icebp
mov
je
stos
mov
cmp
xchg
ljmp
cltd
jb
mov
shlb
jne
sbb
aam
jge
adc
lods
fs
int
ror
iret
dec
cmc
ss
int
cmp
int3
mov
push
aam
shr
test
subl
cmp
and
xchg
push
push
test
enter
jg
or
or
jl
out
cmpsb
lods
shll
xor
mov
rcrb
cwtl
xchg
or
pop
mov
pop
mov
fistps
inc
gs
xchg
dec
xchg
test
mov
imul
jmp
mov
push
jno
inc
cmp
cwtl
insl
popl
std
jg
ret
jmp
jae
push
jne,pt
adc
xchg
push
pop
mov
mov
adc
dec
xchg
cmp
adc
icebp
jno
push
in
adc
mov
stc
xor
xlat
ja
push
sub
xor
mov
repz
je
dec
fld
jae
xchg
xlat
out
mov
ja
jl
pop
cmc
and
cmpsl
sub
jp
dec
jns
and
sub
cwtl
daa
dec
mov
aad
loope
mov
add
mov
sbb
sub
mov
imul
aaa
push
lret
out
pusha
rcll
loopne
daa
lods
js
psubw
cwtl
push
das
push
sbb
or
pop
pop
cli
inc
mov
xor
out
mov
jns
add
and
les
adc
dec
dec
cs
orb
lods
mov
test
adc
rcll
js
sbb
popf
test
dec
clc
pop
dec
push
imul
test
xor
sub
addb
or
mov
cs
jb
or
mov
pop
stos
add
jecxz
incl
enter
hlt
push
pop
gs
jae
aaa
iret
test
mov
add
inc
xor
jp
sar
push
adc
adc
xor
push
fnstenv
rol
cmp
lea
xchg
rolb
mov
and
mov
in
inc
in
and
stc
aam
push
inc
pop
mov
mov
in
mov
mov
push
pop
cmp
cmp
hlt
loop
mov
jnp
mov
jg
add
repz
cwtl
or
fstps
cmpsl
movsb
mov
or
mov
fcmovbe
cltd
fimuls
dec
sub
adc
sub
inc
loop
mov
aad
push
shrb
mov
dec
lret
sbb
jbe
data16
rcrb
push
loope
xchg
inc
sub
dec
enter
test
or
pop
stos
out
aam
pop
rcrl
ss
arpl
cmp
in
clc
ja
sti
lods
je
xrelease
pop
in
lods
sub
scas
scas
pop
ja
xor
sbb
daa
pop
outsb
sbb
adc
mov
pop
scas
mov
insb
sub
pusha
fstps
ret
insb
xchg
pusha
inc
dec
xor
push
aas
leave
mov
nop
inc
gs
stos
mov
dec
roll
addb
add
je
push
adc
push
aas
mov
sbb
ret
hlt
loopne
dec
loop
test
out
out
sub
test
das
jne
or
push
call
dec
mov
inc
fbld
cmp
jmp
and
xchg
aaa
call
mov
push
push
jno
leave
pushf
lds
cmpl
js
fstp
sub
cli
jg
add
ds
fcmovnb
lahf
fidivs
lea
pop
xor
outsb
mov
mov
jne
cmp
dec
mov
in
mov
aaa
xchg
stos
sbb
adc
inc
pop
movsb
out
cmc
bound
faddl
jl
lahf
sahf
jno
adc
xchg
sub
xchg
outsl
cwtl
movsl
and
out
paddsb
xchg
add
or
pop
sub
pop
push
sbb
arpl
rol
sub
shl
jbe
xor
xchg
ds
ficoms
lahf
inc
sbb
jmp
clc
fwait
mov
rcll
rcrl
inc
scas
xlat
adc
jg
adc
dec
adc
adc
aam
out
pop
dec
repz
pop
addb
add
lret
inc
insb
jp
add
add
sub
xchg
cmp
mov
mov
roll
call
addl
sbb
jbe
lods
imul
cmp
loop
mov
mov
mov
test
mov
mov
popf
gs
sub
sub
leave
inc
inc
xor
stc
outsl
stc
add
cmp
add
mov
and
cmpsl
lock
lret
xor
jo
neg
in
repz
call
mov
out
movsl
fisubl
xor
repz
add
jbe
xchg
xor
cld
jle
add
push
das
and
loopne
call
cmc
ret
jb
xchg
aad
inc
popf
xchg
fnstenv
xchg
jo
mov
cmp
adc
and
dec
xor
in
mov
aam
xchg
xchg
xchg
mov
or
push
mov
cmp
add
pop
leave
frstor
push
dec
and
repz
clc
push
sub
mov
repnz
mov
clc
rcrl
das
daa
jp
movsl
stos
insl
sbb
xchg
int3
fwait
pop
data16
fwait
pop
mov
popa
mov
adc
sbb
int3
clc
testl
xchg
test
das
cmp
cli
or
imul
test
in
shlb
adc
add
jmp
je
xchg
arpl
mov
fdivrl
xor
dec
add
mov
hlt
inc
push
movb
mov
pop
dec
jo
lahf
pusha
scas
in
mov
xor
mov
mov
xchg
and
push
add
inc
jl
push
cmp
or
addr16
xchg
add
pop
data16
ss
movsb
jbe
ficompl
lcall
jne
sbb
sarl
sub
adc
cwtl
mov
push
outsl
out
adc
js
aaa
cmp
aas
cli
add
add
je
mov
mov
in
mov
sbb
or
pop
imul
sub
pusha
out
lret
xchg
mov
subb
aam
jns
xchg
pop
aaa
std
cli
cltd
mov
jo
mov
unpckhps
mov
repz
mov
dec
pop
dec
jl
sbbb
addr16
shll
leave
mov
jo
dec
fnstsw
aas
add
pop
dec
sbb
inc
cltd
fcoms
dec
mov
shlb
adc
push
xor
lock
rcll
pop
sub
stos
mov
add
shlb
add
in
mov
jp
mov
add
mov
movsl
or
out
or
lock
into
cli
daa
subl
ljmp
add
popa
and
push
fcmovb
jbe
pop
and
cmpsl
mov
adc
sarl
cmpsl
std
out
fisttpl
fstl
popf
mov
or
cs
or
stos
add
jg
popa
stc
xchg
outsb
gs
sbb
ret
pop
inc
cmc
loope
shrl
aas
push
stos
dec
cmpsb
les
sub
orl
fmuls
imul
cmp
dec
add
xor
push
arpl
lret
adcl
mov
jo
xor
mov
aaa
data16
pop
mov
jne
sarb
cmc
loopne
and
popa
in
in
rorl
idiv
push
fnstsw
dec
jo
divb
inc
or
jmp
pop
movsb
ret
mov
jg
dec
in
pop
adc
std
mov
xchg
adc
mov
pop
loop
int3
add
adc
jmp
repz
orb
xlat
adc
jnp
or
push
sub
punpckhbw
mov
rcll
dec
or
push
mov
pushf
dec
hlt
inc
inc
jno
lods
cltd
jp
data16
popa
push
xchg
add
or
inc
cmp
scas
mov
iret
cmpsb
lea
mov
aaa
dec
movsb
je
sub
inc
push
pusha
adc
into
sub
imul
aas
out
popf
ljmp
ljmp
fwait
test
and
dec
lods
adc
fildll
jp
in
or
pop
ljmp
loope
or
fwait
add
xchg
inc
mov
xor
movsl
jmp
js
dec
outsl
lret
push
aaa
xor
pop
sbb
ja
or
lds
or
cs
mov
movsb
fstpt
aam
test
push
int3
pop
inc
loopne
add
std
outsl
loope
inc
adc
jns
das
or
mov
inc
fsubp
pop
cmp
shll
sbb
leave
or
inc
sti
xor
imul
and
pushf
add
cmpsb
jnp
fsubl
js
and
sbb
cwtl
pop
sub
pop
mov
jg
sbb
lds
mov
stos
mov
mulb
jbe
fdivrp
inc
enter
xchg
mov
inc
cmp
gs
hlt
test
mov
in
pop
or
icebp
rcll
das
loopne
and
ljmp
sbbl
aas
lods
popa
jb
cmp
out
cwtl
mov
xchg
out
mov
sub
mov
sub
and
std
push
jmp
xchg
loopne
xchg
clc
pop
loopne
sbb
movb
jmp
add
movsb
xlat
dec
inc
dec
xor
fisubrs
lds
out
int3
cld
jecxz
test
and
adc
cld
aaa
stos
mov
or
pop
jge
fldl
icebp
ror
loop
lods
fdivrs
xchg
or
lods
flds
xchg
jmp
subb
cltd
adc
mov
aam
jae
inc
mov
nop
push
nop
fnstsw
push
out
mov
push
jle
fsubrs
mov
pop
or
jg
lds
pusha
inc
jo
leave
loope
orl
and
mov
xor
psubw
lcall
in
popa
test
pop
shrl
test
jns
sbb
scas
sub
pop
or
outsb
inc
mov
or
jo
mov
pop
enter
notl
or
add
and
scas
inc
inc
adc
dec
or
push
setle
cmp
shr
mull
mov
clc
shl
lock
push
push
mov
sbb
and
jns
roll
pushf
pushf
mov
inc
decl
or
xor
mov
sti
xor
mov
mov
mov
outsb
test
mov
or
iret
push
mov
lahf
stos
imul
ffreep
inc
jbe
xor
je
sub
sub
pushf
dec
xchg
xor
out
adc
and
dec
or
pop
jnp
jae
xor
dec
dec
fbstp
fldt
lret
mov
js
js
cmp
jne
clc
add
or
sbb
dec
into
dec
sbb
test
push
iret
push
push
jae
ljmp
mov
push
cmp
lea
dec
push
lcall
lcall
enter
push
jnp
xchg
mov
fs
adc
test
lods
push
add
mov
mov
push
and
dec
sbb
adc
addr16
mov
rolb
das
or
mov
call
inc
mov
fidivrs
test
or
out
and
or
shl
cld
adc
mov
push
or
cltd
push
xor
int
clc
mov
mov
mov
add
mov
imul
andb
ret
call
mov
lret
dec
sbb
mov
xor
movsb
insb
data16
adc
movsb
add
sub
mov
addr16
es
test
and
insl
mov
aaa
in
jl
cmc
gs
add
dec
data16
inc
dec
or
in
in
es
repz
dec
jae
hlt
scas
mov
aad
fldcw
inc
mov
pop
lret
mov
aas
pop
mov
sub
lahf
mov
fbld
and
jmp
stos
repnz
bound
mov
mov
mov
jno,pt
inc
das
out
bound
mov
or
xchg
xor
je
cmp
xor
cli
mov
mov
mov
xchg
js
fmulp
imul
daa
lcall
mov
jno
cli
lock
cmp
mov
or
xchg
push
shlb
inc
cwtl
mov
inc
cmp
popf
nop
xchg
and
cmpsb
movsb
rcrl
or
stos
sub
dec
mov
pop
xchg
add
lea
dec
jle
enter
stos
inc
mov
insb
je
stos
lea
cmpb
fcoms
adc
aad
or
in
push
stos
lcall
mov
rcrb
jl
stos
add
bnd
xchg
out
jne
push
mov
insb
jns
jbe
jge
loopne
dec
xchg
pushf
in
or
cmp
add
pop
icebp
fisubrs
pop
jp
js
into
out
das
icebp
incb
add
ds
inc
adc
xchg
or
out
enter
mov
xchg
push
mov
xor
ss
mov
int3
ds
jnp
loope
dec
jl
outsl
pop
jge
cmp
inc
inc
fs
push
lret
jbe
mov
xchg
or
or
pop
dec
nop
add
push
push
stos
xchg
dec
pop
idivb
and
jmp
movsb
movsl
adc
cmp
je
in
test
push
and
stc
outsb
gs
ljmp
popa
sub
pop
stos
testb
dec
xor
out
scas
or
cmp
adc
sub
mov
iret
inc
xchg
push
iret
adc
add
in
mov
xor
or
sub
mov
pusha
shrb
into
or
mov
insb
mov
sub
mov
jnp
inc
xorb
sub
pusha
inc
inc
lahf
add
lahf
cmp
outsl
pop
imul
pop
push
mov
dec
push
sahf
cmc
cmc
and
jno
pop
and
push
lea
jmp
fs
pop
data16
mov
push
jb
decl
fisubl
fistl
add
cltd
pop
or
cmp
jne
jg
mov
mov
mov
inc
dec
inc
sbb
lret
jo
arpl
xor
pop
push
repz
push
ret
cmp
mov
test
xchg
add
fdivrl
mov
data16
inc
inc
inc
sub
call
rcrb
insl
enter
es
lods
pop
clc
test
cmp
imul
xchg
adc
icebp
out
sbb
out
jp
inc
mov
dec
std
aaa
lods
scas
xchg
inc
adc
add
repz
sub
loope
pop
test
pop
sub
fsubl
cli
xor
lea
push
hlt
mov
in
fwait
pop
sar
jne
add
pop
pop
sub
arpl
xor
cmp
add
enter
into
xchg
cmp
outsl
xor
sahf
shl
fs
sahf
ds
mov
adc
sbb
jo
xchg
pop
push
and
sbb
adc
sbb
out
in
enter
xchg
lds
cmp
into
jl,pt
lds
or
fsubs
push
movsb
jmp
cmp
test
mov
ja
sbb
xchg
pop
lret
pop
je
push
je
mov
in
outsl
dec
inc
xor
out
mov
hlt
cmp
popf
push
mov
mov
and
and
orb
xor
repnz
cmp
pop
and
push
pop
ljmp
test
cmp
and
movsb
adc
fistps
push
lahf
mov
or
push
ret
bound
mov
mov
or
cmpsb
sub
das
jae
popa
push
scas
cltd
sbb
das
fistpll
sub
ja
mov
xchg
sbb
cmpsl
or
les
cmp
pusha
jle
fwait
mov
mov
int3
std
popa
push
addr16
mov
mov
push
in
add
stos
cmp
mov
pop
and
inc
sub
daa
fcmovu
sahf
or
and
sub
out
xchg
insb
daa
push
rol
in
pop
add
lods
adc
push
out
push
jg
repz
std
cli
inc
scas
inc
jge
cmp
adc
and
mov
imul
cmpsl
cmpsb
inc
sub
xchg
inc
or
fimull
fstpl
pop
out
jp
adc
add
aam
mov
insl
and
or
aaa
push
and
push
xchg
cmp
nop
pop
dec
addr16
dec
rcr
and
loopne
popa
and
mov
repz
fbstp
lcall
inc
jecxz
xor
sub
aas
or
enter
mov
jmp
les
popf
in
sbb
xor
sbb
xor
lock
loope
repz
adc
jmp
sbb
cmc
and
inc
loope
ljmp
pop
lret
cmp
mov
mov
or
bound
sub
pop
add
negb
loop
dec
mov
jb
mov
pop
dec
fisttpll
jmp
inc
stos
aad
lods
sub
mov
pop
ss
push
mov
cmpsl
xor
lock
ficomps
shl
jmp
sub
stc
xchg
cmp
fs
adc
or
fistpll
idivl
into
test
aas
call
adc
dec
lock
aad
rcll
sahf
imul
clc
decl
pop
movsl
adcb
mov
inc
xchg
pop
into
sbb
and
lcall
jbe
sub
insl
jg
bound
jbe
popf
lods
jg
push
dec
inc
mov
jb
push
movsl
in
inc
in
push
cmp
inc
packsswb
pop
or
fcoml
sub
lret
add
adc
sbb
xchg
ret
out
xchg
cmp
jmp
test
mov
mov
inc
or
pop
or
ret
movb
jne
mov
jo
ss
adc
sub
sbb
jno
out
push
outsl
out
ficompl
jmp
jbe
push
adc
xor
xchg
faddl
inc
roll
cmp
fnsave
push
mov
test
fxch
subw
fwait
popa
repnz
mov
jnp
in
sub
lods
popf
push
mov
rorl
dec
cmp
and
pop
test
xor
dec
sub
push
pop
mov
adc
sbb
mov
outsl
pop
cli
mov
xchg
push
xor
jl
cmpsl
repz
xchg
xchg
sbb
add
shll
iret
cmp
dec
int3
jg
cltd
jno
fdiv
out
loopne
aam
sbb
jno
push
lods
push
or
cwtl
notb
test
js
or
clc
cmp
loopne
loop
frstor
dec
jae
idivl
mov
out
shl
jg
test
and
fwait
cmp
adcb
mov
loopne
push
jns
sub
add
xlat
mov
out
mov
sahf
mov
xor
int
outsl
inc
iret
or
scas
cmp
sbb
inc
fwait
test
xor
cs
jl
xorl
pop
std
sbb
xorl
adc
jae
sbb
fidivrs
sub
test
hlt
inc
mov
stos
lcall
push
xlat
test
xor
or
mov
add
std
inc
out
cmp
mov
in
jecxz
pop
ret
hlt
push
lds
mov
push
xor
fcos
mov
pop
pop
dec
mov
leave
jp
cli
lret
adc
mov
sub
fs
hlt
fsubr
jno
dec
scas
jbe
daa
loope
xchg
mov
xchg
cltd
aad
push
lods
and
aas
adc
lds
and
lret
jmp
push
push
and
cmc
or
jns
jbe
mov
xchg
movsl
stos
push
insb
pop
mov
data16
int
adc
icebp
mov
add
lods
ljmp
cwtl
sbb
jno
sub
xor
and
cmp
sbb
pusha
cli
repnz
loopne
sbb
cmp
pop
mov
nop
cmp
in
cmp
pop
mov
push
dec
sub
leave
push
jp
pop
mov
in
popf
mov
adc
lea
push
push
or
ds
and
daa
and
aas
dec
pusha
mov
xchg
mov
sbb
mov
movsb
add
mov
inc
popf
inc
cmp
push
out
sti
sahf
cmpsb
sbb
aaa
sbb
imul
mov
and
inc
xorb
repnz
mov
mov
out
jns
addb
cmp
jo
cwtl
hlt
popa
xlat
aam
add
cmp
push
cli
push
xor
into
push
xchg
sbb
jl
test
adc
xchg
cli
rclb
fnstsw
dec
movsl
adc
jb
cmpsb
in
jbe
mov
in
aad
aad
sar
test
push
pop
sbb
dec
adc
rorb
out
mov
mov
out
cmc
imul
push
add
cld
xor
jge
mov
push
add
js
icebp
dec
pop
inc
push
dec
jle
lahf
mov
jle
lret
and
aas
push
adcl
lea
ficoml
call
sti
hlt
sub
and
jp
xchg
jae
cmp
inc
filds
test
pusha
xor
mov
inc
icebp
cs
fldl
orl
stc
jbe
and
sub
or
fldt
pop
int3
cltd
and
imul
jno
outsb
pusha
movb
pop
push
scas
push
outsb
sub
test
sbb
add
cmp
das
insl
sub
jns
fsub
outsl
xor
stc
adc
cmp
xor
stc
stos
pushf
xchg
jp
adc
hlt
adc
out
hlt
lret
in
pop
lret
push
clc
mov
and
adc
sub
cmp
sbb
dec
and
jb
aad
add
ror
cltd
ss
jge
leave
enter
jnp
mov
cmp
mov
int3
mov
lcall
bound
jg
loope
in
pushf
aad
sbb
cmp
bound
xor
int3
das
xchg
xor
popa
jno
daa
je
xor
fiaddl
mov
enter
cwtl
push
push
inc
das
shl
cmpsl
sbb
jl
test
dec
sub
fwait
int
fisubrs
ds
test
mov
sbb
stc
cli
push
push
mov
shrb
cltd
xlat
sbb
daa
nop
mov
in
add
fwait
and
cmpsb
das
jmp
sbbl
push
popf
mov
cltd
outsl
divb
push
inc
insb
adc
int
add
dec
fcmovnu
ljmp
aad
xchg
sub
into
xchg
pop
xchg
sub
shufps
mov
stc
push
cmpsb
mov
mov
push
pop
adc
inc
pavgb
das
and
mulb
pop
mov
es
in
test
push
scas
lods
mov
mov
dec
wbinvd
pop
dec
xor
gs
inc
out
add
push
nop
stos
push
xor
sbb
mov
fdivl
inc
xor
mov
test
pushf
cwtl
aam
ds
cwtl
push
inc
daa
hlt
psllq
and
dec
ficoms
fwait
ret
icebp
out
cmp
aam
cmp
pushf
xchg
sub
pop
pop
push
das
stos
jae
test
adc
repnz
push
movsl
mov
shll
test
mov
xchg
lret
mov
lret
lock
lret
out
push
fucompp
xor
and
cmpsb
push
cli
mov
add
cli
repz
or
mov
mov
loope
pop
pop
or
sbb
or
arpl
ds
mov
cmp
xor
int
imul
mov
xchg
adc
inc
sub
jae
mov
aam
and
push
pop
xor
imul
inc
xchg
inc
call
xchg
sbb
dec
cli
rorb
int3
cmpsb
aas
cli
add
divl
mov
testb
mov
clc
data16
adc
jo
adc
push
in
push
mov
jbe
cmp
test
jle
in
pushf
enter
add
iret
mov
jmp
std
lods
fidivrs
mov
aas
mov
and
or
and
jecxz
test
in
push
push
xor
repz
out
cmpsb
cmp
jmp
cs
cmp
andl
in
iret
aas
lods
sbb
stos
test
lods
test
and
mov
and
adc
add
bound
mov
dec
dec
cmc
or
sub
xchg
dec
arpl
andb
cmpb
popa
clc
cmc
pop
push
inc
mov
lahf
dec
lock
int3
sbbl
mov
pushf
movsl
lcall
adc
cs
mov
jbe
pushf
insl
cmp
lods
cmp
std
iret
loopne
inc
dec
dec
leave
adcb
and
std
popf
xor
mov
lods
icebp
pop
jns
adc
push
outsl
aam
add
push
ljmp
cld
lret
js
lods
push
into
xchg
loopne
cld
mov
sbb
mov
mov
add
test
sub
jl
add
mov
sbbl
pop
repz
mov
jle
xor
jp
and
dec
dec
xchg
repz
xchg
fs
out
rcrl
stc
mov
add
pop
out
mov
jbe
or
cmp
hlt
notb
shrb
lods
jg
add
cmp
pop
pop
ret
or
mov
sbb
jo
xchg
es
rorb
outsl
add
fwait
mov
hlt
subl
loopne
sti
xchg
out
jp
icebp
inc
cmp
xchg
cmpb
loopne
xchg
sbb
mov
xor
notb
outsb
out
pop
into
sbb
test
lahf
daa
ljmp
scas
jae
push
inc
adc
sbb
pop
mov
pop
ss
pop
nop
and
ret
xchg
scas
xor
in
sbb
xchg
pop
lcall
xchg
fidivrl
jg
cwtl
mov
decl
xchg
shrl
sub
aas
shl
clc
jne
out
lods
push
cli
xchg
arpl
into
mov
and
out
dec
sbb
xchg
mov
fwait
call
or
cmp
pushf
subl
inc
jge
shlb
out
and
ja
add
jmp
popf
imul
and
dec
sub
out
sbb
sbb
add
popa
or
js
and
data16
ljmp
scas
sarb
daa
pop
mov
clc
lea
test
pop
shrb
pusha
sbb
lock
push
mov
hlt
jnp
aad
jnp
xor
rorl
adc
movsl
dec
ret
imul
mov
mov
inc
push
sub
ljmpw
bound
fstp
mov
inc
pusha
and
pusha
lahf
and
and
xchg
mov
mov
sub
mov
add
outsb
mov
cmpsl
lret
xor
inc
jmp
inc
orb
aad
dec
sbb
sbb
inc
xor
sbb
loop
pushf
out
das
cltd
sbb
push
push
inc
lret
push
jb
push
xchg
cmp
pop
cmp
fstl
adc
dec
xor
and
cmpb
xchg
xchg
hlt
in
arpl
daa
xchg
pop
in
call
mov
ss
ss
or
outsb
and
subl
sub
adc
subb
pusha
sub
jecxz
insb
xchg
dec
mov
pop
mov
push
sub
aas
inc
mov
mov
dec
mov
push
ljmp
jns
jbe
sbb
hlt
inc
rorb
mov
in
xchg
mov
jmp
pop
fmull
push
pop
adc
or
sti
cli
out
mov
packuswb
lcall
or
sbb
mov
test
cmp
mov
sub
mov
cmpsb
mov
cs
jbe
add
xchg
orl
push
ret
push
sbb
scas
xorb
cmp
sbb
xchg
jl
cmp
aas
fistl
xor
pop
jg,pn
fs
adc
lds
mov
inc
sub
and
std
dec
es
xor
xchg
xchg
ja
lea
popf
in
add
into
sti
xchg
out
add
mov
mov
pop
sbb
mov
push
mov
fxch
push
das
lea
pop
push
mov
cmc
xchg
fisubl
cmp
jl
pusha
stos
add
aad
in
push
call
xchg
shll
fimuls
imul
pop
fstpt
lcall
aam
sbb
push
ds
and
adc
les
sub
xor
out
or
mov
and
sub
xchg
push
inc
add
cmp
mov
ljmp
test
int
adc
sbb
sub
sbb
into
jmp
rolb
mov
jbe
addr16
addl
inc
mov
inc
mov
dec
out
jle
pop
cwtl
roll
inc
fcomp
jecxz
sahf
mov
and
jmp
not
push
ja
test
lods
test
mov
test
out
test
add
pop
lret
add
subl
shll
hlt
movsl
and
inc
inc
mov
cmc
lret
sahf
pushf
imul
js
lcall
xor
popa
xchg
pop
xchg
sbb
dec
mov
cmp
movl
or
insb
push
jno
das
sarl
imul
out
mov
pushfw
jl
bound
cwtl
icebp
stc
into
xor
pop
mov
inc
jno
and
out
fsubrl
rolb
testl
xchg
mov
in
mov
mov
orb
ficoml
pop
lret
jns,pt
cmp
call
push
mov
jle
sbb
rcl
in
lahf
arpl
xchg
mov
or
adcl
mov
add
popf
pop
leave
imul
mov
and
adc
sti
aas
xorb
xor
inc
xor
testb
fadds
mov
stos
outsb
jb
add
cmp
pop
pop
inc
lret
aaa
movsl
or
adc
popa
cmpl
lea
mov
or
mov
test
sub
in
test
int
js
add
aas
cli
jae,pt
sub
push
xlat
test
call
repnz
imul
lods
or
pop
push
cltd
xchg
mov
call
jmp
mov
int
or
loope
or
in
ret
addr16
sub
ds
sbb
mov
hlt
dec
stos
add
push
movsb
in
mov
adc
mov
mov
repz
sbb
in
adc
sbb
dec
dec
push
mov
sbb
add
xchg
pop
adc
data16
icebp
sub
jnp
mov
and
mov
jl
pop
or
push
cmp
clc
pop
sub
xor
int
rorb
mov
std
sbb
adc
cmp
das
arpl
fwait
mov
dec
loop
add
push
adc
inc
aas
xchg
hlt
dec
mov
in
jmp
mov
ss
inc
mov
scas
shlb
data16
subl
pop
testl
pop
mov
mov
insl
mov
outsb
imul
mov
adc
jb
cld
out
in
sbb
adc
shl
and
cmp
cwtl
out
pop
mov
aaa
mov
push
cmp
pusha
shl
fcmovb
decl
test
push
jle
sahf
inc
push
cmp
add
inc
pop
mov
cmp
cmp
push
cmp
lods
jp
movsl
xchg
add
jns
aas
add
std
aaa
iret
sbb
test
and
enter
xchg
lods
lcall
push
cmp
add
push
add
daa
xchg
mov
scas
in
lahf
and
aas
add
mov
sti
ja
fs
cmpsb
mov
pop
xchg
mov
cli
int
rorb
pushf
fnstsw
dec
pop
cmp
fs
adc
inc
push
fiadds
adc
xlat
sbb
popf
or
dec
and
cwtl
fsts
mov
lahf
mov
jmp
pusha
aad
lods
lock
ds
shl
aad
mov
xor
sbb
mov
fldl
and
jns
dec
mov
pop
cmpsl
add
inc
sub
subb
sti
addr16
cmp
or
repz
call
cmp
sbb
and
loope
mov
or
sub
ja
push
mov
push
cmp
mov
sbb
popf
popf
xchg
icebp
lods
jno
sbb
repz
jle
or
int
cli
mov
lods
cmp
jg
mov
push
lahf
and
sbb
pop
add
sub
xchg
and
jmp
movsl
test
arpl
xchg
xlat
push
inc
sbb
js
xor
cmp
les
mov
push
gs
cmp
mov
or
stc
fdivrs
fiaddl
les
jae
pop
sbb
xlat
es
aad
mov
inc
push
pop
ss
pusha
mov
adc
cmp
mov
imul
mov
icebp
inc
pop
dec
pop
ror
gs
adc
loop
inc
xor
lock
popf
and
stos
cmp
inc
cwtl
scas
out
mov
mov
imul
je
jl
scas
and
insl
add
daa
xor
ret
cld
pusha
fwait
cmpsb
jbe
fldln2
lcall
nop
sub
scas
in
mov
out
fs
mov
push
xchg
les
ja
dec
ljmp
jge
mov
dec
test
xchg
xchg
mov
inc
leave
gs
pop
mov
mov
mulb
and
xor
sti
ja
mov
out
push
cmp
lods
movsl
xorps
sub
stos
add
scas
cmpsl
mov
pop
shll
and
mov
xor
cld
insb
rcrl
test
es
lcall
or
gs
cs
sub
xchg
loop
sub
in
pushf
dec
aas
stos
mov
add
xchg
aas
and
xchg
jp
imul
mov
inc
adc
enter
mov
fwait
je
xchg
and
jp
hlt
xor
ret
xchg
xor
mov
xor
mov
push
pop
bound
jmp
dec
mov
popa
imul
inc
dec
inc
dec
clc
mov
or
sbb
xchg
pop
sahf
repz
push
cmp
popfw
or
fbld
aad
stos
mov
scas
mov
jmp
aas
mov
mov
sarl
popa
cmp
dec
fstpl
xchg
repz
loop
jge
xor
jo
push
mov
loop
mov
pop
xor
xorl
cmp
or
mov
ret
or
ds
xorb
and
mov
xor
mov
push
cltd
daa
fildll
call
sub
dec
aad
adc
fnsave
jbe
test
popa
xchg
enter
lretw
adc
xchg
mov
stc
sub
iret
lret
push
xor
mov
cli
xor
push
and
and
daa
rolb
cmpsb
jecxz
mov
outsl
sub
hlt
mov
test
push
jne
push
and
adc
fisubrs
call
ljmp
test
scas
sub
or
jno
negb
mov
jg
sub
call
inc
insl
out
sbb
and
ret
or
iret
sub
les
push
sbbb
sbb
cmp
vpcmov
push
jbe
pop
mov
pop
sub
xchg
jae
int
mov
out
push
push
out
jle
popf
cmp
aam
mov
mov
rcr
cmp
and
outsl
pcmpgtb
insl
lret
jo
mov
pop
jp
cmovo
mov
xor
repz
jle
add
jnp
and
jb
xchg
adc
out
pop
mov
adc
cs
jp
mov
loop
pop
mov
or
inc
rorl
test
jg
mov
pop
cwtl
lcall
cmp
add
out
repz
xor
enter
mov
xlat
ror
push
lds
shr
sarb
imul
movsb
xchg
push
fildl
jno
pop
or
xor
ficoms
xchg
pop
jecxz
mov
imul
mov
std
sub
nop
sub
mov
and
jmp
ficoml
jnp
pop
test
inc
fnstsw
icebp
cmpsl
popa
mov
mov
mov
xor
mov
cmc
loopne
push
int
mov
stos
iret
les
cvtps2pi
imul
fistpl
sub
mov
xor
jge
xor
cmc
jg
lds
movsl
xchg
dec
sbb
mov
add
push
pusha
fstpt
push
insb
adc
xchg
push
repnz
jae
fldcw
mov
and
rclb
jnp
test
mov
imul
jle
ja
mov
lahf
cli
pop
out
mov
in
jno
mov
dec
insb
out
stos
add
cwtl
or
cld
fisttpll
pop
ja
inc
cmp
sbb
sub
call
add
lock
xchg
mov
jno
inc
xor
loop
lods
lahf
mov
std
push
outsb
out
jge
inc
sbb
or
iret
nop
add
rorl
add
cmc
adc
fsts
sahf
xchg
inc
inc
into
div
sub
add
loope
mov
sbb
jnp
int3
jmp
mov
fwait
xchg
ljmp
lods
clc
add
xchg
rorl
push
outsl
cmc
mov
sub
jmp
pop
push
js
minps
xchg
push
cmp
jbe
pop
mov
jns
dec
loope
cmp
push
xlat
rcrb
imul
adc
and
jg
fiadds
pop
cltd
scas
xor
sub
stc
hlt
dec
pop
adc
out
icebp
pop
add
fldcw
sub
mov
sahf
daa
mov
push
popa
mov
sbb
pusha
jge
mov
nop
jnp
cmp
cmpsl
add
jl
mov
sbb
arpl
add
push
cli
inc
outsb
or
test
lcall
jmp
fdiv
lock
les
xchg
imul
iret
sahf
cmp
and
or
ficoml
daa
mov
out
or
xor
dec
subl
insb
ljmp
lods
subl
repnz
mov
jno
sub
xchg
add
adc
imul
jmp
fisubl
out
xor
outsb
add
mov
and
out
sarb
leave
and
pop
fistpl
dec
sbb
lock
outsb
jns
movsb
push
sti
mov
cmp
negl
inc
sub
mov
stos
mov
popa
add
mov
js
mov
adc
in
lods
adc
imul
cld
popf
nop
shll
repnz
not
pmaddwd
dec
inc
mov
pop
cs
dec
inc
xorl
inc
pop
xor
adc
rolb
jb
arpl
lods
insb
rorb
int
idivb
add
scas
jecxz
push
mov
push
jecxz
add
xor
es
sbb
mov
sbb
cmp
daa
sbb
xor
mov
ficoms
jae
daa
sub
xor
mov
jae
jmp
stos
hlt
cmc
cmp
and
fcoml
xchg
mov
mov
pushfw
jp
or
mov
fadd
inc
pop
inc
xor
movsl
inc
cld
sub
cmc
es
push
cmp
ret
cmp
sbb
push
jbe
sub
incb
dec
or
push
sbb
out
adc
pusha
cmpl
aam
mov
lahf
int
mov
bound
mov
pop
dec
add
pop
mov
fdivl
sub
aad
mov
mov
fsubrl
xor
cmpsl
sarl
out
mov
or
icebp
mov
mov
xchg
jae
jl
popf
ret
push
lcall
jge
push
push
xor
dec
sbb
jge
jl
sti
jne
pop
jg
cmpsl
scas
or
jb
outsl
fildll
bound
shlb
and
in
lcall
push
and
sbb
mov
jg
hlt
and
insb
ret
js
push
fildl
pop
mov
jmp
add
iret
mov
adc
mov
daa
pop
xlat
loopne
xlat
jmp
dec
repz
inc
pop
xchg
xchg
aaa
in
call
aam
leave
push
cwtl
fnstcw
cmp
add
cwtl
enter
arpl
sub
ja
mov
cmp
push
dec
mov
lods
jne
inc
add
cmpl
gs
js
or
dec
add
adc
pop
mov
jo
xchg
mov
sbb
dec
dec
insl
add
sbb
notl
push
pop
sub
ds
push
mov
mov
in
test
add
into
xchg
mov
mov
mov
mov
push
push
push
btsl
mov
fs
push
in
add
into
mov
mov
cmp
dec
cs
imul
rcl
jl
xchg
push
push
push
arpl
dec
jl
in
scas
mov
call
nop
icebp
adc
mov
imul
sub
xor
push
mov
pop
sbb
popf
dec
mov
out
jg
ja
add
mov
mov
outsb
adc
mov
xor
or
js
xor
roll
test
xchg
push
mov
and
pop
pusha
scas
jg
in
dec
addr16
push
fldenv
sub
jg
dec
jns
dec
mov
lahf
mov
pop
adc
out
jae
shl
dec
pop
aad
in
mov
xchg
jg
test
and
out
and
inc
in
dec
imul
cmp
xor
jne
es
mov
lahf
dec
test
adc
dec
daa
mov
mov
insb
aas
mov
subb
xchg
push
mov
mov
ds
sub
push
ja
sti
sbb
shll
adc
push
push
jnp
rcr
cmp
fldl
pop
pushf
adc
cs
mov
test
jmp
lret
sbb
push
pop
dec
fstp
mov
lods
test
inc
xor
push
lahf
mov
jbe
pop
jne
popf
xchg
mov
xchg
dec
sbb
pusha
cmpsb
sub
cmpb
mov
push
insl
cmp
jb
mov
jp
mov
adc
push
out
sarb
xlat
sbb
cbtw
movsl
push
sbb
push
add
mov
dec
fdivs
in
xor
push
jno
cmpsl
mov
inc
lret
dec
clc
enter
cmp
subb
push
push
xchg
mov
pop
inc
imul
daa
insl
xlat
bound
dec
out
mov
inc
gs
mov
mov
dec
push
scas
hlt
movsl
xor
push
sbb
sub
adc
sub
xchg
stos
push
xchg
add
push
sahf
lea
faddl
popa
or
mov
adc
lret
mov
sbb
popa
cwtl
mulb
out
roll
adc
mov
push
mov
jmp
rcr
and
push
adc
imul
jmp
fwait
pushf
pop
mov
lret
jnp
adc
cmpsb
push
les
fbstp
xchg
sub
xchg
movsb
inc
sbb
fcmovnu
xchg
test
dec
mov
pop
jo
xchg
ret
sbb
or
add
les
push
and
stc
int
pop
out
rorl
movsl
mov
xchg
stos
mov
cld
jae
fs
in
dec
out
add
adc
mov
clc
fiadds
sub
sbb
leave
shll
jno
in
addb
cmp
fcmovb
jb
jae
mov
fs
popf
scas
sub
dec
adc
dec
fdivrl
sbb
sbb
hlt
outsb
rolb
popf
fbstp
xchg
subb
dec
dec
push
imul
divl
clc
rcll
pop
movsl
cmpsb
fucomi
mov
fs
lcall
je
cmp
lods
mov
xor
loop
push
outsb
mov
aas
cmpl
sub
aad
loop
repz
loop
int
and
fsubrs
stc
dec
xchg
cmc
fldt
out
xor
outsl
inc
jg
clc
cmc
push
xor
or
pusha
stc
cld
js
aas
je
push
jns
pop
sbb
push
je
leave
and
pop
iret
aam
insl
jb
jg
and
xor
mov
push
fiadds
sbb
mov
jle
mov
lods
inc
test
mov
movsl
push
enter
xor
arpl
dec
les
add
push
movsb
rcrb
rorb
mov
std
nop
outsb
addr16
cmp
push
jg
lret
cmp
roll
gs
sbb
push
cli
es
scas
ljmp
mov
or
cmp
in
mov
mov
mov
hlt
subb
xchg
lods
mov
dec
dec
mov
mov
hlt
fs
inc
add
cmpsl
push
hlt
cmp
ja
mov
jp
xchg
faddl
dec
andl
cltd
sbbb
jnp
mov
adc
test
cmpsl
or
scas
lods
push
pop
int3
mov
mov
addb
cmp
mov
dec
cmp
adc
and
sub
mov
icebp
and
mov
popa
rcl
mov
push
dec
xchg
push
popf
pop
mov
cwtl
or
jnp
pushf
out
or
sahf
cmp
jmp
pusha
movsb
pop
lea
pop
out
add
mov
dec
jle
arpl
fbld
adc
fdivp
push
outsb
push
xor
cltd
and
xor
in
jno
out
pop
and
push
xchg
iret
and
cmc
pop
pop
je
inc
xor
mov
fdivrs
aas
out
inc
aam
cmp
lret
and
pop
lea
cmp
adc
inc
push
fwait
dec
mov
mov
iret
icebp
orl
ret
sbbl
hlt
xchg
imul
sub
push
lods
sahf
inc
insb
ljmp
icebp
sarl
xchg
popa
sbb
cmp
inc
lods
mov
cli
pop
lahf
xor
fldpi
pop
xor
cmp
imul
cmp
je
mov
jmp
popf
push
mov
fcompl
dec
fld
and
mov
and
scas
dec
jp
mov
push
push
xchg
or
inc
add
xor
outsl
je
add
adc
repnz
inc
inc
lret
sbb
mov
inc
es
mov
scas
dec
push
mov
xchg
testl
cld
dec
xchg
test
arpl
push
das
les
test
xchg
std
push
dec
mov
sub
loopne
mov
sar
add
sub
add
aas
adc
cmp
pop
cmp
out
ds
gs
lahf
lea
push
or
cmp
ficoml
gs
test
inc
roll
popa
iret
addb
inc
jmp
sub
add
pop
xor
add
std
cmp
repz
pop
adc
leave
inc
lret
add
nop
daa
push
mov
jmp
fstps
and
inc
xchg
and
test
movsb
iret
iret
xchg
shll
cmp
enter
dec
cmp
ja
add
mov
and
push
sarl
mov
or
xchg
mov
mov
xchg
test
lcall
dec
mov
mov
loop
mov
pop
push
jbe
jl
lds
dec
insb
mov
push
out
ds
mov
lcall
adc
cmp
mov
pop
nop
push
loopne
idivb
ljmp
and
adc
das
push
and
inc
mov
lret
inc
sbb
add
outsl
fimull
xchg
mov
lea
rcl
adc
mov
and
out
xor
cmp
xchg
jp
aas
test
lea
and
dec
addb
js
dec
les
xchg
sbb
je
mov
pop
popa
shl
adc
push
jno
fs
bound
test
xor
loopne
cld
jmp
mov
mov
inc
jg
cmp
rcrb
lcall
mov
nop
push
cli
shr
xor
sub
jne
xor
imul
add
in
jnp
sbb
add
jle
mov
push
jbe
xor
pop
mov
push
mov
add
pusha
in
push
pop
cmc
lret
mov
mov
cmc
sti
mov
adc
mov
mov
mov
int
shrb
hlt
and
repnz
lds
inc
mov
mov
mov
mov
mov
dec
cwtl
sub
imul
sar
outsb
and
pop
lcall
jnp
sti
cmp
mov
pusha
mov
mov
pop
cld
aad
pusha
pop
mov
adc
mov
pop
pop
add
cmpsb
imul
lret
cmp
int
lock
dec
jae
fistpl
xor
ljmp
and
mov
test
add
or
pop
repnz
cli
mov
in
sub
xchg
jns
inc
arpl
mov
mov
sbb
dec
aam
rcrb
dec
or
mov
add
imulb
add
mov
inc
jmp
psllq
movsl
pop
cmp
lods
push
ret
loopne
xor
imul
mov
and
pop
sub
mov
cmovnp
aam
sub
sti
xor
or
mov
xor
dec
loopne
nop
shll
push
fistpl
dec
pusha
leave
decl
popa
notb
pop
push
int
insb
jbe
xchg
mov
adc
pop
test
sub
or
ret
push
pop
jp
sub
mov
and
inc
fs
pushf
in
clc
push
pop
cmp
xchg
sub
leave
ffree
xor
movsl
fs
rclb
pop
out
mov
scas
lea
mov
aas
mov
push
stos
mov
ret
jae
mov
rcrb
out
push
loope
int3
pop
les
aad
xchg
mov
add
and
mov
jge
call
insl
adc
mov
lods
xor
ror
outsb
xor
xchg
ljmp
mov
inc
repz
jno
push
adc
lea
jb
jmp
mov
cmp
xchg
or
or
ja
das
pop
or
xor
outsl
pop
and
enter
js
mov
jp
mov
fdivrl
je
rorb
sahf
hlt
in
mov
test
rcll
leave
fisttpl
mov
and
mov
xchg
insl
int
pushf
mov
cwtl
lea
cmp
mov
mov
mov
rcll
push
inc
xchg
enter
xor
ret
pop
dec
dec
jge
jnp
dec
imul
cmpb
mov
fcoml
test
push
sub
inc
test
jno
std
cmp
enter
out
cmc
xchg
mov
cltd
scas
mov
cmc
push
in
fnsave
adc
clc
data16
aaa
insl
mov
mov
jnp
les
es
xor
inc
dec
call
cmp
jns
repz
mov
jp
mov
shrb
adc
mov
sbb
js
sbb
fsubl
sub
and
shrl
test
shl
rclb
ja
or
push
or
add
cmc
pop
das
dec
stc
sbb
cli
inc
call
mul
rcll
outsb
ret
cmp
movsl
insl
inc
stos
mov
cmc
pop
shrl
jns
sub
xchg
sub
and
gs
pop
je
lret
push
mov
shrl
push
xchg
ror
popf
pop
mov
or
in
repz
mov
rcll
addr16
and
test
mov
cmp
push
sbb
hlt
jns
cwtl
dec
test
cmpsb
push
sbb
ljmp
push
ss
aad
cmp
icebp
fcompl
adc
imul
sub
daa
outsl
lcall
push
lods
xorb
das
clc
dec
or
sti
sub
mov
daa
leave
in
outsb
mov
leave
cmpsb
stc
dec
xchg
inc
dec
pop
in
and
sbb
pop
push
out
push
xchg
aad
add
popf
jge
mov
rolb
mov
mov
pop
jne
cltd
out
cmp
mov
insb
dec
loopne
and
sbb
stc
cltd
ss
push
pop
xchg
inc
inc
repnz
outsb
out
mov
aaa
sbb
lret
subb
loopne
jbe
dec
mov
push
and
sbb
xchg
scas
pop
mov
jge
xor
mov
mov
mov
push
outsl
xchg
lret
out
sub
xchg
mov
out
adc
dec
cmc
in
cld
and
and
mov
sub
cs
jne
or
jl
xor
mov
and
adcl
and
mov
ds
jbe
out
shll
inc
pop
setge
test
push
sub
out
add
mull
stos
fdivr
inc
dec
sub
jnp
nop
and
cmc
lcall
add
adc
push
add
push
push
mov
les
call
rorl
mov
fwait
and
ficompl
shll
punpckhbw
push
incb
repz
adc
or
mov
mov
xor
xchg
lea
sub
xor
pop
add
enter
popf
je
outsl
das
mov
das
out
cwtl
pop
inc
in
lds
adc
adc
push
xchg
cmp
cltd
aad
loope
adc
add
adc
ljmp
cmp
bound
shll
lret
sahf
sub
stc
cltd
xchg
adc
inc
or
cmp
mov
or
jns
mov
mov
xchg
movsl
cmp
lods
mov
dec
jecxz
and
pop
adc
mov
or
in
xchg
push
hlt
xor
std
or
data16
das
xorb
pop
push
mov
sub
fucomp
in
shlb
addr16
data16
ret
push
push
pop
movsb
rcrl
push
mov
in
testl
fidivs
xor
mov
dec
push
or
mov
inc
sbb
or
jle
mov
jbe
sti
mov
mov
xchg
mov
push
pop
bound
and
scas
call
push
sub
leave
ss
mov
arpl
scas
dec
jge
ljmp
imul
xchg
pop
es
dec
fcoml
mov
hlt
sbb
sub
test
sub
loop
push
sbb
enter
xchg
push
jbe
pop
cmpl
cmp
add
decl
or
mov
mov
movd
jno
subb
out
push
ljmp
inc
xor
sub
cmpsl
pop
test
test
jb
aam
lock
in
dec
lret
popa
dec
xor
and
and
add
mov
in
outsb
jp
add
adc
sub
jb
pop
insl
pop
sbb
pop
ffree
lret
and
jo
sti
jp
lret
dec
in
adcl
add
loop
fcoml
xchg
mov
pop
jge
fisttpl
popa
pop
mov
fstps
insl
sbb
inc
xchg
sbb
sbb
inc
bnd
js
pop
fimull
pusha
push
and
test
sub
es
cli
stos
addb
dec
mov
xor
inc
jg
imul
lcall
lahf
cmp
movsb
adc
cli
xchg
cmp
rcll
mov
push
ds
dec
dec
cmpsb
ja
and
movl
jle
call
jne
pop
pop
mov
scas
int3
push
mov
adc
and
lods
lods
clts
lahf
test
insb
adc
mov
test
adc
ljmp
push
subb
sbb
out
and
push
adc
inc
sbb
or
add
dec
les
popf
stc
leave
inc
sbb
mov
nopl
mov
out
pop
cmp
movsl
pop
jecxz
sub
insb
xlat
xchg
pop
cmp
inc
push
fstl
loop
mov
aas
ror
mov
pusha
adc
test
fidivs
add
bound
xchg
xor
or
sbb
cs
add
xchg
jp
inc
mov
adc
je
test
in
sbbb
push
pop
imul
movswl
xchg
stos
iret
mov
cmp
imul
dec
dec
adc
notl
pop
lcall
test
cmc
jb
cld
into
xor
test
xor
cmpsl
jecxz
pop
jno
mov
and
sbb
pusha
repz
inc
roll
repz
cld
pop
inc
inc
xchg
jno
pop
mov
sub
jne
jecxz
ja
mov
cmc
jecxz
sti
push
ds
loopne
cmp
mov
pop
rorl
xchg
int
dec
call
lret
testl
dec
pusha
cltd
scas
inc
fwait
jo
testl
cmpsb
mov
push
test
xchg
mov
jb
ret
ljmp
fcompl
dec
dec
xor
xchg
lret
adc
das
les
adc
lahf
push
add
stos
jmp
ficomps
iret
fsub
dec
adc
pop
push
test
popa
pusha
pop
pusha
mov
xor
insb
test
mov
jecxz
xrelease
mov
iret
dec
push
pop
lds
inc
cld
sbb
subl
add
fistl
mov
in
jg
out
dec
movsb
loopne
cmpsl
jnp
into
test
push
outsl
cmc
aam
and
decb
rorl
loop
cltd
dec
and
lods
ja
shr
repz
insb
insb
pop
pop
fwait
orb
pop
das
jns
xor
insb
sub
ljmp
jecxz
sbb
or
gs
mov
sbb
sub
mov
jne
xor
into
and
repnz
fildll
shl
aam
xlat
popf
mov
shr
mov
je
loop
xchg
jno
push
lcall
lret
push
imul
sub
inc
bound
loop
or
test
rcrl
popf
jle
sbb
in
cs
scas
fstpl
push
mov
pop
push
mov
lret
in
xchg
lret
push
fsubrl
cmp
mov
hlt
adc
aam
lods
addr16
pop
mov
add
fcmovnu
push
cmp
sbb
loopne
jge
jmp
insl
and
jp
loope
xor
jp
cltd
rol
pop
lods
jmp
jns
fiaddl
xchg
adc
jp
mov
sbb
outsl
cmc
cmp
sbb
dec
push
rorl
fistpl
scas
inc
imul
push
test
jno
lcall
outsl
sbb
iret
pop
mov
sbb
push
inc
dec
pop
inc
and
or
dec
loopne
lahf
inc
fidivrl
pop
lret
adc
cmpsb
dec
adc
pop
xor
push
pop
gs
fisubrs
loop
divb
pop
out
pop
cli
test
pop
jmp
mov
in
jns
or
xchg
test
scas
mov
push
sbb
push
out
js
adc
sbb
push
aaa
pusha
mov
call
jge
out
xor
mov
mov
or
mov
pop
mov
lcall
aad
inc
jge
dec
inc
and
cmp
call
roll
xchg
push
and
sbbb
sbb
cs
push
ja
cmp
aas
pop
fdivrl
pop
mov
adcb
gs
jl
imul
mov
mov
pop
pop
xorl
sarl
jo
pop
ss
mov
cmp
jmp
gs
nop
scas
lahf
push
cmp
outsl
adc
xchg
xchg
imulb
adc
mov
mov
and
clc
mov
addb
popa
pop
mov
loopne
push
pop
imul
ds
push
into
ds
insl
faddl
call
stos
mov
iret
int3
sub
and
push
imul
xorl
ficoms
jp
and
mov
add
dec
cmp
imul
or
inc
jnp
push
sub
repnz
xchg
jmp
jmp
fdivs
int3
adc
fs
dec
pop
pushf
pop
and
adc
push
mov
out
pop
or
sub
mov
cmc
xorb
push
imul
cmpsl
adc
sahf
into
inc
jg
fucomp
inc
mov
outsl
adc
insl
in
jge
dec
js
mov
loop
data16
xchg
in
in
push
jle
stc
jns
mov
mov
cld
lret
les
outsl
roll
inc
inc
push
in
aam
xor
lock
sbb
mov
jne
cmp
fldt
pop
mov
adc
ja
or
sbb
push
ljmp
clc
adc
cmp
and
and
mov
xchg
inc
inc
sahf
xchg
iret
jg
cld
les
ret
jnp
lods
cmp
aas
cmpsb
xor
aas
dec
sub
mov
jno
test
lahf
ds
daa
scas
ljmp
mov
inc
push
mov
mov
out
into
xchg
lret
and
aam
neg
std
or
adcb
mov
mov
icebp
fistl
adc
xor
in
sub
and
lret
cmp
sahf
loop
and
nop
add
inc
stos
sarb
cmpsl
adc
push
bnd
mov
stc
rcrb
cmpsb
ret
adc
dec
out
pop
int
out
fadd
ljmp
shrb
push
jle
dec
adc
xlat
loope
jnp
pop
ror
cmp
pusha
test
adc
js
ret
adc
push
loopne
push
xrelease
push
fwait
call
mov
rcr
push
stos
cs
xor
xchg
jge
add
xchg
ret
ret
lret
fstpt
idivb
fstpt
and
jb
inc
inc
or
mov
mov
outsb
into
aam
xchg
mov
jg
lds
loope
inc
and
or
mov
dec
mov
add
sbb
cmp
xchg
insb
cmpsl
icebp
pop
decb
das
int3
jbe
inc
repnz
pusha
loope
icebp
into
fidivrs
jecxz
cmp
add
jo
cmp
rcl
punpckldq
xor
into
cld
sub
push
push
sub
cmp
pop
and
mov
ja
mov
pop
lahf
cmp
cs
lahf
and
es
mov
sbb
test
jbe
jne
daa
scas
les
ljmp
jle
in
push
jno
dec
std
cld
add
and
test
sub
adc
je
adc
lock
lock
loopne
xor
movl
lahf
scas
aam
int
mov
mov
loop
mov
sub
mov
jg
sbb
add
jmp
cmp
faddp
add
mov
cmp
and
push
aas
mov
mull
jns
push
add
xor
test
in
in
mov
mov
and
ret
inc
js
outsb
fidivs
mov
movsb
sbb
and
sub
aaa
push
js
leave
data16
sti
sbb
pushf
jp
ja
pop
jl
adc
mov
fisubs
sbb
out
xor
mov
subl
in
and
add
notl
fdiv
mov
and
icebp
stc
das
insb
jmp
in
push
sub
stc
aam
repz
jnp
add
mov
das
mov
dec
jae
mov
jb
cli
dec
dec
sbb
call
insl
sahf
out
ljmp
es
mov
or
ljmp
xor
pop
pop
in
scas
push
inc
pop
clc
stos
jnp
or
xorl
mov
mov
addr16
popf
jp
adcb
xchg
add
inc
iret
lret
mov
jb
pop
xor
lahf
sub
dec
push
push
arpl
pop
adc
push
rorb
adc
mov
pushf
mov
test
sbb
out
xchg
cmp
xchg
sbb
fsts
pop
push
jae
xor
push
mov
cmp
sub
mov
testl
mov
mov
clc
jno
and
insb
inc
jge
mov
mov
inc
sub
xor
jge
cmp
add
sbb
sbb
std
and
push
adc
rcrb
jae
dec
or
cmp
lods
out
cmp
int
arpl
dec
mov
inc
lods
mov
or
popa
pusha
and
lods
paddd
popf
insb
sub
jne
mov
in
sbb
mov
xchg
ljmp
enter
hlt
jmp
pop
aam
sub
mov
mov
xchg
movsb
scas
pop
scas
sub
stos
lret
es
insb
pop
mov
xchg
jp
dec
push
sub
jp
jmp
out
shll
call
or
and
fs
push
push
pusha
cwtl
repz
les
dec
add
test
ja
push
and
dec
xchg
stos
xor
jae
adc
imul
pop
mov
xchg
jge
xchg
jecxz
hlt
pop
mov
dec
popa
pop
or
cmp
push
jns
jmp
adc
mov
push
out
ficompl
out
mov
mov
dec
mov
jmp
dec
push
ss
test
add
pushf
stos
inc
into
fstpt
inc
fwait
push
hlt
inc
in
push
jbe
mov
jecxz
int3
jb
fcmovb
inc
adc
jae
out
xor
and
mov
jbe
arpl
imul
add
out
pusha
mov
ljmp
arpl
rcr
iret
out
orb
xchg
mov
mov
clc
mov
imul
leave
xor
gs
sbb
lock
ja
imul
int
cltd
pop
push
out
rclb
mov
adc
inc
aad
xchg
xor
sub
xor
push
flds
imul
push
lods
cwtl
hlt
clc
cmp
push
ja
push
and
or
test
or
dec
push
add
inc
xchg
jl
sbb
jp
xchg
mov
fnstcw
inc
sbb
cmpsl
fidivl
pop
out
xchg
jg
insb
adc
or
inc
cmp
inc
mov
shrl
fsts
ret
push
push
pop
adc
je
cld
es
pusha
jmp
mov
stc
sub
push
sub
jo
push
bndldx
pop
addr16
rcrb
and
sbbl
cmpl
xor
push
jg
cmp
sub
jnp
mov
cmp
stos
xchg
push
adc
lcallw
pop
ja
add
pushf
adc
sub
mov
add
ja
mov
jp
stc
or
dec
fsubrl
mov
xchg
jmp
lret
or
iret
mov
ljmp
arpl
in
fwait
push
ficoml
pop
push
mov
jge
xchg
pop
in
addr16
inc
pop
mov
mov
rcrl
fiadds
add
out
enter
je
imul
popf
push
cs
cld
or
mov
jne
lds
cli
mov
into
pop
add
mov
mul
pop
mov
andb
jbe
xchg
cwtl
pop
mov
lds
pop
outsl
dec
xchg
jns
sub
add
mov
inc
enter
dec
or
sbb
stc
cltd
xor
aam
leave
dec
sub
xor
lcall
fwait
aad
lock
shrb
or
sub
nop
ds
repnz
sub
sub
inc
sbb
pop
in
enter
pop
outsl
push
push
sbb
mov
stc
cmp
push
pop
lea
inc
pop
dec
pop
and
lcall
aaa
in
sub
mov
mov
aaa
sbb
xor
push
mov
add
dec
adc
add
icebp
pop
jne
leave
call
out
mov
dec
push
adc
xor
xchg
outsb
daa
sarl
and
mov
jecxz
loop
push
jnp
lock
adc
mov
shll
sub
je
push
fidivrs
mov
xor
fcmovnu
icebp
aaa
out
pop
or
inc
sub
cmpsl
idivb
jl
mov
in
test
mov
fdiv
test
xor
out
mov
adc
std
or
enter
or
fisubrl
sbb
mov
inc
adc
out
test
or
fidivrs
add
jmp
inc
mov
fisttpl
mov
pop
cmp
lahf
mov
test
jb
push
jle
xchg
in
int3
jns
sub
test
mov
ret
lea
push
mov
daa
add
imul
sub
sub
fimuls
rorl
push
sub
sub
outsl
std
in
xlat
and
jmp
dec
stos
mov
aaa
fsubl
test
in
xchg
icebp
arpl
xor
mov
xchg
add
xor
push
fidivrs
add
mov
aas
mov
push
leave
insb
pop
inc
sub
aam
adc
lock
aaa
lods
jae
incl
and
pop
sbb
add
cmp
ret
mov
and
int3
jne
mov
jno
loop
outsl
jmp
inc
mov
mov
xchg
ret
jp
xor
and
cmc
stc
mov
in
xchg
sub
sbb
stos
mov
mov
insb
repnz
das
testl
stos
or
jp
xlat
mov
jbe
push
sbb
sub
cmp
stos
fistpl
call
xchg
dec
aas
clc
or
inc
mov
in
sbb
mov
or
sbb
bound
insl
dec
mov
cmc
lock
aaa
mov
jp
arpl
xchg
stos
and
fs
addr16
ljmp
mov
cld
mov
mov
push
icebp
xchg
jnp
iret
xor
lret
mov
daa
add
pop
imulb
and
repz
inc
in
xchg
or
xlat
jbe
push
pop
daa
mov
xor
xchg
cmpsb
xchg
scas
dec
sbb
subl
sub
mov
push
outsl
jns
into
ficomps
sub
lahf
push
xor
rolb
fidivrl
inc
mov
push
movsl
mul
bound
out
in
add
movsl
jecxz
lret
cmp
or
cmp
xor
lds
jl
mov
repnz
mov
fwait
cmp
xor
mov
xor
fwait
pop
adcb
xor
ds
shll
sbb
cli
je
sub
jo
jbe
xor
rolb
in
pop
cli
out
cli
jge
lds
lods
cmc
ret
and
xchg
cmpsl
inc
ret
push
mov
push
pop
mov
mov
push
outsl
jnp
push
insb
lds
jge
pop
pop
xor
icebp
int3
shl
stos
jle
push
nop
jge
pop
repnz
int
jb
js
mov
lock
mov
mov
mov
jp
popa
sub
jp
fwait
xor
aas
aad
fwait
sub
lds
push
push
lds
mov
jae
aaa
sti
mov
fiadds
popf
lea
daa
je
jns
pushf
lea
sub
fcoms
sub
scas
je
in
mov
cmp
and
cbtw
xchg
xor
pop
push
and
cld
adc
dec
ret
mov
aad
inc
and
int
sub
ja
rclb
jns
add
push
adc
inc
aas
addl
insl
mov
or
push
lret
add
mov
mov
mov
inc
in
jge
mov
add
out
inc
dec
xor
inc
pop
and
out
mov
js
cltd
xor
inc
pop
fildll
ss
or
aas
xor
insb
js
mov
in
dec
lock
dec
test
ljmp
bound
adc
xchg
push
rol
sbb
fcos
or
xor
add
dec
dec
fcmovnu
xlat
xor
fcmovnbe
xchg
out
ds
out
mov
or
pop
outsb
test
push
push
imul
xchg
sub
cmp
cmpsb
aaa
fists
push
jmp
je
push
test
mov
push
mov
cmpsl
enter
xor
out
daa
xor
popa
stos
sub
mov
push
js
or
inc
mov
and
cmc
jb
scas
mov
mov
xor
inc
loopne
jns
adc
imul
cmp
arpl
or
sbb
pop
mov
mov
in
xor
in
jge
push
mov
xchg
dec
pusha
push
fcmovnbe
aam
inc
shlb
xor
jbe
js
push
subb
xchg
or
cmp
or
xchg
iret
push
sub
mov
arpl
pop
mov
or
inc
pop
inc
lds
push
or
jle
popfw
xchg
or
es
fwait
jp
dec
xchg
sub
adc
inc
or
mov
xchg
mov
test
out
in
xor
adc
and
and
lahf
cwtl
lock
adc
in
inc
jmp
shr
dec
adc
cltd
sub
das
sar
nop
test
imul
cmp
cmp
jl
pusha
pop
ljmp
mov
pop
and
pop
ljmp
dec
inc
out
push
lret
sbb
lahf
cwtl
jbe
lds
pop
xor
mov
scas
jmp
shll
int3
jo
push
mov
and
push
mov
inc
pop
jmp
push
stos
fists
push
ds
int3
mov
int
jb
push
insl
lock
mov
call
xchg
push
shlb
arpl
fwait
mull
iret
and
sub
test
add
push
jo
pop
xchg
enter
mov
andb
push
jae
and
push
inc
sbb
into
je
negb
hlt
add
sahf
cs
adc
repz
ret
addb
cmpsb
sbb
xchg
dec
les
loope
jns
dec
scas
cmc
sbb
movsl
pusha
cmp
push
lahf
int
int
xchg
xchg
mov
xchg
imul
inc
ret
shrb
addr16
push
bswap
in
xor
mov
sahf
int
push
inc
mov
push
sub
sub
cmp
add
cmp
xorb
movsl
pusha
jmp
sbb
out
adc
dec
mov
test
or
jecxz
out
push
push
iret
sbb
lea
lret
icebp
mov
xor
andb
test
push
ljmpw
jne
outsb
sbb
lahf
mov
jecxz
cwtl
mov
in
jb
roll
gs
cmp
pop
stos
cmp
cli
ret
pop
cwtl
sub
les
push
and
xchg
jecxz
popa
dec
jge
jp
add
adc
subb
popa
xlat
dec
incl
negb
std
jmp
insl
add
jbe
fnstcw
int
mov
pop
or
sub
or
mov
insb
jp
movsl
shlb
into
inc
pop
inc
or
lea
imull
fisttps
xchg
pop
pop
mov
mov
roll
cld
std
or
mov
ret
jp
test
iret
lea
mov
sub
sbb
cli
pop
push
inc
jmp
test
adc
shlb
int
stc
xchg
and
xchg
mov
mov
mov
mov
sub
xchg
dec
push
xor
jecxz
rorb
fisttps
lock
sub
mov
je
mov
dec
cmp
push
sbb
lcall
rcrb
test
out
jge
jbe
xchg
bound
mov
aaa
aad
bound
mov
ja
mov
and
jnp
pop
adc
push
jns
mov
mov
xlat
cwtl
sub
in
dec
sub
cmp
dec
ja
push
cwtl
inc
add
xor
mov
dec
xor
jmp
aaa
orb
jmp
cmpsb
insl
mov
into
pop
mov
and
int
in
pusha
das
stc
add
mov
enter
xchg
ljmp
xchg
inc
push
jno
dec
loopne
cld
jo
test
push
and
jbe
ret
xchg
leave
xchg
in
adc
rcll
inc
and
aad
leave
xlat
insb
rcrl
call
fistl
std
pop
outsl
push
and
mov
stos
insl
test
push
sbb
push
scas
sbb
shr
pop
and
icebp
and
inc
mov
xchg
cli
aas
mov
dec
pop
cmp
repz
jae
cmp
jg
xor
int3
xor
addr16
mov
cwtl
rcll
imul
pop
xchg
jnp
jl
add
mov
jne
movsb
sahf
jnp
fistl
dec
xor
in
inc
add
sub
lods
lods
fmuls
hlt
xchg
test
std
pop
pop
test
pop
out
imulb
xchg
and
add
test
push
ljmp
adc
insl
or
in
div
cmp
adc
cmpsb
or
nop
pop
and
ret
jb
imull
adc
or
test
pop
or
out
fidivrl
aaa
inc
cltd
insl
out
cmc
mov
mov
lods
rolb
inc
lods
ss
ret
enter
ljmp
jns
mov
push
jbe
nop
test
js
cmp
in
adc
jp
mov
adc
cwtl
cmpsl
sbb
mov
xlat
and
mov
pop
cmpsl
and
scas
cmp
lods
push
xchg
xchg
mov
ss
inc
divl
inc
jl
adc
scas
mov
sub
fs
imulb
popa
mov
sub
and
mov
cs
mov
loopne
out
and
xor
out
cwtl
sub
or
push
aam
xor
cmpsb
pop
fwait
mov
lret
push
or
cli
inc
cmp
fisubl
add
sbb
pop
adc
icebp
in
inc
xchg
adc
and
adc
and
aaa
cs
insl
mov
push
sub
in
outsl
enter
inc
sbb
cmp
jmp
cmp
mov
shr
xchg
stos
or
sarb
mov
nop
jnp
mov
imul
mov
jbe
cmc
dec
xchg
scas
or
hlt
fs
mov
fs
jnp
pushf
dec
mov
nop
push
sbb
test
rcrl
sub
cmpsb
in
mov
sti
push
mov
fnstenv
pop
sbb
jno
ss
push
dec
pop
adc
jns
jl
dec
fcomps
and
test
sub
mov
xchg
fcmove
outsb
pusha
or
pop
imul
je
imul
xor
mov
pop
xchg
in
pop
xlat
mov
jae
or
mov
in
sbbl
fnsave
push
jge
jnp
lret
shll
push
pop
mov
xchg
testb
cmp
pop
dec
mov
fisubl
xchg
pop
mov
loop
jbe
insl
int3
ret
push
mov
jbe
and
data16
push
push
movsb
lock
cmp
sub
xchg
bound
into
lods
je
add
stos
sub
adc
std
arpl
inc
movsb
sbb
addl
jb
inc
stc
into
paddb
leave
es
fcmovnbe
nop
xchg
dec
loope
adc
ljmp
cmp
notb
sahf
mov
fmull
pop
xchg
ja
cwtl
pushf
fbstp
fisubrs
or
pop
pop
lock
mov
lahf
repnz
jbe
fsubrp
dec
dec
sub
push
jne
jbe
mov
sahf
push
mov
add
push
jecxz
gs
icebp
add
xor
lret
ss
mov
dec
arpl
iret
inc
jb
jmp
mov
adc
adc
sub
and
pop
push
or
cmp
fcom
rcrb
mov
test
call
mov
andl
ljmp
jle
xchg
fdivp
and
mov
jmp
add
cmp
push
mov
sti
adc
data16
xchg
sbb
dec
jno
sub
lock
scas
xor
lods
fsubp
or
or
mov
mov
xor
call
daa
int3
xchg
out
movsl
add
mov
iret
insb
adc
inc
mov
dec
xor
mov
mov
imul
loopne
xchg
mov
mov
pop
popl
imul
sub
js
ja
cmp
or
repnz
mov
pop
pop
fnstenv
jge
mov
sarb
dec
stc
pop
dec
das
jp
filds
mov
idivb
xor
mov
mov
inc
mov
pop
cmpsl
lcall
sahf
sbb
mov
fdivrs
jl
jp
dec
popa
addr16
or
mov
cmc
sbb
adc
push
movsb
andb
mov
jge
xor
and
idivb
sub
cmp
stos
jmp
inc
jbe
sbb
cmp
flds
inc
xor
xchg
and
or
pop
inc
jecxz
js
lods
stos
imul
repz
loopne
sbb
lcall
movsl
jecxz
mov
or
pop
addl
data16
fnsave
adc
push
adc
jbe
fimull
mov
mov
add
xchg
xchg
and
adc
sbb
mov
call
xchg
jle
ss
sbb
daa
mov
cmp
xchg
jno
cld
sub
lods
and
sub
jb
nop
jle
inc
fld
mov
pusha
inc
stos
std
cmp
push
mov
adc
pop
jp
push
adc
dec
cmpsb
mov
rcrl
lods
popa
dec
push
sbb
aaa
lds
int
es
jmp
lds
push
in
nop
push
popl
pop
dec
repnz
addr16
nop
dec
outsl
jmp
xor
mov
fs
push
lea
ret
mov
fisubs
out
sub
push
data16
lret
rcr
andl
int
xchg
dec
mov
add
and
push
or
inc
or
sbb
cmp
dec
jae
ds
rcr
scas
out
lock
fisttps
std
lods
adc
cltd
or
add
add
mov
mov
addl
push
int3
loope
and
add
pop
int
popa
cmp
scas
inc
hlt
sbb
int3
jae
sbb
loope
mov
fs
cld
jb
idiv
fsubs
add
aas
mul
cmp
mov
into
jmp
push
inc
add
lea
jne
loopne
ret
popf
adc
push
inc
or
fs
in
xlat
insl
mov
cld
in
ret
and
mov
stos
daa
scas
mov
pop
push
jg
leave
call
js
iret
icebp
jo
rcrb
lcall
out
mov
stc
xorb
push
mov
bound
mov
mov
push
inc
outsb
dec
pop
xor
xor
cli
jo
mov
test
add
xchg
imul
cs
push
js
xor
inc
push
ja
jns
cmp
dec
test
ret
int
scas
fsub
sub
popf
imul
aaa
les
imul
xchg
cmp
or
pushf
jge
cmp
lret
dec
imul
adc
fcompl
daa
mov
data16
ljmp
jl
cmpl
lcall
sbbb
jo
inc
push
lds
sbb
xor
int3
and
mov
or
call
sarb
daa
movsl
sub
xlat
xor
loopne
rolb
xchg
inc
movsb
pop
mov
enter
scas
push
jge
and
mov
xor
nop
mov
lods
sbb
mov
les
jo
gs
mov
mov
stos
and
enter
aas
xor
sbb
fcoms
das
xchg
out
ret
xor
loop
inc
pop
fldcw
jg
je
sub
mov
scas
cld
fnstcw
fiadds
cwtl
in
int
xlat
or
mov
lcall
push
sti
jnp
faddl
movsb
jle
push
test
push
scas
xor
lods
pop
pop
xchg
inc
leave
mov
out
js
mov
xchg
xchg
movsl
xchg
jnp
stos
inc
movb
ficoml
movl
add
mov
pop
and
sbbb
cmp
cld
mov
xchg
pushf
jb
mov
icebp
mov
and
push
call
dec
testb
jb
mov
fistpll
and
mov
lret
mov
orps
mov
mov
addl
sbb
stos
call
push
mov
adc
nop
pop
hlt
in
xchg
jg
adc
sub
shl
xchg
ja
ret
fstpl
mov
rcrl
loop
mov
jbe
hlt
mov
addr16
pop
add
xchg
and
popf
and
int
xlat
movsb
dec
jl
mov
pop
dec
sbb
jbe
faddl
sahf
inc
testl
ja
xor
into
stos
loopne
ds
xor
es
ror
mov
xchg
mov
je
lret
xlat
jg
sti
mov
adc
test
cltd
pop
mov
outsb
dec
sub
std
cs
add
popa
dec
imul
pop
out
xor
imul
pop
dec
cli
mov
xchg
insl
sti
daa
pusha
inc
inc
cmpsb
pusha
cmp
dec
jno
xchg
jp
adc
mov
mov
cwtl
and
or
outsl
sub
ret
ficomps
cmp
gs
ds
push
xor
sbb
out
mov
pop
inc
inc
sub
icebp
imul
in
icebp
sahf
xor
jns
sub
outsb
in
jno
test
mov
in
add
sbb
mov
or
ljmp
push
fwait
inc
stc
cmp
inc
cmp
mov
push
mov
jnp
adc
mov
cli
cld
sbb
jg
pop
outsb
xor
sub
popl
xchg
ljmp
or
aad
sub
inc
insb
imul
jmp
fcmovb
push
sbb
mov
cli
stc
sub
pop
pop
sti
lahf
add
xchg
jmp
arpl
lahf
sbb
adc
pusha
pop
pop
xor
aam
lret
sbb
outsb
es
or
mov
pop
inc
mov
dec
lcall
test
push
fwait
cltd
imul
pop
jg
stos
insb
das
mov
mul
std
xchg
lea
and
dec
call
push
out
movsl
cmp
test
and
xchg
in
pop
fisubl
aaa
push
mov
or
and
dec
ss
mov
loop
test
ret
std
jns
hlt
pop
xlat
shrb
lret
mov
mov
add
ret
cwtl
mov
lds
sub
fbstp
sbb
hlt
lock
mov
add
xor
repz
jmp
addr16
jb
jae
dec
icebp
add
mov
xchg
xor
icebp
or
or
inc
pusha
inc
loop
out
mov
fwait
rcll
movsb
inc
lods
lock
insl
cmc
outsb
cltd
pop
add
fldenv
add
pop
mov
int
cmp
inc
inc
in
inc
int
call
or
imul
xor
sbb
rorb
stc
insl
mov
cmp
push
bswap
sbb
adc
imul
imull
dec
mov
xor
out
dec
cmp
jo
fistps
test
cmp
mov
push
int
mov
xchg
xor
cmc
out
jnp
push
or
enter
insl
rclb
aas
cli
mov
lret
adc
mov
stos
lods
imul
insb
push
sub
jmp
push
xor
mov
and
lods
jge
add
ss
repz
xchg
inc
nop
pop
jecxz
jmp
adc
ja
mov
jnp
aaa
cmp
lret
stos
in
push
mov
imul
lock
insb
call
in
int3
pop
jne
jp
adc
pop
and
popl
or
das
sbb
filds
cmpsb
dec
xchg
push
outsl
dec
lea
cli
dec
pop
cwtl
roll
cmp
sbb
cmc
out
xchg
mov
mov
fimull
aas
aam
add
push
in
fstpl
es
cs
cmp
sarb
inc
aad
pusha
in
ja
cmp
rcrb
repz
mov
dec
adc
dec
rcrl
cli
mov
arpl
dec
ljmp
arpl
clc
mov
aas
xchg
inc
jno
loopne
and
xor
jns
push
jmp
jae
inc
sbb
lcall
lret
inc
push
test
lretw
scas
add
call
mov
pop
pusha
nop
in
jb
cmc
sub
jl
pop
in
test
adc
sbb
adc
shrd
fisttpl
xchg
int
imul
or
std
cwtl
mov
dec
mov
adc
fdivrs
pop
pop
cmpsb
scas
fldt
pop
out
lods
sbb
mov
rclb
jne
out
call
xorl
out
mov
mov
scas
inc
loop
dec
jbe
outsl
scas
stos
fnstenv
pop
push
mov
add
push
xorb
dec
add
scas
lods
mov
cmpsl
data16
cmp
or
inc
cli
rcrb
lcall
jp
in
lods
push
xchg
mov
aaa
cwtl
fadd
and
xor
lcall
lcall
xchg
aad
dec
stos
ja
cmp
movsb
xchg
dec
test
ss
adc
fcompl
andl
sbb
sub
andl
sbb
call
aam
shll
subl
fdivs
and
pop
movq
out
pushf
clc
adcl
add
out
inc
jbe
fidivl
cmpsb
fmull
push
jns
rcll
adc
in
mov
dec
movsb
xchg
bound
lret
sub
fimull
and
mov
or
pop
dec
sbb
cli
outsb
inc
hlt
jp
lds
fistpl
jnp,pn
iret
mov
dec
int3
mov
insl
push
popf
stos
adc
popf
sarl
imul
mov
or
add
push
stc
daa
imul
cmp
xchg
test
outsb
rorl
jg
mov
cmp
stos
jnp
push
pop
clc
in
jae
xor
adc
sbb
xchg
mov
mov
jae
fbld
adc
imul
push
mov
xor
dec
push
and
ficoml
aaa
xchg
rcll
sbb
or
jg
insb
mov
xlat
or
push
cmp
das
pop
push
ret
or
lods
mov
lock
inc
das
lcall
popf
mov
and
jno,pn
or
dec
sbb
mov
add
cltd
mov
cli
push
pop
call
xchg
pop
inc
ror
or
fprem1
mov
out
mov
mov
xchg
cmp
dec
js
mov
std
lret
lods
es
adc
js
push
pushf
jae
fisubs
enter
cli
test
dec
fdiv
sub
mov
mov
pop
cmp
imul
out
xchg
mov
lods
mov
or
mov
sbb
fidivrl
xchg
mov
mov
daa
aam
xlat
sbb
sbb
int3
sahf
repz
mov
jecxz
pop
mov
test
push
push
inc
popl
pop
xchg
dec
add
push
aaa
add
outsl
and
cmpsb
cmp
scas
daa
sub
xor
sub
je
xchg
icebp
add
dec
shll
sbb
pop
into
in
or
sti
pop
dec
cs
dec
outsb
xchg
jne
in
call
xchg
jp
out
fdivrs
sbb
loope
and
imul
add
push
cmp
out
lods
push
xchg
sub
mov
push
nop
mov
lret
inc
popf
xchg
xchg
inc
into
test
xchg
mov
popa
gs
in
push
push
pop
loopne,pn
cmc
cld
mov
cli
pop
scas
xlat
hlt
std
add
pop
pop
inc
jle
xor
dec
add
adc
mov
sbb
loopne
adc
pop
fdivrp
and
xchg
out
imul
rorl
push
sti
dec
xchg
cmpsb
push
les
mov
lock
adc
pop
mov
js
pop
test
pop
xor
fldpi
adc
xchg
mov
jb
mov
outsb
xor
and
adc
cmpsl
testl
jno
sbb
mov
jmp
in
jbe
pop
shr
jg
sbbb
inc
das
push
mov
fadds
adc
repnz
sbb
jbe
lods
sub
sbb
shl
push
xor
mov
int
mov
jl
push
xlat
pop
int
nop
aam
jecxz
or
sub
mov
push
shrl
mov
cld
loopne
sti
mov
cmpl
cmpsb
adc
mov
cmp
jae
aad
call
std
jnp
mov
subb
sub
xor
sub
adc
pop
dec
faddl
xor
jnp
or
lahf
xchg
push
and
out
cmp
cltd
mov
stos
movsb
cmp
lret
mov
add
dec
xchg
or
lods
fdiv
pop
xor
adc
adc
aad
or
push
mov
pushf
jne
xor
mov
lcall
ja
cltd
out
jae
jg
frstor
dec
dec
xor
loop
or
dec
enter
outsl
jp
sbbb
ret
lds
shlb
push
lcall
aas
push
sbb
xchg
dec
mov
xor
inc
div
shll
mov
sub
cmp
mov
stos
test
test
out
adc
dec
pop
imul
repz
insb
int
cmp
iret
xchg
inc
nop
fsubrp
andl
out
negl
daa
mov
data16
aam
leave
popa
mov
inc
jbe
adc
adc
es
out
xchg
in
ja
add
inc
hlt
xor
cmpsl
adc
jle
call
sbb
jmp
sub
or
push
rcr
mov
sub
clc
and
mov
and
or
cs
or
xchg
xchg
sub
notb
fdiv
jg
fwait
mov
sub
fldenv
rorb
and
mov
cs
xchg
lods
outsl
pushf
gs
notl
test
jle
sahf
in
and
lods
xorl
pop
movsw
pop
inc
mov
ja
xor
jmp
cmpsb
sti
cmp
orl
popa
mov
and
jnp
add
jae
enter
mov
lret
fdivrs
lods
imul
mov
leave
mov
mov
icebp
xchg
sahf
ss
jmp
adc
fidivs
cli
test
stos
rorb
mov
inc
test
jnp
mov
movsl
outsl
jl
lahf
sub
xor
clc
movsb
cmp
xchg
data16
stos
sbb
sbb
sti
clc
add
sbb
or
stc
jmp
inc
sahf
mov
jns
mov
dec
dec
xor
mov
outsl
adc
mov
clc
sbb
scas
in
push
out
dec
pop
movsb
iret
jno
xor
push
mov
pop
push
daa
adc
in
xchg
jle
mov
mov
aas
lds
sub
jp
data16
jb
popa
mov
push
ds
dec
adc
add
add
pop
lods
pop
insl
and
cmp
data16
sysenter
out
pusha
jns
sbb
push
imulb
cmp
pop
and
jae
dec
loope
out
daa
or
add
scas
icebp
aam
xor
andl
push
fidivl
inc
dec
dec
stos
lock
pop
out
xor
or
jecxz
scas
add
jno
subl
jl
fcomip
jno
lret
pop
xor
sub
stos
add
mull
mov
push
enter
adc
adc
imulb
aam
inc
inc
enter
jle
call
aas
cli
ljmp
dec
mov
xor
shlb
fcompl
stos
sub
jns
xchg
popf
aaa
cmp
or
in
es
xor
push
inc
and
add
xchg
or
dec
arpl
lret
inc
push
cli
nop
add
dec
jo
xchg
jns
adc
in
dec
adc
call
je
les
clc
xchg
ret
and
cmp
test
in
xchg
add
into
enter
in
xor
clc
lret
outsl
push
xor
aas
stos
shrb
scas
pop
test
xchg
loope
jo
adc
push
mov
push
add
mov
data16
pop
jno
cwtl
lods
fwait
clc
adcb
pop
jnp
pop
pop
imul
fstpl
sub
mov
xor
loop
aad
mov
fdivrs
in
pop
cmp
ret
jecxz
test
adcl
pushf
js
pop
sbb
aas
mov
add
bnd
je
call
sub
into
pop
push
inc
insb
ja
jbe
shld
lcall
mov
js
mov
pop
rorb
inc
push
mov
xor
call
adc
repnz
or
and
pop
cmpsl
push
mov
iret
or
cltd
sub
lods
dec
cmp
into
bound
push
inc
out
pop
adc
imul
scas
ret
subb
add
movsl
out
push
jns
out
xor
cltd
dec
push
adc
orl
mov
push
jmp
test
adc
fs
mov
js
rcrb
sub
or
sub
ss
and
pushf
test
and
std
mov
insl
jl
push
or
movsb
jno
and
ljmp
ja
rorb
inc
test
push
cvtps2pd
jmp
fisttpl
fidivl
in
rcll
pop
popw
cs
scas
jne
gs
rol
adc
movups
repnz
sub
pop
popf
xor
cs
loope
ja
loop
and
add
mov
and
cmpps
inc
in
ret
ficoms
call
mov
jl
mov
jg
jns
ljmp
dec
sub
scas
dec
stc
adcl
and
inc
mov
sti
hlt
jecxz
repnz
sub
decl
xchg
pop
cmp
aaa
test
psrad
adc
push
fiaddl
iret
icebp
cmpsb
inc
mov
fcoms
and
fnsave
or
push
push
subl
shr
dec
test
arpl
inc
push
jae
push
popf
or
rcll
xchg
fnstcw
lods
popa
je
shll
int3
sub
scas
mov
out
xor
hlt
sbb
mov
mov
insl
pop
sub
int3
les
cmp
cli
push
push
shlb
mov
jle
inc
cmp
loope
jecxz
push
lahf
gs
mov
stos
gs
and
lcall
push
das
or
dec
lret
jae
inc
inc
pop
call
fisubrl
nop
call
pushf
mov
inc
repnz
xchg
mov
jnp
mov
adc
inc
lds
dec
sti
test
jp
pop
ja
out
lret
push
stos
cld
shrb
xchg
mov
inc
pop
mov
rcrl
xor
push
lret
jo
scas
out
out
pusha
into
and
cmpsb
fisubrl
ret
push
mov
adc
push
or
mov
cbtw
xor
dec
fmuls
inc
push
out
add
or
inc
mov
ficoms
loope
stos
bound
or
inc
xchg
les
adc
popa
aam
ja
out
jne
xor
push
mov
stos
and
pop
sarl
sub
dec
loope
pop
test
cmovnp
popa
jg
test
mov
xor
out
push
orb
xor
lds
rclb
dec
mov
int3
push
in
push
test
push
in
push
sub
inc
mov
sbb
push
dec
mov
or
lret
push
sub
adc
pop
fildl
fst
inc
fsubr
lret
call
outsb
push
or
fwait
push
sbb
pop
xchg
notl
test
mov
aaa
pop
stos
and
push
mov
lock
int3
jl
xchg
push
or
inc
das
cmp
fdivl
lret
dec
aad
jle
jns
xchg
xor
inc
rolb
xor
pop
cmpsb
fnstcw
push
out
jmp
xchg
push
xchg
in
sahf
xchg
xchg
sbb
loopne
pop
inc
mov
mov
imul
mov
mov
lock
das
pop
in
xchg
lods
data16
testb
and
shll
outsb
fimuls
lahf
pop
push
jle
sahf
imul
lock
in
arpl
shrb
add
jl
xor
mov
int
cmc
and
stc
add
dec
dec
push
call
rcll
fnsave
jmp
push
cmpsl
sbb
gs
scas
and
inc
lock
push
sahf
enter
xchg
add
inc
imul
add
ss
cmpl
popf
aas
push
pop
or
pop
sbb
int
mov
orl
inc
xor
icebp
pop
lret
sbb
dec
clc
test
rcrb
lods
jge
pop
xchg
add
sbb
jg
xor
add
hlt
aas
pop
gs
loopne
or
push
push
cmp
jb
pop
mov
addl
pop
xchg
sbb
popf
xlat
inc
addr16
movsl
mov
fisttps
jge
call
out
daa
inc
aas
mov
vmulpd
cld
leave
andb
dec
mov
mov
add
inc
scas
lret
arpl
data16
inc
inc
xchg
shl
mov
inc
daa
daa
add
ds
ret
mov
ret
add
xor
xchg
in
and
lahf
stos
pop
inc
and
xor
pop
xorb
test
sub
xchg
sub
scas
mov
sbb
sub
mov
jp
inc
mov
lahf
push
dec
addr16
into
repz
je
mov
shll
nop
mov
stos
test
nop
sbb
xor
jb
movsb
cmpl
cmp
stos
je
mov
pop
xor
or
jns
shlb
setb
stos
xchg
lret
popa
pusha
xor
pop
imul
jle
or
sub
inc
js
es
lcall
outsb
push
pop
addr16
mov
fisttpl
xor
push
xlat
jecxz
sub
mov
mov
add
out
or
ss
andl
addr16
movsb
das
dec
push
insl
cmp
int3
xor
test
fstp
test
cmp
sbb
push
rorb
mov
dec
ret
insl
push
leave
es
stos
push
or
dec
xor
jno
sbb
int3
cld
in
cmp
mov
jmp
mov
mov
jp
mov
mov
jle
arpl
enter
jmp
lcall
scas
stc
cmp
push
push
lods
dec
test
xor
xor
std
cmp
out
cmp
add
dec
adc
mov
inc
jmp
jb
test
insb
mov
jnp
push
add
mov
mov
lods
push
das
and
mov
les
subl
pop
bound
xchg
xor
lret
repnz
pushf
jne
sub
int3
jae
dec
ljmp
leave
ret
push
leave
pop
imul
push
pop
cltd
cs
hlt
sbb
mov
and
inc
shll
sarb
mov
sbb
cmp
push
cld
aad
mov
mov
jge
cwtl
jp
cmp
add
lods
ds
fbstp
sub
cmp
xor
mov
enter
js
icebp
testb
cld
fwait
sbb
add
pop
and
and
clc
pop
rorl
or
movsl
xchg
mov
les
out
in
aam
cmpb
fnsave
negb
aas
mov
into
lahf
imul
and
jle,pn
test
xor
mov
fucom
clc
hlt
mov
push
sar
xor
add
mov
lods
jl
sbb
cmpsl
push
push
aam
bound
xor
jp
cltd
inc
addr16
in
push
add
mov
test
xor
xor
cld
insl
pop
push
jge
ret
cmpsb
or
nop
sub
adc
inc
dec
adc
sub
xlat
mov
iret
incl
in
mov
fstp
std
std
fistpll
std
movsb
push
xor
xchg
pop
dec
divb
filds
imul
test
pop
ficoms
xor
and
dec
shll
add
xor
add
mov
jge
mov
fnsave
and
imul
int3
mov
loopne
push
scas
aas
ret
push
push
mov
xor
xchg
cmp
push
cld
mov
pusha
adc
dec
nop
fisttps
ja
inc
mov
rcrb
mov
neg
xchg
bound
out
stc
jecxz
mov
mov
xor
add
enter
scas
fadds
outsb
sub
mov
dec
lock
cli
mov
lcall
xor
rcrl
sbb
hlt
or
jno
ja
shl
cmp
fcomps
ret
lds
popa
leave
mov
divb
mov
mov
in
inc
push
cltd
loopne
jecxz
test
jns
xor
hlt
xchg
fimuls
mov
jnp
movsb
xchg
fisttps
xchg
pop
mov
add
jns
clc
jmp
dec
rcll
nop
cld
lds
jle
pusha
iret
shl
push
adc
ja
cmp
or
js
xor
sbb
dec
mov
pop
jno
rcll
pop
sub
inc
adc
aaa
movsb
sbb
lea
out
mov
sbb
fmuls
je
aaa
int
inc
inc
loopne
push
xchg
sub
mov
xchg
ljmp
es
cmc
pop
fidivrl
add
out
lea
lea
cwtl
add
jae
sub
adc
inc
sarl
cmp
icebp
incl
loop
adc
jmp
xchg
mov
or
sbb
xchg
jo
sarl
icebp
cmp
cmp
lahf
insb
shlb
push
adc
movsl
xchg
dec
xchg
subb
lock
dec
jbe
xchg
in
sub
xchg
jecxz
jo
mov
in
mov
packuswb
mov
in
mov
fbld
popa
xor
ljmp
shlb
or
pop
nop
sub
les
inc
lock
subb
test
outsl
adc
mov
ret
mov
push
sbb
outsl
pop
xorb
pop
or
aaa
divb
inc
sub
and
cmp
aas
orb
test
xlat
pop
mov
jle
fwait
in
inc
jbe
push
call
int
bound
sub
aas
and
js
movsb
jns
jle
lret
adc
mov
sti
leave
cmc
pop
ret
sub
or
cmc
cmp
mov
dec
cmp
int
dec
cmp
cld
and
subl
cmp
push
sbb
ljmp
jo
loope
push
lods
jl
adc
mov
and
jmp
lcall
add
mov
or
xchg
xchg
cmp
test
xchg
aaa
cld
xchg
out
jge
clc
push
mov
inc
sbb
dec
popf
push
add
mov
push
out
stos
mov
call
out
std
test
ss
xchg
test
test
and
pop
outsb
or
dec
loopne
je
fcomps
sbb
aaa
and
xor
sbb
inc
fdivrl
fdivrl
cwtl
sbb
adc
ss
mov
push
repz
clc
shrl
cltd
jno
mov
sarb
add
jle
adcl
or
adc
jg
insl
stos
scas
dec
aad
cmovbe
jl
xor
cmp
mov
jbe
out
cmp
jp
jge
gs
shlb
lret
pop
mov
cmpsb
sar
cmp
stc
jp
mov
xor
sbb
and
dec
xor
jb
or
dec
lret
cmp
xor
fadds
or
shrb
stc
adc
xchg
push
lock
out
jl
inc
add
and
xchg
nop
dec
hlt
sbb
test
jge
fmuls
icebp
lds
mov
pop
pop
outsl
out
fucom
push
or
mov
add
jl
xor
adc
push
pop
mov
push
push
test
out
push
adc
mov
shrb
pop
pusha
push
mov
imul
jae
push
shll
dec
insl
mov
dec
push
mov
test
leave
mov
and
pop
aas
pop
bound
dec
movsb
lret
and
cmp
add
aas
pop
cmpsb
mov
leave
clc
ljmp
inc
push
xchg
adc
roll
mov
repz
lods
adc
push
pop
cli
push
test
and
sub
lret
incl
loope
push
xor
push
cld
fsubrs
fidivrl
sub
adc
mov
add
push
mov
shlb
es
ficomps
out
xchg
iret
or
test
mov
inc
mov
das
push
sub
push
and
jmp
cmp
cld
lret
movsb
jmp
je
sub
jmp
cmp
sub
movsl
lahf
mov
adc
cmp
fidivs
add
pop
insl
sub
mov
and
pop
mov
inc
movsl
mov
inc
std
aaa
mov
xchg
inc
cmp
out
ret
and
jo
mov
sub
mov
push
bound
sbb
adc
outsb
jb
rorb
xchg
mov
cmc
jo
xor
mov
and
push
pop
xchg
cli
push
outsb
jbe
mov
stos
dec
pop
sub
into
imulb
add
fs
ret
cmpsl
cmpsl
jae
push
push
int3
out
test
jns
pop
or
mov
xor
aas
inc
sub
out
pushf
ror
in
mov
mov
jno
mov
iret
mov
xchg
push
das
jl
jge
inc
popf
jae
fisubs
and
jl
jl
sub
inc
enter
aam
mov
aaa
sbb
sbbl
push
fsubrl
mov
push
dec
xlat
jo
xchg
adc
add
cmp
js
sub
dec
cmp
addr16
push
test
ds
int
scas
xor
and
add
shll
test
pop
xchg
add
xor
and
mov
mov
ljmp
or
pop
clc
fmuls
clc
lea
loopne
xor
loopne
adc
in
cmp
sti
mov
movsl
std
pop
loop
rol
jne
rorl
push
scas
cs
mov
mov
sbb
cmc
or
push
adc
xor
mov
cmp
mov
adc
lds
cmp
adc
xchg
mov
andl
aad
divl
xor
push
fsubl
xchg
loope
idivb
in
cmp
inc
iret
sub
ror
clc
jno
xor
xor
ffreep
or
lods
ret
dec
mov
inc
in
jp
imul
cmp
inc
mov
pop
arpl
cmp
scas
int3
dec
sahf
xor
ret
ljmp
mov
out
jmp
xchg
cmpsb
fcompl
xlat
inc
lea
adc
in
mov
notb
movsl
sbb
mov
sub
mov
daa
adc
push
outsl
cs
ss
lock
jge
nop
pop
push
fld
cmpsl
xor
loope
push
pop
rclb
out
sbb
dec
push
repz
sub
fstpt
push
pop
add
cltd
fwait
mov
pop
rorl
or
jne
push
cmc
lods
mov
out
popf
out
mov
js
mov
push
out
pop
test
rclb
loop
std
xchg
sti
xchg
cmc
lea
adc
imul
loope
je
jmp
sbb
push
adc
popa
inc
cmp
movsl
out
and
pop
mov
fldl
sub
testb
pusha
jge
aad
clc
xor
adc
add
outsb
mov
dec
add
arpl
std
mov
mov
js
addr16
mov
pminsw
add
mov
leave
cs
jle
inc
sub
mov
pushf
mul
daa
sbb
ja
dec
push
and
jl
aad
movsl
push
mov
jnp
hlt
dec
xchg
push
data16
je
cld
stos
mov
sbb
imul
frstor
imul
cmpsb
pop
sbb
jmp
lea
push
adc
aas
xor
imul
ss
cmpsl
adc
or
sbb
push
sub
sbb
sub
sub
pop
jnp
xor
cmp
xor
add
jne
add
or
movsb
dec
cmp
xchg
gs
pop
fisubrs
loop
mov
mov
scas
stos
in
fcoml
inc
sbb
mov
jb
nop
jmp
repnz
pop
jne
pcmpeqb
iret
mov
xor
push
icebp
popf
test
mov
in
jbe
mov
or
jecxz
std
fistl
jg
jo
pop
loope
adc
mov
sub
mul
sub
out
fwait
pop
xchg
add
sbb
nop
xlat
fnstcw
sbb
out
inc
adc
arpl
pop
call
xor
in
call
or
xchg
jb
add
dec
push
push
ffree
xor
das
push
ja
push
mov
pop
xlat
movsb
sub
push
out
or
lret
aaa
orl
lret
repz
push
add
jo
cmp
shll
adcl
add
jne
lea
mov
or
imul
std
add
loop
cmp
test
push
xor
pop
mov
ret
and
rclb
mov
lret
lods
sbb
test
mov
add
rorb
out
fnstenv
push
xor
mov
shll
enter
adc
or
push
xor
divl
jbe
add
negb
stos
call
pop
int3
jecxz
int3
mov
xchg
dec
jno
mov
xchg
add
push
cmp
sub
push
dec
mov
add
ret
cmpb
adc
fidivl
jb
mov
jbe
in
pop
push
xor
imul
and
cmp
push
mov
ja
sbb
adc
lds
mov
jno
xchg
cmp
cmpsb
leave
nop
mull
push
daa
adc
enter
add
sub
jnp
aaa
mov
adc
push
movsb
sub
mov
add
out
pop
dec
bound
inc
jmp
xchg
sbb
xor
xor
dec
stos
push
push
lock
lods
lods
cmp
adc
fwait
cmp
xchg
das
push
sub
ret
jmp
or
movsb
scas
das
jb
xchg
clc
xchg
dec
lods
push
jb
pop
cmp
xchg
xorb
arpl
xor
movsb
and
mov
xchg
insb
test
jo
fsubl
rcll
mov
test
cmp
xchg
lods
push
movsl
inc
push
mov
stos
clc
inc
pop
add
jne
out
out
jne
inc
xchg
jnp
pop
lds
and
xchg
push
dec
pop
cmp
mov
xor
clc
and
lea
sub
push
jnp
push
imul
fcompl
and
inc
inc
out
lock
cld
insl
cmp
or
mov
pop
pop
mov
movsb
das
not
popf
movl
subb
mov
ret
cltd
adc
aad
xor
fs
hlt
push
adc
xor
jae
mov
loopne
movsb
sahf
loop
sbb
push
jge
cmp
imul
lds
loopne
lods
cmp
jnp
test
xor
data16
push
jne
shll
adc
arpl
rcrb
arpl
in
rorl
lahf
mov
xor
int3
push
adc
mov
insl
xchg
add
in
sub
lcall
iret
mov
rcrb
sbb
cli
lods
xchg
push
ret
andb
stos
ret
sbb
push
scas
ljmp
jle
jle
jmp
sub
mov
push
jmp
inc
mov
mov
bound
or
inc
sbb
pop
push
jmp
or
popf
push
pop
lahf
fs
mov
and
sub
or
xchg
mov
jnp
fwait
mov
fadd
enter
and
rcrl
push
and
dec
icebp
push
pushf
or
xor
and
push
pop
push
imull
jnp
fidivl
outsb
repz
mov
cmp
adc
xchg
dec
cmp
enter
mov
stos
xor
sub
andl
and
dec
fucomp
mov
sti
in
dec
and
mov
sti
popf
push
add
add
movsl
jge
rolb
pop
xchg
shll
cmp
add
inc
pop
add
xchg
pop
clc
push
jmp
lcall
push
icebp
xor
mov
rclb
loop
xor
jns
sub
shll
loope
cmp
ret
sub
pop
test
hlt
popa
pop
mov
out
mov
xor
repnz
gs
mov
test
or
mov
push
out
lods
cmp
iret
xor
fdivr
roll
add
imul
stos
lcall
or
ret
clc
jmp
cld
push
lret
loope
outsb
std
pop
mov
xor
sbb
lahf
lods
sbb
cmpsb
out
test
dec
leave
mov
cmpsl
push
aad
push
add
pop
hlt
or
pop
outsl
push
xor
fidivrs
ljmp
inc
arpl
cld
outsl
mov
or
test
xchg
push
xchg
sub
jle
icebp
shlb
mov
lock
inc
test
adc
int
or
ret
jmp
xor
ror
dec
xor
cmc
inc
sbb
aaa
xor
cs
ret
add
movsl
xchg
or
pop
cmc
cmp
xor
push
test
dec
inc
repz
mov
xchg
jbe
push
push
stc
cli
pop
adc
pop
add
je
inc
or
test
sub
pop
lods
mov
mov
inc
lea
roll
daa
aas
dec
iret
jnp
and
cmp
add
inc
fcomps
nop
mov
icebp
cmp
lods
push
or
imulb
std
lock
leave
out
sub
mov
cmp
mov
sub
add
inc
test
sub
mov
gs
leave
mov
in
es
sbb
cmp
sbb
jge
cli
sub
mov
fdivrs
aas
lods
cmp
dec
and
dec
pushf
in
xchg
dec
mov
in
push
or
das
push
adc
aaa
mov
push
data16
mov
lret
mov
mov
icebp
sub
xchg
push
mov
pop
enter
dec
cwtl
mov
loope
dec
inc
pusha
popf
std
and
lahf
aam
es
out
jmp
and
mov
stos
popa
or
dec
push
popf
push
and
insl
test
je
push
jecxz
stos
movsb
gs
or
in
notl
pop
adc
pusha
inc
lods
sbb
lock
bound
sbb
dec
add
cltd
jae
mov
sbb
sub
push
fadds
jo
lock
adc
mov
insl
push
pop
lahf
test
mov
addl
mov
xlat
ja
mov
je
inc
cmpsl
int3
mov
stc
sahf
adc
jno
push
mov
rcrb
es
aaa
iret
pusha
imull
cmp
sub
mov
xchg
pop
jnp
mov
push
pushf
hlt
jbe
test
push
mov
fs
jecxz
testb
mov
sbbb
rorl
lret
in
into
jo
in
push
push
pop
fwait
std
sbb
movsl
std
je
jno
adc
mov
repz
jb
add
xchg
or
sarl
dec
dec
cmpsb
push
pop
push
imul
cmp
in
popa
push
pop
clc
ja
das
cld
out
nop
pop
xchg
sbb
and
scas
pop
mov
test
mov
cwtl
shl
push
xor
roll
pop
sbb
aaa
loope
mov
jbe
xchg
outsl
ss
lds
jg
mov
pop
popf
mov
jle
mov
js
xchg
fstl
ljmp
ds
pop
sbb
arpl
notl
and
inc
out
dec
xor
sbb
pop
push
lds
xlat
cltd
sub
lods
in
sbb
std
xchg
dec
cmp
out
ljmp
and
fdivs
pop
push
pop
mov
xor
xor
lcall
sbb
pop
cmp
xor
mov
jl
jae
mov
xchg
mov
lds
or
jae
dec
dec
rorb
leave
inc
imul
sub
and
push
dec
mov
cmpl
inc
cmp
jae
or
int
mov
inc
es
subb
mov
fbld
push
inc
jb
cmpsl
pop
jbe
mov
int3
fsubrp
add
and
ret
xor
data16
fnstcw
sub
mov
mov
pop
scas
cli
add
aas
out
inc
xorb
out
mov
or
cmp
pop
add
pop
xchg
jae
mov
jnp,pn
fstp
jg
imul
arpl
push
jae
sti
out
push
jbe
in
loope
nop
data16
push
ja
div
cmp
adc
or
fists
js
and
pop
jnp
mov
ficoml
hlt
in
call
mov
push
cwtl
je
cltd
stos
sbb
bound
cmp
mov
bnd
xchg
mov
push
mov
cltd
cmc
insl
cmc
fiaddl
cmpsb
std
xchg
in
sbb
sub
pop
es
js
inc
jmp
ds
push
mov
or
jae
inc
ss
mov
mov
pop
mov
push
fcoml
xchg
dec
lock
lea
mov
push
xchg
rorl
popa
fldenv
mov
add
loop
repz
xor
rclb
cmp
jae
out
imul
add
std
xchg
movsb
add
scas
inc
xchg
mov
mov
movsb
movsl
aad
clc
inc
cltd
pop
cmp
or
stos
push
adc
pop
adc
cmp
push
std
mov
jmp
rcll
cltd
inc
mov
pop
int
stos
xchg
popa
mov
mov
mov
mov
and
fdivrl
sbb
adc
ljmp
cli
inc
jge
mov
test
or
out
mov
ds
jge
dec
cmp
out
mov
mov
stos
aaa
repz
mov
xchg
rclb
fs
and
fwait
sub
inc
ret
xor
jge
fs
cmp
and
cld
std
inc
adc
jae
and
cmp
dec
pop
sarl
je
sub
mov
xor
mov
imul
hlt
cmpsl
sbb
and
adc
push
lods
dec
jg
pop
jbe
pop
into
ficompl
enter
add
and
shl
xor
aas
and
dec
in
fnstcw
movsl
sbb
test
imull
es
stc
fsubs
jmp
jg
mov
les
xchg
pop
scas
push
iret
push
sbb
pop
mov
dec
and
mov
sbb
xchg
xor
mov
mov
jbe
movsl
ja
or
inc
xchg
sub
pop
jle
push
pushf
out
mov
dec
or
inc
push
out
out
in
sti
loopne
mov
dec
push
clts
adc
out
jge
xor
stc
lock
jge
mov
and
sbb
xor
xlat
push
clc
bound
dec
push
mov
or
loope
test
rcr
inc
push
movsl
mov
adc
push
imul
adc
fistpll
add
push
mov
lret
inc
push
sub
mov
cmp
push
cltd
lds
enter
sub
mov
mov
inc
js
iret
cmp
cmc
data16
push
insl
jo
jg
adc
adc
add
call
xchg
push
rorl
sbb
inc
mov
shl
loope
test
imul
pop
jae
cmpsl
call
add
mov
add
jg
mov
shll
mov
and
push
bound
mov
fistpl
dec
push
add
test
inc
xor
jno
pop
cld
hlt
int3
cmc
in
mov
or
xchg
cmp
pop
push
aas
repnz
jno
dec
cmp
add
pop
mov
pop
ret
cmc
dec
shlb
aad
or
mov
fs
add
sub
mov
inc
or
shlb
mov
or
sub
adc
jmp
leave
or
adc
test
inc
sbb
push
lahf
pop
add
ds
pop
mov
ficoml
sub
andb
inc
xchg
xor
test
int
ss
mov
lock
xchg
leave
push
jp
insl
jns
cmpsl
xchg
enter
lea
fistpll
adc
push
xchg
jl
mul
outsb
mov
out
sahf
iret
loope
shl
addb
movsl
popf
or
jnp
adc
adc
scas
nop
out
js
data16
xor
leave
into
in
out
in
cltd
mov
and
mov
dec
shl
push
pop
pop
dec
out
or
in
cmpb
repz
push
mov
lods
fwait
cmpb
imul
movsb
sbb
daa
orb
inc
repnz
ljmp
inc
add
mov
hlt
mov
sub
int
mov
mov
in
push
bound
mov
pop
pop
ss
xor
mov
iret
lock
out
cli
mov
xchg
jbe
mov
mov
rorl
sub
xchg
mov
movsl
jns,pt
jl
in
test
jl
inc
jno
lock
in
mov
xchg
imul
lds
popf
jecxz,pt
in
clc
call
and
sbb
push
call
lds
out
out
aad
and
push
in
xchg
or
dec
inc
sbb
dec
dec
cmc
mov
cmp
jnp
mov
mov
jae,pt
jns
xor
cli
out
nop
mov
sub
mov
shrl
sbb
jbe
in
std
or
aaa
das
pop
xorl
fsubs
std
push
aas
das
mov
ret
out
jo
xchg
lods
inc
aad
int3
pop
xlat
xchg
shll
fsubs
repz
adc
dec
aam
pop
bound
aam
lods
jmp
cmc
pop
test
jns
in
sbb
aam
add
arpl
xlat
rorb
cs
repz
add
sub
xor
movsl
leave
movsl
or
mov
cmp
xchg
mov
sub
adc
pop
stos
out
testl
and
adc
push
cmc
xchg
dec
mov
test
daa
in
push
aaa
cwtl
data16
test
dec
imul
cmc
or
repz
movsl
cmpsl
push
or
in
push
xchg
cmovne
sbbl
ficoms
orl
pop
xchg
aas
cmpsl
ds
pavgw
ds
cmp
jne
repz
push
jle
and
add
mov
xchg
mov
dec
push
dec
int
aaa
inc
mov
lcall
sahf
es
enter
xor
jg
stc
mov
clc
cmpsb
fstpl
push
sub
push
pop
cltd
mov
mov
mov
jno
xor
lds
ljmp
lcall
or
lret
xchg
xchg
outsl
test
lret
stc
pop
out
imul
fwait
lret
jp
ss
and
sub
imul
push
ret
scas
mov
jmp
or
xor
loop,pt
call
orl
or
inc
les
push
jb
rcr
repnz
push
aas
orb
imul
mov
jecxz
jg
add
mov
jae
std
and
repz
dec
mov
insl
or
scas
or
fs
mov
jnp
sub
pop
xchg
sub
jae
mov
lods
sti
dec
mov
pop
hlt
pop
push
ret
push
leave
mov
bound
mov
hlt
fwait
mov
inc
lret
divb
dec
cli
hlt
jmp
ja
mov
inc
popf
ret
add
stos
mov
call
and
call
cmp
addr16
mov
inc
stos
or
mov
push
sti
mov
xchg
cmp
arpl
xlat
xorb
xor
jne
push
push
mov
inc
mov
pop
dec
in
xlat
jg
stc
aaa
xor
and
lds
mov
lret
fnstcw
fs
lret
scas
stos
mov
insl
pop
into
push
fdivs
bound
or
or
test
adcb
adc
icebp
and
aad
push
mov
sbb
xchg
xchg
lret
add
push
mov
addr16
and
popa
jnp
mov
cs
enter
fildll
int3
cmp
lea
movswl
loopne
pushl
cli
mov
xchg
add
or
mov
adc
sub
xchg
jp
inc
or
loope
in
data16
mov
sub
out
je
fimuls
jle
or
jbe
es
mov
sbb
sbb
gs
repz
loope
into
add
sbb
push
and
insl
jmp
xchg
ja
xlat
mov
aad
and
loope
xchg
gs
mov
pop
mov
test
mov
cmp
daa
dec
cmp
sbb
mov
rcll
mov
testl
fldcw
inc
int3
out
cmp
jmp
rcll
xor
pop
rcrl
dec
inc
cmc
pop
loop
daa
mov
jns
stos
iret
xlat
mov
mov
cmc
outsl
push
cmc
cmp
jae
cwtl
xor
ficompl
jge
aaa
push
add
ret
imul
pushf
pop
mov
pop
adc
push
aaa
lods
and
xchg
xor
mov
cli
xor
lds
inc
jo
add
xlat
mov
xor
mov
insl
mull
fdivl
jae
stos
mov
ja
mov
ljmp
jne
add
sahf
ds
xchg
daa
ljmp
sahf
int3
gs
or
xchg
fiadds
lea
cmp
pop
leave
push
dec
loope
adc
enter
sub
xchg
cmpb
repz
scas
mov
out
push
jge
and
out
jl
jae
sub
repz
xchg
or
cltd
xor
cltd
cli
mov
cmp
adc
xor
cli
jne
stos
add
lods
mov
divb
fnstcw
sub
in
jo
aas
mov
xor
repnz
pop
pop
je
test
pop
pop
xor
sbb
addr16
cmp
adc
shl
jo
xchg
out
cmp
adc
sub
add
jne
ja
xchg
mov
xchg
lds
mov
add
jnp
test
insl
stos
fld
outsb
push
lret
xlat
pop
int
jno
xchg
add
jns
sbb
lcall
inc
rorb
jno
clc
jl
negb
std
push
sahf
mov
ds
pop
test
sahf
divl
nop
enter
inc
pop
add
sub
sub
xchg
stc
insb
pop
cmp
xchg
scas
xchg
cmp
pushf
pop
insl
loope
in
adc
jge
aas
add
sub
and
mov
out
loop
cmp
sbb
test
ffree
adc
pop
add
pop
ds
int
scas
adc
and
popa
repnz
pop
rsqrtps
jmp
xlat
fs
sub
jne
and
adc
insb
aam
sub
mov
pop
xchg
fdiv
pop
mov
pushf
adc
or
loope
cli
jns
xor
push
fcmovb
sbb
pop
cmp
or
gs
stos
mov
xor
xor
sbb
sbb
dec
add
jmp
push
das
add
mov
mov
js
inc
loope
mov
loop
xchg
add
rcll
or
addr16
sub
pop
push
mov
dec
shl
scas
xor
cs
push
in
inc
int
mov
mov
mov
cld
mov
and
rcr
pop
scas
es
fwait
xor
or
add
ret
je
daa
outsl
inc
cmc
add
repz
std
pop
cs
ds
and
lods
push
push
add
push
mov
mov
sahf
jne
fidivs
push
mov
loopne
mov
jle
or
stc
ret
pushf
andb
sub
mov
daa
sbb
lods
andb
mov
mov
in
cmp
imul
stos
outsl
das
or
fidivs
stos
arpl
cmp
insb
stos
adc
mov
imul
test
xlat
loop
iret
test
xchg
dec
jae
je
inc
pop
test
fwait
cld
push
repnz
nop
cmp
mov
cmp
inc
lret
push
ss
test
lds
lret
fbstp
int3
inc
jl
pop
and
addr16
sahf
inc
fimuls
loop
sub
shrl
push
push
mov
hlt
leave
mov
mov
pop
stc
push
push
pusha
cmp
xchg
xchg
and
loopne
clc
mov
and
lea
stos
scas
dec
lds
add
std
jg
xlat
mov
cmpsl
dec
rorb
xor
mov
sbb
mov
adcb
test
in
adc
ja
fidivrl
and
aad
and
mov
mov
mov
pop
pushf
out
fs
cmc
rorb
es
xor
mov
push
push
lock
mov
cmpxchg
pop
in
mov
subl
xlat
push
in
int3
xor
cltd
mov
iret
fs
outsl
fsubrs
adc
nop
pop
push
push
stos
js
pop
add
mov
lods
xor
ja
cmpsb
add
fdivs
cmp
ret
mov
inc
push
aas
xor
test
cmc
nop
cwtl
mov
xchg
mov
les
out
jmp
push
pusha
sub
ljmp
out
and
add
hlt
cmp
push
push
xchg
ficoms
data16
jp
push
fnstenv
testb
cltd
mov
jp
js
xchg
xchg
cmp
fwait
dec
jecxz
mov
nop
lods
sar
leave
aas
cwtl
jne
data16
dec
movsb
or
add
movsl
push
or
fsts
xchg
mov
in
mov
push
add
cmpsb
sub
shll
xor
fisubl
scas
test
and
insl
push
sub
outsl
push
sub
mov
adc
cld
fistpll
insl
mov
mov
xchg
and
ljmp
push
ret
bound
jno
push
mov
adc
hlt
push
ret
outsb
dec
mov
cmc
pop
sub
lock
div
pop
testb
pop
insl
daa
xor
in
daa
scas
test
insl
adc
sub
int
adc
lcall
loop
sub
insl
mov
add
xor
pop
pop
test
sbb
out
dec
and
test
sub
add
lods
ljmp
mov
xor
inc
pop
out
mov
es
ds
adc
dec
pop
out
mov
jnp
lcall
testb
xchg
inc
int3
loopne
jo
fwait
mov
fstp
idiv
in
aam
sub
pop
out
mov
fs
vorps
add
cmc
fsubl
sbb
push
test
data16
push
fdivrs
cmp
dec
out
mov
hlt
xor
adc
add
mov
mov
mov
flds
imul
adc
adc
lods
xchg
aam
xchg
dec
lea
xor
xchg
aam
sarb
inc
pop
pop
repnz
add
sbb
dec
es
mov
and
jne
pushl
std
aaa
js
addl
test
push
sub
ja
fisttpll
or
xchg
leave
cmp
sub
xchg
pop
lret
or
lahf
mov
sub
in
mov
aas
scas
pop
cmp
inc
mov
aam
sti
xor
adc
out
fstpl
mov
in
fcmovb
cmp
sbbl
jae
inc
andb
sbb
into
adc
or
mov
pop
mov
lods
shlb
and
inc
jno
sub
ja
shrb
jbe
sub
push
cmp
loopne
sbb
cs
fs
push
add
xorl
add
xchg
inc
mov
repnz
and
into
sbb
mov
cli
cmp
mov
mov
pop
fldenv
push
pop
lret
or
cli
ret
stos
aad
sbb
jb
mov
pushf
add
xlat
mov
mov
je
scas
mov
xor
sub
ljmp
loop
and
lds
loope
xor
jl
sbb
or
add
push
gs
inc
enter
or
nop
bound
shr
cmpb
ret
push
dec
jno
pop
push
jne
push
xchg
push
bnd
das
cmp
and
inc
sbb
aaa
stc
jae
orl
jno
out
jo
aad
mov
or
inc
shl
push
inc
inc
daa
jle
das
cmpsb
xchg
cmpl
icebp
pusha
scas
push
xor
sarl
sub
jns
shll
aas
shll
out
fiadds
jl
cltd
push
lret
mov
inc
mov
jecxz
cwtl
mov
in
out
test
inc
into
in
es
pop
sub
fldenv
xchg
in
xor
mov
cmp
dec
ljmp
leave
in
mov
sbb
sbb
lcall
mov
stos
adc
je
gs
xchg
inc
mov
imul
imul
mov
cmp
fdivl
sbb
mov
popa
mov
orb
inc
xchg
popf
push
cli
cmp
or
rol
js
xchg
pop
pusha
sbb
dec
data16
pop
sbb
sub
jle
xor
dec
in
dec
aam
ss
inc
ficoml
std
std
add
rolb
cmp
in
fisttpll
xlat
imul
jmp
mov
mov
mov
mov
and
xor
arpl
pop
push
push
insl
shlb
stos
xchg
mov
jnp
pop
ljmp
ja
lret
add
addl
xchg
loopne
cmp
dec
ljmp
int
movsl
cld
sub
and
push
xchg
lret
rclb
xor
dec
adc
mov
lock
cld
mov
rol
inc
aaa
jae
dec
or
and
push
in
lahf
ja
call
mov
mov
push
mov
ljmp
imul
hlt
stos
out
testb
es
xor
jno
mov
test
mov
setge
sbb
mov
clc
mov
mov
gs
mov
xchg
stos
neg
enter
and
sti
movsl
cld
push
outsl
sbb
jno
and
lahf
rorb
push
in
dec
movsb
rorb
movsb
roll
ret
or
inc
mov
adc
lret
fnstcw
cli
cmp
cmp
add
sbb
lods
mov
sbb
enter
negl
loopne
das
repnz
add
pop
inc
push
std
imul
int3
test
push
xor
daa
adc
sbbl
rclb
int
lea
shrb
orl
or
pop
jns
mov
sbb
cltd
adcb
pop
arpl
mov
mov
dec
cli
sahf
add
out
pop
lds
js
xlat
cmp
jg
enter
sub
cli
popa
mov
xchg
xchg
push
into
sbb
push
xor
jmp
inc
mov
jg
xchg
bound
ss
std
sbb
sub
daa
stc
in
pop
push
ret
or
fistps
aad
dec
cmpsb
jne
test
lds
push
div
dec
inc
enter
jecxz
push
hlt
icebp
mov
jp
mov
jbe
add
mov
and
inc
jo
insb
pop
add
mov
mov
xchg
test
xchg
rol
icebp
push
cltd
inc
mov
pop
sub
ss
fsubrp
mov
inc
or
cmp
jg
push
sti
cmpb
daa
rolb
dec
xchg
adc
icebp
bound
and
push
inc
lret
xchg
scas
xchg
inc
dec
or
loop
mov
mov
ja
xor
mov
adc
rolb
int3
and
pop
mov
out
outsl
fisubrs
cmp
xor
push
mov
xor
xchg
sub
inc
add
dec
sub
jb
icebp
pop
jmp
orl
jnp
pop
in
pop
and
fs
popf
rorl
pushf
inc
sarl
push
mov
inc
scas
jne
std
adc
sub
sbb
xorb
add
in
cmp
mov
sbb
mov
or
xchg
insb
inc
mov
mov
das
push
xchg
jnp
subb
pop
adc
dec
pushf
jo
mov
push
lods
int
call
icebp
stc
sub
mov
stc
dec
jle
jge
mov
jp
add
and
fnsave
and
repnz
or
sbb
jle
push
daa
fdivrp
data16
push
dec
lret
orb
sbb
ljmp
in
jns
adc
dec
or
incl
jns
hlt
sub
mov
and
stos
push
push
iret
push
xchg
fs
mov
cltd
add
mov
cld
lds
lock
pop
sbb
fldl
fisttpll
int
push
imul
inc
mov
dec
cmpsb
xlat
sub
push
xor
stc
xchg
dec
mov
addl
cmp
cmpsb
divl
xchg
push
aad
sbb
icebp
cli
cmp
xchg
sub
push
jle
movb
out
mov
add
jle
mov
pop
stos
pop
mov
sbb
pop
jo
pop
add
loopne
stc
addr16
mov
loopne
add
mov
dec
add
movsb
jns
gs
pop
rclb
inc
pop
call
call
imul
fs
cmp
jp
push
inc
dec
mov
out
daa
jno
jns
lahf
jg
in
push
outsl
ss
push
sahf
mov
mov
or
icebp
neg
sahf
scas
mov
dec
xchg
ret
arpl
adc
pop
adc
sbb
jge
into
andb
cmc
xlat
sub
cwtl
xchg
repz
xor
or
or
add
jge
jno
inc
ja
loop
out
sbb
xlat
adc
inc
ja
xchg
scas
adc
mov
adc
add
stos
push
nop
ss
in
mov
mov
adc
das
sbb
in
push
xor
addr16
mov
sub
je
into
das
pop
ss
mov
addl
xlat
pop
fistpl
pop
and
and
insb
xlat
and
daa
push
add
call
jl
mov
scas
cmp
push
lahf
mov
mov
sbb
stos
xchg
outsl
mov
mov
cmp
repnz
jb
movsl
add
mov
outsb
lods
stc
ja
cs
sub
jne
in
out
inc
sbb
fildl
mov
ret
ret
xor
filds
mov
mov
sahf
leave
repz
nop
adc
lret
movsl
sbb
mov
das
pop
dec
jg
ds
out
das
jecxz
cmp
popa
mov
insl
or
jp
jnp
cmp
sbb
nop
mov
adc
pop
dec
lahf
push
jle,pn
push
insb
pop
sbb
aaa
pop
mov
and
jb
xchg
xor
fildl
lret
push
dec
scas
enterw
inc
aaa
stos
decb
inc
mov
mov
loop
inc
dec
dec
ret
movsl
je
and
dec
fnstenv
mov
push
fdivs
hlt
xor
jne
xor
loopne
adc
inc
fistl
aaa
addr16
loope
and
sub
repnz
xchg
call
les
aad
adc
jl
pushf
mov
xor
fnstsw
in
das
cmp
adc
fcoml
arpl
lret
add
lret
call
push
mov
pushf
lcall
xchg
xchg
jecxz
pop
into
repz
jmp
dec
outsl
es
daa
jecxz
cmpsl
sarb
cmc
popa
lahf
cmp
cmp
mov
lods
pop
cmp
push
jg
ljmp
adcb
dec
out
pop
pop
xor
outsl
shll
aaa
push
aam
mov
push
lds
sti
inc
add
xchg
mov
pop
pop
add
sub
jnp
and
inc
mov
mov
pop
mov
shr
data16
stos
mov
ljmp
neg
lods
mov
mov
ficoml
and
imul
xor
mov
movsb
pop
inc
sahf
mov
pop
test
dec
mov
cmc
sbb
or
outsl
add
jl
ret
lcall
sub
push
jae
adc
add
cwtl
xchg
cmp
iret
mov
mov
ret
in
out
inc
mov
ret
inc
inc
and
mov
dec
and
add
mov
cli
xchg
shl
arpl
movsl
out
pop
xchg
or
sbb
sub
xchg
int3
cmp
mov
decl
gs
push
in
pop
and
jg
popa
movsl
fimull
mov
xor
cmp
mov
rorb
push
xor
aad
mov
or
mov
push
repz
mov
mov
add
dec
js
inc
rcl
mov
and
out
add
adc
test
dec
sarl
ljmp
dec
xchg
mov
int
mov
aas
int
mov
pop
lahf
pop
or
pop
cs
enter
adc
int
in
xchg
movsb
jle
ja
mov
and
stos
fnstcw
das
and
xor
test
jge
push
aad
arpl
notb
xchg
sub
inc
mov
xor
push
es
je
mov
xchg
push
pop
adc
jo
jge
ds
sub
call
sbb
mov
jno
hlt
push
dec
xchg
xchg
adc
sbb
xlat
in
popa
push
inc
and
sub
popf
sub
test
xchg
dec
push
inc
sub
xor
sub
adc
adcl
sub
jge
fisttpll
pop
std
cmp
xlat
xor
ficoms
jno
push
arpl
xlat
lret
xchg
or
arpl
lods
test
mov
xor
pushf
pop
mov
mov
hlt
mov
cmpsb
cmp
in
mov
adc
mov
xchg
mov
mov
pop
subl
nop
loopne
pop
sub
add
sub
mov
inc
xchg
fisttpl
cmp
push
movsb
mov
jge
mov
repnz
cmpsb
adc
sbb
pop
cmp
add
mov
add
in
add
xchg
sahf
sbb
and
push
lret
subl
mov
pushf
bound
pop
fwait
pop
pmovmskb
sarb
icebp
lods
scas
mov
add
xor
mov
fnstsw
fchs
and
jno
inc
in
adc
daa
cmp
cmpsl
add
clc
nop
mov
add
or
mov
dec
sbb
sub
sbb
dec
ds
les
es
jmp
fstpl
fidivs
in
push
je
push
and
shll
sub
push
cmpsb
stos
sbb
fldenv
or
out
mov
stos
je
fwait
lret
jge
cmp
jae
and
add
cmp
lcall
aaa
mov
movsb
es
pop
ficoml
pop
roll
mov
test
pop
cmp
ret
pop
stos
in
syscall
sbb
sub
sub
loop
subl
jge
scas
cltd
xchg
push
call
scas
or
lret
std
jg
hlt
mov
dec
adc
addr16
lock
dec
push
lcall
bound
push
inc
iret
cmpsb
jno
jecxz
inc
test
in
fnsave
xchg
add
add
xchg
daa
push
insb
daa
imul
mov
jbe
cmp
add
fisttpll
xor
clc
jp
subl
loop
xor
mov
add
lret
or
or
jp
sub
pop
sub
jecxz
dec
pop
popa
js
add
and
jae
jo
ss
clc
icebp
cmp
imul
jne
daa
mov
ja
adc
cmpsl
and
jns
jae
rcrl
andl
mov
inc
ljmp
cmpsb
outsb
mov
leave
sarb
xor
aad
xlat
xchg
push
jns
mov
dec
js
divb
pop
pop
sbb
mov
and
xor
cmp
xor
mov
inc
lods
xchg
pop
insl
inc
lahf
jb
fwait
aaa
mov
scas
or
push
sub
sub
add
sub
outsl
jecxz
push
pop
jp
stos
xchg
ficomps
pop
xor
andl
xchg
in
ficompl
xchg
imul
lds
insb
and
push
insb
data16
hlt
std
dec
test
xor
shrl
xor
cmpsb
sbb
out
movsb
inc
fwait
adc
dec
mov
out
jns
fadd
cmp
push
enter
rorb
pop
push
xchg
idivb
shrl
pop
pop
fldcw
rcll
insl
bound
arpl
inc
jo
jae
ljmp
je
nop
bound
jle
add
jle
push
sub
or
mov
jae
cmp
repnz
push
inc
and
pop
insb
and
pushf
xchg
fbstp
sbb
mov
add
inc
mov
mov
loope
inc
add
repz
xchg
notl
xchg
or
inc
adc
pop
cs
add
das
addr16
nop
rorl
and
push
sbb
cmp
adcb
or
cmp
pop
or
mov
sbbl
cmp
ficoms
mov
in
mov
loop
pop
pop
push
pop
iret
sub
addr16
movsb
aam
fldcw
ret
fmull
fisttpl
aad
mov
outsb
ds
add
pop
xor
add
bound
or
cmpsl
ret
or
sbb
push
add
xor
mov
jnp
or
pop
cmc
subb
pop
and
push
pusha
loop
mov
bound
shl
cmp
mov
dec
pop
sbb
imul
lcall
fwait
push
lods
push
xchg
xor
insb
jno
in
out
and
fwait
hlt
imul
ss
pop
int
add
mov
xor
fucomip
xchg
mov
xchg
inc
inc
cmc
data16
aaa
push
pop
and
add
or
pop
jnp
sbb
jb
gs
pop
sub
and
adc
cmp
mov
inc
mov
and
and
cmp
insb
mov
unpckhps
inc
pop
fcoms
add
adc
sub
loop
ds
cbtw
inc
mov
loope
dec
hlt
imul
orb
or
shr
cmpsl
roll
lds
mov
mov
faddl
inc
jle
insl
pop
and
jg
jmp
movsb
sub
push
iret
sbb
mov
shl
add
mov
mov
inc
or
cmpsl
ja
decl
sub
call
jae
test
pop
pop
shlb
add
jmp
xorb
out
jmp
outsl
ret
xchg
mov
int3
cmpb
fistps
push
sahf
sbb
addw
mov
pusha
int3
cwtl
pop
daa
jecxz
lahf
adc
test
es
jne
pop
cmp
pop
jo
sbb
sbb
push
repnz
fsub
mov
xchg
sub
cs
loop
inc
pop
inc
push
and
jno
and
cmp
sbb
xor
xor
add
add
and
test
lret
jge
xchg
dec
addr16
jbe
stc
xchg
jle
roll
aaa
out
add
push
inc
hlt
jae
fnstenv
pop
cmp
lret
mov
and
pop
outsl
cmp
push
sub
sub
fstpt
inc
jge
aas
mov
jno
popf
jno
hlt
clc
jae
jle
pop
fwait
xchg
xchg
inc
int3
sti
out
sbb
aad
test
or
aad
cmp
fcmovnbe
sub
and
sbb
xchg
ja
xor
mov
xor
xor
sub
xchg
test
mov
cli
or
test
int3
test
mov
jl
dec
cwtl
mov
jnp
hlt
and
jne
pop
and
mov
and
ja
fidivrl
add
push
sub
test
outsb
add
in
mov
jecxz
cmp
inc
ss
mov
xchg
in
add
xor
sbb
add
rcrb
or
aad
addr16
jns
mov
dec
cld
pop
aas
push
pop
stc
arpl
xchg
dec
enter
in
pusha
cmp
cmp
push
stos
dec
jl
pop
cmp
pop
push
xchg
sub
es
or
push
icebp
pop
out
jno
dec
sahf
lds
movsl
xchg
xchg
adc
fldl
xchg
shl
adc
pop
adc
ret
cmp
ds
stos
push
clc
loop
iret
popa
ljmp
aad
cltd
mov
jl
mov
pop
sbb
mov
gs
jo
add
cmp
pusha
fidivl
push
inc
xorb
xor
test
icebp
jge
loope
add
adc
xchg
daa
movsl
fldl
sbb
insb
ficomps
add
mov
cmp
mov
lods
sarl
xchg
in
mov
jl
xor
push
jp
gs
test
jo
insl
js
cmp
insl
pop
sbb
push
mov
in
jg
sub
sub
in
shrl
ja
out
dec
sub
shlb
inc
int3
ret
in
mov
dec
push
cmp
and
int
jecxz
cs
stc
fildl
or
lock
in
mov
stc
mov
in
pop
sub
jno
fmull
sub
mov
test
in
adc
xchg
cmpb
insl
cmp
sub
dec
mov
mov
clc
lods
es
leave
mov
or
sub
clc
mov
str
es
or
arpl
pop
adc
mov
cld
ret
push
mov
or
shll
loop
shrb
das
mov
sbb
mov
cmp
fisubrl
sbb
mov
inc
xor
xor
cmovbe
in
repnz
ljmp
stos
jne
mov
adc
call
mov
mov
fstps
jecxz
mov
movsl
ja
je
bound
imul
test
popa
loopne
insb
xchg
les
push
cld
test
adc
je
add
push
daa
xchg
fs
add
fidivl
lcall
les
insb
nop
ret
xchg
pop
xor
andl
xchg
call
ljmp
adc
add
mov
push
call
add
shrb
scas
mov
dec
scas
jns
call
out
jnp
test
movl
fimull
sbb
cmpb
faddl
pop
maxps
testl
push
loopne
jo
adc
imul
fwait
je
shll
imul
sahf
lcall
das
xchg
mov
mov
ret
mov
mov
orb
data16
cltd
push
mov
dec
int3
cwtl
jb
jl
std
inc
mov
mov
inc
out
test
jnp
andb
mov
sbb
out
add
lret
mov
xchg
cmp
cmp
in
es
mov
loope
cmpsb
rcrl
ror
loopne
or
cltd
push
inc
mov
push
dec
js
cltd
xchg
mov
jmp
repnz
sub
cmp
jns
push
pop
sbb
clc
icebp
enter
shll
and
push
mov
jns
sub
and
add
inc
and
addr16
int3
in
cmp
mov
fidivs
jge
cmpb
faddl
arpl
inc
imul
cli
pop
stc
mov
sti
subb
pop
fisubrl
dec
aas
mov
mov
sti
mov
inc
adc
sbb
dec
add
jmp
in
icebp
stc
and
cmp
xor
mov
test
push
rep
shl
jne
in
in
push
xor
cmp
lret
gs
or
and
mov
les
mov
pop
and
cli
ret
loope
jmp
pop
ljmp
ja
enter
dec
leave
shll
fwait
pop
push
push
add
mov
bound
enter
lods
jle
repz
jmp
insb
xor
stos
xchg
mov
dec
mov
or
es
and
sub
mov
inc
cmp
popf
stc
sub
jg
add
addr16
xchg
adc
jp
fsubrs
imul
and
jg
fistpll
bound
jge
mov
mov
adc
mov
test
fmuls
test
movsb
adc
mov
jecxz
or
inc
push
iret
jae
test
add
shl
add
cld
int
mov
fisubrl
out
ret
insb
maxps
popf
adc
std
pop
mov
pop
ljmp
data16
daa
add
fs
sbb
jb
shrd
movsl
cmp
mov
inc
fdivs
jl
cmp
dec
adc
xchg
or
mov
add
adc
shll
cli
dec
jmp
testb
pop
or
push
and
pop
les
xchg
adc
mov
pop
repz
push
mov
mov
push
push
mov
movsl
sub
shrb
push
sub
les
mov
lcall
pop
fstpl
out
clc
jecxz
rsm
push
imul
repz
jl
dec
sbb
fstps
pop
ja
test
outsb
xchg
push
lret
inc
loopne
xor
or
push
cli
scas
push
cmpsb
xchg
xor
sub
aad
lock
data16
pop
mov
jle
dec
or
cwtl
test
adc
aam
ror
ficomps
jl
push
rcl
mov
xor
push
add
ficoms
push
sti
loopne
repz
sub
pop
jno
movsl
cmp
cld
inc
push
dec
add
jnp
popa
push
mov
orb
or
repnz
add
mov
in
jb
dec
xchg
cmp
pop
cmp
js
xchg
out
inc
xorl
iret
andl
push
jbe,pn
fs
test
sub
sbb
adc
dec
xor
div
outsl
push
fldenv
repnz
or
jge
sbb
hlt
test
cltd
inc
sub
ss
je
cmp
dec
int
xchg
mov
fnsave
popa
mov
xor
aad
out
push
dec
pop
ss
mov
sub
es
int
sub
ret
ss
mov
fbstp
xor
les
adc
adc
pusha
imul
add
or
mov
pop
dec
cmp
js
enter
push
mov
leave
inc
dec
jbe
dec
adc
shlb
xchg
xchg
mov
les
ret
fisttpll
cmp
jne
inc
ds
cmp
and
sub
xchg
dec
icebp
fucomip
mov
adc
jae
scas
pusha
pop
sub
mov
ffreep
movsb
mov
push
fidivl
and
outsl
scas
test
es
jae
orb
inc
push
lock
out
add
xor
popf
bnd
jp
adc
push
mov
push
gs
movsl
in
cmc
mov
jnp
mov
out
push
push
insl
xchg
adc
mov
mov
into
add
hlt
xchg
mov
sbb
popa
cmp
or
jbe
ja
rolb
stc
rorl
mov
xor
fdivl
divl
out
in
jne
jecxz
pop
push
aas
data16
pushf
sbb
cltd
mov
pop
dec
in
pop
sub
insl
lret
pop
mov
xor
mov
adc
push
push
sbb
xor
out
and
pop
addr16
jp
and
lahf
cmp
movsb
icebp
lea
imull
faddl
jmp
mov
insb
into
pop
inc
nop
popf
sub
xor
sub
aad
mov
pop
jle
lret
cmp
subl
aas
jmp
adc
mov
jb
popf
push
push
adc
or
pop
clc
adc
repz
mov
dec
xor
rclb
setg
daa
jge
or
dec
cld
scas
jecxz
add
mov
fldenv
xchg
add
pop
mov
xchg
out
gs
rcrb
insb
cmc
xor
pop
aad
sub
inc
mov
sar
sbb
xor
in
and
adc
pop
xorl
insb
fiaddl
loopne
addl
in
push
push
movsl
inc
lcall
leave
movsb
lcall
cmp
jne
and
push
pop
dec
je
xchg
cld
xor
sbb
jecxz
lods
mov
aaa
icebp
fsts
or
daa
stos
insb
jns
inc
scas
aas
movsl
mov
dec
cmpsl
mov
addr16
test
aad
jl
shlb
insb
shrl
add
insl
xchg
mov
dec
xor
cmc
daa
cltd
dec
mov
push
and
loopne
sbb
test
mov
roll
cli
jne
xor
fcmovne
scas
lcall
cmp
lock
mov
push
jmp
sub
movsl
test
pop
add
push
les
mov
popa
mov
andb
lods
cld
ret
mov
jmp
out
mov
ret
jg
mov
fimuls
pop
inc
rcrb
gs
ds
cmp
fwait
push
ret
inc
pop
stos
mov
pop
mov
rorl
sti
cmc
xchg
add
jmp
and
rolb
or
sub
cli
rorb
jge
xor
lods
lea
xchg
cli
or
xorl
dec
data16
mov
push
pop
andb
fnstsw
es
push
js
sbb
lods
adc
repnz
outsl
fidivs
bound
pop
clc
push
subb
fcmovnu
dec
sarl
sub
and
ror
mov
enter
stos
mov
gs
aad
rclb
out
push
push
fsubrl
adc
mov
add
jl
lea
mov
sbb
or
sub
fwait
cmp
add
je
in
sub
jp
out
dec
out
bound
mov
lock
mov
pusha
cmp
in
inc
in
adc
loope
fiadds
subl
ret
pextrw
pop
daa
push
loopne
and
mov
dec
mov
sub
jmp
or
out
jns
inc
aam
push
enter
scas
lea
testl
jle
std
mov
nop
or
cmp
icebp
pushf
ret
out
jecxz
je
mov
mov
sbb
sbb
out
xor
iret
or
insb
sahf
fcoms
inc
lret
adcb
xor
mov
mov
dec
inc
inc
dec
fwait
sbbl
xchg
or
mov
cs
pop
xor
or
and
inc
jecxz
sbb
mov
or
xor
pop
inc
mov
scas
shl
les
stc
dec
push
daa
add
push
inc
push
cmc
mov
aad
daa
aam
shlb
stos
and
dec
cmp
push
xchg
mov
ss
sub
lcall
cwtl
test
aam
mov
outsb
insl
xchg
dec
xchg
rorl
and
push
out
xor
dec
xchg
push
xor
and
ja
cmp
clc
sbb
pop
pop
sbb
fstl
fdivrs
xchg
sub
lds
popf
faddp
aaa
add
sbb
sti
lret
mov
in
ficoms
mov
ja
andl
lods
mov
shlb
jg
xchg
mov
mov
cmp
sub
repz
mov
jge
pop
mov
jb
ss
mov
aad
imul
shll
inc
add
inc
pop
pusha
adc
andl
dec
shrl
out
fldenv
leave
mov
lcall
pop
mov
xchg
mov
fistps
imul
push
pop
push
je
push
cmp
mov
pop
pusha
es
inc
inc
push
or
mov
into
xlat
mov
mov
pop
mov
pop
cmp
into
subl
test
xor
mov
jp
add
sbb
mov
repz
or
repz
mov
inc
jno
and
lcall
mov
lret
xor
loope
pop
mov
inc
xchg
dec
les
xor
rolb
push
xchg
fisubrs
cmpsb
add
cli
adc
pop
mov
movb
add
push
or
push
je
jne
dec
and
inc
ret
int
ljmp
fnstsw
mov
jle
mov
mov
xchg
push
movsl
mov
adc
stos
ss
add
xorl
andl
and
push
pop
sbb
dec
mulb
mov
shrb
inc
sbb
out
push
cmp
cmp
bound
and
add
popf
fistl
shrb
test
cmp
mov
fimuls
pusha
cmp
icebp
hlt
data16
xor
sbb
out
push
sub
push
sbb
mov
insl
xchg
mov
out
add
mov
pop
jp
mov
jo
jl
sub
fdiv
or
inc
fstl
add
ret
imul
addr16
sbb
test
dec
in
add
in
notl
sbb
jno
add
sub
sbb
push
and
lock
add
mov
jb
repz
xor
mov
push
hlt
or
xchg
cs
cmp
lods
cli
fdivrl
adc
adc
and
push
mov
fstpl
xchg
lret
enter
cmp
sbb
fiaddl
dec
fistl
dec
xchg
ret
add
xchg
mov
movsl
xchg
inc
push
js
mov
mov
fisttpl
jp
add
in
add
bound
out
xchg
mov
jno
ds
mov
aaa
lahf
dec
flds
ror
ja
mov
jo
lcall
or
push
into
in
sbb
xor
and
leave
cmp
dec
imul
ss
out
or
and
sub
hlt
rcl
mov
hlt
sbb
enter
mov
aaa
jae
cmpb
push
ror
subl
push
iret
jne
dec
sbb
or
lret
lahf
lods
lock
sahf
and
lods
popa
decl
and
inc
jnp
into
cmc
dec
inc
ret
cmp
cmc
pop
insb
hlt
pop
fisttpl
jg
stos
push
loope
sbb
ljmp
aad
decl
push
inc
in
cmc
jb
clc
cltd
lods
and
dec
push
repz
aaa
push
mov
lock
mov
add
dec
nop
movl
sub
push
adc
sub
jns
inc
jae
testl
cmpl
dec
sarl
push
sub
fcomps
or
mov
nop
mov
jp
adc
and
add
pop
gs
roll
sub
sub
jmp
jmp
jo
lret
xchg
int
push
loopne
and
mov
adcb
mov
cs
sbb
adc
inc
rcr
mov
dec
add
nop
adc
jmp
or
xchg
push
pushf
imul
daa
je
mov
daa
imull
mov
shll
sub
mov
add
dec
and
sub
pop
repnz
in
fwait
adc
sub
das
push
cmc
ja
mov
and
jmp
stos
add
add
lcall
sti
rclb
mov
mov
pop
clc
or
xor
pop
and
push
bnd
cmp
filds
sbb
leave
push
lock
scas
cltd
mov
das
inc
sub
in
fwait
in
mov
cmp
rolb
dec
pop
in
cmp
les
inc
lods
in
mov
stos
and
in
in
cmpsl
ss
mov
movsb
sar
inc
je
adc
f2xm1
or
xchg
and
loopne
cmp
mov
ljmp
cwtl
lods
xor
or
lret
leave
movsl
ret
fistl
inc
dec
and
rclb
cmp
jmp
movsb
out
movsb
pusha
adc
mov
jne
jno
hlt
ss
and
inc
in
xchg
mov
mov
or
jmp
xchg
cltd
add
test
inc
ja
push
out
sarb
repz
ds
pop
popa
cmp
mov
cmp
fidivl
pop
push
cwtl
pop
movsl
ror
scas
ljmp
sub
pop
lahf
inc
bound
pusha
and
das
sub
cmpsb
fwait
xorl
rclb
pop
int3
adc
lcall
mov
inc
sub
lret
and
lods
pop
pop
and
je
cmpsl
scas
dec
xchg
xchg
mov
out
jbe
div
clc
pop
and
dec
inc
adc
sub
lock
pop
fiadds
adc
div
jo
in
jmp
xchg
pop
adc
jb
lock
sbb
divl
andb
jnp
sub
test
test
int
sbb
adc
leave
clc
mov
lcall
xchg
addr16
cmp
pusha
dec
dec
cmp
dec
or
push
jo
fstp
jae
push
sub
decl
ret
int
rclb
loope
push
pushf
push
sbb
xchg
lods
xor
fisubrs
pop
jne
call
fsts
ret
sub
cmp
arpl
jmp
popf
in
cltd
mov
sbb
mov
test
xchg
pop
in
orb
push
sbb
ficompl
in
cmp
bound
sub
cmp
mov
in
jbe
jbe
pop
in
mov
call
sbb
gs
jecxz
cli
enter
sub
sbb
sub
ret
mov
mov
push
cmp
pop
adc
jo
leave
cmp
leave
push
lret
imul
in
jns
mov
cs
jae
aaa
lret
jns
int3
cmpsl
or
pop
fnstcw
roll
ss
mov
pop
and
jns
notl
mov
push
jmp
mov
ds
lods
cmp
push
push
pusha
out
aaa
in
push
add
sub
insb
add
outsl
test
pop
imul
clc
lcall
fsts
stc
pushf
aaa
rcrl
or
sbb
movl
pop
in
notl
mov
call
stos
mov
sub
cmp
or
iret
dec
or
das
imul
push
stc
xor
xor
jno
loop
jp
mov
popf
dec
push
jmp
cmp
mov
adc
sub
arpl
div
jmp
xorb
rorb
mov
or
adc
test
xor
je
icebp
int
pop
dec
mov
add
mov
push
mov
hlt
xor
test
nop
lods
xchg
int3
out
mov
xor
sahf
push
arpl
add
popf
dec
lret
pop
inc
mov
fwait
lahf
arpl
dec
lret
lcall
push
xchg
scas
mov
fadds
movsb
jge
jp
xchg
sarl
das
lret
dec
js
pop
scas
pushf
outsb
jl
lret
inc
adc
jae
cmc
and
aam
xor
xchg
add
js
adc
or
mov
repnz
xchg
mov
jne
je
xchg
int3
pop
add
push
call
outsl
push
jnp
movsl
add
or
ficompl
xchg
arpl
add
xchg
sahf
sarb
insl
cli
dec
lea
adc
or
shrl
rcll
push
xor
add
mov
int
sub
test
std
or
mov
sub
mov
cmp
loop
fnstcw
nop
jb
or
push
shll
xchg
scas
leave
test
enter
ret
ja
pop
mov
ds
into
pop
cmpsb
mov
adc
lahf
nop
lret
nop
and
insl
dec
fsubrs
imul
ljmp
and
jle
leave
or
sub
addw
into
push
jp
aaa
jecxz
daa
or
shl
stos
mov
pop
mov
adc
scas
push
mov
push
ljmp
fs
jne
ss
es
or
lods
pop
jecxz
mov
repz
adc
xor
mov
pop
loopne
bound
loop
daa
mov
push
push
pusha
cmp
xchg
or
xchg
or
cmc
clc
sbb
lahf
ret
notb
sbb
adc
ds
cmp
fnstsw
pop
cld
ficomps
inc
mov
mov
add
sbb
fildl
in
push
pop
sti
pushf
stc
adc
jg
adc
call
dec
cmc
les
pop
adc
jle
jmp
xchg
pop
pop
cmc
adcl
push
adc
int3
lret
jecxz
nop
mov
pop
or
sbb
lahf
inc
adc
cmp
jmp
jp
int
bound
jnp
sub
xchg
xlat
out
pop
lahf
xchg
mov
jecxz
jno
xchg
push
fisubl
mov
das
or
push
add
js
dec
add
add
push
adc
jmp
jle
ds
mov
and
add
andps
ret
push
jnp
mov
test
movsb
xchg
stos
movsb
arpl
addl
jae
arpl
int
xchg
in
cmp
cld
fisttpl
xchg
repnz
pop
movsb
dec
fisttps
mov
cmp
pop
dec
xor
add
adc
inc
testb
insl
adc
mov
movsl
cmpsl
arpl
xor
dec
cmpsb
sbb
pop
xor
int
cmp
ficompl
int3
loopne
and
cltd
rcll
xchg
jnp
xchg
inc
rorb
iret
leave
push
xchg
cmpsb
add
icebp
cmc
add
lcall
or
loop
sub
cli
into
sbb
xor
and
xor
ret
xchg
ss
shlb
popf
addl
pop
pushw
decb
mov
lret
jns
push
icebp
mov
fwait
sbb
aam
push
scas
mov
adc
pop
push
cmp
push
or
ja
in
in
cwtl
pop
xchg
stc
les
mov
cs
pop
es
pop
andb
lahf
cmp
jecxz
adc
psubd
pop
repz
cmp
xchg
imul
push
fisubl
cltd
lahf
sub
inc
popf
fdivr
ja
insb
fwait
scas
or
jmp
dec
test
adc
pshufw
inc
push
xchg
bound
lds
stos
mov
xchg
jge
sub
xchg
adc
jge
ljmp
hlt
pop
ret
test
mov
int3
cmpsb
ficompl
xchg
mov
daa
faddp
loope
mov
jbe
add
mov
cld
push
and
jl
lahf
sbb
dec
pop
inc
push
call
push
pusha
mov
stc
les
sbb
roll
dec
fmuls
pop
outsl
jecxz
sub
add
out
mov
inc
pop
and
les
mov
loop
sub
mov
or
repz
js
jp
push
mov
lret
bound
cmp
loope
cmpl
sar
push
outsb
adc
xchg
mov
inc
mov
mov
scas
cmc
sub
insl
test
sbb
int
push
push
lahf
test
lods
pop
out
sub
xor
mov
pop
in
cli
call
pop
and
mov
lahf
sbb
xor
sub
mov
adc
add
sarl
pop
cltd
stos
repz
fcomp
std
fmuls
push
mov
in
lea
lret
fsubrl
push
cltd
das
push
ret
pop
dec
push
out
je
out
testb
dec
adc
aam
mov
dec
into
sbb
aaa
stos
lock
and
mov
sti
das
xor
sbb
lods
popa
push
insl
insl
sbb
sbb
inc
lret
ljmp
xchg
inc
xor
push
insb
ret
or
jns
rcll
xor
mov
mov
daa
add
cld
pop
xor
aaa
mov
ja
mov
xchg
pop
or
push
xchg
add
add
test
push
mov
or
mov
mov
and
lock
pusha
fistl
and
pop
movsb
or
push
std
mov
fyl2xp1
fwait
cmpb
push
xorb
ror
pushf
xor
insb
adc
movsb
cmp
test
pop
mov
xor
lret
ljmp
mov
in
push
scas
dec
cmpsl
push
shufps
imul
push
in
sub
mov
test
fimuls
pusha
lods
dec
lock
mov
data16
adcl
test
insb
inc
sahf
push
scas
push
scas
lret
or
mov
mov
lcall
mov
cmp
or
les
dec
xchg
mov
mov
stos
jne
leave
lods
popf
dec
add
add
sbb
xor
lock
lods
repz
and
adc
inc
xor
aaa
es
ds
addr16
sbb
test
push
lock
imul
mov
rorl
lahf
aam
mov
pop
jne
ret
lods
xchg
clc
pop
push
xorb
jae
andl
mov
inc
jae
or
mov
mov
adc
or
xor
icebp
fadds
stos
xchg
mov
sbbb
fldt
mov
ror
inc
out
ror
icebp
cli
out
mov
ret
lods
adc
fistpll
mov
add
dec
xchg
xchg
mov
sbb
cmp
sbb
dec
mov
into
sbb
dec
inc
out
sbb
scas
inc
mov
mov
sbb
adc
jecxz
aam
inc
sbb
out
lods
pop
mov
and
push
cmc
aam
iret
jb
xchg
fsubl
cmp
out
add
jb
das
aaa
shl
mov
pop
mov
and
pop
push
scas
enter
std
and
push
xor
lahf
gs
mov
jae
jle
inc
neg
jg
mov
jns
fwait
pop
enter
fdivl
clc
aaa
sub
jo
lcall
or
daa
jno
cmp
in
push
mov
mov
out
xchg
shrl
popa
adc
add
dec
bound
jae
outsb
mov
cmp
in
mov
sub
cmpl
jge
lret
cmpsb
or
jge
ss
pop
in
clc
insb
dec
push
xor
and
push
lds
mov
test
cmp
jecxz
aas
dec
int3
ss
xlat
add
jl
movsb
outsl
arpl
scas
cmp
mov
addl
in
pusha
pop
cmp
dec
push
xchg
outsb
and
pop
in
nop
sbb
lret
mov
out
pop
pop
push
aam
cmp
repnz
aas
cs
push
cli
outsl
scas
std
add
jbe
sub
pusha
int
nop
lret
adc
cs
ficompl
inc
ficompl
cmc
pop
cmp
sub
push
add
xor
mov
mov
jmp
leave
dec
out
sub
push
mov
mov
sahf
jnp
pop
inc
xchg
js
jne
mov
mov
in
shll
adc
push
push
push
dec
sbb
loopne
clc
sbb
loope
shlb
sti
dec
push
jl
ja
lea
xchg
or
cmp
imul
mov
leave
mov
icebp
xchg
mov
arpl
xchg
mov
dec
dec
movsl
xor
je
leave
push
data16
or
sub
adc
cmp
loop
nop
scas
aas
mov
fsubl
fwait
and
lock
nop
sbb
fisubrs
sub
lds
and
dec
sbb
mov
data16
sti
xor
frstor
xor
add
pusha
sub
sbb
jmp
andb
jnp
add
jbe
lds
ror
xchg
jns
pushf
repz
aam
aas
gs
cltd
dec
push
into
pop
jge
dec
push
add
inc
mov
jg
ss
pop
clc
in
movsb
sbb
je
fadd
scas
pusha
xor
lds
pushf
data16
jno
jno
push
mov
nop
and
out
xchg
xor
fisttpll
xchg
push
addb
ret
outsb
gs
or
and
cli
clc
mov
push
rolb
imul
test
and
inc
aaa
mov
ud0
sbb
call
cmp
hlt
xchg
hlt
sti
into
js
xchg
shll
sti
inc
push
popf
cmp
stos
movsb
sub
shrl
stos
cwtl
xchg
push
ds
xor
sbb
enter
dec
sub
int3
and
jae
cli
mov
lods
out
and
adcb
clc
xchg
fnsave
ds
push
jnp
arpl
sub
and
gs
pop
and
or
xchg
lods
mov
dec
rcrb
inc
in
ja
repnz
cmpsb
je
pop
mov
ss
mov
mov
sbb
scas
ds
stos
stos
loopne
fnstsw
fst
or
dec
adc
xor
outsl
icebp
outsb
sbb
jb
xor
sbb
stos
fs
xor
rol
sub
cli
push
aaa
jns
jecxz
fneni(8087
fcompl
scas
pop
xchg
lahf
and
fstpt
ja
push
cmp
enter
andl
lods
cli
in
cs
cmp
cmpl
push
push
js
cwtl
or
fs
lret
cmp
mov
movsl
push
cs
lds
stc
insl
dec
pusha
push
inc
or
mov
adc
push
inc
xor
daa
cmp
lret
stos
aaa
dec
adc
sub
xchg
adc
add
push
mov
add
data16
xchg
pop
mov
ficoms
pop
jbe
jns
int
mov
movsb
loop
sub
dec
xchg
in
pop
sub
cmp
inc
pop
add
lahf
pop
push
cmp
ror
mov
push
dec
dec
cwtl
pusha
xlat
hlt
jno
nop
xor
inc
ss
cli
test
out
xlat
shll
gs
movsl
in
das
xor
shl
aad
cmp
and
scas
add
xchg
ss
movsb
mov
pop
xchg
inc
lret
xchg
mov
pop
cmc
jb
cltd
fdivr
dec
mov
and
cmp
rclb
lods
adc
les
fnstcw
mov
cli
int
pusha
xchg
lret
jo
fdivl
das
sbb
push
popl
and
repz
sar
jbe
insb
or
pop
mov
lret
mov
jl
mov
mov
andb
add
sub
sub
cmp
cmp
mov
pop
cmp
aas
sub
push
fildl
fwait
out
adc
popa
push
push
fwait
pusha
in
dec
cmpl
stos
test
add
push
adc
idiv
daa
push
out
jecxz
push
ffreep
adc
sub
mov
or
pop
mov
xchg
add
adc
fsubrs
pusha
cmp
cmpsl
push
sbb
xchg
inc
jno
mov
pop
fsts
shll
vfnmsubss
dec
xchg
cmpsb
test
ljmp
mov
jb
inc
adc
in
pop
aad
add
js
add
and
sahf
add
out
and
xor
or
xor
lcall
dec
fnsave
lcall
sub
or
pop
adc
in
mov
dec
xchg
ja
xchg
jmp
jmp
mov
arpl
and
jecxz
fidivl
mov
mov
sub
mov
and
xor
lret
out
and
js
fsubl
mov
stos
fldl
flds
repz
fdivs
cmpsb
inc
push
sbb
cwtl
lret
sub
mov
js
lret
adc
jnp
mov
in
cld
lds
jmp
out
cmpb
push
outsl
cwtl
cmp
arpl
or
pop
insl
out
sub
fmulp
push
jmp
or
inc
mov
pop
dec
jg
pop
mov
stc
jb
lock
xor
pop
cmp
sarb
mov
sahf
adc
in
aaa
jg
sbb
sub
jns
xor
and
pop
cmp
shll
sbb
mov
ss
jnp
mov
in
adc
arpl
ret
mov
lds
jb
dec
orb
insl
mov
mov
cmp
icebp
push
jle
ret
push
and
insb
ret
or
xlat
xor
mov
out
push
arpl
sarb
cmp
xchg
aas
xor
add
and
hlt
shll
jae
push
les
add
xchg
popf
jmp
jno
data16
jns
inc
cmp
dec
cltd
add
jae
shll
sbb
xchg
push
mov
inc
pop
cli
out
iret
dec
fwait
add
in
adc
pusha
fcoms
sub
in
jbe
mulb
jne
jo
mov
mov
and
inc
mov
xor
cmp
xchg
sbb
mov
fwait
lret
adc
push
daa
jae
aaa
mov
ja
outsb
push
mov
dec
xchg
pop
cli
or
loopne
daa
mov
add
push
jl
cmc
popf
mov
cmp
out
cld
or
or
jno
add
or
adc
fidivl
imul
cmp
mov
stc
ja
cmp
lods
mov
ja
cmp
xlat
push
daa
inc
aad
pop
push
and
adc
inc
lods
out
jecxz
in
rcrl
or
inc
loopne
pop
loopne
int
push
ret
mov
mov
lods
mov
test
push
jmp
sbb
cmp
rcrb
test
ficompl
pop
and
aas
adc
or
movsb
jno
mov
inc
cmpsb
incb
rcll
lret
into
sbb
jecxz
bound
and
sahf
inc
test
mov
faddl
xchg
mov
push
popf
mov
adc
mov
rcl
ret
or
pop
int
push
and
in
lret
ret
pop
pop
dec
cmp
movsb
jmp
data16
mov
cmp
cmpl
rcrb
push
pop
imul
arpl
xor
stos
or
fsubrl
push
cltd
lcall
mov
sbb
adc
cmp
out
gs
scas
call
pop
mov
jmp
jnp
ss
cmp
je
sub
inc
inc
lahf
nop
cld
and
mov
pop
daa
sub
enter
push
jno
sub
shll
and
or
out
push
jae
outsb
mov
in
inc
cli
test
lds
add
stos
push
inc
mov
in
cwtl
scas
popf
pushf
clc
out
jecxz
shrw
xor
out
test
arpl
or
sub
mov
xchg
mov
sub
stos
or
popf
leave
cmp
pop
fnsave
int3
out
push
mov
inc
or
push
jge
and
push
or
sub
mov
andl
mov
and
xchg
in
pop
jle
lods
fists
mov
scas
cmp
add
imul
repnz
das
ljmp
add
aam
out
xchg
popf
in
xchg
vpshuflw
jl
dec
pop
sub
inc
int3
fs
mov
sub
sbb
addb
ret
lea
fisubrs
mov
je
fsubs
inc
push
xchg
dec
test
imul
aam
jb
movsb
and
in
pop
call
jno
lock
js
fisttpll
inc
pop
loopne
push
dec
and
push
repz
or
mov
dec
mov
or
mov
sti
insb
pushf
dec
xor
mov
scas
jl
outsl
push
pop
rcr
cs
or
outsl
pop
xchg
daa
shll
fwait
pushf
cmp
sbb
lods
or
fisubrs
jge
mov
idiv
jge
iret
jle
dec
jl
stos
mov
leave
xchg
or
inc
jno
imul
sahf
imul
jle
dec
adc
out
fmull
push
addr16
shrb
xchg
enter
mov
mulb
pop
add
pop
repnz
inc
cld
inc
push
mov
out
cmp
aam
js
in
fs
jmp
jno
jno
movsl
mov
push
clc
dec
mov
mov
inc
add
sub
mov
dec
in
jp
hlt
mov
shrl
or
shll
das
xchg
fdivrs
push
inc
mov
cmp
jecxz
cmpsl
and
je
pop
cmp
pusha
call
sbb
cmp
cmc
xor
xor
movsl
stos
adc
icebp
mov
jl
shll
rcll
push
inc
sub
pop
jae
outsl
ja
mov
rclb
loopne
add
inc
gs
insl
aam
add
jb
les
inc
lahf
inc
lock
push
xchg
into
lock
shll
aad
mov
xor
lods
mov
das
lods
xorb
cmpsb
fstp
sub
push
mov
add
push
or
les
xchg
xorb
scas
fs
imul
into
push
jmp
cmp
subb
mov
sub
pop
roll
pop
jno
xor
or
xor
mov
add
loope
adc
jne
xor
sub
hlt
dec
cmp
mov
hlt
lahf
ret
imul
rcl
mov
das
scas
add
add
pushf
cld
xchg
mov
ds
dec
outsb
or
iret
sarl
pusha
jp
push
mov
shrl
jg
sbb
and
jns
das
test
and
xchg
std
rolb
stos
subl
mov
clc
test
xor
inc
adc
test
sub
sbb
je
cmpb
jbe
insl
push
cmp
xor
call
outsb
loop
jne
mov
int
loopne
jne
je
imul
push
adc
xorl
out
push
adc
xchg
out
inc
cmp
sub
iret
xchg
cmp
shll
out
out
mov
lods
mov
xchg
jle
adc
fwait
in
mov
test
push
lods
sub
stos
jmp
xor
jno
add
and
xor
add
test
insl
mov
xchg
inc
adc
and
aas
push
out
and
push
dec
inc
pop
xchg
push
stos
outsl
imul
test
cwtl
gs
jl
dec
pusha
das
cli
movsb
add
inc
push
pop
sbb
sbb
jp
xor
jp
dec
jbe
lahf
xchg
notl
adc
repnz
fistpl
push
cmp
and
bound
pop
dec
mov
es
loopne
xor
in
add
dec
xchg
cltd
leave
call
push
mov
lock
and
out
cwtl
shrd
cmp
pop
ds
add
jns
push
pop
fildll
clc
cmp
movsl
fdivrp
xor
or
mov
lock
inc
sub
jnp
cmp
sti
jae
orb
cmpsb
pushf
iret
jbe
mov
ret
sub
fcomp
sub
addr16
xchg
and
loopne
dec
out
popf
xor
out
push
testl
push
push
jo
mov
mov
adc
stc
lea
out
dec
mov
ds
roll
imul
pop
fs
pop
mov
lods
stos
loop
pop
pop
inc
or
and
ljmp
add
add
inc
pop
sbb
ljmp
sahf
fisubrs
scas
je
test
push
jo
jae
movsl
popf
mov
cmp
out
jno
sbb
lods
rorl
xorb
mov
stc
push
lods
xor
or
loope
lock
icebp
aam
cmpsl
mov
sub
repz
xchg
out
shrb
add
pop
je
cli
sarb
gs
popf
cmp
imul
and
rorl
fsubrl
add
jmp
shlb
scas
xchg
xor
ss
dec
inc
jmp
mov
repz
inc
lcall
jb
out
mov
call
inc
cmp
jno
push
and
cvtps2pd
mov
or
add
mov
jg
fisubrs
xchg
xchg
int
popf
jae
loope
adc
jmp
mov
fcompl
sbb
xchg
sbb
mov
out
add
xor
mov
sub
cmpb
and
xchg
add
int3
pop
or
daa
cmp
pop
mov
jecxz
das
lock
lea
add
add
push
add
and
test
popa
rorl
sbb
ljmp
or
mov
cmc
or
cmp
jmp
lahf
aaa
push
dec
test
inc
or
jnp
test
xor
int
mov
clc
cmp
in
pushf
ss
int3
cmp
repnz
cmpsl
mov
mov
ror
mov
push
and
push
rcrb
dec
sbb
sub
xor
jo
add
adc
imul
push
xchg
gs
insl
push
xchg
out
xchg
adc
int3
test
rcrl
cmpb
aaa
cvtsi2ssl
data16
lods
xchg
xor
rcrb
jl
enter
xchg
bswap
inc
dec
mov
or
xor
xlat
rol
mov
sub
mov
and
sti
testb
sub
xor
or
enter
iret
mov
sbb
enter
clc
pop
loope
push
das
sub
jge
cmc
shr
in
mov
push
mov
test
xor
mov
call
adc
lret
fs
icebp
lds
pop
adc
aaa
jmp
jmp
adc
stc
inc
movsl
inc
test
adc
adc
lods
sbb
sbb
shlb
jnp
pop
arpl
pop
into
movsl
add
ljmp
pop
lds
and
cmpsb
jae
repz
add
in
adc
dec
ret
jns
xor
test
outsl
pushf
pusha
jno
inc
ds
std
xor
inc
cmpsb
lds
aam
push
sahf
adc
push
jl
mov
cmp
jmp
ljmp
xchg
test
movsb
movsb
sbb
cmpsl
aam
shrb
sub
pop
cmpsl
cmp
adc
mov
sub
shlb
mov
out
adc
std
sbb
pop
and
push
jnp
das
sahf
leave
jno
testl
adc
mov
mov
jge
adc
jbe
push
add
repnz
push
adc
push
mov
fisubrl
adc
pop
mov
cmp
jmp
jp
insl
add
loope
dec
add
add
imul
in
in
inc
xchg
fs
out
jmp
fnsave
cltd
jl
jo
int
stc
out
ss
xchg
in
lods
test
das
sti
or
cmp
test
lret
inc
sub
addr16
push
enter
adc
js
leave
and
in
and
cmc
out
sub
outsb
into
xchg
mov
pop
mov
mov
mov
or
inc
xor
subb
xchg
popa
testl
lahf
adc
ja
jl
out
sar
js
mov
dec
aaa
inc
jae
jl
add
mov
sbb
lock
push
cltd
add
jbe
xchg
mov
and
add
scas
sub
and
sbb
addps
mov
int
inc
push
jne
cmc
insl
imul
pop
out
fs
dec
into
add
je
rcrl
test
add
std
jae
es
stos
jno
push
pushf
or
cwtl
mov
xchg
movsb
push
lods
int3
sbb
and
popf
push
dec
nop
and
xchg
pusha
sub
mov
and
jmp
cli
test
cltd
imul
dec
cs
mov
lahf
inc
scas
mov
push
out
loope
out
clc
iret
adc
or
or
jmp
inc
data16
aam
mov
js
std
cltd
and
call
xchg
call
in
fdivrl
inc
jmp
push
call
adc
gs
cld
les
das
fwait
sub
test
jne
mov
xchg
fstpl
cmc
mov
add
sbb
mov
cmp
sarl
rorl
xor
fisubrl
dec
inc
mov
cmp
inc
adc
outsl
sti
mov
and
enter
jl
lods
pop
xchg
js
mov
stos
icebp
sbb
push
mov
dec
daa
inc
mov
lock
mov
jl
rol
aas
fstps
xchg
test
flds
dec
insb
insl
jge
sbb
push
pushf
jmp
mov
test
stos
cwtl
mov
in
or
xchg
ret
sbb
hlt
clc
imul
icebp
lods
test
xchg
mov
ret
pop
fbstp
lret
push
and
test
dec
outsb
dec
cmp
jecxz
and
pusha
mov
fcoms
jl
call
pushf
in
ret
adc
mov
xor
jmp
jnp
adc
mov
mov
inc
stos
mov
daa
mov
aam
ret
inc
les
adc
iret
out
push
stos
loop
rorl
and
lahf
lahf
mov
lea
popa
dec
and
inc
push
xor
jmp
fadd
xchg
pop
popf
scas
mov
lods
jae
out
fistl
popa
out
mov
pushf
dec
mov
add
jne
add
lds
mov
adc
add
mov
arpl
adc
xor
int3
and
xchg
cmp
cmp
aad
imul
jae
or
lods
push
into
push
scas
xor
idivb
loop
mov
shrl
jbe
adc
push
jbe
mov
dec
pop
shll
mov
sbb
inc
push
ret
mov
push
aad
aad
mov
xor
nop
inc
pop
ret
jg
mov
fnstsw
ljmp
pusha
sbb
pop
stos
icebp
jno
repnz
insl
xchg
lods
stos
fstps
pushf
cli
dec
ja
movsl
fidivrl
jo
in
iret
push
mov
sti
jmp
inc
int
sti
ljmp
rcr
inc
add
add
push
xorps
cli
dec
mov
cmpsl
mov
popa
shl
fwait
inc
mov
or
and
in
iret
xor
dec
test
push
push
dec
adc
jle
mov
jae
jle
lods
mov
pop
outsb
test
sub
aas
mov
dec
and
push
push
jne
out
pop
das
adc
push
popf
pop
enter
out
or
pop
in
sahf
imul
test
mov
sub
test
adc
xchg
adc
fucomip
xchg
xchg
ja
jg
movsb
lods
push
clc
push
and
add
or
xorl
in
pop
lea
sbb
sub
xchg
jg
dec
mov
roll
mov
push
sub
cmpsb
dec
add
out
mov
inc
mov
jns
xchg
mov
pop
mov
out
push
push
xchg
xchg
pusha
xor
dec
arpl
cmp
scas
mov
addr16
xlat
out
fisubl
dec
in
daa
mov
push
add
and
cmp
pop
adc
or
jmp
adc
xor
cmp
mov
fdivrp
pusha
xor
push
movsl
jg
push
xchg
mov
lea
daa
jecxz
mov
push
adc
push
daa
out
mov
sub
mov
push
cwtl
mov
xchg
or
xor
test
xor
sub
and
fcoml
pop
lods
sahf
lock
add
shrb
fmull
int3
loop
hlt
rcr
push
ds
stc
dec
push
fildl
lea
fdivrl
repnz
rclb
ja
inc
sbb
jne
mov
leave
cmovg
imul
fisubl
outsb
popa
dec
inc
icebp
sub
and
add
sub
mov
out
fyl2x
mov
adc
std
je
popa
or
je
orl
sub
aam
cltd
test
cmpsl
inc
movsb
les
insb
sub
mov
push
adc
arpl
scas
in
push
cmp
aad
shll
pop
lock
xchg
push
cld
sub
daa
dec
mov
stc
push
mov
push
ljmp
jle
jns
scas
iret
fldenv
push
out
outsl
xchg
sub
mov
les
aaa
and
outsb
pop
or
mov
in
push
movsl
cltd
icebp
push
ret
insb
lods
dec
or
mov
aaa
andb
pop
test
jmp
jg
ficoml
repz
pop
sahf
dec
pop
xchg
lcall
stos
out
fwait
mov
icebp
and
mov
bound
cmc
test
xor
push
push
testl
fisttpl
jmp
mov
nop
or
sbb
cld
aad
mov
add
cmpsb
sbb
or
sub
or
cmp
cmp
popa
pop
dec
mov
bound
mov
xchg
cld
xchg
ret
adc
outsl
inc
xor
push
push
dec
les
cld
dec
into
jl
mov
or
push
rcrl
pop
xor
pop
push
inc
add
in
mov
dec
cmc
jp
int
int
test
hlt
sbb
pop
push
adc
int3
aad
push
jg
daa
add
cld
dec
mov
push
xchg
mov
flds
ret
imul
sahf
cli
mov
pushf
sbb
loope
inc
sar
sub
mov
sbb
lods
scas
push
loop
jae
bound
stos
push
pushf
dec
push
das
adc
jnp
inc
xor
mov
inc
lret
movsb
mov
ret
scas
mov
cmc
sub
xchg
test
test
cmpsl
push
xor
in
pop
push
roll
cmpsl
clc
pop
jns
scas
push
cmp
inc
mov
inc
addr16
sbb
dec
dec
xor
inc
pop
insb
fldl
xchg
sbb
jmp
jb
mov
shl
and
idiv
outsb
movsl
sarb
popa
popf
or
xor
mov
lret
nop
jg
cmp
push
fldenv
mov
testl
push
in
xchg
jnp
or
inc
fdivrs
cld
cmp
shl
out
insl
cli
mov
call
lods
imul
shrl
push
jbe
inc
pop
js
ljmp
cmp
negl
jns
adc
cmpsl
push
cmp
fisttpl
flds
jecxz
rorl
xor
jne
ss
clc
jge
mov
push
cs
ljmp
cmc
test
inc
std
push
cmp
push
mov
xchg
add
add
cmc
jne
mov
sbb
pop
clc
pop
cld
clc
dec
mov
sbb
stos
push
std
in
gs
jg
xchg
in
jmp
mov
jmp
fidivl
xchg
sub
push
outsb
dec
repnz
js
mov
es
jb
inc
mov
out
aam
xchg
mov
pop
loope
add
mov
mov
in
pushl
out
sbb
or
movhps
xor
and
mov
xchg
lea
outsl
loopne
repnz
xchg
test
add
or
xchg
aaa
leave
mov
gs
lret
shr
fstps
aam
inc
bound
enter
push
arpl
rep
std
mov
adc
mov
das
cmp
or
or
sbb
inc
mov
or
cld
sub
cmp
stc
jno
ss
xor
stc
pop
movsb
mov
mov
pop
xchg
aas
dec
add
mov
pop
dec
push
rorl
arpl
out
jp
dec
dec
jl
jp
arpl
push
mov
ja
pop
jle
lret
sub
push
pop
push
sbb
mov
cmp
mov
cmp
repz
cmp
dec
jno
jg
insl
sub
enter
fdivs
pop
add
jae
out
lds
repz
aas
dec
stos
xchg
mov
or
jmp
imul
push
cmp
push
adc
and
mov
cmp
xchg
daa
mov
xchg
ret
sbb
in
mov
cmc
dec
mov
cmpsl
daa
xor
xchg
cmp
xchg
or
push
mov
es
pop
jo
push
push
cmpb
push
mov
jmp
push
xchg
pop
sbb
xor
cmp
sub
push
fldl
pop
femms
xchg
loope
sti
shll
add
xchg
dec
jo
fbstp
and
pop
dec
pop
jle
mov
xchg
out
loop
test
jno
mov
aaa
iret
cmp
xchg
psubd
adc
dec
aaa
push
repnz
pop
ss
inc
jmp
psrld
xchg
or
xchg
ss
push
sub
cmpb
test
or
dec
xchg
inc
idiv
mov
repz
sbb
sbb
xchg
lea
mov
mov
in
pop
and
add
mov
pop
mov
mov
xorb
jge
mov
enter
outsl
mov
mov
xchg
addr16
inc
int
std
push
jle
mov
in
cmp
fldcw
ja
and
or
adcb
ljmp
cmp
push
andb
push
and
add
outsl
or
xchg
leave
data16
fsubrl
mov
adc
cwtl
out
sbb
and
add
sti
icebp
loopne
fstpl
popf
or
repnz
jno
jg
xor
push
push
pop
push
jne,pn
xor
sbb
mov
ja
mov
testl
leave
das
and
mov
inc
add
push
leave
loope
jae
pop
mov
mov
mov
je
int
adc
or
jp
inc
aam
pop
lcall
in
inc
adc
lcall
xchg
sub
dec
mov
push
testl
xchg
repz
jne
call
xchg
jns
dec
daa
pop
push
mov
repz
cli
and
jmp
addl
lds
mov
int
lods
push
in
mov
xor
out
inc
jl
les
inc
or
outsb
sti
mov
push
fidivrl
mov
scas
mov
dec
xchg
push
mov
insb
and
mov
or
adc
inc
fldcw
insb
rclb
push
outsl
in
dec
sub
mov
mov
out
dec
test
pop
repz
mov
int3
outsl
js
lcall
xchg
aas
lahf
mov
test
out
lcall
sub
fs
ret
lahf
jge
push
jg
dec
fcmovnb
subb
insl
add
gs
jmp
into
cld
mov
and
push
sub
jae
repnz
or
xor
mov
adc
stc
push
dec
jl
nop
inc
in
lods
lock
jbe
sbb
out
stc
insb
in
js
dec
mov
aas
inc
lods
rcl
mov
push
insl
cld
pushf
lock
xchg
das
hlt
pop
rclb
jb
stos
lods
push
das
push
push
dec
in
cmp
push
lods
orl
mov
rcll
fisttpll
and
adc
jle
xchg
cwtl
inc
pop
lock
daa
fdivrl
fcoml
jp
xor
jl
mov
cli
mov
jno
mov
mov
xor
cmp
pop
xchg
insl
push
test
jp
imul
jl
push
pop
nop
jb
test
mov
inc
pop
andb
or
add
xor
pop
stos
loop
enter
mov
inc
sbb
lods
mov
sub
push
sahf
je
cmp
dec
mov
fwait
mov
ljmp
mov
test
mov
cmp
insl
ret
je
fmull
fwait
mov
sbb
lds
pop
cmpsb
push
inc
pushf
and
pop
outsb
stos
cmpsb
lods
pop
cmp
aam
lahf
addl
addl
data16
and
out
cwtl
in
incb
lret
push
test
shll
mov
vmovaps
mov
pushf
xor
out
js
loope
addr16
ja
sub
out
cwtl
mov
imul
add
dec
adc
cmc
mov
mov
adc
xor
mov
sarb
and
mov
mov
adc
pop
jp
loope
or
cwtl
arpl
push
inc
bound
dec
test
jo
ja
mov
repnz
mov
xlat
gs
ret
nop
xchg
ja
push
fs
repnz
movsl
or
fadds
mov
and
sbb
mov
or
sub
insb
dec
mov
sub
lret
call
inc
pop
jg
push
dec
pop
stos
into
icebp
sub
imul
mov
xor
jno
in
sbb
xor
pushf
mov
jbe
or
out
repz
push
fisttps
xor
jbe
sbb
add
cli
data16
imul
cmc
sbb
mov
mov
mov
pop
push
xorl
and
xchg
lea
cli
and
add
xlat
popf
and
push
int
lret
cvtpi2ps
cli
ret
ja
aad
pop
dec
movsl
jnp
pushf
jno
cmc
jae
mov
lods
addr16
jle
hlt
add
and
add
loopne
fdivrl
addb
insb
inc
aad
mov
mov
out
sub
adc
xorb
dec
pusha
and
xchg
add
or
imul
es
or
cmp
cs
xchg
imul
xor
cltd
je
imul
inc
cmpsb
xor
mov
insb
mov
push
fildll
fsubrs
cltd
lds
push
mov
cltd
pop
adc
je
inc
addr16
sub
xor
or
out
test
mov
insl
push
stos
mov
popa
dec
pop
adc
scas
sub
test
cmpsb
in
sub
outsl
inc
idivb
xlat
cmp
push
inc
push
cmp
pop
sub
xchg
lods
sbb
loop
jle
clc
ret
mov
fidivl
andl
pop
jp
mov
push
stos
dec
add
xor
mov
jmp
lret
into
adc
mov
fcoms
pop
mov
icebp
push
xor
dec
repnz
test
shll
pop
inc
xor
pop
add
out
fstps
pop
xor
pop
xchg
jbe
rcll
adc
jg
cltd
es
cmpsb
aas
sub
repnz
repnz
fs
lods
into
call
mov
in
lods
add
mov
stos
ds
and
push
mov
fstpt
cmp
mov
add
pop
imul
cmp
ljmp
jo
pop
pusha
jnp,pt
out
aaa
mov
mov
jp
insb
scas
outsb
jle
cmc
sti
in
aas
cmp
scas
xchg
fbstp
adc
aam
test
daa
jno
or
push
cmp
mov
popa
pop
shll
addb
leave
pop
lea
xor
in
movsb
test
jno
imul
enter
insb
push
out
adc
subl
xor
testl
push
cld
push
mov
sbb
pop
pop
test
cs
xor
sbb
cmc
inc
enter
bound
pop
mov
ja
dec
sarb
sub
sbb
adc
leave
inc
in
jae
jl
adc
adcl
adc
or
scas
push
in
shrl
dec
and
add
mov
mov
je
mov
pop
pop
pop
xor
fists
or
mov
adc
out
mov
jne
cmpl
loop
jnp
xorb
fiaddl
jl
xor
popf
mov
bound
jbe
or
test
xchg
sub
xchg
xchg
pop
insb
lock
test
pusha
xchg
ds
packssdw
cmp
adc
fidivrs
cs
inc
call
repz
xchg
add
shrb
cmp
rclb
mov
cmp
mov
pop
pop
adc
or
mov
and
sub
jge
test
into
fbld
push
jnp
stos
out
movsb
clc
icebp
lcall
pop
adc
movsl
andb
and
out
pop
or
and
and
cmc
aad
sbb
adc
push
pop
push
int
jl
mov
xchg
pop
mov
jl
shll
movsb
mov
stc
fists
arpl
scas
mov
push
or
lds
cs
fbstp
pusha
cmc
add
mov
mov
jg
mov
push
lock
push
xor
inc
cmp
or
sahf
sti
cmp
push
adc
ds
lock
fwait
lahf
ja
push
lahf
xchg
add
into
push
xlat
sub
es
out
loopne
rcl
loop
mov
js
data16
sub
xchg
loope
fnstsw
pop
insb
adc
out
push
fs
push
cmp
ret
test
adc
inc
mov
sub
imul
lock
cmpsb
inc
cli
cld
lds
je
mov
cmp
in
mov
push
imul
roll
sub
sub
cs
out
inc
rcrl
cmp
and
fs
mov
jmp
movsb
mov
push
and
adc
xor
or
int3
imul
inc
adc
xchg
outsb
mov
jo
pop
mov
push
imul
cmp
subb
pop
add
shll
sub
sbb
jge
mov
aas
movsb
cmpsw
pop
fnsave
mov
xchg
push
mov
mov
lahf
js
adc
cmp
lret
sbb
testl
mov
push
jge
mov
xchg
jp
call
dec
jo
inc
scas
int3
add
repz
ja
jno
jle
sbb
nop
bound
pop
cmc
shrl
push
mov
leave
cs
jbe
shrb
or
add
insb
loope
lret
add
rcr
shrb
xor
adc
cld
and
in
jle
jmp
mov
out
ret
daa
or
out
xchg
add
ret
add
pop
iret
mov
pop
xchg
inc
mov
loope
push
cmpsl
lock
rcll
jne
cmpb
andb
xchg
int3
das
xchg
fsubrs
fcom
dec
mov
mov
es
dec
loopne
pop
mov
mov
push
pop
ljmp
outsl
std
test
fildl
lahf
in
fidivrs
adc
lods
xchg
enter
adc
jecxz
out
sub
fldl
imul
pop
adc
lret
mov
into
cld
xor
pop
adc
ret
test
ss
and
jae
lahf
in
fst
jmp
fisttps
mov
pusha
das
insb
mov
loop
and
rolb
cmp
dec
aad
insl
inc
pushf
loopne
xor
cmpsl
or
jnp
in
fcoml
sbb
sub
push
add
and
fcompl
or
sbb
push
mov
or
movsl
test
dec
mov
fists
enter
in
rolb
mov
and
outsb
push
add
lret
cmp
add
xor
mov
enter
or
shll
xchg
jecxz
cmp
push
stc
mov
test
out
aaa
xor
adc
mov
adc
push
es
sbb
movsb
push
inc
push
add
jne
cmp
ret
add
mov
gs
in
mov
push
sarb
dec
in
inc
mov
inc
and
iret
add
pop
push
cmp
aad
mov
out
pop
push
fistpl
dec
shr
and
sub
inc
pop
sbb
outsb
mov
stos
mov
jnp
mov
mov
dec
add
sbb
fwait
testb
or
pop
add
nop
insl
lahf
lea
xor
jno
addr16
clc
jmp
das
rol
dec
sub
popa
call
dec
mov
sarb
mov
inc
ds
imul
sub
shl
cmp
stos
mov
out
lds
repnz
loop
jg
arpl
jae
movsl
push
adc
mov
xor
popa
sub
in
subl
mov
mov
or
addr16
roll
push
fs
or
dec
mov
cmp
sbb
jmp
in
icebp
inc
jg
and
ds
jb
rclb
sti
negl
adc
shrb
mov
push
js
mov
xchg
pop
push
lds
mov
fwait
jae
lret
std
jo
pop
xor
xchg
clc
loopne
dec
arpl
loope
mulps
inc
data16
jnp
in
loop
iret
in
scas
add
lods
sbb
inc
jae
adc
push
mov
daa
or
jge
add
cmc
out
sub
pop
add
jbe
push
insb
test
dec
test
jbe
xchg
xor
js
out
testl
dec
inc
lcall
jle
cmp
rclb
mov
movsb
dec
sahf
dec
mov
inc
pop
es
aaa
push
adc
jp
jge
dec
mov
lods
mov
mov
mov
dec
mov
out
cmp
nop
fistl
ds
outsb
fnstenv
sub
fs
xor
clc
or
adcb
sbb
push
add
or
shl
jmp
inc
out
mov
push
push
or
addr16
lods
adc
scas
ljmp
lret
shrl
push
sbb
add
add
sbb
mov
pop
leave
jmp
ret
xor
add
xchg
nop
in
xchg
rorl
gs
jb
jle
dec
cli
mov
nop
out
insb
sbb
xchg
and
mov
loope
fucompp
pop
or
ja
jg
or
loopne
fimull
loope
je
mov
and
and
cli
xor
xor
fsts
je
or
jge
inc
fs
stos
hlt
add
fs
pop
das
roll
sub
test
and
lods
jbe
rcrl
push
dec
adc
mov
or
insl
inc
push
xor
push
into
cmp
xor
sahf
jo
jmp
mov
loopne
xor
unpckhps
or
mov
ja
adc
inc
push
jecxz
sub
cmpl
add
subl
or
stos
icebp
lds
imul
arpl
clc
pop
ja
cmc
jle
loopne
das
out
xor
mov
imul
add
cmp
jns
arpl
xchg
mov
pop
jns
pushf
push
mulb
dec
xchg
adc
or
fistps
cmp
and
sub
mov
mov
xor
or
pop
je
scas
fistpl
xchg
mov
jp
sub
dec
es
filds
push
movsb
out
pop
xor
sbb
cli
sbb
sbb
test
lea
add
pop
es
jl
fs
mov
and
adc
add
adc
jge
call
xchg
pop
cmp
mov
and
jecxz
inc
adc
xchg
int3
xchg
cwtl
mov
flds
lahf
jbe
mov
fiaddl
and
mov
sub
icebp
scas
xor
dec
cld
ljmp
outsb
rclb
fldt
outsl
test
imul
pop
dec
imul
mov
jne
dec
mov
push
cmpsl
fcoml
xchg
fs
mov
imul
mov
sbb
push
mov
sub
sub
and
dec
xchg
in
pop
pushf
data16
mov
adc
push
pop
fdivrp
pop
push
shlb
aas
sahf
jg
and
pusha
ss
jo
mov
pop
pop
cltd
wbinvd
out
lahf
ficoml
pop
fadd
pop
xlat
bound
rcrl
inc
and
inc
ljmp
arpl
jo
mov
icebp
push
outsl
adc
mov
test
sub
cs
inc
popa
xor
and
sbb
pop
sub
and
add
ret
mov
mov
mov
enter
jo
out
xor
cmp
push
clc
mov
ljmp
cmc
out
cmp
cmp
dec
shl
popa
sbbl
sbb
ss
dec
out
jnp
sub
sbb
push
mov
cmc
imul
xchg
sub
and
sub
and
push
xchg
mul
out
cmp
mov
dec
xchg
sahf
adc
and
xchg
inc
rcrb
add
ret
fcoms
rep
lods
ljmp
movsb
addr16
pop
popa
mov
mov
jmp
bound
inc
mov
jae
xor
out
mov
xor
pop
movsb
push
inc
pop
daa
mov
xor
ds
aas
ja
pop
dec
sub
mov
pop
int
stc
jb
jmp
ds
push
push
das
and
shll
push
sub
lods
xor
push
loop
pushf
mov
mov
jnp
inc
mulb
pop
lods
cmpsl
push
or
iret
cwtl
pushf
xor
ret
pop
lret
jge
das
adc
into
les
enter
and
int
dec
scas
dec
pop
call
add
or
mov
ljmp
and
mov
popf
inc
xlat
mov
cmpsl
fimull
pop
inc
xchg
mov
bound
sub
nop
dec
sarl
ret
xor
cmp
sub
cli
test
jns
std
js
mov
mov
or
out
mov
mov
mov
jbe
and
out
ljmp
push
mov
mov
data16
arpl
sbb
dec
mov
loop
shrl
jne
mov
mov
je
push
jo
sbb
arpl
adc
hlt
mov
cli
imul
jmp
idivb
andl
push
mov
ret
hlt
sbbb
in
jle
jge
test
mov
cli
cli
pop
xor
in
push
bound
sbb
adc
iret
mov
ja
cli
xchg
in
push
inc
ss
or
sbb
pop
sbb
inc
mov
pop
and
pop
mov
outsb
fstpt
sbb
push
ret
adc
mov
pop
jecxz
sbb
mov
icebp
pop
lds
ja
repnz
repz
fbstp
nop
arpl
mov
mov
sub
test
push
xor
xor
xchg
mov
adc
enter
lcall
cltd
arpl
add
arpl
into
lods
xor
cmpb
and
xchg
ds
cmp
lcall
xor
pop
sahf
dec
jg
sub
gs
dec
xchg
das
xchg
dec
sbb
js
pop
cmp
insb
mov
pop
mov
arpl
sbb
shlb
mov
xorb
sbb
pop
mov
lds
dec
pop
std
ret
push
jle
dec
ljmp
fnstcw
xor
dec
dec
mov
push
pop
sbb
push
jge
mov
lret
sub
pop
lods
inc
mov
push
hlt
arpl
xor
adc
repnz
out
imul
scas
loope
xchg
icebp
or
insb
lods
std
mov
out
add
mov
dec
lret
repnz
or
mov
push
test
pop
je
out
cli
out
xchg
cmp
clc
xchg
mov
mov
repnz
mov
dec
cmpsb
rcrb
pop
xor
int3
loop
cs
les
sbb
out
dec
rorl
pcmpgtw
das
mov
jno
out
mov
jo
pop
add
lretw
inc
mov
xor
lret
cs
mov
insb
clc
out
jo
ret
sbb
jns
icebp
mov
mov
mov
mov
or
or
and
test
xchg
inc
mov
loope
cltd
ja
insb
cmp
xchg
rcl
cli
push
repz
movsl
jnp
out
sbb
pushf
jg
mov
sbb
push
cmp
std
and
pop
adc
stos
mov
inc
outsb
rcr
mov
popa
mov
dec
imul
xchg
pop
test
cmp
scas
lcall
dec
add
add
cmp
adc
adc
mov
fdivr
lcall
testl
mov
jle
inc
stc
mov
loopne
xchg
add
cmp
mov
or
decl
and
sti
cmp
rcrb
mov
test
pop
push
jg
pop
cli
jbe
std
call
pop
jmp
cld
fs
in
sub
add
pop
adc
add
sub
clc
mov
cmp
mov
pop
mov
bound
xchg
aaa
out
cwtl
int
pusha
cwtl
mov
lahf
psubsw
mov
fmuls
iret
dec
push
cltd
jns
cmp
dec
and
insl
test
jnp
push
out
jp
aas
test
dec
cmpsb
xor
pushf
or
xchg
mov
fmulp
mov
cmpsl
clc
insl
xchg
aas
jmp
loope
push
or
cwtl
movsl
sbb
xchg
mov
sbb
and
pop
movsb
push
dec
dec
mov
jmp
notl
inc
dec
fsub
addr16
adc
or
movsb
adc
nop
push
dec
mov
jbe
dec
dec
and
scas
fbstp
sub
out
jbe
jge
out
jae
insb
sub
sbb
lcall
faddl
cltd
adc
sti
push
push
popf
loopne
mov
scas
test
or
mov
dec
sub
sub
sub
cld
push
lret
xchg
or
mov
cmp
jmp
cmpl
stos
fucom
stos
pop
imul
sub
xchg
ror
jle
push
adc
add
adcb
loope
sbb
cmpsb
push
and
jno
ja
out
cli
xchg
mov
jnp
mov
shrl
iret
cld
xor
int3
fistl
mov
push
femms
cmp
shl
es
dec
fwait
jae
lods
neg
jle
push
ret
pop
iret
addr16
scas
and
push
pushf
mov
arpl
inc
mov
cmp
ss
cs
mov
pop
cltd
adc
push
movsb
ffreep
add
push
fcompl
fcompl
or
lcall
and
outsb
mov
sub
push
mov
mov
shll
xchg
pop
ja
dec
inc
ds
test
pop
js
xchg
pop
bnd
sbbl
jmp
xor
inc
jge
or
xlat
pusha
cld
pusha
adc
mov
push
push
sahf
sbb
movsb
xor
js
mov
jae
hlt
into
leave
jae
cmpsb
jmp
sbb
mov
and
jne
pop
out
adc
fcomps
sbb
or
incb
or
sub
les
cltd
dec
cmp
dec
andb
lods
jo
xchg
aaa
add
lret
cmpsb
and
push
pop
test
ret
inc
mov
sbb
xor
adc
mov
cmpb
or
pop
fstpl
scas
ss
ja
arpl
cmp
repnz
adcb
out
fs
xchg
outsl
jp
ljmp
call
rcr
dec
iret
sbb
or
orb
loop
fldt
mov
sbb
dec
rorb
sbb
xor
packssdw
divb
xor
jmp
cmovae
notb
dec
and
popa
test
jne
mov
test
mov
cld
dec
sbb
test
xorl
xchg
frstor
push
repz
add
pop
xchg
cli
pop
rcl
mov
push
jmp
dec
std
and
mov
push
push
and
pop
add
or
subb
push
push
sti
pusha
xchg
jp
stos
xchg
and
arpl
gs
mov
mov
pop
mov
movsl
push
push
jno
shr
adc
cld
push
pop
sbb
nop
adc
lds
push
in
std
pushf
sub
ror
mov
mov
aaa
notb
xchg
out
xchg
jecxz
add
jl
inc
out
fcomps
push
mov
push
cltd
add
push
inc
hlt
mov
out
adc
repz
adc
xor
arpl
outsl
fs
sub
fcmovu
inc
notb
xor
adc
sub
mov
icebp
mov
test
or
fldcw
push
push
es
shll
xchg
mov
bound
cmp
cmp
fldl
and
xchg
jbe
push
add
test
push
dec
adc
sub
arpl
ret
call
fadds
mov
add
inc
xchg
call
jb
sub
popf
inc
sub
inc
sti
jnp
jg
mov
inc
xor
cmp
fmuls
loopnew
pusha
xor
mov
fldl2e
adc
cwtl
sahf
test
loop
cmp
lods
mov
mov
adcb
adc
mov
sbb
fisttpll
daa
xchg
sbb
and
sbb
enter
inc
dec
add
fisubrl
inc
xchg
aam
jnp
dec
mov
jg
pop
mov
sub
pop
dec
adc
in
cmp
dec
xor
das
push
dec
cltd
push
push
inc
push
data16
pop
inc
subl
je
mov
andl
sbbl
pop
pop
or
out
mov
pop
mov
lods
pop
repnz
cld
test
cwtl
les
and
fidivl
lods
dec
cmp
jae
popa
mov
sbbl
push
mov
js
xchg
xor
mov
dec
pop
decb
cmp
mov
sbb
lods
cltd
cmp
inc
fistps
sub
or
pop
stos
push
cwtl
icebp
fistpll
lret
mov
insl
push
push
rcll
enter
mov
test
lret
add
dec
xor
fmull
push
mov
pop
dec
jge
mov
push
sbb
iret
insl
push
lret
outsl
in
subl
mull
cmp
fiaddl
scas
ss
push
mov
mov
push
cli
mov
imul
lahf
int
adc
xor
sbb
cmp
sub
adc
mov
fsubl
ret
movsl
fcmove
into
mov
xchg
iret
adc
repz
imul
mov
es
or
and
ljmp
in
aas
push
jecxz
inc
adc
es
sub
inc
sbbb
and
leave
data16
notb
xchg
mov
sbbl
inc
sahf
pop
aad
jo
lds
aaa
pusha
loop
mov
xor
xor
xor
sub
shl
pop
pop
leave
inc
adc
inc
rol
mov
stos
dec
push
mov
iret
rcll
mov
or
or
int
nop
ljmp
scas
pop
in
push
mov
loope
pop
addl
pop
gs
in
movzbl
leave
sub
sbb
lret
push
xorw
and
sbb
push
sbb
lahf
dec
pop
sahf
push
xlat
mov
in
scas
adc
jg
pop
pop
in
pop
cmpsb
inc
cmp
push
je
das
add
mov
in
or
xchg
push
in
pop
mov
jne
mov
xor
pop
arpl
fwait
mov
add
and
or
lock
push
pusha
movsl
push
cmp
out
popa
or
add
lahf
stc
cs
cmp
sub
jae
inc
pop
add
imul
aaa
dec
xor
daa
test
mov
inc
jle
mov
or
js
nop
cmpsb
out
cld
push
ljmp
insb
add
lahf
insl
inc
sarb
add
cmp
jl
lret
shlb
pop
xor
push
push
jo
add
mov
dec
xchg
dec
and
push
das
adc
fnstsw
inc
ja
push
mov
mov
or
mov
subb
stc
cmp
cli
pop
and
ss
mov
dec
cmp
into
cwtl
xor
test
dec
mov
dec
fstpt
lea
xchg
push
addl
repz
push
add
adc
xor
dec
mov
add
jno
into
mov
and
je
inc
leave
insb
and
out
cmp
cmovl
adcl
jmp
inc
cmp
inc
rol
lcall
inc
push
testb
in
lea
adc
in
popf
dec
movsl
inc
addr16
xor
jp
leave
mov
scas
mov
imul
testb
daa
orl
insb
mov
pop
stos
adcb
insb
or
out
push
adc
add
adc
daa
pop
ss
cli
xor
mov
mov
ss
roll
mov
lds
fdivs
dec
arpl
jg
out
cmp
mov
call
fcmovnu
into
rcll
or
lcall
enter
out
cld
xchg
cli
or
icebp
ljmp
cmp
jle
inc
mov
daa
xlat
out
and
fimuls
stos
cmp
fld
les
add
faddl
cs
fstpl
sub
dec
adc
pop
dec
push
xchg
and
lret
inc
mov
add
push
insl
and
into
shlb
dec
pop
inc
mov
xchg
in
je
and
in
dec
push
addr16
sbb
jmp
enter
repz
jp
stos
icebp
movsb
int3
adc
jmp
movsl
pop
arpl
mov
test
testl
mov
pop
pushw
jle
push
fistl
dec
mov
xchg
and
inc
adc
sti
add
or
imul
inc
out
lds
sbb
pop
lea
mov
cmp
imul
dec
aas
mov
push
mov
pop
mov
enter
imul
std
pusha
out
push
push
xor
cmpsl
shrl
outsb
pop
int
out
nop
mov
subb
insl
lret
dec
lods
scas
jb
fadd
lods
test
mov
jg
int3
push
pop
sub
std
rcll
sub
aaa
les
mov
push
sahf
sbb
fsubp
in
mov
subb
fldt
fs
cmp
fdiv
pop
lret
lds
mov
leave
out
pcmpeqw
movsl
les
or
gs
lcall
add
imul
call
ja
das
add
negb
ja
out
shl
cli
movsb
jbe
adc
push
inc
stos
mov
push
push
mov
xor
cltd
inc
rorb
xor
sub
dec
xchg
or
jp
filds
pop
mov
and
mov
dec
aaa
mov
imul
push
shll
orb
out
out
jecxz
call
iret
inc
out
xchg
mov
mov
sbb
push
shl
cmp
adc
mov
fcoms
insl
hlt
fisubs
or
sbb
push
enter
adc
int3
fcomip
mov
pop
icebp
inc
mov
cmp
aam
lret
inc
fistl
nop
jecxz
mov
cmpb
xor
dec
shll
test
and
imul
fstl
stos
jge
xchg
out
xchg
pusha
mov
test
mov
sub
xor
inc
mov
mov
fcom
pusha
data16
push
dec
repz
mov
push
pop
or
jno
popa
int
fcmovnbe
movsl
int3
lcall
lea
addr16
dec
aaa
dec
cmp
gs
mov
shl
clc
cmp
add
mov
in
mov
xor
icebp
mov
cmp
or
add
or
mov
outsb
cmpl
mov
loopne
adc
clc
sbb
stos
ds
push
mov
sti
dec
mov
nop
gs
inc
test
sub
xorl
and
and
dec
shrb
mov
inc
out
mov
das
mov
ds
xchg
push
popf
push
inc
leave
dec
dec
mov
cmp
mov
addr16
repz
mov
mov
jl
jp
movsb
hlt
push
xchg
jle
sarl
sub
pop
add
insl
out
enter
stos
xchg
test
adc
mov
push
dec
jbe
lcall
jae
mov
xchg
test
pop
adc
mov
cmpsb
scas
out
mov
jne
shrl
sub
loope
push
pop
ljmp
cmp
pop
pop
inc
stos
lret
mov
std
mov
or
sysexit
push
mov
mov
aaa
or
mov
fcomip
repz
mov
mov
cmc
and
pop
jge
jns
nop
xchg
loope
into
add
sbb
roll
imul
sbb
rorl
test
fisubrl
lret
leave
outsl
fstps
sbb
lahf
popa
cmpsb
cmpsb
shll
lcall
mov
scas
cmp
and
mov
adc
jecxz
mov
pop
aad
dec
xor
ret
jnp
and
add
imul
lods
ljmp
addb
imul
fistpll
sbb
sarl
dec
adc
cmp
outsb
outsl
sbb
les
xchg
lock
loope
jno
and
or
pop
or
popf
pcmpeqw
nop
mov
sub
cld
cli
test
cmp
xchg
lcall
sub
stos
xor
jbe
lcall
ret
jl
pushf
inc
sti
pop
out
cmc
fwait
inc
xchg
jns
dec
iret
sbb
mov
push
test
sub
pop
addr16
jecxz
add
mov
push
fs
mov
je
sbb
sbb
jge
mov
inc
out
aas
mov
dec
ficoms
clc
insb
nop
mov
pop
cmp
or
mov
pusha
push
push
imull
sahf
ret
rcrb
idivb
and
rcll
mov
jbe
sub
clc
mov
add
lods
loopne
or
xor
lret
dec
sbb
pop
mov
dec
mov
mov
pop
mov
mov
add
sbb
fidivs
mul
add
mov
jae
ss
out
adc
repnz
mov
bound
in
pop
dec
mov
xchg
xor
int
and
and
cmp
test
mov
jmp
jl
push
cmpsl
pop
and
pop
incl
leave
mov
push
pop
jae
mov
mov
jae
and
adc
addr16
clc
sub
lret
adc
and
sub
mov
jae
jl
movsl
jo
lods
jno
cs
mov
push
ljmp
ret
nop
mov
sub
cmp
inc
inc
mov
call
das
popa
xchg
xchg
sub
add
xchg
mov
mov
sub
push
in
pop
dec
cmp
cmpsl
lret
loop
ret
xchg
sti
mov
mov
pop
inc
push
cs
cmp
xchg
cltd
nop
bound
pop
daa
stos
cmp
mov
xchg
icebp
daa
fwait
sbb
cmp
fadds
leave
les
imul
out
jmp
pop
sub
sbb
out
and
int3
aam
adc
ja
cwtl
repz
jge
mov
add
in
jbe
push
popa
dec
dec
in
aam
mull
pop
pusha
jl
lcall
iret
ret
mov
jns
xchg
popa
iret
sahf
fisttps
jb
pop
cmpl
adc
leave
inc
dec
icebp
and
mov
imul
pop
xchg
xchg
ret
lret
loope
push
add
or
or
jo
addr16
pop
add
cmpxchg
movsb
mov
mov
sti
or
jl
push
sbb
push
adc
test
out
imul
jge
out
mul
mov
call
hlt
jmp
mov
nop
scas
cmovns
adc
push
rclb
inc
movsb
pop
cmp
lds
outsb
sbb
outsb
dec
outsl
add
inc
arpl
cmp
fidivl
lcall
inc
ljmp
mov
jb
inc
inc
ds
cli
xchg
dec
push
mov
leave
int3
mov
jge
loope
loop
jle
ror
pop
sbb
push
mov
dec
bound
in
xchg
dec
mul
pop
jge
and
daa
push
dec
lods
cmp
scas
ret
addr16
push
or
into
jge
cld
dec
sahf
sarb
inc
dec
pop
ja
push
js
inc
mov
mov
js
sub
inc
les
andb
lahf
pop
mov
or
gs
pop
xchg
adc
mov
push
pushf
jbe
push
roll
push
inc
ss
lcall
sbb
lods
cmc
push
dec
jb
sahf
shll
leave
or
mov
dec
and
ret
test
shrb
cmc
push
jnp
sahf
out
and
in
scas
mov
and
ret
orb
add
mov
popa
das
jbe
adc
das
push
pop
and
pushf
mov
pop
sbb
sar
popf
jl
andl
outsl
call
dec
xchg
ljmp
and
or
or
xlat
rolb
sbb
and
enter
into
insl
adc
inc
sbb
xchg
mov
in
nop
adc
test
adc
leave
push
cmp
ljmp
pop
hlt
sbb
or
pusha
mov
aad
push
repz
sub
mov
fdivl
addr16
mov
mov
xor
jnp
jmp
dec
popf
out
ja
es
test
dec
xchg
adc
paddw
xor
lock
push
inc
mov
mov
push
arpl
fsub
scas
push
xchg
jns
daa
rorb
fs
int3
jecxz
cmp
sti
pop
pop
push
daa
enter
call
jmp
mov
mov
test
add
jnp
jl
outsb
inc
stos
ret
pop
pop
push
out
iret
subb
mov
and
mov
lds
lret
sub
mov
rcr
adc
cmp
shll
or
adc
mov
loopne
xchg
mov
jnp
push
pcmpeqw
enter
mov
dec
or
mov
mov
mov
fistps
fadd
dec
mov
mov
jbe
push
push
lods
insl
and
jnp
repnz
dec
push
pop
xchg
xor
dec
sub
popf
sub
sub
out
or
dec
mov
std
sbb
adc
lods
aas
outsl
adc
jmp
js
sti
jge
xchg
or
cs
movb
imul
pop
inc
and
mov
inc
mov
dec
test
mov
decl
pop
cmp
aas
adc
mov
mov
push
sub
addr16
fiaddl
jbe
jb
cmp
mov
rcl
fiadds
lock
rcll
lds
xor
pop
and
repz
jl
ljmp
repz
mov
and
sbb
mov
mov
sub
shlb
shr
loopne
shlb
repnz
sbb
orps
es
jno
lds
imul
mov
lcall
sub
fisubl
mov
pop
mov
xor
jne
add
dec
lahf
daa
and
mov
arpl
dec
jg
mov
notl
jg
cltd
jb
and
push
or
mov
push
aas
int
xor
mov
inc
in
stc
sbb
push
mov
pop
inc
arpl
addl
xchg
or
or
inc
push
push
divb
sub
lret
sbb
fs
push
movsb
into
sub
aas
xchg
mov
loope
xchg
lret
std
cwtl
leave
outsl
cmp
cmpsb
out
popa
in
pop
pop
jl
sub
in
add
in
sbb
lods
js
and
shll
jb
sub
movl
sbb
cmp
pop
lock
int
xchg
mov
test
aaa
mov
dec
add
mov
not
imul
sbb
or
hlt
or
lret
lds
sahf
sbb
lock
ret
dec
lret
add
mov
mov
and
dec
xchg
rorl
add
mov
push
dec
cld
lcall
push
and
xor
and
lret
mov
xor
pop
and
jb
sub
xorb
inc
inc
les
fildll
push
out
out
lods
add
pop
jle
jns
fcomp
mov
test
pop
mov
mov
adc
mov
push
ret
pushf
jl
sbb
sahf
nop
xchg
sub
rorl
in
mov
cld
in
sbb
jge,pt
mov
sti
arpl
int
stos
xor
push
xor
push
fs
adc
lahf
mov
mov
or
aaa
or
repnz
ret
cmp
jb
out
push
sub
sti
mov
nop
xchg
pop
adc
push
es
js
pop
daa
mov
mov
push
nop
lret
nop
mov
xchg
xlat
push
ret
out
ret
cmc
js
xor
out
insl
push
ds
dec
leave
lds
outsl
sub
adc
cld
inc
mov
cmpsl
push
test
xor
lods
or
les
hlt
scas
push
out
push
into
sub
sub
aad
mov
push
es
dec
dec
lds
jbe
loopne
xchg
mov
test
mov
jp
adc
repz
or
xor
cld
out
mov
inc
addr16
mov
sbb
inc
inc
and
mov
jo
dec
and
fstpt
adc
pushf
stos
addr16
inc
sbb
aaa
sub
xchg
jns
rcrb
lds
xor
mov
scas
cltd
add
cmc
outsb
mov
fnsave
mov
loope
leave
mov
movsl
mov
push
mov
movsl
xchg
xor
fstpl
or
out
mov
sbb
add
add
jae
cmpsb
push
mov
das
jecxz
loope
sbb
jae
mov
idiv
lds
cmp
cmp
mov
hlt
sbb
sbb
cmp
mov
and
hlt
rorl
inc
dec
aad
jne
jno
cmpsl
movsb
add
enter
call
xchg
sbb
inc
insl
jno
or
movsl
outsl
sub
add
pop
and
adc
mov
mov
xor
sbb
push
xchg
inc
xchg
push
notl
sub
aaa
adc
addr16
push
aad
in
add
movsb
mov
loop
xor
mov
test
xchg
xchg
les
jecxz
sub
xchg
in
sar
fcoms
lcall
jae
inc
mov
and
mov
stos
bound
aas
ds
sbb
mov
add
in
ret
adcb
js
scas
cmp
xchg
stos
popa
adc
mov
sbb
ds
pop
addb
jb
cld
xchg
inc
dec
mov
out
pop
sbb
add
mov
and
adc
gs
mov
ret
lods
fsubl
or
std
xor
dec
mov
or
fwait
jae
inc
imull
mov
popa
pop
mov
xor
into
aaa
pop
out
iret
lods
in
jge
and
stc
repnz
in
in
stos
push
push
data16
fsubs
or
mov
shlb
add
nop
inc
push
push
sub
fistpl
bound
mov
xchg
add
sub
mov
dec
push
insb
xchg
mov
jns
add
sbb
jg
and
and
adc
lcall
pop
aas
xor
aas
jg
lret
push
dec
add
rolb
xchg
subb
arpl
pop
xlat
sub
das
xor
inc
add
mov
mov
jg
xchg
and
je
pushf
cltd
mov
mov
xor
inc
scas
iret
mov
pop
or
rorb
cmp
test
popf
popa
adc
das
movsb
inc
mov
push
scas
sti
mov
clc
popa
movsl
push
stc
lret
or
or
or
popa
negb
lods
pop
test
add
cs
add
sbb
pop
sti
xchg
addr16
mov
ss
enter
loope
push
aaa
xlat
xorl
jge
popa
cmp
lret
fbstp
mov
aaa
shl
nop
mov
out
push
outsb
lods
stos
mov
jo
sbb
add
cld
fiaddl
aas
in
xorb
dec
bound
fisubl
cmp
mov
movsb
lods
fcomp
and
add
test
out
sbb
or
std
mov
nop
push
cltd
or
sarl
lds
and
jnp
dec
mov
lock
jmp
push
mov
jp
es
into
test
xchg
adc
sbb
push
icebp
xchg
iret
cmp
pushf
and
incl
push
jno
clc
fiadds
dec
lcall
sbb
and
sub
mov
inc
mov
sete
cwtl
lds
xor
dec
push
scas
aad
mov
arpl
outsl
insl
sub
sahf
hlt
push
sub
sti
and
mov
loop
and
mov
loope
fcoms
stc
push
push
fisttps
dec
addr16
loop
ljmp
xchg
dec
xchg
adc
or
and
and
cs
mov
in
les
in
add
mov
or
add
push
rcr
pop
test
push
lock
ljmp
fildll
push
mov
xchg
fadd
jle
lret
xchg
in
and
dec
ds
cltd
outsb
sub
arpl
sbb
add
jne
mov
mov
mov
sub
sbb
xchg
mov
movsl
adc
pop
mov
xorl
in
inc
fwait
push
subb
stos
inc
enter
add
in
add
add
mov
inc
jno
in
shl
sbb
jb
enter
loop
push
pop
jnp
xor
cmp
ja
jnp
addr16
int3
in
cltd
cmpsb
cmpsb
cmp
aas
movl
adc
add
adc
inc
sahf
stc
push
inc
dec
int3
scas
inc
subl
jle
push
adc
mov
adc
cmp
add
es
gs
cmpsl
xchg
dec
or
iret
cmpsl
cwtl
add
dec
and
push
mov
aas
jno
lods
imul
std
push
fxch
xor
pushf
push
ret
mov
daa
subl
mov
sbb
movsb
repz
lahf
or
add
int
pusha
or
ret
ja
jnp
js
mov
filds
ss
cs
sahf
lret
scas
loopne
pop
subb
jns
hlt
mov
push
xchg
xchg
cmpsb
jle
or
sbb
cmp
sbb
push
and
push
loop
jmp
push
add
jecxz
in
mov
adc
push
ljmp
mov
xchg
xchg
adc
loope
cld
inc
mov
push
adc
xor
pop
shl
adcl
adc
lods
dec
mov
sub
cmpsl
cmpsl
push
push
dec
in
in
fxch
sbb
mov
rorl
dec
jo
xor
stos
aam
aam
xchg
inc
sbb
shll
jb
in
mov
lcall
add
mov
jo
xlat
inc
mov
cmpsl
xor
imul
leave
mov
pop
and
jp
and
lods
out
sub
cltd
and
aad
and
mov
iret
out
pop
mulb
sbb
or
mov
adc
sahf
cmpsb
push
inc
mov
xor
aaa
and
movsl
sti
pop
xchg
rcll
inc
cmp
ficompl
push
mov
ds
es
sub
and
adc
imul
sub
adc
or
push
call
sub
cld
add
imul
jmp
push
cmp
mov
mov
xor
push
bound
push
inc
cmp
es
xlat
test
push
inc
xor
std
aad
dec
jmp
daa
adc
adc
cld
loop
xchg
aad
dec
and
andl
or
jl
pop
and
vpaddw
mov
jo
popa
arpl
ja
sub
roll
ret
push
mov
jecxz
adc
inc
sbb
cld
push
lods
loopne
movsb
ret
xor
jnp
movsl
and
mov
push
dec
cmpsb
xlat
incl
push
pop
dec
sbbb
std
nop/reserved
outsl
cltd
cmp
sub
push
dec
call
outsb
dec
int
adc
cli
fldl
ret
mov
inc
shrb
mov
pop
cmp
fdivrs
stos
pushf
jp
addr16
jo,pn
sti
aad
push
enter
mov
mov
adc
mov
gs
cs
add
movsl
xchg
push
jnp
lcall
sbbl
cmp
fwait
divb
loop
scas
sub
daa
jmp
inc
dec
pop
rcrl
ret
pop
inc
pusha
adc
xlat
mov
xchg
pop
je
xchg
mov
push
clc
loopw
xchg
das
jp
push
adc
int
or
std
xchg
pushf
mov
mov
lods
out
adc
cmpl
outsb
int
fildl
cld
pop
pop
icebp
in
fadd
das
mov
fsubrs
add
xor
mov
mov
stos
push
inc
movsb
test
int3
sti
xchg
mov
fsts
sub
jecxz
pop
cmp
adc
pop
push
es
das
arpl
mov
cmpsb
jg
shlb
xor
xchg
ja
lock
and
xor
mov
inc
mov
pop
and
add
fs
dec
movsl
mov
or
mov
shrl
cmp
in
mov
dec
jle
daa
addl
ja
imul
add
shrb
leave
scas
mov
cmpxchg
cltd
mov
jmp
fistpll
into
out
mov
xor
xor
arpl
mov
sub
repz
or
lea
xchg
jns
adc
test
inc
mov
cmp
fimull
cmpsl
or
xorl
cmp
fldenv
inc
fildl
pusha
lcall
loopne
mov
mov
cmp
arpl
in
mov
iret
pop
dec
lock
ret
fmuls
clc
mov
dec
data16
mov
inc
rorb
outsl
sub
jbe
jg
pop
loop
lea
test
insl
push
popf
lahf
stos
push
inc
ret
xor
fisttps
lret
mov
jae
lods
lea
jl
into
xor
inc
or
sarb
sub
mov
or
lcall
pop
gs
jae
mov
mov
lods
cmp
mov
ds
gs
mov
add
pop
das
out
sub
je
pop
roll
bound
addr16
mov
in
pop
xor
sbb
xor
hlt
pop
cltd
pop
aaa
shll
cmpl
int3
pop
cmp
mov
add
pop
gs
movsb
xchg
mov
movsl
xor
daa
in
jo
leavew
test
pop
push
insl
jmp
movl
mov
mov
fwait
xchg
leave
loopne
mov
int
js
jbe
add
and
push
mov
pusha
pop
mov
dec
mov
ja
in
in
adc
shl
xor
std
aas
pusha
fidivl
and
stc
stos
daa
daa
sarl
test
iret
dec
subl
aam
jle
adc
mov
dec
int
sarb
mov
mov
sub
adc
xor
mov
sbb
fisttpl
adc
sub
or
ret
inc
dec
adc
mov
pop
sbb
fwait
or
mov
fadd
hlt
mov
dec
fcoml
cs
adc
xor
mov
ret
pusha
lock
add
mov
jle
imul
enter
fsubs
popf
test
add
in
lret
mov
pop
addr16
daa
mov
bound
idivl
cs
sahf
mov
jnp
lret
std
dec
inc
and
cli
cmpsb
bound
out
xor
pop
xor
add
xchg
sar
pop
pop
cmpsb
inc
inc
mov
mov
movsb
addb
ret
adc
repnz
mov
lods
and
inc
addl
stos
fucomi
dec
dec
mov
jp
mov
scas
mov
xchg
mov
add
add
sbb
mov
jae
jb
add
xchg
int
mov
negb
push
jmp
pop
stos
hlt
fiaddl
mov
lret
ficomps
arpl
dec
iret
jbe
sbb
iret
pop
out
out
xchg
jo
lcall
inc
cld
sbb
and
daa
jp
push
sti
lret
add
xchg
loop
outsl
jbe
jle
shll
pop
dec
call
inc
jmp
jge
loopne
push
cmpsl
cwtl
xchg
fwait
pop
sti
repnz
in
enter
cmp
inc
push
mov
adc
add
pop
cmpsb
pusha
hlt
ret
inc
dec
loope
jb
xor
or
mov
pop
dec
jb
cli
pop
add
lahf
or
and
dec
cld
mov
dec
in
push
out
in
sahf
mov
push
mov
mov
cmp
and
pop
pop
mov
fidivl
xor
outsl
in
push
cld
pushf
lods
sbb
pop
nop
cmp
add
push
add
js
push
fdivs
das
aad
hlt
cld
sub
add
mov
test
push
stc
mov
or
push
cmp
stos
xchg
ret
aam
pushf
les
and
js
pop
lods
bound
jbe
push
sarb
cwtd
lds
outsl
inc
aad
les
outsb
test
jno
cli
xlat
addl
adc
jle
call
ljmp
sbb
fmuls
inc
outsb
lcall
clc
lcall
cmp
sbb
into
jge
mov
xchg
pop
add
dec
adc
xor
push
loopne
cmpsb
jns
outsl
fidivl
cmp
cmp
add
mov
lds
jb,pt
fwait
sbb
fcompl
stos
pop
fidivs
add
mov
rcrb
loopne
js
pop
stos
jnp
pushf
gs
xchg
jns
mov
xchg
stos
icebp
push
and
sub
fwait
dec
jbe
xor
pop
mov
add
cmp
pop
xchg
lcall
stc
mov
cs
jb
sbb
shll
add
cltd
loop
ds
fwait
movsl
or
adc
repnz
imul
pusha
inc
xchg
mov
lods
or
lods
mov
movsl
ficomps
inc
jp
mov
stos
mov
xchg
jle
subl
pop
sbb
sbb
adc
or
adc
fdivrp
lock
lahf
ret
push
repz
leave
sbb
scas
cmp
mov
test
jae
ss
in
jge
sub
aad
fistps
cwtl
jmp
or
bound
rclb
xchg
jno
lock
mov
js
in
in
push
out
dec
or
sub
pop
adc
dec
mov
out
xchg
cmpsl
pop
dec
in
push
and
jno
sbb
and
shll
dec
stos
rolb
shll
sub
scas
mov
aas
je
mov
ss
mov
stos
adc
leave
icebp
scas
sub
xor
pushf
and
fists
stos
movsl
and
cli
ror
icebp
mov
and
xchg
js
inc
xor
inc
or
inc
push
cmp
mov
push
lock
push
mov
imul
outsb
xchg
and
inc
sbb
les
stos
push
add
out
inc
mov
repz
nop
movsl
push
ficompl
pop
jl
into
xchg
cmpsl
aaa
or
daa
push
add
and
scas
push
dec
data16
adc
push
adc
lret
sub
xor
imul
mov
out
nop
stos
repz
loope
ficoms
xchg
add
cmp
mov
mov
fdivr
xchg
mov
sub
data16
lds
jo
sbb
jge
and
mov
test
stos
cmp
mov
sub
lretw
ljmp
jne
mov
mov
das
icebp
push
cwtl
scas
pop
adc
mov
std
push
loope
sbb
mov
shl
sbb
lret
shll
sbb
sbb
mov
mov
lock
and
cld
dec
int
mov
xor
js
rol
xchg
sbb
push
push
loopne
jecxz
pop
pusha
mov
sub
inc
ljmp
sbb
lods
fucom
sbb
jge
stos
xor
pop
sbb
pop
fldt
add
sbb
fsubrp
div
fisttps
popl
mov
or
in
adcb
into
xchg
stos
adc
stc
push
mov
in
xchg
out
pop
add
dec
and
fimuls
xor
repnz
ret
push
push
mov
mov
ret
test
fisubs
mov
mov
cmpsb
dec
int
sbb
pop
push
and
inc
lock
pop
test
clc
and
inc
into
ljmp
out
pushf
xor
ret
push
xor
fistpl
ret
push
mov
add
push
cmp
stos
inc
iret
lahf
mov
inc
ljmp
dec
push
ret
jmp
inc
push
out
xor
push
sbb
testb
jl
add
add
inc
pushf
iret
mov
adc
leave
movsl
jne
pop
fstl
shll
cmpsb
dec
inc
icebp
enter
js
adc
movsl
add
loop
test
cmp
icebp
add
jnp
mov
in
testl
repnz
psubusb
js
xchg
sub
xchg
pop
sarl
scas
xchg
sbb
jbe
cmc
push
imul
int3
or
sub
shrl
push
xor
jns
mov
jbe
test
or
jno
xbegin
shll
add
movsl
mov
add
adc
fisubl
sets
jbe
sbb
mov
scas
xchg
in
dec
jb
jecxz
pop
sbb
mov
sbb
movsl
dec
mov
jne
scas
negl
mov
into
xchg
jmp
imul
enter
js
mov
fldcw
mov
in
rcl
mov
cltd
lret
push
dec
imul
sbb
inc
inc
popf
lock
push
aad
mov
hlt
inc
or
or
jmp
js
mov
ficoml
lret
loope
adc
mov
mov
adc
lods
das
outsb
imull
imul
push
mov
clc
stos
sbb
ss
shrl
jnp
outsl
in
xchg
jns
adc
mov
movsl
jle
mov
jae
or
cmc
js
addl
jecxz
roll
mov
outsb
dec
jmp
cmp
jne
cltd
mov
aaa
add
mov
inc
jb
dec
pop
xchg
cmpsb
cmp
mov
sahf
and
adc
into
int
push
je
pop
pop
cmp
or
dec
dec
jmp
bound
loope
xor
dec
push
daa
jno
fistps
fsubp
cmc
sbbl
loop
jo
fxam
push
pop
lcall
mov
outsl
rcrl
out
push
arpl
xchg
jecxz
pop
scas
mov
test
outsb
or
daa
pop
mov
jl
adc
rcl
enter
push
jns
xchg
adc
mov
daa
bound
cmp
or
rolb
xor
lods
subb
sub
add
and
notl
into
push
pop
fsts
jae
inc
addr16
iret
lret
lods
push
lret
out
adcl
scas
cltd
popf
lahf
mov
mov
stc
out
push
ret
outsl
mov
push
cmp
push
adc
ja
int3
mov
cmp
mov
push
xchg
loop
dec
leave
rcr
jno
mov
or
xor
mov
pop
idivl
imul
es
stos
mov
addr16
in
in
sub
jae
adc
sub
xchg
cltd
push
mov
jp
fwait
or
nop
aas
cmc
test
push
aaa
push
push
repnz
fdivs
fnstsw
mov
push
hlt
push
pop
rorl
pop
pushf
or
pusha
fcomps
scas
notl
sub
je
sub
mov
add
fwait
sub
data16
lret
adc
add
les
dec
add
mov
cmpsl
pushf
lods
test
ja
lahf
loop
push
pop
adc
fsubl
ss
cwtl
sbb
jp
fcompp
movsb
clc
lock
pop
shll
pop
cmc
cmp
jl
imul
cs
cmpsb
in
jne
mov
movsb
jne
ror
out
pop
add
cmpsl
push
outsl
or
dec
dec
stos
adc
xor
jp
addr16
add
aad
cwtl
jns
and
pop
xchg
pop
ja
mov
out
inc
in
push
rolb
or
and
xor
pop
leave
mov
lret
xor
xor
rclb
pop
xchg
gs
push
inc
sub
mov
mov
arpl
xchg
sahf
xor
xchg
into
mov
inc
xor
jecxz
arpl
sbb
icebp
nop
in
sbb
push
or
push
xor
sub
scas
push
dec
dec
pop
xor
fwait
insl
push
push
popfw
sub
pushf
sub
mov
mov
in
and
js
or
sub
add
mov
dec
mov
lea
movsb
adc
xor
vshufps
dec
mov
into
out
add
jecxz
int
out
insb
cmp
das
dec
pop
xchg
xorl
mov
test
shlb
jo
jmp
xor
push
cmp
int
mov
lahf
arpl
bound
jle
idivl
int
stc
shl
sub
sbb
out
pop
dec
sbb
mov
in
rorb
insb
jle
aas
decl
mov
jbe
dec
dec
or
mov
inc
iret
insb
in
ss
mov
lea
pushf
sub
pushf
fldl
rcrb
pushf
in
arpl
cli
cmp
jp
push
push
or
in
pop
cmp
cmp
push
les
add
mov
psubsw
dec
dec
cmp
sub
ljmp
xchg
dec
test
test
pop
cwtl
les
cmp
add
lcall
pop
cltd
in
inc
ss
add
add
scas
imul
jnp
mov
mov
push
lds
pop
out
push
popa
sarl
pop
dec
mov
jo
imul
or
rcrl
push
or
sbb
xchg
cwtl
mov
fidivrs
mov
stos
cmpsl
lock
cmp
cmpsb
mov
pusha
jno
mov
mov
sub
or
andl
jns
add
test
xlat
inc
out
dec
in
mov
pop
adc
enter
push
jbe
mov
jb
mov
sbb
inc
sub
jnp
mov
fs
insb
adc
push
jno
faddl
sbb
adc
pop
or
lock
cmp
mov
int3
hlt
sub
push
mov
xor
pop
adc
cmc
int3
lret
mov
sub
ss
adc
rcrb
notl
jo
cmp
lret
jbe
lcall
test
dec
lds
mov
lret
out
movsb
push
adc
icebp
jmp
ss
dec
shrb
movsl
outsb
push
shlb
push
loop
or
enter
loop
xchg
adc
mov
xor
sbbl
aas
hlt
push
sub
nop
movsl
pushf
scas
pop
repz
xchg
hlt
add
fcoml
pop
mov
scas
dec
fldt
stos
push
jno
xchg
or
or
mov
inc
andb
ljmp
sti
rolb
andl
movsl
test
mov
cs
ret
cmp
fs
mov
mov
or
lea
mov
cmp
inc
test
jno
test
stc
roll
xor
lcall
xchg
out
frstor
and
push
gs
flds
inc
jecxz
es
sub
jle
daa
call
aad
movsb
aad
push
test
mov
xchg
addr16
cltd
fidivrl
loope
pop
jno
mov
xor
mov
ja
clc
sub
add
sub
js
les
imul
in
mov
inc
jp
xchg
pop
mov
in
mov
mov
xchg
push
push
mov
imul
lret
pop
test
in
xor
dec
popf
push
std
test
jo
jmp
and
mov
ja
ja
xchg
pop
rep
adc
shrb
xchg
mov
jg
mov
mov
orl
ljmp
or
lods
mov
inc
insl
call
cli
or
mov
inc
cltd
inc
negb
pushfw
or
arpl
rorb
dec
sahf
adc
leave
push
and
rcr
popf
cmpl
fildll
pop
scas
push
mov
repz
add
ss
pop
ret
push
fst
shl
mov
add
adc
mov
dec
xor
shlb
jmp
fdiv
ja
ret
pushf
ja
and
fwait
cs
cmp
jo
jo
xchg
sbb
aaa
lods
xchg
insb
insb
or
fucom
pop
mov
imul
mov
inc
pop
pop
adcb
iret
jecxz
inc
repz
inc
fisttpl
pop
or
add
cwtl
or
enter
adc
pusha
hlt
dec
fstp
jns
out
xor
enter
adc
imul
inc
sub
or
std
mov
out
inc
xor
clc
int
psllq
lcall
inc
inc
sbb
rcl
lea
hlt
mov
movsb
lock
sub
cmp
icebp
aad
shrb
inc
repz
mov
adc
mov
cmpsl
movsb
and
lods
mov
subl
push
pop
aad
mov
enter
sbb
and
aaa
push
sub
rol
and
mov
fdivrs
pusha
cltd
pushf
inc
shll
mov
pop
add
sub
add
sbb
in
fsubrs
or
mov
pop
push
jae
sahf
sbb
mov
jl
data16
push
mov
adc
pop
mov
shll
cmp
sub
cli
pop
inc
dec
cltd
pop
xchg
cmpsl
gs
aam
lds
add
jmp
lods
les
fnstcw
psrlw
pop
lea
pop
aaa
push
lock
push
in
lcall
fildll
nop
into
mov
int
call
outsb
add
inc
adc
pusha
cmp
mov
mov
add
stos
jmp
dec
in
std
xor
add
inc
or
jmp
rclb
enter
mov
ss
cmpsb
out
loope
inc
stc
cld
dec
push
dec
jae
mov
test
jnp
cmc
jmp
lods
lods
arpl
inc
movsb
pop
xchg
jne
sub
shr
inc
out
scas
sarb
dec
dec
mov
adc
insb
sub
lret
js
addr16
fldenv
dec
mov
in
mov
push
cltd
mov
lds
repnz
xchg
dec
mov
sahf
mov
pushf
scas
ds
push
das
cmp
and
aas
adc
sbb
ja
shrl
pop
jbe
sbb
add
aad
in
popa
xor
xchg
inc
fdivrs
sub
adc
xlat
inc
adc
testl
fcomps
mov
mov
fdivl
and
stos
dec
das
mov
aad
ret
jge
lods
arpl
jge
push
fisttpl
jne
xor
fadd
and
jle
push
jl
lea
mov
mov
leave
aaa
xor
sbb
es
xlat
fmuls
mov
aaa
xor
popf
js
hlt
test
insb
addb
mov
sti
jno
cmp
pop
dec
mov
jbe
andl
add
rcll
scas
sbb
ss
jb
idiv
roll
xchg
cmp
pop
fnstenv
leave
pop
into
cmpsl
xor
adc
push
les
jb
sarl
loope
pop
ss
xor
lahf
call
pusha
std
lods
idivb
test
hlt
out
mov
popf
dec
jp,pn
mov
xor
jl
dec
push
jne
adc
xchg
addr16
inc
jne
ficoms
movsw
mov
jg
rcrb
aam
fcmovnbe
lock
insb
pop
in
fs
cmp
sti
rcrb
xor
and
xchg
jo
out
pop
popa
sbb
in
mov
aaa
sti
push
cmp
cltd
daa
xor
subb
cltd
jae
test
fwait
out
push
xor
sub
and
push
xor
cmpsl
lods
or
and
cmpsb
leave
push
lret
adc
or
push
fdivrs
sub
stos
sbb
ss
xchg
xlat
cwtl
or
dec
push
test
cld
add
add
or
scas
clc
mov
cli
in
inc
fs
outsl
roll
rcll
xlat
cmpsb
pushf
ja
int3
andl
jnp,pn
in
pop
pop
clc
push
mov
push
jns
lcall
das
repnz
fcoms
adcb
mov
and
stos
sub
outsb
rolb
shrb
dec
mov
in
or
cltd
sti
and
aas
cmp
dec
xchg
cmpb
pop
shlb
pop
jae
lods
pop
fiaddl
and
or
push
xchg
push
aad
inc
idiv
mov
push
dec
dec
jecxz
sub
xlat
mov
xor
mov
sub
int
sti
jae
pushf
push
nop
lahf
push
push
mov
xchg
jg
dec
arpl
sub
mov
repz
dec
movsb
mov
mov
in
pop
scas
sahf
lods
push
pusha
jmp
jecxz
scas
movsb
pop
daa
testb
fcomip
mov
inc
mov
mov
inc
push
bound
pop
push
dec
inc
call
adc
in
xor
or
ret
iret
orl
inc
out
js
inc
insl
jo
xor
xchg
faddl
pop
insb
dec
cltd
sub
jge
adc
pushf
add
mov
fisttps
pop
inc
call
xchg
js
outsl
mov
enter
into
mov
ja
lcall
stc
sub
aaa
jne
test
push
jb
xchg
xor
arpl
aad
or
pusha
add
gs
mov
jnp
sub
jle
mov
pop
movsl
push
ret
shl
out
and
cli
and
jo
push
cli
push
jecxz
mov
mov
cli
dec
add
xchg
loope
out
es
outsl
dec
dec
fcos
int3
xor
mov
test
in
adc
test
pop
pushf
cld
flds
subl
xchg
jp
jns
ljmp
xlat
jns
and
jo
sbb
cli
fisttpl
icebp
stc
jmp
mov
inc
xchg
into
cli
xor
add
dec
out
cli
in
pminub
les
dec
fldt
scas
arpl
test
push
pop
imul
or
dec
psubsb
fnsave
das
scas
pop
add
sbb
dec
es
xchg
je
mov
mov
sbb
cmp
mov
pop
sahf
aas
jg
pop
or
jle
push
popf
mov
inc
shlb
les
fs
cmpl
xchg
lret
adc
jnp
mov
out
sahf
pop
xchg
inc
jnp
mov
shr
mov
or
shll
fnsave
or
mov
mov
jmp
mov
cmpsb
repnz
dec
push
enter
movsl
popf
add
inc
hlt
fisubs
aas
add
cmp
mov
lret
mov
push
fadds
push
andl
push
ret
inc
cmc
aad
mov
cmp
xchg
xchg
sub
bound
imul
jl
ds
xchg
lcall
or
dec
mov
pop
jle
sub
cmp
sbb
loopne
ror
pop
xor
call
jmp
or
push
imul
push
jle
jo
add
inc
popf
loopne
enter
pop
adc
in
movsb
inc
mov
fmuls
stos
jno
cmpb
cmp
push
leave
inc
cmp
dec
sbb
cld
inc
mov
iret
scas
gs
inc
stos
test
pop
addr16
loopne
ja
int
divb
sbb
fxch
xorb
fwait
test
and
mov
pop
in
ret
xchg
jns
mov
push
fsubs
or
fidivrs
imul
bound
fmull
xchg
lret
push
aam
adc
iret
cmp
or
xchg
pop
mov
sbb
dec
cmp
mov
xchg
xor
rcrb
jb
cmp
ja
push
sbb
push
dec
lcall
imul
mov
cmc
stos
daa
push
pop
test
sbb
pusha
cmpsl
incl
or
mov
cli
xchg
in
add
popf
adc
inc
or
inc
cs
nop
jbe
push
add
adc
insb
outsl
rcll
inc
in
lods
stos
sarb
popa
insl
fneni(8087
pushw
add
loope
xchg
push
bound
mov
subl
sub
and
aaa
pop
pop
cwtl
xchg
mov
inc
mov
aaa
dec
subl
sbb
add
inc
js
fsubrl
mov
cmp
aaa
sbb
cmp
out
inc
loopne
lock
das
adc
xchg
rorl
addr16
sub
push
adc
test
push
fisttpl
std
lods
repnz
inc
outsb
in
scas
idiv
aaa
mov
call
push
xor
iret
pop
jns
mov
adc
mov
icebp
icebp
lahf
scas
push
push
mov
sbb
lret
movsl
push
push
iret
or
push
clc
aaa
cmpsb
mov
mov
rol
cmp
stos
mov
xchg
push
mov
push
iret
mov
out
cmp
call
and
mov
std
push
mov
sub
xchg
dec
out
ljmp
les
jbe
jno
bound
cltd
mov
mov
add
mov
push
pop
pop
or
inc
sbbb
aas
fwait
cmp
inc
mov
or
adcb
sub
int3
mov
jl
arpl
pop
mov
mov
push
mov
mov
xchg
lret
lods
push
icebp
jnp
sti
adc
insl
or
jg
test
add
outsb
packuswb
mov
xor
sub
clc
jl
xchg
jne
adc
jmp
push
inc
jmp
cmp
js
jae
sub
inc
pop
inc
inc
push
lret
inc
popf
pop
movaps
leave
jno
jle
test
adc
mov
and
xchg
and
scas
stos
mov
and
shrl
movsl
xchg
loop
stos
xchg
inc
push
xchg
test
xor
mov
ja
mov
mov
add
jecxz
insl
scas
imul
sbb
sub
fdivrl
test
jge
add
sahf
imul
jnp
mov
xor
push
in
mov
push
mov
dec
scas
daa
ret
jnp
push
loop
in
xchg
popf
or
scas
inc
cltd
int
push
cmp
mov
out
sbb
stos
ja
mov
ffree
xor
jmp
or
xchg
inc
pop
sbb
xchg
mov
popa
and
out
dec
jo
fnsave
lcall
jae
cli
mov
adc
push
scas
lret
gs
xchg
jae
push
leave
das
add
mov
faddp
cmpsb
repnz
inc
xor
jb
pop
jmp
inc
imul
mov
ljmp
stos
push
add
inc
popa
adc
loopne
mov
lahf
jne
mov
and
les
mov
sar
enter
mov
adc
ljmp
cli
rolb
mov
xor
hlt
call
scas
fs
add
sub
es
mov
cltd
mov
xchg
or
mov
insb
mov
xchg
test
xor
fimuls
addr16
xor
xor
std
jmp
aas
fwait
outsb
xchg
mov
nop
loopne
cmpsl
pop
pushw
or
andl
jmp
mov
cmovne
dec
or
je
stos
mov
ja
ss
int3
das
lret
scas
cmp
xchg
mov
sub
and
clts
xchg
xchg
ja
popf
test
bound
dec
in
mov
push
xor
nop
and
dec
cmc
pop
cwtl
cltd
ja
int
xchg
dec
daa
mov
fldcw
mov
mov
and
pop
popf
out
lret
and
mov
insl
std
in
repz
dec
sti
sbb
test
movb
lret
ret
jo
dec
fstpt
add
lahf
cmpsb
or
jl
push
push
sub
and
cmp
push
add
test
inc
fildll
mov
lds
call
scas
les
jecxz
test
lahf
add
test
lds
mov
mov
dec
mov
shlb
jmp
out
lods
cltd
pop
adc
adc
lahf
mov
add
stc
jg
icebp
cmp
gs
ret
and
ret
lcall
pop
cmp
add
sahf
loope
inc
sbbl
sub
mov
jmp
sub
sub
xchg
test
push
movsb
mov
and
cmp
pop
push
rorb
lds
and
cs
sub
or
in
push
rorl
and
insl
loop
shll
mov
jne
or
or
jae
dec
out
test
movsl
mov
or
inc
jae
int
mov
xor
cmc
mov
les
push
ss
into
jle
inc
mov
fs
fdivp
pop
aam
repnz
cmc
push
mov
mov
aas
cltd
push
enter
sub
xor
sbb
test
test
jbe
test
cwtl
mov
push
insl
dec
scas
out
scas
adc
push
lahf
int3
fmuls
sbb
cmp
sub
xchg
mov
ja
out
add
aam
sbb
jns
jle
adc
inc
xchg
repnz
pop
gs
mov
out
je
xchg
dec
jns
insb
rcll
inc
fcmovbe
mov
dec
pushf
dec
stc
loop
ljmp
mov
cmpsb
dec
adcb
and
add
stc
xor
jno
inc
inc
sub
pop
xchg
ret
cltd
into
popf
add
arpl
mov
xchg
mov
mov
movsl
mov
movl
std
ss
ja
lcall
gs
loope,pn
rcll
inc
bound
or
mov
movsl
inc
or
xchg
add
sbb
mov
cltd
fdivl
std
out
dec
mov
decl
pusha
pop
xor
inc
les
inc
test
cmp
sbb
push
or
ret
mov
cs
inc
inc
push
out
mov
xor
jno
imul
mov
jns
xchg
int
in
test
fisubrs
push
xor
dec
loopne
pop
pop
or
das
aaa
pop
int3
jnp
dec
stos
mov
and
dec
push
iret
dec
mov
dec
mov
into
int3
pusha
inc
dec
pushf
and
jo
ja
sbb
add
and
jo
test
std
out
int
insl
add
jl
das
insl
and
adc
sti
add
cli
mov
out
stc
rorb
mov
sub
sub
cwtl
adc
mov
pop
and
cld
pop
mov
push
repz
or
les
jl
add
mov
hlt
adc
inc
cs
les
adc
mov
roll
ljmp
sub
repnz
aad
jmp
ret
rorl
test
dec
mov
dec
lods
mov
mov
mov
ja
ljmp
rolb
cs
std
or
sahf
push
aad
aam
add
dec
aaa
add
mov
nop
pop
les
add
iret
jle
or
mov
pusha
loop
xlat
jno
in
sarb
and
adc
ret
push
aas
and
shll
jecxz
rol
jae
jne
xchg
enter
insl
aam
lret
dec
shrl
call
and
fwait
imul
loopne
mov
nop
mov
cli
adc
push
adc
and
add
iret
std
push
iret
insb
jp
das
or
test
push
jmp
add
in
shr
cmp
scas
mov
mov
xchg
lods
in
mov
mov
mov
mov
mov
fwait
ret
xlat
fsubr
ss
xchg
lret
aam
jle
fildll
loop
or
dec
gs
push
stc
adc
xor
sbb
dec
add
push
mov
mov
pop
pop
imulb
icebp
push
enter
inc
mov
sbb
mov
xlat
jecxz
incl
icebp
shlb
jns
pop
xor
rorb
mov
arpl
fwait
iret
mov
dec
lcall
lret
pop
imul
jmp
andb
leave
pop
mov
push
leave
mov
cmp
adc
and
cmp
mov
out
lret
lret
and
jle
xlat
mov
mov
bound
lea
cmc
ss
mov
sarb
mov
imul
dec
mov
iret
mov
cmc
adc
mov
or
mov
lock
enter
ljmp
and
loope
imul
push
enter
int
aam
jb
es
xor
nop
xor
sub
jmp
fldt
cmc
mov
dec
push
push
gs
aam
inc
mov
popf
icebp
enter
xcrypt-ctr
cmpsl
pop
enter
inc
pop
scas
dec
mov
clc
cmp
xor
xchg
jg
dec
sbb
cmp
out
inc
es
mov
sarl
or
mov
mov
enter
mov
xchg
sub
enter
sti
jnp,pt
push
inc
or
xor
xchg
in
xor
or
jg
daa
jnp
push
mov
in
push
dec
and
adc
iret
and
repz
mov
jae
incb
bnd
jbe
sbb
sahf
lret
insb
in
popa
inc
fldenv
imul
pushf
lret
in
cld
dec
mov
and
push
bnd
pop
push
icebp
std
addr16
js
iret
mov
ljmp
jge
or
jne
ja
add
cmc
mov
ret
fisubrl
mov
jae
mov
clc
js
lret
xchg
fsubrp
mov
push
jle
int3
cmpsl
nop
incb
mov
dec
push
and
rorl
shl
jp
push
mov
inc
or
sub
dec
xlat
inc
test
add
aas
lea
xor
mov
sahf
sahf
sub
jl
xor
arpl
jb
xchg
mov
sub
cmp
inc
adcl
imul
fbstp
int3
iret
pop
out
mov
mov
cmpsl
hlt
hlt
mov
xor
and
dec
dec
lret
pop
push
jmp
popf
dec
out
jne
and
push
test
js
push
loop
mov
leave
mov
lahf
jl
push
xchg
mov
fcoms
out
ficoms
add
push
jnp
push
ljmp
inc
lods
cwtl
cmp
pushf
mov
xlat
lods
movsb
dec
mov
jnp
sti
divl
jp
xlat
dec
fadds
test
mov
mov
sbb
sub
jne
mov
imul
inc
sub
xchg
mov
adc
test
aam
dec
loope
jae
dec
xor
out
push
ret
orl
push
or
mov
push
add
aad
lea
xor
mov
pop
movsl
jl
sbb
pop
sbb
or
mov
psubusb
add
sbb
inc
test
xchg
cmp
push
mov
cmp
push
push
push
fldl
mov
ror
sub
stc
dec
jecxz
cmc
fwait
pop
cmp
mov
add
mov
test
icebp
dec
arpl
divb
fs
cmpsl
jns
scas
or
popf
or
jnp
add
je
add
insb
int
stos
and
cmp
iret
jno
adc
adc
mov
or
addr16
shr
lea
xor
je
xor
repz
sarl
imul
mov
repz
rcrl
dec
dec
bound
addl
sub
adc
jmp
out
out
into
adcl
stc
insl
jl
pop
xor
and
and
add
daa
add
xchg
cmp
add
mov
mov
push
mov
pop
mov
add
fisttps
movsl
cmp
test
and
xchg
out
jmp
jl
pushf
push
pop
mov
shll
inc
lods
cmp
cmpsb
xchg
push
aas
lods
fcomp
pop
ficoml
mov
lods
jg
outsl
adc
lods
rcl
ds
lahf
addr16
in
cmp
cwtl
rcrb
mov
cs
pop
add
addr16
xchg
cmp
int3
sti
jecxz
js
test
and
ret
out
xor
jge
inc
cmp
dec
cmp
stos
data16
std
jmp
icebp
shll
fsts
or
mov
fwait
or
scas
cltd
fcoms
cmpsb
or
movsl
sahf
cwtl
lods
mov
fistpll
and
rolb
fmull
in
cld
mov
outsl
pop
rcl
xor
aam
scas
jno
sub
in
movsl
xlat
aad
jge
add
adc
das
lock
ret
adc
xchg
jg
sub
jne
aam
mov
pop
clc
mov
sub
lahf
jns
lahf
repnz
sub
cmp
push
int3
cltd
js
mov
mov
push
lret
xor
lods
les
or
sarb
mov
push
shlb
mov
popf
or
cmp
stos
aam
sub
into
cvtps2pi
mov
inc
pop
daa
adc
pusha
add
xchg
push
mov
dec
je
inc
fnstsw
outsb
clc
test
fwait
ljmp
dec
lcall
sub
clc
cmpsb
sarl
push
arpl
mov
xor
xor
loop
inc
test
repz
call
sbb
push
cltd
pop
sub
fnsave
xchg
mov
xor
repz
movsl
adc
xchg
fwait
sarb
pop
adc
fcom
pusha
into
inc
xchg
sub
daa
adc
inc
and
sub
les
inc
hlt
jp
jmp
or
push
pop
fbstp
dec
lret
icebp
xchg
fsubrs
mov
ja
pop
push
mov
sub
arpl
fdivr
in
aas
push
lds
into
xlat
rclb
push
push
or
movsb
pushf
sar
adc
hlt
aam
in
mov
sub
mov
data16
dec
pop
fbld
jne
mov
pop
outsb
sub
mov
nop
push
mov
and
xorb
dec
cltd
dec
dec
fwait
in
dec
jmp
add
mov
addr16
aam
dec
stc
pop
loopne
fbld
xchg
and
sbb
pop
insb
inc
scas
mov
mov
dec
add
fiadds
imul
push
or
xor
and
mov
test
dec
cmp
aam
das
stos
xchg
cli
add
cmpsl
outsb
sbb
add
pop
or
movsl
pop
xor
xchg
mov
xor
in
movsl
or
subb
mov
test
stos
sbb
push
add
add
pop
cmp
out
adc
dec
ret
jnp
test
aad
xchg
xchg
sub
dec
xor
jo
jbe
ret
pop
pusha
dec
push
int3
jg
stc
dec
add
roll
aas
adc
es
inc
or
mov
rol
adc
int
or
movsb
and
aam
jmp
insl
sbb
jl
jns
fnstsw
and
jne
pop
das
mov
mov
insb
mov
lock
dec
setge
mov
cwtl
cmp
mov
push
cwtl
hlt
adc
sarb
loop
jle
fsub
jns
push
scas
mov
int
sub
or
xchg
cltd
and
lret
and
sete
imul
orl
icebp
jg
stos
or
mov
mov
pop
adc
pop
sahf
stc
lods
pop
push
arpl
pop
cs
in
shll
cmp
andb
or
push
je
dec
sysexit
mov
or
mov
pop
sahf
lds
and
bound
jb
push
inc
jnp
aad
popf
jbe
add
into
nop
movsl
shll
adc
add
pop
push
inc
xlat
daa
mov
cmpsl
out
add
jb
push
int3
fsubs
fbld
adc
add
out
xchg
sarl
push
and
jns
mov
and
outsb
rorb
sbb
out
mov
repnz
jecxz
pop
adc
fwait
or
in
cli
lcall
jne
out
cmp
jo
test
fistpll
xor
sbb
xchg
std
mov
stos
gs
jno
cmc
dec
cmc
popa
cmp
test
gs
mov
jnp
sbb
jmp
push
jmp
inc
push
jbe
push
and
inc
pop
mov
sbb
mov
rcr
push
push
subb
mov
lds
and
lds
call
stos
xchg
cmc
cs
pop
mov
les
push
push
testb
into
jmp
cmc
insb
jae
loope
inc
jae
int
pop
sbb
inc
jmp
push
xchg
enter
push
popl
outsb
mov
and
dec
scas
les
mov
dec
sbb
cmpsb
mov
xlat
imul
bound
data16
jg
push
add
fmul
mov
ljmp
pop
inc
push
aas
and
shl
rorl
icebp
mov
push
cmpsl
add
mov
cmp
or
imul
xor
pop
mov
test
fucomi
test
add
lahf
jmp
sbb
hlt
xor
aas
sbb
cmpsl
fdivs
sbb
or
movsl
sub
jo
ljmp
jne
ja
popf
loopne
adc
add
cltd
cmp
mov
mov
dec
mov
add
stos
add
out
jle
xchg
inc
mov
pop
and
mov
leave
cmp
sbb
outsb
sti
mov
fwait
ds
sub
push
sub
mov
push
jae
scas
inc
clc
sbb
xchg
add
push
push
xchg
mov
dec
lret
mov
pop
dec
jb
ss
mov
push
fdivp
cmp
push
adc
cltd
sbb
jp
pop
shlb
pop
cmp
dec
dec
fucomip
das
add
lods
mov
fcmovne
dec
and
outsb
xlat
dec
dec
bound
sub
push
jg
shrl
and
movsl
adc
imul
or
insb
cmp
cmpsl
xor
mov
lods
sahf
imul
ss
ret
mov
out
test
mov
jge
lock
scas
fistl
inc
pusha
ljmp
das
jg
push
popl
test
sahf
icebp
jne
pop
mov
xor
in
aam
pop
jp
mov
push
push
mov
jp
addr16
lcall
mov
fst
cmp
push
add
testb
jne
dec
dec
mov
test
push
sbb
mov
push
enter
push
mov
out
hlt
cmp
adc
imul
mulps
xor
fidivrs
mov
test
push
pop
mov
rorb
loopne
sbb
xchg
ljmp
or
int3
or
and
into
lret
adc
push
outsl
pushf
cmpsl
and
shlb
fsubr
mov
inc
sti
push
xchg
sub
addr16
push
add
push
mov
shll
in
sahf
xchg
enter
test
cmp
push
add
das
mov
iret
cld
push
mov
scas
mov
jo
pusha
fidivrs
leave
mov
sbb
lret
cmp
jl
sbb
sbb
mov
push
stc
test
lret
mov
pop
pop
lock
jecxz
cmp
mov
mov
imul
fsubrp
inc
lahf
testl
dec
dec
cli
and
xor
mov
sub
inc
adc
icebp
test
and
fmul
add
fcmove
mov
mov
test
outsb
xchg
adc
mov
fcoms
cltd
nop
or
fisubs
push
xchg
xchg
dec
dec
rolb
inc
orb
mov
addr16
sub
addl
jae
jmp
lcall
ret
in
sub
sbb
jo
xchg
repnz
jecxz
sub
ja
rolb
and
imul
psadbw
sarl
mov
xlat
add
cmp
aaa
add
out
leave
mov
cmp
xchg
shlb
push
fcmovnbe
testb
xchg
sbb
mov
mov
pop
out
iret
sub
push
cmc
mov
stos
repnz
sbb
out
arpl
jle
pushf
mov
repz
scas
mov
fcompl
mov
jns
fdivrl
data16
loop
lods
mov
xor
xchg
jo
pop
call
xchg
mov
xchg
ss
int3
xchg
test
cmp
cmp
lret
lock
loop
out
mov
pop
adc
push
push
xor
lock
mov
rol
add
fmul
in
mov
daa
repnz
je
sbb
loopne
push
cli
lahf
fstps
out
inc
lret
inc
adc
or
mov
mov
jns
shll
dec
push
test
cmc
push
mov
stos
faddl
and
in
add
adc
cmp
jnp
inc
test
fadd
out
addb
and
jle
lea
push
imul
fsubl
sub
push
sbb
xor
sub
mov
dec
pusha
cwtl
sbb
out
ds
and
mov
pop
inc
cwtl
mov
push
jns
push
cmpsl
xchg
ficoms
test
dec
popa
push
lds
xchg
cmp
pop
add
push
mov
sti
push
stc
arpl
sub
mov
fmulp
mov
jae
and
test
test
jle
jo
push
jne
imul
jp
cmpsl
cli
pop
imul
std
xchg
cmc
mov
pusha
int3
inc
pop
sbb
cmpl
loop
dec
std
inc
dec
add
es
mov
in
scas
sub
and
pop
in
mov
xor
pop
pop
out
xlat
mov
mov
push
int3
mov
ja
sbb
and
lret
clc
push
jge
lods
lea
shlb
daa
mov
mov
cwtl
sbb
stc
clc
shlb
cmp
stos
dec
xchg
xchg
enter
rclb
xchg
mov
jl
cs
pop
cmp
sbb
std
or
jb
jmp
pop
lods
pusha
popf
and
xchg
lock
cmpl
dec
icebp
sarl
sub
cmp
push
push
push
xchg
dec
mov
mov
std
mov
xor
inc
sub
push
jbe
sbb
adc
mov
add
xchg
mov
daa
pushf
shll
xor
cmpsb
aas
pop
rcrb
sbb
sub
and
orl
into
dec
jo
adc
roll
adc
mov
popa
push
stos
sbb
std
aam
mov
inc
lds
pop
or
rclb
sbb
cli
lock
xchg
jmp
jbe
push
idivb
rorb
push
mov
outsb
mov
add
push
mov
shll
push
into
not
or
mov
mov
mov
lret
push
lret
jmp
repz
bound
mov
daa
fildl
sbb
into
jns
scas
insb
dec
orb
jo
inc
test
int3
rcrl
addb
inc
xchg
xchg
outsl
mov
adc
inc
lea
sub
call
rcll
movsl
add
pop
loopne
pusha
loop
add
xchg
jmp
sbb
enter
jp
int
jbe
rolb
out
mov
sbb
and
ljmp
xor
ds
sbb
pop
lcall
sub
mov
or
aaa
cmp
test
push
jg
push
test
and
push
mov
stc
mov
rolb
and
xor
inc
test
push
adc
fcompl
popa
in
mov
pop
mov
jnp
stos
aam
lds
pop
pop
sbb
sub
mov
insl
adc
mov
or
mov
add
push
scas
xchg
iret
xchg
in
add
pop
jge
jp
cld
loopne
test
fnstcw
adc
and
sub
imul
pushf
inc
inc
xlat
push
adc
shr
mov
loopne
mov
inc
xchg
mov
mov
je
dec
inc
pop
fsubrp
cltd
jle
push
repnz
adc
ja
mov
pushf
insl
fildll
lea
fistpl
test
cmp
fildl
mov
in
out
repz
mov
orb
sbb
fldl
cmpps
popf
lahf
adc
stc
fdiv
jae
test
sarl
pop
xor
imul
and
fsubs
stos
sbb
xchg
cli
cmp
xor
mov
pop
xor
mov
cmc
mov
inc
add
mov
cmpsl
gs
lds
xor
xor
out
and
int3
shrb
pop
dec
sub
stc
ljmp
fistl
ljmp
js
xchg
lcall
cmp
or
xchg
jne
jbe
add
out
std
adc
es
jle
jno
fisttpll
jnp
test
daa
test
sbb
pop
stos
aas
or
mov
sbb
sbb
int3
mov
push
pop
lcall
int3
es
js
adc
pop
lret
xor
cmc
pop
sub
idivl
fld
stos
xchg
scas
sub
mov
and
ss
popf
jae
inc
xchg
stos
test
stos
dec
cmp
repnz
cmp
es
nop
jnp
or
sbb
stos
std
inc
pop
ds
push
sub
or
into
push
mov
stos
jmp
movb
stos
dec
mov
or
jle
xchg
pop
pop
xor
push
and
lahf
daa
repz
mov
mov
outsl
nop
push
sub
or
inc
loope
adc
aas
into
push
outsb
pop
xchg
xor
je
mov
jno
or
test
mov
out
inc
jl
mov
mov
lea
adc
inc
adc
dec
popa
jle
mov
fdivs
cmpsb
mov
decl
sub
push
sbb
lahf
mov
clc
rclb
xor
ret
jnp
icebp
into
call
dec
pop
cmpsb
add
jg
scas
pushf
repz
dec
dec
adc
rcl
mov
mov
pop
sub
mov
xlat
jg
push
test
adc
jecxz
sub
jns
cmp
arpl
mov
xorl
jo
jb
mov
pop
dec
sti
aad
lock
aad
jae
dec
inc
addr16
fists
xchg
pop
andl
cli
cld
insb
jl
movsb
xchg
jae
xchg
adc
roll
cwtl
das
imul
in
push
mov
pop
imul
ja
push
xor
add
jno
int3
js
das
mov
cmp
scas
mov
scas
fs
loopne
or
sub
lret
outsl
jno
adc
inc
cmp
cmp
test
inc
lods
xchg
xor
push
or
push
inc
and
repnz
push
sbb
or
sbb
icebp
xchg
aas
pop
xor
mov
dec
pop
mov
nop
jle
int
xchg
push
pop
bound
sbb
mov
fcmovne
loopne
repz
bound
adc
repnz
pop
movsb
push
mov
adcb
push
cwtl
movsb
iret
aam
mov
pushf
stc
test
xchg
js
mov
pop
imul
ds
dec
jp
lds
test
and
mov
pushf
jo
negb
sbb
push
sbb
jle
ficompl
sahf
inc
push
pop
adc
cmp
mov
xchg
lret
cwtl
mov
test
cmpsl
jle
test
jl
or
fistl
or
out
mov
dec
lcall
movsb
jg
lds
leave
xor
test
mov
sub
rorl
jae
mov
inc
rorb
mov
mov
repz
cli
aam
adc
xchg
mov
adc
in
insb
xchg
test
lahf
xchg
cmc
inc
loopne
mov
inc
push
sbb
rorl
mov
stos
bound
sbb
xchg
icebp
sbb
scas
jo
add
sub
daa
and
jae
jns
adc
push
mov
fcoml
pop
mov
scas
push
rorl
push
lcall
xor
aaa
push
stos
pop
mov
jle
das
xchg
cwtl
rcrb
loopne
popa
xor
dec
sub
dec
int
cmp
push
and
xor
in
mov
in
cmpsl
mov
addr16
xchg
fbstp
fs
popa
xchg
mov
xchg
cmpsb
adc
out
push
lods
mov
ret
inc
inc
inc
scas
mov
cld
adc
push
sbb
insw
test
je
mov
jl
inc
mov
pop
xor
roll
call
inc
add
scas
loopne
or
and
inc
pushf
cld
daa
pop
in
int
fidivs
rcll
mov
jmp
rorl
and
add
out
outsl
xor
in
inc
ds
push
in
aaa
pop
aam
out
movsl
or
insl
jnp
in
inc
cltd
mov
enter
icebp
movsb
popl
in
jo
xor
inc
jb
or
out
movsb
hlt
cli
inc
cld
sbb
popa
lods
and
mov
jo
jmp
inc
imul
shlb
push
pop
mov
or
inc
fstpl
push
mov
cli
sti
dec
add
stos
pop
sub
cmpsl
mov
mov
out
cld
inc
xor
test
shl
addb
stc
inc
mov
cmp
sbb
push
pop
aad
hlt
ret
cmp
shll
test
cmp
push
mov
xor
stc
popa
sbb
gs
push
andl
rcrl
loopne
inc
dec
jge
dec
cmp
aam
cltd
xchg
jno
inc
mov
inc
push
sub
fnstcw
mov
mov
lods
mov
out
mov
mov
inc
xchg
stos
add
add
arpl
xor
dec
inc
sbb
rolb
imul
ret
xlat
jbe
dec
sbb
ja
iret
push
jle
or
cmp
outsb
and
xor
ret
ret
sub
push
stos
xlat
pop
add
gs
sarl
dec
or
xlat
xchg
mov
repnz
jp
sub
jmp
and
cmp
aas
jle
cmp
pop
arpl
cmp
mov
sarb
scas
imull
cwtl
pushf
and
lahf
push
xchg
sub
aad
clc
add
shlb
jge
rol
push
test
cmpl
push
push
or
xchg
xor
ret
jmp
jl
inc
js
mov
lahf
adc
dec
mov
test
cli
or
mov
loope
adc
jb
sbb
stos
iret
sub
sbb
sbb
or
pop
das
mov
push
and
lahf
popa
pop
or
fiadds
inc
mov
sahf
mov
pop
daa
push
outsb
xchg
into
mov
push
mov
outsl
cmp
pop
pop
lahf
ret
jl
jmp
sub
inc
andl
int
xor
xchg
test
mov
mov
jmp
faddl
test
jb
push
mov
push
push
push
lock
addr16
sub
out
je
outsb
mov
fisubl
mov
push
scas
sub
iret
xchg
sbb
cltd
xchg
addr16
fs
mov
test
fs
xchg
stc
outsl
fisubs
jg
daa
mov
pop
int
jbe
aaa
pop
xchg
dec
cmpsb
stos
ficomps
mov
std
es
dec
das
fldl2e
scas
loopne
shl
cs
adc
fwait
adc
sub
sarl
sbb
push
xchg
fdivl
lret
xlat
mov
mov
in
stos
inc
icebp
or
fwait
pop
xchg
and
repnz
mov
pop
sbb
jp
pop
test
mov
adc
xchg
mov
cmc
repz
mov
sub
imulb
lock
adc
push
or
pop
xor
cmp
jg
mov
cltd
faddl
popa
loope
js
call
push
nop
dec
dec
cmpsb
sub
bnd
cmp
cld
xchg
sti
dec
into
inc
stc
aam
out
cmp
fdivrs
out
dec
inc
xchg
outsl
add
cs
cmc
std
sub
in
mov
jg
daa
fs
mov
inc
hlt
pop
jp
clc
xchg
cmpl
and
fs
pop
xchg
nop
mov
jle
mov
pop
pop
movsl
fstp
xchg
stos
icebp
cmc
push
cwtl
movsb
sbb
mov
es
and
fwait
push
sahf
nop
mov
leave
cwtl
cmp
je
dec
xor
jge
test
xor
jl
jl
xchg
jle
jae
pop
add
mov
jne
ss
cltd
cltd
jmp
pop
jb
pusha
cmpsl
push
push
mov
pop
cmpsb
scas
sbb
aaa
add
jbe
adc
mov
xchg
cmc
or
insl
and
imul
lock
adc
fiadds
push
dec
mov
jl
xlat
pushf
ljmp
sbb
xor
bound
mov
ficomps
movsb
adcl
mov
in
mov
lret
out
sub
out
mulb
cld
decl
shl
sbb
mov
aaa
pop
mov
rcll
lahf
or
push
stos
fistl
mov
scas
lods
mov
ljmp
outsl
cmpsl
int
inc
std
push
in
sub
mov
test
cmc
mov
cmp
xorb
pushf
mov
dec
cmpsl
lds
and
lds
jb
subb
cmpsb
xchg
mov
mov
mov
mov
fs
imul
ljmp
lods
cmp
mov
mov
jg
inc
popa
addr16
mov
push
fstpt
in
mov
mov
xchg
int3
adc
jmp
cmpsb
xor
jp
mov
mov
js
repnz
inc
mov
mov
push
pop
lods
jmp
and
cmc
cmp
test
push
dec
inc
fdivl
pop
xlat
clc
pop
or
xchg
mov
js
mov
dec
daa
popf
cmpsl
rolb
fldl
xor
in
xor
add
out
xchg
lret
mov
js
push
jbe
push
movsb
mov
sbb
sbb
int
filds
inc
nop
clc
mov
into
icebp
fcmovnbe
push
cmp
cmpsl
xor
add
gs
scas
sbb
mov
pushf
add
ret
lds
jae
dec
sub
push
js
cmpsb
jb
push
insb
inc
inc
mov
pop
pop
in
mov
sahf
in
dec
call
insb
pop
push
out
or
ljmp
inc
in
inc
insl
iret
add
sbb
inc
inc
and
jg
mov
into
arpl
std
and
mov
or
sahf
mov
stos
leave
inc
lahf
jno
clc
inc
xorl
sub
dec
xor
js
xchg
cmpsb
inc
xchg
xchg
pop
cmp
iret
sbb
sbb
andb
repz
mov
fcmovu
into
inc
push
imul
lock
jle
stos
adc
jne
adc
mov
cmp
pop
dec
ss
sub
je
pop
jmp
mov
pop
mov
rorl
pusha
fucom
push
jmp
loop
fs
add
ss
je
jmp
dec
cmp
pushl
xorb
into
gs
pop
add
sub
jmp
add
aam
test
int
mov
jo
mov
cmp
in
and
lret
cmp
inc
insl
xor
push
xor
out
mov
xor
stc
insb
pop
arpl
adc
aas
stc
orl
sbb
mov
arpl
pop
shlb
in
fidivl
mov
outsl
sub
adc
mov
adc
jbe
cmpsb
mov
mov
and
cmc
dec
inc
adc
shrb
add
int
or
bound
lock
js
dec
inc
xor
jg
mov
adc
add
mov
add
jbe
movsl
sbb
popa
icebp
into
ret
add
xchg
lds
popa
or
cmpsl
xor
or
lods
push
inc
pop
sar
mov
cltd
push
dec
dec
push
sub
dec
adc
aaa
pop
add
iret
gs
fs
ljmp
xor
call
in
imul
arpl
ds
push
push
mov
or
int
inc
jecxz
adc
in
aad
sarb
rolb
out
inc
add
mov
sub
jle
jbe
and
sub
cmp
jl
in
push
sub
cwtl
enter
data16
jbe
sbb
mov
repnz
lcall
imul
ds
pop
pop
shll
rcrb
ds
negb
xchg
push
int3
je
pop
xchg
insl
out
scas
add
and
cmpsb
stc
mov
inc
out
outsl
icebp
mov
imul
push
and
mov
sbb
ds
daa
lahf
xchg
or
popf
mov
inc
fisubs
and
mov
lahf
xchg
scas
push
loop
pop
inc
mov
enter
dec
push
mov
test
jae
popf
rcll
mov
lock
jno
pop
mov
xlat
pop
addr16
jno
imul
mov
ljmp
clc
test
mov
popa
mov
sbb
sub
fiadds
inc
push
pop
adc
out
cmpsb
and
mov
std
cmpl
and
push
xor
push
lahf
fists
jbe
xchg
cli
mov
mov
shl
cmpsb
loop
adc
enter
imul
pop
mov
dec
mov
adc
adc
loopne
adc
pop
nop
adc
out
pop
in
sub
jl
in
in
xchg
add
sbb
mov
push
fidivl
mov
cmp
in
add
xchg
xchg
mov
bound
cltd
adc
inc
adc
pusha
movsl
pop
sahf
adc
jg
pop
in
and
inc
imul
arpl
aas
ror
push
pop
test
aam
or
ds
jo
rorl
jg
das
xor
sbb
push
adc
mov
jo
or
mov
jno
and
mov
jae
div
add
push
lahf
ja
stc
jg
xchg
xlat
shrl
insb
lret
cmc
jo
mov
hlt
cmp
das
inc
mov
dec
push
and
fs
xchg
mov
jne
or
mov
add
sarb
and
rclb
nop
es
insl
xchg
mov
pop
mov
dec
mov
mov
and
xchg
mov
push
mov
sbb
mov
jg
repnz
push
mov
ds
lret
jge
popf
mov
inc
or
es
jge
int3
outsb
mov
in
push
mov
ss
jle
jae
jnp
pop
mov
cli
and
inc
adc
ds
or
rolb
imul
les
and
xor
sub
int3
sbb
add
je
arpl
cmp
xchg
in
fcoms
popf
and
ret
das
sub
pop
lcall
int
add
inc
jo
mov
sub
jnp
imul
and
popf
push
cld
mov
sbb
and
scas
adc
std
lock
movsb
mov
aam
imul
inc
lahf
sbb
dec
and
je
pushf
ljmp
mov
dec
clc
dec
inc
mov
cli
xor
imul
add
and
in
rcrl
dec
stos
cmp
pop
movsl
sub
jnp
jns
sti
and
fcom
push
mov
out
scas
cld
push
orl
adc
lcall
mov
bound
je
add
arpl
addr16
aaa
sahf
in
mov
mov
adc
nop
add
cld
pop
nop
mov
fdivl
and
repnz
mov
push
mov
loop
cmp
scas
mov
and
lahf
add
or
xor
sub
mov
scas
mov
pop
out
and
mov
xchg
and
push
mov
mov
mov
mov
dec
jge
pop
iret
insb
std
and
mov
sub
cmp
and
cmc
stc
xchg
mov
das
mov
adc
lods
push
lods
or
xor
es
scas
arpl
mov
xor
sbb
mov
int3
inc
mov
jle
in
imul
add
xor
push
jb
or
push
mov
cltd
orl
xchg
mov
out
mov
push
dec
dec
cmpsl
lret
cmp
xor
xor
test
mov
es
jmp
xchg
popf
sbb
out
fisttpl
mov
lahf
pusha
pushf
sbb
and
scas
out
dec
clc
call
pushf
outsl
icebp
jae
sub
mov
inc
pop
stos
xor
mov
arpl
lods
sbbl
mov
mov
in
adc
aas
cltd
scas
mov
mov
and
test
sub
sti
ds
xchg
push
add
xchg
mulb
xchg
loope
test
push
out
push
in
xor
call
mov
sub
out
and
imul
dec
and
mov
rcrb
fimuls
adc
xchg
pop
and
jmp
sbb
popf
add
add
push
xorl
xchg
cmp
and
push
daa
mov
sti
lock
shr
test
loopne
sbb
das
rcll
xchg
xchg
inc
adc
out
iret
ljmp
clc
inc
hlt
sbb
inc
adc
pop
adc
pop
jmp
or
xlat
adc
and
stos
and
push
xchg
sub
in
sti
mov
into
inc
int
dec
ds
xchg
or
mov
movsb
outsb
cltd
or
and
xchg
cmp
ret
mov
int3
jbe
dec
pop
divl
push
sbb
or
sbb
push
rolb
mov
and
cmp
sti
lea
fwait
in
daa
jae
adc
and
rcrl
lahf
mov
cmpsb
in
ret
ret
std
xchg
dec
loop
sarb
out
xchg
mov
sbb
mov
push
cltd
hlt
js
bound
add
xchg
sub
jl
pushf
orl
gs
jecxz
adc
sub
movsb
aad
mov
rclb
nop
sbb
in
inc
fisubrs
rolb
xchg
xchg
je
pop
test
xchg
into
jmp
mov
gs
or
repz
mov
addr16
dec
mov
sbb
pop
pusha
loop
or
pop
pop
cwtl
pop
mov
rcr
shlb
and
xchg
sar
sbb
cmp
and
pop
cmp
scas
mov
and
xlat
lods
xor
int
clc
inc
mov
nop
scas
arpl
or
add
clc
shl
fsub
ret
popf
jo
sti
out
push
scas
cmp
mov
andl
push
test
enter
and
loopne
insb
and
and
jae
out
subb
xorb
add
or
inc
movsb
push
and
xor
jle
push
test
dec
adc
push
outsl
and
xchg
sarl
pop
add
popa
sar
jae
ss
mov
das
mov
sub
push
loopne
xchg
ljmp
inc
lds
int
xchg
cmp
xlat
imul
imul
out
add
or
mov
int3
ja
fwait
cmc
rorl
inc
mov
jae
fsubs
jne
xlat
inc
lret
and
mov
bound
cmp
add
cmp
ret
pop
mov
mov
or
xchg
mov
fsubr
cmc
add
xor
cmp
es
rorb
mov
xchg
mov
or
pushl
cmp
mov
lea
fstpl
rcll
jne
test
sti
inc
or
push
enter
mov
xor
ds
pushf
adc
scas
lods
shll
out
dec
loope
xchg
fwait
ds
xchg
mov
test
enter
popa
sbb
mov
and
sahf
lahf
in
cmp
cmp
xchg
in
fildl
in
mov
dec
jmp
and
mov
cmp
ds
test
mov
mov
ss
addr16
mov
push
pop
pop
mov
and
jns
iret
je
repnz
pop
lea
or
jmp
inc
inc
popf
cmp
out
cmp
add
pop
mov
dec
scas
inc
hlt
push
pop
and
mov
and
push
push
sub
mov
rorb
outsb
enter
jg
rcrl
and
adc
pushf
xor
inc
jns
rcl
xchg
xchg
shlb
adc
sub
int
inc
pop
out
test
xor
cmpsb
into
xor
pop
push
push
iret
int3
pusha
cmc
mov
jne
mov
pop
cmp
pop
jnp
and
lods
dec
leave
push
mov
cmp
mov
cmpsb
cmp
call
cmp
test
pop
aad
pop
mov
or
loopne
add
pop
mov
jbe
xchg
ljmp
jb
inc
add
pusha
inc
loope
lods
mov
mov
sub
jb
mov
jnp
xchg
ja
add
jne
lahf
jae
adc
arpl
jecxz
jno
movb
mov
mov
pushf
aam
adc
imul
pop
xchg
out
dec
mov
jecxz
out
jb
pop
ja
cmp
fsub
lds
adc
xchg
imull
bound
pushw
inc
test
std
cmp
leave
lods
mull
fs
clc
sub
add
cmc
stos
sub
cmp
ds
add
js
ds
push
fildll
pop
div
aad
push
sbb
mov
mov
outsb
xchg
xchg
xor
cld
movsb
sub
xchg
mov
aad
in
aam
adc
pop
ja
adc
aaa
out
jle
inc
push
ret
xor
pop
aad
jnp
mov
fists
mov
xor
sbb
inc
mov
shlb
and
cmp
pop
inc
push
jns
popa
adc
inc
mov
xchg
pop
pop
int3
ss
jl
push
arpl
dec
push
mov
mov
fdivrs
insl
dec
sbb
jge
add
lret
xchg
movsl
cmp
lods
test
aaa
xchg
mov
dec
lcall
in
fmuls
xchg
pop
lds
bound
test
cmp
xor
lods
cli
inc
aas
loope
sahf
lods
scas
sub
mov
lea
jge
mov
ret
pop
lods
in
jo
jae
mov
notl
mov
xchg
in
xorb
dec
mov
push
or
adc
and
fisubrs
or
cmp
outsl
jecxz
mov
ja
cmp
push
aad
xchg
shr
mov
sbb
adc
fsubrs
insb
cwtl
outsb
pop
and
adc
push
test
shl
das
mov
mov
xor
leave
into
fisubrs
mov
in
inc
inc
mov
negl
dec
in
into
fldcw
xchg
sarl
cmpsb
cs
adc
xlat
add
mov
adc
sbb
pop
cmc
fldenv
lret
mov
pushf
and
add
iret
aas
arpl
adc
nop
adc
inc
or
add
ror
xchg
out
subb
jmp
cmpsb
icebp
xchg
pop
shrb
test
div
mov
dec
mov
clc
mov
es
or
lds
cmpsl
mov
orb
or
add
pop
dec
jp
cmovp
push
mov
inc
jo
data16
psubusb
sti
inc
jl
adc
mov
das
cmc
add
xchg
insb
jmp
subb
fiaddl
dec
mov
inc
faddp
adc
cmp
push
lret
fisubrl
sub
jp
or
fs
cmp
icebp
cltd
jbe
lods
aam
sub
dec
lds
add
iret
jge
roll
inc
xchg
scas
pop
out
imul
and
imulb
adc
or
scas
mov
jle
lcall
jns
add
push
mov
adcl
test
je
lahf
hlt
in
push
mov
es
lret
loopw
push
xchg
btr
dec
out
movsb
shrb
mov
mov
mov
inc
ja
ffree
xchg
icebp
mov
pop
subb
mov
dec
sub
mov
test
adc
xor
push
sahf
sub
sub
xchg
lcall
xchg
jno
in
lcall
fmull
cwtl
add
je
es
fistpll
pushf
inc
movsl
imul
lods
lea
icebp
cwtl
out
cmp
fmul
mov
mov
cmp
hlt
mov
stos
cmpsb
idivb
rol
pusha
add
insb
mov
ja
outsl
xchg
insl
push
pusha
jb
cmp
sahf
sub
jno
lea
int3
and
mov
adc
repz
adcb
aam
pushw
popf
cs
dec
dec
popl
icebp
data16
cld
push
pop
pop
mov
push
movsl
cmpsb
sub
push
imul
and
jmp
sbb
xchg
or
cmp
cs
sbb
mov
sti
inc
sub
std
scas
push
lcall
addl
andb
sbbl
xor
in
in
inc
pop
cld
lea
jne
jb
push
push
std
or
add
mov
mov
data16
out
xchg
dec
repz
sar
lret
sub
cmpsb
cli
mov
pop
jmp
xchg
je
int
rcr
jl
jbe
out
pop
cmpsl
cmp
fsubs
divb
dec
xchg
mov
or
test
fs
or
push
jns
xchg
xchg
jb
ds
xor
repz
dec
inc
cmp
lahf
leave
sub
ret
adc
mov
xor
std
aad
idivl
loop
xor
insb
lods
mov
aad
mov
jb
out
inc
sbb
sub
iret
aad
xlat
and
sti
xchg
aam
sub
mov
stc
hlt
mov
pop
lret
lret
adc
dec
jl
stos
or
sahf
adc
aam
dec
cmp
pop
pop
mov
fwait
xchg
xchg
dec
jne
outsb
pop
mov
inc
inc
xorb
pop
cli
push
mov
sbb
loop
cli
adc
mov
xor
pop
and
dec
mov
nop
pop
xor
push
push
mov
test
sub
jbe
push
clc
pusha
es
pop
inc
shrl
pop
fsts
inc
push
push
sub
add
nop
mov
jecxz
push
sbb
stc
inc
mov
xor
cmp
insl
enter
rcll
adc
fimull
and
lock
clc
mov
shl
je
out
pop
xor
fwait
stos
sbb
out
sub
jo
sti
pop
and
dec
lret
sub
pop
in
gs
out
mov
nop
mov
scas
mov
pop
sti
xor
and
jle
leave
add
xchg
mov
cld
cli
jne
loop
movsl
sub
push
sahf
fwait
mov
insb
lock
sbb
repz
push
sub
nop
les
or
aad
jmp
clc
xchg
lahf
rorb
xor
sbb
add
out
rcll
repnz
xor
push
call
mov
sub
inc
fsubl
fsubl
adc
hlt
mov
ret
cmpsl
insb
push
cwtl
das
push
jmp
mov
and
adc
push
jnp
push
inc
call
adc
or
mov
cmp
je
push
sub
lahf
je
mov
pop
cmc
add
cmp
mov
jl
jmp
and
adc
push
rol
pushf
ficompl
and
adc
xchg
sbb
push
pop
pop
ljmp
insb
mov
repnz
mov
add
bnd
inc
jno
pop
and
cmp
push
mov
mov
lds
cmpsl
xchg
scas
mov
shlb
or
push
push
out
ds
repnz
push
addr16
jne
pop
mov
xchg
inc
push
nop
push
mov
rep
mov
lret
repnz
mov
cli
or
loop
mov
outsb
push
pop
ret
fdivl
sub
add
add
test
aas
data16
push
push
test
aad
xor
je
or
xor
dec
movsl
xor
xchg
es
pop
mov
and
add
jmp
ja
lods
je
test
mov
movsl
movsl
insl
sub
mov
add
mov
cli
sbb
jno
push
xor
das
fimuls
sti
push
scas
inc
dec
aas
vaddpd
lock
jg
mov
test
movsl
test
dec
ds
fcompl
jns
mov
lods
jmp
mov
jo
inc
cmp
dec
aas
cmp
shl
adc
adc
or
inc
cltd
aam
loopne
pop
xchg
fsubs
std
das
cmp
cli
stos
jle
xor
icebp
push
ds
fcoms
lahf
lahf
pop
das
and
std
daa
mov
mov
fnsetpm(287
pop
mov
cmp
pop
sti
or
mov
les
out
loop
jmp
shrb
pop
add
imul
cli
xchg
push
ss
arpl
sbb
push
imul
jns
movsb
inc
les
mov
aad
sbb
icebp
xor
xor
cld
jg
jb
mov
stc
bnd
pusha
sbb
jl
aad
flds
idivb
mov
adc
je
int3
sbb
insb
sbb
jns
mov
pop
sbb
mov
popf
sub
das
dec
or
mov
lahf
xor
pop
pop
notb
scas
jnp
les
pop
pusha
jb
xchg
out
addr16
cmpsb
or
push
mov
incl
mov
push
popa
sbb
mov
hlt
sbb
xor
popf
pop
mov
loope
in
fstpl
aaa
jno
push
stos
iret
fwait
push
jne
add
imul
pop
cli
and
fcoms
lret
and
scas
or
inc
mov
xchg
and
popf
mov
lcall
loope
int3
dec
les
test
insb
mov
jg
adc
inc
popa
iret
sub
push
insb
insb
add
mov
ret
inc
xchg
sarl
cltd
dec
jp
aaa
daa
push
fs
pop
xor
daa
mov
cmp
xorl
pop
mov
mov
add
je
out
call
jne
fbld
cmp
jno
js
sbb
fiadds
or
push
push
mov
test
or
mov
movsb
daa
fimuls
fdivl
sub
mov
icebp
rclb
cmpl
movsl
fnstsw
mov
push
cs
into
mov
out
roll
lret
xchg
cmp
adc
cmp
push
cmp
cltd
fimull
psubd
add
add
sahf
aas
xchg
jnp
xor
dec
ss
mov
mov
sub
shlb
dec
pusha
and
ja
je
xor
imul
xor
sahf
lods
ret
adc
mov
stos
lcall
mov
add
adc
gs
outsb
sbb
into
lods
mov
cmc
mov
inc
out
in
test
jecxz
xchg
int
hlt
adc
aad
xor
lret
aam
lods
insb
in
icebp
sbb
cli
cwtl
mov
ss
scas
out
lods
out
mov
cwtl
jae
push
inc
mov
dec
mov
fisubrs
fistl
lahf
ljmp
clc
lods
adc
je
and
lcall
add
jecxz
sbb
ja
mov
pop
out
sub
movsb
jge
sub
xchg
add
and
cmp
aam
push
pop
pop
add
mov
sub
inc
jmp
enter
inc
xchg
cmp
and
xchg
sti
sbb
mov
stos
out
clc
push
or
inc
and
repnz
pusha
xor
mov
lret
adcl
add
imul
mov
imul
andb
clc
out
adc
mov
pop
mov
inc
or
mov
pop
clc
int
cwtl
xor
jmp
push
cmc
mov
lods
cmp
ret
push
mov
lahf
cmpsl
inc
out
sub
jnp
fldenv
andl
adc
subl
cmpsb
mov
ror
dec
xchg
movsb
xor
mov
popf
int
les
inc
sbb
or
out
xchg
sub
scas
das
and
mov
mulb
fcompl
sub
addr16
pop
mov
arpl
lcall
data16
loopne
inc
mov
sti
or
add
aaa
pmulhw
adc
scas
clc
lods
push
inc
aad
inc
push
push
out
mov
cmpsl
aas
in
or
fsts
mov
std
jne
mov
push
iret
pop
mov
rorb
push
dec
call
call
mov
jl
mov
jae
lods
jge
bound
push
movsl
je
sbb
xchg
jge
shlb
push
div
inc
and
fidivrl
leave
data16
xchg
pop
js
mov
outsb
and
sahf
inc
fcoml
pop
mov
aas
shrl
and
sbb
mov
push
pop
insl
cmp
mov
ljmp
or
add
pop
fnstcw
jae
lds
ljmp
and
sub
jno
jp
mov
xchg
es
cmpsb
sub
mov
mov
sbb
dec
jge
or
adc
mov
je
jge
mov
mov
es
mov
and
ret
cmp
push
ficoms
mov
pop
pop
negb
lods
xchg
movsl
cmp
mov
xor
icebp
idiv
outsl
pushl
or
lods
adc
adc
push
xlat
jmp
insl
pop
daa
cmc
sub
jnp
outsb
dec
mov
fmull
je
nop
movsb
mov
fwait
sbb
aas
jmp
sbb
sbb
or
bound
push
inc
in
stos
push
sub
dec
dec
faddp
push
sahf
sar
pop
mov
or
test
popf
shl
pop
cmp
push
pop
enter
fwait
or
mov
in
in
call
push
mov
and
call
bound
add
int
lret
inc
cli
push
fildll
fdivs
loopne
mov
push
shll
movsb
lret
gs
fcoms
mov
sbb
push
push
xchg
inc
lds
loope
bound
add
fadds
repz
and
or
mov
sbb
int3
pop
push
repz
hlt
inc
mov
add
xchg
leave
adc
mov
jbe
mov
inc
pop
sbb
add
rorb
bound
inc
inc
stos
pop
push
movsb
mov
jge
cmp
add
cld
jae
mov
in
ficomps
push
push
jno
xchg
xchg
or
addl
push
data16
and
dec
fsts
sbb
arpl
mov
sbb
cmc
xchg
add
fldl
js
sbb
repnz
pushf
sarb
scas
xchg
sub
sarl
dec
jo
sbb
out
ret
cs
xchg
sbbl
jno
ret
pop
pusha
fwait
mov
jae
lcall
pop
lods
mov
xchg
adcb
int
cmp
xchg
dec
adc
mov
ffreep
fs
inc
in
dec
lea
loope
incb
sbb
dec
inc
enter
mov
jle
lret
popf
jnp
jnp
je
xor
scas
sbb
push
aaa
loop
lock
xlat
xor
addr16
lret
daa
sub
cmp
adc
subb
ds
sub
cld
mov
sub
mov
in
mov
jno
adc
xor
scas
fiadds
mov
mov
sbb
jg
andb
cmpsl
jne
push
jmp
mov
xorb
int
into
xchg
cmp
fstps
roll
shlb
dec
push
js
xchg
dec
insb
xor
ss
shll
jno
push
xchg
js
repnz
xor
bound
and
and
inc
inc
rcll
push
push
push
mov
add
cmpsl
add
adc
push
xchg
addr16
test
ljmp
outsb
in
xchg
xor
inc
jg
jnp
aam
mov
mov
jecxz
jb
lcall
adc
int3
pop
lret
mov
out
inc
cmp
leave
jp
push
test
scas
dec
fsubrl
fldt
je
jmp
xchg
ljmp
pop
out
lret
int3
jb
cmp
cmpsb
aam
pop
and
ljmp
jle
pop
add
out
ljmp
pusha
xchg
jne
or
xor
push
xor
push
sbb
adc
cld
or
lret
pop
lods
shr
mov
mov
addr16
nop
dec
xlat
dec
and
clc
cltd
xor
scas
xchg
jo
dec
dec
ss
and
push
je
add
jp
and
aaa
xor
dec
movsl
in
dec
pop
mov
ret
clc
dec
xchg
in
mov
xchg
loope
cltd
jo
sbb
das
gs
sub
ljmp
mov
je
lods
cmp
cld
lret
nop
mov
hlt
fwait
shrl
icebp
es
enter
inc
push
and
adc
lahf
aad
sbb
pusha
orl
dec
cmp
imulb
dec
lcall
xor
lcall
mov
or
mov
popf
xchg
and
jae
xchg
jnp
xor
ret
sub
xchg
xor
sub
pop
ds
mov
stos
popa
sub
lea
sbb
mov
inc
inc
aas
inc
adc
xchg
lret
mov
cmp
pop
sbbb
adc
xor
or
push
scas
add
inc
or
mov
jnp
ficoml
jle
icebp
xchg
js
sbb
adc
add
mov
xlat
jp
add
je
jg
or
push
fsubrl
cltd
out
xchg
scas
je
adc
mov
pop
loopne
sub
jae
daa
jns
shrl
mov
cmp
cltd
sub
dec
pop
pop
out
sarl
mov
lahf
xchg
jl
sub
xor
push
jbe
xlat
aam
shrb
sub
pop
adc
sbb
and
pop
adc
je
xchg
add
mov
pop
comiss
sub
mov
les
ja
sub
gs
pop
dec
pop
push
pop
fwait
lea
in
lahf
hlt
and
popf
xchg
aaa
jns
stc
cli
push
push
mov
iret
fists
pusha
mov
xor
dec
xchg
mov
popa
inc
and
mov
jmp
shl
mov
inc
pop
pusha
sbb
dec
lret
ret
icebp
popa
or
pop
xchg
sbb
mov
cmp
inc
jmp
test
inc
mov
xor
pop
icebp
add
fcoml
cmc
aam
dec
or
sbb
push
or
adc
mov
dec
shlb
ret
fnstenv
xchg
add
mov
push
sarb
fdivr
pushf
jle
shlb
xchg
fdivrl
sub
aam
outsb
jbe
xchg
pusha
rcl
pop
pop
cmpsb
shr
imul
xor
and
lds
pop
divl
pop
std
fnstsw
ret
cld
loopne
repz
push
xchg
push
mov
lock
pop
add
popa
jae
fmul
iret
jl
int3
push
inc
mov
popa
and
xor
xchg
ss
addl
mov
mov
xchg
pop
in
sti
xchg
push
dec
out
cmp
inc
push
inc
mov
and
sti
test
shlb
jecxz
xor
inc
fistl
in
and
xor
int3
dec
ss
int
mov
nop
xchg
or
hlt
insl
rcrb
jae
call
and
sub
add
push
int3
mov
cmp
or
test
dec
inc
ja
sahf
mov
addr16
jl
jbe
xchg
mov
dec
stos
xchg
ret
mov
aaa
inc
inc
mov
mov
dec
mov
aam
jbe
aaa
or
shll
das
cld
xchg
xor
loop
mov
cmpsb
jns
jns
adc
loope
pop
inc
xor
scas
loope
sub
xor
arpl
stos
out
jp
imul
insl
and
je
pop
dec
ss
pop
xchg
sbb
mov
cld
bound
icebp
cmpsl
cmp
jecxz
scas
scas
xchg
movsb
call
aad
and
cmc
mov
or
pop
lock
sbb
mov
dec
xor
sbb
out
incb
mov
imul
mov
scas
dec
sub
cmp
push
cmp
stc
js
gs
inc
sub
repz
xchg
or
cmp
hlt
cmpsb
push
std
pop
mov
sbb
jle
cmp
lock
jno
out
push
aad
sbb
loope
pop
lods
and
cmp
jmp
add
mov
into
sub
iret
aam
loopne
xor
std
cwtl
ret
aad
ljmp
xlat
push
insl
jl
daa
lock
cmp
pop
mov
subl
stc
inc
or
lahf
sbb
das
fwait
imul
or
lcall
inc
popa
or
xchg
cli
mov
adc
dec
or
test
xchg
fwait
out
hlt
ficomps
jg
dec
sti
jo
sahf
outsb
sub
mov
add
push
lret
js
cmp
mov
adc
pop
fidivrl
movsb
add
aaa
stos
mov
xor
ljmp
pop
hlt
xor
and
fldl
es
jnp
ss
push
cli
pop
sub
lods
imul
inc
lock
sbb
or
in
lock
add
loopne
and
inc
pushf
cmp
bound
movsl
clc
aam
insb
repz
add
fs
andb
subb
xlat
sbb
sub
lahf
xor
mov
push
pop
in
adc
outsl
aad
loop
lods
inc
cmp
push
inc
sbb
aam
scas
xchg
jno
out
adc
cmc
push
pop
xor
adc
mov
dec
fisubrl
and
jl
push
xchg
pop
dec
jecxz
stos
daa
sbb
out
test
scas
sub
mov
cmp
sbb
sub
ficomps
mov
jnp
mov
mov
int3
shll
adc
mov
pop
pop
jg
mov
subb
mov
outsl
xor
jne
pop
adc
mov
ss
jp
xlat
sub
sbb
sbb
cwtl
jnp
add
mov
pop
std
push
cmpsl
jae
shlb
xchg
pop
cmc
jmp
add
js
lock
add
shr
xchg
lcall
jmp
psubd
enter
adc
lods
hlt
xchg
sbb
cmp
jnp
cmp
or
daa
xor
incb
xchg
or
xor
mov
and
es
rorl
pop
sub
xor
dec
aam
jbe
push
pop
dec
jnp
adc
mov
and
mov
mov
cltd
mov
enter
roll
in
cmc
rclb
adc
mov
cmp
loope
jp
inc
movsb
dec
inc
movsl
pop
cld
test
add
jae
cmp
or
jnp
mov
mov
xchg
push
imul
mov
subb
sub
mov
and
pop
clc
ds
dec
mov
test
jmp
jns
mov
arpl
inc
xor
sbb
xchg
shlb
push
sbb
mov
push
pop
cmp
imul
ljmp
mov
insl
mulb
pop
lret
hlt
and
adc
lock
add
dec
repz
outsl
pop
psubq
cmc
scas
iret
enter
cmp
out
imul
addr16
scas
sub
je
adc
mov
dec
pop
dec
inc
mov
inc
jbe
add
xor
add
pop
sub
and
sbb
scas
and
sbb
and
push
int
adc
data16
inc
push
jge
pop
lods
notl
mov
dec
insb
mov
adc
data16
mov
rolb
nop
add
dec
or
enter
or
push
cli
xchg
ret
mov
sub
cmp
mov
subb
mov
daa
fcoml
sub
mov
dec
mov
push
fmuls
jle
xlat
pop
push
mov
sbb
in
jns
addr16
sbb
sti
mov
and
mov
into
scas
insl
xchg
pushf
fmull
jecxz
jl
lds
loop
xor
sub
cmp
iret
ja
int3
mov
sbb
fwait
iret
or
inc
idivl
mov
dec
push
sub
pop
cli
das
mov
pop
cmc
fwait
jp
insb
lahf
imul
mov
and
push
push
sbbl
stc
das
ds
movsb
cltd
fldcw
dec
mov
and
les
ret
mov
test
ljmp
incl
mov
iret
insb
pop
jecxz
cmp
mov
mov
popf
lock
jb
adc
mov
sbb
test
fistps
xor
fwait
mov
loop
add
mov
enter
das
mov
out
insl
scas
iret
adc
cmpsb
lret
cld
orb
adc
shll
jge
mov
pop
mov
test
jecxz
add
pop
cmpsb
pop
push
aam
cli
in
sbb
fsubrs
clc
in
pop
shrl
scas
sti
jno
jle
inc
movsl
jne
inc
je
lret
arpl
jae
pop
mov
push
sbb
in
dec
jle,pn
cli
push
icebp
je
fcmovne
insb
nop
push
dec
idiv
sbb
int
xor
call
jno
xor
outsl
cmpsl
adc
dec
fidivrl
sub
decl
mov
aad
scas
fwait
mov
in
test
jae
mov
gs
sbb
dec
push
sub
mov
jbe
icebp
xor
fistpll
lahf
mov
and
xchg
cwtl
lahf
mov
push
hlt
lea
sbb
mov
dec
cmp
sarb
hlt
mov
or
pop
lock
mov
mov
rorb
pop
fldl
jns
mov
leave
jg
jnp
jns
arpl
adc
dec
lcall
xchg
mov
jp
outsl
cltd
out
jmp
sub
jmp
jb
mov
hlt
gs
add
repz
mov
jmp
and
push
mov
push
pop
rcr
int
sub
in
jns
inc
repz
xor
dec
xchg
jp
or
test
out
fists
jecxz
out
fldenv
ret
in
jno
stos
pushf
push
jecxz
out
pushf
inc
insb
inc
ror
add
scas
mov
push
int
mov
sbb
stc
or
mov
and
inc
mov
jbe
pop
sarl
es
les
mov
pop
or
iret
test
sarb
test
movsl
and
lret
test
enter
iret
or
cwtl
shrl
and
ljmp
ss
xlat
push
imul
dec
mov
add
jl
xchg
dec
pop
and
sub
mov
rol
xor
xor
enter
fsubr
or
repnz
pop
repnz
out
sub
js
addr16
and
or
inc
sub
clc
mov
push
mov
int3
inc
push
mov
lret
or
aas
adc
mov
sbb
adcb
adc
adc
mov
mov
inc
or
scas
insl
jl
outsl
fwait
push
call
sbbl
mov
mov
cld
pop
xchg
dec
in
mov
xor
inc
rcll
sarl
inc
push
jl
stos
insl
pop
pop
or
mov
sahf
dec
imul
dec
or
sbb
jmp
out
movsl
inc
cs
adc
jge
and
sub
stc
xchg
xor
fildll
mov
xchg
lcall
subl
push
xlat
xchg
pmullw
xchg
out
xchg
clc
mov
cmp
sub
inc
push
jnp
fdivl
add
mov
sbb
jmp
fs
push
cltd
jae
insb
jmp
mov
dec
mov
popf
mov
mov
mov
lds
iret
or
jp
jne
cmp
data16
dec
mov
push
fwait
jge
jns
leave
and
add
cs
cmp
or
adc
dec
incb
data16
pop
pop
jno
aam
mov
xchg
adc
repz
xchg
jns
xchg
cmp
pop
lods
addr16
popf
mov
or
aaa
adc
stc
jecxz
ficoms
lock
add
push
inc
ret
push
fiaddl
xchg
push
enter
mov
pop
test
cmp
dec
inc
xchg
cs
in
sub
testl
xorb
mov
lcall
dec
xchg
xor
cltd
jae
ret
or
inc
aad
push
adc
jns
rorl
outsb
pop
inc
cmp
jge
add
repnz
shrl
je
bound
push
ss
mov
std
ljmp
cmpsb
movb
lcall
popa
cmc
addr16
jae
jns
jo
hlt
imull
cmp
mov
lea
adc
push
push
dec
lods
aam
sahf
xchg
je
and
loop
and
pop
in
stos
adc
lret
addr16
popf
mov
fsts
jecxz
fstp
push
test
jge
xchg
call
xor
add
sbb
dec
out
or
add
xchg
rorb
and
jp
xchg
xor
jle
push
add
add
sti
jg
pop
mov
xor
or
ds
mov
outsb
cmpsb
mov
loope
popa
test
imul
in
adc
mov
test
mov
sbb
clc
lock
clc
push
cwtl
sub
gs
sbb
cmc
in
and
dec
cmp
xor
aas
adc
cmc
push
mov
fcoms
inc
mov
scas
xchg
out
test
iret
mov
cld
push
lods
mov
mov
daa
scas
sub
mov
cltd
fsubrs
enter
fs
push
cmp
ret
and
add
divb
das
fiadds
out
lret
dec
lea
out
dec
call
or
or
fnsave
or
pop
dec
push
fimuls
jecxz
and
mov
sti
ljmp
add
rcrb
cmp
lock
or
lea
stc
xchg
add
dec
cli
out
fidivs
xchg
dec
rorb
lods
cmp
pop
outsb
cld
rcrb
arpl
xchg
push
iret
out
out
xor
ljmp
shrl
int3
bound
xlat
adc
adc
sarb
aad
outsl
or
leave
ja
sbb
call
inc
mov
add
pop
lods
mov
negb
lock
xchg
int3
loope
or
pop
stos
mov
or
adc
pop
pusha
fcomps
sahf
ret
test
jne
cmp
cmp
mov
inc
lods
mov
jecxz
push
sbb
stos
stos
mov
mov
ret
mov
or
mov
push
daa
add
inc
lcall
outsl
in
dec
test
mov
cmpl
mov
scas
push
mov
mov
mov
xor
xor
mov
movsb
jl
push
fucom
push
mov
in
sbb
cmpsl
dec
ret
icebp
xor
xor
cli
mov
mov
pusha
insl
push
mov
jb
int3
sbb
mov
xlat
test
addr16
das
xor
test
add
sarb
inc
or
outsl
xchg
movd
ljmp
inc
cmp
jmp
sbb
cmp
push
insb
pop
cwtl
dec
add
out
sahf
push
mov
mov
cmp
mov
pop
pop
call
adc
hlt
mov
sub
ret
repz
ljmp
xchg
inc
cmp
push
mov
call
jecxz
dec
dec
aaa
dec
jnp
scas
xor
adc
gs
cwtl
mov
dec
pop
and
lret
pop
pop
push
lock
mov
push
stc
decb
dec
adc
fcoms
aas
aaa
push
sbb
adc
mov
dec
mov
dec
mov
and
jmp
std
sbb
mov
out
xchg
fwait
sub
pusha
lods
inc
aad
inc
repz
lods
lret
and
jb
in
pushf
sub
and
mov
fwait
jle
adc
lock
bound
mov
pop
lret
dec
cmp
cwtl
shll
mov
mov
cmpsl
jmp
call
loope
lret
pop
and
cmpsl
bound
xchg
jg
popa
lret
xor
sar
sbb
lea
jge
lea
int3
or
les
int
mov
or
push
xchg
sub
and
push
pop
jp
jbe
es
jae
scas
lret
cmp
pop
leave
pusha
lret
or
mov
add
test
sbb
push
adcl
bnd
punpckhbw
mov
mov
lods
push
fcompl
outsb
xor
andb
outsl
in
adc
push
loope
iret
rcr
adc
xchg
add
and
mov
jne
mov
push
mov
sbb
pop
mov
fmull
hlt
xchg
jge
stc
fstl
push
pop
stos
negl
sbb
sbbl
sbb
jecxz
rcrl
jnp
xorb
jno
jae
inc
lcall
jle
and
icebp
xor
mov
in
aad
test
mov
in
mov
pop
pop
aam
out
mov
insl
pusha
fs
mov
call
ret
sbbl
xor
or
movsb
fs
or
fnstsw
cltd
fldenv
fstl
push
inc
mov
ss
sub
mov
mov
inc
push
popa
mov
jle
int3
pop
inc
loop
mov
push
adc
xor
or
mov
jns
dec
xchg
push
dec
push
dec
mov
mov
mov
mov
dec
scas
in
cmp
or
lret
imull
fistpll
xor
aas
icebp
push
shll
pop
cmp
mov
je
cmp
jge
adc
test
loope
adc
adc
dec
cmp
inc
jp
inc
loop
cmpl
mov
mov
jle
lret
leave
push
dec
adc
cmpb
xor
xor
les
and
test
inc
pop
dec
out
push
push
jle
enter
add
test
dec
pushf
test
pop
dec
cmp
test
ljmp
iret
leave
sti
nop
push
cmp
mov
xor
or
pop
repnz
jne
addl
addr16
shlb
push
addb
inc
xchg
push
jnp
add
mov
add
insb
loopne
scas
and
adc
js
mov
mov
cmp
call
adc
xor
mov
stc
cmp
jge
xchg
mov
icebp
sbb
lahf
mov
push
fidivl
inc
dec
pop
pop
ss
push
jbe
fimull
dec
jb
insb
push
cmp
jo
mov
scas
cwtl
mov
loopne
pop
adc
adc
sahf
sub
adc
sti
dec
out
or
mov
and
jne
dec
dec
xchg
sarl
pop
iret
mov
xor
mov
pop
or
rclb
scas
jbe
inc
dec
mov
mov
popa
rorb
xchg
adc
fbstp
fldcw
push
xchg
mov
or
nop
jmp
add
and
lret
lds
pop
cmpsl
or
out
push
fdivp
fsts
cmp
das
sbb
or
scas
sbb
adc
pop
mulb
xchg
cld
incb
dec
xchg
xchg
leave
adc
mov
jb
std
cmp
mov
jle
adc
mov
in
stc
repnz
mov
xor
jle
in
pop
dec
xor
decb
in
aad
ja
xchg
out
xchg
xchg
data16
jmp
jge
lcall
jge
mov
xorb
out
ja
repnz
mov
inc
adc
fistl
movsl
movsl
popa
lret
scas
aad
ds
or
aaa
in
je
leave
popf
pushf
jp
sti
fistpl
iret
xor
cmp
mov
popa
jecxz
iret
mov
int3
imul
cli
add
in
iret
mov
adc
call
sub
mov
inc
sti
imul
add
in
fs
enter
or
push
pop
iret
mov
pop
loop
cmpsl
aaa
sbb
push
xchg
mov
nop
add
movsb
lret
pushf
xor
adc
pop
icebp
in
sub
cld
popa
lret
cld
sub
cmp
mov
mov
rorb
sbb
mov
jo
or
call
into
add
jbe
add
int
inc
fsub
dec
arpl
lds
stc
int3
push
lock
fimuls
out
mov
leave
jmp
xchg
cltd
xchg
daa
loop
fcoml
fwait
addr16
andl
stos
pop
add
stos
inc
mov
xchg
adc
push
sbb
inc
dec
jne
push
jo
fcomp
add
cmp
cmp
testl
push
shl
mov
aaa
adc
cmp
out
scas
or
loop
push
jecxz
repz
iret
bound
sub
jae
imul
int
jo
repnz
jp
xchg
and
push
les
packuswb
sti
je
fldcw
lds
xor
hlt
push
cli
xor
lock
cmp
mov
call
pop
js
mov
cmp
loopne
push
dec
sub
je
xchg
or
mov
xchg
repnz
push
fwait
clc
pushf
add
out
push
mov
add
dec
cmpsb
ja
cmp
and
adc
mov
or
aas
into
bound
mov
ds
leave
xor
sub
xor
ja
dec
jne
lds
mov
mov
les
aaa
jmp
js
out
outsb
cmp
jno
adc
lea
data16
jae
and
mov
lahf
fwait
out
hlt
mov
outsb
movsl
stos
add
je
adc
cmpsl
lea
fistl
inc
cmp
pop
push
test
sub
adc
imul
gs
pop
mov
lcall
fwait
incl
nop
aad
push
adc
outsb
pushf
jno
mov
pop
sti
fists
dec
xchg
mov
sub
add
pop
jae
rcll
sarl
push
iret
ds
and
fstpt
dec
xor
bound
sbb
inc
cmp
xchg
mov
cmpsl
fmuls
jb
inc
mov
rcrb
lret
mov
mov
pop
lock
int3
sbb
jb
dec
dec
in
lcall
es
hlt
rorl
mov
adc
jmp
add
dec
mul
test
or
test
ss
mov
xchg
jle
ja
rorb
push
testb
in
adc
mov
in
mov
xor
lods
pop
adc
mov
nop
outsb
inc
pop
xor
jmp
pop
push
and
pop
int
shlb
cld
fnstenv
aad
imul
int
mov
insl
imul
dec
aad
add
cmp
jmp
mov
pop
cltd
sbb
lret
cmp
jae
lret
pushf
call
fldt
inc
sbb
jno
movsb
fld1
not
xchg
lret
jb
and
lds
aad
xor
mov
pop
repnz
fcomip
ret
lods
stos
lds
pand
mov
lahf
dec
lret
xchg
jg
enter
in
mov
in
rcrl
mov
and
jno
aas
adc
adc
insb
inc
mov
pop
pop
sub
in
add
clc
push
gs
aaa
out
fwait
cmpsb
sbb
sbb
add
call
stos
inc
add
idiv
lds
mov
stc
lahf
and
inc
inc
mov
in
mov
sbb
mov
xor
loop
lahf
lret
mov
push
inc
cmp
insb
cmp
and
insb
aaa
ret
out
add
adc
cmp
inc
fs
aas
repz
nop
pop
insl
in
jbe
and
adc
mov
scas
sub
loop
inc
iret
ret
mov
xor
cmp
stos
sbb
push
fsts
pusha
imul
icebp
ret
inc
int
adc
jae
sbb
lea
xchg
cmpsl
notb
cmp
cmp
inc
movsl
push
cmpsb
out
sti
aaa
arpl
mov
adc
cmp
int
or
mov
jo
or
bound
cmpsb
mov
sub
pop
cmp
mov
adc
dec
inc
sbb
add
inc
das
cltd
cwtl
inc
arpl
mov
sbb
pop
mov
inc
cs
mov
adc
xchg
mov
add
incb
pop
add
mov
mov
scas
outsb
in
shlb
mov
push
or
adc
push
xor
rcr
push
in
mov
daa
daa
mov
xlat
popa
pop
leave
mov
xchg
mov
and
pop
fcoml
std
push
or
ret
pop
shlb
fs
mov
adc
push
mov
mov
inc
shrb
add
dec
insb
adc
jno
imulb
pushl
dec
pop
push
in
xchg
outsl
mov
jo
sti
scas
mov
lods
and
pop
dec
push
in
lea
xor
arpl
adc
cli
rorl
je
push
jmp
inc
fnstsw
lods
and
pop
jp
pop
xor
lret
jecxz
into
inc
into
inc
sbb
addr16
inc
mov
adc
cs
inc
repz
scas
push
fsubs
cmp
add
jno
mov
pushf
std
xchg
imul
push
ret
hlt
dec
mov
sub
stos
xor
or
mov
adc
push
cmp
add
pop
in
add
hlt
xorl
rol
imul
cmpsb
sub
add
adc
movsb
or
xlat
push
test
and
mov
jns
in
aam
aad
sbb
mov
xchg
or
dec
jns
popa
sbb
xor
stos
loop
xacquire
pusha
mov
aaa
outsb
inc
sub
or
or
iret
xor
mov
xchg
lds
mov
pusha
jge
and
lock
push
shll
hlt
mov
pop
push
daa
popa
insl
pop
mov
mov
xor
movsl
add
cld
jae
jno
scas
and
cmp
fimull
add
js
popf
lahf
loopne
push
mov
inc
lret
inc
xchg
pop
cwtl
shlb
mov
jp
mov
or
or
loope
cmpsl
icebp
jb
js
cmp
lcall
movsl
mov
loopne
pop
pop
mov
insl
xchg
stos
jge
mov
shrb
popf
mov
push
dec
outsb
mov
push
mov
pusha
cld
jo
mov
out
lahf
mov
inc
in
jle
push
inc
pushf
or
cmp
xchg
jecxz
xlat
pop
shl
imul
movsb
addr16
jb
add
ret
push
leave
xchg
xor
stos
les
pushf
cld
stos
aam
iret
pop
jno
clc
jb
xor
pop
test
adc
scas
push
les
push
fidivl
std
pushf
mov
imul
fs
sbb
aaa
lock
cmpsl
sub
mov
jae
psraw
lcall
imul
xchg
mov
fsubs
push
adc
stos
lods
stc
push
sub
fimuls
jne
hlt
mov
ret
ret
add
ss
test
cmp
dec
dec
std
sbb
push
xchg
xor
xchg
xor
cmp
or
call
leave
add
out
sbb
mov
mov
lahf
mov
push
inc
push
int3
sbb
xor
adc
dec
sahf
ret
das
mov
insl
daa
les
stc
dec
pusha
add
mov
out
ja
mov
sub
imul
jmp
jg
push
mov
xor
xor
aad
mov
pop
aad
fcomps
in
int3
fwait
jle
xchg
jae
vphaddwd
mov
popa
dec
dec
push
xchg
mov
ja
test
sti
je
leave
xor
sub
pop
mov
ja
dec
lret
mov
cmp
mov
sbb
adc
inc
dec
mov
es
inc
and
jne
fdivrl
out
testb
repz
lret
loopne
movsb
shll
sahf
jno
mov
pop
icebp
sub
repz
adc
pop
lahf
xor
stc
adc
repz
pop
ss
imul
pop
lods
pusha
jnp
fcomp
les
jae
cmp
cmp
cltd
inc
shl
loopne
mov
jecxz
popa
dec
icebp
dec
stos
mov
out
jmp
shll
xor
cmp
clc
insl
xor
test
pop
mov
sbb
or
call
popf
adc
das
dec
enter
int
xchg
mov
out
nop
add
inc
sub
cli
rorl
pushw
andb
sub
leave
pop
stos
jmp
or
push
sub
add
dec
cs
lret
push
int3
pop
sbb
jecxz
dec
jl
arpl
insb
pop
push
pop
sbb
lahf
pusha
mov
cmp
jns
fsubrs
in
dec
jmp
lods
mov
aad
mov
sbb
mov
mov
data16
or
add
stos
out
ja
and
inc
cwtl
mov
js
or
fildl
divl
dec
fstpl
jbe
pop
mov
stos
stos
aad
aas
xor
das
sbb
test
sbb
stos
cmp
hlt
int3
cmp
test
test
pop
jo
int3
mov
pop
or
js
fisubl
pop
dec
rclb
inc
cltd
in
sbb
jecxz
or
inc
inc
mov
shrb
push
mov
xchg
loopne
push
out
mov
in
push
or
jns
push
in
inc
mov
pop
jg
pop
mov
negb
aad
les
rclb
adc
fidivs
sbb
leave
insl
jmp
pop
testl
xchg
adc
push
push
xor
and
and
and
mov
imul
lret
push
dec
sbb
adc
mov
aaa
mov
scas
arpl
fs
sub
sti
cmpsl
cli
mov
xchg
fisubrl
in
rcr
xchg
push
cmp
jae
cmc
xor
dec
and
roll
jo
sbb
dec
jne
fldl
xchg
push
jle
mov
hlt
cwtl
or
dec
rcr
mov
inc
inc
xor
das
out
ja
jge
mov
popf
inc
test
pop
dec
xchg
and
addr16
cmp
jae
sub
ljmp
mov
push
pop
lahf
enter
fildll
pop
pop
sbb
mov
inc
outsl
sbbb
xchg
push
inc
stos
repnz
pusha
push
mov
ja
outsb
in
in
pop
jg
dec
add
cmc
add
jbe
cmp
std
jle
fwait
xor
es
shl
mov
mov
int3
or
mov
sbb
add
or
enter
stc
fsubrs
repnz
pop
push
sti
xchg
lock
inc
icebp
popa
mov
lods
pop
mov
xor
out
inc
pop
pushf
faddl
mov
mov
movsl
cmpsb
rcl
loop
sbb
dec
and
mov
repz
adc
dec
into
loop
sbb
scas
jne
fists
mov
and
cmp
mov
insb
or
fidivrs
adc
setp
mov
lea
loop
jmp
adc
xor
mov
fldenv
sub
and
fwait
and
mov
movsl
dec
out
jne
pop
mov
push
mov
pop
mov
and
out
sub
out
fimuls
adc
int
jmp
mov
test
out
insb
jp
inc
ficomps
fdivrl
sub
aam
sar
dec
jp
or
stos
fimuls
adc
cmp
inc
not
fstps
jl
adc
inc
fisttpl
and
ret
in
mov
add
test
cmp
xlat
sahf
call
sbb
addr16
andb
add
loope
fsubs
fs
add
popa
shrb
lods
daa
dec
sub
jns
test
outsb
mov
cmpsb
lods
je
test
xor
pop
rcrl
inc
aam
in
aam
nop
adc
es
dec
jns
xor
xor
lahf
push
push
arpl
add
stos
jns
out
lock
test
pop
addb
xchg
cmpsb
xlat
mov
jmp
inc
mov
mov
pop
xchg
mov
pop
in
pop
mov
push
int3
loope
pop
pop
or
insb
out
idivb
add
inc
or
ret
fwait
and
test
mov
repnz
arpl
inc
cmc
iret
adc
jle
or
lret
inc
push
mov
cltd
push
push
fisubrs
xchg
fwait
and
das
je
jmp
movsb
push
sbb
mov
xchg
cmpsb
xchg
adc
inc
rorl
popf
mov
rcrb
subb
sub
xor
rcrb
dec
pop
outsl
std
data16
out
in
mov
and
cs
ret
mov
push
mov
push
test
outsl
out
mov
lods
ficompl
aad
test
cmp
sbb
fdivrl
cli
insl
dec
das
add
pop
imul
mov
mov
loopne
int
sub
mov
and
xchg
sub
out
inc
sbb
cmp
mov
pop
dec
mov
and
xchg
add
cmp
fnstsw
mov
cmp
int3
outsl
mov
lods
xchg
scas
and
ja
and
movsl
int3
dec
in
mov
inc
nop
jbe
xchg
mov
sbb
dec
push
dec
iret
push
dec
mov
sahf
jns
insl
dec
xor
mov
pop
xlat
subb
and
jg
jb
mov
sub
das
sbb
fwait
push
fcoml
out
xor
aam
sbb
sub
icebp
js
push
pop
xchg
push
aad
push
dec
push
cmpsb
ficomps
popf
decl
and
sub
cmp
and
adc
jae
cld
mov
popf
in
cld
push
sbb
lret
dec
das
mov
xchg
mov
cltd
sub
popa
dec
jo
testl
dec
mov
inc
jmp
push
mov
loope
add
inc
push
sbb
std
push
mov
loop
xchg
pop
cmc
cmpsl
xlat
dec
pusha
cli
inc
push
in
shlb
lock
icebp
subl
out
rorl
mov
test
add
sbb
sbb
enter
stos
lods
add
adc
add
sbb
dec
pop
enter
pop
sub
dec
mov
or
pop
shll
movsl
mov
movsl
aas
push
je
pop
jno
xchg
sbbl
push
in
sub
repnz
dec
mov
sbb
inc
fisttpll
sbb
vmovlps
xor
mov
out
push
es
sub
jge
jmp
in
aaa
outsl
xchg
push
std
fs
adc
and
in
or
jnp
test
pop
mov
inc
loope
fcoml
les
xchg
or
aad
popf
add
arpl
sbb
stos
dec
cmp
sub
mov
adc
jno
enter
cwtl
ss
loope
dec
or
push
scas
mov
fwait
xor
pop
inc
bound
fs
insl
push
mov
lods
ror
push
xchg
lds
rorl
mov
cmpsl
sub
loop
or
roll
xchg
ret
paddsb
sub
icebp
popf
xchg
into
add
rol
hlt
inc
lock
daa
scas
call
stos
push
cmpsb
sbb
mov
pop
jg
mov
call
out
sub
or
cli
out
std
in
ficomps
sub
adc
jp
pop
rorb
or
mov
mov
mov
js
sarb
jg
ds
addr16
mov
sbb
xorb
das
push
xchg
mov
cli
mov
and
mov
into
push
mov
mov
mov
mov
push
adcb
or
xor
cs
sbb
mov
jns
das
pop
insl
sub
outsl
lret
pop
lcall
jne
scas
int3
push
adc
cmpsb
jge
pop
xorb
xor
pop
cmp
mov
lods
cwtl
push
jne
ss
cmp
cmp
dec
fwait
inc
lods
dec
mov
out
imul
mov
push
dec
adc
scas
movsl
movsb
outsl
sti
pushf
aas
mov
sbb
sbb
sarb
xchg
in
xlat
test
cli
and
rcrb
sbb
mov
aam
mov
jmp
push
test
stos
push
or
dec
inc
cmp
mov
pop
and
add
jnp
adc
lods
clc
stos
leave
push
and
jb
sti
std
dec
xchg
xor
ja
imul
test
cld
add
mov
or
out
daa
jnp
or
jno
movsb
push
popf
mov
jg
sahf
jns
jmp
repz
dec
insb
jle
das
clc
push
adcl
adc
scas
pop
insb
leave
and
rcrb
leave
mov
enter
scas
add
ds
jne
add
hlt
xchg
in
push
mov
lock
inc
adc
rclb
mov
lcall
into
cmpsl
dec
cmp
inc
inc
incl
pop
scas
jae
mov
mov
stos
jp
inc
outsb
sarb
test
xorl
addr16
adc
inc
test
andb
inc
ljmp
xchg
gs
sbb
or
sbb
pop
pop
mov
out
push
sbb
fstl
iret
out
stos
cwtl
adc
sbb
add
and
mov
loopne
push
fcos
xchg
mov
movsl
push
adc
adc
js
xor
jne
sbb
push
push
xchg
cmpsb
aad
xchg
shlb
inc
jmp
popf
push
or
and
aad
fcom
ret
shlb
mov
add
xchg
mov
ret
mulb
xor
mov
dec
dec
insb
adc
out
push
iret
add
dec
xorb
push
mov
movsb
mov
pop
mov
xor
jle
mov
add
fidivl
inc
adc
push
xchg
and
sub
movsb
insb
jb
fs
aad
jg
shl
incb
jmp
aam
xor
insl
inc
cmpb
js
call
adcl
popf
es
mov
pop
or
mov
sbb
rorl
imul
pop
aaa
fnstenv
sbb
or
ljmp
inc
ds
jl
mov
sarb
or
call
cltd
dec
ss
cmpsl
cmp
lret
or
sahf
mov
mov
enter
jno
adc
dec
and
loope
fldt
cld
pop
cmpsl
vpcomd
cwtl
jl
push
je
lahf
std
jb
fmull
push
xor
adc
test
sbb
je
push
cs
daa
fwait
cmpl
pop
jle
push
adc
push
or
cmp
popa
out
daa
daa
sub
push
jmp
sub
jg
sbb
call
movsb
notb
push
sbb
sbb
outsb
movb
and
and
jne
call
adc
pop
ret
aad
pop
adc
mov
adc
ss
xchg
jno
bound
fs
test
xorb
in
fisttpll
mov
call
pop
sub
sbb
xchg
roll
movsl
or
cmpsl
mov
mov
mov
jns
arpl
add
inc
insl
inc
adcl
outsl
testb
in
lcall
xor
adc
scas
test
cwtl
push
mov
adc
add
mov
jecxz
test
cwtl
xchg
or
xor
roll
cmc
mov
scas
out
ss
bnd
mov
cmp
test
inc
mov
cld
mov
insl
fldenv
call
and
mov
jbe
mov
mov
pusha
fs
mov
mov
aam
mov
test
pop
imul
pop
ja
add
xor
lock
mov
dec
leave
sub
cmp
lahf
pop
movsl
xlat
push
ror
int3
xchg
pop
pop
jmp
pop
jno
shrb
aas
sub
mov
or
dec
mov
cmp
mov
mov
js
shll
shrb
fldenv
push
mov
lock
ja
out
dec
xchg
or
fsubrl
fstpt
mov
pop
popl
jecxz
into
push
push
in
cmp
inc
cmp
dec
jbe
arpl
js
mov
push
divb
jle
dec
pop
mov
out
sub
daa
hlt
mov
mov
jb
shlb
stos
hlt
push
jl
jno
xchg
incl
jp
test
fisubrl
cmpsl
add
pushf
add
stos
aaa
jl
nop
loope
pop
xchg
inc
jne
and
mov
lcall
sbb
bound
xlat
pop
sbb
mov
iret
loop
icebp
jecxz
sub
nop
mov
mov
fsubrs
or
cmpb
xor
mov
outsl
mov
cmpsl
pop
mov
jae
lret
jns
roll
inc
dec
das
arpl
pop
push
aas
cmpsb
loopne
mov
or
mov
aas
out
sbb
nop
push
xbegin
mov
adc
inc
cltd
jle
daa
test
test
loop
xchg
xchg
xchg
jb
push
and
dec
or
and
jo
movsb
dec
cmp
jge
mov
jl
jb
sbb
ljmp
sti
adc
mov
xchg
fwait
sahf
or
or
or
lock
pop
cmp
xchg
pop
jae
fisttps
cld
xchg
leave
into
arpl
clc
rolb
dec
aaa
xchg
inc
int
push
and
sub
pop
dec
jo
dec
cmp
inc
hlt
or
fsubr
push
lret
out
jge
incb
repz
cmc
nop
mov
sub
dec
cmpl
shrb
cmp
push
lods
xor
inc
inc
add
dec
aaa
pop
arpl
sbb
cmp
clc
jnp
cmc
data16
cmp
sub
or
pushw
in
lret
inc
and
imul
jmp
test
pop
xchg
and
shl
sub
test
xchg
das
dec
hlt
pop
or
xchg
mov
xchg
mov
insb
xchg
adc
inc
mov
les
inc
adc
in
push
bound
cwtl
dec
sub
pop
std
adc
pushf
push
int
clc
sbb
iret
call
push
mov
test
lods
clc
pop
fwait
repz
pop
add
mov
adc
and
jb
cltd
sub
into
jbe
dec
in
xchg
enter
loopne
cmc
loop
sub
out
mov
test
push
mov
push
popf
imul
ljmp
adc
xchg
mov
mov
mov
push
outsb
pop
int3
cmp
add
mov
dec
test
and
in
js
push
enter
lret
push
add
xchg
shl
movsb
int
imul
adc
or
fnstenv
ds
pop
stos
mov
pop
jmp
loopne
aas
jecxz
sahf
jmp
jge
inc
loop
sarb
push
daa
cmp
pop
mov
mov
mov
add
pop
sbb
adc
lcall
mov
mov
xlat
mov
cmp
int
cmpsl
loopne
sbb
inc
push
data16
dec
and
jp
sbb
fistps
cmpsl
jl,pt
sbb
jg
int3
sti
iret
stc
sbb
pusha
add
adc
jle
jmp
mov
cmp
or
mov
jae
shr
cmc
sbb
stc
sbb
jl
outsb
fisubrl
cli
push
lea
ret
sarl
lock
mov
dec
and
xchg
sbb
lahf
mov
insb
jge
mov
outsl
scas
stos
adc
mov
jbe
arpl
xor
jmp
add
add
adcb
and
xchg
bound
in
popa
mov
mov
mov
movb
dec
stos
adc
cmpsl
inc
call
mov
aam
scas
jle
loop
out
popf
movsb
jp
rolb
pushf
jbe
clc
inc
xor
jbe
push
push
lret
fs
pop
in
leave
movsl
dec
in
xchg
xor
push
pop
jne
insb
hlt
pop
push
jae
xlat
fstps
cltd
aad
push
lds
cs
out
jle
shlb
jb
push
dec
test
and
lret
push
clc
dec
xor
xlat
xorl
int3
fldenv
xchg
addr16
mov
lahf
les
sti
iret
aaa
adc
sbb
jmp
loop
test
xchg
in
out
repnz
mov
cmp
dec
lods
add
adc
pop
mov
stc
gs
in
xchg
aaa
fs
test
iret
arpl
in
dec
outsl
inc
sarl
cmp
stc
int3
mov
ret
xor
mov
out
xchg
adc
sahf
aaa
or
and
insl
daa
dec
les
mov
out
mov
lcall
bound
mov
sahf
dec
int
xor
dec
sahf
sar
or
mov
push
inc
dec
sbb
adc
mov
or
stc
xor
jnp
pop
pop
ret
fsts
cmp
pop
sub
mov
and
lea
push
push
into
out
adc
pop
lret
sbb
clc
adc
fstl
ds
mov
xor
jo
in
and
sbb
sbb
lods
insb
pop
mov
add
and
out
rol
ficoms
outsb
pop
ss
cmp
flds
cmpsl
push
or
ret
arpl
xchg
loop
cmpsb
insl
out
movsb
cwtl
sbb
inc
repz
aaa
in
js
mov
rcrb
xor
test
push
add
ljmp
mov
loope
popa
mov
dec
xchg
adc
dec
push
cmc
lret
jmp
or
arpl
push
mov
call
add
xchg
ljmp
or
fdivr
daa
mov
outsl
test
ja
adc
xor
insl
out
xchg
sub
ret
adc
int3
enter
add
scas
push
inc
mov
add
inc
mov
jl
push
cmc
mov
inc
leave
inc
mov
mov
shl
cmp
mov
sahf
popa
cmp
cli
jnp
cmp
inc
mov
cltd
or
sub
inc
push
mov
xchg
xchg
xor
std
pop
loopne
pop
mov
gs
mov
pusha
and
sub
gs
in
pop
stc
push
jle
xchg
test
adc
insb
jge
mov
cs
lds
push
push
loope
dec
mov
add
addr16
dec
rcr
xor
les
pop
out
mov
xor
push
dec
sbb
lcall
mov
sub
dec
lret
aaa
ss
xor
push
dec
sbb
adc
sub
fwait
jnp
test
js
aam
push
je
in
fidivrs
rcrb
sbb
push
mov
mov
int3
and
mov
iret
inc
push
dec
sub
dec
aaa
mov
shlb
retw
cmp
add
mov
and
inc
lahf
push
lock
mov
fdivrl
jg
aad
ljmp
add
stos
mov
outsb
mov
push
jns
push
mov
icebp
mov
lahf
xchg
jae
andb
push
rolb
ret
test
fwait
xor
adc
adc
pop
mov
stos
je
push
xchg
cmpl
adc
jns
clc
lahf
adc
movsb
pop
das
push
xorb
cli
adc
ret
mov
mov
or
adc
in
pusha
mov
xchg
or
jl
sbb
insl
xor
out
movsb
jl
imul
inc
jg
push
dec
lea
adc
adc
push
xor
loopne
mov
repnz
mov
mov
fwait
js
iret
jb
mov
out
stos
and
fisubrs
xchg
cmp
lock
outsl
fwait
imul
call
je
test
jnp
dec
xchg
ret
sbb
mov
pop
inc
cmp
jecxz
push
sub
xchg
in
or
outsb
inc
je
add
dec
icebp
jbe
xchg
pop
pop
int
jmp
test
in
mov
dec
or
jg
cs
add
mov
sbb
jno
sub
aaa
enter
dec
cmp
addr16
ss
mov
mov
push
mov
ss
dec
xchg
mov
in
and
divb
xor
push
test
push
mov
cs
inc
adc
cmp
xor
sub
or
rclb
andl
dec
add
sub
incl
dec
inc
sub
daa
mov
dec
shl
es
cmp
lds
mov
fistpll
cmpsl
cwtl
push
repnz
leave
sub
pop
sub
adc
outsl
ss
sbbb
lods
insb
arpl
es
mov
cltd
test
sbb
dec
sbb
xchg
mov
jl
daa
jge
pop
push
outsl
or
outsl
mov
add
xor
mov
int3
enter
cwtl
dec
dec
outsb
lds
insl
cmpsb
arpl
sub
adc
aad
subb
mov
xchg
sub
jl
xor
int3
dec
fldl
mov
rcll
outsb
nop
add
bound
cs
xor
in
les
mov
bound
fwait
sub
test
in
and
ss
cld
dec
add
push
pop
testl
clc
shll
add
xor
ficoml
lret
popa
push
loopne
in
jno
scas
sbb
into
sti
cmc
cmp
movsl
jne
inc
fildll
imul
aaa
addr16
xorb
sub
jp
sahf
movsb
sub
lahf
sbb
jecxz
rcrl
insb
shlb
lock
sahf
imul
scas
test
jne
mov
push
add
enter
jmp
ss
andps
push
jle
movsl
arpl
call
fistl
cmp
sahf
nop
or
push
outsl
lahf
mov
sub
out
or
pop
lock
aas
shll
lahf
or
jecxz
out
sbb
mov
test
sbb
int3
mov
jns
mov
pop
negl
aas
shlb
popf
dec
pusha
rorb
xor
add
mov
roll
or
lahf
xchg
sti
or
or
xor
cmp
sarb
adc
xchg
push
in
push
movsl
mov
mov
sbb
cmpsl
movsl
test
cmp
jle
add
pop
nop
push
scas
push
into
outsl
push
adc
push
shl
andb
inc
adc
sbb
xchg
or
push
ss
add
ret
jae
push
repz
sbb
mov
mov
mov
stos
mov
test
add
jmp
push
hlt
loopne
div
out
sub
mov
pop
mov
xchg
cli
xchg
sbb
stos
pop
sahf
insb
adc
das
ret
xor
aam
fistpll
std
subb
lahf
pop
dec
dec
pop
mov
mov
xor
push
ljmp
fucomi
rolb
fmul
push
negl
mov
in
testb
sbb
mov
lret
push
pop
cmpb
cld
mov
lcall
pop
xor
cmc
sub
in
clc
addr16
into
mov
pop
sub
pop
out
shr
jmp
lock
clc
and
lcall
inc
lock
mov
call
imulb
push
jno
mov
xor
popf
mov
cmp
jmp
adc
add
loope
ja
popf
inc
lret
stc
call
mov
stos
daa
inc
data16
xchg
jecxz
mov
jno
mov
aaa
sahf
dec
ljmp
lods
andb
cmc
push
gs
cmp
pop
inc
cs
ds
cld
pop
inc
xchg
push
fistps
pop
sub
push
sub
pusha
adc
enter
pop
and
push
les
cwtl
mov
std
test
add
int
iret
dec
push
mov
and
jns
loop
pop
push
pop
xchg
xor
lea
push
repz
xlat
andb
mov
addr16
dec
xor
sbb
mov
push
shll
test
xchg
dec
or
mov
xchg
movsl
mov
dec
bound
xchg
cmc
mov
push
les
sbb
outsb
pop
cmc
jmp
push
adc
mov
ret
sub
sub
loop
xor
xor
filds
xor
dec
sub
hlt
pop
mov
insb
test
lcall
push
cmpsb
notb
outsl
or
popf
sbb
sub
mov
mov
xchg
fwait
mov
jecxz
loop
mov
dec
pop
push
push
pop
out
sub
sub
dec
std
mov
mov
mov
xchg
scas
out
adc
shrb
add
xchg
lods
cltd
in
popf
dec
hlt
cli
jmp
mov
sbb
popf
push
push
mov
mov
lods
pop
int
dec
add
and
jmp
call
lcall
ftst
adc
sub
scas
xchg
cli
or
mov
jge
mov
dec
pop
icebp
dec
ja
adc
add
cmp
call
subl
test
iret
lods
pusha
pop
or
js
and
mov
xor
out
fxch
push
push
mov
fsubr
pop
nop
jmp
add
mov
inc
or
in
loope
lahf
addl
add
cli
inc
jo
mov
sbb
enter
lds
js
inc
cmp
cmp
sub
fldenv
ret
jno
sub
nop
mov
std
jno
mov
push
mov
mov
mov
cmpsb
and
shll
sub
insb
xchg
push
and
sbb
out
jae
clc
push
loope
push
xchg
int
repz
pop
cli
inc
ror
das
in
sbb
add
add
fcoml
sbb
out
add
sbb
push
popf
shl
push
jp
ja
add
iret
inc
pushf
sbb
mov
push
stc
sub
repnz
mov
sbb
imul
dec
adc
pusha
inc
in
sub
lcall
jmp
push
cmpxchg
inc
sub
repnz
inc
int3
jns
jb
mov
movsl
ljmp
gs
jl
lret
xchg
hlt
cmp
out
mov
sarb
mov
pop
ret
loop
mov
sbb
lret
out
popf
rolb
test
jo
inc
rcrl
stc
inc
jne
scas
fimuls
js
cwtl
pop
jns
add
mov
stos
popf
jns
mov
jnp
in
adc
ret
cmp
xchg
in
or
das
jl
imulb
popa
test
lds
mov
fisttps
and
loope
mull
adcl
sub
jl
aam
mov
sbb
pop
fiaddl
les
adc
imull
lret
outsb
mov
mov
je
jg
mov
cmp
or
negb
xchg
push
dec
inc
xchg
jl
mov
shr
push
aas
xchg
mov
loop
mov
pop
dec
lods
mov
mov
int3
mov
bound
lock
and
negl
xchg
hlt
pop
add
pop
or
push
pushf
lock
pop
rcll
pop
orl
out
stc
and
add
push
sub
aas
sbb
sub
mov
arpl
bound
add
mov
sbb
sbb
xor
lock
fsubl
insl
test
xchg
fs
xlat
dec
push
pop
xchg
addr16
clc
aaa
out
jnp
mov
mov
lcall
push
push
pop
sub
call
scas
dec
rorl
push
push
mov
rclb
or
mov
sub
loope
sub
cltd
or
jns
std
add
sub
adc
test
js
xor
leave
mov
sti
fxch
sub
ret
mov
lret
xor
push
jno
pop
add
scas
call
push
repnz
mov
leave
mov
adc
mov
mov
inc
arpl
fs
shll
add
cld
cwtl
cmpsb
push
lret
fbstp
scas
push
data16
jbe
bound
jge
jno
mov
dec
decl
js
cwtl
xorb
das
pushf
int
lret
and
dec
cwtl
inc
jmp
inc
mov
xor
fsubrl
repnz
outsl
or
sahf
xchg
idivb
add
and
adc
repnz
mov
mov
repnz
push
inc
test
loop
jnp
enter
dec
mov
jno
pop
sub
cli
jo
movsb
out
jnp
dec
and
pop
mov
subl
loope
add
popa
add
or
stos
stos
int
jmp
movsb
cmp
lahf
jge
arpl
inc
add
jb
imul
push
shll
lds
jnp
ja
imul
add
and
and
mov
lcall
cmpsl
cli
into
outsl
inc
sbb
in
into
lods
jae,pt
mov
mov
iret
sbb
sahf
int3
mov
pusha
aaa
aas
outsb
sahf
mov
into
dec
icebp
lods
fcomps
inc
gs
mov
imul
shrl
cmp
and
ss
nop
inc
out
outsb
dec
mov
mov
test
push
out
jns
and
in
pop
leave
loope
cld
xchg
sbb
add
movb
lea
nop
imul
add
inc
imul
adc
movb
jb
lock
hlt
lret
mov
pop
pushf
stos
push
icebp
add
jle
cmp
or
xorl
mov
sub
call
mov
pop
cwtl
pop
pop
add
xchg
mov
loopne
dec
das
inc
add
xor
xchg
xchg
sbb
insl
pop
mov
cli
push
insb
pusha
push
pop
cwtl
cmp
adc
and
xor
dec
cmp
sub
mov
loop
mov
in
adc
repz
xchg
xchg
outsb
and
lods
int
lds
loopne
and
sti
add
jecxz
push
push
popf
cmp
rcr
push
pop
mov
jnp
and
add
mov
inc
out
andl
adc
stos
sub
ret
mov
cmc
sbb
cltd
dec
lods
jg
mov
test
int
aam
into
andl
cli
jne
pop
lcall
sub
push
mov
mov
pop
mov
jl
or
jnp
push
mov
es
add
xchg
cmp
mov
repnz
aam
push
adc
sub
dec
outsl
push
xchg
ss
mov
mov
jp
pusha
rcl
fstpt
add
psubsw
rsqrtps
pop
jecxz
sub
out
ljmp
lcall
mov
jb
xchg
or
cmp
mov
aam
divps
lea
cwtl
aaa
leave
mov
push
pop
push
and
pop
arpl
and
jle
pop
mov
lds
push
add
pop
jmp
cmpsb
js
fisttpl
xchg
pop
ljmp
cmp
lods
cmp
sbb
push
in
cmpsl
adc
subb
mov
pop
dec
sbb
push
pop
rcrl
into
sbb
xor
mov
mov
xchg
loop
jae
sub
sbb
or
lods
in
sub
adc
xchg
lods
loope
mov
fsubrl
aaa
cmp
sbb
dec
adc
cmp
das
jge
aaa
pushf
cmpsb
out
sub
mov
pop
xchg
inc
into
jecxz
cmc
imul
lock
ret
lock
push
inc
dec
xchg
lea
mov
scas
mov
imul
sbb
inc
das
add
and
xor
and
jo
stos
rorl
adc
mov
xchg
fidivl
push
mov
push
rorl
idivb
lahf
test
adc
and
pop
inc
loopne
in
adc
mov
movsl
dec
push
stc
sub
fsubrs
popa
stos
ficoms
jns
xchg
in
mov
push
xchg
stc
dec
loopne
cwtl
sbb
add
stos
and
cmp
arpl
xchg
mov
pop
mov
cmp
filds
mov
sub
or
sub
jmp
cmc
les
std
or
dec
subb
fildll
shl
pop
inc
sbb
mov
add
cmp
pop
push
outsl
je
push
insb
mov
push
dec
in
or
cmp
xor
mov
pop
jb
aas
test
cmp
pop
outsl
out
push
push
push
mov
jnp
fstps
xchg
lods
daa
ror
lods
jp
in
out
mov
or
mov
or
fdivr
push
loopne
in
cmp
jbe
cld
popa
push
and
xor
test
xchg
lahf
loopne
xor
xchg
mov
xchg
jae
sub
arpl
les
data16
adc
popf
mov
or
mov
bound
mov
ss
imul
jge
sub
imulb
or
lcall
xchg
pop
sub
push
cmc
dec
es
andb
jns
fwait
jp
inc
xor
jmp
ss
adc
insl
in
cmpl
iret
je
push
mov
scas
pop
mov
mov
insl
sub
jmp
dec
pop
sbb
int
lret
loope
xor
out
inc
add
in
add
xor
test
leave
in
wrmsr
sahf
or
jg
adc
jp
jne
rcrl
mov
je
in
push
bound
inc
push
test
lret
hlt
or
add
adc
out
sbb
cmc
jnp
sbb
push
test
addr16
mov
mov
shlb
gs
xchg
dec
mov
enter
pop
or
lret
cmp
xor
fildll
int3
xchg
hlt
arpl
jb
lea
and
es
mov
sub
into
lcall
test
into
out
loope
addl
ret
jb
cmc
pop
cmpsb
hlt
cmp
push
ret
leave
sbb
dec
ret
imul
inc
std
sub
fstps
or
lock
inc
das
inc
mov
push
insb
jo
add
in
jns
jmp
xchg
ret
adc
sub
fs
test
cwtl
ljmp
jg
jb
xor
dec
fcomps
je
clc
adc
sbb
mov
sub
popf
and
adc
fs
int3
and
push
adc
dec
adc
push
cltd
xchg
out
lods
pop
and
dec
stos
out
fsubrl
push
cmp
and
jge
lret
mov
or
add
mov
imul
mov
cmp
mov
and
dec
cmp
sub
sub
in
cmp
rclb
push
mov
lock
and
je
je
daa
add
or
jae
mov
push
stc
icebp
clc
decl
jne
cwtl
push
mov
mov
jge
dec
inc
test
sub
jg
in
pop
dec
dec
sbb
scas
idivb
lcall
adc
or
shrb
mov
inc
fisttpl
inc
idivb
out
add
sub
push
out
hlt
sahf
in
or
filds
jnp
aas
test
ljmp
xor
leave
sub
sub
xor
push
sbb
sub
shll
out
test
and
dec
mov
cmpsl
add
pop
pop
inc
mov
aaa
aas
inc
fnstcw
mov
in
push
cmpsb
xor
lahf
lock
sbb
jp
inc
std
mov
sahf
cmp
arpl
lods
icebp
dec
cmp
sbbb
or
enter
sub
cmpsl
mov
inc
jne
or
add
mov
sub
movsb
sub
mov
movd
mov
sbb
lcall
rclb
sbb
inc
mov
stos
adc
adc
popf
sub
test
jno
adc
jno
outsb
cmp
cmp
or
add
sbb
mov
dec
leave
test
mov
outsl
xlat
mov
jo
pop
pop
movsl
mov
or
mov
je,pn
testl
lods
call
lcall
cmp
push
sbb
jne
xchg
lods
dec
jbe
inc
mov
in
mov
mov
pushf
and
or
es
xor
std
popf
stc
push
lret
and
shrl
pop
in
rcrb
orl
fildll
js
mov
rcr
mov
push
lret
pop
or
cli
je
ljmp
ja
scas
mov
jno
push
popa
and
out
adc
es
sub
inc
in
ja
insl
in
out
pop
scas
stos
movsb
jp
dec
les
cli
xchg
xchg
bound
in
aam
cmpsl
int3
loope
pop
cmp
test
stos
je
add
lahf
stc
in
dec
and
pop
cmp
mov
push
pop
push
pop
adc
cmc
jno
sbb
out
aam
out
jno
mov
dec
and
aaa
int
daa
rclb
push
cmp
lods
stos
scas
enter
dec
mov
adcb
cmpsl
xor
jns
mov
adc
psubusw
mov
pop
popa
aam
scas
jl
xor
or
rcl
aad
in
lea
or
imul
insl
jbe
scas
imul
pop
fstpl
ret
sub
andl
mov
ror
sahf
andl
pop
xlat
outsb
push
pop
outsb
les
sarb
xchg
push
push
jns
xor
mov
jmp
arpl
sub
cmpsl
enter
mov
mov
add
stc
ret
ljmp
xlat
mov
popf
cmp
ljmp
push
ss
and
loop
daa
shll
cmp
jns
dec
jmp
int
idivb
loope
loop
and
jnp
and
fisubrs
inc
mov
imul
sbb
imul
sub
ret
lods
fucom
stos
add
lods
mov
movsb
xor
xchg
idiv
lods
std
sub
movsb
add
mov
cmp
mov
dec
cmpsb
mov
dec
adc
enter
pop
outsl
inc
pop
xor
mov
cwtl
cmp
xchg
jnp
mov
or
xor
add
arpl
stc
arpl
std
and
mov
ds
sub
push
push
mov
imulb
cmpl
clc
pop
mov
ficoms
push
insl
enter
push
loop
mov
adc
addl
mov
cmp
icebp
fldenv
xor
lret
inc
mov
insl
sub
subl
mov
sahf
mov
stos
mov
arpl
adc
test
mov
sahf
repnz
xor
or
aam
mov
imulb
pop
stos
and
adc
out
push
ds
sub
lahf
dec
or
out
out
cmp
mov
nop
test
add
cli
pop
mov
dec
inc
ret
push
mov
cld
fdiv
jge
cltd
imul
or
xor
inc
adc
popa
ss
xchg
lods
sbb
push
fadd
mov
mov
cmp
cwtl
loop
in
or
sbb
add
mov
sub
mov
decl
or
pop
sub
repnz
add
dec
inc
lret
negb
mov
sbb
mov
das
push
fiaddl
adc
leave
loop
pushf
xchg
pop
adc
lcall
std
mov
push
in
popf
test
repz
repnz
or
out
jecxz
cmpsb
add
fimull
jbe
pop
repz
lret
outsb
insb
inc
into
dec
xlat
cli
rcrb
sbb
repnz
shrb
mov
mov
subb
add
push
cltd
gs
movsb
jecxz
andl
test
jns
ljmp
insb
clc
sbb
and
outsl
push
add
fwait
ljmp
add
ret
or
aas
mov
mov
ret
popa
push
mov
jb
add
ds
cwtl
mov
adc
stos
or
into
inc
push
mov
dec
and
sar
loope
mov
scas
jmp
sub
jnp
jmp
out
lods
insb
std
pusha
and
inc
add
sub
mov
cmpsl
xor
push
and
loop
jmp
fisubrs
shrb
clc
jnp
lds
xlat
sbb
lcall
imul
dec
loop
test
jb
loop
push
sub
dec
fcompp
enter
fnstcw
adc
pusha
shlb
push
rclb
cli
sub
pop
repz
sbb
xor
mov
ss
sub
rorb
dec
hlt
hlt
call
es
fnstcw
add
jmp
dec
shlb
mov
in
pop
sbb
push
dec
aaa
push
push
lcall
jae
xchg
lea
lea
adc
fdivrs
lock
mov
sbbl
mov
das
ds
ja
pop
add
into
repz
xlat
pop
cmp
lods
xchg
mov
xor
or
popf
test
jae
sbb
mov
sbb
mov
mov
mov
rcll
fildl
inc
mov
mov
push
cmp
pop
ss
xlat
outsl
scas
sub
rcrl
cmp
xchg
sub
cmc
push
xor
push
xor
loop
nop
sub
or
test
mov
imul
shl
or
sbb
lock
rcrb
inc
jne
adc
int
imul
mulb
data16
mov
or
daa
jne
enter
pop
inc
mov
push
mov
xor
and
push
in
mov
pop
jp
xor
xchg
xchg
scas
cli
cwtl
mov
lds
jl
mov
rcrl
sub
sbb
in
in
mov
sbb
das
xor
rcr
dec
jl
repnz
shlb
test
adc
inc
mov
dec
sub
xchg
popa
and
sbb
jns
repnz
icebp
fistpll
jne
es
adc
sbb
xor
and
leave
ss
scas
es
xor
jo
jnp
adc
fs
aas
sub
add
cmp
push
sahf
dec
icebp
sub
add
pop
mov
inc
inc
add
sar
jns
and
jp
or
inc
int
push
sub
ds
addr16
and
loop
cmp
mov
ss
or
int3
xor
pop
dec
mov
mov
add
pop
ds
pop
cmpsb
mov
jno
sbb
popf
jae
std
sbb
and
sub
pop
daa
in
xor
scas
clc
fs
cmpsb
add
iret
adc
dec
ret
cmp
xchg
inc
movb
fidivs
dec
push
jge
xor
cltd
xor
adc
repz
int
out
cwtl
or
in
in
loopne
adc
adcl
and
jns
mov
inc
jns
xchg
jge
pop
xor
add
xor
push
fists
pushf
and
add
fildll
popl
cmp
movsl
sbb
shll
add
pop
testb
mov
xor
cmp
outsb
lds
add
mov
sbb
and
push
cmp
cwtl
xor
xchg
lods
sub
sahf
mov
movsl
mov
int
jl
push
add
test
jns
jb
sbb
pop
aas
out
mov
pusha
repz
push
into
loopne
in
test
add
sbb
out
push
jmp
mov
pop
push
push
notl
cmp
and
out
sbb
pop
jo
ds
inc
add
rorl
subl
mov
xchg
xchg
stc
or
inc
lret
and
dec
scas
adc
xor
mov
mov
pop
add
adc
inc
fldt
cmpsl
das
cwtl
sub
push
out
repnz
cmp
add
add
mov
adc
lods
mov
push
aam
lret
mov
sub
add
ja
dec
push
adc
mov
add
repnz
shl
in
shll
sbb
or
ret
mov
repnz
movsb
sub
inc
idivl
add
repnz
mov
inc
push
nop
jbe
lods
pop
pop
jb
xchg
xchg
sbb
fstp
cld
ja
movsl
fs
jns
imul
icebp
push
je
dec
pop
push
or
ficoml
jecxz
das
js
cmp
sbb
push
inc
jne
inc
insl
mov
cli
pop
sbb
int3
test
sub
lds
icebp
push
inc
xchg
dec
mov
adc
cmp
sub
dec
mov
iret
ffreep
adc
hlt
xchg
cmp
int
or
pop
add
in
xor
jmp
push
fwait
clc
sub
sbb
fwait
rorb
dec
fdivr
out
test
movsb
loope
and
add
cmc
int
mov
push
jl
adc
mov
lds
ljmp
mov
daa
lea
push
or
rorl
hlt
je
fs
lcall
les
push
ffreep
das
insb
shr
leave
push
out
and
shrb
repnz
adc
xor
jns
into
jo
sub
fadd
stos
cmp
mov
loopne
xor
inc
sbb
roll
mov
pop
out
adc
mov
lret
sub
loopne
outsb
add
push
addr16
jbe
test
mov
lret
cltd
and
mov
aam
arpl
std
mov
cli
cmp
sub
pop
adc
aas
pop
jl
jle
xchg
push
inc
testl
shrb
sub
cmp
cmp
daa
test
fwait
stc
push
push
invd
mov
mov
shrb
push
pop
in
iret
test
mov
inc
jbe
insl
int
les
flds
lock
mov
add
push
push
sahf
xchg
stos
sti
xor
loopne
test
dec
ljmp
movb
adc
and
lcall
fwait
bound
dec
xchg
or
addr16
fs
imul
ljmp
lds
mov
scas
int
test
inc
test
inc
divl
push
popf
es
fnstenv
push
lcall
adc
jmp
pop
add
pop
addr16
jge
inc
xchg
inc
dec
mov
out
adc
dec
in
shrb
mov
mov
pop
data16
leave
mov
jb
inc
lret
mov
cmpsb
lcall
cmpsb
pop
cmp
fcmovne
lret
add
mov
faddl
icebp
movsl
addr16
xchg
jae
lods
icebp
rcll
out
stos
mov
mov
xor
cwtl
cmpsb
js
nop
sbb
xor
andl
enter
shll
test
hlt
mov
add
and
and
ds
jecxz
cmp
rcrb
cmp
pop
mov
sti
inc
and
clc
xchg
int3
fs
cmp
adc
and
sarb
popf
daa
xchg
dec
test
push
mov
lret
pop
jecxz
jno
fstpl
xchg
outsb
cmp
add
dec
pop
jae
adc
in
shr
push
je
xchg
fwait
scas
ffreep
xor
mov
and
sbb
push
in
dec
mov
xor
mov
xor
inc
xor
push
inc
out
lcall
pushf
jmp
loopne
clc
xchg
fcom
ret
jle
ret
sub
movsl
mov
insl
loope
notl
iret
xor
mov
dec
pop
push
mov
xchg
jge
icebp
jbe
inc
cmp
cmc
mov
xor
push
daa
cmp
cld
fs
gs
aas
push
sbb
lret
mov
lea
out
inc
mov
gs
dec
jle
mov
or
and
pop
ds
lret
xchg
test
sub
loope
pop
xor
mov
fwait
dec
movsb
jb
jp
jns
clc
jns
xchg
sbb
or
cld
rcrb
xor
adc
pop
sub
inc
and
imul
mov
fldcw
in
fdivrl
push
adc
loop
pusha
das
pop
cmp
negb
push
les
rorl
mov
sub
outsl
xor
pop
lea
inc
gs
push
sub
push
cli
mov
rcl
jb
xlat
or
adc
jecxz
mov
push
add
inc
jg
sub
lds
jl
out
mov
jp
lds
fwait
fwait
shr
or
lret
imul
aam
and
nop
dec
popa
push
pop
mov
jp
mov
out
dec
ds
jl
int3
call
scas
pop
xor
xchg
push
xchg
pusha
inc
lods
pushf
nop
or
test
xor
lea
cli
cli
addr16
jb
pop
pop
xchg
jecxz
pop
nop
adc
rep
cli
lea
sbb
lret
and
sub
ljmp
xchg
enter
mov
test
push
bound
pop
in
and
orl
lahf
and
das
pushf
push
repnz
imul
dec
adc
popf
xchg
cmp
jbe
mov
adc
aad
inc
sub
movsl
loop
mov
rolb
lret
out
add
jle
cmp
jns
aam
cmp
popf
loopne
mov
push
fisttpll
mov
dec
jecxz
cmp
sub
stc
jno
sub
push
or
pushf
lea
mov
fisubrs
or
hlt
fisubl
or
mov
aam
mov
scas
pop
lret
popf
pop
addr16
scas
sub
nop
pop
add
outsb
mov
lahf
lods
xor
adc
sbb
adc
push
imul
dec
mov
std
int
mov
repz
ret
ret
repnz
lods
pop
jmp
pop
cmpsb
sahf
iret
push
icebp
sub
lock
imul
daa
jge
imul
add
xchg
insb
cmp
push
push
xchg
es
and
std
notb
ret
mov
dec
or
pusha
mov
shr
push
mov
pop
rcrl
insl
clc
xor
mov
push
testb
fadd
pop
ficompl
cltd
nop
fwait
call
nop
jl
pcmpeqb
lcall
test
mov
cli
xchg
pop
push
outsl
jne
lock
or
mov
mov
and
push
mov
mov
sbb
sbb
push
addr16
push
pop
and
popa
lds
cmc
roll
insl
sbb
imul
fcomi
push
shlb
add
inc
or
or
or
xchg
xchg
sbb
cld
mov
mov
stos
push
jp
and
enter
call
push
stos
dec
pop
hlt
pop
pop
cmp
daa
ret
lret
or
stc
adc
sbb
popa
movsb
pop
ss
xchg
push
xor
and
lret
daa
lods
xchg
stos
cmp
aas
insl
ds
test
int
out
inc
mov
in
mov
and
aad
es
xor
adc
nop
daa
jle
ljmp
stc
rcrb
int3
xor
sbb
lods
out
add
mov
aam
dec
inc
add
push
and
cmp
sub
add
xor
fdivrs
inc
addr16
fmul
xchg
movsb
das
xor
add
in
in
xorl
mull
ret
mov
data16
push
push
pop
sub
xor
mov
xor
dec
xchg
adc
out
mov
cmc
loop
lcall
fs
pop
jl
shll
and
xchg
jb
mov
stos
cmp
mov
or
sbb
pop
fcmove
subb
pop
push
orb
xchg
arpl
inc
fs
call
insl
movsb
pop
jbe
jno
enter
in
or
jl
adc
add
mov
add
iret
and
mov
sbb
pop
xor
sahf
out
loop
divl
mov
sub
push
push
adc
adc
mov
add
mov
sbb
fcomi
jmp
mov
jns
lock
aam
rol
mov
andps
pop
popa
inc
arpl
jmp
adc
dec
mov
pop
ret
xchg
adc
and
cmp
fnstenv
push
test
mov
lea
ljmp
aam
sub
sbbb
and
int
shlb
adc
loope
sub
cwtl
stos
mov
inc
rorb
bound
arpl
push
mov
push
imul
inc
and
pop
push
arpl
pop
and
int3
fbld
pop
pop
dec
or
xchg
test
mov
in
sbb
dec
add
mov
inc
mov
xchg
repnz
or
mov
stos
xor
fwait
test
and
push
and
cmc
fistpl
imul
lock
mov
and
jl
pop
nop
inc
xchg
rcrb
xchg
cwtl
fistl
adc
lods
int
add
sub
movsl
mov
xchg
sub
mov
mov
das
mov
cmp
jo
icebp
sahf
adc
mov
je
repz
fsubrl
xchg
push
jb
jne
dec
sarb
inc
imul
aas
fwait
pushf
mov
or
neg
push
pop
add
adc
xor
sbb
mov
scas
xor
add
lret
xchg
rclb
add
lock
pop
popa
int3
push
inc
shrb
int
inc
roll
dec
adc
inc
jecxz
and
mov
mov
es
and
dec
aam
xor
xor
jb
push
std
cwtl
int
sub
push
jmp
mov
sbb
popa
jge
fiaddl
test
lahf
mov
and
sbb
inc
mov
mov
jmp
push
pop
push
inc
add
push
jno
sti
fisttpll
gs
daa
push
lods
jne
test
cmp
xchg
add
jb
fs
or
jecxz
inc
pop
mov
cmp
inc
fstpt
jbe
and
cmp
jb
inc
jmp
jno
or
out
pop
daa
inc
jb
movsl
mov
addr16
lods
inc
inc
mov
repnz
push
cmp
js
jns
sub
cli
jo
and
dec
fsubl
xchg
xorb
jno
cmc
adc
cmp
cmovg
int3
sub
lret
fldl
push
cltd
aas
lret
dec
aad
jle
ret
push
pop
inc
adc
dec
into
mov
push
cli
jle
int3
jbe
jg
dec
cmp
jns
pop
into
stc
fbstp
lea
and
scas
adc
adc
sarl
call
data16
mov
arpl
and
iret
adc
test
fstl
mov
adc
insb
sub
jmp
mov
cmpsl
pop
ret
icebp
cmc
push
in
cmp
add
enter
and
xchg
xchg
mov
test
or
adc
jnp
aad
pop
jg
pop
sub
xor
mov
iret
lock
stos
mov
imul
add
pop
clc
ss
sub
mov
jne
push
inc
movsl
xor
add
push
or
stos
stc
mov
inc
mov
subb
dec
and
rcrl
mov
ja
mov
and
bound
jbe
cmc
hlt
adc
inc
add
xchg
add
cmp
cmp
jecxz
dec
jmp
push
rorl
insb
ret
scas
jmp
jg
xor
cmp
lret
rolb
xchg
cli
mov
insl
jp
inc
add
aam
pushf
mov
loop
adc
xlat
nop
imul
aaa
add
das
scas
fildll
sub
sub
insl
out
xlat
ret
xchg
push
xchg
inc
outsl
ficomps
pushf
insb
int
jne
insl
jns
mov
fwait
jmp
xor
sar
ds
dec
push
push
xchg
cs
cs
cld
push
orb
and
mov
jl
cs
out
cwtl
or
cmp
iret
pop
iret
arpl
movsb
jo
subb
jl
jg
es
xchg
mov
xchg
sbb
mov
mov
inc
jno
xlat
les
aas
das
xorb
scas
cld
jo
in
and
xor
lahf
lds
mov
xchg
push
mov
popa
pop
mov
scas
rol
mov
lea
lock
enter
dec
cmp
mov
mov
dec
mov
dec
inc
mov
out
dec
mov
mov
test
addr16
inc
or
push
jb
pop
jle
dec
std
jae
lds
sbb
pop
inc
orb
shrl
inc
pop
lods
push
dec
gs
push
xchg
lock
jne
les
pushf
xchg
mov
inc
data16
pusha
bound
ret
dec
push
insb
inc
lcall
repz
das
mov
and
lret
roll
fsubrs
xor
pop
dec
inc
push
ds
mov
int3
fldenv
adc
add
out
xchg
sbb
mov
in
icebp
jbe
cmc
adc
push
push
push
cltd
sbb
ljmp
pusha
nop
jmp
in
lea
addr16
fldcw
jle
and
pop
adc
sub
xchg
stos
cmpsb
movsb
mov
mov
das
rclb
lea
daa
lds
test
add
inc
xchg
ds
and
movsl
pushf
cmp
sbb
inc
movsl
mov
popf
je
xor
sbb
mov
adc
push
inc
sahf
addr16
xchg
clc
xchg
je
push
call
popf
and
imul
xchg
xor
movsb
adc
shr
cs
inc
dec
xchg
int3
movzwl
cmp
das
test
jae
pushf
scas
inc
test
or
in
cmp
mov
add
lock
xor
lock
cwtl
sub
lds
mov
fsubr
imul
jno
rcrb
or
mov
add
mov
mov
mov
fwait
or
mov
pop
or
shll
inc
iret
mov
hlt
jle
lcall
fsts
mov
or
push
or
xor
pop
mov
mov
sbb
mov
cmp
xor
xchg
mov
sub
sbb
mov
or
pop
or
push
mov
aam
xor
sahf
sbb
sub
mov
push
mov
in
lds
js
jo
cmp
ftst
test
cld
add
jl
dec
xorb
dec
imul
pop
bndstx
add
inc
ficoml
and
sbb
mov
mov
stos
sbb
pop
push
ret
mov
pop
xchg
or
movb
jmp
movsl
cmc
add
fmulp
dec
mov
xor
fistps
test
xchg
repnz
iret
test
sub
sbb
mov
mov
insl
adc
stos
cwtl
jno
fisubs
dec
and
lahf
jl
lods
loop
in
add
sub
xchg
mov
cmc
fdiv
sub
imul
push
xchg
lahf
push
addr16
push
cmp
pop
arpl
jno
sbb
outsb
repz
shrl
jae
fisttpl
push
xor
cld
into
in
mov
popf
arpl
cmp
or
in
mov
mov
js
fs
and
cpuid
popa
call
push
add
xchg
or
idivl
das
dec
idivl
out
lods
dec
cltd
rolb
test
and
stos
sahf
sub
xchg
push
cmpsb
in
ret
push
mov
mov
fidivrl
and
jle
xchg
cmpb
incb
rorl
pop
push
in
pop
push
cli
jno
in
and
test
in
fcos
shll
cmpsb
mov
mov
pop
adc
addr16
repnz
sbb
andl
pop
jle
sub
mov
dec
mov
std
jnp
cmpsb
insb
cmp
adc
jnp
call
or
push
lods
pushf
mov
add
lods
inc
loope
addr16
arpl
mov
mov
fxch
rclb
push
adc
xor
leave
or
ret
loopne
dec
jbe
push
or
imul
lcall
test
push
in
mov
bts
les
das
xchg
mov
bound
mov
xlat
cwtl
daa
jns
pop
sub
jbe
mov
mov
int3
xchg
adc
push
mov
repnz
push
xor
fildll
xlat
outsb
dec
test
mov
ret
lea
iret
repz
ret
xor
mov
nop
xchg
sub
jp
and
dec
bound
arpl
aaa
dec
dec
add
movsl
mov
or
push
je
ret
mov
sbb
mov
sahf
addr16
mov
or
out
push
jne
dec
push
sti
movsb
sbb
add
aam
stos
in
inc
sub
add
or
pcmpgtb
popf
fst
jbe
pop
push
and
in
jo
scas
add
clc
or
das
pop
orl
mov
dec
or
adc
addr16
loop
xor
or
mov
cs
out
sub
bswap
gs
mov
adc
pop
and
nop
push
jae
jne
xchg
sub
pushf
sbb
in
jbe
mov
or
mov
dec
mov
addl
add
sub
mov
scas
in
lods
inc
outsl
inc
ljmp
push
int3
mov
aad
mov
fsubs
sbb
cmp
add
and
push
sbb
pop
cmc
out
mov
ror
xor
or
xchg
cmp
nop
inc
cmpsl
inc
push
aad
sbb
jge
inc
add
mov
or
stos
cltd
ljmp
mov
repnz
int
out
aaa
gs
int
outsl
std
jmp
mov
pop
ffreep
call
xor
icebp
fmull
scas
sub
test
lock
shl
pop
outsb
insl
xor
mov
shll
cmpsb
pop
daa
mov
in
ja
push
and
jmp
lds
aam
call
scas
dec
int3
in
lock
inc
inc
movsl
addr16
testb
xchg
dec
sti
cmp
aam
add
mov
push
ss
icebp
in
xor
sbb
pop
mov
data16
xchg
push
sbb
xor
or
dec
or
cmp
pop
outsb
adc
or
or
inc
push
cmp
pop
jo
mov
mov
lods
add
pop
cmp
fucom
mov
pop
adc
fwait
inc
sub
je
mov
jns
stos
mov
jle
push
mov
xchg
inc
inc
sbb
out
ja
data16
popf
inc
jle
adc
orb
mov
and
dec
ljmp
sbb
fsubl
or
xchg
enter
adc
mov
add
push
test
add
sahf
and
adc
ljmp
add
mov
fwait
test
push
insb
xchg
das
sbb
push
xor
xchg
sbb
iret
test
dec
ljmp
les
or
or
nop
loop
mov
and
sbb
jp
out
addr16
xor
out
cltd
or
push
je
ja
loop
movb
aam
xchg
and
sbb
cmpb
add
xor
adc
nop
aas
or
mov
in
rcrl
test
xchg
leave
adc
lret
mov
rorl
or
jb
sub
mov
lret
pusha
daa
sbb
mov
and
das
daa
mov
inc
push
lods
lcall
push
popf
hlt
dec
cmp
adc
jge
aad
scas
jmp
les
dec
out
lret
divb
flds
scas
xor
push
fcoml
aas
shlb
xchg
sbb
and
insb
pop
xlat
fstpt
jp
mov
les
lock
mov
xchg
cmp
loop
iretw
fs
mov
jle
sub
leave
pop
push
xor
std
fcmovnbe
inc
xchg
pcmpeqd
shlb
cmp
shlb
sahf
jle
shll
les
mov
push
andl
sbb
ja
pop
mov
and
aaa
cmp
mov
push
inc
lds
xchg
rclb
pop
sub
add
inc
into
and
mov
jbe
inc
sub
loop
ds
insb
sub
inc
adc
mov
inc
and
fbstp
mov
das
popa
fdiv
aaa
lds
mov
jl
xchg
fcom
in
mov
jmp
fwait
ret
mov
fcomps
into
loope
cwtl
les
inc
mov
cmp
pop
dec
mov
cli
dec
pop
out
pop
addr16
js
rorl
add
inc
int3
adc
mov
xor
mov
fildl
push
clc
xor
xor
insl
out
xchg
sub
jns
aam
cwtl
in
les
je
ja
cmpsl
int3
and
aad
lret
inc
push
roll
xlat
adc
enter
xor
cmp
lods
pushf
xor
xchg
insb
dec
lcall
xor
daa
enter
out
push
nop
and
cltd
andb
push
stos
jl
jo
into
outsl
dec
out
clc
inc
or
rcll
jns
add
jmp
imul
sub
in
out
out
pop
pusha
push
mov
es
sbb
sub
push
cmpsl
fwait
in
fsubs
enter
mov
cli
jb
adc
es
shlb
inc
inc
push
testl
repz
sub
les
adc
pop
fwait
lret
xor
cmpsb
cltd
iret
sub
int
push
jns
jp
adc
add
repz
mov
fwait
mov
outsl
push
cmp
hlt
rclb
inc
loopne
bound
jge
ret
sarb
int
jp
sbb
or
mov
fwait
dec
in
mov
lret
push
mov
pusha
mov
push
int
mov
push
mov
inc
inc
and
mov
loope
lret
and
or
xchg
xor
out
adc
cltd
fstps
jmp
jl
cmp
jle
cmpsb
jg
fld
cs
and
jb
xchg
pop
rcll
das
pop
jg
sub
jns
pop
subl
push
pop
push
xorb
lret
test
idivl
pop
pop
lock
fldenv
cmp
movsl
insl
and
and
dec
mov
fbstp
aas
or
incl
push
push
lahf
outsb
or
or
sbb
and
xchg
test
daa
dec
inc
sbb
in
inc
lret
mov
add
cmpsb
or
add
push
cwtl
xor
mov
cs
test
push
test
add
adc
push
dec
aam
int
je
pop
pop
push
mov
cmp
fistps
leave
jae
xchg
ds
lahf
pop
mov
adc
push
aam
jno
cmp
pop
mov
cmc
sub
mov
jl
sbb
mov
test
sub
push
jo
push
jg
or
adc
jecxz
mov
pop
pop
mov
cmc
pop
test
mov
mov
ficoms
call
in
mov
mov
xchg
pusha
int
popa
aas
aas
daa
sarl
push
std
sahf
adc
sub
das
pop
in
sbb
in
dec
mov
shrb
hlt
inc
cli
or
add
lea
xchg
inc
sub
int3
add
pop
inc
inc
jecxz
xlat
sub
aam
jno
dec
popf
out
daa
repz
movsb
add
cli
icebp
pop
or
sub
push
cltd
inc
jns
mov
sti
sub
negb
stos
notb
and
and
rolb
fildl
jl
stos
mov
cmp
pop
in
psrlw
mov
dec
hlt
mov
ljmp
enter
adc
or
jnp
push
lds
cmp
xor
mov
sub
lret
roll
xor
es
push
add
shll
notb
ljmp
data16
out
mov
insl
outsl
out
pusha
push
add
cwtl
sub
mov
outsl
idivb
adc
dec
inc
jge
es
int3
or
or
push
cmp
testl
outsb
and
jnp
call
test
sub
or
xor
out
xchg
push
add
out
out
std
fsubrl
ret
mov
cmp
xor
push
std
out
cmp
xor
gs
popa
push
xor
cli
mov
mov
clc
xchg
push
cmp
int
sbbb
fwait
jae
imul
pop
pop
and
and
inc
mov
lods
dec
jae
push
cwtl
cltd
outsb
inc
test
lret
cmc
push
xchg
jl
cwtl
adc
cltd
int
ljmp
mov
bound
mov
mov
loop
pop
push
adc
cmpsb
rcll
push
leave
mov
pop
sub
push
jmp
into
cmp
dec
adc
adc
sar
pop
and
adc
jl
xchg
lea
mov
mov
pop
sahf
inc
clc
inc
mov
aaa
mov
fisubs
fucomip
pop
aaa
fistpl
inc
sbb
test
sub
mov
test
shl
mov
add
push
sub
pop
loopne
add
es
sub
fwait
ja
mov
mov
push
push
enter
pop
imul
sahf
call
or
enter
inc
inc
iret
lret
mov
outsb
jecxz
lcall
xor
mov
xchg
rol
xor
adc
cs
xchg
mov
push
int3
mov
add
cmp
aaa
push
and
rcr
jp
clc
sub
adc
bound
notb
fldl
sub
rolb
cmp
push
inc
rcrl
push
stc
subb
cwtl
cmp
mov
cmpsb
sbb
push
popa
or
mov
lods
scas
scas
or
push
enter
aaa
adc
push
js
sub
aad
popl
in
call
mov
fdivs
mov
and
subl
mov
add
sarb
pop
push
mov
push
cwtl
jmp
cmp
test
addb
fdivs
push
imul
mov
data16
bound
mov
xor
jae
cmp
jp
ret
or
cwtl
imul
dec
test
enter
push
dec
or
jns
mov
lods
push
mov
inc
jno
push
mov
xlat
xor
jmp
pop
cmp
xchg
and
push
dec
inc
rcrb
jne
mov
ret
jae
scas
xor
jle
rcr
loop
in
xchg
fs
mov
rorl
and
pop
adc
and
dec
mov
mov
fbstp
test
dec
test
pushf
test
test
and
cmp
xor
push
insl
xchg
test
aad
test
jg
push
inc
cmpsb
mov
cmpsb
push
daa
sub
inc
mov
and
enter
stos
imul
rol
cmpsl
cmpsl
and
or
lods
scas
hlt
adc
jle
push
movsl
mov
cmp
stos
shrl
fldcw
test
addr16
cmp
loope
jo
mov
mov
cmp
outsl
enter
add
outsb
negl
scas
repz
xchg
mov
sbb
jmp
int3
rclb
add
dec
scas
sahf
es
jecxz
fsubrl
adc
dec
dec
or
inc
jne
inc
pushf
push
push
push
ja
lds
vmaxss
movsl
jmp
inc
notb
dec
push
or
adc
mov
mov
mov
adc
add
rcrl
test
cmpsl
push
aaa
inc
pop
mov
jge
add
cmp
sbb
push
jg
sub
and
mov
loop
fistpl
popa
xchg
dec
and
lcall
pop
repz
icebp
clc
push
stos
dec
push
inc
jnp
sbb
lret
adc
mov
push
mov
jne
xorb
push
lock
mov
sub
stc
xor
mov
rolb
xchg
stos
lea
mov
leave
jle
ret
pushf
xor
adc
xor
pop
xchg
xor
xchg
add
mov
js
rcll
dec
jno
nop
adc
mov
outsb
js
icebp
nop
mov
or
loope
sub
adc
lock
loope
lret
in
or
int3
popf
pop
jmp
mov
mov
cmpsl
mul
push
pushf
data16
sti
xchg
mov
adc
mov
jo
sub
add
into
sbb
lock
sbb
adc
test
sbb
xchg
jle
mov
mov
out
cli
xor
outsl
das
jae
sub
mov
out
sarl
orb
negl
mov
enter
into
xor
mov
mov
jl
popf
dec
mov
inc
inc
add
cmpsl
cmp
dec
lock
dec
inc
lds
jecxz
cmp
xchg
das
xchg
movsb
cltd
rol
enter
popf
xlat
add
insl
fdivr
adc
push
lods
sub
mov
inc
push
mov
lcall
and
cmp
fiaddl
cmp
leave
int
push
mov
rcrl
xchg
dec
shlb
mov
imul
aam
push
xchg
mov
lock
mov
repz
test
orb
enter
mov
add
inc
lods
inc
mov
frstor
scas
rolb
mov
pop
call
sub
fdivp
outsb
cwtl
lcall
arpl
add
dec
xchg
test
adc
or
and
adc
pop
repz
mov
jno
pop
mov
test
notl
shlb
outsb
stos
xchg
pop
gs
push
jle
inc
sub
andl
or
ss
clc
and
jae
loop
repnz
in
sub
lea
jle
adc
push
in
mov
or
pop
imul
push
adc
aad
and
and
dec
cmp
pop
adc
adc
mov
aad
pop
jno
outsb
daa
sarl
and
xor
sti
adc
sub
out
xor
pop
mov
mov
loopne
mov
xchg
inc
mov
movhps
sub
cmp
sbb
and
sub
int3
xchg
je
mov
or
xor
pop
dec
cmp
aad
mov
pop
shr
dec
jne
stos
loope
add
sub
adc
movsl
lret
daa
jns
rorb
out
and
push
sub
sub
xlat
adc
lea
xchg
rcll
or
and
mov
icebp
push
shr
mov
pushf
push
repz
inc
fcompl
rorb
mov
sub
popf
push
pop
lock
cwtl
loope
adc
pop
jle
rcr
stos
ss
loopne
sub
mov
sti
je
shrl
fcmovu
push
mov
add
outsb
aam
push
mov
aaa
dec
sub
sub
and
mov
mov
shll
xchg
sbb
jg
add
test
ljmp
cli
stos
xchg
int3
mov
popa
sbb
js
lcall
iret
test
insl
movsl
sub
int3
mov
inc
lahf
orb
fstpt
cmp
dec
sub
jb
push
sbb
inc
enter
jge
decl
jae
stc
fcmovnb
jns
or
and
or
shrl
lcall
repnz
jmp
pop
jmp
pop
test
adc
sbb
fistpl
and
mov
pusha
in
imul
ss
lea
xchg
push
in
popa
cmp
lahf
pop
mov
in
pushf
ss
dec
fisubrs
test
mov
sbb
and
lret
push
jnp
add
int
int
rcrl
pusha
xchg
sbbb
jmp
test
push
dec
mov
cmp
test
in
gs
and
or
scas
imul
mov
xchg
bound
js
jmp
adc
fcompl
sbb
sbb
std
sbb
lret
push
rol
xchg
int3
mov
scas
or
movsl
adc
push
add
loop
bound
pop
dec
adc
adc
stos
xor
cmp
je
or
imul
adc
rol
call
push
notl
stos
mov
mov
inc
jmp
or
iret
addr16
pop
imul
jb
mov
insb
push
add
jle
loop
push
arpl
cmp
repz
cmpb
push
aas
test
push
lcall
pop
dec
push
mov
scas
arpl
les
pop
xchg
push
lret
out
or
aad
shl
mov
jecxz
sub
mov
cld
nop
lahf
lods
sti
cmp
inc
dec
fsub
leave
out
and
aaa
lods
lret
fs
xchg
stos
cmpsl
pop
testb
mov
stos
scas
enter
pop
jecxz
inc
imul
sbb
aaa
mov
push
jge
pop
push
adc
fisttpl
inc
add
jns
dec
fcoml
stos
test
ljmp
hlt
xchg
lcall
in
fldt
xlat
push
inc
pop
popa
fs
pop
inc
mov
and
cmpsl
mov
shll
cmp
lahf
mov
stos
pop
aad
insb
mov
mov
cmp
mov
push
jae
add
ds
adc
lcall
sbbl
adc
dec
xor
mov
add
mov
cmp
jo
push
in
pop
aas
mov
xchg
inc
pusha
xchg
insb
add
lcall
shll
and
xchg
mov
pop
frstor
aam
aad
fstps
adc
and
add
enter
sub
xchg
hlt
inc
fcmovne
or
add
jb
xchg
idiv
and
call
jb
push
and
pop
imul
loop
cmp
or
push
xchg
xchg
sahf
sahf
and
mov
sbb
mov
adc
int3
cmpsb
jecxz
test
js
ss
ljmp
mov
pop
add
imull
jp
lcall
or
aad
jle
adc
xlat
push
shlb
pop
inc
popf
mov
aad
inc
dec
out
push
xor
daa
mov
pop
sbb
xchg
aaa
cmp
jno
dec
icebp
jo
xchg
and
js
ds
jp
mov
lods
push
sbbl
popf
push
dec
inc
cmpsl
cmp
rorb
xor
arpl
cmp
decl
call
pop
int
lret
pop
popa
imul
js
adc
dec
testl
mov
and
cwtl
add
out
fisubl
ja
cmp
push
mov
mov
mov
int3
pop
test
leave
push
and
bound
mov
in
xor
loope
sarb
adc
lds
sarb
mov
xchg
orb
leave
push
test
stos
pop
xchg
or
xor
sub
leave
stos
pop
fwait
dec
push
cld
add
mov
fdivrs
xor
xor
sub
hlt
add
rclb
out
ss
pop
sbb
popa
daa
loopne
fs
imul
jecxz
out
xchg
jb
push
mov
pop
aas
pop
inc
movsb
xchg
inc
xchg
cmpsb
rcr
sub
andb
inc
loopne
out
adc
jae
add
or
es
ljmp
xchg
xchg
push
push
sbb
rorb
sub
hlt
jmp
mov
fstpt
or
adc
pop
jo
inc
sarl
xchg
ret
sub
cld
pop
cmc
divl
push
dec
or
sahf
sti
jge
and
jp
cmp
pop
ret
call
pop
js
sub
inc
inc
inc
js
xchg
xor
daa
push
inc
repz
jae
cwtl
dec
lahf
jb
push
into
int
xchg
sub
stos
mov
adc
cmp
sub
stc
adc
fdiv
into
push
and
pop
pop
call
inc
xchg
cmpb
sub
aam
jo
inc
fidivs
pushf
sub
cmp
mov
aas
cmpsb
adc
jo
pop
les
jne
sbb
ret
data16
push
mov
and
sti
pop
fbstp
xchg
out
add
std
insl
iret
pop
pop
jmp
inc
ret
mov
sub
or
inc
xchg
xchg
or
les
xchg
int
int3
rcrl
negl
arpl
xchg
add
hlt
adc
push
sbb
cmpsb
jne
lea
hlt
aam
mov
bound
sarb
out
into
mov
cmp
stos
ret
aaa
imul
out
imul
shufps
dec
ret
or
mul
jg
mov
out
out
movsl
loope
cmpsb
sub
xchg
int
test
adc
dec
rorb
xchg
and
mov
push
scas
cmp
jnp
or
loop
imulb
orl
sbb
xchg
inc
xor
and
addr16
jl
sahf
fs
adc
sahf
sbb
hlt
sbb
jnp
mov
inc
pop
decl
in
mov
mov
pusha
sub
push
mov
pop
test
testl
mov
lret
mov
cwtl
dec
xor
jb
lret
fisubl
push
bound
add
xchg
jecxz
mov
testl
cmc
dec
mov
cmc
sub
test
or
adc
icebp
outsb
cmp
lods
scas
mov
adc
rorl
mov
icebp
or
adc
or
aam
push
ja
pushf
lds
jo
shlb
jmp
and
outsb
mov
jns
rol
jecxz
sub
fnsave
mov
imul
pop
movsb
outsl
inc
enter
shlb
cmp
cmp
daa
in
je
lahf
xchg
outsl
int3
or
call
dec
clc
cmp
dec
sub
lahf
jle
out
call
loope
mov
mov
daa
outsl
ret
sub
test
push
and
fs
fmull
aas
mov
jno
sbb
mov
call
xchg
test
lods
leave
nop
sub
dec
leave
dec
aaa
jbe
cmp
lcall
inc
dec
lret
imul
cmp
in
mov
stos
idivl
fwait
or
inc
fcoml
sahf
repz
and
and
mov
lock
jbe
mov
lret
lret
call
out
sti
or
das
out
lock
leave
fs
cmpsb
xor
sbb
pop
pop
fmull
xlat
cmpsb
nop
mov
mov
fnstenv
jecxz
or
and
ret
or
shr
test
lods
mov
cmp
stos
push
and
cmpsb
fldenv
shll
and
push
mov
inc
dec
int
jne
pop
enter
repnz
xor
push
js
push
fistpl
sti
add
adc
xlat
test
imul
test
xchg
mov
lahf
shlb
add
pop
repz
xchg
mov
or
shrl
cmp
inc
fs
lahf
jg
les
and
sub
xchg
sbb
or
and
jne
jne
nop
mov
js
push
sub
pop
repz
scas
sub
lret
arpl
jnp
popf
dec
push
ds
pop
inc
cmp
and
xor
mov
aad
mov
cs
dec
mov
dec
or
sbb
mov
or
or
rol
aad
mov
andl
adc
mov
cmpsl
push
js
loop
dec
sbb
mov
filds
push
cmpsb
iret
inc
or
sub
sub
lods
popa
ss
add
or
rolb
into
xchg
or
ficompl
sbb
xor
cwtl
gs
push
subl
dec
jnp
das
sbb
stc
je
bound
iret
dec
cmp
cmpsl
popf
mov
nop
pop
or
inc
lods
xor
dec
mov
add
cld
in
inc
mov
sbb
popa
push
ss
fnsave
sbb
shlb
dec
stos
lods
mov
movsb
add
cmpsl
dec
pop
jno
jmp
inc
sub
fldenv
sub
add
lret
sub
mov
cpuid
or
inc
in
gs
addr16
cmpsb
popf
pop
push
xor
ret
movsb
mov
out
or
push
sub
arpl
cltd
out
add
gs
or
jmp
lahf
and
lds
jmp
shlb
iret
sbb
cmpsl
add
sub
adc
fists
jp
mov
pop
in
fimull
xor
fldenv
daa
insb
les
movsb
mov
push
sub
and
mov
jbe
jecxz
adc
inc
ljmp
loopne
jbe
das
cmc
mov
push
into
popa
adc
add
dec
inc
pop
and
cs
sub
adc
stos
aas
inc
imulb
push
inc
and
cli
push
orl
les
push
popa
cmpsb
shrl
mov
cmpsl
sbb
sbb
stos
mov
inc
jl
xor
mov
clc
mov
test
mov
jl
test
sub
pop
faddl
sahf
insb
cmp
jg
popf
cmpsb
jl
repz
sbb
ljmp
movsb
or
js
daa
mov
push
outsl
inc
loope
outsb
xor
cltd
fistps
call
daa
rolb
mov
push
cltd
je
xchg
add
pop
mov
inc
std
and
push
addr16
jg
push
jne
xchg
add
js
jnp
adc
xchg
mov
sub
pop
nop
or
cmc
pop
aad
sub
mov
test
adc
push
mov
push
addb
mov
fs
test
aad
das
add
mov
jno
xchg
movsb
xchg
ret
mov
cmp
inc
push
push
push
xchg
mov
clc
pop
imul
cmpsb
data16
jae
loopne
sbb
mov
shll
into
ss
out
sbb
xor
iret
xchg
rcrb
xchg
fwait
int3
repz
popf
pop
mov
push
lret
pop
mov
loop
mov
stos
and
scas
inc
cwtl
mov
xchg
repz
das
adc
sub
lret
push
addr16
mov
or
inc
bound
clc
add
loope
add
lods
insl
out
pop
mov
lahf
daa
mov
mov
in
scas
addr16
fldl
mov
js
hlt
push
mov
insb
outsl
push
add
ss
jbe
mov
inc
cmp
ret
xchg
aaa
scas
cmp
jno
push
aam
xchg
call
add
mov
or
cmp
mov
mov
mov
mov
enter
arpl
inc
mov
inc
loopne
popa
jno
in
in
adc
movsl
and
cmp
mov
pusha
cmp
sbb
cmp
xchg
inc
in
mov
int3
xor
cmpsl
sbb
aas
roll
mov
jns
pop
pop
dec
or
orb
fdivrp
xchg
xor
jg
scas
loope
pop
pop
mov
mov
mov
cld
sbb
push
adc
push
cmp
adc
int
pop
jb
jl
fwait
cmc
mov
sub
jnp
out
sub
xchg
dec
fsubl
dec
jmp
dec
ljmp
add
cmp
in
lea
sbb
pop
inc
dec
push
dec
fldt
cmp
adc
jp
adc
inc
push
mov
iret
ret
iret
clc
sbb
pop
movsl
shll
sub
add
dec
ret
mov
and
cld
push
jno
sub
cs
adc
lds
repz
aam
sbb
pop
xchg
lretw
push
and
stc
cmpb
repnz
and
into
mov
add
out
jo
js
xchg
insb
sti
out
push
roll
inc
jne
xchg
js
movl
push
ror
xchg
mov
pop
arpl
mov
dec
push
mov
xchg
pop
lcall
lods
movb
and
js
int3
adc
addb
push
cmp
push
std
sbb
je
js
lds
mov
xchg
jo
sub
dec
dec
in
loopew
and
pusha
dec
dec
jp
mov
fildl
mov
pop
lahf
rclb
pop
mov
cmpsb
push
gs
sub
mov
mov
cmp
sbb
push
dec
loop
test
sbb
dec
add
adc
ds
cwtl
inc
std
xchg
mov
sbb
ret
jno
cld
repz
mov
cmp
add
inc
cli
dec
mov
test
pop
rorl
and
inc
loope
and
and
adc
f2xm1
cmp
push
lock
enter
es
jo
xor
cmc
xchg
jmp
cmp
xchg
mov
aad
pop
imul
xor
dec
push
mov
aam
pop
add
adc
sbb
push
mov
lcall
cmpsl
movsb
sub
ret
xchg
adc
dec
jp
repnz
mov
dec
out
jns
dec
jge
mov
pop
and
out
add
stos
out
dec
insl
mov
push
or
mov
cmp
test
mov
lock
adc
dec
dec
cld
enter
std
push
jbe
clc
cmp
fidivrs
mov
das
jecxz
adc
sbb
mov
in
pop
push
into
jecxz
cmp
ss
fbld
mov
fdivrl
mov
pushf
insb
push
out
into
mov
push
ret
dec
sub
faddl
xchg
jecxz
push
mov
dec
mov
and
cmp
pop
jge
jecxz
and
and
daa
lock
aad
loop
push
bound
repnz
sbb
dec
fs
lock
adc
sbb
or
sbb
mov
repz
shr
inc
lahf
xor
sbb
subb
inc
and
jle
adc
sbb
adc
pushf
mov
ds
cmp
pop
jg
mov
nop
out
loope
div
pop
cmpsl
iret
and
mov
jmp
cmpsb
pop
inc
jmp
mov
adc
jo
xlat
xor
xchg
fisubs
pushf
ret
xor
mov
dec
jns
in
hlt
add
or
movsb
cmp
jmp
in
inc
je
xorl
xchg
xchg
push
pop
fisubl
or
mov
inc
ljmp
xchg
xor
lret
mov
ret
jno
mov
adc
push
adc
shlb
mov
xchg
out
pop
dec
mov
lcall
adc
jmp
enter
les
mov
stos
out
push
aad
jp
sub
mov
repz
mov
into
jmp
and
stc
inc
dec
mov
arpl
add
fs
jle
xor
shrl
jne
popa
inc
inc
xchg
into
sbb
repnz
sub
cli
mov
cli
paddusb
cli
pusha
adc
lods
pop
fdivr
ret
jae
mov
jno
cmp
xchg
ss
xchg
cs
orb
push
xchg
fldln2
sar
dec
bswap
ficoml
ja
lcall
loop
and
xor
nop
sti
xchg
ljmp
mov
inc
xlat
cmp
js
xor
loop
and
jnp
xlat
lret
test
leave
imul
cmp
cmp
fcmovnbe
sbb
in
imul
ret
outsb
xor
loopne
adc
add
rol
pushw
aam
and
inc
aam
gs
pop
stos
adc
push
loope
ret
addl
dec
js
push
insb
adc
js
inc
cld
insl
xchg
or
push
inc
lock
movb
jmp
push
fdivrl
scas
mov
mov
push
scas
jbe
test
adc
rcl
ds
imulb
gs
aas
mov
in
ds
addl
arpl
loope
shl
fs
dec
mov
lock
divl
rclb
out
lret
rep
es
sbb
push
inc
js
dec
inc
sub
jno
in
and
leave
add
lret
pop
sbb
jle
jae
out
sti
out
pop
sbb
sub
dec
lods
testb
les
jg
push
sarl
lret
arpl
cld
push
xchg
arpl
xor
imul
in
orl
rorl
push
and
dec
mov
sub
add
lock
ret
add
and
mov
fisubs
sub
lret
jmp
sbb
jns
inc
xchg
mov
xorl
mov
jge
push
pushf
xchg
mov
aad
and
fwait
js
add
loop
sarb
mov
inc
lcall
jge
mov
mov
aam
or
or
push
mov
mov
xchg
jb
fisttpl
test
push
push
lods
lock
ds
nop
ds
out
mov
loope
cmpsb
sub
sub
sub
add
fwait
leave
hlt
addr16
mov
fmuls
icebp
xchg
cli
mov
xchg
pop
ja
or
scas
ss
movsl
adc
and
test
push
scas
xlat
dec
jge
inc
fnsave
movsb
push
arpl
fsts
pop
addr16
push
test
xor
out
in
add
push
or
jge
outsb
xlat
pop
shlb
mov
inc
or
jae
in
mov
imul
jmp
mov
mov
mov
rolb
sarl
iret
mov
jae
leave
dec
lods
arpl
inc
ljmp
sbb
or
cltd
daa
pop
dec
out
pop
push
jbe
bnd
add
cmp
into
dec
testb
xchg
jl
sub
and
or
mov
mov
jg
popf
sbb
mov
xor
push
cwtl
fidivl
repnz
push
push
int3
jae
dec
mov
call
dec
pop
rolb
inc
scas
mov
add
daa
or
mov
mov
add
rol
test
lahf
sbb
in
cmp
jb
jp
mov
enter
mov
dec
push
jb
add
push
cmpsb
mov
cmpsb
xorl
inc
inc
push
in
fimuls
xlat
cmp
adc
cmovnp
fidivl
das
or
ljmp
xchg
out
int
mov
mov
jne
lahf
cmp
mov
mov
xchg
push
lcall
inc
scas
clc
push
xchg
insb
loopne
insl
out
jnp
mov
jmp
stos
pop
call
mov
in
inc
orl
lock
pop
sub
fistpl
rclb
sbb
stos
jl
mov
shr
pusha
mov
sub
dec
mov
sub
shlb
mov
jg
popf
xor
bound
mov
jo
mov
fsubrs
fsubp
stos
cmpb
xor
mov
movsl
fwait
cmp
rolb
adc
cmc
repnz
mov
mov
and
mov
xchg
push
shl
mov
or
push
les
stos
mov
movsb
lds
mov
cmp
pop
pop
push
cmp
sbb
sarb
testl
sti
addr16
inc
div
jge
pusha
mov
push
mov
add
pop
xchg
pop
push
sub
pop
fwait
pop
rolb
outsl
mov
shrb
lea
daa
pushf
andb
mov
clc
dec
jae
jp
loopne
ret
mov
xlat
pop
fs
dec
xchg
bound
mov
int3
inc
push
sbbb
lea
and
into
lahf
or
pushf
flds
xchg
inc
aaa
sbb
imul
je
sbbb
jl
ja
fistl
iret
hlt
fsubp
fimuls
xchg
movsb
sub
push
outsl
adc
fstpl
push
add
repnz
xor
xor
lds
adc
test
push
mov
inc
sbb
rol
dec
insl
ss
and
popl
shl
and
adc
cmp
les
imul
mov
hlt
test
mov
int
pop
lret
pop
stos
push
cmc
and
lock
ret
or
xchg
adc
ds
mov
in
mov
sub
adc
pop
aad
or
idiv
jle
clc
add
sbb
add
push
cmp
shlb
aas
outsl
jns
xchg
mov
pop
fidivs
hlt
sbb
mov
cli
cwtl
dec
push
mov
in
adc
xchg
and
cmp
bound
cld
in
sub
push
xchg
outsl
pop
pop
xchg
and
add
js
jmp
popf
pushf
fs
idivb
call
test
push
cmp
jbe
jno
ret
outsl
or
imul
cwtl
inc
cwtl
int3
lret
xchg
lods
xlat
sbb
adc
sbb
out
insl
gs
cmpb
mov
mov
sbb
test
push
push
xor
jnp
push
mov
repz
cmpsb
in
adc
add
lock
sub
dec
jp
into
jne
inc
loope
mov
fdivs
sbbb
jno
dec
test
stos
ja
ja
xor
sbb
mov
mov
sub
jo
orl
inc
mov
sub
ljmp
std
xchg
pop
filds
lret
and
jecxz
lcall
lea
and
sbb
les
aam
out
inc
imul
adcl
and
outsb
orl
sub
loop
icebp
idivb
addr16
es
das
jno
test
orb
add
divb
shll
insb
imull
dec
lods
ljmp
testb
dec
xchg
or
dec
popf
xchg
inc
mov
arpl
inc
jne
movups
fistpll
ss
movsb
jmp
or
pop
and
pop
ret
js
daa
mov
push
call
ja
adc
push
jecxz
or
test
mov
sub
or
out
dec
dec
in
arpl
icebp
xchg
sbb
aam
xor
sub
cltd
adc
add
mov
movsb
inc
subb
push
daa
mov
or
aam
push
sbb
inc
push
push
xorl
sbb
dec
jno
inc
aaa
in
push
jecxz
mov
mov
inc
cmp
mov
punpckldq
in
in
rorl
jmp
xchg
fstpt
lea
adc
jno
popf
and
push
cli
shr
push
adc
pop
sarb
addr16
loope
sbb
push
xchg
push
and
sahf
push
xor
pop
icebp
shr
cwtl
pop
test
fildl
mov
outsl
in
into
pop
push
roll
cmpsb
xchg
xchg
xchg
sahf
jge
rcrl
shl
add
hlt
push
add
add
int
jo
jbe
mov
jno
add
and
stos
adc
mov
lea
fwait
xchg
stc
inc
aam
sarb
inc
jg
lcall
adc
hlt
into
mov
xor
jg
cmp
pop
ret
mov
cmp
in
mov
fwait
push
cli
xchg
fnstenv
stc
jnp
outsb
cli
and
jbe
cltd
test
cmpb
add
push
rclb
lds
imul
or
loopne
icebp
jb
add
cmp
or
mov
add
fcomip
cltd
test
xor
pop
js
fcomip
cli
subb
sub
test
pop
xor
fs
push
sbb
fs
xor
jno
mov
in
scas
dec
xor
fcoms
sbb
sbb
mov
stos
loope
xor
add
mov
out
pop
fmul
cs
rcl
je
leave
or
cmp
lahf
jge
enter
ljmp
cmp
je
addr16
sub
pushf
ret
ret
loop
sbb
fwait
dec
dec
in
ja
sbb
sub
test
xchg
gs
lds
negl
xchg
and
xchg
jbe
cli
cltd
leave
pop
mov
in
push
sbb
lods
les
repnz
sbb
decb
sub
xor
fildl
aas
loope
xchg
push
mov
sub
mov
xchg
xchg
fcmovne
ds
inc
js
clc
mov
pop
daa
into
push
leave
adc
cmp
stos
mov
call
ja
jne
dec
loop
push
out
mov
cwtl
lock
ljmp
push
jne
divl
pusha
and
dec
jne
xchg
sbb
fisttpl
adc
xorl
sarb
xor
stos
jne
fisttps
call
mov
insb
xchg
jmp
minps
jle
pop
cwtl
ficompl
cs
repz
and
mov
in
fs
mov
enter
fdivrs
push
cltd
mov
pop
push
sarl
aad
stos
leave
das
pushf
push
mov
fs
lds
into
jns
test
shr
xor
cltd
and
out
mov
or
jnp
pop
loopne
add
inc
push
cs
pop
out
xchg
int3
testb
cmp
jl
enter
inc
out
mov
xchg
xor
ret
lret
decb
inc
bound
testb
frndint
jl
or
outsl
out
pop
repz
and
aad
std
test
cmpsl
dec
sbb
stos
subl
js
xchg
adc
scas
or
negl
imul
lahf
shll
pop
lcall
push
outsl
loop
push
dec
out
lahf
sub
cmp
and
push
push
sbb
mov
push
jl
clc
dec
loopne
cmpsb
fldl
cmp
not
and
inc
jnp
pop
mov
cmp
lds
mov
jno
xchg
pop
xor
ret
fdivrs
je
ss
je
sub
mov
sbb
faddl
cmp
xchg
push
popa
mov
inc
push
movsb
cmp
push
sbb
xchg
stc
pop
dec
jno
shl
xchg
ret
cmp
or
repnz
iret
test
mov
lahf
out
shlb
xchg
push
inc
imul
jnp
test
push
jecxz
xor
sti
mov
pop
loop
cmpsl
stos
inc
test
divb
sub
mov
js
lret
cmp
aad
mov
add
mov
arpl
fwait
push
int
fisttps
addl
sub
scas
push
pushf
mov
sub
call
jmp
aam
aas
mov
jl
rol
pusha
out
and
mov
loope
iret
adc
jae
aad
icebp
inc
mov
cli
pop
fisttpl
mov
adc
stos
shll
dec
lahf
bound
or
add
jno
jecxz
fmul
mov
lret
dec
dec
adc
cmp
jne
cmp
test
jne
aas
std
repnz
push
inc
movsl
jne
xchg
insb
mov
jnp
cmpsl
jl
cs
mov
test
jae
fsubrl
dec
mov
pop
inc
xlat
jg,pn
jle
into
mov
bound
or
enter
in
mov
jb
inc
loope
rol
pop
mov
insl
fsub
push
cmc
jb
xorb
jge
int
adc
and
cmc
mov
ja
in
in
psrlw
dec
loop
shll
scas
movsl
lret
dec
push
jle
sub
and
leave
aaa
mov
fistl
out
hlt
std
call
mov
or
mov
push
orb
dec
lret
psubd
out
pop
outsl
xlat
mov
lods
insb
test
pop
cli
shlb
xchg
push
xor
jge
insl
lock
xor
xor
push
cwtl
pop
mov
mov
outsb
inc
movl
dec
mov
mov
lods
pop
mov
jne
mov
in
int3
lcall
or
inc
mov
mov
rclb
mov
cmpsb
inc
loopne
loope
fnstsw
jne
xor
clc
mov
lock
shrl
outsl
mov
mov
sysret
xchg
pusha
adc
js
shl
xchg
adc
iret
dec
push
jno
jle
push
in
push
push
in
cmp
fwait
mov
mov
xchg
push
addr16
ds
xchg
gs
and
push
jg
bnd
xor
aad
inc
pop
cmp
jmp
mov
jg
adcl
cmp
push
adc
push
mov
scas
arpl
xchg
shl
shll
cmp
popf
jnp
movsl
pop
cmp
mov
cmp
adcb
movsb
inc
mov
daa
sbb
lret
loope
pop
movsb
arpl
jnp
iret
cmovbe
outsl
xor
xchg
or
dec
pop
mov
test
jecxz
out
pop
dec
jecxz
jbe
push
jge
mov
sub
out
iret
mov
in
dec
in
pop
inc
xchg
int
insb
mov
mov
fcom
or
repnz
cld
mov
insl
movsb
imull
push
insb
and
sahf
imul
dec
push
dec
add
cmp
pop
lods
ret
mov
fstpt
sbb
adc
pop
sbb
inc
xchg
dec
jae
jns
shlb
jb
outsb
jne
mov
inc
jge
mov
rcrl
xor
dec
inc
mov
pop
orb
cmp
sbb
xchg
lods
and
push
xchg
and
jb
adc
adc
mov
dec
int3
dec
cmp
pop
pop
ja
mov
dec
mov
dec
leave
stos
fxsave
push
xchg
in
and
sbb
arpl
or
push
in
sahf
push
mov
pop
push
lea
jno
js
mov
fsubr
cli
leave
out
and
push
jmp
push
daa
xchg
or
mov
adc
jmp
outsb
push
xor
daa
movsl
mov
adc
sbb
inc
inc
xchg
jnp
sbb
sbb
sbb
in
xchg
outsl
ficomps
fstps
inc
inc
xchg
pop
fwait
and
outsl
dec
popa
push
fwait
mov
shr
cmpsl
int
sbb
jl
les
movsb
push
adc
jo
outsb
stos
es
jle
in
cwtl
sti
sub
iret
xor
xor
out
xchg
ficompl
jno
icebp
xchg
jg
flds
ss
loopne
fldcw
cmp
pop
lods
xor
push
xor
dec
add
imulb
mov
or
out
pop
dec
sbb
stos
pop
scas
fadds
daa
call
mov
mov
jns
sbb
push
mov
sahf
insl
imul
and
sub
adc
push
iret
cli
mov
mov
in
mov
leave
sub
dec
pop
add
inc
and
xor
and
jl
inc
test
push
lds
add
adc
ljmp
in
adc
movsb
bound
js
mov
xchg
adc
rol
push
jg
outsl
incb
dec
pop
cmp
and
jo
scas
and
mov
sub
movsb
rorb
push
ret
jae
sub
sub
sbb
sbb
call
insb
push
push
addr16
push
or
add
mov
test
ja
clc
jnp
or
push
pop
push
lahf
fwait
loope
ss
mov
and
test
daa
dec
stos
inc
les
outsb
mov
fdiv
and
add
inc
xor
rcrl
sbb
inc
adc
insb
add
sub
mov
subl
and
or
sti
push
loope
jp
mov
fsub
pusha
movsl
ficomps
adc
fsubrl
icebp
mov
enter
pop
xlat
pop
add
adc
je
addr16
add
inc
ljmp
pop
iret
mov
scas
lret
add
xchg
mov
je
add
sub
sub
loop
pop
jge
pushf
mov
mov
jg
mov
jnp
scas
mov
inc
mov
xchg
sbb
sti
ja
adc
mov
enter
pusha
rcl
and
sub
pop
fldenv
arpl
movsb
hlt
push
repz
adc
adc
inc
fidivrs
cmp
xlat
out
xlat
fimuls
mov
lret
cld
mov
push
inc
cmpb
xor
aad
mov
jns
xlat
add
lret
imul
xchg
test
repnz
lods
in
push
pop
stos
mov
adc
push
movl
sbb
mov
jns
or
stc
in
repnz
stc
hlt
mov
sbb
sub
add
add
int
imul
lock
nop
push
and
pop
and
lock
pop
inc
pop
xchg
mov
in
movsb
mov
outsb
dec
add
jge
cs
int
push
test
sbb
into
das
in
loop
mov
xchg
cmp
shl
jle
mov
add
cwtl
pop
daa
lea
or
daa
cmp
imul
mov
imul
jae
pushf
sti
sub
mov
test
imulb
inc
pop
in
js
jle
test
jb
cmp
mov
jle
and
xchg
jle
std
inc
outsb
std
addl
xor
aaa
xchg
pop
js
jmp
lds
dec
sub
scas
ds
jb
jbe
jmp
ds
cmpsb
and
fcoms
mov
aaa
jl
pop
dec
fists
js
push
adc
ficompl
inc
and
ss
es
inc
jle
jecxz
sbb
lcall
cmp
mov
lods
sbb
mov
xchg
or
or
dec
int
xlat
scas
outsb
dec
addr16
cs
stc
mov
fs
or
sub
inc
scas
lcall
lea
dec
pop
sbb
xor
and
sbb
pop
fists
dec
fistps
hlt
or
and
leave
cmpsl
xchg
into
scas
add
push
sbb
sahf
bound
adc
jne
or
inc
jo
fwait
dec
cmpsl
ficomps
loopne
rcll
jno
xor
sub
das
subl
xchg
sub
in
inc
push
daa
lahf
mov
sbb
and
ds
xchg
cmc
xchg
cmp
push
jb
cmp
mov
imull
sub
mov
inc
mov
rcrb
cmp
xchg
mov
enter
sub
xor
xchg
xchg
pop
outsl
cld
pop
dec
jp
test
jg
mov
push
pop
mov
test
dec
xchg
push
and
stos
fidivrl
lods
mov
mov
test
pusha
jbe
mov
pop
or
adc
jl
push
sub
jnp
ds
into
das
arpl
aas
pushl
xchg
inc
je
dec
push
jno
sbb
cmp
aaa
stos
lret
inc
adc
sbb
sbb
inc
mov
push
outsl
or
xchg
or
pushf
sub
dec
stc
call
mov
xchg
lock
mov
mov
mov
pop
mov
fwait
pusha
jbe
jmp
xchg
dec
fwait
imul
xchg
loop
ja
fs
pusha
pop
shlb
push
mov
push
mov
into
adc
or
mov
movsb
fdivl
insb
xor
loop
mov
adc
sbb
mov
pop
es
fsts
push
iret
sub
cmp
push
fstpt
pop
cmp
mov
mov
jg
enter
sub
xchg
mov
std
outsl
fcompl
call
inc
adc
es
cmp
fidivl
mov
lcall
insl
jl
xor
mov
imul
xor
cmp
inc
xlat
cmpsb
mov
sub
arpl
mov
xchg
sbb
xchg
shlb
dec
push
lret
inc
ret
pushf
lods
pop
push
popf
mov
lahf
data16
push
mov
mov
pop
scas
cld
aam
movsb
ror
fcmovb
outsb
mov
push
dec
jl
shll
or
cmp
aas
mov
or
out
xor
adc
push
or
testb
mov
pop
xor
arpl
cmpb
les
xchg
mov
push
mov
xchg
test
jle
fnstcw
xor
mov
pop
int
xor
jmp
ja
adc
adc
lcall
repnz
or
outsl
movsb
mov
push
stos
inc
push
jno
or
adc
jecxz
repz
mov
loopne
aaa
mov
mov
push
inc
iret
scas
and
mov
mull
mov
lret
pusha
add
push
mov
pop
adc
in
mov
rcr
dec
daa
xchg
inc
fldlg2
cwtl
jge
push
jl
inc
and
xchg
mov
xlat
stos
xor
xchg
jnp
cmp
lods
aaa
mov
mov
lea
imul
mov
mov
push
mov
les
int3
fidivl
in
popa
addl
adc
in
cmp
sub
loope
and
sbb
xchg
fs
mov
adc
fmul
xchg
add
shlb
out
ja
hlt
push
loop
ret
aaa
std
jbe
mov
mov
cs
test
cmp
loope
inc
pop
pop
inc
sub
sbb
jl
bound
ds
jp
cli
insl
sti
dec
movsl
jmp
pop
xchg
xor
jl
imul
xor
dec
stos
sbb
scas
jle
mov
adc
mov
jle
cmp
xor
cmp
lods
andl
icebp
subb
ret
inc
xor
mov
jo
mov
mov
or
sub
popf
add
cmp
dec
mov
push
lret
cmp
adc
imul
push
or
or
fsubrs
test
xor
xchg
addl
nop
sti
loope
in
jp
mov
cltd
or
jbe
add
lret
xor
cmp
loopne
mov
stos
pop
push
popf
push
outsb
xor
mov
add
jnp
fnstenv
sub
lea
out
pop
xor
mov
cmovnp
mov
icebp
mov
mul
adc
pop
jecxz
fldcw
dec
pop
repz
pop
pop
out
add
mov
jle
or
pop
push
stc
fnstenv
repz
push
sarb
les
shlb
insl
inc
popf
outsb
cmpsl
stos
jle
xor
gs
mov
dec
into
movsl
nop
add
xchg
xchg
stc
test
hlt
insl
add
stos
xchg
fs
scas
xchg
cmp
pop
imul
mov
or
push
enter
jno
sarb
test
nop
push
pop
pop
pop
pop
jp
add
dec
dec
cli
adc
aam
pop
aaa
push
nop
dec
je
mov
cmp
jmp
in
adc
jae
dec
pop
dec
mov
dec
cmp
cs
jo
xor
fdivrs
test
and
mov
test
cmpsb
mov
aaa
imul
xchg
mov
cmp
xchg
enter
and
int
lock
aam
push
adc
scas
xor
xchg
test
and
xlat
push
das
inc
loop
outsb
jecxz
push
rclb
mov
mov
fcomps
sub
inc
mov
outsb
movsb
jecxz
xchg
loop
scas
aaa
leave
lcall
push
mov
sub
add
andl
mov
clc
psubb
movsb
adc
inc
mov
adc
cltd
in
lret
pushf
or
cld
jae
shrb
push
stos
psadbw
cltd
test
ret
dec
mov
ss
adcl
sahf
mov
xor
test
and
popf
pop
mov
xchg
ret
xchg
imul
or
insl
mov
fwait
mov
add
mov
push
adc
jne
jo
jg
addr16
insb
pop
inc
inc
insb
xor
jne
adc
cmpsl
aad
cmpsb
and
mov
daa
mov
inc
mov
rcrl
push
call
sarb
dec
jo
and
clc
cmpsl
add
jae
popa
mov
push
movsl
shr
pop
xor
xchg
imul
or
stc
mov
or
mov
test
push
aad
in
out
rcll
mov
loop
sbb
shl
cmpsl
lock
xchg
mov
xor
mov
push
aaa
psrld
xchg
int
push
inc
mov
int
insl
mov
sub
shlb
jmp
xor
jg
insb
sbb
neg
cmp
mov
inc
insb
andb
xlat
and
pushf
mov
mov
sub
rorl
or
and
or
out
popf
es
xor
scas
ret
or
pop
shlb
xchg
das
mov
or
negl
aad
orl
add
mov
test
cmp
aas
pop
mov
ss
mov
sti
sub
xor
cmc
imul
cmp
cmp
push
test
lret
lods
inc
mov
aas
aam
je
stc
into
hlt
int
cmpsl
mov
iret
sub
addr16
xchg
lock
sbb
mov
xchg
cs
and
rol
sbb
outsb
jno
in
xchg
xchg
pop
dec
out
jb
adc
xor
mov
shll
or
pop
inc
and
imul
and
mov
jb
jmp
and
and
int
fimull
nop
sub
test
jnp
cmp
ja
lods
jnp
in
test
into
pop
or
roll
ds
jp
jg
pop
rorl
dec
std
hlt
dec
sbb
outsb
or
mov
xlat
fnsave
fwait
subb
fadds
push
out
mov
andl
dec
sub
iret
icebp
fmull
subb
and
cwtl
pop
fstps
mov
xchg
mov
xor
pop
sti
lahf
sub
imul
push
mov
into
jno
mov
push
aas
cmp
repz
pop
fidivl
dec
scas
movzbl
iret
sahf
popf
mov
pop
cmp
mov
aad
repnz
cmp
in
xchg
into
pushf
push
sti
pop
xor
and
outsb
sahf
adc
xchg
or
push
jnp
sahf
add
pop
cmc
clc
jle
xlat
add
push
mov
pop
aas
hlt
mov
inc
stos
jae
clc
movsl
inc
xchg
imul
and
mov
pop
jecxz
jecxz
jl
insb
xchg
ss
pop
jns
xchg
jnp
jecxz
icebp
in
push
aam
push
shlb
mov
call
and
inc
out
mov
or
xor
push
scas
and
loopne
dec
clc
lcall
mov
shlb
insl
jp
inc
int3
adcb
xor
jns
push
fimuls
ret
mov
aam
notb
ja
lahf
cmpsb
adc
pushf
cmpsb
lods
mov
in
xchg
xor
sbb
cmp
test
cmpb
mov
add
filds
mov
test
pop
hlt
push
popl
sti
inc
pop
aam
insb
aas
scas
mov
iret
enter
cmpsl
mov
pslld
nop
loopne
xchg
pop
jg
adc
psadbw
rcl
scas
fisubrl
mov
mov
fdivl
jne
lret
repnz
lret
cmp
into
jns
lock
mov
iret
push
ljmp
enter
or
in
roll
stos
sbb
in
fldl
test
mov
idiv
cld
fucomip
lea
mov
pop
jmp
in
clc
sub
add
or
in
lcall
push
test
fcomip
rol
push
lds
jb
sub
xchg
xor
adc
adc
ret
push
pop
mov
repnz
jae
xchg
xchg
bound
or
imul
arpl
fdivrl
test
and
dec
sub
das
xchg
push
icebp
and
push
pop
icebp
int
add
les
mov
pop
out
into
repz
or
and
fmull
cmc
or
lea
aaa
lret
int3
fists
loope
stc
sub
or
cmc
daa
fnstcw
int3
pop
sub
enter
adc
jge
mov
enter
lods
test
add
pop
lods
test
out
loopne
push
pop
add
jbe
out
dec
lcall
aaa
pop
mov
lods
jno
mov
les
cmpsl
rcll
adc
xchg
add
cmp
cmc
push
cmpsl
lds
aas
loope
cmc
pop
ficomps
cmp
and
jnp
mov
lcall
cmp
push
push
fs
scas
in
cltd
mov
xor
imul
mov
ret
xchg
arpl
pop
nop
fbstp
push
xchg
lahf
iret
mov
xchg
mov
xor
hlt
lret
cmpsb
add
popf
dec
jnp
mov
cmp
mov
addl
cmp
leave
pop
add
sbb
adc
fldl
fsubl
mov
fs
pop
pop
in
in
insl
leave
jns
dec
mov
in
jge
push
ret
or
mov
cmp
pop
daa
test
idiv
dec
arpl
lahf
pop
dec
sarb
sarb
nop
xor
mov
mov
xor
mov
push
mov
and
and
stos
or
inc
shrb
call
or
stos
or
pop
movsl
or
add
decb
dec
iret
into
cmp
test
xchg
mov
mov
testb
addl
or
test
xchg
out
xchg
pushf
sub
sti
test
mov
xor
pop
mov
mov
or
push
push
push
dec
fistpll
pop
in
push
sub
inc
out
cmp
shrb
lret
push
cmpsb
jp
pop
mov
push
add
jo
test
divl
add
std
fcmovb
aaa
gs
stc
nop
in
xor
popa
or
fnsave
xchg
fdivs
pop
scas
push
inc
jns
ficoms
aas
mov
mov
sahf
nop
pop
or
scas
ret
xchg
ret
adc
cmp
dec
inc
mov
test
push
inc
in
lcall
jmp
dec
push
enter
xlat
scas
scas
jp
mov
adc
push
cli
das
insb
adc
ds
jle
outsl
push
inc
fisttpl
out
pop
cmp
sbb
jmp
pop
and
dec
frstor
lds
mov
push
scas
inc
mov
or
les
cmp
shl
sti
jb
aam
mov
scas
outsl
movsl
in
and
xor
out
lret
negl
sbb
mov
nop
mov
jne
or
mov
imul
xor
xchg
mov
movl
mov
pushf
or
fdivr
ljmp
cmp
mov
inc
icebp
jmp
loop
das
push
cmp
imul
fdiv
xor
outsl
and
mov
insl
rcll
jnp
fnstcw
loope
xchg
outsl
pop
jae
mov
push
dec
mov
mov
sub
shlb
popf
ja
pusha
mov
js
aas
mov
jg
cmp
ret
jmp
inc
rorl
inc
fcoml
mov
jne
ljmp
outsb
jns
adc
imul
int3
jbe
or
popa
add
cmp
sub
mov
addr16
ret
lret
inc
sub
gs
aaa
pop
fnstsw
jbe
sub
ret
leave
repnz
and
vmread
rclb
js
lahf
cmp
jb
ja
lret
or
mov
xchg
insb
cmp
xchg
out
imul
xchg
pop
or
fwait
je
lahf
addr16
test
das
test
ret
mov
inc
push
popa
push
mov
mov
mov
mov
int
mov
neg
inc
pop
adc
sbb
call
adc
lret
xor
dec
mov
in
iret
push
in
mov
je
cld
and
jbe
ror
fdivrp
imul
mov
push
popa
mov
or
push
mov
sub
mov
test
and
lock
lock
and
lret
rcr
mov
add
jp
nop
int
inc
dec
into
jae
add
mov
ljmp
hlt
push
jle
pushf
mov
sbb
mulb
mov
push
incb
sub
shlb
mov
sub
sbb
pop
push
insb
adc
mov
mov
addr16
cwtl
lret
ljmp
loop
mov
adc
push
js
mov
cmp
fisubs
fimull
jmp
push
xor
cmc
mov
pop
imul
mov
shlb
rolb
cmp
mov
dec
in
push
pop
add
decl
mov
and
out
add
or
insl
xchg
fwait
addr16
pop
nop
jno
push
pop
push
cltd
sbb
and
adc
dec
andl
ret
pusha
and
lods
xchg
push
mov
pop
xor
fildl
jns
les
imul
push
push
push
mov
ss
mov
ljmp
data16
xchg
cmp
aad
dec
sahf
jne
out
out
lret
ret
cltd
daa
decl
popa
and
pop
dec
fstp
arpl
pusha
and
rcll
lea
xor
adc
ljmp
dec
cmpsl
mov
fsubrs
mov
mov
out
mull
loope
xchg
push
cltd
push
xchg
jne
xchg
push
or
inc
or
mov
mov
or
and
cmp
jo
in
lahf
int3
push
fsubr
mov
push
jae
jmp
cmp
out
lahf
cmp
xor
stos
and
mov
pop
or
mov
shrb
cltd
adc
sub
cs
roll
popf
aaa
cmp
push
ret
jmp
lods
jp
int
bound
cs
test
sub
in
mov
mov
out
in
adc
sti
sbb
mov
leave
in
es
pop
mov
fwait
pusha
pop
cmc
inc
mov
lds
push
in
fs
repnz
sbb
push
enter
adc
xor
pushf
xor
mov
xor
mov
loopne
out
mov
add
push
xor
bound
and
xchg
scas
in
lret
stc
add
dec
xchg
aam
jno
popf
fstps
dec
mov
addr16
leave
sub
rcl
push
dec
fnsave
sbb
jg
insl
sbb
dec
xor
inc
pop
outsl
push
popa
inc
push
sub
xor
test
mov
sub
test
jno
cmpsb
std
inc
jle
push
ret
cmp
push
adc
insb
icebp
rorl
pop
fsubl
adc
bound
inc
cwtl
push
cmpsl
sbb
scas
sub
jne
mov
popf
andl
addb
push
push
ret
daa
and
out
or
movsl
insl
adcl
adc
jmp
imul
sbb
inc
insb
xchg
xor
add
outsl
sub
inc
je
mov
mov
test
jns
lods
xlat
sahf
xchg
in
out
push
fcmovnu
rcrb
push
sbb
and
dec
dec
ljmp
add
jg
and
jne
push
rcl
inc
or
int3
andb
decb
test
sub
mov
and
ss
pushl
push
lret
cmp
push
test
in
mov
or
xorl
jecxz
cltd
mov
adc
lds
jge
cmp
arpl
fs
jp
jbe
sbb
test
aas
sti
clc
loope
pop
loope
nop
mov
pop
add
dec
or
fldcw
sti
flds
sbb
pop
sbb
xor
fsubrp
mov
sarb
ret
xchg
mov
jns
add
jbe
sbb
xchg
sbb
loop
cmp
icebp
stc
cmp
int3
call
xchg
cmp
scas
shrb
test
divb
testl
sub
and
or
add
shlb
out
rcll
lret
mov
push
add
mov
jmp
xor
ret
in
sub
sbb
jl
pop
cwtl
lds
sub
cmpsb
scas
popf
adc
lds
mov
jns
imul
ret
fs
ror
aas
clc
pop
ss
dec
push
cmp
jo
lcall
in
inc
cmp
mov
es
xor
pop
pusha
xlat
mov
mov
inc
adc
std
out
mov
dec
xchg
rcrb
mov
std
cmpl
sub
dec
jne
add
loope
shll
cmpsl
mov
lods
push
sub
scas
stos
shlb
jg
pop
mov
cld
jg
das
inc
imul
adc
push
in
cmp
shl
adc
lret
in
in
in
in
add
cmp
lahf
add
loopne
or
clc
popa
and
and
inc
push
push
adc
test
cli
jo
xchg
push
push
movsb
aam
xchg
push
cld
repnz
jo
jnp
sub
js
aad
and
push
ret
xchg
aad
fimull
sub
lea
or
push
sbb
fnop
popf
pop
jmp
mov
mov
add
jl
pop
rcll
cwtl
dec
adc
mov
mov
and
inc
pop
xor
pop
and
push
out
fadd
cwtl
fcmovbe
and
dec
inc
xlat
sub
lret
popf
sub
xchg
lret
inc
cld
xor
lret
sbb
inc
data16
into
cmp
je
add
push
ss
clc
adc
dec
in
or
ret
mov
aas
lods
fdivr
lret
popa
jl
scas
fcoml
pushf
cwtl
or
sub
int3
or
shll
ljmp
pop
ret
mov
or
aaa
jmp
hlt
xlat
sub
pop
in
inc
sbb
ret
hlt
or
lock
push
scas
sbb
add
pop
cmpsb
adc
lret
push
xchg
std
sub
inc
movsb
add
lret
xor
mov
mov
adcb
enter
sub
mov
cmp
add
mov
pop
mov
add
jle
icebp
push
jae
xchg
lock
dec
push
lods
and
xor
sub
enter
call
pop
xchg
fwait
mov
lds
mov
xor
jmp
out
dec
lahf
imul
out
clc
xchg
fldl
fsubr
xchg
or
dec
jmp
xchg
push
pop
std
sub
jl
push
cli
cmp
dec
mov
int
into
pusha
mov
adc
dec
lret
mov
or
mov
jle
popf
or
cmp
inc
mov
mov
xor
push
test
push
push
cmp
or
xchg
dec
sbb
xor
int3
jne
les
or
mov
movsl
hlt
xchg
repz
out
xor
in
es
adc
inc
mov
lcall
pusha
ret
bound
and
mov
xchg
fidivrs
xor
cmpb
loope
dec
lret
out
push
les
dec
into
aaa
cmpsb
mov
add
jb
and
stos
es
xlat
sbb
mov
sub
stos
das
mov
lret
stos
or
cmp
pop
pushw
inc
dec
inc
aad
movsl
pop
push
mov
sahf
outsl
mov
ret
mov
mov
xchg
pop
pop
pop
jg
jns
movsl
or
cmp
xchg
pushf
enter
in
insl
aas
andb
bound
cmp
push
rorl
or
jl
repz
pop
in
repnz
inc
and
das
in
imul
sub
and
push
jae
fsubl
jle
push
loope
mov
iret
push
jecxz
inc
nop
cli
rolb
and
mov
adc
and
ljmp
fwait
pushf
jns
fildll
sbb
lret
add
dec
filds
mov
scas
sub
jae
popf
fidivl
icebp
insl
and
cmpsl
add
shll
sub
fiaddl
outsl
or
sbb
cmp
gs
fs
sbb
cld
push
daa
and
rcr
mov
add
mov
add
popf
aad
xor
mov
lods
jae
mov
jnp
push
lock
dec
loop
push
insb
mov
fisubl
int
pop
pushf
test
jmp
aad
sub
inc
hlt
or
jo
jne
rclb
outsb
aam
sub
shr
adc
jmp
and
imul
daa
inc
mov
js
in
xchg
mov
lcall
pop
xchg
pop
sbb
push
cltd
xchg
out
pop
pop
and
sbb
in
lods
ljmp
sahf
daa
or
add
xchg
pop
push
inc
inc
hlt
fimull
xchg
js
fldpi
cmp
xor
jnp
fwait
sbb
dec
jbe
push
pushf
aad
cli
pop
leave
cmp
out
or
stos
ja
mov
sub
sub
scas
out
in
jb
cmp
nop
adc
or
mov
jl
lret
imulb
dec
sbb
sub
int3
sub
cmp
mov
push
sbb
loop
int3
ljmp
inc
cmp
xor
pop
sahf
lret
mov
mov
mov
mov
fadd
sub
dec
mov
ja,pn
js
fimuls
fbstp
pusha
fsubr
mov
cld
inc
and
in
adc
jo
fstp
jmp
pop
out
cs
daa
mov
or
clc
sbb
push
rcr
or
nop
mov
pop
test
popa
xchg
inc
sbb
loop
jle
mov
pusha
adc
iret
testb
and
or
enter
aam
xchg
or
cmc
nop
sub
pop
fcomp
mov
fwait
jl
inc
mov
adc
cmpsb
pop
jbe
into
push
out
push
lret
sbb
ljmp
mov
add
cmp
mov
jmp
icebp
jge
push
xchg
mov
jg
dec
cmpsl
cmc
and
mov
adc
cmp
mov
inc
jp
cmc
adcb
add
and
dec
dec
fistpll
lds
mov
cmp
std
inc
into
int
movsl
adc
aad
inc
dec
jno
jnp
loopne
or
pop
scas
lods
mov
xor
repnz
ss
pusha
out
jo
pop
dec
es
xchg
push
dec
pop
inc
pop
push
push
xchg
jno
sahf
xchg
and
cld
dec
push
dec
cwtl
call
xchg
mov
pop
add
pop
pcmpgtb
mov
mov
mov
lcall
mov
ficoms
mov
aam
imul
mov
lret
nop
mov
fs
in
in
sbb
outsl
ret
inc
mov
mov
cmp
mov
mov
dec
or
sub
sub
dec
mov
mov
mov
push
nop
and
cmp
in
gs
push
rcrb
lods
into
pop
and
rorl
in
out
sbb
xlat
test
push
stos
arpl
push
aad
adc
xchg
inc
and
pop
shlb
xchg
or
cmp
ljmp
xor
xchg
lahf
sub
ret
fwait
test
rcrb
add
mov
add
xchg
and
int3
push
movsl
push
inc
sub
pop
outsl
repz
cmp
repnz
rcll
neg
sbb
add
aas
out
cmp
daa
sar
dec
push
stos
addr16
and
sahf
mov
mov
mov
jg
das
mov
cld
xor
das
push
inc
ja
inc
gs
xor
mov
xor
cmp
fdivl
mov
lock
sub
ret
jae
lret
loopne
add
pop
push
push
push
mov
lret
cmc
mov
in
xor
out
loop
clc
ljmp
xchg
adc
adc
sub
div
xor
addr16
loopne
andl
jae
jp
fdivrl
insl
test
sahf
fistpl
cld
stos
dec
xchg
cltd
jl
xlat
and
mov
std
aad
jnp
inc
clc
adc
dec
mov
ficompl
icebp
dec
mov
or
aaa
lret
lret
cmc
repnz
push
adc
daa
insb
xor
roll
sbb
cmpl
mov
mov
imul
rorl
rdpmc
into
mov
sarl
mov
lcall
mov
fwait
jne
jo
push
fidivs
xor
xchg
jo
sbb
popf
sbb
jg
pop
divb
dec
jnp
mov
jns
call
push
outsb
and
sub
pop
mov
add
les
stos
mov
sbb
mov
repz
aas
adc
aaa
sbb
in
adcb
jl
fs
sbb
stc
pop
arpl
or
out
test
jbe
push
int3
call
std
mov
movsb
cld
sub
sub
cs
std
pop
in
cwtl
push
pusha
mov
xor
dec
sahf
dec
jg
rolb
jnp
add
or
loopne
in
mov
cmp
jne
mov
jbe
ja
sub
orl
jmp
dec
fsubrl
mov
mov
ljmp
out
and
xor
jns
push
iret
cld
pop
test
sarb
sbb
das
call
fnstsw
mov
sub
sbb
xor
sbb
out
into
cmc
ljmp
es
in
mov
xchg
mov
cmp
sbb
fnstenv
xchg
je
xchg
jbe
fsubrl
out
and
orb
xor
inc
idiv
fucomi
sti
xlat
ljmp
movsb
pusha
or
inc
or
jne
mov
cmp
data16
add
sub
loope
shlb
dec
pop
pop
dec
icebp
jp
aad
sbb
and
or
xchg
stc
in
test
scas
and
jg
fmuls
sub
popa
pmullw
push
jge
xor
and
jge
xchg
jp
dec
sub
inc
ss
xor
sub
or
test
scas
or
rclb
cmp
pop
cmp
and
imul
cmp
repnz
sti
sti
dec
pop
call
ret
mov
int
std
sub
lahf
mov
push
int
cmpsl
or
iret
cld
mov
adc
and
sbbl
stc
ret
daa
mov
and
and
movb
cmp
insl
std
add
push
inc
test
jle
adc
fcmovb
outsb
je
pop
xchg
aam
cmpb
and
scas
arpl
adc
fdivr
and
fisubrl
int
pop
pop
jl
xor
sub
shll
dec
ds
xchg
push
lods
bound
aad
pop
call
pop
push
inc
push
xchg
aam
xchg
das
ficomps
jb
add
mov
imul
sub
mov
push
adc
rcrb
or
and
das
les
dec
mov
push
test
push
pop
adc
js
scas
mov
inc
idivb
imul
mov
xor
push
pop
dec
sarl
pop
pushf
sbb
xchg
fwait
dec
push
stos
gs
adc
sub
adc
imul
and
adc
push
clc
shl
scas
pop
rcrl
lods
push
lods
push
jne
sbb
fcomp
das
das
stos
sub
mov
dec
push
mov
pop
adc
sub
add
mov
dec
xchg
testb
xlat
and
in
fwait
arpl
loope
pop
push
mov
mov
test
push
jp
aas
stos
in
inc
out
insl
lods
jne
dec
out
xor
ret
clc
idiv
pushl
hlt
add
pop
movsl
rorl
mov
ds
push
or
inc
ds
adc
fdivr
scas
push
xor
mov
adc
jecxz
ja
icebp
popa
mov
je
mov
dec
push
lea
popf
sahf
insl
imul
cmp
dec
mov
inc
push
lahf
fildl
pop
cld
enter
mov
xchg
dec
push
jno
fidivrl
push
mov
mov
les
xchg
std
adc
cltd
lcall
imul
push
pushl
jno
push
and
fistps
jbe
jns
jns
aas
fisubs
out
loopne
aad
jo
dec
sub
insl
inc
or
sub
cs
aas
insb
scas
sti
xor
in
movsl
mov
mov
sbb
add
data16
ret
pop
ret
in
xorl
xchg
mov
out
pop
jp
leave
push
push
xchg
iret
mov
pop
or
cltd
push
pop
loope
jne
in
inc
add
out
add
sub
in
leave
pop
cmp
int3
sub
pop
lahf
mov
or
jo
add
add
ret
pusha
inc
mov
das
mov
inc
in
jbe
pushl
dec
jmp
icebp
xorl
jns
mov
jp
inc
push
lods
aad
lea
cmpsb
fistpl
dec
sbb
add
dec
push
cmp
mov
jno
jnp
adc
inc
cltd
xchg
jp
inc
out
movsl
pop
cltd
mov
ss
mov
hlt
test
mov
ss
add
xor
js
mov
sub
stos
aam
and
sbb
test
push
mov
xor
in
pop
xchg
add
negl
mov
xchg
mov
push
out
inc
movsl
inc
mov
xchg
enter
test
mov
xchg
inc
ss
dec
ljmp
das
cmp
hlt
in
mov
js
push
adc
test
adc
stc
sbb
xchg
mov
dec
ds
fstps
pop
popf
aaa
inc
mov
adc
dec
xor
adc
mov
push
inc
mov
mov
and
adc
mov
mov
in
in
pop
push
arpl
sbb
repz
shrl
fistpll
insb
add
fidivl
add
sub
lret
lds
sub
imul
sub
sti
movsl
fnstenv
pop
movsb
xchg
fisttpll
xchg
dec
add
movsl
cmpsl
xlat
mov
mov
and
subb
inc
xchg
jmp
pop
hlt
cmp
or
and
imul
imull
jg
das
push
out
and
out
sub
popa
add
in
xchg
cli
cmp
rorl
pop
mov
adcb
lcall
je
aam
test
test
pop
jno
mov
and
sbb
hlt
pop
fmul
stos
iret
mov
and
inc
mov
dec
insb
mov
pop
out
inc
je
mov
lahf
mov
and
test
xchg
icebp
js
mov
fbstp
lock
and
inc
out
loopne
int3
sub
pop
mov
or
cmp
loope
dec
mov
aaa
jae
leave
add
test
imul
xchg
push
test
in
data16
jne
mov
sbb
mov
mov
push
jnp
pusha
cwtl
or
mov
popa
iret
lahf
aam
in
mov
sub
insl
xor
mov
insb
lret
pop
inc
bound
xorb
mov
and
test
insl
and
add
gs
das
mov
insl
imul
or
std
sbb
sub
cmp
iret
and
out
in
jge
shlb
add
or
xchg
add
je
shlb
daa
lea
push
nop
lds
push
jg
push
mov
mov
scas
fldcw
pop
or
push
dec
loope
and
xor
sbb
jmp
lock
jle
sbb
jge
out
push
adc
ja
loop
jns
out
mov
cmp
imul
bound
lahf
gs
pop
pop
cmpsl
loope
movsb
lods
add
xor
push
and
xchg
cld
add
push
jecxz
dec
mov
inc
add
pop
sti
and
fistpll
mov
fistl
fadds
hlt
mov
shlb
inc
inc
aaa
call
movl
jae
test
fs
scas
ljmp
je
ret
mul
and
and
jmp
ljmp
jmp
sbb
xchg
mov
jl
jle
adc
dec
inc
push
mov
push
mov
jo
lock
and
cmp
cmc
mov
out
es
in
cld
pop
cmp
cwtl
js
outsl
or
dec
inc
aam
or
sarb
pop
push
xor
lahf
fisttps
pop
or
xor
fistpl
add
jne
and
jecxz
sub
in
adc
dec
mov
xchg
fsubp
jb
push
or
iret
jl
insl
popf
hlt
dec
sub
xchg
mov
inc
mov
pcmpeqb
stos
mov
dec
inc
dec
sbb
push
lahf
out
dec
inc
cmp
sub
js
adc
mov
cld
fs
in
sub
pop
xchg
lret
mov
popa
xor
dec
fwait
insb
int3
sbb
and
aaa
jg
leave
sub
jg
cltd
incb
das
push
or
dec
pop
cmpsb
aad
in
pop
adc
jo
addr16
hlt
dec
push
pop
sti
xor
cmp
adc
jnp
cmp
cmp
mov
cmp
xor
cmp
addl
xchg
push
or
add
xor
lea
add
adc
cmp
imull
jl
cltd
pop
inc
testl
inc
xchg
es
scas
sub
xchg
pop
faddl
jmp
dec
pop
and
addr16
in
xchg
fisubl
mov
shlb
and
mov
jno
insl
or
pop
and
adc
pop
xor
jle
cltd
mov
dec
imul
incb
cmp
out
and
pop
pop
push
xchg
outsb
or
orl
dec
push
xor
movsb
ss
or
cmpsl
dec
lds
push
scas
sti
mov
mov
jns
mulb
adc
mov
aaa
pusha
mov
ret
mov
out
adc
cmpsb
or
mov
mov
fistl
addr16
leave
sti
hlt
pop
xchg
lcall
push
add
mov
mov
push
sti
fsubs
repnz
and
or
push
sbb
sbb
icebp
mov
in
jbe
adc
mov
push
xchg
mov
sub
sbbl
add
out
je
push
jne
jle
lea
out
or
sbb
sar
decb
add
outsl
add
in
js
out
lods
sub
mov
test
or
psllw
jns
es
out
mov
pop
pusha
fwait
rcl
jle
pop
lods
aas
shrb
xchg
jp
clc
mov
xlat
xchg
call
dec
cmpsl
int3
xchg
mov
incb
and
ret
cmpsl
and
adc
xor
pop
ret
sub
test
xlat
xlat
add
sbb
push
rcll
loop
arpl
xor
pop
in
xchg
mov
lret
adc
rorb
gs
ret
pop
mov
scas
sub
lret
sahf
mov
aam
in
out
daa
and
adc
xor
mov
adc
add
scas
ja
loopne
lods
loopne
sbb
xchg
ret
in
mov
movsb
ss
and
push
mov
lret
pop
mov
outsb
mov
adc
sbb
dec
lret
loope
lahf
fcmovu
ret
pusha
add
jmp
cmp
scas
in
push
cmp
je
mov
lret
mov
mov
fdivr
iret
xchg
jg
fdivl
in
dec
add
je
xchg
sub
in
sarl
shll
into
sahf
aam
dec
xchg
mov
cmp
sarb
sbb
and
ds
aaa
xor
decl
inc
jmp
mov
pop
mov
mov
imul
jae
imul
xor
leave
jnp
or
das
push
mov
ficomps
in
mov
jecxz
mov
mov
addr16
xchg
stc
sub
imul
push
shrb
mov
or
cmp
lds
in
loope
ret
push
or
jno
pop
dec
jne
test
sbb
fisubrl
jge
popf
out
xchg
incl
mov
fnstenv
loop
incb
popf
add
sbb
in
jl
pop
mov
out
fcompl
ja
int
sub
xor
cld
add
imul
and
clc
pop
imul
or
imul
and
xchg
sbb
sti
push
sub
roll
adc
adc
ja
loope
xor
cmpsl
add
pop
mov
sbb
je
add
mov
and
mov
test
fcmovu
mov
ja
movsl
inc
scas
push
add
push
rcrb
dec
mov
add
sti
cmp
imul
sub
pop
pop
push
shlb
lret
jle
inc
cmpl
enter
xchg
xor
push
cld
inc
repz
push
add
stos
adc
scas
test
pushf
xor
xor
mov
in
test
push
fistl
cmpsl
dec
lcall
mov
fisubl
sbb
mov
inc
mov
movsl
inc
mov
movsb
mov
add
add
sti
jmp
mull
dec
adc
mov
ret
paddw
in
imul
push
je
arpl
movsl
lods
xchg
outsl
pop
cmp
test
pusha
mov
cmp
int3
jle
mov
mov
das
pop
mov
inc
adc
push
std
and
xor
popf
sub
fdivs
leave
and
or
stc
icebp
fadds
add
pushl
ds
out
lods
movsb
xchg
lahf
ret
add
nop
mov
ret
xor
cwtl
repnz
add
les
das
jge
out
mov
pop
aam
dec
cltd
xchg
xchg
cwtl
cs
push
xchg
imul
in
std
call
push
add
or
repnz
mov
out
cmpsl
sahf
fdivl
ja
mov
cmp
imul
mov
mov
ss
dec
xchg
popf
cmp
mov
cmp
out
xor
mov
cwtl
push
inc
jno
mov
hlt
xor
xor
fisttps
sbb
pop
ret
pop
out
mov
mov
repz
xlat
out
daa
sti
xlat
imul
xchg
dec
gs
and
fwait
add
jnp
pusha
push
xchg
jae
jnp
fwait
push
and
icebp
test
inc
shlb
mov
sbb
movsl
xor
iret
or
sar
adc
das
dec
aaa
mov
push
add
or
add
jo
xchg
xorb
fsub
pop
cmc
out
icebp
in
clc
lret
jno
pop
fistpl
mov
xchg
pusha
mov
insb
xor
outsb
jle
pop
xchg
jecxz
ret
push
jne
aam
add
daa
mov
xchg
ljmp
inc
lret
aas
xchg
jp
add
jge
jg
adc
sub
push
mov
adc
jae
xor
ljmp
mov
lods
jno
xchg
bnd
xor
xchg
inc
repz
pop
mov
out
mov
sub
pop
iret
rcr
outsb
rcrl
int3
xchg
cs
aad
jmp
or
or
mov
and
popf
cld
stc
jne
jb
pop
pop
add
ds
mov
loope
xchg
and
sbb
jl
xlat
mov
aas
xchg
xor
mov
pushf
lcall
jns
or
jmp
addr16
mov
push
shrl
cmp
xor
fldenv
mov
insb
cwtl
push
lcall
outsl
xchg
xchg
push
popf
inc
cmpsl
push
ljmp
mov
push
fistl
jg
cltd
mov
cmp
add
add
cmp
icebp
push
mov
cmp
push
fisubrs
mov
cmp
and
out
je
jo
leave
and
pop
xor
mov
sti
ljmp
mov
push
insb
dec
aam
rcrb
cltd
xchg
jg
jb
jmp
mov
sub
pusha
leave
cmp
add
or
jmp
sub
movsl
rcrl
into
data16
clc
inc
sbb
mov
les
pop
xchg
pop
test
cmp
int3
add
cmc
loope
lret
dec
ret
pop
jg
sub
popa
and
xchg
or
bound
mov
pop
test
jbe
popf
push
ljmp
pop
jb
push
add
adc
cltd
xchg
xor
pop
pop
adcl
test
cwtl
aaa
jp
stos
mov
lahf
outsb
inc
xor
loopne
sub
and
cmc
inc
aad
mov
adc
leave
out
rolb
adc
int
mov
shr
mov
push
insb
js
outsl
dec
or
cmp
out
ljmp
arpl
fwait
test
addr16
jp
bound
push
jg
dec
fistl
cld
incb
loopne
daa
shrb
sbb
outsl
repnz
ret
cltd
scas
and
xchg
xor
fnstenv
push
pop
mov
or
cmp
and
mov
fidivs
or
push
mov
sub
jle
sbb
cmp
xchg
xor
add
inc
push
cmc
xlat
bound
or
add
out
jae
clc
cli
bound
ret
lahf
in
pop
nop
test
dec
scas
outsl
mov
ficomps
xor
insl
lcall
stos
daa
pop
ja
xchg
jbe
cmpsb
lcall
outsb
out
lret
shlb
or
jb
and
scas
push
jmp
mov
into
in
fimull
es
mov
loop
push
call
cmc
mov
push
cltd
fs
mov
clc
sbb
scas
mov
sub
cltd
jo
mov
pusha
mov
xorb
jnp
push
sbb
icebp
sub
cmp
or
in
sub
cmp
fwait
jnp
xchg
into
in
fldcw
push
sahf
inc
enter
jge
jb
idivb
add
adc
adc
mov
sbb
jnp
bound
movsl
stos
pop
xchg
xor
add
push
mov
cwtl
sub
xor
jecxz
enter
mov
imul
and
daa
fdiv
mov
or
leave
notb
mov
leave
rcll
imul
mov
lcall
mov
outsl
jg
out
push
imul
dec
xchg
fwait
inc
push
add
out
cmp
mov
dec
nop
or
push
fidivrl
xorb
std
mov
push
adcb
add
jecxz
minps
ja
pop
icebp
mov
xchg
ret
jmp
dec
sub
scas
adc
fcmovu
mov
repnz
or
aaa
mov
dec
mov
dec
xchg
and
fiaddl
cmpsl
movsb
sbb
rorb
aad
sbb
mov
movsb
push
lret
xchg
pop
cmc
inc
test
jmp
jle
dec
xchg
xchg
mov
mov
stos
dec
sub
inc
jmp
push
les
scas
fnsave
movl
fbld
dec
push
ja
push
mov
lods
out
sti
mov
insb
notb
into
in
imul
jmp
cmp
push
pop
std
cmpl
lea
stc
call
dec
mov
lock
inc
dec
call
push
stos
jg
es
xchg
comiss
push
dec
jne
push
aam
subl
ja
ret
mov
sahf
dec
idivb
dec
jae
scas
inc
int3
insl
xor
and
gs
les
or
xor
lahf
fwait
push
scas
cltd
push
in
lds
hlt
push
ficoml
xchg
sub
roll
xor
repz
in
std
cmpsb
add
lds
and
rcll
xlat
pop
aam
fdivs
mov
popa
or
outsl
inc
xor
scas
fstl
shl
pop
mov
mov
dec
es
xchg
dec
test
repnz
fcom
iret
je
ds
stos
jle
cmc
sbbb
icebp
outsb
pand
mov
cmp
addl
stos
jle
iret
push
mov
pop
in
jnp
dec
popa
push
sub
popa
inc
andb
cmc
sub
lea
sub
int3
fwait
push
cmp
in
add
cltd
cmp
pop
imul
xor
iret
movsl
scas
imul
shr
and
mov
push
xor
mov
xchg
push
call
jle
jb
test
mov
mov
cltd
jl
and
mov
mov
and
pushf
dec
ds
icebp
ret
xchg
dec
dec
sbb
pop
xor
mov
imul
mov
fwait
sub
negl
enter
dec
sub
pop
adc
lods
stos
fdivr
pop
mov
fwait
mov
adc
scas
fsubrl
ljmp
ds
inc
dec
in
in
lcall
cmp
push
pop
add
sbb
lods
out
cltd
hlt
sub
or
movsb
ss
lods
add
lret
insb
mov
je
xchg
subb
or
cmp
push
jge
outsb
repnz
das
lret
cmp
sub
sbb
xor
jae
sbb
fnstenv
repnz
ja
mov
and
adc
in
mov
jns
shr
jge
add
arpl
clc
push
std
mov
test
sbb
fildll
mov
call
pop
ss
xchg
jmp
inc
dec
les
ja
int3
imulb
lret
fisubl
lret
jns
lret
shl
adc
pop
es
aas
mov
mov
push
mov
cmc
pop
pop
cmp
outsb
cmp
pop
mov
mov
int
mov
cmp
add
idivl
aad
sub
aam
dec
pop
xchg
out
jb
shrl
mov
and
scas
cwtl
hlt
clc
and
inc
in
or
adc
xchg
hlt
aad
imul
cld
pop
xor
cltd
xor
xlat
mov
sub
jns
inc
mov
jb
add
test
shlb
lcall
aaa
aaa
mov
adc
nop
int
nop
out
mov
pop
insl
xchg
cwtl
scas
andb
leave
sbb
aaa
fldcw
pop
cld
addl
dec
enter
imul
cmp
sbb
push
mov
inc
mov
cmp
jle
and
push
mov
shll
in
mov
adcl
inc
mov
cmp
add
loope
lret
enter
sub
pop
jge
nop
scas
mov
loop
outsl
jns
jg
hlt
fidivrl
mov
dec
fisubs
add
aam
pop
mov
lods
jmp
stc
dec
enter
movsl
sbb
sub
mov
pop
dec
gs
icebp
sub
inc
pop
imul
mov
inc
push
stos
daa
mov
ljmp
lods
mov
push
adc
hlt
sub
sub
jp
je
sbb
push
imul
pop
push
ljmp
ror
fdivrl
into
insb
popa
montmul
rol
bound
lods
aas
pop
pop
pushf
nop
inc
ffree
add
cmp
xchg
mov
ret
mov
add
xchg
mov
fistps
push
push
xor
arpl
and
push
pop
mov
test
dec
mov
adc
sub
roll
cmpsb
out
lret
and
mov
aad
push
and
or
ja
sahf
add
orl
loopne
add
shl
ss
aaa
mov
inc
xorl
push
adc
dec
cmpsl
mov
push
and
bound
pushf
bound
fwait
push
push
add
push
cmpsl
or
adc
adc
and
pop
mov
cli
lock
xlat
inc
sub
cmp
movsl
dec
sbb
sub
inc
mov
out
loope
insl
and
fwait
cmp
jne
arpl
pop
enter
gs
jl
mov
add
dec
mov
imul
clc
fldl
xchg
push
ret
jle
pop
jg
or
sub
aam
pop
cs
xchg
insb
xchg
insl
hlt
fcomip
icebp
shll
add
aad
in
inc
lret
sub
pop
dec
sub
out
pop
dec
test
in
mov
hlt
ret
push
ljmp
mov
and
or
sub
xchg
push
lahf
sahf
jne
es
mov
js
add
movsb
jl
scas
in
mov
gs
outsl
cmp
arpl
cmc
stos
sbb
mov
test
push
fdivrl
sbb
ret
pop
adc
dec
adc
stc
lcall
je
inc
xor
test
xchg
orb
in
jne
test
ret
sbb
inc
push
mov
lea
test
pop
sub
or
ret
sbb
xchg
mov
ljmp
add
add
push
repnz
and
push
into
lea
lds
in
xchg
pop
call
pop
push
cld
push
rclb
mov
aad
das
pop
out
outsb
add
jns
dec
dec
and
dec
mov
cmpsb
add
sub
fisubs
les
jns
scas
xchg
xorl
cld
in
adc
push
mov
xor
loop
gs
mov
lods
popa
cmp
loopne
add
aam
out
shll
jb
mov
and
xor
stc
or
lea
pop
cmp
sub
bound
insl
insl
movsb
adcl
add
add
gs
scas
sahf
arpl
addl
xchg
xor
mov
xchg
adc
mov
mov
fistpll
and
lds
insb
push
dec
mov
jmp
cwtl
xor
test
in
insb
test
aad
adc
jno
add
and
mov
xor
pop
xchg
rorl
loop
loopne
dec
cli
jb
and
out
out
fistps
ljmp
push
mov
clc
outsb
iret
mov
enter
push
pushaw
xor
sub
arpl
shll
sub
inc
mov
xchg
data16
lock
inc
sbb
std
xchg
insl
mov
cltd
clc
fdivrs
subb
rclb
dec
jb
xchg
shll
jl
sub
pop
adc
dec
rcrb
dec
shrl
jno
cmp
fldcw
out
fistps
dec
ja
fnsave
jne
mov
scas
into
pop
mov
cmc
movsb
into
xchg
pop
ficoms
inc
push
jno
add
outsb
inc
das
inc
or
pusha
lods
lahf
call
test
cmp
adc
jbe
push
pop
mov
pop
pop
xchg
and
stc
xchg
jl
ljmp
inc
lea
addr16
test
mov
add
mov
inc
xor
test
call
rolb
mov
enter
xchg
call
andb
add
popa
jl
ret
push
movsl
enter
dec
rcrb
push
cld
inc
sub
mov
cs
out
fimuls
jle
add
aad
add
or
iret
mov
ja
psubusb
push
jns
lock
enter
jne
in
int3
fcompl
ss
fbld
mov
pop
cmpsl
sub
and
cli
jns
jne
cmp
hlt
jmp
mov
pushf
out
pop
data16
scas
insl
aaa
mov
jnp
mov
arpl
iret
push
push
pop
sbb
mov
dec
push
jns
xor
push
and
aas
sti
ret
push
pop
pusha
ds
sbb
test
lahf
push
in
mov
loopne
mov
iret
jae
add
xchg
fwait
hlt
jmp
out
shll
pop
bound
aas
push
ret
out
dec
leave
add
ds
insl
aam
jno
mov
fnsave
mov
lret
mov
jmp
fisttpll
pop
lcall
insb
nop
mov
test
pop
xor
in
cwtl
xchg
cmpsb
lock
xchg
test
push
sub
lcall
and
push
jge
jbe
fldenv
insb
test
stos
in
pusha
mov
cli
aas
inc
pop
test
mov
sahf
or
mov
cmp
sbb
outsl
jle
int
sbb
sbb
jbe
push
sbb
out
shrb
jle
adc
je
test
fs
ss
aad
mov
int
xor
mov
push
cmp
and
out
insl
rolb
push
jg
push
in
in
push
push
dec
dec
cwtl
call
pop
data16
push
adcl
outsl
jo
mov
lods
insb
push
cmc
mov
mov
les
xchg
push
add
addr16
mov
cmp
mov
lret
aaa
xor
jge
sub
int
js
xor
pop
push
cmp
loop
dec
sub
lock
cmp
sub
fnsave
xlat
js
xor
das
mov
push
inc
jo
mov
push
aam
lcall
inc
leave
sahf
stc
add
xor
sbbl
add
nop
loopne
test
add
ljmp
dec
test
inc
fwait
adc
jl
imul
pop
imul
push
dec
lock
sbb
or
inc
xchg
pop
in
cmpsb
sarb
add
push
mov
xor
mov
or
pop
fisttpll
xchg
jmp
cmp
insb
mov
hlt
jb
aaa
fdivl
or
adc
add
or
xchg
xchg
in
jo
dec
mov
out
push
dec
out
pop
test
jns
sub
add
shl
xor
decb
fs
mov
pop
dec
dec
adc
mov
pop
sub
xchg
jmp
inc
loopne
mov
sar
adc
pop
mov
or
div
adc
frstor
sahf
iret
adc
repnz
sub
and
lret
mov
mov
push
sub
push
push
mov
aad
inc
lea
pop
stos
test
repnz
cmpsl
mov
adc
test
cmp
xchg
xor
test
or
mov
cwtl
sahf
dec
inc
pop
add
repnz
pusha
jbe
cmp
mov
cmp
lea
lahf
xor
iret
or
jno
cmp
mov
fmull
inc
cmp
jg
loopne
fldcw
nop
and
mov
xor
mov
sbb
loope
pop
das
xchg
pcmpeqd
push
fmuls
mov
nop
mov
mov
mov
xchg
pop
adc
or
adcl
leave
rcrb
ret
ja
pop
add
xor
xor
mov
push
into
mov
scas
cltd
imull
pop
mov
roll
dec
ds
mov
lret
mov
punpckhbw
and
push
fiadds
adc
pop
loope
popf
pop
jo
std
int
sub
ret
test
test
arpl
xor
xchg
push
xor
inc
in
mov
pop
out
je
add
inc
mov
fwait
mov
mov
test
pop
inc
popa
sbb
xor
jno
stos
je
stos
push
sahf
jno
adc
aas
les
out
fdivrs
ret
dec
enter
push
mov
out
mov
loopne
cs
test
decb
mov
xlat
gs
xchg
mov
insb
ficoml
jo
jge
incb
push
xor
xor
cwtl
pop
xchg
test
jne
jnp
punpcklwd
pushf
or
xor
ds
mov
push
and
mov
mov
lret
ret
shll
sbb
dec
lods
pusha
and
jecxz
mull
rcll
mov
roll
imul
mov
cmp
fs
ljmp
inc
fcoms
test
fisttpll
cmc
movl
push
inc
dec
test
stc
and
dec
and
fistpl
out
lods
mov
add
lods
or
mov
dec
pop
push
pop
xlat
dec
mov
call
jmp
xor
lods
aad
sahf
in
push
cltd
or
fsts
pop
fwait
in
clc
dec
dec
or
cmp
aas
sahf
popa
inc
out
scas
or
cwtl
push
mov
pop
xchg
push
dec
xlat
xor
mov
xchg
xchg
in
sbb
sub
mov
or
sub
or
push
lea
dec
ljmp
cltd
fs
aam
push
and
out
pop
mov
inc
mov
cltd
add
scas
movsb
enter
pop
mov
xchg
in
inc
aad
repz
sahf
insb
jle
je
dec
clc
push
push
lret
xlat
int3
in
cli
les
adc
js
xchg
repnz
pop
jge
jge
inc
mov
jl
or
jmp
or
data16
lahf
subl
ljmp
outsb
jge
out
sahf
inc
push
mov
dec
call
xchg
push
add
pop
jbe
pop
mov
inc
xchg
or
push
outsb
cli
adc
movsl
int
and
lods
sbb
mov
ljmp
lds
sbb
cmp
pop
cmp
mov
push
sti
cli
jle
sub
push
pop
enter
jecxz
push
lret
inc
push
push
nop
bound
pop
mov
add
and
and
ret
fmull
hlt
out
or
cmp
dec
mov
push
mov
aas
cmp
insl
loope
mov
xchg
enter
sbb
push
clc
adc
jg
lret
test
nop
fsubl
sub
xor
inc
stos
pusha
daa
arpl
imul
lods
jmp
jge
hlt
push
orl
cmc
aam
cmp
push
stos
je
arpl
scas
loop
std
sub
and
fldcw
and
push
in
xor
out
lret
pop
seta
cltd
test
mov
and
sub
jl
xor
jmp
jmp
int3
loop
leave
sbb
add
sub
mov
mov
pop
and
std
jo
or
enter
lret
das
cmp
enter
or
into
popl
pop
ss
cmp
arpl
jns
fcompl
scas
add
dec
pop
aas
xchg
cmp
lret
mov
out
dec
hlt
ja
shlb
mov
arpl
mov
jns
loop
inc
insl
pop
add
stc
sbb
loop
push
mov
mov
dec
repz
mov
jo
stos
je
sub
in
push
dec
fstpt
lds
xchg
aas
sar
push
bound
and
lcall
sub
movsl
xchg
dec
repz
loope
cli
subl
add
push
jo
addr16
mov
cmp
xchg
dec
or
popf
mull
rorb
gs
or
outsb
push
or
subl
sub
les
addr16
xchg
cmp
push
pop
add
push
add
out
or
sub
mov
arpl
dec
sti
dec
push
add
push
push
stos
adc
lahf
xchg
jns
xlat
mov
pop
xchg
push
add
cmp
es
shr
mov
ret
movsb
push
push
rcll
bound
sbb
jnp
inc
or
lcall
aad
repnz
repz
popf
js
dec
adc
outsl
arpl
popl
mov
mov
inc
jnp
mov
imul
ja
mov
xchg
mov
lock
inc
push
mov
jb
mov
push
lret
sub
mov
push
ljmp
mov
jns
test
and
xlat
jnp
mov
out
int3
into
lahf
mov
fcoml
xchg
addr16
int
gs
mov
fldl
jbe
pop
les
repz
outsb
enter
push
sub
mov
sub
int
inc
pusha
rcr
sub
dec
stos
gs
sbb
and
clc
fsubs
stc
mov
push
fucomi
or
jecxz
pop
imul
pop
fbld
and
std
inc
mov
mov
pop
dec
fs
outsb
push
loop
jl
ret
mov
add
sbb
and
jmp
fbld
clc
sbb
xor
sbb
divb
xor
pop
rcll
fs
xchg
sahf
adc
jbe
jb
and
btr
jl
add
dec
mov
mov
movsb
inc
inc
or
pop
mov
push
jnp
insl
test
and
insb
stos
mov
sbb
aad
pop
xor
or
aam
shll
mov
ret
mov
mov
cli
negl
xor
stos
sbb
loop
icebp
or
test
stos
arpl
inc
add
and
test
addr16
mov
and
addr16
cmp
mov
shlb
mov
add
push
jecxz
movsb
pop
int3
sahf
sarl
mov
fstp
mov
pop
decl
inc
test
nop
enter
lahf
ret
adc
imull
in
sub
xor
cmp
test
jge
and
stos
clc
sub
es
movsb
mov
stc
stc
lcall
xchg
jmp
dec
ja
dec
out
div
jo
sub
mov
or
mov
pushf
and
mov
sub
dec
add
subb
notb
in
data16
rolb
push
shll
test
or
xchg
sub
xor
jnp
imul
push
adc
xor
es
push
jg
xchg
les
pop
or
std
sbb
iret
inc
mov
insb
stc
shrl
fs
test
dec
je
out
imul
test
jo
and
lcall
std
jp
and
cmpsb
adc
sub
fidivl
cmp
push
xchg
adc
jno
testb
mov
sbb
lcall
pop
and
dec
mov
stos
xor
pop
add
ljmp
jbe
and
mov
mov
shll
fsts
daa
jbe
shl
andb
incb
jmp
cmpb
cltd
adcb
xlat
test
mov
lds
gs
repnz
sbb
push
mov
arpl
shrl
insb
sti
xlat
subb
fstpt
testb
lcall
mov
jae
sbb
je
add
popl
mov
push
push
lahf
out
fs
movsl
xchg
and
mov
mov
xchg
jmp
subb
enter
lods
mov
mov
ret
xchg
or
mov
mov
push
jp
pop
xchg
jnp
push
dec
lock
or
pushf
lea
in
pop
repnz
sbb
cmp
mov
jbe
roll
cltd
pop
push
push
pop
popa
sbb
in
lret
jbe
and
loope
lock
in
sbb
arpl
je
pop
mov
ret
sub
arpl
jne
in
mov
bound
mov
outsb
pop
mov
pusha
pop
sub
adc
add
rcrl
or
out
xchg
xlat
popa
mov
pop
mov
test
scas
pop
ds
lret
incb
xor
mov
data16
mov
mov
xchg
xchg
or
pop
and
jae
test
insb
sti
ds
les
mov
cmpsb
cld
ja
rcr
dec
fwait
out
repnz
sbb
sarb
lds
jg
jp
popa
add
jo,pn
fnstsw
push
fistps
inc
stos
push
mov
xchg
lahf
pop
pop
dec
push
xor
in
pop
es
loope
push
out
push
push
ficoms
mov
ss
roll
imul
cmp
out
cmp
add
decb
inc
mov
mov
enter
sarl
cld
pop
rolb
lea
adc
andb
pushf
leave
mov
fincstp
pop
sub
xor
fbld
pop
sti
outsl
and
fiadds
xlat
inc
add
cmpl
shll
repnz
pop
xchg
loope
insl
xorl
fcompl
xchg
push
mov
sbb
pop
dec
in
jne
sub
mov
mov
out
jo
fcomi
cmp
sub
pop
aas
mov
xchg
dec
lea
test
ret
rol
mov
sbb
cmp
movsl
movsl
and
pop
push
dec
lcall
scas
cld
or
add
jl
ds
jno
inc
addb
pop
mov
in
xor
rcrb
nop
outsl
jp
mov
inc
fimuls
ljmp
shrl
xchg
sahf
xchg
xchg
inc
data16
push
pop
mov
test
cmpsb
arpl
cld
in
repnz
push
xchg
stos
sbb
andb
fidivl
notb
dec
sbb
jle
pop
push
jecxz
roll
xchg
xchg
push
lods
pop
inc
iret
push
jae
xor
add
daa
xchg
mov
cmc
xlat
mov
lods
and
add
imul
or
ret
xchg
xor
pop
jg
mov
negl
cmp
fildll
or
xor
jmp
mov
nop
mov
add
add
jae
mov
sub
je
fsubrs
inc
lods
inc
outsb
pusha
out
xor
add
dec
dec
sbb
jmp
mov
into
lea
xchg
fstps
add
gs
and
bound
and
hlt
jecxz
adc
dec
or
sbb
leave
sbb
xchg
inc
sarb
push
cmp
ficoml
scas
aaa
or
jne
sahf
es
scas
adc
inc
mov
fnstenv
adc
inc
cmpb
out
into
ljmp
xchg
xchg
movsl
iret
data16
mov
cwtl
out
ret
fcompl
mov
aas
paddw
rorl
add
lods
fwait
cmp
pop
or
sbb
inc
xchg
pop
fs
cmc
in
inc
test
push
jb
add
xlat
dec
mov
pusha
push
mov
mov
sub
jbe
dec
dec
in
xor
push
mov
mov
dec
or
mov
int3
bound
idivl
jl
xor
sub
jb
dec
push
inc
inc
sbb
and
pop
dec
lahf
sub
jecxz
push
xor
add
das
hlt
ljmp
out
jge
push
popa
rclb
out
adc
mov
mulb
push
dec
pop
pop
sbb
repnz
mov
push
push
mov
and
mov
cmc
rol
cmpsl
addr16
mov
str
stos
jp
lcall
pop
pop
mov
ret
mov
xor
or
jge
dec
shrb
lods
sub
ret
cmp
pop
push
pop
jecxz
or
fdivr
fidivs
mov
test
jae
push
loopne
std
icebp
pop
mov
in
mov
adc
dec
popa
mov
mov
inc
rclb
bound
dec
and
push
pop
jmp
dec
je
call
movsb
push
ret
xchg
push
adc
in
jp
adc
rolb
or
push
and
stos
sbb
push
inc
mov
out
test
sbb
ljmp
xchg
pop
cwtl
imul
loope
adc
inc
addl
fs
fs
jp
push
sub
ds
push
dec
xorb
lock
pop
faddl
dec
je
fidivs
lock
out
mov
mov
jb
mov
out
and
fdivl
inc
push
add
jo
scas
pop
pushf
dec
push
dec
je
inc
in
inc
test
add
and
xchg
sbb
push
or
mov
ret
push
sbb
lcall
fldenv
cmpsl
mov
aas
push
data16
mov
test
repnz
or
push
adc
push
in
out
cmp
icebp
xlat
call
arpl
jl
lock
rol
push
dec
cs
jge
aaa
dec
mov
jae
push
fidivs
or
sub
or
repnz
push
mov
imul
lret
subb
call
negb
out
into
sbb
rorb
push
loopne,pn
add
lds
adc
xchg
lret
jns
je
out
hlt
or
lret
jg
sub
loope
or
pop
movsl
and
in
pop
mov
jmp
adc
push
fstpl
xor
aad
rol
xorl
or
push
sti
add
push
mov
inc
xchg
lods
cltd
lcall
cmp
cli
test
inc
mov
nop
stc
sub
lret
xchg
test
fsubl
das
std
pop
or
in
jle
or
or
cwtl
inc
in
mov
js,pt
mov
sti
sti
sub
icebp
or
cld
shrb
pushf
sub
sbb
xchg
stos
fisubs
insl
loope
and
lods
sahf
repz
xchg
cmp
lret
daa
mov
rcrl
adc
mov
push
jle
jg
arpl
out
or
aad
mov
inc
pop
js
in
out
mov
mov
cmpsl
push
push
mov
lahf
movsl
cwtl
xchg
xchg
inc
movsb
fists
mov
add
addb
xor
rorb
xchg
mov
mov
mov
jb
insb
jl
leave
sub
mov
pop
int
icebp
jle
dec
fsubr
into
jge
pop
int
cld
jecxz
les
ljmp
loop
fwait
sub
pop
mov
mov
lock
dec
ss
dec
sti
xchg
dec
dec
fdivrl
sub
imul
in
dec
jns
add
shll
inc
lock
dec
sahf
cltd
push
fwait
cmp
in
stos
mov
stc
imul
push
scas
inc
std
push
in
cmpsb
clc
stc
les
imul
ret
daa
repz
in
popa
movsl
out
out
or
sarl
pushf
or
or
shl
pushf
mov
xor
dec
dec
inc
imul
xlat
dec
lahf
mov
or
fs
mulb
jbe
pusha
in
and
mov
adc
sub
cs
mov
gs
xchg
imul
pop
enter
xchg
pop
jbe
lods
xor
dec
mov
addr16
adc
jp
cmp
and
orl
or
enter
in
fwait
mov
lock
icebp
pop
jl
cltd
lret
jbe
icebp
fs
mov
push
and
out
mov
mov
and
fmuls
jge
jne
jbe
push
ds
sub
xor
or
sbb
jno
jmp
mov
mov
push
sub
lret
pop
jge
cld
jl
xchg
das
xchg
repnz
test
xor
push
test
cmpsl
mov
adcb
scas
adc
into
jmp
lret
ja
mov
cmc
pusha
fisubrl
mov
inc
imul
push
shl
fisubrl
dec
sbb
xor
out
test
ret
cmpsb
add
aaa
adc
push
sti
fidivl
adc
cs
aam
inc
pop
cld
ret
push
fldt
mull
push
addr16
rcrb
add
stos
pop
dec
shll
mov
mov
int
jo
push
ljmp
add
inc
std
push
dec
mov
aam
popf
sbb
cmp
sub
fsubr
daa
jmp
cvtpi2ps
push
popa
push
scas
and
push
pop
jecxz
inc
fsubs
or
and
mov
fidivrs
int3
inc
repz
sahf
ljmp
push
mov
insb
je
mov
pusha
dec
sbb
and
fwait
cmp
push
mov
cmpsb
ljmp
mov
mov
cmp
rclb
jae
mov
push
pop
in
mov
mov
xor
mov
jmp
lods
jbe
add
sub
lock
pushl
jle
adcl
push
pop
lret
mov
cmp
xor
outsb
outsl
lret
sub
jne
ret
push
ss
idivb
adc
ret
ss
lods
pop
mov
xor
shlb
js
mov
dec
iret
das
sarl
pop
pop
mov
adc
clc
or
clc
sbb
cwtl
je
jle
clc
lock
call
ret
add
ss
clc
pusha
outsb
jmp
sbb
mov
out
fidivrl
mov
ss
jmp
or
mov
jmp
sbbl
dec
push
xorl
push
cmp
and
and
divl
mov
mov
fdivs
nopl
out
or
adc
out
push
push
jmp
std
cmp
loop
loope
mov
pop
push
dec
mov
pushf
pop
adc
pop
mov
cmp
or
int3
jmp
dec
or
ret
and
mov
mov
insb
mov
leave
insb
js
movsb
mov
dec
pop
icebp
loop
or
sub
sub
mov
add
or
xchg
or
push
xlat
xchg
xchg
mov
add
test
mov
xlat
arpl
mov
lret
inc
adc
rcrl
lcall
aam
js
sbb
or
in
rcl
jg
out
sub
xchg
cmp
out
xchg
push
push
test
xchg
inc
out
and
inc
loope
pop
mov
imul
ljmp
ret
xlat
mov
mov
in
aas
das
loopne
fistps
pop
in
ror
leave
pop
jg
cld
adc
dec
jb
ss
mov
pop
mov
fidivl
in
mov
cltd
inc
and
mov
cmpb
jle
push
outsb
push
cltd
dec
sub
loope
dec
cs
sbb
cmpsb
out
aaa
arpl
xchg
in
add
lea
stos
notb
push
add
xchg
mov
cltd
or
xor
sub
inc
negl
outsb
push
addr16
mov
out
data16
jbe
hlt
push
bound
shrl
xchg
xor
push
mov
test
jg
mov
mov
lahf
jnp
testb
add
ss
mov
fdivp
rclb
inc
clc
fldcw
jg
xor
cmpsl
xchg
push
negb
xlat
mov
mov
cmp
add
adc
je
xor
out
pop
inc
xchg
cmpl
insb
sub
lods
mov
fstp
mov
push
dec
mov
sub
mov
or
lods
or
jno
mov
inc
ret
shlb
mov
movsl
dec
mov
push
fcomps
je
movsl
xchg
sbb
push
push
mov
icebp
xlat
push
ja
mov
leave
push
push
pusha
push
push
xchg
ds
lret
cmp
push
xchg
out
cmp
inc
call
mov
or
xchg
aas
xlat
je
andl
push
push
icebp
mov
cli
fcmovnbe
jne
lret
adc
or
sti
mov
mov
lea
int3
jp
clc
pop
jnp
lods
pop
icebp
aad
movsl
ret
outsb
pop
mov
add
cmp
mov
mov
jg
cmp
loop
lret
mov
push
subb
adc
mov
jecxz
xchg
nop
or
dec
shll
rcr
mov
cmp
or
push
adc
mov
add
cmp
jg
and
mov
dec
mov
ja
push
aad
and
ss
pop
in
pop
aad
push
xchg
inc
push
mov
xchg
xchg
lea
cmp
pop
mov
flds
jb
dec
dec
add
xchg
mov
aad
loopne
cwtl
lock
and
dec
fstpl
mov
movsl
int
dec
adc
sbb
out
mov
aas
xor
out
push
outsl
pop
iret
sub
stc
addr16
push
repz
out
test
into
jmp
mov
xor
mov
icebp
les
aad
push
jbe
cmp
jge
dec
or
cwtl
lock
jle
jmp
jno
fsubl
gs
mov
pcmpgtw
sub
loopne
sub
dec
xchg
sub
cmc
mov
mov
or
and
addr16
add
imul
xor
xor
je
xchg
jp
out
dec
jnp
cmpsb
ficompl
and
jne
in
hlt
add
inc
aad
cmp
test
insl
sub
pop
enter
pop
and
inc
lret
mov
rol
push
adc
mov
fstpl
xlat
xor
ljmp
popf
scas
inc
in
stos
mov
cwtl
jo
jp
fistps
xchg
push
fidivrs
push
sub
fsub
loopne
out
mov
xchg
jecxz
outsb
jne
aad
xlat
nop
dec
and
jns
fldt
nop
ret
bsr
fsubrl
jb
xchg
aaa
xchg
mov
xchg
adc
scas
jl
in
sti
test
daa
xchg
xlat
xor
xor
mov
inc
cmp
inc
sahf
stos
or
mov
jge
mov
mov
arpl
in
imul
xchg
cmpsl
pop
aaa
jbe
xor
and
pushl
sahf
or
mov
mov
push
jno
stc
jge
xor
sarl
push
xor
nop
mov
pop
popa
mov
push
mov
inc
mov
outsl
push
xchg
mov
inc
les
sbb
pop
and
and
test
outsl
psadbw
sbb
xor
sbb
addr16
and
scas
jno
int3
fwait
enter
jns
lahf
adc
fisubs
cmp
jp
xor
into
push
xchg
imul
ss
push
stos
pop
jp
mov
icebp
jge
out
inc
xchg
and
ljmp
int
mov
xor
sbb
stos
insb
loope
jecxz
int
repnz
test
pop
lahf
pusha
notb
mov
xchg
mov
cmp
push
xchg
cltd
test
js
mov
les
call
cwtl
adc
push
rcrb
fwait
inc
cmp
push
dec
popf
mov
loopne
push
or
pop
push
xchg
sub
xor
movl
lods
sub
xor
cwtl
out
sbb
cld
ss
into
lods
addr16
in
addr16
cwtl
sbb
sti
dec
js
in
mov
cltd
daa
cmp
enter
js
leave
hlt
jmp
and
dec
or
dec
sbb
sbb
sub
loope
adc
xor
in
mov
scas
lahf
loope
mov
fnstsw
lret
inc
xchg
inc
adc
cmp
jae
aad
or
iret
lcall
pop
pop
mov
sub
cmp
pop
mov
cltd
sbb
mov
sbb
stc
push
test
inc
push
inc
lret
es
sbb
cmp
aas
lds
xor
xor
lret
sti
push
icebp
xor
cmp
test
sub
movsb
nop
shlb
jl
xbegin
pop
mov
add
lea
xlat
lods
ret
lret
arpl
add
pop
push
pop
push
in
aaa
xor
and
sub
divl
out
mull
cmp
mov
das
add
loopne
movsl
mov
or
add
fisttps
cli
and
insl
jge
pop
jl
cs
mov
adc
mov
xchg
std
mov
outsl
xchg
xor
adc
mov
or
fldl2t
jnp
js
cmp
pop
cmp
jo
test
pusha
xchg
mov
xor
mov
xor
scas
push
in
lock
iret
or
jecxz
pop
pushf
adc
and
fcomps
inc
lahf
or
les
nop
cmp
push
mov
mov
fidivs
in
ret
mov
sbb
shrl
push
or
xor
loopne
push
mov
lea
mov
inc
outsb
push
imul
pop
imul
les
cmpsl
push
inc
insl
sub
fdiv
mov
add
fbld
in
adcb
lea
jne
fists
ds
xor
inc
mov
sub
lods
sbb
xor
mov
mov
pop
ss
std
mov
test
insb
mov
fcmovb
cs
frstor
movsb
xchg
pop
leave
mov
sahf
pop
lret
cwtl
add
and
arpl
hlt
call
xor
imulb
inc
mov
adc
sub
aaa
movsl
dec
out
sub
int3
es
pop
imul
dec
xor
push
inc
or
dec
cmp
and
jns
dec
mov
push
lret
jp
jl
scas
iret
ja
mov
xchg
jns
pop
cs
pusha
int
push
cltd
outsl
dec
mov
adc
adc
cli
idivb
aas
clc
nop
dec
lret
pusha
idivl
arpl
push
cwtl
jb
mov
cld
sbb
cld
cwtl
fsts
adc
xlat
ja
mov
rorl
jmp
icebp
lahf
gs
push
and
insl
inc
mov
and
nop
xchg
or
dec
repnz
scas
fwait
imul
jecxz
hlt
and
sbb
or
hlt
xchg
xchg
imul
cmp
inc
mov
mov
je
xor
lds
mov
std
ds
test
lahf
sbbb
xor
pmulhw
add
out
xchg
xchg
mov
pop
inc
hlt
stos
mov
in
sub
adc
push
lcall
arpl
ds
mov
xchg
leave
xchg
sub
in
xchg
cmp
nop
mov
add
or
cmp
cmp
inc
and
loope
fsts
push
mov
xor
pusha
jns
fisttps
jl
and
gs
and
or
icebp
push
aam
mov
mov
loope
inc
adc
les
cmp
ss
ret
fnstenv
add
lret
out
in
mov
call
loopne
xor
cltd
push
sub
nop
or
icebp
lcall
movsb
daa
imul
test
fwait
push
mov
adcl
mov
fcmovnbe
sbb
or
push
adcl
rol
andb
dec
push
lcall
and
test
aam
adc
inc
adc
movmskps
fsubrp
insl
push
movsl
aas
mov
xor
xchg
sbb
loopne
scas
fimuls
stos
sbb
lds
inc
ret
pop
mov
adc
or
sarl
out
shrb
cmp
leave
aaa
imul
jl
sub
pop
or
mov
clc
fsts
adc
mov
ljmp
push
or
out
mov
xor
mov
or
mov
lea
hlt
cmc
adcb
sbb
dec
repz
fisttpl
jne
pop
shll
and
adc
dec
xor
aaa
cmpsl
call
in
call
movsb
or
iret
or
push
pop
pop
insl
jb
mov
sbb
fidivs
leave
push
sbb
adc
pop
and
out
mov
cmp
xor
jge
das
lods
aaa
add
aaa
dec
into
test
mov
sbb
push
adc
jae
push
jl
sbb
sahf
shll
bound
xchg
imul
cmp
sub
adc
stc
in
out
push
inc
mov
test
pop
in
mov
pop
lahf
pushf
cmpl
xchg
js
outsl
mov
inc
ret
roll
pop
inc
imul
in
jmp
jmp
es
push
loopne
negb
pop
mov
and
xor
mov
std
enter
daa
add
xchg
and
scas
cli
roll
rcrl
daa
inc
and
inc
jbe
iret
mov
cld
push
fwait
jns
lock
adc
sbb
inc
adc
sub
movsb
push
mov
outsl
insl
adc
repz
scas
rol
add
or
je
loop
mov
push
push
push
imul
mov
imul
jns
stos
xchg
mov
jno
out
pop
add
sarb
rorb
jo
xchg
or
push
frstor
in
dec
iret
mov
ss
mov
dec
pop
inc
push
das
cmp
lret
or
frstor
fildll
pop
and
cmc
push
std
inc
fidivs
mov
fnstenv
mov
mov
push
std
out
test
pop
cmp
int
or
repnz
and
lods
inc
loop
mov
inc
aas
xchg
cltd
test
and
inc
insb
movsb
dec
dec
inc
pop
mov
push
daa
jo
push
jo
push
add
lea
pusha
data16
mov
mov
bound
push
sbb
push
jo
scas
sbb
xor
or
fisubrs
sub
stos
aas
pop
xlat
mov
daa
out
sbb
std
sarl
das
stos
movsb
sti
fldt
in
bsr
roll
lea
mov
arpl
mov
xor
aad
pop
cmc
cmp
faddl
xor
cmp
sbb
hlt
mov
ss
sahf
scas
std
inc
arpl
dec
xchg
push
stc
fisttpl
sub
add
mov
setnp
cmp
mov
lret
dec
cwtl
icebp
mov
ret
sarl
xchg
call
xchg
adc
push
push
fwait
xchg
aas
cltd
je
mov
cltd
sti
pop
adc
das
cmp
sub
push
ljmp
mov
adc
pop
std
push
jge
push
test
mov
icebp
aam
push
sub
pop
out
xor
inc
jg
mov
mov
jo
scas
sub
push
dec
shrb
and
add
mov
mov
fnsave
and
mov
adc
out
shrb
sbb
jge
jns
cmp
aas
ret
cmp
cmp
jae
push
mov
dec
cmp
mov
mov
fmull
jne
jecxz
and
cmp
push
imul
sahf
repnz
jg
das
sbbl
pop
mov
and
push
movsb
sub
aas
xchg
mov
jne
add
in
sub
adc
icebp
push
xlat
icebp
push
push
mov
dec
stos
sub
lret
inc
jns
ret
pop
push
mov
das
fimull
xor
push
pop
shlb
popf
pop
jmp
addr16
add
jg
imul
dec
sbb
icebp
add
mov
or
sahf
mov
lea
dec
and
pop
test
push
jno
inc
iret
jge
dec
cmp
mov
fdivrp
movsl
sub
and
xor
cld
or
iret
movsb
sub
ret
dec
sahf
pop
mov
loopne
daa
pop
xor
jnp
push
push
ficomps
push
pop
mov
or
fsubrs
cli
pop
js
ret
aaa
bound
test
mov
imul
test
hlt
mov
movsb
clc
and
sub
xchg
cmpsl
mov
mov
mov
aas
nop
mov
cmc
imul
mov
push
mov
enter
inc
mov
xor
pop
in
xchg
arpl
and
xchg
inc
sbb
aam
fisttps
cmpsl
data16
jb
dec
mov
pop
sub
mov
adc
pop
ss
aad
gs
lods
inc
mov
mov
jmp
inc
xchg
or
orb
sub
push
xor
dec
push
idivb
dec
xor
loope
xchg
aad
dec
stc
lahf
mov
mov
sub
jno
sbb
push
sahf
fadds
push
add
mov
aas
dec
pushf
repnz
add
repz
das
jmp
jo
es
stos
dec
lret
sbb
xchg
push
lods
gs
loop
mov
inc
xchg
in
lock
dec
jns
popf
or
addr16
lcall
dec
out
scas
mov
jne
lods
stc
lock
dec
lods
mov
scas
xchg
fstl
pop
inc
jecxz
cs
out
les
and
jecxz
sbbb
push
xor
ljmp
xchg
push
lds
ret
ret
jle
jmp
rorb
sbb
sbb
dec
pop
cmpsb
pusha
xchg
lock
repnz
leave
jbe
jp
sub
inc
dec
fimull
mov
je
les
psrlq
test
push
lds
popa
mov
jo
test
into
mov
push
xor
sub
sti
mov
mov
jb
fdivrs
mov
and
lods
lods
ret
inc
sbb
sbb
push
adc
inc
and
fiaddl
subl
insb
testb
fcomi
fnstsw
or
stos
adc
das
or
je
cltd
sbb
push
insb
popa
xchg
xchg
cli
and
scas
out
or
mov
sbb
xor
jae
and
pop
xchg
pusha
jecxz
inc
or
cwtl
xor
cmp
test
insl
incb
sbb
or
push
mov
dec
sbb
je
mov
jo
ret
ja
or
cmp
pop
fsts
jecxz
sub
cmp
xchg
adc
inc
hlt
cmc
and
into
or
lcall
add
mov
adcl
mov
ret
pushf
repnz
icebp
cmp
lods
adc
outsb
inc
sub
aaa
das
xchg
adcl
test
push
pop
cmc
loop
add
mov
jecxz
or
in
xor
enter
sbb
xchg
dec
aam
cmp
cmp
xchg
cld
mov
rol
sbbl
dec
jecxz
test
and
out
je
xchg
rorb
add
ljmp
cmp
gs
mov
std
inc
clc
rcll
sbb
xchg
clc
out
into
xor
testl
stc
dec
jbe
push
inc
into
mov
mov
jnp
and
push
push
adc
cmp
hlt
sub
sbb
or
sub
add
call
pop
push
roll
shl
jge
xor
cmp
repz
cltd
mov
jge
sarb
and
jo
mov
insl
or
sbb
sub
pop
cmp
ja
add
pop
push
and
out
dec
push
pop
cmp
pop
push
enter
sti
adc
pushf
js
rorl
gs
int3
in
outsb
adc
pop
jbe
into
or
push
int3
rcrb
int3
mov
xchg
mov
movsl
outsb
and
shll
add
push
sti
cmpsb
inc
inc
dec
test
xchg
jge
fidivs
push
or
add
xor
sub
jge
or
pop
or
add
imul
fmuls
dec
loopne
dec
pusha
xlat
je
push
mov
ja
jecxz
cs
mov
call
pop
mov
mov
cwtl
xchg
dec
xchg
js
cld
sbbb
mov
out
pop
sti
insl
adc
dec
iret
call
gs
insl
add
jbe
pusha
rclb
add
repz
jp
or
mov
out
lock
xor
mov
xlat
adc
sub
jo
mov
cli
adc
xor
inc
cmc
push
fmul
in
in
dec
in
gs
daa
jmp
mov
rorw
adc
push
testb
ret
js
jp
movsl
jne
mov
mov
adc
and
std
push
imull
imul
leave
out
dec
pop
inc
xchg
out
jbe
call
cmp
faddl
mov
mov
iret
cmp
into
pop
das
inc
int
fcmovu
xor
jmp
dec
and
mov
sbb
clc
push
cs
movsb
xchg
fimull
insb
mov
adc
pop
movsb
push
jae
mov
test
sbb
push
out
push
lret
mov
out
xchg
fdiv
push
sub
sub
mov
mov
and
cmp
aas
sub
out
mov
mov
inc
adc
sub
lcall
or
mov
inc
fwait
xor
xor
lret
sub
aad
in
int3
scas
sbb
hlt
jecxz
in
xchg
mov
sbb
push
jmp
or
incb
dec
jnp
lcall
aam
imul
lcall
inc
dec
xor
pop
fcoml
cmp
std
or
push
jbe
inc
xchg
fbld
xor
and
cmpsb
dec
mov
jno
cmp
jl
mov
pop
xchg
cli
pop
in
sub
sbb
fwait
add
pop
in
and
js
inc
xor
shl
out
sub
daa
sbb
lock
and
das
mov
pop
stos
push
inc
push
mov
insl
lret
leave
and
into
insl
popf
xor
rep
push
xor
lods
pop
out
aad
fcomip
mov
pushf
jecxz
aas
mov
mov
mov
xlat
cmp
mov
mov
xchg
orb
popa
xchg
flds
pop
scas
es
sbb
mov
out
jg
push
mov
jo
xor
mov
out
insb
push
cs
aaa
xorb
test
mov
cmp
cmp
outsl
pop
xchg
cltd
jb
sti
pop
movsb
push
loop
mov
mull
push
shll
daa
pop
xor
fists
or
xchg
mov
mov
adc
cmpsb
sahf
sbb
mov
jge
clc
push
jl
or
or
popa
iret
fbld
hlt
cmp
or
jns
inc
lea
test
and
les
dec
xchg
fdivrs
or
ret
sub
mov
mov
imul
lret
xor
push
into
jg
xchg
scas
sbb
xor
std
dec
gs
cmp
cmc
fstpt
fdiv
ljmp
mov
ss
mov
inc
addr16
mov
push
jno
lods
or
or
push
jbe
ja
push
xchg
mov
xor
ss
lcall
and
or
pop
xchg
mulb
addr16
insl
inc
mov
fwait
mov
jns
or
sbb
and
cmc
into
arpl
push
jne
xchg
mov
pusha
sub
mov
or
fsub
ds
push
in
sbb
push
inc
mov
cmp
add
xchg
sahf
ret
jg
mov
cmp
fdiv
dec
mov
clc
test
leave
andl
repnz
mov
sti
xlat
sbb
pop
std
aad
mov
jmp
aaa
incb
lret
add
and
xor
sub
mov
sar
lcall
pop
ja
push
sbb
pop
mov
and
fbld
cmc
clc
jmp
push
sbb
sub
mov
add
jge
out
sub
mov
ficompl
ja
test
outsb
aas
mov
mov
adc
sub
mov
cld
jl
sbb
fsubl
outsb
adc
mov
xor
dec
daa
cmpsb
and
adc
inc
sarb
test
ret
jnp
aas
adc
sub
xchg
sbb
mov
outsl
push
and
mov
inc
arpl
aas
xchg
mov
jle
inc
int3
lret
push
in
addb
pop
sbb
push
push
and
shlb
rcrb
inc
sbb
clc
push
sub
sahf
adcb
pop
cs
push
fisubrl
call
push
jo
xor
cmpsl
cmp
dec
lods
leave
pusha
pushf
fisubs
fsubl
outsl
iret
orl
inc
dec
jae
cmovs
jl
lods
lahf
int
data16
cmp
pop
push
or
insb
int
push
push
jae
jmp
lds
call
add
lods
cmpsl
xchg
mov
rcrb
push
add
popf
mov
inc
dec
or
pop
jno
loop,pn
push
in
sbb
dec
lret
mov
call
mov
sarl
adc
fwait
and
mov
lods
lret
push
cmpsb
jle
push
and
dec
or
jne
cmp
into
cmp
sub
iret
call
sub
and
lea
push
or
test
mov
mov
jno
fimull
xchg
push
cmpsl
idiv
movl
inc
mov
aaa
test
push
ss
sti
and
mov
jae
dec
and
lea
or
aas
mov
inc
mul
test
adcl
cli
mov
in
mov
sub
movsb
inc
les
sub
mov
sub
test
inc
xorl
xchg
jl
jl
in
lock
fcomp
mov
test
test
xor
xchg
xchg
push
cmpsl
sbbb
push
int3
or
dec
push
push
rcrl
repz
push
adc
into
lret
cmpsb
mov
adc
shrb
add
aam
push
xor
and
or
mov
ljmp
dec
mov
xchg
add
arpl
dec
and
pop
insb
sbb
mov
pop
jo
or
lcall
cmp
cmp
movsl
mov
loop
insl
xchg
out
repnz
jge
lods
push
xor
pop
sahf
pop
adc
jg
xor
pushf
stos
pop
sbb
push
pop
pop
and
push
ror
cmp
popa
sahf
loop
adc
in
test
rcll
sbb
dec
popa
add
mov
and
push
mov
pop
add
mov
mov
and
inc
xchg
cli
fs
xor
nop
out
push
sbb
ja
mov
xchg
dec
icebp
pushf
mov
xchg
pushf
icebp
adc
aaa
mov
sbb
sbb
iret
imul
das
cmp
iret
mov
call
mov
mov
jmp
mov
mov
test
ds
inc
and
xor
jecxz
sti
sahf
imul
push
sub
int3
sahf
push
jbe
dec
mov
add
mov
lods
fistl
arpl
scas
jmp
ret
push
orl
lahf
insl
xor
mov
add
aaa
std
mov
stc
push
mov
xchg
mov
or
out
xor
lods
ret
add
cwtl
cld
sub
in
xorb
movsl
and
mov
adcl
cmp
fadd
out
out
ret
push
int3
cmpsl
andb
add
jle
cs
sbb
and
iret
push
xchg
clc
mov
dec
cmpl
xchg
rcll
mov
pop
dec
insb
dec
mov
pop
shll
ficoms
mov
fmulp
xor
fwait
sbb
aaa
adc
cwtl
add
dec
and
ror
or
les
andb
aaa
fbstp
and
cltd
push
aam
adc
loop
xor
pop
mov
pop
enter
dec
and
push
lods
popa
mov
hlt
ja
fisubrs
mov
or
ret
push
mov
dec
pop
dec
xor
fsubrp
rol
mull
jmp
xchg
ds
imul
add
pop
pop
mov
into
push
pop
xchg
mov
sub
push
xchg
mov
dec
jo
lahf
outsb
sub
xorb
repz
sub
shll
pop
xchg
gs
pushf
xor
sbb
jle
push
dec
inc
lea
jge
mov
push
jmp
and
mov
call
mov
push
cmp
mov
mov
cmp
loope
sbb
sub
lcall
rdtsc
jns
dec
in
jbe
cltd
or
jmp
mov
in
cmp
movsb
add
inc
jmp
roll
pop
pop
xchg
jle
fcompl
jne
std
cli
pop
sti
cld
mov
mov
adc
mov
sub
mov
adc
addr16
and
pop
and
stc
mov
mov
jnp
sbb
fists
sbb
push
aam
mov
icebp
and
sub
cmp
das
push
sbb
xorl
adc
outsl
out
std
pop
xchg
stos
sahf
cmc
es
adc
mov
mov
xchg
outsb
add
in
mov
jne
stc
sbb
fwait
push
adc
pop
add
push
test
fisttps
outsl
pop
sub
scas
push
push
sahf
rolb
jge
mov
sub
xor
in
lret
iret
aaa
xchg
out
push
test
call
or
mov
sahf
xchg
adc
lret
adc
adc
sub
inc
pushf
fildll
jp
lds
mov
and
inc
arpl
in
lock
pushf
xlat
adc
insb
repnz
clc
call
in
mov
cwtl
jl
and
push
bound
or
test
bound
inc
dec
jbe
mov
enter
aas
jns
pop
test
xor
das
cli
sbb
sub
cli
sbb
fbstp
setp
lret
sahf
add
cmp
push
sub
imul
in
int
popa
xlat
movsb
sbb
gs
jle
out
test
xlat
scas
stc
stos
rcr
lods
sbb
push
pop
push
test
sahf
roll
mov
fsubrs
nop
in
or
dec
or
and
in
shll
in
xchg
mov
mov
xchg
repz
dec
imul
iret
and
dec
aad
shlb
shl
add
add
push
push
fdiv
mov
mov
push
jle
mov
xchg
pop
das
inc
mov
clc
mov
and
add
loop
push
rorl
divb
jb
call
les
fisttpl
pushw
int3
mov
cwtl
xor
test
test
sbb
scas
mov
xlat
pop
dec
cmp
mov
mov
push
add
push
cmp
test
pushf
out
int
xor
or
loope
std
stos
dec
repnz
mov
mov
sub
aad
call
and
jl
out
mov
and
sbb
push
insl
std
fnstenv
aas
out
rclb
push
sub
loopne
test
adc
adc
mov
ja
mov
and
push
or
mov
jmp
sub
mov
push
scas
fsubrl
pop
adc
test
call
mov
addr16
sub
test
sub
lret
in
pop
mov
xchg
imul
fstl
mov
or
in
jg
mov
cmp
mov
cmp
aas
and
jmp
dec
xchg
mov
daa
pop
cmp
mov
inc
hlt
dec
pop
pop
repz
pop
bnd
xor
scas
in
imul
lock
fs
stos
mov
or
cmp
mov
mov
cmp
insl
jecxz
sub
decb
add
jge
add
push
xor
ficompl
sbb
in
push
xor
xor
push
add
iret
push
faddp
out
sbb
icebp
push
push
pop
sbb
pop
inc
sahf
leave
mov
sbb
hlt
nop
push
pop
mov
sub
jbe
mov
xlat
loopne
cmc
xchg
sub
mov
sub
mov
leave
pop
sbb
mov
jl
nop
jnp
cltd
cwtl
cld
push
repnz
xchg
in
imul
push
ret
out
sbb
sbb
dec
pushf
hlt
sub
std
scas
cmp
aas
add
pop
add
xor
pop
cmpsb
in
push
test
ret
adc
mov
mov
ret
ret
subb
inc
jg
and
mov
jecxz
rolb
pop
stos
cmpsl
dec
sbb
or
add
pop
les
lcall
pusha
mov
mov
mov
jmp
test
lea
cmpsl
cmovo
daa
jo
xchg
dec
ds
lret
or
inc
leave
push
faddl
fisubl
and
jmp
iret
rcll
inc
dec
fisubrs
shll
pop
sbb
sti
iret
lahf
daa
jmp
mov
rdmsr
loopne
into
ss
sbb
popa
or
cmp
stos
adc
mov
xchg
lcall
data16
mov
call
dec
sbb
inc
lds
jg
aad
arpl
addr16
cmc
pop
popa
sbb
push
mov
inc
imulb
pop
sbb
push
ds
or
test
mov
loopne
push
lcall
inc
inc
jns
cltd
loopne
adc
mov
jge
ja
test
add
mov
outsl
ljmp
add
sub
and
inc
dec
lret
push
dec
add
test
cmp
sub
pop
rcll
push
push
cwtl
int
sub
cmc
lock
mov
data16
sbb
dec
outsb
mov
inc
adc
scas
push
cmpsb
iret
das
aas
fwait
hlt
lret
femms
pushf
sti
or
cmp
ret
push
mov
inc
cmpsl
mov
call
push
mov
dec
aaa
popa
insb
cmp
mov
jno
mov
fisubrl
mov
stos
dec
cwtl
fadds
pop
add
cmp
inc
adc
lret
sbb
testl
test
and
adc
cltd
xchg
xchg
sub
insb
jmp
call
mov
pop
push
enter
cmp
mov
in
stos
push
outsl
sbb
cli
lods
mov
or
addb
push
mov
sbb
test
mov
push
aad
loopne
out
push
je
pop
xchg
mov
stos
dec
jo
jge
dec
cmp
das
cmp
out
and
test
stc
daa
es
fnstenv
xchg
rclb
imulb
or
fs
movsb
stc
add
add
cli
mov
jecxz
int
mov
lea
mov
jbe
pusha
inc
addl
sbb
push
arpl
addr16
xor
xor
outsl
in
lods
arpl
call
add
or
dec
ret
xlat
add
cs
orb
cltd
and
sbb
sub
leave
cwtl
mov
je
pusha
lcall
inc
ljmp
popa
daa
push
sub
mov
xchg
dec
pop
mov
xor
mov
inc
xchg
popf
rclb
push
push
jne
pop
sbb
mov
pop
push
mov
int3
or
jb
dec
insb
pop
stos
inc
xor
jecxz
shl
xchg
sti
cmp
iret
pop
data16
lea
mov
adc
lret
nop
mov
or
shll
mov
dec
sub
cmpb
mov
enter
test
movsb
lcall
xlat
cmp
jmp
pop
push
cmpsl
xlat
xor
test
popa
sub
push
sub
push
test
sbb
cld
fcompp
xchg
xchg
sbb
mov
add
test
jecxz
inc
fimull
sub
xchg
jmp
jno
mov
jae
loope
cmp
je
jb
pop
xor
nop
mov
ret
inc
std
lock
inc
fsubrl
stc
xchg
adc
jg
imul
out
outsb
dec
ret
mov
mov
in
shll
and
and
jl
or
test
sub
icebp
jb
add
packsswb
fldcw
pop
jno
or
xchg
mov
imulb
fstpl
inc
jo
out
jb
xor
ficomps
icebp
cmp
and
push
or
add
daa
pop
fisubs
sub
xchg
mov
mov
dec
fabs
xor
inc
ret
clc
add
shlb
jne
shl
test
movsl
rcrb
push
fwait
daa
xchg
pop
and
jecxz
or
jecxz
and
mov
pop
rclb
sbb
lret
sbb
sub
sub
movsb
sti
mov
les
dec
call
mov
mov
xchg
mov
daa
ret
clc
pop
pop
pop
stos
pop
rep
jmp
sub
sar
aas
lret
push
jae
mov
mov
imul
loop
push
pop
movsb
push
dec
pop
into
dec
ret
call
ds
sbbb
movsl
jb
add
xor
pop
test
mov
jmp
sub
sbb
mov
mov
hlt
adc
jbe
cs
jmp
call
ret
pop
frstor
popf
or
insl
movsb
mov
lock
inc
xchg
xchg
icebp
push
adc
jnp
out
mov
lahf
push
mov
xchg
aaa
mov
pop
sarb
mov
inc
pop
rorb
roll
test
inc
sub
jb
adc
pop
test
fcomps
add
cli
mov
pop
mov
pop
add
jo
fcmovu
sub
lcall
cmc
adc
mov
mov
lds
mov
mov
repz
push
arpl
adc
pop
xchg
mov
lods
fdivp
mov
in
loopne
lock
sahf
pop
pusha
xlat
xorb
adc
out
in
fadds
push
sbb
or
daa
push
std
sbb
jb
lds
out
inc
push
out
pop
fucom
mov
mov
subb
scas
and
mov
or
mov
cwtl
clc
jno
cli
jae
xchg
sahf
movb
not
mov
jmp
jg
mov
std
or
stos
sub
test
add
repz
mov
fldl
mov
mov
lahf
aas
mov
sub
mov
testl
adc
mov
push
popf
xor
ret
jmp
fs
out
dec
pop
js
jnp
int
adc
scas
in
dec
ljmp
mov
xchg
mov
js
pop
insb
add
add
mov
and
ret
or
daa
dec
sbb
clc
cltd
rorl
mov
jno
pmovmskb
in
js
fwait
and
sahf
jo
pop
or
cmpl
test
int
lods
imul
fdivl
xor
jecxz
pop
addr16
sbb
mov
xor
mov
jecxz
fs
push
adc
fnstsw
xor
cld
je
mov
or
ret
out
xchg
xchg
lds
cmpsl
rcl
insb
xlat
ljmp
leave
add
sub
cmc
xor
js
ret
sbb
jecxz
and
xor
inc
and
pop
jne
push
das
out
fsts
sbb
ja
lret
pop
fldt
cmc
outsl
cmpsl
pop
sbb
mov
lods
add
cli
sbb
mov
push
sarl
sbb
inc
movd
lret
mov
and
in
flds
test
cmp
mov
stos
mov
movsb
mov
subb
dec
pushl
adc
insl
mov
aad
mov
xchg
xchg
lahf
mulb
push
cmp
out
lret
xchg
outsl
inc
test
pusha
sbb
dec
adc
scas
xchg
jo
xchg
aaa
and
cmc
imul
test
mov
mov
jne
jb
adc
push
dec
daa
xorl
sub
xchg
repnz
adc
test
movsl
es
aaa
jns
pop
push
repz
test
loop
js
popf
sub
push
loopne
push
or
psllq
mov
add
pop
push
fcmovnu
test
adc
sahf
jge
xchg
subl
in
pushf
add
ss
mov
icebp
iret
mov
js
leave
sbb
jge
ljmp
test
jge
jecxz
aas
shll
cmp
jo
mov
mov
mov
sbb
divl
gs
test
mov
loop
mov
std
cli
mov
add
scas
push
adc
outsl
das
mov
stos
adc
sahf
and
and
fdivs
je
lahf
pop
push
enter
xchg
jb
adc
cmp
ja
pop
add
cmc
and
dec
cmpsl
adc
sub
je
jle
addr16
xchg
test
and
lods
adc
sbb
ja
in
mov
int3
mov
rcrb
dec
dec
jbe
add
jne
push
jg
jbe
sbb
std
push
test
hlt
adcb
movsb
and
pushw
cmp
push
inc
test
fnsave
clc
dec
push
pop
nop
adc
pop
mov
rcr
push
ss
sbb
sarl
jb
xor
data16
bndstx
aas
ret
sbb
push
ret
outsl
xor
dec
stos
lret
sub
std
stc
dec
js
inc
out
adc
sub
jae
out
jl,pt
stos
sahf
rcrb
unpcklps
out
jb
lods
xchg
mov
push
cmpl
std
and
les
xchg
sbb
aaa
out
cmp
inc
shll
les
mov
std
test
xchg
rcr
or
dec
pusha
fucomip
cmp
inc
jae
jo
xorw
in
mov
xchg
jns
cmc
test
fadds
outsb
nop
sbb
xchg
pop
std
push
cmp
lea
ss
in
mov
cmp
call
test
inc
sbb
xchg
xchg
cmpsb
pushf
add
mov
cltd
xchg
jno
div
push
pop
js
mov
stos
repz
push
dec
insl
ljmp
ja
xchg
outsl
jg
into
icebp
xor
js
sub
xor
sbb
in
jbe
es
or
cmp
xchg
ljmp
outsl
push
jp
lock
ljmp
test
inc
scas
jle
icebp
or
mov
xor
lods
sub
pop
jae
adc
and
jne
and
push
push
xchg
xor
pop
into
fsub
sub
out
jbe,pt
jg
inc
adc
push
dec
sbb
mov
lock
leave
mov
dec
cld
adc
aaa
imul
cmpsl
inc
repz
inc
mov
and
test
dec
mov
aad
lahf
inc
rclb
stos
test
push
lcall
je
sbb
ret
mov
mov
orl
push
idivl
push
sahf
jb
jle
mov
cmp
xchg
pop
jecxz
and
mov
or
xchg
inc
push
adc
movsl
dec
stos
or
sub
xor
and
dec
dec
pop
sbb
or
popa
pushf
fldt
push
pop
dec
pop
addr16
pop
mov
pushl
mov
dec
nop
rol
shll
int
jo
pop
and
pushf
mov
sbb
inc
cmp
out
repnz
xor
sbb
insb
dec
dec
push
mov
inc
mov
mov
add
clc
sub
imul
pushf
cmp
mov
insl
jg
repz
pop
btc
data16
stos
cmp
sahf
into
out
or
xchg
movsl
mov
mull
add
ret
cmc
and
jmp
je
and
ss
pop
dec
dec
scas
sub
inc
movsb
leave
mov
xchg
pop
push
pop
data16
nop
push
fwait
cmp
mov
lods
pop
data16
loopne
mov
push
sub
push
sbb
mov
daa
sub
push
std
das
aad
mov
cmp
in
sbbb
dec
movsb
into
jno
dec
movb
ljmp
mov
add
gs
jle
jns
jo
dec
lcall
fsubrp
addl
dec
mov
mov
pop
xchg
mov
lods
ja
lods
lds
mov
movsb
sub
sbb
call
dec
icebp
sarb
or
test
push
mov
js
stc
pushf
cmpsb
pop
cwtl
add
xchg
xor
loopne
pop
pop
jno
cmp
dec
andl
xor
or
or
sub
fucomi
les
std
fsubs
ret
insb
and
cwtl
das
push
and
cmp
xor
ljmp
loope
out
pop
sub
cmp
adc
lods
neg
sub
add
or
jl
js
nop
and
addl
pop
sub
add
imul
add
cwtl
jno
fisttps
xlat
cwtl
mov
xor
cmp
repz
inc
lret
xchg
or
jmp
add
nop
in
jne
cld
insb
stc
dec
in
test
jns
int3
inc
enter
mov
mov
in
push
andb
pushf
cmp
dec
pop
outsb
insl
test
add
cmc
les
dec
pop
scas
mov
in
arpl
rcl
into
stos
aam
mov
lea
nop
es
dec
xchg
pusha
sub
cmp
adc
aas
lcall
scas
xchg
inc
out
mov
lea
into
loopne
add
loop
stc
push
dec
inc
cwtl
es
rolb
addr16
in
pop
add
xlat
cwtl
or
loop
push
aad
rorl
call
xchg
notb
sbb
xorl
or
rcrl
mov
hlt
rep
lea
scas
mov
aas
add
lret
jmp
push
xor
inc
in
int3
push
xchg
movsb
lret
mov
call
mov
arpl
sbb
jnp
mov
paddsb
push
pushf
mov
xchg
xchg
push
pop
dec
adc
sbb
dec
pop
add
faddl
push
push
sahf
xorb
in
push
and
shl
clc
es
repz
cld
dec
fisttpl
aaa
movsl
lret
mov
mov
mov
mov
jp
lahf
popf
xchg
insl
rorb
pop
jg
cmpsl
or
enter
repz
jae
ljmp
push
pop
cmpsb
add
imul
movsl
pop
repnz
xor
and
insb
filds
add
lahf
movsb
jno
xor
repz
push
inc
loopne,pt
movsl
lret
lods
inc
loope
stos
pop
cmpsl
movsb
and
xor
add
cmp
adc
mov
scas
mov
lret
stos
adc
ss
into
dec
shrb
js
mov
xor
jno
mov
aad
add
mov
icebp
add
jo
or
vsqrtsd
xor
fs
xor
push
mov
mov
xchg
mov
addr16
mov
in
mov
sub
push
jae
movl
pop
popa
inc
stos
cld
cwtl
dec
cs
enter
sub
inc
mov
aad
ficoml
pusha
or
imul
fs
mov
mov
jne
out
aaa
xor
into
lock
sub
lods
out
pop
and
leave
mov
xor
aam
and
xor
cmp
insb
andl
shrb
lcall
inc
push
push
inc
xlat
xor
inc
pop
xor
aam
cmp
inc
lods
mov
es
jle
mov
ds
add
cmp
or
jo
clc
push
cld
adcb
and
inc
dec
xchg
and
add
jno
fnstsw
jmp
bound
lods
inc
or
bound
test
cmp
ss
roll
mov
popf
xchg
stos
dec
fwait
stos
xchg
sub
shlb
ja
cld
enter
rorb
outsb
sub
subb
sbb
std
or
xchg
fsts
inc
sbb
add
mov
movsb
out
or
scas
mov
mov
gs
mov
stos
push
dec
sub
push
sbb
pop
mov
xlat
pop
lret
mov
dec
add
and
cmp
dec
push
cmpsl
lahf
push
orl
movsl
cmp
add
xchg
int
in
sub
cli
je
lds
test
or
mov
mov
xlat
ss
jg
xchg
or
je
icebp
push
in
jb
int3
sub
pop
and
mov
cld
lcall
test
add
mov
int
test
mov
fidivs
jl
in
outsb
enter
rclb
mov
lock
into
inc
popf
push
and
mov
cs
jp
lods
mov
sub
sahf
sub
cmp
cmp
jl
mov
add
test
mov
inc
hlt
lods
inc
jns
xchg
out
and
ljmp
mov
stos
jno
aam
xor
adc
mov
and
clc
push
in
mov
dec
outsl
les
push
jg
jb
cs
lcall
and
mov
ljmp
and
icebp
push
mov
std
fdivl
cmp
and
mov
out
xor
add
mov
adc
push
roll
repnz
jp
lahf
add
icebp
clc
in
pusha
ftst
xchg
mov
fwait
imul
xor
sub
lock
bound
xor
nop
ss
sbb
scas
stos
push
lock
cld
ficomps
sahf
movsl
adc
aad
and
xchg
adc
and
ja
in
or
insl
mov
or
push
dec
mov
xchg
sbb
dec
mov
popf
cmp
int
push
cs
pop
in
sub
add
jp
hlt
das
jae
lds
out
lahf
sbb
ljmp
sarb
mov
sbb
in
fcompl
xor
outsb
pusha
lahf
dec
add
imul
inc
js
xor
push
xor
mov
daa
push
jge
scas
mov
rclb
out
sub
loope
pop
test
rorl
adc
adc
mov
mov
xor
addr16
pushf
in
das
pop
pop
mov
repz
mov
int3
inc
sti
dec
mov
fldl
or
add
adc
mov
in
insb
add
inc
xor
das
add
xor
cmc
rclb
outsb
test
dec
fnstcw
dec
std
and
pop
stos
cmp
pop
inc
ud0
in
jmp
fcmovnb
bound
push
mov
jno
addb
fistpl
dec
xlat
cmp
mov
lds
and
mov
fists
inc
fs
mov
sub
inc
xor
inc
add
stc
and
ja
add
stos
cmp
inc
sub
or
pcmpgtd
test
hlt
xor
push
sbb
mov
and
xchg
into
push
and
data16
inc
cmp
in
sub
rol
inc
andl
or
nop
orb
data16
adc
sub
jno
pop
pop
or
pop
jo
mov
adc
arpl
pusha
int3
inc
addr16
pop
add
imul
sarb
cmpsl
xchg
test
inc
cmp
pop
pop
int
push
sbb
and
add
lea
xor
mov
mov
cwtl
jle
inc
fidivrs
sbb
adc
jns
iret
or
fcoms
imul
pop
test
xchg
mov
std
sub
mov
subl
cld
stos
insl
inc
gs
pushf
jae
insb
or
cmpsl
cmp
mov
mov
das
add
addr16
lods
jo
movsl
aam
sar
call
fwait
push
out
mov
jne
mov
fnstsw
in
pop
pop
int
movsb
seto
les
pop
inc
adc
lods
cmp
lods
inc
add
scas
xchg
shlb
dec
mov
scas
icebp
in
jp
sbb
mov
aam
and
inc
int
fldenv
dec
dec
setg
loope
mov
fldt
in
test
sub
cmpsb
lret
std
xor
inc
xchg
sbb
jb
imul
push
jo
fwait
jle
or
jmp
fstp
sub
cmp
sbb
xchg
push
sti
push
hlt
pop
fcmovu
mov
das
hlt
movsb
aas
loop
dec
xchg
push
and
xor
push
and
movsl
aam
les
jecxz
divl
test
mov
mov
push
insl
pop
stc
insb
outsl
orl
int
or
cwtl
adc
xchg
mov
adc
inc
mov
add
push
mov
sub
push
sbb
or
shll
or
cmp
add
arpl
dec
dec
lock
in
jb
mov
sbb
push
inc
leave
mov
lret
mov
fistpl
aaa
dec
push
das
out
add
push
mov
int
repnz
jne
jmp
sbb
mov
daa
enter
sub
outsl
in
repz
mov
neg
inc
cmp
sarb
aad
andb
fstps
or
fistpll
dec
mov
fs
cmpsl
ss
sub
das
or
inc
xlat
xchg
jp
inc
add
repnz
outsb
mov
scas
les
sbb
mov
adc
inc
mov
mov
pop
std
adc
pusha
mov
sbb
mov
dec
cmpsb
pusha
lret
jne
inc
or
in
ds
cmc
mov
mov
xchg
sub
jne
test
out
pop
popa
or
push
test
repnz
xor
lods
sub
in
lock
mov
cmc
in
hlt
daa
test
push
ret
mov
out
rcl
cmpsl
push
lret
cmp
jb
dec
or
add
es
pop
dec
add
push
stc
inc
into
ds
cli
ficoms
fs
xlat
mov
mov
push
mov
es
cmpsl
sub
adc
aam
dec
sar
inc
jns
cmp
pop
sbb
shrl
or
jno
lcall
push
jo
pop
pop
xor
data16
int3
or
std
mov
cmpsb
pop
cld
push
push
adc
xchg
lea
aad
sub
test
dec
and
test
pop
rolb
pop
mov
push
adc
xchg
movzbl
icebp
push
cwtl
push
cmp
mov
aaa
das
mov
xor
xor
pop
cmp
adc
mov
stos
popf
into
xchg
cwtl
fdivr
rol
sub
lret
insl
stos
jns
xor
sbb
or
and
aad
rcrl
cmc
dec
fildll
xor
sahf
lahf
mov
icebp
add
and
xchg
bound
inc
enter
fsubs
mov
repz
cmpl
addr16
pop
cmp
pop
jp
add
rolb
iret
out
fnstsw
and
loope
es
sbb
sbb
xchg
mov
in
and
stc
fisttpll
adc
orb
out
movsb
and
mov
mov
aad
mov
das
mov
stc
jmp
filds
push
rcll
mov
loop
aaa
push
and
push
mov
inc
jle
popa
in
adc
and
lea
aaa
mov
sub
cmpsl
mov
xor
sbb
add
jg
xchg
into
xor
fsts
jmp
jnp
or
sbb
cmp
inc
bound
dec
ret
sbb
roll
arpl
fsubp
movsb
pop
repz
ret
scas
push
pop
lods
mov
movsl
mov
cmp
rcrl
gs
lret
ret
int
test
outsl
out
pop
cltd
js
iret
or
push
push
stc
fsubrl
cli
ja
push
add
add
jmp
xchg
enter
sub
aad
pop
xor
mov
popl
popa
out
out
jmp
mov
ret
xchg
outsl
or
xor
out
cwtl
push
mov
imul
adc
outsl
loopne
sub
fcoms
cmp
push
adc
and
shr
jle
sbb
fadds
aam
addr16
test
inc
push
jle
enter
sub
stos
out
sahf
dec
xchg
stc
popf
hlt
ds
fmul
cwtl
roll
outsb
jp
push
ljmp
mov
lods
daa
mov
xchg
mov
bound
lock
movsb
jle
dec
push
loop
aam
shl
or
imul
clc
rolb
jp
aaa
sbb
mov
test
fwait
mov
inc
movsb
out
xchg
mov
mov
adc
xor
cmpsb
inc
ja
daa
sub
pop
adc
pop
std
mov
ja
adc
adc
xlat
clc
xor
mov
lods
inc
test
sqrtps
sbb
cld
xor
pop
leave
jg
mov
repnz
cmp
mulb
aas
xchg
ret
mov
fnstenv
leave
mov
insb
into
in
clc
out
pop
nop
pop
mov
popf
add
mov
out
cld
jp
xor
pop
mov
xchg
push
jle
or
jg
shll
iret
mov
pop
mov
loop
sub
adc
outsb
push
mov
mov
in
jne
mov
insb
call
mov
fnclex
test
ss
mov
imul
fcmovu
mov
sbb
add
sbb
mov
jb
inc
pop
dec
fs
cmp
jo
push
in
bsf
fwait
mov
int3
mov
inc
or
jg
ss
pushf
xorb
mov
or
es
in
push
outsl
sub
test
filds
xorb
mov
inc
and
sbb
shl
in
sbb
add
pusha
pushf
out
dec
cld
xchg
shlb
pop
fbld
xchg
lods
data16
sub
mov
in
pop
fisubs
inc
dec
mov
lahf
add
hlt
fistps
mov
pop
xchg
mov
pop
add
cmp
dec
fsubs
js
testl
std
cmp
lods
mov
sbb
das
andl
mov
out
fsts
outsb
movsb
add
mov
imul
inc
cmp
icebp
push
jmp
mov
xchg
jp
lock
mov
lret
xlat
sbb
add
jp
sbb
pop
jmp
mov
xchg
push
in
imul
cli
adc
gs
and
xor
add
popf
or
or
dec
jae
jecxz
adc
cltd
pushl
orl
pop
sahf
pop
add
dec
idivb
mov
push
mov
out
fs
stc
push
lahf
mov
xchg
fwait
add
inc
mov
sbb
push
sbb
into
xchg
enter
into
mov
push
cwtl
xor
push
mov
push
pusha
dec
lods
adc
sub
rep
pop
mov
cmp
pusha
insl
pop
lods
sarb
pop
xorl
sarl
data16
popa
cmpb
pop
push
je
movsl
inc
outsl
mov
out
cmc
pop
jecxz
dec
mov
and
push
mov
jb
dec
leave
pop
jmp
or
inc
cld
jno
push
jle
push
sbb
stos
dec
mov
pusha
arpl
int
ds
aas
std
jle
out
daa
imul
mov
and
andb
adc
shlb
mov
add
subb
test
enter
adc
pop
push
ficoml
push
test
xor
push
mov
inc
pop
out
out
add
sub
cmpsb
mov
mov
aam
out
dec
subl
lahf
data16
daa
fdiv
mov
sbb
ljmp
inc
sbb
mov
rcrb
ja
adc
xchg
adc
movsb
lcall
aaa
enter
pop
lds
jg
std
dec
fstps
std
sbb
das
xor
mov
mov
daa
addb
lock
inc
out
sbbl
int3
fadds
cmp
mov
push
dec
call
jne
aas
insb
aad
jo
dec
stos
sbb
cmp
ljmp
xor
inc
add
dec
loope
inc
rorl
outsb
insb
iret
adc
or
jecxz
and
imul
out
inc
xchg
rorl
outsl
loop
lcall
pop
mov
inc
testb
jne
sbb
inc
cmpsl
xchg
push
pop
aaa
mov
lods
add
mov
movsl
scas
add
inc
je
xchg
adc
pop
pop
out
push
cmpsl
sub
stos
int3
cmp
mov
push
pusha
pop
sub
jno
iret
aam
jge
xchg
ret
inc
pop
in
scas
cmp
and
and
mov
fwait
call
aaa
loope
insl
in
push
icebp
sbb
out
pop
sub
push
loope
push
dec
or
xchg
stos
jge
pop
inc
es
mov
sbb
adcb
xchg
sar
clc
jbe
lahf
cli
pop
dec
inc
mov
push
jp
or
mov
dec
cmp
call
fwait
arpl
add
insl
inc
adc
gs
in
mov
adc
inc
addb
push
inc
xchg
in
ljmp
sbb
call
push
fxam
in
aas
sbb
xchg
mov
dec
dec
mov
pop
sub
loope
push
stos
sbb
push
test
stos
mov
pop
adc
rcrb
mov
mov
incl
test
adc
pop
fsub
xchg
dec
adc
rclb
data16
push
stos
repz
cmc
test
sub
fdivs
cmp
jmp
push
ss
pop
test
dec
repnz
push
adcb
inc
arpl
repz
in
jne
inc
repz
enter
repz
pinsrw
sub
push
dec
sbb
je
in
fisttpll
insl
jns
push
mov
scas
sbbb
lcall
mov
sub
inc
dec
push
out
xor
orl
into
clts
sbb
mov
jp
fistl
cmp
lret
mov
imul
jmp
inc
insb
xchg
ficoms
mov
in
cli
add
daa
ljmp
clc
ljmp
mov
add
mov
dec
or
mov
std
loope
ret
mov
xchg
data16
push
pop
addr16
sub
movsb
adc
mov
cmpsb
jb
subl
push
movsl
outsb
sti
or
sub
xor
xor
sbb
xchg
loope
push
scas
aas
xchg
int
std
insl
and
and
clc
sbb
dec
cmc
jmp
cmp
loopne
cltd
popa
lds
fidivl
pop
and
mov
push
cltd
fsubrs
dec
mov
lahf
mov
in
adc
push
mov
and
je
inc
das
ret
out
xchg
jb
test
jo
loopne
jae
cmpsl
xlat
in
lods
dec
mov
lahf
fwait
or
arpl
imul
and
dec
lea
into
cmp
fcompl
mov
out
out
dec
xor
lret
cmp
inc
mov
iret
pusha
jbe
int3
mov
adc
mov
jnp
inc
test
sub
and
push
aas
andb
lods
mov
pushf
cmpsb
push
in
in
adc
push
outsl
rcrb
mov
sbbb
pusha
jg
cmpsl
pop
call
rol
push
dec
add
xor
fwait
lock
addl
outsl
and
test
pop
inc
ja
js
data16
shlb
js
push
jno
jo
idivb
cmp
mov
sbb
mov
pop
sahf
fdiv
push
rorb
lods
sub
loop
hlt
clc
andl
add
lahf
pop
jnp
repz
dec
jnp
pop
or
mull
push
fcomip
out
pop
or
cmp
or
push
ja,pt
sbb
icebp
ljmp
repz
jns
add
dec
lods
es
xor
or
mov
pop
pop
fcoml
mov
xor
lods
ljmp
push
or
xchg
mov
jp
cmc
lcall
pop
testb
jns
mov
or
mov
and
repnz
lods
and
sbb
scas
sbbb
mov
mov
cltd
mov
cmp
xor
pop
mov
sub
gs
sbbb
lds
je
mov
jp
adc
test
aas
xchg
mov
cmp
or
add
loopne
clc
mov
mov
lods
cwtl
insl
sarb
orl
in
push
jmp
loope
push
test
fst
pop
aad
mov
int
pop
outsb
xor
push
mov
cs
in
int3
daa
std
call
dec
ss
lahf
cmpsl
or
push
push
sub
fimuls
mov
outsb
mov
pop
dec
jo
shlb
cmpsl
xor
stos
sbb
lds
and
mov
cld
insl
cld
sub
lods
je
sub
and
add
add
imulb
jle
push
pop
pop
mov
sbb
jae
pop
mov
add
adc
push
mov
iret
xchg
loope
ret
dec
outsb
push
xor
add
neg
imul
leave
dec
out
sbb
inc
icebp
bound
fdivp
nop
mov
mov
fucomp
jl
outsb
inc
repz
leave
bound
xor
cmp
cmp
push
pushf
pop
out
cld
movsb
bound
adc
pop
sub
add
cmp
popa
push
lret
das
andb
xchg
icebp
mov
xchg
fadds
aaa
pop
xor
xor
jmp
sub
jbe
pop
stos
int3
lds
mov
insb
add
lret
ds
ljmp
clc
enter
mov
pop
dec
adc
call
sub
imul
jp
adc
sbb
pop
cli
es
add
xchg
fisttpll
inc
imul
pop
xchg
sub
das
movsb
mov
sub
sahf
xlat
out
sti
adc
inc
repnz
jb
scas
mov
lcall
jg
bound
js
sar
or
inc
dec
out
add
int
cmp
xor
jno
mov
inc
xchg
sahf
add
repnz
mov
fisubs
add
cmp
inc
push
lds
xor
mov
ret
jbe
pop
adc
cld
xchg
xchg
int
div
movsl
push
mov
lcall
fnstsw
add
jbe
loop
mov
mov
aad
outsb
repz
push
pop
test
sub
enter
je
pop
dec
stc
adc
pop
notb
sti
dec
sub
sub
jmp
sbb
fmuls
fnstenv
sub
cmp
test
mov
sbb
hlt
imul
jae
sar
lock
lock
and
std
cmp
imul
push
int
fdivrl
mov
test
jle
push
pop
call
ficompl
and
fbld
push
push
jle
out
and
cmp
fs
aad
popa
push
sub
clc
pop
or
jecxz
lods
repz
aas
dec
push
cmp
cwtl
adc
lcall
aas
pop
pop
cmp
adc
test
popa
js
mov
bound
sti
or
or
lds
pushf
loop
cmpsl
mov
inc
test
incl
mov
jle
iret
dec
test
and
loopne
in
cli
test
icebp
dec
and
add
adc
cmp
push
pop
leave
ret
mov
out
pop
pop
jecxz
push
cmpsb
xor
adc
cltd
sub
mov
sbb
repz
jne
les
sbb
mov
adc
mov
xor
mov
repnz
lret
mov
dec
xchg
lds
sarb
sbb
push
retw
pusha
push
mov
ret
or
push
inc
mov
ret
incl
mov
repz
int
test
add
stc
out
data16
inc
pop
std
inc
inc
cmpsb
push
pop
jl
adc
lahf
push
test
pop
mov
daa
xor
jl,pn
fdivrp
xor
iret
pop
imul
lods
mov
mov
cmp
scas
jge
hlt
mov
cmp
inc
mov
shlb
lcall
scas
cmp
pop
pusha
inc
je
push
loope
dec
lock
sbb
rcll
xchg
adc
test
sbb
adc
outsl
lods
fs
mov
hlt
add
inc
mov
cli
sub
cmpsb
cld
adc
push
pop
mov
inc
pop
loopne
dec
inc
call
fistpl
scas
lea
cmpsb
dec
jae
test
adc
sarb
repz
popa
arpl
and
mov
sbb
imul
pop
fnsave
int
jle
out
stos
push
adc
outsb
xchg
and
std
das
mov
imul
faddp
push
mov
movsb
cmc
loope
out
jmp
push
in
push
mov
add
das
stos
std
outsb
pop
sbb
mov
sahf
je
cmpsb
cmp
cmc
test
cmp
in
dec
les
xlat
ja
mov
cmp
inc
or
or
mov
mov
leave
enter
and
jb
inc
imul
bound
push
cmc
fwait
cmpsb
andb
jle
xchg
jl
hlt
cmp
add
xchg
adc
out
cmp
popf
lock
test
inc
xor
push
or
stc
mov
into
clc
cmp
lret
pop
add
ss
sub
sbb
mov
add
mov
rcl
ljmp
mov
arpl
je
repnz
shrb
and
outsl
jb
inc
jb
aad
push
test
add
inc
je
aas
sub
mov
pop
jns
pop
pop
pop
dec
adc
jl
mov
dec
cmp
or
in
dec
xor
fcompl
push
call
xchg
jbe
ja
and
fidivs
scas
gs
xlat
and
aam
mov
stc
or
or
pop
jge
add
popa
or
scas
in
insb
add
aam
imul
inc
out
das
jne
dec
push
and
movsb
ja
inc
sar
enter
insb
into
je
lcall
xchg
inc
rcrb
mov
jg
loope
insl
jno
outsb
lcall
adc
xor
call
shlb
rorl
ret
pop
jg
sti
sbb
js
inc
ja
cli
add
push
mov
adc
sub
xor
into
ss
sbb
cmp
inc
xchg
jmp
arpl
push
out
in
rcr
push
scas
ljmp
or
or
hlt
cltd
push
add
insl
hlt
sarb
fnstenv
and
push
xor
jns
lock
sub
cwtl
nop
dec
shll
cld
sub
inc
loope
out
xchg
movb
lea
int
adc
push
mov
xor
push
cmp
roll
insb
icebp
push
fsubl
xchg
lock
fwait
add
mov
sub
bsf
jb
mov
psrlq
outsl
xchg
cmpsl
imul
inc
adc
popf
mov
int
mov
xchg
notb
loope
pmulhw
sub
xor
jbe
repz
icebp
fcom
std
sub
dec
pop
cmp
xlat
jb
sbb
sub
xchg
push
mov
call
xchg
xchg
cmp
test
xor
in
mov
and
adc
lea
push
gs
pop
or
pop
int3
femms
sub
adcb
call
pop
ds
cmc
mov
pop
test
or
inc
in
xorl
int3
addb
pop
out
popa
aam
shll
fnstsw
mov
mov
sti
mov
lret
jnp
xor
pop
or
out
shlb
out
rcrl
adc
pop
notl
lds
gs
sbb
and
ja
pusha
dec
out
pop
sbb
clc
xor
inc
pop
shlb
pop
std
xor
icebp
mov
bnd
divb
cmp
xor
inc
cmp
js
movsb
xorl
insl
xchg
insb
imul
inc
xor
stc
push
push
mov
lds
or
mov
pop
fwait
jecxz
mov
jecxz
xchg
je
pop
jbe
mov
sbb
mov
lds
add
cmpsb
ss
cmc
pop
bound
aas
jnp
sub
dec
sti
jg
pop
push
test
faddl
push
out
sbb
incb
mov
daa
js
fsubr
mov
in
test
sub
gs
scas
inc
mov
es
sub
cmpsb
and
mov
sub
lock
lret
fwait
dec
out
push
aad
xchg
out
mov
imul
or
jbe
mov
adc
mov
inc
adc
sarl
les
cmc
flds
push
lods
cmp
cmc
cmp
mov
leave
mov
push
lds
int
imul
pop
add
arpl
jp
mov
rorb
js
xchg
push
pusha
jp
cmc
and
movsl
mov
mov
or
add
in
cmp
cltd
dec
pushf
sti
and
lcall
mov
or
cld
mov
fcmovnbe
and
das
dec
bound
pop
push
pop
lcall
mov
bound
sbb
or
loope
and
jg
std
enter
lods
sbb
jnp
mov
popf
xchg
std
cmp
hlt
push
mov
mov
xchg
fstpt
sub
jo
sbb
lahf
enter
mov
fnstcw
fidivrl
int3
lret
and
xchg
jo
lret
lret
sbb
call
js
bound
mov
inc
fisubl
pusha
icebp
sbbb
cwtl
subb
bnd
out
testl
jecxz
xor
and
scas
and
mov
add
mov
jle
sbb
sti
scas
test
out
test
inc
and
jb
lds
xor
mov
iret
ret
lret
jp
jmp
outsl
out
idivb
sub
mov
jb
push
mov
mov
lods
inc
xchg
mov
inc
dec
aam
xchg
sub
int
les
scas
inc
int
xor
test
iret
std
pop
xchg
cmp
jl
mov
cmpsb
fistpl
stc
add
pop
mov
aam
lock
int
sarl
pop
add
nop
cmpsb
push
iret
leave
xchg
xchg
add
mov
dec
lods
push
ret
mov
cmp
mov
fadds
mov
adc
push
cmp
jp
sub
fidivrl
shl
inc
cwtl
das
movsl
sbb
scas
sbb
repz
fldl2t
jne
insb
in
push
cltd
cltd
loope
xlat
jmp
repz
aaa
adc
pop
and
das
mov
pop
outsb
adc
sub
cmpsl
mov
repz
jae
xchg
jb
test
into
sbb
push
test
or
jno
push
gs
adc
and
dec
mov
aaa
out
fdivl
push
inc
mov
push
pop
stos
pop
pop
stos
xchg
sub
xorb
sbb
push
dec
dec
push
sub
cli
popf
xchg
xchg
loop
xchg
sub
rclb
inc
loope
cli
pop
stos
xchg
lret
cs
cmpsb
xchg
dec
xchg
cmp
mov
xorl
scas
cmpsl
dec
and
outsb
mov
jbe
cli
push
ljmp
outsb
sub
insb
inc
mov
jmp
jl
lods
dec
lds
movsl
sub
int3
outsl
push
fildll
lods
mov
jo
or
push
ja
gs
jno
dec
data16
lock
fildl
mov
int
mov
xchg
test
imul
rclb
testb
mov
and
and
es
dec
stc
pop
movsb
fcmovnu
gs
or
mov
adc
and
cmc
stos
dec
mov
jnp
outsl
outsl
mov
mov
imul
or
ljmp
enter
sahf
les
add
fistl
test
loope
shrl
mov
hlt
xchg
mov
jbe
mov
xor
rcrb
movsb
sub
sbb
adc
fadds
aad
movsb
out
or
fs
ret
mov
rolb
lds
in
insl
lcall
mov
mov
fcoml
jge
and
fwait
pop
mov
mov
or
shlb
cmpb
mov
xor
mov
mov
jne
cmp
xchg
ja
clc
dec
mov
aas
rolb
jo
add
jbe
jno
add
xchg
xor
adc
int3
xchg
mov
mov
out
adc
xchg
aad
xor
mov
jne
inc
dec
test
popa
dec
mov
fwait
mov
test
mov
loope
jno
push
sbb
and
sub
or
xor
jl
nop
fwait
int3
bound
scas
dec
in
stos
out
adc
andl
lcall
pop
repz
dec
repnz
shrb
inc
mov
add
cmpsl
ljmp
les
mov
jne,pn
clc
push
imul
xchg
cmp
jle
adc
jle
mov
cmp
pop
xor
xchg
movsl
outsl
jecxz
out
lret
jno
out
push
fwait
std
jno
add
das
inc
jbe
into
imul
xor
pop
add
cltd
mov
add
daa
mul
mov
addb
push
shrl
jle
sarb
call
ficomps
jae
test
and
cmp
sub
pop
mov
lcall
sub
pop
sti
sub
mov
mov
xor
lods
leave
jp
popa
sbb
lods
pop
rclb
sbb
push
aas
pop
pop
aaa
clc
inc
fildl
in
test
jne
inc
push
fs
shll
iret
adc
pop
xor
fidivrs
pop
repz
pop
daa
mov
out
aad
push
xchg
je
outsl
inc
cmp
scas
lcall
sub
pop
jmp
jb
gs
psubq
lock
mov
pop
ret
xchg
lods
ljmp
add
clc
or
sbb
enter
adcb
loopne
pop
inc
fstps
insl
pusha
xchg
jne
int
into
mov
int
and
or
sbb
dec
ret
push
xor
hlt
cmp
movsl
dec
mov
xchg
mov
push
push
sti
xchg
in
or
cmp
jmp
scas
jp
cmp
hlt
outsb
mov
xor
test
das
shl
arpl
mov
mov
pop
cwtl
hlt
adc
add
or
add
mov
bound
xchg
fcomps
or
cld
sbb
push
stos
data16
mov
imul
pop
sub
sahf
cmp
add
mov
mov
repz
xchg
sbb
out
test
mov
and
and
aam
dec
lret
cltd
xchg
stc
in
ret
outsl
stos
or
movsl
cmpsl
mov
stos
mov
addb
sahf
shll
or
xchg
test
cmp
orl
pusha
in
sbb
or
pusha
push
inc
adcb
daa
xor
int
leave
xor
lods
add
cmp
fisttps
xchg
insb
lret
subb
out
or
fstps
pop
fldenv
in
cs
out
inc
mov
and
inc
orb
int3
mov
repz
mov
adc
fcos
mov
jge
xchg
or
jno
push
mov
and
push
add
dec
and
inc
lcall
pop
out
cmp
arpl
cmp
adc
stos
push
xchg
mov
mov
mov
bound
shll
inc
xor
lea
adc
jb
jge
adc
ret
mov
shll
lret
adc
movsl
jmp
pop
or
push
leave
push
xor
dec
and
fs
fcomps
sbb
daa
sbb
dec
shrb
cmc
mov
cmc
push
pusha
leave
les
aam
addr16
pop
dec
lock
call
adc
daa
dec
cmp
and
cmpsl
imul
mov
pop
movsb
stc
push
or
cmpsb
push
cmp
xor
dec
enter
inc
xchg
stos
in
not
pop
or
inc
mov
sub
bound
mov
imul
pop
test
mulps
cmp
pop
gs
js
push
push
rdtsc
jns
xchg
loope
stos
fwait
fwait
mov
add
mov
fs
push
jbe
cmpsl
jb
add
leave
or
test
xor
jns
fdivrs
dec
inc
or
push
repz
test
push
jno
rol
sub
cmp
out
mov
mov
rep
loope
push
pop
mov
pop
js
mov
in
xchg
ficomps
jae
push
enter
adc
icebp
sub
xor
xor
add
lods
and
aaa
sbb
test
xor
repz
arpl
mov
sahf
and
mov
mov
mov
mov
cmp
push
je
popw
aad
orl
sub
lock
sbb
or
xor
out
addr16
fisubs
dec
or
mov
pop
stc
xor
xchg
movsl
nop
add
inc
cmc
push
outsl
jb
cs
ljmp
adc
fs
loop
cmpb
inc
fwait
sub
repnz
mov
idivb
sub
movsb
sarl
jmp
lock
mov
pop
pop
xor
push
popa
inc
stos
lea
inc
push
push
insb
mov
add
orb
sbb
adc
cmc
clc
cmp
mov
fistps
and
iret
mov
push
xchg
shrl
and
mov
mov
hlt
mov
jb
in
outsb
xchg
ljmp
mov
xlat
addr16
jmp
test
mov
aad
and
push
sbb
rcr
xchg
iret
sub
sub
jbe
aad
mov
mov
enter
push
scas
pop
aas
add
dec
repnz
or
inc
xorb
imul
lods
aad
iret
fs
inc
or
push
pop
mov
clc
and
in
enter
sar
test
test
sbb
cmp
mov
lds
incb
xchg
sub
mov
sti
mov
push
inc
mov
inc
mov
lods
mov
fsubr
clc
adc
cmp
ffree
cwtl
lret
test
jae
mov
inc
scas
aam
mov
mov
xor
clc
mov
std
and
cmpsb
xchg
push
es
mov
sbb
ret
lcall
dec
xor
jg
rorb
and
outsb
push
lcall
mov
out
test
jge
lods
inc
imul
aaa
jp
je
jo
repnz
add
adc
push
mov
add
ret
ds
xchg
or
jmp
push
fstps
jl
mov
lds
das
inc
dec
aaa
xor
jne
dec
push
sbbl
add
fisubrl
js
push
mov
stos
inc
adc
jbe
sbb
adc
lret
imulb
cli
sbb
adc
or
adc
jp
in
outsl
test
and
sti
lock
mov
movsl
aas
shll
cld
sbb
inc
dec
add
sbb
adc
test
stc
lea
pop
dec
nop
pop
mov
repz
mov
in
jnp
or
inc
loop
jg
movsl
xlat
cmp
lods
dec
lea
push
fldt
and
test
push
xlat
add
loopne
mov
pop
push
jp
inc
in
push
mov
or
cmp
movsl
dec
clc
es
nop
stos
lahf
and
sub
jo
lds
xor
dec
sbb
pop
fdivs
adc
lods
aas
outsl
pop
fsubl
orb
dec
cli
mov
or
aas
jle
adc
xor
sbb
and
clc
xchg
in
jne
sbb
out
pop
cmp
mov
mov
xchg
ror
ss
inc
fisubs
add
imul
movsl
cltd
jg
xchg
and
movsl
leave
push
loop
mov
shlb
ret
and
repnz
outsl
jbe
xchg
dec
jecxz
popa
ljmp
mov
xchg
lret
and
add
xchg
and
ja
mov
stos
ljmp
fistpl
mov
mov
aaa
mov
mov
popa
cmc
fwait
das
and
add
insb
pop
mov
shl
imul
sti
mov
cld
mov
call
xchg
out
dec
insb
je
outsl
paddsw
sub
lret
js
mov
out
fcomp
loope
jo
pop
cld
aad
imul
jecxz
jo
pusha
stos
int3
daa
push
adc
and
shll
mov
gs
mov
into
test
sub
dec
sub
sbb
jl
sbb
pop
xchg
sub
push
sub
ret
es
cmp
inc
pop
arpl
enter
mov
pop
mov
push
dec
test
sub
test
push
imul
mov
aaa
out
js
test
out
cmp
call
add
punpckhbw
daa
cmp
addr16
mov
stc
cwtl
sbb
int
stos
pop
shlb
mov
xchg
adc
jne
xchg
push
and
lret
jns
jge
pusha
aaa
pop
push
stos
inc
loop
cmpsb
out
fdivrs
mov
test
gs
pop
dec
ret
roll
lds
repnz
dec
push
push
dec
les
data16
mov
in
ret
stos
sarb
scas
or
xchg
xor
or
ja
mov
jge
andl
ret
mov
popf
gs
pop
jge
cwtl
ds
xchg
fcmovnu
add
mull
ljmp
cmp
pusha
xor
sub
mov
lea
cltd
pop
jg
pop
or
sub
pop
xor
loop
jnp
mov
loop
sbb
je
loop
xor
mov
add
pop
push
subb
out
dec
imull
in
xchg
cmp
rolb
dec
dec
enter
cmp
cmp
out
push
insl
aas
mov
ds
sarb
in
in
xchg
dec
rclb
sbbb
lret
xchg
hlt
in
test
cld
stc
xor
hlt
pop
fcompl
pop
jns
mov
mov
xchg
scas
mov
and
or
rcl
das
pop
jp
movsb
pusha
aad
in
movsl
jae
repz
pop
push
xlat
mov
mov
jg
xchg
imul
lods
cltd
jo
dec
add
sbb
add
sbb
pop
mov
adc
mov
rorl
aam
or
faddp
inc
sub
rorb
add
insl
xlat
in
inc
loopne
xchg
xor
push
bound
gs
dec
icebp
cmpsl
int
pushf
pop
push
outsl
sub
mov
lahf
mov
mov
andb
mov
dec
mov
and
ds
mov
ficoms
outsl
xchg
inc
xchg
lahf
rclb
mov
in
shl
scas
ret
dec
cmp
fnstsw
sub
mov
jecxz
imul
call
mov
add
or
xor
push
pop
lcall
dec
xchg
sub
or
jmp
jnp
mov
xor
and
pop
jmp
stos
stos
mov
test
fisubl
jl
idivb
enter
xchg
fs
mov
jmp
daa
pop
fadds
addr16
jne
push
xor
clc
add
and
enter
out
sub
insb
mov
xor
call
xor
mov
out
negl
jg
adc
push
or
jb
sub
push
outsb
push
ds
ja
or
xor
out
test
dec
rcr
shl
and
push
or
int3
sbb
ja
mov
mov
xlat
movsb
in
fldenv
out
ret
or
push
xchg
or
lock
sub
lds
rorl
sub
clc
ret
mov
mov
movsb
aad
dec
add
or
jns
nop
movsl
add
ret
les
sub
addb
mov
sahf
mov
cli
data16
fidivrs
scas
lea
mov
out
mov
inc
push
inc
or
mov
arpl
mov
std
outsb
icebp
ljmp
cmpsb
loope
call
cmp
add
in
xchg
xchg
mov
gs
loop
lock
in
enter
cmp
push
add
push
stc
lock
aaa
adc
ja
cmpsb
fwait
inc
gs
adc
adc
emms
shr
pop
test
pop
lods
push
pop
pop
xchg
inc
or
hlt
mov
cmpsl
pop
paddusb
rorb
mov
cli
gs
mov
inc
cltd
mov
mov
jae
sub
arpl
cmp
sbb
lret
fisubrl
sbb
pusha
outsb
les
and
inc
lahf
mov
repz
inc
clc
jnp
jbe
push
movsl
cs
cwtl
pop
sahf
ret
xlat
xchg
sbb
enter
sahf
jno
lcall
test
mov
add
in
push
sbb
adc
push
popa
in
movsb
pop
nop
lock
cld
roll
jbe
sahf
shll
das
fidivrs
cmp
inc
mov
loopne
add
add
loop
jl
mov
clc
jae
popa
sti
mov
scas
mov
mov
dec
push
int
or
lock
push
repz
adc
dec
ret
or
adc
andl
cli
sbbb
cmpsb
inc
ja
and
loop
fcmovu
je
out
iret
lret
fcmovu
sbb
rcrl
mov
xchg
mov
push
mov
in
ja
inc
fstpt
sbb
sbb
scas
lahf
jnp
sub
movsb
mov
out
or
xchg
ja
pushf
insb
ljmp
stos
sub
insb
pop
pushf
inc
xchg
pop
xchg
int
sub
cmpsl
push
faddp
push
xchg
decl
mov
jae
jecxz
jne
mov
mull
xor
mov
movsl
cmp
pop
lods
push
das
data16
outsl
mov
and
pusha
in
enter
push
cmp
dec
addr16
cs
inc
push
jecxz
scas
dec
or
or
cmpsb
jne
fldcw
ja
jo
daa
cmp
mov
and
push
mov
pop
mov
dec
cmp
fiadds
sbb
pop
dec
xchg
out
mov
dec
dec
mov
aas
out
outsl
add
mov
and
test
or
les
mov
daa
add
in
lcall
out
sarl
js
mov
das
loopne
add
pop
mov
test
sbb
cmc
jecxz
inc
inc
nop
mov
inc
int3
lods
fstps
repz
push
fst
loope
inc
rolb
iret
pushf
mov
in
sub
jbe
aad
pop
aad
lret
push
push
jmp
pop
out
mov
xor
cltd
push
loopne
add
mull
in
sbb
into
mov
xchg
out
add
lods
push
das
pushf
xchg
in
inc
lea
fistps
cltd
mov
lock
jnp
dec
js
add
lods
hlt
sbb
insb
xchg
sub
fiaddl
mov
sbb
outsl
and
mov
cld
repz
jnp
fst
lcall
adc
cmp
fxam
xchg
xchg
xchg
lods
sub
aas
cwtl
sub
adc
out
push
lret
shl
fcoms
pop
out
inc
test
jns
and
fdivs
jmp
ljmp
dec
mov
push
lcall
xor
sarl
jbe
cmp
lods
aad
pushf
inc
pop
xchg
insl
xchg
imul
shlb
aaa
push
inc
sbb
jl
cmp
shlb
loope
push
xor
and
ds
orb
xor
mov
push
push
push
dec
mov
push
aas
insl
and
pop
mov
fsubrl
stos
add
fwait
movsb
cmp
and
clc
xchg
fmul
pop
leave
fdivrl
inc
mov
pop
xchg
jle
mov
in
and
jl
mov
push
outsl
lret
stos
cmp
popf
ds
iret
mov
pop
clc
mov
fimuls
add
cmp
mov
gs
in
jo
divb
les
push
and
repz
dec
jl
stos
out
out
int
pusha
inc
pop
pop
or
xor
je
lcall
adc
bound
call
mov
xchg
xchg
xorl
sub
test
adcb
pop
hlt
mov
dec
pusha
out
push
inc
fnstenv
rol
mov
mov
jb
dec
aad
sbb
push
popa
sbb
call
xchg
rolb
rorl
dec
mov
scas
ja
mov
stc
ss
int3
inc
jmp
mov
pop
mov
cmp
xchg
les
cmpsl
cmpsl
and
jnp
mov
je
or
scas
fimull
loopne
cwtl
and
push
mov
mov
stos
xorb
mov
xchg
nop
jecxz
push
jg
xor
mov
lock
nop
or
outsl
test
xchg
sub
xorl
dec
xlat
pushf
pop
daa
or
pop
pop
xchg
mov
mov
cmpsl
jmp
sbb
outsb
cs
divb
xor
fldcw
jp
pop
dec
repz
jbe
sarb
fwait
add
mov
lods
jne
sbb
nop
xchg
fwait
sbbb
cld
ljmp
lock
test
outsb
xchg
jmp
into
mov
jmp
in
hlt
sti
jo
js
bnd
int
stos
jl
dec
xorl
getsec
add
pusha
xor
sarl
jbe
jnp
mov
repz
sub
data16
add
rorb
fisubrs
jae
pop
sub
mov
mov
insl
xor
push
cmp
and
aad
jae
fldl
repnz
jge
loop
rcll
add
inc
aas
mov
or
xchg
mul
jae
stos
xchg
jp
mov
mov
jb
pop
popf
xchg
pop
ret
rol
rcll
inc
sbb
and
das
out
lret
pop
xchg
cwtl
push
lahf
push
push
or
mov
xor
hlt
and
stos
pop
mov
sar
movsl
das
dec
xchg
int
mov
sahf
stc
mov
jnp
mov
fldt
sar
int
iret
insb
test
test
mov
push
repz
hlt
sar
mov
jae
push
jle
out
shll
inc
mov
outsl
mov
xchg
jle
out
xchg
push
mov
sti
push
cld
inc
test
inc
cmp
iret
icebp
xchg
mov
add
stos
mov
aaa
jmp
in
lahf
adc
jge
pop
dec
scas
aam
dec
and
xchg
mov
ljmp
jle
aad
mov
repz
and
xor
js
imul
and
mov
pop
push
je
icebp
and
push
sub
cmp
fbstp
inc
jnp
push
fnsave
sahf
mov
dec
inc
les
test
jl
fisttpll
gs
and
xchg
cltd
jo
jnp
xor
cwtl
pop
pop
sti
inc
out
or
mov
lret
xchg
and
sub
xor
or
inc
negl
sbb
or
pop
call
in
xchg
sbb
fucomp
push
pop
mov
mov
jle
notl
mov
fcompl
out
push
cmp
int3
je
ljmp
inc
lds
pop
test
stos
xchg
nop
ffree
cmp
stos
insl
data16
loopne
std
sub
imul
rclb
sub
rcll
inc
push
push
inc
cs
inc
jo
aad
jb
pop
mov
in
mov
mov
cmp
jo
lds
fisubrl
faddl
inc
ja
in
xor
cwtl
push
inc
test
je
inc
mov
imul
movsl
jle
loopne
clc
xchg
loop
out
xchg
inc
xchg
in
gs
push
cmp
clc
pusha
cmc
xor
sub
test
rclb
sbb
jbe
cmp
mov
daa
mov
xchg
xchg
push
cmpsb
mov
or
call
xlat
add
xor
out
push
loop
cs
test
mov
in
sahf
leave
sub
dec
les
sbb
imul
shll
cld
es
lock
fsubr
pop
adc
mov
sbb
sbb
inc
rcrl
mov
cmp
outsb
and
add
mov
int3
movsb
jae
icebp
ljmp
add
mov
pushf
idivb
shll
scas
fsubrl
in
jne
dec
xchg
shll
test
sub
mov
pusha
leave
fwait
jo
js
shlb
lret
shll
push
nop
mov
outsl
jmp
pop
jmp
mov
jg
mov
xlat
cmp
fldenv
jmp
jb
cmp
outsb
cmp
lods
sbb
call
sub
outsl
adc
aam
stc
movsl
lcall
push
das
jb
cmpsb
scas
stos
sub
shll
scas
push
xchg
cmp
testb
jmp
stos
dec
push
lahf
arpl
das
das
sbb
aas
xor
push
push
dec
jp
lock
mov
out
xchg
sbb
push
sbb
rcll
movsb
adcb
loope
rcr
stos
lds
scas
fsubrl
andb
sbb
xor
add
cld
xor
pop
aaa
jb
bound
xchg
shll
mov
sbb
clc
adc
clc
xchg
sub
dec
or
shll
cmp
lcall
cli
or
mov
mov
int3
leave
nop
imul
addl
pop
loop
xor
sub
test
push
xor
test
inc
popf
ret
sbb
clc
scas
push
fucomip
cmp
rcrb
xor
push
push
fdivrl
add
ret
cli
aad
pop
loop
stc
lods
arpl
shufps
cld
mov
mov
in
push
jle
stos
ljmp
ljmp
mov
into
shrb
inc
jae
xchg
mov
add
ja
xchg
nop
inc
mov
aam
scas
sbb
lods
imul
aad
aas
xchg
dec
xchg
test
aam
cmp
push
xor
test
push
cmp
loop
out
in
lods
je
mov
add
movsl
sub
xor
aad
outsb
nop
dec
test
push
rcl
jns
movsb
jl
push
lock
pushf
mov
test
adc
mov
movsb
ss
sub
ljmp
cmpsl
rol
or
in
push
std
sbb
stos
sub
ret
negb
dec
pop
test
popa
xchg
xorl
fsubrs
xlat
xchg
inc
inc
jecxz
mov
sbb
fcomi
ret
push
inc
fcmovnu
es
test
fisubl
roll
ret
pop
aaa
mov
dec
inc
jno
push
cmp
mov
lret
and
popf
lea
xor
adc
dec
sti
nop
cmp
fst
repz
insb
movsl
and
pop
xor
ja
out
jae
fwait
dec
mov
xchg
icebp
mov
fld
jle
data16
mov
inc
sarl
sbb
sbb
inc
mov
dec
scas
dec
mov
xchg
add
fidivs
mov
pop
cmc
pushf
mov
xchg
lods
or
sub
jle
shl
popf
repz
push
scas
dec
je
sbb
cs
mov
popf
jns
jge
xchg
les
test
cltd
push
fists
rcl
or
loope
cmp
jl
ror
jno
jle
sahf
and
push
das
and
movsb
cmp
aad
js
sub
out
sub
rolb
adc
sub
add
sti
imul
xchg
inc
xchg
push
push
fcoml
sub
add
fucomp
dec
push
xchg
add
in
je
sub
mov
in
or
pushf
stos
cs
fistl
rcrl
sbb
stc
out
push
push
mov
fidivrl
mov
sarl
inc
push
daa
or
insl
pushf
sub
arpl
dec
repnz
add
jmp
out
pusha
mov
pushf
rcrl
insb
jp
and
shll
sub
cli
std
fbld
dec
add
enter
popf
cmpsl
xlat
adc
jae
incb
movsl
xchg
andl
popa
add
adc
int
imul
aaa
rclb
xor
mull
cmp
xor
in
cmp
aam
jne
xor
mov
popf
xchg
fwait
xor
xchg
sahf
shl
and
cmp
ljmp
or
push
outsb
fcmovne
shll
hlt
or
add
clc
jbe
mov
add
aam
xchg
cs
rol
mov
mov
out
jns
lds
cmp
xchg
sarl
in
into
and
fwait
push
nop
push
jae
les
inc
aas
lahf
test
ficomps
iret
sub
fwait
xchg
and
nop
or
das
std
lock
adc
imul
decb
fimull
movsb
fidivl
push
stos
add
xchg
orl
ja
adc
adc
lds
pop
and
pop
test
pop
loopne
gs
jbe
inc
out
cld
clc
cmp
xlat
ja
orl
cmp
pop
ret
cmp
cmpsl
cmp
or
sbb
fs
shrl
pop
and
sbb
lcall
cmp
jl
into
mov
loopne
push
icebp
push
mov
movsl
add
jg
fs
clc
mov
loope
insl
loopne
cwtl
addr16
lcall
add
jnp
sbb
xor
cld
xchg
das
int
adc
or
cmp
arpl
scas
vmread
sbb
out
in
sti
mov
jne
outsl
dec
mov
test
pop
gs
dec
add
dec
loop
add
mov
xor
divb
sbb
or
daa
and
dec
xor
mov
mov
sbb
sbb
mov
stc
pop
xor
lret
jmp
add
into
dec
mov
and
ds
mov
cld
insl
ss
int
mov
push
xchg
jns
lret
and
mov
push
les
pop
jne
pop
sub
lods
push
pop
lret
sub
nop
dec
in
push
ss
arpl
scas
pop
lret
mov
lahf
jno
xor
fadd
gs
fbstp
dec
int3
loopne
roll
and
in
iret
popa
push
leave
xlat
sub
test
mov
push
lods
adc
ja
add
dec
mov
and
sbb
push
aam
jl
push
out
fcompl
push
sahf
jnp
inc
inc
dec
mov
cwtl
pop
fnop
push
or
xor
sbb
dec
andl
adc
mov
loopne
cmpsl
mov
repz
in
jl
iret
mov
push
roll
pop
mov
mov
or
pushf
cmp
mov
aas
xor
mov
mov
xchg
stos
into
shll
data16
arpl
fs
lss
xchg
mov
push
inc
cmp
dec
xor
fwait
cmp
lahf
into
mov
dec
std
jmp
mov
and
ficompl
mov
jnp
xor
mov
lock
pusha
cli
lret
daa
rcl
mov
dec
and
xchg
jl
scas
xchg
push
cmpl
push
mov
pop
shlb
cli
pop
xchg
in
subb
sti
pop
lods
stos
sub
lsl
loopne
push
call
sbb
xchg
add
and
mov
icebp
insb
fsubl
ds
into
push
fstpl
mov
dec
xchg
jbe
imul
sbb
mov
cmpsb
or
dec
mov
ss
xchg
lret
jno
in
add
lds
jmp
push
and
inc
jg
push
jl
outsb
jns
dec
adc
repz
repz
lock
pop
decb
ja
shll
mov
fdivs
mov
xchg
xor
jae
movups
mov
int3
push
sahf
out
xchg
jmp
mov
push
paddb
push
mov
call
inc
xchg
or
pop
cmp
fisubl
test
pop
ljmp
pop
push
test
cld
lret
shll
or
mov
and
pop
cmp
in
mov
jns
and
jecxz
xchg
pushf
fcmovbe
jge
push
lahf
and
jo
sahf
rcrb
sub
aaa
popa
sahf
arpl
repnz
sub
lods
mov
ret
out
popf
negb
sbb
pop
or
sbb
jecxz
pop
daa
out
or
push
mov
fdiv
adc
imul
mov
jae
push
push
xchg
dec
push
lods
xor
inc
push
inc
test
lahf
out
fists
dec
andb
fsubrp
stos
addr16
mov
or
out
inc
cltd
inc
lock
mov
repnz
jns
mov
mov
leave
rcr
je
jmp
dec
pusha
cld
ds
enter
aam
dec
sahf
ret
push
je
jno
adc
stos
pop
xchg
pop
es
popa
in
mov
mov
cld
jle
or
and
xchg
inc
mov
sbb
daa
aad
out
cmp
sub
sub
pop
dec
stc
fisubrl
lret
xchg
pop
jge
daa
lods
add
push
dec
jne
or
cmp
inc
jne
jb
das
xor
mov
inc
test
xchg
push
fistpl
push
in
mov
xor
mov
scas
fildll
aam
jns
sbb
das
insl
push
lock
or
pop
fistpll
in
testb
mov
outsb
test
jle
adc
mov
push
cmp
add
repnz
push
xor
cmpsb
adc
andb
and
pop
mov
pop
add
sub
push
xor
or
pop
mov
push
jnp
or
jne
hlt
ss
inc
shrb
pop
push
push
mov
int3
filds
das
sub
cmp
je
mov
xchg
push
mov
sub
cmp
sti
pop
test
cmp
into
dec
push
sbb
mov
ljmp
aaa
test
fcompl
dec
pop
test
mov
sub
mov
xchg
jo
push
sbb
mov
mov
dec
scas
les
jb
int
out
inc
fmuls
lret
lahf
aad
outsb
xchg
out
pop
adc
and
sbb
in
subb
fldl
add
cmp
sbb
outsl
jo
mov
nop
or
test
push
aas
loopne
fiaddl
and
fdivs
ljmp
movsl
vunpckhps
push
aas
stos
mov
or
xor
subb
jae
lahf
daa
out
dec
stos
pushf
fcmove
mov
jb
xchg
mov
stos
rcr
push
xor
add
ret
rcrb
dec
push
das
loop
jns
adc
mov
pushfw
xchg
cmp
xor
mov
bound
push
xor
pop
subb
sub
inc
adc
lods
fmuls
xor
and
movsl
adc
mov
sbb
andb
les
or
or
pop
or
out
in
pop
jge
sarl
mov
cmpsb
adc
adc
mov
das
pop
cmp
test
lods
xchg
adc
js
aad
xchg
pop
aad
add
insb
mov
xchg
lds
push
movsb
pop
mov
pop
ret
outsb
ds
mov
aad
dec
js
mov
rcrb
out
cmc
std
fstp
nop
das
fucomp
cltd
sbb
idiv
rolb
in
inc
in
add
xlat
mov
lods
imul
rcl
fcomps
pop
popa
pushl
mov
ds
sti
jo
nop
jns
push
xchg
cmp
cmp
test
hlt
adcl
push
loope
arpl
int3
lds
ret
mov
andb
icebp
arpl
push
call
mov
inc
inc
insb
sbb
aaa
adc
dec
mov
lods
cmp
push
push
xchg
adc
xchg
incb
mov
inc
xchg
mov
and
int
rol
push
push
dec
aas
cmpsb
sarl
jb
outsl
mov
cli
push
out
aaa
icebp
loopne
daa
xchg
jne
xchg
adc
lea
sbb
icebp
stos
inc
aas
stos
out
roll
mov
rcll
data16
inc
cmovle
xchg
sub
call
mov
fsts
cld
jno
cmp
stos
iret
xor
mov
leave
mov
pop
fwait
fwait
or
mov
jmp
repnz
or
add
and
cli
push
out
ss
rolb
xchg
sub
xchg
pop
xor
jp
shlb
sahf
in
pop
fcmovnb
ret
testl
dec
inc
mov
adc
sub
pop
loop
ret
pop
adc
sahf
cmp
inc
and
in
pusha
int3
arpl
shlb
or
inc
cli
or
dec
mov
push
mov
dec
add
lea
sub
ficomps
cld
popf
lock
inc
sub
jecxz
daa
mov
sbb
add
iret
ljmp
fisttpl
mov
cwtl
mov
cmp
jno
xchg
mov
inc
mov
push
push
add
repnz
xor
bound
mov
out
mov
js
mov
cltd
xor
das
neg
inc
dec
pop
inc
scas
or
insb
and
jae
bound
mov
into
ret
inc
dec
inc
fbld
mov
jne
cmpsb
inc
jae
inc
jne
push
cmp
pop
sbb
sbb
inc
push
xchg
fs
scas
fs
mov
lds
es
sbb
clc
nop
lock
gs
sti
addl
data16
xor
xor
fimuls
pop
mov
cmp
aaa
mov
push
jno
daa
in
decb
inc
lock
or
fnstsw
jmp
and
adc
push
cmp
std
icebp
mov
pop
pop
aaa
in
mov
int
jg
scas
xchg
outsw
out
inc
cltd
loope
jp
andl
stc
dec
subl
fmuls
movsb
sub
jno
ret
push
in
into
adc
wbinvd
or
adc
xchg
dec
sub
jnp
sahf
out
push
jge
aas
sbb
fstps
iret
push
movsb
mov
jo
push
add
xor
pop
push
adc
pop
test
add
ret
outsb
jo
jp
push
lret
jne
shl
jno
fsubs
mov
cli
mov
lcall
daa
and
icebp
mov
in
lds
gs
and
mov
cmp
sahf
out
mov
xor
mov
fstl
sub
cli
adc
pusha
js
sahf
mov
pop
mov
xorb
out
inc
subl
sub
sarb
divb
cmc
mov
inc
or
inc
sub
xchg
repz
mov
cld
icebp
rcr
lods
push
pcmpgtw
movsl
add
lret
jg
inc
les
adc
mov
sar
xchg
daa
adc
mov
and
jno
std
ret
sbb
xor
daa
hlt
adc
jb
pop
mov
push
sbb
mov
inc
aad
inc
push
cmpsl
test
pop
push
pusha
mov
test
jbe
hlt
lahf
js
pop
addr16
add
mov
push
mov
icebp
arpl
cmp
add
mov
aas
push
movl
int3
int
ret
ljmp
mov
in
js
push
xlat
les
dec
out
add
mov
pop
idivb
lods
mov
ljmp
bound
jecxz
pop
push
cld
mov
push
xchg
fisttpl
rorl
leave
and
xchg
and
or
mov
cltd
sub
mov
rcll
es
aad
xchg
rcrl
gs
mov
lods
sbb
add
es
clc
inc
imul
les
xchg
xor
inc
pop
pop
mov
in
cmp
mov
in
cmp
sbb
cwtl
out
and
outsb
orl
dec
jns
mov
outsb
enter
adc
mov
or
sbb
pop
fisubrs
std
and
adc
aam
das
lahf
cmp
jg
ficompl
imul
mov
jo
push
mov
pop
inc
push
mov
xchg
jns
xor
and
inc
mov
lods
test
cwtl
std
dec
push
cmpsl
dec
icebp
lret
dec
out
cld
jle
test
and
dec
jecxz
in
pop
xchg
rcrl
jnp
or
idivb
or
sub
scas
push
xor
mov
jl
push
sub
pop
mov
mov
js
jo
test
data16
addr16
add
push
ljmp
lds
bound
stc
jge
into
xlat
inc
cld
pop
lret
sbb
loopne
sbb
shrb
daa
inc
jb
testb
push
push
jbe
in
xchg
data16
loop
mov
test
cmp
add
pop
jnp
mov
aas
push
inc
mov
mov
pop
inc
xor
cmpsb
lahf
inc
mov
adcl
fmuls
lcall
cmp
xor
sub
xor
inc
mov
push
mov
push
inc
into
pop
fiaddl
sub
hlt
dec
dec
fwait
mov
addr16
cli
push
fidivs
ja
xchg
loopne
xchg
dec
add
xchg
in
adc
jb
add
popf
push
test
and
cltd
test
and
or
cmpsb
mov
mov
sub
outsb
roll
lea
pop
push
test
cmp
lods
jno
push
jne
fs
add
sub
mov
adc
ja
xchg
cld
pop
lahf
xor
je
mov
aad
mov
fiaddl
xchg
mov
fwait
push
adc
cmp
enter
ds
popa
outsl
mov
test
xor
mov
dec
or
lods
cmp
pop
test
xor
jle
xlat
mov
lahf
xor
mov
mov
scas
sub
je
adc
je
jle
mov
into
mov
in
loope
mov
int
push
push
push
jmp
stos
dec
or
enter
scas
inc
add
sti
arpl
xor
ss
cwtl
xchg
ljmp
mov
and
pop
dec
sti
aaa
push
inc
jle
lea
pop
and
push
cwtl
sbbl
pop
xor
add
frstor
xor
mov
mov
dec
fs
add
test
sub
movsb
insw
rol
lock
in
and
js
iret
sbb
fstpt
cmp
fs
push
loop
push
sbb
js
insb
mov
js
cmc
jg
jge
pop
jmp
or
popa
jne
clc
and
push
sbb
xchg
outsl
out
das
mov
call
shlb
push
mov
push
sbb
es
ss
psrad
mov
push
or
mov
push
ja
sbb
out
jp
adc
adc
cmp
in
int3
inc
sub
mov
fidivrs
dec
mov
sbb
xchg
inc
jle
out
mov
cwtl
shlb
and
sbb
mov
movsl
fidivrl
lcall
mov
xor
clc
xor
sbb
sub
divl
aas
fsub
nop
and
stos
push
push
imul
mov
add
jo
inc
insl
pushf
icebp
inc
shll
xchg
cwtl
pop
divb
mov
sub
push
fwait
push
inc
aaa
clc
push
xor
or
shl
mov
les
int3
addr16
scas
insl
jne
mov
sub
rcrl
test
jnp
fcoms
and
fcoms
lcall
mov
adc
inc
stc
enter
xchg
fwait
sub
cmp
in
pop
cmp
cmpsb
add
int
xchg
dec
mov
xor
mov
jno
aaa
xor
stos
jno
add
pop
push
dec
shll
popf
int3
cmp
pusha
dec
call
outsb
cmp
test
es
xor
ljmp
pop
mov
rcl
or
sub
mov
sub
jle
dec
iret
jle
mov
sbb
adc
pop
pushf
call
push
movsb
inc
ret
lds
push
pop
andl
adc
mov
test
dec
inc
rcrb
inc
push
arpl
inc
sbb
stos
xor
sbb
fwait
adc
jns
test
mov
ret
testl
xlat
push
or
sbb
and
enter
or
les
scas
out
fbld
ret
cmp
inc
daa
fisttpl
and
pop
fbstp
jp
push
mov
andb
inc
inc
cmpsl
cltd
into
mov
mov
fidivl
cli
adc
mov
subb
sti
aas
dec
lret
sub
movsb
fnstenv
and
cmp
push
mov
rorl
lds
cmc
dec
repnz
imul
or
add
fisttps
ficoml
fnstsw
push
stos
dec
or
push
xchg
xchg
xor
addb
std
pushf
jns
in
fstpl
push
ss
pop
jnp
inc
xchg
scas
inc
jp
dec
mov
xor
out
repz
cmp
int
xlat
sub
inc
lock
repz
mov
mov
fsubs
and
xchg
roll
testl
clc
cmpsl
cmp
mov
jnp
push
push
fsts
xchg
sahf
mov
int
bound
cmpsb
mov
mov
pop
cwtl
in
adc
cmpsl
cmpsb
cmc
add
loopne
sarb
ficomps
aad
jno
cmpsb
inc
dec
ja
mov
fnstenv
sub
notl
mov
mov
mov
sub
xchg
cli
inc
es
push
sbb
insl
out
in
sahf
xchg
ficoms
dec
loop
adc
cwtl
sbb
mov
and
outsl
dec
lret
movsb
push
fisttpl
sarl
test
push
in
pop
test
mov
shll
or
sbb
dec
mov
test
lods
xlat
dec
outsb
imul
std
add
ja
js
aam
mov
mov
inc
sbb
jno
clc
in
pusha
out
iret
mov
push
mov
int3
pop
insb
mov
out
adc
popf
inc
lods
pushl
xor
xchg
mov
fistl
lahf
adc
rcr
xchg
sbb
add
push
and
push
popa
cmp
push
aaa
sub
repz
xor
icebp
dec
pop
mov
or
jb
cwtl
push
je
sahf
jecxz
out
aad
xchg
mov
fbld
xor
mov
add
cld
xchg
call
pop
aam
mov
jne
divl
mov
xor
mov
dec
js
xchg
cli
inc
mov
shll
and
fidivl
inc
fsubl
xchg
cli
pop
out
cwtl
xor
clc
mov
xor
cmp
mov
jno
out
imul
jnp
mov
sub
ficompl
mov
cmp
push
push
pop
inc
mov
mov
loope
push
sbb
in
dec
ret
push
nop
add
push
cli
iret
int3
cli
test
inc
mov
pop
adc
cmp
sahf
and
xlat
scas
std
jno
loop
push
int3
dec
mov
inc
inc
mov
add
pushf
enter
mov
jns
imul
ja
popa
pop
xchg
cmpsb
cmc
imul
aad
and
sub
fists
cwtl
adc
inc
out
test
mov
add
clc
in
xor
fwait
pop
sub
and
jne
mov
sbb
mov
insb
mov
or
xchg
mov
xchg
cltd
cwtl
mov
jno
cmpsl
jp
mov
cltd
pop
imul
inc
fcompl
dec
sbb
int3
and
data16
adc
or
aaa
test
jns
sub
je
xchg
scas
dec
orl
imul
nop
jge
push
pushf
jle
lea
nop
or
test
or
scas
mov
and
sarb
fst
pop
leave
adc
add
inc
dec
arpl
jb
inc
jecxz
rorl
je
mov
test
mov
ja
adc
in
call
or
cli
adc
insl
popa
pop
aas
pusha
jae
movsb
pop
mov
test
fnsave
lea
and
xlat
mov
or
pop
push
cmovnp
xor
je
cmp
testl
dec
rcll
cltd
pop
and
into
mov
ret
mov
mov
xor
stc
add
mov
cmp
mov
leave
mov
jno
imul
push
dec
rcrb
jo
dec
cltd
add
pop
xchg
test
and
out
or
and
fcmovu
dec
dec
test
mov
adc
jne
adc
jge
cwtl
adcl
add
js
xor
add
add
int3
adc
pop
inc
mov
or
fcomps
sub
and
inc
xchg
cmc
jge
pop
in
dec
sub
faddl
xchg
outsb
cmp
xchg
add
adc
add
clc
xor
inc
mov
pop
cmc
lret
cmpsl
hlt
inc
pop
ja
inc
sbb
fimull
xor
and
ja
fstps
xlat
into
pop
in
mov
cltd
iret
and
js
fsubrl
pop
stos
cmpsl
jae
mov
push
bnd
mov
mov
cmp
loop
jp
adc
imul
movsb
jo
adcb
fdivrp
testl
jne
ljmp
xor
mov
lea
subb
fcmovbe
clc
int3
dec
scas
add
add
inc
daa
rolb
jmp
mov
add
fists
cmp
addr16
mov
pop
es
outsb
pop
jo
push
testl
jle
mov
int
decl
xchg
inc
pop
cltd
bound
jno
lahf
adc
push
jge
mov
xor
jbe
jmp
push
cmp
stos
pop
cwtl
insl
adc
jp
mov
in
cmc
push
ds
shl
and
jp
or
cmp
xchg
jg
mov
push
js
sub
and
mov
jge
les
dec
mov
jmp
cmp
adc
lret
inc
sub
xor
pop
aas
xlat
xor
insb
repz
ljmp
or
xor
mov
mov
lods
or
mov
out
js
mov
arpl
jge
jb
shrl
int3
addr16
out
mov
mov
shlb
rorb
mov
in
test
mov
xor
cmp
sarb
xor
dec
jle
aas
mov
cmc
imul
js
mov
sub
pusha
je
popa
lods
push
bound
stos
jne
pop
enter
push
movsl
mov
mov
cmp
decb
jge
ja
cmpsb
pop
and
mov
popa
rol
mov
mov
adc
mov
enter
cli
pop
or
jae
jns
fs
push
pop
adc
sbb
inc
dec
xor
pushf
cltd
mov
pop
mov
jae
jae
fistl
and
paddsb
cmp
sub
rol
adc
ljmp
adc
and
lds
mov
pusha
jge
cs
enter
loop
int
notl
pusha
sub
or
jno
jg
sub
pushf
mov
loopne
mov
fidivrl
mov
dec
mov
cmp
or
mov
in
xchg
pop
rorl
mov
roll
add
test
cmp
mov
bound
pop
stos
mov
aaa
xchg
xor
stc
cmp
lods
xchg
xchg
add
dec
jno
in
aam
or
mov
in
addr16
nop
jp
dec
jo
stc
clc
icebp
fdivrl
pop
mov
int3
xchg
dec
lods
imul
pop
lret
xchg
aas
and
loopnew
sub
mov
lret
flds
outsb
adc
daa
sub
cmpsl
sub
les
and
les
std
aam
mov
decb
xchg
in
jo
or
jg
sub
stc
les
arpl
add
fidivrs
loope
bound
fcomps
in
movsl
xor
push
repz
xor
test
mov
pop
test
push
cmp
and
push
dec
sbb
dec
cmc
fs
sbb
insb
xlat
mov
lahf
inc
jp
fsub
adc
add
adc
popa
xchg
aaa
push
xor
stos
scas
imul
push
cmp
adc
xlat
jne
lret
inc
nop
fstps
movsl
int3
cmp
imul
lods
mov
xor
inc
add
mov
or
les
and
outsl
mov
insb
test
sarb
push
cwtl
movsl
or
dec
test
dec
leave
adc
cwtl
fstpt
mov
sti
div
pop
mov
cmp
adc
dec
test
mov
imul
call
sbb
lahf
out
sbb
arpl
sub
repz
add
and
dec
mov
bnd
in
outsb
rol
sbb
mov
outsl
fstl
mov
xchg
fadds
cmp
or
fiadds
mov
push
jmp
std
rcrl
jecxz
mov
push
stc
inc
inc
test
inc
sub
cmp
inc
jmp
stc
gs
pop
pop
sub
pop
cmp
les
adc
pusha
imul
mov
and
es
mov
bound
repnz
dec
lret
sbb
push
and
es
in
popf
and
add
cmp
jecxz
xchg
dec
push
mov
adcl
les
jb
cli
addr16
dec
mov
inc
push
js
inc
mov
push
fxch
sub
jge
inc
mov
jp
push
xor
dec
stos
aaa
lods
lods
mov
nop
sub
shll
sbb
call
sbb
mov
push
out
lock
das
adc
add
fbstp
sub
data16
jge
rcll
pop
shr
shrl
in
mov
bound
xor
cmpsb
popa
mov
ja
imul
fistpll
leave
adc
dec
iret
test
rcrl
rcll
imul
jo
ja
mov
fisubrl
xor
sub
loopne
cmp
lods
mov
cmpsb
hlt
cmp
xor
mov
push
lcall
jecxz
cmpxchg8b
jne
stos
dec
push
jle
sbb
push
icebp
ror
inc
fnsave
push
aam
fsts
xchg
aaa
jecxz
jecxz
cmpsb
add
add
adc
sub
lds
and
xor
loope
dec
mov
jnp
mov
dec
roll
sub
std
inc
outsl
jae
lods
push
int
fistl
out
pusha
movsl
xchg
mov
test
imul
into
xor
fwait
inc
ljmp
push
add
scas
ret
and
add
shll
fcomps
inc
dec
fnsave
jno
jmp
mov
jae
mov
ror
sub
scas
sbb
pop
xor
lods
test
mov
and
push
or
cld
cli
inc
xor
inc
mov
leave
mov
jecxz
lret
roll
push
jp
inc
xchg
popf
mov
xorps
sbb
insb
daa
add
inc
inc
add
ret
xchg
lds
aad
mov
mov
push
mov
sahf
mov
pop
ds
mov
mov
xchg
add
ja
cli
repz
push
cwtl
test
or
sar
jmp
jl
mov
jge
mov
insb
adc
repz
cmp
jge
lods
push
rorl
and
sub
repz
rcrl
es
and
popf
push
loope
pop
cmp
int
lods
icebp
xchg
mov
and
xorl
icebp
sub
test
stc
bound
dec
pop
inc
jmp
test
sti
jbe
pushf
cmpsb
sbb
lds
inc
aas
jp
pop
mov
pop
pusha
pop
sub
test
cmp
or
cs
clc
arpl
dec
scas
add
lock
mov
pop
mov
mull
xor
es
fwait
mov
cmpl
adc
test
sub
add
les
pop
les
xchg
imul
repnz
xchg
adc
out
shll
xchg
lret
fdivrl
repnz
add
mov
pop
shll
nop
fsubl
mov
rolb
cld
lret
pop
cmp
ss
jo
dec
jnp
cmp
aam
jge
lock
and
push
adc
inc
fadds
in
pop
arpl
iret
enter
mov
mov
out
gs
dec
mov
pushl
and
adc
pushf
cmp
jno
rdmsr
add
popw
loopne
fmull
lret
daa
push
fmull
iret
jnp
cmp
dec
pop
mov
popa
cmp
insl
daa
lods
ds
adc
arpl
mov
and
rolb
rcr
mov
xorps
jae
dec
test
dec
add
shll
mov
xor
adc
mov
dec
ljmp
in
imul
into
loope
push
jg
aas
jo
dec
lcall
shr
lahf
pop
jg
in
jae
or
pusha
aad
vpmuludq
insb
inc
decb
outsl
cmp
fcomps
fmul
ss
add
out
aad
pushf
adc
clc
xchg
adc
lret
add
cmc
insb
gs
jecxz
mov
xlat
in
call
mov
cmc
sub
push
jp
cmp
daa
add
xchg
das
rcll
outsb
jmp
mov
aaa
subl
xor
pop
dec
xor
cmp
adc
pop
ss
sahf
andb
ss
jae
lahf
push
sub
mov
inc
andl
in
jecxz
aam
insb
mov
test
test
inc
inc
es
push
lret
and
or
cld
sbb
ljmp
lds
loope
test
imul
movsl
ss
mov
in
adc
sbb
or
cmp
sbb
inc
cmp
push
in
lock
rclb
out
ficoml
insb
sbb
es
pushw
jmp
clc
fcmovnu
bnd
leave
aas
stos
xor
sub
faddl
push
clc
stos
xchg
lcall
jbe
adc
jg
movsl
lret
fs
sub
fimull
out
add
ds
aam
jbe
push
fwait
pop
jo
fucomi
push
push
subl
sarl
sub
inc
sbb
sti
imul
mov
cli
int3
cmp
fstpt
sub
jb
or
push
cmc
pop
jp
jmp
popf
jecxz
push
enter
adcl
stos
mov
sub
and
and
adc
lods
sbb
inc
jl
xchg
cs
mov
in
sub
gs
das
fisubs
pop
ljmp
ret
sbb
push
push
sarb
xchg
xchg
js
xor
mov
adc
div
mov
mov
xchg
jecxz
outsb
and
mov
shll
shlb
insb
repnz
mov
pop
add
insb
adc
pop
and
out
xchg
lea
jmp
outsb
jbe
inc
rolb
xor
cmpsl
mov
ds
inc
jo
add
in
dec
int3
xchg
or
cmp
add
mov
mov
mov
cmp
fisttpl
sub
loopne
mov
mov
cmp
add
stos
mov
lock
cmp
clc
divb
and
mov
sub
push
xchg
fs
and
mov
dec
xchg
jg
inc
xchg
and
mov
jecxz
pop
pop
dec
add
adc
test
fcomi
lods
xor
adc
scas
mov
icebp
cmp
cwtl
jns
test
fnstenv
xor
scas
sbb
dec
adc
adc
adc
and
rcr
xchg
scas
xchg
fcom
dec
rcr
inc
mov
inc
mov
fcompl
mov
int3
rcrb
nop
mov
lcall
or
xchg
sarb
and
mov
jg
imul
mul
testl
daa
inc
es
add
out
arpl
jne
es
pusha
sbb
js
enter
cmp
sbb
pop
inc
scas
das
movsb
mov
clc
mov
cmp
xor
ds
lahf
scas
sub
shll
out
mov
adc
insb
fldenv
cmp
inc
rcll
pop
jmp
test
dec
sub
sarl
push
push
jge
or
shll
inc
inc
sub
lea
repz
mov
push
xchg
push
pop
aad
sub
inc
popa
in
and
mov
jge
adc
jae
ficompl
test
adc
mov
cmp
mov
jle
outsw
jl
push
or
int
aas
aam
mov
mov
lds
inc
mov
pop
call
lret
ss
inc
or
cmpsl
pop
xchg
jg
movsb
adc
iret
xchg
pop
hlt
inc
lods
mov
xchg
add
sub
mov
cmp
cmp
adc
clc
aas
jge
xchg
dec
push
push
push
adc
sahf
pop
divl
xchg
icebp
adcl
sub
aaa
and
cmp
loopne
scas
shll
cmp
sbb
inc
out
or
ljmp
insl
fucomi
xchg
out
fs
enter
sbb
iret
mov
push
es
inc
pusha
dec
inc
sbb
sub
sarl
pop
sub
pop
cmpsl
and
push
adc
frstor
xlat
dec
sbb
jnp
jae
bound
dec
data16
jo
pusha
daa
loope
push
sahf
sti
jb
nop
gs
dec
cmp
xchg
lahf
xchg
or
dec
dec
add
cmp
leave
dec
xchg
bound
insl
pop
sbb
lcall
xchg
lret
jb
or
je
cwtl
push
jo
lret
adc
push
jno
xchg
dec
or
xchg
inc
mov
or
jb
push
push
ret
clc
fldl
cmp
daa
sbb
cmc
or
fistpll
cmp
push
push
push
mov
stos
and
mov
sub
cmpsl
sub
pop
pop
mov
lds
sbb
loope
je
sbbl
adc
pushf
inc
mov
scas
fs
jbe
xchg
jne
lods
pop
nop
mov
lock
insb
sti
dec
je
icebp
lods
pusha
ss
mov
arpl
dec
fildl
daa
cmpsb
pushf
xchg
mov
pop
lea
daa
fmull
push
cmp
adc
mov
int3
xor
pop
es
jg
cmp
loope
mov
addr16
sub
loopne
fdivrl
push
xchg
repz
sbb
fwait
gs
pop
fisttps
cmp
push
jae
sub
arpl
int
out
bndldx
cmp
sbb
jb
sbb
pop
jne
ret
mov
mov
push
add
movl
add
ficomps
insl
push
insb
stos
jle
push
mov
enter
ja
fs
movsl
xor
aas
int3
cmpsb
loope
cmpsb
movsl
or
cli
sti
loope
mov
cmp
jmp
xlat
mov
jae
pop
push
xchg
inc
mov
mov
test
jne
add
ret
pushf
mov
adc
push
ret
sarb
dec
das
insl
shl
outsl
aad
mov
mov
ds
mov
rol
dec
mov
push
pushf
and
sbb
jmp
addb
pop
jb
js
cmc
clc
xor
sbb
push
stc
mov
mov
or
xchg
jo
xorl
ds
stc
insl
cmp
ret
and
inc
imul
mov
scas
loope
inc
sub
gs
mov
into
lea
push
adc
pop
mov
scas
int3
or
or
xchg
sbb
sub
sub
arpl
push
cs
push
scas
loop
cmp
hlt
fidivrs
or
jp
mov
ljmp
or
dec
test
mov
aam
bound
lds
pop
leave
stos
clc
pop
xor
ret
inc
jae
daa
decb
adc
ds
cld
arpl
fdivr
add
cli
fs
jp
jo
dec
mov
sbb
push
mov
sub
pop
pop
mov
adc
test
lcall
or
jp
cmpsl
jb
repnz
mov
sub
mov
scas
aad
movsl
addl
mov
sub
xor
in
clc
jmp
sub
cwtl
frstor
pop
xor
pop
cmp
lret
rclb
stos
inc
cmc
arpl
aad
pop
mov
fbstp
cmpsb
xor
inc
xchg
out
ss
lock
push
cmp
dec
xor
push
cltd
data16
cmpsl
gs
data16
pop
lds
les
ret
ror
imul
lock
ds
call
int
jmp
inc
mov
sbb
mov
mov
in
jbe
add
cmp
sbb
xor
and
roll
insl
push
cmp
lods
mov
es
mov
add
push
jl
int3
pop
loopne
int
push
jle
sbb
dec
cmp
divl
test
sbb
sub
jge
arpl
jnp
jnp
inc
dec
dec
jnp
sub
rorb
pop
sti
pop
xchg
das
inc
jns
add
xchg
repz
jno
adcl
sahf
inc
and
fs
push
fdivs
aam
ds
stc
fucomi
xchg
fidivrs
lret
dec
leave
mov
push
ret
fst
clc
ja
and
inc
cmpsl
mov
or
fstpl
clc
std
or
mov
cmp
mov
dec
out
cmp
lret
les
inc
sbb
dec
loopne
sbb
out
inc
fbstp
inc
in
xchg
sbbl
xchg
xchg
sub
xchg
cmp
popa
push
push
les
add
and
and
stos
xchg
inc
stc
pop
das
jecxz
sahf
pop
fcmovu
dec
les
pop
jnp
adc
leave
jae
notl
inc
mov
mov
push
arpl
call
lods
stc
dec
mov
fidivrl
ret
pusha
subb
outsb
cmp
push
sarb
call
pop
xor
mov
mov
lret
mov
data16
shr
leave
sub
adc
lret
aas
movsl
adc
movsl
inc
cmpsl
test
daa
fdivs
mov
push
and
scas
vfmsubadd132ps
out
out
jmp
cmpsb
sbb
and
xor
mov
mov
or
xchg
cmc
stc
dec
bound
jo
pushf
lcall
mov
lods
sbb
add
push
jnp
push
insb
sub
dec
pushf
adc
sahf
jge
fistps
std
aam
cmpsl
or
lds
mov
pop
stos
in
imulb
repz
pop
inc
xor
and
mov
lods
mov
pushl
cmpl
lock
push
hlt
xchg
mov
inc
mov
stos
sbb
push
int
aam
push
into
pop
cmpsl
imul
jp
adc
or
loop
cmp
cwtl
jle
and
jmp
stos
jne
in
stos
or
mov
and
cmp
loop
cmc
insl
in
in
scas
cmp
fcomps
mov
sub
inc
and
loope
inc
xor
xchg
pushf
cli
xchg
xor
sarb
popl
insl
inc
push
jg
push
cmpsl
in
add
icebp
addr16
stos
and
push
xchg
lock
sbb
lret
inc
pusha
mov
lcall
push
arpl
mov
fidivs
mov
push
dec
seto
rcl
fdivl
sbb
mov
cmp
sub
lret
daa
fisubl
cmp
xor
mov
mov
outsb
stos
cmpsb
mov
cmpsb
int3
cmpsl
in
lea
adc
icebp
leave
in
movsl
inc
aas
loope
adc
adc
outsl
fdiv
mov
das
ds
out
push
hlt
enter
rcrl
inc
push
loop
sub
or
addb
in
xchg
and
pop
subl
pushf
jo
outsb
dec
lret
cmpsb
cmp
pop
xor
jge
jge
mov
add
ret
add
hlt
cmp
sbb
jne
jo
adc
or
cmp
xchg
mov
jge
testb
xchg
addl
nop
test
push
inc
ja
or
mov
push
xchg
mov
mov
stos
push
sbb
xor
inc
jp
mov
bound
movsl
js
ja
and
in
mov
fwait
cwtl
mov
aas
inc
xchg
and
jl
mov
addb
clc
pop
jecxz
shrl
sbbl
xor
rcrl
bnd
ds
fmul
add
int
out
sti
add
xchg
mov
popf
cmp
testb
sbb
call
push
mov
out
xor
push
adcl
fiadds
notb
shll
stc
pop
das
out
and
and
lret
cmp
push
jecxz
popa
js,pt
and
inc
scas
aam
out
out
outsl
shll
pop
push
imul
arpl
lcall
test
mov
xchg
bound
sub
jno
lock
js
cltd
sub
mov
dec
mov
daa
ret
lahf
mov
jo
and
dec
ficompl
pusha
dec
in
popf
xchg
sub
pop
repz
sub
das
lcall
pop
jmp
jecxz
xor
inc
jp
xor
popf
and
and
loopne
dec
std
rorl
cmc
pop
sti
es
dec
sub
xchg
pop
mov
dec
add
mov
mov
xor
push
jge
xor
add
loopne
sub
loope
cltd
imul
jo
cmpl
cmpsb
sub
notb
fdivs
mov
xchg
cmc
sbb
mov
stos
loop
add
pop
mov
dec
push
test
mov
mov
pop
mov
mov
sbbb
cmc
lds
mov
mov
and
aad
scas
adc
jmp
pop
mov
xor
daa
pop
xchg
aas
jno
inc
sbb
cmc
test
mov
shl
lcall
jle
pop
mov
vminps
pop
xchg
add
xchg
in
repnz
xor
sbb
addr16
movsl
shll
adc
and
cmp
push
icebp
pop
adc
imul
nop
cmc
push
repz
arpl
mov
pop
lcall
cmp
push
pop
mov
loop
mov
jb
xchg
mov
addl
pushf
and
sbb
jle
push
sub
lea
xchg
loop
xor
xor
lods
dec
jl
ret
cmp
in
test
inc
push
out
add
dec
adc
and
pop
sbb
inc
add
push
adc
add
mov
aam
jns
addr16
pusha
xor
pop
xchg
loopne
mov
repz
inc
bnd
movsb
movsb
pop
jp
idivb
aas
aam
ret
jl
out
jmp
mov
lods
dec
xlat
imul
fs
loopne
roll
movsb
lahf
jnp
iret
das
push
loop
xor
mov
stos
jp
in
ds
and
cmp
mov
ret
into
andb
jae
add
xor
jno
jno
sbb
aad
ficoml
test
cmp
imul
bound
repz
mov
out
test
out
outsb
fcmovnbe
mov
mov
iret
rcl
add
out
fidivrl
mov
push
mov
pop
ret
sub
cmp
gs
push
push
out
test
sbb
lea
scas
push
lds
fcoms
repnz
jo
jae
mov
insb
adc
xor
js
movsb
lds
test
mov
test
shll
fmull
cmc
sub
jo
daa
push
addr16
xchg
out
insl
cmp
lock
ljmp
and
mov
mov
stos
ret
jcxz
cmp
lods
rcrb
jl
sbb
out
fidivrs
xchg
imull
cmp
cmc
sbb
ret
mov
mov
mov
int3
popf
int
int
sbb
insb
test
mov
sbb
clc
and
sbb
in
mov
cmp
xorl
cmpsl
scas
dec
sub
pop
sbb
jno
xchg
fildl
cmp
jae
addr16
sbb
xchg
lods
mov
xchg
add
into
fsts
out
cs
xchg
addr16
dec
xchg
pop
out
jnp
orb
adc
fisttps
in
inc
mov
jo
push
hlt
jecxz
inc
sub
stos
roll
imul
add
pop
pop
icebp
xlat
pop
push
sub
jle
sub
pop
dec
aad
sub
jbe
cmp
mulb
push
mov
jmp
xchg
mov
in
andb
fs
test
cmpsl
int
adc
rol
xchg
adc
push
subb
mov
ljmp
mov
dec
stc
cmc
popf
cmpsb
stos
push
jl
daa
call
inc
inc
clc
out
mov
repz
push
push
xlat
ss
mov
mov
divb
and
xor
sti
and
les
mov
das
and
outsb
divl
fcoms
mov
xchg
test
out
adc
in
pop
hlt
rcll
fisubl
iret
in
sub
sub
adc
lahf
jnp
pop
and
add
mov
xor
sub
out
hlt
push
leave
ss
imul
mov
adc
jle
inc
inc
xor
vsqrtss
in
push
push
cmp
sbb
cltd
add
notb
or
push
xor
xor
mov
test
jb
bound
stos
ret
mov
adc
dec
in
mulb
sub
inc
push
test
push
add
pushf
sub
jb
test
lods
jmp
inc
decl
test
mov
and
jnp
das
loope
adc
ds
xchg
xchg
mov
fistpll
sub
cmp
sub
push
mov
sbb
mov
pusha
sbb
in
loope
jg
push
and
jnp
pop
add
fldcw
dec
out
mov
pop
cmp
loope
andl
fwait
scas
push
xchg
insl
xchg
and
xchg
jns
dec
and
jb
repnz
hlt
mov
pop
shrl
jl
dec
inc
jne
mov
out
les
repz
imul
cmpl
bound
ja
jae
sbb
cltd
lock
scas
fwait
lods
pop
pop
fsubl
ds
lea
dec
pop
jge
or
xchg
icebp
out
cmp
xor
and
xchg
sahf
mov
push
daa
lahf
and
or
insb
mov
pushl
sub
je
into
shufps
loopne
loopne
fwait
and
out
adc
iret
mov
ja
cld
inc
aaa
idiv
inc
fnsave
adc
mov
outsl
cmp
stos
ds
mov
mov
shr
test
sarl
inc
and
push
repnz
jg
adc
iret
inc
rorb
xchg
insl
adc
dec
sbbb
add
frstor
sbb
or
andl
cmp
mov
sti
bound
sbb
mov
dec
out
mov
in
shrl
out
sub
pop
pop
sbb
jnp
nop
push
xor
mov
pop
lret
aad
testl
inc
fsubrs
in
fidivrl
je
xlat
or
je
xlat
les
hlt
out
rclb
sub
sahf
mov
sub
hlt
inc
push
and
les
adc
cli
push
mov
mov
sti
adc
push
xor
aaa
dec
xor
scas
test
aad
iret
mov
mov
sbb
fisubs
mov
pop
add
cs
inc
xchg
xchg
push
jg
sbb
dec
mov
jne
inc
or
cmp
dec
mov
mov
scas
add
and
out
mov
je
movsb
stos
pop
fdiv
std
cli
jns
jns
push
xorl
sbb
popf
gs
orl
inc
push
push
adc
adc
popl
jb
mov
test
cmp
in
insl
sarl
cmp
push
cmp
mull
mov
icebp
and
dec
fisttpl
sub
push
pushl
fnstsw
popa
mov
ror
jnp
outsl
rolb
cwtl
out
pop
push
xor
xchg
push
cltd
sarb
add
movbe
pop
insb
xchg
cwtl
inc
pop
lahf
dec
clc
sbb
pop
xorl
mov
out
cmp
popa
data16
xchg
pop
cli
lods
inc
fadds
mov
push
insb
mov
dec
ja
inc
pusha
jae
jecxz
adc
inc
and
outsb
xor
pop
xchg
mov
enter
dec
jno
or
jno
add
inc
subb
dec
pop
fmuls
mov
mov
out
cmp
popa
push
xlat
pushf
adc
push
push
dec
push
sbb
rorl
shrb
push
jle
loop
xchg
cmpsl
xchg
and
dec
in
sbb
pop
les
add
lds
mov
jl
jl
inc
daa
lods
repnz
movsb
lds
push
sub
shll
mov
mov
add
mov
add
mov
mov
fisubrl
lods
sbb
call
cmp
push
popa
xor
cmpsl
mov
inc
out
lret
push
out
xor
xchg
push
test
mov
xchg
ljmp
shl
repz
fcmovnu
sbb
or
lret
test
mov
push
push
into
mov
insl
xor
arpl
arpl
fisttpll
int3
test
jb
and
in
jo
dec
mov
add
lods
and
in
xchg
xchg
insl
faddl
fmul
adc
xlat
inc
mov
pop
xlat
sub
dec
mov
jge
call
push
mov
add
mov
cmp
jge
mov
pop
fidivs
pop
xchg
or
data16
repnz
mov
mov
lahf
fiadds
mov
lret
or
or
cld
mov
out
pop
pop
push
xchg
jno
fldcw
mov
add
adc
xor
push
imul
xor
sub
cltd
inc
sbb
ret
pop
xor
enter
dec
mulb
adc
mov
mov
jp
cld
dec
adc
rorb
lcall
mov
dec
xchg
jns
push
mov
sti
test
ljmp
sbb
jmp
xchg
js
outsl
lods
ss
mov
xor
aas
dec
mov
jecxz
jg
int
dec
cmpsb
inc
jecxz
sbb
adc
ds
lock
dec
es
sbb
fidivrs
js
cmp
mov
mov
repz
bound
pushf
in
lcall
add
pop
mov
mov
jno
arpl
lock
aas
push
scas
add
add
mov
xor
insb
mov
mov
and
cwtl
lea
sbb
vmovhps
inc
sahf
add
inc
sub
int3
jg
push
xchg
xchg
lock
dec
aas
fldl
ficoml
adc
xor
jae
mov
or
jne
mov
fucom
jae
add
test
mov
xor
and
add
add
aaa
das
jmp
into
or
inc
jmp
clc
enter
mov
lcall
lock
sbb
rcr
sub
sbb
jns
clc
jecxz
dec
pushf
int3
sti
mov
outsb
jl
or
jae
mov
jp
repnz
push
mov
lcall
mov
sbb
ds
mov
int
or
add
or
xchg
cwtl
in
sub
mov
pop
fstpl
pop
jmp
stc
scas
pushf
push
jg
dec
cmc
int3
lock
fdivrp
cli
lds
or
inc
push
dec
pop
push
push
sub
scas
addr16
sbb
test
das
mov
ret
out
sbb
sub
xchg
inc
dec
cltd
fisttpl
adc
loope
pop
outsb
jb
inc
xor
fwait
addr16
dec
pop
jmp
inc
sub
and
sbb
mov
mov
adc
and
cmc
das
iret
popf
add
push
mov
lock
pop
pop
loopne
and
vcmpps
inc
or
lret
aaa
mov
mov
or
sub
mov
or
sub
fisttpl
xchg
cs
mov
and
adc
pop
insb
push
push
mov
xorl
adc
insl
lahf
fdivrl
dec
jge
push
inc
dec
mov
leave
sbb
xlat
lea
pop
inc
imul
dec
mov
xor
cmpsb
sub
js
adc
fs
scas
inc
stos
mov
bound
inc
shrb
xlat
mov
xchg
xorl
dec
mov
or
into
cwtl
stc
and
test
mov
and
in
sbb
lahf
sbb
dec
jle
movsl
cmpsb
lcall
vmptrld
ss
push
mov
in
mov
push
out
push
lcall
lahf
mov
pop
cltd
out
xor
test
outsl
insl
inc
shrb
jo
call
aaa
mov
xchg
clc
divb
xchg
imul
sbb
jne
js
cmpsl
test
cld
mov
jmp
mov
or
fnstenv
in
out
push
or
popa
cmc
or
jno
lahf
mov
cmp
or
sti
xor
dec
add
fbld
cli
andl
pop
dec
or
cwtl
test
jnp
mov
icebp
scas
mov
int3
xchg
pusha
sahf
fwait
scas
insb
negb
loopne
add
sub
hlt
sbb
and
dec
in
sub
in
push
push
faddl
lea
movb
icebp
xchg
dec
xor
pop
xchg
test
mov
fisubrl
or
inc
lea
fnstcw
ss
jnp
rcll
insl
sub
push
push
outsb
es
sbb
fsubl
mov
push
adc
iret
dec
mov
rcrl
sahf
cltd
sbb
mov
bound
je
xchg
sub
jecxz
inc
dec
lods
push
inc
sbb
xchg
inc
mov
aad
sub
repnz
and
repz
jmp
jae
leave
subl
jg
pop
lcall
das
and
repz
fs
nop
ljmp
dec
cmpsl
shll
adc
sub
imul
xchg
push
dec
inc
mov
sahf
ljmp
push
imul
stc
aam
adc
pop
dec
mov
stos
hlt
mov
pop
or
decb
add
addl
es
js
mov
js
push
push
mov
adc
mov
daa
xchg
std
inc
adc
loope
adc
mov
xor
pop
lock
in
push
dec
gs
aam
pop
out
jne
insl
les
pop
or
mov
or
sbb
xor
test
xor
or
add
in
xor
xlat
mov
addb
scas
mov
mov
xor
movsb
xor
mov
add
out
mov
fildll
hlt
out
pop
leave
les
or
mov
cmp
jecxz
cwtl
or
push
xchg
xor
sahf
aam
cld
test
sarl
pop
mov
cltd
pop
scas
mov
repnz
bnd
ljmp
cwtl
sbb
jp
ja
sub
mov
cmpl
cld
lock
les
sbbb
xchg
popf
jge
test
jne
loop
push
popa
dec
push
xchg
jg
cmp
aad
subb
push
mov
cmpsb
imul
inc
rcll
cltd
sbb
xchg
add
mov
imulb
xchg
nop
and
fdivrs
adc
mov
or
test
cld
rorl
js
fwait
dec
cwtl
pop
add
adc
push
dec
jbe
dec
arpl
mov
mov
int
sahf
das
leave
mov
mov
je
or
cwtl
inc
xchg
lea
mov
andb
lret
aam
loope
sahf
into
hlt
jb
imulb
inc
popf
pop
cmpsl
push
adc
sbb
and
scas
sbb
xchg
subl
in
jp
into
inc
xlat
sub
mov
rcll
idivb
push
testb
clc
dec
mov
pop
vpslld
or
cmp
aas
xor
out
out
fldln2
mov
jne
popf
xor
add
scas
add
js
mov
call
in
iret
scas
cmc
std
dec
sub
mov
jl
popf
pop
mov
fildl
pop
mov
addr16
mov
adc
xor
mov
mov
movsl
push
or
andl
xchg
mov
sub
xor
push
cmp
cmp
cmp
mov
inc
xor
test
hlt
pusha
imul
inc
mov
clc
dec
fistl
inc
xchg
mov
into
mov
pop
inc
jne
rol
pop
ds
pushf
loop,pn
dec
lods
out
ljmp
js
leave
int3
mov
decl
ds
sbb
ret
mov
adc
ficoms
mov
ds
pushl
and
test
in
imul
xchg
hlt
dec
jp
shrl
fwait
dec
in
jl
push
jg
cwtl
push
xchg
lahf
pushf
in
pop
lahf
push
aas
xor
push
push
sub
lret
mov
ret
mov
add
pop
inc
shlb
xor
daa
std
xlat
lcall
out
sub
xchg
and
ds
mov
jnp
dec
lock
mov
and
sbb
xor
mov
ds
mov
pop
pusha
sbb
add
les
jecxz
mov
sub
pop
mull
repz
ljmp
jg
cmpsl
jle
mov
lret
mov
ss
dec
mov
lahf
icebp
movsb
ja
mov
out
stos
xchg
mov
repz
push
cmp
dec
or
sbb
call
dec
pusha
mov
ds
add
mov
std
subl
imul
rorb
inc
icebp
cmova
rcll
sahf
jno
cwtl
mov
jg
lea
int
out
outsl
inc
mov
push
ret
mov
push
lods
mov
cwtl
mov
mov
shrb
int
pop
nop
pop
push
cmp
or
movsl
iret
xor
stos
shl
and
out
xor
scas
sbb
arpl
mov
in
rcrb
lods
jmp
and
lds
les
xor
outsb
mov
and
cmpsb
jb
jb
ljmp
dec
jge
push
cmovg
adc
outsl
xchg
jp
bound
and
test
sub
push
sub
xor
xchg
adc
dec
xor
xchg
aaa
repz
stos
out
lret
sbb
dec
and
imul
lret
xchg
push
push
call
ljmp
daa
inc
mov
shrb
ret
pop
ror
push
push
int3
fisttpl
in
dec
lods
js
pop
test
std
push
xor
mov
arpl
adc
rolb
imul
sti
data16
xor
jmp
ret
mov
xor
xor
ret
std
xchg
outsb
ret
imul
or
aas
repnz
mov
sbb
dec
add
dec
pushf
fstpl
jb
out
xchg
pop
mov
jmp
and
jg
stc
inc
aam
inc
decb
or
pop
sbb
sbb
sbb
sarl
dec
adc
mov
insl
in
dec
pop
sti
test
insb
movsl
scas
das
sbb
out
pop
mov
popf
adc
sbb
push
xchg
js
xchg
jp
lret
jmp
fxch
sub
fwait
mov
leave
mov
dec
add
dec
das
popa
jge
test
outsl
jg
mov
mov
mov
fidivs
data16
jecxz
cmp
sti
cmc
pop
xor
mov
loop
fadds
xor
mov
pop
mov
jp
mov
mov
icebp
shlb
push
mov
jmp
aad
rclb
out
sub
out
sahf
loopne
out
pop
adc
lret
sbb
xor
fwait
out
jg
xor
cmpb
out
addr16
and
outsl
loopne
mov
mov
cmp
sub
repnz
mov
and
xor
gs
lock
lods
sub
test
jne
push
cmpsl
jb
add
dec
jns
outsb
dec
clc
or
test
mov
data16
xchg
and
dec
mov
ja
ficoms
cmpl
lea
pop
adc
sbb
insb
shl
lahf
mov
xchg
mov
int3
xchg
fwait
mov
adc
inc
lods
mov
add
pop
pop
adc
mov
out
adc
mov
xchg
stos
xchg
cmp
lds
xchg
rolb
test
push
daa
or
lcall
sub
adc
mov
xor
lahf
fcoms
pop
jo
mov
fsts
call
in
loopne
int
dec
adc
aad
or
adc
sub
mov
and
icebp
out
mov
inc
or
push
inc
js
mov
mov
mov
pushf
pop
jp
jb
insl
xchg
cmp
ja
mov
dec
push
int3
push
push
popf
insb
sbb
mov
call
xor
xor
sbb
imul
xchg
xchg
lahf
and
cli
idivl
in
pusha
add
mov
dec
jp
jns
in
sahf
mov
scas
and
imul
pusha
mov
hlt
sub
dec
out
inc
int3
scas
cmp
hlt
and
fneni(8087
sbb
adc
dec
add
les
insb
and
ss
xchg
dec
fmuls
icebp
orl
and
out
movsb
loope
sbb
jg
mov
ljmp
and
and
inc
outsl
cltd
add
and
sub
mov
mov
out
fidivl
ficoml
mov
test
or
leave
subb
jge
dec
sbb
fcompl
insb
sub
out
mov
cmp
and
pop
mov
std
mov
jp
sbb
imul
cmp
jmp
lods
sbb
mov
cmp
add
daa
mov
stc
clc
lods
shrl
and
scas
pusha
cmp
inc
xchg
stc
fstl
xor
cmp
mov
jp
jle
lcall
aaa
xorl
xchg
pmullw
sbbl
mov
in
or
sub
jns
cmpsb
xor
loope
jns
cmpb
fs
jno
xchg
adc
popf
mov
fdivl
push
mov
fcomps
aas
mov
cmp
dec
scas
dec
push
loope
sahf
push
dec
pop
andl
push
loope
loop
bound
jp
add
movsl
int3
movups
dec
outsb
addr16
pop
arpl
outsb
movsb
rorl
mov
jecxz
hlt
ljmp
ss
dec
push
test
dec
movsl
push
jmp
addr16
loope
cmpb
push
int
push
cmp
cmp
mov
pop
shll
cmp
adc
test
cwtl
jae
data16
adc
gs
adc
mov
and
enter
mov
imul
jbe
jnp
add
pushf
inc
jl
add
mov
mov
dec
shlb
enter
pop
rol
adc
sti
mov
lret
jo
cwtl
fsub
dec
mov
imull
add
fs
push
adc
andl
jb
aaa
push
sahf
and
loop
xchg
mull
pop
sbb
mov
inc
mov
mov
mov
dec
mov
out
in
xchg
pusha
sbb
cmpsl
test
jns
jo
lods
fistl
fwait
call
ljmp
dec
dec
mov
movsb
or
lahf
sub
insl
mov
dec
pop
or
sub
insl
mov
ret
dec
push
shll
sub
mov
es
js
xchg
sbb
ljmp
xchg
bswap
stc
cmp
aad
jne
shlb
cmpsl
mov
jnp
add
adc
scas
mov
or
mov
sub
cmc
enter
repz
mov
incl
dec
insl
jle
fcomps
dec
ret
out
inc
into
or
stc
pop
adc
dec
cld
fs
xchg
cld
test
or
movzwl
bound
or
push
lahf
movsb
imul
ja
mov
ja
mov
sub
and
test
popa
cmp
in
cld
inc
mov
dec
adc
dec
mov
adc
dec
fsincos
add
nop
add
add
rorl
ss
push
adc
and
iret
mov
mov
outsb
cmp
pop
sbb
fidivs
in
sub
xorb
xchg
adc
aas
call
sbb
jne
cmpsb
push
inc
sbb
and
outsb
xor
into
xlat
sbbb
cli
aam
dec
outsb
mov
and
popf
xor
mov
data16
mulb
orl
sub
xor
dec
jl
lea
test
in
mov
mov
cmp
rorb
sub
test
into
mov
push
mov
mov
outsl
dec
jno
jbe
in
pop
xchg
leave
and
add
pop
lock
lds
or
int
sbb
das
xorl
cld
inc
sbb
dec
pop
xor
cmpsl
int3
leave
out
cmp
subl
pop
mov
xor
cmp
iret
push
repz
pushf
scas
adc
jp
xor
pop
shlb
fiadds
xchg
ss
push
xor
jo
pop
xor
add
fcmovne
js
xchg
shll
in
lret
ss
pop
add
add
mov
mov
out
in
or
lret
add
ret
arpl
fs
out
flds
mov
jp
sub
out
pop
fsubl
or
xor
xorb
dec
scas
insl
and
mov
pop
mov
icebp
adc
fistpll
or
sbbl
and
or
test
test
jl
sub
cmp
addr16
push
sbb
xorl
icebp
and
pop
cmp
push
push
pop
daa
mul
cmp
adc
inc
pusha
mov
imul
mov
xor
int
pop
mov
xchg
in
sub
pop
cmp
jbe
dec
std
xlat
inc
fs
andl
add
sub
fimuls
lea
mov
xchg
ja
cwtl
xchg
jnp
mov
pop
and
inc
nop
add
pop
dec
loope
in
push
xchg
outsb
mov
inc
mov
inc
es
aaa
xchg
mov
add
fs
jl
dec
mov
cmp
cmp
cwtl
sti
loop
push
icebp
out
xor
clc
in
cmpsb
dec
inc
divb
call
insl
cmp
sahf
scas
pop
or
sbb
push
cmpsl
outsb
je
dec
pop
testb
xor
flds
outsl
clc
in
sbb
push
aad
lret
add
xchg
cmp
aas
mov
jbe
add
rclb
push
push
mov
xchg
jmp
decb
pop
xchg
lea
int3
jnp
repz
adc
lea
sbb
into
jp
lret
ljmp
mov
jge
movsl
mov
sub
subb
sbbl
xchg
repnz
fwait
inc
pop
mov
mov
stos
rcrb
mov
imul
pop
movsb
leave
int
push
pop
outsb
cs
inc
cmp
fadds
xor
loop
cs
and
dec
add
mov
push
in
mov
loop
push
or
sub
mov
cmpsb
imul
cmpsb
sub
sbb
popf
in
cs
pop
sbb
idiv
out
fiadds
call
cli
inc
test
add
ja
or
sti
stc
pushf
xchg
cmp
mov
mov
jae
popa
sbb
and
rcll
cmp
sbb
dec
push
mov
imul
call
cwtl
icebp
inc
mov
mov
dec
sbb
inc
mul
ja
stos
ljmp
test
incb
sbb
push
sub
cmpsl
cli
out
aam
sbb
mov
cmp
ffree
fistl
pop
ja
loopne
sub
mov
adc
icebp
pop
pop
test
inc
sbb
sbb
shl
nop
mov
shll
stos
cmp
jp
sub
cmpsb
hlt
bound
leave
mov
lahf
pop
sub
add
jne
pop
je
pop
insb
nop
jbe
dec
pop
cmpsl
mov
popa
insb
lcall
ret
in
outsb
adc
jne
lcall
test
push
test
nop
add
lods
adc
out
or
xor
pop
enter
xchg
cmc
push
lods
icebp
clc
arpl
stc
push
xor
push
adc
xchg
addr16
adc
lahf
mov
rcrl
mov
in
push
cld
inc
test
movsl
and
jae
test
jecxz
movsl
dec
stc
xchg
pop
pop
mov
das
insl
or
insl
xor
sbbl
mov
xchg
pop
mov
shll
shll
push
sbb
sub
pop
inc
outsb
out
cmpsl
call
pop
fildll
addl
xor
jb
aad
ss
mov
es
mov
push
leave
xchg
jg
pop
sbb
xchg
add
pushf
sbb
mov
call
dec
and
mov
mov
inc
roll
add
push
outsb
xchg
mov
pop
shrl
jnp
es
in
and
inc
fstps
popa
xlat
sbb
xchg
cld
je
mov
in
add
xlat
dec
cltd
insl
cmpsb
ror
mov
dec
cmp
mov
hlt
andb
push
mov
dec
sbb
enter
shl
out
pop
js
mov
insl
popf
dec
lcall
ret
scas
iret
jle
jle
pop
std
lret
push
push
dec
fldt
int3
flds
in
insl
lods
jne
enter
push
push
je
mov
movsl
jp
sub
sub
jns
nop
inc
lea
outsl
mov
adc
inc
dec
cmp
imul
and
xchg
aad
movsl
cmp
pop
aad
jo
aad
pop
cwtl
leave
add
mov
sbb
or
sub
inc
mov
dec
mov
add
add
mov
xorb
andl
pop
pusha
lea
and
lahf
mov
adc
xchg
or
iret
sarb
pushf
and
jns
jl
aam
or
lds
adc
imul
mov
dec
mov
lods
mov
insl
and
push
push
xor
pop
sbbl
xor
std
jle
mov
and
pushf
dec
and
paddsw
and
out
je
and
jae
pop
imul
clc
inc
imul
outsb
mov
mov
nop
dec
mov
adc
stc
dec
xchg
test
and
sbb
xchg
sub
or
scas
dec
mov
xlat
gs
jg
sub
popa
orb
xchg
das
fwait
stc
mov
xchg
das
mov
mov
dec
fists
push
mov
dec
jae
add
ljmp
pop
mov
cmp
adcb
leave
loopne
xor
and
push
mov
shr
push
inc
mov
jns
pop
jg
push
ja
xchg
push
lcall
xor
out
adc
dec
je
aaa
pop
scas
mov
jne
ret
lods
scas
fistl
or
pop
inc
jne
push
aad
inc
fldenv
push
adc
xchg
or
adc
subl
es
xchg
js
js
imul
mov
pop
adc
loop
lahf
out
adc
ja
xchg
js
clc
sub
sbb
xor
jnp
cmp
cmp
mov
scas
sub
out
sahf
call
data16
sub
push
cld
push
mov
inc
movsl
cmp
or
xorl
jl
xchg
sahf
push
jne
fs
mov
add
mov
push
mov
mov
jmp
adc
sbb
enter
ds
adcl
in
in
test
cmp
fildll
mov
sahf
std
roll
fnstsw
stos
pop
mov
out
movsb
loop
rcrl
jnp
mov
js
lds
push
into
gs
rorb
xor
lds
aas
jno
sbb
lahf
sbb
into
pop
xchg
dec
push
mov
pop
iret
sub
sbb
xor
jbe
inc
stos
xchg
movsl
aas
sahf
cmpsl
loope
in
or
jne
mov
rol
add
fstl
xchg
std
mov
cmp
test
inc
mov
jge
and
addb
sahf
inc
inc
popf
data16
cmp
add
adc
outsb
dec
mov
mov
clc
xor
sbb
imul
stos
stos
mov
pushf
popf
adcb
loope
leave
xor
add
test
stos
push
out
cmp
xchg
js
fisubrl
adc
cmc
push
test
sbb
sub
or
iret
out
pop
aad
fmull
leave
rcl
loopne
mov
inc
and
xlat
cmp
pop
shrl
pushf
inc
das
aaa
jns
jmp
lahf
push
xor
jns
sub
out
xor
jnp
jbe
adc
fimull
add
jae
andl
cmpsb
sbb
sbb
push
lock
in
xor
cmp
fdivl
rcr
std
movl
lcall
mov
inc
dec
jmp
mov
jne
dec
and
add
jmp
dec
xchg
push
andb
pop
in
dec
repz
imul
xor
ljmp
and
dec
loope
jno
bound
mov
rcrb
or
daa
jl
mov
pop
loop
cmc
jecxz
repz
fdivrl
push
sub
cmpsl
jno
lret
jb
xor
add
xchg
mov
mov
enter
stos
jecxz
pop
xor
mov
xor
xor
subb
mov
sbb
inc
call
fisubrl
mov
pop
dec
stos
lock
adc
mov
les
sbb
hlt
inc
and
jne
mov
sbb
daa
fstl
sarl
test
lock
imul
pop
icebp
adcl
mov
xor
shll
mov
jl
in
dec
xor
dec
inc
push
in
in
mov
xchg
das
adc
inc
divb
fldl
mov
sbb
cmp
push
push
in
out
jae
sbb
stc
or
push
test
adc
jmp
push
xchg
popa
out
imul
sub
clc
imul
imul
sarl
dec
mov
lret
sub
or
adc
pop
fdivrl
aad
dec
leave
lret
rolb
gs
mov
adc
out
test
xchg
shrb
fadds
cmp
and
sub
fsubrs
dec
mov
insb
jecxz
aam
rcll
pop
sbb
dec
and
orl
mov
or
or
mov
xchg
pop
sar
call
mov
add
push
mov
mov
mov
out
loop
cmpsb
xor
in
mov
dec
cld
push
cmp
mov
sarb
lret
insl
cmpsl
ret
fistpll
pop
adc
icebp
mov
test
mov
mov
insb
mov
jo
loop
sbb
lgs
test
in
add
mov
clc
lret
lea
sbb
add
jno
lods
pop
inc
mov
dec
inc
mov
xlat
cld
lea
mov
cmp
mov
push
mov
in
jg
push
outsl
jb
xor
or
in
mov
xor
fcoms
ret
test
stos
cld
mov
mov
inc
andb
aam
mov
sub
test
push
or
mov
pop
push
push
mov
aas
lea
pop
mov
push
push
in
stos
inc
mulb
pop
mov
es
push
iret
pop
xchg
push
xor
cwtl
std
mov
icebp
int3
repnz
cmp
lods
inc
jns
push
inc
stos
pop
das
fwait
xchg
das
add
mov
mov
data16
and
add
pop
daa
mov
shrl
jecxz
jnp
ja
cmpsb
adc
xor
xchg
je
lcall
sar
xchg
fsubs
xor
popa
je
subl
sti
mov
lods
adc
idivl
pop
or
cmpb
setns
xchg
mov
jae
lret
mul
iret
add
mov
jo
push
sbb
dec
sbb
nop
push
inc
loop
enter
data16
ljmp
outsl
data16
cmp
or
stos
daa
jmp
lret
or
in
mov
or
cmpsl
shlb
ds
gs
mov
adc
jle
mov
push
repz
add
inc
dec
hlt
shll
sarl
sub
add
xor
bound
aad
push
stos
or
dec
fwait
push
loop
in
fadds
dec
push
out
lods
sbb
fstp
pushf
and
leave
xor
shll
sbbl
or
xor
inc
adc
ret
leave
pop
rcrl
les
or
mov
rcl
dec
nop
mov
or
xor
jl
scas
lock
mov
imul
xor
popf
test
movsl
sti
test
nop
imul
xchg
test
xchg
sbb
jmp
push
push
sti
test
dec
js
jbe
icebp
pop
ja
sub
decb
jnp
enter
rorl
mov
gs
fldenv
jp
lods
subb
lcall
pop
dec
inc
int3
cli
int3
out
call
roll
sarl
rcrb
push
sub
sub
sub
xchg
aas
hlt
sub
or
jbe
shrl
in
cli
daa
jb
cmpsb
xor
dec
jns
dec
in
and
inc
icebp
sbb
movsl
xchg
push
cmc
mov
sti
andl
mov
jo
es
push
test
sbb
sbb
mov
or
scas
idivb
or
leave
adc
imul
mov
sbb
iret
cmp
jno
adc
sub
ret
shl
mov
hlt
jl
aam
sbb
faddp
gs
shll
fimull
aaa
bound
ret
inc
pop
sbb
push
jns
xchg
sbb
mov
push
nop
dec
bound
push
mov
cmc
jle
stc
push
and
cmc
pop
mov
or
mov
sub
outsb
jp
jns
ss
or
es
inc
push
outsl
xor
ret
xchg
xor
mov
fwait
add
mov
xchg
mov
fs
xchg
into
push
fisttpl
xchg
mov
adc
and
ror
stos
or
adc
in
mov
dec
fstpl
mov
mov
dec
sbbl
fisttps
imull
sbb
xchg
lods
xchg
xor
outsl
jae
push
in
xor
out
mov
mov
dec
dec
xor
gs
sar
subl
cmp
hlt
sbb
mov
setnp
adc
add
pop
icebp
stc
add
jmp
cwtl
shr
test
mov
mov
mov
les
cmp
sbb
cmp
mov
mov
aad
mov
mov
pusha
repz
adc
ds
jl
pop
test
cmp
sarl
jnp
mov
adc
inc
nop
sub
loop
movsb
cltd
jmp
lcall
scas
push
out
loopw
push
scas
push
or
jle
mov
xor
mov
insb
aaa
cmc
mov
cmp
pop
cltd
js
test
dec
adc
cwtl
sbb
push
jmp
cmp
pop
dec
mov
lods
js
int
cs
in
mov
push
stos
in
outsl
je
loope
add
ret
sti
and
push
push
orl
lret
mov
jge
xlat
push
out
push
ret
imul
mov
jge
out
mov
lock
add
stos
mov
out
repnz
or
inc
push
or
mov
push
scas
xchg
jmp
and
cmp
cld
movsl
mov
push
arpl
xor
push
sbb
std
mov
icebp
das
enter
sub
dec
in
test
pop
adc
dec
outsb
mov
es
mov
mov
mov
jnp
sub
fcoml
add
inc
in
loop
scas
inc
cmp
push
in
mov
aam
cli
out
cmp
lods
dec
mov
jp
lret
out
adc
sub
push
add
adcl
sub
addr16
ss
xchg
lahf
mov
dec
aam
hlt
xor
xchg
in
fbld
jbe
movsl
sti
insb
fsub
mov
lcall
pop
inc
lods
out
inc
inc
pop
fisttpl
adc
dec
shrl
std
rclb
inc
inc
cmp
xor
int3
idivl
subl
and
in
rcl
pop
dec
rcpps
jns
mov
jo
ret
jle
ds
xchg
fstps
mov
adc
out
inc
sti
or
ds
clc
cmpsl
inc
scas
sub
inc
mov
adc
add
roll
data16
xchg
pop
outsl
push
mov
lret
test
push
popa
pop
push
rclb
push
dec
push
and
push
sarl
repz
sub
popa
xor
add
ja
iret
adc
loope
dec
std
sbb
xor
cmp
sub
in
push
cmpsl
pop
push
jnp
add
cmp
test
or
int3
push
std
out
push
lods
cmp
or
jne
stos
mov
or
xchg
test
aas
xchg
popf
jle
lods
cmp
ficoms
imul
idivl
retw
mov
dec
lock
dec
fucomp
sti
or
mov
scas
sbb
rclb
xor
and
hlt
fiaddl
mov
xchg
movsl
movb
mov
mov
daa
sub
stos
sahf
aaa
cmp
pop
mov
xor
test
movsb
out
xchg
pop
popf
inc
jge
icebp
fs
push
test
inc
mov
sub
movsbl
loope
lds
inc
dec
inc
iret
in
push
mov
out
shll
ds
clc
dec
pop
ss
stos
addr16
pushf
push
dec
or
add
pushf
lods
mov
mov
or
std
mov
lret
xchg
in
cmpsl
mov
test
out
nop
scas
push
xchg
xchg
jo
bound
insl
mov
in
cli
sub
xor
cmpl
inc
in
aad
sbb
getsec
mov
add
outsb
cmp
cwtl
and
xchg
into
mov
cmp
ret
inc
mov
sub
das
js
imul
fsubl
ficoms
enter
mov
ror
mov
adc
dec
xor
adc
test
or
daa
ss
add
cmpsl
xchg
mov
mov
dec
xor
dec
repz
jne
int
daa
dec
out
in
dec
jle
repnz
mov
mov
je
cld
inc
std
popl
mov
jecxz
fstl
push
ja
sub
ja
dec
fldl
lahf
xor
dec
xor
sub
pop
inc
adc
aas
cld
add
mov
inc
push
xor
cmp
jp
repz
sbb
cmp
repz
jne
inc
movsl
xchg
hlt
hlt
iret
movsb
adc
or
enter
jo
sbb
stos
xchg
or
mov
sahf
cld
dec
hlt
pop
dec
aaa
arpl
imul
pop
and
addr16
lods
mov
shl
inc
sub
je
sbb
inc
daa
in
sbb
ret
clc
adc
mov
shrl
sbb
push
inc
in
sbb
and
xchg
adc
dec
in
sbb
mov
orb
repz
dec
addr16
aas
mov
fwait
in
jecxz
les
test
or
imull
add
jge
cmpsb
les
sti
mov
mov
mov
push
cs
mov
sbb
xor
aas
arpl
je
cmp
pop
and
in
loop
gs
xchg
aam
jp
push
int3
jl
fisttps
in
imul
jne
sub
mov
int3
aam
repz
push
pop
repz
jmp
inc
sarb
add
in
fptan
mov
leave
dec
roll
cmp
nop
sub
out
aam
mov
pop
test
dec
or
push
cs
aaa
in
icebp
mov
inc
aaa
mov
mov
jno
or
fcomps
fsubl
fidivrs
sbb
mov
test
leave
ja
insb
ds
popf
and
adc
shll
cld
roll
push
xchg
and
bound
es
jmp
clc
lret
nop
push
xor
adc
fdiv
mov
sbb
idivb
lods
jecxz
inc
xor
das
jbe
inc
in
xlat
das
cmp
dec
das
sub
fimuls
lds
push
jp
and
xor
outsb
add
sbb
mov
push
pop
cmp
add
adc
mov
xorb
out
jge
push
ror
pop
adc
push
push
mov
cmp
test
pop
fidivs
dec
ljmp
inc
pop
out
cwtl
xchg
fisubl
and
cmc
cltd
stos
sub
or
xchg
pop
sub
pop
add
mov
push
mov
sbb
sub
iret
fnsave
cwtl
xchg
setp
adc
and
mov
cmpsb
rorl
xor
repnz
cmc
or
sub
push
cmpsl
inc
cmp
add
in
hlt
out
push
nop
and
jmp
rclb
jne
flds
push
jne
fdivs
push
std
or
mov
in
jbe
adc
cltd
test
jb
or
ljmp
dec
sub
cmp
lods
mov
jg
cltd
rcrb
jle
ret
mov
inc
push
mov
and
mov
scas
fwait
nop
insl
test
jnp
mov
lock
decl
xor
mov
scas
add
out
fwait
push
xor
xor
scas
xor
sub
sub
out
xchg
lock
xchg
rclb
into
scas
loopne
sbb
out
xlat
dec
int
lret
push
adc
jecxz
mov
mov
dec
mov
mov
movsl
fmull
jnp
add
inc
push
jno
daa
cwtl
cmp
xchg
pop
xor
ljmp
rorl
jl
inc
bound
sub
js
ds
fcompl
lea
push
pop
push
call
ljmp
inc
push
pop
mov
push
xor
dec
mov
shlb
fstps
pop
mov
in
pop
mov
outsb
pop
sub
in
mov
inc
push
adc
lret
push
jns
out
out
pop
ljmp
dec
sbb
test
mov
aam
outsl
arpl
dec
mov
lea
jo
gs
repnz
stos
push
cltd
out
inc
add
add
iret
stos
mov
int3
jbe
sbb
mov
lock
out
add
push
cmpsb
jp
popa
or
rclb
test
lock
mov
mov
das
inc
pop
sti
sub
xor
data16
mov
lret
clc
loope
data16
xor
jmp
adc
push
movsb
imul
es
ljmp
mov
and
stc
mov
pusha
mov
cmpsb
les
movsl
or
push
es
push
jmp
pop
sbb
vmovaps
mov
push
es
cmpsb
cmp
jmp
subb
cmp
jge,pn
xor
jbe
les
int3
std
pop
inc
das
mov
push
push
icebp
add
pop
sub
pusha
inc
lret
repnz
jae
pop
mov
push
jbe
movsb
cmpl
and
sbb
mov
out
loop
push
add
fistpll
pop
jo
jbe
loopne
adc
sub
push
mov
hlt
rcr
xchg
dec
xchg
mov
adc
test
xor
inc
dec
add
jno
aam
xchg
cwtl
mov
test
inc
jns
jecxz
bound
mov
adc
xlat
shll
mov
pusha
les
push
addr16
jp
add
push
push
push
push
mov
je
cli
mov
and
les
push
call
negb
aaa
pop
pop
daa
mov
cmp
loope
push
cmp
xchg
pushf
jecxz
cmp
sbb
mov
ja
add
jb
xchg
rcrl
popa
cmpsl
mov
push
lahf
imul
xchg
cmp
mov
gs
int
cmp
jbe
cmp
in
sbb
rcrb
shll
mov
xchg
testb
ljmp
rorl
icebp
xor
out
sbb
cmpsb
rol
sbb
and
cli
divb
movsl
xor
jg
nop
xchg
frstor
nop
adc
or
xor
int
outsl
scas
and
adc
mov
sbb
in
pop
lds
ret
adc
jmp
mov
je
pop
mov
jp
mov
sub
sub
fmul
dec
jns
pop
data16
sub
outsb
mov
cmp
insb
jp
mov
shl
sbb
mov
sub
sub
lret
mov
xchg
jmp
daa
xchg
test
imul
aaa
aad
loope
adc
cmpl
mov
popf
mov
adc
aas
pop
push
pop
imul
ret
daa
lret
or
xchg
xchg
data16
pop
lcall
cmpsb
xor
mov
and
sbb
lods
scas
ds
leave
iret
fdiv
push
jge
in
inc
and
mov
fiaddl
and
lcall
imul
push
sub
jg
push
or
push
cmp
xchg
ds
jge
mov
stc
nop
in
mov
jb
pop
repnz
add
popf
lea
mov
xchg
stc
dec
add
or
rcr
test
pop
cmp
or
lahf
xlat
cs
lcall
inc
adc
test
sbb
mov
cmp
inc
mov
nop
dec
inc
insl
adc
push
movsl
les
lcall
jge
dec
sub
add
pop
jae
mov
dec
mov
loopne
enter
jbe
jg
jns
mov
mov
jae
subl
aad
xchg
add
inc
and
and
sbb
popf
cli
dec
push
cmc
dec
in
mov
or
nop
stos
fbstp
inc
push
push
push
in
in
daa
ficompl
cmp
imul
dec
in
xor
push
arpl
pop
cli
or
adc
and
mov
mov
adc
or
and
call
addl
fidivs
fists
mov
fs
sbb
mov
icebp
inc
mov
sbb
jbe
xchg
movsb
and
pop
inc
lods
pop
jnp
outsb
pushl
out
sar
cmc
inc
mov
jmp
jae
push
lret
out
inc
cltd
push
sbb
int3
pop
hlt
cmp
mov
sub
or
add
mov
test
push
push
jne
clc
movsl
stos
cmp
and
jo
sub
data16
decl
push
lret
pop
jnp
incb
es
and
jns
add
ret
pop
insb
loope
ja
mov
push
ficompl
fistpll
sub
imul
add
insb
hlt
negl
out
push
add
ret
mov
sub
add
push
jg
mov
xchg
fstpl
or
shl
or
push
mov
add
test
int
movsb
dec
and
mov
rcl
push
mov
std
bnd
rcrb
out
ss
adc
inc
push
cli
mov
xor
cmpsb
jnp
push
dec
add
loop
gs
inc
push
dec
xlat
mov
jo
sub
andl
cmp
sub
push
jg
add
lock
in
xlat
xor
cmp
inc
pop
imul
ficoml
std
jo
inc
xchg
in
jmp
xor
xchg
mov
sub
lock
bound
test
adc
push
imull
cwtl
push
xor
cmc
xor
sar
xor
imul
lock
pop
jne
das
xor
xor
jp
sarl
sub
lea
dec
fs
dec
outsb
aas
mov
lea
setg
test
mov
ja
daa
dec
lods
inc
lcall
mov
cmpsl
lds
xchg
inc
xor
shr
fs
mov
fs
data16
pop
test
adc
push
cmp
aam
into
or
jb
in
push
push
adcl
xchg
add
sub
cs
gs
xchg
mov
jge
mov
lret
stos
loopne
orl
pop
xchg
add
jo
add
stc
add
out
test
adc
das
or
mov
dec
and
int
negb
fnsave
add
jp
adc
in
mov
aas
or
pop
inc
xchg
mov
enter
lock
cmpb
xchg
push
and
push
bound
sbbl
inc
bound
mov
outsb
cmp
andl
repnz
sub
sbb
loopne
xor
mov
mulb
ljmp
sbb
mov
add
repz
test
mov
inc
pushl
sbb
data16
sbb
adc
es
clc
rcl
pop
mov
rolb
xchg
clc
rolb
in
jae
ret
shl
push
std
mov
cmpsl
hlt
stc
shll
stos
insl
sarb
mov
into
outsl
adc
xor
aas
fldenv
loop
jne
movsb
lcall
mov
flds
pop
sub
sbb
push
jne
and
ret
and
and
ljmp
xlat
mov
aam
xchg
or
insl
pop
inc
cmpsl
rorl
mov
insb
mov
and
je
xchg
mov
or
scas
int3
cs
mov
fsin
mov
mov
jle
xchg
xchg
push
push
pop
adc
mov
fwait
push
scas
out
fcoml
or
int
addr16
mov
outsl
add
and
mov
push
xor
test
mov
inc
movd
push
in
jnp
sbb
and
ljmp
inc
adc
jbe
fmuls
xchg
dec
ljmp
js
push
sbb
movb
popa
addr16
mov
fprem
dec
xchg
cltd
popf
scas
cvtdq2ps
out
jb
pop
jne
rcl
and
int
or
outsb
inc
add
lret
icebp
sbbb
xchg
adc
jp
popa
inc
call
sbb
push
push
mov
push
test
inc
les
and
xchg
in
in
pop
outsl
mov
jae
adc
test
dec
jne
int
cmpsl
pop
insb
cmp
or
jne
add
mov
fildl
xor
sbb
lahf
fildll
sub
xchg
fbld
xchg
xor
sbb
repz
repz
inc
xor
add
jns
and
sbb
mov
cmp
mov
mov
lcall
pand
lock
adc
xchg
adc
clc
int
mov
pop
repz
xchg
mov
push
icebp
mov
xchg
xor
jp
sbb
inc
aas
das
lods
pop
jg
dec
cmp
fsubl
loopne
push
jge
jecxz
xlat
imul
sub
repnz
adc
bound
xchg
push
push
iret
cli
xchg
inc
mov
ret
arpl
dec
mov
cs
lods
daa
sub
mov
xchg
push
xchg
ret
mov
push
cli
repz
sub
out
notb
dec
test
gs
mov
ds
xchg
dec
repnz
out
lea
loope
cld
jmp
xchg
jb
push
ds
shlb
dec
mov
shll
divb
mov
and
mov
cmp
jle
push
add
jae
lds
pop
popa
lds
xchg
cwtl
xor
cmp
ficomps
inc
cmp
sbb
and
mov
xchg
and
adc
into
stc
fiadds
ljmp
dec
mov
xchg
lea
mov
xchg
mov
jge
xlat
je
lret
xchg
cmc
xchg
in
std
jbe
test
jnp
mov
add
push
jns
xchg
sub
mov
pop
std
loop
adc
test
or
push
inc
in
cwtl
in
push
lcall
lea
mov
pop
je
test
ss
cmp
push
lahf
nop
inc
jb
popa
dec
out
fcompl
xchg
jle
out
das
add
lods
cli
xor
jb
ss
cld
jge
inc
mov
mov
enter
sub
and
popf
jb
inc
sbb
ds
pop
and
popa
inc
cmp
aas
std
pcmpeqw
jmp
and
sub
jo
push
dec
add
mov
js
sbbb
jbe
arpl
pop
push
test
jae
mov
movsb
scas
lcall
in
gs
mov
mov
push
lock
mov
mov
mov
jno
pop
ror
sahf
ljmp
mov
dec
push
sar
xchg
cmpsb
adc
push
adc
rcl
cmp
pop
inc
pop
inc
dec
sub
sbb
mov
fs
ret
mov
jge
repnz
and
scas
dec
das
mov
adc
out
mov
jge
jl
add
mov
push
jne
ret
int3
push
cmpsl
adc
cmp
aam
xor
or
insl
inc
and
adc
add
dec
xor
addr16
scas
scas
xchg
fs
dec
aas
in
lds
and
imul
mov
sbb
mov
iret
or
cmp
push
xor
insb
xchg
rcl
pop
or
flds
mov
in
shr
fldl
jno
fidivrs
push
dec
jbe
push
jp
sub
icebp
jle
loope
pusha
mov
cmpsb
and
filds
shll
fsubl
add
fcoml
xchg
adc
in
bound
outsl
repnz
sub
mov
inc
jo
test
popf
push
sbb
push
jbe
xchg
inc
shrb
inc
loop
pop
outsl
test
cli
or
lahf
push
lahf
std
fbstp
mov
out
sbb
and
enter
xor
std
cltd
fs
mov
aaa
xchg
inc
ja
ljmp
xchg
nop
dec
popa
xor
addr16
fcmovb
js
clc
test
lods
cmp
or
jmp
in
push
or
cltd
mov
clc
push
cmp
hlt
xchg
sub
and
or
mov
push
test
mov
idivb
ss
stc
sbb
inc
adc
test
add
pushf
dec
int3
mov
loopne
push
jg
loopne
push
pop
dec
insb
jl
test
ret
inc
incl
xorl
scas
fildll
xchg
adc
loopne
out
addl
test
sbb
mov
inc
aad
insl
jmp
add
xor
add
sub
inc
fwait
leave
orb
push
ljmp
rcrb
popa
xchg
ds
push
divl
jmp
add
insl
push
push
add
loop
dec
lds
cmp
test
pop
lods
cltd
sub
inc
and
clc
inc
cmp
adc
into
pop
xchg
sbb
cwtl
add
out
lret
jne
lret
fucomip
test
in
dec
ljmp
stos
sub
andl
cltd
mov
sarl
in
push
pop
not
jg
repz
xchg
mov
dec
sbbb
call
insb
add
test
ffree
pop
ficompl
dec
loope
pop
mov
nop
add
xor
pop
testl
movsl
test
arpl
int
aad
mov
jbe
push
xchg
push
mov
or
mov
pop
lret
in
jb
or
dec
cltd
data16
test
sub
mov
lock
out
cmp
add
cs
repnz
cmpsl
lret
movsl
rcll
mov
mov
jmp
aad
mov
fstl
rcll
push
mov
jg
push
dec
dec
jg
testl
xor
or
daa
lcall
sbb
sbb
mov
adc
cmc
inc
push
ret
push
cltd
lds
xchg
pop
inc
scas
mov
ja
sahf
push
cmpsb
aaa
int3
mov
mov
dec
jae
mov
pop
mov
add
mov
inc
mov
sti
xchg
and
fimull
out
lahf
out
adc
sub
xor
fdivl
xor
mov
sti
jp
push
mov
imull
outsl
sti
dec
xor
xchg
ljmp
mov
das
imulb
xchg
xchg
push
pusha
iret
out
fsubrp
rep
pop
rcll
fs
cli
adc
or
xchg
iret
add
pop
pop
cwtl
lret
sahf
xchg
pop
mov
mov
hlt
mov
dec
lods
adc
pop
mov
mov
xchg
out
fwait
mov
enter
ret
je
stos
sarl
sub
xlat
or
lea
mov
mov
xlat
aaa
sub
lret
sbb
stc
shlb
sbb
sub
incb
stos
ja
out
cli
lock
mov
fisttps
push
xchg
cmp
lcall
xor
xchg
ret
daa
aas
ljmp
push
lock
cmpl
aam
mov
hlt
mov
mov
mov
inc
leave
ss
add
cltd
cltd
addr16
ja,pt
jmp
rclb
jge
pop
adc
repnz
ljmp
cld
test
fdivrs
jbe
fstps
jge,pn
out
fldt
inc
cs
je
push
xor
movsb
xchg
adc
cmpsl
rcl
enter
pop
popa
sub
mov
hlt
sub
adc
je
add
mov
xchg
add
fsubl
sub
stos
mov
mov
xor
mov
out
mov
lock
aaa
dec
gs
inc
sub
lods
cmpsb
jle
flds
mov
mov
rcl
js
inc
cmp
inc
repz
mov
cmp
fdivr
sbb
lret
push
pop
mov
popf
jns
push
jb
stos
out
leave
jle
lods
stc
clc
mov
cwtl
dec
xchg
cmpsb
test
mov
std
aad
fimull
ret
je
mov
int3
popa
inc
sbb
mov
push
into
lret
adc
push
jge
nop
and
dec
lret
jne
ds
cld
pavgw
inc
hlt
cmp
mov
int3
into
sub
mov
cmp
cmp
out
or
imul
sbb
lahf
or
mov
pushf
cwtl
rol
push
rcrb
and
das
iret
adc
icebp
and
mov
fists
mov
sbbb
and
jae
sbb
jmp
shll
inc
test
mov
lods
pop
insl
dec
jns
mov
aaa
adc
test
fnsave
pop
push
pop
xor
add
arpl
lock
roll
insb
stos
pop
loope
verw
fisttpl
mov
ss
movsl
mov
xchg
xlat
dec
mov
sbb
add
pop
fs
xchg
lods
xchg
sbb
cmc
cmpsl
insb
pop
arpl
sbb
fidivrs
dec
stos
arpl
inc
mov
push
adc
cmp
into
test
and
dec
lds
push
test
imul
hlt
or
es
movsl
inc
scas
and
leave
or
xchg
mov
dec
push
ret
cmp
mov
ret
test
xchg
sbbl
xchg
insl
xor
ss
ret
pop
inc
xor
xchg
dec
and
xor
mov
stos
loopne
jle
xchg
cmp
pop
je
mov
pop
mov
add
cwtl
push
add
outsl
mov
lds
mov
dec
and
xchg
orb
test
pop
push
sarb
xlat
inc
dec
inc
add
dec
push
sbb
subb
and
rcr
pop
lds
fldt
stos
pusha
lret
inc
xorb
aaa
xchg
xchg
dec
test
incl
mov
aad
sbb
out
mov
and
imul
mov
inc
sub
ror
dec
mov
fs
sbb
xchg
shl
cmp
xchg
adc
push
inc
dec
mov
pop
xor
mov
xchg
push
mov
or
fsubs
mov
addr16
push
xchg
mov
pop
mov
mov
or
in
shl
outsl
sub
sbbl
mov
cmp
jo
jo
roll
mull
dec
mov
hlt
stos
jns
adc
movsb
ret
dec
mov
int
adc
inc
cmpsb
pop
pop
or
push
xor
mov
std
daa
xor
mov
or
mov
inc
les
insl
cltd
adc
fwait
dec
inc
push
or
jae
pop
or
mov
sub
inc
test
jecxz
popa
mov
js
pop
loope
add
or
dec
into
fdivrs
or
in
loope
cmp
fs
and
adc
sbb
push
mov
xorb
jo
in
pop
dec
jmp
jle
pop
fisubrs
inc
mov
inc
cmp
pusha
mov
adc
push
nop
fildl
js
pop
testb
and
fstpt
cmp
je
and
sub
std
jo
mov
push
fldl
jnp
sub
add
ss
std
dec
or
mov
jmp
mov
int
xchg
insb
ljmp
inc
mov
test
add
pop
hlt
inc
xchg
push
lret
add
cmpsb
lcall
push
out
mov
fildl
xchg
adc
fdiv
bswap
and
jp
js
cmc
mov
push
scas
fcomi
dec
out
jmp
lock
cmp
ret
pop
dec
nop
dec
and
in
sahf
lea
std
mov
nop
sub
mov
jp
xchg
movb
sbb
inc
push
push
mov
or
inc
inc
mov
mov
push
xlat
popf
sub
push
xlat
fdivl
scas
outsl
stos
stc
mov
pop
pop
xor
mov
in
aas
xor
push
push
insb
xor
mov
mov
mov
jno
into
lods
out
mov
inc
and
pop
rcrb
je
into
leave
xlat
les
fnstcw
push
xchg
js
xchg
xor
pushf
aaa
inc
jmp
cmp
sbb
add
mov
je
push
addl
mov
js
mov
subb
fnstenv
mov
pop
inc
es
test
in
mov
fcmovnu
popf
dec
clc
nop
ret
mov
int3
sahf
mov
mov
push
jecxz
and
sub
or
jg
and
stc
add
pop
sbb
ja
push
arpl
sbb
xor
dec
pop
push
data16
imul
outsl
out
push
cmp
xorl
sub
jbe
pop
js
adc
std
sub
loopne
dec
inc
sub
sub
lret
nop
out
push
jg
daa
jae
mov
repz
ret
adc
adc
std
enter
dec
paddusw
pop
adcb
and
jle
add
adc
mov
dec
adc
or
mov
aam
out
js
aaa
jp
pop
or
cmp
adc
mov
mov
mov
pop
sbb
add
test
push
adc
cld
andb
xchg
nopl
sbb
in
and
loope
loopne
adc
popa
push
xor
test
jb
fidivrs
std
les
jge
leave
sti
cwtl
add
enter
push
enter
sub
mov
or
cmpsl
mov
pusha
je
add
test
lea
rorb
je
lock
pushf
movb
mov
or
aaa
insl
inc
xlat
imul
xor
movsb
shll
and
sti
xor
leave
fwait
xchg
mov
dec
lret
sbb
jae
jle
adc
mov
dec
ret
out
xor
xchg
clc
pop
jle
imul
loopne
push
fsubrs
mov
xor
mov
out
outsb
xchg
fs
scas
and
lret
mov
xor
mov
andb
int
xor
shr
aam
aam
mov
and
jo
inc
push
aad
mov
pop
adcl
cmp
or
rcr
cwtl
loop
cs
subl
in
sub
jmp
mov
test
mov
jmp
push
jle
add
and
mov
mov
sub
sub
inc
or
cli
jb
inc
jb
ds
loopne
mov
cs
push
or
push
dec
mov
jecxz
adc
movsb
mov
sbb
aad
shrl
fmul
pop
inc
and
movsl
lret
fcoml
test
jno
imul
gs
rolb
frstor
nop
dec
push
add
inc
sub
pop
pop
dec
pop
mov
cwtl
pop
and
sbb
xor
push
dec
mov
adc
ds
std
inc
inc
push
bound
xlat
js
sbb
xor
addr16
sarb
clc
jge
in
pusha
lcall
repnz
ljmp
and
inc
daa
pop
add
cmp
pop
enter
sbb
push
addl
pop
sub
cmpsl
jmp
es
iret
push
daa
mov
mov
jge
pop
adc
xor
pop
inc
cli
lods
jmp
in
sub
or
mov
jmp
sahf
lret
sbb
mov
push
push
sbb
xor
imul
ljmp
test
andl
stos
mov
lahf
dec
fwait
mov
inc
setbe
int
pushf
test
ds
loopne
jp
push
mov
movsb
push
mov
divl
inc
xor
aad
gs
out
cmp
jecxz
mov
jle
mov
stc
or
jp
notl
sub
gs
mov
das
push
xor
test
adc
push
fisttps
jbe
sbb
inc
in
pop
or
xor
iret
push
jno
xchg
or
lret
inc
jbe
mov
loop
ret
movl
xor
mov
jno
and
je
imul
jecxz
inc
and
xchg
mov
xor
sub
mov
inc
sub
lret
lods
call
aaa
push
outsl
sub
jae
dec
out
push
mov
cmpsb
out
xchg
into
ja
sbb
xlat
xchg
mov
cwtl
fidivrl
daa
sbbl
les
pushf
xchg
xchg
push
inc
setne
adc
outsl
mov
push
lret
in
fldl
addr16
cmpsl
xor
decl
test
shrb
and
or
sbb
ja
or
cli
pop
add
fidivs
and
mov
in
stos
and
adc
out
into
jmp
lcall
lock
je
or
xor
mov
fnstsw
add
add
inc
ss
mov
xchg
or
ret
push
fsubs
push
aas
int3
sbbl
adcl
mov
pop
push
fisubl
ja
and
jns
inc
pushf
bnd
sub
fstl
mov
adcb
sub
dec
jbe
aad
inc
cwtl
sub
adc
mov
fs
test
andb
xor
mov
aas
add
inc
stc
and
jg
dec
scas
lahf
push
rorl
cmp
repz
ret
sbb
imulb
stos
outsl
neg
xor
sub
iret
pop
push
or
enter
scas
les
imul
and
mov
movsb
mov
cmpsb
jp
push
cmpsl
xchg
js
addb
xorl
mov
and
adc
sbb
gs
jecxz
pushf
jae
mov
js
sub
inc
push
sbb
pop
divb
jb
daa
xadd
lds
pop
sub
mov
cmpl
addb
mov
xor
and
ja
cltd
sbb
jne
pop
jnp
mov
cmpsb
jno
lcall
shl
mov
mov
push
mov
pushf
pop
jo
pop
popf
int
sub
mov
aaa
xchg
dec
pusha
push
arpl
xchg
lds
sbb
fwait
imul
fnstsw
xor
sub
ret
lods
add
cs
cmp
scas
adc
mov
add
insl
shlb
fstpt
mov
jns
aam
clc
nop
pop
mov
imul
sub
cmp
lods
test
ja
jmp
inc
cmp
cmpb
scas
pop
or
insb
add
in
or
scas
and
into
pop
imul
shrb
sub
insb
ror
cmpsl
jno
mov
xor
popf
sub
cmp
mov
std
adc
loop
ffree
mov
movsb
mov
pop
loope
fcom
aas
cltd
rcrl
fcmovu
int
and
insl
nop
dec
sbb
pop
ds
call
push
and
mov
test
mov
fsubs
mov
jno
xchg
add
in
mov
cmp
clc
mov
jns
dec
adc
bound
or
dec
sub
lods
sub
pop
mov
je
imul
mov
popf
pop
fcoml
movsl
andl
or
dec
fdiv
lods
push
xor
mov
outsl
ret
push
xchg
shrb
xchg
daa
cmc
cmc
mov
pop
andb
lea
aas
xor
mov
sbb
dec
mov
mov
shr
jb
ret
sbb
and
lea
mov
push
or
pop
cmpsl
scas
adc
lret
mov
xor
cld
lret
adc
shll
xchg
pop
inc
xchg
add
xchg
push
icebp
add
outsb
notb
jp
fdiv
cwtl
xor
xor
movsb
fs
mov
je
adcb
mov
jne
movsb
stos
or
sbb
jns
mov
bound
add
adc
and
pop
jl
shrl
or
leave
frstor
xchg
pusha
inc
ret
es
nop
ret
fwait
repz
leave
xor
dec
in
jae
lret
mov
xor
dec
push
lods
push
or
in
add
fsubrs
sub
xlat
and
cltd
push
or
mov
in
adc
and
mov
or
mov
xlat
icebp
xlat
xchg
and
adc
sti
push
xchg
insl
mov
mov
inc
ror
sbb
test
push
jbe
ljmp
je
sub
aad
mov
cmp
cmc
pop
mov
mov
cmpsb
rol
jnp
out
icebp
outsl
and
ret
xor
push
mov
sti
incl
aas
pop
movsl
lret
push
xor
negb
push
movsb
rclb
adc
mov
cmp
push
loopne
imul
jb
cmp
mov
sbb
insl
mov
xor
push
test
inc
and
cmpsl
outsl
das
arpl
mov
fwait
daa
xor
xlat
jp
mov
sti
hlt
cmp
dec
sbb
lahf
push
mov
push
rolb
pop
pop
rorl
cld
or
test
incl
sahf
insl
fxch
out
fldcw
movsl
push
cwtl
xor
cmc
cmc
cltd
mov
imul
mov
sbb
inc
scas
push
repz
dec
and
push
int
xor
sbb
mov
js
mov
and
xchg
pop
sahf
mov
inc
adc
mov
subb
iret
out
add
or
sub
jl
out
jns
dec
nop
fistpl
xchg
dec
lods
pop
imul
cmp
mov
pop
stos
pop
xor
dec
or
inc
shr
jbe
sbb
cwtl
lock
push
dec
js
adc
inc
mov
mov
xor
and
fistps
loope
aam
push
cmp
jle
cmp
or
add
testl
lods
outsb
jae
mov
sbb
aam
and
ds
std
mov
fadds
sub
inc
pop
and
mov
mov
mov
xchg
mov
inc
add
jle
pop
daa
inc
cltd
pop
out
shrb
add
lock
lea
mov
ret
stc
or
cwtl
sbb
mov
dec
popf
inc
xchg
or
adc
enter
fwait
les
sub
or
mov
shl
pusha
lods
dec
in
shrl
xorl
nop
divl
or
nop
sbb
pop
repz
lahf
xchg
mov
jns
xchg
cmp
cmc
cs
push
int3
sahf
popf
jp
pushf
adc
push
dec
fwait
aad
sti
popf
les
not
push
vreducepd
or
outsb
lds
fnstenv
dec
jmp
dec
mov
cld
lret
sub
cltd
xor
push
jbe
inc
cmp
fmull
fwait
push
out
sbb
loopne
imul
xor
adc
stos
aad
out
icebp
add
pop
inc
aas
into
push
ds
pop
and
inc
sbb
mov
cld
mov
std
je
mov
add
int3
dec
mov
xchg
imul
lret
aad
mov
loope
jnp
sub
icebp
popa
or
dec
sub
iret
bound
pop
in
gs
imul
pop
sub
rcrb
hlt
jg
sub
push
jbe
add
aaa
mov
int3
push
xchg
xchg
sti
mov
xchg
inc
mov
in
fsubr
in
sub
aas
push
dec
or
into
adc
mov
mov
sub
andl
cld
mov
ret
rcrl
xor
adc
dec
xor
lds
sbb
xor
insb
daa
leave
mov
add
pusha
lret
sbbb
jb
jg
popf
cmpsb
and
inc
fs
cmp
out
lods
sbb
mov
aaa
sub
repz
hlt
and
adc
push
mov
dec
daa
and
out
bswap
dec
test
aas
std
pop
in
mov
lret
inc
sub
ds
stos
mov
fidivl
arpl
push
movsb
sub
mov
aam
stos
add
bound
push
dec
stc
fists
push
loope
and
jb
mov
xchg
pop
and
imul
cmp
insl
leave
lcall
xchg
std
out
xchg
mov
scas
inc
push
pop
arpl
mov
xor
pop
fs
and
adc
jne
aaa
divb
push
pop
dec
and
ljmp
in
fwait
es
dec
mov
and
jecxz
pushf
lods
fstl
in
adc
dec
add
sbb
mov
popf
mov
ss
add
push
lahf
xchg
dec
popf
and
aas
popf
mov
jecxz
popf
lock
hlt
pop
dec
pop
ret
add
jno
pop
mov
repz
dec
iret
aam
nop
add
hlt
emms
dec
jnp
pushf
outsb
adc
add
addl
xchg
shlb
roll
fildl
adc
sub
bnd
mov
add
add
fidivl
test
stos
pop
mov
mov
and
jle
mov
fbstp
cmp
cmc
inc
cmp
mov
jb
jmp
cltd
je
mov
test
or
xor
das
arpl
aas
jmp
jecxz
pop
inc
mov
and
push
adc
js
addl
cld
mov
jmp
daa
shll
and
out
outsl
out
mov
push
push
jl
lea
xor
pop
jae
xor
sbb
daa
mov
mov
cld
out
in
jne
sub
pop
add
sub
aas
or
inc
dec
sbb
mov
pop
or
jg
lahf
fistl
jmp
daa
push
shrl
data16
dec
xchg
push
repz
jbe
cmpsb
sti
jecxz
int
jne
mov
push
dec
addr16
xchg
or
sub
out
ss
divl
mov
push
or
cltd
rorb
loop
rcrb
enter
sbb
test
and
inc
je
inc
and
repz
sahf
cmp
addr16
jle
pop
xor
inc
add
xor
sub
out
add
xchg
fldt
add
sbb
push
dec
outsb
pop
sub
testb
jnp
cli
popf
mov
das
sub
sar
pop
les
movsb
pop
xchg
lods
inc
sbb
test
and
mov
fimull
push
jbe
pop
cmpsl
arpl
mov
pop
lret
ret
mov
test
inc
inc
xchg
mov
je
pop
iret
fidivl
xchg
inc
mulb
jbe
sub
subb
mov
push
jno
fisubl
cmp
or
xchg
sub
xor
xor
push
or
pop
addr16
xchg
je
fnsave
and
push
add
sub
xchg
fs
sub
or
push
ret
mov
in
jne
ret
sete
fstpl
mov
gs
push
cld
or
ja
sbb
imul
xchg
pushf
inc
sub
lret
scas
cmpsl
pop
xorl
mov
into
movsl
pop
cwtl
popf
adc
movsb
jmp
fidivs
sahf
cmc
rcrb
xorl
out
movups
jge
aaa
les
into
test
cmpsl
sbb
pop
xor
hlt
inc
pop
lahf
dec
pop
xrelease
xchg
push
out
inc
dec
out
outsl
fidivrs
rep
mov
pusha
xchg
add
sbb
mov
sti
int
xchg
ds
imul
and
hlt
stos
ds
flds
sbb
mov
inc
popa
icebp
lock
stos
jmp
mov
or
push
arpl
add
in
call
lret
push
dec
ret
mov
xchg
sti
lcall
and
inc
cmp
xor
inc
xchg
js
inc
lahf
aaa
out
inc
fcoms
pop
mov
or
sbb
aad
cld
iret
xchg
outsb
dec
ret
xchg
loopne
push
mov
xchg
fildll
enter
out
cs
and
ret
jnp
loop
je
ss
in
inc
mov
xchg
popa
insb
popa
sub
xor
mov
xor
push
xor
sbb
mov
add
xor
push
fdiv
pop
cs
sbb
mov
mov
shl
outsl
and
sub
test
mov
int
or
push
xchg
jp
std
clc
fwait
imulb
xchg
out
mov
popa
push
and
mov
xor
les
xchg
sti
adc
dec
inc
adc
mov
pop
cmpsb
jae
mov
pop
test
orl
sub
aad
fimuls
jge
ret
in
push
pop
lock
adc
and
lahf
adc
push
call
jbe
mov
push
lret
stc
pop
and
xor
cmp
repnz
scas
cmpsl
xor
lcall
adc
inc
insb
in
jnp
sbb
je
pop
filds
test
das
scas
out
add
pop
fadds
jo
push
dec
in
out
push
adc
pop
or
ds
add
cmp
mov
addr16
xchg
dec
aas
test
insb
outsl
ja
mov
das
popa
jmp
cmp
push
lods
bound
push
push
andl
jne
popw
in
sub
inc
jnp
movsl
test
outsb
inc
dec
xchg
std
ljmp
ljmp
mov
jg
jns
push
sbb
nop
cmp
mov
cmp
xor
daa
xchg
out
rolb
cmpsl
pop
ljmp
sub
mov
inc
test
fs
loope
push
jns
orb
mov
xsaveopt
sbb
adc
mov
sub
aas
jns
pop
iret
outsl
pop
insl
jne
jg
rorl
xchg
in
jecxz
inc
cmpb
test
out
dec
cli
in
outsb
push
nop
repz
imul
push
pop
sbb
out
outsb
nop
fidivrs
jle
ret
shl
and
sub
cmpsl
jb
mov
neg
fwait
popa
push
and
and
jnp
mov
mov
sub
jne
arpl
mov
fcompl
adc
sbb
clc
mov
aas
cmp
inc
inc
bound
adc
flds
lea
arpl
hlt
push
insl
fsubrs
pop
mov
fsts
ror
push
dec
mov
insl
sbb
fisttpll
push
inc
xchg
push
inc
ds
add
sbb
pusha
jo
mov
pop
cmpsl
pop
lcall
aad
pop
mov
ss
jmp
push
xchg
shlb
iret
push
mov
mov
and
ret
in
lret
into
xchg
cmp
stos
shll
sbb
in
xchg
js
bswap
cmp
push
in
mov
dec
rcll
loopne
aad
mov
ss
enter
jmp
pusha
jl
leave
jle
lds
mov
jecxz
sub
repnz
pop
adcl
iret
sbb
add
orl
xchg
pop
je
jecxz
pop
cmp
dec
sub
add
mov
cmp
dec
sub
pop
std
ljmp
aad
sbb
jecxz
movsl
mov
xchg
loope
cmp
aas
xchg
dec
aas
cwtl
and
cwtl
pop
add
loop
mov
ret
sbb
decl
ret
gs
xchg
arpl
fistl
push
sub
push
shlb
lret
lock
cmpsb
add
adc
add
xchg
popl
sbb
push
xlat
push
mov
out
push
sbb
mov
adc
mov
addb
js
test
lret
mov
pusha
shr
insl
aam
dec
ljmp
stos
ficoms
jne
out
mov
xchg
lds
rolb
cli
cs
mov
sbb
cltd
fistpl
imul
xchg
in
stc
daa
sar
aas
add
or
int3
out
dec
cmpsb
sbb
or
sub
gs
jge
icebp
sub
repz
lods
outsb
xchg
jg
dec
push
shrb
adc
adc
lods
pop
int
mov
xor
or
movsb
pop
js
mov
mov
sbb
or
rorb
movsl
mov
or
out
xchg
sahf
mov
pop
push
cmpsb
negb
fldcw
ljmp
sti
inc
dec
ret
mov
adc
nop
addr16
cmp
popf
push
dec
xchg
xor
test
sar
sarl
aam
aam
imul
fistpll
push
fildll
out
cmp
pop
lahf
jmp
pop
stc
jecxz
inc
cmp
jmp
xor
cmp
lea
in
iret
repz
mov
int3
jns
cmpsb
sub
daa
push
and
xor
gs
sub
and
mov
test
shl
cmp
outsl
push
dec
jmp
or
push
loop
popf
pop
pop
subl
imul
mov
jb
repnz
testb
mov
pop
pop
add
push
pop
rclb
addr16
xor
fwait
and
and
pop
int3
ret
mov
lds
push
sahf
add
jl
das
popa
cld
test
das
adc
shl
movsb
pushf
jb
and
or
adc
dec
mov
and
test
cwtl
lahf
out
pusha
push
xchg
inc
ret
nop
mov
add
int
cs
xchg
dec
or
popa
imul
dec
insb
jo
fdivl
lahf
mov
roll
xor
push
mov
jmp
in
mov
xchg
and
andb
subl
addb
lret
pop
dec
imul
mov
lds
jns
mov
pop
repz
jbe
and
sub
pushf
push
pop
jbe
or
gs
add
push
mov
inc
jecxz
pop
xorl
imulb
jno
sahf
movsb
cmp
adc
loop
sbb
push
adc
cmp
xchg
call
pop
push
out
jae
lods
sub
dec
in
jecxz
mov
in
lret
or
xchg
iret
pop
andl
push
mov
inc
add
cmc
cmc
out
inc
aaa
into
mov
lcall
bound
and
lock
pushf
lods
adc
leave
outsb
mov
xorl
push
or
push
pop
mov
xchg
nop
xchg
pop
out
fistl
fcoml
dec
sbb
data16
mov
xor
cmp
sbbb
xchg
jno
mov
arpl
push
aaa
dec
imul
iret
inc
jecxz
data16
inc
loopne
test
mov
pop
cli
mov
add
loopne
aas
insb
sbbb
aad
sbb
lods
inc
lret
mov
pop
pop
cmc
fists
cmp
out
imul
jo
add
xchg
out
xor
sub
jmp
mov
rcrb
hlt
push
cmpsb
push
dec
stos
dec
dec
sbb
les
outsb
lds
or
push
cs
cmp
push
ds
addr16
movsl
mov
dec
jmp
int
cs
daa
cli
and
loope
jmp
push
cltd
rorl
hlt
dec
movsl
std
or
fwait
repnz
sub
cmpsl
jp
lcall
or
stc
inc
jae
adc
mov
repz
mov
imul
jb
lods
pop
xor
insl
gs
aaa
push
shrl
popl
adc
inc
dec
in
shrb
test
xchg
dec
fidivrs
xchg
dec
push
adc
xchg
jbe
xchg
sbb
test
xor
rorl
adc
lahf
test
push
xor
sbb
jge
dec
cli
aad
push
adc
mov
int
in
test
call
mov
mov
jle
push
jl
rcrl
jns
decl
shll
test
pop
movsl
cmp
cltd
and
mov
daa
iret
mov
testb
test
mov
aaa
dec
lret
ss
pop
loope
movsl
pop
loopne
xor
xor
mov
jp
mov
xor
push
int
cltd
push
jno
imul
mov
cmc
outsl
rdmsr
pop
xor
inc
dec
pop
inc
sub
pop
sub
pop
int
and
or
in
jge
mov
out
push
xchg
sbb
fistpll
sbb
jnp
loope
shlb
leave
xor
jno
repnz
xchg
inc
rcll
call
mov
mov
clc
scas
insl
fdivrl
mov
je
hlt
cmp
push
pop
xlat
mov
cmp
sub
inc
sbb
test
clc
and
cmpsb
dec
cmp
pop
cmp
and
repz
iret
call
mov
int3
call
dec
and
sub
mov
cmp
insl
es
jne
mov
dec
rcl
enter
pop
ljmp
in
popa
dec
or
psadbw
jne
and
es
adc
sub
cli
inc
inc
pop
xchg
jnp
and
push
in
shr
inc
int
push
imulb
movsb
nop
push
mov
jo
shlb
mov
rcl
lret
mov
lods
inc
int
movsl
sub
test
dec
rclb
nop
clc
fldl
or
fwait
insl
cmpsl
and
sub
jno
test
sbb
xchg
or
fsubs
dec
mov
ljmp
cmc
xor
ds
xchg
jns
lahf
mov
jb
add
push
sbb
cmp
push
mov
sbb
mov
sub
pusha
cwtl
cmp
ret
outsl
jbe
ret
test
lea
aam
fisubrl
ret
clc
mov
in
ret
xlat
xchg
and
inc
les
gs
push
or
push
movsl
cmp
lods
push
xchg
outsl
outsl
out
fistpl
inc
xor
add
lods
add
or
loop
gs
in
jl
leave
fwait
adc
neg
push
xchg
pop
gs
out
mov
pushf
push
mov
int
andb
pop
mov
mov
std
inc
cmp
sbb
into
mov
arpl
std
dec
xchg
mov
and
iret
insl
xor
add
jmp
or
xchg
into
xor
mov
shlb
jp
mov
das
imul
or
mov
mov
lret
add
lock
ret
nop
sub
cmpsl
mov
loope
xchg
xor
mov
cld
or
ret
push
cmp
arpl
aaa
adc
popa
daa
push
push
mov
push
fwait
or
rclb
jb
sahf
pop
cli
cmovns
xchg
imulb
jecxz
pop
loope
push
dec
and
adc
xchg
mov
xor
cmc
or
mov
mov
or
xlat
imul
jp
mov
cmpsl
mov
push
lock
and
or
sbb
add
cmp
aad
daa
push
outsl
cmpsb
ffree
sbb
cmc
sbb
xor
mov
push
jno
pop
lds
push
pop
daa
lods
imull
je
fimuls
pop
bound
cmp
dec
lods
mov
stc
jmp
lahf
xor
pop
cmpsl
mov
xchg
cltd
out
mov
out
cmp
xor
stos
sbb
pop
mov
aam
imul
loopne
repnz
call
jge
push
mov
pop
movsb
outsb
push
xor
stc
push
push
lcall
inc
adc
int3
and
or
movsb
and
or
mov
loop
sbb
inc
dec
ret
dec
jnp
jo
inc
movsl
adc
arpl
imul
xor
shlb
shrl
mov
push
js
aad
mov
inc
mov
add
cli
xchg
mov
xorb
mov
jb
mov
push
arpl
es
ret
cld
out
xchg
inc
and
aas
mov
daa
fcoms
lock
or
adc
mov
outsb
jmp
dec
xor
sub
ret
sbb
mov
and
jmp
mov
in
das
and
nop
jne
ret
lods
inc
and
scas
or
in
mov
notl
mov
or
out
and
dec
je
lcall
subb
call
imul
inc
andl
loopne
jo
testb
ret
inc
rorl
sti
cld
dec
mov
js
jae
mov
mov
xor
adc
subl
fcompl
jo
xor
dec
dec
xor
icebp
scas
lods
inc
mov
cmp
dec
rolb
push
sahf
jl
shlb
push
xor
or
mov
dec
xor
ja
jno
lret
sub
sbb
mov
jmp
mov
mov
nop
sahf
sahf
icebp
and
mov
outsl
sub
out
outsl
iret
jo
and
cld
add
sub
mov
pop
outsb
and
inc
xchg
imul
add
arpl
adc
pop
xor
xchg
scas
and
jmp
jmp
xlat
or
or
mov
roll
pop
scas
cmc
mov
mov
icebp
inc
xor
ss
jae
fidivs
shll
adc
test
roll
or
and
js
gs
sbb
adc
xchg
jmp
mov
icebp
cmp
sbb
jmp
test
pop
les
xchg
mov
jno
imul
dec
insb
icebp
fnstcw
jns
cmp
mov
push
int
int
lcall
jns
cld
mov
xchg
xchg
cmp
gs
push
in
fmuls
aaa
lock
pop
lods
int
pop
rorl
push
cwtl
int
lock
adc
xchg
cli
cmpsl
push
pusha
dec
jle
dec
mov
mov
pushf
imul
dec
push
or
mov
enter
pusha
jmp
sub
cmpb
adc
push
mov
insb
and
jecxz
inc
lcall
xchg
or
sysenter
pusha
dec
cmpsb
xchg
sbb
daa
es
aaa
jle
sbb
xchg
pop
mov
sahf
int3
int
rorl
cld
xchg
dec
imull
cmc
fdivr
pop
in
jb
jle
cmpsb
shll
ret
inc
xlat
jmp
jg
loope
and
xchg
sbb
dec
inc
xchg
add
repz
pop
into
add
stc
cmc
mov
loope
fsub
sbb
std
sbb
dec
mov
shrl
add
das
les
adc
and
sahf
arpl
pop
mov
add
test
mov
arpl
pusha
xchg
inc
sbb
adc
shlb
and
add
test
cmp
icebp
pop
mov
movaps
lcall
pushf
push
push
sahf
push
insl
inc
sbb
add
sub
mov
fcoml
mov
rclb
roll
out
movsb
lods
pop
dec
mov
pop
mov
clc
or
shlb
adc
in
add
cld
mov
hlt
cmc
sti
add
dec
sub
cli
cld
ret
adc
adc
scas
xor
lret
notl
cltd
push
add
cmp
xor
das
push
dec
ret
cmc
dec
ss
xchg
xchg
mov
enter
mov
dec
sbb
cwtl
fists
lret
push
xchg
addl
das
mov
cmpsl
std
mov
std
mov
pop
dec
cmpl
aaa
pop
cli
pop
cs
lret
or
lods
pop
inc
mov
sub
std
rorb
or
testb
sbb
cmp
mov
mov
sub
jp
aad
or
jno
xchg
in
ret
sub
mov
jb
fldl
cmp
and
jg
dec
adcl
aad
icebp
stos
int3
jge
mov
pop
fcoms
pusha
rorl
push
or
push
daa
add
xchg
scas
lods
clc
mov
xor
or
decb
pop
sub
push
jae
int
repz
inc
test
cmp
jl
cmp
mov
jbe
push
or
mov
push
mov
and
cmpsl
lret
repnz
lea
sub
pop
mov
jo
fdivp
sarl
jle
in
mov
lods
scas
xor
push
jle
dec
mov
pusha
clc
sub
mov
jno
mov
add
lds
and
gs
movsl
xchg
lods
data16
lret
test
sub
out
jg
aas
in
aam
push
vpunpckhqdq
das
adc
shrb
cwtl
les
movb
ss
int3
ret
jmp
pop
movb
and
cmp
mov
outsl
out
popa
ljmp
xor
jle
xchg
pop
loop
lret
or
popf
xchg
or
popa
mov
or
testl
pop
divl
rorl
sub
lods
lahf
jno
cmp
mov
and
jge
jbe
lcall
jge
inc
pop
adc
push
mov
jns
lds
xchg
inc
xchg
lods
aaa
mov
pop
cld
mul
add
and
in
lds
and
xchg
or
rorb
push
iret
lods
push
fucomp
insl
push
and
push
cmp
mov
sub
into
pop
movsl
ljmp
jge
dec
adc
leave
gs
cmp
xchg
xlat
loope
sbb
dec
mov
or
jle
push
ss
add
int3
jbe
mov
idivb
sbb
push
lea
xchg
aaa
ljmp
xchg
aam
dec
movsb
xlat
mov
repz
mov
mov
lahf
scas
mov
ljmp
lods
test
loop
inc
hlt
jae
add
sub
jbe
jp
mov
and
xchg
mov
sub
sbb
rcr
or
incl
lcall
mov
cld
fimuls
stc
or
sahf
mov
movsb
xor
cmp
dec
pop
pushf
gs
xor
jmp
cmc
push
ja
loop
push
ja
sub
rcrb
pop
mov
xor
imull
push
dec
or
aam
xor
stos
add
and
fbstp
cmp
clc
aaa
addr16
out
lahf
dec
push
adc
sub
gs
nop
mov
lods
adc
sub
xchg
inc
xchg
or
stos
psubsw
out
sub
imul
inc
imul
shlb
ss
shrl
add
lret
in
cmp
out
loopne
xchg
adc
aas
jp
pop
arpl
imul
cltd
stc
pop
out
mov
into
lcall
jl
mov
sbb
mov
jmp
jg
hlt
xchg
jae
sti
dec
push
dec
lahf
testb
dec
jno
loopne
jge
fisubrs
xor
ficompl
hlt
inc
out
sbb
insl
movd
mov
and
jo
pusha
jb
jp
mov
sub
xorl
mov
insb
arpl
leave
push
push
fwait
repnz
and
pop
push
jle
mov
pop
pop
aas
sub
mov
or
cmpsl
call
stc
movsl
stos
sbb
filds
xchg
fcmovnb
pop
shlb
xchg
and
mov
adc
insb
cs
sti
pop
decl
xchg
scas
leave
jg
inc
lret
gs
sar
mov
mov
pop
test
js
pop
pushf
fidivrs
fisubl
stc
adc
fldcw
sub
out
int
and
pop
cmp
jle
sub
stos
into
push
rcrb
dec
imul
xor
mov
lods
out
xchg
imul
dec
dec
out
arpl
and
aam
xchg
jns
add
push
es
mov
cmp
jge
jecxz
js
std
sub
mov
lock
popa
cmpsl
add
and
ret
es
lret
jo
jno
pop
jg
insl
xor
pushf
pop
jp
shlb
jb
mov
xorl
push
sbbb
inc
mov
rorb
push
adc
pop
or
clc
pop
ror
adc
sub
fstpt
out
hlt
in
and
push
shrl
mov
xchg
sbb
icebp
into
cli
loopne
icebp
test
fisttpll
into
pop
ljmp
icebp
push
in
pop
pop
sub
mov
fcmovbe
fisttps
cld
aam
jae
divl
movsb
imul
std
js,pt
scas
add
mov
dec
sahf
dec
jno
rol
pop
sub
mov
in
int
mov
inc
aas
mov
push
xor
addl
pop
inc
das
movsl
adc
cltd
or
outsb
push
xor
inc
ficoml
pop
xor
das
cs
nop
call
fldl
sub
test
xchg
bound
mov
dec
ja
jo
les
adc
inc
test
dec
mov
mov
hlt
fsubl
pop
outsb
mov
data16
movsl
jne
repz
xor
mov
adc
jbe
push
and
adc
mov
jmp
inc
negl
movsb
dec
out
pop
loope
mov
aaa
enter
push
push
std
rcrl
sbb
and
add
adc
pusha
push
adc
divl
mov
ret
sahf
fwait
int3
hlt
out
fistl
add
dec
lret
mov
rcrb
mov
je
jle
ret
rolb
inc
sti
fldt
imull
aaa
mov
hlt
cmp
mov
and
cli
imul
dec
test
pop
push
nop
mov
fsts
sub
jg
outsb
push
ja
mov
and
lock
mov
xor
stos
pushf
xchg
ds
stos
push
rol
pop
xor
aad
jmp
dec
stos
dec
ja
xor
rol
rclb
das
inc
fnstsw
bound
jecxz
cld
jno
stos
jbe
movsb
mov
mov
and
and
mov
xchg
jle
cmc
iret
fwait
or
scas
push
dec
nop
xchg
movsl
push
sbb
jmp
js
mov
ds
mov
lcall
inc
fists
or
pusha
outsl
nop
shll
inc
js
outsl
lock
into
inc
pop
out
outsl
insb
loopne
push
mov
nop
imul
mov
mov
mov
pop
movsl
push
inc
inc
push
nop
adc
les
scas
pop
mov
push
bound
hlt
mov
lods
neg
scas
xor
push
mov
adc
and
ja
jbe
and
test
add
add
repnz
mov
gs
dec
test
sarb
iret
addr16
iret
push
sub
add
xor
int3
jmp
inc
xor
outsb
negl
sbb
mov
mov
popl
les
out
jmp
imul
dec
out
xorl
cmp
bound
pop
stos
push
and
fildll
stos
popf
je
into
pop
add
adc
xlat
mov
and
in
lret
insb
insl
imul
incl
jp
fmuls
push
out
sbb
repz
sahf
negb
into
incl
pop
in
jle
shll
or
inc
aam
xchg
addb
inc
cmpsb
cld
das
ficoml
xorb
push
faddl
cmp
arpl
repz
test
clc
cmp
add
jl
arpl
xchg
mov
mov
jb
add
sbb
mov
pop
xsaves
add
dec
or
mov
aaa
xchg
and
ss
adc
leave
pop
in
xchg
dec
fsubl
cli
inc
pop
leave
jbe
add
inc
cmpsb
jae
scas
mov
popa
inc
jl
fldl
shrb
xchg
or
pop
push
das
mov
sub
scas
sub
and
mov
xor
adc
mov
stc
xchg
pushl
or
jl
pop
push
out
xchg
cltd
dec
pop
xor
push
mov
ljmp
cmpsb
inc
pop
lods
sub
loope
test
negb
sub
shlb
ffree
idivb
cmp
rorb
adc
in
mov
imul
mov
mov
add
sbb
sbb
fstpl
cwtl
movsb
and
and
call
push
imul
aas
mov
push
cmp
pop
inc
mov
cmp
lea
je
push
js
inc
fstpl
int
andb
fdivrl
and
stos
mov
sbbb
lods
mov
out
rorl
sbb
movsl
leave
ds
rcrb
sarb
cwtl
ss
filds
es
fidivl
rclb
insb
shl
mov
inc
std
mov
ret
mov
ss
pop
inc
push
sub
popa
bound
or
in
stos
sub
test
insb
enter
jbe
pop
add
adc
jecxz
or
push
sbb
jne
ffree
push
lods
aad
into
jg
add
push
rol
out
push
jne
orb
jmp
pop
shrl
mov
arpl
cwtl
scas
inc
fsts
xchg
push
les
js
pop
iret
in
xor
out
mov
inc
lcall
bound
cmpsb
scas
lods
repnz
iret
ds
cli
aad
sub
pop
add
xchg
movsl
pusha
pop
push
nop
sub
adc
pop
popf
adc
inc
fimull
mov
mov
and
xchg
mov
into
mov
mov
mov
flds
cli
dec
sbb
es
xchg
or
mov
push
mov
push
xor
sub
sub
xor
jb
add
repz
add
cmp
mov
jp
stos
outsb
iret
in
adc
out
adc
xchg
mov
dec
aam
jnp
cmp
fistl
jge
rcl
push
imul
adc
dec
inc
xchg
rorb
int3
pop
jge
mov
aam
jg
popl
fsubrs
xchg
pop
add
jmp
lret
icebp
adc
movsb
push
inc
pop
dec
mov
cmp
mov
daa
xlat
out
cmpsl
and
adc
shlb
int3
cli
or
js
pop
fisttpll
aam
xchg
movsb
push
xchg
jg
inc
lcall
push
call
sbb
or
push
mov
in
insb
pusha
popf
jae
cmc
aas
fdivp
mov
mov
pop
ss
cmp
mov
push
add
das
pop
xor
dec
push
jno
ja
jo
stos
mov
pop
or
cld
icebp
fnsetpm(287
shl
inc
into
push
fwait
outsl
lods
lret
lret
inc
or
bound
cs
leave
stos
push
insl
pushf
gs
int3
mov
out
jle
inc
mov
lea
cmp
cmpsl
cmc
xchg
jno
push
jnp
mov
xor
lods
rolb
mov
sub
dec
idivb
js
js
fdivrp
jl
mov
pop
inc
data16
mov
adc
or
das
jae
mov
or
dec
dec
es
lea
pop
inc
iret
mov
cmp
xchg
and
adc
jno
or
setp
jo
mov
aam
loop
aad
or
lret
in
mov
push
or
nop
push
xchg
xor
push
xchg
pop
inc
imul
out
pop
enter
gs
sub
mov
fucompp
lret
jecxz
iret
shll
daa
fdivrp
movsl
sub
inc
add
mov
fdivrp
int3
mov
and
inc
and
lods
push
icebp
mov
loop
pop
inc
sbb
sbb
sub
jg
call
stos
add
adc
xor
mov
ret
insb
dec
sbb
xchg
cmp
cmp
dec
sbb
movsb
sbb
jmp
mov
dec
mov
jg
cmpsl
mov
add
xchg
pop
jb
dec
or
loopne
xor
stc
sti
inc
sbb
pop
popf
pop
ret
test
hlt
in
sbb
mov
inc
pop
icebp
hlt
cld
jmp
scas
testb
sbb
cmp
mov
jb
pop
sbb
ret
cmp
fwait
js
roll
ficomps
pop
lahf
dec
cwtl
inc
xorl
pop
fldl
mov
xor
insl
or
out
inc
xchg
mov
pop
jb
loope
jbe
test
popl
cmc
push
repnz
xchg
push
fdivrp
xor
and
lods
aaa
jns
or
std
xor
test
pusha
call
clc
test
xchg
sbb
dec
imul
add
lods
push
mov
addb
cltd
pop
add
cmpsb
add
fisttpl
lods
jg
sub
aad
lahf
sti
push
in
mov
jmp
sahf
imul
lcall
jl
inc
cld
test
mov
inc
mull
mov
jns
xor
lcall
ret
inc
mov
xor
sbb
and
cmp
pop
mov
hlt
ret
inc
pushf
loopne
add
and
jnp
pop
push
adc
icebp
fucomp
cmpsl
sub
push
pop
mov
fwait
push
repnz
mov
rcrb
shlb
dec
inc
inc
mov
dec
push
add
pop
fisubs
mov
icebp
cmpsb
xor
mov
cltd
popa
fimuls
push
jl
pop
cmpsl
sbb
cli
idivb
fdiv
jae
add
subb
pusha
icebp
loop
jne
xchg
imul
popf
arpl
and
or
ljmp
mov
xor
jno
cmp
ret
stos
mov
add
out
mov
movsb
shrl
sti
outsl
jg
xor
cwtl
imulb
movsb
sub
push
adc
clc
or
mov
mov
jmp
push
scas
or
jae
lods
xorl
ds
in
add
pop
add
pop
pusha
bound
lock
dec
pop
push
add
test
les
jo
xchg
sub
aas
sarl
jb
je
dec
cmp
imul
lods
push
push
in
pusha
out
rcr
inc
jo
sbb
roll
xor
add
or
insl
pop
push
pop
outsb
in
pop
mov
js
sbb
scas
mov
ret
stos
das
and
mov
sub
mov
mov
out
andl
push
mull
pinsrw
dec
sub
and
nop
pop
jne
in
pop
dec
push
ljmp
fldl
push
loope
ret
rep
cmpsb
rcrb
push
xchg
leave
scas
out
jb
in
sub
jg
loope
popf
aad
push
dec
push
outsl
iret
cmpsb
ja
scas
dec
xchg
mov
cltd
xor
ja
mov
jl
push
mov
xlat
pop
jo
dec
aam
add
cmp
push
or
push
popl
push
mov
sub
inc
sub
xchg
xchg
xorb
mov
in
cmpb
xchg
jno
push
rorl
xchg
xchg
pop
outsb
push
shl
and
movl
add
adc
cld
pop
clc
dec
pushf
adc
adc
cmpsb
out
sub
cmp
clc
xor
cmp
les
cld
sub
rol
dec
repz
fstp
mov
cld
pop
sbb
fptan
lahf
pop
pop
xor
dec
mov
push
mov
xorb
cmp
jg
sbb
mov
fistps
jbe
aaa
repz
mov
cmp
xor
fcomps
push
movsl
inc
and
subl
ljmp
les
imul
aad
test
mov
mov
fsts
mov
insb
or
sub
xchg
std
jecxz
loop
out
std
lds
push
sbb
cmp
sbb
inc
mov
and
mov
mov
pushf
push
mov
dec
aaa
mov
xlat
lods
testl
lods
lahf
lret
out
xchg
pop
imul
lea
fwait
pop
dec
jne
enter
dec
sub
adc
cmp
inc
jecxz
mov
pop
dec
and
and
add
cmp
scas
adc
push
dec
lret
push
out
icebp
sub
cmpsb
jae
adc
shl
imul
xchg
jns
fmul
and
jb
fidivrs
mov
push
mov
cmp
add
andb
adc
movsb
loopne
cwtl
pop
stc
mov
fistl
xor
add
popf
or
mov
divb
adc
decb
subl
mov
repnz
mov
mov
lcall
movsb
or
push
call
shl
cltd
loope
in
dec
and
fcmovnu
cs
add
xorl
insb
pop
mov
ret
xchg
shlb
leave
in
mov
adc
or
mov
pop
push
fwait
jo
push
clc
pop
daa
iret
xor
xchg
push
pop
mov
cmp
test
jbe
stc
mov
shl
pop
mov
mov
repnz
repz
jecxz
sbb
or
cmpsb
cmpsb
int
js
setge
out
or
jne
xchg
sbb
les
adc
lds
or
cmp
cmc
pop
or
int
xchg
fisttps
mov
into
add
cmpsb
test
xchg
loopne
fldl
xchg
insb
push
lahf
adc
call
ret
insl
push
inc
sti
dec
icebp
shrl
roll
sbb
push
mov
cmp
test
mov
xchg
fnstcw
pop
mov
xchg
mov
popf
mov
pop
sbb
in
xor
lds
inc
addr16
pop
xchg
xor
or
mov
and
dec
cltd
mov
mov
inc
icebp
add
loop
mov
repz
sub
bnd
jmp
push
lret
movb
push
xchg
and
cmp
ss
add
add
push
loop
test
out
sub
std
mov
and
dec
jp
fcoml
xchg
mov
inc
loopne
stos
cmpsl
gs
ljmp
rcrb
rcll
shld
dec
sbb
pop
cld
push
jns
sbb
mov
cmp
mov
mov
decb
int3
mov
gs
aam
mov
in
pop
sub
cmc
push
setp
in
or
mov
dec
int3
fistpll
xor
sub
sti
xorb
into
inc
leave
and
subb
aam
mov
mov
int
jg
cltd
cmp
jns
push
or
mov
xor
jnp
sub
adc
fucomp
scas
scas
or
mov
cli
mov
cs
adc
je
cmpl
push
fsubl
iret
sub
push
mov
pcmpeqw
movsl
notb
push
cmpsl
pop
subb
pusha
push
cmpb
ret
jo
jmp
cs
leave
xor
roll
sub
pusha
push
cmp
ds
lods
aaa
cs
outsl
cmp
nop
pop
or
jnp
sbb
pusha
int
jecxz
pushf
cmc
loope
xor
mov
jbe
sub
xchg
shlb
popf
xchg
sbb
mov
adc
je
cmp
push
xchg
mov
ljmp
lret
imul
lods
inc
adc
push
arpl
jl
incb
in
add
pusha
repnz
push
lds
jns
out
push
cwtl
mov
or
lret
jmp
xor
aas
adc
jl
test
out
jl
aas
in
mov
xor
mov
sub
adc
lcall
push
sarb
push
mov
icebp
lret
pop
mov
dec
aam
xor
ror
pushl
sub
xchg
mov
das
test
mov
test
iret
mov
or
dec
adc
fisubl
ret
xor
cmc
test
clc
cmp
cmp
xor
push
dec
fnstcw
mov
shlb
xchg
out
insb
fisubs
push
pop
push
sbb
iret
movsb
pop
dec
dec
cmpsl
xchg
icebp
or
call
add
insl
dec
dec
arpl
and
enter
or
xchg
mov
and
xchg
mov
int
inc
rolb
lahf
push
mov
test
clc
jmp
out
add
cltd
popa
add
inc
loopne
add
arpl
pushl
in
sub
es
cld
scas
fprem1
cli
test
dec
mov
repnz
pushf
cmpsl
xchg
jns
test
into
adc
in
pop
mov
ss
shll
dec
ret
outsb
pop
push
fcoms
fbstp
xchg
mul
fnstenv
inc
inc
in
out
movups
or
jae
addr16
outsl
in
in
in
stc
call
cmp
xlat
push
mull
testb
insl
push
cltd
ljmp
cmp
mov
je
jge
das
pop
cmp
pop
dec
lret
fwait
sbb
pop
lods
in
mov
scas
and
les
and
dec
nop
movsb
cmpsb
cmpl
cs
jmp
ljmp
mulb
icebp
mov
inc
add
adc
repnz
or
pop
pop
jmp
mov
rorl
mov
push
daa
xor
push
ja
fistpl
add
jg
jb
fisubrs
push
pop
lods
xchg
and
xchg
inc
lds
jo
jnp
xchg
mov
scas
imul
xchg
loopne
into
sbb
int3
mov
aad
inc
fwait
les
scas
push
mov
dec
loopne
cmp
mov
aaa
jo
popf
xchg
dec
sbb
in
aaa
imul
insb
mov
xchg
mov
push
jp
push
and
push
xlat
aam
cmp
stos
cld
cmp
adc
add
mov
jp
fisttps
sub
xchg
mov
xor
sti
dec
addl
xor
mov
mov
sbb
lods
jle
and
shl
das
bound
cli
fcomps
xchg
lea
xchg
icebp
xchg
femms
scas
mov
movsb
jmp
in
enter
jecxz
push
cld
mov
add
popf
fwait
sbb
rorb
cld
mov
mov
mov
ja
loopne
xchg
lcall
bound
and
out
inc
movsb
mov
stos
rcrl
imul
cwtl
adc
mov
dec
xor
mov
outsb
jp
jnp
sub
push
insl
aaa
das
xor
inc
inc
adc
negb
repz
lea
push
imul
call
add
xchg
mov
subl
cmp
sbb
jecxz
or
loopne
jo
adc
loopne
sbb
or
nop
add
add
aas
loop
andl
adc
syscall
movsl
in
mov
enter
sub
sbb
or
sahf
pop
cmp
sbb
mov
mov
mov
add
adc
mov
push
mov
fwait
ds
jo
lret
mul
or
rorb
daa
mov
push
sub
jecxz
mov
iret
pop
rcr
call
daa
xor
xchg
inc
adc
or
cltd
adc
mov
test
clc
inc
mov
es
insl
imul
je
sub
cmp
aaa
out
lret
movsl
cmp
mov
ret
adc
jmp
inc
test
rcrl
jge
ficomps
arpl
ja
call
mov
mov
je
loope
cmp
out
pop
xor
movsb
andl
fcoml
out
cmp
pushf
loopne
xchg
popf
mov
scas
int
jnp
xor
push
push
pop
pop
push
loop,pn
ja
inc
push
nop
movsb
je
push
jp
gs
rorb
sub
ret
insb
xchg
mov
add
out
mov
mov
or
mov
pandn
dec
push
xor
xchg
and
inc
rol
out
jmp
or
mull
cmp
fisttps
mov
push
or
add
loop
xchg
in
jae
sbb
xlat
mov
or
dec
adc
aad
jecxz
adc
test
mov
adc
into
test
sub
xor
loop
lret
sub
inc
jmp
cli
push
push
xchg
pop
jle
stc
jmp
mov
pop
mull
ljmp
lea
jmp
pushf
ds
jbe
lods
xor
je
int3
not
lds
ret
pusha
mov
int3
clc
sbb
push
pop
movsb
mov
jae
fistpll
fadds
push
incb
stos
dec
lock
ja
cs
stc
xchg
lcall
jp
mov
jae
and
mov
enter
lds
sub
repz
and
pop
jo
push
loope
jmp
ret
hlt
mov
jg
mov
jecxz
hlt
fcoms
fnstsw
int3
popa
add
movsb
xchg
fisubs
sahf
and
mov
hlt
add
rclb
adc
jne
add
fsubrs
dec
mov
cli
fisubl
cmp
aam
movsb
cmp
jo
push
fsubp
test
xor
sbb
lahf
push
shll
les
aas
faddp
xchg
adc
arpl
sbb
jnp
mov
jl
call
stos
sbbb
mov
repz
fsubrl
bound
test
dec
cmpsb
inc
mov
pop
fildl
es
pop
fstpt
xchg
pop
jns
or
cmp
fdivrl
addl
aad
std
sub
aas
pop
ss
or
loop
aas
xorb
in
add
sahf
jecxz
mov
push
push
inc
imul
leave
repnz
xchg
aas
dec
sub
xor
push
xchg
leave
sbb
dec
fsts
icebp
inc
add
jne
int
mov
dec
into
js
ret
add
ja
lcall
xor
scas
pop
fsubp
adc
aad
cmp
mov
aad
sbb
push
xor
out
mov
jno
test
jecxz
int
gs
and
mov
mov
inc
jl
insl
notl
mov
test
add
ljmp
insl
pop
mov
scas
push
inc
push
sbb
movsb
nop
aaa
and
ficompl
add
outsb
cmp
xchg
push
loopne
mov
aaa
and
test
adc
aaa
xor
shlb
cmp
jnp
push
mov
or
stc
mov
shlb
and
dec
or
or
xlat
xchg
mov
add
jg
jne
push
fcomps
lahf
push
mov
push
cwtl
cmp
jp
xor
out
xchg
lods
insb
sub
cmc
or
inc
sbb
jp
or
pop
sbb
mov
push
lcall
enter
add
cli
pop
pop
or
mov
add
jno
movsb
movsl
mov
leave
mov
daa
mov
push
dec
push
sub
and
fildll
push
cs
jbe
jl
lods
and
aaa
inc
inc
or
push
in
ret
mov
repz
mov
pop
pop
fisttps
sub
movsl
or
sub
xor
cmc
mov
inc
aad
loope
inc
push
mov
mov
xor
je
test
sbb
mov
lret
xchg
in
gs
into
idivl
pop
xor
call
xchg
iret
roll
mov
dec
in
mov
add
xchg
inc
dec
or
cmp
lcall
add
xchg
pop
test
dec
add
pushf
gs
loop
add
mov
sub
movsl
out
push
loope
push
xor
cld
sbb
sub
xchg
scas
sbb
or
out
or
fldenv
lahf
ficoml
ss
add
into
mov
pop
and
and
test
mov
movl
dec
fs
cmpl
aaa
in
ljmp
dec
or
jge
repz
push
jmp
xchg
fcoml
mov
imulb
add
add
cld
data16
ss
or
cmp
pushf
push
imul
pop
jbe
fcmovnb
nop
and
and
inc
mov
and
jg
jge
dec
xor
jmp
mov
std
dec
bound
jnp
sub
in
xchg
fisubs
ljmp
dec
into
push
xchg
ja
mov
sbb
lods
mov
hlt
mov
nop
inc
sub
ljmp
test
sub
adc
enter
bound
sub
arpl
or
or
shll
ss
addr16
scas
cwtl
mov
repnz
ds
push
mov
pop
cs
insl
jmp
movsb
mov
fs
scas
or
mov
mov
jb
hlt
and
fisubs
shlb
cld
das
fld
je
popf
fstps
jle
call
mov
insb
push
in
imul
and
mov
divb
div
test
push
inc
sbb
adc
jno
fs
fldcw
aaa
fstl
inc
pop
push
or
pop
adc
mov
xor
enter
dec
xor
lods
dec
and
loopne
xor
lock
pop
jns
imul
dec
xor
andb
test
mov
dec
dec
mov
cs
movsb
fs
popf
arpl
sbb
popf
repz
push
pop
lock
cmpsb
sti
sbb
add
cmp
mov
pusha
ret
lret
daa
push
and
xchg
sbb
bound
xlat
jg
xchg
pop
imul
pextrw
mov
inc
mov
cmp
xchg
cld
cmpsl
stc
jns
mov
stc
mov
mov
xlat
stos
mov
sbb
mov
cs
xchg
fcoml
cld
movsb
icebp
cwtl
xor
lock
leave
xor
in
jb
sar
icebp
add
add
and
int3
cwtl
or
aad
sub
sub
adc
clc
xchg
pop
adc
std
sub
or
adc
xchg
nop
dec
out
add
aam
rcrb
sarl
stc
xchg
cmp
sahf
leave
or
xchg
dec
imull
loopne
test
sbb
cs
add
lock
add
jb
mov
out
push
xchg
xchg
mov
cmp
xchg
cmp
push
ret
outsb
dec
xchg
ja
push
or
inc
inc
pusha
push
shll
mov
repz
xchg
inc
push
sbb
iret
adc
push
stos
xchg
inc
shrb
out
jo
mov
icebp
pop
sub
fsts
push
icebp
ja
daa
ret
push
pop
loop
xchg
xor
or
mov
or
fcoms
pop
add
pop
enter
outsb
decb
scas
nop
cltd
rcll
movsl
jb
push
or
mov
xlat
mov
dec
js
iret
pop
repz
loope
jmp
cli
dec
rorb
xor
decl
dec
popa
loopne
aaa
pop
imul
cmp
stos
les
out
pop
jbe
push
pop
test
push
inc
sahf
in
pop
dec
int
and
gs
lods
and
cltd
or
stos
push
jl
mov
add
aas
pop
lret
add
mov
gs
ja
xor
inc
adc
inc
shlb
les
out
and
mov
icebp
pop
stc
lret
and
enter
push
jecxz
sub
sbb
push
pushf
add
xor
sti
sbb
fiaddl
push
ljmp
mov
mov
jmp
dec
sub
les
mov
xor
adc
insb
hlt
fidivrs
xor
fimull
std
jbe
cmc
lods
into
test
mov
mov
and
xor
sbb
loopne
fnstsw
cmpsb
sbb
popa
loopne
cs
push
lret
movb
popf
jl
push
push
das
sar
jb
sti
mov
idiv
pop
sub
mov
enter
iret
or
dec
mov
in
test
push
mov
lods
popf
lods
jno
es
jp
out
pop
icebp
adc
xchg
aad
aad
push
push
mov
dec
fistl
jb
add
cmp
mov
aad
mov
jge
iret
mov
call
xor
lods
mov
mul
shlb
mov
mov
cld
jnp
mov
cli
sub
sahf
xchg
mov
jns
out
adc
add
and
in
int
jae
push
dec
adc
xchg
inc
sub
pop
or
jo
out
hlt
cmp
hlt
stc
outsb
pusha
fcompl
mov
scas
icebp
je
pop
loope
ret
insb
and
pop
shrb
and
cli
mov
add
fwait
pusha
pop
ficomps
aad
idivb
pop
jg
pusha
fidivrs
cmp
lret
and
ret
test
jne
in
movl
lret
pop
jae
out
mov
fimull
mov
and
sti
call
popf
lahf
outsl
ss
aaa
jge
xor
mov
in
and
pop
pop
add
in
xor
jle
dec
mov
inc
in
pop
xor
cmp
mov
jecxz
sbb
xchg
cs
mov
push
test
inc
mov
int3
xchg
lock
cltd
xor
repnz
fdivs
pop
add
cs
xor
push
adc
in
sub
shl
loop
mov
cmp
and
fcomip
icebp
sbb
mov
mov
push
insb
sub
fs
mov
mov
sub
lret
mov
sbb
adc
lahf
stos
mov
xchg
cmp
les
nop
es
test
cld
jno
bound
pushf
outsl
cld
hlt
shrb
stc
jb
outsl
mov
cld
pop
cltd
pop
mov
cmpsb
xchg
stc
mov
movsl
stc
dec
xchg
jns
jge
mov
imul
data16
ficoms
aad
mov
call
lock
adc
idivl
xor
mov
cmpsl
fcoml
sbb
cli
push
aad
sbb
adc
adc
scas
add
jl
push
sahf
adc
jns
jb
or
dec
fisubs
out
mov
xchg
mov
fwait
adcb
xchg
dec
inc
nop
adc
ja
and
sbb
mov
pop
add
aad
cmpsl
jb
out
fcoml
pop
fcomi
add
rcll
fstps
call
jg
clc
sbb
mov
lods
cmp
push
cmp
cmpsb
xchg
ds
movsl
shll
pop
mov
push
hlt
cs
pop
icebp
sti
fsubrs
or
xchg
pop
dec
clc
insb
xor
bnd
in
mov
dec
addb
mov
and
pop
mov
call
sub
movsb
lcall
imul
les
add
push
test
dec
and
sbb
mov
daa
dec
es
push
int3
or
nop
and
sbbb
sbb
scas
cmc
shlb
fdiv
pusha
int3
rcrb
inc
jg
pop
jbe
data16
push
ja
test
mov
add
inc
cltd
sbb
dec
mov
dec
inc
jmp
push
lret
aam
jbe
lods
fnstenv
out
push
lcall
sbb
outsb
fadds
xchg
adc
sbb
jl
outsb
out
and
addl
imul
popf
imul
leave
mov
into
stos
cltd
or
lcall
mov
xchg
mov
xor
push
roll
sahf
loopne
jnp
leave
mov
daa
testb
test
das
outsb
push
xchg
aad
clc
int3
add
push
cmp
and
mov
ret
cmp
xlat
enter
int
hlt
or
adc
stos
inc
add
push
mov
popf
sub
jae
jns
xchg
cmpsb
outsb
in
aaa
loope
outsb
push
push
cmp
fisttpl
jmp
adc
mov
sub
adc
xor
push
call
xor
or
push
clc
pop
je
hlt
jne
xchg
inc
out
adc
enter
jne
adc
pop
fwait
push
andl
sbb
sbb
popa
out
or
dec
jp
leave
push
imul
cmp
xchg
cmp
sarl
shrb
icebp
fisttpl
jl
lea
das
mov
push
mov
inc
es
shlb
dec
xchg
add
into
or
sub
adc
cmpsb
leave
pusha
cli
push
cmp
stos
and
ret
sub
mov
add
ret
ficoms
loope
fidivs
je
mov
lds
or
test
pop
fnstenv
mov
sub
ds
xchg
jecxz
jo
push
and
add
arpl
data16
xchg
xchg
mov
dec
cmp
addr16
mov
das
mov
xchg
neg
in
test
popf
inc
popa
add
adc
adc
nop
ret
pop
int3
lcall
js
jno,pn
pusha
push
push
shrl
jle
arpl
je
jne
or
out
and
and
add
shlb
xchg
mov
lods
stc
push
insl
pop
pop
pop
popf
or
test
or
sarb
fbstp
clc
jl
pop
fildl
jge
mov
ja
mov
and
inc
jbe
xchg
das
out
ds
cmpb
push
or
pop
shr
fcomp
imull
cld
or
jae
daa
mov
ss
xor
add
sub
aas
or
mov
movl
gs
js
inc
add
xor
nop
dec
iret
out
bound
lret
lods
inc
xchg
clc
stc
pop
fs
les
subl
sahf
inc
rol
pop
mov
xchg
inc
pop
pop
imul
push
sti
es
mov
mov
js
xchg
cmp
popa
dec
xchg
lret
ret
mov
add
loop
fs
add
sub
stos
movb
shrl
mov
stos
jl
mov
cmp
inc
dec
jl
xlat
sarl
xor
and
push
cmpsb
ret
mov
lret
or
jl
mov
jle
orb
jge
ficomps
aam
adcl
xchg
push
xchg
lods
ds
mov
mov
or
stos
push
adc
add
cmp
lret
lret
dec
loop
add
and
and
lds
or
inc
xorb
sbb
push
imul
bound
pop
cltd
rorl
imulb
mov
cmp
fsts
pop
inc
jnp
xor
push
in
insl
xchg
jmp
adc
sub
mov
clc
sub
stc
in
sti
negb
mov
andl
popf
vcvttps2dq
mov
dec
mov
xchg
int3
lods
jno
cmp
push
mov
clc
insl
push
xor
mov
mov
mov
es
test
sbb
jae
gs
push
mov
bnd
out
inc
pop
cwtl
sbb
orb
cmpsl
adc
xlat
out
test
push
ss
cmp
insb
or
aam
fldcw
in
adc
je
push
add
and
vdivpd
dec
mov
cmp
repz
xor
mov
jge
sub
jp
pop
and
xchg
jecxz
sub
mov
int
repz
sub
xor
test
cmp
hlt
ja
mov
pop
inc
bound
stc
jge
xor
test
pop
ja
out
or
and
push
stc
repz
mov
xor
mov
and
xor
pusha
outsb
test
ss
stc
fldcw
add
pop
mov
sbb
in
movsb
scas
int
test
adc
enter
xchg
sub
pop
fdivp
mov
loop
arpl
out
divb
pop
push
mov
fsts
mov
movsl
pop
jg
cmp
sub
mov
popf
sub
fsubr
mov
add
mov
pusha
rorb
adc
xchg
cs
jge
out
inc
das
mov
mov
mov
jno
daa
pop
loope
loopne
adc
xor
aas
insb
loopne
add
jnp
bound
lock
add
fidivrl
and
int
icebp
mov
xchg
pop
sbb
jp
mov
in
popf
in
dec
fxtract
fdivp
sub
idivl
pop
sbb
add
cmpsl
xchg
dec
inc
and
jmp
add
cltd
fisttps
xor
or
mov
inc
mov
inc
es
sti
mov
pop
cli
or
sbb
test
mov
fstps
push
cmp
jns
xlat
decb
and
xor
loop
fisubl
in
sub
out
jbe
xor
jmp
leave
lods
sub
ror
xlat
pop
sbb
push
popa
push
push
imul
arpl
jne
add
push
mov
jno
dec
jne
adc
sub
sahf
test
test
aaa
sbb
movsl
sub
ja
in
test
addb
jno
repnz
cmp
fists
push
sub
xor
nop
enter
popf
je
sub
repnz
fisttps
out
sbb
test
pusha
aam
sub
add
lea
mov
outsb
ja
out
fcoml
dec
jg
push
aaa
gs
test
mov
jle
popa
mov
xchg
xor
loope
pop
outsl
mov
mov
mov
das
xchg
cmpps
daa
mov
rcr
jg
jno
or
push
lods
push
aas
dec
outsl
jne
pop
sbb
out
data16
jge
incb
mov
adc
inc
jbe
adc
xchg
sti
inc
pop
andb
jp
fisubrs
scas
mov
dec
mov
dec
mov
add
fistps
ffreep
daa
outsl
insb
jg
aad
imul
adc
add
in
jbe
pop
lods
jmp
jo
adc
das
in
sub
hlt
inc
sub
imul
lret
or
insb
mov
iret
ret
jmp
push
lret
sahf
and
cmpsl
push
shll
cmpsl
mov
lahf
xchg
jb
or
push
inc
je
ja
fwait
jecxz
jno
inc
aaa
mov
push
push
cmpsb
pop
cmp
fsubl
add
out
fsubrp
push
cmp
inc
and
bound
mov
sbb
flds
sti
push
adc
sbb
arpl
mov
js
mov
mov
repz
sbb
loop
addb
lods
rolb
dec
lock
shlb
nop
add
es
mov
xchg
cmc
add
mov
lock
rep
sbb
test
sarb
cltd
mov
lock
cmp
add
and
xor
cmpsl
rorl
push
mov
or
mov
mov
inc
mov
xor
sbb
and
mov
es
lcall
mulb
repz
out
pop
sti
int
xchg
lds
sbb
inc
fs
mov
sti
lods
cmc
pop
out
outsb
adcb
push
mov
push
and
int
sub
int
test
gs
push
push
add
pop
push
push
mov
daa
ret
cmp
pop
xor
mov
flds
pop
xchg
jp
aas
cli
ss
pop
add
push
loopne
lahf
jp
add
ja
adc
or
cmp
ror
sbb
sbb
sub
adc
add
mov
loop
adc
pop
out
push
mov
push
xor
js
in
enter
inc
pop
lahf
gs
xor
dec
pop
cmp
fdivr
jnp
das
test
je
lods
xlat
fs
and
sub
mov
pop
sub
jae
mov
mov
mov
inc
fldl
or
dec
enter
push
adc
or
cmp
inc
mov
out
add
in
dec
pushf
fisttpl
shlb
dec
xchg
sbb
out
cmpsl
hlt
ret
scas
lret
inc
out
rcll
inc
in
add
insl
out
outsb
sub
cli
adc
fcmovnbe
mov
xor
dec
dec
mov
add
divl
jae
in
orl
cltd
dec
iret
scas
or
jle
xchg
adc
int
out
stos
dec
mov
xor
dec
cmp
or
and
std
mov
clc
jge
fs
cmp
das
jnp
mov
aaa
jmp
mov
xor
jne
shrb
int3
or
sub
mov
add
stc
push
mov
rorb
fsubrl
jle
push
loope
pop
repz
jmp
mov
das
pop
mov
pop
aad
adcb
lock
out
outsl
or
jb,pt
scas
xchg
mov
cmp
xchg
iret
movb
into
das
movl
lds
xor
cmp
sti
add
fistpll
cli
outsb
xchg
xor
mov
sti
pusha
aaa
out
fdivs
daa
add
add
and
mov
jecxz
cmp
jl
in
outsb
sub
cs
mov
cmp
cbtw
fcoms
insb
icebp
mov
jmp
ljmp
push
inc
xchg
dec
test
mov
jecxz
mov
and
shll
jns
fsubrs
stos
xchg
mov
loope
xor
push
cltd
jmp
and
call
xor
out
xor
jg
sub
sbb
out
les
std
or
shrl
iret
cmp
cltd
mov
add
mov
dec
adc
xchg
cmp
nop
pop
outsl
cltd
pop
retw
mov
lret
jl
lahf
insb
add
jae
add
or
hlt
inc
into
imul
fildl
inc
les
inc
gs
mov
jbe
cltd
jecxz
cltd
dec
mov
lds
mov
mov
sub
push
sarb
dec
negb
xor
dec
pop
push
les
jne
jnp
mov
ja
fisttps
and
lcall
int
add
sbb
sbb
addr16
mov
dec
xchg
push
dec
orb
mov
orb
and
sub
adc
rcrl
jne
lahf
ss
js
xor
out
mov
pop
pop
mov
sub
and
cwtl
inc
addr16
pop
mov
jp
push
data16
in
add
cmp
fbstp
cmpxchg
fucompp
cmp
mov
jns
insb
or
push
dec
or
or
mov
xchg
cmp
aaa
loopne
push
std
fsubl
adc
dec
repnz
out
lds
jmp
dec
stos
je
lret
or
inc
jl
xchg
sub
imul
js
xchg
rorl
pop
push
mov
mov
adc
xchg
cmp
out
push
pop
inc
bound
stos
insb
stc
outsl
xorl
or
popa
fdivr
fwait
ja
or
add
fldl
jmp
cmp
js
mov
cmp
xchg
pusha
popf
push
iret
imul
and
jne
push
js
fcoms
addr16
test
mov
xchg
push
stos
mov
sahf
stc
fsubrs
pop
xor
push
xchg
addr16
or
loop
repz
lock
and
inc
in
ret
test
dec
cmp
inc
imul
inc
lods
xchg
mov
fcomip
icebp
lea
hlt
lea
out
xor
mov
repnz
dec
int3
cli
cmp
iret
stos
and
cmpps
pop
fnstcw
cmp
push
sub
xor
mov
shrl
pop
xchg
mov
icebp
scas
mov
ret
mov
adc
in
or
push
jp,pn
or
ret
pop
ret
jae
loop
arpl
mov
nop
xchg
movsl
shl
dec
sbb
iret
enter
mov
cmp
repz
push
call
roll
popa
jle
dec
pop
scas
les
lock
sub
addl
jecxz
mov
cwtl
mov
inc
int
stos
sarb
mov
addr16
add
cli
emms
enter
enter
stos
lcall
cmp
lods
lret
rcrl
faddl
mov
iret
ja
cmp
or
pop
jae
mov
leave
outsb
stc
inc
nop
fs
je
cli
and
inc
jmp
sti
sbb
daa
mov
fld
shr
lea
sub
push
jge
inc
cmp
jl
mov
push
jmp
sub
or
fldt
pop
or
sub
aad
xchg
cmpsl
jb
mov
sub
addr16
ret
adc
push
test
xchg
ret
out
fisttpll
cli
sbb
rcrb
add
ret
xchg
cwtl
mov
and
sbb
cmp
mov
mov
mov
or
lret
push
mov
or
pop
add
pop
mov
dec
jmp
xchg
leave
ljmp
enter
ds
icebp
enter
mov
xor
out
in
inc
ret
inc
imulb
pushl
jnp
orb
sub
andb
push
adc
jecxz
popa
sti
inc
mov
ret
mov
add
shll
lcall
ds
stos
pop
test
test
lock
leave
inc
mov
fs
scas
dec
sbb
out
lcall
xchg
jno
ret
xchg
lods
adc
xor
mov
out
sub
sub
insl
pop
je
popf
push
inc
scas
loope
sbbl
push
leave
cmp
push
cmp
push
test
xor
aas
adc
das
mov
test
push
push
cmpl
fcmovne
hlt
shrl
dec
mov
adc
arpl
push
xor
cmp
pop
fldcw
jne
div
jmp
sbb
sub
in
inc
xchg
popf
fidivl
and
pop
push
cmp
adc
jmp
dec
xor
or
mov
inc
xor
ds
adc
push
dec
imul
pop
fcmovb
adc
push
jne
into
pushf
add
pusha
test
aaa
test
in
pop
inc
insb
and
xchg
int3
loop
add
idivl
dec
xor
mov
xor
mov
imul
xchg
sbb
add
shll
inc
loope
jno
mov
pushf
in
xchg
fwait
test
ror
popf
cmp
test
cmpsb
lea
sbb
jp
fidivl
push
enter
push
out
lock
sub
pop
fcmovnbe
pop
adc
jecxz
sahf
inc
cltd
mov
jbe
sub
jbe
add
inc
cmp
adc
pop
xor
not
and
pop
add
xchg
dec
sahf
mov
ds
cmp
adc
mov
pop
and
xchg
mov
adc
cmpsl
jno
sbb
rorl
inc
call
fldt
dec
fcmove
out
cwtl
xchg
inc
push
stc
shr
push
test
cmp
gs
cmc
jle
adc
aaa
loope
push
mov
sarb
jp
sub
dec
aaa
std
dec
es
mov
addb
jb
mov
mov
mov
jo
push
scas
sub
hlt
sub
leave
aas
stos
mov
xor
and
adc
xor
gs
cmp
inc
fsubrs
adc
js
mov
fisttps
fdivrs
sub
xor
loopne
daa
movsb
cmc
testl
push
mov
out
and
mov
add
les
xchg
out
pop
sbb
jecxz
push
out
int3
xor
lret
mov
push
roll
cmpsl
push
inc
push
inc
xchg
repnz
mov
add
popa
sub
dec
add
hlt
mov
mov
mov
mul
xchg
cli
pop
jb
fwait
inc
cmp
adc
mov
pop
mov
inc
stos
sbb
xchg
insl
ss
mov
es
ljmp
cld
in
lods
test
mov
shlb
nop
add
fld
cltd
or
cli
push
add
xor
loopne
mov
repnz
mov
cmc
outsb
or
mov
std
xlat
pop
fiaddl
scas
push
hlt
jge
addl
adc
jl
add
les
fwait
add
or
sub
pop
xchg
adc
popf
fadds
imul
xor
xor
jl
enter
test
sub
xchg
jecxz
lret
xchg
sbb
jge
lret
sbb
mov
je
out
leave
mov
dec
es
stos
mov
les
mov
mov
xchg
cmp
add
imul
repz
push
stos
mov
stos
lahf
scas
push
movsb
sub
push
xchg
mov
xlat
lds
pop
xor
inc
mov
cmpsl
leave
push
int
rcrl
and
cmpsl
pavgw
aas
push
fsts
add
aad
addr16
dec
push
mov
cld
shrl
push
nop
cs
pop
bound
aas
fistps
pop
mov
scas
lcall
pop
out
cmp
pop
rcrl
lods
lret
xor
test
sbb
xchg
adc
test
leave
and
and
and
mov
adc
xchg
out
mov
pop
or
cwtl
fidivrs
mov
cmp
push
int
lret
scas
sub
adc
xchg
inc
jle
test
js
adc
mov
add
pop
push
push
arpl
popa
in
int3
leave
insb
cmp
push
xchg
xor
jecxz
add
pop
ret
ljmp
pop
mov
and
les
or
sbb
push
stc
insl
repnz
test
cmp
and
xchg
ss
cmp
push
sub
fwait
mov
pusha
scas
call
adc
push
js
pusha
gs
mov
jne
xor
in
test
pop
sub
jbe
or
lods
stc
jb
push
hlt
push
cmp
fisubl
clc
popa
leave
in
jne
xchg
out
aas
pop
mov
jl
subb
mov
sbb
cmpsl
ret
pusha
leave
dec
vrsqrtps
aas
or
cmp
xchg
dec
es
sbbl
out
or
std
hlt
or
mov
push
ret
inc
nop
fneni(8087
das
xor
xchg
jne
mov
jle
dec
fwait
scas
imul
xbegin
cli
jecxz
dec
aad
ja
sbb
mov
push
jp
addr16
dec
addb
clc
rcrb
ljmp
aad
negb
add
xchg
cwtl
mov
or
lods
mov
dec
cltd
xlat
out
nop
iret
mov
mov
sahf
sbb
sbb
stos
arpl
sub
push
nop
cld
sbb
jle
dec
into
outsb
cmp
sub
mov
dec
push
movsb
mov
push
stc
icebp
adc
pop
int
sub
flds
cmpsl
sbb
xor
lcall
dec
mulb
xchg
or
lock
sub
int3
shlb
add
outsb
mov
repnz
mov
mov
mov
jnp
push
es
mov
adc
push
mov
adc
out
push
inc
add
mov
adc
xor
xor
fsubs
jecxz
into
ja
mov
aad
ret
xchg
adc
lahf
test
cli
or
loop
jno
sbb
cmpsb
push
mov
std
push
push
ljmp
cld
icebp
shr
xor
scas
mov
push
mov
inc
popf
mov
rcll
xchg
sbb
cli
mov
pushf
loop
cltd
sub
mov
jg
mov
mov
xchg
jno
sbb
fsubs
mov
out
adc
add
adc
enter
rorb
jmp
aaa
cs
push
lahf
sbbb
jecxz
or
jbe
daa
inc
inc
sbb
lcall
adc
sub
loop
fwait
ljmp
enter
xor
push
outsb
or
and
push
fucom
xor
pop
leave
shll
fstpt
and
daa
sbb
loop
push
fisttps
ss
jge
or
fstp
or
cmp
sbb
add
sub
loopne
mov
lcall
xorb
loop
jo
xchg
leave
loope
adc
je
inc
loop
into
sarb
jp
add
adc
push
sbb
pop
jb
orl
xlat
xchg
lret
adcl
jo
out
inc
sub
inc
jge
mov
data16
or
xchg
lahf
scas
sbb
arpl
int3
into
js
cli
scas
in
je
lock
jae
incb
push
daa
call
loopne
push
adc
lock
push
sahf
cmpsl
xor
call
sub
lock
inc
mov
dec
cmp
rcl
adc
cmp
xor
jmp
dec
sbb
pusha
int3
bound
or
shrb
imul
nop
fisttpl
fisttpl
jno
loope
ret
add
popa
int
dec
cs
jge
pop
jl
fldcw
lds
mov
and
inc
jle
pop
sbb
xor
jmp
mov
loope
mov
int
lds
pop
pushf
mov
inc
mov
sbb
shll
mov
rorb
jbe
jecxz
push
jb
push
and
leave
daa
mov
mov
push
ljmp
and
pop
sub
scas
push
sarb
ss
jecxz
sub
jbe
cs
mov
xchg
jmp
and
inc
push
in
mov
sub
fildl
data16
pop
push
push
dec
loopne
dec
sub
push
es
dec
jno
dec
icebp
inc
add
xor
xchg
and
jl
and
xchg
cmp
xchg
jl
jmp
test
mov
xor
int3
rcr
cmp
fcoml
test
into
cs
lea
pop
adc
push
inc
dec
adc
sbb
sub
in
rcrl
sub
dec
add
in
lahf
push
jl
sbb
jg
je
adc
mov
pop
push
pop
adc
les
pop
call
add
jbe
mov
fdivrs
int
push
fucomi
out
cmpsb
sti
aaa
je
add
dec
ss
cmc
push
xchg
andb
jae
scas
imul
test
jp
stos
cmc
test
repnz
adc
loop,pt
sbb
std
test
inc
mov
xor
cmp
psllq
loop
fldl
dec
add
mov
jmp
push
inc
data16
gs
or
sub
xor
scas
inc
jns
add
in
sbb
dec
shlb
shlb
dec
icebp
bound
dec
cld
and
push
inc
rcl
mov
dec
push
stos
dec
hlt
fldcw
jp
sub
push
jg
lods
clc
adc
stc
leave
in
or
shlb
inc
push
lods
pop
lods
cmp
test
adc
dec
iret
loope
dec
jp
fstl
js
aad
scas
mov
aam
das
inc
lea
call
aam
out
add
xor
pop
enter
xchg
dec
incl
pop
jmp
pop
add
mov
or
in
or
xor
xchg
addl
mov
nop
jmp
nop
cwtl
into
mov
sbb
fsubr
pop
pop
xor
lahf
mov
xor
out
jne
minps
inc
mov
syscall
sub
pop
cld
nop
es
fs
sub
pop
shr
xor
sti
or
lcall
push
mov
dec
xchg
mov
sahf
scas
jno
push
dec
movsb
xor
pop
js
leave
pop
pushf
sbb
jns
lea
jb
push
add
jnp
sbb
add
dec
mov
push
int3
cmc
cmpb
jg
add
sbb
sub
pusha
popf
std
mov
inc
add
es
inc
mov
out
fldl
mov
sub
loopne
lds
dec
in
inc
out
stos
sbb
nop
mov
andl
imul
pop
mov
pop
sbb
sti
xchg
pop
inc
or
jmp
loope
repnz
xchg
ljmp
cld
roll
jmp
dec
inc
pop
mov
jmp
pushf
inc
ja
test
jne
xor
popa
testl
push
repz
outsl
jecxz
js
adc
dec
inc
pop
add
pop
or
imul
mov
ret
int3
scas
cld
gs
xlat
scas
push
sub
dec
adc
and
pop
nop
jne
and
fadd
adc
mov
sbb
roll
scas
jae
xor
sub
and
popa
fucomi
cmp
adc
or
jle
lret
add
les
cmpsl
loopne
mov
icebp
arpl
sbb
loope
enter
pop
sub
sub
xchg
sahf
inc
aaa
xchg
ret
imul
imul
sbb
inc
es
xchg
xchg
mov
lock
fisttps
push
or
mov
call
or
adc
push
dec
les
les
mov
adc
leave
add
mov
sub
mov
orb
mov
push
repnz
cli
into
jge
inc
mov
jl
or
dec
xor
jno
ja
push
pop
mov
das
push
rcll
mov
aas
push
fstps
fcompl
dec
pop
xchg
push
or
push
xor
dec
dec
mov
fiaddl
out
das
fbstp
inc
insb
xor
dec
sbb
mov
xchg
push
dec
or
mull
imul
push
or
sbbb
lret
or
dec
cltd
and
lock
lret
sbb
imul
icebp
dec
pop
push
pop
mov
mov
mov
jg
shr
cmp
out
scas
rolb
mov
pop
std
adc
mov
repnz
fmulp
je
mov
std
add
scas
push
xchg
jno
leave
daa
lahf
daa
jl
xchg
dec
xor
outsb
int3
add
mov
cmp
js
inc
mov
push
or
lea
add
pop
jo
mov
mov
dec
push
fldcw
out
push
jl
sbb
cmpsb
popf
subb
pop
inc
jp
or
jae
mov
mov
cmc
sarl
ret
mov
jle
xrstor
jns
shll
leave
andb
sub
cmc
sti
xchg
sub
popf
rorb
inc
adc
loop
mov
xor
call
mov
xor
xchg
fs
je
pop
cmp
mov
out
outsl
mov
or
inc
cwtl
and
sbb
push
pusha
lods
cmpsl
test
out
test
mov
nop
push
xor
inc
cld
js
fidivl
aas
cmc
shrl
jae
lods
sub
xchg
cmp
lahf
jno
mov
cmp
loopne
lock
stos
int3
movsb
push
jp
push
mov
insb
inc
jg
sti
movsb
nop
mov
daa
fsubrs
xor
sbb
int3
mov
movsl
sbb
pop
dec
aad
int3
insb
xor
rep
pop
push
ja
pop
decb
out
arpl
jmp
inc
mov
imul
movaps
xor
mov
push
sub
subl
sarb
mov
int3
mov
dec
or
push
inc
push
repnz
or
test
cmp
imul
stc
inc
mov
xor
adc
xchg
in
xchg
dec
push
dec
test
inc
xchg
outsb
add
sbb
lods
lcall
jg
cwtl
mov
int3
mov
mov
or
cmp
test
sbb
push
pop
push
neg
inc
in
or
and
jbe
pop
outsb
mov
push
aaa
jmp
enter
cwtl
mov
pop
push
xchg
adc
adc
aam
cmp
mov
test
push
and
inc
stos
aam
mov
movsb
popf
jae
sbb
test
push
scas
pcmpgtb
cmp
xor
and
push
mov
mov
push
push
adc
je
inc
rcr
cmp
push
jmp
jmp
or
out
or
dec
test
xchg
jp
rcl
pop
movsl
out
int3
mov
lcall
sbb
cld
in
nop
lret
cmpsl
outsl
enter
sbb
xchg
xor
insb
push
push
jae
jb
inc
add
scas
stos
xchg
jecxz
data16
push
push
iret
jmp
and
xchg
cmpl
sub
inc
subl
inc
addr16
mov
pop
or
cli
mov
imul
sub
sbb
xor
pop
or
mov
adcb
dec
xchg
int
repz
movsl
xor
or
jle
aaa
dec
sahf
mov
es
int3
xor
push
mov
lret
std
imul
and
or
stc
fiaddl
out
ficoms
jl
cli
subl
dec
movsb
ficoms
ret
cltd
pushf
lods
jmp
xor
sub
mov
imul
test
push
jmp
push
add
mov
mov
jb
stos
ja
add
add
rorl
addr16
out
xor
xlat
or
mov
in
push
inc
pop
jnp
ret
scas
rorl
cmp
sbb
out
shl
mov
xlat
rclb
mov
jecxz
inc
cli
jne
adcb
cmpsl
shlb
movsb
jb
mov
fwait
jns
mov
out
push
enter
ljmp
inc
sub
xlat
xadd
jo
lods
ja
fisubrl
sub
pop
shld
pop
jb
scas
inc
pop
inc
das
fisttps
repnz
ffree
jge
and
jle
jp
pop
rclb
cld
or
jnp
sbb
stos
xor
hlt
and
imul
pshufw
nop
jae
xchg
imul
setg
imul
pop
mov
cmp
out
or
cli
xchg
push
mov
adc
repnz
movsl
sbb
adcl
sbb
sub
lcall
scas
mov
jmp
test
fildl
popf
gs
loope
fcomps
ret
dec
fidivs
sbb
mov
shrb
ss
jmp
xchg
loope
push
sub
mov
ret
mov
test
cmp
sbb
lods
pop
jl
mov
mov
lcall
mov
jae
push
pop
or
dec
gs
add
lock
add
sbb
jns
std
rcrl
or
mov
dec
aaa
std
mov
fadd
in
adc
pop
std
sti
dec
clc
aad
jo
addr16
shlb
mov
imul
std
iret
scas
add
push
pop
add
dec
jmp
sbb
popa
and
std
mov
push
aad
cs
out
sub
push
push
daa
and
fiadds
mov
scas
adc
fs
les
enter
xor
jl
add
adc
cli
mov
in
pushl
ds
ja
rcrl
mov
mov
pop
das
out
and
pop
pop
fldenv
in
cwtl
pusha
loopne
cmp
add
xchg
jg
mov
push
cmp
jp
or
into
adc
mov
mov
cmp
or
daa
repz
mov
jecxz
pop
into
inc
push
mov
test
enter
mov
xchg
imull
jne
sub
xlat
jmp
jnp
push
mov
jno
std
xor
pop
leave
adc
mov
cmc
shll
dec
pop
add
lret
mov
sbb
js
add
in
mov
shrb
push
mov
lods
out
dec
les
xor
icebp
sub
lea
mov
jmp
repz
and
mov
cmp
outsl
jnp
adc
push
rclb
mov
jg
lahf
aas
fnstsw
push
in
jecxz
add
daa
arpl
fdivrp
loop,pt
adc
nopl
lret
data16
adc
cmp
xchg
sahf
mov
and
sbb
stc
or
dec
in
ret
aad
sub
hlt
push
xor
std
xchg
fwait
push
cmp
pushf
xor
mov
inc
or
add
inc
lahf
adc
dec
add
cld
push
int
and
aas
mov
cmpsl
xchg
cmp
es
push
xchg
ret
arpl
cmpsl
arpl
mov
xchg
pop
popf
pop
fbld
jge
push
cmp
std
scas
in
loopne
mov
test
jmp
or
pusha
inc
inc
cwtl
mov
fldt
inc
adc
mov
fmul
lock
popf
int3
rorl
xor
daa
mov
xchg
fmul
notb
mov
dec
adc
mov
fistpl
aas
int
add
rcl
push
cmp
in
add
cld
cmp
incl
inc
mov
mov
js
or
or
mov
popa
mov
int
sar
fstl
fcompl
push
add
cmpsb
xchg
fidivl
cltd
insl
mov
aad
in
xor
xor
jbe
aad
pop
pop
sti
pop
icebp
push
pop
in
sbb
add
enter
mov
test
jmp
imul
cmc
filds
fbld
les
push
addr16
int3
outsb
lea
add
loopne
jp
xor
adc
dec
mov
adc
add
dec
and
aam
inc
dec
mov
pop
xlat
mov
pushf
dec
xchg
add
imul
mov
jg
and
inc
push
pop
cmp
inc
cmpsb
and
stos
jl
push
xchg
les
adcl
xor
dec
xor
add
jns
repz
sti
fwait
dec
jecxz
ds
sub
cli
rcl
mov
mov
movl
xchg
iret
fdivl
cmp
mov
ss
mov
ret
add
or
test
fcoms
into
add
mov
jle
orl
xchg
cmp
sub
std
imul
or
out
sbb
movsb
repz
inc
pop
xlat
dec
inc
push
in
sbb
repnz
lods
xchg
add
mov
ja
dec
faddl
pop
push
xlat
sub
lcall
cmp
ffree
int
xchg
dec
push
call
cmc
jmp
xchg
subb
push
fdivl
ficoms
ds
les
test
dec
inc
pop
push
or
xchg
jb
shr
cmp
fisubrs
ljmp
aad
mov
inc
fwait
jle
aam
pop
jnp
scas
out
outsl
in
and
or
loopne
rcrb
jg
arpl
outsb
dec
stos
daa
jl
mov
nop
lcall
xorl
xchg
add
cmp
xor
addr16
cli
cmp
dec
in
xor
sub
dec
fwait
imul
mov
data16
mov
les
inc
in
int3
mov
add
mov
cmp
shl
push
pop
jp
push
addl
add
test
mov
scas
dec
mov
in
clc
movsb
inc
testl
jb
and
clc
jb
inc
sarb
mov
cmp
push
mov
lea
imul
das
bound
xchg
fs
add
xor
scas
popa
leave
sbb
mov
mov
mov
popa
out
stos
push
xchg
daa
daa
xor
pop
jnp
push
stc
out
mov
cwtl
sub
cwtl
jmp
and
test
neg
fidivl
pop
aaa
xor
push
xlat
clc
insb
mov
pop
into
hlt
leave
gs
sub
repz
aaa
fadds
pushf
in
xchg
std
test
mov
fildll
sub
lahf
xchg
sub
or
dec
mov
orl
scas
sbb
sbb
cli
dec
pop
lods
enter
imul
xchg
sti
sub
test
pop
jb
adc
and
mov
aas
dec
sub
push
jbe
lret
xchg
es
inc
jae
insb
or
call
add
shr
sbb
sub
outsb
adc
imul
cmp
xchg
pop
daa
out
in
cmc
dec
repnz
adc
mov
jno
idivb
inc
arpl
mov
mov
loop
es
dec
iret
jg
imul
shrb
xor
dec
movd
push
sub
jecxz
jle
scas
int3
mov
fistl
sub
mov
xchg
mov
in
std
outsb
push
das
enter
lsl
out
out
inc
loope
shlb
out
lahf
aas
push
mov
cwtl
push
adc
enter
fsub
sub
outsb
subb
fmuls
mov
sub
or
lea
xor
sub
xor
loopne
notl
pop
movsl
add
xor
fsubrl
out
pop
mov
pop
cltd
repz
dec
jecxz
xor
popf
cmp
pop
or
lock
cmp
stos
dec
nop
rcrb
mov
into
aam
negl
push
popf
push
test
scas
pop
mov
cmp
stos
aaa
inc
adc
scas
mov
ja
iret
push
or
mov
imul
or
and
test
sbb
into
push
and
xor
lret
sbb
mov
outsl
loope
mov
sbb
push
and
mov
cmp
adc
inc
mov
jno
mov
adc
pushf
subl
inc
outsl
jns
bound
imul
push
je
insl
into
xor
imul
lods
fisttpl
mov
inc
dec
sub
jecxz
lea
loope
test
mov
push
push
add
pop
mov
movsb
fldenv
test
pop
xor
xchg
clc
outsb
xchg
nop
cmp
arpl
fwait
xchg
movb
push
cmp
mov
jne
fcoms
outsl
xchg
sub
ja
in
or
inc
loope
cmc
insb
repz
push
fcompl
orl
push
adc
popf
fwait
mov
cmpl
out
xchg
rcrb
mov
jecxz
inc
aas
test
push
rorb
xor
xchg
mov
add
mov
addr16
jno
mov
imul
in
std
loop
jle
mov
cmp
adc
sar
subl
icebp
cld
jb
or
and
mov
add
mov
and
mov
mov
and
dec
sbb
add
lods
aad
fwait
jae
pop
and
xchg
mov
arpl
mov
mov
les
sarl
jecxz
lret
fmuls
adc
or
ficompl
fldenv
push
or
sub
xor
cmp
mov
in
pop
outsb
out
nop
pop
imul
xor
dec
push
sbb
addr16
or
ret
inc
mov
enter
xor
adc
jmp
dec
out
add
jnp
fisttpll
mov
jo
xchg
jne
in
and
or
stos
js
test
xor
ret
push
in
aaa
dec
mov
dec
sub
jmp
dec
mov
out
xchg
xor
je
lea
xor
jb
add
sub
push
cmc
int3
das
fnsave
pmaxub
fisubl
fadds
inc
incb
jo
jbe
pop
push
int
addr16
imul
outsb
sub
test
pop
push
push
pop
daa
sub
roll
inc
cmpsb
loope
sbb
pushf
mov
into
add
pop
sbb
xor
mov
inc
add
fdivrs
sub
dec
dec
aam
inc
scas
cmp
sbb
push
notb
jae
mov
sbb
and
stos
mov
lret
xor
sbb
jecxz
sub
sahf
mov
fstl
ja
shlb
xor
jl
gs
repnz
gs
je
fstl
and
ljmp
std
addl
and
shr
jne
mov
xchg
repz
xor
test
ljmp
jecxz
jmp
add
neg
arpl
xor
cmp
jae
cmp
aam
neg
push
andl
jp
data16
inc
jp
inc
mov
xor
inc
aas
mov
ud2
lret
imul
fld
mov
sub
mov
in
mov
lods
pop
movsl
fildll
scas
inc
mov
int
or
cltd
xor
popf
cwtl
nop
cmp
jne
cmp
jmp
xchg
fwait
mov
insl
sahf
lock
lods
addl
outsb
dec
in
js
dec
es
mov
js
pop
fldt
rorl
in
mov
gs
push
jne
and
mov
sub
test
jbe
pop
stos
inc
dec
mov
mov
lret
push
loope
adc
rolb
clc
les
lods
mov
out
shll
sub
sub
sbb
negb
ret
lahf
pusha
pop
int
das
xchg
xlat
pop
pop
jne
pop
or
jl
jne
xchg
jecxz
aas
cwtl
pop
jbe
pop
scas
cmp
ja
mov
in
jp
fcmovnb
mov
mov
repz
push
sti
outsl
mov
addr16
int3
cmpsb
aam
xor
shrb
sbb
adc
mov
sub
es
ds
shll
inc
lret
xor
stc
add
cwtl
stc
and
push
dec
xlat
cwtl
xchg
test
push
jae
push
pop
adc
push
imul
pop
jb
cmp
mov
jge
mov
je
jb
jno
adc
fmulp
pop
push
pop
sti
cmp
imul
fnsave
jbe
sbb
xor
inc
push
xlat
jnp
sbb
stos
jecxz
sbb
sbb
cwtl
xlat
sbb
pop
mov
test
enter
imul
jne
sbb
cmp
sub
stos
xchg
cld
in
icebp
mov
mov
adc
aad
mov
lock
add
push
in
jb
loop
inc
out
inc
xchg
sahf
lods
xchg
ficomps
sub
repz
movsb
adc
sub
xlat
xchg
inc
sbb
in
out
lods
cmp
rcrl
inc
mov
push
mov
decl
fildll
and
clc
xchg
and
popa
xchg
aam
xchg
les
sub
xchg
mov
pop
fs
rolb
js
pusha
std
loopne
hlt
and
sub
inc
jns
dec
lahf
add
sbb
aas
loop
add
test
push
push
mov
arpl
sti
adc
cmp
sbb
jge
test
add
std
xor
dec
insb
add
loop
jno
sub
sbb
mov
cmp
xchg
int
daa
call
jge
mov
jb
fxch
arpl
ljmp
jae
add
shrl
lods
sbb
movsb
mov
and
inc
or
cmpb
dec
daa
test
mov
jg
adc
cli
lret
push
out
dec
jg
test
leave
fisttpl
adc
push
dec
add
fstl
fsubp
fistps
mov
ret
or
lods
scas
nop
pop
mov
add
lcall
ja
test
pop
jge
jno
push
aaa
scas
add
lcall
movsl
inc
jb
fsubrl
mov
leave
pop
or
fld1
pop
jns
and
sub
xlat
test
pop
xchg
popf
mov
in
movsb
or
shrb
or
adc
inc
dec
adc
pop
lods
aad
lds
lods
fnsetpm(287
out
mov
adc
mov
sub
mov
test
mov
add
lahf
or
fstps
decb
sbb
mov
xchg
inc
sarl
adc
xchg
mov
jmp
idiv
dec
test
lea
inc
xor
aaa
inc
cmc
les
add
mov
iret
icebp
imul
int
mov
mov
clc
movsl
js
leave
int3
inc
sub
insl
xchg
inc
outsb
outsl
movsb
fisubrs
jg
xchg
popa
and
push
mov
push
adc
daa
popf
stos
mov
lea
push
push
push
arpl
jmp
bound
pop
js
adc
repnz
sub
jg
stos
add
ja
push
cltd
jno
and
mov
outsl
adc
sub
lock
mov
mov
or
xchg
sbb
jnp
mov
lock
push
push
test
adc
icebp
neg
xorl
sar
cmp
push
hlt
movsb
push
loope
add
jmp
ss
lods
xlat
and
jp
mov
insb
inc
jmp
push
rcrb
add
leave
loope
jecxz
cmp
int
push
xlat
jmp
mov
inc
frstor
inc
adc
inc
rcr
adc
loop
inc
setne
repnz
call
pop
cmc
inc
test
pop
es
in
mov
adc
bound
stos
xor
mov
sbb
fcomps
pop
rorb
add
push
xor
ret
push
sahf
ljmp
ret
jmp
cmp
dec
mov
in
outsb
mov
insl
jge
ljmp
push
pushf
push
in
xsavec
dec
mov
enter
adc
cld
pop
aas
out
out
lock
mov
fists
movsl
iret
jp
aam
xor
push
dec
loop
inc
js
mov
sub
ret
lcall
adc
cli
dec
add
xor
fnstcw
inc
cwtl
insb
je
and
push
jb
cmp
push
cmp
cmp
in
mov
mov
adcb
fiadds
jle
ljmp
pop
adc
dec
push
cmp
jp
ds
or
std
scas
rorl
sub
out
and
out
xchg
ds
push
loop
pop
pop
icebp
bound
int
popf
es
int
mov
xor
cltd
loope
dec
in
push
ret
or
push
mov
adc
push
push
xchg
mov
jae
test
adc
nop
in
xchg
xchg
pop
fisubl
sti
mov
aas
push
mov
pop
add
lcall
or
push
xchg
rep
in
cli
mov
jle
mov
lock
ud2
and
add
jmp
insb
jge
cmp
xor
sbb
stos
jle
int3
outsb
lds
add
xor
cmp
ret
mov
push
lds
movl
mov
jo
adc
pop
outsl
orl
pop
sub
fisubl
push
mov
jl
repnz
mov
aad
stc
fidivrl
inc
enter
xchg
jmp
int3
mov
testb
mov
aam
ljmp
mov
jae
cli
xor
adc
int3
aad
jg
dec
jbe
dec
push
jb
jns
adc
adc
pop
std
pusha
dec
repnz
shrb
inc
popa
fcoms
loopne
fidivrs
sub
xor
push
mov
jle
mov
mov
dec
cmp
ljmp
adc
fwait
mov
push
xchg
andb
rorl
and
adc
cli
sub
adc
out
pusha
outsb
test
jp
loopne
cmp
mov
dec
mov
iret
outsb
or
loop
clc
add
inc
scas
sub
jae
in
lea
jecxz
pushf
mov
add
sbb
push
pop
testl
cmp
jge
pop
push
push
filds
ffree
cwtl
stc
in
sbb
mov
iret
cld
mov
aas
mov
sti
mov
mov
ja
cmp
ss
out
mov
test
add
mov
repz
xchg
inc
leave
push
aam
hlt
adc
mov
adc
sbb
insl
jg
pushf
adc
pop
xchg
daa
shrb
add
or
and
cmp
or
inc
or
popf
xchg
pop
fcmovnbe
dec
mov
lcall
rcrb
nop
dec
and
push
mov
cmp
mov
dec
and
sbb
in
fsubl
or
pusha
or
mov
dec
cmp
mov
repz
fistpll
aad
fs
lret
mov
lahf
pusha
mov
ret
stos
aam
dec
mov
lods
pushf
xchg
out
movsl
call
lahf
sbb
ret
lcall
mov
push
movsb
mov
mov
sub
in
mov
push
dec
je
mov
xchg
cltd
cmpsl
sbb
repnz
lret
imul
inc
xor
lret
data16
xchg
xchg
xor
and
gs
push
enter
pop
dec
ds
xor
outsl
sub
xchg
loop
or
jo
push
xchg
sbb
jmp
add
subl
mov
cmpsl
ret
xchg
in
mov
mov
cmc
or
pop
lods
cmp
mov
mov
jle
jg
in
mov
adc
cmp
inc
or
cld
loopne
jo
pop
jno
cmp
cmpsb
les
ss
mov
stos
jp
gs
in
stos
xchg
push
subl
adc
rorl
out
pusha
daa
les
push
push
and
mov
mov
xchg
movsb
or
inc
xchg
push
mov
cmpsb
into
iret
pusha
stc
xchg
insl
ds
inc
push
push
mov
fisttpl
arpl
hlt
data16
jge
inc
or
out
sub
inc
cld
cmp
in
clc
sbb
fnstenv
sub
cmpsb
push
imul
mov
bound
and
sub
inc
xor
jecxz
loope,pt
out
mov
les
or
nop
xchg
cmp
cmpsb
pop
push
mov
insb
push
out
daa
or
aaa
scas
xchg
xor
pusha
aam
loop
fdivrs
lcall
clc
sub
mov
jecxz
or
pushf
adc
pop
ja
test
cmp
mov
sbb
adc
mov
jg
inc
cmp
iret
dec
es
and
insb
xchg
mov
jb
cmp
cmp
pop
stos
jecxz
pop
in
sbbb
stos
jmp
or
jo
clc
ja
push
sub
jl
push
xchg
cwtl
xchg
mov
out
mov
mov
sub
stos
xlat
fiadds
repnz
sub
jl
mov
pop
arpl
mov
push
xchg
lods
jo
je
mov
mov
adc
xchg
rcl
icebp
repz
pop
fldenv
stc
lea
pop
sbb
adc
ss
fsubl
mov
lods
xchg
dec
dec
cmp
into
xlat
in
decb
xor
push
mov
notl
and
inc
aaa
jp
xchg
jmp
sbb
or
dec
movsl
adc
mov
int3
adc
xchg
shl
xchg
pop
cmp
int
mov
in
loopne
js
dec
and
sti
pop
dec
outsl
loopne
jb
filds
cltd
stc
nop
cmp
insl
arpl
cmp
xchg
ja
outsl
mov
inc
mov
lret
xlat
dec
dec
jl
test
outsb
xchg
xchg
push
and
daa
cmp
pop
add
mov
in
push
sbb
pop
sbb
les
pop
stos
in
stos
aaa
fidivrs
xchg
xor
in
aam
sbb
cmp
test
xor
outsb
clc
or
sbb
out
add
mov
jl
pop
dec
add
iret
jns
jb
scas
int3
lcall
pop
mov
cltd
dec
mov
test
inc
aaa
and
sbb
fwait
daa
jnp
or
out
subl
lret
out
ds
fiaddl
xchg
sub
cs
cmp
jnp
xlat
adcl
cmpsb
outsb
repz
cmpsb
aad
xor
xor
sub
push
fistl
mov
rorb
in
xlat
shl
push
xchg
enter
mov
jmp
inc
jmp
lods
mov
pop
mov
jmp
mov
fnstcw
lods
jae
push
sahf
lret
test
int
xchg
cmp
xchg
jb
aaa
mov
lret
scas
stos
out
xor
xor
js
mov
add
bound
outsl
jge
stos
pop
cmpb
ret
stc
mov
dec
pop
adc
aas
add
fbstp
mov
jo
ss
filds
jbe
mov
and
test
scas
cmp
inc
and
outsb
rcll
sbb
cmpsb
out
clc
cli
pop
cltd
and
inc
push
mov
js
mov
aad
pop
leave
call
pop
dec
push
popf
xor
decb
pop
mov
pop
adc
xchg
xchg
sahf
xlat
jno
rcpps
adc
add
pop
mov
cld
sbb
xchg
pop
dec
cmc
push
xchg
jb
test
repnz
in
xor
add
imulb
pop
push
jmp
out
xor
push
push
adc
movsl
arpl
cmpsb
push
push
mov
or
pop
or
aas
cli
in
push
sub
pop
xchg
pop
test
mov
push
dec
add
dec
insb
jge
inc
sub
dec
sub
std
test
mov
pop
xchg
in
add
and
incl
out
jp
adc
add
mov
jmp
dec
cmp
inc
test
test
push
sbb
add
sbb
jecxz
das
test
enter
cli
xchg
arpl
addr16
mov
pop
fwait
mov
lock
enter
data16
push
lret
lods
xchg
push
insl
dec
dec
sbbb
pop
fisttps
push
insb
orl
push
sub
insb
ljmp
jo
pop
lock
jl
lret
dec
jns
xchg
popa
jno
jns
push
jnp
sub
jbe
pop
out
and
mov
rolb
cmp
fistl
std
lcall
lods
fdivs
aas
mov
sub
and
mov
push
imul
add
stc
fs
sub
leave
jnp
mov
or
fstl
aam
arpl
mov
or
jmp
mov
jb
outsl
mov
out
mov
jge
aad
outsl
mov
stos
sbb
sub
nop
movsl
lock
adc
shll
adc
push
xor
xchg
jnp
and
sahf
popa
sahf
mov
xor
mov
ror
inc
or
into
mov
ficomps
sub
fistl
clc
orb
inc
mov
rcrl
out
enter
mov
cld
adc
sbb
cmp
dec
inc
out
loope
jae
adc
and
jae
inc
sbb
add
sahf
scas
je
cmp
inc
mov
cmp
xorb
test
push
imul
repz
add
pop
notb
cwtl
inc
mov
lds
dec
mov
jp
mov
ja
or
pop
aad
add
adc
popa
mov
mov
addr16
xchg
dec
inc
mov
and
xor
mov
shrl
xor
ja
xchg
mov
hlt
aas
xor
inc
xor
xor
and
shlb
lods
jp
std
add
adc
jns
sbb
or
sbb
lock
push
push
ljmp
cmp
adc
imul
fsubs
xorl
jb
and
and
dec
outsl
inc
sbb
lea
sahf
lcall
aad
xchg
sbb
bound
in
fldl
jle
fistpll
sbbl
nop
and
sbb
sub
and
jns
movsl
mov
loop
push
loop
pop
push
and
xchg
vpminsw
add
roll
mov
dec
cmp
mov
cmp
js
xchg
push
xchg
or
in
ds
jmp
aam
push
roll
jno,pn
mov
inc
pusha
pop
pop
sub
dec
and
fwait
dec
inc
enter
dec
jns
into
inc
aaa
imul
aam
dec
std
xor
mov
and
popf
xchg
cmp
add
xchg
pop
adc
rorl
ja
lea
psrlq
enter
or
bound
inc
or
sub
jns
dec
sbb
cld
and
pop
sub
mov
mov
je
aaa
xlat
movsb
mov
push
add
pop
xchg
hlt
cli
or
push
out
jecxz
addl
cmp
xor
lock
sbb
push
add
fs
lds
mov
outsb
lock
adc
inc
dec
mov
shll
push
inc
push
xchg
aad
mov
arpl
push
out
stc
fs
scas
das
jmp
jno
mov
mov
or
mov
adc
jne
dec
dec
jle
dec
in
dec
rolb
inc
lea
xchg
or
rcll
push
aad
xchg
stc
jne
push
test
push
pop
push
out
daa
dec
pop
xor
mov
jp
and
mov
mov
aam
mov
adc
mov
dec
enter
movsb
lahf
aaa
xor
lret
lea
sahf
jge
out
imul
insb
xor
xor
inc
hlt
cmpsl
les
nop
adc
sbb
mov
test
sti
divl
lds
js
sarb
scas
xadd
fisttpl
ja
data16
repz
int
push
movsb
outsb
and
fs
rcl
in
xor
adc
inc
and
pop
inc
add
or
jns
jb
mov
push
mov
popf
sbb
sbb
sahf
roll
mov
movsl
ret
cmp
xor
mov
shll
mov
and
push
dec
in
cmp
ss
inc
sbb
stc
adc
enter
popa
imul
mov
dec
notb
mov
daa
push
cmp
lret
dec
scas
xor
aam
rorb
in
xlat
fdivrp
mov
leave
sub
xor
sub
push
mov
pop
jmp
mov
xchg
je
inc
mov
mov
ficomps
or
dec
lret
cld
les
xchg
test
xchg
add
or
inc
inc
cmp
and
bnd
aam
cmp
jbe
mov
lds
inc
frstor
nop
mov
lods
pop
shrb
fildl
push
mov
dec
mov
out
mov
addr16
inc
ret
pushf
xchg
aad
ret
daa
pop
cmp
enter
mov
jp
enter
repz
sbbl
dec
push
xor
jmp
add
jg
nop
scas
insl
cmp
jge
loop
mov
in
into
xchg
cmp
mov
lods
sbb
and
aam
rol
ret
xchg
stos
mov
mov
shll
mov
mov
in
sub
movsb
push
dec
mov
insl
push
and
mov
jg
xchg
call
push
mov
loopne
stos
sub
or
mov
ds
andb
mov
cwtl
adc
int
cmp
jmp
and
shl
mov
mov
fnstenv
pop
bound
inc
in
clc
sbb
xchg
inc
add
jnp
mov
dec
out
cmp
dec
dec
xchg
push
inc
push
jbe
mov
pushf
fstp
addr16
adc
popa
or
inc
test
xchg
xchg
xor
and
inc
pop
call
dec
jp
jecxz
push
scas
rcrl
mov
and
das
ret
insb
pop
movsl
and
cmp
mov
xchg
jmp
jmp
ret
add
outsl
adc
das
sarb
enter
fstps
cmp
cwtl
adc
fnstsw
repnz
sub
jp
shrl
mov
movb
lret
sahf
popf
cmpl
and
int3
inc
jl
mov
mov
lods
pusha
js
sub
adc
xchg
jg
pop
pushf
daa
adc
inc
pop
jp
adc
call
mov
adc
shlb
pushf
mov
rcrb
clc
mov
test
fcmovnbe
loopne
xchg
pop
or
dec
sbb
inc
aad
iret
add
out
out
push
push
test
jmp
push
inc
inc
out
fstpt
xor
popa
insl
cmp
push
pushf
cmp
imul
jecxz
les
loop
aas
jmp
cmpsb
push
rolb
pop
push
cmp
adc
dec
or
sbb
push
cmpsb
push
xchg
xchg
inc
mov
xchg
in
sub
hlt
xchg
mov
xlat
sub
xor
xor
inc
push
mov
daa
scas
mov
rcl
cwtl
stc
ljmp
js
xlat
cmpsl
stos
xor
daa
enter
mov
xchg
in
test
test
and
ljmp
lret
into
test
pop
dec
popa
test
push
test
ret
popf
pop
lret
lock
and
cmpsl
adc
scas
jns
in
mov
pop
shrl
daa
jg
ja
or
aaa
adcl
xchg
jb
push
daa
cmp
ss
xchg
enter
xor
pop
mov
int
sahf
mul
js
xlat
insl
mov
testl
cmpsl
xor
cmp
mov
int
decl
insl
inc
mov
lahf
bound
fs
dec
cmp
sbb
mov
in
inc
pop
notl
bound
fwait
inc
out
daa
sub
gs
in
std
negl
xlat
xchg
daa
jb
inc
imul
and
movsb
inc
aad
cmp
addl
fcmovnb
aam
lahf
js
jno
jo
dec
insl
xor
mov
rcrb
clc
stos
mov
add
ret
pop
push
add
dec
push
out
jo
in
dec
fwait
out
mov
jle
or
mov
notb
xlat
mov
sub
jb
rcr
pushf
cs
pop
imul
cli
imul
sbb
test
add
test
int3
cmc
pop
fcmovne
sub
add
lods
sahf
jmp
aas
int3
fsts
pop
decl
mov
mov
ljmp
jmp
icebp
sbb
jo
mov
lods
pop
ja
int
push
inc
popa
and
popa
push
lret
mov
data16
jl
mov
mov
shll
mov
enter
sti
cmp
dec
inc
scas
jb
jecxz
in
pop
mov
lcall
xchg
xchg
adc
mov
adc
xor
dec
cmpsl
int
shr
fdivl
dec
nop
add
mov
and
xor
sahf
mov
or
pushf
mov
fsubl
pop
mov
repz
pop
lcall
adc
pop
fistl
inc
or
sbb
and
cli
cmp
outsb
xchg
sub
mov
mov
inc
stos
enter
mov
jecxz
cltd
cltd
jg
iret
repz
push
fldl
sbb
push
insb
xor
xchg
push
jno
inc
inc
pminub
loope
xor
addl
jecxz
repz
dec
je
mov
stos
cmpl
xchg
fwait
and
test
les
mov
and
jbe
xchg
push
mov
cmc
push
rclb
insb
mov
into
orl
out
and
mov
es
lret
cli
add
enter
inc
jb
rclb
adc
lahf
mov
lock
mov
js
lret
je
data16
and
pop
sub
dec
adc
data16
add
std
fiadds
jmp
cmpsl
mov
push
and
rorl
mov
mov
nop
in
or
inc
dec
mov
pop
sbb
add
mov
scas
icebp
insb
or
mov
jo
rcrl
enter
mov
jnp
in
test
in
lahf
addr16
adc
push
or
mov
aad
jmp
sarb
ja
sahf
mov
cmp
xor
mov
or
mov
ret
add
inc
push
fsubr
add
add
cmp
lods
test
sub
and
add
inc
jo
xchg
xor
pusha
popa
loopne
mov
insb
stos
lahf
sub
dec
ljmp
in
inc
fimuls
xchg
cwtl
jno
shll
sbb
mov
ror
sub
sahf
cmp
inc
pop
call
imul
cmp
push
mov
mov
mov
into
dec
adc
adc
inc
sbb
cs
or
inc
les
sbb
ss
adc
pop
pusha
and
or
pusha
sbb
or
out
jns
and
mov
sti
and
pop
adc
rclb
mov
cmp
lcall
push
push
add
sub
out
xchg
push
push
pop
in
lods
or
jl
stos
mov
pusha
stc
sbb
pop
fmull
xchg
xor
les
dec
negb
dec
xor
or
lods
int
test
mov
imul
push
iret
arpl
and
arpl
int
push
cmp
mov
sub
sbb
inc
dec
cmp
jo
dec
jge
int3
mov
pop
push
xor
push
jl
mov
jnp
dec
or
lcall
jge
dec
pop
xor
lcall
adc
imul
out
inc
clc
clc
test
movsl
inc
inc
push
adc
pop
sbb
or
call
test
sbb
mov
ss
push
cs
clc
adc
jbe
test
add
push
bound
xorl
hlt
pop
aad
xchg
sbb
cld
stos
jp
in
jo
cmpl
ret
rolb
das
iret
mov
inc
fcmovne
lret
outsb
enter
mov
add
in
xor
xor
stos
cwtl
xor
or
insb
adc
jno
mov
or
jnp
mov
loope
aas
mov
push
xchg
push
xorl
out
and
fs
or
or
outsl
lret
xchg
mov
out
mov
sub
shll
inc
inc
cli
adc
mov
xor
fwait
iret
add
es
mov
push
or
push
mov
and
outsl
ja
jno
cmp
in
int
xor
aad
and
xlat
lods
sbb
movsl
in
and
aad
lret
sub
ja
mov
or
inc
lret
xchg
sbb
dec
add
imul
in
jns
js
aam
dec
test
mov
and
mov
mov
dec
jne
inc
pushf
mov
nop
cmp
lahf
inc
out
int
jnp
out
loop
cmpsb
sub
push
shlb
cwtl
mov
pushf
leave
mov
mov
inc
ja
les
cmp
pop
xchg
mov
mov
pop
mov
pop
mov
inc
mov
ljmp
outsb
cmp
sbb
mov
jbe
adc
notb
mov
inc
notl
jb
xor
xor
cltd
mov
int3
mov
or
mov
push
cmpsb
mov
sbb
repnz
aaa
je
ljmp
mov
pop
loopne
sahf
add
adc
dec
movsl
and
push
and
xchg
or
push
movsl
sub
inc
rol
push
jae
mov
mov
les
cmpsb
popf
ret
imul
cmp
out
sbb
mov
push
add
pop
push
mov
xchg
or
mov
adc
stc
mov
and
scas
mov
mov
xor
call
mulb
daa
pop
or
fwait
rorl
fisubs
jl
push
in
sub
roll
fsubl
push
ja
ret
int3
mov
push
push
idivb
xor
pop
sub
stos
popf
push
pop
xor
push
cmp
mov
pop
bnd
pop
movsb
and
or
inc
xor
push
add
or
dec
scas
imul
stos
xlat
xchg
pushf
pusha
dec
and
sub
and
lret
rol
popa
movlps
testb
pop
fsubl
lods
ljmp
mov
rol
neg
pop
dec
sarl
mov
rclb
inc
cmp
mov
ja
mov
out
cmp
xchg
sahf
mov
fcomi
lret
outsl
stos
out
sbb
mov
sbb
pop
lahf
ficomps
outsb
int3
in
sub
test
dec
adc
cmp
cmpb
cmpsl
int3
fbstp
aaa
pop
inc
jp
jns
lea
xor
popa
mov
out
dec
das
sahf
xchg
test
les
mov
mov
mov
xor
idivl
jmp
mov
aad
sti
loop
adc
add
repnz
jge
les
mov
mov
les
fcomp
cmpsb
adc
add
jmp
mov
rcl
inc
mov
add
aad
or
jae
cs
inc
add
call
add
add
repz
lcall
testb
out
loopne
cmp
imul
jno
push
jmp
mov
ss
sbb
idivb
jnp
mov
test
jle
dec
insb
lods
loopne
les
sbb
lods
outsb
cs
hlt
push
test
push
dec
or
xor
or
xchg
scas
into
push
jns
aam
dec
or
addr16
cmp
mov
in
push
fidivrl
popa
cwtl
aad
sub
adc
cwtl
dec
and
outsb
popa
mull
inc
mov
leave
scas
xchg
pop
push
xchg
adc
push
out
fnstcw
xchg
jmp
mov
rol
mov
ljmp
push
int3
mov
dec
mov
out
std
adc
lds
cmc
inc
cmpsl
inc
mov
addr16
adc
fcoml
xor
mov
mov
inc
xor
push
mov
push
pop
push
mov
into
fisttpl
jne
push
aad
fwait
mov
fcmovnu
pop
out
pop
es
repz
mov
cmpsb
cmp
imul
or
aam
in
cmp
pop
pop
cli
call
daa
out
dec
mov
mov
push
adc
mov
call
je
dec
sub
daa
xor
inc
dec
add
hlt
xchg
shrb
mov
cmp
addr16
push
popf
ret
inc
and
xor
fistl
lret
and
xchg
loope
dec
daa
inc
add
aad
mov
pop
cmp
adc
sarb
pop
out
sbb
fldcw
rorb
mov
dec
push
adc
fndisi(8087
fisttpll
adc
mov
iret
sub
shrl
mov
sahf
scas
insl
ss
xlat
pop
pop
popf
int3
movsl
fwait
pop
scas
and
dec
das
mov
jne
push
scas
mov
cmpps
repz
rorb
cli
add
xor
pop
cmc
add
nop
xchg
out
in
inc
push
push
loopne
dec
lds
fs
xor
xchg
sbb
inc
mov
icebp
pop
mov
ljmp
mov
pushf
movsb
or
scas
mov
cmpl
lret
mov
inc
xor
xchg
or
jbe
mov
mov
xchg
adc
call
push
and
pcmpgtb
push
out
clc
loop
call
aas
out
stos
les
push
inc
sbb
mov
dec
xchg
jne
cs
cmp
xchg
xchg
pop
xchg
pop
jmp
or
int3
xor
dec
imul
dec
pop
push
sbb
shlb
adc
in
jecxz
jl
nop
and
hlt
mov
nop
pop
sbb
sbb
lods
jmp
lahf
repnz
mov
add
adc
shlb
sub
xchg
push
sar
outsl
andb
xchg
in
mov
mov
pushf
icebp
dec
js
and
jae
inc
imul
aaa
rolb
xchg
subl
mov
mov
jge
ficompl
mov
lods
mov
sbb
jp
xor
pop
fsubrl
scas
movsb
fiadds
mov
fsubr
mov
or
jl
std
inc
pop
pop
into
mov
jl
enter
insb
jmp
dec
call
mov
aas
push
rcll
and
shll
scas
or
test
filds
and
int3
or
dec
sbb
ds
aas
in
mov
pop
es
flds
lahf
fmull
jae
cmp
push
out
or
inc
out
mov
out
sbb
jmp
mov
outsb
and
dec
cmp
push
push
push
cmpsb
mov
out
push
mov
xchg
sarl
mov
imul
jno
outsl
xor
jno
sub
lods
and
or
ss
mov
mov
jno
cmp
xchg
in
xchg
xchg
ret
xchg
cld
pop
sbb
loope
lock
bsr
popf
and
jbe
xchg
mov
dec
xchg
pushf
int
fildll
addr16
adcl
enter
add
sub
dec
lahf
adc
cltd
pop
fs
mov
hlt
cmp
pop
xor
and
call
adc
dec
stc
lea
mov
adc
aam
stos
outsl
insb
jae
loope
add
addr16
dec
jne
mov
xor
cmpsb
inc
xor
int3
pop
mov
das
cmc
dec
mov
fsubrs
or
pop
and
push
rolb
jb
cmp
xorl
stc
mov
fstl
inc
mov
subb
sar
pop
push
push
mov
jne
into
xchg
xor
sbb
sub
adc
stos
movsb
dec
jne
gs
aam
ss
inc
into
shl
addr16
cmp
inc
xchg
xor
sahf
push
xor
cmp
cwtl
orl
adc
loopne
xchg
pop
cwtl
or
test
jbe
rclb
adc
sub
mov
add
lock
mov
mov
jne
out
dec
inc
pop
mov
sbb
dec
repz
outsl
sub
insb
pop
insl
add
xor
and
and
fsubl
shl
sarl
cmpb
popf
xor
mov
inc
out
lret
sbb
data16
add
adc
xor
movsl
mov
lret
pop
cmp
repnz
adcb
xchg
je
into
dec
inc
fnstenv
test
jmp
test
sti
ja
les
ja
sarl
aam
fs
out
enter
dec
ljmp
aad
icebp
shll
mov
call
add
mov
mov
jns
mov
cmp
fildl
inc
aam
mov
addl
or
stc
mov
mov
pop
jp
jecxz
mov
xchg
xchg
sub
ficompl
cwtl
mov
inc
xor
cmpsb
cmpb
push
mov
sahf
push
or
xchg
push
pop
add
call
insb
insl
or
cmp
cltd
or
xchg
inc
mulb
dec
pop
inc
outsb
outsb
cld
in
movsb
fidivl
fwait
and
pusha
sti
arpl
test
add
ja
pop
and
movsb
xor
lods
cltd
arpl
jbe
or
aaa
add
cli
lock
out
cwtl
bound
cli
or
adc
int
sbb
and
push
faddl
adc
call
inc
and
loopne
ja
and
xor
pop
stc
test
and
inc
adc
cltd
push
mov
ret
mov
cmpsl
cld
dec
fcoms
push
sar
shl
inc
cltd
adc
aas
lret
lret
pop
insl
xor
dec
notl
out
loope
stos
add
push
inc
adc
test
pop
mov
in
int
mov
arpl
jns
and
aas
loope
cmp
inc
stos
stos
cmp
push
xor
jl
inc
and
rclb
or
xchg
jg
mov
pop
mov
pop
jmp
popa
dec
das
mov
push
out
xchg
shll
inc
cwtl
loope
cld
fs
and
out
add
aad
add
xchg
xor
or
jmp
cwtl
xor
stc
xchg
bound
sub
mov
push
xor
xor
mov
fdivr
or
flds
and
cmpsb
stos
xchg
inc
icebp
rcrb
pop
inc
cmp
jp
dec
xchg
adc
add
mov
test
and
cmp
imul
cmp
mov
or
push
adc
sub
fdivl
decl
jecxz
mov
dec
aad
push
ljmp
cmp
adc
aaa
mov
add
data16
iret
push
ljmp
jne
lock
adc
dec
roll
jl
movl
add
inc
js
pop
aam
in
cmp
test
mov
in
inc
push
aaa
fmuls
cmpsl
or
icebp
ljmp
sbbl
push
daa
cmp
cmp
push
hlt
or
std
cmp
out
rclb
add
cmpsl
pop
shl
ljmp
jo
sbb
stos
pop
mov
mov
mov
adc
shlb
mov
mov
ret
fstl
push
lret
or
test
movsl
das
mov
jge
jl
frstor
stos
add
lret
and
das
mov
aad
rorl
mov
out
cmp
push
arpl
pop
ret
adc
dec
and
lahf
rorb
mov
push
aaa
imul
stos
sbb
push
int3
and
cwtl
gs
sbb
xor
enter
and
pop
pop
and
hlt
shll
les
inc
mov
add
imul
pop
dec
out
mov
and
icebp
push
sub
out
int3
fisttps
adc
sbb
aad
dec
sbb
xor
fldcw
jmp
xor
lods
mov
pop
movsl
mov
pop
or
and
or
ljmp
bound
mov
ficoms
xor
add
daa
std
inc
fmuls
loopne
mov
and
cmpsb
popa
add
mov
or
or
fdivrp
pop
dec
jne
jl
jno
fwait
mov
arpl
sbb
mov
ljmp
xchg
adc
fsubs
cld
andl
arpl
pop
dec
adc
nop
fisubl
mov
mov
and
jo
test
iret
pop
lahf
or
insb
icebp
iret
mov
xchg
pop
push
aad
xchg
add
cwtl
xor
imul
lahf
jmp
push
mov
jle
push
and
in
mov
mov
and
fcmove
insb
cwtl
and
jl
jg
mov
shr
push
mov
mov
scas
mov
imul
fwait
pusha
push
div
mov
xor
and
mov
add
xor
ret
push
pushf
mov
sub
jmp
pop
push
cmp
call
movsb
pop
mov
icebp
pop
scas
or
in
dec
cmp
adc
push
dec
add
mov
push
pop
xor
rorb
xchg
push
mov
iret
or
fistpl
adc
lock
sub
mov
xchg
jo
or
pop
pop
xchg
jns
pop
cmp
scas
outsl
mov
cmp
pop
add
mov
mov
and
in
jne
fisubrl
jne
out
iret
iret
imul
adc
sub
inc
enter
rcll
sbb
cmpb
pop
or
test
and
pop
jge
fstps
dec
mov
jmp
push
ljmp
addr16
inc
xor
jno
and
cmpsl
arpl
ljmp
shll
pop
movsl
test
jg
aam
and
xchg
push
mov
cwtl
dec
pop
pop
lock
or
jns
bound
adc
xor
ret
or
test
mov
sub
hlt
jle
fs
sub
imul
push
pop
lock
es
xchg
inc
pop
lahf
scas
je
jbe
sub
add
push
ret
mov
out
dec
insb
fadds
push
outsb
daa
loope
orb
shrb
xlat
push
inc
test
mov
inc
arpl
sbb
inc
andb
xchg
mov
into
sub
lahf
add
xchg
mov
adc
adc
scas
out
jecxz
sbb
cli
xchg
sbb
mov
dec
mov
jns
sbb
inc
stos
test
scas
jp
push
ret
aaa
popf
adc
jp
pop
and
or
jp
cld
mov
pminsw
fisubs
push
stc
fldt
and
cmp
jp
dec
mov
and
cmp
and
add
shlb
fwait
addb
xchg
mov
push
push
test
mov
stos
out
and
je
jecxz
mov
ficompl
and
or
and
rorb
movsl
adc
push
dec
and
push
jle
ljmp
lock
xchg
mov
gs
not
sbb
push
lock
cmpl
cmp
jo
loopne
int3
mov
outsl
cmp
adc
clc
xor
or
mov
test
je
mov
mov
enter
adc
or
sub
mov
outsl
sbb
mov
pop
xchg
inc
and
xchg
mov
push
dec
out
cmp
mov
push
scas
xchg
cmp
loopne
jnp
into
loop
mov
add
dec
cli
lds
das
xchg
mov
sbbb
repz
fstpt
out
pop
jno
shr
pop
and
cs
jge
imul
aaa
sub
mov
imull
stos
xchg
push
cmp
mov
push
rcll
and
cli
mov
mov
outsl
gs
or
and
aas
mov
jne
jbe
cltd
dec
xor
ljmp
insb
xchg
es
xchg
stc
sti
outsl
jp
cmp
int
fcmovbe
mov
dec
rorl
pop
jbe
sub
in
push
xchg
in
jnp
mov
sarb
mov
and
imul
add
in
lds
sbb
fst
or
sub
test
xchg
aas
mov
adc
test
mov
jbe
adc
sub
pop
movsl
mov
mov
out
pop
int
push
outsb
iret
xchg
pop
dec
inc
fwait
shl
aad
add
icebp
loope
popa
or
lods
mov
stos
repnz
push
ljmp
jmp
mov
and
out
cltd
out
mov
push
outsl
pop
stos
test
pop
outsl
cmp
or
mov
shrb
ds
stc
xchg
test
mov
jmp
fs
jnp
cmpsl
dec
pop
jnp
ja
pop
xchg
xchg
je
out
xchg
mov
pop
pop
rolb
inc
aam
aad
movsb
jnp
xor
lods
push
jo
xor
mov
jl
and
lret
sbb
out
rclb
cmp
mov
std
loope
sahf
inc
in
into
cmpsb
push
add
fstl
call
je
inc
repnz
adc
xor
es
lret
insb
mov
lock
and
jmp
pop
icebp
cmp
repz
xlat
jp
sbb
jb
scas
bnd
ds
sub
or
push
sbb
shll
lret
std
jl
jl
dec
in
xchg
xchg
ljmp
dec
pop
cmp
ja
loop
jnp
and
adc
xchg
inc
adc
mov
mov
jg
jmp
add
or
mov
aaa
xlat
xchg
cmc
aam
jbe
nop
adc
fidivl
out
or
ret
mov
dec
pop
addr16
test
pushf
add
xor
lret
std
xchg
clc
mov
in
in
mov
andl
and
sti
mov
mov
test
sbb
sub
jne
xlat
inc
daa
movsl
cmp
jne
insb
and
in
movsl
imul
cmp
movsb
mov
push
push
or
inc
loope
cmpsb
xchg
mov
jne
sbb
sbb
jno
in
or
loop
mov
addl
rorl
push
cltd
add
cmp
cmp
cmp
lds
sub
repnz
lds
jo
push
popf
fldcw
movsb
dec
jg
dec
popf
hlt
push
mov
or
push
pop
mov
inc
icebp
outsl
stos
subb
cmc
mov
fists
ljmp
and
adc
sahf
fmull
mov
push
aad
push
sub
or
cmp
inc
sbb
roll
sbbb
arpl
shld
or
mov
in
push
in
aad
orl
pop
out
ret
jnp
notl
cmc
mov
lods
cs
mov
xchg
lret
popf
cmpsl
sbb
test
shlb
xchg
gs
insb
jne
fimull
jp
xor
lods
cli
imul
lcall
lret
aaa
shl
loopne
sub
jno
mov
xchg
cs
mov
xchg
xchg
xor
stc
in
push
pusha
add
pop
inc
outsl
lea
gs
jg
and
xchg
stos
adc
cs
sub
add
mov
mov
pop
popf
push
ror
jle
mov
jbe
aad
sub
cmp
jno
jns
mov
adc
sbb
jbe
test
sbb
mov
lods
inc
das
loop
cmp
mov
outsl
jns
in
iret
push
or
andl
mov
cmp
inc
mov
mov
xchg
cmc
ljmp
cmc
lock
repnz
scas
or
hlt
push
sbbb
jbe
sbbb
jo
or
cwtl
push
clc
imul
pop
adc
cmpsb
mov
jecxz
fdivp
jmp
cs
icebp
mov
stos
fsubl
movsb
or
loope
or
or
mov
sbb
cmpsb
fnstenv
jg
inc
xchg
cmpsl
pop
mov
mov
jmp
or
rolb
inc
inc
lods
loop
lahf
in
sbb
push
in
adc
pop
data16
sahf
mov
ljmp
movsl
aam
andb
xchg
sarb
mov
lret
mov
cmc
pop
lahf
outsl
jmp
int3
jle
dec
icebp
aam
mov
jb
sbb
adc
int
cmp
inc
test
ds
inc
jge
cmpsb
test
aas
mov
das
ds
jecxz
pop
pop
xor
mov
into
jnp
int
jo
sub
sbb
xchg
sbb
adc
jnp
xchg
or
push
or
ret
xchg
add
popf
in
sbb
push
xchg
popf
add
rorb
push
push
stos
bnd
mov
sub
jb
dec
sbb
outsb
sub
cmpsb
daa
cwtl
mov
mov
fldt
push
out
test
fcmove
pop
js
xchg
insl
scas
sti
sarb
sub
mov
ficomps
xor
dec
out
lods
imul
push
mov
mov
sub
xlat
pop
push
lods
insl
pop
sbb
icebp
push
jb
cwtl
adc
loop
lds
loope
xlat
push
cmp
inc
inc
sub
adc
and
fxch
aad
or
push
jno
loopne
imul
orl
jmp
dec
sbb
add
pop
xchg
jbe
stc
lock
sbb
mov
roll
jns
inc
cmp
dec
aaa
xchg
jecxz
inc
push
xor
cmp
aad
fsubr
rcl
fildll
dec
dec
dec
sarb
pop
add
insl
ljmp
jecxz
out
daa
sub
mov
enter
stos
mov
into
orb
cmpb
xchg
mull
xor
insl
sbb
dec
popf
int
dec
add
push
xchg
cli
jmp
jmp
jl
pop
add
push
jne
jns
insb
repz
xor
cmp
jp
cs
scas
mov
int3
xchg
loopne
cmp
adc
or
in
pop
test
and
mov
cmp
xchg
push
imul
test
loope
outsb
cli
and
cmp
dec
jo
xor
xchg
and
jl
sub
inc
imul
mov
pop
out
sbb
cmp
sarl
loope
stos
ja
addb
inc
xor
sbb
inc
pop
dec
loope
mov
push
mov
sbb
inc
jecxz
jno
push
data16
sub
outsl
shld
xor
adcb
fwait
in
mov
inc
dec
jmp
inc
scas
and
stos
jnp
andl
sbb
xchg
and
inc
xlat
fisttpl
aas
xchg
in
lret
ficompl
mov
in
adc
sti
add
rcl
clc
mov
xchg
lock
lcall
ret
push
mov
mov
in
push
outsl
xchg
adc
repnz
cmp
push
mov
xor
loop
sub
lret
push
jae
scas
and
mov
mov
andb
movsb
cmp
sub
outsl
hlt
outsb
mov
xor
sarl
add
inc
adc
sub
xor
fisubs
lret
sbb
or
sub
jecxz
sahf
and
xchg
jbe
add
lods
pop
and
bnd
stc
jmp
cmp
dec
cmp
test
xor
daa
mov
shll
negb
or
sub
adc
cmpsl
dec
dec
and
sbb
adc
cld
mov
inc
xor
mov
mov
jg
lock
pop
stos
rcrb
pop
dec
inc
sbb
leave
pop
sarl
lahf
js
or
in
test
sub
xchg
hlt
add
mov
or
jb
seta
xor
or
add
xlat
pusha
into
inc
mov
inc
inc
pop
outsl
inc
ja
lret
dec
dec
frstor
iret
cmpsl
lea
add
mov
stc
dec
jecxz
cmp
arpl
scas
repz
mov
andl
cmp
mov
out
push
xor
dec
inc
andb
idiv
xor
cmp
jne
repz
dec
push
sbb
add
outsl
lods
jge
repz
in
mov
sahf
lret
aam
out
add
mov
cs
cli
out
fs
dec
sub
jmp
jno
sub
jge
pushf
jae
lret
jb
test
pop
push
inc
icebp
mov
sub
or
push
aaa
outsb
out
loope
mov
ret
adc
xor
adc
cltd
cmp
push
xor
inc
pushf
or
inc
fs
rcrl
sti
push
pop
ss
imul
dec
xlat
xchg
inc
xchg
or
repnz
and
push
arpl
jle
and
jmp
arpl
je
out
shll
adc
sub
add
pop
push
cmpsl
data16
cmp
adc
pop
jbe
push
test
xor
add
mov
iret
sti
sub
pop
jae
push
xor
fwait
jecxz
pop
xchg
mov
inc
push
scas
js
mov
inc
push
mov
fmul
out
and
push
mov
nop
flds
lcall
mov
maskmovq
testl
adc
xor
fcompl
cmp
mov
xor
jno
xor
pusha
mov
bound
or
pop
pop
ss
sbb
adc
faddl
mov
adc
jmp
jge
int
adc
jle
add
fdiv
pop
pop
mov
in
ret
orb
jns
stc
dec
cmp
jp
dec
lea
mov
mov
push
daa
and
push
rcrb
cmpsb
dec
jle
xlat
cmpsl
push
and
shl
imull
cltd
or
loope
gs
jmp
outsb
sub
mov
loop
ret
pop
mov
jmp
lods
test
test
movsl
lret
imul
sbb
xor
xchg
loop
add
dec
pop
jns
pop
and
push
pop
les
sahf
jg
dec
mov
mov
or
pop
xchg
notb
popf
fiaddl
movsl
lods
in
add
push
aad
pop
test
mov
push
push
sbb
repz
repnz
mov
stos
inc
dec
scas
into
bound
xchg
aaa
pushf
xchg
mov
cmp
and
int3
cmp
rorb
sub
dec
clc
in
addr16
dec
xor
sbb
orb
loope
jno
aad
out
fwait
mov
mov
mov
pushf
addl
push
ret
leave
push
dec
call
xor
jle
pop
sti
jecxz
mov
push
les
push
or
mov
pop
pop
test
xor
adc
adc
testb
mov
in
stos
push
pop
ret
pop
shll
clc
cltd
lret
xor
imul
test
push
sbb
cltd
push
pop
mov
lods
adc
fmuls
jbe
inc
jp
in
inc
sub
movsb
add
orl
in
mov
sub
ret
dec
xor
mov
mov
enter
test
cmp
adc
idivl
fsubs
lret
pusha
nop
mov
ss
push
jp
jns
cmc
lcall
ss
iret
hlt
movsl
pop
mov
mov
push
lods
fwait
pop
inc
clc
leave
cmpsl
jmp
inc
cmp
mov
mov
jmp
aas
cmpxchg
pusha
lock
sbb
ss
adc
mov
xchg
iret
and
jmp
xor
dec
adc
cld
fstpl
xor
cmpsl
loope
cmp
pop
call
dec
mov
loopne
dec
stos
sub
and
xor
lds
xor
repz
sub
add
lahf
mov
add
call
imul
ret
push
push
cltd
and
cmp
dec
pop
das
mov
dec
mov
push
and
push
mov
fcmovnu
adc
push
xchg
sub
loop
movsl
enter
pop
fidivrs
aas
add
dec
or
add
sub
mov
and
add
insl
test
xor
mov
dec
mov
mov
push
mov
clc
in
jbe
add
adc
outsl
add
sub
movsb
sbb
sbb
pop
cmp
popf
repz
push
pop
jp
out
inc
in
shlb
das
lret
mov
and
scas
mov
mov
sti
adc
pop
outsb
jb
xchg
sbb
mov
fidivrl
in
xchg
ret
testl
es
inc
mov
and
fdivrs
hlt
into
gs
jo
adc
test
fsubr
sbb
cmpsb
xchg
or
insb
movsl
inc
shrb
outsb
add
inc
repnz
dec
add
ja
add
sbb
jl
int3
lods
cli
dec
push
cmpsl
icebp
pop
xor
subb
movsl
sahf
pushf
test
push
cltd
mov
in
and
jae
sub
inc
test
repnz
fwait
lods
sub
push
cltd
outsb
lds
push
adc
into
inc
inc
popf
adc
insl
pop
stos
test
mov
addr16
stc
jle
in
int3
lea
enter
movzwl
pop
nop
xor
in
xchg
add
icebp
movsb
adc
xchg
cmpl
inc
sub
sub
xor
add
ret
add
push
sbb
ret
mov
sub
pop
mov
xlat
fsub
pop
ficompl
xor
fistpll
in
lahf
imul
push
push
imul
jecxz
aam
sbb
sahf
testl
xchg
daa
mov
add
lock
add
in
pusha
mov
std
mov
push
cs
in
jae
mov
cmc
scas
rolb
or
andl
sbb
pop
data16
xchg
loope
push
icebp
mov
jmp
not
jbe
add
sti
rcrl
mov
popa
scas
inc
mov
mov
push
ficomps
pop
outsb
aas
cmp
and
and
jl
mov
arpl
inc
fwait
test
add
pop
repnz
and
push
cmp
lods
cmp
test
shrl
jge
das
mov
adc
fadd
stc
push
test
aam
mov
adc
and
xor
mov
movsb
mov
dec
mov
sub
inc
cmp
xchg
cmp
sub
fidivrl
in
sbb
cmpsl
inc
cmp
bnd
sbb
es
test
or
cmp
add
mov
fmull
dec
mov
xor
sbb
cmp
mov
out
sbb
mov
jecxz
loope
add
mov
leave
das
xchg
sub
mov
fldl
ret
loopne
sbb
sbb
aaa
daa
ds
adc
lahf
decb
je
or
pusha
inc
sbb
flds
loope
lods
jo
jp
xchg
sub
jle
es
pop
stos
adc
mov
outsb
enter
incl
lcall
sbb
add
lock
mov
rcrb
std
mov
adcb
add
push
xchg
jns
loop
imul
or
adc
leave
test
inc
mov
out
xor
dec
fdivl
out
addr16
std
mov
pop
daa
ds
les
mov
cmpsb
inc
jle
in
fdivrl
in
pop
jl
jmp
xchg
inc
incl
lds
push
push
test
fistpl
or
test
aas
stos
test
std
adc
dec
adc
into
out
xchg
mov
and
lret
shrl
shr
push
cli
sub
cmp
mov
jmp
stos
push
inc
pop
inc
ret
stos
jno
cmp
enter
test
xchg
js
iret
stc
xor
imul
pop
iret
inc
mov
xor
sub
divb
call
mov
lahf
jmp
fs
insb
lea
mov
or
loopne
iret
mov
shrl
lds
xchg
test
fnstsw
sahf
outsb
xchg
dec
jmp
rorl
jmp
cli
mov
push
mov
es
jp
fdecstp
gs
xor
enter
xchg
or
and
inc
and
push
ret
fsubr
mov
dec
and
pop
sbb
and
leave
cmp
push
fcmovne
stc
xchg
sbb
into
adcl
gs
jl
int3
loope
cmpsl
fcomps
int
loopne
push
fstp
stos
xor
xlat
rcr
sub
cmp
sub
iret
push
jmp
rclb
pop
repz
mov
ds
adc
pop
push
stos
addb
sub
xor
push
es
sahf
iret
scas
aam
dec
dec
mov
jmp
and
testb
and
jle
outsb
and
fdivr
adc
movsl
push
cmp
sub
test
fcomps
pop
jp
push
dec
xor
scas
aad
jae
das
fld
lock
mov
daa
push
cmp
and
sbb
cmpsb
push
pop
mov
xchg
xor
dec
pop
fdivrl
sub
and
cmc
push
movsb
mov
push
sub
lahf
shlb
insl
scas
fsubl
enter
pop
cmp
jo
loop
and
xchg
xlat
dec
rcl
test
mov
ljmp
jg
jmp
jle
es
scas
shll
scas
ss
aam
loopne
loop
or
rorb
pop
jb
sbb
or
sub
lods
mov
pushf
and
jg
add
jmp
test
and
mov
call
enter
mov
and
xchg
popa
aaa
xor
mov
aaa
mov
outsl
xchg
add
pop
rcr
jl
jo
fdivrl
mov
and
loop
aaa
xor
jg
inc
lret
out
push
inc
insb
pop
pop
sub
cli
ja
loop
test
icebp
xlat
shlb
das
adc
insl
outsb
cld
outsb
mov
jp
xchg
mov
imul
cmpsb
adc
push
push
fildl
ja
dec
xor
adc
and
push
jae
push
sbb
mov
mov
iret
stc
mov
mov
xchg
sahf
adc
call
push
jle
stos
xchg
mov
std
mov
js
pop
adc
fs
insl
pop
mov
mov
adc
daa
pop
push
sub
sbb
repz
in
sbb
psrad
es
pop
sub
adc
rorl
xchg
int3
aas
loopne
jb
popf
mov
xchg
outsb
lock
nop
cmpl
mov
dec
sub
mov
or
dec
push
dec
in
popa
aaa
jno
xrelease
push
xor
jp
cli
imul
out
pop
mov
mov
sub
push
cmpsb
cld
sbb
add
mov
popf
and
or
fbld
dec
out
mov
mov
inc
scas
mov
loope
outsl
lahf
push
daa
sub
int
xchg
loope
int
cs
add
insb
ficoml
or
ja
xchg
imul
aaa
sti
pop
add
or
mov
int3
es
and
bound
movsb
lock
mov
imul
imul
and
cmp
ljmp
adc
and
lods
xchg
pusha
mov
mov
fcomps
loop
cld
add
xchg
inc
push
cmp
or
mov
push
and
movzbl
mov
test
and
inc
xor
mov
push
push
mov
xchg
adc
js
add
and
ja
scas
inc
iret
sti
call
bound
sbb
jge
int
jecxz
adcl
and
sarb
popa
inc
out
mov
inc
xor
jae
pop
xlat
into
test
fwait
aam
mov
pop
js
negb
jg
out
push
jg
daa
cmp
inc
pop
inc
icebp
mov
dec
push
mov
push
mov
aaa
jmp
cmp
nop
cs
loope
icebp
and
adc
fincstp
iret
and
pop
mov
pop
int
jns
push
inc
ss
mov
push
sub
test
xchg
out
imul
lods
mov
mov
jecxz
adcb
hlt
dec
notb
adc
movsb
mov
add
jmp
lcall
xlat
mov
int
pop
pinsrw
pop
mov
pop
push
dec
or
repnz
mov
mov
pop
outsb
mov
push
ss
push
insl
inc
dec
or
pop
xchg
test
mov
sub
lds
mov
inc
or
mov
cmpsb
add
repnz
int3
dec
sub
dec
inc
lcall
ljmp
in
or
in
aaa
movsl
testb
push
nop
out
scas
fcomip
and
call
or
mov
mov
mov
loopne
popa
jo
lods
xchg
and
and
inc
cmp
hlt
adc
sbb
dec
out
in
cmp
fwait
ja
mov
pop
aaa
sbb
cmp
fsts
shlb
lock
mov
push
sub
mov
pop
pop
das
xchg
shlb
cld
mov
mov
in
mov
dec
push
push
adc
sbb
inc
jge
lock
dec
mov
mov
loope
inc
pop
test
mov
mov
add
jbe
sub
sbb
cli
mov
sub
and
xor
mov
adc
ljmp
dec
rcll
popa
popf
mov
jbe
sbb
pop
pop
mov
mov
sti
xor
dec
pop
add
scas
into
mov
lods
stos
push
fists
leave
xchg
jbe
adc
cmp
ss
or
push
addr16
out
stos
jmp
loop
adc
mov
mov
and
out
ljmp
popf
in
in
xchg
xlat
sbb
push
add
adc
push
cmp
stos
add
mov
imul
jl
inc
test
mov
int
push
or
arpl
jle
dec
push
xor
ds
aam
xor
cmpsl
inc
imul
pushf
shlb
out
mov
in
jbe
dec
in
add
or
mov
cmp
inc
fldenv
shl
repnz
dec
and
mov
xor
jl
aaa
sub
arpl
push
adc
xlat
sbbb
push
xor
nop
jnp
lds
jo
insl
fisubrl
ljmp
ljmp
ds
mov
ret
mov
testb
loopne
mov
dec
fsub
stc
xchg
or
cli
xor
pop
addr16
dec
push
mov
mov
push
xlat
ja
or
mov
dec
xor
cmpsl
jp
sbb
bound
repnz
and
xor
jbe
pop
in
push
test
adc
or
mov
pop
aam
cwtl
mov
mov
fsubp
and
hlt
sti
out
shlb
inc
shrb
enter
jmp
roll
fwait
jge
sub
sarl
rolb
pop
pop
cmp
push
rolb
push
jmp
mov
mov
or
loop
cmp
xor
jge
leave
mov
mov
cwtl
sar
mov
je
dec
mov
mov
ror
and
outsl
xor
cwtl
aad
pop
lcall
cwtl
cmp
mov
mov
jne
popa
and
mov
or
fldcw
dec
subb
sahf
je
add
dec
loope
cwtl
das
pusha
test
adc
or
jae
or
add
or
shrl
inc
pop
fwait
cmc
daa
sub
xor
pop
xor
xchg
adc
pop
in
lahf
inc
adc
add
leave
push
jne
popl
mov
pop
mov
movsl
cmp
lods
lahf
add
hlt
stos
es
xor
stos
adc
lods
lods
pushf
into
add
sub
loopne
enter
or
push
and
jne
pop
in
lods
jb
jmp
mov
and
fs
and
mov
movsb
mov
xchg
push
cmp
push
lods
ja
and
movsb
hlt
push
test
iret
pop
pop
lret
aas
roll
aam
das
cmp
sbb
cmp
push
sahf
ret
fucomi
or
add
loope
out
xlat
loope
cmpsb
loope
jne
mov
jnp
cld
pop
rclb
xchg
cwtl
sub
fisttps
dec
lretw
dec
inc
lea
in
adc
out
movsb
push
jbe
pop
scas
mov
xor
fstp
fmul
fldcw
add
fstpt
test
mov
pop
add
xchg
shrl
sub
xlat
int3
jmp
ja
xchg
in
inc
fsub
jge
sub
mov
movsl
shrl
shll
xorl
or
iret
dec
aad
aam
add
adc
les
xchg
mov
test
sub
aaa
mov
jae
addr16
sub
adc
push
adc
mov
mov
add
stc
sub
in
test
adc
dec
jae
lea
push
pop
adc
jne
mov
or
repnz
cmc
push
fimull
out
pop
dec
jns
jne
cld
insb
pop
scas
push
add
lea
or
pop
sub
loopne
movsl
and
mov
or
fcmovnbe
jb
loop
mov
mov
mov
push
inc
movsb
jg
imull
orl
addr16
dec
push
pushf
test
xor
loopne
pop
nop
xchg
rorl
sub
jp
mov
aam
bound
in
lahf
sub
mov
and
loopne
xchg
outsb
xor
subl
mov
pushf
sti
mov
call
jne
add
fldl
addr16
popf
cmp
and
ss
sbb
insl
cli
mov
jl
sahf
movsl
xor
gs
and
insb
aam
lods
push
push
sbb
lret
jmp
mov
pushf
outsb
nop
out
cmp
jge
sub
cltd
rcr
inc
daa
cltd
movsl
xor
lahf
add
or
push
frstor
les
sahf
stos
add
xlat
push
scas
vmptrst
push
push
xor
jecxz
jge
xchg
aad
vzeroupper
bound
adc
push
scas
pop
sbb
or
mov
mov
dec
mov
aam
icebp
sbb
sub
cmc
sbb
mov
pop
adc
cmpsb
jp
jp
bound
into
ret
je
xchg
jo
je
ja
testb
push
out
sti
leave
mov
adc
mov
nop
pop
dec
sbb
shlb
mov
psrld
add
int3
sub
sbb
fdivs
push
nop
sbb
dec
mov
repz
inc
ds
inc
dec
xchg
outsb
scas
xlat
mov
sbb
push
mov
fisubrs
fnclex
mov
sub
rol
movsl
adcb
add
arpl
xchg
lds
pop
pusha
pop
je
cmp
ds
jns
ficoml
hlt
lock
xor
scas
enter
sbb
and
cmpsb
xorb
xor
jbe
lcall
in
mov
lcall
and
gs
jnp
insb
repnz
adc
outsb
mov
pop
inc
cmp
in
jae
xchg
push
int3
inc
push
icebp
scas
jne
xor
lahf
mov
add
push
paddusb
and
inc
pop
iret
xchg
mov
aam
imul
outsl
shrb
jl
jae
xchg
sub
stc
pop
inc
js
dec
jmp
lods
movsl
cmc
xlat
sub
push
adc
xchg
mov
fldl
std
fcomp
lcall
fs
dec
out
jp
imul
sub
cmp
in
mov
arpl
in
sub
push
pop
xor
out
push
xor
cli
mov
incb
repnz
xor
fiaddl
fwait
dec
fistpll
dec
mov
jbe
xlat
sub
arpl
jo
cmp
shr
stc
inc
ss
xor
stos
pop
pop
inc
rcll
fidivrs
fidivs
les
mov
cltd
mov
mov
pop
popa
mov
add
sbb
sub
lahf
test
and
fs
cmp
and
ret
insb
sub
and
sbb
rcr
xor
ss
and
xor
inc
addr16
mov
in
or
mov
pop
mov
cs
jno
clc
sub
jns
leave
mov
push
lcall
js
or
mov
pop
aad
loope
mov
xor
clc
mov
outsb
jg
test
mov
mov
sbb
mov
push
leave
mov
mov
jns
sbb
mov
push
das
or
sub
out
pop
sbb
mov
jbe
jo
mov
mov
ret
hlt
dec
xchg
repz
inc
pop
imulb
sub
ss
push
xlat
shll
out
or
rcrl
mov
or
outsl
int
lahf
inc
mov
into
lcall
sbb
rcrl
in
jp
pop
and
mov
mov
dec
mov
stc
lret
fdiv
adcl
mov
into
mov
pushf
adc
in
or
or
xlat
add
pop
jmp
ljmp
xor
sub
jmp
shll
fimuls
ret
out
pop
adc
jle
lods
sbb
pop
fsubp
jae
cmp
mov
xor
jle
push
cld
add
lds
pop
imul
adc
mov
adc
shr
or
and
jecxz
cwtl
inc
dec
jmp
mov
pop
and
repnz
mov
icebp
mov
jg
divb
jecxz
mov
push
inc
std
fsubp
out
movsb
rorl
lea
xchg
or
sub
imul
cmp
push
movsb
push
mov
rcrl
pop
pop
cmp
es
shlb
xchg
cmc
leave
pop
cmc
xchg
aas
add
jecxz
xor
clc
bound
xchg
sub
stos
cld
adc
cmp
fs
popf
int3
rcll
xchg
mov
movb
lret
movmskps
jecxz
pushf
and
and
imul
aas
gs
int3
xor
add
mov
push
xchg
ret
scas
jmp
out
cwtl
inc
test
aad
std
mov
push
lcall
adc
push
mov
jae
es
jnp
mov
jno
in
mov
mov
push
mov
iret
mov
movsb
pop
pushf
inc
sbbb
dec
cmp
hlt
mov
xchg
mov
add
fsubrp
ret
loopne
adc
sahf
popa
inc
xchg
push
xchg
mov
int
xlat
adc
mov
into
fsubrl
mov
ret
mov
push
dec
je
dec
mov
or
fisubs
hlt
push
dec
in
lcall
cmp
mov
scas
sbb
scas
icebp
in
repz
les
dec
cli
add
mov
negb
je
lret
mov
fwait
in
scas
xchg
addr16
dec
dec
mov
xchg
adc
push
xchg
leave
lret
jb
mov
inc
mov
invd
xchg
scas
repz
fwait
jne
adc
or
dec
pop
pop
shll
mov
adc
mov
nop
pushf
into
sbb
bound
sbb
fcmovne
mov
leave
cwtl
dec
sub
mov
fldt
aas
add
xchg
mov
fldt
mov
ljmp
dec
pop
pop
sbb
mov
filds
or
pop
lret
cld
xor
scas
jno
stc
xchg
pop
dec
push
push
mul
aam
daa
scas
cli
push
inc
jp
lahf
or
xor
mov
int3
lods
push
aad
add
xchg
push
sbb
mov
push
xchg
pop
or
aas
pop
or
cmp
lret
aaa
sti
mov
shl
jns
pop
mov
jne
mov
and
sbb
das
mov
call
sahf
test
jne
mov
add
add
out
sub
adc
fisubrl
lods
jge
ss
in
addb
popa
and
cmp
xlat
cmp
xchg
pop
outsb
testl
pop
or
popf
cs
or
popf
inc
mov
shrb
xchg
inc
jl
mov
pop
nop
xor
inc
imul
xor
dec
jb
scas
fdivp
out
or
add
pop
movsb
pop
and
dec
notl
pop
and
xlat
fldcw
xchg
cmpsl
test
lods
lods
adc
imul
rolb
lcall
mov
rolb
sti
cwtl
iret
les
jno
or
jmp
xchg
daa
sbb
sbb
jnp
adc
jb
cmp
dec
pop
call
or
cmp
mov
mov
mov
cmp
mov
mov
adc
pop
jp
cld
jbe
xor
test
fdivr
mov
fnstenv
fidivrl
mov
fists
cs
xor
aas
push
lock
pop
std
push
aad
push
cwtl
test
push
scas
fcoml
cmpsl
and
sub
or
cmpb
pop
and
push
jb
push
in
pop
test
dec
sbb
cmpb
mov
test
sub
jbe
int
mov
call
das
xchg
out
ret
xchg
leave
dec
mov
mov
xchg
push
mov
fwait
ds
jp
mov
hlt
push
scas
xchg
cli
lods
jg
dec
jae
shlb
iret
mov
cmp
sub
lods
test
pop
bound
or
movsl
push
inc
fwait
jge
pop
stos
add
push
adcb
or
sbb
fs
in
lahf
mov
leave
in
sub
leave
pop
push
or
xchg
xchg
cmp
ret
test
xor
push
in
orb
sub
push
mov
xchg
repz
cmp
negl
mov
sahf
subb
cs
inc
fidivrl
mov
push
ds
fsubs
cmp
fcomps
std
adc
stos
jmp
xchg
cmpsb
fmull
push
clc
jg
ja
aad
push
sbb
movsl
cld
or
sbb
mov
lea
sahf
dec
fisubrs
xchg
push
scas
push
mov
mov
adc
jne
push
jmp
mov
mov
mov
jle
push
test
scas
push
push
pop
push
xchg
or
imul
aam
push
mov
insl
movsl
jge
fwait
notb
xchg
jno
and
pop
outsb
outsl
hlt
enter
gs
mov
or
cmp
or
inc
or
mov
popf
jnp
push
arpl
mov
dec
add
fiadds
int
push
loope
sub
sub
xchg
xchg
sbb
lcall
xchg
push
mov
inc
jns
or
sub
pushf
pop
popf
jmp
ror
fiadds
push
cli
mov
shll
sbb
outsb
or
aam
xchg
orl
jne
dec
in
cmpsl
xchg
int3
push
ss
push
push
scas
jp
add
pop
nop
out
cmp
or
xor
push
cmc
test
repnz
push
mov
add
pop
pop
int3
inc
lahf
xor
jmp
xchg
dec
push
mov
aad
fsubrl
popa
or
sub
adc
inc
cmc
jg
push
bound
fisubrs
bswap
out
iret
int
push
xchg
jle
out
sbb
mov
in
xchg
dec
jne
or
push
xchg
pushl
jno
adc
pop
popa
fsubl
jge
adc
adcl
sub
je
loop
cmc
enter
sub
push
and
jo
mov
sub
jno
cmpsb
outsb
scas
loope
in
movsl
xchg
xchg
jmp
inc
adcb
mov
outsl
mov
cs
or
ljmp
inc
stos
dec
add
jg
mov
or
xor
outsl
sbb
dec
or
shlb
dec
outsb
xor
call
push
rcll
or
cltd
and
fwait
mov
jge
inc
push
push
xor
push
icebp
xchg
not
data16
loop
lahf
dec
push
fmuls
cmc
mov
cmpsb
mov
jmp
insb
jp
inc
and
popf
fldenv
inc
mov
daa
jno
icebp
xor
incb
das
sarb
inc
cmp
and
scas
loope
out
add
mov
sbb
outsb
rcr
divl
imul
sbb
out
out
jp
lahf
out
ds
cmp
addr16
adc
clc
int3
sub
fwait
in
jmp
and
arpl
or
jo
mov
pop
movsb
testb
jmp
scas
hlt
clc
sahf
or
fisubl
rcr
xlat
aam
ret
cld
mov
pop
cmc
shlb
ret
out
push
or
mov
popf
dec
sbb
lahf
bound
and
jmp
lcall
in
lods
cmc
or
outsl
jmp
mov
add
js
cmpsl
scas
imul
cmp
jns
jle
out
mov
outsb
xchg
cmc
or
lcall
imul
jle
inc
mov
into
insl
mov
jmp
push
or
sbb
push
sbb
leave
pop
and
jb
pop
stos
sub
sbb
test
int3
sbb
insl
lahf
fninit
addr16
es
mov
lcall
inc
sbb
cld
sahf
xor
add
aad
es
push
sbb
push
mov
in
in
inc
inc
xor
gs
cmc
add
cwtd
out
jno
mov
shl
lea
mov
dec
mov
or
imul
inc
testb
jne
push
daa
fmuls
adc
std
in
in
mov
test
dec
push
enter
gs
mov
out
sbb
scas
mov
dec
xchg
dec
movsb
pop
shr
or
iret
aas
arpl
faddl
sub
jge
outsb
std
pusha
push
movsl
and
mov
xor
and
in
in
das
xor
mov
out
sbb
fs
cs
cmp
pop
adcb
pop
pop
jae
xchg
add
xor
add
cwtl
leave
rcll
push
roll
sbb
ret
add
sbb
popf
mov
sbb
sbb
mov
jl
xlat
xchg
int3
jle
cli
mov
push
gs
mov
insl
sub
mov
push
fwait
movsb
xor
sub
imul
jecxz
push
shll
mov
movsb
and
aad
lahf
daa
imul
sbb
pusha
test
xor
xor
fstp
jne
or
add
adc
mov
scas
mov
ja
lret
cmp
or
inc
sub
into
in
mov
mov
jns
or
add
pop
and
cmp
push
testl
xchg
inc
sub
add
les
pop
mov
hlt
lods
pusha
push
xor
lea
lods
push
sahf
mov
fsubs
sub
popa
xchg
push
or
ja
xchg
cmpl
xlat
adc
es
xchg
sbb
push
jae
pop
push
popf
leave
rcrb
dec
push
mov
jns
mov
in
pop
fwait
js
add
ja
psadbw
mov
faddp
adc
and
repnz
pop
rcl
inc
mov
cmp
xchg
cli
adc
mov
cmp
sub
jbe
mov
and
out
fwait
adcb
cmp
stc
inc
mov
cmc
loope
daa
mov
inc
bswap
pop
dec
push
mov
ret
pusha
mov
lret
cmpsb
aas
lods
scas
and
ror
ljmp
aad
mov
or
testl
das
pop
or
sbb
jmp
sbb
sub
cmp
mov
adc
jb
mov
mov
xchg
sbb
mov
jmp
pop
aam
sbb
loopne
cmpl
fsub
fwait
sub
push
xlat
ret
mov
gs
and
pop
scas
les
adc
mov
adc
cli
cmpsb
adc
lods
rolb
mov
dec
push
jecxz
push
dec
dec
mov
or
xchg
fnstcw
dec
inc
fnstsw
xchg
sahf
xor
aam
and
addr16
bound
insb
pop
es
insb
out
pop
and
jbe
sbb
dec
hlt
and
out
aam
pop
jne
inc
mov
inc
in
fildl
sbb
je
in
fldcw
pop
aad
nop
mov
sbb
notl
cltd
shlb
popf
addr16
cmp
mov
mov
or
push
add
jnp
shlb
pop
out
hlt
jmp
adc
pop
nop
out
jg
pop
push
fdivrl
cmpsl
lret
mov
jo
jae
push
std
add
cmp
test
lcall
aas
sbb
add
jns
xchg
fucomip
int3
pop
popf
ja,pt
jecxz
in
cmp
push
sti
mov
push
mov
mov
aas
push
mov
aaa
mov
aam
lcall
out
lahf
gs
insb
lcall
sub
or
mov
mov
cmc
pop
push
aas
or
clc
push
aas
outsb
pop
xor
sarb
lock
mov
pop
jae
or
dec
push
sub
insl
out
cmc
xor
into
sub
mov
dec
inc
roll
cwtl
push
xor
fdivrl
jg
mov
jecxz
not
pop
scas
imul
fnclex
push
mov
jne
hlt
lcall
push
shl
data16
idivb
sbb
sub
cmp
dec
cmpsb
aam
and
mov
fs
scas
push
push
pop
out
lcall
pop
jecxz
movsl
in
adc
fisttpl
push
lods
or
sub
xchg
or
inc
jb
inc
imul
pusha
adc
mov
in
pop
in
cltd
sbb
fldz
jnp
out
fucomp
test
push
pop
inc
pop
int3
mov
loopne
in
push
idivb
stos
inc
imul
pop
dec
mov
pop
addr16
call
push
call
cmpl
xor
adc
sbb
or
add
test
fiaddl
fucom
pop
and
pop
xchg
mov
cmpsl
cmp
pop
add
mov
pop
cmp
inc
fmuls
inc
repz
test
cmpl
orb
xor
lret
xchg
aam
shr
push
add
jmp
or
sbb
add
das
sbbl
push
pop
in
pop
sub
decb
inc
push
jo
and
or
mov
data16
shl
std
bound
jne
mov
cmp
in
int3
sbb
cmp
mov
xchg
cmp
jae
fcomps
push
cwtl
sbb
mov
cmpsb
shrl
lds
cli
add
sub
sbb
stc
dec
xchg
push
mov
les
mov
add
fucomp
xor
xchg
scas
test
and
xchg
stos
jle
jb
in
cltd
jge
icebp
push
lret
or
decl
push
lods
jmp
mov
pop
dec
push
or
ds
jno
mov
test
jecxz
lds
xchg
daa
insb
sub
xlat
cmp
mov
add
mov
push
cmc
ret
fdiv
out
aam
stos
xchg
pop
stos
les
ret
lods
loope
fnstenv
mov
sub
popa
inc
movsl
outsb
repz
sbb
push
pusha
pop
jmp
mov
lretw
xchg
inc
jge
inc
cmpb
mov
adc
jb
lods
pop
jl
out
pushf
aaa
lds
sub
dec
repnz
inc
enter
es
sbb
lock
xchg
lods
movsb
pusha
xchg
stc
sub
xor
call
add
ljmp
cmc
inc
jnp
in
pop
dec
pop
xchg
cmp
cmpsb
je
repz
adc
test
and
xchg
fsubl
adc
test
int
lcall
lods
inc
or
push
push
lahf
dec
mov
add
out
jecxz
ja
cmp
mov
mov
cmpsl
ss
and
mov
mov
xchg
lock
stc
sbb
or
test
mov
pop
or
xor
dec
imul
inc
xchg
mov
test
in
repnz
mov
and
out
push
jmp
das
or
inc
cmp
lea
jge
lock
ret
ja
fsubrp
out
mov
mov
hlt
xor
out
mov
sbb
mov
mov
rol
cwtl
subl
filds
ljmp
enter
unpckhps
test
stc
ja
xor
xchg
shll
ficomps
ret
sbb
test
enter
data16
jl
jecxz
mov
addr16
jecxz
rolb
ja
inc
and
mov
loop
xchg
mov
int3
mov
lods
inc
ret
push
cmp
lea
movsb
jmp
fdivrl
cmpsb
pop
push
or
mov
loopne
cld
add
ficoml
cmpsb
mov
push
int
in
pop
sbb
test
loop
out
add
repnz
xor
cmp
stos
test
jmp
inc
rcl
jno
mov
ds
movsb
mov
dec
test
lods
lahf
xor
loopne
xorb
and
adc
pop
jae
icebp
add
cs
sti
mov
cli
push
or
out
and
pop
and
lahf
mov
push
cltd
mov
imul
fsubrl
add
ficomps
mov
jmp
cmp
xlat
dec
movsb
or
divl
imul
addr16
fidivrl
hlt
lods
pop
push
inc
lds
sbb
call
xchg
mov
rclb
int
cwtl
into
mov
icebp
and
les
cmpsb
iret
pop
into
push
inc
cmp
test
inc
gs
or
dec
cwtl
mov
loopne
dec
popa
pop
movsb
loope
add
shlb
faddl
mov
les
js
pop
or
push
adc
out
xor
sti
sbb
push
pop
sbb
dec
xchg
clc
lds
and
adc
fwait
lahf
leave
clc
sbb
xchg
scas
lret
mov
dec
test
loope
sysret
mov
add
out
cli
test
xor
je
loope
or
out
adc
rorl
sahf
push
jb
std
flds
sbb
outsl
nop
or
jecxz
mov
dec
adc
pop
fdivrs
cwtl
mov
and
fistl
xor
fstcw
pop
fcomip
mov
iret
mov
inc
mov
mov
mov
pop
fcomps
das
data16
mov
call
aam
or
into
addr16
xchg
adc
or
mov
lahf
jmp
mov
add
adc
popf
push
repnz
stos
mov
and
test
lret
sarb
test
xchg
leave
inc
mov
inc
and
pop
mov
fwait
loopne
add
cli
cwtl
push
push
and
shrb
movsb
and
pusha
push
outsb
sub
aas
pop
pop
test
test
push
testb
call
mov
rsqrtps
mov
pushf
xchg
filds
mov
mov
shlb
data16
add
xchg
mov
bound
xchg
enter
das
push
decb
pushw
sti
ret
adc
add
dec
mov
push
das
sbb
xchg
pusha
decb
xor
je
leave
cmpsl
mov
sub
mov
cvtdq2ps
andb
iret
imul
pop
xor
and
and
icebp
mov
lea
imul
je
mov
es
xchg
xor
ja
fcmovne
xlat
sub
imul
lcall
or
adc
xlat
loope
xchg
sbb
stos
in
movsb
fcoml
ja
or
jg
call
aaa
arpl
add
test
mov
sarl
aad
and
mov
sub
mov
in
in
sbb
add
lcall
and
fmul
dec
push
pusha
loopne
push
jmp
sbb
call
std
mov
jle
mov
xor
rorl
fcomp
mov
jb
bound
push
xchg
lea
roll
addr16
out
dec
pop
inc
mov
clc
scas
dec
popf
loop
cmp
subb
jg
cs
sbb
mov
lods
mov
xchg
loopne
jp
push
mov
mov
add
popf
aaa
rol
test
adc
push
daa
cmpsl
pop
dec
add
cmc
inc
xchg
out
inc
int3
jmp
dec
xor
inc
pop
enter
or
add
mov
inc
loopne
push
insl
inc
rorb
pop
adc
imul
jbe
ds
pop
pop
sub
test
jl
test
mov
pop
xchg
aaa
inc
dec
adc
cmp
or
ljmp
popa
mov
repnz
mov
rcll
jo
sub
pop
movsl
sbb
lcall
lods
cltd
es
sbb
cmpsl
mov
xor
insl
imull
enter
mov
xchg
push
lock
mov
cld
addr16
sbb
jns
dec
fcoms
pusha
fisttpll
dec
popf
out
mov
adc
mov
or
in
lahf
mov
dec
sub
in
dec
push
fsubrl
xor
jecxz,pt
cmp
and
pop
push
sbb
sbb
sub
loope
jne
inc
jb
inc
std
mov
adc
jp
rol
repnz
icebp
adc
fadds
mov
mov
inc
sti
mov
mov
shrb
adc
fdivs
mov
mov
cld
and
mov
add
sti
movsl
call
outsb
xorb
pop
jb
dec
fsubl
loop
and
sbb
test
mov
arpl
pop
cwtl
es
pop
mov
inc
pop
mov
jecxz
pop
mov
mov
xchg
insb
pop
inc
pop
flds
xor
test
xchg
loope
jmp
iret
popf
icebp
out
sbb
cmp
mov
jo
sub
inc
sbb
jle
jb
andb
or
icebp
jmp
mulb
shrl
aad
out
das
or
xchg
push
and
outsl
sub
adc
lock
push
adc
cld
test
xor
jecxz
push
xchg
das
dec
daa
pop
adc
mov
movl
inc
daa
cs
jno
xchg
dec
fsubs
cmp
jecxz
xchg
pop
mov
fisttpl
inc
lds
popf
inc
fsubrs
jle
xchg
cmp
mov
jns
shl
mov
mov
push
repnz
arpl
js
xor
ja
jbe
test
sbb
mov
shll
js
clc
mov
pop
xchg
dec
mov
imul
pop
repnz
in
lock
sub
cmovl
je
push
in
fstpl
fcmovne
movsl
sub
mov
cmp
mov
fs
dec
aad
aaa
mov
mov
adc
xchg
jbe
jb
enter
cmp
push
shlb
lret
jnp
stos
and
fisttpl
xchg
ss
jns
and
mov
xchg
push
add
mov
dec
pushf
add
in
push
repz
mov
lcall
movl
stc
icebp
xchg
push
sub
test
mov
arpl
out
rol
test
out
scas
sub
push
mov
ja
pop
repnz
in
push
shr
add
addr16
lcall
bound
lock
xor
aas
fcoml
adc
push
sub
dec
add
imul
test
cmpsl
adc
and
sub
js
sbb
xor
sbb
arpl
adc
in
add
call
cmpsl
jecxz
lods
xor
nop
ret
imul
jne
adc
es
jnp
out
mov
sbb
jl
add
rcrl
add
ja
arpl
sbb
mov
ds
mov
pop
pusha
xchg
xor
push
das
stc
jns
adc
call
loop
sti
movsl
decb
std
scas
pusha
fxch
lcall
or
es
inc
les
mov
lock
mov
pop
lock
dec
jg
fwait
lret
test
sbb
pop
call
fs
pop
testb
aas
add
xlat
sbb
jl
repz
lret
int3
inc
and
push
add
push
mov
sub
aad
jb
bound
cwtl
xchg
jbe
or
cmp
jmp
mov
add
dec
push
popf
inc
and
lods
cmpsl
jno
push
jne
pusha
xor
in
or
push
sbb
add
xchg
push
shlb
lock
and
adc
jae
lds
fidivl
rcrl
xor
subl
xor
stos
std
mov
add
mov
jbe
cs
jle
pushl
add
mov
test
arpl
push
jg
hlt
sti
popf
or
sarb
jns
jge
dec
dec
std
push
fidivrl
sti
xchg
in
rolb
out
loopne
sarb
movsb
push
imul
mov
jno
mov
daa
xchg
arpl
inc
out
imul
mov
mov
mov
int3
mov
dec
or
in
pop
movsb
aam
dec
movsl
cmpsb
jp
in
in
inc
sbb
or
pop
cmpsl
dec
popl
inc
inc
push
jl
ror
aam
mov
push
push
std
add
xchg
jl
cs
popf
cmp
and
shl
add
pop
insl
hlt
aam
dec
xor
push
in
sbb
jno
pop
icebp
mov
ret
shl
or
pop
cmp
adc
dec
out
aas
sub
fsubr
sbb
and
rcrl
sub
hlt
rcrb
mov
insl
mov
cli
dec
icebp
and
ja
andl
jo
stc
xchg
out
xor
mov
and
sub
roll
adc
dec
xchg
adc
mov
in
lret
rolb
sbb
mov
dec
repz
mov
and
jbe
push
inc
and
jb
ds
add
mov
mov
fstpt
imul
and
aas
stos
rol
fisttps
sahf
sbb
xchg
pop
mov
call
in
xchg
in
rcll
xor
or
out
lods
jmp
enter
inc
inc
nop
inc
xchg
xchg
fbld
lret
mov
fwait
or
lods
mov
je
pop
in
xchg
xchg
add
xor
pop
or
out
push
mov
and
shlb
inc
mov
sbb
scas
dec
popa
push
repz
or
adc
loop
pop
loope
shll
add
das
aas
nop
and
aad
xor
inc
jecxz
test
in
dec
or
jg
mov
in
enter
lahf
stos
xorl
sub
js
das
sub
fmull
lock
div
insb
sbb
pop
pop
into
mov
mov
sbb
jno
sbb
clc
adc
das
xchg
aad
or
inc
pop
popf
xor
mov
xchg
cmpsl
out
jae
stc
fwait
jmp
cmp
shll
lds
ret
xor
mov
jg
xchg
xchg
addl
popa
lods
pop
int3
lret
rorl
int3
mov
jmp
fs
loopne,pt
push
ficoml
popf
mov
sbbb
sar
xor
push
mov
mov
pop
repz
pusha
gs
xchg
sbb
imul
push
jl
lea
mov
mov
push
mov
sub
xchg
call
outsl
mov
mov
add
insl
xor
incb
sbb
jle
jmp
lret
jg
mov
push
push
loope
inc
ficompl
daa
xchg
pop
fsts
pop
test
sbb
popa
and
jmp
scas
cmp
lret
push
cmp
scas
pusha
stos
xlat
sbbl
outsb
mov
inc
sub
lea
jbe
mov
jbe
into
jmp
push
divl
gs
dec
xchg
xor
xor
jle
negb
test
into
push
add
cmp
fimull
inc
imul
lock
or
add
daa
or
decl
sti
xchg
adc
adc
and
cltd
cmpb
pop
mov
mov
sbb
addr16
outsb
lret
ss
adc
xor
sub
retw
cmpsl
mov
cmp
jne
fdivl
sahf
push
inc
in
or
pushf
push
pop
cmpsl
sbb
add
jne
sub
xchg
xorb
fdivrp
out
push
pop
scas
jge
sbb
lcall
xchg
cli
mov
cmp
adc
jp
inc
cmp
sub
aaa
nop
and
inc
cmp
lret
cmp
sbb
cmpsl
mov
sbb
mov
sbb
fmull
dec
andb
jno
inc
jmp
mov
nop
pusha
aam
dec
sub
leave
push
mov
out
push
xor
adc
popf
sub
gs
mov
stos
jp
mov
test
jne
mov
int
push
adc
fwait
cwtl
pushf
add
ret
cmp
lret
mov
sub
inc
push
testb
outsl
sub
xor
outsl
jp
leave
cs
push
and
and
stos
xchg
aas
pushf
add
mov
icebp
repz
loop
fstps
cmpsb
fwait
jl
aas
cmc
icebp
pop
mov
loop
and
push
xor
dec
aad
jp
rcrl
test
dec
adc
cs
xchg
cmp
lods
iret
jge
sub
mov
les
jg
roll
mov
push
jnp
andl
or
loop
notl
inc
cmp
dec
or
mov
xor
sub
push
stos
mov
push
mov
clc
sub
insl
jae
jno
loop
inc
push
pop
fldl
push
jns
mov
dec
ret
xor
sahf
stc
adc
sbb
in
mov
shrb
imul
jecxz
add
fucomi
hlt
data16
mov
jno
das
bound
cmc
lret
clc
testl
in
loopne
cwtl
hlt
pop
test
lret
sub
roll
data16
mov
push
add
loopne
popf
add
jl
xorl
xor
push
pop
xchg
cwtl
stc
nop
fidivrl
insb
push
gs
aas
jo
test
rcr
sbb
jmp
dec
inc
in
fnstsw
mov
add
pop
push
xchg
std
out
fcomps
jnp
push
push
sub
xlat
mov
mov
in
enter
and
sbb
pop
aad
sub
or
lods
sub
int3
mov
shrb
lods
inc
fidivrs
xor
xchg
out
pop
push
xchg
push
cmp
bound
pop
mov
sbb
sub
lcall
loope
test
mov
push
mov
xor
or
inc
ljmp
lahf
add
mov
lds
das
test
push
popf
jns
push
jmp
fistps
jo
out
ret
jecxz
mov
lock
outsl
insb
mov
inc
fs
aam
xchg
jns
ret
movsb
xor
add
cmp
push
add
subl
sarl
fcmovnu
orl
aas
lret
loope
and
pop
or
movsb
popf
cmc
in
jns
sub
push
imul
sahf
and
cmpsl
add
sub
lods
cmp
mov
loop
insb
fwait
jae
mov
lahf
jp
fldcw
hlt
mov
iret
lock
push
inc
in
leave
mov
ja
fs
test
inc
outsb
sahf
subl
pop
insl
lods
jne
test
jmp
jl
aam
not
imul
outsl
fimull
sub
adc
mov
sub
mov
fisubrl
mov
mov
and
rorb
push
fs
fiadds
push
adc
cmovg
cli
aaa
mov
inc
gs
inc
enter
pushf
add
sub
je
mov
les
mov
jl
leave
mov
cmc
cmc
mov
jo
pop
cwtl
mov
pop
fisttpll
mov
push
dec
enter
inc
pop
mov
sub
iret
jle
jns
pop
in
inc
pop
or
inc
movsl
xchg
dec
mov
icebp
push
and
aas
in
add
cmp
inc
cmp
fwait
std
aam
mov
in
test
loop
ljmp
xor
mov
movsl
pop
idivl
mov
loopne
lds
dec
xchg
cwtl
dec
add
cli
dec
pop
and
test
jae
and
push
mov
pop
add
lock
cmp
out
icebp
mov
cli
mov
cmp
loopne
loopne
ficompl
inc
jl
add
int3
lock
xor
inc
out
pop
push
mov
push
push
test
xor
out
ljmp
ljmp
lock
push
stos
mov
and
sbb
stos
scas
inc
jno
push
or
or
add
loopne
pop
adc
and
mov
inc
out
mov
push
lcall
or
pop
xor
movsl
fcompl
or
jbe
sbb
mov
push
outsl
out
cmc
sbb
cmp
xor
jg
test
or
or
mov
das
push
fmuls
out
outsb
mov
int
sbb
ss
out
mov
shr
or
sti
push
push
fcompl
adc
cmpsb
pop
cmp
lods
pop
mov
mov
repnz
xor
pop
sub
adc
loope
inc
xor
push
pop
mov
adc
call
adc
inc
dec
mov
cltd
jno
mov
sub
jb
mov
or
sub
idivl
insb
hlt
mov
mov
and
fcompl
imul
fcmovbe
push
or
xor
inc
and
loopne
dec
add
mov
es
std
sbb
xor
xor
shrb
xor
and
or
cmp
outsl
jb
pop
push
dec
or
in
or
icebp
xchg
inc
or
xor
add
repz
inc
pop
lcall
mov
cmp
shl
mov
xchg
ja
cmp
sbb
adc
adc
inc
or
outsl
into
add
push
test
inc
cli
xchg
add
out
lock
scas
inc
dec
sub
cmp
or
dec
fcoms
dec
cltd
std
jge
cld
push
ds
fadds
or
cmp
pusha
or
adc
sbb
mov
pmaddwd
lock
popf
push
jae
sbb
incb
and
cli
add
xor
inc
jg
loop
stos
outsl
mov
sti
data16
push
gs
sbbb
or
and
movsb
rcll
push
jae
pop
mov
test
in
mov
fnsave
adc
sbb
cmp
push
mov
add
jnp
mov
call
or
dec
jns
clc
repnz
mov
popf
mov
leave
je
lods
test
lods
enter
cmp
ljmp
stc
push
aaa
pop
mov
jnp
dec
inc
mov
ret
cs
mov
xor
jb
jne
pop
xchg
mov
test
mov
iret
mov
popa
pushf
add
adc
ret
push
xchg
pop
movsl
jecxz
hlt
cmp
mov
sahf
daa
pop
je
sub
pop
ret
addr16
test
call
xorb
sub
xchg
dec
add
cmpsw
sbb
adcb
xorb
lret
or
fucomi
or
popa
xchg
inc
add
add
xchg
xlat
sbb
sub
xor
adc
inc
pop
add
xlat
xchg
shll
lcall
xchg
and
out
icebp
std
mov
movsl
pop
push
cmp
pop
xchg
cmpb
add
add
xchg
out
clc
add
leave
fcmove
pop
dec
stos
or
ret
push
lahf
and
push
lods
decb
and
enter
mov
mov
dec
sub
push
xor
stos
jp
mov
insb
jg
scas
iret
mov
xor
inc
fistl
bound
popf
or
lahf
dec
jmp
sbb
cwtl
inc
jge
in
push
push
ret
sub
dec
bound
lcall
sub
push
push
mov
popf
sbb
std
pop
out
cmp
mov
movb
out
jmp
add
imul
fstpt
scas
call
outsl
jl
mov
pop
jge
push
push
leave
in
cmpsb
adc
leave
test
movsbl
lahf
mov
cmp
mov
push
sub
mov
aas
lods
cwtl
dec
icebp
add
adc
out
dec
aas
daa
mov
es
add
and
push
in
xchg
gs
nop
neg
dec
js
mov
repnz
push
sub
sahf
push
xchg
sbb
sbb
mov
pushf
jno
xor
push
loopne
pop
ret
iret
in
push
jbe
sbb
pop
push
stos
xchg
das
push
data16
or
insl
arpl
sbb
or
push
ret
jae
test
outsl
repnz
sbb
bound
mov
in
mov
mov
ss
jns
xor
cltd
xor
and
in
mov
xor
ret
sbb
cmp
add
sub
mov
jg
inc
mov
mov
fsubrs
push
test
inc
push
push
repnz
push
scas
lds
pop
or
inc
pop
testb
mov
cmp
add
add
push
xor
andl
out
aaa
fwait
pushf
push
stos
movsl
xor
stos
xorl
jge
mov
in
or
mov
stos
mov
mov
lock
testb
nop
jl
psadbw
roll
cltd
sub
cmc
mov
outsb
cli
inc
xchg
cwtl
mov
jns
pushf
inc
sub
out
int3
inc
scas
das
pushl
sub
push
insl
adc
xorb
mov
or
dec
pushf
out
xlat
inc
sub
lret
fwait
push
pop
mov
lcall
js
pop
leave
sub
out
mov
pop
push
mov
out
sbb
cmp
sub
rcll
fldcw
fdivrs
or
sbb
nop
inc
lcall
cmpsb
xor
in
loop
leave
adc
push
and
sbb
enter
and
mov
in
sub
adc
fdivl
out
pop
adc
jge
xor
fldt
pop
dec
jns
inc
pushf
test
fcom
addb
xor
in
fld
insb
cmc
sub
test
arpl
ret
stos
mov
fildl
xchg
jle
pop
cmpl
pop
rolb
xchg
cmpsb
in
shll
push
dec
xor
cltd
call
loopne
mov
sarb
mov
xchg
pop
jno
and
xor
psraw
mov
cmp
sbb
movsl
jle
mov
sbb
lahf
jg
dec
jnp
rcr
dec
xchg
fcoms
cmc
mov
pop
add
shrb
aad
adc
sbb
jae
stc
imul
push
cmp
insb
pop
xchg
xchg
xchg
dec
shl
push
add
mov
popa
fisubrs
arpl
stc
push
iret
fistpll
sarl
adc
adc
sbb
pop
xor
ficomps
and
into
xchg
in
pop
lret
jecxz
jp
sbb
mov
sbb
jecxz
add
pushf
in
mov
push
das
shl
jb
rorb
sbb
movsb
pusha
sbb
filds
mov
mov
xor
sbb
sti
mov
jle
sti
data16
jnp
mov
xor
fdivrs
jle
imul
dec
imul
ljmp
xchg
test
dec
adc
push
rclb
subb
mov
mov
inc
xorl
jo
adc
mov
dec
xchg
stc
mov
subb
sub
sub
test
faddl
test
lock
imul
cld
xor
les
or
call
jb
dec
aad
call
pusha
movsl
aam
faddl
mov
or
fs
test
pop
xchg
cmp
aad
jg
inc
and
adc
xchg
push
ljmp
es
mov
mov
sarl
gs
cmp
aad
add
pop
ret
aaa
fstps
jno
cmp
adcl
xchg
lock
mov
push
jecxz
adc
push
pop
inc
loopne
std
sub
jmp
cmp
cwtl
into
push
idiv
je
xor
es
rcrb
dec
je
sub
dec
adc
xor
lods
fmuls
sub
sub
inc
mov
fs
icebp
insl
xor
adc
mov
test
cmp
loope
leave
inc
incb
xor
pop
loopne
mov
flds
and
adc
pop
in
nop
rclb
or
mov
lret
test
xor
imul
mov
test
stos
stos
cmc
orl
add
jl
aas
cmp
pusha
sub
ret
and
aas
and
sub
fs
cmpsb
aas
and
mov
sub
imul
je
imul
dec
ja
pop
mov
in
push
cmp
and
cld
mov
orb
lret
shrl
lahf
push
std
test
cmpsl
cmc
inc
xlat
cwtl
sti
shlb
push
add
aad
mov
pop
cmpsl
push
inc
mov
jne
stc
push
sbb
in
gs
inc
fiaddl
cltd
mov
dec
inc
sar
cs
sub
mov
adc
imul
fildl
ss
mov
mov
mov
repnz
xor
inc
stos
or
cltd
push
push
xchg
xchg
inc
mov
ljmp
insb
shrb
imul
ljmp
fsubr
decb
aam
mov
cli
lahf
sub
les
int3
jecxz
idiv
jnp
or
cld
rcr
pop
pop
dec
in
lret
xor
cld
jle
push
or
cmp
outsb
movd
in
movsl
das
adc
cwtl
mov
imul
pop
stos
insb
std
push
repnz
repnz
or
push
into
ror
insb
ljmp
fucomi
imul
in
pop
out
in
lcall
out
sub
mov
clc
cmpl
pusha
and
sbb
sti
xchg
mov
inc
sub
mov
jns
adc
xchg
js
loopne
sbb
xor
push
out
jp
mov
loope
dec
cmp
xchg
fs
jno
sub
test
jne
test
sbb
test
mov
fsubs
xchg
ds
fdivs
sysexit
outsl
cmp
pop
xor
jo
lds
movsl
jbe
push
sbb
sahf
mov
mov
xchg
imul
cmp
addr16
ljmp
mov
leave
mov
mov
lock
xchg
lea
push
xchg
ja
scas
mov
dec
sub
test
int3
pop
cmp
roll
mov
sahf
xor
push
sbb
and
insb
jmp
pop
gs
dec
dec
ja
imul
cwtl
adc
sbb
ja
testb
fwait
call
arpl
dec
xchg
push
dec
out
cmp
lea
out
imul
or
xor
dec
jmp
push
push
mov
sbbb
jg
into
call
fs
dec
scas
mov
or
jns
or
aad
stos
pop
movl
ss
mov
xor
sbb
push
cmp
cltd
in
aam
dec
sbb
mov
sbb
lods
bound
out
out
xor
mov
adc
xor
or
or
ja
mov
mov
dec
out
aam
push
lods
les
mov
push
rorl
sahf
xor
sub
pusha
roll
es
pop
mov
mov
outsb
loopne
js
ficoms
shl
mov
jnp
push
push
adc
and
fcoml
test
dec
sbb
mov
push
aam
add
push
imul
fstl
loopne
inc
dec
mov
cmp
rorl
insl
bound
in
in
xchg
ret
cltd
in
sub
ds
divl
adcl
xor
negl
sbb
orb
push
cmpsl
imull
imul
dec
xor
sub
lods
arpl
decb
xor
adc
std
pop
add
add
ljmp
sub
xlat
pop
mov
out
mov
adcb
iret
and
imul
jns
inc
adc
lods
cltd
fldt
enter
cmpsl
mov
sbb
push
xor
jns
xchg
loopnew
mov
cmpsb
dec
aam
adc
popa
pop
jp
mov
outsl
xor
sbb
mov
push
shl
pop
cmp
mov
cmp
mov
ds
push
loopne
pop
cmp
mov
sbb
repz
clc
addr16
stos
push
or
insb
inc
loope
xor
mov
or
xchg
cmp
sbb
call
jecxz
dec
frstor
ficomps
test
loope
pop
push
je
test
fwait
cmp
fistl
push
leave
cld
leave
jge
dec
and
mov
xchg
mov
out
lcall
cltd
dec
xchg
clc
test
jbe
adc
cmpsb
inc
or
fcmovu
inc
fadd
jo
sub
push
fdivs
or
mov
adc
add
jnp
aaa
les
imul
popa
inc
jmp
gs
and
jecxz
pop
loop
sub
in
mov
add
dec
pop
mov
mov
out
scas
call
insl
push
fbld
inc
aam
int
in
jmp
inc
xchg
push
and
dec
leave
xor
stos
ret
cli
aad
pop
stc
clc
mov
inc
sbb
shll
cmp
int
mov
push
pop
aam
or
scas
push
pop
and
clc
ss
fs
mov
into
lret
pop
mov
push
push
leave
movsl
mov
arpl
sbb
scas
mov
test
push
jb
incl
xor
pushf
jo
rorl
xchg
xchg
jp
fcomps
jecxz
movsl
in
scas
push
mov
adc
xchg
loopne
rcl
cmpsl
out
xchg
cmc
testb
xor
push
aas
adc
dec
iret
incb
pusha
pop
dec
notl
aas
daa
pushf
or
nop
sub
nop
xlat
dec
pop
out
sub
loopne
add
fnstsw
iret
jb
sub
mov
push
cwtl
push
add
add
cltd
mov
pop
into
popf
dec
btsl
mov
mov
je
xor
xor
decb
sub
and
out
jae
in
pop
push
xchg
push
inc
cmp
int
push
inc
push
and
jmp
addr16
jbe
pop
mov
iret
ja
xor
ret
inc
stc
mov
out
popa
mov
outsl
arpl
stos
xchg
movsl
or
leave
pop
gs
shlb
xlat
pop
insl
nop
inc
fwait
push
test
mov
lret
out
pop
je
add
cmpl
lcall
pop
sahf
sub
fstl
xchg
icebp
xor
ret
adc
mov
or
mov
sub
ja
pop
std
and
fnstsw
inc
ret
sti
sub
add
mov
sub
int
scas
or
les
je
hlt
push
mov
dec
insb
cmp
xchg
mov
jb
js
fcompl
rcrb
js
stos
push
xchg
mov
pop
cwtl
js
xchg
shlb
adc
fcoms
cmpsb
add
jge
push
les
add
pop
cmpb
adc
repnz
loop
inc
movsb
mov
leave
mov
sbb
jb
movsl
mov
push
pop
mov
pop
push
push
jne
push
nopl
std
pusha
push
hlt
mov
sub
adc
out
scas
out
push
fisubrl
mov
sbbb
dec
lea
mov
shll
mov
loope
xchg
loop
in
jae
inc
ds
insl
mov
out
fisttpll
sub
cs
fiaddl
in
aam
fidivrl
push
aad
mov
ret
or
cli
aam
sbb
jmp
ret
movsb
mov
or
cmp
mov
adc
cli
pushf
inc
jge
dec
adc
ljmp
jmp
mov
mull
aas
cltd
in
pop
outsb
sti
out
mov
and
fs
add
and
aaa
lret
mov
cmp
ljmp
pop
dec
jo
lds
fcoms
stos
add
je
in
stc
pusha
fsubl
xchg
dec
fisubrl
xchg
mov
jne
dec
dec
sbb
mov
pop
es
mov
inc
push
sbb
dec
or
dec
jns
jne
and
xchg
ret
pop
adc
add
mov
inc
js
rorl
ljmp
adc
adcb
fimull
hlt
push
inc
popa
fistl
xchg
jno
xchg
and
scas
xor
jg
insb
add
pop
mov
inc
data16
fisttpl
test
out
loope
lods
mov
mov
insb
pop
fidivrl
sub
movsl
in
mov
ljmp
xor
cs
negb
add
dec
push
jbe
ss
andl
sbb
adc
mov
jno
jno
jno
fwait
stc
and
fiadds
mov
xor
pop
sub
sahf
push
dec
lock
add
push
pusha
repz
sbb
cmp
test
repnz
push
mov
and
dec
test
and
jne
xchg
push
adc
testl
les
rcll
aas
aas
cli
testb
arpl
in
push
rorb
xor
idivb
xchg
lret
xchg
fstl
cmp
fs
mov
mov
js
repnz
xchg
ret
adc
js,pt
ljmp
cmpsl
ret
mov
cmp
jmp
jge
add
and
push
movsb
int
rcll
lahf
adc
ret
sarb
lods
insb
jle
in
push
aam
cmpsl
test
push
jp
in
cld
repnz
push
sub
mov
push
dec
mov
push
cltd
xchg
in
pop
iret
or
shrb
xor
dec
inc
pop
test
jg
mov
and
push
mov
add
adc
dec
outsb
xor
mov
cmc
leave
aas
test
fs
ret
push
mov
aas
jg
mov
fcmovne
dec
cli
movsb
in
es
pop
cmp
shlb
dec
xchg
imul
andl
je
das
in
in
push
les
out
push
push
int
mov
and
cli
xchg
in
sbb
shll
xor
pop
or
mov
xchg
sub
ret
inc
dec
in
add
int3
insl
push
mov
mov
mov
test
sbb
aam
cmc
mov
movsl
std
rorb
xchg
jo
xor
sub
mov
les
aam
out
inc
or
sbb
roll
and
cli
mov
pushf
xchg
dec
sti
xchg
or
adc
movsl
das
jno
pushf
jg
fistpl
cwtl
and
loopne
rcll
out
lcall
ret
mov
lods
dec
in
ficomps
popa
sbb
fstpl
jae
inc
pop
jp
dec
shrl
fsubr
mov
in
into
repnz
adc
testb
outsl
rolb
jmp
daa
push
rcrl
adc
sbb
push
jmp
mov
call
sub
xchg
xchg
movsl
outsb
xchg
mov
arpl
mov
aam
inc
insb
dec
enter
adc
xchg
cmp
nop
arpl
or
das
les
imul
mov
adc
fucomp
jmp
cmp
fldt
push
pop
je
test
add
je
repnz
in
call
arpl
pop
cmpsl
mov
orl
jbe
inc
lret
xorl
dec
test
popf
dec
daa
jns
shlb
push
push
shlb
lret
mov
in
aas
mov
cmpsb
jge
fstpt
jp
xorl
push
inc
inc
xlat
pop
xchg
int
outsb
stc
retw
sub
sub
xchg
mov
out
jge
test
mov
mov
mov
inc
loope
pop
ret
mov
xor
pop
adc
movsl
daa
outsl
and
sti
data16
leave
xchg
rol
daa
cli
popa
in
lock
ds
dec
adc
fcompl
jecxz
and
jmp
je
mov
and
add
popa
push
xchg
cmp
xor
mov
insb
int
dec
fisubrl
push
imul
xchg
fstl
cmpsb
mov
push
xor
ficomps
jmp
xchg
movsl
ja
movsl
pop
inc
test
or
sub
mov
xchg
mov
mov
pop
mov
data16
push
outsl
xor
shlb
pop
add
sbb
pop
scas
mov
int3
std
mov
loop
xchg
jbe
in
cmpsl
dec
cld
jl
mov
xchg
xor
pushl
roll
adcb
push
lds
testl
ret
inc
sub
mov
clc
aad
mov
sbb
jp
pop
xor
jge
std
pop
xchg
mov
hlt
testb
pop
mov
pop
mov
mov
dec
xor
rcrb
pop
js
push
aaa
sti
sbbb
inc
inc
mov
xor
and
cmpb
jmp
xor
jne
inc
iret
mov
jmp
mov
cli
jle
cli
sbb
test
xchg
fisubrl
loope
dec
inc
test
lret
popa
jecxz
shll
push
js
std
dec
jbe
scas
or
loopne
fisubrl
add
cltd
lock
fs
shrl
inc
inc
mov
pop
add
pop
les
cmp
push
icebp
mov
pop
movsl
repnz
dec
aas
ljmp
push
iret
movsl
pop
xor
jg
outsb
pop
ja
cmp
or
scas
sbb
push
inc
mov
addr16
imul
inc
mov
cs
stos
iret
lock
enter
push
adc
jge
pop
das
bound
xchg
inc
push
jns,pt
test
inc
xchg
ret
dec
sbb
daa
sbb
stc
push
pop
mov
gs
aad
loope
in
jno
sbb
jne
clc
push
jge
pop
mov
lret
dec
shl
in
ss
pop
jge
ss
fcmovu
pop
jbe
iret
stc
pop
es
pop
leave
sub
jmp
imul
shlb
inc
mov
add
cmp
sbb
xchg
adc
xor
imul
aaa
jle
test
out
shll
cltd
jg
pusha
sbb
xchg
imul
pop
or
lret
ljmp
daa
dec
aad
lret
xor
xchg
mov
mov
fwait
js
mov
lea
movsb
push
mov
gs
cmp
les
movsb
dec
hlt
cwtl
and
into
out
mov
dec
inc
cld
fildll
js
ret
cs
int3
fcmovne
sub
add
xor
mov
pusha
pushf
mov
or
aam
inc
jne
cmp
int
cmpsb
push
nop
xchg
mov
fisttpll
arpl
jo
inc
es
int3
je
adc
or
loope
mov
inc
lds
inc
fisubrs
fstl
mov
xor
push
inc
jbe
jbe
dec
lds
mov
xchg
leave
jnp
mov
adc
outsl
test
jne
add
mov
inc
dec
in
repnz
xlat
sti
bound
xor
lock
cmp
xchg
add
cltd
xchg
addb
jb
mov
adc
push
in
dec
dec
sbb
xchg
lret
jo
mov
jecxz
popf
sbb
push
xchg
mov
pop
sbb
lods
dec
cmp
and
cwtl
cmp
push
inc
xchg
pusha
leave
push
inc
rol
ficompl
fldl
daa
jb
jge
jo
ljmp
lods
pop
insl
notb
dec
mov
outsl
test
pop
sub
add
leave
xor
les
sar
mov
add
repz
jl
and
dec
sub
or
popf
rolb
orb
sbb
fimull
lahf
repz
or
stc
cmpsb
clc
outsl
adc
cmp
out
inc
xchg
push
jb
cwtl
push
mov
aad
iret
cmp
mov
or
lea
xor
xor
adc
and
int
dec
push
jle,pn
xchg
dec
push
shrb
das
mov
mov
fiadds
pop
adc
test
ljmp
sahf
aas
adc
mov
xchg
xor
and
pop
push
add
push
popl
adc
jns
dec
jecxz
or
clc
filds
add
mov
stos
sub
pushf
mov
je
cli
mov
in
jns
lock
cmp
call
mov
imulb
popf
jle
stos
repz
ret
fstpt
dec
lea
add
pop
sar
jns
xor
xor
sbb
mov
leave
adc
lahf
inc
imul
mov
mov
xchg
inc
out
ficomps
popf
and
jnp
daa
pop
aaa
mov
fs
fs
adc
in
adc
xor
pusha
roll
add
in
sahf
nop
pop
lods
sti
popf
fldl
aad
push
movsl
lahf
dec
push
sub
repz
imul
cmp
or
jae
inc
pusha
movsb
nop
jl
mov
in
and
push
popa
jns
pop
nop
ds
out
xor
cmp
jg
popa
jmp
incb
push
and
sbb
leave
movsb
xchg
jge
lds
lds
lcall
dec
hlt
aad
jne
pop
pop
pop
jmp
mov
loope
push
inc
mov
insl
ja
rcrl
mov
mov
call
enter
sahf
mov
aad
movsb
inc
mov
ret
xchg
xchg
mov
mov
cmp
inc
pop
push
lret
or
rcll
xlat
adcb
stos
cmp
jb
gs
jne
hlt
pop
arpl
sbb
mov
cmp
push
cmp
cmc
dec
popa
ret
into
in
idivb
aam
rol
cs
push
adc
es
ror
xor
adc
push
jge
xchg
mov
mov
add
sbb
sbb
nop
rcl
fidivrl
dec
lcall
xchg
push
mov
ret
inc
repnz
mov
out
adc
adc
mov
pop
dec
lea
mov
add
xchg
in
sahf
pop
inc
scas
sbb
sub
mov
pop
aaa
mov
je
and
and
mov
mov
scas
cltd
mov
xchg
imul
nop
add
sbb
stos
sub
mov
test
jmp
bound
xchg
enter
sub
outsb
movsl
test
push
sub
add
or
aam
pop
sar
mov
sbb
jb
rol
cmp
movsl
dec
lahf
lahf
out
lahf
pushf
mov
pop
or
rol
xor
cmp
rorb
inc
inc
xlat
out
sahf
fisubl
xchg
test
jmp
or
push
push
rcrb
jbe
int3
movzwl
and
add
cmpsl
jnp
mov
pushf
aad
cmp
inc
ret
add
pop
jl
outsb
xchg
xor
lock
mov
imul
adcl
jb
and
lret
in
rclb
out
fwait
sbb
icebp
fimuls
mov
mov
repnz
mov
icebp
stc
aaa
dec
or
dec
add
movsl
xchg
pop
stos
sub
int3
sahf
out
in
cmp
mov
fmuls
cltd
clc
mov
mov
pop
push
add
fldenv
jle
jns
add
aad
xor
adc
mov
js
sub
aaa
mov
cmpsb
sbb
mov
lods
lods
cmp
sub
xchg
mov
jno
lcall
stc
mov
add
stos
mov
sub
push
aas
mov
movsb
mov
cltd
insb
adc
mov
icebp
lods
push
pop
out
rolb
adc
imul
cli
jmp
leave
cmc
mov
test
hlt
icebp
movsl
repnz
jno
xchg
mov
cli
mov
push
push
cmpsb
loopne,pn
pop
test
stos
popf
jecxz
test
shll
jmp
add
push
movsb
fucomip
add
inc
dec
gs
leave
daa
pop
iret
jp
dec
pop
paddsw
cmp
insb
adc
mov
into
outsb
scas
add
sbb
adc
int
push
stos
cmpsl
xchg
mov
sub
cmpsl
jmp
push
inc
push
pop
jae
ds
sub
rcrb
inc
mov
stc
addr16
fistpl
lret
push
gs
sbb
outsl
sbb
pop
mov
jle
pop
in
outsb
subb
xor
pop
arpl
xrelease
lahf
ficoml
cmp
jg
inc
adc
or
sbb
jns
push
cmp
lods
loop
mov
in
add
nop
mov
xor
lods
stos
xor
xchg
test
insb
push
xchg
dec
xor
shrb
cmp
lods
into
mov
in
jnp
fs
xchg
xchg
mull
mov
push
lret
cmp
push
lahf
dec
scas
lods
test
incl
rolb
ja
mov
shll
jno
incb
addr16
sti
xor
sbb
dec
pop
rorl
test
push
loopne
xor
sbb
cli
jno
inc
xchg
roll
and
mov
repz
xchg
push
and
ljmp
push
adc
decb
push
mov
cs
movsl
cld
das
xor
push
xor
in
cmc
mov
or
dec
icebp
mulb
fisubl
sbb
repnz
sub
mov
or
cmpsl
testl
cmp
les
bound
int
inc
sarl
sub
aas
inc
icebp
rcrl
movsl
mov
notb
mov
push
or
pop
xchg
adc
xchg
xchg
bound
cmp
daa
dec
sub
fiaddl
or
dec
xchg
test
push
loope
scas
mov
sti
jge
xor
push
clc
dec
ja
adc
pop
aaa
lea
cld
and
and
pop
sub
pushf
inc
adc
lret
push
pop
xchg
sarb
sub
pusha
movsl
dec
cmp
cmp
push
and
inc
fmuls
push
push
lret
push
mov
mov
mov
pop
jge
jmp
lret
adc
and
mov
xor
pop
pop
sub
mov
mov
adc
mov
lock
cmp
jnp
or
lds
mov
xlat
cmp
xchg
es
adc
inc
mov
outsb
xchg
inc
mov
mov
cmp
jmp
je
push
bound
shll
pop
hlt
dec
fstpt
shll
das
cmp
movsb
add
pushf
lods
call
testb
sbb
xchg
dec
xor
mov
subb
inc
lods
jae
jno
cs
mov
les
pop
jmp
pushl
lret
movsl
add
fnstenv
in
mov
and
and
push
mov
je
addb
dec
ja
lret
popa
adc
addr16
xchg
lret
sub
xorl
mov
pop
inc
add
es
imul
bound
push
add
inc
test
call
aad
negl
or
imul
lret
mov
rsm
ret
cmp
jmp
cld
xlat
mov
dec
cld
push
aad
pop
add
dec
mov
lods
dec
inc
mov
push
adcb
dec
gs
pinsrw
pop
lods
gs
incl
sbb
cltd
inc
or
sbbb
xchg
fidivrs
cs
xchg
sahf
insl
test
cwtl
rcrb
into
adc
mov
lea
jecxz
test
mov
xor
shlb
es
add
xor
scas
adc
outsb
or
xor
nop
mov
lret
push
pop
mov
daa
xor
sbb
push
push
int
xchg
dec
xorl
mov
ss
rcrl
movsb
xchg
cmpsb
and
lcall
pusha
mov
jecxz
rclb
xor
loop
lret
pop
aaa
std
aam
and
mov
cld
divl
dec
sub
mov
ret
push
mov
jmp
popa
aad
xchg
fldcw
xchg
test
xorl
pop
insl
loopne
or
push
cli
call
mov
out
mov
sbb
xlat
hlt
daa
loop,pt
loop
pusha
jp
mov
push
popf
xchg
dec
pushw
or
and
int
jnp
rcll
push
mov
es
add
cmc
fcompl
popf
mov
jnp
aam
jecxz
xor
movsb
fwait
enter
sub
popf
iret
out
xorl
ror
out
cmp
inc
xor
lods
scas
jno
xchg
fisubrs
cmp
popf
imul
cmp
pop
cmpsl
mov
xor
inc
cmp
adc
sbb
mov
repz
inc
add
mov
mov
aaa
and
loope
sub
dec
cmpsl
mov
push
sub
mov
rclb
mov
and
inc
pop
cmpsl
xchg
or
adc
inc
or
cwtl
jae
xchg
cld
enter
jb
and
push
mov
mov
test
les
pusha
dec
idivl
gs
mov
bound
fisubrs
sbb
pop
mov
fidivs
jae
outsb
jo
sbb
es
sbb
jecxz
xchg
leave
fisubrs
gs
imul
enter
arpl
mov
es
loopne
ja
arpl
negb
cmpsb
push
fimuls
mov
je
jl
mov
pop
lahf
push
mov
cmp
movsl
or
out
sub
scas
sub
adc
je
je
add
jmp
cmp
pop
sbb
push
sub
dec
aam
sbb
movsb
push
sub
aaa
cltd
loopne
adc
jle
and
sub
mov
arpl
shl
es
mov
rcrb
les
add
sub
sti
adc
hlt
add
mov
fprem1
push
pop
jno
mov
push
add
jb
test
push
mov
in
jbe
dec
shll
in
test
mov
pop
cs
fistpll
mov
test
jne
mov
lahf
and
xor
je
add
add
mov
mov
inc
scas
cmpsl
dec
pop
mov
jbe
call
xchg
inc
jle
stos
sub
jle
cmpsb
pop
jae
adc
push
test
push
movsl
mov
add
repnz
push
mov
mov
dec
jb
out
inc
jmp
icebp
sbb
ljmp
push
in
cltd
jnp
ret
addr16
mov
push
ja
test
test
dec
add
lcall
shll
pop
lret
lahf
cmc
ljmp
popf
or
out
mov
xchg
les
fsubs
jp
decl
sub
jle
loope
mov
mov
inc
add
or
sub
push
inc
sub
jg
xor
mov
movsl
push
int
lds
lods
les
sbb
das
sub
into
int3
push
int
sarb
arpl
xchg
fidivrs
lcall
inc
addl
jg
testb
fidivs
ficoml
in
jae
and
dec
pusha
mov
pop
lock
ds
and
lock
pop
addl
subl
pop
xor
and
or
je
xchg
xor
movsb
jns
pop
pop
pop
push
adc
idivb
cld
ss
inc
mov
dec
cmc
push
mov
or
cmp
jb
mov
mov
out
rcl
in
cmc
sbb
dec
mov
mov
subl
test
data16
jp
dec
popf
dec
outsb
sbb
fstl
les
pop
mov
pop
jle
out
and
jge
push
rorl
int
test
mov
scas
dec
fstpl
mov
hlt
adc
test
and
fistpl
imul
ljmp
inc
dec
mov
dec
push
jb
jae
inc
cmp
scas
jo
fucomip
lods
fsubs
mov
jmp
mov
xchg
rcrl
movsb
inc
call
sbb
int
scas
pushf
dec
or
insl
hlt
xor
fcmovnbe
inc
xor
xchg
dec
push
fsubr
mov
jp
scas
repnz
mov
sub
int3
xchg
pop
and
loop
push
cmp
jmp
push
xchg
pop
dec
lret
xor
and
jmp
add
cmpsb
ljmp
stos
addr16
and
popa
jno
aad
xor
nop
in
enter
and
or
repz
jne
fucom
loop
je
enter
mov
jl
lahf
push
adc
enter
mov
dec
dec
adc
daa
xor
movsb
adc
ljmp
shll
xor
js
lret
push
out
cmp
fmull
push
sub
jp
shrb
aam
xchg
inc
and
mov
daa
cs
ljmp
dec
mov
push
mov
hlt
sti
adc
inc
push
outsl
inc
xchg
fdivrs
and
cmp
sub
cmp
ret
xchg
loop
arpl
bound
and
cmpsl
cmp
xor
mov
cmpb
dec
push
jg
xchg
dec
test
out
ja
and
inc
or
fcoms
loop
push
loopne
or
leave
adc
add
jns
out
lahf
mov
adc
sub
jb
lds
mov
pop
inc
lahf
jp
mov
fdivr
and
push
fidivs
dec
dec
add
jb
sub
xor
rclb
dec
int
mov
xor
addr16
mov
adcl
mulb
bound
out
push
test
rclb
shr
subb
clc
lret
in
jl
sbb
pop
cltd
or
into
and
ret
pop
and
inc
call
outsl
fs
mov
jno
scas
xchg
push
or
push
cli
outsl
cmpl
or
insb
jae
jns
add
or
das
xchg
push
jbe
jecxz
or
arpl
scas
xchg
cli
xchg
mov
insb
or
push
cmp
jo
pop
cwtl
add
or
mov
pushf
out
mov
sub
pop
cli
add
mov
add
fistl
push
add
push
in
inc
mov
pop
pop
add
mov
ret
or
adc
insb
bound
hlt
pop
sbb
pusha
dec
push
arpl
sub
sbb
arpl
adc
push
test
outsl
mov
mov
add
out
in
imul
xor
je
xchg
adc
inc
leave
in
adc
movsl
xchg
sub
pop
fstps
sbb
jb
cmp
mov
aas
pop
ljmp
lock
adc
into
mov
jae,pn
pop
xchg
inc
mov
scas
fldl
lahf
dec
xchg
lods
iret
fwait
push
or
fistps
loope
aaa
xchg
mov
ret
jle
mov
jg
dec
or
fwait
push
int3
shrl
add
add
pop
mov
xor
lret
cmp
cmpsl
lcall
sbb
pop
push
mov
fldenv
in
cmp
sysenter
ja
pop
sbb
push
mov
fmull
lods
outsl
subb
mov
pop
mov
mov
lahf
pop
jecxz
stos
mov
test
ds
sbb
aaa
movnti
mov
enter
mov
fsubp
aam
mov
xchg
sub
imul
fisubrs
imul
ja
xchg
stc
pop
aas
js
push
cmp
add
inc
and
test
jp
mov
test
lcall
xchg
stc
mov
cmpsb
popa
call
sbb
aad
fs
std
push
push
fs
adc
add
push
push
xchg
addb
out
imul
shll
inc
test
mov
pop
inc
das
and
leave
in
sub
adc
xchg
addr16
pop
push
sub
sub
movsl
sbb
or
dec
es
inc
sahf
gs
add
xchg
sbb
push
out
shll
aam
cmc
xchg
mov
fldt
push
popf
sub
pop
and
lcall
loop
push
sub
lret
jecxz
push
test
jbe
fstl
ficompl
lret
stos
sbb
and
sbb
push
and
std
scas
cmp
ss
mov
add
mov
and
inc
in
repnz
inc
xor
cmpsl
fbld
shrl
test
arpl
in
int
aas
cwtl
imul
pop
pusha
imull
inc
lret
and
fcoml
mov
pop
and
fdivrl
sahf
push
cwtl
ret
or
jmp
lcall
push
in
dec
add
test
in
push
das
lock
cmp
hlt
adc
mov
push
xchg
clc
loope
lcall
shl
les
lods
js
sub
sti
fsubr
xchg
cltd
xor
fwait
push
loopne
insb
jmp
mov
mov
lea
jb
xor
dec
sbb
pop
or
mov
in
clc
pop
cmpsb
test
cmp
fimuls
sbb
mov
into
ret
loope
sub
cmp
adc
and
loope
jp
int
add
das
add
inc
fnstsw
inc
call
lods
push
fists
mov
push
dec
das
in
fs
pop
aas
fcmovu
adc
xchg
jmp
fildl
sub
or
lock
clc
pop
add
and
dec
mov
mov
lods
xchg
xchg
cmc
cmc
lahf
push
ja
mov
rorw
cli
push
sbb
xchg
dec
mov
xchg
or
xchg
pop
mov
mov
aaa
mov
scas
xchg
add
popa
or
enter
pop
push
cmc
popf
andl
pusha
out
mov
hlt
mov
add
decb
push
mov
mov
dec
pop
adc
ret
jbe
sub
cmp
jmp
aaa
pop
lahf
xor
mov
push
fs
out
dec
insb
xchg
inc
aas
cmp
and
imul
das
add
and
daa
insl
arpl
push
push
icebp
test
inc
inc
dec
repnz
add
scas
pop
addb
xchg
dec
popa
out
ficoml
mov
scas
dec
outsb
mov
mov
gs
rorb
jne
adc
ret
mov
mov
cltd
fwait
mov
jl
arpl
sbb
cmpb
sbb
pop
cmpsl
subl
adc
inc
dec
aam
push
mov
push
mov
adc
pusha
xchg
mov
enter
xchg
or
push
jmp
mov
fcomip
jecxz
mov
adc
dec
cmp
mov
addr16
mulb
and
lds
dec
xchg
jb
imul
divl
and
gs
or
dec
mov
std
mov
adcl
push
push
inc
jnp
sub
shlb
in
cld
xor
aad
mov
jecxz
or
data16
add
out
int3
std
pusha
aaa
rclb
jmp
out
add
shlb
push
and
aam
inc
cltd
cmc
mov
lods
cmp
pop
movsl
add
dec
shrl
push
mov
xor
pop
lret
outsb
pop
or
cmpsl
mov
mov
ljmp
mov
clc
dec
jno
pusha
inc
addl
movsb
leave
xchg
sub
data16
ret
jmp
jg
add
test
pop
fwait
push
jns
adc
push
cmp
dec
push
mov
pop
pop
mov
mov
int
dec
inc
stos
mov
pop
push
ret
cmp
cmp
insb
fistl
xchg
lcall
cmp
lahf
xlat
out
or
int
add
lods
ret
iret
inc
int
scas
mov
mov
jl
loopne
xor
in
mov
int
out
mov
adc
fistl
call
dec
ficoms
aad
jle
cwtl
incl
jmp
addr16
out
pop
cmp
xor
xchg
pop
jmp
cmp
mov
push
es
or
icebp
fxch
jle
and
mov
outsl
aad
cld
xchg
pop
cmpsb
cld
mov
jns
xchg
and
scas
adc
push
push
jle
add
out
or
jmp
inc
pop
and
loope
aaa
cmpsb
sub
cmpsl
das
test
mov
xor
xor
in
inc
rolb
inc
ror
push
clc
repz
cmp
testb
xchg
lea
sbb
inc
lcall
dec
mul
iret
das
jae
mov
push
xchg
push
mov
enter
xchg
stos
hlt
inc
movsb
cli
mov
outsb
jmp
aaa
adc
sbb
stos
adc
fisttpl
call
cs
dec
sahf
ds
sbb
dec
and
mov
push
jmp
fstps
stc
imul
push
aad
pop
pop
pop
mov
pop
xchg
sub
mov
movsl
add
dec
js
movzbl
adc
lret
mov
add
jbe
cmp
dec
out
dec
push
in
mov
outsl
jecxz
scas
movsb
insb
shlb
and
lahf
jg
nop
orb
packsswb
mov
push
cmp
sbb
jno
faddl
shrl
pop
jb
adc
enter
sbb
test
cmpsb
mov
lret
iret
icebp
jp
pop
hlt
mov
repz
mov
pop
imulb
daa
dec
pop
inc
hlt
std
call
sub
pusha
mov
movsb
mov
int
scas
insb
and
jae
es
ret
sbb
adc
popf
jmp
add
cwtl
out
in
sbb
test
sbb
mov
push
jg
nop
dec
test
mov
dec
inc
inc
xlat
jmp
ds
test
lock
out
in
jmp
popf
mov
push
or
or
cmpsb
adc
dec
mov
gs
pushf
aaa
inc
dec
inc
mov
or
icebp
in
mov
and
cmp
jecxz
or
and
sbb
js
mov
imul
xor
mov
xor
mov
cmc
or
cmpsb
push
jne
sbb
test
data16
xor
fstpt
shlb
cwtl
jb
out
addb
scas
addr16
xchg
mov
mov
aad
mov
xor
pop
or
idivl
push
jmp
sub
mov
xor
or
push
lea
repz
mov
sbb
stos
lahf
stos
pop
xor
cmp
fistpl
sti
mov
out
mov
pop
mov
stos
sbb
sub
sub
jno
aaa
popf
inc
or
jne
sbb
jbe
repz
and
in
test
add
push
pop
sub
and
mov
lahf
or
push
ret
adcb
dec
ret
dec
cmc
dec
dec
xor
aaa
fcompl
sbb
scas
movsl
mov
or
stc
add
mov
stos
xor
add
cwtl
xor
cmp
jns
push
dec
mov
pop
xchg
pop
cli
movsb
dec
jae
cmpsb
into
add
subb
dec
cmp
sarb
daa
and
lock
int
push
inc
in
pop
ja
jno
xchg
mov
scas
xchg
jo
mov
or
push
decb
out
repz
test
xor
and
adc
xor
std
and
dec
adc
aam
or
insl
jge
or
jnp
xchg
mov
mov
loope
fwait
push
inc
into
cmp
cmp
repnz
cmpsb
or
iret
enter
repnz
pop
fisttpll
jnp
andl
inc
idiv
and
xor
cld
sbb
push
js
and
adc
xor
lret
add
mov
movsb
xchg
test
negb
jns
inc
out
gs
inc
in
pop
pcmpgtd
cmpb
movsl
inc
mov
insb
and
leave
popl
in
test
xor
aas
push
push
insl
jl
ljmp
jge
lock
into
xor
push
push
shlb
or
roll
and
sub
xchg
out
sti
lret
fcoml
add
xchg
hlt
loopne
dec
leave
xor
add
js,pn
push
test
and
inc
push
rcrb
mov
add
mov
mov
adc
dec
mov
lods
push
jb
nop
mov
sub
dec
pop
mov
ss
fcompp
cmpsl
or
cwtl
stos
into
aaa
stc
xchg
sbb
pop
rcrl
mov
sub
sbb
test
mov
jo
adc
mov
imul
add
inc
mov
aad
cltd
mov
nop
mov
jae
in
cwtl
nop
mov
and
mov
insl
cmp
test
mov
cmpb
aad
movsb
pop
loope
push
testl
add
jbe
xor
dec
push
in
mov
mov
test
sub
lock
mov
fcomps
sahf
leave
sub
cwtl
mov
cwtl
cvttps2pi
and
mov
fcompl
je
cld
or
mov
adc
rcll
es
aam
jne
dec
dec
movsl
xlat
xchg
rol
out
jp
mov
mov
movsb
shl
icebp
call
mov
popa
xor
outsl
shl
cmp
sbb
cmp
outsl
mov
inc
icebp
enter
fisttpl
push
mov
fnop
imul
cmpsl
cmp
mov
dec
adc
jge
and
cltd
and
inc
pop
jg
pop
in
push
xchg
movsb
cli
lret
inc
imul
lods
stos
in
pop
gs
cmp
adc
lret
mov
xor
dec
jne
daa
rcr
pushf
cmp
jle
jo
mov
mov
in
sbb
mov
adc
mov
jns
sbb
ret
jg
adc
ja
fadd
ret
in
jnp
sub
add
popa
push
mov
test
cli
js
andb
adc
repz
hlt
mov
inc
xorl
mov
xchg
mov
mov
nop
inc
mov
adc
fcoml
cmp
into
push
aas
stc
pop
out
mov
push
scas
or
in
add
adc
mov
jno
test
mov
inc
jg
stos
push
das
test
mov
mov
push
inc
fistps
jge
shrb
cmpsl
imul
cld
shlb
mov
mul
inc
pop
dec
inc
aas
cmc
adc
cmp
mov
mov
pop
fmull
mov
mov
cwtl
repnz
arpl
pop
jecxz
setb
cmp
inc
fnstenv
sub
sti
xchg
xchg
fildl
mov
xor
ds
es
inc
mov
fistpl
xchg
dec
mov
add
and
test
sbb
xchg
scas
inc
mov
testl
sub
lcall
in
sbb
adc
mov
push
and
das
nop
fs
add
mov
or
insl
stc
rclb
mov
add
cli
rorl
call
jo
lahf
mulb
bound
pop
rcrl
es
add
and
sub
in
in
movsl
cmp
ret
mov
cmp
and
enter
cmp
insl
repnz
pop
sbb
adc
pusha
cltd
clc
es
push
cwtl
scas
inc
dec
cmpsl
adc
xor
or
xchg
cmpsb
jmp
cmc
push
mov
pop
xor
sub
sti
lea
or
repz
pop
mov
mov
stos
frstor
cwtl
jnp
sbb
fsubrs
xor
adc
mov
ss
mov
imul
jne
add
cmp
test
aad
jg
mov
shll
cs
outsb
mov
mov
cmp
mov
sbb
repnz
xor
sub
dec
lret
push
push
add
jno
xchg
std
sbb
les
mov
aas
repz
or
lcall
xor
sbb
mov
push
roll
mov
popf
mov
and
popf
in
jg
pop
mov
and
ret
dec
adc
mov
std
roll
pusha
clc
or
pop
mov
sub
cwtl
sub
pop
gs
and
cs
mull
mov
outsb
mov
loopne
and
in
rorl
cmp
jae
and
repnz
mov
rep
xchg
jg
lahf
jle
ja
fcompl
loope
push
sub
or
lods
adc
xchg
ret
mov
ljmp
mov
cmp
ljmp
in
mov
outsb
push
js
adcb
flds
rclb
mov
mov
into
out
stos
idivl
mov
iret
mov
cmpsb
sbb
rcll
ficomps
test
mov
fdivs
mov
mov
sbb
mov
or
jne
movsl
xchg
cmp
mov
popa
insb
xor
and
mov
push
loop
xchg
jo
je
or
rsqrtps
mov
mov
adc
mov
fbld
add
loopne
push
jo
rcrl
mov
xchg
sbb
add
frstor
dec
je
fnstenv
inc
test
cmpsb
lcall
es
push
enter
mov
pop
fisubs
adc
ja
jbe
ja
and
pop
jne
xor
xor
lret
stc
jno
aad
leave
cld
ljmp
call
pop
or
mov
cmp
adc
sbb
outsb
aas
cwtl
add
inc
sbb
outsl
jmp
lea
notb
adc
inc
in
sarb
fs
call
jg
movsl
xor
repnz
lahf
ss
fwait
add
scas
jle
or
adc
cwtl
lret
std
add
out
mov
adc
cmpsb
dec
mov
decb
ljmp
js
xchg
jle
xchg
andl
mov
dec
sahf
pop
iret
xchg
rclb
inc
fadds
adc
out
mov
mov
dec
leave
out
and
pop
lret
pop
cmp
or
push
imul
jmp
or
lret
add
test
ret
repnz
dec
jle
int3
fistpl
or
sti
add
sbb
lock
cmc
aad
mov
dec
push
testl
repz
das
clc
fildl
lret
sub
out
sbb
dec
stos
xchg
enter
pop
in
sahf
mov
inc
cmc
mov
movsb
or
sub
jle
and
mov
lock
pushf
sub
lcall
sbb
xor
xchg
or
lds
cs
sbb
arpl
and
jle
xchg
lahf
mov
ret
arpl
push
jp
ss
jg
loopne
inc
jle
mov
addr16
push
fbld
and
int3
push
add
inc
or
cmp
pop
je
mov
dec
jmp
pushf
cmp
jecxz
aas
sbb
lcall
out
clc
movq
sbb
addr16
sub
mov
jne
daa
jp
pop
sbb
push
mov
cltd
adc
mov
jb
fdivrl
pmaxub
shlb
adc
jp
std
mov
fwait
enter
mov
fnstsw
lcall
repnz
idivb
arpl
shrb
mul
add
cmpl
pop
fwait
push
xor
jno
nop
cs
pop
pop
mov
ljmp
pop
mov
mov
repz
gs
aad
jge
ljmp
jno
idivl
xchg
xchg
push
pop
sub
js
cwtl
or
jnp
or
std
insl
and
fcoml
or
nop
ficompl
aam
mov
imul
xchg
out
fstps
rorb
or
jns
aad
pop
das
fcmovnb
sahf
push
mov
loopne
test
bound
push
ss
scas
mov
imul
ljmp
mov
faddl
push
and
insb
sahf
add
xor
fistps
pop
push
dec
jle
daa
gs
pushf
dec
fbstp
jle
cli
pop
mov
call
cltd
fucomp
je
mov
sub
hlt
mov
orb
aaa
into
sub
mov
and
in
push
sbb
cmp
rcl
or
mov
xchg
les
sub
fnstsw
es
jmp
xchg
xchg
cmc
in
sub
cwtl
mov
shlb
jmp
adc
add
pop
pop
fmuls
sarb
aas
mov
jne
add
pop
adc
mov
cmp
dec
jns
rclb
fstpt
test
pop
mov
and
xchg
popf
adc
adc
push
insb
push
push
jge
push
jge
lds
sbb
pop
pushl
fwait
imul
xchg
dec
inc
xchg
aad
mov
ljmp
insb
cltd
das
in
stc
into
faddl
jb
sbb
repz
xchg
fs
cmp
or
shrb
inc
jae
inc
or
fs
push
shl
push
add
cmpsl
sub
cmp
outsb
sahf
dec
xor
shrl
das
add
test
mov
inc
ljmp
pop
insb
sti
pop
dec
jmp
ljmpw
push
cwtl
sbbb
sub
jmp
mov
in
les
mov
bound
and
fcompl
in
push
add
in
and
pop
xchg
ljmp
sbb
ficoms
or
push
jle
push
jbe
mov
das
add
outsb
mov
test
pusha
lret
push
xor
pop
orl
fs
pusha
dec
pushf
sbb
push
addr16
bound
sub
and
rcrb
jecxz
dec
jle
out
inc
jno
mov
int3
mov
xor
fs
incl
inc
ljmp
pop
mov
insb
outsb
and
adc
push
aas
repz
clc
jno
dec
adc
iret
sbb
leave
jg
shr
idivb
cmp
adc
cmpb
in
pop
dec
cld
mov
loopne
inc
loopne
lock
jl
adc
std
subl
xchg
sub
sub
jnp
stos
testb
test
inc
pop
push
jle
test
mov
jnp
aad
lret
setle
and
mov
mov
push
jbe
shr
push
mov
add
int
xchg
fistl
cmp
push
xor
imul
stos
ret
inc
fiadds
sub
popa
lds
in
iret
rorb
aad
mov
int
xor
jns
dec
and
fdiv
movsb
inc
loopne
pushf
cld
mov
loope
mov
ret
inc
out
fidivrl
inc
outsl
int
dec
mov
rclb
mov
mov
lret
fadds
sub
or
repnz
and
adc
insl
add
inc
sahf
repnz
sub
xchg
mov
loope
mov
stc
lret
cwtl
outsl
pop
enter
cmpsl
fiaddl
sbb
mov
test
cmpsl
jle
mov
fs
jno
scas
xchg
idiv
aaa
es
jg
jmp
push
mov
movsl
push
xor
fcoms
ljmp
dec
arpl
mov
or
cltd
hlt
fcoms
and
mov
pop
xchg
fcompl
fisttps
sahf
adc
daa
inc
cwtl
scas
jb
iret
dec
and
cmpsb
inc
cmp
loope
out
adc
test
xchg
add
mov
into
cmp
inc
dec
xchg
gs
out
mov
pop
fistpl
push
jp
divl
mov
popf
lcall
repz
xor
rcll
data16
dec
mov
cmp
ss
sarl
or
push
jecxz
jmp
cmp
imul
movl
and
in
jo
sub
add
pop
dec
ljmp
mov
test
js
or
sub
in
loop
pcmpeqw
and
or
sbb
cmpsl
mov
pop
inc
loopne
inc
adc
int3
call
jbe
cmp
cs
xchg
inc
aad
scas
inc
mov
repz
orb
mov
jle
in
addl
mov
mov
pusha
dec
sahf
lds
or
cli
fwait
mov
adc
test
leave
cmc
sub
sbb
push
in
imul
ret
rcr
sbb
jae
ja
mov
add
mov
xchg
pop
inc
adc
push
dec
lds
stc
inc
js
cwtl
add
sbb
in
lret
pop
divb
clc
dec
push
mov
jg
adc
cmp
aad
adc
in
pop
jmp
xor
and
push
or
fwait
pushf
pop
es
xlat
cmp
shr
sbb
mov
xor
mov
test
mov
push
pop
scas
std
add
lret
jl
nop
xlat
adc
cmpl
lea
or
jne
mov
mov
mov
je
cmp
mov
mov
insl
and
sbb
sbb
icebp
adc
mov
xchg
int3
pop
pop
xor
out
xor
and
pop
stc
lret
mov
outsl
popw
xorl
dec
in
mov
test
push
icebp
imul
popa
sahf
mov
stc
repnz
add
mov
pop
jns
mov
stos
dec
pusha
insl
imul
inc
and
mov
inc
aad
jl
xor
mov
std
or
pop
pop
out
jecxz
pop
dec
jns
pop
movsl
add
sbb
push
sbb
jmp
pop
push
cmp
xchg
fbstp
xchg
imul
mov
data16
lods
aaa
dec
es
int3
fs
push
dec
in
inc
mov
inc
shl
jecxz
cli
test
inc
pop
sbb
dec
bound
das
sbb
ja
pop
jbe
mov
jo
nop
mov
jecxz
ss
cmp
add
adc
cmc
adc
cmovs
mov
enter
and
hlt
adc
or
imul
dec
sbb
and
mov
mov
fucomp
pop
inc
ja
push
inc
fstpl
sub
add
jns
repnz
push
ja
movsl
loopne
aas
mov
jp
pop
and
dec
sbbb
addr16
pop
test
loopne
mov
call
stos
mov
push
xor
mov
push
out
roll
sarl
ljmp
adc
mov
xor
sbb
test
in
xchg
divb
cmp
xchg
out
into
and
fcmovnu
jae
or
ljmp
xor
fdivrl
xchg
out
mov
cmp
loopne
mov
xchg
xor
in
leave
outsb
sbb
ljmp
out
mov
add
insb
movb
mov
mov
or
push
cmp
stos
pop
shl
jmp
jle
inc
dec
mov
addl
mov
int3
pop
jecxz
push
bound
sahf
lods
ret
lds
fcoml
mov
mov
push
insb
inc
mov
aas
aas
dec
divl
or
inc
push
dec
jns
hlt
das
xor
sub
xor
fisttps
mov
cmp
lret
sub
rcll
lahf
mov
dec
xchg
inc
out
ret
aaa
lret
xlat
or
xchg
push
fmuls
dec
mov
cmp
mov
mov
mov
sbb
dec
lret
cmpsl
ss
xchg
mov
pusha
test
lods
movsb
fstps
push
dec
sub
xchg
sahf
aam
in
bound
xor
mov
xchg
jg
ret
add
adc
xor
cmp
inc
sub
cs
das
add
call
sahf
out
pop
scas
xlat
adc
mov
loopne
in
xor
mov
lahf
adc
mov
add
gs
loop
loop
imul
jae
mov
aas
push
bound
test
xchg
ja
outsb
cld
aaa
push
adc
xchg
sub
xchg
arpl
popf
movsl
sub
inc
popf
js
stos
stos
test
scas
or
cmp
cmp
or
lcall
daa
and
pop
imul
and
and
fisttpll
jp
push
jo
mov
insl
push
mov
mov
lcall
in
mov
std
and
test
ret
pop
out
xchg
lods
mov
out
call
into
aaa
stos
adc
adc
insb
add
jnp
out
fnstcw
and
popa
cmp
aad
jl
pop
dec
cmp
add
push
icebp
cmp
lods
lea
jo
add
or
jae
dec
xor
and
lods
cmp
lcall
jle
lods
jnp
xchg
jb
push
jl
ljmp
xor
push
pop
iret
sbb
and
in
mov
rcll
fcmovnbe
repnz
pusha
sbb
dec
inc
adc
add
dec
mov
push
xlat
fstl
mov
icebp
ret
idivl
push
repnz
and
mov
xor
add
and
fs
adc
cld
push
sub
arpl
test
add
sub
xchg
mov
sbb
jns
sbb
data16
mov
mov
sub
jmp
fsts
jmp
pop
lcall
nop
dec
testb
add
mov
mov
nop
jecxz
mov
cmp
mov
call
shl
aas
in
and
mov
mov
test
or
jbe
or
add
pop
test
roll
loopne
insb
inc
xchg
cli
pop
cmovae
test
adcb
out
stc
mov
hlt
pushf
call
sub
paddsb
pop
adc
and
stos
ret
mov
iret
push
nop
lock
dec
lods
cmp
or
pop
je
scas
int
sahf
imul
out
or
mov
adc
xchg
aaa
adc
mov
mov
rcrl
and
add
sti
jmp
sub
idiv
popf
jns
or
mov
pop
lret
dec
and
mov
mov
test
inc
sbb
jnp
dec
pop
mov
imul
dec
add
sbb
mov
push
pop
fidivs
cld
adc
sahf
sbb
fld1
jmp
imul
jmp
xchg
sbb
sti
mov
sub
fcompl
and
push
mov
pop
ds
loope
out
sbb
rorb
stc
xor
cld
pop
movsb
jbe
imull
ret
cmp
push
shrl
sbb
lahf
mov
fadd
push
fidivrl
and
es
outsb
sbb
or
sbb
fildl
xchg
sbb
std
mov
insl
mov
mov
push
in
xchg
fnstenv
cld
in
rcrl
cmc
clc
popa
cmp
xorl
aad
jmp
cmc
inc
push
mov
sti
jns
imul
es
adc
push
push
lret
adc
jge
addl
cmp
cmp
inc
mov
sub
mov
dec
roll
test
in
in
mov
push
jmp
stos
inc
sub
divl
in
mov
xchg
or
fstpt
shl
or
mov
lods
inc
loopne
pop
pop
xchg
jne
push
cmpsl
and
cmp
mov
cwtl
lds
and
ficoms
mov
mov
jecxz
lcall
cmc
ss
and
jo
push
mov
addr16
mov
jnp
jb
jg
xchg
in
push
sub
enter
fmuls
add
fsub
imul
add
jge
add
cwtl
lea
call
xchg
lds
outsb
xchg
sbb
cwtl
ret
popf
inc
movsl
cmp
pop
mov
mov
std
inc
in
xor
mov
insb
mov
or
add
gs
cmp
mov
xor
cld
inc
jb
sbb
ljmp
fidivrs
mov
sbbl
cwtl
stos
dec
add
fnsave
xor
sub
aad
mov
cmp
rcrl
add
pop
inc
mov
cmp
jmp
cwtl
lock
out
fisttpll
cmpsb
sahf
ret
movsl
dec
adc
or
mov
push
sbb
out
adcb
into
jbe
pop
sub
or
imul
test
lds
icebp
in
mov
xchg
iret
cli
jmp
or
mov
shlb
and
jg
fistpll
stc
inc
cli
lcall
lcall
outsl
inc
mov
popf
aas
sbb
movsl
lret
rcrb
sbb
mov
and
clc
xchg
sbb
ret
popa
clc
jg
pop
shll
adc
cli
sub
inc
sbb
js
popa
mov
inc
dec
sub
hlt
sub
test
scas
adc
fwait
iret
dec
addr16
push
aam
mov
cli
pop
ljmp
pop
scas
loopne
pushf
xchg
hlt
adc
jl
xor
test
pop
pop
add
in
cmp
sbb
inc
sbb
adc
xchg
pop
pusha
stos
add
xor
or
out
cwtl
dec
enter
mov
add
in
inc
jns
dec
sub
sbb
out
lods
addl
scas
inc
push
sarl
fldpi
fcmovne
jae
js
sbb
mov
bound
xchg
jae
push
xchg
imul
cmp
mov
sbb
sub
adc
push
add
test
push
xchg
xchg
mov
orl
jbe
push
or
fistpll
xlat
xchg
jg
loopne
xchg
mov
cmp
sub
xor
mov
dec
aaa
addr16
push
int3
rcrl
data16
adc
sbb
mov
shlb
xor
into
sub
jl
inc
lret
or
mov
dec
mov
jne
xchg
ret
sub
sub
jp
lret
rcrb
and
cmp
sbb
and
mov
and
lea
addr16
pop
scas
cmp
pusha
dec
in
stos
inc
dec
dec
pop
pusha
xchg
or
lods
mov
std
dec
adc
testb
xor
pop
mov
inc
in
dec
movsb
add
mov
insl
cs
xchg
loope
mov
fsubs
push
adc
outsl
cwtl
sarb
js
jae
jge
xor
xor
scas
inc
lfs
mov
sti
jmp
pushf
xchg
mov
adc
mov
add
in
push
add
lods
insl
add
test
add
push
sub
adc
lcall
test
aaa
xchg
int
shlb
mov
adc
mov
and
icebp
mov
jno
int3
mov
mov
jne
test
mov
insl
mov
jecxz
cmp
andl
jae
push
arpl
sbb
dec
and
gs
mov
pushf
pop
loop
and
push
mov
push
dec
mov
ficoms
iret
fsubrl
push
sbb
mov
lods
popf
add
xor
pop
fmull
scas
mov
lock
mov
fsubp
xor
jns
stc
loope
pop
rcrl
orb
or
sahf
dec
ficomps
sub
push
insl
xorb
repnz
popa
dec
cmpsl
data16
fildll
fisttpll
inc
fisttpll
das
stos
loopne
loopne
jns
ret
insb
fs
sbb
jle
xchg
and
shlb
mov
mov
cmp
sub
outsb
inc
push
jb
inc
fdivr
es
jbe
mov
push
cmp
aam
add
add
pop
orl
sbb
jmp
cmpsb
mov
pop
out
fs
pop
sbb
jne
push
cmp
pop
jb
push
jecxz
fwait
push
repz
lock
adc
xchg
fmul
aaa
pop
xchg
and
mov
sbb
jecxz
idivb
cs
xchg
sarl
ror
mov
inc
jecxz
mov
ss
cmp
out
push
ror
fsubl
push
add
cmp
add
test
pop
imulb
scas
and
add
leave
ljmp
sub
sbb
fsubrs
mov
mov
sbb
dec
xchg
sub
adc
mov
pop
test
and
jae
mov
test
test
xchg
pop
cmp
fs
fildl
cmp
mov
cmp
xchg
mov
cltd
test
push
sub
cmp
sbb
lret
mov
jp
out
mov
lcall
jns
outsl
out
pushf
rcll
in
popf
sub
bound
pop
das
pop
fldl
xor
lahf
mov
inc
push
sahf
es
cmc
dec
pop
mov
sub
and
fwait
in
add
dec
cmp
mov
dec
scas
jle
sarl
dec
inc
stos
pop
sbbb
aas
cmp
ret
mov
cli
aaa
sbb
test
cmp
pop
aam
xor
adc
mov
sbb
sbb
mov
mov
ljmp
mov
lret
imul
push
pusha
les
dec
cmc
insb
push
mov
js
inc
lock
lock
sbb
clc
inc
lahf
mov
icebp
dec
std
pop
mov
imul
aas
aaa
dec
xlat
sub
or
mov
loope
lcall
push
sub
aam
in
lock
mov
dec
mov
or
jge
pop
pop
pop
push
jne
jns
addl
imul
sub
jnp
aad
or
xchg
xchg
lods
mov
loope
inc
push
jecxz
sbb
sub
movsl
or
xor
std
popl
insb
ss
fs
mov
hlt
push
dec
jecxz
sub
sti
bound
rcrl
dec
adc
out
jle
loop
mov
lds
outsl
repz
ret
fiaddl
jp
out
mov
lret
xor
xchg
pop
push
mov
jp
mov
push
inc
popa
adc
in
outsb
lcall
cld
xchg
js
mov
cmp
in
push
test
jmp
push
notl
cmp
sub
roll
cmp
sbb
pop
mov
fiadds
cmp
jb
insl
xor
cltd
inc
push
or
lock
adc
sub
addr16
popf
fidivrs
add
js
push
jge
aas
mov
movsb
decb
fwait
mov
movsl
mov
xchg
popf
mov
inc
push
dec
es
icebp
push
test
ljmp
xchg
loop
sub
inc
xchg
leave
fcoml
into
dec
inc
add
ja
push
add
jmp
imul
xor
arpl
pop
arpl
jns
cmp
cmpsl
cmp
push
out
je
in
hlt
push
xchg
loop
das
dec
cmp
and
repz
orb
test
mov
inc
fnsave
mov
es
add
and
movsl
lret
test
push
cwtl
in
rorl
test
lahf
mov
mov
loop
ja
outsl
call
mov
into
cs
test
shl
adc
les
xchg
ljmp
fwait
and
xchg
inc
rcll
adc
lea
pop
sub
and
test
xorl
push
jl
add
loope
or
gs
or
cmp
xchg
xlat
mov
pop
sarl
sbb
jns
imul
test
stos
aad
cld
cmp
dec
test
stc
imul
popa
pop
rclb
xchg
mov
jne
leave
sub
push
xchg
jmp
jbe
nop
mov
cmp
push
rorb
mov
cltd
inc
and
sbb
scas
jle
xor
scas
xchg
lods
shrb
ljmp
fdivrl
addr16
pushl
mov
shlb
movsb
fistps
dec
fstl
ret
pop
push
pop
pop
jae
push
jnp
sub
push
inc
push
dec
nop
or
push
mov
xchg
popf
dec
jo
sub
adc
sarl
and
mov
outsb
subb
cwtl
pop
sbb
sti
aad
jmp
in
lods
iret
dec
dec
mov
out
pop
mov
cmp
in
out
add
add
popf
and
fstp
mov
shl
je
repz
jg
fs
xor
test
mov
add
clc
inc
pop
lds
sub
mov
dec
push
ja
outsb
inc
mov
out
sbb
push
pop
lcall
lods
mov
ror
mov
sub
mov
dec
scas
and
mov
test
in
mov
lahf
popf
iret
into
int
in
dec
dec
inc
in
push
scas
jnp
shlb
shll
or
lock
pop
push
add
mov
es
ja
cmp
adc
mov
jle
xlat
cli
out
cld
call
into
mov
pushl
insl
outsb
mov
aas
scas
sbb
sahf
push
jg
dec
mov
jae
addr16
cwtl
out
adc
stos
cmpsb
js
stos
lds
and
pop
pop
dec
mov
clc
adc
and
pop
mov
les
es
mov
sbb
push
push
fs
call
aaa
pop
xor
movl
lahf
cmp
xchg
mov
dec
in
repnz
cmp
scas
pop
aaa
das
adc
mov
mov
mulb
dec
push
pusha
aam
mov
push
mov
rol
dec
dec
mov
repz
pop
lret
add
aam
jb
add
cmp
cli
outsb
bswap
lret
insl
fidivl
bound
jb
cmp
lods
sub
mov
leave
loope
mov
mov
shlb
shll
jecxz
xchg
idiv
shl
cwtl
pop
sub
dec
lahf
mov
sub
sbb
push
adc
cld
and
in
or
jo
or
ljmp
mov
adc
inc
test
orl
sub
xlat
jl
ljmp
xchg
and
fwait
into
out
cs
push
js
push
hlt
push
sti
adc
hlt
jecxz
jp
sub
mov
xchg
pop
cmp
pop
jbe
out
push
pop
cwtl
xchg
mov
sbb
les
cmpb
incl
mov
ret
scas
push
pushf
dec
lock
in
call
jmp
jcxz
add
fbld
mov
call
inc
hlt
dec
push
test
xor
int3
xchg
jp
or
add
pop
dec
jp
mov
mov
rcr
mov
mov
sarl
mov
jb
mov
into
lret
push
dec
xchg
push
dec
xchg
dec
in
inc
enter
add
mov
push
xor
jb
inc
shr
negb
mov
pop
bound
shll
dec
ret
icebp
xor
sub
or
pop
or
repnz
in
cmp
xor
addb
out
adc
cld
nop
nop
loope
mov
pop
cmp
gs
cmp
inc
dec
inc
rclb
xor
arpl
fadds
xchg
push
cltd
mov
inc
enter
js
lret
fdivl
push
aas
mov
adc
fisttpll
sbb
mov
push
pop
outsb
pusha
sub
or
sub
mov
jne
push
mov
push
fldl
sub
pop
pop
pop
xchg
jg
outsb
jbe
cli
fdivrs
iret
insl
mov
push
int
and
pushf
dec
mov
sub
and
inc
xchg
addr16
sub
pushf
pusha
pop
insl
orb
xor
and
outsl
scas
jbe
or
sub
imul
jnp
mov
jmp
aas
xor
mov
outsb
mov
lods
lds
out
or
sarb
out
pop
and
movsl
and
cmp
and
cmp
adc
fiaddl
pop
inc
jecxz
pushf
fisttps
movb
and
push
mov
loope
out
andnps
movsl
jecxz
xor
sub
outsl
ficomps
ljmp
xor
or
fildl
push
arpl
sub
inc
das
pop
mov
lret
std
mov
xor
inc
dec
iret
je
and
mov
xchg
ja
cli
int
mov
stc
xchg
xor
fdivl
mul
jbe
loope
add
sahf
ret
rcrb
pop
dec
cmp
ret
fwait
mov
xchg
xchg
push
mov
jae
movsl
lret
xchg
adcb
push
arpl
imul
xchg
insl
xor
les
arpl
pushf
pop
test
hlt
ret
arpl
adc
add
xchg
push
in
and
push
adc
push
jl
jp
push
andb
inc
xor
js
inc
cmp
or
stos
adc
jae
aad
shrb
enter
pop
pushf
popa
xor
xor
test
xchg
gs
lret
les
jp
aam
pop
xchg
mov
lds
in
adc
jb
adc
rorl
stos
daa
push
cmp
push
aaa
xor
xchg
add
pop
call
mov
sarl
aaa
in
shlb
cs
add
push
ficomps
or
inc
inc
push
cmp
test
adc
dec
jno
push
xchg
call
rclb
cwtl
repnz
lods
sbb
fildll
push
mov
or
scas
adc
pop
roll
orb
pusha
mov
fstpl
sbb
xchg
inc
into
bound
jle
or
jmp
es
mov
aaa
bound
in
data16
mov
adc
add
loop
aad
enter
inc
stos
nop
repnz
mov
jg
dec
addr16
push
adc
pop
mov
dec
scas
mov
int3
xchg
xchg
enter
adc
lcall
jl
jae
out
push
fwait
cmpsb
mov
out
jnp
in
pop
jecxz
xor
push
daa
fdivp
fnsave
test
sbb
add
cld
push
cmc
push
mov
cmp
jecxz
pop
xchg
popa
lock
cltd
fbld
xchg
jnp
leave
cmp
or
pop
ss
inc
popa
aam
sub
lret
jno
lock
popa
into
mov
adc
mov
push
out
lret
inc
stos
inc
jbe
std
inc
dec
sahf
and
aaa
ljmp
insl
cwtl
jae
pop
jge
lock
mov
sub
sbb
in
js
icebp
cmp
std
scas
out
jnp
mov
dec
adc
scas
cmp
add
mov
inc
ret
jp
or
in
or
fyl2xp1
xchg
or
jno
cld
sbbb
lahf
or
call
ljmp
sbb
filds
push
lods
pusha
push
push
imul
jecxz
push
lret
pop
xor
adc
int3
or
adc
mov
popf
daa
cmc
xor
sbb
jbe
cmc
add
jg
sub
xchg
jb
repz
push
or
mov
cld
ja
push
dec
cs
das
push
push
cmp
imul
loopne
test
js
push
bound
popa
dec
pop
lds
test
jbe
das
cmp
inc
inc
test
mov
stos
mov
or
sbb
mov
pop
xchg
pop
pop
push
sub
sbb
insb
cli
movsl
xor
jno
fldcw
adc
loopne
ss
add
cmpl
sbb
xchg
and
rolb
daa
sti
into
inc
xchg
out
push
fistps
in
shl
add
in
pop
incb
push
gs
push
push
fidivl
push
fmull
mov
cmp
lock
sbb
push
sbb
push
sub
mov
jne
cmpsl
lods
fmul
add
jnp
sbb
cmp
icebp
es
dec
popf
out
cwtl
fwait
sub
cli
push
insl
and
push
sub
jecxz
ljmp
sti
pop
and
test
jns
or
add
and
jae
rolb
fmulp
cmp
ret
xlat
add
cltd
inc
cmp
in
mov
xchg
xor
test
sti
cmpsb
lcall
or
xchg
or
add
loope
and
addr16
mov
dec
xor
aam
pop
jl
jge
mov
in
test
dec
xchg
je
and
negb
sub
cli
pop
and
imul
cli
push
mov
mov
pop
arpl
jmp
inc
xchg
cmovae
xchg
mov
sub
dec
inc
cwtl
pop
sub
push
mov
mov
cmpsl
cmpsl
cmp
pop
fidivl
or
fucomip
sahf
mov
mov
imul
mov
mov
or
jo
push
loopne
lods
and
sbb
xlat
mov
pusha
aas
aam
imulb
mov
pop
pop
push
rorb
sub
jecxz
mov
in
sbb
mov
jb
flds
sbb
icebp
data16
mov
mov
insb
call
insl
or
lea
and
sub
push
mov
stc
cmpsb
mov
dec
push
jl
pop
addl
pop
sub
sbb
arpl
addb
out
dec
mov
xor
in
mov
dec
loopne
ljmp
xor
out
outsl
adc
je
mov
jmp
xchg
jo
mov
dec
stc
add
pop
ror
sarl
cmpsl
icebp
mov
jne
push
jle
mov
cli
sahf
outsl
cmpsl
lods
cmp
inc
int3
daa
addr16
arpl
mov
sub
lret
pop
insl
cmp
or
fucomi
out
mov
xor
mov
lods
ret
in
out
gs
fwait
jns
out
dec
loop
dec
insl
push
mov
pop
lock
pop
hlt
lcall
xor
mov
push
ret
out
out
ret
lcall
push
inc
repz
xor
loope
xchg
scas
daa
iret
jo
rcrl
stos
ret
mov
sti
mov
enter
dec
movsb
mov
add
in
jp
mov
pop
sub
xchg
mov
int
jmp
push
aaa
adc
sub
jmp
daa
int3
xor
out
sbb
je
mov
outsl
pop
shrb
dec
pop
sub
cmp
sbb
cmp
iret
mov
mov
fcmovnb
or
xchg
lret
into
repnz
jl
add
jne
jns
ljmp
push
shll
push
cmp
cmc
xchg
testl
lods
mov
fmul
push
loope
arpl
adc
cs
push
mov
mov
jp
les
fldenv
inc
in
push
add
ss
xchg
adc
push
bound
mov
rcr
pop
xchg
jno
or
movsb
adc
idiv
xchg
and
pause
pop
sbb
or
in
cmp
cmp
stos
push
jp
pop
pop
sbb
cmp
jbe
lret
add
cmp
aaa
jbe
push
sti
jl
mov
or
jne
sbb
push
bound
rcrl
cld
jb
inc
inc
lcall
iret
out
pop
stc
fiaddl
pop
xchg
push
sub
rcrb
push
in
mov
leave
jle
push
adc
scas
popf
out
fimull
sti
jmp
or
lahf
dec
popf
cmp
and
mov
sub
int
push
mov
repz
sbb
cmp
insb
call
sub
movsl
mov
fcompl
insl
ret
cmp
ss
adc
ja
fldl2e
mov
mov
pop
jae
jns
mov
jle
or
lea
dec
push
adc
and
mov
scas
push
xchg
mov
jnp
mov
jp
inc
call
cltd
sub
cs
cmc
mov
adc
mov
out
inc
scas
shll
jge
push
rorb
sarl
aam
mov
loop
cli
pop
fmul
xchg
pop
rclb
sub
aaa
adc
push
pop
pop
mov
push
stos
clc
xor
notb
aaa
pop
js
jnp
inc
push
push
scas
int
shll
into
test
or
mov
jl
xchg
push
call
xchg
jg
rclb
lret
adc
dec
subb
xchg
scas
dec
out
mov
mov
inc
xlat
in
outsl
push
hlt
sbbb
into
rcr
hlt
xor
lods
fldcw
cmpl
jge
sahf
mov
adc
xchg
mov
mov
das
mov
xchg
adc
inc
cmpsl
and
mov
add
push
cmp
ret
sbb
in
mov
mov
sbb
mov
cltd
inc
dec
jns
aaa
pop
sub
adc
jecxz
loope
sarb
sub
adc
scas
loope
jmp
jle
pop
fcoms
cld
mov
aam
xchg
ret
mov
mov
push
rclb
jl,pn
cmp
in
or
mov
rorb
test
or
out
cmp
sbbb
xor
int
fwait
push
lahf
pushf
jle
xor
pop
mov
into
xchg
pop
and
dec
mov
dec
xchg
dec
add
insb
aad
dec
jne
nop
orb
sub
adc
fstps
pop
inc
rolb
aad
in
add
lods
fldenv
icebp
or
xchg
xor
je
hlt
sbb
inc
mov
cld
ja
and
fdivrs
or
mov
rcpps
cmp
and
mov
call
xchg
push
push
push
push
mov
lds
mov
mov
out
lret
scas
jnp
ljmp
pop
add
push
cmpsl
mov
sub
outsl
shll
aam
lds
mov
mov
jmp
mov
test
lcall
js
cmp
mov
lods
or
adc
push
scas
push
jne
cmpsl
or
sub
push
dec
lret
popa
je
sarl
mov
les
clc
xor
addl
negb
popa
adc
test
jmp
pop
mov
negb
inc
mov
cmpsb
xlat
xor
and
fcomp
mov
test
jne
add
sub
mov
pusha
sbb
and
inc
mov
inc
jb
sbb
xchg
lret
jmp
imul
cmp
test
dec
push
dec
in
ss
js
mov
addr16
push
aas
pushf
mov
xlat
mov
adcb
pusha
mov
cmpsb
cmp
mov
cmp
scas
sbb
aas
call
hlt
daa
push
and
xchg
push
mov
loop
pop
shll
mov
xchg
lret
jge
shlb
sbb
jmp
sbb
cld
mov
sbb
adc
lahf
xchg
ss
xchg
rolb
ja
ret
iret
ljmp
or
adc
in
test
adc
rclb
int3
and
aaa
loop
es
ljmp
pop
jmp
popa
push
jmp
jb
or
mov
mov
jecxz
dec
pop
push
cmpsb
sub
dec
push
sar
mov
mov
movsl
add
js
adc
ljmp
mov
dec
fcoms
rclb
rol
mov
pop
cli
addr16
pop
xchg
idivb
add
pop
orl
xor
cs
cmp
push
pop
jo
enter
fwait
sub
add
mov
dec
xor
fstpl
addb
pop
outsl
iret
mov
bound
fsubrl
mov
rolb
and
sub
push
cs
lcall
das
lret
popf
enter
mov
jl
pop
push
mov
jle
xchg
mov
add
lods
lds
jno
push
mov
dec
cltd
mov
fimuls
fistpll
or
push
mov
jle
push
sub
xor
and
inc
xchg
xchg
and
fs
pusha
sbb
movsb
jle
lods
stos
sub
pop
es
push
movsb
in
adc
cmp
ljmp
into
cmp
je
cmp
xchg
out
insb
iret
and
inc
inc
sbb
test
pop
jle
int
mov
inc
loopne
loop
xchg
mov
fucomp
movsb
push
call
bound
mov
popl
out
dec
stos
or
pop
mov
xchg
adc
lret
cmp
in
inc
cmp
jecxz
inc
lods
push
cmp
arpl
in
or
testl
push
sahf
push
loop
and
dec
je
mov
fwait
lea
jae
scas
data16
jg
test
push
sub
sub
xchg
mov
in
insl
inc
or
leave
es
dec
or
lahf
sbb
das
test
insb
and
xor
in
vmovsd
adc
inc
sbb
jno
push
or
icebp
imul
scas
lcall
sbb
mov
add
fdivl
jne
dec
xchg
cmp
jmp
stos
add
mov
and
cltd
mov
fs
jb
insl
adc
add
loop
sbbb
rorb
ja
fdivrl
inc
mov
out
orl
pop
or
pop
push
lret
sub
or
stos
lret
push
jmp
mov
pop
std
inc
and
mov
mov
daa
xchg
std
lcall
repz
or
imull
mov
pop
sub
ret
stos
cli
aam
push
cmp
gs
aaa
mov
jecxz
outsl
out
pushf
pop
shrl
scas
xor
das
in
push
ds
test
xchg
sahf
ret
push
mov
jae
in
fstps
int
jl,pn
popa
push
and
ficomps
adc
ljmp
daa
ret
mov
sbbb
gs
dec
notl
mov
std
cmp
and
ret
push
movsl
xor
icebp
scas
adcb
push
sub
cs
adc
add
lea
scas
aaa
insb
int
xor
jge
cmc
mov
push
scas
inc
sti
sbb
and
fistpl
adc
es
pop
push
mov
lods
ret
dec
imul
mov
orl
addr16
inc
jnp
test
fwait
cmp
jbe
xor
or
jb
imull
sbb
movsb
mov
dec
xchg
mov
inc
inc
sub
mov
xlat
stos
cwtl
and
cmp
mov
sub
fldl
xchg
ja
cld
daa
lods
xchg
inc
mov
push
pop
mov
in
nop
leave
or
je
stos
movsl
fcoml
repnz
or
fistpl
xor
sub
aas
or
push
sub
in
jmp
hlt
xchg
imul
dec
iret
test
test
hlt
or
sbb
imul
out
add
and
sub
jp
cld
outsb
or
mov
outsl
test
scas
lahf
test
ds
cli
inc
jg
hlt
jnp
sbb
cmp
sub
xrelease
pop
adc
xor
roll
pop
stc
xor
enter
adc
jmp
mov
cmp
mov
inc
adc
fbstp
sbb
rol
nop
int
test
bnd
in
aad
mov
add
or
out
in
mov
sbbl
stos
int
dec
jns
sub
sbb
adc
inc
cwtl
leave
mov
jne
cs
mov
ljmp
pop
std
subl
inc
in
ret
push
xor
scas
cmc
mov
cwtl
jge
ffree
loop
pop
clc
push
pop
fidivl
or
insb
xor
sub
sub
xchg
mov
add
xchg
out
addr16
xor
xor
pop
repnz
addr16
fnstenv
mov
sbb
daa
test
adc
mov
in
sub
mov
sub
or
jbe
roll
jg
mov
dec
xor
push
fistps
sar
ja
pop
out
out
in
dec
leave
jne
mov
shl
cmp
cmp
inc
adc
std
cmp
sub
push
push
xchg
in
aaa
pop
aas
push
lods
add
jp
test
lods
push
int
cmpsl
dec
lods
in
test
inc
dec
in
cltd
repnz
pop
jl
lahf
mov
shlb
xchg
pop
stos
xor
add
inc
mov
jnp
sbb
add
xor
test
dec
jg
xor
in
add
fcmovu
push
mov
add
mov
and
dec
insb
add
cmp
mov
dec
enter
idiv
addr16
repz
xchg
jae
dec
sbb
insb
pop
sar
mov
pop
outsl
push
pop
or
test
int
push
push
and
push
xchg
dec
mov
push
add
ss
dec
jns
mov
in
cltd
lods
lret
in
das
and
xor
push
dec
out
xor
jb
outsl
cmp
sbb
cmpsb
dec
add
adc
insl
ret
sbb
cli
sbb
ret
mov
cmp
add
and
fbld
ficompl
lods
lahf
lods
sarl
into
mov
xchg
mov
xchg
mov
std
jge
jb
mov
sub
xchg
add
mov
lahf
out
mov
push
sbb
stos
xchg
je
mov
into
xchg
cmp
mov
push
xlat
inc
loopne
add
inc
lahf
jo
xchg
out
mov
inc
daa
inc
test
cli
in
jg
push
stos
jne
jge
divl
inc
pop
inc
ret
dec
dec
popf
adc
xchg
mov
fwait
pop
or
ja
mov
cli
jp
leave
aas
cli
rorl
xor
js
fldt
fists
imul
jb
push
call
xchg
pop
fimull
mov
aad
push
inc
mov
inc
jnp
inc
in
adc
lods
push
mov
xchg
loop
inc
insl
adc
xor
xchg
push
rcrb
into
mov
mov
pop
ret
test
cmp
sarl
cmpsb
aam
xchg
fnstsw
pop
lock
sbb
shrb
mov
ja
les
xlat
mov
and
or
popf
or
out
sub
push
inc
pushf
push
hlt
insb
cmpsl
ret
repz
mov
adc
mov
pop
in
cmpsb
addl
add
pusha
insb
cmp
in
jp
jl
stc
xchg
ret
pop
rclb
sub
mov
pop
ss
lahf
add
xor
mov
and
decb
arpl
adc
mov
movsb
fisttpll
cmp
and
shrb
add
push
mov
cmp
sub
and
lahf
sub
mov
push
push
mov
ja
push
repnz
adc
outsb
adc
movsb
mov
push
jbe
jecxz
sbb
testb
ljmp
test
jle
mov
mov
and
inc
cmp
fsubs
repnz
lahf
mov
leave
insl
inc
clc
xchg
xlat
sub
mov
push
sbb
stos
sub
pcmpgtb
mov
jge
jae
inc
ficompl
out
sub
incb
lret
mov
pushf
xchg
mov
xor
and
ljmp
sbb
icebp
push
aad
outsl
mov
mov
and
add
xchg
dec
fsubs
jg
add
mov
movsb
xchg
mov
orl
fstps
orl
and
push
lret
in
cmc
jl
fld1
imul
faddp
mov
pop
enter
xchg
iret
dec
in
cmpsb
sbb
push
add
adc
addr16
pop
push
xlat
enter
into
outsl
in
insb
cmpsl
cmp
fsubp
add
aas
mov
pop
jnp
inc
add
fstl
fbstp
and
sbb
sub
xor
enter
push
div
mov
dec
xchg
xor
cli
xchg
pop
shrb
shll
imul
in
enter
enter
xchg
loop
jns
inc
mov
pop
and
adc
cli
push
dec
popa
hlt
pop
xor
jg
ret
add
pop
mov
nop
push
cli
popf
test
sbb
test
inc
jae
xor
call
push
repz
lahf
xchg
or
rorl
jo
push
lret
pop
sahf
out
adc
mov
xorl
fadd
popa
push
ljmp
and
mov
mov
adc
adc
les
and
cmp
aad
mov
lds
pop
xlat
and
adc
data16
fisttps
nop
mov
lock
ds
lea
fwait
repz
or
pop
pop
bound
stos
mov
mov
mov
jne
mov
mov
or
mov
mov
fwait
out
sbb
in
jl
mov
in
mov
inc
ret
lret
nop
mov
nop
movsb
add
fsubs
imul
jbe
in
inc
inc
xchg
in
mov
aam
andb
in
ss
lret
cltd
jge
jge
scas
mov
stos
sub
inc
lds
inc
or
mov
gs
cmp
in
and
sbb
ja
mov
aaa
es
jnp
sbb
adc
pop
or
cwtl
nopl
andb
sahf
test
cltd
push
dec
sbb
jnp
add
or
mov
ds
test
std
aad
pushf
sub
add
andl
aaa
push
loopne
push
mov
xchg
dec
hlt
das
fwait
das
add
push
push
testl
xor
scas
xchg
push
cmp
cmpl
jo
cmc
xchg
push
repnz
out
cltd
mov
pop
gs
sub
std
loope
mov
xchg
xchg
jle
lods
or
popf
adc
fiaddl
or
xor
xor
test
and
push
cli
lret
adc
sub
pop
jne
xor
mov
fs
mov
fidivrs
and
fdivl
rorl
or
xchg
sbbb
jns
adc
jge
cltd
mov
ljmp
jmp
ret
and
add
scas
stos
out
jmp
in
aad
mov
mov
ja
push
bound
int
mov
daa
dec
sti
mov
mov
mov
add
xor
or
mov
loop
adc
ret
test
nop
mov
add
cwtl
test
aas
mov
shll
cltd
mov
sahf
icebp
cmpsb
adc
fidivrl
adc
add
fxch
inc
jne
sub
lock
imul
and
sub
popa
into
xchg
mov
mov
xor
cmp
lods
lret
scas
lret
pushf
pop
out
mov
sbb
push
test
mov
xor
xor
in
add
xor
scas
add
sub
pop
push
fdivrl
sbb
outsl
mov
push
cwtl
adc
jns
pop
xorb
iret
cmp
sar
in
leave
xor
pop
scas
int
lock
out
sub
shl
adc
test
push
cwtl
adc
mov
cmp
mov
scas
mov
mov
ret
ja
outsb
sub
fistpl
or
lahf
hlt
cld
js
and
dec
lret
fwait
adc
mov
push
das
ret
insb
repnz
jb
repnz
mov
les
enter
jmp
push
into
icebp
je
iret
cld
mov
nop
jl
inc
cmpl
and
mov
inc
mov
push
xrelease
cmc
dec
xor
jo
push
repz
xchg
mov
nop
das
push
jp
cmp
xor
mov
xor
cmc
iret
pop
stc
sahf
jge
jb
insb
inc
popa
xchg
dec
ja
and
adc
mov
int3
or
and
or
add
sub
mov
outsl
mulb
xchg
and
in
and
das
in
ror
stos
addr16
mov
sub
push
mov
sbb
rcrl
sbbl
call
dec
into
mov
jbe
into
jmp
and
xor
jge
mov
jp
insb
popf
mov
mov
push
mov
imull
data16
std
push
sbbl
or
loopne
jne
xor
out
jne
mov
movsb
fdivrs
inc
xchg
stos
jg
lret
mov
jecxz
addr16
jmp
pop
cld
testb
insb
sub
jmp
add
popf
imul
push
jecxz
push
bound
jo
xchg
cmp
xchg
push
ljmp
push
orb
ss
push
lods
push
sub
jp
or
jg
jl
test
pop
negl
jae
and
dec
call
pop
mov
nop
nop
clc
ds
push
sub
mov
and
add
ret
sub
push
pop
mov
int3
fwait
pusha
push
mov
dec
push
pop
xchg
push
mov
cs
cmp
ficomps
dec
jns
jge
mov
cld
xchg
adc
inc
cmp
push
pop
int
sub
movsl
repnz
ret
pusha
or
aad
outsl
mov
fcom
sbb
cmp
not
outsb
in
inc
xchg
inc
pop
or
jl
cmp
push
push
repnz
frstor
cs
push
lock
sub
shll
sbb
adc
add
adc
xchg
jb
imul
mov
int3
inc
xor
or
fcoms
pop
xor
adc
stc
call
mov
jae
pushf
sbb
cli
jno
arpl
mov
pop
jno
pushf
int
repz
leave
das
notl
push
pop
fsubrl
dec
jge
xor
mov
pushf
ljmp
out
filds
mov
adc
pop
add
xchg
mov
call
decb
pop
push
ds
adc
jle
mov
dec
sub
inc
ljmp
cmc
repnz
dec
incl
adc
leave
idivl
fwait
cld
inc
lods
sub
lock
sbb
mov
dec
jbe
outsl
or
xlat
sti
jne
dec
xor
push
jnp
dec
test
gs
cld
pop
cmc
call
sahf
fs
dec
fidivrs
fwait
scas
lret
cmpsl
pop
jmp
adc
leave
insb
jo
mov
loop
or
cmc
and
jbe
xor
push
test
into
add
test
iret
add
fwait
test
call
push
pushf
stos
rcrb
nop
pop
adc
mov
stos
push
jns
repnz
inc
or
sahf
push
sbb
into
orl
pop
addr16
jo
aas
scas
mov
sub
fisubrs
xor
xchg
shll
lea
loop
inc
call
jno
fbld
mov
inc
test
add
pop
mov
lds
pushf
sbb
mov
xor
push
imul
jbe
cmp
or
leave
in
test
lea
adc
aam
push
xor
stos
dec
xchg
ss
add
out
dec
mov
mov
fcompl
or
mov
enter
adcl
test
insb
stos
pop
push
dec
loop
aam
sahf
movsb
scas
loopne
pop
or
cmp
jp
insb
add
xchg
push
inc
dec
fcomps
dec
mov
pop
out
or
fwait
dec
pop
out
cwtl
dec
sbb
mov
cmpb
mov
loopne
xor
scas
aam
test
mov
andb
fnstenv
dec
xorb
jae
nop
or
into
mov
xchg
cmpsl
adc
bnd
add
xchg
es
lcall
inc
sub
push
dec
add
jnp
movsl
pop
fwait
lock
pop
imul
jl
dec
mov
mov
jae
js
xchg
cwtl
pushf
test
adc
mov
lds
ret
push
pop
fisttps
bnd
test
std
xlat
ret
push
jbe
mov
jmp
lods
adcl
push
push
outsl
out
mov
sub
pushf
aaa
rorb
mov
dec
sub
mov
andb
xor
xchg
inc
outsb
lods
cmp
inc
rcrl
inc
mov
shlb
inc
das
inc
push
mov
dec
pop
jge
jno
push
jecxz
mov
cld
mov
lret
int
or
mov
mov
lahf
jns
cwtl
movb
pop
inc
and
or
lret
xor
das
push
adc
sub
shrl
push
dec
fisubrs
out
aam
stos
out
out
es
testl
inc
inc
sbb
push
jo
test
fcomps
inc
jne
imul
mov
sub
cmp
or
inc
lods
adc
mov
ret
xchg
lcall
movsl
jmp
iret
inc
sub
mov
dec
lock
fsubrl
dec
jecxz
jbe
out
push
popf
dec
cwtl
add
call
fiadds
popa
xchg
sbb
fidivl
and
xchg
rcll
sbb
adc
sbb
nop
dec
pop
mov
cmp
cmpl
sub
daa
mov
stos
in
sbb
out
sbb
leave
xor
mov
jp
lcall
les
lea
lock
inc
test
mov
stc
add
add
pop
or
sbbb
inc
mov
std
add
push
insb
jmp
cwtl
fmul
rorb
gs
inc
pop
mov
test
xchg
stc
mov
je
dec
jo
gs
sub
push
sub
add
mov
out
mov
or
jmp
push
aad
sbb
pop
imul
mov
inc
mov
adc
mov
sub
stos
leave
outsb
in
cltd
push
shlb
sarb
cmpsl
out
jnp
mov
mov
sbb
sbb
pop
daa
popf
lcall
mov
mov
mov
pop
add
out
nop
je
not
outsl
ret
push
hlt
pop
pop
jne
sbb
sti
xor
outsl
pop
lods
adc
test
cmp
mov
mov
inc
jecxz
sbb
xor
shll
imul
int
mov
pop
pop
frstor
cmpl
lcall
and
pusha
int
popf
dec
iret
jge
sub
adc
jp
into
cmp
aad
stos
mov
and
push
push
fadd
shrb
frstor
xor
dec
cmp
pop
lods
or
push
jo
jo
sbb
dec
mov
mov
add
inc
push
jns
pop
fsub
jne
and
pop
xor
and
push
pop
enter
lds
outsl
mov
dec
pop
xchg
xchg
xlat
aaa
add
xchg
ds
lahf
xchg
daa
inc
cmpsb
movsl
push
dec
shufps
sbb
sbb
scas
pop
clc
mov
sbb
sbb
jle
nop
loope
adc
dec
cmp
dec
iret
sbb
lcall
mov
mov
lcall
aas
int
add
sub
xlat
mov
dec
popf
mov
daa
rcrl
fs
or
xor
mov
pop
sbb
and
push
mov
mov
jbe
mov
adc
jno
fisubl
testb
aad
scas
std
bound
hlt
pusha
dec
xchg
pop
inc
int
push
mov
not
ret
iret
test
jbe
or
xlat
loope
or
scas
add
ret
sub
movsl
test
xor
add
cmc
cmpsl
or
and
insb
hlt
cmp
push
ds
xor
jne
push
outsl
dec
inc
lock
fmul
sub
stos
aaa
popa
mov
cmp
lret
xchg
lahf
inc
push
jo
jle
or
cmp
and
sahf
inc
lea
adc
mov
cmp
jp
movsb
cmp
mov
pop
test
jo
or
cmp
inc
push
repz
outsl
xor
push
inc
xor
sahf
pop
sub
testl
inc
out
js
lods
or
cmc
inc
mov
cwtl
push
xor
mov
pop
pop
mov
mov
xorb
popf
pop
xchg
dec
ss
mov
pop
hlt
int
inc
or
adc
rclb
push
inc
xlat
adc
cltd
lods
insb
bound
push
mov
scas
in
mov
aas
int3
dec
popfw
add
jb
inc
pop
aaa
iret
mov
xor
lahf
xchg
add
shll
jo
cmpsl
adc
cs
sub
shll
outsl
mov
addl
mov
inc
or
pushf
add
sub
cwtl
sub
sub
add
int
dec
hlt
clc
or
inc
sub
adc
sarb
sti
add
mov
jne
pushf
shll
add
cld
xchg
or
inc
mov
or
xchg
sar
jae
sub
jp
push
jg
mov
call
test
stc
out
add
mov
push
cmpsb
sub
dec
nop
enter
dec
xor
pop
pop
push
pop
sub
mov
fldcw
mov
jnp
push
fldenv
dec
fidivrs
jns
negb
andl
sub
and
fiaddl
cmpsb
lock
popa
sub
push
xchg
out
or
cmpsl
mov
mov
repz
jge
loope
loope
lcall
fldl
rcrb
call
loopne
lods
ja
decb
imul
xchg
repz
inc
popf
ss
xor
xor
sbbb
sub
or
mov
cltd
mov
cmp
adc
lods
dec
leave
xchg
loope
lahf
mov
into
add
jno
scas
sub
jno
cmpsl
xchg
mov
mov
xchg
sub
sbb
cltd
add
ljmp
mov
pushf
inc
xor
aad
daa
mov
gs
mov
popf
jle
aaa
ja,pn
scas
in
test
mov
or
pop
lret
cltd
inc
jp
out
sbbb
ja
mov
maskmovq
notl
sub
fisttps
push
push
push
enter
xorl
std
jns
push
into
jno
lahf
cmpsl
adc
iret
cli
stc
dec
pop
dec
add
adc
aas
cmp
jo
jge
lcall
mov
cmp
xor
pusha
jecxz
test
inc
in
mul
cmp
js
cmp
pop
adcb
xor
add
cmp
mov
jg
ret
rolb
push
push
mov
inc
dec
and
pop
mov
jle
mov
adc
mov
dec
mov
lret
pop
imul
subl
in
rcrb
xchg
inc
pop
xor
nop
test
mov
das
jb
sbb
push
xor
movl
push
mov
cmp
sarb
mov
cltd
and
and
lret
loop
push
xlat
ljmp
orb
mov
push
jmp
sbb
je
movsl
out
lock
cld
xchg
pop
sub
cli
jp
test
mov
aas
lret
movsb
lea
sub
sti
xchg
dec
in
in
iret
cltd
cltd
outsb
xor
and
xchg
or
aas
jnp
repz
jnp
jae
xchg
mov
call
push
negl
loop
xor
lods
std
addr16
shld
loope
loopne
fadd
jmp
dec
add
jecxz
int3
popf
icebp
jl
add
icebp
jg
inc
popa
ds
test
js
jne
jae
sbbl
jo
pop
and
and
aam
xchg
jne
icebp
dec
push
mov
push
imul
add
sub
insb
aaa
inc
mov
lods
aaa
les
pusha
jp
sbb
or
or
fdivl
cltd
and
aad
pushf
mov
dec
adc
sbb
popa
das
orl
je
pop
sub
cmc
loop
rolb
xor
dec
push
xchg
icebp
mov
daa
push
xor
mov
mov
rclb
inc
sbbb
adc
imul
mov
or
ret
cwtl
add
add
vpmacssww
loopne
repnz
push
mov
sub
rcl
out
scas
mov
shll
and
mov
push
in
inc
movsl
cmpsb
adc
pop
loope
jl
cmp
std
mov
lcall
push
call
pop
lds
xchg
mov
add
fcmovnbe
sbb
fdivr
mov
push
xlat
mov
mov
mov
es
push
add
jecxz
lcall
jbe
in
add
jo
les
pushf
gs
adc
testb
into
push
arpl
mov
pop
pop
in
lods
pusha
ret
nop
lds
jp
cmp
mov
cmp
inc
out
bsf
aad
orl
cld
stos
sbb
mov
lret
xor
mov
out
mov
add
fs
xchg
or
pop
fiaddl
pop
fiaddl
jbe
lret
dec
insl
pop
xor
pop
popa
jp
xor
ljmp
cmp
mov
add
cmpsl
xor
and
jp,pn
mov
mov
and
jb
pusha
movsb
fistpll
scas
dec
aas
push
movsb
pushl
jle
push
xchg
xor
inc
xchg
adcl
pop
jb
ffreep
push
dec
push
daa
imul
orb
mov
ret
test
dec
cwtl
xchg
mov
jl
fsubs
mov
mov
mov
lock
out
movsb
or
sbb
sahf
ljmp
mov
push
cld
loop
and
xchg
cmp
mov
mov
push
test
inc
fldt
add
scas
dec
inc
jb
and
dec
cmp
mov
or
xchg
mov
mov
mov
or
or
stc
adc
sti
mov
inc
push
testl
mov
xorl
push
mov
sbb
out
jo
ja
push
in
shll
xchg
mov
cltd
inc
pop
add
cmp
xchg
xor
mov
pop
push
push
push
adc
ret
mov
shl
cmpsb
imul
inc
fwait
push
mov
mov
mov
sbb
pop
lea
shrl
dec
jecxz
and
dec
inc
fbld
aad
dec
xchg
ds
stc
jle
xor
pop
arpl
shrb
xchg
cwtl
hlt
push
stos
sbb
rcl
xorl
mov
jns
movnti
xor
es
inc
cs
lcall
cltd
lahf
mov
and
inc
sbbb
aas
les
push
fwait
push
jne
iret
xchg
addr16
fildl
xchg
orl
scas
enter
xor
xor
fwait
es
or
mov
add
js
mov
shrb
mov
in
dec
mov
int3
orl
ss
and
dec
mov
pop
sbb
inc
icebp
and
and
sbb
js
jnp
mov
mov
call
rep
xlat
jge
ffree
je
adcb
push
mov
test
cmp
jmp
jmp
push
cmp
in
cs
mov
add
adc
lods
xchg
lahf
fstl
jnp
xchg
data16
xor
enter
mov
add
cmpsl
cmc
je
cwtl
pushf
sub
dec
jg
inc
stos
lcall
xchg
cmp
outsl
sahf
sahf
outsb
jp
fcompl
loopne
dec
push
add
nop
sbb
jne
and
lds
sub
or
movb
insl
dec
adc
outsl
loopne
sbb
lods
pop
xchg
dec
push
push
testl
cmp
insb
mov
test
xchg
jbe
xchg
sub
sbb
ret
rol
xchg
or
and
dec
loop
mov
xchg
imul
mov
or
xor
cmp
mov
pop
test
sbb
cmc
ret
inc
call
push
cli
loope
adc
inc
pop
push
loopne
loope
sub
sarb
sub
lds
adc
dec
fcmovnb
jg
in
lds
pop
les
fidivl
and
dec
mov
pop
sbb
push
out
insb
push
or
subb
ss
ret
fsubr
mov
push
mov
dec
lods
mov
fildl
pop
mov
jge
jge
jae
repnz
sub
fwait
ror
mov
pop
fs
lods
mov
fisubs
xor
push
movsl
lahf
pop
add
mov
xchg
ret
push
cmp
dec
jb
rcr
test
rorb
fiaddl
pop
mov
xor
cli
jmp
mov
pop
shlb
jg
test
inc
mov
xchg
lock
fistl
hlt
mov
ja
movl
arpl
jmp
sub
pop
push
clc
mov
sbb
andl
and
aas
sbb
xor
push
popl
mov
xor
jae
adc
in
loope
mov
int
out
pop
pop
mov
fnstsw
cltd
mov
enter
psubsb
gs
and
mov
ret
adc
xor
add
push
sub
ds
out
pop
loop
pop
out
lea
cwtl
enter
mov
push
cmp
mov
xchg
stos
mov
cmp
mov
or
lea
nop
pop
cmpsb
out
andb
leave
lahf
sbb
and
repz
mov
cmpsb
lret
add
dec
fwait
and
testl
sub
mov
or
mov
out
push
mov
cs
and
mov
cmpsb
ss
sbb
repnz
mov
jmp
sub
push
jnp
adc
adc
jmp
imul
push
out
mov
and
jle
mov
fwait
jge
int3
dec
leave
mull
sbb
iret
xchg
lahf
adc
adc
xor
cmp
or
loopne
aam
cmpsl
jns
push
push
mov
nop
popa
and
add
dec
push
fnstcw
out
mov
jae
mov
cmp
jae
xchg
rcl
mov
adc
jle
mov
stos
mov
sahf
adcb
add
in
pop
jns
mov
addr16
fstpt
in
pop
or
push
inc
ljmp
insb
cmp
xor
pop
shll
add
stos
imul
mov
rorb
js
xchg
pop
cwtl
inc
or
push
push
push
sti
xchg
clc
ljmp
cmpsl
lahf
add
clc
dec
sub
shlb
jb
loop
dec
mov
and
and
sbb
out
xchg
rcrl
mov
out
int
dec
pop
fsubp
jmp
test
inc
sbb
xor
in
mov
mov
push
xchg
aaa
fsubr
dec
lahf
ficoml
jae
mov
clc
inc
es
imul
xor
push
push
movsl
fldt
inc
add
adc
hlt
loop
pop
rcrb
outsl
add
pop
das
adc
push
stc
cli
jne
scas
add
fdivs
pop
aas
in
or
notl
stc
cmp
push
fistpl
push
add
mov
lcall
fcmovnb
add
sub
xor
mov
push
mov
inc
popl
jl
mov
std
sbb
or
in
push
daa
fisttps
sub
pop
or
cmp
adc
adc
and
data16
push
and
dec
loope
fsubrl
or
decl
into
lret
push
je
cmp
gs
cmp
mov
pop
loopne,pt
jecxz
push
xor
scas
and
add
dec
add
xchg
dec
sarb
outsl
rcrl
hlt
mov
jg
mov
pop
hlt
cmp
repz
sub
jbe
fsubrl
movsb
scas
cmc
push
mov
pop
ljmp
addl
jbe
lcall
clc
add
adc
std
mov
xchg
and
dec
dec
sbb
mov
mov
testb
sub
ljmp
pusha
inc
and
push
cmpsb
dec
mov
jmp
mov
fwait
addr16
in
or
mov
cmc
addr16
jo
cmpsl
lods
cmp
and
dec
xchg
xchg
pop
gs
or
sbb
jge
or
jne
add
mov
aad
or
popf
mov
insl
mov
sti
fnstcw
ret
dec
or
push
push
jb
shrb
mov
sbb
jmp
loopne
inc
or
adcb
enter
inc
and
dec
jmp
pop
dec
push
cwtl
enter
fldt
ret
sti
adc
ss
cs
push
fwait
inc
neg
jae
jp,pt
dec
dec
cmp
cld
jmp
and
das
fcoms
adc
xlat
pop
or
lods
lcall
xor
andb
sbb
xor
mov
enter
jmp
mov
push
hlt
jg,pt
mov
dec
decl
xchg
push
add
mov
lcall
iret
xchg
sbb
cli
rcrl
js
dec
jl
sbb
lahf
das
mov
pop
adc
mov
mov
je
shrl
dec
and
lods
mov
xchg
dec
scas
mov
and
pop
jbe
insb
add
cmp
jg
adc
dec
and
mov
gs
inc
jmp
dec
and
daa
ss
dec
pushl
mov
add
jb
and
mov
lcall
jns
xchg
mov
or
mov
jmp
xchg
test
adc
data16
in
addr16
ret
push
sub
shlb
jns
xor
inc
les
inc
add
cmp
adc
mov
mov
mov
add
or
ss
xchg
mov
daa
or
xor
shll
jae
in
jp
out
arpl
xor
pop
mov
push
add
int3
xor
rcll
lods
repz
pop
pop
ret
xchg
pop
in
pop
leave
shrl
sub
push
loope
or
mov
dec
testl
lds
push
pop
mov
nop
lea
jns
ret
cmp
in
iret
stos
sti
xor
inc
fidivrs
outsl
test
mov
mov
out
push
inc
iret
pop
leave
imul
and
jl
pop
out
data16
in
fidivl
fdivl
push
in
jmp
into
jae
loope
pop
ret
mov
jns
insl
jle
mov
adc
out
jb
icebp
dec
cmp
in
push
or
mov
imul
pop
inc
jb
jns
xchg
cmp
call
cmp
orl
push
fwait
jbe
shrl
push
lods
imul
push
jo
jge
insl
adc
cmpsb
mov
bnd
daa
xchg
cwtl
andb
jp
outsb
arpl
lret
outsb
adc
and
inc
iret
leave
fisttpl
imul
adc
mov
iret
mov
or
sbb
mov
push
test
mov
in
mov
std
das
cltd
movsl
pop
cmp
inc
cmp
sbb
fwait
inc
pop
push
mov
push
nop
mov
xchg
data16
lcall
mov
fcompl
adc
in
sbbl
push
inc
call
inc
and
xor
dec
xchg
and
bound
push
inc
enter
push
flds
cmpsl
mov
fnstsw
and
lock
xchg
fisubs
push
xchg
lret
fwait
pop
sub
pusha
pop
cmpsb
out
lock
push
mov
jnp
notl
pop
sub
loope
or
xchg
lods
out
dec
jo
shlb
mov
aam
int3
insl
push
push
pop
jmp
das
pop
imul
pop
xchg
inc
movsl
jge
add
das
ret
sub
pop
leave
les
int
mov
inc
paddsw
std
inc
jbe
cmpsb
pop
jl
xor
fnstsw
push
ds
shll
lods
xchg
inc
les
inc
rolb
cmp
sub
sub
mov
jns
mov
rclb
imul
cmp
push
xchg
sub
inc
fcmove
dec
leave
xchg
test
adcb
adc
and
pop
mov
std
fbld
rclb
subl
mov
roll
jbe
cld
fsubrs
sbb
out
dec
sub
aam
mov
loop
adc
xchg
in
clc
popa
jno
dec
push
lock
lds
lea
mov
fbld
loop
sbbl
cwtl
mov
insb
sti
xchg
pop
pop
mov
andl
rep
push
inc
xchg
repnz
jb
pusha
jae
out
jge
ret
aam
inc
fidivs
xchg
sub
xchg
add
test
xchg
push
loopne
xchg
mov
call
and
outsl
push
mov
sbb
mov
xor
pop
in
test
popa
mov
xor
gs
loope
fsts
stc
pop
pop
jo
jl
sti
enter
mov
into
test
stc
xchg
int3
out
sub
clc
out
push
lahf
ret
jns
shll
sbb
dec
flds
aam
dec
shlb
adc
xchg
sti
mov
addb
or
shll
fnstcw
loop
ficomps
shr
jge
jne
inc
movsl
mov
arpl
sub
push
and
xor
cld
add
out
inc
pop
rclb
ja
sub
and
out
stc
dec
dec
fimull
or
sbb
cs
testb
jnp
mov
fcompl
inc
jbe
adc
lret
call
xchg
mov
imul
stc
dec
mov
sub
pop
mov
mov
adc
out
test
test
xor
pushf
mov
add
xor
out
push
push
fldcw
jns
scas
mov
rcll
fmull
push
out
jg
push
add
pusha
xor
dec
pop
mov
mov
lea
flds
out
pop
cmp
sub
xorl
inc
xor
icebp
mov
pop
fs
pop
cmpsb
or
gs
xor
dec
outsl
repnz
movb
mov
cmp
and
inc
adc
xor
out
out
xchg
imul
cmp
lahf
cld
jnp
dec
movsl
or
mov
or
mov
sbb
xchg
inc
mov
fs
and
jl
frstor
pop
loope
fistpll
divb
out
push
fisubrl
inc
mov
inc
lret
imul
rclb
inc
loopnew
cs
jbe
mov
dec
scas
cmc
fstps
outsl
inc
push
jno
pop
mov
cmpsb
mov
add
loope
insb
fmull
ss
es
cmp
sarl
mov
lds
maxps
arpl
je
cld
movsl
add
sbb
jne
xor
inc
aad
outsl
adc
dec
pop
mov
push
push
hlt
cli
cmp
out
jo
pop
push
pop
and
xor
pushw
push
sub
mov
lea
mov
in
call
add
dec
loop
xor
push
inc
adc
add
aaa
mov
ds
test
or
mov
aaa
aas
and
lretw
sub
mov
adc
or
push
adc
or
dec
loop
daa
sub
sbb
or
add
xchg
jle
mov
sarl
fisttpl
loop
cli
cmpsb
or
popf
je
dec
jnp
mov
nop
fiaddl
imul
pop
iret
stos
or
mov
and
sub
scas
mov
aam
jno
bound
mov
in
add
out
test
cmp
push
xor
sub
lock
mov
inc
cwtl
add
mov
mov
pushf
in
mov
in
in
sarl
lock
mov
das
xchg
jbe
adc
inc
nop
insl
rcr
push
out
mov
fwait
shrb
movsl
mov
lcall
pop
pop
out
xor
fbstp
push
pop
repnz
fiaddl
push
lcall
sbb
push
ret
mov
or
lcall
jmp
movsb
lods
jnp
inc
xchg
or
cld
roll
sbb
push
xchg
pop
or
stos
fidivl
inc
es
pop
les
test
sarl
add
or
dec
arpl
or
mov
mov
daa
in
mov
jmp
stc
add
push
aaa
fincstp
lods
adc
cmp
loope
outsb
dec
inc
movsl
shrb
inc
les
int
xchg
sarl
fnstsw
mov
add
orl
adc
popf
pop
enter
pop
xor
pushf
xchg
inc
cld
inc
dec
or
clc
sbb
add
mov
pop
cmp
push
fcomp
in
mov
test
loope
pusha
push
adc
je
mov
loop
loop
mov
stos
movsl
push
or
lcall
push
push
jae
lahf
mov
dec
hlt
mov
mov
pop
mov
push
test
test
imul
lds
aas
cltd
out
mov
call
and
icebp
dec
sbb
in
mov
loop
mov
lods
cli
js
pop
adc
or
cmp
test
dec
xor
or
sarb
or
pop
mov
aaa
leave
inc
movsl
jl
lock
mov
adc
mov
insl
add
and
subl
xchg
inc
inc
mov
insl
dec
fsubs
clc
push
mov
xchg
outsl
push
jecxz
push
insl
push
fistl
sbb
inc
in
mov
jg
insl
adc
and
adc
push
ds
sbb
out
addw
fcomp
outsb
push
and
xchg
enter
fnstsw
in
andl
pushl
pop
mov
cwtl
mov
out
out
ret
push
fs
outsb
jb
adc
xchg
mov
mov
cmp
aad
shrb
enter
xchg
and
lods
mov
xor
sbb
mov
out
outsl
popf
xchg
repz
sbb
xor
and
popa
cmc
in
adc
xchg
decb
mov
push
andb
pop
out
mov
orl
pushf
movb
push
mov
pop
bound
mov
sbb
outsl
sti
push
int3
pusha
cwtl
sbbl
stos
pop
and
adc
or
xchg
hlt
jno
sbb
pusha
dec
mov
lret
cs
inc
insl
sbb
fs
ja
and
int3
movsl
sbb
into
jnp
cmp
lock
adc
js
gs
pop
fistpl
iret
xlat
cmc
pop
loop
xlat
xor
hlt
loopne
insb
lock
add
sti
mov
pop
push
in
push
xor
pop
mov
cmp
push
aam
pop
call
addb
adcl
addr16
imul
jge
fidivrs
aam
mov
push
loope
rclb
xchg
pusha
in
mov
into
add
out
adcb
cmpsb
xlat
dec
inc
sub
cmpsb
sbb
mov
cmp
mov
neg
dec
jmp
mov
mov
lods
dec
add
dec
push
adc
dec
ret
out
or
lods
jns
pop
push
pop
xchg
pop
cmpsl
pop
repnz
cmp
mov
mov
stos
dec
lret
xchg
jns
mov
cmp
frstor
sub
daa
adc
dec
popa
dec
fistpl
inc
xchg
loop
inc
xchg
ja
mov
jns
cmp
pop
or
dec
faddl
jmp
bound
mov
js
pop
cltd
in
inc
repz
push
ljmp
test
fstpt
pusha
inc
int3
or
data16
scas
js
mov
scas
xor
mov
adc
or
mov
mov
ja
sbb
jge
xchg
out
js
jb
aaa
movsl
mov
jle
mov
cmp
sub
ja
mov
push
insl
cld
xor
adc
bound
pop
jnp
iret
dec
pop
adc
and
ja
lahf
popa
push
cmp
mov
jp
push
jnp
aad
and
out
cmp
and
lock
mov
dec
ds
movl
jl
cmp
pop
cwtl
shl
cmp
cmpsl
pusha
lods
adc
dec
sub
jns
daa
ja
jle
sbb
cs
or
push
int
cs
jno
pop
sbb
inc
cltd
test
popa
xor
jle
cmpsl
cwtl
pop
sbb
lahf
in
xorb
pop
arpl
sahf
iret
dec
or
push
leave
cmp
fs
jl
insb
inc
lret
bound
loope
sbb
jns
call
je
out
scas
push
popf
test
inc
and
and
aam
sbb
in
dec
adcb
push
lahf
mov
adc
push
sub
adc
and
sbb
pop
add
popf
adc
stos
xchg
sbb
repz
cmp
xchg
inc
lds
jl
jo
push
or
aam
xchg
jo
jae
sub
stos
xchg
lods
fisubs
in
jns
movsl
ds
test
pop
jno
xchg
sbb
add
sbb
in
add
and
push
mov
scas
scas
mov
xorl
in
mov
or
fstpl
pop
iret
or
arpl
loop
cmpsb
repnz
mov
push
pop
adc
test
push
dec
enter
cmp
xchg
popf
xchg
test
xchg
inc
mov
xchg
shll
mov
xchg
negb
je
int
das
or
mov
outsb
mov
sub
enter
in
fists
xor
and
adc
or
jp
cmpsb
mov
lds
mov
test
adc
and
bound
insb
add
cwtl
pusha
imul
xchg
add
or
pop
in
sub
in
or
mov
jo
testl
mov
inc
xor
pop
test
push
pop
jno
mov
repnz
jnp
lret
arpl
push
movsb
add
mov
aam
dec
sub
pop
and
stc
sbb
test
ljmp
jne
loopne
or
cmpsl
clc
in
stos
sbb
ds
dec
ret
lcall
cmp
lea
subb
adc
test
mov
cld
ret
jmp
loop
and
mov
mov
lcall
fsub
insb
das
lock
lock
xor
jbe
mov
pop
addr16
rcl
xchg
and
stos
push
notb
lahf
loop
stos
dec
or
cwtl
push
dec
sub
jp
notb
fadd
pop
mov
arpl
xchg
dec
cltd
inc
mov
jb
dec
jg
xor
xchg
imul
dec
push
into
loope
outsb
push
dec
ljmp
mov
pushf
ss
xchg
and
adc
data16
or
inc
add
pop
cmp
cmpsl
xorl
and
lret
dec
lret
jmp
add
mov
repz
icebp
or
rolb
and
cld
sbb
xchg
mov
jnp
stos
push
or
aam
nop
xchg
push
aaa
mov
push
mov
int3
pop
push
pop
sub
repz
adc
fwait
xor
xchg
cmpsl
rol
mov
push
jmp
pop
mov
in
pop
cmp
adc
inc
pop
dec
loope
loope
sbb
sub
fs
in
lret
mov
out
cmp
aas
fldenv
add
cltd
icebp
sub
adc
scas
aaa
int
pmaxub
mov
sub
or
rorl
xor
add
sub
std
outsb
push
inc
vpsraw
mulps
popa
sub
pop
sbb
iret
fsts
jmp
nop
bound
xchg
fucom
stos
and
mov
sub
jp
adc
inc
movsb
jb
add
sahf
cmp
jno
pop
cltd
add
scas
lcall
lock
jne
jg
bound
lods
push
add
mov
adcb
mov
div
pop
pushf
mov
in
adc
aaa
adc
dec
incb
lods
add
push
sub
lea
xor
mov
mov
sbb
lahf
aam
mov
inc
cmp
or
push
jae
lock
pop
xchg
or
adc
dec
jno
scas
test
mov
lret
push
mov
mov
stos
cltd
test
or
mov
add
daa
xor
mov
lock
xchg
pop
xlat
mov
pop
and
or
adc
test
test
add
push
inc
jb
and
xchg
ret
dec
mov
orl
mov
push
jb
sub
mov
dec
out
xchg
jb
nop
xlat
scas
movsb
imul
pushf
stc
xlat
das
bound
ret
xchg
sub
or
pop
add
aaa
push
jns
dec
das
push
adc
push
adc
inc
loopne
mov
adc
shrl
fcomp
cmc
movsl
aam
popa
xor
mov
xchg
repnz
clc
dec
dec
jne
xchg
fdivrs
push
inc
je
ss
fcmovnb
movsb
test
push
jns
in
cmpsl
out
call
inc
inc
jo
sarl
adc
xchg
negb
mov
out
lods
adc
testb
pusha
aaa
lock
or
insl
lahf
test
xchg
rclb
mov
sbb
jns
in
loop
out
or
adc
in
xchg
dec
data16
mov
push
lcall
cltd
sub
jmp
call
jnp
leave
xchg
push
out
adc
bound
fs
mov
pop
or
sahf
adc
cmp
mov
ret
mov
lret
pop
sbb
inc
inc
sub
and
daa
add
xchg
xchg
fwait
lods
lahf
test
adc
xor
and
jnp
sbb
jmp
pop
lods
xchg
das
push
loopne
adc
xchg
mov
leave
insl
jbe
pop
cltd
lcall
out
ss
lret
dec
leave
cs
dec
cmpsl
std
mov
test
addr16
dec
adc
pop
jnp
dec
mov
loopne
mov
push
lret
jmp
jg
aad
lds
sti
add
or
pop
ds
xor
cmp
xorl
dec
ds
xor
add
xchg
push
in
sahf
sub
push
lretw
popa
pop
jno
lahf
cmp
jle
mov
idivl
scas
call
dec
mov
mov
cwtl
push
push
sbb
dec
xor
orb
mov
pop
clc
mov
aaa
cs
inc
sub
inc
test
mov
push
or
inc
sub
add
push
shr
push
mov
in
or
sub
daa
push
outsl
sub
jae
adc
rcrb
xchg
xor
xor
adc
or
loopne
mov
add
cli
mov
inc
ret
pop
cmp
jmp
cli
push
add
pusha
sahf
repz
push
nop
das
cmpsb
stos
pop
inc
sub
jns
icebp
leave
pop
ja
cmpl
pop
loopne
jb
jb
in
xor
cmp
inc
xchg
and
insb
ss
cmpsb
adc
cld
loop
jmp
enter
jecxz
or
scas
mov
aas
lret
sahf
rcll
cmp
mov
scas
ss
cld
inc
popf
in
arpl
mov
push
cmp
sub
add
test
hlt
enter
sbbl
imul
push
lret
add
xlat
divl
fwait
in
push
pop
or
addr16
cld
data16
xlat
add
add
or
cmp
sbb
pop
cmp
int3
sahf
mov
push
add
sub
in
movsl
xor
jns,pn
in
sub
aas
popa
pop
cmc
clc
rclb
push
sbbb
mov
add
arpl
fisttps
dec
dec
sti
mov
std
dec
sbb
inc
jle
dec
inc
mov
inc
loop
and
mov
roll
and
mulb
clc
add
and
add
pop
jmp
mov
ret
push
sub
add
sahf
mov
jbe
inc
mov
and
ss
imul
jbe
std
inc
das
mov
cli
cmp
adc
mov
loop
push
stos
add
xchg
lret
xchg
xchg
cmp
rcr
mov
dec
push
and
into
imul
xchg
fs
pushf
cmp
xchg
jge
lea
aam
add
mov
nop
enter
add
imul
xchg
aad
mov
jg
les
mov
jg
aaa
pop
rcrl
add
mov
jmp
rcl
popf
sarb
sarb
add
cmpsl
sbb
add
das
add
cmp
in
mov
popf
outsl
popf
sahf
mov
jbe
fldcw
pop
fsub
scas
inc
mov
icebp
adcb
inc
incl
push
test
xlat
imul
push
test
mov
fwait
add
add
sbb
incl
sub
sbb
lods
lret
pusha
or
xchg
cmp
adc
inc
rclb
or
push
lret
xchg
nop
iret
jno
mov
lret
in
adc
inc
repz
bnd
pushf
movsl
sbb
mov
and
xor
xchg
in
add
mov
repz
shlb
or
xchg
insb
xchg
adc
xchg
mov
insl
rorl
or
and
xor
outsl
mov
lcall
shlb
ret
jo
test
out
loopne
jmp
dec
test
stos
adc
mov
sbb
in
daa
popa
divl
movsl
out
test
mov
mov
mov
xchg
or
and
out
mov
cmc
out
fcomps
jmp
mov
xchg
js
insl
std
xchg
inc
sub
movsl
stos
mov
jne
sbb
pop
sti
inc
xchg
push
sub
popa
dec
pushf
and
mov
fwait
hlt
test
pop
push
push
mov
jmp
mov
outsl
cwtl
mov
jmp
cmovns
pusha
cmp
test
into
sub
jb
xchg
fldl
pusha
dec
mull
push
cmp
mov
fwait
loopne
cmp
in
xchg
mov
jns
jmp
dec
push
icebp
lods
push
mov
sbb
dec
bound
test
in
push
mov
pop
in
outsl
inc
fwait
inc
inc
pop
adc
fildll
cmc
into
or
and
loope
add
sub
mov
jb
rol
or
xchg
lret
std
and
add
inc
dec
mov
sbb
mov
dec
dec
adc
je
push
das
push
mov
mov
out
icebp
mov
sbb
notb
cmpl
xor
add
adc
mov
in
push
into
or
xchg
add
movl
jp
fs
xor
aam
lahf
popf
leave
cmc
ja
inc
pop
inc
fimull
sub
mov
xchg
add
fstl
stos
repz
outsl
xchg
dec
scas
fldenv
fmulp
or
stos
jl
sbb
push
loope
jle
outsb
cwtl
push
pop
xchg
in
cmp
lds
mov
insb
imul
sub
out
repz
mov
test
negl
and
and
and
incl
rcrb
orl
ficoms
xor
test
jmp
pop
xor
mov
repnz
add
or
add
mov
jns
or
xor
fdivrl
or
mov
orb
mov
mov
js
jb
mov
pushf
push
push
jg
jg,pn
push
je
pop
add
mov
rcr
xlat
or
sti
add
scas
mov
iret
lahf
imul
pusha
bound
jmp
sbb
mov
cmp
shlb
test
fstpt
stos
jo
enter
adc
add
pop
ret
test
in
jnp
call
mov
adc
dec
adc
mov
cmc
push
enter
jl
push
cmp
push
mov
mov
fs
jno
xchg
push
jno
in
stos
lods
clc
dec
inc
sbb
out
adc
stc
xchg
sub
mov
movsl
mov
and
sub
adc
cmpsb
adc
xchg
inc
cmp
sub
mov
scas
pop
movsb
xor
push
nop
push
or
inc
call
repnz
aam
mov
test
jns
fildll
xor
lods
cmp
inc
shr
adc
pop
mov
jmp
cmp
ds
loopne
sub
add
sub
xor
xchg
cmpb
or
or
inc
mov
sbb
pop
sub
mov
imull
aam
popf
mov
test
lahf
inc
fstpt
lcall
pusha
cli
xchg
arpl
jecxz
lret
xchg
push
fs
pop
clc
je
adc
mov
xlat
fsubrl
in
mov
mov
cmpsl
stos
decb
xor
adc
popa
mov
out
ljmp
andb
repz
stos
or
shr
jnp
test
out
push
orb
mov
dec
outsl
push
dec
mov
or
and
lds
xor
or
push
adc
inc
push
mov
dec
xchg
les
repnz
fldenv
lds
sahf
subl
jo
pusha
icebp
enter
mov
aaa
loopne
notl
xlat
imul
xchg
fistpl
pusha
clc
daa
mov
in
mov
aas
xor
mov
xor
shr
fdivr
push
sahf
jns
adc
fcmove
inc
js
cmp
add
and
cwtl
push
mov
es
imul
stc
js
in
gs
ja
xchg
jb
jl
sub
xor
scas
xor
sbb
adc
mov
fistl
jl
std
mov
cld
cmpb
or
shl
loope
fs
mov
push
jg
lahf
in
jo
xchg
mov
inc
insb
jae
add
sub
jno
xor
loop
rcrl
jecxz
mov
cltd
insl
out
call
insb
or
out
push
les
movsb
dec
roll
test
adc
fstpt
jecxz
mov
inc
loope
mov
idiv
xlat
mov
mov
dec
test
fwait
add
out
scas
flds
mov
lods
test
xchg
sbb
cmp
pop
sbb
in
dec
pop
push
cltd
and
xlat
fdivl
pop
movb
inc
cld
xchg
jbe
mov
addr16
rolb
test
pop
pop
aam
pusha
shr
sub
lods
addr16
scas
jnp
test
add
or
inc
lret
dec
or
mov
xchg
cmc
scas
ficoml
adcb
imul
das
test
pop
add
rorb
dec
jno
pop
xchg
add
pop
push
xchg
int
stos
dec
ljmp
shlb
movsl
call
xchg
pop
loop
int
fsubrl
outsb
sbb
sbb
cmp
lods
lahf
sbb
sub
cld
cmpsl
push
rcr
jb
andb
lods
inc
xchg
insb
xor
dec
sub
push
or
ja
add
mov
mov
nop
mov
xchg
lret
pop
inc
icebp
test
and
bound
pop
subl
cmpsb
lods
xor
pop
mov
add
pop
xchg
xchg
jg
movl
inc
push
iret
and
out
add
mov
inc
lcall
lods
test
pop
or
mov
int3
add
sbb
pop
sub
xor
mov
fisubrl
mov
xlat
test
lock
jle
push
enter
mov
cltd
std
int3
add
out
stos
test
inc
push
xchg
ret
int
xlat
rep
add
sbbl
sbb
mov
add
push
scas
xor
out
notb
cwtl
ss
sub
sub
cmp
or
into
outsb
mov
sub
push
adc
rcrb
mov
fmull
xor
lds
lret
lret
pop
cmp
lret
stos
jns
xor
ds
cmpsb
push
cmp
imul
out
imul
insl
mov
ret
inc
jecxz
arpl
inc
jno
sub
xchg
out
mov
mov
mov
sbb
call
je
xchg
adc
repnz
rorb
mov
fstps
mov
sbb
dec
int3
and
or
inc
jne
adc
or
negb
cmp
jb
sub
fwait
cmp
dec
push
lahf
cmpsl
cli
mov
sti
int3
dec
in
mov
movsl
mov
fucom
sbb
lods
shrl
xor
int
sti
pop
push
loop
xchg
rsqrtps
repz
mov
or
les
push
lahf
ds
decb
push
xchg
fs
add
push
and
fnstsw
testb
jg
sbb
pop
icebp
mov
pushf
adc
dec
aaa
inc
in
xchg
cmp
mov
add
ljmp
es
pop
cmp
ja
pop
mov
and
sbb
xor
andb
test
scas
test
pop
pop
bound
aam
pop
stos
sbb
icebp
cmp
daa
push
imul
add
xor
mov
lahf
scas
loope
ljmp
cli
jp
xchg
je
inc
loop
push
pop
lea
inc
repz
fsts
inc
xchg
loop
mov
push
mov
mov
pop
xlat
out
cltd
loopne
sbb
cmp
adc
test
cmc
adc
cmp
sahf
rclb
test
jl
push
divb
mov
pop
dec
bnd
push
xchg
cld
addl
fcoms
outsb
push
pushl
pop
sub
mov
repz
outsb
test
xor
xor
fisttps
ficoms
sbb
add
ret
jmp
iret
fisubrl
in
pop
mov
imul
ret
pushf
pusha
cmp
mov
negl
adc
xorl
arpl
out
or
arpl
cmp
hlt
xorl
push
fmul
int
push
xor
jg
push
xchg
cmpsl
scas
cmp
shrb
shl
mov
mov
mov
aaa
lcall
icebp
fisubl
insl
cmpsl
arpl
push
scas
cmp
je
pop
repnz
lods
add
xor
and
pop
mov
sub
subb
cmp
test
push
xchg
cmp
out
jp
leave
jo
push
mov
adc
les
or
xchg
into
or
xchg
clc
cmp
into
cld
iret
xchg
jbe
lahf
dec
cmp
arpl
adc
xchg
int3
sbb
cs
cmp
mov
adc
xchg
dec
cmp
push
pop
ffree
jns
lea
push
dec
movsl
ss
jo
push
mov
pop
or
add
push
addr16
pop
cwtl
pop
cli
xchg
inc
stc
icebp
cmp
xchg
cmp
xor
push
icebp
sbb
dec
push
idivb
in
xchg
mov
jo
cltd
cltd
aad
xchg
push
xlat
or
jl
xchg
iret
jb
jle
movsb
loopne
call
inc
into
cltd
in
mov
out
jp
inc
aas
gs
cmp
cmp
cmp
xchg
mov
cli
adc
cmp
pop
gs
sub
getsec
dec
fwait
aam
faddl
xor
mov
pop
push
xchg
pop
sbb
loope
or
mul
push
sub
sbb
xorb
dec
int
iret
jecxz
in
mov
pop
cmc
mov
xchg
cmp
mov
out
sbb
or
mov
or
dec
les
je
mov
xchg
fcomps
hlt
or
repz
jne
popa
mov
lahf
cli
fldl
pushf
jmp
mov
movsb
push
sbb
pop
cmp
pop
jg
roll
and
and
push
xor
dec
loop
inc
lods
and
inc
cs
scas
and
mov
sub
pop
jno
imulb
lret
xor
mov
mov
pop
fcomi
fnstenv
jge
and
xchg
mov
push
stos
mov
imul
pop
push
icebp
and
in
rol
out
mov
jecxz
ss
lcall
pop
test
cmp
sbb
push
std
sub
mov
adc
mov
dec
shl
into
inc
out
xchg
sub
mov
cmpsl
xchg
jne
or
je
jl
stos
mov
pop
bound
pop
pusha
and
sti
popa
std
xchg
lcall
jg
xor
repz
inc
es
mov
mov
ret
aas
xchg
rcl
pop
xchg
inc
sbb
sub
pushf
rolb
mov
std
push
adc
jne
push
in
call
push
push
push
insb
in
in
dec
cmp
clc
push
jnp
out
adc
aam
mov
pop
mov
xor
mov
or
out
rorl
repz
xor
in
loopne
jno
jp
jb
fucom
adc
ret
sti
jp
mov
push
cmc
jns
lods
inc
je
das
add
lods
pushf
insb
imul
std
jbe
leave
out
stos
add
pop
inc
sar
iret
sbb
push
sahf
inc
sub
jno
or
iret
push
cmp
xchg
and
mov
in
cmp
lret
xchg
sahf
sub
mov
decb
insb
push
sbb
push
push
shlb
xchg
sub
imul
jecxz
adc
push
pop
daa
mov
ret
stc
jo
ja
dec
ret
fisubrl
add
aam
mov
sub
mov
mull
xchg
int
lret
std
mov
je
insb
inc
adcl
int
adc
out
mov
dec
mov
cmpsl
and
xchg
add
in
fstpl
add
sbb
int
lcall
enter
xor
test
dec
dec
outsb
incb
lods
in
inc
repz
stos
jmp
pop
mov
mov
call
jbe
je
nop
jecxz
in
imul
cld
mov
mov
bound
jmp
cld
inc
xchg
iret
in
ds
add
test
inc
sub
mov
mov
dec
sbb
inc
jp
stos
push
push
cmp
or
cwtl
cmp
and
cmp
xlat
add
out
inc
hlt
lahf
sbb
stos
adc
push
push
cmc
sub
add
and
mov
ss
dec
cltd
call
lock
xor
pop
inc
jne
xchg
repnz
daa
add
popa
mov
adc
loopne
pop
dec
cmc
outsl
fiadds
dec
insl
sbb
inc
cs
popa
pop
pusha
nop
fmuls
in
mov
push
out
or
cltd
or
mov
dec
call
inc
push
mov
scas
or
cmc
popa
inc
cmpsl
aaa
fsubr
lds
and
je
lahf
fcmove
fnstenv
xorl
and
stos
gs
cmp
dec
nop
jne
sahf
and
xchg
mov
rolb
lods
fisubs
fsts
mov
scas
push
std
inc
mov
inc
cmp
test
jo
cmpsl
jo
in
fiadds
pop
daa
negl
repz
mov
rcrl
push
sarl
or
mov
jae
les
inc
and
in
push
repnz
and
outsb
push
pop
cmp
mov
fwait
adcl
mov
scas
mov
iret
mov
push
bound
jecxz
mov
scas
test
xlat
lock
mov
outsb
cmc
popa
in
add
sbb
rcl
pop
rol
dec
outsb
xchg
sub
negl
jp
mov
sub
pop
jb
sbb
and
aad
dec
sbb
popa
jge
dec
jp
inc
mov
and
pop
cmpl
dec
mov
xchg
fadds
mov
push
pop
aam
scas
cmp
xchg
mov
mov
push
dec
std
push
inc
cmp
in
cltd
ss
inc
in
mov
xor
push
push
fisubrs
pop
and
adc
popa
imul
and
or
xchg
pop
and
add
and
pop
mov
fucomip
ret
mov
mov
insl
sti
ret
mov
push
mov
std
and
pusha
pop
rolb
pop
push
jbe
lock
mov
dec
nop
movsb
loop
fisttps
lods
dec
adcb
movsl
mov
mov
pop
outsl
mov
les
sti
filds
gs
sub
enter
pushf
movl
or
lret
jecxz
pop
mov
push
addr16
xchg
loope
add
sub
mov
out
and
xor
pushl
stc
cmpsb
cli
enter
jl
dec
mov
sbb
aam
data16
fisubs
sub
xchg
leave
jne
push
cld
icebp
adc
cmp
push
cmp
popa
popa
fwait
push
adc
aam
mov
add
pop
mov
ret
adc
imul
and
aas
mov
scas
pop
or
mov
js
cmp
inc
fcoms
test
dec
xchg
mov
or
pop
dec
push
push
jo
movsl
xchg
dec
mov
pop
lods
adc
ret
mov
enter
push
daa
ds
mov
lods
sub
add
dec
or
jmp
pop
popa
pusha
leave
sbb
jp
scas
and
pusha
cmp
fs
adcb
or
xchg
sbb
adc
cmp
xor
adc
insb
aaa
jb
mov
cld
xchg
cli
fmulp
inc
aaa
testl
adc
test
pusha
lods
es
call
mulb
adcb
mov
shrl
cmp
sub
pop
jg
jg
ss
lods
push
popa
shl
dec
aam
adc
pop
sub
lret
mov
sbb
sbb
jns,pt
shrl
stos
xor
aas
add
or
cltd
and
inc
fldcw
cld
pop
outsl
out
inc
cs
mov
aad
jp
push
xchg
or
and
cmp
add
cmpsb
adc
js
out
cmp
xor
jbe
inc
mov
aam
imul
fadds
ret
scas
cltd
test
aaa
push
faddl
inc
xor
add
jl
add
jg
cltd
add
or
mov
add
mov
inc
xchg
pop
inc
cmp
cmp
fisubs
or
mov
jle
test
adc
mov
inc
int3
pop
repnz
mov
cmp
and
nop
and
stc
push
sarb
pop
xchg
call
push
mov
movsb
adc
fmuls
cmp
inc
jne
or
popf
mov
jb
xlat
test
shlb
pop
mov
mov
fildll
mov
xor
dec
mov
je
add
xor
push
mov
cmp
xadd
jecxz
fildl
push
inc
pusha
outsl
sbb
movsl
jp
popl
adc
push
add
or
loope
add
outsb
sub
out
stos
push
in
rcrl
or
outsl
add
sti
insb
xchg
dec
clc
std
ror
sub
cmp
int
call
dec
xchg
in
sbb
mov
xchg
test
mov
lea
dec
es
fnsave
das
test
cli
cs
mov
mov
pop
popf
jg
xchg
stc
jb
fstpl
sub
ret
movsl
mov
inc
es
adc
push
subb
test
sub
pop
cmp
rolb
add
mov
loopne
mov
cmp
and
pop
sub
out
push
jb
cmp
inc
repz
pop
insl
hlt
jl
sub
xor
les
jns
enter
adc
repz
dec
leave
test
inc
test
jecxz
out
rclb
in
pop
dec
popa
or
fidivrs
mov
or
rclb
inc
cmp
ljmp
lods
repz
pop
enter
fcompl
pop
rol
inc
subb
rolb
outsl
into
adc
xchg
mov
pusha
fistps
dec
aam
push
mov
mov
adc
add
jge
lcall
popf
es
cmc
sub
cmp
andb
mov
mov
ds
cmp
out
subb
in
mov
movsb
inc
add
iret
movsb
shll
shl
cmp
gs
scas
and
jo
sub
in
rorb
rolb
xchg
out
insl
les
mov
int
popa
xlat
jg
mov
jle
shll
pusha
and
xchg
jno
add
mov
xchg
cmp
mov
xor
sub
push
xchg
mov
in
std
or
add
mov
sbb
ja
push
popf
enter
xchg
stc
push
fists
into
call
and
push
xchg
pop
inc
mov
je
inc
imul
jp
mov
sbb
repnz
jae
push
and
or
shlb
push
add
pop
out
call
pop
insl
cli
ror
fadd
ja
outsb
jo
dec
add
addl
test
popf
in
inc
shlb
adc
fwait
xchg
cmpsl
jmp
mov
pop
mov
push
test
and
leave
dec
mov
jbe
dec
inc
push
dec
daa
loope
es
xor
mov
lret
mov
xchg
mov
mov
jbe
imul
mov
jl
stos
or
ljmp
out
fisubrl
cli
repz
movsl
xor
pop
push
pop
fists
outsl
popf
pop
mov
icebp
inc
outsb
push
or
dec
and
cmpsl
fbld
aam
outsl
mov
das
cmp
dec
in
adc
mov
pop
lods
imul
cmp
add
xchg
inc
cli
fwait
xor
add
iret
xor
adc
inc
loop
dec
mov
or
mov
cwtl
and
cwtl
cmp
push
lock
mov
outsb
out
daa
pop
add
jge
dec
in
mov
pop
xor
jg
sbb
out
or
or
nop
test
iret
dec
div
inc
push
mov
arpl
or
xor
out
cli
adc
scas
pusha
out
mov
insl
or
orl
cltd
pop
sub
pop
inc
jno
push
xor
cmp
jae
cmp
loop
pop
incb
push
jo
xchg
jle
inc
mov
popf
std
sbb
pop
mov
aam
xor
movsl
daa
pop
test
aas
mov
and
mov
std
and
add
pop
cmp
push
int
xor
xchg
xlat
or
push
inc
ljmp
movsb
cli
xchg
data16
aad
mov
mov
sbb
mov
fs
push
fisttps
sub
jae
xchg
and
mov
nop
notl
or
fadds
sub
out
loope
frstor
insl
jg
pushf
push
push
and
aaa
es
adc
pop
sub
xor
pop
test
inc
ret
push
inc
add
aas
aas
or
psubw
pop
and
adc
xchg
into
call
insb
or
cwtl
push
xor
mov
push
shlb
push
jno
dec
push
dec
cmp
stos
mov
test
xchg
or
outsl
pop
leave
repz
inc
mov
ret
push
jns
push
mov
pop
js
mov
shll
shll
xor
lcall
dec
xor
adc
add
inc
gs
xlat
adc
jo
push
xchg
push
lods
xor
int3
bound
insl
adc
movsl
lods
ds
je
cli
or
jg
lock
xor
jne
adc
ret
ja
fidivrs
in
incb
and
mov
push
pop
adc
shll
mov
ja
cwtl
popa
xor
cld
xchg
call
xchg
leave
or
pushf
scas
jle
push
dec
push
stc
or
in
arpl
std
mov
out
lds
dec
and
adc
mov
inc
orl
out
and
sub
inc
jno
xor
jg
inc
dec
pop
and
arpl
fs
sub
pop
fadds
call
shlb
imul
rorl
cmc
out
fldt
les
adc
test
and
hlt
fnsetpm(287
adc
or
pop
testl
shll
cmp
sub
jne
lods
test
mov
out
movsl
pop
inc
push
sbb
bsr
into
shrb
or
cwtl
jnp
adc
popa
test
adc
bound
inc
subl
mov
les
jbe
dec
mov
shll
scas
adc
adc
dec
stos
mov
mov
mov
dec
cmpsb
movsl
xchg
lret
imul
outsb
rolb
inc
and
cmp
mov
aam
notl
and
pop
pop
adc
mov
imul
sub
in
lcall
stos
push
ret
lret
inc
mov
jg
mov
ss
fchs
lds
aam
xchg
mov
push
xchg
incb
lods
rclb
loopne
pop
xchg
jg
jnp
add
jbe
xchg
out
sahf
jb
imul
or
aaa
mov
aas
jo
xor
mov
mov
push
bound
test
mov
or
lods
pop
push
int
rclb
test
xor
enter
je
mov
cmp
xor
push
movsl
add
push
cmpsl
sbb
adc
movsb
adc
loop
fcmovne
shrl
jmp
in
lret
mov
mov
xlat
enter
data16
out
lcall
dec
test
or
fsubp
and
int
sub
and
sahf
pop
pop
add
cs
fnsave
push
jecxz
aad
scas
mov
push
pop
or
mov
cwtl
addr16
cmp
push
fldenv
lret
xchg
push
cmp
cmp
scas
movsl
ret
cmpsl
loope
mov
jns
add
dec
inc
test
bnd
push
push
and
sub
jmp
jbe
les
pop
jne
add
cmpps
pop
jns
call
push
pop
pop
sbb
jg
xchg
cld
je
jmp
fcoml
mov
rcrb
fbld
pop
fs
iret
pop
sbb
xchg
stos
mov
std
pusha
aam
ljmp
outsl
cmp
stos
xor
inc
ficomps
sbb
cltd
jge
adc
jne
jge
fwait
jnp
mov
push
and
repnz
and
ret
fwait
push
sbb
xor
cld
dec
test
sub
testb
cmp
mov
jg
xchg
jp
clc
jb
imul
adc
mov
mov
mov
sti
repz
mov
stos
lret
inc
lret
cld
push
pop
das
add
xor
mov
arpl
out
sub
test
mov
inc
dec
pop
push
movsw
out
xlat
clc
mov
jge
xchg
movsb
cltd
add
cmp
add
push
xlat
push
cmc
sti
dec
outsb
dec
and
cltd
cli
lret
sub
setg
fdivr
cmpsl
sub
comiss
cs
mov
xchg
pop
or
xor
dec
dec
mov
les
xlat
dec
cmpb
xor
mov
rclb
jb
in
pusha
mov
push
xor
daa
fcmovne
jg
aaa
fmuls
loopne
or
xor
adc
loope
lahf
pop
mov
sbb
repnz
les
or
daa
xor
pusha
mov
jmp
inc
daa
push
cmp
loop
popf
jns
jno
ss
inc
into
fmull
fimuls
mov
cmp
lcall
push
mov
jmp
inc
leave
jno
es
jb
xchg
push
in
enter
adc
cmp
cmpsb
mov
popa
roll
mov
mov
lods
inc
pop
int3
pop
pop
out
shll
add
mov
and
repnz
sbb
mov
sbb
fcoms
sbb
addr16
fcmovnbe
mov
inc
mov
push
lahf
push
mov
sub
cmp
adc
cmp
cmc
xchg
mov
movsb
xor
cmp
xchg
test
lcall
xor
popa
loopne
out
nop
mov
cmp
inc
add
fcoms
jg
add
push
mov
adc
adc
pop
loop
addl
popf
lods
sub
dec
adc
mov
push
adc
call
andb
in
jbe
outsl
in
out
sbb
jo
sub
adc
stos
out
xchg
or
inc
cmpb
enter
hlt
out
sbb
xorb
cmp
and
adc
and
lock
mov
insb
aaa
xchg
push
pop
mov
out
adc
mov
ret
mov
cmp
mov
out
punpcklwd
xor
pop
cmpsb
mov
adc
lahf
mov
pusha
mov
fcomi
mov
sub
aaa
jmp
or
std
adc
add
pop
imul
popf
mov
loop
cmp
mov
pop
lret
repz
dec
mov
or
cmp
imul
mov
sbbl
outsb
inc
outsb
push
adc
gs
xorl
arpl
imul
adc
or
mov
adcb
mov
lret
out
or
fildll
pop
push
xchg
adc
pop
mov
ret
das
or
inc
push
lods
test
test
jbe
cmp
sahf
jle
and
xor
sbb
in
xchg
lret
mov
push
pusha
jmp
std
xchg
inc
inc
pushf
jle
orb
inc
mov
push
cltd
xchg
ret
pop
add
aad
add
mov
out
and
and
mov
jg
pushf
sbb
enter
stc
pop
push
les
lret
orb
mov
fnstenv
aaa
xchg
and
lret
fcompl
mov
push
scas
lret
pushf
adc
outsb
or
jg
or
fadd
sbb
add
pop
xchg
pop
mov
addr16
xchg
ds
sarl
je
mov
fidivrs
jmp
loop
fistps
push
jecxz
adc
push
sub
cmp
loope
std
adc
cltd
sub
dec
sub
jns
dec
aas
test
int
mov
jmp
cld
pop
pop
push
mov
pop
movd
test
xor
jl
pop
sbb
pop
inc
cmp
sarb
iret
mov
push
sub
push
test
mov
inc
xchg
mov
xchg
push
mov
mov
lock
cmp
rcrl
rclb
xchg
xchg
cmp
jge
int
fisttps
popa
cmp
push
nop
out
add
mov
in
andl
movb
testb
or
repnz
push
jo
sbb
dec
mov
dec
jge
out
clc
pusha
into
inc
cs
or
js
stc
and
and
xchg
shrl
mov
loope
adc
lcall
fimuls
insl
cli
sti
sub
dec
adc
xchg
pop
ret
popa
loope
mov
js
popa
sbb
cmp
test
ret
adc
ja
dec
repz
dec
push
xchg
repnz
popa
push
and
adc
fldenv
pop
bnd
push
inc
repz
into
inc
fildll
adc
push
or
add
pop
adc
push
ljmp
mov
mov
pop
into
xlat
fcoms
sub
dec
xorps
out
and
pusha
pop
xor
cmp
sahf
fdivs
ss
sbb
and
adc
notb
mov
aaa
cmp
fwait
xchg
push
ficomps
mov
in
sahf
bsr
std
mov
cmp
push
popf
fisubl
sbb
pusha
out
push
fisubl
jecxz
loope
xor
dec
insb
and
jmp
and
in
pop
insb
jle
ds
xor
in
mov
sub
xor
push
dec
lret
mov
pop
sbb
test
pop
jmp
test
inc
sti
push
leave
or
add
sahf
xor
or
lret
jmp
out
sbb
scas
dec
or
mov
mov
add
mov
jl
pusha
add
xor
push
xor
cmp
cmp
mov
lock
adc
cmp
mov
ja
cmp
jge
or
pop
sub
repnz
mov
adc
pop
insl
aaa
loop
jae
shll
mov
add
lcall
pop
js
and
repnz
int3
shll
in
lret
sub
popa
repnz
xchg
dec
sar
jno
into
xor
xor
and
push
xor
cmp
mov
stc
cmpsl
rolb
adc
adc
orb
outsb
jmp
add
mov
xchg
lds
test
in
xlat
sub
jmp
push
push
insb
dec
jne
or
jmp
xor
jmp
xchg
rorl
and
jge
rcll
cltd
stos
mov
pop
rcpps
insl
cmpsb
mov
popa
pushf
nop
push
and
sub
mov
ffree
jne
or
hlt
int
cmp
mov
jmp
out
test
movsb
mov
or
pop
xchg
out
outsl
divb
and
adc
mov
jge
js
dec
xchg
push
loop
stos
mov
lret
in
out
stos
out
stc
dec
je
fidivl
call
out
cmpsl
sbb
xchg
push
and
loopne
cmpb
loop
sbb
xor
in
and
cmc
xchg
shrb
out
push
pop
rorl
push
sar
lcall
mov
dec
sub
mov
add
insb
sbb
jecxz
rorl
jl
or
shrl
stos
push
ss
pop
leave
inc
stc
cmp
idiv
dec
mov
rclb
in
in
ljmp
sub
jl
inc
pop
add
push
lcall
jp
mov
push
mov
clc
loop
stc
rolb
dec
push
and
mov
jp
xchg
mov
data16
ljmp
mov
mov
mov
jns
xor
jnp
lods
and
mov
push
lret
and
sub
push
mov
jp
adc
or
lret
enter
sub
jns
lock
sahf
loopne
sarl
stc
into
inc
pop
mov
mov
or
stos
xchg
jo
aam
push
or
sbb
push
mov
lahf
jns
test
xchg
adc
mov
jecxz
add
adc
pop
test
fcompl
mov
cmp
rorl
mov
adc
pop
or
push
outsb
out
push
ss
pop
add
inc
jns
call
xor
add
xlat
outsl
pop
jo,pn
bound
mov
divb
mov
mov
ss
andb
arpl
das
inc
pop
add
sub
xor
and
dec
je
cmp
push
ss
adc
cmc
add
pop
pop
repnz
mov
jl
add
das
js
ds
cmp
and
mov
leave
pop
loop
jb
mov
mov
js
xchg
cld
movsl
mov
inc
es
andb
idiv
push
loopne
mov
aam
cltd
mov
inc
xchg
adcb
aad
sub
jo
es
cmp
popa
sahf
addl
stos
test
icebp
les
mov
aam
int
mov
shl
or
sub
roll
rcrb
sub
adc
sti
adc
push
pop
sub
popf
pop
jno
cmp
and
in
in
adc
sbb
test
les
push
mov
push
xor
movsb
das
cmp
jne
sahf
cmp
stos
xor
sbb
pop
outsb
dec
dec
xor
leave
imul
out
xlat
lea
popf
dec
lock
lods
push
mov
mov
push
les
das
lcall
adc
fwait
pop
fcmovb
cmpsl
lret
insb
sbb
sub
xchg
inc
int
mov
lods
mov
or
in
xor
dec
das
xchg
xchg
ds
ja
imul
stos
and
aam
lea
jo
xchg
push
mov
dec
mov
mov
jne
push
mov
add
in
mov
bound
pushf
lods
mov
mov
cmp
stos
sbb
lret
and
fnstcw
movsl
push
mov
cmp
xchg
cmc
fdivl
dec
pop
clc
in
scas
jb
inc
dec
iret
sub
dec
leave
inc
mov
sub
fdivs
divl
sub
cmp
test
cwtl
or
enter
mov
pop
lock
cmp
jle
fxch
xchg
push
jnp
test
sub
sbb
insl
paddusw
fildll
pusha
mov
and
ret
movsl
add
mov
in
outsb
or
cmp
icebp
cmp
pop
cld
movsb
je
push
jecxz
mov
xchg
mov
mov
adc
fcomps
cmc
xor
repz
push
cmp
xchg
gs
sti
pop
dec
push
or
adc
in
push
int3
adc
xlat
call
popf
or
int3
mov
push
test
aam
aad
insl
insb
cwtl
fadd
inc
pop
mov
insb
pop
in
mov
mov
xor
jae
push
xor
mov
push
adc
cmp
hlt
lock
push
fcoml
lahf
adc
outsl
inc
test
mov
xor
arpl
aad
add
jno
adc
out
pop
scas
cltd
lahf
sbb
dec
xchg
cli
aad
test
test
push
sbb
outsl
in
sahf
mov
sti
mov
add
jle
inc
push
dec
call
ds
cmpsb
out
dec
outsb
shlb
clc
dec
cltd
lret
cmp
inc
mov
fwait
ds
leave
repnz
mov
xchg
mov
mov
push
mov
xchg
lret
imul
lea
bound
imul
pop
ret
pop
mov
mov
inc
inc
mov
out
push
pop
add
inc
cmp
sbb
clc
arpl
xchg
addr16
pop
and
sbb
add
stc
gs
push
cmp
mov
pop
jns
pop
inc
int
cmpsl
jns
imul
lods
jns
or
jae
scas
insl
pop
std
inc
loopne,pt
mov
sub
adc
xorb
dec
or
mov
xchg
xchg
ret
popa
dec
cmpb
xor
cmp
mov
cmp
inc
push
mov
pop
pusha
pop
clc
fisttps
call
pop
dec
loop
nop
pusha
loopne
call
inc
into
mov
gs
jg
mov
cwtl
fstp
xchg
sahf
out
fcompl
faddp
addr16
out
mov
iret
add
sub
mov
sbb
inc
jae
adc
scas
xchg
mov
adc
movsb
inc
inc
dec
or
cmpsb
in
jmp
mov
shrb
mov
dec
mov
inc
sub
cmpsb
push
test
es
add
xchg
jo
push
jnp
xor
lcall
and
daa
xlat
mov
out
cmp
shl
int
fmul
out
mov
jl
fsubl
dec
stc
repz
rolb
shll
cmpsb
ds
inc
mov
jo
cmp
cltd
fdivrl
cmp
cmp
rcr
rclb
cmp
pop
out
jno
shl
sbb
sbb
or
jmp
push
test
add
hlt
and
js
cmp
sbb
add
js
out
xor
das
jb
adc
pop
inc
sbb
mov
subb
xchg
cmpsl
dec
adc
pop
cmc
xor
das
pop
mov
jp
xchg
push
jb
aam
inc
data16
lods
sub
or
mov
or
sub
rcr
xchg
xchg
dec
xor
adc
orb
loop
push
fstps
ss
mov
dec
and
fnsave
pop
mov
inc
dec
out
inc
or
fs
xor
call
push
lahf
and
out
jg
fbstp
mov
xchg
sbb
and
insl
stos
fisubl
ret
shrb
icebp
mov
jle
cli
dec
mov
cs
or
mov
and
mov
movsb
push
jmp
mov
das
imul
pop
test
loopne
sub
or
xchg
pop
xchg
sub
rorb
dec
std
mov
in
push
loopne
mov
xchg
dec
jl,pn
div
xor
aas
das
pop
adc
lods
or
jb
mov
mov
das
sbb
jl
pop
inc
fdivl
data16
std
adc
loope
and
ror
jns
mov
sbb
call
fadds
lods
std
push
push
or
push
insl
jge
iret
scas
cmp
cmpl
sbb
mov
add
inc
outsb
sub
cmc
test
popf
sub
push
push
push
in
mov
jne
inc
and
push
nop
imul
int3
push
xorl
iret
je
pop
xchg
xor
inc
aad
fstl
fcoms
adc
cmp
or
pop
jns
ss
push
add
xor
cmp
and
jecxz
sbbb
andb
mov
mov
push
mov
orw
popa
jbe
pop
gs
shufps
out
and
es
ror
repz
sub
pop
iretw
fwait
aaa
shlb
adc
add
lcall
pop
loopne
adc
divb
rol
repz
es
sbb
mov
adc
popf
jg
pushf
iret
orb
inc
mov
movb
sub
mov
mov
pop
nop
mov
mov
adc
mov
ret
sbb
or
xor
hlt
fmull
jmp
lcall
lods
mov
inc
in
lahf
jo
mov
jno
scas
fiaddl
xor
in
or
dec
out
sbb
sar
lcall
pop
mov
lock
fistl
or
outsl
pushf
push
xchg
adc
cmp
popf
andl
xchg
mov
cmp
xor
popa
ljmp
cmp
mov
test
cmc
mov
cmc
jle
dec
aad
sbb
fs
pop
or
ret
std
enter
push
mov
jmp
std
sbbb
fwait
dec
adc
adc
fstps
xchg
shll
rorl
jmp
sbb
ret
push
jno
xchg
nop
stos
mov
add
cmpsb
daa
insl
loop
enter
pop
jno
sahf
xchg
sbb
or
imulb
loopne
cmp
idivb
dec
ds
mov
aam
sti
push
dec
add
mov
ds
jge
aas
or
pop
lods
xor
or
fidivrs
loope
rep
inc
addr16
mov
xchg
mov
sbb
mov
addr16
repnz
mov
lds
pop
lods
inc
xchg
lret
adc
inc
mov
dec
add
out
and
scas
pop
adc
cmp
sbbb
jo
sbb
or
rcl
push
cwtl
xchg
std
inc
insl
add
xchg
pop
cmc
push
les
dec
pushf
and
inc
mov
mov
mov
dec
inc
xor
mov
in
cmp
fisttpll
mov
mov
sub
jb
dec
nop
or
popf
adc
lds
in
push
adc
push
out
mov
adc
xor
mov
push
and
in
adc
mov
mov
pop
dec
int3
out
lret
push
cmp
pop
xor
push
shr
lcall
hlt
ret
inc
fdivrs
les
hlt
loopne
stos
push
cmp
inc
movsl
dec
and
push
and
add
test
mov
or
lds
ds
popf
add
popf
sti
pop
jecxz
sbb
in
out
lods
imul
push
push
xor
stos
cmpsb
mov
sub
cmpsb
push
ds
imul
mov
ljmp
cmp
cmp
nop
adc
arpl
imul
jl
dec
gs
jecxz
sub
mov
mov
leave
out
jge
pop
incb
dec
movsl
gs
xor
push
daa
sbb
and
sbb
mov
inc
jp
push
sbb
inc
jbe
mov
out
or
push
mov
mov
jns
pop
mov
adc
jmp
and
add
dec
mov
xorb
jge
hlt
bound
mov
rcrl
into
loope
push
and
sbb
inc
sub
imul
hlt
dec
pop
cwtl
dec
outsb
sarb
lods
mov
clc
mov
jb
dec
pusha
mov
mov
jns
xor
aad
cld
ja
je
push
push
nop
cs
add
and
adc
out
subb
push
test
inc
aad
pop
orb
jae
mov
int3
cmp
cmp
into
out
xchg
sub
aaa
shrl
cmp
mov
js
lret
clc
or
jecxz
in
test
add
dec
pop
jae
stos
fildl
movsb
js
inc
pusha
in
int3
xchg
into
rorl
push
sbb
les
dec
push
cmpsl
add
imul
jl
add
pop
mov
loopne
cmpsb
push
inc
aas
incl
sti
in
jnp
movsl
mov
xor
ds
rcrb
mov
cmp
and
mov
adc
das
outsb
clc
out
push
lret
mov
or
test
in
adc
stos
mov
icebp
movsb
outsl
sub
sti
stos
and
and
push
xor
adc
dec
sbb
jmp
pop
xchg
sub
or
mov
xchg
mov
pop
pop
lret
push
mov
xchg
test
loopne
push
inc
cs
in
push
jge
mov
call
cmp
add
adc
or
test
daa
clc
lret
inc
icebp
into
dec
insl
int3
sbb
xor
jp
mov
adcb
mov
call
inc
fildl
inc
push
dec
mov
lahf
xor
mov
or
mov
cmp
hlt
cmp
stos
outsb
pushf
push
scas
arpl
pusha
ret
je
incl
inc
movsb
and
xchg
js
adc
jge
xor
xor
xchg
cs
int3
mov
jg
sub
stc
mov
leave
adc
mov
pop
dec
jns
imul
jno
dec
and
dec
jl
adc
stc
scas
mov
lahf
ret
jp
mov
daa
in
clc
add
xchg
mov
daa
ds
add
clc
popf
and
fcmovnu
hlt
lcall
pop
movsb
mov
cmp
adc
stos
sbb
adc
dec
push
jns
pushf
fimuls
push
stos
xchg
cmp
sbb
or
cmp
xor
mov
daa
icebp
repz
pop
mov
push
cmp
nop
jg
imul
sbb
mov
xchg
mov
mov
adc
inc
inc
insl
lret
or
cmp
xor
sub
mov
push
xchg
jae
mov
inc
pusha
pushf
movsl
data16
flds
pushf
int3
inc
xchg
mov
rcll
cmpl
in
cltd
stc
cmc
cmpsl
stos
dec
popa
push
test
mov
inc
outsl
scas
push
push
jge
popa
add
hlt
rcrb
and
lcall
sahf
fistl
int3
rorb
mov
fs
fistl
popa
dec
ficoms
in
push
jecxz
aad
ficoms
jl
arpl
inc
icebp
adc
inc
sbb
push
inc
mov
cmpsb
aad
outsl
mov
inc
imul
rcr
jnp
cmc
ds
inc
in
and
mov
dec
pop
add
mov
or
push
mov
divps
jbe
mov
or
popa
jle
xor
flds
cmp
pop
out
movsb
jle
pop
sbb
sub
sub
cmp
es
cwtl
or
xlat
pop
sahf
icebp
jbe
pop
xor
cmpsb
jmp
push
inc
pop
pushl
lret
jae
jmp
stc
hlt
out
out
daa
bsr
mov
pushf
addr16
dec
lcall
jo
or
hlt
xor
fistpll
cwtl
das
cmp
aas
cmp
inc
fdivrl
mov
mov
ret
call
stos
or
sbb
ret
out
pop
and
mov
adc
mov
mov
sub
ss
xlat
insl
jo
sbb
fisubrl
call
mov
adc
jl
aam
int
mov
ret
cwtl
and
int3
insb
cli
stc
shr
xchg
rcrl
fdivs
pop
inc
sub
hlt
out
test
ret
invd
mov
jl
imul
in
in
xchg
sub
pop
sbb
sbb
ficomps
pop
jl
in
adc
push
repz
in
sti
popa
fmuls
sub
pop
push
into
push
pop
sub
cmp
or
gs
rcrb
xchg
in
sbb
xchg
dec
out
lds
fildl
pop
mov
mov
mov
cwtl
cmp
push
pop
pop
pushf
or
insb
je
mov
int
test
pop
fisttps
cmp
jecxz
push
arpl
sbb
mov
int3
xor
roll
xchg
sub
pop
cwtl
mov
ljmp
mov
enter
sbb
jecxz
add
sarl
mov
cs
lds
jae
mov
filds
movsl
or
das
inc
std
or
mov
jecxz
add
idivl
inc
pop
jg
mov
sbb
cmp
mov
je
mov
xchg
jne
pop
mov
out
fsubrl
orb
iret
push
jns
mov
enter
jbe,pt
fsubl
fildll
fadd
stc
dec
js
cmc
push
shl
movsl
cmp
mov
fwait
testl
or
pop
rolb
mov
xorb
lret
xchg
decb
test
insl
push
and
in
mov
loop
mov
cmp
jb
iret
xchg
sbb
andl
jle
js
mov
shll
ja
pushf
jnp
jae
or
and
sub
stos
imul
test
icebp
cltd
leave
aas
repnz
cmpsl
loopne
bnd
dec
enter
fmull
inc
jle
rolb
mov
dec
les
mov
stc
ljmp
mov
mov
adc
adc
mov
int3
lods
jae
popl
mov
sbb
mov
gs
pop
and
push
leave
jecxz
xor
mov
jae
push
push
and
mov
outsb
xor
out
mov
dec
sarb
mov
decl
movsb
cmp
push
xchg
dec
in
popa
jmp
pushl
xor
jmp
inc
jmp
pop
insl
ror
rcl
rcrl
mov
sarl
fucom
mov
mov
sub
sbb
testl
int
lahf
jnp
sub
push
inc
xchg
or
dec
shl
xchg
sub
dec
in
inc
pop
aad
pop
cld
xor
push
or
outsb
inc
pop
sbb
mov
xchg
idiv
cs
cmp
lret
mov
xor
in
addb
xchg
mov
int3
sbb
add
loope
dec
movsb
shrb
mov
in
test
ja
xchg
cltd
scas
incb
shl
cli
sar
test
icebp
dec
sub
lds
lret
arpl
pop
pop
rcll
mov
mov
movsl
inc
or
fsubrp
rclb
or
push
mov
mov
jmp
xor
mov
insb
stos
jecxz
sub
xor
arpl
xchg
adc
cmp
add
mov
cmpb
cld
fistpl
shl
nopl
scas
and
stos
addr16
fisttpl
shrl
in
add
xor
test
add
dec
shll
ret
mov
mov
daa
lahf
bound
mov
or
jns
out
xchg
mov
jae
inc
sarb
scas
int
shll
rcrb
add
inc
add
repz
in
and
enter
sti
pop
mov
and
imul
int
out
push
mov
fistpll
jle
xchg
dec
xchg
push
cli
pop
hlt
lahf
mov
sub
ret
mov
stos
ret
cmp
jnp
xchg
imul
stos
nop
enter
mov
insb
gs
and
add
data16
aad
dec
pop
push
sub
movsb
aas
jmp
cli
jno
fbld
mov
stos
push
add
pop
push
add
rorl
data16
std
mov
addr16
dec
dec
leave
fmull
mov
adc
and
minps
add
repnz
sbb
frstor
gs
cmpsb
push
dec
mov
fsubl
aas
adc
sub
cmpsb
xchg
mov
mov
xchg
lock
repz
icebp
fs
mov
xlat
sub
jecxz
pop
outsb
test
cmp
frstor
aaa
scas
ljmp
inc
mov
adc
pusha
ret
cmp
gs
push
xor
push
or
jae
mov
xlat
arpl
mov
add
movsb
add
js
subb
fmulp
mov
adc
xor
pop
std
mov
and
mov
pop
dec
addr16
dec
jle
cmc
xlat
bound
sbb
xchg
lods
mov
stc
pusha
enter
adc
jmp
test
pop
test
xchg
repz
addr16
sbb
adc
sbb
imull
adcb
jae
and
xchg
adc
xchg
add
push
outsl
andl
cs
fdivrp
test
xchg
mov
cs
leave
shlb
push
out
arpl
je
xchg
fcompl
add
xor
mov
mov
ret
jmp
rcrl
in
sub
inc
ja
lret
test
fnsave
xchg
inc
sbb
fwait
in
jno
cwtl
outsl
stos
sbb
aaa
jno
cs
aam
mov
jp
mov
divb
push
je
out
add
cmpsl
test
push
dec
xchg
test
repz
or
cmp
sbb
xor
xor
sub
cmc
fwait
out
aam
jnp
push
mov
cltd
mov
idivb
testl
movl
mov
sbbl
dec
sahf
shll
stc
pop
cmp
xor
aam
xchg
dec
dec
xchg
mov
cmp
xor
add
adc
cltd
or
sbb
pop
ffree
xchg
icebp
fdivrs
adc
jmp
or
int3
leave
xchg
lea
andl
fwait
lods
lret
popf
jae
dec
push
pop
psubusb
dec
cmp
rclb
mov
icebp
mov
xchg
loope
int
cmpsb
xor
mov
into
add
insb
inc
fsubrs
daa
cmp
fwait
lods
je
add
mov
js
adc
inc
add
push
sbbl
xor
xchg
mov
dec
push
in
test
addb
xlat
pop
dec
lret
pop
mov
add
stc
inc
movl
test
sahf
pop
popf
mov
mov
mov
mov
mov
or
push
jl
outsb
push
addr16
inc
mov
out
shrl
dec
fidivl
xchg
or
jno
pushf
pop
jmp
jns
movsl
out
mov
push
test
mov
mov
popf
outsb
arpl
mov
ds
pushf
and
xlat
pop
stos
dec
pop
pushf
jp
lods
gs
repnz
ds
fisttps
mov
mull
push
int
jl
jmp
bound
push
jl
lcall
or
ror
jecxz
push
rorb
lods
pushf
sub
jmp
cmp
stos
jecxz
cld
xchg
inc
or
dec
pop
pop
mov
and
stos
xor
mov
aam
es
or
setl
push
mov
xchg
jno
jl
mov
xor
add
addr16
fcmovbe
bound
int3
lea
xchg
sub
cltd
pop
mov
fstp
jae
iret
jo
jnp
mov
stos
jecxz
push
add
cmp
inc
lret
mov
inc
movsb
or
cmpsl
sar
pop
imul
fcmovne
enter
rclb
mov
jle
jl
pop
call
rol
testb
clc
add
test
out
packsswb
mov
sarl
and
mov
stos
aas
adc
lcall
lods
repz
fcoms
popf
jno
add
test
outsl
rcr
rcrb
dec
mov
xchg
fs
stc
add
lret
mov
dec
xchg
mov
xchg
clc
daa
pop
test
jnp
xchg
jmp
ret
icebp
call
jae
cmpsl
xor
aad
imul
inc
scas
and
add
ret
jnp
mov
stc
inc
push
das
mov
mov
addb
jb
sub
push
adc
sbb
pushf
fcmove
push
ret
icebp
jp
or
aaa
xchg
imul
adcl
mov
fcmovne
jmp
mov
mov
sbb
push
push
or
sub
jne
push
push
xchg
push
mov
in
push
rorl
sub
ret
out
dec
insb
aad
dec
push
xchg
mov
sub
mov
ror
mov
adc
iret
cmpsl
adc
inc
adc
jl
lods
lret
xlat
cltd
test
mov
mov
pushl
lret
aaa
cwtl
nop
leave
push
aam
dec
adc
jae
jp
add
in
sub
and
les
adc
stc
shll
je
pcmpgtb
push
and
add
enter
inc
insb
iret
mov
iret
jnp
btr
jbe
lods
loopne
aad
int3
pusha
into
add
adc
not
scas
mov
fsubs
jnp
out
ljmp
scas
insb
loop
stos
xor
scas
add
mov
rcll
or
and
loopne
testl
cli
lret
fistps
out
add
pop
pop
mov
in
js
mov
into
mov
jb
pop
sbb
inc
jno
jg
add
ja
add
dec
mov
dec
test
or
mov
std
inc
inc
pushf
mov
push
adc
sub
data16
xor
fwait
pop
imul
sbb
addr16
adc
aam
cmpsl
mov
shl
in
adc
push
shll
lock
cmp
adc
xlat
pop
aad
mov
addb
fldcw
fsubl
dec
jge
scas
out
aad
std
adc
clc
sub
jb
add
sub
push
pop
fnsetpm(287
je
sbb
and
cmp
sbb
fistpll
fwait
jne
adc
test
clc
nop
pusha
je
outsl
jle
je
into
dec
ja
cmp
inc
mov
xor
inc
ds
xlat
inc
test
push
movsb
icebp
jne
xchg
mov
call
jne
xor
xchg
fucomi
mov
pushf
int
cmp
jno
pop
pop
fsubl
fists
loope
pushf
xor
sbb
pop
push
jecxz
add
sahf
cmpl
stc
push
int
rorb
or
mov
mov
add
rclb
or
rclb
lods
push
iret
inc
stos
ja
scas
cmp
andb
cmc
cltd
xor
mov
lock
mov
add
iret
sbb
push
cwtl
aaa
adc
inc
hlt
cmc
pop
add
outsl
rcr
outsb
adc
pop
or
jge
sub
mov
lock
jle
mov
ret
clc
pop
iret
jns
icebp
mov
fcom
pop
jnp
mov
sar
imul
push
ja
mov
and
popa
sub
or
pop
addr16
jbe
ljmp
cmp
jge
xlat
mov
test
jge
popa
dec
outsl
jmp
inc
aad
push
fiaddl
push
call
xchg
ficomps
fwait
xor
mov
rolb
in
dec
les
and
test
add
fisubs
mov
push
jae
dec
and
pop
xchg
xchg
mov
pop
sbb
test
movsb
gs
sub
or
test
sbb
mov
fwait
inc
mov
jmp
loopne
jns
inc
aas
cs
adc
pop
js
cmp
inc
mov
adc
or
fwait
push
leave
aam
jb
sub
sbb
cmp
xchg
aam
andb
xchg
xchg
adc
inc
pop
push
mov
xor
adc
fs
mov
hlt
pusha
xor
or
loopne
ja
adcb
fnsave
adc
jle
in
call
sti
movsb
out
jae
mov
pop
ret
pop
dec
in
lds
mov
lret
pop
pushl
push
xor
xchg
gs
xchg
icebp
in
mov
mov
stc
ficompl
inc
imul
fiaddl
mov
sub
adc
imul
jo
jp
int3
xchg
push
shll
repnz
jnp
je
adc
addr16
in
cs
rclb
sbb
out
ret
add
xchg
mov
lea
into
jno
fcomps
dec
push
test
in
lods
and
push
inc
or
scas
xchg
aad
test
sar
not
aad
push
mov
addb
cltd
xor
and
add
out
pusha
push
pushf
push
mov
rcl
push
int3
addr16
lahf
xchg
push
cmpsl
cwtl
mov
adc
mov
xchg
adc
inc
dec
jb
in
inc
lods
ss
push
sbb
ret
test
pop
test
nop
daa
lods
loopne
lods
fsubs
sub
fdivrs
mov
push
das
pop
hlt
add
repnz
clc
imul
addr16
or
mov
in
xchg
stos
insb
int
mov
inc
adc
lods
push
dec
or
lea
adc
push
dec
xor
inc
xor
push
je
addr16
push
ret
dec
push
dec
and
pop
mov
cmp
test
mov
jo
push
jb
repnz
xlat
arpl
ss
or
inc
stos
add
popf
xchg
inc
pop
dec
stos
xchg
pushf
scas
jbe
jnp
div
sti
add
and
or
jne
xchg
fcomps
dec
aam
rclb
lcall
mov
cmp
orl
je
pop
adcb
in
mov
sbbl
out
das
lods
xor
mov
jo
je
cmpsb
xor
xor
jmp
sub
insl
and
ljmp
sub
dec
mov
xor
cld
fldl
push
aaa
jmp
scas
jnp
or
mov
std
jnp
jo
in
pop
mov
inc
dec
inc
imul
mov
pop
mov
pop
ret
jno
cld
dec
popa
lcall
rcrl
aaa
add
sbb
and
sbb
in
div
sub
sbb
pop
les
shll
jns
inc
in
mov
mov
cwtl
mov
insl
in
bnd
cmpb
jmp
cmpsl
les
sub
test
mov
jo
add
pop
and
aaa
lea
cmp
shrl
shrb
adc
stos
push
lods
jle
or
je
mov
sahf
jno
jmp
mov
push
or
push
push
inc
fadds
stos
popa
xor
fsqrt
sahf
xchg
aad
mov
jns
lods
push
fcomps
and
dec
xor
fildll
push
repnz
dec
fiadds
xchg
add
in
adc
pop
adc
in
cli
or
mov
or
add
divl
add
lcall
leave
testb
xchg
xor
mov
mov
ss
jno
rcll
xchg
cmp
xchg
ret
sub
das
cmpsb
push
loop
insb
outsl
sub
imul
dec
cmpb
mov
lea
pop
or
push
jg
insl
fisttps
in
inc
les
in
aaa
cmp
mov
adc
and
int3
arpl
mov
mov
fisubs
adc
stc
xor
pop
popa
mov
mov
cltd
shrb
dec
xchg
mov
xchg
dec
pop
dec
mov
jecxz
cli
iret
inc
mov
lock
xor
ret
xchg
sub
stc
mov
and
lret
fsubrp
xchg
inc
jl
push
mov
xor
leave
cmpsl
insb
dec
xchg
mov
adc
fs
lahf
push
mov
test
mov
add
in
push
dec
iret
push
push
mov
shrl
jg
repnz
fsubs
cmp
and
xchg
faddp
cmp
movsl
ss
pushf
adc
inc
pop
sbb
push
pop
cld
in
push
push
or
mov
xor
xor
mov
cmp
push
hlt
cmp
push
mov
stos
daa
popf
push
and
pop
jl
mov
int3
fimuls
jno
sub
mov
int
dec
movsb
xor
add
fcompl
fsubs
pushf
adc
add
sbb
rcrl
xchg
xchg
xlat
add
incb
mov
sub
enter
popa
cmp
out
loope
xor
jecxz
jne
mov
mov
ja
insl
inc
jle
add
stos
repz
mov
lret
in
mov
popa
mov
pusha
and
fldl
push
loopne
cmovb
jmp
jns
sbb
cmp
push
mov
fwait
mov
sbb
dec
mov
cmp
cmpsl
or
jo
js
mov
add
fidivrs
sub
daa
push
shr
ss
aam
comiss
gs
imul
test
lret
movsb
xor
adc
add
add
insl
addr16
pop
add
std
outsl
push
mov
push
inc
mov
cld
pop
enter
leave
pop
add
mov
fistps
test
fildll
xlat
cmc
rorl
xor
mov
mov
aam
pop
or
cmp
add
fs
xor
mov
mov
pop
fisubs
mov
xchg
mov
jno
push
and
adc
push
xchg
jb
mov
sub
mov
into
mov
cmp
scas
pop
ret
fists
sbb
adc
fdivrs
inc
adc
mov
push
subl
insl
cld
roll
xchg
and
inc
inc
xchg
xchg
test
test
mov
lock
push
pop
xchg
xchg
push
push
pop
sbb
out
out
clc
pop
jecxz
jmp
imul
pop
insb
fbld
lods
loope
sahf
jo
scas
out
sbb
xor
push
and
and
inc
push
into
fdivs
mov
in
lods
sub
sbb
jae
cli
mov
or
inc
inc
flds
pop
jne
cwtl
addb
sub
sbb
pushf
xchg
movsl
pop
dec
sbb
in
sub
dec
push
adc
and
mov
in
mov
es
jecxz
mov
adc
pop
pop
fwait
jl
xor
add
ss
lret
div
rclb
lret
push
dec
sub
xchg
jmp
cmp
scas
jecxz
popf
clc
cmp
test
mov
xor
and
xchg
or
xor
mov
hlt
sbb
xchg
add
add
call
mov
inc
test
popf
fldln2
add
pop
outsb
mov
xor
mov
in
sub
xlat
test
push
popf
testl
not
ret
mov
push
lret
sub
mov
mov
dec
adcl
push
and
gs
mull
xchg
sbb
xor
cmpsb
mov
jge
or
ret
mull
enter
enter
add
stc
push
sbb
lods
pop
sub
xchg
cli
out
or
les
outsl
cmp
jae
sbb
bound
adc
insl
pop
pop
sub
imul
sub
je
cltd
pop
add
loope
mov
scas
adc
mov
loope
cmp
cmp
and
movsl
stos
mov
pop
adc
loop
aam
loopne
cli
je
adc
pop
lods
jg
mov
pop
popf
icebp
jnp
mov
movsl
shrb
pop
mov
mov
orb
addr16
jbe
pop
cltd
insl
push
mov
lds
icebp
scas
inc
jns
cmpsb
ja
out
sahf
movb
jo
loopne
sbb
aaa
xor
enter
or
cmp
inc
jb
stc
test
shrd
mov
push
sub
adc
leave
in
dec
cld
scas
sahf
bound
aam
sti
push
lea
xchg
out
rorb
outsb
xor
sbb
cmp
cmp
test
rorb
sbb
or
shrb
add
scas
mov
mov
mov
icebp
clc
mov
test
es
shlb
dec
std
dec
lcall
cmp
adc
push
xchg
sub
stos
out
sbb
sti
add
dec
inc
adc
push
mov
mov
dec
sahf
int
pop
fimuls
cmp
lock
js
pop
shrb
mov
arpl
cmc
sub
add
loop
pop
aad
orl
call
xchg
mov
mov
sarb
js
lds
das
push
mov
inc
xchg
mov
cli
and
adc
sbbl
fdivr
inc
ret
out
push
jmp
out
mov
push
pop
jnp
and
mov
les
sbb
jne
into
jbe
mov
xchg
loopne
sub
mov
dec
jae
aas
sbb
inc
mov
xchg
pop
fs
inc
xchg
inc
scas
out
rdmsr
insb
mov
push
sub
mov
pop
inc
push
inc
shl
stc
cmpsb
sbb
fidivs
add
es
adc
in
lds
in
adc
dec
lock
xlat
sub
clc
into
stos
adc
dec
or
aas
cmpsb
sbb
repz
pop
sbb
inc
test
dec
xchg
sub
sarl
ds
sub
cmp
and
inc
and
cld
es
sarb
jp
mov
cmp
jb
push
enter
test
stos
call
insl
adc
das
test
cmp
cwtl
adc
mov
jb
or
and
ficompl
pop
xchg
push
pusha
xor
push
dec
xchg
test
add
ljmp
cwtl
jbe
dec
push
push
cmp
mov
or
test
hlt
or
rcl
out
orl
es
and
mov
scas
out
mov
addl
psadbw
sbb
inc
mov
stos
mov
scas
je
sbbb
xchg
push
inc
mov
popf
stos
lds
lods
inc
dec
fists
push
mov
inc
mov
or
call
imul
ret
jge
popa
cld
int
in
pop
push
adc
into
mov
into
add
test
adc
mov
inc
daa
sbb
jmp
rclb
call
xor
cmpsb
inc
push
fidivrl
mov
jns
data16
jb
pop
adc
push
xchg
adc
lahf
cld
fsubs
add
scas
or
or
pusha
add
aad
popa
dec
dec
lret
repz
dec
inc
subl
div
sti
dec
mov
add
lahf
cmp
test
adc
jge
test
cwtl
xor
adc
add
lret
pop
loope
mov
inc
cmp
cmp
mov
or
sarl
scas
loope,pt
inc
dec
imul
push
outsl
fwait
mov
out
mov
push
push
xlat
lock
mov
pusha
test
mov
filds
loope
and
mov
jb
int3
dec
mov
and
push
hlt
and
std
adc
imul
push
xchg
pop
xor
pop
scas
lahf
dec
into
sub
data16
inc
popf
pop
popf
outsb
sub
pop
inc
mov
jp
xchg
dec
and
arpl
aas
aad
sub
mov
pop
mov
movb
mov
adc
lcall
mov
push
aad
gs
cli
jne
adc
xlat
xchg
stos
fdivl
push
add
aaa
or
sbb
push
shlb
repnz
cmp
jnp
test
cld
mov
push
jecxz
sub
jle
sbb
cmp
and
stc
not
into
xlat
arpl
daa
push
cmp
mov
or
out
dec
pop
pop
int
xchg
mov
out
les
sbb
js
outsb
sbb
jle
pusha
fs
inc
fs
ret
gs
imul
inc
xor
fwait
lods
adc
fidivrl
ret
jb
mov
push
xor
cwtl
mov
cmp
mov
cltd
pop
fnsave
iret
pop
push
ret
pop
cmpsl
push
jbe
push
mov
adc
neg
sbb
sbb
je
mov
ret
test
push
hlt
movl
jl
push
imul
ds
fbstp
in
aaa
outsl
adc
jnp
lea
hlt
adc
repnz
std
ljmp
jns
and
test
xlat
imul
repz
lods
mov
pop
dec
inc
jl
cmpsl
jle
subb
inc
inc
ja
lods
jae
dec
aas
ja
sarl
sub
sub
mov
or
popf
dec
test
push
sahf
sahf
inc
jo
jae
imul
cld
push
or
push
xchg
push
sub
shr
cmp
pop
leave
push
mov
adc
popa
lods
enter
mov
in
jne
dec
insl
pop
and
xchg
icebp
and
pop
fdivs
gs
or
cmc
pop
das
jmp
pop
jmp
sbb
jle
dec
subb
dec
imul
movsb
jae
roll
cld
sahf
mov
push
jg
dec
adcb
ja
ror
in
or
fdivrs
inc
pop
enter
outsb
mov
outsb
les
or
xchg
jno
sbb
push
inc
ret
sbb
iret
insl
dec
lcall
xchg
aas
sbb
add
mov
jb
and
in
and
push
imul
scas
std
lock
mov
fldt
outsl
lret
loopne
rcrb
or
pop
mov
fistpll
and
lahf
das
or
sub
sbb
pop
in
mov
loope
jbe
repz
and
cmpsb
push
gs
dec
jp
lea
enter
or
cmpsb
cli
lods
add
fs
mov
mov
fs
dec
loopne
cmp
mov
and
adc
sahf
movsl
je
mov
stos
or
xlat
insb
cmpsb
jno
or
or
mov
daa
xchg
pushl
inc
jns
insb
lea
fcomp
lret
mov
cmp
sbb
push
or
xor
mov
xor
jnp
jno
pop
call
imul
sbb
into
imul
flds
push
mov
loope
inc
push
sub
bswap
loope
xorb
stos
mov
jecxz
mov
cli
xchg
lahf
loop
scas
in
arpl
push
sti
sbb
or
sub
packsswb
xchg
cmpsl
in
xlat
lret
sub
sub
dec
mov
scas
fidivs
fsubrs
fwait
add
mov
dec
sub
or
push
inc
xchg
gs
adc
and
into
lea
insb
or
mov
scas
out
sub
frstor
lock
je
xchg
pop
mov
notl
pop
add
dec
mov
das
cli
cmp
adc
daa
sti
xchg
push
out
and
or
movsl
xchg
movsl
adc
inc
popf
dec
xchg
push
jge
addr16
fnsave
and
es
outsb
jg
sbb
movsl
loope
add
xchg
cmp
and
outsb
and
hlt
xchg
or
test
loopne
ja
ljmp
mov
popa
xchg
add
cmp
sub
mov
scas
outsb
hlt
xor
in
xchg
outsl
and
mov
mov
xchg
sub
orl
fistl
mov
cmpb
inc
dec
xor
or
push
pop
hlt
dec
scas
mov
mov
idivb
ret
push
push
sbb
ljmp
dec
mov
jnp
loope
jbe
adc
cwtl
in
pop
mov
mov
sbb
xchg
ret
pop
jl
pushf
ficoml
mov
push
mov
nop
mov
cmpsb
dec
cltd
jbe
dec
movsl
mov
cmc
adc
aam
loope
sub
jns
jns
ret
jnp
enter
sarb
xorl
cmc
xchg
fnstenv
flds
dec
add
and
das
int3
add
xchg
pop
jmp
mov
xchg
mov
jl
xor
inc
fstl
inc
sbb
adc
and
mov
adc
fwait
addl
scas
xor
jp
loopne
and
and
stos
ss
lret
decl
imul
and
mov
lret
enter
out
shrl
cltd
dec
rcll
sub
sub
xchg
stos
ret
andb
enter
sahf
push
pop
fwait
enter
xor
int
aam
push
das
sbb
inc
pop
imul
stc
mov
mov
icebp
inc
iret
sbb
sahf
sub
lds
fs
in
je
sbb
sbb
or
test
es
loop
dec
mov
push
mov
je
aas
sub
and
ljmp
out
sbb
bound
sbb
sub
ljmp
pop
xchg
mov
push
mov
lret
sbb
jo
addl
mov
shrb
or
das
mov
pop
push
ljmp
sub
mov
xor
push
add
add
ret
sub
in
in
stc
mov
add
rcrb
mov
faddl
jo
scas
push
ret
cmp
inc
inc
cltd
bound
mov
mov
cmp
nop
es
or
and
xor
jp
mov
jl
lods
scas
inc
sbb
adc
dec
xchg
push
lcall
mov
stc
xlat
test
dec
ds
stc
scas
pop
inc
adc
orb
and
pop
xchg
lods
in
inc
and
mov
adc
jle
ds
mov
pop
in
ljmp
mov
mov
mov
in
inc
hlt
popa
movsb
sub
xor
or
inc
shll
jo
insb
mov
int
xor
add
inc
cs
push
sub
scas
jnp
cmp
xor
lds
fldenv
scas
push
das
scas
sbb
or
mov
cld
cmp
jns
cmp
push
in
cwtl
cmpsb
mov
pop
test
jne
push
loop
sahf
shl
xchg
or
hlt
das
inc
push
inc
jno
dec
in
std
sub
mov
popf
lret
dec
shrb
pop
jae
aaa
pop
adc
jg
push
test
cmp
fidivrl
int
sbb
push
sub
mov
mov
repnz
jo
cmpb
hlt
enter
mov
add
enter
fwait
out
adc
inc
push
jl
es
insb
ljmp
xchg
in
jne
pop
outsb
ss
inc
sbb
mov
fistps
pop
insl
jge
or
fwait
repz
pop
sub
or
pop
js
sbb
aas
out
dec
xchg
loopne
xlat
movsl
xchg
xor
inc
cwtl
dec
add
adc
insl
add
inc
mov
int3
scas
add
fwait
pop
in
out
xchg
es
jbe
mov
imul
xor
mov
push
add
sbb
aad
ficomps
sbb
lret
das
sbb
push
jmp
adc
orb
pop
dec
and
repnz
adc
dec
mov
add
in
push
popf
jns
faddl
pushf
and
int
pusha
sub
pop
cmpsb
js
xchg
mov
and
mov
repnz
cwtl
mov
call
add
mov
loopne
mov
adc
shr
xorl
outsb
xchg
pop
adc
daa
fdivr
mov
mov
ficoms
or
hlt
lret
mov
lcall
push
call
lret
pop
jnp
sahf
mov
and
shr
push
sbb
xlat
mov
fidivl
or
popf
cmc
xor
push
pop
jae
mov
int3
mov
mov
dec
hlt
mov
out
outsb
dec
inc
pop
mov
inc
jle
bound
hlt
cmp
sbb
in
cmp
pop
int3
or
mov
subl
mov
jecxz
les
stc
mov
pop
bound
jge
inc
xchg
gs
ja
pop
pop
lret
push
enter
or
cmpsl
fnstenv
push
loop
movsl
das
push
sti
out
loop
dec
aas
sub
inc
cmp
ljmp
cmp
cmp
xchg
addl
push
mov
jl
fidivrl
lea
ror
inc
jg
loop
xchg
popf
mov
sub
call
mov
mov
mov
mov
in
pop
cmp
inc
or
leave
loopne
add
je
iret
imul
or
int3
std
fs
adc
je
cmp
mov
dec
es
sbb
pop
filds
lret
in
pop
std
jecxz
inc
mov
push
jno
mov
pop
xor
movsb
push
test
int
xchg
mov
mov
xor
clc
insl
xchg
inc
mov
lcall
jns
cmp
push
cmpsl
cmp
insl
or
cltd
movsl
inc
mov
mov
daa
fstp
xor
mov
ss
aam
outsl
sbb
imul
lahf
cmp
pop
sahf
fldl2t
xchg
scas
iret
xchg
scas
dec
xor
std
jecxz
sbb
mov
sbb
pop
test
jp
push
lea
in
ljmp
mov
ss
jne
iret
test
scas
mov
mov
dec
popf
dec
xchg
data16
inc
movl
stos
mov
mov
sbb
mov
add
mov
cld
jae
insl
pop
aaa
jg
fstl
inc
inc
jmp
popf
mov
xchg
push
popf
add
xchg
adc
lcall
outsb
jp
aaa
cmpsl
push
repz
cmp
in
sbb
jne
or
inc
dec
loope
cmp
jmp
jne
xchg
cmp
pop
push
in
sub
scas
mov
sar
dec
add
cmp
adc
sbb
add
data16
ds
sbb
mov
nop
in
cld
cmp
inc
inc
mov
test
shll
jae
jmp
add
and
xor
xchg
clc
sbb
add
push
jp
in
ret
or
or
aaa
add
jno
enter
or
jnp
xchg
scas
push
test
int
mov
insl
xor
lock
dec
pop
loope
lcall
inc
sti
adcb
adc
cwtl
dec
loopne
xor
xor
mov
push
incb
pop
xchg
mov
cmp
xchg
xchg
push
ret
dec
xor
cmp
jl
sub
mov
or
cs
pushf
or
data16
cmp
mov
adc
and
aad
repz
push
lret
inc
adc
mov
cmp
xchg
xchg
add
outsb
in
push
ss
arpl
push
fcomps
nop
sbb
mov
addr16
xchg
outsb
push
inc
fnstcw
lods
scas
scas
push
mov
clc
cmp
ds
lods
rcr
enter
sti
lds
sub
je
test
lds
xchg
cltd
leave
sub
mov
or
lock
ret
test
shr
xlat
stos
xchg
cmc
pop
arpl
add
mov
or
dec
imul
xlat
and
pop
pop
les
or
stos
jbe
iret
call
nop
fwait
ret
sti
insb
nop
fisubs
sahf
xor
sbb
repz
jae
sbb
pop
cmp
aad
lahf
adc
lds
rcrb
pop
es
pop
enter
out
and
cmp
inc
mov
or
ljmp
cmp
loope
xchg
js
pop
add
cli
sub
or
add
loopne
in
data16
out
xor
or
sti
mov
inc
xchg
popa
ss
insb
sub
lret
call
adc
add
pop
push
or
mov
cmc
inc
out
xchg
jp
mov
pop
mov
mov
push
pop
jae
movsl
xlat
sti
mov
sbb
test
mov
scas
fisubrl
adc
rcr
leave
or
fmul
movsb
mov
cs
in
mov
sub
cmp
test
add
dec
xchg
out
push
int
pop
mov
push
mov
push
call
pusha
lahf
add
inc
sbb
mov
lret
inc
xchg
rclb
lods
lock
mov
sbb
fbstp
push
mov
stos
or
outsl
or
sti
mov
mov
out
adc
cmpsl
push
std
xor
adc
lods
push
mov
arpl
shll
fdivl
or
push
out
inc
xor
and
mov
push
into
fildl
pop
repz
test
or
xor
or
xor
sbb
scas
jns
cmp
cmpb
fmuls
push
in
les
in
lds
jae
stos
xchg
jns
mov
nop
sub
in
jmp
xchg
lock
add
mov
out
pop
ret
sub
dec
push
jle
xchg
mov
pop
mov
movsb
lahf
add
call
xchg
and
xchg
xor
aam
ficoms
push
push
jecxz
rcrl
jg
push
pop
lret
je
mov
mov
insb
jge
rorb
xor
mov
sbb
loope
xor
ffree
push
mov
sub
in
cs
sub
lret
xchg
sub
pop
mov
pop
mov
fisttpl
test
sbb
dec
xchg
pushf
sarb
das
dec
adc
and
fnstsw
jbe
push
lret
clc
cmp
push
mov
cltd
daa
dec
aad
push
xchg
sbb
or
in
in
popa
mov
mov
hlt
xchg
mov
clc
stos
nop
daa
addl
leave
lods
jg
sbb
rcrb
mov
call
lahf
cltd
push
xor
lahf
cmp
movsl
xor
sbb
xchg
lods
add
pop
jmp
xor
lea
rcl
sbb
xlat
rcrl
sbb
jl
add
cmc
dec
mov
loop
jae
mov
out
sub
subb
int
hlt
not
jle
mov
and
cmpsl
mov
add
inc
imul
mov
sahf
or
xor
shlb
push
movsb
add
dec
lahf
sbb
jg
les
or
push
xchg
scas
xor
sbb
xchg
out
jne
add
data16
jl
int3
frstor
adc
in
inc
jmp
sub
cmpsb
imul
out
mov
test
add
dec
imul
clc
je
ss
sub
inc
outsl
leave
inc
test
pop
ljmp
dec
in
repnz
inc
je
fldcw
jle
std
leave
mov
pop
dec
pop
xor
push
pop
leave
jnp
mov
mov
dec
mov
or
push
mov
out
shlb
pop
mov
imul
inc
out
inc
rcll
pop
jl
negl
lods
jb
and
out
aas
fs
dec
aam
jb
out
mov
xor
lcall
jge
pop
or
in
call
bound
sub
test
push
cmp
xchg
lret
pop
in
enter
arpl
ja
in
push
js
repnz
insl
dec
and
add
inc
mov
cmc
not
push
push
outsl
pop
arpl
aaa
shr
jp
adc
xchg
adc
sti
adc
and
shll
lret
filds
mov
cwtl
inc
xchg
test
out
push
push
test
mov
add
cltd
mov
jnp
movsl
cltd
lea
cmp
fdivrl
mov
shrb
dec
decl
or
daa
negl
pop
mov
cmp
imul
pop
push
sub
lock
sub
rcll
jmp
cmpsb
sbb
in
stos
js
mov
sbb
fidivs
sub
dec
hlt
pop
shrl
movsl
ret
test
inc
xor
mov
lds
push
jg
ret
hlt
out
pop
daa
movsb
es
repnz
xchg
daa
push
inc
jno
or
outsb
sbb
or
ja
icebp
adc
out
test
test
and
inc
adc
jmp
flds
daa
sub
adc
mov
dec
es
imull
cmp
jo
xchg
cmc
dec
push
jg
loopne
cmp
out
mov
and
xchg
andb
add
repnz
mov
out
jmp
ds
push
sub
dec
mov
popf
sahf
and
scas
es
pop
cmpsl
jl
jg
test
jecxz
les
addr16
js
xor
add
inc
mov
mov
ret
leave
jle
stc
pop
dec
jne
leave
push
scas
xor
sbb
xchg
sbb
xchg
popf
std
loop
pop
jp
mov
jg
mov
mov
mov
jb
cld
mov
incl
insl
push
push
sahf
lds
shll
or
int
push
lods
and
cmpsl
adc
rcll
and
cmp
cmpsb
sub
dec
lods
xor
fsts
sub
mov
lock
xchg
clc
sub
push
into
popf
je
daa
jb
adc
ss
ret
and
movsl
inc
imul
in
mov
inc
or
sbb
stc
cmpsl
cli
dec
pop
leave
push
out
inc
xlat
mov
into
add
shll
push
out
xor
cmc
add
aam
cltd
shlb
test
sarb
je
mov
push
fistpl
sti
mov
call
adc
add
aaa
adc
mov
cmc
inc
inc
and
fs
sub
adc
add
mov
xchg
ss
lds
push
out
int3
pop
mov
out
jmp
xchg
mov
inc
enter
addl
out
imul
push
inc
out
pushl
rolb
std
movsl
pop
pop
sbb
fwait
test
xchg
int3
das
dec
pop
outsb
cmpsb
add
jns
mov
sub
push
lahf
adc
iret
mov
into
xchg
cmc
sbb
jno
mov
xchg
pop
roll
test
rol
sub
pop
sbb
inc
pop
push
add
fs
pop
mov
sbb
mov
jne
add
loop
mov
jge
pop
mov
jecxz
dec
jp
hlt
mov
ficoms
cmp
mov
mov
faddl
stos
or
xor
jmp
in
push
fdivs
lret
loope
loope
jo
mov
sub
adc
pop
jmp
pushf
cmp
aaa
xor
jecxz
fs
inc
adc
fsub
aam
loopne
xlat
inc
sti
mov
lds
enter
pop
add
aam
lods
or
pop
mov
sbb
inc
xchg
ja
jno
xor
mov
push
add
data16
std
pushf
aad
adc
adc
mov
cmp
jo
mov
cli
outsb
mov
jne
mov
and
lahf
mov
shlb
add
pop
and
lret
sub
cltd
icebp
inc
test
jmp
hlt
cmp
scas
stc
xchg
lret
outsl
xchg
ror
jle
punpckhwd
xchg
mov
ret
aam
sub
push
incl
leave
xchg
cmpsb
fldl
out
xorb
vphaddubq
je
dec
movsl
pop
lea
jmp
dec
push
cmc
push
int
std
sbb
xor
and
fsubs
xor
in
dec
loopne
jno
into
xchg
enter
loop
xchg
call
inc
jb
shlb
rol
icebp
test
aaa
cmp
std
xor
add
mov
xchg
jmp
hlt
push
xor
cmc
adc
lods
hlt
lods
push
les
fiadds
fcoms
xchg
out
insl
testl
ljmp
mov
nop
push
imul
and
cs
sbb
xor
push
fxam
or
mov
pop
push
pop
popa
hlt
das
ds
xchg
push
jbe
xor
push
rolb
imul
ds
es
pop
lods
mov
stos
mov
jmp
loop
inc
push
mov
enter
bound
lds
or
pop
add
ljmp
push
xchg
sbb
xchg
loope
cltd
cld
cs
pushf
fwait
add
sbb
sub
mov
aaa
pop
mov
jle
movsb
mov
pop
arpl
int3
cwtl
jns
sahf
sbb
and
inc
or
jl
int3
mov
mov
call
push
mov
in
push
push
test
ja
mov
pop
loope
jg
leave
into
test
test
mov
pop
insb
pop
dec
pusha
cmp
mov
ljmp
mov
mov
pop
and
loope
dec
stos
cmc
and
pop
xor
jae
lock
sbb
cmp
cld
dec
lret
vmovaps
inc
popf
inc
jl
xchg
loopne
xchg
in
push
stc
pop
push
push
inc
inc
xchg
mov
loop
lahf
inc
and
int
nop
daa
jns
imul
push
out
fists
pop
icebp
negb
nop
outsl
bsr
or
and
sub
out
in
push
adc
jb
jp
jecxz
cmp
ljmp
lret
test
add
mov
inc
insl
xor
xchg
cmp
pop
xchg
mov
mov
addb
fs
shlb
call
mov
pop
in
daa
pusha
push
pop
push
jl
cwtl
insb
inc
mov
push
popf
add
cmpl
mov
loope
in
mov
jge
mov
and
cmc
jne
cmp
mov
jns
ret
repnz
xor
add
aam
xchg
sbbl
pop
ret
add
mov
into
xor
loop
aas
mov
js
dec
into
xchg
inc
mov
cmc
adc
lcall
mov
xor
mov
rcr
sbb
fs
push
in
mov
outsl
outsb
ret
jge
adcl
dec
and
femms
jp
dec
jmp
mov
sbb
test
dec
cmp
adcb
ret
js
loop
sbbl
cmp
int3
repz
les
mov
addr16
xchg
pop
lods
mov
push
ret
push
mov
xor
ss
jno
push
mov
lcall
call
loope
mov
lcall
aam
iret
shrl
xlat
mov
enter
mov
add
jl
imul
dec
mov
and
imul
addr16
mov
dec
pop
push
push
push
pop
cmp
mov
mov
dec
adc
leave
sub
mov
fidivrs
leave
xchg
pop
cmpsb
xchg
fidivrs
subb
ret
test
in
and
jl
inc
aas
enter
cmpsl
and
sbbl
js
out
fldt
and
sbb
lods
jp
inc
pushf
pop
fwait
and
outsb
ret
jne
in
mov
and
sub
daa
xlat
stos
xchg
roll
movsb
test
push
inc
mov
call
popf
lock
daa
sub
sub
psubusw
pushf
popa
dec
imul
mov
int
rcrl
pop
lcall
std
sbb
gs
out
jo
clc
mov
idivl
add
add
mov
mov
aas
sbb
and
lods
jg
mov
fists
aad
cmp
pushf
cmpsb
pop
pop
cmp
mov
pop
imul
cltd
and
pop
hlt
dec
bound
jno
xor
dec
and
dec
cmp
jmp
or
rorl
xor
aas
dec
lds
fists
jl
enter
fdiv
add
or
or
out
in
aam
push
mov
scas
or
mov
jecxz
lods
dec
inc
sub
cmp
insl
sub
or
dec
mov
push
inc
sbb
sub
sbb
add
dec
jne
sbb
lcall
call
sar
pop
push
ror
clc
icebp
jno
stos
cmpsl
or
test
or
mov
js
sti
xor
mov
data16
mov
cmp
and
imul
pop
pop
add
mov
and
dec
sbb
int3
push
in
hlt
rclb
out
outsb
sub
cmc
mov
ror
jle
fbstp
lods
jle
push
inc
cmp
adc
jns
imul
loope
xchg
in
mov
addr16
xor
notl
loope
dec
out
sbb
call
lea
and
mov
xchg
leave
aad
pusha
fs
mov
ja
sub
js
xchg
repz
stc
cmp
iret
push
push
pushf
rol
pushf
mov
xchg
shrl
aas
dec
add
mov
sub
sub
cwtl
gs
push
jae
sub
or
fldl
sti
cltd
cltd
mov
dec
andb
fbstp
gs
or
insl
mov
andb
dec
out
mov
add
add
lret
pop
push
out
pop
ss
xor
daa
popf
out
push
sbb
das
jbe
out
cmp
fwait
repz
bound
jae
pop
shlb
cwtl
stc
pop
aaa
sbb
jmp
sbbb
sub
cmp
jge
bound
dec
lret
xor
stc
mov
jno
jecxz
mov
loope
add
ret
popa
movsb
push
sbb
mul
pop
aaa
xchg
daa
sbb
stc
cs
lods
sbb
push
pop
sub
mov
or
sarl
xor
dec
cli
push
jb
clc
je
movb
push
int3
fs
xor
ret
xchg
push
fstl
pop
add
cmpb
lods
push
sub
lock
jecxz
push
xor
movsl
adc
cmp
pop
popa
push
mov
cld
mov
push
xor
xor
hlt
jae
sbb
les
fs
into
aam
and
jo
jne
pop
enter
adc
dec
jnp
jo
pop
repnz
xchg
roll
jns
jl
sub
out
mov
jg
inc
fidivs
shl
xor
inc
dec
or
mov
sub
outsb
jns
call
rclb
jno
mov
stos
iret
dec
arpl
pop
ret
in
xchg
add
sbb
xchg
and
dec
mov
js
push
xor
rcll
ss
out
mov
in
add
xlat
or
mov
pop
loope
jo
mov
xor
loopne
adc
adc
ds
dec
and
sti
mov
jns
mov
les
enter
cmp
xor
cld
rcrl
add
lea
inc
cwtl
sub
mov
inc
pop
pop
daa
shlb
mov
or
lods
out
xchg
dec
fnstcw
fstl
jecxz
icebp
push
mov
fwait
or
inc
insb
ss
pop
jbe
push
fdivl
or
xor
xchg
ret
mov
incb
jmp
stos
xchg
test
inc
dec
icebp
sbb
repz
imulb
js
cltd
and
out
mov
scas
fbld
add
je
mov
pusha
jle
das
gs
add
out
mov
inc
xchg
call
rolb
jecxz
push
jo
and
push
jae
mov
insl
ja
adc
push
dec
out
fwait
lret
cmp
cmp
addr16
sbb
sbb
jns
cwtl
out
hlt
cltd
cmovs
ja
pop
int
cmp
cli
dec
add
cmp
sub
loope
addl
out
and
cltd
jecxz
inc
add
xchg
adc
ficompl
and
outsl
jne
les
jmp
push
jl
add
pushf
int
fcoms
insb
out
cmpsl
adc
and
fcoms
jle
sub
jae
loopne
push
movsb
imul
xor
jle
fistl
popa
sti
mov
jmp
sahf
push
jge
mov
fimuls
call
clc
jbe
mov
jae
in
mov
push
dec
sbb
insl
dec
lahf
mov
lcall
pusha
lea
mov
pushf
adcb
fs
inc
ss
aas
fsub
xor
mov
aam
cmp
lock
inc
mov
repnz
test
or
mov
and
sbb
inc
int
out
xchg
inc
xchg
fildl
and
ds
mov
push
dec
sbb
js
jo
cmpl
xor
pop
test
sbb
js
dec
cmpsb
ss
xor
arpl
sbb
mov
xchg
sub
jg
ds
pop
insl
fistps
icebp
or
sti
fs
adc
fisubl
mov
rcll
add
add
xchg
js
push
xchg
jo
mov
in
fisubrl
adc
das
dec
repz
adc
fsubs
or
add
fwait
hlt
shl
subl
xchg
pusha
inc
jecxz
xor
out
jnp
sti
int3
imul
in
in
test
test
enter
xlat
inc
les
aad
mov
add
jbe
mov
dec
pop
fisttps
mov
push
or
in
or
in
xor
mov
sbbb
stos
test
sub
scas
pop
movsl
inc
sti
pop
and
and
test
push
add
jo
aas
pushf
mov
sub
aas
scas
dec
stos
cmp
popf
mov
inc
pop
push
imul
enter
pop
cmpsb
dec
mov
iret
testl
lret
ret
sahf
or
hlt
sbb
es
mov
punpcklbw
in
lods
mov
push
sub
or
push
call
call
sub
call
js
xchg
push
inc
xchg
cs
cmc
loope
jnp
mov
inc
xlat
rorl
sbb
cmp
jge
lahf
sub
shld
clc
out
push
testb
out
and
inc
mov
mov
add
neg
fisttps
aad
out
mov
pushf
lea
and
cmp
pop
xor
adc
iret
pop
cmp
adcb
pop
repz
mov
dec
scas
push
out
daa
cld
ficompl
inc
insb
sysret
scas
jnp
pusha
xchg
daa
cs
dec
jns
fmul
jle
xor
adc
shll
and
mov
xchg
pushf
mov
cmp
fwait
repnz
stos
int3
cmp
decb
xor
adc
je
aad
das
adc
mov
mov
fidivrl
cmp
ficoms
xchg
inc
dec
or
push
repnz
ja
popf
and
push
add
add
push
jnp
clc
rcl
sbb
jge
fcomi
rolb
fwait
loopne
enter
dec
cmpb
out
loope
dec
inc
push
adc
dec
sbb
dec
insb
sub
xchg
movsl
mov
xor
cmpb
mov
jp
stos
scas
fcomps
mov
inc
mov
xor
dec
data16
cmp
cwtl
jb
xchg
inc
cmpsl
inc
fimull
jns
sub
out
pop
lcall
adc
das
cmp
hlt
pop
out
jno
movsb
lcall
jno
in
mov
or
or
shll
lahf
lret
dec
cmpsl
popf
out
pop
lahf
outsb
mov
movsl
jge
lret
sub
lahf
aad
add
in
in
mov
sahf
aaa
sbb
adc
xchg
sub
test
mov
dec
jmp
add
out
inc
enter
cmp
inc
add
aaa
adc
pop
push
or
out
das
cmp
push
aam
xchg
mov
cmp
xor
inc
notl
call
ds
pop
adc
mov
push
xor
data16
mov
stos
into
fwait
lods
adcb
sbb
cltd
into
outsl
sub
js
push
add
mov
jbe
and
dec
xchg
lds
mov
call
jmp
stc
mov
add
sbb
test
shl
stc
cmpsl
sub
je
push
out
ss
pop
xor
xor
scas
insl
mov
lods
xchg
xchg
fisttps
dec
cwtl
sbb
mov
cld
adcb
mov
lcall
adc
jnp
and
and
shlb
jp
inc
mov
call
and
xor
les
add
out
in
scas
arpl
cmp
cmp
xorl
mov
xorl
sbb
or
xchg
imul
int
shl
fstpl
or
ror
out
stos
enter
inc
dec
je
out
xlat
hlt
outsl
orb
cmp
rcll
push
jl
data16
inc
imul
cmp
inc
mov
xchg
cwtl
out
jne
sub
pop
not
push
test
jae
xchg
inc
scas
add
cmp
xchg
and
cmpsb
cmp
mov
int3
push
dec
xchg
mov
arpl
sbb
gs
sub
sbb
ficompl
aas
pop
lahf
ret
pusha
mov
xchg
mov
repz
sarb
mov
cltd
inc
fcomi
xor
lea
mov
adc
or
mov
cmp
mov
jo
test
imul
jns
push
outsl
sub
jno
xor
int3
jl
cmp
mov
sbb
xchg
push
mov
imul
sub
push
mov
cli
and
int
mov
and
sbb
cmp
xorl
sbb
jae
or
mov
std
psubusw
loop
adc
push
mov
mov
cmpsl
adc
push
pop
test
jns
pop
or
mov
dec
xor
lea
pop
mov
iret
jae
or
stos
jne
iret
negl
stos
jg
testl
aad
push
push
fisubl
loopne
dec
cld
dec
mov
jae
decl
mov
xchg
sbb
and
sub
dec
in
mov
pop
out
outsb
xor
inc
xor
loope
cwtl
lods
mov
jnp
pusha
xchg
repz
bound
cld
std
pop
xchg
pop
jg
xor
aaa
movb
mov
mov
ds
loope
fldl
mov
jnp
push
test
mov
or
push
xor
and
jecxz
out
xchg
mov
sbb
and
or
mov
sub
mov
pop
mov
imul
pop
and
outsb
icebp
push
les
cmpsb
push
sti
fbld
pop
insb
pop
jp
xchg
out
rorl
les
xor
call
xorb
push
dec
mov
insl
push
adc
je
jns
mov
dec
cmpl
add
sub
gs
and
loope
or
clc
jp
loope
mov
xchg
stos
fstpt
sbb
fsubrp
dec
call
cwtl
xor
lahf
pop
sub
jle
pop
les
out
dec
xchg
mov
gs
fsubl
and
lods
daa
test
test
incl
ljmp
jbe
jns
xchg
xor
test
lret
shlb
push
daa
and
jecxz
push
repz
mov
sub
mov
jb
inc
mov
xchg
repz
insb
jo
inc
mov
or
pop
das
fisttpl
inc
loopne
lret
mov
inc
in
lods
and
mov
das
int3
fs
stos
cmc
dec
nop
pop
push
leave
xor
sub
xchg
fldcw
xor
lods
inc
leave
mov
cwtl
add
cmpsb
cmc
sub
xlat
cmp
jle
jo
pop
outsl
wbinvd
jmp
pushf
into
int
pop
mov
fcomps
sahf
lret
mov
arpl
push
add
inc
dec
insb
daa
sar
mov
add
dec
outsl
je
movups
jb
pushl
sbb
inc
inc
xor
addr16
add
pusha
xchg
lock
sub
mov
aaa
in
aad
nop
faddl
fnstenv
das
cltd
add
test
aas
mov
mov
mov
cld
push
mov
icebp
dec
xor
arpl
dec
pop
mov
xchg
or
xorl
mov
out
out
push
lcall
jecxz
les
cltd
fwait
insb
inc
je
push
clc
mov
icebp
mov
pop
adc
fdiv
push
mov
mov
pop
mov
lret
subb
clc
movsl
out
orb
movsl
adc
cltd
out
push
psubd
or
push
movsl
cmp
mov
sub
or
loope
mov
push
jb
mov
mov
add
xchg
dec
sbb
out
mov
cmp
mov
jb
mov
aad
fucomi
ds
cmp
sti
outsb
lds
dec
mov
and
leave
insl
add
out
cmpsb
adc
sbb
jmp
add
jae
movsb
and
pop
pop
jmp
cmpb
xor
repz
xchg
sti
leave
mov
testb
out
mov
pop
pop
in
in
xor
push
pushf
xor
xchg
sub
sbb
xor
mov
add
fs
es
jno
imul
into
or
jns
ffree
add
fstps
pop
jg
cmp
iret
sbb
sbb
sbb
je
mov
fsubrs
arpl
jle
in
ja
add
enter
js,pn
inc
in
mov
fnstenv
insl
mov
cmpsl
ficoms
adc
add
jb
pop
arpl
adc
jae
sahf
sahf
add
push
std
adc
insb
rclb
jge
or
mov
addl
sub
pop
wbinvd
loop
push
jbe
in
push
dec
lods
cld
outsl
and
pushw
dec
movsl
or
ret
mov
mov
aas
and
jb
and
sub
inc
in
mov
cmp
neg
mov
dec
sahf
adc
movsl
bound
test
sbb
or
add
pop
cmc
lods
pop
lds
insb
mov
lret
ljmp
cltd
sub
loop
mov
add
popf
ja
rclb
pop
mov
das
cmovnp
sti
dec
dec
add
fcomps
xchg
pop
mull
loopne
pop
adc
xor
rorl
stos
push
sub
call
jb
adc
jg
loop
sub
imul
rcll
rcrb
stos
bnd
scas
inc
in
add
fwait
xor
jmp
test
dec
push
sbb
fisttps
jne
xlat
xchg
fsts
popf
jge
cmp
push
inc
adc
push
int3
sahf
sbb
je
aas
pop
mov
mov
dec
jae
inc
sbb
mov
fdivr
mov
loopne
data16
push
out
mov
cli
movsl
mov
out
jle
lea
pop
adc
fucomp
cli
stc
stos
es
insl
inc
sar
popf
test
push
adc
sbb
aaa
pop
sub
mov
jne
xor
mov
test
addr16
out
imul
aad
mov
mov
and
mull
push
insb
jmp
hlt
xor
mov
sub
int3
rcrb
and
xor
push
int
into
cmp
push
shrl
pushf
iret
out
lret
and
cwtl
mov
jns
xchg
sbb
push
sub
subl
xchg
jmp
repz
jmp
nop
jno
fbstp
cmp
mov
pop
mov
bound
aaa
gs
shl
leave
pop
push
ret
or
push
and
sbb
sub
cmp
dec
in
xchg
cmpsl
aam
repnz
sbb
push
cs
popa
popa
jp
adc
cmpsb
cs
mov
cs
lods
sub
and
cmpsl
in
movsl
push
or
jmp
jnp
daa
add
aad
arpl
lds
pop
xchg
cmpb
pop
xor
jb
loopne
icebp
ljmp
insl
into
xor
ja
mov
jmp
pop
lret
cmp
rcr
mov
cmp
jbe
ret
test
es
or
jae
jbe
loope
fmull
xlat
ds
sbb
inc
mov
scas
sub
rolb
testb
mov
imul
testl
cmpsb
stos
mov
cmp
sbb
cld
or
dec
jecxz
leave
jne
jne
cmp
ret
imul
xlat
lock
ret
mov
push
movsl
aas
push
ja
movsl
pop
scas
xorb
cwtl
in
pop
int3
fwait
and
sbb
ret
scas
xchg
fiaddl
pop
lds
push
test
mov
jmp
add
test
dec
xchg
jl
cmpb
mov
inc
xorb
mov
test
out
jg
mov
in
sbb
and
xchg
aam
test
mov
shll
les
push
scas
push
adc
icebp
out
insl
mov
sbb
mov
imul
in
jne
call
pop
pop
dec
or
pop
xchg
inc
and
push
lods
jo
jg
scas
lods
test
int
push
adc
notl
aam
shr
jns
xorl
nop
lods
add
sbb
lret
cmpsb
mov
mov
shrb
sbb
js
mov
sbb
xor
jno
and
cmc
xor
sub
fists
gs
cmp
jge
test
loope
sbb
sbbl
push
leave
mov
and
imul
sti
dec
repz
add
or
inc
andl
cmp
dec
in
cmp
daa
mov
xchg
and
sub
loop
mov
sub
push
mov
jnp
loopne
loop
xchg
bound
loope
scas
mov
mov
mov
cld
inc
fcomps
jae
xchg
mov
aam
xchg
push
mov
cmp
cmpsb
jbe
jge
in
inc
das
shrl
jp
outsl
adc
ret
cmpsl
xchg
test
loope
stc
xor
stc
popf
mov
add
xchg
mov
stos
sti
ss
sbb
mov
cmp
sbb
inc
mov
push
je
shl
jp
idivb
sub
orl
mov
stos
jnp
in
add
loope
cs
test
lds
insb
mov
hlt
movsb
out
int
sbb
lret
mov
cmp
mov
les
cwtl
pop
sahf
push
push
pop
aad
pop
mov
mov
fidivrl
push
cwtl
cli
push
or
inc
inc
fwait
jp
add
decl
mov
xchg
jnp
pop
xchg
sub
jg
mov
mov
inc
sbb
push
or
push
mov
push
lods
fsubrl
or
mov
add
adc
cmc
loope
shl
sbb
popa
in
or
ds
xchg
pop
xchg
pop
dec
arpl
sahf
cmpsl
test
lock
hlt
jbe
mov
mov
sbbl
lahf
stos
cli
data16
out
scas
push
aad
imul
divl
xor
scas
sub
push
test
or
xchg
es
lahf
arpl
mov
add
pop
pop
sbb
inc
in
out
sub
pusha
decl
adc
scas
in
xor
in
loope
or
loopne
lock
sub
push
inc
std
cmp
pop
xchg
ret
test
aaa
ja
addps
out
xor
dec
mov
pop
sti
gs
je
inc
les
jmp
sbb
icebp
xor
in
mov
mov
push
and
ja
jnp
xchg
fucom
or
pushl
or
imul
rcll
sarb
jnp
lret
xor
jns
pop
mov
mov
fs
hlt
rcrl
nop
dec
and
in
in
loop
inc
xchg
cmp
sbb
jg
pop
lea
dec
mov
test
sub
popa
or
push
das
fdivrl
mov
cmp
add
and
push
and
sub
and
pop
mov
outsb
ss
adc
adc
xchg
pop
test
dec
inc
fldenv
adc
pop
negl
xorb
loopne
stos
dec
scas
inc
popa
push
inc
pop
cmp
mov
cmp
add
and
pop
cmc
jmp
push
pop
movsl
out
mov
mov
pop
dec
in
mov
jecxz
rcll
int
adc
loopne
xlat
mov
or
or
lcall
outsl
cmpsb
or
les
loopne
out
loopne
sbb
mov
and
mov
pop
movsb
in
xchg
mov
leave
into
into
aaa
or
mov
sub
out
dec
push
inc
xor
add
mov
shl
cwtl
jno
push
push
cmpl
inc
jbe
out
icebp
daa
adc
std
stc
hlt
negl
xchg
fisubl
push
mov
or
sub
xor
rorl
mov
and
pop
add
cwtl
jbe
test
aaa
test
jmp
subb
mov
push
inc
gs
test
aaa
call
sbb
mov
sub
mov
adc
out
fisubrl
jno
movsb
jns
xchg
mov
jecxz
jbe
in
jg
aad
loope
xchg
push
dec
outsb
xchg
xchg
pop
divb
daa
mov
add
inc
push
in
push
dec
pop
mov
in
enter
adc
dec
jo
pushf
jl
popa
dec
je
mov
push
jnp
repz
mov
ljmp
sbbl
adcl
mov
sbb
and
pop
popf
addb
cmc
loop
jle
adc
bound
mov
lcall
icebp
mul
mov
ljmp
inc
aad
pop
subb
and
arpl
xor
jne
out
jp
mov
fsubrl
in
inc
test
loope
and
mov
jp
push
mov
and
push
jmp
subl
hlt
aam
aad
mov
bound
mov
mov
ss
aas
add
add
sbb
imul
xor
pop
cmp
or
addl
shl
or
mov
push
shl
dec
popa
push
lds
idivl
mov
mov
jo
fwait
cld
cmc
pop
or
adc
push
sub
aad
push
push
fdivrs
dec
mov
pop
lcall
out
mov
adc
lret
mov
jecxz
mov
fcmovnb
or
test
in
popa
ljmp
mov
lret
push
daa
insb
dec
lock
push
push
mov
adc
scas
test
adc
jns
cwtl
adc
test
dec
and
mov
xchg
repnz
test
dec
scas
mov
mov
mov
or
imul
sbb
sub
loopne
sbb
mov
popf
cmp
scas
dec
push
and
aas
sbb
xchg
mov
es
sub
push
xchg
cmp
cmp
mov
rorl
sub
inc
cli
adc
mov
push
push
xchg
loop
inc
sarb
out
or
xor
ror
cld
dec
lds
in
lahf
push
inc
and
mov
or
push
mov
xor
cmp
mov
cli
sbb
rcrb
or
jl
mov
mov
xchg
fnsave
stc
xor
test
subl
insl
repz
jmp
pop
insl
xchg
nop
lcall
lret
mov
in
mov
mov
inc
and
push
fnstenv
cmp
pop
push
or
popa
js
mov
or
cs
std
test
add
stc
pop
iret
std
adc
xchg
lahf
aad
test
cmp
lahf
mov
jle
pusha
pop
lcall
mov
shl
sub
mov
pop
std
inc
arpl
fisttpl
xchg
loop
repnz
ja
xor
test
int
pop
aad
xor
sbb
scas
and
fnstenv
pop
enter
out
mov
and
repz
mov
xchg
or
push
dec
push
decl
pop
sbb
push
mov
sbb
loope
mov
lcall
negb
cmovno
inc
scas
aad
or
xchg
gs
test
mov
movsb
pushf
movsl
add
and
mov
mov
or
cwtl
jno
sbb
xorb
xchg
adc
dec
das
cwtl
xchg
mov
ljmp
inc
push
leave
nop
shl
or
outsl
ret
popf
adc
add
fwait
bound
sbb
ds
test
adc
std
mov
ljmp
shll
mov
xchg
and
data16
mov
fmuls
insl
mov
aam
mov
pop
outsb
dec
xorb
stc
shlb
xor
dec
repz
adc
xchg
push
add
pusha
insb
leave
push
mov
cmc
fdiv
xchg
test
ss
mov
lea
and
adc
cmp
movsl
xor
push
insl
or
adc
inc
sahf
lea
lahf
and
adc
pop
ret
adc
push
iret
movsb
mov
cli
push
adc
repz
sub
pop
mulb
imul
or
ss
dec
outsl
aad
mov
addb
mulb
lods
push
sarb
cltd
cmpsb
xchg
notb
push
out
push
ja,pn
pop
cmp
sbb
push
pop
imul
jnp
sub
xchg
sbb
stos
cwtl
std
les
add
call
xor
push
movsl
js
mov
jmp
ljmp
dec
mov
xchg
sahf
data16
xor
aad
push
std
xchg
repnz
scas
test
mov
push
lods
les
mov
mov
inc
jmp
ret
mov
fwait
sub
push
je
shr
aad
jae
add
loopne
or
cwtl
mov
das
dec
loop
out
adc
adc
add
insb
rolb
mov
mov
imul
pushf
push
sbb
cmp
inc
mov
lods
xlat
push
stos
pop
xlat
test
add
imul
aas
xchg
jmp
icebp
push
cld
pusha
mov
cmc
cmpsb
sbb
pop
dec
subw
std
fisttpll
lcall
stos
lds
or
push
adc
xor
jmp
and
lcall
in
jg
xchg
push
sbb
adc
ret
lret
in
pop
out
nop
xchg
cltd
mov
mov
imull
or
lea
inc
dec
pop
push
cmp
dec
decl
inc
push
hlt
and
push
bound
testl
cmc
fwait
jnp
pusha
clc
test
xchg
test
rolb
clc
add
xchg
mov
enter
push
lock
cmp
mov
push
in
cmp
or
sub
jge
outsl
mov
inc
pop
in
and
mov
inc
jmp
outsl
lcall
inc
jno
mov
pop
xchg
mov
cmp
mov
cli
imul
lcall
xchg
mov
cmpsl
daa
cmpsl
inc
mov
push
dec
and
xchg
sub
dec
mov
jne
cli
lock
xchg
pop
stc
arpl
pop
jge
enter
jne
dec
mov
pop
mov
in
out
nop
stos
iret
lcall
movsb
ds
fists
jae
inc
add
mov
scas
mov
jnp
repnz
xchg
data16
fadd
lcall
psrlw
and
jo
sbb
push
lahf
mov
xor
das
dec
mov
push
dec
push
ret
push
and
sub
push
cmp
or
fwait
dec
adc
adc
inc
add
push
test
mov
push
sub
mov
jns
jmp
xchg
ljmp
xchg
aaa
cltd
sub
bnd
scas
scas
shlb
aam
push
fs
pop
jecxz
xchg
sbb
popf
pop
ret
add
mov
xor
sub
mov
test
out
cld
aas
imul
xchg
nop
mov
das
popf
lahf
add
adc
add
ret
rolb
or
ja
sbb
push
mov
lods
xchg
mov
arpl
lds
dec
or
repnz
ret
or
in
sub
mov
std
shlb
mov
adc
movsb
int
and
and
iret
or
mov
fdivrs
movb
shrl
pushf
loop
sbb
xlat
jns
push
pop
push
dec
ret
jp
jmp
and
mov
sbb
shlb
sub
mov
jbe
dec
cmc
adc
xor
inc
inc
std
mov
fcomps
mov
mov
jo
das
pop
fstl
cld
dec
dec
mov
cmp
lret
mov
jmp
mov
mov
pop
push
and
mov
jle
mov
mov
orl
mov
mov
lahf
dec
inc
cwtl
add
xchg
sbb
in
xor
jbe
and
enter
pop
sbb
sub
ficoms
subb
add
sbb
pop
cltd
or
dec
ffreep
aad
inc
and
pop
fisttps
pushf
sbb
pop
mov
jl
loop
inc
sub
add
adc
mov
mov
pop
ds
hlt
mov
add
aas
repnz
pop
and
sbb
divl
shll
xchg
and
pop
jnp
xor
xor
mov
sbb
fs
inc
mov
pop
mov
aam
ret
idivl
jl
inc
in
cmp
xchg
test
sub
into
xorl
fldl
jo
inc
push
xchg
mov
das
les
cmpsb
lahf
imulb
push
cli
iret
pop
and
fildl
call
inc
pop
push
cmp
sub
mov
or
dec
mov
xor
lods
xchg
mov
pop
repnz
adc
lds
pop
stos
add
pusha
sub
xchg
adc
jge
jns
jns
cmp
aad
mov
mov
jae
es
je
das
popf
js
mov
lods
mov
jo
sub
sbb
lods
jno
adc
sarb
loopne
cmp
cmp
flds
lret
fimuls
test
stos
movzwl
mov
loope
adc
shrb
xor
inc
mov
mov
pop
push
test
inc
pop
jno
xchg
imul
jg
ljmp
hlt
neg
add
mov
pushf
mov
out
mov
xchg
outsb
adc
dec
xor
inc
and
daa
into
inc
sub
imul
sbb
push
cmp
push
arpl
in
push
pop
ds
xchg
xchg
pop
push
outsl
jp
shll
mov
mov
pushf
jle
pusha
and
pop
mov
sarl
dec
jno
imul
cmp
out
xchg
sub
jp
jno
sbb
lock
jns
add
lret
je
sbb
xor
inc
popa
mov
mov
arpl
in
jae
jecxz
sbbl
add
mov
outsl
xchg
lods
mov
cld
jb
push
ljmp
hlt
faddl
xchg
orl
fnsave
in
jo
arpl
pushf
adc
movsl
push
push
stc
xchg
stc
mov
inc
push
mov
lods
mov
mov
xchg
into
cmp
xor
lds
pop
mov
es
mov
jg
sbb
xor
inc
add
inc
inc
add
dec
add
pop
jg
jmp
mov
daa
mov
jmp
es
jg
xor
or
cmp
repz
loopne
cmp
ficompl
adc
stos
inc
mov
add
adc
push
dec
add
mov
push
mov
sbb
dec
jb
sbb
sahf
cwtl
cli
inc
call
sahf
shr
adc
leave
data16
add
ret
jbe
inc
shrl
test
sub
hlt
xchg
mov
and
aaa
push
sub
fstpt
xor
mov
in
imul
mov
push
loope
dec
mov
aad
and
fwait
lret
adc
mov
scas
lds
xchg
iret
pop
jo
andl
or
jge
mov
xor
in
leave
sub
outsb
push
push
jb
cmp
lcall
dec
pop
mov
lahf
jns
sbbl
mov
leave
imul
dec
imul
lret
adcb
stos
int
xor
pusha
fildll
ror
insb
mov
mov
sub
adc
mov
xor
mov
xchg
pushf
je
int3
sbb
sbb
pop
arpl
add
je
mov
cli
mov
rcl
testb
out
int3
daa
fadds
insb
xchg
mov
into
negb
and
xchg
rorb
adc
mov
ficomps
psubusb
xor
sub
and
in
repnz
fimull
sti
xor
pop
mov
xchg
add
negl
lahf
inc
and
aaa
xlat
jmp
mov
in
xor
repz
aam
mov
jns
cmpsl
decb
addr16
dec
scas
insb
jge
jnp
mov
test
sahf
push
pop
or
ret
incb
fisubrs
imul
adc
add
push
les
test
lds
or
push
lret
mov
cmp
sub
and
jmp
mov
sbb
insb
cwtl
in
add
hlt
inc
push
ret
lds
lcall
xchg
lret
add
jbe
scas
test
xchg
icebp
and
repnz
add
pop
ret
outsl
cmc
adc
dec
pop
push
adc
shlb
inc
inc
pop
shlb
push
fdivr
xor
xor
xchg
in
in
loope
jecxz
into
loope
idivl
or
sbb
cmpl
dec
xor
push
insl
xor
sar
sub
outsl
mov
test
rcl
lret
push
enter
mov
sti
cwtl
mov
jns
pop
xchg
inc
and
jbe
push
shrb
ljmp
adc
ret
outsb
imul
xchg
icebp
sub
addb
daa
cld
xor
movl
in
lock
lcall
lea
movsb
outsl
hlt
or
fnstcw
cmc
mov
xor
push
in
sahf
lea
mov
cld
aam
cmp
mov
mov
insl
sahf
mov
aam
push
mov
jmp
inc
or
xor
jo
push
mov
imul
les
and
push
sbbb
js
mov
movsb
mov
mov
cmpl
cld
cs
mov
sahf
movsl
adc
je
cli
fbstp
push
into
push
cmp
out
cld
dec
add
sub
mov
fsub
in
push
jo
rorb
dec
add
cmpsl
int
cmpl
mov
rcrb
jecxz
dec
xor
mov
pop
inc
pop
cmpsb
icebp
and
lret
jmp
iret
jg
xchg
test
lea
idiv
neg
mov
lahf
push
sub
xor
stos
in
adc
push
daa
jp
add
incb
cmp
ficoml
cltd
sbb
test
mov
pop
jnp
dec
sbb
mov
xor
enter
int
push
dec
or
cmpl
cmpsb
adc
test
inc
cld
repnz
loope
in
mov
or
lea
shl
rcl
push
jne
mov
jmp
mov
xchg
cwtl
mov
jl
sbb
out
mov
clc
pop
pop
or
test
sbb
xlat
mov
mov
mov
repnz
test
xchg
mov
pop
sub
popa
call
popf
jge
in
pop
adc
mov
out
cli
xchg
push
js
cld
push
test
loop
dec
lret
mov
adc
inc
xchg
fsubrl
mov
or
push
mov
hlt
hlt
stos
divps
decl
loop
xor
inc
jecxz
xor
adc
sub
cld
inc
xchg
sub
dec
aas
sbb
sti
pop
stos
sub
adc
lahf
scas
sub
lret
pop
jb
iret
ljmp
mov
pop
call
jecxz
stos
and
insl
mov
sbb
and
jmp
test
mov
jno
andb
sbb
dec
pop
ss
ja
data16
mov
ficoml
test
imul
insl
mov
scas
fsubrl
and
mov
and
lds
pop
ss
icebp
xchg
fists
into
lock
or
pop
sti
stos
test
cmp
loope
jbe
push
stc
jnp
addr16
nop
and
mov
loop
gs
popf
and
ljmp
pop
clc
bound
inc
lret
adc
cmpsl
test
repnz
mov
mov
divb
punpckhdq
inc
lcall
mov
out
repnz
dec
enter
mov
in
test
cmc
in
push
stc
fwait
add
inc
inc
lahf
adc
jg
sbb
xor
sbb
sbb
jg
rorb
cmp
fistpl
pop
sub
out
outsl
jp
outsb
cmpsl
int
test
imul
xchg
aas
sahf
mov
fsts
mov
pop
xchg
cmp
push
sbb
frstpm(287
daa
test
jns
jae
les
in
roll
adc
daa
je
add
add
loopne
insl
in
sti
and
rorl
aaa
movsb
pushf
pop
adc
scas
adc
test
je
lods
mov
sahf
mov
dec
lret
popa
and
mov
xor
fimuls
mov
nop
fwait
clc
or
adc
in
fidivs
fisttpll
roll
mov
test
ror
xor
adc
xchg
sub
sub
mov
ss
scas
fwait
imul
iret
rcr
shr
outsb
int
xlat
insl
xor
notl
add
sti
xor
cli
lods
and
scas
popa
or
out
jecxz
insl
fwait
les
aad
bound
cmp
fildl
ja
push
push
rorl
out
sbb
std
add
or
ja
and
out
jmp
std
push
xlat
jle
sbb
lds
push
xchg
test
cmp
inc
mov
push
fistl
lcall
mov
and
lods
cmc
rcrl
lahf
mov
std
xchg
stos
push
sbb
mov
outsl
outsl
int3
mov
xor
and
test
adc
add
rolb
xchg
jg
pushf
icebp
mov
mov
mov
mov
insl
aaa
in
jg
mov
xor
jmp
mov
out
dec
lahf
es
pop
sbb
cmp
inc
iret
scas
pop
jns
mov
cmp
adc
push
ss
xlat
push
in
xchg
fisttpl
or
dec
adc
adc
loop
inc
cmp
mov
cmc
out
shrl
add
dec
insb
jae
jne
bound
fistpl
cs
dec
ret
ret
mov
shll
test
into
std
nop
pop
insb
mov
dec
fdivrl
mov
les
decl
sahf
ret
sbb
mov
push
add
inc
adc
out
add
imul
jmp
cmp
jp
lahf
cltd
roll
mov
popf
adc
out
inc
sub
inc
add
out
movsb
loop
cmpl
cld
movsb
movsl
lock
cltd
mov
fs
add
jno
dec
vcvttpd2dqy
arpl
cmp
imul
outsb
xor
popa
pop
les
fidivrs
push
fsubs
scas
dec
xlat
into
scas
ljmp
sub
pop
repnz
jecxz
cmpsb
dec
nop
push
iret
jl
lahf
jnp
ret
push
adc
cmp
mov
or
enter
xchg
aas
sub
ljmp
dec
xchg
cmp
jae
fldt
pop
push
add
addl
pop
xorb
adc
jp,pn
mov
imul
xor
outsb
les
roll
and
mov
loop
xchg
mov
xchg
iret
sbb
mov
add
mov
pop
cmp
mov
mov
and
fisttps
std
adc
jg
inc
sbb
neg
inc
mov
push
jg
sbb
mov
adc
dec
and
rclb
cmp
test
movsl
int
mov
sub
aaa
test
inc
loope
add
push
mov
popa
adc
xchg
enter
lret
stos
sub
cld
sub
pop
push
arpl
mov
out
cmp
mov
pop
pop
fs
pusha
cmp
mov
aad
pop
xchg
mov
test
xchg
push
sbb
push
iret
fildl
or
xchg
cld
mov
inc
add
daa
std
loope
mov
lret
sbb
out
aaa
mov
push
outsb
pop
jb
mov
loopne
mov
rcrb
jbe
push
xor
xchg
xor
push
pop
rcrb
mov
jp
mov
sti
adc
xor
mov
and
jbe
mov
pop
arpl
out
lahf
roll
sbbb
push
aaa
fistpl
xor
mov
sbb
out
hlt
mov
imul
sub
in
mov
dec
cmp
int
das
jl
jns
ljmp
loope
test
push
movsl
dec
push
jnp
data16
xor
add
inc
dec
dec
mov
ds
int
push
incl
jns
lret
push
mov
cmp
fidivs
pop
int3
jno
nop
hlt
bound
xchg
xor
and
xor
cmpsl
setne
test
pushf
lahf
test
lcall
das
sbbb
imul
clc
lret
addr16
jle
andb
rcrl
push
push
add
sarb
repz
push
fsubl
sub
mov
enter
cmp
and
dec
pushf
fstl
sub
xor
fs
xor
xor
inc
pop
push
cmp
inc
pop
xor
mov
push
xchg
inc
enter
lcall
repz
pop
imul
mov
mov
mov
inc
aam
repnz
xor
mov
sbb
inc
jo
mov
mov
icebp
shll
mov
xchg
xor
test
pushw
outsl
mov
inc
lahf
or
lahf
lods
pop
loop
add
lret
jb
mov
cmpsl
cmp
stos
scas
aaa
or
add
sub
sbb
shrb
push
push
dec
out
inc
out
dec
ret
mov
not
cmpsb
les
mov
loope
xchg
scas
mov
add
adc
andb
mov
xlat
mov
jns
and
mov
in
pop
pop
or
out
xchg
and
aas
test
cmp
pop
sbb
enter
iret
shll
dec
xor
push
fwait
dec
and
scas
fisttpl
sbb
mov
sub
adc
sub
mov
loope
addr16
pusha
dec
adc
lds
mov
pop
fcomi
addr16
sbb
fnsave
into
ret
popf
ja
and
pushf
std
ret
mov
dec
cs
xor
fcomp
push
test
mov
dec
dec
bound
jae
mov
push
dec
rclb
fildll
fldl
push
sub
leave
out
cwtl
or
push
shr
les
add
xor
les
pop
mov
sub
cmc
jne
das
pop
adc
pop
mov
cmp
mov
cltd
xchg
ja
lock
and
mov
adcl
outsl
push
stc
ss
mov
jecxz
imul
in
insb
push
and
sub
cs
sbb
mov
pop
cmp
int
pushf
xchg
in
ret
test
and
ret
xchg
js
adc
inc
rol
mov
ss
add
inc
mov
cmpsb
sbb
clc
lahf
out
arpl
mov
push
scas
sti
pop
pop
cli
sub
aas
dec
ret
scas
outsl
nop
add
test
jecxz
jbe
fstpl
aad
jl
dec
add
sub
sbb
in
imul
jb
cld
push
clc
mov
jae
dec
arpl
es
mov
test
aaa
mov
call
mov
pop
push
sub
call
jns
push
push
aam
add
mov
jns
mov
jecxz
andl
hlt
aam
mov
shll
repz
gs
jno
sub
sbb
lods
icebp
es
je
push
sbb
lret
cmpsb
cmc
fs
ret
pop
movsb
cmp
clc
sbb
ret
jns
aad
mov
ja
roll
dec
push
gs
loop
stc
jbe
out
cld
leave
fs
adc
ja
push
lds
pop
mov
lods
push
aaa
xlat
repz
sbb
or
xor
adc
jecxz
lock
sbb
arpl
or
jecxz
sbb
pusha
into
dec
mov
cwtl
push
in
leave
push
mov
sub
sbb
inc
xor
sub
ret
and
and
jno
in
dec
cltd
stc
xor
fdivr
pop
cmp
cltd
jl
stc
mov
hlt
fnstcw
out
std
push
pop
sub
push
jl
and
push
imulb
cltd
sbb
sub
inc
test
push
inc
nop
mov
imul
cwtl
clc
lods
leave
gs
int
out
hlt
add
ds
ret
push
shlb
nop
cmp
sub
cmp
inc
pusha
enter
inc
test
sarb
scas
lret
adc
inc
inc
enter
lret
imul
mov
addb
sub
les
repz
sbb
fcmovnu
push
pop
mov
cmp
enter
mov
lcall
rorl
and
push
das
xchg
jge
mov
push
cmc
call
pop
out
push
push
mov
test
rsm
jmp
push
sub
sub
ret
and
ficoms
out
sbb
enter
movsb
dec
push
and
fsubs
ficomps
add
jne
jne
shlb
cmp
fs
xor
lods
jns
aad
loop
iret
icebp
push
aaa
sbb
jl
push
inc
popa
ja
push
jmp
xor
cwtl
std
call
jge
out
testl
add
dec
push
lods
jno
xchg
sub
mov
jns
in
push
fs
inc
pop
sbb
testl
jle
dec
mov
imul
mov
movsl
mov
sbb
lods
jne
movsb
mov
call
bound
mov
imul
cli
dec
es
mov
sub
cmp
cmp
hlt
fdivrs
inc
adc
out
pop
push
jnp
pop
insl
pop
cmp
adc
je
idivl
xchg
mov
hlt
xor
jl
outsb
pusha
mov
push
mov
jp
notl
jle
sbb
fwait
adc
push
push
out
or
ss
dec
out
inc
ret
xor
inc
mov
cmc
into
dec
mov
enter
ficomps
cmp
js
dec
jnp
inc
insl
mov
cli
mov
popa
cmp
mov
leave
jns
inc
mov
stos
ficoms
dec
jns
pushf
sub
imul
xor
push
inc
fldt
sahf
inc
out
lret
call
gs
mov
adc
adc
jmp
cmp
jb
mov
and
fldl
shrl
inc
jmp
cmp
outsl
cltd
popf
cmpsb
or
fnstcw
jo
jge
sti
cmc
testb
aad
lods
sub
or
loope
jae
into
mov
mov
adc
mov
stos
jne
outsb
test
inc
xor
inc
adcl
inc
sbb
and
mov
adc
jl
jnp
xor
mov
loopne
cmpsb
pop
mov
adc
jnp
fucomp
test
lret
mov
decl
shrl
outsb
push
cli
lock
mov
and
mov
fcoml
out
or
hlt
ljmp
mov
adc
sub
pushf
loop
ror
cmp
mov
bound
das
sarl
mov
loope
jge
xchg
stos
popa
xchg
push
xor
test
rcll
int3
mov
mov
cltd
or
orb
xor
cmpsb
pop
jae
mov
add
movsb
dec
cltd
aaa
ljmp
xor
mov
xchg
loop
mov
les
adc
xchg
fwait
mov
jb
stos
xor
test
fisubl
xchg
bnd
sbb
mov
mov
xor
orl
aaa
jge
cmc
and
fsubrs
push
jle
sub
mov
pop
icebp
imul
icebp
and
and
call
imul
pop
or
sub
movsb
or
orb
and
push
xchg
pop
sub
pop
sub
repz
out
cmp
dec
jo
in
and
callw
out
mov
enter
sub
mov
into
scas
xchg
fsubl
xchg
xchg
pop
mov
sub
inc
gs
jl
xchg
or
jo
ss
xor
das
sbb
mov
movsl
dec
jno
loopne
or
cld
outsl
push
fists
subb
xor
mov
decb
icebp
jne
mov
in
out
cli
jns
mov
fsts
in
jnp
ret
int3
fisttps
inc
loop
lahf
stos
clc
mov
dec
mov
push
das
mov
lahf
or
jb
pop
pop
jno
je
sub
js
stc
es
nop
and
lock
push
push
ret
jns
call
mov
mul
popa
and
push
mov
mov
pop
icebp
and
inc
ss
mov
xor
inc
mov
lcall
pop
inc
hlt
mov
fdivrs
lds
xchg
jbe
sbb
push
popf
xchg
scas
sarb
jge
mov
mov
sbb
pop
addr16
mov
pop
lahf
pop
push
sub
dec
adcl
in
in
xor
mov
pop
icebp
sbb
divb
es
lcall
ret
sbb
cltd
push
cli
cmc
stos
pop
in
out
ret
adc
bsf
adc
add
jno
das
movsb
mov
adc
clc
jg
push
or
iret
xor
sbb
lds
mov
mov
sbb
xchg
mov
adc
sub
sbb
jl
mov
push
or
sub
popa
das
ss
sub
enter
lds
in
sbb
sbb
aam
jns
xor
inc
ret
inc
gs
ss
mov
add
aad
bound
sub
lret
leave
xchg
movsl
dec
dec
jbe
mov
dec
xor
incb
mov
dec
loopne
mov
out
test
inc
cmp
cld
mov
push
mov
incl
mov
jl
loop
adc
or
mov
mov
xchg
lret
adc
cmp
pop
mov
lret
adcl
xchg
pushl
orl
xchg
adc
inc
iret
sub
fidivs
cmp
call
and
lods
es
sbb
mov
adc
jne
adc
aam
pop
mov
push
rclb
push
fwait
mov
xchg
jmp
push
ror
bound
jg
push
arpl
imul
imul
psubsb
mov
ret
lret
inc
xchg
and
add
push
pusha
jns
cmp
mov
rcrl
and
jb
fstl
out
jge
or
push
or
jl
push
mov
mov
mov
pushw
xchg
push
ret
out
mov
sti
in
or
xor
mov
test
cs
shl
add
xor
std
pop
movsb
mov
and
push
inc
mov
add
xchg
sub
and
test
lea
xchg
mov
pop
jl
stc
scas
and
mov
outsb
rorb
sub
adc
in
out
cs
pop
jnp
pushf
clc
mov
or
push
inc
js
in
mov
add
adc
adc
xor
jns
bound
fwait
sbb
out
sub
and
jmp
sub
dec
leave
gs
jmp
sub
pusha
xorb
outsl
mov
add
shl
jns
pop
inc
clc
lea
jecxz
xor
sub
mov
imul
cli
aam
lea
add
cmpsl
dec
stc
jg
mov
int3
rcrl
mov
in
mov
arpl
or
addr16
fst
xor
loop
xchg
out
pusha
test
outsl
rcrl
add
movsb
stos
out
sub
enter
dec
cld
dec
and
jnp
mov
cld
push
lcall
fwait
dec
inc
or
cmp
adc
xlat
les
and
mov
and
push
adc
lret
aad
pushf
xlat
jmp
dec
daa
dec
sbb
sbb
shlb
inc
lods
jp
mov
lahf
pop
pop
lahf
sbb
jg
hlt
imul
inc
cmpb
cs
ss
addr16
sbb
jnp
repz
test
add
sti
fbstp
lea
vmwrite
roll
pop
sbb
jns
inc
jb
inc
adc
cwtl
int
adc
push
lret
xchg
aam
xor
in
push
xchg
pusha
inc
cmp
inc
or
sub
out
orl
repnz
push
jecxz
pop
mov
and
push
pop
add
sub
mov
fiaddl
jae
jbe
sub
in
or
shlb
xchg
pushf
icebp
adc
pop
sbb
clc
out
les
jmp
inc
cmp
dec
push
pop
ljmp
pusha
lret
push
lods
mov
fucomip
icebp
push
jle
mov
rolb
int3
mov
fxch
xchg
out
scas
cmpsl
rcll
sbb
aad
and
or
mov
xchg
dec
mov
push
pushf
jg
fldl2e
mov
mov
addr16
aam
out
popf
lret
lock
insl
xlat
cpuid
lret
test
loopne
dec
dec
add
or
cmpb
notl
aam
cwtl
cmp
lahf
xor
rorl
nop
cmp
push
or
incb
fs
cltd
sub
mov
enter
repnz
fidivs
scas
cmp
shrb
int
popl
add
mov
dec
and
lea
mov
xchg
mov
fwait
repnz
push
and
lods
iret
test
popa
imul
roll
cmp
lock
insb
jb
sti
fists
and
int3
fcmovu
call
fsubrs
or
sub
pop
jo
enter
sbb
lcall
cltd
int
cltd
adc
adc
jb
shl
bnd
push
pop
orb
fisttpll
inc
js
cmc
idiv
ss
pop
shll
les
outsl
xchg
cmc
cmp
add
pop
inc
outsb
popf
in
adc
daa
lea
pushf
xchg
and
enter
cmpsb
rep
decb
adc
les
sbb
push
aaa
pop
je
fildll
int
xor
testb
pop
add
bound
inc
aas
cmp
xchg
cmp
sub
cs
mov
add
pop
sbb
fnstsw
das
imul
xlat
mov
push
jae
inc
pop
push
cmp
nop
and
mov
out
clc
inc
push
jno
insl
testl
popf
lret
mov
mov
scas
gs
push
xor
ficomps
int
jbe
add
sarl
fxch
jne
cmp
jmp
push
js
in
pop
mov
mov
insl
leave
mov
loop
loop
pop
enter
and
pop
push
pop
xchg
sbb
pop
pop
or
fdivl
popf
inc
cmpsb
stos
push
pop
mov
add
hlt
sarl
es
clc
and
jns
pushf
rorl
js
jl
pop
jns
jg
lea
enter
push
pop
cmp
jb
shrl
push
adc
fdivrl
lods
sub
gs
out
mov
and
aam
and
mov
mov
cmp
imul
cmpsb
xchg
orl
mov
fidivs
hlt
and
in
adc
pop
sbb
adc
int3
and
ret
cmp
aaa
cmp
and
in
xorb
imul
gs
sarb
js
xchg
das
arpl
pop
or
pop
movsb
add
imull
inc
sbb
mov
cmpsl
mov
inc
cwtl
jge
loop
mov
loope
jge
repz
sub
jge
mov
push
xchg
scas
jb
outsl
test
ljmp
mov
bound
into
mov
inc
xchg
adcl
xlat
js
sub
out
or
bound
stc
insl
aaa
dec
sub
repnz
mov
jb
into
push
in
or
lods
sbb
dec
sahf
je
jnp
mov
push
push
jne
std
fmulp
mov
jp
fistpl
xchg
sbb
push
and
dec
pop
sbb
and
pusha
and
pusha
mov
cmpsl
stos
data16
les
out
sbb
xchg
loope
rolb
stos
shl
mov
pop
mov
ror
inc
or
jbe
mov
cmc
or
adcl
std
xchg
imul
das
divl
lret
sbb
jae
pop
mov
inc
outsb
jo
popf
fisttpl
aam
fcomps
cmp
movsl
lret
mov
cmp
test
cmp
jae
add
mov
and
loopne
jl
cmp
jle
inc
aad
call
sbb
dec
and
push
dec
sub
arpl
movsb
aaa
scas
adc
inc
std
test
cld
ret
je
test
cmp
sbbl
mov
out
rcll
iret
out
dec
mov
js
lcall
repnz
and
add
rol
lret
mov
adc
in
insb
jp
xor
inc
shrb
lcall
mov
shll
dec
sarl
cli
pop
imul
sub
outsb
cwtl
lock
fwait
jne
cmp
lods
lods
pshufw
out
arpl
xor
out
loope
inc
cli
ja
cmp
lcall
scas
push
add
fists
or
adc
lret
mov
rorb
cmp
sbb
iret
daa
data16
jl
icebp
add
imulb
push
dec
adc
or
jmp
inc
xchg
mov
ds
pop
pushf
icebp
mov
mov
adc
sub
je
mov
sahf
xor
dec
js
pop
fwait
mov
dec
mov
mov
push
sbb
subl
test
inc
mov
xchg
mov
in
dec
pop
dec
adc
shll
lea
imull
sbb
call
movsl
popf
scas
fidivrs
mov
and
add
mov
and
cld
cmp
mov
sbbb
loopne
and
sub
push
push
lcall
pusha
push
out
mov
shll
adc
cwtl
shll
mov
dec
notb
xchg
testl
push
mov
cld
es
cmp
enter
mov
pop
mov
insl
fldl
mov
lcall
fdivrs
adc
pop
int
jl
or
cmp
aad
fisubl
and
out
popf
imul
inc
push
mov
mov
xor
sahf
test
xchg
push
pop
dec
daa
and
xchg
push
adc
xor
mov
mov
movb
je
popf
insl
lods
pop
imul
xchg
cwtl
scas
repz
rclb
inc
fadds
lret
sbb
cmp
loope
ss
fnsave
arpl
jno
inc
out
inc
rcl
pusha
jbe
lods
fisubrs
xchg
sbb
mov
loopne
negb
rcll
mov
push
hlt
inc
arpl
nop
jecxz
out
cwtl
pop
aam
adc
dec
outsb
cli
xchg
into
roll
out
scas
jmp
inc
pop
pandn
jns
and
mov
mov
xchg
popf
insl
push
add
inc
sbb
sub
jl
push
mov
push
lret
ret
hlt
mov
ret
daa
stos
jmp
int
shlb
jae
dec
jecxz
push
mov
lret
cmc
add
aas
adc
jo
inc
xchg
push
pop
mov
mov
inc
test
imul
into
rorb
inc
cmp
rcl
push
bound
lds
xorl
div
cmc
mov
cld
das
cmpsl
popf
sbb
dec
pushf
movsb
cld
xor
jg
sbb
push
mov
out
mov
push
stc
pop
dec
nop
aas
ss
xchg
pusha
enter
push
mov
pusha
arpl
sti
mov
jb
mov
sub
mov
xor
incb
and
sbb
and
out
lods
jbe
mull
aam
add
push
and
add
aam
pop
adc
cltd
fisttpl
cmpsb
xchg
adc
enter
stc
adc
dec
scas
push
sub
fimuls
dec
andl
jg
xchg
xchg
sub
mov
shrl
repz
cmpsb
jmp
jae
sbb
jle
inc
cmp
adc
in
aaa
inc
mov
jp
sysret
leave
dec
aad
sbb
push
cltd
cmp
js
ds
pop
push
pop
adc
je
push
or
jbe
data16
imull
inc
sub
daa
add
fnstenv
xchg
jb
repnz
mov
pop
repz
xchg
mov
subl
in
pop
dec
mov
sarb
scas
sub
outsl
std
jge
int3
xchg
and
dec
or
lock
or
sbb
imul
cmc
dec
mov
pop
in
lock
lahf
pop
mov
repnz
cmc
mov
enter
jno
jle
add
fcmovbe
and
or
dec
dec
push
jmp
mov
dec
xor
fcoml
mov
outsl
xchg
pushf
xor
mov
pop
mov
xor
sbb
sub
cmc
popa
sub
add
xorl
xchg
mov
or
je
bound
movsl
icebp
pop
mov
es
sub
mov
jmp
fsubrl
popf
sahf
rcrl
dec
scas
and
dec
mov
push
stos
ja
test
insb
cmp
add
jle
jae
rcr
test
sub
mov
jo
aam
xor
jge
xchg
int3
mov
les
clc
sbb
dec
dec
adc
mov
les
push
mov
xchg
data16
test
add
outsb
fidivl
popa
mov
inc
cltd
enter
add
addr16
mov
push
and
repz
sahf
loope
stos
push
lds
es
mov
mov
xchg
and
test
lea
mov
dec
rolb
enter
pop
sbb
or
push
scas
fsubrs
cwtl
into
mov
sahf
call
push
xor
aaa
xchg
bnd
lods
mov
andl
add
addb
jae
add
mov
cmc
loop
nop
add
xor
xchg
fidivl
cld
les
xchg
push
and
jno
cmp
pop
jbe
cmp
popf
int
cmp
pop
aas
mov
or
shl
out
sbb
in
fisttps
scas
in
addl
jge
shrb
push
repnz
lret
sbb
scas
mov
adc
adc
mov
in
dec
insb
sub
adc
mov
add
pop
sub
inc
adc
int3
pop
imul
jle
jp
pop
fdivrl
sbb
sub
cmp
loop
pusha
sub
cmp
test
or
xchg
andb
scas
mov
cmp
mov
stos
mov
das
dec
mov
int3
or
enter
mov
xor
and
or
ja
cmp
and
pop
das
fldt
xor
inc
stc
movsb
aad
xchg
repnz
jae
repnz
fistpll
xlat
pusha
adc
lds
adc
je
or
push
jns
cmp
mov
push
xchg
repnz
or
cmc
enter
xchg
cmp
mov
xchg
mov
push
push
int
sub
xor
ss
lds
jne
xor
adc
in
pop
lea
inc
mov
dec
xor
sbb
jne,pn
int3
je
leave
outsb
inc
xor
cmp
xchg
mov
sbb
fstpl
adc
pop
cli
inc
push
aaa
fiaddl
out
mov
jl
mov
das
mov
push
int
push
ret
lods
call
add
mov
and
leave
mov
out
outsl
dec
dec
ret
inc
and
fstpt
aam
lea
dec
fwait
repz
popa
jl
push
dec
dec
mov
cmpb
mov
int
int
imulb
mov
adc
xchg
mov
mov
movl
xchg
jnp
mov
in
mov
rcll
mov
push
fs
push
adc
orb
jge
fnstsw
call
cmc
mov
inc
sbb
mov
jns
out
and
mov
out
int
jg
in
shll
mov
mov
cwtl
jbe
mov
mov
leave
pushf
cmpsb
mulb
pushf
pusha
pusha
jnp
jle
inc
outsb
add
add
ss
fstpt
inc
dec
and
inc
jae
or
dec
leave
fsubrp
shlb
inc
xchg
iret
or
cs
lret
inc
inc
add
insl
ret
pop
push
aad
jmp
test
lds
pusha
sbb
mov
add
push
iret
sbb
adc
imul
cltd
dec
shrb
xchg
arpl
rclb
cmp
aam
int
jns
cltd
mov
sbb
sbb
sbb
pop
aam
and
adc
push
fdiv
ds
jle
add
mov
mov
pop
ljmp
aad
ds
fmuls
lret
dec
and
push
mov
sub
pop
mov
pusha
cld
cmp
and
popf
in
cmpsl
jle
pop
dec
cld
push
xchg
in
inc
xchg
pop
insb
cmp
mov
out
push
ficomps
imul
das
sbbl
sbb
add
mov
pop
cwtl
call
or
mov
stc
inc
dec
lock
cmp
sub
outsb
dec
add
pop
pop
orb
into
ret
xor
enter
jae
inc
xchg
dec
std
push
testl
cmpsl
test
xchg
data16
data16
stos
fcompl
scas
divl
inc
inc
and
xchg
cmpsb
mov
movsb
cmc
and
cmp
fisubrs
inc
sub
movsb
insb
jg
daa
inc
iret
sub
cmc
or
xchg
addr16
pop
xor
cld
xchg
mov
xlat
dec
movhlps
and
stos
orb
mov
test
sbb
mov
cmp
adcl
add
xchg
dec
lea
cmp
daa
adc
loopne
dec
or
dec
inc
aad
fwait
negb
and
mov
lods
jno
inc
std
jp
mov
xchg
addr16
in
dec
dec
daa
mov
lret
sbb
cmp
test
xor
add
insb
adc
in
pop
mov
lock
pop
loopne
jl
mov
ss
bnd
outsl
or
push
scas
je
iret
dec
vhaddpd
or
std
loopne
xor
lret
mov
xchg
jge
repnz
fdivrs
xchg
push
pop
xlat
das
out
xor
pop
rcll
push
mov
mov
or
pusha
and
mov
gs
ja
inc
and
sub
dec
push
stos
xchg
pop
xchg
pop
sub
inc
or
mov
dec
je
inc
es
pop
enter
sti
fisttps
sbb
pop
dec
fcmovnu
ja
movb
mov
sbb
add
jge
or
mov
sti
jg
mov
cwtl
shrb
sub
dec
mov
mov
es
sahf
std
imul
mov
push
je
xor
mov
ljmp
push
lret
sarb
inc
inc
ror
inc
fwait
and
je
adcl
in
mov
adc
popf
fmull
stos
imul
mov
aam
sbb
cmpl
and
or
inc
loop
push
test
movl
pusha
mov
adc
cmpl
sti
gs
mov
iret
mov
or
or
lods
dec
add
inc
xchg
stc
cmpsb
jecxz
neg
push
mov
popa
cwtl
xchg
inc
xchg
scas
jnp
sbb
cli
adc
or
cmp
out
call
xchg
dec
and
bound
or
xchg
push
gs
loope
jnp
or
aad
adc
mov
lahf
add
jae
movsl
leave
xor
mov
testl
adc
push
gs
xchg
jnp
sbb
mov
cli
adc
pop
inc
ret
jg
xchg
push
out
sub
mov
add
sub
lahf
dec
in
cmp
xchg
push
pop
dec
xchg
imul
and
sub
adc
xchg
out
les
testl
or
cmpl
jp
daa
ds
loopne
dec
xchg
jecxz
cmp
or
or
inc
xor
jo
cmp
mov
jge
xorl
inc
cmp
push
test
popf
sbb
inc
lcall
mov
loope
outsb
popa
pop
push
sub
or
icebp
mov
push
in
les
jmp
lret
test
stos
pushf
movsl
jecxz
enter
jnp
sub
mov
mov
pop
es
mov
loope
jge
push
mov
mov
lock
pop
xchg
jmp
push
adc
aad
mov
dec
sub
outsb
jp
fdivr
stos
push
mov
jo
test
imul
stos
fwait
mov
repnz
mov
mov
subl
cmpsb
mov
add
lods
aas
addr16
ret
jns
stos
aam
loopne
inc
mov
into
adc
stc
insb
stc
fwait
push
pop
fistpl
mov
repnz
cmp
xor
xchg
lock
xchg
hlt
push
inc
push
iret
and
out
rcr
fsubs
imul
jp
push
rclb
mov
fstpl
das
and
cs
nop
out
add
fimull
fwait
inc
roll
add
mov
jecxz
xchg
aad
fnstcw
and
push
int
and
and
rcll
and
mov
jg
xor
aam
cltd
ja
xchg
inc
adc
je
xchg
gs
push
cmp
and
cli
cwtl
push
scas
sub
jmp
fcmovbe
xchg
push
push
daa
cmp
scas
sub
imul
push
sbb
jo
sub
mov
xchg
pop
lcall
xchg
call
push
inc
bnd
xchg
jmp
hlt
pop
and
int3
shlb
add
nop
push
data16
adc
cmp
sub
addr16
xchg
adc
pop
arpl
scas
clc
andb
aam
xchg
cld
imul
test
aas
adc
popa
test
aas
leave
xchg
ja
call
out
xchg
daa
inc
js
xor
dec
neg
dec
and
xchg
loopne
dec
in
mov
cmp
xchg
push
jmp
das
mov
inc
addr16
pop
add
loop
and
push
and
sbb
aas
rolb
or
ret
jb
fadd
adc
jle
xchg
es
fwait
xchg
cmp
sub
popf
fsubrp
aam
dec
xchg
fildll
jle
add
xchg
jae
imul
sub
int
mov
sarb
ljmp
loopne
xchg
outsb
aaa
imul
in
mov
push
pushf
dec
adc
jmp
push
pop
and
repnz
repnz
loopne
push
popf
mov
pop
xor
aam
pop
inc
stos
loopne
scas
popa
sarl
mov
sub
xor
dec
xchg
in
test
cmpsb
xchg
sahf
pushl
cmp
in
ret
and
cs
aam
cli
imul
imul
stos
mov
or
push
push
push
lock
ss
ja
push
jge
xor
mov
punpckhwd
mov
outsb
add
ficompl
jecxz
js
add
fmuls
sub
cmp
mov
les
or
cmp
mov
out
add
mov
leave
vmread
jae
pop
or
dec
sbb
das
push
inc
fisttpl
xchg
xchg
mov
out
sbb
xor
inc
daa
add
xor
jno
jo
adc
cmp
xlat
push
push
movsl
xchg
jg
shlb
add
add
js
int
repnz
inc
rorl
pop
dec
push
add
movsl
rcl
insb
mov
lds
popf
mov
in
inc
data16
icebp
std
jo
repnz
aam
icebp
shlb
pop
dec
call
sbb
ret
pusha
lret
pop
hlt
xor
popf
add
fstps
xchg
lods
pop
mov
cmp
test
xchg
lods
jge
xlat
mov
adc
lret
pop
jbe
xor
or
iret
repz
or
adcl
sub
shll
ror
cmp
xchg
cmpb
cld
or
xchg
arpl
mov
stos
jmp
or
aaa
test
jp
and
shrb
sub
ret
jns
push
lods
sbb
mov
cltd
add
ret
adc
xchg
add
sti
aas
cmp
int
dec
pop
stos
sub
fmull
out
sub
data16
push
inc
rcrl
shlb
inc
mov
push
repnz
inc
xchg
sbb
xchg
sub
sbb
xorb
add
fnstsw
orl
fstps
sahf
adc
mov
rcl
test
adc
mov
mov
gs
pop
mov
cmp
rorl
fstp
or
sar
ja
jg
adc
aam
xchg
inc
cwtl
pop
js
orl
test
hlt
push
xor
xchg
sbb
mov
jae
std
pop
clc
xor
push
pusha
xchg
lock
gs
shlb
pop
jno
jmp
movsl
fsubrl
xchg
and
add
pop
fdivrs
sbb
loopne
adc
jae
push
or
push
dec
add
mov
pop
jmp
cwtl
sbb
movsb
lock
mov
enter
lcall
mov
ss
xor
cmp
lret
sbb
in
addr16
in
and
repz
popf
lahf
jecxz
mov
aas
testb
pop
subl
add
aam
pop
repz
cmp
lock
mov
outsl
push
jb
in
loop
dec
jb
inc
xchg
popa
fwait
mov
push
xor
jg
shll
in
jo
ficoms
pop
pusha
push
andl
inc
sbbl
jae
mov
and
out
lret
sarb
xchg
dec
adc
aas
lea
test
std
inc
and
lods
idivl
pusha
scas
rcll
jecxz
xor
xor
cmp
bnd
push
cmp
movsb
cmpsb
push
ret
movsl
fdivr
andl
lret
jmp
sbb
mov
jae
clc
mov
imul
repz
test
dec
jo
repz
clc
iret
xlat
push
lret
incb
arpl
mov
jmp
call
hlt
popa
dec
or
es
lods
add
mov
lods
test
adc
fwait
mov
mov
jne
push
mov
mov
in
rcrl
xchg
fcoml
dec
push
jle
xchg
frstor
dec
pop
stc
insl
ret
fcoms
fsubs
add
mov
leave
in
out
rcrb
inc
ljmp
jecxz
roll
stc
popf
lcall
jecxz
pop
rorb
xor
sub
in
jnp
add
jg
jae
push
and
inc
fisttpl
pop
pusha
daa
and
jmp
add
mov
mov
lcall
dec
push
setg
repnz
popa
fcoms
pop
shl
out
mov
pop
movsb
mov
xor
ret
pop
js
fsubrl
test
xor
pusha
xor
decb
mov
fmuls
mov
in
ljmp
insb
mov
cmpsb
jo
sbb
adc
fs
inc
into
cmp
pop
pop
ror
sbb
and
and
test
int3
jecxz
jle
cli
ret
fildl
adcl
movsl
fwait
mov
and
inc
sub
pop
fsubrs
pop
fwait
test
jmp
push
aad
sub
or
dec
fisttpl
outsl
or
mov
mov
imul
xchg
jl
mov
inc
jo
or
test
popa
inc
jno
or
add
inc
test
insb
lea
mov
adc
pop
fiaddl
xchg
sbb
mov
out
dec
push
sarl
adc
fcom
dec
dec
jnp
inc
and
aam
and
pushf
or
mov
push
fisubs
rorb
mov
testb
jecxz
push
into
test
mov
pop
shrb
mov
shrb
pop
nop
loope
add
fidivl
popa
loope
dec
add
jmp
gs
pop
cmp
mov
xor
loope
pop
stos
pop
lret
mov
ja
or
cld
mov
pop
cmc
add
inc
scas
dec
adc
loope
les
jl
pop
call
add
aas
gs
cli
push
xchg
cmp
cmpsl
ret
fcompl
mov
push
aas
loopne
and
push
outsl
test
cs
mov
rorl
mov
cmpsl
sahf
cmpsb
inc
cmp
mov
sbb
lds
xchg
mov
jns
imul
scas
mov
xchg
and
mov
add
inc
sbb
or
loopne
mov
push
inc
fstpl
cli
mov
and
jle
push
aas
ret
shrb
xchg
ljmp
pusha
mov
push
push
lcall
movsl
sbb
sub
call
pop
push
and
push
cs
gs
mov
lahf
cwtl
jne
fwait
push
lahf
cwtl
add
dec
pop
adc
and
xlat
cmpsb
das
adc
mov
data16
jg
out
add
xlat
frstor
in
outsb
mov
ds
jl
lock
cmp
mov
xchg
xchg
adc
popf
inc
clc
pop
jp
out
xlat
pop
sub
test
dec
dec
imul
loope
dec
insl
fnsave
adc
and
and
dec
mov
clc
and
ret
lock
push
inc
mov
fidivs
xlat
lds
fimuls
dec
int
sub
add
jno
sbb
dec
and
or
cmp
ljmp
mov
test
lods
cmpsl
mov
mov
int
popa
fstl
insb
scas
xor
inc
inc
xchg
inc
fadds
push
adc
addr16
int
adc
sti
neg
test
jae
int3
fiadds
and
mov
pop
push
mov
push
das
sub
jg
cmp
loop
loopne
jecxz
push
data16
out
add
cmp
rcll
rcrb
mov
fwait
arpl
mov
push
pushf
inc
jmp
mov
ret
dec
mov
je
sar
cmp
mov
sbb
and
loopne
imul
push
fcomps
insl
clc
and
cmp
or
test
xchg
dec
dec
loopne
pop
jne
xchg
or
dec
insl
repnz
mov
cmp
xchg
sbb
fisttpl
xor
insb
inc
xor
jbe
sbb
mov
adc
je
mov
inc
stos
into
leave
jno
out
adc
add
int3
rcrb
loop
outsl
shrb
popa
and
inc
mov
call
ret
loopne
shl
stos
sbb
std
push
adc
outsl
xchg
or
mov
lods
repnz
movzbl
xchg
pushf
xchg
mov
mov
mov
out
iret
loope
push
lea
clc
sub
sub
sbb
lahf
std
enter
xchg
fcomps
sub
fcoml
pop
daa
cmp
inc
inc
inc
cmp
stos
sbb
in
adc
ret
jbe
mov
add
mov
loope
xchg
jae
add
add
les
jns
clc
sub
insb
jae
push
bound
pop
inc
mov
add
pop
sub
xor
sbb
imul
mov
lock
cmpl
pop
test
fiadds
cmp
mov
jno
leave
mov
sbb
sbb
push
mov
push
mov
fdivl
icebp
cld
insb
outsb
in
jg
mov
add
into
mov
test
rorl
js
popa
lds
pop
add
out
addr16
ret
mov
pop
std
outsl
push
mov
sahf
call
dec
or
adc
jne
std
out
push
mov
in
in
inc
das
add
xchg
es
ljmp
sbb
xchg
scas
shlb
xchg
pop
push
in
inc
stc
fldt
xchg
add
rclb
push
add
add
les
mov
xchg
inc
add
and
int
stos
mov
sbb
ljmp
es
sub
mov
insl
sub
scas
jno
sbb
cli
ljmp
mov
jae
inc
leave
movsb
cmp
mov
repz
dec
leave
adc
lods
push
push
or
sub
push
adc
insl
mov
flds
pusha
push
popf
xchg
dec
xchg
in
test
jl
stc
jg
aam
mov
cmp
push
sub
movsw
jge
data16
add
dec
xor
jae
pop
sbb
sbb
stc
sub
cld
mov
mov
daa
jl
je
addr16
iret
mov
xor
ret
imul
push
cmp
stos
div
daa
jmp
jge
jno
xchg
shlb
inc
jmp
fisubs
icebp
push
jo
and
std
inc
jmp
movsb
inc
jb
adc
xchg
aam
popa
shll
lret
xor
arpl
notl
test
xor
fisttpll
push
icebp
add
adc
fucomp
bound
jno
add
mov
adc
pop
mov
xlat
pop
repz
jecxz
pop
repnz
push
sti
inc
xor
pop
adc
jae
cmp
dec
test
lea
fwait
shll
sbb
arpl
bound
out
hlt
jae
mov
cwtl
xchg
inc
lcall
je
push
int3
mov
xchg
jns
dec
ret
int
sti
dec
fsubrs
iret
iret
sarl
scas
add
cmp
leave
mov
psubw
lock
iret
jmp
test
add
mov
int
adc
inc
add
imul
scas
mov
shr
sbb
xchg
iret
dec
leave
cli
jno
xor
or
sub
add
sub
mov
loopne
fs
mov
xchg
xchg
mov
aaa
and
push
inc
push
in
sahf
cwtl
mov
dec
jbe
cmp
add
shll
mov
jl
mov
sub
bound
roll
repnz
inc
mov
dec
adc
repz
lcall
lods
adc
mov
bound
cli
push
cmpsb
cli
sub
leave
xor
loopne
dec
mov
sbb
adc
inc
and
sbb
sbb
jne
mov
and
cmc
movsl
and
sbb
stos
jecxz
fstpl
into
repz
ret
add
push
add
push
and
addr16
repz
mov
fwait
jmp
and
daa
pushf
mov
ret
fisttps
add
xchg
imul
into
cmp
cmp
in
sub
dec
inc
loopne
out
sbb
mov
inc
mov
adc
push
nop
pusha
outsl
push
cmp
push
arpl
dec
lahf
or
cmpsb
test
lret
mov
dec
jns
mov
and
repz
fisubl
test
call
in
xchg
aam
orl
ja
pop
jnp
gs
push
sarl
leave
stos
pop
jle
pop
es
sbb
adc
repnz
mov
and
in
mov
rclb
or
push
lea
push
ret
dec
dec
pop
fwait
push
mov
and
sub
mov
clc
mul
aaa
xor
aaa
in
cwtl
stc
jp
and
dec
xor
fstl
repnz
std
in
cmp
aam
lret
sbb
or
call
inc
aad
jne
cmp
mov
mov
sbb
in
decb
mov
daa
std
iret
daa
movsb
fisttpll
dec
push
inc
jb
inc
out
xchg
out
repnz
iret
push
mov
add
cs
shl
mov
or
add
xchg
ret
xchg
std
jb
sbb
andb
out
xchg
rcll
jo
aad
es
push
mov
inc
iret
push
jmp
call
jecxz
in
pop
mov
jae
and
out
outsl
dec
imul
xchg
scas
sub
ss
mov
sahf
cmp
mov
shll
nop
arpl
aad
je
maxps
add
hlt
cmpsl
mov
sahf
out
cmp
xor
fsubrs
dec
arpl
fildll
mov
enter
popf
cmp
rcll
ljmp
in
sub
mov
fbld
cwtl
xchg
das
jo
outsl
call
outsl
xchg
xor
ss
cli
xlat
ds
out
mov
mov
pushf
cmpsl
pusha
xchg
clc
aas
out
dec
repnz
fistl
jnp
movsb
mov
lahf
pop
push
out
ljmp
es
mov
movsl
dec
xchg
jl
pop
pushf
scas
enter
sbb
leave
out
add
ror
or
sbb
decl
add
push
fisubs
les
out
testb
mov
lods
mov
fmuls
inc
sbb
scas
rcr
in
es
mov
push
mov
or
insb
cld
sub
je
fiaddl
outsl
push
mov
in
add
sbb
outsl
repnz
adc
pop
mov
daa
aam
pop
ljmp
cs
cmp
xchg
nop
int3
push
fisubrl
sahf
or
and
fldcw
out
mov
cltd
sub
je
add
imul
daa
cld
pop
adc
test
ja
cmpsl
out
sbb
push
cmp
lahf
or
scas
push
clc
movsl
nop
jp
fstpt
popf
xor
loopne
in
adc
testl
test
ror
push
rorl
out
dec
add
les
mov
and
outsl
addr16
mov
lods
pop
sub
dec
subb
lods
mov
cli
stos
stos
push
iret
fstenv
popa
mov
into
sbb
subb
mov
rolb
ja
push
mov
add
mov
adcl
sub
movsb
xor
dec
pop
pushf
inc
push
arpl
push
or
lods
pop
sbb
pop
and
mov
leave
inc
xchg
loop
in
cmc
xor
call
les
lods
inc
xor
call
scas
rorb
jnp
pop
outsl
xchg
lcall
push
xor
lock
and
pop
icebp
loop
test
and
out
sub
jnp
or
push
mov
push
xor
mov
push
rol
and
inc
loope
pop
test
mov
dec
inc
iret
inc
sbb
xchg
fildl
mov
lret
push
jmp
adc
jle
adc
jne
andl
xchg
cmpsb
mov
sahf
add
sbb
pushf
xchg
inc
xchg
insl
icebp
and
mov
icebp
aaa
push
jb
data16
dec
inc
stos
mov
inc
repnz
test
loope
mov
jno
xchg
xchg
jle
in
mov
outsb
fisubl
adc
test
mov
dec
in
jbe
jg
sub
jp
inc
jb
test
sub
dec
lock
push
adc
or
je
fstps
xorl
nop
popa
mov
les
hlt
scas
push
pop
call
icebp
pop
loope
mov
mov
ds
mov
incl
ds
ret
ds
cmpsb
out
mov
and
aaa
dec
jns
mov
stc
ret
dec
push
adc
jecxz
movsl
mov
out
fmuls
ret
mov
xchg
aam
and
test
mov
xor
xchg
cs
in
ret
inc
jbe
and
mov
ljmp
xor
jo
cmpsl
mov
movsb
aam
ficoms
push
mov
mov
fldt
mov
cltd
inc
xchg
mov
or
imul
mov
sbb
and
test
dec
lcall
imul
xor
aaa
dec
imul
cmp
add
mov
xor
sbb
jno
jns
es
pop
insb
push
pop
sbb
popf
xchg
xor
pop
pop
mov
mov
in
movsb
inc
insb
or
dec
sub
test
loopne
xor
xor
lock
stos
ret
push
sbb
mov
mov
dec
icebp
addr16
lds
jp
leave
lret
adc
adc
lcall
adc
out
cwtl
pop
dec
or
sbb
popf
xchg
test
dec
jo
xchg
testl
and
hlt
sbb
jge
xchg
mov
cmpb
xor
xor
cld
test
sub
inc
hlt
subl
clc
lcall
inc
xchg
test
mov
data16
aas
push
pusha
ret
ret
mov
pop
out
js
xchg
mov
bound
add
push
mov
pop
fildll
jge
mov
pop
inc
cmp
adc
and
loope
inc
bound
ss
or
mov
lret
stos
nop
in
mov
mov
push
or
icebp
insl
cwtl
int
adc
dec
out
fnstenv
movl
int3
insl
dec
mov
xorl
sahf
movsb
shlb
test
dec
out
imul
dec
dec
push
adc
ljmp
fists
lods
pop
cmc
icebp
pop
popa
lret
sbb
mov
xchg
pop
adc
stos
or
ja
cmp
imul
mov
and
mov
dec
or
jg
sub
out
xchg
mov
pop
lret
mov
out
negl
and
int3
or
popa
push
jno
das
sub
mov
inc
mov
test
daa
or
dec
out
xchg
and
test
repz
mov
mov
pop
fimuls
jae
pop
rcll
xor
fcom
mov
test
imulb
mov
call
add
add
xor
test
les
xchg
jecxz
aas
mov
ljmp
xlat
fidivrl
push
addr16
cmp
or
and
aad
mov
ljmp
test
push
sub
jb
ljmp
jp
inc
lods
or
pop
sbb
sub
cwtl
push
push
push
iret
xchg
lock
ljmp
xor
andb
lret
dec
enter
ja
cli
jl
cmp
mov
clc
mov
scas
inc
xchg
pushf
jbe
shlb
mov
mov
jg
out
pop
mov
rcrb
sub
shll
loop
add
jnp
pushf
adc
pusha
xchg
and
push
or
repz
sbb
lock
sub
cmc
or
ficomps
sub
into
dec
add
insb
mov
add
add
enter
mov
daa
in
or
lods
mov
xor
jl
mov
fldcw
cmp
sbb
mov
in
repnz
mov
popa
xchg
nop
lret
push
in
in
sub
mov
ljmp
pop
push
inc
into
out
pop
push
xor
pop
pop
xchg
xchg
dec
or
daa
leave
cmp
daa
cmpsl
in
sarl
lods
dec
xor
stos
cld
fisubl
lcall
dec
xchg
mov
ret
pop
sbb
cwtl
sarl
test
leave
lret
pushf
adc
rorl
inc
lahf
xchg
xchg
mov
pop
sbb
lods
iret
mov
xchg
aaa
addr16
adc
and
sbb
push
imul
iret
xchg
cmp
std
xchg
cmc
mov
xor
ret
xchg
cwtl
pop
movl
and
jle
fnstcw
jo
imulb
xor
add
inc
push
inc
xchg
shll
cmpsb
pop
lods
es
ds
test
popa
pcmpgtd
lret
cli
fsubrs
sahf
xchg
pusha
shll
sub
xchg
sub
clc
cmp
mov
movsb
cltd
xor
aaa
sbb
jns
int
lahf
sub
mov
mov
mov
cmpsl
push
xlat
fs
psllw
jmp
in
xchg
inc
outsb
popa
sub
push
icebp
addr16
bound
cmp
mov
inc
fidivrl
sub
push
arpl
cwtl
inc
and
jg
test
insl
jno
into
cmpsl
cld
out
hlt
fidivrs
repnz
fistpl
jne
add
xchg
push
out
jecxz
lods
sbb
mov
sti
mov
bound
cltd
cmp
mov
or
sub
std
iret
xchg
fwait
lret
jnp
jp
inc
push
adc
sbb
jmp
test
xlat
sarb
scas
add
push
orb
xchg
xchg
jb
inc
call
icebp
or
xchg
jno
insb
inc
pop
scas
addr16
lret
popa
add
ja
jp
fs
or
push
sub
push
stos
dec
cs
sti
xchg
repnz
or
out
lods
xchg
repz
add
xchg
rorb
mov
imull
out
jne
xchg
repnz
in
xor
mov
adc
mov
call
pop
mov
call
mov
xchg
xor
out
fldenv
pop
int
imul
add
aaa
iret
or
pop
xchg
xchg
test
cmp
imul
pusha
ret
jg
mov
testb
xchg
mov
pushf
dec
sbb
mov
lock
jo
imul
dec
cmpsl
ret
pop
lock
orl
mov
gs
pop
xorl
mov
stos
adc
pop
cli
xor
push
add
push
jmp
mov
nop
push
ss
pusha
cmp
lods
fsts
jbe
lods
outsb
gs
lock
or
adc
mov
aaa
cltd
sub
inc
jae
jo
rclb
or
in
xor
dec
or
mov
push
mov
inc
cmpb
out
jo
sub
pop
add
adc
and
sbb
les
fistps
add
pop
aaa
sbb
flds
lods
cli
cmp
int
inc
mov
inc
xor
mov
jecxz
mov
int
pop
stos
sbb
pop
add
dec
xlat
jecxz
inc
xchg
data16
lret
pop
xchg
xchg
rcrb
inc
cltd
hlt
imul
cmp
pusha
mov
dec
jge
out
jns
sbb
xchg
cld
in
lret
nop
adc
xor
ds
xchg
inc
pop
stc
outsl
sti
mov
pop
cmp
xorb
mov
cli
addb
mov
aas
jg
int3
xchg
in
ss
lahf
lods
lds
lcall
push
mov
je
xlat
and
pop
pop
adc
mov
sbb
jno
inc
jae
sub
or
das
sahf
push
out
inc
orb
mov
cmp
add
cmpb
mov
arpl
add
push
daa
add
jbe
jno
pop
scas
add
cmp
add
push
xorb
sub
xchg
pop
xchg
bnd
mov
ret
cli
mov
xchg
jmp
adc
negl
insb
xor
mov
inc
pop
aad
or
loopne
loopne
bound
dec
adc
inc
and
cwtl
movsl
subl
push
xor
sub
bnd
xor
or
push
test
mov
cmp
std
jb
jno
mov
test
fwait
xchg
roll
and
mov
inc
pop
xchg
ret
xor
mov
rcll
ds
stos
xor
mov
sbb
std
fld
jge
xchg
test
xor
inc
xchg
mov
filds
dec
jge
mov
lret
inc
jo
or
mov
xlat
data16
adc
movsb
fstl
arpl
sub
sub
xor
mov
int3
dec
pop
mov
xchg
addl
adc
pop
std
scas
or
mov
adc
xchg
hlt
xchg
loopne
rcr
cld
pop
cmp
xchg
sbb
data16
cltd
enter
mov
push
mov
test
stos
sbb
lret
clc
fsts
and
mov
ljmp
mov
int3
ret
aad
xor
daa
outsb
xchg
test
sub
push
ret
and
fs
add
and
cwtl
sbb
jge
pushf
dec
sbb
loopne
rorl
leave
inc
xchg
jno
cmc
ljmp
test
insb
in
pushf
jns
stc
addr16
or
mov
gs
mov
mov
cli
jl
or
or
xchg
push
aad
testb
xchg
pushl
dec
lahf
pop
fists
je
and
lds
hlt
cmovge
bound
ret
pop
inc
int3
in
inc
xchg
sub
mov
out
mov
add
rclb
lret
inc
and
xchg
aad
push
fistps
lds
in
adc
loop
sbb
mov
mov
add
dec
sub
aad
push
push
int
lds
das
add
or
cmp
pushf
repnz
mov
arpl
jns
push
push
add
sub
insl
inc
xlat
sub
jns
and
fucomip
imul
sbb
dec
cld
or
movsb
inc
lods
sbb
movsl
jge
dec
test
clc
lock
fisttpl
and
pop
sub
pop
iret
jne
ljmp
jae
jp
cmpsb
push
push
jb
out
test
cmc
adc
stos
mov
pop
push
cmpsb
add
sub
and
xor
ret
imul
xor
jl
imul
shlb
lahf
in
orb
rolb
mov
fbstp
mov
repz
ja
push
pushl
lods
jne
test
movsl
mov
mov
or
pushf
sub
cmc
or
sbb
test
mov
orb
xorl
and
es
dec
adc
je
adc
rclb
pusha
in
dec
jp
loopne
cmp
xchg
xchg
jno
jnp
insl
dec
jb
jmp
or
fwait
divb
or
xchg
mov
mov
add
add
inc
inc
jecxz
pop
outsb
dec
out
pushf
and
sbb
mov
int3
mov
ds
jae
inc
xchg
iret
push
mov
mov
pop
xor
sub
xor
mov
pop
sub
jb
mov
inc
repz
pop
mov
mov
jo
aas
adc
outsl
out
xchg
cmc
xlat
adc
cmp
addr16
hlt
movsl
sbb
insl
or
sbb
push
mov
sbb
mov
dec
mov
mov
les
pop
in
dec
mov
jp
fwait
lahf
pop
pop
sti
mov
mov
sbb
or
fcmovb
inc
and
stc
std
mov
daa
in
cmpsb
add
mov
jg
vmread
loopne
jno
test
jp
cmp
pop
push
mov
dec
jmp
imul
pop
fdivs
out
mov
imul
xor
pop
sub
aas
ret
mov
xor
push
push
or
push
cmp
out
je
jmp
icebp
inc
mov
dec
mov
and
rorb
fstpt
fs
cwtl
mov
adc
fld
out
lret
dec
aad
xor
cltd
jns
ss
jb
lds
lods
adc
mov
leave
cld
push
imul
ret
mov
aad
sub
ror
aad
add
mov
and
dec
dec
or
adc
inc
lcall
jle
xor
imul
jns
iret
mov
int3
mov
mov
scas
in
jno,pt
test
cltd
js
adc
cmpsl
cmpsl
out
mov
adc
xchg
ret
das
test
out
mov
inc
push
or
dec
push
xor
out
push
mov
cwtl
ret
xor
ds
outsb
mov
popa
arpl
jmp
into
lret
in
and
sbb
iret
or
cmpsl
push
sbb
pushw
sbb
mov
and
scas
lcall
jmp
sahf
aam
idiv
push
cwtl
push
fnstenv
add
push
sbb
and
cwtl
in
sbb
in
sub
mov
cmp
jne
xor
jne
pop
loop
addr16
push
mov
and
adc
dec
out
pusha
xchg
jge
cmpsl
sub
cld
fistpl
or
xchg
cmp
dec
shll
outsb
in
cmp
inc
jg
outsb
mov
xor
and
and
outsb
pusha
sbb
in
add
imul
or
mov
and
cmp
mov
add
add
jo
in
ljmp
dec
in
jb
mov
xor
xor
fxam
dec
dec
xor
lcall
test
gs
int
push
xchg
sti
push
pop
and
add
mov
push
push
add
mov
mov
and
xchg
bound
scas
je
xchg
sub
shl
nop
sbb
xchg
dec
mov
or
bound
nop
cmp
out
xor
lret
jle
sub
push
cmp
into
dec
adc
xlat
dec
or
mov
pushf
pushf
adc
jmp
mov
andl
pop
adcl
adc
ret
xor
sahf
mov
pop
sbb
sbb
push
push
jae
nop
int
xchg
enter
jno
xor
adc
sbb
or
icebp
mov
jmp
in
jge
and
xor
mov
cltd
in
mov
andb
scas
inc
hlt
out
push
mov
fiadds
xor
popa
notb
lret
lret
dec
hlt
mov
dec
aad
fidivl
pop
push
jnp
add
adc
push
inc
cli
mov
dec
decb
add
lds
flds
jmp
and
add
rorb
fwait
mov
dec
outsl
js
shrl
jmp
inc
sti
mov
jecxz
cs
movsb
das
mov
or
mov
lret
jl
test
cmpsl
add
xchg
pusha
push
lods
mov
mov
out
sub
or
fs
and
in
sbb
xchg
addr16
gs
addr16
data16
add
lahf
lahf
and
sbb
dec
pushf
movsb
lds
mov
cmp
push
ljmp
out
aam
adc
data16
xchg
mov
or
xchg
adc
icebp
mov
pop
aaa
and
stc
es
push
mov
xor
sti
add
jmp
sub
das
adc
xchg
xor
clc
andb
imul
adc
pusha
cli
imul
or
sar
and
dec
outsb
inc
jbe
idiv
xor
ds
cwtl
cmpsb
cltd
pop
mov
daa
loopne
pop
or
icebp
pushf
jle
stc
out
dec
repnz
sub
scas
cmp
and
dec
pusha
in
dec
push
adc
xor
outsl
jmp
cmpsl
sahf
mov
fisttpll
cmp
pop
inc
repz
cmp
stos
xchg
data16
jbe
pop
dec
iret
fsubrl
mov
sbb
stc
jle
loope
mov
pop
scas
jne
mov
push
in
push
or
xor
das
and
xor
das
repz
loope
insb
mov
addr16
inc
lret
mov
fwait
mov
adc
add
lods
leave
xchg
xchg
adc
inc
pop
stos
fstps
push
sub
movsl
dec
call
lret
imul
xchg
fidivrl
out
mov
dec
mov
xchg
and
in
aad
cmp
pop
imul
jg
push
fwait
add
adc
int
inc
insl
test
mov
xchg
mov
and
lea
movsl
cmp
xorb
jl
std
daa
imul
fnsave
sahf
lds
stos
mov
sub
sbb
sbb
xor
fcmovnbe
lock
fcmovnb
aam
or
ret
mov
jb
gs
ljmp
jle
add
inc
int3
cmp
add
or
or
push
xchg
sub
lds
in
jo
icebp
pop
push
jg
outsl
idivb
and
dec
das
push
xchg
out
inc
add
mov
xor
ljmp
jb
push
adc
adc
inc
in
push
pusha
inc
fsubrp
jno
and
in
lret
lock
jns
les
dec
sbb
add
mov
push
arpl
push
cli
pop
dec
lods
negb
push
sbb
fmul
jns
hlt
out
sbb
inc
push
mov
and
mov
xor
aaa
inc
or
dec
mov
clc
mov
push
and
sbb
xor
pop
movsb
pop
or
mov
gs
inc
adc
xchg
lea
add
ds
fdivr
cld
pop
je
and
cmc
jmp
cmpsb
jbe
loop
jmp
xor
and
test
sbb
and
data16
xchg
cmc
movsl
lahf
mov
das
leave
leave
cli
jp
and
je
icebp
xor
pushf
enter
popa
in
test
gs
inc
jge
jge
mov
mov
adc
jl
hlt
mov
jle
push
mov
es
movsl
shl
xchg
xchg
add
repz
cmpsl
scas
sub
pop
xor
pop
dec
pop
push
cmpsl
pop
lcall
add
imul
push
loope
repz
lods
lea
stos
adcb
mov
mov
je
rorl
inc
imul
pop
pop
adc
xchg
jle
push
push
test
adc
mov
adcb
fimull
dec
sbb
sbb
fcmovu
inc
out
sti
cs
iret
jg
dec
int
pushf
inc
out
sub
imul
pop
fcoms
add
pushf
dec
mov
mov
mov
mov
in
dec
int
loop
pop
mov
add
push
loopne
cld
cmpsb
push
pop
push
or
push
sbb
or
dec
loope
jecxz
mov
mov
jmp
inc
or
lret
mov
scas
or
cmp
xchg
clc
stos
lds
test
and
sbb
sub
fistl
popa
and
or
and
push
jge
in
mov
xchg
movl
push
dec
stos
and
sub
mov
cs
mov
lds
cmc
mov
xor
mov
mov
cmp
ds
add
push
adc
mov
adc
dec
add
pop
mov
in
dec
cmp
lds
ja
and
imul
xlat
and
inc
xchg
cmc
pop
push
and
xchg
pop
and
roll
pop
push
mov
ss
xchg
cmp
cmpsb
xchg
or
cmp
jne
push
gs
sbb
xchg
test
and
mov
ss
lcall
pop
pop
int3
mov
into
rol
or
cwtl
loop
cmp
fnsave
push
cmpb
rorb
cmp
out
fists
mov
outsb
cmp
xor
int
arpl
mov
jge
mov
xchg
cmc
mov
jmp
push
jb
repz
inc
xor
pop
fidivs
jo
push
das
sti
mov
fs
repz
stc
adc
add
insl
aam
xchg
out
imul
adc
lods
push
jbe
js
or
sti
or
cmp
addr16
jge
popf
dec
lahf
jge
sbb
pop
mov
ffreep
mov
fstpt
xor
adc
xchg
dec
imul
add
int
cmp
imull
pop
leave
lods
sub
mov
fsubr
addb
jg
cmc
push
sahf
out
dec
loop
push
mov
test
outsl
int3
test
sbb
sti
icebp
mov
push
in
data16
bound
jbe
adc
inc
das
jmp
test
push
rorb
imul
xor
pop
shlb
roll
lahf
test
jne
pushf
xor
xchg
cli
std
in
mov
sbb
add
outsl
mov
sbb
cli
bound
fcompl
inc
mov
icebp
sbb
cmc
fbld
push
mov
int
or
aaa
mov
xlat
pop
ja
mov
out
or
cmp
pushf
in
adc
into
xor
mov
pop
shll
jne
mov
pop
rolb
lahf
sub
aam
negl
adc
cmp
loope
lcall
lods
por
dec
dec
cld
push
fists
jge
in
scas
or
cwtl
mov
jl
adc
test
add
nop
shrb
into
outsb
adc
sub
pop
dec
lods
adc
leave
mov
mov
mov
cmp
and
loope
jl
imul
in
jecxz
sbb
mov
stos
fs
inc
or
test
addr16
and
and
popa
xchg
lret
sahf
bound
sub
shl
popf
xor
outsb
sub
inc
jg
or
mov
sbb
xor
cmp
movsb
hlt
jmp
jno
addl
test
ss
pop
push
mov
sti
popa
sti
inc
sub
sub
cmp
ret
and
loope
call
xor
test
push
mov
cltd
outsl
stos
jg
xor
mov
lods
mov
int3
or
jp
cwtl
mull
jno
push
and
pop
cmp
mov
push
fcomi
inc
and
and
and
push
mov
mov
push
mov
sbb
scas
mov
xchg
jne
push
lods
aad
ficompl
dec
xchg
inc
mov
push
dec
dec
std
jbe
mov
mov
xchg
mov
jnp
and
loop
add
and
roll
push
lock
into
jo
rorb
xchg
mulb
movsl
mov
movsl
push
movsb
ret
in
test
int3
nop
xchg
aam
scas
stos
ret
xor
lods
cmpsl
add
int
fidivrs
inc
stos
jg
out
les
jnp
push
inc
mov
bound
in
jmp
push
adcb
test
push
call
push
jle
je
and
iret
or
xchg
mov
in
push
jns
or
lods
dec
sbb
popl
movsb
mov
daa
inc
into
add
sub
mov
mov
mov
add
out
popf
mov
xor
adc
popf
les
aad
adc
cmp
push
push
fdivrs
pop
jmp
popf
dec
in
push
pop
mov
mov
mov
sub
mov
in
mov
ret
inc
add
jge
xor
scas
mov
les
push
cwtl
cmp
xchg
out
push
mov
mov
xor
cli
jge
adc
push
inc
mov
lahf
bound
adc
testb
xor
aaa
mov
xchg
adc
jl
pushf
repz
enter
daa
filds
lcall
cwtl
adc
out
cmpb
out
sbb
insb
sbb
add
mov
xchg
lret
ljmp
push
ljmp
cmp
push
cwtl
jmp
inc
imul
adc
add
mov
inc
mov
adc
shll
inc
data16
xchg
ja
pop
fwait
inc
shll
cld
insb
sbb
jge
ljmp
add
sub
sub
cwtl
lret
xchg
xor
push
dec
jns
inc
repnz
jae
in
ret
lock
fstpt
sub
jbe
test
test
divl
cmp
movsb
cmp
es
loop
xor
ss
and
sub
inc
cmp
out
pop
jle
cmp
out
push
sub
mov
adc
push
pop
rcrl
jbe
adcl
cmp
xchg
lea
and
pop
push
test
imul
add
mov
mov
mov
xchg
loopne
xchg
into
cmp
scas
and
sub
std
or
jo
mov
dec
roll
mov
xlat
test
lret
je
xchg
jle
movsl
repnz
mov
inc
jle
rorl
gs
idivb
cwtl
inc
push
fnsaves
xchg
test
popa
mov
xchg
hlt
movl
adc
sub
scas
jns
mov
mov
out
adc
jne
lret
nop
adc
fbstp
addr16
sub
and
mov
mov
rclb
out
test
cmp
loop
in
outsl
fistps
dec
mov
or
out
mov
sbb
add
js
sbb
mov
dec
dec
add
pop
mov
mov
rol
sbbb
pushf
das
loope
decb
sub
andb
pop
jne
mov
insl
leave
mov
mov
push
lcall
pop
add
pusha
imul
adc
xor
jns
push
inc
mov
imul
mov
addr16
cmpb
or
dec
imul
pop
mov
ds
in
test
aaa
fstl
mov
ja
cmpsb
repnz
outsl
repz
fisttpl
leave
aas
scas
mov
in
gs
imulb
mov
je
in
cvttss2si
lods
imul
jns
pop
mov
movb
or
dec
xchg
adc
xchg
popf
jns
data16
stos
inc
mov
fnstsw
lret
dec
ffree
fcomps
lret
push
lea
add
dec
push
outsb
iret
stos
push
lahf
fsub
mov
push
adc
inc
lret
stos
sub
fisubrl
lcall
lds
fs
jp
jbe
icebp
push
inc
cmc
sub
inc
movhps
fimuls
lahf
fdivr
aad
pop
out
and
movsb
aam
pop
stos
cmc
mov
jae
dec
gs
jge
cmpsb
inc
cmpsl
push
mov
stos
xchg
jmp
mov
repz
jmp
out
push
movsb
rcr
mov
fsts
mov
popa
pop
es
out
cmp
int
inc
and
fs
das
je
jle
xor
xchg
lods
mov
lcall
movsl
adc
push
std
xor
adc
test
sub
sti
js
fstp
sbb
xor
cwtl
mov
xor
sarl
lcall
push
sub
xchg
aaa
sub
jns
lahf
jne
test
xor
sbb
into
pop
popa
bound
call
movsb
add
sbb
rolb
lahf
mov
or
neg
inc
addr16
pop
fldcw
sbb
andb
dec
sahf
rclb
sbb
sub
jb
jg
pop
adc
mov
cwtl
rep
cmpb
xchg
lret
mov
sbb
rcll
push
xchg
out
mov
cmp
imul
push
pop
pop
adc
fdivs
cmc
or
lahf
test
push
fs
adc
test
mov
pop
cmp
push
inc
sub
cmp
imul
pop
pushf
lea
mov
inc
out
and
repnz
cmc
mov
rol
arpl
gs
popf
pop
pop
sbb
shrb
fwait
dec
andl
jbe
adc
roll
jecxz
ss
pop
push
outsl
adc
cmp
repz
nop
xor
cli
cmp
aad
adc
mov
call
jecxz
out
and
int3
leave
pop
mov
mov
shlb
ret
les
stos
out
mov
push
mov
fldl
es
daa
pop
xchg
cmpl
or
jbe
idiv
or
inc
dec
mov
push
sbb
xor
xchg
push
jne
lret
cli
in
mov
sub
add
jl
aaa
subl
inc
out
shr
xor
or
dec
sbb
push
shl
push
loope
and
inc
mov
cmp
subb
mov
add
subb
aas
xchg
testb
dec
ja
cmpsl
ja
out
mov
roll
adc
inc
rolb
stc
jp
adc
cmp
lret
imul
loop
mov
or
mov
mov
push
aad
in
or
cmp
decl
enter
and
mov
popa
roll
inc
sbb
aas
adc
xor
stos
movsb
cmpsl
popf
push
and
adc
pop
loop
cmp
popf
adc
jecxz
ret
mov
lret
or
cmp
sbb
adc
cltd
insb
out
push
fwait
add
in
std
faddl
cld
adc
test
push
dec
ret
daa
shlb
aad
sbb
push
notl
or
mov
xchg
xchg
movsb
xchg
xchg
adc
hlt
popf
js
or
mov
movsl
in
add
lcall
pop
and
arpl
xchg
add
jo
jmp
bound
push
cld
adc
mov
rcll
mov
sub
lds
pusha
cmpb
push
loop
mov
testl
imul
sbb
mov
push
sahf
dec
ret
pop
xor
mov
daa
mov
push
jmp
sarl
adc
test
les
jmp
jl
pop
and
pop
inc
inc
sub
mov
jae
lahf
das
sarl
call
cmp
mov
mov
in
sbb
test
mov
lret
cli
rolb
sahf
mov
dec
in
sub
mov
lods
dec
mov
sarl
popa
jl
rclb
gs
jae
cmp
les
imul
add
movb
add
add
or
pop
cmp
fldl
clc
dec
xchg
or
mov
pop
xlat
mov
add
ret
fistpll
adc
xchg
and
mov
xchg
push
fisubl
fstps
leave
test
inc
rcll
pop
stos
xchg
lret
les
into
xlat
in
rol
jnp
add
outsb
gs
mov
aas
cld
sbb
dec
syscall
fisubl
roll
jp
sbbl
push
push
cld
aaa
dec
aaa
imull
cs
mov
jns
push
push
add
mov
jmp
and
jp
ret
push
adc
jge
dec
fiaddl
loope
lret
test
xor
sbb
pop
scas
pusha
cmp
in
ffree
sbb
or
arpl
mov
add
sub
icebp
es
sub
fwait
push
dec
into
pop
or
aaa
insb
pop
jae
subl
scas
in
jle
dec
and
das
hlt
cltd
mov
sbb
mov
and
xor
mov
sbb
sbb
mov
mov
xchg
push
pop
sub
lods
in
out
sbb
add
mov
js
and
repnz
divl
and
xor
add
sti
enter
dec
xor
dec
into
aas
xchg
mov
fwait
iret
cmp
nop
pop
pushf
movsb
loop
jb
pop
sahf
pop
lret
cltd
mov
out
aad
pop
push
xor
addl
cmp
aad
adc
jmp
cmp
or
push
std
jge
push
test
sub
dec
out
cmp
insb
and
xor
insb
cmp
add
das
dec
dec
nop
mov
fs
movsl
and
out
mov
xchg
xor
mov
add
push
push
sub
fdivrs
push
cmc
shrl
mov
or
push
fldl
inc
mov
jl
test
ljmp
adc
rorl
lret
outsb
lods
or
push
shrl
shrl
cmp
cmp
push
lea
bound
divb
lods
push
xchg
std
mov
push
mov
repz
in
stos
mov
xlat
mov
add
jg
sub
addr16
ret
movsb
pop
xor
lods
mov
pushf
add
sbbb
jmp
mov
pop
pop
pop
inc
mov
xchg
mov
jb
rorb
add
and
test
push
fldcw
dec
clc
pop
inc
loopne
mov
cwtl
mov
int3
push
ds
popf
pop
lock
add
enter
xor
into
push
pop
xor
adc
sti
cmp
pop
and
scas
push
outsb
adc
jne
andb
lds
addr16
setge
nop
jnp
mov
fwait
mov
inc
lret
push
push
mov
fmuls
dec
fcompl
cwtl
rol
lahf
sbb
xor
imulb
inc
sub
ljmp
xor
ret
adc
push
sub
es
icebp
jle
push
mov
sbb
cmp
gs
sub
pushf
mov
dec
or
bound
jno
sbb
filds
outsl
test
ljmp
inc
sbb
test
xchg
xchg
loop
scas
adc
loop
lret
mul
mov
adc
ds
pop
test
adc
sarl
out
dec
inc
mull
sbb
push
lods
psllw
push
stc
push
mov
outsl
push
in
insl
mov
imul
fcompl
pop
data16
arpl
mov
sbb
mov
inc
pop
int3
test
sbb
test
push
test
test
mov
fnstcw
leave
daa
or
sub
push
inc
add
xor
cs
add
mov
std
xor
repnz
notl
out
pushf
xor
test
cmp
add
and
xor
push
pop
inc
inc
mov
ljmp
stos
aaa
mov
and
push
mov
or
sub
out
loop
aas
sub
hlt
out
sbb
sbbb
ror
mov
data16
push
insb
xor
pop
stc
rorl
pop
mov
icebp
ret
pop
and
mov
pop
xchg
clc
lcall
int
dec
sbb
test
fistpll
xchg
aas
xchg
jo
cmpsb
push
sub
jno
mov
mov
je
xchg
stos
pop
lret
outsl
jmp
inc
out
rorb
lods
mov
fcomps
and
iret
pop
xchg
add
push
pop
test
xor
cmpsl
into
xor
adc
xchg
lods
xrelease
jmp
scas
adc
nop
lods
test
popf
jp
sbb
xchg
add
movsb
dec
mov
out
sbb
mov
dec
cwtl
cmpsb
roll
inc
stos
sarb
dec
mov
add
dec
mov
jns
adc
dec
xchg
stc
out
in
js
add
into
lods
sarb
icebp
xchg
fwait
mov
std
xchg
xor
ficomps
into
dec
mov
stos
push
repnz
xor
mov
out
fsub
xor
cld
or
mov
mov
mov
pushf
icebp
jbe
lahf
inc
xor
xchg
les
push
inc
ret
or
rorl
xor
mov
jns
dec
push
int3
idivl
into
mov
ret
mov
jmp
rorl
lods
xchg
ljmp
cmp
or
inc
xlat
xchg
jne
aad
push
shrb
les
sub
sbb
dec
pop
cmp
insb
incb
or
in
das
jne
dec
xor
sti
mov
xchg
jno
lret
int
and
movsl
push
lahf
addr16
ds
repz
std
mov
push
xchg
mov
arpl
or
or
adc
aaa
adc
aam
out
sbb
lret
add
jne
sub
clc
aad
jle
in
dec
stos
sub
jnp
xchg
jle
stos
roll
jnp
adc
ljmp
adc
lret
and
lahf
imul
push
mov
inc
push
std
inc
jne
popa
lahf
loope
int3
cs
pushf
imul
cmpb
inc
xor
inc
inc
gs
mov
mov
mov
int
arpl
xchg
arpl
cmp
leave
in
push
cld
xor
out
lahf
repz
stos
shll
push
cmpl
sbb
psrlq
sub
mov
aad
xor
in
mov
js
les
subb
add
cmpsl
pop
cmp
ret
or
ss
addr16
enter
std
mov
lods
in
testl
sub
inc
mov
test
add
jle
add
sub
push
cmp
xchg
out
cwtl
and
add
and
repz
jnp
lea
mov
adcb
ds
jne
cmpsl
xor
clc
or
push
mov
test
movb
mov
dec
xor
mov
add
inc
cld
sbb
orl
lcall
xchg
sbbb
stos
es
xorb
jg
push
push
jnp
push
mov
mov
or
jmp
or
xchg
cld
fdivrp
int3
mov
pushf
inc
lcall
cmp
inc
insl
pushf
fmul
add
inc
les
js
cmp
negl
dec
icebp
bound
hlt
imul
ret
sbb
push
sub
adc
xor
mov
lahf
test
repz
aad
jg
int3
push
out
inc
aam
aaa
cmp
pop
xchg
mov
push
cltd
xor
inc
stos
roll
cwtl
lea
lret
dec
xor
fisttpl
stc
mov
xchg
sub
clc
push
cmp
cmpsl
push
pop
and
mov
dec
sbb
cld
popa
or
gs
popf
movsl
add
jo
push
shlb
mov
lahf
mov
mov
lahf
jge
sbb
repz
or
aam
mov
aad
xor
push
xchg
ret
cmp
cmp
mov
jno
aas
test
adc
mov
sub
jno
hlt
and
xor
pop
test
je
in
sbb
ljmp
test
jecxz
and
test
mov
pop
mov
mov
les
pusha
sub
push
mov
ss
push
jmp
sti
rorb
into
cmp
pop
out
stc
call
sbb
cltd
aas
enter
in
enter
cmp
outsb
arpl
xchg
je
or
popa
std
lock
adc
push
lds
rorb
out
lods
xchg
iret
add
mov
loopne
xlat
jmp
into
js
mov
inc
test
pop
xor
or
xchg
leavew
xor
out
shlb
sub
push
add
pop
clc
mov
hlt
fmuls
out
out
xchg
gs
mov
sbb
push
jecxz
subps
into
push
shl
adc
pop
insb
jbe
aaa
mov
rorl
lds
loope
sub
je
movsb
not
stos
adc
sub
ljmp
cmp
loope
mov
xor
lods
push
insb
adc
mov
das
or
mov
mov
je
mov
push
pop
repz
fstpl
xor
insb
add
ret
and
std
inc
xchg
ja
push
xchg
mov
dec
in
outsb
int
mov
int3
mov
insl
xor
adc
xlat
fisubrl
lock
popa
or
mov
mov
cmp
adc
popa
in
cltd
loop
push
or
or
xchg
jae
bound
mov
push
dec
insb
pop
and
add
cmp
xlat
ret
lds
sub
inc
das
es
insl
mov
in
out
and
cmp
inc
adc
outsl
pop
enter
xchg
mov
fs
adc
jae
movsl
and
insl
fmuls
add
jb
push
lea
loopne
pusha
subl
inc
inc
cli
jb
dec
mov
push
dec
mov
add
cld
and
lods
jge
loope
loopne
out
adc
dec
pop
jge
scas
js
jo
xchg
arpl
sbb
sub
inc
mov
add
daa
aaa
fs
cmpl
cmpsb
jo
xor
dec
jbe
cltd
pop
fwait
int3
mov
sti
adc
cmc
inc
insl
lods
cmp
adc
xlat
xchg
leave
push
es
cwtl
jns
bound
aad
jno
in
imul
push
xchg
js
push
jecxz
mov
fisubs
icebp
shll
scas
inc
push
pop
mov
dec
pop
popaw
shl
fxch
leave
pop
imul
adc
cmpsl
and
mov
lea
js
or
je
pushf
sbb
fistpll
or
fildl
adc
mov
add
mov
js
clc
cmc
pop
mov
adc
movsl
je
outsb
int
loope
mov
inc
jnp
jecxz
sbb
sub
mov
push
lods
fs
js
push
cmp
mov
cld
jno
adc
mov
cmpsb
addr16
inc
in
mov
push
pop
cmp
ljmp
sub
sahf
fcoms
lea
sub
pop
lret
adc
mov
test
and
test
fnstenv
js
or
adcb
mov
fcoms
cmp
cmp
or
shl
push
in
stc
add
xor
andb
leave
aaa
and
add
cli
add
mov
jne
lahf
or
jle
mov
insb
add
mov
sahf
out
and
inc
dec
cmpsb
sub
and
scas
push
adc
push
push
cmp
push
aad
pop
cmp
in
lods
enter
push
pop
mov
fidivrs
cwtl
mov
mov
negb
add
fistps
ret
addr16
lock
mov
jge
call
dec
bound
xor
dec
or
jmp
fucomp
dec
mov
xchg
pop
cmp
cltd
and
fnstsw
sar
adc
test
push
inc
addb
mov
mov
pop
xchg
mov
and
int3
xorl
scas
in
test
jge
je
and
enter
ljmp
ret
xchg
cmpsl
shlb
or
and
out
xor
jmp
icebp
mov
je
xor
and
pop
cmp
mov
inc
aad
pop
xchg
push
inc
sbb
adc
xor
idiv
fidivl
xor
mov
popa
inc
aas
xorb
jmp
repz
or
insl
inc
fwait
int3
adc
and
mov
clc
sbbb
lea
out
add
mov
insl
jge
bound
pop
outsb
stc
pop
pop
cld
enter
lret
shlb
xchg
sbb
sbb
fwait
sub
push
push
outsb
cltd
adc
scas
shr
mov
xor
popa
imul
and
lds
fdivrp
in
cmp
push
out
or
mov
jg
lahf
into
sbb
or
fimuls
adc
mov
dec
imul
dec
rcll
loopne
pusha
jecxz
das
aaa
pop
mov
cmc
xor
scas
cmpsl
push
xchg
loopne
subps
or
aam
mov
int
mov
xchg
imul
fnstenv
leave
xor
mov
xchg
stc
lods
adc
scas
mov
out
int
lock
popf
jne
ja
pop
xor
mov
gs
or
add
cmp
scas
inc
adc
xor
pushf
or
imul
ficomps
dec
push
aad
repnz
mov
repz
fsubrp
sub
call
and
sahf
je
dec
or
pop
bound
enterw
fidivrl
cmp
test
jle
jae
dec
bound
mov
leave
je
shr
adcb
cld
cmp
xchg
inc
pop
std
loopne
and
jp
loope
lahf
sub
les
mov
mov
xchg
insl
lea
mov
ficoms
mov
aas
negb
lods
inc
cmp
xchg
mov
pop
jae
hlt
outsb
sub
sub
pop
jecxz
and
bnd
mov
jnp
enter
push
out
xor
imul
in
jb
sbb
mov
xor
pop
adc
out
insb
ret
mov
push
test
outsb
scas
xor
jmp
pusha
push
lds
outsl
xchg
push
xchg
cltd
mov
inc
lcall
sbb
testb
outsb
stos
pushf
mov
push
popf
mov
push
jle
jmp
sbb
outsl
fxam
jae
mov
cli
xchg
cmc
pop
or
enter
fwait
aam
dec
xor
push
jno
aad
sub
pop
icebp
std
pop
sub
xchg
mov
inc
out
dec
inc
inc
push
jno
aad
enter
cli
test
add
or
adc
arpl
add
mov
dec
aad
insl
roll
mov
ret
movsl
icebp
xchg
and
gs
enter
jne
fwait
lds
xlat
lret
dec
fs
push
push
cld
js
neg
dec
sbb
fiaddl
stos
imul
std
mov
movsb
cmp
jl
push
mov
pop
mov
mov
sbb
stc
outsb
and
push
jmp
cmp
in
test
inc
data16
mov
add
loopne
jg
clc
xchg
jl
jbe
dec
add
cld
psubw
lds
cli
cltd
lods
aaa
pop
push
push
sbbl
imul
inc
out
lahf
icebp
dec
jo
popf
shll
pop
data16
xchg
pushf
mov
rcll
gs
loop
scas
add
call
sub
sbb
iret
dec
cmpsl
push
int
xor
enter
xor
std
inc
and
popa
mov
stos
adc
rep
subb
jnp
pop
mull
jge
lret
pop
loopne
jl
lret
andb
call
fcomp
push
clc
push
sub
sub
mov
inc
cltd
jae
jl
inc
xchg
daa
or
push
jns
movsb
dec
inc
out
jge
or
or
outsb
cwtl
stc
movsl
inc
shll
iret
dec
leave
adc
dec
mov
push
push
repz
sub
shlb
sbb
inc
jg
shrl
test
inc
test
mov
and
push
push
mov
dec
push
data16
adc
mulb
mov
bound
jbe
pusha
rcrb
or
pop
popf
or
scas
pop
adc
push
xor
sub
data16
arpl
or
rcrl
mov
clc
pop
dec
mov
dec
sbb
push
test
stc
andl
ja
jb
subl
fs
jg
push
int
lods
arpl
add
push
mov
pop
jo
ljmp
mov
inc
lcall
test
cmp
jg
cmp
leave
cmp
or
ljmp
inc
dec
sbb
xchg
or
sahf
cmp
sub
fs
cmp
add
or
push
shrl
sub
ret
pop
icebp
pop
ds
mul
decb
loop
push
dec
dec
and
fcompl
adc
push
or
rorb
dec
adc
cld
in
mov
dec
lds
dec
add
out
jmp
inc
add
add
mov
dec
rcrl
les
jp
pop
and
xchg
xor
in
shll
xchg
mov
mov
cmpl
mov
je
das
fcomps
outsb
inc
push
loop
lret
lds
and
jnp
xor
fstpt
ljmp
sbb
repz
mov
push
loop
loop
hlt
adc
shlb
adc
cmp
and
xchg
adc
pusha
jle
add
je
pop
mov
add
xchg
pop
adc
mov
negl
int3
mov
xor
add
jne
fstpt
jmp
jl
nop
pop
xchg
mov
cmp
jmp
cmp
sbb
insb
scas
jb
dec
ljmp
fwait
and
iret
nop
lcall
outsb
or
nop
add
cld
dec
int3
ss
sub
lea
lret
lock
xchg
pop
movzwl
push
idivl
xchg
int3
sub
fcompl
add
fisubrl
out
jno
inc
add
outsb
dec
mov
cmp
mov
sub
mov
pushf
push
aad
filds
int
nop
lahf
cmp
mov
xor
xchg
aaa
notb
fxch
xor
sub
pop
dec
cld
and
imul
pushl
jns
jno
sbb
mov
sbb
push
mov
xchg
cmp
out
and
xorb
and
subb
sub
jnp
mov
jno
sahf
and
jg
sub
leave
rcl
jne
xor
jns
mov
sti
test
das
insb
inc
popf
jno
mov
lds
outsb
push
in
jecxz
call
and
xchg
aaa
hlt
pop
les
push
adc
into
or
int
stos
lods
inc
mov
jmp
movlhps
jecxz
sub
xor
mov
lock
cwtl
pop
cmc
jmpw
imul
fsts
movsl
mov
fnstenv
shrl
push
icebp
pop
xor
cmp
pop
cmc
adc
sbb
lock
push
cmpsl
lahf
into
mov
and
cmp
or
cmpl
sub
imul
xor
mov
xchg
xchg
jge
and
dec
pop
sbb
dec
out
psubb
int
xchg
adc
cmp
push
cld
shl
lods
insb
dec
xor
inc
mov
iret
pusha
sbb
repnz
adc
inc
shll
data16
imul
mov
ror
and
jle
das
insl
out
stos
xor
or
xor
xor
jbe
inc
and
outsb
mov
mov
pop
mov
xchg
xlat
ljmp
sti
add
jne
push
repz
movsb
sbb
jg
stos
mov
xchg
insl
lret
stos
test
mov
out
push
adc
cmp
mov
adc
ja
inc
out
jg
sarl
jnp
andb
inc
adc
test
mov
in
outsl
jns
lock
ret
sbb
insb
insl
adc
xor
and
inc
pushl
out
inc
in
in
out
cmp
orb
xor
popa
push
pushf
push
jmp
jl
lea
insl
ss
sahf
pop
div
cli
push
push
jns
dec
jge
xchg
add
enter
cmp
or
inc
or
mov
and
test
cli
mov
imull
xor
test
and
push
jns
xchg
iret
int
mov
iret
xchg
xor
sub
adc
popf
iret
pop
loop
add
push
dec
xor
cmc
into
inc
ret
add
push
adc
push
out
dec
daa
adc
enter
jmp
xor
pop
sub
lret
and
insb
mov
xor
inc
imul
ja
int3
jg
mov
vpsubb
inc
les
call
jo
bt
loope
ret
sub
jp
cmp
push
ds
mov
push
loop
adc
add
adc
testb
jp
out
lret
insb
pop
or
add
adc
inc
push
cmpsl
and
ljmp
in
mov
jge
test
notb
sub
mov
daa
incl
lods
js
mov
and
inc
mov
inc
and
hlt
ds
mov
pop
sub
std
mov
dec
fisttpll
dec
add
cld
pop
sub
ficoml
mov
inc
fs
arpl
and
xchg
lock
push
sbbb
fisubrs
lcall
mov
push
pushf
cmpsl
dec
in
lret
sub
mov
mov
icebp
or
and
push
daa
addr16
add
stos
adc
rclb
add
push
sub
fwait
pop
iret
cmp
pop
push
mov
jmp
push
jno
xor
cltd
dec
adc
jo
dec
pusha
sub
push
sbb
and
lret
push
xor
inc
fmuls
in
in
inc
js
scas
leave
bound
inc
repz
outsl
dec
jo
mov
xchg
jle
data16
test
lret
cmp
mov
dec
inc
xor
aam
addb
adc
sbb
dec
xor
out
or
pop
insl
out
jg
mov
jae
push
mov
ficomps
addr16
outsb
fadd
in
or
fisubl
fisubs
or
fidivl
push
push
cmp
insl
adc
fnstsw
pop
inc
sti
sub
sbb
popf
mov
insl
pop
int
mov
sub
or
repnz
notl
xor
push
aad
jge
stos
jle
mov
cmp
ss
ss
sahf
mov
xchg
mov
xlat
dec
std
std
dec
add
xchg
outsb
mov
jg
pop
test
lret
push
flds
loope
js
sub
xchg
sub
and
in
sbb
add
stos
out
int
cmp
push
sbb
add
aam
movsb
out
push
xor
mov
mov
ja
pop
dec
mov
imul
mov
enter
icebp
adc
xchg
xor
add
fdivrl
mov
add
not
dec
adc
pushf
shr
popf
mov
dec
push
dec
gs
mov
adc
push
pop
repz
xor
jmp
loopne
fnstenv
sbbb
arpl
or
and
stc
aas
push
sbb
jb
cmp
call
inc
sbb
into
stc
jmp
repz
adc
inc
pop
jne
pushf
loope
lods
inc
jno
ss
xchg
lods
negl
aad
push
add
cmp
and
mov
or
cli
sub
or
nop
inc
jecxz
mov
and
lods
loop
insb
push
call
mov
nop
mov
test
lret
iret
push
jae
sar
and
mov
add
or
jle
cmp
pop
cld
mov
mov
call
std
mov
lahf
fs
pop
repnz
pop
adc
mov
mov
jl
daa
rcr
test
ss
pop
pop
lock
adc
test
and
std
adc
movsl
cltd
jno
xor
or
xchg
push
jmp
out
xchg
lcall
cmp
js
adc
mov
push
xor
es
or
fisubs
mov
or
loope
das
sti
lods
jl
mov
jecxz
xchg
xchg
fildl
pop
push
cld
jo
test
mov
cmp
das
push
mov
cmp
arpl
dec
mov
dec
andb
mov
ret
in
and
mov
in
push
ret
xor
mov
inc
fs
lock
add
sbb
jecxz
jl
into
popfw
iret
sbb
lret
pop
inc
loopne
push
pop
ret
sub
cwtl
mov
add
sbb
lock
add
pushf
pop
sub
mov
pop
mov
fistpl
add
dec
movsb
and
bound
push
inc
xchg
test
das
adc
adc
pop
push
mov
jns
pop
iret
or
xor
rorb
dec
push
jge
mov
es
adc
imul
jp
mov
push
shrb
jns
dec
shll
mov
xchg
movsb
xor
aad
add
stc
cmpsl
sbb
mov
mov
pop
jmp
mov
sarb
and
mov
inc
lods
sub
push
mov
mov
adc
pushf
rorl
inc
add
mov
inc
call
xchg
stos
sub
pusha
mov
mov
stos
dec
mov
icebp
mov
ret
scas
mov
int3
push
sarb
mov
imul
cmp
push
repnz
push
sbb
pop
sarl
jle
inc
jl
xlat
testl
into
and
xchg
dec
cmp
loope
loop
aas
hlt
ficoml
xchg
or
loop
adc
xchg
pmaxsw
adc
and
js
mov
out
in
lcall
repz
leave
dec
push
xchg
and
xchg
pop
pop
pop
inc
pop
ss
ljmp
out
test
ljmp
xor
and
outsl
rcr
or
cwtl
test
mov
xor
add
mov
push
push
and
mov
popa
add
pop
lahf
imul
loopne
aam
js
lea
lock
clc
fnstsw
xor
addr16
loop
pop
ja
jnp
adc
ss
stc
adc
xchg
loope
stos
test
sub
loope
push
mov
cmc
jle
adc
jge
mov
jg
mov
imul
xor
push
xor
adc
xchg
gs
arpl
xlat
pop
into
outsb
repnz
and
loop,pn
xchg
mov
daa
pop
push
mov
out
mov
daa
or
call
divb
enter
cmp
dec
les
adc
jl
xor
in
dec
lahf
stc
pop
hlt
test
or
cmpb
cmc
inc
enter
pop
cmp
add
inc
mov
ds
imulb
mov
push
push
adc
mov
mov
fcmovbe
cmp
adc
into
inc
inc
loope
jb
aad
daa
dec
mov
sbb
push
xor
jl
js
shlb
stos
jmp
js
xchg
mov
adc
test
xor
test
and
cwtl
cmp
mov
adc
daa
enter
cmp
push
jno
xchg
mov
jg
and
jb
mov
int
scas
ljmp
js
rclb
xlat
mov
sbb
mov
jl
and
xor
lret
cli
andb
fisubrl
sbb
leave
and
sub
in
xchg
pusha
cmpl
mov
retw
sub
imul
gs
mov
pop
push
test
aas
fwait
inc
lahf
pop
sub
or
movsb
dec
arpl
std
xchg
inc
aam
and
xchg
inc
jg
xchg
and
xor
or
xchg
fdivr
pop
cmpsl
jns
gs
imul
dec
fadds
jae
lret
sahf
imul
nop
mov
add
dec
cmp
aas
and
xor
dec
cmpsl
inc
popa
mov
push
sbb
inc
idiv
mov
sbb
and
rorb
ja
mov
inc
pop
fstp
and
add
jecxz
jge
int
pop
mov
jne
adc
cmp
mov
inc
jp
enter
jmp
adc
mov
daa
iret
pop
in
mov
loopne
mov
jb
add
mov
testb
adc
subb
cltd
mov
push
ss
shrl
mov
and
test
fdivrl
inc
test
or
aas
popa
adc
xorl
xchg
scas
fimull
adc
mov
into
lods
or
dec
les
scas
mov
into
xchg
bound
xor
jns
jmp
xor
fadds
dec
fwait
leave
les
dec
mov
in
incb
cmp
cli
lcall
push
push
icebp
lret
test
lcall
test
sub
in
testl
push
popl
repnz
jbe
pop
jns
daa
xchg
or
sub
imul
or
inc
stc
arpl
jnp
fsubrl
ret
pop
cmp
mov
shll
popf
jle
out
in
add
add
mov
outsl
cmp
lcall
sub
ljmp
sbb
pop
mov
movsl
mov
dec
cli
hlt
in
sahf
lock
mov
push
xchg
pop
adc
add
inc
mov
clc
and
and
out
test
xchg
scas
mov
mov
push
daa
out
imul
in
jmp
inc
pop
stc
rcrb
inc
sbb
or
js
xchg
ret
mov
mov
add
add
mov
xchg
mov
iret
pop
flds
pop
cmp
loop
mov
fstl
pop
adc
out
int
cmp
shl
push
sarb
stos
outsb
mov
sbb
movsb
jmp
daa
inc
cmp
icebp
mov
gs
adc
sub
in
mov
and
int
data16
pop
push
jb
pop
xchg
cs
inc
xchg
cmp
mov
jo
fwait
and
mov
test
mov
sbb
adc
call
fbstp
xor
gs
leave
scas
call
cmp
incl
stc
scas
push
int
je
jle
fstps
fsub
ljmp
rcll
jecxz
pop
mov
aad
shlb
rolb
loop
push
adc
leave
sbb
lret
add
sbb
fwait
iret
xor
clc
js
dec
jmp
sahf
gs
push
mov
mov
arpl
pop
jns
rcrb
fwait
pop
pop
inc
jns
stos
stc
inc
repz
or
inc
arpl
fwait
dec
sub
jmp
mov
outsl
push
ret
aaa
or
cs
rcrl
or
cs
mov
pop
std
push
cmp
pop
dec
sarl
mov
shlb
cmp
jbe
lahf
sbbl
fldl
cli
inc
pushf
mov
sub
dec
push
jns
sbb
xchg
js
inc
add
mov
push
add
inc
inc
lock
inc
push
jmp
fdivp
lock
fwait
andl
movsl
or
stc
mov
faddl
mov
xchg
test
enter
xor
shlb
push
xlat
sub
fwait
iret
fwait
scas
mov
icebp
mov
mov
clc
xor
sub
fwait
and
sbbb
push
je,pt
repz
jb
addr16
jl
jmp
out
ret
sahf
ficoml
xchg
pop
fs
js
push
ljmp
aaa
mov
cmp
xchg
mov
movsl
push
lods
push
rol
sbb
rcr
fsubrl
jge
or
insl
jp
sub
repnz
inc
push
mov
mov
fnsave
adc
shlb
repnz
test
mov
mov
xor
mov
jmp
pop
push
lret
dec
popf
das
or
sbb
xor
jb
cwtl
in
shrl
cmp
pop
dec
pop
jno
mov
sbb
pop
ja
enter
push
adc
pop
sub
into
jle
sub
sbb
jne
sti
aad
push
xchg
pusha
adc
aas
sub
imul
mov
lret
or
idivl
jo
subl
fdivrp
sub
inc
mov
mov
push
loopw
in
scas
sbb
adc
cltd
mov
fcoml
rcll
jno
push
and
push
and
insl
pop
jl
mov
jp
iret
ljmp
adc
dec
jb
rcll
cmp
ja
mov
adc
push
das
jmp
std
add
add
jns
jo
and
int
daa
insl
adc
jl
mov
jmp
sti
je
pop
ret
rorb
mov
out
and
adc
xor
mov
jns
in
rol
sti
arpl
adc
pop
mull
sbb
bound
dec
pusha
repnz
pop
add
test
xor
mul
cmp
clc
cwtl
jp
ret
lock
add
in
jae
jo
fcomip
add
dec
push
repnz
ja
jmp
pop
lret
test
push
sti
jae
into
jno
or
jge
add
dec
jnp
sub
pusha
in
dec
jno
pop
adc
sar
in
lcall
xor
clc
sub
jne
outsl
jge
push
cmc
loopne
popa
outsb
aad
movsb
lock
cmpsb
aam
outsb
push
cmp
xor
sub
add
and
or
xor
sbb
cmp
pusha
xor
sub
adc
stos
push
dec
xor
aam
fsubs
mov
sti
mov
jnp
shll
enter
push
pop
in
add
mov
xor
inc
mov
stos
jp
stos
ljmp
sub
pop
add
or
xchg
push
or
in
push
add
or
pop
fnstcw
es
mov
fdivl
in
lcall
adc
jb
fbld
das
iret
cmp
add
aas
adc
imul
addr16
mov
jle
imull
mov
and
and
pushl
test
lea
sbb
mov
sbb
shr
leave
pop
sub
mov
test
mov
and
push
lea
insb
outsl
dec
adc
xor
sub
mov
cmp
and
fdivr
and
out
inc
fwait
pop
push
mov
push
push
push
mov
mov
add
loopne
xchg
jo
sub
mov
pop
push
adc
ja
mov
test
loopne
std
out
lock
aam
outsl
lds
pop
jecxz
xchg
push
pop
mov
sbb
lcall
mov
test
scas
mov
call
adc
loope
subl
stos
pop
xchg
addl
push
aas
imul
std
pop
and
clc
mov
cmpsb
inc
fwait
push
xor
scas
jb
std
cmc
cs
stos
repz
out
add
sbb
mov
add
mov
xchg
push
cmp
xor
and
or
jp
cmp
push
enter
push
lea
in
hlt
ret
inc
ret
adcb
adc
jle
movsb
mov
ja
and
stos
arpl
incb
jae
bound
outsl
fldt
je
add
movsb
insl
shl
call
push
fcomps
in
stc
movsl
dec
lods
imul
shrb
push
jl
cltd
ret
dec
shll
jb
mov
movsb
push
mov
add
scas
outsl
loopne
push
sub
loope
nop
fs
and
dec
sbb
pop
icebp
cmpsl
and
les
aam
das
xchg
jno
outsb
xchg
shrb
or
mov
arpl
scas
lods
movsb
xor
xchg
xchg
and
add
push
negl
shl
cld
jnp
js
stos
enter
adc
scas
mov
mov
xor
lret
fst
inc
mov
cmp
iret
add
or
pop
dec
mov
aam
sub
push
mov
jno
imul
push
push
mov
and
inc
lods
mov
mov
mov
mov
aas
cmp
cmp
lock
or
jge
dec
jg
repnz
sub
cmovp
test
popf
sbb
iret
push
pop
add
push
mov
xchg
clc
and
sbb
jmp
popa
xchg
lcall
lret
daa
push
aad
das
cmp
outsb
movsb
dec
mov
mov
popa
jb
out
dec
push
dec
inc
std
mov
clc
mov
or
cmc
fnstcw
xchg
push
ja
int3
incl
or
out
test
xchg
jae
mov
cmp
cltd
outsl
inc
por
mov
and
cmc
sbb
fisubrs
pop
loopne
dec
push
xchg
repnz
pop
xlat
mov
push
outsb
lahf
cmp
jnp
int3
mov
push
pop
push
into
push
xchg
ds
in
insl
push
inc
testl
push
ret
lods
mov
rclb
stos
push
imul
test
push
jecxz
lds
adc
clc
divl
mov
mov
ljmp
insb
or
jmp
mov
out
loopne
push
aad
repz
mov
daa
mov
xor
pusha
push
mov
dec
xorl
je
in
and
lods
jge
aaa
fldt
lret
pop
push
insb
andl
stos
xorb
xor
test
xchg
movsb
ljmp
stc
and
test
ljmp
mov
pop
pop
adc
aad
ret
arpl
mov
cmp
pop
jecxz
adc
imul
inc
pop
push
sti
mov
add
push
or
mov
adc
mov
pushl
add
xor
scas
test
pop
mov
push
add
xlat
and
push
xlat
jge
fdivp
movsl
inc
mov
jge
nop
and
mov
adc
rcr
pop
daa
mov
push
fstps
repnz
push
sahf
popf
clc
and
push
mov
cmp
inc
cmpl
mov
jl
mov
sub
into
aam
fcomps
insl
or
jbe
stos
aad
imul
ror
jo
mov
pop
sbb
int
repz
adc
das
out
mov
adc
popf
xchg
cltd
add
adc
cmp
in
xor
jmp
insb
mov
cs
imul
jmp
das
inc
jle
fsubrs
rcr
aaa
or
lcall
jb
mov
adc
negl
fwait
push
scas
in
jl
sbb
mov
sbb
insb
lret
rcl
push
scas
lcall
andl
mov
mov
ja
addl
lret
cmp
mov
nop
repz
clc
sbb
fstps
cmp
stc
imul
stos
aad
sbb
xchg
jne
mov
iret
ljmp
lea
shrl
or
out
lea
jns
repz
enter
cmp
loop
jnp
cmp
popf
icebp
jne
add
lret
jne
fstpl
fists
sub
fdivl
packssdw
add
lods
xor
bound
jb
test
lock
push
add
nop
jnp
push
xchg
dec
shll
call
iret
or
sbb
scas
lret
push
or
clc
loop
jl
mov
mov
loop
mov
fdivrl
sbb
sbb
ja
inc
pop
loopne
mov
mov
push
push
stc
or
ljmp
xchg
mov
sbbl
sub
mov
adc
scas
add
pop
add
cs
xchg
test
cmp
mov
push
lods
mov
xchg
adc
or
push
movsb
jmp
or
dec
sti
xchg
popf
jmp
gs
lret
test
inc
mov
je
pop
movsl
in
mov
bnd
in
mov
or
iret
hlt
bt
mov
jns
jge
in
mov
fistpll
icebp
dec
dec
mov
mov
push
push
push
and
or
pop
cltd
loop
ja
rcll
icebp
dec
pop
or
sub
sbb
ljmp
mov
cmc
enter
popa
mov
fs
test
push
mov
pop
mov
insb
lret
dec
inc
xchg
arpl
and
leave
aas
cmp
push
testb
pusha
add
stos
in
sub
icebp
mov
popf
repz
inc
jbe
stc
xor
movb
ret
stc
add
dec
div
movl
cmp
push
ss
imul
push
in
mov
jle
push
out
xchg
in
xchg
jo
inc
dec
cmpb
cltd
pop
mov
mov
lds
jmp
and
mov
inc
shrb
add
pop
mov
ret
jge
push
sbb
and
add
or
push
mov
jnp
ret
ss
aam
mov
lret
cli
inc
sub
and
mov
ss
adc
jp
xchg
imul
inc
cltd
pushf
xchg
sahf
movsb
mov
decl
mov
sbb
bound
mov
xchg
data16
add
sbb
or
movsl
mov
xchg
shrl
fadds
dec
or
mov
mov
xlat
mov
mov
pop
cmpsl
int3
lds
adc
push
and
inc
push
xchg
adc
xor
test
insb
push
inc
adc
and
imul
push
jle
xchg
cmp
pop
inc
jbe
out
push
pop
sub
xchg
add
sbbl
sbb
push
test
fimull
inc
add
xchg
fs
ss
loop
and
add
fnstcw
test
data16
cwtl
push
cmp
xchg
lahf
arpl
push
lods
repz
jg
rclb
push
into
add
cmpsb
xor
lock
mov
dec
lret
pop
fldenv
rcr
inc
xorb
mov
imulb
mov
mov
xorl
pop
jl
adc
gs
pusha
jp
xchg
fisubl
mov
mov
push
dec
or
stc
inc
or
fisttps
movsl
out
push
stos
stos
enter
mov
mov
push
lods
jno
jle
jg
adc
in
cmp
mov
mov
shl
jge
rep
iret
sbbl
push
fcomps
xor
and
pop
and
push
jge
das
cmc
int3
cltd
inc
rorb
push
popa
add
lret
inc
shrb
and
mov
popa
jae
push
jge
lret
cmp
xor
mov
mov
inc
ljmp
sub
xchg
jb
mov
shrl
mov
es
pop
mul
daa
loop
arpl
inc
or
aad
sbb
push
push
jns
jl
mov
push
xor
dec
and
jecxz
jno
jle
adc
lods
test
sbb
call
in
dec
pop
pop
cli
cmp
sbb
ss
mov
and
test
adc
insl
nop
aaa
jmp
ljmp
lcall
mov
xor
icebp
bound
rcr
ret
sub
cs
push
addb
das
adc
insb
mov
fwait
sbb
rcrl
pop
je
inc
mov
popa
ss
jle
sub
das
jl
jbe
repnz
scas
lret
jp
cltd
sub
js
sbbl
inc
cmpsl
pop
out
cmp
iret
icebp
icebp
mov
add
pusha
mov
ret
xor
pop
push
cltd
sub
mov
mov
or
add
cltd
popf
lods
in
push
jns
mov
mov
loop
push
mov
mov
aaa
hlt
jnp
sbb
push
and
jge
xchg
sub
jb
push
out
movl
test
mov
mov
dec
add
dec
cmp
jecxz
sti
cmc
dec
jno
in
fdivs
jl
inc
push
or
xlat
mov
aam
mov
xor
mov
aam
lods
inc
inc
inc
xchg
adc
xchg
lret
and
jnp
rorb
push
loope
sub
jle
imul
je
xchg
sbb
jp
dec
mov
jg
loope
mov
notl
sti
cs
cmpsl
push
dec
push
in
movsb
incb
mov
add
lret
sub
mov
and
js
outsl
imulb
ja
nop
fnstcw
test
xor
push
pop
mov
jnp
mov
jnp
inc
fs
leave
frstor
sarb
mov
dec
in
mov
add
cmc
movsb
pop
scas
rcll
inc
js
in
mov
bound
jmp
lea
inc
jmp
inc
in
push
push
inc
or
mov
mov
add
cld
gs
gs
lods
dec
arpl
out
pop
dec
cli
dec
mov
test
ljmp
sbb
out
or
sub
pop
pop
test
movsl
cmp
jne
lahf
jle
fwait
std
mov
aam
jge
push
adc
jae
and
pop
inc
inc
pop
lock
subb
and
and
inc
jo
xchg
xlat
lds
mov
dec
pop
shll
cmp
push
and
cmpsl
outsb
jbe
mov
pop
into
stc
insl
mov
push
push
dec
dec
repnz
sarb
xchg
adc
out
stos
sub
cltd
inc
clc
lea
dec
loop
fsubrs
stc
sub
push
pop
pop
and
les
mov
imul
and
pop
fcomp
sbb
lods
enter
lcall
mov
mov
jae
dec
pop
mov
roll
mov
sub
xor
test
push
call
imul
add
je
arpl
jmp
adc
ret
ret
das
push
push
cltd
jns
fcompl
ljmp
in
mov
lret
sub
aaa
or
cmp
add
push
loop
or
lret
sbb
dec
or
and
dec
xchg
in
xchg
sarb
mov
shrb
inc
sbb
push
sub
or
imulb
enter
rcrl
xchg
xchg
xchg
ror
sbbb
cmpb
stos
dec
nop
rolb
sbb
scas
ret
xchg
out
stos
xchg
out
jo
out
ficompl
jbe
sub
popa
cwtl
in
lahf
cmp
jns
cmpsl
adc
insl
test
scas
mov
mov
mov
push
jecxz
ds
sbb
std
aam
rol
fbld
fdivrp
sub
loope
mov
mov
and
xchg
ret
dec
dec
imul
jbe
popf
push
cwtl
ja
add
int3
loop
pop
std
adc
adc
sub
fbld
lret
push
add
cld
test
mov
ds
stc
adc
js
fbld
movsb
repz
nop
cmpsb
movsl
enter
pop
adc
stc
jge
das
xor
lock
push
push
scas
jmp
jo
sub
cmp
je
lcall
shl
xorb
out
cmp
xlat
sbb
lcall
imul
inc
push
sub
add
inc
leave
push
pminub
sbb
add
shrb
repz
lods
test
jno
jmp
fnstcw
adc
dec
xchg
xchg
fwait
sub
sub
ret
dec
scas
test
sub
test
push
lods
adc
jnp
jno
out
shr
jle
dec
mov
into
mov
in
adc
push
mov
bound
fcompl
ss
sbb
mov
outsl
adc
mov
pop
leave
movsl
sahf
jecxz
stc
into
adc
int3
test
bound
fwait
inc
push
and
dec
sub
and
pop
mov
cwtl
icebp
mov
mov
jno
out
in
aad
add
pop
push
jb
movsl
sarb
mov
adc
in
adc
inc
and
add
sbb
mov
pop
pop
mov
addl
pop
mov
lret
xor
mov
leave
lods
inc
fiaddl
rorb
fadds
add
xlat
sub
test
icebp
push
xor
sti
out
jns
pop
push
dec
and
inc
mov
adc
sbb
ds
fwait
and
add
aaa
adc
push
lahf
sbb
jae
daa
lahf
jge
and
push
and
inc
push
daa
cmp
in
ja
scas
lret
xor
lahf
sub
aam
sarl
hlt
push
mov
inc
xchg
jge
subb
iret
mov
adc
inc
rcll
imul
adc
cld
lods
es
repz
dec
movsb
insl
ficoml
lahf
adc
inc
mov
inc
adc
push
orb
sbb
call
sbb
shl
adc
imulb
jle
sub
cmp
xor
fdivrl
test
mov
or
cmp
std
mov
sarl
push
scas
inc
mov
push
xchg
inc
jle
adc
inc
xor
or
out
add
push
jle
or
push
int
push
fwait
or
mov
xlat
mov
or
sub
decl
cs
fisubrs
mov
scas
and
movhps
std
cmp
orl
mov
pop
push
mov
jne
loope
scas
decl
xor
cmpsl
lea
fwait
subl
dec
inc
mov
rorl
fdivrl
into
dec
mov
addr16
cld
jmp
push
adc
int
sbb
xor
xchg
push
out
cli
sbb
insb
cmc
xchg
jecxz
pop
adc
dec
sti
in
pop
jno
or
cmp
fnstenv
movsl
aam
mov
mov
fstps
mov
sub
add
mov
add
pop
out
dec
test
mov
sbb
xchg
in
pop
pop
sbb
enter
outsl
mov
mov
jae
loope
lods
fbld
frstor
sbb
add
movsb
cmp
testb
sbb
pushf
pxor
push
and
jbe
and
mov
test
popf
ja
jno
das
pop
call
ds
test
sub
xchg
xchg
inc
mov
rorl
mov
mov
data16
or
loopne
and
mov
nop
movsl
enter
hlt
pop
sbb
dec
cmp
adc
and
mov
and
iret
mov
fimull
sahf
cs
inc
push
insl
pop
icebp
shll
lret
ja
push
cs
mov
out
aas
ficomps
mov
push
mov
in
into
push
orl
xor
sarb
movsl
inc
pop
cmp
outsb
push
and
mov
mov
pop
repnz
jmp
or
cmp
push
fadd
insb
pop
in
leave
loopne
ss
cmp
call
dec
or
aam
pmullw
mov
adc
mov
ljmp
push
jmp
xchg
std
add
and
or
mov
jae
mov
xchg
rorb
pop
out
push
mov
dec
jae
scas
dec
xchg
xor
pop
mov
sub
xchg
xchg
cmp
pop
rcr
movsb
jb
mov
mov
mov
or
sbb
push
jle
xor
adc
xchg
fistpll
cli
jge
in
adc
in
ja
add
push
sti
mov
orb
outsl
ss
fldl
popa
mov
pop
popf
insb
adc
mull
sbb
test
int3
clc
imul
mov
jbe
mov
dec
hlt
cmp
xchg
iret
pushf
push
xchg
dec
xor
movsb
lret
daa
mov
mov
je
stos
push
in
xchg
std
jb
xor
or
stos
lods
ja
jle
orl
jb
add
pop
jns
pop
loopne
sub
dec
in
mov
shll
cli
icebp
xchg
test
sbbb
cwtl
xor
dec
add
bound
imul
mov
or
xchg
add
sub
jecxz
out
ja
clc
out
pop
lods
cmc
cmp
pop
cmp
loope
pop
popf
adc
repz
dec
jle
jne
fidivs
mov
hlt
fnsetpm(287
sti
push
adc
out
fldcw
loopne
dec
faddl
mov
jl
pop
iret
repz
push
cmp
push
stos
das
mov
cltd
jl
jo
fdivs
je
daa
stos
xor
mov
aas
add
xchg
jno
xchg
std
dec
popf
cli
mov
mov
jecxz
test
xchg
jge
add
mov
scas
and
rcrb
das
mull
and
adc
aaa
aam
icebp
jne
repz
add
dec
in
enter
dec
movsl
xchg
adc
test
mov
pop
inc
ja
loope,pn
lds
inc
sub
data16
or
mov
inc
mov
sbbb
push
in
jae
jmp
jg
imul
jg
xchg
cmp
or
pop
sub
std
mov
loop
jecxz
cmc
mov
mov
adc
rcr
insb
add
sahf
mov
leave
push
cwtl
mov
inc
push
lea
add
inc
cmp
jae
and
push
pop
inc
sbb
pop
scas
xchg
jle
lret
arpl
jg
pop
push
fwait
lods
mov
mov
dec
jnp
lods
dec
sbb
jmp
movsl
pushf
adc
addr16
sbb
jmp
mov
into
ljmp
push
sub
shl
xor
push
lar
cmp
jne
mov
enter
and
cli
jl
xchg
mov
fldt
mov
gs
mov
scas
cmpsl
into
ds
jnp
adc
adc
xchg
testl
jo
push
pop
sti
cmp
mov
stc
wrmsr
xor
jns
or
shll
mov
push
enter
sbb
xchg
fstl
or
ret
sbb
nop
inc
mov
jo
leave
mov
xchg
pop
leave
cmp
lods
push
adc
sbb
in
or
hlt
or
mov
loop
push
adc
mov
pop
cmp
outsb
pop
dec
repz
cmp
and
mov
mov
loop
bound
push
jmp
cmp
sbb
sahf
jns
in
mov
aam
inc
outsb
les
cmp
mov
aaa
jmp
lcall
int3
sub
mov
pop
je
test
and
cmp
loope
movsl
idiv
jbe
adc
cmpsb
mov
mov
jmp
js
mull
and
sub
xchg
loope
mov
jnp
fisubrs
sub
sbb
sub
outsb
push
imul
xchg
mov
cld
cmp
jns
add
mov
or
arpl
add
aas
out
add
sbb
jnp
ljmp
adc
sub
shll
cwtl
scas
scas
xorl
pusha
xor
add
insb
add
inc
cs
mov
lcall
push
mov
sahf
aas
xor
into
push
push
or
push
lahf
rcll
xchg
es
ret
arpl
jmp
cltd
rcr
ficoml
push
pop
adc
scas
outsl
pushf
sbb
rcrb
faddl
adc
push
sbb
jmp
mov
cltd
xlat
test
jl
daa
loope
dec
fstl
jae
mov
ljmp
mov
fs
in
andl
sbb
jp
xor
popl
sbbl
arpl
in
xchg
lahf
cmp
push
clc
ret
mov
sub
pusha
lds
jb
fistpll
out
mov
fisubl
out
pop
ss
aad
ret
nop
fcmovne
out
outsl
jmp
xchg
mov
xchg
fsubrs
testb
xchg
xor
push
pushf
lret
jb
aam
mov
pop
push
bound
test
out
mov
inc
inc
adc
insb
mov
xor
add
pop
pop
cmpsl
lcall
pop
mov
mov
popf
dec
lds
adc
sub
xorl
call
lock
lret
mov
fcmovu
adc
mov
fwait
xor
jl
sahf
cmpsl
lcall
xor
stos
mov
pop
je
lock
popf
aam
mull
dec
and
and
xchg
xchg
sarb
sti
outsb
pop
je
xchg
or
xor
mov
mov
mov
cmp
cmpsl
mov
adc
iret
ret
xor
fadds
call
push
or
add
sub
imul
addr16
inc
sbb
ror
sbb
leave
sub
imul
jg
add
inc
or
das
faddl
lahf
pushf
push
pop
ljmp
push
movb
lods
out
lock
mov
loopne
int
pop
ljmp
cmp
stos
outsb
xchg
push
in
adc
pop
add
arpl
add
leave
aad
xchg
sbb
push
test
into
inc
cmp
jnp
into
add
not
test
lea
enter
jl
jb
mov
dec
and
push
pop
das
shll
outsl
mov
sub
xor
xlat
lock
insb
sub
jb
xchg
sbb
cld
rorb
pop
push
add
rorl
addr16
out
dec
push
test
sbb
xlat
cmp
outsb
pop
jne
das
bound
je
add
lret
adc
mov
cmpsb
pop
popa
jmp
push
and
loopne
aam
js
icebp
testl
leave
notl
pop
or
sbb
jg
lahf
pop
and
jbe
sarl
into
aad
icebp
data16
and
pop
mov
test
add
mov
sahf
mov
lods
sbb
jp
imul
movsl
outsb
push
cmp
cmpsb
mov
cltd
sbb
push
sti
mov
cmp
movsl
inc
dec
mov
mov
bound
in
sub
aaa
testb
mov
jne
gs
je
or
cmp
xchg
pop
pop
mov
adc
dec
dec
rolb
shl
mov
cmp
leave
ljmp
pop
hlt
mov
jb
add
jp
pop
dec
and
int3
mov
outsl
fldenv
xor
das
lock
add
ds
popa
xlat
pop
add
test
in
mov
fsubl
cmp
jae
mov
and
jne
test
dec
sub
pop
mov
cmp
jnp
sahf
lahf
leave
push
lock
mov
adc
mov
jne
add
pushf
cmp
fstps
call
inc
cli
loope
stc
jge
or
outsl
adc
cld
mov
ja
mov
or
sub
in
test
push
lret
jge
add
and
daa
stc
in
and
add
mov
mov
leave
sbb
jbe
lock
cmpsb
outsl
sub
aam
loopne
xchg
xchg
std
pop
push
out
mov
pop
adcb
mov
imul
rorb
dec
dec
mov
push
xchg
mov
xor
loop
ljmp
jno
adc
inc
sarb
xchg
lcall
popa
add
rcl
sbb
sub
pushl
decb
adc
add
mov
loope
add
out
into
cltd
shrb
addr16
imul
js
popfw
jle
inc
adc
sbb
adc
aas
and
mov
xor
cmp
or
xchg
ljmp
jae
call
gs
insl
inc
sar
sub
jmp
lock
test
dec
out
mov
jp
mov
mov
cwtl
mov
fisubrs
in
lret
inc
imul
jp
sub
mov
sarl
cmp
sbb
sbb
or
inc
jg
rol
inc
shll
stos
jg
mov
aaa
mov
pop
cmp
xchg
lcall
in
cld
lcall
repz
test
notb
lahf
inc
lds
dec
cli
pop
aam
cmp
out
repz
cmp
aad
push
sti
ljmp
out
adc
jge
pop
cmpsb
data16
adc
in
xor
pop
push
inc
pop
cmpsl
fsubrs
icebp
cmpsb
repnz
aad
and
out
or
sbb
cmp
and
xchg
pop
cmpsb
adc
cmp
es
mov
cmpsb
pop
adcl
in
dec
loopne
fwait
or
fnstenv
aaa
pop
or
adc
lock
sbb
jp
jns
addr16
iret
test
inc
fnstenv
imul
cwtl
cmp
cmp
out
jecxz
sbb
inc
fsts
rclb
das
add
vmovaps
and
stos
mov
out
out
jb
out
pop
js
jae
xlat
negl
divps
mov
inc
mov
pop
sub
dec
mov
dec
test
mov
xchg
sub
mov
jmp
pop
jbe
pmaddwd
sub
enter
rolb
and
xchg
jb
shll
and
jmp
mov
mov
cs
dec
mov
popf
test
imul
out
popa
imul
add
in
dec
cmp
popa
mov
repz
sahf
xor
mov
and
int
pop
shrl
shr
inc
sbb
jb
add
dec
lds
sub
lods
push
pop
sub
jmp
add
xor
cmp
add
xchg
cld
incb
lods
mov
add
stc
adc
sub
push
adc
mov
jne
ljmp
popa
lcall
mov
or
imulb
mov
inc
jle
call
lods
in
and
jnp
or
cld
lods
cmp
and
pop
jne
pop
xchg
lcall
mov
fdivr
xor
add
inc
lret
sbb
cmp
or
leave
dec
cmpsl
repnz
sahf
outsl
adc
push
jmp
andb
xor
mov
sub
lock
or
dec
aam
xchg
sub
int3
inc
es
das
cmp
iret
sbb
mov
pop
orl
inc
pop
negb
jno
push
in
and
lret
sbb
test
test
inc
pop
repz
mov
daa
in
or
sbb
add
mov
jb
sbb
leave
mov
lahf
jmp
out
push
clc
inc
rorb
sub
pushf
adc
addl
test
and
clc
repz
and
loop
pop
mov
sub
std
test
and
scas
mov
sbb
sbb
les
popa
push
pop
jae
shr
outsb
mov
in
loop
pop
fcmovnb
cmpsl
es
cwtl
mov
inc
lods
pop
gs
pcmpeqw
adc
daa
pop
add
ret
mov
mov
aad
and
push
fistpll
test
aas
dec
or
push
std
cmpsl
repnz
xor
sub
popf
push
sbb
sub
jle
or
icebp
dec
repnz
in
js
leave
imul
xchg
rcll
sahf
sub
dec
loope
cld
pop
addb
test
lock
bound
js
mov
arpl
pop
and
in
jne
sub
jb
jle
push
sbbb
enter
inc
out
mov
xchg
push
pop
inc
icebp
sub
sub
dec
xor
arpl
bound
sarb
cmp
dec
sbb
cmovbe
out
repz
add
ljmp
xlat
dec
test
in
cmpsl
test
std
out
jle
std
movsl
sub
mov
pop
sbb
xchg
gs
shl
sub
jo
shll
sub
sbb
ja
inc
repz
scas
cmp
fsubs
popf
sbb
icebp
push
mov
and
repnz
lret
out
push
pavgb
mov
add
bound
push
mov
mov
xchg
outsl
andl
in
dec
loope
andl
adc
and
popf
xor
add
dec
lea
addl
int3
jp
insb
mov
cmp
clc
gs
mov
aad
or
mov
rcl
int3
or
mov
jmp
insl
lods
xor
pop
cmp
movsb
dec
clc
push
xor
rorl
in
mov
push
pusha
push
jg
aad
insb
cmpsb
add
cmpsb
lret
inc
ja
and
adc
aad
dec
scas
cmc
xchg
mov
and
inc
inc
cmp
mov
outsl
dec
and
outsb
iret
xor
mov
dec
xor
rorl
mov
xor
lret
and
mov
les
out
jae
jle
push
insb
pushf
xlat
jae
xchg
dec
push
or
xchg
push
jno
push
inc
mov
add
sti
mov
adc
mov
sarl
call
jno
jns
movsb
into
ss
loop
out
cs
cli
push
stc
push
sbb
in
mov
mov
sahf
adc
mov
movsb
roll
jo
sbb
mov
pop
mov
jmp
mov
test
rcl
pop
fistl
dec
negl
push
and
mov
lods
repnz
lds
test
add
sbbl
push
and
fsubs
mov
aad
nop
pop
pusha
mov
lret
mov
inc
sub
stos
jae
mov
jbe
fucom
sahf
jno
es
sbb
iret
fbstp
sahf
int3
hlt
jmp
dec
sbb
pop
subl
add
or
ss
stos
jl
out
jnp
pop
out
fidivs
cmpl
pusha
ror
mov
aam
das
loop
test
adc
push
xchg
data16
mov
inc
ret
rcl
sbb
stc
imul
cmp
pushf
dec
mov
test
adc
or
js
fsubs
pop
into
mov
mov
jg
clc
fbstp
in
push
fxch
jmp
out
fistl
adc
xchg
and
mov
call
ret
fbstp
ret
jmp
lock
xor
int3
inc
icebp
jnp
scas
ja
inc
jb
fmul
or
sbb
lods
js
xchg
push
aaa
pop
fldl
divl
scas
sbb
lods
shl
xor
xchg
ljmp
push
inc
sub
ret
lahf
enter
clc
xor
inc
cmpl
scas
and
add
jmp
insb
pop
adc
xchg
lea
sub
cmp
sbb
xchg
inc
int3
adc
xchg
hlt
push
cmp
leave
dec
leave
out
out
mov
outsb
and
xor
popa
mov
jne
jo
jbe
shlb
loope
hlt
xchg
pusha
jo
xchg
and
xor
sbb
xor
lret
mov
popf
xor
sub
xchg
or
test
and
add
or
mov
or
jbe
sti
jge
in
and
or
test
int
sbb
ss
sub
dec
mov
lahf
outsl
ljmp
std
cmp
and
mov
stos
cs
push
in
out
rclb
mov
and
xor
in
dec
loope
adc
je
in
aam
shll
mov
mov
call
lods
cmp
lea
mov
fidivl
ss
push
out
mov
add
es
mov
nop
xor
int
xchg
cmp
xchg
fsubr
mov
xchg
and
mov
gs
pop
rol
mov
sub
cwtl
pusha
and
out
push
nop
adc
xor
aad
xchg
push
xchg
push
fstps
jnp
imul
pop
clc
aaa
inc
mov
std
xor
rcrl
add
mov
jmp
fsts
js
scas
mov
les
inc
push
jns
in
sub
inc
add
pop
or
addr16
mov
and
add
enter
or
add
call
mov
stos
cs
xor
nop
mov
sti
xchg
xor
sub
fnop
lcall
push
xor
lret
idiv
jo
sub
andl
jmp
jmp
adc
in
rcll
insb
add
cltd
out
mov
fnstsw
xchg
adc
dec
jl
cmpsb
push
dec
xor
jl
adc
rolb
jnp
repnz
jo
iret
stc
cmp
mov
lods
mull
cmp
imul
hlt
adc
or
das
or
mov
bound
xchg
out
int
inc
cmp
pop
stc
lds
and
arpl
fwait
into
es
dec
and
int3
xor
or
pop
in
ror
mov
mov
loopne
mov
shr
adc
roll
mov
cmp
rcrb
iret
pop
mov
pop
adc
xchg
addr16
movsb
insb
nop
es
inc
add
push
inc
mov
jo
sti
pushf
pop
mov
jmp
scas
xchg
and
and
lahf
insb
std
push
mov
push
push
aaa
sub
pop
js
rorb
mov
shlb
jp
or
ret
out
sub
jbe
mov
inc
js
cmp
jne
jmp
mov
dec
mov
and
aam
dec
js
or
pop
mov
mov
sbb
adc
or
scas
push
or
out
or
sbbl
push
cmp
dec
add
data16
mov
xchg
xor
inc
bound
xchg
lret
lcall
or
in
icebp
dec
shl
push
and
xchg
ret
ss
mov
sbb
pop
das
jb
and
imul
call
inc
xor
outsl
mov
popa
clc
push
sbb
and
and
or
lret
movsb
fdivl
dec
jae
mov
int3
repnz
fcoml
ds
xchg
xchg
stos
out
sbb
sbb
dec
inc
mov
dec
lahf
int3
jp
aad
pop
or
dec
in
cltd
dec
out
out
cmp
cmc
test
and
aas
outsl
or
push
hlt
push
mov
fcmovnb
xchg
inc
fsubrp
mov
outsb
int3
cltd
movsl
pop
js
stos
dec
cld
jo
push
bound
shll
mov
sahf
jae
push
mov
shlb
int
sub
push
imul
aaa
push
cmp
fldl
xchg
pop
fwait
xchg
xchg
mov
pop
sbb
xchg
mov
mov
sub
mov
and
pop
stos
sbb
incb
jp
insb
dec
rep
cmp
pop
test
cmpsb
and
xor
xor
bound
cld
mov
inc
mov
imul
hlt
push
xchg
sahf
mov
mov
outsl
xlat
add
mov
mov
pop
repz
cmp
pusha
xor
sti
lcall
mov
cmpl
add
push
jb
loopne
lahf
mov
xor
pop
mov
adc
cmpsb
out
mov
loop
push
push
cmp
push
cltd
or
mov
movsb
xchg
test
jmp
and
xchg
aam
xorb
sbb
adc
mov
mov
inc
add
mov
in
sbb
lea
jecxz
mov
sub
jbe
sbb
loope
sbb
pop
repz
xor
cmc
push
mov
and
mulb
fidivrl
xchg
stos
testl
cmp
cmp
pop
mov
jae
mov
mov
mov
imul
or
shlb
mov
jle
xchg
addr16
push
mov
icebp
gs
imul
repz
and
inc
ss
dec
xlat
nop
xor
stc
add
test
sbb
imul
cmp
mov
adc
xor
mov
mov
xor
inc
inc
loopne
in
adc
ficoms
leave
push
xchg
es
jmp
lcall
inc
orb
or
int
data16
dec
push
int3
mov
popf
xor
sti
ret
cltd
xchg
push
xchg
popa
cld
pop
mov
loopne
dec
pop
jnp
add
jns
and
cwtl
int3
or
popf
xchg
mulb
orb
jo
icebp
shlb
sub
cs
std
mov
jp
pop
push
inc
je
in
inc
les
test
and
loop
sub
cwtl
loope
mov
add
cmp
ljmp
popf
sub
jmp
scas
aad
fistl
inc
ds
test
popf
add
mov
adcl
out
ret
int3
mov
pop
data16
mov
sbb
fstpl
mov
adc
xchg
cmp
ret
dec
fdiv
push
leave
and
sub
pop
mov
mov
lahf
pusha
push
mov
mov
dec
int
cmp
enter
push
cmpsb
sub
add
adc
les
lahf
aas
rcr
bound
push
xchg
and
push
mov
dec
adc
push
lahf
out
adc
mov
jecxz
fisubl
fildll
rcrb
cltd
sub
shll
int3
inc
popa
fs
mov
add
push
xor
stos
js
scas
in
xor
inc
in
std
pop
dec
cmp
jge
add
add
cs
pop
popa
les
xchg
or
mov
into
not
iret
fs
stos
sbb
jl
cmp
push
xor
lret
das
xchg
fldcw
outsb
lods
ret
xchg
jp
std
or
aam
test
adc
inc
xor
adc
xor
xchg
inc
lret
inc
push
in
pop
pop
iret
sti
sub
inc
cmp
mov
mov
lret
dec
sub
mov
push
adc
ljmpw
imull
mov
and
test
lods
aam
inc
in
lret
clc
jge
bound
fstl
pushf
or
pop
jae
divb
cltd
loope
pop
in
outsl
ret
or
xor
data16
ror
lcall
push
or
adc
das
jge
mov
shlb
scas
int
int
int
fidivs
sti
stc
loop
add
sub
xchg
insl
cmp
sub
jae
push
dec
lret
dec
or
add
div
adc
and
push
mov
shlb
mov
int3
dec
cmp
pusha
repz
mov
out
enter
pushf
repnz
pop
addl
push
je
outsl
clc
cmpsl
outsb
fneni(8087
lcall
dec
aad
rcl
popa
adc
jl
sub
pop
mov
mov
or
push
mov
mov
jp
cld
pop
push
xchg
lods
inc
cmp
lahf
adc
push
inc
dec
xchg
xchg
imul
dec
inc
mov
jg
and
jle
and
into
test
aad
dec
rcll
lret
outsl
pop
xor
sub
push
shrl
sbb
pop
add
mov
mov
or
xchg
imul
loop
pop
or
adcl
shlb
outsb
xchg
into
and
pop
inc
pop
dec
test
xlat
rcll
insb
xor
pop
or
or
sarb
cmc
mov
dec
ret
push
add
mov
sbb
imul
jl
lcall
mov
pop
ss
nop
push
mov
or
negl
push
rcll
mov
fs
jo
std
dec
inc
mov
shr
or
in
lods
push
cmp
xchg
adc
cs
sub
aam
dec
loop
push
inc
inc
pop
mov
mov
sbb
sti
pop
in
add
andb
outsl
lcall
lea
pop
cmp
pushf
inc
pop
cmp
fdivrl
nop
test
pop
hlt
mov
int
mov
lret
cld
or
xchg
sub
sahf
add
or
jl
lea
push
mov
pop
scas
inc
xchg
or
subb
jge
mov
mov
push
or
mov
jg
nop
mov
call
push
mov
test
adc
shrb
sbb
in
adcl
stc
fwait
mov
xchg
pop
bound
int3
lds
fcomi
push
ret
xor
xor
dec
pop
add
jo
das
andb
outsl
fbstp
sti
mov
mov
fwait
outsb
mov
pop
leave
in
cmp
cltd
xchg
sahf
dec
and
cs
cli
adc
out
dec
loope
dec
jbe
int
in
test
sub
pop
jo
lcall
cwtl
jmp
push
jo
lea
lock
int3
mov
inc
divl
push
mov
xorl
cld
xor
fldt
or
inc
dec
add
pop
es
adc
jl
aad
out
popa
insb
cmpsl
mov
add
inc
int3
xchg
cmc
xor
mov
gs
mov
jg
mov
arpl
clc
sbb
or
cli
pop
jecxz
icebp
cmpsl
aaa
mov
jg
inc
andl
shrl
sti
movsb
add
mov
push
out
je
sbb
pop
push
and
movsl
fiaddl
pop
jl
xchg
add
xlat
aam
push
push
scas
ret
push
out
aam
into
adc
arpl
ficoml
mov
loop
jnp
adc
mov
sbb
es
ja
pop
mov
je
cmp
int3
jl
dec
cltd
hlt
and
shrb
scas
arpl
movsl
pop
dec
xchg
out
sub
jae
dec
lahf
in
daa
daa
fidivl
ljmp
test
pop
ret
inc
pushf
inc
ds
ficompl
push
push
call
xchg
and
jae
push
loope
push
in
pop
in
adc
xor
fimuls
mulb
cmpsb
lret
add
gs
inc
pop
xchg
jbe
ljmp
hlt
icebp
mov
rep
inc
pushf
clc
mov
mov
fnstenv
jmp
sub
popf
in
movsb
movsl
sbb
xchg
sub
dec
mov
lods
aad
insb
lfs
cmp
fs
xchg
inc
inc
das
ret
lcall
out
dec
stc
pop
dec
push
add
add
add
sub
bound
dec
jno
mov
inc
hlt
mov
inc
push
aaa
add
ds
xor
push
insb
adc
orb
cmp
and
and
mull
dec
or
sarl
and
push
scas
mov
test
add
outsb
sub
cmp
inc
sbb
lds
outsb
pop
pop
push
jns
xor
ficompl
test
xchg
add
inc
stc
mov
xchg
sahf
addb
push
push
test
sbb
out
dec
inc
or
int3
leave
cltd
jle
in
ret
adcb
stos
fists
dec
mov
mull
int
aaa
imul
movsl
adc
fdivs
sub
js
jecxz
xchg
mov
sbbb
insl
or
inc
jno
jmp
push
xor
inc
popa
jecxz
dec
int3
mov
mov
xchg
and
mov
out
adc
push
mov
orl
mov
add
cld
push
add
int
xchg
fsubr
mov
mov
xor
call
sub
rolb
sub
cmpsl
shrl
dec
push
jp
aam
cmc
in
jmp
push
shlb
xor
rorl
xchg
lret
sbb
xchg
sbb
mov
es
bound
aam
movsb
mov
sbb
sbb
xor
sbb
inc
mov
ja
xchg
adc
inc
pop
shll
jno
cld
in
cmp
stos
in
repnz
nop
sub
mul
mov
in
fsubrp
pop
decl
lods
mov
rcll
add
cmpsl
stc
mov
cmp
dec
and
mov
icebp
mov
daa
mov
popf
insl
inc
sub
xchg
cli
out
mov
sub
ret
ss
adc
lret
out
pop
cmp
lret
sbb
incb
sti
push
pop
sbb
mov
loop
pop
or
clc
test
xchg
sub
inc
pusha
adc
bound
das
mov
xchg
outsb
aam
push
scas
mov
mov
inc
inc
pop
mov
out
pop
pop
adc
insl
mov
in
int
pop
push
push
out
imul
out
cmc
pop
lret
xchg
xchg
mov
ja
in
out
loop
inc
or
mov
int3
es
movl
jp
jg
stc
enter
dec
add
loop
data16
or
out
cltd
js
push
cmp
dec
adc
mov
lods
jae
int3
jg
ljmp
out
pop
or
mov
jae
aaa
test
jo
cmp
das
jae
inc
cld
xchg
lea
pop
data16
dec
fcom
sbbb
in
cmpb
pop
inc
popa
push
sti
cmpsl
insb
adc
clc
jle
push
cmpsb
out
cmpsl
call
sbb
inc
mov
pop
mov
ret
mov
mov
add
add
and
sub
xchg
or
jb
fisttpll
movsb
movzbl
dec
mov
js
fptan
aam
in
add
jnp
sub
xor
outsb
loopne
and
cmp
push
xor
push
dec
addr16
mov
in
cmc
xchg
hlt
mov
ss
pop
jmp
sbb
push
add
jle
stos
dec
mov
cwtl
mov
jb
sbb
test
out
mov
mov
push
pop
sub
in
sbb
xchg
mov
add
movsb
mov
lods
dec
addl
cmp
shll
aad
fisttps
aas
or
mov
or
aas
mov
sbb
or
xorl
and
adc
cld
mov
fcmovbe
scas
inc
out
fidivrl
pop
inc
out
das
iret
arpl
rolb
jp
xlat
mov
andl
sub
cli
push
imul
fstps
fbld
fs
sbb
or
xchg
sub
mov
inc
ret
out
fisttps
out
dec
mov
inc
pop
pop
jae
addr16
and
fstl
sbb
pop
jne
mov
out
mov
sbb
ffreep
fcompl
insl
in
std
dec
pop
add
xchg
or
dec
scas
and
or
movsb
dec
dec
mov
or
add
mov
inc
cmp
es
xchg
or
gs
cltd
fisttpll
push
xor
aas
push
xor
pop
movsl
aas
sub
xchg
loopne
aad
jno
sub
sub
jb
icebp
sub
test
cwtl
push
adc
xor
test
fdivrl
dec
or
lods
fsts
popaw
and
out
push
dec
fidivrs
xor
adc
outsb
cmp
int3
cmp
adc
inc
adc
sbb
enter
daa
movsb
pop
mov
in
mov
sbb
stc
jle
lods
testl
and
xchg
dec
xchg
movsb
jae
jp
push
loopne
or
fisttpll
scas
pop
test
jns
pop
cmp
inc
sub
mov
xorl
xor
mov
pop
sbb
ror
pushf
hlt
repz
xlat
add
nop
push
inc
jne
mov
loopne
shll
sub
mov
pusha
sbb
loopne
jne
ret
jns
or
xchg
add
jp
sbb
or
jmp
add
mov
xchg
cli
into
pop
cmp
add
outsb
xor
and
pop
and
in
mov
push
insb
fstpt
pop
int
push
shlb
push
movsl
push
stc
xchg
rolb
fdivrs
fimuls
fstl
std
mov
jg
out
mov
cmpsl
je
ret
testb
dec
je
hlt
inc
sbb
test
leave
pop
movsb
imul
mov
mov
lret
sarb
cmc
pop
hlt
pop
inc
jae
xchg
jg
ret
mov
ret
pop
icebp
xchg
lds
sbb
sub
mov
sbb
testl
rcll
push
movsb
push
dec
lds
test
sub
mov
cmc
sub
lock
mov
lahf
stos
dec
clc
inc
cld
pop
clc
or
or
cmp
test
popa
dec
or
or
in
mov
fcoml
gs
mov
mov
mov
in
sti
loop
pop
imul
mov
mov
xchg
dec
and
jecxz
pop
fwait
mov
push
loop
mov
rclb
adc
fwait
lcall
icebp
and
mov
push
jbe
cmpsl
call
sbb
cs
jo
int3
push
push
mov
xor
xor
cmpsl
cli
xor
repnz
in
mov
adc
push
add
outsl
add
xchg
div
jmp
js
sbb
cltd
shl
or
jae
sbbl
sbb
xor
cmp
lcall
int3
push
ljmp
inc
push
mov
pop
mov
loopne
arpl
dec
inc
ret
jbe
cmpsb
call
mov
in
hlt
int3
scas
cltd
hlt
daa
mov
mov
add
xchg
movsl
aad
add
mov
jb
push
mov
adc
sbb
dec
inc
pusha
cmp
mov
js
and
jae
mov
mov
jne
inc
sahf
dec
aas
cs
or
gs
dec
int
frstor
and
and
sub
in
sub
and
mov
mov
loopne
xchg
push
fistl
leave
mov
pop
xchg
dec
jmp
and
sti
fdivp
pop
lods
loopne
out
std
inc
mov
adc
mov
sub
add
cmpsl
mov
push
out
xchg
in
incl
mov
aam
xchg
mov
pop
push
cmp
and
js
popa
popa
aaa
ljmp
mov
jbe
jp
cmc
shll
cmpsl
and
fsub
imul
push
sbb
add
inc
aas
fadds
xor
loopne
sbb
and
test
data16
ljmp
scas
out
cmp
xchg
adc
or
shrb
and
push
lods
or
xor
rcrl
loopne
jae
mov
movsb
es
pop
inc
xchg
or
out
lcall
push
xchg
pop
psrlq
mov
inc
sub
sub
push
mov
sbb
xor
jl
addr16
cmp
jle
push
rclb
js
inc
iret
cmpsl
mov
pop
out
jb
add
jne
pop
dec
sarb
shlb
aam
daa
mov
fidivl
rolb
mov
bound
cli
mov
push
dec
insb
out
push
sbb
push
cmp
es
cmc
xor
cmp
cmpsb
movsl
hlt
test
movsb
jmp
fsubrl
or
jp
mov
fs
loop
movsb
sub
repz
stos
push
push
adc
sub
and
push
mov
mov
sahf
movsb
stos
sbb
test
jno
fsubrs
addr16
dec
or
dec
push
and
shlb
mov
pushf
js
lcall
mov
xchg
cmpsb
dec
leave
jecxz
fdiv
add
jae
leave
ret
aad
fs
add
or
in
pop
aaa
cmp
mov
lock
loop
fsubrl
sbb
sbb
sbb
jno
lods
addr16
push
andb
cmpsb
mov
sbb
xchg
dec
push
enter
inc
or
ljmp
add
xchg
lods
cmp
mov
xchg
push
cmpsl
pop
pop
cmp
xchg
add
cmp
jp
lahf
daa
jmp
loope
or
xchg
cmp
out
mov
xlat
xchg
das
mov
inc
popf
mov
adc
mov
mov
sbb
call
mov
mov
push
es
and
ret
int3
or
jns
sti
mov
icebp
cmp
dec
xchg
jae
popf
imul
adc
push
and
fcomps
out
pop
frstor
in
or
fcmove
shll
fmull
adc
pop
out
int3
lcall
loopne
mov
cltd
ljmp
les
dec
ret
outsb
scas
cli
xchg
mov
inc
lcall
ljmp
adc
push
test
sub
aam
mov
ret
mov
mov
xor
mov
dec
jbe
cwtl
sbb
pop
ret
mov
pop
pop
je
push
or
out
iret
pusha
mov
dec
push
adc
in
cmp
mov
je
xchg
pop
jl
ret
out
pusha
inc
adc
push
insb
xor
mov
adc
cmp
and
add
xchg
cld
movsb
jns
mov
js
cmp
fdivrp
int3
mov
cmp
popf
daa
jns
jge,pt
popa
scas
mov
push
mov
loop
loope
mov
jbe
inc
ret
sbb
push
dec
cltd
and
outsl
movzwl
lock
xor
pop
lds
in
cmp
inc
xor
fstl
and
outsl
icebp
cmp
cmpsb
xor
mov
pop
fcomp
pop
fcoms
mov
orb
repz
cmpsb
xchg
cmp
dec
nop
adc
mov
xor
mov
ljmp
cmp
cld
and
es
testl
into
pushf
mov
jns
mov
cmp
adc
out
xchg
adc
push
pop
mov
aas
outsl
pop
jmp
cmp
arpl
pop
not
fmuls
jbe
ss
cli
mov
jmp
rcl
sbb
mov
xchg
sbb
mov
mov
xchg
or
push
sub
in
or
pop
dec
lcall
mov
fstl
in
leave
pop
mov
rcr
cmp
adc
xor
mov
mov
fistpll
push
push
cmp
jmp
popf
cmp
pusha
ds
or
or
lahf
nop
test
mov
xor
mov
jb
push
fiadds
xor
jmp
dec
cmp
gs
dec
scas
cltd
xchg
fidivrl
nopl
and
aad
fsubl
bnd
xchg
xor
lods
pop
or
xor
call
out
inc
leave
gs
mov
rcll
mov
xchg
loopne
sahf
lods
push
jmp
data16
sbb
adc
imul
pop
movntq
popa
push
shlb
or
add
stos
fwait
iret
lock
inc
pop
pop
dec
mov
rcrl
mov
lret
stc
push
out
loopne
dec
arpl
lahf
cmpsb
push
or
decb
mov
out
rcll
sbb
adc
push
lods
or
test
mov
mov
test
repnz
or
int
outsb
popa
push
adc
xchg
out
cmpsb
testl
xlat
mov
aad
out
sbb
push
arpl
or
jecxz
arpl
or
sbb
xor
mov
std
and
in
cmc
loop
icebp
clc
sub
xor
jle
mov
add
arpl
aad
icebp
xchg
push
shl
mov
sar
jle
fisubs
movsl
push
sub
and
popa
push
dec
outsb
xchg
shl
daa
imul
into
addl
jecxz
movb
and
pop
adc
loopne
shll
and
or
pop
jmp
adc
es
pop
ja
in
sub
idivl
sub
xchg
mov
jb
xor
adc
inc
cld
pop
loop
adc
pop
in
sub
es
adc
and
mov
or
mov
add
pop
xor
add
shll
das
sub
and
into
sbb
pop
xlat
mov
out
ret
jmp
push
xor
or
ja
mov
imul
fdivl
xor
xchg
or
push
fisubl
arpl
cmc
ljmp
enter
loopne
mov
lods
mov
cmpsb
xchg
xchg
add
push
sub
xor
sub
subl
or
pop
push
push
lahf
ja
mov
call
lock
pop
aaa
sub
sub
xchg
jmp
add
repnz
cmp
xor
into
mov
leave
arpl
test
or
imul
pop
or
or
nop
mov
pop
cltd
out
inc
lea
cmpb
pop
addr16
jnp
dec
out
pop
push
dec
push
sub
pop
cwtl
scas
shl
cld
adc
cmp
fsubp
lahf
add
sahf
cmp
mov
inc
lret
lock
and
pop
mov
int
aam
stos
ss
inc
sti
mov
stc
out
push
jae
sbb
mov
leave
repnz
imul
test
inc
mov
jle
ret
adc
dec
pop
mov
lahf
jge
mov
and
shrl
push
inc
pop
dec
lock
cmp
cmp
lcall
fisubrl
cli
dec
add
push
pop
xchg
out
std
orb
lret
hlt
sub
inc
adc
rcr
adc
ds
adc
push
iret
movsl
insb
notl
or
xor
inc
psrlq
out
cmp
inc
or
fimull
fists
mov
or
loope
adc
fidivs
das
imul
sbb
int
clc
adc
loope
jecxz
mov
dec
dec
scas
mov
pop
mov
ss
dec
cmp
and
xor
fsubrl
jecxz
xor
pop
aam
inc
pop
je
xchg
jae
idivl
pop
fldt
and
pushf
mov
orb
lods
iret
scas
rcll
dec
pop
xorb
lcall
inc
sub
lods
push
or
mov
mov
iret
jnp
xor
cmc
pop
in
outsb
mov
in
sub
outsb
fs
das
ret
cwtl
and
imul
ret
out
in
push
ret
popf
sahf
ljmp
icebp
pop
xchg
movsl
add
adc
nop
mov
scas
movsl
iret
sbb
inc
loope
jle
push
fs
jl
shll
dec
mov
xchg
push
pop
lcall
jl
shl
fidivl
dec
mov
fisttps
mov
mov
mov
jp
mov
lods
mov
jnp
cld
push
xor
or
out
in
jae
dec
jl
add
push
xchg
data16
negb
dec
ja
push
sub
or
push
setg
push
jl
xor
cmp
dec
mov
cmp
int3
mov
adc
fcmovne
les
mov
mov
daa
int
mov
pop
in
and
mov
dec
or
mov
dec
jmp
orb
outsl
xor
dec
jae
outsl
hlt
and
cld
jle
js
das
mov
or
jb
and
cwtl
jl
fimull
cmp
popf
jb
loop
js
push
icebp
test
js
jle
outsb
mov
loop
or
lods
in
idiv
test
sbb
in
mov
stc
push
cld
jg
mov
mov
and
subb
aas
jno
mov
fisttps
or
mulb
sub
xor
out
mov
daa
mov
add
cmpsb
fsubs
xor
mov
dec
pop
push
leave
mov
cmp
sti
mov
inc
sarb
lock
push
sahf
in
scas
clc
add
gs
fdivrs
pop
inc
xor
stos
addl
aas
test
xchg
loop
lods
pop
ror
cmpb
loope
pop
xchg
xor
js
ss
and
sub
push
or
stos
cmp
or
sub
arpl
add
mov
es
lret
push
loop
pop
stc
mov
xchg
or
dec
sub
sub
xor
test
pusha
dec
popf
adc
push
jg
int3
push
inc
push
in
pop
cwtl
fwait
cmpsl
add
push
xor
xlat
testl
mov
in
lret
jge
inc
nop
push
push
sbb
out
xor
imul
xchg
rcll
mov
insb
or
adc
xor
hlt
or
add
or
fldl
fsubrl
xor
add
xor
jp
ja
cli
ss
cmpsb
lock
sbb
inc
adc
or
xchg
sub
idiv
pop
mov
adc
jns
popa
les
imul
push
jl
sub
insb
push
mov
xchg
stos
push
pop
xor
push
mov
and
popf
jecxz
adc
xchg
mov
pop
aad
and
into
iret
aas
push
pop
jle
outsl
add
arpl
lds
imul
test
out
test
insb
adc
sahf
dec
fildl
and
jmp
mov
cmp
hlt
roll
dec
daa
arpl
sbb
mov
xor
jge
inc
lret
rol
jmp
cmp
mov
scas
insb
sub
pop
cmc
call
sbb
xchg
jge
cmp
inc
push
fnstenv
add
xchg
in
scas
push
int3
cmp
iret
mov
xchg
pushf
bound
pop
mov
fimuls
lds
nop
cmp
stos
jle
movsl
addr16
int
or
js
mov
pusha
pop
mov
shrl
dec
out
xchg
pop
das
bound
movsb
add
outsb
sub
xchg
jns
daa
push
and
and
call
dec
leave
or
jp
pop
pop
mov
jnp
push
iret
paddq
sbb
stc
push
adc
dec
push
inc
mov
pop
dec
ficoms
je
test
xchg
dec
leave
and
cmc
xchg
mov
mov
pop
xchg
ljmp
inc
dec
insb
jmp
lret
test
mov
push
xchg
cltd
divb
ftst
addr16
popa
xchg
sbb
ret
jne
test
test
std
adc
mov
push
or
bound
mov
mov
notb
and
mov
cmp
xchg
fstps
or
mov
dec
push
dec
negl
xor
pop
arpl
inc
lcall
push
add
pop
aam
stc
jmp
test
mov
cmp
arpl
inc
out
jp
loope
in
mov
stos
fidivs
mov
sbb
test
imul
inc
enter
lods
icebp
mov
sbb
iret
or
mov
ss
fldt
push
iret
fistpl
jb
push
pop
push
mov
lods
fwait
cmp
or
mov
popa
ja
jns
ss
popf
lds
jne
out
adc
repz
or
pop
jns
inc
idiv
xchg
inc
xchg
insb
int3
mov
mov
xchg
ror
mov
push
in
sub
mov
fwait
fs
sti
daa
pop
sbb
pop
test
and
cmp
sub
inc
pop
adc
test
dec
imul
leave
xchg
push
mov
and
andnps
mov
fimuls
pop
ret
into
mov
push
dec
out
repnz
enter
push
xchg
stos
mov
or
out
mov
int
add
dec
sbb
mov
inc
cs
pusha
push
leave
inc
scas
xchg
flds
test
imul
rcrl
icebp
dec
inc
mov
lahf
push
popa
int
or
bound
adc
add
dec
add
push
stc
aam
rcr
ret
dec
movsl
mov
rcrb
dec
stos
or
jmp
mov
or
and
icebp
addb
xor
adc
sbb
push
or
imul
test
lret
dec
scas
xchg
ljmp
xor
fsubl
dec
or
out
and
add
xor
push
int
test
jge
jne
aaa
sbb
cs
add
fwait
or
fcomps
sub
cmp
mov
xchg
mov
jae
lea
pop
arpl
vpcomuq
testl
cld
daa
add
mov
mov
les
cmp
and
xchg
xchg
nop
cmp
in
sub
adc
dec
repnz
stc
cmovs
call
jnp
mov
test
and
pop
pop
push
movsb
jno
pop
leave
sbb
cmp
xor
pop
fsubrs
sahf
iret
out
push
lea
push
fmull
jne
mov
xor
movsb
push
frstor
insb
mov
mov
fadd
stos
idivb
lahf
mov
andb
enter
movsl
in
jmp
loopne
and
mov
es
fsubs
push
mov
xor
movsb
btr
std
sbb
loope
into
ja
sbb
mov
jne
jmp
popf
test
jno
aas
pusha
test
mov
in
int
inc
insb
roll
adcl
push
in
lock
in
dec
pop
and
sbb
or
imul
mov
lahf
push
xor
and
lock
mov
and
iret
ja
jge
cli
cmp
push
push
and
push
imul
insl
rclb
push
cmp
push
pop
add
and
inc
je
adc
pushf
add
pop
mov
sti
xor
sbb
jmp
and
mov
sub
and
loope
xor
dec
mov
ret
clc
icebp
pop
mov
mov
mov
or
adc
orb
out
inc
cltd
dec
out
out
sub
pop
and
call
pop
cmc
sar
test
add
add
orb
jno
outsl
xchg
imul
and
inc
cmp
insb
push
daa
sbb
test
shll
cld
mov
mov
scas
into
test
insb
popa
adc
or
add
lods
add
lahf
inc
cmp
stos
popa
push
cmp
adc
loope
out
cmpsl
mov
ret
aaa
push
lea
pop
cmp
fiaddl
and
push
pop
sub
les
sti
scas
shll
pop
pushf
sti
pop
ret
push
outsb
sub
mov
and
lcall
mov
idivb
cltd
shll
or
mov
add
xchg
aad
and
inc
push
in
das
test
std
icebp
negb
xchg
jecxz
mov
xchg
xchg
jmp
inc
sub
dec
iret
imul
push
scas
int
mov
lock
pop
sub
add
push
incl
mov
cmp
pop
xlat
and
inc
shufps
popa
popa
adcb
in
loop
dec
insl
insb
cs
sbb
add
insl
sub
pop
cmp
sub
xchg
push
ror
dec
popl
daa
addr16
xor
pop
test
fdivl
push
loop
inc
or
les
cld
cmpsl
dec
push
xchg
push
push
and
mov
lods
xchg
mov
add
jge
or
xor
xchg
mov
mov
cmp
cmp
aaa
dec
mov
out
or
dec
mov
loop
mov
fpatan
mov
mov
movsl
lahf
mov
movsb
cmpsb
or
jne
jnp
dec
clc
push
or
jecxz
push
or
lret
add
jo
aam
adc
pop
inc
stos
inc
in
inc
insb
pop
into
inc
push
mov
or
inc
jecxz
iret
aas
sahf
mov
repz
in
mov
cli
shrb
lods
push
cmp
pusha
mov
shll
xchg
idiv
xor
fxch
fwait
popl
mov
inc
sub
repz
xchg
sar
aaa
adc
jbe
lods
cltd
ror
adc
sub
lock
addr16
scas
mov
enter
xlat
scas
push
pusha
outsl
and
adc
addb
xlat
mov
fistpll
inc
xor
stos
sub
idivb
sti
in
pop
mov
jle
pop
in
cmc
adc
push
cmpsb
cld
sbb
cltd
xor
lret
flds
xchg
mov
jns
ljmp
nop
cmp
incl
jmp
out
mov
mov
push
out
clc
cmpsl
xor
xor
repnz
inc
std
sbb
stc
and
pop
test
dec
sbb
cmc
push
jno
ret
cmp
jle
and
inc
int3
push
jecxz
xchg
add
dec
push
inc
int
out
mov
aas
loop
clc
mov
popf
mov
xchg
adc
dec
ss
fcoms
repnz
inc
and
mov
push
push
mov
inc
mov
das
fcomps
clc
jnp
or
imul
sbb
into
sbb
fadd
cmpsb
push
loope
mov
jmp
daa
icebp
inc
mov
jmp
pop
cwtl
jmp
sbb
in
add
add
ljmp
pop
adc
rorb
cli
cmp
and
loop,pt
cli
jne
or
loopne
fcompl
inc
or
jg
jae
pop
inc
jbe
push
jge
enter
insl
mov
sti
ror
push
pcmpeqb
shr
pop
mov
js
push
aam
cmp
cmp
cmpl
outsb
lret
mov
ds
push
imul
out
in
jae
jae
add
mov
out
jae
push
insb
pop
mov
hlt
or
imul
jnp
test
mov
scas
sub
mov
sti
pop
js
adc
sub
xchg
pop
jnp
nop
popa
lret
adcb
push
dec
and
mov
scas
adc
mov
sub
push
stos
shll
cld
in
cmpsl
mov
or
movsl
xor
pop
push
bound
dec
enter
sub
cmpb
xor
cmpsl
mov
cs
xchg
dec
mov
push
mov
out
mov
mov
adc
sub
sub
aam
inc
pushf
test
stos
test
popf
mov
dec
xchg
popa
js
fstps
leave
mov
mov
addb
into
test
push
adc
xchg
push
xor
addb
mov
mov
out
xchg
fsubrl
xorl
stos
dec
pushf
or
cmpsl
popa
xor
push
test
repz
xor
cmc
and
imul
in
hlt
je
jb
dec
inc
and
sti
and
and
cmp
scas
mov
stos
sbb
loop
add
cltd
jnp
insl
sbb
jge
mov
and
or
shrb
cmpsb
pop
dec
fistpll
xor
xor
out
jns
adc
xor
inc
test
aam
ja
sahf
sub
adc
imulb
outsl
jl
mov
or
repz
iret
sbb
cmp
testb
jmp
in
or
ljmp
std
imul
mov
gs
test
sub
xchg
cmpsb
mov
mov
mov
repz
jg
shlb
mov
and
sub
fisttps
inc
push
popf
mov
aaa
fdivr
sub
nop
jg
add
and
pop
int3
cmp
xchg
fisubrl
xor
daa
mov
gs
sub
jno
cmp
icebp
jmp
loopne
cmp
push
ret
xor
inc
push
shrl
push
mov
xchg
mov
inc
in
stos
fsubl
cmpsl
stos
mull
adc
popa
and
dec
insb
jo
or
pop
js
push
lret
je
cmp
imul
pop
repnz
adc
inc
push
inc
rep
ficoml
sbb
cmp
inc
xorl
fstps
or
sti
stc
shll
push
xchg
lea
int
cli
or
and
inc
push
lock
push
pop
mov
daa
xor
sbb
insl
dec
fcmovnbe
push
cmp
push
push
cmp
mov
gs
mov
adc
or
test
cltd
loope
mov
dec
dec
add
dec
mov
ret
add
stos
xlat
or
pop
test
mov
gs
outsb
add
pop
jle
sbb
fwait
push
adc
cmpsl
adc
jno
mov
dec
insl
mov
testl
lret
mov
xchg
xchg
imul
jns
pop
xchg
fisubl
add
fldpi
popa
sbb
nop
inc
in
addr16
jb
or
fildll
pop
loop
test
and
pop
inc
mov
jbe
rcr
and
inc
dec
pop
mov
je
jg
rolb
inc
cli
or
int3
cmp
lods
dec
mov
adc
dec
add
push
mov
add
lock
outsb
mov
pop
int
mov
jno
jbe
shr
adc
inc
dec
mov
sub
pop
int
and
pop
dec
mov
mov
sub
add
or
pop
shl
not
data16
fwait
mov
cltd
push
dec
cli
hlt
mov
dec
xor
push
mov
jl
sub
mov
daa
imul
imul
inc
sbb
jl
jge
pop
dec
mov
xchg
pop
mov
loopne
xchg
sub
xchg
mov
sbb
leave
les
fstpt
adc
fisubrl
lcall
xchg
test
ret
add
movl
adc
jno
push
into
mov
adc
imul
mov
xchg
pop
and
jl
aad
ss
popf
mov
repz
je
push
daa
ljmp
push
mov
fdivrp
push
fcoml
gs
sbb
cmp
clc
pop
nop
pop
pop
dec
stc
test
cmpl
in
sub
inc
sbb
sub
and
mov
lods
mov
jo
inc
pop
dec
std
and
pop
fstp
sub
mov
ret
in
sub
jno
adc
ja
pop
and
pusha
mov
es
ret
jb
sub
xor
fs
aam
pushl
adc
aaa
add
dec
push
or
es
shll
push
and
test
lahf
ret
pop
xlat
dec
adc
ss
movsb
dec
push
fwait
add
leave
movsb
lds
push
or
shlb
lret
lock
jmp
inc
push
mov
xchg
test
adc
pop
jbe
dec
mov
jns
jne
shlb
and
cltd
push
inc
cmp
xchg
cmpsl
cmp
aas
lods
jbe
mov
pusha
pop
outsb
fucomp
aas
cltd
or
add
lret
push
mov
cmp
mov
sti
stc
fs
cwtl
sbb
jne
cmp
sub
add
jp
aam
or
je
sub
mov
add
scas
push
inc
out
mov
or
pop
mov
xor
clc
imul
fistps
roll
mov
sbb
mov
loopne
xchg
mov
xchg
and
inc
xorl
arpl
mov
add
lods
or
psubusb
xor
and
les
xlat
shlb
jae
ja
pop
shlb
shrb
mov
pop
out
sti
or
dec
sbb
test
jae
lock
push
lahf
sub
adcb
adc
in
movsl
push
push
hlt
and
ret
clc
xor
aam
sar
out
pushf
cwtl
les
std
push
dec
lock
ja
pushf
sarl
inc
jl
neg
not
in
sub
into
popl
cmp
cltd
loope
call
movsb
lock
test
add
in
sbb
rcrb
dec
faddl
call
lret
lahf
movsl
fs
sbb
xlat
repnz
inc
les
orl
sub
stos
xchg
sahf
lret
faddl
mov
push
in
jb
cmp
stc
pop
ret
lock
pop
hlt
jge
hlt
add
sub
xor
push
mov
mov
enter
sbbb
cmc
shl
add
add
pop
mov
sub
sbb
pop
xor
sti
cmp
cmp
lock
push
lret
adc
inc
push
jbe
into
out
lea
push
sbbb
mov
sbb
scas
in
push
inc
dec
xor
into
stc
sub
rol
jae
bound
inc
dec
and
ja
pop
push
push
movsb
jo
mov
fisttps
dec
jl
out
jae
mov
sbb
mov
xlat
outsb
ret
adc
rcr
aas
cmovae
inc
sbb
mov
cmp
dec
ja
rolb
std
cmpsl
dec
dec
jge
pop
pop
sbb
mov
adc
in
push
jb
out
loop
dec
cmc
mov
adc
dec
adc
mov
fdivl
ret
mov
adc
inc
push
hlt
and
mov
xor
push
pushf
into
push
pop
bound
dec
clc
add
xchg
fwait
sub
dec
hlt
jo
jge
sti
out
and
movsl
or
inc
push
loopne
pop
hlt
out
fsubs
int
repnz
dec
and
ds
jae
outsb
sbb
std
add
fucomi
imul
sub
mov
xchg
pop
mov
add
dec
cwtl
imul
cmp
sbb
xor
fnstsw
inc
sbb
lret
xchg
cmpsb
mov
popf
xchg
cmp
jg
mov
pop
sub
cmp
mov
sub
cmp
mov
push
stc
repz
add
cli
and
fs
es
cs
cs
cmpsb
push
ds
dec
push
fildll
nop
jg
in
or
lock
test
jge
adc
fcmove
xor
cmp
lods
dec
bound
jmp
dec
push
xor
lods
push
xor
mov
mov
and
in
pusha
es
xchg
mov
sbb
sub
ret
dec
bound
mov
or
pop
push
int
cmp
xchg
lea
imul
repz
dec
out
out
movsl
out
mov
stos
xor
lret
or
push
pop
mov
lea
ffree
jecxz
inc
mov
into
cli
icebp
jns
call
mov
rorb
bsf
iret
out
repnz
mov
imul
cmp
test
add
ret
or
pop
xchg
in
push
loopne
shll
call
xchg
nop
dec
xchg
push
push
mov
xchg
fisubrs
mov
enter
int
pop
repz
lods
xor
pop
xchg
fwait
leave
iret
and
inc
jns
mov
fstpt
gs
xor
and
inc
fimuls
sbb
push
sahf
test
fstl
xchg
dec
xchg
jbe
add
repnz
adc
fsts
sti
movsl
dec
add
outsl
insl
push
xchg
sahf
mov
push
and
jl
push
sar
mov
repz
cmp
ss
das
pop
jno
mov
cld
adc
xchg
mov
jbe
mov
xchg
lods
call
das
mov
testl
xor
push
jecxz
sub
mov
movd
mov
push
sbb
test
sahf
es
sti
jmp
ja
mov
push
or
outsb
ja
cmp
push
push
int
push
mov
out
imul
jo
mov
lcall
and
stos
dec
cmp
sbb
jno
popf
outsl
cmp
mov
jp
add
aaa
adc
idivb
adc
loopne
int3
lret
ds
in
dec
dec
pop
sub
dec
sbb
andb
mov
push
rclb
movsb
cmpsl
cmp
sbbl
pop
bound
ficoms
divb
jl
in
fldenv
inc
cmpsb
adc
fistpl
popf
mov
int3
push
jmp
pusha
mov
push
or
rcr
mov
gs
pop
enter
dec
pop
cmp
scas
sbb
and
aas
xchg
mov
scas
loope
xor
aaa
lahf
add
aad
pop
stos
stc
jo
sub
jne
repnz
popf
adc
push
das
cld
out
fistpl
mov
mov
xor
enter
and
mov
shlb
xchg
mov
jmp
cmp
outsl
sbb
mov
mov
lahf
lock
sbb
popa
mov
stc
cmp
mov
add
ret
or
xchg
lcall
movsb
std
pop
int3
ja
push
test
into
repnz
bound
fdivrs
inc
mov
ret
xor
out
arpl
jmp
mov
das
test
and
xchg
sub
add
lret
jmp
test
out
inc
ds
pop
out
dec
js
xchg
xor
mov
out
pop
outsl
pop
xor
data16
inc
mov
lods
fmuls
leave
sub
into
jo
gs
inc
fstp
xor
sbb
add
inc
pop
xchg
sarb
fildll
scas
fnstenv
pop
ljmp
outsb
add
lds
out
inc
int
dec
loope
adc
stos
ljmp
cmpb
test
mov
push
sub
idivb
popf
jge
push
rcrb
xor
cmp
jle
xor
orb
mov
aas
adc
or
dec
int3
mov
inc
inc
fldenv
mov
add
andl
jmp
insb
imul
xor
lods
rorl
sbb
fs
lock
mov
repz
dec
inc
dec
xor
push
fwait
mov
ljmp
cmp
repz
adc
aas
sarb
fstpt
fisttpll
inc
mov
jb
push
ljmp
push
cmp
int3
jle
imul
xor
xchg
or
add
push
insb
pop
sub
fs
scas
stos
jae
dec
jp
mov
cmp
filds
pop
addr16
pushf
and
lcall
xchg
scas
or
pop
sti
cmpsl
cmp
outsb
mov
sbb
xor
push
gs
aam
sbb
or
mov
in
test
mov
insl
xchg
and
mov
pushf
xchg
pushf
inc
dec
xchg
pop
out
dec
movb
sub
xchg
jbe
mov
lods
jl
int
or
popa
mov
and
addr16
xor
jns
adc
mov
ficomps
inc
movsb
es
gs
iret
hlt
pop
cmpsl
xchg
test
loopne
or
inc
mov
mov
adc
and
cli
and
lock
inc
ret
cld
add
xchg
push
dec
jle
ljmp
or
xchg
sarb
jne
out
fs
daa
inc
and
sahf
jns
jl
loop
xchg
ja
push
push
dec
cli
aam
call
dec
data16
push
ljmp
rcll
mov
in
cmp
shll
add
es
lds
test
fsubl
lock
cmpsb
scas
loope
mov
mov
sub
ljmp
xchg
movsl
sbb
cwtl
adc
push
sub
sub
shlb
cmp
inc
sbb
mov
mov
jns
mov
test
xchg
push
adc
imul
adc
cmpsb
outsl
and
sahf
sbb
and
je
mov
inc
in
dec
adc
mov
push
pop
lods
pop
mov
stos
jmp
test
aam
bound
call
xor
xor
pop
lret
out
les
repnz
gs
push
mov
jp
sahf
ret
xlat
lods
inc
inc
sub
mov
sub
push
xor
inc
in
inc
and
aas
pop
smsw
xchg
sub
lds
je
sahf
dec
xchg
cli
and
mov
cmp
add
xorl
pop
lods
aad
xchg
call
adc
push
ror
cmp
subb
inc
pop
cltd
adc
jnp
cmc
loopne
pop
aaa
pop
sub
stos
shll
mov
push
adc
into
sub
cli
stc
stc
repz
jge
sub
jg
mov
or
push
cmp
out
pop
push
sub
scas
loopne
test
pop
xchg
or
adc
lods
and
loopne
mov
pop
or
mov
outsb
cmp
lods
add
xchg
and
dec
sti
lret
push
or
leave
mov
mov
aaa
cli
sahf
push
inc
sahf
rcll
das
xchg
push
mov
xchg
sbb
lock
mov
lcall
sarb
jmp
pop
fs
sub
push
ss
dec
add
fsub
xor
aad
cmp
inc
xor
dec
dec
mov
or
cmpsl
or
cli
sahf
imul
mov
jnp
cmp
sbb
adc
es
xor
inc
es
adc
out
addl
ljmp
int3
mulb
dec
or
mov
repz
jae
or
je
mov
or
loopne
pop
adc
mov
int
and
cmp
sbb
push
ret
bound
shlb
insl
lea
pop
adc
rcll
rclb
cmp
cmp
jne
daa
mov
mov
sbb
ja
dec
jae
shlb
int
mov
xchg
pop
ljmp
mov
push
cmp
jge
icebp
adc
loop
hlt
push
sarl
inc
mov
out
fs
mov
xchg
lea
sbb
cmp
call
xchg
and
jle
loop
in
inc
push
insb
push
sbb
xor
repz
loop
jmp
pop
push
and
cmp
and
lods
scas
and
inc
into
sbb
inc
shll
stos
outsl
mov
cli
mov
inc
sahf
mov
insb
jle
sub
cmpsb
or
mov
mov
mov
lea
or
hlt
mov
mov
mov
jo
xchg
adc
lea
mov
push
rcrl
cmp
mov
pop
mov
in
inc
jbe
sahf
push
cmc
cmp
incl
add
cmc
das
inc
arpl
ljmp
shll
lea
dec
mov
pusha
mov
and
out
loop
dec
les
mov
mov
popa
inc
vphsubdq
nop
jo
dec
xor
push
loop
xor
fs
imul
pop
pop
in
fistps
jb
ret
icebp
aaa
and
fdivrp
pop
push
lret
xchg
push
push
xlat
in
jbe
push
sbb
xor
and
inc
inc
loope
ret
inc
pop
or
xor
and
sbb
jp
out
imul
test
pop
popf
mov
mov
jo
mov
daa
and
repnz
nopl
jmp
dec
leave
call
out
lcall
pushf
out
lods
jmp
fsubrs
mov
cmp
push
movlps
jl
lea
movsb
test
rcrb
idivb
cs
out
mov
and
ljmp
mov
adc
mov
mov
sbb
popl
pushf
rclb
adc
lret
and
mov
jl
push
addl
std
loop
push
dec
xchg
cmpsb
jo,pn
cmpsb
xchg
add
je
jno
cmp
dec
pushf
or
lcall
test
cmp
dec
scas
mov
jne
ja
pop
sub
dec
leave
inc
imul
daa
push
inc
out
mov
mov
jo
push
arpl
rorb
ret
je
ficoml
in
or
sub
pop
jge
outsl
fstl
pop
mov
stc
movsb
add
adc
test
sub
jecxz
imull
aas
imul
jp
mov
movb
int3
subb
xchg
ret
testl
dec
int
mov
and
dec
dec
jbe
jge
push
incb
adc
push
mov
inc
fdivrl
jo
pushf
mov
mov
idiv
jle
sub
daa
sti
lock
jbe
stc
addr16
or
add
jmp
subl
lea
shlb
popf
cli
xchg
xchg
mov
push
dec
sub
lcall
shl
sti
cmpsb
add
sahf
out
fnstsw
or
int
lret
adc
arpl
insl
lock
push
insl
pop
pushf
jnp
rcr
imul
outsb
jecxz
mov
cs
test
scas
pop
sub
xchg
mov
fcompl
test
push
repnz
xchg
jne
aad
inc
dec
nop
fwait
lea
jecxz
popf
push
sub
add
mov
sarb
xlat
mov
les
aam
sbb
xlat
jb
mov
cmpsb
lods
jns
inc
lret
xchg
pop
and
test
stc
cmp
and
cmp
ss
inc
insb
jo
inc
test
int
gs
ret
xchg
xor
mov
mov
lds
iret
or
nop
enter
pop
dec
mov
daa
xor
iret
mov
xor
sub
adc
add
in
gs
fwait
cld
and
lods
lcall
sbb
adc
push
sbb
adc
sub
or
adc
stos
les
lret
mov
stos
sbb
jns
or
lea
jno
sub
push
lds
cmp
cwtl
roll
cltd
test
lods
clc
inc
ja
in
in
clc
ret
push
mov
lods
jmp
cmp
daa
sub
loop
cwtl
cmp
pop
data16
sbb
iret
cmp
sbb
lds
stos
mov
cmp
sbb
push
xor
and
add
mov
adc
xor
or
out
lret
push
fbstp
push
jle
test
repz
mov
stc
xchg
idivl
jl
leave
jns
mov
cmc
popf
pop
leave
in
mov
mov
jo
gs
mov
jg
push
js
xor
clc
push
xor
test
add
mov
loop
loop
movsb
cmp
mov
add
add
mov
inc
pop
ficomps
cmp
xchg
mov
mov
push
pop
adc
mov
sti
icebp
imul
ja
icebp
inc
mov
insb
xor
fst
in
out
xor
loop
jno
push
add
xchg
pop
into
popf
leave
and
in
jno
arpl
shll
xlat
sti
pop
mov
sub
inc
bound
in
rclb
inc
sahf
outsb
sbb
aad
test
outsb
ret
inc
lcall
cmpl
aas
xor
aas
adc
xor
in
das
iret
and
pop
sub
loope
and
iret
mov
call
sbb
and
xor
lret
jbe
sbb
popf
inc
push
out
jae
jge
jecxz
sub
push
sbb
ror
sub
daa
push
popa
mov
lds
ss
shlb
cli
mov
call
xor
popf
cmp
fs
out
fwait
xchg
add
push
ja
loopne
mov
inc
mov
arpl
lret
das
or
test
push
pop
cmp
mov
dec
mov
addr16
sub
jae
and
mov
xchg
lcall
popf
or
lock
xchg
testl
sahf
inc
dec
daa
repz
stos
xchg
lcall
push
outsb
fidivrl
xlat
hlt
movsl
mov
xchg
xchg
mov
mov
mov
subb
call
out
dec
xlat
push
jle
jp
movsl
xor
cltd
in
xorb
and
adc
aaa
bound
push
or
neg
aam
jge
decl
add
call
inc
test
std
orb
pusha
rcrb
lock
mov
cmp
push
push
and
push
or
pop
shl
mov
lods
ss
push
dec
jno
test
xchg
xchg
out
push
mov
push
xchg
xchg
sar
mov
xorl
push
jns
stos
add
pop
pop
jle
dec
dec
mov
out
jb
xchg
loop
jl
or
scas
push
fistps
xchg
stc
arpl
mov
adc
or
inc
sbb
xlat
fnstenv
pop
lret
lret
sub
test
rcr
mov
jge
xchg
in
xchg
xchg
cmp
pop
dec
fwait
loope
mov
mov
mov
cltd
add
test
and
scas
xchg
dec
adc
test
inc
push
cmp
movsl
or
sti
cmc
je
loopne
or
xor
fadd
mov
mov
jbe
shrb
adc
add
in
test
sbb
movl
test
inc
inc
fidivs
mov
scas
adc
lret
or
loop
test
daa
mov
sbb
or
test
push
mov
jne
test
loope
mov
push
xchg
cmp
push
jno
stos
jnp
aam
dec
in
fisubs
nop
shl
imul
pop
mov
lret
cmp
dec
in
out
addb
cld
add
iret
dec
dec
pop
aad
adc
insb
les
in
jb
into
popf
mov
mov
jno
js
pop
xor
test
stos
lret
bound
insb
jb
int3
shlb
out
mov
mov
xchg
mov
inc
mov
inc
daa
push
mov
jge
insb
cmpsl
sub
insl
aam
jne
pop
gs
int
test
mov
fucomip
ss
push
hlt
jb
dec
pop
cli
je
sub
hlt
add
xchg
pop
es
sbb
imul
inc
insb
nop
scas
ja
add
xchg
fstps
add
fs
inc
clc
in
cmpsl
lock
push
cmp
nop
in
pop
jp
imul
and
mov
dec
shlb
cmpsl
pop
cmp
hlt
insb
out
inc
adc
pop
push
repz
push
shrl
dec
dec
inc
mov
lods
fstpl
cmp
fldlg2
mov
jae
and
outsl
mov
imulb
push
sub
stos
lods
roll
pop
hlt
pop
call
incb
sub
test
mov
daa
rorl
cli
fcmovbe
push
mov
rolb
iret
daa
fsts
inc
xchg
leave
in
push
push
and
insl
pop
add
sahf
fstl
cs
roll
adc
aam
or
rcrb
sub
mov
mov
or
fistpl
movsl
jg
vmaxps
or
push
inc
outsb
daa
icebp
data16
sahf
test
mov
xor
jle
sub
into
nop
add
jbe
push
pop
mov
int
lret
or
scas
cmp
clc
icebp
test
out
out
mov
shlb
nop
lds
not
jne
dec
pusha
mov
sub
popf
xchg
mov
cmp
popf
and
pop
mov
sub
and
xchg
jne
fldenv
add
jl
mov
fdivrl
push
adc
in
lods
xchg
repnz
mov
out
dec
cltd
bound
andl
xor
pop
lods
scas
test
sbb
add
gs
mov
mov
xor
pop
xchg
mov
push
insl
dec
jo
stos
or
xchg
sub
pop
mov
cmp
lea
aaa
imul
insl
repz
xor
push
mov
daa
push
push
adc
outsb
xchg
ljmp
xchg
loopne
lcall
push
pop
sub
mov
rorb
fldl
enter
out
jmp
xor
iret
mov
pop
ret
pusha
push
mov
lock
aad
sbb
pop
fwait
inc
cmp
and
sti
pop
cmp
imul
in
and
rcl
lcall
push
aaa
pop
pop
dec
mov
jae
add
add
test
push
and
mov
jg
fimuls
sbb
mov
inc
and
js
adc
lds
stos
xorl
jecxz
and
les
push
and
push
sub
jl
popf
int
mov
mov
ja
push
int
mov
ror
xchg
pop
pushf
cmp
pop
sbb
pop
aad
nop
adc
test
or
inc
mov
out
stos
cli
dec
stc
cmp
cmp
push
sub
ss
repnz
dec
dec
xchg
add
dec
aad
int
std
rcr
in
lcall
or
in
cmp
ret
bsr
jbe
lea
clc
out
xchg
push
dec
out
sub
gs
in
lock
cmpsb
fcmovnb
and
push
cwtl
stc
test
mov
and
sbb
cmp
arpl
imull
mov
adc
mov
xchg
imulb
lahf
popf
mov
sub
out
and
jle
out
jnp
or
loopne
shll
fnstsw
repnz
arpl
out
pop
add
sbb
push
pop
test
mov
mov
sub
add
subb
leave
sbb
add
cmp
inc
out
jp
arpl
outsb
mov
mov
sbb
inc
mov
outsb
scas
cmpsl
pop
aad
iret
mov
push
adc
sahf
xchg
ljmp
out
inc
mov
ficomps
adc
outsb
insb
ljmp
mov
clc
jp
faddp
jmp
fdivrl
mov
mov
jg
sbb
mov
out
jp
add
mov
pop
subl
add
addr16
ja
outsb
mov
out
mov
mov
cmc
cli
pop
test
mov
das
aam
jmp
mov
fists
push
xlat
mov
xchg
add
jmp
lock
sbb
scas
ret
and
pop
mov
dec
loopne
xchg
pop
ret
mov
scas
adc
cmp
aad
cmp
mov
call
jae
loopne
or
and
cmp
cmp
ljmp
push
iret
cltd
sub
and
pop
push
jg
jecxz
and
pop
jae
insl
jns
xchg
test
dec
sbb
icebp
add
repz
lahf
inc
xchg
les
leave
fistpll
sub
arpl
mov
test
mov
push
jno
add
add
hlt
push
sbb
shrl
out
inc
sbb
sbb
sub
sbb
mov
scas
xor
inc
fldt
mov
testl
into
scas
sub
sbb
push
mov
fcmovb
movsb
mov
cld
fcoms
jne
in
adc
fimull
aaa
mov
in
or
fistl
sbbl
insb
mov
adc
mov
fdivrs
mov
out
aas
add
rcll
ret
cmp
sti
cmp
pop
mov
aas
or
repz
pop
in
add
test
jecxz
add
test
xlat
mov
imul
andl
jne
xchg
cli
lods
inc
sbb
popl
mov
xorb
inc
jbe
cs
mov
imul
mov
inc
sti
mov
xchg
lahf
pusha
add
and
lret
xor
mov
cmp
mov
jle
lock
sub
outsb
lods
addr16
sbb
cltd
fisubrs
sbb
cmp
fadds
mov
cmp
xchg
mov
xchg
jnp
mov
jbe
mov
lret
mov
aad
xchg
sbb
clc
shll
mov
imul
movsb
arpl
cwtl
jge
stc
jp
int3
in
mov
cwtl
bound
pop
xor
lods
pop
xchg
pop
cld
inc
sub
mov
or
pop
push
das
lea
push
addl
lret
cmp
std
mov
jo
icebp
mov
jecxz
icebp
dec
fisttpl
push
or
fucomip
outsl
mov
mov
fisubrs
fcomps
stc
loope
mov
fisubl
fwait
shrb
cmp
sahf
inc
adc
xchg
sub
or
int
imulb
pop
inc
pop
cmp
push
fmul
add
sbb
jg
inc
add
add
in
xor
lea
stos
daa
insl
testl
insb
jno
test
cs
xchg
das
ret
mov
faddp
cmc
mov
call
rcrb
andb
cmp
mov
femms
into
push
adc
cld
call
pop
hlt
mov
dec
test
xchg
adc
bound
or
addl
push
aad
stos
mov
adc
inc
pop
loopne
test
pop
pusha
push
mov
mov
sbb
add
mov
jmp
push
in
xchg
lcall
xchg
xor
fidivl
je
imul
frstor
data16
fldt
push
scas
movsb
push
and
rolb
out
xor
jnp
pusha
pop
das
push
sbb
mov
shll
sub
shll
and
aad
push
out
mov
lcall
movsb
not
dec
push
ja
inc
psrld
ds
adc
xor
enter
pop
pop
mov
ss
lea
or
cli
inc
outsb
mov
mov
lds
data16
outsb
popa
cmpb
scas
cmpsb
mov
hlt
jmp
or
inc
xor
rcrb
mov
mov
insl
stos
movsb
sbb
ret
cmp
mov
dec
mov
into
inc
xlat
mov
and
out
aam
fucomp
mov
lahf
fmuls
in
sbb
shll
fistpl
cmp
loop
cwtl
test
jae
xorl
adc
movsb
movsb
push
stos
mov
mov
inc
ljmp
lret
sbb
lods
test
and
cli
jmp
mov
inc
lcall
sti
outsb
insl
jl
es
loop
or
call
aaa
jecxz
hlt
mov
movsl
jge
or
jbe
push
vmovdqu
xor
pop
sti
pop
or
mulb
xchg
push
mov
imul
mov
lock
mov
imul
loopne
sbbl
loope
push
jns
xchg
xchg
mov
test
lret
sbb
cmp
dec
xor
and
movsb
ror
rclb
imul
push
dec
dec
dec
push
push
ret
cmp
call
pop
aaa
sbb
and
mov
aam
aad
mov
fsubs
popa
pushf
sar
push
test
or
lock
rorb
sbb
add
popa
mov
test
ljmp
imul
in
mov
out
cltd
jbe
pcmpgtw
dec
adc
mov
fwait
cmp
gs
xor
stos
leave
imul
int
cmp
cmp
roll
mov
sbb
movsb
movsb
pushf
shlb
fmull
in
sub
add
jge
pop
pop
cwtl
out
andl
mov
out
xor
mov
out
out
out
fidivl
pop
or
sarl
push
mov
aam
pop
jp
sbb
cmp
lret
aad
push
xor
mov
jle
push
ret
iret
dec
ret
loop
push
out
out
repnz
int3
cmp
cmc
fwait
cmp
cli
in
sbb
jae
sub
mov
push
in
xchg
repnz
shlb
out
add
inc
imul
jle
stc
jne
sub
jo
movsl
push
fcoms
and
mov
push
loope
hlt
sub
xchg
orb
cmp
cmpsb
xlat
or
mov
cwtl
dec
mov
adc
mov
inc
movsl
and
add
in
in
ds
in
test
loope
les
adc
add
stos
or
loope
adc
outsl
loop
leave
cmp
mov
fsubrs
pusha
jne
imul
cmp
push
adc
int3
in
xchg
push
xchg
shll
sub
cmpsl
or
cmpsl
mov
repnz
sbb
loop
mov
xorb
nop
imul
dec
aad
lea
adc
imul
jne
jge
out
scas
cld
pop
adc
mov
dec
daa
lods
xor
mov
push
sbb
inc
in
ljmp
decl
adc
pop
dec
loop
add
ret
test
daa
add
out
cmc
xchg
dec
mov
push
lods
test
jbe
fs
xchg
leave
or
mov
sahf
jb
jg
pop
or
loopne
je
fs
pop
mov
pop
mov
mov
or
xlat
jbe
repnz
cmp
mov
jo
dec
cmpsl
cld
mull
or
aas
and
mov
shrb
call
in
xor
mov
lds
jle
xor
push
jecxz
dec
push
jmp
sub
mov
jmp
sub
jae
dec
inc
shlb
movsl
jnp
cmpsb
cmp
or
rcll
clc
imul
enter
daa
lcall
lcall
into
lahf
out
je
aas
sub
hlt
lods
out
mov
mov
aaa
sub
jo
aam
fs
pop
je
push
push
jg
pinsrw
in
fnstsw
loop
js
add
cmp
xchg
stos
mov
adc
lea
pop
int
leave
cmp
pop
cmp
add
rcl
out
mov
mov
mov
mov
adc
dec
rcl
gs
outsl
push
aaa
dec
jp
inc
mov
lahf
mov
push
mov
shll
ljmp
std
mov
lahf
mov
cmp
add
xor
mov
or
dec
jl
orl
jns
js
dec
pop
mov
imul
mov
pop
jno
xchg
cs
fbstp
ljmp
lods
sub
ss
cwtl
in
xor
roll
xchg
hlt
mov
cmp
sub
adc
aad
aam
mov
push
test
movsl
mov
ja
push
add
test
rorl
je
jno
push
push
fiadds
leave
loopne
out
sbb
iret
dec
xchg
push
outsb
push
loopne
stc
enter
dec
xor
cmpsb
orb
test
pop
fpatan
sub
shl
popa
adc
dec
hlt
enter
jl
cmp
or
daa
or
mov
push
jle
insb
shlb
xor
xor
mov
bound
cmc
cmp
pop
sbb
shr
sti
ds
add
or
mov
cmp
and
xchg
lret
and
lret
push
std
fwait
pop
pop
and
pop
jbe
xor
movsl
xor
in
jle
je
mov
mov
xchg
or
mov
jecxz
jbe
pop
stos
std
jmp
incl
sti
or
push
ss
pop
in
lods
aas
or
ror
fiadds
push
popf
sbb
jbe
inc
lock
ss
mov
mov
out
mov
inc
sbbb
hlt
xor
mov
js
insl
adcb
inc
std
and
int3
fadd
xchg
adc
ret
aam
pop
daa
es
test
jae
repnz
xchg
cmp
cmpsl
jne
cmp
jl
pop
call
jge
adc
inc
pop
je
mov
xchg
loopne
or
and
xor
inc
and
inc
pop
push
lods
jb
fcmovnb
call
call
out
mov
adc
ja
outsb
xchg
jp
push
es
adc
and
jno
stos
repz
jg
mov
sbb
lds
mov
arpl
inc
movsb
aaa
bound
jne
sub
repz
mov
imul
arpl
sub
xchg
jmp
lds
in
add
cmp
cmp
andl
dec
push
add
sbb
cmp
add
jo
mov
adc
jb
and
jb
xor
fldl
jns
cmp
je
push
sbb
lcall
out
jge
adc
and
js
and
lds
insb
cmp
add
mov
fnstcw
mov
in
aam
outsb
or
pop
xor
cltd
shll
data16
fsubl
es
xchg
jbe
mov
mov
mov
addr16
clc
aad
insl
js
fisubrl
addr16
movb
imul
mov
push
mov
mov
inc
outsl
pop
fistl
mov
pusha
mov
pop
das
stos
pop
sbb
lea
mov
xchg
adc
inc
scas
rorl
jp
jle,pt
call
pop
jne
iret
int
sub
aad
mov
push
pop
or
sti
dec
pop
sbbb
mov
loope
repz
inc
mov
ffree
js
ret
lds
fistps
loop
ss
dec
jns
push
cmpsl
push
dec
and
jo
add
mov
fwait
or
lods
inc
je
lods
adc
mov
push
pop
push
xor
xchg
cmp
inc
push
in
mov
xchg
iret
and
pop
iret
cwtl
and
jbe
mov
daa
pushf
inc
faddl
sbb
mov
or
rcll
push
inc
je
shlb
sub
sub
inc
sarl
adc
xor
popa
push
push
addr16
out
sbb
xchg
mov
push
xchg
outsb
xchg
mov
sahf
jmp
ret
jbe
jge
shrl
sbb
and
fwait
cwtl
aam
dec
and
push
cmp
jnp
rolb
outsl
cs
cwtl
das
and
cmp
dec
jbe
xor
pop
fwait
inc
and
loopne
aad
ljmp
jp
repnz
hlt
push
and
sahf
daa
jb
inc
push
aaa
stos
leave
push
outsb
pop
and
and
int
jno
fwait
inc
int
gs
lret
add
or
cmp
adc
rcl
enter
xchg
pop
pop
lds
adc
in
cld
jns
dec
adc
dec
xchg
out
loop
dec
int
pop
inc
sub
pop
xchg
les
mov
xchg
mov
mov
fdivrs
xor
jmp
addr16
mov
sti
ret
bound
addr16
pop
dec
inc
out
les
ljmp
mov
jg
mov
mov
jae
dec
push
dec
push
adc
jmp
jp
andb
jns
dec
mov
bound
fsubs
pop
mov
or
adc
dec
and
or
push
pop
sahf
push
call
xchg
imul
add
sub
mov
cwtl
cld
fldcw
mov
sub
fisubs
shlb
pop
lret
ret
adc
xchg
daa
jne
cmp
mov
sbb
cs
scas
clc
pop
xor
inc
sub
ret
adc
mov
fdivr
adc
xchg
repz
jle
hlt
push
adc
inc
pop
ljmp
sti
push
inc
xchg
adc
int
and
jns
fcmovne
mov
add
mov
cmp
mov
cwtl
cld
in
adc
roll
loop
and
pop
or
or
push
rcr
xchg
mov
pop
mov
inc
mov
xor
mov
lds
jb
shlb
dec
dec
jmp
push
pop
push
idiv
jl
mov
pop
mov
packssdw
jmp
add
pop
jmp
dec
xchg
test
jge
mov
dec
orb
mov
xchg
test
mov
das
int
or
call
pop
adc
cld
std
test
push
aaa
xchg
imul
xchg
in
lea
mov
push
inc
or
add
jp
repnz
jge
xlat
push
int
push
mov
add
push
mov
lret
mov
add
sub
fcmovnu
push
jle
lods
flds
cld
les
push
add
lea
test
sbb
outsl
out
jecxz
sbb
and
data16
and
jb
adc
xchg
notl
andb
pusha
inc
std
cli
fcoms
aaa
dec
das
xchg
push
fs
inc
fimuls
sti
cs
icebp
div
cmc
cmp
jae
ficompl
divl
stos
pop
mov
std
pop
cmc
addl
push
inc
addb
arpl
add
mov
dec
cltd
cmp
jns
mov
add
stos
int3
inc
fadds
sub
sbb
sbb
mov
cmp
lahf
add
inc
jne
push
in
insb
lds
xor
add
push
jb
mov
mov
adcb
adc
cld
xchg
mov
test
sahf
test
jl
sahf
jmp
adc
and
and
incb
mov
sbb
dec
and
sarl
sbb
mov
test
mov
fbstp
pop
popf
pop
mov
aam
in
add
mov
inc
jl
jo
sbb
mov
aam
int3
pop
pop
lret
xchg
loop
lcall
movsl
cltd
sbb
and
mov
jle
push
jne
js
mov
jb
xchg
fucomp
outsl
jg
and
dec
and
pop
insb
mov
push
pop
nop
loope
cmc
jge
or
push
dec
dec
lock
sbb
jecxz
xchg
loop
dec
dec
and
cwtl
loopne
insb
loopne
std
mov
pop
sub
mov
mov
lahf
push
aam
sbb
insl
mov
ret
loopne
jp
mov
push
ret
cmp
aas
xor
xor
out
jl
fcmovu
mov
add
repz
sub
ret
adc
hlt
mov
jo
cli
xor
or
push
scas
stos
frstor
fcoms
stc
push
mov
push
fcompl
stos
dec
pop
adc
int3
pushf
in
ret
outsl
fs
xor
movd
lods
push
rorl
mov
outsb
sub
xor
fbstp
mov
rol
in
inc
mov
fidivrl
aad
lret
hlt
int3
imul
pusha
inc
stc
jmp
mov
cmpsb
es
adc
dec
xchg
insb
jae
iret
cwtl
cs
pushf
rcl
and
fmulp
adc
cltd
adc
cmp
jg
aad
xchg
dec
adc
jns
jp
add
push
xchg
adc
cmp
jo
and
sbb
shll
enter
push
sti
icebp
mov
scas
fimull
push
cltd
stos
lock
xor
dec
daa
bound
inc
sahf
or
stos
in
mov
jl
dec
push
xchg
int
fst
fsubl
mov
add
in
jle
insl
ret
xchg
sahf
js
mov
in
ficomps
jmp
iret
cmp
inc
gs
repnz
fwait
or
mov
mov
mov
sbb
xchg
push
mov
mov
ss
stos
or
sbb
shlb
and
lret
pop
add
fstpt
lods
lcall
mov
mov
lahf
sub
lret
pop
jle
push
inc
dec
movsl
mov
mov
je
fcmovb
in
sub
lahf
mov
mov
lret
fs
lock
and
xor
out
inc
cmpsb
lock
out
hlt
stos
ret
and
cmc
sub
jle
icebp
in
sub
dec
call
adc
dec
pop
xor
roll
cs
shl
stc
faddl
jae
xchg
or
scas
jne
rolb
jmp
mov
stc
mov
xchg
xor
iret
pop
push
and
sbb
inc
mov
das
xchg
jbe
insb
mov
push
sbb
dec
data16
aad
arpl
mov
rcll
pop
aam
inc
es
mov
ret
dec
xchg
fwait
shlb
push
sub
pop
out
jne
popl
in
test
cmc
or
orb
shlb
pusha
mov
out
mov
jg
push
or
insl
mov
lods
push
das
nop
daa
lret
gs
mov
push
xchg
lock
mov
or
or
fdivl
cli
mov
inc
push
mov
ss
inc
enter
adc
adc
inc
call
add
sbb
iret
xor
jo
add
cmp
lahf
mov
popf
and
mov
ds
imul
ds
mov
lahf
push
xor
push
dec
ja
push
xor
out
ljmp
sub
aas
ljmp
mov
xor
push
xchg
lea
mov
mov
nop
push
movsl
and
pop
lahf
dec
insl
bound
dec
in
dec
ret
cmpsl
pop
sbb
testb
sub
jg
inc
jo
mov
cli
mov
shrl
xlat
mov
and
jne
sub
cltd
lods
js
int
inc
cmp
sbb
adc
push
std
mov
add
adc
sbb
outsl
jno
andl
pushf
addr16
sub
or
int
fstpt
push
xor
and
jns
mov
sub
jb
sub
cmpsb
fs
mov
stos
test
xor
call
aad
lret
push
sub
xor
ds
mov
lahf
mov
pop
xchg
sub
push
mov
fs
popa
nop
lcall
inc
pop
ror
lods
popa
cmp
and
gs
mov
inc
inc
jne
jbe
sub
pop
out
cmpsl
testb
pop
pmulhw
jno
mulb
push
or
shll
cmpl
xor
cmpsb
add
lds
ja
jnp
ret
lds
push
jns
push
mov
call
loope
xor
popl
xor
into
or
mov
pop
xchg
sbb
fiaddl
cli
decl
int3
mov
jmp
mov
cli
lsl
push
sub
ret
sti
test
mov
repnz
mov
rol
sub
sub
orb
pop
inc
and
cltd
pushf
mov
mov
jnp
or
xor
dec
and
mov
lret
mov
fwait
sub
rorb
mov
icebp
dec
outsl
and
xchg
mov
add
test
pop
aam
iret
call
gs
outsl
push
movsb
jo
call
xchg
stos
lock
dec
jne
gs
pushf
sti
mov
into
jmp
andb
or
js
aas
push
jecxz
lret
test
mov
adc
mov
mov
jmp
push
int3
adc
jne
pop
sub
arpl
stc
cmp
sti
into
sbb
xor
fcomps
stos
and
in
mov
lds
test
mov
xor
lret
or
sub
sub
movsl
aam
add
push
or
adc
and
mov
cld
hlt
sbb
shlb
dec
pop
mov
jnp
fdivp
insb
icebp
mov
and
popf
mov
int
mov
loopne
mov
dec
outsb
xchg
and
mov
xchg
in
addr16
int3
lods
inc
mov
arpl
ficompl
inc
icebp
scas
xor
and
jbe
and
shll
cmp
add
push
and
or
das
mov
aaa
jg
faddl
sbb
jo
push
or
mov
icebp
mov
out
jo
sub
push
lret
cmp
cli
jecxz
mov
pusha
sbb
es
and
dec
sbb
mov
mulb
jnp
jmp
mov
push
les
pop
aad
cmp
imul
popf
sub
das
mov
xlat
sbb
inc
xchg
pop
fistpll
inc
add
popf
psrld
dec
pushf
mov
std
jae
stos
pop
lahf
dec
lds
xor
lods
add
inc
ljmp
pop
and
mov
and
push
iret
pop
ds
dec
fadd
push
mov
xchg
pop
lock
mov
pop
mov
scas
adc
in
cmc
fs
adc
dec
jo
xor
push
push
xchg
fcmove
jge
xor
lods
out
xchg
sub
mov
mov
add
xchg
ja
clc
pop
dec
mov
sub
mov
dec
imul
mov
imul
lock
test
jg
jle
cmpsl
mov
mov
sbb
push
and
inc
push
adc
push
lret
fnstsw
cwtl
mov
adc
in
test
loope
cwtl
imul
leave
sub
out
jnp
push
test
cmp
mov
out
test
test
xlat
mov
fcmovne
inc
in
and
xchg
jp
repz
bnd
fcomps
movsl
pop
mov
std
aas
fisttps
sti
xor
jns
cmp
xchg
jge
js
fs
sub
and
ja
fcompl
jl
lock
rclb
aad
je
and
enter
dec
out
xor
cltd
jno
cmc
out
out
in
sbb
dec
and
je
ret
leave
outsb
lahf
add
fwait
xchg
lds
mov
xor
leave
lods
iret
xor
push
push
leave
mov
es
gs
push
push
pop
jno
sahf
cmp
sti
in
xor
rep
pop
stos
adc
lea
jmp
mov
and
mov
popa
incl
adc
mov
jmp
lock
or
hlt
shlb
jl
add
gs
mov
cmp
clc
stc
mov
mov
imulb
adc
outsl
and
divl
into
xchg
mov
and
movsl
push
imul
inc
lods
test
push
nop
dec
jne
jne
aam
sbb
jmp
add
xor
rorb
mov
shrb
jb
mov
cli
inc
stc
les
stc
xorl
mov
out
xchg
shl
jp
adc
push
push
jge
repz
jo
fisubrs
dec
push
mov
mov
icebp
das
inc
mov
pop
aaa
mov
or
sub
sbb
push
in
test
and
std
inc
cltd
aad
mov
mov
pop
and
push
adc
loope
sti
mov
push
stc
and
or
jb
mov
mov
sbb
jp
fs
xor
gs
mov
jns
mov
fmuls
add
xor
fcoml
subl
xchg
icebp
rol
leave
pop
fwait
push
fcmovu
sbb
pop
push
out
int
mov
xor
aam
loop
and
cwtl
xchg
clc
adc
into
into
xchg
mov
xchg
pusha
out
addr16
push
push
xlat
ficoml
fildl
jmp
or
jnp
adc
mov
and
pop
addr16
cmc
pushf
jne
lret
mov
das
rcrl
dec
daa
inc
in
cmp
and
cmp
out
lds
lods
dec
inc
ret
xchg
push
insb
fistpl
cmc
dec
jns
xor
dec
adc
xchg
mov
in
jbe
pop
into
and
sbb
rorl
ljmp
loopne
mov
mov
sub
mov
in
sahf
int3
sbb
pop
repz
xchg
fnsave
mov
dec
daa
cmpb
cmpsl
and
roll
sbb
mov
sub
push
push
sbb
mov
and
adc
cmp
push
jb,pn
dec
data16
in
imul
rolb
lock
and
push
xchg
jge
lcall
mov
and
les
pop
cmpl
iret
adc
add
mov
lret
cmpsl
rclb
xor
inc
mov
xchg
insl
cmp
jge
stc
push
xor
arpl
push
cmpsb
xchg
jnp
sbb
pcmpgtb
test
jge
cmpb
and
push
hlt
push
into
cmp
xchg
inc
xor
mov
leave
mov
repnz
addr16
bound
mov
js
sbb
mov
add
or
or
dec
dec
aas
sbb
mov
jb
sbb
cmpsl
add
mov
and
cmp
out
lret
jnp
jg
fdivr
loopne
clc
enter
sbb
outsl
jne
enter
pop
mov
cmpsb
out
arpl
jns
mov
scas
and
shrb
je
test
and
rorb
incb
sti
mov
rorl
jle
add
shl
icebp
fdivr
xchg
mov
int3
int3
add
mov
mov
pop
or
test
mov
lcall
push
aaa
in
shll
ja
cmc
dec
sub
mov
aaa
orb
imul
jne
inc
mov
ficompl
and
mov
pop
or
shrb
sbb
ret
fildll
daa
or
in
jle
inc
fidivrs
bound
loopne
mov
testl
std
out
mov
sub
xchg
and
movsl
js
cmp
jmp
data16
sbb
outsl
cmc
sub
mov
fcomps
cmp
fadd
scas
or
xchg
xor
aad
popf
sub
pop
mov
outsb
xor
mov
jmp
xchg
lahf
repnz
insb
push
mov
cld
mov
pop
cmp
cmp
push
repnz
sbb
push
iret
xchg
jne
rcrb
lret
int3
pop
add
pop
lret
lcall
and
xchg
cmpsb
pop
sub
add
xor
rol
pushf
mov
or
cmp
xor
aas
jge
and
daa
push
push
jne
shrl
xor
add
aad
aaa
dec
push
add
frstor
aas
es
jbe
loope
int3
pop
shl
dec
mov
int
sarb
pop
and
and
cs
stos
std
sahf
inc
fisttps
insb
mov
mov
jg
sub
or
movsl
pop
mov
xor
rcll
cs
and
adc
jns
cli
rcl
ret
stos
cwtl
jnp
add
mov
pop
dec
imul
sbbl
neg
pop
les
pop
test
lods
and
lret
int
clc
js
out
test
jg
out
sub
movsl
inc
call
add
ret
inc
dec
pop
arpl
stos
cmpsl
jb
xchg
js
enter
jl
mulb
loopne
push
push
dec
in
in
jmp
loope
popl
aam
pop
xor
dec
dec
outsb
fnstcw
sub
ds
xchg
cmc
jne
js
fsub
or
fsubs
mov
clc
movsb
push
dec
mov
xchg
popa
sbb
ds
mov
adc
cpuid
mov
dec
mov
jg
ljmp
decb
add
sbb
lods
ret
andl
pop
insb
adc
loopne
cmp
lock
mov
and
push
addr16
iret
sbb
jl
loop
imul
push
inc
pop
mov
jno
mov
pop
jmp
cwtl
mov
sbbb
add
sbbb
bound
inc
insl
cbtw
mov
das
aam
into
cmp
cwtl
mov
push
sahf
inc
repnz
aad
sbb
pop
imul
mov
sub
mull
ret
and
mov
jmp
cwtl
jbe
aas
jns
mov
jo
inc
or
mov
cmp
xchg
sub
not
xchg
in
mov
test
daa
cmp
std
std
xchg
mov
out
sti
jo
test
repz
push
dec
and
pop
lock
adcl
leave
imul
rorb
add
cmp
xchg
mov
lahf
iret
call
stc
ds
stos
xchg
jg
sub
jmp
mov
add
and
jle
inc
adc
ficomps
mov
adc
mov
rcl
loop
in
jb
int
nop
sbb
jbe
rol
cmpsl
roll
roll
das
stos
leave
xchg
add
mov
add
repz
xchg
sub
gs
dec
dec
xor
lods
cmc
dec
lods
cmpsb
push
cltd
xor
test
push
mov
mov
outsb
xor
add
fistpll
xchg
daa
test
jno
cld
cmp
std
or
jl
and
or
scas
xchg
imul
xchg
in
dec
stos
pop
out
movb
ror
and
adc
xchg
movl
adc
jge
test
imul
in
repnz
in
nop
loopne
fsubrl
cmp
adc
insb
incl
pop
adc
lcall
clc
int3
push
mov
cmp
cld
xchg
stos
test
mov
mov
ss
inc
add
cmc
daa
sub
sub
sti
add
inc
ja
adc
push
outsb
inc
clc
jl
test
stc
stc
lcall
and
inc
shr
push
insb
outsl
mov
adc
into
pusha
daa
aaa
ja
je
dec
lods
xchg
mov
cmp
mov
fstpl
jmp
dec
or
leave
loope
inc
xor
ds
or
sub
dec
push
jno
adc
cld
add
jo
in
dec
into
andl
cmp
xor
repnz
jne
testb
cli
dec
cltd
mov
mov
out
fcompl
jb
xchg
or
mov
or
stc
arpl
adc
mov
adc
mov
jo
stc
jl
into
loop
mov
loop
jbe
cwtl
inc
in
inc
ja
adc
and
fwait
sbb
mov
sub
jl
mov
sbb
sbb
out
or
loop
das
cmp
aas
mov
test
rcrl
push
lea
mov
cmp
add
pop
or
lods
pop
pop
ja
pop
ss
cs
decl
cmc
pushf
inc
add
xchg
jbe
imul
mov
lds
frstpm(287
push
out
out
sub
xor
out
jge
jl
icebp
or
lret
adc
jns
sub
mov
lock
xlat
mov
xor
mov
xchg
clc
jae
mov
jns
xor
sbb
sbb
icebp
loop
xor
insl
gs
scas
sub
cltd
das
inc
mov
nop
mov
in
push
hlt
mov
test
or
pop
es
inc
add
jae
and
and
mov
mov
inc
mov
jg
out
lea
sub
push
pop
push
cmpsl
xor
xor
or
jno
pop
or
xchg
arpl
mov
out
call
sbb
cmp
jb
in
cmpb
or
outsl
xchg
jbe
xor
dec
inc
scas
cmpsb
push
inc
inc
xchg
push
xchg
into
pop
jle
jae
jae
mov
fcomps
sub
pop
cmp
in
push
popa
jbe
adc
inc
push
sub
scas
cmpsb
xchg
pop
jl
jns
sub
int3
and
xor
sbb
add
xchg
pop
hlt
sbb
and
icebp
idivb
dec
pop
fildll
aad
sub
int
clc
fnsave
into
int3
push
jmp
inc
test
sub
cltd
test
xor
popf
ljmp
jne
aad
pop
xchg
xchg
sbb
lods
or
xor
lret
mov
jno
testl
dec
lods
adc
xor
push
jnp
xchg
sbb
cltd
in
outsb
scas
idivl
ror
xchg
outsb
pop
js
cli
xchg
cli
inc
xchg
adc
push
ja
popf
loope
lock
mov
mov
push
jbe
xchg
cmp
clc
jb
pop
pushf
int
pusha
inc
jmp
cmp
mov
ret
pop
inc
sbb
ret
lock
shl
add
das
cwtl
loopne
imul
add
adc
outsl
lods
stc
movsl
sub
in
test
xor
sub
jnp
fsubrl
lock
pushf
xor
mov
andb
mov
mov
mov
push
add
push
pop
sub
shlb
es
test
adc
and
sbb
das
and
mov
movsl
lds
jle
push
ljmp
jbe
inc
rclb
push
or
mov
and
add
rcll
out
call
ror
mov
push
xlat
adc
mov
in
ret
mulb
jle
xor
mov
adc
popa
test
lahf
xchg
mov
jns
fs
les
in
mov
adc
or
enter
lods
shll
cmp
or
aam
loope
outsl
jge
add
insb
je
mov
push
mov
lock
mul
fisubl
sahf
inc
mov
sti
xor
mov
sub
aas
xor
fistps
pop
outsb
xchg
idivl
fadds
mov
addr16
xor
inc
add
cmp
sbb
fdivs
fistpl
cwtl
ficomps
sbb
ret
adcb
mov
and
repz
popf
mov
lock
cmp
pop
adc
push
movsb
jne
dec
pop
mov
mov
ja
jne
cmp
ret
add
push
loope
add
xor
mov
scas
pop
jmp
ret
in
cltd
gs
test
ss
lahf
dec
sub
pop
outsb
mov
lcall
rcll
leave
inc
sub
mov
arpl
pop
jb
fsts
addr16
adc
aam
fsts
iret
fiaddl
cmp
xchg
mov
push
shr
xor
lret
andl
sub
cmpsb
daa
push
inc
call
fistps
dec
mov
stos
pop
cmpl
pop
int
test
cmp
andl
lahf
daa
js
dec
test
sbb
hlt
mov
pusha
add
cmpb
or
xchg
push
jno
sbbl
fwait
and
mov
mov
sub
lods
or
push
jo
adc
push
aad
andl
xor
push
cs
sub
inc
js
xchg
mov
push
inc
xchg
out
dec
dec
enter
adc
pop
int3
in
mov
aas
sahf
xor
mov
mov
pop
sub
jecxz
mov
mov
dec
adc
stos
lcall
inc
das
mov
das
jge
call
stos
das
dec
les
add
mov
stos
pop
mov
aaa
push
icebp
jmp
ljmp
lds
and
jg
push
xchg
ret
mov
adc
fwait
in
rcll
out
neg
test
lahf
push
push
sti
jne
inc
jecxz
sti
or
or
mov
out
jmp
sub
inc
sti
xor
fstpt
je
and
mov
dec
js
iret
or
inc
jo
jae
pop
lcall
push
add
adc
cmc
lea
push
push
and
pushf
push
testb
mov
inc
inc
std
imul
and
test
pop
lock
pinsrw
dec
stc
sub
inc
jge
repz
xorl
add
cld
cld
out
stc
dec
mov
outsb
add
imul
push
call
jl
dec
mov
xchg
insl
mov
pop
insl
sub
push
inc
mov
xor
dec
loop
jo
fidivs
into
cmpsb
aam
stos
iret
lret
fnsave
fnsave
stc
sbbl
test
test
xor
or
mov
jnp
pop
mov
mov
pop
jno
or
xchg
push
pop
sbb
sub
pushl
xor
sarb
jecxz
inc
sbb
mov
shll
and
lea
popa
cmp
aas
faddl
fdivs
push
mov
jl
cmpb
inc
pop
lret
fsubrl
mov
mov
stos
mov
insl
stos
pop
dec
and
dec
insb
aam
mov
xor
pop
cld
repz
aam
mov
bound
mov
add
xchg
cmp
jne
sub
sahf
mov
inc
aas
aad
pushfw
jo
sub
cmp
and
mov
aam
nop
mov
fldl
push
jb
pop
pushf
xchg
and
test
xor
jg
adcb
mov
shl
jae
jl
loop
push
dec
sti
imul
popf
or
out
cld
in
xchg
xchg
fnsave
call
cmpsl
cmp
outsb
or
fisttpl
popf
push
push
sbb
into
cmpb
out
test
pop
sub
clc
aas
add
in
dec
std
xchg
es
dec
imul
addr16
pop
iret
nop
mov
sbb
lds
cmp
add
stos
repz
adc
out
pushf
dec
mov
mov
add
sbb
push
mov
jle
andl
lret
sbb
sub
pusha
push
jmp
sub
sub
pop
mov
adc
sbb
push
sarl
jb
jl
jns
imul
push
pop
je
shll
loope
in
inc
aaa
into
adc
mov
xchg
nop
mov
mov
das
xor
xchg
jl
leave
xor
and
outsl
dec
mov
jae
inc
dec
xlat
cmp
cmpsw
je
test
mov
xor
addr16
std
cmp
divl
xor
out
les
lahf
mov
mov
insl
and
mov
movsl
cmpsl
outsl
fidivl
sti
stos
xchg
repnz
add
dec
inc
mov
sub
jecxz
shlb
jae
pop
push
jmp
xor
loopne
mov
aam
xchg
sbb
in
adc
xor
pop
sub
aas
pusha
push
dec
ja
push
push
or
inc
push
push
pop
aam
rorb
arpl
enter
call
or
popf
mov
xchg
or
pop
mov
dec
data16
clc
sbb
int3
notl
cli
in
insb
out
sbb
and
out
jb
mov
jecxz
inc
shl
sbb
and
adc
stos
sbb
cld
lcall
inc
loop
add
jbe
adc
add
les
in
ds
xchg
lcall
cmp
mov
cmp
mov
repnz
cmpsl
xor
mov
test
adcl
push
push
add
mov
and
mov
repnz
stc
xchg
push
sbb
dec
inc
out
adcb
jae
mov
stos
xorl
fidivrl
es
in
movsl
dec
test
adc
or
clc
dec
loope
push
xchg
cmpsl
int
mov
loopne
hlt
sub
push
loop
int3
mov
cmp
or
push
mov
cld
pop
push
cs
or
loope
adc
sbb
in
push
dec
mov
subb
mov
pushf
xchg
dec
sti
daa
jno
test
ja
sti
and
mov
ljmp
and
push
sti
pop
pop
pop
lods
stc
andb
add
cmpsl
test
add
arpl
cmp
xchg
xchg
push
add
push
push
pop
pop
lock
mov
mov
fs
stos
jmp
out
test
cltd
mov
pop
pop
out
jno
lret
mov
lahf
lcall
push
mov
fistpl
es
test
jmp
and
jbe
add
cmp
jno
mov
mov
imul
jo
sub
push
sbb
push
into
xor
fisubrs
push
dec
mov
call
pop
in
jae
adc
inc
pop
push
dec
xchg
imul
ficoml
test
stc
adc
adc
in
in
ficoms
test
lods
pop
jno
xor
loop
aad
lret
add
mov
adc
add
add
mov
xor
imul
enter
add
mov
fstp
lcall
ret
pop
xchg
mov
imul
stos
cmpsl
popf
ljmp
cmp
cld
aas
push
push
fcoms
lds
sarb
cli
stc
dec
jmp
rcl
in
addr16
sbb
mov
aad
mov
pusha
ret
clc
or
dec
mov
fisubrl
jge
jge
roll
push
sub
mov
mov
jg
mov
xor
dec
mov
das
in
addr16
in
xchg
sub
mov
fsubrs
sahf
and
mov
or
lds
mov
push
fwait
inc
dec
jne
inc
nop
fsubl
push
pop
dec
sub
mov
int
inc
imul
shrl
std
aam
push
add
scas
dec
test
mov
xor
stc
jl
sti
inc
pop
mulb
and
add
scas
pop
cld
int
sti
jb
sbb
add
mov
or
mov
or
pop
add
sub
mov
inc
fmulp
cmp
fwait
cltd
cmp
adc
std
mov
icebp
outsl
mov
push
loop
scas
into
and
frstor
in
shll
lret
push
data16
and
es
sub
pop
push
es
gs
mov
out
dec
scas
lods
shlb
and
push
insl
clc
lods
mov
sarl
mov
das
in
mov
inc
out
and
xorb
jnp
mov
mov
test
nop
shr
stc
aam
std
mov
pop
jmp
jge
pop
mov
mov
leave
adc
xchg
cld
add
lcall
divl
mov
xor
dec
lods
pop
fiadds
mov
jnp
icebp
in
fcomi
imul
jecxz
test
adc
lods
in
add
mov
in
jb
pop
cmp
adc
push
pop
cld
jne
js
dec
push
mov
push
rclb
std
inc
jbe
jmp
xchg
lret
stos
mov
cmp
push
in
lret
jge
int
sarb
adc
pop
icebp
mov
fisubl
outsb
pop
push
push
cmp
test
xor
mov
pop
mov
cmp
insb
push
in
add
mov
lock
add
inc
jge
arpl
aaa
iret
aas
leave
mov
dec
clc
or
pop
mov
adc
or
and
push
push
mov
push
int
dec
fadds
fnsave
arpl
testl
add
inc
push
push
rorb
nop
cld
inc
and
frstor
das
xor
into
jle
mov
test
stos
movsb
scas
rclb
jge
lcall
jp
or
dec
mov
sbb
fcoml
ret
mov
xor
leave
push
adc
push
std
sti
inc
roll
lret
jmp
mov
fdivr
aad
inc
out
adc
push
stc
and
xchg
int
cwtl
push
mov
xlat
push
xor
or
clc
ds
scas
sbb
or
jns
jge
sahf
imul
or
sub
ljmp
jp
sub
mov
pop
repz
mov
push
mov
mov
mov
dec
pop
dec
and
xor
sub
sub
repnz
sub
inc
jnp
mov
xorb
decb
jecxz
mov
lods
in
add
pop
add
add
popa
mov
sbb
xor
mov
cmp
dec
mov
div
cwtl
and
jb
incl
jno
pop
inc
arpl
adc
mov
stos
jo
ficoml
test
inc
pop
aad
orb
cmp
push
mov
mov
cwtl
inc
scas
and
hlt
out
cmc
or
or
sarl
mov
mov
out
cmc
addr16
hlt
dec
adc
sahf
pop
cmc
or
adc
jmp
inc
movsb
lret
insl
scas
cmc
or
stos
inc
loop
xchg
push
jp
push
and
data16
xchg
mov
test
mov
push
mov
dec
mov
pop
pop
inc
nop
clc
add
mov
push
mov
jb
cmp
add
insl
fwait
aad
xor
inc
pop
mov
mov
mov
addr16
push
fisubs
repz
mulb
mov
outsl
mov
and
mov
or
inc
in
loope
cmc
sbb
jp
pop
sbb
gs
test
xor
jnp
cwtl
jbe
push
cs
xchg
stos
sub
das
cmpsb
fistl
cmp
mov
fcoml
call
add
imul
hlt
sarl
dec
cmpsl
sub
movsb
icebp
add
fs
mov
mov
hlt
stos
rcll
and
insb
dec
and
push
test
sub
mov
pop
orl
mov
cmp
pushf
clc
movsl
mov
test
pop
sbb
ss
xchg
imul
mov
sub
push
jecxz
in
mov
mov
imul
push
outsb
stos
dec
and
daa
cmp
xor
inc
mov
hlt
xor
mov
mov
mov
inc
sub
push
add
jno
adc
push
push
push
or
and
in
pop
les
sub
mov
pushf
adc
mov
and
and
dec
jae
adc
into
sti
jl
rorb
ret
mov
rcl
xchg
cmp
out
sub
sub
jns
int
inc
add
mov
mov
call
xchg
xor
push
jne
adc
push
or
std
push
jg
daa
mov
gs
jge
jae
out
mov
mov
push
sub
rep
bound
sbb
jb
push
sarb
orb
jno
xchg
test
push
into
ret
xor
jae
sbb
loopne
cld
orb
shl
jmp
xchg
inc
adc
movsl
inc
add
adc
lds
lea
adc
es
into
pop
into
fs
aas
push
jo
icebp
test
or
add
aad
mov
or
sbb
xor
mov
adc
push
lahf
lea
pop
aas
adc
mov
jo
or
leave
xchg
aam
cmp
mov
or
push
or
push
nop
inc
mov
adc
or
fwait
inc
enter
fsts
jecxz
and
xor
push
push
jecxz
dec
mov
nop
or
fildll
inc
pop
shll
xlat
and
dec
mov
mov
aam
test
mov
mov
outsl
xor
loope
adc
ds
pop
jmp
sarb
fadds
outsl
cmp
pushf
mov
sub
lret
fdivrs
daa
popf
cmpsl
xchg
xchg
or
inc
mov
fs
mov
jo
insb
adc
je
fwait
sbb
inc
jo
add
fidivl
idiv
push
push
lds
incb
loope
adc
sub
lahf
sar
sahf
popf
testl
shl
nop
mov
xchg
mov
cmp
sub
popl
fstl
test
popa
into
push
sub
fimull
shrd
mov
nop
ljmp
enter
mov
pop
in
jle
inc
jbe
adc
movsb
xchg
cmp
bound
ljmp
or
rcrl
push
inc
mov
add
andl
adc
pop
jo
inc
pop
int
sbb
in
or
mov
sub
inc
aam
sti
std
insl
aaa
repz
fcom
js
sub
hlt
push
mov
cmp
ja
sbb
in
lods
xor
cltd
push
dec
jmp
push
lret
add
pop
cmp
pop
lahf
adc
dec
mov
clc
cmp
int3
pop
out
leave
push
mov
sbbb
test
jle
repz
adc
ds
outsb
push
add
pop
sbb
inc
inc
sbb
lret
imul
mov
insl
sub
sbb
jmp
fsubs
xor
pop
dec
ds
xchg
pop
jbe
rclb
pop
rol
sbb
cmp
mov
jns
repnz
movsl
dec
mov
int3
inc
les
xchg
rclb
jp
out
mov
fnstcw
inc
push
jle
std
int3
push
jno
ficoms
lds
mov
dec
mov
mov
mov
mov
dec
inc
fisttps
into
scas
xor
lahf
push
imul
dec
fwait
adc
push
fadd
xchg
add
je
in
cltd
pop
jnp
jnp
cmp
inc
dec
rclb
iret
or
clc
fstpl
ret
stc
add
loopne
push
push
or
adc
lret
movsb
cmc
daa
add
jle
cld
push
xor
stos
push
scas
data16
inc
jecxz
lret
inc
cmp
inc
xor
jo
push
inc
sub
stc
popa
stos
adc
push
xor
mov
popa
inc
dec
and
sub
inc
movsl
std
and
int3
imul
fmul
sahf
xchg
jno
push
enter
repnz
mov
shlb
out
or
sub
ds
stos
mov
add
dec
es
push
out
pop
jmp
mov
jmp
push
jno
shll
and
and
imul
insl
adc
push
daa
aaa
fisubs
in
cs
cmpsb
jb
pop
cmp
xor
repnz
orl
subl
or
outsl
mov
dec
dec
loop
out
lcallw
xor
pusha
in
cmp
push
js
arpl
testl
aas
fcmovnb
xor
xor
bound
inc
cli
inc
clc
fildl
shrb
xchg
outsb
adc
xor
arpl
popa
mov
sub
pop
sbb
sbb
bound
sahf
inc
dec
pop
cmp
rclb
arpl
out
lret
sub
test
iret
push
imul
xchg
pushf
pop
in
test
pop
addr16
and
xor
mov
jp
sti
jno
movsl
scas
mov
jbe
xor
cmp
daa
lea
mov
subb
das
mov
fisubs
pop
or
stos
add
sbb
test
dec
fisttpl
add
fsubrl
push
cmpsb
mov
mov
push
cwtl
jmp
push
cmp
cmp
data16
or
mov
xchg
jne
push
xor
jge
and
pop
popa
fcomi
leave
or
out
jecxz
xchg
nop
jno
fsubl
insl
movsb
pop
mov
push
cs
lods
shrb
lock
jl
and
jb
stos
fistl
dec
call
in
bound
xchg
push
dec
sahf
and
adc
jp
xchg
shlb
and
inc
mov
and
xchg
ficompl
sub
loop
sbb
jmp
push
mov
xchg
jne
or
mov
xchg
iret
or
and
iret
mov
call
bound
lock
insl
jno
xlat
fs
pushl
xchg
int3
imul
std
mov
stos
jnp
ja
mov
fcoms
mov
mov
call
test
enter
inc
pop
int3
testl
ljmp
adc
jmp
jp
mov
test
or
aad
cwtl
repnz
les
inc
imul
ret
in
or
dec
scas
mov
fildll
jg
push
sub
adc
adc
pop
pop
cs
cmpb
xor
lods
add
cmp
pop
cmpsb
dec
outsb
pop
aam
mov
and
and
imul
setle
mov
mov
push
xor
sub
add
pop
adc
adc
jp
jp
dec
xchg
xchg
xchg
shrb
and
push
mov
pop
scas
xor
mov
mov
orl
nop
add
lcall
and
mov
aaa
hlt
data16
hlt
pcmpgtd
lea
jno
add
add
xchg
lea
jbe
lock
iret
xor
fdivl
cmp
daa
xchg
mov
cltd
repnz
imul
mov
js
fisttpll
ds
lds
cld
mov
sbb
adc
pop
stc
xor
fpatan
fbstp
loopne
mov
aad
sbb
je
in
shlb
xchg
mov
lret
test
aas
jp
cld
jae
cmp
mull
sub
fmull
or
jnp
jge
icebp
loope
arpl
cmpsb
cmpsl
andl
lahf
inc
and
xlat
imul
adc
popa
push
push
dec
sub
into
add
imul
mov
call
xor
inc
in
sub
adc
sbb
jbe
cld
cmpsb
pop
dec
cmp
push
je
adc
icebp
inc
aad
imul
sbb
or
loope
movsl
lods
cli
lcall
mov
lea
subl
icebp
test
lds
loopne
and
or
sbb
fildll
add
jp
mull
adc
in
lahf
xor
outsl
ljmp
push
repz
ficoml
ja
fistpll
sub
gs
int3
or
les
xor
inc
mov
pop
xchg
sub
and
or
and
xor
loop
or
ret
cltd
push
push
or
lock
clc
jne
mov
or
adc
insl
adc
ss
mov
outsl
or
jg
pop
mov
daa
iret
inc
adc
mov
ja
xor
push
pop
xchg
mov
xchg
mov
mov
push
dec
push
lahf
jmp
pop
jmp
add
dec
testb
or
sub
dec
xchg
sub
scas
jae
in
xchg
inc
mov
push
stc
or
push
sbb
inc
add
push
adc
sbbb
xchg
hlt
xor
or
jne
shrb
shll
lahf
xlat
mov
lret
outsb
daa
hlt
push
lods
movsb
xorl
push
mov
jo
in
stos
int
and
pop
loop
ja
dec
pop
popf
jo
add
bound
mov
push
test
add
das
aam
mov
mov
stos
aaa
ljmp
fstpl
or
mov
out
and
mul
jb
lods
lahf
dec
pop
in
dec
mov
push
movsb
enter
lahf
mov
insl
and
dec
mov
push
aam
and
aad
inc
movsb
hlt
mov
aam
imul
pop
xor
pop
rolb
subl
xchg
lock
hlt
mov
int3
sub
out
daa
loopne
aad
mov
push
imul
mov
ret
push
push
mov
subb
hlt
lret
mov
and
int
add
mov
mov
inc
cmp
inc
jmp
push
popa
lea
sbb
push
ljmp
ja
mov
cmp
push
jb
pop
dec
rcl
xor
lock
ss
push
hlt
cs
ja
aad
xor
enter
sbb
fdivrl
enter
loopne
mov
or
mov
mov
movsb
ret
sbb
stc
push
and
cmpsb
pop
mov
xor
xchg
dec
dec
in
adc
incb
mov
and
orb
mov
scas
mov
fsubr
inc
hlt
lods
out
jae
mov
rcrb
push
xchg
cli
fisttpl
pushl
cmp
add
cmp
push
sahf
into
jge
mov
popa
stos
repnz
cmp
jbe
rcrl
and
clc
lret
dec
mov
push
fwait
lret
das
mov
mov
pop
imul
sub
or
icebp
mov
in
mov
insl
pop
in
loopne
pop
sarb
mov
cmp
cmp
adc
push
lcall
mov
dec
test
je
pand
xchg
daa
fwait
scas
out
cmp
add
and
je
pop
shl
push
loope
dec
mov
sub
fs
mov
fwait
out
xor
cmpl
lds
outsl
cwtl
push
iret
nop
dec
xchg
je
mov
aas
stos
jp
cltd
cmp
jo
lea
movsb
jae
pusha
jb
push
pop
ljmp
mov
jle
xchg
fcoms
fstps
imul
ja
in
lods
in
xchg
std
adc
mov
jmp
and
fsts
xor
add
add
stc
inc
sbb
incb
lods
jae
add
pop
movsl
insl
stos
xchg
loopne
repnz
clc
xchg
test
xor
dec
push
movsl
sbb
adc
in
loopne
sub
cs
mov
outsb
call
adc
adc
imul
push
push
mov
subl
cmp
mov
cmp
lock
sbb
mov
out
divb
test
cmp
cmp
enter
and
jbe
inc
push
mov
or
lret
mov
xchg
push
mov
lds
fcom
into
movsl
test
push
sub
cwtl
pop
mov
inc
cmpsb
dec
jno
push
leave
mov
lods
repz
enter
pop
fsubrp
mov
push
cltd
adc
stc
mulb
arpl
dec
mov
inc
insl
mov
inc
dec
mov
hlt
clc
jb
movsb
das
lea
mov
xor
dec
cmpsb
mov
jmp
jno
fdivp
inc
jno
cmp
xor
jo
jmp
popf
inc
xor
xchg
and
xor
popa
sahf
lret
mov
inc
test
pop
rcr
addr16
subb
push
sbb
pop
jne
in
xchg
pop
pop
outsl
loop
or
pop
mov
sti
pop
push
push
cwtl
cmpsb
test
std
cltd
mov
dec
lods
xchg
arpl
push
or
pusha
lods
xchg
sbb
adc
mov
jne
repnz
repz
imul
jo
in
sbb
add
imul
pop
fildll
adc
mov
cmpsb
rclb
dec
jo
out
cltd
hlt
xchg
call
mov
jnp
mov
cltd
mov
cmpb
mov
inc
jbe
sti
sub
jmp
inc
lods
icebp
sbb
pop
mov
cwtl
daa
stos
push
ja
fwait
hlt
call
and
lock
add
jmp
sub
loopne
add
loope
xor
xor
in
test
add
out
jge
movsb
xchg
inc
mov
js
adc
in
mov
mov
xchg
jae
or
add
jmp
popa
push
int
and
or
jmp
push
xchg
in
mov
nop
movsb
js
insl
add
pop
inc
scas
incl
mov
ds
sbb
xchg
js
push
push
cmp
es
adc
sbb
sub
into
jnp
bound
ljmp
stos
fdivrp
xorl
out
fs
adc
and
cmp
inc
into
cmp
bswap
pop
add
xchg
aad
out
orl
sub
into
push
xchg
jno
push
jo
sub
jecxz
aam
pop
pushf
inc
ja
push
cmp
popf
mov
adcb
cmp
mov
lret
out
xchg
lahf
notb
or
or
mov
pop
cmp
int3
mov
lcall
lret
rcrl
mov
sbb
add
ds
push
inc
pop
pop
std
xchg
push
popf
cld
jge
fs
pop
and
cmp
mov
loopne
adc
xchg
and
jmp
xor
add
decl
lock
fwait
mov
mov
dec
bound
push
adc
ffree
push
xor
call
inc
or
enter
inc
aas
dec
push
and
loope
or
call
pop
or
or
push
aas
or
jae
stc
push
jo
push
sub
sbb
ja
jbe
mov
mov
push
movsl
stc
push
in
dec
jmp
jns
inc
test
add
je
cmpsl
push
push
mov
xor
test
aaa
xor
push
ja
inc
popf
je
push
hlt
cmc
scas
jno
cltd
popf
test
adc
ds
pop
add
xor
mov
call
lods
push
xor
test
mov
mov
jecxz
add
hlt
dec
cmpsb
or
pop
push
mov
push
sbb
mov
jle
sub
rcll
loopne
rcl
pop
pusha
push
pop
jl
adc
ffree
les
scas
or
cli
push
adc
xor
and
addr16
mov
or
enter
pop
rcrl
addr16
or
cmpsb
jmp
sbb
fmull
dec
pop
mov
pop
and
ret
xchg
sbb
nop
mov
out
dec
addb
imul
ret
adcb
ficoml
int
and
addr16
xchg
pop
adc
idivl
jl
xchg
into
iret
cld
cmp
dec
add
sub
inc
adc
in
andl
cmp
jnp
mov
lea
out
jl
mov
pop
rcll
pop
sarb
loopne
pop
jae
pop
or
or
dec
insl
int
fsubs
sbb
popf
stos
add
sub
push
adc
cwtl
outsb
cli
lcall
hlt
sub
jle
lret
push
cwtl
jnp
jle
jp
sbb
xchg
or
shrl
std
rcrb
mov
ja
sub
pop
insb
inc
repz
jg
repnz
mov
dec
stos
popa
iret
stos
mov
outsl
xchg
mov
sbb
enter
dec
imul
or
mov
xor
xor
mov
add
mov
cmc
int3
sahf
js
mov
dec
cmpb
push
shr
mov
jg
jne
cmp
les
mov
or
repz
mov
cmp
iret
stos
and
popf
stc
fs
roll
into
andb
pop
adc
insl
sbb
dec
push
js
into
jge
sub
dec
mov
stc
or
popa
sti
popf
je
xchg
push
gs
rcl
std
xorb
cmp
xchg
push
xor
stos
jae
and
leave
sbb
jmp
add
ret
cmpsl
out
mov
das
pop
pop
lock
cmp
mov
dec
jb
lods
xchg
xor
jnp
xchg
test
lock
mov
and
xor
andl
mulb
adc
sbb
sbb
scas
out
ja
jp
lahf
xorb
mov
mov
insb
cltd
cmp
pop
xlat
sub
ret
into
sub
insb
stos
xchg
sbb
gs
xchg
je
xchg
into
jp
push
imul
loope
pop
mov
pop
xchg
hlt
fcomps
addr16
imul
or
mov
aad
push
pop
jo
pop
mov
popw
pusha
jmp
mov
push
test
cmp
aad
in
cmp
cli
jg
and
jp
mov
mov
mov
adc
xchg
jo
pop
mov
dec
aaa
pop
adc
jp
call
sub
dec
aam
jge
cmp
and
xchg
mov
arpl
in
push
in
inc
xchg
dec
push
sub
addl
sbb
scas
clc
in
mov
out
mov
rolb
mov
fwait
sub
cmp
adcb
jle
int3
filds
jl
pop
scas
pop
out
fcmovbe
xlat
lahf
xchg
push
sbb
xor
data16
ja
mov
xchg
inc
in
adc
out
aas
push
push
pop
sbb
mov
movsb
sahf
mov
push
push
xchg
cmp
notb
stos
lock
aam
test
mov
out
lea
adc
jb
cs
lds
mov
push
aam
imul
push
popa
push
mov
xchg
mov
and
mov
jle
or
jae
adc
into
add
cmp
iret
cmp
add
addr16
imul
xor
loop
pop
js
and
inc
pop
popf
rcrl
fsts
pushf
outsb
ss
es
sbb
dec
adc
fdivl
cmpsb
jnp
fisttps
lods
test
jge
push
mov
fwait
xor
test
aam
or
xchg
repnz
add
negb
jo
push
std
adc
and
push
mov
repnz
cld
leave
lahf
or
pop
pop
mov
add
and
adc
in
dec
or
lcall
cmp
xorl
push
mov
out
cmc
mov
cmpsb
sbb
xchg
xchg
test
loope
out
repnz
scas
mov
fisubs
aad
adc
jae
mov
fisttpll
ds
aad
stos
sti
movsl
mov
data16
cmp
repz
lret
pusha
jmp
xor
cmp
xor
add
aaa
jge
or
push
pop
push
adc
and
cs
sub
jmp
mov
stos
jae
add
bound
aam
mov
pop
lret
shll
xchg
std
shl
pop
or
push
insb
dec
enter
jmp
movsb
jmp
popf
mov
mull
daa
push
bound
ret
push
ja
sub
jb
fwait
sub
test
das
add
mov
cmp
mov
push
mov
insb
shrb
push
jmp
daa
xchg
repnz
sahf
call
pop
fadds
xor
and
data16
inc
jl
pop
insl
fs
jno
jns
rorl
int3
inc
popf
ret
scas
sbbl
test
in
xchg
mov
sub
mov
outsl
mov
test
popf
je
xchg
in
xchg
and
add
icebp
xchg
arpl
fimuls
mov
xchg
iret
shll
clc
fcmovnu
jbe
mov
pop
in
jecxz
ja
xlat
push
or
sbb
push
xor
push
mov
pop
cmp
not
mov
xlat
and
inc
mov
cmp
mov
sub
int3
or
es
ret
imull
in
dec
gs
icebp
lahf
in
adc
xchg
xor
clc
mov
mov
jg
push
push
adc
jne
xor
mov
mov
idivb
mov
jmp
and
jns
xchg
adc
add
or
neg
adc
fidivrs
clc
mov
les
jmp
movsl
jns
inc
fildl
fbld
pop
rcl
mov
adc
enter
ror
aaa
xchg
cmp
add
icebp
in
frstor
nop
maxps
sbb
push
out
adc
mov
psrlq
cmp
push
arpl
cmp
push
ss
mov
subb
or
cmp
lods
or
mov
sub
or
inc
icebp
je
in
jns
div
lahf
movsb
lods
jg
push
fwait
loop
loop
mov
stc
sub
js
jg
mov
jmp
cmp
jmp
sub
shl
enter
insb
adc
mov
sub
inc
les
mov
dec
inc
loope
cmp
lahf
mov
dec
cmpsl
xchg
xor
push
mov
arpl
push
les
mov
out
mov
outsb
idivb
sub
inc
es
in
xor
insl
xor
xchg
cmp
cmpsb
and
pop
scas
push
pop
popf
imul
shlb
bound
cmp
and
ret
iret
out
ret
ret
inc
andb
lds
mov
pop
sub
xchg
and
int
ss
jp
fidivl
sub
inc
or
andl
out
sbb
dec
pusha
aad
adc
mov
daa
jp
mov
inc
ss
jge
push
xchg
shll
add
pop
scas
dec
dec
mov
sbb
sub
aas
es
mov
push
jle
inc
or
xchg
jns
into
jp
push
push
clc
inc
xchg
ja
mov
and
gs
fbstp
adc
ret
mov
shll
xchg
push
out
dec
push
pop
mov
or
push
jg
cmp
inc
les
mov
jle
divl
js
sbb
scas
mov
arpl
scas
enter
pop
add
cli
xor
add
cmp
andl
lock
ret
mov
cmp
mulb
pop
mov
cmp
jg
popf
add
jp
aaa
aas
loope
push
and
lcall
cwtl
inc
jmp
push
inc
push
dec
jge
mov
adcb
and
aam
outsl
pushf
mov
aad
into
lods
xor
ja
cmc
lcall
repnz
xchg
les
leave
push
popf
pop
test
or
pushf
xchg
sbb
xor
movnti
repz
and
inc
mov
adc
adc
movsl
fbld
add
cmp
inc
iret
jb
jnp
xor
lcall
pop
mov
fidivrs
xchg
xor
popa
xchg
in
dec
xchg
sti
stos
adc
cmp
cmpb
sti
add
jle
sub
or
lret
jns
add
fsubs
cmpsl
movsb
ja
pushf
aam
scas
out
je
nop
xchg
fstpl
jge
imul
stos
ret
gs
sbb
hlt
mov
cmpsl
sbb
mov
daa
and
and
stos
sbb
imul
cwtl
jbe
cmpsb
arpl
jb,pn
pop
test
cmp
pop
cmp
aaa
mov
xchg
sub
stc
push
sidtl
pop
pop
je
inc
popl
add
lret
stos
xchg
pop
add
nop
mov
push
je
inc
imul
sbb
enter
out
mov
cmp
inc
jg
or
test
outsb
das
int
out
stos
es
xor
sub
enter
xchg
jbe
insl
lds
cmp
mov
mov
arpl
stos
stos
pop
adc
push
mov
push
xchg
mov
xchg
das
jecxz
shlb
scas
xchg
sbb
mov
test
sbb
hlt
int3
add
push
push
mov
insl
ret
add
cld
mov
in
fsubl
fisttps
jl
inc
adc
push
cmp
xorb
mov
out
rcr
jg
push
jns
push
test
pop
adc
xchg
imul
clc
inc
cmpsl
je
int
cs
aas
lods
and
add
push
call
out
and
jb
imul
pop
pop
sbb
sbb
in
jecxz
jo
and
movsl
ljmp
and
test
inc
xchg
pop
xchg
fwait
pop
lahf
roll
insb
loope
in
push
and
push
insb
mov
sub
iret
adc
sbb
int3
aaa
push
addr16
dec
shll
xchg
negb
mov
cld
push
arpl
cmc
repz
sub
es
dec
inc
mull
repnz
out
push
and
pop
lcall
sub
jb
jno
xchg
shrl
iret
mov
pop
xor
push
dec
dec
mov
dec
mov
popf
testl
notb
fcoml
push
jbe
lret
add
lea
test
test
scas
mov
sub
xor
arpl
xchg
pop
out
into
dec
iret
pop
stos
lods
pop
data16
xor
xor
repnz
adcl
pop
fnstcw
add
inc
cmpsb
and
movsl
js
sbb
sahf
popf
sbb
gs
int
roll
jl
sti
inc
push
push
out
cmp
in
pcmpgtb
aad
pop
adc
sub
int3
xorl
add
sub
iret
xchg
xor
aas
or
hlt
mov
inc
loopne
and
mov
inc
adc
cmpb
pop
and
jbe
das
scas
test
popa
lods
fists
jns
cmp
imul
push
sbbl
mov
nop
fprem1
out
out
rclb
xchg
push
outsb
mov
mov
push
repz
movsb
test
push
push
sbb
test
sub
ja
scas
push
notl
ret
sbb
leave
subb
jae
loop
adc
aam
xchg
adc
push
push
pop
jno
fisttpll
aaa
adc
pop
mov
pop
insl
mov
cli
sub
jge
dec
inc
ja
push
or
add
add
into
hlt
adcb
push
sbb
outsb
add
sarl
icebp
in
push
je
lret
cltd
and
lcall
mov
lock
push
cli
jns
fld
jne
mov
hlt
repz
rsm
pop
bound
pop
sahf
inc
sbb
out
dec
pop
mov
lds
int3
psraw
jl
out
add
cld
leave
es
ss
jg
out
sbb
test
and
mov
dec
stos
sbb
xor
sub
inc
frstor
cltd
stos
das
loope
adc
xor
test
mov
insb
mov
fisubl
hlt
xchg
outsb
or
iret
ljmp
es
movsb
test
shlb
dec
mov
in
pop
jle
and
inc
mov
mov
xchg
in
push
rcl
movsl
sbb
std
in
cwtl
shll
pop
sbb
dec
dec
inc
iret
add
mov
sub
lock
out
ja
jns
pushf
in
out
ficompl
lret
xchg
sub
pop
jge
push
jno
xchg
inc
cs
adc
pop
dec
xchg
cmpsl
inc
scas
imul
aam
and
cmpsl
decb
fdivl
in
scas
or
ret
stos
mov
ret
mov
outsb
lret
cmpsl
push
daa
roll
je
loope
jns
pop
fcmovne
ds
cmpsl
jae
cmc
push
or
lcall
mov
xor
dec
xchg
adc
or
dec
hlt
cmpsb
push
lahf
pop
xchg
jns
iret
popa
add
call
sub
inc
shlb
in
mov
lods
push
fstpl
or
dec
lret
mov
push
fwait
cltd
shl
or
lahf
inc
popf
fisubl
jae
xor
jecxz
inc
and
xchg
mov
gs
xor
inc
iret
sbb
adc
mov
adc
cmpsb
mov
lock
pop
adc
jbe
loop
inc
jae
lahf
adc
popa
or
loop
xlat
pop
int3
call
test
stos
jp
push
test
pop
xor
dec
aam
in
pop
and
push
xor
bound
addb
loope
repz
jge
inc
jp
pop
mov
jge
push
fs
in
xchg
xor
dec
add
mov
dec
mov
int
dec
ja
gs
fidivl
lret
sub
adc
addr16
sarl
lret
inc
ss
xlat
cwtl
lods
fcmove
push
dec
test
sbb
fcomps
fidivs
add
cmc
adc
pop
jle
xor
add
out
out
lret
out
mov
or
cwtl
mov
fstpt
daa
inc
call
add
jl
xor
test
xor
cmpsl
ds
out
mov
leave
shlb
insl
clc
fidivs
rorb
push
mov
xor
js
into
mov
das
sbb
fists
xlat
shr
aaa
test
jo
or
or
sbb
dec
sub
push
mov
push
adc
cmp
mov
xchg
lods
js
inc
xchg
xchg
and
je
push
arpl
mov
ja
push
ss
pop
inc
mov
xchg
lods
xchg
imul
shl
dec
fnstcw
push
xlat
push
dec
pop
rorb
shrb
mov
pop
inc
repz
icebp
aaa
addr16
xchg
iret
je
lods
adc
adc
stos
xor
add
mov
or
lret
imul
or
inc
mov
mov
cmp
pop
mov
xor
repz
orl
jmp
lods
les
outsl
mov
jns
mov
dec
cmp
jbe
jmp
sub
push
ret
je
and
insb
je
movsb
xchg
and
sbb
jmp
fs
int
fcmove
shr
and
jg
push
loopne
arpl
shrl
iret
loopne
enter
shrb
mov
push
jb
aam
add
subb
sbb
insb
cmp
popf
lds
add
jecxz
cmp
lods
out
stc
ss
stc
push
adc
push
cmc
sub
fs
ja
pop
imul
aad
push
mov
pop
add
cmpsl
jnp
push
notb
mov
sbb
fldl
aas
icebp
push
das
mov
das
into
popf
jl
mov
mov
fdivrs
mov
mov
dec
inc
mov
push
xchg
dec
mov
icebp
adc
jbe
ja
adc
lds
int3
xchg
adc
sbb
cmp
ret
mov
lcall
fstl
fbstp
pop
pop
movsl
andl
cmp
pop
push
popa
mov
outsb
idivl
test
imul
pop
je
sub
out
mov
inc
rorl
cmpsb
push
add
sbb
push
hlt
les
jge
jmp
adc
out
sbb
rcll
xor
mov
sbb
xor
ret
jecxz
xor
stos
daa
aam
and
aaa
es
movsb
fistl
arpl
adc
lods
ds
fdivrl
dec
stos
mov
iret
sti
imulb
push
roll
jmp
adc
int
lods
repz
sub
mov
jo
pop
add
es
sahf
sbb
lods
movsb
scas
mov
mov
loopne
push
cmp
jle
out
push
sub
repz
negl
outsl
mov
and
in
imul
xor
or
xorb
push
xorb
call
fcom
outsb
andl
out
push
mov
js
cld
jmp
repz
add
add
nop
and
lret
jae
ficoms
sub
mov
cmp
inc
jae
pop
mov
xchg
or
add
lahf
mov
jl
ja
jge
add
and
loop
sub
leave
repz
cmp
int3
pop
jl
dec
pop
push
dec
ja
sub
mov
std
inc
xor
jg
push
sbb
ret
js
and
clc
jns
mov
jl
fisubrl
mov
das
fnstenv
aad
insl
in
pop
inc
inc
jno
fnstcw
aaa
movsl
mov
shrb
pop
and
dec
fmuls
mov
sbb
stc
stos
inc
cmp
xchg
mov
sub
scas
rorb
lret
jbe,pt
notb
ret
in
cmp
or
inc
sub
xlat
loope
push
loop
in
xchg
dec
movsb
js
sbb
dec
in
inc
psrlq
sbb
jno
pop
out
pop
jmp
iret
cmp
out
push
mov
dec
bound
adc
lcall
sti
sub
push
mov
cmpsl
mov
dec
nopl
loopne
insl
sbb
out
mov
sbb
bound
adc
das
into
inc
les
test
xor
ss
mov
lods
cs
cmp
popa
stos
dec
in
and
dec
mov
aad
add
mov
lock
xchg
outsl
out
lret
popf
shl
mov
loop
jns
jge
js
das
imul
xor
fwait
and
pop
add
or
pop
ds
sbb
mov
jl
mov
imul
mov
cltd
stos
outsl
inc
stos
push
jne
cs
daa
add
pushf
mov
xchg
out
pop
add
lock
fwait
cmc
pushf
jp
pop
movsl
xor
inc
and
adc
xor
std
add
inc
outsb
mov
les
sti
xor
push
fidivl
std
mov
push
and
rol
inc
lock
lds
pop
pop
mov
imul
or
out
xor
cmc
sbb
inc
adc
sbb
ljmp
out
enter
and
push
push
in
fwait
push
sbb
into
cmp
jp
jnp
movsl
sub
mov
adc
xor
stos
pop
adc
je
and
adc
sub
mov
mov
mov
sti
fwait
popf
leave
sub
adc
dec
push
fldcw
pushw
outsb
mov
mov
mov
dec
addr16
push
push
inc
adc
xor
pop
lret
adc
mov
cwtl
fdivs
movsb
adc
loopne
xor
xchg
ret
addl
mov
push
aad
dec
jp
fcompl
lods
fndisi(8087
adc
mov
inc
testl
lret
popf
jg
lods
or
dec
repnz
jg
jg
mov
mov
mov
pop
lret
sbb
xchg
sbb
ljmp
mov
and
sbb
jo
out
mov
lcall
insb
enter
ljmp
out
jno
inc
adc
xor
mov
push
daa
loop
pusha
cmpsl
fsqrt
mov
out
test
add
cmp
jge
hlt
add
or
xchg
xchg
iret
popa
negl
or
mov
xor
fwait
or
jmp
test
jge
std
pusha
mov
pop
enter
fcmovnu
stc
mov
int3
fistpl
leave
addl
add
push
rcrl
pop
and
cltd
pop
fisubrl
adc
arpl
pop
imul
dec
xor
shrb
push
pop
xchg
into
fdivrl
or
lahf
in
xlat
ja
xchg
sub
test
push
lods
cmpsb
inc
es
add
ret
cmp
jbe
add
push
fwait
test
adc
and
xchg
xlat
pop
aaa
dec
pop
outsb
adc
sbb
call
sbb
and
xadd
scas
cmp
dec
mov
dec
sub
arpl
and
pushf
ljmp
in
das
ds
or
scas
lock
rolb
es
mov
test
cmp
inc
mov
push
movsl
sahf
add
imul
push
test
insl
testl
shl
sbb
aaa
jge
bound
push
int
xor
rorb
mov
fmull
xlat
and
shl
jge
and
xor
mov
xchg
outsb
fildll
and
xchg
push
sub
ds
popf
std
dec
int3
mov
in
adc
lret
pop
dec
arpl
mov
mov
repnz
ja
outsb
jno
xor
das
push
push
js
cmp
lea
inc
ja
outsb
cli
jg
xchg
subl
into
rcrb
cld
fbld
adc
sbb
or
adc
jae
jnp
add
nop
inc
jns
arpl
ror
data16
push
neg
sub
leave
lock
cmp
rcl
sub
pushf
add
dec
adc
and
shl
mov
nop
dec
stos
sbb
hlt
cld
xchg
jl
js
pushf
out
push
ficompl
pop
ljmp
add
push
cmp
mov
in
int3
lret
xchg
lcall
mov
es
mov
add
push
adc
mov
pusha
mov
out
mov
scas
es
jbe
fcoml
jnp
data16
push
fbld
jg
ret
jecxz
mov
repz
pop
lods
popa
cmpb
or
mov
in
test
je
jmp
xor
push
sbb
lret
sbb
mov
test
and
jg
loope
cmpsl
mov
mov
and
stc
das
xorl
loope
pusha
test
xchg
pop
mov
mov
outsl
jno
and
mov
mov
inc
jp
shlb
sub
push
push
add
jg
aaa
sbb
lret
stos
sub
test
jae
dec
push
pop
or
cmp
xchg
push
call
outsl
cmp
loopne
clc
testb
pop
hlt
or
pop
mov
outsb
jne
in
add
mov
lds
scas
fcos
jne
pop
or
movsl
int
jp
jmp
rcll
sbb
xchg
jmp
cld
lds
add
xor
inc
dec
mov
lret
pusha
add
das
adc
cmpb
push
clc
mov
xchg
stos
pop
ss
jns
rorb
or
cmp
gs
xor
lahf
or
xchg
mov
stos
xchg
jmp
test
in
sbb
adc
insb
jno
cmp
adc
sbbb
add
mov
mov
and
jbe
mov
xor
fwait
add
mov
mov
and
cmp
xchg
jle
adc
test
push
pop
pop
adc
cmp
je
cmc
mov
ss
xor
lret
jae
mov
pop
stos
mov
mov
sub
out
inc
sbb
add
push
fistl
mov
xchg
sbb
jmp
sbb
int3
or
jo
ficomps
mov
es
push
mov
dec
push
xor
inc
popa
cmp
mov
push
dec
jb
adc
es
xlat
jmp
and
je
out
push
xchg
pop
lcall
fisttpll
and
mov
movsl
sub
enter
daa
shll
into
fldt
sub
adc
les
lea
sub
and
sbb
xchg
inc
rclb
sub
jbe
mov
and
scas
cmpsl
mov
addr16
mov
cmp
or
imul
jmp
rolb
jbe
std
mov
adc
and
jo
xor
pop
inc
push
icebp
mov
dec
in
lcall
popf
in
cmp
jle
addl
sub
imul
or
in
divb
les
fldenv
mov
sbb
or
push
stos
lds
xor
jmp
aam
pop
adc
hlt
out
xchg
bound
xor
out
daa
lea
jb
ret
sbb
cmp
nop
shlb
insl
ret
sahf
sbb
mov
mov
test
sbb
sub
stos
push
pop
xor
mov
pop
xchg
pop
hlt
aad
je
lock
jg
sub
pop
orb
clc
pop
popf
cltd
push
add
jae
inc
imul
mov
scas
sti
mov
add
jecxz
xchg
sbb
std
push
add
xchg
je
adc
and
jmp
and
jge
mov
inc
jnp
call
sub
jecxz
xchg
ds
pop
add
cmp
inc
icebp
cmp
lods
insb
pop
jmp
mov
sarl
nop
imul
jle
sub
jb
xchg
dec
dec
stos
push
lea
cmp
mov
scas
xlat
and
sbb
popa
mov
popa
in
pushf
outsl
fisubrs
nop
mov
sbb
mov
mov
fisttps
aad
and
call
xorl
push
push
cmp
outsl
mov
insl
aad
into
movsb
push
ss
xchg
dec
lcall
adc
inc
jns
insl
addr16
push
add
frstor
mov
or
mov
dec
pusha
hlt
popa
test
xchg
ret
xchg
out
cltd
popa
jge
arpl
and
xor
icebp
mov
fimuls
outsl
xchg
je
cmp
movsb
rolb
test
cwtl
jae
adc
ss
aad
adc
adc
mov
gs
sti
aam
pop
sub
icebp
sbb
int
mov
loop
pop
push
sub
into
xchg
mov
xchg
jg
push
cmp
or
fbstp
pop
cs
pop
hlt
sahf
repz
ret
lahf
xchg
pop
insl
and
les
dec
dec
or
ja
cmp
pop
inc
mov
sti
int
fwait
pushf
and
lcall
dec
push
arpl
gs
xorb
jnp
stc
pop
arpl
sahf
pop
lods
mov
shll
mov
popf
sub
push
cmp
mov
inc
in
mov
pop
movsb
lret
sbb
mov
shr
ret
cli
add
adc
xchg
testb
cmp
lods
xlat
testl
sarb
push
cmp
adc
movb
mov
jb
pop
adc
cli
aam
push
adc
mov
cmp
cwtl
jno
pushl
mov
xor
or
mov
add
out
cmp
pop
test
out
push
dec
jl
pop
adc
lock
rorl
xor
clc
xchg
jnp
aas
ret
xor
dec
rorl
hlt
mov
lret
xor
call
or
push
leave
mov
lret
outsb
or
or
icebp
jmp
fldl
cld
scas
stos
mov
mov
pusha
mov
out
push
scas
xlat
test
fadd
xor
cmp
adc
push
loope
rcrl
out
inc
pusha
dec
push
lcall
mov
add
sbb
int3
pop
in
repnz
into
pop
push
scas
dec
lcall
es
and
ret
xchg
insb
mov
dec
lcall
and
sbb
jns
insl
aaa
sbb
aad
adc
mov
test
xchg
adc
jne
and
push
or
popf
sbbb
iret
icebp
or
sub
xorb
popa
iret
xchg
add
je
cmp
or
sbb
negb
insl
push
std
dec
arpl
mov
pop
inc
cmp
std
pop
push
test
cmp
cli
pop
imul
sbb
imul
pop
test
call
lret
xchg
jbe
loop
std
sub
jg
mov
adc
mov
scas
cltd
movsl
dec
cmpsl
imul
test
ljmp
out
cmp
xor
or
pop
inc
loopne
mov
pop
cmp
jle
sbb
loop
loopne
push
dec
xchg
cmp
aad
pop
in
or
aaa
and
adc
hlt
push
cmpsb
mov
loop
aam
aam
dec
jmp
mov
inc
rolb
pop
mov
aaa
sarb
cmp
or
pop
jnp
dec
mov
fildll
test
and
or
js
sarb
daa
sbb
iret
in
test
cmp
out
out
aad
cmp
xchg
mov
mov
mov
mov
nop
iret
jg
mov
push
aad
xor
push
imul
aaa
repnz
dec
jo
scas
sti
outsl
pop
mov
mov
pop
loope
dec
popa
xor
jo
mov
xchg
and
xchg
push
push
xchg
mov
outsl
lret
push
xor
jmp
jecxz
add
sub
xchg
fimull
pop
hlt
fiaddl
dec
jnp
lock
aad
pop
or
js
leave
adc
inc
fcomps
cltd
fisubl
in
out
sbb
jmp
xchg
andb
mov
mov
shll
adc
loop
sub
cmc
aas
ror
push
push
testl
fs
stos
pushf
add
xorl
sti
push
hlt
xor
cmp
enter
test
daa
in
xchg
movl
clc
lods
ljmp
rcl
dec
movsb
in
inc
pop
mov
mov
cmpsl
shlb
int3
ret
mov
iret
and
or
loope
andb
pop
sub
inc
and
fisubl
adc
xchg
stos
push
sbb
sub
jge
lods
xor
je
xlat
push
jl
cmp
cld
sti
cld
mov
mov
sbb
test
dec
xchg
jmp
orl
das
mov
mov
mov
stos
fisubl
cmpsb
xchg
ljmp
fnstcw
adc
adcb
pop
es
cmp
aad
inc
subl
xor
push
dec
xor
mov
dec
xor
scas
adc
cwtl
cmp
cwtl
in
and
movsl
gs
out
sub
sbb
dec
adc
fdivrl
insl
sbb
push
fsubr
imul
jecxz
repnz
adc
ljmp
test
sbb
test
inc
and
mov
xchg
inc
and
xlat
jno
lcall
push
jp
flds
xchg
fidivrl
inc
lret
test
int3
loopne
cmp
sbb
push
mov
push
push
in
jns
rcrl
inc
add
jl
nop
mov
decl
push
sbb
mov
xor
dec
fs
sbb
jo
rorb
nop
mov
pusha
pop
bound
fmull
mov
jo
mov
mov
sbb
popa
ret
mov
pop
andl
daa
push
aas
enter
lock
sbb
ret
pop
and
mov
cs
or
add
test
aas
sub
pop
jns
loope
mov
shl
movsl
jno
sar
sub
hlt
sub
lods
or
mov
sbb
pop
mov
sub
insb
loopne
mov
or
jmp
sub
mov
and
shll
pusha
decl
sbb
rclb
push
je
jge
orl
int
mov
xchg
mov
mov
fsubl
push
xor
push
lods
push
iret
lds
arpl
pusha
jne
push
push
cmp
stc
outsb
arpl
sbb
in
sbb
aad
jle
insl
cmp
cli
jb
loope
das
movsl
cld
push
xchg
insb
lahf
push
in
push
jp
mov
vmulss
jecxz
cmp
add
ss
mov
adc
push
inc
push
sbb
inc
dec
mov
out
push
lret
pop
dec
lods
gs
jno
push
xchg
add
lea
xor
ret
hlt
add
aad
mov
addr16
lret
sub
mov
lret
or
jl
push
sbb
push
mov
enter
insl
divl
frstor
lds
scas
mov
fcomi
pop
in
je
repnz
mov
les
imul
add
xor
dec
pop
out
push
adc
jno
mov
push
jmp
out
inc
xor
mov
je
cmp
sub
jae
cwtl
popf
icebp
and
dec
mov
stos
add
hlt
sti
mov
jne
pop
sbb
push
cmpsb
pop
or
lahf
mov
jns
xor
es
ret
jle
inc
adc
xchg
jle
adc
call
inc
add
test
jl
cli
test
xor
jecxz
shrl
jb
fucomp
ret
jns
in
mov
pop
inc
dec
lcall
xor
cmpsb
leave
idiv
aas
mov
or
cli
in
adc
add
pop
int3
dec
pusha
push
dec
pop
xchg
mov
mov
push
test
add
mov
sbb
fcompl
dec
jp
movsl
orl
out
adc
daa
imul
fstps
clc
pop
insb
xor
aas
adc
push
inc
js
jne
inc
pop
mov
movsl
cmp
dec
pop
mov
or
jmp
pop
inc
or
pop
jns
adc
add
xor
push
sti
pop
adcb
clc
xor
es
inc
mov
in
sar
sarb
outsb
fiadds
outsl
inc
inc
movsl
movsb
inc
popa
fs
shll
add
mov
sbb
xlat
pop
push
lds
test
cmpl
sbb
xchg
sub
jnp
repnz
outsb
adc
imul
jge
clc
daa
jge
xchg
leave
hlt
outsb
ss
lahf
loop
inc
push
inc
sub
fimuls
sub
sarb
mov
sbb
sbb
repz
adc
pusha
mov
push
mov
imul
xchg
mov
cmp
out
enter
inc
jnp
xor
push
pop
fistl
out
imul
test
fadd
jo
aas
adc
sahf
out
xchg
les
mov
inc
mov
jl
add
das
sbb
dec
je
enter
jbe
jecxz
stc
cmp
cmp
sub
push
pushf
int
or
out
aad
sti
cmc
test
movsb
cmc
insl
lods
mov
fsubl
imul
fsub
bound
mulb
adc
inc
sub
pop
outsb
push
aam
pushf
dec
iret
dec
arpl
sub
xor
push
mov
int3
add
lea
cmp
adcl
cltd
pop
out
or
clc
xor
in
stos
into
aam
fsubrl
or
xchg
cmpl
jl
dec
xor
lret
cmpsb
icebp
jle
in
jo
mov
xchg
shll
xorl
lods
push
insb
pop
sub
decl
orw
jecxz
mov
dec
sub
adc
lret
or
cmp
fstps
into
xor
fcomps
jmp
mov
sbb
lods
stos
stc
xchg
add
shlb
mov
push
sub
jo
xchg
cmp
aad
push
and
ret
jg
mov
dec
push
mov
xor
inc
stc
rcrb
mov
out
popa
enter
imul
scas
aam
jbe
mov
mov
out
and
es
or
aaa
bswap
shrb
push
int
out
or
push
jb
add
and
cmp
enter
addr16
jp
push
push
adcb
or
mov
add
lret
addr16
jp
movsb
add
xchg
inc
cmp
dec
and
in
push
aam
cmp
das
movsb
int
clc
lcall
addb
mull
sub
mov
mov
mov
movsl
sub
cmp
hlt
stos
arpl
lret
sub
loopne
mov
fistps
aas
es
test
sbb
js
adc
sbb
out
jp
fucomp
je
int3
mov
pop
jge
fwait
sub
out
mov
sbb
or
scas
dec
mov
or
push
sub
std
jp
sub
je
push
nop
stos
adc
ja
ffreep
push
iret
in
sbb
daa
lods
mov
and
push
cmp
mov
mov
clc
cmp
daa
adc
cltd
pop
and
or
negb
and
sub
xor
xor
orb
in
dec
xor
cltd
adc
sub
jbe
sub
out
or
aaa
fwait
ror
das
out
mov
test
sub
inc
test
popf
inc
orl
pop
cs
add
insb
mov
pop
dec
addl
ds
movsb
dec
int3
jecxz
gs
pop
adc
pop
addr16
gs
dec
cmc
loope
fs
add
sub
mov
xchg
adc
aad
and
and
mov
dec
pop
jo
push
pop
push
fwait
popa
sub
pop
je
icebp
int3
push
lds
lahf
inc
sarl
xlat
addr16
push
pop
xor
dec
cmpsb
inc
fimuls
mov
call
pusha
jmp
dec
sbb
pusha
fmuls
xchg
mov
pop
movsl
cmp
bound
std
js
addr16
mov
inc
adc
addr16
shrl
mov
cmp
and
adc
sub
je
in
es
adc
cmp
mov
outsb
cmpsl
in
out
and
mov
xchg
imul
or
leave
pop
lds
cmpsl
jne
in
jecxz
jmp
xchg
into
push
mov
ja
inc
sbb
and
aas
pop
mov
ljmp
fs
movsl
jno
icebp
lcall
cmp
imul
divl
sub
pop
jo
in
repnz
enter
push
push
mov
sbb
icebp
cld
jmp
ljmp
loopne
jo
in
mov
xor
cli
or
lea
lcall
std
divl
aad
hlt
fadd
xor
jle
fnsave
rorl
xchg
mov
lret
test
adc
orl
les
adcl
int
mov
inc
pusha
enter
sub
sarl
adc
std
dec
mov
nop
outsl
xchg
aaa
repnz
sbb
cmp
scas
dec
cmp
cmp
in
jp
test
psllq
sub
xor
ljmp
xor
lcall
or
call
fcompl
jge
outsl
loopne
enter
scas
inc
popf
xchg
mov
insl
adc
inc
xor
daa
pop
bound
shll
or
sub
jo
mov
xor
dec
xchg
gs
sbb
mov
push
test
dec
push
js
inc
xchg
sbb
rolb
pop
fwait
inc
adc
inc
dec
lahf
mov
xor
xchg
mov
cmc
or
jg
outsl
lds
pop
pop
sbb
adcl
es
xchg
sbb
add
js
lods
leave
pushf
jmp
adc
imul
pushfw
mov
scas
inc
and
sbb
or
adc
sub
jecxz
insl
cmp
sub
jge
sbb
sbb
enter
jbe
xor
mov
data16
xorb
imul
movsb
testl
add
mov
sub
bnd
pop
jp
push
arpl
jp
jmp
pop
out
adc
xor
je
scas
ror
mov
adc
je
inc
mov
add
xor
mov
inc
scas
xor
bnd
lcall
loop
ss
aaa
or
icebp
xchg
jbe
sub
popf
sub
imul
adc
pop
mov
in
fs
mov
aad
scas
fisubrs
adc
mov
mov
movb
fimuls
jp
in
xor
cltd
and
inc
push
jp
clc
pusha
push
add
jge
pushf
sbb
push
xor
imul
mov
and
sbb
sbb
out
xchg
addb
or
push
add
test
shrl
fstpl
xor
daa
in
sub
xor
sahf
das
aaa
aad
cmp
push
cmpsb
movsl
in
cmc
fsts
sbb
inc
dec
imul
cmp
data16
pop
push
sub
and
pop
add
dec
add
lret
aaa
lods
adc
cltd
mov
pop
dec
sub
fcoml
mov
and
mov
mov
xor
sbb
fidivl
dec
pop
xchg
xchg
push
std
inc
xchg
shrb
cmp
xchg
xor
dec
inc
sbb
je
jns
push
js
mov
iret
in
ss
sbb
cli
outsl
test
push
in
jp
mov
repz
les
pop
fists
cmp
sbb
hlt
mov
das
adc
push
pop
push
cld
adc
xchg
jns
xchg
xchg
adc
inc
inc
push
and
xor
cld
aaa
mov
idiv
push
shrl
xlat
ljmp
sub
into
or
sahf
and
lret
arpl
mov
cli
cs
cmp
mov
sbb
cmp
mov
xchg
icebp
int
enter
mov
popf
cld
bound
lods
mov
fnsave
or
or
push
jl
ret
in
mov
orb
mov
mov
cli
lods
andb
inc
sbb
insl
neg
sbb
dec
mov
pop
jl
movb
sub
xchg
pop
arpl
cmp
and
pop
aam
ds
imul
or
inc
dec
movsl
or
add
xchg
or
int3
add
in
out
outsb
dec
mov
xor
aad
imul
lods
testl
adc
jl
inc
mov
insl
cltd
cmp
mov
insb
mov
das
in
mov
or
inc
xchg
pop
scas
inc
xor
cltd
sub
xchg
add
push
lods
pop
and
sub
aaa
push
jne
jbe
mov
jno
loope
sbb
inc
in
sbb
jg
jecxz
in
lods
inc
jnp
in
out
pop
xchg
sub
add
shll
dec
mov
sbb
inc
jae
gs
xchg
or
movsb
add
ja
pop
pop
mov
jnp
add
jb
pusha
dec
cmpsl
out
adcl
call
cmp
std
pop
pop
xchg
fnstcw
adc
icebp
push
fsubs
imul
push
mov
mov
mov
loope
sbb
or
sbb
adcb
popf
dec
daa
sbb
pop
aas
mov
shl
out
subb
push
cmp
repz
rclb
jbe
cltd
mov
bound
cltd
clc
cmp
movsl
jns
pop
mov
jae
shll
dec
mov
and
daa
push
inc
test
dec
pop
sub
leave
into
dec
ret
repnz
mov
adc
aas
sbb
push
out
addr16
loope
or
shlb
rcll
inc
aas
rcll
ret
sbb
insb
pop
inc
ljmp
adc
pop
fdiv
arpl
jb
jnp
xor
pop
data16
cmp
cmpsl
push
and
cltd
jo
add
mov
int3
xlat
cmp
cmp
pusha
xchg
adc
outsb
out
std
jge
or
insl
mov
or
dec
xor
int3
pop
lods
incl
ljmp
test
adc
scas
xlat
push
dec
adc
push
cmp
rorb
fistpll
pop
decl
push
xor
sub
fisttpll
mov
adc
mov
shrb
push
fldl
push
mov
in
cmc
sahf
pop
mov
inc
aad
sbb
dec
add
je
adc
negl
movsl
xchg
sub
add
pop
sub
mov
leave
enter
rol
sbb
sub
xor
push
fiadds
mov
sbb
dec
lods
int
fisubl
out
pop
gs
mov
fscale
mov
roll
sub
mov
repnz
nop
cmp
mov
out
repnz
sub
mov
clc
fnstsw
or
lock
popa
ja
dec
mov
fs
jle
rcr
int3
lret
dec
pop
sbb
or
sub
xchg
or
fmuls
cmpsl
dec
adc
je
mov
std
pushf
xchg
mov
fistps
movl
ljmp
outsl
mov
ret
ja
mov
scas
fucom
out
lds
fidivl
or
push
or
jmp
fwait
call
xorb
outsl
pop
call
je
ds
pushf
push
xchg
mov
out
sbb
icebp
jle
mov
sbb
mov
fmul
adc
daa
pop
fstpl
push
push
push
fs
ffreep
imul
arpl
dec
jmp
gs
out
adc
dec
ret
cmp
sub
xchg
jne
cmp
sub
adc
lret
push
xchg
adc
push
push
scas
enter
inc
stos
sub
in
in
or
pop
jno
xor
fmuls
inc
xor
push
push
loope
push
push
push
or
and
pushf
jecxz
fbld
test
xlat
repnz
rol
jecxz
dec
je
je
shlb
cmp
in
mov
pusha
mov
sbb
pushf
test
or
add
out
gs
push
sbb
pop
out
imul
sub
or
ret
cwtl
insl
sub
insb
pop
movsb
cli
out
push
sbb
mov
push
mov
ds
xchg
add
add
sub
jne
add
mov
xor
dec
mov
out
sbb
jp
dec
and
or
or
sti
jecxz
call
cli
and
mov
lcall
cld
int3
or
pop
jge
cs
jmp
xchg
or
insb
pushf
lahf
cmp
sahf
pop
jne
cmp
inc
mov
pop
movups
mov
mov
add
jb
in
xor
and
das
add
hlt
inc
adc
daa
dec
scas
xor
inc
jle
dec
test
out
shrb
dec
cmp
jb
dec
xchg
aad
test
jp
rcll
lock
pusha
jge
inc
mov
dec
push
rcrl
mov
add
push
push
ss
out
clc
loopne
leave
sub
test
xor
gs
mov
jno
xchg
enter
loope
jns
xchg
push
sub
out
sub
pminub
mov
rcrl
jnp
out
mov
adc
pop
sahf
arpl
dec
mov
in
adc
es
ret
aam
sarl
test
dec
dec
rorb
imul
iret
mov
mov
push
cmpsl
mov
mov
dec
pop
mov
repz
jno
push
jge
test
jmp
ret
jge
or
popa
dec
rcrl
jnp
xchg
stos
mov
fs
std
jmp
cmp
out
and
shll
push
dec
and
orl
jmp
loop
mov
add
sub
nop
les
pop
jecxz
xor
dec
das
imul
enter
push
cmpb
jp
xor
push
inc
dec
xlat
les
iret
sbb
xchg
jle
inc
sub
adc
jle
adc
test
lret
test
aam
fdivl
cmp
or
scas
push
clc
mov
fstps
lds
dec
mov
xchg
setle
lock
jae
mov
mov
stos
popf
ret
dec
xor
aas
in
sub
je
stos
mov
mov
test
cmp
insb
in
mov
sub
adc
scas
xor
and
push
cs
cmp
test
xchg
arpl
mov
sub
cltd
ret
cmpsb
mov
int3
adc
xchg
sbb
sbb
stos
mov
sbb
jmp
inc
ss
in
rolb
lods
mov
bound
nop
mov
push
jae
nop
fcoms
sbb
xor
mov
jno
sbb
out
and
adc
hlt
push
push
idivb
nop
xor
fists
mov
and
rcl
clc
jns
cmp
aam
lret
cs
sub
xor
adc
addl
aaa
lcall
xchg
movsl
xchg
rcrl
fcompl
subl
xor
push
cltd
xchg
jl
in
add
push
push
cmp
lods
pop
orb
and
ret
les
pop
out
cmp
mov
xchg
xchg
push
pop
jns
mov
mov
pop
int
ficoml
and
ret
test
sub
mov
sub
mov
scas
andl
cltd
incl
add
mov
mov
js
cmpsb
orl
push
xor
mov
inc
push
mov
mov
jg
jmp
dec
push
cmpsl
xchg
inc
test
or
aam
ficomps
out
inc
inc
gs
xchg
or
push
and
ret
and
push
and
lea
mov
rol
aas
xor
inc
aas
cld
jnp
jns
or
mov
and
aam
out
in
dec
icebp
push
mov
outsl
inc
mov
lret
mov
scas
subb
iret
in
sub
jae
jecxz
jmp
mov
int3
into
lods
icebp
push
jge
sub
mov
frstor
pushf
adc
xor
je
scas
repz
call
xchg
add
adc
cmp
fdivr
test
ret
add
mov
int3
mov
xchg
jmp
adc
mov
lret
and
sti
xor
cmp
adc
insl
dec
mov
and
int3
scas
mov
and
mov
push
scas
xchg
add
fsubp
pop
pop
mov
dec
jge
sarl
aad
loopne
negl
push
divl
push
outsb
lahf
insb
loopne
fiadds
jae
data16
out
or
jecxz
mov
sbb
xor
push
mov
hlt
out
inc
das
cmp
xchg
or
aas
jo
xchg
mov
and
and
mov
ss
jno
mov
xor
mov
jae
push
dec
add
mov
lahf
popf
mov
mov
xor
ljmp
cmpsl
push
adc
cmpl
push
xchg
pop
rcll
frstor
lret
stos
repz
cli
xchg
jmp
dec
mov
js
cli
fwait
cmp
lcall
add
or
inc
jno
outsl
insb
jno
and
icebp
hlt
mov
enter
jb
jae
jle
adcb
mov
jmp
out
cs
xchg
lret
jp
push
sti
add
iret
pusha
add
movsl
gs
jle
loop
std
xchg
notb
lods
test
xor
cmp
testb
imul
addr16
imul
or
outsl
lret
xchg
cmp
lcall
outsl
dec
cmpsl
cli
xchg
frstor
or
dec
add
in
outsl
lods
inc
dec
mov
mov
adc
push
das
aam
int3
loop
sub
adc
and
imul
clc
hlt
adc
xor
cmp
aad
pop
cltd
loop
pop
adc
cmpsl
lcall
movsl
iret
pusha
sub
pop
iret
adc
dec
test
fcom
es
sub
jle
push
xor
cmp
lock
push
push
stos
incl
jge
adc
out
cmp
out
cwtl
inc
mov
or
xlat
push
insl
adc
jg
push
cmc
lret
loope
movsb
xor
clc
sub
mov
js
jo
shrl
lcall
or
mov
jmp
inc
scas
xchg
fcoml
notb
stc
inc
shlb
mov
and
mov
stos
das
pop
popf
dec
xorb
js
mov
cmp
xor
xor
xchg
add
adc
and
lods
rorb
fidivrs
cwtl
jae
mov
jo
call
int
scas
call
nop
dec
sarl
jns
mov
mov
test
fbld
sbb
shlb
sbb
mov
xor
and
jmp
insl
scas
insb
mov
or
push
shrb
mov
lcall
dec
mov
in
cmpsb
and
dec
push
in
cmpsb
adc
inc
popf
xlat
sub
mov
mov
xor
adc
into
jo
fwait
sbb
loope
mov
push
scas
inc
mov
jb
pop
loope
dec
popf
arpl
mov
mov
sbb
add
and
mov
sub
adc
xor
fcoml
shrl
fbld
and
icebp
cmp
or
xor
pusha
mov
test
insb
lret
or
stos
ret
pop
js
nop
popa
je
push
mov
add
inc
bound
adc
test
idivl
adc
dec
sarl
inc
mov
das
fimuls
leave
mov
push
into
mov
sub
sbb
aam
xchg
pusha
movsb
sbb
outsl
jnp
inc
rorl
jmp
scas
xor
stc
pop
pop
out
xchg
lret
cmp
lcall
xor
jg
les
test
add
mov
je
mov
or
cmp
ret
fisttpl
push
pop
out
js
imul
add
xchg
mov
notl
js
adc
mov
dec
neg
push
fidivrl
arpl
ds
ja
jo
ficoms
mov
jno
or
xor
stc
jb
xor
mov
scas
pop
cltd
mov
pop
cmp
push
icebp
adc
xchg
ds
sub
dec
mov
dec
aam
sbb
jle
dec
cmpsb
mov
add
xchg
sti
mov
int3
push
ret
jmp
mov
mov
sbb
test
lds
lret
add
scas
mov
jg
xor
into
push
shrl
push
add
outsl
pop
cmpsl
in
push
jnp
test
out
fldcw
push
in
fdivr
hlt
test
sti
shlb
cmpsl
xchg
ss
xor
mov
stos
rcl
sbbb
rorl
int
in
lcall
jl
in
jle
cmp
pop
and
sub
push
ud0
clc
mov
daa
sahf
pop
adc
lds
sub
xchg
test
ja
push
and
mov
outsb
imul
inc
pop
aad
mov
add
push
loop
xchg
jb
scas
push
cmp
cmp
icebp
mov
and
call
icebp
sbb
add
cmp
subl
mov
in
in
cmc
mov
popl
insb
pop
repz
xchg
test
dec
mov
out
xchg
jl
pop
sbb
jno
jbe
inc
test
lods
sbbl
xchg
mov
mov
inc
dec
movb
jbe
movsl
dec
outsl
fucomi
inc
xchg
movsb
cmc
rolb
stc
add
push
ror
cmpsl
adc
xchg
sbb
lods
enter
lods
cmp
dec
or
and
xchg
es
push
mov
add
jns
mov
xchg
sbb
add
fstpt
and
inc
cmp
pop
out
or
dec
mov
sbb
or
nop
mov
mov
xor
test
push
popa
add
pop
pop
lcall
cmc
out
outsl
inc
jmp
cld
adc
xchg
pop
xor
fdivs
cmc
add
mov
push
loopne
jbe
cs
adc
mov
xor
or
int
jae
test
int
cmpsb
sbb
sub
repnz
push
sub
add
jne
js
ret
pop
push
stc
movsl
add
orb
fldcw
lods
xchg
xor
rorl
sub
mov
xchg
hlt
iret
mov
dec
into
shl
adc
pop
addr16
jge
jno
xlat
lock
cmp
sub
imul
int
enter
pop
lods
sub
mov
mov
test
int
das
mov
adcb
es
aaa
cmpsb
mov
push
nop
pop
addr16
icebp
mov
jae
sbb
mov
mov
mov
nop
ficompl
repnz
stc
sub
sub
jge
add
loope
aas
cwtl
push
cmc
mov
jb
jo
jmp
sub
jno
lock
fsubp
mov
ja
rcll
inc
adc
cmpsl
inc
gs
stc
jp
scas
out
inc
mov
push
xor
data16
fisttpl
out
push
jl
lret
mov
dec
cli
bound
sbbb
xor
fwait
popf
mov
ss
stos
in
xor
inc
add
inc
push
pop
das
or
in
cmpsb
sahf
sub
lahf
sub
mov
dec
popa
xchg
sti
xchg
roll
cmpsb
repz
ret
adc
outsb
push
dec
and
dec
mov
mov
adc
ds
push
mov
js
xchg
mov
inc
fsubr
add
jns
les
add
xchg
jns
lds
mov
loope
sbb
xor
pop
test
mov
dec
shll
jae
lret
push
pop
add
stos
adc
jg
lea
popa
push
push
jo
pusha
sub
jmp
sub
jle
add
sbb
cmpsl
inc
fstps
inc
pop
cmpsl
sbb
mov
leave
dec
loope
or
xchg
cld
arpl
pushf
pop
add
mov
mov
sbb
push
cmpsb
negl
movsl
sarb
sbb
ljmp
or
ds
ljmp
xor
fistpll
jno
add
mov
hlt
cld
stos
xchg
xchg
ret
nop
cli
or
jmp
loope
add
or
dec
xchg
or
sbb
fsubs
sbb
imull
insl
pushf
das
into
ljmp
mov
sti
rorb
adc
jge
ja
dec
pop
jg
cwtl
xlat
adc
adc
push
ljmp
hlt
jg
inc
movl
imul
push
sub
mov
outsb
nop
lds
loopne
push
and
and
imul
xchg
and
out
rcrl
xchg
movsl
adc
dec
aad
jb
std
jle
push
push
cmpsw
jb
mov
mov
sub
sbb
stc
sbb
or
sahf
or
sub
jg
push
inc
pop
and
dec
xor
clc
sub
inc
outsl
lods
xchg
popl
xor
mov
bound
rclb
xlat
je
neg
xchg
pop
out
enter
fs
jne
and
cmp
cmp
mov
cli
jno
es
das
pop
loop
cmp
pop
dec
jge
ja
cmp
xchg
add
in
jge
push
or
or
shr
lods
sbb
mov
clc
xor
ljmp
and
push
mov
xchg
jnp
push
pop
adc
pushf
aad
outsl
add
mov
xor
jne
hlt
daa
mov
inc
into
and
lcall
jecxz
xor
outsl
xchg
in
fmuls
arpl
ja
cld
inc
jg
fidivrl
add
sbb
pop
push
mov
test
pop
shl
mov
mov
rorb
hlt
mov
and
lods
test
or
cli
dec
adc
pop
mov
pop
out
mov
adc
add
adc
mov
xor
int
test
fisttps
adc
arpl
mov
into
sbb
mov
in
cmp
inc
or
stos
xchg
mov
or
ror
aad
xor
sub
pop
aas
ja
xchg
adc
inc
jp
imul
inc
and
push
push
add
xor
enter
cmc
stos
lret
int3
xchg
xchg
ja
push
adc
lods
dec
push
jle
negb
push
ss
in
sahf
jne
mov
xor
cmp
jmp
fwait
add
adc
sbb
mov
jns
or
popf
add
daa
addl
in
inc
shrb
push
loop
adc
das
insb
pop
xchg
mov
mov
es
stos
push
mov
cmpsl
loopne
mov
mov
lds
je
and
das
in
lret
cmc
nop
pusha
jecxz
mov
cmp
repz
push
enter
sub
call
int
pop
mov
sbb
or
pushf
mov
pop
push
mulb
ret
xchg
and
mov
xchg
xchg
pop
jb
mov
sarb
cmp
xor
out
shr
cmp
leave
ljmp
cli
sahf
jl
aaa
int
cmc
sbb
test
add
std
xchg
or
sbb
out
mov
idivl
mov
cwtl
add
ss
mov
push
mov
bound
repz
test
js
inc
sbb
push
push
int
loope
loop
mov
and
pop
es
rcrb
jle
push
cmc
test
icebp
and
pop
ficomps
lret
filds
pusha
mov
xlat
ljmp
das
jmp
lea
add
mov
lods
mov
pop
pushf
mov
xchg
test
shl
fucomip
scas
xchg
mov
in
ss
std
dec
add
inc
sub
jge
and
cmp
cmp
jle
sbb
pop
push
and
push
enter
or
dec
jl
cltd
mov
mov
call
pop
jbe
push
add
sarl
dec
sbb
dec
mov
pop
sub
roll
rcrl
adc
dec
xlat
cmp
stc
xchg
test
les
mov
pusha
cmpsb
in
loope,pt
addr16
stos
add
sub
inc
sub
sbb
dec
mov
xor
inc
into
dec
in
and
bound
mov
push
lea
cmp
xchg
icebp
fmul
xor
jo
fnsave
aas
mull
mov
lods
mov
xadd
ja
subb
or
xor
sub
add
fs
adc
repz
int3
pop
push
inc
pop
cmp
mov
pop
fs
fistpl
xchg
pop
mov
ss
clc
mov
arpl
mov
sbb
xor
jbe
mov
call
sbb
scas
outsl
sbb
sarl
or
addr16
dec
add
adcb
jnp
fwait
cmp
adc
push
jo
push
shrl
movsb
push
jo
ret
mov
pop
mov
xchg
aad
mov
and
mov
jmp
ret
push
lds
es
adc
or
push
adc
mov
and
es
adc
arpl
sbb
cmp
sbb
jbe
in
pop
and
sub
push
mov
into
mov
jbe
mov
jge
ficoml
lock
mov
je
je
jecxz
in
cmp
cmp
pop
inc
push
push
mov
and
sbb
add
add
mov
mov
insl
loop
and
cmp
out
inc
sbb
mov
jl
test
mov
push
movsl
mov
ret
bound
pushf
inc
test
orb
jbe
mov
scas
xor
or
and
test
dec
ffree
push
push
aas
and
xchg
je
cmc
mulb
xor
jnp
inc
ret
xchg
lods
aas
cli
mov
daa
icebp
push
pop
mov
cs
inc
out
loope
lea
mov
inc
loop
jo
decb
rclb
push
call
testb
cltd
sahf
shr
or
and
daa
movsl
pop
jmp
fsts
xor
or
push
mov
inc
push
push
pop
shlb
cs
setbe
push
and
repz
add
jno
imul
mov
adc
js
xor
cmpb
add
adc
and
andb
fdivrl
mov
fldcw
mov
ja
lods
and
lcall
xchg
gs
add
pop
test
push
cli
mov
sub
ds
inc
push
mov
xchg
lret
sub
sarl
stos
push
xor
mov
pusha
daa
cmp
dec
aam
dec
stos
std
sub
add
xchg
nop
xor
dec
sub
inc
mov
inc
adc
mov
pop
test
sbb
call
movsb
aas
xor
stc
or
in
adc
mov
pop
mov
push
push
movsb
movsb
mov
insl
loope
mov
or
pop
loop
push
and
add
sbb
mov
add
shl
sbb
das
cltd
insb
outsb
les
ja
or
pop
inc
and
popf
stos
pusha
into
mov
addr16
stos
ds
out
rcll
es
push
adc
into
inc
inc
mov
jns
scas
xchg
scas
xor
cld
addr16
lods
xchg
xchg
icebp
push
ljmp
je
or
xchg
jecxz
add
cmp
aam
aam
fimull
cltd
mov
xchg
aam
sbb
xor
int
cmp
cmp
pusha
je
mov
call
popa
hlt
mov
lock
jl
stos
xor
outsb
push
cmp
leave
mov
fidivs
stos
pop
add
fdiv
xor
fcom
cmp
cmc
leave
xor
addl
pop
sbb
or
fdivs
inc
insb
mov
es
inc
mov
cmp
inc
mov
outsl
mov
stc
insb
jne
adc
mov
xor
adcl
iret
scas
push
cmpsl
pop
pop
pop
int
xor
loope
into
rcll
xlat
mov
in
sub
push
jle
mov
jo
push
out
push
lret
sbb
push
push
pushf
mov
cmp
and
inc
jbe
ljmp
loop
xor
rclb
cwtl
mov
pop
arpl
xchg
adc
lahf
fs
sbb
out
arpl
fstpt
push
and
pop
idiv
xor
push
push
sbb
pop
xchg
pop
int
nop
in
sbb
jg
and
sbb
or
push
hlt
xor
adc
pushf
inc
mov
xor
rorb
dec
dec
sub
or
inc
int
xchg
in
imul
es
and
movsb
push
dec
fidivrs
adc
mov
mov
cmpsl
dec
lret
orl
dec
insl
and
repz
vfrczsd
or
and
pop
movntps
pop
loop
cmp
enter
jp
call
cwtl
popa
je
push
in
mov
xchg
iret
jns
test
fimuls
and
roll
dec
mov
daa
inc
addr16
ljmp
test
inc
pop
push
or
mov
shr
push
cmpsb
jb
xor
test
jb
lret
lcall
pop
xchg
sub
shrl
push
cmc
mov
hlt
rol
rcll
mov
out
jnp
push
xor
push
pusha
in
insl
arpl
mov
dec
fldt
fcoml
and
inc
mov
cmovbe
fnsave
xchg
mov
cmp
cmpsl
test
sub
add
push
insb
mov
jecxz
je
fstpl
inc
inc
int
jae
jecxz
xor
dec
push
out
or
mov
inc
roll
mov
dec
push
inc
pop
insb
pop
sbb
in
sbb
ficompl
xchg
jne
push
iret
and
fisubs
xchg
mov
add
test
nop
int3
imul
stos
push
cmpsb
mov
xchg
sub
mov
push
and
std
daa
lret
xchg
mov
ljmp
mov
out
or
mov
add
pop
inc
insb
jmp
sub
pop
cmpl
not
xchg
inc
ljmp
imul
sbb
mov
scas
ret
mov
icebp
lahf
lahf
sbb
inc
pop
mov
add
inc
xchg
sbb
pop
cltd
call
jge
jg
xor
movsb
cmp
test
stos
sbb
iret
mov
lds
or
aaa
or
jecxz
mov
add
push
jne
cld
inc
cwtl
sub
int3
into
xorl
aas
add
mov
cmp
notl
dec
repnz
mov
adc
mov
jge
mov
xor
pop
add
mov
pop
xor
mov
or
popa
dec
cmpsb
dec
rcll
push
aaa
in
lods
jmp
ret
jp
push
and
das
rolb
cmc
stos
scas
in
jp
leave
dec
dec
mov
xlat
mov
mov
mov
stos
stc
jb
cwtl
xchg
cmp
test
or
call
xor
jg
es
push
mov
xchg
jp
loope
aad
cmp
mov
adc
dec
push
daa
dec
jle
push
fwait
lret
xchg
lea
add
mov
sub
fstl
dec
and
out
jae
sbb
add
pusha
outsl
scas
test
cmpsb
cmp
test
pop
cld
shll
push
dec
es
popa
jmp
add
out
jg
adc
addl
dec
aad
js
aam
or
mov
out
jno
jmp
leave
lret
out
mov
dec
std
cmp
test
sbb
pusha
insl
fadds
ret
mov
cltd
mov
mov
mov
ret
xchg
sbb
mov
std
aas
push
jbe
mov
cmc
enter
insl
cltd
test
push
jmp
sbb
jae
popa
into
inc
or
pop
mov
jo
xor
sub
ret
cmp
lcall
push
xor
shll
lret
fidivl
rcll
test
mov
cwtl
sbb
cwtl
test
inc
mov
sahf
adcb
nop
dec
push
push
push
ret
rcll
cmp
dec
inc
out
xchg
fnstsw
push
adcb
push
dec
ja
scas
cld
decb
mov
push
dec
dec
cmp
push
mov
adc
mov
jp
adc
mov
frstor
mov
sub
loop
xor
ds
dec
or
pop
pop
and
scas
lods
mov
inc
out
jecxz
mov
insb
fisubrs
gs
mov
or
rolb
lea
ret
mov
out
dec
adc
cwtl
arpl
add
into
adc
dec
dec
stc
mov
cmp
pushf
mov
mov
nop
pop
add
cmp
lret
mov
jp
xchg
mov
inc
push
push
fwait
jo
sbb
lods
movsl
lret
inc
aas
sbb
push
jno
js
test
fcoml
mov
jae
add
jge
fcomp
sbb
push
sbb
je
cmpsl
push
cmpsb
icebp
outsl
inc
cli
out
jno
pop
inc
pop
xchg
addr16
push
mov
cmpl
fsubs
fnstenv
inc
int
fdivrs
fstp
inc
sub
test
cmp
add
jbe
scas
jnp
mov
mov
sub
jl
or
cmc
daa
pop
adc
xor
addr16
pop
mov
mov
sub
popf
pop
dec
xchg
scas
test
in
aad
les
stos
dec
dec
cmp
cmp
call
xchg
data16
mov
leave
add
ja
stos
jo
scas
aas
jmp
push
std
inc
enter
rorb
adc
push
icebp
jl
xor
std
mov
imul
jmp
leave
scas
adc
jbe
push
sub
add
dec
xchg
mov
adc
or
pop
iret
jb
push
loop
mov
push
fwait
stc
insb
cmp
repnz
or
add
adc
je
push
mov
ret
out
and
les
sbb
mov
pop
mov
and
icebp
int
test
inc
orl
sub
jge
outsl
ss
and
scas
inc
jae
out
aaa
adc
popa
cmp
testb
mov
out
jb
sbb
jae
call
call
dec
stos
adc
xlat
fidivs
dec
lods
pop
mov
into
ret
imull
or
push
or
or
add
inc
mov
cmp
sbb
fldcw
sarl
mov
pop
dec
or
add
ret
sub
lret
push
sub
mov
cli
inc
cmp
and
loop
ret
adc
js
out
arpl
push
add
cmp
xchg
loopne
mov
add
inc
xchg
out
and
ret
xchg
xlat
mov
cwtl
movsl
jmp
dec
pop
push
sbb
in
cltd
fistpll
fcoml
or
adc
outsb
mov
xchg
sbb
stos
xor
mov
arpl
xor
scas
fnstsw
xor
int
cmp
cmp
adc
xor
jne
cmp
mov
or
mov
ds
inc
inc
jecxz
sub
xchg
sub
add
and
pop
push
pop
bound
jb
mov
mov
push
sbb
and
icebp
mov
dec
lods
adc
lods
sub
add
jmp
lret
inc
cmp
and
xor
loope
sbb
xchg
push
jbe
push
popf
scas
inc
test
jo
push
scas
mov
aad
mov
mov
cltd
jmp
mov
and
xor
pop
xchg
bound
push
das
pop
data16
mov
push
out
push
std
mov
insl
inc
add
mov
fnsave
mov
inc
mov
pop
adc
lcall
jns
in
clc
mov
add
or
mov
jnp
jbe
sbb
mov
scas
popa
sbb
jmp
loope
adc
das
cmp
jne
jae
push
mov
loop
jnp
insl
adc
or
mov
push
inc
inc
mov
enter
dec
dec
cltd
int3
test
mov
mov
fiaddl
mov
xchg
mov
fstl
jns
adc
mov
insl
jmp
pop
test
nop
sbb
int
hlt
stos
pop
sub
sub
sub
adc
call
sbb
cmc
xlat
icebp
jl
rcrl
jbe
xor
in
rol
mov
jecxz
int
pop
cmp
repz
inc
push
insl
mov
decl
shll
jmp
sub
jl
insb
or
cli
cld
jg
xor
ret
addb
jns
mov
in
xor
pop
sub
mov
aaa
mov
pop
jo
xor
repz
pop
adc
mov
mov
ds
add
addr16
popa
lcall
imul
jns
and
jns
test
rcl
hlt
pop
inc
jle
loopne
pop
outsl
mov
mov
pop
push
mov
je,pt
or
mov
sarb
xchg
iret
mov
test
test
insb
inc
adc
gs
nop
movsb
fldt
sbb
mov
js
or
and
insl
sbb
xchg
jmp
inc
sbb
or
aas
cs
push
mov
cs
push
pop
test
jo
dec
fsubrs
push
push
mov
outsl
out
mov
in
xchg
mov
mov
push
xchg
fisttps
rcrb
lcall
pop
pusha
fnsave
out
adc
pop
out
xlat
fildl
lcall
mov
hlt
xchg
or
push
inc
fistpll
aaa
adc
jo
and
mov
sahf
mov
pop
and
inc
ja
clc
dec
push
push
dec
orb
sbb
mov
aam
add
orl
les
sahf
jno
cmp
aas
and
sbb
xor
scas
jno
and
int3
or
clc
ror
jge
dec
stos
fwait
test
inc
add
mov
jo
cmp
jo
sub
cli
pop
pusha
mov
hlt
push
popf
test
xor
dec
adc
clc
push
mov
mov
xchg
daa
pop
or
inc
cmp
stos
xor
lahf
pop
pop
sub
sub
jl
jb
add
stos
mov
adc
inc
icebp
mov
and
mov
jo
push
ss
das
and
cmpsl
aam
or
cld
clc
pop
sti
into
or
adc
add
add
outsb
int
sbb
outsb
int
leave
jge
pcmpgtb
inc
xor
js
subl
cmp
sahf
fisttpl
lock
mov
add
in
lods
xchg
jg,pt
adc
cmp
push
orb
sub
int3
add
idivb
pop
fcompl
sahf
jl
jo
mov
sub
sbb
pop
ja
dec
sti
mov
cltd
int
lds
mov
cmpsl
dec
jle
jmp
pop
and
gs
int3
and
dec
cmp
sbb
shll
dec
mov
dec
inc
or
mov
xchg
imul
jne
addr16
in
jne
cmp
sub
sbb
ja
and
or
sbb
int
iret
adc
sub
adc
shr
inc
cmp
jbe
scas
js
push
repz
xor
mov
loop
mov
stos
jno
loope
negl
pop
mov
outsb
mov
push
sbb
push
pop
pop
add
pop
jnp
adc
xor
lods
cmp
divl
xchg
fcomps
mov
xor
cs
mov
lret
xchg
daa
jnp
inc
dec
aam
pushf
int
adc
imul
pop
call
xor
mov
decl
xchg
fildl
sti
pushf
mov
test
cmp
lret
mov
pop
pop
ret
call
xor
cmpsb
shlb
adcb
dec
iret
leave
pop
cmpsb
inc
aaa
pop
add
pop
jne
hlt
pop
int3
out
jle
dec
lret
mov
iret
cmpsb
xchg
inc
add
enter
movsb
cmpsl
xchg
push
pushf
leave
fyl2x
xor
jg
lahf
mov
pop
pop
add
and
push
test
sbb
pop
sub
idiv
jb
scas
xlat
mov
cld
sti
out
in
pextrw
nop
lods
xor
rolb
pusha
daa
inc
testl
xor
scas
mov
mov
cltd
sbb
xor
add
inc
sbb
shll
mov
nop
push
mov
hlt
xor
jecxz
test
out
in
cmp
ror
popa
lcall
push
imul
cmpsl
inc
push
movsl
jno
and
fisubrl
adc
adcl
sub
xor
gs
mov
xor
sti
ret
test
enter
push
sbb
jne
xor
dec
ja
nop
test
adc
sub
inc
mov
and
imul
xchg
out
jns
cli
push
xchg
mov
or
xor
stc
mov
jge
or
mov
shl
ljmp
pop
pop
mov
dec
leave
fiadds
cld
jne
js
xor
pop
jns
dec
push
and
dec
leave
fldln2
mov
push
sbb
call
sub
adc
sbb
je
test
adc
out
adc
pop
mov
pop
stos
push
loopne
pop
sbb
ljmp
xor
lahf
mov
scas
pop
mov
in
xchg
mov
jbe
aaa
out
jb
push
mov
lds
push
or
inc
fisubl
out
pop
stos
lock
jmp
xchg
addb
test
popa
jo
jno
pop
sbb
pop
out
lds
fdiv
xor
inc
arpl
mov
loop
jp
divl
push
adc
mov
cld
sub
shlb
stc
xchg
mov
push
add
jmp
sbb
xchg
gs
dec
in
call
negl
adcl
nop
cmp
loop
jmp
in
ret
mov
es
test
ss
pop
inc
enter
insl
outsb
mov
and
xor
std
jne
das
call
xor
mov
and
fs
imul
bound
divb
mov
into
jmp
hlt
leave
mov
fsubs
insl
cwtl
sbb
jge
sarl
das
jb
movsl
js
out
in
aad
pop
and
and
cmp
mov
gs
nop
clc
cmc
inc
test
mov
jnp
cmp
or
ja
mov
mov
iret
xlat
mov
dec
mov
aam
jbe
clc
xchg
dec
mov
jge
mov
insl
lods
arpl
fistps
pop
out
xchg
mov
addb
xchg
or
mov
mov
inc
xchg
cmc
call
rolb
add
test
loop
aaa
pop
mov
cwtl
mov
mov
out
lret
out
mov
mov
in
mov
hlt
add
aad
sub
call
push
shl
fdivl
push
xchg
jns
or
out
jmp
xor
push
and
mov
mov
xchg
repz
xchg
push
movsl
aam
frstor
shlb
pushf
sub
xor
shlb
xchg
je
aad
cltd
cwtl
push
fwait
or
and
mov
adc
dec
icebp
lret
nop
scas
shll
sbb
inc
mov
add
hlt
xchg
cmc
adc
addr16
rcr
cmp
inc
dec
lds
push
sbb
aaa
jl
sub
arpl
jns
and
outsb
push
sbb
mov
out
xor
dec
mov
not
loop
inc
rcrb
sub
ljmp
add
cmp
jmp
popa
mov
pop
mov
xchg
jp
and
mov
sbb
repz
pop
in
repnz
lahf
adc
test
pop
ret
xor
jae
rcrl
int
in
xchg
xlat
cli
insl
push
mov
xor
push
dec
stos
push
loopne
xor
adc
jns
ljmp
pop
insb
lcall
hlt
jno
push
sbb
sbb
and
outsb
hlt
fdivl
imul
lds
sbb
mov
sti
hlt
scas
jns
add
mov
fidivrl
push
pop
lret
mov
push
stos
movsl
adc
pop
mov
dec
shl
add
daa
jae
mov
mov
and
jb
mov
push
shll
pop
out
xor
add
sbb
sbb
or
xchg
das
lds
int
mov
cmp
mov
lods
push
clc
shlb
mov
mov
sbb
ljmp
sub
outsb
pushf
or
les
jge
push
out
fnstenv
push
sub
fsubs
loope
mov
push
ljmp
lahf
mov
stos
lods
popa
repz
popa
cmp
mov
icebp
shrb
or
test
push
mov
or
neg
call
cmp
mov
pop
inc
sbb
pop
stc
shlb
push
jbe
lock
add
out
sti
mov
pop
jl
outsb
cmpsl
push
xor
push
nop
add
into
sbb
push
test
bound
push
pop
dec
mov
outsl
test
imul
std
cli
stc
push
ljmp
mov
inc
jecxz
lret
popf
ds
jbe
xchg
sub
lods
or
jge
gs
dec
jp
bound
jecxz
pushf
dec
and
leave
or
js
test
test
jae,pn
lcall
fwait
shlb
push
mov
dec
xchg
mov
fdivrp
sbb
addr16
adc
and
mov
loopne
cwtl
and
mov
mov
xchg
add
xchg
mov
push
test
xchg
adc
stc
das
dec
arpl
ficoml
mov
loope
sub
lods
or
push
pusha
fstl
adc
rclb
sbb
jno
daa
inc
aad
sarl
fcmovu
icebp
jnp
xchg
stos
mov
jno
xor
sbb
out
cli
sub
add
push
mov
arpl
aaa
mov
scas
push
sub
xor
cmp
or
and
ret
loope
push
sub
pop
enter
cmp
and
dec
xchg
jne
adc
aad
inc
xchg
loop
fstp
mov
ja
mov
cmpl
loop
or
pushf
mov
or
push
sub
js
nop
loope
dec
mov
inc
jnp
mov
or
cmpsb
scas
loopne
jmp
movsb
out
cltd
imul
push
or
aaa
xor
cmp
mov
xchg
push
inc
sbb
iret
jle
jno
and
out
push
test
jecxz
in
pop
inc
les
leave
jne
pop
stos
cmp
ja,pt
fnstcw
add
addr16
mov
repz
loope
cmc
push
scas
mov
mov
push
mov
decl
xlat
xchg
out
mov
mov
jp
cli
iret
mov
dec
mov
cmp
and
out
lods
iret
out
xchg
jle
xchg
nop
test
cmp
loopne
mov
inc
arpl
aaa
adc
or
pop
fiadds
mov
lds
mov
pop
push
enter
je
mov
sub
jecxz
pop
aaa
mov
shrl
mov
rorl
or
mov
dec
xor
xchg
in
push
jne
lcall
xchg
movl
stc
mov
adc
outsl
int
ljmp
lret
dec
sub
cltd
data16
icebp
fistl
je
mov
jo
xchg
in
jo
mov
xor
in
pop
mov
fnstcw
lea
movsl
adc
mov
inc
jge
imulb
lahf
repnz
insl
mov
mov
nop
cmovo
or
ljmp
mov
push
add
jle
imul
push
pop
mov
add
ljmp
fimull
xorb
pop
adc
or
sbb
push
clc
mov
mov
mov
add
sub
mov
adc
stos
or
sbb
pop
sbb
jns
pop
inc
dec
loop
cmc
fstpl
jmp
xchg
jns
stos
aaa
je
ljmp
cmp
out
push
cmp
mov
lds
enter
notl
stc
push
xorb
mov
sbb
ljmp
xchg
mov
mov
inc
and
or
fcoms
movsb
sub
sub
adc
ficoms
cmpsl
and
dec
ja
pop
or
jnp
inc
fwait
cmpsb
cmp
dec
mov
jb
and
jecxz
test
nop
mov
dec
jg
enter
mov
sbb
mov
stos
inc
mov
iret
mov
jge
pop
iret
int
icebp
mov
mov
cmp
mov
mov
lods
das
lods
mov
lahf
ret
mov
inc
push
sub
scas
xchg
ret
mov
adcl
sub
cmp
push
addr16
dec
data16
push
shrb
mov
mov
stos
and
sub
sbb
ret
add
adc
push
loop
call
mov
inc
les
gs
mov
shll
movsl
xchg
adc
push
stc
insb
gs
rorl
push
cmc
les
mov
movsb
xor
rcll
jg
pop
mov
mov
gs
mov
mov
sub
add
lock
adc
mov
nop
lret
aaa
in
mov
sub
lcall
add
xor
insl
adcl
inc
add
add
cltd
out
out
pop
shrb
xor
popa
sub
jno
pop
or
test
and
adc
pop
mov
pop
fwait
cmpsl
or
int3
andl
xchg
lods
lods
xor
out
cmp
movsb
sub
mov
stos
xchg
std
ja
nop
xor
jae
popa
jae
xchg
repz
mov
push
dec
mov
sahf
mov
sbb
test
xchg
ret
ljmp
xor
test
mov
mov
xchg
jb
xor
stos
xor
aam
push
imul
lods
push
lea
add
cmpsl
bound
enter
cld
ss
test
inc
dec
stc
fadds
mov
pop
outsl
lock
imul
inc
xlat
cmp
adc
dec
movsb
xchg
or
hlt
imul
scas
mov
aad
clc
daa
xor
cmc
push
fwait
sub
jmp
or
out
jo
xor
mov
add
dec
push
aad
cmp
and
call
dec
push
jecxz
shl
or
xor
cmp
mov
imul
or
push
das
xor
sbb
icebp
inc
inc
ret
in
sub
cmp
jne
ja
cmpsb
xor
sub
push
mov
dec
aam
mov
xlat
adc
mov
fnsave
and
fsubs
je
fsubrs
les
lock
sahf
xlat
movl
or
push
sub
loope
int
sbb
and
mov
ret
popf
in
mov
test
or
rcrb
int
cmpsl
xor
jl
jmp
dec
and
aam
hlt
and
sub
mov
push
pop
lcall
adc
sbb
das
push
sbb
nop
stc
aaa
ret
xlat
insl
test
test
ficoms
jnp
aam
push
into
out
push
pushf
imul
sbb
xchg
mov
pop
jbe
out
fdivrp
fsts
mov
popf
push
imul
jns
jns
inc
sbb
xor
mov
pop
pop
pop
adc
mov
int3
adc
cmpsb
mov
in
xor
incl
sub
jl
and
cmpsl
pop
in
cmp
stc
std
gs
mov
fcomps
imul
stos
int3
mov
pop
xor
sti
mov
arpl
mov
in
mov
mov
stc
fdivl
jp
sbb
js
fwait
xchg
mov
jb
dec
sbb
sub
je
int
aaa
inc
adc
outsl
adc
mov
pop
sbb
mov
push
in
mov
and
push
shrb
pop
gs
fcmovb
cmp
shll
pushf
inc
sub
scas
repz
out
adc
pop
dec
incl
loop
add
lock
dec
and
push
mov
mov
fcomps
push
cmp
js
decb
lret
fmull
ja
insb
mov
mov
mov
adc
adc
arpl
mov
rcl
cmp
push
dec
daa
addr16
outsb
sub
cwtl
popf
xor
mov
cmp
cmc
xchg
dec
inc
jl
test
cmp
or
and
and
add
mov
mov
cmc
sbb
push
sbb
mov
pop
push
or
das
sub
xorb
les
cmp
sbb
das
or
jp
test
imul
sub
test
sbb
or
add
scas
shlb
pop
es
stc
fsubr
adc
aaa
shll
push
sbb
and
aad
adc
mov
cwtl
int3
shl
xchg
push
add
aam
lods
addr16
xchg
pop
jg
out
inc
in
adc
xor
dec
nop
dec
mov
jg
push
push
xor
mov
outsl
das
fs
push
lea
push
cmovne
sbb
xchg
in
add
dec
mov
or
inc
adc
dec
es
cmc
lea
aad
inc
ljmp
adcl
mov
shll
pop
std
out
leave
pop
push
rcrb
mov
xchg
sbb
push
xor
js
lahf
push
mov
mov
clc
mov
adc
cmpsl
cli
int3
cmp
pop
test
test
push
jo
in
mov
aaa
movq
pop
test
movsb
in
sbb
push
lods
in
out
into
nop
xchg
lret
in
xchg
clc
por
in
jo
and
and
cmp
inc
fadds
mov
mov
inc
fwait
shll
mov
xchg
shrb
mov
xorb
imul
inc
fucomi
dec
outsl
and
repnz
mov
out
pushl
and
dec
xorl
pop
mov
lret
mov
aas
les
lret
mov
jno
mov
mov
jne
int
daa
xchg
lahf
jno
xor
fsts
stos
cmp
xchg
mov
dec
cwtl
dec
pop
lods
in
sbb
and
sbb
push
inc
idivl
insl
push
ret
lret
mov
adc
pop
push
adc
push
mov
xchg
jp
repnz
sub
inc
out
popf
xlat
imul
sbb
mov
sub
into
mov
inc
je
adc
mov
cmp
insl
jmp
lock
mulb
cld
dec
xor
imul
jb
loope
aad
lock
xchg
jmp
add
mov
imul
jmp
xor
lahf
lret
repnz
lcall
cmp
testb
xor
out
adc
or
sub
inc
or
lds
inc
mov
mov
or
sbb
addl
mov
shll
sub
inc
xchg
mov
jp
bswap
out
fwait
and
aas
ja
mov
std
push
fldt
inc
sbb
stos
fnstsw
arpl
stos
fs
sbb
ljmp
out
imul
sub
sbb
pop
push
leave
push
xor
bound
add
dec
xchg
sbb
push
pop
cmp
xchg
pushl
jnp
in
fistps
lds
mov
popf
ljmp
movsl
and
lods
xor
dec
jbe
sub
xchg
sub
inc
fisubs
jle
mov
jg
fisubrs
xor
xor
lret
and
mov
movsb
lfs
fs
mov
clc
jmp
je,pt
hlt
lock
mov
fiadds
cltd
adc
shlb
sub
in
pop
ds
add
cmp
pop
pushf
jmp
insb
aaa
or
lods
ljmp
xor
call
pop
shll
sbb
imul
xchg
lea
sahf
cs
cwtl
ret
xchg
and
mov
pop
movsl
test
fs
in
mov
sub
mov
lret
shlb
cmp
daa
fisubs
push
mov
mov
or
push
xchg
fimull
sbb
jno
call
sbb
mov
push
dec
jle
xchg
fisttpll
inc
jns
push
loopne
or
popf
orl
pop
daa
push
add
std
jae
int3
and
and
adc
imul
mov
test
fcompl
mov
cmpsb
imul
iret
xor
inc
xor
inc
negl
inc
push
cmp
add
es
insl
repz
movsb
push
pop
aam
fldenv
and
mov
xor
push
mov
outsl
xsha256
cmpsb
xchg
pop
daa
push
pop
xor
lret
in
pop
ja
out
adc
mov
mov
out
inc
aaa
mov
push
and
mov
clc
andl
jg
lahf
mov
and
or
inc
mov
push
insl
fildl
loopne
and
add
sbb
jle
jnp
fstps
dec
mov
dec
in
jmp
cli
adc
xchg
mov
mov
int
repz
sub
mov
rorl
jmp
adc
sub
imul
ljmp
movsb
aaa
int3
or
movsb
mov
xchg
sub
addr16
sub
cmp
lcall
arpl
xchg
xor
add
loope
data16
xor
test
addr16
mov
shrl
sub
sub
ljmp
xchg
push
jns
sbb
insb
sub
out
sbb
in
dec
cmp
mov
dec
inc
rolb
inc
in
sbb
insl
pop
cmp
ss
push
iret
pushf
cltd
fwait
aaa
sbb
fwait
dec
testl
test
push
imul
sbb
popa
adc
pop
fsubs
js
add
inc
pop
xor
sahf
test
pop
dec
dec
xor
cli
push
or
pop
shl
les
insl
xor
mov
lds
in
mov
arpl
movsb
ffree
xor
add
mov
adc
dec
adc
daa
mov
movsb
bound
push
inc
dec
lret
stos
lahf
mov
push
xor
sbb
xor
shr
out
xchg
mov
lock
fistpl
dec
leave
push
icebp
mov
mov
sbbb
test
dec
cmp
add
in
push
add
lcall
popf
cmp
adc
pushf
xrelease
cmp
pop
inc
push
push
stos
dec
push
nop
jecxz
inc
mov
ret
in
cmpxchg
ss
bound
push
ds
pop
adc
sbb
mov
shl
outsl
icebp
dec
add
dec
rolb
or
dec
mov
outsl
lods
imul
jecxz
pushf
cmp
xchg
les
sti
sub
sti
inc
mov
cmp
fsubrs
mov
push
data16
inc
mov
repnz
in
enter
mov
inc
nop
mov
add
xchg
test
push
pop
rcl
aam
addr16
add
pushf
adc
je
outsl
pop
push
mov
mov
pop
jb
icebp
sbb
popa
xor
mov
mov
xor
inc
pop
stos
xor
psraw
sahf
lret
aaa
add
out
stos
rcrb
sbb
or
mov
cmp
add
adc
push
xchg
out
in
xor
xor
fsubr
movsl
mov
xor
movsl
add
xorl
push
rcrl
pop
jne
insl
outsl
ljmp
cmpsb
imulb
cmc
mov
insl
movsl
dec
dec
xor
mov
into
pop
popw
imul
loopne
bound
lds
or
add
dec
orl
add
adc
add
out
out
adc
rcll
movsl
int3
into
dec
inc
fdiv
inc
pop
mov
fistpll
insb
shll
push
pop
sub
sbb
push
hlt
push
daa
pop
inc
inc
loopne
cmp
sahf
aad
sub
xchg
push
mov
mov
mov
imul
dec
imul
ret
add
lds
dec
mov
stos
push
arpl
mov
xchg
hlt
clc
jo
icebp
cmp
jno
bound
cmc
orb
mov
xchg
insl
cltd
out
lock
pop
mov
push
lret
and
sbb
pop
mov
or
xor
cmp
mov
cld
not
inc
movsl
leave
push
leave
dec
test
ret
cmp
scas
push
fildll
dec
rorw
pop
pop
aad
rolb
dec
fildl
mov
push
push
mov
std
pop
std
int
and
mov
jae
and
mov
mov
shl
mov
and
xchg
hlt
out
cs
addr16
scas
add
cmp
xor
inc
fsts
imul
mov
popa
mov
or
stc
lods
clc
mov
mov
mov
jecxz
movsl
ud1
xor
pop
inc
jecxz
inc
js
pop
test
mov
push
stos
outsl
xor
cmp
inc
push
lcall
inc
jmp
mov
arpl
dec
mov
xor
out
jg
jl
sbb
push
pop
lcall
stos
lea
push
pop
adc
les
outsl
xchg
dec
pop
ds
pop
negl
inc
cmpsb
mov
cmc
and
xor
xor
dec
jno
repnz
pop
mov
jge
pop
mov
inc
lea
mov
sbb
dec
cmc
sbb
testb
dec
cmovg
jmp
mov
mov
cmp
xchg
inc
mov
jb
orb
pop
dec
inc
cltd
inc
pop
mov
cs
add
test
cs
inc
jo
mov
fwait
subl
adc
insl
jbe
cs
push
pop
sub
jecxz
jl
ja
scas
add
bound
cmp
dec
pushf
xchg
mov
test
cmp
sub
dec
scas
sbb
ljmp
sub
shlb
dec
in
in
mov
jg
xchg
push
dec
jno
mov
adc
pop
aad
movsl
sti
jns
filds
add
or
addr16
lock
cld
xchg
repz
and
lods
jge
add
inc
insb
push
push
fildl
pop
cmp
in
outsb
leave
mov
out
cmp
fxch
lods
popf
xlat
cmp
cmpsb
mov
push
xchg
adc
fadds
addr16
imul
push
inc
imulb
xchg
and
imul
xchg
bound
inc
stc
lahf
aas
mov
xchg
aad
mov
inc
outsb
lods
or
popf
sbb
inc
pop
push
test
test
repnz
xor
ret
mov
fisubrs
and
dec
xchg
popf
cltd
mov
ret
fsubp
xor
aad
jnp
pop
adc
clc
movsb
mov
push
jns
mov
dec
jnp
out
daa
jl
pop
and
pop
inc
push
dec
push
jno
inc
or
mov
out
xlat
mov
add
in
or
push
mov
cmpsb
test
mov
je
pop
xor
bound
push
stc
pop
in
mov
dec
fdivl
jge
pop
push
push
dec
std
xchg
inc
testb
or
adcl
mov
mov
mov
int3
outsl
pop
call
hlt
mov
xchg
pop
push
mov
arpl
cltd
pop
push
adc
mov
ret
xchg
rcrl
movsb
or
mov
push
push
and
add
xchg
sbb
push
push
jp
add
out
mov
sbb
mov
aas
mov
add
jb
pop
cmp
dec
pop
push
cmc
fwait
cmp
lret
or
pop
lds
repnz
mov
mov
xchg
icebp
imul
xchg
push
sti
arpl
xor
je
shrl
xor
xchg
out
mov
lea
in
cmpsl
push
mov
bound
or
addr16
sbb
iretw
mov
leave
inc
aaa
pusha
mov
test
jo
push
xor
pop
repnz
or
inc
xchg
out
jge
popf
adc
fs
out
sub
xor
lcall
lods
outsl
cld
pop
pop
pop
xor
add
neg
cmc
test
repz
mov
mov
inc
sbb
lcall
fdivs
mov
dec
mov
les
sti
jno
and
sub
cmp
inc
push
fs
orb
ljmp
push
jecxz
inc
and
cmp
jmp
rorl
mov
jo
pop
jb
add
xchg
jbe
pop
clc
pop
push
add
sub
mov
cs
jge
pop
dec
lock
movsl
adc
push
push
mov
dec
xchg
pop
loopne
mov
mov
ljmp
mov
lods
lods
jno
xchg
push
or
push
mov
sbb
into
jp
ret
scas
xchg
dec
lahf
je
xlat
insl
push
push
pop
inc
cli
fdivr
dec
xor
inc
sbb
inc
jne
shl
aam
xor
jno
pop
and
sub
push
loop
dec
sti
pmaddwd
dec
push
jb
leave
mov
popa
add
adc
sbb
mov
movsb
imul
add
cld
dec
stos
jge
dec
inc
jae
in
shll
test
cli
je
push
add
push
std
jg
inc
inc
dec
stos
addl
cmpsb
rorl
add
jno
lock
sub
lea
xchg
jmp
loopne
jle
push
outsl
mov
xchg
mov
outsb
adc
movsb
inc
les
pop
adc
mov
sub
out
mov
mov
adc
fsubl
mov
add
mov
push
mov
pop
sub
push
mov
sbb
cmp
je
ret
and
adc
movsb
adc
cmpb
pop
pop
push
repnz
jnp
das
cmp
repz
sbb
aam
out
xchg
out
cmc
daa
jb
cmp
in
sub
xchg
icebp
lods
mov
inc
rclb
data16
jge
andl
xor
loopne
cmp
je
lret
mov
sub
stos
stos
xor
cmc
mov
movsb
mov
mov
and
ljmp
in
shl
jno
mov
nop
test
inc
mov
outsl
mov
and
jo
xor
ljmp
insl
ret
lret
insb
mov
jne
sub
mov
int3
aad
mov
add
imulb
push
jnp
pop
sub
inc
insb
repnz
js
push
aam
jo
lock
xchg
or
adc
std
subb
ja
dec
xchg
cld
pop
adc
das
in
xor
pop
adc
and
push
cld
stos
jl
mov
repnz
sbb
ret
rcr
out
mov
or
inc
cmp
icebp
xor
adc
adc
das
sub
pushl
aam
jg
inc
fisttpll
sbb
inc
inc
fsts
jno
jae
add
cmpsl
das
insl
leave
add
lret
mov
iret
jb
adc
mov
fwait
mov
and
loopne
sahf
outsb
dec
fisttpl
xlat
jne
adc
lock
enter
or
cmpsb
dec
leave
push
leave
cmp
lcall
xchg
fildll
dec
or
mov
add
fstl
call
adc
and
sbb
adc
pushf
int
push
sub
out
add
loope
subl
divb
adc
ja
daa
cmpsb
xchg
adc
jmp
daa
dec
pop
pop
cltd
ss
aas
out
rcl
outsb
jo
imul
imul
pushf
sub
xchg
cmpsb
arpl
scas
movsl
xor
sub
add
dec
or
enter
fxtract
ljmp
jo
stos
sahf
lods
push
hlt
dec
dec
inc
or
ficompl
xchg
and
imul
add
and
cli
lea
pop
daa
and
push
and
and
jb
movsb
push
sub
fadd
imul
mov
rcll
jp
mov
jp
push
mov
sti
lcall
das
out
rorb
inc
cmp
push
cmp
pop
insb
or
mov
test
clc
mov
mov
cmp
mov
add
sahf
out
jle
jp
in
jnp
push
test
adc
pop
cmp
inc
lcall
rclb
rcl
cld
movsl
in
ret
xchg
dec
sarb
cmp
cmp
dec
mov
xchg
add
sub
jp
fsub
cltd
jo
insl
push
push
in
mov
jae
pushf
lock
repnz
scas
mov
cmpsb
lcall
mov
fstl
mov
imul
loope
adc
jno
daa
in
lret
cmpsl
pushf
mov
insb
dec
inc
repz
sbb
lods
cli
push
mov
inc
data16
dec
testl
inc
lods
jnp
icebp
xchg
xor
push
in
mov
int3
fwait
iret
shll
ljmp
jne
jbe
ret
pop
add
push
rolb
stc
das
div
jo
dec
push
push
add
push
rorb
push
mov
ret
lea
cmp
push
jp
push
adc
jl
cmpsl
test
adc
lea
ret
fldt
cs
mov
fcompl
repnz
mov
add
scas
fdivp
into
loop
arpl
outsb
sub
nop
xchg
out
pop
pop
mov
int
aaa
daa
dec
inc
cmc
into
xlat
js
call
int3
mov
imul
popf
inc
jg
mov
xchg
les
arpl
push
dec
leave
xor
pop
sbb
jmp
inc
inc
mov
adc
xchg
mov
lret
jge
lret
push
clc
fdivrs
or
add
xchg
cli
jmp
sub
mov
aaa
and
cmp
xchg
pusha
pop
enter
in
push
sbb
jp
xchg
sbb
insl
sbb
xor
dec
mov
rorb
dec
popf
xor
and
pusha
add
divb
out
lock
pushf
pop
sbb
xchg
pop
repnz
int
xchg
pop
mov
fldl2e
sub
test
pop
jge
test
out
pop
jp
jmp
scas
push
jp
icebp
popa
in
icebp
sub
fldenv
mov
icebp
or
sbb
mov
imull
dec
out
inc
inc
out
jb
push
xchg
es
inc
add
push
cmp
sahf
enter
fldt
adc
jb
fldenv
xor
ret
or
push
imul
psrld
lea
inc
addr16
jb
cltd
xor
or
fs
mov
push
jae
ret
add
push
mov
sub
and
testl
inc
inc
repnz
mov
mov
outsb
push
mov
xor
hlt
lods
das
push
pop
push
push
popf
add
repz
mov
jge
sarb
dec
pop
lods
jb
sbb
sub
xorb
inc
aam
pop
rcrl
mov
test
aaa
es
sub
pop
xchg
cmp
js
jge
scas
xor
mov
xor
and
and
inc
mov
sbb
sarb
iret
movsb
outsl
push
sub
out
push
fidivl
leave
mov
sbb
dec
xchg
adc
orb
ja
ja
cmp
pop
or
test
mov
jbe
bound
mov
les
rorb
cmp
cltd
test
mov
insl
mov
and
xor
lods
test
and
adc
sub
icebp
sar
or
cltd
out
ret
mov
push
xchg
xor
sarb
mov
mov
cs
dec
mov
lahf
ljmp
pusha
gs
adc
cmp
sarb
inc
xchg
pop
mov
lahf
pop
jmp
pop
lcall
andl
lea
in
jp
test
pop
jge
outsb
mov
out
pop
add
std
adcb
rcl
jnp
pop
push
inc
aam
stc
cmpsb
pop
dec
andb
jle
nop
adc
add
insb
and
lods
cs
addb
push
in
adc
push
sti
xchg
cmc
imul
out
scas
push
inc
mov
imul
stos
fwait
or
pop
jp
sub
dec
or
mov
lcall
cmp
ja
mov
aad
clc
lea
pop
lret
scas
or
popf
cld
leave
xchg
fs
push
push
and
nop
ret
mov
out
cmpsl
cmp
add
lods
dec
lods
sub
shl
push
mov
jnp
jle
ljmp
lods
xor
imul
cmp
push
or
or
push
ficoms
or
mov
addr16
loop
mov
repnz
xor
and
cmpsb
or
dec
repnz
test
shlb
mov
sbb
iret
jbe
movsl
cld
xor
ud0
ss
cmp
and
xor
dec
pop
stos
sub
mov
rorl
sbb
sbb
sub
cld
xchg
inc
fidivrl
pusha
pusha
cmp
jg
jg
dec
xchg
or
sarl
aam
fcompl
dec
ja
and
out
je
clc
adc
shll
aad
call
in
int3
adc
mov
push
jle
inc
icebp
out
mov
adcl
das
mov
je
pop
pushf
lret
jmp
pop
adc
sbb
mov
lahf
fwait
pop
or
jge
jecxz
lds
arpl
inc
mov
imul
adc
das
lock
xor
jmp
pop
xor
push
jb
int
mov
aas
jecxz
aas
jecxz
sbb
int
jb
pop
adc
fstpl
bound
xchg
sub
inc
imul
call
scas
xchg
push
cmc
push
movsb
add
ja
mov
add
lcall
fs
pop
push
clc
insl
aam
int
ret
mov
insl
popa
arpl
pop
fcmovnb
or
lods
push
je
sub
lret
insl
push
dec
jo
jae
adc
in
cltd
repnz
mov
enter
dec
sub
rorb
xchg
pop
jo
or
insb
or
scas
iret
ss
clc
bound
jl
outsb
mov
or
mov
sahf
repz
mov
sub
aad
shlb
push
push
imul
imul
xor
cld
cmp
pop
movsl
mov
mov
cmp
pop
jmp
cmc
adc
aas
mov
sarb
out
aad
sbb
arpl
or
jmp
fdiv
test
lahf
ds
dec
adc
in
stos
fs
pop
push
stos
mov
jecxz
aas
pop
rolb
sahf
iret
lahf
fadds
adc
mov
fisubrs
mulb
pop
add
jo
scas
xor
inc
addr16
xor
mov
outsl
sbb
cwtl
lret
cld
and
cmp
cmc
sbb
aad
jnp
jns
adc
inc
sub
lods
mov
sbb
ret
adc
rorl
adc
mov
pop
jae
divl
popa
divl
mov
mov
sbb
das
outsl
push
pop
inc
push
fnsave
dec
in
xor
inc
loopne
inc
fwait
popf
dec
ss
insb
cmp
inc
out
lods
xchg
popa
call
push
sbb
jp
out
mov
into
push
mov
repz
aam
dec
mov
inc
insl
movsb
rcl
ret
xchg
xor
decb
xor
mov
mov
cmp
sub
mov
popa
jns
pop
dec
cli
sbb
mov
and
adc
mov
lods
inc
cwtl
sarl
mov
xor
hlt
sub
sbb
jecxz
sub
inc
xchg
test
jnp
xor
outsb
jg
mov
mov
out
mov
cwtl
flds
aas
lock
ja
lahf
sahf
neg
imul
mov
ror
pop
cs
sbb
call
or
xor
and
mov
insb
jle
aam
push
vmwrite
hlt
push
mov
and
jg
sti
inc
dec
sbbb
push
fdivs
or
scas
dec
xchg
ror
dec
clc
jge
jp
cmp
out
arpl
mov
mul
scas
rcrl
dec
idiv
lcall
and
mov
lea
pop
out
outsb
inc
rcrl
push
stos
inc
scas
adc
test
fsubs
mov
in
cmpsb
sbb
and
jg
push
je
test
das
dec
inc
push
jmp
fcoms
adc
inc
aaa
lcall
aad
sub
inc
mov
ljmp
and
clc
cmpsl
add
cwtl
pop
cli
inc
jge
shrl
mov
std
jbe
movsl
enter
in
mov
sahf
sbb
mov
push
je
iret
sbb
fldcw
push
out
inc
dec
inc
or
mov
xchg
xchg
xchg
shlb
adc
pushf
xchg
push
pop
jmp
and
cltd
xor
sbb
je
ljmp
lds
js
stc
stos
pop
outsl
dec
fidivl
push
sub
adc
out
enter
jle
pop
xchg
rcl
rorb
fcoml
mull
mov
rcll
cmp
clc
or
fcmovnbe
cmp
outsl
add
mov
mov
in
push
push
pop
add
xchg
scas
mov
mov
mov
shlb
pop
cli
iret
fidivs
mov
aas
repz
push
mov
and
lret
rorl
shlb
pop
inc
cmp
int
mov
addb
cmp
daa
daa
mov
cltd
pop
arpl
inc
jge
pop
sub
es
xor
cltd
inc
mov
jb
scas
bound
fs
pop
mov
pop
fdivs
sarb
push
test
ret
shrl
ja
punpckhwd
les
xchg
test
jnp
xchg
aam
hlt
lods
loop
test
cmp
aam
int3
mov
ss
sub
pop
js
test
cmp
shll
inc
aas
xchg
adc
cltd
fdivrs
les
xchg
inc
push
je
mov
xchg
lret
xchg
shlb
and
inc
int3
in
push
xor
xor
sub
inc
add
sub
popa
lcall
pusha
and
xor
aad
stos
push
jp,pt
mov
aaa
pop
pop
or
adc
pop
test
and
pop
scas
inc
mov
ja
lock
fs
shll
mov
jmp
ficomps
dec
push
xor
ret
xorb
jae
adc
push
sub
pop
adc
xchg
sub
xchg
cmp
stos
loop
and
imul
mov
cmpsb
xchg
test
or
xlat
sti
ret
cs
inc
and
inc
cs
aam
scas
clc
mov
aam
jnp
xlat
rolb
sub
int
adc
test
mov
int3
jo
and
test
icebp
xchg
aam
ds
inc
jg
fsubp
adc
pop
add
cmp
aad
decl
or
or
dec
icebp
int3
jo
repnz
or
std
andb
mov
or
mov
or
xor
and
fsqrt
and
mov
pop
cld
lret
dec
mov
cmp
sub
dec
or
loop
inc
and
and
adc
faddl
ds
lods
out
mov
push
mov
imul
sub
inc
push
mov
mov
cmp
sbb
fcoml
xchg
sub
or
sub
roll
push
cwtl
dec
jnp
icebp
push
inc
pop
pop
adc
movsb
rorb
jno
adc
int3
mull
jo
dec
rclb
sub
insb
lods
xchg
aaa
or
cmp
mov
sub
dec
mov
cvttps2pi
sbb
xchg
pop
addr16
popf
sbb
mov
shll
xchg
mov
andl
clc
jge
rcrl
jl
adc
rclb
sbb
int3
sbb
pop
sub
mov
loop
sub
adc
mov
pop
push
dec
cltd
cmpsb
jmp
mov
sub
cmp
rcll
lcall
add
ret
mov
push
jno
xchg
xor
inc
xchg
push
fmulp
mov
push
dec
push
xchg
call
mov
inc
mov
fcmovbe
add
ret
mov
pusha
lds
lret
std
sub
bound
stos
insl
repz
lds
mov
pop
add
add
int3
jg
in
jne
jns
mov
jne
gs
ljmp
in
test
jecxz
xchg
push
sub
lahf
xchg
xchg
xor
mov
push
ss
int3
push
inc
fsubl
jmp
sbb
push
inc
dec
nop
and
cmp
pcmpgtb
pop
jmp
push
nop
adc
jne
mov
dec
xor
adc
or
pop
xor
dec
inc
fdiv
mov
test
cwtl
mov
pusha
ret
scas
xor
push
js
xor
and
cs
xchg
push
inc
inc
mov
dec
stos
pop
mov
jae
imul
stos
ja
or
cmc
mov
outsl
ss
dec
xchg
les
mov
imul
sti
outsb
mov
mov
xchg
lret
mov
push
test
cmc
add
mov
mov
jno
js
aam
xor
push
pop
gs
fildll
rcl
dec
stos
mov
push
jns
add
sti
adc
or
cmp
jge
fcos
mov
mov
inc
sbbl
icebp
in
cmp
mov
lret
mov
push
mov
xor
sbb
mov
lret
insb
loopne
insl
fldt
inc
sar
xor
or
lcall
ror
sar
fisttpll
jge
sbb
insl
mov
lods
xor
sbb
bound
scas
nop
out
outsl
sbb
in
inc
es
mov
cltd
pop
mov
xlat
push
sbb
mov
push
mov
and
pop
fisubl
inc
mov
jb
dec
mov
sbb
adc
pop
out
mov
cs
xchg
cld
inc
stos
push
jns
push
decb
push
lods
and
mov
mov
xchg
and
inc
add
pop
mov
sar
cmp
out
rclb
adc
sub
add
sahf
test
je
adc
lcall
imul
xchg
pop
sub
lea
and
push
sbb
xchg
jmp
out
test
add
enter
leave
xchg
sub
jbe
mov
sbb
aam
adc
add
mov
popf
jle
lea
jno
fiaddl
iret
adc
nop
test
mov
aam
lahf
mov
lret
out
lahf
xor
imul
pcmpeqw
test
incl
sbb
mov
les
out
or
imul
sbb
dec
lods
call
out
mov
test
ljmp
popa
popa
lret
mov
mov
dec
mov
cmpsl
xor
les
jns
inc
xor
mov
int3
je
push
rolb
sbb
push
mov
add
lcall
bound
out
scas
rcrl
aam
jp
jge
inc
inc
clc
push
mov
xor
pop
mov
pop
movsl
mov
cli
popf
lcall
xor
loope
dec
mov
imul
scas
js
mov
mov
sub
push
iret
fidivs
xchg
dec
arpl
pop
xlat
adc
nop
xlat
lea
mov
lods
lahf
sub
enter
cmpsb
movsl
insb
cmp
je
stos
test
aad
pop
in
sbb
pop
jge
xchg
das
xor
cwtl
cmpsl
pushf
mov
mov
push
mov
dec
enter
pushf
jb
jl
dec
cmp
cmpsb
adc
out
jne
adc
mov
jo
mov
outsb
mov
push
pusha
aas
or
lret
test
mov
pop
lods
ss
ja
fsubrs
jp
sub
cmpsl
mov
cmp
and
movsl
pop
adc
jg
aad
in
sub
shr
jb
enter
aas
mov
loop
pusha
pop
xor
mov
ss
add
outsl
xchg
pushw
dec
call
or
push
mov
sub
aam
daa
cmp
inc
mov
std
fsts
adc
mov
inc
fbld
shlb
mov
push
xchg
insl
daa
jge
mov
cli
aas
dec
add
sbb
idiv
outsb
loopne
sti
sbb
cmc
mov
push
xor
out
push
jge
sti
ret
outsb
jns
and
mov
and
sub
jp
fdivl
adc
inc
xor
sub
dec
nop
inc
and
jne
adc
pop
jg
loope
mov
lahf
xchg
add
bound
jl
test
adc
add
jge
pop
pop
shr
imul
inc
test
mov
xchg
int3
mov
loope
lret
jge
ret
dec
stos
out
ds
sbb
hlt
rorb
sbb
leave
or
mov
sarl
dec
sub
pop
mov
insb
cmpl
push
lret
ret
xchg
sbb
lock
andb
and
stos
jne
and
and
dec
scas
outsl
mov
push
into
push
sti
xchg
fwait
sub
aam
fwait
mov
lcall
cs
iret
shll
bound
mov
or
jo
pop
into
movsb
jl
enter
iret
add
cmpsl
xchg
xchg
add
cli
repnz
stos
push
insb
push
push
ja
adc
mov
push
hlt
xchg
adc
jo
lret
jecxz
stc
ret
call
popa
insb
mov
leave
or
insl
xor
mov
xor
push
sbb
adc
dec
sub
sbb
or
arpl
sbb
fsubrs
lods
inc
outsb
fstl
sarl
mov
xlat
xchg
addr16
lods
cmp
fisubs
inc
jp
sub
mov
cmpsl
push
push
dec
mov
add
lods
mov
pop
lock
cs
jae
sbb
mov
icebp
pop
sahf
mov
pushf
rol
fdivl
stos
test
lahf
mov
jns
das
mov
inc
push
shll
push
and
lea
xchg
mov
mov
fwait
mov
push
jp
dec
jg
fldcw
xchg
sbb
icebp
jge
sub
and
add
sub
inc
sub
addl
aaa
jbe
and
mov
shll
add
push
imul
sub
ficoms
bound
lods
xchg
fistpl
cmpsb
in
xor
repnz
mov
aaa
lret
rcr
or
out
cmp
mov
sti
test
je
faddl
push
stos
adc
inc
cli
sbb
popa
rcll
mov
cmp
pusha
xor
out
adc
loope
inc
inc
fdivl
ja
stos
mov
leave
in
add
lahf
inc
sbb
mov
mov
hlt
cmp
fstps
dec
mov
fs
inc
cli
sub
xchg
mov
inc
xchg
push
push
cld
cmc
mov
testl
mov
lret
ret
jae
and
cmpsb
push
ret
push
pop
repnz
rcrl
orb
or
inc
add
dec
mov
fsubrp
xor
jb
jge
dec
sbb
mov
dec
es
xor
lret
or
fstpt
xchg
mov
xor
xor
shll
aam
cmp
xchg
ficoml
mov
imul
fs
xchg
inc
jb
sbb
or
test
xchg
fnstsw
scas
in
aad
mov
rorb
xchg
adc
gs
jl
push
icebp
pushf
pop
scas
or
and
push
stos
push
movsl
lods
push
pushf
pop
push
cmpsl
bnd
or
popf
mov
pop
pushf
fnstenv
pop
xchg
mov
or
mov
push
out
loop
insl
dec
add
inc
sub
arpl
in
jp
mov
mov
or
stos
ss
sbb
popf
or
cmp
outsb
enter
orl
mov
push
lret
dec
xlat
sbb
ljmp
lods
xchg
xchg
jmp
stc
jno
ljmp
ja
jae
jnp
js
sbb
mov
leave
mov
xchg
das
lods
into
and
lcall
lods
shrb
or
pop
cld
sbb
dec
outsl
lea
push
jle
jne
xlat
add
mov
xchg
and
cmp
sbb
jecxz
inc
lret
popf
push
loop
out
push
cmpsl
nop
loop
lret
mov
enter
xor
pop
adc
cmpsl
out
inc
sbb
pop
adc
pushf
jp
dec
lcall
mov
jecxz
xchg
aaa
rolb
mov
dec
sarl
aaa
jne
lahf
stc
mov
lcall
cs
call
ss
enter
mov
ret
repz
mov
ds
sub
sub
adc
mov
xchg
test
xor
or
cmp
xor
xchg
rcl
ss
pop
js
xchg
out
xchg
sbb
and
mov
inc
insl
pop
adc
mov
fnstenv
hlt
loopne
mov
add
je
lahf
pop
insb
push
scas
and
jmp
hlt
lcall
lock
dec
xor
mov
xchg
cmp
lea
add
leave
lret
stc
add
addr16
inc
xor
adc
cmp
inc
pop
sub
mov
inc
add
pushf
mov
repz
cld
ja
popa
xorb
xchg
mov
inc
xchg
vmread
sti
clc
xor
fstpt
mov
push
mov
add
es
ss
xorb
xchg
dec
push
and
jno
decb
mov
shlb
js
cmp
das
push
outsl
insl
ss
int
scas
std
call
loopne
and
pusha
push
je
jmp
cmp
mov
push
xchg
mov
fwait
mov
xlat
adcb
loope
push
or
mov
pop
movsb
sub
adc
cmp
and
pusha
ja
jbe
or
mov
or
cmp
sub
inc
cwtl
push
inc
in
cld
pop
int3
pop
outsl
jg
jbe
or
rclb
addl
adc
rolb
test
xlat
cmp
jl
inc
mov
adc
out
jns
xlat
mov
ret
out
std
or
jge
cmp
aad
dec
mov
mov
mov
mov
cmpsl
jmp
cld
adc
lcall
clc
inc
cwtl
ja
mov
inc
push
lahf
jns
std
scas
cmpsl
and
mov
leave
adc
mov
jns
inc
jg
into
mov
sub
push
data16
scas
fidivrl
or
fistpl
push
or
xchg
sub
cld
fcom
mov
jmp
jge
rcr
outsl
sub
cmp
repnz
xor
sbb
mov
hlt
shlb
ljmp
movsb
sbb
mov
pop
sub
neg
cwtl
push
xchg
pop
out
jecxz
subl
add
xchg
pop
cmp
iret
xor
or
xchg
stos
push
ds
sub
das
je
mov
insl
out
mov
shlb
hlt
mov
lret
adc
hlt
xor
testb
movsl
cmp
pop
cltd
out
outsb
sub
out
add
out
jne
inc
sub
jle
jae
aam
mov
repz
jne
ljmp
das
and
adc
xor
fcomps
daa
pop
mov
repz
sub
sti
xor
cmp
push
in
xchg
out
push
test
mov
out
ret
mov
mov
and
dec
shr
xchg
in
popa
adc
pushf
repz
mov
pusha
adc
popf
int
iret
imul
sub
push
dec
cmpsl
inc
ja
cmc
lret
cltd
aaa
dec
push
ljmp
ret
mov
inc
mov
gs
imul
loope
xchg
lahf
imul
jo
mov
cmp
xchg
out
pop
adc
fisttps
popa
sbb
mov
and
cmpsl
pop
fsubrs
mov
and
scas
push
arpl
bound
call
inc
mov
lret
clc
ja
jo
pop
test
pop
pusha
cmp
jle
mov
pop
push
and
xchg
pop
or
xor
call
or
lea
dec
movsl
sbb
sub
xchg
adc
fldt
jge
rclb
jecxz
jbe
out
mov
arpl
das
lret
loop
and
pop
int3
add
ss
lds
mov
sub
xchg
push
decl
mov
push
clc
mov
dec
nop
xchg
or
addl
mov
mov
mov
inc
mov
jae
push
stc
negl
and
in
adc
jecxz
inc
sub
cltd
stc
or
or
aaa
sbb
cmp
cmpsb
cli
pop
mov
flds
das
sbb
xorl
adc
pop
add
ret
lods
mov
pop
inc
push
pop
sti
fistl
pop
xchg
fisubl
rclb
mov
mov
mov
int3
stc
jmp
inc
mov
mov
lcall
dec
outsb
cmp
cld
sub
pop
adc
mov
adc
mov
and
mov
xchg
divb
or
add
add
mov
jb
sti
adc
fdivs
sub
mov
icebp
cmp
and
and
loopne
in
in
sub
stc
push
xchg
lds
out
aaa
sbb
push
repz
jo
dec
call
pop
sbb
in
xchg
mov
mov
jo,pn
aas
mov
out
hlt
jl
shl
fnsave
andl
cmpsb
add
cmp
inc
frstor
xor
cmp
inc
mov
popa
in
scas
push
mov
fiaddl
or
xor
roll
mov
xchg
mov
sbb
push
mov
scas
lock
inc
xchg
scas
sahf
das
pop
xor
mov
adcl
daa
dec
xor
subb
pop
mov
mov
inc
imul
das
push
jp
and
dec
jmp
frstor
das
shll
shr
sbb
call
into
stos
push
out
stos
sub
xchg
add
mov
je
fnstenv
lds
jns
or
cmpsl
data16
fistpll
out
pusha
pusha
pop
cmp
in
inc
jb
adc
movl
addl
or
test
push
inc
dec
cmc
ss
rorb
in
mov
clc
xor
jl
stc
mov
in
js
cmp
inc
notb
enter
and
shr
in
lods
lock
pop
mov
icebp
jmp
inc
loopne
clc
xchg
out
je
leave
jp
adc
add
inc
rclb
bound
sbb
imul
mov
sub
mov
sub
std
jb
ret
int3
jne
test
jnp
sbb
xor
adc
adc
pop
shrb
add
adc
lret
sub
xor
lret
ret
xor
push
pop
mov
fidivrl
arpl
popf
jno
jno
mov
or
push
sub
xor
sub
ds
sbbl
dec
xchg
xchg
xor
cmp
jp
push
push
add
sbb
inc
inc
cltd
repz
mov
xchg
mov
clc
data16
xchg
jl
lock
mov
xchg
insb
imul
sbb
inc
nop
adc
pop
add
loop
jecxz
or
sbb
daa
ljmp
cwtl
scas
clc
mov
imul
mov
outsl
ret
inc
add
cld
lret
testb
jnp
sarb
aad
adc
jp
jbe
dec
xchg
mov
addr16
in
push
cmpsb
or
xorb
and
sbb
rcrb
fisttps
sub
aad
inc
mov
stc
scas
rolb
std
mov
jle
or
sbb
mov
inc
cmp
adc
in
mov
mov
cmc
out
xchg
jae
movsl
push
imul
add
mov
cmp
mov
mov
pop
pop
sub
mov
mov
repz
xor
outsl
cmp
mov
mov
mov
pop
inc
sbb
mov
addr16
xchg
jmp
cwtl
aad
mov
stos
pusha
lods
xor
xchg
push
or
xchg
pop
xchg
dec
inc
push
jns
testl
push
int3
push
mov
ljmp
mov
or
mov
pushf
or
inc
ss
inc
jb
movsl
jo
lods
sarb
call
lods
mov
xor
ja
lods
sbb
leave
out
mov
and
pop
cmp
inc
aad
fiaddl
push
test
pop
inc
shll
iret
ficompl
pop
adc
pop
xchg
and
clc
lea
pop
add
push
lods
sahf
and
or
inc
inc
addl
outsl
sbb
in
add
in
cmc
imul
add
jno
inc
cmpsb
addr16
sub
cs
aam
aas
in
jmp
xchg
fstp
jae
shlb
jp
js
jp
mov
and
lock
adc
adc
xor
mov
cmp
mov
xchg
das
sub
xor
xchg
arpl
xchg
sbb
add
out
jp
mov
cmp
jne
push
push
lock
icebp
push
mov
in
mov
test
popa
daa
pop
stc
aas
push
add
stos
lret
xor
daa
lods
inc
xor
pop
add
jbe
jno
insb
aas
cmpsb
sbb
dec
pop
popa
das
cmc
imul
jecxz
mov
mov
test
jmp
div
mov
out
dec
ljmp
movsb
xchg
dec
fdivs
mov
pop
pop
jo
push
jg
test
sub
je
pusha
leave
addr16
dec
push
pop
ss
pop
ret
jl
jbe
jns
lret
push
call
shrl
cmpsb
scas
pop
ss
and
pop
pop
inc
lahf
jne
xor
add
mov
dec
mulb
dec
clc
jl
mov
std
popa
lods
call
stc
jb
mov
xlat
sub
adc
rcrb
daa
into
add
movsb
mov
movsb
into
add
and
lods
lret
push
subb
dec
je
jle
mov
sub
ret
jno
dec
jmp
mov
add
adc
adcl
popf
pop
repz
lcall
or
mull
inc
sbb
mov
lods
push
xorb
adc
sub
enter
or
outsl
jne
pop
fistl
cmp
test
outsl
dec
pop
sbb
pop
sahf
out
fwait
daa
out
mov
lds
out
les
pop
jle
fistpl
sub
mov
inc
xchg
push
jnp
out
lods
stc
pop
jae
xor
test
inc
pushl
push
idivl
out
insl
insl
jb
mov
loop
mov
dec
sti
xchg
jmp
cltd
push
xchg
mov
jo
xchg
adcb
outsl
int
clc
sbb
cwtl
push
sbb
loope
inc
adc
fisttpl
xlat
jo
into
dec
rcr
fcmovnu
in
inc
push
ja
cmc
inc
and
mov
aaa
mov
cltd
jmp
or
ret
sbb
push
jns
xchg
je
cmp
pop
cmp
pop
mov
or
inc
jmp
aad
dec
js
push
aam
and
jmp
mov
push
jbe
popa
sarb
clc
test
adc
jae
mov
xchg
push
xchg
aad
adc
cmp
mov
out
fpatan
out
imul
je
sbb
clts
add
push
xor
mov
mov
andb
mov
loope
lret
test
divb
rorb
pop
dec
lds
inc
or
js
inc
movsl
movnti
testb
in
xor
out
sub
pop
sbb
pop
jne
mov
mov
popf
jecxz
adc
in
jae
leave
pushw
ja
mov
pop
enter
xchg
xchg
mov
testl
lods
adc
inc
subb
mov
sub
out
cmp
outsb
rcrl
popa
xchg
rcrb
adc
icebp
or
sub
jae
hlt
mov
cmp
ficoms
test
push
stc
fcoms
lds
add
ja
out
mov
shll
popf
push
cwtl
and
mov
scas
jno
adc
lahf
fsubr
fistps
and
daa
xor
int
fsubr
gs
pusha
mov
int3
fwait
adcb
imulb
into
in
loopne
jno
in
ja
roll
aad
push
push
fs
mov
inc
lods
loope
fdivrl
dec
stos
xchg
imul
and
int
test
subb
jns
clc
push
push
lods
outsl
addr16
push
add
and
stc
jecxz
outsl
inc
cmc
jb
jnp
mov
push
je
in
pop
mov
daa
sarl
push
dec
mov
mov
inc
push
inc
orb
ljmp
push
and
jge
scas
cli
adc
xchg
ja
fdivrs
pusha
sbb
aad
cmp
dec
inc
dec
scas
out
xor
add
and
mov
jns
jne
int3
outsl
dec
jne
les
lcall
outsl
sbb
out
stos
push
dec
pop
ljmp
xchg
dec
or
xchg
mov
dec
mov
sbb
push
mov
jb
xchg
xor
out
adc
sbb
lea
inc
lahf
stos
test
in
adc
hlt
dec
insl
ss
mov
in
mov
fists
mov
and
in
test
test
mov
sbb
sbb
mov
push
pop
flds
hlt
fs
fs
out
sti
insl
rol
into
stos
lsl
mov
jae
clc
stos
jmp
dec
mov
cwtl
fcompl
jp
in
jl
pop
push
mov
xor
out
mov
mov
dec
mov
pop
dec
out
shlb
and
mov
xor
je
leave
cmp
sbb
jbe
jl
jmp
or
subb
das
sub
in
push
jnp
add
bound
push
push
iret
xchg
inc
jae
mov
flds
pop
movsl
cld
rorb
mov
repz
cmp
mov
out
jne
out
inc
pop
fstps
mov
inc
cmp
cmova
cmp
inc
cmpsb
mov
in
lea
repnz
xlat
leave
jmp
or
outsb
ret
orl
ja
lcall
sub
add
xor
das
dec
xor
mov
jb
fistpl
sub
pop
adc
stos
popf
mov
orb
xchg
int3
cmp
lock
pop
mov
add
dec
outsb
sub
lret
mov
lret
pop
cmp
inc
shlb
es
mov
sub
add
sti
cmp
stos
adc
sbbb
lret
aam
and
leave
loop
xor
push
shrb
xchg
je
xor
pop
mov
mov
add
add
int
cwtl
in
dec
mov
xor
push
push
stc
cmpsl
shlb
movl
jbe
jb
push
and
lods
xor
mov
out
cld
pop
xchg
add
sub
scas
sarl
testb
adc
adc
and
mov
and
fiadds
sbb
outsb
pop
jb
push
jp
test
pop
mov
js
xchg
call
cmp
orl
sub
mov
or
mov
xchg
cltd
mov
and
popa
insb
orb
in
xchg
aaa
jge
adc
incb
pushf
sub
mov
fidivl
push
loopne
jle
xorl
dec
jae
inc
sbb
ss
push
lock
jmp
and
push
cli
push
nop
cmc
cld
dec
push
icebp
cmpl
and
xchg
dec
mov
adc
pushf
popa
sbb
fiadds
inc
fsubl
cmp
outsl
fwait
sbb
or
enter
in
add
out
push
and
jne
mov
xor
xchg
adc
cmp
idiv
lcall
addb
sahf
insb
mov
mov
dec
jns
rcll
inc
aas
sbb
adc
cmp
and
icebp
xchg
and
sti
xor
clc
xor
xchg
or
inc
hlt
inc
add
insb
push
jnp
in
cmp
loop
mov
dec
cli
outsl
daa
or
push
jno
xchg
lea
popa
fcomi
push
jge
push
xchg
inc
mov
jns
sbb
mov
fwait
jp
int
popa
mov
jl
movsl
sbb
ret
subl
or
sbb
loop
jno
xchg
mov
inc
xor
std
inc
mov
push
insb
pop
jmp
inc
push
jns
fists
pop
fiaddl
jns
cwtl
addr16
mov
sbb
xor
xor
jmp
xor
mov
push
xchg
dec
mov
pop
daa
lcall
add
or
pop
movsb
push
movsl
movsb
fisubs
ja
shll
arpl
inc
mov
incl
mov
arpl
scas
lcall
imul
cmp
cmp
ret
push
pop
pop
jle
xor
cmp
inc
sbb
ss
fs
cltd
inc
cld
lcall
test
aam
dec
xlat
lds
rolb
push
popa
ret
int
inc
jbe
ds
clc
dec
ret
fs
adc
ret
fiadds
scas
push
sub
dec
cmpl
aad
xchg
data16
fs
push
ret
inc
mov
and
scas
lret
les
icebp
ficoml
sub
dec
ja
fwait
xchg
movsl
aaa
and
je
sbb
xlat
inc
cli
cmp
iret
mov
lock
sub
or
ror
cmc
mov
adc
jns
out
jge
cli
mov
xor
aaa
loop
in
loop
fsubrl
cmp
inc
ds
adc
push
push
cmpsb
xchg
adc
sbb
jmp
xlat
or
lods
or
sub
leave
mov
xchg
lea
call
incb
inc
stos
in
data16
or
or
push
scas
ss
or
jns
cmp
ret
cmp
fcom
xor
jle
or
mov
cmp
cs
add
ret
pop
enter
xchg
jl
adc
lock
adc
mov
jle
fisubrs
das
icebp
jne
imul
std
in
lret
pop
xor
or
lret
shl
xlat
pop
or
jle
movsb
push
xlat
lock
mov
stos
clc
aam
xchg
mov
add
and
mov
inc
out
scas
adc
dec
movsb
loopne
cltd
push
adc
pop
in
mulb
ret
inc
aas
bound
leave
pop
pop
cwtl
adc
ja
jo
addr16
jns
add
mov
jne
shrb
push
mov
je
rolb
lods
lods
repnz
jecxz
cmpb
arpl
test
mov
and
rcll
cli
add
mov
aaa
push
push
ret
shll
or
stc
and
lock
xlat
addr16
jmp
adc
mov
jmp
shrl
fistpll
jo
jg
push
pushf
mov
loopne
lock
jp
outsl
or
pop
push
and
pop
fdiv
xor
pop
rorl
sub
sub
jnp
xchg
in
xchg
mov
mov
in
psrld
add
mov
icebp
push
add
cmp
adcl
mov
rorl
or
add
fnstcw
dec
xor
insb
sub
mov
push
mov
dec
in
test
cli
add
jbe
clc
movsb
out
std
nop
pop
int3
loope
test
mov
subb
imul
xchg
aad
fdivr
adc
pop
mov
or
push
stos
ds
out
mov
insl
outsb
hlt
loopne
lret
aaa
dec
ds
sbb
loope
sub
push
lahf
orb
sub
add
divb
mov
test
testb
mov
cmp
dec
aas
movsl
mov
cmp
pop
divl
cmp
shufps
cmpsb
rcrl
dec
xchg
push
xlat
ret
push
add
nop
mov
cmpsb
pushf
lret
stos
cmp
push
adc
and
jno
aaa
ds
insl
arpl
pop
pop
lods
les
sbb
popf
or
jecxz
xchg
ret
sbb
orl
xchg
sbb
cmp
mov
sbb
loopne
cmp
mov
adc
cli
mov
ret
insb
fidivrs
xor
jle
out
sbb
int
pop
popf
jae
or
xor
fs
stos
stc
adc
pop
test
and
pop
js
inc
sbb
fsqrt
out
jl
nop
cmp
xor
addr16
jno
je
xchg
out
arpl
div
stc
add
ss
stc
ret
fimuls
sti
addr16
jae
jbe
mov
and
imul
imul
xlat
cli
fiadds
clc
mov
push
mov
scas
ds
out
faddp
sarb
mov
int3
lret
vmovaps
mov
pop
bound
add
leave
call
imul
fwait
or
mov
adc
mov
sarl
bound
popa
test
hlt
incl
mov
ret
jle
je
sub
ds
loop
inc
lcall
js
mov
mov
pop
scas
cld
xor
xchg
xchg
aas
cmpsb
cmc
outsl
loop
bound
sbb
and
xchg
jg
sahf
dec
stc
jl
adc
add
cmp
push
xor
mov
fidivrs
sti
ljmp
mov
int
popa
loopne
mov
cmp
insl
nop
dec
xor
sbb
mov
fcomps
cmpb
dec
pop
enter
repz
outsb
sti
aaa
xor
dec
xchg
data16
pop
ret
cmp
sub
loope
std
popa
dec
xlat
and
pop
or
xor
mov
icebp
cmp
jnp
xchg
inc
leave
mov
ja
adc
fsubs
shrl
sbb
adc
add
pop
pop
adcl
insl
pushf
mov
xorl
jle
cmpl
push
aaa
sub
add
testb
iret
push
and
mov
add
cmpsl
push
das
adc
pusha
orl
ja
dec
pop
push
or
sub
cmc
les
pop
sub
and
fidivrs
push
lock
sbb
mov
add
mov
mov
sub
imul
mov
out
into
xchg
notb
filds
ss
mov
push
mov
gs
call
mov
frstor
add
or
xor
sub
add
push
test
push
fldenv
xor
in
aas
xchg
dec
ret
out
or
push
cmp
fs
es
xor
xchg
loop
add
and
xor
jg
xor
in
and
pop
shll
sbb
clc
dec
lcall
cmp
stos
xchg
lock
pop
fdivp
sub
je
imul
inc
mov
inc
mov
rcl
repz
pop
insb
or
into
add
test
in
adc
adc
rcr
pusha
adc
or
jne
nop
dec
jmp
inc
int3
outsl
scas
out
adc
inc
mov
cmp
rorb
fwait
movsb
int3
dec
or
push
mov
mov
mov
test
mov
adc
fwait
sub
testl
inc
popa
icebp
rol
mov
cmc
mov
inc
rcrb
mov
idivl
mov
push
ss
dec
inc
xlat
outsb
and
push
test
pop
push
xchg
adc
mov
pop
dec
add
addr16
sbb
aaa
test
and
push
rclb
test
pusha
or
ret
jg
dec
loopne
jae
jp
pop
mov
jl
mov
xchg
ficoml
jge
xchg
push
js
ret
fcomps
addb
arpl
sub
mov
sahf
mov
gs
sarb
or
int3
inc
adc
in
jnp
insl
nop
lds
imul
pop
aad
mov
mov
mov
push
fcomps
mov
ret
cmp
dec
inc
cmc
xlat
sub
lahf
inc
dec
jg
mov
lea
inc
imul
sbb
sbb
mov
mov
in
test
std
and
jg
mov
xorl
pushf
bound
add
or
adc
fisubs
dec
js
xor
daa
or
int
repz
addb
loop
mov
xorb
inc
xchg
and
test
mov
or
pop
into
mov
jge
mov
inc
mov
adc
adc
lds
jge
inc
mov
mov
outsl
push
jge
scas
js
mov
xchg
ja
ss
in
jb
adc
jmp
mov
dec
push
repnz
ret
aam
movzwl
ret
jle
shlb
jno
push
insb
decl
jle
notb
xchg
insb
cltd
dec
dec
or
push
xchg
loope
cli
push
jge
dec
mov
in
lcall
push
insb
add
mov
aam
outsl
xlat
popf
aaa
fsubrs
adc
jnp
lcall
rcr
cmp
mov
sbb
inc
clc
jb
ds
daa
inc
push
arpl
into
mov
pop
mov
clc
movsb
popa
das
fisubs
mov
fisubs
xor
push
mov
imul
jl
sub
xchg
call
push
fcmovne
shll
fnstcw
mov
aas
cli
jge
xor
mov
mov
jmp
dec
lods
pop
lret
xchg
das
mov
mov
push
sarb
aad
sbb
xor
ljmp
jae
add
jmp
prefetchw
ss
pop
loope
fsub
aad
pop
pusha
test
ret
adc
pop
ja
mov
outsl
add
imul
push
or
bound
lahf
mov
clc
inc
add
dec
dec
adc
jle
and
adc
out
xchg
or
pusha
lret
xchg
imul
ret
shlb
xor
push
js
orb
and
or
push
int3
pop
lahf
mov
ja
and
rep
push
inc
xor
fsubl
cltd
inc
or
out
cmpsl
pop
call
jbe
mov
and
fwait
aaa
lcall
in
out
push
jle
inc
mov
ljmp
lods
popa
test
jb
aad
and
fmull
and
or
jb
mov
xor
data16
sub
mov
in
outsl
dec
aas
xchg
jp
or
test
and
dec
push
sbb
cmpsb
cmpsb
iret
cmpsb
loopne
aaa
jecxz
mov
jo
add
jp
mov
inc
js
hlt
cwtl
sbbl
xor
test
jo
popa
insb
lods
cmc
jmp
leave
xchg
call
fmul
sbb
push
mov
and
pop
sub
mov
dec
sub
fidivrl
dec
inc
pop
sbbl
pop
out
xchg
rcr
and
pop
int
roll
cmc
ret
mov
adc
xor
sbb
lds
aam
jg
xor
dec
adc
addb
jg
sahf
mov
fidivrs
scas
adc
sbb
les
sub
les
cltd
stos
arpl
xchg
jge
push
inc
pop
xchg
popf
push
lret
push
pop
sbb
xchg
scas
sarb
fwait
iret
shrl
xor
loope
xchg
sub
xor
in
aaa
mov
push
cwtl
stc
movsb
rcrl
test
scas
fs
lcall
pop
adc
sub
xorl
inc
xchg
mov
out
lcall
cmp
cmp
mov
xchg
mov
push
push
jle
inc
stos
or
mov
adc
mov
sub
cmpl
sbbb
mov
cmpsb
mov
repz
jno
loopne
pop
movsb
sbb
mov
lret
cmpsb
pop
cmp
sub
xorl
mov
cmp
incl
pop
mov
int
in
and
enter
lock
std
sbb
lret
jnp
pushf
mov
out
divl
roll
leave
pop
scas
jmp
push
dec
sti
sahf
stos
add
andl
or
out
sbb
dec
cmc
das
jns
adc
arpl
cmp
fbld
lret
jp
inc
xchg
insb
lods
imul
test
pop
movsl
push
loopne
lahf
shll
insb
jg
jns
pop
fcoms
movsl
pop
lahf
daa
pop
jae
mov
les
mov
cld
lds
loop
std
fsub
xchg
push
sahf
mov
or
mov
stc
pop
dec
lea
cmp
mov
lahf
inc
lds
pop
ja
popa
mov
and
pop
aaa
dec
add
jae
cmp
out
and
jno
add
outsb
mov
cli
fidivrs
push
xchg
mov
mov
popf
stos
out
and
add
dec
ds
mov
aam
jp
mov
sub
inc
xor
mov
or
sahf
outsl
subb
mov
icebp
fcom
mov
aad
cmp
mov
les
or
daa
addb
adc
arpl
push
cmp
adc
fs
dec
cs
mov
scas
fildll
in
fmull
xor
jbe
aaa
pop
push
cs
pop
pop
enter
and
add
mov
loopne
mov
cmp
lods
insb
mov
rorl
mov
clc
push
xor
fmull
inc
fdivs
lods
or
and
jns
xchg
inc
js
or
mov
jecxz
fists
dec
test
ds
lret
push
dec
jo
mov
xor
push
dec
pushf
js
adc
fcoms
pop
dec
xor
adc
bndstx
xor
pop
dec
out
push
lcall
and
cld
ljmp
out
das
pop
xor
pop
mov
pop
into
ja
aas
rcl
and
das
or
scas
in
lds
jle
das
cltd
sub
sarl
xor
sub
or
jo
mov
mov
mov
mov
icebp
mov
sub
cmp
test
movl
out
addr16
push
jbe
stos
inc
jge
push
and
adc
and
in
icebp
and
pusha
repnz
popf
sbb
aam
xchg
imul
lret
jg
js
data16
inc
inc
lret
sbb
sub
jecxz
sti
mov
jb
test
and
sub
in
call
mov
xor
das
push
xor
jmp
loope
sub
sub
push
mov
test
xchg
push
mov
addr16
mov
mov
sarl
sub
outsl
stc
ret
repz
cld
sbb
ret
int3
mov
or
inc
push
mov
jecxz
stc
inc
adc
outsb
prefetchwt1
or
mov
xorb
jecxz
adc
cmp
pop
mov
cltd
inc
fisttpl
cmp
mov
jo
repnz
cltd
out
mov
pop
pusha
mov
lea
sub
fbstp
mov
scas
fisubrs
icebp
inc
inc
test
add
lds
divb
les
call
mov
push
cmp
cwtl
out
push
mov
fstpt
sbb
daa
lds
ja
aas
sbb
sahf
insl
das
jnp
mov
notb
cmpl
inc
inc
call
xor
mov
scas
inc
mov
shlb
cmp
inc
imul
add
cmp
rsm
xor
je
test
aas
jge
jae
mov
mov
lret
rcrl
or
mov
cmpsl
sub
stos
shlb
ss
test
popa
mov
out
outsl
cmp
aam
movsb
outsb
pop
or
int
mov
ja
sbb
jg
mov
call
mov
jmp
lods
test
mov
or
fistpl
and
jl
fisttps
sarb
jl
sti
nop
repnz
out
dec
mov
jae
xor
clc
leave
xchg
sub
or
repz
loop
pop
xchg
leave
stos
jbe
enter
xchg
sahf
in
add
repnz
jl
pop
dec
or
or
and
cmc
cmp
sbb
mov
lea
lock
ret
cmp
movsb
testb
sbb
mov
adc
enter
add
mov
imulb
jmp
jb
xchg
mov
inc
inc
cmp
sti
cld
sub
or
fs
fwait
popa
or
insb
push
pop
push
cmpordps
cmp
pushf
push
xor
aaa
loopne
mov
jnp
push
mov
test
daa
fmul
ret
add
clc
push
iret
es
or
push
adc
jmp
jg
inc
in
aad
pop
mov
data16
shll
or
in
outsb
idivl
and
cs
icebp
cmp
jg
shrd
sbb
outsb
push
ljmp
pop
out
sbbb
in
pushf
cs
test
dec
pop
push
mov
jo
pinsrw
rorb
movsl
jl
mov
insl
jbe
popf
sub
pop
ss
mov
add
mov
sub
sub
icebp
xchg
hlt
xchg
in
inc
sbb
or
sbb
mov
fisttps
sub
clc
adc
sbb
loope
cli
insl
push
testb
sarl
outsb
jbe
pop
push
xor
sbb
mov
push
nop
add
sub
cmp
mov
insb
xchg
arpl
sbb
les
pop
or
int
fsubr
mov
cld
test
popf
iret
mov
mov
add
fsubrl
push
mov
cwtl
sbb
inc
xor
sbb
sub
lods
pop
dec
or
add
aaa
insl
pop
imul
shrl
jle
and
sub
ja
or
inc
js
icebp
mov
fstps
push
out
aad
or
mov
inc
faddl
and
pop
repz
inc
rcrl
sbb
fdivr
fdivs
jecxz
repz
cmpsb
or
inc
rol
scas
fmuls
add
xchg
sub
nop
outsb
push
mov
xchg
cwtl
sub
gs
movl
pop
in
mov
arpl
clc
sub
frstor
mov
cmpsb
jae
popa
dec
pop
lds
inc
bound
enter
std
sbb
movsb
cmp
loop,pn
popf
add
mov
mov
outsl
pop
mov
mov
int
add
fimuls
sbb
les
imul
hlt
push
cmp
adc
and
test
arpl
sub
ret
sub
pop
icebp
mov
push
or
in
mov
jnp
cld
lods
outsl
inc
ds
andb
shlb
dec
loope
and
sbb
out
fwait
in
adc
es
repz
mov
stos
xor
dec
push
adc
push
das
sub
les
mov
stc
xor
and
sbb
xchg
subb
xor
call
xchg
jl
decl
push
pop
andl
adc
xor
mov
dec
mov
add
mov
push
add
or
jne
aad
lds
inc
mov
pop
or
inc
enter
scas
push
or
mov
clc
movsl
mov
dec
add
fcoms
test
aaa
int
scas
or
aas
add
mov
outsl
lcall
pop
adc
cs
sub
movsb
lea
loope
xorb
push
add
xor
movmskps
and
dec
cmp
jnp
ret
inc
cli
jbe
popa
jbe
mov
mov
jbe
mov
xchg
outsl
movsl
les
push
filds
xor
movsl
popa
push
cmp
mov
and
sub
xor
jnp
lahf
aaa
clc
sbb
cmp
ret
inc
or
je
jo
cmpl
popf
or
fstpl
add
scas
ds
fsubl
ljmp
push
xchg
or
sbb
mov
add
in
cmp
cltd
and
mov
outsb
in
dec
frstor
out
jp
lods
push
dec
adc
in
xchg
inc
inc
test
test
pushf
sub
pop
aas
sub
insl
inc
inc
mov
loopne
int
test
outsl
filds
mov
pop
outsl
je
and
push
add
push
fistpll
push
out
sub
cli
pop
lret
test
aam
mov
push
pop
mov
out
daa
mov
xchg
cmpsl
sbbb
jbe
addl
fisttpl
repnz
call
rorb
pop
rolb
push
push
cmp
scas
inc
inc
mov
fdivrl
or
or
lods
add
out
cmp
mov
dec
dec
dec
inc
les
pop
sub
pop
lret
push
pusha
jmp
imul
and
cltd
pop
daa
popa
stc
ret
add
inc
movsl
stos
ljmp
movsl
pop
insb
jmp
mov
rorl
pop
sbb
cmpsl
xchg
pop
loop
fs
rolb
lahf
or
hlt
pop
sub
add
add
addl
ja
hlt
xor
push
fidivl
or
lcall
aas
popaw
push
popa
mov
and
mov
jl
add
pop
movsb
pop
insb
inc
sub
adc
into
dec
sub
clc
fst
adc
jle
imul
stos
push
test
imul
mov
pop
lret
into
jne
cmp
insb
mov
sti
jmp
mov
movsl
call
cmp
mov
aad
sbbb
aaa
xchg
fmulp
mov
lds
sub
add
stos
lcall
ret
mov
icebp
loopne
pop
arpl
add
cwtl
lahf
js
aaa
jge
lret
ja
fsubrl
pusha
sub
inc
xchg
jle
jge
ja
sbb
lods
dec
aam
inc
nop
add
notb
fsubr
clc
dec
or
and
adc
in
xor
je
das
movsb
mov
aas
lahf
roll
rcrb
dec
add
fistpll
add
cwtd
jmp
sbb
lcall
xchg
dec
pop
scas
mov
mov
aas
jne
add
call
mulb
imul
xlat
pop
add
in
pop
fwait
and
add
ds
je
int
mov
rolb
xchg
inc
dec
cmp
fnstcw
inc
pusha
std
pop
icebp
out
das
mov
pop
xchg
jns
out
inc
xor
sub
xchg
jecxz
inc
sub
imul
stos
in
push
cmc
lea
in
cmc
jb
ja
mov
into
mov
push
push
and
mov
and
xchg
adcl
add
fmul
add
mov
or
dec
negb
aam
int3
mov
sbb
jg
loope
mov
inc
mov
test
inc
cwtl
dec
xor
dec
mov
cltd
jnp
das
push
lahf
ja
iret
std
mov
popa
test
inc
xchg
mov
loop
outsl
fstpt
xlat
loop
fnstcw
mov
push
push
and
mov
xlat
mov
testl
sarl
mov
lds
sub
daa
call
and
imul
fs
pop
xor
mov
ror
jbe
mov
add
in
dec
and
push
ja
mov
mov
xlat
arpl
jbe
push
mov
xchg
push
pop
xchg
mul
insb
jmp
xchg
push
jle
cld
fistpl
cmpb
div
jg
dec
pop
xchg
lods
sbb
cli
fdivl
add
push
in
sub
pop
pushf
nop
jb
lret
push
pop
cwtl
or
cmp
inc
fdecstp
mov
mov
mov
xor
ret
cwtl
push
sbb
sahf
mov
xor
insb
cli
adc
fnstcw
lea
push
inc
adc
or
imul
rorl
cli
adc
mov
jp
push
dec
movb
mov
loope
fs
and
pop
ror
test
push
cld
mov
cmpsb
mov
mov
xor
or
push
pop
js
ljmp
loopne
stc
mov
cmovae
int
mov
pop
push
jae
mov
sbb
ret
test
aad
mov
std
std
js
add
int
nop
adc
stos
insb
sbb
and
insl
xor
mov
mov
and
movsl
inc
push
mov
xor
sbb
sub
sub
aaa
stos
call
inc
lods
adc
sub
sub
cmpsb
jnp
add
mov
repnz
jmp
mov
call
dec
enter
push
in
or
call
mov
sti
jo
insl
lahf
sbb
or
lret
cld
rcll
sbbb
push
enter
mov
ss
push
push
aaa
loop
imul
cld
mov
gs
sub
cli
in
jge
in
or
jne
es
rcrb
scas
push
test
les
cmp
es
ror
clc
jle
push
and
push
insl
shrl
jg
xchg
xchg
cs
aam
push
lock
lods
out
pushf
in
xor
add
pop
out
dec
jmp
jle
test
aam
and
out
mov
xor
test
mov
icebp
xchg
add
hlt
cmp
jmp
ret
loop
or
adc
ja
cltd
lea
or
adc
mov
cmp
push
cmp
push
gs
adc
dec
lcall
jl
pop
shll
popf
or
loope
pop
jle
sub
ficoml
lea
sub
inc
outsl
cmp
fdivl
in
out
call
lcall
mov
jno
cli
aaa
pop
inc
lds
push
int
fucomi
mov
mov
std
pop
rcrb
xor
addb
push
jmp
jo
xchg
jmp
fwait
sub
jne
test
xchg
and
adc
popf
daa
loope
test
jbe
std
add
push
test
cld
jl
in
shlb
outsl
mov
pushf
leave
jbe
dec
ret
inc
cmp
lahf
push
and
std
push
lahf
test
mov
fcoms
sub
daa
dec
fwait
outsb
test
sub
js
bound
test
mov
pop
push
movsl
repnz
imul
xchg
cmpsl
and
xchg
xlat
pop
mov
push
in
add
jle
add
sbb
lret
cmp
mov
sahf
mov
push
xchg
sbb
pop
jg
lcall
stos
repz
ljmp
movsw
inc
mov
lahf
out
xchg
xorl
mov
lea
and
jbe
push
jns
dec
movsb
sbb
shll
mov
cmp
push
sub
sub
jle
loope
cmpl
sub
scas
jmp
add
push
mov
dec
xchg
stos
inc
sub
dec
es
filds
imul
cmpb
ret
cmp
sub
mov
cmpsb
jbe
mov
ja
add
and
add
mov
and
outsb
mov
cmp
into
xchg
mov
mov
xlat
jno
mov
mov
shrb
and
pop
and
iret
pop
mov
cli
and
nop
mov
sub
cmp
lock
and
jb
and
daa
ret
jp
cmp
jecxz
lret
mov
adc
sub
std
daa
js
xor
fcomip
nop
push
ljmp
jno
push
and
in
mov
mov
sti
jl
pop
jnp
jmp
or
test
in
xchg
mov
aaa
inc
pop
mov
lret
out
testb
dec
adc
mov
and
pusha
movsl
xchg
psubb
push
aad
out
inc
cwtl
popf
and
sbb
push
push
mov
mov
xchg
push
cwtl
mov
loop
mov
fwait
stos
call
jmp
sbb
push
pop
add
cmp
sub
stc
in
mov
lods
subb
aas
pop
hlt
loop
mov
adc
or
popf
in
js
frstor
push
aaa
out
lahf
faddp
inc
mov
sbb
aas
addl
in
sub
or
cmp
call
movsb
insl
push
and
dec
fwait
push
xlat
outsb
dec
test
fwait
out
xchg
mov
mov
pop
fstp
mov
mov
test
hlt
xor
andl
sub
insl
out
stos
pop
lods
insl
push
aaa
jno
and
repz
fs
lods
iret
outsb
gs
jge
popa
movb
mov
lea
jae
int
pushw
testb
dec
inc
js
test
out
and
jl
fdivl
push
or
mov
push
pusha
outsl
imul
fisttpl
mov
pop
mov
pop
scas
sahf
in
in
adc
arpl
mov
int
mov
iret
sub
pop
and
ret
shl
push
mov
pop
push
sbb
cmp
add
cmp
imul
insb
add
imul
lods
xchg
pop
jge
mov
push
in
pop
outsl
adc
or
sti
in
js
movb
push
shlb
das
fsubrs
stc
mull
mov
push
mov
fwait
ret
xor
pop
lock
mov
jae
mov
mov
cmc
shrl
mov
gs
paddsw
xor
pusha
fcomi
clc
lea
cmp
js
out
lock
push
clc
in
out
inc
sbb
mov
sub
movsl
mov
sbb
mov
loope
cli
inc
mov
test
ret
dec
jle
loop
inc
int3
cmc
imul
out
dec
pop
xchg
aaa
clc
repnz
shl
jp
andb
idivb
fmull
xchg
sbb
roll
and
mov
frstor
pop
aam
mov
fs
xchg
or
fimull
lcall
pusha
cs
and
les
xor
lahf
push
mov
cwtl
pop
fs
setns
imul
leave
loope
mov
and
icebp
movsb
outsl
xchg
leave
push
imul
mov
pop
les
scas
lods
std
in
sub
ja
adc
add
push
popf
roll
mov
jmp
push
xchg
out
sub
fidivl
jns
push
dec
out
jg
add
xlat
test
push
mov
pop
cmpsl
inc
imul
lea
push
xor
or
sub
flds
js
xchg
sub
inc
repz
pushf
push
imul
lret
int
cmp
xchg
cwtl
nop
inc
dec
and
adc
shll
jle
sbb
ucomiss
aaa
and
sti
orb
mov
mov
add
lods
push
scas
pop
fs
rcrl
cld
inc
inc
and
jo
cmpsb
nop
fs
sbb
jne
and
push
or
gs
xor
or
into
outsb
push
sbb
mov
rcll
std
cmp
in
arpl
mov
mov
adc
jecxz
cmc
push
pop
cwtl
inc
and
push
jnp
xchg
mov
fbld
cmp
mov
outsb
sub
sub
mov
xor
jecxz
outsl
int3
adc
aas
mov
pop
xchg
shrl
aad
pushf
std
push
sbb
mov
and
loope
in
adc
test
push
cmp
mov
or
jae
test
lret
mov
cs
daa
notl
mov
repnz
lret
out
mov
push
adc
add
sti
dec
int
idiv
sbb
fisubl
fbstp
jne
fisttpl
int3
lock
cmp
mov
add
mov
scas
mov
cmp
add
insb
repnz
jge
push
xchg
and
mov
movsb
mov
mov
dec
xchg
and
mov
push
out
and
lock
popa
daa
mov
push
dec
cmp
loope
mov
push
inc
cmp
jl
mov
push
dec
fisubs
adc
repz
push
adc
les
push
arpl
pop
mov
and
mov
daa
mov
cmp
int
dec
test
and
xorl
fs
sub
mov
and
das
mov
popa
mov
adc
adc
cmp
pushf
jg
hlt
imul
insl
test
push
mov
mov
stc
idivl
jns
outsb
cmp
or
xor
adc
lcall
xchg
test
dec
mov
sub
or
pusha
jo
shrb
xchg
insl
or
lret
notb
jns
pop
adc
xor
bound
cltd
dec
mov
shlb
push
add
sub
xor
leave
test
xor
lahf
or
cmp
xor
cmp
sar
ja
cwtl
in
hlt
pop
pop
mov
push
loope
mov
adc
or
enter
jle
inc
out
jbe
test
mov
aad
or
fstpt
xlat
push
sub
repnz
mov
nop
push
add
cmpsl
daa
pusha
pushf
mov
lret
repz
mov
xor
mov
imul
out
xchg
insl
movsl
xor
xchg
and
xor
addr16
mov
mov
in
cmpsb
mov
xchg
push
mov
jl
enter
xchg
mov
sbb
pop
cltd
sub
pop
je
xchg
pop
pop
fists
enter
jb
xor
ljmp
sbb
pop
inc
arpl
pushw
and
pushf
adc
dec
jo
sub
popa
dec
mov
sbb
lret
mov
pop
sbb
adc
push
mov
outsl
cli
lret
mov
jae
adc
cmpsb
jmp
mov
lds
mov
sbb
leave
mov
aas
int
cmp
dec
movsl
inc
scas
cmp
push
jnp
loop
cmp
push
jle
in
frstor
lcall
mov
xor
pop
sub
ds
and
xor
inc
mov
mov
loopne
jb
mov
jno
push
pusha
push
out
daa
icebp
xor
dec
fistl
lahf
movsl
std
push
sbb
push
mov
imul
jns
dec
inc
jb
sti
sbb
imul
das
aaa
adc
roll
push
imul
imul
es
jecxz
mov
or
push
sbbb
push
sbb
sub
in
nop
or
inc
dec
repz
cmp
mov
push
test
insl
mov
movsl
inc
addr16
mov
dec
xor
cmp
int3
into
fisubrl
push
cli
mov
sub
js
je
aad
push
rcl
push
dec
add
into
loopne
int3
jecxz
cmpsl
add
mov
andb
add
shl
lods
aaa
fwait
xchg
pop
sbb
inc
ja
inc
es
dec
sub
cmp
dec
shlb
and
xchg
les
and
xchg
xchg
scas
mov
mov
les
aas
xchg
in
fsub
mov
out
mov
shll
xor
mov
inc
idivb
shr
push
jo
fnsave
pop
ror
mov
push
and
gs
add
jle
or
xor
xor
pop
xor
repnz
insl
add
cld
add
inc
adc
jb
lahf
insl
jnp
out
fisubs
and
sbb
pop
jnp,pn
loop
or
push
fnstcw
mov
ficoml
mov
loopne
push
cli
and
mov
stos
leave
dec
sbb
jne
fwait
outsb
sub
imul
lret
fcoml
xchg
inc
iret
lods
inc
xor
shlb
popf
jmp
cmp
jmp
into
adc
subl
dec
test
mov
addr16
push
or
jp
ret
adc
add
rcrl
lods
xchg
mov
adc
pusha
out
mov
stc
sahf
xor
push
xor
addr16
pop
adc
xor
inc
pushf
add
dec
pop
inc
jo
xchg
add
lds
jmp
ljmp
jns
jno
lods
mov
repz
xlat
or
jmp
loope
mov
daa
ss
insl
dec
rcll
adc
inc
stos
shl
test
mov
cmp
jo
stos
jecxz
cli
mov
mov
outsl
ja
loopne
inc
sbb
xchg
sub
bound
cmc
pop
inc
xlat
lcall
inc
pusha
fisttps
outsl
sti
jmp
xor
fs
pop
rorl
rcrl
sub
add
in
push
outsl
jno
push
dec
out
push
in
and
aad
or
ret
sbb
jns
inc
xorb
js
fisubrl
filds
pcmpgtb
push
add
popa
bound
sbb
add
jge
jmp
pop
adc
es
out
imul
stos
mov
dec
or
jne
pushf
xchg
fbld
popf
icebp
sbb
cmp
xor
jp
add
push
in
push
adc
cmp
mov
nop
int
cmp
lahf
xor
sbb
mov
inc
ficoms
sub
or
mov
jne
rorb
rcll
mov
scas
dec
push
add
mov
jg
aas
xchg
jle
sub
adc
movsb
and
or
sub
pop
movsb
dec
jnp
bound
stos
fwait
jo
cmp
inc
popa
mov
icebp
jb
lret
nop
fldl
xchg
subb
xchg
sbb
inc
push
sub
cmp
lret
or
pop
ret
jne
xor
sub
rclb
sub
and
jge
dec
xor
inc
les
inc
lcall
xor
ret
cmpsb
push
xchg
faddl
test
add
andl
outsb
or
aas
mov
and
cmpsl
mov
mov
enter
dec
clc
call
popa
jecxz
fs
std
mov
or
mov
mov
repnz
and
int
add
xchg
mov
xor
adc
stos
vminsd
lock
dec
xor
push
fdivl
inc
add
xor
cmp
pop
pop
and
lock
and
pop
dec
imull
dec
push
sbb
dec
add
push
stos
push
push
sbb
xchg
incl
inc
jae
push
cwtl
jge
pop
jg
in
test
lret
fs
adc
lock
repnz
and
adc
cs
mov
aaa
ret
jnp
call
and
xlat
mov
mov
incl
push
jge
mov
mov
lretw
mov
pop
cmp
cld
jle
mov
lock
imul
mov
sub
adc
addb
cs
enter
enter
cli
lcall
add
push
add
dec
insl
push
ljmp
inc
push
sarb
jge
rolb
push
xor
jnp
push
add
mov
rclb
iret
and
loope
std
mov
gs
dec
jb
pop
sbb
call
pop
arpl
ljmp
arpl
dec
into
mov
in
jmp
popa
scas
adc
inc
sub
dec
fxch
jle
push
push
in
cmpsb
insl
stc
testl
js
push
repz
into
cmp
icebp
or
sbb
add
xchg
repnz
js
inc
dec
stc
movsb
xchg
pop
cli
mov
les
jl
and
xor
bnd
xchg
stos
or
shrl
mov
sub
movsb
mov
push
mov
cwtl
mov
data16
cld
in
xchg
xor
push
push
jno
out
hlt
fldl
jae
test
mov
mov
addl
mov
mov
jge
add
inc
mov
mov
jl
punpckhbw
xor
movsb
jo
fwait
imul
inc
sub
and
mov
sbb
push
ds
cli
adc
test
aaa
xor
in
gs
sti
fadd
add
dec
lret
jge
retw
jne
orl
lods
inc
dec
push
cwtl
in
stos
fisubl
mov
popf
and
mov
jbe
pusha
test
pop
adc
dec
fwait
imul
dec
cld
js
xor
cld
mov
in
xchg
pop
mov
push
out
inc
sti
xor
sbbb
pop
adc
or
dec
out
outsl
mov
and
ret
lea
sarb
mov
pop
repnz
mov
sbb
xlat
or
inc
jle
sahf
xor
aas
in
sbb
adc
jl
cmc
out
lret
cld
popl
push
or
dec
repz
cmpsb
pop
cwtl
pop
lret
jecxz
adc
dec
and
push
sahf
dec
and
push
aas
inc
subl
dec
imul
cmp
das
and
push
outsl
fnsave
xchg
out
lock
mov
mov
push
rorl
and
sar
lock
arpl
aad
mov
dec
jo
rorb
lcall
mov
mov
push
fs
xchg
mov
push
add
fcom
lds
mov
fsub
xchg
cmp
jb,pn
jno
pusha
ss
orb
cwtl
sbb
push
mov
dec
jne
out
loop
ja
into
dec
cwtl
mov
fistps
fmul
aad
xchg
dec
pushf
pop
dec
jne
aaa
push
inc
xchg
fsubrs
repz
pop
and
cwtl
xor
aas
dec
add
lods
xchg
mov
xchg
int
mov
inc
or
lret
mov
sbb
mov
rclb
shr
lds
movsb
xor
mov
idivl
pop
imul
sub
lahf
xor
jmp
cmp
addr16
dec
ret
jnp
mov
jns
or
push
fnstenv
fdivrp
dec
sub
sub
cltd
pushf
nop
inc
jne
leave
or
out
push
mov
push
je
mov
push
sub
in
daa
or
stos
jp
subl
xor
jnp
loope
pop
scas
lret
adc
push
pusha
dec
jmp
lret
fldt
lea
mov
out
mov
add
cmc
mov
xchg
cmp
push
mov
cmovg
sbb
daa
dec
lds
push
add
mov
mov
inc
jmp
notl
xchg
fcmovnbe
push
mov
aas
mov
out
hlt
mov
orps
mov
cmp
xchg
orl
loopne
int
dec
aad
fsts
outsl
mov
out
add
sbb
frstor
bound
arpl
subb
test
adc
dec
fbld
push
inc
push
aaa
jge
insl
sub
pop
mov
clc
je
mov
mov
xor
roll
mov
mov
jbe
movsb
push
sbb
fsubrl
sub
int
jecxz
push
pop
or
bound
sti
fldt
int3
call
and
in
fwait
testb
xor
movsl
xor
aam
xchg
stc
jbe
shrl
sub
xor
jno
dec
inc
mov
test
sbb
shlb
icebp
rcll
inc
pusha
lahf
ss
mov
jle
adc
outsb
call
adc
dec
or
add
fldt
xorl
inc
adcl
ja
mov
call
add
in
sub
xchg
push
push
mov
mov
pop
fstps
enter
mov
dec
clc
test
clc
add
and
sbb
jno
cmp
not
jo
and
inc
insb
orb
fdivrs
push
or
pop
or
mov
jg
cli
sub
loopne
xor
in
jle
sar
cmpsb
adc
xchg
jmp
pop
data16
mov
sub
pop
or
insb
jbe
jne
test
xchg
iret
hlt
ret
mov
test
push
loop
loop
mov
pop
push
fs
lret
repnz
sti
int3
repnz
push
test
sub
test
pop
imul
push
pop
iret
insl
int
xchg
xor
mov
push
clc
xchg
jne
sub
sarb
ret
int
or
push
call
inc
bound
popa
iret
mov
dec
adc
mov
sub
jne
imul
shl
xchg
or
ja
fcomp
std
lods
incb
and
es
out
insb
push
shrb
out
scas
enter
sub
pusha
xor
test
pop
shll
subl
cmp
adc
test
or
iret
rclb
jnp
xchg
jns
stos
repz
rcrb
xor
data16
sub
adc
insl
push
out
mov
adc
push
jg
adc
pop
in
add
mulb
or
mov
lock
cmp
and
pop
cmc
ljmp
or
push
ss
cmp
or
fs
mov
sub
push
mov
add
test
dec
inc
iret
xchg
out
loope
pop
mov
mov
nop
cmp
or
cmp
or
cmpsl
or
movsb
rclb
jmp
add
mov
int3
mov
cmpsl
xchg
popa
push
repz
or
dec
pop
test
ss
mov
or
fidivs
test
aas
loopne
sti
cltd
adc
leave
xchg
call
fmull
call
in
mov
push
jmp
mov
mov
jo
inc
out
aad
mov
jp
mov
push
jecxz
xchg
mov
sbb
idivb
adc
or
cmc
outsb
pop
frstor
lcall
adc
movsl
mov
jl
stos
dec
test
or
pop
mov
ss
lods
stc
push
pop
jge
push
cmpsl
mov
andb
push
jmp
nop
xchg
inc
cmp
subb
sub
repnz
inc
sbb
mov
xchg
xor
cmp
mov
std
aaa
outsl
mov
cmp
mov
adc
sti
cmpsb
scas
push
cltd
fwait
mov
mov
icebp
mov
push
xor
mov
inc
hlt
out
dec
cmc
rcrb
xchg
shrl
movl
lea
jp
mov
movsl
push
mov
mov
aaa
out
cmpsl
dec
cwtl
push
int
pop
and
jp
mov
loope
jp
loopne
sub
out
sbb
popl
mov
addb
add
sub
pushf
xchg
jp
cmp
movsb
mov
loope
pop
jns
das
sbb
push
jae
popf
bound
cmp
stc
aad
xchg
xchg
xor
movsl
rorl
xor
fwait
xchg
std
push
xor
sahf
dec
xor
mov
and
mov
arpl
popf
mov
sub
hlt
pop
mov
insb
xor
mov
jne
and
rclb
nop
xchg
xchg
adc
sbb
mov
je
jp
out
ja
ds
cmp
mov
lahf
jae
jnp
lcall
fistps
ficoml
xor
inc
push
cmp
sbb
jg
mov
scas
sub
pop
out
mov
mov
js
ds
pop
lahf
ret
sahf
mov
test
fisttpll
cmp
movsl
daa
cmpb
std
repnz
cmpsb
sbb
out
xor
mov
or
mov
add
mov
orb
xchg
jns
mov
jne
fistps
pop
pushf
add
das
sbbb
aas
int
mov
psrad
call
leave
dec
lods
and
mov
push
sbb
std
out
xchg
repnz
pushf
inc
or
rclb
call
xchg
cmpsb
mov
out
push
adc
pop
lods
mov
out
in
mov
int3
std
test
dec
sbb
or
push
add
and
pop
out
or
pusha
roll
jae
xchg
std
mov
jl
call
outsl
into
aaa
into
xor
nop
add
loope
dec
sahf
aaa
jnp
shl
mov
mov
popf
push
mov
jb
rcr
icebp
and
mov
in
sahf
fcoms
lret
in
push
stos
jns
pusha
ds
rorb
xchg
iret
mov
sbb
loopne
pop
ljmp
cld
pop
cwtl
test
and
mov
mov
daa
rcrb
dec
jns
dec
push
sbb
or
test
popa
mov
dec
daa
dec
daa
aaa
push
shl
and
pop
outsb
stos
cmp
sub
cmp
add
pusha
call
jmp
sbb
adc
rorb
add
xchg
push
imul
xchg
jno
pop
cld
cmp
mov
lret
hlt
rcrl
xor
cld
or
scas
ljmp
out
jnp
nop
adc
sbb
cmpl
push
and
sarl
mov
inc
ret
test
arpl
jbe
into
push
mov
pushf
xorb
and
mov
in
enter
cmp
call
ja
add
adc
loop
sbbl
xor
je
dec
cmpb
insl
dec
cmp
lods
enter
sbb
sub
pop
pop
add
xchg
inc
imul
notl
push
push
movsb
hlt
push
push
jns
xor
push
imul
push
cs
push
pop
pop
cltd
xor
adc
push
push
movsb
fidivl
sbb
ret
dec
xchg
xor
add
clc
test
adc
xchg
pusha
pop
add
mov
push
pop
push
adc
loopne
jmp
outsb
jecxz
adc
mov
jge
inc
rcl
fucompp
xor
inc
cmp
sbb
dec
iret
pusha
frstor
aam
adc
ja
jge
lret
and
add
push
xchg
cwtl
repnz
cmp
in
jnp
mov
data16
repz
sub
out
jge
xchg
lock
je
jns
movb
or
outsb
into
pop
mov
in
scas
add
jp
ljmp
or
mov
push
jecxz
mov
xor
in
cltd
mov
xchg
xor
or
jmp
mov
dec
fs
xchg
fwait
in
push
insl
pushl
inc
jno
scas
jl
xor
mov
cmp
push
jb
sub
shll
dec
test
les
aam
sti
inc
repnz
sahf
jmp
mov
push
movb
int3
mov
add
sub
imul
orl
in
test
ret
loop
push
jmp
repz
pop
cmp
sti
aad
xchg
ljmp
cmp
adc
decl
push
push
jae
xor
hlt
jb
fnstcw
sbb
or
and
fsubrl
fdivs
adc
add
dec
sub
int3
lods
jno
in
jbe
push
push
aaa
icebp
sub
mov
or
cmc
repnz
adc
sub
imul
or
jmp
out
pop
adc
jmp
lret
fsubrl
cmp
mov
xor
outsb
cmp
lcall
icebp
fcoml
mov
ret
cmp
cmp
lret
sub
or
mov
test
addr16
push
sbb
inc
push
mov
aam
mov
cmp
mov
insb
sti
hlt
cwtl
and
jecxz
add
sbb
xor
loop
mov
inc
push
adc
jmp
mov
aas
push
and
jle
lods
fs
test
mov
inc
dec
gs
shlb
imul
mov
push
call
pop
dec
or
daa
pusha
mov
dec
cld
mov
lcall
lcall
repz
jno
sbb
mov
inc
xchg
cmp
ret
sbb
and
mov
mov
jne
rcrb
movsb
jnp
or
and
fdivs
xchg
adc
pop
dec
leave
xchg
xorb
jb
mov
fsubrl
ja
xorl
sbbb
inc
scas
sar
inc
sbb
xchg
js
enter
fidivs
in
mov
jmp
loop
and
pushf
jno
mov
rclb
mov
jecxz
xor
lods
loop
into
test
sub
test
adc
inc
sub
aad
cmp
jmp
lcall
lock
das
mov
outsb
or
stos
rorb
cltd
add
jl
dec
outsb
lock
mov
jmp
jle
mov
mov
test
int
dec
fistl
sbb
adc
sub
sub
xor
or
sbb
movsb
and
in
sbb
loope
push
shlb
out
fnstcw
mov
pop
in
sub
jmp
aad
adc
xchg
push
popa
in
and
inc
in
xlat
mov
jmp
sbb
ret
pop
add
jb
and
mov
push
lret
in
sti
aam
dec
xchg
inc
mov
cli
pop
popf
jae
sub
add
aas
aas
mov
xchg
adc
es
out
add
ret
mov
fisubl
jb
push
dec
and
jb
es
ret
outsl
mov
clc
rorb
xchg
cs
push
dec
negb
mov
sarb
sub
fisubrs
movsl
dec
jo
cmp
cltd
jb
arpl
lret
call
sahf
movsb
dec
mull
fsubrs
not
fsubrp
sbb
mull
insl
pop
adc
out
jmp
sub
pop
push
idivl
andb
push
mov
pop
cld
ret
or
xlat
shlb
sti
dec
push
test
mov
aas
cmpb
mov
mov
mov
jns
mov
psubusw
arpl
jmp
dec
das
ljmp
lds
test
or
mov
shll
fwait
xchg
jmp
mov
xchg
jae
adc
cs
rol
push
push
or
inc
pusha
mov
mov
in
mov
jle
push
loope
js
ret
pop
je
outsb
adc
sub
mov
pop
ds
xlat
or
xchg
out
push
xor
xchg
ljmp
xchg
lret
std
pop
mov
lods
ss
mov
testl
test
push
pop
repz
hlt
call
scas
ret
call
mov
add
adc
leave
mov
insb
lock
subb
add
push
ljmp
or
inc
or
mov
js
mov
or
cmc
xor
mov
and
lds
sub
and
stos
fs
mov
mov
add
roll
or
frstor
int
mov
iret
push
push
stc
or
cmp
push
clc
loopne
sub
insl
test
cld
dec
repz
mov
outsb
shr
jae
ffree
test
fwait
adc
lahf
add
fstps
and
cmp
sub
xor
loope,pt
jbe
jae
imul
adc
or
or
test
jge
push
mov
cmp
add
in
pop
mov
mov
lods
jl
sarb
or
fcoml
mov
pop
cmpsb
push
push
pop
push
jle
les
adc
lds
lahf
mov
fs
or
dec
test
mov
iret
xchg
outsb
mov
add
mov
das
push
shl
mov
loop
test
mov
xchg
jle
pushf
inc
es
pop
and
pop
mov
xor
enter
push
xchg
test
mov
push
nop
shl
cs
pop
mov
inc
dec
dec
stos
dec
jne
std
pushf
bound
outsl
xchg
add
shlb
jge
xchg
mov
or
shl
shrl
loopne
adc
xchg
in
repz
sti
lds
push
push
leave
push
mov
mov
or
scas
mov
dec
mov
sub
add
mov
loopne,pn
pop
fstpl
popa
mov
push
cld
popf
mov
mov
in
fucomi
inc
mov
shrl
lods
adc
fbld
or
jb
ret
clc
ds
cmpsb
add
ret
xchg
out
dec
iret
jl
and
sbb
or
mov
test
adc
movsl
xchg
xchg
sbb
sub
loope
clc
add
adcb
push
xchg
xor
mov
lods
pop
pop
mov
jno
mov
loop
dec
data16
stos
xchg
add
aas
jne
mov
mov
adc
les
repnz
pop
imull
insl
mov
pop
or
jg
aad
adc
addb
ljmp
mov
pop
cs
xchg
imul
aaa
adc
jmp
outsl
bound
add
pop
lods
loope
dec
lret
je
in
out
xor
xchg
mov
add
xchg
mov
inc
sbb
out
xor
or
and
mov
popf
das
lea
mov
sbb
xorb
sarl
inc
in
inc
fcompl
orb
mov
gs
inc
ja
fnsave
mov
clc
into
fstps
je
jo
pop
jge
fnstcw
fucom
sub
rcrl
lcall
inc
cmc
xchg
adc
pop
repnz
or
add
jp
movb
loopne
push
dec
jno
pop
sbb
dec
jbe
xchg
push
xor
jecxz
sti
mov
aad
dec
outsl
push
ficompl
in
jno
cmpsb
dec
orl
rcrl
mov
adc
enter
sub
sahf
fstpl
mov
imul
xchg
in
js
and
into
and
out
push
mov
inc
fdivrp
sbb
das
hlt
pop
push
cmp
int
pop
cmpl
dec
xchg
jmp
stos
mov
inc
sbb
test
imul
je
pop
pop
push
addr16
and
stos
mov
xchg
es
mov
fisttps
mov
xor
pop
pop
out
cmp
ss
push
jns
test
hlt
mov
into
aas
adc
mov
js
push
pop
test
dec
test
mov
jmp
test
cmp
scas
outsb
pop
pop
adc
push
shlb
mov
inc
xchg
or
lret
in
inc
push
push
push
fwait
imul
in
hlt
dec
ds
lods
ror
lret
cmpsb
scas
mov
std
lret
push
cmpsb
addb
lret
or
in
js
repz
pop
leave
clc
mov
xchg
sub
call
dec
add
loope
mov
jb
scas
mov
mov
popf
pop
pop
in
out
test
scas
stc
push
aaa
sahf
fadds
fisttpl
fcoml
popa
sbb
and
into
push
jbe
gs
nop
push
mov
xchg
jg
movsl
pop
jns
add
push
in
mov
cwtl
lsl
ret
rcl
jg
out
add
out
mov
insb
mov
test
inc
adc
adc
mov
cmp
xchg
aad
add
adc
in
fimuls
adc
imul
scas
add
xchg
in
icebp
pop
ss
stc
xchg
sub
test
mov
test
push
scas
aas
stos
xchg
push
push
pop
or
jb
lcall
inc
cmpb
test
jmp
loopne
sbb
icebp
fildll
stc
cmp
imul
cmp
push
xchg
test
fs
arpl
fisubl
and
aas
popf
dec
jecxz
cmp
lcall
lods
xor
xchg
xor
outsl
movsb
out
add
out
pop
pop
and
int3
mov
inc
out
inc
insl
pusha
repnz
dec
cmpsb
push
push
or
dec
mov
and
cmp
xor
sbbl
or
adc
ret
mov
fisubl
lods
out
push
push
mov
adc
lret
aam
and
mov
gs
idiv
out
jle
pop
and
cli
cltd
pop
pop
test
into
mov
nop
inc
into
xchg
cmp
mov
inc
call
or
test
aas
mov
jle,pt
clc
pop
mov
test
mov
mov
loopne
jne
int3
sbb
xor
insb
jmp
test
outsl
mov
dec
js
mov
xchg
repnz
std
fnsave
addr16
mov
sub
sbb
push
frstor
lock
mulb
aaa
negl
cltd
sbb
pop
call
imul
dec
pop
adc
jmp
and
fsubr
mov
outsl
xor
popf
or
sbb
sub
not
mov
pop
je
lea
pop
or
push
sbb
mov
js
iret
mov
repnz
push
test
sbb
ret
insb
pop
std
aas
ret
pop
cld
dec
mov
nop
les
scas
pop
push
cmpsl
xchg
and
outsb
in
pop
sahf
shr
or
dec
aam
stos
mov
jne
stos
fbstp
sbb
push
mov
mov
adc
mov
push
dec
or
cmp
cmc
int3
lret
push
mov
push
pop
int
dec
outsl
mov
nop
push
loopne
into
into
lods
rolb
xor
and
insb
lret
or
jge
mov
adc
js
mov
push
test
add
push
popl
sub
cmp
push
mov
jle
mov
mov
out
pop
loope
push
ljmp
subl
dec
or
aad
data16
dec
cmovnp
or
push
idivb
xorl
ds
testb
dec
add
xor
push
add
or
inc
std
cmp
xchg
push
div
test
hlt
add
loop
stc
es
push
and
fs
mov
mov
mov
std
mov
xchg
push
mov
pop
mov
ror
sub
mov
daa
adc
and
scas
shl
dec
push
mov
xchg
cmpsl
and
mov
ss
fwait
test
sub
xorl
push
push
adc
lods
sub
shr
out
mov
mov
jge
ret
dec
jno
cmpsl
mov
add
lods
xchg
dec
test
sar
xor
js
aad
lods
sar
push
and
mov
mov
jecxz
setge
aaa
mov
decl
adc
lahf
mov
clc
inc
test
xlat
sbb
push
cmc
je
dec
lds
es
scas
push
mov
popl
jae
lods
sub
jne
mov
movsb
pop
jp
lcall
inc
push
lea
dec
pop
movsl
push
adc
fwait
call
call
clc
mov
push
ljmp
mov
ret
repz
loopne
into
lds
dec
test
fmuls
repnz
jbe
sub
sub
cltd
mov
sub
shrb
mov
hlt
repz
sub
outsl
icebp
jae
out
test
adc
push
xor
xchg
dec
xor
mov
fidivl
loopne
inc
cmpl
cmpsb
popf
sub
adc
mov
sbb
jge
mov
inc
in
xor
mov
push
cli
adc
es
pop
dec
push
fsts
mov
aaa
jle
stc
push
iret
pop
filds
mov
push
dec
push
push
leave
lahf
pusha
xor
mov
ror
mov
inc
outsl
je
push
cmp
xchg
sub
mov
and
rolb
in
scas
adc
shll
popa
imul
inc
test
nop
insl
mov
mov
movsl
fwait
sub
mov
adc
test
jae
and
in
sub
pop
and
sbb
int3
in
inc
cli
add
in
jge
fwait
sbb
ja
jae
adc
out
pop
scas
aam
sub
jmp
mov
das
and
add
fs
mov
cld
jp
sbb
clc
mov
mov
xor
cltd
cmc
lcall
push
ficoms
int3
jns
push
inc
mov
jmp
jne
pusha
data16
fucomip
jp
pop
setne
and
arpl
jo
sysret
pop
jmp
mov
es
aad
dec
dec
in
push
nop
jno
aam
pop
mov
sbb
fucomi
sub
lahf
dec
sbb
xor
fsubrs
push
cmp
sub
test
mov
not
push
lret
ljmp
js
mov
push
and
adc
sub
out
bound
inc
xchg
jg
ret
or
inc
fidivrs
inc
ja
ffreep
imul
movsb
adc
stos
in
mov
jle
call
jmp
lods
cmp
jnp
pop
jecxz
dec
icebp
in
dec
dec
ljmp
stos
mov
lods
mov
push
push
push
popl
mov
mov
in
pop
aad
mov
fwait
mov
and
je
push
popa
xchg
andb
add
xorl
sbb
sub
push
arpl
sbb
out
loopne
pop
rolb
ret
xchg
adc
orb
mov
loop
dec
adc
mov
pminub
cmp
cli
stc
push
test
jb
mov
ret
in
inc
aad
push
push
inc
lods
loopne
insb
lods
test
pop
test
sbb
ret
xchg
movsl
into
xlat
add
dec
and
push
inc
or
inc
negb
cmp
inc
mov
mov
push
into
cwtl
lahf
push
movsb
jmp
adc
pusha
fsincos
fwait
sbb
test
mov
roll
int
cmp
push
xchg
mov
pop
out
addr16
cmp
xor
pop
shl
cltd
inc
xor
add
in
jne
mov
jns
adc
aad
shlb
sbb
sbb
sarb
cld
mov
jb
mov
sbb
push
test
loop
or
pop
ret
cmpl
sbb
sbb
xchg
jnp
pop
dec
cmp
xchg
shl
cmp
ret
ss
or
sbb
cld
out
mov
mov
sub
ljmp
shl
rcl
sar
test
dec
int
pop
add
shrl
cmp
push
or
sti
in
test
cwtl
in
inc
jge
pop
push
and
add
jnp
imul
movsb
fs
xchg
jp
push
cmpsl
push
lock
ret
push
call
loope
shlb
adc
ret
insb
nop
je
pop
iret
call
mov
idivl
and
add
fisubrs
in
jo
lret
jno
leave
lods
mov
mov
mov
jae
mov
lods
clc
mov
mov
fsubrl
xor
mov
mov
aas
fsubp
fcmovne
idivb
test
jnp
pop
cmp
std
jl
and
popa
lods
mov
pop
insb
sub
in
and
int
push
pop
pop
or
xor
xchg
xor
insl
pop
stc
pop
ss
xchg
cmp
iret
jg
sti
xchg
ja
in
cld
daa
xchg
popa
sti
ss
imulb
cld
sbb
hlt
add
aad
lea
test
jns
cmp
mov
mov
out
lock
sub
sub
cltd
mov
test
mov
lock
dec
jp
inc
mov
sub
ret
sub
add
jnp
mov
clc
cmpsl
ret
andb
out
repz
adc
ret
in
xchg
ret
push
cmpsl
cmpsl
aas
push
add
jae
lahf
out
sti
jnp
mov
aam
call
sbb
mov
sar
push
sub
jmp
nop
sub
push
shlb
pop
call
sub
or
cmp
int3
lret
insb
into
mov
mov
lock
das
push
inc
enter
cmp
sub
sarb
mov
inc
mov
cli
int
movsl
iret
cli
rolb
fnstenv
call
adc
ret
pop
sub
filds
stos
lret
sbb
pop
xchg
mov
cmpsb
adc
mov
shrl
std
push
stos
pop
sub
sarb
and
inc
push
and
out
and
rorw
sbb
ljmp
or
add
insl
pop
mov
cmp
stos
sbb
lahf
jle
mov
lock
in
sub
dec
inc
mov
lcall
fisubrl
adc
loop
sbb
fs
xor
ljmp
sub
jg
cmp
xor
add
jle
inc
pop
inc
push
cmc
xchg
lahf
mov
xchg
call
push
cld
or
fsubrl
mov
mul
shrl
xchg
inc
fldt
movb
ret
xchg
sub
dec
pop
fsubl
ret
sbb
mov
inc
jp
cmp
adc
out
push
xchg
mov
insb
ja
mov
and
push
fiadds
or
outsl
push
out
lcall
adc
dec
push
aaa
fsubrs
jnp
arpl
xchg
adc
jl
cli
or
jle
cli
pop
dec
fnstenv
jne
sub
shl
pusha
xor
je
add
inc
jne
pushf
popf
mov
bound
cld
sbb
push
iret
mov
leave
cli
push
mov
daa
jge
xchg
adc
pop
lods
and
mov
cmp
mov
mov
push
mov
cltd
icebp
push
add
bnd
adc
dec
lods
loope
movsl
out
es
jp
pop
nop
int3
cltd
push
pop
jb
push
aad
jp
jbe
jle
cmp
add
inc
push
xlat
and
jl
add
imul
xor
sub
lods
xor
pop
mov
sti
fiadds
lds
aaa
jge
cli
push
jg
cmp
stc
fstpl
lods
push
lea
les
pop
jae
cs
mov
gs
and
jb
ret
repz
rcl
xor
lods
adc
mov
sub
and
es
insl
mov
xor
leave
shrb
xlat
mov
lock
decb
or
out
and
insl
cmc
out
gs
cltd
nop
mov
mov
repnz
lcall
mov
pushf
icebp
xor
mov
mov
call
daa
pop
jecxz
pop
xchg
stos
dec
repz
push
xor
enter
jp
es
jne
or
mov
negl
shrl
pop
icebp
cli
stos
cld
push
pushl
mov
xor
loope
sbb
flds
cld
cwtl
xor
cmp
xchg
lcall
in
xor
add
popa
lret
pop
push
int3
sub
jle
in
out
xchg
jle
jnp
andb
mov
popa
mov
rcrl
enter
dec
lcall
mov
mov
push
into
mov
sub
mov
xor
jp
ds
and
popf
sub
aam
inc
sar
sahf
mov
jmp
inc
jecxz
adc
xchg
dec
sub
sbb
pop
outsb
xor
pop
int3
sbb
cmp
popf
and
mov
fildll
add
shrl
mov
xorl
mov
data16
out
repz
mov
mov
int3
and
xor
aad
addl
dec
out
test
inc
jnp
jecxz
pop
cmp
push
dec
sub
add
push
ljmp
andb
dec
cmp
paddb
ljmp
mov
mov
mov
repnz
and
ja
inc
jp
ret
push
jnp
stc
inc
imul
push
fidivl
stc
adc
loop
jecxz
mov
aas
cmp
jns
stos
dec
mov
insb
xchg
rorb
test
mov
out
aad
pop
mov
xchg
repnz
stos
dec
inc
xchg
push
mov
adc
mov
mov
lcall
iret
repz
xor
subb
ret
cmp
add
or
addb
lods
mov
jo
push
push
mov
mov
cmp
daa
mov
movsb
movsl
sub
sbb
test
andb
scas
sbb
call
les
push
mov
pop
or
cmpsl
jp
push
dec
bound
aad
cltd
lea
jo
inc
xchg
leave
dec
jno
pop
jmp
daa
ret
add
and
enter
subl
mov
sbb
inc
fbstp
mov
mov
std
jl
aad
pop
jbe
jp
mov
and
dec
pop
addr16
test
ss
xchg
push
nop
jne
inc
cs
inc
sub
out
cmp
ds
inc
adc
jecxz
daa
sbb
and
xor
sarl
jo
test
mov
outsb
jg
pop
and
mov
cwtl
ret
loopne
xchg
sti
cs
mov
xchg
cmp
pushf
jle
mov
xlat
cld
cli
and
imul
movsl
jp
jle
jo
xor
mov
mov
ja
xor
xlat
cmp
mov
cmpsl
lret
dec
sub
mov
push
push
dec
sub
mov
push
fs
ficoml
cmpsl
dec
int
sarl
mov
push
cmp
mov
and
negb
lods
adc
out
sub
jb
inc
push
jge
add
mov
fldl2e
dec
scas
push
push
push
stos
test
add
movsl
push
mov
push
call
mov
mov
call
movsb
imul
xchg
dec
rclb
repnz
jbe
addl
js
dec
loope
jb
lds
dec
pop
jl
iret
sti
inc
lcall
mov
cmpsl
push
sub
filds
xor
add
mov
pop
jnp
es
stos
pop
into
getsec
xor
shl
test
mov
cmp
jae
push
mov
mov
adc
divb
daa
sarb
les
fwait
jae
mov
and
inc
cmp
in
popf
call
mov
or
lcall
dec
mov
test
ss
mov
push
jp
out
jne
lock
aaa
add
push
ret
dec
das
push
cmp
and
addr16
insb
test
into
inc
sti
mov
loope
fbld
pop
xor
div
js
aad
into
stos
fiaddl
hlt
in
out
clc
lock
hlt
bound
push
adc
sbbb
stc
pop
mov
or
dec
das
out
rcrb
inc
rclb
push
lcall
lret
sbb
cltd
scas
icebp
in
sub
cmp
pop
stos
jns
pop
mov
mov
and
cmp
xor
cltd
xor
jecxz
scas
pop
add
ja
daa
jp
lock
stos
sub
dec
mov
cli
add
pop
adc
push
aaa
hlt
hlt
rclb
dec
cli
xchg
pop
iret
push
adc
push
scas
nop
fistpl
ret
fwait
lcall
test
xchg
dec
xchg
inc
and
adc
pop
jnp
sub
xor
jecxz
sub
cld
fisubrl
ret
mov
mov
cld
pop
ret
pushf
in
rolb
add
mov
adc
rcrl
xor
in
jo
aas
cwtl
xor
jae
in
mov
fdivs
jge
mov
add
dec
jno
pop
jmp
add
mov
fs
push
in
cld
shll
cld
int3
pop
shl
hlt
push
ror
jmp
mov
call
fbstp
sub
mov
xchg
js
cwtl
lea
in
push
mov
push
test
ret
ss
xor
or
lret
pop
jne
cmpsl
arpl
jge
xor
pop
jae
jge
fisubs
inc
add
ds
fimull
mov
hlt
ret
cmpsl
pop
arpl
lcall
imul
add
aaa
clc
mov
pop
xchg
mov
sbb
jmp
push
mov
rcrb
dec
lods
stos
stos
scas
pushf
mov
test
lods
pop
scas
fldt
bound
shlb
mov
pop
jnp
mov
mov
mov
mov
hlt
sarl
mov
shr
xchg
xor
loop
mov
cmp
and
stos
push
jmp
jge
std
loope
xchg
push
and
mov
sub
inc
ret
jp
xchg
loope
cmp
mov
adc
mov
or
ficoml
inc
mov
inc
jae
call
das
mov
jnp
cwtl
negb
ret
cmp
es
or
imul
in
adc
ljmp
xchg
cmpsl
sub
gs
sti
sbb
push
jo
test
mov
insl
mov
mov
pop
push
filds
adc
pusha
call
movsl
les
push
cmp
fwait
test
mov
inc
mov
inc
xchg
adc
lods
das
mov
loopne
movsl
xlat
xor
jne
adc
sub
sub
dec
call
sarb
fwait
insl
enter
xor
rorl
fisubs
pop
daa
out
daa
dec
jb
in
sub
sbb
sub
push
adc
add
xchg
mov
in
iret
cmp
push
stos
addl
and
outsl
lock
push
fldl
lock
push
ljmp
mov
pop
std
fwait
adc
sub
ljmp
sub
push
add
sbb
add
cmpsb
xor
out
pop
shr
scas
sub
and
dec
cli
das
inc
test
or
dec
push
ljmp
fidivrl
mov
lods
in
rcrb
mov
sub
lds
shll
push
les
push
xor
je
ljmp
fidivl
stos
jns
ljmp
adc
jbe
out
ja
adcl
mov
mov
stc
and
cmp
add
xchg
lahf
mov
das
ds
loope
cmp
outsl
dec
xchg
lods
push
lds
pop
jo
pop
ljmp
adc
fisttps
xchg
push
xchg
dec
icebp
rclb
sub
arpl
inc
push
ds
jp
inc
arpl
popa
inc
jmp
mov
lock
fs
lahf
ljmp
lahf
sub
push
fst
mov
outsl
dec
add
insb
int3
stos
repz
dec
hlt
gs
mov
in
xor
xchg
frstor
dec
cwtl
sarl
test
inc
outsl
lahf
sbb
cmc
popf
in
xchg
jo
pop
out
jbe
mov
lretw
push
test
shlb
push
push
test
popa
mov
add
lcall
scas
insl
stos
loop
lret
mov
dec
in
es
mov
pop
int
scas
lock
pop
mov
jne
sub
js
in
push
stos
mov
sbb
mov
fld
inc
inc
xor
xchg
push
fs
inc
adc
jle
and
mov
scas
push
mov
ss
mov
cmpsb
mov
mov
and
orb
xor
cmp
xor
out
mov
fists
cmp
adc
jnp
and
sub
stc
pusha
sub
push
loop
loope
loop
pop
test
jns
jl
and
and
fsubrp
js
mov
pop
pop
enter
stos
shrb
xchg
mov
stc
sub
cmp
or
outsb
popf
das
sub
cmp
cmpsl
mov
pop
sub
adc
pop
cmp
jne
sub
jno
rcl
or
shrl
mov
sub
pop
mov
pop
xchg
inc
mov
and
sub
ljmp
ret
jbe
test
fiaddl
mov
je
inc
es
push
mov
dec
cmp
jle
xor
lahf
dec
adc
jo
out
mov
in
cmpb
lahf
imul
test
dec
xor
shrb
push
stos
cli
je
movl
arpl
push
jb
lahf
xor
outsl
mov
test
mov
mov
roll
jmp
leave
or
xchg
subb
push
mov
sbb
sbb
push
xor
mov
addl
dec
iret
enter
mov
aad
dec
mov
xor
ror
mov
xor
xchg
push
mov
jbe
mov
cmpsl
mov
push
jno
lret
xor
je
add
loop
mov
loop
es
xor
fidivs
ss
mov
push
xchg
inc
mov
cld
movsl
and
dec
push
sub
xchg
fnstsw
adc
jae
xor
mov
sub
fimull
ret
outsl
pop
pop
jecxz
pop
or
cmp
iret
outsl
loope
xor
test
scas
mov
or
or
popa
push
fidivl
pop
and
test
fldt
push
leave
adc
imul
lods
mov
add
xchg
push
js
jge
scas
ror
mov
sbb
mov
inc
jl
jnp
cwtl
or
xchg
sbb
jl
adc
xchg
mov
mov
sub
in
or
aaa
fdivrs
out
inc
add
push
lret
jns
dec
bound
inc
xchg
jbe
dec
mov
repz
das
adc
or
cltd
mov
inc
or
fiadds
pop
cmp
adc
imul
adc
shll
xchg
mov
and
out
ret
fwait
sub
pop
ficoms
loopne
xor
lea
fnstsw
cmp
push
mov
pop
fnstcw
cld
dec
pushf
inc
shr
mov
outsb
int3
cs
aam
cmp
lds
stos
and
fs
nop
push
jg
out
and
arpl
mov
push
fbld
jns
pop
mov
fdivrl
shl
aaa
mov
cmp
mov
out
mov
lds
sub
aad
jmp
mov
dec
pavgw
inc
sarl
ficompl
adc
unpckhps
fucomp
shlb
sbb
mov
addr16
nop
fsubr
dec
test
stc
jbe
or
or
fisubs
jno
push
arpl
cli
dec
mov
mov
repz
ds
popa
sti
cld
mov
test
jp
sub
iret
out
sbb
mov
or
adcl
scas
and
xchg
push
jne
in
shrb
mov
fstpl
and
mov
scas
mov
mov
xor
rorb
sub
add
sbb
or
inc
mov
cli
das
lahf
inc
fs
test
sti
jno
cmc
dec
lea
adc
and
decb
jle
sub
dec
shll
cmp
mov
lock
pop
inc
sbb
notb
xor
jmp
stos
in
out
loope
pop
out
pusha
js
sub
in
pop
outsl
adc
pop
push
jnp
enter
add
xor
xchg
scas
call
xchg
jg
insl
push
xchg
insb
mov
jle
rcrl
arpl
arpl
jl
into
inc
push
xchg
scas
lock
std
pop
add
je
jle
or
rcrl
and
mov
popf
push
xchg
xchg
cltd
add
adc
jbe
scas
pushf
inc
dec
movsb
aas
sub
call
ljmp
mov
or
rclb
rcrl
pop
inc
cli
lea
fwait
aad
negl
adcl
push
roll
adc
faddl
xchg
insb
mov
loopne
dec
out
cmp
pop
xchg
arpl
daa
and
push
add
fisubl
pusha
cwtl
ja
jmp
pop
fprem1
aam
jns
add
add
std
and
test
nop
lahf
xchg
filds
stos
lret
fs
cmp
inc
mov
clc
addr16
int3
insb
test
xchg
pushf
in
stos
clc
not
sbb
movsb
imul
push
cli
push
mov
shll
inc
pusha
sbb
cmc
jnp
lcall
shll
mov
aad
cmpsb
mov
jo
sub
es
idivl
fildl
iret
in
cld
sbb
repz
xchg
jne
push
mov
out
jp
ljmp
mov
push
jmp
ds
inc
mov
out
sbb
mov
dec
push
xchg
and
cmp
divl
jo
pop
lret
fwait
jle
imul
aas
cmpsb
add
imul
dec
xchg
fisttps
mov
hlt
inc
push
or
mov
loopne
out
add
lret
pop
sub
lods
int3
jg
inc
insl
mov
das
inc
add
popa
lods
movsl
rcrl
cmp
cmp
inc
push
inc
out
xchg
lods
outsl
insb
add
lds
sub
outsb
fdivp
mov
push
cmpsl
loope
push
adc
mov
ret
notb
stc
loop
xlat
push
stc
jp
imul
add
adc
mov
or
fmull
sahf
xchg
jg
enter
jmp
inc
insl
mov
gs
gs
pop
cld
jo
shrb
jbe
jge
frstor
ja
push
adc
dec
in
mov
ljmp
pop
sbb
mov
mov
adc
pop
loop
mov
popf
andb
pop
inc
pop
mov
jle
and
imul
mov
ja
xchg
mov
out
jl
jns
stos
mov
rol
pop
sub
inc
cmp
pop
lods
dec
pushf
fistl
fdivl
push
mov
cld
mov
jb
push
lock
in
testl
out
dec
sub
xchg
bound
fdivl
inc
jno
mov
and
in
adc
insl
and
jns
aad
inc
mov
dec
mov
imul
pop
add
fstpt
dec
jo
push
je
adc
push
fs
push
repz
or
adc
jbe
in
or
stos
and
inc
lds
mov
dec
xor
scas
pop
adc
test
mov
xchg
push
jmp
call
inc
out
sub
js
cmpsb
roll
icebp
and
loope
push
loopne
dec
idivb
leave
pop
or
mov
es
in
pop
stos
test
pop
andl
inc
sbb
jg
pusha
cmp
xchg
mov
or
paddw
fcoms
fdecstp
and
es
pop
and
and
sub
shl
and
inc
daa
out
pop
or
pop
xchg
fs
dec
pop
jae
jg
pushf
mov
mov
repz
ds
clc
out
pop
lods
pushf
dec
or
enter
mov
shl
pop
or
in
adc
push
lods
mov
mov
xchg
add
lds
inc
push
cmp
ret
sbb
mov
adcb
push
icebp
in
inc
inc
ds
jmp
add
sti
mov
popf
imul
repnz
fmull
int3
popa
adc
in
movsl
mov
stc
test
pop
popf
insb
sub
or
sarb
jmp
xchg
jb
adc
cmpl
shll
in
xchg
movsb
pop
aad
movsl
mov
leave
mov
sbb
dec
out
imul
mov
mov
test
lcall
shll
xor
xor
rorl
insb
int
or
jl
pop
pop
pop
test
pop
cld
cld
pop
xchg
pop
mov
push
sbb
adc
sbb
cmp
cmpl
adc
lods
xchg
imulb
lds
xchg
repnz
mov
inc
popf
out
add
fdivs
rcll
clc
pop
push
rol
in
add
push
popf
aas
scas
jp
jl
sub
add
into
mov
in
sbb
mov
fisubrl
mov
mov
jnp
ror
data16
xchg
cltd
mov
add
fs
mov
movsb
sbb
aad
pop
pop
adc
fwait
inc
jb
push
mov
push
mov
xchg
dec
dec
rorl
sbb
push
or
es
in
jae
xchg
aad
js
mov
ds
mov
dec
sbb
subb
lods
push
nop
hlt
in
xor
cwtl
aad
ret
mov
mov
cld
in
mov
xchg
xchg
sub
push
cmpsb
into
xchg
imul
lret
imul
pushf
test
lret
sub
int
mov
sbb
mov
cmp
push
inc
sbb
xor
push
clc
out
add
mov
fbld
adc
lea
mov
xchg
out
add
cmpsb
aad
jmp
insb
adc
xor
fisttpl
mov
sbb
fdivs
ljmp
cltd
scas
arpl
mov
xchg
jmp
add
js
addr16
jb
rorl
add
mov
pop
pop
jg
into
jno
and
mov
mov
push
inc
dec
and
outsl
les
test
insb
sub
roll
or
test
cld
outsb
xchg
jge
lea
loopne
pop
sub
mov
mov
sub
clc
add
push
hlt
xchg
push
xchg
and
cltd
inc
inc
inc
mov
push
or
mov
pusha
jo
faddp
adc
pop
push
loope
lock
shll
xchg
loop
cs
leave
cmc
movsl
mov
and
xor
pop
ret
inc
pop
insl
or
movlps
insb
out
mov
sub
fwait
pusha
stos
or
fucomip
in
stc
pop
ds
pop
push
and
fiaddl
cmpl
pop
mov
shll
mov
cmova
sub
xor
dec
flds
mov
mov
push
push
jne
hlt
pop
inc
cmc
cmp
mov
xor
push
cmc
mov
rcr
mov
mov
pop
popa
push
dec
or
out
fisubs
cmpsb
xchg
movsb
inc
js
jne
repz
push
cmp
inc
in
ds
mov
bound
decl
sbbl
rcrl
flds
xor
dec
xor
dec
in
adc
fadd
not
and
and
adc
push
xor
sti
leave
lea
mov
rcrb
lret
insb
cmpsl
fists
cmp
sbb
xchg
mov
mov
test
jmp
push
fildll
pushw
jle
pop
into
sub
cmp
jnp
test
pop
xchg
aad
fadd
imulb
shr
inc
or
lret
mov
ja
and
pop
test
aas
adc
add
sti
mov
sub
gs
ret
inc
push
shl
addr16
jg
ds
testl
mov
cltd
ss
and
inc
cli
cltd
inc
mov
cmc
adc
scas
adc
fsubl
sub
and
lds
stos
dec
push
sub
inc
mov
push
mov
out
lock
jne
xor
outsb
push
scas
outsb
jb
cmc
dec
pop
mov
arpl
iret
xor
mov
push
xor
js
or
mov
or
int3
dec
pop
jb
cwtl
xchg
adc
scas
in
mov
sub
add
ret
or
mov
cld
sub
icebp
lods
push
fldcw
rolb
popa
jne
mov
gs
int
in
bound
movsb
xor
inc
out
iret
dec
fildll
add
mov
sub
dec
add
ffree
add
add
or
mov
movsb
hlt
mov
imul
mov
cli
insb
shlb
das
inc
ret
out
rcrb
imull
shlb
push
int
mov
imul
sub
ret
push
dec
xchg
outsl
hlt
test
push
dec
lock
ja
jecxz
into
sbb
add
dec
push
push
mov
mov
imul
jo
sub
hlt
jne
les
inc
and
pop
mov
jno
pop
xor
fadds
roll
jmp
mov
test
or
cmp
pop
in
mov
fdivl
imul
nop
repz
xor
ljmp
sahf
xor
or
adc
pop
adc
xlat
in
xlat
pusha
cwtl
repnz
mov
in
add
mov
xor
sti
sbb
call
sbb
outsb
pop
pop
rcr
push
jno
or
xor
xchg
add
cmc
mov
jns
or
outsl
xchg
jb
fmuls
cmp
dec
pop
cmp
xchg
pop
xor
orl
icebp
in
xor
xchg
xchg
mov
xchg
pop
mov
mov
scas
stc
adc
sbb
pop
pop
and
out
fsubrl
mov
scas
xchg
pop
sub
lret
push
incb
dec
outsl
out
mov
aaa
jg
ja
cli
mov
mov
dec
out
int3
pusha
or
mov
mov
fldl
add
pop
mov
loopne
xchg
or
pop
lret
ret
movsl
mov
fcmovnb
fstpl
ret
xor
mov
jno
movsl
add
sbbl
popa
rcrb
push
daa
cmp
pop
stos
fistpll
jns
push
adc
shll
pusha
xchg
repz
cmp
xchg
jl
rcll
push
or
ljmp
add
push
sbb
enter
mov
popa
jecxz
insb
mov
fs
add
mov
bound
call
jns
mov
cmp
enter
mov
cmp
jge
pop
aaa
xchg
mov
sbb
dec
and
xchg
mov
rcrl
idivb
lahf
mov
mov
xchg
jmp
bound
scas
dec
enter
in
popa
in
lret
je
ss
rorl
xchg
lods
lahf
xchg
shll
jmp
mov
pop
add
cmc
adc
and
dec
pushf
out
cmpsb
enter
outsb
aad
andl
les
mov
pop
mov
into
fistl
loopne
adc
and
lret
lods
lds
dec
or
pop
or
and
and
scas
paddusb
not
sti
fdiv
push
mov
push
push
loopne
add
fwait
xchg
dec
mov
lea
push
xchg
rorl
ljmp
or
and
cli
push
bound
faddl
daa
pop
into
enter
jo
fnstenv
fsubs
shrl
inc
dec
inc
rcl
int3
js
stos
test
in
or
push
push
inc
sbb
mov
cmp
mov
cld
arpl
xor
mov
lods
mov
add
jbe
jl
scas
sar
imul
loop
mov
xchg
jecxz
inc
fisubl
insb
outsl
int
mov
fldt
pop
push
lods
aas
push
enter
mov
mov
cmp
addr16
cmc
aaa
imul
out
fbld
inc
sub
add
xchg
lods
stc
insl
mov
outsb
int3
int
sub
js
xorl
mov
loope
inc
in
rcrb
imul
dec
sarl
test
std
fdivrl
rolb
mov
lret
shr
mov
mov
aas
or
in
xchg
sbb
jb
adc
ret
out
add
in
call
xchg
xchg
bound
push
jmp
jns
mov
xchg
daa
add
xchg
iret
pop
test
dec
mov
jp
cmp
pop
je
repnz
sbb
stos
add
out
lcall
lret
andb
xchg
cmp
add
repz
stos
add
inc
xchg
jge
loopne
sub
repnz
ret
test
js
imull
push
ja
test
mov
rcrb
cli
rclb
fldcw
add
lcall
js
mov
or
or
test
xchg
jbe
neg
popl
roll
adcl
xorb
mov
lods
mov
push
jmp
inc
xchg
cmc
in
pop
call
pop
jge
pop
xor
call
pushf
imul
dec
inc
sub
sbbb
fildl
sbb
mov
mull
xchg
popf
inc
repnz
lock
ret
ds
movsl
nop
jge
xor
hlt
mov
add
xchg
les
sub
call
xchg
lcall
push
loopne
cs
jp
push
dec
lahf
aaa
push
cmpsl
push
inc
push
cmpsb
jl
mov
push
imul
test
fdivs
mov
xor
imul
xor
jnp
adc
xchg
mov
rorb
icebp
into
aas
insb
aam
push
mov
sub
add
repz
in
or
xor
ss
clc
das
pop
dec
xchg
push
inc
dec
out
mov
lods
add
adc
xchg
sarb
adc
push
inc
mov
or
mov
pop
push
hlt
xor
xor
in
inc
loopne
test
push
dec
add
or
mov
pop
mov
arpl
or
testl
lods
lock
mov
push
fxch
icebp
mov
or
xchg
or
sti
clc
sub
mov
test
push
push
xchg
inc
lods
mov
stos
mov
jno
mov
push
xor
xchg
dec
in
call
xchg
movb
adc
movb
cli
xchg
jno
movsl
les
mov
pop
cmpb
and
pop
enter
orl
cmp
pop
in
xchg
out
mov
sahf
push
pop
arpl
mov
clc
lret
movsb
out
ljmp
jle
xchg
lock
cmp
add
icebp
and
dec
inc
push
mov
out
loope
add
scas
mov
les
inc
call
in
dec
xlat
push
sbb
pop
lcall
cs
dec
scas
push
cmp
mov
insb
dec
cmp
or
je
xor
adc
pop
adc
mov
pcmpeqb
addr16
and
insb
lods
jecxz
mov
andl
cmpsl
cmp
sbb
das
popf
dec
loop
pop
testl
popf
sbb
das
int3
sbb
pop
lahf
inc
lods
mov
in
in
pusha
das
test
xor
bound
jl
sbbl
sti
fidivrl
pushf
or
cmp
jne
push
adc
repnz
push
loop
add
push
push
inc
dec
repz
mov
push
jno
push
add
ficoms
popa
cmp
mov
push
dec
ljmp
loopne
adcb
ss
pop
jmp
mov
daa
or
mov
cmc
add
push
clc
push
pusha
aaa
pop
jnp
pop
jno
push
jo
mov
mov
pop
pop
mov
sbb
add
xor
cmp
int
push
mov
sbb
xor
mov
subl
icebp
add
sub
and
out
jo
loopne
and
inc
and
pop
call
or
inc
mov
sub
lods
lea
or
push
xchg
mov
imul
push
mov
jp
mov
sarb
lret
lock
lret
shlb
gs
mov
and
xchg
jo
outsb
cmpb
jl
lahf
data16
lahf
xlat
cmp
addb
aaa
loopne
test
out
popa
stos
cmp
cmc
out
loop
add
lcall
add
test
das
cld
jge
mov
cltd
jge
add
xlat
xchg
shlb
mov
inc
xchg
rcrl
pop
stos
cmpsl
cli
and
jno
js
movsl
std
sub
add
cmp
loop
pop
cmp
mov
mov
stos
cld
jecxz
les
ljmp
jecxz
dec
pushf
lret
stc
int
mov
fwait
jb
pop
loope
ljmp
cmpsl
popf
push
fsubrl
adc
adc
xor
dec
gs
mov
aad
fnstcw
insb
fs
jo
imulb
xor
fstl
ret
stos
add
jp
in
std
cmp
loope
out
push
xor
test
cli
std
aas
jecxz
pop
int3
loopne
out
insb
and
mov
out
xchg
jg
lahf
pusha
or
or
inc
mov
shll
lods
mov
sub
add
push
mov
pop
aam
das
add
mov
imul
lods
rcrb
dec
cmc
adcb
loope
pusha
addr16
xchg
push
mov
xor
pop
cli
je
push
or
jb
sub
dec
xor
push
jbe
or
and
jne
mov
jl
sarl
into
adc
loopnew
in
aad
or
or
jno
jb
notl
mov
cmp
testl
lret
mov
test
push
push
xchg
idiv
shlw
stc
sti
mov
fs
pop
daa
into
add
dec
ljmp
push
fcompp
outsb
jb
xor
std
or
adc
out
movsb
inc
arpl
movsb
fcoml
out
int
cmpsb
lss
ficoml
mov
jae
and
ret
or
shl
insl
push
lods
mov
or
dec
nop
sahf
dec
push
inc
xor
in
loopne
ret
xlat
test
adc
fdivl
arpl
dec
dec
daa
xchg
pusha
popa
xchg
and
loopne
jae
lahf
loopne
fisubl
ret
pop
lods
xor
lods
loop
pop
mov
push
mov
lret
testl
lahf
xor
fisubl
xchg
int3
aad
cmp
in
adc
pop
pop
push
shrb
rcl
lret
rorb
sbb
sbb
or
add
xorb
ja
mov
xor
inc
add
push
push
sub
pop
pop
test
clc
fld
sbbl
test
test
mov
mov
inc
cwtl
outsl
dec
in
jne
rclb
and
mov
test
daa
pop
adc
scas
jbe
popf
push
repz
sub
pushf
mov
jp
scas
inc
and
shrb
test
inc
sub
or
sti
pop
xchg
scas
rorl
xor
movb
jbe
std
xor
sbb
jle
int3
jbe
cmp
pop
inc
repnz
and
scas
or
pushf
lret
adc
gs
in
outsb
ret
loop
es
les
xorb
negl
sbb
mov
and
pop
jae
push
fsubl
jne
inc
jbe
mov
sub
sahf
insb
xor
sbb
xor
dec
test
test
jl
pop
dec
movsl
daa
ret
xchg
xor
pop
stos
sbb
xchg
mov
add
push
and
jp
lret
mov
dec
into
xchg
and
les
mov
inc
into
xor
mov
push
jns
mov
xor
mov
fwait
mov
lock
cmp
cmpb
or
cltd
and
aas
les
fdiv
dec
inc
xchg
fisttps
adc
push
fmuls
xor
mov
mov
stc
lahf
and
xor
fisubrl
push
nop
cs
add
mov
adc
dec
je
cmpsb
mov
inc
mov
fidivrl
push
dec
add
rcrb
shlb
dec
sub
mov
sub
mov
xor
iret
idivl
mov
mov
cs
adc
nop
sub
jne
bnd
ljmp
cmp
add
test
xchg
test
daa
in
js
cld
pop
xor
sub
movsb
mov
and
pop
aaa
and
fstl
lcall
sarb
push
cltd
pusha
icebp
mov
fiaddl
mov
je
mov
adc
jg
sarl
out
xor
int
pop
lfs
int3
movsl
jo
movsb
or
xor
jle
clc
pop
div
mov
cmpsl
or
mov
dec
xor
ja
mov
mov
push
mov
cs
cmpsb
inc
add
lret
dec
inc
and
or
mov
sub
shrl
inc
notl
xlat
mov
dec
cmpsl
cmp
push
push
or
push
pop
pop
cli
aas
mov
mov
pop
adc
stc
pushl
inc
scas
in
dec
notb
pop
sti
dec
out
loopne
push
mov
inc
or
shll
inc
mov
pop
clc
sbb
arpl
pushf
leave
neg
sbb
in
mov
sahf
jnp
mov
mov
lods
mov
pop
popa
mov
mov
in
mov
popf
lcall
adc
int3
outsb
int3
add
aam
xchg
lcall
add
insl
loop
pop
sahf
push
lahf
insl
aas
movsl
ljmp
fisttpll
mov
jp
or
sbb
aas
daa
fisubl
int
scas
inc
in
sub
or
sbb
sub
lahf
ljmp
imul
mov
adc
sub
adc
inc
mov
pop
sbbb
pop
push
jle
daa
fadds
xor
jge
nop
subb
out
inc
mov
lret
mov
dec
push
cmp
pop
jle
add
inc
sbb
outsb
push
hlt
aam
pop
or
inc
and
dec
mov
ljmp
inc
mov
je
lds
push
negb
fsubs
ljmp
sbb
mov
popa
cmp
js
ret
inc
in
stc
sar
pop
repz
bound
mov
aad
js
test
shlb
sbb
xorl
jb
adc
or
gs
push
enter
add
mov
sub
mov
add
and
or
push
or
ficomps
jmp
fisubrs
mov
mov
mov
xor
fs
adc
sub
sbb
mov
dec
or
or
mov
mov
inc
stc
aam
pop
mov
rorl
or
aad
sub
js
dec
mov
lds
cld
xchg
pusha
sub
xor
add
icebp
mov
imulb
push
jle
or
stc
stos
pop
leave
sub
push
mov
in
data16
stos
mov
mov
addr16
test
arpl
clc
adc
ret
mov
shll
mov
push
xor
in
stos
mov
roll
mov
in
cmpsb
adc
fistpl
mov
test
jnp
clc
lock
in
lds
fisubrs
andl
in
xor
dec
push
mov
nop
mov
ja
pop
xor
add
jmp
inc
movsb
sbb
std
stc
clc
cmp
rorl
lea
pop
int3
lret
movsl
mov
pop
jge
sbb
sub
pop
in
jns
jecxz
pop
sti
push
cmp
loop
mov
add
jns
push
mov
inc
add
mull
cmpsb
test
mov
pushf
lcall
inc
fimull
mov
ret
cmp
mov
mov
jne
mov
push
lods
jb
movsl
test
clc
mov
test
ret
int3
xchg
aaa
fmul
xchg
in
movsb
outsb
add
scas
dec
jno
fld
pop
xor
or
dec
pop
aad
loop
int3
cmp
or
test
sub
jmp
and
pop
pop
in
sub
mov
pop
rolb
sbb
outsb
mov
int
sbb
rorl
xchg
decb
push
dec
adc
dec
mov
sub
dec
add
push
clc
sub
mov
mov
test
sub
dec
dec
dec
jbe
cmp
dec
push
pop
movsb
sarb
pop
add
adc
std
pop
imul
xor
jno
and
pop
sub
add
mov
lcall
mov
das
out
push
in
xor
push
add
xor
adc
pop
cwtl
mov
sbb
cwtl
xchg
xchg
push
cmpb
mov
cld
or
lods
out
xor
pushl
loop
nop
xchg
mov
mov
scas
lahf
mov
fidivrl
jmp
sub
fiaddl
jns
sbb
pop
fsubr
lahf
loop
push
das
or
fisttps
cmp
jecxz
fldl
xor
inc
shrl
call
int
mov
mov
lock
loop,pt
aas
push
movsl
call
aaa
push
pop
sub
cmp
add
sbb
xor
sbbl
daa
aam
out
mov
ficoms
test
lcall
jmp
ss
dec
andb
mov
adc
cmpsb
unpcklps
sub
stos
mov
dec
push
xchg
lahf
fcmovnb
jg
out
jl
popf
cmpsb
gs
imul
inc
mov
fwait
dec
push
cs
xor
and
or
outsl
std
mov
push
nop
add
pop
rorb
lcall
jae
cmpsl
jp
and
in
jl,pt
cltd
push
das
mov
push
aas
add
ret
lds
movl
das
xor
mov
inc
std
mov
inc
mov
push
push
xchg
mov
inc
lods
adc
cmc
data16
xchg
loop
mov
xor
xor
pop
push
cmp
jb
enter
add
or
cltd
popa
enter
cmpl
aam
dec
mov
xor
jle
pop
in
xchg
add
dec
data16
sub
push
aam
inc
xor
sbb
nop
mov
lret
stc
in
cmp
jmp
cmpsl
push
mov
scas
les
shll
pop
stos
cmc
call
push
int3
xchg
imul
adcl
out
and
loope
movsb
pop
addl
loope
xor
aad
test
xor
xor
aaa
cmpsb
push
in
loop
add
ret
test
enter
pop
inc
and
add
int3
movb
fcmove
dec
push
icebp
sub
js
sti
addr16
mov
popa
mov
sbb
dec
vminss
add
xor
adc
hlt
xchg
pusha
jb
ss
ja
push
stc
sarl
mov
divl
into
js
mov
pop
sbb
aam
xchg
pop
mov
pop
das
xchg
das
outsl
sbb
lahf
sub
and
or
arpl
into
aaa
and
jns
add
das
cmp
pop
and
add
mov
mov
inc
mov
movsl
loopne
fs
xchg
or
outsb
sti
cmp
fcmovu
dec
flds
add
es
sbb
loope
mov
mov
outsl
xchg
or
inc
les
mov
nop
ss
xor
aad
loopne,pt
daa
pop
or
pop
repz
sbbl
lods
mov
add
mov
call
add
inc
sub
mov
and
sbb
insl
sti
adc
mov
push
in
loop
int3
sti
add
cmpsb
mov
adcl
add
fadds
dec
std
cmp
in
int
shlb
pop
addr16
add
xorb
xchg
inc
mov
les
dec
mov
movsl
mov
data16
mov
mov
test
cwtl
shll
out
out
fxch
inc
test
mov
add
cmp
mov
shlb
or
orb
push
loope
adc
mov
sub
mov
mov
cwtl
cmp
push
xchg
xor
fs
cld
ds
mov
enter
out
lret
push
js
pop
aam
inc
sub
xlat
clc
xor
test
mov
cmc
ror
sbb
push
xchg
loop
adc
sti
popa
cmp
ret
jno
aas
test
mov
aam
shlb
out
dec
jb
cmp
rolb
add
xor
ficoml
scas
ss
jo
and
mov
ljmp
mov
and
jle
xor
test
pusha
in
stc
loopne
add
inc
push
cmp
push
add
aad
jg
cli
pop
push
pop
outsb
mov
mul
push
inc
push
repz
adc
ret
out
pop
stc
sub
sub
fistps
pusha
shrb
sub
jp
dec
mov
jno
push
sub
pop
xchg
aad
enter
mov
insl
nop
pop
sub
jp
test
xchg
cmp
xor
cwtl
out
push
inc
out
ljmp
lret
sbb
xor
gs
jno
mov
pop
sbbb
stc
cmc
sub
mov
fnstcw
lret
mov
outsb
fnstenv
inc
xchg
or
and
push
push
scas
les
mov
iret
adc
fldenv
data16
xchg
test
loop
aad
mov
and
cmp
hlt
aaa
ret
insb
pusha
mov
arpl
shlb
insb
leave
push
rcrl
mov
mov
sbb
mov
fbld
sar
xor
sti
aas
adc
fs
pop
inc
call
push
ja
sub
test
enter
sub
imul
stc
sub
cmp
sub
mov
bound
jg
lcall
mov
pop
mov
mov
sub
aad
cli
ss
aad
fimuls
pop
cwtl
cmc
fs
sbb
int
add
jmp
fnstcw
in
or
mov
push
mov
add
xchg
cmp
mov
pop
repz
add
push
adc
sub
das
ror
loop
cs
jae
clc
sbb
xchg
shlb
lret
push
orb
in
and
push
fcmovb
inc
cwtl
jg
push
cmp
gs
pop
icebp
mov
jnp
xchg
mov
sahf
jl
add
mov
vpunpckhwd
mov
leave
xlat
enter
pop
pop
dec
pop
mov
in
mov
push
pop
push
inc
xor
out
scas
loop
in
nop
or
and
lahf
icebp
orl
sbb
in
or
jae
movsb
lds
inc
add
inc
lods
pusha
adc
and
pop
pop
jb
fidivl
push
cmpl
or
jbe
pop
js
xchg
ss
cmp
xor
scas
and
call
and
xor
popfw
push
cwtl
jmp
pop
ds
cmc
adc
inc
sub
add
jmp
xchg
adc
mov
mov
mov
loope
jae
mov
inc
in
pop
dec
jns
pop
inc
das
loop
out
jecxz
mov
sbb
xchg
mov
mov
jg
push
sub
mov
loope
push
insb
sbb
push
dec
xor
xchg
add
mov
mov
cmp
jns
pop
pop
pop
gs
xchg
ret
fmuls
dec
xchg
lahf
test
xlat
lods
or
push
inc
mov
and
push
lods
xchg
and
mov
add
ss
imul
inc
pop
mov
xchg
xchg
inc
mov
push
call
pop
inc
out
sbb
sub
movsl
and
jno
dec
pop
leave
cmpsl
inc
insl
jmp
or
xor
shrw
call
mov
adc
dec
mov
cmp
pop
jb
xor
jne
add
je
cltd
mov
cmpsl
inc
nop
js
inc
pop
add
ret
lods
cltd
or
loopne
mov
jecxz
std
sub
inc
imul
pop
xor
pop
subl
in
insb
pop
out
and
dec
mov
shl
pminsw
mov
divl
xlat
xor
enter
adc
cltd
mov
lock
dec
mov
pop
jnp
sahf
cmpsl
sub
in
mov
outsl
or
leave
cmp
ret
daa
xor
jg
rorl
or
inc
xchg
or
pop
xchg
inc
movsb
jle
pusha
loope
cli
fdivp
nop
mov
push
jae
cmp
mov
fcomps
imul
xchg
cltd
mov
sahf
je
rorb
sbb
push
ds
rcll
push
stc
stc
fpatan
loop
addr16
jb
cli
xchg
push
xlat
xor
ds
xor
stos
add
add
mov
aam
andb
out
or
cmpsb
rcll
pop
add
imul
add
stos
cmc
xor
and
mov
into
out
mov
in
add
sbb
add
and
pop
stc
cld
or
pop
sahf
ds
adc
ljmp
aad
and
lea
daa
pop
mov
sbb
in
dec
gs
pop
push
jp
lds
xor
jecxz
xlat
aam
xor
enter
clc
fst
repnz
test
push
dec
fs
pop
int
mov
sti
add
ja
and
xchg
enter
and
inc
aas
outsl
shrb
mov
daa
arpl
adc
jg
lods
mov
mov
rcrb
sub
sbb
ja
mov
in
mov
xor
cld
pusha
cmpsl
jle
xor
push
mov
icebp
push
popa
xor
arpl
fdivrl
icebp
aad
push
mov
push
hlt
cld
mov
call
movb
inc
test
inc
shrb
push
push
in
mov
icebp
mov
cmp
xor
lods
sub
scas
jo
mov
jnp
or
popa
xor
mov
jmp
mov
iret
sbb
or
ret
andb
mov
fisubrs
fstpt
mov
mov
sub
aas
scas
out
mov
jg
mov
fistps
pop
jecxz
xchg
pusha
and
into
pop
mov
sub
cli
insb
mov
mov
stos
aam
xor
ret
mov
out
clc
mov
outsb
js
lds
mov
hlt
add
movsb
pop
ja
std
inc
mov
xor
in
mov
out
aad
and
adc
mov
lods
mov
and
push
sahf
jns
mov
sti
ds
pop
in
andl
dec
scas
cs
outsb
stc
mov
imul
mov
repz
lret
sub
mov
inc
xchg
cmp
fnstcw
jmp
fists
fistpl
aad
push
push
inc
fs
ds
iret
push
outsl
cmp
and
mov
jb
and
cli
pusha
mov
out
or
mov
aam
adc
sbb
jp
or
jb
dec
jne
mov
cmc
jno
ds
rolb
in
outsl
shrl
mov
scas
mov
or
add
jmp
sub
sti
rdrand
jns
mov
lods
out
mov
push
int3
xchg
inc
push
xor
jae
jbe,pt
aaa
pop
fstl
push
ds
sti
mov
jg
cmp
stc
cmpsl
outsb
and
adc
push
ret
mov
mov
sbb
je
inc
adc
xchg
bound
and
sahf
mov
mov
mov
and
stc
js
push
inc
cmpsl
cmp
mov
pop
xlat
xor
or
test
sub
xchg
scas
in
xchg
cmp
mov
cli
xlat
mov
icebp
cmc
mov
popf
mov
aas
and
shrb
add
cld
mov
movsb
repz
lret
or
sub
mov
inc
jb
test
xchg
sti
add
add
inc
dec
mov
loope
adc
cmpsl
in
cmp
pop
dec
xor
sbb
push
cmpsl
xchg
add
movsl
cs
or
or
lret
add
xchg
jne
pusha
dec
dec
xchg
sbb
outsl
jno
add
dec
mov
jno
xchg
lea
sub
xchg
fisttpl
cmc
cli
imul
and
mov
lahf
add
lds
addr16
fdivs
jg
outsl
cmpsb
jae
inc
loope
imul
push
cmp
push
jl
sbb
jle
jmp
inc
jo
sti
cltd
push
adc
jl
xchg
arpl
dec
icebp
cmc
mov
pop
fdivl
push
dec
loop
inc
sub
fstl
je
pop
int3
sbb
push
out
pop
mov
push
aas
sbb
mov
mov
mov
shll
cmp
xchg
negl
mov
dec
int
jo
outsl
sbb
inc
pop
in
and
lcall
add
and
sub
or
add
cld
sub
mov
jge
add
push
popf
push
loope
fucomip
stc
jo
add
jo
fldl
test
jp
outsl
arpl
js
cmp
mov
je
adc
inc
in
mov
cmp
pushf
xchg
sub
imul
out
lcall
xchg
shl
xorl
or
das
lret
jle
mov
stc
or
mov
das
adc
mov
in
mov
add
lods
or
xor
repnz
fcmovb
jge
popa
mov
sub
push
push
insb
es
pushf
xor
icebp
lcall
jns
loop
mov
mov
pop
fsubrs
or
ja
inc
pop
ret
call
pop
daa
and
push
ja
outsl
lods
xchg
addl
inc
sbb
mov
lea
test
in
into
shr
xlat
repnz
add
push
lcall
inc
test
push
sub
jbe
call
jg
test
sbb
fwait
mov
mov
jecxz
jmp
les
shl
dec
lea
add
sarb
add
fs
mov
push
inc
push
loopne
fiadds
mov
out
lret
xchg
and
add
ja
shll
enter
testb
sti
mov
add
rorb
daa
movsb
test
lcall
xchg
lea
pusha
pop
jle
divb
lahf
xchg
jmp
lea
xchg
lods
js
std
xchg
out
xlat
shl
out
cmp
pushf
cmp
das
add
mov
mov
mov
jns
xor
push
push
int3
cmpsl
mov
cwtl
sbb
loope
inc
outsl
in
mov
mov
mov
lods
add
xor
mov
adc
pop
rolb
ljmp
sbb
push
inc
dec
cs
mov
cmp
fimuls
mov
mov
mov
mov
cwtl
sub
ss
js
in
mov
mov
out
mov
pop
mov
cmpsb
aas
fsubs
mov
push
out
ljmp
xor
xchg
repz
popf
xchg
xor
adc
and
or
out
data16
dec
jae
lret
or
xor
cmpsl
stc
test
mov
imul
out
push
sbb
mov
or
xchg
adcb
push
mov
and
imul
push
scas
in
or
sbb
mov
fsubr
jmp
cltd
push
mull
jle
add
mov
into
jg
lcall
adc
mov
out
mov
push
lods
stc
lea
insb
lock
stos
fisttpl
or
outsl
cmp
rcr
imul
jle
dec
mov
pop
inc
cmp
icebp
mov
test
or
sbb
xor
cs
sbb
push
or
enter
mov
es
insl
cmp
lcall
loope
adc
dec
and
and
adc
sub
div
dec
or
and
scas
mov
fistps
cmp
call
push
cs
stos
pop
movsb
and
rcll
mov
cli
ljmp
jp
daa
notb
out
mov
inc
fsubl
sbb
pop
rorl
sti
es
mov
daa
mov
sub
push
push
push
inc
pushf
gs
mov
push
pop
fcmovnu
sbb
dec
and
lcall
xchg
in
movsl
cld
cmp
dec
imul
jge
add
mov
cmp
push
out
add
ja
cmpl
lahf
cmp
jnp
stos
popl
sbb
ljmp
dec
pop
mov
loop
lock
cmpsb
fst
pusha
shll
ss
loope
sbb
push
pop
jl
incb
push
nop
in
adc
leave
or
testl
aam
mov
fwait
dec
scas
lds
jno
insl
fsts
sbb
mov
mov
lea
push
imul
outsl
mov
mov
sbb
push
repnz
jbe
inc
pusha
aad
repz
cmp
sbb
cs
pop
mov
repz
adcl
inc
add
mov
mov
stos
fidivrs
fbstp
in
mov
add
mov
fst
and
mov
add
push
jmp
popf
mov
scas
xlat
or
outsl
mov
xor
adc
cltd
pop
dec
cmp
mov
adc
pop
cmp
arpl
ljmp
popa
lcall
inc
sub
dec
push
call
cmpsl
hlt
adc
mov
xlat
or
into
into
add
cmp
fcmovb
pushf
aaa
pushf
out
xor
movsb
out
dec
dec
sar
lods
mov
or
imul
push
xchg
leave
pop
sbb
ja
push
test
bound
mov
in
mov
ret
inc
push
mov
dec
inc
scas
push
dec
and
and
ss
mov
pop
mov
rorl
nop
ds
into
pop
adc
iret
mov
sbb
subl
aaa
aad
sub
and
ficoms
and
arpl
das
iret
cmp
mov
jecxz
xchg
mov
jmp
cmp
push
and
imul
pop
jp
loop
lret
jmp
inc
dec
sbb
ret
ss
mov
and
adc
out
mov
aaa
jmp
push
push
sub
out
int3
leave
movl
jns
sbb
add
push
iret
sub
aaa
mov
push
ret
jg
dec
lods
mov
fildl
into
in
mov
add
orl
or
xchg
xor
daa
sbb
sub
std
aaa
dec
lret
jno
sbb
xchg
or
add
out
mov
daa
jbe
fistpll
push
sbb
out
push
andl
addr16
cmpsl
mov
int
mov
mov
and
push
or
lods
fimuls
cmp
outsb
icebp
inc
push
cmp
bound
mov
mov
xchg
int
sbb
iret
sbb
jp
inc
xchg
addr16
fists
sbb
daa
stc
xor
fiaddl
cmpsl
cmp
nop
mov
xor
inc
pop
sub
dec
and
repz
push
dec
xor
incl
adc
mov
mov
rcr
dec
lret
aas
pop
bound
shlb
inc
or
mov
shlb
sbbl
sbb
rcll
pop
or
inc
lds
dec
fnstsw
fwait
cwtl
jle
dec
popa
lds
enter
sahf
jns
mov
leave
adc
and
scas
sbb
fldt
mov
pop
out
dec
fisubs
sbb
jg
popf
dec
inc
gs
mov
cmpsb
flds
sar
mov
pop
mov
jno
in
nop
jle
or
push
jl
jecxz
lahf
jnp
and
lret
push
and
pop
xor
aad
xchg
outsl
popa
shrl
push
push
sub
mov
adc
pop
es
and
mov
mov
sub
test
aad
lods
lods
inc
cs
lret
daa
sbb
cmp
and
mov
leave
scas
sub
movsb
fimull
out
mov
rcr
mov
arpl
es
imulb
and
sub
in
int3
xchg
call
push
mov
cltd
xor
inc
sub
pop
repz
pop
daa
test
in
fistps
outsl
push
ljmp
int3
push
in
jo
mov
aaa
and
lock
xchg
rorb
ret
dec
shl
dec
xchg
imul
hlt
push
push
aaa
push
push
in
data16
and
jmp
xor
pop
dec
fs
int
adc
scas
push
or
imul
sub
xlat
jg
xor
cmp
rcrb
ds
cmp
cwtl
shrb
cmp
stc
pop
mov
pop
scas
pop
popa
fs
sti
adc
add
clc
cld
mov
call
movsb
jns
fistpl
fidivrl
push
imul
inc
test
test
push
popa
xchg
jae
lds
mov
xor
repnz
ljmp
cmpsl
jns
out
jnp
outsb
fidivrs
test
and
jle
sub
push
sti
xor
inc
mov
mov
ret
fbld
aad
xor
inc
rcll
inc
sub
and
push
xor
shlb
sub
mov
cltd
xchg
sub
jle
lcall
lea
push
imul
in
stos
test
and
lcall
jno
mov
fwait
ret
push
cltd
pop
sub
addr16
frstor
loop
pop
cmp
mov
sub
shl
xchg
cmp
je
dec
sub
andl
cmpsb
out
cltd
push
mov
mov
push
and
jge
daa
pop
aad
mov
int
insb
int
xor
push
pushf
lret
cli
pop
cmc
mov
jg
mov
xor
mov
cltd
lret
shrb
sbb
mov
mov
inc
imull
out
mov
pop
aas
sub
subl
mov
and
notb
and
cmpsl
jne
sub
sub
dec
sbbb
pop
movsl
stc
out
aam
push
cmp
add
push
arpl
dec
sbb
ja
dec
mov
std
inc
std
or
inc
jl
pop
popf
add
and
cmp
jne
add
and
stos
jecxz
mov
inc
mov
scas
dec
aam
sti
fsubr
mov
mov
pop
js
xchg
je
popf
cmp
arpl
push
outsb
sahf
cmp
shlb
jno,pn
mov
int
fs
mov
cmp
shl
popa
jp
push
divl
cltd
js
dec
pop
inc
mov
leave
mov
mov
or
add
lods
out
pop
cltd
testb
and
test
push
dec
xchg
test
adc
push
icebp
das
pop
xor
std
addr16
xor
mov
or
fwait
stc
in
arpl
clts
push
xlat
lods
dec
push
fisubrs
push
add
push
mov
pushf
into
or
leave
outsl
sbb
xor
movsl
sub
mov
push
jb
push
pop
mov
pop
mov
sbb
and
push
js
aaa
sbb
mov
mov
gs
enter
cltd
cmp
aad
stos
mov
into
mov
sub
ja
xor
outsb
pushf
lret
sub
rol
adc
pop
add
roll
dec
adc
pop
mov
loopne
cld
sbb
cmpsb
test
cmp
test
mov
es
cwtl
push
movsb
into
jle
cs
scas
dec
cwtl
fmuls
mov
push
xchg
add
sarl
enter
jnp
xor
pop
xor
lds
dec
daa
out
ja
stos
inc
mov
gs
cmp
aad
out
fsub
pop
cmp
scas
sbb
xchg
ret
andnps
mov
neg
cmp
pop
xchg
adc
pop
fmull
fdivl
fstps
jmp
mov
mov
mov
mov
fcompl
adc
jle
test
xchg
mov
cmpsb
jo
pushf
xor
cltd
mov
aaa
and
out
fsts
jmp
jle
dec
notl
aas
xchg
and
lea
pop
jb
les
popf
cmp
lahf
or
pop
mov
repz
dec
push
xchg
aad
cs
lods
lods
push
insb
mov
in
jp
divb
ljmp
jge
or
adc
cmp
popa
imul
add
jns
orl
cmp
sbb
mov
fs
cmp
loopne
add
sub
push
xchg
fmul
jns
in
mov
adcb
pop
or
fidivrs
mov
scas
mov
outsb
out
jno
or
dec
scas
xchg
push
jle
and
jb
xor
lret
std
adc
or
mov
out
rol
cmpsl
lret
jmp
addr16
inc
imul
fxch
daa
sub
or
inc
std
gs
jnp
ret
push
mov
ds
add
and
popf
adc
jno
pop
sti
and
movsb
cmpsl
in
cltd
and
xchg
clc
xor
or
sbb
mov
jne
push
mov
in
iret
mov
sub
xchg
dec
sub
jne
out
cld
popa
sahf
stos
jbe
lods
fcompl
add
pusha
into
add
cltd
jae
xor
dec
cmc
push
mov
mov
mov
inc
cmp
xchg
sbb
cltd
inc
imull
push
jns
imul
or
rorl
lret
ret
xchg
pop
test
ljmp
div
in
test
xor
push
jb
call
sbb
push
adcl
cmp
pop
insb
decb
nop
inc
pop
stc
hlt
jle
aam
inc
sbb
or
arpl
mov
or
push
mov
adc
pop
pop
loop
fwait
xor
xchg
lret
xchg
cmp
in
aam
andb
cmp
or
addr16
dec
and
stos
lods
repnz
jno
int3
mov
inc
fisubl
into
cmpsb
inc
daa
xchg
jl
hlt
imull
xorl
ret
cmp
xor
adc
stc
pop
jns
xchg
ja
das
and
pop
or
sti
pop
mov
xor
pop
int
and
push
or
outsb
leave
add
imulb
sarb
fdivrs
inc
xor
sub
jbe
sahf
cmp
out
call
cmp
insb
mov
jae
out
cli
mov
aaa
lock
dec
test
int3
repnz
movsl
cld
gs
stc
es
xchg
jmp
sub
sub
adc
push
pop
cmc
out
in
nop
cmp
and
xchg
sbb
out
shrb
leave
inc
inc
mov
ret
bound
push
testl
pusha
add
sub
jl
out
pop
stos
fisubrs
dec
add
inc
fmul
pop
cmpsl
cld
mov
cmp
lods
adc
add
xchg
sub
push
adc
xor
cmp
push
or
test
dec
sub
arpl
or
mov
xor
outsl
incl
or
sbb
addr16
xor
jecxz
insb
jecxz
ljmp
iret
pushf
test
push
add
jae
cwtl
add
mov
imulb
mov
int3
jl
cmp
dec
push
nop
sbb
ret
push
fldenv
in
int3
addr16
fwait
xchg
pop
push
dec
cmpsb
repz
orb
push
and
mov
fbld
push
arpl
mov
add
mov
mov
sti
mov
push
sbb
mov
pop
sti
sub
mov
mov
test
aas
fs
xor
aam
incl
cmpsl
loope
and
or
inc
ret
sahf
in
int
mov
cld
mov
inc
cmp
dec
xor
out
mov
imulb
jp
bound
dec
ja
insl
mov
dec
or
mov
lock
fdiv
in
repnz
mov
pop
pushf
and
call
scas
or
cmp
pusha
cmp
jecxz
xchg
enter
das
sbb
pop
repnz
sarl
test
addr16
stos
int
repz
repz
test
sbb
pop
mov
mov
jp
movsl
adc
dec
sub
mov
rorl
mov
repz
adc
ret
scas
filds
jns
movsb
rol
fisubrl
pop
in
inc
cltd
arpl
sti
mov
call
xchg
adc
sbb
inc
fcomp
inc
pop
test
std
cli
frstor
and
pop
cwtl
inc
mov
mov
mov
mov
adc
dec
jne
in
mov
clc
xlat
fdivrl
repnz
pop
sbb
imul
loope
adc
repnz
mov
add
add
cmp
mov
iret
in
lret
sub
xor
inc
test
arpl
hlt
cmpsb
pop
jns
jnp
push
push
call
jae
imul
xchg
sub
dec
aad
stos
push
decl
loopne
aaa
cmpsb
ljmp
cmp
loopne
cmp
jns
lcall
cwtl
stos
shl
fsubl
push
mov
lret
out
es
sub
ret
inc
pop
lock
jo
sub
lea
xor
push
lret
addr16
jnp
pusha
sub
mov
iret
cmp
mov
xchg
push
mov
cmp
pop
inc
and
std
mov
and
and
or
in
jg
add
fnstenv
xor
jg
fs
sub
xchg
out
dec
adc
sub
in
sbb
cmpsl
push
pusha
sahf
mov
stc
and
inc
icebp
pop
xchg
xchg
adc
pop
dec
jae
imul
popa
test
mov
mov
out
js
dec
xor
outsb
insb
call
adc
push
xorl
jno
ret
mov
js
jecxz
mov
out
cwtl
add
mov
fstl
arpl
xchg
or
jo
mov
imul
inc
repnz
xor
push
stos
insl
cmp
push
imul
subl
into
enter
ret
cltd
mov
adc
stc
or
pop
jp
mov
stos
nop
jb
adc
pop
daa
out
stos
test
lods
lea
stc
mov
test
js
ret
mov
mov
xchg
out
lret
imul
scas
add
xor
or
ret
and
adc
movsl
and
leave
rclb
outsb
ljmp
jno
push
cmp
stc
imul
sbb
fidivs
jp
je
dec
or
aaa
and
and
mov
xchg
in
inc
dec
es
ret
arpl
out
push
ret
outsl
mov
mov
aaa
fcmovu
in
cmpsb
mov
xor
sarb
icebp
xchg
xchg
and
imul
mov
inc
ret
mov
popl
xchg
divl
jb
sti
cli
sti
ja
leave
sub
lds
lahf
imul
or
leave
mov
xchg
ret
sub
push
sti
jmp
mul
insl
push
add
inc
xor
sahf
test
enter
push
out
pop
js
roll
xchg
movsb
popa
push
outsl
mov
adc
addl
adc
test
arpl
mov
decl
in
jmp
mov
mov
adc
lar
lods
imull
xor
adc
mov
fidivrl
iret
or
lds
test
xor
push
js
scas
jmp
jb
std
mov
jmp
or
std
mov
test
and
ret
in
sub
lods
sub
aas
cltd
xorl
and
cmp
xor
or
xor
out
xlat
arpl
xor
stc
inc
icebp
movb
dec
out
in
cmp
jmp
stos
and
ret
push
dec
jo
adc
cld
adc
push
cmpsb
in
imul
adc
mov
lock
hlt
sbb
movl
cmpsl
mov
jbe
and
push
das
int3
clc
dec
cmp
xor
je
arpl
jo
cmp
in
loope
add
mov
aas
je
jae
subb
xchg
mov
iret
movsl
in
cltd
stc
loopne
and
pop
cli
xchg
push
stos
jg
xchg
fidivrl
cltd
jle
ret
repnz
push
adc
sub
fwait
int
add
into
ljmp
cld
mov
pop
loopne,pn
mov
mov
ljmp
jge
addr16
cmc
jo
out
pop
imul
push
sub
pop
pop
cmp
or
push
lahf
mov
pop
xchg
push
in
mov
xchg
std
jp
rcr
test
xor
enter
and
fisubs
xchg
leave
push
inc
cmp
inc
cli
inc
shll
cmp
lret
insb
in
jmp
cs
push
out
jne
mov
add
inc
fists
cs
ss
jg
xchg
cld
push
imul
add
cs
push
lea
push
pop
loopne
adc
inc
shrl
and
fildl
sahf
lods
dec
sub
cld
sbbb
mov
subb
cld
out
aas
or
imulb
movsl
jl
xor
out
dec
lock
cltd
and
loop,pn
mov
mov
repnz
insl
rclb
mov
dec
cmp
fmull
roll
xchg
pop
fistpl
int
and
cmp
fs
dec
sub
in
and
lret
mov
leave
test
testl
mov
stc
pop
outsl
pop
jne
dec
xchg
lods
insl
fsubs
mov
adc
iret
iret
mov
cwtl
mov
inc
push
inc
adc
dec
pop
pop
je
push
out
ja
mov
push
xchg
mov
ret
xchg
shlb
add
fwait
movsl
mov
je
rcrb
jne
pop
cmc
inc
dec
add
sub
mov
push
daa
lcall
ss
data16
cwtl
sub
add
mov
xor
jge
xor
mov
add
enter
and
jnp
nop
pop
mov
cmpsl
xchg
aad
aas
int
cmpsb
mov
jmp
xchg
jb
lahf
push
addr16
out
or
add
mov
jnp
or
add
fldt
out
dec
jge
shll
fldcw
stos
test
fstl
xor
mov
ficoml
push
rorl
test
mov
add
jno
ja
and
add
fistpl
js
bound
sub
pop
push
aaa
mov
in
test
fwait
xchg
mov
dec
pushf
push
mov
jns
repz
pop
pop
out
push
dec
jns
mov
add
xchg
aam
sbb
dec
ljmp
int3
mov
pop
repnz
add
mov
cli
int3
ss
cmp
or
jl
adc
ret
fistpl
lret
leave
mov
push
mov
mov
sbb
push
movsl
xchg
sub
leave
pop
loop
push
sbb
jns
mov
stos
in
adc
in
test
outsb
jl
push
rol
sbb
push
mov
inc
jecxz
bound
xor
std
xchg
pop
mov
xchg
add
out
jecxz
daa
xchg
mov
jns
xor
mov
aaa
lret
daa
sbb
ss
inc
aas
sbb
je
or
pop
dec
insl
xchg
and
dec
cwtl
mov
jae
mov
or
sub
stos
adc
arpl
xor
mov
movsb
xchg
sub
and
enter
cmc
xchg
add
mov
outsl
mov
cs
xor
shlb
push
mov
xchg
outsl
dec
not
test
jb
dec
mov
inc
cmp
aam
xlat
sub
mov
in
stos
add
lds
adc
icebp
push
dec
or
pop
fwait
sub
lret
rorb
jp
sub
divb
pop
mov
xchg
dec
push
lcall
cwtl
pop
push
bound
rol
mov
cmp
aas
mov
and
jb
dec
or
cs
xlat
pop
popa
ret
stos
push
daa
xchg
clc
std
sbb
pop
xor
xchg
fdivs
add
stos
adc
push
fnstenv
mov
mov
cmp
inc
adc
mov
cmp
inc
adc
jmp
inc
sbb
aaa
repz
cwtl
call
or
pop
push
loope
out
fldcw
shlb
mov
cs
aas
in
cmp
sub
std
cwtl
cmp
cmpsl
pushf
mov
dec
dec
lahf
add
pop
fdivp
out
int
hlt
sti
mov
ret
iret
cmp
repnz
dec
lahf
mov
adc
ja
jnp
add
mov
int3
sub
sub
nop
mov
mov
mov
adc
aad
push
mov
dec
or
mov
jg
ja
cmpsb
or
mov
out
push
adc
mov
xchg
lods
jecxz
sbb
enter
mov
cmp
orb
inc
pop
cmp
ja
cltd
loop
lret
push
out
mov
xor
mov
push
lea
pop
xchg
push
xchg
in
cli
sub
and
aaa
xchg
mov
cs
movsl
arpl
sbb
std
jns
jmp
js
adc
shrb
js
dec
pop
cmp
cmpsb
mov
fwait
dec
mov
push
stos
shlb
leave
call
mov
dec
add
daa
out
sbb
add
call
cwtl
push
mov
imul
mov
push
lret
dec
inc
sub
mov
daa
stc
shlb
daa
clc
mov
cmp
jnp
xchg
xchg
adc
stos
mov
test
mov
add
ret
push
jl
mov
data16
cmp
lret
lret
sub
test
mov
aad
rorl
cli
enter
movsb
fiadds
adc
lea
jns
add
scas
add
pop
and
cmp
lcall
repz
daa
mov
adc
pop
aaa
adcb
hlt
push
les
scas
cwtl
xchg
pop
lret
shrb
aaa
xor
mov
add
and
shll
je
jp
and
leave
pop
pushl
jns
inc
cmpxchg
loope
jmp
leave
cmc
or
jle
xchg
or
xor
imul
ss
sub
fdivrl
inc
adc
mov
add
cmp
fisubrl
jmp
iret
xchg
int
out
xchg
sub
test
fistps
push
in
mov
mov
or
frstor
xchg
pop
xchg
stos
jne
xchg
dec
insl
sbb
or
add
hlt
jmp
push
fisubl
xchg
out
pop
stos
pop
je
jo
and
ficoml
call
mov
lods
mov
inc
push
xor
lret
sbb
rclb
sti
fs
out
sub
adc
xchg
inc
xlat
push
push
xchg
push
mov
in
in
inc
add
push
jp
pop
sub
stos
scas
lcall
lahf
mov
push
int
xchg
mov
popa
aad
aam
mov
dec
jle
cmp
das
pop
add
lcall
add
mov
push
scas
cmp
and
andl
pop
lret
mov
aam
push
sti
out
inc
cltd
pop
sub
stc
mov
mov
cmp
add
scas
sti
imul
call
aaa
dec
in
jne
cmp
xchg
out
ror
xchg
into
cmpsb
mov
pop
push
lahf
jmp
into
cs
xor
push
fldcw
cmpsl
int3
nop
jno
mov
mov
mov
cmpl
ret
mov
test
aam
mov
fstps
aad
daa
mov
push
jle
pushl
sbbl
insb
cmp
jns
mov
call
inc
int
gs
lahf
lcall
loope
cmp
enter
lods
fnstsw
in
sbb
insl
loope
lods
cld
cmp
ljmp
stos
xchg
push
inc
frstor
in
idivb
xchg
inc
push
mov
push
mov
pop
mov
pop
jo
loop
cmpsb
mov
mov
jnp
enter
xchg
popa
repnz
and
gs
int
add
fldcw
add
stos
jmp
lods
mov
push
jo
std
js
or
shll
mov
inc
xchg
and
cmp
pop
movsl
pop
inc
loope
fstpl
stos
cmpsl
add
inc
xor
pop
xor
xchg
cli
xorb
push
loope
pop
xchg
push
push
adc
aam
xor
mov
mov
repnz
jg
add
pop
xor
call
pushf
jno
daa
aad
out
mov
iret
pop
add
add
bound
mov
cmp
js
arpl
add
shl
mov
lods
sbb
mov
xlat
addr16
or
or
das
push
adc
cs
jb
mov
repz
aaa
or
add
pop
dec
int3
std
cmp
dec
sub
and
scas
mov
fisubrl
dec
out
mov
test
decl
and
xor
add
mov
pop
repnz
test
mov
das
cwtl
pop
scas
scas
mov
enter
fstpt
inc
cmp
push
lret
inc
test
cli
fs
leave
pop
repz
inc
push
mov
and
inc
hlt
fimuls
movsl
lcall
or
scas
xor
pushf
and
and
dec
add
into
jle
movsb
xor
dec
dec
push
outsl
mov
cs
xchg
cmp
or
out
xchg
dec
test
iret
sbb
dec
out
imul
push
mov
jg
push
pop
lret
pusha
lret
cmp
add
xor
fidivl
cmp
lret
mov
adc
or
fs
inc
bound
pop
xor
rolb
cmc
popa
cmp
fldenv
testb
inc
jb
mov
pop
pushf
xchg
pcmpgtb
and
in
jmp
xchg
mov
xor
test
inc
insl
fwait
cmp
sub
mov
test
testl
fstpl
inc
mov
fsubl
push
ret
pop
jno
push
outsl
xor
xor
stos
jg
push
push
cs
and
jp
aam
insl
in
imul
push
cli
cld
dec
in
dec
hlt
and
and
stos
sbb
dec
xor
in
pop
ds
inc
pslld
pop
int
add
xor
sbb
and
sub
mov
push
pop
into
arpl
xchg
ror
or
xchg
xchg
adc
mov
dec
push
lea
test
repz
nop
xor
mov
lret
mov
lret
in
add
add
mov
pop
popf
mov
cwtl
cmp
cld
jae
cli
popf
push
cltd
imul
sub
xchg
loopne
mov
dec
test
arpl
jmp
loop
pop
fucomp
xchg
das
int3
jno
fs
jge
sbb
lds
jbe
pop
fsubrl
xlat
xchg
jg
push
cltd
daa
push
xlat
outsb
stos
dec
dec
cmp
inc
push
dec
pop
mov
out
mov
lods
or
push
pop
push
mov
scas
mov
aad
ja
in
mov
mov
nop
mov
clc
mov
sbb
cs
adc
xor
and
pop
xor
and
out
and
daa
loop
rcrb
sub
mov
adc
and
retw
or
stc
sub
mov
adcb
xchg
mov
xor
and
test
mov
xchg
cli
dec
pop
and
xchg
cwtl
rorb
in
stos
jno
adc
outsl
and
mov
movsb
ja
stc
adc
or
outsb
sbb
jnp
dec
mov
adc
call
call
cmp
mov
xor
stos
lcall
lahf
test
aas
pop
popf
dec
sbb
pop
sbb
pop
out
repz
and
mov
jb
xlat
loope
ja
daa
aam
sub
dec
xor
aas
xor
lock
iret
rorb
jge
jmp
or
int3
fimuls
inc
push
pushl
mov
sub
sub
push
push
dec
loopne
mov
std
fstl
lahf
orb
and
sbb
imul
mov
stc
dec
mov
lcall
outsb
dec
sub
push
addr16
pop
inc
outsl
inc
fucomip
push
imul
adc
ficoml
sub
inc
pop
inc
cld
cmp
fdiv
outsl
jne
popa
test
cs
xor
dec
shlb
cmc
push
pop
aas
bound
mov
mov
lea
hlt
aas
pop
mov
cmpsb
shlb
cmp
mov
cmp
add
jne
nop
add
mov
pop
push
pop
sbb
and
adc
sti
and
hlt
mov
add
mov
fwait
lods
cltd
or
xor
inc
cmpsl
adc
arpl
mov
push
into
nop
imul
lds
out
xor
stos
mov
in
pushl
inc
sar
sahf
jg
cmp
xchg
cltd
sbb
popf
pop
in
adc
aas
mov
ret
or
scas
int
cmpsb
lods
test
idiv
jecxz
sahf
pop
push
imul
jo
push
sub
das
lea
sub
ficompl
push
xchg
popa
popl
sahf
lret
xor
mov
pop
mov
xchg
popf
cld
jb
lds
insl
call
push
cmp
std
dec
adcl
and
std
push
fwait
sbb
pop
mov
stos
cmp
mov
lea
add
loop
shl
mov
xchg
jns
inc
dec
inc
cmp
sub
sbb
sbb
cwtl
inc
in
inc
dec
not
or
add
sbb
jo
inc
fwait
out
xchg
aam
jae
push
stos
jbe
adc
sub
inc
sub
sub
test
test
push
xor
push
xlat
loop
insb
imul
outsb
pop
jne
imul
push
cmpsb
sbb
shll
mov
rcrl
cmp
pop
mov
movsb
push
fucom
sub
jno
jecxz
loopne
push
push
add
rcr
jl
test
cmp
mov
imul
xor
fsubs
ds
shlb
rolb
mov
mov
add
sub
xchg
lret
test
jnp
add
add
dec
inc
repnz
enter
arpl
ret
fiaddl
xchg
stos
xor
xchg
mov
or
mov
insl
or
stc
push
xor
int
mov
jmp
add
jl
int
mov
mov
arpl
sbb
shrb
inc
mov
push
xorps
inc
mov
sub
or
and
push
dec
jnp
popf
mov
fwait
loopne
insl
xor
mov
frstor
mov
das
sub
gs
cwtl
cmp
mov
jns
clc
adc
xchg
addr16
mov
pop
pop
pop
jno
mov
adc
adc
cwtl
outsl
js
cmp
clc
out
and
subb
push
mov
ficoms
in
jne
xchg
bts
dec
imul
pop
cmp
inc
push
cltd
movsb
sub
add
and
jle
cmpsl
pop
neg
jmp
hlt
test
and
inc
loope
fdivr
aas
scas
dec
addr16
loope
pop
dec
and
jle
or
outsl
ret
jo
adc
or
mov
jae
fcompl
adc
xor
jo
lea
movsb
mov
in
insl
sub
mov
jns
cmpsl
in
mulb
sbb
lock
sbb
pop
push
and
jns
imul
adc
sub
inc
cmpsb
neg
pushf
lds
scas
mov
shrl
xchg
test
mov
outsl
out
cmp
ret
movsl
mov
sbb
jg
pop
sub
xchg
lock
dec
mov
cld
push
push
dec
jecxz
cmp
and
repnz
pop
pop
cmpsb
xor
pushf
pusha
dec
push
xchg
call
pop
xor
sahf
and
ret
in
dec
inc
dec
push
aam
in
adc
into
inc
sub
stos
mov
adc
adc
mov
push
ja
mov
mov
lret
inc
jno
lret
sub
das
jle
xor
push
gs
outsl
xchg
inc
jns
rcll
les
mov
mov
pop
push
mov
and
sbb
ja
cmp
repz
jbe
fsub
dec
lahf
dec
imul
aas
mov
mov
pop
std
adc
fcmove
pop
stos
js
mov
dec
iret
insb
bound
ret
mov
out
cmp
in
fscale
xor
ljmp
fdivs
pop
lcall
fildll
xchg
lret
mov
enter
fimuls
jbe
sbbl
fidivrl
push
ss
es
xor
fs
dec
jp
push
outsl
mov
add
pop
pop
adc
out
mov
jne
pop
mov
pop
es
mov
rclb
adc
adc
icebp
and
push
sub
fildl
in
mov
inc
or
mov
xchg
dec
cmc
insl
mov
mov
push
movsb
in
push
mov
xor
push
rcl
ret
scas
in
mov
lcall
pop
gs
push
mov
xchg
shlb
mov
or
sahf
mov
cmp
cltd
fistl
jb
sbb
fmuls
mov
lods
xchg
fdivs
fbld
pusha
or
rolb
adc
in
shlb
lahf
xor
push
shrb
mov
iret
popa
push
cmc
pop
and
push
movsl
in
pop
adcl
cltd
jb
mov
jl
pop
mov
push
ds
mov
popa
sbb
hlt
leave
pop
xchg
lock
movsl
mov
mov
ja
in
fstpt
sub
mov
dec
mov
pop
fisttps
lret
pop
aam
push
test
iret
push
or
js
shr
xchg
cmp
fnstsw
jb
imul
ss
sbb
outsb
pop
shrb
or
lret
out
pop
fnsave
addr16
mov
adc
cmp
sbb
xorb
repnz
push
inc
push
or
cmovno
jnp
fwait
adc
adc
push
cld
xor
sbb
mov
dec
xchg
pop
mov
jne
push
or
inc
lock
mov
hlt
les
jb
or
mov
pushf
push
push
push
fldl
out
jbe
add
lock
inc
xor
cs
std
cmp
bound
movsl
ret
sbb
aaa
jecxz
mov
pop
mov
push
pop
enter
add
sbb
inc
pushf
add
mov
push
dec
inc
in
and
ljmp
outsb
push
gs
icebp
insl
add
jecxz
les
fisubl
pop
mov
lods
test
lret
and
xchg
xor
leave
add
xchg
adc
test
fldt
negb
inc
jno
push
out
repz
cltd
push
xchg
mov
outsb
loope
cmp
jne
adcb
out
mov
xchg
fadds
jg
adc
inc
xchg
loop
mov
out
popa
fbld
add
bound
popf
iret
ja
or
fldt
dec
mov
or
leave
in
pushf
push
mov
push
sbb
pop
test
adc
clc
ret
jg
pop
xchg
leave
cmpb
loope,pn
negl
aam
movsw
mov
push
and
sti
jae
dec
rclb
movb
sub
sbb
sbb
das
popf
xchg
jle
cmpsl
push
icebp
add
rcr
and
cmp
enter
fwait
lds
and
push
inc
and
xlat
push
cmp
stos
idiv
cmp
fistpl
stos
dec
jnp
xchg
cltd
outsl
mov
fstps
sbb
jmp
nop
cmpsl
mov
adc
mov
and
inc
data16
mov
and
push
int
sub
cmp
leave
xor
adc
or
insb
popa
xchg
xchg
lods
les
jbe
adc
sbb
adc
es
popa
cmp
xchg
add
push
sub
xor
sub
or
sub
filds
sub
loop
mov
fcoml
ss
bound
aas
outsb
jne
pop
stos
pop
jl
or
daa
pop
mov
fs
mov
jb
fidivrl
push
imul
cli
cltd
out
pop
xchg
jp
xchg
push
aad
jg
mov
dec
push
adc
cmpb
add
xor
data16
jmp
mov
pop
sbb
jmp
push
or
and
jbe
sub
sub
dec
loope
push
ss
subl
push
fisubrl
add
arpl
sbb
pop
ss
cmpsl
xchg
xor
inc
ret
mov
xlat
jae
mov
add
adc
cmp
out
pop
cmpsl
cmp
enter
out
rolb
cmpl
scas
dec
fdivs
out
push
cmp
and
outsl
in
movsb
test
ss
mov
adc
adc
ret
mov
mov
sbbl
hlt
adc
mov
sbb
lods
cwtl
xchg
adc
pop
add
les
cmpsb
aad
and
lahf
std
in
cmp
jbe
mov
adc
pop
mov
and
test
mov
popf
popf
jae
push
aam
dec
pop
or
ss
outsb
mov
dec
mov
popa
cmp
je
dec
cmpsl
stc
insl
mov
lcall
enter
push
cli
sbb
push
lea
ljmp
insb
mov
mov
mov
fldcw
idivb
iret
mov
jbe
jg
repnz
imul
push
out
adc
cmp
inc
and
clc
shrb
mov
lcall
adc
cld
jecxz,pt
sbb
add
mov
insl
and
ja
xchg
pushf
sbb
xchg
test
jmp
cmp
pop
jecxz
and
cmp
imul
or
pop
push
dec
xor
mov
ficoms
mov
aaa
outsl
dec
pop
clc
imulb
imulb
in
enter
xchg
jl
icebp
sub
lock
dec
and
add
insl
insb
scas
scas
jl
fisubrs
call
rorb
jp
or
bsr
mov
stc
fbstp
imulb
sti
dec
pusha
mov
in
push
sub
cmpsl
mov
mov
jmp
filds
mov
nop
fstp
adc
lret
sbb
repnz
int3
ja
mov
scas
mov
adc
dec
movl
sar
rorb
ds
mov
lahf
loopne
mov
mov
movsl
scas
and
mov
xor
mov
adc
jp
mov
jmp
stc
aas
sti
xchg
pop
scas
mov
mov
jmp
cli
xchg
cmp
push
adc
dec
mov
mov
xchg
and
addr16
out
mov
adc
xchg
pushf
lods
sbbb
in
cmp
mov
mov
lock
mov
cmp
push
adc
out
jge
movb
mov
xlat
jno
xor
sub
xchg
jge
or
cli
scas
nop
lret
rcl
imul
std
inc
ret
enter
sarl
sub
lds
clc
nop
aam
arpl
lods
ja
mov
int
mov
add
sub
push
mov
cmp
cmp
or
push
mov
mov
mov
inc
xchg
or
inc
popf
sbb
mov
mov
movsl
imul
mov
jae
andl
rorb
or
mov
sub
or
pushf
into
add
add
and
adc
dec
or
out
mov
mov
add
fldenv
jne
icebp
cli
dec
popf
lret
cmpsb
jmp
mov
scas
or
push
push
sbb
adc
jp
ljmp
mov
inc
sbb
pop
sbb
bound
out
lret
loopne
inc
leave
add
push
adc
mov
dec
mov
ret
and
shl
inc
dec
mov
xchg
loopne
subl
push
jbe
jne
and
and
dec
insl
addb
pop
aad
pop
test
es
mov
cmpsl
sbb
push
imul
jp
rorb
enter
lret
outsl
outsb
adc
adc
icebp
mov
dec
in
and
sahf
rolb
dec
xor
rorl
out
movsb
sbb
inc
cld
sarl
add
sub
inc
push
in
sub
adc
mov
out
mov
lods
jp
out
call
add
mov
fidivrl
pop
dec
sub
push
mov
fwait
test
in
xchg
imul
jge
push
ss
dec
stc
mov
imul
pop
sub
testl
push
pop
cli
jns
jb
dec
inc
xor
lock
xchg
ret
cmp
mov
ja
sub
sti
sub
clts
pop
sub
fs
je
push
cmp
insb
stos
sbb
out
rorl
pusha
lds
dec
shll
mov
cmpsb
xchg
pop
push
int
or
xor
push
flds
mov
and
scas
pop
lock
ja
fildll
repnz
xor
arpl
dec
mov
cmp
negl
std
push
xor
scas
insl
jecxz
fisubs
xchg
outsl
mov
xchg
insb
es
cmpsb
and
xchg
notb
cmp
gs
bound
mov
or
cmc
jle
mov
arpl
push
mov
rcr
inc
add
lret
pop
or
lea
das
daa
loopne
xchg
xor
xor
loop
pop
lret
add
pop
adc
mov
sub
push
dec
popf
mov
int3
in
inc
or
jns
mov
mov
outsl
dec
je
data16
cmpsl
ljmp
adc
mov
ja
lret
in
cmp
imul
sub
cmp
cmc
out
pushf
nop
out
loop
adc
xor
inc
mov
inc
jl
mov
sub
cmp
shlb
mov
insl
stc
scas
aad
jge
loopne
xlat
les
stos
mov
lea
pop
mov
and
iret
xor
cmp
xor
mov
push
mov
adc
inc
jle
out
dec
inc
fcomps
push
lret
imul
ret
pop
push
xor
fadd
arpl
rcll
xor
pop
xchg
cmovp
pop
pushf
xchg
or
xor
div
sbb
push
and
push
test
pop
xor
arpl
inc
xor
sub
push
lea
hlt
add
xor
js
cmp
sbb
imul
jecxz
adc
pusha
sub
dec
push
cmp
xchg
test
push
dec
insb
xor
push
mov
mov
jb
test
jp
mov
mov
insl
jmp
sub
lods
pop
dec
mov
dec
leave
in
cs
xchg
imul
in
fwait
lahf
add
sbb
sbb
dec
cmp
mov
and
cmp
pop
insl
leave
filds
out
inc
mov
imul
inc
mov
iret
pop
cmp
ret
popf
xchg
lret
cmpl
xchg
test
out
dec
in
loope
leave
xor
cmp
or
adc
xor
lahf
jno
aaa
aam
adc
dec
repnz
push
aad
sbb
rclb
or
outsb
ficoms
movsb
jae
cmpsl
lahf
dec
stc
or
aad
inc
scas
imul
enter
pushf
mov
lds
stos
ret
fdivl
cld
stos
in
mov
imul
fcoms
jbe
dec
ret
sbb
jae
icebp
jbe
pop
shrl
push
sbb
shl
sarl
push
sub
test
test
inc
icebp
shlb
mov
mov
add
incb
fisubrl
jge
or
sbb
das
in
orl
mov
adc
jmp
jne
dec
mov
xor
xchg
pushf
cmp
mov
clc
and
cwtl
ljmp
push
shrb
adc
mov
movsb
inc
jo
mov
addr16
rorb
add
xor
popf
jp
inc
lret
xchg
outsb
daa
int3
sbb
std
lahf
cmp
in
cli
std
xchg
mov
pop
rcl
out
or
add
and
nop
out
test
loopne
out
js
mov
fcomps
cmp
shl
mov
cmp
jne
jle
mov
in
es
repz
push
nop
inc
cmc
xor
in
inc
and
push
imul
cli
sub
cltd
inc
lock
rclb
ja
fs
mov
lea
mov
or
sbb
in
or
sub
iret
aaa
pop
and
xchg
bound
les
jl
fisubrs
test
pop
mov
pop
jecxz
aaa
push
dec
and
inc
lret
scas
test
xchg
adc
mov
mov
clc
les
adc
jle
mov
shll
ds
add
push
pop
dec
or
into
xchg
test
add
ss
sub
inc
xchg
fs
testl
push
inc
scas
shlb
inc
push
sbb
ds
in
dec
mov
js
pop
cmc
mov
cmp
add
xor
mov
loope
pushw
add
jp
cltd
outsb
outsl
popf
hlt
cmp
fidivrl
and
ud1
cmpsb
clc
or
or
cmpsb
dec
sar
cwtl
push
sub
cmp
and
add
adc
pop
jo
daa
jnp
push
xchg
dec
sahf
lret
xor
cmp
sub
nop
fidivrl
pop
insl
ret
and
outsb
xor
jne
mov
inc
mov
add
xor
test
mov
stos
rcrb
gs
mov
xor
loopne
xchg
stos
daa
daa
mov
and
imul
push
rorb
sti
rcr
mov
repz
dec
popf
inc
scas
dec
loopne
sub
popf
sbb
leave
push
and
jmp
inc
pop
add
loop
and
fs
mov
xchg
or
scas
sub
in
addr16
jp
lods
mov
push
dec
and
xchg
and
inc
adc
and
test
insl
loopne
push
popa
imul
fidivrl
arpl
jl
mov
cs
shl
push
jg
cmp
xlat
or
das
and
mov
into
cmp
in
nop
push
add
loop
ds
inc
dec
mov
jb
and
xchg
jo
in
or
sarl
js
cltd
pop
cmp
jge
jb
sbb
xlat
mov
mov
loop
lods
out
lock
jb
cmp
push
and
sti
inc
pop
push
sub
test
cmpsl
lods
push
negb
xor
sbb
xchg
sub
stos
sub
mov
nop
adc
shrb
jne
js
and
jb
sbb
loope
mov
or
mov
mov
xor
push
decl
gs
std
sub
pushf
adc
pusha
das
test
sar
sbb
jne
loope
stc
icebp
fisubrl
sbb
jbe
leave
lods
add
stc
pop
push
ds
dec
pop
inc
mov
insl
inc
pop
cmp
add
fdivs
ret
jp
shrl
test
mov
or
xchg
inc
push
mov
jmp
lods
mov
icebp
jl
js
hlt
fisubl
enter
bound
fsubp
shll
sub
addb
lock
cmp
inc
stos
out
pop
bound
popf
lea
inc
sbb
jmp
or
sub
andb
add
mov
ret
nop
mov
lock
fwait
pop
mov
xchg
inc
testb
dec
int
shrl
scas
ss
cmp
add
jae
mov
loop
jne
shrb
lock
and
testl
mov
jnp
push
mov
xchg
stc
sarb
mov
mov
rcl
fsubrp
addl
fcoms
leave
mov
xor
inc
xchg
test
fs
ret
xchg
scas
cmc
adc
sbb
or
mov
std
outsl
adc
push
movsb
pop
clc
mov
icebp
test
pop
fmuls
xlat
mov
imul
pop
dec
inc
and
imul
icebp
std
lret
fistl
or
scas
sarl
push
rcrl
xor
aam
imul
imul
pop
mov
orl
push
jecxz
insb
and
mov
lds
xor
jp
xchg
aaa
xor
jno
pop
push
mov
and
js
fsub
mov
inc
mov
xor
push
xchg
mov
or
lock
or
mov
nop
jae
mov
stos
or
stos
cld
and
jae
xor
mov
push
ss
xor
sti
mov
fwait
sbb
cmp
out
push
mov
inc
bound
lods
dec
mov
in
stc
mov
or
jl
jle
orl
jg
and
stos
lcall
xor
imul
stos
aam
cld
test
push
and
daa
sub
or
dec
jns
jle
mov
sub
mov
cmp
ret
ss
arpl
mov
ror
and
lods
outsb
fcoml
mov
ud1
iret
xchg
ret
mov
jns
ja
adc
andb
imull
push
insl
jmp
icebp
mov
sbb
push
push
lcall
iret
adc
popa
cmp
popf
call
mov
push
imul
dec
pop
push
xor
pop
lret
dec
rol
les
push
sahf
fcoml
sar
cmpsl
sbb
or
inc
ds
and
sti
xchg
jo
sub
sub
pop
xchg
in
and
pop
sbb
in
adc
sahf
inc
sahf
jge
in
sar
hlt
push
scas
jo
jge
mov
xchg
pop
jmp
add
aas
dec
pop
mov
or
dec
push
cmp
fstps
cmp
lret
in
std
mov
mov
aas
mov
sub
scas
ret
push
jl
std
leave
aad
inc
push
mov
mov
addl
cmp
add
dec
jae
outsb
fadds
lcallw
jp
mov
insl
movsl
sbb
adc
mov
leave
dec
rcll
push
inc
pop
adc
out
mov
push
movsb
mov
sub
pop
enter
sbb
dec
iret
cmp
dec
lods
and
dec
push
or
orl
push
jl
adc
enter
gs
inc
jmp
jae
pminsw
and
jp
outsl
lcall
in
mov
jle
loop
pop
push
sbb
dec
sub
xor
in
lahf
rcr
mov
imull
cmp
and
add
adc
lea
sub
jmp
fistl
roll
movsl
test
cmp
ljmp
cld
das
test
into
repz
and
das
mov
mov
mov
test
rcll
test
fldpi
cmp
das
arpl
sbb
jae
xchg
push
ljmp
scas
ja
sbb
ret
btr
pop
outsb
and
aaa
mov
movsl
pusha
mov
jbe
xor
fidivrs
testl
jbe
rcrl
in
bound
sbb
dec
mov
mull
pushf
ds
test
push
sahf
out
and
loope
inc
or
scas
ficompl
aad
add
adc
je
fsubrs
pop
mov
sarb
aam
cmc
sbb
int
and
mov
push
out
stos
ja
fdivrl
push
adcb
out
mov
and
xchg
or
fwait
cmpsb
adc
icebp
stc
or
adc
add
sbb
lret
mov
sbb
daa
add
addb
test
fidivrs
or
push
inc
cli
in
push
jmp
sbb
jae
int
ja
mov
out
cmc
jle
loop
aad
in
jae
cmpsb
lock
insb
jl
inc
mov
xlat
pop
into
mov
in
je
jmp
mov
xchg
pusha
fcmovb
sbb
insl
outsb
xchg
pop
das
sub
repnz
push
xor
in
pop
mov
jns
sbb
add
pop
jge
and
sbb
fcmovu
jbe
dec
adc
mov
cmp
lock
mull
xchg
inc
out
ret
mov
movsl
movsl
sti
inc
xchg
js
cwtl
sub
sub
sub
add
sbb
rcl
push
add
push
pop
fnstenv
jl
pop
and
cli
add
inc
sbb
repnz
test
sbb
xchg
cwtl
lock
add
int
or
xor
lret
jmp
flds
inc
rclb
cltd
sbb
pop
mov
and
call
stc
fistpll
test
lock
les
clc
mov
gs
out
push
cmp
jle
bound
hlt
dec
inc
and
dec
orl
xor
pop
inc
cli
inc
call
or
call
cltd
jns
sub
icebp
stos
inc
out
xor
sti
mov
push
and
bnd
aaa
lds
enter
in
mov
insl
clc
lret
cwtl
mov
jl
lds
xchg
lahf
push
outsl
mov
int
ljmp
sub
pop
lret
xchg
jae
fnstenv
out
lret
mov
dec
xor
mov
jp
jle
sti
mov
lods
add
mov
push
sbb
icebp
push
scas
inc
push
sub
adc
sbb
test
cwtl
sti
mov
and
or
mov
sub
rcrl
sub
inc
inc
mov
or
cmp
push
fwait
jb
mov
out
sbb
fdivr
mov
punpckhwd
mov
push
mov
test
shlb
das
fsubp
sub
addr16
rolb
push
mov
dec
and
xchg
inc
lcall
shrl
addr16
xchg
xchg
mov
sub
aaa
cli
mov
push
dec
insl
popl
jae
cmpsb
lods
fimuls
pushf
jae
lret
mov
lods
dec
cli
clc
inc
jge
flds
repz
push
dec
xor
cmp
mov
sbbl
mov
sar
inc
xor
xchg
push
xor
mov
icebp
rcll
sub
push
fisttps
mov
mov
mov
cmp
outsl
imul
in
clc
dec
jle
out
pop
das
repnz
outsb
je
rcll
inc
pop
out
pop
push
xor
in
cltd
push
jns
test
mov
jo
or
cld
xor
imulb
das
add
sub
shll
aaa
or
scas
sbb
push
xorl
clc
mov
jne
xchg
loope
dec
insl
std
imul
adc
int
lahf
adc
dec
pop
mov
jo
sub
inc
dec
cmpsl
into
xor
push
shl
or
gs
mov
xor
test
in
xor
and
cmp
leave
fnstsw
js
test
xchg
aas
cmp
enter
leave
gs
sbb
sub
dec
pop
movsl
mov
inc
mov
jb
cmp
loop
out
mov
jno
mov
mov
out
out
cltd
rclb
mov
mov
pop
xchg
out
stos
inc
jecxz
out
data16
push
imul
push
mov
call
dec
xchg
xchg
xacquire
roll
push
xchg
inc
pop
mov
mov
inc
dec
sub
mov
ret
mov
push
push
cld
rolb
popf
ja
loop
ja
dec
lahf
mov
jnp
test
cmp
xchg
in
jno
lock
mov
enter
or
push
pop
sub
pop
mov
push
je
mov
sbb
nop
sbb
push
dec
sbb
lret
mov
pop
jbe
add
insb
mov
inc
adc
ret
fcoml
out
dec
cmp
xchg
or
push
sahf
push
std
inc
sbb
jnp
adc
mov
popf
aas
in
sub
in
push
int
and
pop
ds
and
bound
jp
jno
or
inc
outsb
in
insl
jge
adc
fldt
test
pop
les
adc
push
rcrl
push
jp
orb
mov
shrl
scas
int
jo
jle
stc
cmp
cmp
mov
pop
and
and
sub
into
aad
sbb
ret
popf
stc
scas
out
mov
popa
popf
out
lcall
lea
mov
andb
push
pop
lahf
fsubrs
add
mov
sub
jge
mov
repz
pop
jo
dec
sub
xchg
std
fildl
js
xchg
xchg
adc
add
ror
out
jg
lds
hlt
sbb
popa
cmp
inc
fsubrp
out
sbb
or
add
rorl
cmpsl
mov
dec
nop
cltd
cmc
dec
in
lcall
addr16
push
sub
out
inc
mov
mov
in
dec
mov
adc
mul
in
ja
xchg
sub
xchg
or
js
inc
insl
stos
test
fildl
iret
out
gs
and
clc
sbb
neg
hlt
in
jnp
mov
fwait
inc
adc
and
mov
lea
icebp
adc
fsts
int3
dec
xchg
mov
push
mov
push
mov
cmp
filds
mov
inc
cltd
mov
cwtl
lock
jge
mov
enter
rcll
xchg
scas
into
jmp
inc
cmpsl
pop
stos
scas
jecxz
mov
aaa
xor
aad
fisttpl
int
sbbb
ror
notl
inc
xchg
mov
mov
mov
fnstsw
ficoml
aaa
pop
or
cmc
push
loop
scas
aaa
add
push
rclb
hlt
in
loope
sti
or
nop
or
push
pop
adc
sahf
push
jp
jg
adc
jnp
inc
add
push
inc
mov
sbb
mov
rclb
lods
das
orl
xor
lahf
inc
lret
js
xchg
aad
rep
xor
and
mov
in
fcomps
cmpb
add
lock
and
out
mov
inc
mov
gs
imul
jb
out
sbb
mov
sbb
addr16
pop
jo
dec
shl
movsb
dec
call
test
es
mov
leave
mov
mov
dec
repz
clc
stos
movsb
scas
out
mov
call
inc
into
push
addl
xchg
dec
movsb
out
and
jbe
pop
int
jo
xorl
mov
xor
js
dec
xor
insl
add
inc
lods
inc
aaa
cltd
pop
dec
and
aaa
cmp
inc
orl
inc
mov
sub
shll
movsl
das
iret
add
mov
or
sbb
out
rcrb
push
test
add
push
mov
stos
xchg
incb
aad
popf
pop
xor
pop
jb
rorb
fstps
inc
ret
scas
inc
aas
add
popf
int3
fisttps
add
and
loop
aas
mov
or
push
fwait
cwtl
int
xor
fwait
mov
sub
lods
add
mov
jb
pop
jnp
add
add
ljmp
sub
mov
mov
in
mov
or
lock
or
jp
dec
sbb
cmp
inc
inc
adc
mov
push
xchg
clc
inc
xchg
push
push
mov
popf
sub
lahf
rclb
jg
cmp
mov
push
in
adc
call
ljmp
pop
push
cmp
sbb
pusha
fmuls
add
mov
mov
daa
mov
loopne
and
nop
rclb
cmpsl
mov
push
and
hlt
rolb
and
ja
pop
lods
aaa
mov
pusha
mov
in
sub
pop
jbe
fcomi
mov
scas
sub
push
sbb
fisubl
cmp
lret
hlt
or
cld
shrl
xchg
jns
mov
das
icebp
jecxz
lds
and
int
cmpsl
pushf
inc
in
push
add
pop
dec
cld
push
jno
push
frstor
bound
test
test
loopne
push
lods
xchg
in
dec
aam
jl
lock
inc
and
data16
in
sub
lcall
xor
inc
fidivrs
cli
fld
mov
jmp
rclb
and
and
and
pop
xor
mov
mov
stos
mov
fisttps
and
rclb
popf
jecxz
adc
adc
fstps
loop
add
cltd
adc
jp
in
mov
std
xlat
lret
mov
sub
scas
cmpsl
pusha
lahf
sbb
jo
push
mov
pop
dec
xchg
lret
mov
rcrb
es
jg
test
stc
rclb
mov
pop
jge
hlt
mov
and
jge
mov
mov
push
mov
test
inc
movsb
andb
mov
repnz
fs
sub
lds
xor
sbb
inc
fdiv
je
into
dec
sub
mov
pop
cmp
push
std
pop
imul
adc
test
and
adc
ret
adc
cmp
mov
push
and
push
mov
and
leave
mov
push
test
mov
push
ljmp
mov
jns,pn
imulb
sarb
loop
ret
out
push
cli
mov
loop
ljmp
loop
aam
jge
xchg
int
jb
loop
add
pop
insb
mov
push
pop
mov
and
out
push
sbb
das
jmp
repz
jle
fcomp
cvttps2pi
jmp
and
xchg
je
scas
ljmp
pop
mov
push
fs
adc
push
cmpsb
lea
divb
cltd
inc
addl
lahf
cmpsb
adc
push
mov
pop
pop
test
mov
cmp
fsubs
lea
pop
push
test
jle
jl
repz
movsl
lret
insl
sub
leave
rorl
cmp
mov
jmp
pop
ds
push
cmp
jge
jge
ja
and
cli
ds
gs
xor
cmp
xor
pop
mov
adc
inc
shr
idivl
lea
push
jle
xor
sub
push
jle
adc
mov
insl
jnp
sbb
sub
push
cld
add
add
faddp
stos
fiaddl
int
dec
leave
out
orl
xchg
jg
addr16
or
xchg
sbb
mov
addr16
mov
jp
int
cmp
mov
xchg
roll
test
jne
stos
je
sbb
adc
xchg
ret
xor
rcll
mov
pop
adc
jo
push
popf
fists
mov
je
outsb
je
mov
cwtl
mov
je
mov
mov
inc
gs
push
lret
divb
je
pop
clc
fmuls
addb
jmp
pop
iret
mov
test
lods
lahf
out
notl
mov
jnp
clc
stos
test
mov
mov
dec
ficoms
fnsave
jl
cmpsl
adc
rcll
out
lcall
popf
or
setbe
mov
loope
faddl
inc
fiaddl
shlb
add
ja
subb
and
xchg
xor
test
lahf
jno
cmpsl
inc
ret
or
pop
and
fisttpll
popa
cmp
pop
inc
cmp
inc
addl
cmpb
sbb
push
mov
cmp
add
into
pop
popa
add
inc
mov
pop
mov
aas
jl
mov
mov
cmpsl
xchg
mov
popf
das
mov
cmc
push
inc
pop
ret
adc
ja
gs
stos
jnp
push
adc
addl
cmpsb
arpl
sti
xchg
stos
cwtl
cmp
out
cmp
ret
xor
subl
js
adc
sub
pop
in
and
out
jae
sub
test
mov
out
add
jge
movsl
or
aam
jo
inc
loop
rorl
sbbl
mov
out
push
inc
sahf
lret
dec
mov
test
shrb
cmp
sub
repz
lea
fldl
inc
es
jnp
xlat
mov
xor
nop
sahf
pop
jl
push
mov
aas
mov
fmuls
sbb
push
or
fsubr
dec
push
xor
cmp
xor
sbb
in
call
in
xor
push
sub
sub
aaa
pop
aas
push
flds
repz
mov
ljmp
pop
xor
imul
sbb
dec
pop
ret
clc
inc
imul
inc
into
leave
cmp
dec
ljmp
lods
jbe
aas
push
push
sub
cmpsb
repnz
dec
jmp
pop
outsb
sti
ficoms
sub
or
testl
iret
popl
mov
inc
pop
out
std
rorl
or
in
ds
pop
add
xchg
dec
push
ja
clc
cmp
stos
or
stos
mov
dec
and
cs
fmul
loopne
outsl
testb
shll
lahf
cmp
xor
fadd
cmp
mov
push
mov
les
cmp
sbb
orb
gs
add
mov
xchg
in
loope
mov
pop
jb
jp
cs
mov
and
push
or
sub
jl
lret
es
jnp
mov
adc
mov
push
cmc
ret
xchg
ljmp
push
jp
mov
adc
pop
lods
pop
lods
lods
sti
sub
mov
jb
or
ret
and
lahf
scas
or
fbld
push
int3
and
pop
pop
push
inc
arpl
cmp
and
sti
pop
or
jo
sbb
cmp
cmpsl
ss
pop
in
push
filds
clc
popf
xchg
test
adc
test
dec
push
mov
cltd
lods
fsubrl
dec
xchg
xchg
mov
popa
clc
aas
mov
nop
insl
mov
mov
fs
mov
out
push
inc
sti
dec
xor
icebp
xchg
fcompp
xchg
cmp
fimuls
mov
cmp
cmc
das
pop
cltd
jae
xor
imull
add
xchg
test
push
mov
divb
and
outsb
jge
mov
les
and
ret
fnsave
daa
ja
ret
insb
in
int
inc
sahf
and
popa
inc
cmp
das
mov
inc
gs
inc
pop
cwtl
push
push
sti
pop
data16
sbb
cli
mov
rolb
icebp
push
xchg
and
cmp
jge
in
or
pop
sub
cmpsb
scas
mov
lea
xchg
adc
in
mov
xchg
adc
inc
push
pop
out
xor
mov
sarl
negb
scas
insl
cld
outsb
loope
sarb
arpl
test
mov
movsb
push
jp
pop
jl
mov
outsl
push
imul
bound
shll
std
loop
fistpl
lds
pop
sbb
cltd
dec
adc
aam
pop
adcl
xor
xor
push
and
pop
xchg
and
xchg
sbb
int
ss
insl
mov
mov
test
jo
or
mov
push
dec
push
xchg
jne
les
push
sub
jns
inc
aas
xor
std
sbb
adc
or
call
ds
adc
cmp
mov
test
les
sbb
sti
les
fmull
pop
or
cmp
loopne
mov
mov
adc
mov
jp
sub
pop
cli
jno
jle
sbb
hlt
add
gs
mov
shrl
adc
mov
mov
aaa
xchg
xor
jnp
rorl
xlat
mov
and
pop
dec
pop
mov
push
add
in
dec
xor
lock
mov
dec
cmp
sbb
xor
sahf
lahf
dec
jecxz
mov
insl
inc
dec
emms
ss
jno
rorb
pop
or
nop
out
aam
std
ljmp
jge
mov
loop
nop
movsl
clc
pushf
notl
mov
iret
ds
jbe
rorl
pop
xor
xchg
adc
push
aas
subl
push
jae
mov
inc
std
decb
adc
mov
dec
or
mov
or
enter
jne
and
insl
ss
arpl
scas
imul
cs
adc
adc
addl
push
push
in
aam
sti
cmpsb
bound
mov
add
mov
out
push
adc
mov
scas
fcoms
lods
int
lahf
or
xchg
or
xor
xchg
mov
add
shlb
mov
cwtl
or
in
and
sub
and
fadd
imul
sub
loopne
testl
cmp
xadd
xor
dec
fcompl
push
jg
adcl
ja
mov
or
into
pop
xchg
aaa
aas
sbb
xor
cmp
lea
push
mov
jle
cmp
xor
enter
testb
push
rcr
or
rcl
repz
loope
in
xchg
or
or
mov
stos
test
out
stos
aam
xchg
sub
decl
test
cmpsl
shrb
lret
push
arpl
sbb
test
xchg
mov
stos
xor
sti
roll
std
in
loop
shrl
loop
or
sbb
jb
cmp
sub
jmp
ret
push
mov
les
cwtl
pusha
push
add
mov
sti
cld
push
insl
mov
push
hlt
push
fsubrp
xchg
inc
sub
push
ss
inc
in
repz
pop
and
repz
jl
sbb
cmp
add
and
lds
bound
loopne
mov
or
add
cli
sti
or
jo
mov
dec
mov
cmp
jb
and
jmp
mov
mov
or
push
sub
cmp
and
xorl
test
arpl
jbe
push
sub
out
add
push
in
inc
fiadds
inc
lcall
loope
dec
jbe
rolb
dec
shl
jne
cmp
stos
push
test
shl
movsl
aaa
fs
pop
cltd
xchg
and
inc
pop
mov
and
loope
dec
xor
dec
xor
xchg
push
aaa
cwtl
nop
push
add
roll
xlat
mov
push
pop
pusha
sbb
int3
stos
sbb
jle
xor
loope
and
mov
add
cmpsb
pushf
shrb
dec
jb
ret
mov
loope
pop
testl
dec
inc
xor
aas
movsb
mov
dec
mov
xchg
jl
push
jg
or
leave
sbb
pop
clc
sub
movsl
jecxz
lcall
pop
sub
je
mov
insl
xchg
fbstp
and
push
mov
push
sub
mov
rcrb
xchg
cmp
test
add
sub
pop
das
mov
ds
frstor
clc
adc
and
ffreep
les
lock
aam
loop
pop
jns
jnp
xor
jb
data16
fucomp
outsl
jecxz
push
arpl
sarb
mov
dec
xchg
test
idivb
lret
xor
sbb
add
pop
xchg
xchg
dec
cwtl
negl
movsb
scas
adc
clc
or
test
ljmp
xchg
pop
mov
fwait
std
jb
sbb
jo
bound
arpl
into
aad
ds
mov
dec
movsl
mov
testb
pop
jne
mov
outsb
aaa
adc
inc
arpl
adc
jecxz
add
pop
mov
cld
ljmp
ds
pop
xchg
xchg
ss
testl
dec
cltd
jb
jne
adc
cli
repz
les
jae
mov
fs
rcr
add
add
js
add
jne
cmp
or
xchg
filds
sbb
movsb
mov
push
and
shlb
aam
jnp
push
in
mov
cmp
mov
lea
pop
mov
cmc
pop
mov
push
fnsave
mov
inc
out
jp
ss
pop
push
adcl
pop
inc
jmp
jb
or
mov
mov
xor
or
xor
out
mov
cld
pop
repz
jne
jbe
es
cld
in
stc
jp
and
insb
mov
fmull
movsl
xor
xchg
outsb
sbb
mov
sbb
inc
aas
ljmp
outsl
jg
inc
les
sub
js
aaa
push
jmp
xor
xor
pop
adc
xor
rorl
pop
in
rclb
mov
cmp
mov
pop
add
push
popf
lea
test
lret
sahf
push
xchg
push
sub
movsl
insb
sub
loope
fwait
mov
movsb
add
shl
add
dec
add
push
int3
sbb
insl
mov
adc
mov
ret
arpl
les
out
xlat
sbb
push
sbb
mov
cmp
lahf
popf
sarb
push
xor
test
or
and
movsb
push
lcall
mov
cmp
inc
pop
scas
xchg
test
mov
repnz
test
aas
sbb
fsubrs
popf
push
cltd
out
loope
add
mov
adc
movups
xor
adc
call
ja
or
stc
xchg
sub
test
adc
loope
and
pop
stos
shlb
sbb
mov
sbb
clc
sbb
mov
add
fwait
imull
cmpsb
xchg
fidivs
fpatan
mov
mov
push
mov
cmp
icebp
inc
lods
inc
mov
sbb
xchg
into
aaa
push
sub
lods
jbe
stos
xlat
mov
movsb
pop
jbe
in
lret
in
jne
pop
sbb
pop
jbe
push
jns
cmp
fimuls
cmp
fwait
sub
inc
sahf
aaa
aas
outsb
lret
pop
adc
xor
add
mov
inc
sbb
xchg
mov
mov
jbe
and
inc
stos
fildl
mov
xchg
scas
sbb
subb
jne
testl
adc
push
arpl
icebp
stos
xorl
add
andl
push
lea
insb
cmc
repz
js
fs
mov
push
stc
sti
daa
mov
and
dec
adc
sti
sub
xlat
fwait
pop
pop
push
insb
jp
cmp
cld
mov
dec
dec
jno
outsl
icebp
xchg
lret
test
sti
sbb
mov
scas
das
lods
sarb
jmp
jns
bound
cmp
sbb
push
fwait
jnp
fs
mov
sub
lret
daa
jecxz
shr
daa
inc
stc
mov
cmp
adc
xor
jno
test
jg
bt
inc
adc
dec
outsb
imul
test
test
mov
xor
push
jp
fs
int3
call
mov
mov
clc
xor
loope
xchg
xorl
fsubrl
cmp
fs
fcomps
pop
add
adc
xor
stc
clc
jo
roll
mov
addr16
mov
ror
inc
scas
cli
sbb
pushf
mov
pop
xor
mov
xor
sbb
icebp
pop
mov
push
rcrb
jp
xchg
into
cmp
data16
fbld
ja
insb
mov
out
and
dec
xlat
scas
inc
inc
sub
aaa
sti
dec
insb
jecxz
mov
and
into
xor
lea
or
or
lahf
mov
out
add
lcall
sub
in
adc
js
sbb
in
sub
fcomi
cmp
out
mov
js
repnz
pop
pushf
mov
or
lock
push
fnstcw
push
stos
and
iret
jmp
cmp
in
adc
shll
shrb
xor
cmp
xor
dec
out
mov
inc
pop
fwait
jle
xchg
js
mov
sbb
iret
fwait
jb
scas
movsl
or
negl
in
mov
cmpsb
inc
inc
sub
and
jnp
mov
mov
fnsave
enter
aas
andl
inc
add
pop
mov
lcall
cmp
add
jns
cmp
lcall
jg
cltd
jae
daa
sub
sti
lea
dec
cmp
test
sbb
jne
loop
and
add
pop
loop
subb
cs
popa
in
push
sar
ss
sub
inc
push
dec
jmp
cmp
mov
int
adc
movlps
add
push
ffree
inc
insb
add
xor
in
xchg
sysret
mov
adc
cmpsb
cwtl
es
lcall
loope
lret
xor
adc
inc
popa
test
push
pop
sbb
out
jno
mov
inc
jge
lock
mov
mov
lea
dec
sub
popf
jg
cld
sbb
test
push
xchg
gs
jbe
fisttpl
fdivrl
int
jne
icebp
sub
jns
cmp
ret
loop
out
fildll
stos
xchg
cmp
int
mov
push
or
movsb
aaa
push
out
pop
loopne
popf
mov
push
and
call
mov
jae
out
adc
ret
xor
push
or
lret
movsl
popa
or
fldenv
mov
shl
or
pop
mov
push
push
inc
pusha
decl
dec
push
lret
shlb
adc
daa
cli
pusha
push
repz
daa
in
dec
inc
sahf
fs
adc
sbb
lret
xor
aam
fcomip
in
xchg
aam
mov
repz
ret
sbb
cmp
sub
aad
shll
push
aad
mov
test
mov
xor
movsl
add
hlt
push
jecxz
adc
jecxz
aaa
aam
lods
push
inc
int3
or
outsb
insl
shlb
inc
pop
mov
sbb
out
dec
dec
jg
movsb
std
push
cmp
mov
sub
outsl
mov
lock
pushf
test
ret
fwait
pop
pop
lcall
xchg
aam
out
sbb
push
sbb
push
movsb
cmp
mov
sbb
pushf
inc
cltd
addr16
int
out
in
jle
ret
push
aaa
jo
lahf
cmp
dec
or
repz
inc
pop
lret
cmp
cmp
sub
xchg
fdiv
inc
mov
int
sub
lret
xor
push
mov
jp
repz
jne
xchg
sbb
sahf
push
dec
push
aas
les
xor
cmp
jge
pop
and
in
sub
negl
in
imul
sbb
add
ss
cld
xorb
xor
notb
jmp
mov
cli
inc
mov
in
add
aas
mov
inc
into
cmp
popf
lock
mov
xchg
mov
aas
cmp
add
andb
lods
adc
fdivr
shr
adc
pusha
hlt
inc
fs
hlt
dec
xor
insl
nop
cld
test
sub
test
imul
test
in
pop
rorb
push
jns
sbb
in
inc
je
mov
test
aam
push
loope
pusha
xchg
adc
adc
jnp
popf
jecxz
push
lret
popf
addr16
movb
add
cmp
movsl
loop
jmp
mov
mov
add
test
sub
sub
or
mov
cwtl
dec
sbb
and
and
cmpb
jmp
xchg
dec
test
call
mov
mov
cld
pushf
adc
icebp
dec
in
addr16
andl
nop
push
mov
in
mov
xor
lds
pop
sub
call
jo
movsb
lods
ficoms
std
mov
les
inc
aam
cs
and
push
xchg
in
out
mov
sub
add
in
and
xor
mov
or
inc
mov
pop
mov
jl
cli
aaa
scas
xchg
pop
or
nop
jae
xchg
fnstsw
pop
insb
adc
xchg
pop
icebp
or
clc
fstl
imul
mov
mov
scas
mov
mov
xor
pop
cwtl
mov
clc
xor
or
mov
cli
cs
push
dec
xlat
test
lret
jae
sub
and
sbb
xchg
adc
andb
adc
adc
xchg
aas
mov
xor
icebp
arpl
fsubr
neg
push
sub
or
cltd
dec
rolb
out
sub
push
push
scas
ljmp
outsl
mov
stos
lock
loopne
sub
jne
sub
mov
pop
lods
adc
mov
fildl
cmp
pop
and
mov
mov
or
rcrl
mov
jae
push
mov
ret
daa
outsb
inc
add
inc
jecxz
leave
pop
int3
in
adc
das
sub
test
or
mov
cmc
adc
mov
cmp
sub
xchg
or
xchg
add
mov
adc
push
mov
frstor
xor
fnstsw
pop
xor
lock
into
cmp
xchg
nop
sbb
in
inc
js
mov
xor
xor
ss
xchg
leave
fnstcw
add
cmp
add
jge
inc
arpl
jg
repnz
idivl
or
inc
inc
into
xchg
jne
dec
and
inc
push
jge
dec
icebp
sub
push
cmp
in
xchg
push
fdivl
fs
push
and
cmc
inc
ret
push
xorl
mov
push
jp
aas
aad
push
mov
pushf
cld
push
cmp
cs
mov
mov
push
sub
or
not
lds
stc
inc
pop
es
clc
cmp
adc
jge
push
xchg
push
test
jno
adc
sbb
out
outsl
movsl
rclb
pop
xchg
push
aas
movsb
lahf
mov
adc
jmp
dec
add
enter
add
fisubrl
popa
repz
les
dec
rcr
ja
gs
imul
mov
aam
out
dec
or
fdivrl
pusha
cld
or
repnz
imul
lods
aaa
push
ret
inc
add
enter
ret
enter
mov
push
push
mov
xchg
stos
xlat
stos
mov
je
ret
fistps
pop
pop
push
in
sbb
outsl
dec
fisubs
xor
adc
mov
mov
cmp
dec
pop
jae
dec
cs
fadd
cmp
loop
push
mov
mov
sub
sahf
cmpsb
call
clc
push
test
and
mov
aam
xor
cmp
and
push
je
cmpsb
mov
dec
dec
sbb
fs
mov
iret
insb
xor
pop
push
clc
or
in
or
dec
jae
mov
lods
sbb
mov
rcll
stc
enter
fsubl
xchg
lret
mov
and
push
inc
jbe
and
add
mov
out
mov
sti
loopne
cmp
or
rcr
cld
flds
adc
insl
xchg
in
and
sub
jbe
dec
sbb
sti
ret
cli
daa
insl
jmp
jb
scas
adc
xchg
mov
inc
xor
mov
and
and
hlt
ret
addr16
adc
xchg
sbbl
sbb
mov
inc
inc
addl
fsubl
dec
jae
mov
addr16
add
xchg
dec
test
and
fs
mov
jno
mov
das
fbld
sbb
jne
push
mov
mov
sub
out
orl
sahf
inc
stos
cli
ds
insb
xchg
imull
dec
iret
sbb
movsl
add
xor
gs
rol
inc
mov
xchg
gs
js
inc
imul
out
jp
stos
push
sbb
mov
dec
xlat
inc
sbb
sbb
lcall
xchg
mov
repnz
addr16
pop
cs
test
pop
mov
ficoml
mov
lods
int3
xchg
clc
mov
xchg
dec
lods
push
fadds
std
loope
call
push
in
lock
add
jb
and
xchg
out
adc
sti
xor
mov
loop
ds
shlb
int3
testb
lods
repnz
jmp
adc
ret
fists
mov
insb
punpckhdq
das
shlb
or
out
and
mov
jo
sbb
arpl
inc
sbb
pop
mov
scas
add
lock
and
lret
cmp
pop
scas
test
sbb
pop
mov
jb
xor
ret
arpl
jge
mov
ret
jbe
into
adc
or
xchg
cmp
movsl
adc
data16
xchg
lds
inc
xor
jns
out
loop
out
xchg
mov
dec
cltd
insb
js
call
add
and
inc
outsl
inc
mov
adc
sbb
jb
mov
imul
push
pop
mov
fdivrp
shl
int3
test
and
popa
cltd
mov
add
and
cmp
jmp
nop
dec
icebp
stos
ds
or
pop
lods
jecxz
fidivs
mov
or
call
leave
pushf
pop
lret
incl
into
insb
mov
es
and
jb
dec
sub
pop
jne
jmp
loope
add
test
sbb
hlt
jnp
in
fnsave
loopne
ja
dec
inc
icebp
sub
mov
sarl
es
and
sub
mov
xor
add
mov
mov
jne
rorl
sub
adc
xor
in
imul
and
out
pop
pop
sbb
xchg
sub
sub
mov
data16
mov
loope
cmp
and
pop
sbb
imul
cmpsl
iret
insb
adc
js
repnz
into
pop
pop
gs
inc
insl
sti
sub
jge
inc
cmp
mov
call
call
and
pop
fwait
and
add
in
adc
fwait
das
andb
mulb
insb
mov
inc
andb
pop
loopne
sub
cmpsb
mull
icebp
mov
mov
push
jmp
push
push
pop
aad
es
cmp
testb
or
jg
into
stc
push
cmpsb
ret
or
lock
nop
adc
fs
pushfw
loop
jmp
xor
or
mov
cwtl
mov
cs
aas
sbb
cmpsb
sub
je
stos
bound
mov
fsubr
sahf
xlat
or
add
stos
rolb
lods
mov
ja
inc
sub
popa
fidivl
out
lds
in
in
jne
xlat
aas
sbb
repz
and
stos
icebp
adc
out
gs
shl
jne
adc
out
test
lahf
into
out
pop
psubb
inc
fmull
out
xchg
jns
sbb
adc
mov
into
lods
cmc
pusha
rcl
outsl
sbb
dec
sar
imul
jne
or
pop
dec
add
sti
inc
xor
mov
pop
mov
insb
xor
cmc
sbb
sti
pop
add
xor
jns
lret
xor
jecxz
xchg
std
inc
or
test
xor
cmp
mov
sar
gs
sub
adc
loopne
push
or
jmp
cmc
call
sub
stos
sbb
dec
mov
add
fxch
fisttpl
test
sarl
mov
jbe
popa
mov
pop
and
fstpl
xlat
je
xchg
mov
out
jge
repz
or
xchg
in
add
fimuls
int
dec
jl
adc
das
pop
loope
sahf
add
enter
subb
lods
mov
mov
sahf
adc
or
add
mov
jle
push
loopne
lea
xor
movsb
das
pop
ds
ret
mov
int
pop
push
adc
pop
or
mov
dec
ficompl
jmp
inc
cwtl
addb
fdiv
idivl
loope
cmc
dec
cmp
dec
jecxz
adc
in
test
and
dec
push
jp
lds
cmp
ljmp
pop
fistpl
test
loopne
in
imul
xor
aaa
add
xor
mov
push
jp
pusha
adc
mov
mov
push
pop
sbb
out
pop
clc
sbb
pushf
inc
inc
in
push
add
lret
jg
clc
mov
orb
pop
movb
cld
dec
dec
xlat
sub
xor
mov
popl
mov
iret
int
ljmp
sbb
jle
in
jecxz
push
and
pushf
xor
push
add
push
xor
gs
jns
je
fmuls
ljmp
push
mov
mov
stc
je
jecxz
lods
xchg
andl
and
mov
jle
ss
sti
rcrb
jmp
push
cmp
add
dec
sub
and
scas
hlt
add
fimuls
inc
lods
inc
pop
enter
dec
std
sbb
sbb
cmp
inc
aad
inc
xchg
lods
insl
cs
pop
popf
push
xchg
sbb
push
xchg
inc
adc
push
inc
push
push
cwtl
jb
adcl
les
mov
int3
xchg
in
adc
rol
lods
xlat
and
xor
imul
and
jge
scas
jmp
sahf
testb
adc
int3
cmp
inc
or
hlt
inc
lcall
mov
imul
pop
leave
sar
outsb
or
hlt
mov
fadds
add
or
xor
mov
cmp
add
jle
mov
adc
pop
mov
add
sub
mov
insb
ljmp
js
icebp
test
pop
pop
jge
movsb
fucomi
aaa
scas
cmp
and
hlt
jp
cli
stos
out
inc
test
test
and
imul
addr16
xor
mov
fs
pop
sub
jl
mov
aad
sub
je
mov
dec
sbb
lock
ljmp
or
mov
aaa
jo
lods
cmpsl
and
add
mov
fwait
mov
mov
stos
sbb
addr16
jne
cmp
xor
rcrl
inc
pop
mov
aad
outsb
dec
push
jns
stc
test
das
mov
shll
lds
xchg
dec
mov
and
sbb
inc
xchg
pop
idiv
imul
movsl
pop
push
mov
and
clc
add
enter
out
nop
mov
mov
clc
ljmp
sahf
sbb
ficoml
jb
cmc
mov
add
lock
in
jecxz
sbb
ljmp
imul
jb
pop
mov
or
mov
es
mov
dec
mov
mov
pop
fcmovnb
add
sub
sub
inc
dec
jae
ret
clc
mov
movsl
cli
xor
jo
sub
xchg
push
mov
or
aaa
xchg
inc
cmp
ja
sub
adc
rorl
mov
push
inc
push
scas
dec
inc
cmp
stos
imul
loop
bound
jle
aad
jmp
and
lock
data16
dec
mov
mov
fdivp
and
and
sahf
inc
or
add
lods
cmp
jne
in
enter
mov
jge
mov
fildll
mov
js
mov
add
add
mov
xor
shll
add
addb
sbb
or
popf
xchg
mov
mov
lock
jno
or
sti
addr16
xor
pop
cmc
in
jnp
mov
testb
xor
inc
or
xchg
xor
cltd
push
jecxz
dec
cmp
jg
mov
mov
mov
hlt
outsl
and
mov
add
adc
test
jl
push
sbb
jle
loopne
dec
jae
dec
jno
das
sahf
mov
in
lock
inc
mov
jo
add
outsl
daa
aam
popf
sbb
sbb
aaa
in
inc
adc
inc
dec
imul
ja
int3
mov
movsb
xor
movsb
mov
xchg
push
out
jo
js
inc
sbb
push
pop
data16
js
addb
lods
adc
fs
test
pop
and
mov
xchg
fidivrl
insl
pop
push
movsl
jbe
aas
fistps
cmp
dec
xchg
dec
xor
push
repz
mov
lret
insl
cli
adc
mov
dec
mov
insl
ss
in
mov
push
dec
jb
sub
call
add
pop
ss
nop
adc
ret
sbb
pushf
xor
dec
mov
lods
sub
xor
int
or
les
ja
cmp
sub
mov
out
shrl
xor
sub
pop
cmp
cld
jae,pt
xor
add
je
adc
cwtl
lahf
movsb
shrb
adcl
xchg
jb
mov
jmp
insl
mov
mov
or
sbb
int3
cld
ljmp
js
shll
sbb
popa
jb
fnstcw
jnp
mov
and
mulb
imul
push
inc
pusha
xchg
mov
sub
push
negb
push
cmp
stc
jp
adc
inc
movsb
dec
sbb
loope
jg
xor
sbb
leave
mov
mov
and
xchg
mov
call
out
lock
cs
or
push
adc
into
mov
mov
and
fcmovne
stos
push
cmpsb
add
add
sbb
pop
push
mov
xor
mov
ret
push
fdivrs
ret
test
cmp
pop
in
data16
inc
int
cs
imul
xlat
dec
outsb
adc
das
mov
adc
out
dec
cld
jnp
repz
out
scas
jecxz
inc
adc
xor
ffreep
push
jmp
xor
iret
push
inc
jae
dec
lds
cmp
es
or
xchg
sbb
aaa
inc
loop
dec
fildll
nop
ljmp
pop
out
or
lock
jb
or
rcl
test
cmpsb
inc
sti
les
cltd
xchg
imul
les
popa
pop
loop
jno,pn
outsb
popa
or
mov
cmpsb
xchg
mov
aas
sbb
xor
aad
mov
pop
fidivl
in
inc
jnp
out
sbb
xchg
mov
dec
push
repz
sbb
dec
xor
cs
jecxz
pop
and
lea
or
pop
adc
push
pop
xor
inc
and
dec
xor
scas
mov
pop
xor
mov
mov
jae
mov
and
xor
mov
sub
xor
mov
daa
or
add
xchg
jne
jae
inc
pop
aam
adc
dec
mov
jnp
cvtsi2sdl
mov
or
sub
stc
mov
inc
xchg
arpl
movsl
gs
cmc
adc
ja
add
jb
adc
jge
fidivrl
mov
shrb
leave
cld
mov
inc
insl
rcl
sub
mov
adc
pop
push
add
mov
mov
and
jg
cmp
hlt
out
jle
inc
xlat
fidivrl
rcrb
fwait
shlb
or
pop
dec
push
stc
repz
pop
popf
pop
push
adc
or
or
sarb
sahf
repz
pusha
cmc
into
stos
push
cwtl
popf
push
push
lock
popf
or
and
pushl
sub
sarl
mov
jb
and
mov
mov
dec
inc
cld
stos
out
pusha
pop
hlt
xchg
dec
lods
test
into
push
push
addr16
ss
jo
sub
aad
dec
xor
inc
push
sbb
and
and
mov
pop
vmulss
lret
push
in
mov
dec
sub
pushf
movsb
sbb
xchg
mov
in
mov
gs
std
push
mov
adc
mov
push
cs
cmpl
fildll
mov
lret
int
js
xchg
mov
data16
and
mov
ss
push
jl
decl
pop
jecxz
les
or
and
lods
aad
adc
add
jbe
push
fsubl
mov
dec
lods
pop
fwait
adc
mov
or
loope
ljmp
nop
jnp
jmp
add
xor
push
mov
pop
or
fxam
iret
xchg
mov
test
adc
imul
push
int
mov
mov
mov
cmp
pop
shl
je
push
data16
aam
sub
xor
lret
cmp
bound
fldt
fstpl
inc
in
imul
imul
repz
xor
push
mov
movsl
cmpsb
cs
jl
jae,pn
push
int
movsb
loope
jnp
lret
xlat
adc
stos
out
sbb
xor
movsb
sti
add
shrl
arpl
sti
fwait
dec
out
mov
std
out
mov
lea
mov
ret
mov
pxor
lret
imulb
xchg
push
jg
cmp
std
inc
imulb
jg
loop
push
loop
mov
mov
push
and
jo
call
xor
imul
add
cli
sub
push
jns
icebp
aas
aas
jg,pt
dec
mov
insl
xchg
and
gs
cmp
pand
pop
pop
dec
cmp
sbb
dec
jne
lds
enter
data16
jno
pop
sub
aam
and
sbb
subl
xchg
insb
pop
add
mov
dec
hlt
xchg
push
mov
test
es
push
mov
push
and
in
gs
jmp
push
add
movsl
rclb
aas
fsubl
push
sbb
pop
es
ja
pop
fwait
lret
push
inc
in
fs
jecxz
adc
hlt
lahf
into
mov
icebp
and
dec
ja
ficoms
pop
cwtl
pusha
ja
fcmovb
dec
xchg
sti
jo
enter
hlt
inc
hlt
repz
or
or
inc
in
mov
mov
in
rolb
sti
push
pop
pop
mov
loop
sti
lahf
cwtl
pushf
xchg
out
cmp
jne
arpl
cltd
pop
imul
cmpsl
push
sub
setbe
mov
ds
sbb
negl
cmp
lret
ljmp
and
and
xchg
cmp
std
sbb
je
jmp
sbb
sbb
out
add
lret
dec
ss
gs
sahf
sub
mov
adc
jbe
push
add
xchg
mov
mov
sti
in
and
push
in
fidivs
das
in
jecxz,pn
dec
adc
sub
in
rcll
popa
xchg
adc
push
lahf
nop
les
inc
cmp
mov
mov
ret
mov
lock
push
ret
les
pop
in
mov
xchg
aam
add
xor
inc
test
mov
mov
daa
pop
faddp
mov
lods
mov
push
iret
cld
add
xor
das
jbe
sub
cmp
mov
or
jmp
imul
jae
xor
stos
rcr
adc
stc
dec
dec
push
sbb
xor
shrb
push
std
mov
mov
lret
inc
mov
pusha
jnp
mov
into
sbb
push
inc
mov
loop
fidivs
inc
xlat
scas
mov
ret
mov
loop
mov
xor
push
pushf
leave
test
lea
and
pop
ja
fwait
push
pop
repz
cwtl
out
push
xlat
mov
mov
dec
mov
in
out
aas
incl
jnp
or
addr16
pop
fmull
sub
push
leave
les
ljmp
rorb
push
scas
es
cwtl
mov
mov
movsl
rcll
cwtl
addb
xchg
lahf
mov
clc
dec
insb
jge
insl
or
enter
jno
cli
mov
imulb
mov
inc
mov
sti
dec
loopne
cltd
mov
sub
ljmp
xor
out
sbb
lret
adc
xchg
imul
les
bound
mov
lret
cs
cmp
adc
lock
aad
mov
repz
scas
nop
add
add
and
jmp
pop
fs
aaa
das
mov
or
fldcw
xchg
insw
mov
cld
jae
sub
cld
mov
mov
mov
fiadds
cmpsl
jae
cld
daa
xchg
ljmp
je
jmp
pop
ja
adc
mov
movsl
aad
sti
adc
jae
cmp
inc
pop
push
sarl
mov
mov
or
popf
iret
dec
and
in
sub
sbb
add
cmp
mov
stc
int3
jo
in
mov
clc
and
push
decb
pop
test
mov
in
inc
dec
add
rol
push
adc
xor
adc
jae
sbb
stos
xchg
int3
ss
sbb
mov
add
or
mov
stc
xchg
scas
mov
or
fnstenv
enter
daa
cmpsb
outsl
jo
jnp,pn
mov
inc
inc
lahf
jg
test
dec
aaa
dec
les
push
popf
icebp
xor
cwtl
push
popa
mov
xor
inc
sar
push
adc
movsl
das
sub
jge
dec
cmp
mov
dec
mov
cmp
faddl
popf
add
gs
fstps
ljmp
jo
notb
push
int
lret
mov
xor
test
inc
pop
push
lcall
mov
mov
xor
sbb
and
and
pop
or
xchg
jl
aaa
and
and
orl
sbbl
mov
dec
sbb
outsl
addr16
adc
fwait
repnz
dec
mov
ds
add
mov
and
sub
mov
aad
lea
clc
popa
mov
insb
mov
int3
iret
outsb
add
inc
cmp
and
and
shll
mov
les
rcl
cltd
jno
daa
movsb
mov
push
xchg
and
xchg
in
mov
pop
loop
mov
imul
cmp
lods
test
rclb
jno
out
mov
xchg
cmc
dec
or
ja
sbb
imul
adc
mov
xor
push
mov
and
xor
mov
cmp
and
mov
or
les
ficoml
or
fimull
pop
inc
adc
fsubs
repnz
in
std
inc
hlt
mov
test
xchg
test
push
shll
cmp
idivl
push
cld
pop
push
xchg
out
and
and
mov
xchg
mov
pop
inc
push
mov
mov
into
mov
mov
mov
popf
stos
outsl
and
cli
jnp
in
inc
aam
inc
or
sub
mov
data16
lcall
jo
fwait
ret
push
and
jl
fistps
test
mov
bound
xchg
mov
cmpsl
xchg
popf
xchg
pop
push
inc
aas
cmpsb
adc
stc
jmp
ljmp
out
jle
int
pop
jo
stos
add
pop
pop
jno
test
sbb
mov
mov
or
pop
xchg
push
add
sub
dec
and
loope
sub
hlt
mov
dec
dec
mov
mov
mov
hlt
in
inc
sbb
das
sub
pop
jp
test
sarb
inc
jnp
xchg
stos
add
mov
ss
fstl
jp
cmp
subb
sti
jnp
rcrb
or
fwait
dec
push
incl
pop
fildll
push
stc
aad
xchg
jp
insb
icebp
rolb
add
jne
xor
lock
xor
push
mov
cwtl
cs
je
adc
in
pop
out
xchg
das
inc
jl
adc
xor
lret
jle
xorl
adc
enter
sbb
dec
jns
lds
or
pop
and
push
pusha
dec
add
pop
in
cmp
ja
cltd
not
cwtl
ret
inc
push
add
hlt
sbb
mov
stc
sub
fstpt
movsl
or
jnp
mov
xchg
sub
rorb
fnstenv
adc
das
xor
inc
cbtw
inc
push
lods
sbb
dec
dec
pop
gs
mov
dec
add
push
or
cmc
ja
rolb
lcall
fisubrs
jne
xorb
ds
push
adc
fs
in
in
mov
rcll
popw
call
add
in
mov
adc
xor
dec
rcrl
lret
xchg
es
xchg
fcom
nop
and
jge
fdivs
cmp
ret
xchg
sbb
jno
int
push
lret
movsb
mov
loope,pt
jg
stc
pop
test
or
stos
cmpsb
mov
pop
loop
fdivp
lcall
cli
jb
mov
add
add
mov
xchg
inc
push
movsl
pop
nop
mov
rorb
out
js
inc
add
pop
fidivs
insl
fucomip
cmp
xchg
fcompl
ljmp
sbbl
sbb
cmp
xchg
push
mov
cld
leave
dec
test
dec
lcall
jae
pop
cmp
lahf
nop
or
mov
xor
xchg
sbb
in
outsb
cmc
mov
aas
mov
gs
lret
jge
mov
sub
dec
xor
mov
call
sub
int
mov
gs
inc
mov
mov
test
jmp
test
pop
pushf
cli
stc
shll
sahf
aas
inc
pusha
test
lds
cmc
mov
adcl
jne
push
testl
dec
mov
repnz
jge
xchg
ret
popf
and
jne
mov
cmpsb
mov
stc
mov
and
sub
pop
cltd
mov
arpl
loop
mov
jb
adc
xchg
call
mov
lret
mov
xlat
ret
mov
pop
jns
pop
jg
sti
xor
inc
dec
push
and
lret
aas
test
lcall
lods
ficoms
hlt
push
sbb
mov
inc
adc
dec
shrl
addr16
dec
mov
inc
scas
mov
int3
mov
rolb
sub
xchg
jno
test
imul
jne
pop
adc
es
fcoms
popa
push
cmp
sbb
xchg
inc
fsubs
sahf
mov
rol
inc
mov
jae
repnz
adcl
sbb
int
cmc
mov
sar
jo
imul
mov
cmpsb
test
xor
or
out
mov
inc
dec
or
mov
loop
outsl
dec
inc
aad
cld
addb
leave
jmp
xchg
in
mov
lods
rorl
jno
mov
loopne
fistpll
cmp
and
xchg
xor
dec
adc
inc
mov
or
mov
test
sub
lahf
pop
bnd
push
fisttps
js
adc
sahf
cmovg
test
xor
fmuls
jl
mov
pop
mov
cmp
in
adc
mov
pop
jg
out
sahf
mov
cmp
and
add
test
out
ret
add
adc
stc
add
sbb
fs
insl
push
movsl
lea
or
movsl
mov
sbb
out
les
push
jo
and
dec
popf
stos
xchg
mov
ds
lock
test
fincstp
ret
mov
cs
cmpsb
jbe
xchg
pop
aam
pop
xchg
dec
data16
out
cmp
rcl
push
push
iret
sarl
popa
sub
push
stos
out
mov
mov
testl
sub
pop
mov
sti
pop
push
loop
add
dec
in
inc
fidivrl
mov
mov
cmp
out
in
jae
jge
mov
adc
shrl
fidivrl
and
icebp
jg
test
cmp
std
icebp
scas
outsl
cmp
cmc
imul
cld
xor
loopne
jnp,pt
in
adc
in
popa
add
daa
imul
pusha
jmp
and
pop
je
adc
xchg
pop
fidivl
in
pop
sub
daa
cmp
mov
jne
rorb
push
jne
push
sub
mov
jg
rorl
and
daa
iret
daa
int
dec
test
fidivl
sub
mov
mov
dec
sbb
lcall
xchg
fcom
outsl
rolb
call
xchg
jae
jge
cmp
adc
cltd
iret
mov
jge
push
popa
movsb
mov
jnp
inc
stos
dec
xchg
xor
mov
cltd
or
sub
icebp
insb
pop
stos
mov
imul
insl
xchg
adc
ret
xchg
and
push
mov
cmpsb
push
cmc
sbb
cmpsb
sub
stos
imul
gs
push
popa
or
in
fsub
adcb
cmp
stc
xor
adcl
js
lret
lods
inc
int
js
mov
in
addr16
fistps
and
sbb
pushf
mov
pop
fs
in
push
push
and
xchg
jne
cmc
cmp
ds
add
mov
call
mov
mov
push
in
nop
aad
xor
lock
mov
xchg
jp
and
mov
movsl
fstl
mov
ja
inc
push
inc
sbb
push
loope
and
lock
mov
pop
in
int
jg
xchg
mov
aad
pop
imul
in
ss
xorb
jle
cmpsb
call
push
add
sbb
icebp
rcll
add
and
mov
mov
dec
addr16
sbb
mov
js
test
xchg
pop
adc
pop
sti
push
mov
cmp
cmp
xor
or
or
pusha
into
mov
pop
add
xor
or
hlt
xchg
add
xor
scas
out
push
push
push
and
mov
sbb
testl
xchg
movsb
push
roll
and
inc
scas
test
sbbb
add
inc
adc
mov
fs
testl
aam
add
pop
push
jae
dec
sub
mov
aas
sub
adc
sbb
jmp
rolb
out
add
sbb
addl
lret
imul
movsl
add
imul
mov
lds
add
xor
and
jbe
xchg
subl
imul
movsl
dec
mov
cmc
mov
mov
dec
repnz
frstpm(287
jg
inc
inc
stos
fdivs
frstor
add
dec
pop
pop
filds
incb
sbb
xchg
adc
cmpsb
pop
sbb
push
in
jle
inc
cmp
jb
mov
lcall
les
dec
or
dec
nop
pop
ss
pop
jge
push
and
pop
inc
stos
ds
fstpt
enter
mov
mov
and
std
fldcw
push
mov
push
test
aad
xor
or
jle
out
mov
stos
mov
loop
sahf
or
cmc
jno
dec
sbb
popa
aad
inc
rorb
sbb
dec
cmp
fidivrs
and
cmpl
jno
jns
xchg
fdivrs
sub
mov
mov
push
movsb
imul
rolb
mov
cmp
xor
test
aaa
hlt
pop
and
push
xchg
xor
sub
cmpsl
mov
mov
jecxz
pushl
dec
insb
in
xor
adc
dec
mov
xchg
jbe
sub
add
imul
js
pop
cld
xlat
mov
xor
cmpsb
and
pop
or
inc
adc
pusha
jne
leave
mov
outsb
add
pop
mov
ror
xlat
and
repnz
sub
movsb
idivb
clc
stos
or
ret
pusha
push
inc
dec
andb
cmp
scas
sbb
daa
mov
cmp
lock
xor
pushf
jae
gs
int3
cmp
xchg
inc
icebp
add
aad
jg
mul
pop
loop
sbb
jmp
dec
in
dec
jp
sbb
sub
out
sarl
sub
mov
inc
aad
rorl
mov
xchg
mov
mov
push
dec
jge
orb
mov
add
pop
or
jg
adc
jg
inc
loopne
inc
aas
or
jge
cmp
xchg
rclb
hlt
mov
adc
or
inc
mov
std
lds
lock
movsb
insb
pop
xor
imul
out
sub
and
adc
stos
fabs
js
mull
sub
xor
ja
scas
cld
xor
dec
mov
es
mov
test
add
push
hlt
outsl
cmpl
pop
add
outsb
aam
aas
mov
push
add
jg
xlat
xchg
add
jmp
lods
dec
xchg
adc
stos
bound
xor
mov
mov
cmc
lahf
fldcw
mov
imul
movsl
stos
iret
sbb
pop
jmp
adc
mov
rclb
lahf
xor
inc
lea
jl
xchg
sbb
jmp
sub
cmp
dec
pop
dec
lds
adc
or
ret
dec
scas
popf
mov
or
mov
gs
sarb
pop
negl
int3
pop
sbb
repnz
icebp
fmull
inc
arpl
inc
cvtps2pi
fucom
push
xlat
sbbb
xchg
mov
jecxz
adc
xor
mov
dec
xchg
push
jbe
sar
jb
or
push
jns
xchg
into
mov
imul
mov
inc
adc
mov
mov
loop
mov
mov
inc
cld
scas
xchg
adc
xor
int
sbb
loope
pushf
out
call
pop
or
xlat
push
mov
repz
rorb
xor
fiadds
mov
jl
push
in
subb
js
mov
jbe
fldenv
mov
mov
or
clc
shll
mov
lret
inc
jne
pop
lret
push
xor
ret
cmpsl
mov
stc
sbb
jne
fwait
jecxz
sub
mov
shlb
ret
or
mov
xchg
in
popa
xchg
xchg
aas
mov
sahf
insl
xor
ljmp
xorl
jne
addl
pusha
das
dec
arpl
leave
out
nop
pop
cltd
gs
pushf
jbe
test
lds
dec
inc
mov
out
imul
cmp
mov
xchg
es
adc
pop
mov
rorl
hlt
inc
ljmp
ficoml
fwait
pop
push
push
addb
xchg
pushf
scas
xchg
bound
sbb
leave
xor
pop
mov
scas
sbb
leave
gs
pushf
jns
xchg
push
dec
call
push
sub
or
dec
lods
and
xorb
bnd
dec
out
bound
repnz
dec
aas
jl
dec
imul
sub
imul
or
in
lock
movsl
sbb
xchg
test
mov
call
pop
push
push
adc
push
pop
stc
jae
mov
out
loope
int3
rolb
in
jno
sarb
cmp
neg
dec
mov
push
and
in
jg
cmp
xor
sbb
inc
push
clc
stos
and
mov
push
mov
cmp
push
inc
push
lods
popa
call
push
aas
mov
lods
mov
pop
adc
mov
leave
sbbl
sub
pushf
out
jmp
dec
scas
xor
dec
mov
push
mov
push
xlat
adcb
inc
mov
adc
stos
add
into
jno
xchg
pop
test
mov
int
or
push
loopne
or
push
mov
fsub
shll
cmc
mov
mov
or
pop
adcw
add
aaa
xchg
sti
inc
stos
movsl
add
or
dec
pushf
test
xchg
mov
sbb
inc
dec
movsl
rolb
rcll
stos
imul
mov
push
pop
cmp
jp
test
mov
dec
cmc
sbb
rol
mov
in
das
mov
sar
push
add
pop
inc
cmp
inc
sub
cli
cmp
mov
jg
enter
jmp
ja
loope
inc
out
pop
stc
pop
ret
xor
test
jno
arpl
or
pushf
ss
add
outsl
lret
xchg
clc
fwait
sub
xlat
lock
push
dec
mov
outsl
dec
mov
dec
dec
std
xchg
ds
gs
xor
xor
je
leave
sub
inc
clc
mov
push
push
mov
adc
test
fs
mov
and
mov
fistl
aad
mov
cmp
das
cmp
mov
stos
popf
data16
adc
mov
lea
mov
imul
rclb
dec
arpl
jo
stos
and
or
movzwl
add
adc
mov
sbb
rol
dec
xchg
out
or
cli
inc
ret
fiadds
fs
mov
movsb
outsl
out
movsb
rol
jb
std
pop
stos
dec
sbb
inc
jbe
scas
mov
cmp
and
ficomps
mov
rorl
mov
jae
or
mov
jl
js
sub
loopne
aas
push
mov
fdivrl
and
mov
jb
movsl
cmp
aas
pop
mov
jl
cmpsb
inc
push
pop
cmp
jmp
loop
test
jle
xchg
out
mov
loopne
shlb
adc
pop
xchg
adc
adc
add
jge
dec
sbb
subl
iret
decl
sbb
std
shrb
icebp
sub
out
adc
and
mov
xlat
push
sbb
ficoml
xorl
sub
test
adc
pushl
pop
mov
xchg
fcomps
lea
push
and
pop
stos
mov
add
hlt
jnp
sub
cmpsl
mov
inc
pop
xchg
adc
adc
rcrb
mov
ljmp
mov
dec
mov
out
adc
imul
push
xlat
mov
jl
jp
shrb
in
mov
mov
divb
popf
fcomip
mov
or
lahf
fsincos
aad
xchg
cmp
mov
dec
mov
hlt
adc
sbb
popf
add
mov
sub
ficompl
add
pushf
xor
adc
jne
stc
scas
mov
stos
mov
jmp
fmuls
ror
xchg
inc
or
dec
push
lret
add
push
fwait
lcall
fiaddl
cwtl
pusha
sbb
lea
sub
pshufw
or
pushf
dec
ss
dec
repz
dec
jmp
pop
and
stos
leave
cmc
clc
sbb
clc
icebp
ds
jns
addl
repnz
or
and
adc
add
sti
ret
ja
aas
mov
ja
pop
into
jg
mov
shlb
mov
sub
repnz
cmp
push
mov
inc
scas
das
lods
push
adc
iret
dec
flds
push
inc
mov
je
ret
cs
in
lods
icebp
jnp
jl
and
adc
mov
movsl
xchg
insl
sbb
mov
push
mov
jl
es
and
fstps
sbb
mov
das
insl
mov
sub
mov
pop
fnstcw
pushf
minps
xchg
arpl
mov
pop
fwait
outsl
push
loop
sarl
in
sub
and
test
fidivl
push
out
lock
xor
mov
call
lods
push
lret
mov
lds
int
mov
data16
jnp,pt
adc
negb
mov
mov
pop
mov
mov
inc
pop
sbb
imul
jecxz
scas
decb
cwtl
sbb
fs
jle
push
mov
inc
shll
fidivl
adc
stos
fs
cwtl
dec
je
and
mov
cmp
lock
sbb
iret
int
add
test
mov
movsl
scas
lcall
inc
orl
gs
jae
adc
roll
sbb
iret
add
in
lods
mov
in
push
sbbb
sub
add
sahf
cld
int
mov
or
insl
push
push
dec
jbe
xchg
adc
sbb
mov
sub
jbe
leave
cmp
js
and
shll
sti
aad
xlat
mov
in
pop
sti
sub
mov
push
or
adc
dec
pop
inc
mov
add
data16
scas
mov
mov
mov
ret
add
inc
pop
xchg
mov
jae
repnz
out
rolb
cltd
int
push
fnstcw
mov
xchg
push
xor
cmc
dec
fisttpl
movsb
je
enter
stos
jo
ror
clc
aas
call
or
fcom
pop
testb
sub
jne
icebp
adc
adc
jne
mov
adc
adc
mov
mov
sub
loopne
std
outsb
mov
ljmp
clc
outsb
stos
add
daa
add
adc
mov
test
jecxz
imul
je
aad
mov
dec
maskmovq
testl
cmpsl
add
sub
mov
mov
jmp
inc
sbb
add
inc
ret
cmpsl
scas
test
es
or
lds
addr16
push
adc
call
or
sbbb
iret
mov
mov
sub
push
pushl
mov
cmp
je
rolb
out
fwait
dec
out
hlt
sbbb
jl
lret
dec
popa
or
xor
inc
push
xchg
pop
addb
mov
lea
lods
xchg
sti
push
ds
inc
lcall
jp
pop
orb
lret
subb
add
dec
mulb
cmp
adc
pop
ret
add
or
fisubrl
jle
push
insl
aam
inc
icebp
push
jbe
leave
sahf
mov
shll
fs
mov
addr16
sbbb
shlb
pop
call
aam
je
xchg
lret
mov
mov
xchg
iret
stc
pop
out
and
pop
loope
pusha
or
pop
mov
imul
mov
addl
cwtl
push
movsl
push
aaa
jns
add
cmp
adc
shrl
nop
arpl
sub
loop
cld
outsl
push
es
fsubp
out
push
fidivs
or
xorl
test
loope
pop
rcrb
jge
fwait
les
xchg
fidivl
aad
daa
adc
cmpsl
jns
xorl
stc
push
jno
cmp
xor
fwait
and
mov
mov
mov
or
mov
mov
push
dec
lds
mov
shlb
out
mov
cmp
addl
xor
xchg
mov
mov
loope
lcall
hlt
cld
sub
imul
pop
cmpsl
enter
and
sbb
xor
mov
sbb
inc
add
das
jnp
jne,pn
and
jecxz
ret
mov
test
mov
jno
loope
push
lods
stos
or
pcmpgtd
cmp
in
dec
loopne
lahf
jne
les
mov
xchg
pop
xchg
xchg
or
pop
push
push
movsl
pop
repnz
mov
cld
shlb
scas
ret
addr16
arpl
movsl
and
push
lods
in
ret
lock
xor
ret
xchg
div
jnp
cld
mov
jp
xchg
xchg
mov
sbb
aaa
pop
jl
inc
inc
in
mov
mov
stos
idivb
test
fisubrl
bound
push
sbb
adc
add
out
push
inc
mov
sub
pop
fcoms
mov
jmp
or
xor
adc
mov
test
and
mov
gs
mov
fisttpl
imul
xor
int3
pop
es
in
mov
or
pop
pop
push
push
loopne
cli
push
mov
adc
ljmp
js
rcr
mov
mov
mov
cmc
sbb
stc
idivb
outsl
adc
jle
jne
jno
dec
xchg
push
add
lock
xor
cmp
xor
sbb
sub
and
jbe
cmp
movsl
inc
mov
sub
ret
mov
arpl
loope
insb
xchg
and
adc
ljmp
mov
jp
fs
negb
std
add
xchg
xchg
insb
mov
insb
jno
push
mov
jnp
cli
xchg
in
in
adc
shrb
imul
push
lds
xchg
lea
test
jle
les
pop
lods
mov
fwait
and
ficoms
cmp
repnz
adc
sub
insb
ja
add
in
adc
push
dec
adc
pop
add
repz
subb
sbb
sub
mov
inc
sbb
jg
pop
push
or
cmpsl
sub
and
test
addb
loope
pop
and
sub
mov
clc
mov
xchg
unpcklps
xchg
adc
gs
jnp
mov
ret
jmp
fsubl
dec
in
lahf
mov
dec
mov
into
aas
dec
out
or
dec
movsl
push
mov
lds
into
loope
mov
push
inc
jecxz
das
mov
mov
shlb
and
mov
mov
call
hlt
aad
inc
orl
std
pop
push
lock
dec
insl
push
dec
xchg
aas
sbb
xchg
mov
imul
in
xchg
iret
jae
subl
lahf
pop
outsb
mov
jl
adc
outsb
rolb
inc
imul
sysenter
sub
xlat
cmpsb
adc
adc
jl
les
add
cmp
dec
dec
dec
push
aam
test
push
int
mov
push
xchg
outsb
fwait
cmp
bound
fwait
xchg
jne
add
xor
mov
repz
jns
in
push
lods
mov
nop
dec
mov
mov
enter
push
insb
aaa
mov
mov
cld
ret
or
in
mov
jo
jae
lea
cltd
aam
insl
fwait
scas
pop
cmp
mov
sbb
mov
cmpsl
clc
push
insb
or
lock
mov
push
insl
insl
inc
aas
out
cmp
pop
in
inc
and
xchg
add
test
mov
mov
sbb
sbb
shl
andb
cltd
and
mov
pop
sbb
cmpsl
adc
mov
fidivs
mov
cmp
mov
cmp
push
stc
scas
rcrl
mov
or
sarl
das
repz
rcll
aaa
dec
mov
std
inc
cmp
cmpps
jbe
inc
inc
mov
adc
or
xchg
scas
int3
push
push
stc
xchg
mov
cmp
pop
or
mov
xor
sahf
sahf
pusha
mov
push
xchg
and
insb
and
jmp
sbb
xchg
int
add
cltd
shll
xchg
mov
cld
pop
jmp
jg
sub
outsb
add
or
in
out
pop
and
mov
mov
xor
lds
inc
stc
fs
sbb
jg
arpl
lret
and
mov
movsb
sti
pop
xchg
mov
dec
xchg
cmp
jecxz
or
jbe
aam
mov
push
out
mov
gs
imul
inc
rolb
and
enter
pop
les
cmp
cmpsb
das
xor
ja
and
push
fsub
enter
lret
cmp
jmp
pop
mov
or
add
call
cmp
cmc
adc
mov
xchg
xor
and
cmp
out
aad
pop
and
lods
add
fldt
mov
sbb
daa
inc
push
andb
mov
xor
adc
pop
mov
mov
dec
lods
jmp
and
push
movb
lea
mov
mov
rorb
cmpsb
xchg
mov
push
xor
cmp
jae
aas
or
js
xor
sbb
and
mov
inc
popf
leave
inc
mov
inc
popf
jne
in
iret
jg
mov
push
xchg
nop
popf
and
lcall
gs
add
or
mov
sahf
sub
sub
or
nop
cmp
xor
mov
fisubrl
sti
js
pop
stos
mov
daa
cld
movsl
daa
cwtl
test
jbe
iret
dec
jnp
aad
mov
adc
jnp
int
int3
mov
fdivrl
dec
cmp
mov
pop
cmp
inc
push
sbb
int3
sbb
out
jl
jl
mov
jae
fmuls
pusha
push
fldt
leave
push
frstor
inc
inc
lock
dec
es
inc
sub
out
mov
jp
mov
dec
test
mov
and
xchg
mov
jecxz
ficomps
jg
loopne
icebp
std
repnz
adc
push
xor
mov
or
inc
xchg
lods
and
inc
xchg
std
adc
dec
sub
mov
sub
lock
pop
xor
notb
aam
les
lcall
adc
push
or
cmp
shll
sub
pop
inc
pop
pop
and
add
fnstsw
and
sbb
cs
mov
inc
repz
mov
jle
repz
fldenv
dec
push
inc
cwtl
enter
cmp
imul
pop
mov
inc
mov
mov
repz
push
xor
mov
mov
mov
popf
adc
clc
jg
mov
fsubrl
pop
daa
xchg
cmc
pop
cmp
sbb
sti
nop
test
adc
jl
adc
xchg
fcompl
subb
sbb
clc
mov
sti
dec
pop
and
cmp
cmp
sti
js
inc
mov
xchg
or
movsl
decl
test
lods
out
je
fadds
inc
fbstp
das
mov
cmp
mov
sub
cmp
xor
inc
push
mov
cmpsl
sbb
mov
ljmp
sub
jo
mov
dec
or
data16
mov
es
push
and
adc
dec
sbb
lcall
push
dec
jbe
xchg
mov
cmp
dec
ret
sub
mov
call
inc
mov
fildl
mov
sub
ds
je
gs
pop
xchg
mov
jb
pop
mov
mov
add
out
xor
xchg
lods
xchg
aam
and
pop
repnz
int
data16
popf
push
mov
sbb
addb
mov
mov
and
sbb
inc
xor
cmp
daa
imul
std
rorb
mov
insl
pop
xchg
ds
clc
popa
invd
sbb
jb
and
push
xchg
sbb
call
cs
mov
add
stos
xchg
into
pop
orb
dec
and
sbb
jb
clc
xchg
fsubl
mov
or
lret
ds
pushf
nop
ljmp
sub
loopne
pop
xchg
mov
push
push
movsb
das
int
dec
or
sbb
dec
ffreep
mov
dec
sub
cmc
xor
jecxz
jmp
aaa
int3
sub
scas
push
pop
mov
and
in
sub
add
enter
push
test
popf
lcall
pop
add
sbbb
loope
bound
sbb
mov
in
test
cmp
nop
hlt
push
mov
or
add
or
inc
fnstsw
ficoms
xchg
mov
mov
cwtl
mov
mov
ficoms
repz
xlat
and
adc
dec
and
xor
test
ss
inc
mov
insb
cli
cmp
call
int3
repnz
ret
in
mov
loope
sub
pusha
mov
add
aad
data16
enter
insl
jae
push
adc
dec
hlt
pop
fcomp
in
aaa
lcall
outsb
mov
loopne
clc
jno
sub
xlat
shrl
dec
repz
ds
mov
in
xchg
aaa
in
jg
in
push
frstor
pop
jo
dec
sbb
loopw
mov
sbb
cli
fiadds
imul
cmp
scas
jno
push
dec
or
adc
mov
fsts
push
mov
and
ja
xchg
pop
adc
arpl
stos
xor
sub
or
test
test
jo
xor
clc
jmp
inc
std
xchg
in
and
fldl
dec
insb
arpl
pop
cmp
xor
mov
lahf
ds
sbb
adcl
xor
adc
push
addr16
cmp
sahf
gs
adc
cmp
pop
shll
aas
pop
imul
xchg
inc
dec
add
outsl
ja
sbb
cmp
xchg
lods
icebp
lock
xchg
hlt
out
shlb
jnp
scas
dec
aad
sub
js
shlb
mov
frstor
inc
fcom
mov
fsts
push
xchg
mov
or
cmpsb
test
pusha
insl
push
cmp
xor
inc
pop
aaa
xchg
sbb
lock
lcall
adc
mov
lods
imul
xor
mov
negl
xchg
mov
push
cmpsb
mov
into
mul
inc
icebp
cmp
fidivrs
popa
jmp
dec
std
mov
shll
arpl
cmpsl
stos
jns
dec
or
mov
sbb
das
incb
push
inc
xchg
mov
shrb
repnz
push
pop
shlb
vpsubusw
mov
add
daa
cld
mov
lea
dec
psadbw
ds
lcall
test
mov
into
ret
daa
adc
dec
fstpl
shrl
push
and
leave
outsb
dec
add
pop
or
outsb
lods
clc
pushf
or
je
xchg
or
bound
cld
inc
lret
dec
lods
mov
sbb
push
pusha
rcll
dec
jl
add
sub
inc
or
push
xlat
fstpt
mov
and
pop
mov
cltd
mov
popl
sub
imul
adc
cmpsb
add
push
outsl
xlat
repz
movsl
arpl
insl
fisttpl
pop
and
or
stos
popa
dec
repz
cmpsb
cmp
pop
mov
cmp
fistl
shrl
jmp
sub
mov
out
push
and
arpl
dec
push
repz
xchg
cltd
cmpsl
mov
cmp
jge
negl
cmp
dec
in
test
je
push
xchg
lds
mov
jbe
out
shlb
subb
daa
dec
push
repnz
aam
fimuls
cmp
fdivr
ljmp
jecxz
mov
pushf
out
fwait
dec
cld
out
int
push
imul
mov
xchg
loopne
xor
pop
cmpsb
shrb
push
mov
movsl
pop
mov
repnz
rclb
in
stos
sub
sbb
mov
pushf
fbstp
dec
xor
dec
scas
movsl
inc
adc
pushl
adc
mov
adc
outsb
shlb
divl
adc
push
xchg
leave
lret
and
inc
jmp
add
pushf
pushf
dec
adc
mov
rclb
mov
test
scas
sub
sub
mov
xchg
je
push
push
xchg
jmp
daa
sbb
mov
or
mov
cmp
stc
out
or
mov
jne
sub
outsl
test
test
fistps
jle
xchg
ret
jle
mov
imul
and
jbe
inc
mov
rcrb
sbb
or
add
adc
mov
or
adc
mov
mov
and
push
popa
xor
shr
jb
push
pusha
insb
xor
push
iret
inc
pop
cli
push
mov
ljmp
into
cmp
movsl
pusha
in
clc
pop
stos
popl
lcall
inc
xchg
les
in
mov
lds
aaa
shl
pop
adc
inc
adc
mov
sbb
push
mov
hlt
out
pop
adc
test
jp
fadds
dec
fiadds
cmp
mov
mov
push
xor
xchg
xchg
pop
test
loop
inc
mov
xor
or
cmpsl
lea
lods
iret
cmp
mov
ret
pushf
mov
daa
scas
daa
int
pop
cli
ljmp
sti
and
into
insb
sbb
dec
scas
jnp
mov
jg
adcb
mov
push
movsb
xlat
cmpsl
pop
lahf
xchg
push
adc
dec
loope
leave
xchg
push
mov
cmp
dec
clc
pushf
cmpl
aad
sbb
xchg
hlt
cmp
fcoms
popf
xchg
mov
xchg
in
outsl
xchg
cmp
out
sub
movsb
js
inc
mov
imul
fsin
cmpsl
fcomps
mov
mov
xlat
push
mov
test
ljmp
and
decl
pop
pusha
mov
and
push
cmp
cmp
std
call
mov
and
pop
stc
out
hlt
insb
mov
in
push
sbb
push
xor
and
push
cmpl
push
nop
pop
fildll
jle
leave
in
push
sbb
add
mov
dec
pop
loopne
shlb
bound
sub
imul
outsb
mov
inc
xor
add
frstor
pop
dec
add
out
push
jmp
loop
mov
push
iret
push
into
in
pop
inc
mov
in
mov
mov
xchg
insl
cmpl
xor
popa
pop
or
mov
jl
mov
les
add
xchg
cwtl
push
jnp
bound
in
pop
test
push
fucomi
jle
imul
sbb
pop
popa
iret
mov
mov
nop
sbb
mov
jnp
mov
lock
mov
bound
jns
push
xor
and
adc
jae
mov
push
rcrl
sbb
jecxz
lock
mov
stc
das
and
push
mov
cli
and
jp
stc
mov
adc
enter
xchg
add
mov
insl
jecxz
inc
mov
fsubrl
xchg
sbb
sbb
rorb
movl
cltd
jl
cmpsl
and
add
adc
push
jmp
cmpsb
mov
mov
pop
cs
test
xlat
shl
cmc
test
fcomps
jae
push
inc
jae
pop
or
jp
xchg
lods
inc
out
cmp
and
ljmp
or
push
jge
sbb
es
and
mov
xor
daa
mov
mov
mov
fwait
lods
xchg
pop
lahf
in
mov
xor
in
pop
push
and
lock
pop
adcl
or
mov
pop
dec
inc
mov
cmpsb
clc
test
xor
stos
cmp
pop
aaa
jecxz
jb
add
ja
jmp
mov
lods
and
sti
push
scas
add
lret
mov
xlat
mov
push
test
and
in
rcll
mov
lcall
aam
mov
pushl
mov
xor
jne
or
test
in
jno
xchg
push
outsl
xchg
aam
fsubs
jbe
pusha
sub
push
ds
jmp
cmpsl
mov
sub
pop
loopew,pn
xor
mov
dec
outsb
push
out
push
push
sub
xor
push
push
cld
push
xchg
ds
call
jmp
cli
cwtl
cmpsl
mov
adc
leave
push
pop
add
fdivl
insb
xchg
test
lahf
lods
fsub
nop
mov
rcr
cmp
int3
dec
xlat
cmp
shll
cmp
dec
or
out
dec
mov
mov
sti
push
in
pop
addr16
jg
loop
xor
mov
loopne
add
jl
cmp
pop
push
and
fxch
jecxz
add
or
data16
rcr
insl
imul
add
stc
sbb
lock
orl
ja
and
sbb
mov
adc
insb
les
nop
pop
mov
js
das
aas
iret
lcall
pop
int
inc
ss
sub
inc
into
cmp
jle
sub
jns
pop
mov
push
outsl
rcrl
xchg
and
es
inc
movsl
shl
adc
cmp
xchg
and
push
mov
dec
mov
jecxz
je
jp
or
jmp
stos
or
sbb
add
andl
fidivl
adcb
mov
sub
bound
xor
adc
in
test
lds
mov
aad
pop
and
pusha
call
xchg
sbb
adc
data16
or
push
sbb
pop
cmp
push
and
adc
dec
jo
sar
or
shlb
jp
sbb
ret
stc
add
xor
push
test
pop
call
push
sub
fxch
test
mov
dec
pop
pop
mov
pop
outsb
andb
movsl
pop
fistpl
js
and
jns
adc
fcmovnu
in
hlt
hlt
fs
sbbb
cld
jl
jp
push
cli
mov
lcall
cwtl
test
in
int
cwtl
inc
push
dec
push
mov
into
push
xchg
test
xchg
dec
jp
mov
mov
mov
shll
imul
aas
dec
and
hlt
mov
inc
mov
pop
mov
xlat
arpl
icebp
insb
push
pop
jo
insl
inc
nop
cltd
push
das
stc
dec
mov
adc
sti
gs
jle
outsl
cmova
mov
outsl
fnsave
pop
ja
or
push
xor
mov
mov
dec
stos
test
push
xor
sbb
cmp
arpl
out
sar
jge
and
fildl
lcall
jl
sbbb
xchg
cld
inc
xchg
and
aad
jge
sub
xor
out
mov
into
and
cmp
outsb
test
adc
nop
sbb
push
adc
add
pop
test
adc
ds
cltd
sbb
mov
ret
inc
xchg
adc
aad
pop
mov
xchg
sub
cltd
cld
mov
pop
out
push
jg
out
add
xor
xchg
out
inc
cmp
mov
jle
mov
add
ret
mov
data16
cmpsb
daa
sbb
into
rcrl
flds
aad
fstpl
jbe
lds
das
shrb
cmpb
orl
lds
and
adc
andl
pop
pushf
aaa
cmp
sbb
jmp
std
das
cmpsl
mov
push
sbb
fsubrs
adc
js
mull
out
mov
popf
fldcw
dec
dec
jnp
adc
and
jge
pushf
fwait
dec
das
push
pop
inc
dec
sbb
je
pop
imull
mov
aam
je
fnstcw
xchg
jl
in
dec
ret
shrl
dec
adcl
xchg
adc
pusha
mov
int
xor
xchg
push
mov
out
out
sarb
dec
sub
enter
push
bound
in
pop
add
jp
scas
and
cmc
pop
mov
in
sub
punpckldq
xchg
pop
fcomp
sbb
pop
dec
dec
sub
fdivl
out
xchg
adc
imul
nop
sbb
int
xor
mov
xchg
or
fs
lcall
int
int3
sbb
into
mov
ljmp
cld
scas
sub
sub
mov
loop
repnz
shl
jmp
pop
mov
ja
jae
adc
and
ljmp
cmp
xlat
jne
sub
cld
fcomip
hlt
xchg
dec
xor
mov
into
ds
into
lahf
dec
dec
aas
movsl
rolb
inc
xchg
test
out
mov
lret
je
jno
lods
and
xchg
sbb
ret
xchg
ss
adc
outsb
dec
nop
and
push
sub
sbbl
fstl
movsb
xchg
gs
mov
push
or
stc
add
repnz
push
dec
xor
ret
testb
adc
cmpl
pop
xchg
data16
push
lock
sbb
push
mov
addr16
int
xchg
sub
fs
cltd
mov
aas
lret
test
cltd
icebp
mov
mov
or
fcmovnbe
xlat
ja
icebp
out
mov
inc
add
pop
rcll
and
mov
idivl
pushf
xchg
push
aad
cmpsb
xor
hlt
mov
call
sbb
and
js
lret
push
fisubrs
ret
mov
jae
lahf
mov
xchg
jl
sub
pop
jb
mov
mov
pop
mov
sub
xchg
out
pushf
mov
xchg
xchg
xor
mov
orb
mov
outsl
xor
imul
outsb
lahf
cmp
jge
out
movl
sbb
das
dec
fildll
mov
and
stos
mov
adc
aad
pop
jp
cmp
dec
xlat
lahf
outsb
push
pop
stc
sarl
pop
xchg
cmp
xlat
xor
inc
sahf
movsb
cmp
fiadds
mov
das
sbb
mov
cs
fsubrp
and
std
lock
outsb
cmpsl
xchg
pop
fsubrl
mov
push
call
mov
sbb
addb
adc
repz
jnp
aam
dec
push
inc
jg
imul
push
popf
aas
in
into
or
fldl
dec
jg
xchg
jne
pop
mov
test
cmpsb
mov
mov
lahf
sarb
mov
lock
ljmp
std
adc
test
pop
mov
or
dec
pop
das
imul
arpl
jmp
inc
or
and
stc
jmp
in
insl
enter
inc
mov
popf
pop
and
flds
lods
jmp
lods
loope
fdivs
xchg
rcr
adc
jecxz
and
pushf
sbb
cmp
andb
fsubrs
into
out
jb
fstpl
sbb
sub
push
jns
pop
dec
nop
mov
scas
mov
mov
call
scas
dec
push
push
cmc
aas
inc
ret
pop
sub
fistps
aaa
cltd
fwait
enter
incb
cmp
dec
sub
dec
bound
adc
stos
jl
jbe
cli
fimull
push
xchg
decl
pcmpeqd
in
lock
inc
xor
adc
mov
mov
stc
jge
ss
sub
cltd
jp
mov
jmp
test
outsl
push
push
jo
out
out
inc
xor
std
sub
xchg
mov
push
mov
add
push
cmc
sub
clc
movsl
sub
fcmovne
mov
dec
subb
dec
fisttps
push
lcall
aad
sbb
xchg
ret
pop
fisubs
dec
xchg
ja
pop
dec
xor
and
xor
pop
mov
add
frstor
push
nopl
mov
out
leave
lea
test
push
sarl
or
popf
and
jg
movsb
fwait
leave
lods
pop
mov
insl
repz
adc
adc
addb
xchg
in
push
std
xor
fsubl
aas
xchg
xor
sub
leave
punpckhdq
push
pop
xlat
mov
push
hlt
rol
inc
push
cwtl
lods
or
cs
inc
call
fiaddl
iret
test
add
adc
lods
insl
xchg
mov
sbb
sub
pop
cmp
enter
testl
sbb
xchg
cwtl
jbe
stos
dec
hlt
pop
fiaddl
leave
inc
add
cmpsb
cmp
jne
xlat
mov
popa
or
movsl
xchg
hlt
inc
test
outsl
push
ficoml
sub
loop
movsb
into
and
adc
xorl
lcall
sbb
mov
cmpsl
mov
ds
push
mov
sub
mov
shl
xor
jge
sti
xor
push
jp
int3
and
jmp
jno
push
je
es
ja
fcompl
ds
popa
cli
jge
out
mov
and
and
loop
les
jnp
bound
pop
incl
iret
or
icebp
cmc
insb
xchg
mov
dec
cmp
jmp
ja
leave
shll
aas
clc
bound
sbb
cmp
fisubl
lods
pop
jg
dec
jns,pn
daa
dec
das
loop
pop
es
mov
xchg
outsl
add
mov
lcall
inc
or
push
pop
pop
jo
mov
loop
or
push
clc
or
cmp
scas
cmc
jb
gs
fnstcw
mov
and
in
push
sub
addb
inc
imul
sub
mov
sub
test
subl
shl
and
call
mov
pop
sub
sub
shlb
lea
xor
push
mov
jb
mov
shll
notl
mov
fildl
xchg
sarb
test
push
out
cmpsb
mov
push
ljmp
fsubs
adc
ret
pusha
ror
or
les
push
push
jo
loope
loop
adc
sub
sar
mov
push
mov
pop
aas
or
adc
mov
ds
push
jnp
movsl
mov
and
push
dec
ret
jb
cmp
inc
sub
loop
mov
jmp
loop
sub
pop
sti
xor
rorl
or
stos
stos
adc
inc
mov
leave
push
sbb
sahf
mov
sbb
sbb
push
mov
daa
and
mov
mov
sbb
sub
insl
pop
push
push
mov
lock
push
jg
rcrb
les
aaa
pusha
out
fildll
xchg
mov
out
lahf
sub
lcall
fbstp
mov
mov
mov
push
pusha
imul
js
in
cmpsb
jg
repz
gs
jnp
cmp
xor
orl
mov
stc
adc
cli
and
dec
loope
insl
das
lcall
fidivrl
sub
add
pop
push
korw
and
aas
je,pn
pop
mov
pop
test
syscall
mov
mov
add
jge
xchg
into
dec
dec
ljmp
adc
ja
aaa
out
push
repz
mov
jne
hlt
rol
inc
dec
mov
outsl
jno
jno
mov
adc
sbb
inc
out
cmc
clc
stos
cmp
stos
insl
in
push
adc
cmp
fstpl
xchg
xchg
les
lahf
lock
mov
pop
jle
jno
sbb
mov
call
and
push
inc
sar
cmp
mov
xor
xchg
stos
icebp
decb
fmuls
mov
mov
in
cmp
loop
jp
jge
push
aam
shrl
sbb
stc
add
mov
lcall
int
add
aaa
xor
movsl
sbb
mov
xor
add
sbb
sub
xlat
les
dec
mov
mov
xchg
lods
imul
orb
call
stc
xchg
gs
jno
fwait
xchg
mov
std
and
sbb
xchg
push
das
movsb
popa
mov
cmpl
push
sub
imul
or
icebp
loope
inc
dec
pop
jl
or
repnz
add
push
sub
ret
sub
pop
iret
cmp
fstl
loopne
push
clc
mov
cmpb
fiaddl
addr16
imulb
mov
jnp
cmpb
aaa
xchg
loopne
call
mov
jmp
mov
mov
dec
push
scas
push
jmp
ret
pop
and
add
mov
pop
loop
out
les
std
jae
imul
ret
jno
xor
inc
int3
pop
pop
pop
dec
xor
into
add
test
test
enter
addl
movsl
push
aad
sbb
push
cli
cwtl
outsl
out
sbb
test
jl
enter
xor
xor
loop
aas
sbb
aam
mov
cwtl
xchg
push
or
out
nop
jns
mov
sub
lock
xor
nop
arpl
mov
push
xor
or
stos
mov
inc
xor
pop
das
mov
pop
ds
lret
jmp
mov
jo
in
out
sbb
ftst
js
pop
cmpb
dec
outsb
jecxz
iret
jne
push
mov
fucom
in
leave
dec
or
fnstsw
leave
mov
inc
jecxz
outsb
js
pop
add
popf
dec
add
lock
cmp
mov
mov
sub
xorb
mov
es
jge
jp
or
ljmp
dec
fdivl
movnti
fs
jmp
xchg
jmp
add
xchg
mov
add
test
call
mov
popa
test
fidivs
loopne
push
les
sub
sarl
sub
fstpl
pop
ds
inc
push
push
adc
xor
dec
je
mov
or
pop
popl
add
or
inc
xstore-rng
cmpsl
xchg
es
in
xor
test
fistl
icebp
mov
push
je
push
ljmp
inc
push
divl
shlb
addr16
ljmp
sti
mov
xchg
and
and
xor
je
inc
ret
adc
insb
ret
aad
and
icebp
aam
popa
lahf
jnp
cs
jle
sbb
lock
fcoms
outsl
scas
cmc
xor
xchg
add
add
inc
outsl
in
stos
xor
pop
jge
sbb
fucomip
push
ja
or
stos
aas
mov
js
clc
hlt
push
xchg
repz
adc
inc
daa
mov
xor
leave
mov
pop
ja
ficoml
mov
sub
popa
data16
sbb
cmp
lahf
outsl
dec
insl
jecxz
fstl
xchg
jle
dec
xchg
jecxz
dec
push
jp
mulb
movups
mov
cmp
adc
sub
jnp
xor
dec
enter
xor
pop
sbb
mov
sbb
mov
ret
sti
aaa
ljmp
scas
mov
test
ja
mov
fcomps
data16
out
pop
rclb
ja
add
nop
fidivl
add
or
or
ds
adc
mov
push
fisubrs
clc
sbb
stc
imul
sub
stc
daa
mov
dec
notb
enter
add
mov
loope
test
test
test
sub
xchg
and
in
cli
push
iret
inc
scas
xlat
inc
mov
into
or
pop
adc
pop
push
lret
ja
adc
sub
test
mov
popf
push
add
jge
inc
adc
pop
cmp
xchg
jnp
mov
push
inc
and
or
hlt
inc
pop
mov
loopne
in
rcrb
fsubl
push
push
xlat
ss
xorl
out
outsl
dec
pop
lock
or
adc
adc
nop
enter
subb
sbb
xchg
mov
mov
inc
add
push
pop
imul
leave
scas
push
or
push
mov
xor
scas
sahf
lods
push
mov
shll
ss
jno
jecxz
dec
fcomp
mov
xlat
sti
push
cs
push
and
dec
jae
jp
mov
lcall
jno
test
jb
mov
sub
jns
push
sub
xor
mov
mov
lahf
in
dec
mov
push
lcall
mov
popa
mov
jge
sbb
and
jno
jnp
cli
movsb
jmp
mov
pop
popa
sub
cltd
cmp
mov
outsl
mov
sbbb
jg
fdivl
dec
test
in
xchg
sbb
scas
mov
dec
pop
and
stc
outsl
ror
movb
mov
call
rorb
flds
pop
gs
andl
popf
xchg
and
cmc
xor
cli
lock
xchg
out
push
xor
adc
ficoml
mov
jb
divb
int
insl
mov
lcall
xor
les
cwtl
jmp
movsl
out
lea
sbb
and
and
clc
insl
daa
mov
jno
cmp
stos
aam
stc
int
cld
xchg
jle
movsl
sub
cmp
pop
fadd
and
adc
cmp
adcb
mov
xor
std
push
ret
mov
aam
mov
js
in
push
pop
aaa
data16
xlat
iret
add
inc
lea
lret
or
movsl
ret
jge
push
push
pop
ljmp
jp
push
cltd
jo
aam
scas
mov
sbb
in
sub
sub
sbb
stos
lods
cmp
pop
pop
movsb
gs
cmpb
fsts
fs
jecxz
add
sahf
ret
and
cmp
aad
adc
dec
and
cmp
mov
pop
or
andl
pop
or
lods
pop
xchg
sbb
jb
mov
add
arpl
add
mov
cmp
aad
outsl
lahf
fwait
lcall
cmp
pusha
xchg
mov
or
fsubl
icebp
mov
leave
jg
and
shll
and
and
fsub
sarl
pop
mov
dec
bound
scas
js
mov
pop
bound
lods
mov
sbb
repz
push
sti
cld
mov
xlat
xchg
das
pushf
and
adc
cmp
iret
mul
cmp
mov
inc
push
xchg
movhps
cmp
andb
push
jmp
mov
mov
mov
stos
fists
xor
push
push
jg
jg
mov
repz
cli
mov
adc
ja
dec
out
int
sti
loopne
popf
or
dec
loop
sbb
xchg
rep
ljmp
out
rcrl
cmpsl
xor
or
or
sbb
sub
add
cli
gs
cmp
sub
clc
cwtl
shl
sub
les
sahf
cld
popf
pop
inc
adc
cmp
lcall
aad
insb
cmp
lods
je
in
lds
sub
imulb
mov
sahf
jmp
jo
pop
outsl
adc
or
aas
mov
xchg
test
dec
pop
outsb
in
jns
push
xchg
and
mov
mov
cmp
pop
or
xor
test
cmc
idivl
in
mov
fldt
shll
imul
cmp
jmp
orl
push
push
cmpsb
in
pop
xchg
ret
aad
pop
sub
imul
dec
hlt
xchg
jb
xor
into
xchg
and
mov
les
pop
pop
in
cld
jnp
fs
mov
push
pop
jae
push
or
rcll
jge
push
and
sbb
lret
shld
inc
mov
jmp
mov
divb
lret
in
jp
out
repnz
cltd
addr16
sar
add
cmp
inc
push
sbb
movsb
movb
popa
xchg
out
push
mov
cmp
lea
sub
and
jno
arpl
cli
mov
aad
mov
pushf
pop
es
inc
xchg
cmc
and
in
bnd
std
ja
sbb
les
dec
in
or
ret
cli
xor
mov
jae
testb
push
js
and
loope
push
push
mov
xchg
inc
je
add
lds
adc
sub
or
cmc
hlt
push
dec
xor
inc
ret
adc
xor
inc
mov
mov
fistps
insb
stos
mov
enter
mov
adc
sbb
adc
clc
add
pop
dec
outsb
fmull
sbb
out
std
mov
mov
test
mov
mov
inc
mov
divb
sbb
ja
mov
mov
aad
rolb
ret
mov
jns
xchg
aaa
cwtl
leave
dec
sbb
pop
ss
push
lods
scas
cmc
imul
adcl
jl
jmp
add
adc
cld
pusha
mov
fisttpll
sarb
dec
push
movsl
push
sar
nop
enter
inc
mov
in
mov
popf
and
popf
xchg
leave
adc
shlb
pop
ss
popf
dec
mov
fists
sub
jp
push
mov
add
or
ds
in
scas
adc
shl
mov
cmpsb
sbbb
inc
jnp
lcall
mov
popf
cmp
dec
add
ror
fbld
repz
std
xchg
or
stos
inc
lds
das
sahf
sub
fidivrl
idivb
or
out
mov
adc
inc
xchg
popf
cmpsb
push
add
adc
cmc
jecxz
pop
test
shll
jae
and
mov
and
int3
xor
mov
leave
dec
out
imul
lret
cs
aam
daa
int3
nop
mov
and
es
dec
sbb
xchg
cltd
adc
inc
and
jecxz
arpl
movswl
xor
orb
aas
rcrl
icebp
push
dec
pop
sub
std
sub
or
bound
aad
repz
ficomps
bt
or
js
jbe
jbe
jle
pop
jbe
add
movsb
sbb
in
aam
inc
dec
negb
adc
mov
dec
cmpsl
shl
mov
lret
sub
sub
mov
add
mov
fwait
push
add
cs
xor
std
jmp
das
das
add
mov
mov
jne
jge
jne
movsb
daa
out
rcr
fsubrl
repnz
cmp
adc
insb
test
or
push
lds
mov
mov
jns
shl
ljmp
scas
xchg
and
cmc
out
aad
pop
mov
cmp
std
dec
rorb
out
clc
mov
lods
jne
adc
xchg
cmpsl
popa
sbb
xor
adc
lret
movl
xor
stos
mov
and
repz
jmp
shl
xchg
xchg
push
fsubrs
push
mov
jmp
push
mov
push
loope
sub
je
or
stos
int3
and
mov
dec
jmp
sub
imul
cltd
mov
mov
xor
xor
xor
out
or
movsb
push
test
inc
or
mov
xchg
add
inc
fs
icebp
inc
cs
xor
add
mov
cmp
daa
and
jp
pop
push
into
sbb
pop
ret
sbb
jnp
scas
sbb
fdivr
popa
mov
sub
sbb
mov
mov
and
adc
in
inc
hlt
xchg
sbb
imul
cmc
rdpmc
or
ds
and
or
loope
pushf
imul
mov
jge
fdivs
mov
lods
and
movsl
mov
push
mov
fsubl
bound
int3
dec
jno
mov
jbe
sbbl
ljmp
mov
cmp
dec
mov
pop
jmp
add
xchg
inc
push
xor
js
add
dec
dec
push
push
xchg
mov
mov
sub
and
push
lods
add
aad
mov
push
xchg
les
fnstcw
jns
cwtl
push
xor
movsb
xor
out
call
inc
mov
mov
lcall
jecxz
sub
dec
adc
adc
xchg
les
leave
sbb
or
mov
inc
add
sbb
mov
clc
jb
rcrl
idivb
iret
inc
sbb
jp
xor
fucomip
je
pop
nop
xorl
sbb
daa
push
inc
ljmp
push
adc
xor
in
hlt
test
movsb
add
outsb
in
push
sbb
movsl
cld
sbb
out
imul
lahf
cmp
push
addr16
lea
cmp
lods
dec
adc
pushf
mov
stos
pop
fistpll
pushf
push
push
add
add
jp
sub
je
push
fiadds
jae
jns
add
sub
xor
adc
ret
inc
rcr
scas
ljmp
inc
sub
adc
sub
mov
inc
es
mov
pop
lret
mov
dec
jmp
xchg
jne
mov
frstor
nop
cmp
cmp
pusha
add
xchg
jae
push
sti
test
gs
inc
jae
int
stos
rolb
push
xchg
loope
ljmp
repz
push
cmp
push
cmp
mov
imul
aad
push
arpl
in
sub
pop
cld
xchg
mov
pushf
es
sub
test
jecxz
and
int
inc
sbbl
or
cmp
sbb
roll
and
mov
push
mov
dec
pop
cmp
adc
and
mov
lret
cmc
sub
adc
leave
cmp
cld
sahf
and
aaa
cli
cs
fxch
pushf
or
ficomps
leave
xlat
test
jno
inc
inc
mov
cltd
cmpsl
lret
dec
sub
and
sti
adc
mov
and
pushf
cmp
das
idivb
icebp
xchg
push
sbbb
push
outsb
lock
sar
sbb
cmc
add
jo
pop
imul
into
xchg
cmp
jne
xor
cltd
jbe
in
adc
add
cmpsl
sti
mov
mov
aaa
push
loop
push
jo
push
pop
mov
out
imul
inc
dec
push
test
push
pop
mov
inc
sub
push
testl
lret
scas
dec
movsl
lock
into
insl
cwtl
popf
ficoms
xchg
xor
push
mov
fidivs
ljmp
fsin
loop
jg
out
and
cmp
lock
cmp
out
call
mov
add
and
mov
insl
and
je
jae
push
sbb
daa
mov
clc
mov
jae
pop
push
jae
shl
pusha
xchg
dec
inc
nop
out
dec
cwtl
add
cmc
in
sub
test
rclb
pop
idivb
scas
or
popa
mov
aas
push
lock
sbb
pop
sbb
dec
and
mov
dec
fldenv
stos
in
add
in
mull
xor
daa
push
fsubrp
fisttpll
adc
push
xlat
ret
jne
jle
inc
dec
inc
leave
xchg
sbb
repnz
mov
mov
fwait
xchg
leave
out
mov
sub
dec
inc
outsl
xor
sbb
adc
cmp
mov
notb
pop
mov
rcr
out
or
lods
pushf
imul
adc
push
test
jae
gs
inc
cmp
ss
in
fcomip
sbb
filds
out
stos
push
repnz
fnstsw
popf
and
in
inc
or
aaa
pop
in
loop
ss
cmp
mov
dec
lods
imul
outsl
testb
push
sbb
loop
shlb
addr16
dec
and
mov
insb
daa
mov
int
add
ss
imul
mov
pop
stos
shll
jbe
xor
sbbl
aas
or
adcl
adc
sub
lret
sub
fsts
ret
add
repnz
pop
lods
pop
cmp
jmp
jecxz
push
stc
das
stc
xor
inc
stc
test
ret
mov
lods
mov
mov
je
imul
es
push
pop
jge
scas
xchg
mov
xchg
aas
inc
mov
out
gs
or
mov
out
and
pop
jg
lods
lock
cmp
cmc
dec
fucomp
mov
iret
xchg
xor
or
inc
pop
fwait
mov
or
testb
mov
arpl
pop
inc
enter
push
push
pop
add
sahf
lahf
call
fnstcw
xor
leave
addr16
mov
scas
xorb
pop
jmp
adc
cli
xchg
push
in
jb
fnstcw
sbb
mov
cmp
iret
mov
es
movsb
or
mov
fcomps
inc
jmp
stos
sub
sub
inc
sbb
inc
cmc
out
pusha
mov
xlat
push
dec
cvtpi2ps
xor
dec
add
and
sti
je
pop
mov
out
test
lahf
dec
or
adc
push
mov
xchg
xor
out
inc
cmp
les
js
ja
pop
xchg
rolb
jp
jmp
out
clc
sbb
es
xchg
push
lds
imul
xor
jmp
jmp
test
adc
int
jecxz
pop
inc
clc
or
pop
fsubrs
insb
das
cwtl
lea
aaa
shrb
cmp
push
push
je
push
pop
xchg
aad
pop
fs
mov
in
popf
push
jnp
fsub
decb
sub
xor
xchg
pushf
jnp
cmpsb
mov
test
cmp
fisubrl
or
push
jge
sarb
inc
sub
call
clc
or
es
add
sbb
jnp
push
std
jne
jmp
ret
shll
jmp
mov
sub
mov
je
mov
outsl
loopne
xor
addr16
and
and
and
ficoms
add
mov
inc
cltd
cmp
int
scas
and
loope
iret
sub
or
sub
inc
adc
fmul
cmc
adc
push
test
xchg
int3
loopne
out
fcoms
cli
fwait
call
call
das
push
jns
adc
mov
inc
adc
test
stc
repnz
fs
cmc
inc
nop
sub
fptan
pop
mov
or
fistl
and
repnz
cld
cmp
pop
test
sub
or
adc
xor
cmp
dec
testb
sbb
repnz
lcall
mov
sub
movsl
in
bound
call
movsb
push
jbe
in
pushl
push
ja
icebp
int
fwait
sub
push
clc
cld
pop
push
pop
ror
sub
jge
addl
inc
stc
xorl
mov
inc
cmp
sub
sbb
push
adc
imul
mov
mov
jnp
aam
fcomi
das
andb
out
xor
push
add
push
or
fadd
jbe
mov
dec
lahf
or
fisubs
sub
and
movl
and
inc
loopne
ret
call
fildl
loopne
push
enter
dec
leave
leave
mov
push
cmpsb
mov
mov
push
and
clc
daa
inc
xlat
and
cmp
jne
cmp
or
std
xchg
dec
movsb
mull
add
sbb
and
xchg
imul
loope
pop
push
dec
stos
adc
movsb
jp
sub
add
shlb
stos
notb
aas
out
xchg
jb
bswap
mov
dec
and
sub
mov
scas
sub
in
add
sbb
xchg
incl
push
cli
mov
ss
int
xchg
mov
push
subl
stos
add
xlat
jle
jo
jmp
cmp
hlt
jo
sub
mov
fidivrl
aas
push
push
scas
mov
add
xorb
mov
decb
cltd
aas
sub
pop
mov
les
jmp
adc
mov
inc
rolb
stos
test
imul
xor
out
cmpsl
in
sbb
jg
jg
cmp
mov
add
jno
dec
sub
aas
mov
and
movsb
jl
cltd
jno
lock
ss
test
shrb
push
cmp
dec
scas
inc
sbb
inc
negl
test
fcmovbe
insl
sbbl
add
inc
dec
pop
movsb
aad
or
push
lahf
mov
fmuls
xchg
js
sti
stos
xchg
cmp
mov
cmp
shl
xchg
mov
sub
cmp
sub
adc
mov
lahf
scas
jnp
nop
pop
sbb
fsubl
jl
jl
or
shrl
xchg
xchg
fisttpl
aam
stc
xor
xchg
out
or
arpl
jmp
popf
push
mov
lea
or
xchg
xlat
sbb
pop
in
xchg
push
stc
es
inc
pop
add
mov
out
cmp
clc
je
xorl
aam
cli
mov
out
hlt
jecxz
xchg
insl
xchg
jecxz
mov
int
sub
inc
dec
mov
popf
or
aad
and
ror
mov
popa
push
ss
xchg
push
fnstenv
aaa
int3
sbb
cli
notb
lret
rcrb
and
mov
loop
call
rolb
mov
mov
gs
dec
dec
jno
les
imul
les
clc
lds
sarl
mov
lea
and
mov
in
sub
lock
bound
std
out
or
gs
and
xchg
push
mov
rcl
xchg
andl
pop
rorl
dec
mov
fildll
dec
inc
popf
mov
inc
cmpsb
mov
ds
jmp
insl
cmpsb
jmp
push
pop
push
mov
sub
scas
cmp
sub
mov
incb
out
iret
jae
mov
adc
lods
imul
xchg
lock
xor
pop
mov
fsubl
xor
dec
inc
sub
xorb
enter
pop
pop
inc
int
push
rcl
dec
outsb
or
add
mov
lahf
inc
call
sub
mov
push
idivl
dec
popa
inc
mov
xchg
sbb
jecxz
adc
and
mov
adc
jb
sbb
nop
hlt
out
into
fs
mov
push
je
stos
fldenv
jg
mov
pop
aaa
mov
or
mov
xchg
stos
fiadds
mov
aaa
ljmp
push
test
in
fldenv
jne
out
js
jecxz
and
and
xor
notl
fidivrs
push
xor
push
pop
aas
cwtl
and
cs
lret
sbbl
les
gs
icebp
int3
or
popa
leave
jge
or
std
out
sahf
dec
jecxz
outsb
mov
repnz
jae
mov
lea
imul
std
shlb
push
int3
sbb
popa
xor
shl
mov
leave
mov
pop
jp
imul
cltd
inc
lcallw
xor
js
outsb
sub
pop
mov
mov
int
out
push
movsl
jns
lret
jae
das
jne
fiadds
dec
test
inc
pminub
dec
insl
xchg
nop
mov
inc
negl
add
dec
movsl
repz
mov
lret
cmp
push
or
sub
adc
sarl
sarl
or
pop
out
mov
lret
in
cli
cmp
je
sbb
or
mov
data16
mov
jle
cmp
popa
inc
scas
in
mov
dec
xchg
cmp
pop
lcall
sub
cmpsb
pop
loop
fists
mov
xlat
imul
pop
pop
mov
in
lds
movsb
or
dec
ja
in
jns
insb
push
cld
jg
push
icebp
lahf
sbb
out
clc
in
push
shrb
loop
xchg
mov
xchg
xchg
mov
ja
push
mov
lret
out
mov
ds
jge
loope
jge
cmp
mov
jp
out
sub
mov
test
enter
cmpsl
mov
les
dec
lcall
mov
repz
bound
and
idivl
out
and
add
sti
rol
out
ret
sbb
add
aas
mov
push
inc
push
dec
mov
add
dec
ljmp
mov
sbb
sub
inc
jg
andb
dec
lret
inc
cwtl
test
mov
dec
inc
jae
maskmovq
mov
fmul
daa
pop
mov
adc
push
sub
pop
push
add
jecxz
aas
jb
and
int3
ljmp
add
adc
icebp
mov
inc
jb
dec
or
cmpsb
sub
fbld
sub
shlb
pop
gs
push
push
stos
and
cmpl
fsubr
scas
and
popf
push
das
clc
ret
ret
mov
into
imul
push
cmc
dec
adc
sub
je
xchg
mov
xchg
push
jle
jp
cld
lahf
dec
js
scas
xchg
dec
add
nop
movsb
loop
out
jae
cmp
and
aas
xor
xchg
js
push
adc
or
les
std
data16
loop
dec
mov
xor
lret
cmp
xchg
sbb
pop
mov
adc
push
cmp
ss
popa
fstpl
lods
cli
add
adc
push
mov
hlt
inc
std
sbb
dec
cmc
mov
xor
mov
push
or
inc
mov
adc
mov
xor
lea
dec
mov
cmp
add
push
add
cmpsl
pop
clc
insl
pop
ljmp
stos
mov
decl
leave
xor
cmpsl
loope
sub
push
sbb
shr
jl
stos
and
test
mov
and
or
ja
or
sbb
in
push
sub
push
sbb
pop
ficoms
out
pop
xor
lds
pop
nop
lods
loope
and
or
pushf
mov
jp
repz
sbb
rcrb
movsb
dec
stos
xchg
outsl
cmp
enter
in
lcall
push
rorl
movsl
jmp
sub
xor
sub
xchg
ljmp
ror
lahf
int3
mov
pop
xchg
push
sbb
sbb
lods
rclb
sub
sub
cld
xchg
pushf
stos
addr16
sbbl
or
sahf
movsb
sub
cmpsl
sahf
cmp
add
hlt
pop
jge
cmpsl
add
nop
mov
cmc
shl
push
frstor
xor
cmp
add
jg
jnp
mov
orb
jmp
movsl
in
push
or
sub
mov
sbb
lret
fstps
and
add
in
xor
push
aad
imulb
fisubs
fcmovnu
adc
mov
rcrb
test
add
or
es
pop
and
mov
test
aaa
popl
xor
dec
repz
sbb
inc
in
sbb
xchg
mov
cmpsb
je
ret
test
cs
jge
gs
jns
add
or
bnd
icebp
xor
push
add
lods
imul
inc
cli
std
add
arpl
or
mull
in
fcmovnbe
push
jmp
mov
add
call
clc
dec
cltd
leave
hlt
imulb
mov
shr
add
int3
xchg
push
mov
int
inc
subb
adc
adc
xlat
adc
mov
sub
arpl
sub
pop
mov
mov
mov
stos
leave
movsl
test
adc
cmp
jmp
and
outsl
dec
mov
cmp
xlat
inc
mov
js
scas
mov
outsb
clc
inc
bound
mov
push
pop
test
pop
mov
je
sub
in
imul
mov
inc
scas
je
sbb
fdivrl
cmp
sub
out
sti
lods
inc
mov
pop
test
testb
out
shrl
stos
insb
mov
sub
add
pop
pop
xor
xor
push
pop
addl
xor
and
out
div
icebp
jg
add
sbb
dec
mov
je
jp
xor
ret
popf
and
cli
out
aaa
icebp
lret
or
add
inc
pusha
ds
push
mov
test
push
repnz
lods
mov
xchg
cmp
sbb
push
fcoml
push
lret
in
in
xchg
mul
stos
mov
loope
sub
repz
loope
int3
and
mov
test
lcall
ret
xor
sub
mov
test
inc
adc
xchg
mov
inc
or
shll
or
push
scas
sbb
jno
push
dec
push
xor
xor
sub
addl
xchg
jno
push
pop
repz
mov
push
xchg
push
mov
rolb
hlt
jnp
adcb
movsl
mov
sbb
add
jmp
mov
pop
das
add
cmp
rsm
fdiv
inc
mov
or
out
call
sbb
sub
xchg
lret
mov
xor
call
fstp
movsb
mov
push
and
cli
fsincos
jmp
mov
xchg
add
push
cmp
dec
mov
and
mov
dec
inc
imul
test
in
xor
out
mov
xor
jp
int
ja
mov
cmpb
lahf
inc
inc
gs
ret
sbb
jnp
push
jbe
jmp
iret
mov
call
enter
ds
jae
ficoml
ljmp
mov
dec
inc
xchg
das
cmp
xchg
test
ljmp
inc
dec
aaa
mov
adc
sub
adc
xchg
cwtl
mov
stos
and
ret
cs
cltd
ds
cltd
mov
inc
rcll
cmp
push
jnp
das
test
pop
adc
insb
pop
mov
pop
sub
andb
inc
mov
stos
or
fiaddl
jg
scas
cmp
dec
jl
jns
loope
mov
repnz
in
push
out
and
sub
adc
xchg
mov
jo
push
jnp
adc
das
mov
inc
jecxz
cmp
mov
xor
pop
hlt
dec
sarl
fmul
iret
mov
lcall
ljmp
adc
sbb
mov
rol
jl
aas
mov
mov
add
push
mov
stc
into
dec
insb
mov
movsl
cld
xchg
cmp
fldl
lods
xor
pop
sti
sub
pop
mov
loop
add
pusha
cmp
jae
dec
pop
shr
stc
pop
loopnew
lock
daa
jns
jae
outsl
adcb
mov
popa
dec
mov
adc
sbb
cli
push
clc
mov
add
fisttpl
idivb
mov
jns
bound
pop
or
pop
negl
test
xchg
cmp
adc
scas
or
inc
pop
adc
call
stc
imull
in
inc
aad
subl
stos
pop
movsb
aaa
lds
xchg
jmp
jl
mov
mov
add
ret
and
ljmp
cmpsb
mov
clc
jnp
scas
mov
adc
push
push
sbb
dec
jb
dec
pop
mov
movsb
inc
or
sub
xchg
fwait
mov
pop
inc
loope
pop
push
xchg
faddl
xlat
sub
adc
pop
cmpsl
fstps
lock
jo
dec
aaa
call
and
inc
outsl
ret
cmp
lret
add
or
mov
mov
pop
mov
or
out
decb
and
outsl
fs
mov
mov
fs
int
or
rorb
pop
or
mov
loop
outsl
dec
cmp
adc
sub
outsl
std
cld
cmp
inc
xchg
out
std
adc
shl
mov
cmpsb
in
clc
popa
fisttpl
sub
mov
mov
mov
push
nop
xor
sbb
ficomps
scas
or
loopne
xlat
push
mov
std
imull
std
stos
lea
aam
adc
dec
gs
std
dec
cltd
cmp
inc
inc
sti
add
into
xchg
cmp
fcmovnb
mov
sbb
dec
mov
lahf
push
dec
loop
or
or
cld
add
int3
xor
shl
jge
imul
or
fsub
ret
loope,pt
push
adc
outsb
adc
add
xor
pop
loop
repnz
movsb
aad
and
movsb
daa
jae
cmp
icebp
jns
sbbl
push
mov
sbb
nop
in
jbe
mov
mov
add
outsb
mov
or
or
xchg
icebp
in
mov
add
clc
hlt
or
stos
outsl
int3
cwtl
jbe
rcrl
shrb
cmp
rcl
xchg
mov
jp
or
shlb
imul
mov
sarb
mov
cltd
push
inc
int3
shlb
jbe
fs
xchg
push
xchg
xchg
aas
adc
xor
adc
ret
jle
sbb
mov
pop
sub
imul
push
pop
pop
add
cmp
mov
jle
jmp
pop
cmp
mov
inc
mov
scas
ss
repz
pusha
lret
or
loop
sub
aam
or
mov
mov
mov
pop
scas
fsubl
lcall
mov
mov
or
sbb
mov
jb
pop
mov
inc
add
cmc
dec
inc
lock
jmp
bound
lds
out
cwtl
adc
lock
psadbw
lock
xchg
adc
xor
xchg
push
inc
and
or
mov
test
ret
repnz
fisttpl
push
ret
add
mov
frstor
lds
xor
dec
ffree
cmp
dec
scas
sub
stos
fstp
mov
and
sbb
js
pop
scas
cld
dec
inc
addb
pop
lahf
mov
fldcw
nop
mov
repz
dec
lcall
jle
mov
hlt
test
and
enter
sbb
idiv
pusha
sbb
ret
mov
neg
lods
scas
faddl
fisubl
loopne
fnstsw
pusha
pop
sub
and
and
out
pop
or
inc
mov
pop
sbb
divl
cmp
lods
mov
jecxz
std
sbb
or
out
fadd
fcmovu
fcomi
aas
arpl
ret
sbb
mov
fwait
xor
loope
in
mov
hlt
inc
test
xlat
jl
cmpsl
std
ret
stos
jae
pop
dec
add
cld
cltd
adc
xor
shrb
loopne
push
push
xchg
jae
jbe
push
icebp
loopne
push
rol
mov
out
shlb
sbb
dec
jg
sub
iret
mov
icebp
and
xor
in
cli
pop
inc
jle
into
aas
mov
pop
aaa
shlb
outsb
imul
clc
outsb
mov
iret
fiadds
insb
lret
add
cld
pop
outsl
sub
lea
data16
or
and
mov
mov
shlb
jns
divl
push
jne
xchg
jne
fisttpl
add
div
fidivs
cltd
fs
js
jmp
stos
jge
and
xchg
xor
inc
xor
pop
test
push
xchg
notb
test
mull
mov
loop
iret
mov
xor
mov
loop
stos
loop
pop
shll
dec
insl
xor
sbb
cmp
aas
dec
rol
scas
dec
push
jl
ljmp
push
shlb
mov
iret
lahf
mov
pop
mov
xchg
imul
lcall
ret
das
jbe
test
arpl
push
popa
and
rcll
or
js
out
enter
xchg
inc
xchg
fistps
push
jge
mov
xor
push
dec
lea
push
push
int
ljmp
rcll
push
aas
subb
push
mov
stos
lret
pop
leave
movsb
pop
je
jns
lods
testb
lods
xchg
mov
push
sbb
inc
test
es
push
sbb
cld
sub
inc
inc
stos
into
out
jle
pop
push
in
mov
dec
xor
sahf
stos
aaa
data16
rcrb
loopne
jae
arpl
inc
sbb
xchg
lret
or
adc
cmp
pop
inc
xchg
in
mov
leave
jo
rcrl
or
and
adc
repz
fidivrl
sub
or
dec
and
xor
pop
jnp
aas
xor
adc
sub
push
test
int3
aas
inc
jmp
js
cmc
inc
stc
push
mov
lock
clc
loopne
dec
add
movsl
insl
dec
in
jns
pop
sti
lcall
inc
inc
and
mov
mov
cmp
outsb
xchg
sbb
mov
mov
fyl2x
cmp
inc
mov
cmpsl
mov
push
push
repz
mov
mov
mov
add
adc
inc
mov
sub
ret
sbb
lds
add
repz
std
test
test
imul
js
xchg
inc
lret
push
lret
mov
sub
push
sbb
jns
jno
jbe
scas
add
dec
and
mov
subl
pop
mov
outsl
adc
dec
sub
in
cld
bts
xor
mov
fdivrl
cli
cmp
pop
xchg
ja
xchg
idivb
mov
inc
enter
mov
jae
ficoml
ja
imul
aas
popf
or
jl
xor
divl
push
mov
mov
mov
out
aam
jg
sub
mov
or
adc
addl
mov
test
cltd
cmpl
mov
popf
gs
imull
js
das
xor
les
xor
sbb
mov
pop
dec
in
add
shll
out
les
fdivrl
inc
inc
rolb
hlt
pop
push
in
rcrl
ret
jnp
test
sbbl
mov
loopne
sbbb
mov
jns
hlt
xor
push
loope
xor
push
fcmovnu
mov
imul
imul
repnz
es
inc
mov
in
inc
call
sbb
lea
ret
fdivrp
arpl
clc
shlb
into
mov
sbbl
pop
shl
sub
ja
cli
or
daa
sbb
movsb
scas
xchg
sbb
into
push
lea
mov
sbb
dec
mov
mov
mov
in
orl
movsb
mov
pusha
mov
push
sub
mov
das
push
xchg
jp
jne
iret
pop
sub
xor
pushl
xchg
mov
stos
stc
jne
aaa
inc
pop
mov
nop
iret
cmp
mov
push
sti
pop
xor
jne
pop
adc
xchg
into
leave
sub
ret
mov
es
incl
loope
adc
dec
mov
stos
mov
mov
inc
cld
pop
mov
mov
lcall
stos
aaa
sub
mov
mov
jnp
loopne
xchg
mov
push
xor
jg
mov
movsl
popa
repz
pop
push
scas
es
mov
clc
mov
sub
xchg
ss
cmpsl
pushf
xor
xchg
inc
push
and
fwait
les
mull
add
xor
insl
xor
aas
imul
out
mov
callw
arpl
sub
add
mov
xchg
sbb
mov
or
xchg
out
test
dec
repz
pop
push
pop
cmp
stc
hlt
aaa
mov
mov
lods
enter
movsb
rcrb
outsb
mov
lods
movsl
mov
arpl
fwait
out
xor
icebp
lret
jae
mov
jno
cmpsb
faddp
dec
sub
pop
mov
xor
out
sar
pop
xlat
push
ret
cmp
push
fs
adc
cmc
in
shll
adc
sub
addr16
jb
sbbl
xchg
xchg
push
mov
dec
arpl
popa
ds
and
ret
cltd
push
sub
add
ss
aaa
push
mov
testl
mov
pusha
inc
adc
sub
fwait
xchg
stos
std
jecxz
and
shlb
mov
jl
out
jg
mov
jbe
sbb
jns
sub
sti
cmp
xor
mov
clc
jecxz
pop
pop
jnp
adc
mov
or
push
inc
cmc
sti
pop
dec
pop
sbb
aam
dec
mov
lahf
ja
mov
or
cli
fsubrp
mov
test
cmp
inc
sarl
inc
das
std
js
jg
push
mov
lock
sub
add
mov
xor
push
mov
jae
outsb
or
xchg
cmpsb
inc
adc
mov
dec
mov
mov
sbb
das
sbb
pop
cmp
mov
or
cld
mov
xor
ret
cwtl
addl
scas
loopne
pusha
inc
push
dec
xor
dec
add
inc
call
subl
lods
mov
sbb
outsb
inc
imul
sub
sub
aaa
jae
test
aas
mov
clc
push
push
lahf
jne
pop
jg
popa
mov
in
jo
jmp
sbb
sahf
push
lea
mov
jae
jno
jle
push
or
pop
xlat
insb
xlat
dec
sub
xor
push
loop
jno
mov
adcl
inc
fdiv
mov
inc
xchg
data16
add
inc
or
xlat
mov
sub
les
loope
mov
jne
mov
jb
lcall
pop
pushf
aad
repnz
xchg
adc
fmuls
pop
aaa
sbb
stos
xchg
dec
sbb
inc
into
adcb
fistpl
sbb
pushf
xor
pop
inc
in
fwait
mov
lcall
sbb
xchg
inc
sbb
shrb
mov
sub
lea
lret
xchg
dec
test
bound
jmp
frstor
xlat
mov
xchg
movb
add
aas
insl
lock
mov
jge
fwait
add
pop
es
insb
dec
or
xor
sbb
cmp
pop
mov
or
in
aad
cwtl
filds
insl
mov
stos
xorl
cmp
xor
push
mov
shrl
addr16
push
aad
repnz
in
pop
jnp
flds
daa
jecxz
dec
mov
daa
pop
mov
add
xor
push
mov
addb
movsb
enter
xlat
in
leave
cmp
stos
mov
rorl
nop
fs
sub
pop
roll
mov
test
mov
cmp
push
dec
loope
mov
jmp
sti
add
and
sbb
cmp
andl
jle
je
mov
cmpsl
out
mov
inc
in
dec
into
and
sbb
adc
or
mov
add
mov
dec
movsb
inc
jg
loope
stos
mov
lods
sub
stos
test
orb
jmp
adc
in
mov
jnp
xor
clc
dec
call
jae
xlat
or
mov
inc
dec
sub
cmc
sbb
sub
lds
mov
push
xor
mov
divl
das
pop
mov
xor
mov
xor
clc
mov
push
adc
or
cli
and
and
into
and
dec
inc
jg
jae
mov
ljmp
push
leave
inc
in
or
mov
cmp
pop
xchg
cli
out
mov
adc
fadd
cmc
jecxz
aas
mov
cli
inc
xchg
lods
sub
cs
mov
sbb
ss
fisubrs
roll
cmp
mov
mov
xor
sbb
push
push
data16
rcr
movsl
adc
rcrb
xchg
call
pop
jg
sbb
aas
push
std
js
fidivrs
inc
inc
call
cmpsb
test
or
movsl
mov
sub
mov
and
out
or
push
adc
gs
cmp
push
or
and
stc
add
fsubs
add
rol
loopne
push
push
popa
mov
and
mov
les
imulb
push
cmp
mov
push
ljmp
in
outsb
cwtl
push
sahf
or
sbb
sbb
or
pop
jnp
rorl
mov
mov
sub
jp
xchg
pushf
push
pusha
das
sub
movsl
stos
and
nop
dec
adc
and
in
adc
push
fsubrs
xchg
sarl
popa
mov
and
fbstp
jo
fucomi
lret
dec
mov
xlat
fcoml
incb
in
xchg
add
rcrb
and
rcr
adc
ljmp
inc
xor
cmp
pusha
cmp
cmp
inc
push
mov
fadd
enter
add
xchg
in
pop
pop
mov
add
add
pop
push
movsl
clc
sbb
push
sub
xor
inc
pop
fwait
lret
loopne
into
loopne
lret
or
out
xor
mov
xchg
lret
adc
or
inc
dec
push
mov
sbb
aas
mov
jnp
fdivl
repz
ret
add
add
mov
push
popf
daa
inc
pop
mov
icebp
loop
sub
sbb
aaa
push
inc
andb
cmp
sub
pop
mov
pop
jns
lock
inc
pop
mov
pop
loop
push
adc
mov
adc
push
xor
das
mov
leave
cmpsl
mov
sbb
push
mov
arpl
inc
adc
stc
push
ljmp
mov
push
loope
divb
addr16
adc
sbb
sbb
testl
popa
pop
lods
push
bound
push
rol
cmp
ficompl
fsubl
pop
les
roll
mov
dec
lods
add
adc
mov
enter
inc
xor
fldl
xchg
adc
push
ja
jne
inc
jnp
push
ss
pop
xor
push
scas
nop
pop
stos
das
push
pop
jg
add
sahf
dec
ret
mov
dec
pop
xor
jge
jb
ss
test
mov
push
push
fdivp
mov
gs
jbe
xor
or
ficompl
sbb
or
or
outsb
mov
inc
pop
adc
fbld
fcos
cmpsl
mov
rcll
jmp
sub
cmp
rol
sub
sbb
test
jl
call
es
ds
insb
and
cmp
cmc
mov
subl
jno
xchg
mov
jge
push
aad
rcl
movsl
mov
stos
fcomip
mov
and
icebp
jbe
push
out
repnz
xor
pop
xchg
adc
xchg
iret
jge
xchg
clc
inc
sbbl
inc
std
test
lea
push
scas
dec
lahf
xor
xor
push
push
into
dec
outsl
mov
cwtl
and
loopne
xorl
out
ret
push
mov
add
or
cmpsb
stos
inc
mov
xor
jb
mov
shrl
mov
sbb
fwait
notb
xor
mov
in
dec
lcall
xchg
insl
adc
sti
cmp
and
push
mov
lods
icebp
xchg
xchg
ficomps
out
jo
int
jmp
cmpl
push
imul
push
and
loopne
lea
xchg
int
mov
xor
jo
sbb
or
mov
fistl
jnp
mov
es
pop
outsl
xchg
jnp
pop
fs
ret
test
hlt
sub
icebp
mov
arpl
daa
lcall
jb
sbb
or
adc
loopne
pop
adc
adc
repnz
out
xor
mov
pop
xor
fistps
into
in
and
cmp
dec
jnp
fsubrl
out
shr
daa
add
shlb
gs
adc
cwtl
lods
fistpll
test
out
aas
dec
je
add
jno
lods
xchg
mov
push
stos
inc
xchg
rcl
or
mov
sbb
pop
and
iret
push
in
cltd
inc
or
and
inc
jl
inc
add
clc
cmp
leave
test
xchg
ja
call
xchg
cmp
dec
inc
in
call
sbb
fstps
adc
dec
fldcw
stc
daa
dec
mov
pop
jo
jge
scas
loopne
sbb
popf
add
sbb
js
and
add
cmp
or
mov
add
mov
stos
jp
adc
inc
lds
out
stc
bound
movsl
pop
aad
pop
dec
jl
mov
and
mov
inc
adc
mov
rcrb
xchg
clc
jmp
mov
adc
push
in
add
rol
cli
js
lcall
push
mov
in
movsb
jl
movb
call
cmp
mov
rcl
in
fs
sahf
jno
int
fistps
out
adc
xor
shll
jns
loope
mov
mov
push
push
xchg
mov
xor
mov
adc
xor
jle
outsl
jge
js
lods
jle
fistpl
call
mov
fmuls
fcoms
lret
nop
out
and
and
sarb
popf
idiv
out
jmp
jmp
mov
aas
xchg
aas
ss
lret
xchg
mov
fcmovnbe
adc
jo
lret
iret
jb
sti
out
popf
mov
dec
inc
adc
inc
es
sbb
mov
cli
repz
add
pop
sub
adc
repnz
addl
xor
in
pop
mov
das
jbe
je
sbb
jmp
int
sbb
push
cmp
les
mov
add
adc
int
jecxz
pop
inc
mov
outsl
mov
ds
std
inc
cs
hlt
pop
inc
imul
loop
in
and
push
push
mov
xchg
mov
insl
dec
jnp
push
into
cmpb
lahf
scas
cmp
test
jae
ret
lods
jmp
insb
sarl
adc
cmpsb
or
and
mov
mov
jnp
testb
pop
cli
cmp
test
dec
mov
xchg
xchg
pusha
pop
jp
mov
sbb
add
pop
mov
fimuls
push
and
mov
imul
stos
jecxz
cmp
lea
jo
les
inc
xorb
icebp
mov
and
mov
mov
movsb
mov
lcall
cmp
lret
lret
and
jecxz
mov
push
fldt
sub
jl
out
dec
sub
mov
mov
ficoml
and
and
pop
sti
jno
lahf
or
xchg
lods
and
call
jnp
mov
sbb
mov
mov
pushf
js
fldcw
pop
cli
stos
out
and
setl
test
ds
dec
jb
adc
pop
ret
inc
dec
pop
pop
test
inc
cmp
les
xorl
xor
or
adc
pop
inc
sti
cli
jo
jp
push
ret
sub
pop
xor
jle
dec
bnd
mov
lret
pop
in
loop
scas
and
pushf
pop
fbstp
jecxz
pop
cmc
pusha
je
mov
pop
add
test
and
dec
sub
ss
xchg
ds
jle
mov
ss
shlb
add
adc
jo
roll
pop
xchg
push
or
jge
xor
cmp
cs
mov
add
lods
mov
aas
mov
pop
xchg
push
push
sub
sbb
pop
paddusb
push
shl
and
out
and
mov
pop
cmpsb
ds
das
aam
inc
mov
jbe
repz
push
fistpl
sbb
or
pop
xchg
int
mov
orl
aaa
pop
dec
loopne
mov
pusha
arpl
clc
lret
pop
or
jb
and
fld
sbb
int
sub
or
imul
jmp
push
sbb
add
mov
mov
mov
lods
and
jbe
pop
repnz
add
push
fiaddl
xor
bound
pop
inc
cwtl
out
inc
or
dec
or
daa
lea
mov
jge
and
icebp
loop
pop
and
test
mov
mov
fisubs
sbb
add
ret
rclb
mov
adc
inc
pop
jmp
scas
inc
jae
cmpsb
adcl
mov
inc
icebp
mov
mov
xchg
fdivrs
jbe
imul
nop
cmpsb
mov
fdivs
shrl
sbb
aad
pop
and
xchg
ss
stos
data16
ret
and
sti
ja
inc
and
nop
lods
push
lods
je
adc
in
inc
inc
push
push
mov
ror
add
ret
rcl
ds
insb
xor
movsl
jae
iret
jae
rorb
arpl
sarb
and
lahf
cli
imul
xor
mov
xchg
loop
inc
cmp
ljmp
aam
cmp
or
mov
jecxz
loopne
jne
movsl
pusha
mov
imul
lock
jg
ss
leave
sbbb
jnp
pop
xlat
imul
fidivrs
fnstcw
xchg
mov
xor
rolb
iret
imul
cmc
lret
xchg
test
shll
ffreep
ret
xor
push
imul
in
and
inc
mov
icebp
pop
mov
push
frstor
fstl
inc
stos
jo
xchg
movsl
loopne
jmp
mov
call
outsl
jbe
mov
pop
out
in
and
shrb
das
jmp
push
out
test
jmp
push
test
sub
fnstsw
and
outsb
lods
sahf
jmp
and
jg
pushf
popf
ja
in
jae,pn
jne
outsl
in
cmc
cmpb
sbb
xchg
push
test
dec
inc
dec
outsb
push
int3
cmpsb
ds
insb
movsl
add
frstor
loope
mov
add
scas
imul
stos
sbb
out
mov
iret
lahf
xchg
fisttpll
mov
pop
mov
mov
lret
push
jae
xor
movsl
dec
add
xor
shll
jg
xor
mov
neg
pop
bswap
push
imul
xchg
jl
adc
sbb
pop
or
bound
inc
mov
jb
pop
dec
xchg
test
cmp
inc
test
inc
inc
xchg
leave
fstl
cmp
inc
or
leave
add
jmp
fisubrl
cmp
outsl
enter
pop
jecxz
xor
hlt
mov
inc
pushf
je
mov
jnp
dec
add
mov
cmpb
pop
addb
dec
int
sti
js
aaa
andl
insb
movsl
cs
mov
shl
lods
lods
arpl
sbb
outsl
iret
cmp
dec
xchg
test
inc
push
jbe
lret
ds
jl
pushfw
or
mov
adc
ret
shrb
cld
rorb
inc
jne
sub
mov
xchg
jmp
movsl
iret
std
push
mov
and
mov
dec
loope
sbb
jbe
pop
out
stos
or
inc
fdivrs
imul
scas
inc
cmpsl
cmpsb
fiaddl
in
mov
jg
lds
fiaddl
cwtl
pop
jp
jg
mov
daa
mov
push
insl
xchg
xor
mov
jns
cmp
cmp
push
adc
gs
adc
pop
pushl
xor
test
dec
or
fmuls
mov
ja
cmp
loop
stos
xchg
cmpb
insl
hlt
daa
mov
cltd
ljmp
ret
cli
xor
push
push
or
ja
sahf
ja
fsubs
fimull
add
cmpsl
fisubrl
cmp
aaa
inc
enter
hlt
in
sub
fs
pop
das
cmp
dec
push
pop
int3
fistl
sub
test
mov
sbb
pop
pop
fnclex
sub
push
dec
push
cmp
ljmp
adc
icebp
addr16
and
rorb
mov
aas
cmpsl
jge
xchg
fisttpll
fucom
xchg
out
icebp
lcall
add
bound
mov
ret
cwtl
int
cmp
inc
pop
das
pushf
jmp
cmpl
cwtl
pop
and
rcrb
insb
incb
insl
lret
aaa
mull
pusha
mov
pop
cmp
pop
jae
jbe
adc
xor
mov
xchg
xor
sbb
mov
enter
in
iret
xchg
aas
xor
into
mov
hlt
mov
sbb
rcll
out
ret
fs
mov
fiadds
int3
in
repnz
sarl
jb
cmp
mov
insl
std
pushf
push
sbb
test
or
push
dec
pushf
in
xrelease
jp
sub
stos
addl
sub
sub
popl
push
push
orb
xor
push
les
mov
int3
add
fisttps
cmp
push
dec
imul
add
xor
aam
jecxz
pop
cmp
jnp
jp
popf
and
outsb
add
sbb
repz
jnp
mov
cs
jp
cmp
lahf
add
inc
push
nop
dec
pushf
add
add
aad
inc
imul
push
imul
add
int
and
test
lock
aaa
xchg
ret
call
or
dec
lret
arpl
loop
add
sub
dec
daa
add
pop
sub
outsb
aad
cmp
arpl
mov
stos
fisubl
aas
jo
push
xor
mov
mov
cs
xchg
mov
pop
and
xor
fcomp
fdivrl
dec
das
push
aad
addb
push
mov
dec
movl
mov
sbb
pop
sbb
pushf
and
testl
daa
dec
insb
iret
pop
outsb
out
jbe
mov
pushf
movsb
negl
or
test
and
mov
sbb
jp
pusha
cmpsb
inc
aas
cmp
mov
js
bound
pop
mov
ficoms
movsl
jle
xchg
roll
insl
xchg
dec
jae
and
push
jg
addb
rorl
jl
cltd
leave
out
or
push
xchg
pop
pushf
pop
and
mov
xlat
in
dec
shll
stos
pop
sub
inc
fs
shlb
call
iret
xchg
call
lock
xor
cmpsl
adc
adc
subb
nop
rcr
mov
imul
pop
sbb
mov
std
add
mov
sahf
popa
mov
adc
dec
lcall
add
loop
cmp
out
mov
xor
cld
or
xchg
popf
repnz
cld
dec
test
xchg
fstl
xlat
jo
add
ds
push
ljmp
cmpsl
push
push
push
cld
adc
or
adc
push
xor
pop
or
dec
aad
and
sahf
js
scas
add
daa
jns
sti
mov
incb
cwtl
dec
sahf
push
clc
cmp
mov
cmp
add
pop
sub
mov
mov
test
and
mov
xchg
in
repnz
jle
lods
subl
sub
clc
ficomps
or
sbb
pop
add
inc
inc
call
inc
imul
adc
jle
xchg
jne
ret
cmpsb
ret
xchg
loop
test
jmp
push
add
test
or
or
mov
jecxz
add
movsb
fisttpl
loopne
test
lret
enter
adc
test
pop
dec
and
mov
push
jns
mov
std
xor
imul
jp
mov
mov
pop
xor
lock
imul
int
jge
jne
cmp
cmp
imul
imul
cmp
in
push
jae
ja
adc
stc
sub
adc
dec
insl
leave
mov
mov
push
cmp
mov
repnz
pop
push
mov
push
and
add
jae
scas
popf
ret
push
dec
test
out
mov
mov
int
les
jp
xchg
cmpsb
or
mov
bswap
pop
fs
sub
and
dec
imulb
lret
out
xchg
stc
loopne
cmp
adc
sub
sbb
or
mov
mov
clc
xlat
sti
dec
push
pop
int
mov
lds
jmp
push
iret
cwtl
xchg
sbb
loop
sbb
in
add
adc
cmp
xchg
cmp
jmp
fcompl
aam
mov
mov
add
imul
stc
cwtl
dec
into
xor
inc
sbb
repnz
adc
jne
sbb
lea
mov
add
mov
jle
fmull
add
cwtl
and
pop
leave
jo
rol
add
rcrl
sbb
jbe
xchg
ss
cmpsl
lahf
jmp
xchg
lret
sti
mov
sbb
pop
xor
mov
pushf
loope
bound
mov
cmp
inc
lods
in
pop
sub
sbb
inc
out
aam
mov
sub
enter
lods
add
mov
movsl
dec
mov
mov
mov
dec
loope
ss
adcb
mov
mov
xor
push
add
xchg
lret
cmpsb
pop
or
sbb
push
sbb
fwait
movsl
je
adc
imul
xor
lods
mov
jo
push
hlt
push
insb
cmp
cmc
ja
js
ja
jns
aam
jmp
xchg
decl
push
hlt
ljmp
ret
push
add
add
loope
das
jge
sub
arpl
push
xor
push
jbe
iret
mov
mov
add
popa
mov
decl
test
mov
mov
test
cmp
hlt
bound
cmpsb
or
mov
loope
nop
popa
and
push
mov
or
xchg
cmp
repnz
or
lods
push
out
push
lock
loop
das
push
sbb
fildl
cltd
or
push
sbb
aam
inc
cmp
jnp
in
shrl
stos
leave
movsl
and
daa
repnz
gs
sahf
fucomp
mull
arpl
or
dec
adc
sahf
sti
int3
test
push
in
daa
dec
jns
int3
outsl
push
popf
dec
fldt
jb
xor
push
js
inc
sahf
dec
ss
and
pop
mov
inc
push
or
outsl
cmpsb
mov
add
jno
mov
inc
out
push
mov
into
enter
adc
fisttps
push
xchg
or
sbb
push
imul
xor
jl
jbe
loopne
mov
jp
pop
sub
jmp
push
xchg
loope
adc
into
bound
sub
fstpl
jge
sbb
inc
xor
out
push
aam
in
aaa
jecxz
dec
mov
out
shll
lahf
movsl
xor
aas
fidivs
loop
cwtl
mov
pop
test
ljmp
inc
in
and
stos
cmp
imul
inc
fidivl
jge
and
cli
push
inc
and
jmp
and
fidivs
sub
lods
scas
popa
pusha
ss
xchg
insb
cs
rolb
je
sub
xchg
mov
lods
outsl
xlat
jmp
push
sub
test
add
mov
add
mov
adc
lods
push
dec
out
sub
push
bound
leave
lcall
dec
fisttpl
inc
in
pop
repnz
fcomps
aam
push
lds
sahf
into
inc
stc
push
repz
jge
jge
test
ss
aaa
popf
outsl
lock
insb
lret
cmp
jnp
arpl
insb
sti
leave
sti
add
daa
sub
jmp
in
pop
and
cmp
lods
sub
rcrb
test
popf
loop
push
mov
add
xor
xchg
xor
cmpsl
cmp
pop
jae
out
call
xor
xor
and
lcall
xor
and
mov
andl
iret
aad
icebp
mov
test
bound
cmp
mov
jno
pop
in
jnp
or
sbb
outsb
jge
mov
inc
cmp
shrl
lret
stos
das
pop
jl
out
in
mov
inc
mov
lock
push
push
fisttps
push
push
cmp
dec
add
or
aad
fimuls
scas
or
pop
js
adc
xchg
loope
inc
push
or
mov
clc
mov
xor
aas
jb
in
push
mov
push
sahf
subb
movsl
pushf
dec
mov
sbb
mov
insl
dec
inc
sub
lret
sub
test
adc
das
or
clc
mov
cld
in
inc
and
fcmovbe
imulb
xor
xchg
xchg
int
mov
or
sub
mov
mov
pop
lock
xchg
xchg
lret
fbld
nop
xor
jg
sbb
xchg
aam
xor
lret
imul
aad
pop
jae
sub
pop
sarb
pop
movsl
sub
popf
call
jno
test
xchg
pusha
movsl
and
scas
incl
insl
cmp
jns
sub
push
test
daa
pop
mov
mov
sbb
lds
push
cmp
js
ljmp
xor
aad
ss
push
jecxz
shlb
jp
mov
mov
out
fildll
rcll
or
iret
pop
add
ds
pushf
dec
adc
push
mov
lock
pop
dec
lds
xchg
addb
insb
movsb
adc
mov
fmuls
leave
int
rclb
push
mov
jb
inc
pusha
adc
repnz
divl
dec
clc
push
xor
sub
lcall
ds
mov
stos
addr16
ljmp
xor
lods
xchg
cmp
add
xchg
cwtl
add
jnp
inc
add
nop
xor
mov
lods
xchg
out
jbe
jecxz
or
rcr
loopne
subl
scas
dec
inc
jg
fldenv
cli
xchg
and
jb
or
inc
fwait
mov
and
xchg
mov
rorl
xchg
pushf
jg
cmp
mov
or
mov
movsb
cmp
sbb
aam
gs
stc
mov
jmp
mov
mov
or
sub
nop
scas
or
inc
jle
cmpsb
sbb
push
rol
sti
mov
jle
jb
test
std
aas
fadd
push
cmp
inc
lods
mov
popa
push
jmp
test
es
dec
xchg
sti
sarb
mov
jle
jl
jecxz
jmp
icebp
adc
test
dec
ss
jne
in
insb
cmp
push
mov
sub
int
mov
push
xor
bound
xchg
push
jl
vdivsd
test
inc
repnz
xor
in
cmc
lods
das
mov
jns
mov
mov
mov
loope
std
or
iret
ljmp
cmp
icebp
bound
jbe
lahf
adc
iret
jbe
mov
sub
xchg
arpl
in
outsb
mov
sub
xchg
cmc
or
jmp
out
mov
mov
sbb
pop
scas
loopne
jle
or
sbb
mov
out
pop
pop
xchg
inc
cmpsb
add
gs
fbstp
imul
mov
add
es
sub
xor
into
or
and
mov
jl
adc
xchg
or
lea
cltd
lods
mov
jo
dec
fs
sub
add
pop
movsb
outsl
adc
in
push
or
data16
pusha
mov
insb
lods
out
push
lret
data16
mov
mov
cmc
jp
movsl
repz
jnp
cmpsl
sbb
mov
sbb
inc
jbe
jbe
push
fs
xlat
stos
out
mov
fsubrs
jbe
mov
mov
repz
jmp
testl
push
mov
or
push
cmc
jmp
test
adc
dec
and
inc
jo
mov
xchg
xor
and
addr16
insb
sub
call
lds
int
cmc
pop
in
sahf
dec
cltd
xchg
dec
xorb
outsl
lods
push
arpl
inc
loop
out
call
adc
sbbb
pop
les
pop
xchg
sub
aam
jp
dec
hlt
daa
inc
fisubrl
pop
lcall
push
inc
in
bound
add
mov
out
pushf
adc
sub
cmp
inc
adc
sti
jecxz
stos
or
push
and
add
and
out
ret
lock
scas
jl
sbb
adc
add
mov
loop,pn
testb
sbbl
popl
xchg
cwtl
lahf
jecxz
int3
pop
and
and
jecxz
inc
dec
dec
test
lcall
movsl
xlat
and
sahf
insb
fcmovnu
mov
inc
xchg
adc
jae
ret
cmp
jl
xor
pop
mov
sub
cmp
cmc
ret
sbbb
ret
xchg
jg
or
sub
pop
xchg
stos
push
jno
xchg
out
mov
jnp
dec
sub
jne
stos
fstpl
inc
pop
clc
or
push
fs
jge
arpl
test
xor
cmp
jle
mov
or
dec
cmp
push
out
pop
outsb
aad
out
ja
loope
rcr
mov
call
mov
mov
repnz
inc
mov
lods
pop
repnz
decb
dec
and
mov
in
outsb
inc
adc
mov
cltd
pop
adc
lds
pop
ljmp
jg
fidivrs
ss
jnp
nop
mov
mov
in
bound
lock
xorb
cmpsl
xor
fstl
xor
xchg
sub
out
js
mov
adc
and
aad
xlat
daa
and
jne
push
adc
push
xor
nop
xchg
into
adc
insb
outsl
test
xor
mov
jb
sti
mov
jl
lahf
je
iret
jmp
nop
xchg
add
add
addr16
test
sbb
movsl
pop
pop
mov
add
mov
and
adc
mov
mov
jle
sbb
cld
nop
xlat
xor
test
imul
and
pop
inc
idivl
sub
fidivl
or
mov
sbb
xchg
int
or
fcmovnbe
xchg
mov
iret
push
push
cmpxchg
xchg
into
or
mov
scas
mov
in
mov
xchg
lret
cmp
dec
mov
ret
mov
negl
sarb
adc
leave
and
lahf
or
cltd
sub
ret
out
push
xchg
repnz
adc
pop
into
push
or
add
inc
pop
mov
shlb
loopne
xchg
adc
mov
sahf
add
push
pop
ficoml
cmp
movsl
mov
add
adc
add
pop
adc
sbb
shlb
mov
fwait
test
xchg
dec
scas
xchg
filds
pop
inc
xchg
ret
mov
dec
pop
les
lds
lret
sbb
xchg
or
stos
push
push
outsb
mov
lahf
or
mov
mov
inc
xchg
push
sub
adc
fmuls
xchg
lret
cli
add
inc
aaa
xor
xchg
rcl
ljmp
inc
cmc
sarl
data16
adc
repnz
xor
pop
mov
add
cmc
jge
gs
repz
jle
jbe
adc
imul
dec
sbb
dec
ret
jecxz
sarl
jp
cmp
lcall
and
and
jbe
push
rcrl
xchg
bound
jbe
dec
xor
scas
test
inc
xor
lahf
pop
inc
push
inc
inc
mov
fadd
push
jle
clc
cltd
mov
divl
js
mov
mov
lods
or
jbe
out
cmp
ret
setp
gs
xor
mov
stos
aam
je
jg
adc
ss
popf
ja
je
jg
mov
inc
adc
rcll
loope
push
push
add
cmpsl
mov
mov
jge
enter
mov
sub
mov
pop
iret
mov
xchg
mov
jp
or
dec
mov
scas
test
gs
mov
lods
popf
mov
jmp
in
flds
fstpl
out
adc
jp
rclb
cmp
bound
xor
loopne
rolb
cmp
pop
and
push
lahf
fisubl
in
addr16
sbb
mov
add
and
cmp
fdivs
arpl
rcrb
popa
jg
insl
mov
xchg
cmpb
xchg
fidivrs
sub
mov
sbb
inc
imul
in
xor
call
or
rcl
mov
push
js
outsb
lock
stc
ret
push
outsl
inc
pop
repnz
roll
in
adc
mov
loopne
push
dec
xor
push
clc
and
dec
sub
mov
test
imul
jl
and
cld
cmp
jle
imul
jp
jge
mov
cmp
add
fistpll
lock
or
pop
sbb
lret
or
pop
in
sbb
popa
hlt
add
cwtl
fsubr
call
repz
in
add
mov
add
sub
jbe
nop
mov
aad
adc
push
scas
outsb
xor
imul
fnsave
xchg
out
js
pop
xorl
out
adc
or
or
loop
clc
test
dec
pop
sets
or
add
add
inc
xor
repz
sarl
mov
mov
pop
add
cwtl
dec
aas
push
es
enter
cmp
pop
and
xchg
je
stos
popa
mov
push
dec
shr
int
ja
pop
push
dec
cwtl
call
test
out
fdivr
mov
in
mov
lret
mov
sub
and
mov
movsl
arpl
sbb
or
sub
jp
js
lcall
dec
ja
scas
push
shrb
insl
sub
loope
mov
test
push
mov
jle
cld
fldl
das
pop
lret
or
fildll
loop
mov
push
jne
stc
fdivrl
sbb
pop
dec
clc
je
aaa
mov
in
inc
bound
xchg
push
push
fdivrl
jle
xchg
movsl
in
sub
push
rcrl
lret
dec
call
or
mov
outsl
sbb
sbb
pop
cmpl
jnp
sbb
sbb
testb
lret
das
or
inc
stos
pusha
xchg
dec
pop
popf
lahf
clc
movsb
xor
sbb
or
xchg
cmp
mov
scas
adc
mov
cltd
pop
mov
orl
cltd
xchg
pop
jbe
pusha
xor
fldenv
push
iret
mov
jge
xchg
cld
jae
add
inc
inc
dec
lcall
sbb
stc
jmp
lds
clc
notb
dec
das
insb
shrb
push
insb
shrl
xchg
fnstsw
jne
mov
nop
in
rcll
int
inc
mov
mov
add
pop
xor
scas
mov
push
ret
lcall
jne
cmp
inc
adc
out
jno
xchg
xchg
movsb
pushf
lret
std
cmp
adc
or
jl
sbb
jle
ret
pusha
mov
add
hlt
mov
xor
fsubl
adc
push
jl
adc
jae,pt
cmp
or
mov
aam
mov
sub
out
mov
adc
nop
xor
mov
adc
mov
sub
xchg
cmpsl
nop
and
and
xor
xchg
mov
dec
int
ror
cmpsb
inc
mov
and
hlt
xchg
xchg
push
fidivs
psadbw
cmp
cmp
xchg
or
fdivr
repnz
pusha
jae
add
pop
pop
clc
dec
gs
sbb
jmp
or
mov
sub
not
jne
xchg
test
cld
fcos
and
pop
inc
cli
daa
popf
std
cld
and
push
test
cltd
sbb
adc
call
mov
rcrb
arpl
test
rorl
scas
pusha
push
dec
xchg
int
incl
dec
das
lock
rolb
xor
inc
pop
stos
push
cmp
repz
dec
sub
dec
popa
mov
sahf
and
push
cwtl
aam
lea
push
pop
and
outsb
jecxz
and
xlat
xor
stos
outsl
sbb
sub
enter
mov
orb
sub
push
dec
rolb
fwait
inc
fcmovb
inc
push
cmp
les
xor
mov
mov
add
js
mov
mov
mov
mov
sub
cmpsb
mov
insb
push
out
fisubs
sub
jecxz
mov
push
lock
jmp
mov
inc
in
ret
cmpsb
push
dec
imul
mov
sbb
and
lds
xchg
adc
dec
pop
lea
push
cld
sahf
xor
mov
cwtl
ret
jl
cs
nop
push
pop
or
dec
lods
test
ja
sbb
rclb
sbb
lret
jle
mov
int
andb
stc
and
jge
nop
cli
pop
je
das
push
mov
sub
cmpsb
pop
rcll
insb
aam
push
sub
negl
push
outsb
sbb
push
ret
inc
pop
je
cmpsb
cmpsb
in
cwtl
lods
outsl
out
imulb
sbb
and
jb
add
test
push
xlat
xchg
adc
cmp
mov
xchg
sub
or
gs
cmp
out
or
cmp
pop
stos
lcall
xlat
cmpsl
ret
or
popf
jge
adc
aam
push
lea
pop
sbbl
int3
and
lods
iret
aaa
sti
out
in
testl
aam
cmpsb
fst
inc
push
adc
pop
repnz
iret
mov
mov
push
call
xchg
pop
addb
nop
call
push
aad
xchg
ret
icebp
sub
or
adc
xor
jg
pop
and
outsb
cwtl
push
imull
mov
lock
ja
std
xchg
fwait
mov
sbb
mov
add
cmp
push
mov
inc
add
inc
and
mov
outsb
ret
es
faddp
scas
stos
and
xor
lcall
cmp
xor
push
xor
pop
xor
lcall
mov
inc
xchg
mov
lods
push
mov
or
jno
push
rclb
xlat
aaa
mov
fwait
call
shrb
fnstcw
xchg
in
mov
mov
ljmp
push
mov
mov
mov
out
push
sub
lahf
add
mov
mov
xchg
inc
push
mulb
and
inc
sub
int
lea
ds
test
fcomi
cwtl
sub
mov
or
les
push
out
jmp
push
jo
sub
mov
pusha
mov
lret
test
inc
push
fistpl
cmc
out
lret
mov
out
sub
or
cltd
push
clc
jno
scas
adc
das
adc
and
xor
lret
add
sbb
fdivrl
dec
xchg
push
push
test
xor
test
fiaddl
out
ljmp
ret
imul
cmp
scas
cltd
push
push
push
ret
mov
cmc
sbbb
xchg
pop
push
packssdw
ljmp
cmp
out
and
leave
outsb
je
js
pop
or
or
call
pop
jmp
push
loope
pushf
scas
movsb
xor
add
nop
int3
inc
je
inc
push
add
push
shr
mov
cld
mov
adc
insl
sbb
and
mov
cmp
pop
xchg
adc
dec
push
fsubrs
cmpsb
adc
add
adc
mov
jmp
out
jmp
xchg
lret
cmp
push
in
jb
pushf
dec
andb
lea
aad
sti
aaa
xor
or
inc
das
shll
jno
rorl
jmp
pop
jge
imul
cmc
sub
icebp
lds
aaa
pop
stos
fnstcw
outsl
add
or
sbb
je
scas
out
insb
xlat
jg
mov
inc
testb
in
unpcklps
jno
nop
mov
mov
repnz
scas
mov
scas
pop
stos
sub
imul
scas
jbe
jo
mov
outsl
lods
scas
push
or
es
push
sbbl
add
fwait
cwtl
add
inc
sbb
sbbl
scas
sarl
rol
arpl
cmpsl
imul
insl
and
insl
jl
push
imul
push
popf
mov
call
add
rclb
mov
outsb
orl
mov
push
pop
push
pop
imul
testb
add
or
mov
dec
mov
mov
sbb
cs
scas
pop
stc
pop
mov
xchg
jb
mov
incl
inc
mov
cli
cmpl
mov
mov
out
repnz
push
sti
add
jb
pop
push
daa
mov
xor
stos
xor
dec
bound
stos
or
fdivrl
hlt
mov
fdiv
push
xor
rcl
lods
or
sbb
lods
cmc
add
cmp
pop
scas
dec
daa
inc
mulb
sub
fsubs
push
mull
xchg
lea
enter
mov
cli
push
sbb
pushf
and
or
mov
out
push
rcll
xchg
aam
jl
inc
insb
jns
mov
ss
sbb
lea
test
clc
dec
mov
fadds
arpl
pop
loopne
mov
and
mulb
leave
mov
pusha
xor
rorl
ja
repnz
xor
pop
jae
adc
aad
xor
xchg
xor
fwait
jmp
mov
mov
pop
scas
mov
jmp
and
xchg
mov
negb
mov
dec
sbb
ret
mov
lcall
les
dec
cltd
sub
loope
adc
mov
jecxz
xor
and
clc
push
mov
orl
mov
test
sub
and
mov
in
jmp
dec
test
mov
sar
mov
push
movsl
jns
add
push
shlb
mov
and
mov
dec
in
faddl
dec
aas
mov
sahf
aas
push
loope
pusha
mov
mov
push
bound
popa
imul
and
arpl
imul
aad
xlat
inc
adc
nop
jp
mov
mov
test
and
std
pop
fmuls
mov
pop
sub
dec
ja
fsub
mov
pop
or
movb
add
sbb
dec
sbb
and
cwtl
ja
mov
daa
jl
push
inc
pushf
shr
pop
iret
dec
add
inc
loop
cmc
cmc
dec
jle
repz
bound
push
push
add
ja
mov
adc
imul
mov
mov
mov
in
adc
fiaddl
addl
movsb
ljmpw
pop
mov
sub
push
shll
adc
mov
sbb
js
xchg
mov
dec
mov
mov
inc
inc
repz
mov
cmpl
aam
mov
icebp
inc
jnp
sahf
mov
movsl
add
pushf
jne
in
imul
js
or
push
pop
loopne
stos
cmp
fdivr
aas
sbb
cmc
lock
cmp
lods
lea
repnz
or
xor
cmp
shlb
xor
mov
testb
sub
lea
test
cwtl
cmc
jb
sbb
into
call
rcrb
int
call
mov
das
adc
cmc
test
cmp
jmpw
mov
pop
scas
cs
lock
mov
add
jecxz
mov
nop
sub
inc
or
xor
mov
push
inc
push
daa
repz
mov
mov
cs
adc
or
outsb
pop
mov
insb
or
imul
jo
sbb
or
divl
add
cmc
popf
and
push
cmp
fisubrs
dec
sub
inc
or
std
mov
std
test
pop
subb
insb
int
into
fisttpll
pop
mov
adc
stc
push
inc
sbb
mov
je
push
xor
or
imul
cmc
mov
pop
outsl
in
push
sub
fisubrs
xor
dec
pusha
mov
cs
pushf
push
divl
adc
cmp
mov
hlt
icebp
mov
pop
ljmp
ss
adc
test
out
add
xchg
ljmp
pop
movsl
inc
lea
sahf
xchg
test
mov
in
loope
andb
inc
popl
pop
in
lahf
xchg
xlat
push
mov
out
cmp
mov
stc
movsb
icebp
xor
rcrb
jno
aas
cmpsb
sbb
jg
in
xchg
sub
jp
out
and
xor
fsubs
std
pop
jle
cld
push
lahf
adc
mov
mov
inc
bound
iret
test
stos
adc
push
mov
inc
je
in
sbb
push
addr16
mov
lahf
jmp
mov
xchg
pop
pop
xorb
mov
mov
fdivs
clc
sahf
out
aas
mov
dec
jg
mov
mov
in
nop
syscall
xorl
test
lret
or
jmp
mov
mov
lods
sbb
nop
and
lret
iret
mov
xor
push
mov
popa
pop
xchg
add
dec
fadd
mov
sub
mov
push
aam
iret
insl
push
cli
mov
test
push
and
add
dec
imul
ds
loope
dec
add
mov
push
jns
jbe
mov
int
cmc
inc
mov
mov
cli
adc
pop
ret
jb
faddl
imul
push
sbb
mov
call
out
xchg
fisubl
ss
aaa
sub
xchg
and
mov
push
inc
or
adc
lahf
or
jmp
adc
sti
call
into
mov
scas
test
xchg
add
lea
ja
mov
jl
stc
xor
inc
lods
in
arpl
xor
shlb
out
xor
mov
sub
lods
or
and
mov
sub
ds
adc
and
loop
jg
push
mov
cltd
loope
idivb
mov
inc
mov
xor
push
sbb
icebp
mov
and
mov
ja
out
aaa
add
dec
jns
shrl
mov
aam
sbb
sub
in
or
lret
ja
adc
inc
mov
pop
in
sbb
shlb
xlat
lods
das
rolb
jae
or
je
and
adc
cli
xchg
jae
loopne
lret
and
scas
xorb
leave
leave
icebp
pop
sbb
dec
and
std
or
repnz
cmpsb
cmpsl
aaa
push
dec
sub
pop
lods
pop
imul
mov
in
sahf
or
xor
cltd
int
pusha
pop
movsb
aam
imul
cmp
adc
mov
ja
int
or
enter
int3
std
pop
inc
xchg
clc
jl
in
lret
pusha
roll
shl
sbb
push
lods
xlat
in
fwait
dec
pusha
push
dec
or
add
xor
lret
sub
pop
add
dec
mov
test
dec
loope
pop
pop
or
aam
xor
imul
jns
test
inc
ja
mov
clc
pop
adc
mov
xchg
sarb
sbb
lods
jb
daa
cwtl
pop
mov
xlat
and
inc
mov
pop
pop
sub
mov
pop
pop
cld
add
rcl
mov
das
mull
aas
jno
mov
and
sbb
mov
fsubs
cltd
push
sbb
or
pop
repnz
add
jle
vmwrite
cmp
mov
add
rcrb
push
add
xchg
jnp
sub
int
addr16
pushf
inc
sub
jne
mov
or
or
mov
repnz
testl
sub
cmpsb
leave
xor
cmc
cmp
jae
inc
lcall
enter
fcmovne
out
jge,pt
jo
xor
mov
in
fwait
cmp
jb
in
dec
cmpsl
subb
scas
in
stc
xor
loopne
mov
scas
adc
inc
push
insb
cmp
cmc
test
cmpsb
mov
adc
gs
fmuls
cwtl
jg
fcomps
out
filds
adcl
scas
inc
sub
dec
test
dec
test
out
push
push
jno
cmp
ret
enter
push
adc
leave
inc
pop
or
shll
jecxz
pop
or
dec
jo
xchg
inc
bound
pop
cmp
jge
test
xchg
lahf
icebp
les
stos
adc
je
xor
pop
stos
mov
push
cmp
add
jmp
adc
data16
push
inc
sub
mov
lea
popl
dec
popa
outsb
mov
cld
sub
xchg
push
fmull
stc
and
dec
insb
xor
test
sub
mov
adc
mov
in
into
or
pop
mov
xlat
cmp
push
pop
and
cltd
clc
sbb
pop
mov
mov
icebp
scas
adcl
arpl
adc
es
pop
jecxz
mov
ljmp
xor
sbb
je
pop
inc
xchg
mov
nop
pop
ja
xchg
test
ret
out
mov
sub
imul
adc
cmp
lahf
dec
cmp
xor
push
arpl
mov
mov
jp
arpl
dec
push
mov
inc
ds
cltd
pop
dec
jp
pop
bound
xchg
sub
add
cmp
popf
or
f2xm1
fnstsw
mov
loop
cmp
push
out
outsl
repnz
pop
lret
test
fldl
insb
cwtl
cmp
mov
mov
popa
andl
popf
pop
jp
mov
test
das
hlt
out
js
pop
mov
fstpl
enter
dec
jbe
bound
add
sub
imul
or
out
fmull
out
xor
in
andl
std
push
cs
les
or
mov
aam
loopne
xchg
ds
jecxz
stc
push
aam
pop
stc
jl
sbb
mov
push
sbb
pop
pop
inc
pusha
enter
jno
in
jbe
mov
cmp
add
mov
mov
fsubrl
sub
popa
enter
lcall
sar
fbstp
or
adc
and
add
jbe
jne
sarb
add
mov
out
lock
adc
lahf
test
mov
add
arpl
popa
aam
hlt
pusha
jb
adc
js
add
out
arpl
jmp
and
vmwrite
fwait
rorl
xchg
stos
ja
jo
mov
push
test
sbb
data16
ljmp
xor
scas
mov
sub
mov
enter
test
and
jg
jge
xor
jns
dec
cmpsl
bound
stos
dec
jno
out
mov
mov
add
orl
cs
loop
jl
test
gs
add
cltd
push
xor
je
gs
js
testl
push
imul
xchg
dec
lea
and
outsb
sbbl
iret
sbb
pop
icebp
std
outsl
jle
faddp
or
push
jp
xchg
mov
push
xchg
push
out
ja
pop
outsl
add
sbb
scas
pop
lds
push
and
pop
popa
lods
icebp
ljmp
das
push
dec
lcall
sub
out
dec
fs
std
in
pop
jb
lods
sbb
xor
push
lret
push
add
jl
inc
shl
sub
pop
inc
fidivrs
and
inc
shll
sub
addb
cmc
or
mov
mov
mov
js
xor
and
out
push
icebp
lret
cs
inc
sub
push
xchg
adc
push
rorl
inc
inc
dec
mov
or
clc
mov
and
push
cmp
adc
add
mov
mov
das
inc
out
push
hlt
xlat
and
data16
out
mov
insb
int3
clc
hlt
fimull
dec
fidivrs
dec
jge
test
loopne
out
jnp
ficomps
add
pop
cltd
jge
das
sbb
outsb
xchg
and
popa
aam
rcrb
aad
mov
and
sub
lret
xchg
ret
pop
sbb
push
mov
aad
sarl
pop
mov
je
pop
sub
jnp
mov
push
and
or
xchg
mov
and
in
jle
mov
imulb
lods
add
sysret
inc
xor
repz
lds
je
loopne
cltd
sbb
mov
pop
imul
inc
pop
cmp
push
adc
push
hlt
mov
scas
cltd
cmp
mov
cmp
std
jge
adc
repnz
xor
repz
xchg
jmp
lret
pop
gs
pop
arpl
pop
lock
js
mov
cmp
cmp
sub
pop
jl
fsubr
add
pop
push
test
mov
repz
sub
add
iret
jo
cmp
jp
pop
aaa
leave
inc
dec
xchg
pop
fsubp
mov
rcl
int3
not
xor
cmp
and
or
lea
js
repnz
les
outsb
mov
push
out
adc
in
sub
test
in
xor
out
xchg
loopne
jo
cmc
cmpsb
cmp
cmpsb
arpl
in
cmp
leave
add
or
or
jmp
mov
add
push
icebp
cmc
xor
inc
ret
cli
inc
aas
movsb
pop
pop
mov
rorb
jae
inc
adc
inc
cmpsb
repz
jnp
xor
push
ficompl
ljmp
int3
sbb
sub
jns
jmp
sbb
inc
mov
test
mov
pop
or
es
mov
repz
mov
icebp
cmp
imul
imul
insb
int
mov
fldenv
stos
jno
sbb
call
xor
pop
negb
push
mov
push
mov
xor
push
sub
lock
jg
sbb
movsb
fldcw
add
mov
mov
cmpsb
sahf
test
enter
xchg
xor
aam
shll
inc
sub
adc
mov
adc
and
jae
xchg
cmc
in
icebp
std
and
cmp
fdivs
mov
mov
nop
popf
pop
imul
lcall
lret
add
adc
mov
xchg
ja
stc
loop
cmp
xchg
scas
inc
pop
js
sbb
mov
sub
lcall
vdivps
lret
pop
fildll
adc
pusha
adc
cs
and
insb
adc
aam
insb
pop
imul
jle
mov
dec
dec
push
test
scas
jl
push
xor
call
les
jae
and
xorb
sbb
pop
push
cmpsl
cli
movsl
movsb
sbb
jo
stos
ss
or
pop
mov
test
mov
xor
nop
out
nop
mov
pop
mov
jp
xchg
cltd
lret
dec
popa
and
lret
imul
insl
pop
ljmp
jo
out
push
ljmp
cmpsl
mov
cmpb
nop
popf
sarb
orb
xchg
xor
mov
ljmp
jae
add
stos
into
les
test
xchg
mov
mov
cmp
mov
mov
das
dec
ss
jnp
rorb
mov
mov
pop
shl
gs
xlat
cltd
dec
cwtl
jno
sub
and
pusha
fsubrp
call
divb
xor
sbb
cli
mov
push
arpl
nop
adc
cmp
pop
sub
bnd
jl
jg
ss
out
filds
stc
stos
subb
dec
jne
loop
adc
and
jmp
ds
jne
je
or
roll
push
mov
pop
addr16
adc
add
xchg
shrl
repz
cltd
push
ret
ret
cli
inc
mov
ret
push
mov
push
incl
cmp
lock
xchg
xchg
and
mov
cmovno
add
and
ror
adc
adcl
aam
jo
fidivrl
bound
shl
fwait
xor
xchg
in
add
in
test
inc
push
gs
jnp
xchg
dec
xor
roll
in
mov
mov
jns
adc
addr16
je
data16
insl
mov
je
push
mov
or
mov
and
mulb
pop
and
push
jp
repnz
clc
cmpsl
xchg
xchg
dec
outsb
clc
inc
push
pop
lds
je
inc
mov
add
sbb
mov
cld
movsl
mov
jg
fs
imul
jae
mov
les
add
fdivrp
stc
add
in
loop
stc
out
mov
push
imul
mov
push
mov
xchg
fucom
addr16
xchg
imul
movsb
loope
outsb
mov
pop
push
mov
push
dec
pop
scas
testl
cmp
xchg
int
fnstsw
push
in
cmpsl
daa
lret
je
lods
inc
sub
dec
xor
popa
jnp
xor
add
sub
xor
adc
repnz
std
xchg
adc
lods
xor
xor
cld
cmpsb
or
lcall
es
outsl
inc
mov
pop
jp
in
jmp
fstpt
scas
inc
out
int3
xchg
jle
lods
xor
push
add
lods
push
or
clc
cmp
subb
mov
out
push
and
movsl
jecxz
repnz
jle
shll
dec
loope
mov
es
repz
xor
adc
das
and
push
mov
popa
fcom
test
mov
xchg
ljmp
dec
lods
in
insb
pop
orb
mov
cli
loope
rorb
xor
adc
mov
scas
pop
mov
mov
adc
int
arpl
leave
jne
outsl
aam
cmp
jecxz
sbb
inc
movsl
fsubs
xchg
mov
ret
sub
in
pusha
add
fcmovb
insl
mov
inc
das
pop
ret
jp
je
out
rclb
jns
jecxz
stc
cltd
add
test
rorl
je
xor
push
push
xchg
jle
push
rsqrtps
rolb
idiv
sub
daa
je
into
jg
and
fs
mov
pushf
leave
stc
ja
cmp
daa
sbb
inc
pop
and
xchg
enter
xadd
inc
lds
xor
ja
loop
xor
in
jmp
inc
pop
xchg
insl
out
fsubs
xor
repz
mov
pop
in
fistps
pop
sub
cmpsb
cmpsb
pop
push
gs
push
inc
sub
mov
push
jno
pop
pop
inc
mov
add
popa
cmp
fnstenv
inc
pop
add
and
jge
mov
popa
xlat
fdivs
xchg
rorb
or
in
mov
push
pop
push
out
jno
loopne
sbb
icebp
repnz
icebp
insl
mov
or
mov
scas
outsl
stos
xorl
hlt
rolb
scas
cmp
push
jmp
inc
or
leave
sub
test
popf
dec
and
push
mov
lods
addr16
ss
mov
mov
leave
xchg
inc
lsl
pop
sub
fldl
xchg
imul
fisubrl
adc
mov
sub
movsb
sbb
aam
int
data16
aad
cltd
xchg
inc
jne
pushf
push
add
in
inc
xor
mov
xchg
xchg
fs
sub
iret
jno
mov
out
xchg
mov
rclb
sahf
movsl
pusha
dec
imull
inc
and
cli
push
repnz
fnstenv
lea
pushf
bound
aas
pop
push
xor
je
and
test
xchg
mov
shrb
xchg
push
cmp
push
cmp
dec
rcrb
adc
inc
iret
shll
sub
sbb
xchg
add
xor
jno
push
loop
pop
mov
jnp
ljmp
dec
pop
test
sub
nop
mov
sub
and
mov
arpl
in
mov
push
xor
shl
jg
sbb
jmp
nop
rolb
adc
in
aas
out
and
fdivr
sub
pop
testb
pop
out
dec
popa
aas
jle
in
scas
aam
out
sbb
js
sbbl
mov
rcrl
ret
sub
or
inc
sub
jae
aaa
xchg
and
push
inc
into
push
sarb
mov
jecxz
test
int
sbb
mov
jnp
int
pop
add
mov
jg
mov
mov
fmul
xor
outsl
jge
or
fcoms
scas
sub
xchg
shl
add
jns
mov
fsts
jecxz
inc
test
sbb
ljmp
mov
push
add
inc
mov
jnp
xchg
dec
add
inc
push
shll
popl
mov
cmp
outsb
jns
cmp
mov
inc
fucomip
push
adc
mov
sbb
push
sahf
ja
push
push
push
aad
mov
dec
ret
jns
int
lods
sbb
xchg
xlat
pop
push
ja
jns
mov
mov
mov
aaa
aas
push
std
xor
lds
into
mov
adc
jb
sub
push
xchg
dec
push
test
popa
xchg
popa
inc
sti
cmpsb
jmp
mov
movsb
sbb
lods
xor
lock
push
jmp
fcompl
out
cmp
scas
or
lods
mov
push
lods
lds
test
xor
popf
xchg
push
js
in
dec
jb
call
and
lcall
mov
iret
dec
ja
fcoml
shrl
mov
ja
push
pushf
push
pushf
ror
jb
shlb
inc
jle
mov
cmpsl
sbb
mov
pop
cmp
leave
xorl
into
push
cltd
addr16
fadd
mov
int
push
and
arpl
das
dec
test
imul
out
sub
fwait
mov
sbb
mov
xchg
out
xor
or
fsubs
push
pushf
aam
push
xor
adc
mov
jg
cmpsl
ficomps
xor
mov
push
xor
imul
adc
sahf
lea
xchg
adc
ficomps
ss
subb
jl
sbb
pushf
lock
push
loopne
xor
mov
dec
push
scas
fnstcw
xlat
cmp
fs
or
push
shrl
movsb
stc
jae
xorb
mov
lea
sub
or
mov
lret
jmp
mov
stos
aaa
inc
shrl
pop
cwtl
xchg
in
cmp
jmp
call
je
loopne
test
add
aad
xorb
mov
loop
mov
ljmp
daa
mov
in
nop
addr16
call
nop
icebp
nop
pop
daa
out
pop
jge
cmp
dec
adc
and
idivl
ljmp
or
push
push
test
test
arpl
sub
xor
sub
addb
mov
or
lret
movsb
imul
pop
scas
lock
enter
sarl
jbe
cmpb
jne
fstl
popf
push
stos
ja
lcall
mov
outsl
sbb
pop
or
pushf
clc
sub
mov
insl
push
icebp
inc
nop
dec
xor
pop
push
push
jp
mov
jg
cmp
test
inc
adc
out
dec
pop
out
jnp
jno
push
cld
sbb
call
pop
xchg
xorb
dec
out
dec
dec
in
or
fwait
pop
fisubrs
paddd
mov
ret
test
sub
cld
inc
pusha
dec
insl
jl
mov
fisubrs
aas
inc
push
bnd
loopne
pop
lret
in
dec
cli
jno
sub
pop
sbb
call
pop
movsb
iret
and
int
fcmovu
add
das
jp
test
mov
pop
shrb
ret
jo
adc
xor
cmp
mov
jge
dec
or
cmp
push
imul
add
sbb
xchg
xchg
stc
rep
adc
cld
xor
sub
sub
jg
ret
mov
xchg
fists
jb
mov
addr16
loopne
or
and
mov
fsin
sbb
sbb
gs
xchg
xor
fdiv
sarb
shr
fs
es
lods
les
scas
or
push
pop
mov
shrb
clc
ds
lret
or
aam
inc
pop
add
adc
sub
push
call
jg
mov
xor
pop
ficoml
jp
insb
loop
icebp
jmp
xor
push
test
loop
mov
andl
xchg
out
inc
dec
sbb
mov
ficompl
or
pop
add
jge
xor
int3
arpl
add
into
xchg
vpshufd
mov
cmc
rorl
cmp
jecxz
int3
xchg
bound
sbb
or
lock
lds
dec
cmpsl
mov
mov
subl
inc
clc
xchg
lock
add
ljmp
inc
dec
xchg
mov
fstl
and
ds
mov
out
jb
fwait
out
push
xchg
sbb
nop
dec
adc
loope
lret
fstl
scas
imul
rorl
out
in
xor
pop
jmp
jne
divb
jecxz
push
cmp
jg
das
into
inc
es
sar
es
cmpsb
fcmovu
or
fbstp
jmp
mov
shlb
jmp
xlat
pop
inc
jno
ret
jo
adc
test
rol
sarb
es
sbb
lea
test
xchg
inc
jb
push
movsl
dec
xchg
cmp
mov
or
xchg
mov
popf
xchg
aaa
in
pushfw
cmpl
mov
movsl
xchg
add
call
lods
push
mov
aam
shl
stc
push
call
xor
fisubl
pop
adc
dec
aad
jbe
int
mov
xchg
sbb
call
xchg
or
in
cmp
nop
lea
ja
mov
dec
js
in
lock
jg
adc
pop
lds
mov
inc
mov
int
in
mov
sbb
pop
dec
xor
push
sub
lcall
aam
push
stc
jge
inc
rolb
test
mov
negl
or
mov
out
cmc
jge
jmp
arpl
dec
and
pop
cld
cs
add
push
test
xchg
pop
mov
pusha
in
xor
jp
mov
enter
ret
and
pop
fsts
scas
popf
aam
or
xor
lds
push
xchg
shlb
jae,pt
sbb
and
jno
cmpsl
call
pop
jmp
and
leave
mov
test
repnz
add
mov
clc
in
pop
adc
mov
cmp
and
cs
push
dec
jl
jno
mov
pop
ljmp
mov
jnp
xor
je
mov
mov
push
cmpsb
cmp
inc
shll
cmp
xchg
daa
inc
out
mov
test
mov
and
mov
cmp
pop
bnd
jbe
inc
loope
test
inc
adc
orl
js
jo
jle
sti
jp
out
jecxz
sbb
test
xor
sti
push
mov
xor
lds
std
call
fisubl
scas
nop
and
mov
xchg
lcall
nop
mov
clc
push
inc
ss
mov
out
loope
and
jp
sub
inc
std
and
daa
inc
arpl
sbb
inc
xchg
cmpsl
vphsubwd
scas
push
test
enter
das
mov
push
pop
sub
cmpsl
fneni(8087
loope
cmp
adc
jbe
cmpsl
je
pop
inc
ret
adc
xor
stc
loop,pt
inc
jge
cmp
mov
sub
jge
add
cs
hlt
adc
mov
mov
adc
out
ljmp
mov
mov
mov
inc
inc
test
sbb
popl
out
negl
xchg
mov
stc
and
mov
imul
add
cmc
arpl
cmp
dec
popf
mov
fcmove
mov
adc
aam
mov
jl
jmp
mov
mov
jne
dec
pusha
inc
sub
data16
cmc
jl
jb
pop
pop
lcall
xchg
std
iret
dec
cld
popa
dec
and
jo
xor
and
fwait
lahf
inc
cli
mov
or
lds
nop
mov
inc
incl
mov
sbb
push
jl
adc
xchg
repnz
xor
cmp
mov
rcr
push
pop
das
mov
inc
and
movsb
clc
aaa
push
shl
std
mov
out
jl
in
cwtl
adc
clc
out
pop
inc
iret
int3
sub
xor
push
pop
cli
push
push
xchg
dec
and
xor
decb
cmp
and
or
bnd
pusha
movsl
lcall
jge
je
cmp
jle
xor
lcall
push
cs
fstpl
mov
mov
movsb
mov
bound
xchg
lcall
jo
mov
mov
and
inc
dec
cs
pop
ja
adc
cmp
scas
cmpsl
fcomip
mov
lods
test
nop
jle
ficompl
mov
pop
push
pop
push
sub
mov
xor
je
popf
xchg
fbstp
loope
into
adc
push
mov
xor
xchg
scas
xchg
mov
sti
cmp
pop
and
xor
rcrb
aaa
aaa
mov
jae
fnsave
into
mov
sti
repz
insl
leave
lahf
gs
xlat
jns
mov
dec
mov
lods
fidivrl
call
jno
rolb
aad
xor
out
adc
sub
pop
mov
aad
or
int
aas
sub
cmp
mulb
and
cmp
arpl
inc
dec
sbb
lret
mov
lret
cli
js
cli
jp
push
dec
out
xor
cmp
fcmovne
movd
jecxz
rcll
push
stc
jecxz
mov
sti
xor
movsl
shrl
cmp
cld
push
test
or
lds
mov
mov
mov
pop
iret
fstpl
adc
mov
jbe
fwait
bound
pop
add
inc
mov
xor
dec
sahf
in
cmp
pusha
jnp
jp
mov
and
and
push
jge
push
sub
push
arpl
mov
mov
mov
mov
icebp
roll
mov
call
mov
es
push
fbld
test
int3
shl
ret
mov
add
and
imul
std
xchg
jle
leave
mov
in
cmpsb
imul
and
jg
xchg
mov
je
push
imul
std
lahf
sbb
sbb
insl
rcrb
lock
xchg
inc
jmp
push
pushf
aam
arpl
arpl
and
popf
sahf
imul
loopne
into
adc
inc
pop
aaa
ja
push
test
test
push
sub
pushf
test
lret
dec
add
lods
xchg
cld
mov
dec
jb
call
dec
lret
push
push
out
aas
adc
jbe
pop
mov
bound
push
enter
cwtl
add
mov
add
shl
jno
mov
mov
pop
xor
cmpl
fisubrl
xor
in
nop
ror
or
sub
inc
cmp
xchg
xlat
test
or
jp
lahf
mov
insb
shll
or
fs
cmp
nop
in
jmp
movsl
xchg
test
jg
inc
or
push
and
into
fiadds
add
jl
cltd
and
mov
repnz
loop
movsb
stos
repz
jmp
lea
bnd
in
scas
arpl
in
push
cli
push
shrb
sub
dec
xchg
fimuls
mov
clc
fstl
cmp
sub
jno
xorb
scas
adc
xor
sbb
mov
js
cmp
pop
insb
scas
push
and
mov
shrl
jecxz
aad
add
cwtl
xchg
repnz
test
in
shl
mov
pushf
inc
in
xor
sbb
cli
push
bound
push
inc
mov
or
sub
xchg
out
cltd
rcpps
xchg
notl
bound
push
fistpll
dec
clc
cwtl
cmpsb
pop
das
sub
xor
mov
imul
in
mov
fprem
or
push
push
cmp
fsubl
xchg
mov
mov
in
add
lods
lods
pop
cmp
int
cmpsl
pop
jge
inc
sbb
push
xlat
jp
iret
xchg
inc
sarb
pop
fildl
adc
jg
pop
inc
clc
data16
jl
or
mov
adc
cbtw
sub
xchg
mov
stos
aas
pop
sbb
or
fsubr
sub
push
js
out
js
movsb
mov
sub
adc
mov
dec
sub
mov
outsb
pusha
std
and
add
int
sub
push
mov
jbe
sub
in
arpl
dec
rorb
jbe
push
adc
data16
xchg
dec
test
sbb
iret
clc
jp
cltd
sub
and
pop
rclb
pop
ja
pop
pop
icebp
test
loope
andl
mov
cmpsl
lret
adc
mov
rolb
dec
push
mov
fcomps
imulb
push
or
push
xor
gs
push
fldenv
lret
movsl
int
ja
and
test
ja
mov
ja
push
mov
fisubl
aad
sub
out
pop
jns,pn
mov
xchg
push
mov
aaa
aas
mov
push
jnp
inc
inc
movsb
popf
jnp
add
imul
sahf
mov
jae
add
add
jae
add
add
push
xchg
sbb
fisubl
cmp
mov
xor
mov
xchg
int
sbb
clc
cmp
imul
xchg
lods
mov
aas
out
xchg
and
mov
inc
push
push
call
jg
add
cld
fstpl
xchg
push
test
pop
add
and
push
dec
xchg
and
pop
test
movsl
ret
mov
lds
add
lea
xor
push
cmp
lahf
jle
loopne
stos
or
xorl
mov
int
rorl
scas
loope
incb
and
pushf
adc
xor
mov
adc
rol
xorb
into
out
push
jbe
jge
cmp
scas
cmp
pop
test
jae
das
dec
pop
push
cmpsl
or
mov
mov
inc
jmp
stc
repz
jo
daa
jno
in
add
xor
cmp
jle
cmp
sub
sub
sbb
out
sub
loop
fisttpll
xlat
push
fistpl
outsb
or
pop
mov
adc
sbb
mov
gs
xchg
std
inc
push
jmp
push
daa
les
adc
mov
and
sub
add
xchg
cmp
sub
test
subl
imul
jne
fstl
sub
js
sbb
dec
fistpl
aaa
scas
paddb
fs
subl
or
lcall
std
aas
outsl
jmp
repz
add
jo
outsb
repz
and
sbb
sete
xchg
or
inc
in
lods
cmp
daa
adc
popa
xor
mov
sub
or
dec
jecxz
bound
cli
out
mov
cld
sti
push
push
pop
leave
jb
mov
push
jns
leave
sbb
je
das
xor
jmp
push
in
cli
sbb
stos
shll
pop
clc
adc
jno
pushl
test
divb
mov
inc
inc
out
adcb
cmpsb
into
and
cli
dec
xchg
xchg
sahf
out
imull
pop
icebp
push
ljmp
not
push
cmp
dec
outsb
scas
xchg
in
add
lahf
xchg
nop
sbb
mov
enter
bound
mov
xchg
push
lret
cmp
jge
es
iret
xor
clc
mov
cmp
adc
int3
sub
imull
pusha
mov
jp
fldl
xor
jnp
je
dec
and
cmc
pop
ljmp
xor
cmpsl
fiaddl
xor
push
push
cmpb
arpl
jo
stc
jno
pop
loop
and
ret
jno
in
jp
xchg
mov
movsb
pusha
notl
call
xchg
push
jnp
add
jne
mov
leave
sub
mov
mov
aaa
and
fstpt
push
adc
xor
out
or
incb
jg
bound
test
mov
je
lods
fwait
lock
mov
sbb
mov
mov
and
lock
sbbb
xor
mov
repnz
leave
std
sbb
push
aad
jl
ss
sub
in
notb
jmp
stos
cmp
popa
jbe
stc
mov
fnstcw
adc
mov
loop
xor
int3
mov
popf
mov
dec
mov
mov
push
aad
aas
mov
into
sarl
adc
stos
mov
es
jne
push
pop
popf
jl
lret
mov
stos
nop
incl
dec
pop
mov
push
outsl
test
pop
popa
scas
mov
xchg
pop
or
pop
outsb
subb
out
sti
jg
jne
jns
out
dec
adc
test
jmp
enter
mov
dec
or
push
sbb
pop
jle
scas
cwtl
das
pop
rolb
mov
in
loop
js
adc
test
in
sbb
xlat
or
cmp
push
cmp
loope
mov
fdivs
js
pop
in
rcll
jae
lret
mov
scas
jmp
inc
out
and
jne
arpl
push
inc
sbb
fistps
shrl
sbb
mov
sbb
inc
adcb
jecxz
sbb
pop
cmp
mov
sbb
xchg
xchg
aad
push
lahf
lret
test
jae
daa
sbb
aad
outsb
movsb
adc
out
xor
jne
dec
jmp
gs
mov
mov
hlt
rcrl
pop
andl
cmpsb
enter
setnp
aaa
in
push
roll
fisubs
stos
or
loop
mov
lock
pop
nop
dec
outsb
jo
or
dec
mov
mov
or
sub
lock
shlb
push
inc
lahf
or
popf
and
push
scas
lods
cmp
pop
aad
cmp
sbb
aam
dec
pop
lods
or
push
negl
jae
pop
lods
cmp
repz
mov
xchg
dec
rcll
cwtl
pusha
cmovns
popa
ficoml
mov
jecxz
dec
or
leave
fwait
das
fdivr
mov
pushf
aad
push
mov
xor
leave
lcall
cltd
push
fcmovnbe
sbb
popa
fwait
add
hlt
sub
pop
lods
sub
xchg
mov
dec
add
pusha
sub
loop
mov
cld
xchg
or
cmp
fwait
sub
jae
and
lret
cltd
aaa
outsb
insl
mov
jecxz
js
pop
dec
or
dec
dec
in
mov
jmp
pop
subl
mov
clc
sbb
dec
mov
in
and
mov
fmull
or
idivb
sub
push
pop
out
pop
mov
sbb
nop
or
mov
sahf
out
popw
push
sbb
adc
jae
in
iret
and
mov
pop
adc
push
ret
pop
leave
mov
mov
in
pop
fistpll
pop
xor
push
push
test
xor
call
or
ds
aas
fsubrl
cltd
xor
test
aaa
pop
iret
adc
inc
sbb
mov
or
dec
inc
test
out
xchg
aad
cmpb
lcall
jnp
mov
add
pop
jns
pop
xchg
jns
xor
imul
fnstsw
lds
mov
mov
cmp
jbe
pop
and
mov
xchg
addr16
xchg
mov
orb
xchg
sub
xor
mov
xchg
mov
push
fstpl
test
dec
adc
inc
push
cmp
fcmovnb
shll
push
pop
xor
cmc
cmp
out
sti
or
fwait
lea
sub
lods
jl
or
std
lcall
je
or
push
bound
mov
test
popf
add
jge
call
dec
xchg
adc
aaa
mov
and
out
ds
sub
shrl
mov
dec
inc
outsl
push
inc
mov
mov
pop
cmp
push
in
xor
lods
idivl
xchg
and
shrl
lret
test
mov
xchg
mov
arpl
pop
pop
and
jp
rorl
int
inc
cmp
pop
testb
inc
dec
test
nop
or
jge
daa
shrb
popa
ficoms
outsb
call
or
mov
in
movsl
push
cmp
aad
in
lcall
and
das
cld
stos
popa
mov
mov
movsl
icebp
out
mov
in
xorb
aad
repz
jbe
ret
icebp
scas
push
shrl
shlb
mov
inc
push
pop
xor
aaa
ds
mov
sbb
sub
push
inc
aam
cmp
clc
inc
loope
orb
addb
inc
popa
or
dec
lock
sbb
cmpsl
dec
cmp
mov
inc
mov
fst
aas
adc
cmp
xchg
xchg
mov
test
gs
cmp
add
add
pop
adc
cmp
je
mov
mov
fisttps
or
push
dec
or
mov
cmp
pop
sbb
xorb
aas
enter
ja
and
out
das
sbb
loope
ljmp
ficomps
add
add
xor
es
aad
dec
pusha
jl
mov
lcall
jge
andl
lock
test
repz
jns
mov
fiaddl
test
cmp
and
std
lods
inc
jae
xchg
push
sub
cmpsl
test
mov
in
adc
mov
fwait
and
pop
nop
clc
add
out
push
ja
fwait
aam
lock
repz
cpuid
push
aas
sub
push
jbe
cltd
jb
ror
cli
shll
sahf
dec
or
popa
mov
imul
mov
adcb
dec
mov
inc
pop
sbb
fcompl
sbb
repz
out
or
mov
and
loope
add
push
movsb
test
insl
inc
add
push
int
push
loop
inc
out
shll
aas
roll
cmp
dec
insb
loopne
lock
sbb
mov
rcr
inc
ret
roll
mov
and
mov
lcall
xor
jp
pop
test
push
fcmove
push
mov
test
push
movsl
inc
add
push
or
in
adc
subb
inc
pop
push
jns
rcl
adc
jmp
adc
push
arpl
mov
jg
jb
jmp
mov
imul
lret
je
cmp
fs
xchg
mov
call
icebp
rcrb
inc
fadd
test
adc
xor
fwait
jmp
faddl
repz
into
shrl
mov
and
outsl
jp
stos
hlt
mov
lea
adc
sub
fdivs
iret
pop
push
cs
out
stc
sub
inc
fwait
das
notb
pop
je
fcompl
loope
lahf
addb
xchg
ljmp
sub
lock
arpl
ljmp
adc
adc
or
or
outsb
jl
es
jno
test
pop
pushf
mov
and
xchg
push
cmp
push
andb
and
sub
xor
test
cmpsb
xchg
mov
sbb
add
add
jecxz
negl
jns
jge
hlt
inc
out
pop
cmc
ljmp
lret
test
jb
call
movsl
orb
add
ficoms
mov
mov
addl
jl
lahf
pop
stos
pusha
shl
push
mov
lahf
mov
cs
sti
imul
fwait
outsl
push
cmpsl
shr
cwtl
cmp
test
add
pop
and
jno
lods
cwtl
push
sarl
outsl
sbb
jmp
mov
ljmp
xor
push
push
mov
or
imul
sub
mov
jns
es
push
popa
mov
mov
js
clc
mov
out
out
movsl
or
xor
fwait
seto
mov
popa
xchg
fnstsw
cmp
fldcw
jo
in
mov
stos
xchg
mov
xor
rclb
xor
push
int3
add
inc
fimuls
jl
dec
push
push
jmp
flds
subl
test
jnp
pcmpgtb
xchg
imul
mov
mov
xor
fidivrs
mov
mov
movsb
sub
mov
adc
hlt
in
lcall
fdiv
inc
lods
dec
mov
mov
rorb
inc
xor
mov
dec
sbb
lods
sub
xchg
push
pop
outsb
cltd
in
xorb
mov
dec
mov
test
xor
sbb
aaa
ret
in
adc
cs
jns
xor
sahf
mov
dec
aam
sarl
stos
repnz
push
push
push
xchg
lret
pop
dec
lea
popf
out
push
add
adc
stc
mov
stc
dec
fimuls
mov
lret
sub
movsl
imul
push
add
xor
jbe
cmp
push
cli
fldcw
std
and
icebp
push
loopne
lock
adc
jp
test
sub
mov
inc
push
fsts
orb
leave
inc
xchg
jbe
fdivr
outsl
divb
rorb
notl
adc
pop
aad
push
shlb
fldcw
cltd
mov
mov
gs
test
adc
inc
inc
out
shrl
xchg
mov
mov
inc
nop
sub
push
pop
jno,pn
mov
arpl
push
gs
insl
sbb
mov
sbb
cmpsl
mov
repnz
sti
negl
or
shll
stc
clc
lahf
and
xchg
adc
outsl
pop
xchg
testl
or
mov
lret
fdivrl
xlat
lods
xchg
mov
ljmp
mov
or
ficoml
fdivrs
stc
jle
sub
inc
out
adc
movsb
xchg
inc
dec
mov
arpl
mov
inc
sbb
scas
or
xchg
sbb
fwait
xchg
xchg
push
out
mov
jo
add
mov
jg
mov
inc
inc
mov
xchg
ja
push
push
push
in
test
jge
js
scas
add
sar
xchg
cwtl
mov
push
loope
imul
pop
pop
ds
imul
adc
and
sbb
mov
push
xor
xchg
ljmp
dec
pop
jg
movsb
outsb
sbb
repz
fwait
dec
loopne
mov
lahf
arpl
mov
pop
or
add
ret
lea
pop
repnz
pop
ss
mov
movsb
or
clc
pop
lcall
xchg
fcompp
jbe
adc
xchg
imul
sbb
dec
inc
sbb
fcompl
fsqrt
dec
adc
pusha
out
ja
cmpb
jp
mov
inc
dec
cmpsb
or
mov
movsb
sti
fxch
ja
subl
nop
inc
or
or
out
daa
es
scas
cmpsb
stos
es
aam
mov
aad
and
outsb
xchg
xchg
and
aaa
dec
je
stos
sbb
aaa
dec
jnp
mov
pop
stos
xor
pop
cli
ds
sub
adc
and
aaa
pop
dec
push
repz
sbb
and
add
les
mov
pop
mov
out
xor
mov
outsb
mov
xchg
sahf
xchg
sahf
out
stc
and
jnp
lret
arpl
xor
cmpsb
push
jmp
and
mov
jmp
mov
mov
movsl
hlt
gs
pop
aad
adc
push
je
add
xchg
jl
xchg
xchg
jne
stos
xor
pop
sub
leave
xchg
xchg
jbe
add
dec
inc
ret
xchg
pop
pop
lahf
xor
dec
pop
jecxz
cmp
add
or
sbb
pushf
xor
mov
js
aas
dec
cmc
daa
and
sarl
jne
ret
ffreep
xchg
rol
mov
cmp
imul
ret
sub
sub
mov
jne
jno
xlat
cmp
movsb
mov
out
aas
inc
xor
leave
pusha
push
insb
cld
add
push
jmp
pop
fsts
lret
mov
or
cltd
je
outsb
sbb
xor
lds
cwtl
pop
fistpll
xor
imulb
rcll
or
or
lock
push
inc
lods
or
aaa
les
xchg
xor
cmp
add
push
push
push
mov
lcall
inc
jg
pop
sub
mov
test
gs
out
and
or
inc
movsl
and
sbb
insl
add
lods
mov
sub
xlat
enter
jmp
xchg
mov
dec
in
lods
fldcw
mov
les
fwait
out
push
ds
in
cmp
mov
xlat
sbb
ret
mov
sbb
lahf
jnp
add
sub
dec
jns
sub
js
stc
fisubrl
cltd
aam
jge
sbb
in
jp
sbb
dec
mov
test
ss
or
mov
jne
xor
jnp
xor
mov
xchg
rol
mov
pop
aaa
jg
popa
inc
cltd
xchg
xor
dec
pop
insb
push
jmp
mov
jg
pop
sbb
adc
push
xchg
dec
rcrb
popa
jo
jae
in
jb
call
mov
cld
mov
pop
mov
pop
cmp
xor
and
sbb
popf
sbb
pop
mov
lods
loope
xchg
lock
xlat
hlt
xor
mov
sarb
lahf
mov
ljmp
vsubpd
sub
sbb
adc
and
test
pop
std
mov
movsb
push
das
xchg
dec
imul
push
fwait
outsl
test
jno
in
pcmpgtd
adc
rorl
mov
leave
sbb
adc
mov
int
inc
fistl
cmpsl
loop
fsts
and
pop
imul
outsl
mov
aad
aam
mov
dec
mov
lods
lock
mov
lds
jnp
and
push
icebp
ret
mov
sbb
outsl
xor
pop
lcall
popa
mov
popf
insb
push
dec
mov
stos
sub
arpl
and
sbb
cltd
pushl
sbb
mov
cmp
adc
pop
aas
jmp
leave
xchg
add
jo
hlt
mov
mov
dec
mov
and
jecxz
mov
out
mov
data16
push
rcrb
pop
jg
mov
pop
jno
loopne
shll
mov
push
fiaddl
push
int3
neg
mov
lret
mov
pop
cmp
push
les
push
mov
inc
scas
fists
and
pop
inc
imul
jl
add
jo
je
mov
and
sbb
mov
das
adc
filds
imul
push
inc
hlt
jmp
mov
loop
fdivr
push
pusha
mov
cmp
rol
shufps
insl
xchg
cmpsb
or
repnz
mov
push
cmp
pop
mov
and
loop
inc
or
stos
dec
ja
jb
cmp
leave
in
and
stc
jne
sarb
insl
add
out
rcrb
test
and
mulb
repz
pop
xchg
pushf
movsb
and
lcall
adc
stc
push
and
mov
xorb
or
test
and
out
xchg
dec
push
inc
lea
xor
pop
in
xor
add
aad
fsubl
in
pop
mov
push
cmpsb
cwtl
int3
aas
dec
es
cmp
pop
sbb
push
aas
xor
hlt
mov
mov
fstpt
bound
daa
gs
sub
notl
mov
jo
jnp
mov
dec
test
call
das
cmp
test
pushf
pusha
fdivrl
or
jp
repz
jno
xchg
stos
inc
mov
loope
fadd
inc
shlb
bound
scas
pop
ret
jbe
sti
inc
inc
inc
fwait
iret
cmp
rcrb
add
xor
or
outsb
dec
in
sub
lahf
fisubrl
mov
and
jo
mov
or
les
lret
push
or
jb
cmp
or
out
fisubrl
nop
mov
insl
push
sub
or
dec
les
ljmp
pop
adc
lea
repnz
fldt
jae
jns
pop
jecxz
rorl
jg
adc
gs
sti
push
fldt
mov
cltd
fwait
and
jb
sub
cmp
add
mov
jle
addr16
mov
leave
push
sbbl
cmpsl
jl
iret
xchg
test
emms
fmulp
js
mov
add
xchg
clflush
cmp
in
bnd
enter
sub
or
pop
out
fyl2x
mov
push
fmulp
jae
dec
pop
es
cmp
jle
vpsllq
test
xor
mov
js
lods
clts
cmc
xchg
mov
cmp
bound
ljmp
imul
mov
mov
rcrb
imul
popa
in
jmp
inc
fwait
scas
testb
insb
push
adc
fimull
cltd
inc
push
or
push
out
or
cmpsb
ljmp
add
jo
xchg
xor
sbb
std
std
push
cltd
test
orl
pop
mov
dec
rorl
subb
rorb
inc
push
jg
jmp
js
and
adc
inc
into
daa
cmp
sub
or
jle
inc
sbb
call
mov
dec
out
sub
xor
add
aad
cmpsl
add
push
jne,pn
adc
ss
mov
rolb
pop
jo
lods
test
mov
jae
das
or
and
jmp
or
pop
mov
mov
cmp
pushf
dec
sub
adc
scas
daa
mov
mov
stos
mov
outsl
cmp
sbb
fildl
fidivs
loopne
imull
dec
sbb
jb
out
enter
adc
leave
jg
cmp
aas
sub
xchg
add
sbb
and
movsl
sbb
jmp
mov
shll
sub
stos
movsb
push
pop
xor
repz
pop
mov
sub
jl
lock
dec
xor
ret
inc
sub
inc
lea
xchg
xor
xchg
mov
adc
and
mov
mov
mov
mov
clc
pop
jo
rol
jg
push
nop
add
int
and
dec
popf
mov
dec
xor
hlt
stc
jecxz
mov
sub
mov
push
mov
mov
jb
dec
and
cwtl
popf
cli
in
push
ret
xchg
fisttps
das
inc
icebp
push
push
cmpsl
lods
loop,pt
in
notl
pmaxub
and
inc
xchg
push
out
mov
mov
xchg
test
lahf
cmpsb
xchg
ds
into
dec
ret
icebp
pop
fmuls
xchg
push
pop
jle
push
lcall
push
in
xchg
mov
xchg
out
adc
iret
inc
push
xchg
xchg
xchg
fwait
rorl
xor
pop
sti
cltd
mov
push
push
or
jmp
testl
cmp
xchg
cwtl
mulb
stos
lret
outsl
aaa
je
and
loope
jge
push
sbb
hlt
pop
mov
mov
call
js
les
jae
movsb
jne
ret
push
jecxz
jnp
stc
xchg
xchg
and
jg
sbb
inc
dec
scas
inc
push
push
jb
std
jb
mov
fnstenv
cmp
mov
mov
fldcw
push
mov
dec
cmc
mov
into
and
jmp
scas
inc
sbb
and
sbb
inc
xlat
mov
mov
jmp
fimuls
jae
mov
rcrl
push
jnp
int3
call
fstps
loop
leave
and
xor
fsubl
jle
cli
sarl
out
gs
and
inc
repnz
pop
ss
cmp
push
mov
enter
jo
sub
mov
addr16
jo
pusha
and
dec
xchg
sbb
repz
or
gs
mov
xchg
cmp
add
xchg
cmc
mov
pop
jbe
clc
es
loop
imul
shll
lock
push
mov
imul
rcrb
lcall
test
stos
fs
out
cmp
shrl
mov
jnp
mov
xchg
icebp
fs
adc
mov
sub
mov
cmp
div
add
pop
fmull
cmpsl
stc
dec
clc
rcl
orl
clc
faddl
int
cmp
fildll
add
add
add
stos
aam
cmp
out
dec
sti
icebp
cltd
aam
xchg
xor
and
ret
xchg
adc
sub
mov
stos
mov
pop
mov
lret
pop
and
mov
imul
int
inc
pop
aas
dec
xchg
dec
xor
dec
lret
cmpsb
dec
sbb
in
add
jmp
jp
push
jg
ljmp
scas
call
icebp
mov
int3
daa
mov
lds
cmp
mov
loop
mov
adc
rcrl
ljmp
add
in
mov
inc
push
jne
out
scas
mov
jg
cld
shlb
jae
clc
out
shlb
aas
sub
fldt
sbb
cmpsb
stos
cmp
mov
insb
rclb
xchg
inc
cld
mov
pushf
pop
fistpl
mov
cltd
lret
pop
mov
pop
mov
mov
add
fistpl
jl
out
or
cs
jp
xchg
add
iret
outsb
lock
fisttpl
lret
add
aaa
aam
xor
cmp
add
std
test
dec
outsl
ficoms
jno
stos
pop
in
push
xchg
sbb
int3
fisubrl
mov
mov
jle
and
loop
pusha
mov
popf
out
xor
jne
mov
shll
fdivrs
xor
pop
mov
add
inc
pop
push
adc
or
pop
inc
and
cltd
jo
dec
xchg
fsubs
enter
loope
loope
test
mov
hlt
add
bound
mov
adc
add
icebp
cld
push
mov
mov
repz
add
xor
cwtl
fcomps
jmp
ret
iret
popf
addr16
lcall
movsl
call
cld
xor
mov
hlt
mov
xchg
pop
leave
inc
cli
rcll
insl
lret
repz
jge
mov
jl
decb
jp
bound
lods
lock
xor
cs
add
dec
rolb
insl
xlat
mov
pop
cmp
jge
insl
outsl
jle
jle
movsl
add
mov
xchg
dec
std
shll
push
mov
xor
and
mov
loope
mov
mov
add
mov
sub
jg
int
adcl
adc
push
lds
fdivs
int
jg
adc
data16
into
gs
negb
inc
repz
pusha
out
xor
lret
mov
cwtl
mov
leave
adc
stos
push
pop
mov
cmp
or
and
push
lahf
cmpsl
int3
dec
imul
mov
pop
cmp
mov
inc
pop
in
clc
sahf
and
adc
dec
and
shll
repnz
jnp
jne
push
or
mov
lahf
inc
ret
das
arpl
js
stc
or
out
cmp
dec
dec
sti
je
inc
jae
sbb
adc
cmp
sub
mov
cld
cmp
jmp
jle
std
pusha
add
push
fcmovbe
aas
dec
aas
test
sub
loop
neg
insb
jmp
add
out
idivl
add
cs
sarb
sbb
inc
sub
rcl
icebp
dec
repz
dec
add
lret
fs
lea
mov
add
xchg
push
insb
xchg
pushf
andb
cmp
pop
adc
mov
hlt
sar
push
and
enter
xor
sbb
es
dec
jecxz
shll
sub
mov
test
sub
and
call
dec
aam
mov
mov
adc
lods
out
pusha
sbb
xor
sub
hlt
decl
je
icebp
add
inc
arpl
add
pop
inc
int3
mov
or
data16
pop
repz
ja
mov
je
mov
add
arpl
mov
sub
jns
or
lret
out
lahf
fcomp
inc
jg
fwait
mov
leave
pop
lret
icebp
push
push
mov
mov
xchg
jne
push
mov
xor
dec
jbe
roll
jbe
outsl
out
jge
fstp
sub
jbe
push
mov
fidivs
int
ja
push
sbb
outsb
testl
inc
repz
clc
jae
jecxz
mov
adc
jl
ds
sahf
stos
xchg
mov
dec
push
inc
shl
stc
hlt
std
ret
dec
jmp
mov
xor
xor
inc
iret
ror
aaa
in
add
jp
sub
daa
pop
cmp
jle
inc
add
sbb
loop
scas
adc
in
popa
add
mov
cmp
test
jnp
cmp
lcall
dec
out
xchg
pop
xor
mov
jle
or
addl
sub
dec
sub
sti
arpl
mov
and
mov
adc
insl
dec
push
out
lds
mov
shrl
icebp
sub
mov
push
mov
xchg
mov
jb
test
adc
jl
lahf
adc
scas
clc
mov
repnz
inc
jne
out
in
sbb
xor
mov
mov
roll
pop
outsl
xor
jl
imul
sub
jmp
or
push
push
pop
leave
pop
daa
cs
push
lret
ss
push
xchg
push
push
in
sahf
inc
add
adc
xor
sarl
and
xchg
sub
ret
mov
dec
repnz
pop
int3
mov
pop
loop
es
in
pop
mov
hlt
mov
mov
fdivrs
fdivs
sub
aad
fwait
xor
inc
inc
add
dec
cmp
scas
in
fldenv
add
cmpsl
mov
add
fildl
rcll
dec
in
jne
outsl
mov
ds
insl
lds
mov
int3
inc
scas
xor
cmc
test
add
stc
pusha
cld
mov
data16
and
xor
mov
mov
mov
push
pushf
bound
inc
xchg
out
outsl
out
rolb
and
cs
shlb
imul
adc
dec
push
mov
lods
aaa
inc
sub
cmp
das
adc
pop
out
mov
push
xor
jmp
movsb
into
popf
adc
sbb
and
jne
xchg
jmp
push
or
add
xchg
xor
jbe
mov
pop
subl
jno
push
loop
fscale
xchg
dec
fimull
mov
sub
xor
jge
and
ret
std
jbe,pt
or
dec
jb
xor
add
add
mov
inc
imul
and
inc
incl
fimull
pop
push
mov
push
and
scas
jo
mov
lds
pop
and
test
or
xor
fsubrl
icebp
mov
mov
cmpb
fiadds
add
int
adc
push
lods
js
addr16
xor
mov
daa
fwait
push
or
mov
aaa
repnz
sbbb
inc
dec
add
lret
mov
push
shl
stc
xchg
pusha
jns
int
scas
mov
je
jne
ret
jp
mov
test
mov
aam
pop
and
outsb
out
loop
lock
mov
xchg
or
bound
jp
popa
xchg
fimuls
test
cmpsl
fistps
inc
cltd
js
arpl
ss
int
pop
aad
add
in
push
shrb
add
mov
sub
push
push
and
das
lods
lret
mov
and
popf
loopne
pop
sub
int
jp
xchg
clc
fistps
and
hlt
out
lods
aaa
sub
adc
dec
roll
ret
mov
arpl
outsb
mov
into
dec
sub
sbb
clc
mov
mov
iret
loope
jl
mov
lahf
out
xchg
and
push
pop
sub
mov
add
xlat
lea
ret
inc
fdivr
mov
cmpsl
and
push
mov
andb
into
push
cmpsl
jmp
fnstsw
fwait
xlat
xchg
movsb
add
mov
fadds
xchg
ret
ljmp
inc
repnz
mov
pop
lock
mov
call
popa
cmp
repz
outsl
test
in
ja
decb
jg
or
or
mov
push
bt
mov
sub
mov
aas
pop
shlb
pop
aas
and
lods
sbb
shr
pop
aas
jp
push
and
jle
nop
jae
mov
call
mov
pushf
rcll
sahf
push
sbb
insb
mov
add
xchg
xor
inc
mov
into
stos
xor
lods
rorb
shrl
in
xor
and
xlat
shrl
add
cmc
movsb
or
fidivl
inc
bound
xchg
sbb
mov
shrl
jg
ret
lock
imul
pop
mov
push
loop
movsb
pop
mov
repz
lahf
pop
sbb
mov
mov
addr16
cmp
mov
fdivl
mov
inc
sub
pop
fwait
inc
jno
daa
repnz
mov
mov
mov
outsl
dec
cmc
aas
loop
imull
add
jae
mov
jo
inc
enter
mov
pop
movsl
cwtl
mov
dec
xorb
cmp
rclb
cli
jmp
fcoml
push
jns
push
scas
cmp
and
les
jo
and
cmp
mov
xor
jmp
stc
fs
pop
adc
ljmp
addr16
mov
inc
lea
jae
lods
pop
test
out
pusha
mov
xchg
test
ja
mov
mov
ss
sbb
imul
pop
pop
ljmp
insb
loopne
repnz
inc
inc
dec
scas
test
mov
je
lret
test
mov
adc
or
out
pop
push
mul
sbb
or
outsl
mov
rcll
sub
aas
adc
push
adc
dec
lcall
mov
add
xchg
xchg
push
jno
adc
aad
push
cli
shrl
mull
cmc
scas
ds
mov
mov
enter
aam
adc
adcl
xor
jecxz
sbb
or
std
mov
movsl
mov
xchg
sarl
mov
push
ret
sub
or
xchg
mov
scas
iret
movsb
lds
add
dec
mov
inc
pop
push
adc
sbb
inc
fdivl
fwait
repnz
pop
jo
add
jns
jl
adcl
pavgw
enter
ljmp
mov
fs
mov
lahf
cld
pop
inc
cs
add
addr16
dec
dec
push
popa
fmull
push
adc
ja
sbb
mov
sti
std
popa
xor
mov
std
mov
lods
cmpsb
sbb
mov
insl
sub
insb
icebp
icebp
or
cmc
push
xor
adc
orb
pusha
aaa
dec
and
scas
cmp
sahf
and
mov
cmp
push
xchg
daa
loopne
pop
test
shrb
loope
repz
cwtl
mov
fsin
jle
and
inc
adc
test
jmp
cmp
nop
and
nop
jbe
mov
gs
leave
mov
jecxz
push
pusha
adc
cwtl
loope
rcrl
mov
fwait
sbb
sahf
and
mov
hlt
dec
loope
xor
fs
or
in
cli
pop
jno
into
cmp
loope
pop
fists
test
and
pop
mov
bound
or
push
adc
cmpsb
sbb
mov
pop
push
jecxz
mov
jecxz
mov
push
out
outsl
mov
sub
sub
and
divb
jl
jne
add
stos
inc
xchg
xor
inc
xor
stos
sub
add
dec
movl
out
push
jge
push
inc
jl
sti
cmp
lret
inc
fdiv
loopne
xor
ja
mov
xchg
repz
push
mov
aad
add
pushf
and
jns
shll
dec
bound
sbb
aam
xchg
add
or
dec
add
ror
ljmp
adc
adc
dec
xor
mov
push
test
sub
movsl
popl
insb
xchg
sbb
sub
fisubrs
repnz
rcrb
or
add
pushf
testl
sahf
sub
aas
xor
inc
push
imul
push
pop
clc
decl
aad
and
mov
jge
push
and
cmp
imul
push
jl
xorb
nop
sti
add
test
arpl
lret
mov
cmc
xor
mov
jge
subl
loopne
cmp
outsl
rcl
rorl
movsl
call
icebp
mov
pop
in
mov
arpl
fxtract
dec
sti
push
xchg
out
add
add
in
fwait
xor
xchg
push
inc
xchg
int
inc
loope
cmp
sub
and
or
cmpsb
pop
cmp
gs
and
sahf
mov
cmp
ljmp
scas
fadds
pop
mov
cmp
and
mov
push
lahf
mov
cmpsb
xor
jge
daa
pop
pop
sbb
mov
mov
stos
mov
inc
add
cmp
aam
addb
test
aad
push
cmp
jl
pop
mov
aad
push
imull
movsl
icebp
xchg
pop
inc
fsubl
fmull
and
dec
lock
push
hlt
dec
lods
imul
xorl
or
add
clc
outsb
das
mov
cltd
add
das
popa
lret
nop
fwait
cmpb
xor
cs
jp
lcall
inc
ret
and
cmpsl
popf
dec
adc
aaa
lock
insb
enter
sub
xor
cmp
imul
shlb
xchg
arpl
xchg
push
addb
adc
jne
jns
mov
dec
mov
adc
cmp
add
mov
pop
rcll
xor
mov
scas
sarl
xchg
jle
movd
cli
sub
sbb
enter
mov
ret
add
cs
jmp
jo
push
sub
jg
xchg
js
test
inc
inc
mov
pushf
jmp
idivl
mov
sub
mov
scas
jecxz
mov
cwtl
ret
adc
mov
rorb
push
fcompl
dec
outsb
cmc
js
fwait
mov
cmc
sahf
cmp
bnd
repz
fldlg2
cmp
subl
pop
hlt
cmpsb
xor
push
dec
bound
cmp
test
add
mov
pop
cmpsb
frstor
jbe
inc
js
sbb
cmp
adc
std
sub
lret
xor
pusha
jnp
sbbl
and
repz
cmp
sbb
xchg
imul
dec
shl
mov
cli
push
int3
dec
clc
mov
aaa
mov
sub
cmp
xchg
cmpsl
lock
mov
dec
iret
sub
loop
jmp
gs
cmp
clc
jecxz
fimull
sahf
xchg
fstpl
icebp
xor
mov
push
xchg
int3
or
xor
jne
cmp
ljmp
adc
iret
cmp
jge
jl
add
cmpsb
fwait
sub
aaa
inc
cmp
mov
adc
mov
dec
mov
loope
lret
frstor
clc
sbb
in
into
idivl
xor
mov
jae
mov
dec
imul
popa
in
lock
aaa
clc
add
je
mov
popa
movsl
add
jp
or
lret
lret
scas
fdivp
cmpsb
mov
outsl
pop
pop
testl
push
mov
adc
sub
jp
pop
and
mov
out
repz
pop
aas
adc
or
mov
call
xchg
inc
xor
fnstsw
add
aaa
cltd
out
pop
jl
pop
dec
icebp
test
in
jno
sbb
pop
mov
jl
iret
push
adc
xchg
std
jg
inc
push
fsubr
or
into
dec
into
addr16
mov
sarb
es
sub
xor
xchg
mov
in
mov
scas
cld
aas
push
cltd
mov
setg
mov
inc
pop
add
push
or
leave
push
fnstcw
insb
decl
push
pop
popa
clc
roll
enter
push
or
testl
mov
sahf
sbb
paddd
and
shrb
iret
xchg
adc
push
dec
jmp
sub
cmp
pop
adc
add
int3
nop
adc
hlt
cmp
pushf
mov
dec
nop
subl
inc
imul
cmp
jns
outsl
adc
repnz
int3
dec
test
add
lock
add
xchg
xor
cmp
adc
pop
pop
add
fisttpll
push
imul
js
imul
outsl
jno
jbe
lea
push
repz
mov
and
aad
stc
filds
or
mov
pusha
negb
jno
sub
inc
in
push
sbb
inc
mov
adc
xchg
daa
in
dec
xchg
cmpsl
pushf
xor
inc
inc
push
int3
mov
jo
xchg
shlb
aaa
test
pop
mov
cwtl
xchg
frstor
popf
mov
sub
lock
cmp
scas
push
mov
sub
push
xchg
xchg
push
data16
dec
sbb
cmp
jae
ss
jns
or
jbe
cmpsb
push
pop
inc
jecxz
sbb
cmpsl
data16
cmp
lret
sbb
adc
xor
in
cmpsl
jae
mov
std
pop
fimuls
loopne
pop
out
mov
in
out
les
cli
dec
stos
xor
xchg
pop
enter
shll
cmp
cmpsb
mov
fdivl
es
int
hlt
cmp
or
loop
pushf
sbb
and
sub
pop
and
out
xlat
mov
ds
mov
sbb
loopne
arpl
add
add
lods
add
push
pop
pusha
loope
call
nop
lods
jb
push
or
repnz
clc
sub
push
adc
push
jae
xor
xchg
sbb
sub
and
dec
push
in
jmp
pusha
mov
sti
je
lahf
mov
push
flds
dec
ja
push
repz
add
mov
cmp
jg
mov
sbb
jp
mov
test
sub
frstor
xchg
cli
mov
fstl
ljmp
sbb
mov
adc
fistpll
jmp
lods
mov
cli
push
mov
sub
xchg
pop
mov
test
fistl
arpl
cmc
mov
sbb
js
adc
pop
pop
mov
sti
out
fsubs
pushf
pop
pop
in
sarl
std
test
mov
mov
jne
fisubrs
or
es
sub
jo
mov
jl
mov
stos
adc
bound
jmp
insb
mov
daa
cmovae
fdivrp
sbb
iret
movsb
out
scas
mov
mov
clc
adc
push
pop
ljmp
cmp
push
fistps
push
push
cltd
fmul
sbb
insl
cmp
cld
xchg
mov
in
mov
addl
fs
adc
mov
fcomip
xor
xchg
xlat
xchg
push
xor
rol
loop
repz
filds
fisubrs
andl
mov
ja
aaa
notl
push
inc
pop
mov
shl
in
ficoml
jno
cmp
pop
out
sbb
xor
pop
or
fstpl
lea
inc
das
lock
and
cli
ret
clc
fldz
xor
or
push
clc
lock
mov
dec
push
sbb
jp
in
fsub
lcall
cmc
jle
cmpsb
nop
or
ret
push
push
inc
pop
jnp
ss
icebp
popf
icebp
dec
dec
rolb
sub
jg
jg
adc
push
lea
out
mov
mov
lds
orl
in
pop
in
out
mov
cmpsl
sbb
cmp
mov
mov
dec
xor
enter
call
rcrl
xchg
and
iret
pop
iret
push
cs
xchg
jg
mov
mov
das
jp
adc
in
cmp
movsb
mov
inc
jbe
xchg
adc
iretw
ret
jg
enter
test
loop
mov
mov
lock
lea
cli
out
jp
repz
daa
push
xchg
pushf
adc
xchg
test
mov
dec
addr16
xor
fwait
xchg
int3
in
insb
xchg
mov
xor
xchg
inc
adc
jnp
jne
daa
dec
icebp
cmp
jb
int3
shll
dec
adc
dec
mov
sarl
pop
adc
cmp
add
aam
push
insb
mov
mov
insb
rorl
dec
xor
lcall
inc
lods
fwait
mov
sbb
stc
dec
imul
push
out
xlat
movsl
and
negb
test
jo
lahf
imul
xchg
in
cmp
cwtl
pop
inc
mov
shlb
inc
sti
sub
clc
pop
mov
mov
mov
pop
mov
jl
jno
fidivrl
lret
test
or
cli
mov
mov
ds
mov
lahf
mov
adc
mov
mov
nop
lock
jmp
sbb
xchg
add
call
jno
out
and
inc
imul
jnp
les
jbe
int
mov
idivb
das
and
sahf
add
cltd
push
sub
mov
movsl
fsubrl
xor
mov
adcl
jb
cld
mov
jp
mov
xor
push
not
aad
cwtl
cmpsb
leave
dec
cmpl
push
push
je
mov
les
sbb
pushf
xlat
jno
mov
inc
repnz
fistpll
inc
or
jbe
fisttpll
pop
stc
cmp
negb
test
leave
gs
inc
cmpsl
jns
inc
push
inc
xor
hlt
jmp
repnz
mov
inc
mov
mov
jg
xchg
mov
dec
test
rcll
and
sbb
cmpl
xchg
out
insl
sub
inc
xor
mov
mov
sbbb
jp
jge
lahf
std
fwait
cmp
pushf
shll
cmp
fcmovb
sub
jb
cmp
mov
test
ljmp
push
bound
insl
add
cmp
or
mov
inc
bound
mov
icebp
fisubrl
dec
js
add
std
cwtl
mov
lods
cltd
mov
pop
lock
or
faddl
out
mov
inc
loopne
sar
lods
jmp
xor
iret
cmp
or
and
mov
add
xchg
dec
lahf
mov
and
add
or
es
je
cmp
out
jns
or
inc
movsl
mov
pop
xor
jg
adc
fcoml
xorb
fisubs
push
jno
test
jg
cmp
ret
mov
add
push
sbb
fcom
sbb
lcall
cmp
rcrl
icebp
mov
or
xor
sbb
pop
mov
sub
mov
dec
xor
jl
jl
out
sarl
imulb
dec
testb
jbe
mov
add
out
mov
or
outsl
push
cmc
or
cli
insl
repz
ret
xchg
sbb
sbb
repnz
jbe
pop
push
add
inc
sahf
mov
inc
mov
pushf
adc
inc
daa
pop
insl
cmc
repz
mov
adc
in
add
inc
jno
adc
je
jo
packuswb
ficomps
pop
adc
mov
test
bound
xchg
call
push
cmp
jecxz
out
aaa
pop
loop
add
out
outsl
add
cmpsb
data16
ljmp
jb
dec
sbb
mov
jno
add
lea
jg
or
mov
and
in
andb
das
or
in
sahf
outsb
rorb
popa
jle
daa
pextrw
cmp
add
xchg
pusha
cmp
and
push
subb
nop
repnz
movsb
mov
sub
mov
pushf
xchg
mov
popa
mov
inc
jmp
popf
mov
shll
mov
xor
push
xchg
loopne
leave
inc
rolb
int
jmp
push
das
test
gs
aas
cmc
adc
xor
mov
add
int
jne
mov
icebp
sbb
mov
andl
or
jg
jo
cmpsb
xchg
psubw
lret
or
xchg
leave
cmp
int
je
icebp
cmp
cmp
test
lret
jno
and
pop
idivl
inc
les
arpl
dec
sbb
jnp
xchg
out
xchg
jmp
fidivl
adc
out
clc
pop
dec
mov
cmpsb
push
inc
sub
shlb
dec
and
pop
add
mov
jne
rclb
scas
adc
adc
icebp
sub
jne
rorl
mov
xor
xchg
repz
cltd
xchg
cld
dec
mov
pop
xchg
adc
bound
mov
cld
add
fs
mov
xchg
push
bound
xor
cmp
xor
stos
push
sub
inc
cmpsl
in
cmp
inc
mov
mov
and
call
adc
shrl
inc
inc
mov
sbb
imul
out
inc
sub
pushf
hlt
mov
push
pop
lahf
or
inc
jnp
je
ljmp
inc
sbb
sbb
insb
push
cld
imul
leave
sbb
andnps
test
push
out
cwtl
xabort
xchg
jae
cmp
movsl
push
sahf
loope
in
je
inc
mov
out
mov
outsl
icebp
cwtl
mov
fnstsw
mov
push
cmp
mov
add
lahf
fmul
outsb
xchg
std
mov
dec
pusha
or
add
ret
dec
aad
xchg
add
cmp
sbb
sbb
lahf
out
adc
xchg
xchg
inc
sbb
pop
inc
or
sbb
cltd
ficoml
nop
pushf
and
cmp
test
push
loope
gs
orl
mov
scas
inc
jae
fdivrs
jae
push
jo
xor
repz
xchg
xchg
or
jge
cld
cmp
lods
sbb
add
jne
outsb
mov
push
add
testl
mov
stos
aas
dec
popf
push
repnz
and
or
dec
aaa
movsl
fisubs
sub
cmp
je
ljmp
push
inc
mov
push
bound
dec
pop
cs
pop
pop
xchg
stos
add
sub
fcompl
dec
mov
cld
clc
jne
or
es
xchg
inc
test
mov
sbb
sbb
pop
scas
mov
loop
iret
fs
testb
pop
xchg
fcmovbe
lcall
adc
sbb
and
aaa
jl
fs
sub
cmp
add
cli
jno
das
mov
ret
add
rcr
jb
sarl
call
xor
aad
pop
mov
or
push
ret
sbb
cmpsb
insb
add
and
fwait
or
dec
fildll
add
sub
jno
xor
stos
mov
push
aam
aad
push
push
xor
imul
rorb
cld
fs
adc
mov
cs
sub
enter
std
sbb
imul
sub
add
mov
fnstcw
or
mov
and
insl
mov
dec
sbb
pop
js
data16
mov
or
inc
into
scas
out
lods
pop
pushf
push
pop
fnstsw
sub
cli
pop
enter
xlat
xor
add
cmc
sbb
neg
dec
push
xor
mov
push
flds
test
das
mov
adc
leave
pop
xchg
aam
dec
stc
fdivr
in
ljmp
xchg
daa
shrb
loopne
in
mov
mov
bound
into
sbb
cwtl
test
nop
xchg
dec
mov
je
out
mov
mov
shlb
mov
dec
cmp
sbb
mov
ss
sub
sbb
cmovp
push
cmp
into
lcall
sub
aad
lods
adc
jecxz
test
pop
test
add
sbbl
insl
lds
sub
test
adc
test
pop
popf
inc
lcall
pop
lods
in
mov
push
ljmp
pop
pop
nop
cmpsb
aad
repnz
xchg
das
scas
fwait
push
cmp
out
ret
cwtl
jno
mov
insl
dec
lret
jae
scas
mov
imul
fwait
subb
xchg
push
dec
inc
aaa
mov
sbb
loope
inc
jb
xchg
push
mov
mov
mov
idivb
or
pop
mov
popf
sahf
cmp
jle
mov
movsb
ret
in
mov
out
cmp
cltd
xchg
and
fnsave
and
add
fisttpll
adc
dec
je
pop
gs
inc
shrb
push
insb
xchg
insb
mov
movsb
shll
shlb
cmp
xchg
sbb
add
mov
inc
jo
xchg
lret
adc
jb
fs
push
mov
mov
push
jge
inc
int
pop
mov
aam
not
xor
adc
inc
mov
cs
xchg
mov
jle
data16
inc
fdivs
jmp
mov
loopne
push
lcall
mov
outsl
sbb
rorl
pop
mov
loope
call
jecxz
int3
decl
sub
sbb
js
scas
xor
jmp
mov
cmp
sbb
push
cltd
leave
or
mov
cs
and
inc
push
jmp
sbb
imul
cmp
or
sti
mul
xchg
mov
leave
dec
mov
fstps
mov
xlat
cmpsb
push
rcll
ret
lds
cmpsl
mov
cmpsb
enter
and
insl
aam
fldt
xor
mov
pop
ret
in
cltd
mov
int
inc
bound
inc
cmp
mov
and
cs
push
into
xor
jbe
xor
inc
lret
adc
fs
inc
mov
mov
pop
es
cli
mov
outsl
insl
enter
or
fildll
cli
scas
add
cmpsl
into
xchg
int
jmp
loope
leave
popa
loope
xchg
xor
or
es
cmp
aas
insb
jge
stos
data16
data16
daa
bound
fidivl
aaa
push
xchg
sbb
inc
into
js
or
jo
maxps
sbb
outsl
or
dec
inc
pop
addb
mov
adc
pop
ds
mov
jecxz
adc
fistpl
lods
cwtl
loopne
pop
pop
lds
mov
sub
jno
push
out
mov
add
add
scas
dec
fcoml
lcall
push
or
cli
sub
dec
mov
js
stos
pop
xchg
jle
test
pop
rorl
lods
mov
cmp
mov
mov
jecxz
xchg
lahf
jo
mov
cmc
and
cmp
or
pop
xor
xchg
sarb
pop
lods
mov
aas
xlat
push
orl
mov
adc
sarl
and
jo
int3
xchg
popf
scas
aad
cmp
leave
dec
nop
lds
sub
sub
loopne
mov
scas
int
mov
test
xchg
sti
lret
in
cmp
add
repz
in
add
add
aad
mov
or
jbe
mov
shrl
jl
andl
scas
xchg
mov
jle
xchg
add
lea
leave
jno
mov
jnp
and
pop
jae
imul
pop
ss
test
adc
cmpsb
icebp
pop
or
in
ret
nop
push
loopne
pop
test
xchg
popa
lods
loop
xor
mov
xor
cmpsb
ja
cmpsb
mov
and
mov
mov
push
adc
ret
lods
loope
cmp
pop
sahf
negl
mov
xor
shll
xchg
stc
xor
call
imul
jl
ret
stc
into
in
cli
push
xor
cmp
nop
jne
xor
pop
xchg
dec
dec
pop
jecxz
pop
inc
push
pop
out
daa
or
jne
rcl
repz
mov
daa
mov
jl
jae
jo
lods
cltd
add
jbe
mov
mov
jle
inc
jnp
cs
or
ret
mov
daa
popf
decb
out
into
or
sbb
and
push
je
xchg
inc
xchg
sahf
lods
mov
mov
mov
jnp
xor
in
jnp
sbb
and
push
jmp
fldenv
adc
ds
movsb
push
cmpsl
std
lds
pop
out
stos
jle
jmp
in
cmpsb
add
lds
cli
sti
xor
push
mov
sbb
in
das
adc
and
dec
std
dec
push
mov
pushf
xorb
sub
insl
dec
pop
int3
sub
or
mov
lea
adc
test
aaa
bound
jge
in
push
pusha
fucomp
or
and
out
jno
mov
sub
xor
push
xor
sbb
lret
adc
int3
push
fcomps
cwtl
mov
inc
inc
lds
xor
xchg
pushf
mov
sbb
mov
dec
push
jb
sub
out
into
inc
lret
mov
xchg
mov
add
ljmp
pop
inc
imul
aas
nop
jg
decl
clc
cli
cmp
out
inc
ret
mov
mov
lea
cmp
fidivl
mov
lods
icebp
popf
popf
das
or
je
xchg
out
jmp
xor
lds
cmp
mov
out
xor
fsubr
sub
cli
lahf
dec
sarl
mov
pop
out
pop
mov
adc
movsb
sub
arpl
aaa
mov
mov
sbb
mov
xchg
sbb
sub
push
lock
sub
xor
jecxz
dec
inc
sbb
inc
pop
into
adc
mov
fistps
push
dec
xlat
pop
insb
bound
lds
sbb
add
or
or
loope
jno
jge
cld
stos
jmp
movsl
xchg
xlat
jae
je
fwait
sub
ja
and
adcl
xchg
push
call
test
cmp
pop
fwait
inc
adc
pop
and
and
sub
mov
test
arpl
setle
mov
cmp
in
add
or
outsb
or
adc
cmp
lret
in
jne
cmpsb
xor
sbb
push
mov
movsb
int3
xor
lods
adc
mov
sbb
jmp
sub
push
mov
push
fstpt
cli
les
shlb
mov
cmp
xor
jmp
push
popf
int
movsb
fdivr
xchg
shll
pop
das
mov
jb
push
cld
daa
sbb
or
pushf
add
or
pop
in
pop
int3
xor
test
popa
arpl
cmpl
or
outsb
jmp
ljmpw
gs
jp
mov
pandn
pop
outsb
pushl
cmp
arpl
jmp
add
std
cs
and
mov
adc
rol
add
mov
pusha
orl
fdivs
adc
fwait
jmp
testl
add
xor
int3
pop
xchg
mov
fisttps
mov
test
jnp
sub
mov
mov
mov
xchg
pushl
push
add
push
aam
dec
flds
mov
in
in
jbe
cmp
enter
icebp
or
aad
into
fucomp
mov
cmp
je
lret
push
mov
shrb
inc
fistl
adc
out
adc
adc
test
pop
mov
and
or
xor
repnz
pop
fnstenv
dec
adcl
mov
out
mov
inc
hlt
iret
dec
add
inc
mov
pop
loope
mov
cmp
push
test
mov
scas
cmp
adc
xchg
pop
shlb
leave
popa
adc
jmp
outsb
pop
fidivrs
in
insb
les
xlat
inc
ret
daa
push
mov
out
xor
or
bound
or
les
and
dec
inc
adc
mov
lcall
mov
outsl
pushf
mov
aaa
in
xor
jb
xor
jno,pt
pop
sub
sbb
out
xlat
inc
int
and
repnz
lahf
insb
sahf
cwtl
pop
insl
adc
jecxz
jno
mov
mov
mov
fildll
fcomps
and
clc
or
cmpsb
popa
loope
cmp
popf
ds
mov
mov
test
stc
lret
and
and
ret
pop
pop
jb
or
xchg
mov
mov
xor
sahf
push
cmp
push
call
sbb
sub
adc
lret
jge
cs
sbb
das
sub
jb
lea
inc
jle
cmp
lret
pop
sub
sub
xchg
repz
repz
stc
int3
adcl
inc
adc
jo
push
mov
sub
shrb
in
jb
mov
addr16
divb
dec
fnstsw
sub
mov
sti
xor
mov
add
dec
cwtl
outsb
aas
push
inc
ds
push
inc
dec
fmuls
imul
dec
ror
sarl
dec
aad
mov
jns
lock
std
sbb
jl
lret
or
push
test
jp
repz
push
adc
xor
imul
push
jb
mov
in
imul
adc
sub
fnstsw
outsl
out
mov
aam
cmpsb
cmp
pushf
add
lcall
inc
mov
pop
xchg
xchg
dec
outsl
push
arpl
mov
mov
adc
sub
popa
pop
inc
adc
mov
data16
bswap
xchg
or
xor
push
mov
sbb
loopne
roll
shlb
add
xor
dec
es
je
test
lock
add
sub
jbe
mov
sub
lret
es
mov
fiaddl
test
xchg
adc
mov
sbb
dec
sets
mov
lcall
test
and
adc
outsb
mov
dec
add
mov
jne
rclb
mov
mov
in
fs
add
fs
xchg
in
mov
movnti
xchg
jle
push
dec
and
mov
movsl
and
fisttpll
xlat
ficoms
jno
push
push
cmp
cli
insl
addr16
or
mov
push
xchg
divb
mov
and
mov
lods
hlt
and
mov
cmp
lock
lods
adc
aad
or
push
adc
scas
ret
fldcw
out
sbb
out
ds
stos
xchg
mov
hlt
xchg
insb
adc
or
jns
pop
inc
in
sbb
or
or
xchg
mov
popa
xor
cmp
sub
ja
in
mov
and
mov
jns
rcrb
loop
test
ret
sbbb
sarb
adc
lret
and
xchg
mov
mov
push
xlat
mov
into
addl
iret
je
push
enter
in
fstp
call
loop
cmp
addr16
or
insb
out
ret
sbb
cwtl
add
cmp
pop
movsb
add
movsl
inc
mov
pop
iret
out
mov
pop
mov
mov
sti
aad
mov
lcall
mov
lret
fs
stos
push
ja
movq
sbb
fdiv
ds
or
sahf
mov
sub
cs
cld
xchg
stos
repnz
sbb
push
or
stos
cmovns
add
ljmp
adc
fcoms
ret
cmpb
mov
fsubrs
push
inc
push
ficompl
loopne
and
cmp
mov
pusha
repz
call
jp
ss
jp
aad
mov
dec
ss
xchg
clc
sub
ds
mov
hlt
testb
arpl
jnp
cmpsl
adc
addr16
dec
out
cli
sti
xchg
pusha
dec
lret
cmp
and
cmp
jg
or
daa
xabort
mov
mov
sub
call
mov
in
cltd
jns
xchg
cmp
jmp
add
test
sbb
fists
cmpsl
fimuls
mov
pushf
or
mov
inc
repnz
lret
pop
inc
int3
in
cltd
cmp
dec
pushf
movsl
mov
lea
out
dec
out
xor
data16
jecxz
inc
mov
arpl
sub
dec
push
mov
aaa
shlb
adcl
gs
faddp
insb
incl
sbb
mov
push
dec
and
push
cld
adc
mov
lds
xor
sbb
cwtl
xchg
popa
sahf
push
sti
add
or
scas
aas
cmp
movsl
out
xor
pusha
addb
inc
subl
pop
repnz
insb
and
dec
dec
ja
xor
mov
xor
inc
pop
cmp
in
and
or
push
xlat
xor
sbb
pop
xchg
lahf
inc
jne
push
pop
push
les
pop
xchg
cli
jecxz
xchg
loop
fildl
popa
inc
cmp
sbb
cwtl
es
test
test
xchg
inc
or
or
outsl
arpl
mov
push
push
cmp
pop
in
fsubrl
push
mov
and
xchg
dec
xchg
xchg
xchg
and
subb
push
push
divl
leave
inc
es
enter
mov
or
push
cmc
pop
inc
sar
mov
aad
pop
sub
mov
inc
out
nop
aam
cmc
repnz
stos
jg
daa
jne
fimull
mov
adc
inc
mov
and
shlb
out
or
pop
sbb
mov
dec
imul
xor
adc
add
cmpsl
movsb
adc
ret
mov
jecxz
arpl
icebp
sti
mov
mov
mov
shlb
cs
xchg
mov
cmpsl
and
mov
arpl
in
xchg
adc
cld
lods
xchg
sahf
dec
jge
nop
andb
cmpsb
sub
movsb
adc
pop
add
pop
sti
push
pop
pop
mov
test
xchg
mov
scas
call
jmp
jg
hlt
push
dec
sbb
in
mov
push
test
pop
int
ret
fnsave
jg
mov
pushf
lret
jl
sti
jb
pop
xchg
icebp
rcr
sahf
out
into
adc
mov
dec
test
lea
insb
insl
cmp
xor
pusha
mov
lea
data16
sbb
out
mov
adcl
test
mov
push
dec
loope
lds
xor
ss
lret
add
out
inc
jbe
cmp
fidivrl
fucomip
ffreep
xchg
in
mov
sahf
int3
push
mov
icebp
dec
push
adc
sbb
cmp
jbe
in
fs
scas
mov
xor
andb
sub
out
push
add
xor
pop
das
pop
aaa
push
insb
dec
jne
cmp
repnz
shl
push
imul
test
mov
dec
add
xchg
xchg
mov
push
or
and
mov
xchg
xor
lea
imul
loope
lea
fdivr
std
xchg
xlat
inc
lcall
inc
and
pop
imul
insl
lds
pop
mov
mov
maxps
jmp
adc
jne
xor
aam
dec
pop
js
xchg
dec
mov
sbb
add
sub
shlb
in
dec
mov
sbb
lcall
inc
pop
test
arpl
push
imul
loope
frstor
cmpsl
call
push
call
leave
and
add
or
cmpsb
rorl
mov
xchg
stos
push
arpl
enter
js
hlt
xor
or
inc
jmp
shrb
mov
pop
or
mull
mov
jns
cwtl
mov
mov
out
jo
dec
aas
in
hlt
pop
mov
cs
jl
leave
xchg
dec
lods
pop
push
mov
mov
push
mov
loope
mov
jmp
cli
aad
mov
fisttpll
dec
xor
jnp
stos
jecxz
stos
pop
insb
movsb
lock
rorl
into
iret
in
ret
outsl
mov
sub
mov
stos
push
aad
ljmp
inc
mov
lods
push
popa
sub
das
sub
and
jp
add
jp
rcrb
outsl
test
push
mov
pop
xor
int3
xchg
movsl
dec
pop
inc
add
and
jmp
divb
stc
jo
cmp
jbe
faddl
imul
or
aam
fmuls
test
xchg
ret
out
jae
push
gs
adc
pop
push
pusha
and
sbb
std
pop
cltd
rorb
push
jecxz
mov
push
xor
jbe
enter
sahf
in
or
lahf
jg
shrl
push
ds
loop
arpl
int3
adcl
xchg
jp
test
cmp
dec
out
lds
sub
aad
cmc
push
mov
out
mov
mov
xor
sbb
clc
jbe
mov
rcrb
mov
in
push
jns
pop
insl
mov
adc
dec
sub
das
or
leave
in
mov
shlb
add
xchg
mov
divb
push
or
fmull
mov
mov
xor
inc
jo
cmp
ret
xchg
inc
mov
pop
xchg
sub
xor
cmpl
pop
sbb
popa
sbb
push
repnz
das
call
pop
add
cmpsl
sbb
push
lret
mov
xor
adc
aad
add
shlb
aad
xchg
push
and
mov
or
lret
adc
int
divb
mov
pusha
cmp
cld
inc
pop
hlt
xor
fisttpll
mov
pop
xchg
fidivl
repz
cmp
lahf
int
dec
das
shll
pop
mov
sbb
aaa
lret
lods
dec
xchg
pusha
xlat
rol
mov
lahf
stos
sub
frstor
cmc
aad
push
pop
inc
push
fcoml
dec
lock
fsubr
and
adc
push
std
add
rorl
dec
cmp
rcll
loop
mov
adc
cld
dec
sub
push
or
jp
inc
cmpsl
inc
fcoml
int
pop
addr16
dec
xor
data16
test
or
cmp
rcrl
sub
dec
pop
push
pop
mov
add
add
sti
or
inc
add
pop
push
les
shll
loop
icebp
cmp
or
ja
out
icebp
xor
sbb
pop
mov
jno
rcrl
xchg
aas
shlb
out
mov
jne
xchg
sub
cld
push
sub
xchg
or
mov
inc
aaa
sub
mov
fs
push
adc
dec
lock
sbb
sub
inc
dec
add
dec
movsl
and
lock
adc
mov
sti
sub
adc
in
out
aas
pop
outsb
add
lret
adc
xor
jp
ljmp
add
pop
jns
gs
in
cmc
stos
lods
xor
jnp
dec
mov
mov
lret
mov
pop
mov
scas
pushf
dec
arpl
mov
outsb
and
test
ja
ss
ret
inc
and
stc
aam
test
pop
roll
and
pushf
int
fmuls
xor
mov
fidivrs
xchg
inc
nop
fidivrs
push
push
mov
daa
call
idivl
cvtps2pi
ljmp
and
fdivrs
icebp
in
sbb
aad
jmp
dec
sub
jo
fstpt
push
imul
iret
incb
loopne
or
mov
or
xchg
imul
testb
fimuls
sub
jbe
pop
pop
dec
das
jne
into
in
xor
jno
mov
fwait
popa
arpl
sahf
fldl
push
and
lcall
roll
mov
mov
push
fstp
fsubrp
lret
sbb
out
ss
ja
fucom
mov
add
mov
dec
shl
mov
lcall
xchg
add
sub
xor
sub
sahf
lahf
rol
ret
aaa
push
pop
jbe
jg
jp
aaa
adc
dec
adcl
mov
stc
ljmp
cmp
xor
pop
and
bnd
fstpt
lret
lods
ret
addr16
enter
cs
int
cmp
aas
mov
mov
mov
mov
push
inc
mov
sub
loope
ds
pop
mov
jmp
rclb
jns
and
sbb
add
mov
int3
or
std
or
push
push
es
inc
out
sub
ret
lea
je
stc
mov
bound
push
xchg
add
mov
mov
aaa
or
subb
repz
lret
into
gs
jge
push
addr16
stc
cmpsl
jo
mov
mov
inc
sahf
test
cmpsb
dec
pop
cmp
into
das
mov
cld
lock
shrl
rcr
push
outsb
pop
add
out
aas
inc
fs
test
adcb
loopne
cld
push
add
jae
stos
es
int
and
cmp
dec
jl
dec
in
cmpsb
cmp
fiaddl
xchg
notl
mov
fwait
or
and
and
je
cmp
push
mov
xlat
jl
mov
jl
loope
arpl
in
dec
pushl
int
pop
fisubl
mov
insb
test
push
mov
jmp
cwtl
jg
pop
dec
cmpsl
push
pop
and
inc
call
xor
pop
in
or
sub
and
int3
imul
lods
hlt
push
ret
int
jbe
cmc
mov
xor
push
pop
cmpsb
mov
clc
outsl
scas
mov
xor
lea
push
icebp
mov
ss
cltd
cmp
dec
push
push
popf
daa
in
jne
leave
sarb
cld
mov
daa
cmpsb
lcall
add
jbe
daa
cmp
mov
add
aad
adc
pusha
cwtl
push
xor
adc
mov
mov
or
popa
ffree
jg
fdivr
xchg
or
push
pop
jne
adc
or
push
xor
mov
cs
cmpsl
and
jae
or
negb
popf
cmc
aam
cmp
in
adc
sub
rcr
cld
jnp
mov
cmp
mov
dec
mov
sbb
aam
push
pop
jmp
sub
xorb
shlb
int3
xor
cwtl
inc
xor
ret
test
mov
xor
out
cmpsl
mov
popa
sbb
dec
xchg
imul
cmp
fisttps
mov
lods
lods
dec
jb
adc
stos
adc
sbb
mov
dec
shrl
add
mov
nop
push
fwait
js
add
pop
mov
mov
adc
mov
xchg
add
ror
mov
addr16
mov
mov
rcrl
int
inc
adc
pop
add
cltd
faddl
movsl
dec
pop
ss
cmp
pop
adc
iret
adcb
imul
add
push
adc
popf
or
push
xchg
out
outsl
out
push
dec
or
lods
faddl
pop
mov
jo
mov
inc
jge
cmpl
mov
sbb
sbb
mov
adc
sub
or
test
lds
arpl
cltd
xchg
jg
inc
push
mov
cltd
jmp
in
pop
or
inc
pop
push
adc
out
callw
mov
out
push
and
add
mov
adc
testb
inc
dec
ljmp
add
lahf
xchg
std
out
std
inc
aam
addb
and
or
mov
inc
pusha
jne
mov
pop
cmpsl
test
xchg
pop
scas
push
hlt
cld
inc
int
nop
jge
jl
sti
cli
dec
dec
loop
sub
or
xchg
dec
subb
daa
xor
es
roll
xchg
sub
mov
adc
mov
mov
aaa
movsl
xchg
sub
adc
xor
cmp
hlt
in
push
cli
or
jg
shr
jmp
popf
dec
and
in
xorl
mov
mul
xchg
dec
dec
dec
pop
push
shr
dec
imul
mov
sti
das
icebp
aad
cmp
iret
clc
sbb
dec
sbb
ret
sbb
fisttps
pop
dec
or
sarb
pop
sbb
or
dec
mov
inc
sbb
lcall
lcall
cmp
mov
sub
popl
hlt
jmp
xchg
mov
mov
xchg
mov
jae
sbb
xorl
sbb
lcall
mov
inc
shrb
fdivs
cmpsb
jle
les
nop
popa
nop
adc
jno
testb
ret
cmp
test
pop
cmpsb
mov
mov
lcall
pop
fistpll
in
pushl
adc
pusha
sbb
dec
cltd
jge
fistpll
sub
cmp
jge
ss
or
mov
ljmp
rcl
push
jecxz
push
popf
xchg
insb
sbb
add
js
jp
sbb
mov
shrb
inc
xor
es
lds
popa
jno
adc
hlt
add
xor
fnstsw
nop
sub
ljmp
xor
pop
fdivrs
or
sbb
in
mov
jb
cmp
sbb
data16
into
lock
mov
jg
mov
js
fdivrl
shlb
in
repnz
lret
jno
or
mov
ror
cld
push
jg
inc
hlt
push
cmp
icebp
lahf
out
and
xchg
sbb
dec
shll
int
pop
aam
insb
cmp
rcl
and
hlt
adc
add
pop
idivb
mov
movsl
les
mov
push
fadds
fsub
clc
pop
mov
pop
pextrw
push
or
jnp
les
aaa
in
mov
dec
scas
loop
pop
hlt
jnp
stos
and
ret
lcall
sbb
mull
rcll
out
mov
call
adc
leave
out
xorb
inc
cli
out
ljmp
sar
sub
and
ljmp
test
sbb
mov
and
mov
pop
pop
out
mov
shrl
das
sbb
sbb
add
leave
dec
divb
rcrb
fisubs
in
cmp
jp
adc
cmpsl
mov
aad
mov
or
int
cmp
add
cs
sbb
ror
xchg
or
xchg
sarb
aad
jecxz
pop
sbb
test
xchg
or
aam
cmc
pop
scas
adc
mov
cmp
and
push
push
gs
orl
out
outsl
sarb
inc
jge
das
inc
mov
or
xchg
int3
maxps
jae
dec
pop
call
cmp
scas
loope
sbb
lods
push
mulb
dec
rorl
jle
add
xchg
mov
hlt
stos
inc
or
pop
add
dec
test
xor
rcrl
sarl
loop
shl
and
jmp
sub
adc
mov
sti
or
xchg
stos
fwait
aad
popa
jo
insl
mov
add
lock
loop
xor
movl
mov
sbb
mov
scas
adc
jno
sbb
xor
push
mul
jg
mov
ljmp
jge
add
push
mov
sbb
pop
test
cmp
nop
mov
test
xorb
sbb
leave
dec
mov
jns
push
xchg
clc
push
xor
lret
stos
das
hlt
mov
mov
mov
jmp
dec
adc
and
dec
rolb
or
fwait
inc
lret
or
test
sub
push
aaa
pop
and
pop
push
cmp
sub
popf
xchg
aas
push
mov
pushf
popf
push
imul
or
ja
sbb
bound
je
push
cmpsl
arpl
xchg
or
sbb
lock
addr16
xchg
jle
lret
push
pop
and
into
push
jecxz
iret
outsb
jp
loope
das
pop
std
mov
inc
jl
xchg
sahf
mov
push
lret
pop
mov
aas
jo
jo
fadds
cmp
shrb
mov
rcl
pop
push
mov
imul
jns
cmp
inc
dec
dec
push
xchg
sahf
jge
cmovno
xor
mov
or
fwait
popf
dec
ret
dec
pop
add
mov
insb
out
out
mov
mov
jns
cmpsl
div
jle
test
pop
outsl
pop
or
jge
leave
push
pop
xchg
aad
push
out
adc
lds
or
add
jge
rcr
push
jge
cli
into
ss
sub
loope
xor
pop
xchg
mov
aas
test
inc
stos
push
scas
push
fdivr
test
out
mov
and
cmp
in
add
mov
outsb
in
mov
lret
jle
ret
fsubr
in
imul
jns
rcrb
jbe
mov
cwtl
je
mov
lahf
fs
or
dec
dec
push
les
aad
push
xchg
clc
add
pusha
popa
dec
xchg
outsb
mov
jg
mov
mov
dec
or
ds
loopne
lret
lods
push
leavew
shl
inc
push
mov
mov
mov
add
inc
xchg
mov
es
movsl
xor
cwtl
loopne
mov
and
xchg
aad
jp
xchg
test
adc
popf
lret
adc
xchg
pop
in
and
xor
sub
mov
or
fldcw
fwait
rorl
jle
ret
mov
lcall
mov
jmp
ret
movsb
or
leave
or
jg
out
iret
xchg
adc
add
xchg
scas
insb
mov
pop
push
adc
mov
stos
ret
repnz
daa
dec
and
sbb
mov
or
dec
push
inc
arpl
lcall
sti
movsl
cltd
test
popa
mov
sbb
aad
fisubrs
push
pop
push
push
gs
cltd
sub
mov
mov
dec
xchg
mov
ljmp
mov
pop
nop
cmpl
xor
mov
insl
fs
fs
jp
inc
int3
xor
xor
sbb
sbb
aas
mov
mov
mov
filds
push
push
push
mov
push
stos
mov
sti
outsb
inc
or
mov
stos
scas
jae
std
clc
loope
or
mov
rcl
scas
add
insl
lret
fistl
test
test
sbb
dec
jae
fdivrl
xchg
and
ret
out
pop
push
lret
mov
mov
repz
dec
jecxz
decl
scas
jae
orl
lds
mov
sub
gs
push
adc
dec
dec
cmp
dec
mov
push
and
ror
ficompl
jns
into
loop
fs
lea
cmpsb
xlat
mov
pop
rcrb
pop
sub
dec
mov
mov
fcoml
mov
push
xor
dec
rcll
jmp
xor
in
add
test
cmp
mov
mov
popa
fnstcw
push
mov
xor
mov
in
xchg
movsl
stc
imul
pop
cmpsl
mov
clc
imul
mov
cmp
cmp
out
add
inc
add
dec
fimuls
scas
jp
mov
jmp
push
loop
pop
arpl
adc
mov
dec
inc
pop
movsb
scas
cltd
xor
mov
xor
pusha
or
lcall
std
imul
sahf
sbb
dec
xchg
sub
sbb
and
cmp
iret
sahf
adc
mov
lock
daa
mov
lahf
add
call
jae
mov
cmp
mov
jno
in
adc
dec
mov
or
hlt
repz
or
int
ja
jecxz
add
mov
subl
push
add
cmc
fnstcw
pop
cmp
pop
outsl
clc
cmp
adc
mov
shll
pop
test
popa
or
push
jbe
ds
adc
or
cmp
push
cmp
loopne
xchg
sub
mov
jmp
lcall
sbb
movsb
push
in
sbbl
outsb
xchg
in
sbb
aas
ljmp
dec
add
jp
push
pop
test
je
cmc
dec
inc
mov
pusha
pushf
or
push
push
sbb
xchg
out
jnp
mov
ret
xchg
je
sub
xchg
dec
pop
subl
pop
and
sbb
add
sti
or
pop
lods
imul
ss
cmp
xor
or
aaa
test
loopne
scas
adc
mov
loope
popl
enter
cmp
or
push
das
cmp
das
or
push
pop
inc
subb
std
mov
mov
cmp
enter
xor
sbbb
inc
lock
sub
gs
cmc
fadd
fnsave
loope
mov
mov
sti
xchg
stc
jg
les
lds
cli
int
mov
loopne
pop
xor
push
xchg
in
mov
push
outsb
lret
lahf
rorb
insl
jo
rcr
sub
es
lods
loopne
adc
xor
ds
cltd
xchg
xor
fisubl
out
push
into
xchg
gs
pop
xchg
clc
jne
loopne
jp
sub
xor
iret
outsb
stc
add
repnz
mov
jnp
adc
cmc
gs
fsubs
push
movsl
and
adc
jl
mov
je
push
and
lahf
mov
mov
outsl
or
pusha
jmp
bound
imul
std
test
scas
lock
and
mov
out
sahf
adc
pop
int
idivb
xor
andl
cmp
fisubl
daa
xchg
xor
push
sub
dec
out
mov
push
cli
popf
mov
insl
mov
outsb
lock
out
int
lret
and
push
in
bound
and
add
and
xor
pop
fisttpl
and
sub
ret
sub
arpl
adc
lret
pop
rcr
sbb
loope
cmp
dec
push
cmc
popl
cltd
xor
xrelease
xchg
inc
int3
lea
je
aad
ss
out
dec
xchg
bnd
adc
jno
test
sub
mov
fidivs
dec
stos
xchg
mov
subb
rorl
cmp
imul
scas
in
inc
xchg
push
fcmovne
or
inc
jp
sub
adc
leave
sub
and
das
cwtl
mov
dec
pop
addr16
loop
lret
ds
cmp
inc
dec
mov
mov
and
jecxz
jae
or
push
and
add
pop
fstpl
test
xor
loopne
adc
jae
adcl
loopne
movsl
imul
xchg
and
mov
inc
mov
pop
jbe
fidivs
push
lods
sbb
mov
sbb
das
jns
or
push
adc
sub
mov
push
cmpsb
add
lret
adcl
mov
fucomp
cmp
cmp
xchg
jns
sbb
dec
mov
aad
sub
leave
stc
xchg
gs
repnz
mov
pushf
push
test
aas
cmpsb
test
xchg
mov
rolb
std
sub
sub
jecxz
jae
scas
adcb
jl
xor
sbb
dec
xor
repnz
sbbb
and
inc
jecxz
repz
mov
mov
jl
adc
push
fsubr
inc
lcall
cld
xor
sub
push
mov
or
mov
cmp
sbb
insl
inc
sbb
mov
pushf
loop
in
and
xchg
mov
jns
roll
dec
push
add
xchg
or
cmpl
ret
add
jmp
xchg
in
in
sbb
addl
push
lcall
mov
pop
and
test
ror
rorl
test
imul
xchg
fcmovnbe
inc
stc
addr16
negl
ss
fmul
lds
push
bound
cmpl
imul
mov
scas
mov
dec
mov
lods
jp
je
pop
and
push
mov
cmp
das
pop
imul
cld
fdiv
cmc
inc
push
fdivp
shl
test
fmuls
jns
jno
pop
les
imul
jl
jl
gs
fwait
insb
cltd
or
jb
push
cltd
movsl
push
mov
fdivr
or
push
cmpsb
xchg
insl
xchg
lods
dec
mov
jnp
out
dec
cmc
sbb
cld
lcall
mov
xchg
dec
inc
bound
adc
jge
add
push
dec
xchg
push
or
pop
stos
mov
sbb
lock
dec
imul
push
jbe
loope
sub
daa
les
or
xchg
pop
nop
scas
iret
sarb
pop
mov
in
push
in
mov
lock
test
call
stos
sahf
call
jp
add
push
rol
popf
xchg
sub
outsl
daa
cmpsb
sbb
mov
loop
adc
arpl
cmp
out
dec
adc
call
mov
test
in
cltd
es
add
dec
movsl
mov
out
pop
in
sub
add
shll
pop
or
call
xlat
out
inc
pusha
lahf
xchg
push
sarb
sub
mov
jecxz
xchg
ja
sub
mov
lock
add
jecxz
lods
jne
fwait
xor
pop
imul
jbe
data16
and
pop
xor
sbb
cmp
jp
cmp
sub
xchg
sub
loope
xchg
add
into
pop
orb
fs
cmp
cmp
xchg
lret
stc
das
mov
int3
dec
std
dec
iret
addr16
push
push
hlt
push
stos
in
mov
andl
jb
loope
aas
cmp
mov
cmp
jecxz
aad
sti
adc
xchg
inc
add
rcl
cwtl
mov
dec
or
fists
xchg
scas
inc
gs
cmpsl
movsb
jg
outsl
push
repz
xchg
fucomi
mov
cmp
inc
rorb
fstp
cmpsb
mov
ds
push
add
je
sbb
repz
fwait
enter
daa
sub
popa
out
test
hlt
loope
mov
jne
mov
cmp
dec
loop
adc
jb
adc
std
movsl
les
dec
mov
stos
and
daa
mov
jle
inc
mov
push
jmp
xor
inc
mov
add
push
pop
inc
sub
xor
xchg
imul
xchg
sbb
cltd
jo
lret
das
push
in
out
xchg
or
shr
ds
dec
adc
dec
dec
mov
mov
and
push
in
xchg
cmp
mov
movsb
sub
daa
jmp
cmp
push
sahf
push
out
jecxz
rolb
mov
jns
cmp
or
outsl
and
or
jge
mov
pop
jo
aad
sbb
orl
mov
int3
push
aam
fimull
cmp
mov
jg
mov
sbb
pop
insb
pop
test
mov
cmp
mov
ja
sub
xor
push
mov
dec
pop
jbe
stos
jp
popf
mov
fimull
or
aas
sahf
push
and
imul
frstor
xchg
pop
lret
dec
jl
jmp
add
xor
or
xor
mov
cmpsl
imul
ja
xor
inc
pushl
fmuls
popf
je
fwait
sbb
add
testl
stos
sti
lock
in
jp
int3
jb
mov
adc
xor
cmp
pop
mov
dec
jno
out
gs
dec
jp
fwait
xor
cmpsb
xchg
stos
mov
jge
ljmp
mov
shl
jb
int
rcrb
lds
lret
sti
push
addr16
cmpl
sub
cli
mov
push
xor
movl
sub
add
fldl
xchg
adcl
xchg
xchg
pop
add
or
inc
repnz
adc
xor
ficoms
and
mov
loope
jo
nop
adc
add
mov
add
dec
popa
mov
lods
jno
jns
clc
pop
xchg
mov
enter
andl
lock
ja
jae
stos
imul
das
cmp
xor
or
pop
push
push
xor
or
mov
scas
sbb
cli
mov
jmp
jecxz
mov
ja
mov
and
insb
in
pop
add
jbe
sbbb
mov
ret
ficompl
nop
repz
xchg
cmc
int3
push
stos
loop
rcll
cltd
mov
sbb
sbb
fnstenv
das
jne
sbb
arpl
arpl
call
test
push
lods
add
ret
xor
add
xor
dec
sbb
cmp
hlt
add
or
rorl
cltd
adc
mov
jae
pop
xchg
or
int
iret
stc
lcall
mov
cmc
hlt
push
push
das
sub
loop
das
mov
into
mov
repz
push
movsb
xlat
flds
into
or
mov
cmc
push
popa
push
icebp
xor
cmp
loop
insl
roll
std
cmp
mov
jo
pop
gs
pushf
dec
and
lcall
mov
jl
ja
fwait
stos
sbb
into
rorl
mov
outsl
cld
mov
jg
dec
cmpsl
scas
nop
pusha
mov
push
pop
jae
int3
push
cmpsb
pop
push
sahf
iret
addr16
mov
les
aaa
push
testb
repz
loope
or
mov
mov
cmp
inc
pop
push
and
call
das
dec
dec
fcmovb
xchg
mov
mov
cmp
aaa
push
test
imul
adc
loop
testl
imul
cmp
mov
lret
push
stos
rol
inc
insl
xor
int3
adc
fists
repz
sub
idiv
daa
jle
inc
movsl
stos
repz
jl
les
cld
jle
inc
ljmp
cmp
int
push
jge
sub
popa
jnp
pop
inc
adcb
push
cld
mov
hlt
mov
test
jns
push
in
inc
push
cltd
push
aam
js
les
int3
gs
insl
cmp
sbb
or
pop
sahf
rcll
into
jg
aas
pop
or
ret
negb
out
lock
inc
cmp
cmp
add
sti
sbb
rorl
in
jns
or
repz
add
int3
adc
sahf
sahf
jne
mov
push
mov
mov
mov
mov
shrb
push
sub
dec
loope
cmp
fisttps
add
fisttps
pop
and
outsb
sbb
stos
jno
or
jne
out
repnz
fisttpll
cltd
movsb
pop
addr16
cmp
cmpsb
add
ljmp
and
movsb
jl
ljmp
pop
ds
mov
dec
lahf
cltd
lret
pop
repnz
std
sub
pushf
xchg
adc
out
jno
push
xor
mov
sahf
xchg
jle
dec
sub
les
scas
insb
dec
mov
push
pop
push
test
fs
aas
icebp
inc
stc
adc
or
iret
arpl
imulb
enter
fcmovb
int
mov
jl
in
stos
add
sub
xchg
mov
xchg
into
push
paddusb
imul
cmpsl
xor
xchg
push
sti
aam
mov
dec
sbb
insl
mov
int
push
mov
stc
xchg
ficompl
cmpsl
add
add
mov
add
add
movsl
es
adc
in
in
fwait
sub
or
jecxz
sub
mov
ud0
push
les
pop
xchg
mov
adc
aas
inc
out
pop
push
fs
xchg
jo
inc
sub
push
lock
dec
andl
mov
jne
ret
jb
xchg
and
sbbl
mov
enter
sbb
add
arpl
inc
adc
mov
push
add
pop
test
mov
jl
jmp
xor
in
in
pop
punpckhwd
cli
mov
ljmp
pop
cmc
pop
int3
xchg
mov
mov
cmp
clc
dec
jbe
mov
in
dec
and
cmpsb
cmp
stc
xchg
pop
out
nop
dec
mov
xchg
mov
mov
dec
inc
fwait
add
movsl
xor
ja
or
add
mov
dec
xchg
and
popf
ja
adc
inc
repz
or
dec
pop
addr16
dec
ljmp
inc
xor
int
clc
adc
addb
push
imul
insl
shll
inc
ljmp
push
imul
jbe
ljmp
xchg
aam
add
xor
cmp
cmpsl
pop
les
into
mov
daa
stc
ljmp
or
mov
inc
mov
hlt
jbe
movsl
adc
daa
and
inc
push
fs
mov
xchg
sub
cmp
add
lret
mov
adc
in
xchg
jne
xchg
sub
push
add
inc
xchg
int3
aad
fdivl
in
stos
xchg
pusha
jecxz
add
fldcw
dec
add
and
add
mov
or
enter
pop
jmp
dec
repz
ficompl
pop
enter
or
gs
xchg
jns
aad
scas
push
stos
cmp
int
test
or
sbb
xlat
inc
jae
dec
scas
test
xor
fdivs
int
pop
jecxz
adc
cmp
sub
push
loop
and
jmp
cmp
in
stc
iret
insl
jmp
repnz
les
es
push
addl
int3
js
outsb
std
test
or
xor
inc
loopne
xor
cmpsb
push
clc
push
cld
push
fidivrs
popf
mov
pusha
xor
pushf
adc
aas
shlb
pop
sahf
jecxz
testl
xchg
sbb
dec
pop
lods
adc
les
test
push
xbegin
cmp
xchg
pop
data16
cmpsl
loope
fucom
popf
cwtl
mov
and
movsb
pop
inc
cmp
mov
sub
add
inc
add
stos
mov
mov
and
cmp
pop
xor
pushl
cs
push
aas
test
xchg
les
test
lcall
jo
mov
dec
xor
or
cmpsl
push
inc
mov
test
mov
lock
cltd
and
and
enter
inc
inc
inc
push
xchg
jo
inc
xlat
int3
xor
pop
inc
adc
mov
mov
sub
aad
xchg
jae
insb
mov
insl
fdiv
xchg
lods
loope
xchg
xchg
loope
lea
cmpsl
add
xor
dec
inc
hlt
dec
lret
sbb
or
jle
lea
push
lods
mov
mov
loopne
gs
call
in
xchg
inc
scas
mov
das
int
push
mov
push
out
loopne
mov
xchg
xchg
inc
pop
cmc
lret
inc
imul
int3
mov
rcrl
fldl
rorb
lcall
jecxz
out
mov
fistl
sti
addl
ss
fidivrl
lret
lahf
into
mov
stc
lea
je
repnz
out
sbb
mov
adc
jmp
adc
dec
fstps
out
jnp
test
stos
add
mov
loop
pushf
jnp
jne
lods
cmpsl
inc
lcall
jl
inc
pop
inc
pop
dec
dec
int3
xchg
cltd
mov
adc
inc
sbb
jnp
leave
mov
pop
addr16
add
fisttpll
fisubrl
nop
mov
push
lret
clc
xchg
test
jmp
addr16
mov
sbb
xor
push
test
insl
cmp
push
sar
push
and
jecxz
cltd
icebp
jge
jbe
jb
lds
jecxz
push
xor
fimuls
cmovb
add
mov
pop
sti
jnp
xchg
mov
hlt
cmp
xor
jne
pop
jb
jne
insl
adc
mov
xor
add
in
cmpsb
dec
cli
pop
loop
andl
sbb
xchg
cmp
xchg
insl
sbb
int3
dec
shrl
push
jmp
out
push
scas
or
mov
pop
fsubrs
or
mov
pop
sub
mov
cmp
mov
jns
or
aam
xor
xor
fwait
cmpsl
pop
imul
outsb
pushf
ds
push
cmp
adc
xchg
imulb
fdivrs
push
popf
rclb
xlat
int
lock
sub
jnp
cltd
stos
add
mov
shl
adc
pop
mov
loopne
pusha
or
sub
xchg
sbb
lret
mov
fstpt
xor
push
in
shl
jo
jge
add
rolb
movl
push
out
fdivl
sub
cmp
push
cld
sub
in
pop
adc
pop
lahf
pop
sbb
mov
mov
adc
pop
clc
fbstp
aam
stc
adc
push
push
mov
cmp
fidivs
inc
sbb
mov
push
mov
adc
mov
adc
loope
fdivs
orb
push
mov
and
mov
dec
push
ret
mov
adc
push
mov
je
sahf
inc
shll
jle
mov
aam
negb
sub
or
ss
mov
aaa
or
dec
fsubrs
cmpsl
or
pop
addb
ljmp
lret
xchg
inc
fldenv
and
push
sbb
popa
xor
mov
andl
push
enter
and
xor
push
push
xor
mov
imul
mov
outsl
mov
push
add
in
pop
xchg
sub
sub
ljmp
sbb
ss
jb
push
jne
inc
outsb
addr16
mov
cmp
movb
shr
out
mov
cs
je
xchg
adc
icebp
mov
inc
out
stos
and
test
pop
in
lds
cmp
and
int3
cmp
sub
out
aad
cmp
xchg
or
mov
push
and
jmp
jl
cli
mov
push
test
cmpb
cli
dec
cmp
pop
mov
jne
push
ds
sub
inc
mov
jnp
lcall
push
pandn
fbld
aad
stos
leave
movsb
test
test
mov
sbb
jle
movsl
test
mov
std
push
insl
std
push
sbb
cmpsb
pop
fwait
repnz
push
mov
movsl
push
hlt
or
test
fdivp
je,pn
pop
fists
js
loop
inc
inc
mov
dec
jb
rcl
mov
dec
add
mov
mov
mov
xchg
ds
and
add
add
mov
sbb
repz
mov
xchg
cli
idivl
popf
push
mov
mov
out
repnz
pop
shrl
jae
notl
jne
mov
xor
mov
mov
stos
sbb
xorl
xchg
cmp
lock
inc
dec
xchg
popa
int3
push
or
mov
pop
dec
es
push
mov
sbb
dec
in
mov
pop
orb
push
je
jo
out
faddp
fsubrl
test
leave
rol
aaa
iret
and
cwtl
jnp
sbb
and
in
jge
idivl
lret
aam
add
xor
mov
outsl
leave
rcrl
sub
int
xchg
mov
shrl
mov
mov
shll
dec
pop
lret
push
jnp
dec
pop
inc
insl
pop
inc
and
add
in
mov
or
addr16
sbb
lock
jmp
inc
xchg
cltd
lret
fnstsw
add
and
scas
js
push
scas
jns
lret
xor
pop
push
push
sbb
xorl
mov
push
lret
enter
das
in
mov
mov
ja
sahf
xchg
pop
pop
mov
loop
imul
into
into
iret
xchg
cld
call
sarb
test
int3
or
and
mov
mov
mov
rcll
push
inc
dec
pushf
inc
xchg
scas
stos
ret
pop
push
or
ret
inc
cli
dec
shll
push
sahf
ljmp
xchg
adc
mov
mov
jo,pt
orb
or
adc
test
push
and
sub
mov
adc
mov
jnp
dec
pop
or
mov
shrl
imul
loop
add
push
mov
xchg
test
push
cmc
leave
inc
mov
xor
add
enter
addr16
jle
sbb
pop
push
hlt
adc
pop
clc
test
sbb
xor
movsb
insl
ret
mov
stos
jecxz
bound
fwait
adc
lods
ds
sbb
cmpsb
mov
or
hlt
push
fsubrs
aam
adc
add
add
lret
popa
and
sub
mov
mov
xor
mov
mov
or
jns
leave
cli
test
loope
repz
popa
out
or
daa
repz
xchg
les
sbb
clc
xor
cmp
pop
xor
sbb
dec
lcall
hlt
insl
call
mov
mov
jg
ret
fcmovnbe
cmpsb
jl
pop
into
imul
idivb
cs
gs
dec
test
inc
xor
fs
ss
inc
and
sbb
in
cmp
arpl
imulb
or
mov
or
or
popf
lock
inc
shrb
xchg
dec
push
rorl
adc
inc
xlat
sarb
aad
rcrb
or
push
mov
mov
adc
mov
adc
fwait
cmpsb
in
fcompl
mov
mov
sbb
into
sub
xchg
stos
enter
lcall
fmul
pop
insb
je
pop
in
in
mov
or
nop
xor
daa
dec
or
lcall
sub
shrb
andl
push
mov
repnz
or
and
ds
sbb
das
xor
in
movsb
imul
cmc
add
je
repz
inc
xor
jp
divb
test
imul
sbb
push
dec
mov
pop
in
out
xor
mov
mov
jnp
and
jmp
jecxz
dec
and
dec
mov
rcrb
ja
or
jbe
xchg
jbe
bound
and
add
stos
test
dec
push
scas
dec
iret
add
pushf
xor
push
andl
cmp
pop
xchg
test
loope
in
int
xchg
lock
mov
int3
fsubrs
sbb
pop
mov
in
ja
popa
cld
dec
mov
mov
adc
lret
dec
jmp
and
mov
xlat
push
sahf
xor
adc
out
cmp
or
or
mov
pop
test
dec
cld
push
test
lds
std
inc
dec
mov
pop
pop
cmpsl
loop
in
icebp
lock
pusha
jecxz
std
mov
inc
add
fnstsw
rorb
arpl
decl
jae
mov
outsl
xchg
iret
rorl
ljmp
mov
sub
mov
pusha
xchg
add
jge
and
xor
faddp
sbbl
mov
sbb
std
adc
scas
out
add
in
fistl
hlt
mov
mov
shrb
and
cmp
fucomip
jbe
add
sub
loop
cltd
adc
mov
daa
push
push
push
inc
int
inc
or
push
loopne
push
sbb
scas
ret
nop
push
add
cmp
mov
dec
push
cmp
jle
cmp
cmp
outsl
aaa
pop
jbe
jbe
pusha
mov
add
sub
call
lea
stos
in
jnp
mov
addr16
fidivs
cwtl
sbb
pop
and
xor
scas
std
push
repnz
mov
call
jl
push
cmovns
rclb
fsub
repnz
hlt
xchg
dec
xlat
in
lea
call
mov
xchg
inc
dec
and
jle
push
sbb
out
test
dec
sbb
sub
sahf
xchg
dec
shrl
xor
inc
push
jmp
push
add
xlat
adc
std
sbb
lock
mov
sbb
ja
lods
stos
popf
pop
enter
test
out
inc
insl
push
mov
je
in
dec
aam
push
dec
or
inc
lds
ljmp
push
pop
js
sbb
rcll
sub
sbb
or
push
cmc
mov
push
in
pop
jne
add
test
popa
or
pop
loopne
repz
xchg
push
outsl
jmp
insb
js
test
mov
push
test
jbe
jo
xor
out
pushf
sub
lcall
lds
xchg
cmp
cmpl
push
sbb
jo
loopne
xchg
mov
jns
inc
jecxz
mov
das
lds
or
xor
icebp
unpcklps
imul
cmp
fiaddl
cwtl
int
sbb
sbb
scas
inc
js
hlt
movsb
jo
mov
xchg
popf
sub
sub
pop
int3
jge
sbb
fcompl
push
inc
mov
mov
cmp
mov
push
fmull
sub
sub
or
add
inc
repnz
in
push
or
mov
mov
mov
aad
ds
mov
out
push
or
and
loope
repz
adc
out
jmp
dec
inc
push
lods
cmp
cld
hlt
stc
adc
lods
mov
out
cmc
fnstsw
iret
pop
popa
cmc
push
jae
aas
lock
jge
insl
imull
insl
fmul
xchg
xchg
repnz
or
popf
inc
cli
ss
lock
cmp
inc
in
adc
popa
jg
inc
inc
or
repnz
inc
pop
and
call
cwtl
test
fldl
ljmp
sahf
pop
divb
sarl
fnstsw
or
lret
fs
pop
xor
push
mov
ljmp
aas
cmp
out
scas
divl
xor
cld
lock
cmp
push
dec
std
xchg
idivb
add
jbe
adc
stc
mov
data16
rclb
pop
aad
cmp
adc
rorl
cmpsl
cmpsl
pop
dec
bound
push
insb
xchg
add
jb
jns
hlt
mov
xor
mov
sbb
mov
shl
clc
inc
push
pop
out
fcoml
mov
xor
jbe
fldl
inc
mov
cwtl
sets
std
lods
push
loop
sbb
xchg
dec
push
jle
jns
sub
xlat
sbbb
sbbl
divb
mov
pop
and
in
test
arpl
inc
ds
test
cmp
popf
mov
adc
sbb
fsubrp
sub
dec
push
aam
fwait
cld
repnz
inc
popa
mov
mov
cmp
xchg
mov
pushf
fisttps
in
dec
and
mov
shlb
and
sub
mov
pop
mov
inc
xchg
shlb
ficompl
mov
pop
hlt
aaa
sti
test
inc
sbb
pop
sbb
xor
push
dec
add
adc
jge
pop
xchg
test
add
pop
cmpsb
addl
leave
popa
push
xchg
fsubs
ror
sbb
movsb
inc
adc
in
sahf
cli
jne
xor
ficoml
sarb
fdiv
add
and
ficoml
xchg
xchg
add
pop
and
xchg
xchg
xchg
jecxz
bnd
out
ffreep
jno
insl
in
sbb
repz
pop
test
pushf
in
enter
jge
aad
fstps
decl
sarl
ds
jae
ss
pop
lock
je
xchg
repnz
inc
inc
cmpb
ret
pop
xchg
and
notl
clc
sbb
popa
pop
sbb
fwait
mov
sbbb
inc
dec
push
xor
or
pop
xchg
lahf
jl
xchg
push
jmp
xchg
inc
push
stos
mov
mov
jns
mov
inc
leave
mov
je
in
dec
pop
out
loopne
iret
cli
nop
mov
adc
outsb
lahf
mov
sbb
out
adc
fwait
hlt
dec
mov
mov
dec
xchg
jg
cmpsl
mov
inc
add
daa
pop
cltd
xor
mov
xor
jmp
imul
inc
leave
scas
mov
lahf
lods
lret
cmp
adc
xor
loop
int
mov
and
mov
push
mov
sbb
out
and
insl
mov
stos
sub
ss
add
ljmp
jae
cwtl
imul
xchg
inc
mov
cmpb
xchg
xchg
in
sbb
sti
cmp
lds
fs
xchg
fcomi
les
mov
jge
sub
add
inc
push
sarb
lea
add
cmc
push
xchg
shlb
mov
gs
test
stos
pop
xor
push
cli
push
mov
and
adc
and
inc
add
mov
xchg
jmp
jno
adc
fisubl
mov
pop
loop
fwait
mov
add
test
in
std
pop
jns,pt
push
xchg
gs
shl
popa
shl
out
shr
addr16
aam
imul
push
popf
fsubrl
inc
mov
mov
dec
das
in
sub
pop
cmpsl
inc
pop
jl
push
popf
sub
push
inc
lods
and
orl
mov
pop
fwait
movsb
aam
in
push
dec
aas
aas
aaa
sub
pop
testl
es
sub
lcall
clc
jle
jne
lock
sub
adc
jle
test
in
out
mov
mov
cwtl
pop
adc
or
push
inc
loop
xchg
mov
xchg
je
outsl
jmp
sbb
sub
lock
sarl
pop
inc
test
inc
xchg
push
add
divl
ss
adc
cwtl
into
push
adcb
cmp
cmp
xchg
pop
adc
cmp
cld
sbb
dec
repnz
loop
testl
and
insl
stc
cmp
pop
aas
jne
sbb
jmp
xchg
nop
sbb
mov
add
ret
jb
cmp
jno
in
fistpl
mov
push
fmul
jne
add
pop
gs
dec
and
xchg
iret
jmp
xlat
fldenv
into
inc
fstps
loopne
insl
or
cmpb
into
enter
xor
jge
mov
and
xchg
cltd
and
popa
add
lea
push
push
mov
shll
or
xor
js
mov
xchg
xchg
rorb
jl
loope
jge
or
rcrl
fs
mov
sbb
into
mov
ds
jmp
adc
add
pop
test
xor
dec
loopne
scas
les
and
mov
int
rolb
lea
push
or
test
call
sbb
and
pop
inc
call
or
xchg
sub
inc
sub
lea
in
ja
shrb
sbb
icebp
mov
cmp
cld
negl
lret
add
repnz
sbb
ljmp
jle
outsb
out
mov
add
jnp
dec
mov
cltd
pop
adc
in
mov
arpl
jecxz
push
mov
push
adc
stc
test
pcmpeqb
jg
jnp
cmp
lods
clflush
rcr
test
add
adc
dec
pop
mov
mov
testb
inc
lret
adc
sub
push
mov
jecxz
dec
xor
sub
int3
fs
stc
and
inc
test
dec
shr
dec
aam
add
imul
inc
lock
gs
mov
jno
pop
mov
ss
mov
pop
mov
push
fisubl
mov
movsb
pop
lret
mov
inc
pavgb
out
xor
in
gs
aas
adc
or
inc
rclw
lcall
jb
hlt
jecxz
mov
cli
inc
push
mov
pushf
es
jge
addr16
inc
out
out
jne
mov
mov
dec
lods
je
lea
test
add
jecxz
sahf
jae
cmpl
fists
test
pop
in
jle
inc
dec
cmp
adc
pop
test
xor
or
lret
mov
shrb
pop
sbbb
pusha
sahf
push
add
es
xchg
fiaddl
sbb
arpl
adc
insl
rorl
insb
hlt
pop
js
pop
mov
dec
xor
push
push
mov
out
lcall
bound
vmread
nop
stos
shlb
sub
sbb
scas
sbb
and
pop
inc
aas
fcomip
pop
cld
mov
pop
rcrl
js
jmp
push
les
cli
in
or
add
cmp
mov
add
pop
pop
adc
pop
scas
andb
cmpsb
adc
popa
sub
sub
pushf
push
sbb
cmp
outsb
jmp
hlt
jbe
hlt
push
aam
dec
mov
cmc
data16
lea
add
popf
xor
dec
stos
fld
jmp
xchg
ror
outsb
insb
shlb
push
test
or
lods
xchg
pop
jo,pn
call
orl
mov
insb
daa
cmp
push
and
aad
inc
fisubrl
lods
nop
push
inc
add
lods
mov
fmull
cmp
cmp
mov
arpl
jae
dec
xchg
mov
subb
xor
jno
scas
dec
adc
repz
pop
aas
xchg
movsl
into
dec
add
fldt
aad
lret
mov
inc
pop
jo
arpl
xchg
dec
mov
push
in
leave
fsubr
lea
xor
xchg
jmp
loop
loop
lods
aaa
test
mov
fcoms
or
popl
imul
bnd
mov
and
xchg
mov
test
and
imul
lods
mov
inc
fists
and
lds
sub
frstor
jmp
es
iret
mov
mov
push
jno
inc
arpl
iret
in
rcll
enter
imul
imul
stos
adc
xchg
pop
xchg
std
mov
lahf
shrl
mov
sarb
lock
add
mov
mov
repz
inc
into
rcll
xor
ja
inc
jl
jae
xor
cmp
jne
ss
push
imul
mov
sub
xchg
mov
cwtl
movsl
jb
mov
pop
sahf
add
scas
push
add
adc
and
pop
aaa
pop
mov
data16
and
fsubrp
dec
out
dec
sarb
mov
scas
test
mov
xor
pop
incl
cmp
hlt
subl
mov
fstps
or
push
mov
pop
shrl
mov
and
sbb
ret
xchg
fwait
aam
sbb
sbb
mov
or
cmp
sub
cli
in
jbe
ja
push
test
pop
jge
ja
and
icebp
adc
lea
and
push
test
jae
xchg
mov
mov
out
jmpw
mov
incb
sbb
xor
jp
test
insl
iret
inc
xchg
inc
mov
dec
dec
imul
sbb
test
ljmp
shl
loope
inc
cmp
les
nop
xchg
icebp
ret
icebp
out
leave
mov
and
mov
mov
xlat
mov
scas
pop
jb
movsb
lahf
cmp
aad
repz
aaa
jbe
xchg
lods
dec
ja
mov
sub
jb
sbb
mov
sahf
jb
test
jle
push
jbe
jno
jl
mov
repz
xor
push
adc
mov
add
or
xor
mov
aad
repz
jge
jge
lcall
fsubrl
lods
or
fidivl
and
clc
ds
fmuls
pop
call
jnp
mov
cmp
aad
dec
lock
mov
and
dec
shr
mov
test
xchg
insb
adc
addr16
cmp
mov
mov
push
ss
inc
loope
pop
mov
pop
mov
mov
add
psrlq
mov
cmpsb
nop
cmpsb
push
test
flds
scas
xchg
ds
jae
out
or
cmp
aaa
pusha
pop
mov
subl
loope
jmp
or
fs
repz
or
addr16
sub
daa
jae
fs
movl
mov
cld
inc
jns
xchg
or
loop
jo
addr16
jnp
fldcw
add
cmc
pop
outsl
adc
pop
fcomp
pop
dec
cmp
push
xchg
test
xchg
and
scas
sub
sbb
sub
lret
imull
xchg
call
sbb
lea
icebp
aad
or
and
or
jmp
mov
icebp
mov
jnp
sub
dec
xchg
sub
sub
fbstp
mull
jbe
mov
inc
cs
popa
xorl
mov
sarl
inc
out
cmp
jno
mov
and
sbb
jbe
and
mov
xchg
dec
mov
mull
imul
mov
scas
nop
pushf
push
and
leave
insb
mov
or
shl
adc
push
mov
push
fadd
push
push
jmp
and
mov
sti
leave
xchg
jg
test
nop
sub
pusha
mov
rcrb
and
out
lea
sbb
call
cld
daa
xlat
adc
mov
pop
and
imulb
or
and
xchg
loope
and
jb
int
sub
cli
jge
dec
xchg
les
mov
outsb
out
test
subb
das
mov
add
rcrb
iret
scas
and
fsts
sub
scas
stc
sub
lock
stos
jmp
fwait
pusha
in
cwtl
inc
psubsb
pop
push
mov
adc
popl
pop
mov
iret
xchg
rolb
or
fisubs
addr16
cmc
dec
push
mov
xchg
inc
sub
movsl
push
dec
adc
mov
push
ret
leave
jg
mov
adc
rol
adc
mov
cmp
loop
pop
lcall
inc
sbb
aaa
out
mov
or
jg
pop
push
lcall
mov
pop
and
xchg
ficompl
pop
jecxz
xchg
dec
test
cwtl
dec
test
insb
or
push
clc
outsb
in
ret
inc
push
cmc
cmp
fisubl
adc
and
push
lcall
push
add
cltd
cmp
or
lea
pop
push
add
negb
and
jbe
dec
int
lahf
pop
cld
push
shll
lds
mov
adc
ret
aam
out
mov
and
cmp
repz
aad
mov
cmp
push
negl
cmpsl
xchg
shll
sar
sbb
lods
and
jb
xchg
stos
fstp
ds
sub
or
insb
push
or
and
push
lcall
cmp
ljmp
cmp
mov
loop
call
fcmovbe
mov
adc
mov
jae
dec
xchg
lods
daa
xor
push
xchg
movsl
push
pop
or
xchg
xlat
punpckhwd
cmp
lock
divl
imul
test
mov
sbb
fidivl
pop
std
jg
pop
push
fistl
push
sbb
daa
notb
cmp
sbb
mov
fdivl
xor
xor
pop
aam
xchg
lret
mov
pusha
push
and
fisttpll
sbb
ficompl
mov
pop
push
enter
mov
ds
imul
fwait
sbb
adcl
pop
push
idivl
cli
sahf
mov
mov
sbb
push
push
push
cld
cmp
loop
data16
mov
xchg
mov
push
push
add
movsb
jmp
outsl
mov
sbb
inc
xchg
outsb
add
subb
dec
pusha
repnz
or
js
jg
fnstsw
sbb
idivb
aas
add
or
pop
mov
dec
or
aad
outsb
jg
clc
insb
mov
imul
xor
sahf
into
jae
mov
repz
adc
arpl
ljmp
jmp
arpl
xor
clc
outsl
pop
and
iret
or
sti
out
insl
jecxz
dec
pop
cltd
scas
repnz
and
les
mov
push
xchg
mov
xor
clc
dec
aas
pushl
out
aad
dec
fsubl
mov
fwait
and
mov
cli
and
pop
pop
or
nop
je
ss
stc
movzwl
loop
inc
imul
in
fmul
adc
test
ljmp
gs
shll
icebp
pop
cmpsl
jnp
pop
std
pop
jo
cltd
mov
jb
outsl
jo
out
inc
push
lret
es
lret
inc
cwtl
out
addr16
insl
out
fwait
aam
repz
dec
shrl
jno
push
or
and
jo
into
pop
cmp
std
push
in
ret
mov
jo
lock
sub
adc
mov
push
repz
popa
jo
jne
mov
in
stos
in
inc
push
fiaddl
mov
enter
adc
xchg
adc
dec
add
sbb
mov
jg
mov
sub
int
push
sub
mov
sahf
int3
inc
cmp
out
push
negl
popf
ret
push
pop
addr16
xor
clc
int
push
sbb
aaa
pop
ret
xor
push
ja
leave
cmp
push
scas
test
insb
adc
jge
lods
stos
jns
lock
pop
xchg
xor
sbb
psraw
outsb
pop
iret
out
push
jge
xor
mov
xor
add
push
pop
mov
nop
or
cmp
or
jp
clc
push
sub
push
cmp
inc
cmp
aad
push
out
iret
cld
sarb
gs
ss
or
out
mov
pop
std
lods
push
lret
jmp
cmpsl
push
pop
insl
push
js,pn
scas
ret
inc
mov
add
pop
imul
mov
ss
pop
add
mov
mov
mov
and
sahf
adc
pop
jg
ret
or
pop
cmc
std
or
sti
cwtl
test
push
jno
sub
insb
cli
push
andl
pop
icebp
push
inc
pop
lock
lods
cmp
scas
sbb
addr16
test
inc
iret
push
int
loope
test
inc
pop
rcrl
mov
sti
add
ds
add
pop
mov
ljmp
mov
fnsave
push
and
inc
push
out
stc
pop
setae
pop
std
mov
ja
idivb
stc
cmp
add
sbb
and
sbb
jmp
cli
sbb
inc
test
loopne
test
lea
test
push
push
jno
out
inc
sti
leave
lods
sar
pop
or
pop
push
divb
jns
vprotd
mov
mov
cld
mov
aad
pushf
inc
jo
les
aas
push
mov
popa
movsl
dec
shll
iret
jo
sub
push
mov
and
lock
shll
lea
pop
fs
jg
jg
push
notb
iret
repnz
pushl
repnz
xchg
push
lret
add
mov
rolb
lods
or
fisttps
mov
aaa
xchg
xor
into
pop
lds
leave
mov
cmpsb
sub
addb
jns
cmp
adc
loopne
xchg
popa
inc
or
insl
inc
sub
mov
mov
sarb
inc
xchg
roll
or
es
inc
inc
dec
xchg
adc
dec
adc
sbb
je
les
mov
lcall
out
cli
push
pop
outsb
insl
mov
dec
sub
sbb
jl
mov
gs
out
inc
movntq
out
cwtl
mov
pushl
fimull
sarb
inc
adc
dec
sub
and
hlt
cld
cmp
int
imul
fldt
cmp
fwait
mov
pop
call
and
inc
jnp
insb
or
in
pop
enter
pop
arpl
cltd
adc
or
cmp
cltd
dec
popa
mov
and
xchg
mov
dec
sub
pop
xor
jbe
rcr
pop
ja
push
repz
divl
sbb
dec
into
mov
add
mov
sbb
xor
add
fildll
cwtl
insb
mov
aam
adc
loopne
sbb
push
decb
ficoml
adc
cli
or
ss
mov
mov
inc
push
outsb
mov
and
mov
push
rclb
pop
cmp
lea
cmpsl
inc
push
inc
loope
pop
mov
push
lahf
in
outsl
scas
dec
cs
xchg
testl
xchg
dec
push
cld
fnstcw
dec
jle
or
and
or
mov
mov
in
loopne
fadd
xor
xchg
pop
add
mov
iret
ret
pop
jne
mov
xlat
jg
je
daa
sbb
sub
sub
cwtl
push
in
data16
add
sbb
xchg
je
hlt
dec
inc
cmp
cmp
inc
jno
and
mov
ficoms
mov
loopne
outsl
cmc
fs
mov
clc
sub
dec
pop
mov
fdivr
push
xor
fisubl
dec
jp
dec
cmp
cltd
cmp
fmul
adc
pop
push
sbb
add
fidivs
scas
fdivp
xor
jp
fsubrs
xchg
push
adc
imull
adc
ds
xor
subb
push
or
jmp
inc
lods
pop
dec
mov
jnp
shll
pop
mov
mov
sahf
xchg
or
pop
push
dec
or
push
or
test
loope
pop
dec
mov
ds
pusha
movsl
mov
cmp
cld
out
inc
or
movsb
and
sub
repz
int3
int
daa
inc
sub
xchg
push
sub
mull
imul
inc
xchg
je
mov
lcall
xlat
mov
out
cmpsl
lret
rclb
push
mov
cmp
cltd
mov
subl
cltd
xchg
sub
das
ds
scas
jge
bound
daa
test
inc
push
adc
lds
jb
xchg
sbb
sub
push
mov
xchg
add
pop
add
repnz
xor
xchg
scas
js
mull
xor
jbe
push
or
or
stos
test
push
inc
out
ret
sbb
rcrl
inc
jo
addb
lds
sub
push
movsb
mov
or
lcall
pop
inc
push
aam
inc
inc
adc
test
pop
loopne
shll
gs
cmpsb
inc
shr
int
dec
sbb
int
adc
cmc
lods
push
pop
adc
and
cmpsb
ss
insl
imul
add
xor
xchg
xor
xchg
call
ljmp
insl
adc
mov
jno
repz
sbb
inc
test
jp
inc
xor
adc
stos
fistps
mov
fsubrl
mov
xchg
in
rorb
call
dec
sahf
stos
insl
mov
inc
jae
shll
fcmove
cmp
test
clc
or
push
cmp
loope
inc
sahf
outsb
push
push
les
or
aad
aas
mov
gs
cmc
pop
xlat
test
pop
popf
push
jb
pop
out
add
loopne
js
imulb
pop
je
xorl
inc
sbb
std
or
push
or
dec
jno
test
or
jno
psubsw
stc
and
xor
out
xchg
data16
sub
ja
push
imul
add
rol
jo
mov
jmp
or
sub
gs
andb
push
fistpll
sbb
filds
jb
dec
mov
mov
sub
ds
cmpsl
pop
lock
jb
popa
aas
test
push
aam
mov
lret
enter
add
sti
cld
xchg
sbb
push
dec
dec
call
aas
lret
subb
jle
dec
lret
movsl
gs
fistpll
cmp
aam
movsl
jb
mov
mov
ror
pop
rcll
or
or
lock
sub
xor
data16
inc
xor
add
sahf
or
inc
cwtl
cmp
cmp
ss
enter
sbb
cltd
lret
dec
xor
leave
jb
jb
or
into
inc
sbb
mov
push
lret
mov
repz
call
push
int
sahf
mov
outsl
dec
ljmp
lock
push
mov
in
arpl
add
dec
cltd
add
jns
int3
xchg
mov
adc
adc
clc
dec
pop
popl
bound
xchg
int3
aas
sbb
cmp
push
mov
ds
test
push
repnz
sahf
or
scas
jb
pop
pop
push
movsb
lock
adcl
sub
lret
fucomip
flds
mov
push
jno
inc
xor
cmp
mov
xchg
sahf
push
lret
sahf
js
inc
and
daa
fs
mov
mov
adc
adc
stc
xchg
gs
push
in
rclb
lret
stos
dec
push
in
adc
lret
push
jbe
xchg
pop
sub
mov
push
je
cmpsb
popf
or
fsubrs
mov
sahf
call
pushf
dec
in
mov
fwait
sbb
leave
les
xchg
push
cli
std
test
inc
lret
xor
cltd
arpl
add
add
movsl
inc
int3
sarl
data16
xlat
test
test
pop
mov
xchg
test
mov
and
sub
in
and
dec
in
mov
cmp
rol
dec
outsl
inc
mov
sub
add
pop
mov
lock
repnz
jg
call
pop
sub
out
pop
sbb
sbb
cmp
and
or
std
mov
pop
fcoms
add
add
mov
je
pop
jno
add
das
movsl
jbe
mov
and
mov
outsl
out
scas
inc
stos
jae
sarl
pop
xor
das
pop
movsl
fstpl
clc
mov
dec
popa
mov
insb
cli
mov
add
rol
shl
cs
mov
divb
aam
jne
push
add
in
jb
fnsave
dec
daa
ljmp
rcll
pop
sub
jp
ss
addr16
inc
imul
lods
mov
push
std
repz
dec
lods
lret
mov
sbb
jg
repnz
and
das
sub
into
adc
add
mov
adc
movsb
mov
in
idivb
mov
lods
addr16
cmp
pop
or
leave
std
aas
jp
or
xor
cmp
adcb
gs
les
pop
insl
mov
ja
enter
push
sarl
dec
adc
jb
mull
jo
mov
fnstsw
xchg
or
stc
int
add
and
add
pop
xchg
cmp
mov
lcall
int3
cmp
mov
adcl
out
sbb
aad
xor
loopne
inc
and
ja
daa
imul
sub
scas
jecxz
push
mov
ds
fistps
stos
jp
ljmp
pop
adc
lcall
dec
dec
mov
xchg
mov
push
movsb
cwtl
loope
scas
push
jb
lods
dec
xchg
cwtl
ret
xorl
test
pop
test
repz
xor
arpl
fcomi
test
pop
int
negl
xlat
dec
pop
inc
in
or
aad
add
inc
mov
pop
push
stos
jb
push
es
push
movl
push
pop
add
mov
xor
out
popf
orl
lahf
data16
fldl
cmp
cmpsl
jmp
push
xor
pop
test
orl
sub
sbb
mov
jo
jb
xrelease
mov
stc
ss
cmp
mov
lret
inc
cmp
sub
adc
lea
push
lret
mov
int3
notb
and
xor
push
scas
xchg
inc
mov
gs
popf
mov
int3
std
sahf
int3
in
dec
dec
mov
sub
push
sbb
mov
add
fimull
cltd
sahf
addr16
mov
or
mov
jne
xchg
or
lret
lea
jmp
rcrb
stos
jb
popa
pop
jno
call
enter
mov
out
add
xor
add
cmp
inc
cmp
orb
out
xor
int3
xor
push
enter
mov
lods
push
test
sbb
mov
out
pop
daa
mov
jb
stos
scas
xor
mov
adcl
dec
ret
mov
fwait
push
or
lret
daa
inc
jl
test
sub
sbb
iret
outsl
pop
pop
scas
adc
loope
aad
push
testb
addr16
inc
sbb
fs
pop
es
pop
push
mov
jecxz
mov
int
cltd
int
in
sub
cmpsl
pop
or
pop
cmp
adc
jl
je
sub
or
shr
jbe
js
xchg
or
loope
ss
and
dec
out
ja
nop
sbb
iret
orb
mov
jae
rorb
lahf
pop
mov
or
adc
sbb
dec
pop
clc
sti
pop
popf
subl
add
les
jno
mov
loope
test
xchg
pop
scas
mov
xor
test
in
dec
lods
jecxz
inc
es
adc
mov
in
and
sbb
adc
jne
xor
add
fucomp
imul
pop
out
cmp
in
in
cmp
push
scas
lods
mov
into
mov
ja
test
jmp
mov
mov
add
out
cmp
add
mov
cmpsl
pop
add
jo
or
push
shrb
and
aad
in
div
sub
dec
ret
subb
cld
lea
sub
xchg
je
daa
mov
adc
xor
push
mov
cs
push
sar
mov
insl
jmp
sub
data16
insl
sub
jp
sbb
push
jecxz
popa
outsb
push
or
int3
inc
fcoml
add
ljmp
daa
xchg
jo
cmp
outsb
xchg
add
and
push
mov
mov
jecxz
pop
andb
inc
mov
fistpl
in
daa
pop
mov
xchg
mov
icebp
jmp
inc
mov
adc
bound
xorl
cmp
repz
cmc
mov
and
xchg
cmc
inc
inc
in
or
push
dec
jno
sbb
and
insl
xchg
imul
xsha256
cmpsb
adc
js
mov
repnz
out
sbb
xor
int3
out
stos
daa
icebp
xchg
mov
or
pusha
and
mov
push
bound
lret
sub
stos
and
mov
bound
in
ret
mov
push
ja
shl
adc
aam
inc
mov
out
inc
ds
xor
out
xor
add
xor
adc
add
xor
cmc
fcom
push
mov
mov
sub
sti
popf
pop
outsb
adc
out
fdivs
mov
out
rcll
sub
cltd
addr16
daa
mov
in
divb
push
loopne
repz
mov
decb
push
sar
sub
imul
sbb
mov
sub
push
lret
repz
or
xor
ret
iret
jns
sbb
pop
mov
sub
shrb
incb
fwait
lahf
xor
jns
jo
jg
mov
cmp
push
sub
jle
insl
xor
ljmp
out
push
dec
dec
dec
pusha
mov
test
and
sub
cvtps2pd
and
mov
and
test
pop
cmpsb
mov
fucomi
jle
popf
jo
insb
ds
decl
cmp
adc
mov
or
lds
or
mov
pop
xlat
inc
cmp
jnp
ret
mov
and
mov
cs
sub
pop
adc
pop
leave
inc
mov
adc
jb,pt
mov
daa
jge
je
lods
sbb
iret
mov
and
pop
or
push
jns
test
cmp
je
lods
aas
test
jl
andb
jmp
inc
aas
adc
and
pop
fs
mov
jg
jno
popf
mov
mov
scas
shrb
lret
pop
sub
xchg
xchg
notb
dec
cs
xor
xor
dec
fwait
lret
adc
cltd
jle
test
fs
iret
ds
inc
mov
sbb
test
pop
fidivrs
sub
mov
cmpsb
insb
sub
lods
mov
cmp
rorb
rcrl
jl
leave
lock
xchg
out
xchg
sbb
push
mov
xchg
mov
fcoms
jbe
stc
testb
jb
fsubrl
in
pop
ss
inc
mov
mov
mov
push
insl
push
add
fnstenv
outsl
push
iret
aad
in
pop
rclb
lods
scas
push
jnp
cmp
out
loope
lret
nop
mov
andl
scas
adc
sub
dec
mov
cmp
mov
setbe
call
loopne
ret
and
scas
test
cltd
test
and
addl
ror
xchg
mov
push
incb
inc
inc
repz
push
pop
fwait
sbb
add
inc
outsb
mov
add
arpl
insb
pushf
lret
xchg
sbb
shll
inc
sbb
popa
inc
addr16
and
mov
ds
pop
sbb
fs
lods
cwtl
nop
cwtl
dec
out
mov
mov
xchg
ret
mov
adc
xor
test
in
xchg
pop
jns
inc
inc
nop
inc
adcb
arpl
jl
sub
dec
call
faddl
imul
dec
push
icebp
and
loopnew
iret
fsubl
shl
sbb
imul
dec
iret
lds
cld
xor
jg
jl
push
or
gs
mov
xor
addr16
lock
out
mov
dec
add
mov
loop
cmpsl
repz
icebp
iret
xor
fsub
push
sub
ud1
sti
pop
add
aas
jns
jmp
repnz
ret
ljmp
xchg
fstps
xchg
mov
cmc
mov
add
test
ljmp
or
aaa
mov
outsb
sbb
push
aas
scas
push
das
or
dec
loopne
ljmp
xor
rorb
sbb
push
mov
push
push
push
mov
imul
ja
push
ja
jns
sub
scas
dec
ret
iret
sti
ljmp
jae
or
mov
add
arpl
push
daa
filds
and
outsl
ljmp
test
cld
pop
into
les
push
sti
fstpl
push
and
int3
insb
fstp
outsl
fs
in
xor
lds
push
popa
ret
mov
dec
cmp
mov
mov
jnp
outsb
mov
cltd
push
cmp
sub
push
mov
fidivrs
fdivrl
xchg
popa
or
nop
sub
or
scas
roll
adc
inc
dec
and
push
mov
lahf
shr
push
dec
rclb
jg
mov
fcomps
or
pop
mov
xchg
fisttpl
dec
inc
push
or
das
test
aas
inc
out
dec
jp
sub
sbb
pop
out
jns
add
inc
and
cld
scas
aam
sti
xor
sbb
push
decl
cmp
and
fdivs
sbb
enter
dec
cmp
ret
popa
out
mov
clc
lcall
sub
mov
mov
dec
adc
sub
jg
mov
ret
push
mov
testl
out
pop
mov
mov
shr
imull
movsb
dec
inc
insb
jp
add
jo
jmp
cmpsb
jae
in
dec
xchg
loop
cmc
in
and
fldt
or
insl
sub
add
and
xchg
cmpsb
mov
push
mov
sbb
pop
pop
enter
and
scas
fistpl
sub
fldcw
loope
pop
inc
iret
popa
inc
jle
in
sub
adc
dec
ret
cli
fs
mov
ret
mov
xor
insb
pop
fisttpll
fisttpll
inc
roll
adc
and
insb
jnp
and
jo
mov
pop
into
jae
insb
out
dec
popl
mov
lea
adc
jb
jle
push
sub
mov
cmp
jne
xchg
stos
inc
stos
notl
lds
adc
dec
fidivrs
dec
iret
cwtl
aam
sub
fucomi
adc
movups
aas
les
sub
sbb
lods
scas
loopne
pushf
inc
pop
mov
ficompl
cli
icebp
aaa
inc
cmp
cld
mov
test
int
mov
push
add
jns
mov
add
lcall
in
add
dec
sbb
je
sbb
pop
loope
mov
js
jns
roll
loop
in
neg
mov
xor
sub
das
push
jb
fiadds
mov
sbb
jg
leave
lret
mov
mov
mov
xor
outsb
stc
xor
or
xchg
cld
dec
mov
hlt
adcl
pop
fildll
inc
cmpl
fmulp
cmp
ja
cs
inc
shll
or
inc
mov
xchg
fs
sub
pop
fadds
sbb
pop
xor
cmp
pop
loope
out
dec
jecxz
sbb
lret
jle
ret
fld
ja,pt
add
nop
jecxz
sub
es
mov
inc
add
adc
xor
xchg
and
adc
dec
in
inc
dec
cmc
ljmp
adc
push
inc
test
push
mov
shrb
mov
xchg
pop
fs
sbb
inc
and
xchg
imul
cld
mov
dec
mov
xor
test
ret
in
test
inc
jo
aam
cmp
fisubs
mov
dec
mov
shrb
push
xchg
jno
call
and
popa
mov
add
fisttpll
inc
fmul
in
mov
adc
or
aad
mov
int3
mov
sti
dec
sbb
dec
aaa
jne
andl
mov
nop
sub
movsb
shrb
inc
adc
jae
mov
xchg
sub
sar
sub
mov
dec
xor
jmp
pop
insb
adc
int
pop
shlb
scas
test
or
test
mov
sub
mov
push
and
push
mov
les
xchg
xchg
push
or
sahf
repz
in
stos
mov
sti
mov
jmp
inc
fildll
inc
jg
dec
mov
repz
fs
js
add
mov
ret
add
adc
lahf
and
add
in
push
loop
bound
mov
push
or
sbb
out
aaa
mov
jp
mov
sub
icebp
jecxz
js
mov
mov
push
sub
fs
cmpsb
dec
mov
fisubs
sar
push
mov
mov
sbb
mov
sbb
xchg
sub
ret
cmpsb
push
xchg
ja
ret
xor
dec
dec
inc
popf
mov
xor
lods
cmp
in
loope
into
or
les
jo
or
mov
inc
test
and
and
ret
popa
repnz
lods
cld
rcll
sahf
jg
or
cltd
ja
sbb
adc
mov
sub
pop
xor
mov
fsubrl
addr16
cmc
or
push
aad
jbe
sub
fimuls
nop
add
add
xor
popf
pop
sbb
add
ret
jnp
jnp
and
mov
jno,pt
inc
xchg
cmp
pushf
push
adc
fucomp
lret
push
dec
cld
cmp
jge
mov
xchg
push
and
xor
daa
or
mov
lret
stos
call
roll
mov
fldl
pop
xchg
repz
xchg
mov
add
insl
je
and
fs
loope
xchg
sbb
loopne
push
mov
mov
mov
push
xor
ret
and
mov
cmp
les
sahf
sub
cmpsb
pop
fwait
cmp
mov
je
ficoms
mov
fwait
pop
sbb
in
cmpb
flds
clc
add
add
add
mov
mov
test
sub
jg
push
roll
dec
mov
lret
shlb
dec
adc
sbb
lahf
cmp
or
add
rolb
mov
pushf
mov
mov
in
mov
dec
ret
nop
ljmp
lahf
or
mov
mov
jg
ret
push
enter
rcrb
negl
ds
lods
xor
rep
aam
add
gs
mov
rorb
inc
jno
mov
cmp
popf
mov
out
mov
shl
sbb
jb
jecxz
cmp
or
clc
push
aas
cmp
dec
add
cmpb
lcall
ds
vpsadbw
xchg
es
cli
sbb
xchg
sub
push
mov
cwtl
loop
xor
adc
int3
insb
and
cmp
sbb
push
mov
bound
jo
les
lahf
lea
out
jno
aad
jecxz
repz
pop
popa
popa
adc
iret
inc
and
scas
push
int3
aam
and
lret
or
xor
icebp
cwtl
jle
lret
xchg
int3
into
cmp
movsb
adc
jge
jl
adc
xlat
repnz
popf
or
scas
mov
divb
int
aas
jl
and
rcrb
in
enter
ss
mov
mov
add
xchg
mov
out
push
adc
out
hlt
mov
mov
pop
out
jnp
movsb
mov
loop
xor
xchg
adc
add
xchg
xchg
fdivrp
pop
sti
ret
icebp
or
xchg
and
pop
out
mov
mov
movsb
and
int3
add
cltd
adc
les
pop
outsb
cmp
lea
mov
das
fstps
mov
int
subb
out
fwait
int3
mov
mov
fcom
sti
jnp
mov
orb
into
jnp
popa
popa
mov
push
pushf
stc
xchg
scas
mov
out
mov
out
add
dec
inc
add
jb
mov
jb
data16
adc
fwait
rcr
inc
adc
xchg
add
mov
stos
scas
xchg
mov
test
mov
or
sub
push
mov
jno
jns
dec
movsl
mov
pop
lods
push
fiadds
cmp
nop
call
loope
outsb
pop
jg
inc
movsl
imul
sub
adc
lahf
adc
aas
sbb
push
mov
js
adc
sub
loopne
jb
negb
js
test
aas
test
jb
out
loop
ja
and
scas
sub
xchg
push
hlt
mov
inc
sahf
jnp
pop
xlat
mov
sub
rcl
into
xchg
mov
in
push
or
lock
ljmp
lret
daa
add
fildll
dec
fwait
sbb
mov
mov
loopne
pop
cltd
jp
fs
push
inc
lea
aas
push
imul
sbb
mov
fdivrs
push
test
cmp
leave
jl
or
pushf
fmull
outsl
pop
pop
in
jns
jno
daa
fwait
adc
pop
dec
add
sub
mov
push
cmp
or
ss
lret
loope
sbb
add
fsubs
scas
pop
mov
clc
int
mov
clc
mov
sbb
cld
js
adc
enter
gs
and
jecxz
mov
cmp
je
pop
ja
cmp
jp
dec
dec
mul
push
ljmp
jmp
mov
adc
xor
fiadds
rol
jecxz
loope
adc
mov
xchg
int3
fldcw
mov
inc
pop
adc
inc
jns
mov
add
stos
pop
push
mov
sbb
sarl
testl
push
pop
mov
xchg
gs
push
push
add
ret
push
aaa
enter
sbb
test
sti
gs
adc
je
outsb
pop
mov
jmp
pusha
sub
out
pusha
fldl
or
mov
mov
jmp
clc
orb
js
inc
and
sbb
aas
dec
inc
hlt
neg
mov
jecxz
push
and
negb
cld
inc
add
mov
cltd
fcmovnb
add
sub
out
daa
push
out
repnz
lock
pushf
add
sbb
imul
cmp
aas
fimuls
lcall
std
mov
test
xchg
sahf
cs
and
outsl
sti
lret
gs
or
int3
mov
adc
pusha
out
adc
cld
outsl
cli
test
fdivrs
jge
in
fldcw
push
xor
icebp
inc
jne
xor
clc
jnp
sub
daa
lahf
xchg
sbb
or
scas
ss
fisubrs
jle
cmpsl
sbb
mov
lock
mov
or
dec
out
cltd
push
ret
fmull
adc
sbb
dec
shl
xchg
fistpl
lea
fdiv
cmp
mov
shrb
add
inc
sub
cmp
xorb
out
ss
mov
inc
pop
inc
xchg
js
xor
xor
arpl
mov
and
xor
notb
push
mov
inc
push
aad
popf
xchg
daa
repz
inc
pop
je
pop
mov
jmp
or
ret
out
add
cs
popa
inc
std
mov
mov
incb
add
xchg
or
fstl
xchg
in
jl
pop
push
pusha
int3
dec
lds
inc
popf
dec
dec
sahf
xchg
add
add
mov
es
repz
inc
frstor
jmp
mov
andl
pop
adc
scas
test
fstps
cs
mov
ss
fldenv
and
and
sbb
hlt
imul
and
repnz
jae
rcr
jb
sbb
cmp
fistpl
fadds
shl
idiv
push
lcall
add
dec
sbb
xchg
jns
nop
ds
lods
adc
out
mov
mov
pop
aas
loop
insl
mov
in
pop
jl
push
jbe
add
shlb
aaa
push
push
lcall
pushl
sub
out
adc
adc
addr16
xor
adc
les
fwait
xchg
pop
cltd
loopne
dec
push
jnp
and
fcoml
mov
xor
leave
cmp
mov
loop
cmp
mov
and
lcall
or
jg
lods
fucom
inc
sub
cmpl
jmp
out
fdivr
add
sbb
mov
sti
lret
into
and
cmc
shlb
sbb
jno
jecxz
dec
mov
xchg
xor
aas
mov
test
arpl
inc
dec
ljmp
and
test
fimull
dec
pop
cmp
and
hlt
sbb
stc
mov
and
addb
mov
and
test
lods
cli
test
popa
mov
js
ret
mov
movsb
leave
mov
mov
lcall
mov
xor
and
arpl
lods
jg
scas
mov
jl
aaa
mov
leave
jmp
ret
cld
mov
test
cmp
inc
popa
mov
ret
xor
and
negl
mov
movsl
aas
repz
and
mov
addr16
jmp
sbb
inc
cmpsl
cmp
dec
lea
addr16
cmpsl
mov
lcall
jge
fs
aaa
xchg
call
or
xchg
push
out
mov
lret
cmc
cmc
mov
add
cmpb
fpatan
cmc
xchg
stos
popa
add
push
add
frndint
mov
mov
dec
xor
cmpsl
stos
mov
out
stos
mov
lahf
scas
and
mov
mov
ficoml
cmc
jbe
push
shlb
or
cmc
mov
jbe
pop
inc
adcb
adc
xchg
fldt
mov
call
sbbl
or
jno
fnstenv
adc
in
add
mov
cs
test
in
mov
insb
in
iret
clc
incl
pop
popa
popa
xchg
lods
leave
popa
ss
imul
mov
or
pop
inc
or
ss
ret
cmp
rol
sbb
inc
cwtl
ja
out
scas
shl
push
inc
jnp
ljmp
arpl
lcall
add
ret
push
lods
bnd
sbb
out
mov
add
flds
xlat
je
imull
vpunpcklqdq
jmp
sub
sti
sti
popf
les
sahf
shrl
mov
enter
push
xor
test
jne
enter
sub
pop
jb
rorl
movsl
cmp
lret
int
mov
cs
cmp
pop
cltd
xchg
adc
xor
fmulp
cmp
push
test
mov
out
dec
cmp
iret
or
jnp
lea
lret
fsubl
pop
sub
imul
leave
das
pop
frstor
lock
xacquire
adcl
in
xchg
fs
add
repz
or
aas
jbe
and
jns
xor
sahf
mov
shlb
and
and
test
icebp
stos
xor
pop
or
push
popf
sbb
xchg
in
sbb
xchg
out
and
xchg
jno
loope
in
lahf
in
pop
in
pop
xchg
and
aaa
dec
sbb
jns
movsb
pop
xchg
cmpsb
jb
add
out
jo
adc
mov
loopne
test
adc
adc
das
loop
imul
movsl
inc
nop
add
dec
and
lcall
xor
jbe
xchg
cmpsb
fcoms
lcall
sbb
cmpsb
jo
outsb
lahf
pushf
cmp
jp
xchg
int3
dec
and
push
pop
outsb
aad
mov
cmp
inc
subb
inc
sarl
out
or
dec
jecxz
dec
xor
add
cli
ficoml
jecxz
jl
lods
test
mov
add
cwtl
jne
add
push
sub
ja
adc
imul
pop
shlb
fs
add
adc
add
xchg
cwtl
jbe
mov
ret
jp
in
jmp
insb
ds
clc
lods
sbb
testl
and
out
insb
mov
and
sbb
mov
icebp
rorl
repz
rolb
inc
pop
ficoms
push
in
ficoms
push
subb
loope
outsl
ja
xlat
adc
jecxz
sahf
or
or
icebp
adc
mov
enter
push
ret
repz
sub
xchg
xchg
mov
test
in
mov
stc
inc
ret
xorb
mov
mov
or
pop
mov
fbld
xchg
insl
inc
icebp
push
adc
jp
adc
lods
stos
movsl
xchg
test
das
or
movsb
nop
in
pop
jnp
push
es
test
sub
xor
jl
mov
lods
ret
mov
push
mov
daa
test
mov
jns
shll
icebp
xchg
mov
xor
mov
out
bound
inc
pop
loop
cs
enter
sbb
nop
mov
push
pop
pop
sbb
inc
fldt
or
lcall
dec
jp
xor
mov
loop
mov
aaa
lahf
outsb
adc
sarb
cmp
shll
fistps
movsl
mov
daa
popa
mov
cmp
movsb
mov
mov
nop
lds
mov
mov
mov
mov
jmp
enter
jecxz
jge
mov
adc
sti
pop
adcl
notl
inc
loop
jb
cld
and
out
addb
and
inc
mov
jne
xchg
dec
sbb
cld
cwtl
pusha
in
mov
inc
xor
pusha
testl
or
mov
or
mov
lcall
insl
ret
je
xlat
xor
adc
fdivrl
dec
jne
jg
and
mov
outsb
cmpsl
out
mov
pop
mov
mov
and
iret
out
xor
addb
mov
fisubs
sub
ret
inc
sbb
in
push
sub
push
xor
repz
ret
subl
inc
mov
cmp
imul
fwait
inc
imul
fs
mov
add
decb
std
mov
xchg
inc
bound
jg
xor
imul
add
stc
jg
and
push
aas
inc
mov
lods
fmull
mov
stos
je
mov
and
icebp
sbb
js
aam
and
xchg
dec
repz
int3
inc
iret
sub
jo
dec
fnstcw
xchg
xchg
lock
mov
push
inc
jp
sahf
mov
inc
mov
daa
out
mov
in
lods
and
stos
xchg
cltd
adc
test
sbb
arpl
and
sub
das
and
lret
rcrb
inc
jbe
fsts
adc
inc
mov
into
pop
jbe
push
cwtl
pop
mov
xchg
xor
icebp
mov
cmp
dec
xchg
sbb
and
rcl
cmp
sar
popf
aaa
lods
sbb
les
cmpsb
mov
push
xlat
pop
mov
jmp
pop
pop
or
xchg
push
pushf
icebp
lret
movsl
in
jns
mov
faddp
sub
or
aad
and
adc
jns
testl
out
add
mov
std
pop
jl
jmp
test
cmpsl
and
out
imulb
fbstp
scas
cmp
ficompl
and
mov
ret
push
pusha
push
dec
push
pop
xchg
pop
int3
iret
shll
dec
arpl
push
pop
push
imul
inc
arpl
dec
sub
push
imul
cmp
scas
xchg
xchg
lods
mov
ficoms
adc
mov
mov
cli
lods
jmp
pop
cmp
jo
mov
xchg
cld
add
insb
pop
jl
and
cs
pushf
ljmp
fildll
push
mov
adc
int
loop
mov
push
cld
mov
lcall
aaa
pop
ja
int3
cld
stos
jge
jl
bound
xchg
out
sub
inc
push
or
cmpb
test
sub
leave
add
xchg
lahf
adc
lods
mov
mov
repnz
imul
add
pushf
pop
adc
out
insl
adc
bound
pushf
pop
push
jno
sbb
pop
or
cwtl
xchg
mov
mov
cli
ss
push
push
push
mov
dec
std
jge
lea
or
lock
sbb
lcall
jae
pop
ret
call
clc
repz
pop
imul
push
les
mov
cmp
adc
mov
dec
and
jle
mov
loop
in
pop
sub
mov
mov
into
xor
sub
pop
sbb
leave
cli
jl
mov
jl
aam
add
jg
imul
in
jge
mov
cltd
stc
hlt
push
mov
adc
pop
push
dec
fnstsw
mov
ret
mov
push
aad
xchg
pop
jl
outsb
fistpll
hlt
mov
lcall
xor
mov
cmp
cli
jnp
sti
xor
sbb
idiv
jns
xchg
shlb
fs
je
mov
adc
jmp
hlt
fisubl
and
inc
mov
mov
ss
jo
ja
insl
inc
dec
cmpsl
leave
fcom
xor
mov
cltd
and
in
lret
adc
xchg
mov
push
adc
push
push
mov
pop
decl
cmp
and
inc
stos
or
dec
mov
and
dec
xor
call
adc
mov
data16
push
xor
sti
xor
pop
ds
jmp
pushf
ja
and
std
sbb
popf
add
orl
cmpsl
add
xlat
icebp
or
push
hlt
in
mov
push
testl
pop
or
adc
rcrb
mov
mov
xchg
cmpsl
sub
push
mov
xchg
jo
inc
mov
nop
jnp
sbb
xor
pop
cli
inc
pop
xor
jne
cltd
xor
or
mov
jns
xor
sub
leave
lahf
iret
jne
mov
sbb
push
push
adcb
arpl
and
mov
xor
jge
push
mov
jmp
and
ret
and
adc
and
in
mov
stc
mov
fidivrl
rol
lahf
mov
jle
cltd
pop
mov
jns
xor
lea
insl
out
jmp
shl
ja
iret
mov
mov
cmpsb
push
arpl
in
mov
push
jno
mov
dec
scas
sbb
xchg
jg
fdivs
stos
xor
fmull
addl
mov
pop
xchg
dec
mov
push
sbb
push
inc
mov
das
pop
movsl
inc
mov
add
das
or
xor
aaa
shlb
cltd
imul
in
sub
cmc
dec
push
loopne
into
pop
lock
and
icebp
lock
dec
cmp
clc
dec
mov
aas
cld
xor
sbb
jae
push
lcall
mov
mov
fldl
sbb
and
and
clc
push
sub
adc
repz
fimull
and
add
movsb
aad
dec
mov
cmp
xchg
cmc
sbb
and
sub
lea
daa
mov
push
insb
sbb
mov
mov
jecxz
iret
add
jb
aaa
jmp
out
filds
mov
xchg
mov
pop
shlb
add
pop
daa
push
mov
fsubrl
lret
add
les
mov
pop
jp
inc
out
jecxz
iret
shrb
stos
push
inc
push
test
testb
ja
pop
or
ret
cmp
push
dec
and
mov
adc
enter
stos
loope
and
popf
jnp
in
add
dec
std
fsubrs
and
add
sub
sar
or
mov
mov
xchg
jge
fistps
or
mov
testl
sub
hlt
enter
sti
mov
mov
addr16
ret
xor
out
mov
test
loopne
adc
jle
sahf
push
outsb
loopne
sbb
cmp
int3
pop
fstl
dec
arpl
fs
push
sahf
in
fwait
jg
mov
push
lret
rcll
adc
jp
shlb
xor
push
and
or
cmp
and
arpl
jbe
cmpsb
xor
enter
sub
xchg
aaa
adc
mov
daa
cld
fdivrs
les
fwait
ja
mov
mov
jge
popa
je
pop
sub
test
gs
and
fisttpll
pop
inc
addb
sbb
hlt
inc
ret
add
mov
fs
pop
xor
inc
or
pop
pop
or
fistpll
inc
pop
shll
ret
daa
cmp
lret
stc
icebp
inc
adc
xchg
jb
adc
outsb
inc
pop
and
inc
mov
scas
lods
addr16
out
mov
push
push
adc
repnz
mov
lahf
or
je
fnsave
clc
ret
jne
repnz
insl
pop
repnz
mov
les
inc
and
les
mov
cmpsb
inc
rclb
dec
dec
jl
cmp
cld
xchg
xchg
js
icebp
inc
movsl
gs
lods
adcb
sub
imul
sahf
and
xchg
cmp
mov
out
mov
push
out
imul
stos
lcall
popf
leave
push
or
imul
sub
sbb
stos
mov
pop
notl
xlat
rcr
dec
faddl
int3
insl
in
test
add
or
jae
in
popf
jnp
mov
lock
mov
sahf
adc
mov
push
mov
outsb
nop
mov
lahf
pop
sub
in
add
ja
push
xchg
nop
out
inc
xor
dec
xor
cmpsb
les
icebp
jae
xchg
into
in
loopne
setl
cltd
ljmp
std
inc
mov
pop
xor
mov
push
cli
and
jge
mov
shrb
xchg
stc
jnp
testl
int
adc
add
mov
scas
xor
pop
cltd
mov
sbb
fucomi
arpl
push
mov
xchg
adc
mov
outsl
mov
int
pop
ds
cld
popf
xchg
cmc
andb
addr16
test
jmp
mov
adc
mov
sbb
orl
push
into
dec
mov
mov
insl
popa
repz
jo
pop
inc
aad
mov
push
pop
cwtl
push
sbb
mov
movb
xchg
cmp
jbe
and
jp
pop
push
sub
loopne
gs
fiaddl
cmpb
pop
pop
dec
test
pop
fsubs
xor
sbb
cs
mov
add
cld
pop
idivb
je
iret
xor
dec
ret
call
fldenv
jecxz
ret
mov
repnz
loope
dec
adc
xchg
ficompl
jnp
adc
adc
dec
addr16
mov
push
movsb
xchg
mov
pushf
hlt
jle
movsb
jae
push
cmp
adc
mov
fld
mov
inc
shl
push
cmp
adc
in
loopne
push
adc
bound
stc
push
dec
fsts
out
inc
jbe
push
or
sbb
addr16
mov
call
add
pop
sbb
popf
dec
mov
popa
les
push
hlt
pop
insb
push
push
push
fdivl
mov
dec
add
mov
sti
incb
cmp
xchg
sub
ret
jl
jbe,pn
paddw
push
imul
jne
rorl
lret
out
mov
bound
sub
jnp
and
cmp
xchg
mov
xchg
adc
stos
pop
stos
cmp
in
das
cmp
in
fdivrl
shl
xor
repz
jl
sahf
jp
arpl
into
mov
ja
cmp
outsl
cli
les
and
cmp
pusha
imul
mov
inc
mull
fsts
das
adc
movsb
into
popf
imul
adc
iret
cmpsl
int3
inc
divl
imul
lock
cld
or
push
xchg
negb
enter
add
mull
push
in
lret
in
sub
push
ja
int
push
adcl
xchg
rorb
cmp
sbbl
mov
das
lock
scas
jge
xor
inc
cmp
xchg
dec
lds
push
mov
jnp
inc
and
stos
xchg
or
int
fdivrl
mov
sub
cli
mov
lods
xchg
sarb
pop
mov
mov
jae
pop
fisttpll
sub
sub
push
imul
fsts
push
stc
out
mov
fidivrl
push
xlat
in
mov
dec
mov
mov
fxch
arpl
mov
imul
cmp
jbe
inc
mov
jbe
dec
int
nop
pop
sti
inc
imul
xlat
int3
xchg
dec
xor
jbe
std
mov
aad
xor
jge
add
sbb
and
mov
mov
popa
pop
std
sbb
mov
stos
in
mov
jae
imul
xchg
hlt
jmp
pop
adc
test
add
in
mov
sbb
sbb
ljmp
sub
dec
cmc
fiadds
mov
mov
inc
xchg
pop
fistpl
les
mov
outsl
shll
mov
mov
gs
icebp
aam
repz
sbb
repz
gs
das
xor
pop
imul
mov
mov
es
inc
inc
test
cmp
pop
pop
pusha
xchg
es
pusha
adc
sarl
xor
or
sub
mov
pop
iret
fisttpl
ret
mov
or
test
xor
jnp
inc
dec
dec
xchg
cmp
mov
xchg
sub
jbe
push
cltd
xchg
pushf
cld
ret
insl
xchg
adc
cmp
rcl
xor
inc
das
mov
decb
jge
adc
push
xor
lods
test
mov
dec
pusha
test
xchg
fstpl
fmuls
sub
mov
roll
lret
inc
dec
mov
stos
cmp
push
push
movsl
cmp
dec
adc
in
ficoml
out
xor
ss
mov
lods
ss
in
out
inc
mov
ret
stos
pop
repz
sub
sub
jne
jp
xlat
mov
insl
jno
mov
lock
cwtl
lcall
ljmp
mov
pop
int
daa
movsb
pop
lcall
push
jae
add
out
inc
aad
nop
add
fiaddl
hlt
rcll
stc
mov
into
jmp
filds
mov
mov
or
je
add
xchg
fsubs
mov
iret
jmp
and
rorl
int
dec
in
cmp
sbb
add
aas
push
out
movsb
lea
xchg
dec
fwait
sub
xor
mov
cltd
or
push
mov
cmp
mov
cld
jne
jnp
sub
lods
inc
pop
stos
test
data16
in
inc
xor
arpl
xchg
mov
cmp
add
test
ret
mov
dec
lret
dec
xchg
inc
out
in
sahf
mov
push
sbb
out
int3
mov
jp
test
pusha
and
loopne
into
mov
add
and
pop
clc
lock
jp
gs
call
cmp
inc
jno
xor
lahf
and
mov
stc
and
add
addr16
aaa
add
dec
lret
cmp
mov
jg
aad
xchg
and
mov
sahf
push
xor
fstpt
lock
dec
es
int
mov
push
or
fstl
jne
ja
popa
dec
gs
arpl
xor
pop
lock
sbb
inc
lea
mov
sbb
test
popa
jns
fmuls
jne
or
mov
push
and
sub
mov
and
mov
mov
inc
mov
mov
in
out
fnstcw
arpl
mov
sahf
push
mov
mov
stc
lret
inc
in
movsl
dec
leave
dec
les
xchg
jno
test
leave
xchg
xor
popa
test
cwtl
lahf
rcl
pop
mov
mov
sub
xlat
xor
pop
test
mov
ds
outsb
mov
lcall
fildll
xor
rcrb
out
jg
lea
mov
xchg
push
pop
stos
mov
ret
mov
add
cmp
push
push
dec
inc
and
push
jo
inc
cmc
ss
xor
mov
insb
pop
adc
mov
popf
ret
or
dec
and
scas
inc
sbb
sbb
aad
inc
into
cmovl
aad
cmpsl
push
push
mov
lds
sarl
ret
mov
aam
movsl
and
lods
cs
int
sub
or
jbe
lret
or
in
inc
sub
rorl
and
movsb
out
push
dec
xor
cmp
inc
add
xchg
jle
adc
lcall
jmp
loope
push
jg
xor
push
mov
gs
or
and
aaa
insl
push
fsubp
jnp
cmc
sahf
ljmp
or
mov
cli
pop
je
aaa
imul
pop
pop
cmp
sbb
inc
rorl
outsl
jg
dec
push
add
jmp
fadd
cwtl
adc
lock
mov
sti
stos
or
mov
cmc
cs
pop
inc
mov
lods
jo
push
in
icebp
mov
lock
lods
inc
sbb
cld
fdivs
jbe
add
xchg
mov
pop
popf
pop
sub
jecxz
mov
xorl
mov
gs
sbb
in
mov
and
daa
jmp
jns
jg
addr16
push
sub
orb
pop
mov
xchg
ret
test
mov
movsb
pushf
sahf
or
roll
in
pushf
cmpsl
or
jle
inc
or
pop
xchg
add
sar
cmp
inc
aaa
xchg
inc
xor
idivb
mov
jmp
dec
sub
rcl
mov
mov
rorl
lock
add
cltd
cmc
fildl
cltd
cmc
lcall
sbb
mov
mov
push
xor
pushf
mov
bound
push
mov
sbb
and
pushf
lret
sarl
faddl
stos
stc
leave
push
adc
cmpsl
mov
aas
pop
jle
adc
or
sarl
lock
into
xor
mov
movsb
mov
sub
fwait
or
repnz
lock
mov
pop
mov
pop
adc
outsl
and
jp
push
int3
icebp
insb
jp
icebp
pushf
mov
in
sbb
mov
mov
sbb
mov
or
xchg
cmpsb
insl
mov
push
pop
call
add
pop
cwtl
nop
jge
popa
xchg
xchg
pop
in
stos
cmc
mov
sbb
sub
fmull
mov
test
cs
lahf
cmp
cs
scas
xchg
pop
adc
lock
fnstenv
xchg
push
dec
add
cmp
addr16
mov
mov
fdivrp
and
add
sbb
sbb
js
xchg
cld
insb
rcll
lret
popa
fwait
dec
xchg
fistps
jg
xor
dec
mov
push
js
cmp
mov
fwait
sarl
ja
jecxz
outsl
lock
xchg
jmp
scas
ret
popa
mov
pop
fildl
imul
adc
notl
jo
dec
ficoml
xor
cltd
gs
out
sti
pop
pushl
cli
sbb
xchg
dec
push
es
in
arpl
or
adc
pusha
js
pop
gs
or
imul
int3
or
das
mov
jne
mov
insl
sbbb
mov
std
mov
and
lock
ja
mov
add
pop
adc
arpl
inc
add
mov
ljmp
pop
imulb
mov
fmull
or
mov
mov
into
test
lods
divl
and
test
or
daa
fidivs
add
or
data16
dec
sbb
xor
mov
je
adc
out
and
std
jp
push
sub
enter
and
cmp
rcr
mov
loope
mov
ret
dec
mov
cmp
out
fcomip
xchg
mov
into
fs
xchg
sbb
stc
idivb
push
sbb
mov
or
add
cld
cwtl
xchg
imul
pop
ret
push
pop
fucomi
mov
xchg
mov
jle
jmp
adc
jecxz
pusha
lock
and
hlt
xchg
loop
pop
sub
push
in
xchg
out
lcall
and
xor
cmovns
sub
imul
js
ret
dec
mov
xor
stc
adc
mov
push
icebp
xchg
pop
imul
sbb
in
mov
cmp
xchg
sbb
jecxz
aaa
lock
mov
arpl
fwait
sub
test
xchg
mov
imul
je
das
popa
mov
cmpsl
fsub
push
clc
in
insb
std
sub
rorl
sarb
jno
push
outsb
mov
xor
in
jne
data16
cld
out
add
aaa
lds
je
ret
and
cmp
mov
pop
enter
inc
jb
and
mov
iret
clc
push
cmpsb
out
adc
jmp
xor
arpl
dec
push
cmp
mov
adc
pop
jb
pop
pop
pop
fisttps
xchg
rorb
shlb
test
adc
into
mov
sub
adc
fidivrs
sbb
clc
jge
bound
in
lods
add
ret
jmp
mov
shll
enter
lea
add
xor
adc
mov
cwtl
xchg
pusha
xchg
shrl
imul
and
sub
jmp
lret
data16
push
and
loopne
cli
push
loope
xchg
fstpl
xchg
cmp
lock
in
roll
jbe
sub
stc
or
movl
inc
out
lret
jnp
pop
xchg
mov
or
push
adc
rorb
pop
inc
or
dec
insl
pop
jg
es
cld
lret
xchg
dec
cmpsb
aad
shrb
mov
ret
sbb
jbe
mov
xor
aaa
sbb
mov
jge
js
jo
push
push
pushw
inc
adc
push
inc
xor
insl
stc
iret
out
inc
int
and
jge
stc
xor
cli
mov
add
jge
shlb
pop
mov
adc
xor
shlb
jno
pop
inc
pop
add
jmp
in
mov
pop
iret
fadds
sub
filds
outsl
mov
ljmp
clc
sbb
mov
jge
and
pop
dec
add
dec
jae
out
loopne
mov
sbb
maxps
jmp
testl
aas
out
xchg
mov
jl
mov
imul
push
sbb
addl
pmaxsw
fcomps
inc
mov
fldl
stos
sub
les
or
out
fwait
sub
cmpsb
push
hlt
popf
inc
pop
push
cltd
into
pop
in
mov
mov
xor
sahf
or
or
dec
aam
xor
cmp
adc
or
ds
aaa
jecxz
and
fsubs
mov
adc
and
mov
cmpsb
pop
loop
lods
test
sbbl
aad
scas
clc
inc
or
aad
fwait
xchg
orb
loopne
pop
add
dec
mov
popf
negb
js
push
cmpsb
lods
shlb
adc
xchg
stos
lock
pop
test
pop
inc
lret
popa
or
andl
ljmp
pop
push
popf
pop
sti
inc
jp
jno
mov
adc
scas
sub
mov
mov
hlt
or
pop
mov
cmp
out
cmp
push
nop
mov
sti
dec
fbstp
bound
or
cmp
fwait
jns
jnp
push
subl
pop
jne
dec
jb
mov
dec
and
mov
jne
out
int3
dec
sub
cmp
dec
xor
adcb
out
or
jle
punpckhwd
xchg
fisttpll
insl
push
add
int3
enter
bound
pop
iret
outsl
cmpsb
cmp
add
std
hlt
lods
pop
cmp
jl
std
pop
aaa
mov
lcall
dec
push
or
jg
inc
mov
cmp
scas
mov
pop
push
and
mov
adc
std
add
mov
int3
push
push
imul
xchg
xchg
xchg
popl
jae
psrld
sti
in
jge
adc
inc
dec
sbb
and
jno
movsl
xor
sbb
add
xchg
push
cmc
dec
addr16
xchg
sbb
add
mov
ja
movsl
sub
mov
test
mov
sti
ficomps
ret
jns
pop
call
movsl
jns
cltd
xor
adc
jl
shl
push
jge
xor
push
into
add
sti
jge
cmpsl
mov
repnz
xchg
shl
inc
loope
lahf
cmp
popl
lods
pop
pushf
push
dec
rcl
adc
or
enter
test
add
sub
jae
mov
dec
mulb
pop
mov
int
and
cs
inc
pop
dec
add
rorl
cmpsb
mov
in
icebp
rcrl
jbe
dec
jo
push
inc
ljmp
aas
sbb
mov
sbb
push
push
inc
ss
or
xor
repz
dec
or
in
notb
mov
in
je
je
xlat
xchg
mov
insb
dec
mov
jns
test
sbb
sbbl
in
jae
jnp
leave
in
movsl
jge
lahf
xchg
jne
or
sub
lods
neg
addr16
sub
inc
and
in
or
dec
push
imul
cwtl
mov
jno
das
repz
ret
stos
push
mov
mov
push
out
int
stos
jae
notl
push
mov
stc
repz
iret
cld
mov
xor
add
jl
xchg
mov
jg
sti
and
jge
test
inc
lret
mov
jns
or
ret
cmpsl
add
gs
pop
mov
arpl
add
icebp
test
pop
and
push
je
mov
pop
rcll
jmp
sub
cmpsl
pop
mov
pop
or
insl
dec
loopne
jge
jno
cmp
xor
std
cmp
jmp
mov
je
xchg
icebp
adc
adc
pop
inc
dec
pop
or
int3
sub
mov
test
sbb
icebp
or
fdivrl
je
popf
or
call
adc
jg
test
mov
jp
mov
jbe
loop
repnz
push
andl
sbb
sub
pop
mov
adc
in
imul
add
jg
mov
xchg
je
dec
add
repnz
leave
and
sbb
movsl
mov
pop
mov
cmp
iret
fldl
fisttpll
ret
xchg
mov
adc
es
in
inc
or
aam
pop
movl
data16
jno
test
mov
xor
inc
ret
sti
out
jae
adc
int
movsl
xor
sub
rclb
fiadds
out
add
sub
xchg
cli
addr16
out
inc
mov
ret
mov
mov
test
cmpsb
or
scas
repnz
cli
jbe
enter
and
xchg
dec
in
mov
and
aas
xchg
mov
call
mov
gs
mov
xor
adc
mov
cmp
dec
scas
and
aas
jno
mov
iret
xchg
sub
or
cld
add
dec
into
lahf
sub
loop
test
inc
mov
insb
xor
adc
cmpsl
insl
popa
rorb
es
and
fdivs
mov
or
add
dec
mov
xor
jns
mov
adc
je
sub
xor
nop
popa
scas
dec
cmp
fcmovnbe
insb
inc
ds
pop
mov
lock
rolb
adc
aam
adc
mov
or
inc
cs
pop
jecxz
mov
das
and
sub
cmp
test
xor
rorb
lahf
shr
fcompl
jp
enter
test
test
mov
sub
jnp
push
shlb
iret
popa
jnp
mov
cmp
sub
jge
cwtl
int
push
lds
sbb
dec
gs
shrl
loopnew
aam
inc
mov
sbb
sahf
dec
out
nop
stos
sub
or
dec
fwait
stos
test
xchg
loop
mov
and
out
lcall
xchg
std
add
jecxz
or
repz
fmul
and
jl
les
jp
dec
js
pop
adc
pop
shr
ret
imul
adc
enter
dec
popa
call
xchg
jae
aam
cmp
and
mov
add
imul
rorb
lret
clc
dec
jo
mov
scas
cs
adc
jbe
mov
xchg
data16
push
fsubl
aaa
inc
iret
ljmp
into
inc
pop
cmp
sbb
and
sbb
adc
mov
xchg
xor
in
stc
daa
or
das
aaa
mov
enter
out
dec
jmp
lods
dec
inc
dec
pop
xchg
jne
pop
aas
or
or
imul
mov
lds
stc
xchg
xor
jl
loop
cmpsb
jbe
popf
inc
movsb
mov
lcall
add
mov
cltd
clc
and
inc
dec
fidivs
fstp
movsl
js
std
nop
sbb
or
lds
mov
sarb
push
in
sub
fnstcw
out
mov
push
xor
js
sbb
cwtl
sbb
in
lds
dec
pop
and
movsl
xor
adc
cmovnp
jg
fcmovne
nop
sub
test
incb
lret
cltd
and
push
push
rorb
scas
dec
lock
in
stc
dec
data16
fcompl
pop
lds
pop
jg
cmp
mov
leave
inc
lods
jge
cwtl
add
lods
xchg
add
arpl
movsb
adc
mov
clc
repnz
or
ret
test
dec
fisubs
dec
add
dec
jnp
sbb
xor
push
jbe
cltd
push
out
xchg
movsb
out
inc
aad
pop
mov
pop
sub
mov
ljmp
mov
and
cmpsb
pop
fistpll
xchg
add
mov
jno
or
push
popa
inc
xlat
jle
lret
sbb
pop
adc
call
shl
loopne
fdivr
insl
cltd
lock
adcb
aas
add
jp
push
mov
fcomp
or
push
and
push
das
pushf
pushw
push
jns
fs
pusha
sahf
mov
cwtl
mov
ss
outsl
and
push
aam
push
adc
fdivl
andb
sub
sbb
jle
jg
mov
rorb
and
xor
cmpsl
aaa
mov
stos
cld
pop
adc
lret
mov
cmp
lcall
sub
jae
sbb
dec
in
push
inc
imul
add
push
cmp
adc
int3
aad
aam
call
mov
dec
inc
pusha
and
and
push
cmp
add
fcmovb
scas
lcall
push
add
icebp
xchg
mov
aam
sub
outsl
nop
or
mov
icebp
jo
in
in
adcl
scas
sbb
mov
je
ret
insl
jge
push
jbe
mov
mov
inc
repz
andb
mov
mov
pop
loop
insl
cmp
and
or
inc
mov
jb
insl
inc
dec
sarl
mov
inc
int3
in
and
out
pop
movsb
gs
test
mov
inc
xchg
push
or
sti
es
cmp
xor
xor
dec
xlat
pop
popa
mov
jecxz
fidivrs
das
dec
xchg
ja
add
dec
fs
mov
xchg
shl
pop
cld
push
into
jl
dec
addl
pushf
pusha
and
push
xchg
adc
cmp
sub
js
jmp
adc
out
cmpsl
data16
imul
or
adc
sub
fistl
jmp
sub
call
insb
pop
fcoms
inc
xorb
insl
into
push
xorl
dec
mov
mov
pop
scas
sarb
mov
mov
dec
jmp
orb
loope
lahf
push
jge
inc
jo
shll
sub
fucom
aaa
xorb
or
mov
pop
mov
hlt
mov
lds
cmp
xor
cmp
insl
sbb
dec
hlt
sbb
jecxz
jge
mov
cmp
mov
inc
push
stc
aam
lods
dec
jns
daa
lcall
test
jecxz
adc
jl
imul
rcrl
mov
sub
and
jecxz
pop
xor
dec
out
movsb
roll
mov
dec
adc
out
repnz
xchg
pop
mov
stos
repz
aam
jle
jns
pop
cmpsb
cmp
dec
lcall
xor
int
out
push
fwait
stos
in
inc
mov
dec
out
xor
sahf
xchg
das
int
push
leave
scas
and
loope
cmpsl
aad
pop
push
mov
xor
loopne
lahf
pop
xchg
stos
icebp
in
lds
mov
jb
scas
scas
jle
cmpsl
or
inc
sbb
inc
int3
arpl
mov
sbb
movsb
lea
aaa
jge
mov
leave
cltd
in
xor
mov
fists
rorl
ja
mov
mov
sbb
stc
cmp
lahf
fs
out
xchg
stos
outsb
lock
xor
jle
lods
pop
in
ret
inc
mov
je
cmp
xor
movsb
mov
jl
cmpsb
push
push
call
inc
lea
cld
loopne
push
int3
fcmovnb
jmp
ss
fcoms
xor
push
js
cmp
mov
mov
cwtl
ds
sarb
adc
xchg
movsl
shlb
loope
stos
sarb
sub
fsubrl
xchg
lcall
aam
and
mov
xor
fadds
inc
push
test
push
repz
mov
stc
ss
inc
movsl
sub
stc
add
mov
daa
push
push
mov
stos
adc
fimuls
fwait
jae
xor
mov
mov
repnz
dec
cld
xchg
mov
push
popa
xchg
cltd
xchg
pop
or
mov
leave
arpl
inc
cmpsl
xchg
dec
inc
jbe
push
add
cs
dec
mov
pop
xor
lods
xor
pop
pop
dec
push
push
lret
and
cmp
pop
cmpsl
xor
aad
lahf
jnp
push
lcall
pushf
sub
pop
loope
xlat
push
inc
or
adc
adc
hlt
rcl
dec
sbb
shrd
loope
inc
das
jne
sbb
pop
cmp
mov
jne
jb
push
mov
faddl
xchg
int3
movsb
std
fidivs
or
popl
fcoml
xor
or
lds
sbb
mov
mov
dec
mov
pop
lcall
xchg
ja
fidivl
sub
sbb
adc
add
hlt
insb
xor
int3
cld
add
lahf
out
push
nop
push
push
or
mov
mov
pop
pop
mov
sub
adc
and
inc
gs
xchg
and
and
mov
call
add
fs
icebp
sub
dec
jo
xchg
jmp
mov
sub
addr16
jb
sub
ret
mov
fldt
ja
je
or
jle
xchg
sbbb
or
adc
hlt
orl
sbb
sub
stc
repnz
mov
inc
and
fldenv
rcr
out
out
add
xchg
icebp
mul
lret
pop
or
adc
dec
mov
cli
sub
outsb
jnp
push
ds
popf
lods
fs
mov
aam
mov
std
sub
int3
popf
ds
shll
push
mov
sbb
rorb
rcl
or
popf
fcmovu
cmpsb
adc
push
ljmp
out
std
cli
sbbb
pop
in
das
xchg
repz
mov
cmp
xor
icebp
push
xchg
aaa
stos
hlt
clc
cmp
stos
xchg
mov
cwtl
cwtl
mov
gs
outsb
call
mov
loop
xchg
es
push
int3
sub
mov
rcrb
testl
aam
dec
sbb
xchg
jne
imul
or
and
in
cmc
out
pushf
into
xor
lods
arpl
in
cwtl
dec
push
jae
lahf
movsl
dec
push
xor
movsb
pop
pop
out
cwtl
adc
aaa
mov
sbb
or
pop
jne
int3
icebp
adc
pop
xchg
sbb
xchg
xlat
in
cmp
add
inc
inc
mov
stc
arpl
stos
sete
pop
mov
add
test
jmp
sub
jb
scas
es
mov
lock
xacquire
push
loop
incb
mov
sub
xchg
mov
mov
push
adc
cli
ret
shll
mov
loop
fisubl
pop
xor
dec
push
cmp
hlt
pop
addr16
xor
movb
lods
sub
inc
lods
pop
mov
jmp
and
repz
adc
lret
adc
lahf
test
xor
mov
std
cmp
mov
and
sbb
pop
cmpsl
lods
js
mov
sbb
out
es
aaa
dec
imul
outsl
jmp
jecxz
aad
aas
cmpsl
and
sbb
inc
inc
cmp
lds
push
jne
xor
shr
bound
sub
push
or
hlt
pop
in
repz
shrb
lds
sub
movsb
mov
pop
cmp
xchg
adc
mov
subl
pushf
add
je
cmp
cmp
iret
subl
fstl
xorb
dec
stos
cmpsb
incb
cmpsb
mov
insb
fildl
jbe
mov
insb
inc
mov
push
popf
pop
jmp
std
dec
out
call
push
lock
stc
pop
xchg
inc
addr16
xor
out
and
mov
scas
or
lock
pop
dec
xchg
pusha
pusha
xchg
inc
insl
lea
icebp
xchg
pop
aas
jmp
xor
push
arpl
xchg
cwtl
movsl
lcall
nop
push
shl
dec
dec
cli
andb
loope
mov
fstpl
lds
jnp
sbb
fidivrs
push
sbb
fs
cld
jbe
jge
jmp
inc
add
adc
cmp
sub
mov
mov
xor
dec
cmpsl
xlat
andb
pop
outsb
in
addr16
jg
dec
in
movq
sub
and
outsb
js
ret
in
xor
jno
loopne
movsb
shll
les
repz
push
enter
sub
xlat
push
jmp
and
inc
ficoms
dec
adc
push
cld
call
movsb
mulb
or
mov
sahf
cmp
push
loopne
push
and
mov
mov
cmpsb
push
push
and
adc
sbb
push
jecxz
or
bound
pop
std
push
push
fildl
mov
xorb
lock
ja
and
sbb
fwait
mov
jg
notb
mov
mov
jp
popf
ficompl
mov
icebp
outsb
stc
rorb
jge
mov
in
push
xchg
movsl
fwait
cli
dec
mov
dec
outsb
and
adc
xchg
mov
shll
xor
jl
xchg
and
dec
mov
adc
fisttps
push
mov
mov
ret
or
sub
or
inc
xchg
push
or
shr
addb
cmp
push
xchg
bound
adc
cwtl
bound
dec
adc
mov
xor
xchg
jno
mov
inc
xchg
imul
jo
or
imul
push
subl
ds
divl
cmp
sub
add
sbb
stos
popf
popa
arpl
jle
xor
into
subb
inc
enter
mov
cltd
cld
dec
negl
dec
in
jp
outsl
xchg
aas
repnz
pop
adc
xor
fs
cmpsl
pop
or
jae
or
jmp
sub
sbb
in
and
imul
inc
cmp
and
les
test
aas
mov
gs
or
lods
cmp
dec
nop
fisttps
mov
loop
adc
or
sbb
movsb
jle,pt
cld
jge
icebp
mov
dec
je
inc
andl
dec
daa
loopne
stos
pop
add
pushl
lods
nop
pusha
xchg
jnp
fisubl
loope
xchg
mov
push
imul
dec
repz
xchg
sbb
test
int3
data16
loop
scas
dec
sbbl
xchg
xchg
sahf
push
stos
pusha
or
xor
rcr
mov
cli
lods
jbe
adc
dec
outsl
cmpsl
jo
andb
lock
push
inc
enter
add
dec
lock
shl
hlt
shrb
stc
adc
out
ja
iret
ljmp
jmp
push
or
out
mov
ret
jp
adc
sbb
call
dec
push
mov
inc
push
xor
outsl
cmp
or
out
or
mov
xor
and
nop
dec
mov
inc
push
cmpb
movsb
int3
sbb
movsb
seto
negl
loopne
push
jp
cmp
dec
or
js
mov
push
jp
or
sub
bound
loopne
popa
aaa
adc
jae
xchg
cltd
xchg
jae
cmp
inc
and
insl
adc
daa
ret
cmpsl
pop
dec
dec
and
cmp
stos
sub
add
cmp
aam
fsubs
outsl
into
mov
rorl
orb
inc
or
pop
cmp
orl
in
into
out
sub
lret
mov
scas
pop
loopne
fwait
pop
inc
push
lret
ss
adc
jnp
or
fs
mov
xor
jle
or
lods
sub
dec
shrl
jl
jne
aad
dec
jne
pop
xchg
xchg
xor
and
sbb
xor
inc
lds
js
jnp
or
mov
inc
xor
jb
test
jmp
jle
inc
adc
inc
enter
lret
mov
jno
loope
or
sahf
xor
mov
cld
loop
test
add
aaa
int
mov
sub
pop
mov
mov
daa
and
or
lods
jecxz
enter
sub
mov
pop
mov
or
and
xor
jg
push
in
add
inc
fstpt
les
test
pop
mov
ret
stos
test
mov
lea
mov
ret
in
cli
je
xchg
mov
test
mov
gs
mov
ficoms
in
xor
stos
ficoms
test
sbb
xchg
mov
mov
dec
xlat
sub
fadd
popf
fldz
scas
push
pop
add
lea
ss
adc
pop
dec
clc
xor
xor
loopne
push
lock
dec
inc
sbb
data16
nop
pusha
push
add
sti
jno
in
loope
clc
sub
or
jb
mov
inc
std
jo
das
adc
mov
push
mov
mov
in
jmp
fisubs
push
hlt
cmpsl
and
shlb
mov
pop
lea
xchg
push
insb
xchg
sub
std
insl
in
cmp
aas
stos
or
jns
jmp
cmp
inc
mov
nop
jle
outsb
loope
mov
pop
lods
movsb
mov
or
add
cmp
mov
out
and
sbb
idivl
int3
pop
aaa
lods
pop
mov
movsb
fstpt
xlat
ret
or
sub
push
xchg
xor
dec
daa
ljmp
dec
xchg
inc
ljmp
push
scas
sub
in
add
mov
lock
mov
mov
ljmp
movsb
mov
lock
loop
mov
hlt
xor
cltd
or
lds
push
ror
enter
loopne
push
cld
jbe
pop
enter
fbstp
movsb
enter
xchg
mov
pusha
loope
add
ja
lods
adc
fwait
test
push
outsb
mov
mov
or
int
mov
lds
push
pushf
insb
nop
sbb
xorl
sbb
jnp
push
jns
add
scas
sub
and
mov
bound
push
cmp
jbe
push
mov
push
pop
outsb
jg
push
sub
xchg
dec
jp
cltd
enter
lcall
hlt
push
stos
cmp
mov
mov
xchg
push
in
out
and
pop
pop
aas
ret
push
inc
ret
pop
adc
leave
mov
icebp
daa
test
and
mov
pop
xor
rcl
leave
int3
sbb
pop
ret
test
xchg
add
inc
xchg
out
and
fsts
dec
xchg
shrb
mov
dec
fucomp
sarl
jno
sbb
add
inc
inc
data16
mov
and
mov
clc
mov
orl
shrl
inc
out
sbb
hlt
insb
movb
push
mov
cmp
jbe
adc
cmc
jo
lods
out
roll
mov
arpl
das
sub
cmp
pop
ja
int3
jmp
adc
pop
out
xchg
mov
sbb
fiaddl
push
ficompl
addl
das
mov
in
test
inc
sub
or
lret
xchg
push
loopne
addb
push
sbb
sti
mov
mov
cld
movb
sub
inc
inc
hlt
or
es
les
in
outsl
ljmp
imul
dec
xor
adc
jne
ljmp
pushf
fisubrs
ss
cmpsb
xchg
das
sub
xor
leave
xchg
jg
push
sub
adc
sub
and
push
sub
xchg
imul
push
push
loopne
mov
jmp
stos
add
cmpsl
cmp
inc
out
lcall
pushf
in
lcall
inc
movsl
mov
mov
mov
sbb
xor
jp
adc
insb
cmpsb
and
call
xchg
stos
jge
cmp
cli
xchg
sete
sub
cmp
mov
rclb
sub
add
addr16
scas
cmpsl
insl
iret
pop
in
nop
imul
int3
pop
xor
std
int
fwait
sahf
cmp
jge
push
rcrb
and
cs
daa
es
xchg
inc
inc
mov
cmp
push
push
fwait
icebp
lea
lods
dec
ret
push
sbb
inc
aas
shlb
mov
es
and
xor
test
jbe
std
xor
lds
or
or
cmova
xchg
cmp
mov
dec
dec
or
fwait
xor
fwait
xchg
outsb
mov
sub
hlt
nop
mov
and
rolb
shld
loop
inc
ret
inc
or
jmp
pop
cwtl
xchg
add
pop
jg
aam
sbb
insl
repnz
sbb
pop
aas
ror
lret
sbb
dec
push
inc
mov
ljmp
xchg
or
xlat
inc
add
cmp
sarb
or
jp
push
lds
and
xchg
test
jbe
call
imul
push
dec
enter
fists
mov
int
repnz
cmp
xchg
lock
xor
dec
sub
adc
pop
xchg
mov
stos
sub
mov
imul
stos
pusha
sub
fwait
dec
mov
loop
xor
lret
addr16
pusha
clc
mov
add
mov
scas
aaa
int3
dec
cld
dec
cmp
pop
sub
sub
rclb
hlt
movb
adc
roll
jae
rclb
movsb
ja
pop
gs
jge
sub
jecxz
push
mov
pop
mov
add
std
int3
adc
lret
cmpb
inc
xchg
sahf
cwtl
inc
lret
cmpsl
dec
cmp
inc
mov
add
xchg
push
into
in
jp
dec
cmp
mov
sub
xor
mov
pushl
sbb
or
jne
mov
loop
adc
adc
add
xchg
sub
sahf
loop
mov
cmpsb
fsubrs
bnd
adcb
adc
rolb
arpl
inc
je
or
mov
xlat
in
mov
pop
jge
shrl
or
lods
inc
add
mov
test
adc
adc
in
push
cmp
pop
inc
je
sti
andb
pop
push
lahf
cmp
push
mov
cltd
sbb
and
sbb
pop
xchg
shll
mov
mov
out
dec
sbb
icebp
sub
xchg
sub
loop
mov
andb
xor
loope
ja
adc
add
or
mov
inc
sbb
pop
rorb
popf
iret
mov
pop
test
fidivl
pop
iret
add
mov
pop
jo
es
xor
jb
fstpt
loope
rol
js
or
jle
out
scas
lods
ljmp
mov
orl
mov
dec
in
js
dec
out
push
push
and
dec
push
repz
sub
popa
out
inc
cltd
repnz
fwait
je
push
mov
negl
sub
in
cmc
nop
fisubs
test
insb
test
dec
add
gs
in
negb
loop
mov
mov
jne
mov
inc
outsl
fiaddl
daa
es
fistpll
mov
dec
jecxz
lods
arpl
cmp
mov
movsl
jbe
ljmp
xchg
xlat
jl
jae
add
sub
insb
dec
mov
fbld
or
lahf
pop
jbe
sub
fsubs
ret
stos
jns
daa
inc
add
mov
xor
sbb
jl
add
or
loope
dec
push
lods
movsb
mulb
scas
adc
push
adc
in
mov
std
stc
and
mov
popf
pop
add
aad
pop
jbe
fldenv
xor
loop
sub
lret
push
push
inc
pop
push
or
test
test
dec
out
xlat
fwait
mov
jmp
and
fwait
adc
lcall
jmp
pop
lret
jle
clc
out
sbbl
mov
fwait
xor
add
mov
cmp
push
lret
push
fimuls
sub
test
enter
pcmpeqd
mov
push
pop
mov
mov
popf
jecxz
mov
cmp
sub
dec
sahf
xor
cli
mov
jbe
xchg
aas
jg
mov
stc
loope
or
cs
fyl2x
out
rclb
jecxz
sub
dec
push
mov
pop
mov
dec
aad
shrl
mov
lea
add
mov
in
add
inc
push
pop
and
sub
aas
mov
cmpsb
add
cmpsl
mov
in
mov
in
mov
es
sti
into
and
fs
mov
xchg
lock
ret
mov
je
shr
int
lret
lods
ja
std
push
in
dec
jne
inc
ret
pop
andb
jne
std
into
jecxz
aam
and
jns
std
repnz
fdivs
pop
lock
mov
pop
mov
int
xchg
ficoms
arpl
sbb
sbb
pop
xor
add
dec
pop
fildll
mov
jne
or
enter
sbb
and
inc
xor
lds
mov
push
xor
mov
xchg
cmp
fnstenv
xchg
xchg
pusha
xchg
cmp
movsb
add
dec
sbb
rcr
clc
popf
xchg
adc
daa
shrb
shl
movsl
push
test
je
fwait
mov
push
aam
push
push
lods
dec
mov
inc
or
xchg
jno
xchg
out
aad
ror
sbb
and
dec
dec
mov
mov
lea
ljmp
add
or
je
mov
and
inc
add
adc
lret
cmp
push
xor
push
out
xchg
sub
jno
out
push
stos
fwait
xchg
lock
inc
les
dec
cmp
inc
pop
das
adc
lahf
fisttps
pop
jmp
cmp
adc
mov
loopne
pop
xor
rorl
mov
xchg
in
stos
mov
xor
adc
add
pushf
lds
pop
mov
pop
fstpl
loopne
xchg
gs
sbb
stos
and
loope
in
jg
mov
jle
loope
lds
xor
sbb
cli
stos
cld
mov
mov
push
ds
cmp
lea
adc
lock
mov
pusha
jno
mov
sbb
xlat
test
aaa
icebp
pop
pop
inc
insb
xor
jmp
jo
scas
xchg
push
out
fidivrs
mov
adc
pop
in
sub
or
aad
addr16
jo
fdivs
negb
imull
cmpsb
dec
incb
test
xchg
and
mov
jo
cwtl
daa
imul
and
jne
sub
fstpl
in
jae
mov
xchg
test
mov
jnp
sub
cmp
jge
adc
jecxz
sbb
pop
xor
xchg
in
fsubs
add
xorl
xor
lock
pop
add
pop
repz
icebp
cmp
push
imul
ljmp
add
cltd
iret
adc
cmp
dec
jb
rorl
test
movsb
mov
mov
adc
or
lahf
add
pop
test
outsb
and
iret
push
xchg
js
inc
andb
repz
jge
mov
and
negl
imul
clc
mov
mov
iret
xor
mulb
lcall
mov
pop
xchg
pop
pop
sub
cs
add
int
ss
cmpsb
mov
hlt
int
call
jo
sbb
mov
mov
mov
insb
sub
out
cmpsb
lods
mov
xor
mov
mov
stos
repnz
pop
pop
xchg
mov
jbe
js
jecxz
cmp
ret
mov
jge
into
insb
arpl
scas
ret
sbb
cld
mov
hlt
test
imul
xchg
mov
mov
jmp
inc
xor
orb
adc
jne,pn
inc
and
mov
decb
fisubrl
imul
inc
mov
mov
lock
push
int
jns
jno
push
jmp
push
movsl
cltd
cmp
push
ret
movsl
jge
imul
mov
mov
testb
sbb
xor
mov
add
pop
std
push
and
scas
pop
repz
cmp
jg
popa
test
sub
scas
pop
cmp
dec
loope
les
jp
push
adcl
adc
lret
iret
sbb
xor
ret
fisubrl
add
lods
xchg
ret
pop
dec
div
or
fdivl
lahf
fnstenv
in
cmp
lods
jnp
or
popf
sub
dec
jmp
add
scas
aam
in
ljmp
lret
lret
pusha
cmp
in
or
outsb
jb
stos
pop
incb
jle
dec
pop
test
insl
jecxz
scas
inc
dec
inc
xchg
iret
es
cmp
jno
pop
mov
mov
xchg
mov
iret
in
mov
pop
xchg
pop
xor
jle
push
jne
rcrb
into
lods
loop
stc
push
mov
jecxz
xor
jl
test
shll
mov
dec
or
addl
andl
andl
sbb
pop
xor
mov
sar
push
push
orl
mov
imul
int
mov
jmp
mov
jecxz
repnz
add
mov
sbb
pop
div
popf
add
ds
imulb
inc
or
push
jge
lds
es
bound
add
jnp
sub
rcr
addr16
or
pop
pop
sub
movsb
dec
data16
push
push
lods
test
push
aam
orl
or
jmp
jg
insl
lahf
jge
cs
push
into
inc
push
jg
fadd
sub
add
pop
ret
push
aam
ret
ljmp
adc
or
pop
sbb
add
pop
push
test
xchg
pop
loopne
mov
subl
scas
push
lahf
rolb
out
lea
cmpsb
jb
inc
dec
inc
rcll
cmp
push
popa
neg
xchg
or
push
add
ret
hlt
clc
push
jg
xchg
emms
ja
xchg
jg
or
cli
stos
in
pusha
movsl
aam
cmp
push
movsb
adc
lods
ret
add
sbb
movsl
ds
es
or
push
jb
xor
inc
mov
xor
mov
or
mov
push
ljmp
filds
lods
and
mov
outsl
mov
cmp
xor
sub
lahf
out
mov
xor
push
sub
imul
std
daa
les
xchg
cmpxchg
dec
mov
rorb
pop
jecxz
or
arpl
aad
cli
sti
jns
push
mov
dec
add
dec
dec
stos
cmpsl
negb
popf
and
add
fidivl
inc
sub
sbb
push
jae
and
sub
add
inc
sub
sub
les
xchg
pop
xlat
enter
lods
pop
js
push
jbe
adcl
mov
xor
xchg
push
fst
lock
sub
getsec
mov
inc
out
sub
mov
add
adc
in
xchg
cmp
push
lods
aas
ljmp
adc
xor
pushf
and
aad
mov
adc
into
scas
insl
std
sbb
sahf
sub
lcall
sar
add
cmpsl
in
mov
jne
out
stc
out
mov
sub
cmpl
mov
xchg
orl
add
mov
movsl
dec
mov
jmp
lahf
or
cmp
test
xchg
scas
push
das
jbe
add
lods
cmp
jns
mov
mov
dec
push
cvtdq2ps
das
mov
jnp
orl
fwait
js
sbb
jno
ljmp
cmp
mov
and
stc
cmpsb
arpl
cmp
hlt
rcrl
jp
jo
mov
ret
inc
popf
or
inc
lock
rcll
pusha
mov
repnz
mov
daa
sbb
adcl
aas
std
je
cmp
mulb
cld
ja
mov
push
call
jl
xor
pushf
lods
sbb
jne
stos
mov
shl
js
out
push
sub
out
fsubs
pop
mov
sbb
lea
pop
push
jmp
mov
or
mov
das
or
mov
mov
dec
sub
inc
sti
jl
sub
lea
test
or
pusha
mov
or
jg
subb
rcll
xchg
mov
lods
stc
mov
stc
jecxz
adc
shr
mov
mov
adc
bound
mov
mov
inc
jmp
inc
mov
or
test
push
sbbb
push
xchg
lcall
mov
popa
test
push
fsubs
fstpt
and
pop
add
fsubs
lret
xlat
dec
sti
and
lock
inc
scas
dec
dec
jge
jne
pop
mov
mov
jle
scas
and
inc
dec
popf
jg
xchg
lcall
sbb
orl
rcrb
in
mov
addb
addr16
aas
xchg
sub
push
ficoml
pop
dec
aaa
mov
jb
pop
test
push
pop
js
testb
push
pop
ret
nop
mov
xor
arpl
jg
pinsrw
adc
or
jle
loopne
test
xchg
stos
in
daa
adc
in
cs
fimuls
fimull
jae
loope
dec
in
mov
pop
xor
insb
sub
mov
adc
or
cmpsl
sbbl
xor
lock
hlt
int
dec
mov
bound
insb
lcall
fstps
fmull
mov
inc
push
popa
sub
pop
enter
bound
into
xchg
fwait
mov
js
in
push
add
outsl
insl
movsb
out
xor
je
lcall
fidivrs
jecxz
insb
repnz
add
inc
xchg
shlb
testl
cs
lds
xchg
cli
ficoml
jb
pop
mov
inc
out
loopne
pop
cmp
add
and
scas
mov
mov
mov
fidivrs
mov
popf
jns
icebp
pop
int3
mov
cmpsl
push
idivl
xchg
in
popf
sbb
enter
fldcw
cld
or
xchg
xchg
aad
cld
push
or
jge
sub
sbb
dec
arpl
xchg
mov
cmp
ljmp
out
sbb
cmp
dec
enter
lock
pop
in
lret
loopne
sbb
mov
jg
adc
cli
std
shl
andb
cmp
xor
pop
iret
bound
les
jnp
or
ud1
sbb
pop
enter
pop
and
add
xlat
or
movsl
ss
gs
mov
scas
mov
loopne
and
xchg
pop
sbb
loop
mov
mov
push
pop
fucom
mov
sub
jne
lcall
sarl
pop
pop
cmp
sahf
inc
push
cmp
xlat
stc
dec
xor
jl
and
std
mov
into
ret
js
adc
xchg
fwait
cmpsb
sub
mov
push
add
fwait
push
dec
out
cld
dec
test
mov
or
sub
insl
scas
mov
dec
mov
test
mov
xchg
add
xorl
mov
cmp
movb
icebp
int3
leave
repz
lea
cmp
aaa
data16
test
push
cmp
sbb
xchg
hlt
mov
lods
jne
and
cmp
icebp
push
push
and
inc
cmp
lods
repnz
pop
les
sbb
out
repz
xor
fcmove
std
mov
cmp
jle
sub
clc
pause
push
rclb
cmc
cmp
arpl
mov
clc
adc
add
out
sbb
aaa
repnz
pop
mov
dec
push
dec
mov
mov
xor
xorb
xchg
rol
std
int3
xor
mov
inc
mov
inc
cltd
xlat
and
mov
xor
das
ret
sbb
jo
dec
and
xchg
sub
popa
inc
in
mov
pop
and
idiv
movsl
add
add
jbe
dec
push
shlb
pop
sbb
hlt
xor
or
or
cmc
leave
mov
jbe
jbe
lods
adc
cmp
rcrl
xor
add
jae
lods
int3
jb
and
pop
cmp
les
inc
fiadds
add
incl
idivl
lahf
jnp
scas
in
jno
iret
into
rorl
mov
leave
lahf
jbe
iret
jns
sub
les
and
mov
mov
cltd
sarb
enter
xor
aad
mov
adc
dec
js
stos
int3
xchg
push
adc
or
and
pop
cmp
out
jmp
push
jmp
cmp
xor
push
pop
pop
imulb
fidivrl
pop
enter
sbb
lahf
arpl
add
call
aad
aam
sbb
and
outsb
jecxz
add
or
stos
jp
sub
xchg
shrb
push
dec
sbb
or
push
mov
push
and
pushf
in
lcall
push
cmovs
pop
std
lcall
test
cltd
or
adc
ljmp
rorb
fwait
mov
inc
xor
faddl
test
pushf
addr16
stos
mov
jge
pusha
imul
add
ds
inc
and
push
scas
das
sbb
clc
inc
cltd
cld
cmc
mov
sbb
and
mov
scas
push
stos
push
xchg
divb
cs
icebp
sub
cltd
stos
addr16
mov
inc
xchg
jns
ret
xor
jae
shrb
and
jnp
jb
push
shrl
int
test
mov
js
xor
das
xchg
repz
js
push
jmp
sub
inc
cmp
icebp
cmpsl
dec
xor
ds
idivb
mov
icebp
int3
in
leave
ret
cmp
test
push
inc
pop
or
push
adc
push
out
fs
mov
pusha
mov
pop
sub
mov
xorl
fcomip
test
add
mov
dec
dec
leave
cmp
popa
sub
dec
les
and
pop
jle
or
push
in
fwait
clc
rorb
xchg
icebp
fcomip
jns
in
jo
mov
sahf
cmp
cmp
sub
cs
mov
scas
shlb
adcb
xor
ficomps
and
je
push
sti
adc
or
mov
mov
loope
fsubl
insb
pop
mov
and
test
lcall
push
arpl
mov
adc
jnp
xor
push
in
mov
js
sbb
lods
cmpsl
mov
mov
stc
xor
test
or
jae
mov
outsb
lds
into
shl
cmp
adc
jecxz
pusha
or
jo
cmp
mov
loope
mov
adc
ljmp
push
test
mov
sbb
leave
mov
aam
push
xlat
aam
mov
or
mov
scas
dec
int3
outsb
rclb
jge
jge
mov
test
dec
mov
push
push
inc
pushf
add
inc
jns
pushf
cmpl
subl
cmc
pop
xlat
in
fistpl
or
and
push
pop
jo
xchg
sub
or
mov
dec
mov
ficoms
jae
mov
sti
mov
mov
outsl
dec
mov
adc
inc
push
mov
out
dec
pop
sbb
out
scas
stc
mov
xchg
repnz
sbb
scas
push
xchg
add
pop
dec
dec
iret
xchg
loopne
cmp
dec
in
mov
cmc
push
or
int3
lods
push
push
lods
xlat
scas
mov
cwtl
mov
sahf
aad
js
dec
nop
jo
jge
add
out
pushf
mov
gs
sub
movsb
xchg
mov
cmp
xchg
rcll
jecxz
and
push
stos
xlat
enter
sti
pop
outsl
dec
add
sub
scas
dec
sahf
push
mov
sub
lret
xorb
imul
fldenv
mov
in
add
adc
or
data16
or
sub
inc
adcl
sub
addl
jmp
sbb
ret
in
cmpsl
mov
or
and
enter
int
int3
cmp
addr16
sub
cwtl
mov
xor
mov
jp
lods
inc
gs
cs
add
cli
test
xchg
lret
ffreep
cmp
bound
cltd
xchg
cmp
inc
in
push
push
mov
loope
pop
pop
mov
and
adc
adc
call
pop
lds
mov
sbbl
adc
xchg
repnz
adc
xor
xor
sub
shr
mov
dec
jecxz
dec
mov
lods
dec
test
scas
repz
js
add
cmpb
sbb
push
xchg
stc
pop
cmp
push
xchg
jge
rcr
mov
stos
add
shrb
rcll
ret
addr16
jecxz
cmpsb
adc
daa
sub
subb
or
ljmp
cmp
test
mov
sbb
xchg
push
pop
inc
nop
mov
adc
mov
ret
shlb
mov
loope
int3
shl
xlat
inc
addr16
cmpsb
xchg
xchg
mov
add
insb
cmpsl
out
test
push
xchg
fsubrp
test
xor
ret
push
gs
shrl
mov
icebp
divb
pop
xor
jb
xchg
lret
data16
mov
pushf
loope
jns
stos
inc
pop
push
psubb
or
cmpxchg
shl
or
aas
mov
mov
inc
dec
mov
sbb
xor
mov
movsl
dec
dec
test
cs
dec
repnz
mov
fstl
lock
mov
or
mov
add
je
sbb
xchg
or
int3
inc
ret
mov
mov
loope
sahf
jp
and
push
movsl
popa
jno
xlat
or
jecxz
shll
inc
jae
adcl
inc
addr16
mov
inc
inc
mov
scas
adcb
push
add
pop
int
xor
sub
lods
out
push
mov
aam
aas
fisttps
loope
sbb
dec
jl
ss
int3
shlb
and
jl
mov
inc
je
iret
ret
repnz
cmp
lods
js
cmp
movl
mov
mov
sti
mov
lods
or
push
xor
xorl
xor
push
xor
cmpsl
lds
cmc
fucomip
dec
inc
xor
pop
push
outsl
xor
into
push
bnd
dec
cltd
cli
cltd
inc
inc
jge
inc
inc
ds
add
fcom
subb
xorb
aad
xorb
repz
cmc
arpl
xlat
test
cmpl
jp
pushf
jne
pop
cmp
mov
jne
pushf
sub
jmp
adc
jbe
stos
lcall
cmc
xchg
xor
fsubl
push
lods
mov
mov
pop
adc
imul
imul
shrb
xchg
lods
nop
xchg
and
movsl
mov
mov
cld
mov
test
mov
push
add
in
jb
test
or
pop
cmp
add
enter
mov
cs
arpl
xchg
sub
leave
lret
inc
repnz
loope
pusha
js
push
pop
pop
adc
push
mov
jnp
xchg
or
mov
pop
sbb
lods
or
es
in
cld
aas
repnz
or
negb
add
loop
add
pop
idivb
mov
fidivrs
int
bound
aam
add
or
pop
xor
fcomps
push
leave
out
xor
pusha
aaa
mov
cs
dec
incl
movsb
icebp
dec
jp
mulb
or
push
in
fsubrl
inc
in
adc
cmc
xchg
es
data16
inc
pop
out
jnp
mov
push
popf
js
pop
pop
out
sbb
lret
sarb
adcl
sbb
mov
xor
mov
lret
adcl
dec
mov
insl
cwtl
mov
push
jl
enter
and
xchg
jae
enter
cmp
dec
jno
lret
test
stos
mov
pop
mov
pop
jns
pop
jns
loope
rol
enter
mov
xor
addr16
pushf
pop
mov
sbb
inc
aam
mov
aaa
sub
fidivrs
dec
push
xchg
shrb
stos
stos
mov
test
adc
add
cmp
loope
pop
sbb
rcll
mov
mov
mov
sub
add
push
sarb
and
daa
lock
dec
es
fs
out
xor
call
shll
cmp
out
aas
mov
bound
or
xchg
jge
insl
add
xchg
cli
jne
loop
sub
mov
fwait
std
and
imul
mov
clc
sbbl
inc
mov
or
mov
xchg
inc
jns
and
mov
lahf
mov
jge
or
push
and
push
jl
push
cmpb
jbe
cvtps2pi
adc
push
jno
and
outsl
mov
push
in
insb
mov
std
xchg
cmp
xchg
mov
rolb
and
fildl
das
push
pop
lods
mov
test
popf
jle
cmp
xor
movsl
subb
mov
jp
push
inc
lcall
or
fmull
data16
jae
xchg
push
sbb
stos
sub
sbbl
dec
lcall
cmp
pop
test
ficoms
out
jg
and
or
pop
lods
adc
cmpsl
pushw
mov
lret
shr
sub
xor
aaa
adc
inc
enter
aaa
sbb
mov
negl
aam
inc
dec
stos
or
iret
ja
inc
mov
add
cs
and
cs
stos
or
pop
int3
enter
push
out
jae
pop
dec
mov
test
repz
mov
cmp
test
and
add
popa
mov
jno
mov
stc
mull
pop
pop
bound
push
mov
and
pop
testl
push
cmpsl
add
cwtl
pop
stos
test
movb
sahf
int3
test
pop
xchg
int
decb
out
jo
andb
repnz
push
cmp
pop
push
es
clc
mov
inc
cmpsb
push
cli
les
sub
fiadds
pop
test
imul
xor
push
cmp
mov
or
push
add
mov
push
add
sub
outsb
aam
pop
sub
sarb
mov
add
in
mov
xor
mov
sub
rorb
lret
lods
sbb
or
cs
inc
fistpl
dec
adc
add
out
pop
std
fidivrs
loopne
aam
inc
sbb
mov
or
mov
or
dec
ds
stc
fcmovnbe
stos
add
fs
xlat
mov
es
test
mov
or
cmp
cld
xor
dec
out
sub
dec
push
decl
cmpsl
inc
mov
test
fcmovu
fisubs
into
lahf
xlat
imull
scas
mov
cmpsb
bound
les
inc
es
lock
ror
xchg
and
fcoml
pop
in
cmp
pop
xchg
imul
filds
or
push
xchg
sbb
or
xchg
sbb
ljmp
add
pop
ljmp
pop
clc
jnp
pop
inc
inc
mov
sbb
jne
mov
and
sbb
mov
adc
dec
fcomps
push
cmc
inc
adc
ret
fsubrl
cmpsb
aaa
push
cmpsb
xchg
cwtl
push
push
push
sub
movsb
fidivrs
mov
cmpsb
xchg
jo
push
mov
es
out
jbe
es
fistps
xchg
call
stos
xor
lret
hlt
inc
mov
cltd
pop
xchg
shll
aas
adc
aaa
mov
inc
or
xchg
dec
or
jbe
add
mov
sti
cs
jno
mov
push
dec
pop
std
ljmp
adc
lcall
mov
and
or
push
out
cmp
fmuls
or
out
dec
mov
sbb
mov
stos
or
popf
jbe
cld
repz
xchg
push
or
or
test
and
sub
adc
out
mov
and
arpl
xor
jae
jne
fistpl
sbb
dec
div
in
jmp
in
mov
cmc
xor
int3
mov
aam
fidivl
xor
jecxz
cltd
inc
mov
sub
repz
cmpsl
inc
jp
sub
pusha
shrb
pop
and
add
rcrb
mov
fsubrs
mov
fmul
jg
stos
mov
stos
jmp
call
es
add
jp
aad
popa
jo
into
leave
pop
and
cmpl
pop
outsl
cli
lods
cld
ret
sbb
sub
mov
cmp
je
mov
inc
jbe
fdivr
pushf
cs
jmp
sahf
andb
mov
fsubs
iret
dec
cmp
je
and
insl
sbb
les
hlt
sub
add
sbb
mov
jb
test
add
test
push
xchg
push
push
mov
push
pop
pop
dec
ds
sbb
je
dec
push
and
stos
xor
xchg
mov
aaa
xchg
fmul
sbb
push
out
nop
outsb
jno
and
dec
cmp
fmuls
inc
mov
pop
bswap
daa
push
loope
lods
cmpsb
ret
lahf
loop
xchg
mov
into
jecxz
cmp
outsl
jno
imulb
neg
dec
sub
aam
in
clc
and
push
popa
leave
fcoms
fs
cmp
mov
sub
jl
push
pop
enter
sbb
xchg
shrl
xor
or
loope
cmc
sub
sahf
mov
adc
out
cmp
scas
add
or
mov
dec
inc
mov
jmp
sbb
xchg
pop
push
cmpb
cmp
stc
and
dec
outsl
ss
daa
mov
pop
mov
sub
jp
call
pushw
jp
inc
mov
sbbb
mov
cld
cmp
and
pop
shll
and
aaa
ret
mov
mov
xchg
cmp
es
push
push
ss
or
mov
arpl
mov
fucom
popa
bound
mov
push
push
fistl
gs
push
popf
fstl
aaa
pop
cmp
fcmovu
or
mov
xor
add
in
push
pop
js
inc
mov
push
inc
mov
outsl
fildl
aam
ss
nop
lock
les
leave
roll
inc
inc
stc
insb
xor
loope
push
out
dec
mov
sub
push
mov
das
cmpsl
es
sub
push
xchg
mov
and
dec
cmp
enter
jmp
inc
insl
idiv
adc
imul
leave
jb
xchg
jge
nop
lods
gs
xor
nop
dec
aaa
mov
in
add
xchg
inc
pop
mov
inc
subb
repnz
adc
add
sbb
mov
sbb
mov
bound
sub
xchg
fnsave
shrl
scas
mov
outsl
jb
rclb
push
outsl
adc
jnp
add
loope
adc
addl
mov
xchg
mov
inc
dec
jns
mov
and
sub
pop
sub
imul
jo
es
test
jp
ffreep
push
dec
pushf
movsl
or
movl
jnp
xchg
pusha
sahf
xor
popf
ud1
sbb
cmpsb
stos
jno
mov
dec
out
fxch
outsl
xchg
pop
mov
add
bound
in
outsl
rclb
pop
xor
shll
push
xchg
push
outsb
inc
ljmp
mov
and
loope
push
outsb
sub
xor
std
mov
cmp
pop
lds
mov
or
push
and
xchg
cld
mov
add
out
xor
aaa
inc
and
inc
ds
sub
push
je
nop
sbb
fdiv
lds
test
adc
insb
pop
push
sti
push
loopne
fs
dec
out
addb
into
lea
mov
dec
inc
lea
ss
pop
rorl
pop
jo
fsubl
push
cmpsl
add
dec
imul
in
cmc
pop
shl
pop
mov
loopne
cwtl
out
test
rcl
dec
sbb
mov
pop
not
mull
into
test
sahf
arpl
pop
jo
jnp
ljmp
fstpt
or
stos
jae
mov
push
shrl
call
ss
test
pop
aam
jmp
sbb
clc
fidivs
fcoms
js
mov
aam
fadd
xchg
dec
addr16
or
cmp
test
dec
jnp
jne
dec
loop
push
jp
or
rcr
ss
cltd
push
xchg
inc
pop
rcl
fisttpl
mov
pop
dec
jp
leave
cs
loope
push
daa
sbbb
jle
je
jbe
leave
lea
push
iret
xor
xchg
into
es
pushf
stos
loopne
xchg
xor
jns
pop
inc
lret
add
jae
bound
push
jp
jo
adc
ret
xchg
loope
daa
dec
test
aad
sbb
out
out
dec
sbb
mov
scas
push
mov
lcall
jbe
aas
dec
and
gs
mov
xchg
add
into
shll
add
xchg
dec
cmc
push
lods
mov
xor
popf
cmc
iret
cmp
test
xchg
pop
aam
jnp
sahf
in
cmp
in
cmc
and
mov
ret
push
fimull
xor
xor
repz
mov
inc
adc
pop
mov
fcomps
pushf
xor
int
pop
add
fisttps
in
movsb
cmpsb
push
jg
jae
bound
or
sahf
sbb
mov
jae
mov
mov
xor
and
setle
in
dec
shrl
adc
arpl
inc
adc
lret
iret
fisubrl
jecxz
mov
mov
fmul
into
inc
rcl
fadd
push
sub
cs
inc
fs
pop
in
shl
push
cmp
bound
pusha
or
jg
jns
cs
push
jae
test
sub
shr
cmp
popf
int
shrb
test
insb
ret
popl
out
into
and
pop
xor
jne
fnstsw
add
push
lret
imul
enter
icebp
sub
mov
fadds
jmp
xchg
push
add
cltd
ficomps
inc
xchg
push
shr
pop
cltd
repz
pop
mov
jno
pop
in
cmp
insl
push
stos
pop
pop
ljmp
add
xor
cwtl
frstor
sub
pop
pushf
sbb
into
test
jmp
imul
pop
xchg
xlat
out
lock
repz
jnp
cmp
or
cs
push
fs
inc
loopne
popa
and
xchg
mov
out
or
push
sbb
pop
in
sub
jae
insb
mov
fwait
lcall
loop
out
int3
nop
sbb
dec
xchg
repnz
push
test
cmp
ja
sub
popf
jnp
xor
mov
sbb
sbb
cmpsb
pop
adc
incb
xchg
ss
shrb
push
ljmp
movsl
push
rclb
push
mov
fnstsw
imul
orl
pusha
or
inc
test
pop
lea
push
stos
aaa
sbb
sub
sub
push
subb
add
xlat
movsb
iret
and
fistpll
rolb
leave
xor
cmp
and
sbb
push
cld
cwtl
sti
xchg
mov
pusha
mov
in
fldcw
data16
lcall
xchg
sti
inc
addr16
out
clc
push
xorb
push
pop
push
adc
mov
psubusw
cmp
int3
inc
dec
lcall
sub
shll
xchg
pop
jns
sbb
jge
and
mov
lret
mov
fimuls
xchg
mov
inc
pushf
push
mov
push
and
and
testb
add
decb
add
mov
cmpsl
lock
dec
popf
and
xchg
mov
loopne
adc
adc
cmpsl
cmp
cwtl
es
fsts
push
lcall
ss
sub
sub
aas
cmp
cli
and
lahf
adc
cli
inc
std
or
je
mov
call
cltd
dec
xchg
mov
lods
jo
cld
push
clc
mov
popa
push
popf
xor
stos
ljmp
lret
enter
shlb
mov
mov
lret
pushf
jae
sbb
cmp
lods
jmp
dec
push
in
xchg
lea
aam
push
test
lods
loopne
ja
ret
pop
adc
out
outsb
sbb
out
xchg
pop
jg
cmpsl
add
jo
adc
ret
cmp
mov
dec
push
sbb
ja
cmpsb
xchg
sub
push
int
idivb
jne
xor
imul
xchg
add
inc
fs
or
mov
mov
push
pop
jle
ficoms
xchg
insl
int3
inc
rcrl
xchg
add
scas
out
add
jl
mov
push
sub
cs
xchg
sbb
inc
sbb
repz
cmp
shrb
mov
fistl
dec
popa
into
lds
outsb
stc
dec
mov
enter
pop
push
shlb
call
ret
xor
sub
fsub
iret
xchg
mov
jl
lea
lahf
mov
and
leave
pop
ljmp
aas
xor
adc
dec
out
stos
sbb
rol
jp
mov
mov
cmc
ret
pop
pop
or
ss
in
xlat
add
sbb
lcall
call
icebp
mov
adc
cmpsl
js
mov
dec
mov
adc
js
aaa
jb
inc
push
in
imul
movsb
sub
pop
pop
outsl
pushf
push
gs
pop
movl
cmpsl
xor
andl
mov
xor
mov
xor
cmp
fdivl
dec
ss
jno
loopne
add
cmpsl
mov
cmc
mov
and
add
mov
inc
fsubs
ds
mov
cmp
adc
cltd
sbb
outsl
daa
inc
adc
fistps
push
repz
lods
movsl
pop
mov
out
mov
pop
pop
out
imul
xchg
imul
insl
sbb
mov
stc
push
jle
mov
fdivl
and
icebp
ds
leave
mov
and
das
call
in
mov
lods
add
mov
mov
into
rdseed
andb
aas
xchg
mov
shll
dec
or
lods
xor
sbb
ds
fbstp
sbb
orl
dec
mov
int3
mov
dec
jmp
sahf
dec
pusha
adc
xor
pop
lahf
sub
pop
orl
into
sub
es
imul
pop
and
movsl
aad
pop
lret
pusha
and
xchg
xchg
pop
jno
push
je
sub
add
fisubl
cltd
jle
adc
jbe
inc
fwait
in
lret
mov
pop
mulb
sti
sbb
sub
test
xchg
int
out
xchg
cltd
lret
fistps
dec
pop
pop
mov
xor
stos
pop
cld
sub
sbb
sbbb
out
aad
sti
ss
das
incb
leave
add
aad
aam
xchg
sub
nop
pop
push
pop
popa
out
dec
ss
int3
jle
ds
xchg
push
rorl
rorb
xor
and
mull
dec
mov
out
adc
sub
and
cmp
out
sarl
aaa
testb
std
into
add
outsl
add
fdivs
cs
xor
in
xchg
rcrl
xchg
mov
lock
pop
test
pop
int
sar
scas
push
dec
int3
ja
xchg
lock
ret
jg
dec
data16
jge
inc
movsl
mov
sub
jle
mov
fisubrs
enter
mov
out
adc
scas
frstor
cmp
movsb
pop
mov
pushf
jge
movl
leave
outsl
in
in
in
ret
fstpl
mull
ret
lds
mov
jp
aam
xchg
sbb
imul
mov
jp
loopne
jae
xor
int3
stos
push
sub
inc
cmp
maxps
push
push
jne
inc
call
int
sub
dec
movsb
push
jge
mov
iret
clc
mov
push
add
incb
push
jo
mov
mov
xor
mov
in
lods
orb
inc
pop
xor
fstps
cmp
into
adc
dec
push
sahf
in
inc
mov
mov
pop
test
cld
aaa
mov
mov
pop
xor
js
mov
adc
mov
adc
test
fistpl
xchg
and
and
call
mov
sbb
dec
dec
imul
vaddss
leave
nop
call
fcoms
push
cwtl
cwtl
test
dec
sti
pop
sahf
bound
es
or
fldcw
gs
xchg
jp
pop
xlat
sbb
or
lods
push
jge
jne
rcrl
mov
pusha
cld
xchg
xor
repz
popf
je
sbb
lret
into
sub
cmp
scas
pop
and
mov
add
xchg
addr16
in
xor
fcomps
sbb
xchg
rcll
sub
pop
pcmpgtb
out
js
mov
test
xor
cmc
add
insl
outsl
pop
and
cld
and
sbb
das
cld
cmp
fwait
aad
pop
rorb
cmp
test
out
jbe
fmuls
adc
lock
push
outsb
pusha
out
pushl
sbb
aas
and
cmp
das
leave
sub
jp
lods
sbb
xor
mov
cwtl
inc
aaa
sarl
or
and
dec
sub
aam
cmp
jae
fildl
push
test
adc
cs
andl
or
arpl
xor
int
flds
or
fwait
dec
rcl
mov
inc
shr
outsb
inc
lahf
xchg
dec
out
fxch
or
fwait
imul
aad
jge
pusha
mov
push
test
cmp
stc
outsb
fisubrs
test
mov
fsubp
jp
xor
nop
mov
mov
add
dec
int3
cmpsb
inc
xor
test
fists
popf
sbb
sub
data16
pop
cmpb
shl
vpshuflw
push
and
pop
jl
add
mov
add
mov
clc
jl
repnz
rcrl
cmc
jbe
mov
mov
scas
and
pop
add
nop
xlat
movsb
dec
xchg
push
adc
pushf
fidivl
daa
mov
push
jmp
sbb
or
int
fisubrl
adc
in
inc
mov
add
jecxz
inc
mov
dec
stc
cmc
int3
ljmp
jmp
cld
mov
sti
xchg
invd
repz
and
rolb
jnp
cmp
insl
mov
nop
stos
mov
into
testb
sbb
sub
ret
sub
sbb
aad
lret
cmp
pop
pop
enter
push
pop
aad
pop
aam
imul
adc
movsl
rcr
jg
cmp
es
shl
lret
lods
movsl
mov
testb
scas
mov
rcrl
and
fisubs
data16
cmp
insb
cs
je
sbb
test
ret
pop
pop
push
cld
lods
cld
out
clc
adc
pop
inc
fisubrl
cmp
mov
imul
cwtl
lret
xor
scas
aaa
mov
push
adc
ffreep
xchg
or
lahf
xor
icebp
mov
test
xor
stos
pushf
mov
mov
adc
rcrl
insb
xchg
and
adc
push
jp
enter
stos
ja
and
mov
push
push
mov
mov
loop
inc
push
repnz
flds
fiaddl
outsl
xor
pop
iret
adc
pop
aas
xor
inc
in
cmp
rorl
call
test
adc
ss
or
pop
cmpsb
cmp
pop
scas
arpl
into
dec
cltd
rolb
pusha
lcall
push
mov
xor
mov
pop
psllw
loopne
dec
imul
sbb
pop
in
insl
push
outsl
popa
aad
pop
cmp
scas
fs
pop
mov
orl
ret
mov
aad
xor
out
push
jbe
pusha
and
jecxz
sub
shrb
scas
dec
pop
fcomps
push
mov
pop
pop
hlt
loope
jl
repnz
neg
inc
pop
jmp
inc
mov
hlt
sti
add
sub
adc
sbb
xor
sub
cli
jae
int
jle
je
iret
adc
loope
loopne
add
mov
in
inc
stos
mov
es
xchg
and
call
or
inc
ja
clc
push
push
int
push
rol
or
ret
xchg
inc
ljmp
aam
shrl
stos
ja
sti
pusha
sti
fstpt
cld
pop
pcmpgtw
inc
and
js
pop
cmp
inc
sbb
sub
mov
or
mov
gs
pusha
lea
cs
lret
xor
iret
cmp
lret
aam
shll
sti
pop
sbb
popa
jbe
daa
mov
mov
jge
sbb
test
mov
hlt
repz
repnz
adc
fsubl
rcl
ljmp
sti
test
loop
xchg
sarl
add
andl
cmp
into
aas
xchg
xor
or
lahf
jmp
cmp
adc
lods
add
arpl
push
cmp
in
mov
or
push
scas
pop
or
jno
inc
arpl
int3
pop
dec
jecxz
add
inc
sub
cmpsb
jb
test
xor
sbb
or
stc
push
sbb
shlb
icebp
rcr
pop
jge
jb
inc
push
movsb
jge
out
cmp
push
adc
or
pop
add
in
xlat
lods
cmp
call
pushf
mov
xor
and
and
test
cmp
pop
fsubr
stos
pop
inc
inc
in
insl
sahf
xor
frstor
sub
lahf
je
inc
and
push
loopne
popl
dec
or
mov
push
out
rorl
out
notl
dec
in
or
rclb
jne
mov
ljmp
inc
cmp
arpl
lods
lret
sti
and
jns
add
js
fildl
or
push
jle
sub
fldt
arpl
dec
dec
mov
fsts
jne
add
mov
int3
jecxz
std
sub
xchg
push
ja
jg
dec
fs
pop
jno
fcompl
push
inc
mov
push
xor
test
and
xchg
js
lret
nop
mov
push
cmc
and
js
push
jno
cmp
and
jns
cmp
mov
out
fwait
je
aam
clc
sub
pop
or
lock
shll
pushf
popf
out
inc
dec
mov
into
rorb
ret
loopne
mov
leave
js
and
xchg
adc
and
lods
fs
or
push
cmp
pop
or
sahf
sbb
addr16
iret
jmp
push
leave
in
mov
push
outsl
add
mov
pop
sbbl
xchg
jbe
in
decb
sbb
idivb
rolb
xor
xchg
sahf
das
insl
les
push
mov
cmp
dec
loope
imul
inc
pop
mov
dec
sahf
add
mov
add
xor
out
cmp
mov
pop
nop
dec
add
push
xor
and
mov
dec
adcl
aaa
jnp
mov
lods
sbbl
out
dec
es
jae
cmc
sub
push
mov
adc
jo
subl
mov
int
cmp
cmp
inc
push
dec
mov
or
out
js
test
xchg
stos
lcall
fidivl
push
test
cmp
or
push
pop
dec
inc
iret
adc
xor
nop
mov
jb
adc
inc
scas
dec
mov
pop
dec
addl
xor
fstl
lds
inc
mov
jns
gs
push
or
mov
pop
aas
gs
sbbb
jb
and
cmp
scas
push
cmp
cmp
mov
fcmovnu
call
push
jno
inc
in
xchg
mov
jbe
call
pop
sub
mov
fists
jns
adc
jg
push
insl
fs
push
cmc
in
fcompl
dec
pushf
fstps
repz
inc
arpl
pusha
mov
movsb
sti
push
sbb
xchg
stos
xor
into
in
jge
lods
inc
mov
xor
pop
mov
push
repnz
mov
fnstcw
dec
aas
test
call
dec
fld
aaa
mov
xchg
inc
int3
xor
sub
shrb
fadd
test
or
sub
mov
cmp
or
ss
mov
mov
push
negb
test
mov
fldl
je
fildll
xor
sti
aad
fndisi(8087
ja
mov
mov
sbb
jo
push
aaa
and
inc
in
dec
add
and
inc
cmp
fcmove
es
subb
fstpl
popf
stos
sahf
popf
mov
cltd
scas
in
mov
push
scas
mov
xchg
dec
fs
lock
jle
xorl
repz
je
scas
daa
insb
testb
mov
xchg
ret
icebp
jecxz
es
idivb
cmp
adc
cmpsb
sbbl
pop
andb
mov
pop
pop
push
out
push
lock
push
into
xchg
or
and
outsl
enter
add
mulb
or
or
fldenv
loope
je
xor
loope
in
inc
adc
out
orb
mov
imul
cmp
int
or
xor
rcll
push
loopne
pop
push
cmpsb
fdivl
mov
cmp
dec
rcrl
mov
cli
inc
pop
out
cmpsl
mov
adc
in
push
add
das
in
ja
clc
lds
iret
pop
negl
mov
repz
repnz
int3
lldt
jecxz
mov
jg
jo,pt
inc
leave
jg
in
jg
and
and
daa
outsb
stos
test
sub
inc
push
dec
mov
xor
data16
inc
scas
into
xchg
add
out
inc
dec
popf
jne
dec
loopne
mov
ss
repnz
jge
push
roll
sbb
sub
mov
mov
mov
mov
outsb
fistpl
or
push
dec
adc
cmp
xchg
lods
ds
or
hlt
mov
jae
rcrb
cmp
movsb
xorb
pop
leave
push
jg
js
mov
in
enter
outsl
lods
add
jne
enter
fcomi
stc
jp
divl
call
xor
lcall
insb
stos
cmp
push
mov
rolb
aad
stos
cmp
push
xchg
xchg
popf
aas
repz
mov
ds
cmp
add
les
data16
inc
or
cmpsl
test
add
xchg
or
cmp
adc
push
into
pop
lock
xadd
clc
cltd
or
xchg
or
push
push
mov
add
xchg
sbb
and
arpl
add
sbb
or
xor
xchg
call
mov
pop
nop
std
cmpsl
sub
clc
outsb
xor
int3
out
adc
pop
pop
jle
jp
aaa
push
arpl
loopne
jnp
imul
mov
adc
hlt
testl
mov
push
mov
mov
xor
test
push
jo
push
sub
inc
fidivrs
dec
or
aaa
lcall
inc
pop
data16
pop
cmp
and
dec
adc
pop
in
movsb
dec
roll
inc
sub
bswap
mov
inc
xchg
mov
sub
inc
ljmp
adc
filds
push
flds
push
addr16
inc
push
adc
add
xchg
sbb
fnsave
sbb
arpl
shl
mov
and
sarl
stos
stc
stc
in
xor
mov
das
inc
mov
xor
pop
mov
rcl
jb
add
sub
mov
stos
cmp
push
push
scas
fisttpll
popf
add
mov
andb
cltd
mov
pop
inc
pusha
jbe
jnp
ret
add
xchg
mov
dec
and
dec
mov
fs
xchg
scas
sub
in
cmp
push
orb
and
push
xor
push
ds
or
pop
lea
shrl
repz
push
jns
push
das
test
or
adc
mov
xchg
js
xchg
lock
les
loope
stc
cli
cmpsb
inc
cmpsl
adc
xchg
das
jmp
je
push
push
jbe
jl
or
rcrb
pop
mov
out
inc
jecxz
add
adc
scas
outsl
sarl
das
in
mov
sub
call
stos
mov
int
inc
or
enter
adc
push
out
addb
pop
mov
repnz
mov
mov
nop
mov
fiaddl
jne
jbe
jmp
lea
push
loope
pop
add
push
movsl
fisubrs
das
imul
sub
out
add
insb
mov
mov
sub
or
leave
push
not
in
mov
adc
call
xlat
adc
mov
dec
call
cmp
dec
jp
roll
mov
dec
or
push
shll
aad
sub
lahf
shll
sub
xor
popa
popf
ljmp
in
cli
pop
test
mov
gs
push
mov
cmp
icebp
cmpsl
cmpsl
out
jp
jbe
and
push
loop
scas
adc
pop
push
je
jnp
addr16
pop
and
test
scas
or
push
sub
mov
sbb
sbb
and
adc
mov
push
jne
pop
or
mov
icebp
iret
lret
es
cmpsb
jnp,pt
jae
dec
inc
and
clc
test
or
xchg
xor
inc
sbb
adc
jbe
and
ret
das
rcl
sub
sti
les
test
sbb
pop
sti
daa
lahf
jge
xchg
inc
aad
test
cmp
insl
mov
jns
jnp
call
sub
inc
push
rcrb
xor
or
xchg
push
in
out
enter
push
movsl
sbb
cmpsl
rcll
pop
lahf
sbb
mov
js
inc
push
mov
xor
int3
sbb
mov
xor
cmpsl
int
xor
stos
fimull
jp
ja
pop
mov
movsl
lahf
filds
mov
push
adc
cs
xchg
je
push
sub
lock
or
imul
lcall
or
pop
mov
adc
jle
push
arpl
jae
dec
sub
dec
cs
jl
mov
shrl
jne
stos
scas
js
sahf
imul
stc
aaa
loopne
pop
fs
sbb
sahf
sbb
xor
pop
dec
stos
mov
pop
scas
sbb
rorl
mov
movsb
cs
out
xor
fwait
ljmp
cmp
sbb
jne
or
pop
sub
jmp
scas
jle
mov
push
dec
mov
fwait
lea
pop
cmpsl
xor
mov
mov
popa
movsl
xchg
aam
aaa
or
mov
fisubrs
loop
adcb
jne
cmp
popf
or
in
repnz
sub
aaa
sub
push
and
pop
adc
orb
mov
iret
dec
adc
xchg
movsl
rcrb
dec
mov
frstor
test
pop
arpl
xchg
mov
mov
and
pop
out
inc
stos
pop
pop
mov
iret
orb
adc
push
push
jmp
lcall
cmp
adc
mov
push
push
int3
xor
fwait
movsb
sbb
rolb
sub
jp
sbb
push
sbb
jmp
adc
pop
loopw
jg
push
mov
mov
addr16
mov
dec
or
lcall
cli
xorb
sbb
movsl
mov
mov
pop
call
in
add
js
sbb
nop
mov
xor
test
ss
psubb
js
das
fiadds
pop
cmp
es
sub
fsts
dec
fnstsw
mov
pop
cmc
loop
mov
jnp
mov
jb
push
cmc
xlat
xchg
test
xchg
das
mov
enter
xchg
sbb
popf
jns
jnp
lret
cmp
add
cmp
adc
lret
cwtl
push
and
jne
adc
dec
push
push
inc
scas
rcl
xchg
xlat
lods
xor
push
out
sbbb
scas
xchg
lea
pop
aas
dec
das
daa
push
inc
nop
and
out
cmp
add
add
aaa
cltd
pop
loopne
or
or
xor
fmul
xchg
shrl
push
or
stc
mov
jnp
cmp
bound
in
loopne
mov
jne
inc
inc
jle
sub
mov
pop
es
out
or
and
into
popf
inc
notb
mov
int
adc
jmp
filds
or
nop
nop
cmp
dec
or
dec
xor
sbb
iret
and
jno
leave
xchg
sub
cmpl
loop
les
pop
xchg
pop
pop
data16
mov
sbb
xchg
or
or
cmpsl
ljmp
mov
mov
in
out
imul
subb
in
mov
mov
dec
mov
xchg
sbb
lock
inc
inc
mov
outsb
loop
adc
fwait
sbb
ja
mov
sub
push
add
adc
adc
aam
jne
mov
xchg
push
enter
aas
jbe
retw
mov
aas
test
jae
and
and
cli
stc
add
fs
inc
inc
enter
push
pop
adc
dec
nop
pusha
cmpsl
inc
movsb
je
jge
xchg
lahf
adcb
outsl
loopne
push
push
mov
subb
mov
cwtl
push
sub
loope
pop
in
pop
mov
and
pop
pop
sbb
push
cmp
dec
into
jns
xchg
pop
cltd
iret
cwtl
scas
sti
fcmovnbe
mov
dec
add
xchg
mov
sarb
push
or
pop
jmp
das
mov
adc
and
cmp
cmp
lcall
mov
jne
inc
lea
test
in
cmp
adcl
out
jg
test
push
push
sub
cmp
shll
and
pop
and
movsb
orb
push
inc
push
add
inc
push
addb
jne
add
mov
pop
mov
movsb
arpl
xchg
or
in
mov
lcall
jb
mov
or
in
mov
mov
sub
pop
shl
xchg
sbb
pop
cmpsb
xchg
es
in
inc
jae
lock
dec
jmp
les
sbb
pop
addb
ljmp
fsubl
mov
adc
outsb
or
stc
sbb
loop
pop
loopne
enter
xchg
push
stc
push
rorb
inc
punpcklbw
cmp
scas
mov
jl
insl
sbb
aas
hlt
inc
popf
and
inc
xor
test
outsb
shrl
mov
mov
jns
pop
cmp
int3
stos
loop
inc
jnp
leave
inc
xchg
mov
cmpl
movsb
xchg
dec
lods
in
mov
inc
dec
ret
fidivs
sti
cmpsb
inc
jmp
inc
hlt
ja
cmp
bound
add
push
sbb
fucomip
dec
xor
xor
pop
push
addr16
mov
push
inc
aaa
push
xchg
sub
int3
aad
jo
faddl
push
xchg
dec
stos
jae
xchg
loope
cmp
adc
and
add
push
jne
push
push
xchg
jno
andb
pop
aad
stos
inc
push
int
or
xchg
xor
leave
rep
mov
adc
sub
push
lahf
cld
imul
mov
adc
lcall
mov
jnp
and
ficompl
or
scas
testb
imul
call
cld
inc
xor
sbb
push
jmp
les
sbb
sub
cld
lods
jne
movsl
jl
xor
stc
inc
jl
adc
hlt
sub
lods
jmp
push
movhps
xlat
in
push
lds
loopne
dec
pop
hlt
push
push
out
fsubl
pop
outsl
stc
cmp
lret
sbb
dec
pop
pusha
aad
mov
test
jecxz
sub
rcl
push
inc
loopne
stc
fst
dec
into
push
mov
mov
mov
pop
pop
jmp
out
or
pop
mov
dec
mov
sub
rorb
fadds
xchg
push
cmpsl
repnz
jne
imul
inc
insb
cmp
pop
dec
test
in
dec
push
mov
mov
adc
jecxz
cmc
jo,pt
mov
out
mov
push
mov
pop
push
mov
adc
mul
jge
mov
inc
out
dec
cld
xchg
mov
lods
dec
test
mov
sbb
roll
or
sub
xor
aam
out
jle
bound
sub
outsl
push
adc
mov
xchg
out
and
lcall
add
adc
add
nop
mov
push
js
or
and
stos
lea
dec
sub
arpl
sahf
das
xor
or
stos
xchg
and
adc
fisubs
xor
pop
arpl
dec
out
sub
js
ss
dec
mov
pop
pop
push
dec
mov
mov
movsb
dec
cwtl
int
push
cli
pusha
inc
mov
xchg
sub
clc
ss
cs
test
mov
mov
int3
xchg
imul
mov
outsb
pop
scas
ds
mov
add
mov
in
xchg
dec
cmp
xchg
push
dec
inc
stc
test
das
loop
inc
adcl
imul
shr
loopne
push
lods
pop
iret
mov
pop
fs
and
popa
out
pop
jg
lods
push
inc
cmp
mov
aas
jbe
mov
int
sti
inc
or
adc
push
adc
ret
jl
xchg
loopne
and
add
mov
push
sbb
jp
test
jno
out
cmp
inc
cmp
into
stc
pop
and
fmul
xchg
add
xchg
stos
popa
sahf
lahf
loopne
cli
int
pop
adc
stc
popa
sbb
inc
jne
xchg
lret
std
imul
cld
mov
inc
push
mov
aam
jmp
dec
xor
dec
xor
inc
enter
clc
std
lea
add
cmpsl
jbe
push
jo
aam
insb
sarl
xor
or
pop
or
add
js
idivb
xchg
cli
add
movsb
iret
sbb
pop
dec
mov
lods
scas
test
in
push
push
pushf
xchg
pop
scas
movsl
stos
sub
ljmp
mov
push
jo
ret
lahf
mov
addr16
xchg
sbb
pop
dec
xor
shll
and
mov
xor
or
rcrb
cs
std
fwait
ret
mov
imul
mov
pushf
shrb
lahf
adc
cli
in
xchg
adcl
aad
pop
xchg
dec
push
ljmp
sbb
loop
pusha
add
push
sbb
mov
dec
scas
mov
stc
dec
and
pmuludq
pop
pushf
dec
psrld
rcl
sub
adc
cmp
xchg
aas
outsb
jge
pop
decb
xchg
scas
jns
cmp
out
push
je
imul
mov
sbb
mov
sbb
mov
cltd
imul
adc
dec
xor
ss
mov
shrb
push
stos
sahf
punpckldq
sub
adcl
sub
ret
add
sarl
push
sbb
outsb
adc
dec
inc
mov
je
jle
mov
jecxz
out
mov
push
mov
cmp
or
dec
fisttpll
int
jo
ljmp
jecxz
pop
jns
or
adc
ds
push
push
or
out
mov
xor
xor
stos
pop
cmpsb
insl
fsubl
mov
mov
testb
jne
and
mov
test
sarl
sbb
mov
mov
xor
popf
ds
mov
es
and
cmp
sub
stc
jecxz
add
dec
mov
mov
cmpsl
jno
loop
out
scas
ljmp
enter
pop
ds
movsb
xor
not
push
jne
sub
daa
icebp
cmp
gs
xchg
push
xchg
imul
sbb
clc
xor
fcmovb
adc
or
fidivrl
ds
sti
dec
fwait
and
sbb
sub
andb
mov
ret
and
sub
out
es
inc
push
or
popf
pop
in
repnz
repnz
gs
add
test
mov
push
in
jmp
push
sbb
jbe
dec
jns
popf
mov
sub
and
lods
push
dec
in
jne
lock
roll
or
cmp
out
out
mov
cltd
fs
inc
call
subb
dec
fistpl
and
push
hlt
pop
mov
stos
fdiv
pop
add
enter
sti
sbb
or
lcall
pushf
add
int
je
lock
and
mov
or
mov
daa
add
cmp
out
add
ljmp
sarl
out
and
add
dec
fs
cmp
pop
xor
clc
enter
mov
and
jns
push
mov
xor
push
out
fsub
idivb
in
pop
lahf
and
sti
push
push
fs
sub
sub
test
data16
mov
dec
imul
stos
or
js
xchg
sub
xorl
pop
lret
mov
jmp
dec
in
fcoml
hlt
movsb
mov
mov
sub
push
add
or
add
mov
push
add
mov
lds
push
fists
and
mov
add
xor
loop
sahf
dec
push
cli
cmp
js
push
pop
xchg
and
pop
loopne
mov
jle
cwtl
popl
lock
dec
sub
lods
lret
arpl
repnz
or
and
mov
jg
add
shlb
decb
xlat
outsl
cld
inc
subb
inc
stos
daa
mov
outsb
pop
dec
dec
jmp
xchg
pop
dec
and
lods
push
jecxz
mov
push
clc
push
push
lea
popa
fldl
pushf
je
jae
std
fcoml
and
ds
addl
dec
arpl
icebp
sti
pop
sub
addr16
push
cmpsl
les
xchg
cmp
arpl
sub
mov
les
jecxz
gs
aam
jecxz
cmp
cmp
je
negl
popf
dec
negb
outsl
popf
psrlq
and
and
xchg
cmp
stos
sbb
cmp
fs
mov
loope
xchg
loope
ja
dec
sub
enter
pop
pop
xor
xchg
sub
push
lock
nop
leave
movsl
testb
stos
push
js
jl
push
jno
pop
or
mov
dec
ds
mov
idivl
cltd
into
mov
jns
mov
xorl
and
test
adc
test
mov
cmp
repnz
popa
lret
bound
and
gs
cld
xor
cmpsl
and
loop
mov
mov
mov
mov
mov
sub
cmp
inc
sbb
stos
es
pop
inc
mov
jge
loopne
jno
shl
call
shl
xor
cmp
mov
shrb
and
std
shll
repnz
jne
dec
xor
add
fdivrl
inc
jmp
cwtl
pop
inc
nop
packsswb
adc
sub
xchg
test
std
xchg
dec
popa
testl
mov
lahf
pop
leave
sub
jp
dec
inc
sub
mov
or
shll
xchg
mov
cmpsl
mov
mov
xor
xchg
icebp
ds
sub
out
out
or
mov
dec
shll
fucom
jo
mov
shll
outsl
test
es
adc
out
imul
xor
mov
adc
sub
pop
push
sahf
roll
out
inc
mov
lods
pop
dec
pop
imul
xchg
push
rclb
pop
cmpsb
mov
pusha
and
pushf
enter
imul
add
push
add
mov
repnz
inc
out
add
lods
movb
mov
aad
imul
add
in
filds
js
mov
mov
stc
cld
mov
cmp
stos
aad
xor
and
and
cltd
jne
xchg
jns
jg
mov
out
cs
aaa
daa
push
in
xchg
repnz
popl
jne
adc
mov
dec
or
cmc
push
mov
push
jnp
push
loop
xchg
push
add
shlb
xchg
cmp
aad
std
and
push
jle
inc
inc
pusha
mov
push
scas
js
lcall
jno
sbb
jno
xchg
or
inc
ret
and
std
cpuid
inc
xchg
and
iret
cmpb
je
pop
dec
enter
shrb
stc
pop
inc
push
fsts
lods
test
mov
rclb
push
std
jmp
adc
mov
adc
xor
dec
or
enter
sub
inc
add
lds
or
push
pop
add
filds
cli
jp
xchg
xchg
pop
cwtl
xor
test
mov
stos
ja
fsts
imul
push
xor
jl
push
and
out
adc
dec
fisubs
lds
pop
add
mov
cwtl
lret
xor
test
loopw
xor
push
push
adc
xor
imul
push
cmpsb
pop
aam
ds
or
nop
mov
push
leave
out
lcall
jne
cltd
into
daa
cmpsl
xchg
mov
fistl
or
sub
mov
and
add
in
popl
outsl
xchg
mov
cld
mov
dec
xchg
cmpsb
add
push
adc
cmpsb
addb
fnstcw
dec
sbb
les
cmp
add
js
push
out
push
jg
call
je
pop
lea
add
mov
les
sbb
xchg
xchg
pop
fmuls
xor
shll
add
add
repnz
jae
clc
stos
inc
mov
pop
xchg
scas
mov
or
xchg
cmp
lcall
cmp
inc
xor
fsub
jne
ss
mov
div
aas
repz
or
aad
in
or
xchg
arpl
push
lcall
sub
call
aam
jp
shll
cmp
cmp
repnz
into
clc
jbe
mov
xor
mov
mov
aam
std
pop
push
icebp
push
and
sarl
jno
aam
push
mov
mov
inc
cmp
adc
xor
mov
push
and
popa
fdiv
out
xor
imul
fidivrs
repz
into
adc
loope
cmpsb
div
dec
std
push
mov
mov
fnsave
push
sahf
jmp
out
and
push
jae
imul
test
repnz
movsb
sub
pusha
mov
cmp
test
stc
sti
pop
loope
enter
push
push
int
gs
xchg
ljmp
lahf
jge
xor
out
test
mov
fisubrs
ret
mov
mov
cmpl
jecxz
or
xchg
xchg
scas
xchg
xor
add
imul
mov
pop
or
add
mov
repz
int3
loopne
lahf
push
pop
xchg
cld
cltd
call
movsb
in
or
push
push
sbb
lea
out
adcl
xchg
jno
mov
inc
into
insl
jge
sti
lcall
push
mov
and
push
jae
cmp
and
inc
push
shlb
je
rcl
lods
dec
aad
sub
mov
mov
aad
inc
je
je
cmpsl
stos
bound
fildll
mov
call
je
fsubl
hlt
jnp
inc
sbb
fs
repz
cmp
pop
xchg
cmp
subb
in
xchg
mov
loop
push
inc
xor
and
mov
loope
lret
mov
rorb
aam
adc
pop
push
jecxz
lahf
pop
std
mov
les
mov
repz
pop
xor
push
call
xchg
add
add
jl
sbb
scas
ss
mov
xchg
pop
or
in
or
leave
dec
fs
jl
inc
or
lret
fidivs
shll
ljmp
and
jge
aam
mov
xchg
xor
cmp
push
lret
stos
cmp
push
push
cmpsb
cltd
fildll
movsb
pop
roll
out
outsl
ret
sub
adc
sub
rol
adc
xchg
ds
ret
adc
in
add
ds
push
sub
jge
rcl
mov
or
xor
adc
adc
rcrb
lods
cmpb
ret
inc
push
xor
push
jns
fistps
inc
cmpsl
or
inc
mov
and
pusha
adc
into
inc
cmpb
pop
nop
mov
push
lock
push
pop
dec
arpl
in
or
mov
imul
rorb
sub
andl
inc
arpl
cmp
adc
xor
jge,pt
movsb
pop
xor
add
xor
andb
push
mov
das
xor
mov
or
stc
pop
or
xor
dec
and
lcall
fnsetpm(287
push
jne
adc
jl
lea
inc
stos
jge
or
pushw
mov
cmp
sub
mov
xchg
or
aam
out
lret
jnp
aam
dec
mov
lahf
in
jmp
cli
mov
inc
out
popf
in
dec
ret
mov
fmuls
push
orb
xor
add
pop
jbe
and
aas
dec
imul
xor
dec
pushf
sub
jbe
jnp
fmulp
cmp
inc
dec
outsl
ja
mov
or
lcall
pop
adc
sti
mov
xor
adc
add
and
pusha
insb
pop
cmc
rcll
test
dec
in
lret
mov
or
divl
mov
mov
addr16
push
mov
loop
inc
movsb
jno
sbb
mov
cmc
imul
mov
cmp
pop
jecxz
push
adc
lret
clc
sbb
popa
push
push
and
push
and
movsb
mov
jnp
dec
ret
mov
rol
inc
xchg
mov
xchg
sbb
inc
daa
fs
mov
push
cs
pop
lret
mov
movlhps
out
mov
aam
pop
push
adc
xor
sub
test
mov
xor
jmp
inc
or
roll
js
pop
imul
orl
xchg
pop
rclb
sbb
lock
mov
incl
in
or
stc
mov
mov
cmc
xchg
outsl
out
adcl
shl
xor
add
aaa
movsl
sub
mov
xor
shlb
xchg
dec
rorw
inc
add
sbb
in
mov
test
mov
imul
or
dec
and
jle
pop
ja
mov
dec
mov
jno
sbb
fstl
sub
mov
test
or
test
jmp
sbb
xchg
pusha
pop
repnz
push
and
addr16
fcoml
lds
add
call
fs
sbb
adc
fbld
in
dec
xor
pusha
subb
shlb
push
sahf
sbb
stos
pop
je
xor
xchg
mov
push
jl
insb
and
lock
test
mov
add
sub
ljmp
aaa
xchg
mov
jle
rcl
mov
inc
add
dec
inc
push
pop
test
cs
outsb
pop
in
inc
inc
jecxz
outsb
fdivr
aaa
repnz
xor
notb
and
mov
icebp
add
pop
bound
xchg
add
mov
push
fcmovb
dec
xchg
sbb
cmp
fists
out
xor
mov
dec
adc
sub
mov
cmc
ljmp
adc
xchg
xor
push
mov
in
sub
push
mov
in
pop
jl
int
mov
dec
lret
jb
and
mov
add
jg
push
dec
fnstsw
fdivrs
aad
add
sahf
data16
sbb
lods
and
inc
or
test
test
push
adc
sub
or
pop
inc
fwait
sar
jns
and
adc
sbb
hlt
cmp
xchg
mov
xchg
xchg
lods
mov
mov
xchg
sbb
mov
push
mov
sub
outsl
and
frstor
push
mov
cmpsl
push
movsb
add
cmpsl
sbb
arpl
mov
mov
or
xchg
cmp
jecxz
adc
adc
packssdw
add
das
stos
pop
imulb
lods
push
push
enter
ret
out
aad
repz
jnp
jo
mov
add
pop
mov
scas
lcall
adc
jge
mov
pop
xchg
inc
pushf
push
push
sbb
sarl
mov
iret
mul
das
push
add
pop
dec
dec
addr16
inc
sahf
pop
and
push
nop
enter
adc
rolb
stos
pop
sub
mov
add
aaa
jl
and
xor
mul
movd
cmovbe
xor
subl
jnp
sbb
sbb
out
pop
push
mov
or
mov
jns
sub
iret
push
adc
lods
pop
push
out
dec
mov
fdivr
enter
adc
pusha
repnz
in
sub
jne
mov
adc
out
inc
sahf
into
add
insl
xchg
sbb
adc
lcall
leave
iret
add
lea
cmp
test
shll
ja
addl
fidivrl
dec
adc
jecxz
and
xor
imulb
push
shlb
adc
call
push
mov
mov
data16
popa
popa
lds
shl
icebp
sbb
cs
aaa
lahf
jno
xor
sub
pop
dec
pop
sbb
jle
lcall
or
test
add
notb
test
cmpl
add
iret
sbb
pop
mov
std
dec
sbb
in
in
xchg
in
add
int
aad
pop
inc
fcmovbe
lea
lret
or
or
mov
cmp
scas
mov
mov
loope
test
pop
les
cmc
xchg
stc
cmp
sbb
stos
jae
mov
fwait
repnz
outsl
rorl
mov
cmp
enter
mov
pop
arpl
cwtl
lret
mov
idivl
sbb
aas
in
or
aam
aaa
xor
xchg
std
sbb
roll
in
bnd
rcr
scas
lcall
test
sbb
lcall
ret
fidivl
daa
sub
test
xor
xorb
adc
out
cli
rorl
sarl
xorl
or
add
fs
lahf
out
adc
mov
and
adc
enter
sub
mov
rclb
mov
in
sbb
sahf
jno
loopne
jbe
repnz
fsubs
adc
rclb
pop
xlat
imul
cli
cmp
add
push
loopne
xchg
cmp
aas
jae
out
jno
cmp
and
dec
pushf
lds
xor
ret
push
push
iret
xchg
xor
dec
andl
sti
insl
xor
xchg
and
jne
std
js
test
imul
cmp
data16
dec
push
test
xor
inc
in
pop
addr16
js
jne
add
dec
lcall
inc
sbb
cmpsb
clc
push
int
stos
push
adc
jp
loop
dec
push
pusha
inc
cltd
jle
cltd
jl
or
xchg
adc
sub
pop
daa
aas
pop
insb
inc
dec
loope
call
or
cmpsl
jle
in
and
xchg
fs
out
dec
mov
and
mov
push
push
cwtl
inc
jo
mov
into
ret
jg
imul
cmp
jo
add
inc
jns
inc
jmp
adc
jle
or
orb
cltd
mov
jle
jmp
sub
sub
cmp
daa
xor
repz
sbb
sbb
cmpsl
imulb
stos
imul
in
lret
jnp
je
aaa
cwtl
jb
data16
shlb
dec
cld
leave
xor
andb
movsb
popl
loope
loope
mov
xchg
pop
and
pop
sbbb
mov
xchg
dec
lock
jl
dec
popa
and
fisubs
dec
rol
push
jge
aam
inc
test
push
push
xchg
pop
jb
cmp
sub
pop
xchg
insl
or
dec
lret
popf
sbb
mov
push
sbb
aas
sub
mov
decb
sub
add
sbb
xchg
cmp
scas
and
out
cmpsb
mov
cmpsl
nop
mov
stc
or
ljmp
fstl
sbb
push
cltd
sbb
rolb
cmp
js
cmp
rcll
jecxz
icebp
cs
outsl
ss
fstps
rcr
cld
mov
mov
je
jb
and
bound
movsl
sbb
xor
push
push
das
fstpt
fnstenv
xor
arpl
lds
testb
leave
push
xchg
jno
pop
iret
ds
mov
frstpm(287
loopne
aaa
aad
dec
stos
jp
test
stos
lods
cmp
push
arpl
out
inc
jae
cs
pop
push
push
xchg
jno
dec
or
lcall
jb
inc
dec
xchg
pop
jp
mov
lret
enter
push
jbe
dec
xchg
mov
pop
mov
scas
pop
aam
xor
lcall
and
mov
sbb
adc
mov
jne
adc
push
xor
pop
and
out
push
aam
cmpb
rcll
sbb
sub
cmc
iret
sarl
aas
notb
les
mov
adc
pop
mov
test
mov
sbb
loopne
jg
push
stos
inc
dec
mov
add
dec
jmp
test
jg
aas
jbe
xchg
fstps
and
aam
mov
jb
fisubl
push
aas
pop
jmp
aas
sti
push
lahf
inc
add
push
movsb
dec
cltd
cmp
push
sbbl
adc
inc
scas
adc
xor
daa
add
fisubrs
pop
test
fnsave
bound
ffreep
movsl
sub
arpl
popf
cs
push
ds
je
sub
jge
jns
outsl
icebp
fwait
jno
jno
enter
lret
je
les
outsl
adc
lcall
pop
test
int3
push
and
fsubl
adc
and
inc
jbe
xchg
fcoms
push
lods
out
mov
repnz
cmp
or
loop
mov
cmp
shlb
sahf
mov
in
gs
pop
mov
lahf
inc
jle
sbb
jbe
xchg
mov
cmp
fs
ljmp
leave
cmp
cmp
cmp
shlb
inc
rclb
mov
bound
popf
lds
mov
pop
daa
daa
scas
mov
test
pop
test
rclb
sub
sbb
hlt
fisubl
xchg
popa
shl
mov
pop
cmpl
inc
sbb
add
xor
std
fistpll
in
inc
sti
js
jno
push
cmp
dec
mov
mov
les
mov
test
fdivrs
add
mov
movsl
ret
mov
xchg
dec
jo
mov
lea
das
cli
push
lods
into
lds
push
xchg
add
or
pop
and
mov
imul
mov
and
dec
or
ror
or
add
iret
mov
aam
jno
xchg
mov
push
popa
adc
enter
fstps
jl
dec
and
mov
test
sbb
jo
repz
ds
push
lret
aas
popf
inc
mov
outsb
lret
mov
das
sbb
xchg
mov
std
cmp
jb
test
mov
hlt
nop
pop
sbb
add
std
pop
pop
out
xlat
jmp
or
xor
aaa
mov
push
push
push
cmp
leave
or
jmp
ffreep
xchg
fs
int3
jb
jl
rcr
dec
inc
sbb
sbb
test
cmp
mov
fs
pop
loopne
inc
push
sahf
add
repnz
sub
xor
mov
pop
or
jecxz
add
repnz
enter
xlat
fstps
sbb
dec
jg
add
scas
cmp
mov
loope
cmp
inc
push
push
mov
das
cmp
sub
mov
fadds
cmp
add
push
jo
cwtl
and
mov
dec
outsl
mov
mov
out
sbb
cmp
ja
scas
out
add
pop
rcr
rcrl
dec
pop
lds
lock
or
in
fistpl
ror
cmp
repz
xor
out
ret
sbb
inc
insb
lret
sub
jns
iret
call
cwtl
js
cmp
xchg
pop
test
add
cmp
sub
cmp
push
cmpsl
and
mov
push
or
das
int
mov
and
sbb
or
inc
cmp
mulb
hlt
xchg
xor
stc
push
loop
adc
cmp
clc
push
xchg
jp
sub
in
xor
inc
mov
xchg
shl
push
fcomi
push
sbb
xor
pushf
pop
mov
shrl
test
dec
xlat
fmuls
push
sub
mov
call
jecxz
xor
mov
jge
ljmp
mov
jno
nop
sub
inc
cwtl
jae
sub
xchg
xchg
shl
test
movsb
pop
inc
cmpsl
notb
packssdw
dec
dec
jp
addl
pop
sub
mulb
fnstenv
fisttpl
popa
pop
mov
cmp
mov
je
icebp
pop
addb
mov
dec
xchg
lcall
or
rclb
push
cltd
mov
scas
jo
gs
jae
adc
inc
inc
push
mov
aam
pop
or
mov
repz
push
test
out
fwait
ljmp
leave
mov
cmc
jno
loope
pop
mov
sahf
push
cmp
dec
or
xor
insl
push
stc
push
mov
xchg
push
lds
pop
mov
and
je
push
pop
mov
xchg
test
outsb
in
jo
fidivl
jge
mov
mov
sbbl
jmp
inc
arpl
lods
push
xor
jne
xor
sub
mov
incb
xchg
adc
push
jae
pop
and
xor
lods
mov
mov
in
pop
leave
sar
push
adc
je
pop
fdivp
mov
in
andl
sahf
sti
mov
dec
sub
div
jbe
fs
lds
mov
mov
insb
lsl
jb
xchg
add
fisubl
shr
imul
push
mov
loop
stc
add
outsb
fbstp
jp
mov
je
adc
cltd
std
pop
stos
hlt
cmpsb
out
das
int3
stos
das
rcl
clc
pop
or
jne
out
outsb
rorb
out
mov
mov
aaa
dec
jle
sub
cmc
push
jl
jecxz
outsb
adc
sbb
shrl
sahf
in
ds
insb
sbb
mov
test
mov
jecxz
fs
mov
cs
pusha
stos
cmp
dec
sub
ret
scas
aaa
nop
jl
out
into
jecxz
dec
mov
test
mov
adc
dec
arpl
lock
idiv
mov
iret
fsts
mov
insl
or
ds
cmp
das
push
xchg
sti
lods
insb
in
sti
scas
or
push
lret
in
or
cmpsl
adc
xor
addr16
dec
xchg
mov
das
push
adc
arpl
popf
pop
pusha
cmp
cmp
pop
shlb
sub
dec
mov
push
je
sub
jge
mov
out
daa
push
xor
cwtl
pusha
xor
scas
mov
js
fcom
cmp
cmp
adc
mov
cmpsl
jb
sub
adc
sub
data16
fistpll
pop
stos
loop
pop
nop
fsts
jmp
sahf
cltd
test
mov
mov
sub
aad
pop
xchg
invd
lahf
pushf
push
les
pop
push
push
push
adcl
cmpsl
mov
insl
mov
arpl
icebp
jb
jo
inc
xor
fisubl
aaa
out
dec
outsl
mov
icebp
cs
addr16
repz
xchg
pop
xchg
mov
lcall
lahf
imul
gs
outsb
loop
shl
dec
aaa
add
push
test
std
lods
mov
and
mov
dec
mov
add
ret
jo
pop
aam
imul
negb
insl
sub
fcompl
mov
stc
mov
cmpsl
push
arpl
outsl
dec
adc
or
add
sub
negb
shll
dec
js
test
imul
mov
idivb
or
dec
and
jbe
push
ret
mov
jl
and
xchg
adc
stos
inc
inc
loop
lahf
fdivl
rol
pop
ror
mov
iret
sub
mov
imul
inc
out
and
jg
jo
xchg
andb
int3
sub
cmp
orl
push
mov
mov
aad
int
lret
dec
nop
arpl
fisttpll
pop
jns
xchg
xchg
push
add
pop
outsb
cmp
mov
imul
mov
mov
push
cmp
popa
xchg
lret
fcoml
lret
jp
movsl
jmp
cmp
mov
sarb
je
xchg
cmpsl
in
and
in
ffreep
lods
cld
sub
ret
mov
and
pop
sarb
outsl
mov
loop
dec
pop
push
or
clc
push
mov
sub
jae
lds
shll
scas
xchg
and
xor
dec
push
adc
or
loopne
cmp
mov
mov
les
outsb
jmp
lret
xchg
ret
and
ljmp
int
or
pop
jae
rcll
adc
leave
ja
mov
mov
jns
rcll
sbb
jg
jge
imul
add
cld
and
or
or
dec
dec
push
and
cmpsl
jb
sbb
jae
loopne
inc
mov
daa
push
mov
jle
subb
fiadds
cmpsb
push
lret
mov
push
sub
aad
faddl
sub
int
aas
out
aam
mov
jae
xor
movsl
and
or
imul
and
addr16
mov
jle
xchg
and
mov
xchg
cmp
xchg
sub
out
inc
popf
sbb
loop,pt
cmp
cmove
jno
fiadds
std
sub
pop
jmp
addr16
pop
ficomps
cld
push
repnz
add
pop
hlt
add
rcrl
shll
pop
pop
popf
not
cmp
cmp
fcompl
inc
dec
js
pop
mov
lcall
sahf
stos
popf
adc
push
jmp
mov
jge
add
cmp
insl
fs
fistps
jge
int
fwait
or
push
sti
push
rcl
stc
outsb
dec
pop
aad
mov
and
pop
test
jne
cmpsl
xchg
orl
in
xor
arpl
fists
mov
cmc
jle
addr16
addl
sbb
xchg
jns
add
xchg
dec
sbb
js
out
lahf
mov
aas
shll
idivl
je
jo
inc
fistpl
xchg
push
push
mov
jb
in
ret
ret
mov
movsl
cs
add
inc
cmp
jnp
enter
xor
sahf
jo
dec
imul
jno
inc
xchg
in
js
addb
mov
push
int3
test
fwait
jmp
or
addr16
out
xlat
inc
rdtsc
dec
jl
push
sbb
das
in
divps
xor
loope
xchg
mov
xor
sbb
and
sub
roll
pop
not
movsb
and
roll
dec
or
sbb
cs
or
sbb
sbb
mov
dec
lret
lret
inc
jl
pop
sub
std
in
fwait
sub
rcrl
arpl
in
sbb
jecxz
fsubr
mov
cli
inc
jg
fs
mull
jns
mov
imul
mov
mov
popf
pop
pop
sbb
push
nop
nop
das
xchg
cmp
sub
jbe
or
mov
test
test
pop
lods
cmp
fdivrp
pop
push
lods
ljmp
sbb
adc
pushf
testl
test
in
xor
sarb
cmp
pop
ss
xchg
in
repz
enter
cmp
mov
xchg
negb
fstpt
popf
sub
xor
js
adc
adc
jno
cltd
icebp
pop
pop
jns
dec
push
jb
pushf
js
sub
cli
jnp
cmp
es
jge
shlb
mov
repnz
pop
popa
push
pusha
mov
movsb
mov
adc
and
add
aas
jecxz
add
push
sub
repz
shll
push
ficomps
mov
data16
push
mov
inc
push
pop
jb
out
or
and
insl
cmp
pop
or
out
pop
imul
xchg
cwtl
mov
mov
push
in
stos
push
mov
and
je
out
cmp
hlt
je
stos
pop
jae
mov
data16
push
lcall
sub
cmp
pop
nop
jnp
pop
push
jns
push
out
fadd
adc
xor
jg
add
cmp
dec
movsl
or
dec
movsl
inc
movsl
xchg
outsb
mov
add
jns
push
lock
fs
sub
adc
jge
gs
test
shll
pop
dec
push
sbbl
int
mov
outsl
in
push
dec
shl
ficomps
lea
insb
shr
inc
fs
lods
ljmp
dec
dec
mov
inc
in
fimuls
int3
inc
lret
ret
out
xchg
pushl
sahf
insl
loop
xor
jne
jmp
lret
nop
in
enter
sahf
loope
lahf
xor
pop
dec
jb
insb
incb
leave
sbb
xor
ret
outsb
sarb
test
sbb
add
sbb
ffreep
cld
cltd
stos
adc
insb
lret
cmp
sub
xor
rcrb
jge
xor
xchg
and
pop
stc
popf
je
mov
fnstenv
mov
fisubs
cmpsb
cld
xor
sub
faddl
or
push
stos
xchg
hlt
jne
dec
test
mov
fs
push
mov
dec
mov
mov
push
adc
fwait
insb
cmc
inc
adc
push
daa
cs
cmp
mov
subb
push
faddl
popa
mov
jae
inc
stc
sub
and
sub
adc
push
sub
ret
roll
sub
push
push
in
int
pop
hlt
rclb
push
fcoms
popf
in
icebp
pop
mov
lock
sbb
xchg
fwait
pop
dec
scas
sbb
movsl
add
xor
adc
dec
sub
sbb
lret
cmp
rcrb
jbe
mov
mov
in
imul
test
and
pop
out
sub
fucom
popf
loope
cmp
int
inc
xchg
aas
jo
lahf
sub
mov
pushf
xchg
test
addl
mov
ss
fisubrl
or
xchg
jne
jne
imul
scas
xchg
push
add
sub
xorl
pop
inc
aas
rcrl
add
adc
les
shll
into
loop
sar
adc
cmp
jae
mov
loopne
mov
mov
pusha
adc
mov
mov
in
into
subb
sub
cmp
xchg
adc
xlat
sub
sub
popa
jl
in
xor
ljmp
push
pop
es
popf
arpl
cmp
test
adc
mov
or
sub
loopne
jle
jbe
test
inc
pusha
cmp
dec
mov
adc
xchg
pop
pop
jp
inc
sub
jb
and
sbb
inc
push
outsb
sarb
adc
fsubrl
cwtl
js
mov
repnz
mov
mov
subl
xorb
repz
pusha
bound
push
call
scas
mov
adc
test
inc
mov
mov
xchg
sbb
aas
insb
jle
test
stc
mov
or
or
inc
sbb
sbb
xor
cmp
loop
test
outsl
lods
into
sahf
push
std
mov
movsl
insb
mov
mov
iret
out
add
fldenv
and
jae
bound
push
xlat
xor
out
mov
inc
mov
mov
orb
stos
in
or
jle
mov
cmc
jbe
pop
leave
jne
ja
jg
pop
dec
pop
jecxz
xchg
pop
aaa
inc
bound
cli
addr16
mov
xor
sahf
jb
pop
pop
jl
adc
orb
push
test
lock
popa
adc
dec
sti
cmp
cmp
xor
pop
cltd
sbb
push
sub
aad
mov
push
dec
adc
cmp
dec
or
pop
fmuls
add
jns
jg
adc
hlt
outsb
hlt
jp
xchg
test
pop
push
popa
loop
nop
imul
fildll
xchg
cmpsb
jmp
pop
mov
lds
sub
xor
cmp
push
ljmp
shl
push
jae
lcall
mov
or
mov
xchg
mov
mov
xlat
cli
xor
out
sub
pop
xchg
out
mov
pop
int3
inc
repnz
fstpt
xchg
insl
fmul
push
push
enter
cmpsl
xor
xchg
pusha
leave
and
sub
hlt
push
sbb
rcll
mov
lods
aad
outsl
pusha
int
cmp
push
and
mov
xor
int
pop
xchg
in
faddl
jne
adc
cmc
inc
or
mov
imul
xchg
sub
jae
push
jg
push
imul
js
cs
aaa
loopne
dec
mov
lahf
adc
andb
cmp
gs
sahf
sbb
jl
aam
idivb
cmp
dec
ret
mov
rolb
add
sbb
lds
cmc
ja
jo
xchg
subl
inc
push
mov
jbe
bound
jno
out
jmp
pop
jmp
in
push
iret
sub
lock
jle
mov
fldcw
and
pusha
mov
pop
jge
mov
xchg
sub
sub
xchg
dec
xchg
mov
fstl
jge
clc
repnz
dec
xchg
std
push
add
out
cs
xor
outsl
push
pop
lret
dec
mov
jns
lret
mov
repz
rolb
leave
or
sub
fmull
iret
fsub
pop
cmp
outsl
int3
xor
cmpsb
fadds
repnz
jns
mov
mov
add
shl
movsb
mov
in
push
test
dec
xor
sbb
push
add
dec
inc
rolb
jno
daa
xchg
scas
pop
outsl
daa
add
push
repnz
loopne
cmc
in
inc
jge
mov
scas
and
push
sbb
pop
sarl
loopne
xor
ds
stos
jle
loop
mov
lods
inc
int
cmp
leave
fldenv
cmpsb
add
js
test
or
sti
mov
xor
int
inc
mov
cmc
pop
jbe
jmp
mov
adc
ds
inc
inc
das
mov
lods
movsl
cmpsl
aam
movsl
and
xchg
mov
sbb
pusha
and
xor
and
jmp
inc
test
pop
push
les
pushf
pushf
jbe
je
adc
cmp
xchg
push
pushf
mov
sub
psrad
leave
pop
cmp
sarb
mov
shlb
cs
fldl
mov
mov
mov
movnti
pushf
ror
insl
cmp
addr16
xor
decl
out
xor
sub
push
adc
sbb
and
adc
add
mov
adc
call
cmpsl
mov
in
adc
dec
std
mov
mov
mov
lret
mov
jmp
out
jl
sub
insb
add
pop
hlt
rcrb
cld
pop
xchg
mov
dec
in
fists
jl
lods
mov
loop
mov
in
sbb
lret
jp
sub
in
push
insl
lods
daa
movsl
stos
push
lcall
mov
xchg
push
fistl
mov
adc
decb
imul
iret
and
add
adc
jp
cmpsl
sub
lahf
movsl
push
ljmp
loope
das
in
das
xor
inc
add
mov
xchg
pop
pop
cmp
ret
inc
call
lock
mov
sarb
pop
fsubs
or
inc
or
inc
scas
sub
adc
insb
std
dec
push
sbb
lods
testl
mov
inc
inc
push
movsl
cmp
pop
cld
xchg
fildll
and
hlt
cmpl
scas
mov
in
ss
addr16
lods
mov
mov
adc
mov
inc
mov
dec
sahf
test
or
ficompl
push
flds
imul
xlat
lret
dec
loop
popa
inc
ret
cmp
or
and
jmp
lret
test
test
rolb
sbb
js
sbb
lods
loopne
sahf
stc
jge
mov
mov
add
or
xchg
push
xor
test
pop
out
sub
add
mov
rcll
cmp
test
sub
pop
and
or
xor
and
mov
lock
addr16
xor
divl
push
mov
push
sub
repnz
rclb
inc
dec
push
jecxz
fisubrs
cmpsl
mov
push
xor
pop
fldcw
lock
inc
xor
add
addl
or
test
or
pop
xor
fdivrs
inc
dec
stc
rorb
gs
cmp
in
cmp
loop
xchg
loopne
cmp
cltd
iret
mov
inc
inc
mov
es
daa
adc
pop
aad
notl
sub
sub
or
cmp
ret
dec
insb
cmp
cmp
gs
clc
inc
in
sub
bound
and
stos
lods
out
inc
leave
push
test
jmp
out
dec
popa
test
je
and
adc
je
lea
pop
adc
dec
cmpsb
frstor
cld
add
pop
jle
inc
lcall
sbb
fdivrs
xchg
cmp
xchg
jne
pop
js
push
pop
adc
or
jp
ficomps
or
inc
push
sbb
outsl
sbb
adc
sub
aad
or
pop
sbb
pop
lea
aam
ret
lahf
dec
icebp
jno
jl
lcall
lahf
mov
push
into
pop
mov
dec
lret
inc
ljmp
lods
mov
add
mov
mov
pop
mov
sub
imul
ret
aam
icebp
mov
mov
rcr
fs
sbb
pop
sub
iret
sub
mov
shlb
out
ret
gs
push
outsl
mov
jl
mov
es
rcrl
or
inc
repz
js
mov
ret
pop
pop
lret
mov
loope
les
stos
out
nop
jns
addr16
out
cld
stos
popa
push
aam
dec
subb
sub
jmp
ss
inc
sahf
daa
xchg
divl
in
daa
xchg
mov
xchg
nopl
xor
repz
inc
nop
lods
inc
cmp
sbb
scas
adc
inc
es
xchg
nop
les
sbb
or
adc
in
fmul
mov
inc
adc
push
in
inc
jno
add
jb
int3
mov
outsl
imul
shll
stos
push
push
ss
repnz
dec
inc
pop
loopne
clc
cmp
sub
mov
jbe,pn
xor
pop
enter
out
insl
xor
in
addr16
or
mov
push
pusha
insl
int3
shrb
jne
mov
ja
in
sub
popf
gs
cmp
cmpsb
pop
mov
shr
mov
int
test
push
cmpsb
dec
sub
push
js
cmp
aas
mov
fldenv
mov
fucomp
xorl
adc
iret
lods
xchg
or
test
ljmp
outsb
call
stos
mov
cmc
je
mov
xor
out
pop
pop
stc
fsubl
adc
inc
popf
sub
sbb
pusha
mov
in
push
mov
daa
push
pushf
test
cld
pop
mul
ja
jne
movsb
popa
nop
sbb
xchg
fnstsw
lahf
into
xor
aam
mov
aam
sti
std
jge
shl
xor
adc
iret
adc
mov
in
inc
imul
sub
mov
push
je
les
jae
push
int
dec
and
dec
out
xchg
and
dec
mov
lret
pop
gs
call
sub
mov
mov
cli
and
sub
fsubl
sbb
or
repnz
ljmp
gs
outsb
shll
or
mov
fnstsw
sbb
arpl
xchg
cmp
fisttpl
mov
out
adc
push
int
sbb
dec
ja
sbbl
daa
ljmp
xchg
push
push
orl
fists
negb
stos
mov
stos
jb
aam
mov
sub
sbb
jb
cmpsb
sbb
adc
push
pop
jo
sahf
pop
js
inc
sub
jecxz
sbb
xchg
push
add
xchg
in
and
test
xor
fstps
enter
jmp
dec
or
xchg
cld
icebp
jae
and
inc
add
sub
xchg
mov
das
shr
adc
sti
mov
sub
out
fstl
push
shll
cmp
mov
popf
fs
pushfw
and
clc
jnp
and
cli
mov
lds
loope
imul
aaa
por
mov
sub
fidivrl
test
outsb
ds
fldt
lcall
lock
test
sub
lock
enter
mov
dec
call
fucomp
mov
rolb
subb
leave
mov
mov
into
rcll
jns
inc
sub
xchg
aam
iret
aaa
cmp
stos
dec
xchg
cmpsl
std
sbb
test
repz
ljmp
cmp
stc
pop
out
mov
jg
cwtl
fdivs
mov
fwait
popl
cmpb
dec
insl
pusha
jge
xchg
cmc
rorl
icebp
xchg
push
filds
insl
jecxz
in
icebp
push
out
orl
in
jb
add
mov
jno
add
stc
out
test
add
sbb
leave
mov
push
cltd
cmpsb
jecxz
cmpl
stc
scas
test
push
shrb
mov
add
popf
bound
int
lret
cmpsb
popa
stos
push
adc
pop
sbb
mov
gs
adc
lcall
lahf
inc
xchg
mov
mov
fbstp
cmp
out
outsb
ss
loop
leave
dec
mov
mov
jo
or
dec
std
mov
rclb
and
and
mov
cld
scas
cmp
pusha
inc
test
popf
push
das
nop
ficompl
js
ja
xchg
test
add
xchg
ret
daa
push
jmp
dec
inc
mov
orl
mov
adc
fildll
dec
aad
loop
cmp
push
add
aas
sbb
mov
incl
stos
and
xchg
add
mov
mov
in
adc
dec
lods
adc
insb
jl
adc
push
fcoml
int3
les
mov
mov
lea
pop
push
sbb
sub
xchg
pop
out
pop
dec
shrb
mov
push
addl
ss
lcall
lcall
jg
je
daa
outsl
adc
or
cmp
fbld
push
push
add
stc
mov
sbb
mov
ret
jge
and
leave
lock
add
pop
fnsave
xor
cmp
outsb
xor
or
cmp
call
sub
mulb
sarb
fcmovu
ljmp
shll
fistl
arpl
aaa
add
ret
out
arpl
xchg
pop
cmp
jmp
stos
dec
movsl
xchg
test
inc
and
ja
mov
push
in
mov
das
dec
mov
add
jmp
fstpt
bound
mov
pop
rcll
mov
mov
pusha
mov
adc
popa
and
hlt
mov
mov
mov
xchg
xchg
xchg
lret
or
test
fs
popa
sti
push
lcall
in
jo
xchg
or
xchg
out
adc
stos
and
int3
lret
aam
stc
pop
addr16
push
enter
aas
or
add
dec
lahf
outsb
lret
loope
dec
sahf
dec
aas
sub
roll
add
into
mov
dec
fstl
clc
jmp
fmuls
inc
mov
add
sbb
adcl
imul
test
mov
add
or
lea
mov
xorb
out
repnz
lret
mov
mov
sbb
cmp
daa
sbb
inc
popa
push
ret
mov
pop
pop
cld
push
add
test
jno
xor
dec
popa
out
lahf
ja
mov
fcmovnb
sti
ds
xlat
mov
add
shll
mov
int
out
add
push
ficoml
popa
cld
or
ja,pt
lock
roll
mov
cmp
fs
aas
mov
sub
jnp
mov
sub
std
ja
inc
and
dec
fdivrl
jb
and
lods
mov
addr16
fwait
pop
sahf
dec
dec
out
scas
cli
mov
pushf
test
nop
cmp
addr16
mov
mov
iret
stos
pop
dec
mul
cwtl
es
push
pop
pusha
xlat
sub
lods
sbb
imul
rcll
rol
shl
rclb
xor
mov
mov
sbb
or
aas
jne
stos
pop
scas
sub
fistl
cmp
jle
xchg
dec
cmc
push
sbb
pop
adc
lock
dec
mov
aam
scas
xor
push
sbb
push
sub
push
test
inc
jae
std
sub
in
jo
push
test
sbbb
int
filds
aam
les
repz
mov
pop
cmp
imul
sub
outsl
sub
lea
mov
je
fbstp
mov
jge
rcl
xlat
adc
popa
jle
cmp
dec
addr16
into
in
cmpsl
jno
sbb
inc
fstpt
stc
sahf
stos
icebp
cmp
filds
pop
outsl
push
push
les
pop
jge
cmc
jne
adc
stc
lahf
xchg
in
lret
or
stos
push
aam
fs
pop
jl
aas
mov
nop
ja
outsb
mov
negl
or
hlt
jb
dec
lock
cwtl
xchg
push
outsb
repnz
dec
in
and
push
inc
dec
andl
adc
loop
jae
negl
jbe
ds
push
push
xchg
mov
stc
test
scas
scas
mov
out
pop
stos
push
xorl
aas
mov
dec
jecxz
sbb
jb
mov
arpl
aam
inc
repz
movsb
pop
xchg
ja
shl
jp
fdivr
mov
leave
sarl
movsl
cld
icebp
jbe
push
hlt
push
inc
das
daa
push
lock
out
xor
jp
outsl
xchg
test
dec
mov
sub
xchg
fdiv
inc
push
test
xchg
jp
jbe
adcb
xor
enter
xchg
imull
in
xchg
ret
data16
mov
cmc
out
or
mov
or
adc
dec
lahf
push
into
stc
jns
or
xlat
mov
imulb
cld
fisttpll
jp
jno
jne
cwtl
cs
sub
repz
shr
outsb
test
test
or
insl
cmc
nop
icebp
dec
fdivl
mov
stos
aas
add
inc
fldl
add
movsl
js
dec
fnstenv
push
and
in
xchg
gs
int
les
mov
xchg
into
and
mov
fmuls
pop
inc
fsubl
jo
lret
test
inc
loopne
lock
je
mov
sbbb
xor
add
ss
jbe
out
cmp
adc
pusha
cmp
mov
inc
adc
mov
mov
lret
mov
inc
mov
inc
ror
pusha
ds
test
rcll
addr16
cwtl
scas
pop
add
sbb
call
cmp
xchg
inc
out
fistl
ss
das
sub
xchg
aad
mov
sahf
pop
mov
jbe
mov
sbb
jbe
push
xor
xor
mov
test
xchg
mull
mov
icebp
cltd
nop
inc
cld
insl
sti
add
and
and
xor
orb
adc
test
ljmp
mov
mov
mov
inc
int
mov
mov
mov
fsts
mov
xor
jae
jb
mov
aas
scas
cmpsb
xchg
testl
sbb
rolb
mov
into
shl
mov
test
cmp
loope
nop
lcall
mov
jmp
mov
dec
cmp
xchg
add
icebp
dec
shll
nop
arpl
adc
jbe
push
rorl
xchg
fsubrs
test
addr16
lods
out
pop
mov
pop
push
jle
or
gs
dec
pop
xchg
movsl
jecxz
ja
mov
daa
mov
into
jnp
in
push
loopne
dec
inc
xor
call
add
and
inc
push
out
xchg
or
cmp
pop
enter
pop
addr16
mov
and
sbbb
xor
ss
imul
movsl
mov
and
push
stos
nop
sub
jne
shr
insb
fimull
dec
cmp
aam
inc
addr16
adc
test
test
movsl
sahf
jl
mov
test
jb
push
mov
pop
mov
into
mov
test
mov
rcll
shlb
scas
lods
loop
mov
push
mov
sub
inc
mov
sbb
insl
xchg
xchg
sbb
lret
imul
add
scas
cmp
loope
lds
push
jmp
rolb
adc
dec
push
jne
sub
mov
mov
sub
push
inc
mov
jp
push
bound
insb
push
mov
std
inc
jnp
shl
mov
cmpsl
in
notb
pop
repz
add
mov
push
iret
add
push
dec
or
xor
or
cmp
and
inc
push
cld
dec
ret
sub
nop
dec
les
push
pushf
jl
cli
cltd
mov
push
jnp
cmp
clc
inc
pop
fwait
or
push
mov
or
cmp
cmp
popa
pop
mov
mov
inc
inc
imul
or
cmp
adc
sahf
std
je
adc
inc
pop
add
popf
divb
loope
jle
jecxz
sub
mov
ret
sub
movsb
popa
in
stos
pop
inc
imul
dec
lcall
je
gs
xchg
mov
adc
cvttps2pi
jo
lea
icebp
or
jge
jle
fidivl
jne
sub
push
sarb
and
les
insl
sbb
cwtl
dec
cmp
push
aam
sbb
or
push
jge
insl
fnstsw
fiadds
fistpl
sbb
lock
ret
sbb
xor
mov
pop
xor
or
mov
jp
mov
cmpl
lret
inc
jno
and
mov
out
loope
stc
push
test
sbb
xchg
pop
insl
sub
inc
sbb
ljmp
mov
mov
pop
fmull
ret
popf
arpl
xchg
ret
or
cltd
xor
xchg
arpl
dec
enter
inc
test
inc
xadd
or
mov
and
aaa
push
cltd
or
pushf
dec
jge
and
pop
mov
sub
pop
and
or
xor
cmp
ss
rolb
dec
sub
adc
ret
bound
cmpl
xchg
mov
fildll
push
rorl
loope
push
lahf
lock
out
jne
cmp
xchg
sub
arpl
mull
xor
sbb
lret
adc
hlt
sahf
scas
inc
cmp
test
lret
std
stc
clc
shll
cmpsb
pop
inc
lss
xor
or
mov
add
repz
cmp
or
xchg
cltd
cwtl
xchg
int
les
push
xorl
cmp
mov
insb
pop
add
dec
inc
sub
outsl
int3
imul
sub
push
movsl
aam
jns
sub
insl
ret
push
nop
ja
stos
sarb
pop
or
and
adc
dec
xchg
add
test
push
orb
xlat
and
jecxz
push
lret
cmpsb
leave
pop
les
fisubl
andl
jmp
mov
fs
leave
mov
outsb
lcall
into
push
nop
push
out
and
sbb
mov
lock
hlt
stos
cmpsb
js
add
int3
mov
pop
adc
aaa
mov
add
cli
mov
lcall
ret
jno
and
or
lock
push
dec
nop
andb
xchg
cmpsb
or
nop
imul
xchg
lock
rorl
dec
addr16
cmp
or
movsb
sub
bound
xchg
jnp
lds
sbb
add
cmpsl
cmp
out
or
arpl
leave
rcrl
int3
mov
cmp
dec
pop
in
and
aad
sub
jne
cltd
xchg
adc
jae
imulb
or
adcb
push
pop
arpl
lods
hlt
mov
adc
inc
mov
outsb
lods
jl
test
dec
pop
je
mov
in
jo
cld
add
jne
adc
and
popf
push
out
add
nop
fildl
imul
mov
inc
sbb
xor
xchg
xchg
mov
mov
push
in
subl
cmp
and
lds
pop
addl
jb
push
and
nop
inc
mov
icebp
rclb
jb
shrb
xor
cwtl
dec
call
or
leave
ja
nop
cmpsl
outsb
int3
cmp
push
xchg
add
and
xchg
mov
push
sahf
bound
mov
xchg
inc
inc
incl
stos
jns
mulb
cmp
arpl
xchg
add
mov
and
xor
dec
sub
jl
shr
sub
mov
lds
js
dec
or
adc
shll
test
mov
test
and
aam
mov
ljmp
xchg
negl
dec
les
jge
gs
ret
inc
lds
mov
mov
sti
xchg
add
jb
das
fsubr
repz
sub
sub
stc
xchg
call
cmpl
xor
jno
or
jg
jae
outsl
sbb
fistpl
ja
adc
jb
lods
les
pop
adc
jo
xchg
shrb
sbb
clc
mov
cmp
cmp
arpl
fsub
mov
pop
fs
jmp
sti
jae
jnp
mov
jb
pop
leave
stos
cwtl
js
adc
pop
push
pop
dec
into
and
scas
xchg
in
mov
inc
and
fwait
pop
cmpsb
adc
dec
inc
xchg
jb
xchg
mov
jbe
sub
in
mov
vunpckhps
push
and
or
and
push
dec
xlat
ret
xchg
or
sbb
fildll
push
cltd
inc
in
or
iret
mov
xchg
and
sbb
push
add
sahf
inc
imul
sbb
sub
fldcw
fsts
mov
xor
cwtl
je
cmc
repz
dec
or
lahf
mov
cmpsl
push
in
iret
je
or
sbb
push
push
or
push
xor
imul
sahf
xorl
push
inc
jne
cmp
stc
stos
inc
push
add
and
in
mov
xchg
decl
std
pusha
fcoms
mov
icebp
or
mov
leave
pop
ljmp
xor
mov
add
divb
xchg
fdivs
clc
aas
mulb
xorb
pop
push
cmpb
lods
pop
mov
sub
pop
rcrb
lahf
xchg
xchg
sub
adc
fidivrl
mov
xchg
incl
inc
in
sbb
dec
icebp
test
jle,pn
cwtl
xlat
inc
outsb
pusha
sar
inc
addr16
push
imul
pusha
push
mov
gs
les
sbb
int3
mov
lods
xchg
push
mov
rolb
adc
mov
jmp
cmpsl
add
xchg
add
aad
cs
adcl
sbb
rorl
mov
xchg
ret
into
outsb
and
jmp
fdivrl
xchg
xchg
sbb
mull
loop
dec
pusha
pushf
mov
loop
test
repnz
stos
push
scas
faddp
push
cmp
cmpsl
les
loopne
jae
rorb
sbb
test
pop
jns
pusha
push
jl
outsb
aas
fwait
nop
dec
data16
shlb
cld
movsb
mov
push
pop
dec
inc
mov
xchg
xchg
mull
leave
cmp
rclb
fildl
outsl
icebp
sbb
shlb
je
and
fisttpl
sub
push
lret
mov
mov
int3
movsb
aaa
adc
dec
daa
jb
mov
out
mov
ja
aam
and
mov
mov
lods
mov
push
mov
jge
call
mov
sub
test
push
js
lock
cs
fiadds
iret
jno
or
repz
push
mov
pop
add
pop
dec
int3
dec
adc
xchg
pop
adc
popf
pusha
int3
mov
push
je
lcall
lds
movsl
mov
hlt
test
adc
mov
fcmovbe
mov
jb
lcall
jle
mov
pop
jmp
rcrl
iret
pop
xor
xorb
push
jge
pushf
jmp
or
sbb
fidivl
and
pop
jo
daa
pop
dec
aad
sbb
icebp
aam
ffreep
push
lahf
inc
adc
push
loopne
icebp
das
add
dec
fiaddl
outsb
sti
pop
sti
sub
das
adc
out
fidivs
adc
in
push
mov
lcall
negl
inc
ljmp
pop
pop
add
fcomps
setg
repnz
jle
gs
test
js
adc
push
loop
aas
inc
fsubrl
inc
mov
dec
add
dec
ret
lret
lods
daa
out
mov
inc
shrb
jne
jb
cld
jle
shll
jo
test
testb
orl
ja
cmpsl
orl
jg
push
mov
push
dec
enter
mov
ret
pop
xor
mov
dec
fldcw
sub
sbb
lcall
lods
mov
mov
movsl
sub
cli
aas
xchg
mov
lods
cld
cmp
dec
cmp
inc
mov
mov
push
mov
add
adc
jbe
xchg
insl
dec
dec
xchg
outsl
mov
add
lea
aad
cmp
int
leave
mov
cmc
inc
inc
iret
adc
daa
push
outsb
add
call
hlt
cli
mov
push
mov
adc
lret
fbstp
jg
and
or
sbbl
ja
push
in
adc
out
jp
loop
aam
leave
jle
nop
mov
adc
cli
jae
out
outsb
in
repnz
shl
out
popf
andb
and
lea
int3
and
sbb
mov
jbe
add
ja
mov
sti
ret
call
ret
cltd
sub
xor
int3
and
adc
call
jmp
sti
sahf
cli
mov
ja
out
jp
mov
mov
xchg
movsl
sbb
hlt
cs
sti
sbb
clc
sbb
jg
inc
ret
xchg
sbb
aad
and
cld
cmpl
xlat
in
leave
scas
fwait
jp
push
push
pusha
and
push
dec
pop
lock
fbstp
in
mov
xlat
xchg
cmc
cmc
jl
pop
jne
insb
movsl
repnz
xchg
or
pushf
jmp
cs
testl
outsl
mov
xor
mov
mov
mov
je
push
aas
push
dec
lahf
add
scas
pop
xchg
mov
flds
dec
push
mov
loopne
ret
nop
lcall
inc
pop
or
push
mov
enter
lcall
stc
and
or
rol
jge
out
mov
jnp
sbb
imul
sbb
push
push
mov
cmp
dec
bound
mov
aas
popa
dec
mov
dec
neg
push
add
stc
enter
jns
insl
cmp
bound
enter
dec
mov
dec
mov
fists
cmp
dec
rol
xor
das
aad
dec
movsb
into
pop
mov
test
in
dec
jno
and
sbb
mov
jg
daa
ja
mov
jno
mov
pop
push
push
or
popa
mov
xchg
aas
sbb
fnstcw
bound
es
dec
je
dec
add
or
mov
pop
adc
or
dec
jg
in
sbb
and
inc
and
push
out
and
mov
dec
add
fs
je
jg
mov
xchg
negl
sbb
jns
lcall
cltd
pop
aam
inc
add
aas
mov
aaa
fbstp
mov
stc
xchg
or
mov
in
add
movsl
mov
out
sbb
hlt
mov
aas
aaa
aam
test
lods
lock
xchg
ja
negl
pop
out
cli
xchg
cwtl
cmp
adc
mov
dec
xlat
outsb
sarb
mov
mov
dec
fsub
sub
stos
mov
push
hlt
cmp
add
xor
push
das
xchg
cmp
call
cld
add
lods
outsb
pop
out
jbe
in
mov
push
push
test
jns
and
aaa
sub
and
rorl
mov
data16
js
imul
pop
mov
dec
cmpsl
idiv
cli
pop
dec
adc
inc
imul
pop
add
das
pop
cs
mov
push
mov
mov
mov
in
pop
fs
cmc
jne
cmpl
sbb
test
adc
inc
add
jmp
pop
out
mov
or
inc
jae
mov
or
and
push
gs
xchg
lret
fs
into
add
mov
into
cmp
dec
lcall
scas
mov
aad
pusha
or
jge
orl
int3
into
ret
aas
jg
sub
mov
push
pop
fdiv
dec
add
mov
jmp
mov
lret
mov
aam
rcrl
pop
orb
mov
jle
mov
gs
nop
sub
jmp
xor
dec
int3
dec
and
push
xorl
jnp
and
or
leave
lcall
push
pop
pop
in
pop
pushf
lock
ret
and
pop
leave
sbb
ss
or
loopne
mov
jmp
mov
xchg
adc
xchg
in
lods
sbb
lcall
mov
leave
pop
pop
dec
dec
out
std
leave
test
add
fistl
jnp
unpcklps
cmp
mov
xor
int
int
addr16
das
test
mov
mov
cmp
mov
mov
cmp
push
pop
fsubl
ja
add
add
or
xchg
in
and
mov
stc
lock
repz
jns
icebp
arpl
xchg
jge
mov
adc
pushf
jg
pop
fs
movsl
adc
insl
inc
je
inc
js
sub
les
inc
sbb
cwtl
aam
and
sti
inc
cmp
fstpl
mov
xchg
and
pop
mov
fs
out
xor
mov
sub
mov
mov
mov
inc
sti
aas
ljmp
mov
pop
jge
xorb
xchg
adc
movsl
shll
pop
cmp
pop
and
mov
jns
xchg
and
add
adc
push
adc
icebp
mov
xor
mov
pop
sahf
and
mov
xchg
jp
fsub
push
nop
jle
fdivr
pop
data16
sub
dec
imul
mov
inc
pop
pop
pop
mov
ss
daa
xchg
pop
rcr
enter
hlt
sbb
sub
stc
cmp
call
sbb
sbb
test
and
pop
jns
mov
nop
shll
mov
mov
pop
in
cmp
cmp
xor
jp
xlat
mov
ret
mov
inc
fidivs
mov
pop
fmuls
adc
mov
pushf
xchg
add
sub
cmp
ljmp
or
mov
into
out
sar
iret
sub
pop
adc
sbb
std
sbb
outsl
stc
aam
cmp
mov
rcrl
lods
dec
outsl
bts
imul
mov
cmp
cmp
xchg
aas
negl
ljmp
mov
mov
bound
test
cmpsb
sub
or
add
sub
popa
jb
pop
sub
cmc
shr
cli
pop
adc
loopne
bound
push
pop
fcmovnb
mov
sbb
je
and
adc
jo
lods
xchg
mov
arpl
pop
mov
and
mov
cmp
pop
mov
movsb
out
jae
insb
ret
and
pop
push
push
insb
imul
mov
rcl
sbb
jo
adc
pop
pop
pop
imul
int
push
loope
mov
in
imul
sub
outsl
sarl
and
movsl
std
or
mov
jno
pop
sti
add
iret
mov
outsl
mov
jno
ret
jnp
test
ja
jns
adc
negb
jne
mov
jmp
idivb
xchg
jmp
dec
xor
xor
retw
insl
daa
pop
xchg
cli
mov
push
das
shrl
xor
jmp
rorb
jbe
iret
loopne
mov
add
xchg
mov
adcb
lods
inc
enter
inc
fsub
cmp
pop
mov
ljmp
xchg
push
xor
les
sbb
or
xchg
mov
inc
fdivs
rcr
pop
out
jge
mov
jle
dec
out
cld
jns
icebp
fbstp
lods
ret
cmp
popa
lea
neg
pop
inc
jo
xor
sbb
daa
out
cmpsb
adc
xchg
mov
sahf
in
adc
movsl
inc
sti
cmp
push
push
shll
aad
push
jno
mov
imul
aam
enter
mov
cwtl
jnp
jp
inc
stos
out
cltd
xchg
in
aas
fstpl
mov
sbb
or
adc
es
add
iret
fldcw
jmp
std
mov
loop
iret
out
push
out
jb
imul
popa
fbld
cli
dec
and
aad
jp
ret
call
mov
dec
and
cli
icebp
lods
jmp
cmp
std
sub
lahf
sub
or
jge
or
cmp
out
aas
push
mov
cltd
pop
aad
in
outsl
dec
out
dec
add
testb
hlt
push
cmp
ja
mov
aad
push
cmp
sahf
cmp
inc
adc
leave
push
cmc
sub
mov
insb
pusha
jle
leave
fadds
mov
lret
lahf
push
jno
dec
lods
or
aaa
das
and
fmul
clc
push
ficoml
cmp
pop
fs
pop
mov
pop
jno
jbe
sub
jp
aad
sarl
cmp
inc
cmp
cwtl
in
iret
cmp
xor
pushl
add
push
fs
cmc
mov
bound
cltd
faddp
push
pop
dec
push
or
or
ljmp
push
dec
shrb
mov
popa
stos
ret
xor
ds
sub
sbb
mov
rcr
ss
inc
adc
xchg
mov
out
dec
xor
jg
test
jg
jge
cmc
mov
mov
jno
jnp
sub
adc
imul
pusha
mov
dec
nop
clc
mov
loopne
sub
fldenv
mov
jg
insb
and
cmpsl
mov
add
aaa
jo
jp
push
xor
xor
imul
stc
add
add
cltd
push
pop
or
in
fistps
loope
dec
lahf
aas
daa
inc
mov
loope
cmpsl
push
outsl
leave
inc
lcall
mov
inc
pop
rorb
jg
cmp
mov
push
push
loope
pop
add
adc
scas
adc
dec
fmull
sub
mov
push
mov
cli
sub
popf
in
pop
call
clc
adc
push
add
repnz
xor
sbb
stos
or
cmc
push
mov
rol
fisttpl
push
adc
lahf
and
or
test
jg
cwtl
mov
sub
mov
dec
scas
hlt
lcall
mov
push
inc
inc
popa
xchg
xor
or
adc
adc
mov
ljmp
aam
int3
cmp
sahf
nop
cli
ja
jno
outsl
xchg
or
leave
push
leave
sub
xchg
das
jo
lods
add
cmc
orl
imul
jmp
jmp
fxch
mov
out
adc
cmpsl
mov
stos
andb
cwtl
arpl
ljmp
outsl
and
inc
sub
mov
cmp
mov
in
arpl
sahf
inc
push
pop
rcrb
mov
adc
test
pop
mov
or
pop
lods
fsubs
sbb
dec
fsts
adc
add
inc
inc
fistl
jo
leave
sbb
push
pusha
in
sbb
mov
adc
and
xor
adc
push
stos
fiadds
testb
in
movsb
pop
sub
fisubl
popa
and
les
insb
stos
push
sbb
add
in
inc
mov
aaa
dec
fisttpl
and
mov
push
push
aas
testl
gs
test
sbb
fwait
sub
sbb
lret
dec
les
inc
cld
lods
pop
outsb
xor
aaa
mov
xchg
push
mov
loopne
dec
pop
dec
rcrl
pop
loope
and
pop
jns
add
cld
fldcw
subl
and
test
cmp
jns
jno
notb
mov
aad
or
and
sbb
push
sub
stc
test
xor
test
dec
mov
std
leave
fnstenv
movsl
mov
js
in
leave
mov
enter
dec
push
loop
and
jmp
cltd
mov
xor
loope
ret
mov
mov
data16
or
ljmp
sti
ljmp
test
or
movl
mov
leave
es
add
in
aas
xchg
push
inc
gs
mov
cmp
dec
and
dec
js
js
sbb
outsb
inc
mov
stos
out
sub
aad
jns
std
xor
lods
ret
mov
add
mov
pushf
add
sbbb
loopne
and
xor
lcall
fidivrl
sub
jne
call
mov
test
jmp
cmp
push
push
nop
daa
pop
insl
push
dec
mov
loope
push
pop
xor
mov
mov
mov
cmp
ljmp
xor
jns
push
add
push
mov
pop
outsl
scas
or
and
inc
mov
sub
dec
fimull
shrb
add
add
dec
cmp
sbb
mov
inc
jno
pop
enter
movsl
and
add
sbbb
nop
or
mov
adc
addr16
stos
xchg
mov
mov
movsb
inc
cltd
repz
clc
shrb
sbb
jo
imulb
mov
movsl
cmp
inc
out
mov
mov
ss
adc
and
repz
xchg
cmp
into
dec
dec
test
or
cltd
icebp
jge
mov
mov
lea
mov
cmpsl
in
test
dec
adc
pop
jnp
aaa
xor
pop
adc
adc
shl
lds
add
loopne
mov
cmp
popf
cmovo
pushf
aas
sub
popa
inc
stos
sub
addr16
xor
fcomps
mov
mov
loope
mov
push
push
arpl
movsl
dec
sbb
sbbb
in
arpl
maxps
rorb
mov
mov
mov
mov
shlb
push
cwtl
aas
ja
xchg
jmp
jl
scas
xor
fmuls
pop
mov
insl
cwtl
pop
dec
jb
mov
subl
mov
cmc
data16
fsts
out
mov
fidivrl
lds
fmul
out
fadd
add
movsb
cmp
loopne
popf
out
mov
into
mov
dec
addr16
cmp
cmp
out
mov
test
push
cltd
push
dec
out
fcmove
pop
mov
or
insl
js
imul
divb
jne
movsb
mov
sbb
and
les
test
xlat
call
adcl
aam
add
cmp
je
push
and
rolb
push
mov
mov
shrl
pop
push
out
pop
inc
sarl
or
imul
cltd
loope
jne
fbld
lea
arpl
test
mov
aam
mov
xchg
les
sbb
loop
mov
and
dec
adc
cli
sbb
shlb
add
test
fldl
repz
jle
insl
mov
mull
dec
push
jb
xor
sbb
xlat
jecxz
lahf
hlt
in
jl
mov
jae
inc
and
push
inc
or
pusha
insb
repz
pop
lcall
popf
inc
pop
sarb
jecxz
push
jnp
hlt
es
add
es
loopne
push
movsb
mov
gs
xchg
es
jnp
clc
loopne
mov
das
ret
rcl
push
pop
or
ret
mov
jp
imul
data16
inc
sbbl
and
into
pop
jae
shlb
jnp
inc
ja
xor
or
lahf
cmp
dec
in
or
faddl
imul
jg
popl
pop
ds
cmp
enter
add
into
add
ror
repnz
fdivp
mov
adc
fisttpl
mov
jecxz
dec
mov
mov
pop
jp
jbe
and
xlat
inc
stc
mov
mov
insl
pushf
fdivs
dec
and
mov
push
lea
jb
cmp
adc
fnstsw
movsl
dec
stos
sub
mov
outsl
fcmovbe
lock
mov
adc
int3
dec
movsl
or
or
mov
xor
arpl
inc
mov
xor
sahf
xchg
sbb
notb
mov
call
lea
pushf
adcb
in
pusha
push
xor
out
xor
pop
pop
jo
loope
jb
aas
sub
stc
add
push
lcall
je
lret
outsl
mov
or
aad
xchg
jp
mov
adc
aam
sahf
sub
dec
xchg
cmp
push
pop
call
or
push
inc
push
lea
cmpl
pop
test
adc
or
subb
movsb
jg
rcr
jne
outsl
mov
lea
fninit
mov
loop
js
lods
ljmp
cs
lods
scas
mov
test
ret
aaa
mov
mov
cmpsb
scas
push
test
mov
jne
cmp
jb
into
jl
xchg
subb
push
xchg
and
stc
xor
ficoms
xchg
out
push
xchg
add
mov
sub
xor
and
gs
dec
xchg
mov
jmp
ljmp
jmp
mov
xor
sub
je
sahf
inc
push
test
jbe
inc
fadd
inc
push
popa
or
push
popf
shrl
add
rcrl
mov
aaa
jne
mov
mov
sub
js
mov
in
or
mov
fdivrp
cwtl
in
lods
cmpsl
popf
xchg
out
data16
adc
scas
loop
js
das
loopne
jne
les
sbb
int
xchg
jp
repz
adc
out
jl
cmp
clc
pop
insb
testl
sub
dec
sub
sarl
mov
shrb
lods
out
out
push
mov
mov
mov
sub
stc
sub
or
mov
repnz
jg
xchg
fbstp
es
mov
mov
cmpsb
out
dec
stos
or
fcomps
lods
jbe
jge
and
mov
push
js
push
jg
mov
out
cmp
mov
rol
data16
jns
insb
jmp
ret
dec
and
add
pmullw
jae
add
adc
jecxz
mov
shrb
or
outsb
inc
inc
das
pop
mov
pop
incl
inc
cmp
sub
in
jb
adc
cld
mov
in
xor
mov
lock
push
jb
int3
dec
fs
loopne
xor
sbb
mov
mov
ljmp
addr16
add
lods
nop
fucomp
xorb
test
xchg
nop
mov
stos
jns
gs
xor
xor
lods
pop
pop
imul
push
ss
mov
shll
in
cwtl
push
xchg
popaw
inc
cmpsl
xor
mov
fmul
dec
ja
jo
ds
xlat
xchg
sbb
sub
or
dec
loop
adc
sub
push
mov
movsb
dec
cs
xchg
fistpl
mov
movsl
clc
mov
add
es
std
repnz
out
repnz
das
jb
jg
repz
in
lret
sarb
sub
push
mov
xor
gs
lods
test
movsb
cmc
int
bound
push
pop
sub
xor
push
mov
jo
inc
int3
sub
sahf
sub
sbb
lods
fisttpl
pushf
loopne
gs
inc
and
xor
movsl
pop
cmp
mov
mov
imul
pusha
mov
pop
stos
aam
jle
mov
add
mov
mov
lahf
and
jns
rolb
xchg
xor
xchg
daa
ficomps
js
out
add
inc
jle
lcall
dec
rcll
mov
mov
jle
jg
inc
xchg
mov
inc
pusha
iret
aas
rorb
js
add
and
lods
scas
push
out
xor
push
popf
pop
pop
outsl
insl
icebp
fsubl
in
cltd
fcompl
rolb
mov
leave
sarb
jge
imul
ror
out
shll
clc
cmp
add
push
into
xchg
and
mov
inc
out
mov
add
and
popf
pushf
inc
into
ja
adc
mov
lahf
leave
xor
jnp
mov
lods
cmp
mov
jno
shrl
sub
std
pop
pusha
and
int
mov
arpl
repnz
inc
shrl
lret
push
mov
std
xchg
call
ljmp
sbb
mov
add
mov
or
cld
sbb
jae
or
std
lret
pop
jb
repnz
icebp
call
outsl
jl
aaa
imul
stc
cmp
push
adc
or
cwtl
lea
cmp
xchg
add
sbb
aam
je
fsts
loop
mov
inc
je
jmp
sbb
sub
adc
jmp
scas
cmpsb
adc
popf
push
xchg
mov
testb
sbb
fincstp
lret
dec
repz
repz
test
jl
mov
out
jno
pop
cmpsl
xor
and
movsb
mov
cmp
and
sub
sbb
adc
shll
scas
gs
mov
adc
fucomip
mov
fldcw
xchg
cmp
jle
out
and
xchg
ret
pop
lcall
dec
ljmp
enter
xchg
dec
adc
mov
xchg
inc
fists
xchg
pop
xchg
movsb
mov
jecxz
loop
lds
push
pop
mov
pop
add
sbb
loopne
cld
jae
es
jnp
je
push
cmpsb
mov
in
pushf
data16
push
pushf
cmp
and
and
outsb
or
sub
test
fidivl
out
mov
xchg
mov
inc
adc
movsb
inc
sbb
arpl
js,pn
xchg
or
jp
mov
push
mov
in
mov
adc
nop
add
test
sbb
negb
xor
insb
daa
and
ss
lret
jecxz
mov
aam
mov
roll
mov
push
jp
nop
jo
test
jno
out
and
adc
pop
adc
imul
test
pop
and
cmpsb
insb
pop
repz
jmp
dec
call
mov
and
xchg
mov
jle
outsl
jp
aaa
mul
fdivrl
inc
je
push
and
movsl
xor
mov
and
and
cmpsl
sub
or
and
sti
mov
dec
lock
pop
mov
push
jmp
xor
sub
xchg
inc
mov
cld
clc
xchg
push
mov
add
xor
mov
dec
xchg
movsb
push
pushf
add
pop
or
xchg
add
sar
aaa
cli
dec
sbb
pop
jnp
or
fstps
mov
lock
dec
adc
push
sbb
inc
imul
jg
in
cmp
jmp
xor
adc
fstp
mov
les
int
cwtl
push
fstp
in
mov
adc
cmp
nop
jg
es
push
divb
xor
sbb
rclb
outsl
outsb
cli
xor
inc
jbe
rolb
adc
pop
xor
push
out
flds
es
mov
outsl
mov
sbb
jno
stos
mov
subl
cmp
call
pop
shlb
fwait
lods
jb
mov
sub
hlt
rolb
cmp
xlat
roll
lock
dec
outsl
repnz
sub
cltd
repnz
loop
inc
jmp
jg
rorl
fistpl
xor
and
cmp
cmp
sub
dec
xchg
bound
add
pushf
stc
add
in
push
xor
sbb
pop
mov
jp
insb
loopne
stos
adc
push
leave
repnz
repz
mov
mov
ror
or
sbb
or
popa
inc
mov
aad
cmp
in
ss
mov
call
push
inc
pop
sub
lret
shr
fbld
dec
mov
jg
dec
xchg
mov
mov
outsb
pushf
loop
jg
push
pop
int
ror
lcall
fstps
dec
popa
lock
push
insb
lret
pop
bnd
inc
add
icebp
dec
dec
inc
inc
sub
inc
ficomps
ss
push
aam
aam
cmc
mov
cli
cmp
sub
fwait
mov
jb
or
jo
adc
fdivs
mov
rclb
xchg
add
loope
aaa
adc
ret
cmp
dec
ror
push
insl
stos
je
lea
adc
clc
in
pop
dec
mov
loope
loop
fcom
mov
or
dec
xchg
iret
jo
push
cmp
inc
mov
and
lret
jne
mov
push
or
inc
nop
rcrb
add
negb
adc
pop
sbb
andb
aad
push
imulb
push
pop
movsb
ljmp
sub
ss
pop
rorl
lahf
push
repnz
clc
iret
hlt
fldl
push
xchg
cmp
test
cmp
loop
int3
popa
test
hlt
stos
cs
pop
push
xor
mov
call
add
imul
sbb
arpl
push
sahf
mov
scas
rorl
in
lahf
mov
cld
dec
sbb
cmp
nop
daa
addr16
leave
mov
std
outsl
inc
fs
inc
push
js
pop
xor
mov
and
sahf
fwait
sarb
add
iret
xor
nop
mov
pop
or
sub
dec
dec
movsl
add
cs
add
call
iret
cmc
push
mov
xchg
mov
adc
xor
adc
sbb
lds
mov
int
into
test
out
sub
mov
mov
rorl
in
lcall
mov
mov
outsb
xchg
adcl
fs
lods
fisttpll
xor
adc
and
testb
pop
pop
js
cmp
pop
mov
xor
loop
sub
shll
dec
test
xchg
adc
pop
out
orb
pop
ds
insb
xchg
fcompl
lcall
pop
fimuls
jmp
ret
mov
lock
mov
iret
pop
ss
inc
jmp
adc
cmp
psllw
clc
xor
mov
pop
fstl
shll
lods
xor
ret
inc
hlt
sbb
fsubs
icebp
jle
jmp
sbb
popa
in
scas
subb
dec
jecxz
push
jo
dec
sbb
addr16
repz
add
jnp
and
xorb
cmp
and
mov
pushf
jae
outsl
ja
out
lcall
popf
mov
fimull
mov
sbb
data16
fdivr
xchg
sbb
pop
stc
mov
and
popf
neg
out
dec
sti
jecxz
lods
mov
pop
xor
jl
mov
orl
je
scas
cwtl
pop
aas
sbb
or
jle
stos
rcl
ds
push
cmp
push
loope
jne
lods
cli
rcll
popa
inc
add
into
jo
aam
mov
out
lret
cmc
jne
fimuls
xor
notb
aaa
adc
xlat
adc
dec
inc
jg
sub
lret
inc
enter
bound
ret
out
es
jo
testb
and
pop
mov
push
ss
xchg
testl
rolb
mov
dec
imull
hlt
and
test
repz
mov
cli
das
les
push
into
or
pop
bnd
std
outsb
roll
scas
lods
jle
into
ljmp
and
mov
insl
sub
lods
sbb
in
in
sahf
cmpsl
data16
cmp
xchg
out
les
mov
push
xchg
dec
in
pop
mov
xchg
loop
xor
sbb
mov
add
and
hlt
imulb
daa
jnp
mov
lret
or
pop
int
cmp
dec
jecxz
jg
sub
cltd
pop
jns
rcr
jmp
dec
aaa
pop
dec
mov
xor
adc
push
mov
xchg
xor
mov
mov
pop
or
out
test
sub
mov
daa
bsr
add
movl
mov
xchg
cmp
inc
mov
adc
movb
loopne
in
sub
cltd
call
insl
mov
pop
pop
enter
sbb
sub
dec
jl
pushf
out
out
push
or
je
dec
xchg
and
insl
push
ret
mov
mov
mov
dec
jp
inc
cld
inc
inc
jecxz
lret
sub
sbb
mov
xor
ds
mov
imul
inc
mov
sbb
bound
ss
in
add
scas
pop
fwait
dec
dec
in
mov
push
jb
cmp
mov
repnz
outsb
fs
adc
js
push
jge
sbb
pop
mov
fbld
rorl
aas
scas
mov
cmc
and
fstps
pop
mov
fistl
idivl
xchg
mov
int3
sbb
add
stos
ljmp
rorb
nop
sub
xor
and
sub
push
or
sub
je
shl
cltd
mov
cmp
aaa
mov
pop
mov
mov
out
jbe
sub
mov
or
shll
pop
popa
adc
mov
xchg
pop
lock
xlat
subb
scas
lods
and
leave
or
sti
daa
push
lahf
mov
cmp
cwtl
jae
popa
sub
push
push
sub
sbb
xchg
outsb
into
aas
int
shl
rclb
dec
shrb
and
pop
or
push
xor
xchg
inc
test
sub
sahf
dec
ss
push
test
popf
inc
pop
subl
lcall
dec
mov
xchg
mov
mov
pop
cmp
xor
iret
dec
enter
out
inc
ss
lret
push
decb
cmp
inc
dec
cs
cmp
add
test
xor
insb
adc
push
and
inc
das
movsb
push
cld
sub
pop
inc
adc
push
orb
push
cmp
data16
jge
mov
and
pop
cmpsl
pop
push
xchg
mov
shlb
xchg
inc
out
adc
mov
shll
pop
and
mov
mov
push
cmp
inc
out
mov
ss
jle
outsl
push
lcall
data16
sbb
xchg
cmp
nop
stos
in
popa
mov
pop
and
xchg
aam
jno
popf
mov
mov
aaa
dec
adc
stc
mov
prefetch
cmp
mov
into
add
push
das
add
cmpl
mov
inc
pop
cmp
xor
scas
sub
mov
xor
std
xor
mov
dec
ret
pop
pop
sub
xor
test
add
stos
add
je
jl
int3
sub
mov
push
inc
pop
daa
xchg
icebp
int
jle
inc
rcll
mov
mov
or
jae
lcall
mov
add
fbld
mov
or
add
scas
pop
bnd
pop
clc
cld
mov
ljmp
lods
mov
add
mov
movsl
adc
sbbb
push
jmp
jns
ljmp
or
nop
jg
repnz
pop
lret
popa
dec
lahf
lds
insb
jne
inc
cmpl
lret
fstpt
pop
insl
movsl
push
push
or
jnp
test
mov
orl
icebp
dec
rcll
pop
daa
popf
dec
js
int
adc
loop
rcrb
push
cld
mov
and
jo
mull
push
pop
sbb
push
rcrb
add
outsl
xor
into
and
xor
sti
pop
push
test
and
inc
in
pop
sub
pop
cmp
add
pop
imul
adc
sbb
mov
mov
sbb
dec
into
push
sub
sbb
out
shl
sbb
inc
or
cmp
pop
neg
scas
ret
push
aam
sahf
mov
mov
ss
fidivrs
pop
cmp
and
clc
mov
jecxz
ds
test
push
std
mov
cli
cmc
test
roll
and
inc
sbb
inc
cmp
or
movsb
push
adcl
daa
mov
loop
nop
lds
jns
mov
test
paddw
mov
leave
push
cmp
cmp
dec
in
add
jle
pop
sbb
cltd
gs
mov
sub
jno
inc
and
cli
bound
xchg
fidivs
mov
out
dec
jg
cmp
mov
cwtl
adc
pop
vmovss
jne
sbb
mov
mov
mov
mov
adcb
loop
dec
pop
popf
mov
mov
decl
stos
dec
faddl
lea
dec
movsl
mov
movsl
ret
call
pop
shr
sub
inc
pop
push
mov
dec
push
pop
repz
aas
cmpsb
js
push
mov
ss
ljmp
jg
shrl
mov
cmp
mov
jns
jne
cmp
mov
or
in
push
es
scas
out
mov
inc
outsl
jno
aad
push
repz
lahf
int
sbb
xor
ss
scas
push
and
cli
xor
or
adc
jp
rcrb
stos
nop
push
addr16
mov
add
mov
or
out
xchg
js
pop
xor
loope
push
adc
mov
inc
inc
in
xor
jle
adc
fsubl
sahf
jae
loope
inc
insb
shl
pushf
adc
push
pop
and
out
arpl
and
xor
cmpsl
push
sahf
and
faddl
jnp
xchg
cmp
cmp
clc
add
mov
mov
inc
lds
mov
shlb
outsl
cli
xchg
daa
dec
ds
lcall
subb
lea
clc
imul
sub
mov
addr16
push
iret
xchg
negb
dec
ljmp
popa
int
out
xchg
fdivr
adc
aad
ja
sbb
push
adc
loopne
push
mov
inc
cmpsb
add
dec
add
orl
sub
xlat
inc
xchg
insb
stc
movsl
xor
loope
daa
add
xchg
and
push
push
ret
inc
sub
pop
adc
test
aam
aas
pushl
ror
dec
fists
dec
rep
insb
mov
test
xchg
sub
mov
jb
jo
imul
iret
imul
std
out
outsb
int
dec
dec
xchg
xchg
orb
outsb
push
inc
or
sub
mov
cmpsl
aam
shr
test
loop
dec
outsb
or
cwtl
cmpsl
test
xlat
enter
mov
add
imul
mov
ds
push
cmc
notl
in
adcb
jg
sub
pusha
imul
dec
in
inc
cmpsl
xlat
cwtl
push
pop
test
pop
add
adc
imul
fsubrs
xchg
enter
mov
sbb
inc
test
dec
out
dec
mov
mov
lret
push
mov
push
loope
enter
stc
push
adc
xchg
imul
scas
mov
repz
ja
cmp
loop
jae
iret
mov
movsl
pop
fs
mov
orl
jb
push
ret
nop
bnd
pop
popa
lock
mov
push
out
testl
jecxz
mov
mov
into
repz
jmp
cmp
xor
mov
ret
cmp
cmp
adc
andl
ret
frstor
jbe
test
je
out
outsb
jmp
inc
xchg
mov
jbe
pop
push
add
lds
subb
popa
lahf
pusha
jmp
jle
add
mov
lock
stc
lret
push
lret
outsb
div
iret
lcall
je
jo
fs
inc
adc
adc
lret
bound
pop
jmp
and
dec
jo
dec
or
pop
fbstp
ss
lods
xor
adc
or
dec
xor
outsl
jo
mov
loopne
aad
in
cmp
lods
aas
lea
mov
jle
cltd
push
stos
mov
xchg
xchg
ss
xchg
mov
adc
fiadds
mov
mov
xchg
aam
in
push
cmp
jne
fidivs
ss
mov
pop
or
xlat
clc
in
push
es
out
loopne
mov
xchg
notb
ret
xchg
mov
dec
add
pusha
aas
push
push
outsl
cli
or
dec
je
mov
call
mov
pop
jne
ja
test
sub
addb
xchg
pop
fnstsw
sbb
cs
adc
jne
lcall
mov
pop
mov
or
or
adc
or
lods
fs
xchg
push
dec
lcall
and
push
call
sub
in
scas
insb
jo
icebp
pop
es
or
adc
mov
or
cmp
push
add
jecxz
adc
inc
and
mov
lods
scas
cmp
adc
rolb
ss
adc
mov
dec
lods
int3
or
lods
push
push
imul
loopne
test
sub
lret
fsubr
dec
cmpsl
je
xor
add
mov
popa
jbe
and
add
xor
lods
and
dec
ret
fdivrs
adc
rcr
unpckhps
test
add
xchg
ds
fs
or
icebp
fisubs
test
scas
and
xor
lds
jp
add
mov
dec
xchg
outsb
out
sub
lea
arpl
push
push
jge
test
repz
add
es
and
addr16
jl
and
cmp
adc
loop
adcl
adc
insl
mov
js
aam
xor
xor
lahf
xor
and
xchg
mov
mov
xchg
lods
xor
pop
pop
lret
jnp
mov
and
fwait
push
fnsave
jno
mov
cmp
mov
sbb
jle
lods
orb
mov
sub
scas
shlb
pop
push
subb
xchg
lds
arpl
fimull
xor
mov
xchg
call
sbb
vpmacswd
fcmovu
shr
xchg
adc
pop
stc
add
in
push
jecxz
das
sti
pop
pop
cmp
pop
pop
aad
fmuls
dec
pop
call
scas
cwtl
pop
push
lods
xor
out
or
movsb
xor
cs
cmp
inc
inc
and
aas
outsb
test
or
ss
cmpsb
jmp
mov
push
jle
mov
mov
jno
sub
into
scas
mov
clc
in
dec
pop
es
jae
bnd
lods
mov
mov
push
js
cmp
ret
andl
push
cmp
push
test
inc
push
inc
add
pop
pop
adc
cld
add
shlb
in
push
jl
pop
jne
adc
test
imul
xchg
loop
adc
jnp
sub
push
insb
dec
inc
mov
int
std
lcall
test
stc
mov
stos
fwait
jnp
pop
xchg
inc
pop
ja
ss
stc
push
out
inc
mov
mov
fs
nop
std
inc
pop
jns
add
outsb
sbb
pop
xchg
jns
cwtl
loope
imul
addr16
test
mov
xchg
and
mov
mov
popf
sub
mov
adc
std
loope
mov
stos
outsl
inc
scas
xor
pop
loop
jno
push
lods
loope
jno
sahf
jmp
sar
pusha
xchg
add
cmp
test
mov
sahf
cli
ret
fwait
cmp
icebp
xor
insl
and
adc
repz
jg
adc
adc
push
shlb
mov
into
xor
pop
push
inc
cmp
or
jmp
out
cmp
daa
sbb
movl
and
sarb
sbb
pop
lret
sub
lahf
mov
jmp
cmp
xlat
xor
adc
inc
sbb
sbb
jl
lds
ljmp
push
outsl
sbb
pop
enter
jbe
jp
pop
test
es
gs
aad
fists
xchg
jmp
jns
pop
jg
int3
add
rcl
ldmxcsr
adc
rorb
or
push
push
loopne
adc
pop
or
fildl
icebp
movsb
sarl
pop
je
push
sti
call
add
jb
ss
adc
ljmp
push
orl
ja
add
dec
daa
in
sbb
jge
pop
fsubs
xlat
pop
push
and
jno
push
lock
sbb
dec
loop
adc
jns
loop
inc
mov
jns
mov
stos
dec
jl
push
xchg
dec
sarb
pop
dec
ja
mov
jp
pop
jg
adc
iret
adc
xor
mov
leave
lock
bound
inc
mov
out
pusha
cmp
xor
mov
mov
mov
jle
jl
daa
rcr
hlt
mov
into
add
in
sub
out
push
adc
test
pop
out
adc
test
icebp
stc
and
or
dec
mov
inc
int3
adc
outsb
dec
cli
and
lgs
jnp
neg
mov
mov
ficoms
xchg
cmpl
jge
imul
lods
subb
inc
frstor
ljmp
int
andb
inc
push
cli
sbb
push
or
sarl
xchg
sub
fs
pushf
es
cltd
or
pop
cltd
or
pop
out
pop
sbb
sti
push
sbb
pop
das
popf
dec
lds
pop
dec
mov
mov
repz
sub
leave
sbb
cmp
les
test
xchg
pop
aam
fs
pop
aad
sbb
or
gs
sahf
push
rorb
into
aad
mov
dec
xchg
push
mov
xor
jp
cmp
popa
dec
jne
je
inc
daa
xchg
dec
or
test
shlb
pop
inc
fstpl
pusha
jge
fbstp
jb
jnp
add
call
scas
sbb
aad
dec
bound
outsl
adc
sti
mov
lds
dec
mov
rorl
push
sbbb
stos
inc
int3
sub
push
push
mov
fdivrl
loope
sub
shlb
fwait
inc
mov
sti
imulb
cwtl
xor
add
mov
pushf
repnz
ja
lock
jl
bound
push
gs
sbb
push
cltd
mov
mov
sbb
mov
mov
mov
cli
xor
jg
es
push
or
rcrl
sbb
pop
lea
fistpl
out
scas
xchg
mov
js
add
cmpsl
loop
add
je
jbe
loop
cmp
adc
ljmp
xchg
inc
pop
les
mulb
imul
mov
call
push
and
leave
jg
dec
jb
adcl
or
not
or
clc
cmpsl
push
inc
pop
push
call
mov
ds
cmp
ret
pop
testl
jo
xchg
xorl
mov
stc
sbb
cmc
adc
pop
in
adc
mov
popf
movl
pusha
mov
adc
add
ljmp
jmp
in
push
imul
daa
push
data16
mov
imul
es
sub
add
xchg
jno
out
aam
ds
push
or
cmc
std
mov
pop
or
xlat
fsubl
stos
dec
mov
hlt
nop
ret
pop
sahf
popa
in
pop
xchg
adc
pop
js
or
scas
mov
push
xor
ss
hlt
into
leave
mov
push
inc
inc
dec
rorb
sub
fisttpl
adc
in
clc
fwait
jg
mov
rep
call
cwtl
xchg
lods
push
mov
int3
mov
int
xor
inc
dec
addb
iret
and
pop
cmp
xchg
mov
push
hlt
or
in
out
add
loopne
aam
aas
rcll
jg
imul
push
dec
repnz
outsl
addb
and
test
ficomps
in
jle
std
push
and
fdivs
inc
mov
fs
xchg
popf
add
cmp
int
std
jb
pushf
rorl
cmpsl
xchg
loope
mov
aam
lret
jl
and
xchg
lcall
mov
repz
jmp
inc
fwait
shr
jle
repz
das
sbb
movsl
fsubrl
push
testb
test
sub
test
mov
fcompl
xchg
enter
push
or
into
dec
mov
fstp
shl
xor
and
mov
or
mov
adc
dec
pop
dec
push
pop
test
mov
lret
ret
pop
es
dec
fnstcw
jbe
jae
aas
jo
bound
imul
mov
repnz
jns
jnp
mov
jecxz
lret
dec
xor
lahf
mov
pop
popa
inc
cmp
in
adc
movsb
xor
and
pop
mov
bound
or
mov
loop
jne
inc
dec
clc
lahf
push
or
jmp
inc
stc
mov
jge
rcrb
loopne
inc
fcompl
addr16
add
scas
cmp
inc
adc
inc
inc
aaa
dec
imull
cltd
xorl
orl
mov
pop
subl
mov
push
add
fwait
mov
dec
jb
pop
mov
fimull
pop
mov
xor
aam
adc
aaa
out
stos
jno
mov
shlb
push
ret
mov
mov
adc
push
sbb
sub
int3
lahf
in
scas
lcall
jl
push
jbe
fisubl
testb
push
movsl
pop
sbb
push
inc
lret
rcrb
sti
data16
je
imul
xor
clc
jge
fst
push
dec
mov
cmc
fists
sbb
push
hlt
fs
or
jecxz
call
mov
in
adc
mov
mov
or
pop
mov
inc
dec
mov
push
sbb
push
cmpsb
cmp
jb
shl
sahf
adc
cwtl
jns
pop
fists
in
pop
std
xor
mov
push
jl
sbb
xchg
pop
cmp
xor
sbb
pop
inc
pop
mov
cmp
push
sarb
jmp
mov
jae
leave
and
or
rorb
rcrb
ret
outsb
xor
push
movsl
divb
outsl
je
mov
in
lock
movsb
shll
mov
rcll
xchg
ror
sbb
push
das
iret
inc
xchg
pushf
dec
mov
call
push
mov
insl
adc
or
pop
std
sub
imul
mov
sbb
rorl
insb
dec
cltd
shll
or
or
or
cmp
aaa
add
or
int
push
ret
movsb
adcb
cmp
clc
mov
jl
jns,pn
push
testb
fistl
jg
jbe
inc
out
call
es
or
mov
mov
dec
std
xor
jge
add
inc
lret
neg
mov
push
scas
outsb
out
lods
or
ss
repz
nopl
cmp
push
movsl
stos
out
or
ret
sbb
cmp
call
in
jo
call
dec
dec
mov
cmp
cmp
xchg
xchg
jbe
pop
jmp
loope
mov
stos
loop
insl
pop
pop
pop
js
or
xor
jmp
sbb
sbb
popa
fsubr
pop
and
sbb
dec
mov
imul
push
loope
lea
das
loope
add
scas
xchg
ret
mov
adc
pop
sub
cmpsl
jb
popa
ss
out
inc
or
xchg
int3
das
adc
jae
lret
mov
cld
pop
test
or
inc
inc
push
adc
dec
xchg
rcll
inc
push
xchg
push
add
jmp
and
jge
mov
cmp
pop
cmp
cmp
cs
lods
pop
test
adc
pop
sub
xchg
mov
xchg
pop
xor
mov
sub
enter
pop
jb
lret
add
fwait
test
pop
ret
sub
test
inc
inc
xor
aam
xor
sub
stc
div
pop
xor
insb
roll
mov
jl,pt
sbb
insb
cmp
test
push
mov
mov
mov
cmp
push
pop
fisubl
jne
mov
jae
test
cmp
xor
orb
dec
ret
inc
pop
sbb
mov
int
adc
pop
hlt
fistpl
mov
sahf
push
std
out
popf
iret
stos
sbb
mov
outsb
in
ljmp
scas
rclb
and
cmc
nop
adc
jnp
mov
popf
sbb
pop
sub
pop
inc
dec
clc
adcl
mov
les
dec
add
dec
cltd
imul
sbb
mov
arpl
adc
cmp
sahf
adc
sub
sub
dec
popf
inc
xchg
test
subb
shll
not
push
push
or
in
loopne
mov
cmpsl
xchg
adc
cmp
lahf
dec
scas
mov
dec
sbb
inc
jno
xchg
aad
loop
push
pop
outsl
loopne
je
cmpsl
sbb
shlb
bnd
inc
or
incl
pop
adc
mov
add
int3
push
xor
js
push
insb
xchg
xor
repz
insl
out
jp
sbb
or
and
lahf
out
cmp
pop
pop
mov
push
mov
imull
cmp
outsl
pop
and
dec
adc
jnp
push
stos
and
mov
xchg
pop
and
aad
add
push
mov
mov
enter
xor
push
xchg
push
sbb
negb
nop
bound
movsb
sub
inc
sbb
xor
push
std
cltd
jp
aad
push
clc
movsl
dec
add
jp
in
dec
into
adc
sbb
popl
xor
icebp
cmc
push
outsb
in
stc
dec
xor
xchg
ficoml
cmp
test
lods
cld
pushf
xor
jle
jbe
sub
lcall
jecxz
mov
addb
sbb
pop
mov
fwait
mov
push
pushf
mov
sahf
movsl
sbb
mov
cs
sahf
es
jecxz
lds
idivb
mov
push
push
dec
fldl
sub
or
lea
push
xor
int3
dec
cs
jnp
jge
rcll
pop
cltd
jne
call
rolb
dec
mov
in
sub
add
mov
pop
enter
repnz
jns
pop
in
je
aas
lods
push
lods
cs
lret
in
stos
out
push
ror
call
cs
stos
nop
mov
mov
pop
rorl
push
neg
ret
pop
fst
out
cmpsb
and
adc
ds
jge
loope
lock
leave
cmc
in
xchg
or
mov
mov
icebp
daa
inc
jb,pt
pop
scas
fs
dec
incl
fs
dec
cmpsb
inc
insl
jo
pushl
test
and
and
mov
cmp
mov
and
jl
push
enter
out
daa
imul
xchg
pop
aad
scas
and
es
lret
repnz
add
mov
aam
int3
movsb
sub
xor
jae
ss
fcomps
xchg
shrl
iret
mulb
sbb
ficompl
je
fcompl
mov
xchg
call
xchg
dec
lds
ror
push
adcb
ss
pop
pop
sub
test
stos
push
rcll
cli
mov
add
xor
mov
pop
mov
fstps
adc
xorl
stos
call
repz
bound
sbb
or
repnz
movsb
or
arpl
std
das
mov
push
aam
aad
daa
ljmp
and
adc
pop
pop
push
aaa
and
lcall
movsl
pop
shll
imul
cmc
sbb
mov
lea
jle
jbe
cmp
out
movsb
sub
inc
xchg
sbb
ja
adc
mov
pop
fdivrp
cld
shll
dec
dec
dec
les
add
lret
idivl
sbb
sub
subl
into
fbstp
lret
mov
inc
inc
shll
push
cmp
jle
flds
mov
aam
popa
test
stc
pushf
fadds
cmp
mov
cmpsb
jecxz
mov
into
inc
shr
mov
xchg
push
and
jle
gs
idivb
and
out
sub
xrelease
inc
cmpsb
lret
arpl
lods
cld
push
cmp
jo
or
adc
cmp
adc
push
push
inc
int
pushf
aaa
lods
bound
subb
in
push
shll
jl
push
enter
in
jns
sub
js
add
sub
enter
mov
dec
cmp
adc
adc
imul
cmpsb
aad
jl
cmp
or
mov
and
add
leave
lea
movsl
mov
mov
push
rolb
mov
sub
arpl
lret
ljmp
scas
imul
jp
dec
mov
cmpsb
pushf
dec
and
mov
and
xchg
push
pop
je
jl
pop
xchg
pop
inc
mov
dec
mov
sbb
adc
mov
sub
out
sbb
insl
xor
movsb
pop
pop
aaa
call
scas
sbb
pop
xchg
inc
inc
js
push
ss
icebp
add
cld
scas
xchg
cmp
lret
movsl
daa
adc
rorb
mov
imul
loopne
loopne
std
loop
sbb
ret
mov
in
in
xchg
mov
adc
sbb
cmpsb
sti
ficoms
out
mov
das
mov
in
ljmp
mov
cmp
jno
add
data16
inc
jge
push
sbb
lret
sbb
hlt
add
or
test
mov
pop
out
pop
push
bound
add
and
xchg
inc
mov
out
mov
clc
adc
or
add
rcll
jmp
mov
cli
or
push
sbb
dec
test
and
and
and
pop
jno
mov
adc
loopne
scas
shrb
mov
sub
ret
rcll
cltd
inc
repnz
push
sbb
push
jecxz
frstor
popa
es
sbb
jmp
outsb
inc
aas
adc
cmp
xchg
jge
inc
mov
fidivrs
dec
scas
hlt
cmc
cmp
mov
ds
inc
jns
ja
jl
dec
xchg
dec
pushf
aad
leave
add
jl
test
into
xor
and
int3
shrb
sbb
xor
mov
mov
pop
pop
cmp
xchg
or
lds
xlat
enter
das
stos
idivl
cmp
sub
sbb
loope
fcompl
lea
insl
jns
push
inc
or
pushf
mov
jnp
add
fcompl
dec
push
push
scas
cmp
je
fimull
jae
or
cmp
and
xor
lds
cs
xchg
jl
addr16
test
bound
sbb
in
push
in
sub
jg
fnstenv
mov
mov
cs
jae
int
push
cmp
ret
cwtl
mov
xchg
inc
sub
mov
loopne
gs
jae
dec
lahf
pop
dec
dec
adc
jecxz
jno
jnp
pop
test
mov
pop
ljmp
inc
rcr
loopne
cmp
jge
insb
sub
fisttps
mov
loopne
pop
sbb
or
jp
movsb
mov
std
cmp
push
arpl
cwtl
add
div
jae
adc
mov
leave
xor
pop
xchg
loope
mov
push
pushf
push
cld
add
xor
inc
in
shll
imul
fisubrl
sbb
lcall
scas
or
data16
enter
xchg
rcll
out
adc
adc
test
sub
clc
pop
mov
loope
aas
mov
adc
outsl
pop
pushl
push
sahf
arpl
imul
aaa
jecxz
fwait
sarl
push
andb
adc
mov
mov
pop
pop
lea
dec
out
cmp
jp
in
sub
xchg
sub
or
push
or
mov
loope
xchg
push
add
in
and
pusha
xlat
cltd
fbstp
aam
loopne
lock
cmpsb
add
fmuls
mov
into
adc
pop
or
in
mov
outsl
movups
adc
sub
int
jecxz
inc
iret
xchg
popa
pop
mov
daa
sbb
rcr
jne
cmp
xchg
outsb
sbb
jl
rcr
inc
into
mov
fnsave
gs
xor
filds
push
loopne
loop
hlt
push
orb
and
jns
xchg
out
xor
pop
test
outsl
int3
mov
int3
fstp
in
fdivrl
aaa
mov
push
adc
les
loope
ret
xor
shll
xchg
sub
mov
add
mov
test
lahf
jmp
imul
mov
sahf
cmp
inc
or
aas
es
add
inc
lods
dec
stc
dec
fcompl
mov
shrb
repz
mov
mov
jg
bound
push
xchg
mov
out
movsb
gs
fldt
jno
les
xchg
fldcw
or
out
xchg
int
mov
pop
or
mov
xor
cmpsb
add
mov
movsl
cmp
out
orb
test
out
cmp
sub
cli
fsubrs
loop
add
fcomps
in
mov
jp
loop
mov
sahf
mov
fsubr
push
xorl
sbb
test
leave
int
gs
sbb
out
xor
sarb
outsb
scas
cld
sti
push
ffree
je
insb
lret
mov
addr16
lea
shlb
out
test
data16
pushf
sub
dec
xlat
popf
xchg
mul
add
or
aad
adc
adc
out
neg
loopne
sbb
cli
mov
mov
out
in
add
sti
push
out
scas
bound
cltd
mov
aaa
loope
xchg
pop
jo
mov
dec
in
mov
scas
adc
lret
stos
and
mov
sbb
push
imul
rcrl
push
aas
ljmp
lret
xor
je
in
jnp
hlt
lret
push
adc
sbb
sbb
std
ja
xchg
xor
xlat
pop
dec
dec
push
inc
sbbb
pop
adc
jl
icebp
clc
pop
push
les
sbb
pop
leave
outsb
into
ret
mov
cmc
lahf
xor
scas
js
add
out
insb
or
leave
mov
cwtl
fiaddl
mov
and
movsb
imul
lea
arpl
sbb
cwtl
pop
xchg
mov
icebp
mov
js
add
loopne
sbb
xchg
and
aam
inc
popa
sub
aad
imul
pop
xchg
fdivrl
leave
scas
testl
and
in
rolb
test
test
jle
scas
divl
or
ret
ss
xlat
arpl
stc
xchg
jge
out
stc
sub
divl
js
mov
jb
mov
fwait
sahf
mov
add
xor
jp
lods
inc
jecxz
out
pop
outsl
mov
repnz
test
lock
psubb
pop
and
movsb
adc
cmp
mov
xchg
test
test
pusha
xor
stc
jg
divb
and
orl
cmp
pop
jns
clc
testl
out
rcl
cltd
jp
or
push
sti
ds
dec
lret
xor
xor
pop
mov
aam
mov
cli
mov
fwait
shll
jnp
repz
add
jns
sub
mov
mov
fdivs
iret
in
cmp
jb
lret
mov
not
cmpsl
or
cwtl
inc
jb
jecxz,pt
jno
aam
add
jne
add
sbb
mov
add
mov
push
adc
cs
in
ljmp
movsb
aaa
mov
scas
int3
bnd
test
inc
mov
mov
add
test
adc
xchg
shr
mov
xor
adc
xchg
fwait
lcall
jg
jo
test
data16
je
aaa
mov
aas
jno
mov
adc
and
or
dec
sub
lea
and
lret
mov
into
lea
jbe,pn
mov
ljmp
ret
test
jno
sahf
js
fucomip
adc
dec
cli
inc
mov
push
bound
jg
fsubrl
lea
sarb
int
jl
add
adc
nop
cmp
pop
fistpl
sub
jle
aas
pushf
int3
bound
loopne
xchg
xor
ljmp
pop
cs
sub
addb
or
das
mov
sbb
lea
div
mov
lret
mov
mov
push
ss
pop
lret
js
lretw
add
pop
mov
call
jno
push
cmpsl
adc
dec
lock
mov
aam
scas
jnp
adc
inc
jge
popf
push
enter
test
stos
lcall
push
cmp
inc
xor
mov
lock
sbb
ljmp
fisubrs
cs
loop
push
icebp
or
sbbb
ljmp
inc
in
sub
test
mov
dec
pusha
mov
ret
xor
in
lea
lahf
sahf
push
xchg
xorb
xchg
insb
mov
das
mov
jno
loopne
mov
leave
mov
adc
sbb
inc
pop
outsl
mov
cli
pop
or
or
xor
aaa
jne
and
imul
mov
or
mov
hlt
cmpsb
xchg
xor
sarb
add
and
cld
fisubs
xchg
cwtl
pop
test
popf
shll
pop
lds
loopne
add
mov
cmc
cwtl
or
repz
pop
and
jecxz
rclb
rclb
test
push
push
add
mov
and
and
add
jecxz
pop
jg
xor
cltd
pop
mov
adc
negb
xor
ret
mov
jno
in
adc
push
setae
test
stc
nop
je
test
or
add
outsl
out
push
pop
mov
leave
sti
insb
nop
stos
lret
push
test
pop
push
sbb
rcrl
les
sub
dec
or
mov
pushf
push
or
adc
repnz
loopne
xor
cltd
sub
jl
imul
outsl
call
out
inc
mov
test
lcall
add
jo
xorl
xor
mov
push
mov
into
fucomip
sbb
int
mov
xchg
pusha
dec
dec
fldenv
enter
pop
mov
into
jbe
or
pop
inc
mov
inc
lret
sbb
dec
arpl
dec
sub
cmp
and
dec
ds
or
scas
sbbl
cltd
adc
cld
pop
cmpsb
pop
or
adc
inc
xchg
popf
out
and
jne
lds
mov
pop
xorl
push
fadds
pop
and
divl
addr16
loop
mov
out
xchg
push
mov
adc
das
fisubrl
cli
pop
rorb
jg
bound
insb
aas
mov
into
mov
leave
xor
movsb
cmovne
cmp
faddl
push
fucom
and
cltd
je,pn
out
ja
xor
mov
xor
pop
sahf
xchg
add
pop
xchg
push
cld
cmp
imul
cmpsb
push
inc
jecxz
push
ds
inc
fstpt
vpshufhw
jo
cs
loop
dec
fcoms
mov
cmp
mov
ja
push
adc
bound
out
out
hlt
stc
ret
sbb
lds
xchg
adc
hlt
mov
xchg
and
int3
test
pop
push
in
sbb
nop
sbb
push
scas
bound
sbb
fdivs
push
inc
xlat
out
mov
inc
xchg
sub
adc
jmp
xor
mov
xor
mov
jae
inc
xchg
je
es
pop
popa
pop
add
push
adc
xchg
pop
and
and
mov
lret
inc
sarb
add
je
mov
in
push
inc
push
inc
inc
fists
movups
les
sbb
or
push
xchg
lcall
or
mov
pop
in
mov
lcall
add
sbb
fbld
ss
or
jno
or
pop
xor
jmp
mov
push
inc
cmpl
dec
ss
adc
fdivr
or
dec
das
ss
sbb
jno
sbb
insl
insl
xchg
mov
lcall
stos
push
push
pop
lods
outsb
jo
sub
dec
pop
and
and
pop
jns
add
shr
jnp
pop
fistps
fcmovu
pop
loop
jns
inc
add
fists
or
pop
dec
inc
leave
pop
ja
jb
ret
mov
ficomps
sbb
js
mov
sbb
lcall
test
scas
inc
imulb
push
ror
pop
inc
sub
hlt
cmpsb
xchg
repz
call
jge
mov
cmp
push
arpl
das
and
and
xchg
inc
gs
fstps
mov
and
jmp
xor
mov
inc
xor
pop
xor
ljmp
jno
mov
inc
rolb
push
inc
push
ret
mov
sub
mov
xchg
call
mov
fcmovb
mov
fdivrl
aam
nop
mov
in
mov
imul
mov
and
pusha
scas
imul
loope
hlt
das
pop
mov
repnz
xchg
inc
mov
mov
push
cmpsb
cli
mov
out
aaa
gs
mov
jnp
insl
sbb
mov
in
imul
or
sbb
xor
lcall
adc
sbb
jb
cmp
bound
inc
dec
shll
pop
jae
sbb
add
jmp
repnz
lcall
imul
jl
pop
pop
std
pushf
lods
xor
test
in
arpl
pop
xchg
out
ds
jb
push
and
xor
cmc
cmpsb
cmp
pop
addl
inc
jns
dec
cmp
and
sub
shrb
outsl
fwait
sbb
push
mov
test
shrb
dec
mov
sbb
xchg
out
sub
mov
lcall
mov
and
hlt
jg
mov
cltd
mov
das
add
pushf
jbe
pop
mov
or
push
movsb
pop
call
jle
shr
sbb
xlat
cwtl
or
cld
push
setl
cld
bound
push
mov
xor
add
dec
in
xchg
ret
dec
test
mov
inc
xor
push
sub
mov
faddl
ror
fwait
mov
jg
pop
jae
cmp
out
stc
outsb
es
loope
test
fstps
mov
jge
test
stos
mov
jmp
jns
data16
std
addr16
push
movsl
adc
jbe
or
jne
imul
push
dec
pop
xor
in
fs
cs
push
pop
iret
push
ljmp
cwtl
dec
movsl
cltd
jb
repnz
xchg
pusha
sbb
add
addr16
je
jns
test
out
or
sub
loop
mov
mov
cmp
dec
stos
sarl
inc
push
stos
push
and
and
push
clc
scas
cmp
adc
cltd
nop
cmp
stos
xorb
mov
loope
dec
jp
mov
xchg
pushf
pop
add
inc
je
ljmp
lcall
jo
sbb
push
aaa
cmp
rcr
rcrl
pop
mov
add
loop
and
mov
cmpsb
mov
fisubs
aas
cmp
jns
leave
repnz
popf
outsb
pop
repz
subl
xchg
xlat
data16
std
js
mov
xchg
lea
lock
arpl
test
mov
arpl
jecxz
cmc
fisubrl
pop
dec
outsl
int3
dec
xchg
in
in
jno
dec
inc
icebp
ja
push
add
pusha
fcoml
loopne
inc
pop
mov
mov
adc
jecxz
xchg
mov
mov
sub
inc
sarl
scas
pop
add
jns
mov
pop
push
cmp
push
mov
or
sarl
inc
xchg
mov
lods
cli
ljmp
sub
push
movsb
in
jg
sub
jmp
and
xor
sbb
jae
shr
mov
das
pop
and
mov
lea
push
loop
add
add
cmc
fucomi
mov
nop
add
push
mov
imul
mov
lods
dec
sub
mov
movsl
inc
int
and
cwtl
and
mov
fs
mov
loope
adc
test
xchg
stos
ret
pusha
xchg
das
popa
sub
int3
cltd
adc
dec
sub
pop
pop
mov
fcoms
push
nop
pop
xchg
sahf
les
push
xor
xor
js
mov
fldl
std
ret
push
mov
into
push
mov
xor
xchg
cmp
push
call
add
das
mov
mov
mov
aaa
or
jb
les
cmpsl
sbb
aas
jb
and
and
and
inc
cmp
pushf
mov
imul
jp
add
mov
mov
jmp
xor
das
lods
inc
shrl
add
cmc
in
inc
daa
jbe
out
jecxz
sbb
pop
cmp
ljmp
cltd
xchg
mov
sbb
xchg
dec
and
das
fldl
shrb
int3
add
jbe
push
mov
pop
or
push
xor
push
ja
sub
mov
push
bound
enter
loope
fcmovbe
dec
pop
pop
inc
orl
push
jo
or
mov
cld
dec
pop
es
daa
mov
sub
scas
fs
push
dec
sub
push
xchg
push
inc
ljmp
pop
sbb
negb
rolb
inc
out
sbb
mov
and
and
shrd
xor
fadd
sbb
fldcw
hlt
adc
mov
sbb
mov
in
or
shll
mov
push
xchg
mov
fimuls
les
cwtl
aaa
cmp
xor
mov
mov
ret
inc
shlb
adc
mov
sbb
xchg
xorb
sbb
test
inc
sti
sub
mov
mov
push
xchg
mov
mov
or
jno
ficompl
nop
ret
ret
or
mov
shll
jmp
test
int
and
ja
cld
pop
aam
js
push
out
xor
pop
leave
out
fdivr
push
mov
push
adc
lahf
inc
push
push
mov
xchg
cmp
mov
mov
inc
push
out
cmp
push
icebp
cld
sbb
aaa
jae
pop
pop
nop
add
push
test
mov
push
stos
mov
cmpsl
lret
jae
fnstsw
stos
sbb
pop
push
xor
mov
addr16
or
cs
sbb
imul
lret
call
iret
out
adc
jle
push
loop
shll
mov
mov
mov
in
sbb
mov
movsl
inc
xchg
fcmove
sbb
pop
sub
sub
adc
mov
sub
cmp
xor
dec
dec
adc
push
js
lret
sbb
jns
jne
inc
fcmovb
mov
nop
mov
adcb
push
aaa
inc
jmp
ret
mov
mov
gs
inc
fisubl
sub
adc
dec
adc
cmp
imulb
aaa
loop
enter
gs
xor
mov
adc
movsl
repz
jp
inc
pop
add
in
jle
or
shrb
bound
mov
dec
sbb
pop
adcl
dec
mov
test
pop
movsl
loope
mov
pop
mov
ljmp
cmpsl
dec
push
lods
add
inc
jl
push
cltd
dec
jo
in
pop
imul
add
aaa
jecxz
mov
fistpl
pop
inc
das
xor
pop
adc
xchg
mov
xor
xor
and
push
dec
pop
push
inc
pop
mov
std
jge
loop
test
cmp
and
pop
shll
ja
setg
xor
pushf
mov
sub
mov
loop
mov
adc
cltd
insl
lret
out
call
lods
mov
lret
stos
ja
je
add
icebp
sbb
in
data16
pop
inc
subl
mov
rcrb
jo
sbb
push
pop
xor
xchg
scas
int3
xchg
arpl
lods
jnp
xchg
and
loope
pop
xor
and
int
and
jp
push
scas
scas
rcll
out
out
jne
xchg
adcl
mov
cmp
pusha
fimull
mov
test
xor
mov
imul
mov
xchg
or
mov
or
xor
das
popfw
pop
fst
jb
mov
jno
mov
mov
repnz
push
je
imul
adc
cld
adc
ss
repnz
dec
push
les
add
pop
inc
je
lds
push
mov
dec
mov
mov
mov
nop
fisttps
lds
outsb
inc
cmp
xchg
idivl
mov
movsl
arpl
sbbl
ja
out
jbe
in
addb
cltd
lock
aas
pop
mov
push
aas
inc
add
test
loopne
inc
rcrb
xchg
lret
imulb
cmp
xchg
dec
push
clc
scas
pop
stos
lods
popf
test
mov
pop
dec
das
adc
mov
sbbl
insb
in
adc
xor
out
mov
orb
add
lds
cmovle
imul
arpl
mov
mov
pop
pop
jnp
stos
es
scas
out
inc
inc
xorb
test
or
addb
sbb
or
subl
add
xor
dec
sbb
lret
mov
pop
subl
out
shrl
inc
push
cmp
shrb
test
mov
dec
sbb
mov
fcmovnu
inc
push
js
jmp
ret
jae
xchg
sub
mov
fimuls
mov
xchg
leave
icebp
cmp
lahf
sub
mov
mov
pushf
sbb
notl
mov
loope
mov
aam
fucomi
jo
lret
xchg
add
pop
pop
xchg
rorb
stos
mov
rolb
push
rolb
mov
rep
jle
scas
ljmp
cwtl
cmc
mov
push
push
jle
test
aad
frndint
test
mov
push
jb
stos
xchg
out
lods
addb
adc
shr
leavew
xchg
out
mov
mov
pop
xor
mov
jbe
xor
push
mov
out
clc
xchg
notl
dec
data16
push
xchg
or
je
test
and
pop
sbb
push
lcall
xchg
movsb
pop
adc
jo
fimull
cmp
jns
movsl
mov
cltd
fiadds
pushf
jecxz
pop
jmp
cld
lds
cmpsl
loop
inc
in
fmul
pop
mov
dec
outsb
mov
or
ljmp
loopne
aaa
cmc
nop
loopne
scas
mov
adc
mov
jae
xlat
jecxz
mov
fisttpl
decb
ljmp
test
xchg
jno
neg
sbb
mov
gs
sarl
mov
fsubrs
je
popf
pop
push
cli
and
mov
sbb
in
scas
sahf
out
arpl
adc
cs
fwait
shlb
pop
jle
mov
add
shlb
es
cmc
mov
add
nop
sub
mov
xor
mov
arpl
les
cltd
jmp
loopne
icebp
xchg
xor
xchg
sub
mov
into
rcll
inc
hlt
xchg
inc
addl
adc
fldt
push
in
lret
loope
lret
sbb
lods
ljmp
jns
dec
into
jo
inc
sub
into
push
or
inc
pop
fs
aad
loope
push
adc
adc
fsts
leave
cltd
xor
cmp
mov
incl
jmp
scas
jmp
loopne
inc
and
jbe
mov
or
sub
nop
dec
fwait
or
les
mov
dec
cli
arpl
xchg
in
mov
rcrb
xchg
fistpll
popf
or
les
adc
adc
in
mov
es
test
repz
shlb
loope
movsl
mov
push
fiadds
fimuls
fdivl
and
movsb
js
mov
int
in
test
pop
ret
fldl
divl
push
xor
sbb
and
ret
inc
sub
push
out
outsb
push
or
xor
fsub
rorb
adc
and
mov
into
mov
cmp
pop
and
mov
sub
les
arpl
jmp
out
cmp
lret
mov
pop
sbb
test
pushf
out
insb
mov
and
in
pop
lret
mov
push
cmp
int
scas
sbb
cmp
cmp
loope
pop
pop
xor
lcall
loope
and
xlat
sti
pop
jo
aas
xchg
imul
dec
inc
jnp
jp
ret
pop
push
jae
xor
out
in
inc
adc
fnstenv
jle
stc
out
jg
mov
push
inc
mov
add
outsl
cmp
or
int
movsb
dec
ret
jp
jmp
adc
push
insb
pop
jne
jns
lret
ret
pop
rcr
cmp
cmpsb
jg
aad
popa
push
adc
addr16
ds
adc
lock
fildl
call
inc
xchg
adc
aad
xor
insl
dec
xchg
inc
dec
adc
iret
mov
js
and
push
pop
shl
jno
cmp
sub
mov
aam
shlb
xchg
and
int
notb
ljmp
mov
lret
jp
std
xor
add
iret
movsl
pop
ds
mov
call
fmulp
cmp
adc
addr16
dec
mov
xchg
push
jecxz
pop
cld
push
sbb
cld
gs
and
leave
push
xor
sub
mov
xchg
ljmp
outsb
pop
or
int3
test
mov
test
fstpt
cmp
or
mov
push
lcall
gs
sbb
mov
inc
dec
ffree
inc
out
xor
aad
push
cmp
jnp
hlt
mov
out
or
or
hlt
mov
dec
insl
leave
sbb
aad
inc
add
repz
and
sarb
xor
or
in
dec
inc
rcll
rcl
rolb
pop
inc
out
addb
adc
adc
out
sbb
add
sbb
pop
inc
lret
sub
xchg
out
sub
and
lcall
outsb
aam
rclb
dec
mov
xor
hlt
inc
adc
int
into
aaa
sub
insl
insl
addb
dec
js
aad
mov
cmpsl
inc
cmp
jbe
das
dec
adc
movsl
in
xchg
cmp
adc
add
sub
xchg
mov
rorb
iret
adc
enter
xor
mov
xchg
dec
and
xchg
mov
jmp
mov
jns
fdivrs
cltd
add
push
cmc
popa
xchg
dec
jnp
jmp
movsl
inc
xlat
mov
inc
lock
sbb
data16
jnp
xchg
out
pop
pop
push
mov
add
imul
enter
inc
int
outsb
xchg
inc
sbb
push
into
out
pop
jle
lcall
ret
icebp
jae
cld
fdivrs
sub
sti
dec
addr16
push
ret
addr16
or
outsb
sub
insl
addl
je
pop
outsb
test
dec
adc
cmpsl
or
loope
dec
xchg
lea
mov
fs
inc
adc
cmpsl
jl
insb
decl
mov
aas
ljmp
cmp
insb
in
jne
nop
mov
mov
jl
jmp
cld
stc
fcmovu
sbb
fidivrl
dec
xchg
sti
out
dec
inc
adc
lds
lahf
loopne
mov
js
inc
and
je
loope
mov
roll
aad
insb
mov
popa
imul
pop
es
pop
dec
lods
mov
sbb
in
cmp
incb
ror
out
jae
insl
or
sbb
jnp
js
js
jg
xor
jae
in
sbb
shrb
addl
int
mov
repnz
or
es
xor
cld
loope
sub
das
and
mov
insb
mov
loope
bound
sbb
xlat
lea
ja
xchg
dec
mov
int
push
mov
aad
adc
cmpsb
fistpl
mov
xchg
cltd
jns
pop
stos
mov
xor
enter
mov
frstor
sub
mov
jge
xor
gs
add
mov
repz
jmp
inc
xchg
das
xor
sahf
test
lcall
dec
scas
aam
mov
int
cli
repz
mov
rcrb
xchg
stos
arpl
lahf
cltd
mov
rcll
loop
enter
or
insl
push
pop
cwtl
cmp
leave
cmp
xchg
test
les
sbb
repz
gs
inc
mov
aad
loope
dec
add
fnstcw
sar
ret
inc
push
pop
cld
and
cmp
imul
shlb
loopne
loopne
or
leave
jg
stos
int
loopne
lock
dec
rorl
inc
popa
pop
or
lods
dec
in
test
mov
pushf
sub
mov
pop
ja
and
enter
frstor
jge
inc
ljmp
aaa
enter
scas
loope
add
xchg
adc
dec
dec
xor
or
jne
or
push
xchg
jns
leave
or
push
dec
xchg
mov
inc
data16
fnstcw
sbb
lcall
sbb
add
addb
cmpsl
ja
hlt
lret
xor
lret
cli
xorl
dec
cmp
add
je
and
mov
cld
repz
gs
add
mov
jp
mov
mov
lret
xor
data16
jmp
mov
pop
es
push
mov
sbb
adc
xor
sarl
dec
shrb
aaa
in
mov
cmp
enter
push
jp
mul
push
mov
sti
adcb
xchg
xor
pop
inc
shl
pop
rep
adc
push
jecxz
ret
adc
inc
enter
loopne
xchg
sub
pop
xor
aas
test
enter
in
xor
hlt
xorl
iret
mov
fcmovnu
sub
test
fsubr
jb
test
adc
nop
iret
cltd
xchg
or
xchg
fiaddl
frstpm(287
addb
pop
fs
adc
jp
rcrb
mov
insb
inc
es
sbb
ljmp
pop
xor
push
in
jb
cmp
cld
std
aad
xor
test
js
jmp
mov
scas
xchg
mov
dec
fsts
mov
sub
stc
sub
pop
mov
sbb
sbb
rcll
jecxz
fildl
pop
test
dec
pop
stc
adc
les
inc
ficoms
xchg
mov
das
jbe
dec
cmpsb
incl
out
push
xor
cmp
lahf
rclb
jbe
in
xchg
adc
sahf
jg
or
and
cmp
push
adc
jl
insb
pusha
das
das
push
lcall
adc
or
ret
lret
mov
inc
insb
testl
das
arpl
cld
das
or
or
mov
setp
and
fdivl
out
cld
das
pop
cmp
mov
sahf
cwtl
testb
push
push
fistpll
add
xor
push
mov
or
jae
lock
dec
add
fldl
sbb
jle
outsl
or
in
mov
je
xchg
dec
jl
pop
add
inc
testl
bound
pop
dec
inc
les
inc
push
or
inc
negl
jbe
adc
fists
or
js
jno
pop
push
fisubl
stos
mov
inc
out
dec
clc
clc
lahf
inc
mov
push
gs
daa
mov
outsb
aam
and
mov
jae
ret
jo
jl
iret
repz
push
pop
daa
jmp
push
jne
xchg
sub
add
push
sbb
inc
imul
cmp
push
std
xchg
out
mov
cltd
xlat
clc
int3
push
push
int3
lcall
addr16
mov
loope
out
cmpsb
push
add
rolb
fcmovu
push
jbe
loopne,pt
adc
clc
lret
jae
jns
ror
jmp
cs
dec
xor
shrb
lds
jmp
in
aaa
sbb
dec
nop
or
sti
lea
in
cld
out
jecxz
xchg
push
insl
sub
leave
push
sub
es
loope
fwait
add
jge
mov
mov
out
lds
mov
mov
xchg
push
cmp
sub
frstor
test
lcall
add
xchg
mov
mov
inc
loope
and
hlt
data16
test
inc
out
lea
test
mov
mov
inc
iret
adc
adc
xchg
stos
dec
jno
es
sub
xchg
sub
pop
push
movsl
or
push
inc
sbb
es
iret
adc
xor
cmpb
loopne
sub
out
sbb
hlt
xor
pop
ror
jne
pushf
mov
popa
cmp
sti
sbb
pop
fldcw
xchg
incl
jmp
or
lahf
das
bts
mov
ret
xchg
sub
cmp
addb
cld
xor
xorl
inc
mov
sbb
sbb
repz
loope
int
insb
arpl
xor
mov
cmpsl
in
daa
mov
jbe
imul
pusha
lea
out
out
push
insb
loope
mov
jecxz
mov
ficompl
popl
cltd
or
imul
xor
or
aam
push
dec
aam
dec
dec
dec
mov
and
dec
call
xor
push
xor
pop
xchg
xlat
xchg
out
sbb
cmc
std
scas
scas
cmc
push
or
mov
xor
push
aas
test
push
test
enter
call
cwtl
and
je
jecxz
xchg
jmp
push
enter
jg
fnstsw
cmpsb
lcall
xchg
cmp
inc
mov
js
je
cmp
adc
xchg
jae
and
jns
js
js
mov
pop
cld
fcmove
in
push
cmp
sub
jle
cld
pushf
lret
xor
cmpsb
clc
outsb
push
loopne
fiadds
dec
xorb
push
sbb
xor
jmp
rcll
movsb
mov
dec
mov
lcall
pusha
mov
loopne
pushl
jne
pop
dec
mov
and
mov
fisubs
dec
enter
mov
data16
int3
mov
jno
push
dec
movsl
out
je
cmp
imul
loope
fistl
pop
mov
jp
sub
fs
pop
out
sub
mov
scas
jmp
stos
mov
mov
outsb
fdiv
push
mov
cmpsl
call
movsb
mov
xchg
call
dec
nop
sbb
out
jl
sahf
jmp
pushf
cltd
adc
mov
stos
dec
ja
lock
aaa
push
fwait
jb
or
pand
cwtl
lahf
mov
lods
sahf
inc
push
scas
cmp
xor
cmp
pop
sar
pop
imul
pop
fadd
push
mov
sbb
fcoms
cmpsb
push
xor
xchg
dec
add
aas
sub
mov
lcall
das
out
dec
sbb
dec
xor
dec
and
jmp
mov
movsl
jno
lock
gs
push
adc
call
mov
mov
stc
ret
adc
jmp
insb
cli
je
addr16
push
push
mov
dec
sub
into
and
or
add
push
mov
cmc
fsub
stc
fcmovb
stos
or
mov
cltd
int
adc
gs
aad
push
and
out
add
xor
cmpsl
setb
sahf
lret
fiaddl
sti
out
pop
cwtl
repz
std
mov
sbb
jmp
adc
iret
imul
pop
ss
xchg
hlt
gs
pop
daa
mov
shrl
pop
and
loope
push
pusha
jbe
pop
aaa
cli
xorb
scas
into
push
icebp
push
mov
std
arpl
shll
dec
or
push
stc
out
int3
and
sub
int3
fiaddl
out
xorl
pop
mov
insl
ja
push
cmp
in
fisttpll
sub
adc
test
aaa
xchg
xor
orb
mov
push
jb
daa
stc
jno
sbb
bound
jns
outsl
mov
daa
or
in
loop
xor
test
lcall
push
repnz
lcall
xor
stc
xchg
sub
popf
pop
aas
or
add
jne
xor
inc
adc
inc
push
inc
or
rorb
xor
fdivrl
cmp
mov
popf
nop
push
fists
fwait
stos
push
sub
jo
cwtl
cltd
push
push
cmp
xchg
divl
xchg
faddl
sbb
pop
lods
popa
bound
mov
ljmp
xor
jmp
dec
sahf
push
rcll
pop
adc
sti
aas
in
xor
dec
push
sbb
dec
and
push
push
mov
insl
fisubl
fwait
or
add
push
fcmove
test
pushf
dec
ljmp
jl
pop
sahf
mov
leave
sbb
xlat
ja
inc
shlb
stc
xor
es
gs
or
stos
xchg
push
sahf
into
push
ffree
mov
cwtl
adc
sub
xor
jmp
loope
inc
lret
adc
sub
jae
pop
xchg
mull
xlat
adc
ja
mov
xor
gs
outsb
mov
xor
lds
jns
xchg
or
pop
outsb
sarl
pop
mov
bnd
cmpsl
push
in
stos
icebp
orl
pop
cmpb
mov
cmp
cld
stc
push
cmp
mov
dec
sbb
in
push
call
or
jecxz
push
mov
or
xor
fisubrl
xchg
cmp
loopne
out
mov
ja
fwait
jmp
sahf
mov
xor
mov
mov
pop
mov
in
sub
adc
jle
fidivs
push
or
outsl
adc
push
inc
into
aaa
lods
ret
jl
lods
adc
xchg
mov
mov
mov
or
mov
cmpsl
jno
jecxz
arpl
cwtl
xor
loop
lret
mov
shrl
mov
mov
mov
mov
or
nop
sti
sbb
push
jmp
xchg
mov
lcall
fistpl
gs
xor
out
jecxz
arpl
mov
cld
add
test
inc
and
rol
jle
es
bound
or
sub
or
cmp
mov
push
cmp
xor
xlat
ret
and
xchg
mov
movsl
push
cli
mov
or
fdivr
jo
sbb
xchg
addr16
jle
jle
mov
in
fmull
push
cmpsl
mov
adc
inc
cli
stos
add
mov
pop
inc
cmpsb
jp
aam
add
call
movsl
adc
adc
dec
cmp
sub
js
test
inc
pop
push
mov
fcmovbe
jae
lahf
loop
push
inc
mov
imul
test
mov
push
fistps
outsb
xor
mov
fimull
lret
lret
dec
insl
fnstcw
lods
or
je
mov
inc
jecxz
aad
pop
sarl
ds
rorb
int3
ficoml
fistps
cltd
cmp
jns
into
jbe
cs
add
sub
cli
mov
xorl
mov
adc
jecxz
fildll
pop
cs
lea
mov
push
sub
xor
sub
xchg
jle
adc
subl
int3
cltd
loopne
outsb
and
inc
and
das
dec
dec
clc
cmp
imulb
cmpsl
adc
jb
mov
aaa
jge
lret
fcmovbe
add
arpl
popf
into
out
cwtl
mov
scas
aas
xor
addr16
sub
icebp
push
data16
or
mov
leave
inc
adc
jno
jle
aas
inc
stos
mov
cmp
adc
insb
ret
insb
popf
repnz
in
cmp
int
in
and
gs
adc
inc
clc
adc
jle
aaa
icebp
pop
inc
fcmovb
aam
jp
and
mov
push
out
dec
mov
mov
repnz
mov
filds
adc
or
lret
cltd
xchg
cmp
in
adc
sahf
bound
add
cld
jae
ljmp
les
adc
inc
es
lods
dec
pop
rorl
jge
pop
sbb
stos
sub
pop
outsl
repz
stos
es
jns
push
or
mov
adc
jg
cmp
add
pop
cld
jle
xchg
cld
or
ja
fwait
push
incl
nop
mov
dec
rcrl
ljmp
xlat
int
cmc
and
cmp
mov
jno
shrl
out
jmp
xor
add
cmp
adc
push
mov
frstor
inc
xor
dec
movsl
add
mov
in
mov
ret
std
and
push
icebp
arpl
lcall
cwtl
je
cmp
push
aam
cltd
jg
cli
push
xchg
enter
or
std
mov
sahf
cmp
fidivrs
in
push
pushf
mov
push
cwtl
ss
cwtl
and
bound
or
push
jg
enter
sahf
xor
sarb
cli
hlt
rolb
dec
mov
mov
mov
push
cmp
mov
mov
pop
cmp
xchg
lcall
sbb
cmpsb
xchg
mov
cmp
lahf
dec
into
fdivrs
inc
sti
xchg
repnz
lahf
jne
push
lea
mov
mov
test
outsb
push
sbb
cld
lcall
loope
repnz
jp
sahf
dec
ja
cmp
mul
jle
xchg
sub
pop
out
pop
outsl
pop
outsl
or
aaa
inc
rolb
mov
cmp
and
nop
or
add
inc
arpl
pop
out
cmp
pop
sub
pusha
sub
popa
cli
push
js
adc
sahf
aaa
lahf
popa
or
push
push
ret
daa
sub
pop
imul
or
shlb
jbe
rol
mov
add
loop
push
push
ret
arpl
adc
jne
rclb
push
xor
cmpsl
loopne
mov
pop
add
pop
out
rorb
addr16
sub
addr16
imul
push
and
mov
lods
fldcw
pop
jp
das
ljmp
movsl
cmpsl
or
mov
push
xor
push
pop
push
and
mov
xor
cmp
jmp
dec
cmp
pop
xchg
pop
push
out
jl
or
dec
push
insl
ljmp
cli
push
sbb
scas
repz
imul
and
xor
scas
leave
mov
cmp
mov
jb
push
outsl
dec
test
or
mov
enter
pop
push
mov
mov
repnz
add
inc
mov
loop
cs
iret
dec
xlat
enter
and
faddl
dec
sti
xchg
enter
sub
aas
test
dec
dec
xor
aaa
xchg
clc
add
xchg
inc
imul
je
cmp
jne
sub
xlat
std
icebp
pop
push
aad
sub
sub
inc
testl
adc
mov
cwtl
and
sbb
dec
stos
pop
hlt
fidivl
mov
lea
mov
imul
mov
rcl
xchg
jmp
mov
nop
shl
pop
mov
stc
inc
into
and
bound
out
push
mull
mul
dec
and
sub
push
xchg
push
pop
push
sbb
push
sbb
lods
dec
cmp
js
push
push
or
push
add
outsb
stos
int3
stos
adc
dec
fldcw
adc
mov
lds
or
call
fists
out
lods
orb
sub
sub
das
pop
ret
adc
shlb
cwtl
add
or
scas
xchg
test
fs
lock
cmpsb
lahf
or
pop
scas
and
lea
jg
lcall
mov
es
mov
adc
stos
popf
pop
xor
push
fdivs
cld
cmp
loop
pop
out
adc
nop
dec
pop
mov
sbb
push
imul
inc
dec
repz
jl
mov
js
mov
aas
sti
out
add
push
scas
mov
test
mov
arpl
aad
push
andb
mov
cmpsb
cwtl
stc
shll
sbb
imull
jecxz
adcl
sti
lret
insb
out
mov
fsubs
xchg
and
mov
fs
loopne
fidivs
push
inc
inc
sub
jno
aad
idivb
fucomip
clc
or
out
add
mov
data16
jmp
and
pop
cmc
adc
scas
add
arpl
lahf
and
push
dec
js
push
cltd
cmc
cmc
call
test
loop
call
adc
shrl
leave
push
pop
add
mov
js
push
movsl
jns
iret
push
xchg
int
mov
and
std
and
lret
sub
mov
xor
mov
movsb
stos
mov
out
push
xchg
sub
mov
pusha
shlb
jmp
shll
cmp
fwait
mov
push
sbb
js
out
cmpsl
test
shll
cmc
mov
mov
sub
adc
or
jno
les
lods
xchg
pop
lfs
cs
inc
add
push
mov
adc
sbb
cltd
out
xchg
xchg
add
pop
pusha
enter
enter
leave
insb
das
xchg
outsl
inc
or
lods
lret
dec
ds
xchg
mov
outsb
icebp
or
jecxz
push
and
adc
rclb
or
out
stos
cmp
rcll
ret
add
jmp
add
repnz
jb
sbb
push
stos
mov
add
jecxz
fwait
adc
dec
mov
sub
fistpll
fists
bound
xchg
imul
dec
popa
jp
jg
mov
jmp
sub
arpl
mov
and
aas
mov
out
sub
inc
push
subb
push
pop
xchg
xorb
pop
push
push
icebp
imul
or
mov
inc
push
les
xor
lret
mov
cli
and
push
loope,pt
int
jo
adc
popa
pusha
sarb
insl
nop
arpl
mov
cmpsl
mov
dec
mov
mov
xchg
mov
mov
cmp
cmp
dec
or
sti
xchg
bound
iret
in
xlat
jl
sbb
xor
js
dec
js
mov
push
cwtl
pop
sti
movsl
outsb
lcall
mov
das
jl
test
movsb
fcomp
cli
addr16
les
pop
xchg
insl
ss
push
add
jge
mov
pop
repnz
ljmp
xor
stos
addr16
or
shll
test
outsb
movsl
add
add
outsl
pop
leave
and
aaa
inc
arpl
js
inc
int3
std
shr
sbb
sub
insb
mov
xlat
fcmovb
mov
icebp
inc
mov
adc
idivl
movb
loopne
jb
in
xchg
xchg
inc
test
jle
std
push
idivb
mov
mov
ret
inc
sbb
pop
lds
js
push
call
dec
out
mov
mov
and
push
add
mov
fld
push
clc
cmp
lret
imul
push
rcr
in
mulb
sbb
inc
loop
xor
lahf
inc
cwtl
fsts
and
mov
cmp
sub
push
or
sbb
and
iret
and
mov
and
inc
arpl
mov
sub
je
sub
xchg
ret
mov
inc
add
push
adc
sbb
sbb
clc
hlt
xchg
es
mov
data16
out
inc
cmp
dec
daa
test
pop
jmp
mov
add
in
jl
lods
inc
dec
dec
mov
push
push
sti
and
lds
mov
out
ror
pop
js
jo
loopne
popf
rclb
in
lahf
inc
add
mov
test
scas
jmp
ret
sub
inc
movsb
sub
push
ds
inc
pop
stc
add
push
and
xchg
call
lahf
mov
mov
mov
xchg
fmull
inc
pop
into
je
mov
sbb
cmp
xchg
mov
push
movsl
gs
or
repz
xor
notl
sbbl
xchg
ds
mov
sub
jnp
repnz
loope
scas
les
rclb
push
aam
adc
mov
out
repnz
js
cmp
dec
lods
mov
js
jg
mulb
mov
mov
outsl
xchg
nop
sub
jo
fiadds
cwtl
adc
mov
cmp
es
imul
outsb
mov
sbb
xchg
std
mov
dec
lock
mov
das
dec
imul
mov
push
sbb
pop
aaa
xor
out
xor
jge
lea
xchg
std
and
xlat
cmpsb
mov
jnp
pop
outsb
addl
adc
insb
outsb
sbbb
arpl
adcl
xor
add
xor
xchg
add
xchg
xor
popf
jbe
leave
mov
xor
and
cld
cld
adc
gs
cld
sarl
movsb
cmp
mov
and
sahf
push
out
adc
xor
les
cmp
ficompl
and
mov
mov
scas
mov
lea
imul
push
xchg
nop
and
push
cpuid
add
push
xlat
mov
push
sub
insl
mov
jle
mov
in
into
daa
cmp
xor
mov
xor
xor
and
ljmp
fadd
insl
fcoms
inc
rcr
adc
sub
sub
cltd
push
xchg
fsubs
arpl
mov
cltd
in
mov
iret
push
out
jno
inc
test
jg
ja
test
mov
fs
pop
cltd
cltd
clc
cmp
xlat
movsl
add
lret
ret
add
cwtl
call
loopne
aad
jp
out
mov
fsts
dec
jns
dec
shll
ds
imul
xor
xchg
xchg
cmp
xchg
das
push
push
not
scas
jge
pop
imul
sub
sbb
sbb
inc
insb
cmp
inc
mov
push
daa
cmc
test
xchg
test
push
movsb
or
pop
pop
incb
and
pushf
mov
rcrl
cmp
mov
push
pushl
sbb
jmp
sbb
les
xchg
mov
into
mov
ds
ret
out
dec
mov
ret
mov
test
addb
dec
fldcw
pop
mov
cmp
jp
xchg
test
cmp
pop
les
ret
or
mov
jge
mov
enter
iret
dec
hlt
out
std
inc
int3
les
xchg
fstpt
adc
rol
gs
imul
jbe
mov
mov
scas
int3
pusha
jmp
pop
mov
pop
hlt
aas
xchg
movsb
dec
iret
loope
xchg
or
cmp
pop
mov
mov
ja
mov
data16
sbb
inc
xchg
add
push
xor
jmp
lock
lods
ret
cmp
mov
pop
aaa
or
ljmp
out
aas
adc
mov
stc
adc
nop
push
shl
mov
dec
pushf
popa
call
test
mov
jno
mov
pop
loopne
add
xor
lea
sbb
push
mov
xlat
sub
es
lea
add
jns
pop
fnstcw
sub
incb
pop
mov
xchg
mov
mov
cmp
iret
push
sub
jo
leave
sub
divl
sub
adc
stos
cmp
add
aad
pop
add
icebp
test
dec
adc
jne
fbstp
dec
daa
mov
inc
xor
dec
scas
fsubs
push
fyl2xp1
mov
popf
add
add
jecxz
jg
repnz
fsts
enter
and
jge
pushf
ljmp
mov
dec
mov
sti
xor
call
fidivrl
jecxz
jo
xchg
cmp
inc
dec
push
loope
mov
jns
cmpb
test
fwait
fwait
pop
test
mov
pop
aaa
mov
pop
mov
test
dec
insl
mov
pop
sub
jnp
fwait
adc
sub
sahf
repnz
outsl
mov
sarb
test
in
cmpsb
push
jo
insl
xchg
push
xchg
int3
nop
outsb
dec
xchg
test
cmp
fwait
lret
scas
sbb
out
sbb
add
in
nop
or
xchg
jb
adc
ret
addb
and
cld
mov
dec
or
andb
push
gs
sub
pop
push
jl
in
push
mov
imul
call
mov
or
gs
dec
js
mov
jecxz
mov
jbe
and
sub
insb
mov
push
push
cmpsb
xor
and
int3
in
scas
xchg
outsl
lret
loope
add
dec
repnz
jmp
push
fidivl
aam
mov
mov
es
inc
out
mov
test
cld
sbb
pop
sbb
ret
ds
sbb
cld
mov
sbb
adc
repnz
dec
sti
lea
xor
out
push
test
xor
test
rcr
lret
xchg
mov
out
push
repz
pop
add
jg
loop
loopne,pn
stos
mov
iret
fistl
pushf
loop
mov
fbstp
test
inc
pop
push
mov
addr16
and
aam
sarb
jnp
xor
lret
insl
or
jb
pop
jb
stc
repz
imul
add
into
in
fisubl
and
push
inc
mov
add
xchg
and
imul
xchg
sub
sahf
mov
movsb
mov
mov
adc
enter
dec
pop
fwait
xor
or
lods
popf
inc
fdivrl
stos
and
or
or
adc
pusha
out
fbld
add
add
add
add
in
adc
push
dec
mov
sbb
subl
or
jns
inc
push
ror
daa
mov
fdivl
movsl
lods
popf
mov
and
js
xor
fwait
clc
sar
sbb
pop
mov
pusha
mov
add
daa
popa
sub
popf
std
lock
in
cmp
xchg
push
xchg
mov
cmp
fcompl
pop
jp
loopne
das
es
test
stc
aam
nop
dec
enter
iret
dec
bound
outsl
mov
inc
jns
cli
sub
cmp
pushf
imul
cmp
js
and
xchg
xchg
or
mov
mov
jle
repz
adc
push
or
push
loope
mov
pop
dec
push
xlat
mov
or
cmpsl
dec
pop
adc
outsb
daa
mov
hlt
arpl
ficompl
popa
mov
adc
in
sahf
dec
sub
jnp
xchg
mov
mov
or
add
pop
lcall
pop
in
lods
aas
push
jae
push
push
stc
adc
xor
dec
outsb
mov
aad
out
adc
aad
mov
add
pop
dec
sbb
adc
mov
xchg
adc
ljmp
popa
mov
movsb
std
loop
ret
inc
stos
dec
in
jo
inc
lock
jbe
mov
repnz
add
cmp
xchg
xor
sub
insl
sub
xchg
aad
outsb
movsl
jmp
inc
enter
test
loop
fistpll
push
push
mov
sbb
mov
insb
sbb
fwait
daa
out
arpl
ja
sub
xchg
mov
sbb
sbb
mov
ds
pop
icebp
mov
shll
popf
loopne
js
repnz
test
jbe
xor
aam
js
lea
cmpb
dec
pusha
mov
cmp
inc
push
lds
sti
imul
and
xor
loop
xchg
ds
clc
xchg
mov
mov
sbb
insb
or
mov
push
and
cli
adc
jbe
js
push
inc
jmp
cli
push
adc
rol
sub
jo
sbb
cld
call
adc
movsl
mov
cwtl
inc
push
and
and
adc
arpl
xchg
cwtl
mov
mov
fnstcw
fcomp
outsl
jmp
sbb
movsl
pop
rcrb
and
js
ret
and
popa
mov
pop
test
pusha
arpl
inc
lret
and
loopne
popa
test
mov
or
add
mov
repnz
dec
sbb
jo
jecxz
sahf
jbe
add
insb
xor
fstps
add
lret
inc
aam
and
or
imul
ss
ds
in
mov
data16
xchg
test
movsl
dec
rcll
test
jno
out
add
add
test
mov
mov
pop
in
and
sbb
call
mov
push
or
jb
pop
out
adc
xor
inc
rcrl
ss
movsb
add
lret
repz
mov
imul
fucomp
dec
mov
addb
loop
imul
adc
pop
mov
movsl
xchg
stos
loop
scas
xchg
jo
iret
movsb
add
mov
data16
sti
xorb
cltd
add
sub
cmp
stos
sub
jecxz
shll
decb
adc
mov
addb
pop
stc
sarl
mov
push
add
dec
lcall
scas
aaa
add
jecxz
pop
fsub
or
jg
outsl
fldenv
or
or
in
shll
leave
jae
lods
or
or
push
inc
imul
fstps
popa
clc
lar
std
test
sbb
xchg
mov
fucomp
add
adc
loopne
sub
mov
xchg
ret
in
push
fwait
mov
stc
cmp
pop
cmp
fdivl
sub
fstps
pop
std
inc
and
push
sub
mov
push
pop
cs
imul
jg
lcall
pop
mov
fistl
push
loope
cmpsl
sub
cmpsb
push
lods
xor
adc
mov
pushf
imul
ret
scas
add
ret
adc
sub
loope
inc
dec
sub
cmp
mov
mov
lea
scas
in
xor
repz
jmp
dec
dec
negb
sub
sub
scas
mov
push
movsl
sub
lods
inc
sub
pop
mov
or
pop
je
jmp
add
sbb
aaa
out
mov
jle
loop
ljmp
lock
jge
xor
in
pop
sub
inc
mov
fists
mov
sahf
les
mov
mov
and
subl
iret
pop
jbe
xchg
roll
cli
push
sub
test
mov
sbb
mov
inc
imulb
xlat
out
jb
stc
rol
ljmp
setno
cmp
cmpsb
lds
xchg
dec
loopne
enter
xchg
mov
shl
jl
mov
cwtl
shlb
xor
inc
stos
jecxz
xor
xchg
xchg
jno
loope
or
stos
push
lcall
sub
fwait
mov
aam
push
cmp
sub
sub
test
sbb
dec
dec
ljmp
sub
ljmp
or
cmpsl
xchg
sbb
adc
mov
pop
cmp
repz
and
pop
jmp
pop
mov
dec
push
pop
movsb
out
and
dec
adc
jne
call
fcmove
test
mov
mov
lret
cld
dec
xor
mov
sti
rol
jle
pop
sbb
movsb
ljmp
xor
ds
and
ficomps
cs
jmp
jg
and
repz
repnz
dec
movsb
icebp
and
push
popf
cmc
fisubs
jg
mov
mov
imul
sahf
shll
mov
add
xor
sti
mov
jl
dec
jl
sub
sbb
jg
jge
mov
aam
add
imul
or
ds
xchg
movsb
mov
loope
cwtl
mov
andps
cmp
pop
jbe
and
notb
pop
mov
mov
jge
cld
not
int
addb
mov
es
test
mov
das
or
nop
aam
pop
pop
in
dec
test
clc
cld
gs
lods
xor
xchg
sub
adc
sbb
out
adc
roll
in
push
popa
imul
std
insb
pop
lcall
push
sbb
xchg
mov
sbb
pop
shll
cs
mov
mov
sbb
jecxz
mov
sbbl
jbe
mov
sub
pop
add
fcomps
lcall
xchg
aad
shlb
rorb
test
xchg
xchg
loop
icebp
cmpsb
imul
mov
adc
repz
fcmove
ret
loop
aad
dec
add
inc
sahf
mov
js
or
sub
rcr
inc
push
fidivrs
or
push
cmp
divb
jl
mov
jge
adc
push
add
push
mov
mov
ds
pop
mov
outsb
cmp
cld
lahf
add
mov
roll
rcl
loopne
pop
mov
xor
sbb
popf
in
mov
mov
out
xchg
mov
pop
insb
js
xor
push
insb
mov
out
lret
pusha
jmp
mov
loop
fmull
xor
ret
adcl
add
out
jne
cli
je
mov
sub
lock
orl
add
shrb
xchg
push
adc
jo
adc
cmp
sub
mov
pushf
and
and
inc
imul
adc
xchg
pusha
movsl
push
mov
inc
fsubs
ret
pushf
inc
pop
mov
push
and
cwtl
cmpsl
jbe
add
inc
cmpsb
mov
fldcw
xchg
stc
dec
jle
stos
cmpl
or
ret
shll
test
std
movsl
mov
mov
out
push
pop
xchg
dec
js
fidivs
sub
lods
pop
rorb
add
adc
jbe
test
push
hlt
pop
pop
or
jae
inc
aad
mov
jb
fsubs
arpl
mulb
jbe
into
movsl
inc
jae
nop
js
or
push
inc
pop
sbb
movsl
inc
hlt
sub
notl
dec
repnz
into
enter
and
xchg
pop
imul
push
push
xor
jecxz
jbe
or
fstpt
sti
repnz
das
push
cs
pop
icebp
pop
sub
popw
push
cs
adc
pop
iret
pop
sub
ljmp
fsubl
lret
jno
mov
pop
mov
push
mov
imul
sub
addr16
dec
jmp
cmpsb
cmpsl
pop
stos
mov
cmp
dec
and
mov
cmp
hlt
cmp
ret
test
jl
mov
lods
es
pop
cld
jl
sbb
push
cwtl
cli
shl
scas
add
cmp
xchg
ja
xor
leave
enter
or
pop
mov
jbe
lea
mov
xchg
loope
sub
popf
pop
outsl
jo
test
in
inc
push
mov
inc
movsl
dec
ja
sahf
push
cmpsl
sub
lret
cmp
imul
mov
mov
mov
pushf
mov
add
and
and
jmp
movsl
xor
out
and
mov
add
dec
das
in
sar
sbb
sti
jp
nop
adc
popa
xchg
loope
js
ds
xchg
popa
nop
xor
jnp
dec
mov
sub
adc
xlat
roll
icebp
lds
mov
jg
movsl
pusha
rcrl
rorb
or
ret
push
dec
popf
mov
arpl
cmp
inc
out
pop
inc
jge
testl
xor
jl
lcall
aaa
sub
jbe
outsl
fxch
push
stos
aad
push
pop
dec
push
idiv
push
dec
xor
sub
bound
mov
cld
scas
adc
sbb
mov
and
add
fdivrs
mov
xchg
leave
and
xor
lock
testl
mov
div
loope
sarb
aam
jbe
loope
aad
push
lods
cmp
test
xchg
sub
loopne
lea
push
mov
js
cmc
sub
sti
inc
xor
les
fs
cld
push
fwait
std
dec
cmp
xchg
cmp
dec
inc
push
movsl
fwait
cmp
mov
add
push
jbe
dec
push
xor
movsl
fwait
or
andb
mov
loop
test
mov
sub
fcomps
inc
fstpt
cmp
pop
jno
cs
ja
sub
mov
call
dec
daa
push
pop
movsl
pop
mov
push
imul
mov
ficoms
push
pop
cmp
mov
xlat
sub
gs
jb
ret
das
jno
push
cmp
push
outsl
cmp
push
inc
jnp
xchg
aad
outsl
in
mov
mov
jle
mov
testl
js
fldl2t
mov
into
cli
enter
adc
xor
dec
insl
outsb
dec
les
loope
daa
call
repz
sub
and
or
out
sahf
lea
push
sbb
cli
pusha
xchg
in
cs
je
xor
mov
cmp
cmp
fdivs
lods
mov
repz
mov
stc
and
lock
imul
mov
addb
arpl
add
sbb
xchg
ret
das
push
iret
sub
pop
mov
jmp
ss
sub
gs
xlat
or
pop
hlt
mov
cltd
in
imul
pop
pusha
xchg
sbbl
les
pop
mov
or
out
gs
push
fwait
fwait
outsb
fcoml
jle
rolb
or
adc
lret
jns
xchg
gs
lcall
cli
int3
call
adc
ficoml
cmp
out
sub
loopne
orb
xchg
xchg
scas
lret
lds
fists
adc
in
aam
cli
jno
xor
testl
mov
and
sbb
das
iret
fucomip
cmp
out
pop
pop
aad
int
mov
mov
mov
cltd
inc
icebp
mov
lcall
out
pushf
dec
or
xorl
add
xchg
int3
iret
xor
push
lds
daa
fimull
mov
imul
pop
cmp
fidivrl
cmp
xchg
mov
sar
mov
hlt
ja
add
xor
lods
sarb
pop
lret
adc
fiadds
adc
imul
push
in
inc
push
fsubr
jp
out
scas
mov
faddl
cmp
push
xchg
cmp
mov
mov
imul
hlt
add
icebp
dec
ror
cwtl
mov
fs
xchg
mov
addr16
push
orb
jp
cmpps
or
lods
xchg
xorb
or
lods
jb
orl
add
addr16
inc
in
pusha
rol
test
lock
add
sbb
pusha
sub
pop
cmp
incb
repnz
inc
jge
push
cmp
int
push
mov
fcoms
lods
sbb
xor
pop
shl
or
dec
mov
daa
aam
xor
aad
lret
negb
mov
lea
inc
sbb
xor
stos
aam
cwtl
addr16
xchg
test
int3
cmp
mov
xchg
jo
push
sub
mov
add
and
sbb
sub
xchg
xchg
push
es
cmpsl
aad
aad
es
and
fstps
and
arpl
ss
dec
fs
inc
push
cmp
pop
cmc
adc
jnp
hlt
fwait
and
in
sarl
mov
leave
pusha
dec
test
mov
dec
movsl
out
cld
pop
or
add
jb
jae
cli
fcomps
mov
test
mov
test
push
xchg
stos
shlb
pop
stos
pop
and
je
icebp
imul
in
adc
mov
mov
les
fisttpll
mov
push
mov
enter
into
outsb
notl
je
bound
jae
or
lods
lcall
push
loop
add
push
ret
mov
lds
andl
xor
adc
xchg
pop
pop
inc
stos
movsb
sbb
jnp
imul
pop
imul
lret
lahf
push
add
fs
adc
add
add
mov
xor
scas
sbb
push
mov
push
loope
jbe
and
inc
mov
fsubl
mov
scas
add
imul
push
mov
inc
movsl
fld
mov
popf
cltd
in
arpl
adc
int3
xlat
pop
adc
jno
pop
push
pop
jno
call
aas
scas
adc
daa
subl
arpl
adc
mov
mov
loop
andb
xlat
mov
adc
sti
dec
loopne
jno
movsb
adc
cmc
add
sbb
sbb
jp
or
lock
mov
clc
stc
mov
mov
loope
dec
and
xchg
scas
cmp
shl
das
jmp
pop
es
leave
movsl
mov
lock
fnstenv
push
or
addr16
sbb
imul
js
push
cli
ja
and
ret
mov
and
pop
adc
jbe
pop
add
xor
jmp
xchg
xchg
mov
popa
out
jecxz
dec
fadds
nop
mov
orb
sub
ret
adc
addl
jbe
jo
xchg
sub
clc
cmpsl
mov
aaa
xlat
outsl
jp
sbb
out
jnp
imul
add
push
sbb
aaa
mov
js
mov
jp
sbb
or
and
sahf
mov
iret
xchg
xlat
aaa
fnstsw
xchg
rcrl
push
jbe
shll
mov
bound
xlat
popf
cmp
cmpsl
inc
mov
aad
push
mov
sbb
sub
dec
loope
mov
pop
jbe
dec
popf
cld
mov
mov
jmp
dec
push
int
sub
jae
or
sti
pop
ljmp
xchg
out
adc
rcrb
dec
je
arpl
mov
sahf
or
out
and
test
inc
sti
lods
in
and
testb
adc
jo
addb
adc
and
scas
xchg
in
push
push
push
jnp
mov
outsl
inc
arpl
xor
ret
xor
imul
sub
inc
pusha
pop
sbb
aas
and
cmc
lret
xor
lcall
lods
xchg
ljmp
jns
imul
fildll
lods
ficoms
push
insb
repnz
cs
cld
shll
add
enter
mov
jo
mov
dec
fldl
arpl
pusha
test
xor
shr
push
orl
test
call
cmp
out
outsl
adcl
cmp
inc
cli
jg
mov
gs
lcall
dec
xchg
data16
push
jg
rcl
pop
xor
jmp
data16
daa
sub
pop
insb
in
mov
in
dec
jno
sbb
loop
es
mov
mov
sub
call
xchg
mov
std
inc
xchg
aaa
arpl
imul
pop
daa
aam
add
hlt
sbb
cmpb
shlb
push
stc
jl
test
add
in
mov
incb
jbe
loop
and
arpl
pop
mov
sbb
push
inc
mov
cmp
int3
scas
push
in
xchg
das
xchg
test
fiadds
rclb
dec
ja
mov
xor
adcb
pop
ds
data16
loopne
mov
outsb
dec
inc
and
movsb
out
pop
mov
in
out
into
jnp
pusha
outsb
fisubrs
lds
shlb
mov
xor
mov
xor
rol
ss
testl
cmc
int
sbb
cmp
fcomps
push
out
ret
ds
test
out
nop
movsb
fs
ds
fisubl
adc
sub
push
ss
fcomip
pop
clc
push
je
dec
cmp
and
and
scas
lods
arpl
or
adc
fistl
les
cld
scas
cwtl
dec
in
in
sarl
or
test
andl
lock
mov
inc
mov
sub
adc
add
loopne
add
aas
mov
ss
imull
pop
lea
clc
cmp
cwtl
add
cmp
and
or
pop
mov
in
std
imul
jnp
push
rcll
adc
testb
repnz
test
fidivl
push
dec
jae
mov
pop
sbb
jns
lds
jecxz
xorb
xor
inc
adcb
mov
das
mov
mov
out
sbb
cli
rcll
lcall
cli
xchg
cmpsl
aad
out
xlat
dec
xor
mov
jg
fldcw
add
lods
push
jmp
mov
testl
ds
nop
xor
push
lods
lock
inc
sub
repz
cmp
std
jle
push
cmp
push
push
lea
add
xchg
mov
insb
stos
int
xchg
pop
jmp
xchg
mov
and
cmc
jmp
addr16
lds
outsb
das
punpcklbw
out
imul
cmc
xchg
sbb
inc
cmp
cmpsb
pop
inc
add
push
aas
orl
pop
mov
movsl
or
out
loope
imul
adc
cmpb
cmp
mov
mov
or
and
int3
loope
and
enter
add
and
stos
cld
mov
pushf
cmpsb
dec
mov
jne
inc
xor
imul
cltd
adc
pop
xor
and
xor
xchg
inc
gs
sub
out
dec
sub
dec
ss
xor
test
sub
lret
push
dec
sar
and
mov
in
sub
xor
and
shl
mov
ret
fmull
gs
sbb
loope
xchg
fisttpl
cmpsb
pop
push
pop
les
inc
xchg
hlt
adc
xor
or
clc
cwtl
inc
pop
cmpb
sbb
in
xchg
adc
out
push
or
push
mov
and
mov
jb
sbb
je
xor
xchg
cwtl
scas
fisttpll
aam
mov
paddq
out
inc
in
arpl
adc
repnz
loope
insl
push
adc
dec
mov
daa
xchg
mov
inc
cli
push
jno
or
push
mov
and
mov
insb
pmaddwd
push
ds
incl
mov
push
lea
das
push
xlat
jl
negb
jl
sub
iret
push
lods
mov
ss
shr
rcll
mov
sub
call
lret
enter
jbe
pop
faddl
xor
das
cli
inc
sub
xor
xor
fwait
pop
jl
sti
incl
adc
daa
shrb
test
in
lcall
add
mov
and
dec
test
jno
out
dec
call
jp
fs
fildl
push
fs
xor
and
not
dec
or
inc
aad
pop
or
mov
out
int3
pop
xchg
xor
int3
cmp
outsb
or
push
insl
dec
test
push
sub
jle
orb
cs
bound
popa
andnps
outsb
jp
fmull
mov
insl
pushfw
mov
jmp
push
cmpsb
or
pop
arpl
lea
pop
push
cmp
inc
sarb
adc
pop
xchg
aaa
bound
repz
dec
push
mov
sbb
in
lods
inc
leave
mov
mov
push
mov
and
shrb
out
pop
pop
popf
xchg
inc
jo
jp
shrb
sub
leave
xor
push
inc
cs
scas
mov
popa
sbbb
push
adc
das
sbb
push
adc
push
rcr
pop
cmpsb
dec
lea
jp
std
imulb
cs
pushf
push
cld
inc
mov
xchg
xchg
cmp
adc
xchg
xchg
mov
test
pop
add
sahf
add
je
jns
ss
int3
and
or
sbbl
sbb
mov
imul
mov
or
xor
ss
je
push
jmp
rol
sbb
xor
xchg
push
mov
xchg
mov
stc
mov
lock
test
stc
cmc
stc
enter
movsb
pop
ja
dec
call
into
mov
js
sbb
popf
aas
lea
cltd
xor
hlt
sbb
nop
aad
mov
mov
mov
pop
and
cmpsb
dec
and
in
in
popf
sub
jae
jle
rclb
mov
das
je
cmpsb
xchg
add
sarb
adc
jno
popa
mull
aam
lahf
mov
addl
test
push
mov
add
pop
icebp
lcall
xchg
flds
xchg
dec
jmp
outsb
shlb
sbb
addr16
xor
xchg
idiv
popa
inc
sub
dec
xor
inc
jo
and
mov
add
sub
out
out
inc
and
xchg
jp
xchg
loopne
stos
inc
addr16
sbb
pop
in
out
je
jbe
jae
nop
or
jmp
lods
push
lret
inc
decb
roll
and
daa
xchg
pop
xor
dec
and
dec
dec
je
adc
jo
mov
in
push
pop
ds
pop
jb
push
fsubrp
hlt
mov
sub
push
fildll
test
mov
mov
dec
sub
or
or
test
mov
into
lret
sbb
shll
xchg
popf
daa
mov
mov
stos
scas
lods
xchg
pop
outsl
sbb
dec
inc
imul
mov
mov
std
daa
cmp
push
js
mov
lods
fnstenv
mov
cmp
rclb
or
inc
fcoml
add
xchg
push
fmull
lock
shr
pop
test
pop
adc
inc
repnz
adc
nop
inc
sahf
arpl
mov
or
cmp
push
push
mov
adcb
cmp
mov
and
mov
sbbl
push
in
inc
xchg
push
aas
sub
lods
call
push
sub
xchg
or
jge
js
pusha
mov
jb
jmp
jbe
xchg
dec
inc
xchg
jno
cmc
mov
mov
aam
push
andl
push
jl
movsb
add
fbld
cmc
add
xor
adc
lods
sbb
or
pop
xor
or
imul
jmp
cmc
daa
pushf
pop
inc
popf
clc
les
test
arpl
push
jno,pt
mov
jo
xchg
mov
and
loop
cmp
mov
bound
pushf
sbb
mov
and
mov
adc
in
dec
loop
sub
push
in
sub
or
mov
nop
int3
add
std
out
and
jo
aaa
xor
add
enter
mov
inc
mov
ljmp
fdivl
xlat
adc
out
filds
add
xchg
or
xor
shlb
sbb
es
add
mov
jle
adc
or
jge
jbe
pop
out
data16
xor
push
xchg
cld
mov
inc
or
dec
cld
loop
xchg
ja
cmpl
inc
push
sbb
cmpsb
pop
mov
cmp
ret
fisttpl
scas
mul
ja
jl
push
xchg
pop
xchg
aad
sub
or
adc
mov
pop
mov
stos
shl
nop
ficomps
mov
pop
arpl
in
pop
das
repz
adc
scas
jecxz
jne
fistps
rcrb
ljmp
add
mov
addb
pop
out
aad
push
xchg
mov
mov
cld
mov
jo
mov
jbe
out
pop
mov
std
fnstcw
pop
loop
mov
dec
adc
out
clc
fiaddl
inc
aas
cltd
xchg
jae
cmp
mov
hlt
daa
fisttps
jo
push
gs
cmc
out
int3
mov
test
lahf
rol
test
std
push
stc
jo
mov
adc
jle
sub
std
jge
lods
fcomps
repnz
outsl
xchg
adc
push
sub
into
ds
mov
cmpsb
xchg
into
es
xor
jp
sbb
stos
fs
das
arpl
jbe
xchg
jbe
ljmp
xchg
xor
xlat
pushf
xchg
mov
repz
ljmp
lock
outsb
sti
or
ficoml
jbe
icebp
cmp
xor
dec
in
clc
ficomps
aaa
xchg
push
loope
jae
mov
jl
or
or
mov
push
cltd
dec
mov
cmp
fsubrl
cld
cmpsb
and
aam
sbb
lods
and
mov
mov
adc
call
push
dec
inc
sbb
cmp
cwtl
int3
mov
jecxz
outsb
push
cs
rolb
scas
dec
mov
push
femms
iret
fiadds
sbbl
pop
outsb
mov
cwtl
call
and
outsb
xor
xor
mov
test
inc
cmp
sub
cmp
shll
xchg
add
pop
or
inc
pop
cmpsl
push
sti
xor
lds
sub
adc
nop
inc
repz
push
push
stos
xchg
sti
inc
sbb
push
mov
mov
xor
lret
addl
jle
and
sti
fucomi
adc
inc
cmp
data16
inc
mov
push
sub
cmpsb
sti
aam
mov
loopw
fistps
mov
push
cli
push
mov
mov
popf
iret
imul
cli
shll
inc
push
cmp
fisttps
jbe
dec
fsub
iret
hlt
enter
adc
test
push
lods
test
cmovle
adcl
mov
cmp
inc
xchg
ss
pop
xor
xor
adc
movsl
jmp
mov
add
adc
shlb
pop
ja
xchg
lods
mov
pop
mov
enter
mov
sahf
scas
sbb
inc
mov
lods
pop
pop
insb
lods
dec
sarl
fbld
outsb
stos
stc
popa
mov
sbb
sub
es
lock
mov
xchg
sbb
orb
add
jae
xor
cmp
xchg
mov
shl
jp
hlt
and
in
adc
cmp
sub
sub
enter
inc
pop
add
xchg
push
mov
add
push
ss
hlt
push
into
and
mov
subb
inc
hlt
stos
sub
cltd
xor
adc
push
adc
dec
jle
mov
arpl
sbb
xor
leave
mov
lret
jmp
in
mov
or
cmp
addb
inc
mov
add
sbb
mov
fwait
jb
inc
mov
sub
mull
push
inc
mov
test
add
jp
or
popf
lea
std
js
inc
xor
pop
fdivl
lods
filds
dec
fdivrl
sbb
cmp
in
pop
jne
adc
cmpsl
jp
jle
mov
adc
xor
lods
stos
mov
jno
pop
clc
mov
retw
cmp
scas
rcrl
dec
xor
jle
fimuls
imul
sbb
pushf
fwait
das
inc
mov
and
mov
stos
shrl
data16
rorl
shl
imul
mov
mov
mov
lds
mov
sub
jmp
jg
adc
push
idiv
daa
sub
fmuls
sbb
lods
stos
mov
mov
std
and
cwtl
mov
xchg
sub
sbb
jecxz
pop
lret
into
sbb
jns
pop
sarb
xor
push
dec
mov
cs
neg
pushf
inc
mov
cltd
rolb
jb
dec
or
adc
je
mov
dec
inc
sub
push
out
bnd
ss
jmp
mov
andb
rcrl
push
dec
ret
sub
jl
jg
lret
loopne
xlat
fs
ljmp
sub
in
imul
mov
int
or
mul
int3
add
pushf
jnp
mov
pop
sarb
into
jge
xor
lcall
cwtl
mov
leave
ret
push
or
sbb
negl
imul
int
xchg
pop
dec
push
adc
mov
push
xchg
jle
sub
or
std
jle
in
push
daa
add
loopne
sahf
lret
in
fadds
cld
push
adc
hlt
dec
dec
movsl
xchg
in
les
adcl
adc
inc
mov
nop
aam
outsl
sub
dec
in
fstl
lret
cltd
fmul
xchg
lds
and
aas
out
jl
shrd
aas
popa
lahf
sarl
push
test
cmp
pop
dec
out
inc
or
xor
popf
sbb
fimuls
ror
jno
and
lea
lret
cwtl
mov
dec
test
cmpsb
jl
mov
ljmp
cmp
add
xor
popa
pop
mov
insb
mov
testb
fnstenv
loopne
or
pop
ja
clc
jge
bound
xor
in
sub
push
data16
mov
push
shrb
mov
iret
pop
insl
lods
push
out
pushf
or
and
aad
adc
out
mov
repz
jbe,pn
lds
cltd
jae
nop
add
pop
jl
in
fadds
cmpsb
daa
mov
adc
fldlg2
xlat
mov
xlat
pop
test
test
loopne
inc
inc
add
les
lods
nop
stos
xchg
cmp
clc
push
outsl
fstl
pop
mov
and
add
jle
inc
mov
subb
cld
xchg
push
outsl
adc
shl
cmp
sub
fwait
stos
jecxz
cmp
vgetmantps
jne
imul
sub
jecxz
or
mov
add
fwait
xchg
mov
lret
arpl
orl
push
cs
movsl
and
push
mov
pop
aas
xchg
adc
xor
inc
mov
push
rcr
cmp
pop
mov
add
stos
push
jne
xor
mov
push
or
and
mov
ds
cmpsb
ja
mov
sbb
xchg
test
mov
push
mov
pop
jns
lock
push
and
fnsave
in
mov
xorl
in
stos
adcb
rep
fdivl
mov
fwait
mov
adc
insb
pop
mov
add
cmp
repz
mov
test
repnz
jno
loop
and
xor
pop
subw
test
pusha
aas
add
pushf
or
mov
mov
cmp
daa
outsl
repnz
cmp
lods
mov
loope
stos
cs
xchg
pop
or
mov
dec
pop
push
dec
pusha
enter
subl
or
lea
imul
aaa
dec
inc
sbb
push
cmp
inc
out
jecxz
xor
scas
pop
lods
sub
mov
dec
fsubl
lods
sbbb
mov
and
mov
je
fmull
jne
mov
lds
pushf
lret
add
in
mov
jmp
repnz
iret
loop
push
xchg
xchg
or
dec
jo
lods
adcb
std
mov
jl
add
in
divb
and
pop
adc
sti
jo
add
in
mov
cmp
insl
mov
popa
and
cmp
pop
setbe
outsl
xchg
sbb
push
push
sti
fwait
and
jns
outsl
xor
sbb
mov
fisubl
out
adc
mov
xlat
cmp
sbb
mov
cs
cli
js
imul
ss
mov
bound
add
cmp
cmpb
xchg
mov
pop
test
leave
dec
and
mov
loop
jmp
lcall
lcall
jg
inc
or
xchg
jne
jno
lods
sahf
sub
jecxz
add
iret
dec
dec
aad
gs
or
je
dec
aad
or
push
inc
xor
inc
cmp
cmpsb
loope
std
pop
inc
into
out
xchg
stos
mov
sbb
outsb
dec
mov
sbb
mov
leave
inc
stos
nop
loopne
push
xchg
out
mov
mov
push
je
lea
mov
ljmp
call
jmp
int3
cmpsb
rorl
dec
mov
fstps
leave
lcall
icebp
dec
fidivs
insl
test
xor
sub
mov
aas
pop
iret
cmpsl
popa
adc
cmpb
idivb
bound
out
mov
cmp
jae
cmp
cs
fwait
mov
popl
push
mov
aaa
out
in
movsl
xchg
mov
es
dec
xchg
sub
sbb
and
das
push
insb
or
imul
dec
test
mov
mov
jle
dec
mov
setne
in
inc
inc
add
icebp
dec
cwtl
sub
jmp
sub
mov
hlt
dec
jns
test
nop
sub
lds
cmc
repz
loop
negl
ret
popf
pop
add
cmpsl
decb
xchg
xchg
dec
xchg
mov
rcrb
popf
jo
gs
xor
sbb
push
out
mov
xchg
cli
sub
push
dec
or
or
jg
push
mov
imul
mov
fidivl
cmpb
pop
mov
enter
insb
pushf
pop
inc
imul
das
jg
push
cltd
fiadds
add
bound
pop
fwait
imul
imul
inc
jge
push
clc
push
addb
shrl
sahf
pop
push
shll
dec
popa
test
xchg
loopne
jo
and
loopne
ds
and
add
insl
push
mov
and
xchg
add
repz
stc
cmp
dec
adc
mov
scas
adc
fildl
push
jnp
sbb
dec
xchg
and
push
or
test
insb
notb
sbb
imul
and
jecxz
mov
cli
scas
pushl
sbb
and
inc
push
insl
cmovg
pushf
ss
loopne
cmp
popf
mov
push
xchg
test
test
lret
icebp
lcallw
dec
sahf
cmp
gs
in
stos
outsl
inc
into
xor
mov
pop
pushf
mov
sahf
jne
jo
cs
xchg
pusha
pop
je
lcall
test
cmovge
push
movsl
mov
fwait
dec
hlt
push
inc
mov
sbb
iret
inc
stos
stos
xchg
imul
push
rcll
hlt
test
insl
lret
ret
mov
push
sub
lods
xor
xor
les
adc
sti
xchg
mov
lret
sub
push
and
lret
mov
mov
jecxz
dec
gs
adc
pop
sub
xchg
push
mov
add
out
andb
stos
mov
sbb
repnz
aas
sub
xor
push
or
in
fcomi
adc
addr16
mov
push
or
je
mov
dec
leave
mov
mov
lahf
adc
or
jp
lods
cmp
pop
sti
lret
xchg
ret
loop
andb
push
pop
sbb
xor
xrelease
int3
sahf
add
mov
pop
jno
adc
adc
scas
test
xchg
mov
shlb
out
push
jo
jb
pop
popf
mov
sub
inc
daa
xor
in
dec
test
add
push
sub
pop
iret
push
insb
fmull
cmpb
xor
lea
push
dec
out
test
rorb
push
lods
movsl
push
scas
scas
repz
pushf
and
xchg
dec
mov
add
inc
pop
lret
jns
dec
fcmove
mov
cmp
mov
sti
cmpsl
mov
les
pop
mov
sti
sub
mov
sbb
out
pop
push
repz
mov
mov
push
mov
popf
pusha
outsb
ljmp
jecxz
and
xchg
pushf
lods
fcomps
out
xchg
stc
sub
sbb
imul
adc
inc
cmpsb
mov
xor
je
inc
adc
rorl
testl
mov
xchg
fisttpl
cltd
rorb
dec
or
lock
xor
pop
lahf
mov
or
bound
and
mov
out
pop
push
divl
fisttps
scas
js
jbe
lods
dec
cmp
imul
mov
cld
andb
pop
mov
iret
dec
scas
out
or
test
inc
subl
test
and
outsb
out
arpl
lret
ds
dec
pop
push
add
adc
lock
xor
cmp
mov
addb
mov
sahf
outsl
xchg
mov
sbb
xchg
sbb
mov
sbb
jp
mov
sahf
fs
sbb
inc
dec
insl
addr16
jne
pop
dec
fisttpll
pop
xchg
jo
xchg
lock
pusha
sub
fisubl
rclb
inc
iret
cmpb
mov
inc
icebp
in
ljmp
cmc
ljmp
xor
pop
iret
or
fisubrl
test
cmp
jo
shlb
insb
and
outsb
popf
xchg
add
data16
jae
or
mov
cs
mov
lahf
pop
repnz
pop
mov
push
inc
sub
fsts
mov
xor
jo
in
mov
out
lret
lret
inc
std
push
cmp
shr
push
xchg
mov
or
inc
dec
repnz
push
push
jno
sbb
fcmovu
mov
aaa
ja
ds
jns
mov
xor
mov
call
mov
xlat
dec
xchg
xchg
or
sub
jbe
xchg
cmp
xlat
jns
cmp
js
inc
repnz
imul
sarl
pop
lods
ret
mov
std
jmp
add
gs
mov
je
and
sbb
enter
xor
dec
repnz
stos
ret
or
dec
xchg
adc
pop
and
jbe
in
insb
mov
jno
in
and
ds
xchg
movsl
jne
loopne
icebp
in
loop
repnz
cmpsb
xchg
push
cmp
in
popa
mov
adc
mov
xchg
int3
xor
mov
out
fdivrl
mov
enter
jno
jp
sbb
mov
fstl
or
jp
add
add
ljmp
sahf
xor
inc
shll
test
push
cmp
jb
sub
adc
push
lret
clc
mov
or
cld
push
add
hlt
add
lret
ljmp
jl
js
cmp
xlat
je
xchg
mov
addl
stos
or
xor
mov
jmp
xor
push
cmp
xchg
cmp
cli
lahf
les
jmp
fdivs
push
mov
mov
rcrl
fsts
dec
adc
xchg
push
jb
adc
roll
insl
sahf
adc
movsb
test
pop
out
into
push
and
or
loopne
sub
ficomps
fdivs
pop
lea
inc
jl
cmpsb
loop
cmc
mov
jno
jecxz
sbb
insl
pop
cmp
mov
dec
lea
push
icebp
xchg
out
fwait
mov
and
std
test
les
or
popa
xchg
rcl
mov
insl
add
stos
dec
sbb
jmp
aas
sbb
jp
hlt
xor
or
jle
rclb
dec
push
mov
jle
add
pop
or
sub
xchg
out
jge
dec
mov
mov
pop
lods
xchg
faddp
push
push
xor
adc
pushf
std
ljmp
mov
jb
dec
imul
popf
mov
xchg
test
adc
adc
jns
cmpsl
icebp
and
xchg
dec
add
dec
jne
sbb
mov
mov
das
jl
imul
icebp
fdivp
add
push
xchg
enter
xor
xlat
adc
test
shrb
adc
ljmp
jb
arpl
cli
xchg
mov
test
adc
cmp
rcll
arpl
adc
mov
test
pop
xor
sti
jo
aad
dec
add
fldenv
mov
fstpt
or
dec
cmpsl
ljmp
push
lret
imull
mov
mov
sub
imul
sub
and
push
rorb
js
push
lret
xchg
xor
lock
inc
xchg
or
mov
lret
in
ljmp
dec
rcrb
mov
shr
add
outsl
call
mov
aaa
movsl
mov
adc
aas
add
pop
jno
decl
outsb
xlat
add
outsl
stc
fcomp
and
je
push
es
fs
cmp
adc
xor
sti
mov
mov
inc
xchg
rcr
pop
mov
popa
inc
cmpsb
mov
in
mov
int3
adc
push
es
in
insb
fsub
ss
dec
mov
fmull
je
fnstcw
adc
in
out
mov
pop
icebp
dec
inc
movsb
push
dec
fadd
rol
pusha
fstp
lcall
push
xchg
mov
jp
add
dec
das
ja
pop
push
pop
pop
jb
rcl
mov
sahf
ds
jecxz
pop
mov
add
int3
insl
ret
mov
aad
mov
fwait
scas
test
sbb
sbb
jmp
je
pop
emms
insl
sbb
notb
mov
inc
adc
stos
adc
test
into
dec
mov
pop
xor
stc
out
dec
imul
scas
push
lret
in
or
inc
cmp
cwtl
sub
mov
jmp
lcall
inc
cs
inc
add
xor
and
xor
insl
inc
cli
cwtl
popa
cmp
clc
push
or
ljmp
adc
lods
jne
arpl
pop
fs
inc
add
aas
pop
das
bound
sub
pop
xorl
sbb
mov
sub
shrl
mov
push
vpackuswb
out
ret
cltd
lcall
jnp
daa
pop
ljmp
sub
xchg
movsl
cmp
mov
jb
dec
lock
mov
xchg
dec
repnz
loopne
mov
pusha
mov
jnp
jmp
insb
xchg
or
out
je
inc
ss
cli
mov
dec
lcall
push
xchg
lret
int3
xchg
shrb
pop
and
loop
leave
mov
inc
test
push
mov
ret
jge
jg
add
movsb
jbe
mov
sub
pop
jns
dec
mov
call
xchg
dec
push
mov
gs
lcall
push
inc
mov
cmpsb
stc
push
mov
xor
jnp
insl
mov
inc
addr16
idiv
cmp
mov
and
jnp
cmp
test
mov
xor
adc
into
cmp
pop
jecxz
out
jl
and
pusha
mov
push
je
sbb
push
push
jp
inc
mov
mov
fsubrl
mov
xchg
outsb
not
into
xlat
fdivl
push
push
sub
and
push
cmpsl
jno
mov
test
test
ljmp
or
movb
cmpsl
add
jno
clc
arpl
adc
mov
insl
ljmp
dec
push
adc
xchg
xor
push
outsb
cmp
sbb
psubsb
dec
je
sbb
adc
es
sub
inc
out
inc
shlb
jb
test
cwtl
push
mov
test
jge
das
fimull
rcl
sbb
pop
iret
scas
dec
mov
and
js
popa
jl
xor
ljmp
and
test
ja
jle
add
mov
insb
inc
push
daa
inc
jle
and
sbb
cltd
pop
sbb
adc
push
in
jg
pop
stos
dec
repz
xor
and
push
es
cmp
xor
cs
sbb
mov
add
or
adcl
inc
push
je
push
ret
negl
shrl
mov
stos
mov
aaa
ficoms
sub
pop
pop
repnz
mov
mov
adc
and
ret
fnstcw
test
fidivrs
test
mov
pop
stos
jnp
in
leave
cld
arpl
or
cmp
mov
mov
jle
test
mov
mov
stc
mov
out
jge
iret
js
add
test
jnp
sahf
imul
push
jno
mov
push
jle
pop
jns
fisttpll
or
aam
pop
pop
and
inc
push
pop
mov
adc
pop
add
hlt
test
int3
stos
out
jp
ljmp
jb
add
or
sub
cmc
jns
mov
testb
int3
rorb
pushf
ss
push
xor
iret
aad
dec
sti
inc
sub
rcrb
sbb
add
fsub
add
xor
mov
pop
iret
pop
adc
pop
pushf
sub
loop
mov
dec
pusha
push
xchg
outsl
push
std
add
je
pop
lret
inc
cli
add
and
ss
jp
roll
fmull
imul
popa
shrb
test
jge
sub
jl
std
bound
mov
fcmovnb
adc
jmp
mov
negb
jmp
hlt
packsswb
add
and
xchg
jmp
rorl
aaa
scas
test
mov
sub
push
sbbb
xor
mov
xor
ss
mov
mov
sarb
in
cli
mov
pop
cld
mov
jg
inc
addb
aas
sbb
pop
ja
loopne
int3
or
into
mov
jge
push
repnz
cmp
mov
pop
adcl
or
iret
test
or
adc
and
rolb
les
fwait
loop
scas
push
jae
push
bound
xor
ss
mov
in
cmp
pop
cltd
add
xchg
xor
mov
inc
ret
pop
out
sti
cmpsl
imul
xchg
and
xor
lret
mov
popf
clc
ret
dec
fstpl
out
xchg
and
jg
xor
addb
stos
adc
xchg
lds
cmp
std
sbb
add
shll
loope
stos
or
stc
inc
push
mov
imul
sbb
mov
imul
and
mov
loop
inc
pop
mov
neg
pop
xchg
xchg
xor
inc
fimull
rcr
cmp
sbb
push
sub
imul
cli
icebp
cmovg
and
sub
clc
xchg
jp
in
mov
and
adc
movsb
xorl
xchg
inc
test
xchg
addr16
mov
fildll
mov
mov
pop
dec
inc
push
ja
push
loop
jge
iret
xchg
in
pop
jle
fisttps
mov
push
and
mov
push
push
jns
enter
dec
mov
shlb
cmp
xchg
enter
mov
jle
and
mov
lret
mov
sub
inc
add
shrb
mov
loop
lret
imul
pop
jnp
scas
pop
call
jnp
test
js
jg
jo
cmp
mov
mov
dec
sbb
fildll
fdivrl
nop
call
mov
and
aaa
or
ret
mov
mov
dec
nop
add
and
inc
pop
int
jle
push
out
mov
in
xchg
push
mov
inc
setb
inc
push
int
mov
or
push
mov
cmp
into
cmp
mov
inc
sub
bound
sbb
fisttpll
dec
aam
cmpsb
jb
lret
xor
mov
scas
lret
daa
jl
test
inc
add
cmp
inc
push
mov
shll
pop
mov
sbb
xor
or
push
mov
in
sub
inc
mov
pop
xor
sbb
pop
lock
mov
test
dec
mov
inc
mov
inc
nop
xor
xor
jo
lods
data16
aam
pop
jns
adc
lods
jns
jecxz
imul
push
in
fistps
ljmp
addr16
pop
pop
cmp
jle
or
std
push
mov
insb
test
push
rcrl
lret
xchg
loop
inc
xor
mov
dec
lds
xchg
push
xchg
mov
inc
dec
xchg
iret
movsb
mov
push
leave
xor
test
mov
push
dec
xchg
in
mov
jl
inc
inc
xor
sbb
iret
jg
int
clc
pop
clc
push
mov
int3
aas
bound
jns
pop
shlb
pop
not
lahf
pushf
push
negb
inc
pop
icebp
inc
mov
pop
stc
xchg
pop
push
iret
xchg
mov
test
sahf
icebp
fimull
jbe
movsl
sub
sbb
enter
inc
mov
test
mov
cld
pusha
adc
jno
xlat
dec
xor
mov
dec
xchg
add
mov
mov
pusha
pushf
mov
data16
stc
rorb
sbb
dec
sub
scas
sub
cmp
pminub
xchg
or
rcll
lods
push
daa
imul
xor
ljmp
out
int3
dec
mov
dec
rol
or
hlt
lret
jbe
subl
pop
jp
jns
loopne
jge
push
scas
push
pop
lret
inc
adc
movsb
sub
rorl
movsb
dec
lds
inc
jae
cmp
into
mov
pop
pop
jmp
fsts
call
xlat
adc
mov
mov
cwtl
and
adc
mov
sub
push
loop
push
xchg
xlat
clc
jne
pusha
out
aas
mov
ret
inc
mov
lods
orl
int
and
ss
sar
sbb
in
sbb
pop
xor
dec
cmc
je
test
fidivrl
jnp
xor
push
fisubl
dec
pop
movsl
loope
lods
add
xor
inc
jecxz
mov
jmp
mov
xor
jo
andl
popw
dec
and
pop
lock
or
rclb
hlt
dec
test
mov
fs
lock
add
pavgw
je
cltd
cld
jbe
bnd
push
pop
dec
sbb
mov
mov
mov
cwtl
mov
roll
dec
in
int3
cmp
pop
mov
mov
mov
test
add
stc
rorb
in
icebp
mov
sbb
fisttpll
lcall
ljmp
rorl
out
stos
sub
and
mov
inc
or
enter
aam
push
mov
sti
cmp
lods
push
pop
cwtl
mov
popf
cli
xchg
jge
outsb
shrb
lret
mov
mov
add
xor
mov
push
in
mov
sti
adc
int
mov
add
dec
cmp
mov
leave
std
popa
fsin
jp
lods
xlat
frstor
gs
add
xchg
sub
push
bound
aad
inc
add
idivl
fdivrl
outsl
adc
jecxz
shll
pop
out
mov
cmpb
push
mov
popa
push
outsb
inc
add
stos
sti
push
mov
mov
mov
movsl
or
xor
ja
jmp
xchg
int
or
add
test
iret
dec
or
xchg
jl
cmpsb
ja
leave
andl
mov
sbb
aaa
pop
or
mov
and
ret
shll
or
leave
push
arpl
inc
xor
test
mulb
iret
jg
and
push
mov
sub
inc
in
or
or
dec
out
std
sub
hlt
xchg
push
out
lcall
adc
stos
add
mov
fwait
aas
lea
mov
jg
or
lahf
daa
add
in
in
push
inc
push
shrl
das
lods
xorb
or
shl
mov
mov
sarb
and
call
xchg
xlat
scas
outsl
add
imull
frstor
add
shlb
leave
ret
jo
clc
jnp
jnp
inc
pop
cli
shrb
lock
aam
out
push
ss
mov
sub
in
out
inc
jne
loopne
dec
cs
fdivrl
and
loope
scas
mov
adc
pushf
mov
mov
fmull
inc
movsl
pop
aas
adc
adc
imul
or
jne
xchg
add
test
fwait
je
pop
pushf
add
test
push
je
jae
jmp
jmp
push
mov
imul
mov
mov
out
xor
sub
mov
dec
insb
cmpsb
lods
fstl
xchg
insb
aas
adc
xor
cmp
mov
mov
and
lods
loop
stc
push
hlt
rol
adc
imul
mov
leave
jne
scas
inc
jno
call
aad
mov
insl
mov
and
push
sbb
xchg
mov
lcall
clc
push
pop
lea
rorb
xor
and
xor
in
shlb
lret
xor
push
jno
sbb
cmp
sbb
lret
xor
loope
xor
and
insb
stos
cmc
xchg
test
and
xchg
mov
jnp
test
mov
cmp
mov
pushf
lods
std
xor
cwtl
shll
push
push
sbb
mov
adc
stos
mov
ret
cs
xor
dec
out
fldenv
push
pop
push
xchg
sbb
pop
ss
roll
lcall
imul
inc
xor
int
jecxz
xchg
cld
push
xor
nop
add
pusha
jmp
and
int3
cli
sbb
jno
cmc
jae
enter
ret
pop
int3
mov
xchg
jbe
or
hlt
cli
mov
mov
xchg
ja
in
andb
xor
jmp
rorb
sub
orl
xchg
aaa
adc
popa
decl
outsb
sbb
pop
stos
enter
fadds
adc
and
dec
mov
stc
mov
xorl
enter
adc
sbb
notl
iret
lret
push
sarl
stos
sbb
xchg
fistl
sti
cmp
mov
mov
mov
in
push
loop
mov
pop
inc
orb
es
mov
and
scas
cmp
add
mov
mov
int3
jne
cmp
lea
jb
test
sbb
xor
jns
cli
loope
xor
cmpsl
dec
push
in
push
rorb
imul
cmpb
fldcw
jb
lcall
mov
mov
inc
ds
mov
out
xchg
cli
dec
repz
mov
xor
jnp
xor
cmpsl
fildl
xor
adc
xor
int
flds
push
enter
notb
iret
leave
add
gs
ficoml
pop
xchg
mov
inc
shlb
loope
cmp
mov
xor
stos
daa
mov
mov
push
mov
or
fyl2x
test
fwait
lahf
loopne
repz
add
fisubrl
push
sbb
inc
jmp
lret
xorl
adc
dec
push
inc
inc
lods
call
jg
rcrb
and
bound
lcall
outsl
sar
in
mov
mov
jp
ds
enter
pushf
xlat
sbb
xor
cmpsl
cmc
pop
push
mov
aas
jg
aaa
lret
or
adc
jmp
fsubrs
cmp
fwait
pop
ja
mov
ret
mov
pop
je
mov
fs
ret
xchg
sbb
imul
sbb
fcmovnb
add
mov
push
pop
inc
jae
je
mov
and
sbb
scas
into
shrb
shlb
shll
jp
fnstsw
enter
xchg
jns
inc
sti
pop
ja
sub
nop
aas
adc
sub
add
cmp
test
mov
cmp
inc
adc
xor
cmpsl
test
pop
mov
xchg
pop
mov
je
adc
cmp
mov
outsl
call
sub
enter
andb
dec
or
mov
insl
jmp
xchg
jp
cmp
pop
insb
ja
pop
lcall
push
xchg
push
outsb
xor
mov
mul
sub
aam
rol
insl
xchg
xchg
faddl
sub
clc
push
or
adc
cmp
outsl
xor
in
pop
push
pop
push
jne
iret
add
icebp
or
sahf
and
sub
loopne
popf
jl
rclb
test
inc
lods
lods
xchg
aam
push
dec
std
pushl
insb
mov
clc
xchg
imul
inc
cmpsl
pop
rorb
xlat
xchg
mov
jge
insb
sbb
jecxz
mov
pusha
aad
fmuls
or
fisttps
sbb
call
addr16
xchg
call
mov
mov
or
adc
xchg
pop
cmpsw
out
cmpxchg
add
into
inc
rorl
push
addb
inc
cmp
inc
adc
adc
rorl
xchg
test
or
and
cmp
lock
inc
lret
dec
mov
dec
mov
insb
je
mov
jbe
sbb
mov
xor
cmpsb
aaa
inc
inc
mov
je
jnp
xchg
insl
ja
ret
fstp
mov
fwait
xchg
push
inc
sub
adc
pop
pop
inc
dec
sbbl
push
mov
sub
testb
insl
bound
shll
sbb
aaa
rclb
pop
pop
push
xor
cmp
int3
jo
jne
das
les
sbb
pushf
lgs
push
in
jbe
sub
mov
cmp
dec
lods
imul
rclb
loopne
or
mov
int3
dec
mov
call
or
jbe
imul
loop,pn
sar
cmpsl
dec
xchg
and
push
xor
out
mov
adc
xor
push
rol
inc
push
xchg
scas
jecxz
xor
jb
loop
outsb
inc
test
shlb
pop
fldenv
ljmp
push
inc
or
xor
mov
mov
mov
mov
pop
filds
fisttpll
dec
mull
mov
stc
xor
test
loop
lahf
in
cmpb
icebp
dec
pop
lods
ljmp
mov
scas
into
cmc
inc
aaa
sahf
xlat
lret
inc
leave
and
test
fld
xorps
ja
negb
popf
mov
les
repnz
mov
movhps
mov
adc
popa
pmaxsw
int3
mov
iret
ds
addb
pop
int
lcall
pop
fbld
dec
sub
lock
adc
scas
movsb
dec
pop
adc
sub
sub
in
outsb
pop
sbb
pop
lock
lock
and
js
sbb
jg
lods
lret
xor
cwtl
je
push
jl
inc
repnz
loop
mov
shrb
bound
test
pop
aad
sahf
or
fsub
rcrl
mov
test
shl
push
xlat
pop
pop
fisttps
ret
in
inc
and
cmp
push
insl
adc
push
das
data16
mov
mov
imul
push
xchg
je
jbe
aad
sarl
lds
jp
push
add
in
jbe
xlat
cmc
or
add
xor
dec
std
movsb
dec
lcall
xchg
jecxz
divl
gs
cmp
dec
fsubs
test
xchg
je
inc
mov
loope
sti
call
andb
movsl
cmp
and
xor
in
loop
xchg
push
fidivs
test
repnz
mov
mov
cmp
lret
dec
cmp
lods
inc
cmpl
xchg
mov
in
pusha
dec
mov
sub
test
fsts
jne
jnp
popf
sbb
jbe
mov
push
push
push
mov
outsl
mov
xchg
and
test
mov
mov
mov
mov
icebp
mov
cli
orl
cmpb
leave
js
test
xchg
push
cmpsb
or
inc
mov
in
push
xor
outsb
int3
push
scas
mov
fcomip
pop
pop
sbbb
dec
jl
div
in
sbb
arpl
mov
dec
sub
call
cs
mov
mov
movsb
or
mov
xor
xor
stos
jne
les
in
mov
jno
fst
and
sbb
dec
push
pop
mov
imul
insl
outsb
jg
das
call
inc
cmp
aaa
push
inc
add
adc
out
bound
mov
js
enter
pop
popf
test
add
mov
repz
mov
inc
mov
xor
add
mov
test
stos
mov
cmp
fcomp
and
outsl
push
sbb
movsb
jp
jle
and
push
xchg
mov
dec
push
adc
pop
mov
imul
adc
pop
adc
dec
lcall
insb
inc
sub
in
out
cwtl
outsb
inc
xor
subl
inc
ljmp
ljmp
xor
fadds
or
jg
pop
imulb
xor
cmp
loope
iret
int
fisubrl
push
push
push
jmp
add
push
sub
push
sar
out
cmp
iret
and
into
hlt
rcrb
sbb
js
repz
cmp
add
cmpsb
jbe
inc
push
mov
hlt
xchg
or
mov
xchg
lods
test
mov
push
or
and
push
mov
mov
das
jbe
jp
jb
faddl
push
lcall
push
push
jbe
adc
flds
mov
adc
fsubs
add
into
arpl
and
int3
jo
adc
in
inc
repnz
mov
mov
jp
pop
loopne
mov
and
aad
add
test
inc
mov
imul
push
push
pop
ja
mov
stos
inc
push
sbb
fldenv
dec
adc
xlat
sahf
lock
and
scas
jl
xor
fidivrs
pop
shr
and
mov
out
mov
or
jb
jae
ret
repz
push
nop
in
xor
or
aam
adc
aaa
decl
cmp
das
outsb
rcll
insl
push
mov
mov
inc
jge
idivb
xor
cmpsl
pusha
aaa
pusha
and
loop
dec
sub
mov
jl
cli
add
dec
daa
sarb
data16
inc
sub
fdivrl
pop
mov
stos
fisubl
addr16
sbb
fst
or
out
sbb
arpl
and
mov
push
adcb
xchg
rcl
push
repz
ficoms
push
jp
pusha
les
jno
hlt
je
add
sbb
enter
dec
data16
inc
dec
xchg
xchg
adc
jno
mov
lret
xchg
push
loopne
jmp
out
adc
test
cs
jo
sbbl
popa
fucomp
pop
loopne
jg
xor
iret
loopne
jnp
out
mov
cli
ss
or
stos
movl
cmpsb
lods
mov
std
fadd
jb
sub
and
rorb
pop
cmp
push
mov
inc
mov
and
jb
mov
cmp
lds
shlb
fcom
pusha
xlat
lea
cmc
inc
insb
fists
sbb
add
pop
insl
loop
adc
jno
jge
mov
pushf
inc
mov
jg
xchg
and
and
popa
push
push
stc
lods
cmpsb
xchg
or
repnz
test
mov
xchg
xor
inc
xchg
adc
pop
pusha
mov
lcall
xorb
inc
cmpsl
fdivp
or
xor
jle
inc
shlb
xor
inc
daa
pop
xchg
xorl
lds
imul
les
push
dec
cmp
insb
inc
rcrl
fcoms
sub
je
loop
ret
or
push
pop
hlt
das
push
stos
sub
das
push
mov
fdivrl
dec
mov
mov
add
pop
mov
les
gs
sbb
lret
dec
repz
and
mov
sub
dec
in
jo
and
in
data16
fidivl
mov
loope
sub
pop
rcl
js
ja
ja
fcmovnbe
mov
adc
adc
adc
xor
push
lock
ficompl
mov
fwait
and
push
mov
cli
lds
out
adc
pusha
insb
mov
inc
fisubrl
lds
xor
push
pop
jmp
repnz
pusha
filds
push
jecxz
jno
mov
jmp
push
mov
mov
mov
push
mov
orl
or
jnp
mov
test
cmp
lea
sbb
into
ljmp
in
xchg
mov
ss
dec
inc
movl
or
fdivr
outsl
xchg
sub
repz
negb
jns
xor
jae
inc
push
cmp
add
movsb
cmp
mov
mov
mov
jmp
push
enter
int3
fildll
scas
lcall
mov
imul
repnz
out
pop
push
repnz
xchg
push
movsl
add
das
mov
jmp
xor
pop
xor
mov
fnstcw
mov
dec
sahf
imul
movsl
repnz
sub
xchg
xor
jno
rcrl
cmpsl
or
xchg
mov
sbb
jmp
sub
scas
leave
sbb
sub
rorb
std
pop
xchg
shll
dec
mov
sub
mov
btc
outsl
scas
out
dec
sub
ja
cs
xor
jg
xor
xor
loop
add
push
in
mov
add
inc
rorl
xor
subl
pop
cmpl
inc
sub
movsl
clc
fcompl
jecxz
cltd
cmpsb
enter
adc
mov
sub
jecxz
pop
xlat
jbe
push
dec
adc
andb
sahf
cmp
mov
jecxz
xor
pop
stc
adc
popf
jp
add
ja
sub
sti
lcall
fwait
aad
mov
pop
int
orb
cli
mov
mov
xchg
push
lea
jno
xchg
push
les
mov
push
stc
es
sub
or
cmp
mov
and
push
push
in
fsubrl
mov
pop
jbe
mov
jae
les
push
es
mov
loope
je
in
cmp
jae
push
xlat
aaa
adc
out
pop
mov
cwtl
cmp
xor
pop
mov
adc
pop
xchg
push
mov
mov
out
lahf
or
in
divb
jmp
pusha
adc
movl
adc
aad
or
mov
push
jecxz
mov
fs
mov
sarl
sub
notl
mov
sub
xor
jo
jb
stos
add
jp
mov
ljmp
pop
in
push
mov
test
adc
inc
push
into
out
or
adc
js
gs
xchg
push
addr16
bound
ja
roll
rcrb
data16
aam
mov
ljmp
leave
adcl
inc
fcompl
cld
add
jb
repz
cld
in
and
mov
jl
pushf
mov
and
frstor
xor
adc
or
jle
jle
adcb
call
jbe
sbb
rcll
cmp
mov
lock
cli
mov
frstpm(287
adc
sub
inc
sbb
clc
repnz
cmpsb
cmp
ret
sbb
sbb
aaa
push
sarb
ljmp
mov
stc
frstor
dec
aam
fnstenv
je
inc
cmp
rcrb
jns
hlt
jge
xlat
mov
movsl
mov
jnp
mov
aad
lds
cli
adc
in
orl
clc
flds
cltd
cmpsl
cmpsl
or
lds
or
and
lods
adc
out
jp
aad
dec
push
xchg
inc
arpl
je
mov
xchg
sbb
dec
popf
adc
arpl
xchg
jno
mov
mov
xlat
fbld
sub
out
and
sbb
cwtl
or
xchg
pop
nop
ss
xchg
ds
and
and
adc
sub
inc
addr16
and
jmp
push
ljmp
aaa
sbb
sbb
mov
mov
popa
or
scas
daa
xchg
xchg
aad
sbbb
shl
sub
jne
das
int3
inc
mov
mov
jae
fdivrl
cli
push
pop
stc
div
test
clc
mov
test
enter
pop
fsubrs
mov
mov
ret
movsb
jne
and
or
in
xchg
orb
jbe
or
aam
roll
int
inc
cwtl
ret
clc
mov
notl
in
or
xchg
insl
leave
mov
js
inc
out
mov
aad
cmp
cmp
xchg
xchg
pop
insb
sti
repnz
cmp
mov
in
cld
lret
sub
mov
and
ret
cwtl
or
icebp
and
mov
out
mov
int3
jne
ss
fdivrs
cli
push
shll
mov
gs
add
push
stos
sbb
sti
mov
sbb
fisttpl
mov
and
push
call
aam
fs
sti
jo
push
shlb
xor
mov
push
xchg
xchg
push
les
pushf
stos
lea
mov
mov
arpl
mov
mov
cs
cmc
xor
mov
test
xor
mov
inc
test
xor
pextrw
es
ljmp
lds
add
dec
dec
imul
test
push
jb
rorb
stc
data16
into
aam
xchg
adc
outsl
mov
sbb
mov
test
daa
fisttpll
call
mov
rep
lods
jae
shl
pop
mov
xor
mov
testb
ds
cmpsl
xchg
and
pop
mov
cmp
js
pusha
std
inc
push
sbb
loopne
xor
in
call
scas
out
jne
and
inc
xchg
lods
cwtl
rorl
js
scas
daa
xchg
push
mov
lret
mov
sti
sbb
jecxz
mov
xor
cltd
dec
sub
clc
adc
mov
subl
pop
push
jb
add
call
adc
fdivrp
jp
mov
mov
xchg
pop
in
sub
mov
les
mov
jnp
in
and
xchg
inc
fwait
sbb
test
outsb
xchg
or
and
call
inc
cwtl
mov
imul
sub
and
out
push
jne
ss
in
inc
mov
jge
adc
repz
or
inc
mov
mov
pop
mov
repnz
xchg
fcomps
es
out
nop
sarb
xchg
lcall
jp
mov
out
pop
jl
addb
adc
xor
xor
ds
lods
int
adc
fnstcw
ja
call
orb
xchg
cs
dec
loop
pop
inc
dec
sarl
pusha
jle
cli
xor
jg
mov
xor
dec
stos
inc
iret
jecxz
adc
push
popa
push
insb
mov
sbb
andb
xor
jecxz
push
mov
cmp
in
notl
repz
fidivrs
insl
jp
push
mov
xchg
mov
repnz
jmp
lds
rorl
sbb
mov
cmp
cld
adc
addr16
adc
jecxz
loope
cmp
sbb
pop
mov
pop
dec
pop
cmpb
cmpsl
mov
cld
test
jns
imul
lods
sub
sub
sbb
cmp
aad
adc
add
dec
test
cltd
int3
fisttps
push
xchg
xchg
cmp
add
rep
push
mov
das
and
scas
jb
pushf
and
or
dec
push
inc
cmp
push
lcall
lods
jle
in
dec
aaa
sbbl
cmpsb
outsl
pushf
xor
jnp
loope
mov
dec
addr16
xor
and
fnstenv
push
lods
je
jmp
xchg
mov
in
outsb
xor
clc
ds
icebp
lods
testl
ror
mov
mov
sbb
pusha
bound
mov
addr16
mov
iret
inc
and
add
inc
inc
sub
pop
mov
incl
in
jne
and
mov
cmp
inc
fs
cmp
and
jbe,pt
inc
jo
lods
syscall
sbb
pop
push
and
xlat
jne
mov
or
sbb
lret
push
mov
stos
sbb
push
mov
test
int3
testb
mov
xchg
clc
xlat
test
xor
lods
mov
or
mov
or
adc
adc
add
addr16
cmp
dec
dec
mov
fs
loope
aas
in
inc
pop
stc
sbbl
cmpsl
inc
push
add
xchg
and
xorb
fs
mov
or
lods
in
scas
add
test
mov
push
and
adc
sub
hlt
arpl
arpl
dec
add
push
mov
inc
int3
sub
pop
jg
clc
jmp
shlb
shlb
mov
mov
rorl
xor
inc
push
popa
xchg
push
jo
or
sbb
shll
insb
adc
xor
mov
push
test
dec
adc
inc
xlat
and
out
push
push
jnp
mov
sub
dec
push
jle
pop
inc
add
mov
icebp
pop
in
lods
xchg
adcb
ja
sub
outsl
jle
bound
popa
inc
jne
sysret
push
xchg
jle
in
inc
dec
inc
xchg
das
fsubrl
sbb
xor
ficompl
pop
shll
push
das
or
fs
shlb
neg
das
fildll
iret
lock
jmp
xor
pushl
xchg
ret
out
sub
leave
arpl
shrl
inc
jns
pop
daa
repnz
add
cli
mov
mov
lahf
aaa
lret
cmp
ljmp
subb
mov
and
inc
ror
cmc
pop
push
push
fnsave
mov
jle
or
or
push
andb
lods
in
outsl
mov
gs
jae
xchg
sbb
popa
ror
adc
and
dec
dec
xchg
loopne
les
xor
imul
jnp
inc
sub
out
mov
or
or
test
sbb
repz
negl
dec
out
ret
movsb
ret
push
inc
mov
cmp
or
daa
xor
lret
sub
push
pushf
fldlg2
gs
xchg
push
add
jb
mov
pushf
lret
outsl
xor
sahf
mov
das
push
hlt
rorb
pop
push
ret
push
jne
jae
lds
movl
mov
rcrl
xor
insb
lds
sahf
jae
sahf
cmp
jb
mov
dec
outsb
stos
insl
ret
pop
test
flds
xchg
lcall
sbb
dec
add
sbbb
inc
dec
push
sti
cmp
inc
cmp
ja
adc
gs
xchg
out
addr16
jle
leave
dec
cmp
popa
fdivl
sbb
icebp
cmp
les
fdiv
imul
mov
movsl
jmp
cld
scas
add
adc
cmp
and
xchg
adc
cmp
mov
inc
les
pop
lahf
cli
inc
push
sub
fsubl
pop
mov
pusha
in
ret
pop
mov
pop
lret
lcall
xchg
or
dec
shlb
xor
movsl
mov
lods
xchg
mov
jb
and
stos
lods
aas
test
sbb
push
jmp
das
insb
loop
adc
outsb
mov
cmpsb
pop
loope
push
sti
adc
cmp
cmpsb
pop
arpl
jne
push
jmp
pop
sahf
mov
fistpll
popa
fldenv
dec
mov
pop
xchg
jno
mov
ds
add
incl
pop
push
mov
pop
lcall
push
sub
lock
push
int
in
js
push
mov
daa
push
cli
push
cli
xchg
cmc
xchg
cs
push
insb
hlt
xchg
sbbb
lods
and
mov
fnsetpm(287
jge
test
rolb
sti
je
xchg
mov
lcall
dec
dec
pop
xor
push
aaa
scas
or
jne
and
xor
cld
mov
mov
notb
mov
add
pusha
scas
psraw
mov
inc
flds
dec
insl
mov
jge
xchg
sub
rolb
cwtl
orb
jns
ret
les
lock
fdiv
xor
xchg
adc
fstl
cwtl
mov
ja
adc
in
mov
aad
lods
rolb
mov
mov
push
sahf
xchg
mov
and
add
std
mov
or
aaa
sbb
push
ret
pop
xchg
cmp
pop
sbb
out
xor
out
jge
pop
aam
bound
and
std
insl
mov
aad
das
add
inc
clc
or
and
inc
inc
mov
not
or
pop
daa
mov
xlat
dec
sub
addr16
decb
into
dec
lods
xchg
and
cltd
cmovs
xchg
daa
pop
inc
jge
fisttps
mov
cmp
mov
pop
jo
sti
hlt
lret
stos
daa
fcmovu
test
hlt
stc
sub
push
jmp
pop
aam
push
mul
xchg
mov
mov
aas
xor
sbb
in
or
in
and
inc
addl
or
out
cli
decl
dec
cmp
and
add
cmp
int
rcl
js
loop
sbb
mov
mov
xor
cmc
sbb
popf
aaa
xchg
dec
sbb
ret
stos
insl
adc
mull
fldenv
outsl
xchg
sahf
pop
mov
push
pusha
nop
pop
pop
in
movsl
mov
mov
push
fidivrl
test
ss
lret
xchg
pop
icebp
inc
sub
sahf
or
lea
and
movsl
mov
lcall
ja
mov
subl
out
xchg
popa
adc
xchg
mov
fcomps
das
lods
fwait
sbb
xchg
mov
jbe
mov
lds
push
mov
sbb
cmpsl
out
xor
and
pushl
sbb
dec
outsl
icebp
lods
mov
jb
jno,pn
jg
mov
cld
sbb
out
mov
mov
dec
adc
fmuls
cmpsb
xlat
cmpsb
push
enter
mov
mov
mov
repnz
mov
lods
sub
jmp
loop
loope
xlat
rclb
mov
aad
adc
adc
mov
ret
cmp
cmp
int
lea
adc
dec
in
mov
in
dec
aad
ja
inc
inc
sti
dec
lods
mov
mov
mov
cmp
jge
daa
jmp
std
sub
jo
pop
push
cmp
lcall
rcll
fmuls
in
lds
xlat
pop
push
sbbb
dec
mov
pop
dec
add
dec
add
gs
int3
lods
mov
dec
ret
rcl
lock
cmp
sub
adc
xor
aaa
xor
pop
shll
daa
lahf
std
jg
push
scas
dec
sbb
mov
xor
call
lcall
fldt
mov
mov
imul
pushf
dec
decb
adc
hlt
mov
bnd
cli
inc
add
xchg
ljmp
or
cwtl
jecxz
inc
jae
ds
mov
loop
xchg
pop
mov
rcr
xchg
xor
xor
popf
les
testb
decb
lcall
pop
leave
andl
mov
mov
jge
mov
sahf
or
pusha
fildl
lods
mov
or
mov
jnp
mov
push
jmp
xchg
mov
jp
adc
jns
ljmp
test
aam
mov
or
iret
stc
mulb
out
jne
or
sub
enter
inc
or
arpl
push
jp
dec
inc
inc
scas
xchg
cmp
jge
aam
imul
sar
lcall
jnp
lods
push
ljmp
xor
pop
gs
push
inc
push
stos
mov
js
hlt
lret
out
bound
popa
fmuls
inc
lahf
nop
mov
pop
push
lods
sub
jecxz
lods
jno
clc
cmp
mov
jle
and
out
inc
cwtl
adc
cmc
adc
divb
in
das
cwtl
repz
std
lret
imull
xorl
adc
lahf
aas
push
and
xchg
das
and
cmpsl
xor
jb
adc
push
arpl
insb
push
addl
imul
dec
out
and
cmp
xchg
nop
xor
jbe
xchg
int3
lea
mov
xorb
dec
mov
dec
and
daa
xchg
fidivs
pop
mov
movsl
push
pop
push
call
lods
mov
pop
and
jns
jbe
mov
addl
and
mov
fdivl
test
fs
mov
loop
test
or
xchg
xchg
add
fadd
popa
lods
or
insl
jecxz
popa
mov
popa
scas
fwait
mov
add
stos
mov
inc
dec
pop
call
push
pop
push
sub
or
test
jbe
adc
stos
sbb
inc
pop
mov
cli
mov
adc
or
getsec
push
cmpsb
cmp
mov
mov
or
sub
push
das
fs
leave
adc
pop
rol
repz
cld
jmp
cmp
mov
mull
daa
fistps
fstp
pop
subl
arpl
push
fistps
fwait
lret
repz
es
pusha
lock
cmp
mov
in
add
aam
loop
cmp
or
pushf
mov
test
inc
loope
lea
dec
jge,pn
mov
fldt
sbbb
stc
data16
lahf
cld
mov
mov
sbb
xor
dec
pop
lret
cmp
cwtl
jl
aaa
data16
andb
and
pop
pusha
cmp
mov
test
push
and
cmp
enter
mov
test
jp
dec
iret
enter
stos
cmp
rcll
pop
jo
shr
in
loop
nop
mov
ret
cli
pop
daa
jo
movsl
sti
push
daa
sbb
lcall
subl
cmp
xchg
inc
scas
cmc
xor
mov
jo
aad
mov
cmpsb
lods
or
lret
lods
mov
jae
shll
jnp
cwtl
and
aad
adc
pop
jb
mov
inc
inc
xchg
loopne
out
push
add
add
icebp
jge
push
testl
lds
stos
popa
add
aas
and
adc
push
xchg
sbb
fiadds
mov
xchg
in
dec
je
in
outsl
imul
push
lcall
fwait
jmp
xlat
push
shl
stc
adc
add
inc
mov
jnp
mov
inc
cli
inc
int
rol
jle
insl
test
mov
jmp
lods
and
mov
xor
ljmp
fimull
push
mov
stc
nop
shll
pusha
or
addr16
fs
xor
jae
mov
mov
rclb
dec
popf
and
xor
rcrl
pop
fmuls
adc
lods
cwtl
test
cwtl
push
movsb
dec
stos
int
xlat
and
add
jge
and
aaa
mov
xchg
je
test
mov
cmp
fwait
repz
test
pushf
mov
lahf
inc
xor
mov
int
pop
pusha
call
stc
jno
test
xor
pop
cmp
inc
add
xchg
sti
jmp
fisubs
xor
sub
sahf
dec
scas
mov
leave
jp
imul
and
mov
ret
xor
iret
sbb
rcrl
mov
xchg
jg
mov
sub
xchg
xchg
lcall
or
ret
dec
adc
out
fwait
push
or
push
mov
jae
sub
sub
dec
std
fnsave
fwait
jo
and
js
xor
fadds
in
pop
dec
and
pop
pop
or
sub
stos
push
or
cmp
push
sub
mov
aad
std
adc
jmp
frstor
sar
sub
imul
adc
cmp
jb
sub
hlt
sbb
out
inc
mov
pop
outsl
stos
jae
sahf
lcall
xor
test
fstpl
leave
jge
insb
add
dec
subl
xor
xchg
add
fdivr
leave
jp
sahf
and
orl
push
sbb
mov
jo
movsl
in
xchg
dec
cld
or
in
orb
sub
icebp
fldl
xlat
mov
or
cltd
and
stc
inc
sub
fistpl
cli
movsl
cmpsb
sbb
inc
cmpsb
sbb
clc
out
inc
xchg
mov
icebp
inc
cmp
add
inc
sbb
inc
xchg
mov
clc
mov
into
pop
imul
xchg
push
scas
mov
jmp
push
out
ss
call
mov
push
or
lcall
loope
hlt
jbe
and
add
pop
enter
mov
clc
and
mov
repz
jl
test
ret
push
lods
sbb
fldt
insb
xor
loop
dec
sub
scas
dec
ljmpw
bound
rol
in
cmc
cmpsb
mov
out
pop
inc
clc
cltd
mov
das
mov
sbb
xlat
xchg
jle
add
add
ja
sbb
mov
jg
push
addr16
and
out
ret
sbb
pop
xchg
int3
out
test
int3
cmp
out
mov
xor
cmp
mov
je
sub
in
dec
mov
shlb
pop
sarl
jne
scas
out
xchg
mov
loopne
pop
jno
shlb
sbb
jne
pop
rcl
sub
mov
popf
jecxz
add
cmp
add
sbb
mov
out
xor
adc
stc
mov
clc
jne
dec
leave
sub
xchg
out
and
ret
add
aad
pop
dec
cltd
sub
test
cmp
add
in
push
adc
jle
lea
sbb
dec
ret
mov
and
xchg
and
ds
xor
push
dec
popa
cli
xor
adc
call
jmp
and
mov
sub
xchg
rcll
fwait
jg
xor
or
pop
je
aas
mov
xor
mov
ret
movsl
dec
inc
xor
jp
add
stos
int
jge
push
bound
cmp
js
xor
lods
mov
cmpsl
scas
add
std
inc
pop
push
pop
cld
aad
dec
cmp
hlt
add
mov
inc
mov
popa
adc
or
call
cs
fscale
mov
mov
xlat
mov
fcompl
ljmp
out
mov
loope
ret
sub
leave
sub
mov
mov
or
js
sbb
lods
insl
push
inc
aam
mov
inc
inc
lret
jb
xor
or
iret
cli
sbb
fisttpll
lods
out
repz
push
fs
pop
sbb
frstor
cmp
pop
test
add
jo
cvtdq2ps
test
ficomps
sbbb
sbb
test
es
mov
call
gs
pop
test
add
popf
ret
xchg
sbb
mov
test
lds
fsub
loopne
ljmp
sbbb
or
mov
adc
outsl
or
jl
and
lcall
mov
sub
cs
mov
mov
mov
push
inc
ja
nop
in
or
push
adc
inc
pop
fcom
mov
and
pop
icebp
dec
rol
inc
cmp
cmp
sbb
shlb
xor
mov
push
and
fcoml
ja
je
inc
xchg
loopne
std
and
sarl
arpl
mov
in
in
bnd
repz
push
sbb
mov
fs
fildll
out
mov
adc
dec
or
arpl
sti
lds
jae
xchg
jne
in
mov
inc
and
ret
push
jae
xchg
mov
repz
adc
adc
xor
push
jno
out
push
lods
ja
push
pop
into
xchg
cmp
fmull
test
dec
add
xchg
or
push
pop
dec
or
sbb
das
mov
push
les
js
into
xor
inc
popa
lods
das
or
int3
stc
xchg
inc
sbb
jmp
mov
dec
lahf
test
into
bound
fcomp
pushf
roll
fcompl
sahf
pushf
push
push
cmp
cmp
icebp
dec
xorl
sahf
pop
mov
xor
inc
jmp
idivb
add
sbb
jg
sub
test
call
and
dec
push
out
jo
mov
rclb
dec
cmp
cmpsl
int3
cwtl
pop
addb
jae
sahf
sub
adc
or
push
and
dec
pop
mov
in
push
in
scas
lods
out
or
sbb
xlat
push
inc
xchg
call
rolb
ss
or
xor
inc
push
aaa
shlb
insb
mov
push
cmpsl
adc
cltd
sbb
lret
test
test
mov
add
sub
jg
rorb
or
or
push
pop
subl
rcrb
cltd
inc
xor
jno
mov
adc
or
mov
dec
das
mov
add
in
fsubrs
cwtl
mov
dec
sbb
fnstcw
add
pop
sbb
rcrl
mov
xchg
shl
pop
and
loop
movsb
mov
out
xor
popa
daa
inc
lock
scas
fsubl
in
adc
or
push
out
pop
das
push
xor
mov
inc
or
mov
loope
mov
fidivrs
lret
pop
pop
mov
enter
xor
scas
fwait
jne
fldl
xchg
jae
inc
cli
out
inc
mov
jl
ds
scas
fsts
fnsave
hlt
cmp
add
cld
call
mov
into
xlat
and
into
add
jmp
fnstcw
and
shlb
pop
inc
mov
xor
outsl
call
inc
dec
inc
or
jae
jle
adc
mov
xchg
push
imul
or
jecxz
push
mov
cmpsl
xchg
add
mov
std
dec
mov
mov
les
mov
ljmp
sub
stos
xor
mov
mov
movsb
cs
pop
hlt
call
imul
dec
gs
shl
sbb
in
mov
mov
out
push
sub
mov
sti
pop
aad
sub
jae
icebp
xacquire
add
xchg
xchg
push
mov
test
jnp
into
fsubs
adc
mov
xchg
xor
out
push
push
in
push
sub
cmpb
cmp
adc
ret
fmul
daa
stos
dec
and
movsb
and
sbb
lcall
loopne
sbb
dec
stc
push
insl
push
std
gs
std
mov
push
inc
mov
dec
insb
mov
lea
sub
mov
fsts
adc
mov
iret
dec
icebp
hlt
popf
dec
mov
jbe
adc
adc
xchg
sbb
repz
gs
mov
inc
cmpsl
xchg
gs
and
jne
inc
dec
or
std
ss
pop
cld
imul
lret
sbb
loopne
sub
pop
leave
cmp
inc
or
addr16
iret
imul
jecxz
fs
outsb
das
cmpsb
xor
cltd
mov
push
dec
fcoms
xchg
and
gs
mov
and
movl
cwtl
pop
mov
dec
lods
mov
push
inc
int
dec
jge
fsubrp
les
adc
es
dec
dec
xchg
clc
push
pop
jns
pusha
jo
aaa
bnd
aaa
pmulhuw
xor
cmpsb
jecxz
cmp
mov
jle
jl
das
aad
fcmovne
and
outsl
jb
ja
pushf
ret
outsb
ret
sbb
fldl
popa
dec
iret
mov
pop
or
rolb
sub
ret
int
jb
lea
pop
jp
add
dec
cs
xchg
xchg
push
scas
sbb
xor
js
fstpl
gs
jae
hlt
mov
pop
mov
sahf
daa
sbb
ja
pop
add
leave
xchg
bound
and
ja
or
lcall
scas
cmp
sub
adc
rcrb
rcrb
mov
cwtl
xor
sub
adc
xchg
mov
test
xor
imul
mov
adc
dec
xorl
and
or
push
in
out
cmp
das
xor
pusha
jmp
cli
xor
xchg
mov
xchg
in
fwait
dec
dec
rclb
std
repnz
xchg
dec
arpl
aaa
pop
xor
pop
out
jp
add
clc
loopne
cwtl
out
mov
jnp
scas
jnp
xchg
jno
cmc
ja
ljmp
push
sub
lock
push
cmp
into
fcmovnu
int3
fisubrs
mov
aaa
stos
pop
jae
in
and
mov
add
and
inc
or
loop
dec
mov
stos
dec
test
mov
sub
sbb
jge
jmp
sub
push
push
sbb
aaa
stos
sbb
sub
gs
mov
lret
jo
pushf
pop
test
xchg
xor
sub
mov
xor
sbb
mov
mov
loope
jl
fistpll
push
lea
sbb
xchg
xor
xor
scas
add
or
cwtl
push
push
ret
xchg
push
vaddpd
mov
pop
faddl
rcl
pop
push
in
jns
xor
cmc
fwait
or
push
mov
xor
adcb
adc
xchg
inc
cmpsl
push
iret
cmp
or
ljmp
lea
ds
mov
out
imul
iret
mov
jnp
cmp
lahf
das
dec
inc
push
ficompl
fiaddl
cmpsb
push
sbb
adc
sbb
jbe
sub
sti
jge
outsb
sub
sbbl
inc
push
inc
into
es
imul
mov
imul
adc
mov
aam
in
jg
faddl
clc
dec
enter
and
inc
xchg
mov
cmp
test
popa
out
push
and
push
xor
cmp
dec
fmuls
repnz
sub
dec
cmp
add
enter
hlt
rol
fsub
jp
jno
imul
xorb
scas
js
loop
daa
dec
push
add
and
dec
sub
lods
movsb
arpl
mov
sbb
sahf
or
das
pop
xor
fldl
mov
loop
mov
aaa
aas
or
push
mov
dec
jg
cmc
add
loopne
inc
jbe
fidivrs
pop
cmp
int3
fmuls
push
out
enter
add
dec
clc
daa
inc
jne
xor
jno
dec
pop
jbe
mov
incb
cmp
stos
jle
fnstcw
iret
shlb
push
lods
lcall
mov
sub
dec
jbe
jmp
imul
mov
lret
in
hlt
gs
jge
and
nop
fstps
push
push
sub
repz
lret
out
push
jne
fwait
ja
lods
jae
push
popa
cmp
loop
frndint
das
push
mov
std
cmp
pop
scas
mov
push
lock
cmc
cmp
jp
mov
lcall
pop
sbb
ret
rcll
or
push
call
and
clc
jns
xor
popl
mov
add
insb
fcomip
sub
push
mov
out
adc
je
mov
inc
and
fbstp
int3
scas
push
cmpsb
je
into
jl
sub
sbb
into
shlb
cmc
fsubp
sar
jne
mov
adc
std
imul
sub
lods
jle
ljmp
jnp
fcomps
mov
aad
mov
arpl
ret
and
lock
subb
pop
mov
outsb
daa
inc
inc
xchg
or
iret
adc
out
sbb
aaa
pop
loop
or
lret
mov
pop
or
fiadds
jge
fcom
dec
dec
mov
jne
bound
ror
and
and
jo
pop
testl
int
sar
add
sbb
call
adc
mov
or
orl
punpckhbw
lret
nop
outsl
or
sub
ret
scas
mov
shlb
push
pop
inc
popf
loop
ljmpw
fcom
adc
sub
test
dec
xor
add
inc
ja
dec
popa
loop
and
and
dec
add
mov
gs
adc
cmpsl
scas
lds
mov
adc
jns
adc
out
out
or
jnp
mov
and
mov
inc
and
in
pushf
in
pop
xorb
ret
inc
push
jmp
and
mov
fnstsw
jge
ljmp
sarl
xchg
insl
sbb
cwtl
jp
add
es
push
test
mov
push
jp
unpcklps
test
and
mov
push
pop
das
test
ret
fsts
ret
les
mov
jo
adc
addr16
mov
jmp
dec
insb
or
or
inc
mov
loopne
sub
xorb
jl
mov
nop
inc
add
popl
les
hlt
add
stos
imul
xlat
xchg
faddl
fmull
ja
outsb
repnz
mov
mov
cs
sbb
sub
jnp
movsb
mov
mov
insl
out
les
test
jo
xor
xchg
dec
inc
and
cmp
lret
and
push
out
in
iret
lahf
sbb
and
cmpsb
xor
movsb
mov
shl
rcrl
jg
jmp
jne
fdivrl
nop
stos
ret
or
dec
in
cli
mov
pop
add
je
push
sahf
sub
out
inc
mov
sbb
pop
fs
andl
xchg
pushf
add
andb
rcll
shrb
adc
xchg
inc
je
xchg
xor
shll
sti
cmp
shlb
inc
jl
stos
or
push
mov
sbb
cli
dec
mov
subl
loop
jl
bswap
dec
aaa
rolb
lcall
scas
and
adc
mov
jns
jne
mov
add
icebp
stos
loopne
sub
or
js
lods
push
cwtl
outsb
mov
sbb
push
pop
adc
inc
push
icebp
inc
cmc
cmc
pop
jne
loope
jp
jecxz
pop
repz
xor
dec
sbb
or
add
adc
lods
ret
daa
push
cmp
mov
or
jg
incl
mov
push
test
fs
popf
inc
mov
es
cltd
repnz
test
pop
push
cwtl
rolb
pop
add
das
inc
lock
pop
cld
xchg
sbb
mov
dec
stos
test
into
xor
mov
je
scas
sub
sub
lods
lea
push
sbb
inc
xchg
sahf
mov
idivl
lret
add
int3
ret
cmp
dec
and
xchg
je
notb
adc
leave
hlt
loop
std
bnd
push
loopne
inc
insb
jg
repz
clc
pop
cmp
ds
xchg
adcb
push
dec
iret
cs
dec
in
push
je
stos
adc
js
xor
fwait
inc
push
leave
jnp
in
jl
lods
cmp
jmp
divss
fstl
pusha
push
mov
inc
sbb
and
and
out
rclb
mov
cmp
mov
je
ss
addr16
lret
out
cmp
mov
int3
dec
sbb
and
call
xor
cltd
je
lods
or
sub
sub
imul
sbb
mov
arpl
loopne
push
fbld
in
aad
rcl
ja
cmpsb
mov
jns
lret
lods
and
dec
mov
icebp
jle
loopne
sub
mov
or
testb
popf
icebp
popa
sub
mov
push
pop
xchg
in
cli
movsb
mov
ja
pop
sub
dec
loope
adc
push
lea
and
outsb
arpl
jnp
ds
push
inc
mov
sbb
scas
xor
pop
mov
jnp,pt
xor
or
fwait
and
fs
add
or
out
mov
js
mov
lods
enter
jmp
push
adc
mov
xchg
imul
jg
sbb
or
cltd
and
out
enter
pop
hlt
call
push
test
call
sub
jne
mov
push
xor
add
jmp
pop
lock
out
mov
jae
popf
xchg
sbb
in
inc
xchg
push
daa
push
in
fcmovu
movsb
fldl
in
icebp
add
sbb
aas
xchg
subl
or
mov
fmuls
ja
jno
mov
and
jmp
out
mov
in
setp
add
mov
dec
inc
iret
xor
je
push
imulb
adc
test
mov
mov
add
out
into
in
imul
mov
add
add
ret
fldl
pop
add
andb
clc
jbe
cmpsl
dec
imul
bound
jno
int
dec
fcompl
pusha
pop
mov
insl
mull
and
outsl
lock
cli
shl
dec
ror
and
ja
jle
sahf
mov
cs
aad
shll
nop
jmp
jb
xor
pop
mov
dec
jno
or
fildll
out
lods
aad
aam
xchg
mov
cmp
imul
stos
call
lods
fdivl
leave
jecxz
mov
inc
out
jle
in
pushf
sahf
add
sbb
mov
iret
aaa
out
or
popa
add
lret
and
jge
inc
rolb
lea
dec
dec
sub
xor
bound
inc
dec
ffreep
jp
cld
pop
sbb
cmpsl
push
lods
adc
and
or
das
arpl
ret
in
cmc
sub
out
add
xor
jbe
sbb
sti
dec
pop
or
mov
mov
rorb
mov
cmp
push
push
push
pop
mov
imul
or
pop
aaa
mov
pop
dec
cwtl
jno
out
icebp
push
adc
push
nop
aaa
out
xchg
mov
push
push
mov
scas
out
test
ret
push
sub
lea
jg
inc
inc
push
xchg
loope
add
outsb
loope
sbb
pop
mov
hlt
jno
ret
loop
scas
xor
cmc
test
sbb
xor
int
and
pushf
adc
in
cld
out
leave
mov
push
jbe
repz
add
fwait
pusha
cs
fisttpl
and
cltd
cwtl
and
mov
pop
add
mov
mov
inc
adc
pop
push
sbb
dec
popa
out
ret
ja
lea
out
ret
or
xchg
xchg
bound
add
inc
popf
jnp
jb
test
or
mov
fsubrl
push
inc
sbb
jmp
pop
push
addr16
mov
add
loopne
sub
stos
push
cmpsl
push
ds
or
rcrb
pop
xchg
mov
and
jl
leave
mov
aad
mov
adc
arpl
lahf
dec
and
mov
cmpsl
stos
cmp
iret
adc
push
filds
dec
pushf
std
jnp
xlat
jp
sbb
pushf
dec
cmp
mov
mov
fldcw
mov
dec
jmp
sub
test
clc
sbb
inc
lret
fldcw
add
adc
daa
ljmp
ds
test
jno
push
push
nop
das
add
jbe
ret
cmp
adc
aas
das
enter
xlat
std
scas
mov
pushw
ret
push
xor
xchg
dec
cmp
out
inc
lock
out
jnp
push
or
mov
push
std
mov
imul
es
into
adcb
inc
mov
in
dec
outsb
mov
push
ljmp
cmpl
push
js
popf
push
movsb
adc
sub
xor
add
dec
xor
ja
loope
rolb
xchg
inc
sbb
push
out
inc
inc
addr16
addl
jle
add
mov
mov
and
xchg
rolb
cmp
add
pop
scas
jmp
cli
fisubrs
jne
wbinvd
lcall
add
mulb
mov
xchg
inc
in
pop
sbb
out
mov
mov
lods
rcl
fnstsw
rorb
mov
into
inc
iret
cmp
arpl
push
fwait
mov
push
inc
sbb
jl
or
push
dec
loope
mov
rolb
pop
insl
push
and
insb
push
pop
xor
mov
fcomi
pop
adc
jg
cmpsl
pop
aam
in
fs
sti
adc
nop
nop
outsl
ja
out
push
stc
mov
les
jb
and
sub
xor
or
fs
jnp
pop
adc
loopne
inc
push
or
das
js
inc
sub
rorb
inc
mov
fisubrs
pop
shlb
jne
or
mov
add
cltd
mov
pop
xchg
lret
pop
sbb
imul
xor
in
gs
push
sub
jb
jmp
in
xchg
xor
xchg
cwtl
sub
aaa
or
lret
dec
scas
bound
lock
dec
dec
xchg
xchg
add
int
scas
mull
outsl
test
fsubl
movsl
mov
hlt
lret
add
and
dec
in
mov
xchg
pop
aaa
das
call
mov
and
fdivs
lret
lret
inc
pusha
dec
jmp
inc
nop
mov
mov
icebp
out
js
insl
cld
jle
idiv
pusha
jmp
fxch
push
repz
cmpb
push
repnz
cmpsb
sub
mov
loope
mov
cmp
aaa
xchg
sbb
add
mov
out
push
jge
aam
xlat
jnp
mov
int3
dec
adc
mov
xor
jns
ds
xchg
movsl
aam
adc
xor
xchg
adc
insl
testl
dec
mov
push
fistpll
into
sub
insl
sub
sub
push
push
daa
in
pop
sti
lret
add
dec
add
out
pop
pop
add
xchg
xchg
lods
sub
inc
outsl
fdivp
ret
shll
ljmp
insl
sbb
mov
push
dec
movsl
aam
adc
mov
leave
pop
repnz
xchg
mov
push
inc
mov
jb
dec
into
mov
or
cmp
or
fdivrl
or
mov
adc
mov
pop
add
xor
mov
pop
loop
xor
dec
call
popf
xchg
dec
lds
jmp
pushf
mov
daa
sub
arpl
imul
push
adc
lods
repz
das
loope
shl
jmp
push
pop
out
xchg
pop
adc
ds
lret
pop
mov
jbe
cmp
mov
je
xorl
loope
leave
out
mov
std
fwait
pusha
dec
inc
xor
push
jg
stos
adc
inc
lret
daa
sbb
jp
add
cld
int3
mov
add
xchg
ja
push
inc
scas
mov
shrb
in
dec
stc
lret
add
jne
dec
lock
subb
mov
jb
mov
dec
sub
pop
addr16
sub
pop
imul
stc
inc
aas
mov
cmp
push
std
xchg
sbb
cs
jb
xor
lahf
push
push
jae
fcmovu
aam
sub
in
or
stc
mov
shll
sub
std
xchg
jbe
mov
pop
jmp
std
fsubl
icebp
fwait
sub
repz
js
shll
adc
inc
mov
mov
or
pop
push
fcmovb
int
xchg
and
insb
pop
jmp
stc
dec
add
ljmp
pusha
mov
dec
push
clc
into
mov
add
dec
add
dec
xlat
mov
ds
lds
aam
insb
or
push
adcb
test
aas
fwait
aam
or
jmp
push
adc
push
in
push
cwtl
sbb
je
and
or
xor
and
test
cmpsb
lcall
fdivrs
fiadds
daa
push
popf
mov
adc
push
pop
push
xor
sbb
cwtl
sbb
repnz
mov
pop
sti
fidivrl
mov
roll
ja
mov
push
lret
fsubrs
sti
dec
bound
mov
lods
mov
cwtl
negb
mov
push
pop
inc
movsb
mov
shr
add
cwtl
add
push
leave
bound
pop
lods
jno
lock
xor
ds
sub
in
stos
push
jo
inc
xchg
push
lods
addb
mov
scas
test
mov
add
shll
daa
repnz
notl
xchg
scas
outsl
sub
mov
popf
outsl
mov
lods
mov
stos
and
lods
in
and
stos
inc
fldl
and
mov
inc
in
jge
out
dec
mov
je
jmp
shl
icebp
cmpsl
dec
or
pop
std
mov
mov
sub
ret
hlt
js
dec
or
pusha
shr
xor
les
xor
push
int3
and
jecxz
dec
sub
push
dec
and
mov
arpl
in
stos
pop
sbb
int3
lcall
and
jmp
nop
push
ja
xchg
test
ret
dec
xor
hlt
pusha
inc
add
sbb
addr16
fwait
sti
bound
repnz
or
sub
xchg
or
ds
icebp
sub
loope
mov
mov
or
cmp
adc
mov
adc
cmp
inc
fsubs
daa
jge
je
stos
fucomip
add
mov
fwait
cmp
push
out
lret
arpl
jne
pop
in
cltd
fisttpll
jge
iret
push
xchg
mov
sub
loope
adc
dec
je
lock
jbe
sub
imul
mov
mov
hlt
or
push
mov
jbe
add
add
rcr
insl
xchg
or
mov
mov
cs
inc
fprem1
call
push
dec
jp
push
mov
idivb
sarl
jp
sub
mov
gs
xor
test
fstps
sbb
push
push
leave
jno
loope
out
xchg
xor
test
adc
and
leave
test
shl
add
cmp
sub
xchg
or
or
cld
mov
fldenv
scas
mov
pop
or
ror
mov
stos
mov
mov
clc
dec
cli
sbb
cltd
pop
dec
mov
es
and
sub
mov
stos
inc
mov
mul
and
decl
and
ret
es
xor
shl
adc
aad
jno
xor
call
xor
xorl
aas
aad
push
sar
pop
mov
fsub
setb
je
adc
cwtl
xchg
pop
jmp
sbb
js
mov
mov
mov
mov
pushf
push
mov
sahf
inc
repnz
jg
or
iret
push
out
or
lret
les
mov
jns
or
imul
fmuls
dec
xor
das
adc
push
mov
push
ljmp
pop
lahf
xchg
pop
pop
cmp
out
movsb
xchg
outsl
push
mov
xchg
or
iret
xor
lcall
dec
mov
mov
nop
mov
add
mov
pop
sbb
mov
icebp
lock
xor
mov
bnd
and
mov
pop
lcall
mov
xor
out
les
and
inc
pop
test
xchg
mov
mov
fcmovu
push
loopne
es
js
scas
xchg
in
dec
hlt
dec
mov
aam
jae
iret
xorb
push
in
pop
stos
jp
and
shll
loopne
movsb
mov
sub
jecxz
in
clc
add
pop
adc
flds
test
aam
sbb
and
stos
mov
sbb
sbb
out
adc
dec
or
pop
dec
jae
jo,pt
xchg
insl
hlt
mov
push
std
ss
das
fwait
adc
stos
jg
lret
jg
jbe
pop
jmp
mov
and
jae
pop
inc
hlt
fisttpll
mov
xor
in
mov
sbb
dec
test
adc
dec
scas
push
sbb
fldenv
jnp
jg
mov
shlb
shr
cmp
enter
jecxz
push
adc
mov
in
xchg
scas
out
or
test
fs
inc
jg
sti
or
hlt
repz
sub
xor
jg
out
rcrl
xchg
add
mov
add
in
aad
repnz
sub
fildll
idivl
mov
mov
lahf
and
mov
insb
pushf
mov
fwait
divb
sub
add
pushl
daa
push
jbe
fld
mov
clc
shrb
xchg
adc
pop
pop
pop
push
outsb
lahf
xchg
in
cmp
sbb
xchg
mov
std
mov
and
xor
inc
cmp
push
mov
dec
mov
fwait
xchg
or
adc
call
mov
adc
in
sub
movsb
pop
adc
and
pop
jb
mov
pop
jge
stos
loop
repz
lret
pop
loope
or
dec
mov
gs
or
xchg
das
setne
int3
lods
data16
test
scas
nop
or
mov
or
jno
shl
xor
push
xor
xor
pop
mov
inc
mov
outsb
add
pop
jbe
adc
shrl
movsl
inc
mov
jns
xchg
lret
mov
loope
ret
insl
pop
or
addl
ljmp
sbb
jge
xor
jnp
sub
and
xchg
sub
pusha
jne
mov
fs
fiaddl
push
into
xchg
in
mov
cs
subl
out
popf
lea
or
dec
mov
jnp
cmp
stos
cmpsl
adc
xchg
outsb
xor
mov
pop
aad
mov
jae
int
fisubrs
js
daa
sahf
pop
out
or
inc
mov
push
push
ljmp
xor
das
dec
adc
data16
scas
jne
dec
or
jne
pop
and
ret
jno
icebp
xchg
and
jb
mov
push
pop
push
inc
in
cmp
in
adcb
ljmp
jnp
cmp
clc
xor
fildll
mov
cmc
outsb
jmp
pop
mov
cmp
lret
out
dec
in
bound
pop
jb
fs
or
jge
dec
shrb
iret
cmc
pop
testl
cld
subb
adcl
aas
fs
icebp
scas
cli
leave
test
nop
lret
cltd
lds
jne
lock
mov
jo
sbb
cmp
jne
aaa
push
fcoml
add
int
lods
pop
add
pop
ret
loopne
lea
xchg
jmp
push
mov
pop
shl
and
int3
pusha
arpl
push
mov
cmp
call
inc
ljmp
stos
gs
jo
and
testb
cmp
jno
insb
mov
mov
aad
popa
aaa
mov
lret
add
pop
pushf
stos
xchg
sub
testl
filds
cwtl
mov
inc
pop
sbb
xor
xor
outsl
push
jge
mov
imul
and
add
movsl
int
sub
jbe
xchg
add
mov
sbb
cmp
aam
mov
or
nop
pop
push
lods
mov
jae
jge
pop
sub
shll
dec
mov
cmp
faddl
and
in
dec
push
add
adc
mov
test
pop
cmc
jle
push
inc
push
jne
fwait
mov
cltd
adc
inc
adc
inc
inc
sub
pushf
mov
sub
adc
push
mov
pop
into
pop
xchg
gs
inc
test
mov
jno
or
ja
fiadds
jns
arpl
mov
or
push
mov
or
jno
xchg
out
int3
inc
scas
popa
cmp
jl
cwtl
dec
mov
ret
aaa
int3
cltd
pop
xchg
sub
insb
gs
adc
mov
mov
push
push
add
add
add
cmp
je
dec
adc
repnz
push
mov
mov
cmp
lods
sub
test
pop
jns
sub
je
mov
and
into
mov
jae
dec
ss
xchg
push
mov
and
xor
inc
sub
xchg
push
dec
adc
pop
rorl
cmp
js
nop
mov
push
jl
mov
fcompl
mov
cltd
mov
xor
fsubrp
imul
sbb
imul
stos
aas
jno
aaa
mov
in
push
mov
push
ja
repnz
jo
xchg
inc
xor
lods
pop
add
mov
sub
push
imul
out
mov
adc
adc
jae
pop
ret
or
fldenv
pop
push
test
testb
dec
fildl
cmp
push
sub
cmp
fsubrs
mov
movsl
jg
test
pop
addr16
ret
pop
ja
mov
sub
mov
int3
imul
xlat
loope
aam
jp
cltd
jns
js
sti
mov
incb
push
and
arpl
inc
lret
inc
sub
xchg
stc
icebp
es
pop
fists
adc
mov
bound
mov
or
jle
divl
imul
mov
jbe
or
and
mov
and
fsubs
mov
sub
mov
cmc
mov
cmc
insl
out
orb
lret
mov
and
xor
data16
lods
cmp
pop
and
mov
shlb
outsb
jne
add
mov
fdivl
pop
sbb
pop
ds
pop
adc
outsb
sub
pop
cmp
gs
and
and
ja
cmp
jo
mov
adc
fdivl
into
xorb
jne
xor
sub
mov
scas
dec
dec
clc
insl
inc
push
fs
in
aad
idivl
mov
cld
push
scas
dec
inc
mov
mov
push
rolb
lock
nop
lods
adc
cld
add
enter
pop
hlt
bound
add
lret
mov
mov
dec
sub
jl
fbld
mov
lods
out
pop
adc
mov
loope
mov
adc
cs
test
xlat
push
fstl
xor
push
das
imul
cmp
loopne
fsubrl
iret
pop
xchg
push
dec
xchg
xor
hlt
fincstp
dec
es
or
repz
push
lret
cmp
push
dec
xchg
arpl
cmc
pop
mov
ret
xchg
into
dec
mov
inc
and
mov
jne
sbb
lods
fistl
cmpsl
fnstsw
mov
sub
sub
sbb
xor
and
sbb
sub
fsubs
repz
xlat
hlt
push
cltd
adc
aad
and
jp
xor
daa
pop
dec
movsb
das
cs
addr16
pop
or
scas
push
xchg
xchg
stc
repnz
or
xchg
pop
mov
into
loope
ljmp
js
fwait
xorl
adc
rcr
cltd
call
frstor
shll
and
in
dec
out
push
out
stos
std
stos
pop
repz
movsl
jb
adc
dec
jg
mov
jmp
pop
dec
pop
cmpsb
subb
mov
mov
cmp
jne
test
mov
loope
cmpsl
mov
jbe
push
mov
adc
testb
pop
out
cwtl
lahf
lea
dec
enter
or
cltd
jecxz
jne
and
dec
cmpsb
mov
jns
and
fnsetpm(287
cmp
add
dec
daa
fcmovne
in
addr16
andl
inc
cmp
pop
loope
adc
rcrl
mov
sbb
mov
inc
jo
mov
lahf
mov
add
inc
ljmp
inc
pop
insl
pop
inc
movsl
mov
fbstp
jl
icebp
xor
dec
adc
cmp
push
leave
push
js
outsb
mov
out
imul
pop
out
lds
jecxz
add
sbb
pop
data16
mov
inc
dec
insb
mov
jne
add
pop
flds
movsl
or
js
lahf
ja
mov
pop
rcll
imul
mov
xchg
dec
cld
add
jp
cmpsb
lcall
int
in
pop
mov
sarl
dec
je
fsubrl
insb
mov
jge
jmp
xchg
std
or
dec
jno
xchg
xor
cld
incl
fidivrl
loopne
xor
xor
scas
jle
fldcw
jnp
mov
movsl
addr16
lret
popa
xor
adc
pop
loope
sahf
loope
subl
subb
pop
fistps
test
lods
xor
jnp
aas
std
xchg
jnp
add
outsb
adc
iret
push
push
test
push
lret
or
loope
pop
ss
cmp
cs
lds
addr16
xchg
iret
test
out
mov
jmp
push
push
xchg
jns
icebp
xchg
popa
jecxz
in
addb
vpsraw
call
jl
sbb
ffree
add
cmpsb
idivl
xchg
pop
std
and
mov
pop
add
out
jp
pusha
ret
sub
test
scas
dec
mov
sbb
mov
jno
out
sti
lea
sahf
lock
mov
bound
cli
dec
int3
lret
jae
dec
dec
cld
xchg
cmpsl
xor
enter
lret
adc
cmpsl
dec
xor
rep
fistl
mov
pop
push
cld
dec
test
sub
ds
stc
or
lock
vmread
testb
mov
xor
pop
es
xchg
jne
addr16
pop
mov
adc
into
pushf
ret
mov
jl
xchg
out
mov
mov
adc
fmull
jae
sub
push
pop
mov
test
clc
mov
fadd
jbe
push
or
push
int3
lahf
jmp
adc
dec
or
push
sub
fistps
outsb
or
cmp
mov
and
inc
enter
mov
call
push
test
rclb
xchg
push
add
xchg
cltd
lods
repz
xchg
cs
ljmp
xor
fs
mov
int
lret
sbb
jle
aas
inc
aad
aas
cmpsb
push
mov
addr16
ret
mov
mov
mov
mov
push
cmc
fs
sub
xor
inc
lea
adc
loope
ds
mov
mov
insl
lods
mov
icebp
mov
cmp
aaa
sbb
jl
push
jno
in
adc
rcr
aaa
sbb
and
xor
rorb
jmp
enter
xchg
adc
mov
pop
mov
and
and
dec
xchg
fidivrs
mov
cmp
add
push
aaa
sbb
movsb
leave
iret
orb
test
xor
insb
stos
stos
jb
xchg
add
cmp
outsb
aad
sbb
pop
mov
fnstsw
fsubl
outsb
add
jp
mulb
sub
test
xor
jns
push
push
cltd
cmp
ret
or
ljmp
mov
stos
mov
jecxz
sbb
and
icebp
lds
xlat
ds
lds
les
pop
ljmp
hlt
sbb
inc
ret
lds
aaa
movsb
mov
shlb
aad
sar
pushf
jge
repnz
addl
xchg
clc
out
xor
in
lea
aaa
fnstenv
jge
bound
insl
xchg
or
je
movsl
xlat
cbtw
sbb
jmp
inc
xor
push
sub
add
mov
stos
sub
dec
repnz
stos
fcomi
int3
xchg
popf
and
sbb
xor
or
lret
sti
pop
adc
or
mov
faddl
mov
or
fwait
xchg
mov
les
and
roll
or
pop
in
gs
ret
push
pop
xlat
stc
push
decb
out
sar
je
sbb
xchg
je
jp
jge
loopne
adc
mov
push
mov
jb
jno
scas
subb
lcall
idivb
lds
lods
fbstp
fwait
sub
mov
jae
mov
lods
add
rcrl
sbb
call
movsl
mov
jnp
repz
pusha
scas
pusha
mov
adc
ss
xor
inc
mov
out
xor
jmp
js
xchg
xor
sub
push
repz
pop
jmp
dec
aaa
dec
cmp
cltd
or
dec
adc
iret
stos
or
mov
jecxz
movsb
mov
shr
xor
out
test
ret
and
sahf
dec
scas
loop
outsb
mov
pop
cmp
jle
or
loopne
adc
fcoml
add
lods
scas
sbb
into
lods
dec
xchg
pushf
mov
gs
fldt
lea
mov
inc
mov
cmp
adc
dec
and
mov
lods
jo
lods
sub
out
cmc
fnsave
jbe
push
adc
insb
sbb
add
mov
das
dec
sub
in
std
add
mov
outsl
imul
inc
pop
inc
fbld
scas
jg
stos
inc
jecxz
lret
mov
sti
stos
sahf
mov
out
fs
inc
test
cmp
push
xor
inc
loopne
shll
push
in
jb
push
mov
aam
in
andb
imul
add
loopne
insl
out
cmp
jne
and
int3
fstps
fsubs
pop
xor
push
rcll
inc
sbbb
mov
pop
xor
push
inc
mov
lret
sbb
and
jo
lock
fcmovnb
jp
sub
testl
in
inc
in
jle
dec
ljmp
cmpsl
test
adc
das
xor
and
pop
andl
lret
ret
mov
iret
jmp
mov
shrb
mov
xor
lahf
push
dec
les
fistl
dec
xchg
push
imul
push
xor
pop
fstl
add
pushf
sub
xchg
jmp
xlat
or
sub
shl
mov
pop
push
xchg
and
push
push
or
adc
loope
add
inc
dec
dec
adc
sahf
jnp
shlb
cmpb
cltd
call
dec
nop
bound
pop
and
testl
les
xor
dec
and
sti
mov
insb
aad
sub
jl
addb
sbb
test
daa
jmp
sbb
shrb
add
fimuls
inc
xor
mov
ljmp
jg
andb
popa
mov
stc
sbb
ror
scas
lods
mov
fstl
dec
inc
inc
loop
popa
dec
xor
xchg
or
sub
add
insl
sub
loopne
pop
rorl
jmp
popf
inc
pop
pop
sbb
mov
jnp
daa
and
ret
jg
mov
push
rep
fstl
int3
jnp
je
xchg
ret
adc
rorl
popa
xchg
scas
das
mov
ja
jae
sub
xor
lea
adc
cmp
or
push
icebp
loope
or
out
jecxz
dec
jns
icebp
cmp
ds
pop
mov
cmp
mov
hlt
call
es
out
adc
mov
es
imul
lret
inc
add
ds
add
dec
add
repz
and
movb
dec
pop
into
pop
mov
ret
insb
mov
xor
cld
lret
xor
outsl
and
fs
into
xchg
adc
or
push
out
push
imul
and
stc
popw
iret
sbb
mov
pop
jmp
arpl
push
test
mov
sub
or
pop
and
insl
xchg
push
mov
xchg
mov
jge
outsb
cwtl
mov
out
repnz
test
xchg
push
in
or
push
scas
popf
sbb
shll
lcall
or
jge
mov
mov
fcmovnu
mov
add
cwtl
dec
xor
xchg
dec
test
out
adc
gs
cmpsb
jb
or
xor
mov
test
lea
and
inc
mov
out
dec
or
sahf
pop
cmp
mov
decb
dec
cmpsl
in
xor
mov
xor
ja
jle
or
cltd
cmpsb
xchg
inc
xchg
inc
cmp
xor
sbb
sub
mov
out
das
dec
pop
jge
jno
rorl
popa
arpl
jno
lock
sub
sbb
and
in
out
leave
push
mov
lds
ja
add
inc
ret
fistpll
mov
loope
lret
ljmp
mov
pop
cs
fildll
mov
pop
xlat
sub
cmp
pusha
rorb
cmp
dec
sbb
stc
out
ficoml
iret
mov
data16
icebp
mov
sbb
jb
repnz
and
pop
or
fwait
neg
add
test
adc
or
inc
pushf
and
idivb
cmp
xchg
insb
inc
xchg
das
out
cmp
test
rorb
mov
lret
lea
xor
add
cmp
adc
and
inc
aad
sti
sbb
outsl
sbb
mov
push
sti
jb
out
pushl
scas
inc
cmp
data16
dec
push
jae
icebp
bound
xchg
clc
jmp
adc
jb
cmp
mov
jle
cli
mov
arpl
jp
movb
push
fldcw
popa
sub
mov
lea
mov
push
outsl
dec
call
add
fidivrl
js
pop
mov
add
xor
ds
mov
sbb
mov
shl
incb
notb
mov
fistps
jg
sbb
in
xchg
cmpb
pop
in
sub
mov
adc
loopne
movsb
not
fidivl
in
mov
int3
jae
mov
lea
ret
sahf
mov
mov
inc
insb
cmpsl
filds
test
stc
clc
outsl
jge
js
xor
outsl
insb
ljmp
icebp
and
xor
cld
int
imul
mov
and
cmpsl
mov
test
mull
mov
pop
int
test
adc
mov
inc
pop
mov
enterw
inc
in
mov
mov
aam
hlt
fnop
in
not
xchg
mov
xchg
mov
ds
in
sbb
pop
sub
fsubs
or
enter
cmp
xchg
xor
adc
orb
push
out
leave
and
push
xor
mov
xchg
cmp
fcoms
popa
popf
mov
cs
nop
add
jae
jbe
xor
pop
and
mov
jnp
cmp
jp
sub
mov
lahf
add
inc
frstor
mov
push
pop
test
jnp
insb
mov
iret
es
dec
mov
mov
std
stos
mov
rorl
mov
fmuls
pop
mov
fs
inc
add
add
lret
mov
loop
hlt
cmc
xchg
repnz
mov
sub
into
inc
addr16
push
sahf
xor
or
sub
add
dec
orb
js
test
dec
mov
cltd
data16
mov
and
inc
pop
mov
popf
mov
js
and
lds
pop
outsb
lock
jmp
testb
lret
push
pop
orl
xchg
nop
dec
jns
test
cli
mov
shld
jmp
loop
mov
push
out
out
lods
out
cmp
inc
mov
or
inc
cmpsl
pop
sub
cmp
mov
or
shr
ljmp
stos
sahf
cmpsl
adc
and
test
enter
inc
push
testb
test
fmull
loop
mov
dec
xchg
xlat
and
dec
mov
cmp
xchg
sbb
adc
dec
xchg
js
mov
fidivs
stc
pusha
sbb
aad
test
add
push
dec
lock
nop
cmc
mov
movsl
gs
and
push
lods
pop
lret
ret
cmc
mov
nop
iret
ljmp
sbb
jge
mov
imulb
add
jl
dec
lcall
sahf
xchg
fmull
push
pop
stc
repnz
jo
ss
mov
or
cmc
push
mov
xchg
add
ljmp
sub
or
push
lret
dec
push
repnz
dec
xchg
test
and
lret
pop
inc
push
ficoml
arpl
icebp
pop
cs
mov
adc
in
popa
insl
cli
fistpl
sub
cmc
jmp
daa
adc
sbb
mov
sahf
fistps
fwait
loopne
mov
pop
push
adc
repz
in
adc
insb
adc
xlat
mov
mov
fcoml
in
xchg
cmc
hlt
leave
inc
sub
sub
and
fisttpll
add
mov
ret
insl
add
aad
inc
sbb
aaa
aad
in
cmpsl
xorl
mov
cwtl
test
out
sbb
or
iret
adc
scas
repz
mov
pop
push
aaa
sbb
lret
mov
dec
icebp
add
or
fwait
mov
roll
lock
ds
fidivs
push
add
mov
mov
decb
arpl
test
xor
lret
ss
jno
inc
sbb
out
or
or
cmp
outsl
fwait
lods
jbe
rcll
push
out
dec
insb
and
repz
add
or
repz
callw
sbb
cld
mov
or
fcompl
inc
loopne
icebp
add
mov
xchg
push
test
out
cmp
cli
add
jne
stos
add
arpl
pop
and
jmp
jg
daa
sbb
pop
xchg
fnsave
inc
out
mov
enter
inc
pusha
and
insl
sub
xchg
pop
sbb
inc
jno
iret
outsl
xor
pop
lret
fldcw
mov
or
mov
call
imul
add
inc
mov
rclb
jg
shlb
inc
test
push
mov
repz
push
adc
or
out
dec
mov
aam
adcb
sub
outsl
scas
mov
test
out
adc
lret
imul
pop
cmp
xchg
loopne
xchg
fisubrs
lcall
mov
mov
shll
jl
loopne
pop
xchg
je
das
xchg
dec
shll
arpl
adc
sub
fmul
gs
das
xor
pop
je
add
jnp
sbb
into
add
lret
daa
enter
push
push
pop
lds
inc
xchg
cld
jecxz
mov
and
mov
jne
fimuls
test
popf
lret
adc
hlt
cmp
xchg
mov
pop
jge
push
inc
lds
in
pop
sbb
test
push
push
js
sbb
leave
xchg
and
inc
sub
rcr
stos
cmpb
mov
popa
ds
adc
shlb
aaa
add
sub
lods
mov
clc
or
iret
popf
mov
jecxz
scas
push
dec
bound
cmp
adc
jle
lods
mov
lret
jbe
pusha
fldl
jns
arpl
and
lds
cmc
mulb
or
ret
jae
andb
cmp
or
das
test
or
insb
mov
add
lcall
mov
mov
inc
lock
aad
cmpsl
stos
and
jb
fdivrs
jno
or
dec
movsb
push
jge
aad
mov
fisubrl
repnz
lret
dec
mov
or
xchg
adc
lock
loopne
test
xchg
push
sahf
das
movsl
shlb
xchg
cltd
sub
sbbb
xchg
mov
inc
arpl
pop
div
mov
ss
aas
mov
cmpsb
sarl
adc
xchg
stos
test
js
lret
pushf
adc
push
out
sub
stos
push
mov
xchg
xchg
ja
test
cwtl
add
insb
cwtl
outsl
mov
xchg
lds
push
fisttpl
lret
in
push
pop
jmp
stc
ret
or
leave
or
jmp
and
add
push
inc
ja
lock
aaa
cmpsb
fcompl
mov
mov
js
push
add
mov
and
cld
cmp
mov
pushf
lcall
sahf
xor
xchg
scas
pop
sbb
jmp
inc
pushf
addr16
push
jle
jge
or
dec
subl
jae
scas
lahf
dec
bound
or
push
fucomi
movsb
cltd
out
das
add
lahf
imul
and
aam
cmp
repz
xchg
mov
xchg
xchg
lock
cmp
add
sub
mov
and
dec
movsl
push
mov
cmp
stc
pop
mov
ja
popf
rclb
cmp
push
sbbl
mov
arpl
mov
repz
enter
mov
cmp
daa
jecxz
outsb
ljmp
xor
xchg
fdivrs
pop
xchg
mov
mov
scas
jbe
xchg
xor
movsl
imul
push
mov
mov
rorl
add
jne
pop
and
push
jns
dec
jg
rcrl
sti
xchg
psrad
insl
cmp
int3
xchg
fwait
call
or
pop
sbb
outsl
xor
lds
push
hlt
xchg
inc
mov
dec
jae
sbb
xor
push
in
lret
jp
ds
es
insl
fidivrl
sti
push
iret
mov
aad
addr16
sub
push
int3
push
cmp
dec
cmpsl
pop
push
dec
pop
fnstcw
pusha
sbb
lret
adc
cmp
inc
adc
mov
popa
outsl
test
jbe
mov
and
rcrl
pop
in
mov
scas
ss
mov
adc
inc
push
aas
push
rclb
xchg
mov
pop
insb
and
mov
and
push
divl
pop
pop
mov
push
repnz
lcall
cld
rcrl
dec
jb
dec
push
push
popf
mov
dec
lock
jno
mov
out
mov
xchg
hlt
imul
or
scas
in
fnstsw
xchg
clc
mov
sbb
in
xor
leave
test
fdivs
sub
int3
cltd
dec
movsl
in
cmpb
pop
inc
xchg
fstpl
insb
test
aas
jo
dec
mov
jg
out
and
mov
je
jmp
hlt
mov
mov
repz
shrb
mov
jns
dec
xchg
fsubr
mov
js
mov
stos
jle
ss
and
sub
mov
fsubrs
rcrb
xor
xchg
xchg
loopne
mov
sub
stc
jne
addr16
roll
gs
mov
ret
push
xor
daa
cmp
xor
mov
test
js
lock
mov
icebp
out
decb
or
cmpsl
aad
add
gs
imul
push
mov
call
mov
out
repz
lret
cld
in
add
scas
outsl
mov
inc
cwtl
jbe
mov
sbb
das
sbb
and
mov
in
pop
gs
outsl
sbb
jnp
mov
pop
fdivl
mov
std
pop
pop
lea
push
and
pusha
in
lds
jns
ror
add
mov
call
xor
out
push
push
sbb
fisubrl
mov
mov
dec
dec
test
hlt
push
cli
and
adc
sub
mov
add
xlat
mov
adc
or
clc
ds
xchg
pop
sarl
in
xchg
in
notl
ljmp
cmp
add
cmpsl
mov
scas
cs
add
pusha
dec
pop
out
mov
dec
xchg
pop
inc
js
int3
lock
int3
insl
and
sub
mov
sub
lock
jmp
icebp
push
lahf
dec
fdivs
sbb
sub
mov
jge
and
in
pop
dec
cmp
sbb
repz
push
int3
mov
daa
and
pop
in
mov
pop
hlt
mull
and
leave
cmp
mov
inc
ljmp
mov
fmull
loopne
adc
adc
ss
or
sbb
dec
xor
xor
jge
jbe
mov
testl
mov
mov
cmpl
pop
push
stos
push
mov
dec
int
mov
cmp
mov
int
iret
loopne
inc
in
mov
sbb
gs
lcall
fcmove
sbb
inc
or
cmp
cmp
lea
inc
dec
mov
mov
jns
movsl
inc
ret
push
sub
push
jnp
xchg
jno
lods
xor
incb
out
pop
or
inc
cmp
dec
aaa
popf
sbb
xor
and
fstps
xor
jnp
adc
mov
adc
inc
insl
std
inc
add
mov
outsb
sbb
outsb
sbb
inc
lret
jno
mov
push
test
mov
jle
je
cmp
adc
xor
mov
push
frstor
lret
mov
sti
call
sbb
dec
add
rcrl
sub
in
adc
xor
int
cmp
fdivs
or
jg
jnp
ret
jb
mov
pop
mov
out
dec
ret
je
repz
xor
sub
inc
sbb
mov
idiv
pop
ss
and
mov
mov
ja
xor
add
arpl
mov
push
xorb
push
and
inc
add
adc
cli
xor
or
sbb
in
int
add
mov
and
lods
push
dec
mov
test
fcom
xchg
xchg
icebp
repnz
xchg
xchg
inc
sub
leave
insl
inc
and
xchg
xchg
add
adc
xchg
jb
mov
add
loopne
cwtl
shrl
or
add
repz
mov
mov
test
jp
aas
decb
mov
dec
add
cmp
int3
in
lahf
fnstcw
ret
inc
mov
mov
gs
out
xchg
loop
stos
jmp
jg
mov
sahf
loope
addr16
outsl
ss
xchg
lock
lea
aas
xchg
xor
pop
sbb
lcall
or
mov
mov
ja
and
sti
mov
pop
in
icebp
icebp
and
sbb
bound
sahf
stos
inc
cmp
adc
or
stc
and
test
es
addl
or
es
lcall
cmp
dec
out
sub
cmp
pop
fdivl
pop
fs
out
insl
ss
inc
popf
sar
sbb
dec
arpl
push
add
sbb
fimuls
pushf
pushf
inc
ja
pop
jnp
and
ror
push
mov
pusha
add
repz
out
jecxz
jg
fsubs
inc
adc
lods
test
cmp
cmp
inc
inc
xchg
pushf
dec
adc
popf
out
adc
into
dec
fs
sub
cmp
and
and
jle
shrl
rcrb
cltd
nop
mov
filds
inc
repz
xchg
nop
dec
jb
mov
std
mov
rep
adc
fnstcw
adc
clc
repnz
xchg
in
push
scas
cmp
sub
mov
rcll
or
inc
shll
aad
aas
aad
out
mov
aam
sti
mov
xor
xchg
sbb
out
ss
shrb
jecxz
xlat
xlat
icebp
mov
fisubl
mov
push
fdivs
mov
pushf
sub
enter
scas
mov
out
jbe
out
pusha
loope
out
ss
adc
lods
test
test
popf
dec
jne
inc
loope
clc
hlt
xor
mov
imulb
in
xlat
mov
lret
and
ja
adc
jno
sbb
out
pop
movsl
jge
mov
cmp
pop
xchg
data16
scas
inc
cmp
jmp
js
jo
pop
adc
pop
in
add
pop
mov
xlat
cmpsl
ret
push
mov
pop
cwtl
inc
fidivs
mov
add
addb
mov
mov
inc
leave
push
int3
hlt
pop
jb
sbb
sbb
imul
or
test
xchg
xchg
daa
dec
je
xchg
xchg
add
mov
sbb
ret
push
iret
adc
inc
imulb
sbbl
mov
xor
pop
into
inc
int
roll
mov
fs
stos
fdivr
or
push
lret
and
mov
cmp
push
daa
xchg
pop
and
fldz
mov
cmc
jmp
sub
push
xlat
jns
sarb
pusha
aam
mov
sbb
pop
sbb
loop
xchg
or
and
outsb
movsl
sbb
fcoml
add
sub
jo
or
cmp
sbb
insb
arpl
mov
inc
fstl
mov
or
and
push
xorb
sti
mull
xor
loopne
xchg
out
or
adc
dec
pushf
mov
cmp
jp
pop
or
adc
mov
xchg
into
popf
ss
push
je
push
or
outsb
sarb
scas
cmp
adc
data16
and
insl
repz
dec
lret
aad
inc
mov
loope
add
adc
pop
dec
jbe
sub
adc
jl
inc
push
or
and
mov
sbb
xchg
lds
adc
pusha
popf
test
push
pop
psubusw
dec
lahf
hlt
mov
out
test
shlb
sub
ret
test
test
inc
xchg
mov
cmpsl
fwait
push
gs
or
add
sub
cs
lds
sub
push
push
sbb
sub
lds
push
scas
mov
push
enter
ss
push
push
jge
jg
cwtl
add
inc
inc
das
add
sahf
and
sar
lods
ds
mov
imul
pusha
sahf
cmp
arpl
push
mov
push
cld
stc
sbbb
jnp
mov
inc
aas
sahf
jo
dec
xchg
mov
ret
mov
stos
push
pop
mov
xor
jns
pop
adc
pop
aas
fs
divl
cli
adc
jmp
or
imul
mov
mov
mov
aaa
or
into
xlat
popf
call
mov
lret
cmpsb
cmp
cmp
or
xor
xchg
mov
cmc
sbb
push
dec
mov
in
in
icebp
lahf
and
sbb
repnz
mov
int3
add
adc
pop
xlat
jl
fbld
into
adc
pushf
mov
aas
sbb
int3
cltd
dec
mov
mov
dec
mov
popl
clc
ret
push
loope
fisttpl
inc
inc
loopne
call
pop
shr
aam
sub
add
movsb
ss
push
mov
imul
mov
ds
orb
adc
jge
jno
loopne
shlb
inc
sub
jmp
notl
sub
cmp
in
movsl
xchg
mov
xchg
scas
mov
movsl
les
or
push
ljmp
test
mov
out
int
repz
enter
std
cmp
ficoms
repz
mov
cwtl
arpl
push
rorb
xor
movsb
iret
push
xchg
mov
loope
imul
mov
cmp
mov
out
in
lea
in
aam
imul
clc
in
imull
pop
and
outsb
sbb
xor
dec
adc
mov
mov
divl
push
cmp
movsl
and
out
sub
leave
rep
sarb
nop
sbb
movl
pushf
add
cwtl
pusha
ja
sub
repz
or
cmp
lods
cmp
jnp
push
inc
dec
fnstsw
jae
lods
enter
or
sub
cmp
mov
lock
cmp
push
jge
fbstp
hlt
and
fists
pop
mov
mov
gs
loopne
out
aam
int3
xchg
hlt
outsl
push
int
test
aaa
dec
mov
nop
int
fs
dec
jns
sar
loopne
mov
sahf
pop
in
into
loope
xchg
ds
jp
insb
into
andb
mov
inc
jnp
decl
out
adc
sub
test
dec
leave
push
aad
pop
loopne
sbb
push
cwtl
xchg
jo
cwtl
inc
loope
test
js
mov
or
xchg
inc
add
sub
scas
cmp
jae
scas
repnz
pop
dec
xchg
push
adc
out
aaa
call
loope
data16
sbb
in
pop
cli
lcall
cmp
out
mov
dec
or
out
sub
loop
popf
cmp
cmp
sbb
push
mov
jno
mov
cmp
nop
cmp
inc
shll
cmp
iret
insl
mov
ljmp
adc
ja
ss
in
cmp
iret
xor
dec
add
jae
ret
jmp
idivl
dec
lods
sarb
mov
xchg
and
outsb
mov
push
ja
ds
fisttps
ljmp
jmp
sbb
inc
cmpl
pop
popl
rorb
js
repnz
lock
adc
xor
mov
push
jge
or
jl
lcall
jmp
aas
sub
lds
and
arpl
sbb
cli
xchg
push
ds
jns
jb
inc
aam
sub
sub
xlat
xlat
out
clc
ficoml
aaa
add
filds
mov
jmp
push
or
repz
popa
and
lahf
inc
add
inc
in
insb
movsl
arpl
adc
cmpsl
mov
repnz
fmull
push
jmp
movsb
sub
push
lods
stc
in
fisubl
aaa
lret
adc
pop
add
xchg
shll
pop
insl
mov
cld
pop
mov
shlb
xchg
mov
jbe
jne
jae
push
test
push
add
jg
xor
leave
dec
loopne
shll
xor
add
inc
jae
xor
inc
mov
rclb
inc
cld
cmp
sbbl
sbb
jnp
jb
into
jo
pop
std
ss
jg
jmp
lahf
sbb
adc
inc
hlt
sbb
push
push
insl
adc
or
out
pop
addr16
aas
test
out
aaa
shl
sub
push
mov
mov
mov
hlt
sub
adc
xor
stos
xchg
test
pusha
and
sub
inc
pop
push
lret
jle
lods
in
scas
or
mov
outsb
scas
fstl
dec
pop
push
pop
xchg
daa
icebp
clc
adc
std
push
out
push
adc
popa
gs
sbb
pop
imul
jp
xor
push
int
outsl
flds
sbb
mov
imul
int
test
or
mov
pop
fcmovnu
dec
mov
xchg
mov
call
call
repz
shlb
shrb
cwtl
rcrl
ss
aaa
in
out
fistpl
stos
ja
or
je
cmpsl
jp
push
mov
cltd
mov
mov
push
cmp
adc
pushf
notl
popf
imul
js
fdivrl
push
jmp
xchg
cmp
call
pop
push
push
aad
loop
sbb
ljmp
loope
mov
xchg
mov
imul
pop
cwtl
xchg
pop
popa
sub
sub
test
pop
push
and
fistpll
ljmp
imul
push
mov
jb
repnz
cmp
fisttpll
push
aad
or
mov
adc
loope
xlat
cmp
pop
cmp
mov
lods
xorb
gs
pop
popf
xor
adcl
dec
es
test
dec
sub
pop
popl
cmp
stos
mov
sarl
lds
mov
sbb
mov
mov
popf
mov
std
aam
ds
xchg
xorl
or
mov
loope
add
sbb
mov
push
lahf
xor
bound
cmp
movsb
pop
sbb
and
dec
xor
xor
mov
lret
adc
cmp
and
xor
or
adc
out
icebp
add
loope
out
inc
dec
in
repz
addl
enter
mov
cmpsb
cld
cli
sub
in
jo
jae
outsb
testl
ljmp
dec
push
mov
es
cltd
adc
into
cmpl
mov
jle
or
sbb
test
nop
lcall
or
adc
pop
jecxz
inc
out
adc
sbb
mov
daa
xor
fimull
pusha
movsb
lock
push
icebp
mov
daa
inc
jecxz
and
mov
in
popf
inc
cmpsb
cmp
cs
mov
cli
in
sbb
mov
xchg
push
shlb
adc
stc
lret
fnstenv
dec
movsb
loopne
repz
sub
or
mov
mov
fs
pushf
jne
mov
cmc
pop
xor
cwtl
call
bound
inc
cmp
out
rolb
jb
out
or
xor
push
aad
das
jg
cltd
inc
inc
test
sub
and
lret
xchg
rolb
mov
fs
lret
hlt
pop
int
mov
and
inc
ss
jp
insb
sub
cmp
scas
xor
jge
sub
dec
dec
ljmp
mov
insb
hlt
cmp
cltd
mov
ja
in
loope
test
rorl
scas
mov
dec
lret
gs
jb
mov
insl
mov
xchg
imul
fnstcw
in
mov
or
int
idiv
lods
and
cmp
es
fbld
cwtl
icebp
enter
sbb
outsb
sti
sahf
nop
push
push
jnp
in
iret
sti
mov
pushf
jae
popa
leave
xor
movsb
cwtl
adc
bound
mov
mov
sub
orl
subl
popf
add
movsb
pop
dec
cli
int
fmull
les
dec
movsb
adc
test
aaa
xchg
push
pop
loope
popf
addr16
push
and
push
lcall
in
adc
outsl
adc
outsl
movsb
cld
jbe
test
mov
js
or
lods
sbb
rcr
adc
orb
daa
xlat
cmp
xor
cmp
xor
dec
data16
outsl
cmpsb
sarb
mov
lcall
push
daa
pusha
mov
jbe
dec
mov
sbb
mov
jge
out
jge
inc
push
mov
pusha
ss
xor
subl
mov
dec
xchg
mov
lahf
rcrb
add
out
and
mov
mov
sbb
cmp
adc
mov
cmc
aaa
icebp
cmp
fs
decl
mov
cmc
inc
sti
testb
adc
cltd
aam
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
