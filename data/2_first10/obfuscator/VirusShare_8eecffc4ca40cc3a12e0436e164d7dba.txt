repz
xor
dec
xchg
sbb
pop
mov
iret
cmp
add
dec
pop
ja
sub
adc
ret
add
rorb
xchg
add
jbe
rclb
xchg
xor
test
testb
dec
cmp
xchg
into
and
push
xor
test
in
or
pop
jno
cmp
lahf
pop
rol
call
stos
and
popa
cli
inc
out
mov
rolb
and
orb
jbe
mov
xlat
push
jle
mov
push
fcoms
jl
mov
push
add
movsb
add
movsb
loope
push
jg
aam
mov
pop
sarl
fildll
push
inc
mov
ja
mov
out
pop
mov
cmp
pop
rorl
pop
pop
fdivp
pop
into
push
sbb
ss
inc
sbb
xor
mov
adc
call
push
pusha
bsf
loopne
pop
push
test
mov
xor
mov
loope
pop
mov
insl
pop
add
inc
jge
inc
inc
shlb
loope
xor
mov
cmp
fcomi
add
into
cmpsb
sbb
lea
shl
data16
imul
xorl
fwait
data16
cmp
test
mov
sbb
inc
ss
stos
dec
shrl
cmp
lea
das
dec
or
popa
and
bound
pop
jg
mov
testl
int
inc
push
and
dec
in
lcall
xor
jns
jo
aaa
xchg
dec
es
xchg
sub
sub
mov
leave
out
jnp
cmp
xchg
xor
fstpt
pop
or
mov
mov
xor
lcall
adc
and
push
cmpsl
jnp
test
in
pop
mov
jmp
outsl
pushf
add
pop
or
and
and
mov
xor
out
mov
fsubs
or
jno
movb
inc
xor
push
test
ret
in
hlt
xchg
xchg
loopne
lcall
aad
fsubrl
push
in
movsl
stos
aad
fs
popa
dec
xor
jecxz
mov
inc
popa
push
jno
cwtl
cmc
iret
dec
repz
xchg
sbb
in
mov
pushf
loop
js
push
mov
fwait
jecxz
add
push
sbb
or
icebp
cld
and
mov
cltd
sbb
jle
es
or
push
inc
rclb
and
adc
or
in
daa
inc
loope
dec
fwait
sbb
fnstcw
lahf
mov
inc
repnz
inc
sub
fmulp
imul
rsqrtps
dec
stc
fistl
inc
jmp
ja
adc
or
ret
add
mov
dec
jnp
jl
leave
cli
add
repnz
dec
daa
inc
pop
pop
jmp
icebp
clc
or
fcmove
mov
lock
or
in
adc
pop
cmp
cmp
adc
in
fwait
loopne
sub
fsubrs
add
ret
test
mov
push
lret
xchg
dec
test
in
movb
pop
mov
daa
inc
xor
sub
cltd
push
sti
pop
dec
sbb
cmp
pop
xor
mov
lods
cs
jne
aas
arpl
fwait
mov
dec
cmp
mov
or
icebp
ret
xchg
pop
bound
jmp
ja
xor
add
das
aaa
xchg
divl
mov
jnp
jno
fs
out
mov
jae
jecxz
or
les
and
jbe
push
adc
std
push
fdecstp
es
cwtl
push
insb
stos
scas
daa
dec
sub
jne
shl
fwait
jle
push
loopne
or
jmp
lods
jno
push
push
sbb
rcrl
lret
aam
outsb
push
cli
and
enter
popa
jae
cmpb
testl
lds
cli
movsb
lds
test
pusha
mov
push
dec
in
loop
pop
gs
lcall
std
pop
rep
push
ljmp
mov
xchg
push
sub
fcmove
pop
adc
or
jbe
hlt
add
dec
pmaddwd
sbb
jb
in
inc
push
mov
ss
adc
mov
pop
inc
cmp
ret
xchg
cmpsb
inc
dec
pop
lret
jle
out
jne
add
mov
mov
movsb
xchg
adc
and
inc
fstps
testb
xchg
addl
mov
dec
mov
das
repz
add
and
pop
and
iret
mov
aaa
cmp
push
gs
adc
out
adc
push
push
pushf
aaa
insb
pop
lods
int3
ds
or
das
mov
mov
rcl
fwait
popa
inc
mov
and
and
sbb
add
xchg
inc
adc
lods
push
pusha
cmp
cltd
cmc
sub
jge
xchg
mov
push
cmp
inc
popf
int3
or
scas
add
mov
mov
adc
ret
sbb
ucomiss
imull
movsl
xor
rcrl
sbb
pop
xchg
xor
inc
sub
jbe
sahf
aas
mov
cltd
scas
stc
adc
in
inc
xlat
ret
sbb
dec
xchg
dec
fdivs
xchg
cld
sbb
and
xchg
scas
out
dec
test
xor
bound
mov
add
sbb
out
test
push
xor
jnp
gs
pop
mov
fdivrl
out
jb
sbb
mov
push
or
mov
jo
fcompl
ljmp
cmp
rcr
scas
mov
imul
cld
or
gs
fistpll
jp
and
pop
jae
push
xchg
andl
dec
sub
pop
repnz
sbb
cmc
repnz
adc
and
add
movsl
les
clc
out
xlat
jnp
pushf
lock
cmp
mov
sub
push
push
negb
outsl
adc
xor
ss
lock
fstpt
jo
cwtl
fdivl
sti
push
lcall
aas
add
xorl
out
rorl
mov
xor
in
out
xlat
aad
imul
xor
xchg
push
xlat
or
push
test
fs
lret
cltd
fidivl
cltd
xchg
add
std
sub
dec
test
rcr
loop
push
and
mov
mov
inc
pmaddwd
ret
mov
sti
ret
orl
loope
mov
inc
push
pop
hlt
into
adc
int
dec
out
sbb
les
iret
xchg
dec
cmpsl
push
sbb
dec
pusha
adc
aas
inc
mov
ja
lds
inc
inc
in
add
stc
clc
jne
cwtl
nop
adcb
sbb
es
jle
ds
adc
inc
jmp
pop
mov
scas
cmc
fs
mov
ljmp
in
push
pop
lea
inc
mov
scas
loop
fadds
out
xchg
xchg
mov
cmp
dec
es
push
insb
fbstp
int3
cmp
addr16
es
sub
xor
sbb
mov
repnz
jmp
scas
xchg
xchg
jno
jnp
dec
shlb
push
scas
or
push
negb
inc
movsl
sbb
sti
std
push
jnp
nop
or
cmp
cmpsl
xor
movsb
aam
jno
call
test
add
xchg
sub
lea
call
addb
and
push
das
or
popf
xor
xor
in
jne
push
ja
out
ljmp
mov
fs
je
lea
mov
sub
lods
int
dec
movb
test
jae
pop
inc
fildll
std
jbe
iret
cmpsl
das
jb
or
sub
mov
negl
pop
add
movsb
mov
jecxz
xchg
add
fmul
mov
cld
dec
xor
inc
and
adc
xor
add
mov
imull
lds
outsb
fcmove
push
push
xchg
jecxz
aam
imul
mov
fisttpll
pop
cmpl
cli
inc
popf
and
inc
xor
mov
mov
adc
adcl
icebp
and
aam
or
and
divb
push
in
testl
cld
jge
cli
loop
xor
aaa
lock
ret
in
push
hlt
sbb
addb
loopne
push
into
sar
in
int3
dec
push
movsb
jo
lock
lcall
stos
aaa
mov
mov
inc
adc
dec
lret
lea
mov
mov
sub
push
les
out
cmp
push
mov
dec
mov
mov
push
push
sbb
hlt
mov
testl
in
lcall
and
aas
jl
xchg
clc
repnz
lods
in
inc
daa
jmp
pop
pusha
test
imul
sub
mov
xadd
rolb
shlb
std
les
test
adc
inc
dec
pop
pop
pop
cltd
lods
sbb
jge
cmp
pop
insb
repz
and
sar
sbb
testb
dec
inc
push
mov
cli
or
or
aaa
cli
mov
push
inc
mov
pop
sbb
out
or
mov
nop
mov
arpl
inc
xchg
mov
lret
pop
out
push
xor
inc
push
cld
mov
xor
je
sbb
enter
adc
into
nop
pop
push
pushf
popf
jp
push
lods
test
xchg
mov
stc
stos
fnstsw
xchg
xchg
mov
cwtl
add
fsts
dec
push
lret
mov
push
dec
push
ljmp
jp
jle
pop
jns
jns
jb
jb
adc
mov
stos
cmp
test
fldcw
push
fimuls
test
cmpsb
cmpsl
std
adc
xchg
fnstcw
push
xorb
mov
cs
pop
in
dec
pop
dec
and
sub
and
nop
sarl
cmp
aas
ret
add
mov
pop
pop
pop
gs
and
add
inc
dec
sub
jecxz
cmp
inc
mov
inc
inc
sub
mov
jnp
aaa
mov
insb
cmp
mov
jge
jae
repnz
sahf
sbb
insl
inc
repz
ret
adc
aas
push
loopne
icebp
xor
mov
and
into
xchg
pop
insl
out
rcr
mov
scas
fnstcw
xor
sbb
and
jg
xor
mov
xor
test
leave
leave
jmp
sbb
jp
sub
daa
mov
aas
mov
fmuls
repz
mov
lahf
inc
jb
or
jns
inc
jmp
int3
mov
adc
movsb
into
jb
mov
jbe
or
mov
stos
inc
inc
into
adc
dec
or
fistpll
outsl
adc
fs
lock
cmp
pop
nop
push
bound
mov
out
mov
mov
loop
dec
cli
in
mov
add
scas
cs
hlt
lock
testb
and
cmc
js
mov
or
push
xor
lret
or
jl
push
add
sbb
mov
aad
dec
mov
add
fwait
loopne
dec
pop
add
cmp
and
nop
cmc
and
sub
pop
lcall
or
orl
cs
imulb
scas
cmp
add
mov
and
lea
cmpsw
inc
mov
fs
leave
out
es
data16
lea
cmp
test
pop
mov
out
adc
pop
and
sbb
jo
test
adc
cmpsl
in
mov
daa
orb
and
leave
push
cmp
int
or
sub
cmp
sbb
aam
fmull
or
and
test
arpl
insl
into
scas
fnsave
scas
push
lods
xchg
push
out
adc
mov
aas
ret
dec
inc
loopne
pop
les
xchg
dec
out
shrb
sbbb
mov
das
out
xchg
aas
sar
pop
ljmp
cmp
push
xor
push
insl
psrlw
out
stc
mov
push
and
fstps
sub
clc
dec
sub
mov
out
insl
sub
pop
std
aad
lret
add
lcall
xor
mov
cmp
ja
jle
push
adc
punpcklbw
sbb
repnz
cmp
dec
cmp
xchg
ret
es
or
negl
mov
inc
pushf
fisubl
cmpsb
jge
mov
ss
loopne
and
and
adc
add
adc
inc
hlt
subb
jae
xor
lock
pop
lds
sub
and
inc
bound
scas
dec
push
xchg
sbb
cmpsb
outsl
sbb
adc
inc
rorb
pop
ret
push
fsubrl
xchg
cs
clc
cmpl
mov
inc
arpl
outsl
cmp
ja
jp
mov
pop
int3
out
outsl
mov
mov
xchg
int
lods
pushf
cmp
xor
les
jo
mov
out
sub
mov
sbb
adc
mov
mov
test
and
dec
add
xchg
jl
mov
push
sub
push
or
cmp
adc
xchg
jb
xchg
push
add
fmull
enter
xchg
pop
mov
orb
push
and
in
sub
push
outsb
jg
outsb
in
roll
aaa
pop
push
jnp
dec
std
rep
imul
mov
les
jecxz
jecxz
sahf
sub
addr16
mov
mov
sbb
outsb
sbb
in
cmpsb
mov
out
aas
sti
lods
lcall
cmpl
pop
jbe
sub
sbb
pop
add
aad
and
mov
xchg
pop
sbb
inc
dec
xchg
cltd
mov
aad
dec
rorl
stos
jne
push
sti
mov
dec
lock
lods
xchg
loope
xchg
lcall
mov
pop
jle
movsl
sbb
mov
adc
call
mov
and
or
cmp
xlat
sti
or
cmp
pushf
push
je
dec
mov
pop
fcoml
out
int
bound
and
nop
jge
loop
iret
push
lock
inc
sub
test
movnti
xor
xchg
pop
mov
int3
mov
pop
adc
jle
mov
rcl
pop
pop
push
aad
fimull
dec
push
ds
push
test
xchg
dec
lds
xchg
inc
mov
scas
push
and
jp
jno
adc
jae
xchg
sub
mov
jo
call
insb
in
fistpl
popa
loope
jg
jl
out
in
cmp
mov
sub
add
iret
sbb
sub
pusha
pop
inc
xchg
ja
insb
push
icebp
in
es
dec
jg
aaa
mov
pop
xchg
cs
dec
dec
test
sbb
xlat
loope
xor
imul
mov
ss
mov
outsl
in
xchg
inc
xchg
loopne
push
int3
popf
xchg
adc
jae
aas
mul
cmp
or
fdivr
push
push
gs
iret
mov
mov
arpl
bound
ja
mov
shrb
xor
mov
ret
inc
testl
add
inc
push
fsubl
dec
jnp
in
xchg
inc
push
cmpsb
push
xor
pop
jbe
clc
mov
fidivrl
jb
movsl
sbb
dec
inc
sub
sbb
arpl
or
mov
lods
mov
cmp
mov
jo
ds
sbb
arpl
mov
mov
jo
xor
jo
pop
cmp
xor
sbb
imul
test
jl
cmc
or
cmpsl
pop
xor
xchg
or
pop
fcomip
xchg
xchg
jge
pop
out
out
inc
and
pop
scas
adc
fs
iret
fldl
xor
imul
jbe
js
popa
sahf
push
jg
sbb
pop
inc
into
mov
add
je
jmp
mov
jmp
adc
js
xor
add
dec
xchg
sbb
je
xchg
add
loope
mov
js
das
mov
ret
add
adc
push
sub
cmp
test
cmovns
mov
sbb
add
mov
xor
out
inc
or
mov
push
push
mov
ss
dec
push
sub
jns
jae
je
lret
xchg
xchg
outsl
pop
loope
push
fidivl
mov
mov
dec
or
and
outsb
lcall
orl
cmp
lea
jecxz
xchg
mov
movsb
sub
mov
insl
pushf
daa
mov
inc
adc
sub
enter
andb
out
jge
mov
jo
cmpsb
in
xor
and
fwait
add
cmp
lret
pop
push
iret
pop
xchg
ret
sbb
and
xchg
lock
cmp
lods
fnstcw
cmp
push
xor
pop
push
jno
sbb
add
cwtl
iret
iret
or
jecxz
xchg
jmp
mov
aas
push
sahf
pop
pop
fwait
add
ss
push
mov
mov
mov
arpl
repnz
arpl
out
lahf
inc
jnp
fldpi
cmp
int
push
inc
push
cmp
out
pop
lods
leave
sbb
dec
cli
movsl
js
dec
outsl
mov
mov
rcrb
imul
adcl
sub
ljmp
fucom
dec
dec
cld
xchg
mul
fdivrl
xchg
aas
add
jbe
aam
mov
repz
into
ss
and
mov
insb
inc
fstp
and
jb
dec
pop
stos
insl
fisubs
push
sub
stc
jge
inc
sar
notl
xchg
sub
pop
push
push
jg
lahf
stc
shr
roll
mov
js
fsin
fistpll
ja
popf
mov
inc
adc
sbb
cmc
sub
xor
insl
out
mov
or
lahf
push
fwait
dec
cmpsl
out
in
mov
pop
sub
cwtl
and
mov
out
scas
xchg
shlb
or
inc
pmuludq
out
gs
ds
push
and
push
mov
fisttps
enter
pop
xor
sbb
mov
adc
push
js
fsubrl
adc
adc
dec
sbb
add
js
or
test
mov
push
mov
add
jne
mov
adc
ret
sub
mov
inc
out
mov
mov
aam
push
inc
push
sti
mov
sti
fwait
lea
ret
jnp
leave
xchg
adc
and
gs
movsb
pusha
rolb
daa
push
fwait
aas
cmp
arpl
push
imul
jbe
adc
dec
mov
arpl
ret
into
popa
push
enter
int3
js
cmp
stos
scas
jg
stos
xchg
jge
cmp
rorl
or
fcmovne
testb
mov
lahf
dec
inc
dec
hlt
cmpl
push
cmpsl
cwtl
repnz
cmp
sub
roll
jle
jge
push
jmp
mov
mov
in
xchg
cmp
loopne
test
out
loope
cmp
in
shrl
push
xchg
pop
sbb
xor
ds
or
cmp
daa
lock
and
popa
pop
mov
xchg
cmpsl
dec
cld
sarl
add
xor
and
mov
mov
xor
mov
push
cmpsl
push
mov
pop
sub
std
sbb
xchg
scas
test
xchg
call
adc
cltd
pop
cld
shrb
jnp
jo
sahf
mov
sub
xlat
xlat
mov
insb
das
or
jae
arpl
fwait
enter
and
std
movd
dec
cmpsb
int
dec
push
sbb
add
std
mov
cwtl
lahf
shll
cmp
sub
out
push
mov
push
fcmovb
test
xor
in
mov
in
fs
std
cmpsb
sbb
jns
adc
inc
sub
sbb
push
and
shl
or
and
ljmp
add
or
mov
cmc
xchg
sbb
jmp
daa
ds
and
fildl
aad
dec
dec
and
out
cmp
xor
push
inc
outsl
in
mov
imul
pop
js
inc
jge
cmpsb
lock
dec
ljmp
bound
cmp
es
insb
add
in
sti
std
aad
fldpi
stc
movsb
dec
mov
pop
push
adc
in
test
mov
daa
sbb
dec
insb
test
inc
xor
out
push
lret
inc
inc
sbb
and
xor
nop
jmp
push
stc
gs
pop
inc
idivl
dec
js
aas
mov
or
loop
pop
adc
inc
mov
mov
das
cmp
xchg
push
popf
mov
call
mov
lock
data16
ret
js
mov
mov
pop
ret
dec
sub
push
or
mov
leave
pop
xor
inc
popa
pop
jb
lods
gs
shll
mov
in
shrl
rcl
scas
mov
push
cwtl
scas
out
mov
cltd
inc
mov
inc
call
pushw
pop
xchg
negb
dec
pushf
xchg
dec
mov
notl
and
mov
cmp
mov
dec
xor
pop
cmp
mov
sbb
bound
not
mov
nop
das
and
inc
lods
andb
sbb
push
xchg
arpl
and
dec
mov
add
scas
xchg
test
aad
sbb
inc
mov
pop
mov
cld
mov
call
mov
and
fbstp
add
test
iret
cltd
inc
push
js
insb
dec
mov
out
sbb
loop
out
cmp
cmc
adc
mov
loope
in
push
xchg
jne
xor
sub
fildl
or
stos
jmp
fnstcw
loopne
pop
xchg
jge
xchg
daa
sbb
mov
popa
inc
push
pusha
int3
xor
xlat
or
push
adc
or
scas
jae
or
rcrl
movsb
xor
fimull
je
push
dec
cmc
int
pop
dec
loope
push
sbb
sbb
mov
mov
push
data16
loop
insb
mov
xchg
test
js
jne
mov
in
dec
addr16
jae
or
add
inc
inc
xor
inc
popa
ja
repz
mov
mov
jae
loopne
sbb
repz
je
daa
out
cmpsl
std
pop
and
call
fucomp
jmp
mov
and
adc
mov
xchg
subl
cmpsb
icebp
mov
pop
repz
dec
scas
inc
cli
rolb
pop
loop
sub
mov
inc
push
or
xor
arpl
arpl
push
cmp
pusha
std
sub
and
adc
jb
adc
shrb
int3
imul
es
addr16
mov
insb
lret
xlat
cmp
jl
adc
filds
push
movsb
mov
aam
dec
stc
in
in
sbb
sahf
sub
fcompl
mov
pop
pop
pop
or
lds
xlat
enter
jmp
lahf
aaa
lods
cmp
hlt
lret
xchg
aas
cmpsl
mov
fwait
lahf
aam
fcom
or
lret
or
pop
jbe
das
sbb
mov
stos
ja
test
lret
mov
mov
not
sbb
aad
or
adcl
adc
inc
pop
in
test
inc
dec
sub
fs
gs
das
test
out
ss
clc
sub
xchg
test
xlat
adc
and
push
xchg
mov
repnz
loope
add
or
pop
jl
aad
popf
sti
push
scas
mov
xor
popa
cmp
popa
lock
jp,pt
cs
insb
adc
push
scas
mov
cmp
pop
movsl
push
pop
and
xchg
dec
dec
repnz
daa
or
out
or
gs
inc
or
insb
sub
lret
xlat
jl
adc
popf
clc
inc
pop
cmc
in
pop
in
pushf
lret
jo
pop
mov
xchg
addr16
pop
dec
xchg
stc
sbb
inc
enter
xchg
add
scas
cmp
test
jae
rcrl
mov
enter
jg
dec
imul
xor
ret
in
xchg
pop
push
dec
loope
pop
fwait
and
cmc
clc
hlt
adc
jp
jl
outsb
xor
cli
sub
into
std
push
out
adc
xor
scas
lock
mov
mov
lds
mov
fdivrl
or
push
adc
xor
push
inc
push
adc
mov
mov
adc
mov
movl
out
pop
push
pop
dec
nop
stos
mov
stos
outsl
xor
mov
add
js
adc
jo
mov
enter
add
daa
sbb
inc
lods
sub
insl
nop
xor
cmp
cmc
mov
in
das
cmc
popa
push
jb
stc
pop
cmpsb
hlt
fidivrs
jb
xor
xchg
jecxz
adc
mov
jl
in
cwtl
inc
xchg
sub
sbb
mov
jno
xor
cmc
shrl
push
lret
call
or
les
pop
scas
neg
cmp
mov
test
sbb
das
and
mov
mov
clc
in
pop
add
call
fnstenv
in
push
js
jl
mov
and
pop
adc
pop
imul
scas
jo
mov
xchg
jb
xorb
sbb
cltd
ljmp
dec
sub
enter
xor
pop
mov
and
add
scas
lea
pusha
icebp
xlat
push
add
mov
test
or
mov
in
lock
out
stos
push
pop
loope
jge
and
daa
jecxz
inc
sub
sti
lret
iret
nop
sbb
mov
mov
lods
stos
cmp
popa
inc
shlb
subb
sub
sub
jg
jg
outsl
cld
stos
fs
sub
mov
cmp
dec
mov
inc
mov
shrb
adc
and
xor
jae
sbb
aaa
lcall
aam
lahf
sub
clc
pop
or
xchg
insb
dec
dec
test
jbe
mov
jbe
negl
popf
inc
xchg
orl
stc
daa
and
sarb
mov
cwtl
iret
popf
sbb
xchg
push
jbe
fildll
dec
jnp
and
mov
cmpsl
cmp
imul
fstpt
rcl
shrb
adc
sub
stc
ljmp
repz
ret
push
push
xchg
pop
mov
loop
popa
fnsave
inc
ja
aam
fsubr
out
add
and
sbb
mov
pusha
pop
call
imul
pop
mov
mov
or
sarb
add
adc
or
add
adc
mov
mov
sub
dec
sub
sti
insl
pop
jge
loop
jnp
xor
test
push
xor
lcall
mov
daa
xchg
push
mov
cltd
mov
out
lret
push
jle
mov
xchg
jle
js
syscall
jae
add
pop
clc
add
cltd
and
leave
jo
mov
lea
xchg
inc
es
mov
sub
mov
clc
and
fnstenv
lret
fsubrl
test
and
lock
dec
jecxz
and
pop
sbb
cli
pop
or
fistps
test
or
pop
push
mov
sub
sbb
cmp
pop
leave
inc
insb
cmpl
cld
dec
enter
lcall
sbb
jge
xchg
in
rcrl
cmp
and
mov
bound
cmpsb
nop
add
dec
loopne
mul
inc
or
push
int
test
sub
xchg
or
lret
and
enter
repz
outsb
push
sbb
ja
xor
sti
cmp
pop
jl
sub
ds
mov
mov
sbb
pop
lahf
inc
push
out
sub
add
push
lds
push
lods
cld
clc
das
inc
fstl
dec
inc
dec
je
loope
lcall
cmp
inc
jecxz
mov
dec
mov
cwtl
out
cltd
movsl
pop
adc
mov
shll
jae
xchg
iret
add
es
shll
add
add
cmc
and
push
stc
inc
test
loop
mov
mov
xchg
dec
aad
movsl
aam
or
mov
das
cmpsl
and
dec
pop
pop
mov
mov
fidivl
ret
pop
shl
movsl
in
scas
jl
xlat
test
movsl
mov
imul
cli
mov
ja
mov
and
mov
popf
cmc
movsl
loope
pop
sbb
mov
jecxz
into
mov
jns
xlat
xor
pop
add
das
fsubrs
jne
sbb
movsl
add
std
mov
out
imull
test
das
test
clc
push
test
out
mov
jo
push
and
inc
je
mov
push
xchg
jmp
int3
int
mov
pop
pusha
subb
adc
inc
add
sbb
cltd
jns
xchg
sbb
lret
scas
add
ljmp
adc
cmpl
and
fldcw
in
into
push
xor
add
add
push
mov
jb
sbb
inc
push
insl
mov
test
dec
shrb
loope
mov
inc
mov
xor
sub
hlt
jmp
mov
leave
pop
or
scas
adcl
xlat
xchg
lea
in
or
and
dec
fdivs
fs
and
sub
out
inc
pushf
add
jg
xor
adc
adc
xor
push
aaa
mov
stc
je
jge
jecxz
push
push
pop
and
fcoms
fistpll
sub
subl
adc
fs
lcall
out
cmpl
cvtps2pi
and
sub
ljmp
lcall
xor
dec
aas
iret
sub
xchg
repz
xor
push
arpl
dec
jne
mov
lcall
inc
cmpsb
lcall
push
popa
rorl
fwait
push
pop
xor
ja
popa
jae
stc
inc
xor
cltd
aaa
mov
xchg
mov
fdivrp
loope
mov
mov
dec
in
adc
push
adcb
sbb
frstor
jecxz
pop
cs
cmp
xor
repnz
mov
sbb
jo
rcrl
movsl
or
mov
sbb
xchg
stos
jno
cmp
mov
cmp
dec
or
add
dec
lock
daa
or
js
and
arpl
and
lret
jge
notl
addl
and
lock
mov
inc
mov
adc
lea
mov
jbe
pop
movsbl
mov
push
popf
and
in
test
adc
push
ja,pt
test
sahf
jo,pt
inc
cmp
cmp
lods
adc
cmp
add
movsl
dec
mov
push
leave
mov
dec
push
sub
in
add
rcrb
push
gs
sub
fisttpl
pcmpeqw
jecxz
sbb
je
sub
fnstcw
out
sbb
sub
push
cmp
call
pop
ljmp
push
imul
fwait
sub
lea
and
fsubrs
sbb
dec
sbb
xor
sub
int
push
sub
xchg
adc
lret
mov
mov
lret
imulb
mov
pop
jbe
pop
mov
pop
aas
movsl
push
cwtl
sarb
cmpsb
or
fsts
ljmp
arpl
adc
pop
aaa
notl
or
xor
ret
mov
loope
push
stc
mov
pop
mov
dec
sbb
jae
cmp
add
popf
jae
popf
repz
call
adc
xorb
mov
test
int
or
jbe
xor
movaps
mov
fidivl
aaa
jge
mov
xor
pop
addr16
in
jl
out
mov
jecxz
push
mov
idivb
pop
inc
push
xchg
lahf
enter
test
pop
push
imul
mov
mov
mov
xchg
stos
xor
or
push
pop
mov
rorb
cmp
mov
ss
or
sbb
popf
sti
es
scas
mov
cmp
fistpl
lods
stc
in
cmp
push
ret
dec
pop
push
out
rorl
lock
int
xor
or
mov
cmp
mov
mov
mov
divl
mov
out
jle
insb
mov
aam
cmpsb
sub
imul
hlt
fdivrp
imul
add
pop
testb
push
lods
jmp
insl
and
ljmp
testb
roll
or
mov
fsubrl
sbb
push
adc
pop
and
lock
mov
jae
bound
xorl
cmpsb
add
push
stos
mov
insl
jecxz
out
add
filds
xor
mov
adc
lock
and
inc
outsb
sbb
idivb
mov
je
mov
pusha
outsb
mov
jnp
dec
dec
cmp
aam
dec
pop
push
pop
aad
mov
xchg
imul
loope
push
out
pop
mov
push
sub
inc
outsl
and
les
fstp
add
mov
shll
shrb
negb
sbb
dec
xchg
iret
and
inc
jmp
imul
push
bound
pop
addr16
push
sub
and
pop
jecxz
or
add
push
mov
add
inc
out
popa
shll
mov
outsb
cltd
adc
lcall
cmc
sahf
int3
inc
push
inc
ja
test
shlb
fisttpl
inc
xor
cmpsb
jecxz
jl
push
shr
adc
iret
push
jl
pop
push
fildl
and
push
mov
fstpl
adc
push
and
rclb
or
in
cs
daa
or
movsb
gs
out
dec
in
lret
repz
jns
and
jle
iret
inc
fs
or
xlat
jb
lods
rclb
pcmpgtb
sbbb
dec
mov
adc
es
in
in
push
push
cmpsl
xchg
adc
mov
xchg
xlat
cmp
inc
test
mov
add
pop
adc
xor
jns
addr16
fs
outsb
push
push
imul
test
sbb
push
push
add
jnp
mov
mov
mov
loopne
inc
cmp
mov
dec
es
fmuls
insb
out
mov
lcall
pop
mov
jae
into
push
js
pop
lret
and
pop
stc
aas
push
les
repnz
and
add
imul
shrl
ja
ficoms
cmp
shlb
cmp
in
push
push
cwtl
ficoms
mov
sti
fisttps
xor
inc
jbe
jnp
jmp
vmwrite
or
or
ss
cmp
and
mov
popa
push
xor
imul
testb
pop
je
ret
cmp
push
sbb
loope
lods
mov
push
cmp
imul
mov
orb
test
call
dec
sbb
fldcw
sbb
shll
fildl
lret
out
sbb
xchg
inc
rcll
adc
push
loopne
push
out
iret
repz
fwait
mov
data16
mov
lock
jge
xchg
mov
push
icebp
rorl
xor
pop
add
stc
clc
clc
clc
push
push
push
push
lea
push
push
push
push
mov
push
movzbl
cmp
push
push
and
pop
pop
push
jae
cmp
pop
push
push
add
pop
pop
jge
or
test
or
loop
pop
jns
cmc
clc
push
push
push
push
pop
pop
pop
pop
cmp
clc
je
test
clc
mov
jp
jno
jge
shl
push
ror
pop
loop
jecxz
inc
data16
xor
mov
jl
and
push
cltd
pop
not
not
lea
cmc
nop
loop
pop
nop
test
jb
push
and
pop
ja
cmp
cld
jae
push
test
pop
nop
je
ja
jne
push
cmc
pop
xchg
clc
call
nop
and
push
add
pop
push
push
test
pop
pop
or
stc
xchg
nop
pop
cmp
push
push
push
push
pop
pop
pop
pop
push
call
mov
sbb
hlt
mov
ljmp
testl
push
push
mov
call
add
add
pop
add
push
push
push
mov
pop
pop
pop
rol
clc
jne
push
cmc
pop
cld
push
pop
clc
push
push
push
add
pop
pop
push
push
jo
cmp
pop
pop
jo
xchg
add
cld
push
add
pop
push
push
jle
rol
pop
pop
jge
push
dec
inc
pop
sub
cld
test
xor
add
jmp
mov
out
movsl
lret
sub
mov
sbb
add
mov
mov
adc
lahf
leave
fwait
repnz
and
test
je
push
call
insl
mov
and
rclb
fstp
xchg
bound
clc
hlt
cwtl
shrb
aas
aaa
pop
data16
push
das
test
aam
push
lcall
xor
push
mov
add
pop
jmp
add
aas
mov
imul
cmp
cwtl
in
dec
pop
dec
sbb
jno
mov
add
xor
mov
jbe
outsb
or
xor
and
mov
mov
jl
dec
xchg
pop
data16
shl
push
add
pop
push
or
pop
push
pushl
xor
pop
pop
jmp
outsb
adc
mov
addl
fldenv
test
pusha
xlat
ss
jae
inc
aad
xchg
push
inc
jne
pop
shlb
mov
mov
dec
js
dec
sub
in
aas
lret
int3
and
jne
jg
iret
and
xlat
and
or
jae
cs
inc
inc
inc
jae
test
jmp
stos
xchg
fcmovb
int
lods
pop
sbb
hlt
jbe
nop
bound
pop
jns
xor
je
lods
push
pop
xchg
sub
orl
mulb
frstor
cwtl
sbb
mov
xchg
xchg
xchg
dec
gs
sub
fwait
scas
push
adc
adc
mov
jo
xor
icebp
adc
sbb
icebp
shr
or
add
loopne
cmpsb
pop
ret
cmp
bound
insl
inc
insl
in
mov
fdivrl
inc
add
jle
or
push
push
xchg
cmp
cmp
add
stc
pusha
inc
rorl
aad
loop
cmp
aad
jecxz
mov
fmuls
push
xlat
jo
mov
neg
jge
xchg
jmp
cs
lret
cltd
adc
cwtl
dec
lcall
cwtl
scas
je
pop
mov
jle
inc
pop
movsl
fisttpl
test
ror
imul
ljmp
dec
xchg
or
fidivl
jnp
pop
mov
pop
je
sub
inc
xrelease
adcb
mov
mov
push
adc
xor
jb
mov
xor
outsb
add
xchg
mov
cli
outsb
mov
pop
dec
jne
loop
jecxz
cmp
insb
out
out
cmp
ds
sbb
push
pop
fbstp
outsl
scas
mov
pop
or
xor
ja
movsb
dec
xchg
pop
and
lcall
sub
sbb
adc
mov
mov
mov
inc
inc
loop
jecxz
ja
in
jb
pop
popa
push
icebp
mov
adc
push
jo
sub
inc
test
out
notl
lods
lods
pusha
mov
jb
les
xchg
adc
adc
shrb
xor
push
daa
aaa
pop
mov
rcrl
and
icebp
xor
ss
mov
mov
dec
addb
sbb
in
les
mov
sar
cld
rol
clc
stc
nop
jge
ja
sar
je
sub
push
call
rclb
clc
add
aaa
mov
xchg
xchg
jo
jg
and
es
inc
pop
out
and
call
sahf
xchg
fimuls
data16
fldt
xor
pop
dec
jne
adc
out
xchg
mov
xor
mov
mov
sarl
mov
dec
xor
adc
pop
sar
or
cli
fistpll
push
aam
jmp
popa
fs
lods
sbb
pop
std
test
push
mov
xor
dec
mov
and
repz
repz
and
cmp
inc
jb
mov
cmp
pop
in
lods
out
cltd
insl
jnp
adc
lahf
test
cmp
pop
cmp
mov
insb
lcall
out
test
push
testb
mov
daa
icebp
insl
inc
repz
mov
aaa
fs
enter
sbbb
xor
hlt
pop
nop
ror
leave
pop
pop
int
sbb
jae
inc
shlb
ljmp
xor
movsb
push
sbb
lcall
pop
and
repz
rcrb
add
fdivs
jb
xor
mov
in
pop
movsl
popa
or
xor
push
push
mov
mov
shrb
fcoml
call
mov
mov
mov
push
ljmp
sbb
leave
pusha
push
sahf
mov
or
jge
mov
mov
push
cmp
cld
or
sbb
push
lods
cmp
std
mov
sbb
cmp
pop
adc
cmp
stc
add
test
and
into
mov
mov
cmpsl
inc
mov
ret
shrl
cmp
cmp
ret
xchg
testl
and
xor
xchg
fcompl
mov
mov
frstor
and
lods
cmc
adc
dec
mov
sbbl
xor
lahf
cli
or
jno
pop
xchg
adc
xchg
or
mov
loop
and
fdivl
fsubrl
out
adc
sbb
mov
movsb
add
or
adc
test
xlat
in
orb
iret
xor
jmp
jnp
int
fstpt
andl
add
movsl
sbb
sarb
out
addr16
add
xchg
xchg
xchg
xor
ljmp
jb
cli
sub
lods
mov
push
dec
insl
jp
pusha
movb
call
je
gs
or
out
push
mov
xlat
push
dec
int
loope
pop
pop
imul
cld
mov
push
sahf
popa
ja
iret
test
or
xlat
fs
xor
mov
in
iret
push
push
add
out
mov
stos
mov
movsb
enter
cld
add
adc
scas
mov
and
leave
cmp
jae
imul
test
rorb
imulb
lock
out
sub
and
cmp
icebp
fidivrs
emms
lahf
fadd
leave
out
cmp
in
sbb
adc
push
mov
xor
mov
xchg
adc
and
js
xchg
jnp
dec
subb
or
xor
cmpsb
pusha
mov
imul
stos
icebp
movsl
movsl
mov
call
pop
bound
jmp
cmp
pop
outsl
pop
add
aad
sti
lahf
js
les
push
sbb
movsl
insb
jb
repz
push
mov
jae
jmp
and
xchg
cwtl
and
or
push
mov
movsl
popa
aam
pop
jmp
pop
repz
in
scas
mov
loop
dec
test
cltd
sub
lcall
xchg
push
les
adc
repz
sbb
mov
ds
nop
data16
cmpb
loope
jp
push
shl
enter
jge
subl
sub
lret
push
ds
lea
mov
rol
sub
jp
or
fldcw
out
xchg
imul
imul
les
mov
iret
xorl
cmpsb
test
add
xorb
and
fildl
adc
pop
adc
and
and
cmp
dec
jge
in
das
scas
or
std
xchg
sub
push
loopne
mov
jbe
jp
xchg
cmpsl
popa
pop
stos
fistpl
sub
push
js
xor
adc
xor
mov
jae
sar
out
test
add
add
lock
into
cltd
test
dec
adc
adc
mov
jecxz
mul
insl
inc
and
dec
xor
mov
push
cli
push
stos
jno
in
insb
inc
iret
std
iret
lods
jecxz
sbb
push
mov
cli
xor
add
inc
dec
xor
push
or
lret
imul
pop
jl
mov
popa
add
push
xor
cld
fdivs
enter
arpl
jo
mov
andl
aaa
pop
add
dec
pushf
gs
icebp
aad
repnz
outsb
mov
lock
les
inc
mov
rorl
std
jl
aam
repz
jae
dec
mov
mov
movl
inc
sbb
dec
jge
test
lret
movsl
leave
push
repz
in
fisttpll
repnz
cmp
into
shll
xchg
pop
adc
cmc
inc
loop
dec
shrl
jae
outsb
adc
aas
inc
mov
inc
sbb
jecxz
in
sub
xchg
mov
jmp
lds
fidivrs
push
mov
ret
stos
mov
jb
xchg
cmp
fsts
sbbl
popf
adc
imul
rcl
fisttpll
xor
push
je
out
dec
jns
lret
or
xchg
dec
lahf
jg
inc
repnz
in
pop
cmp
xchg
cmpsl
loope
aam
aam
fucomi
arpl
das
sbb
test
stmxcsr
inc
ja
sub
mov
or
cli
in
dec
pop
jb
pusha
sbb
sbb
sub
mov
jb
pop
or
fcomps
mov
ret
leave
in
push
and
fwait
dec
neg
inc
cmpsl
cmp
lods
sub
in
pop
adc
dec
sub
pop
mov
cmpsl
mov
ret
aam
inc
mov
and
fwait
mov
rorl
fwait
xchg
pusha
xchg
mov
clc
cmp
and
clc
imul
adc
pop
jp
popf
jecxz
or
ret
out
mov
dec
fistl
push
ja
push
cmp
scas
and
push
cwtl
cmp
scas
loop
addr16
cmp
adc
mov
add
mov
mov
loope
sbb
pop
gs
in
das
cld
cmc
enter
rcl
xchg
push
stos
inc
jnp
push
mov
push
loop
repnz
xchg
fsubl
mov
sub
xor
sbb
xchg
fstl
fisubrs
jmp
jp
outsb
test
push
jecxz
and
sub
lret
fistl
mov
scas
or
es
dec
sbb
adc
lcall
dec
fs
sahf
sbb
push
or
nop
test
cmpl
inc
pop
pop
pop
sub
or
js
les
or
fidivrl
sbb
sbb
call
int
dec
out
std
inc
pop
into
mov
and
xchg
int3
insl
bound
mov
sbb
mov
in
popa
std
dec
rcrl
test
lods
pop
inc
jmp
mov
and
test
xor
pop
pop
call
imul
loope
or
out
push
ret
mov
cmc
lods
stos
fstps
in
addr16
mov
xor
push
and
mov
sarb
movsl
lcall
in
inc
xor
call
mov
arpl
movsb
int
jns
mov
aad
and
aad
and
not
mov
and
dec
push
or
orl
push
lods
mov
xchg
cmp
js
cmp
lods
cmp
popf
mov
push
pop
mov
arpl
lahf
jp
or
outsb
out
lret
ja
adc
clc
es
mov
shrl
pop
adc
xor
xchg
call
mov
push
and
je
fsubs
movsl
lret
mov
push
xchg
sti
jns
dec
mov
dec
inc
es
cmp
ficoms
sti
sub
mov
pop
dec
das
out
daa
bound
scas
jge
xor
rol
xorl
or
xchg
loop
hlt
dec
popf
cld
das
and
leave
popa
fcomip
push
mov
ret
mov
dec
xor
jns
xchg
scas
xchg
nop
pop
inc
jnp
cmp
and
je
movsb
imul
cld
pop
hlt
andl
clc
sbb
sub
ja
sbb
mov
mov
in
lret
jns
jl
shl
ret
popf
push
sub
xchg
psubd
inc
clc
jg
fidivrl
sbb
xor
pop
or
cltd
movsb
movl
stc
jl
push
inc
fs
xchg
cmp
cs
or
sarb
out
xor
adc
mov
xor
fsts
mov
mov
add
andl
sbb
nop
add
popf
add
xchg
in
dec
cli
jne
pop
xor
mov
cmp
adc
inc
adc
xchg
call
xor
nop
movsb
jnp
lds
iret
push
mov
movsb
aaa
bound
mov
pop
pop
mov
pushf
adc
mov
sbb
mov
adc
adc
insb
mov
pop
pop
enter
jmp
mov
pop
in
mov
mov
sti
test
push
adc
add
jnp
xchg
lcall
test
jmp
sbb
loope
out
hlt
pusha
pop
fsubrl
repz
dec
out
mov
xor
dec
std
mov
out
in
add
sub
inc
jnp
adc
push
mov
sub
imul
xchg
daa
sbb
add
jg
inc
je
add
ja
imul
fwait
mov
add
mov
scas
dec
or
xchg
fcomi
sub
rorl
xlat
mov
xor
xor
popa
int
and
xchg
bound
rclb
outsb
cwtl
mov
lock
jns
out
int
add
lahf
dec
or
repz
outsb
fdivrs
mov
xorl
jne
sub
outsl
ljmp
cmpsl
out
jecxz
jno
in
inc
and
push
push
imul
add
mov
jmp
lods
pop
pop
push
jo
movsb
es
sbb
aaa
ret
sub
popa
testb
cs
sub
cltd
pop
subl
pop
inc
jno
idivl
xor
pop
cli
popa
leave
pusha
aas
push
and
inc
mov
jp
pop
add
cltd
movsl
repz
push
mov
fs
mov
and
pop
sbb
ds
test
mov
push
pop
or
jo
ret
xchg
push
in
push
aas
jne
mov
in
movsb
aad
adc
decl
ds
mov
mov
jnp
fisubrl
mov
je
ss
leave
mov
sti
into
loopne
dec
xor
add
add
and
push
fsubrs
xor
rcrl
test
std
rcrl
xor
fwait
fnstcw
das
push
repz
cmp
jae
xchg
je
pushl
push
scas
push
or
inc
loop
cmpsb
sbb
and
arpl
shl
ja
inc
inc
popf
icebp
sahf
xchg
add
xchg
xchg
std
fldl2e
jbe
add
cltd
push
mov
outsb
mov
in
mov
shll
std
adc
or
dec
lret
cs
mov
mov
cmp
mov
mov
dec
and
int3
mov
je
pop
lds
inc
fcoml
adc
mov
subb
dec
jnp
clc
sbb
int3
pusha
push
jl
je
xchg
cmp
shl
fiadds
cmp
pop
sub
scas
push
add
mov
int
mov
ret
xchg
cmpsb
mov
push
loopne
repz
fisubs
mov
sahf
mov
icebp
or
or
mov
cmpsl
mov
add
faddl
mov
es
outsb
dec
mov
xchg
push
sbb
cmp
test
pusha
cwtl
mov
cld
mov
pop
shll
test
icebp
jae
xchg
dec
xchg
cmp
repnz
jge
pop
jbe
adc
popf
fs
xchg
jp
shl
mull
mov
inc
in
add
pop
insl
mov
jle
scas
mov
lds
jle
test
inc
pop
cwtl
je
sub
inc
jne
mov
pop
fildll
mov
dec
es
dec
xchg
pop
or
jns
or
xchg
daa
hlt
and
sbb
or
push
sub
or
mov
xor
in
in
movsb
mov
stos
repz
sahf
cmpl
outsl
nop
aaa
mov
pushf
hlt
xor
pusha
sub
mov
cmp
push
sbb
int
push
inc
je
loope
aas
ret
aaa
faddl
pop
test
push
add
int3
cmp
mov
or
lock
inc
xchg
mov
sbb
push
cs
mov
and
and
jge
xchg
cs
mov
adc
stc
sub
jp
outsb
or
pop
inc
xchg
push
pop
and
pop
mov
sahf
inc
je
testl
mov
lods
fmull
and
mov
arpl
data16
jb
add
mov
pop
cmp
insl
or
dec
push
cmp
cltd
xlat
add
fwait
mov
pop
pop
and
or
inc
out
enter
test
je
or
fsubl
mov
aad
xlat
pop
dec
pop
mov
pusha
pop
xor
leave
arpl
std
pop
dec
inc
pmaddwd
les
out
insb
lods
cmpl
dec
push
pushf
inc
inc
jno
xchg
scas
ja
add
test
adc
out
jbe
and
fisubrl
xor
adc
fcompp
sbb
sti
xchg
dec
ljmp
push
sub
enter
jne
jno
shrb
data16
lds
sub
sub
mov
xchg
ret
test
pop
xor
in
incb
push
push
fidivrl
xchg
out
movsl
or
pop
decb
test
and
pop
stos
shlb
repz
jns
push
push
pusha
test
pop
xchg
inc
jge
add
mov
into
imul
fstps
xor
cmp
dec
xor
cmp
adc
jmp
mov
sbb
cwtl
ret
mov
mov
jl
outsl
push
cmp
lret
jno
jle
fcomps
fisubrs
mov
mov
cs
std
in
sub
push
fildll
sub
lret
test
rolb
lods
cmp
cmc
adc
repnz
and
addb
xchg
std
cltd
scas
lahf
fucomip
inc
aas
outsl
ljmp
jae
out
dec
fsubrl
hlt
lcall
lods
loopne
mov
inc
or
mov
lock
pop
add
cmp
sbb
adc
and
dec
mov
test
hlt
jb
mov
inc
push
mov
sbb
pop
xchg
jl
std
jle
repz
adc
das
adcl
push
and
jb
push
xchg
xor
ret
bnd
sbb
xor
ficompl
lret
daa
fimull
aam
rorb
jmp
or
out
lret
int3
and
inc
fwait
call
jne
cmpsl
pop
xchg
xor
out
leave
dec
pop
lahf
ljmp
bound
or
icebp
xchg
push
lock
test
inc
or
aam
or
inc
jbe
xlat
xchg
lds
mov
jns
insl
je
loop
inc
adc
cmp
sub
mov
or
cmp
insb
ffreep
shlb
cmc
imul
xor
popa
xor
daa
scas
stos
out
dec
lahf
xor
pop
sbb
cmp
adc
dec
jns
jmp
loopne
mov
pushf
and
outsb
xlat
add
jb
repz
stc
out
data16
inc
cmp
add
insb
inc
push
mov
insl
jae
sbb
dec
outsb
xchg
nop
lock
jmp
xor
pusha
movsl
lods
mov
xchg
push
add
movsb
insl
add
lock
test
jo
out
mov
rorb
inc
jo
xchg
and
xor
imul
test
push
adc
cli
sub
mov
sbb
popa
xchg
mov
pushf
test
idivl
adcb
in
push
cmc
or
gs
push
push
mov
and
xchg
xor
ret
add
mov
scas
ss
push
jge
test
iret
jbe
jnp
loopne
adc
jo
stos
jne
add
insl
sbb
std
xor
mov
fnstcw
repz
and
insl
xor
and
in
in
pop
jbe
cmp
and
cmpsl
jnp
repnz
jbe
adc
push
adc
mov
lret
leave
cwtl
mov
inc
lahf
jne
test
shl
jb
scas
lods
mov
lret
mov
adc
pop
cs
cmp
mov
aam
lahf
lods
mov
xor
dec
insb
push
arpl
push
adc
sbb
lret
scas
test
icebp
inc
adc
mov
test
sbb
xchg
ljmp
icebp
dec
shll
ret
in
and
sahf
pop
pop
fldcw
jae
outsl
outsl
leave
jg
and
lcall
and
dec
insl
jp
ja
sub
in
bound
push
fwait
icebp
sub
mov
jnp
out
jecxz
mov
sbbb
enter
or
enter
jb
fwait
and
xchg
sub
outsb
jecxz
das
inc
data16
nop
inc
dec
adc
int
pusha
lock
nop
pop
xor
mov
mov
subl
or
and
mov
and
dec
jg
mov
xchg
leave
jo
repz
or
mov
jl
lock
int
and
xor
repnz
cmp
outsl
jp
mov
mov
cli
insl
rcrl
inc
mov
pop
cmpsl
ficompl
push
and
mov
lcall
aaa
inc
sahf
test
dec
xlat
adc
dec
push
dec
sub
adc
es
sbb
mov
mov
cmp
mov
fs
xor
fcoms
jne
into
imul
adc
and
push
int3
cmp
inc
push
and
ja
cmp
lret
mov
mov
or
or
adc
pop
jbe
pop
shl
lcall
rolb
adc
xchg
rcrb
and
mov
int3
and
loope
xor
ret
dec
xor
or
jp
inc
mov
pop
lock
rcrb
xlat
jne
fs
mov
dec
cmp
xor
icebp
or
mov
inc
aad
gs
jb
inc
shlb
punpckhbw
jg
adc
xchg
and
out
fs
fcomps
and
repnz
cld
jmp
imul
inc
mov
aas
mov
mov
mov
cltd
or
mov
sti
jmp
pusha
jl
insb
jp
es
mov
adc
shlb
sub
and
add
imul
enter
aam
in
push
or
xor
push
xor
adc
shrb
and
pop
mov
fildll
sub
int
in
arpl
test
cs
dec
xor
adc
mov
cld
cmp
inc
pop
ret
cmp
scas
pop
adc
iret
scas
shlb
cmp
sub
push
mov
arpl
mov
push
aad
pop
xchg
add
cmp
int
ret
insl
mov
movsb
mov
test
rorl
lret
mov
nop
stc
sub
lcall
dec
orl
adcl
push
out
fsubl
dec
fcmovnbe
adc
or
xchg
sub
sub
ret
cmp
test
mov
frstor
outsl
int3
aam
mov
insb
pop
movsl
aas
sub
pop
mov
dec
test
rep
dec
mov
jb
rolb
cwtl
lods
mov
les
and
and
add
add
push
cs
cld
xchg
pop
sub
and
mov
std
lock
add
push
aam
sbb
popa
js
clc
lock
pop
push
scas
leave
andl
pop
sbb
pop
xchg
sbb
cltd
pop
inc
inc
push
push
inc
dec
pop
dec
pop
subb
fcomps
mov
lds
mov
xor
sbb
daa
pop
fistpll
clc
rcr
fisttpl
sbb
jge
fidivs
pop
mov
jp
ds
xchg
sbb
fldenv
xor
add
cmpsb
daa
xchg
and
mov
rorl
add
loope
mov
stos
mov
call
stos
inc
mov
mov
inc
mov
xchg
popf
mov
sbb
test
pushf
or
lods
mov
cmp
pop
adc
adc
sbb
mov
fisttpll
xchg
std
ret
stc
lret
xor
je
dec
sub
test
xchg
cmpsb
ja
sahf
nop
jne
mov
jge
adc
mov
pop
pusha
push
cmp
fs
xchg
ret
psubsb
pop
arpl
dec
jl
or
inc
jp
outsl
push
or
and
push
xor
push
mov
add
fs
xchg
aas
adc
call
adc
cwtl
mov
xchg
loope
mov
mov
hlt
jmp
jmp
and
jle
in
xchg
ret
push
sub
out
xchg
int
sbb
mov
nop
subl
ja
fbld
fs
mov
lret
ret
mov
lcall
sbbb
jne
addr16
xchg
popa
bound
mov
lcall
jae
or
add
int3
xor
repnz
mov
push
fmull
out
jne
sbb
push
xchg
enter
xor
repz
pop
leave
sbb
sub
mov
clc
and
jo
jle
and
sbb
out
jecxz
mov
xorb
xchg
mov
or
mov
mov
or
adc
call
es
sbb
in
movsb
or
or
inc
jl
sub
pop
dec
lds
pop
mov
xchg
sti
jl
mov
mov
mov
test
dec
push
cwtl
lea
out
call
cvtdq2ps
fwait
jbe
in
clc
jne
adc
pop
mov
popf
sar
sbb
jne
cwtl
adc
ret
aas
je
scas
test
mov
test
mov
es
xchg
inc
push
inc
insb
pop
leave
push
jmp
scas
jmp
in
mov
movb
sbb
pop
ja
or
mov
inc
insl
jl
out
jg
cmp
dec
popa
in
sarl
out
test
pop
rcrl
jg
sub
lock
scas
jle
loop
cltd
inc
jle
rol
inc
test
xor
hlt
push
dec
repnz
jnp
lret
test
adc
mov
push
mov
outsb
incb
ret
cmpsl
mov
iret
cmp
pop
movsb
xchg
aaa
jb
jge
xchg
sbbb
dec
sahf
and
outsl
clc
jecxz
lods
daa
push
ret
cmc
mov
ror
push
jg
lret
jge
aas
cmp
insw
pusha
mov
inc
jmp
xlat
ficoms
testb
aas
jae
int3
mov
jnp
jbe
jno
test
or
xchg
sbb
mov
xor
test
add
sbb
test
dec
jg
push
and
jae
mov
mov
fcoms
iret
mov
or
pop
push
fldenv
or
cli
cli
and
sub
and
rclb
and
mov
sahf
cmpsb
dec
mov
sbb
mov
add
out
inc
mov
popf
mov
cltd
icebp
int3
and
sub
pop
mov
and
movsl
pop
in
sub
insl
iret
jb
adc
lret
xor
xchg
add
and
sbb
sub
xchg
aas
mov
sub
or
mov
sbb
dec
xor
lcall
arpl
push
mov
mov
std
xchg
test
out
in
jne
dec
xor
aaa
popa
jge
push
xor
clc
and
pop
mov
test
popa
or
ret
call
aaa
mov
inc
push
mov
mov
add
into
movsb
lds
xchg
add
sbb
aaa
in
xchg
pop
adc
jbe
inc
push
xchg
jl
cmc
fmulp
call
fdivl
sub
or
xor
push
xchg
ror
cmp
push
scas
movsl
fwait
lds
rcr
iret
push
push
mov
lcall
rclb
add
ljmp
dec
leave
dec
lret
sahf
jae
std
jbe
push
adc
mov
aad
mov
pop
mov
out
xchg
xor
xor
stos
cmc
inc
insl
pop
in
repz
inc
xchg
push
jle
xchg
daa
pop
mulb
movsb
ffree
out
pop
mov
push
icebp
flds
aas
push
decb
or
mov
mov
inc
invd
sbb
pop
int3
data16
add
rorb
lods
xchg
xor
add
scas
pop
and
lret
and
ss
adc
or
or
inc
outsb
or
jne
call
les
cmpb
mov
cwtl
xchg
xor
call
and
orl
out
sbb
jecxz
cs
dec
cmp
ss
and
push
xchg
ljmp
sub
std
dec
jle
outsl
std
mov
mov
in
icebp
insb
ret
inc
mov
jo
aad
ja
pop
iret
inc
jne
dec
jae
int3
or
into
jb
add
or
mov
pop
cmpb
jae
loopne
sbb
adc
jae
loope
adc
xchg
fcmove
lcall
mov
jle
arpl
pushf
jnp
mov
jo
mov
sbb
cmp
repz
xor
jle,pt
mov
sar
mov
push
pop
int3
xchg
mov
or
sbb
push
and
fdivrs
mov
inc
jmp
mov
sarl
jge
fistpll
push
nop
jo
out
mov
jo
loope
das
shll
test
test
inc
out
cmp
mov
xchg
mov
xrelease
push
push
rclb
hlt
leave
mov
push
mov
imul
sbb
mov
cs
loop
addr16
sbb
in
jno
mov
sbb
or
xor
adc
fnstsw
xchg
and
cwtl
outsl
cs
add
das
cmp
out
add
add
and
add
nop
insl
enter
sbbl
mov
inc
in
lahf
and
jb
and
push
shr
xchg
idivb
and
daa
cmpsb
hlt
inc
fiadds
nop
xor
inc
divl
xor
push
in
je
push
arpl
adcl
hlt
sub
dec
or
xchg
mov
push
xchg
xchg
sbb
mov
les
mov
sbb
push
ja
mov
lock
xchg
fildl
pop
cmp
les
sahf
std
icebp
mov
lea
cmp
lock
push
out
jmp
pop
pop
icebp
mov
and
rol
bound
test
es
xor
movw
or
das
or
or
into
leave
in
out
sbb
lcall
dec
cmpl
jae
add
mov
seta
xchg
insb
xchg
mov
mov
out
jge
mov
in
loope
arpl
dec
xor
or
in
dec
fldenv
jae
pushf
bnd
adcl
cmp
cmp
dec
cltd
fwait
cmp
outsl
adc
aaa
push
pop
mov
icebp
cs
cmp
movsl
sub
add
out
fmull
push
xor
inc
push
push
sub
push
or
nop
out
imul
movsl
hlt
add
inc
cmc
xorb
xor
push
jmp
aas
aaa
popa
xchg
push
aad
je
stc
push
leave
inc
mov
cmp
shlb
xchg
dec
jge
fdivp
movsl
aam
inc
add
mov
jecxz
jo
xlat
add
push
in
pushf
jno
xor
mov
test
sub
shll
mov
mov
add
add
fst
sub
out
outsl
and
subl
addr16
rcrl
daa
shrb
or
movl
cltd
xor
das
inc
cmpsb
mov
lock
xchg
jb
test
xlat
addr16
cmp
mov
jg
push
cltd
push
imul
dec
and
insb
xlat
mov
or
xlat
inc
movsb
lcall
gs
cltd
mov
pop
jmp
jmp
popa
arpl
jl
pop
lahf
jne
or
stos
adcl
imul
pop
scas
out
arpl
jbe
mov
push
rclb
or
inc
jmp
ret
js
mov
mov
jle
fndisi(8087
imul
push
hlt
xlat
addl
stc
mov
sahf
mov
jbe
js
leave
fildll
mov
test
gs
inc
fld
push
jns
leave
sub
cmpsb
cmc
fidivrl
aaa
sbb
dec
or
push
jecxz
mov
cmc
and
pop
jp
fwait
ret
jl
cmp
out
stc
shrb
jo
sub
repnz
sub
xor
jnp
pop
fwait
or
dec
sbb
pusha
mov
js
int
sub
cltd
add
insl
jmp
out
out
dec
iret
jmp
ja
movsb
pop
or
or
and
lcall
rorb
std
lock
sub
mov
fsubs
inc
adc
xchg
pxor
inc
popf
pop
outsl
stc
std
mov
cmp
mov
sub
in
inc
orb
mov
mov
add
cld
inc
adc
mov
cmp
push
and
aas
mov
popf
mov
mov
cmp
rorl
decl
cmp
cli
adc
lret
dec
mov
mov
lods
add
pop
ret
sti
cmpb
fmulp
mov
imul
xchg
jmp
ja
jle
shll
push
fwait
push
ret
mov
adc
push
loop
xchg
sarb
mov
popf
jp
ss
jae
xor
jecxz
push
xchg
cmc
push
in
mov
sti
cmp
cld
icebp
push
repz
mov
mov
jl
mov
je
cmp
xchg
adc
pop
lea
cmpsl
cmc
clc
jmp
mov
mov
pop
cmp
out
int3
or
pop
cmp
test
and
movsl
jmp
filds
add
ficomps
mov
jae
mov
xchg
addr16
jg
jmp
sub
pop
imul
fcmovne
jne
daa
addr16
test
fisttpl
dec
sub
das
adc
mov
call
mov
xchg
adc
inc
push
out
adc
adc
test
sub
rcll
add
and
in
dec
ret
xchg
pop
jecxz
sti
aam
repz
icebp
adc
aad
out
cmp
out
xchg
lods
cli
loopne
push
jno
lods
out
movb
dec
imul
mov
outsb
xchg
lock
xchg
icebp
and
mov
imul
adc
test
add
and
mov
inc
sbb
lahf
pop
mov
add
out
push
addl
sbb
adc
cmpl
out
xchg
mov
iret
popa
mov
pushl
xchg
stos
dec
jbe
cwtl
sub
jecxz
mov
inc
xor
aaa
out
xchg
imul
aas
pop
or
lret
std
xchg
clc
and
cmp
js
inc
rolb
cmpsb
scas
sbb
movsb
inc
jp
js
cmc
imul
mov
mov
mov
or
or
add
mov
ja
cmpsb
movsl
sub
test
sbb
test
inc
sub
jge
mov
xchg
shlb
ss
pop
in
idivb
jge
ds
pop
ret
adcb
push
stos
cmc
sub
fs
sub
in
xchg
cmp
xchg
and
xor
cmc
out
dec
or
lret
arpl
push
adc
inc
mov
lret
imul
mov
jge
sbb
jbe
lods
sub
mov
dec
push
jge
sub
fnsave
mov
sub
adcb
sbb
mov
loop
push
mov
in
add
pusha
movsl
lahf
jmp
push
cwtl
sbb
xchg
adc
mov
mov
xchg
movq
and
inc
loop
icebp
in
movsb
int3
adc
gs
fnsave
shlb
pop
es
adc
rorl
pop
xor
stc
stc
mov
push
jl
rolb
lods
push
in
je
adc
cmp
loop
adc
or
sti
and
ror
fiadds
lcall
fcomps
dec
and
push
test
and
fcmovb
fwait
cli
cmp
inc
stos
push
enter
js
sbb
xchg
aaa
or
pop
subl
jne
cs
in
fistps
mov
daa
pop
inc
mov
addb
addr16
or
sbb
lods
iret
jbe
into
xadd
mov
mov
xor
jnp
cmp
frstor
fs
inc
shll
iret
jl
pop
das
xchg
adc
sbb
fistpll
pushf
outsl
call
mov
push
or
sub
popa
cmpsl
addr16
mov
push
loope
add
daa
jmp
enter
adc
and
jnp
lahf
jg
fsts
ds
and
or
mov
pop
adc
push
jne
je
into
xorb
popa
push
pop
cmp
jne
sbb
lock
loopne
adc
push
add
stc
idivl
mull
adc
das
cltd
adc
mov
arpl
pusha
fs
repnz
mov
mov
or
dec
andb
out
stos
inc
loope
lcall
pop
cmp
out
push
cmp
clc
mov
xor
icebp
adc
and
add
jns
pop
std
cld
loopne
pop
lea
adc
sarb
rorl
dec
adc
dec
loop,pt
ljmp
mov
xor
inc
mov
cs
lret
in
lods
mov
into
xchg
push
or
mov
push
outsb
sub
fwait
xor
lahf
lcall
xor
mov
cmpsl
jp
jl
sub
es
arpl
mov
mov
out
xor
or
add
jae
ja
xor
mov
push
movsb
mov
shlb
ret
or
inc
les
xor
pop
xlat
cmp
aaa
or
xchg
cmpl
scas
icebp
outsl
in
dec
imul
and
repz
enter
xor
adc
inc
add
es
inc
test
mov
fistpll
pmovmskb
mov
jl
scas
loopne
lock
inc
mov
jne
ljmp
adc
fwait
outsl
out
data16
aad
push
ljmp
jmp
or
es
jmp
mov
fadds
clc
iret
adc
je
daa
lcall
mov
pop
pusha
push
aas
sbb
repz
enter
sahf
stos
ret
movsb
fsubl
push
insl
repz
lahf
sti
pop
rcll
lret
pop
sub
adc
cmpsb
in
cld
xor
pop
ret
fwait
push
and
and
imull
mov
aam
and
push
stos
and
stos
insb
pop
mov
repz
ds
adc
push
jns
leave
mov
shrl
mov
inc
es
arpl
push
cmp
jge
adc
stc
leave
mov
sbb
jg
dec
xchg
es
mov
pop
insl
xor
jg
cld
int3
pop
andl
ret
cs
xchg
adc
aaa
fxch
int
mov
xor
enter
and
out
xchg
cmp
mov
mov
fbstp
les
push
sub
enter
pop
inc
stos
idivl
jmp
inc
test
xor
addr16
xchg
dec
mov
or
mov
dec
ljmp
insb
addr16
fldt
fcomps
xchg
gs
std
xor
insb
jns
insl
les
jae
sub
sar
iret
ljmp
xor
shlb
jae
or
enter
mov
sbb
out
shlb
dec
jb
add
fucomi
or
mov
ja
pop
fs
inc
mov
call
fsubrs
adc
mov
sbb
sub
sti
aam
jno
jo
xor
adc
sub
jno
sti
ljmp
cmpsl
dec
fwait
ss
cmp
inc
popf
inc
push
je
sbb
insb
xor
pop
popa
arpl
sub
movsb
fstps
inc
jb
adc
add
and
add
les
mov
movsl
pop
jo
inc
sbbl
mov
andb
adc
mov
inc
jns
nop
mov
lock
jno
sub
adc
popf
mov
repnz
jl
mov
jbe
and
inc
xorl
xchg
push
ret
inc
push
cmp
pop
adc
in
pop
add
and
mov
mov
pop
mov
scas
movsl
test
fildll
xor
aaa
add
inc
mov
loope
inc
gs
sub
arpl
pop
mov
mov
sarb
outsl
gs
xlat
scas
adc
sbb
inc
and
ds
mov
push
fsincos
sahf
push
mov
std
push
movsb
add
icebp
rcll
cmp
fidivrs
lock
gs
cli
insb
dec
cmp
cld
cmpsb
inc
sub
rclb
mov
sbb
and
int
mov
es
js
cmp
push
popf
imul
int3
movsl
xchg
push
or
pop
sahf
adc
imul
adc
or
faddl
lea
dec
ja
roll
and
sub
cmpsb
fs
aad
push
or
fimuls
and
adc
sub
sbb
icebp
dec
cmpxchg
xor
mov
fwait
push
mov
mov
adc
mov
loop
sub
decl
xrelease
popa
fimull
dec
movl
test
test
push
mov
push
scas
mov
add
out
push
hlt
fnsetpm(287
pop
lret
sbb
outsb
data16
mov
pop
repnz
mov
pop
lods
das
add
in
repz
frstor
das
mov
mov
push
stos
push
inc
push
pop
and
addr16
int
mov
xor
mov
in
cmpsb
jo,pn
rcll
mov
icebp
mov
sub
addr16
inc
jo
outsb
or
test
or
imul
call
cmp
sbb
lahf
jecxz
pushf
cmp
shll
popa
clc
vandps
dec
ss
dec
dec
shll
dec
outsb
push
dec
sbb
out
jl
adc
rcl
mov
adc
and
loope
aas
call
mov
pop
mov
xor
push
lahf
and
fildll
lret
js
ljmp
inc
out
or
incb
imul
adc
xchg
jge
cmpsb
stos
jl
mov
in
cli
and
mov
inc
stc
nop
sbb
in
mov
ja
jae
xor
scas
xor
leave
es
sbb
and
cmpl
pop
cmp
sbb
adc
ja
out
scas
out
mov
test
lcall
js
push
xor
stos
inc
daa
dec
cmp
loopne
or
xlat
lock
sub
cli
xchg
inc
loope
imul
add
mov
out
aaa
sub
fstpt
mov
dec
ja
es
cs
push
mov
inc
out
cmp
test
mov
pop
xlat
jl
mov
push
sub
pop
adc
pop
repnz
mov
mov
sbb
push
in
inc
data16
out
push
cli
call
loope
cmpsl
mov
out
jg
cmp
dec
ljmp
xor
shlb
sbb
in
pop
fldlg2
outsl
std
popf
aam
add
inc
mov
je
inc
pop
dec
push
nop
adc
xor
xor
xor
adc
je
and
inc
test
sbb
mov
add
push
fld
std
inc
mov
mov
outsl
push
dec
mov
push
mov
push
mov
jl
xor
lahf
lods
and
adc
adc
popf
shlb
pop
shlb
mov
es
icebp
ss
push
push
inc
adc
xchg
mov
fsubrs
or
lcall
adc
jge
inc
jb
popf
cmpsl
jecxz
addb
mov
fldenv
leave
or
in
push
repnz
and
mov
int
pop
dec
popa
lods
jnp
xlat
adc
das
bound
jbe
rorl
cmp
repnz
pop
enter
stc
add
jb
ret
loope
mov
test
pop
fdivl
inc
repnz
imul
sar
mov
out
ja
inc
xor
cmp
insl
pop
xor
sbb
outsb
gs
testl
dec
daa
mov
testb
daa
dec
add
cmp
daa
mov
cld
lcall
push
dec
push
and
push
pop
fstps
imulb
dec
cs
inc
icebp
insl
dec
jmp
fbld
idivb
adc
cltd
loope
bound
mov
push
dec
out
xor
jne
cmp
add
int
pushf
or
jo
or
cmp
cli
sub
or
add
ret
imul
or
repz
pop
mov
xchg
testl
lds
or
xor
pop
sbb
sub
test
divb
int
mov
decl
mov
add
jae
pop
pop
sub
cmc
mov
rcrl
test
adc
fsubrs
loope
jnp
mov
and
popa
std
in
ret
inc
jne
out
filds
pandn
mov
fxtract
lret
cmp
cwtl
jecxz
fdivs
int
sbb
cmp
push
sub
cs
aam
clc
dec
insl
sbb
mov
ret
jle
pop
or
add
fadds
dec
cmpb
push
push
loopne
xchg
xor
push
dec
js
mov
lods
fnstenv
xor
sbb
lea
ficoms
and
xor
pop
pop
fmuls
push
dec
mov
and
mov
xlat
and
push
adc
ljmp
push
sbb
mov
mov
aas
push
lods
and
pop
jo
mov
test
and
pop
push
repnz
pop
pusha
xchg
push
mov
jl
inc
pop
push
and
push
mov
addb
pop
popf
jo
inc
lods
push
ljmp
push
test
cmp
inc
aaa
push
add
dec
out
mov
cmpsl
and
dec
mov
mov
sbb
mov
ljmp
xor
xchg
pop
cltd
lret
pop
inc
enter
jle
jmp
jo
mov
mov
sbb
push
mov
pop
cli
imull
xor
cmp
repnz
in
loope
inc
xchg
push
xchg
sti
jecxz
push
inc
sub
mov
add
inc
push
pop
loop
pop
mov
push
and
lret
xor
adc
enter
xor
adc
xchg
in
mov
inc
jecxz
pop
mov
cwtl
mov
dec
pop
jnp
adc
cmp
push
xchg
mov
add
cmp
lret
mov
mov
xchg
push
jmp
mov
into
pop
pushf
cmp
ret
or
jmp
xor
push
jmp
cmc
insb
out
je
adc
mov
das
or
jecxz
insl
mov
push
bound
shlb
mov
movsb
add
insl
mov
pushf
pop
dec
call
jp
enter
mov
in
movsl
xor
cmpsb
or
or
xchg
jecxz
mov
rolb
stos
sub
mov
jne
hlt
lods
sbb
jge
mov
bound
adc
ljmp
outsl
mov
mov
pop
fmuls
mov
aas
sarb
testb
enter
xchg
xor
pop
sub
push
push
mov
loop
mov
jl
xor
add
mov
fnsave
mov
pop
inc
out
cs
mov
lret
push
mov
mov
je
sub
scas
jo
add
repnz
push
cltd
inc
loop
fdivrl
xchg
dec
pop
jp
mov
pop
push
xlat
pop
jno
dec
addr16
xchg
jl
loopne
adc
pop
into
int
in
push
push
push
push
sub
imul
mov
mov
daa
filds
cmpsl
xchg
addl
mov
cmpsb
lock
adcl
jmp
js
shr
lcall
in
and
jns
subb
mov
das
shl
shrb
push
lods
jg
push
xchg
fstps
ret
xor
shlb
adc
mov
out
xchg
lret
sbb
gs
mov
cltd
enter
push
mov
sahf
rcll
movsb
dec
ret
daa
dec
ja
lcall
push
stos
adc
popf
xchg
js
sub
les
lcall
lods
dec
inc
les
lods
hlt
clc
scas
call
sbb
arpl
fldt
je
out
test
mov
rolb
sbb
push
fisttps
push
nop
lahf
jb
ss
sub
or
inc
push
jb
lock
inc
outsl
cld
xchg
xor
pusha
aas
sti
popa
mov
sub
inc
jae
push
ret
add
jns
ret
stos
xor
in
daa
stos
or
sbb
cltd
in
shlb
sub
lahf
push
inc
push
sub
mov
jmp
jp
xor
push
add
fs
fisubs
fmul
adc
lock
or
in
mov
mov
ds
clc
mov
cmp
or
push
pop
pop
aam
mov
gs
sti
mov
outsl
loopne
dec
rcll
push
out
xchg
push
push
mov
pop
mov
cmpsb
addr16
outsb
lods
loope
in
sub
xor
mov
mov
mov
mov
or
jb
insb
pop
push
test
hlt
push
les
cmp
adc
js
aaa
call
daa
push
add
les
sar
sbb
aam
call
mov
rcr
xchg
into
test
adcb
pop
jns
lret
or
xchg
sub
aad
xchg
stos
xchg
jno
push
push
js
pusha
je
mov
test
ret
push
enter
inc
test
jb
or
insb
dec
adc
ljmp
sbb
dec
sahf
fadds
data16
sbb
mov
sar
mov
jmp
jno
mov
lahf
dec
pushf
sbb
lret
adc
mov
inc
mov
loopne
leave
or
or
outsl
xor
mov
and
cld
in
sub
push
sub
sbb
push
push
mov
and
faddp
jnp
cmpsb
lret
sbb
inc
mov
and
mov
push
daa
stc
cmp
cmp
sub
das
mov
pop
idivb
pop
xchg
sti
pushf
daa
mov
inc
push
cmp
pop
lret
jecxz
mov
ja
jecxz
mov
out
mov
jmp
rcrl
dec
sub
in
push
cli
xchg
out
dec
sub
test
aad
fldt
ss
ret
adc
cs
movsb
push
fs
into
and
sub
stos
subb
loope
push
das
fs
inc
xchg
stos
push
test
fsub
push
xchg
jge
lods
pop
and
ja
insb
ret
pusha
test
xor
jo
push
stos
jae
sbb
test
or
xchg
push
mov
test
sahf
insl
ss
repz
nop
fiaddl
in
sub
daa
mov
mov
mov
cmpsl
mov
repz
xor
pop
das
lret
outsl
movsl
fnsave
pop
mov
int3
in
mov
fnstsw
hlt
mov
movsl
xor
mov
sbb
adc
lret
ret
cwtl
mov
add
fadds
cmp
lret
fadd
shrl
mov
adc
out
jae
leave
sub
adc
loop
add
inc
nop
out
push
mov
popf
cmc
add
test
aaa
clc
int3
lret
fmull
aad
dec
cmpsb
push
mov
push
push
aas
sub
and
ljmp
or
mov
leave
sahf
inc
mov
inc
inc
adc
lea
jmp
sbb
mov
push
cmpsb
mov
jb
test
push
jo
dec
mov
pushf
popf
mov
rclb
ds
xchg
dec
div
loope
push
aad
jg
popa
ja
sub
xchg
loopne,pn
out
ret
jne
cltd
xor
cmp
dec
push
jno
push
dec
stos
imul
fmuls
dec
mov
ljmp
push
jns
shlb
fs
inc
fdivs
jl
dec
ret
gs
sbb
ret
jae
arpl
pop
and
add
ret
mov
pop
loop
sub
int3
mov
test
fs
push
and
inc
mov
push
insl
fs
jnp
dec
dec
movsl
xor
xor
add
cmp
movsl
ret
or
movsb
cmp
mov
lcall
leave
cli
mov
dec
ds
lret
scas
in
adc
enter
in
lret
push
xor
push
filds
xchg
cmp
sub
decb
jp
cli
xchg
mov
add
sbb
mov
jne
aas
mov
div
add
adc
cmp
adc
mov
xchg
icebp
sbb
loop
sti
cmp
es
cmp
push
mov
dec
xor
out
shlb
sbb
daa
test
aaa
bound
jnp
mov
xchg
les
das
and
mov
icebp
jmp
xor
ljmp
pop
mov
cmp
out
or
adc
das
lods
scas
popf
cli
add
fsubl
push
icebp
xor
sbb
out
pop
stos
ds
bound
sbb
insb
sub
pusha
pop
sub
inc
int3
std
fwait
repnz
sub
test
orl
stc
push
dec
in
idivb
daa
push
ret
lock
lret
sbb
in
and
cmpsl
nop
push
inc
out
dec
scas
mov
cmpsb
sbb
mov
xor
jp
sub
sbb
mov
mov
push
stos
mov
cs
scas
fidivl
add
jecxz
push
xor
clc
sarl
sbb
cld
cmc
test
mov
pop
outsl
add
or
xor
add
or
test
pop
lock
gs
mov
stos
add
into
pop
in
dec
jp
jo
into
dec
push
cmp
loope
mov
xor
cmp
dec
sbb
test
cmp
lea
cmp
xchg
fs
pop
xor
xchg
call
adc
mov
and
mov
cmc
xor
push
fildl
fnsave
ja
ljmp
mov
sbb
and
or
xchg
jae
imulb
inc
mov
add
sub
cltd
adc
sbb
and
mov
mov
mov
mov
mov
jne
nop
lock
into
fcomps
loope
int
lea
push
adc
shrb
cmc
arpl
cmp
aam
mov
ljmp
push
cmp
and
dec
mov
jne
std
out
es
sub
ret
inc
negb
fldt
xor
mov
movsb
out
sbb
and
xchg
jb
scas
test
jae
in
mov
in
out
push
ljmp
mov
ja
enter
fnstsw
scas
and
ljmp
cltd
jo
mov
mov
sub
pop
jmp
cmpsl
mov
add
and
pop
stc
jo
das
and
out
jnp
xchg
xchg
cs
mov
jbe
dec
add
in
pop
jmp
shll
in
inc
xchg
inc
addr16
scas
cmpsl
and
loop
inc
filds
lods
jae
std
test
pop
je
mov
movsl
popf
ja
or
shlb
xor
cmp
adc
divl
xor
stos
sbb
xchg
je
cmp
add
lods
out
shrb
inc
sbbb
scas
lods
insb
movsb
and
enter
repnz
sub
pop
cld
cmp
mov
shll
ret
cwtl
mov
shl
fwait
or
lock
call
mov
mov
adc
loopne
mov
push
fs
mov
add
xor
stc
out
and
sbb
jnp
movsl
or
push
inc
push
loopne
add
negb
fs
lcall
xor
and
jge
test
xchg
or
mov
das
jle
inc
jb
jg
pop
out
mov
shll
shl
sbb
jbe
ja
fidivrl
ret
fs
pushf
scas
push
sti
mov
sarb
dec
jnp
sub
xchg
fistpll
lcall
imul
aas
stc
or
addl
cmp
lahf
sub
push
bound
mov
push
fimull
notl
cmc
and
sub
in
out
add
mov
push
ret
js
mov
ret
fwait
mov
imul
aam
or
push
mov
inc
xchg
aam
mov
lret
mov
xchg
sti
addr16
fimuls
mov
jp
and
mov
mov
shlb
das
mov
lds
cwtl
movsb
movsb
xchg
insb
cmc
jns
add
out
in
push
jle
pop
lock
pushf
dec
jg
adc
cmp
out
or
sub
insl
push
push
rcrl
mov
mov
cwtl
jnp
fucomi
out
sub
push
dec
loope,pn
add
std
xlat
adc
aam
xchg
mov
pusha
ret
cmp
or
rolb
and
rclb
pop
adc
mov
pop
push
insl
pop
nop
leave
xor
and
shll
xchg
pop
shl
push
push
push
scas
push
es
nop
dec
push
push
cmp
fs
add
sbb
inc
ret
cmpsb
pop
adc
cmpsb
pushf
and
or
xchg
dec
dec
mov
pop
pop
icebp
into
lods
jge
inc
jle
jge
dec
test
jo
mov
sbb
sbb
out
and
push
jp
outsb
push
dec
out
cmp
push
mov
repz
ds
cmp
adc
cmpsb
in
xor
sbb
insl
inc
lret
ror
pop
jno
int
and
pop
or
mov
std
aas
sub
test
jl
movl
fwait
and
ja
out
outsl
mov
cmpl
and
mov
mov
sti
cld
stos
or
dec
lods
jne
shll
xchg
insb
cs
cmp
es
cmp
cmp
mov
arpl
in
cmp
push
gs
mov
jle
sbb
or
sbb
mov
or
cmc
sub
pop
inc
movsb
imul
dec
call
push
push
xor
xor
aad
pop
or
mov
xchg
lret
daa
shlb
cwtl
mov
sbb
jno
lods
jbe
fs
stos
and
mov
mov
mov
subb
mov
pushf
stos
leave
or
clc
pop
das
lahf
pop
lds
and
adc
dec
sbb
push
inc
lods
pop
mov
fisubrl
xor
mov
cli
mov
repz
lock
stos
mov
das
jg
xor
je
iret
pushf
adc
in
jg
sub
ds
rol
mov
andb
int3
loop
addb
aam
mov
jp
sub
add
test
ret
test
push
gs
inc
or
pop
mov
xor
dec
adc
mov
pop
push
aaa
mov
cld
jmp
mov
cmp
outsl
pop
pop
or
out
popf
js
pop
jle
sbb
test
xchg
add
stos
in
xor
jl
push
dec
pop
leave
fsts
lods
in
dec
jge
lcall
and
lcall
pop
scas
fisubs
in
mov
into
idivb
push
cmpsb
icebp
pop
sub
or
pop
pop
push
xor
inc
lret
xor
arpl
and
xor
lock
sbb
or
out
pop
daa
hlt
test
cmpsl
lds
xorb
loopne
clc
mov
inc
rcll
popa
jmp
mov
add
dec
shlb
lods
inc
xchg
cmp
ret
jle
in
idivb
loopne
cmp
add
rcr
cmp
or
mov
neg
arpl
leave
push
push
movsb
aaa
pop
dec
xlat
into
test
mov
jge
pop
jbe
dec
in
adc
jl
adc
xchg
jo
ds
test
repz
inc
jb
mov
and
or
fistl
xchg
into
mov
mov
or
inc
rcrl
cmp
into
or
repnz
into
or
xchg
iret
es
outsb
mov
iret
inc
cmp
enter
outsb
in
clc
mov
adc
fwait
add
cmp
cmp
jl
jnp
mov
leave
pop
insb
pop
add
add
xlat
test
jp
and
scas
inc
dec
bound
call
cmp
popf
pop
xchg
leave
scas
xlat
add
and
lahf
shll
in
scas
mov
mov
add
hlt
mov
add
test
dec
adc
ficoms
sbb
or
mov
jle
sbb
lods
in
stos
outsb
xor
pop
bound
or
scas
add
les
jnp
stos
aas
sti
lods
lret
sbb
mov
hlt
scas
and
and
pop
sbb
add
shrb
sbb
add
and
test
push
adc
sahf
sub
jbe
jnp
bound
insl
leave
inc
sub
mov
fldenv
push
and
sbb
scas
or
add
daa
aad
dec
jg
push
dec
jo
out
js
jo
cs
cmp
pop
sub
cmp
inc
ja
mov
lods
lea
sbb
stos
xchg
dec
sbb
inc
repnz
jg
clc
fisubs
pop
repz
cmc
sub
cmp
xchg
xchg
loop
repnz
leave
mov
fsubrl
and
loope
jge
enter
pop
push
cmpsb
int
movsl
popf
mov
sbb
call
daa
xchg
pop
jno
mull
icebp
call
or
xchg
bound
sti
adc
and
pushf
iret
xor
jp
out
ja
add
push
ds
movsb
test
mov
test
rcrb
not
xor
xor
mov
cmp
outsl
sbb
inc
aaa
jno
cmpsl
hlt
mov
push
lahf
popf
xor
pop
imul
or
repz
adc
test
iret
je
mov
and
lahf
xchg
xchg
mov
or
hlt
pop
stos
jne
push
gs
sbb
inc
scas
push
sub
push
dec
out
jmp
in
in
lcall
enter
jae
push
rcll
dec
xchg
js
sub
cmp
insl
sub
pusha
fcomps
ficoml
loope
imul
lock
adc
popa
sarl
arpl
icebp
add
lea
ss
add
push
adc
aam
pop
add
das
mov
jo
sti
js
dec
outsb
fimull
sub
ljmp
popa
lods
test
adc
repnz
in
bound
adc
into
push
push
inc
mov
adc
daa
xchg
and
cmpsb
mov
aad
adcl
cmp
aas
test
and
data16
jno
xchg
inc
or
push
mov
mov
jns
fst
or
xor
jb
leave
in
xchg
xor
mov
repz
add
call
rolb
jnp
std
test
add
dec
imul
stos
das
shlb
roll
mov
sahf
mov
lods
mov
jne
mov
fdivr
pushf
mov
repnz
xlat
jo
lock
xchg
fdivrl
nop
jnp
nop
sahf
pop
push
mov
rorl
rcl
ds
cmpsb
fwait
testl
lock
pop
lret
pop
fsubp
gs
fucomi
and
ljmp
out
rol
out
add
cmc
call
insb
das
dec
stc
lock
xchg
and
es
cmp
xchg
imul
int
sbb
data16
lods
or
rorl
std
or
scas
out
outsl
int
jp
in
add
jno
pop
lret
pop
xchg
xor
mov
out
test
adc
popa
mov
mov
lods
aas
xor
push
leave
adc
mov
movsl
and
fisubs
mov
mov
lods
cmp
loopne
pop
xlat
cmp
ret
sub
jb
dec
movsl
dec
repnz
adc
mov
sbb
xchg
gs
sbb
js
insl
or
ss
aam
add
xchg
or
jmp
jg
imul
out
cmp
sub
std
les
jmp
push
bound
push
mov
js
inc
cmp
jne
stos
pop
sub
mov
pop
popa
mov
add
lcall
addb
jecxz
cmc
dec
cmp
dec
sbb
imul
inc
fdivrp
cmp
adc
scas
loopne
outsb
xchg
shrl
mov
mov
loope
jl
aas
inc
mov
sarb
or
sub
xor
push
jns
aas
movsl
sbb
fsubl
negl
mov
out
imul
mov
xlat
fistpl
sub
dec
xor
inc
sarb
sub
mov
push
stc
lcall
les
outsl
and
leave
xchg
je
ja
xchg
mov
daa
or
mov
js
inc
jecxz
js
jns
push
ret
fwait
cld
mov
sahf
dec
lock
or
xchg
jge
mulb
add
ror
jo
xor
xchg
les
cmp
je
rcrl
dec
in
cmc
mov
lock
loopne
mov
dec
jno
roll
fidivs
jae
dec
outsb
push
add
idivl
sbb
mov
dec
dec
in
cld
jae
or
cli
add
mov
mov
fnstenv
mov
sbb
xor
push
pop
jb
mov
push
mov
push
cmp
data16
aam
inc
ljmp
enter
into
lahf
in
psrlw
xchg
lods
lods
int
sahf
lods
xchg
dec
xchg
arpl
sarl
or
push
inc
jmp
mov
mov
pop
rorl
ret
loop
xlat
divl
cmp
dec
push
dec
cwtl
mov
pop
mov
xchg
push
loopne
enter
mov
int3
sbb
sti
cwtl
lret
rorl
adc
sbb
cmp
popa
sbb
dec
mov
div
or
pop
or
mov
mov
push
test
or
adc
in
int
or
repnz
imul
jne
ss
inc
sub
inc
pop
movb
inc
stos
rcr
cmp
mov
fbld
or
fisttpl
mov
fiadds
cmpsb
mov
leave
lea
add
mov
shll
incl
xchg
pop
xor
fisttpl
pop
add
inc
out
jnp
and
lds
cmp
sub
fisubrs
roll
jne
add
push
sar
cmp
dec
fistps
aaa
lcall
xchg
sbb
add
out
aas
mov
stos
adc
xchg
insb
push
ljmp
dec
rclb
bound
cmp
popf
and
xchg
hlt
test
add
xchg
xor
push
cli
jno
add
xchg
xor
jp
mov
insl
fmul
dec
xorl
push
jne
int
jl
pop
push
mov
and
int
xor
imull
popa
aam
ja
popf
mov
cld
lret
mov
dec
inc
xchg
fsts
addr16
cmc
sahf
stc
insb
add
jo
jne
pop
sub
or
jb
push
dec
jmp
inc
cmp
mov
xchg
mov
and
lea
inc
push
sbb
pop
push
cmp
sbb
cmp
xlat
pop
js
jnp
adc
enter
mov
adc
cwtl
in
pop
sbb
in
ljmp
pop
or
das
mov
in
jle
mov
dec
stos
cmp
xchg
push
es
or
repnz
mov
cmp
popf
cmp
jge
inc
mov
push
sbbb
popf
sbb
xacquire
mov
lahf
call
add
jp
data16
jbe
pushf
dec
cmpsb
cmpsb
pop
jl
dec
pusha
pusha
mov
push
loop
push
bnd
into
mov
mov
mov
mov
insb
jbe
cmc
lret
test
push
mov
mov
adc
movl
mov
mov
adc
dec
ljmp
push
lret
jns
outsb
mov
jle
jmp
loope
cwtl
test
xchg
or
bound
and
adc
lds
sbbl
xor
mov
mul
shll
xor
loope
lahf
pop
sbb
push
mov
mov
data16
std
xchg
call
test
sub
repz
cmp
popf
stos
int
call
ret
xor
imul
jo
cmp
push
cld
aas
sbb
rol
in
lret
jo
mov
shr
rcrl
pop
push
int3
pop
inc
out
nop
cmpsb
es
inc
pop
cmpsb
jge
out
dec
adc
jnp
cmp
test
pop
lret
fidivl
inc
scas
stc
pop
mulb
cmp
xor
pop
sub
sbb
adc
fimull
lods
fmuls
or
dec
daa
std
aaa
inc
push
cmp
out
cmp
jbe
pop
sbb
cmpsb
push
push
in
out
jno
in
mov
sbb
dec
sar
or
lods
pusha
movsb
push
mov
shlb
dec
cmpsb
jecxz
lret
pop
add
dec
push
popf
loopne
mov
cmp
and
xor
shlb
int
shrb
cli
push
mov
pop
stc
xchg
push
ja
nop
pop
xchg
out
jl
and
push
mov
fsubrs
popf
subl
cld
cmpsl
rol
jbe
adc
xlat
mov
sbb
adc
loop
fiaddl
lock
xchg
andb
pop
aas
push
inc
fimuls
jb
out
jno
sub
in
xor
mov
outsb
test
mov
add
repz
in
xor
pop
sahf
xor
push
xchg
xor
lea
loop
dec
popf
mov
sbb
sbb
cs
mov
imul
push
jle
sub
sbb
lret
test
imul
and
addl
xchg
ds
int3
mov
dec
adc
xchg
popw
inc
imull
sbb
sbb
lock
xchg
fdivrl
ds
add
mov
das
ret
aas
ret
inc
out
lds
popa
int
rorb
xor
pop
mov
int
xor
inc
jbe
cmp
outsl
pushf
stos
mov
fwait
loope
adc
ss
out
xor
cmp
pop
insb
ljmp
mov
sub
and
dec
cmp
cld
icebp
dec
movzbl
lcall
jl
push
lcall
or
mov
pop
mov
xchg
aad
add
xchg
stos
arpl
pusha
xor
sbb
andb
pop
mov
cmp
cmc
push
lret
and
cs
cs
fcmovu
cmpsl
sahf
add
cmp
adc
push
mov
fcoml
lock
pop
nop
push
sbb
xchg
xor
test
inc
push
and
lea
jnp
mov
mov
jno
adc
and
adc
xchg
mov
pop
gs
fldl
jg
lds
stos
loop
arpl
xchg
pop
pop
outsb
xor
mov
jnp
or
insl
mov
inc
stos
cmpsb
push
sub
je
movl
mov
cmp
mov
cmp
sub
lcall
xchg
test
fistpll
adc
lods
rcll
in
test
mov
out
ljmp
fldl
pop
push
mov
insb
dec
sub
jae
dec
mov
cwtl
adc
int3
xor
push
scas
mov
jl
cmp
popf
inc
xor
xor
je,pn
or
mov
lcall
jnp
cmpl
jle
mov
xchg
cld
shl
mov
cmp
jnp
xor
stc
or
stos
ret
cli
sub
add
pop
sub
and
scas
xchg
int
jl
outsl
mov
mov
roll
adc
push
sbb
jnp
rcrl
and
popl
push
iret
jmp
es
aad
test
loope
add
pop
loopne
les
inc
loop
pop
leave
mov
sbb
cli
gs
aam
inc
adc
sub
ret
cmp
out
outsl
aad
cmpb
pop
movb
iret
add
ror
ljmp
mov
push
sbbb
adc
sub
and
movsl
popa
dec
xchg
mov
mov
add
jno
pop
popa
add
aaa
ficoms
push
insl
xchg
jge
and
int3
push
inc
xchg
mov
cmp
aas
cmc
cs
mov
jb
aad
fs
outsl
lds
mov
push
sub
out
jl
daa
add
cmpsl
push
mov
cli
jmp
sahf
int
push
mov
stos
push
sbb
mov
pop
ret
hlt
fdiv
and
js
lds
pop
fcmovb
je
bound
out
ljmp
push
and
xor
cmp
jle
push
push
pop
mov
xor
loop
mov
sbb
das
dec
xchg
pop
or
adc
cs
movsl
xchg
mov
clc
mov
fldcw
pop
lods
shll
jbe
int
les
jo
cmp
pop
div
outsl
sub
in
sbb
ss
std
add
mov
sbb
lods
cwtl
xor
xchg
xor
pop
hlt
add
sahf
cmp
jne
add
push
inc
arpl
pop
xor
jp
mov
dec
fld
std
test
fidivs
jecxz
scas
or
mov
sbb
call
add
lahf
mov
fiadds
lcall
push
jae
in
stos
or
das
jne
or
add
push
adc
pop
vucomiss
sbb
es
inc
cmp
mov
nop
cmp
shrl
mov
ds
ljmp
popa
push
aaa
outsb
add
mov
jnp
ljmp
outsb
pop
les
enter
lret
jae
or
mov
pop
sub
ljmp
sub
stos
cmp
sbb
mov
out
into
in
out
xor
adcl
test
or
pusha
int
mov
pop
sub
test
lret
stc
pop
mov
popf
rol
ljmp
xchg
movsb
mov
lods
repnz
imul
adc
jnp
fsub
jl
pop
mov
sub
dec
add
lret
in
mov
pop
push
sub
pop
or
dec
xor
xor
sub
rol
sbb
xor
cltd
lcall
sub
imul
cmp
pop
mov
imul
sbb
mov
mov
shll
lods
repnz
adc
mov
add
outsl
and
jne
adcl
cltd
js
xchg
jb
pop
cmc
xlat
mov
pop
mov
rolb
out
ja
aad
jp
in
dec
shrl
out
push
or
adc
xor
mov
mov
sbb
or
aas
add
mov
pop
outsb
add
fsincos
hlt
scas
push
push
push
ret
cmp
daa
xor
xor
rorb
xchg
sar
xchg
push
sbb
cmp
mov
int
fisttpl
js
inc
sahf
or
cltd
pop
or
xor
add
sub
movsb
js
imul
aaa
in
inc
mov
adc
jge
in
sub
xlat
xchg
scas
adcb
ja
pop
xor
in
mov
fiadds
lea
sub
adc
push
clc
sub
ss
or
xchg
sub
jno
scas
imul
test
sahf
sar
mov
jo
mov
cmpsl
popl
ds
jbe
xchg
xchg
call
pop
and
mov
cmp
in
stos
mov
push
popf
inc
mov
jecxz
test
sub
loope
loop
adc
rcll
das
mov
js
or
sub
fiaddl
inc
xor
cmc
push
je
sub
mov
cmpsl
pop
dec
shr
arpl
push
int3
xchg
inc
add
mov
mov
pop
call
push
data16
push
or
rcrb
sub
cmp
fdivrl
adcl
push
inc
rcrb
sahf
jmp
xor
int
xchg
mov
and
inc
ds
add
mov
mov
bound
stos
rcrb
fisubs
aad
push
sti
scas
xchg
aaa
sbb
movsb
add
jno
push
sub
mov
fldt
stc
lods
ljmp
adc
pop
lcall
test
insl
dec
xchg
sbb
mov
mov
push
roll
aas
mov
sbb
mov
push
cmpsb
es
incl
cmp
fwait
mov
fiaddl
pop
lret
push
pop
clc
into
fldenv
imul
les
mov
lcall
int3
dec
pop
and
cmp
xlat
mov
in
rorb
lahf
ljmp
cmpl
mov
sete
test
sbb
xchg
icebp
mov
scas
dec
pop
out
lret
sbb
adc
sbb
cmp
mov
mov
dec
out
fcmovbe
lea
sub
scas
sti
mov
dec
sbb
push
push
outsl
out
fmuls
js
sbb
xorb
imul
je
nop
pop
stc
xchg
fcoms
add
scas
jle
lds
adc
adc
xor
mov
loope
dec
test
inc
adc
mov
dec
dec
add
popl
push
clc
aam
call
popa
add
xchg
in
adc
insb
daa
out
call
mov
or
in
and
xchg
xchg
sbb
cmp
sbb
mov
and
xchg
call
mov
cmpsl
mov
in
lock
mov
pushf
cmpl
aad
xchg
push
daa
orb
repz
in
fidivl
je
xor
or
inc
stos
dec
outsb
nop
xor
dec
outsb
push
xchg
les
sbb
mov
add
lahf
and
hlt
mov
pop
mov
dec
xchg
push
dec
xchg
test
pop
pop
popa
cli
cmp
pusha
pop
jnp
stc
lcall
mov
repz
cltd
cld
stos
and
sarl
or
push
fidivl
sub
fdivrs
sbb
es
test
and
pop
xchg
add
mov
adc
clc
aad
cmc
push
frstor
and
xchg
jmp
lret
icebp
out
adc
divb
add
adc
pop
shl
push
out
pushf
mov
fistpll
stos
inc
fiaddl
orb
scas
jle
pop
push
int
call
pop
inc
ja
addr16
xor
dec
flds
ja
and
popa
inc
xor
pop
sbb
xor
sbb
jge
in
push
repnz
push
adc
cmpsb
mov
and
in
lods
sub
dec
enter
data16
mov
inc
sub
and
xor
ficomps
clc
subb
add
mov
sub
add
inc
enter
in
ss
xchg
add
imul
sub
int3
arpl
pop
ficoml
fcomp
push
es
cld
pushf
pushf
mov
pop
aam
cmp
dec
xchg
pushl
push
lret
or
jo
popa
fnstenv
int3
dec
push
lahf
cmpsb
dec
fnstenv
ja,pt
je
adc
sbb
lcall
pop
stc
loop
push
jmp
jmp
daa
sub
adc
das
mov
jae
fcoms
inc
rorl
pop
popa
sbb
in
loopne
es
je
ret
mov
cmc
jl
push
inc
js
xchg
leave
mov
push
pusha
jmp
faddp
cmp
mov
mov
je
sbb
fwait
mov
push
jl
jno
adc
iret
xchg
fs
mov
shlb
in
ds
and
adc
lcall
clc
dec
or
jae
adc
and
leave
sarl
sarl
ret
test
in
addr16
xchg
xchg
mov
jo
call
stc
jo
or
repnz
xchg
xchg
fdivl
ljmp
test
aam
jb
in
pusha
xchg
mov
inc
cltd
xchg
fcoms
mov
add
dec
sbb
push
addr16
sub
aam
stos
adc
icebp
pop
xchg
lods
stc
into
out
dec
adc
dec
cmpsl
movsl
clc
and
cmp
repz
pop
jge
ret
cmp
mov
pop
lret
pop
movsl
dec
adc
jbe
in
or
aas
inc
daa
mov
pop
pop
cmp
fnstenv
push
cmp
fimull
cld
sbb
mov
subl
nop
adc
sarb
sbbl
cs
mov
jno
jns
arpl
jmp
cmpsl
into
jmp
xor
jmp
lods
inc
add
adc
add
sahf
sbb
loopne,pn
imul
clc
sub
repnz
inc
aas
les
fisttps
push
push
push
ljmp
xchg
fdivs
scas
iret
out
mov
fcmovnbe
imul
mov
sub
sarb
shrl
aaa
testb
nop
push
or
imul
pop
decl
fildll
adc
cltd
fwait
mov
daa
test
mov
adcb
out
bound
lods
aaa
xlat
xchg
inc
mov
std
dec
pop
in
ljmp
push
and
adc
adc
fstl
ds
xor
xchg
jnp
mov
insl
ss
push
mov
mov
adc
ds
roll
adc
popa
adc
jl
lods
xor
cmpsb
pop
popa
mov
push
sbb
aad
mov
add
or
lret
or
jae
push
add
push
xchg
inc
xchg
pop
sbb
loopne
pop
or
push
out
mov
jbe
repz
iret
push
mov
dec
push
adc
nop
ficompl
xor
fwait
nop
mov
xchg
cmc
imul
inc
icebp
scas
sahf
inc
pop
xor
rcr
push
push
in
pop
cmpsl
pop
shll
popf
sub
push
or
mov
xchg
mov
hlt
xor
andl
xchg
cmp
icebp
or
mov
or
push
mov
rcr
aad
sarl
in
sbb
lods
test
push
and
and
sub
sbb
test
mov
int3
stos
fistl
sub
shrl
fs
bound
jne
inc
mov
mov
out
insl
push
jb
pop
cmp
ret
inc
cmpsb
adc
fsts
lret
loop
jg
aaa
movsl
mov
rcrl
inc
imul
daa
cmp
or
lods
mov
sbb
in
mov
iret
pop
cmp
jg
cmp
test
es
arpl
add
das
mov
xor
or
or
jge
nop
push
in
ds
sub
lock
lods
ret
jecxz
test
xchg
jbe
pusha
jmp
lock
stc
dec
repnz
fdivrl
lret
xor
lea
cld
fucomp
pop
or
lcall
fcoms
pop
scas
lock
inc
fisttpll
in
sub
rol
jmp
test
stc
ret
xchg
arpl
mov
and
jno
mov
in
shrl
imul
jp
outsl
inc
jge
push
sub
stos
out
paddq
adc
call
call
bound
int
fwait
ds
xchg
rcrb
xchg
jle
cmc
and
cmc
lock
arpl
jno
andl
cmp
cmpb
into
out
push
adc
mov
mov
adc
fadd
imul
dec
pop
pusha
in
clc
repz
movsb
out
xor
std
mov
je
push
jbe
xchg
ljmp
dec
enter
and
addb
pop
imul
add
js
ds
iret
sub
rolb
adc
adc
out
jne
add
mov
mov
or
mov
insl
popa
dec
movq
ret
lahf
jo
mov
pop
repnz
push
xchg
push
mov
lds
dec
jp
mov
mov
es
mov
and
cmp
dec
mov
lea
fdivrs
popa
dec
or
mov
test
jnp
arpl
insl
jo
pop
add
arpl
fstps
flds
xchg
iret
out
mov
inc
xchg
xchg
test
cld
pop
xchg
jnp
sbb
jecxz
flds
cmpsl
in
mov
mov
les
mov
xorb
adc
cmp
sahf
cmpb
mov
lret
sbbb
stos
xchg
jnp
bound
lret
int3
dec
orl
mov
cmp
scas
dec
xlat
pop
adc
in
es
nop
push
jbe
adc
xchg
test
push
enter
or
mov
std
insb
inc
js
xor
mov
fdivrl
or
in
sub
add
mov
decl
sti
inc
pop
cmpsl
jns
mov
add
inc
add
jns
jno
jno
mov
inc
cmp
cmpsb
push
mov
daa
sbb
mov
xor
push
sub
stos
push
out
mov
fisubl
xor
jne
loopne
idivl
pop
jb
fiaddl
jmp
into
popa
ss
xor
lahf
out
dec
out
add
dec
and
sbb
cli
aaa
divl
icebp
popa
lods
push
movsl
push
sub
xchg
xor
push
inc
add
cmp
inc
pop
hlt
jo
insb
stc
mov
mov
mov
sbb
popf
adc
orb
lret
idiv
testb
loopne
mov
cmpsb
js
or
jp
jbe
ss
mov
paddd
mov
xchg
jbe
adc
jo
testb
dec
call
mov
dec
pushf
je
push
push
sbb
js
popa
xor
popf
add
lahf
outsb
sbbl
out
pop
outsb
add
addr16
pushf
mov
xchg
in
cmp
cmp
xchg
hlt
pop
xchg
arpl
rcll
out
push
cli
in
sub
mov
lea
jae
clc
stc
hlt
jns
pop
xor
pop
cmp
jg
ds
push
push
or
cwtl
and
lret
xor
pushf
pop
jge
jae
pcmpeqb
cmp
mov
gs
aas
ret
or
pop
mov
xchg
lcall
mov
int
or
push
lods
adc
jg
aaa
rolb
cmp
fiaddl
push
pushf
dec
push
aam
jnp
push
xor
cmp
or
es
stos
cmp
arpl
mov
aam
sub
and
hlt
xlat
xchg
js
hlt
or
and
stos
fcoms
mov
or
adcb
push
insl
jns
sti
jo
adc
and
add
push
cmpsb
fucom
mov
cmp
jne
faddl
jne
dec
fists
cltd
fldcw
sbb
enter
lock
xchg
lods
movsl
test
and
leave
xchg
dec
sahf
mov
shrl
pushf
das
inc
cltd
addr16
jp
cmp
bound
pop
jecxz
xchg
pop
cmpsb
fists
sbb
lods
xchg
cs
sub
ja
cmp
mov
pop
jl
push
call
fiaddl
mov
jmp
fdivs
mov
lds
or
lds
xchg
imul
sahf
push
lock
ret
dec
or
push
jno
cmp
push
jo
or
or
pop
xor
adc
pop
jo
outsl
xlat
xchg
js
mov
or
mov
xchg
jb
add
shrb
out
mov
sub
es
dec
movsl
push
pop
cmp
xchg
and
daa
adc
inc
mov
cli
cmp
dec
pop
pop
mov
or
daa
ja
jae
sbb
scas
adc
add
add
jns
push
sbb
xchg
cli
nop
pop
bound
outsb
pop
xor
sbb
mov
bound
sub
mov
lahf
dec
push
jmp
inc
mov
jb
jmp
rorl
dec
or
pop
cwtl
idiv
shrb
mov
mov
gs
cld
mov
dec
sahf
stc
xchg
and
pop
stos
neg
cmp
ret
into
lods
outsb
push
push
ljmp
push
in
movsb
xor
dec
ret
pop
push
jns
or
ds
push
jbe
cmpsb
xchg
pop
arpl
imul
mov
mov
lret
dec
adc
dec
das
lods
sub
jge
mov
sarb
mov
xlat
inc
jmp
sbb
clc
inc
aam
mov
in
push
or
pop
push
add
into
push
dec
in
xor
lret
push
pop
inc
jge
lds
sub
or
push
cld
cmp
cmp
xor
inc
insl
mov
pop
scas
ret
test
xchg
popf
dec
and
adc
cld
imul
xor
sbb
enter
insb
shll
or
pop
jmp
mov
xchg
out
push
sarl
push
das
hlt
xor
and
xchg
jnp
fisttps
mov
negb
movb
xchg
pop
call
xor
loopne
pop
jne
icebp
insl
xchg
xchg
jp
mov
push
and
imul
adc
adc
sub
jnp
movsl
shlb
push
adc
push
loope
insl
add
mov
jae
pop
jae
mov
jg
adc
aad
add
mov
bound
adc
adc
repnz
outsl
push
cmp
adc
cli
test
mov
int
cmp
mov
rcrl
mov
xchg
pop
aaa
sbb
bound
fs
les
pusha
jp
jb
jmp
xor
sub
jmp
or
sub
or
and
adc
mov
enter
jno
fs
scas
fwait
test
mov
test
lea
lods
mov
ret
mov
mov
push
imul
pushf
ljmp
dec
inc
out
sbb
sti
adc
add
and
xor
mov
mov
insl
lods
mov
cmp
sbb
adc
rcrb
lahf
iret
popf
dec
shrl
mov
adc
adc
cmp
pop
push
inc
xor
jne
push
dec
push
loopnew
inc
rolb
dec
sbb
jnp
mov
in
adc
xorl
fs
adcb
rcrl
ret
mov
out
lds
fistl
mov
mov
std
adc
sahf
jp
movsl
adc
cmp
dec
sbb
or
out
dec
fwait
into
xchg
bound
popf
push
ss
push
fucom
jbe
repz
adc
repz
out
fmul
sub
in
pop
cmpsb
dec
rep
inc
xchg
fs
inc
add
mov
dec
xor
lcall
add
shlb
add
push
js
fistpll
lods
popf
dec
cmp
dec
sbb
fbld
stc
outsl
push
mov
shll
jecxz
js
adc
jle
mov
daa
jb
adc
fistl
pusha
pop
enter
cmp
or
aad
mov
test
ljmp
stos
lret
mov
cmpsl
push
sbb
aas
insl
pop
daa
pop
bound
sbb
xor
cld
adcl
and
cmpsl
push
cmp
iret
gs
test
in
and
push
ds
sub
push
ret
pop
test
int3
sub
xchg
fs
mov
je
xchg
aad
push
mov
stc
ret
bound
int
adc
repnz
sbb
adc
rolb
jne
mov
jge
daa
shr
pusha
adc
dec
stc
mov
sbb
fidivs
test
dec
jecxz
lea
sub
dec
fcompl
mov
daa
adc
sbb
xchg
stos
adcl
mov
sbb
aaa
lret
lcall
imull
lahf
jmp
mov
flds
or
js
xchg
jno
inc
es
outsl
stos
adc
xchg
xlat
pop
in
inc
add
movsl
mov
repz
inc
and
push
test
aaa
push
sbb
mov
sub
mov
pop
pop
cmpb
out
inc
jno
pop
aaa
jmp
jmp
jle
ja
xchg
ljmp
lahf
add
inc
arpl
jge
fnstcw
in
push
dec
test
aam
rorb
xchg
fwait
mov
outsb
push
outsl
lcall
lret
inc
negb
jne
lods
lret
mov
stc
mov
imul
les
movsb
fnstenv
inc
aaa
dec
jbe
adc
fldenv
mov
sbb
add
pop
es
and
inc
dec
sbbb
insb
test
roll
cmp
mov
pusha
push
push
and
and
arpl
rcr
mov
ja
out
addb
stos
ss
inc
pop
dec
add
xchg
insl
stos
dec
les
dec
out
cmp
icebp
fs
lret
mov
sub
mov
test
lret
sbb
inc
sub
inc
jnp
call
out
mov
push
stc
es
insb
into
movsl
or
test
add
das
mov
movsl
cmc
outsb
cmp
cmp
cld
adc
xchg
pop
mov
ljmp
and
push
mov
xchg
inc
sbbl
loopne
xchg
mov
mov
das
aad
cmp
adc
dec
cli
inc
sub
or
mov
pop
sub
out
and
aaa
mov
addr16
es
jns
stos
clc
les
dec
cmp
and
pop
push
loopne
inc
addr16
aas
push
cmc
push
xchg
mov
jg
cli
lock
ficoml
sub
movb
imul
test
jne
cmpsl
xchg
pop
dec
cld
pop
hlt
sbb
notl
arpl
jae
loop
cmp
loop
loopne
sub
push
inc
mov
sub
in
dec
xor
sbb
add
adc
xchg
push
aas
test
stc
push
test
cld
mov
inc
cld
dec
xchg
pop
sbb
decb
jmp
sbb
cltd
test
loopne
notb
aam
mov
mov
in
js
popa
xlat
push
push
int3
lock
fiaddl
xor
dec
and
dec
xor
or
inc
daa
sub
rclb
clc
pop
xor
arpl
or
pop
pop
mov
and
mov
pop
push
mov
clc
dec
nop
add
repz
push
xor
cmc
test
fs
jmp
fwait
insb
xchg
cmpb
pop
or
repnz
aaa
int3
pop
cmp
or
es
adc
dec
lods
jmp
mov
xor
test
sbb
dec
mov
out
fs
push
dec
nop
loopne
and
sub
push
fsubrp
inc
mov
mov
popl
or
jne
mov
xchg
lcall
icebp
or
ds
ljmp
sbb
iret
ljmp
or
and
mov
sti
inc
imul
cs
inc
inc
cmp
shll
negb
push
sbb
enter
fildll
aad
ret
not
xchg
out
movsl
scas
push
divl
add
sti
xchg
cmp
lock
push
jge
mov
push
out
mov
sbb
jnp
ficompl
push
test
inc
mov
data16
sbb
xor
xchg
loop
lock
mov
in
cmp
xchg
pushaw
inc
adc
mov
mov
fists
lods
adc
mov
dec
rolb
sub
adc
idivb
jecxz
add
inc
test
fistpll
pop
psubusb
outsl
xor
leave
jno
icebp
sub
jno
adc
or
movsl
jbe
push
fld
push
pop
sbb
roll
aaa
sti
sarb
mov
pop
data16
mov
in
fimull
mov
cld
gs
cli
xchg
ror
xor
and
xchg
cs
mov
mov
cmc
fwait
and
ret
add
imull
gs
fsubl
dec
std
sub
xchg
mov
aas
push
aam
leave
pop
adc
cmp
rclb
lret
insl
repz
push
lret
cmc
pop
or
add
fisubs
cwtl
aam
mov
xor
nop
cmpsl
dec
mov
lcall
mov
adc
push
cmp
popa
xor
adcl
sbbb
push
and
jae
xor
jo
mov
and
adc
ret
mov
xchg
repz
push
das
add
adc
push
or
int
inc
js
add
sbb
push
xor
inc
xor
stos
addr16
pop
sbb
cmpsl
pop
roll
push
xchg
mov
stos
daa
iret
jae
out
movsl
dec
cs
test
inc
out
pop
inc
call
imul
xor
mov
dec
jo
jbe
mov
dec
loope
mov
test
adc
jae
aas
jp
adc
fldcw
jno
jns
jmp
mov
leave
mov
shlb
adc
roll
ror
repz
insl
or
cs
lea
inc
xchg
sbb
sub
mov
adc
push
jo
hlt
and
sub
loop
lahf
dec
dec
inc
dec
leave
mov
ss
cmp
loopne
pushl
imul
or
movsl
mov
ljmp
insl
scas
fstl
movsl
inc
outsb
ja
mov
xor
push
xor
push
xorb
mov
test
pop
addb
xchg
add
test
movsl
pause
cmp
mov
lret
ret
rcrl
push
sbb
sbb
movsb
adc
test
pop
mov
dec
mov
and
pop
mov
gs
xchg
pop
rorb
mov
mov
mov
inc
cmpb
test
imul
shll
iret
xchg
es
jne
mov
stos
ret
and
cli
addr16
or
mov
into
xor
roll
add
xor
nop
jbe
in
loopne
mov
iret
sub
adc
mov
jno
js
repz
xlat
ljmp
mov
nop
cli
sub
sbb
mov
and
jg
and
or
xor
stos
mov
sbb
sbb
out
sti
cmp
push
insl
pop
iret
dec
jecxz
mov
mov
xchg
ret
outsb
cld
insb
outsb
adc
fnstsw
rcrb
pop
xor
in
xor
jae
sbb
es
insl
xor
test
pop
mov
push
add
mov
jge
aaa
mov
jle
sub
and
movsl
push
pop
negb
jno
cmc
punpcklwd
dec
inc
adcb
mov
pop
adc
cmpsl
mov
imul
lcall
sub
mov
pop
aad
pop
std
lea
add
rcrb
dec
pop
lret
enter
test
jmp
cmp
cld
adc
jl
jnp
jp
int
pop
shl
cmpsl
cmp
mov
cmp
adc
or
icebp
or
add
loopne
pop
jnp
push
movsl
ljmp
js
subl
pop
or
rorb
iret
xchg
pop
or
mov
mov
call
cwtl
cmpl
cli
cli
jae
lcall
adc
cmp
pop
loop
mov
cli
test
and
push
dec
test
mov
cli
in
lret
push
test
fs
lret
subb
adc
mov
gs
insb
icebp
enter
and
lods
pop
xchg
jb
xchg
fldpi
push
xchg
cmc
xor
roll
aad
ljmp
dec
xor
sar
sbbl
iret
xlat
jle
adc
fisttpl
or
lods
fs
int
mov
stos
xchg
mov
sub
dec
faddl
popa
pop
jg
mov
leave
mov
jno
xor
lock
mov
adc
cltd
adc
dec
mov
es
jge
notb
cmp
push
insl
or
xchg
jg
in
jg
outsb
mul
scas
rorb
push
push
xlat
sbb
cltd
pop
xchg
movsl
fwait
into
loope
lock
cs
push
or
jne
dec
in
rcl
mov
add
and
out
sbb
cmc
incl
sub
push
js
out
push
xchg
dec
test
imul
clc
adc
xchg
xchg
data16
or
adc
fisubs
icebp
loop
lock
sub
xchg
stos
je
push
cmp
jno
xchg
fadds
jmp
xlat
and
cltd
popa
sub
inc
movsb
lods
insb
int3
mov
lahf
adc
xor
lahf
mov
ljmp
cmp
hlt
cltd
jnp
push
icebp
sbb
jmpw
mov
sub
arpl
sub
fdivl
jl
push
jmp
pop
bound
jb
inc
mov
test
jecxz
push
outsl
pop
data16
mov
mov
test
xor
stos
and
loopne
add
cwtl
jo
push
outsl
sub
xchg
and
cmpsb
lahf
xor
jecxz
in
and
jecxz
mov
in
xor
lret
and
xorl
fwait
xchg
jae
jge
arpl
add
cli
push
pop
mov
je
mov
push
stos
mov
cmp
cwtl
mov
aaa
sbb
xchg
inc
cmp
imul
mov
ficomps
out
and
mov
lahf
mov
mov
jle
in
aam
scas
gs
xor
or
or
push
in
mov
sbb
outsb
push
lds
or
push
push
add
jg
loope
xchg
pop
ja
data16
sub
hlt
aam
mov
mov
inc
ficoml
test
mov
push
lret
cmp
mov
lods
mov
mov
inc
rcrb
xor
cmp
popa
aas
in
jno
outsb
cli
or
sbb
repz
sbbb
lret
imul
jns,pt
jge
dec
push
scas
cli
fwait
inc
xor
cmp
cmp
in
pusha
mov
mov
pop
and
fdiv
test
mov
enter
adc
lods
xor
stos
sbb
xchg
inc
add
jecxz
out
lock
adc
or
dec
lods
rolb
stos
push
stos
push
pop
lds
adc
fwait
add
repnz
add
insl
fsts
mov
pop
aam
and
std
js
cmp
mov
xchg
fidivl
cmp
xchg
add
fidivrl
call
push
inc
mov
pusha
shll
push
lea
push
adc
cmpsb
outsl
out
lea
movsb
data16
push
mov
gs
xorl
loopne
pop
and
aad
cmp
fisubl
sbb
push
add
inc
leave
icebp
inc
mov
leave
xchg
mov
scas
mov
enter
and
rcl
out
jg
mov
les
test
dec
add
xchg
cwtl
andl
rcrb
mov
and
or
sub
add
push
inc
push
push
aad
in
dec
add
insl
aas
fmuls
push
test
ljmp
sbb
jbe
or
cltd
lods
xchg
adc
pop
mov
sbb
lahf
test
jmp
fcompl
jmp
mov
sub
cmove
or
adc
jecxz
shrb
adc
rcrl
decl
or
mov
cmp
in
sub
mov
cmc
data16
stos
lret
mov
in
or
jg
jns
push
pop
cmp
push
fisttps
xor
shll
jle
mov
stos
rcrb
daa
xor
dec
pop
aas
jb
inc
shlb
push
add
mov
flds
jbe
or
ja
scas
lcall
cmp
es
cmp
lret
mov
or
cli
jns
push
movsb
arpl
adc
test
pop
ja
inc
mov
es
faddl
lcall
sub
inc
jne
jmp
xchg
and
leave
push
mov
lcall
sub
sbb
xchg
inc
sub
pop
shl
negb
fcomps
xchg
inc
inc
popa
adc
xor
js
adc
sub
push
xchg
inc
les
fcomi
inc
and
test
imul
stc
cli
and
dec
push
fildl
inc
ja
inc
mov
inc
ss
adc
pop
shl
rolb
or
fldt
loope
daa
clc
iret
or
dec
cli
mov
in
push
mov
dec
pop
mov
test
fs
stos
mov
sub
xchg
push
or
xor
in
insb
lods
enter
mov
or
push
inc
mov
sub
in
push
pop
cmp
icebp
fwait
xchg
in
repz
and
xor
mov
into
sub
jmp
insb
mov
add
test
cwtl
addl
pop
fisttpl
fwait
inc
fldcw
or
lock
cmp
adc
mov
cmpsb
and
fcmove
shrb
push
xchg
xchg
in
sbb
sbb
inc
in
and
hlt
aas
aaa
add
dec
je
mov
adc
out
cltd
enter
cmp
sarb
stos
inc
pop
mov
mov
les
dec
int3
pop
mov
dec
pop
andb
aad
xchg
jmp
mov
sub
xchg
sub
xchg
xor
negl
cwtl
cmp
out
out
or
shll
in
mov
je
divb
mov
ret
or
ret
mov
add
push
cmp
lds
xor
mov
push
ret
pusha
adc
out
dec
mov
mov
les
fisubrl
inc
out
jo
push
adc
jae
call
incb
cmpsl
aad
lds
add
rcr
add
std
repz
mov
mov
inc
bnd
pop
pop
jno
test
leave
js
rcrl
mov
xor
xor
aas
jecxz
pop
and
js
mov
cmc
mov
insb
jno
popl
cmc
in
mov
jecxz
push
sbb
imulb
cmp
ret
cltd
pcmpeqw
jecxz
fdivrs
mov
cld
pop
and
xchg
divl
xchg
movsl
push
leave
loope
inc
fcmovbe
and
and
ljmp
jae
inc
cmp
sbb
cmc
sub
push
adc
and
sub
pusha
jbe
inc
jg
scas
test
adcb
mov
ss
outsb
jl
les
jb
mov
and
mov
mov
int3
push
adc
rcll
sub
pop
xchg
mov
add
stc
jnp
sub
dec
mov
xor
xchg
mov
test
popa
loop
xchg
stos
and
jns
and
jnp
scas
fldcw
decb
pop
inc
je
mov
add
insl
stos
push
jecxz
repnz
clc
sbb
mov
in
cmpsl
adcl
mov
lods
jno
pusha
in
imul
mov
imul
clc
add
and
cmp
fnstenv
rolb
ret
jg
sbb
jge
xchg
ficoms
enter
das
xchg
rclb
js
adc
lret
adc
cs
cmc
inc
mov
int
push
call
aad
and
ret
mov
movsl
pop
aam
cmc
decl
xor
sti
or
ret
mov
pop
jmp
les
clc
mov
out
dec
jge
mov
inc
push
mov
and
mov
mov
leave
call
insl
lret
pop
data16
ljmp
outsl
in
jl
test
nopl
and
in
dec
mov
test
sbb
inc
sbb
shll
xor
outsl
cmpsb
inc
movsb
ja
out
rorb
xor
mov
sbb
daa
inc
adc
or
push
or
add
fiaddl
xor
pcmpgtd
xor
cmp
mov
clc
xchg
call
mov
jge
sar
loope
and
movsb
add
mov
int3
jmp
in
pusha
dec
cs
std
outsl
je
mov
jmp
push
push
repnz
jns
sbb
mov
sub
xchg
out
jne
jle
xor
dec
pmaxub
or
cwtl
leave
mov
or
in
jb
scas
mov
movsl
push
aad
dec
pop
xor
cld
cltd
adc
mov
inc
cmp
outsl
push
mov
dec
dec
in
js
or
scas
xchg
cltd
je
int3
sbb
or
xor
push
xchg
push
jle
adc
int3
jmp
sahf
or
popa
jae
xchg
lods
bound
dec
arpl
scas
inc
xor
ret
add
jb
lock
push
add
mov
fidivrl
add
jnp
push
cli
sbb
sbb
inc
sbbb
push
test
and
flds
pop
add
or
cmp
lods
outsl
and
fimull
ja
cmpl
out
cmp
xchg
adc
es
aas
adc
in
pop
loop
inc
out
xor
negl
in
call
jae
xor
xchg
sbbb
inc
gs
cld
adc
inc
cmp
jnp
insb
mov
test
inc
mov
cs
mov
push
adc
xchg
pop
sbb
repz
negl
pushf
ds
inc
mov
add
mov
sub
and
aas
inc
pop
pop
imul
xchg
ss
jle
shll
outsl
dec
jns
cli
scas
cmpsl
jno
fcoml
xchg
fst
xchg
sbb
ret
les
and
leave
xchg
add
sahf
pop
fmul
ficomps
addr16
sub
lock
nop
je
jnp
jmp
cltd
call
add
xor
or
add
test
pop
outsb
inc
fwait
aam
mov
mov
negb
ljmp
sarl
cld
mov
int3
xor
ljmp
jp
popf
mov
out
add
mov
sbb
xchg
adc
cltd
jg
mov
and
dec
es
jo
outsb
iret
and
inc
repnz
fmull
cltd
lods
dec
xchg
or
lods
stos
cmp
iret
cmp
cmc
je
stos
adc
pop
icebp
dec
enter
xchg
cmp
mov
fidivs
out
pop
pusha
push
lea
jecxz
mov
lods
cmp
movsb
pop
test
xor
sbb
sub
xchg
adc
adcb
imul
lret
xchg
or
lock
dec
adc
imul
dec
add
inc
in
in
inc
in
sbb
jne
ss
mov
cmp
aas
xlat
mov
mov
mov
les
mov
dec
sub
pop
sbb
adc
push
shll
mov
or
fdiv
mov
je
and
push
jmp
andl
push
cmp
push
sarb
jo
int3
pop
loop
push
loopne
inc
cmp
subb
iret
jl
lods
nop
cmp
test
or
enter
push
add
ja
dec
pusha
stos
inc
xchg
fcmovu
sub
adc
cmp
cli
jmp
mov
push
pop
and
jo
imul
sar
jnp
aad
inc
addr16
pop
mov
mov
pusha
stc
pop
lea
stos
pop
dec
fdivr
mov
fsubl
dec
sbb
or
pop
push
clc
movsb
push
push
dec
mov
aad
lods
inc
jbe
mov
ret
xchg
mov
out
cltd
xchg
mov
xchg
jp
mov
xchg
sbb
xbegin
test
cli
test
popf
xlat
outsl
js
push
inc
loopne
sub
mov
ror
inc
nop
inc
aaa
mov
outsl
call
xor
call
aam
sub
jmp
je
mov
sbb
xchg
jno
jmp
or
mov
and
fs
push
xor
insb
ret
fucomi
pop
scas
lea
cld
scas
sub
push
imul
cmp
mov
fmul
pop
jmp
sub
lds
mov
jno
incb
cld
cs
jg
dec
jmp
jl
loopne
mov
sbb
push
ficoms
push
pop
sub
aad
push
jp
pop
ds
mov
idivl
loop
jmp
insb
xlat
dec
fidivrl
jecxz
int
out
add
dec
jp
or
ret
out
mov
pop
ficoml
sbb
pop
in
cmc
enter
jmp
mov
add
aad
sbb
test
sbb
hlt
fsubs
push
in
cmp
sbb
xchg
lods
mov
inc
mov
imul
test
push
adcb
in
sbb
out
dec
lret
int3
and
ret
sbb
insb
sbb
icebp
or
bnd
cmp
pushf
jle
je
pop
xor
scas
insl
repnz
iret
xchg
sahf
jg
inc
addr16
aas
das
arpl
call
pop
dec
pop
outsb
outsb
movsb
lahf
pop
dec
lret
and
jne
jne
push
add
dec
int3
add
int3
out
shll
roll
xchg
jge
das
fcomip
push
nop
movsl
shll
bound
xchg
std
sbb
shrl
pop
xchg
push
ja
in
jmp
xlat
mov
pop
dec
sub
mov
cmp
gs
and
test
lcall
mov
out
cs
aaa
fwait
xchg
mov
or
imul
dec
in
push
ss
xor
insl
add
repnz
or
dec
jecxz
int3
mov
fnstcw
inc
dec
adc
lods
sbb
xchg
out
inc
adc
rclb
ja
hlt
mov
push
hlt
aad
push
out
es
nop
mov
mov
icebp
inc
and
pop
cmp
mov
jmp
xchg
fcomi
jbe
xchg
dec
lret
in
sti
iret
pop
ficompl
xchg
add
in
cld
push
dec
dec
mov
jl
inc
adc
cmc
sub
xchg
jmp
vmovshdup
int
in
movsl
and
xchg
aaa
inc
fs
mov
int3
cmpl
dec
mov
cmc
dec
dec
or
dec
or
push
sub
mov
cwtl
cli
shr
push
xlat
adc
les
pop
or
fwait
in
mov
sub
cmpsb
lods
in
js
jo
cmpsl
into
mov
sub
stos
adc
dec
fwait
sbb
inc
pop
setb
adc
mov
mov
xchg
addr16
jbe
mov
loope
orb
and
cmp
xchg
inc
repz
dec
inc
es
js
adc
pop
or
stos
in
call
imul
ficomps
testl
aad
adc
aas
cwtl
push
movsb
or
mov
shlb
fdivrl
std
scas
sbb
sbb
mov
loope
or
xchg
pop
jg
mov
out
push
pusha
mov
cld
pop
mov
adc
cmp
dec
or
jecxz
jnp
inc
mov
data16
adc
sub
cmp
push
sbb
in
int
sub
int3
mov
pop
out
fst
fstp
or
xorl
sbb
mov
mov
or
cmpsl
out
xchg
or
in
out
mov
mov
xor
int3
and
adc
sbb
pop
fucomi
add
ss
outsb
shlb
xchg
int
inc
mov
clc
std
in
rcll
lods
fidivl
pop
push
movb
sahf
push
jle
sbb
push
cli
or
push
dec
stos
and
enter
gs
add
loope
cmp
adc
aam
cmp
repz
repz
lret
dec
repnz
cmc
mov
scas
lcall
sub
cmpsl
xchg
int3
in
loopne
mov
nop
mov
inc
insb
stos
jg
xor
fiadds
movsb
repz
cvtps2pd
clc
mov
mov
dec
adc
push
leave
jo
lock
jne
stos
mov
andb
xchg
inc
cmpsb
pop
in
xor
insl
inc
test
lahf
lods
sub
jbe
cli
rolb
in
test
pusha
int
or
xchg
lcall
in
mov
or
lret
and
dec
in
fistpll
imul
dec
sbb
adc
dec
xor
ror
xchg
loope
jge
cmc
xchg
jno
outsb
jb
aas
xor
pushf
out
fs
or
fists
ljmp
cmp
fsubs
inc
dec
cmp
xchg
jmp
push
test
pop
xor
fidivs
or
mov
movsb
xchg
mov
xlat
ret
ret
pop
movsl
xor
stos
dec
or
xor
mov
push
adc
lods
jge
mov
in
xchg
nop
shlb
pop
enter
sub
pop
loopne
and
aaa
xchg
movsl
testl
test
shlb
jnp
or
ljmp
and
inc
bound
pop
mov
divb
adc
outsb
adcl
inc
pop
pop
sub
fs
sub
inc
data16
pop
dec
sbb
ret
pop
mov
sub
jge
sbb
xor
mov
lods
mov
inc
mov
cltd
imul
sub
mov
or
push
jbe
push
mov
into
xor
dec
cmpsb
das
xchg
fsubr
add
jg
inc
jbe
mov
in
sbb
sub
xchg
mov
imull
out
dec
pop
sarl
out
push
jg
mov
jg
orb
orl
or
bound
push
dec
rcll
xor
jge
mov
movsl
jb
or
xor
jne
xchg
push
cltd
jbe
jo
mov
sbbb
repnz
add
or
ljmp
cmpsl
sbb
dec
movsb
in
xchg
or
pop
in
mov
xor
punpckhwd
ret
movsl
mov
cli
inc
inc
pop
sub
dec
subl
jle
stos
jg
push
std
xor
pop
loopne
loopne
or
leave
sbb
dec
fistpl
scas
lret
es
cs
rcr
or
ret
push
test
pop
mov
pop
pop
fstl
mov
xor
faddl
cld
push
mov
xor
cmpsb
cmc
jnp
fs
in
mov
jnp
pop
jno
es
int
lret
dec
fincstp
push
cmp
hlt
pop
jl
int3
outsl
sti
cmp
and
and
mov
push
scas
and
fs
imul
mov
bound
mov
mov
pop
xchg
push
jae
add
cli
fstpl
mov
mov
or
jle
xor
shlb
cmp
xchg
outsb
addl
mov
lret
jo
int3
cltd
adc
test
adc
pop
mov
ficomps
fcoml
mov
bound
sahf
pop
imull
movsb
push
iret
pop
ss
lds
mov
mov
cmp
cmp
mov
leave
jp
mov
xor
test
xor
mov
inc
jg
test
mov
jne
or
mov
and
adc
jle
lcall
cmc
push
cwtl
push
dec
insl
push
cmpsb
cmpsb
addr16
fwait
leave
cli
add
cmp
cmp
mov
in
push
xchg
mov
xlat
cld
stc
cs
int
or
movsl
lahf
cld
ret
in
mov
or
jbe
insb
or
jbe
jmp
lea
out
add
lock
mov
bnd
movb
sahf
dec
fs
mov
lds
mov
movsl
cs
cmp
outsb
lods
adc
xchg
mov
xchg
js
pop
mov
loop
xor
inc
shlb
or
jp
mov
adc
loopne
xchg
mov
jnp
add
mov
sbb
movsb
push
jno
push
test
sub
ja
nop
sub
in
jns
mov
xor
jbe
sar
cmp
jne
inc
daa
je
mov
sbb
xchg
rcrb
xchg
inc
fdivs
test
aam
mov
clc
cmp
arpl
not
cs
fcmovne
addr16
xor
mov
mov
in
inc
mov
mov
add
mov
lods
sbb
rcrb
or
xor
bound
cmp
sub
sub
out
test
mov
rclb
fldcw
iret
mov
mov
xchg
ds
mov
cmp
das
popf
dec
push
movsl
cltd
fs
mov
shrb
lcall
mull
xchg
sub
subb
shlb
push
pop
sbb
adc
mov
scas
cmp
popf
dec
adc
pop
lock
jo
xchg
fdivrl
pop
iret
cmp
pop
xchg
mov
inc
jl
inc
cmp
sbb
ss
jo
stos
xor
pop
mov
mov
rcrl
add
in
sub
mov
mov
inc
pop
enter
pop
nop
iret
and
scas
jb
jnp
out
inc
dec
xchg
rcrb
or
popf
adc
sahf
cmp
mov
loop
js
dec
hlt
popa
dec
int3
arpl
mov
sub
sub
fcompl
int3
lret
push
pop
cs
sbbl
ss
sub
push
push
fcoms
ljmp
xorl
leave
out
jae
in
xor
adc
push
scas
dec
imul
lea
and
aaa
or
push
leave
and
es
xchg
inc
jb
xor
mov
adc
sub
insl
mov
testl
jmp
cwtl
or
pop
inc
add
inc
or
sub
stos
mov
rcrb
jge
test
sub
ss
or
adc
int
lock
fcoml
cmp
xchg
dec
bound
push
into
push
int3
mov
andb
fiadds
rol
ret
or
cmp
or
push
call
add
sbb
add
cwtl
mov
into
or
stc
andb
push
in
std
hlt
mul
pushf
jae
sbb
xchg
mov
add
xchg
iret
or
cs
clc
mov
ja
sbb
push
imul
add
mov
stc
push
dec
mov
xchg
decb
scas
or
les
xchg
mov
jg
mov
sub
dec
xchg
or
or
mov
mov
jne
inc
insl
xor
sub
or
pop
cmpsl
nop
clc
cmp
arpl
mov
push
xchg
mov
test
les
mov
xchg
cld
mov
mov
in
in
test
xlat
add
mov
cli
negb
in
xchg
sbb
xor
iret
gs
icebp
xor
push
in
or
jg
pushf
push
std
sub
nop
xlat
inc
xchg
cmp
push
in
cltd
cwtl
push
pop
or
cmp
jecxz
dec
lock
stos
rclb
adc
cmpsb
dec
out
xchg
sbb
rorb
xor
mov
out
pop
cli
cmp
adc
mov
xchg
ret
sbb
lea
mov
pop
fs
movsb
lds
jg
aad
push
jns
dec
test
adc
cmp
test
mov
or
pop
lock
pop
outsl
adc
in
push
mov
mov
repz
mov
fs
lock
mov
shll
or
jns
lcall
mov
fwait
xor
sub
cmp
and
fcoms
sbb
ja
test
adc
sbb
lock
jno
mov
lcall
fwait
aas
andl
jb
jne
nop
ret
cmc
std
scas
test
notl
inc
in
jg
dec
out
sub
jo
sbb
shlb
pop
cmpsl
and
inc
push
addr16
lds
dec
test
add
lods
ss
inc
mov
imul
repz
nop
in
push
mov
push
pop
ja
mov
inc
andl
pop
int
shlb
test
push
sub
lret
add
dec
sub
mov
addr16
shll
adc
push
repnz
jl
cmp
les
scas
movsb
xchg
scas
fwait
jns
shl
xchg
mov
xchg
out
hlt
loope
pop
cmpsl
mov
push
ss
sub
and
imul
and
sahf
mov
std
sbb
int
sub
ret
mov
negb
xchg
or
mov
inc
ljmp
sbb
cmpsl
lock
mov
and
xor
add
cmc
addr16
lds
arpl
mov
lret
mov
adc
push
mov
lods
add
stc
or
ljmp
jmp
pop
fsubs
dec
leave
sbb
pop
fstl
add
arpl
stc
subb
add
out
lret
daa
inc
mov
test
push
data16
addl
add
adc
cmp
hlt
jne
ljmp
cmc
cmc
cmc
mov
iret
inc
dec
cmc
sbb
test
and
neg
mov
push
fisubs
leave
roll
push
pop
and
jbe
mov
push
jl
cmp
jno
jmp
sbb
xchg
sti
movsb
lock
adc
push
jne
inc
sub
movsl
dec
int
sub
cmpsb
outsl
lret
mov
in
popf
rcrl
push
xchg
sbb
pop
je
mov
in
sbb
inc
and
or
and
stos
out
push
jbe
shrl
roll
sub
test
and
pop
lea
mov
ret
and
sbbb
cmp
push
mov
cli
pop
push
mov
es
out
call
xchg
nop
in
and
pop
jl
and
add
pushf
or
into
hlt
test
fimuls
add
inc
xchg
cmp
movsb
lods
pop
pop
sbb
lcall
iret
shl
test
or
sarb
loope
jecxz
dec
sbb
in
out
imul
ja
and
or
sbb
cli
nop
shl
adc
insl
hlt
mov
sbb
cwtl
out
clc
cld
xchg
test
mov
test
lods
mov
xchg
jle
in
roll
add
add
aaa
cmc
mov
in
fwait
push
insl
mov
mov
cmc
notl
mov
push
jl
incl
aam
sub
jle
in
or
fxch
fiaddl
mov
dec
in
push
lods
pop
aaa
std
es
mov
aam
xchg
inc
sub
jl
sbb
pop
cmp
lea
xchg
push
mov
int3
add
sbb
cmp
insb
imulb
fcmovu
jle
add
je
fucompp
stos
sahf
cwtl
mov
sbb
pop
sub
mov
shll
push
mov
cltd
sub
gs
sub
roll
lcall
cmp
ret
dec
sti
stos
xchg
push
popa
scas
out
inc
mov
lds
loop
mov
aaa
adc
xor
push
lret
pusha
cmpb
add
inc
jbe
add
fwait
out
shrl
push
pop
inc
pop
jg
in
hlt
mov
imul
dec
cmpsb
mov
lret
mov
cmp
std
mov
and
and
movsl
in
sti
push
hlt
push
cmc
cmpsb
arpl
or
pop
pop
shr
inc
jp
je
dec
icebp
add
pushf
sub
mov
and
mov
xor
in
push
scas
push
xlat
dec
xor
ja
cmp
jmp
cli
mov
dec
divb
dec
inc
pop
push
mov
push
nopl
inc
add
lret
loopne
not
adc
jle
dec
or
mov
fnstcw
sahf
movsl
iret
or
pop
pop
xor
and
jp
dec
sbb
or
sub
mov
mov
jne
mov
dec
jmp
dec
lds
xor
push
jecxz
cmp
mov
sub
add
jbe
inc
mov
fsub
mov
lret
cmpsl
bound
ja
arpl
sbb
cmp
int3
in
addl
cli
lock
sbb
lahf
lock
and
data16
int3
mov
xchg
mov
fnstcw
cmp
stos
inc
adc
nopl
jb
xchg
sti
mov
lock
add
adc
sbb
push
inc
or
test
and
insb
adcb
aad
shr
mov
loop
xchg
jb
pop
pusha
sarl
mulb
jb
xchg
mov
jo
mov
icebp
mov
pop
cmp
das
cmpsl
inc
pop
cli
aad
push
in
stc
out
cs
mov
popa
jge
stos
mov
adc
popa
cmc
popa
popa
pop
mov
sti
dec
idivl
sarl
lret
lods
xor
adc
ss
xchg
xlat
loop
shll
out
stc
xor
pusha
push
dec
rorb
shrl
out
sub
push
mov
mov
push
adc
fimull
je
leave
testl
movsb
sbb
or
lock
dec
pop
lret
sbb
cmpsb
pushf
jg
push
ret
orl
call
sahf
inc
sbb
sub
inc
xor
mov
mov
inc
negb
mov
insb
rorb
and
mov
lret
sahf
cmpl
lcall
mov
xor
iret
jge
mov
mov
add
jg
aam
arpl
push
addr16
js
push
adc
xorl
cld
push
shlb
push
lods
xor
imul
xchg
inc
dec
lret
movsl
xchg
insl
cmp
pusha
js
pop
push
sub
sub
outsl
divb
sbb
lcall
stos
or
int
pop
sbb
push
fildl
cmpsl
push
outsb
inc
scas
mov
lahf
das
cmp
push
dec
scas
test
andb
bound
add
jnp
cmp
and
mov
xchg
aad
inc
jo
cs
dec
imul
sahf
fcmovnu
sub
mov
mov
les
fs
lods
ljmp
mov
xchg
cmp
pop
inc
dec
sub
mov
rcr
out
jae
xor
sbb
jns
dec
jmp
leave
insb
es
cltd
nop
inc
in
in
shll
in
jl
dec
cmp
dec
repnz
xor
adc
adc
sarl
or
movsl
fwait
clc
loope
jmp
dec
fwait
and
les
jle
and
mov
xchg
mov
xchg
sbb
mov
test
clc
rolb
or
ret
les
in
xor
leave
add
das
rorb
cld
xor
jbe
imul
mov
pop
stos
dec
mov
test
mov
lcall
mov
cld
mov
stos
jns
pusha
inc
inc
inc
dec
outsb
mov
inc
mov
xchg
jge
mov
mov
out
iret
push
arpl
bound
and
int3
arpl
xor
mov
mov
je
mov
add
insl
fildll
mov
clc
or
into
and
outsb
test
dec
iret
xor
xor
mov
mov
mov
pop
jb
push
popl
leave
xchg
in
push
mov
sbb
popf
lea
mov
and
push
push
or
mov
mov
outsb
and
xorl
imul
leave
subb
add
push
loopne
pop
and
cli
xor
inc
dec
xchg
sbb
out
fmull
in
xor
pushf
or
ficoml
out
fs
pop
mov
cltd
adc
or
cmp
enter
je
call
data16
inc
mov
cmc
stos
mov
in
div
lahf
fdivrp
fs
cmp
and
lcall
daa
aas
push
ljmp
pop
mov
pop
lret
jp
sub
aaa
sahf
push
mov
or
pop
data16
or
aad
dec
pushf
add
cmpsl
std
push
dec
insl
xchg
dec
arpl
cs
dec
mov
out
and
sub
inc
jle
mov
xchg
cld
in
xor
sub
add
in
addr16
and
and
ret
jle
rcll
ret
je
mov
test
daa
mov
push
mov
setbe
or
movsb
cmp
popa
mov
push
pop
xchg
push
add
dec
aas
repnz
mov
push
jecxz
dec
adc
sbb
cmp
sarb
insb
scas
sti
js
mov
call
lahf
mov
out
das
cwtl
lcall
inc
mov
xchg
mov
aad
fdivrl
js
fistpl
sahf
jle
pop
push
cs
movsb
lretw
andl
jecxz
jb
sahf
jmp
test
jmp
mov
pop
test
out
lahf
push
outsb
fcoml
adcb
stos
fmuls
pop
mov
adc
and
mov
data16
pop
fdivrs
inc
je
cmpb
inc
push
xor
mov
repnz
out
arpl
mov
into
dec
push
out
cmp
test
adc
push
jae
pop
adc
sti
faddl
das
adc
outsl
mov
push
mov
inc
inc
std
or
scas
pusha
fidivs
cwtl
inc
jns
stc
loope
cwtl
and
push
arpl
in
inc
mov
imul
in
mov
je
mov
into
xlat
cli
shll
jge
mov
cmp
lock
cmp
pop
cli
mov
cmc
mov
jo
insl
lods
cmpsl
lods
lahf
jns
in
addr16
add
inc
mov
adc
shll
sbb
cmpl
inc
loopne
xlat
in
or
out
je
sbb
jge
sbb
sbb
addr16
cmp
mov
xchg
mov
movsl
add
xchg
insl
jl
lods
mov
ds
lods
xchg
mov
mov
das
cmpsb
inc
mov
or
cmpsb
push
mov
pop
fcmovbe
sahf
stos
jnp
sub
mov
nop
aas
and
popf
mov
jle
push
pop
insb
and
loope
stc
sub
inc
sub
sub
mov
inc
pop
jg
ror
sub
pushf
push
pop
push
and
adc
mul
stos
mov
jle
fstl
dec
outsl
mov
and
fimuls
mov
andb
sbb
lret
movsl
push
mov
testl
xchg
sub
andb
aaa
adcl
inc
and
rorl
in
xchg
nop
in
and
gs
push
push
pushl
cld
movsl
loope
pop
ret
ret
sbb
jle
jp
in
adc
cmp
xchg
add
lock
xor
inc
xlat
ret
scas
pop
orl
add
push
rcr
adc
dec
inc
jle
inc
mov
addr16
mov
arpl
xchg
cmpsl
rcl
shll
add
test
out
outsb
and
dec
incl
xor
pop
sbb
add
xor
jnp
or
adc
lock
cmp
xchg
and
or
fcoms
push
jg
test
fs
test
inc
mov
in
inc
es
imul
mov
sbb
pop
shlb
and
inc
mov
iret
sbb
mov
push
or
or
sbb
mov
or
and
add
cwtl
test
and
fcmovnbe
aas
neg
in
mov
scas
fs
mov
les
xchg
cmp
pop
bound
lret
aad
xor
cmpsl
sub
jns
arpl
subl
sub
pop
mov
popl
push
jmp
and
inc
push
inc
mov
adc
in
cs
xor
xorb
pop
insl
adc
jae
out
sahf
mov
adc
jecxz
int
push
cli
dec
orb
pop
fst
insb
js
adc
cld
ffree
je
stc
fldcw
addr16
rolb
adc
out
shlb
and
add
pop
enter
dec
fsts
ljmp
cmc
in
std
cmp
mov
pop
rol
mov
sahf
inc
push
inc
pop
inc
xchg
imul
push
test
fmul
push
lods
and
jecxz
pop
or
xor
mov
mov
or
js
adc
cmp
dec
ss
shl
subb
inc
sbb
scas
jg
out
das
or
scas
add
push
cmc
pop
fildll
flds
push
sbb
loope
add
outsl
and
inc
xchg
imul
imul
pop
pop
jp
or
scas
ljmp
pop
cwtl
mov
inc
mov
lret
leave
les
xchg
add
test
sbb
push
rcrb
cmp
fnstcw
std
push
ljmp
mov
jno
loop
mov
xor
push
inc
lds
rolb
imull
fdivs
ds
aad
mov
insl
aaa
jl
lahf
sbb
mov
repz
xchg
mov
cs
mov
insl
in
pop
das
add
in
jle
das
jp
fldl
outsl
sub
les
push
test
ja
xorb
mov
add
lret
int
pop
or
cmc
mov
mov
cltd
mov
pop
lret
sahf
outsb
xchg
sub
and
sbbl
pop
mov
fwait
imul
dec
inc
or
fdivr
add
mov
mov
cld
out
mov
in
scas
push
jne
ucomiss
push
mov
test
cmp
lock
mov
lods
adc
addr16
subb
fidivrs
cmpsb
movsb
mov
cmp
or
imul
dec
push
push
sub
or
lret
jb
bound
inc
repz
outsl
pusha
icebp
imul
iret
std
inc
je
xchg
sub
push
jg
fsincos
stos
and
pop
sub
mov
and
add
int3
sbb
call
je
mov
stos
xlat
stc
test
add
js
xor
inc
pop
pop
xor
xor
pop
adcb
ja
mov
cmp
loopne
insl
or
arpl
js
push
jg
push
icebp
pop
jmp
aad
arpl
push
inc
xchg
lahf
and
jnp
sub
push
sub
push
out
stos
fldenv
cmpsl
mov
sub
push
dec
jl
enter
mov
mov
mov
inc
jge
std
add
aad
pop
mov
sti
jns
push
mov
in
sahf
jo
lods
mov
mov
ss
stc
or
lods
xor
mov
in
stos
int
fwait
xor
push
xchg
jmp
lcall
cmp
mov
cmp
mov
orb
or
cwtl
or
push
mov
sbb
bound
or
xor
mov
and
push
mull
and
xchg
jns
lock
cmp
testl
mov
xchg
xlat
cmp
and
mov
or
cli
leave
inc
cltd
xchg
inc
sbb
jg
dec
mov
mov
into
jnp
or
aaa
cld
xchg
gs
ljmp
stos
sahf
dec
sti
xchg
xor
std
outsb
out
mov
mov
stc
stc
test
test
sahf
lods
xchg
pusha
test
sub
outsb
cwtl
jp
call
aaa
cmp
mov
repz
cmp
std
imul
jle
and
in
sbb
repz
int3
mov
lret
and
fldl2e
sub
jnp
int
test
mov
mov
mov
bound
rclb
jno
cli
sbb
cmpsl
xor
rsm
loope
daa
popa
enter
xchg
pop
fsubs
lds
mov
dec
stc
pop
sbb
lock
mov
int3
xor
daa
into
cli
sbb
and
adc
std
and
rclb
xchg
pop
out
inc
jmp
inc
mov
jmp
int
jg
stos
mov
mov
mov
add
add
cmpsl
pop
dec
or
jl
out
psrlq
xor
jl
in
les
mov
mov
inc
xor
in
js
int3
aad
addr16
xchg
and
jp
mov
pop
cmp
scas
add
xchg
sbb
aad
leave
and
jge
jns
sti
in
bound
inc
xor
cmp
in
cld
and
fldcw
cmp
and
inc
pop
pop
out
int
aad
mov
testb
add
adc
repz
jns
mov
fidivrl
cli
mov
sub
mov
in
lret
ljmp
shll
movsb
negl
sub
and
adc
inc
outsl
pop
ljmp
jbe
cmc
mov
lret
cmp
call
lahf
push
mov
xor
push
ljmp
xchg
mov
dec
inc
andb
scas
pop
sub
in
dec
out
pusha
pop
fldt
push
add
test
sbb
aas
mov
mov
ja
push
neg
dec
scas
xchg
sub
push
and
fmuls
pop
mov
jge
rolb
sub
lds
add
shl
bound
pop
push
sbb
dec
cld
mov
sub
xor
xor
mov
lahf
jnp
jns
ja
sbb
cltd
push
push
add
adc
std
cmp
jle
movsl
in
push
ljmp
sarb
ret
push
xchg
xchg
mov
cmp
imul
cmovb
and
xchg
mov
lock
ret
xchg
mov
pop
test
ljmp
sbb
or
enter
mov
push
mov
sub
mov
pop
push
push
adc
xor
shl
push
movsl
fildll
clc
popa
jecxz
cmp
xchg
addr16
in
or
lock
ret
xchg
push
xchg
fiaddl
or
lea
lret
ja
pop
rcrb
adc
loopne
rcrb
cmp
xchg
add
mov
nop
jp
fidivrs
xchg
aas
xchg
nop
repz
xchg
popa
loop
cmp
insb
cmpsb
push
test
dec
ja
dec
xor
adc
ljmp
xchg
leave
movsl
in
stc
cli
xor
lods
pop
push
fcmove
xchg
or
cs
pop
inc
int3
mov
mov
jno
imul
lea
jne
fisubs
iret
add
inc
jl
sub
dec
mov
icebp
push
and
sub
sbb
pusha
and
jne
test
xor
dec
ja
and
shr
aaa
xor
push
mov
add
sub
mov
mov
movsl
fldl
mov
adc
scas
mov
cmp
aad
aam
faddl
mov
mov
sbb
sub
movsl
fnstenv
lods
add
stc
jae
push
push
std
or
addr16
scas
ss
lahf
jno
fwait
mov
lods
or
scas
xor
shrl
data16
jmp
imul
cmp
cmpsb
pop
stos
mov
sub
loope
xlat
jne
mov
xorl
pop
aas
es
pop
push
jmp
shrb
add
in
ljmp
repz
call
mov
jle
cmp
push
adc
popf
sbb
sbb
movsl
jb
xor
add
jge
mov
adc
insl
out
adc
adc
fistpll
push
std
jmp
sub
in
and
push
xchg
and
mov
inc
inc
mov
pop
ret
cmp
fldenv
loop
add
in
aam
inc
pusha
enter
iret
mov
inc
int3
and
sarl
sbb
pop
pop
jbe
shl
mov
lahf
pop
cli
push
cmp
testl
popa
fsubl
js
sar
out
jle
mov
sbb
out
outsl
js
adc
stos
movsl
inc
maxps
mov
pop
mov
int
popf
sub
sbb
and
xor
sbb
shll
push
sbb
imul
imul
das
xchg
cmp
jg
loopne
in
jp
lea
lock
ja
int
adc
jnp
sti
mov
and
jb
jns
shl
cmpsl
cmp
das
shll
pop
push
dec
pop
gs
xor
xchg
dec
ret
outsb
adc
sbb
mul
push
out
xlat
lea
cs
add
stos
pushf
jle
adc
sbb
jge
loopne
outsb
inc
jl
mov
xor
daa
addl
repnz
inc
fidivrs
rclb
jb
cmc
sub
inc
jl
std
ret
data16
or
cli
js
ds
cltd
fimull
fldcw
enter
xchg
mov
mov
adc
or
xchg
mov
ds
dec
lcall
or
mov
testl
into
stos
jp
out
outsl
inc
int
bound
mov
outsl
mov
add
push
mul
sbb
out
mov
stos
lock
xor
mov
inc
add
int3
sbb
in
mov
ret
pop
fxch
sbb
mov
jb
shll
mov
fdivrs
xorl
xor
int3
or
stos
add
sbb
sbb
cli
mov
jp
stos
dec
push
test
arpl
push
popf
test
lods
pop
test
fidivrs
add
mov
add
lret
movsb
push
and
xchg
aam
or
add
jae
call
scas
ss
or
xlat
adc
aaa
imul
gs
pop
nop
jecxz
dec
sbb
out
push
cs
pop
loopne
mov
lods
cs
call
and
std
les
or
scas
icebp
mov
push
int3
xor
fcomps
shll
sub
pusha
xor
jo
mov
add
xchg
push
adc
aad
push
push
inc
jle
insb
and
pop
cmp
dec
loope
lret
add
jecxz
mov
inc
cltd
xchg
dec
jo
jb
xor
adcl
push
mul
bound
imul
fs
mov
lcall
xor
push
push
sub
mov
mov
mov
sbb
out
scas
pop
jge
stos
xor
bound
pop
mov
andb
push
xchg
adc
push
mov
jo
out
push
xchg
inc
loop
push
xor
sub
mov
and
pop
cmp
mov
adcl
dec
push
cmp
loop
fildl
dec
gs
add
jg
fnstcw
xchg
int
inc
daa
imul
dec
idiv
inc
add
sbb
mov
test
addr16
pushf
ret
in
stos
adc
ljmp
lret
xor
mov
fistpll
or
movsl
push
and
insb
out
and
push
mov
jne
push
sti
dec
mov
jmp
in
xchg
dec
xlat
and
lock
mov
and
jmp
cmc
dec
fbld
xor
xchg
cmp
aam
in
lods
sub
jno
outsl
xchg
or
test
xor
outsb
jp
movsl
pop
push
insb
adc
and
mov
xchg
xor
xchg
repnz
mul
cmp
imul
sti
adc
mov
xor
push
xchg
sarb
fistl
mov
inc
or
xchg
push
mov
cmc
mov
add
mov
ret
add
and
test
gs
push
push
xchg
repnz
adc
ss
xlat
push
push
movsb
add
out
sub
icebp
in
test
jl
stos
out
lock
jl
mov
sbb
int
xchg
mov
cmp
mov
xor
rorb
icebp
xchg
mov
mov
or
lea
movsl
shlb
sbb
and
inc
pop
push
aaa
mov
dec
mov
xlat
mov
cmp
imul
push
dec
cmpsl
clc
jns
cmp
xor
test
mov
test
insb
divb
popf
mov
leave
repz
insb
jnp
outsb
lea
push
jne
sub
repnz
add
icebp
add
pop
push
push
sbb
jbe
mov
leave
sub
push
jnp
dec
sbb
shlb
pop
inc
dec
pop
pop
shll
cmp
cmp
cmp
mov
push
frstor
cltd
or
and
or
push
jno
pushf
add
and
mov
cli
ret
xchg
add
xchg
jno
cmp
movsl
xor
loop
add
add
xor
add
mov
push
popa
arpl
xchg
repnz
push
pop
mov
jnp
push
pop
xor
hlt
inc
pop
inc
stos
in
js
mov
icebp
push
stos
je
and
scas
pop
sub
push
or
mull
cltd
clc
cs
dec
shrl
mov
iret
arpl
cmp
loop
pop
lock
dec
cmpsb
mov
add
xchg
insb
pop
pop
add
pop
in
lea
dec
aad
loope
movsl
push
out
popa
in
mov
pop
in
or
and
hlt
cwtl
add
dec
cmpsl
adc
fldt
les
shll
sbb
repz
mov
aas
and
test
xchg
jle
aad
push
xchg
push
loope
cmp
dec
rcrb
popf
fisttps
outsl
push
pop
adc
jne
pushf
xchg
mov
je
ja
cmp
lods
cmc
nop
shl
jnp
mov
icebp
popf
or
mov
addl
push
push
jge
lock
and
sbb
adc
ret
adc
shll
xchg
scas
jp
fdivrs
pop
cmpsl
jmp
test
push
lods
les
sarl
enter
and
aad
inc
xor
or
or
pop
and
repz
test
or
bound
sbb
aad
insb
jg
push
mov
insb
mov
shr
mov
sti
insl
jb
mov
test
push
mov
addl
in
stc
xchg
les
inc
call
xchg
sbb
xchg
rorb
out
ss
sbb
cmc
sbb
mov
imul
pop
in
xor
in
nop
movsb
pop
jge
add
scas
jno
in
push
sbb
imul
mov
xor
jb
xlat
jb
imul
test
imul
loope
out
push
pop
mov
pop
vcvttsd2si
xchg
out
cmpsl
cmp
in
add
adc
mov
insl
insb
fst
cmpsl
les
xchg
es
cmp
scas
mov
mov
mov
xchg
mov
and
xchg
jns
or
push
inc
xchg
add
lds
fcompl
cmpsl
test
outsb
jle
fisubs
xchg
pop
cltd
adc
mov
sarb
test
inc
pop
loopne
mov
sub
nop
mov
pop
pop
hlt
and
addr16
loope
sbb
mov
loope
pusha
stos
fs
popa
sbb
add
ss
int3
pop
or
fidivl
je
mov
mov
pop
fcmovnb
push
pop
mov
aam
daa
and
sub
pop
cld
pop
jecxz
pop
std
xchg
sbb
daa
test
dec
add
leave
in
push
or
mov
out
lret
xor
push
orb
add
movsb
adc
scas
ret
aaa
idiv
fsubs
xchg
jb
inc
movsb
sbb
jbe
inc
fptan
subl
push
jae
dec
mov
test
pop
std
xchg
xchg
or
mov
sbb
dec
xor
adc
mov
fs
scas
cmpsl
fs
mov
xor
pop
adc
aam
xchg
xchg
and
imul
imul
mov
adc
movsb
push
repz
adc
clc
in
jns
mov
ljmp
subl
rolb
in
fsubp
ljmp
push
icebp
je
repz
push
orl
mov
jmp
hlt
sub
std
push
imul
inc
push
sub
sub
addr16
or
arpl
dec
inc
lds
daa
mov
inc
icebp
pop
test
xor
xchg
jno
xlat
mov
ss
iret
pop
iret
add
loopne
dec
pop
mov
stc
sub
dec
cmp
push
dec
subb
sbb
push
jb
and
sbb
cmp
int
push
cmpsb
add
movsb
adc
mov
mov
mov
fmull
cld
dec
mov
xchg
lods
add
mov
push
adc
subl
push
mov
and
test
cmp
mov
stos
imulb
and
stos
pop
test
push
adc
mov
cld
popf
inc
daa
mov
push
cmpsb
hlt
out
sbb
add
loop
je
inc
test
jne
lret
cmpsl
aas
out
aas
cmp
movsl
sbb
pop
and
insb
mov
xchg
negb
adcl
ffree
nop
movsb
bound
loopne
in
push
and
in
cmpl
insb
ficoml
mov
lret
les
das
jne
push
ss
mov
mov
repz
inc
pusha
cld
adc
out
push
popf
mov
sbb
cmpsl
insb
mov
mov
push
mov
fisubs
enter
inc
and
push
inc
stos
cs
xor
pop
push
into
xchg
out
aad
fisttpll
and
cmp
adc
inc
sbb
or
jo
les
pushl
test
add
xor
outsl
in
pushf
insl
test
ss
imul
dec
clc
bswap
dec
xchg
divb
xchg
popa
and
std
icebp
cmpsb
loope
add
push
lods
loope
mov
in
imul
or
inc
cmp
add
loope
xchg
mov
rcrb
xchg
into
stos
lcall
sub
movsl
or
inc
stos
xchg
push
xchg
jle
repnz
and
dec
mov
add
rcrb
jb
mov
mov
xor
dec
add
cmpsb
pop
push
dec
in
cli
out
ljmp
je
mov
bound
pop
ret
decl
popf
lahf
orl
pop
lods
pop
bound
mov
jge
mov
dec
arpl
push
in
clc
into
cmp
xchg
inc
sbb
in
cwtl
inc
add
shlb
nop
push
push
mov
outsl
pop
and
inc
sub
lahf
das
mov
cltd
add
push
addb
lret
scas
pop
call
ffree
and
addr16
repz
in
sahf
mov
xor
xchg
push
lea
push
loopne
mov
cmp
dec
mov
mov
dec
das
inc
inc
jno
add
lods
push
xchg
pop
fnclex
mov
add
xor
mov
loope
dec
lret
mov
mov
enter
mov
shlb
and
mov
sahf
rcll
sbb
cmc
scas
loope
pusha
xchg
out
xchg
pusha
cmp
arpl
and
pmullw
sbb
xchg
mov
jno
icebp
int
rcll
shlb
lods
cmp
mov
mov
push
mov
mov
js
ljmp
mov
popf
leave
js
pop
jae
push
mov
add
mov
mov
int3
clc
mov
or
push
mov
in
jecxz
cwtl
fisubl
icebp
loop
fwait
loopne
pop
imul
outsl
add
or
cld
aas
outsl
sti
push
xor
out
mov
jnp
ret
cmp
andb
jg
mov
mov
mov
out
fisubl
jg
leave
icebp
out
filds
pop
xchg
xor
add
pop
les
int
and
pop
jmp
popf
push
lcall
mov
xchg
lds
xor
loopne
mov
add
fnstenv
pushf
push
mov
mov
jo
notb
or
cmp
inc
das
fiadds
xor
inc
inc
scas
clc
and
jno
fcoms
fwait
in
fdiv
push
jns
lea
xchg
mov
movb
mov
pop
inc
or
cwtl
jno
ds
jp
in
loopne
xor
jno
sbb
mov
repz
std
mov
out
clc
aaa
adc
daa
mov
es
cs
addr16
mov
test
jbe
popa
das
aad
and
sarl
mov
test
fs
jo
pop
mov
mov
test
inc
cs
clc
sbb
ljmp
adc
aas
mov
xor
jnp
cmc
out
mov
mov
movsb
mov
mov
mov
lea
fmull
push
sub
sub
stc
xor
xor
adc
xor
arpl
jbe
and
pop
aad
xchg
sub
es
fcoml
jo
inc
sub
or
inc
inc
adc
leave
cmp
mov
adc
sub
cmp
add
xchg
popf
stos
pushf
fcoms
dec
push
xchg
pop
cmc
adc
aas
movsb
or
or
xor
and
mov
xor
add
in
aas
jl
xchg
lods
add
xor
jns
jp
int3
sbb
lret
pop
xor
stos
cmpsl
xchg
xchg
mov
add
mov
adc
inc
sbb
xor
stos
je
adc
lods
nop
sbb
mov
out
xchg
sbb
data16
mov
out
adc
loopne
addr16
inc
out
scas
inc
clc
ffreep
loopne
fst
or
mov
and
je
pop
testl
das
push
pop
fsubp
xchg
cmp
lock
lods
adc
xchg
mov
testl
fdivl
inc
in
andb
out
add
movsl
movsb
pop
imul
push
xchg
shlb
inc
sub
mov
push
cmpb
sarl
inc
les
lret
dec
movsl
imulb
std
jle
push
adc
rorb
xchg
mov
mov
in
jbe
fcompl
rcrl
mov
mov
or
lds
clc
ror
in
xchg
inc
sarl
sub
mov
lods
mov
mov
cmpsb
nop
sub
sbb
repz
ja
mov
loop
sbb
fsts
pop
stc
cmp
stc
in
sbb
es
jns
scas
push
pop
inc
fcoml
push
lea
sbb
add
or
loopne
and
and
scas
inc
inc
xchg
sub
jne
scas
add
and
lds
sub
mov
adc
push
pop
inc
pop
mov
stos
shrb
insl
imul
inc
add
push
cmp
push
and
jl
adc
xor
xor
in
orl
scas
scas
fnstenv
cmpsl
jne
sub
rorb
call
outsb
fisubrs
inc
ds
mov
push
xor
pop
cmp
add
add
pushf
jnp
dec
xchg
cmp
mov
mov
lock
add
jbe
sbb
scas
pushf
fimull
jns
push
dec
inc
jmp
call
cwtl
sbb
insb
lods
push
mov
xchg
iret
and
fnstsw
lds
xchg
rorl
outsl
lods
push
or
mov
mov
test
int3
rorl
or
sub
adc
je
cli
mov
ljmp
inc
jbe
gs
xor
cli
lahf
imul
mov
inc
inc
mov
lea
inc
sub
loope
aaa
insl
pop
out
addr16
ss
mov
push
ds
lcall
push
stc
loop
cmp
dec
pop
dec
sub
sub
cmp
fcomps
mov
insb
shl
cmp
loop
daa
inc
int3
mov
and
cmpsb
dec
ror
dec
mov
push
cwtl
cmpsb
movsb
fwait
arpl
mov
ja
rcrb
jmp
shlb
nop
loopne
jo
aad
xor
sbb
pusha
mov
lock
xchg
cmpsl
cmp
movl
jge
out
add
lods
adc
loopne
cmpsl
fnstcw
xchg
movhps
jle
leave
cmpsl
es
add
and
inc
mov
adc
sub
push
push
aam
jae
sbb
cltd
jmp
xlat
pop
ds
add
repnz
push
and
mov
cmpsb
xchg
lods
imul
fstpt
movsb
andl
mov
cmc
inc
dec
dec
push
mov
maskmovq
divl
dec
mull
mov
out
pop
ds
mov
push
xor
bnd
stc
push
ds
xchg
adcb
cwtl
outsl
popf
dec
sub
jl
ja
insb
add
and
push
lock
addl
in
lods
ret
jno
out
mov
lret
ljmp
lds
push
fsubl
lcall
xchg
fists
mov
cmpsb
inc
xchg
xchg
push
add
nop
xorl
test
adc
xor
sbb
in
cltd
in
jmp
enter
dec
push
mov
mov
dec
mov
insb
movb
push
pop
cmpsl
ds
call
subb
mov
negl
mov
inc
pop
pop
mov
dec
cli
push
mov
and
mov
sbb
and
lcall
adc
jecxz
dec
outsl
leave
jp
dec
into
ds
in
divb
mov
das
jecxz
rcll
mov
jo
notb
pusha
lods
rcrl
ja
inc
mov
out
in
pop
pop
push
es
and
dec
xor
fbstp
or
rolb
test
sahf
push
clc
lea
mov
aaa
mov
mov
subl
shrl
inc
push
cmpsb
pusha
lcall
jne
adc
cltd
ss
xor
inc
out
inc
mov
dec
pop
jno
enter
out
test
repz
mov
mov
xchg
xchg
xor
aad
push
rdpmc
pop
and
dec
in
ret
xchg
dec
arpl
aaa
insb
sub
mov
in
xor
mov
stc
mov
dec
mov
cmpsl
push
ss
mov
push
leave
mov
and
mov
sub
rorb
test
cltd
mov
or
packssdw
pop
daa
xchg
imul
mov
mov
fwait
jge
mov
xchg
adc
sahf
cmc
popf
sbb
xor
arpl
adc
adc
loopne
je
fsubrl
jns
xchg
lret
fnsave
scas
es
dec
jne
sbb
in
cmpsb
or
scas
rorb
cld
cmc
popf
mov
in
dec
and
pushf
add
mov
js
ret
sub
shlb
dec
mov
repz
mov
lahf
movb
test
es
ret
mov
imull
or
int3
cmp
mov
xor
inc
sub
in
fnstsw
mov
insb
stc
push
lds
es
adc
fdivrl
xor
jle
popa
sarb
mov
inc
mov
outsb
or
adc
jmp
jg
ljmp
aad
xchg
ret
dec
std
mov
jo
cli
cmpsb
jp
outsb
xor
inc
in
adc
and
sub
xchg
sbb
lahf
cmp
cltd
stos
lea
int3
ret
andb
and
lds
dec
sub
scas
jg
inc
mov
data16
ja
mov
push
push
rcrl
int3
mov
fwait
push
popf
sbb
jp
scas
arpl
cltd
xchg
filds
repnz
xchg
push
je
jl
inc
mov
negb
push
add
xchg
xor
xrelease
les
mov
sbb
xor
push
mov
popa
push
lods
in
cmp
stos
xchg
pusha
out
inc
out
xchg
and
pop
mov
adc
inc
push
insl
call
xchg
or
das
push
push
push
lea
loop
push
into
pop
loope
sbb
in
enter
jo
pushf
outsb
out
inc
pop
cmp
xor
les
fadd
orl
xorl
ret
dec
adc
xor
mov
int3
cltd
xchg
inc
cli
lret
mov
dec
mov
xor
cltd
in
cli
ss
cwtl
js
push
ret
imul
adc
push
mov
and
insl
push
pop
jno
lcall
sbb
add
fisubrl
in
adc
mov
cmpsb
rcl
pop
xor
inc
cltd
ret
jl
push
loope
dec
mov
mov
mov
inc
rclb
fdivl
pop
insl
jmp
cs
dec
pop
and
test
or
xor
pop
in
pop
sub
push
cli
subl
add
mov
pop
mov
jnp
adc
push
loopne
jge
ds
pop
mov
decb
loopne
cwtl
bnd
mov
cmc
stos
xor
mov
rorl
mov
in
loop
sbb
cld
in
mov
call
cmpsl
adc
jnp
jo
es
dec
fiaddl
xchg
mov
mov
fcom
arpl
fnstsw
mov
sub
pop
push
loop
push
cmp
dec
dec
push
mov
xor
and
in
mov
xor
push
push
xchg
shll
icebp
mov
lret
into
mov
or
jmp
pop
ret
jge
mov
ret
jecxz
push
out
repz
movsb
adc
jo
insb
cltd
ret
add
clc
imul
cld
sbbb
cwtl
cwtl
jecxz
std
mov
adc
or
bnd
outsl
test
lock
sbb
orl
xchg
gs
inc
sub
sahf
sub
stc
add
loop
ret
jle
push
or
cli
mov
mov
xor
jecxz
outsb
inc
dec
fildll
cmp
sub
mov
push
insb
addr16
inc
add
popf
jno
ljmp
std
movsl
popf
mov
sbb
shlb
ljmp
mov
mov
cmp
push
mov
push
or
cmp
lret
out
mov
jp
push
mov
mov
lret
cmp
ds
add
dec
push
jmp
aad
or
fs
sti
loop
out
mov
add
arpl
sarl
fwait
into
xchg
mov
ljmp
push
test
or
in
or
adc
pushf
and
mov
jns
out
sbb
loope
movsl
rorb
push
sbb
loopne
xchg
inc
inc
jp
stos
mov
mov
jle
test
lds
out
mov
dec
jb
repnz
dec
xor
pop
icebp
icebp
sbb
inc
stos
in
rcll
das
jne
xorl
popf
push
in
push
add
adc
scas
xchg
lods
mov
and
xchg
add
jle
xchg
call
and
nop
sub
xchg
mov
movsl
lods
mov
sbb
scas
aas
cmp
inc
cmp
inc
aad
out
stos
sahf
jmp
es
iret
mov
pop
mov
ret
dec
mov
sbb
inc
outsb
dec
popf
mov
add
jge
jp
into
and
jnp
sub
lea
mov
in
dec
in
sbb
push
push
pop
xlat
adc
data16
pop
jb
mov
loop
push
gs
mov
lods
sub
in
adc
mov
test
xchg
pushf
cmpsb
lods
sub
xchg
int
fsts
xchg
mov
jmp
sbb
lock
gs
inc
push
xchg
inc
pop
lret
mov
xchg
les
scas
jp
subb
add
loop
scas
mov
scas
imul
inc
outsb
pushf
dec
out
push
and
addr16
nop
test
sbb
imul
pop
push
out
push
push
mov
icebp
rorb
lret
sti
in
xor
xor
in
movsl
dec
xlat
pop
sbb
or
cmp
xor
xlat
xchg
leave
jecxz
xchg
es
adc
dec
lock
bound
dec
loop
shl
push
push
leave
jmp
xor
xchg
insb
mov
fadds
push
add
sub
push
and
or
dec
inc
ja
and
push
push
xchg
push
dec
lock
out
push
inc
icebp
add
aad
mov
push
add
into
clc
xchg
imul
enter
mov
outsb
sub
ss
mov
or
fisubl
adc
jne
cmp
jo
jl
es
sbb
movsl
jnp
push
dec
mov
inc
cwtl
inc
cmc
adc
jl
addl
cwtl
arpl
test
sub
in
mov
inc
push
stc
movl
cmp
jns
push
call
data16
add
lret
add
and
lcall
sub
in
ds
fistpll
mov
mov
pop
pop
lds
out
scas
push
rcrb
aas
mov
add
or
sub
iret
inc
insl
add
mov
jae
ja
jp
cmc
xchg
add
adcl
dec
cmc
ja
push
xor
sbb
or
jo
inc
pop
sub
dec
jmp
xchg
nop
dec
jo
lret
adc
mov
mov
sub
pop
sub
mov
add
add
mov
out
std
mov
stos
and
or
mov
out
xor
mov
out
xchg
jb
or
mov
fisubs
aad
or
paddsw
cmpsl
movsb
mov
mov
inc
pop
push
xlat
pop
and
hlt
dec
adc
xlat
mov
mov
ja
jb
xchg
lret
cwtl
std
fistl
pop
fstp
out
mov
add
loop
popa
add
negb
xchg
out
shlb
lret
imul
sub
and
fdivs
xlat
ret
lock
mov
cmp
sarl
inc
cmp
cmp
testl
push
into
lds
push
or
jns
into
inc
sub
mov
adc
ljmp
push
ljmp
push
push
lods
push
movsb
test
addr16
and
sti
jmp
cmp
test
pop
fistps
and
jg
incb
inc
cwtl
les
negb
push
push
jne
inc
pop
push
mov
cs
jmp
ja,pn
mov
xchg
in
xor
cmpsb
cmp
add
fwait
popa
leave
xchg
jle
or
pop
xor
stc
lcall
pop
jne,pn
lea
mov
arpl
dec
adc
adc
push
sub
repz
fsub
shlb
mov
lcall
ljmp
mov
dec
push
iret
add
mov
loope
addr16
stos
pop
add
mov
cmp
daa
negl
and
out
or
push
mov
mov
add
cmp
hlt
pushf
inc
in
cmp
push
pop
mov
call
ret
add
mov
cmp
and
xchg
sub
inc
cld
int
xchg
decb
out
icebp
dec
or
add
jecxz
mov
decb
lret
jge
dec
pop
push
mov
and
in
insb
cmp
adc
dec
xor
jle
negl
pop
mov
shrl
adc
ja
or
insl
lods
sub
into
add
cmp
ret
mov
jno
data16
aam
xchg
int
dec
and
inc
cmp
jb,pt
push
outsb
int3
test
cmpsb
mov
ret
fldl
cwtl
xor
insb
dec
mov
pop
fldt
gs
lods
insl
out
into
clc
test
cmc
daa
xchg
push
rcl
mov
mov
popf
loopne
add
sti
leave
inc
or
sub
mov
cs
push
or
add
adcb
jg
iret
cmpsl
outsb
pop
jecxz
gs
icebp
int3
mov
shl
pop
shll
xchg
icebp
mov
add
fidivrs
and
inc
dec
sbb
sbb
sub
mov
adc
add
pop
xor
jge
insb
xchg
sbb
mov
fiadds
mov
mov
and
xor
es
inc
pop
sub
cmp
cmp
lds
cli
mov
mov
or
inc
pop
mov
movsb
jle
incl
jge
push
xchg
push
in
cld
notb
mov
nop
addr16
nop
stos
inc
mov
dec
rorl
xchg
push
sbb
mov
jns
iret
daa
outsl
jbe
push
in
int3
popf
mov
dec
adc
cmpsb
ss
in
aad
movsb
xor
jb
sbb
cmp
adc
rcrb
loope
in
pusha
dec
test
int
std
mov
mov
adc
rol
rcl
scas
in
das
xor
xchg
xor
out
xor
int
pop
int3
jae
adc
dec
call
dec
dec
sub
jmp
out
mov
adc
aas
scas
in
push
mov
dec
pop
je
cmpsl
jne
mov
mov
adc
push
in
cmp
in
mov
pop
test
popf
jb
xchg
xor
mov
call
push
and
fs
inc
stc
out
test
mov
inc
jno
mov
add
or
push
cmp
js
mov
popa
nop
pop
lock
ficomps
jle
popa
cmp
daa
test
dec
pop
xchg
xchg
orl
sbb
imul
jmp
idivl
fnstsw
dec
cmpsb
gs
sarl
insl
call
aas
rcl
and
adc
inc
test
push
test
sbb
pop
fstps
pop
cmp
inc
mov
fs
movsb
imul
pushf
fistpl
cmp
mov
and
sahf
js
adc
les
add
sbb
outsl
inc
and
cli
pop
test
int3
loopne
icebp
and
in
xchg
lock
insl
jnp
lahf
hlt
lds
mov
lcall
xchg
lret
insl
es
ss
dec
sti
mov
cld
inc
fdivl
aaa
cmc
les
mov
jno
push
scas
and
add
mov
sbb
psadbw
xchg
enter
lods
pop
arpl
test
xchg
int
cmp
es
push
out
cmp
mov
insl
insb
push
icebp
add
xchg
jb
push
in
ficoml
enter
out
icebp
dec
nop
fsubrs
xor
sbb
and
popf
xchg
adc
mov
add
fsubrs
adc
cmp
aas
lcall
jns
push
gs
jo
mov
dec
rolb
aaa
popa
xor
loop
jns
jle
jl
stc
cmp
ret
mov
jns
gs
shlb
imull
ret
xlat
jmp
imul
mov
jl
xor
pop
add
fwait
leave
jne
pop
inc
sub
call
rorb
jp
loope
jmp
push
mov
jae
push
push
fsts
sar
mov
testb
mov
rcrb
aaa
lods
stos
sub
sub
pushl
gs
enter
and
jnp
mov
jno
clc
and
pop
das
add
mov
mov
pop
push
insb
and
jp
test
xchg
cwtl
push
mov
repz
aam
dec
ret
pop
mov
xchg
mov
mov
mov
test
xor
pushf
add
in
out
call
addb
adc
mov
inc
push
sub
push
adc
pop
pushf
stc
mov
sub
int
mov
inc
lods
inc
test
test
fs
and
adc
and
jns
ss
test
mov
test
repnz
mov
xorb
in
mov
push
gs
stos
cmpsl
adc
stc
xor
daa
jns
mov
xor
mov
pop
cmp
mov
xchg
sbb
push
popa
add
add
or
das
rcll
pop
fdivrl
mov
xchg
xor
fst
fs
mov
shrb
lods
inc
imul
sub
pop
or
cmp
bound
cld
les
sub
pop
insb
outsl
xchg
ja
in
mov
or
rorb
shlb
xchg
fcom
data16
dec
add
push
jbe
fwait
sbb
daa
xchg
pop
bound
xor
mov
xlat
adc
mov
loopne
popa
xchg
or
mull
push
clc
pop
jmp
xor
xchg
fs
imul
adc
sarb
jle
ret
lods
pushf
into
mov
push
aas
fidivrl
pop
jnp
sahf
movsb
dec
jmp
andl
xor
push
or
inc
lret
pop
aaa
out
cmp
mov
scas
cmpsl
pop
xor
loopne
lock
jle
jecxz
out
dec
into
add
ljmp
std
fiadds
rcll
jle
inc
fwait
jmp
out
movsl
movsl
xlat
xlat
xchg
push
add
pop
mov
mov
lock
lea
add
mov
cmp
lret
inc
adc
movb
dec
fwait
mov
sub
mov
inc
and
fprem1
jle
stos
mov
sbb
xchg
jne
mov
dec
outsl
pusha
inc
scas
xlat
xor
add
lds
fistpl
sub
jo
mov
outsb
cmc
sbb
sub
repz
sbb
push
jle
cmp
cmpsb
out
inc
sbb
adc
dec
fcomi
cld
mov
xchg
call
cmovae
outsl
mov
outsl
leave
xchg
add
pop
add
xor
jbe
xchg
cmc
inc
push
xchg
fdivl
and
jne
xor
unpckhps
int
xlat
jns
mov
mov
int
lea
test
inc
out
movsl
popf
popa
mov
pop
xchg
out
and
push
push
fistps
addb
push
mov
adc
mov
push
push
xchg
cmp
cmp
xor
xchg
mov
and
aad
clc
nopl
xchg
jle
jecxz
in
hlt
pop
rcl
lods
jae
add
push
mov
imul
inc
lods
orl
dec
push
cmp
rorl
sbb
or
jp
stos
bound
jns
sub
rcl
out
push
pop
loope
insb
nop
cs
movsl
sbb
stos
xchg
pop
cwtl
or
push
xor
dec
xlat
outsb
notl
push
or
test
imul
out
xchg
movsb
mov
fiadds
aas
jo
add
push
dec
add
jno
pop
dec
stc
lods
into
jmp
movsl
push
outsl
js
lods
cmp
andb
jg
mov
rorl
imul
out
mov
jle
lahf
ror
test
rorl
sbb
pusha
popf
inc
adc
neg
or
push
shl
inc
pop
testl
jecxz
xchg
lahf
loope
mov
adc
push
cld
hlt
loop
je
inc
test
pop
sbbb
mov
gs
lods
clc
test
xor
dec
xchg
adc
or
insb
or
lcall
and
add
pop
push
leave
mov
jae
push
outsl
test
das
mov
pusha
in
cmpsl
inc
test
mov
roll
repnz
mov
jle
test
in
shrb
jg
pushf
sbb
sub
dec
and
dec
aad
pop
fisttpll
andl
test
jl
lds
xlat
mov
addb
jge
shlb
outsl
loope
xchg
xchg
inc
push
lahf
mov
mov
or
icebp
lret
fcompl
or
sub
mov
push
lret
out
cltd
adc
fcmovb
imul
ret
and
pop
test
mov
pop
in
les
mov
in
test
mov
pop
pushf
stos
push
cmpl
iret
test
dec
inc
mov
daa
lods
lods
sub
icebp
mov
sbb
xchg
inc
rorb
cmpsb
and
icebp
and
vpunpcklqdq
lahf
inc
jmp
pop
pop
inc
jo
add
pop
xchg
in
subl
test
push
lods
mov
nop
xchg
insb
lcall
bound
in
dec
ret
jl
push
dec
aam
xchg
test
es
hlt
movsl
or
pop
pop
shrl
aas
add
fdivr
and
outsb
mov
mov
inc
fstpt
adc
add
pop
leave
lods
bound
pop
cmp
mov
add
sbb
or
divl
xor
pop
adc
iret
cmp
cmp
dec
mov
pop
arpl
push
lods
pop
cmpsl
xchg
nop
mov
xchg
pushf
test
incb
fisubrl
fcomp
and
pusha
add
dec
imul
mov
mov
mov
cmp
sarl
inc
nop
repnz
mov
or
pop
pop
stc
lods
addl
mov
jl
ffreep
int3
pop
pop
dec
push
inc
lods
add
xor
cmp
push
sub
push
out
test
cmpsb
mov
neg
add
cmp
pop
insb
fnstenv
iret
aaa
mov
pop
loop
adc
cmp
cld
sbb
inc
fldenv
or
cltd
pop
mov
sub
sub
scas
sbb
sarl
sbb
xchg
rolb
push
jns
shll
sub
shlb
xchg
jp
aaa
mov
mov
jnp
int3
xchg
or
aad
or
fsincos
sub
test
popf
jmp
add
adc
or
sbb
notb
sar
jecxz
jmp
je
sti
xchg
sbb
leave
scas
loop
leave
ret
add
mov
pop
pop
dec
and
out
imul
mov
pop
sub
shrb
mov
push
xchg
fistl
adc
cmpsl
cwtl
pop
dec
sbb
mov
rcr
enter
xor
repz
inc
pop
mul
mov
outsb
cwtl
pop
or
arpl
idiv
cmp
inc
gs
filds
shl
fwait
dec
inc
inc
loop
xor
lods
xor
ss
add
mov
jmp
dec
lret
push
dec
jae
int3
daa
xchg
dec
imul
cmc
jae
adc
out
int3
ret
pop
sarl
cmc
sbb
cld
rcll
sbb
mov
mov
mov
hlt
sbb
lret
xor
add
mov
push
cwtl
lret
jp
add
cwtl
mov
lret
scas
pop
and
adc
xchg
out
sub
push
leave
mov
xlat
sbb
sti
adc
stos
sbb
cmp
push
push
add
mov
nop
xchg
adc
scas
out
cmpsl
scas
mov
jo
dec
xchg
jl
xchg
lret
mov
add
int
mov
jecxz
clc
mov
imul
hlt
popf
aaa
cmp
pop
mov
pop
repz
das
mov
push
fistps
out
dec
cmc
dec
xchg
mov
xchg
mov
push
leave
sbb
or
mov
in
int3
cli
sub
xor
lods
test
push
out
mov
aaa
ret
fisttpll
pop
dec
push
movsb
jp
and
dec
sbb
push
pop
mov
roll
jo
cmp
icebp
scas
mov
or
lods
dec
int3
loope
xchg
les
add
nop
cmp
mov
pop
insb
push
call
popf
jns
inc
jg
jno
inc
aas
mov
in
sub
leave
iret
out
jnp
pusha
inc
cltd
and
pop
or
sbb
test
clc
dec
stos
mov
popa
mov
add
sub
sub
sbb
cltd
icebp
clc
xchg
scas
cmp
push
sbb
mov
hlt
pop
les
jne,pt
xchg
test
push
add
lods
xchg
popf
fiadds
stos
movsl
idivl
xlat
cmp
xor
lea
mov
fld
jns
icebp
fsub
inc
rclb
cli
mov
daa
xor
ss
xchg
dec
inc
pusha
push
cmp
or
push
sub
sub
cmp
mov
inc
cwtl
in
jp
xchg
mov
or
in
in
imul
cmc
ret
push
or
cltd
iret
lea
lret
cmp
lods
xchg
fnstcw
into
pop
mov
push
fnstsw
jbe
aaa
mov
xlat
xor
pop
fsubl
pop
sub
adc
js
arpl
cmpl
aad
mov
bound
dec
test
cmp
test
push
xor
fisubs
mov
js
or
mov
int3
xchg
insb
fwait
xchg
cmp
inc
pop
inc
fstpl
xchg
faddp
inc
jno
leave
mov
in
js
lock
lcall
and
dec
mov
popf
outsb
mov
rclb
adc
lahf
bound
stc
fcomps
mov
fs
mov
sti
ss
adc
pop
inc
pushf
nop
and
xchg
jbe
aaa
jo
je
mov
testb
sbbb
arpl
dec
add
dec
xor
inc
ds
gs
test
sbbl
cwtl
push
and
and
push
addr16
sbb
add
mov
jno
in
popf
jo
out
and
fidivs
fs
test
pop
pop
rolb
mov
mulb
pop
mulb
or
jl
rcrl
and
sti
dec
sbb
movsb
ss
into
sahf
cmp
idiv
xlat
arpl
add
xchg
lcall
test
jg
mov
jmp
ja
jg
dec
cmpl
dec
xchg
cmp
adc
popf
xchg
or
lahf
push
push
int3
rorb
aam
insb
push
stos
add
cwtl
and
cmp
in
sbb
fdivs
sahf
inc
xor
mov
xchg
jne
cmp
fildll
sbb
mov
test
roll
sahf
add
rorb
inc
std
fldz
push
adc
mov
mov
rcrb
lods
pushf
xchg
test
ljmp
ljmp
test
stos
in
scas
dec
outsl
jecxz
repnz
andb
outsl
pusha
mov
push
inc
cmp
inc
sbb
xor
lods
push
push
decl
cmp
add
jnp
xor
bound
push
pop
pop
int3
sbb
mov
cmp
scas
outsl
push
aam
mov
cmp
jns
jp
jg
lea
dec
push
stos
sbb
out
add
fistpl
mov
mov
addr16
dec
jge
mov
lcall
xor
iret
vphaddudq
inc
push
pop
gs
sbb
jp
xchg
das
imul
push
ret
mov
mov
cmp
push
fmuls
push
stos
lret
les
mov
mov
mov
add
mov
cmp
dec
call
and
and
loope
ljmp
dec
adc
add
and
pop
xchg
aam
jmp
xchg
data16
mov
mov
xor
lods
std
sub
xor
dec
scas
bound
xlat
mov
in
pop
ds
mov
pushf
lea
sysenter
or
sti
icebp
hlt
mov
data16
lret
insl
dec
iret
cld
aam
nop
mov
or
mov
sbb
cs
mul
mov
fwait
into
out
imulb
mov
dec
mov
jle
mov
lock
aad
pop
sbb
lea
je
inc
mov
add
xchg
cmpb
push
mov
ret
pop
addr16
mov
nop
mov
sahf
mov
pop
outsl
fs
mov
mov
mov
pushf
pop
ret
cld
mov
push
cmp
movsb
jae
inc
sbb
adc
push
push
arpl
pop
dec
cmp
es
add
and
fistpll
sbb
or
mov
dec
inc
cmpsl
lods
adc
stos
add
mov
xacquire
pushf
xchg
lret
shrl
xchg
loopne
xor
mov
lea
sub
fwait
adc
push
lcall
insb
sahf
inc
inc
inc
lock
dec
std
mov
mov
cmp
sbb
lods
mov
fists
jg
cmp
into
pop
sub
and
jp
or
das
lret
scas
lss
popfw
or
inc
pop
cmp
inc
inc
mov
imul
push
dec
test
rclb
push
adc
jne
mov
cmpsb
cltd
stc
stc
enter
mov
mov
and
jp
shl
inc
pop
sti
xchg
addr16
xchg
inc
popf
or
adc
std
gs
stos
ljmp
movsb
mov
jb
lds
nop
sub
stc
lcall
add
fisttpl
aaa
jns
loop
sub
push
mov
push
repz
or
mov
xchg
fiadds
push
ret
mov
orb
dec
data16
inc
push
xchg
mov
lea
push
cmp
mov
fnsave
aas
imul
push
jge
dec
outsl
cmpsb
and
jae
jo
aas
adc
and
xor
cmc
xchg
xor
fsubrs
inc
push
jne
int3
fwait
in
test
sub
icebp
fisttps
aaa
mov
fcompl
dec
cmp
push
lret
mov
movsl
andb
sbb
leave
inc
sub
xchg
fs
addr16
addr16
andb
lcall
cmpsl
pop
cmpb
mov
jo
ljmp
inc
mov
mov
lahf
lret
pcmpgtw
lods
fwait
pop
or
dec
push
mov
aam
cmp
or
mov
push
xchg
aad
nop
inc
arpl
xchg
xchg
and
iret
inc
jne
in
mov
jno
push
loopne
dec
aam
lcall
aas
scas
pop
mov
stc
mov
mov
cmp
inc
hlt
xchg
sub
push
stos
movsl
cwtl
clc
gs
pop
subb
jp
dec
into
fdivrp
repnz
xor
mov
add
sub
lret
jne
inc
dec
jmp
test
push
rcl
sub
lods
pop
out
sbb
incl
cld
shlb
add
fbstp
sub
sbbl
insb
pop
jae
jl
mov
mov
test
roll
ds
fstpt
and
stos
test
bound
and
sub
stos
sub
es
sarl
iret
loop
mov
xor
rorl
cmp
adc
ss
inc
lahf
loopne
fidivs
sbb
sub
mov
mov
xor
nop
xor
push
mov
and
rorl
adc
pxor
or
addl
adc
and
outsl
or
adc
pop
cmc
mov
out
scas
push
adcl
dec
sub
mov
adc
notl
adc
jae
addr16
inc
add
jmp
mov
push
call
add
dec
lods
and
fnstsw
or
xorb
out
ss
dec
jo
push
xchg
insl
test
cwtl
imul
cmp
push
loope
xor
push
mov
mov
add
shll
pop
pop
pop
or
bound
popa
inc
and
hlt
inc
add
pop
fstpt
mov
push
or
stos
sub
jno
in
add
fidivs
aas
incl
xchg
and
jns
mov
and
xchg
jnp
popa
nop
jno
add
push
jecxz
cmp
mov
lret
movsl
sbb
leave
jle
rorb
stc
ficompl
imul
pop
sbb
adc
stos
aaa
sarb
in
hlt
cmp
ja
fbld
popl
in
lcall
and
add
jne
push
add
push
mov
dec
add
dec
push
rolb
xchg
xor
dec
test
cmp
push
push
das
ffreep
cmc
xlat
mov
push
xor
mov
jg
or
movsb
test
xor
sub
aam
add
jbe
mov
aad
notl
sub
fwait
sbb
aas
mov
fwait
inc
sbb
out
pop
sbb
in
or
out
xor
dec
sbbb
xchg
xlat
outsb
stos
test
xor
ja
push
mov
xor
jp
adc
or
repz
bound
xchg
dec
mov
jecxz
adc
movsl
jnp
adc
jo
les
adc
mov
jo
enter
nop
xchg
hlt
push
fisubrl
sbb
popf
jge
lock
sub
test
out
into
mov
sub
loopne
and
sub
arpl
movsb
xlat
icebp
cli
dec
mov
jecxz
dec
call
sbb
or
outsb
scas
mov
in
nop
mov
icebp
ljmp
fdivp
mov
inc
jae
clc
mov
fisttpl
xor
mov
dec
jg
or
sbb
aad
in
ret
imulb
fisubrl
or
fidivrl
inc
cwtl
xor
aad
iret
enter
jb
daa
push
mov
int
ret
or
push
jae
ret
ja
adc
jns
loopne
push
and
mov
xchg
mov
jo
sub
add
and
inc
pop
aad
and
cmp
push
pop
jno
sub
push
shr
pushf
adc
lret
lea
xor
jmp
fcom
sahf
in
sub
mov
stos
xor
rcll
fucomi
inc
int3
pop
sbb
mov
jns
stc
adc
xor
cmp
jne
test
mov
ja
and
or
xchg
es
pop
cmp
dec
sbb
pop
testb
fiaddl
sub
dec
out
outsl
test
imul
loop
jns
mov
filds
icebp
addr16
mov
aaa
push
mov
adc
jmp
scas
test
mov
daa
repz
jl
cmc
push
adc
pop
sub
add
xor
and
fcoms
mov
push
or
popa
imul
shll
shll
pop
nop
in
clc
dec
xchg
arpl
cs
popf
insl
xchg
fisttps
xchg
mov
pop
in
stos
loope
cmp
aaa
nop
test
shl
rcll
and
push
out
out
pop
push
stc
xor
push
mov
inc
lret
jne
ds
fst
aam
push
xchg
dec
jmp
push
sbb
inc
mov
test
jo
jmp
or
xchg
out
xchg
inc
in
mov
lahf
orb
mov
xor
in
push
mov
fldenv
popf
mov
xor
xor
int
jo
jb
sti
jg
clc
push
mov
ror
mov
int
push
adc
leave
mov
sbb
test
adcb
sub
sub
jmp
sub
in
loopne
lea
add
push
shlb
int3
std
in
ret
stos
fwait
daa
jmp
sub
xlat
and
or
insl
stos
xchg
outsl
aaa
xor
jae
jp
lahf
cmpsl
and
dec
adc
xchg
cmp
sub
call
rorb
insb
push
jb
jmp
scas
fcoml
lea
addb
popf
hlt
repnz
int
push
inc
inc
xor
jbe
cmp
xchg
sub
jg
dec
andb
repz
or
orb
sbb
push
xor
mov
pop
or
pusha
cs
test
dec
cmp
mov
and
call
ljmp
sahf
mov
rol
sti
mov
rclb
xchg
into
dec
add
push
filds
push
mov
test
cmp
sbb
jmp
imul
push
notl
mov
push
mov
stos
shrb
jne,pn
push
adc
xor
dec
in
cmp
mov
rcr
cmc
jge
ret
in
fcoml
mov
lods
ds
lret
rorl
das
push
lahf
loop
out
lods
jg
sbb
push
sahf
jbe
pop
mov
xor
imul
cltd
jp
push
rorl
dec
ret
pop
add
ljmp
mov
inc
inc
pop
xchg
enter
jle
ljmp
cmp
ss
subb
mov
cmp
mov
sar
and
xchg
ds
push
or
push
jno
push
mov
jp
mov
out
lock
addr16
mov
xorl
mov
push
in
inc
enter
adc
jge
dec
inc
loopne
arpl
in
je
pushf
sub
or
push
mov
sub
dec
fcoml
push
mov
jmp
test
pushf
shl
adc
cmp
mov
in
insb
or
pop
mov
push
dec
mov
pop
lret
lods
mov
sbb
bound
jl
dec
jo
mov
dec
test
pop
and
push
ret
das
ds
mov
aaa
cmp
mov
scas
mov
mov
cmc
jno
fs
int
insb
movsb
add
bound
mov
popa
dec
fwait
adc
push
ja
in
sbb
push
out
in
cmp
lea
inc
pop
adc
push
in
jge
pop
ss
jp
inc
js
popf
outsb
jns
insb
pop
aas
leave
pop
xchg
test
sub
jl
test
sbbl
inc
fwait
js
push
int
aam
in
mov
jmp
xchg
dec
pop
sbb
inc
repnz
sub
les
frstor
mov
popf
and
lods
xorl
lds
loop
mov
stc
sbb
outsl
sbb
xorl
mov
add
inc
mov
mov
lods
mov
xchg
xchg
push
adc
inc
incb
mov
pop
jg
mov
dec
fwait
hlt
lds
xchg
imul
pop
in
mov
fmuls
cmp
mov
dec
gs
bound
sbb
mov
test
test
mov
fwait
into
push
fsubs
and
lcall
push
loope
adc
fcos
pushl
aaa
out
cmpsl
addr16
xlat
xor
or
mov
adc
add
bound
test
fiaddl
xchg
shll
cmp
cmp
js
jp
mov
inc
sub
je
cmp
jecxz
inc
cmp
mov
fdiv
jno
and
mov
add
shlb
outsl
jnp
lea
cmp
test
jns
cmp
pop
mov
cli
sub
pop
or
pavgb
xchg
mov
push
lock
mov
pop
sti
ret
inc
or
enter
in
xchg
mov
fnstsw
mov
mov
lahf
repz
cmp
outsb
mul
push
push
mov
cmp
rolb
bound
jl
aam
ficompl
dec
call
int
addr16
and
repnz
cs
test
orb
lret
jae
insl
ror
inc
mov
add
stc
mov
inc
mov
out
lahf
inc
insl
dec
adc
and
aam
sarb
dec
lcall
out
sti
int3
mov
rorb
adc
inc
xchg
add
les
pop
fs
xor
sub
push
xchg
xor
int3
cmpl
xchg
mov
jb
mov
mov
sub
mov
out
or
xchg
sbb
add
push
addb
jmp
cs
fdivrl
push
mov
push
add
sub
aaa
lret
cmp
sub
or
in
inc
xchg
sub
pushf
into
sub
mov
outsl
subb
fsts
movsl
in
out
mov
movsb
fisttps
stos
mov
ljmp
jne
fldl
xchg
push
push
add
shll
loope
roll
xor
insl
pop
push
rclb
out
push
mov
add
fcoms
test
fstpl
or
push
mov
sub
cmp
jno
adc
or
mov
shr
nop
bound
xchg
in
inc
dec
jl
cltd
lea
jge
xlat
xor
dec
jp
sbb
daa
push
cmp
push
xchg
sti
add
in
mov
cltd
jno
and
add
sbb
insb
pop
pusha
mov
sahf
jbe
mov
loop
pop
push
cld
sahf
adc
insb
xor
push
lcall
dec
ret
pop
iret
dec
push
or
lret
jle
cmpsb
ljmp
xchg
sbbl
fdivp
push
rcr
jbe
mov
and
mov
div
call
or
mov
fdivrs
mov
cmpsl
aas
push
shlb
xchg
jo
das
push
mov
mov
fnstcw
mov
leave
inc
aad
xchg
int3
mov
pop
lahf
aaa
cmpsl
sbb
ljmp
or
rcrl
jl
xchg
test
sub
jnp
fdivl
inc
cmp
cwtl
cmpsb
or
push
jmp
push
fsts
add
cmp
lock
jecxz
mov
sub
sub
int3
negl
addb
data16
sub
enter
inc
mov
lods
in
out
sbbl
and
xchg
cwtl
std
add
cmp
xchg
inc
lahf
test
adcl
adc
push
mov
and
cli
dec
daa
fwait
cmp
pop
mov
sti
lcall
popf
cwtl
jno
aas
adc
inc
jae
sahf
and
leave
lds
scas
roll
xchg
aas
imul
push
cmp
jp
ficompl
sbb
mulb
or
in
jle
xorb
ljmp
cld
lea
fiadds
out
push
pushf
adc
dec
js
lcall
imul
enter
scas
xchg
aam
cli
mov
leave
jmp
pop
adc
sbb
inc
ljmp
push
ljmp
lret
mov
or
pop
and
fcoml
adc
mov
xchg
jmp
das
mov
inc
and
inc
cmpsl
xchg
mov
mov
stos
or
and
stos
ror
stos
jae
pop
ret
xchg
icebp
mov
out
popa
mov
loop
in
int3
mov
mov
sub
jg
insb
cmp
cmc
stc
test
sbb
push
or
out
jb
into
xchg
in
scas
notl
std
push
test
testl
mov
hlt
adcl
mov
push
xor
push
cwtl
fdivl
lret
rol
or
movsb
xor
cwtl
mov
xchg
mov
in
rcrl
out
cld
push
js
out
gs
shlb
jo
add
jp
pop
mov
shll
faddp
xor
pop
jmp
repz
mov
xchg
add
jo
xchg
sub
or
stos
and
cmpsl
add
cwtl
aam
adc
cmpb
arpl
bound
stos
push
jbe
push
push
fadds
push
mov
sti
cld
sti
mov
arpl
js
cmp
cld
frstor
mov
push
add
out
xchg
repnz
in
sub
maskmovq
testl
mov
lods
adc
ja
js
lods
mul
and
lahf
cwtl
cmp
fwait
pop
pop
adc
adc
mov
xchg
mov
nop
cmp
mov
inc
mov
enter
dec
cmp
push
repnz
insl
test
jecxz
int
out
in
jbe
aas
mov
pop
xchg
mov
or
lret
shll
repz
clc
add
xchg
push
cwtl
mov
mov
imul
sub
mov
int3
mov
pop
add
repz
pushf
pop
arpl
xor
aaa
sub
ja
sub
cmpsb
loopne
push
inc
push
adc
sub
mov
xlat
jns
cmp
jns
push
and
push
dec
negl
jno
jp
imul
cmpsb
fdivrs
pop
imul
mov
in
rolb
and
je
or
cmp
dec
add
mov
sbb
cmp
sarb
mov
or
lds
sub
stos
out
out
pop
or
cmc
enter
clc
into
addr16
cmp
pop
cwtl
lahf
xorl
loop
xchg
mov
push
xor
jmp
jo
clc
fnstenv
push
ret
idivl
jo
xor
jo
mov
shlb
iret
lea
push
in
mov
icebp
je
mov
in
mov
bound
xchg
ljmp
mov
cmp
fdivr
fs
imul
addr16
mov
mov
ljmp
idivl
mov
enter
sti
je
insb
mov
icebp
push
rolb
xchg
sub
pop
loop
sbb
mov
fs
addr16
into
lcall
mov
sbb
fists
pop
jbe
aam
push
addr16
mov
sub
mov
jnp
rorl
cmpsb
sub
pop
in
cs
mov
mov
xor
cmp
xchg
pop
add
loopne
fwait
add
sbb
jecxz
fidivl
icebp
mov
icebp
arpl
mov
scas
mov
nop
imul
add
xchg
xorl
movsb
in
lods
aaa
jne
stc
mov
mov
mov
cmp
in
stos
lea
inc
imul
loop
push
pop
jbe
nop
adc
jecxz
enter
push
xchg
inc
popa
xlat
mov
pusha
ret
fcomip
cwtd
pop
leave
add
adc
push
dec
imul
mov
shrl
mov
jns
push
xor
xchg
les
xor
fcomp
out
cmpsb
shll
outsb
mov
loop
lods
jecxz
adc
pop
and
push
inc
lea
es
xchg
scas
cmp
xchg
popa
das
jg
cli
das
mov
inc
mov
daa
pop
test
add
arpl
lds
mov
js
xor
lea
pop
mov
pop
sub
pop
std
aam
cmp
popa
imul
add
ss
cmp
fs
adc
xchg
push
mov
loope
mov
add
pop
fs
fs
xor
pop
orps
jmp
in
pop
int3
out
pushf
test
fs
lcall
fisubl
lahf
push
mov
das
stc
jl
jle
mov
add
mov
popa
div
or
push
ror
stos
arpl
test
leave
xchg
or
aas
aaa
mov
inc
push
ja
es
pop
loope
popa
popf
imul
mov
jmp
insl
imul
adc
aaa
outsl
push
loope
and
loope
repz
or
movmskps
mov
adcb
add
mov
js
ds
in
aad
inc
adc
xchg
jmp
sub
cmp
and
adc
pop
das
xor
jge
jae
ja
and
and
dec
xor
les
adc
mov
sub
sar
jb
push
sti
mov
in
fdivrl
pop
sub
lds
push
add
xor
add
xchg
sbb
pop
dec
pmulhuw
leave
jb
jl
les
push
cmp
inc
sub
cmc
pop
xchg
sub
fisttpl
push
pushf
lahf
into
cmp
push
bound
sbb
shll
ljmp
in
cltd
xor
adc
dec
insb
mov
xor
int
out
mov
idivb
lahf
add
mov
sbb
jp
cmpsb
pop
lret
dec
add
out
ret
push
cmpb
dec
sysexit
repz
cld
xor
stos
xor
mov
xchg
mov
imul
jnp
arpl
xchg
leave
in
mov
sub
test
testl
insb
das
mov
dec
jmp
jl
sub
mov
shl
xchg
pusha
cmp
ss
add
pusha
and
aaa
jae
popa
add
clc
jns
fiadds
shl
xor
sub
and
lods
lock
filds
sarl
out
jg
push
iret
out
xorl
stos
cs
xchg
movsl
adc
loope
test
jle
pop
xor
sub
xor
ss
sub
add
mov
push
sub
fisttps
clc
mov
cltd
jle
xor
test
jmp
pop
pop
jnp
test
cmp
nop
aas
fistpll
popa
loopne
jnp
loopne
aam
aas
or
aas
pop
gs
xchg
scas
mov
mov
cmc
imul
pop
popa
inc
xor
mov
in
pop
es
cmc
or
xchg
stc
sub
push
dec
ret
in
cmp
pop
mov
lret
stc
xchg
sbb
in
jbe
sahf
insb
push
int
add
int3
pop
rcrb
cltd
dec
xchg
js
test
xor
dec
or
jmp
cmp
cmp
mov
loope
outsb
daa
mov
push
xor
push
push
loop
shl
push
lods
mov
insl
adc
in
test
arpl
sti
cwtl
ret
mov
inc
imul
mov
shl
push
out
iret
int
mov
cmp
mov
mov
divl
mov
mov
add
dec
test
dec
loop
jo
nop
fisubrl
and
lock
cmc
mov
dec
lret
lahf
cmp
or
outsb
sub
std
or
inc
add
dec
cltd
scas
repnz
mov
lds
mov
cmpsb
inc
add
lods
and
popf
lock
sbbb
int
imul
cmp
sbb
add
cltd
xor
xchg
fdivr
mov
scas
add
out
movsl
shrb
push
and
imul
rorl
mov
shrb
add
pop
and
sarl
cmp
insb
cmp
je
fnstcw
push
pop
or
loop
cmp
cmp
stc
mov
lods
arpl
and
push
mov
jecxz
jg
sub
fbstp
outsb
imul
mov
popa
loopne
mov
xchg
hlt
outsl
jle
lods
sub
enter
cmpsb
push
addr16
shl
popf
jecxz
sbb
inc
test
mov
xchg
jnp
add
into
outsb
fsubs
sub
mov
xchg
imul
sbb
popa
lcall
xchg
add
push
popf
mov
roll
scas
insl
mov
out
xor
shll
adc
int3
adc
pop
enter
je
mov
mov
jno
cld
fs
or
adcl
dec
adc
sub
mov
ret
xor
inc
or
xchg
or
inc
pop
movsl
and
into
xor
clc
fdiv
shlb
in
adc
xlat
add
add
pop
cmpsl
adc
scas
ftst
rcll
mov
test
ja
inc
pop
fmull
sbb
outsl
cltd
jmp
jl
cwtl
nop
or
shll
mov
sbb
lds
inc
pop
xchg
pop
leave
int3
loop
in
push
xchg
push
out
xor
lock
mov
mov
std
ljmp
shl
dec
clc
rolb
lahf
sub
icebp
mov
mov
divb
pop
push
jecxz
imul
lret
daa
mov
mov
pop
dec
testb
mov
and
mov
lahf
out
bound
fdivl
cmp
fnsave
pop
add
addr16
cmpsl
cmpsb
sub
adc
xor
fisttpll
lods
push
clc
mov
ja
dec
lods
clc
mov
or
and
xor
push
lods
xor
xor
scas
movsb
enter
cmp
bnd
daa
dec
cmp
add
loopne
xchg
push
bound
jo
cmpsb
out
inc
mov
scas
insb
loop
mov
sub
or
jle
pop
jbe
outsb
xchg
xchg
xor
pop
mov
push
or
dec
lea
rorl
mov
xlat
loope
mov
xchg
push
sub
xchg
pushf
mov
in
cmp
jo
or
cmp
adc
ss
cmp
jmp
dec
cmpl
int3
cmp
in
fwait
or
adc
add
sub
xchg
and
pusha
cmpsb
stc
outsb
mov
sub
popa
mov
lods
notl
inc
loopne
subb
outsb
xchg
lret
mov
mov
cmp
in
or
jecxz
cmp
fcom
movsb
ret
sub
jb
cmp
aad
enter
rcl
and
sub
mov
inc
xchg
fldcw
jmp
xorl
std
data16
imul
xor
and
dec
sub
jne
push
jno
push
adcl
ret
lret
mov
push
outsb
adc
xor
clc
repz
or
pushf
popf
mov
mov
cmp
mov
dec
push
dec
test
push
mov
test
dec
jns
outsb
inc
ror
mov
arpl
loop
mov
jg
dec
test
int
int3
jp
ljmp
inc
out
ss
jne
ja
inc
pop
adc
pop
subl
cmp
pop
in
xor
int
push
je
dec
cli
or
adc
lods
jp
daa
call
notl
aaa
mov
adc
inc
mov
fldcw
in
dec
arpl
loop
lods
adc
sbbl
lahf
imul
dec
test
ret
std
cmp
scas
nop
div
mov
and
dec
test
mov
push
mov
sub
fsubs
je
pop
clc
push
stos
pop
mov
jl
js
insb
xchg
idiv
test
in
mov
fmull
clc
push
sbb
aam
push
jbe
js
fwait
cmc
or
pop
jp
imul
xchg
out
pusha
xor
data16
cmp
ja
mov
sbb
cld
insb
mov
movsl
adc
mov
es
or
test
andb
sti
add
push
sbb
ret
cltd
xor
push
sub
mov
push
jno
nop
enter
movsb
add
cwtl
sbb
adc
sahf
sti
fimuls
fucomip
push
adc
outsb
aaa
and
out
bound
cmp
and
and
or
imull
mov
loope
adc
sbb
push
inc
mov
cmp
jnp
ss
adc
push
mov
jg
lahf
cmp
pop
jecxz
inc
roll
ds
mov
pop
push
in
bound
cmc
mov
push
xor
xlat
inc
lcall
pop
out
iret
mov
lods
dec
mov
push
pop
into
shrl
or
shlb
jl
adc
dec
aam
jae
fiaddl
xchg
cld
ljmp
mov
in
std
adc
adc
and
push
push
inc
xor
pop
and
push
cmp
int3
mov
pop
mov
jns
xor
or
dec
cmp
add
cwtl
mov
subb
push
enter
cmp
mov
mov
dec
push
mov
int
iret
xlat
stos
cmpsb
mov
and
add
inc
cmp
xor
dec
aaa
fcomi
cmp
outsb
sub
orb
mov
push
bound
and
or
icebp
inc
push
cli
sbb
push
jne
or
jne
sarl
clc
sbb
mov
loop
movl
mov
pop
arpl
jne
cmp
add
popf
lds
sub
cmp
xor
add
lds
in
lds
mov
pop
pop
pop
mov
test
mov
enter
mov
lock
or
dec
jb
pop
mov
ds
fdivrl
es
leave
lret
test
push
pop
inc
lds
sahf
adc
add
xor
pop
mov
or
xchg
add
fadds
push
jno
jle
mov
cmp
mov
cmp
xchg
xor
les
push
xor
xor
jno
es
arpl
je
mov
mov
and
popf
ficoml
and
imulb
rcrb
add
adc
incl
enter
repnz
ja
loopne
or
xor
arpl
xor
divl
fisubrs
pop
test
int
stc
mov
ds
push
fsubrl
mov
cmp
js
mov
cmp
rorl
insl
push
fstl
jnp
jbe
add
subl
xlat
repz
jge
in
call
outsb
lea
in
mov
movsl
add
inc
mov
rclb
std
inc
clc
pop
sti
aaa
sahf
ret
xchg
stc
jl
jne
popa
loopne
adc
fdivrl
adc
cmpsb
cmpsl
push
popf
and
sbb
mov
imul
es
je
jne
data16
into
ss
iret
pusha
lods
leave
enter
xchg
jp
mov
clc
push
xor
ss
push
push
mov
inc
divb
jp
xchg
xor
pop
mov
dec
xchg
and
iret
jg
sub
mov
sahf
or
mov
sahf
enter
mov
xor
movl
incb
dec
pop
or
dec
sti
adc
mov
sbb
ja
xchg
lahf
dec
je
shr
or
xchg
loop
xor
lds
cltd
ds
ljmp
adc
and
iret
movsb
dec
jl
je
dec
add
fadds
sbb
sbb
and
loope
adc
insb
sub
mov
call
cmp
imul
lock
push
mov
xor
cmp
je
xor
cs
in
mov
lds
dec
add
aaa
out
cmpsl
jle
mov
sbb
nop
and
data16
jp
fidivrl
nop
jae
jae
test
hlt
jae
dec
inc
test
insb
dec
enter
pop
dec
pop
insb
mov
xchg
sub
data16
out
cmp
cwtl
enter
and
fs
leave
lret
mov
push
jae
inc
push
leave
sbb
xor
jl
mov
xchg
mov
push
loop
mov
out
addb
mov
pusha
fcmovnb
std
add
xchg
sub
outsb
xor
or
jmp
sbb
jne
or
loopne
mov
out
or
and
xor
cmc
addl
cli
loop
repz
bound
cld
loopne
lcall
gs
push
stos
xor
jl
or
hlt
adc
jg
data16
cli
cmpsl
cmp
mov
jae
cs
lock
adcl
rcrl
xor
mov
adc
mov
mov
push
out
jb
addl
shrb
sbb
in
enter
mov
push
nop
daa
fstpl
mov
dec
into
push
pop
fisttpll
adc
mov
push
iret
add
mov
les
xchg
scas
jmp
minps
mov
ficoml
fsubr
mov
adc
mov
lds
mov
sub
in
cmp
pop
mov
popf
push
push
mov
les
mov
int3
into
sbbb
mov
fxch
dec
out
scas
andl
mov
mov
ja
xor
dec
inc
popa
je
or
pop
int
jecxz
andl
add
push
mov
mov
daa
push
and
jmp
test
adc
das
idivb
push
ficomps
inc
pop
testl
pop
xlat
push
div
mull
inc
js
inc
dec
lret
jae
cltd
data16
sti
pushf
popf
inc
jle
jae
lahf
js
mov
cmp
xchg
lret
in
insl
cmp
cltd
lret
outsb
xor
mov
pextrw
sahf
and
sub
push
push
subb
das
sbb
mov
ret
pop
out
test
dec
and
loop
pop
dec
mov
adcl
push
mov
mov
sti
lahf
cmc
jge
dec
jne
jne
mov
mov
loope
int
dec
cmpsl
jnp
xlat
sti
pop
rcll
repnz
fisttpl
pop
xor
mov
jb
pop
jle
lahf
mov
jo
xor
sbbb
nop
clc
sti
sub
mov
mov
sub
add
test
or
xchg
mov
rolb
aad
imul
sti
lahf
add
stc
jnp
jmp
jl
lods
cs
and
xlat
faddl
test
pop
popa
and
popf
dec
inc
pop
xchg
jbe
mov
and
ja
aas
loop
stos
mov
sbb
lds
or
imul
dec
shrl
add
mov
add
jno
addr16
ret
in
pop
mov
es
out
xchg
xchg
std
int
mov
xor
adc
cmp
loop
xlat
cs
inc
shrl
mov
subb
das
les
scas
loopne
or
fisubrs
dec
popa
sbb
cli
sbb
jnp
daa
inc
insb
pop
lcall
push
cld
lds
in
ja
subb
imul
test
std
push
cwtl
pop
adc
ret
pop
in
int
orl
lock
cmp
repz
dec
cmpsb
and
into
popf
loopne
mov
add
es
test
mov
jg
xchg
xor
mov
push
and
inc
and
jp
fcompl
outsl
add
push
mov
les
push
and
lods
pminsw
lock
jmp
push
lret
fldcw
sbb
push
nop
mov
mov
fsubs
sbb
inc
adc
dec
fisttpll
in
pop
into
dec
mov
in
insl
fwait
sbb
jl
scas
push
ja
ja
clc
pop
insl
mov
and
cltd
hlt
cmp
mov
in
int3
jle
loop
imul
test
add
xlat
pop
cmp
sub
pop
adc
inc
mov
mov
outsl
jo
mov
fdivs
lret
rclb
add
push
sub
push
cmp
movsb
cmpsl
aaa
rclb
jnp
das
sarb
mov
xor
push
mov
lods
jne
pop
pop
pop
loopne
lcall
lret
cltd
aaa
jne
scas
push
add
shll
cmp
loope
push
cmp
mov
fisubs
add
or
into
pop
jge
xchg
dec
shl
fldcw
jg
nop
jl
mov
pop
pop
jmp
xor
jne
iret
or
jge
inc
les
fisubrs
pop
pop
xor
mov
xchg
into
mov
ror
jo
xchg
xor
mov
or
mov
cmpsb
outsb
decl
mov
mov
sti
xlat
ret
outsl
cmc
dec
fisttps
test
push
arpl
movsb
fldcw
dec
xlat
xor
into
jnp
in
pop
jmp
idivl
jmp
loop
pop
xchg
jae
add
test
jecxz
sub
mov
add
xor
xchg
out
inc
repnz
adc
mov
mov
lods
push
cs
imul
push
push
popf
jno
pop
sti
mov
sub
fwait
aam
out
repz
push
scas
jmp
in
mov
and
fwait
pushf
xchg
mov
and
lret
sbb
push
pop
out
cmp
sbb
into
int
int3
mov
add
dec
dec
test
xchg
icebp
lods
xchg
mulps
mov
idivl
adc
add
repz
inc
inc
adc
dec
or
mov
lods
and
add
sbb
and
xor
hlt
mov
push
xchg
xchg
jns
test
jae
nop
jg
xchg
and
fstps
ret
mov
nop
sbb
xchg
cmpsb
scas
js
stos
adc
push
out
roll
mov
pop
jmp
cwtl
xchg
in
or
or
push
cmp
aaa
jmp
sbb
fwait
and
mov
xor
mov
jmpw
lahf
test
pop
push
jae
xchg
stos
addr16
test
or
in
stos
test
das
mov
std
test
cmp
and
jmp
xlat
enter
xchg
jb
dec
push
xor
dec
and
sbb
loopne
mov
jmp
jge
roll
sbb
xor
test
aad
pop
mov
stc
leave
mov
cld
jo
xor
fisttpll
push
push
mov
dec
test
test
mov
fs
cltd
add
xor
ret
loop
aas
sarl
cmc
cmpsb
push
mov
pop
sahf
add
or
jp
fidivl
mov
in
arpl
jmp
xlat
dec
outsl
sub
pop
cmpb
ds
in
or
stos
push
mov
out
inc
rcl
not
mov
out
icebp
push
fsubs
xchg
into
pop
hlt
inc
aas
ja
in
daa
inc
mov
sti
cmpsl
test
cmpsl
shrb
nop
mov
cmp
sarl
mov
mov
xor
push
xchg
je
aam
sbb
arpl
xchg
add
mov
push
mov
fstps
mov
lock
int3
pop
pop
inc
iret
outsb
or
push
sbb
pop
aad
mov
xchg
or
int
addl
js
push
ja
push
enter
in
pop
mov
stos
out
cmpsb
jns
sub
cs
testl
scas
mov
dec
mov
cmp
lods
dec
std
out
push
mov
loope
jge
fnstcw
insl
inc
repz
pop
popa
lcall
mov
pop
iret
andl
xor
out
ds
jb
out
push
out
std
bound
es
enter
pop
pop
mov
jno
mov
xchg
filds
rorb
sahf
pop
cltd
mov
or
jmp
movsl
xor
fsubs
inc
pop
leave
xchg
pop
mov
rcrl
lock
cmpsl
mov
movsl
enter
out
lods
sub
push
mov
cld
inc
sub
fdivs
es
inc
sbb
add
push
test
adc
mov
pop
nop
leave
mov
sub
push
dec
xchg
in
pop
iret
push
loop
sbb
jo
jne
jmp
or
push
es
jnp
xchg
sub
sub
jg
lret
cmp
mov
call
lods
es
aas
add
iret
sahf
jle
shlb
mov
push
pop
xor
xchg
mov
mov
inc
ret
in
xor
loope
push
icebp
out
mov
pop
xor
mov
add
fisubrs
test
push
dec
push
push
mov
jno
pusha
lds
add
dec
into
js
out
jno
or
jmp
loopne
xchg
pop
movsl
sti
jo
mov
xchg
je
imull
js
popf
cmp
cwtl
addr16
cmp
jnp
mov
rcll
jmp
or
xchg
inc
mov
dec
bound
mov
mov
outsb
jg
jne
jns
repnz
int3
orl
xchg
outsb
sahf
popa
mov
aas
and
inc
cmpb
mov
xlat
mov
aas
sub
imul
leave
push
dec
iret
sbb
outsl
paddw
lret
clc
ficomps
rolb
int
loope
add
sbb
pop
sbb
sbb
or
mov
mov
jmp
mov
mov
add
clc
popf
cmp
into
stc
aad
pop
mov
jp
jge
push
or
cmc
or
cmp
adcl
out
push
clc
or
jl
and
rcrl
mull
cmc
cltd
lock
pop
data16
out
jge
loope
push
jmp
jle
xor
and
les
fnstenv
sbb
ljmp
mov
stos
xchg
add
pop
pop
cld
ret
mov
and
cwtl
imul
insb
jle
rorl
push
inc
cwtl
cmpsb
popf
inc
or
mov
cltd
xlat
push
mov
xor
arpl
inc
iret
dec
dec
lds
inc
jae
insb
loop
dec
insl
adc
test
dec
push
sbb
fcoms
divl
jg
lock
mov
inc
or
mov
out
lods
mov
insl
dec
xor
bound
ja
lock
pop
fdivs
cltd
aas
sti
ds
out
lret
dec
test
out
out
insl
scas
fstpl
stos
js
out
outsb
idivl
dec
addr16
add
aaa
les
iret
in
cmpsb
addr16
mov
sbb
add
outsl
xor
or
pushf
or
iret
outsl
xchg
lock
ret
int
rorb
jnp
fdivrs
sbb
add
push
fisttpll
xor
sar
xor
sbb
mov
les
mov
xchg
fsubl
and
mov
inc
das
pop
add
addl
test
mov
fwait
sahf
in
pusha
outsl
and
sub
sub
fs
sarb
inc
and
push
mov
add
mov
arpl
mov
andb
add
fsubs
jbe
and
gs
jb
xchg
dec
mov
stos
rolb
cmp
pusha
shrl
xor
popf
adc
or
pushf
outsb
and
inc
jecxz
in
cld
and
out
dec
fildl
into
or
mov
hlt
add
ficoms
enter
lock
sbbl
test
fcmovnu
dec
enter
pop
sub
mov
push
sahf
cs
leave
jle
loop
jp
ficomps
insl
lods
shr
dec
or
or
sbb
idivl
xchg
fldt
mov
clc
sub
jle
fwait
mov
xchg
arpl
cmp
pop
dec
adc
pop
add
mov
ds
push
xchg
mov
cltd
imul
mov
iret
call
adc
and
cmpsb
xchg
cmp
inc
rorb
and
mov
lods
mov
cmc
xchg
loopne
inc
icebp
jg
pop
lods
aam
lods
mov
sub
sbb
xor
add
addl
mov
and
push
mov
in
inc
iret
add
sarl
scas
fildl
sub
fistps
mov
or
cmp
test
cwtl
adc
mov
iret
sti
dec
sarl
popf
xor
xor
stc
pop
int3
je
sahf
movsb
fs
in
mov
and
inc
inc
outsl
jge
jge
test
and
les
jae
jle
ds
mov
push
xchg
mov
cmp
icebp
add
lcall
xchg
cmp
out
sub
arpl
stc
push
rorb
in
or
lods
pop
xor
imul
out
push
xor
adc
in
loop
lret
ljmp
push
out
xchg
and
outsl
scas
dec
dec
subl
xor
ljmp
jns
inc
sbb
fs
lahf
int
mov
pop
pop
jns
cmp
push
xchg
dec
dec
cmp
fmull
jae
inc
pop
inc
in
jns
mov
xor
mov
mov
mov
mov
jp
es
cld
or
repz
xchg
and
and
shrb
fidivl
movntq
push
sub
pop
scas
adc
xchg
cli
cmp
xor
mov
hlt
and
mov
push
repz
fstps
imul
bound
mov
les
cmc
inc
inc
jp
pop
movsb
out
ret
mov
xchg
xor
xchg
push
aad
xor
jb
mov
xlat
sbb
lret
fsubrs
fsubl
adc
pop
xchg
ret
push
pop
jecxz
xchg
mov
xchg
in
ret
ja
pop
inc
mov
mov
std
sub
fisttpll
cmp
mov
push
adc
pop
sbb
stos
jecxz
fldt
movsb
dec
cmp
lods
scas
jnp
inc
xchg
sbb
clc
sarl
pop
imull
dec
fdivl
lahf
notl
add
stos
sti
push
xchg
sub
enter
sbb
cmp
sbb
cmp
test
shrl
lods
lock
jbe
xchg
push
test
in
push
jae
mov
sbb
sbb
aaa
push
push
outsl
and
mov
push
pop
mov
in
sub
push
xchg
cmp
movsb
lods
push
aad
lret
ret
or
inc
xor
add
mov
xlat
mov
lahf
fimuls
or
dec
enter
push
push
or
mov
in
repnz
mov
repz
inc
stos
mov
xlat
nop
movsb
aam
push
addl
mov
and
call
push
mov
shrl
cmp
mov
sub
or
dec
ficomps
xchg
cmc
test
loop
jmp
jle
call
and
fdivrs
pop
outsl
push
mov
xor
lock
dec
inc
shrb
lret
stos
out
ds
jle
mov
loop
cmp
or
repnz
jbe
sti
jno
out
mov
or
push
je
jp
xchg
mov
in
or
and
xchg
popa
mov
mov
mov
les
add
jle
inc
sbb
xor
push
mov
aam
test
scas
xchg
adc
ret
push
cltd
pop
mov
sbb
jne
ja
out
dec
out
mov
mov
not
push
sbb
lock
shrl
repz
pop
pop
cwtl
and
or
jae
pop
scas
call
or
mov
cmp
sub
jns
cs
lods
bound
inc
adc
sub
xchg
xchg
mov
aam
dec
or
dec
inc
out
push
jae
int3
pop
jae
push
and
loopne
lahf
jb
lds
jmp
adc
xor
out
data16
outsl
adc
sti
mov
lret
fistps
cmp
mov
push
cwtl
inc
insb
andb
mov
pop
lret
push
cltd
mov
and
shlb
outsb
push
iret
sub
js
xchg
test
push
jl
shlb
loop
mov
mov
sub
movsb
nop
mov
sub
mov
fdiv
icebp
xor
fimuls
lret
or
push
jp
das
mov
mov
sbb
xor
jmp
mov
ja
gs
cmp
inc
sub
ljmp
or
mov
jno
xor
int
test
push
xchg
push
and
mov
int
aad
imul
jecxz
mov
or
adc
push
adcl
lret
jge
dec
stos
mov
xchg
and
movsb
adc
jge
mov
mov
cld
pushf
fcoms
hlt
xlat
mov
movsl
or
out
rolb
test
add
inc
test
stos
dec
push
jnp
cmp
sbb
xchg
xchg
ss
jp
adc
test
adc
lcall
adc
mov
ret
mov
daa
jl
loopne
pop
push
outsl
lods
dec
xor
mov
sbb
movsb
je
rclb
adc
pop
sbb
mov
std
xor
jae
sti
jle
icebp
mov
leave
cmpsb
dec
mov
inc
sub
inc
iret
lock
into
std
push
cmp
cmc
jp
push
sub
leave
test
pop
jecxz
rorl
dec
dec
push
aas
loopne
pop
push
lret
and
xor
fdivp
mov
add
repz
or
enter
jp
decl
orl
mov
cwtl
add
scas
inc
mov
or
jns
jns
test
addb
pop
sbb
xchg
sbb
xor
nop
jge
fidivrs
inc
mov
cmpsb
in
addb
fcoml
lods
and
cli
aad
dec
out
adc
lret
lahf
lods
and
and
mov
mov
pop
pop
jmp
scas
mov
and
cmpsb
jno
test
std
xchg
popa
and
or
push
mov
xchg
sahf
mov
xchg
and
sahf
rorl
test
dec
fdivs
and
jns
mov
outsb
insb
cmp
or
xor
addl
cmp
ret
push
push
sub
jo
popa
leave
xor
leave
sbb
movsb
or
clc
cmp
lods
outsl
mov
lea
mov
lds
push
aas
cli
mov
repz
ljmp
and
test
stos
lea
dec
or
stos
ja
dec
mov
inc
and
filds
push
movsb
pop
xlat
push
int3
sub
mov
jne
ret
adc
mov
daa
rcrb
add
push
jae
mov
repz
jb
xchg
bound
aaa
iret
stos
lcall
subb
cmp
sub
pop
dec
pop
add
fs
inc
std
push
icebp
das
inc
push
jnp
stos
test
fmull
mov
mov
push
adc
fldt
outsl
push
xor
ja
fcmovnu
dec
sbb
roll
ret
icebp
add
cwtl
movsl
and
in
inc
lret
sub
sbb
pop
test
orl
add
sti
out
lea
mov
jmp
push
cmp
ljmp
lods
inc
leave
mov
adc
push
xchg
mov
cmc
testb
int3
test
fidivrs
or
mov
mov
mov
cmpps
xor
and
sarb
mov
movsb
sub
add
and
das
add
xchg
popa
filds
int3
lds
xor
and
or
xchg
jnp
xchg
fisubrs
lret
lock
stc
cmpsl
jns,pn
jmp
fcmovb
add
icebp
adc
jae
inc
or
push
icebp
out
jne
mov
push
sbb
mov
lea
arpl
xor
sbb
mov
rorb
test
popf
add
jo
and
dec
ljmp
jmp
std
xor
and
in
push
mov
ja
cmpsl
or
sbb
add
cli
dec
nop
jo
and
jl
loop
es
popa
mov
sti
or
or
add
inc
adc
out
add
add
mov
neg
mov
enter
jmp
adc
mov
sbb
sub
jg
cwtl
scas
mov
pop
out
insl
ljmp
iret
mov
cs
in
adc
push
mov
sbb
sbb
jl
cs
dec
and
pop
iret
arpl
push
idivl
div
sbb
into
mov
or
jp
add
pop
xchg
sbb
jp
jne
push
test
mov
in
idivb
inc
cmp
push
lods
and
mov
rol
mov
sbb
add
cmpsb
jbe
jno
iret
ja
pop
std
push
cmc
addr16
sub
hlt
cwtl
inc
data16
jmp
in
insb
inc
lcall
inc
and
dec
push
push
inc
cmpsb
in
dec
int3
sbbl
and
faddl
mov
out
fwait
mov
lods
call
mov
mov
mov
ret
push
xchg
mov
repnz
mov
jmp
dec
out
dec
mov
cmpl
sahf
loope
shlb
jb
mov
adc
mov
icebp
jo
outsb
push
jno
xacquire
inc
mov
jg
lods
orb
shlb
mov
add
ret
or
cmp
lea
inc
daa
or
das
pusha
push
orl
mov
repnz
jmp
int3
cmpsl
mov
mov
imul
movsl
push
push
adc
ja
sbb
xorl
xchg
add
scas
inc
dec
jno
je
mov
xchg
push
test
movsb
inc
cmp
xor
fimull
ljmp
adc
push
imul
enter
test
push
or
lea
ja
mov
adcw
xchg
addl
sti
adc
push
bound
mov
rcll
fcmovnu
push
push
mov
dec
test
mov
sub
mov
or
in
int3
outsl
mov
mov
rcrb
or
fsubrl
cmp
outsl
stos
push
inc
adc
rorb
mov
dec
ror
fnstsw
push
aad
inc
push
imul
inc
daa
rcr
clc
and
cmc
loop
dec
into
insl
test
bound
or
pop
push
enter
int
adc
mov
or
mov
lea
push
xorl
mov
add
cli
clc
jle
push
add
adc
ja
jbe
push
std
leave
repz
clc
inc
sub
add
lods
fidivrl
cli
dec
add
call
int3
call
cld
into
mov
pop
xchg
xchg
sbb
in
and
fcomps
fadds
xor
shlb
setl
cwtl
repz
imul
stos
mov
js
push
aaa
shll
call
lods
arpl
int
adcl
scas
and
dec
scas
sub
mov
fmull
jmp
mov
cli
daa
notl
ljmp
lret
mov
jge,pn
push
mov
xchg
daa
pop
jnp
stos
mov
mov
roll
insb
imul
insb
je
dec
sbb
arpl
sbb
push
add
push
mov
mov
cld
shrb
xchg
sub
dec
and
jg
outsl
mov
add
js
lods
xchg
fidivs
cmc
cmp
adc
adc
mov
lds
jnp
out
fdivrs
jo
adc
out
push
xchg
dec
insl
icebp
je
lea
pop
sub
push
outsb
daa
mov
xor
sbb
dec
push
inc
inc
push
sub
lahf
pop
inc
dec
je
mov
or
adc
xchg
lds
jle
and
mov
in
movsl
ds
hlt
dec
ds
xor
movsb
int
mov
inc
sbb
push
sbb
out
mov
dec
ss
int
pop
push
xchg
xchg
clc
std
mov
xor
jle
cli
inc
xor
xchg
xor
adc
inc
lds
aas
add
ficomps
mov
mov
or
std
inc
das
jp
dec
loop
inc
pop
pop
lea
and
imul
mov
or
aaa
movsl
rol
mov
dec
imulb
stos
xchg
movsb
outsb
inc
xchg
movsb
sarb
gs
mov
push
sbb
es
push
mov
push
sub
mov
inc
jmp
sub
jo
pop
in
dec
repz
pop
mov
pusha
xchg
adc
popa
cmp
sub
cs
push
sti
sarb
xor
and
int3
popf
insb
sub
ss
push
dec
mov
inc
int3
scas
jns
aaa
pop
call
cmp
xchg
out
sub
stos
lahf
or
xor
inc
call
movsl
lea
fdivs
or
arpl
mov
push
sub
fldl
jmp
loope
leave
or
mov
sub
jo
ret
fmull
and
out
cs
jns
cwtl
inc
cmp
xor
jns
inc
fisttps
loop
lcall
mov
mov
rcrl
and
xchg
jp
jle
lcall
stos
cmc
mov
push
xor
insb
mov
icebp
pushf
dec
or
pop
mov
lds
adc
adc
jmp
fmul
sbb
jo
or
mov
lock
cmp
lods
or
mov
push
jbe
push
out
mov
jns
fldenv
jo
jns
scas
sbb
inc
loope
xchg
and
sub
jle
addr16
xchg
jg
adc
test
push
rclb
push
aas
mov
std
iret
shr
repnz
scas
xor
adc
push
inc
mov
ljmp
addr16
adc
cli
cmp
cwtl
pop
mov
popf
in
in
xor
gs
inc
add
mov
inc
pop
mov
fs
xchg
popf
jne
shrb
and
pop
xchg
aam
fistl
cltd
pusha
fiadds
in
scas
popf
mov
dec
or
enter
lea
lcall
add
mov
and
mov
xor
dec
mov
dec
int3
fmul
adc
add
dec
inc
jp
xchg
push
inc
hlt
mov
xchg
ficomps
jne
shr
cmp
sbb
push
mov
je
nop
dec
ss
cld
xor
push
jo
fdecstp
hlt
push
inc
les
pop
mov
mov
icebp
mov
fsubrs
fmuls
pop
pop
int3
out
pusha
xchg
mov
aas
jno
sahf
bound
iret
xchg
incb
mov
push
mov
adc
outsb
jle
imul
nop
cmp
add
stos
sbb
rcll
jbe
pop
pop
jae
xor
adc
mov
aas
fcoms
jge
daa
scas
lods
fildl
or
cmpl
loop
shrl
loopne
orl
adc
jp
fldt
xchg
sub
movsl
cmp
cli
pop
xchg
inc
lcall
pop
hlt
push
mov
fxtract
xor
popf
inc
lock
int
int3
push
cwtl
mov
add
mov
sub
mov
lods
inc
adc
in
es
shll
cwtl
popl
cmp
lock
or
xchg
mov
sbb
sbb
out
mov
pop
cs
xchg
pop
inc
outsb
sarb
xor
repnz
cmc
sub
negb
out
mov
add
mov
std
aas
loop
jg
pop
lahf
or
mov
and
mov
ja
aas
aaa
dec
pop
xor
mov
pop
fbld
push
or
xor
popf
loop
inc
mov
loop
mov
add
ficomps
fmull
xor
fistps
push
mov
mov
aad
xor
xor
jmp
repz
xchg
lock
mov
sti
mov
cmp
popa
ret
push
jl
call
rorl
aad
add
jg
and
pop
les
loop
notb
or
cmpsb
stc
cmp
jp
stos
cli
mov
dec
call
push
loopne
xchg
push
call
movsb
insb
pop
call
adc
data16
in
adc
cmp
dec
add
data16
lods
push
sub
mov
xchg
push
int
cmp
cmp
jbe
aam
dec
xor
mov
adc
fwait
lds
inc
ja
jnp
xchg
adc
inc
add
xor
mov
push
cld
and
add
adc
sbb
adc
popa
dec
jp
into
mov
pop
push
mov
ljmp
movsb
cltd
fwait
pop
in
cmc
push
push
stos
cwtl
jno
and
pushf
iret
sahf
sub
das
inc
and
sti
mov
into
cli
decb
pop
push
fsts
push
loope
dec
jl
mov
dec
pop
iret
sub
cmp
cli
inc
daa
out
jecxz
scas
adc
imul
data16
and
cmp
cmpsb
xor
out
pop
jecxz
imul
mov
pop
les
and
and
jecxz
mov
pop
cli
mov
mov
cwtl
add
xchg
mov
ja
fs
aas
mov
lds
ljmp
data16
push
iret
push
int
add
mov
jp
rep
mov
jg
jle
and
call
nop
fisubrs
push
stos
xchg
cmc
lea
dec
les
push
xchg
test
nop
movsl
xor
pop
fs
repnz
push
in
xor
sbb
inc
adc
jo
pop
mov
mov
push
cmp
or
movsb
adc
jne
inc
dec
insl
dec
mov
js
xchg
aad
data16
sub
adc
push
mov
xchg
jle
movsb
cmp
insb
push
arpl
loop
pop
xor
mov
add
hlt
int3
lods
rolb
jno
dec
out
aaa
pop
in
inc
push
xchg
or
mov
sbb
cmp
fcoms
das
shlb
bound
mov
ss
mov
icebp
aad
lds
push
cmp
out
push
arpl
xchg
or
js
sub
test
sahf
pop
push
or
movsl
xchg
or
jl
jo
rorl
pop
or
movsb
pop
lock
lds
jg
mov
xor
or
sub
cmpsl
cmp
sbb
lods
xchg
sub
iret
xor
imul
xor
xor
mov
fmulp
aas
pop
int
fcmovnbe
jecxz
jne
js
jno
outsb
xor
ret
add
out
movsl
call
sti
push
cltd
stos
or
push
cltd
add
dec
fisttps
fwait
mov
insl
fwait
pushf
add
subb
lcall
fs
sub
out
mov
scas
pop
and
cmp
and
adc
xor
add
mov
in
xchg
inc
adc
outsl
xor
fcomps
push
push
add
iret
ljmp
aad
lds
cmpb
pop
ret
jmp
les
lock
jle
pushl
clc
iret
cwtl
xchg
adc
sti
call
push
insb
nop
aad
in
dec
idivb
outsb
enter
out
pop
add
pop
dec
shr
mov
int3
aam
aam
fcompl
in
shrl
mov
in
dec
mov
add
and
dec
pop
std
xor
inc
pop
into
and
xchg
das
mov
or
xchg
pusha
inc
fs
push
xor
xor
pop
sub
in
paddw
pop
sbb
cmpsb
arpl
iret
nop
mov
push
xor
scas
push
add
dec
inc
sub
mov
bound
or
cltd
and
lret
jmp
xor
ds
fs
adc
clc
hlt
xchg
roll
mov
and
icebp
sbb
add
outsl
mov
push
cmp
bound
jno
aad
cmp
call
arpl
mov
repz
xor
adc
in
out
push
push
mov
mov
jmp
mov
jb
cmp
out
cli
add
adc
pushf
sub
fcomps
out
fsubs
lock
push
cmpb
fidivs
sarl
sub
push
mov
pop
mov
mov
clc
das
mov
ja
into
nop
mov
adc
add
lcall
sub
mul
xchg
mov
xor
jge
jle
mov
sbb
mov
push
fildll
sbb
pop
sub
ljmp
or
fcmove
and
lods
icebp
pop
sbb
mov
adc
insl
out
lret
xchg
sub
aaa
ljmp
test
cmp
test
mov
jns
adc
xchg
pmaddwd
inc
push
cwtl
les
fdivrs
sub
in
in
ja
jns
cmc
repz
mov
mov
test
xchg
clc
pop
outsb
fs
sbb
dec
jmp
out
xor
ja
std
shrl
outsl
push
inc
adc
xor
sbbb
push
dec
in
push
adcb
mov
jns
push
jge
push
push
fwait
mov
sti
pop
jae
cmpb
adc
inc
mov
aaa
pop
cli
imul
or
insb
mov
into
mov
push
dec
loopne
daa
pop
inc
ja
fidivs
stos
shrd
cmp
pop
dec
push
jmp
pushf
cmp
shl
jg
adcl
notl
and
movsb
add
push
cmpsl
rcr
xchg
ljmp
cltd
enter
adc
int3
cmpl
popa
loope
add
loop
mov
push
mov
pop
cltd
pop
out
cmp
stos
incb
shlb
les
mov
dec
int3
jae
lret
or
pop
mov
in
call
jg
cmp
or
lods
repz
rcl
adc
cmp
fcom
pop
add
and
dec
jo
pop
ffreep
rol
xchg
adc
ror
mov
xchg
xor
insb
pushf
pusha
and
iret
icebp
cmp
lods
dec
in
or
shl
stos
sbb
iret
push
pop
push
setg
out
hlt
dec
add
repnz
clc
or
scas
cli
or
mul
pusha
inc
movhps
fnstsw
outsl
jmp
jns
repnz
test
loope
or
in
insb
add
ret
xchg
cli
jecxz
mov
stc
loope
mov
cwtl
add
outsb
call
clc
clc
and
cmp
in
push
pushl
pushf
dec
lret
xchg
ret
idivl
pushf
das
jb
or
mov
or
jne
xchg
scas
movsl
subb
addr16
push
sub
ds
cmp
cmc
sbbl
int
outsl
jp
das
test
dec
add
mov
lds
mov
movsb
and
out
inc
push
in
push
std
jnp
cmp
add
push
adc
pusha
xor
test
or
int
xor
out
xchg
xor
dec
add
jb
pop
fdivp
std
push
aad
push
push
ret
inc
push
xchg
addr16
mov
xor
xchg
stc
movsb
jb
pop
inc
or
out
xchg
mov
inc
aad
call
sbb
sub
out
adc
xlat
inc
dec
add
push
pop
mov
sbb
in
jnp
loop
lahf
or
push
lret
leave
lahf
mov
sub
jno
jns
inc
xor
lcall
dec
xchg
sub
fnstcw
sub
push
movb
mov
mov
lods
movl
stc
int
pushf
mov
pop
aas
xchg
and
adc
subl
jmp
add
jmp
and
jge
aas
std
gs
mov
aad
lock
push
ss
sub
add
mov
dec
fwait
shl
out
cltd
xor
scas
cmp
mov
icebp
mov
sub
gs
in
fnsave
sub
mov
sub
dec
push
add
cmpsl
add
sahf
in
mov
mov
lods
mov
sub
int3
iret
mov
add
stos
jnp
mov
repz
mov
movsb
adc
rolb
pop
aam
fdiv
iret
cmpsb
lret
das
sbb
push
mov
lret
sahf
in
hlt
add
pusha
adc
xchg
add
pop
xchg
mov
outsb
repnz
cwtl
jmp
inc
mov
enter
adcl
popf
sbb
cld
shr
and
push
xchg
or
xchg
imul
aaa
out
adc
decb
add
xchg
cmp
jnp
pop
inc
pop
aaa
nop
xchg
out
mov
lods
iret
push
and
mov
adc
mov
es
int
and
ret
add
or
mov
xor
in
imul
jnp
outsb
mov
inc
jb
loope
cmpsl
ljmp
or
push
sbb
lcall
stc
or
jb
test
aaa
push
movsl
and
mov
push
mov
jae
lods
cmp
jl
fnstcw
pop
sub
clc
push
mov
lcall
mov
lahf
movsb
inc
and
mov
adc
mov
ret
pop
in
mov
push
popa
pop
test
dec
data16
and
adc
imul
xlat
mov
add
mov
dec
xchg
xchg
mov
push
mov
xor
jp
mov
push
cmpsl
adc
rcl
mov
dec
in
cmpl
adc
sbb
xor
jo
icebp
lret
xor
sub
in
iret
std
mov
add
jns
or
orb
mov
ret
dec
stc
sub
sarl
jp
jnp
add
daa
add
mov
fucomip
js
sub
or
ret
shrb
pushf
jecxz
jnp
scas
jo
mov
push
out
inc
ret
bound
and
pop
cwtl
add
pop
out
insb
test
cmp
sahf
cmpb
push
push
adc
fmul
push
pop
push
test
sbb
in
nop
cltd
jl
testl
pushf
pop
or
mov
pop
dec
mov
fldt
pop
and
mov
aas
bound
mov
adc
fs
clc
and
cmpsb
push
push
test
movsb
pop
clc
aam
icebp
mov
sahf
popa
xlat
mov
aas
mov
repnz
movsl
jl
pop
int
adc
mov
sbb
clc
xor
fwait
mov
mov
cmp
lea
daa
fcmovnb
js
push
pop
mov
jno
divl
pusha
jg
in
in
adcl
imul
out
clc
das
scas
push
out
jns
in
mov
cmp
call
lock
or
jb
jbe
mov
aad
repnz
rclb
daa
int
pop
inc
into
push
mov
or
outsl
jae
push
inc
rcrl
incb
adc
shl
sbb
pop
fdivl
ljmp
add
jbe
pop
sub
int
lds
in
roll
add
jnp
sar
fldt
or
call
cltd
hlt
mov
dec
mov
imul
data16
sbb
repz
or
fisttpl
fsubr
dec
push
mov
mov
test
cwtl
fstpt
pusha
outsl
mov
or
test
scas
std
and
cli
cmp
mov
cmp
incb
dec
scas
cli
aas
addr16
aad
sbb
in
jne
or
cmp
xchg
inc
pushl
or
adc
pcmpgtb
mov
iret
sbb
or
jne
xchg
fstps
int3
jge
inc
or
adc
xlat
mov
mov
jecxz
pop
cmp
add
sbb
xchg
loopne
repnz
movsl
add
popf
ret
idivl
jae
push
xchg
pop
push
dec
jge
sbb
sub
cmp
mov
or
sbb
ds
loopne
jo
sbb
push
sarb
add
out
xchg
pop
imul
pop
jbe
ret
add
mov
or
cltd
mov
ficompl
xchg
lret
mov
inc
fistpll
sbb
mov
xchg
test
pop
imul
jmp
inc
cmp
fnsave
mov
xchg
js
jmp
shrb
push
dec
cld
popa
je
shrb
sti
sbb
jb
cld
cmpsb
mov
out
and
jae
addr16
xor
jno,pn
mov
mov
loope
jg
shll
xor
cmp
subl
std
fs
inc
lcall
or
mov
push
mov
jecxz
fisubl
les
in
mov
add
mov
lcall
cmp
shl
sbb
dec
out
pusha
xlat
fldenv
test
scas
mov
test
add
inc
xlat
fldenv
inc
shlb
mov
jge
data16
hlt
xchg
test
js
mov
lcall
mov
jmp
and
xor
stc
shrb
test
pusha
jecxz
push
jns
out
movsb
pop
cli
ret
test
cmp
fucomi
test
aad
popw
or
sbb
push
mov
mov
push
out
fnsetpm(287
ljmp
cmp
push
repnz
mov
push
jmp
or
sbb
mov
mov
cmpsb
movzbl
mov
or
jg
add
dec
add
mov
ljmp
in
push
addr16
or
pop
pop
add
push
dec
pusha
push
cwtl
cmpsl
adcl
mov
sub
adc
mov
jnp
aaa
add
in
push
add
out
and
xchg
stos
icebp
mov
ret
or
lea
out
cltd
xchg
scas
push
into
aaa
fimuls
or
adc
aam
shl
sbb
dec
push
call
pop
dec
jo
int
adc
leave
ss
pop
sbb
lret
daa
imul
jbe
sub
mov
icebp
enter
in
ficompl
cmpsl
cld
hlt
add
pushf
cld
ja
mov
lds
aam
inc
sub
cld
in
scas
xor
std
jmp
je
mov
push
xor
mov
dec
mov
xor
and
into
dec
lods
xor
addl
mov
es
xor
push
push
int
push
jne
in
mov
pop
cld
repz
jae
mov
cltd
in
leave
jae
mov
mov
stc
adcl
jp
idiv
int3
stos
or
hlt
cmp
int
inc
push
push
mov
mov
jbe
xchg
loop
inc
icebp
icebp
mov
filds
mov
and
adc
bound
pop
adc
xchg
shlb
or
mov
shl
mov
mov
sbb
mov
data16
pushf
rolb
lods
push
les
mov
dec
sbbb
cld
mov
repnz
mov
les
mov
mov
aas
xchg
mov
pop
or
xor
push
pop
mov
cmp
enter
dec
xor
imul
push
push
push
fnstsw
iret
inc
cmp
jg
mov
inc
cli
mov
xchg
mov
push
jnp
dec
sub
adc
insl
mov
and
js
xor
pop
jmp
dec
push
stc
and
xchg
sub
adc
xor
lret
pop
pop
mov
repz
cld
leave
das
adc
ja
imul
jbe
mov
lret
mov
dec
cmp
add
add
jle
add
js
les
mov
or
nop
pop
pop
int
cmpsb
xor
testb
cmpsl
ljmp
cwtl
fildll
and
stos
dec
arpl
mov
or
cmpsb
call
inc
sub
call
out
cmp
sahf
jg
ja
cmp
popa
inc
mov
sub
jno
rcrb
push
jle
loopne
sbb
notb
and
out
adc
mov
xchg
pop
mov
add
add
adcb
cli
mov
add
dec
clc
dec
fstpl
or
mov
cmp
sub
fmull
mov
pushf
popf
push
add
add
gs
adc
dec
sti
push
fs
pop
xchg
ja
rcrl
jp
mov
out
jb
and
out
xchg
inc
or
addl
loopne
sub
daa
fstpl
stos
push
pop
mov
sti
push
jno
mov
push
jge
xchg
inc
push
filds
push
fwait
loopne
xchg
dec
scas
decb
callw
in
imull
and
subb
fsubr
imul
shlb
xchg
pop
enter
movb
mov
mov
add
push
inc
push
stos
dec
aam
jecxz
push
jo
jns
xchg
mov
sub
xor
ret
fisubs
push
das
leave
jns
sub
icebp
addr16
dec
cmpsl
xchg
in
test
shrb
mul
and
fcompl
jmp
dec
cmpsb
test
push
push
std
pop
and
fsubrs
test
xchg
in
lods
addr16
ret
or
sti
jb
addr16
dec
or
int
imul
enter
xor
mov
push
jno
dec
xor
mov
sbb
cs
lcall
into
mov
inc
cmp
sub
adc
xchg
jae
das
movsl
push
jo
aad
xlat
loop
rcr
mov
dec
dec
jns
xchg
sbb
mov
ds
scas
mov
push
mov
mov
cmp
dec
adc
inc
lret
aaa
jg
js
xor
cmc
dec
cmc
addb
pop
ret
xchg
stos
adc
sub
insb
mov
jns
sub
xchg
pop
repz
push
cmp
sbb
adc
repz
push
jge
sbb
sbb
test
push
lret
push
in
adc
pop
loop
rcrb
ja
ds
jle
jnp
mov
add
jmp
js
sbb
pop
mov
rcll
loop
arpl
dec
inc
in
idivb
sub
dec
jge
lret
fs
test
fistl
out
stos
out
divb
leave
notb
cmp
adc
inc
mov
fisubs
jo
lahf
into
in
fbstp
addr16
sbb
xor
xchg
jmp
lret
loope
and
and
jg
daa
xchg
cmc
sbb
insl
xor
push
xchg
pop
push
and
inc
pushf
xchg
movsb
mov
leave
add
and
dec
mov
pop
adc
jne
add
mov
pop
push
or
jl
mov
pop
shrb
ljmp
and
sbb
test
ffreep
xchg
repnz
add
stos
les
mov
dec
mov
out
push
mov
sbb
lret
xor
ja
outsl
cli
loopne
sub
ret
in
mov
push
mov
mov
cmc
cmp
sub
jnp
jmp
test
cmp
insl
divl
fsubl
adc
and
in
sahf
and
jnp
xor
lret
ss
dec
sbb
clc
lds
addr16
inc
mov
sti
jne
gs
jmp
aaa
jle
stos
stos
aaa
inc
and
jge
jg
bound
scas
fldenv
lcall
das
enter
in
enter
out
adc
cmpb
scas
pop
popf
leave
ret
mov
or
dec
arpl
aas
xor
sub
testb
inc
mov
lods
lcall
shll
xor
jmp
mov
mov
ret
push
dec
scas
cmpsb
xchg
jns
test
mov
call
into
push
rcrl
inc
aas
clc
sti
imull
pop
mov
sti
jno
sub
out
stos
aas
jmp
adc
mov
xchg
test
pushl
mov
ljmp
jbe
mov
cmp
push
stos
jl
jno
cltd
push
mov
dec
lahf
push
mov
popf
push
lcall
pop
mov
mov
mov
or
shrl
lret
ffree
mov
inc
mov
mov
fldl
mov
jmp
add
jecxz
xor
inc
and
sti
pop
popf
leave
sahf
push
and
xchg
mov
fistpll
sbbl
dec
dec
mov
scas
jae
in
sub
cmc
test
addb
cmp
stos
ret
mov
inc
data16
xchg
ja
lods
shll
and
mov
push
mov
inc
inc
jne
scas
jl
inc
inc
push
popf
mov
mov
int3
add
pop
push
out
xor
xor
sbb
xchg
xor
lds
bound
adc
and
mov
insb
xchg
xor
sub
push
ret
pop
adc
mov
mov
fmul
ret
outsb
xchg
pop
mov
adc
cmpsl
or
shrb
cld
cs
loopne
and
and
pop
pop
rcll
ljmp
sarl
ret
and
add
int
std
or
or
out
add
sub
jl
sub
inc
mov
inc
mov
or
mov
mov
and
dec
jge
pushfw
xchg
ret
cli
in
sub
sbb
inc
dec
push
nop
arpl
fstpl
or
and
add
mov
add
cli
stos
lods
mov
mov
xchg
mov
push
mov
mov
xchg
icebp
jno
jmp
xor
fbld
push
daa
and
add
inc
lahf
jns
mov
ss
imul
rolb
mov
pop
mov
mov
test
add
notb
cmp
mov
cmp
xor
mov
leave
out
js
rol
jle
and
cmp
ja
or
lods
rclb
sub
lods
cmpsb
outsl
imul
fstps
jnp
inc
or
push
movsl
inc
and
mov
jg
fimull
mov
ljmp
push
inc
lret
mov
daa
cmp
pop
inc
mov
notb
lods
or
adc
pop
jns
cmc
cmp
jb
mov
call
into
pop
bound
fdivs
pop
mov
jne
push
and
addps
dec
pop
repnz
decl
mov
cmpsb
popf
int3
jp
sub
insl
aad
jp
dec
stos
jno
leave
push
sub
lcall
cmp
jmp
mov
gs
imul
test
fidivrs
xchg
pop
lret
es
inc
imulb
cmpsb
lcall
hlt
fcomi
mov
cltd
dec
dec
and
das
push
jg
push
notl
fdivrl
mov
push
xor
mov
int
pop
mov
xchg
cmpsl
push
rorb
mov
mov
mov
and
fidivs
and
mov
inc
inc
push
out
cltd
pusha
jae
cwtl
jp
add
sub
in
mov
mov
rcll
inc
idivb
inc
push
xor
test
out
sub
es
or
push
mov
sub
shll
ret
add
ficomps
in
add
mov
dec
mov
fwait
lcall
xchg
repnz
stc
ror
dec
mov
or
xor
pusha
and
in
sub
and
add
in
sub
in
sbb
fsubrs
xchg
stc
sbb
pop
hlt
shll
sub
cmpsb
and
lock
ja
loopne
aas
sbb
loopne
jnp
mov
rcll
pop
jg
xor
jne
das
and
subb
sbb
fists
pop
dec
mov
leave
push
jmp
jecxz
enter
addr16
lea
xchg
fwait
push
pop
pop
mov
jle
dec
enter
xchg
push
mul
push
fldt
cli
xchg
in
lods
test
mov
push
pop
lds
insl
jb
sub
xorl
cmpl
sbbb
and
push
pop
repz
adc
and
and
sub
cmp
flds
stos
outsb
out
and
bsf
data16
sbb
js
inc
xor
mov
push
adc
gs
jge
stos
into
xchg
jns
test
iret
mov
add
aad
in
pusha
mov
cld
pop
jo
out
sbb
scas
int
xchg
inc
int3
les
xor
pop
outsl
ljmp
movsb
push
mov
pop
rolb
icebp
add
div
push
and
mov
subb
test
jg
addb
mov
add
gs
adc
data16
arpl
jns
push
jbe
scas
popf
stc
xchg
add
sub
jno
pop
mov
mov
lods
push
dec
test
pop
enter
jg
hlt
ljmp
lahf
add
xchg
push
and
jle
test
pop
pop
enter
sbb
sarl
cmp
int3
sbb
xor
and
scas
dec
hlt
rorb
sbb
xchg
cmp
fnsave
cmp
out
bound
scas
jl
les
dec
mov
push
sahf
jnp
push
mov
cld
lea
jno
adc
jbe
dec
aam
xchg
stc
sbb
dec
fdivr
sti
push
sar
adc
xchg
jp
dec
jp
filds
lock
mov
add
xlat
mov
adc
xchg
cs
jo
mov
inc
cmc
rorl
xchg
sbbb
scas
and
shlb
xor
inc
push
mov
add
mov
mov
loop
jecxz
pop
repz
push
dec
pop
cs
outsb
lods
ja
inc
fwait
sub
js
mov
sub
adc
or
jno
jecxz
test
mov
ja
lahf
adc
adc
clc
add
cmpsb
sub
xchg
sub
repnz
je
xor
jp
arpl
mov
mov
adc
leave
xchg
cmp
test
push
das
xlat
xor
dec
push
inc
jo
idivb
addb
xchg
mov
std
push
mov
pop
pop
lret
adc
mov
dec
in
outsl
push
jo
xor
out
or
fnstcw
rolb
xor
mov
cltd
adc
jne
sti
popf
dec
loop
jp
dec
inc
mov
mov
lahf
or
mov
stc
mov
rcrb
sbb
mov
shlb
in
jle
daa
test
shll
dec
sbb
xchg
sarb
imul
push
dec
sbb
sbb
sub
out
cwtl
cmp
push
cmp
mov
lods
imul
pop
cmp
jecxz
shrl
cmpsl
loope
addr16
out
push
jmp
jb
pop
fcomps
jbe
mov
sub
aas
pop
cmpl
inc
mov
js
and
cld
cmp
loopne
or
ret
aam
pop
pop
test
adcb
add
cmp
cld
lea
cmp
inc
into
push
adc
pop
stos
push
fsubl
mov
push
in
jmp
push
push
pop
iret
faddp
jne
jae
stos
adc
xor
rcll
movsl
jb
and
mov
dec
xchg
out
adc
mov
add
adc
out
dec
mov
aad
inc
cld
aad
jo
pop
xor
mov
ja
sbb
fcmovu
jmp
mov
int3
add
pop
pusha
rolb
adc
mov
inc
push
xchg
mov
mov
xchg
ror
fs
loopne
lcall
and
mov
stos
xor
in
adc
mov
or
cmp
mov
adc
adc
jecxz
sahf
xor
rorb
bound
int3
hlt
adc
xor
in
repnz
arpl
in
xor
mov
mov
cmp
in
fldl2t
jmp
add
add
xchg
cli
and
das
ret
jnp
adc
jecxz
daa
fildll
and
pop
jno
cld
push
aam
jl
inc
or
xchg
adc
mov
xchg
and
xorb
test
movsl
out
sbb
test
add
jecxz
push
lea
pop
and
mov
inc
int
or
shrb
add
stos
js
sub
arpl
pop
out
lock
mov
cmpl
mulb
shrb
mov
push
in
scas
jg
test
sbb
ljmp
sbb
mov
xchg
testl
and
mov
ss
mov
xor
les
jno
xor
xor
in
rcrl
aaa
daa
add
add
push
je
clc
pop
outsl
sbb
loopne
out
sbbl
and
in
sbb
sbb
push
pusha
out
mov
mov
cltd
clc
scas
test
xor
in
cmp
clc
push
mov
sbb
jno
insb
in
adc
fistps
cmc
sbb
push
ja
push
xlat
notl
xor
mov
push
cltd
mov
or
sar
pop
into
mov
mov
mov
push
mov
sbb
jo
mov
sbb
fucomi
or
mov
cmp
sbb
mov
pusha
ss
popf
inc
mov
jo
bound
push
cmp
mov
lret
out
and
pop
mull
pop
jecxz
pop
cs
sbb
xchg
inc
sahf
ss
xchg
cmp
mov
lahf
dec
inc
jl
lods
movl
dec
cmp
lds
aam
data16
mov
je
pop
inc
push
andl
dec
shl
mov
fisubl
ja
jp
in
dec
sbb
adcl
mov
fistps
dec
xor
in
pop
out
loope
sbb
xor
push
push
fstpl
jge
hlt
shl
push
movsl
cmp
enter
pop
das
cbtw
mov
sub
xor
lret
leave
sbb
pop
ret
ret
roll
imulb
lock
xchg
stos
sbb
inc
lret
adc
cmc
push
imul
mov
or
xchg
stos
mov
xor
mov
sub
orl
filds
cmp
jns
jp
push
outsb
lret
push
fstpt
and
jno
mov
arpl
ffreep
gs
incl
pop
ret
inc
scas
and
dec
imul
add
xor
pop
jmp
fnstcw
or
test
cld
in
xor
cmpsb
sar
cmp
mov
adc
xchg
mov
mov
insb
icebp
mov
adc
xlat
jo
subl
pop
lock
push
ret
push
in
scas
cwtl
adc
lds
imul
pop
mov
mov
dec
shl
pop
gs
inc
out
jb
jno
insb
lcall
pop
icebp
sub
pushf
pop
lds
lcall
rol
mov
or
rcrb
sbbb
arpl
add
jle
rorl
loopne
loopne
je
pushf
outsl
mov
in
mov
aad
or
scas
sub
push
jle
jp
into
frstor
out
sarb
daa
sbb
dec
call
rcrl
sbb
addr16
stos
mov
mov
dec
mov
jbe
and
imul
call
rcrl
add
out
jp
imul
scas
mov
mov
jle,pt
loop
cmp
pop
xchg
pop
std
fimull
xor
mov
test
cmp
fcompl
xchg
mov
loopne
dec
arpl
out
mov
adcb
rorl
jp
lods
ja
pop
js
xchg
xor
mov
mov
in
cld
sbb
mov
pop
and
movsl
into
adc
ss
aad
gs
in
rolb
dec
mov
es
xor
ljmp
push
mov
inc
cmpsb
mov
ja
movsb
out
and
popf
mov
fcomps
sub
outsl
cmp
and
jnp
pop
fdivs
rorb
sub
cmp
rcll
or
notb
and
bound
xchg
imul
pop
inc
movzwl
jmp
inc
out
push
cmpsl
sbb
shlb
out
xor
dec
jp
sub
pop
mov
test
mov
mov
call
insb
jle
pop
int3
mov
add
adc
dec
imul
aad
in
out
inc
ficomps
ret
stc
jecxz
mov
dec
lods
jp
lcall
mov
xor
int3
sub
insl
pop
add
in
inc
sbb
push
pushf
ds
or
jne
pop
or
insl
sbb
frstor
leave
cmpsl
mov
cmp
out
cmpsl
mov
orl
adc
adc
pop
std
lods
clc
pop
or
pop
or
mov
cmpsb
shr
mov
inc
cmp
movsb
fistl
push
fnstsw
mov
inc
cmp
loop
das
test
mov
or
dec
lods
xchg
jp
sahf
pop
stos
in
ss
xchg
push
ss
pop
or
sbb
xchg
pop
lcall
hlt
int
jp
bound
xor
or
dec
mov
jb
cwtl
mov
mov
sbb
in
f2xm1
shl
scas
push
pop
adc
lcall
jecxz
shlb
mov
and
test
pop
lods
xchg
addr16
jne
out
push
mov
push
cmpsb
jl
into
sarl
push
push
ficoml
dec
lahf
stc
fadds
lret
daa
xchg
popf
sub
dec
adc
jge
cmpsb
clc
mov
icebp
fnstsw
subl
test
repnz
pop
jge
into
mov
sub
push
outsb
aam
leave
jb
mov
testb
sbb
xorb
incb
sub
orb
lds
jp
jno
addb
push
arpl
lret
repnz
xor
pop
xchg
xor
sub
lea
ss
gs
ficoms
fidivrs
sub
stos
push
in
add
xor
push
xor
daa
jb
into
stc
dec
add
jno
jns
inc
pop
push
cld
or
dec
cmp
jl
les
pop
dec
aaa
push
push
sbbb
sar
mov
es
jle
adc
dec
mov
jmp
iret
xchg
jecxz
addr16
ja
sbb
mov
inc
xorl
push
mov
outsb
jne
stos
dec
fsubs
sub
xorl
repnz
sub
mov
js
jno
pop
into
dec
or
and
mov
mov
add
iret
and
push
add
mov
imul
inc
lods
xchg
lods
push
cmp
jge
lahf
js
xor
loope
sbb
popf
mov
cld
jbe
pop
enter
loope
and
cmpsl
hlt
test
sti
mov
xchg
sahf
pop
and
nop
pusha
mov
push
aam
pusha
cwtl
pop
fsubrs
adc
lock
cmp
xchg
mov
pop
fbld
xchg
loopne
shrb
mov
lods
aam
popf
push
ret
movsl
gs
sub
daa
sbb
sbbl
mov
push
loop
xor
repnz
mov
inc
and
loop
test
out
push
jno
mov
xlat
mov
cmp
sub
dec
sub
pusha
popa
in
sub
fidivs
mov
into
call
scas
stc
push
lock
xchg
outsb
add
cwtl
add
test
enter
int
lret
and
lds
pop
mov
sub
mov
adc
push
sbb
fwait
jg
xor
loope
mov
in
push
out
mov
roll
pop
mov
inc
xor
popf
enter
loop
mov
adc
mov
push
jae
scas
jo
insl
cli
push
and
mov
pop
or
sbb
hlt
ret
arpl
or
push
lods
pop
aas
shll
add
lret
lret
andb
pop
sahf
xor
js
xor
lcall
sub
sub
mov
test
sbb
xchg
lret
inc
pop
or
mov
popaw
loope
push
lret
loop
out
inc
test
xor
fimuls
inc
cmp
arpl
push
idivb
adc
mov
movsb
dec
or
arpl
mov
jl
adc
mov
or
adc
dec
push
jbe
dec
cmp
add
mov
jo
mov
pushf
jns
cmp
jecxz
popa
mov
test
sbb
xchg
cmp
scas
call
push
push
push
popf
pop
inc
insl
dec
xlat
jnp
repnz
push
mov
and
ja
or
pusha
xchg
mov
pop
lret
push
jbe
xchg
add
test
addr16
cwtl
popf
dec
scas
outsl
push
inc
and
sahf
out
repz
lods
bswap
rorb
popa
add
xor
cmp
enter
inc
ds
xor
push
cmc
cli
sub
jns
icebp
testl
repz
cld
mov
adc
cld
int3
sub
scas
dec
fcompl
pop
mov
push
into
pop
pop
iret
insl
jno
fdivrs
inc
sti
ljmp
in
jns
scas
aad
fs
inc
xlat
jns,pn
les
pop
movb
adc
bound
jge
fadds
jnp
push
mov
call
cld
test
rcl
insb
pop
mov
inc
pushf
mov
std
push
mov
adc
ljmp
mov
rclw
dec
adc
push
xor
xorb
pop
or
jno
pop
cld
cmp
mov
or
hlt
mov
jno
dec
pop
xor
add
aad
mov
cmp
xor
adc
jg
push
inc
add
mov
xchg
fisttpll
jns
mov
mov
mov
loopne
and
jmp
jle
inc
popa
mov
hlt
stos
inc
lods
adc
xchg
jo
sbbl
popa
xchg
jb
insb
in
mov
les
aas
test
and
dec
rcrb
scas
mov
mov
aam
insb
pop
jmp
push
mov
push
out
mov
xchg
inc
repz
mov
cmp
or
sub
or
jg
out
hlt
nop
mov
pop
xor
shl
or
jb
rclb
rcrb
cltd
mov
ficoms
mov
xor
lahf
popf
xor
clc
mov
sub
in
test
inc
repz
shrb
xchg
jp
xlat
test
fsts
jecxz
lret
cmpsl
or
in
push
xlat
lea
sub
jg
inc
mov
das
iret
pop
sti
mov
mov
lea
cs
es
inc
push
in
adc
aam
or
xor
push
inc
push
insb
or
push
insl
int
push
out
jbe
and
add
mov
mov
nop
scas
jns
fnsetpm(287
subl
movsl
inc
push
fmul
pop
inc
jge
xor
cmpsl
pusha
arpl
inc
and
sub
mov
in
cli
sahf
mov
inc
divl
sbb
jmp
ret
inc
js
mov
xlat
popl
mov
imul
mov
cltd
jl
int3
lret
lds
lock
and
dec
test
jb
roll
aaa
imulb
les
call
rorb
test
inc
or
test
cmp
push
xor
xor
aaa
or
mov
cwtl
stos
insl
std
pop
test
mov
sub
cmp
add
addr16
leave
mov
add
push
lock
cmp
add
cmpsb
outsl
adc
push
lock
dec
insb
xchg
xor
pop
mov
pop
sti
enter
dec
sub
imulb
les
loope
jecxz
add
inc
cmc
push
mov
sbb
testb
mov
mov
aam
push
push
shrb
cmp
mov
cltd
jns
loop
orl
icebp
stos
pop
jbe
insl
movsb
cltd
jne
xchg
inc
push
mov
jp
aam
lret
das
jmp
movsb
scas
out
push
or
pop
add
es
push
xor
cli
leave
out
mov
ror
es
cmp
emms
sbb
sub
cwtl
mov
scas
sub
push
cmp
xor
pop
jbe
mov
and
cmp
loop
jnp
into
mov
push
int
dec
sub
and
jno
and
out
sbb
sub
ja
xor
frstor
dec
cmpsl
adc
dec
aas
pop
jg
jmp
ds
lds
mov
mov
gs
outsl
movsl
movsb
push
xor
cmp
mov
in
jg
cwtl
sbb
repnz
rorb
mov
push
notl
daa
and
mov
push
push
push
enter
mov
icebp
or
or
sbb
outsl
movsl
ret
bound
mov
mov
jb
imul
pop
fstpl
stos
into
cmp
cmpsb
out
outsb
sbb
or
inc
cmp
aam
jno
push
ljmp
stos
icebp
repnz
repz
jge
cwtl
iret
cmp
in
push
adc
stc
aas
cld
mov
sbb
push
mov
cmp
stc
xor
and
lods
or
dec
icebp
mov
test
and
jo
jle
fs
nop
scas
out
cmpsl
loop
push
and
mov
inc
or
jge
cmpl
xchg
stos
or
int
adcb
imul
addr16
sbb
jl
and
mov
subb
ljmp
test
jns
xchg
dec
jno
imul
stos
lods
sti
or
xchg
jb
sbb
fistpl
data16
add
jge
inc
lock
sahf
cmp
lds
nop
inc
push
dec
dec
inc
cmp
cmpsl
mov
mov
lahf
jg
movsl
mov
es
mov
orl
and
insl
cmp
pop
and
es
hlt
fdivrp
mov
movsl
idivl
jo
jmp
or
mov
jne
dec
jge
fiaddl
fidivrs
ljmp
sbb
js
je
sbb
ss
inc
shrl
mov
das
ror
and
out
pop
in
xor
xchg
mov
jg
fs
test
xchg
sahf
cli
lock
jl
and
jg
movsb
jp
push
cmp
dec
shll
adc
and
inc
mov
cld
rcrl
cmp
lret
popf
cli
cmp
xchg
arpl
rol
das
inc
sub
movsb
in
pusha
aaa
mov
xor
dec
xor
subl
mov
pop
ror
out
and
outsl
pop
sub
out
xor
loop
push
addb
rcl
xor
aam
xor
push
cltd
dec
jne
dec
inc
rorl
and
push
cmp
or
inc
aaa
test
daa
fwait
das
mov
mov
and
mov
lret
jne
or
cs
mov
sbb
in
std
loope
fsubrl
push
add
xorl
cmp
adcl
andb
mov
lret
and
inc
jae
sub
or
loopne
clc
bswap
jbe
adc
stos
add
lahf
test
mov
arpl
or
push
inc
dec
push
ja
stos
int3
lea
mov
popf
jp
cli
or
ljmp
or
inc
jnp
pop
add
pop
arpl
mov
test
jns
adc
outsb
xor
xchg
push
addr16
inc
in
or
lock
xchg
fwait
adc
push
xor
adc
pop
fnstsw
cmp
xorb
test
fiadds
fildl
sbb
push
inc
xchg
mov
mov
lret
or
jnp
movsl
mov
mov
jecxz
iret
jle
dec
lahf
xor
add
and
lea
into
push
gs
inc
pusha
or
sbb
sbbb
pop
mov
sbb
lods
daa
aad
out
je
add
fcoml
int
inc
xor
mov
jp
adc
jg
push
xchg
add
pop
mov
imul
xchg
jl
add
jns
out
or
movsb
lea
aam
jl
cmpsb
mov
jl
and
mov
dec
add
sub
mov
enter
lret
mov
inc
sahf
iret
dec
popf
inc
xlat
mov
pop
pop
out
stos
jp
mov
fwait
mov
cmp
insl
jns
jle
js
add
push
fsubrs
add
ja
in
scas
dec
rorl
pushf
lock
mov
sbb
or
xor
negb
int
pop
mov
clc
jo
xchg
std
jne
jge
mov
or
push
mov
mov
sub
mov
callw
aad
rcl
lods
ds
or
das
out
sbb
cmpsl
xor
aad
scas
mov
adc
fucomip
mov
ficoml
mov
arpl
jge
inc
xor
out
in
and
mov
int3
fisttps
mov
adcb
pop
mov
or
cs
xchg
iret
add
and
andl
sub
out
lcall
sub
lret
es
push
lods
mov
adc
mov
std
jae
icebp
sahf
iret
lcall
pop
mov
xorb
rcrb
mov
or
sbb
mov
out
jge
push
cs
aas
push
sbb
std
sub
or
add
mov
mov
push
or
mov
or
in
add
pop
push
cld
cmp
mov
add
nop
out
int
push
lret
sub
and
mov
in
cmp
in
mov
mov
ret
mov
and
fistpl
cmp
pop
or
andl
insb
loopne
pop
add
dec
aad
icebp
dec
aas
sahf
mov
iret
pop
pop
sbb
mov
je
cmpsl
iret
mov
or
mov
gs
xor
lods
pop
call
add
xchg
jae,pn
pop
mov
mov
sahf
ss
ds
hlt
bound
aas
dec
push
imul
sub
cltd
ret
stos
sti
out
ret
stos
push
cmp
in
jnp
fiaddl
inc
je
and
or
sbb
cmc
sub
add
xchg
xchg
adc
add
cld
jmp
mov
aaa
or
xor
dec
adcb
out
sub
sub
lahf
cwtl
mov
pop
xor
rcll
or
inc
xor
jle
and
shr
stc
mov
popf
mov
loopne
pushf
loopne
enter
movsl
mov
dec
push
jno
add
aad
cmp
scas
int
xor
xchg
sbb
dec
jl
pop
pop
dec
lret
xchg
inc
hlt
cmp
or
int3
mov
movsb
adc
or
cmpsl
push
jecxz
lret
adc
push
lods
sub
adc
loope
inc
test
pop
aaa
test
and
and
in
nop
xchg
outsl
mov
inc
lds
pop
or
jno
negb
out
xor
pop
pop
call
gs
sbb
push
lcall
xorb
loope
inc
push
jp
pop
mov
xor
test
fsubr
mov
inc
and
jb
rcrl
ret
sbb
mov
ror
xor
vxorpd
push
fdivrl
les
mov
sbb
push
shlb
insb
int
movsb
aam
push
xchg
pushf
and
xchg
fistpl
inc
mov
add
aaa
mov
cwtl
sub
inc
cmp
mov
sbb
jnp
pop
std
sbbl
or
in
mov
add
push
lahf
inc
xor
mov
push
xlat
popa
popf
push
rcrl
les
insl
cmp
inc
dec
add
ret
ret
int
mov
push
jp
lock
pushf
jo
xchg
mov
fs
pop
leave
mov
push
adc
jbe
push
mov
ret
nop
mov
pop
pop
push
inc
mov
xchg
mov
jns
out
mov
test
jp
enter
lahf
stos
jnp
xchg
shlb
pop
int
push
incb
nop
stc
dec
xor
cmp
inc
fcmovnu
cmp
fisttpl
xor
xchg
ss
scas
inc
ss
mov
push
xchg
pop
and
jns
and
jl
clc
add
pop
cmp
test
dec
stos
jecxz
mov
ja
lahf
cmp
add
imul
adc
bound
mov
or
scas
test
jmp
ljmp
stos
cmp
lods
mov
adc
jnp
test
sbb
iret
push
ja
ja
push
divl
cmp
pop
jmp
and
das
test
mov
sub
sbb
mov
mov
fisttpl
add
push
mov
xchg
lods
pushf
xchg
xor
aad
mov
ljmp
dec
repz
sti
fistps
sbb
pushf
mov
das
aas
adc
xorl
and
jl
in
jnp
mov
cltd
aaa
mov
inc
repnz
stc
xor
int
xchg
inc
jns
stos
stos
xchg
movsl
dec
fnstenv
push
mov
mov
push
or
icebp
sti
pop
sbb
je
sub
popa
cltd
dec
call
insb
sahf
test
mov
jmp
das
cmp
mov
pop
mov
nop
data16
or
pop
mov
xor
repz
dec
fcomps
les
push
mov
inc
push
xor
das
dec
enter
rorl
jge
xor
ds
popf
push
bound
cltd
cmp
push
inc
lahf
push
mov
jge
cmp
ds
clc
mov
test
sbb
push
movsl
xor
xchg
pop
dec
je
jno,pt
aas
cmc
sahf
xchg
inc
cmp
xor
fsts
sbb
scas
fstpt
orb
push
jle
push
inc
adc
adc
into
insb
mov
sahf
adc
add
xor
adc
xor
and
xchg
repz
adc
adcl
pushf
repnz
out
pop
inc
push
cld
jp
sbb
cwtl
xchg
js
hlt
aad
or
adc
dec
es
arpl
mov
test
in
push
sub
push
ret
cmp
xor
sbb
scas
in
cmpsl
pop
mov
sbb
mov
pusha
ds
inc
pop
bound
fcomps
or
lahf
add
mov
xchg
jb
pop
add
dec
jle
idiv
and
adc
xchg
call
push
in
add
fsubl
dec
lret
sub
pop
add
maskmovq
idivl
iret
mov
scas
jnp
int
xor
lret
xchg
aas
mov
cmpsl
sbb
ficoms
sub
mov
jb
lock
fisubl
push
jnp
and
mov
inc
pop
push
into
inc
data16
fcoms
out
scas
aad
fwait
xchg
push
sub
push
cmpl
imul
cmp
rclb
add
negb
shlb
out
iret
push
push
or
lret
insl
data16
scas
xor
xchg
loop
and
scas
in
ja
or
cmpsb
adc
add
xchg
dec
pop
adc
and
and
cli
lret
imul
aad
cli
mov
inc
ret
push
jno
aas
in
pusha
insb
fwait
out
ja
fldt
test
rclb
icebp
or
cltd
mov
lret
mov
mov
lret
fistpll
icebp
and
pop
nop
cmpsb
aas
movsl
ss
jg
in
xchg
jnp
popa
add
xor
jne
enter
test
push
fidivs
xchg
lcall
mov
fistps
arpl
mov
idiv
clc
movsb
lods
sbb
mov
cmc
fcmovnbe
fsubrl
fwait
push
loop
scas
jge
sub
jmp
mov
lcall
movsb
xor
int3
les
adc
sbb
push
lock
mov
cmpsl
popa
adc
hlt
mov
push
cmp
fadds
add
push
aaa
iret
stos
les
leave
cmp
push
push
inc
pushf
xchg
sarl
mov
aas
aam
outsb
movsl
xor
xchg
mov
mov
xor
pop
stc
je
cmc
in
inc
pusha
lock
in
imulb
fadd
sub
mov
cmp
cmp
scas
mov
iret
xchg
insb
push
adc
mov
ja
je
xor
into
les
pop
in
test
mov
ret
dec
fildll
fs
std
mov
rolb
call
dec
mov
roll
adc
inc
push
scas
sub
cmc
shr
jge
mov
push
push
adc
cmpsl
dec
xor
jae
jae
je
mull
pop
mov
jae
xchg
dec
xchg
lret
incl
aas
push
pop
sub
adc
bound
xor
insl
jb
lret
inc
lret
or
cmp
cmpsb
xchg
mov
jecxz
scas
jno
cmp
sbb
xchg
add
lds
aad
or
popl
inc
xor
add
adc
and
fwait
and
push
out
adc
cld
jb
inc
push
push
lahf
rorb
jne
pushf
cmp
daa
push
push
loopne
pop
aad
insb
mov
aas
cltd
cmc
adc
cmp
lods
mov
int3
pop
cmpsb
fdivrp
jecxz
mov
or
aad
dec
cli
cmpsl
dec
inc
mov
out
shlb
jmp
shlb
fcoml
decb
cmp
test
mov
mov
lods
dec
inc
ja
hlt
lods
push
fisttpll
outsb
inc
mov
push
cmpb
fsubr
inc
jne
insb
pusha
or
inc
fs
xor
push
inc
pop
clc
jecxz
xor
push
push
out
mov
jmp
jecxz
xchg
sbb
rcr
jp
jns
jg
scas
dec
add
jp
pop
dec
jmp
jle
popa
push
xlat
xchg
sbb
lods
jmp
loopne
push
stos
or
out
rorb
popa
popl
mov
and
mov
outsl
sub
loope
push
mov
aad
arpl
sub
cmpb
push
jmp
or
jb
and
popf
in
sub
or
cwtl
inc
xchg
inc
sahf
inc
lcall
sub
in
cmpsl
push
lods
add
inc
testl
inc
pop
and
push
cmp
imull
and
out
pop
or
sahf
mov
sub
leave
dec
daa
dec
sbb
popa
dec
pop
dec
cmc
les
sbb
rcr
lods
adc
jmp
xor
fwait
pop
out
rdmsr
xchg
data16
push
pop
fiadds
sub
xchg
push
cmc
dec
push
icebp
testl
and
outsl
lahf
out
das
insl
test
jne
fsubrl
popf
jge
movsb
enter
fwait
int
push
nop
and
and
adcl
idivl
je
push
jmp
pushf
cmp
nop
cmc
stos
shr
dec
inc
les
dec
loop
push
push
push
mov
xchg
pushf
and
sets
imul
out
pop
add
in
test
ffreep
mov
and
push
repnz
mov
sbb
scas
and
idiv
pop
aas
xor
and
jo
jb
xor
push
test
sub
ficompl
pop
add
fimull
xlat
mov
in
add
hlt
out
add
dec
bound
ds
es
cwtl
cmpsb
es
push
pusha
popa
rcrl
jle
push
daa
cmovl
cmp
bound
or
or
xchg
inc
and
mov
dec
ljmp
cmc
loopne
jnp
xchg
icebp
fidivrs
cmpsb
push
jnp
pop
mov
stos
mov
inc
fcoms
mov
stc
adc
imulb
gs
jne
daa
adcl
outsb
xchg
ficoml
sbb
push
fisubrs
sahf
jno
xor
pop
xchg
xor
xor
xor
stos
cld
shll
mov
sub
je
or
pop
test
or
pop
and
lret
mov
pop
lea
push
in
cmp
in
stos
clc
sbb
idiv
add
and
xchg
into
in
xlat
jne
ret
leave
stos
xchg
loope
pop
pop
cmp
mov
lds
mov
add
daa
mov
test
sbb
inc
imul
pushf
fsubrl
jae
jae
push
movsb
mov
aad
mov
into
and
pop
push
scas
je
cmp
mov
stc
into
jbe
jge
inc
pop
lds
test
dec
insb
cld
cltd
es
push
inc
loope
insl
fbld
jecxz
lret
mov
jl
jmp
sbb
in
mov
adc
xor
mov
cmpsb
in
fs
push
add
adc
movl
pushf
icebp
or
or
es
insl
jl
lcall
sub
ret
scas
push
mov
add
dec
dec
outsl
push
inc
fcoml
flds
mov
lcall
into
cmp
push
mov
xchg
dec
lcall
mov
and
stos
jp
scas
clc
inc
fdiv
adc
imull
sbb
dec
inc
dec
or
addl
cltd
call
fcmovnb
js
ret
jge
mov
aam
je
xchg
xor
nop
loop
pop
push
movsl
and
xchg
mov
shl
sub
pop
jle
jne
jg
jne
out
jns
sbb
xor
mov
adc
int3
jno,pt
sarl
xchg
push
fcoml
pop
outsl
pop
pop
test
fwait
sahf
pushf
pop
leave
stc
and
in
inc
sub
and
mov
dec
stos
in
adc
aam
jae
test
int3
hlt
pusha
and
ret
test
bound
add
adc
mov
cmc
add
xchg
mov
popa
inc
inc
mov
mov
pusha
xor
and
xchg
cmp
adc
fs
push
dec
in
mov
mov
xchg
ja
pop
scas
movsl
pop
adc
mov
jl
repz
sbb
xchg
outsb
leavew
mov
test
lods
jb
add
or
imul
cmc
js
sbb
testb
mov
lea
jae
adc
fldcw
inc
and
dec
ret
adc
sbb
push
repz
inc
aaa
push
shl
repnz
ja
lcall
cltd
lock
mov
popf
and
popa
lcall
inc
hlt
out
sti
push
inc
push
out
js
xchg
fdiv
dec
mov
stc
adc
fmul
shlb
ror
push
jne
jno
into
jno
sbb
push
push
sub
outsl
imul
fcoms
shl
nop
mov
mov
outsl
ror
loop
fs
xlat
and
xchg
mov
frstor
enter
lret
loope
push
mov
jecxz
mov
out
loope
mov
sbb
mov
xchg
and
aad
in
mov
lcall
mov
sahf
mov
arpl
fadd
out
jl
add
mov
out
dec
fcoml
ret
sbb
daa
cmp
add
jmp
or
bound
cmp
lret
stos
es
insl
add
dec
pop
lods
pop
cmp
sbb
lea
cmp
loop
adc
pop
push
mov
pop
pushf
push
adc
jle
inc
cld
test
push
nop
scas
push
pop
iret
and
push
jmp
stos
pop
xchg
or
mov
cmpsl
mov
cld
add
loopne
sbb
inc
stc
or
or
sbb
aam
faddl
cmpsb
cld
mov
xor
int
pop
imul
sub
and
fists
pop
push
int
dec
xor
mov
call
xor
aad
rcrb
dec
enter
imul
pop
fisubrs
cmp
cmp
push
pop
das
test
flds
add
aad
mov
aam
sbbl
inc
test
fnstcw
cmp
cmp
sbb
loop
sbb
loop
push
xchg
or
xor
dec
mov
pushf
pop
lods
and
jg
xor
sahf
mov
es
fs
jno
push
add
add
mov
test
fstps
es
fisttps
or
or
mov
jno
mov
mov
mov
mov
or
and
outsb
inc
lods
out
pop
pop
imul
sub
fstp
mov
adc
bound
es
std
hlt
fistpl
xlat
das
je
mov
xor
daa
das
push
mull
cmpsb
int
fdivrl
pop
mov
mov
adc
jno
ficomps
inc
inc
dec
jmp
sub
dec
scas
es
pusha
mov
ljmp
aad
outsl
pop
lret
inc
pop
jmp
popw
repz
and
shrb
bound
xor
mov
pop
jno
pop
pop
es
decb
outsb
movsb
mov
dec
xor
sbb
mov
movsb
das
int3
push
add
or
gs
xchg
jl
sub
stos
stos
push
inc
aam
cmp
mov
mov
cmc
dec
outsl
push
push
nop
test
popa
mov
or
jg
fs
insb
jno
mov
pop
lea
sub
hlt
xchg
and
mov
pop
lds
jns
jmp
fistl
imul
aam
popa
popf
ret
xchg
fs
add
loop
cmp
xchg
test
jg
jge
leave
xchg
dec
popa
or
cwtl
xchg
data16
pusha
adc
dec
or
sub
dec
icebp
inc
rcll
leave
sahf
in
in
xor
out
scas
xchg
jle
adc
push
xchg
add
xchg
data16
je
sbb
int3
push
cmovs
fsub
push
fisttps
sub
loope
stos
sbb
enter
mov
jns
into
mov
xchg
push
outsl
scas
pop
inc
push
jmp
into
outsl
addr16
mov
push
add
inc
filds
imul
and
pushf
inc
js
add
inc
lcall
jnp
aaa
fucomp
sbb
test
lock
jb
xchg
fwait
test
and
push
lods
cmp
sub
sbb
jbe
les
pop
push
adc
add
push
int3
es
inc
je
pusha
add
jnp
sbb
add
and
dec
int3
or
mov
xor
das
lahf
fwait
inc
dec
fwait
test
jae
scas
cld
fstpl
add
and
pop
adc
push
shll
push
lret
add
jnp
xchg
mov
mov
cmp
jb
lock
shrb
add
ret
int
sti
mov
cmpsb
fildll
mov
loop
xor
bound
fildll
js
xchg
dec
push
sbb
inc
inc
add
in
jae
cmp
insb
cmp
sahf
shlb
ret
shrb
pop
push
incb
iret
hlt
mov
lret
outsb
pop
adcb
testl
mov
adc
mov
loop
pop
imul
cmp
ja
cld
and
ljmp
das
xchg
and
mov
or
cmp
les
cwtl
push
aam
xor
dec
add
fldcw
dec
xchg
xor
clc
sbb
fmulp
sbb
cmpsb
testb
mov
and
enter
pusha
add
sarb
aaa
pop
js
cltd
cld
leave
mov
push
lods
dec
fimull
lds
sub
lcall
sbb
enter
push
out
and
and
pop
jmp
add
icebp
xchg
mov
iret
lret
cltd
in
pop
sbb
mov
add
inc
outsb
and
push
add
mov
jecxz
inc
into
jg
popf
in
icebp
sahf
iret
mov
les
outsl
dec
lahf
or
mov
or
sti
mov
mov
mov
insb
in
cmp
insb
sub
ret
xor
out
inc
dec
movl
push
repnz
add
push
ret
mov
sub
pushl
mov
inc
pop
jo
mov
test
int3
push
ret
and
xchg
lods
jmp
ret
xchg
or
mov
call
lods
fists
jle
popf
scas
add
sarl
push
js
lahf
mov
repz
movsb
xchg
lret
je
divl
out
mov
sbb
cmp
push
xor
push
mov
push
popf
mov
xlat
scas
pandn
out
pop
sub
mov
sub
imul
sub
jb
scas
mov
inc
out
movsb
pop
xchg
aaa
add
pop
jns
fidivs
sbb
test
aam
cmp
xchg
xchg
push
mov
enter
add
jnp
mov
shl
insb
add
stc
arpl
lcall
outsb
xor
test
shll
jmp
in
sahf
rolb
cmpsl
cmp
fdivrp
mov
aaa
outsl
lods
and
sbb
sarb
lea
iret
push
add
stos
push
cmp
xor
sbb
jb
add
sub
push
movsb
rorb
mov
daa
cmpsb
mov
repnz
cwtl
fbstp
mov
lret
dec
aad
andb
xor
iret
or
daa
push
movl
xchg
pushf
sub
test
nop
pop
jecxz
jo
and
aam
sahf
mov
adc
test
or
out
mov
adc
test
jae
jo
pop
les
cltd
test
push
es
and
and
arpl
mov
inc
ss
or
aam
xchg
mov
out
cmp
sbbb
mov
sbb
fldcw
mov
push
push
push
push
cmpsl
xchg
jns
aam
lea
ds
mov
aam
inc
push
popf
mov
push
divb
mov
jnp
mov
iret
out
les
lahf
andb
mov
testb
mov
push
in
mov
cmc
inc
add
fdivl
aas
mov
nop
push
stos
sub
fcompl
push
ds
rorb
xchg
xor
xor
stc
adc
xlat
ja
pop
fisttpl
incl
xchg
adc
xchg
mov
and
ss
in
stos
scas
aam
jge
sub
insb
leave
lret
movsl
sti
mov
cmp
into
push
push
insb
inc
sbb
sub
sub
shl
jae
addr16
aad
jno
lods
mov
jo
ss
mov
lret
loope
test
scas
and
shlb
dec
jns
pop
xchg
loopne
outsl
xchg
cmp
xchg
mov
and
inc
xor
cmp
xlat
cmp
scas
dec
int3
inc
pop
push
test
cmpsb
pop
cmc
sbb
lahf
jb
fldcw
inc
pop
rorl
in
mov
sbb
push
or
divl
lea
adc
addr16
insl
push
iret
sub
dec
fmulp
out
shll
xor
vpunpckhdq
fnstcw
push
in
adc
popf
not
mov
cli
lods
das
push
cmp
cmp
add
movsl
push
pslld
sbb
cltd
out
stos
mov
inc
out
lods
jp,pn
subb
std
sub
cmpsb
aaa
aas
outsl
add
pop
sub
fstp
push
std
xchg
cmpsb
dec
inc
push
xchg
mov
xchg
aaa
in
pop
and
jo
pusha
sub
adc
cltd
inc
cld
cs
pusha
and
cli
inc
cmp
mov
mov
xor
nop
add
jbe
loopne
dec
pop
and
dec
pop
xchg
imul
mov
ja
xchg
jo
pop
ja
sub
xor
sub
cld
fs
xchg
movsb
cmpxchg
mov
movsl
les
fdivrs
sub
xchg
sbb
movsb
and
test
and
pop
add
pop
aam
bound
add
jp
ss
rcll
cmp
jmp
push
loop
jo
sbb
or
daa
lcall
add
popf
adcb
push
mov
sahf
sbb
inc
push
and
ret
in
sub
dec
iret
xlat
push
cmpsl
xchg
rcll
loopw
cmp
sub
mov
cmp
xchg
enter
mov
cli
test
subb
frstor
mov
orb
push
lds
xorb
shr
loop
add
pop
movsb
ret
aam
aaa
clc
mov
add
xor
inc
in
push
cmp
fwait
cmpb
xchg
adc
and
push
adc
outsl
call
sub
push
lea
cmpsb
mov
and
fcmove
adcl
dec
xchg
inc
lret
js
ficoms
push
mov
test
xor
mov
xor
xchg
or
sbb
pop
jp
sbb
rcrb
lea
rcl
inc
or
xlat
gs
fs
lods
xor
and
lods
fwait
jp
push
daa
push
xor
jo
add
sbb
xlat
mov
movsl
sub
pop
outsl
pop
lret
repnz
in
gs
bound
cwtl
daa
insl
ret
pushf
outsb
fsts
dec
outsl
cwtl
mov
aas
aam
xor
movsl
rcr
mov
testb
icebp
xchg
cs
or
jle
stos
fs
movsl
dec
test
cld
mov
lea
mov
pop
xor
daa
sub
cmp
mov
repz
pushf
lcall
add
or
jmp
clc
std
aas
in
in
sbb
jne
lcall
bound
aaa
jecxz
and
mov
dec
jge
int
daa
lcall
sti
push
rcrl
sbb
mov
sub
mov
shlb
mov
hlt
leave
push
pop
inc
outsb
arpl
lock
inc
leave
xchg
jl
sbb
sahf
mov
not
jne
xor
jecxz
test
xlat
mov
and
adc
mov
sti
jl
mov
outsb
add
and
push
jg
cmpsl
jmp
repz
fbstp
cmc
cmp
and
inc
add
add
fmuls
sbb
inc
shl
pusha
mov
and
xchg
xor
mov
sbb
bound
inc
sub
dec
mov
sub
or
jbe
and
imul
or
and
add
pushf
add
push
jnp
into
jl
test
cmpsb
and
rdtsc
mov
push
pop
daa
sub
cmc
jp
push
vmovss
adc
xchg
xchg
xchg
in
mov
mov
sub
xchg
mov
xchg
loope
pusha
cmp
ljmp
rolb
loope
lods
jg
in
into
jbe
sbb
repnz
mov
jae
call
aad
shl
pop
pop
lret
dec
mov
test
jg
sar
push
dec
aaa
dec
dec
insl
outsb
add
call
adc
jmp
lret
outsl
add
imul
mov
lods
movsl
sub
jno
ret
dec
shrb
jne
mov
leave
test
pushf
cmp
test
or
and
xchg
sub
or
or
push
dec
mov
push
aad
xor
icebp
shll
sbb
es
loope
dec
mov
mov
inc
mov
shlb
lods
adc
js
xor
sub
fdivl
fdivl
xchg
xchg
cwtl
mov
xchg
xchg
stos
movsl
std
and
divb
movsl
mov
cmpsb
pushf
imul
add
mov
inc
mov
cmp
rcl
mov
fdiv
ds
push
pop
add
adc
frstor
scas
dec
mov
xor
and
inc
cmp
sbb
adc
outsl
loop
jb
lock
lock
ficoml
mov
push
xchg
xor
cmp
and
push
inc
jmp
cmp
jl
outsl
push
dec
add
aam
dec
sub
dec
push
loope
filds
lcall
adc
pop
adc
jae
test
mov
test
sbb
mov
mov
mov
stos
xor
std
cmp
mov
aaa
jae
popa
scas
pop
adc
push
inc
pop
xchg
sbb
sbbl
fwait
mov
pop
and
insb
cmp
jne
out
sbb
js
pusha
inc
outsl
push
mov
xchg
mulb
ja
sub
xchg
pop
ss
dec
or
jmp
lea
cmp
inc
in
sti
add
dec
adc
loope
inc
stos
andl
je
clc
jns
mov
xchg
jns
imul
loop
pop
stos
iret
xchg
pop
popf
es
jg
loopne
iret
adc
test
xor
scas
cmc
sbb
out
adc
in
ret
adc
into
ljmp
in
dec
setl
imul
or
pop
adc
out
outsl
outsl
pop
push
int
xchg
into
gs
cs
mov
lahf
sahf
mov
mov
fimull
pop
dec
push
lea
shrb
pop
fistpl
fs
ret
xor
in
pop
fidivrl
insl
jp
mov
lods
cld
jns
test
jns
cltd
push
jae
jo
cwtl
mov
mov
gs
cld
pop
mov
or
dec
sub
mov
add
jns
push
sti
icebp
fisttpll
iret
sbb
rol
lea
jno
cld
nop
inc
sbb
cli
inc
les
ljmp
push
into
jecxz
lcall
ja
int3
add
cmp
mov
stc
xor
xchg
sahf
jle
cltd
adc
jecxz
lret
xor
and
push
jb
or
and
cmpsb
jo
test
into
sub
push
cmp
sbb
es
imul
pop
adc
ljmp
hlt
add
out
dec
mov
dec
outsl
jo
nop
dec
jbe
or
imul
std
sbb
jno
daa
iret
and
mov
loop
pusha
mov
inc
cmc
xor
jae
int
movsb
or
add
dec
sub
or
sahf
cmpsb
mov
pushf
and
and
std
mov
sub
bound
push
or
into
shrb
mov
fiaddl
jb
cmp
sub
notl
or
aad
out
mov
daa
int
mov
test
stc
and
repnz
pusha
aad
lds
sbb
sub
nop
inc
leave
movsb
aas
scas
adc
cmp
inc
xor
rcrl
xor
jmp
hlt
cmp
lret
andb
cmp
mov
out
and
sbb
lret
in
push
cmpsl
and
out
out
cmp
inc
mov
gs
cli
popa
out
xchg
and
mov
inc
mov
dec
sub
mov
mov
cli
mov
pop
sub
xor
xor
jne
frstor
ret
lock
pop
mov
int3
sbb
data16
mov
push
out
enter
and
ds
fsubr
and
push
lods
cmp
jge
xor
pusha
dec
xchg
push
mov
jge
xor
fmull
repz
lods
dec
xor
mov
inc
cwtl
mov
add
jge
int3
xlat
or
lea
inc
and
sub
les
mov
movsl
test
inc
sbb
das
xor
mov
xor
in
rorl
xor
sub
jp
xor
xor
pop
je
sub
and
cmp
mov
sub
pop
repz
mov
jmp
sbb
mov
push
add
test
xchg
add
sbb
jno
add
cli
xchg
dec
add
inc
lds
cli
pop
lock
jns
jmp
inc
test
fisubs
push
sub
pop
daa
imul
mov
negb
xor
xor
cmc
pop
xchg
sbbl
lret
cli
stc
pusha
xorb
adc
lret
fwait
or
outsb
mov
out
icebp
jno
aaa
adc
sub
lods
pusha
ret
mov
sar
jns
ds
out
insb
cmp
mov
inc
or
lcall
xchg
dec
inc
mov
xor
or
xchg
cwtl
lahf
test
cmp
mov
inc
add
xor
dec
ret
and
fadds
ds
subb
jns
push
mov
cmpsl
inc
mov
idivb
repz
sahf
hlt
lock
xchg
enter
and
push
addr16
add
cmpsb
int
rcll
imul
mov
clc
push
mov
out
fcoml
adc
inc
cli
fcmovbe
xchg
add
push
jl
stos
fs
out
lods
xor
adc
jg
push
and
adc
insl
mov
cwtl
jg
mov
push
stos
outsb
rcr
push
push
dec
xor
pop
popf
pop
test
gs
push
rorl
loop
add
inc
sub
inc
pop
das
lcall
into
repz
aad
sub
movb
xor
nop
and
scas
xlat
stos
fwait
testb
popf
icebp
inc
mov
enter
adc
call
add
out
push
cmp
and
jb
and
adc
add
aad
rcr
into
add
fisttpll
cmp
scas
pushf
mov
xor
or
adc
cmp
stos
popf
adc
jg
rorl
stos
pop
add
loope
pop
mov
jmp
mov
lods
and
xchg
outsb
cmp
dec
mov
rcrl
ss
popa
les
or
pop
sub
or
inc
xchg
mov
mov
or
lret
push
out
jo
inc
repnz
lahf
loop
inc
enter
into
cmp
or
decl
lahf
fcmovbe
fistl
repz
ret
cmp
in
adc
in
mov
add
out
inc
add
rcrb
outsb
andl
xchg
push
inc
test
xchg
xor
das
cwtl
pop
pop
divl
leave
jle
iret
test
mov
or
inc
addb
jle
jge
adc
icebp
jns
add
xor
mov
mov
jb
lahf
inc
cltd
xchg
inc
ds
mov
out
cmc
dec
data16
outsl
jns
or
cltd
inc
cmp
or
xchg
inc
insb
xchg
mov
xor
insb
adc
lock
mov
mov
xor
icebp
out
mov
arpl
jo
daa
dec
push
mov
jge
in
adc
jb
and
stc
mov
push
xchg
push
pop
sub
lods
daa
int3
mov
add
xor
sahf
int
fistl
pop
jo
int3
cmc
inc
ror
mov
imul
mov
out
add
mov
enter
loope
mov
mov
insl
mov
test
add
inc
push
cmpsb
sbb
mov
and
punpcklbw
lret
or
pushf
in
fnstsw
dec
mov
lds
mov
cmp
or
dec
fsts
out
fwait
xor
xlat
mov
movsb
jbe
inc
and
faddl
mov
cmp
push
subb
pusha
bound
push
adc
test
dec
lds
push
lods
data16
sbb
push
scas
imul
cli
dec
lret
mov
bound
xor
dec
sbb
pop
sub
inc
lea
lods
flds
lea
into
sti
out
fs
aaa
add
clc
shl
addr16
loop
lea
xor
cmp
into
daa
sbb
push
adc
scas
ds
shlb
out
pop
push
xchg
adc
popa
sbb
loope,pt
jnp
or
ljmp
mov
jmp
sbb
loopne
dec
ja
enter
push
sbb
or
loop
movsb
bound
or
lea
and
pop
loop
daa
imul
test
in
jae
in
pop
movsl
mov
mov
les
inc
pop
push
fbstp
cmp
dec
jecxz
outsb
add
and
adc
push
pop
pop
cld
shlb
dec
inc
shlb
mov
mov
xchg
daa
pop
jge
insl
lods
mov
leave
in
pop
fsubl
xor
out
adc
cld
xchg
mov
stos
add
decb
lcall
in
loop
hlt
icebp
out
or
mov
jb
cmpb
add
push
faddl
xlat
xchg
and
ret
pushl
xor
test
fs
ja
mov
aad
pop
ss
mov
and
add
lahf
jmp
add
xor
js
push
jmp
clc
xor
push
push
fdivr
mov
shl
filds
arpl
xchg
cmpsb
dec
push
and
push
ret
inc
aad
mov
mov
inc
sahf
daa
xchg
inc
add
add
sbbl
shl
int
into
and
or
movsl
iret
mov
push
pop
xchg
mov
jb
push
and
sbb
or
push
dec
fwait
sti
pushf
js
sbb
mov
pop
adc
dec
lock
lds
sbb
dec
and
sub
fisubl
or
xorb
int3
dec
add
cli
das
and
mov
inc
dec
movsb
lods
lcall
cmp
jmp
adc
jns
or
dec
ret
gs
inc
nop
addr16
loopne
push
cmp
mov
mov
or
mov
les
aas
fmull
ljmp
notb
pop
les
ss
outsb
loopne
push
inc
jecxz
dec
xlat
pop
mov
lret
mov
push
mov
mulb
sub
pop
lahf
clc
inc
xor
out
xor
mov
push
mov
push
mov
gs
outsb
movsb
aam
xor
inc
cmp
int3
popf
xchg
stos
and
loopne
or
lds
mov
mov
pop
jp
int3
mulb
push
sub
xchg
stc
andb
sub
pop
sarl
dec
xor
mov
fmuls
stos
jbe
movsl
out
call
decl
int3
pushf
add
testl
ja
push
adc
pop
scas
lods
inc
loop
add
fistl
lock
adc
rcr
out
inc
jecxz
ss
out
jns
popa
je
and
xor
les
xor
xor
mov
dec
fldln2
sub
lahf
jb
and
push
inc
cmp
dec
push
fwait
lret
push
fs
add
cmp
dec
add
cld
insb
cli
mov
addb
fiadds
cmp
inc
rclb
in
xor
cmp
add
fisttpll
std
lock
mov
jmp
mov
push
or
stos
push
int3
mov
ljmp
repnz
imul
xchg
adc
jne
inc
push
das
lea
cmp
mov
add
pop
pop
mov
mov
shr
sub
pushf
push
sahf
mov
scas
sub
out
movsl
sbb
sub
adc
in
lcall
jecxz
mov
mov
dec
cmp
scas
rol
shlb
and
insl
xor
sub
frstor
and
insb
pop
adc
adc
xor
cwtl
outsb
dec
lock
cltd
dec
mov
jecxz
mov
sbb
int3
rol
orl
ljmp
addb
push
jle
cld
xchg
dec
dec
inc
int
and
js
fadds
inc
notb
test
mov
nop
xor
cmp
mov
push
inc
lcall
xchg
mov
out
lods
test
mov
fcmovbe
ljmp
movsb
push
iret
int
push
std
pusha
stc
jns
cmp
jl
mov
or
aam
sub
ret
aas
and
inc
mov
mov
mov
repnz
in
sbbb
xchg
push
mov
lcall
aas
add
sub
cld
mov
in
int
sub
mov
or
mov
movsl
mov
lahf
popf
pop
inc
push
push
out
clc
pop
push
lcall
xlat
incb
xchg
test
mov
test
xlat
inc
pop
pusha
scas
lret
pop
les
testl
cmp
repz
sub
pop
pop
ficomps
inc
popf
jp
scas
pop
sub
sbb
fmull
jns
and
jmp
stos
mov
cmpsb
test
ljmp
xchg
addb
sub
inc
cmpsb
loope
int3
js
xchg
std
sbb
jbe
inc
jl
icebp
adc
fildl
pop
jbe
stos
mov
xchg
xchg
mov
mov
pop
addr16
imul
pop
out
dec
mov
or
adc
jnp
pop
pop
and
xor
out
repz
ret
add
sbb
sub
jb
and
sub
std
jmp
cmpsl
int
add
mov
jle
push
add
xor
dec
cmp
cmpsb
mov
inc
lods
mov
dec
jnp
or
ljmp
inc
push
xor
push
xchg
mov
jecxz
cmp
mov
jo
js
faddp
enter
mov
shll
jnp
sbb
rcrl
or
test
movsb
ret
xchg
or
jbe
adc
out
add
out
fisubs
mov
adc
lods
push
cmp
aam
gs
icebp
sahf
sub
jg
lret
xchg
sbb
mov
fwait
cltd
xor
inc
cmc
push
jp
mov
lods
adc
mov
cltd
mov
push
sub
insl
jae
imul
xchg
pop
cmp
push
add
sbb
imul
adc
add
into
push
rcll
ficoml
repz
push
pop
xor
insl
fmulp
mov
sbb
sbb
mov
fdivp
cmp
fs
or
or
imul
adc
sbbl
cmp
push
mov
scas
inc
cmc
or
and
int
cmp
imul
push
ficoml
popf
test
hlt
cmp
mov
imul
outsb
xchg
add
cmp
jmp
push
subl
cmpsb
pop
lcall
push
push
lods
sahf
mov
repz
loopne
or
ja
adc
gs
push
sub
cmc
addl
fsubrl
pusha
push
aad
fsubr
push
aam
ret
dec
adcl
jne
les
lods
adc
add
enter
adc
and
pushf
dec
sbb
sub
mov
dec
jae
or
mov
in
addr16
pop
ss
test
adc
mov
pop
sbb
cmpsl
je
and
xchg
in
pop
out
push
in
mov
clc
insb
jb
push
mov
push
push
lret
aaa
xchg
lahf
xchg
sub
pushf
push
pusha
mov
int3
sbb
jmp
mov
outsb
aam
in
sbb
and
jge
fdivs
imul
and
movsb
push
dec
mov
sub
mov
das
mov
jge
out
inc
inc
into
test
dec
or
pop
jns
mov
imul
jecxz
jmp
jle
mov
rclb
fs
mov
adc
jmp
pop
jg
mov
scas
aas
mov
pop
pop
mov
xchg
cmp
lock
cmpsl
inc
jns
or
dec
loop
pop
pop
subb
jns
enter
daa
adc
jb
fs
pop
dec
mov
or
popf
scas
pushf
in
mul
pop
test
inc
jne
push
mov
fistps
mov
stc
test
insb
mov
mov
pushl
test
pusha
scas
je
dec
push
in
inc
enter
jl
sti
push
mov
pop
push
repnz
mov
push
lds
pop
mov
fdivs
movsb
mov
clc
xor
inc
mov
push
inc
outsl
mov
mov
lods
lds
pop
fnstsw
lods
cmp
cwtl
pop
icebp
shl
call
xlat
mov
stos
push
push
pop
push
in
out
xchg
lds
jns
push
pop
inc
aas
imul
inc
int3
mov
pop
rclb
mov
jmp
pop
inc
clc
cmpsb
fs
shll
xor
dec
add
stc
ficoms
and
mov
mov
mov
xchg
inc
sub
repz
test
nop
fidivrs
mov
adc
stc
xor
lcall
stos
ss
xchg
adc
iret
incl
int3
sbb
les
sub
sahf
popa
jp
lcall
outsb
or
mov
fldt
ret
ja
roll
dec
dec
jne
addr16
cmpb
cld
sbb
push
sbb
lods
add
jne
stc
cld
cmc
mov
fs
jnp
or
inc
loope
jg
inc
leave
xor
in
repz
scas
lods
int3
pop
dec
mov
enter
dec
or
mov
push
push
lods
adc
xchg
int3
push
lcall
fcoml
or
pop
cs
adc
les
hlt
inc
or
add
xor
pop
lock
pushf
leave
and
cmp
into
cmpsl
data16
inc
repnz
and
push
enter
nop
push
jbe
jge
dec
mov
cmp
push
and
add
xchg
loop
push
or
test
xlat
dec
mov
xor
lock
orb
add
jae
lds
and
pop
mov
mov
push
ret
orl
fsubrs
icebp
adcb
push
test
jno
dec
shlb
inc
fnstenv
mov
add
pop
enter
or
add
jg
and
movsl
loope
ficoml
jg
sbb
fsubrp
mov
stos
in
add
in
sub
ja
jb
mov
popa
aam
sarb
addr16
cmp
sbb
mov
sub
sub
cmpsl
roll
int
mov
or
cmp
sub
mov
dec
repnz
inc
push
inc
ret
cli
rorl
jb
push
ss
ljmp
mov
subb
and
pop
pop
movsb
aam
shlb
add
nop
xlat
or
loop
fld
andb
dec
sahf
into
jns
mov
or
mov
outsl
add
cmp
cmp
cmp
movsb
add
pop
cmp
cmpsb
and
cmp
shll
lret
out
test
test
lds
cwtl
and
jmp
outsb
push
cmp
sarl
push
not
xchg
mov
jmp
or
cltd
mull
pop
dec
sarl
pop
ret
popa
or
dec
mov
xchg
call
push
int
cmp
shll
cltd
lahf
stc
cmp
push
push
and
jg
int3
add
mov
fwait
push
fsts
jno
movsb
inc
decl
xlat
loop
mov
data16
mov
add
gs
sub
mov
loopne
lahf
xchg
xor
sbb
lds
xchg
lahf
adc
stos
inc
push
fldcw
xor
and
mov
mov
mov
jl
lret
into
fidivrl
adc
mov
pop
in
sbb
push
mov
icebp
jecxz
cmpsl
cmp
pop
jg
frstor
lcall
and
js
test
lahf
sti
into
lcall
sub
fisttps
mov
imul
or
jl
mov
iret
cmp
call
in
mov
adc
push
lcall
insb
mov
sarb
iret
sbb
add
xchg
movsl
hlt
pop
in
cmpb
loopne
mov
mov
pop
shl
xchg
int3
xchg
mov
adc
outsb
movl
fyl2xp1
mov
xchg
addb
jae
inc
gs
xchg
fcompl
loopne
lret
dec
cmp
mov
addb
fdivl
ret
js
sbb
sahf
hlt
jg
arpl
push
fs
repnz
lds
cwtl
in
cmp
or
mov
or
mov
shl
mov
out
cmc
nop
mov
jge
hlt
add
sbb
jl
mov
and
fs
add
jecxz
jle
xor
sbb
loopne
cmp
sub
je
push
lock
in
loope
cmp
push
jbe
std
es
dec
call
xor
jns
dec
pop
inc
adc
fdivl
push
addb
notl
lahf
mov
mov
dec
or
mov
loopne
dec
push
lret
sub
in
sbb
xchg
sbb
test
xor
and
sub
xor
fadd
xchg
mov
ds
iret
sub
fwait
sub
dec
leave
cltd
adcl
ficompl
add
loope
mov
jbe
pop
adc
rcll
repz
sub
jp
movsl
imull
int
hlt
jecxz
xor
pusha
lock
out
out
cmp
pop
insl
dec
in
leave
pop
stc
mov
push
or
fcoms
loop
call
scas
inc
fistpl
mov
pop
lea
lea
dec
cltd
cwtl
aaa
es
stos
xchg
insb
xchg
lahf
inc
in
jp
dec
mov
icebp
pop
mov
imulb
popa
sub
mov
and
push
subl
pop
insb
cmp
add
mov
push
mov
ja
cwtl
or
mov
fimull
movsb
inc
jmp
inc
jp
mov
jb
xor
adc
add
repz
pushf
aas
add
jne
pop
sub
pop
imul
fnstcw
pop
and
sbb
dec
push
and
or
daa
dec
jne
lock
inc
clc
sbb
adc
test
add
inc
xchg
jns
inc
jns
jne
cld
and
int3
inc
and
stc
adc
out
mov
mov
ret
adc
rcrb
push
iret
sub
call
mov
jp
jnp
das
push
jb
fsubr
fwait
xchg
jns
clc
jp
repz
es
pop
push
or
mov
aas
mov
inc
xchg
outsb
mul
aad
xchg
push
addr16
insl
cmp
dec
gs
rcr
mov
mov
mov
push
loopne
mov
test
push
es
pop
pop
push
mov
rorb
sbb
push
sbb
sbb
jmp
into
testl
mov
and
aas
fimull
mov
pusha
xor
mov
pop
mov
adc
daa
or
mov
xor
push
lods
packssdw
pop
sbb
outsb
gs
cltd
inc
ja
sbb
sub
push
jle
add
fnsave
in
leave
fidivs
add
sub
setl
loope
jecxz
xchg
in
mov
xchg
in
sub
or
pushf
hlt
jno
pop
icebp
test
popf
aas
std
or
or
jp
sub
xor
and
pop
cmp
jne
and
addr16
add
mov
mov
inc
xor
xchg
loop
sub
into
cmp
xchg
xor
in
mov
and
pop
insb
jns
push
in
adcl
sbb
xlat
into
and
xor
das
repnz
xor
mov
data16
in
jnp
xchg
adc
inc
cmp
pop
rorl
mov
lret
sti
gs
sbb
enter
icebp
xor
pop
fs
scas
adc
xor
sbb
cwtl
inc
addr16
mov
or
sahf
inc
jae
jmp
push
scas
iret
scas
leave
jle
push
xchg
adc
or
test
lock
loop
in
sbb
fs
cmpsb
add
push
inc
rcrl
outsb
mov
js
gs
out
jo
mov
mull
sub
movsb
js
icebp
mov
xor
movsb
sub
in
sbb
mov
xchg
in
shl
out
pop
and
mov
jns
subl
push
mov
decl
jbe
lahf
lds
dec
adcb
inc
cmp
adc
addr16
or
inc
mov
mov
lock
xchg
xchg
dec
cmc
xor
lods
clc
dec
pop
inc
ror
dec
ficompl
jns
inc
dec
adc
or
adc
into
rol
rcrb
jnp
daa
mov
jb
out
jg
dec
arpl
xchg
fscale
sub
jmp
inc
xchg
jb
cmpsl
mov
mov
lea
fimuls
int
sbb
mov
ljmp
mov
stos
cwtl
sbb
or
jo
repz
fadd
xor
cli
and
cli
movsl
push
add
outsl
sbb
sbb
xchg
outsb
mov
cwtl
cwtl
gs
shll
sbb
dec
dec
mov
dec
inc
jecxz
mov
data16
mov
sub
sbb
je
sbb
in
movsl
notl
in
sbb
add
in
cmpsl
fimull
addl
out
cmp
lcall
xchg
add
mov
test
pusha
mov
cmp
xor
data16
fnstsw
pusha
hlt
cmc
cmp
repz
lds
xchg
mov
sti
outsl
jnp
mov
add
mov
xchg
cmp
pop
icebp
mov
aad
jnp
leave
mov
rcrb
mov
hlt
inc
fucomp
xor
scas
cmpsb
adc
aas
mov
push
andb
pop
pusha
das
loope
hlt
push
int3
cmpsl
add
test
add
sub
insb
sub
sti
lea
pop
popf
outsl
mov
xorb
stc
xchg
loope
sar
sti
ret
das
in
add
ds
sub
push
mov
test
xchg
push
mov
arpl
and
mov
outsb
iret
lods
lds
dec
in
jle
popa
mov
fbstp
jge
pusha
mov
loope
or
xchg
mov
loope
dec
mov
lcall
jl
fstp
rorb
lahf
jecxz
lret
mov
les
push
sbb
add
add
jge
int
cmpsl
fildl
cmp
dec
cli
test
sbb
xor
mov
inc
adc
and
jl
mov
sbb
sbb
mov
mov
lahf
pop
dec
adc
push
mov
mov
or
and
stos
mov
push
cmp
test
inc
xchg
in
adcl
js
push
mov
cmpsl
jle
mov
inc
mov
pusha
xor
xchg
aas
or
shrd
ss
mov
jb
rcll
imul
out
inc
out
jecxz
mov
rcrb
sbb
in
push
imul
jns
pop
and
sub
jle
cmp
mov
jns
cmp
xchg
out
aad
mov
jae
sub
dec
fstpt
sbb
popf
test
mov
dec
cmp
jle
cli
xchg
ja
inc
jbe
xchg
lret
and
or
jb
aas
push
mov
ror
hlt
addb
std
addr16
ja
clc
bound
adcb
cmc
ret
mov
loope
dec
or
jb
inc
pop
mov
sbb
popa
jne
add
mov
sub
and
adc
sub
xchg
mov
ret
jnp
out
fsubrl
ss
adc
push
cmpsb
ret
pop
adc
int3
mov
mov
shlb
cmp
das
dec
fsub
sarl
inc
lods
in
push
imul
or
sbb
jp
push
js
push
cmp
stos
movsb
leave
rorl
mov
add
out
or
sub
aas
sub
cmp
inc
inc
sbb
mov
adc
mov
or
xchg
orl
stc
out
repz
mov
fstpt
lods
push
lcall
insl
mov
mov
cmp
xor
bound
adc
push
push
mov
pop
mov
out
cmp
out
in
stos
add
fbstp
jg
or
popa
mov
push
xchg
arpl
sahf
inc
loope
mul
imul
ss
aam
jle
xchg
stos
dec
rcll
stc
jbe
xchg
sub
jnp
out
iret
cmpsw
iret
fidivrl
push
in
loopne
pop
sbb
std
xchg
mov
mov
aad
loope
dec
fadd
leave
mov
adc
xchg
imul
outsl
or
out
dec
sbb
or
movsl
jbe
inc
adc
enter
or
xchg
std
gs
lret
aad
jmp
sbb
lods
adc
enter
call
lock
in
pop
pusha
out
push
cmp
dec
cmc
or
rol
push
les
shlb
pop
dec
mov
dec
std
mov
je
jne
cmp
xchg
inc
notb
jb
pusha
shlb
movl
sbb
xchg
xchg
jl
jnp
mov
sbb
popf
imul
pop
in
mov
imul
fwait
shll
clc
add
xor
push
hlt
inc
mov
push
in
xchg
es
mov
mov
es
add
push
mov
popf
pop
aad
jp
jge
sub
into
jnp
and
push
inc
ss
xchg
cmp
jmp
lret
lods
idivl
pop
inc
arpl
lret
or
push
mulb
pop
sbb
jb
mov
movsb
pop
adc
push
sbb
js
lods
movsl
pop
fwait
enter
push
jno
ret
xchg
mov
out
popf
adc
adc
add
mov
adc
xchg
lods
mov
pop
lods
push
xchg
push
push
sub
lret
hlt
sbb
add
xor
inc
js
sahf
jmp
jp
mov
mov
add
jb
daa
sub
xchg
xchg
jg
dec
jbe
into
xchg
scas
or
and
mov
in
xchg
dec
es
mov
mov
jmp
in
in
and
cmp
pop
push
cmpsl
add
ss
jno
ds
shlb
inc
and
orb
pop
sbb
loopne
push
pop
pop
nop
lret
cmpsl
pop
aaa
mov
movsl
loopne
sbb
lret
push
lods
adc
lea
add
movsb
stc
adc
pushf
xor
lcall
jb
add
test
mov
lahf
mov
cltd
in
inc
iret
and
popf
fsub
adc
insb
push
sbb
jns
inc
mov
mov
lds
add
or
cmp
subb
popa
popa
sahf
pushf
jle
outsb
or
mov
cmpl
faddl
jbe
push
add
jbe
mov
pushf
cmp
and
sti
fucomp
sub
and
into
dec
sti
inc
jmp
mov
sbb
adc
pop
mov
outsl
xchg
push
inc
test
dec
jnp
dec
mov
adc
jge
xor
push
sub
xor
or
mov
ds
adc
insb
jg
jmp
jno
test
cld
mov
sub
sbb
cmp
pushf
inc
add
jb
lods
lcall
arpl
ret
inc
into
jl
lcall
push
cmp
lret
pusha
dec
mov
add
push
incl
or
push
insb
and
lcall
jmp
add
dec
inc
or
dec
repnz
add
in
and
in
ljmp
cmp
adc
test
and
pop
in
lea
jg
and
in
mov
jnp
gs
outsb
push
mov
mov
mov
xor
sub
scas
gs
leave
je
mov
aas
jbe
and
stos
fnstenv
loope
mov
int3
push
fs
sbbl
push
gs
fstpt
or
mov
jo
jp
sbb
push
dec
push
xchg
pop
dec
sbb
mov
aas
cmp
in
cwtl
dec
adc
nop
xchg
add
es
adc
fwait
sbb
jmp
push
mov
es
ret
or
mov
mov
iret
imul
inc
neg
cmpsl
inc
sub
jnp
mov
testb
sub
hlt
mov
sub
nop
pushf
cmp
xchg
xchg
adc
mov
sub
sti
jge
repz
pop
xchg
push
rcrb
fsubrp
sub
and
push
int
fisttpll
imul
xlat
rol
clc
push
scas
pop
cld
or
pop
and
mov
aas
sub
pusha
loope
cmpsb
add
std
mov
push
lcall
or
cmp
aaa
lret
loopne
lods
stos
std
icebp
js
mov
test
or
sub
je
cwtl
push
enter
or
shll
mov
pop
and
popf
jnp
and
aaa
cmp
mov
repnz
adc
and
mov
cmp
and
inc
adc
rol
loope
adc
repz
sti
lret
dec
inc
daa
aad
pop
inc
cmp
outsl
jb
rcrl
sbb
push
mov
hlt
fisttps
inc
fdivr
loop
cmp
test
leave
mov
xchg
cmp
push
add
stos
lods
add
loopne
xchg
add
dec
jge
sub
lods
mov
ja
inc
or
lret
mov
push
pop
xchg
ds
sub
dec
dec
jnp
push
jae
adc
imul
ret
cld
xor
cwtl
pop
and
and
loopne
push
scas
ljmp
push
ja
shr
xchg
pushf
sub
jns
mov
dec
jp
mov
dec
jbe
pushf
call
xor
jno
insb
mov
pusha
pop
hlt
inc
lods
or
lods
in
les
int3
sbb
sub
fidivrs
sbb
cli
cmp
cmpsl
jge
and
mov
dec
inc
sbb
lods
xor
push
mov
out
mov
adc
mov
arpl
cltd
rol
daa
in
mov
mov
jnp
loope
or
jns
in
or
in
push
int3
jbe
dec
popa
xor
ffree
xchg
insb
shr
sub
insb
pop
scas
mov
mov
xchg
fdivrs
adcl
mov
fs
fs
cli
add
rcrb
aam
stos
inc
fisubs
movsb
or
mov
imul
call
movsb
xchg
cmp
sub
in
bound
cs
xchg
ljmp
push
iret
sbb
outsl
pop
mov
rcl
jnp
lret
into
lcall
fidivrs
ret
fsubrp
cltd
push
cli
in
cld
jbe
adc
pusha
cmp
adc
hlt
ljmp
sbb
rorb
push
loope
push
jge
mov
in
and
mov
leave
fsubrl
jb
sub
jno
mov
sbb
cmp
jno
cmp
movsl
xlat
shlb
lock
sub
push
mov
mov
ror
add
js
add
add
cmp
cli
mov
int3
hlt
cmpsb
stos
test
jbe
test
dec
orb
out
cmp
pop
shr
or
mov
imulb
pop
xor
mov
mov
cwtl
lds
fisubl
lcall
pushl
nop
mov
fdivrl
clc
das
push
jmp
sbb
hlt
cmp
cmp
arpl
inc
out
sbb
pop
in
xor
imul
pop
mov
mov
pusha
xchg
lods
inc
lcall
mov
mov
mov
dec
lcall
cmp
out
push
ja
test
and
jle
outsb
popf
inc
add
mov
xchg
jae
jp
lcall
popa
cmp
jae
jo
and
add
test
jle
push
jno
mov
mov
daa
or
jl
mov
out
ror
insl
popf
and
xor
jmp
push
mov
push
jl
adc
enter
push
ljmp
push
movsl
and
hlt
fnstenv
loope
shrb
rcll
mov
clc
movl
shlb
fsubs
push
xchg
hlt
movsl
push
or
lock
sbb
jecxz
les
and
inc
ficoms
xor
gs
jmp
aad
icebp
shrl
aad
outsl
scas
lds
enter
xchg
xor
push
popf
insb
popf
lods
sub
shlb
mov
outsb
lods
adc
pop
jecxz
outsl
push
out
add
add
or
xor
xchg
mov
or
loop
dec
in
jge
int
imul
movntq
push
cmp
mov
ficoml
fstl
stos
lret
adc
xchg
pop
or
push
and
hlt
jmp
mov
adc
out
jmp
and
cmpsb
inc
jle
jo
mov
push
movsb
mov
xchg
dec
adc
out
cld
pop
mov
es
jecxz
xor
test
push
lea
adc
push
mov
and
ja
mov
mov
imul
sbbl
scas
lods
mov
shlb
pop
and
jno
push
sbbl
mull
insl
outsl
and
pop
pusha
pop
xlat
cld
outsb
mov
xchg
xchg
fisttpll
xchg
lea
les
in
pop
xor
lahf
leave
jo
and
loope
int
out
jmp
mov
xchg
sbb
out
ret
jne
add
pusha
fcoml
xchg
repnz
jmp
mov
jecxz
outsl
sbb
push
mov
loopne
xchg
push
sub
sbb
and
push
fs
pop
clc
int3
push
push
in
mov
cmp
fs
adc
clc
or
xor
adc
push
es
push
data16
lock
rorl
or
mov
mov
leave
dec
sub
int
push
dec
mov
scas
sbb
push
and
inc
popa
repz
fnstcw
popf
fisubrs
pop
fmulp
add
cmp
mov
dec
aaa
call
das
in
xchg
jno
mull
in
push
mov
stos
inc
jb
pop
xor
sbb
test
ja
add
inc
cwtl
add
cld
add
ss
push
push
fdivrs
xor
sub
sbb
xchg
push
ss
xchg
cltd
filds
mov
and
lea
pop
adc
imul
ret
and
in
popa
enter
sahf
dec
test
inc
lea
jno
dec
jno
fcmovu
sbb
ljmp
dec
dec
stos
mov
jp
aam
cmp
or
dec
test
and
test
bound
pop
mov
fwait
sti
pop
popf
mov
push
adc
nopl
cwtl
xchg
add
push
mov
mov
cmpsl
outsb
inc
dec
iret
mov
add
fwait
aam
pop
int3
jae
adc
jbe
pop
and
jae
jbe
adc
xchg
aas
cld
or
cmp
sbb
pushf
outsl
cmp
fmuls
sub
push
dec
aas
add
dec
daa
add
gs
int
adc
test
movsl
outsb
cwtl
popa
scas
dec
xlat
sub
pop
push
cltd
popf
aam
jne
dec
cli
mov
mov
adc
lret
loop
dec
inc
jmp
cmpsl
lea
and
call
mov
jecxz
mov
and
subl
xchg
dec
loope
mov
lods
sub
jb
fdivl
popf
call
pop
xor
clc
inc
insb
dec
jae
push
or
dec
sbb
xchg
test
sarl
push
repnz
jg
pop
or
test
scas
mov
cmc
addb
mov
add
dec
lret
push
sub
mov
ljmp
jmp
enter
in
pop
pop
leave
jno
into
mov
inc
sahf
fistps
push
mov
stos
jp
filds
and
xor
mov
xchg
shrb
clc
add
fists
jno
imull
jp
or
mov
mov
jbe
pop
loopne
jg
stos
inc
xorb
xor
pmaddwd
jb
mov
inc
dec
dec
push
dec
mov
or
call
dec
push
cmp
ret
out
inc
pushl
out
and
jae
pop
ljmp
or
xor
sbb
fisttpl
and
xor
push
sub
pop
pop
push
out
mov
push
pop
popa
and
mov
arpl
cmpsl
push
pop
xor
adc
inc
pop
push
dec
cmp
add
loope
sarb
lods
jle
xor
lahf
loopne
daa
mov
adc
add
jnp
adc
sarl
mov
pop
mov
pop
in
pushf
ret
fistpl
aad
mull
cmc
in
cmp
pop
out
mov
rcr
dec
jae
sbb
pushl
mov
mov
lret
or
repnz
xor
dec
fwait
cmp
sti
mov
mov
inc
icebp
scas
test
iret
jecxz
and
stc
jnp
shll
popf
jnp
xor
and
add
lcall
repz
adc
push
stos
xchg
loop
mov
xchg
fdivrp
cmpsl
and
sbb
stos
sub
xchg
imul
jae
test
xchg
xchg
and
push
inc
dec
jge
mov
subl
pop
and
xchg
mov
push
popa
jns
inc
lods
jns
call
push
sbb
ret
add
daa
jge
sub
mov
out
add
aad
push
aaa
mov
and
insl
ret
push
sbb
inc
arpl
push
mov
inc
lods
fsubl
or
js
fldt
out
sub
es
mov
mov
and
xor
add
pop
or
sbb
sbb
rcrl
scas
clc
je
inc
pushw
mov
sbb
loope
mov
ret
cmc
daa
lret
ret
adc
mov
add
mov
inc
pop
sbb
pushf
int3
int3
cmp
jbe
fists
push
or
ret
push
jne
test
repnz
repnz
in
arpl
cmp
xchg
mov
rorb
inc
stc
mov
jge
mov
pop
mov
incl
push
add
pop
repz
jae
fsub
mov
sbb
and
sub
imull
xchg
test
testb
sbb
push
jbe
out
ja
add
lcall
sti
aad
je
xchg
mov
test
dec
addr16
mov
cltd
inc
mov
mov
jne
mov
hlt
add
mov
test
jmp
fildl
fucom
inc
test
cmp
mov
xor
ret
mov
or
mov
stc
xorb
sub
ja
or
loopne
mov
mov
test
out
aaa
es
mov
in
lret
adcl
aad
push
ljmp
push
push
jne
cmpsb
push
pusha
call
inc
fwait
mov
or
jle
enter
in
jbe
mov
pop
and
mov
adc
jno
in
sub
movsb
hlt
sub
xor
sub
pop
sbb
sub
into
pop
fs
xchg
sti
mov
mov
stos
out
es
imul
xor
mov
subb
iret
jo,pt
fidivrl
push
add
subl
jle
add
fisttpll
pop
mov
xchg
sbb
jo
outsb
dec
pusha
ret
xor
jmp
push
cmpsl
iret
cwtl
repnz
mov
dec
sti
inc
in
xor
add
or
mov
xor
dec
or
xchg
out
adc
out
loop
inc
push
nop
adc
xor
roll
jg
lcallw
sbb
lret
test
dec
mov
stos
add
add
sub
cld
or
dec
push
add
std
cmc
sub
out
xor
jmp
pop
jg
dec
fwait
xor
movsl
rorl
arpl
lcall
sbb
xchg
rorl
ds
xchg
les
lretw
je
push
dec
nop
fwait
aaa
xor
xor
cmc
dec
xchg
adc
xchg
mov
lcall
jg
add
aas
pop
mov
stc
add
out
scas
loop
sbb
push
xchg
push
ss
mov
lods
out
xchg
test
hlt
cmpl
adc
and
or
pop
imul
and
repz
rorl
ds
adc
fildll
mov
rolb
mov
rol
test
lods
xor
imul
leave
jg
and
rorl
xchg
leave
outsl
dec
out
stos
data16
push
movsl
aam
cmpsl
ret
sub
outsl
mov
jge
adc
mov
int
nop
clc
hlt
mov
or
or
aad
outsl
shll
add
scas
push
xor
add
dec
stc
sbb
push
dec
lcall
js
fcompl
rcrb
mov
dec
adc
dec
xor
or
pop
sub
ret
loope
scas
ret
sbbl
mov
mov
inc
sub
inc
xor
inc
adc
inc
lds
fmull
pop
jmp
mov
loopne
mov
and
sub
into
jns
ja
jmp
xor
xchg
dec
dec
inc
adc
adc
popa
mov
enter
sbb
gs
mov
aas
jbe
adc
pop
add
xchg
sub
int3
sbbl
pop
cmpsb
rcl
pop
lret
push
arpl
xchg
scas
into
push
movsl
add
mov
shrb
inc
xlat
dec
shrb
and
insl
xor
add
add
popf
sbb
xchg
pushf
sub
jne
pop
or
pop
adc
je
push
adc
adc
push
add
jle
ret
push
adc
xor
mov
lcall
stos
push
leave
sbb
sbb
push
pop
subb
cmpsb
jae
and
pop
jecxz
dec
iret
push
sbb
cmc
sti
cmp
adc
push
in
sub
cmpsb
ret
mov
adc
imul
add
dec
xchg
lods
test
mov
add
cld
jl
int
mov
movsb
mov
cmp
dec
hlt
stc
pop
adc
cmp
lret
bound
insb
pop
aas
add
pop
sbb
loope
cmp
inc
ja
add
imul
stc
cmpsb
mov
rcll
adc
or
arpl
add
or
std
mov
mov
stc
xor
push
dec
stos
stos
cld
xchg
movb
mov
add
cmp
test
xor
ja
dec
inc
daa
cmpsl
ljmp
shll
in
mov
imul
imul
or
pusha
adc
mov
xchg
xor
test
loopne
push
xor
fldl
pusha
mov
push
int
movlhps
mov
sub
xor
icebp
loop
outsl
add
dec
jmp
outsl
ret
lock
mov
hlt
xor
mov
mov
push
movsb
into
add
jnp
xor
inc
pshufw
cwtl
inc
sub
cmp
mov
fwait
daa
int
testl
fwait
xor
and
push
jne
js
sbb
xor
inc
cmc
mov
mov
repz
fwait
aad
dec
xlat
arpl
loope
sub
insb
sub
sub
notb
int3
dec
push
and
aam
xchg
dec
xlat
jecxz
das
fwait
pop
inc
rcll
or
xlat
xchg
addb
xchg
sahf
sarb
lahf
mov
pop
push
shll
lock
sbb
dec
shr
adc
xchg
test
dec
fs
out
pop
icebp
test
fcmove
jne
lea
test
std
ret
andl
cmpsb
pop
mov
fsubrl
stc
mull
and
lds
shlb
push
mov
pop
push
sbb
xor
mov
and
es
shlb
std
xchg
insb
add
add
cmpsb
sub
pushf
loopne
mov
movsl
xchg
mov
fsubs
push
mov
jmp
cmpsb
andl
negl
not
jecxz
loope
pop
lea
aad
mov
lods
jns
outsb
xor
lea
cltd
pop
mov
shrb
jnp
jae
int
cmpsl
repz
fisttpll
add
outsb
cmpsb
sbb
daa
adc
inc
imul
mov
icebp
xchg
dec
cld
adc
cs
movsl
flds
mov
std
sbb
jge
mov
in
int3
or
ret
inc
inc
pusha
push
ja
pop
ja
out
into
and
push
mov
jno
lret
or
imul
adc
rcl
and
cmp
or
inc
inc
sub
cmp
loopne
sub
xor
sub
das
sbb
popa
adc
cli
pop
push
les
scas
jne
sub
push
loop
push
popf
inc
pop
mov
movsb
fldl
mov
fnstsw
out
stos
sbb
cli
popa
mov
jo
inc
shlb
ja
mov
or
sti
mov
shlb
jo
adc
fisubrl
lods
add
cli
pop
adc
xchg
and
add
cmp
fidivrs
dec
jns
sub
sbb
add
jmp
jo
pop
int
lcall
call
pop
and
arpl
adc
call
int
and
imulb
cmp
incb
sub
cwtl
andb
in
pop
jo
sub
jnp
test
movsb
push
js
xchg
and
or
inc
iret
insb
pop
sub
dec
add
add
xchg
xchg
clc
pop
aas
jne
jg
movb
xor
roll
dec
mov
mov
cmc
js
inc
push
ret
xor
imul
jne
sub
jg
xor
add
inc
insl
xchg
push
or
repz
push
mov
jg
loop
mov
outsl
dec
loopne
sub
push
push
jnp
lcall
sbb
xchg
into
inc
sti
dec
iret
dec
adcl
jno
pop
jg
mull
lock
frstor
lds
cmp
or
adc
jg
and
add
mov
js
push
movsb
int
adc
mov
inc
sbbl
mov
inc
mov
ss
sahf
clc
loopne
dec
rcrl
dec
mov
sbb
daa
pop
ja
gs
inc
sub
and
sbbb
testl
add
pop
mov
ret
mov
mov
in
into
cmp
aaa
sbb
gs
sub
jge
adc
sub
aam
out
jo
pusha
dec
stos
aam
int
mov
push
dec
inc
lock
or
js
mov
jb
sbb
mov
test
dec
repnz
mov
xor
out
mov
stos
and
cld
sbb
lret
jbe
int3
fisttps
lea
rcl
inc
fcmovu
sub
dec
inc
mov
fdivrs
add
in
pop
shl
ss
inc
and
aam
or
fiaddl
arpl
pop
or
fwait
dec
je
mov
mov
cmp
ret
sbb
xchg
or
dec
add
xchg
push
stos
lret
mov
mov
test
xchg
and
ret
sahf
mov
shlb
xor
sbb
insl
sbb
xor
stc
or
js
inc
shll
shll
sbb
jge
std
adc
ret
xor
mov
or
mov
mov
and
dec
cmp
push
mov
cmc
jmp
or
repz
stos
and
mov
sbb
js
lea
les
push
idivb
xorb
push
mov
xchg
les
push
imul
and
pop
hlt
daa
jp
dec
mov
and
adc
xor
cmp
out
out
aam
lods
fs
mov
cmpsb
sahf
and
lahf
rcll
adc
and
andl
ret
lret
xchg
punpckldq
test
in
fidivrl
xchg
pop
push
pop
mov
inc
in
mov
inc
push
incb
inc
jmp
dec
ss
pop
aam
or
push
push
jb
lea
cmp
mov
in
mov
sub
adc
cs
inc
mov
jno
imulb
sub
lret
xchg
dec
inc
cmpsl
push
mov
inc
loopne
xor
rcr
addr16
sbb
mov
jnp
lret
cmp
push
add
loop
rcrl
gs
inc
mov
cld
push
mov
and
cmp
push
xor
mov
clc
cmp
cmp
fcoms
inc
in
out
in
test
data16
dec
fcmovnu
add
pusha
add
insb
adc
das
imulb
pusha
add
test
outsl
xchg
dec
pop
jae
call
mov
fimuls
fdiv
insl
mov
jle
push
sbb
ret
leave
sbb
xchg
sbb
xchg
cld
imul
idivb
adc
xor
cmpl
dec
sbb
cmp
mov
scas
mov
adc
or
iret
adc
daa
js
in
jl
dec
cmp
or
inc
xchg
out
js
cmpl
mov
fldl
jmp
push
and
xchg
leave
cwtl
cwtl
sahf
and
in
pop
pop
or
push
iret
ss
popf
jl
adc
inc
lea
jnp
test
test
mov
fs
jg
jae
mov
sahf
imul
out
repz
insb
or
popa
xor
lock
fwait
xchg
repz
mov
xchg
insl
mov
inc
fildll
sti
scas
xor
cmp
rep
in
cld
lods
cmp
imulb
lods
mov
fucomp
or
cmp
jno
pushf
mov
ljmp
sub
lods
notb
push
or
fcmovb
stc
xchg
icebp
inc
jb
jnp
push
jns
xchg
ljmp
mov
lock
cmp
pop
dec
push
adc
cmp
cmpsl
sub
scas
adc
push
mov
xchg
sti
lret
insb
lods
and
clc
in
pop
jnp
ja
lret
pop
pop
cmp
hlt
push
xor
nop
inc
pop
mov
sub
xor
dec
pusha
or
shrb
out
or
mov
and
rorl
sub
into
and
inc
jne
shll
mov
xchg
cs
cmp
cmpsl
popa
mov
movsl
dec
out
aas
shrl
and
repz
mov
pop
lods
imul
add
push
icebp
dec
lds
xchg
ss
in
mov
insl
fistps
push
mov
and
add
jo
ret
sahf
shrb
inc
pop
or
into
sub
add
cmc
mov
adc
jp
ret
push
push
scas
movlps
sub
imul
int3
lock
pop
lcall
xlat
test
fcmovu
push
cltd
pop
stos
gs
dec
or
sbb
mov
out
add
pusha
out
jmp
dec
frstor
jle
mov
dec
data16
jb
pop
insb
mov
cltd
inc
or
lds
pusha
test
adc
adc
add
cmpsb
mov
dec
sub
xchg
mov
dec
hlt
je
jl
dec
mov
pop
cmpsl
js
scas
cmpsl
ficomps
mov
stc
fdivrl
xor
add
test
loope
push
sbb
dec
fnstenv
jg
sub
data16
mov
jbe
xchg
in
adcb
cmpsl
mov
or
mov
call
mov
movups
and
inc
in
ror
sub
adc
test
repz
xchg
lret
scas
adc
lcall
jnp
xchg
xor
inc
push
movsb
lods
mov
sub
aaa
insb
pop
dec
xchg
and
cltd
and
inc
push
add
sbb
lret
into
xor
jg
mov
iret
mov
jge
gs
loope
int
idivl
in
jne
mov
scas
cs
inc
inc
daa
cwtl
dec
cli
hlt
pop
cmp
insb
icebp
xchg
inc
jne
movsl
push
jae
jmp
push
pushf
test
lcall
jbe
xor
lcall
jg
sub
fbstp
ja
sub
cmp
jecxz
mov
aas
clc
pop
mov
sub
out
dec
xchg
pusha
fisttpll
xchg
pop
loope
push
cmp
lods
shr
adc
push
in
xor
cmp
pop
dec
sti
sub
mov
push
lret
mov
mov
dec
fcoml
insl
icebp
cmp
xchg
xchg
jae
adc
fs
push
push
gs
push
xchg
inc
xor
xor
jbe
daa
adc
pop
out
lcall
mov
or
xor
ja
in
addr16
shl
mov
add
addl
cli
je
pop
xchg
fs
nop
popa
sub
je
test
adc
or
pop
add
scas
and
mov
dec
rolb
imul
inc
or
mov
adc
mov
add
fisttpll
hlt
sub
sysret
call
aad
and
pop
cwtl
sbb
ret
test
mov
jne
ja
stc
jmp
neg
add
insb
testb
jno
xchg
pushf
lock
roll
inc
xchg
negb
dec
ss
shll
bound
out
fisubl
sub
mov
sub
mov
loop
jnp
in
sbb
jo
sub
jg
lods
lea
dec
inc
ficoms
addr16
jne
sub
cmpsl
mov
jno
adc
inc
push
xchg
sbb
xor
lea
inc
fiaddl
test
mov
loope
mov
push
leave
loope
cltd
jecxz
mov
dec
push
xchg
inc
pop
mov
out
xchg
xchg
test
iret
cmpsb
sahf
lock
cmp
xor
insl
fildl
fists
cmp
xor
sbb
xchg
scas
and
imul
int
jmp
jbe
add
inc
mov
cld
icebp
ja,pt
fbld
pop
or
int
inc
and
add
test
jns
fadds
testl
mov
shrd
pop
push
loope
mov
sub
add
lret
pop
xchg
and
in
into
imulb
adc
jmp
dec
jo
dec
leave
or
sbb
mov
insb
jno
add
xchg
outsb
popl
mov
rcl
sbb
into
add
mov
cmc
pop
les
leave
pop
cmp
int3
add
and
mov
sub
and
lea
loopew
cpuid
xor
push
xor
movsl
push
add
pop
pop
add
inc
mov
pusha
xchg
adc
push
int3
jno
lret
cmp
in
loop
in
dec
adc
stos
jle
adc
pop
mov
jecxz
xor
and
out
pop
sub
sub
movsl
xchg
sbb
jecxz
movsl
test
mov
pop
jbe
xor
cmp
lret
lock
xchg
shlb
enter
and
mov
ja
iret
mov
lret
ret
sbb
jge
in
outsb
out
ja
test
cmp
inc
dec
ds
out
bound
or
sub
lret
scas
dec
insl
xchg
fiadds
ret
mov
mov
xchg
aaa
xchg
xchg
cmp
sub
mov
in
leave
push
and
mul
negb
xor
jne
jecxz
mov
inc
rorb
push
fsubrs
cmpsb
lret
or
mov
or
ret
dec
inc
jno
or
mov
cmp
xor
clc
mov
push
xor
jg
xor
add
xor
shll
leave
stos
jl
mov
test
dec
insl
jbe
adc
jns
out
sbb
out
shll
outsb
adcl
add
cwtl
xchg
inc
mov
push
cmpsl
xchg
ja
mov
mov
clc
lcall
jno
xchg
adcb
xchg
mov
andl
add
bnd
push
imul
je
adc
sbbb
mov
loopne
rcll
stos
and
bound
sub
into
test
fsubl
mov
or
xchg
lea
jns
lods
out
sbb
push
sub
add
jle
bnd
or
aad
addr16
mov
sub
push
cmp
shrl
jp
scas
mov
mov
mov
mov
outsb
mov
data16
aas
fiadds
jae
into
jbe
ljmp
fs
ficomps
adc
mov
jno
insb
jnp
jb
mov
repz
add
shrl
jp
jp
aaa
pushl
push
pop
pushf
pop
or
inc
inc
mov
orl
std
lods
dec
sahf
int3
pop
ror
movsb
jb
sbb
repnz
sub
btr
cmpsb
mov
cmp
test
out
sbb
test
dec
mov
out
aad
mov
xchg
pop
les
dec
out
fadds
xchg
mov
ljmp
jbe
aam
mov
cli
dec
and
dec
add
mov
das
std
and
jno
push
jl
pop
and
push
and
and
sub
or
sbb
stos
adc
aad
push
jb
inc
sub
movsl
and
fldcw
dec
fucom
xchg
cmp
fimull
lahf
dec
mov
cld
cmp
in
and
clc
loopne
mov
add
int3
leave
inc
aaa
leave
and
out
icebp
jmp
mov
mov
xor
mov
movswl
int
mov
pushf
aad
int
dec
mov
xor
jge
lret
add
inc
fidivrs
icebp
mov
icebp
or
xor
cmpsb
fisubs
dec
testl
pop
or
enter
push
pop
fcmovnbe
inc
xor
cwtl
pop
mov
mov
ret
mov
jae
out
cmp
fists
pop
pushf
mov
xor
int3
xchg
lods
sub
jg
jnp
ret
daa
xor
aad
cmp
push
mov
mov
jb
cmpsb
jne
dec
xchg
int
mov
shrb
jg
stc
es
hlt
sub
mov
dec
inc
lahf
mov
lcall
dec
and
dec
xor
mov
or
inc
icebp
or
scas
jnp
push
js
lods
cli
test
pop
cmpsl
inc
xor
jecxz
int3
movb
adc
jle
adc
xor
jb
pop
mov
jp
int
mov
sbb
sub
imul
xor
mov
imul
jp
mov
inc
out
outsl
shll
je
addr16
mov
dec
stos
fstps
fmull
xchg
and
leave
sub
xor
xor
je
xchg
sbb
push
lea
jecxz
insl
icebp
aaa
jg
mov
dec
and
xchg
popa
mov
and
cmp
or
scas
mov
repnz
cmpsl
imul
mov
dec
xlat
fmuls
insl
outsl
js
test
sbb
out
mov
cmp
dec
sub
vpsrlq
mov
lahf
pop
add
scas
dec
shll
pop
and
pop
cmpsb
xchg
add
stos
cli
jmp
xor
pop
jb
in
lahf
mov
mov
ficoms
jns
add
sub
testl
in
cmp
in
rorb
mov
mov
xor
cmp
inc
mov
push
test
bound
lahf
shl
test
push
into
mov
jns
sti
aam
fisttps
and
jne
xchg
fdiv
out
mov
leave
test
mov
test
call
xchg
xor
cmpsl
xchg
jbe
mov
out
fimull
pop
cli
stc
dec
cmp
cmp
pop
fucom
mov
sbb
in
cmp
inc
or
loopne
popf
pop
sbb
cli
ja
dec
test
rcrb
test
push
loopne
repnz
sahf
lea
clc
and
push
pusha
lahf
scas
loope
arpl
xor
mov
adc
frstpm(287
pop
push
lea
xchg
pop
add
dec
int3
test
jbe
sub
and
mov
push
jae
add
xor
push
icebp
dec
hlt
cmp
daa
adc
arpl
in
pop
push
jo
mov
sbb
pop
push
cmpsl
repnz
test
pushf
test
repz
adc
into
jbe
loop
lock
arpl
mov
xchg
mov
xor
je
int
and
mov
in
add
aas
dec
inc
or
or
lock
pop
mov
pop
push
or
lea
push
pop
push
aad
rcll
push
leave
pop
jmp
daa
jmp
sbb
push
fistps
mov
mov
pop
sub
mov
cmp
xor
ret
cltd
sbb
loope
fisubs
imul
inc
xlat
sti
cwtl
dec
jns
jae
sbb
mov
sub
adc
inc
mov
fisubrs
mov
dec
mov
imul
shll
int3
test
aas
mov
xchg
and
lcall
jl
js
sub
or
pushf
rcrl
fidivl
arpl
cmp
cmpsb
daa
mov
in
inc
cmp
xor
add
dec
fimull
jae
xor
sbb
fcmovne
mov
in
flds
jne
jecxz
jge
cwtl
lods
fldl
jmp
dec
and
cld
push
xor
mov
stos
stc
push
std
mov
fsubr
sub
ljmp
mov
mov
leave
pop
inc
pop
push
cltd
mov
jns
jmp
mov
divb
xor
in
jp
dec
lret
scas
or
mov
aam
mov
imul
sub
rcr
jnp
adc
push
inc
adc
js
sahf
jg
jbe
pushfw
xchg
mov
mov
fmull
test
stc
rolb
cmp
adc
add
add
mov
and
add
popf
add
mov
add
arpl
addr16
lret
jo
dec
stos
adc
mov
jb
gs
jle
mov
dec
lret
pop
adcb
out
cmpsl
jp
mov
inc
leave
push
out
pop
loopne
mov
inc
test
loopne
in
scas
push
sub
cmp
dec
add
cmp
xchg
push
jp
add
cmp
popf
rcrl
or
push
mov
sbb
imul
xchg
fnsave
xchg
and
test
stos
inc
sub
aam
mov
pushf
sahf
test
clc
mov
fwait
ds
jl
jge
jmp
inc
or
inc
addr16
or
fldt
mov
xchg
out
dec
mov
mov
mov
inc
repnz
xor
jle
xchg
insb
cmpsl
mov
cmpsl
psllq
or
cwtl
cwtl
inc
repz
inc
or
ror
cmp
add
mov
jno
adc
push
sti
push
xchg
mov
fmuls
lea
pop
dec
mov
bound
pop
cs
adc
push
out
push
xchg
cltd
jns
adc
les
cmc
inc
fbstp
mov
sbb
repnz
jb
dec
xor
sbb
js
dec
rcrb
sbb
inc
std
fcomps
lds
movsl
mov
push
mov
push
xchg
sbb
test
xchg
sub
cmp
or
or
lods
and
cmpsl
cli
in
pop
loope
sub
testl
cmp
xchg
sbb
add
mov
mov
es
jge
ret
pushf
addr16
lea
shrl
lret
bound
and
ja
and
inc
out
dec
fdivrs
test
movsl
rorl
xor
and
jmp
adc
ret
mov
arpl
and
cmp
cmp
shr
gs
shl
decb
out
pop
rclb
aas
lea
popf
xlat
fidivrs
stos
push
xchg
lcall
loop
popa
mov
jmp
fwait
std
enter
movsb
sbb
test
mov
lods
lcallw
js
jns
je
cwtl
add
push
in
fsubl
mov
mov
repz
std
cmp
cmp
es
shlb
mov
sbb
dec
cld
or
push
mov
scas
ljmp
xor
sbb
scas
push
aaa
addr16
cmp
dec
inc
in
jnp
fnstcw
cmc
adc
pop
jmp
ds
jbe
lock
fldl
fwait
repz
cmc
stos
rcrb
cmp
xchg
xor
ds
js
icebp
rcrb
ret
out
lahf
jns
lcall
mov
lahf
pop
cwtl
out
inc
push
test
xchg
rorb
js
les
xlat
mov
lret
cmp
pop
clc
jge
dec
cmp
push
jp
mov
imul
jp
movsb
lods
out
xchg
mov
pop
fs
imul
push
pop
cmp
adcl
mov
add
add
sbb
iret
popa
loope
imul
mov
push
jbe
cmp
es
cmc
cmp
inc
mov
mov
xchg
scas
inc
inc
push
fnsave
mov
test
daa
test
inc
push
subb
out
and
stos
or
jnp
mov
clc
xchg
adc
lock
cmc
dec
push
ret
aad
jno
cwtl
popa
jno
xchg
dec
or
sarl
inc
leave
and
add
jg
add
or
stos
aad
sub
pop
imull
repz
mov
jmp
fmul
repnz
mov
sub
or
fdivrl
into
aas
add
add
repz
test
dec
dec
aaa
inc
cmp
adcb
mull
add
sbb
fs
jb
popf
pop
or
orb
clc
popf
loope
or
out
sarl
les
test
ds
adc
pop
jbe
and
adc
movsl
fnstsw
test
sbb
pop
punpckldq
adc
jne
inc
and
and
and
mov
inc
push
jo
fsubl
or
rcll
cmpsb
push
outsl
push
xchg
push
test
xchg
lahf
sub
sub
je
sub
je
into
cld
repz
push
pop
fcos
sub
aas
sbb
ficompl
add
and
cltd
out
pop
and
xor
cld
mov
push
mov
lret
iret
jbe
sahf
mov
sub
shll
push
cld
das
pop
arpl
mov
add
xchg
mov
mov
mov
or
cld
subb
xchg
and
cmp
aad
jg
decb
rcrb
xchg
cs
push
jp
movsb
xchg
mov
cltd
sbb
and
inc
jle
lret
mov
fistl
xchg
jno
sub
fisttpll
add
jb
jns
jge
jae
inc
mov
clc
jecxz
mov
sbb
xchg
cmpsb
inc
sbbb
sub
xlat
push
sbb
lods
push
lcall
mov
nop
cltd
xchg
in
xchg
movsl
pop
fwait
repnz
fisubl
and
xlat
in
daa
dec
fbld
and
fcmovu
fwait
mov
js
sbb
mov
rclb
or
adc
incl
imul
inc
mov
and
leave
mov
popf
pop
sub
fwait
mov
mov
or
je
jb
xor
lret
adc
adcb
fmuls
xchg
rcll
or
cmp
xor
sub
mov
aaa
xchg
and
mov
dec
mov
sub
adc
movsl
enter
ljmp
push
add
mov
loop
push
fmul
fsubrs
lea
pop
imul
pop
scas
lods
lods
insl
mov
push
and
mov
rolb
ss
adc
lahf
pop
insl
lds
mov
testl
cmp
xchg
lea
mov
adc
jl
push
sbb
cld
inc
addr16
and
fs
sti
stc
and
xchg
shlb
fs
aaa
sarb
mov
mov
int
pop
arpl
out
je
fwait
mov
or
imul
stos
outsb
or
push
jp
pop
bound
push
jmp
push
test
add
mov
adc
dec
rorl
xor
call
cmp
mov
sti
cli
push
dec
xchg
int
jle
mov
lcall
hlt
and
cwtl
ret
gs
push
rol
sub
cmp
dec
push
sub
xchg
xchg
mov
data16
imul
jae
outsl
pop
xor
mov
xchg
test
or
clc
and
push
rclb
cmpl
dec
scas
mov
inc
pop
dec
mov
cmp
inc
jo
repz
mov
mov
jno
cld
adc
push
test
out
pop
push
pop
mov
xor
les
mov
sub
pop
fadd
sbb
pop
sbb
jae
or
cltd
leavew
scas
cli
fistpl
dec
inc
cmc
pop
shrl
repz
out
in
jae
xchg
xor
insb
test
adc
mov
rorl
subb
cmp
pop
fcmovne
cmp
les
pop
cmp
cmp
loopne
icebp
inc
mov
adc
sbb
mov
add
int
in
je
inc
and
enter
clc
sub
or
jae
cmpsb
inc
add
adc
fs
stos
stos
std
leave
xchg
inc
loop
lods
and
adc
dec
jle
cmp
push
cli
push
push
add
mov
sbb
int
mov
and
add
mov
mov
jg
mov
mov
mov
add
out
inc
into
mov
add
mov
push
fiaddl
rcl
scas
push
rclb
and
js
cmp
and
cmpsb
jb
loope
mov
leave
std
fwait
insl
orb
addr16
fwait
or
mov
mov
dec
push
div
sbb
fmull
jge
int
leave
xor
mov
dec
push
sub
mov
enter
xchg
loop
filds
jg
mov
sti
testb
outsb
add
sahf
scas
sub
jbe
pop
sub
and
cmp
out
sti
imul
aad
int
popa
dec
dec
and
test
je
ret
xchg
and
arpl
and
cmc
xchg
push
mov
negl
mov
push
call
inc
movsl
gs
cmpsb
inc
sbb
aas
add
lock
lret
jmp
loopne
mov
sahf
aaa
mov
iret
mov
setnp
fcoms
mov
fmuls
mov
pop
add
mov
pop
xchg
pop
adc
dec
pop
sbb
pusha
inc
cmp
and
mov
das
sub
dec
xchg
fiaddl
sahf
dec
out
aam
sti
jno
push
arpl
dec
or
sub
leave
xchg
xchg
jbe
xchg
cmc
add
push
fsubp
add
ret
mov
adc
cmpsb
cmp
and
xchg
in
xchg
mov
xchg
outsb
push
or
pushf
cmc
push
daa
jg
imul
mov
push
mov
pop
test
jb
ljmp
lahf
pop
pop
fidivrl
scas
mov
sbb
ret
push
xlat
push
inc
mov
outsl
mov
andl
push
test
icebp
insl
mov
ds
mov
adc
call
lods
imul
xchg
leave
xor
repnz
jne
dec
sbb
xchg
sub
mov
shlb
mov
lea
pop
aam
mov
xchg
popa
gs
clc
xchg
xor
mov
cmc
pop
and
mov
pop
fidivs
push
repnz
inc
call
dec
and
mov
push
ret
movsb
lock
cmp
loopne
jl
sub
loop
dec
inc
sbb
mov
jno
das
stos
or
test
cmp
push
mov
jge
bnd
push
lods
js
jp
push
cmpsb
jl
pop
jbe
cmp
pop
adc
xor
mov
sbb
rolb
or
and
ret
fs
gs
mov
and
ret
into
ret
aad
iret
nop
xchg
sub
jno
lods
dec
imul
out
int
mov
inc
daa
out
sub
add
add
je
pop
or
mov
shll
dec
pop
mov
movsl
daa
repnz
call
jp,pn
cmp
jbe
add
add
pushf
loop
inc
add
sbb
cmp
mov
mov
dec
sti
mov
call
dec
fisubs
cmp
cmp
mov
testb
icebp
mov
lea
push
or
fcoms
xchg
cwtl
xor
cmpsl
sub
dec
flds
insl
sarl
jmp
mov
sub
cmpb
inc
push
xor
mov
mov
fsubrl
xchg
mov
mov
movsb
xor
mov
sub
sub
sbb
in
push
push
mov
xor
xchg
in
clc
cmpsb
or
sub
ljmp
mov
and
cmp
rcll
pop
push
mov
xchg
addb
outsl
fwait
sub
fbstp
shll
fcmovnu
jns
call
sarb
add
imul
lea
xor
mov
or
sbb
mov
cmp
mov
les
jmp
fimuls
test
scas
jg
pop
jmp
outsl
push
pop
and
jmp
mov
mov
imull
rol
int3
push
aad
lods
fildll
loope
sub
inc
and
push
je
popf
mov
int
jae
mov
xchg
mov
or
pop
aas
mov
pop
push
scas
and
je
scas
dec
stos
lock
pop
insb
or
xor
mov
fists
inc
cli
fwait
xor
ds
xlat
adc
imul
jnp
loope
cmpsl
ds
sbb
adc
divl
pop
sbb
cli
or
fsub
jge
aad
mov
sub
and
pop
mov
jnp
xchg
das
ds
inc
outsl
inc
jp
adc
ja
movsl
and
push
pushf
mov
mov
pushf
test
add
mov
dec
test
outsl
dec
movsb
mov
sahf
adc
mov
std
mov
andb
in
mov
jp
loopne
test
sbb
lods
lahf
or
xor
push
jle
sbb
dec
or
adc
xchg
test
push
pop
call
push
mov
push
lods
arpl
pusha
or
enter
inc
jmp
and
jmp
push
push
lret
xchg
sub
push
leave
shll
stos
jecxz
jns
or
test
and
pop
push
add
addb
jl
jns
adc
push
add
xchg
lds
je
enter
cltd
ss
cmpsb
out
dec
cmpsb
ljmp
or
in
stc
mov
inc
xchg
gs
pop
sub
mov
add
cld
popa
sbb
mov
test
inc
iret
nop
scas
add
pop
and
jnp
xchg
xor
dec
lret
mov
jl
adc
enter
shll
add
cmp
xor
insl
hlt
test
xchg
je
dec
mov
dec
out
jmp
cs
mul
cmp
fistps
in
push
or
jns
push
lock
dec
jne
mov
loope
jg
rcrl
fs
jle
pop
idiv
cmp
cs
push
jmp
lahf
mov
in
xor
sarl
cmp
ljmp
dec
add
test
dec
sbb
xor
rcl
aaa
mov
push
push
dec
enter
cltd
loopne
scas
dec
aaa
pop
and
add
call
jb
jmp
add
cmpsl
imul
jns
jmp
lds
mov
sub
rcr
inc
clc
insl
pop
dec
lods
out
div
mov
dec
in
mov
movsb
jb
ljmp
jl
cmpl
jmp
mov
push
int
fsub
push
mov
add
add
push
xchg
mov
adc
loope
sub
jg
enter
fdivrp
ret
mov
ljmp
mov
push
int
and
cld
mov
mov
mov
jno
pushf
cld
dec
push
pop
mov
insb
cmc
aad
add
clc
mov
sbb
les
nop
sti
psadbw
dec
mov
pop
and
mov
mov
rorl
push
push
sub
das
xlat
les
mov
jae
idivb
sub
jo
push
mov
mov
lock
hlt
sbb
fnstsw
into
orl
jbe
int
inc
std
cmpsl
std
pop
outsl
pop
jno
push
mov
sbbl
xor
scas
adc
es
jo
cwtl
cwtl
xchg
dec
push
sti
dec
or
insl
flds
mov
stos
jnp
and
sub
sub
movsl
das
xlat
push
inc
test
mov
add
mov
pop
std
sub
pop
jo
fsubl
cmc
mov
out
xlat
bound
sbb
int3
fdivrl
and
cwtl
mov
inc
xchg
mov
xchg
shl
mov
xorl
push
mov
cmpb
pop
out
out
cmp
mov
xor
clc
movsb
mov
and
jns
push
cmp
aam
dec
aam
pop
lods
mov
pop
out
mov
push
mov
imul
sbb
mov
hlt
dec
orl
out
jmp
aam
dec
mov
mov
lods
mov
call
and
test
cmpsl
dec
inc
jmp
and
jp
pusha
lret
jge
rorb
insb
outsb
mov
popf
shll
mov
pushf
sub
adc
add
add
cs
adc
mov
insl
mov
mov
arpl
xchg
cmpsl
sbb
cli
adc
sub
jecxz
mov
jbe
jo
pop
xchg
jecxz
dec
gs
xchg
movl
pop
stos
sbb
shll
push
or
popf
adc
out
out
pop
idiv
hlt
inc
jecxz
ds
mov
fists
xchg
push
cs
test
adc
mov
xchg
stc
or
fsts
lcall
and
fimuls
popa
enter
cmc
call
subl
cmp
inc
adc
cmp
pop
call
mov
dec
xlat
dec
not
add
lods
xor
je
arpl
ret
iret
fmull
xchg
stc
push
add
ja
jnp
scas
iret
adc
push
inc
inc
add
filds
xor
clc
xchg
push
pop
mov
and
cmp
or
adcl
aaa
mov
std
ror
jmp
movsl
push
aas
arpl
pop
push
aad
test
pop
inc
jo
mov
leave
or
jno
sbb
imul
mov
inc
inc
dec
pop
cmp
sbb
mov
imul
xor
xchg
adc
sub
sub
and
adc
mov
cmpsb
data16
cmp
rclb
int3
fisubs
lea
dec
push
addr16
out
pop
add
bound
icebp
in
daa
adc
dec
int
push
jae
out
cld
pop
jmp
ret
push
sub
jge
or
mov
repz
js
hlt
cs
or
cmc
cltd
inc
sbb
adc
in
ljmp
fiadds
cmp
and
sbb
pop
add
sub
xor
std
test
push
sbb
and
push
add
loope
fwait
cmp
out
add
nop
pop
add
inc
pushf
xchg
int3
jne
mov
mov
clc
mov
mov
xlat
sbb
inc
and
dec
fsubr
sahf
pop
push
ja
mov
mov
adc
cmp
add
or
out
stos
fisttpl
jp
jmp
push
dec
in
subl
or
and
push
scas
mov
add
dec
shrb
inc
loop
in
mov
push
ret
fsubr
mov
lods
add
add
es
insb
mov
loope
push
in
arpl
gs
inc
jmp
std
push
mov
sbbl
es
mov
add
inc
shll
or
scas
mov
out
and
cmp
scas
out
pop
mov
mov
mov
xor
sub
xor
outsb
cmp
mov
jmp
add
js
add
rcl
add
movsb
rolb
test
add
cld
rolb
mov
add
mov
add
adc
add
mov
rolb
xor
add
rcl
add
add
add
add
dec
roll
enter
add
in
rolb
add
add
or
add
add
add
and
add
add
add
roll
add
add
push
roll
add
add
add
in
rolb
add
add
or
add
add
add
and
add
add
add
roll
add
add
push
roll
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
add
popa
fs
jo
xor
cs
insb
add
add
inc
jb
gs
imul
je
xor
fs
insb
add
add
push
jns
inc
jb
gs
je
imul
jb
xor
fs
insb
add
add
inc
push
js
inc
add
outsl
arpl
xor
fs
insb
add
add
outsb
add
