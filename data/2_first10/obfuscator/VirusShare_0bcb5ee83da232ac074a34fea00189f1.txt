push
mov
add
movl
pushl
pushl
call
xor
mov
mov
cmp
jge
movl
cmpl
je
movl
mov
add
imul
mov
xor
mov
incl
cmpl
jle
call
mov
movl
movl
movl
mov
add
add
cmpl
jge
lea
mov
mov
and
mov
sub
add
mov
cmp
ja
jmp
scas
adc
scas
adc
scas
adc
rcll
inc
add
inc
add
inc
add
fldl
add
xor
mov
movl
pushl
call
movl
mov
inc
mov
mov
cltd
idiv
mov
pushl
call
call
incl
cmpl
jle
movl
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
sub
movl
pushl
pushl
call
jmp
call
jmp
movl
pushl
call
jmp
movl
cmpl
jge
xor
mov
incl
cmpl
jle
xor
mov
movl
xor
mov
mov
add
mov
incl
cmpl
jle
pushl
pushl
call
mov
xor
mov
movl
mov
inc
mov
mov
cltd
idiv
sub
incl
cmpl
jle
incl
mov
cmp
jl
mov
mov
pop
ret
nop
push
mov
add
movl
pushl
push
pushl
call
call
jmp
call
movl
call
pushl
pushl
push
call
cmpl
jl
xor
mov
movl
lea
mov
mov
mov
add
mov
incl
cmpl
jle
jmp
movl
cmpl
je
xor
mov
cmpl
jg
pushl
call
cmpl
jl
call
xor
mov
lea
push
call
incl
cmpl
jle
mov
pop
ret
nop
nop
nop
push
mov
add
mov
xor
mov
movl
cmpl
je
movl
cmpl
jne
xor
mov
cmpl
movl
cmpl
jge
jmp
movl
mov
sub
mov
mov
sub
sub
movl
cmpl
jg
xor
mov
cmpl
jl
xor
mov
incl
cmpl
jle
jmp
xor
mov
incl
cmpl
jle
xor
mov
incl
cmpl
jle
movl
cmpl
jne
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
add
mov
mov
pop
ret
push
mov
add
call
mov
movl
movl
pushl
pushl
call
pushl
pushl
call
pushl
call
decl
je
pushl
pushl
pushl
call
jmp
movl
mov
cmp
je
movl
pushl
call
xor
mov
pushl
push
call
incl
cmpl
jle
movl
cmpl
jne
xor
mov
movl
mov
sub
imul
mov
incl
cmpl
jle
jmp
pushl
call
pushl
call
push
call
movl
push
pushl
pushl
call
xor
mov
pop
ret
push
mov
add
xor
mov
mov
cmp
jne
mov
mov
movl
cmpl
mov
mov
mov
mov
movl
cmpl
je
xor
mov
cmpl
jg
movl
cmpl
jl
movl
lea
mov
mov
mov
mov
and
add
add
movl
mov
or
add
sub
incl
cmpl
jle
xor
mov
pop
ret
nop
nop
push
mov
add
call
xor
mov
movl
xor
mov
mov
or
add
imul
mov
cmpl
je
pushl
push
call
movl
pushl
push
call
pushl
pushl
push
call
call
mov
movl
movl
movl
pushl
pushl
pushl
call
pushl
pushl
pushl
call
pushl
call
decl
je
pushl
pushl
pushl
call
jmp
xor
mov
pop
ret
nop
nop
nop
push
mov
add
push
movl
cmpl
je
movl
pushl
push
call
movl
movl
pushl
push
call
pushl
pushl
pushl
call
pushl
push
call
pushl
pushl
pushl
call
call
jmp
mov
cmp
jl
xor
mov
call
incl
cmpl
jle
call
movl
xor
mov
pushl
pushl
pushl
call
jmp
movl
cmpl
je
pushl
pushl
push
call
jmp
movl
movl
pushl
pushl
pushl
call
pushl
pushl
pushl
call
pushl
call
movl
lea
mov
lea
mov
mov
mov
mov
sub
mov
movl
movl
lea
mov
mov
mov
add
add
movl
movl
lea
mov
mov
mov
and
imul
add
call
call
xor
mov
call
call
call
xor
mov
cmpl
jne
xor
mov
movl
movl
pushl
push
pushl
call
call
pushl
push
pushl
call
pushl
call
incl
cmpl
jle
push
call
jmp
push
call
movl
lea
mov
lea
mov
mov
mov
mov
sub
mov
cmpl
jl
pushl
call
push
call
movl
pushl
call
pushl
call
jmp
pushl
call
incl
cmpl
jle
call
pop
mov
andl
xor
mov
cmpl
jl
pushl
call
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
add
jmp
call
call
jmp
movl
cmpl
jg
xor
mov
movl
mov
or
imull
mov
incl
cmpl
jle
subl
mov
cmpw
jne
mov
pop
mov
pop
ret
nop
nop
push
mov
add
movl
cmpl
jne
jmp
movl
cmpl
xor
mov
incl
cmpl
jle
xor
mov
cmpl
incl
cmpl
jle
mov
shl
xor
mov
xor
mov
incl
cmpl
jle
mov
mov
mov
mov
mov
mov
mov
shr
xor
xor
mov
shr
xor
mov
mov
mov
pop
ret
push
mov
add
xor
mov
incl
cmpl
jle
xor
mov
movl
lea
mov
movl
mov
and
mov
sub
sub
movl
cmpl
jg
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
xor
mov
movl
mov
and
add
sub
mov
cmp
incl
cmpl
jle
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
mov
mov
pop
ret
push
mov
add
movl
mov
imull
mov
mov
pop
ret
push
mov
add
movl
mov
cmp
je
movl
mov
cmp
xor
mov
movl
mov
cmp
je
movl
mov
or
imul
mov
jmp
movl
mov
or
mov
inc
mov
cltd
idiv
mov
mov
pop
ret
nop
nop
nop
push
mov
add
xor
mov
lea
push
call
movl
push
push
pushl
call
incl
cmpl
jle
movl
mov
and
mov
and
imul
mov
xor
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
push
mov
movl
movl
mov
and
add
mov
mov
movl
mov
inc
mov
mov
cltd
idiv
imul
mov
mov
movl
mov
and
sub
imul
mov
xor
mov
mov
imul
add
xor
mov
pushl
call
xor
mov
xor
mov
cmpl
je
movl
cmpl
jg
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
imul
mov
pushl
call
jmp
call
movl
mov
cmp
jne
movl
lea
mov
mov
inc
mov
mov
cltd
idiv
add
call
push
push
push
call
movl
pushl
push
pushl
call
push
call
mov
movl
pushl
call
cmpl
je
mov
jmp
mov
mov
xor
mov
push
call
xor
mov
push
call
incl
cmpl
jle
movl
cmpl
jne
push
push
push
call
incl
cmpl
jle
xor
mov
call
xor
mov
xor
mov
call
incl
cmpl
jle
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
call
incl
cmpl
jle
incl
cmpl
jle
push
call
call
mov
push
call
movl
movl
mov
or
mov
or
add
imul
mov
call
pushl
pushl
pushl
call
movl
pushl
pushl
call
mov
add
mov
movl
pushl
pushl
call
call
mov
call
call
call
push
call
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
xor
mov
incl
cmpl
jle
movl
cmpl
jl
jmp
xor
mov
movl
mov
sub
add
xor
mov
movl
lea
mov
mov
and
mov
inc
mov
cltd
idiv
mov
mov
pop
ret
nop
nop
push
mov
add
movl
movl
mov
sub
mov
xor
mov
lea
mov
mov
mov
imul
add
mov
pop
ret
push
mov
add
xor
mov
movl
cmpl
je
movl
cmpl
jg
movl
mov
add
mov
movl
mov
sub
sub
call
pushl
call
incl
cmpl
jle
movl
push
push
pushl
call
xor
mov
movl
mov
or
imul
add
pushl
pushl
pushl
call
movl
movl
lea
mov
mov
mov
add
add
pushl
call
mov
pop
ret
nop
nop
push
mov
add
xor
mov
xor
mov
incl
cmpl
jle
incl
cmpl
jle
mov
pop
ret
nop
nop
dec
jne
add
jmp
mov
jmp
add
mov
mov
jmp
jmp
add
mov
jmp
mov
mov
push
push
push
mov
mov
mov
call
test
sbb
mov
pop
add
ret
call
mov
mov
pop
pop
pop
ret
pop
pop
pop
ret
xor
call
test
jne
add
lea
call
lea
mov
call
jmp
mov
cmpl
jge
subl
jmp
mov
mov
push
push
mov
mov
add
sub
jb
sub
jae
mov
mov
inc
rorb
add
cld
call
jmp
mov
test
je
xor
push
mov
push
push
pushl
sub
mov
push
push
jmp
mov
jmp
xor
pop
pop
push
mov
mov
xor
push
push
pushl
mov
addb
add
add
add
jmp
sbb
lea
stos
jmp
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
mov
jmp
sub
mov
mov
mov
pop
ret
pop
pop
pop
ret
push
push
mov
mov
mov
xor
pop
pop
pop
test
lea
fdivs
rclb
add
add
mov
incl
sub
push
push
mov
mov
xor
mov
mov
mov
xor
push
mov
add
push
call
mov
mov
inc
insb
mov
test
je
mov
mov
movb
incl
mov
movb
incl
mov
movb
incl
mov
mov
lea
call
ret
jmp
ret
add
ret
subl
ret
call
mov
push
lea
push
push
xor
mov
pop
ret
call
push
jne
mov
call
mov
pop
pop
pop
ret
mov
push
mov
stos
mov
jmp
push
add
adc
mov
push
add
jmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
jmp
mov
add
jmp
pop
sub
addb
mov
add
mov
jmp
sub
cld
mov
adc
add
xor
jmp
shr
sub
jmp
mov
mov
shr
imul
cmp
jmp
jne
mov
add
shl
movl
jmp
mov
mov
mov
and
shl
add
cmp
lea
jmp
mov
push
add
lea
mov
push
xor
sub
jmp
mov
mov
sub
jmp
mov
mov
pop
mov
jmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
jmp
xor
adc
mov
jmp
movb
xor
mov
mov
add
jmp
cmp
jae
mov
jmp
mov
sub
call
mov
jmp
movzwl
push
add
push
mov
push
add
jmp
mov
adc
mov
sub
xor
mov
mov
addb
mov
lea
lea
mov
mov
or
add
adc
jmp
mov
shl
lea
movl
jmp
movzbl
shl
or
shl
incl
mov
jmp
cmp
jl
jmp
mov
mov
jl
add
incl
pop
ret
mov
sub
mov
mov
and
mov
and
jbe
and
pop
pop
ret
lea
call
sub
mov
push
push
lea
mov
call
xor
push
push
lea
mov
push
lea
call
sub
mov
push
cmpb
jne
call
jmp
and
add
add
dec
inc
add
add
mov
jmp
shl
incl
mov
jmp
add
shr
push
mov
subl
mov
mov
call
jmp
mov
mov
mov
mov
mov
jge
andl
jmp
add
mov
mov
mov
call
jmp
xor
push
push
lea
adc
mov
pop
pop
ret
call
mov
or
mov
add
mov
mov
mov
xor
jmp
mov
and
inc
add
and
add
push
and
mov
push
mov
push
call
mov
stc
cmp
jae
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
jmp
xor
mov
jmp
inc
addl
addl
jmp
sub
lods
mov
jmp
push
jmp
mov
jmp
sbb
mov
add
lods
mov
adc
add
sub
mov
add
xor
mov
jmp
dec
jne
mov
mov
sub
mov
mov
movzwl
xor
add
add
cmp
jne
jmp
xor
mov
jmp
adc
push
mov
sub
push
sub
push
sub
mov
mov
push
jmp
mov
sub
adc
jmp
pop
xor
sub
mov
jmp
mov
xor
and
mov
mov
add
and
jns
dec
jmp
mov
jmp
mov
mov
jmp
push
mov
inc
jmp
subl
jmp
add
mov
jb
sub
jb
jmp
pop
pop
pop
ret
mov
mov
mov
call
pop
pop
pop
ret
push
push
mov
jmp
mov
sub
mov
lock
mov
movb
incl
add
mov
mov
incl
pop
ret
shl
push
call
cmpl
lea
jmp
sub
adc
mov
ret
mov
sub
mov
and
push
and
add
push
push
push
push
add
pop
mov
mov
add
call
pop
mov
push
mov
push
mov
mov
mov
mov
adc
mov
xor
push
push
pushl
mov
mov
push
mov
push
mov
push
mov
add
cmp
add
pop
ret
pop
pop
pop
pop
pop
mov
pop
ret
push
ret
push
push
mov
mov
jmp
inc
add
add
ret
pop
push
pushl
mov
mov
mov
mov
mov
mov
xor
lea
jl
add
inc
push
data16
mov
call
pop
ret
mov
test
jne
mov
pop
ret
test
je
add
add
jae
mov
mov
movzbl
jmp
jae
mov
jmp
sub
shr
add
shl
andl
mov
lea
jmp
sub
mov
mov
cmp
ja
mov
mov
call
mov
call
mov
xor
push
call
mov
mov
push
add
call
push
push
push
pop
push
pushl
mov
add
mov
adc
pop
inc
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
incl
mov
test
je
ret
push
push
mov
call
dec
or
mov
shl
or
shl
incl
mov
jmp
pop
pop
mov
jmp
mov
movzbl
shl
or
shl
incl
mov
jmp
movzbl
shl
or
shl
incl
mov
jmp
mov
push
inc
sub
mov
call
jmp
add
jmp
sub
mov
or
add
mov
xor
pop
pop
pop
ret
mov
call
test
add
mov
rclb
push
push
push
xor
push
push
pushl
mov
mov
mov
mov
mov
mov
mov
call
incl
xor
pop
pop
ret
jmp
add
mov
add
sub
mov
jmp
push
jmp
shl
mov
mov
movzbl
jmp
xor
sub
jmp
jne
mov
lea
push
sbb
mov
push
sbb
lea
add
push
mov
xor
pushl
sub
movzwl
call
adc
add
xor
movl
sub
add
mov
add
mov
mov
add
mov
jmp
add
push
push
mov
lea
push
mov
push
mov
push
call
add
push
mov
push
push
call
add
jmp
sub
sub
mov
shr
sub
jmp
add
mov
add
adc
lea
xor
jmp
mov
inc
sub
inc
add
jmp
mov
mov
mov
mov
call
jmp
sub
mov
add
movl
movl
jmp
sbb
pop
jmp
mov
subb
adc
pop
mov
mov
jmp
push
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
push
mov
mov
test
jne
cmpb
jne
push
push
push
push
mov
push
push
push
push
mov
mov
ja
mov
mov
call
ret
push
incl
sbb
mov
call
ret
jmp
mov
mov
call
mov
xor
push
mov
push
push
push
mov
mov
rol
loopne
push
push
call
mov
call
mov
call
mov
inc
jmp
je
sub
sbb
mov
mov
mov
push
adc
push
mov
mov
add
push
add
push
jmp
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
mov
mov
push
add
ret
push
mov
add
push
push
push
push
mov
xor
push
mov
add
push
push
push
mov
mov
mov
mov
call
mov
add
je
push
cmpb
je
ret
jb
jmp
mov
mov
pushl
mov
mov
push
pushl
mov
incl
xor
mov
mov
jl
test
or
push
ret
sub
jb
jmp
cmp
jne
mov
ret
mov
cmp
pop
inc
add
mov
add
jmp
pop
pop
mov
mov
push
pushl
mov
incl
je
mov
call
mov
mov
pop
ret
pop
mov
push
lea
mov
mov
cmp
mov
push
lea
mov
mov
call
mov
mov
inc
add
push
call
xor
push
push
pushl
mov
incl
sub
add
call
push
inc
add
add
pop
ret
cmpb
je
mov
jmp
mov
push
mov
call
jmp
sub
jmp
mov
mov
shr
imul
jmp
sub
mov
jmp
mov
mov
add
add
add
mov
push
lea
mov
rorb
sbb
pushf
call
mov
cmp
jne
pop
mov
push
mov
mov
mov
mov
incl
pop
ret
call
fidivrs
repnz
xor
push
mov
push
push
call
test
jns
add
incl
push
loopne
fisttpl
jmp
add
sub
jmp
mov
xor
mov
mov
add
add
jmp
cmp
jae
mov
mov
sub
shr
add
mov
jmp
mov
cmp
ja
jmp
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
jmp
movl
jmp
pop
leave
call
lea
push
push
push
mov
sbb
adc
push
mov
movzwl
mov
call
jmp
adc
mov
push
sub
call
add
mov
pop
add
mov
sbb
mov
sub
movl
push
mov
add
call
inc
mov
jmp
mov
or
pop
jmp
add
jmp
add
mov
sub
add
sbb
add
mov
push
push
je
push
mov
push
call
jne
mov
mov
mov
push
mov
mov
incl
pop
ret
mov
incl
mov
mov
mov
mov
mov
mov
add
mov
sub
add
jmp
add
je
movl
jmp
pop
pop
ret
mov
call
fucomi
xchg
pop
add
mov
mov
push
push
mov
mov
jne
mov
mov
mov
pop
pop
pop
mov
push
lea
call
mov
mov
call
add
pushl
mov
mov
call
test
jne
jmp
test
jne
add
jmp
and
inc
add
push
or
sub
cmp
add
test
jne
push
push
pop
mov
test
js
jne
mov
call
pop
ret
sub
push
mov
sub
call
lea
xor
sub
pop
sub
mov
jmp
mov
addb
mov
pushl
mov
push
mov
call
jmp
mov
mov
mov
mov
push
sub
adc
adc
call
sub
lea
pop
mov
adc
mov
mov
adc
push
lea
call
sub
jmp
cmp
jb
movb
movb
movb
xor
mov
jmp
movzbl
shl
or
shl
incl
mov
jmp
shl
incl
mov
jmp
add
mov
jmp
mov
inc
jmp
mov
shl
and
shr
or
mov
movsbl
xor
inc
jmp
shr
sub
jmp
or
inc
jmp
mov
mov
call
mov
ret
movzbl
movsbl
jmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
jmp
pop
ret
add
mov
js
add
call
mov
add
pop
ret
jne
cmpb
je
push
mov
test
sbb
lea
call
test
jne
mov
pop
pop
pop
ret
mov
push
mov
push
mov
push
lea
push
call
popa
inc
add
pop
add
sub
inc
mov
mov
push
mov
mov
mov
xor
push
call
pop
test
or
add
mov
mov
lea
sub
mov
mov
pop
lea
ret
mov
mov
add
xor
ret
mov
push
lea
test
je
movl
popa
inc
add
int3
test
je
call
cmpb
jne
mov
call
mov
mov
mov
add
mov
mov
incl
pop
ret
shl
push
call
ret
mov
incl
mov
mov
mov
mov
jmp
movzbl
mov
jmp
sbb
lea
mov
sub
mov
jmp
push
xor
mov
movl
push
jmp
mov
mov
shr
imul
cmp
jae
mov
mov
jmp
inc
mov
push
sub
call
sub
jmp
mov
leave
ret
mov
lea
jmp
mov
xor
sbb
jmp
shl
or
incl
mov
jmp
imul
xor
mov
mov
jmp
mov
mov
jl
mov
sub
mov
jmp
add
test
mov
jmp
mov
mov
push
subb
adc
mov
sub
mov
mov
mov
jmp
sub
pop
mov
mov
add
mov
push
lea
call
movzwl
pop
jmp
mov
mov
mov
jmp
add
add
mov
add
mov
shr
test
jne
mov
and
movzwl
jmp
shl
or
shl
incl
mov
jmp
sub
sub
mov
jmp
mov
mov
shr
imul
cmp
jae
jmp
shl
or
incl
dec
mov
jne
jmp
mov
mov
mov
jmp
mov
mov
lea
je
jmp
mov
mov
add
push
call
pop
xor
cmp
jne
mov
movzwl
mov
jmp
mov
mov
pop
lea
mov
mov
mov
call
jmp
xor
push
mov
add
push
mov
inc
add
mov
mov
incl
pop
ret
mov
lea
call
jmp
add
inc
add
mov
je
mov
pop
ret
xor
ret
mov
xor
push
push
or
add
iret
shr
add
cmpl
mov
mov
jmp
pop
ret
add
mov
push
add
pop
pop
pop
ret
pop
ret
movl
jmp
mov
sub
mov
inc
xchg
mov
mov
mov
je
push
call
mov
sub
lea
mov
pop
mov
call
xor
mov
mov
pop
loopne
dec
fsubr
inc
jmp
decl
adc
push
mov
call
xor
stos
movb
lea
movb
pop
lea
mov
dec
jne
mov
sub
adc
push
jmp
decl
jne
sub
cmp
mov
jl
jmp
cmp
jl
jmp
mov
xor
mov
add
mov
add
and
jns
jmp
mov
push
subb
mov
mov
mov
mov
call
lea
mov
mov
add
jmp
cmp
jae
mov
mov
movzbl
shl
jmp
decl
jne
mov
xor
inc
mov
shl
mov
sub
jmp
sub
sub
mov
shr
sub
mov
lea
jmp
mov
sub
shr
add
mov
jmp
sub
sub
sub
jmp
xor
mov
jmp
push
mov
add
push
push
push
mov
mov
xor
mov
jmp
mov
jmp
add
mov
add
jmp
and
mov
mov
xor
push
push
pushl
mov
mov
mov
sub
lea
push
ja
jmp
push
push
pushl
mov
mov
or
mov
test
je
ret
call
mov
call
mov
xor
mov
mov
add
add
push
push
call
xor
xor
jmp
xor
jmp
sub
sub
mov
jmp
sub
lea
mov
mov
mov
sbb
jmp
movzbl
shl
or
jmp
add
mov
add
and
jns
dec
or
inc
jmp
push
pop
jmp
mov
xor
sbb
call
add
mov
mov
test
jmp
cmp
jae
mov
jmp
xor
cmpl
setge
dec
and
add
mov
mov
add
jmp
jae
mov
jmp
cmp
jl
adc
add
sub
jmp
sub
push
mov
mov
adc
sbb
movzwl
mov
adc
shl
adc
add
mov
xor
adc
jmp
mov
mov
shr
imul
jmp
mov
movzbl
jmp
add
mov
sub
mov
xor
mov
mov
call
mov
call
add
mov
addb
stc
sbb
rolb
mov
jmp
and
pop
and
pop
inc
add
fs
je
mov
call
xor
jmp
xor
push
add
pop
ret
call
jmp
add
push
mov
mov
mov
push
movzbl
sub
pop
sub
xor
sub
jmp
sub
sub
mov
shr
jmp
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
add
mov
cmpl
je
mov
push
push
push
pushl
mov
mov
push
mov
testl
pushl
jne
fcomps
add
and
pop
pop
push
ja
jmp
push
push
pushl
mov
mov
mov
add
mov
sti
sbb
dec
pop
jne
inc
pop
inc
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
incl
mov
test
je
add
pop
add
pop
mov
ret
mov
mov
call
mov
call
pop
ret
push
mov
mov
je
call
pop
ret
lea
mov
mov
adc
orb
jb
jmp
adc
mov
ret
call
xor
pop
pop
pop
ret
pushl
mov
mov
mov
movb
incl
ret
push
call
ret
call
jne
mov
sub
pop
add
adc
jmp
pop
pop
pop
mov
pop
ret
mov
mov
ret
ja
ret
mov
mov
pop
ret
push
mov
mov
xor
pop
pop
pushl
fs
mov
test
js
push
pushl
mov
incl
and
mov
and
adc
jmp
mov
test
je
mov
pop
ret
xor
ret
mov
pop
mov
pop
ret
jmp
mov
shr
mov
sub
xor
mov
jmp
cmp
jae
mov
jmp
mov
mov
mov
jmp
mov
add
jmp
mov
mov
leave
push
push
pushl
mov
mov
mov
mov
incl
sub
add
call
mov
mov
push
mov
push
mov
push
call
test
je
push
call
xor
push
push
mov
mov
repnz
xor
pop
pop
ret
sub
jae
mov
pop
pop
ret
call
jmp
pop
pop
pop
pop
pop
ret
sub
mov
call
inc
or
add
je
xor
push
mov
mov
lea
xor
pop
pop
jmp
mov
and
or
mov
pop
pop
mov
sub
add
mov
sub
mov
sti
push
push
push
push
mov
mov
mov
call
popl
jmp
add
push
mov
mov
call
sub
add
jmp
mov
add
jmp
sub
mov
pop
pop
ret
call
jmp
cmp
jne
push
add
mov
push
pushl
mov
cmpb
ja
mov
mov
pop
ret
pop
ret
pushl
mov
cmpb
popa
inc
add
add
call
pop
xor
pop
pop
or
je
mov
cmpl
push
mov
jmp
mov
jmp
mov
mov
cmp
inc
jne
mov
mov
xor
push
push
pushl
mov
incl
sub
push
mov
lea
add
mov
pop
ret
test
je
call
mov
pop
pop
pop
ret
pop
ret
push
mov
mov
ret
mov
call
test
jne
pop
pop
pop
mov
pop
ret
mov
add
lret
adc
mov
add
mov
xor
pop
pop
mov
mov
mov
add
test
mov
inc
push
mov
mov
test
push
push
push
mov
mov
jmp
mov
jne
xor
mov
push
push
mov
sub
cmpl
jne
ret
jae
mov
call
pop
push
mov
mov
movb
jge
sub
mov
shr
sub
cmp
mov
jmp
push
movswl
jmp
shr
movb
xor
movb
jmp
push
mov
push
push
mov
jmp
mov
movzbl
shl
or
shl
incl
mov
jmp
or
inc
jmp
add
add
jmp
mov
add
add
push
mov
mov
lea
call
sub
adc
mov
pop
adc
mov
mov
movzbl
push
movb
add
call
adc
and
add
pop
mov
movl
sub
mov
mov
mov
sub
push
mov
call
add
lea
pop
add
mov
mov
mov
jmp
mov
mov
shr
imul
jmp
mov
inc
jmp
mov
mov
sub
shr
add
jmp
shll
decl
jne
jmp
inc
and
jns
dec
jmp
shr
sub
cmp
mov
mov
jmp
jne
jmp
mov
mov
push
add
jne
call
je
sub
je
push
push
push
gs
add
call
mov
xor
push
push
mov
mov
call
test
inc
add
add
add
mov
mov
push
call
lea
push
mov
pop
inc
add
sbb
jmp
adc
mov
lea
adc
mov
jmp
cmp
mov
lea
jae
mov
mov
jmp
mov
mov
xor
mov
mov
xor
mov
xor
jmp
shr
add
cmp
jb
sub
or
jmp
ror
sbb
jmp
add
cmpl
mov
jge
addl
jmp
dec
or
inc
jmp
mov
mov
call
jmp
pop
ret
pop
mov
pop
ret
push
push
mov
mov
mov
mov
cmp
jbe
mov
mov
incl
mov
movb
incl
mov
mov
addl
ret
push
push
push
push
call
push
push
push
push
test
jne
cmpb
je
xor
pop
pop
add
mov
mov
pop
ret
pop
mov
push
cmpb
xor
pop
call
call
adc
mov
sub
movb
mov
call
sbb
mov
mov
inc
mov
add
call
sub
adc
sub
mov
adc
adc
sbb
jmp
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
jmp
add
sub
call
jmp
sub
shr
add
jmp
mov
mov
pop
lea
mov
jmp
sub
mov
sub
jmp
or
shl
incl
mov
jmp
xor
mov
jmp
jmp
push
add
adc
add
jmp
mov
adc
mov
add
add
jmp
mov
cmp
jne
xor
jmp
jmp
imul
cmp
jae
mov
sub
shr
jmp
inc
mov
je
mov
jmp
sub
mov
lea
jmp
mov
mov
mov
lea
mov
mov
mov
lea
lea
jmp
dec
jmp
mov
push
jmp
mov
xor
jmp
adc
addb
dec
mov
xor
jmp
mov
push
mov
mov
mov
mov
mov
mov
pop
jmp
mov
mov
call
jmp
xor
push
push
lea
call
pop
mov
mov
mov
pop
pop
ret
cmp
je
push
call
test
jne
ret
mov
mov
call
mov
mov
add
loopne
add
xor
push
mov
add
push
push
mov
mov
xor
push
mov
xor
pop
pop
call
xor
pop
ret
push
push
mov
jmp
mov
mov
add
add
jbe
lea
je
ret
jmp
cmp
je
pop
pop
pop
ret
jne
xchg
push
add
mov
mov
movb
lea
mov
incl
sub
add
call
test
jne
mov
call
test
inc
add
pop
add
push
mov
call
lea
push
mov
mov
push
mov
mov
mov
push
mov
push
mov
push
mov
mov
call
mov
push
mov
add
lea
add
mov
rclb
pusha
add
push
call
cmp
mov
call
jmp
cmp
jne
ret
push
push
push
mov
mov
mov
jmp
pop
mov
jmp
mov
mov
cmp
push
or
add
mov
pop
ret
push
ret
pop
ret
pop
pop
ret
call
mov
mov
mov
xor
mov
mov
mov
mov
call
pop
pop
ret
mov
sub
add
popa
inc
add
sub
push
ret
push
mov
mov
out
dec
or
cmp
mov
jge
shl
mov
jmp
sub
mov
shr
sub
mov
lea
jmp
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
jmp
mov
jmp
add
push
mov
push
add
push
mov
push
lea
movb
sub
push
jmp
add
adc
rep
sub
mov
ret
movzwl
mov
movb
mov
mov
sub
and
fadds
xor
push
push
pushl
mov
mov
incl
mov
mov
incl
add
mov
movb
incl
ret
push
push
push
push
push
sub
cmpl
jne
sub
mov
cwtl
call
mov
xor
call
jmp
mov
call
jmp
mov
ret
mov
call
mov
or
imul
cmp
jae
mov
jmp
add
xor
mov
inc
cltd
idivl
mov
inc
incl
cmp
jb
jmp
pop
ret
sub
mov
add
sub
add
call
test
jne
mov
call
mov
call
inc
add
add
push
cmp
je
xor
push
mov
push
push
mov
mov
xor
mov
add
call
ret
push
push
push
call
add
push
mov
test
jle
mov
mov
push
jmp
mov
shr
imul
jmp
call
mov
mov
jmp
push
push
call
jmp
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
jmp
mov
add
mov
mov
add
jmp
mov
add
push
push
push
jmp
push
push
mov
mov
mov
mov
jmp
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
mov
mov
aam
add
test
jne
ret
push
mov
add
pop
pop
pop
pop
ret
cmpb
fs
add
mov
mov
mov
cmp
je
push
je
cmp
je
mov
add
pop
ret
pop
ret
sub
jb
sub
jb
mov
push
mov
jl
add
jmp
push
mov
mov
call
add
push
xor
xor
mov
push
jmp
shl
or
jmp
add
movzbl
jmp
mov
pop
xor
jmp
add
add
or
call
mov
sub
sub
jmp
jmp
mov
lea
jmp
sub
sub
mov
shr
jmp
cmp
jae
mov
mov
jmp
push
mov
add
push
jmp
mov
dec
jmp
mov
lea
mov
jmp
cmpb
jne
jmp
sub
cmp
mov
mov
jmp
and
mov
mov
xor
incl
incl
mov
cmp
jb
jmp
mov
shr
sub
or
mov
lea
jmp
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
mov
mov
add
rclb
push
push
mov
mov
jmp
mov
test
je
mov
call
cmp
ja
jmp
mov
add
push
push
push
push
push
push
push
mov
mov
call
add
add
dec
je
adc
mov
pop
pop
mov
pop
ret
test
je
mov
pop
ret
cmpl
je
mov
ret
pop
pop
mov
push
pushl
mov
incl
mov
cli
cmp
jae
mov
mov
jmp
adc
pop
mov
mov
sub
mov
mov
jmp
sub
test
jmp
push
adc
mov
mov
call
add
mov
sub
jmp
adc
mov
inc
jmp
sub
shr
add
shl
mov
lea
movl
jmp
mov
xor
jmp
mov
mov
mov
mov
jmp
mov
add
mov
mov
add
mov
xor
jmp
mov
lea
in
push
push
push
mov
jmp
test
je
push
push
ret
test
je
xor
push
mov
xor
pop
pop
pop
ret
push
push
push
push
mov
push
add
or
mov
call
xor
push
mov
add
push
push
push
pop
push
mov
mov
add
mov
rorb
jo
ret
mov
push
mov
mov
call
cmp
jge
mov
jmp
sub
mov
inc
mov
mov
mov
mov
call
mov
test
je
xor
push
push
inc
add
add
jne
mov
test
je
lea
mov
call
mov
mov
mov
call
pop
pop
ret
mov
add
add
mov
pop
ret
jb
mov
add
call
add
call
mov
cmp
jae
mov
mov
sub
shr
jmp
movl
jmp
mov
mov
call
mov
call
jmp
pop
ret
mov
push
lea
sahf
jae
add
les
pusha
add
call
ret
mov
mov
mov
lea
mov
incl
sub
sub
add
push
push
mov
mov
mov
call
add
add
jae
mov
mov
jmp
sub
mov
push
mov
call
jmp
shr
add
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
jae
jmp
mov
mov
jmp
push
mov
sub
adc
call
mov
add
pop
mov
mov
mov
jmp
mov
sub
add
call
mov
lea
jmp
push
lea
mov
sbb
push
inc
mov
add
push
mov
mov
adc
movb
mov
call
lea
sub
jmp
mov
mov
sub
shr
jmp
mov
add
push
mov
call
add
pop
mov
sbb
mov
jmp
mov
add
dec
jne
adc
mov
pop
sub
sub
ret
jmp
mov
shr
jmp
mov
sub
mov
mov
xor
mov
jmp
xor
mov
add
dec
push
sub
mov
ret
mov
mov
shr
push
add
mov
jmp
mov
test
jne
mov
pop
pop
pop
ret
mov
sub
mov
add
sub
add
push
jno
add
ret
call
xor
pop
pop
ret
sub
jb
inc
add
add
push
mov
mov
test
je
push
push
mov
mov
test
jle
dec
cmp
je
mov
pop
pop
ret
pop
ret
xor
mov
xor
mov
jmp
nop
nop
nop
push
push
repnz
out
fstps
stc
sbb
je
je
repnz
xlat
inc
bound
in
daa
aad
cmpsl
pushf
pop
out
lock
mov
cmp
lds
cli
sub
aaa
inc
std
ljmp
pop
push
pop
and
ficoms
dec
mov
xchg
mov
mov
and
test
inc
icebp
mov
outsb
xlat
int
jg
int
cmp
dec
dec
fstpt
das
aas
imul
mov
int3
js
and
mulb
dec
lods
jge
and
cwtl
inc
cmp
mov
adc
ja
pop
mov
rcll
mov
mov
inc
les
bound
sbb
mov
cs
xchg
aad
loope
dec
out
in
add
mov
push
ret
cltd
cmc
test
sti
rcl
jb
or
jns
out
cmpsb
out
dec
jmp
add
mov
push
xor
outsl
loop
mov
pop
cwtl
push
push
or
mov
add
push
fdivs
lods
hlt
push
popf
ss
inc
push
adc
xchg
ror
inc
fs
sbb
mov
insl
cmp
loope
xchg
fstps
into
lock
dec
sub
lock
jae
lcall
in
inc
hlt
pusha
iret
rorb
and
mov
sbb
lods
jb
or
pop
dec
test
mov
mov
pop
loop
and
sbb
mov
clc
cmp
inc
ds
std
stc
add
add
jg
add
out
sub
sbb
notb
outsb
and
and
addr16
inc
push
pusha
push
or
push
sbb
sbb
ret
ds
fiaddl
dec
adc
loopne
filds
mov
es
pop
pop
fbld
pop
xchg
mov
arpl
xor
shll
jecxz
jg
bound
aam
jo
rclb
imul
push
mov
aad
cmpsl
and
mov
cmp
lret
ds
push
dec
out
cltd
pop
and
inc
jle
nop
jmp
jno
pusha
repz
cmpsb
push
xor
jns
jmp
mov
sub
sub
nop
dec
or
scas
pop
in
ret
sbb
dec
lret
nop
fists
andl
clc
adc
lock
push
pusha
push
push
movsb
push
mov
dec
gs
pop
leave
popf
push
mov
xchg
fs
test
pop
push
pop
jl
cmp
int3
jecxz
in
xchg
mov
lret
lea
fdivrs
push
mov
dec
or
sub
mov
nop
pop
mov
cmp
dec
pop
mov
aaa
cmp
aam
lret
sub
out
outsb
mov
inc
fsubrl
inc
repnz
nopl
inc
mov
mov
mov
xor
dec
sub
jl
mov
mov
xchg
pop
enter
mov
lret
mov
inc
sbbl
aaa
or
push
add
cmp
stos
inc
dec
inc
fdivrs
rcl
lods
js
pop
stos
mov
mov
sub
mov
mov
int
jge
inc
inc
xchg
data16
inc
inc
popa
aas
stos
inc
repz
ret
lret
mov
adc
and
test
mov
push
mov
cmp
in
aam
sbb
inc
add
add
xlat
jl
sbb
popa
mov
xorl
inc
icebp
fldl
shr
jbe
cmpsb
and
pop
pop
sub
inc
jbe
movsl
incl
fisttpll
test
jnp
loope
nop
jbe
sub
dec
xchg
lcall
aad
mov
pop
jmp
cmp
lret
scas
jno
push
or
hlt
idivb
lods
or
inc
andb
mov
lret
insl
push
fiaddl
lds
lcall
push
adc
mov
or
fiaddl
xchg
cld
fsubl
push
test
out
in
add
dec
and
sub
pop
push
ja
sbb
adc
push
pushf
mov
in
push
sahf
mov
movsl
xchg
repz
lret
fwait
mov
addr16
xchg
cmpsb
fcomi
jae
sub
out
fdivr
or
xor
mov
add
outsl
inc
mov
pop
nop
inc
and
stos
pop
addr16
sahf
sub
xlat
test
lret
aad
xor
adc
xor
cltd
je
fs
jecxz
ret
dec
mov
das
aas
das
jle
lret
incl
ret
leave
lret
xchg
push
push
mov
pop
mov
mov
xor
repz
sahf
mov
sbb
jmp
mov
xchg
mov
sti
xlat
or
push
arpl
push
cli
jb
sbb
lods
mov
dec
addr16
xor
movsl
inc
jne
or
insb
aad
xchg
xchg
xchg
lcall
iret
repz
pop
test
add
in
add
jmp
xchg
jno
insl
xor
mov
add
out
mov
and
das
in
inc
dec
hlt
pop
cmp
and
pop
div
jne
add
sub
adc
cld
xor
rcll
pop
cmp
andb
mov
mov
mov
sbb
mov
jno
pop
xlat
push
xlat
sar
push
test
mov
or
pop
dec
cs
adc
subb
gs
divb
push
adc
xchg
mov
je
clc
jb
push
jbe
loop
outsb
pop
push
or
lret
pop
jne
jns
mov
in
icebp
xor
jp
jl
pop
loop
jle
nop
pop
lds
jb
xor
dec
imul
xchg
dec
nop
mov
int
mov
jno
sub
popf
sub
lds
mov
inc
and
rclb
push
fnstsw
loope
mov
insb
push
adc
xchg
imul
rol
test
cwtl
mov
sti
cmc
cs
cwtl
js
or
jl
pop
scas
pusha
mov
ljmp
jb
imul
mov
mov
scas
pushf
inc
cli
or
push
lahf
lret
push
test
xlat
pop
jo
jp
sbb
inc
sbb
jecxz
cs
sub
adc
or
stc
shl
cmp
mov
movsl
cltd
inc
pusha
sbb
dec
pop
pop
mov
sub
fsubrs
out
out
mov
mov
cwtl
fadds
mov
pop
push
fwait
negb
push
movsb
pop
in
fwait
loopne
xchg
push
stc
jge
xchg
xor
ja
lret
mov
aas
dec
and
aaa
xchg
arpl
mov
cmp
decb
mov
sbb
pop
xchg
mov
jge
test
bound
dec
lcall
jns
lock
fucomp
dec
push
xchg
data16
jmp
fists
dec
fnstcw
sub
adc
mov
subb
push
in
pop
push
call
jae
jo
call
sub
scas
pop
ja
ss
pop
push
fisttps
push
cmp
jne
adc
sub
shrb
and
addr16
or
inc
mov
pop
das
pop
popa
idivl
and
stos
rcrb
dec
and
pop
push
mov
pop
adc
loopne
jnp
cmp
and
inc
repz
sbb
test
rclb
jb
fcoms
adcb
mov
ficompl
inc
inc
mov
jmp
hlt
mov
push
lods
jle
loopne
dec
xchg
mov
push
mov
leave
mov
mov
insb
ret
adc
sahf
mov
fst
movsl
fistl
shlb
subl
inc
mov
sti
jo
je
stos
mov
cmp
pop
loopne
loopne
test
xchg
mov
mov
mov
pusha
test
xchg
pop
jno
cld
adc
insb
lcall
xor
sub
int3
andb
fcomps
mov
iret
nop
cli
cmp
leave
jnp
ret
js
mov
pop
sbb
aad
add
lods
sub
andb
mov
lret
shll
enter
jge
addb
xor
inc
push
mov
dec
mov
sub
mov
or
or
lahf
and
inc
and
enter
jns
enter
fsubs
hlt
nop
pop
pop
stc
jmp
fs
stos
inc
popa
das
aad
loope
mov
out
cmp
cmpl
xchg
movsb
cmp
cmp
or
sub
push
add
pop
mov
add
nop
aaa
or
insb
lret
mov
adc
cmp
lea
in
insl
add
mov
pop
outsb
mov
lods
sbb
ret
add
mov
mov
mov
test
out
mov
sub
orl
inc
pop
push
jge
xchg
and
int3
pop
out
int3
fwait
lods
rorb
adc
popf
aad
add
xlat
cli
jae
iret
mov
sbb
adc
dec
push
jl
decb
pushf
ret
shl
ret
add
cmp
dec
test
lods
shrl
adc
ret
mov
adcb
adc
ljmp
stos
dec
jmp
mov
fisubs
mov
cli
iret
inc
dec
mov
insb
mov
in
int3
shl
push
lods
xchg
out
jae
xchg
pop
mov
sub
jecxz
rorl
repz
push
imul
aaa
xor
add
ja
lcall
pop
xchg
xchg
leave
push
add
sub
push
fistpl
xchg
mov
cs
movsb
mov
push
mov
sbb
sub
sub
xchg
movsb
out
out
fld
push
mov
xlat
inc
dec
insb
ljmp
xchg
adc
sti
or
push
xor
add
jns
inc
xchg
adc
push
and
es
int3
outsl
xchg
pop
add
adc
xchg
nop
or
test
ja
jae
and
cltd
xor
pop
xor
dec
fiadds
int3
inc
adc
add
adc
and
push
hlt
repz
cmp
xchg
enter
cmp
insl
insl
sbb
add
pop
int3
lea
cmpsb
jno
lods
out
int3
dec
psubd
in
cmc
bound
inc
xlat
pushl
pop
rcl
mov
out
scas
insb
sbb
dec
ss
cmp
push
jno
dec
fisubrs
mov
test
in
mov
dec
jle
cs
push
inc
jns
add
shr
fsubl
inc
dec
jns
cmp
out
loop
and
pop
imul
or
push
mov
std
repz
dec
fidivrs
add
negb
aas
add
shr
cwtl
mov
cltd
movsb
add
jns
dec
inc
mov
inc
in
xchg
ret
mov
jns
cmpb
sub
mov
fiadds
mov
jo,pt
shll
or
in
or
gs
dec
adc
cmpsb
or
jo
and
jno
outsl
jmp
adc
inc
ret
cld
dec
rorl
mov
std
fimuls
mov
mov
xchg
mov
pop
mov
sbb
inc
add
mov
cmp
add
cmp
cmpsl
and
in
test
mov
inc
cmp
test
or
dec
hlt
jo
xchg
inc
scas
inc
adc
lret
jl
sbb
add
dec
or
dec
inc
adc
popf
into
and
cmp
mov
push
test
pop
loop
mov
lret
push
icebp
lcall
add
js
xor
push
out
push
sbb
in
out
or
cmp
sbb
int3
cmpsl
into
mov
push
xchg
lahf
mov
out
add
aam
mov
jmp
pop
or
test
jmp
gs
lock
lret
stc
out
stos
dec
aad
popa
pop
xorb
pusha
sti
lret
fistl
push
test
shll
mov
mov
cmp
inc
rcrb
jle
sub
adc
loope
xlat
in
dec
push
cmpsb
dec
push
inc
fmull
jne
and
jae
arpl
iret
aas
shrb
cmp
mov
icebp
cwtl
jae
xorl
jmp
sar
sbb
or
adc
enter
dec
in
jecxz
xor
mov
or
nop
inc
inc
jmp
xor
scas
mov
repz
pop
fmull
push
sbb
mov
xor
pop
adc
push
daa
fwait
or
pusha
sbb
jecxz
fcmovu
and
push
adc
nop
xchg
add
js
cld
arpl
out
push
pop
lcall
dec
insb
push
mov
mov
mov
xchg
lret
mov
ljmp
dec
icebp
jmp
dec
pop
or
neg
rorb
xor
mov
adc
arpl
or
cs
shl
addr16
push
xchg
into
or
lds
fadds
and
iret
mov
jecxz
out
inc
add
pop
out
cli
outsl
and
pop
jmp
sub
push
in
xor
sbb
repnz
cmc
cmp
nop
lea
fldcw
pushl
pop
mov
xchg
ds
sub
ja
add
fstl
mov
inc
sub
mov
ja
stos
mov
ja
aam
sub
inc
mov
arpl
push
jle
sbb
lods
mov
cmc
fcomip
cld
pop
mov
inc
ds
xchg
sbb
cwtl
adc
mov
dec
xchg
xor
out
pop
ret
sbb
ret
jl
xor
xor
icebp
and
mov
adcl
xlat
rorb
pop
xchg
test
and
pop
mov
rcrb
ds
fsts
test
or
test
lods
cs
pop
mov
daa
xor
std
nop
jns
sarb
fwait
enter
imul
frstpm(287
cmc
insb
and
fdivrp
cmp
aam
inc
cmc
sbb
lods
dec
lret
sub
sbb
imul
fldenv
mov
pop
imul
mov
and
fs
cld
jl
dec
dec
jne
pop
movsb
jb
addr16
or
adc
xchg
testl
cmp
andb
fistl
sub
call
push
or
xchg
scas
movsl
adc
cwtl
mov
mov
aam
ja
sbbl
adc
hlt
je
fwait
pop
cs
jb
inc
push
push
adc
sub
pop
jp
out
test
or
js
ret
mov
jo
or
shlb
mov
mov
push
mov
lahf
mov
insb
faddl
es
mov
pop
and
daa
movsl
fwait
test
add
cmp
jle
movsb
or
xchg
out
adc
adc
xor
mov
pop
fstpl
and
ret
inc
js
pop
pop
mov
addb
fimull
das
inc
movsb
jae
test
aas
imul
out
jno
mov
cmc
adc
daa
mov
fcomps
in
mov
mov
push
sbb
imul
js
or
mov
inc
mov
lret
cltd
sub
mov
in
mov
cld
cwtl
test
mov
fdivp
fcoms
rolb
mov
inc
fdivrl
xchg
xchg
shr
jnp
mov
dec
test
cmpl
mov
and
inc
mov
add
xor
scas
inc
add
mov
addb
lcall
fsubrs
push
call
and
fcomps
mov
mov
add
mov
stos
mov
mov
inc
fwait
jg
es
jne
mov
adc
xor
sti
add
fucomip
xchg
aas
int
das
inc
or
adc
shr
lret
add
push
test
call
adc
jae
mov
cld
int
mov
cmpsl
mov
push
mov
jbe
in
dec
es
rcll
outsb
aaa
or
shl
push
inc
inc
or
adc
cli
mov
fbld
int
sbb
rolb
jle
into
mov
ss
sbb
mov
mov
pop
aaa
sbb
sbb
lock
pop
cli
lds
cmp
rorb
and
sti
adcb
adc
adcb
negb
lret
in
sub
push
test
sub
dec
inc
sti
pushf
mov
push
cmpsb
jmp
sbb
add
push
add
out
push
xor
dec
test
cld
dec
pushl
js
jns
pusha
fcmovb
push
jo
int
mov
cli
aam
lahf
clc
dec
loopne
xor
clc
sahf
cmp
or
mov
inc
std
lock
mov
loopne
pop
jns
dec
dec
add
fcomps
adc
pop
dec
xchg
dec
sbb
or
lds
mov
xor
mov
insl
push
mov
lret
mov
push
popa
ret
jl
int
or
sbb
iret
leave
mov
mov
add
jmp
stos
leave
mov
loopne
sbb
into
hlt
push
lret
jle
cld
mov
imul
rcll
jp
adc
sbb
std
fwait
adc
mov
pop
call
xchg
jl
dec
inc
in
stos
or
or
inc
aaa
pop
mov
or
ret
mov
cwtl
push
mov
jns
mov
cli
jbe
cmp
xor
or
int
in
mov
add
test
test
xor
and
ret
aas
ljmp
leave
hlt
repnz
push
push
or
pusha
sbb
and
or
mov
adc
sysexit
or
nop
es
inc
mov
sbb
add
enter
mov
cmp
stc
gs
in
dec
sub
xor
mov
inc
add
mov
aam
sti
and
xchg
jae
add
pop
ljmp
sbb
sbb
movsl
pmulhuw
imul
es
mov
xchg
jae
movsb
std
lret
xchg
inc
ja
cli
ret
ret
push
push
in
and
addl
test
pop
fwait
mov
loopne
inc
xchg
mov
jg
and
scas
data16
loop
mov
ds
inc
push
xchg
push
or
and
xchg
pop
lret
inc
jnp
leave
adc
adc
mov
lcall
dec
pushf
xor
es
lret
imul
inc
divb
jecxz
loope
sbb
idivb
into
mov
cmp
arpl
mov
adc
cmp
push
adc
mov
in
stos
vmovhpd
xlat
dec
lea
dec
adc
faddl
xchg
out
cld
and
in
add
mov
mov
sub
xor
mov
mov
mov
push
xchg
jle
dec
mov
push
cmp
data16
js
int3
fs
outsl
mov
popf
and
scas
leave
cs
pop
in
icebp
popa
xor
jne
xor
fcoml
insb
sub
aaa
dec
xor
push
pushf
mov
adc
movsb
sbb
mov
daa
push
neg
mov
pop
or
jns
stc
in
sub
fldt
mov
pcmpeqb
cs
xchg
in
nop
fsubs
movsb
repnz
adc
xchg
ljmp
push
xorl
sbb
aad
jecxz
xchg
mov
sub
and
stc
cli
jg
mov
pop
push
push
adc
push
repnz
je
aad
inc
jl
push
or
daa
cmp
xchg
push
pop
sub
cmc
push
sti
gs
jo
fwait
clc
push
sbb
mov
mov
cwtl
mov
push
outsl
aas
pop
inc
cmp
aas
and
roll
fcoml
jp
cmp
mov
cli
daa
outsb
mov
frstor
rcrb
cmp
dec
insl
jmp
nop
movsl
fisubl
mov
test
push
sbb
test
jecxz
out
call
stc
aam
pop
xlat
push
repnz
pop
push
out
xchg
cltd
add
imul
add
pop
mov
arpl
in
addb
ror
mov
mov
ja
outsb
movsl
pop
dec
hlt
xchg
mov
in
mov
dec
xchg
cmp
sbb
xchg
and
hlt
or
lret
xchg
stos
dec
mov
in
mov
ljmp
cmc
push
and
add
mov
stos
fildll
lods
cmp
lods
out
stos
and
jmp
cmpsl
mov
push
inc
adc
xor
repnz
scas
push
dec
xchg
fisttps
inc
je
rcll
add
cmp
jmp
fwait
pop
mov
jmp
scas
rcll
lahf
jne
call
push
imul
stos
pop
xchg
cwtl
fwait
testl
cmp
testb
out
mov
inc
je
cwtl
rcrl
dec
ret
xor
call
jp
int3
push
mov
cmp
pop
inc
lods
xor
shrl
cmp
and
loop
mov
push
mov
pop
xchg
fsubl
xchg
stos
jo,pn
les
ficoml
jo
clc
stos
mov
test
dec
cltd
dec
xchg
xor
sub
movsb
jl
inc
test
pusha
inc
mov
mov
cmp
jns
ret
xchg
push
clc
cltd
sub
and
sahf
push
daa
mov
sar
std
imul
sbb
adc
cltd
xchg
sub
push
push
sbb
mov
mov
fdivs
push
outsl
shrl
push
jns
sarl
clc
add
shrb
push
pop
push
insb
cwtl
jae
outsb
add
ret
outsl
leave
cmp
outsb
inc
fidivl
mov
leave
xor
or
push
push
gs
dec
jnp
inc
lret
mov
mov
addb
in
adc
js
cmp
xor
rcrb
lret
jnp
sbb
arpl
push
add
xlat
mov
and
inc
cmpsl
fmuls
lods
stc
leave
jg
xchg
cmp
les
fwait
lods
aam
xor
push
clc
push
pop
bound
mov
and
mov
out
or
or
repz
mov
or
pop
rcll
push
pop
xchg
scas
lahf
mov
pop
je
fmull
aas
sub
stos
jge
je
mov
aas
inc
mov
arpl
mov
xchg
int3
jl
arpl
mov
cmp
ljmp
pop
dec
push
sbb
testb
mov
dec
pop
inc
dec
sub
call
or
ja
cwtl
xorb
pop
leave
das
push
xor
add
mov
lahf
adc
daa
fidivrl
div
or
icebp
xchg
pop
mov
adc
shrl
insb
inc
subb
outsb
scas
out
cmpsb
push
rcl
jmp
test
into
lret
ss
popf
push
loopne
aad
lahf
sti
dec
fsubrs
je
sub
popa
inc
das
iret
jnp
mov
sbb
loop
mov
or
adc
add
clc
inc
fwait
pop
sahf
push
mov
data16
pop
pop
jno
js
dec
lret
mov
ss
jl
loope
icebp
movsb
push
mov
out
push
nop
ret
dec
fistps
call
pop
lcall
movsl
jbe
ja
and
push
xchg
fisttps
inc
sti
push
pop
xor
add
movl
jecxz
imul
das
icebp
jae
dec
arpl
sbb
mov
scas
jae
jne
push
std
and
jmp
outsb
in
mov
xor
or
mov
sbb
inc
cwtl
scas
adc
cmp
lahf
mov
dec
fbld
cmp
mov
stc
ret
add
pop
push
cmp
inc
fwait
daa
lahf
idivl
andl
push
cmp
lods
lret
lret
and
sbb
in
or
mov
mov
in
js
pop
mov
jae
dec
std
jo
dec
or
mov
insb
jae
xorb
shll
icebp
mov
outsb
add
xorb
xor
xchg
iret
aas
push
inc
mov
xor
mov
mov
push
push
mov
sbbb
ffreep
sub
aas
test
mov
aaa
jp
cld
xchg
fisubs
outsb
adc
xchg
adc
ss
icebp
insl
jae
insb
testl
mov
insb
jmp
sbb
mov
outsl
or
pushf
mov
adc
fcompl
out
cltd
mov
and
gs
out
insl
xor
out
imul
add
mov
jmp
testb
xchg
and
stc
mov
outsb
movsl
cmpsb
adc
in
cmc
sub
xchg
add
inc
adc
sahf
incl
shll
testb
ja
mov
jecxz
out
mov
loopew
movsl
and
pop
pop
jecxz
loope
sub
addr16
push
mov
pusha
mov
bound
fucomip
add
test
and
lods
fsts
pop
into
fsts
pop
sub
movsb
xor
mov
cmp
cmpsb
idiv
in
daa
and
test
sbb
stos
scas
data16
je
fistpll
pop
popf
xor
dec
int
and
in
mov
add
fstps
mov
clc
or
aad
adc
sub
dec
stos
mov
jmp
iret
mov
ds
test
jmp
movsb
sub
pop
mov
xlat
sbbl
fstp
bts
popf
or
fmuls
insb
lock
or
inc
add
inc
or
outsb
loopne
mov
jge
js
xor
stc
leave
mov
lock
and
cmp
mov
stos
pop
pop
fcomps
mov
pop
scas
jle
stos
dec
mov
loopne
mov
lret
lods
int
jne
fwait
data16
ret
sub
adc
out
jp
dec
test
std
mov
push
add
push
dec
aaa
push
test
inc
sub
daa
insl
pop
mov
pop
adc
jnp
push
and
sahf
sbb
mov
lret
xor
xor
sbb
or
dec
enter
dec
insb
inc
or
arpl
xlat
mov
pusha
jg
fiaddl
imul
cmp
pop
or
jl
pop
mov
and
out
negl
mov
mov
xchg
xor
rolb
cmc
push
enter
imul
fnstcw
jne
leave
inc
adc
and
jmp
sub
xchg
cmp
inc
push
pop
add
shrb
inc
jb
aam
clc
jle
adc
stos
int
adc
push
sub
mov
into
repnz
std
sub
fistpl
ss
mov
ja
test
fwait
sahf
push
fstl
leave
andnps
rcrl
rcrb
int
test
mov
push
jp
lcall
ljmp
xchg
inc
mov
pop
jns
roll
mov
lret
leave
mov
bound
lret
jno,pt
mov
fistpll
xor
sbb
add
cmp
outsb
aad
mov
pop
repnz
ficoml
addb
rol
jecxz
ds
pop
pushf
jp
dec
pop
sub
adc
xchg
jne
sub
fcoms
add
adc
js
sub
or
jp
mov
jl
sbb
outsb
push
in
mov
call
out
lods
sbb
or
or
sbb
mov
cmp
jns
js
inc
push
stc
jle
mov
out
xchg
mov
stos
pop
pop
cli
es
sbb
movsb
cmp
sbb
rcll
pusha
xchg
mov
xor
push
pop
imulb
xor
pop
adc
xor
lahf
addr16
dec
adc
imul
sub
mov
gs
adc
cmp
pop
popf
cmp
in
xchg
adc
jmp
lret
mov
xchg
mov
clc
mov
xor
and
std
sub
adc
pop
arpl
test
stos
pop
xchg
or
repnz
lods
je
ljmp
and
cmp
push
pop
push
into
sbb
push
inc
dec
cmovb
loop
xor
pop
mov
push
mov
fidivrl
call
pushf
icebp
push
ds
mov
repnz
jb
sbb
sbbl
cmpsl
add
adc
xchg
out
lret
mov
add
add
ret
adc
cmp
jno
mulb
mov
into
test
adc
cld
iret
and
test
mov
xchg
int3
pop
jecxz,pn
popf
add
imul
pop
jo
inc
mov
dec
test
ss
xchg
fisubl
adc
dec
stos
adc
add
lret
lods
into
in
and
out
fnsave
repnz
adc
adc
andb
aad
lods
int3
ljmp
nop
xlat
ret
and
inc
popf
inc
adc
or
xchg
ret
es
sub
bound
xor
jo
dec
jae
inc
movsb
stos
daa
sub
aam
push
and
add
lea
es
mov
dec
xor
cmpsb
lea
and
pop
lock
xchg
push
jl
imulb
dec
xchg
push
jae
rcll
fnsave
and
pop
mov
sbb
loope
or
shlb
ss
fs
out
or
cmp
jae
movsb
roll
arpl
arpl
scas
pop
scas
aam
mov
sbb
daa
mov
test
les
fistl
inc
std
push
dec
inc
sbb
add
imul
cmp
test
scas
test
out
test
or
add
mov
sarb
stc
xchg
mov
ficoms
cmp
inc
loope
sbb
pusha
fisubs
jmp
test
cwtl
jo
and
and
imul
sub
frstpm(287
push
pminsw
add
pop
lods
cmp
call
imul
arpl
mov
dec
std
pop
addr16
inc
cmp
mov
cwtl
popf
push
jnp
loopne
fistl
inc
or
ljmp
push
clc
ds
ja
dec
jge
or
cmp
test
pop
cmp
addb
aam
aam
inc
addr16
sub
bound
or
push
dec
xlat
ret
leave
push
jge
cli
jmp
divb
push
or
cwtl
push
inc
and
notb
addb
sub
or
pop
hlt
daa
iret
add
inc
lea
mov
fbstp
mov
xchg
mov
push
dec
or
cmpsb
mov
cli
inc
test
mov
pop
je
loopne
mov
and
jl
sbb
add
adc
xchg
cmp
adcb
lock
push
test
fiadds
push
mov
sti
outsl
nop
not
icebp
inc
mov
scas
into
mov
dec
stc
out
pop
movsb
cli
jge
dec
xor
sahf
sarl
inc
mov
pop
cmpsl
mov
cmpsl
dec
insb
stos
daa
bound
inc
mov
pop
add
ficompl
or
rcll
fs
push
mov
pushf
jo
stc
inc
sub
mov
stos
mov
pop
fld
pop
cli
xor
mov
push
addb
data16
push
or
mov
mov
jae
cld
arpl
jl
dec
mov
adc
pushf
aaa
mov
shlb
pop
mov
addr16
inc
pop
mov
scas
addr16
mov
divb
or
or
inc
xor
mov
mov
mov
sub
push
loop
mov
call
dec
push
ljmp
pop
lret
lods
jl
shl
fincstp
lcall
add
push
jnp
in
out
adc
lock
pusha
sub
dec
xchg
adc
pusha
sub
push
fsub
loope
aam
jecxz
cmp
lock
xchg
mov
and
pusha
bound
adc
pop
jg
add
ja
arpl
test
or
push
pusha
sbb
xorb
das
mov
into
frstor
aam
sub
fcomip
aaa
fldln2
in
xor
lcall
sub
fs
dec
inc
pop
and
xchg
fsubp
popa
adc
adc
out
andl
shlb
mov
and
adcb
sbb
dec
inc
cs
adc
push
insl
movsb
mov
fdivrl
or
sti
adc
ret
test
inc
shll
leave
xchg
nop
add
imul
inc
cmc
imul
cmp
aaa
xchg
loop
repnz
divps
inc
sbb
sub
ret
loopne
movsb
mov
imull
sti
lret
and
or
popl
and
addb
push
push
scas
mov
or
mov
cmp
inc
pop
clc
mov
xorl
clc
and
data16
mov
aas
cmp
inc
mov
sub
mov
sbb
pop
xlat
mov
sub
das
xor
aaa
pushf
and
stc
scas
jg
inc
sbb
pop
and
rorl
in
gs
cmp
ja
mov
jl
pop
or
in
jp
stc
cltd
mov
mov
push
add
mov
add
rcl
ror
mov
cld
push
test
mov
jge
add
jnp
scas
sbb
sahf
hlt
jmp
fiaddl
imul
in
lea
sub
gs
in
jo
das
xchg
push
mov
xor
add
dec
outsl
sub
loop
loop
rorb
fbld
and
mov
jp
std
ds
notb
imul
bndldx
movsb
jns
mov
inc
nop
push
mov
addr16
inc
cs
or
aas
mov
cmp
stos
jnp
out
ret
aad
push
add
ret
inc
xor
cltd
sbb
inc
and
mov
test
sbb
int3
xchg
pushf
data16
mov
cmp
and
mov
negl
push
push
xchg
or
addr16
movsl
inc
inc
push
inc
stc
js
jbe
mov
outsb
xchg
pop
push
and
cmpsb
dec
shl
dec
add
rol
sbb
and
mov
fistl
sub
hlt
ret
inc
and
mov
inc
xchg
mov
mov
out
in
sarb
lret
fwait
lods
sub
push
jp
pop
lods
addr16
mov
fisubrl
jl
ret
call
fcmovbe
movb
jle
push
ud2
jb
enter
aas
push
repnz
std
repz
pop
mov
and
jnp
stc
shrl
test
loopne
jp
fsubl
jbe
stos
push
aas
sub
pop
out
mov
js
insl
dec
mov
clc
pop
cmp
sarb
and
cmpsl
mov
inc
xor
or
pop
adc
repz
popa
cmp
dec
out
popl
lea
in
sub
ljmp
fnstsw
call
sub
arpl
leave
cld
pop
push
mov
fisttpl
cmp
daa
std
jmp
fistpll
push
and
call
or
mov
nop
xchg
hlt
insb
filds
pop
pop
push
cltd
out
sbb
add
fisubl
cmpsb
pop
pop
insl
test
sahf
fnstcw
mov
data16
scas
jmp
cmp
adc
stos
ljmp
jl
or
lcall
or
mov
in
jne
fisttps
pusha
sbb
dec
outsl
lcall
pop
es
ds
in
push
xor
data16
sbb
in
add
push
adc
ds
pop
push
fcmovne
mov
sbb
adc
push
jb
lahf
pop
loope
or
das
xchg
lcall
mov
adc
out
sarl
adc
das
pusha
mov
mov
mov
dec
mov
jl
push
mov
jl
jmp
jne
ret
pop
mov
sub
jp
outsl
mov
push
or
aam
xor
ret
imul
inc
lahf
stc
xchg
sahf
xor
call
lods
and
dec
jg
mov
sbb
test
or
mov
scas
rcll
inc
sbb
lret
iret
ret
jmp
insl
jb
mov
jnp
sub
fstps
lock
fdivs
fdiv
cld
dec
mov
xchg
mov
xor
inc
sub
push
cmp
and
dec
push
fwait
lret
lcall
or
mov
mov
jnp
inc
xchg
fdivrl
rcrl
fistl
fidivrl
pop
cli
xor
cmp
outsl
jp
mov
add
cltd
ret
sahf
cmp
sbb
rorb
jp
or
mov
sbb
icebp
aad
mov
or
lds
mov
adc
arpl
test
out
add
lods
pop
mov
mov
lahf
cwtl
add
daa
cmp
in
push
movsb
jge
lock
bsf
loope
mov
fnsave
pop
add
mov
mov
xchg
int3
movsl
std
and
aas
dec
and
add
es
aam
jno
ja
ljmp
lods
mov
sub
jle
int
lret
sub
sub
pop
cmpb
out
or
dec
daa
mov
sub
jle
loop
daa
out
repnz
aam
in
push
xor
movsb
xchg
or
add
dec
push
adc
xor
xchg
sbb
lods
icebp
inc
pop
daa
daa
outsl
xchg
pop
jmp
call
ss
jno
ror
push
faddp
jae
aad
sub
push
or
push
xchg
jmp
mov
xor
cmp
or
or
add
dec
pop
inc
mov
cmp
sbb
xchg
in
sub
aad
loopne
js
push
daa
daa
adc
xchg
lods
xchg
scas
xor
dec
ds
sahf
sbb
add
fwait
ja
adc
jp
pop
mov
idivl
pop
xchg
mov
cmp
fidivs
rcrb
mov
cltd
sti
mov
cmp
sbb
add
cli
sbb
jle
sbb
add
cmpsb
lods
scas
hlt
and
repz
ljmp
mov
jp
imul
xchg
jmp
jge
xchg
xlat
mov
jmp
jl
inc
inc
add
rol
je
in
add
jle
mov
dec
mov
jmp
fnstcw
out
fs
lea
rcll
xchg
jo
xchg
pop
lahf
push
sbb
xchg
in
sarl
test
jg
repz
divl
sbb
inc
or
xchg
je
or
test
div
cmpsl
add
stos
jg
into
loopne
mov
inc
cmp
insb
or
cmc
inc
adc
add
andl
pop
or
sahf
mov
push
xchg
sahf
outsb
in
jne
sub
cs
shrb
or
popf
cmpb
rolb
pop
movsl
mov
out
mov
cmpsl
stc
pop
jl
mov
mov
mov
test
dec
ja
lods
xor
sub
xchg
add
hlt
shlb
in
mov
mov
sub
js
mov
fldcw
pop
sbb
outsl
fidivrs
xor
inc
aad
inc
mov
mov
xchg
pop
and
mov
or
decb
cmp
fucom
hlt
inc
ret
add
push
mov
out
bound
jp
in
lcall
dec
imul
pop
negw
push
aad
jecxz
adc
dec
sub
je
cltd
movhps
int
imul
xor
sbb
fimuls
in
pop
fdivp
push
outsl
aad
or
lahf
shlb
push
stos
stos
add
fisttpl
push
add
cs
fwait
mov
lret
pop
push
lret
mov
popa
aas
faddl
mov
dec
rcl
or
clc
mov
dec
mov
in
fdiv
adc
push
fsubrs
call
mov
imul
pop
jp
fucomip
mov
add
leave
insb
data16
pop
rol
jnp
leave
mov
sub
inc
inc
or
jno
aas
ret
lods
cmpsl
ljmp
cmp
sti
push
imul
mov
clc
movsl
mov
call
mov
adc
xor
sub
xor
cld
mov
sbb
icebp
fcoms
bnd
or
nop
and
loop
push
js
daa
sbb
aad
or
jne
call
pop
mov
out
push
daa
mov
xchg
mov
inc
arpl
addr16
out
xor
rorb
dec
dec
rclb
pop
mov
sar
adc
push
pop
adcb
or
insl
fwait
dec
mov
cmp
and
pop
in
dec
aaa
dec
xchg
test
lods
fldenv
push
inc
mov
call
nop
std
xchg
mov
outsl
shrl
int3
int
and
bound
or
mov
test
xchg
add
leave
mov
pop
dec
xchg
pop
and
push
lea
test
lods
xlat
lods
fwait
add
fistpll
mov
loope
mov
ret
and
lea
popf
mov
jp
jne
subl
popa
mov
ficompl
push
rcll
roll
jno
insb
in
imul
psubsw
dec
sub
fstpt
mov
dec
mov
cld
pop
jmp
or
scas
mov
iret
aas
ljmp
pop
divb
in
jne
adc
mov
dec
mov
popf
fldl
push
dec
mov
pop
mov
loopne
rorb
inc
aam
jle
mul
pop
xorl
adc
and
icebp
sti
cs
outsb
sbb
out
cmp
jmp
sbbb
add
or
aam
sbb
mov
fcmove
push
das
fsubr
fadds
enter
pushf
and
enter
divb
out
or
fisubrs
fisttpl
pop
leave
sub
in
mov
mov
xchg
or
incl
int
adc
xchg
in
mov
xchg
mov
pop
outsl
xlat
xor
addr16
adc
cld
test
out
cli
xor
jne
aaa
std
inc
bound
mov
add
test
xor
dec
add
std
mov
fisubl
mov
fldenv
cmp
test
test
pop
out
adc
and
sub
iret
out
sbb
pop
in
inc
jp
pop
or
push
stc
push
cmp
sbb
jg
scas
aam
scas
jnp
aam
jle,pn
icebp
dec
js
shl
inc
sarl
nop
arpl
int3
leave
cwtl
pop
fidivrs
stos
and
insl
inc
push
mov
mov
out
push
xor
fisubrl
mov
inc
jg
subb
xchg
into
rcl
fisttpl
stos
shlb
in
push
addr16
fdivrp
mov
movsl
fxch
mov
jno
ret
out
cwtl
nop
or
lcall
ret
sbb
xlat
std
jle
ljmp
addr16
ss
lahf
add
das
ror
leave
popa
pop
mov
lret
test
and
sbb
movsl
cltd
mov
or
pop
jl
sub
mov
xor
adc
in
jae
jmp
mov
sub
lret
push
push
inc
adc
and
je
into
jbe
js
mov
shlb
mov
ljmp
add
dec
adc
stos
cmp
cli
stc
idivb
cmp
xor
cmp
xchg
cmp
arpl
inc
xchg
shl
test
push
dec
int
push
pop
push
lahf
lds
jnp
gs
daa
and
adc
mov
pop
pop
add
outsl
add
dec
in
lds
jle
mov
or
repz
repnz
fidivrl
ljmp
outsl
mov
mov
call
and
mov
aad
cmpsb
inc
in
add
scas
mov
stc
cmpsb
jg
inc
popa
testl
lret
xchg
inc
xor
jbe
loope
sub
lahf
call
pop
into
dec
pop
cwtl
pop
ret
jo
cmp
adc
mov
jle
fdiv
das
pop
mov
cmp
sarl
xor
jnp
jns
inc
cmp
jmp
jp
shll
push
xchg
imul
subl
pop
jmp
xchg
pop
fbld
sub
adc
inc
sbb
outsl
cmp
cmp
jae
and
sub
push
movsb
jae
push
test
inc
xorl
adc
fld
jno
or
xor
adc
xor
dec
xchg
add
sti
pushf
arpl
sahf
jns
push
sub
dec
xchg
pop
sahf
dec
push
inc
xchg
mov
es
xchg
and
cmp
jg
lret
dec
addr16
push
rcrb
decl
xchg
sti
js
xor
adc
in
sub
xor
dec
fs
and
adc
cmp
cmp
xor
ret
ret
cmp
loop
jle
adc
aaa
out
mov
and
inc
add
sub
out
jno
or
adc
adc
mov
sub
mov
dec
xchg
dec
push
fdecstp
scas
sbb
dec
xchg
cmpsb
and
push
pushf
mov
mov
xabort
or
and
loop
or
pop
aam
mov
mov
push
mov
sti
iret
aam
ds
mov
setns
jbe
in
fsub
insl
jo
stc
add
and
jecxz
fs
lods
out
insb
iret
stc
push
mov
mov
dec
scas
pop
sub
std
divb
sti
jmp
les
pop
mov
cmpl
mulb
cs
add
clc
sub
cltd
push
add
gs
mov
stc
pusha
sbb
lcall
push
mov
or
dec
scas
inc
clc
or
pusha
scas
test
jae
pop
xor
or
sbb
fdiv
push
inc
hlt
inc
pushf
adc
sbb
adc
mov
pop
enter
fcmovb
popf
mov
mov
add
sub
sbb
rcrb
aam
sahf
inc
pop
xor
lds
sbb
je
inc
addr16
dec
fdiv
dec
popf
aam
ret
sti
sub
or
mov
loope
jo
push
pusha
test
cltd
repz
cltd
aad
arpl
mov
popf
xchg
lock
cmp
cwtl
cmp
mov
lcall
in
add
mov
adc
cs
mov
adc
inc
outsl
mov
cld
cmc
pushf
repnz
cld
mov
push
roll
in
notb
shlb
in
shll
lret
push
imul
or
and
push
inc
mov
xor
mov
aam
xchg
or
mov
das
mov
mov
cmpsl
aas
ss
pop
ret
fst
lcall
jecxz
dec
mov
stc
pop
stc
jne
push
inc
daa
pop
hlt
cmc
aaa
or
ja
std
dec
xchg
test
loope
adc
mov
and
xchg
lcall
je
mov
mov
xchg
adc
xlat
shlb
sbb
and
push
xorl
mov
inc
cmpsb
fldcw
push
push
lea
lahf
adc
sbb
popa
outsl
or
mov
fcmovnu
push
in
int3
andl
push
mov
xor
rcl
repz
shl
fimuls
add
sbb
stc
call
jb
and
cmp
jp
ret
shlb
insl
and
ret
inc
push
arpl
not
ret
push
jge
outsl
lock
jl
or
aas
cmpsb
icebp
dec
dec
cmpsl
ljmp
fisubl
fsubrp
sub
leave
sbb
mov
int
xor
insl
flds
adc
ficoms
push
cmp
sbb
cmp
flds
or
xchg
jg
push
or
ja
dec
push
push
test
leave
das
fs
dec
jnp
ficompl
sbb
int
or
sbb
adc
pand
lds
push
cmp
cmp
jecxz
cmp
nop
arpl
sub
cmpsl
xlat
ljmp
rcll
int
popa
and
gs
roll
or
je
sarl
mov
pop
jo
imul
lock
jl
sbb
lods
insl
pop
xor
or
dec
out
cld
xor
data16
ds
dec
dec
dec
or
cmp
mov
sbb
xchg
fmull
xor
add
inc
mov
jns
adc
add
loopne
les
push
sarl
push
pop
jge
push
mov
cmp
movd
cli
jo
in
int3
movsl
add
xor
adc
or
dec
shll
int
cs
cmc
cmp
das
subl
add
inc
jbe
mov
jp
ret
leave
bound
cmp
cmp
adc
loope
or
mov
fstps
pop
aam
mov
push
scas
cmp
insl
leave
rorb
xchg
mov
push
arpl
mov
je
fs
leave
mov
scas
adc
dec
push
ja
pop
add
ret
faddl
and
lods
inc
xor
out
iret
aam
pop
mov
sub
in
pcmpgtw
adcl
adcb
cwtl
add
or
stos
sbb
xor
mov
dec
out
pop
or
clc
rcrb
fldt
fldlg2
pop
test
adc
jo
pop
sub
push
std
fimuls
sbb
test
arpl
into
cmp
sub
cli
xlat
jnp
es
iret
mov
or
cwtl
cmp
lock
inc
xchg
pop
std
fwait
jbe
sti
jne
xchg
inc
or
mov
mov
sbb
mov
push
mov
pop
gs
inc
aaa
insl
xchg
in
jge
and
mov
inc
cltd
xor
pop
cmp
cwtl
adc
mov
fdivrs
test
daa
testl
mov
dec
inc
mov
mov
iret
xchg
xchg
sub
mov
loopne
inc
push
sub
jmp
vpsubb
mov
inc
adc
pushf
mov
popf
das
and
addr16
inc
test
push
mov
xor
scas
mov
mov
aas
inc
ljmp
sub
ljmp
cmp
jl
out
in
jl
mov
dec
mov
stos
insb
push
call
xor
mov
cmpsb
xlat
xchg
je
movsl
mov
aas
jne
jp
fisubrs
or
or
movsl
jl
mov
ds
fnstsw
mov
jne
sub
sub
mov
cmp
jg
sbb
lea
mov
push
cmpsl
pop
jno
sub
xchg
mov
cmp
pop
stc
sub
pop
push
cmc
std
mov
hlt
setp
sub
xorl
lahf
pop
xchg
xor
in
gs
jne
adc
inc
inc
sub
scas
dec
mov
shrb
inc
bound
xchg
inc
test
fiadds
ret
mov
outsl
scas
or
aam
mov
adc
scas
hlt
and
icebp
and
int
imul
loopne
pop
cmp
stc
enter
sbb
pop
es
push
dec
push
int
aad
lea
out
mov
add
int3
mov
movsb
mov
xor
rcl
xchg
sub
sub
or
push
ret
mov
repz
stc
push
aaa
adc
sub
aas
pushf
loop
outsb
dec
push
andps
mov
test
inc
das
dec
sahf
rcr
out
vprotw
iret
neg
push
test
push
fisttpl
push
loopne
fwait
cmp
jle
out
cmpsb
and
decl
xchg
dec
mov
mov
movsb
subb
cmp
lea
jge
shrb
test
inc
jp
gs
pop
pop
xor
mov
push
dec
dec
pop
jo
insl
ror
std
add
bound
add
stc
dec
push
sbb
adc
inc
mov
xchg
add
xor
aam
in
inc
ret
and
jnp
mov
scas
cld
fildl
xchg
out
mov
shlb
mov
lret
out
loope
adc
popa
pop
leave
push
cmp
dec
or
sahf
cmpsl
lds
sbb
dec
pop
jb
scas
pop
inc
mov
jle
jle
or
cmp
pop
lock
mov
clc
stos
lahf
pop
cmpsl
mov
push
js
push
shl
mov
xor
mov
mov
adc
data16
enter
call
sbb
mov
int3
movsl
xor
mov
push
sbb
ja
jno
mov
add
ja
insl
sub
les
push
das
xlat
pop
call
in
into
loop
rol
pop
pop
fidivl
inc
sbb
push
dec
bound
movsb
xor
cmp
sub
popa
fwait
pop
push
inc
pop
mov
in
leave
push
mov
push
push
mov
cmp
cmp
inc
lods
into
or
cld
mov
mov
add
push
sub
sbb
jnp
push
sbb
shr
mov
xor
add
push
push
test
fs
lcall
jmp
xchg
jge
add
push
dec
test
push
je
adc
xchg
xchg
cmp
test
xchg
gs
lret
cmp
cmp
jg
loop
insl
ret
insb
mov
inc
inc
or
jle
imul
xor
push
ljmp
jge
sbb
int3
cmpsb
add
ds
lea
cmp
imul
sar
cmc
jb
stos
jne
sysenter
paddq
aaa
or
loopne
sub
adc
push
scas
jne
push
mov
or
daa
or
mov
jo
mov
xchg
cmp
xchg
out
mov
mov
out
push
ljmp
adc
shl
add
mov
mov
test
mov
rol
clc
adc
mov
fdivr
aaa
rcl
push
xchg
mov
push
cs
fsubrl
pop
ds
pop
adc
push
mov
jns
pop
int
xchg
aas
mov
aad
add
into
iret
mov
aas
cltd
stos
hlt
sub
mov
int3
mov
sahf
rolb
push
es
mov
out
fists
popf
jmp
fs
decl
push
cltd
xor
mov
add
or
icebp
fwait
dec
lcall
call
orl
push
inc
and
jp
out
xchg
push
test
xlat
jle
sub
arpl
stos
or
and
in
ljmp
popl
mov
mov
fwait
pop
xchg
xchg
fcom
enter
adc
fiaddl
mov
ljmp
data16
mov
sub
jecxz
pusha
cld
push
jae
mov
in
es
mov
mov
fs
in
out
loop
test
out
nop
pop
cld
jle
xor
adc
outsl
xor
pop
jbe
test
fcmovu
loope
cmpsb
mov
ss
fidivrs
fisttps
cmp
and
dec
fwait
imul
lret
scas
fdivrl
push
leave
cmp
fsubrl
mov
adc
xor
mov
lea
sub
pop
outsb
loope
sbb
nop
mov
and
inc
mov
cli
or
cmp
push
jo
sub
fcmovnu
pop
add
push
lret
pop
mov
and
jbe
mov
jns
pop
int3
jae
xchg
push
sahf
sub
sub
sub
push
and
shrl
add
punpcklbw
mov
or
out
test
jp
xchg
mov
push
out
addr16
sti
jo
out
jb
enter
in
push
add
adc
mov
bound
cld
les
popl
test
cmp
sbb
mov
insb
mov
fs
into
fcmovne
sub
int3
pop
pop
int
test
push
enter
dec
clc
dec
pop
sbb
out
jle
or
imul
pusha
mov
nop
shlb
int
dec
pop
stos
movsl
orl
frstor
adc
lcall
pop
push
lock
nop
inc
push
inc
insb
sub
sbb
cmpsb
shl
cld
cmp
cmp
sub
fisttpl
cmp
cmp
sbb
or
adc
fnstcw
push
or
inc
lods
xchg
add
sub
mov
mov
insl
addl
in
cmpl
test
add
adc
addl
loop
pop
test
cmp
adc
add
xchg
insl
fwait
daa
mov
ljmp
xor
insb
aas
mov
popf
jno
mov
cmp
xor
inc
xchg
sub
jp
sbb
push
mov
xchg
nop
enter
aam
stos
push
cmp
jo
push
sbb
rcll
int
sbb
aad
xchg
jno
jns
imul
ds
or
mov
mov
or
inc
or
push
jecxz
jmp
sub
pop
jnp
cmp
ja
into
pop
out
ljmp
cltd
mov
dec
int
jge
jno
decl
roll
ret
jnp
pusha
mov
int3
sub
cmp
addr16
enter
rolb
sub
xchg
cmp
cwtl
sbbb
cld
lds
dec
push
xchg
lcall
pusha
jmp
add
push
mov
sub
mov
outsb
push
daa
add
movsl
gs
pop
pop
or
add
sbb
mov
data16
jne
je
jo
hlt
inc
fcoml
fidivs
in
push
fs
fdivrl
scas
mov
ss
xor
fildll
push
xor
mov
lcall
inc
sub
aas
gs
adc
push
fisubrs
push
lret
bound
ret
xor
je
add
andl
movsb
jecxz
push
js
push
ret
sbb
jge
outsb
jns
cld
cmpsb
xor
or
pusha
les
fcos
ljmp
dec
lret
loop
mov
outsb
pop
push
pushf
xchg
inc
fstpl
inc
adc
or
push
mov
add
test
in
imul
mov
das
sahf
push
aaa
sbb
pop
aam
jbe
cmp
add
mov
lahf
mov
hlt
jbe
mov
nop
outsb
adc
aam
aas
insl
ret
adc
or
lods
xchg
nop
and
fcoms
cmc
ss
jmp
adc
cmpsl
xor
cld
lret
cli
std
jg
mov
out
jle
xor
push
stc
adc
in
push
and
push
es
test
mov
sbb
rcl
shrb
out
adc
mov
adc
stc
push
cli
inc
rorl
lcall
mov
mov
pop
cmp
add
mov
add
dec
cltd
stos
mov
pop
rcrl
sbb
imul
add
push
sub
ljmp
js
add
test
ror
rorl
mov
sahf
sub
loopne
ss
lahf
mov
icebp
mov
in
andl
and
add
mov
lret
sub
mov
mov
movsl
lea
lods
jb
cmpsb
mov
lret
push
push
mov
xor
sbb
jns
jp
mov
xor
addr16
mov
imul
in
xchg
dec
int
repz
lcall
xor
rcrb
cmp
test
loop
inc
cs
mov
add
shll
mov
ret
pop
xchg
xor
fwait
xchg
push
push
dec
add
addr16
scas
fidivrl
cmp
aaa
popf
data16
ljmp
pushf
lds
stos
cmp
inc
and
jge
lret
pusha
repnz
shrl
ja
hlt
loopne
fwait
xor
fimull
cs
mov
shrb
mov
cmpsl
adc
mov
sbb
mov
popf
pusha
lret
push
fistps
jne
or
cltd
mov
and
shll
xor
cmpsl
push
lods
sahf
xor
or
gs
icebp
jns
arpl
stos
push
aaa
jae
adc
movsb
inc
xor
mov
mov
test
pushf
negl
mov
and
outsl
imul
sti
out
push
nop
int3
imul
sub
jl
stos
and
stos
mov
jbe
sti
and
cli
pop
inc
int3
ret
test
cld
ret
rorl
imul
dec
sub
or
fistpll
cs
adc
lock
out
mov
pop
aad
cmpsl
ja
sub
stos
pushf
mov
sub
and
les
adc
sub
cmp
rcll
or
aam
push
imul
outsl
push
cmc
dec
cltd
aaa
ja
scas
or
cli
pop
mov
repnz
sub
js
cmp
scas
jmp
cmp
dec
ljmp
sub
out
adc
mov
shlb
ret
test
repz
stc
mov
nop
mov
jne
enter
lret
outsb
pushf
into
sbb
and
add
mov
cmp
xchg
lods
inc
fcoml
xorb
mov
in
inc
lcall
mov
pop
stos
push
pusha
shr
rorb
sbb
pop
subl
adc
push
sbb
fwait
jge
pop
sub
dec
mov
pop
lock
xor
mov
jmp
jns
rclb
inc
int
loop
add
xor
push
mov
outsb
xlat
jmp
jae
xor
movsb
xchg
add
ret
out
mov
push
pop
cmp
int
and
fistps
push
aaa
push
push
push
rolb
and
jne
imul
cmc
popa
jnp
push
inc
insb
repnz
pushf
xor
sbb
xchg
aam
addl
or
mov
jnp
stos
adc
ficoml
movsl
dec
sub
lds
cmp
push
pop
xchg
cmp
inc
popf
scas
out
mov
out
movsb
adc
inc
pop
xchg
and
testb
ret
insb
xor
movsb
jg
jb,pt
rorb
cmpl
and
std
sti
enter
xchg
mov
adc
xchg
ret
cwtl
pmulhw
push
push
cmp
cmp
test
arpl
ret
jne
mov
ret
jo
inc
xchg
arpl
aas
xor
pop
sahf
sbb
das
pusha
call
repnz
nop
test
adc
push
leave
mov
pop
std
lret
popf
push
mov
mov
or
sbb
mov
loope
std
mov
mov
push
mov
icebp
les
gs
imull
add
push
dec
sub
push
cmp
fisubs
mov
adc
mov
mov
mov
shlb
das
mov
clc
lahf
lds
sbb
cmp
imul
arpl
xor
inc
fdivrl
xchg
or
fwait
lret
jbe
xchg
add
cmpsb
jbe
stc
fcoms
jmp
into
jae
sbb
sub
and
cmp
mov
test
add
shll
shl
lret
push
sub
adc
out
outsl
inc
sbb
iret
rol
fisubs
jb
insl
pop
rorb
dec
dec
cmp
pusha
test
hlt
mov
out
xlat
mov
loope
lods
insb
push
out
jbe
fsubs
lea
scas
adcb
pop
or
dec
in
sub
push
jb
pop
cmp
lret
rcr
test
jg
call
adc
fists
insb
stc
and
out
lds
pop
push
int3
imul
pop
scas
ljmp
ficoml
mov
adc
pop
in
lods
sbb
ss
inc
jle
cltd
test
push
test
stos
add
cmp
sti
xor
lret
cmpsl
or
in
idivb
shlb
jg
leave
filds
repnz
fs
in
mov
mov
cmpsl
jecxz,pt
inc
xchg
js
sbb
negl
popf
in
cmp
das
repz
xchg
sbb
loope
enter
push
cwtl
loop
xor
pushf
mov
jp
jmp
fbld
inc
fldenv
int
sbb
gs
inc
mov
testl
aaa
push
push
dec
in
int
jae
xlat
mov
jl
cmpsl
outsb
push
test
into
sub
lock
pop
in
and
mov
sarb
xor
cmp
repz
mov
js
dec
out
mov
push
icebp
push
mov
mov
cmpsl
js
movsl
dec
pushf
cmp
cmp
mov
or
sbb
or
loop
pop
loop
inc
xchg
xchg
pop
inc
and
xchg
imul
jle
push
imul
adc
or
and
loopne
mov
movsb
push
cld
in
fcoml
jp
leave
ficomps
add
lea
sahf
shl
data16
xor
shrl
test
lds
stos
test
out
jecxz
dec
mov
jl
cmp
hlt
mov
into
jecxz
cmpl
push
hlt
inc
inc
sub
jmp
adcl
js
push
scas
data16
dec
xchg
rcl
jp
pop
jae
cltd
insl
push
sahf
pop
hlt
ret
sbb
xchg
incl
out
jae
scas
lcall
bound
lret
ret
std
xlat
jmp
popf
push
xor
aas
aaa
pushl
out
les
adc
lret
xchg
lcall
push
call
cmp
dec
jnp
insl
cs
leave
stos
clc
dec
mov
xorb
lcall
fcmovnb
mov
xor
stos
xchg
jno
and
sub
pop
fwait
dec
outsl
xor
lock
ds
mov
int
push
xchg
fildl
cmc
call
dec
add
fisttps
mov
into
out
dec
push
mov
sbb
movsl
sub
cltd
insb
mov
outsl
je
outsl
mov
je
mov
fwait
jnp
and
inc
dec
into
pop
xor
xor
ljmp
insb
fcmovnb
adc
icebp
sbb
mov
stos
daa
jns
loop
mov
adc
stos
push
mov
loope
test
loopne
mov
dec
pushf
cmp
jmp
pop
add
lahf
daa
stos
sbb
mov
outsb
jae
shrl
sti
lea
add
lock
push
lret
sbb
sub
ror
fisttps
aam
add
mov
idivl
jno
ds
push
mov
bound
jae
dec
cmp
xor
add
iret
stos
jg
popa
jecxz
add
data16
in
insl
addr16
lret
int
mov
inc
loope
idivl
repz
inc
out
or
push
push
jg
jae
and
in
push
cmp
movsb
mov
imul
repz
cmpsb
mov
sti
inc
fcomps
cmp
in
mov
mov
test
xor
jp
push
xor
pop
adc
push
xor
adc
xchg
pusha
into
imul
cmc
in
sti
and
std
dec
cmp
sbb
inc
dec
int
cmp
jmp
adc
pop
xchg
out
ror
fdivr
mov
dec
insl
enter
js
stos
pop
cwtl
fbld
jg
mov
ljmp
test
cmp
loop
mov
sbb
out
jo
mov
pop
inc
pusha
mov
inc
testb
out
fbstp
mov
cltd
out
xor
push
mov
and
push
xor
jo
sti
push
lret
fdivl
test
push
int3
xchg
jnp
mov
sub
dec
jb
and
mov
xchg
pop
cmpsl
popf
mov
out
xor
in
pushf
aad
add
ja
add
inc
and
loope
xorl
test
pop
mov
cli
mov
pop
testl
rcll
inc
std
js
es
sahf
es
xchg
in
or
xchg
pop
or
xlat
add
sub
inc
add
mov
sbb
cmp
dec
sbb
test
in
ret
mov
cmp
mov
cmpsl
add
insl
mov
or
jge
jecxz
cmp
add
xlat
gs
jl
or
mov
pop
or
cmp
int
arpl
cld
xlat
xor
fisubl
mov
test
daa
xlat
mov
jp
cmp
jo
das
cmp
xchg
lcall
dec
sahf
mov
cmp
mov
movsl
mov
pop
int3
pop
lcall
jae
rcrb
jp
jbe
inc
pop
add
jle
in
das
lock
movsl
xchg
sub
lahf
cmp
adc
test
cli
js
or
jno
icebp
jmp
clc
sti
or
sbbl
jmp
into
xchg
inc
lds
movsl
or
mov
inc
fstl
js
mov
add
repz
inc
sub
fcompl
cli
lods
mov
loopne
clc
test
add
and
mov
fimuls
stos
lret
cli
xchg
mov
cli
ljmp
dec
fmull
inc
xor
or
and
sbb
ret
ja
mov
cmp
fst
daa
mov
mov
mov
out
jb
pop
das
lods
dec
repnz
jb
mov
sti
sub
leave
fists
leave
fildl
or
mov
stc
fists
mov
out
jg
pusha
rcl
mov
push
cmp
mov
cmpsb
icebp
and
data16
push
lahf
daa
mov
xchg
or
sahf
mov
cltd
popa
xor
rcl
mov
rcl
fs
sbb
shl
jnp
test
arpl
icebp
add
in
push
add
push
add
cmp
enter
xor
dec
rcrl
loop
cmp
mov
scas
aad
out
std
sbb
jmp
dec
test
xchg
jb
sti
push
mov
push
pop
xor
out
ds
jo
jecxz
mov
sub
dec
xor
pop
out
bound
mov
in
fcoms
and
sbb
mov
fs
addl
ja
dec
stos
dec
test
jmp
lea
push
das
sbb
jne
fs
repz
lds
adc
jo
dec
lcall
cmp
insb
pop
insb
rorb
or
test
lret
jle
bnd
in
mov
mov
gs
out
xor
cmp
jl
xchg
insl
rclb
aaa
dec
idivl
stos
push
and
jle
sti
xchg
mov
add
loope
mov
outsl
hlt
add
mov
out
shl
out
mov
daa
mov
push
cmpb
lock
ja
push
push
out
mov
jl
rolb
subl
sub
mov
pusha
mov
cs
adc
inc
rclb
mov
cmp
or
add
inc
in
fisubl
out
lods
jle
hlt
pushf
mov
xor
rorl
out
pop
movsb
mov
xchg
inc
xchg
jmp
icebp
and
mov
pusha
std
in
mov
fstpl
orl
push
das
call
jnp
xchg
fidivs
movsb
push
rorb
mov
add
int
mov
pop
pop
cmpsb
mov
scas
cmp
loop
jnp
sub
jg
rcll
data16
sbbb
mov
jns
fwait
punpckhbw
sbb
aaa
jae
fs
mov
xlat
stc
jns
lahf
outsl
mov
sbbb
in
cmpsb
cmp
stos
jnp
mov
xchg
aaa
push
jnp
jle
icebp
nop
in
pause
je
adc
jp
pop
jle
fs
xchg
jae
xchg
fdivs
add
scas
nop
daa
mov
jl
adc
test
testb
cmpsl
jg
add
mov
push
das
rcl
dec
sub
cmp
mov
dec
and
dec
aad
test
mov
fsubr
cmp
push
ja
push
sub
cmp
clc
xor
icebp
insl
mov
sub
test
aad
repnz
insl
rolb
jbe
xor
pop
int3
jb
dec
inc
or
inc
imul
xor
sbb
adc
shrb
mov
pop
nop
mov
sbb
jg
addl
clc
shrl
fs
enter
or
cmp
xchg
cli
jecxz
mov
das
and
ret
mov
push
je
cmp
pop
adc
sbb
stos
mov
dec
push
xor
clc
and
aaa
ficomps
inc
xor
rorb
popl
je
mov
div
sbbb
test
xchg
hlt
cmovbe
imul
je
es
cmpl
loopne
adc
push
jle
xlat
xchg
jecxz
sbb
dec
push
int3
mov
sub
test
dec
push
testb
mov
or
outsb
xchg
out
mov
mov
jmp
iret
or
outsb
dec
cltd
and
mov
imul
ljmp
mov
adc
ljmp
into
dec
xchg
int3
or
add
cmp
mov
cltd
aaa
mov
out
xlat
cmp
xor
mov
pop
ljmp
out
mov
cmp
or
mov
sub
mov
add
repz
cmp
aaa
add
fwait
fwait
cmpsl
pushf
lock
aad
imul
jl
push
loope
pop
and
adc
aam
aas
jbe
add
and
andb
mov
push
lahf
pop
jmp
aam
fwait
xor
fisubrs
stos
push
rorl
fbstp
add
cmpsl
add
mov
imul
push
imul
pop
dec
mov
rclb
sahf
mov
clc
adc
push
jbe
xor
adc
mov
iret
mov
das
test
mov
in
sub
insl
enter
adc
xchg
or
push
cltd
sbb
hlt
mov
outsl
lea
jns
outsl
movsl
fsubrs
iret
cmp
lret
sub
push
rcrb
or
stc
addr16
out
stos
lds
ss
push
sti
inc
test
in
cmp
jge
xor
mov
ds
lahf
pop
in
je
mov
push
rcrl
jmp
inc
imul
push
insl
push
enter
popa
ljmp
jl
fldcw
mov
cmp
push
sub
inc
or
cwtl
cltd
loop
js
jbe
cmp
cmp
iret
push
outsb
dec
sbbb
mov
es
adc
mov
test
out
mov
lods
inc
into
in
fists
es
mov
xchg
and
push
jae
mov
addb
outsb
ror
push
sub
mov
mov
adcb
jp
sarb
sub
or
jo
clc
xchg
mov
xchg
xchg
mov
cmpsb
pop
sbb
xor
lock
and
jp
fldt
andl
js
loope
loope
mov
int
fcompl
jl
push
adc
mov
and
leave
lea
dec
cmpsl
or
jne
icebp
inc
push
in
rcrb
lods
or
in
fildll
push
outsb
hlt
xchg
push
xor
pop
outsb
lcall
in
cmp
xchg
dec
enter
mov
int
sbb
xchg
repnz
jae
jmp
mov
shr
stos
in
add
cmp
adc
and
in
test
jg
mov
bound
pop
sti
mov
sbb
jae
cmp
iret
sbb
jbe
dec
fstps
mov
dec
fs
andl
sub
lret
add
fst
push
popa
es
cmp
aas
mov
scas
stos
cld
mov
test
adcb
pop
pop
cmp
mov
mulb
aam
add
loopne
scas
shll
mov
mov
rcll
jl
jne
or
orb
mov
sub
cmc
movsl
mov
sbb
mov
aad
mov
pop
mov
lret
std
push
rcrb
dec
cmp
mov
inc
jns
repnz
pop
xchg
stos
jno
adc
sbb
shlb
cmpsl
int
fisubrs
aad
lea
and
std
in
pushf
push
pop
movsl
dec
xchg
inc
push
in
xchg
push
xchg
sbb
stos
mov
pop
int
sub
mov
in
mov
jbe
sbb
add
jecxz
lret
add
sub
lret
pop
ffreep
dec
jns
ret
fists
jg
mov
aad
adcb
movsb
aad
fcomi
ret
add
sbb
enter
mov
arpl
fbstp
add
mov
rcll
and
pusha
in
enter
dec
jp
rclb
test
popa
adc
aaa
lods
fwait
mov
inc
shr
daa
je
cmp
sbb
pushf
or
jl
and
add
punpcklwd
int3
arpl
fldl
jnp
sbb
mov
rorl
repnz
test
jb
ds
mov
push
lret
bound
out
sbb
add
into
inc
xchg
dec
popa
lods
or
aam
nop
mov
sbb
jb
sub
mov
inc
fcmovbe
jp
mov
and
cmp
rorb
lock
lds
mov
int3
and
sti
repnz
inc
adc
dec
cs
flds
bound
cli
sub
push
sete
add
popa
sub
dec
push
rcr
xor
dec
push
mov
lock
pop
loop
inc
mov
repz
roll
in
sub
or
pop
rorb
and
stos
les
add
xor
test
mov
mov
sti
jmp
cs
inc
jns,pt
mov
dec
xchg
sbb
outsb
aas
xchg
pop
pop
mov
clc
out
jne
aas
imul
test
aaa
in
jmp
cmp
lahf
dec
imul
mov
adc
or
sbb
jmp
mov
and
add
call
out
cmpsb
xor
ja
mov
jb
push
rol
mov
add
incl
popf
daa
lea
icebp
movsb
lods
adc
test
push
in
xchg
xorb
lret
pop
inc
or
sbb
sub
les
push
fldcw
mov
mov
aad
lock
cwtl
inc
fiadds
leave
pop
push
mov
push
add
test
test
rolb
mov
es
int3
adc
jecxz
jp
out
mov
clc
cmp
fidivs
sub
inc
jg
push
add
and
idivl
repnz
ret
dec
mov
int3
push
add
fdivl
add
mov
push
cwtl
pop
gs
lea
in
icebp
sub
lcall
mov
in
or
adc
pop
lea
mov
in
dec
push
repz
xchg
cmp
pop
int3
ss
mov
push
jmp
cli
pop
add
mov
push
aas
mov
add
test
icebp
pop
cmp
push
pop
sub
je
aad
fiaddl
hlt
pop
pushf
jns
jl
mov
mov
adc
xchg
hlt
adc
rclb
adc
cmpsl
inc
insb
lea
jmp
adc
mov
sti
push
sarb
dec
xor
into
or
mov
sahf
xor
xchg
jnp
push
xchg
mov
and
dec
std
pushf
std
jo
jp
mov
stos
shr
jle
pop
std
fs
xchg
es
test
pop
lcall
push
cli
outsl
fstps
cmc
add
lds
pop
mov
mov
out
pop
popa
call
clc
dec
test
cmp
jmp
loop
sbb
pop
and
pop
mov
test
mov
xor
das
jge
push
pop
and
mov
les
jbe
adcl
mov
push
add
dec
sbb
push
xchg
jb
or
notb
push
push
sti
xlat
mov
or
adc
dec
push
je
xchg
dec
mov
push
inc
or
cmp
pop
imull
and
jae
clc
inc
inc
outsl
insl
mov
xchg
and
add
and
push
out
das
out
popf
in
sbb
cmp
fisttps
push
stos
xor
lods
mov
fisubrl
sub
hlt
loop
je
jae
hlt
call
dec
lcall
mov
mov
mov
mov
je
shrl
in
mov
psrad
mov
mov
jp
pop
leave
repnz
mov
adc
add
cmp
rcll
ja
repz
sbb
outsl
sub
shll
cmpsb
pusha
fmulp
fists
cmp
cmp
sbb
fs
insb
pop
jmp
nop
dec
mov
inc
insl
mov
sahf
fcomi
sub
adc
shr
outsb
cmp
dec
clc
fisttpl
lods
push
call
inc
rcl
jl
pop
xor
xor
push
xchg
daa
pop
mov
fisubrs
push
iret
rorb
in
hlt
sub
push
inc
pop
add
outsl
xchg
js
push
cmp
aad
adc
cld
outsb
mov
dec
orb
push
nop
sbb
in
insb
in
adc
or
pop
xchg
and
lahf
movsb
repz
pop
or
loop
repz
lods
popa
sbb
js
push
mov
mov
movsb
push
sub
sub
in
jmp
adc
add
icebp
clc
lock
add
inc
notl
sarb
push
int3
mov
mov
loopne
push
mov
lea
idivl
push
mov
push
jne
mov
dec
sahf
scas
mov
imul
jle
das
xor
xor
cmc
inc
insb
inc
iret
sub
dec
test
scas
inc
and
xchg
stos
mov
xchg
adc
into
mov
fmulp
sub
dec
or
adc
ret
xor
mov
dec
test
icebp
adc
loope
mov
xorl
xchg
mov
in
ret
fsubl
xlat
mov
loop
loop
enter
sub
push
mov
les
pop
and
lahf
movl
xchg
enter
shrb
inc
mov
frstor
ss
fnstenv
cmpsl
mov
lret
pop
pop
mov
jbe
push
fisubrl
std
sub
mulps
lods
jne
mov
rcl
push
loop
jnp
pop
lods
roll
dec
mov
dec
jo
orl
xor
inc
fwait
test
or
jmp
stos
mov
ret
imul
xchg
sti
push
mov
je
lock
wrmsr
lock
push
aaa
adc
fs
xor
fcompl
or
push
test
mov
cmc
nop
inc
shlb
and
fdivs
inc
pushf
inc
inc
mov
ret
pop
inc
dec
mov
jnp
sahf
scas
xchg
inc
sti
dec
lcall
hlt
mov
stc
jo
cs
jmp
dec
jecxz
pop
test
nop
movsb
xchg
pop
pop
mov
push
sbbb
push
push
shll
aaa
jecxz
cmpl
ss
sub
hlt
pop
insl
cmp
jmp
push
sbb
pop
repz
add
inc
add
in
lods
or
daa
sub
addb
adc
lods
mov
push
lds
mov
push
shll
pop
cmp
jae
jo
xchg
data16
mov
dec
sbb
lcall
les
es
cmp
fistpl
sub
xchg
cs
sub
jne
popa
add
push
pause
jge
fs
aaa
stc
dec
aam
adc
cmpl
cmc
sbb
in
xor
add
add
push
pop
enter
dec
mov
bound
stos
push
pmuludq
mov
dec
sub
mov
jbe
or
mov
jle
dec
fdivr
cwtl
cmpsl
pushf
and
out
add
outsb
cwtl
and
fimull
dec
and
cmpsl
cmp
sbb
cmpsb
mov
stos
add
movsl
sbb
movsb
jo
imul
test
mov
mov
push
add
lahf
lret
xor
outsb
sub
mov
cmpsb
addb
push
mov
aaa
insl
push
add
cmpsb
out
scas
push
test
imul
lret
addb
add
icebp
test
pop
or
std
fisttpl
add
jo
bound
pop
fldt
stos
xor
scas
in
xor
scas
aad
dec
std
mov
ds
mov
ljmp
xchg
in
das
out
mov
test
sti
or
lret
out
stos
insb
shrb
jns
push
out
adc
mov
add
cs
fnstcw
push
scas
pop
and
pop
incl
jbe
pusha
pushf
pop
dec
fstpt
out
sbb
mov
ss
jno
jbe
jg
test
pusha
xor
dec
xchg
sbb
cmp
aad
outsb
nop
push
adc
out
mov
push
aaa
lahf
test
or
sbb
test
dec
lea
icebp
push
mov
sub
and
lcall
loopne
cmp
jo
push
mov
mov
mov
dec
jno
dec
aam
mov
push
dec
cmp
test
mov
idivb
mov
push
addb
shrb
adc
mov
lods
lahf
xchg
fildl
std
stos
and
ret
jbe
inc
xchg
in
in
push
xor
lock
pushf
movsb
push
pushf
xchg
sub
push
cmp
mov
pop
mov
arpl
mov
mov
ja
stc
inc
push
push
daa
mull
cmpsb
push
push
or
and
inc
push
cld
lret
dec
pop
stos
aam
test
pop
pop
mov
push
cmp
xchg
fsts
jb
ss
jge
mov
loop
xchg
in
inc
cmp
adc
mov
orb
fcmovne
dec
mov
pop
pop
dec
add
lret
sbb
adc
aad
cmp
mov
aas
and
pop
dec
add
popa
mov
mov
jp
in
jmp
aaa
ret
in
jo
outsb
sub
jo
xor
and
or
out
testl
and
mov
mov
ds
out
out
repnz
testl
enter
mov
outsl
clc
dec
insb
cmp
xor
rorb
loop
imul
sbb
lret
sbb
or
dec
push
movsb
fistl
ret
cmpsl
imul
cmp
fistps
mov
jmp
dec
sahf
push
lea
jb
jl
add
sahf
or
sub
shr
xchg
push
dec
add
ret
repnz
mov
ja
cmp
sub
pop
sub
scas
mov
jbe
jmp
mov
jp
pop
sti
push
jne
insl
add
sub
sub
jae
adc
sub
push
jno
call
mov
jge
mov
mov
push
es
sbb
aaa
pushl
and
pop
sbb
pop
imull
neg
add
jbe
std
and
pushl
fadds
sbb
push
pop
sbb
mov
repnz
mov
enter
test
jbe
mov
sbb
int
rcrb
adc
arpl
rorb
psubq
sbb
stos
test
push
adcl
mov
ret
xor
cmp
xchg
pop
outsb
jecxz
or
inc
ja
aad
outsl
mov
mov
insb
xchg
jns
insb
mov
sbb
xorb
sub
pop
xchg
adc
push
jns
fimull
lea
sbb
sub
sbb
mov
dec
cmp
pop
jmp
mov
sbb
movsb
mov
cmp
mov
mov
xchg
ljmp
adc
nop
xchg
push
or
or
jge
push
mov
ja
xchg
mov
imul
xchg
loop
movsb
pop
imul
jne
mov
loope
and
xchg
mov
add
or
icebp
push
fisubrs
push
xor
sub
mov
in
inc
inc
add
inc
add
sub
push
xor
dec
or
addr16
mov
shlb
in
inc
clc
out
jns
and
push
sahf
xchg
push
mov
jecxz
icebp
icebp
cmp
dec
mov
test
sbbl
loop
mov
adc
subb
lods
and
or
pop
push
adc
out
js
cltd
inc
aaa
and
ret
or
xor
shlb
xor
add
stos
and
dec
dec
in
mov
dec
push
in
repnz
mov
cltd
stos
jno
shlb
aaa
cli
xlat
push
sbb
push
mov
lret
das
mov
bound
adc
into
insb
shlb
gs
xchg
mov
or
cli
stc
cmp
inc
inc
push
add
push
xor
sub
mov
leave
movsl
and
int
xchg
dec
and
lcall
loopne
xor
and
cltd
mov
pop
dec
mov
push
and
iret
bound
outsl
fildll
imul
and
jmp
mov
sub
and
jp
mov
xor
mov
shlb
pushf
cmp
fiaddl
stos
popf
shrl
jbe
aas
pusha
xor
mov
pop
inc
xchg
out
jne
push
mov
incb
inc
aas
cltd
push
sub
push
aam
xchg
push
add
push
xor
lahf
or
cmp
push
fs
ljmp
jnp
mov
in
ret
shrl
lock
pusha
outsb
cmp
xchg
jge
pop
adc
xchg
outsl
scas
popf
in
dec
cmp
out
add
aam
daa
mull
mov
es
xchg
mov
xlat
nop
pop
adc
shll
aad
and
and
pop
push
popa
sub
das
add
stos
or
xchg
ret
sub
addr16
sbb
sbb
das
adc
imul
rorl
fwait
pop
inc
test
outsl
pusha
sub
inc
sub
mov
insb
addl
out
pop
movsl
sbb
jo
jmp
push
or
int3
cmp
jbe
test
aaa
mov
test
mov
cli
mov
sti
push
mov
cmc
hlt
loop
mov
in
imul
clc
add
xor
and
adc
popa
pop
sub
or
pusha
sbb
dec
das
xchg
adc
add
orb
mov
cmp
fmuls
push
inc
ret
adc
sarb
mov
and
fistpll
addb
mov
xor
sub
push
data16
inc
cmp
jmp
xor
sub
fsts
call
aas
adc
ja
pushf
je
int
loop
push
mov
rcll
icebp
cmp
add
ja
xchg
inc
ljmp
sub
in
jge
clc
cmp
ret
push
mov
cli
push
sbb
icebp
ss
mov
dec
xchg
mov
and
aad
xchg
popa
cmp
cmp
or
gs
and
gs
mov
jno
xor
xchg
js
popf
or
jbe
daa
push
inc
xor
mov
xor
sbb
dec
push
dec
movsl
pop
pop
ret
neg
fnstenv
movsl
fs
mov
loop
mov
lcall
xlat
and
or
sbbb
dec
pop
and
or
cwtl
mov
notl
or
ret
jb
lods
das
push
xor
fwait
dec
pusha
mov
lock
lods
inc
xchg
int
dec
in
or
sbb
jo
icebp
dec
xchg
xchg
bnd
pusha
fstpt
add
push
cmpsb
shrb
shl
ret
loope
jae
out
mov
push
jo
xchg
mov
sbb
pushf
fsubrs
loopne
mov
mov
sub
xchg
into
or
adcb
mov
xorb
lret
aaa
rolb
jb
addl
adc
ds
mov
aaa
mov
xlat
stc
xorl
mov
push
xor
pop
imul
push
push
jmp
in
subl
dec
movsb
adc
popa
mov
jb
fwait
or
test
es
cmc
daa
jmp
lods
push
scas
mov
loope
xor
lret
out
mov
add
shrl
add
jp
out
push
in
adc
mov
mov
or
xchg
mov
mov
shlb
stc
rcr
rdmsr
jo
dec
sbb
xchg
adc
push
cmc
mov
test
mov
jb
test
sbb
push
fs
and
or
xor
call
xchg
data16
push
mov
dec
mov
mov
mov
add
mov
loope
dec
mov
in
mov
sahf
inc
pop
test
icebp
mov
mov
sub
insl
out
pop
insl
rcrl
outsb
fadds
mov
mov
in
hlt
xchg
pop
mov
mov
cs
fwait
gs
cli
adc
insl
lock
imul
cmpsl
and
fld1
int3
loop
leave
sbb
mov
pushf
stos
mov
and
mov
jbe
repnz
cwtl
jae
lret
inc
adc
ffree
mov
int
fdivrl
or
movsb
mov
sar
ljmp
add
adc
loopne
mov
cltd
mov
imull
pushf
arpl
push
std
cli
xchg
in
cs
pusha
ljmp
cld
aas
jmp
stc
add
shll
cmp
movsb
push
push
stos
xchg
movsb
ljmp
push
xchg
push
sbb
std
add
mov
mov
into
sbb
pop
rcrl
aas
imul
mov
cld
les
sbbl
cmc
ds
mov
adc
mov
lahf
add
inc
addr16
jbe
jo
outsb
cmp
bswap
aas
in
xchg
dec
push
negl
lods
push
mov
loopne
lahf
xchg
jmp
filds
pop
stc
sbb
arpl
orl
test
test
mov
sbb
pop
sahf
lods
pop
aad
push
pop
jno
and
mov
dec
shll
mov
xchg
cltd
ljmp
pop
lcall
icebp
fdivs
cmpsb
xchg
fsts
xchg
fwait
stos
push
mov
and
xchg
and
jae
out
mov
ret
jb
test
gs
fs
faddp
test
mov
push
mov
and
jle
jne
push
ds
arpl
gs
cwtl
lods
icebp
inc
add
jne
push
stc
xor
nop
loop
sbb
cmc
xchg
cmp
mov
je
rcl
mov
jns
add
xor
inc
mov
mov
push
stos
add
pop
imul
sbb
mov
push
inc
das
jl
in
and
pop
dec
and
xchg
leave
sbb
aaa
sbb
pusha
pop
mov
test
xchg
rcll
mov
test
je
pop
cmp
cli
mov
into
jmp
imul
lods
fimull
pop
push
inc
cmp
or
adc
repz
inc
jnp
je
mov
adc
je
repnz
ficoml
outsl
push
rcr
lods
cld
lret
sub
or
push
cli
aam
cmp
jbe
stos
mov
jge
mov
sub
imul
mov
outsl
xchg
jge
sub
pusha
ds
lret
cltd
jg
cwtl
fimull
cmp
lea
daa
rcll
pop
hlt
sahf
cmp
and
mov
pcmpeqd
dec
cmc
sbb
xor
sbb
ficoms
imull
pusha
insb
mov
pop
das
cwtl
or
inc
out
insb
mov
pop
xchg
aas
nop
test
sbb
cmp
mov
es
dec
push
mov
test
insl
ret
cmpsl
incl
inc
mov
xchg
dec
popa
xchg
ficoml
loope
out
xchg
stos
jp
push
shlb
and
scas
cltd
inc
lea
popf
push
adc
push
push
lock
sahf
test
xor
pushf
stos
sub
cwtl
adcb
popf
mov
mov
insl
inc
adc
sub
out
loope
mov
cli
mov
push
sub
std
jmp
mov
xchg
push
xorb
dec
sbb
daa
mov
popa
pop
into
mov
jo
sbb
fidivs
sbb
shlb
dec
in
cld
lods
adc
push
test
mov
add
cltd
mov
and
in
or
xchg
push
lret
mov
out
adcb
dec
xchg
std
into
roll
and
dec
or
ds
sbb
jecxz
imul
pop
mov
dec
xor
xor
dec
notl
out
sbb
mov
mov
scas
push
jecxz
sahf
outsb
sub
sbb
gs
mov
cmp
iret
cmpl
push
xorb
dec
pop
dec
pop
in
loopne
push
into
add
stos
fildl
imul
xchg
mov
fldcw
jbe
jmp
ja
mov
stos
pusha
mov
out
mov
dec
stc
xchg
dec
popf
and
mov
adc
pop
adc
jp
push
repz
sbb
or
jne
cmp
pop
insb
daa
scas
stos
imul
cmp
icebp
jg
insl
jg
lock
mov
test
fwait
loope
adc
testb
mov
bound
loopne
push
fidivl
push
mov
dec
adc
in
xor
insl
adc
pop
in
imul
call
cmp
push
pop
mov
adc
cli
repnz
xchg
adcb
inc
sub
and
int
or
jmp
rcrl
enter
xchg
ss
xlat
push
xor
xchg
xchg
jae
sub
add
aam
loope
movb
into
in
adc
lock
push
std
add
sahf
es
in
lcall
dec
test
cld
and
outsb
and
cs
cld
or
inc
mov
pop
xchg
push
rolb
and
add
popf
jmp
mov
mov
ja
and
push
fildl
or
jl
adcb
lret
xchg
jno
ja
cmpsl
hlt
ljmp
sbb
mov
dec
nop
push
sbb
cmp
fdivl
addl
jecxz
stc
adc
inc
push
sub
push
int
fbstp
jecxz
fmuls
fisttpl
aad
mov
pop
shll
inc
jmp
mov
and
sbb
cwtl
or
aas
pop
call
jb
cmp
ja
xor
sub
xor
dec
out
and
adc
movsb
enter
icebp
test
jne
pop
mov
stos
ljmp
rorb
sbb
cld
lock
in
inc
clc
add
cmp
loop
fimuls
sbb
ret
push
push
adc
leave
js
insl
dec
push
bound
iret
push
mov
sub
dec
fbstp
clc
mov
lock
addb
enter
pop
mov
inc
sbb
xchg
mov
test
lock
mov
inc
lea
push
adc
dec
psubw
mov
jno
out
loope
push
add
dec
fbstp
jbe
cld
xchg
aas
mov
mov
sbb
xchg
out
cmp
out
clc
jecxz
mov
mov
fstl
in
or
outsb
xchg
fisttpll
cmpsl
in
xchg
loop
jge
andl
in
aad
mov
push
dec
jge
pushf
push
cmp
xor
cld
adc
pusha
ja
pop
cwtl
mov
fwait
inc
into
fdivrl
movsl
std
adc
and
mov
push
push
xor
pushf
test
mov
adc
xchg
sarb
lods
fbld
and
jp
cmp
call
add
or
ret
test
pop
lahf
sahf
aad
repz
loopne
xor
es
dec
je
jg
xchg
jbe
dec
mov
add
push
push
and
arpl
add
ret
pop
xchg
xchg
in
lret
xor
mov
imulb
and
rorb
jp
cmp
out
add
loopne
aam
push
shl
or
xchg
inc
xchg
aaa
inc
jae
jecxz
or
sbb
lahf
add
test
ljmp
mov
adc
pop
xor
in
jno
int
in
xor
popf
jge
xlat
outsb
lret
and
push
fsubrl
or
or
iret
sbb
pop
adc
aam
cmpsb
bound
leave
mov
loopne
sbb
leave
cmpsb
fildl
daa
or
or
mov
loop
aad
stos
or
testb
std
add
loopw
sarl
adc
int3
cmp
lock
and
pop
ret
out
cmp
addl
pop
shrl
rcl
in
rclb
dec
shl
jno
ret
leave
es
movsb
nop
popf
mov
cld
sbb
jnp
test
dec
sub
outsl
test
push
pusha
mov
sub
ret
test
neg
movsb
adc
into
out
test
out
repnz
mov
sarb
push
xchg
stc
push
int3
repz
arpl
inc
sahf
jecxz
js
jle
mov
ret
dec
inc
mov
lds
xor
pop
mov
inc
dec
mov
sbb
add
sbb
aam
ss
negb
or
xorl
outsb
jmp
mov
decl
sub
ret
aaa
iret
pop
add
xchg
int
mov
mov
jbe
movsb
add
mov
mov
out
leave
mov
push
mov
xor
mov
sahf
rcrl
test
and
fists
sbb
pop
mov
dec
movsb
cmp
inc
or
xchg
xor
xchg
fcom
ret
sti
data16
or
push
inc
outsb
xor
xchg
add
mov
je
outsl
les
dec
jge
sti
cmp
add
jno
adc
loope
mov
dec
stos
xchg
add
ljmp
rorb
orl
mov
cmp
mov
adc
jno
das
cltd
pop
inc
cmp
in
pop
and
fisttps
lret
and
sar
mov
or
dec
into
adc
add
mov
and
mov
pop
jmp
pop
jmp
push
and
jo
and
add
mov
jg
jae
xor
ret
mov
out
sub
jl
sahf
andl
cs
in
mov
cwtl
mov
fucomip
sbb
stos
push
and
test
lcall
mov
dec
pop
fisubs
add
jo
adc
jns
adc
test
sbb
rorb
pop
pop
and
rolb
add
repnz
mov
shl
es
out
jle
std
mov
push
je
sub
sbb
push
outsl
and
mov
push
data16
add
sub
loop
lahf
mov
inc
push
or
data16
push
nop
xchg
stos
sub
ror
lods
jne
sahf
mov
nop
dec
add
loopne
aad
decl
je
je
test
cmp
and
stos
mov
in
or
cmp
adc
xor
xor
lea
fstp
mov
xchg
xchg
mov
sbb
out
rcll
jg
bnd
ss
out
jmp
xchg
mov
subl
pop
mov
push
sub
mov
loop
hlt
je
fiaddl
je
jb
outsb
jb
popa
call
xchg
cmp
add
insb
in
xchg
sti
icebp
movsb
and
mov
xor
movsl
or
jo
adc
mov
push
aaa
push
dec
push
sahf
jecxz
push
push
and
jo
int3
fwait
mov
push
jl
into
cmp
sbb
sub
sbb
jle
aad
pop
adc
dec
and
mov
dec
mov
sbb
lret
push
pop
negb
aad
xchg
rolb
jmp
push
cld
xor
rorl
push
pushf
mov
add
mov
es
inc
test
lock
jne
ret
lcall
pop
test
pop
mov
jbe
shrl
adc
mov
mov
inc
jge
dec
and
pop
fucom
push
inc
push
lahf
lea
ds
cmp
sub
aam
cli
jl
and
aad
stos
or
inc
int3
clc
andb
dec
ja
js
leave
outsl
pop
mov
ds
pop
fisttps
sahf
test
mov
test
sahf
xor
dec
pop
sub
rcrb
imul
mov
inc
sbb
icebp
frstor
jns
fwait
mov
jl
pop
push
pop
lods
std
push
inc
cli
aad
call
fnstcw
aam
pop
xchg
xchg
xor
jge
cmp
dec
shlb
repnz
mov
dec
clc
mov
cmp
push
jle
add
aam
push
push
testl
sub
popa
mov
cld
dec
xor
into
add
pop
test
push
or
xchg
pop
mov
loopne
mull
xchg
xlat
lret
dec
and
pop
nop
mov
push
cltd
daa
jns
jb
and
fisttpl
and
je
add
daa
lds
push
pop
inc
out
aas
nop
sbb
ds
inc
sub
inc
mov
in
mov
sub
loope
cwtl
lret
sub
mov
push
outsb
push
push
lods
sbb
out
push
pop
sahf
repnz
insl
mov
sarb
jecxz
mov
int3
sbb
lret
sarb
inc
mov
pop
mov
adc
nop
cmc
mov
lock
insb
test
add
popa
mov
sub
jl
xchg
lock
and
pop
fcoms
and
jge
mov
adc
iret
int3
cltd
xor
stc
push
inc
aam
mov
xchg
loopne
jnp
pop
in
pop
and
sub
ds
dec
add
jnp
ficompl
sbb
add
cmp
lret
mov
cld
jb
sub
xchg
insl
cwtl
jns
inc
cmpsb
cltd
xchg
ljmp
and
xor
jmp
mov
jmp
xchg
jnp
sub
dec
pushf
inc
stos
jle
cmpsb
inc
mov
pop
or
es
lcall
mov
lret
roll
movsl
pop
jp
imulb
lods
movsl
stos
lock
push
push
int
mov
int3
scas
ret
inc
xchg
mov
mov
outsb
int
mov
add
mov
sbb
fidivrl
lock
cmp
adc
xchg
pop
in
mov
cs
test
and
xchg
xchg
jnp
das
sub
push
cld
scas
cmp
shll
scas
dec
sub
pop
loopne
fs
pop
lret
mov
mov
inc
stos
add
mov
xlat
stos
or
mov
shr
test
cltd
cmpsb
ja
adc
mov
xchg
aas
sti
loop
stos
fwait
lock
lahf
lcall
insl
out
testb
push
pop
push
add
xchg
ficompl
in
stos
ret
mov
mov
mov
out
dec
cmp
adc
push
push
mov
fs
inc
ljmp
test
push
inc
pop
inc
aas
addr16
cltd
rcrb
xchg
fdiv
push
mov
adc
jns
add
repz
das
jle
fdiv
sbb
push
sbb
pushf
das
cld
and
into
cmp
or
rcll
mov
add
pop
ljmp
lahf
pop
or
inc
cmp
cmp
push
jmp
loop,pt
lds
les
xor
push
mov
mov
out
icebp
xchg
ja
dec
sub
mov
pop
or
inc
mov
dec
repnz
sti
dec
mov
mov
or
dec
mov
add
mov
adc
push
sub
xor
aaa
inc
or
xor
test
jno
in
lock
adc
stos
je
add
shrl
es
imul
sbb
jae
ret
pop
fisubl
cli
bound
xchg
enter
aaa
popa
pop
dec
push
dec
ret
cmp
xchg
repz
jne
and
inc
xor
jp
fldt
insb
gs
test
sub
adc
add
sbb
pop
bound
test
cmpsl
mov
push
inc
or
out
jge
loope
sbb
stos
outsl
dec
clc
int
mov
jnp
add
rcrb
sub
ss
mov
push
add
or
imul
xchg
fidivs
jno
movq
in
sarl
cmp
aad
jo
je
test
lret
fucomp
pop
stc
and
inc
loopne
clc
inc
jae
and
imul
inc
shl
dec
lret
push
sti
roll
pop
push
roll
rcrb
jns
xchg
enter
jo
mov
icebp
out
iret
push
dec
mov
cmp
stos
sbb
inc
xchg
repz
inc
mov
xchg
pop
ljmp
stc
jmp
sahf
cltd
mov
dec
aam
push
adc
movsb
fbstp
push
sbb
xor
cmp
iret
jo
sarl
daa
orl
test
and
data16
sub
jl
gs
or
mov
jbe
dec
jae
xchg
cmpsl
cld
clc
sub
and
add
rolb
xchg
jbe
in
hlt
push
sahf
aam
je
rcrl
dec
push
xor
jae
push
sub
mov
notl
iret
cltd
aas
fmull
mov
shll
scas
fmuls
outsl
dec
daa
aam
movsb
xchg
ja
movsb
adc
xchg
adc
sub
xor
mov
inc
fiaddl
out
pop
cmp
xchg
out
imul
push
jge
mov
je
in
pushf
xchg
sbb
movsb
pop
push
or
dec
xor
mov
cmp
stos
mov
mov
out
lahf
sbb
xchg
and
xlat
cli
pop
fwait
xor
fs
std
or
loop
loopne
in
cwtl
iret
push
aas
and
outsb
push
and
aas
or
in
sbb
push
nop
mov
mov
shlb
push
and
insl
fisubl
in
mov
adc
ss
mov
popf
xor
or
out
fsubs
pushf
sbb
sbb
dec
in
test
movsb
cmp
xchg
mov
cmp
xchg
mov
jp
fs
xlat
fdivrs
fistpll
inc
inc
cwtl
push
ret
insl
jp
inc
movsl
push
cmpsb
mov
push
stos
mov
inc
and
test
lods
nop
inc
mov
adc
fdivs
idivl
bound
lret
leave
and
stc
inc
inc
cltd
jno
shl
sahf
push
inc
mov
mov
or
add
subb
add
loop
inc
jl
lea
jae
push
popa
sbb
sbb
pop
push
add
cmpl
mov
inc
ret
mov
test
cmp
imul
push
cmp
fprem1
jmp
mov
mov
push
stos
push
add
mov
out
out
addr16
das
inc
pop
or
xchg
xlat
push
sbb
int
gs
pop
xlat
lahf
movsb
xchg
iret
cmp
cmp
pop
sub
rclb
fnstcw
clc
mov
xchg
and
out
int
dec
ljmp
sbb
pusha
lret
sub
roll
sbb
punpckldq
cmp
aas
test
mov
mov
lock
cmp
pop
sub
jns
imul
push
mov
imul
and
fimull
out
push
xchg
nop
push
mov
ret
push
stc
insb
mov
pusha
fldcw
mov
fiaddl
outsl
mov
popa
mov
cmp
and
mov
sub
mov
pop
mov
rcr
insl
pop
sbb
pop
scas
xor
mov
mov
sub
jne
push
vunpcklps
test
mov
or
xchg
pop
outsl
pop
cmp
out
stc
adc
leave
out
dec
cmpsb
cli
iret
jmp
mov
adc
push
mov
adc
mov
pusha
ja
pop
mov
sbbl
fwait
and
xchg
xchg
xchg
push
inc
or
pop
test
insb
xchg
push
push
pop
sub
mov
pop
and
adc
ja
movsb
negl
sahf
ljmp
sbb
mov
aaa
movsl
addr16
fwait
xor
fidivrl
jle
in
lret
test
scas
xor
mov
popa
sbb
sbb
inc
inc
je
cmpsl
je
push
and
testb
addb
sbb
jb
cmpsl
iret
jne
xor
dec
pand
lret
movsl
int
lret
mov
sub
icebp
popa
hlt
xor
test
and
gs
cmp
fdivrs
bound
das
outsb
repz
cmp
xchg
dec
lods
pop
addl
pop
adc
cli
add
fisubrs
in
mov
push
push
ffree
shl
add
fildll
and
js
dec
mov
lcall
mov
xchg
daa
sbb
cmp
jae
xor
cmp
add
iret
mov
xchg
pop
pop
pop
cli
lods
scas
and
insl
into
add
push
leave
cmp
pop
out
ror
imul
and
jl
mov
push
orb
add
shlb
or
fsubs
xchg
push
xor
xchg
mov
mov
add
mov
xor
dec
fmuls
xchg
and
popa
jle
cli
scas
pop
mov
cmpsb
dec
jg
or
mov
xchg
fldcw
pop
data16
and
cmp
rcl
loop
mov
aas
sub
jmp
mov
inc
pop
mov
xorb
pop
pop
add
mov
jmp
fsubrs
mov
push
int3
and
mov
mov
fldl
jb
add
fstpt
jo
das
mov
adc
or
dec
orb
scas
rorb
sbb
decb
adc
ja
jle
gs
adc
test
adc
jg
jnp
cmpsl
in
dec
mov
cld
and
mov
aad
xor
pop
pop
andl
repnz
xor
inc
adc
add
mov
sub
and
cmp
and
clc
mov
daa
pop
je
jg
cmp
dec
test
mov
fsubrl
mov
jmp
mov
rcrl
mov
pop
jno
loope
mov
repnz
push
sub
aam
and
in
jbe
mov
test
adc
mov
movsl
xchg
xor
mov
popf
dec
inc
mov
adc
out
push
pushf
mov
loopne
ja
in
xor
xchg
mov
or
mov
and
sti
out
arpl
clc
sub
push
xchg
ret
sbb
xor
out
dec
rorb
pop
mov
test
addl
mov
test
adc
and
pop
shrl
mov
mov
ljmp
mov
push
dec
mov
jns
cwtl
aad
movsb
push
jmp
push
fisubrs
dec
xchg
xchg
int
mov
sub
lods
push
jae
das
push
adc
cld
pop
andb
mov
sub
nop
inc
push
lds
or
sbb
sbb
psrld
xlat
fbstp
je
cmpsb
in
pop
and
or
dec
sbb
roll
mov
pop
inc
inc
mov
in
xchg
mov
in
sbb
jle
mov
out
mov
pop
ljmp
mov
push
cmp
mov
out
xchg
push
clc
sub
sbb
cmpsl
pop
dec
mov
jb
mov
sarb
in
mov
push
jno
sbb
test
dec
movsl
loopne
rclb
fs
cld
xchg
push
mov
or
xchg
xchg
fbstp
shr
add
ret
ss
ljmp
xchg
or
stos
and
outsb
xchg
pop
int
push
popl
mov
and
ja
fwait
mov
hlt
in
out
mov
test
loope
fwait
mov
and
dec
mov
cmpsl
imul
imul
cmp
sub
adc
jp
xchg
xor
xchg
rcl
sbb
rolb
jbe
pop
sub
adc
es
pop
repnz
cmp
adc
mov
xchg
cs
es
dec
cmpsl
dec
and
lahf
inc
ds
adc
cmpsl
push
rorb
fisubrl
jmp
push
jle
cmp
mov
les
outsl
movsl
inc
add
adc
scas
pusha
adc
jp
jmp
ret
cli
lods
jnp
adc
pushf
imul
xchg
ret
pop
cmp
aam
xchg
and
mov
cmp
fcompl
mov
mov
daa
or
outsb
fmul
sbb
and
inc
adc
cli
icebp
mov
add
cmp
stos
loop
pop
mov
mov
jmp
mov
sahf
dec
std
inc
push
js
xor
and
les
push
iret
fs
dec
ret
xchg
adc
jae
mov
xor
xor
inc
push
xchg
cmp
movsb
cmp
lock
inc
xchg
jmp
sub
or
dec
dec
pop
jp
fcomp
std
inc
scas
sbb
mov
or
dec
or
popa
and
and
cli
nop
outsb
int
sub
stc
dec
sub
scas
jno
popf
jb
mov
jno
out
in
outsb
jb
add
add
pop
daa
xchg
mov
and
iret
adc
push
xchg
and
xor
repnz
addr16
cmp
ficoml
into
push
mov
inc
sub
jmp
push
mov
dec
mov
mov
test
popf
pop
ds
cmp
sti
notb
sub
mov
rcrl
movsl
pop
xchg
and
push
cmpl
ljmp
push
jge
int3
inc
and
cmp
mov
mov
dec
xchg
into
clc
insb
bswap
flds
rcll
mov
mov
data16
hlt
pop
fwait
in
add
lcall
aaa
stos
sbb
mov
pusha
mov
rolb
jae
das
or
cltd
ffreep
push
push
popf
fsubrl
call
mov
std
scas
xor
pusha
adc
mov
mov
shrb
dec
xchg
jae
call
into
lods
std
sbb
ror
ja
pop
jns
ljmp
mov
jmp
sbb
xor
mov
or
ljmp
push
pop
hlt
gs
xrelease
dec
loopne
mov
daa
fbld
iret
mov
xlat
xchg
movsb
repz
dec
enter
sub
mov
pusha
xor
rolb
outsb
shlb
movsb
cmpsl
lods
shl
scas
push
dec
ljmp
push
sbb
sbb
mov
lea
mov
cmp
add
lods
in
pushf
mov
cmp
inc
repz
dec
fimuls
fidivs
dec
jmp
inc
pushf
mov
mov
push
imul
xchg
outsl
mov
aas
xor
xchg
jge
sbb
imul
pop
sub
and
lahf
incb
mov
mov
jb
jo
sub
and
push
xchg
and
aam
insl
rorl
stos
cmc
aam
add
fcomps
cmp
lods
inc
jp
pop
and
cmp
mov
cmp
fisubl
mov
jns
or
jmp
push
pop
repnz
xchg
and
fisubrs
dec
inc
roll
out
clc
jl
popf
std
cmp
jne
jb
pop
or
mov
outsb
push
push
pusha
roll
sti
xor
mov
add
xchg
jns
sbbl
and
sub
add
jp
push
imul
push
sbb
add
icebp
fs
inc
lcall
add
pop
cli
enter
mov
or
or
cltd
cwtl
out
test
insb
pop
insl
stos
mov
mov
adc
xchg
clc
fsubrs
bound
dec
repz
pusha
dec
push
sub
cmp
dec
lret
xor
jmp
add
fidivl
xchg
xchg
xchg
insb
outsb
jecxz
mov
insb
and
movsb
or
test
fmull
out
add
and
add
fiadds
jno
mov
ret
lods
sbb
jle
xchg
pop
ds
mov
test
xchg
mov
cmp
sub
pop
dec
addr16
lods
and
sbb
jno
popa
or
imul
fnstenv
mov
daa
adc
pushf
cs
jno
xlat
mov
push
jnp
mov
jl
push
mov
movsb
push
je
sar
push
jb
xor
jmp
lret
mov
scas
insl
push
mov
and
xor
inc
xor
aaa
in
idivb
arpl
xorl
xor
call
testl
popa
mov
repz
inc
jecxz
xor
pop
pop
dec
leave
xchg
cmp
mov
xor
or
andl
leave
cmc
sub
cli
incl
inc
ds
and
fisttpll
lret
movsl
xchg
jecxz
xchg
mov
pop
fcoms
jp
push
shrb
jge
xchg
cmp
popa
and
xor
and
add
out
bound
in
scas
daa
fcompl
ficoms
or
xor
push
mov
and
jnp
jb
nop
xchg
roll
jae
notb
xchg
push
push
cmp
cmp
jecxz
shlb
out
and
cmp
jl
shrl
pop
mov
test
bound
xor
pop
cmp
push
jne
push
int
jae
fwait
dec
je
xor
add
loopne
xchg
loopne
imul
movsl
scas
or
and
push
dec
in
lcall
adc
sub
jle
dec
inc
adcb
add
repz
sub
rcl
std
cld
fs
sbb
cmpsb
mov
rcr
lcall
push
mov
insl
jmp
sahf
fucom
or
xor
push
loop
jge
js
icebp
mov
mov
ds
mov
cmpl
inc
mov
imul
inc
push
sub
and
cmp
sbb
jmp
mov
aam
xor
xor
dec
imulb
push
jbe
jle,pn
inc
cmp
inc
jg
test
sub
pop
xchg
vfnmadd132pd
rcr
pop
jle
mov
dec
sbb
je
ficomps
push
xlat
cmp
movl
test
push
out
cmc
daa
sahf
xchg
mov
inc
pop
cmp
jo
fnstsw
push
loope
or
sub
jno
sub
pop
stc
xchg
mov
cmp
xchg
inc
inc
pop
and
fiadds
mov
sbb
jbe
pop
aad
lcall
xchg
adc
pop
xor
scas
mov
dec
lahf
inc
dec
subl
cwtl
sub
jb
push
pop
ja
and
std
jne
adc
iret
inc
adcl
lock
test
incl
add
mov
xlat
pusha
dec
test
mov
cmp
pop
cmpsl
fiadds
push
ficoml
mov
jno
xor
addr16
sbb
add
sub
sarl
mov
popa
fwait
mov
push
jns
sbb
nop
and
scas
int
sub
xchg
shrb
sub
fisubrs
sbb
jg
xlat
ds
leave
bound
in
insb
inc
test
add
xor
in
mov
push
inc
pop
shll
icebp
and
xor
fnstcw
cli
inc
cmp
fwait
ss
rclb
xchg
cmpsl
xchg
pop
jl
jl
cmc
dec
push
inc
xor
ds
scas
aad
push
loop
mov
test
repnz
xchg
xorl
or
jae
adc
push
cli
lods
add
dec
xor
and
mov
jp
cmp
dec
add
loope
xlat
pop
or
rorb
xor
nop
lods
mov
pop
pop
pop
push
pop
inc
xor
int
fcmovnu
mov
inc
popa
fadds
jl
mov
into
repnz
cmp
test
mov
jl
push
sub
push
test
push
cmp
fcmovu
sub
jle
aam
cmp
iret
mul
popf
jbe
xchg
mov
enter
jl
jne
aas
mov
mov
lahf
xchg
rorb
das
outsl
cmp
lea
lret
dec
push
aas
rolb
push
cmp
adc
ret
lcall
cmp
cwtl
mov
mov
scas
bound
mulb
jnp
add
and
pop
xchg
push
dec
jnp
dec
iret
or
adc
out
push
or
pop
popa
jge
cmp
pop
fstl
insl
adc
mov
inc
aaa
enter
dec
xchg
das
lahf
mov
pop
mov
adc
shlb
lret
xlat
jno
mov
dec
fdivl
ror
loope
in
and
jb
insb
mov
sbb
cmpb
mov
xor
xlat
pop
pop
pop
icebp
adc
push
je
jl
shlb
jb
cmp
mov
cs
pop
fcos
daa
stos
sbb
std
cmp
fucom
xchg
mov
add
jg
pop
jnp
jge
dec
cmp
dec
aas
nop
dec
add
pop
lcall
sub
lods
cli
aaa
test
test
jns
mov
cmp
inc
xor
jns
mov
adc
or
sub
adc
sbb
ja
es
pop
push
vpshuflw
lods
mov
xlat
xchg
mov
push
sbb
adc
push
lcall
aas
pop
outsb
clc
jae
sti
cmp
iret
inc
in
outsl
sub
lret
dec
inc
sbb
pop
jne
inc
mov
popa
pop
ret
mov
and
call
mov
mov
lods
idivl
es
mov
andl
push
aam
push
lea
push
cmp
pusha
ja
jle
sahf
and
fadd
ds
js
test
inc
dec
pop
loopne
call
or
int3
js
fisttps
mov
aas
aaa
xor
mov
sub
icebp
aam
cmp
loop
xchg
mov
jg
rclb
scas
xor
ja
popa
divl
cmp
pop
and
add
cmp
jns
loopne
mov
popa
loope
data16
pop
pop
mov
in
cmp
fdivrl
mov
stc
nop
adc
pop
mov
sub
and
mov
out
dec
sub
adc
xchg
jae
mov
add
and
dec
data16
ret
stc
imul
cmc
mov
xorb
ror
xchg
ret
adc
call
fimull
xor
sti
cmp
mov
push
mov
fcomp
in
pop
shlb
test
or
mov
pop
iret
in
fsubr
sub
inc
push
gs
loopne
or
adcl
test
jbe
xor
ret
popa
pop
lcall
lods
ds
nop
push
push
mov
jae
push
push
stc
das
inc
sbb
in
cmc
mov
fstpt
push
jns
rcl
jmp
scas
pusha
loopne
inc
cwtl
das
xchg
mov
push
dec
adc
std
xchg
sub
fs
and
sbb
cmp
or
push
cltd
fidivrl
or
lods
or
inc
inc
mov
jns
push
jo
inc
and
aad
add
nop
sbb
pop
outsl
push
cmpsb
or
cmp
sahf
and
mov
shrb
inc
jno
out
lcall
adc
xchg
enter
aad
movsb
mov
repz
data16
loope
inc
lret
and
je
inc
repz
inc
int
xchg
sbb
ficompl
std
mul
fists
mov
push
arpl
add
jo
icebp
xchg
lds
scas
fstl
and
in
lods
je
cltd
cmpsb
sub
stos
aam
iret
pop
sbb
movsb
mov
ret
push
or
ljmp
push
jle
pop
dec
loope
repz
xchg
repnz
sahf
mov
jp
xchg
cmp
fwait
rolb
sub
cmp
xchg
cmc
add
ret
push
cld
inc
push
xlat
int
sub
ret
sbb
test
mov
jp
fnstcw
mov
aas
fnstcw
inc
pop
pop
sub
jecxz
fchs
lods
movsl
das
adc
lods
cwtl
mov
inc
pop
sbb
cmc
sbb
rcll
sub
or
adc
stos
sub
xchg
xchg
push
packsswb
mov
in
xchg
mov
sti
clc
notl
sub
leave
cmp
loop
sbb
inc
jg
or
push
pop
inc
xchg
and
fistps
enter
in
jl
xchg
ljmp
mov
mov
js
in
pop
ficoml
in
or
pusha
pop
and
testb
ljmp
push
lahf
push
cs
lds
mov
mov
test
cwtl
and
pop
cmpb
add
jmp
or
mov
mov
dec
mov
inc
test
lret
int3
dec
xchg
xor
std
mov
imul
cli
shr
push
es
stc
aam
xchg
push
ss
mul
inc
add
enter
push
and
imul
adc
and
push
push
imul
mov
test
out
push
cmp
push
push
sub
in
into
pop
jecxz
lock
sahf
fidivrs
arpl
outsb
pop
inc
pop
outsb
notb
pop
cs
cld
xchg
jbe
arpl
xchg
test
pop
inc
jp
add
in
sub
add
pop
adc
add
mov
cwtl
jnp
inc
popa
fs
loop
pop
push
rcrl
sbb
jmp
in
mov
xor
xchg
lcall
mov
mov
mov
xchg
mov
xor
loopne
sbb
mov
stos
mov
test
mov
jg
push
test
push
movsb
add
mov
xor
cmc
add
xlat
test
and
xor
adc
jbe
or
shlb
and
aas
and
pop
adc
dec
std
test
jnp
xor
roll
inc
popa
iret
shll
push
jo
and
sysexit
add
lods
pop
push
cmp
je
add
pushf
loope
pusha
cmp
jge
dec
arpl
lea
cltd
shlb
aaa
mov
clc
mov
mov
es
push
fsub
lds
aaa
mov
out
mov
sbb
lahf
fisubl
shlb
push
xor
loope
mov
sarb
dec
lret
inc
hlt
add
add
adc
adc
aad
xchg
movsb
or
addl
add
pop
fdivl
pop
repz
enter
das
imul
mov
call
jle
pushw
test
data16
fcmovu
adc
pop
mov
jo
lcall
cwtl
push
pushf
ret
in
insl
fisubs
xor
fisubrs
cs
jnp
xchg
inc
testb
stos
repz
enter
scas
and
cltd
mov
adc
fstenv
cmp
mov
loopne
mov
and
cmp
or
adc
sarl
daa
sub
ret
outsl
dec
popf
pop
cli
dec
mov
push
std
or
ret
push
insl
ret
xchg
mov
sbb
mov
out
insb
movsb
add
outsb
cmpsl
adc
sbb
jp
xlat
jge
sub
cmpsb
dec
aas
mov
jl
in
addr16
mov
xor
push
inc
cmpsb
push
mov
andb
cld
mov
inc
or
push
jb
jns
pop
scas
or
mov
icebp
pop
dec
addr16
push
imul
add
xor
sub
push
fcoml
pop
mov
jg
enter
xor
test
and
in
je
push
out
loop
cmova
add
ret
pop
jb
mov
filds
jp
enter
and
popa
xor
fmulp
cld
stos
fisttpll
dec
psrlw
jmp
ror
in
lret
scas
in
and
ret
sbb
cmp
xor
push
mov
pop
jmp
roll
dec
sbb
push
lock
sbb
subb
and
orl
xchg
rcll
xchg
outsl
cmp
xor
adc
sahf
idivl
mov
decb
mulb
mov
cmpsb
pop
loop
cwtl
jle
inc
es
enter
fdiv
outsl
cld
mov
xchg
cmp
fidivrl
dec
movsb
andb
sub
mov
aas
or
stos
push
jb
jmp
push
mov
stos
push
hlt
insl
mov
mov
cmp
xor
jae
xchg
cmp
ja
mov
cmc
xor
in
xchg
pusha
js
mov
xor
xchg
mov
jge
pop
imul
insb
mov
pop
inc
outsb
clc
dec
xchg
rorb
jb
xlat
out
into
mov
cmp
and
mov
outsb
popf
movsl
pusha
inc
in
mov
rclb
dec
inc
push
sub
in
xor
aaa
and
cltd
mov
xchg
dec
jp
aaa
mov
pop
inc
add
shrl
cwtl
xlat
or
js
xchg
jmp
loopne
cmp
orl
pushf
jmp
fdivr
add
jg
dec
leave
mov
mov
push
jb
call
cmpsl
aas
sub
pop
xor
loope
sub
jo
mov
movsb
stc
add
mov
lcall
pop
loope
loop
pop
repnz
dec
cmp
pushf
idivb
dec
xlat
adc
sahf
mov
push
enter
or
orl
fdivrl
dec
jmp
or
hlt
fs
mov
or
xchg
mov
ljmp
insb
out
ljmp
xor
pop
pop
mov
jbe
dec
inc
lds
std
mov
outsl
out
movb
test
cmp
jp
jae
xor
cmpsl
xchg
push
xchg
jne
dec
mov
jp
jge
and
mov
sbb
outsl
fmuls
addr16
or
mov
mov
repnz
ss
sarl
cli
ljmp
mov
jns
and
data16
inc
sbbb
in
xor
cmpsl
cmp
test
icebp
insl
jmp
cmp
push
or
add
mov
push
es
push
mov
xor
sbb
imul
ret
add
and
pop
sahf
or
jns
cmp
inc
gs
xor
sub
fdivrs
lahf
sub
loope
je
mov
xor
xchg
push
mov
sub
mov
pushf
sahf
in
cmpb
lock
inc
shll
dec
push
lret
jo
and
mov
fmull
jl
and
icebp
mov
xlat
arpl
jnp
cmc
sub
jno
imull
imul
dec
pushf
jbe
jl
inc
sbb
test
pop
push
add
loopne
xchg
imulb
or
ret
popf
sub
push
xchg
push
sub
and
lret
sub
cli
clc
ja
xor
inc
xor
mov
cmp
jl,pt
mull
xchg
adc
into
and
mov
imul
ret
push
pop
rcl
ret
fstps
sub
pop
xchg
sub
call
sbb
iret
mov
fs
pop
mov
test
mov
jne
xorl
divl
cltd
outsl
jmp
jns
lds
mov
cld
mov
mov
cmp
test
xor
hlt
ret
cli
pop
stc
and
aam
fcompl
int3
in
mov
ds
mov
add
jecxz
sbb
pop
mov
lret
cmp
cltd
ljmp
jg
inc
and
mov
loope
push
in
lcall
mov
scas
mov
bound
cmpsl
xor
imul
fnsave
mov
test
fcmovbe
mov
push
xchg
bnd
xchg
aaa
inc
sahf
fldt
sub
lods
dec
dec
jp
jecxz
fisubl
mov
sarb
mov
sub
imul
lods
pushf
jbe
push
int
in
aad
jp
cld
enter
or
dec
inc
lret
sub
lds
shrb
fstps
and
pushf
and
popf
jbe
push
push
movl
lea
cmp
cmp
jae
adc
or
push
movsb
in
mov
push
add
and
ljmp
mov
sub
arpl
or
popf
mov
out
adc
fidivs
pop
inc
lahf
cmp
xor
pop
dec
pop
popf
jne
aaa
xchg
ret
pop
insb
and
cmp
inc
rcrb
jecxz
fstpl
dec
gs
push
cli
xlat
fldcw
into
mov
nop
test
mov
xchg
mov
clc
add
lret
icebp
sub
shrb
imulb
je
in
cmc
icebp
insb
scas
jmp
sbb
int
dec
inc
in
cmp
mov
out
shl
dec
popa
adc
jl
loop
mov
sub
stos
stc
inc
bnd
xor
mov
xor
cmpsb
je
inc
and
call
stos
mov
push
sbb
push
sbb
adc
inc
cld
iret
addl
fcomip
sub
mov
sbb
jge
mov
adc
test
stos
mov
push
test
rolb
imul
lret
int3
sbb
fisttpl
ds
pop
in
std
xor
cltd
pop
sbbb
aad
push
imul
je
stos
aaa
mov
or
stos
adc
dec
in
add
jns
jp
jne
out
xor
fstl
mov
hlt
push
xor
mov
mov
cltd
lret
push
sub
outsb
cmp
sub
test
ss
mov
mov
movl
and
dec
or
orl
push
loope
icebp
xchg
lahf
insb
or
mov
sbb
lret
shr
add
or
inc
cmpb
mov
or
movsb
mov
movsb
sbb
xor
mov
loope
or
lds
push
js
ficoml
mov
cs
iret
adc
pusha
xchg
cs
lret
push
ds
lea
lock
dec
test
icebp
hlt
sarl
repnz
xchg
insb
repnz
cmpsl
es
insb
xorl
xorl
sbb
inc
xor
mov
mov
hlt
decb
sbb
mul
cmp
cltd
call
mov
xchg
mov
sbb
sahf
ljmp
dec
int3
dec
dec
test
cmp
push
shll
movsb
cmp
add
mov
lea
sbb
mov
fs
in
out
shll
scas
dec
cld
adc
adc
push
aas
sbb
out
cmpsb
clc
add
xor
or
sub
push
jle
dec
dec
fbstp
rcrb
hlt
sbb
and
push
dec
in
sub
enter
test
jbe
dec
pop
icebp
rolb
inc
fwait
dec
jmp
test
pop
jg
fwait
mov
fistpl
bound
ljmp
aas
push
or
cmpsb
ss
loopne
das
dec
sbb
xchg
jg
pop
jge
cmpsl
pop
pop
out
jo
sbb
int
sbb
repnz
sub
cmc
mov
test
mov
test
daa
sub
dec
sbb
inc
and
outsb
cmp
xchg
lods
incl
push
std
push
sbb
adc
sub
mov
movsl
mov
in
jnp
xchg
leave
aad
cmp
inc
and
fnstenv
jmp
pop
shll
sub
adc
test
movsb
in
mov
stos
movsb
stos
mov
in
leave
idivb
in
insb
leave
shll
sbb
lea
cmp
int3
int
jne
lahf
insb
or
xchg
lock
rcrb
and
insb
jns
dec
add
inc
mov
xchg
dec
sarl
hlt
add
fisubrl
rcll
fdivp
mov
icebp
lock
lock
or
mov
mov
and
push
push
mov
repz
out
push
in
loop
pop
pop
jp
dec
pop
xchg
sbb
fmul
push
add
pop
push
lock
xor
xchg
mov
push
cmpsl
push
orl
jns
stos
or
hlt
or
pop
jg
push
sbb
push
test
mov
inc
jnp
dec
enter
cmp
xorb
cli
inc
inc
push
inc
mov
push
pop
pusha
add
xchg
jno
sub
add
sbb
js
ja
hlt
inc
ljmp
or
xor
push
lock
dec
mov
jb
jg
mov
sbb
and
outsl
cmp
mov
inc
mov
jecxz
xchg
scas
sar
mov
cmp
cmp
ret
add
sarl
pop
pop
add
mov
lods
jbe
rcr
loopne
leave
inc
dec
movsb
mov
mov
imul
inc
push
out
lret
add
cmp
rcr
pop
inc
pop
sbb
fdivr
sbb
les
insl
lcall
pusha
adc
push
jne
sub
pop
in
in
jbe
aas
push
out
sbb
scas
out
jp
pop
xchg
mov
mov
movsb
mov
insl
or
pop
test
sub
push
cmp
mov
dec
int
adc
or
outsb
adc
outsl
icebp
mov
inc
mov
fnstcw
inc
sti
push
jne
mov
adc
mov
stc
jnp
pop
xchg
fwait
push
out
xchg
mov
fildl
repnz
cmp
cwtl
pop
imul
inc
popa
sbb
test
add
xor
dec
test
push
inc
dec
inc
mov
jecxz
mov
xchg
leave
pop
xchg
rorl
outsb
add
inc
lret
sbb
dec
sahf
or
aam
enter
mov
and
push
adc
lods
je
gs
pop
push
lea
xor
nop
cltd
mov
cmp
andl
push
mov
and
dec
lret
mov
inc
inc
rcl
cld
adcb
push
stc
je
cmp
dec
jne
inc
daa
mov
mov
cmc
dec
jl
aaa
fistpl
mov
js
cmp
inc
ds
in
mov
inc
push
jl
sbb
pop
pop
mov
inc
cs
aaa
jmp
inc
lea
dec
jbe
inc
stc
cli
leave
pop
lock
mov
int3
mov
sarl
lea
test
pop
xchg
shlb
pop
loope
fistl
push
adc
xchg
inc
inc
out
roll
testb
shll
cmp
add
mov
ret
mov
mov
xchg
mov
inc
pushf
jae
pop
adcb
xchg
sub
sub
xlat
in
test
mov
aaa
add
nop
mov
pop
dec
lea
dec
ds
mov
add
pop
outsl
jge
adc
xor
sub
jb
negb
imul
aam
sbbb
call
mov
mov
aaa
xchg
imul
frstor
pop
xlat
or
inc
pop
push
inc
jbe
or
pop
mov
loop
push
sysenter
imul
mov
loopne
int
xor
dec
inc
hlt
sbbb
fidivl
aad
rcll
stc
dec
or
jp
dec
xor
pop
gs
imulw
arpl
mov
in
pmulhuw
test
test
ljmp
insb
in
dec
add
fwait
cmpsl
shl
pop
push
cmp
add
mov
inc
pusha
or
out
xchg
loope
push
mov
inc
cmp
fucomp
mov
jg
enter
inc
jmp
jno
adc
popf
xchg
cmc
mov
sti
dec
dec
pop
into
mov
pop
sbb
loope
mov
adc
cwtl
inc
cwtl
cmp
je
fdivrl
dec
and
or
push
push
outsb
xchg
jle
lods
jae
cmp
push
rcl
bound
mov
xchg
mov
jnp
rcrb
mov
imul
dec
mov
dec
push
movsb
popf
push
cltd
loope
fcompl
mov
push
push
sbb
mov
mov
dec
mov
cmpsb
rcrl
cs
out
out
das
out
gs
mov
xor
push
stc
push
inc
sub
call
jle
push
and
sub
lods
sbb
pop
out
cli
push
bound
arpl
ds
imull
jge
imull
sbb
shlb
or
mov
out
enter
cwtl
mov
push
mulb
push
add
add
pop
loopne
mov
lcall
jle
add
push
dec
in
loopne
xor
push
inc
jmp
ss
or
mov
push
xchg
cmp
adc
out
test
mov
hlt
loop
xor
fisubl
xlat
jmp
jo
sahf
inc
jo
ss
mov
popa
enter
sbb
ljmp
sub
rcrl
loopne
sub
std
out
inc
pop
mov
xor
inc
or
push
push
pop
mov
lds
fidivs
fcomip
out
cmp
add
data16
xchg
cmp
mov
aaa
mov
in
cli
clc
push
jecxz
daa
jge
out
pop
fisubs
loop
sar
test
push
mov
cmp
loop
xchg
insl
mov
adc
pop
mov
stos
mov
mov
add
pusha
xchg
loope
gs
pushf
jecxz
rolb
fimull
icebp
jmp
adc
addr16
adc
loope
add
test
mov
mov
push
mov
sbb
popa
loope
mov
mov
pop
mov
mov
in
adc
mov
in
mov
sahf
jecxz
push
inc
mov
mov
mov
inc
mov
mov
mov
inc
decl
mov
ffree
mov
push
cld
sub
int
add
xchg
test
lock
lcall
or
test
inc
mov
mov
xchg
jnp
ret
push
mov
cmp
loopne
sbb
out
dec
jp
mov
sub
pop
or
push
stc
dec
pop
popf
les
pop
dec
rcr
push
nop
pusha
out
test
into
pop
or
jns
bound
xchg
outsb
cmp
stos
dec
sbb
popa
out
mov
sbb
xchg
or
dec
jecxz
hlt
xchg
sub
push
xchg
js
inc
insl
out
lahf
mov
pop
scas
jmp
inc
sbb
add
xchg
je
jno
dec
mov
cmovno
fdivrs
outsl
jnp
inc
sbb
in
add
jp
lret
sbb
psubq
stos
inc
aaa
jb
shll
xor
decl
add
out
push
popa
aam
mov
sub
out
ljmp
repnz
bound
faddl
ljmp
xor
sbb
out
sbb
insl
dec
dec
jmp
mov
inc
mov
ror
xchg
mov
inc
sub
ret
adc
daa
jbe
sbb
imul
mov
and
xchg
outsl
sub
rcrl
ret
data16
mov
cwtl
sarl
in
imul
outsl
push
and
mov
pusha
repnz
outsl
outsl
sahf
pushf
scas
adc
sub
mov
fadds
cmp
push
xlat
data16
sti
push
mov
inc
fwait
bound
jmp
lret
add
fldl
sbb
push
lds
cwtl
and
or
cmp
cmp
or
cmp
repz
pusha
outsl
push
xor
sbb
test
inc
std
xchg
cmp
inc
icebp
pushf
insl
stos
sub
stos
mov
bound
je
push
sub
xor
cmp
xchg
dec
stc
xor
std
push
sbb
out
aad
pop
jbe
lds
xchg
push
mov
loopne
cmp
out
mov
test
dec
mov
sub
jo
jne
bound
add
mov
enter
fmul
incl
lret
mov
idivl
pop
dec
adc
mov
jle
and
aas
sub
inc
test
xchg
sbb
cmp
or
jns
sbb
scas
jnp
pusha
inc
push
out
push
into
inc
lea
xlat
shlb
sub
cmc
jg
fsubrl
adcl
aad
js
movsb
mov
in
cld
andb
jae
mov
inc
xor
push
frstor
fcomps
cs
sub
rol
addr16
outsb
cltd
push
iret
cwtl
test
loope
les
dec
std
or
adc
rclb
daa
jecxz
push
and
mov
test
or
stos
and
rcrb
dec
cltd
or
in
ss
pop
fs
enter
ficoms
jp
popf
inc
aad
cld
je
mov
sbb
cmpsl
loopne
or
ljmp
lret
mov
pop
sbb
fcoml
test
sbb
inc
mov
and
enter
pop
or
js
cltd
out
sbb
inc
test
mov
cmpsb
popf
shrl
push
pop
movb
fadd
lahf
mov
inc
xchg
roll
flds
adc
rolb
push
or
push
movl
mov
fwait
cmp
lods
loopne
xor
mov
lods
inc
dec
mov
xchg
mov
dec
cs
lods
popl
insb
xchg
ljmp
xchg
in
and
lret
mov
icebp
insl
out
pop
jp
fs
dec
inc
and
cmp
mov
jl
popf
jno
lcall
das
xor
cmp
and
iret
test
jmp
xor
or
mov
jae
mov
add
xor
divb
mov
fwait
mov
pop
imul
mov
cmpsl
ja
cs
lock
andb
ret
push
test
mov
divb
xchg
jb
mov
sub
cld
or
push
sahf
rolb
daa
xchg
cmp
out
rcrb
dec
call
enter
pushf
mov
pop
adc
in
cltd
outsb
movsb
mov
cs
fisttpll
pop
pop
jae
popf
mov
fisttpll
orl
mov
out
ficomps
sbb
call
int3
jae
fstpl
cmp
mov
xchg
push
fxch
fldcw
push
in
jb
sbb
and
loopne
push
and
mov
ds
cmpsl
sub
ret
cmp
push
ljmp
popf
sub
xchg
leave
jle
aaa
xchg
mov
mov
xor
xchg
lahf
sbb
xor
dec
jnp
outsl
or
inc
clc
shll
fstl
fadds
jo
pop
fs
sbb
sub
lds
sbb
je
outsl
mov
nop
out
jbe
add
add
cmp
mov
int3
fsubl
mov
and
fildll
xchg
inc
mov
addr16
andb
stc
cli
jnp
icebp
mov
idivb
outsl
fidivl
sti
popa
negb
nop
arpl
inc
popa
mov
dec
sarl
shl
xor
sub
jmp
xor
in
ficomps
ljmp
xor
daa
jp
mov
or
push
mov
dec
aaa
fsubl
lret
outsb
mov
fisubl
mov
push
mov
xor
push
pop
dec
xchg
adc
cli
lock
rorl
push
and
xlat
insb
dec
dec
ja
inc
repz
jg
negb
das
dec
lret
push
jnp
pop
mov
xor
dec
dec
or
inc
xlat
test
xor
and
test
mov
adc
roll
sbb
repnz
sti
dec
and
outsl
je
inc
lea
jg
sti
test
jb
mov
cmp
mov
mov
adc
scas
dec
cmp
icebp
fsts
inc
aaa
cltd
inc
loopne
push
call
mov
mov
push
dec
dec
popf
xor
hlt
icebp
adc
fadd
pop
cmp
mov
dec
fdivrs
ret
inc
sbb
decb
adc
mov
repnz
icebp
out
jg
ds
adc
int3
adc
in
mov
cwtl
and
outsb
inc
rclb
adc
sub
ds
enter
sbb
mov
in
adcb
push
xor
jge
add
mov
repnz
imul
mov
xor
mov
movsl
inc
xor
nop
cwtl
ret
sbb
movsb
lock
mov
stc
pusha
pop
xchg
jmp
loop
int
dec
mov
jge
ljmp
push
js
pusha
push
mov
enter
pop
in
adc
rcr
inc
ret
xor
aas
and
pushf
scas
xor
cmpsl
add
jge
sub
push
shll
fwait
cmpl
pop
pusha
and
popf
inc
xor
mov
pop
testb
xchg
rolb
xchg
or
add
push
arpl
cmpsl
lcall
shll
cmp
ret
pop
mov
or
or
neg
sbb
sbbb
add
and
xor
jo
sub
rcl
sbb
cmp
xor
adcb
mov
push
aaa
test
aas
xchg
scas
mov
iret
jne
cld
dec
je
mov
outsb
jb
push
inc
and
es
mov
adc
out
dec
cmpsl
or
test
sbb
out
loope
cmpsb
jecxz
nop
popf
pop
int3
popw
mov
push
or
jl
adcb
pop
lahf
adc
popf
incb
scas
push
mov
adc
fs
fcmovnb
mov
inc
mov
sub
ja
or
bnd
test
ljmp
rol
shlb
pop
xor
dec
push
inc
daa
rcll
and
mov
add
in
rolb
mov
and
mov
add
xor
mov
add
dec
movsl
cmp
inc
add
rol
popa
xor
mov
scas
cs
insb
outsl
xchg
aas
daa
iret
insb
ds
in
pop
out
xchg
cmc
add
push
jb
dec
adc
daa
leave
cmp
cwtl
sub
idivb
ss
cmpsb
add
jp
cld
xchg
imul
dec
ja
test
adc
les
xchg
in
and
mov
inc
push
jo
ret
fldenv
stos
clc
cltd
insb
fidivl
inc
cmp
aad
lds
repz
and
jo
adc
mull
push
dec
ljmp
mov
aam
sbb
push
mov
daa
mov
out
jg
cmp
inc
mov
mov
inc
dec
sub
push
int3
sub
aaa
test
ja
xor
mov
dec
loop
fcoml
push
addb
cmp
loope
push
xchg
insl
nop
or
stos
adc
stc
pop
adc
sub
mov
add
pop
sbb
xchg
jnp
test
imul
daa
or
ss
mov
and
scas
fwait
dec
out
cli
dec
push
shlb
jno
fs
dec
call
xchg
lods
add
sub
sub
jno
dec
jns,pn
notb
rcr
outsl
pop
outsl
pop
mov
sub
mov
cmp
in
orl
inc
imul
cs
or
mov
test
roll
aam
mulb
int3
cmp
movsl
adc
jl
mov
jne
mov
repz
insl
sub
data16
lret
leave
dec
and
and
bound
sbb
test
jge
ljmp
sbb
cltd
jae
add
xchg
cmc
inc
mov
and
outsl
mov
ret
or
addb
push
outsl
data16
pusha
adc
das
out
scas
mov
mov
addl
ds
popf
cld
fwait
mov
rclb
jno
xchg
push
pop
rolb
xchg
push
test
test
pop
aad
loopne
scas
ljmp
jl
test
lret
hlt
imul
insb
cmp
adc
mov
in
repnz
cltd
push
repz
sub
xlat
mov
imul
das
es
stos
jmp
dec
lcall
sbbb
les
adc
mov
or
sarl
out
fwait
sarb
cltd
out
inc
push
lea
sub
rorb
out
or
gs
rcrb
into
shlb
test
pop
add
push
in
sti
and
stos
dec
aas
ror
jbe
rorb
add
jg
jl
adc
dec
popf
int3
push
jg
xchg
mov
and
push
in
ljmp
mov
arpl
aad
add
ss
gs
inc
fidivrs
mov
push
cmc
pop
repnz
andb
xorl
ss
pop
jne
push
mov
sbb
sub
movsl
mov
xchg
and
xor
sub
cs
testb
cmp
jecxz
lea
sbb
adc
insb
pop
ret
outsl
cltd
daa
push
pop
mov
add
imul
lea
mov
rcll
xor
and
pop
jle
cmp
adc
xlat
sar
cltd
mov
fisttpl
xchg
mov
movsl
fidivrl
je
test
aas
push
add
dec
mov
in
in
jnp
mov
mov
out
or
fsubs
out
in
jnp
int3
js
pop
or
enter
mov
adc
sti
in
popf
dec
pop
inc
loop
inc
rcrl
outsl
insb
cwtl
push
push
mov
out
das
xor
popf
jg
stos
sub
mov
movsl
and
iret
jp
xchg
fs
mov
cld
and
jbe
jo
ss
add
jmp
arpl
and
adc
lods
js
xchg
cmp
lock
repz
rcll
jp
mov
add
test
push
cmp
jo
mov
imul
lahf
test
push
ss
clc
adc
cs
pop
scas
rorl
xchg
jo
fs
mov
jb
ja
add
imul
mov
inc
and
cmp
sub
xor
shl
mov
mov
add
dec
dec
push
repz
hlt
fsubp
cmp
adc
inc
sbb
dec
jb
fbstp
enter
jno
dec
xchg
cltd
outsl
movsl
out
out
test
int3
mov
jnp
clc
inc
loopne
fldl
mov
sbb
out
lret
jecxz
pushf
pushf
inc
cmc
cmp
pop
and
cli
dec
sbbl
pop
fsubrl
cmc
scas
shrb
pop
jl
leave
lret
callw
pop
and
mov
mov
fdivrp
out
mov
js
fmuls
sub
and
jb
adc
add
fildll
cli
jae
test
pusha
mov
cmp
push
in
xchg
cmc
ss
sbb
fldcw
pop
mov
dec
mov
and
mov
mov
push
jp
xor
push
mov
xor
fidivl
cs
repnz
in
push
daa
mov
and
dec
in
add
int3
xorl
mov
shrb
push
mov
mov
ficompl
mov
dec
inc
mov
or
sbb
mov
inc
cmpsl
and
or
and
shl
push
ret
in
out
out
jp
or
sbb
loop
in
cmp
adc
ds
rcrb
xor
inc
leave
xor
test
in
stos
outsb
iret
dec
mov
pop
mov
movsb
dec
add
xor
cmp
push
sahf
sahf
bound
xchg
xor
imul
int
stc
mov
push
xchg
or
push
inc
jle
imul
stos
inc
xchg
lea
testl
add
enter
shrl
add
inc
push
cmpsb
push
inc
jge
clc
mov
ret
sbb
mov
cmpsb
jp
stos
addr16
jp
fstpt
int
mov
or
push
mov
sub
ja
or
sub
in
popa
ror
xchg
fsubp
dec
push
pop
or
push
push
inc
loop
div
aaa
lret
and
mov
daa
es
mov
and
cld
xor
pop
push
rol
adc
scas
inc
jmp
cwtl
dec
xor
adc
aas
repnz
movsb
inc
cmpsb
push
xchg
cmpsl
clc
mov
lcall
jmp
fadd
mov
push
out
out
lea
in
xor
std
mov
fwait
sbb
scas
or
fsubrl
arpl
enter
aaa
push
es
xor
leave
testl
loope
xor
pmuludq
sbb
data16
lds
adc
jmp
jmp
xchg
addr16
rol
loope
inc
into
dec
std
icebp
jmp
or
test
adcl
scas
js
and
repz
insl
mov
push
enter
adc
sbb
gs
and
jne,pn
out
push
sti
mov
lock
fists
test
sbb
xor
add
mov
rcrb
and
push
push
pop
xchg
add
mov
mov
adc
je
mov
and
movsb
out
imulb
dec
cli
outsl
and
loop
in
jle
and
psubb
clc
sbb
xor
testl
or
cmp
dec
sub
cli
jae
or
incl
mov
icebp
dec
inc
cli
lock
push
add
xor
and
push
test
fmuls
push
push
dec
xchg
mov
es
arpl
push
mov
push
push
sub
mov
xchg
clc
ja
cs
and
jbe
xchg
rcr
addb
push
shll
jmp
mov
xor
fwait
inc
ret
jo
loope
leave
je
mov
dec
inc
fwait
xchg
mov
and
fcomps
je
jo
xor
and
neg
add
sub
and
inc
mov
inc
insb
xor
mov
fs
push
fbstp
inc
lret
xchg
rorl
enter
ljmp
ret
adc
and
sub
ret
pop
dec
cmp
jmp
jne
push
ret
fadds
add
sbb
lds
add
mov
int
cli
dec
fnstsw
or
pusha
jae
jl
mov
cmpsb
xlat
sbb
push
or
fdivl
mov
ficompl
mov
jp
and
in
lock
shrb
mov
lcall
lret
or
dec
add
mov
inc
stos
sub
xchg
out
or
push
pop
stos
stos
jb
popa
stos
mov
aad
sbb
jp
xor
ret
daa
pop
lods
fidivl
mov
mov
repnz
cmp
dec
or
cwtl
insb
lods
jo
push
jg
icebp
int
lea
lret
aas
ja
ficoms
sets
xchg
mov
cmpsb
xchg
daa
outsl
aaa
mov
or
xchg
mov
ja
pop
mov
repnz
or
mov
test
xor
outsl
lods
ret
mov
js
mov
fdivl
xor
and
iret
adc
repz
inc
and
rorl
out
mov
enter
movsb
mov
test
xchg
sub
cmp
add
inc
repz
in
es
lods
pushf
pop
push
or
inc
movl
loopne
test
jnp
jno
xchg
mov
in
mov
pop
jle
iret
push
addb
xchg
push
pop
mov
enter
pop
je
out
dec
stos
dec
icebp
xchg
popf
mov
mov
loopne
adc
jecxz
or
mov
push
xor
push
pop
das
and
das
push
clc
cmp
xchg
int3
or
mov
xchg
sahf
lret
adc
jmp
xor
jae
xorl
xchg
cmp
push
inc
push
icebp
fidivrs
cmpsb
mov
mov
pushf
add
add
jg
in
call
test
and
mov
cmp
loop
ror
sub
lock
and
nop
dec
xor
out
nop
pop
gs
lock
test
push
cltd
testl
scas
hlt
loope
dec
lock
mov
adc
fisubl
fsubs
clc
insb
loope
cmp
insl
or
jle
stos
pop
jnp
stos
jmp
jmp
and
mov
cmp
sbb
pop
bound
jle
xchg
xlat
in
dec
hlt
cmp
mov
ret
sub
sbb
xchg
mov
je
adc
movsl
addb
adc
loopne
mov
xchg
mov
adc
mov
out
cwtl
jnp
and
movsb
pop
ljmp
ret
in
cmp
cld
js
js
int3
mov
xor
or
addl
pop
adc
inc
add
mov
sub
stos
test
fists
xchg
mov
test
or
addr16
inc
inc
addr16
ljmp
icebp
sub
push
cmp
hlt
pop
fwait
cmpsb
iret
lret
jmp
cmc
arpl
dec
adc
outsw
or
cltd
leave
add
rcrl
ja
mov
test
push
rcll
insb
loop
dec
aam
movsl
inc
jmp
mov
cltd
lods
mov
fwait
ds
or
bound
rcrb
add
lods
pusha
data16
pop
addr16
jae
mov
mov
add
pop
inc
sbb
in
bound
movsb
repz
or
bound
cmp
nop
ljmp
negl
push
arpl
jae
sbbl
les
pushf
inc
mov
outsb
and
das
ja
loop
cmp
ret
and
sti
xchg
fnstsw
movsl
ljmp
xlat
mov
pop
div
jmp
xor
xchg
xchg
push
nop
ret
jle
sbb
pusha
jle
rolb
adc
pusha
leave
adcb
sbb
hlt
daa
mov
cmp
fldpi
das
call
shl
ljmp
jl
out
gs
stc
xor
add
mov
pop
push
push
inc
dec
mov
mov
mov
test
in
inc
test
add
push
test
sahf
jne
mov
lock
ss
aaa
and
push
add
aas
ja
subb
adc
out
jl
fs
adc
pop
cmp
arpl
ret
inc
xchg
xchg
mov
mov
out
sub
xchg
in
addl
add
push
pop
pop
repnz
mov
lods
inc
inc
divb
sbb
sbb
xlat
ds
cmpsb
or
jge
mov
and
movsb
jae
mov
or
pop
pop
or
adc
subl
jmp
dec
xchg
pop
adc
pop
push
test
lock
cmpsl
adc
sub
add
nop
add
inc
cmpsl
sbb
pop
int3
mov
leave
out
stc
xor
mov
mov
stc
mov
push
cmpsl
dec
push
sub
mov
push
mov
imul
pop
cmp
cmc
int
stc
sti
jmp
test
popa
jp
push
ret
mov
sbbl
push
push
jbe
bound
jb
and
sub
ret
or
nop
ja
mov
and
cwtl
cmp
leave
test
fcmovnb
xor
mov
and
add
arpl
in
or
push
push
jno
insl
mov
outsl
stc
call
ds
push
ror
sahf
mov
aaa
js
test
mov
and
xlat
pop
sbb
icebp
cld
inc
sub
dec
xlat
inc
rcr
imul
push
sub
aad
lahf
jbe
les
das
sbb
fildl
mov
cmp
pop
cmp
push
sub
mov
mov
adc
test
inc
adc
push
sbb
fidivs
mov
add
jns
xlat
push
int3
lahf
push
and
inc
inc
test
pop
cmp
inc
jno
push
mov
loope
mov
inc
push
mov
cmpsl
sub
and
inc
add
mov
lcall
sbb
xchg
cs
lcall
pop
sbb
repz
jae
fdivrs
push
das
jno
mov
scas
jmp
mov
jae
fbstp
xchg
jecxz
and
dec
xchg
push
cmp
pop
mov
fimuls
jecxz
push
fistpll
mov
fmulp
mov
ret
push
mov
imul
into
inc
fisubrl
test
inc
aad
mov
dec
fs
aaa
hlt
dec
dec
mov
cmpsb
cld
or
pop
push
xor
call
mov
push
lcall
cmp
xchg
popf
scas
lds
inc
add
fsubrs
sbbl
out
stos
adc
int
add
jb
cmp
dec
pop
stc
add
cmpsb
imul
insl
outsl
pop
adc
pop
test
mov
mov
pop
mov
add
or
lret
adc
pop
scas
mov
fsubs
jge
repnz
fiaddl
mov
xchg
cs
dec
xchg
or
xchg
sbb
mov
insb
pop
ljmp
push
cmp
icebp
lods
xchg
insl
ret
int3
stos
xor
jbe
mov
test
vpsubw
jp
mov
xchg
sarl
jecxz
jp
push
cmpsb
into
and
movsl
mov
push
xchg
adc
or
es
lahf
aad
pop
mov
inc
outsb
call
insb
out
in
aaa
fdivl
cmpsb
inc
sub
jp
and
out
push
cmc
int
aaa
pop
adc
sbb
aas
divl
or
fisubs
aaa
xchg
sub
cwtl
adc
adc
pop
out
jecxz
inc
push
iret
pop
dec
repnz
cmpsl
mov
push
xchg
pop
cmp
movsb
popf
scas
or
insl
scas
cmp
inc
sbb
out
rorl
dec
ljmp
imul
outsb
push
fimuls
dec
or
mov
repnz
push
cld
into
and
data16
scas
dec
sbb
xchg
insl
mov
lahf
int
fs
xor
mov
pop
mov
sahf
push
inc
and
xor
xchg
push
pop
mov
add
cmp
mov
jbe
shlb
cmp
pop
adcb
sub
mov
mov
ret
or
mov
mov
loope
mov
out
jl
mov
fcoml
arpl
mov
fdivrl
push
mov
enter
xchg
je
dec
call
in
sub
jbe
push
int3
pushf
call
rclb
push
jp
loopne
es
or
dec
mov
pop
cli
push
lea
jmp
es
add
sbb
xor
fwait
mov
and
mov
dec
lods
mov
adc
cld
shrb
fld
int3
and
adc
sub
div
mov
mov
mov
push
push
mov
jo
negl
xchg
sbb
xchg
addb
orl
cs
jno
js
loopne
call
xor
je
jp
test
jmp
mov
stos
pop
jbe
sti
test
sbb
xchg
imul
cmpsl
cmpsb
jl
push
mov
xor
or
push
jnp
stos
aad
test
hlt
jp
test
lret
xor
fiaddl
daa
popf
adc
inc
and
lret
int3
adc
jnp
orb
push
sbb
imul
lea
lds
daa
stc
or
data16
aam
sbb
dec
iret
xor
add
sti
push
addl
sbb
lcall
xchg
arpl
sub
inc
fimull
sbb
and
push
clc
mov
xor
mov
sub
lcall
orl
mov
adc
int
fisttps
xlat
pushf
jb
jne
mov
cwtl
sub
sbb
sub
ja
fcompl
add
roll
outsl
jge
pop
cmp
sbb
je
lcall
lcall
lret
sbb
push
je
inc
out
arpl
sti
dec
aaa
mov
mov
and
sahf
adc
in
push
lcall
mov
ret
lss
pop
mov
xor
xor
loope
test
lods
mov
fs
les
aaa
js
mov
flds
and
inc
jp
jo
aas
addb
pop
mov
into
int3
ljmp
xchg
mov
stos
ljmp
sbb
jne
bswap
push
cli
js
stc
leave
hlt
jae
stc
sbb
pop
jbe
inc
ljmp
push
and
push
push
cmp
bound
sub
ficomps
add
push
mull
push
dec
cmpsb
adc
das
jns
mov
xchg
les
add
jne
pop
movsl
adc
shr
orb
out
sbb
jge
xor
aad
lods
into
push
les
test
insb
add
fildll
imul
jge
stos
sub
mov
or
mov
sub
imul
adc
aaa
xchg
scas
mov
movb
xor
clc
fnsave
fcmovnb
pushaw
movsl
out
loopne
pop
daa
fisubs
popa
and
cwtl
add
pop
mov
mov
ret
pop
inc
addl
loopne
mov
xor
dec
cmp
jo
adc
inc
xchg
adc
popa
jl
mov
lds
call
gs
lea
into
movsb
sub
push
hlt
lahf
cltd
xchg
inc
or
fdivrs
sbb
call
and
loopne
jl
cmp
fmul
sub
push
cli
lahf
push
push
std
dec
stos
push
mov
in
sbb
dec
pop
int
and
loopne
or
stc
cmpsb
mov
popa
cwtl
idivb
mov
sarb
cmp
or
jge
mov
dec
mov
dec
mov
imul
jnp
bound
dec
xlat
mov
data16
jl
ljmp
lret
or
daa
jp
jns
pop
push
xor
mov
inc
dec
mov
adc
movsb
lret
stos
ficompl
movsb
iret
dec
imul
push
and
inc
xchg
xchg
sahf
vcomisd
cltd
or
icebp
jp
rcrb
insl
popa
cmp
aad
xlat
cltd
pop
rolb
push
fsubrl
push
enter
stos
ss
rorb
push
pusha
push
adc
sahf
std
inc
dec
mov
jnp
adc
loopne
gs
das
adc
ss
mov
or
inc
call
vunpckhpd
xor
cwtl
stc
lea
mov
enter
adc
or
mov
mov
dec
aam
sbbb
dec
sub
imul
ja
dec
cwtl
and
sbb
ret
jnp
inc
dec
pusha
inc
fs
push
mov
jns
cwtl
stc
shrb
sbb
fstpt
adc
xor
scas
clc
aam
movd
fisubrs
jl
sahf
pop
add
mov
sub
mov
stc
push
popf
stos
test
and
movb
pop
ss
mov
sbb
hlt
rep
loop
xchg
xor
inc
mov
jg
je
les
push
mov
mov
call
repz
push
fnstsw
push
mov
scas
jnp
pop
sbb
ja
lret
pop
das
pop
scas
jl
sbbl
push
scas
xchg
and
add
cmp
loope
mov
fldenv
seta
into
js
dec
aas
loopne
mov
in
xchg
adc
inc
test
popa
fisttpll
cmp
cmp
call
out
ss
xchg
das
xchg
imulb
push
pop
repz
outsb
or
inc
idivl
daa
cmp
data16
xchg
lcall
xor
mov
call
push
mov
std
pop
in
pop
mov
out
mov
mov
je
sti
mov
in
shlb
sahf
dec
iret
push
push
xchg
dec
ficompl
sbb
fists
xchg
push
pop
mov
pop
xchg
xchg
jmp
xor
leave
pop
nop
orb
lahf
cmp
add
jb
pop
pop
pop
nop
int3
jg
fldcw
xchg
or
int
movsl
jno
cmpsb
sub
cmp
mov
push
test
sbb
or
jo
fadd
sbb
imul
push
xor
adc
sarl
pop
cmp
mov
lcall
or
jno
rcrl
inc
add
int3
data16
inc
dec
cltd
fcompl
iret
out
fbstp
mov
mov
jg
push
mov
or
mull
je
out
testb
xchg
dec
inc
or
cmp
arpl
cmp
mov
inc
mov
arpl
jns
mov
cmp
test
xchg
add
adc
cmp
loopne
fldcw
cltd
push
xor
or
mov
in
je
in
fistl
jnp
cltd
inc
push
jp
lret
jns
repnz
lods
push
das
jae
fs
jecxz
ffree
imull
jo
and
es
fildll
push
push
mov
jle
mov
jp
push
in
sub
ds
or
mov
push
sub
pop
je
test
jmp
sub
aas
subl
xchg
mov
fucomi
or
out
xchg
push
popa
rcll
inc
cli
push
lcall
and
rclb
cli
sub
jmp
stos
lock
add
cmp
cmp
or
fdivp
ss
sub
call
cmpl
mov
cmp
adc
popf
push
jp
cmp
fs
les
or
mov
aaa
sub
mov
jp
adc
cwtl
loop
clc
push
inc
jae
ret
cli
mov
pop
xor
jo
out
mov
mov
sar
xchg
fistpll
sbb
inc
push
xlat
sbb
cmpsb
mov
imul
hlt
jno
add
lods
cwtl
sbb
loop
push
and
call
sbb
nop
mov
add
mov
repnz
cmp
orb
daa
ret
fldl
imul
jp
out
pop
adc
jg
xor
outsb
jo
mov
orb
idivl
mov
and
xchg
sub
dec
fimuls
fists
sub
int3
fbld
out
mov
frstor
pop
out
push
pop
pop
jb
inc
outsl
movsb
xchg
dec
fistps
aam
fwait
popa
mov
push
mov
sbb
loope
int3
imul
push
mov
cwtl
orb
fsubr
gs
mov
sarb
movsb
clc
sub
push
ficomps
pop
sahf
jl
add
pop
ja
std
inc
xor
fs
jp
les
mov
sbb
jb
test
iret
fs
mov
fistl
inc
inc
cmp
jge
aad
lods
fsubr
lds
mov
gs
mov
movsl
imul
rorl
fisttpl
mov
xchg
in
inc
sbb
out
mov
push
or
push
sbb
jecxz
push
mov
clc
sbb
xor
out
fiaddl
sbb
and
mulb
rcrl
cli
popf
movsb
mov
and
sbb
push
mov
xchg
jo
cmp
ds
gs
lret
cltd
mov
dec
addb
xor
push
xor
cmpsl
mov
cmpsl
ret
and
int3
sbb
jg
jle
int
sbb
nop
mov
xchg
jno
in
sub
or
popf
and
ss
jbe
jmp
in
mov
dec
subb
cmp
mov
std
out
in
jp
test
imul
gs
push
mov
and
jg
inc
scas
sbb
mov
push
cld
push
test
push
repnz
rcll
cmpsb
mov
pop
xlat
xchg
pop
push
fsubrs
addr16
sti
xor
push
fsts
addl
imul
and
loope
ret
adc
or
mov
ja
pop
jmp
jmp
dec
pop
lock
aam
in
xchg
popl
repz
out
xchg
pop
stos
pop
jge
mov
add
dec
pushf
adc
mov
and
push
push
ss
and
out
sbb
sahf
sbbl
pop
sbb
sub
cwtl
lock
sbb
mov
sbb
mov
leave
hlt
and
aaa
pushf
jns
cli
inc
lahf
mov
cltd
jno
lock
sarb
cld
jb
sbb
out
jb
repz
sbb
jecxz
jecxz
clc
xor
shl
pop
insb
or
dec
adc
fucomi
push
and
jg
and
rolb
dec
push
or
mov
xchg
pop
jb
pop
mov
sbb
and
stc
pop
jmp
cmc
fmul
push
leave
std
fildll
icebp
movsl
lret
seta
inc
out
and
mov
cmpsl
ja
mov
stos
js
and
test
push
or
mov
push
mov
mov
push
testl
aaa
or
xchg
push
dec
std
xor
jl
push
adc
cmp
pop
stos
fisubrl
push
mov
push
imul
mov
aam
xlat
int
sbb
inc
lahf
jecxz
cs
inc
rcll
xorb
pop
xor
mov
sbb
jb
adc
mov
sbb
ds
jne
xor
adc
mov
add
mov
call
adc
lahf
les
loope
movsl
loop
xchg
loop
mov
cmovns
out
das
repz
lods
xchg
jbe
sbb
scas
aad
stc
das
push
test
xlat
mov
dec
es
jmp
mov
push
cmp
sub
sbb
push
sub
push
in
outsl
loopne
push
stc
testl
fstl
and
sbb
jmp
stos
out
imull
push
fsts
je
pop
lret
sbb
add
clc
cmp
lret
adc
push
fldcw
das
les
adc
imul
sbb
push
ret
xor
lcall
push
fdivl
cld
cwtl
mov
sarl
jmp
or
addr16
cmp
inc
pushf
pop
add
idivl
mov
fsts
sarb
out
divl
pop
mov
adc
adc
lock
in
inc
cmp
loopne
mov
addr16
inc
xor
jl
mov
push
repz
scas
push
xlat
scas
mov
test
lret
or
dec
gs
cmp
mov
add
in
pop
mov
sub
xor
ja
daa
adc
ret
xor
lcall
mull
test
lcall
outsb
cmc
imul
bound
xor
mov
and
adcb
pop
shl
popa
dec
push
mov
add
lods
clc
out
ret
pushf
sti
add
insl
or
cltd
mov
xchg
xor
lods
mov
pop
out
scas
jbe
pop
mov
jl
aaa
movsb
and
xor
shr
mov
sbb
jns
or
ficomps
test
call
aam
jle
andl
push
inc
sub
hlt
div
dec
xchg
sbb
dec
xlat
gs
and
or
movsl
icebp
mov
xor
dec
cmp
je
xor
cmp
outsb
fmull
inc
xchg
add
fsubrl
inc
sub
pusha
in
flds
shll
inc
scas
dec
sarl
push
adc
out
enter
arpl
leave
push
lret
cltd
in
loope
push
adc
shl
scas
fistps
jae
add
pop
jnp
test
push
es
lods
shl
lahf
pop
mov
popa
mov
or
mov
push
mov
cld
xchg
xchg
test
fwait
jmp
xchg
pop
aaa
pop
mov
es
xchg
mov
mov
cld
pop
orb
mov
popa
test
lds
mov
jl
mov
lods
scas
lods
testb
mov
hlt
mov
xchg
repz
js
lahf
jge
cmpsl
jge
js
outsl
mov
inc
inc
mov
das
out
mov
push
and
jge
push
push
jge
xor
mov
subb
scas
fnsetpm(287
mov
insl
aas
pushf
cwtl
sarb
jb
push
loopne
mov
dec
repz
aas
fidivrl
mov
nop
push
int
jo
repz
aad
into
pop
mov
or
jge
sbb
pop
jmp
es
push
lea
call
adc
out
das
fidivrl
out
push
pop
pushf
sub
xorb
inc
mov
jbe
fnstcw
or
mov
pop
pop
mov
loope
cmp
sub
dec
add
push
sbb
push
enter
sbb
iret
sbb
stos
mov
addr16
shrb
dec
mov
iret
fldt
push
jnp
js
inc
aam
cmp
rcrl
push
xor
push
lods
test
push
sbb
cmp
orl
stos
jnp
push
enter
inc
cld
fidivrl
stos
mov
stc
ret
repz
push
das
ret
adc
sub
and
and
std
mov
push
rorb
jg
or
xchg
inc
jge
mov
dec
or
lds
mov
pushf
leave
fcmovnb
pop
pop
das
bnd
negl
mov
pop
mov
test
push
testb
sbb
mov
cmp
arpl
loop
jne
inc
vprotw
ss
push
dec
cwtl
jns
dec
fnstcw
sub
outsb
sbb
or
inc
push
jge
mov
jecxz
cmp
lods
mov
xor
jmp
lret
xor
out
mov
jne
mov
incb
sbb
iret
and
xlat
cli
add
cwtl
loop
imul
lea
xor
rclb
into
cmp
jne
sub
adc
faddl
scas
xchg
and
cmpsb
adc
xor
inc
jmp
push
sbb
adc
inc
jno
xchg
dec
subl
in
in
imul
mov
les
cmp
std
mov
sub
push
dec
mov
mov
xchg
push
rorl
fcoms
xchg
std
and
sub
adc
call
xchg
xchg
jp
push
into
aas
cmpl
sub
inc
mov
pop
sar
lods
jno
adc
and
loope
nop
jno
or
stos
xchg
call
mov
sbb
push
cmp
xchg
and
xor
jmp
daa
and
or
fwait
xor
sub
jmp
inc
mov
cld
mov
cli
push
pushf
sub
testb
push
cwtl
xchg
xchg
xchg
adc
jmp
ds
ja
sub
inc
inc
ret
or
pop
xor
mov
push
sti
int
cmpsl
xor
pop
fs
add
mov
dec
mov
jae
sbb
adc
push
inc
add
push
lock
call
jge
sbb
adc
xchg
mov
jns
lret
hlt
jbe
or
inc
test
add
stos
dec
sbb
mov
pushf
outsl
push
ss
fdivrs
push
loop
scas
out
push
jg
push
fisubs
rolb
ret
adc
fstpl
rcrl
push
inc
sub
mov
ja
in
xchg
inc
cwtl
bound
mov
lods
ja
outsb
adc
pop
lret
aad
stos
mov
xor
out
xchg
jle
insl
push
cmp
es
lret
das
xchg
imul
jae
ljmp
or
push
mov
mov
pop
repz
pushf
pop
jno
lods
jbe
stc
push
stos
negl
daa
shlb
aam
sbb
das
daa
xchg
jne
jmp
lcall
jo
cwtl
mov
mov
rcrb
xchg
push
pop
test
ret
sti
inc
stos
test
mov
mov
jmp
lea
in
iret
add
add
cmp
out
jae
pop
popf
and
js
mov
inc
add
mov
cmpl
mov
adc
rol
mov
mov
pop
data16
sub
scas
push
sahf
mov
jne
in
sti
fiadds
in
sti
frstor
mov
sub
lcall
out
les
scas
pop
inc
lcall
mov
jp
clc
mov
mov
dec
dec
test
rolb
mov
stos
movsb
sbb
das
jecxz
dec
stos
mov
or
sub
and
pop
nop
addb
pusha
test
cs
inc
cs
daa
pushf
dec
xchg
movsb
mov
inc
stos
icebp
sti
out
mov
xchg
je
stos
or
addr16
xorb
jmp
fildl
shlb
mov
xchg
xchg
pop
mov
pop
push
mov
adc
rcr
insb
outsb
mov
dec
testb
xchg
push
and
inc
dec
rorl
jecxz
xchg
adc
dec
orl
mov
clc
imul
jb
sahf
leave
mov
sbb
scas
ljmp
mov
movsl
das
roll
inc
cmc
sti
mov
mov
xor
enter
inc
cmp
or
push
lods
fld
add
xchg
aas
sar
imul
mov
push
xor
xor
cli
addr16
pop
in
test
pop
adc
dec
and
and
push
les
push
mov
xor
fmull
xor
pop
ljmp
and
pusha
int3
lahf
or
imul
cmp
int
push
aam
push
jne
cmpsb
inc
xor
cmc
pop
add
sub
xor
ret
leave
fcomi
fbstp
push
add
lods
pop
xor
mov
pop
jo
fisubs
aam
shll
xchg
push
adc
mov
dec
mov
mov
dec
cld
les
fcompl
hlt
ds
fsubrs
stos
adc
in
mov
lds
in
add
insb
bound
aad
outsl
aam
and
jbe
mov
cmp
lret
adc
pushf
jns
xchg
fptan
add
int3
pop
lcall
cmp
cmp
aas
sub
es
inc
adc
adc
mov
out
cwtl
js
add
fsincos
ds
xchg
sbb
pop
dec
cmp
and
push
jl,pt
test
mov
icebp
out
cmp
ja
cmp
out
add
movsb
or
jnp
lds
outsl
pop
lret
adc
and
push
push
jle
cmpsb
adc
mov
outsl
push
test
push
xchg
mov
test
test
xor
fldt
mov
sub
insb
xchg
push
in
push
stos
inc
ds
fs
sub
test
lret
js
xor
sub
xor
inc
push
cmova
mov
add
cwtl
int3
dec
inc
insl
sbb
xor
adc
cmpsb
ljmp
sbb
rorl
pop
or
push
cmpsl
outsl
lret
push
cmp
ret
mov
mov
aas
mov
push
scas
loope
rclb
fisttpl
cli
xlat
xchg
dec
and
icebp
inc
or
out
pop
jl
jle
fwait
arpl
pop
push
out
inc
or
mov
lea
shlb
mov
add
mov
sub
inc
cmc
call
repnz
lahf
scas
fwait
pop
out
stos
inc
loope
xchg
and
mov
xchg
dec
fstl
push
dec
mov
sbb
cli
xchg
mov
sbb
pcmpeqw
clc
mov
rolb
dec
sbb
stos
dec
push
mov
test
out
pop
fidivrs
insb
push
test
or
out
adc
fidivrl
dec
jmp
xor
dec
add
lea
pushf
inc
ss
mov
sub
mov
addr16
dec
mov
inc
mov
imul
cwtl
sti
arpl
fcoms
repnz
push
loope
fnstsw
push
cmp
test
mov
sbb
pop
jb
pop
and
mov
ja
data16
xor
adc
pop
inc
or
sahf
gs
testl
test
add
or
mov
push
ds
movsl
lcall
jp
xchg
negl
stos
push
adc
loope
pop
test
fdivl
or
lahf
pop
jb
cld
leave
jns
mov
stc
jecxz
sub
loopne
push
jae
sub
loopne
popa
aas
dec
dec
ret
cmp
es
daa
pop
push
loopne
sub
xchg
repz
and
std
loope
push
xlat
aam
rcl
loope
mov
popf
cld
sub
sbb
push
push
xchg
out
mov
mov
mov
add
push
mov
mov
cli
dec
dec
xchg
es
xorl
mov
mov
rcll
outsl
inc
cmp
dec
push
fcomps
xchg
pop
add
push
bound
mov
fsts
mov
jl
and
popa
mov
add
rorl
ret
xchg
cmp
dec
fmul
inc
test
mov
je
lret
dec
sbb
mov
mov
xchg
rcll
aad
add
inc
inc
int3
sub
adc
jmp
fistpll
imul
movsl
mov
sbb
mov
das
xchg
sub
mov
insb
lahf
lods
add
scas
and
cmp
sub
idivb
and
pusha
mov
cmpsl
mov
adcl
jmp
pop
sbb
insl
mov
adc
mov
in
outsl
cmp
or
aas
xor
inc
ret
lret
mov
lret
push
and
add
fists
mov
call
outsb
mov
dec
lret
xchg
stos
add
mov
push
pop
js
inc
stos
adc
ficompl
rcll
call
jmp
mov
or
jb
pop
enter
or
fidivrs
jae
movsb
mov
in
jo
scas
aad
jge
adc
mov
add
xor
push
mov
movd
arpl
dec
nop
test
sub
enter
aad
enter
cmp
add
cs
sub
push
imul
stos
in
faddp
and
and
dec
insl
jl
cmp
xor
orl
or
jae
cltd
in
cmp
jp
pop
sub
jb
out
ds
dec
stc
popw
int
jecxz
iret
xchg
or
mov
enter
pop
out
pusha
adc
clc
jo
aaa
rcrl
lgs
xlat
cmp
push
fucomip
vmread
subl
inc
out
sbb
add
icebp
fs
in
jno
add
das
in
test
jo
ss
aam
and
jmp
jno
mov
push
push
imul
repz
mov
jmp
cwtl
adc
fisttpll
insl
mov
lods
shlb
cmp
inc
or
push
mov
ret
sub
xor
jns
arpl
lea
mov
fidivl
inc
mov
pop
or
mov
outsl
leave
js
test
cmpsl
cmp
mov
xor
dec
mov
cmp
aad
pop
insl
movsb
dec
sbb
jb
or
xchg
xchg
test
mov
mov
dec
push
sub
adc
jnp
je
in
dec
jne
push
dec
xchg
outsb
repz
popf
jae
mov
fsubrl
in
cmp
xchg
sbb
push
jns
xor
dec
sbb
inc
std
cld
push
push
cmp
mov
ficoml
lock
cmp
sub
adc
push
jae
inc
dec
bound
jnp,pt
decl
adc
push
popa
shlb
fcomps
fidivs
filds
out
and
push
sbb
push
jo
call
out
dec
test
test
daa
push
sub
or
mov
or
pop
dec
and
xchg
lea
incb
ret
mov
or
dec
sti
mov
mov
add
lods
sbb
lahf
popa
xchg
in
lret
jle
xchg
add
add
call
pop
pop
xchg
jo
hlt
lea
dec
sbb
je
cmpsl
sahf
pop
mov
push
js
aaa
and
adc
movsb
iret
lcall
cmp
or
shl
cmpsb
xchg
jo
aam
rcrl
jno
jae
xor
cmp
out
sbb
mov
and
ja
leave
sarl
mov
aaa
lahf
cmp
mov
sub
lods
das
lds
push
dec
push
data16
insl
es
ss
stc
stos
int
aaa
sub
sar
xchg
mov
inc
xchg
insb
push
push
cmp
mov
repz
mov
cwtl
pushf
inc
out
xor
ret
ficoml
and
fsubrs
dec
jecxz
jae
sub
cli
lods
push
jle
xchg
fldl
ret
add
into
leave
out
shrb
cmp
out
shrb
call
fnstcw
shrl
cmp
fcomps
sarb
scas
or
xchg
and
pusha
and
jo
pop
push
mov
add
xchg
pop
push
jb
es
add
mov
lods
cltd
mov
scas
cs
jmp
pop
sub
popf
sahf
lret
mov
cld
sub
stc
and
add
jns
scas
call
lret
call
lds
mov
pop
in
scas
stos
pop
aam
pop
imulb
std
or
xchg
ret
or
add
ds
add
xchg
out
mov
adc
mov
mov
gs
jo
pop
dec
pop
leave
and
jp
jbe
in
jnp
cli
push
xor
loope
mov
mov
pop
repnz
xchg
dec
adc
cmpsl
popa
sub
cmp
jns
insl
scas
ret
ja
das
adc
and
cli
les
jmp
dec
adc
inc
cli
or
mov
or
lahf
xor
pop
cmp
jb
mov
xor
push
dec
inc
pop
xchg
or
and
js
jmp
mov
cwtl
add
stos
dec
rcl
arpl
movsl
push
sub
pusha
ret
flds
sahf
mov
or
cmp
fldt
mov
fdivrs
mov
mov
add
mov
or
std
cmpsb
push
nop
fs
mov
test
jno
loopne
mov
mov
rcrl
out
push
mov
aas
jae
mov
shl
lret
loopne
int
out
mov
ret
cwtl
mov
or
outsl
data16
jns
in
mov
arpl
aad
and
ss
push
fisubrl
inc
add
mov
cmp
int
nop
pop
fxch
loope
mov
or
loope
aam
sbb
push
inc
fiadds
inc
sahf
cmpsl
clc
adc
jp,pn
mov
scas
fildll
mov
push
jp
sub
loop
fistl
add
cmp
push
insl
sbb
shl
movsb
push
lret
pusha
iret
cld
lret
add
and
and
ljmp
and
adc
jge
push
movsl
iret
jae
push
lds
fsubrl
mov
ret
in
inc
gs
inc
fwait
sub
fstl
sbb
sub
movsb
call
iret
pusha
imull
clc
int3
jp
rorb
pop
add
mov
mov
pop
ljmp
cld
mov
pop
mov
movsl
add
sub
shll
ss
mov
popa
sahf
fdivs
inc
jmp
cltd
push
lret
push
mov
in
dec
cltd
cmp
rorl
mov
cmp
movsb
add
add
xor
add
enter
lea
into
jne
imul
xor
jecxz
inc
pushf
mov
inc
lods
mov
pop
dec
or
xor
filds
in
push
sub
stc
adc
xor
inc
add
js
inc
add
push
xchg
bound
sub
nop
cli
xchg
push
mov
rol
push
aas
sbb
add
fdivr
inc
inc
int3
inc
mov
out
mov
xor
sbb
imulb
cmp
movb
ss
pop
scas
insl
or
pop
lret
add
xor
adc
nop
inc
inc
push
jb
push
jmp
fmulp
or
icebp
lock
ds
jbe
popf
adc
jecxz
add
pop
sar
add
insl
lock
sub
inc
and
popa
push
jle
out
mov
xor
mov
or
daa
mov
sbb
ss
sahf
jmp
jecxz
sub
and
jecxz
jo
mov
gs
cmc
ret
and
call
movsl
scas
js
nop
sti
sub
and
push
ss
popa
cltd
dec
movsb
in
mov
lds
inc
lock
mov
repnz
mov
repnz
and
stc
sub
in
jecxz
rcl
adc
jbe
jg
sbb
out
enter
test
pop
jns
sbb
xor
arpl
gs
lcall
addr16
and
add
dec
xor
lret
dec
jmp
cmp
jns
test
addb
into
adc
cwtl
psllq
pop
mov
jecxz
ljmp
push
scas
push
rcr
dec
aad
inc
mov
loop
pushf
lret
or
jno
ffree
push
lcall
and
rorl
or
mov
ljmp
scas
leave
in
sahf
dec
push
and
mov
cmp
in
repz
clc
pop
jmp
mov
cmp
sti
loope
adc
lret
cs
lcall
sub
daa
inc
sbb
divl
inc
sub
rcll
pushl
xchg
idivl
jle
imul
mov
lods
insl
pop
cltd
lahf
outsb
inc
cs
inc
into
ljmp
sub
sbb
jno
xor
push
xchg
and
xchg
aaa
mov
movsl
imulb
xchg
rsqrtps
push
sbb
jnp
shrl
repz
notb
jns
cmpsl
sub
ret
insb
inc
mov
subl
lods
mov
jecxz
xor
cmp
out
push
popa
xor
fcmovbe
or
xchg
xchg
cwtl
mov
rolb
adcb
xor
fdivrs
or
sub
insb
dec
push
fcom
sbb
mov
dec
imul
or
repnz
and
out
cmpl
ret
xlat
push
cs
pop
xchg
push
jno
imul
push
cmc
mov
dec
int3
add
push
jecxz
fdivrp
jbe
test
movsb
test
fs
shufps
jmp
xor
add
aas
and
push
lret
push
dec
push
rol
insl
pop
ret
mov
lret
cwtl
outsl
sbb
fwait
and
cmp
add
adc
xchg
cmp
fwait
leave
fidivrl
sub
cltd
xchg
pop
pop
in
dec
repnz
or
xchg
loop
mov
pop
pop
data16
test
pop
sub
fidivrl
out
cs
mov
push
mov
mov
out
aam
out
ficomps
adcl
add
cmp
xlat
fists
adc
aas
insb
aaa
iret
jmp
cmp
imul
aas
xchg
add
aam
xchg
leave
inc
fildl
orl
mov
pop
movsb
xchg
inc
iret
iret
mov
insl
and
sub
cmp
jns
push
push
leave
jno
adc
cs
aad
mov
xchg
jecxz
dec
or
mov
cmp
loope
cmp
arpl
mov
pop
ror
shrl
mov
mov
add
xlat
jecxz
mov
lds
fiadds
pop
int3
xchg
mov
in
or
pop
fstl
popa
in
rcll
cmp
mov
fdivl
in
ja
aaa
pop
add
mov
xchg
xchg
sub
test
dec
and
or
aam
xchg
scas
in
repnz
stos
imul
jg
lea
mov
dec
shl
xor
gs
or
outsl
or
cmp
je
lods
out
sub
mov
out
ror
fst
pop
inc
rcr
fadd
int
ds
wbinvd
in
repz
adc
and
pop
imul
mov
lcall
int
sbb
push
mov
jecxz
cld
rol
cltd
sbb
xchg
pop
out
inc
les
jp
ret
push
imul
mov
shll
jle
jo
aad
sti
mov
mov
sbb
popl
sbb
or
inc
movsb
mov
in
fsubl
sub
inc
pop
mov
ja
pop
mov
enter
fmul
dec
xlat
popf
lock
int
dec
cmpsl
ret
jne
add
adc
sub
jecxz
movsb
adc
sbb
cld
or
lds
dec
add
fidivs
sbb
int3
lds
mov
push
cmp
or
test
jmp
movsb
or
stos
ljmp
cmpsb
or
mull
loop
aam
mov
ljmp
or
fsubr
scas
and
mov
testl
pop
dec
mov
sbb
fdivp
push
mov
shlb
pusha
sbbl
rcl
push
push
cs
dec
xchg
test
mov
sbb
and
push
push
dec
mov
loopne,pt
pop
sbb
cmp
inc
push
jge
xchg
sub
popf
and
enter
jno
popf
shrb
int3
and
inc
lods
jl
jge
mov
jae
arpl
subl
insl
orl
stos
or
imul
jne
mov
in
or
fisubs
add
pop
arpl
mov
xchg
repnz
nop
dec
not
mov
dec
sub
inc
mov
aam
push
adcl
mov
lret
js
inc
rorl
ret
xchg
in
jmp
fdivl
shrl
fstpl
lods
push
cmp
fstps
gs
or
adc
icebp
xor
sahf
jge,pn
aam
push
inc
or
sbb
push
sub
xor
dec
sti
pop
lret
jecxz
movsb
jbe
adc
orl
lock
test
scas
or
pop
dec
cld
or
cmc
icebp
popl
nop
inc
xlat
fistps
inc
xchg
push
in
imul
leave
ljmp
mov
nop
imulb
lock
sub
icebp
out
shrb
stos
mov
insl
sub
movb
fisubs
je
jne
mov
cmp
clc
mov
or
pop
push
xor
scas
xchg
enter
les
loope
jae
lahf
xchg
xor
mov
inc
lahf
hlt
data16
js
cmp
sarb
mov
adc
xchg
inc
or
hlt
jne
iret
loope
fimull
xchg
cmpsl
mov
iret
cli
test
pop
and
mov
push
mov
pop
clc
push
mov
aas
das
jae
add
pop
xchg
mov
sbbb
bound
notb
stos
jo
sbb
lods
subl
mov
mov
inc
xchg
fldenv
mov
imul
addb
push
add
ljmp
mov
cmc
roll
insl
pop
jl
faddl
gs
shl
dec
and
pop
lods
stos
and
xchg
jbe
mov
inc
ds
out
dec
loopne
push
adc
stos
mov
decl
mov
jge
push
push
imul
fbld
adc
mov
jge
lcall
lcall
jbe
jmp
or
or
pop
push
into
cmp
sarl
cmpsl
les
add
lahf
popf
adc
inc
mov
movsl
mov
push
fninit
enter
jns
popa
pop
jno
cmpl
stos
fstpt
inc
bound
ss
sub
push
xchg
add
lods
push
xor
lret
movsl
arpl
adc
pop
or
insl
in
mov
ficomps
je
aad
mov
adc
daa
sub
lret
jns
mov
and
pushf
mov
sub
or
mov
and
adc
lcall
or
test
jg
sahf
cmp
and
in
test
dec
sarb
jae
jb
dec
aam
xlat
mov
call
sub
sub
cmp
jle
inc
sbb
lret
mov
mov
jle
inc
lock
mov
jnp
or
mov
jno
sbb
sbb
xchg
jb
push
xor
mov
je
cmc
sbb
fsubr
into
in
jge
add
icebp
loope
xchg
or
div
ret
push
lock
push
pop
pop
adc
loopne
imul
and
popa
xchg
dec
sbb
cmp
stos
xchg
sbb
adc
mov
xlat
xchg
sub
call
addl
es
xchg
xchg
in
cmp
mov
cmp
adc
push
shll
dec
pushf
and
inc
icebp
push
lea
das
jno
in
fistpl
mov
jge
push
inc
push
lock
in
imul
mov
dec
sub
pop
outsl
cmp
cmp
pop
test
jnp
cmc
lcall
inc
add
cltd
jne
aas
subb
xchg
jg
nop
cli
sub
into
cmp
jle
cmpsb
pusha
and
cmpb
out
rcrb
test
movsl
sbb
pop
cld
shr
inc
rcll
ror
jo
cmp
test
cmp
in
mov
inc
push
sub
inc
das
fisubrl
das
fwait
testl
bound
pop
jmp
or
imul
repnz
jno
repnz
adc
sub
scas
fwait
dec
push
shr
sub
sti
fistps
push
outsb
sbb
in
mov
adcb
pop
rcl
mov
lods
loope
repnz
adc
fwait
mov
aaa
inc
aas
dec
fdivrp
jne
and
jp
mov
inc
xor
outsb
in
sub
xchg
adc
dec
mov
fs
shll
clc
or
push
loop
ja
push
hlt
push
add
jb
xor
sbb
and
fldenv
cmc
test
js
ret
or
repnz
mov
jno
jno
pop
or
dec
mov
push
call
lds
xchg
sub
aad
inc
das
pop
jne
push
inc
cmp
stc
repz
outsl
ja
sub
cwtl
iret
xchg
in
xor
push
dec
scas
sarb
int
cmp
adc
xor
adc
xchg
add
mov
in
push
add
inc
movsl
mov
sub
inc
push
pop
popf
cli
pop
mov
pop
push
push
pop
pop
loopne
in
inc
vmread
int
aaa
xchg
movsl
mov
test
push
enter
rcrb
loop
mov
or
movsb
and
xchg
lret
clc
jge
ret
xor
sub
aas
and
add
lahf
or
cmp
jo
mov
push
hlt
inc
mov
je
pop
idivl
dec
push
movb
xchg
fbld
push
fcoms
sub
and
lea
and
xchg
mov
fisubs
lea
out
jo
mov
jmp
and
push
fnstenv
cmp
jno
push
pop
lods
rol
rorl
cmpsl
or
stos
mov
adc
xorb
mov
aas
push
rclb
lock
mov
rorb
mov
mov
xlat
or
mov
fs
pop
ss
push
lahf
mov
jl
gs
pop
sbb
and
fistl
repnz
bnd
loopne
or
in
cmc
pop
daa
or
sbb
push
pop
pop
mov
mov
adc
dec
and
add
add
mov
outsl
out
add
sarl
scas
call
stos
xchg
sbb
pop
mov
xchg
insb
mov
mov
inc
add
mov
jge
notb
xchg
push
dec
inc
mov
aad
iret
enter
dec
fimull
sbbb
xchg
xchg
add
push
xor
rcll
pushw
bound
jmp
mov
les
cmpsl
cmp
rcr
sbb
sbb
sarb
xchg
cmp
jmp
loopne
dec
xor
sbb
sbb
shrl
jbe
jecxz
sub
mov
cli
lcall
cmc
in
and
inc
xor
imul
and
inc
jecxz
push
jecxz
roll
nop
sbb
lods
das
leave
test
xchg
lret
lods
lret
imul
into
push
mov
mov
gs
xor
fistl
add
leave
inc
movsl
mov
sbb
js
xlat
lods
popa
mov
pusha
mov
push
add
in
mov
inc
loopne
mov
out
negl
xchg
cmp
mov
invd
pop
add
mov
insb
xor
sub
cmpsb
divl
sbb
aad
cmp
sbb
xchg
or
les
xchg
arpl
mov
int
sbb
arpl
lock
outsl
faddl
sub
cmc
inc
lods
inc
mov
xchg
add
cmc
std
lock
lock
movsl
bound
adc
mov
subb
push
cmp
repnz
mul
sahf
push
cmp
sub
insl
stos
mov
mov
int3
xor
outsb
arpl
sub
mov
je
cmp
int
popf
xchg
jg
or
push
dec
in
push
jg
mov
pop
inc
push
xor
pop
dec
cmpsb
pop
cld
and
repnz
inc
inc
dec
pop
and
repz
fcoml
adc
jbe
jb
lods
push
mov
xchg
arpl
ljmp
lods
stc
in
sub
sub
arpl
stos
jbe
test
sub
out
pop
xchg
pop
mov
pop
lret
jno
pop
cmpl
out
pop
jne
inc
cmp
loope
inc
adc
inc
or
inc
adc
mov
add
lret
rcrb
mov
lods
andl
fimuls
rcrl
sbb
inc
jnp
pop
loope
fwait
push
dec
and
mov
dec
leave
inc
leave
push
sbb
adc
push
sub
push
fwait
shlb
and
jae
mov
dec
or
or
xor
stos
inc
inc
rolb
inc
mov
cli
xchg
mov
sar
mov
lahf
out
mov
jno
sahf
stos
mov
leave
push
cld
orb
mov
jo
fstpt
mov
and
lcall
inc
inc
jns
sahf
fiadds
mov
push
mov
mul
dec
les
xor
mov
mov
pop
scas
xor
mov
es
inc
mov
leave
mov
push
lahf
dec
xlat
loop
dec
outsb
js
pop
aad
rol
dec
xchg
out
sbb
sub
cmpsb
or
push
ret
fcmovnb
mov
adc
jmp
push
cmpsb
push
daa
aas
cmp
pop
inc
lds
ja
pop
popa
cmpb
or
setnp
mov
dec
lahf
faddl
jo
loopne
loope
sub
les
dec
mov
sti
adc
xchg
inc
mov
mov
cmp
mov
movsb
mov
sbb
mov
jne
cltd
mov
inc
lods
rcrw
test
mov
in
loope
and
ds
sbb
add
xor
ja
ret
pop
mov
push
add
out
cmp
test
int3
push
loop
mov
in
cmpl
fsts
sub
aad
mov
mov
sbb
fucom
orb
or
pop
push
push
pop
sbb
out
pop
xchg
or
mov
jmp
sub
and
imul
cmpl
and
push
daa
xor
loop
rol
gs
cld
aam
mov
cmpsl
adc
lcall
cmp
fcomi
push
xchg
xchg
mov
push
push
pop
popa
dec
pop
jge
test
mov
pop
jl
jl
pop
xchg
xchg
push
mov
ja
mov
syscall
notl
pushf
mov
movsb
inc
pop
mov
rcl
pop
frstor
push
sbb
popf
bound
xlat
in
mov
push
dec
push
pop
test
mov
mov
dec
dec
add
sub
mov
aad
mov
idiv
pop
loopne
test
mov
mov
test
shl
jne
cmp
mov
jb
cmpb
aam
sbb
sub
mov
mov
out
pop
inc
or
adc
adc
mov
mov
mov
cmp
mov
or
imul
fnsave
sbb
pop
jno
dec
dec
jg
cltd
je
jb
jle
mov
fwait
mov
cmpsl
cltd
mov
nop
add
shll
scas
pop
mov
jnp
push
shll
imul
call
cltd
jg
sub
push
adc
fildl
fistpll
sub
sbb
inc
adc
iret
out
cmp
jae
dec
add
cmp
dec
mov
int
mov
hlt
lock
mov
pop
pusha
jg
or
mov
pop
les
mov
in
bnd
arpl
pop
sub
push
cmp
cli
ss
inc
pop
xchg
mov
rorl
add
mulb
fisubs
js
repz
jno
jb
push
and
jo
push
in
and
push
insl
test
push
cli
mov
outsb
xor
sbb
sbb
and
stc
nop
sti
mov
arpl
xor
gs
inc
sbb
lea
pop
in
push
sbb
sub
shrb
lds
ret
jmp
orb
sbbl
in
jmp
imulb
loopne
sbb
pop
les
push
scas
xor
jp
xchg
call
cmp
sub
ljmp
ja
mov
nop
or
adc
ds
mov
push
mov
pop
mov
jbe
in
out
mov
sub
xor
jecxz
out
aaa
sub
incl
sbb
sub
and
jbe
jbe
sub
jo
mov
into
mov
push
fnsave
out
vaddpd
add
xlat
adc
jmp
jmp
sbb
mov
xor
xlat
cmc
mov
inc
filds
xor
cld
xchg
mov
xor
loop
jo
push
cmp
push
cmp
cs
les
popf
fisubl
sub
cmp
xchg
fidivrl
sarl
rclb
mov
pop
arpl
lock
cmpsl
and
negl
sub
and
push
cmp
lcall
adc
lahf
negb
pop
out
xor
mov
clc
aam
dec
xor
adc
out
shll
nop
icebp
xchg
and
pop
movsl
mov
mov
inc
and
es
sbb
jle
lods
inc
inc
aad
pop
ss
xlat
add
stos
aas
in
inc
dec
fnstenv
adc
push
or
lock
xchg
insb
call
sbb
dec
stos
jne
push
xchg
cmp
sub
push
es
jl
movsb
mov
outsb
in
scas
mov
imul
lcall
push
scas
sub
insb
add
repz
cmpsl
dec
cltd
sbb
ds
in
pushf
call
xor
sub
pop
mov
mov
jmp
mov
cwtl
mov
rolb
inc
sbb
pushf
cmpsb
push
mov
pop
cmp
ja
fnstcw
push
insb
out
mov
cli
sub
xrelease
push
es
mov
ja
inc
cmp
and
addl
mov
dec
xorb
xchg
mov
xor
out
xchg
flds
inc
lahf
fcmovbe
out
add
shrl
lods
and
xchg
sub
adc
sub
mov
add
pop
sbb
mov
pushf
icebp
adc
mov
mov
daa
std
pop
lahf
jb
aad
insl
test
xchg
outsl
add
jnp
jns
mov
jb
sbb
sub
adc
mov
scas
insl
add
mov
inc
out
das
mov
adc
adc
and
push
ss
out
push
xor
lret
addr16
cs
xchg
sub
aaa
xor
mov
std
jnp
out
adc
inc
mov
dec
and
xchg
jbe
call
mov
jbe
fisubs
cmpl
pop
push
jle
jae
mov
ret
ja
adc
mov
cld
adc
dec
and
cld
pop
popa
imul
push
cmp
push
mov
mov
pop
gs
xchg
aad
pop
loopne
call
pop
xor
mov
xchg
les
ja
addr16
or
in
ret
pop
dec
or
pusha
mov
xchg
icebp
jnp
lods
jno
mov
repz
mov
imul
pusha
mov
mov
test
movsl
mov
add
ss
dec
out
mov
iret
outsb
imul
cmp
lcall
pushf
or
lods
movsb
cmpsl
dec
sahf
sarl
dec
jecxz
inc
fdivs
fs
fcoml
fsubp
mov
fs
add
jns
dec
shrl
jle
aad
lret
jge
sub
mov
xchg
mov
outsl
and
adcb
push
or
pop
insl
cmp
insl
aaa
daa
sub
out
shlb
sbbl
test
add
into
sbb
dec
mov
fstp
xchg
fists
data16
push
sbb
xchg
es
mov
mov
stos
stc
sub
or
jmp
adc
sbb
inc
or
dec
filds
popf
cmp
pop
fsubrs
add
int
jmp
in
add
pushf
cmpsb
cmp
adc
jecxz
jne
jp
sub
add
addl
add
stos
cmp
fidivrs
stos
push
cmpsl
sbb
dec
mov
test
pop
mov
xlat
push
loopne
jmp
imul
int
or
push
cltd
imul
mov
test
add
sub
push
pop
les
mov
inc
push
sbb
cmp
jae
pop
xor
inc
sub
xchg
scas
push
mov
hlt
daa
in
xor
lock
xor
jnp
xchg
rcl
test
stc
nop
mov
push
pslld
nop
fcmovb
sub
int3
shll
jmp
mov
es
mov
push
cmp
insl
mov
xor
cmp
fdivrs
lods
cmp
insb
loope
movsb
xchg
rdpmc
notb
dec
add
imul
pop
jmp
shll
loop
mov
or
fwait
mov
xor
aas
add
aas
sahf
or
xchg
and
jg
jns
cld
jle
fisubrl
xor
pusha
jns
roll
es
sub
mov
mov
and
fimull
adc
repnz
mov
int3
xor
es
mov
pop
pop
push
push
lret
mov
fdivs
cmpsl
pusha
pop
ret
mov
xchg
dec
subb
pop
mov
clc
jnp
cmp
push
ret
iret
ja
lds
cmp
jno
dec
mov
arpl
insl
push
dec
fidivrs
or
dec
xor
push
fsubr
sti
ja
and
fstp
or
aam
addb
scas
adc
mov
xor
sbb
inc
mov
xchg
je
scas
cli
adc
aam
add
mov
loop
js
mov
fs
xor
loop
jo
movsb
rcrl
aaa
cmp
orl
lds
mov
and
mov
and
inc
cli
dec
xchg
mov
cmp
or
cmp
aad
scas
push
jmp
je
out
je
add
sahf
add
and
lret
lret
cmp
popf
scas
or
jg
subb
inc
fs
shll
xchg
roll
sub
mov
imul
mov
mov
ret
loop
push
jge
pop
clc
pop
jbe
xchg
ret
lahf
pop
mov
in
cmp
push
adc
jns
xlat
adc
mov
and
push
scas
inc
pop
int
inc
jae
hlt
xchg
xor
fsubs
js
scas
lods
pop
and
add
cwtl
xchg
jge
mov
sub
cmpsl
orb
inc
cltd
sbb
mov
inc
imul
inc
dec
xor
pop
sub
mov
out
sbb
cwtl
ljmp
jae
imull
xchg
inc
dec
adc
sarb
mov
adc
xor
clc
jns
shr
mov
add
loop
sub
in
mov
and
xor
sub
ljmp
lret
enter
mov
pushl
ss
pop
lret
add
lret
aad
jae
clc
push
pop
mov
jecxz
enter
mov
xchg
out
add
enter
sbb
test
xor
pop
mov
pop
jb
mov
out
sub
inc
add
mov
sub
movsb
push
test
or
scas
in
data16
sub
repnz
dec
or
add
stc
mov
cli
ret
out
lods
jno
insl
pop
int3
mov
cmc
cmp
xchg
lret
add
in
loope
cmp
jge
push
cld
xchg
mov
fs
xchg
adc
jns
dec
jne
xor
inc
mov
or
mov
inc
js
fdivs
lods
stos
jl
sub
arpl
jge
sbb
ret
inc
fldenv
pause
push
mov
or
int
mov
pushl
daa
es
movsl
adc
xchg
inc
mov
aad
sub
or
push
xchg
xor
dec
sbb
fidivrs
mov
xchg
fwait
sbb
xchg
mov
test
je
std
inc
jbe
push
xchg
popa
mov
cmc
jb
cmp
inc
adc
cmp
sti
lret
jns
mov
shrb
aas
push
push
arpl
cmp
jb
dec
das
push
jge
jp
mov
sub
and
sub
mov
push
int3
pop
pop
jo
sbb
inc
shl
sbb
scas
mov
pop
jbe
or
inc
lea
adc
outsb
lods
inc
inc
adc
int
cltd
mov
call
and
dec
sbb
lahf
popa
fidivl
inc
cmp
sub
js
push
sbb
mov
cld
shlb
test
dec
cmp
bound
xor
jecxz
ja
daa
cmp
js
neg
adcb
or
xchg
mov
scas
movsl
std
dec
cmc
cmp
rcll
pusha
rclb
rclb
shlb
dec
push
jge
das
andl
roll
dec
sub
sbbb
xchg
aad
dec
outsb
je
mov
aad
insb
pop
dec
in
in
mov
ret
add
dec
jecxz
and
mov
sub
ss
sbb
add
xchg
dec
sbb
repz
aam
test
add
icebp
push
jne
adc
imul
lcall
cmp
inc
push
jmp
push
rolb
int
repz
insl
push
xlat
ret
add
add
pushf
pop
mov
mov
sub
sti
add
imul
add
sub
mov
push
in
inc
add
sub
xor
adc
fimull
rcrl
hlt
sub
and
jl
into
cmp
add
pushf
push
in
lret
out
cmpsl
xchg
mov
cmpl
pop
lods
jle
pop
stos
aad
negl
sti
adc
std
jg
mul
cmp
dec
and
aam
pop
sbb
mov
sbb
xor
xchg
iret
ja
jne
popf
sub
xchg
test
aam
iret
rolb
add
jb
sbb
out
and
js
cmp
inc
sbb
jno
cwtl
jbe
pop
pop
loope
mov
push
ljmp
repnz
bound
mov
mov
pop
and
dec
sbb
pop
mov
xor
or
ds
popf
ss
xorb
jge
bound
aaa
jb
pop
pop
clc
sub
xchg
lret
dec
dec
xor
shlb
fadds
push
mov
inc
icebp
mov
ror
mov
inc
inc
outsl
xor
jnp
fidivrl
pop
xchg
loopne
aam
roll
rclb
pop
inc
sbb
loope
jo
shrl
mov
cld
and
dec
mov
mov
push
jns
dec
shrl
jnp
push
adc
shl
movsl
lcall
fidivrl
jp
repnz
test
in
mov
loopne
fwait
call
jl
repnz
inc
mov
sub
loopne
inc
dec
pop
mov
adc
sub
insb
andnps
adc
mov
jne
and
xchg
loop
lods
addr16
or
aas
ljmp
jmp
jno
jne
lods
cmp
stos
dec
mov
mov
out
pop
or
mov
fdivr
mov
loopne
lds
stos
popa
js
lea
push
mov
loop
xlat
mov
jg
and
sub
outsb
cwtl
xchg
mov
and
xchg
xor
sarb
mov
jo
dec
adc
adc
adc
dec
pop
addr16
ret
pop
mov
adc
xchg
aam
dec
jg
test
pop
push
int
lahf
nop
lods
idivl
xchg
dec
rolb
add
push
pop
pop
inc
pop
dec
xorl
test
jp
pop
push
repnz
pop
mov
and
push
or
adc
and
fwait
push
out
mov
dec
xor
mov
inc
mov
stc
movsl
imul
loopne
add
in
push
lcall
lcall
lahf
inc
scas
jns
sbb
in
dec
xchg
cmpsl
paddusw
add
inc
lds
lahf
test
arpl
jecxz
mov
jge
sbb
and
push
sub
add
jnp
notb
cwtl
lods
mov
dec
xlat
cmp
pop
fwait
pusha
mov
jp
scas
mov
shll
out
mov
push
sbb
ret
sahf
into
loope
sti
test
out
es
adc
cmp
jmp
or
ficompl
ljmp
cmp
test
fstpt
mov
dec
push
push
popf
maxps
jl
or
xorb
outsl
sbb
sbb
mov
sub
jmp
stc
mov
mov
movsb
lods
lcall
add
ret
test
sub
lods
jb
in
das
cltd
addl
mov
jmp
pusha
add
aaa
push
cmp
fistpl
cs
ljmp
mov
xor
mov
sub
push
cld
adc
repz
aam
and
sub
push
pop
rol
mov
mov
or
xor
negb
push
and
movsb
inc
cmp
inc
jb
push
nop
jle
xchg
in
gs
repz
cmp
cmp
lds
fyl2xp1
xchg
pop
lcall
sbb
ficompl
or
stc
mov
cmp
mov
scas
inc
mov
sbb
in
or
js
or
push
aaa
cli
sbb
leave
ljmp
fldlg2
insb
stc
mov
ss
cmp
aad
and
faddp
dec
jne
ss
jg
fchs
insl
jbe
loope
adc
fisttps
xchg
add
out
imull
movl
aas
insl
pop
and
fadds
out
xchg
jge
fnstsw
mov
mov
cs
popl
stc
and
std
or
cwtl
out
mov
arpl
imul
mov
cmp
xor
into
loop
out
aam
inc
or
shlb
xchg
pop
stos
cmpsb
popf
dec
mov
test
stc
std
lods
cmpsb
nop
fidivrl
jno
mov
loop
cmp
dec
sbb
inc
das
inc
outsb
inc
jnp
and
cmc
mov
xor
xlat
mov
push
sahf
loope
cmp
repnz
addl
dec
ret
mov
jne
xchg
ja
xchg
sub
cmp
lret
mov
dec
jmp
jno
int3
cltd
in
mov
loopne
pop
or
daa
sahf
adc
bound
shrb
std
cld
or
xor
mov
cmpsl
xchg
and
fwait
and
xchg
repz
scas
lret
sbb
iret
orb
in
addl
gs
fwait
scas
es
ds
jns
push
xchg
sub
iret
cmp
or
cltd
mov
test
sbb
or
push
adc
push
xchg
push
inc
insl
sbb
add
sbb
cmp
jno
outsl
jge
ret
out
rcrl
jp
jg
insb
aam
popf
popa
imul
inc
jno
das
cwtl
xchg
daa
pop
mov
into
and
jl
imul
adc
notl
sbbb
fwait
push
jp
inc
xchg
mov
adc
lea
and
xor
out
xchg
or
lea
inc
lods
or
inc
les
ret
adc
xchg
xchg
frndint
stos
xchg
in
loop
mov
sub
mov
je
xchg
in
gs
add
repnz
clc
pusha
xchg
loope
inc
xchg
fld
lret
push
je
sbb
xchg
in
mov
pop
and
dec
adc
mov
unpckhps
jmp
xchg
clc
push
int3
mov
cmp
add
sti
das
cltd
dec
movsb
dec
repz
mov
popa
xchg
mov
or
rcll
pop
push
jmp
mov
mov
mov
push
out
in
dec
adc
cmp
mov
sbb
daa
add
fldl
arpl
pop
mov
imul
int
jno
jp
xchg
iret
and
sub
jg
jns
add
dec
jae
fdivr
fldl
push
push
or
pop
cmp
stc
pop
or
js
repnz
mov
orl
mov
icebp
adc
gs
bswap
add
in
ret
mov
mov
inc
scas
pusha
mulb
or
or
idivb
loop
cmp
fwait
or
or
lods
pop
jl
jle
in
fisttps
popa
mov
jle
ss
add
cmp
cli
in
jle
xchg
cmp
cmp
push
fdiv
outsb
mov
cmc
pop
scas
out
in
jp
sub
pop
fwait
ss
push
cs
cmpsl
xchg
shll
jno
mov
pop
jb
dec
cli
xor
or
jmp
in
push
loope
fcmovb
mov
mov
xchg
insl
mov
pushf
insb
cmp
xlat
xchg
cmpsl
addl
or
inc
call
mov
push
pop
sub
int3
ret
repz
fiaddl
xchg
sub
ss
lahf
mov
mov
repz
adc
cmc
jb
leave
ss
aad
sbb
mov
cwtl
ljmp
push
orb
xor
cmpsl
lods
cld
dec
les
aas
inc
jnp
icebp
repz
in
sbb
jns
in
push
mov
movsl
push
sarl
jg
out
push
add
testb
xlat
aad
call
lcall
loope
and
aam
cmpsl
xor
ficoml
xchg
mov
cs
jne
jne
es
mov
sbb
imul
out
adc
pop
test
rolb
mov
mov
es
xlat
fs
mov
add
bound
out
mov
or
mov
dec
addr16
add
xor
retw
push
out
fs
xor
xor
mov
mov
cmp
xchg
dec
fwait
jmp
das
jbe
paddusw
aas
jo
inc
daa
cltd
frstor
daa
sbb
adc
loopne
jmp
es
and
push
testl
and
sub
cld
cs
adc
lahf
xlat
sti
inc
lahf
sbb
push
in
push
aaa
and
jmp
sbb
lods
or
push
and
loop
adc
pushf
test
dec
pop
idiv
sti
mov
orl
loope
ret
es
cmp
bound
je
out
add
and
sub
mov
shrl
mov
and
mov
icebp
push
inc
fidivrl
xchg
aad
inc
nop
ret
mov
pop
xchg
imul
pop
cmp
mov
xor
stc
sti
pop
cmp
lock
ret
or
cmp
ret
inc
jbe
jg
or
clc
xor
dec
mov
nop
pop
test
xor
xchg
fmuls
mov
mov
mov
lret
cltd
je
loop
in
xor
sarl
pop
ret
fistl
mov
stos
jp
stos
mov
jae
inc
test
outsb
push
cs
sbb
iret
negl
jg
fildl
cmp
mov
stos
or
inc
xor
cmp
cmp
mov
cmc
mov
mov
popa
out
shlb
arpl
and
push
xor
inc
aas
and
push
or
cmpsl
ljmp
in
hlt
adc
repz
dec
jl
xchg
mov
sbb
cmp
scas
rorl
daa
pop
sarb
sarb
test
imul
xchg
inc
mov
xchg
dec
jecxz
push
mov
cltd
aad
pop
push
stos
je
lods
rcrl
je
test
mov
fwait
push
scas
or
mov
add
and
in
or
cmpsl
cmc
cwtl
sbb
mov
cwtl
repnz
mov
xor
adc
fcompl
lahf
fldl
sbb
sbb
jb
dec
push
pop
dec
pop
jg
xlat
in
mov
lods
clc
sahf
in
mov
insl
cmp
add
fisubrl
xchg
test
daa
or
add
popf
out
mov
ret
jo
lret
xor
lcall
ss
xchg
cmp
push
sub
into
js
sbb
fcmovnu
incl
mov
cs
lods
daa
push
jno
frstor
mov
dec
lahf
addl
mov
cltd
stc
dec
push
mov
push
inc
repnz
sbb
push
aas
call
mov
and
mov
les
bnd
dec
push
push
push
pop
push
cmpsl
and
and
push
cmpsb
fmull
mov
test
xor
and
insl
and
jp
jmp
mov
xchg
pop
sbb
mov
xlat
arpl
and
mov
mov
shl
cmpsb
cmpsb
mov
lret
aam
xor
lret
mov
inc
xlat
mov
pop
xchg
xchg
fisubrl
inc
int
popa
mov
mov
js
ja
ja
fst
daa
cmp
pop
pop
adc
push
xchg
jbe
aad
push
mov
pop
or
pop
mov
cmp
das
add
lods
dec
lret
or
or
call
push
bound
sti
add
push
cmp
loope
or
out
fcoms
mov
fs
push
xor
fwait
mov
sub
sbbb
and
xor
lock
dec
in
xchg
ret
jnp
xchg
mov
jb
loope
mov
mov
ja
jns
sbb
mov
sub
mov
fidivrs
cs
in
movsl
mov
sbb
cmpl
dec
aas
in
push
fbld
sub
test
aam
mov
jo
pop
push
fucomip
jmp
jb
push
or
jg
lea
pop
xor
bound
pop
push
mov
lret
push
mov
pop
jl
into
push
lds
imul
dec
aad
mov
jmp
imul
mov
stc
test
popa
mov
sti
fisubl
ret
jmp
and
out
and
mov
imul
repnz
push
mov
add
sub
adc
pop
pop
cmpl
inc
and
push
fsubl
push
outsb
cmp
movnti
adc
std
cli
test
cmp
std
and
inc
jo
mov
repz
push
lahf
sub
jne
icebp
std
sub
mov
fsubr
sarl
dec
pushf
test
xlat
aam
push
or
imul
cmp
push
movlhps
je
dec
lds
movsl
je
test
data16
sahf
mov
rclb
mov
xchg
inc
mov
pop
outsl
ret
fs
or
movsl
push
jge
xor
ja
and
dec
dec
incl
out
cmp
adc
cmc
cmp
int
dec
inc
or
mov
repz
insb
out
mov
push
push
adc
push
dec
dec
or
mov
sbb
fnstenv
mov
jg
dec
cli
sbb
pushf
mov
lret
fwait
or
lds
leave
push
fwait
pop
icebp
and
mov
repnz
mov
out
mov
icebp
push
ds
jle
imul
pop
mov
out
pusha
in
xor
sbb
in
ret
push
pop
sub
lret
sub
push
iret
lret
cmp
or
clc
adc
add
push
xchg
ljmp
xchg
mov
insb
dec
or
jmp
test
push
xor
hlt
fadd
pop
add
rcrl
nop
bound
loopne
aaa
xchg
and
xchg
sbb
in
cmp
es
daa
mov
movsl
icebp
mov
add
xchg
enter
jbe
and
leave
in
jo
and
adc
mov
dec
and
mov
inc
dec
or
adc
jbe
mov
xchg
incl
jnp
sbb
dec
iret
adc
sbb
mov
test
jp
in
sbb
loop
mov
std
xchg
fildll
shl
mov
mov
movsl
cmp
dec
pop
push
ds
pop
repz
bound
mov
mov
sbb
lds
ret
push
mov
mov
js
inc
inc
lods
fbld
stos
and
mov
jp,pt
ss
mov
pop
call
pushf
fmull
inc
or
pop
idivb
jo
lret
inc
inc
jmp
movsb
sub
pusha
std
lret
mov
stos
mov
or
pushf
pop
cmp
push
icebp
and
std
and
and
xchg
outsb
xchg
imul
jg
sub
cmp
or
fwait
cmpsl
jge
xchg
push
xchg
ss
jo
mov
mov
xchg
es
push
test
mov
jbe
shlb
mov
clc
lea
mov
enter
mull
and
fdivr
out
js
dec
push
daa
dec
aad
push
xor
paddw
push
push
fs
insl
lds
xor
mov
rcr
out
jo
dec
ret
loop
and
adc
dec
jl
adc
imul
cltd
sbb
icebp
sbb
in
dec
addr16
js
push
lea
pop
dec
cmp
rcrb
cwtl
and
das
or
lahf
push
pop
jb
roll
dec
adc
mov
push
cmp
cwtl
add
int3
add
mov
mov
pop
scas
or
jns
repnz
enter
mov
add
adc
lods
loopne
push
sbb
pop
jns
cmpsb
xor
test
push
dec
pop
lcall
ds
bound
mov
xor
ret
fsubrp
mov
pop
aas
pop
out
xchg
or
ds
add
std
or
gs
mov
adc
dec
mov
xor
les
lds
xor
push
sub
jne
dec
test
movsb
or
lods
shll
testl
aam
sbb
das
fisubl
enter
testl
cs
jmp
testb
push
popa
scas
dec
stos
repnz
out
adc
xchg
dec
sbb
push
and
maxps
mov
pushf
insl
sub
adc
mov
push
or
adc
cwtl
test
call
adc
xlat
pop
cmp
test
xor
inc
sysexit
cmp
push
fsubl
adc
jae
enter
and
in
mov
inc
cld
out
inc
mov
xor
cmc
popf
dec
loop
jle
imul
push
rcr
out
and
clc
ds
fimull
cmc
cld
sub
adc
std
test
jmp
fimull
ret
fs
cmp
scas
and
mov
xlat
mov
divb
dec
and
dec
pop
mov
loope
test
cmp
movsl
daa
mov
jb
cs
mov
aam
mov
and
xor
or
and
jne
sub
popf
icebp
or
aas
aad
pop
add
fdiv
rcrb
clc
enter
inc
jbe
and
jnp
pop
enter
cmc
xchg
ss
inc
xor
xor
sbb
stos
xor
ret
fldcw
arpl
lcall
jbe
pop
mov
ret
cld
cld
aad
mov
movsl
ljmp
movb
lds
mov
stc
mov
rcrb
add
cmp
movsl
adc
xor
sbb
jb
or
sub
cmp
xor
es
insb
mov
pusha
outsb
push
test
rcrl
or
mov
add
xor
test
xor
adc
fcompl
jnp
mov
mov
sbb
mov
idivb
ja
mov
cmp
pop
inc
mov
jne
xchg
jo
jne
and
sbb
iret
xor
scas
cmp
jg
dec
jno
add
data16
dec
and
cmp
and
inc
add
xchg
pop
das
pushf
pop
push
adc
call
stc
ja
mov
and
sub
mov
dec
inc
push
scas
je
je
mov
lea
call
or
dec
movl
daa
pop
mov
pop
xchg
sti
movsl
lds
sub
add
fildl
jnp
jnp
stc
outsb
xchg
fidivrs
hlt
loope
fcom
jo
xchg
test
pop
jnp
or
dec
xlat
fbstp
aas
xor
daa
push
sub
int
insl
push
popa
mov
cli
mov
cmp
scas
test
outsb
xor
fildl
inc
pop
mov
mov
mov
mov
std
pop
inc
lahf
adc
jg
dec
xor
jno
hlt
lret
sub
decb
push
lcall
add
aas
pop
xchg
jb
sub
jo
cmpb
movsb
xor
or
fninit
mov
cld
cmpsl
es
push
cmpsb
rcrb
mov
and
in
inc
insb
dec
xor
xchg
pop
aaa
inc
lret
test
je
xchg
push
fdivrp
out
and
sbb
pop
fimull
push
push
xor
test
aad
pop
xor
lea
in
in
shll
push
movsb
int
jae
push
add
push
and
cwtl
mov
int3
lcall
aad
rcrb
dec
adc
jp
lcall
stos
xchg
or
push
push
or
inc
push
leave
adc
xchg
mov
cmc
sbb
std
pop
popa
cmp
xchg
push
mov
xchg
or
cmc
lds
repz
cmp
iret
mov
fiadds
push
push
out
testb
mov
jl
dec
outsb
pop
mov
into
dec
mov
testb
push
dec
pusha
aad
out
test
mov
in
je
inc
shlb
mov
mov
mov
jne
cmc
push
jns
fnstcw
iret
into
out
pmulhw
scas
add
cmp
jge
and
inc
mov
mov
inc
fs
lds
pusha
xchg
idiv
cld
daa
xor
sarl
aaa
jbe
shll
xor
shrb
icebp
scas
jle
xlat
cmp
mov
cwtl
stos
xchg
mov
xor
fdivl
push
xchg
cltd
insb
test
out
sbb
aaa
sarl
pop
fstpl
mov
ror
and
push
mov
divl
add
jns
push
jecxz
jecxz
push
push
push
xchg
adc
into
mov
iret
lods
into
cmpsb
xchg
lods
addl
pop
xchg
jae
int
sahf
out
mov
mov
fdiv
mov
je
imul
popl
mov
mov
sub
add
sbb
dec
fcoms
push
or
xchg
leave
add
and
test
push
pop
aad
imul
icebp
cli
iret
mov
jbe
xor
add
pop
push
push
mov
xlat
mov
int3
ret
adc
inc
inc
pop
lret
cmp
jmp
and
push
or
pop
icebp
mov
jae
add
lahf
add
outsb
lret
out
xchg
in
movsb
push
pop
test
popa
les
gs
mov
cltd
cmp
jecxz
iret
ret
enter
adc
dec
mov
xchg
adc
sarb
je
fsub
idivb
arpl
xchg
mov
fists
push
jg
xchg
ss
jo
xchg
leave
in
sbb
fisubrs
gs
out
cli
imul
mov
xor
stc
xchg
sub
jle
add
jno
fmull
xchg
xchg
xchg
mov
lret
sbb
hlt
into
ljmp
pop
lcall
pop
repnz
xchg
mov
pop
sbb
jle
push
mov
inc
loop
jo
iret
test
xchg
add
xorps
sub
jne
or
fdivs
push
pusha
or
xchg
pop
xchg
or
sub
jb
cmp
jnp
inc
push
rcll
test
int3
jp
leave
cs
pop
clc
push
push
in
std
jg
das
repz
cmpsl
xlat
or
fistpll
cmp
pop
pop
cmp
xchg
jb
cmpsb
adcb
push
leave
mov
cmp
or
dec
cmp
jno
rclb
sbb
out
mov
hlt
cmc
mov
dec
xor
cmc
cltd
dec
cli
cltd
pop
outsb
xchg
sbb
adc
inc
push
and
push
add
mov
sbb
scas
jl
pop
dec
pop
enter
push
fsubr
push
les
outsl
xchg
jp
cmp
adc
out
ret
sub
rcll
int3
mov
loop
lret
adc
mov
mov
pop
roll
leave
lcall
popw
dec
mov
mov
ss
insb
fwait
orl
scas
mov
jno
insb
pop
ljmp
push
aaa
push
pop
in
in
mov
arpl
repz
adc
daa
out
ja
test
mov
arpl
dec
pop
sbb
rcr
xor
test
insb
cmp
popf
fwait
bnd
adc
out
out
popf
dec
scas
xor
pop
sub
lret
jp
pop
and
sub
jle
mov
test
fldcw
sbb
mov
dec
xor
rcrb
inc
jp
rcrl
jb
xor
ret
hlt
cmpsl
sar
clc
xor
xor
aaa
call
inc
cmp
xor
xchg
test
test
jne
adc
notb
fcmovnb
pop
pushf
lahf
mov
dec
fbld
push
or
int3
cmp
or
mov
and
stos
sub
add
fdiv
imul
pop
test
xor
sbbl
dec
pop
xchg
xor
lock
xchg
xchg
and
mov
dec
mov
sahf
lcall
ds
jmp
mov
xor
mov
lret
cld
sub
jae
cmp
sub
push
mov
scas
xor
cmp
mov
xchg
mov
ret
dec
in
xchg
add
xchg
int
push
out
gs
jecxz
iret
mov
dec
lock
push
mov
inc
pop
inc
cmp
add
fcomps
inc
mov
in
inc
mov
mov
mov
daa
das
cld
sub
mov
ret
fcomp
fdivs
cltd
stos
and
cvtps2pd
pop
cmc
or
sbbb
lahf
into
adc
lods
sbbl
mov
add
sbb
jbe
fcoml
pop
enter
ror
push
ja
mov
jbe
xor
xchg
cmpsb
test
insb
pop
jnp,pn
rcl
shrl
movsb
lock
test
mov
mov
in
jge
jmp
aam
mov
add
pop
aam
int3
rcrb
xchg
lahf
add
pop
jno
imul
aaa
dec
mov
ljmp
adcb
pop
jae
adc
cmc
pushf
push
ss
fs
xchg
push
mov
int
lahf
xchg
in
mov
dec
jne
xor
or
hlt
inc
movsb
push
adc
mov
adc
jns
inc
stos
mov
mov
sbb
lods
into
lret
cmp
pop
mov
orb
cmp
out
cld
xchg
movsb
repnz
cwtl
movl
imul
xchg
mov
int
pop
movsb
xchg
inc
or
mov
or
sbb
ja
ret
pop
pop
cmp
lret
push
push
shl
xor
gs
and
mov
sbb
fstpt
mov
dec
popf
andb
sub
ret
inc
inc
mov
lods
jmp
pop
and
shrb
push
adc
shll
mov
cmpsb
int3
movsb
jp
out
mov
push
insl
enter
inc
fldl
jb
xor
leave
clc
cmc
adc
or
dec
inc
lds
aad
repnz
mov
pop
fisttpl
dec
mov
faddp
pop
test
dec
fstpt
mov
mov
pop
inc
pop
dec
dec
add
xor
test
fistpll
stos
and
or
cmp
and
mov
in
out
jne
rclb
pop
pop
or
add
imull
jl
sub
xchg
test
leave
add
pop
and
jle
das
jb
in
popf
cmp
dec
insb
data16
inc
jmp
xor
bound
call
movsb
outsb
cmp
push
and
add
dec
ljmp
dec
pop
fmuls
test
xor
cmp
lock
das
add
loop
mov
sbb
pop
insb
fnstcw
mov
not
clc
sbb
adc
fsubp
jp
in
gs
mov
pop
add
jle
cmp
out
popa
push
jb
pop
loopne
mov
fwait
jp
cmp
notl
or
jnp
in
xchg
jo
andb
test
jle
in
sub
imul
jbe
sbb
out
test
mov
jbe
inc
lods
loopne
inc
jecxz
lcall
xchg
jecxz
mov
xor
jno
pusha
test
mov
mov
lods
mov
cmovno
shrl
mov
das
mov
stc
cli
inc
cmp
fcom
mov
lock
and
shrb
push
sarb
sbb
movsl
pop
jnp
sub
mov
aam
call
lea
dec
xor
xchg
xor
stos
jo
jp
xor
cmp
aam
popa
push
push
and
dec
addr16
pop
iret
push
rorl
adc
call
faddl
jp
jp
mov
cld
sub
pop
into
int3
cmp
mov
or
dec
addr16
sarb
aas
cmc
testb
sbb
add
ret
push
testb
jo
sarb
mov
icebp
pop
in
int3
aaa
adc
inc
das
out
out
fisubs
add
sub
movhlps
adc
xchg
push
popf
cmp
out
repnz
sbb
xor
sbb
sub
stc
ret
cli
rol
lahf
adc
xchg
pop
sbb
inc
mov
cmp
ds
add
adc
enter
or
sub
mov
jnp
sbb
les
mov
mov
ss
hlt
jle
cwtl
test
cmp
lcall
mov
xchg
stos
cmp
movsl
mov
pop
pop
mov
movb
loope
repnz
pop
xchg
stos
cmp
and
popa
xlat
enter
das
jmp
pop
out
cwtl
int3
push
cmp
call
sbb
adc
imul
jo
loope
fildll
adc
cltd
jne
mov
and
pop
mov
xor
scas
pop
and
imul
out
sub
xor
sub
out
lods
pusha
iret
mov
aam
adc
add
jecxz
mov
and
aad
or
vxorps
imul
out
add
adcl
fsts
pop
fisttpl
stos
add
pop
jp
sbb
loopne
cltd
inc
pop
dec
out
xchg
loopne
pop
xchg
cs
cmpl
nop
pop
shr
stos
test
xor
aaa
fdivl
push
push
jne
xor
cli
mov
ljmp
adc
push
rorl
sub
rcl
pusha
mov
lahf
repz
mov
inc
mov
inc
rolb
dec
inc
mov
int
in
loope
loopne
sub
inc
push
lret
clc
cmp
je
cli
mov
xchg
cmpsl
std
pop
mov
mov
sub
sbb
lea
jnp
adc
pusha
sti
les
lcall
add
mul
inc
test
lea
imul
pop
pop
dec
pop
pop
xchg
mov
mov
xor
jb
daa
jno
cmp
dec
inc
xchg
or
pusha
xor
pusha
mov
and
mov
dec
cmpsl
jge
jo
les
xor
push
jae
adc
test
mov
add
sbb
pop
jno
xor
adcl
in
pusha
sbb
and
sahf
ja
daa
fcoml
dec
imul
jb
or
jl
or
js
out
ret
call
cmpsb
mov
ss
rcrb
dec
pop
sbb
ljmp
ljmp
inc
add
stc
es
xor
test
in
jns
fs
jmp
fistps
xchg
xchg
mov
sbb
add
leave
dec
dec
setb
push
mov
cmp
jb
push
insb
mov
inc
insb
enter
push
mov
into
imul
aas
dec
cmp
xchg
cmpsb
push
cmpsb
mov
cwtl
fistpll
and
lahf
imul
divl
sub
addl
cmp
leave
pop
jle
mov
call
fdivl
gs
xchg
xchg
ljmp
xor
mov
sbb
dec
lock
jge
cld
shl
lea
inc
sbb
gs
scas
outsb
sbbb
scas
insl
lea
pop
cmpsl
sbb
dec
jne
repnz
jmp
xchg
sub
sbb
xor
and
cltd
jno
sub
push
add
mov
daa
mov
movsb
into
or
push
push
mov
and
mov
ljmp
lret
inc
mulb
lods
adc
cmpsl
cli
dec
fdivrs
js
push
push
jle
loop
aad
push
add
std
cli
in
inc
and
mov
mov
mov
dec
or
leave
adc
pop
imul
add
pop
sub
in
jmp
jmp
push
xor
sub
push
xchg
mov
dec
mov
jl
daa
adc
sarl
inc
or
sbb
sub
lock
sbb
movsb
cmp
push
push
imul
std
push
mov
sbb
es
loop
and
leave
pop
enter
mov
adc
jle
frstor
out
adc
addr16
pop
mov
xor
mov
test
push
mov
repnz
cmpsl
data16
sub
scas
popf
int
inc
ds
jbe
push
add
dec
inc
jle
cmpsb
push
test
cmp
and
adc
sub
add
sbb
movl
adc
int3
mov
shlb
mov
or
cmpsb
mov
and
pushf
or
fstl
pop
aaa
jno
cld
push
popa
and
or
lcall
xor
sbb
lea
inc
sub
cld
in
pop
adc
ror
icebp
sbb
sub
mov
cmpsl
test
push
icebp
scas
dec
xchg
xchg
inc
in
xor
sub
dec
mov
mov
push
hlt
dec
inc
mov
dec
inc
jne
jle
rol
sbb
arpl
and
cltd
sub
jae
push
xchg
call
inc
ret
stc
subl
dec
pop
lret
addb
into
cmp
and
out
xor
xchg
lcall
out
push
xchg
mov
or
xor
add
xor
loop
mov
xor
roll
inc
pop
push
mov
arpl
xor
jl
lea
xchg
fnsave
xchg
xchg
ficoml
pop
xchg
xchg
int3
jo
xchg
jno
pop
xchg
adc
aam
jmp
cmp
adc
mov
dec
icebp
cmp
iret
test
js
mov
pusha
test
push
pop
mov
mov
add
jb
inc
shlb
xor
or
out
mov
loopne
cmp
mov
ss
jo
or
inc
or
mov
data16
enter
stos
add
xor
push
dec
mov
call
rcrl
lock
movsl
cld
mov
lock
mov
je
pop
push
sub
icebp
orb
int3
push
mov
cmpsb
fsubrl
dec
push
jmp
lods
sub
cmp
mov
fcompl
and
push
xchg
jnp
in
mov
push
rclb
cmpsb
bnd
dec
dec
out
loope
sbb
pop
loope
scas
xchg
push
xchg
sbbb
jns
cmp
fwait
sbb
insl
and
stos
mov
pop
rorl
xor
xchg
popa
xor
pop
jne
fnsave
fistpll
out
push
or
pop
insb
cmp
data16
cwtl
repz
mov
jbe
arpl
mov
mov
inc
lds
mul
add
std
lock
outsb
js
popl
or
stos
jnp
aas
push
cmpb
mov
pushf
ds
jle
jae
aad
nop
push
push
sbb
fadds
push
pop
dec
test
in
or
in
push
mov
or
and
mov
movsl
gs
repz
mov
cmpsl
push
xchg
mov
aaa
shlb
lods
xlat
xchg
fsubrs
adc
mov
push
xchg
movsb
adc
cltd
call
mov
mov
and
xchg
setbe
inc
rcr
cmp
inc
fdivr
bound
mov
lcall
jnp
adc
sbb
sti
dec
cmp
push
pop
in
and
mov
push
jb
sbb
test
movsl
mov
cmp
lock
inc
data16
outsb
daa
cmpsb
jbe
andl
mov
pop
int
in
add
movsl
inc
dec
ja
sahf
or
arpl
sub
inc
inc
add
sbb
mov
xchg
in
sahf
loope
inc
sbb
cmp
push
cwtl
mov
mov
pop
pop
sbb
push
stos
xchg
adcb
jmp
int3
mov
rcll
sub
sbb
cmp
lock
push
icebp
or
jbe
subb
out
xor
sbb
sub
lret
inc
cmp
inc
and
pop
out
pop
cmpsb
rcrb
or
lret
rorb
in
sahf
dec
fcomps
xor
xchg
loope
dec
fwait
cmpsb
psadbw
cs
test
cli
cmp
rcll
and
sahf
mov
xchg
test
sub
xor
sbb
loopne
sbb
pop
in
pop
jp
fcomi
sbb
jp
mulb
ja
dec
bound
movsb
cli
pop
out
sbb
sub
lock
sub
dec
mov
cmp
mull
push
dec
mov
ja
inc
pop
jge
rcl
aam
nop
push
sbb
mov
xchg
popa
add
fidivl
pop
aas
lret
push
leave
mov
cld
mov
shl
push
scas
dec
imul
rclb
mov
jmp
sbb
ss
mov
in
mov
adc
dec
daa
jns
or
xchg
cmp
xchg
jecxz
inc
in
insl
loop
clc
ja
cwtl
jb
subl
sbb
add
lea
dec
scas
pop
dec
enter
jb
jge
and
ss
test
out
mov
int3
or
mov
ljmp
mov
lcall
jns
push
clc
loop
les
mov
push
and
loop
shlb
or
fisubrl
scas
cmpsl
dec
and
mov
sbb
xchg
lret
cmp
dec
cmpsb
imull
push
std
dec
movsl
lock
mov
ljmp
xor
jae
pop
xor
int3
mov
xchg
push
push
add
xor
xchg
or
cmc
jge
cmp
push
mov
pop
inc
mov
ret
dec
sbb
ljmp
mov
imulb
adc
xor
inc
sub
movsb
push
sarb
xchg
mov
adc
push
mov
sub
aam
mov
ja
jne
lods
test
cmp
lret
push
notb
ja
in
jae
aad
dec
lock
and
pop
xchg
jp
mov
int
cmp
xor
lret
inc
pop
jl
mov
or
jmp
mov
adc
and
lods
xchg
inc
aad
das
sub
pop
les
mov
popa
jne
sub
jbe
sbb
nop
into
jge
out
mov
jge
fistl
xchg
int
xchg
push
and
jle
repnz
or
jns
rclb
cmp
inc
pop
jb
mul
xchg
adc
div
xlat
jns
lds
jecxz
jnp
nop
insb
sub
jmp
xor
mov
outsb
adc
sub
mov
add
call
cmpsb
dec
lea
adc
or
enter
sbb
leave
mov
lret
mov
xor
xor
jne
loop
test
mov
mov
mov
js
jns
xchg
addr16
jns
jb
leave
jmp
xchg
test
cs
xchg
ret
jne
lcall
ret
jae
jge
xor
sub
mov
push
xchg
pushf
mov
jnp
pop
cmc
imul
scas
and
cli
pop
jns
xor
cmp
xchg
test
stc
loop
fstl
jns
fadds
add
sbb
and
addb
sub
jnp
in
cld
cmp
shlb
inc
pop
ljmp
mov
push
sahf
pop
sub
push
jmp
sbb
sub
sub
lahf
push
scas
stos
pop
xorl
je
movsl
pop
jne
lret
in
adc
and
mov
scas
push
mov
sbb
ret
mov
push
mov
push
inc
leave
shlb
jae
pop
sub
mov
and
cmp
ret
pop
cs
cmc
fists
adc
shll
mov
pop
out
pop
xor
mov
mov
fwait
dec
inc
test
bound
sub
jl
repz
inc
sahf
sbb
push
push
lods
sbb
daa
cmpsl
sarl
insb
iret
xchg
xchg
push
jp
shrb
mov
scas
loopne
repnz
mov
shll
inc
data16
fucomip
shl
imul
add
pop
cmc
inc
fwait
xchg
add
std
and
mov
lret
cmp
dec
cmp
div
push
xchg
push
mov
push
movsl
stos
inc
xor
push
xchg
scas
xorl
sbb
jge
cmpl
call
icebp
mov
sub
fildl
xor
dec
pop
xor
sahf
mov
jno
xchg
jbe
jecxz
je
data16
add
add
pusha
cmp
sbb
cltd
xor
mov
push
aaa
stos
xchg
pusha
push
popa
aad
xchg
sbb
jnp
cld
js
sub
stc
adc
xchg
dec
mov
mov
insb
mov
cmp
stos
cmp
arpl
mov
les
mov
mov
or
mov
shl
push
adc
cmpsb
stc
dec
repz
and
adc
int
insb
fwait
ret
dec
jns
js
cmpl
andl
aam
dec
jecxz
xor
jle
sbbl
notl
sub
push
xchg
in
jge
pop
scas
rolb
pushf
xor
iret
or
or
cmp
in
dec
mov
and
and
mov
loope
loope
iret
cs
xchg
sbb
mov
push
xchg
das
mov
repnz
adc
leave
or
wbinvd
notl
ret
dec
lock
stc
pop
loop
into
add
not
cmpsl
push
movsl
mov
push
jae
arpl
dec
std
iret
cmp
xchg
mov
int3
enter
cmp
in
icebp
sbb
push
and
leave
sbb
sti
sbb
mov
std
mov
mov
imul
mov
fdivs
fldcw
adc
mov
adc
xlat
and
pop
out
push
xchg
ljmp
fidivrs
stos
les
jo
popa
fsubrp
mov
aad
xor
insl
les
cmp
jno
and
mov
xor
mov
hlt
imul
inc
pushf
xchg
push
ret
mov
lret
cwtl
les
sbb
mov
out
test
pushf
sbb
inc
push
lock
js
mov
mov
sub
add
mov
gs
mov
mov
cmp
pop
inc
mov
test
orl
dec
pop
fisubrs
stos
inc
xor
push
lret
adc
data16
pop
pop
adc
sub
cmp
sbb
leave
imul
sbb
mov
adc
add
idiv
adc
outsl
mov
call
pop
adc
fxch
repnz
dec
outsb
dec
mov
jo
mov
sbb
sub
pop
mov
add
mov
mov
sub
movsb
dec
stos
pushf
lock
adc
adc
mov
in
cmp
xchg
mov
arpl
jo
je
pop
addr16
jbe
sbb
adc
and
cmpsb
idivb
inc
jae
jp
pop
hlt
xlat
mov
aaa
lods
test
adc
cmpsl
xlat
fsubrp
sarl
in
int3
fldln2
sbb
and
dec
xor
sub
mov
data16
clc
adcl
inc
es
shrb
sbb
jae
into
fisubs
push
popa
add
add
orl
seto
xlat
imul
shrb
div
or
out
adc
pop
lret
push
cmc
mov
xlat
pop
fisubrl
test
jbe
sbb
add
sbb
bound
iret
loope
cld
cmpl
xor
mov
hlt
pop
cmp
pushf
and
test
ret
xlat
shlb
xorl
pop
or
push
inc
fnstenv
xchg
and
mov
fstpl
gs
out
lea
mov
in
mov
pop
test
mov
fwait
sbb
mov
mov
stc
les
adcb
in
cmp
push
ja
xchg
xchg
aaa
pop
mov
call
icebp
adc
xor
mov
pop
push
loopne
xchg
call
mov
mov
and
mov
and
xchg
jb
pop
rcll
jle
mov
shll
mov
stos
lahf
call
mov
inc
aaa
xlat
sub
popa
shll
cwtl
push
push
mov
mov
lcall
add
cmpsl
rclb
mov
movsb
or
bound
ficomps
push
mov
add
jmp
xor
out
fidivrs
cld
xchg
ss
jbe
xchg
hlt
sub
inc
stos
mov
insl
cmp
pushl
pop
pop
fidivl
sub
mov
sub
or
inc
daa
xchg
mov
ret
mov
into
mov
sbb
addr16
addr16
call
dec
dec
scas
inc
cmpsb
hlt
lds
aaa
ret
arpl
mov
lods
jg
das
xor
shr
mov
sti
inc
mov
std
addr16
enter
and
loop
jl
push
dec
pop
cmp
sub
gs
jns
lahf
xlat
mov
fisubs
mov
mov
inc
loope
lds
sub
mov
leave
push
out
out
pop
mov
dec
pushf
int
lret
mov
mov
clc
lcall
outsl
xchg
pop
in
dec
pop
xchg
std
xor
stos
mov
pop
je
std
dec
xor
fmull
inc
push
and
in
jo
sarl
dec
aas
orb
rolb
add
lods
bound
sti
aam
pop
xchg
xchg
imul
test
shlb
cmp
movsl
fildll
push
sbb
test
iret
call
aam
pop
std
call
push
jne
jecxz
bound
adc
outsb
daa
stos
fidivs
les
loop
and
add
pop
cwtl
xor
pop
loop
movsl
push
fstpt
jbe
xchg
xchg
xchg
hlt
aaa
mov
push
jae
push
jo
inc
mov
lods
data16
push
mov
repz
fs
fnsave
dec
xor
icebp
cmp
int3
in
mov
movsl
sarl
movsb
push
jb
push
sahf
cmp
sub
rorb
adc
mov
cmp
lcall
es
sub
leave
nop
sub
jo
ljmp
pop
sub
sbb
jmp
jecxz
fstps
pop
or
xchg
push
orl
int3
push
push
lods
mov
lcall
mov
stc
add
add
xor
xchg
repz
add
outsl
xchg
mov
sub
or
jg
cmp
cmp
std
mov
les
pop
push
jb
shl
sub
fs
fisttpl
jl
cmc
aad
dec
push
inc
jmp
jecxz
cmp
inc
rolb
and
jge
clc
repnz
sbb
mov
int
pop
cmp
loop
sahf
popf
push
popf
ss
or
ss
inc
xor
mov
stos
repnz
clc
dec
imul
js
push
or
ljmp
dec
sahf
psubsb
cmp
outsl
sbb
pop
sub
js
std
sti
xchg
cmp
push
shl
ret
je
test
push
xchg
and
cld
mov
sub
stos
mov
fldenv
lret
loop
jl
pop
cmp
scas
sub
sar
sub
adc
or
xchg
xor
notb
mov
push
sbb
mov
idiv
shlb
jns
and
rcr
sbb
scas
and
sti
jno
mov
xor
les
inc
inc
repnz
and
pop
lret
enter
and
sarb
dec
push
jl
testb
push
stc
cld
jne
loopne
bound
jae
test
icebp
movsw
sbb
sbb
mov
es
mov
rol
jb
push
jcxz
adc
outsl
pop
test
lock
sarl
ljmp
divb
aaa
fsubs
or
addr16
cld
popa
ljmp
dec
sbb
loop
arpl
push
add
push
popa
jo
icebp
xor
xor
mov
in
sub
xchg
sbb
mov
cmp
add
sub
or
das
in
and
aaa
mov
add
sub
ja
push
and
adc
jge
mov
fistpll
jae,pn
shrl
xchg
packuswb
xor
or
lock
dec
mov
leave
jl
pop
lcall
neg
add
sub
cmpsl
xor
int
sbbl
test
lret
out
mov
outsb
out
mov
inc
push
jb
jo
test
clc
mov
lret
clc
fistpll
dec
ds
mov
and
cld
inc
pop
stc
test
shr
cmp
push
jno
adc
shl
mov
inc
inc
lea
xchg
and
test
int3
sarb
jae
fnstenv
cmc
or
mov
aad
push
into
notl
fcomps
jbe
ret
jne
xlat
xchg
xlat
fistpl
sbb
or
daa
pushf
xlat
mov
out
out
stos
xchg
insb
std
je
cmp
lods
mov
test
imul
pop
divl
xchg
and
pop
pushf
adc
xchg
cmp
stos
mov
fst
pop
lret
sbb
pop
imul
cs
lods
aas
cmc
sahf
pop
add
ljmp
xchg
adc
incb
mov
daa
xor
int
add
fucomp
inc
push
push
jecxz
mov
negl
in
lock
xor
jns
in
mov
mov
repnz
pop
cmp
sahf
sahf
hlt
mov
jbe
popf
mov
sti
push
lods
mov
lea
fs
xchg
mov
jbe
jle
lret
leave
xchg
aas
int3
call
cli
pop
and
inc
enter
test
and
lcall
xchg
push
cmp
out
jmp
test
cmp
les
adc
addl
inc
dec
cmp
lea
fdivrs
test
sbb
xchg
jo
bound
roll
inc
sub
push
pop
out
mov
ret
mov
push
loope
fisttpll
mov
add
outsl
cwtl
je
cmp
enter
sub
loopne
and
xor
sbb
rcll
xchg
jg
dec
cmpsb
test
ljmp
xor
pop
iret
xchg
sbb
rclb
add
int3
mov
repnz
movl
dec
push
roll
xor
es
mov
jmp
incb
and
sbb
jbe
shlb
dec
add
addr16
movsb
js
add
out
xchg
jbe
loope
mov
dec
sub
dec
aas
mov
xchg
mov
out
jbe
push
addl
js
mov
aam
int3
adcl
inc
pop
movsl
lods
fwait
popa
cmpsb
xlat
adc
and
jle
jmp
mov
mov
sub
rolb
testb
or
or
sbb
inc
jb
mov
cmp
aaa
jecxz
push
xor
pop
cmp
clc
fldcw
cmp
ret
in
cmp
pop
xor
adc
pushf
pop
sbb
stos
mov
movsl
or
jmp
pop
and
xor
cmp
jmp
xor
in
out
or
xor
aam
xchg
das
inc
scas
mov
es
cwtl
jnp
mov
fwait
dec
inc
jno
push
push
cmp
ja
xchg
cmp
jmp
lods
std
jge
inc
sbb
mov
pop
pop
inc
mov
daa
xchg
cmp
arpl
pop
cmp
orl
add
push
xchg
xor
in
insl
filds
inc
and
imul
mov
xchg
jae
outsl
sub
iret
pop
xchg
fwait
out
add
inc
xchg
cltd
out
call
jo
lea
loopne
or
add
cmp
sbb
shrb
cli
mov
jl
jg
xor
mov
repz
lods
inc
sub
lock
ds
cmp
xchg
inc
or
pop
push
addr16
icebp
jl
dec
pop
sub
mov
mov
js
cmp
outsl
cmpsb
mov
sub
push
loopne
xchg
add
repz
mov
cmp
and
mov
loope
xchg
push
out
lahf
je
jb
int3
mov
test
jne
lock
inc
rol
or
push
push
js
sub
lahf
js
aam
hlt
enter
xor
sbb
jo
dec
push
mov
inc
or
jmp
push
xor
xor
mov
xchg
xchg
sbbl
xor
and
dec
dec
dec
hlt
ds
jmp
jl
faddl
mov
dec
out
ret
aad
push
push
in
mov
in
sbb
hlt
jae
xor
adc
movsl
sub
fldt
les
push
pop
cs
call
enter
leave
pop
push
aad
leave
lahf
scas
cs
xchg
mulb
std
mov
dec
cmp
push
xor
xor
add
inc
shll
fmuls
flds
addr16
jl
cmovnp
xor
jge
cmp
movl
inc
mov
sbb
roll
lea
dec
or
inc
aaa
push
fidivrl
fs
aad
or
push
sub
stos
lea
jns
aad
test
mov
pop
insl
add
addr16
or
sahf
ret
lcall
and
adc
out
cmpsl
lcall
movsl
ficoml
negl
test
or
or
faddl
jmp
outsl
fisttps
jns
mov
or
adc
repz
fistps
ss
sbb
mov
and
push
sti
push
cmp
adc
cs
roll
repnz
dec
push
sbbl
imul
mov
gs
fcmovb
jmp
xchg
mov
jo
add
mov
lock
aam
push
vpshaw
in
and
sbb
pop
cltd
loope
movsb
jl
xor
dec
cmp
aas
inc
mov
js
clc
aad
push
insb
mov
stos
adc
ffree
lds
sbb
call
push
pop
int
cmp
dec
and
movsl
push
out
dec
mov
popa
cmp
push
cs
push
insl
add
int3
push
jge
pushl
mov
sbb
mov
mov
push
xchg
jmp
or
xchg
mov
lds
insb
leave
xchg
hlt
xor
fwait
outsl
add
adc
clc
add
shrl
addr16
add
mov
add
out
arpl
sbb
daa
mov
sub
mov
and
imul
push
cmp
xchg
lret
or
ja
sub
inc
popf
xorl
push
into
insl
push
lahf
mov
mov
fstps
sub
mov
sub
push
adc
dec
fwait
jecxz
sub
addl
jnp
pop
aam
jbe
push
push
movsb
jo
stos
pop
sbb
fsubrl
daa
mov
fsubrp
imul
cmp
out
adc
ficomps
scas
or
mov
outsb
lock
mov
pop
lock
out
cs
lahf
les
imul
sbb
mov
jp
xchg
xchg
stc
push
push
testl
sahf
sub
scas
mov
mov
sbb
movsl
das
pop
jnp
inc
popf
enter
jmp
lret
loop
call
add
in
arpl
shlb
xchg
inc
cwtl
cwtl
xor
scas
imul
sbb
pushf
push
sbb
mov
inc
mov
sbb
pop
add
test
inc
imul
sbb
leave
imul
ljmp
int3
insb
inc
or
adcb
push
in
xchg
lahf
inc
push
sub
inc
repz
sub
imul
jb
insl
sbb
jb
lods
xor
push
js
push
cmpsl
xchg
jge
sbb
into
xchg
sub
sub
mov
xchg
loopne
push
or
in
xor
mov
je
inc
test
sbb
test
nop
ljmp
and
pop
pusha
mov
jg
out
cmp
sbb
shlb
pop
and
pop
push
fisubl
or
ljmp
xrelease
inc
pop
in
mov
lret
jl
mov
rorl
loop
lahf
cwtl
pop
jecxz
or
mov
or
add
pop
sub
popa
fistps
push
xchg
imul
mov
jle
fisubrs
adc
or
jns
test
sub
dec
ds
fisubs
mov
aaa
adc
ja
xor
cmpsw
leave
add
shl
push
shll
sub
jle
sti
out
mov
popa
nop
lahf
lret
sub
pop
cs
xorl
mov
aam
ret
adc
seto
dec
or
sub
notl
int
dec
std
sti
scas
jmp
int3
stc
and
ret
mov
mov
das
add
stos
jnp
and
push
shrl
fcmovu
sbb
ret
xchg
data16
push
pushf
ss
aad
imul
orl
pop
jp
fidivl
imul
cmp
pop
adc
adc
jl
ss
pushf
les
jno
mov
or
sbb
rcr
mov
pop
mov
inc
dec
lahf
sub
stos
repnz
and
dec
dec
gs
mov
mov
push
xchg
jno
leave
fidivl
mov
shlb
xor
ret
xchg
aaa
shrb
add
mov
cltd
xor
pop
lock
scas
or
or
int3
xor
push
pop
pop
mov
dec
jbe
into
inc
jle
out
jbe
jmp
mov
lret
and
mov
mov
add
movsl
sbb
adc
repz
pop
sbb
xchg
push
stos
jl
adc
imulb
lret
icebp
test
fists
jecxz
sti
add
pop
shr
loopne
movsl
and
xor
and
jle
or
iret
pop
jg
outsb
jl
xor
jb
int
xchg
mov
test
movsb
inc
xchg
int
ret
pop
movq
and
jbe
adc
popf
hlt
shlb
hlt
sub
movsl
pop
leave
mov
je
rcrl
xor
lret
mov
popa
idivb
fimuls
cs
mov
push
orb
mov
xorb
shlb
inc
push
les
sub
or
sbb
rcl
fbstp
sbb
or
imul
adc
cmp
mov
push
cmc
mov
test
movsl
mov
in
out
inc
jp
sbb
inc
add
xchg
imul
shr
push
aaa
fisttpl
or
jo
cld
in
and
inc
cmp
rolb
out
jg
mov
inc
sub
hlt
fsubrp
sub
pop
enter
or
popa
ds
std
hlt
fdivrs
push
cld
adc
mov
mov
push
repnz
add
bound
rcll
inc
cmp
mov
xor
cmpsb
inc
lods
jecxz
push
call
add
fmuls
inc
pushl
xchg
jbe
test
jns
jne
out
in
sub
aaa
std
ja
mov
dec
mov
rolb
data16
mov
push
int3
sub
loope
jl
and
pop
shl
mov
movsb
mov
out
add
scas
stos
adc
inc
gs
xchg
pop
push
scas
jecxz
inc
outsb
mov
movsb
cmp
lahf
dec
setb
push
idivl
pop
mov
inc
inc
test
stos
scas
mov
ret
mov
mov
js
fcmove
push
pushf
add
inc
xchg
lods
in
inc
movsb
jge
adcb
loopne
fldenv
pop
xor
or
shrl
and
daa
xchg
dec
xor
xchg
xlat
je
bound
enter
or
jns
repnz
mov
mov
inc
loop
or
and
dec
enter
push
pop
out
push
dec
aaa
stos
xchg
lods
adc
int3
inc
mul
testl
dec
lods
ss
stc
ror
xchg
add
data16
movb
xor
cmpsb
or
xchg
lods
sbb
xlat
inc
fwait
push
sbb
mov
testb
mov
in
xchg
sbb
in
push
fnstsw
sub
lea
push
inc
movsl
fldcw
and
xor
loopne
arpl
imulb
arpl
or
mov
mov
pop
pop
je
out
inc
mov
dec
mov
mov
clc
das
pop
and
loopne
dec
push
in
les
dec
enter
sahf
lock
sbb
enter
jae
push
int
insb
das
pop
mov
mov
shr
loop
xchg
pop
or
mov
mov
fadd
cmpsl
dec
inc
add
push
and
jnp
ret
js
or
add
inc
imul
adc
out
lcall
mov
push
lods
ss
test
lock
sti
push
xor
or
mov
xchg
popf
call
mov
ljmp
xcrypt-ctr
cmpsl
sbb
xchg
inc
cmp
xchg
pop
rcll
out
fidivrs
popa
cmc
out
mov
inc
sub
imul
jnp
dec
mov
xor
inc
and
fmulp
sbb
xchg
mov
into
jmp
nop
or
cmp
dec
cmpsb
paddusb
dec
addl
daa
subl
mov
lds
out
ret
jp
les
insb
and
pop
jnp
cmp
xor
sbb
jecxz
inc
pushf
push
or
stos
rcrb
mov
lahf
lea
icebp
sar
out
sub
loopne
loop
jns
or
push
mov
mov
fwait
test
adc
pop
or
mov
stc
xor
fcompp
mov
out
push
gs
dec
pop
das
xchg
fstps
dec
subb
int
fcomps
add
inc
lods
in
xor
fcomi
fdivr
jge
mov
out
lcall
add
sub
jp
cmpsb
das
or
sub
jg
xchg
pop
pop
add
in
dec
mov
xchg
sub
adc
popf
outsl
jl
push
lds
inc
loop
jecxz
ret
sub
sbb
push
sti
cs
sbb
sbb
jo
loope
xchg
outsl
push
gs
pop
out
fwait
or
mov
push
fimuls
push
jbe
xchg
mov
jg
arpl
lods
mov
jns
inc
xor
inc
push
xchg
outsb
xor
pop
adc
in
fnstcw
addr16
jo
pop
aaa
push
adc
imul
inc
push
stos
mov
enter
repz
lahf
mov
push
repnz
outsb
mov
jnp
icebp
repnz
mov
loop
iret
mov
push
shll
mov
enter
test
push
inc
push
movsl
lcall
pop
scas
cmpl
imul
add
mov
hlt
mov
cltd
push
cmp
fstps
test
scas
ficoms
fidivs
jmp
adc
jge
leave
sbb
jne
int
xor
cld
shlb
call
cmpsl
push
mov
xchg
xorb
jge
lcall
mov
lock
cmpsl
int
push
sbb
inc
ss
mov
cli
mov
sti
int
xor
xor
pop
sbb
adc
jle
or
and
or
das
jo
in
and
adc
push
fcomps
test
pop
pop
xor
pushf
fdivrp
cmp
scas
aam
and
xlat
jecxz
in
xchg
push
jnp
shll
insl
push
arpl
js
xchg
lcall
xor
jge
jnp
inc
arpl
sbb
cmc
rol
dec
imulb
dec
mov
cs
and
cmp
adc
jne
cmp
insb
mov
push
shl
jmp
mov
test
push
push
xor
shll
push
inc
sub
xlat
je
add
repz
or
xchg
insl
aas
dec
push
movsl
sahf
mov
jl
lea
lock
push
aad
jb
jl
sti
pop
cmp
in
scas
jne
fstps
or
mov
mov
jle
adc
push
lds
lock
inc
arpl
push
adc
xor
mov
mov
cmp
add
test
jmp
xchg
das
outsl
jge
cld
jg
push
mov
out
inc
cmp
mov
ds
cmpsb
add
shlb
leave
popa
cmp
mov
mov
jb
sub
adc
inc
repnz
mov
push
adc
push
inc
xor
notb
inc
push
xchg
mov
faddl
rcll
ret
js
sub
decb
jg
inc
insb
jmp
in
scas
xorb
xchg
pop
pop
iret
xor
insl
stos
jns
cwtl
rcl
in
aas
pop
out
scas
je
sub
std
cld
icebp
add
and
sbb
stos
out
xchg
stc
jbe,pt
int
jp
iret
sbb
mov
jb
mov
jbe
scas
ss
adc
mov
dec
pop
jae
mov
sti
sbb
xchg
add
out
sub
jp
pop
pop
push
push
or
add
xor
xor
xchg
cmpsb
shll
outsb
lods
and
mov
out
test
cmpsl
push
int
push
ss
test
cmp
js
cmp
xchg
movsb
mov
xchg
maskmovq
testl
pop
stos
sbb
fdivrl
popa
imul
dec
rdmsr
cmp
in
dec
dec
fs
sbb
xchg
sub
call
lock
sbb
and
mov
jo
repz
cltd
and
fidivrs
imul
mov
jmp
inc
into
push
notl
push
imul
mov
bound
test
cmp
testl
repz
pop
cli
inc
scas
cmp
into
xor
and
sbb
push
xorl
jns
jno
mov
stos
jp
jbe
mov
jecxz
ss
sbb
cmp
ljmp
dec
push
push
jg
inc
into
loop
pop
rcrl
adc
add
mov
pop
mov
sub
jmp
sbb
sub
mov
int3
in
std
pop
rep
rol
jo
sub
aam
loope
inc
ds
insb
jb
negb
jg
call
stos
push
and
mov
int3
mov
scas
rolb
insb
mov
and
jbe
loopne
dec
push
fsubs
sbb
xlat
addl
daa
ljmp
mov
mov
push
lds
jns
arpl
cs
aas
call
mov
sbb
inc
mov
pop
fdivrl
and
repnz
cmp
jmp
insb
sarb
ljmp
jns
aam
les
mov
popf
jmp
or
jmp
cmp
nop
movsl
outsl
stc
push
push
cmpsb
filds
jo
lahf
mov
xlat
dec
sub
push
add
cmp
cmp
push
jge
pusha
popa
pop
xchg
imul
cwtl
jecxz
mov
movsl
and
je
xlat
cmp
add
call
sbb
mov
incb
dec
cltd
mov
sub
jecxz
repnz
int
cwtl
push
dec
mov
daa
dec
mov
call
out
lods
cmc
in
dec
jne
cmp
pop
data16
push
movsb
pop
call
mov
mov
dec
jl
mov
loopne
sarl
aaa
icebp
popa
or
mov
adc
mov
fmuls
mov
and
xlat
mulb
mov
cmc
mov
into
jo
ret
adc
fsts
cmp
inc
jl
insb
sub
cmp
add
mov
arpl
ret
xor
icebp
out
sbb
roll
loope
ja
lds
or
rcrl
or
xor
pop
je
xchg
shl
pop
cwtl
inc
scas
and
dec
inc
fadds
push
jle
stos
adc
sbb
lods
ret
xor
push
lods
sbb
lds
mov
shlb
movsb
or
push
ljmp
dec
cmp
ret
mov
inc
sbb
pop
popf
rorb
ja
pop
aaa
into
mov
aad
icebp
xor
jg
inc
insb
xchg
dec
js
jg
sub
les
pop
jl
cmp
xchg
mov
jle
sbb
mov
mov
loopne
xchg
clc
xchg
sub
lcall
dec
xchg
les
dec
mov
xor
ret
ss
pop
cmc
jns
jne
mov
xlat
sbb
jnp
dec
cmp
inc
sarl
push
push
fwait
hlt
out
mov
add
aam
mov
out
fisubrs
adc
frstor
fistl
xorb
lea
movsb
shll
clc
jae
sahf
sub
nop
xor
xchg
fldenv
cs
mov
jb
xchg
xor
xor
or
mov
adc
sarb
loop
xchg
sbb
mov
xchg
xorb
push
add
inc
mov
and
notl
enter
xchg
testl
sarb
or
xchg
push
fs
cmp
jae
add
xchg
or
pop
int
push
shlb
or
xchg
dec
sub
lods
aas
sbb
jne
insl
push
cld
aas
imul
mov
sbb
lahf
sbbb
xchg
xor
sbb
pop
mov
pop
mov
push
mov
pop
xchg
push
dec
ret
mov
imul
jmp
lret
test
dec
pop
fcmovnb
sub
xor
lods
sub
dec
inc
imul
xchg
in
sbb
pusha
adc
cwtl
popf
in
jge
and
pop
push
push
adc
xchg
xchg
mov
mov
fisubl
popa
jnp
mov
sbb
icebp
scas
faddl
sub
incb
dec
or
and
test
les
outsb
jno
lahf
stc
es
ret
movsl
jl
gs
cmp
dec
aas
mov
sar
pop
aad
add
cwtl
fldcw
dec
sbb
out
ja
mov
jo
and
inc
frstor
outsl
mov
inc
or
pop
pop
or
in
out
mov
mov
jg
inc
or
dec
jge
std
in
jae
out
in
xor
add
mov
or
jle
xchg
vmwrite
dec
jmp
shrb
jp
jo
jg
fsubrl
and
out
mov
adc
test
insl
sub
xor
fimuls
mov
out
popa
xchg
dec
rorl
mov
stc
sbb
dec
push
mov
fwait
dec
sbb
inc
push
out
xchg
in
lahf
jb
xchg
mov
iret
adc
xor
aaa
cltd
dec
call
push
aam
xchg
cmpsb
jmp
jecxz
jmp
xchg
mov
or
xchg
ja
ljmp
pop
fistpl
sahf
dec
insl
out
aaa
or
mov
xchg
add
and
stos
jge
dec
mov
add
xor
sti
fbstp
sti
pop
out
adc
xchg
cmp
pop
or
and
cmpsb
outsb
dec
or
testl
xchg
mov
sbb
mov
push
pop
movsl
gs
loop
lret
scas
test
ficoms
andb
add
pusha
imul
daa
cmpsb
mov
pop
in
and
cli
add
inc
cmp
cmp
cmpl
jo
fdivs
in
pop
dec
jmp
mov
inc
xor
xchg
fs
rcrb
rcll
imulb
mov
stos
add
pop
mov
enter
or
imul
ret
add
mov
rorl
bound
rolb
cmp
cmpsl
scas
inc
pop
iret
sahf
rcr
ror
and
fisttps
push
jns
int
sub
cmpsb
and
fdivl
cmp
out
gs
xor
sahf
ljmp
sbb
push
jo
cmp
shrl
cmp
lock
adc
xor
in
arpl
bound
jno
jnp
mov
outsb
js
fsubl
pop
mov
test
sbb
pop
fs
adc
inc
dec
fnstenv
mov
add
sub
cmp
cwtl
imul
icebp
lret
daa
mov
dec
outsb
add
cmovb
add
in
xor
pop
cmpb
mov
aam
nop
add
xor
ret
jne
jmp
cmc
filds
cmpb
test
xchg
or
push
stc
xor
pusha
cmp
mov
mov
push
and
lea
nop
add
subl
test
mov
push
add
inc
push
pop
insl
pop
out
fimull
push
inc
jb
sub
out
pop
push
sbb
les
mov
cmp
stos
gs
cld
xor
xor
pop
dec
out
push
es
loop
test
rclb
xchg
and
mov
int
inc
dec
cmp
pop
jns
testb
lods
je
fldcw
into
aam
out
cmpsb
aaa
mov
or
mov
in
stos
adc
outsl
aaa
adc
pop
push
aam
arpl
add
jl
outsl
push
inc
bound
dec
mov
or
jb
cwtl
mov
mov
stc
xorl
add
cmp
xor
sub
test
inc
jb
dec
mov
aas
shlb
dec
xlat
pop
pop
jo
aad
lock
imul
push
sub
pop
cmp
ret
xchg
lcall
int
jae
mov
or
pop
xor
or
lfs
pop
sub
mov
sbb
add
cld
cmp
lret
lret
jle
adc
popf
lock
lods
popa
jmp
xor
mov
or
jg
scas
lcall
inc
xor
pop
pop
nop
loope
sti
aam
cmp
pop
pop
jns
data16
outsl
fistpll
in
repz
fisubl
mov
fdivrs
out
add
xor
mov
insl
jo
jmp
mov
lods
and
or
fisttpl
push
cs
and
mov
cmc
not
or
push
mov
loop
mov
mov
push
inc
jmp
mov
jg
in
daa
test
and
xchg
push
mov
jle
aam
inc
jb
sti
les
push
cmp
cmp
push
and
xor
and
xor
gs
es
test
das
or
cltd
add
ficoms
cmp
mov
push
scas
scas
mov
sbb
push
int3
mov
mov
cmpsb
push
adc
nop
das
popf
sub
adcl
nop
pop
pop
sub
ds
popf
sub
sbb
repnz
adc
pop
sub
sub
pop
ljmp
cmp
xor
fildl
sbb
add
lds
dec
ljmp
dec
iret
ffreep
stos
adc
cltd
xor
pop
movsl
out
leave
insb
dec
pop
pop
pop
insl
jbe
push
aad
ret
pop
shlb
iret
hlt
jp
inc
into
jns
push
push
nop
pop
hlt
push
enter
aas
or
cmp
in
test
mov
inc
or
fisubs
sbb
lock
outsb
enter
jecxz
pop
in
mov
sbb
addl
hlt
mov
sub
mov
lret
and
adc
or
out
js
sub
mov
nop
int
test
mov
ret
sbb
push
jg
icebp
push
dec
mov
mov
mov
lods
sbb
xor
mov
xorl
sarb
sbb
test
mov
jge
or
pushf
inc
add
sbb
into
mov
xor
jl
xchg
cmpsb
jl
stos
push
push
lea
push
xlat
lods
lock
jp
sub
inc
add
int
pusha
inc
pop
mov
and
ret
cmp
jne
mov
stos
imul
je
enter
loopne
dec
jge
lret
lock
pop
sbb
test
push
outsl
jbe
jnp
scas
mov
xchg
mov
fdivl
cwtl
pop
scas
lods
aam
aam
fmull
xlat
fwait
and
std
sarl
jo
xlat
arpl
dec
idiv
adc
sbb
add
test
pop
enter
insl
in
pushf
call
and
mov
mov
arpl
mov
mov
es
jnp
test
cwtl
stc
int3
mov
sub
lret
cmc
xchg
push
cwtl
imul
clc
andb
mov
mov
js
aad
lock
lahf
cmp
aad
cltd
stos
jp
ljmp
iret
divb
inc
loopne
negl
cld
jle
movsb
dec
movsb
or
fisubrs
roll
hlt
mov
sbb
adc
dec
pop
rcr
pop
shrb
leave
add
cmp
xchg
ja
mov
test
out
and
or
add
xlat
dec
scas
push
mov
div
or
lcall
fsubr
das
push
and
enter
sub
js
icebp
dec
lcall
sbb
stc
cmpb
mov
clc
clc
test
push
int
out
and
mov
fbld
in
movl
jmp
and
cs
popf
sbb
repnz
jb
sbb
into
daa
push
sub
sub
icebp
push
testb
das
cltd
push
sbb
mov
enter
inc
mov
xorl
or
lcall
clc
push
jnp
lods
les
lods
lods
jno
xchg
sub
sahf
xchg
outsl
subb
or
and
xchg
daa
mov
cltd
mov
gs
and
mov
sub
sub
dec
test
movsb
nop
pop
in
and
arpl
faddl
mov
jae
pop
adc
movsl
push
and
adc
xor
lock
pushf
xchg
jecxz
sub
lahf
icebp
pop
inc
push
mov
sub
adc
xchg
inc
mov
mov
shlb
icebp
push
cmp
push
sahf
mov
fwait
roll
or
call
stos
push
in
movsl
mov
js
stos
cmp
xchg
or
sti
pop
test
lret
pop
dec
fists
or
mov
mov
std
out
jg
or
sahf
mov
in
lret
imul
push
call
imul
addl
xchg
hlt
rorl
adc
sub
dec
div
pop
std
or
adc
je
mov
leave
cmp
sahf
cmc
push
cltd
ret
test
mov
push
fdivrs
popf
adc
mov
mov
jp
out
cmpsl
mov
fucomp
sbb
scas
cltd
outsb
dec
ret
xchg
mov
xor
mov
loop
xchg
pop
jg
xchg
test
mov
pop
ljmp
aaa
xlat
loope
lcall
xor
dec
cwtl
mov
dec
sub
leave
cs
sbb
adc
pop
insl
or
jp
dec
mov
cs
add
mov
sub
lods
adcb
cli
and
or
orb
mov
daa
mov
mov
pop
fcompl
sbbl
xchg
or
mov
subl
jne
je
xchg
call
pop
jb
dec
cmp
mov
rclb
shrl
jg
int
les
mov
pop
je
test
sbb
scas
std
shl
adc
adc
dec
mov
mov
sbb
mov
leave
inc
lock
cmp
das
pop
xchg
dec
jnp
in
mov
xchg
inc
pushf
out
sti
sahf
es
movsb
pop
nop
ljmp
mov
out
mov
adc
sub
hlt
mov
xchg
push
dec
fdivrs
xchg
mov
testb
ret
loopne
leave
mov
lret
sti
loopne
mov
push
mov
iret
lret
cmpsb
out
or
cs
cld
insl
dec
daa
adc
mov
xchg
jecxz
xchg
push
scas
gs
sbb
adc
negl
cmpsl
mov
push
fwait
sub
xchg
push
bound
fnstsw
sbb
sub
mov
pop
sub
lock
dec
and
cltd
aam
dec
fwait
pop
pop
loope
aas
mov
loopne
cmp
mov
sahf
popa
or
mov
mov
mov
add
in
jmp
cmp
xchg
dec
pop
test
push
loopne
jae
jecxz
sub
clc
jge
jno
mov
push
mov
xchg
call
pop
shrl
jmp
inc
lods
movsl
add
dec
cmp
pushf
cmc
nop
pop
adc
mov
pop
lcall
adc
mov
and
xchg
and
arpl
dec
mov
push
int3
mov
dec
push
lret
fbstp
dec
jle
in
aam
aam
lods
icebp
cmp
sbb
outsl
mov
push
jg
dec
jnp
scas
and
mov
ret
cmp
arpl
xor
sub
cli
test
testl
push
nop
pop
test
cwtl
or
dec
adc
push
mov
enter
nop
int
inc
pop
in
out
jnp
fldenv
mov
daa
adc
push
dec
shll
enter
or
out
inc
inc
clc
jno
sbb
cli
pusha
pop
mov
inc
enter
sti
rol
mov
add
pusha
cltd
lcall
jae
mov
scas
mov
lahf
mov
or
jmp
out
arpl
scas
sar
call
outsl
push
lret
or
pushf
stos
jmp
push
cs
mov
push
xchg
cmp
mov
sti
jb
or
or
sahf
inc
lods
arpl
scas
pushf
inc
push
sar
rep
loop
jne
lahf
cmpsb
std
fildl
add
xchg
vaddsubps
scas
gs
jge
lea
iret
int3
jo
ss
jb
sub
and
out
inc
mov
mov
cmpsl
je
out
mov
push
push
jp
stos
cmpsl
in
xchg
adc
int3
in
push
cmp
sbb
lret
mov
pop
lcall
jb
or
pop
sub
pop
mov
xor
adc
nop
aas
or
push
push
push
lahf
mov
lea
test
movsl
imul
mov
jns
pop
adcl
popa
lods
mov
stos
push
icebp
mov
xor
aas
adc
test
insb
mov
jl
popf
cmp
lahf
aad
sub
adcb
fldl
push
xor
in
into
cli
push
mov
and
add
add
adc
jmp
jecxz
neg
out
xor
inc
fcoms
push
insb
or
popf
ja
and
out
and
dec
sub
pushf
cmp
fiadds
fsubs
in
dec
mov
imul
push
dec
test
lret
out
and
mov
insb
repz
cmpsl
in
hlt
xchg
mov
inc
imul
sbb
sbb
pop
jae
mov
enter
cmp
add
jge
cmp
popf
cmp
mov
cmp
test
inc
xchg
mov
pop
cli
or
sub
into
cli
jge
out
sarb
insb
dec
dec
pop
je
aad
xchg
cmpsb
mov
cwtl
sub
fwait
mov
aam
cltd
xchg
sub
daa
dec
add
xchg
rcr
sbb
cmc
pop
andl
push
popa
aaa
mov
sbb
orb
mov
add
push
pop
fwait
dec
aam
enter
jno
push
in
lods
sarl
cmp
sbb
inc
inc
int
outsb
lock
add
adc
mov
scas
cmp
inc
loope
icebp
and
aas
dec
pop
cmp
addl
mov
and
dec
sbb
rorb
add
pop
mov
inc
dec
mov
push
clc
jns
mov
repz
and
mov
mov
pop
lock
push
cmp
jne
xchg
out
shrb
xor
test
xor
adc
mov
push
xchg
aad
vhaddpd
sub
test
addl
xor
and
mov
jg
loopne
mov
paddq
test
shrb
scas
adc
cmp
and
addr16
cmpsb
fwait
sbb
lret
insl
adc
nop
popf
ja
and
fisubrl
test
cmpb
aam
int
pop
ljmp
inc
repnz
xchg
jno
dec
cmc
addr16
xchg
jne
loope
xor
mov
push
ret
shr
popf
movsb
sbb
negl
mov
jnp
mov
leave
shlb
push
cmp
pop
sbb
mov
pop
or
pop
xchg
jp
cli
arpl
pop
fst
pop
mov
popf
enter
sub
mov
xor
cmp
orb
das
adc
xchg
mov
insl
xor
pop
mov
adc
adc
outsl
xor
xor
out
and
pop
push
pop
mov
mov
shrb
pop
jbe
aam
aaa
jbe
push
xlat
mov
lahf
mov
sub
cmp
aad
pop
sahf
ret
mov
jno
mov
jne
push
sbbb
dec
sub
mov
or
mov
push
sub
enter
enter
xchg
stos
loopne
lret
mov
mov
xor
fadds
cmp
push
push
lock
stos
jno
lds
mov
pop
cwtl
mov
loopne
pushf
ss
inc
loopne
add
vpunpckhwd
call
test
jae
jl,pn
add
pop
cli
mov
into
lods
inc
push
into
ss
icebp
iret
inc
lret
nop
xor
xor
cmp
push
jb
add
mov
push
stos
roll
sbb
cltd
ss
push
cmc
call
dec
jmp
in
icebp
enter
inc
mov
mov
inc
lret
hlt
fisubrl
dec
out
or
cli
inc
sub
mov
xchg
pop
arpl
dec
cmp
lods
mov
sbb
and
sarl
push
subb
rcr
scas
xor
loope
arpl
cmp
push
add
jnp
cmp
fistpl
and
mov
in
sahf
dec
aam
stos
imul
jo
shlb
jmp
adc
aam
sti
inc
cs
pop
xchg
jmp
fs
mov
sbb
cmp
or
jle
sub
jo
or
jnp
xor
push
adc
lahf
aas
mov
push
xor
cmp
push
rclb
fnstcw
jbe
testb
xor
gs
jle
fnstcw
ds
mov
inc
adc
dec
aad
mov
jp
and
scas
andl
loop
mov
pushf
xchg
aad
shrl
movb
add
jo
mov
inc
mov
outsl
cmp
dec
subl
cmp
sub
fisubrs
ficomps
notl
sub
adc
jp
jecxz
cld
xchg
lahf
adc
mov
cmp
aaa
sub
mov
mov
dec
icebp
insb
sbb
xchg
call
test
xchg
mov
push
xor
push
xor
push
fisubl
imul
mov
mov
stc
out
sbb
mov
out
jle
fs
jge
sti
jb
or
ficoms
or
cltd
jbe
mov
or
mov
mov
fxtract
movsb
inc
aad
int3
sbb
dec
adc
push
out
sub
cmp
add
push
push
sbb
push
mov
fwait
loop
loop
pop
mov
pop
jge
inc
jnp
rcll
push
or
sub
push
gs
es
subb
out
jg
push
outsb
mov
xor
cmp
jne
fildl
mov
cmp
shlb
adc
stos
dec
mov
lcall
mov
ret
adc
shl
ja,pt
addr16
or
insb
clc
jno
jns
std
popa
and
add
mov
in
out
push
sub
push
shlb
dec
out
xorl
shr
mov
sti
call
push
shlb
out
test
in
push
sbb
gs
call
mov
push
pushf
out
jnp
icebp
jge
ja
shr
pusha
mov
nop
adc
inc
das
jne
xor
sbb
xor
inc
add
rcl
sbb
leave
xchg
or
outsl
scas
es
jno
or
jno
rcr
or
outsb
jns
jb
jmp
xchg
leave
push
pusha
jb
cmp
pop
sahf
dec
jo
neg
jle
shll
add
jns
mov
adc
outsl
jg
sbb
jne
or
jb
hlt
mov
and
mulb
test
jne
out
out
movsl
cld
mov
mov
adc
gs
push
scas
add
xchg
or
mov
lock
loop
pmaxub
sub
push
mov
ja
pop
in
icebp
shll
lock
rolb
pushf
dec
shl
js
cmc
jg
lret
add
add
dec
sub
and
pop
cmpsb
in
rcrb
mov
in
popf
mov
inc
bound
imul
mov
ret
mov
lret
outsl
push
popa
jge
lock
sub
dec
dec
ret
sarl
js
inc
lods
jbe
gs
out
jno
out
xchg
mov
into
clc
dec
gs
jae
push
adc
jg
cld
mov
cmp
test
rcrl
inc
aam
aam
cmp
inc
outsb
mov
stos
iret
jne
xor
sbb
push
ret
inc
leave
movsb
jle
outsb
in
or
adc
xor
cmp
cmp
fistpll
pop
out
test
or
lret
jb
jbe
ret
cmpsb
hlt
dec
pop
dec
jmp
cltd
mov
add
leave
call
pop
cmpsl
push
xchg
iret
mov
js
fists
jnp
and
adc
sub
dec
jmp
cmp
push
and
nop
xchg
test
or
and
mov
je
sub
mov
push
cmp
cltd
pop
in
cmp
add
adcw
push
push
lock
inc
mov
and
ds
into
mov
cwtl
push
nop
outsl
out
mov
mov
or
out
loope
cld
in
push
ret
repz
mov
xchg
jmp
sbb
sbb
xor
inc
cmp
pop
dec
pop
or
cmp
pop
mov
in
add
sbb
mov
icebp
push
adc
cmp
sub
mov
push
mov
dec
enter
hlt
dec
jp
cmp
js
jmp
mov
dec
add
addl
cmp
orb
push
xor
inc
enter
jae
mov
or
lods
mov
lret
ss
dec
jb
shl
test
xor
imul
call
popa
jns
add
pop
ret
lahf
imull
iret
addr16
daa
pop
movsb
cs
aaa
mov
imul
pop
xchg
xor
cwtl
inc
inc
jbe
cmp
dec
jecxz
cltd
xchg
repnz
out
hlt
inc
push
dec
mov
push
sub
mov
cli
add
push
mov
push
dec
mov
das
addr16
cmp
pop
jmp
jg
add
mov
xor
lret
sbb
lcall
bound
outsl
add
scas
cltd
xlat
call
jmp
lret
pop
insb
lock
pop
mov
or
fcomps
aaa
aas
xchg
rolb
popf
fldcw
cltd
bound
daa
rorl
or
bound
int
push
cmp
icebp
fnstenv
movsb
sahf
pushf
jbe
pop
mov
or
sub
or
or
arpl
dec
enter
hlt
roll
jmp
sbb
xlat
int3
roll
aaa
sbb
outsb
fwait
mov
dec
push
jecxz
jnp
mov
jp
insb
bound
mov
bound
div
out
adc
pop
mov
mov
cld
lock
mov
iret
or
mov
lret
jae
adc
jp
aaa
fbstp
in
repz
and
jne
sbb
lahf
outsl
push
mov
inc
xchg
lea
iret
and
movsb
pop
negb
inc
leave
push
sub
lret
pop
dec
pop
lret
pushf
pop
inc
test
loop
add
mov
push
sub
sbb
mov
sub
cmp
out
jnp
mov
mov
daa
pop
or
cwtl
mov
cld
mov
mov
mov
loope
stc
addr16
stc
xor
pop
into
outsb
xchg
pop
and
jb
jno
test
iret
jle
movsl
aaa
iret
adc
cmp
pop
mov
fisubs
inc
sub
int3
jbe
jp
inc
pop
xor
mov
mov
adc
xor
mov
enter
faddl
dec
jmp
push
out
mov
xchg
mov
xchg
nop
rcrb
je
loop
inc
andb
clc
faddl
lahf
push
jb
test
and
xchg
or
adc
test
sahf
pop
pop
iret
insb
je
push
cltd
les
cmp
in
push
adc
js
push
sub
jae
add
cmp
mov
push
jmp
jmp
cwtl
xchg
xchg
lock
jnp
or
loope
sar
xlat
mov
xchg
fbstp
xchg
out
sbb
mov
nop
and
pop
out
pop
popf
push
xlat
insb
pop
push
add
pop
push
addr16
mov
scas
fstpl
gs
push
push
mull
sub
mov
pop
mov
jb
mov
loopne
hlt
adc
aad
sbb
out
mov
jcxz
fdivrs
cmp
mov
int3
jle
out
fldenv
push
cwtl
call
cmp
dec
xor
fisubl
add
mov
cmpb
and
aaa
pop
adc
pop
adc
hlt
or
cmpsb
std
mov
add
cs
iret
ret
sub
adcb
fwait
mov
fisttpll
mov
mov
jp
stos
fnsave
jecxz
test
mov
test
inc
leave
sbb
lock
lock
sbb
cmc
or
sahf
jg
pop
jecxz
xchg
cmp
add
aad
fadd
jle
adc
cld
jle
mov
jge
sbb
aas
cli
loope
pop
mov
mov
xor
mov
std
push
cmc
or
mov
mov
jge
push
in
mov
xchg
fimuls
lods
mov
and
add
in
jmp
add
adc
xor
pop
gs
idivb
fwait
push
cmp
fs
outsl
or
test
cmc
shrl
or
mov
cmp
mov
push
dec
xor
out
dec
pop
int
sti
bound
rclb
movsb
inc
js
data16
inc
es
pop
inc
lret
je
mov
inc
xchg
fisubrl
sub
stos
sbb
inc
cmc
or
test
fwait
push
ret
out
pushf
inc
test
incl
pop
xchg
outsl
pushf
lea
jno
test
int
sbb
xor
mov
and
imul
mov
lods
fdivr
push
and
fwait
pop
mov
mull
arpl
test
rol
xchg
pop
lcall
aas
pushf
jmp
stc
jmp
inc
xchg
idivb
lds
test
or
mov
ljmp
test
push
sahf
inc
inc
mov
insb
inc
xor
sahf
pop
aad
push
int
lock
insb
mov
mov
xchg
aad
mov
sbb
add
insb
pop
aam
pop
test
or
arpl
movsl
sbb
push
push
sub
mov
cmp
pop
pop
inc
fstl
imul
pop
cmpsb
push
fs
xor
adc
add
push
lods
icebp
xor
in
sti
inc
pop
mov
xchg
inc
inc
jg
jp
popa
mov
jno
outsb
pop
pop
movsb
inc
stc
inc
push
inc
xor
hlt
cmp
insb
movsl
pop
scas
add
and
shll
mov
mov
pop
nop
push
nop
xchg
daa
cmp
out
jl
mov
cmp
cmp
pop
leave
lret
imull
movsl
scas
mov
je
sbb
insl
jnp
or
jl
iret
movsb
mov
imulb
shl
fnsave
gs
pop
or
daa
js
inc
pop
mov
sbbb
mov
shrb
scas
mov
loopne
dec
nop
push
lock
lret
inc
cmp
rorb
in
adcl
outsb
int3
and
adc
fcmovne
xchg
out
ljmp
sti
fdivrl
jne
insb
aam
and
mov
push
stos
out
add
xorb
xchg
testl
fildll
or
enter
xor
mov
test
mov
inc
pop
mov
pop
or
or
call
xchg
mov
cld
dec
std
std
inc
dec
ret
push
xor
xchg
push
xchg
lcallw
push
inc
and
cmp
cmpsl
imul
into
mov
inc
ucomiss
aas
xor
icebp
xchg
outsb
add
dec
lods
cltd
push
stos
and
jne
stos
inc
pop
push
lcall
xchg
stos
pop
adc
xchg
jg
fcompl
or
mov
sti
dec
pop
movsb
mov
pop
mov
aaa
cmc
or
xor
dec
loope
cmp
ffree
add
sti
hlt
neg
fwait
in
les
adc
pmaxub
mov
mov
sbb
jmp
cltd
mov
and
mov
addr16
icebp
xchg
ss
jecxz
ss
aas
stc
sub
pop
nop
mov
inc
flds
loop
jmp
in
stc
sbbb
inc
sti
cmpsb
cmpl
or
sbb
add
imull
rcl
mov
mov
mov
and
mov
add
jae
xor
cld
lret
lret
inc
loopne
repnz
dec
pop
dec
or
or
inc
dec
sbb
push
lcall
movsl
mov
jne
mov
push
sahf
test
or
xchg
mov
clc
int
mov
push
shrl
shlb
xchg
mov
xchg
push
xorl
inc
in
pop
pop
loope
daa
push
push
xor
push
ja
fistpl
push
dec
add
or
jle
sub
ret
mov
sbb
push
cmp
addr16
or
mov
cli
lods
jecxz
push
int
lahf
leave
movsb
jp
jo
mov
jge
sbb
add
into
and
shrb
mov
fdiv
iret
sbb
jnp
mov
lret
pop
fxch
xchg
daa
cmc
jp
xor
and
sub
inc
cmp
fmuls
add
xchg
test
movsb
or
int3
into
lods
data16
sbb
sarb
fwait
jb
lods
or
adc
cli
mov
pop
sub
rolb
stc
imul
out
scas
loopne
xor
and
ja
push
push
inc
mov
int3
mov
loopne
cld
das
sti
mov
push
lods
cwtl
mov
call
test
cwtl
stos
out
mov
loop
in
in
push
test
jmp
ja,pn
push
mov
fsubs
fsubrl
and
mov
xchg
repz
cmp
adc
cltd
clc
or
xchg
xor
sub
push
lds
jo
lock
jae
push
push
lods
pop
les
or
iret
cs
mov
jae
sub
dec
je
adc
push
mov
jae
roll
mov
mov
scas
fldenv
cmp
mov
xchg
popf
int3
scas
xchg
sbb
fcoms
rcr
mov
mov
movsb
aas
dec
jmp
fildll
aaa
push
jb
or
mov
pop
je
insl
pop
lock
jbe
repz
je
cmp
mov
test
js
push
jo
cli
outsb
loop
and
xchg
movsl
or
add
aad
pop
mov
popa
jnp
mov
push
cmp
jl
lea
xor
inc
jb
jae
loop
lds
push
mov
rclb
add
xchg
lock
sarb
dec
out
out
ret
sbb
xchg
lock
fildll
adc
xor
cmp
xor
out
mov
out
aas
pop
scas
aas
mov
jb
fs
pushl
xchg
jne
xchg
and
ret
sahf
jge
sbb
xchg
sbb
pop
mulb
imul
mov
adc
int
push
ret
test
test
xor
andl
or
mov
nop
jmp
xor
sub
adc
push
into
mov
mov
or
test
add
inc
cltd
inc
jl
cwtl
xor
sub
sbbl
outsl
aas
pop
push
pop
inc
shlb
negb
xor
pop
xchg
mov
test
jb
xor
dec
mov
push
aam
icebp
mov
aam
mov
fwait
xchg
mov
cs
arpl
xor
mov
pusha
mov
inc
clc
pop
jge
and
out
pop
push
cmp
pushf
jae
nop
lahf
adc
adc
in
fisttpll
pop
inc
or
rol
imul
popf
sti
adc
test
jns
stos
inc
cmpsl
icebp
push
xorb
fucomp
clc
or
add
sbb
push
or
lcall
insb
cmpsw
add
enter
fildl
cltd
fs
sub
mov
cmc
mov
cwtl
imul
xchg
cld
mov
addr16
sub
data16
bound
sbb
loope
movsl
shl
ficoms
push
and
lret
sub
jb
scas
add
or
dec
repnz
mov
push
jge
sub
int
xor
subb
js
lcall
push
sbb
std
int3
mov
lret
shlb
push
mov
loopne
fidivrl
fcomip
mov
xor
add
repz
cmp
push
out
leave
fldcw
ret
mov
sbb
pop
insl
sub
enter
dec
jecxz
outsb
xor
mov
inc
dec
je
adc
mov
fildl
insw
pop
scas
fdivs
cld
loopne
call
inc
shrb
jmp
and
push
pop
adc
fdivs
adc
jnp
popf
cmpsl
insb
mulb
cmp
jg
leave
xchg
sub
shl
jo
xor
mov
dec
pop
xchg
repnz
das
mov
ja
in
int3
xchg
aad
mov
mov
ljmp
mov
fistps
loop
lret
add
dec
mov
cmp
stos
dec
or
sub
mov
lcall
jo
rcrb
pushf
sahf
sbb
sahf
dec
shll
stc
add
stos
ror
mov
mov
and
or
push
iret
mov
push
repnz
hlt
sub
pop
jge
mov
xor
popa
mov
neg
mov
mov
shll
rep
mov
cmpsl
lods
sub
mov
dec
icebp
notb
sti
hlt
mov
pop
call
test
inc
cmpsb
cmp
adc
movsl
sub
ds
or
lret
cmpsb
and
mov
pushf
jbe
sbb
leave
repnz
xchg
int
les
ret
mov
mov
pop
test
andb
push
shll
or
jge
enter
inc
xchg
clc
mov
dec
mov
cmp
insb
pop
repz
cltd
pop
jecxz
adc
into
shlb
mov
imul
adc
add
ja
add
leave
dec
adc
sbb
lods
mov
pusha
add
xor
or
xchg
mov
push
jo
pop
push
test
jb
adc
outsb
cs
in
sub
dec
or
xor
dec
lods
pop
or
mov
mov
adc
xor
repnz
inc
cmp
movsb
xchg
rcll
ljmp
fnstsw
movsb
test
js
pop
dec
pop
cltd
dec
xchg
xor
stos
mov
push
sarb
lahf
in
out
outsb
pop
inc
xor
pop
cli
rorb
inc
xchg
adc
push
mov
lock
cld
mov
insb
div
ds
stos
pop
sub
xlat
mov
cwtl
cld
adc
inc
sarl
pop
stos
jns
adc
push
sbb
lcall
jg
add
je
add
mov
push
loopne
xchg
lods
ja
fisubrs
outsl
push
mov
pop
movsl
cmpsl
pop
test
lea
push
push
fwait
mov
mov
scas
mov
inc
popa
or
and
ja
cmp
jge
js
cld
push
push
or
sbb
pusha
mov
mov
sbb
xchg
subb
xchg
push
sbb
mov
dec
inc
mov
popa
xchg
mov
add
sub
test
jb
xor
test
xchg
and
in
or
pop
mov
std
rcrl
hlt
xor
mov
dec
jbe
mov
aad
pop
mov
movups
cmc
mov
and
rolb
add
pop
rcrb
movsl
ljmp
cmp
lods
dec
fs
fidivrl
int
jb
inc
dec
mov
dec
int3
or
cmc
daa
mov
dec
mov
add
jecxz
xor
out
test
mov
or
jne
xlat
xchg
arpl
call
lcall
mov
inc
fisubrs
pop
pop
bound
sbb
dec
fildl
aas
xor
es
shll
push
dec
into
mov
pushf
inc
in
mov
lock
insb
xlat
loop
aaa
mov
pop
push
mov
outsl
sub
mov
in
or
xchg
jle
repz
xlat
mov
enter
sub
xchg
adc
rcl
dec
loopne
adc
push
sub
xchg
dec
int3
stos
push
mov
xchg
sbb
sbb
sbb
fsts
call
inc
inc
clc
sbb
cmpl
mov
test
or
adc
xchg
hlt
inc
mov
sbb
push
pop
aaa
popl
jo
das
lret
mov
movsb
out
test
fwait
iret
iret
aad
cmc
stc
shlb
cmp
pop
dec
push
adc
mov
int3
push
pop
sti
sub
orl
jge
ds
push
lods
adc
jg
cli
pop
mov
mov
lds
out
mov
inc
push
xchg
in
ja
repnz
push
nop
add
add
sub
add
mov
pop
inc
cltd
cmpsb
dec
sub
stc
push
xchg
popa
icebp
test
stc
mov
pavgb
mov
and
or
xchg
popf
ret
lcall
mov
jne
call
pushaw
insl
xchg
sbbb
cmpl
jle
lahf
sub
xchg
cmp
shrl
pop
adc
or
xor
or
nop
in
repnz
jnp
push
lock
hlt
inc
or
mov
cmp
mov
mov
cltd
add
lcall
out
popf
xor
in
mov
or
xor
outsl
lds
dec
or
pop
cmpsb
mov
test
ret
rorl
pusha
cmp
lahf
imul
and
sbb
lds
xchg
mov
adc
sbb
nop
push
mov
sbb
add
mov
cld
or
inc
dec
call
leave
add
jae
cmc
popa
push
adc
xchg
sub
mov
iret
xchg
or
lret
xor
in
jbe
lret
push
xorb
int3
dec
xchg
cltd
idivb
decl
sub
sbb
test
repnz
cmpsl
xchg
inc
mov
faddp
outsb
iret
fsubrp
jmp
ja
jp
xchg
sbb
adc
add
movsb
gs
or
xchg
mov
pushf
je
sbbl
mov
int
mov
sub
repnz
pop
bound
mov
in
test
imul
scas
decl
shll
mov
xchg
repnz
xchg
jl
xor
or
inc
gs
dec
popa
movsl
sbb
add
pop
push
nop
fwait
dec
cmp
adc
mov
mov
ret
lds
int
adc
lret
cmp
mov
popa
mov
dec
dec
xor
xlat
sbb
cmp
push
bound
fbstp
jns
pop
stos
adc
test
or
sub
dec
xor
movsl
push
aas
dec
rcll
addl
or
repz
imul
pusha
push
dec
int
pop
sbb
negl
add
xlat
fwait
xor
in
out
lret
insl
mov
push
xchg
push
cld
sti
dec
repnz
add
push
mov
shlb
lcall
mov
cwtl
imulb
lods
add
mov
jnp
adc
inc
pusha
mov
cwtl
loop
xchg
frstor
lds
mov
pop
jecxz
mov
in
cmp
int
xchg
clc
jp
enter
repnz
and
dec
mov
mov
cs
pop
les
xchg
sbb
mov
stos
sub
fmuls
mov
fnstcw
pop
push
push
lcall
pop
lahf
bound
mov
adc
fmull
pop
jmp
mov
scas
cmc
mov
mov
leave
inc
mov
inc
xlat
loopne
gs
push
xchg
mov
mov
insl
js
cmp
sub
sar
and
sub
rcll
aas
in
dec
push
rcr
repz
push
mov
jl
enter
or
movsb
mov
daa
outsb
inc
test
out
hlt
adc
test
mov
fistpll
outsl
es
adc
icebp
imul
jnp
push
fbld
sbb
roll
push
cmc
push
into
or
mov
jno
sti
mov
lea
push
dec
loope
adc
in
add
das
jns
sub
cwtl
cmpb
mov
sbb
jecxz
cltd
test
push
stc
push
add
or
inc
push
mov
push
jno
adc
mov
out
inc
enter
inc
or
sbb
ret
add
lds
movsl
stos
mov
pop
out
nop
insb
lret
rcll
add
jne
xor
js
mov
xchg
cmp
std
lret
sahf
orb
mov
jle
int
or
lahf
xor
lea
cmpsb
xchg
lods
pop
pop
out
xchg
mov
xor
stc
xchg
sub
loop
ss
dec
jne
push
dec
icebp
js
das
fisttpl
addr16
sbb
scas
leave
lock
js
jmp
les
adc
push
jle
mov
movsl
dec
dec
ficoms
leave
scas
mov
aam
xlat
sti
dec
cwtl
jo
test
inc
cltd
and
cmpb
rclb
cmp
cmp
lahf
push
aas
negl
cmpsb
scas
sub
xor
mov
jmp
pop
lods
fs
cmpsb
xchg
and
fimuls
repnz
notb
fdivs
loope
mov
jecxz
jo
imul
stc
push
setg
xlat
cmp
bound
leave
mov
fs
pop
sbb
or
lds
pop
add
outsl
rol
mov
pop
or
js
lods
ret
sahf
mov
leave
rcll
in
push
stos
or
xchg
mov
cmp
push
or
ret
in
into
leave
je
jmp
xchg
xchg
sbb
sub
xchg
js
shlb
subb
add
mov
and
shll
fcoms
sbb
test
xchg
ja
ss
out
sub
mov
pop
jbe
divl
inc
aad
test
scas
cli
xorb
mov
cltd
cmp
mov
lcall
dec
inc
incl
aaa
jb
or
ret
movsb
xor
adc
std
not
enter
inc
jne
add
push
dec
rorb
or
or
ret
in
sti
cld
xor
cltd
pushf
scas
inc
add
bound
add
rolb
sbb
mov
inc
pop
push
push
xor
pop
push
cld
mov
inc
pop
dec
cmpsl
sbb
inc
mov
in
cltd
inc
ja
test
cwtl
sbb
push
add
daa
fucom
lea
in
inc
outsb
std
inc
scas
imul
dec
fcom
mov
fsubs
pop
out
clc
icebp
sbb
xor
sub
and
jecxz
mov
xor
out
mov
dec
push
jp
xchg
inc
mov
sub
addl
sbb
add
int3
test
mov
mov
xchg
or
sbb
enter
pop
aad
daa
enter
imul
test
pop
movsb
fmull
sbb
pushf
mov
xor
sbb
shll
dec
cmpl
ficomps
out
adc
or
mov
in
cmp
jge
fwait
ret
jae
leave
xchg
dec
xlat
jg
jne
fisttpl
js
stos
jnp
or
int
cltd
stos
cld
es
dec
adc
imul
les
pop
and
mov
xor
les
cs
cld
sbb
mov
sub
mov
not
mov
mov
clc
xchg
inc
sub
inc
add
push
cld
xor
dec
stos
in
sbb
sub
arpl
mov
pop
repz
adc
ss
xchg
ss
mov
mov
dec
mov
sbb
inc
push
pop
mov
xchg
int
mov
mov
inc
pop
stos
xor
push
xchg
sub
or
mov
or
inc
mov
pop
or
jl
ds
imul
adc
mov
xchg
shll
push
xor
dec
hlt
out
dec
jne
xlat
test
subb
enter
test
xchg
lret
jo
leave
or
icebp
adcl
icebp
xor
inc
insl
stos
sub
popf
xor
shlb
push
cmpsl
popf
fdivs
stos
fcmovnbe
outsl
aas
push
icebp
call
std
loop
push
mov
pop
jne
mov
xchg
cmova
or
mov
out
rcrb
dec
bound
pop
jmp
cmp
loop
mov
xchg
int3
push
leave
int3
dec
andb
sti
aam
das
mov
outsw
inc
test
inc
sub
or
or
cmp
xchg
jl
cmpsl
add
sub
pop
jo
mov
fisubl
ficoms
fwait
sub
and
into
out
sub
cmp
in
add
cmc
inc
add
notb
testl
dec
push
imul
push
push
int
and
xchg
xchg
movsb
ljmp
adc
gs
mov
in
jo
popa
dec
push
int
fildll
push
dec
out
or
sub
pop
dec
popf
adc
push
popa
out
dec
sbb
cmp
fstp
insb
fstpt
cwtl
inc
xchg
lods
test
adc
clc
test
sub
or
pusha
fsts
imul
lcall
add
dec
aam
jmp
xchg
mov
push
outsl
jbe
cmovns
test
loope
stc
movsb
test
pop
cmc
leave
scas
lahf
test
inc
mov
dec
mov
mov
and
in
pusha
enter
and
xchg
fcomps
daa
mov
mov
jmp
fstps
adc
adc
pusha
std
xchg
jecxz
test
jecxz
into
xor
sub
adc
mov
pop
fbstp
xchg
add
sbb
sub
mov
scas
sbb
add
cwtl
lods
pop
pusha
loope
cltd
and
jle
std
inc
push
xchg
lock
movsl
jg
and
push
xor
pop
mov
test
in
pop
add
arpl
icebp
insb
imul
xorps
xor
pop
inc
sti
and
xchg
add
mov
cmc
notl
repz
dec
adc
ds
or
or
inc
lods
sub
pop
pop
or
call
mov
icebp
iret
iret
sbb
jo
out
testb
mov
test
push
lea
jg
fcoms
ret
cltd
out
push
leave
fistpll
jle
popf
pop
out
sahf
aad
pop
jb
movl
pop
scas
mov
sbb
adc
add
xor
repz
mov
bound
andl
scas
xorb
jp
pop
sahf
iret
sub
addr16
push
add
pop
mov
dec
push
push
repnz
sti
mov
int3
push
jnp
jp
adc
adc
xorb
rdpmc
inc
mov
lahf
and
mov
aas
test
rcr
lret
fwait
mov
push
inc
dec
into
jp
or
cwtl
add
aas
pcmpeqd
jb
mov
js
bsf
cmp
stos
add
rsqrtps
mov
jb
cmpsb
sub
adc
fildll
ret
fsubrs
cmp
inc
inc
dec
sbbb
mov
pop
push
mov
aam
mov
jbe
sub
test
ja
xchg
jne
aad
mov
mov
mov
cmp
adc
push
add
mov
ds
dec
cmp
cltd
push
sbb
mov
mov
call
inc
mov
ds
add
pop
data16
cmp
test
rclb
add
cs
xor
sub
repz
insl
jl
out
je
imul
icebp
add
cmpsl
daa
push
stc
fidivl
jnp
out
cltd
adc
sbb
inc
mov
lds
js
or
fstps
and
jle
dec
int3
js
jmp
mov
popa
div
aam
xor
sbb
out
sub
daa
jb
repz
lods
adc
add
mov
push
aaa
pop
movsb
and
das
pop
mov
jge
enter
ja
imul
mov
clc
mov
xor
cmpsb
js
jp
clc
jmp
pushf
fcoms
out
adc
dec
leave
or
mov
pop
or
jp
rep
int3
lds
xchg
mov
mov
das
outsl
sahf
adc
adc
xchg
adc
dec
xchg
out
mov
mov
sbb
mov
fnstcw
mov
ret
mov
in
cmpsb
mov
mov
sub
pop
mov
shrb
imul
xchg
jp
xchg
sbb
stc
dec
pop
call
aad
mov
mov
movlps
jb
inc
shlb
push
sub
insl
insb
and
pop
addr16
jle
js
sbb
inc
xlat
xor
mov
pop
aad
scas
leave
lea
stc
daa
std
mov
dec
mov
push
inc
adcb
mov
cmp
cs
jmp
movsl
xor
jne
fildl
imul
mov
pushf
addb
xorb
repnz
in
loopne
call
mov
aam
adc
insl
das
and
sub
dec
cmp
int
ret
ljmp
cltd
idivb
in
insl
add
dec
icebp
outsl
repz
sbb
push
pushf
clc
pop
int3
imul
or
in
xchg
mov
into
mov
sbb
jmp
push
incl
outsb
pusha
cmp
incl
inc
mov
iret
pop
ds
mov
add
push
jno
cmpsl
jmp
lahf
or
movsl
sub
xchg
les
sahf
inc
leave
mov
sub
das
mov
inc
sub
xor
cmp
testb
int
pop
in
and
xlat
hlt
aaa
push
lock
mov
pop
repz
sbb
int3
and
hlt
outsl
jp
mov
push
testb
shll
shl
fwait
sarl
xchg
or
pop
mov
pop
push
mov
ret
and
std
aam
jl
stc
mov
addr16
xor
bound
jg
popa
jne
push
loopne
fnstenv
xchg
push
pop
and
mov
pop
jle
mov
dec
scas
mov
imull
gs
adc
jo
mov
jns
ret
rolb
xchg
andl
cld
xlat
cmc
add
mov
mov
lea
xor
test
pop
je
and
sbb
mov
pop
imul
mov
mov
sub
ffree
push
inc
pop
ror
scas
test
ja
mov
call
inc
mov
inc
push
std
outsl
xchg
into
add
out
add
xchg
jae
js
cmc
lods
stos
mov
into
sarb
mov
jb
adc
roll
and
mov
outsb
lock
mov
sbb
push
pop
mov
leave
loop
jge
xchg
xor
push
fldl
lcall
inc
or
jne
ret
xchg
cmp
cld
pop
jl
inc
sti
adcb
inc
jnp
ljmp
jmp
lret
mov
scas
shrb
cmp
sbb
shrl
daa
push
test
out
sbb
mov
sub
xor
sbbl
xchg
adc
fwait
insb
cmp
cmpsb
and
sub
mov
fdivl
xor
push
pop
shll
sub
je
ja
or
icebp
jmp
xchg
push
push
jno
shrb
lds
or
fisttpl
and
add
lahf
test
jg
xchg
xor
mov
push
sti
cld
cltd
xchg
or
mov
pop
aas
and
subl
in
add
jnp
lods
sub
hlt
add
push
cmpsl
fmuls
and
pop
pop
cmp
int3
in
aaa
insb
rcrl
aas
daa
es
sub
vmovhpd
adc
pop
sti
inc
iret
rorb
cmpsb
out
mov
pusha
into
xchg
push
fucomi
in
add
out
mov
mov
mov
add
dec
sub
add
sub
pop
mov
sbb
fisttpll
ds
adc
fsubp
mov
mov
adc
add
imul
xchg
push
push
ljmp
xchg
pop
push
or
or
adc
and
test
loope
bswap
inc
aaa
stc
push
pop
push
leave
filds
ffreep
mov
cmp
xchg
rcrl
aam
xlat
out
jg
popf
negl
xor
mov
loop
shlb
cmp
jbe
cs
or
pop
outsl
pop
arpl
sub
movsl
xchg
sub
daa
xor
mov
jnp
leave
mov
leave
or
sbb
lods
addb
add
enter
xor
jns
jae
mov
add
push
mov
int3
pop
adc
dec
mov
outsb
std
or
push
fimuls
lret
pop
les
xchg
gs
pop
sbb
xchg
enter
jb
inc
fstl
jle
nop
xchg
fcomp
and
cmp
stc
pop
xchg
sub
fsubl
js
ror
cs
xlat
fimull
sub
pop
stos
adc
mov
das
cwtl
jne
sub
push
xchg
cmp
mov
call
lods
iret
ja
mov
fstps
loopne
xlat
jae
cmp
mov
fld
xor
jbe
pushf
push
sub
ret
mov
aaa
push
jle
dec
popf
ficoml
lea
adc
movsb
push
aam
sub
popf
add
jnp
cmp
cld
push
xchg
mov
jo
mov
and
daa
leave
and
xchg
lahf
rcrb
sbb
adc
inc
arpl
enter
sbb
inc
jp
push
imul
mov
sbb
adc
xchg
jb
xor
mov
push
adc
dec
lock
jno
mov
sbbb
mov
out
scas
add
shlb
and
cmpsl
nop
lds
scas
scas
dec
inc
cmp
mov
fs
jecxz
jp
mov
popa
dec
adc
cmp
sub
and
fidivl
enter
insb
aas
in
clc
das
movsl
mov
js
and
xlat
inc
cmp
push
int
mov
fsts
bound
cmp
jl
pop
rcll
test
inc
jb
iret
ror
lock
cmc
xor
mov
mov
imul
and
rorb
ja
jl
cmp
adc
jb
mov
pop
push
subl
sahf
lods
inc
scas
mov
int3
dec
push
enter
arpl
popa
out
es
mov
xor
lods
mov
jbe
jg
sub
add
fcomp
cmc
mov
jae
dec
or
std
ja
mov
enter
imul
movsl
jno
dec
fldenv
out
xchg
pop
in
cmp
jae
xchg
push
inc
xor
sub
outsb
aaa
clc
repnz
cmp
pusha
and
fwait
sbb
adc
dec
mov
fwait
cmp
push
adc
cmp
sbb
inc
outsl
mov
and
in
insl
int3
push
dec
inc
shrb
lahf
popa
push
leave
mov
inc
leave
add
imul
xor
jmp
je
and
out
jae
add
push
cmp
dec
add
neg
mov
inc
icebp
arpl
jmp
sub
sub
xchg
ret
push
repnz
cmpsl
repz
sbbb
sarl
lahf
mov
xor
in
aad
rolb
push
in
cmpsb
dec
dec
into
out
cld
out
lea
inc
mov
xor
push
mov
lcall
cmp
mov
jle
adc
clc
repnz
sahf
sub
adc
nop
hlt
out
push
incl
popa
sbb
idiv
loopne
loop
loop
psubd
fmuls
cmpb
cmp
popa
xchg
or
jg
mov
aaa
and
hlt
outsb
or
jmp
aas
das
ja
xchg
ret
aaa
call
fisttpll
dec
xor
imul
inc
ss
fwait
or
mov
es
pop
notl
pop
adc
sbb
inc
ja
adc
or
fincstp
add
fsubs
push
or
xchg
lds
mov
cmpsl
mov
int
cmp
and
dec
ss
xchg
fisubrs
jb
enter
fwait
test
pop
pop
and
sbb
adc
xlat
push
scas
hlt
pop
out
pop
das
mov
sti
in
aad
jp
or
es
sbb
or
clc
sub
in
sub
gs
inc
ljmp
jle
and
and
xlat
push
add
or
test
mov
das
loopne
cs
movsb
ljmp
inc
jb
subl
sub
lea
lret
xor
cwtl
mov
push
dec
jnp
mov
pop
insl
push
shll
sub
push
test
int3
mov
mov
sahf
sti
aas
inc
or
push
jno
xor
inc
lcall
mov
push
xchg
or
push
loope
lret
leave
push
testl
call
bound
iret
stos
je
rorb
fcoml
call
mulb
xchg
mov
adc
xchg
imul
or
insl
in
jp
in
pop
sarb
add
pushf
clc
push
loopne
int
jbe
loopne
adc
scas
sti
sub
or
ret
cmp
mov
inc
adc
mov
sub
dec
rol
loop
and
and
sbb
sbb
cmpsl
sti
mov
sbb
push
sub
stos
sub
add
shrb
movsb
jecxz
jnp
dec
test
dec
fucomp
imulb
xchg
push
shlb
sub
xchg
iret
push
xor
mov
dec
sahf
cmp
mov
movsb
stos
popf
cmc
inc
rorb
in
movsl
lahf
adc
or
jmp
xchg
jbe
hlt
pop
push
fcmovbe
shl
jae
jge
in
mov
scas
xor
aam
sub
out
mov
dec
jno
pop
aaa
aas
std
add
stc
ja
popa
xor
mov
xchg
mov
push
into
int
xor
mov
outsl
push
sbb
out
sbb
ret
inc
ss
test
adc
or
adc
pushf
xchg
add
repnz
push
daa
sub
pushf
xor
or
push
rolb
int3
rolb
dec
pop
push
dec
repnz
sub
popa
add
inc
mov
mov
ret
cmp
adc
sbb
mov
cmp
dec
fisubrs
add
loopne
loop
pop
jl
movsb
ret
aam
pop
push
add
popa
push
inc
bound
lret
fnstsw
mov
add
repz
in
mov
aad
sti
dec
rcll
push
add
pusha
sbb
call
adc
and
push
xor
mov
pop
or
and
sbb
rclb
scas
sbb
jno
in
cs
push
lcall
mov
mov
ficompl
aas
das
mov
pop
out
out
cwtl
jp
pop
lahf
sbb
pop
mov
popl
aad
pop
popf
test
sbb
out
daa
test
mov
fcom
and
push
jns
fldl2e
insl
adc
mov
xor
rcl
rcr
flds
cmp
add
sub
xchg
or
add
xchg
test
mov
xchg
ds
cmp
mov
xchg
js
std
in
pop
imul
jmp
fadd
mov
xor
and
push
dec
lret
stos
push
rolb
jl
hlt
mov
pushf
in
pop
cmp
pop
or
lods
icebp
cmp
mov
arpl
sbb
mulb
push
call
mov
into
inc
pop
fmuls
dec
mov
pop
mov
push
or
addl
xchg
int3
sub
negl
aam
and
jge
push
mov
out
jmp
push
jmp
clc
nop
dec
in
sbb
shlb
test
add
cmc
loope
dec
jmp
lcall
inc
add
cld
inc
mov
xor
pop
fldt
pop
fstpt
roll
jg
cmp
hlt
mov
repnz
dec
or
cmp
push
fsubr
fistl
lcall
inc
inc
inc
cld
sarl
shll
mov
push
iret
xchg
movsl
mov
mov
add
jecxz
jp
repnz
jge
push
sbb
mov
sub
ret
mov
add
aas
jp
iret
fdivs
pusha
sti
add
je
cmp
adc
call
push
push
stc
sub
mov
sub
ror
mov
popa
divb
and
lret
sub
or
mov
enter
dec
sbb
mov
imul
push
fildl
push
jg
push
xchg
out
enter
lret
out
jb
fdivl
xor
dec
pushf
mov
test
into
inc
dec
in
jmp
dec
ds
pusha
sbb
or
or
rcrl
mov
dec
shlb
rolb
out
lret
mov
stos
das
ror
or
and
stc
sbb
pop
adc
mov
insl
and
cmc
outsl
adc
xchg
sub
mov
push
mov
or
cmp
ss
das
xchg
cmpsl
xor
xor
push
cltd
pop
and
test
ja
inc
sub
add
mov
clc
xchg
jecxz
pop
inc
dec
cwtl
dec
mov
push
pop
jne
popf
mov
xor
sbb
lods
dec
lret
xchg
inc
sbb
cs
xor
sarb
xchg
dec
inc
test
andl
pop
adc
sbb
inc
sub
je
jae
and
test
mov
pop
test
mov
popa
popa
xchg
ljmp
jp
stos
jle
xor
in
add
lock
int
leave
ss
dec
das
and
pop
xchg
sbb
insb
push
xor
scas
iret
inc
mov
movsb
jmp
jb
sbb
les
out
inc
xor
jecxz
sti
jle
popa
test
jno
jae
xchg
repz
cmp
clc
loopne
xor
inc
lock
pop
xchg
mov
sarb
incb
xchg
add
or
es
in
mov
lahf
sub
int3
daa
stos
inc
push
inc
rolb
popa
jmp
lea
loope
push
ds
addr16
or
or
pop
mov
insl
pop
jl
push
stos
sub
andb
ret
mov
clc
xlat
jecxz
ja
mov
sub
ja
in
jb
pushf
stc
hlt
imul
xor
mov
mov
mov
adc
popa
inc
outsb
mov
add
mov
xor
add
rol
adc
pop
mov
imul
xchg
cmpsb
mov
div
sbb
int
push
movsb
js
xlat
movsb
cmp
out
sbb
cmpsl
xor
rcrl
pop
xor
sarl
and
sbb
pop
and
loope
pop
jnp
pushf
cmp
and
pop
cld
lock
fwait
pushf
sub
and
lret
adc
sub
push
pop
ss
inc
add
inc
xchg
lret
outsl
ror
dec
dec
push
sti
xlat
aam
hlt
clc
sarb
notl
mov
adc
add
dec
pop
clc
rorl
inc
pop
nop
or
cld
jb
loope
adc
sub
je
scas
push
lock
shrb
mov
lods
mov
fwait
imul
or
mov
loope
add
and
adc
popf
cmp
adc
pusha
push
mov
jg
hlt
cmpsl
jb
bswap
stos
popa
mov
mov
or
in
in
push
lods
int3
lea
test
mov
in
lds
ja
xchg
mov
mov
add
dec
and
mov
test
jns
jmp
scas
fcomps
xlat
pop
jmp
fisttps
fimuls
in
jb
mov
imul
jns
std
push
orl
xchg
dec
add
xchg
outsb
inc
fstps
aam
imul
insl
testl
jmp
fdivr
xchg
sbb
ja
mov
mov
inc
pop
mov
test
in
shrl
mov
hlt
sub
adc
in
xor
sub
sub
adc
adc
xor
cmpsb
bswap
dec
cmp
ss
lret
stos
mov
or
daa
adc
popa
and
movsb
xchg
insb
cwtl
lcall
pushf
xchg
pop
add
xor
sub
inc
jmp
push
pop
stc
lods
add
loopne
pop
mov
stos
jae
pusha
add
xchg
adc
pop
xor
dec
inc
cmp
rorb
lcall
xor
fistpl
bnd
fisttps
push
ret
out
adc
push
pop
cli
int
mov
fmull
xchg
mov
mov
enter
push
lret
xor
sub
lods
xchg
lret
in
pop
dec
aas
das
xchg
sub
das
outsl
pop
pop
or
repz
pop
inc
ret
call
std
mov
notl
call
fisubl
jae
pop
inc
push
test
lcall
cmc
push
call
jmp
fisubrl
ja
mov
nop
mov
pop
lea
mov
push
sbb
push
ss
fistl
outsb
sub
lods
mov
cmp
clc
sub
xchg
aad
push
dec
and
ljmp
jne
and
cltd
xchg
fwait
les
test
push
lret
pusha
test
xchg
xchg
sub
inc
xchg
repz
xchg
decb
add
popf
je
mov
out
jmp
mov
pusha
push
sbb
add
ret
xchg
or
ds
lods
ja
xchg
mov
inc
mov
and
cmp
ljmp
aam
scas
lret
nop
insb
lock
cwtl
test
xor
sub
and
cwtl
xor
mov
bound
fstpt
mov
fsubr
push
out
je
push
aas
in
xchg
arpl
mov
add
add
scas
mov
in
pop
xor
aaa
jecxz
mov
sub
mov
lret
push
sub
setp
mov
pop
mov
dec
mov
aad
ljmp
test
nop
jl
inc
jbe
xor
jecxz
test
cwtl
add
pop
push
and
and
dec
neg
jl
dec
rclb
or
lret
js
jae
xor
sbb
jae
out
or
int3
in
mov
cli
out
cmp
imul
xchg
fwait
xor
jnp
cltd
inc
mov
mov
add
aas
pop
or
lds
pushf
ret
sbb
jecxz
lds
ret
ds
std
push
arpl
mov
inc
mov
xorl
mov
xchg
fbld
cwtl
dec
xor
mov
std
cmp
pop
test
mov
scas
cmp
aam
scas
fdiv
or
jle
pushf
sarb
xchg
adc
stos
fistps
repz
push
and
mov
inc
sbb
sub
mov
cli
iret
xor
sub
pusha
add
push
repz
push
out
cmpsl
xchg
add
inc
scas
jo
das
test
sub
push
sbb
fimull
pop
lods
adc
sub
push
insl
adc
adc
fcomip
js
mov
lock
mov
mov
cmp
fistl
lock
mov
xor
cwtl
push
xchg
sbb
mov
push
lret
cltd
add
loop
inc
call
push
pusha
push
js
ljmp
xlat
rcrb
movsl
stc
dec
mov
push
out
stos
test
jo
push
cmc
sbb
push
cmpsl
xor
ljmp
aad
mov
out
or
inc
sbb
jl
loop
ljmp
lds
adc
add
sub
shl
or
cmp
mov
mov
and
jp
shlb
mov
push
xor
js
call
pop
sbb
inc
inc
lret
rorb
xlat
or
test
dec
loope
xor
mov
add
push
dec
sub
pop
imul
lods
adc
ljmp
in
fldl
xor
nop
popf
push
mov
fmul
mov
mov
movb
imul
in
cmpsl
push
add
push
xchg
dec
pop
notb
stos
insl
pop
rcr
je
rolb
sbb
cmpsb
xor
je
cmp
adc
int
mov
dec
jnp
push
xor
mov
insb
xchg
cmp
insb
movsl
lock
iret
out
imul
repnz
pushf
rcll
push
std
xor
mov
add
mov
pusha
scas
jp
iret
fcoml
repnz
jne
cld
lret
sub
cwtl
lock
cmpsl
add
shll
pop
out
divb
jae
out
fldl2e
test
daa
je
xor
sbb
inc
xchg
insb
mov
cmp
adc
nop
push
fnstsw
mov
xor
and
push
pop
in
dec
xchg
aas
cmp
movsb
insb
in
imul
test
or
mov
jns
repnz
jecxz
sarl
sbb
xlat
aad
or
in
addr16
sbb
jecxz
cmpsl
sub
jle
rcrl
notb
popa
enter
popa
data16
jnp
and
fsts
faddl
push
int3
inc
subl
mov
cmp
outsb
adcl
lea
or
sub
jl
xor
ficomps
mov
pop
sub
lcall
test
jl
pop
dec
ja
ljmp
les
stos
addl
repz
out
pop
test
mov
jmp
xchg
inc
lahf
add
push
cs
fsubrp
xlat
adc
dec
mov
das
in
inc
cli
mov
xchg
pop
inc
pop
sbb
aam
pop
and
or
push
pushf
sarl
outsl
sarb
outsl
dec
dec
popf
mov
divps
movsb
xchg
test
je
fcompl
sti
jne
std
test
and
cmp
xor
mov
jg
or
sub
pusha
cs
outsb
xlat
icebp
sub
test
fists
xchg
test
fs
cmpsl
aas
loope
movsl
xor
test
stos
sbbl
mov
nop
loopne
cmp
push
sub
cmc
push
pop
cmp
dec
addr16
ret
cltd
leave
mov
ljmp
cli
xchg
imul
stos
sbb
fiaddl
xchg
xchg
fsts
sahf
into
cmp
popa
sbb
inc
dec
mov
jge
ja
sti
ror
jmp
dec
pop
inc
push
pop
movsl
in
dec
and
adc
in
xor
cld
iret
xor
call
sbb
push
push
js
bound
inc
xor
fsubrs
cwtl
or
and
and
adcl
pushf
lods
jnp
cmp
pop
pop
adc
arpl
cmpsl
mov
out
int
cwtl
push
pop
jp
scas
cmc
out
ret
sbb
scas
rcrb
push
inc
sbb
jl
cmp
lret
push
into
cli
sub
dec
xor
hlt
repz
addr16
outsb
and
mov
add
loope
cmp
outsb
sbb
cmp
cli
mov
test
loop
test
movsl
imulb
sub
and
aam
mov
and
mov
inc
push
aad
push
frstor
out
xchg
dec
repnz
fisttps
js
inc
dec
mov
xlat
loopnew
inc
or
sbb
adc
push
int
int3
in
mov
jnp
or
mov
loop
and
mov
inc
mull
mov
out
cmp
lds
shrb
ror
xchg
scas
cs
daa
sbbb
inc
mov
mov
es
mov
pop
clc
cmpsl
scas
push
fwait
mov
dec
cmp
lea
cmp
data16
out
fs
xchg
inc
aas
nopl
adc
cmpsl
test
aas
lea
test
fiadds
loope
je
mov
xchg
mov
aas
jnp
xchg
adc
cmp
xchg
sbb
or
and
icebp
movsb
cwtl
and
in
jmp
popw
scas
cmp
jle
mov
ret
pop
outsb
xchg
jge
jg
xor
mov
jbe
and
inc
mov
std
mov
ds
incl
lock
or
stc
sahf
sar
pop
adc
sub
pop
sub
pop
sbb
mov
sub
sub
enter
jns
stc
jno
mov
push
jns
cmp
iret
cli
or
dec
and
aas
cmp
push
adc
sbb
and
jmp
out
mov
test
