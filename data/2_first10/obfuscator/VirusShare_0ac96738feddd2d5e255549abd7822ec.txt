push
call
ret
ret
pop
mov
lea
sahf
mov
cmp
aam
lea
sbb
insl
out
lods
xor
scas
out
test
inc
cmp
xor
stos
outsb
popf
gs
lcall
aam
adc
inc
pop
mov
popf
cmpsb
jno
add
or
cltd
lea
sub
jecxz
scas
cld
imul
mov
outsl
scas
push
inc
adc
sub
xchg
call
addr16
pushf
lea
mov
jp
xchg
lret
hlt
push
stos
sbb
mov
daa
notb
lret
push
arpl
insb
jns
jb
pop
int3
and
test
pop
mov
in
in
inc
clc
fnstsw
stos
arpl
cmp
daa
pop
sub
daa
ljmp
cltd
jae
repz
mov
mov
adc
add
sahf
mov
sub
ret
or
mov
xchg
add
add
sub
int3
adc
push
fidivs
fildl
jne
sub
jno
xchg
insl
enter
xchg
jb
arpl
in
pop
inc
jg
sar
fidivl
loope
pop
fsubrp
sub
pop
aam
movl
ficoml
push
jbe
push
mov
test
outsl
cmp
scas
test
mov
sbb
xchg
pop
push
fisubrs
or
lcall
scas
pop
mov
mov
xchg
ljmp
fldl
inc
inc
jnp
popf
inc
dec
push
and
das
and
jle
dec
sub
out
test
repz
adc
jmp
adc
inc
dec
ret
jecxz
shlb
rorl
mov
sub
push
add
dec
orb
aam
fdiv
add
sub
outsb
ret
inc
div
es
fimuls
mov
lret
xchg
jecxz
stc
shll
pop
xchg
cmp
cmc
push
and
dec
clc
cmp
jg
pop
sahf
hlt
fwait
push
aaa
ret
decb
in
scas
cmp
pop
cmpsb
mov
cwtl
push
sbb
add
outsb
decb
mov
push
cld
mov
cmc
sbb
pop
add
mov
inc
aaa
push
jnp
sbb
push
and
out
push
jns
push
cmp
jno
push
xor
ret
mov
test
imul
shlb
push
out
cli
outsl
outsb
cmp
sub
jb
inc
mov
bound
dec
jbe
push
sarb
sti
aaa
inc
mov
and
test
jnp
mov
icebp
jle
or
jmp
mov
test
fmuls
mov
inc
pop
mov
fimull
iret
mov
incb
inc
xchg
sbb
pop
addr16
add
push
pop
imul
adc
mov
sub
aad
cmp
mov
daa
cmpsb
mov
sub
cmp
dec
rclb
mull
xchg
push
mov
imul
lods
mov
iret
dec
in
lds
cmp
dec
in
push
add
mov
ficomps
je
add
loope
inc
fildll
jae
shl
add
sahf
add
inc
leave
mov
push
daa
in
mov
pop
pusha
jno
cmp
adc
mov
aam
lds
mov
popa
xchg
cmp
fwait
dec
hlt
adc
jge
adc
mov
dec
pop
int
mov
inc
adc
or
lock
outsb
out
xor
cld
popf
shll
xor
pop
add
or
sbbb
dec
and
fsubrp
mov
js
aad
fwait
movsl
cwtl
inc
mov
push
pop
jae
popa
jg
jb
jns
sub
jp
xor
fistps
xchg
pop
bound
paddsw
inc
cmp
jb
mov
mov
and
sub
add
push
sahf
sub
jp
inc
inc
js
jb
addb
ror
or
cs
xlat
aas
movsl
repz
or
ja
adc
js
and
dec
hlt
pop
popf
inc
and
das
cmp
sub
push
xchg
jge
stos
arpl
stos
cmpsb
fiadds
test
push
add
hlt
cwtl
sbb
cmp
mov
cltd
pusha
mov
pop
cmpb
loop
daa
jmp
dec
cwtl
push
outsb
add
xchg
stos
push
andl
xchg
jne
sbb
dec
mov
jle
jb
lcall
xorl
hlt
int3
inc
mov
pop
jno
sbb
fistpll
stc
divl
jmp
sarl
xchg
jle
mov
lret
or
ljmp
aaa
mov
loope
in
leave
in
add
xchg
dec
out
jns
scas
lods
push
stos
cltd
and
cmc
inc
iret
imul
pop
mov
clc
or
jmp
dec
sbb
push
in
in
mov
sti
movsl
pop
push
xorb
or
push
shrb
push
fs
fmuls
maxps
pop
mov
jmp
call
sub
movsb
cmpsb
jbe
lods
fsubs
sbb
clc
test
mov
pop
push
sub
lcall
das
mov
inc
add
cmp
xchg
btc
jmp
push
ficoms
enter
fnsave
out
mov
movsl
pop
sarl
cmpsb
cmc
or
dec
push
xor
stos
xor
mov
sbb
test
jge
notb
loopne
sti
lcall
lock
adc
repnz
nop
mov
dec
cmpsl
aas
cmpl
bound
mov
sub
sub
dec
adcb
lods
pop
mov
icebp
mov
xor
push
sbb
fcomps
fiaddl
xor
push
rcll
sub
mov
es
inc
mov
mull
scas
mov
add
stos
fbld
push
cld
push
xor
aas
push
add
jo
xchg
incl
mov
and
jle
scas
pop
mov
push
add
xchg
loop
ficompl
add
sub
mov
out
mov
movsb
enter
adcl
sub
fsubr
fiadds
mov
call
cwtl
adc
lock
cmpsb
pop
ljmp
les
in
xor
ja
addr16
shl
insl
add
fs
inc
cmp
push
inc
lret
inc
mov
xor
add
pushf
in
sahf
aas
scas
inc
mov
addr16
add
pop
imul
test
subps
rclb
out
pop
push
xchg
ficompl
std
mov
or
adc
xchg
push
cld
mov
cmpsl
dec
pusha
shr
jnp
cmp
sbb
mov
int3
dec
push
les
jecxz
dec
sbb
insb
push
or
xor
cmpl
ret
rcl
das
cmp
sbb
jecxz
push
fstpl
and
insl
jg
pusha
jns
ljmp
outsl
pop
std
mov
sbb
stos
xchg
clc
jns
mov
fcmovu
or
lahf
paddsb
push
int3
arpl
pop
decl
rorl
and
adc
ds
loopne
pop
imul
adc
dec
je
stc
mov
mov
push
xchg
js
jecxz
cmp
push
pop
loop
jns
aad
cmp
jl
jmp
jne
mov
pop
out
lahf
shrb
shll
movb
fdivs
mov
cmp
ljmp
xlat
loop
push
sub
mov
call
and
iret
mov
lock
dec
mov
aam
xor
jecxz
shl
mov
idivb
scas
pushf
cld
inc
inc
xchg
cmp
mov
fdiv
xor
adc
jl
data16
sbb
sbb
mov
insl
add
push
mov
ret
mov
pop
sbb
push
lods
adc
ljmp
sbb
inc
adc
add
xor
js
outsb
fstpl
gs
cmp
mov
pop
jns
cmp
in
stos
pop
push
jl
mov
std
loop
jnp
or
cli
add
callw
test
insb
push
mov
or
das
jmp
pop
cmp
xchg
pop
xchg
or
gs
pushf
icebp
fs
add
pusha
xchg
imul
jge
xor
sub
cmp
mov
daa
or
adc
orb
mov
xor
sub
cmpsl
xchg
adc
or
shrb
out
imul
dec
sti
sbb
int
xor
daa
mov
loopne
mov
cmp
loop
popa
mov
stc
inc
push
adc
test
shlb
xchg
push
and
std
out
and
jne
add
pushf
aaa
adc
lret
jne
aas
aam
repz
out
fwait
xor
dec
ljmp
jns
ret
into
es
ja
mov
ficoms
pop
insb
les
jne
mov
imulb
outsb
shlb
faddl
test
daa
pusha
adc
scas
gs
fisubl
jnp
dec
inc
pop
xor
shl
scas
mov
mov
and
mov
xlat
push
hlt
incb
divb
ret
enter
cmp
and
xchg
mov
movsb
pop
add
out
shll
or
imul
jmp
lock
cmp
sbb
into
cld
pop
fsubs
inc
add
pop
sti
xchg
mov
dec
mov
sub
data16
xchg
cmp
mov
xor
xchg
push
inc
xor
jae
jb
sub
pop
call
mov
or
sahf
xorb
and
aam
orl
test
pusha
sbb
xchg
pop
lds
cld
pusha
mov
stc
mov
pop
xchg
movsb
test
mov
jg
loopne
test
lds
sub
and
ds
cmp
sbb
popf
or
dec
scas
push
enter
cs
inc
add
je
push
push
jnp
sbb
cmp
out
test
adc
inc
add
sbbl
aaa
decl
dec
xchg
jge
test
test
mov
fldcw
jb
ss
inc
push
fwait
mov
jbe
inc
push
bound
push
xchg
in
and
and
lcall
sbb
lock
out
out
xchg
push
and
jnp
push
sbb
fldt
lock
out
jmp
testb
lds
cmpsb
xchg
out
mov
mov
scas
pop
mov
cltd
gs
hlt
sub
vcvtsi2sdl
std
imul
inc
pop
mov
cmp
cmpsl
push
enter
stc
dec
mov
and
das
mov
shlb
mov
or
mov
iret
xchg
sub
insl
lret
inc
movl
movsl
pop
mov
mov
adc
cld
mov
shll
xchg
in
ficoms
les
dec
jb
mov
lcall
push
xchg
shlb
scas
jl
mov
mov
fstps
std
dec
add
outsb
inc
inc
pop
sbb
mov
pushf
cmp
xchg
sbb
jbe
xrelease
xchg
dec
into
imul
push
cmc
ds
mov
adc
xor
mov
loopne
xor
loope
dec
dec
jns
fidivrl
sbb
stos
ds
aad
sbb
aam
xchg
mov
mov
cs
aas
popa
iret
sarl
mov
sar
or
inc
and
adc
popf
cld
scas
mov
cmp
sub
adc
cmp
and
push
call
stc
mov
inc
jno
mov
hlt
fs
adc
push
sarl
stos
dec
xor
and
sbb
jnp
ljmp
push
mov
das
jne
xor
movsl
jle
scas
mov
and
rcll
pop
cmp
adc
cmp
mov
ret
js
out
xlat
add
lret
pop
jo
push
test
or
jl
movsl
jo
pop
push
sbb
mov
pop
sbb
lea
call
jno
cmp
shll
xor
or
hlt
fcmovbe
mov
jns
mov
out
lret
jb
mov
lcall
movsb
jno
inc
sarb
clc
enter
mov
loopne
shlb
dec
xlat
gs
inc
andb
and
jae
icebp
gs
sub
nop
mov
loope
xchg
loopne
lahf
jne
cld
idivb
hlt
xlat
pop
jne
nop
and
add
ss
in
sub
xchg
mov
xchg
dec
frstpm(287
inc
adc
shrb
clc
jns
push
imul
pop
enter
bound
out
repnz
push
popf
xor
scas
pop
cmp
cmp
push
call
stos
and
dec
icebp
shlb
cmp
sbb
push
dec
inc
add
pop
dec
add
jne
xchg
sub
movsb
int3
mov
lahf
jbe
xchg
out
or
xor
std
sbb
sub
push
cmc
ret
add
scas
jo
and
pop
sti
in
or
sbb
sbb
or
pop
call
mov
cli
cld
add
mov
inc
outsb
mov
cmp
adc
xchg
push
or
dec
nop
jle
in
xchg
cmp
xlat
adc
pop
jmp
pop
ret
into
sbb
inc
dec
movsb
push
stos
mov
push
jg
xchg
pusha
sar
ljmp
sub
fdivr
lods
cmp
mov
cs
mov
les
sbb
or
idivl
pop
sub
loopne
jecxz
nop
push
cmp
orb
adc
lret
jno
sahf
dec
aad
jae
xlat
lds
jae
subb
mov
pop
xchg
out
loope
fdivrl
dec
clts
sub
xchg
or
ss
jmp
jp
mov
pusha
xor
xor
sub
dec
scas
push
pop
hlt
shrb
dec
push
cli
inc
adc
jno
sti
js
mov
out
movsl
xor
xchg
inc
adc
push
push
mov
mov
xor
add
cmc
adc
jb
inc
xchg
loopne
mov
mov
cmpsb
xchg
shll
ljmp
add
imull
fnstcw
fcmovne
add
jo
xchg
cmp
repz
nop
cmp
add
dec
and
outsl
fsts
ds
dec
adc
adc
out
int3
inc
push
pop
subl
fdecstp
mov
xor
adc
mov
test
inc
imul
popa
mov
mov
sbb
mov
fnsave
inc
sbb
adc
in
cltd
bound
cwtl
push
mov
adc
sbb
cmpsl
jmp
subb
inc
adc
aas
imulb
imul
xchg
movsb
and
aad
out
mov
push
push
xlat
sbb
xchg
mov
cmc
clc
ret
pop
cld
inc
xchg
push
daa
aas
xlat
addr16
dec
hlt
jg
das
sti
test
pop
sub
sub
sub
movsb
mov
pop
lahf
pop
int
inc
cmp
outsb
adc
fbstp
out
loope
out
xchg
decl
and
jno
rcrl
mov
fucomip
es
pop
mov
fistl
scas
jnp
sub
jmp
jb
iret
lds
ljmp
aad
nop
insl
stos
rorb
fmulp
cmp
lods
push
xor
fldt
pop
sti
or
mov
dec
cwtl
sbb
lea
inc
push
add
fs
lret
cmp
cmc
pop
test
lea
jg
pop
out
shll
and
jo
push
fldcw
daa
mov
xchg
in
adc
psrld
jae
xchg
out
push
jb
pop
enter
lret
inc
scas
cmpsb
subl
dec
inc
pop
adc
es
bound
sub
js
cmpsl
mov
push
xor
mov
mov
call
lret
inc
dec
lret
or
adc
and
sub
insl
jge
das
mov
or
fidivrl
mov
or
jl
mov
inc
cwtl
pop
xor
and
push
data16
inc
imul
mov
cli
sub
andl
jb
lods
xchg
mov
cmp
lds
sbb
add
pop
jbe
add
loop
xor
sub
cmp
scas
push
movb
sarl
inc
scas
xchg
jo
dec
push
mov
stos
inc
mov
pusha
xchg
jnp
out
push
rorl
cltd
ret
int
jnp
cmp
and
insb
and
mov
pop
lret
xchg
pop
adcb
xorl
pop
adc
call
pop
pop
inc
enter
or
cmpsb
in
mov
imul
fcoml
orb
add
cmpsl
mov
popf
mov
dec
pop
cmc
mov
pop
lock
iret
cmove
lods
mov
push
dec
rorl
sbb
hlt
dec
popa
pop
out
dec
mov
shl
inc
dec
aaa
add
es
stc
mov
jne
lods
mov
nop
add
mov
xor
pushf
mov
mov
and
cmp
stos
fisttpl
adc
stos
pop
xchg
daa
or
stos
xor
xchg
adc
mov
test
mov
xchg
push
push
mov
add
xchg
mov
in
or
push
dec
add
sbb
pop
hlt
inc
sarl
cld
adc
xor
sbb
add
imul
aaa
mov
scas
fs
test
pop
inc
arpl
dec
dec
dec
cmc
enter
fidivrl
sbb
scas
je
scas
pushf
sbb
rcl
sub
popl
mov
outsb
push
mov
xchg
cmp
jecxz
or
mov
xchg
insl
or
subl
push
dec
sbb
not
mov
cmc
andb
fldenv
aam
inc
push
mov
pop
and
ss
lcall
int
dec
fwait
in
in
and
insb
pop
inc
cltd
xlat
daa
pop
stc
inc
mov
inc
cwtl
fs
and
mov
dec
enter
in
dec
gs
adc
ret
mov
push
mov
std
push
ret
adc
xchg
mov
inc
cs
cmp
pop
cmp
js
gs
scas
andl
ja
lods
or
cltd
mov
sbb
dec
mov
inc
push
push
sub
sbb
decl
lcall
rcll
out
in
cmpsb
dec
xlat
add
xchg
in
mov
aas
iret
fcomps
mov
push
inc
ficoms
adc
xor
mov
repz
push
bound
dec
sbb
xchg
xor
jp
scas
mov
mov
and
lods
mov
add
inc
fdivr
int
fcmovnbe
sub
daa
push
dec
ficoms
imul
jns
in
nop
push
xor
das
xor
hlt
nop
into
incl
out
adc
jp
adc
mov
int3
jmp
jecxz
dec
icebp
fbld
pushfw
call
jns
mov
repnz
iret
addr16
push
pop
add
cmc
into
cltd
dec
jmp
data16
xchg
add
test
sahf
aaa
ljmp
cmp
jnp
pop
push
imul
jae
clc
jo
aas
cmp
loop
lods
iret
test
cmpb
inc
xor
mov
popf
cmp
imul
add
jns
inc
es
xchg
mov
xchg
mov
cs
cmc
pop
clc
sbb
loop
nop
int3
jl
adc
rcrl
pop
and
push
cs
xchg
xchg
iret
jle
popa
outsl
test
jnp
insl
jge
mov
fidivs
fs
iret
dec
xor
adc
orb
add
sti
rorb
pop
faddl
push
mov
jns,pt
pop
lds
xor
leave
test
std
xor
mov
repnz
dec
imul
inc
cmp
out
and
cmp
inc
loopne
cltd
fmul
and
jne
fldcw
lahf
js
push
mov
int3
pop
addb
sahf
add
mov
push
xor
jae
dec
insl
in
mov
push
push
negl
jae
xchg
adc
cmp
mov
andb
dec
mov
and
nop
pop
iret
mov
lea
lret
mov
adc
push
xor
nop
sub
shlb
int
jo
cmpsb
pop
sti
push
xor
mov
adc
adc
pop
jmp
int
cmp
sbb
inc
in
lcall
jle
pusha
mov
inc
add
imul
and
xchg
popf
mov
imul
sbb
or
jle
lock
and
mov
andb
mov
les
leave
or
push
inc
mov
inc
xor
cmp
xor
fiadds
xlat
loopne
mov
fs
mov
and
mov
add
ret
push
pop
movsl
leave
je
lsl
in
divl
sbbl
loope
shr
test
pop
lock
fistps
repz
hlt
out
pusha
stos
xchg
enter
data16
cmp
jbe
int3
sbb
leave
inc
dec
mov
enter
mov
mov
push
pop
ret
xchg
push
and
fnstsw
out
iret
dec
fs
je
cmp
clc
int3
lods
shll
jl
lea
push
pop
push
pop
ret
div
negb
imulb
cli
imul
push
rcrl
dec
fucomp
xchg
sbb
cmp
clc
add
mov
pop
sahf
inc
cmp
mov
stos
inc
mov
xchg
int3
mov
pop
fistpl
cmp
adc
xchg
in
testb
repnz
ds
rolb
mov
in
arpl
or
inc
pop
int
and
jp
jge
pop
sbbl
mov
test
sbb
addr16
test
pop
push
xchg
repnz
shl
les
cmp
and
ret
lock
cmp
js
popf
or
and
jb
int3
aam
inc
les
fdivp
pop
pop
xor
outsl
inc
in
insb
js
sbb
sbb
jbe
add
push
and
push
inc
scas
sahf
xchg
cmp
inc
mov
repz
pop
aas
aas
adc
pop
dec
mov
dec
mov
or
es
push
adc
dec
enter
jmp
push
push
lret
ret
clc
rol
sub
mov
inc
mov
mov
insb
pop
cmp
inc
xchg
mov
aam
sub
dec
xlat
dec
out
call
ds
iret
add
mov
sub
scas
addr16
clc
or
subl
dec
out
cli
add
xchg
sub
adc
inc
push
pop
out
inc
push
mov
pop
out
mov
test
xor
inc
jecxz
fnsave
loopne
pop
cmp
dec
mov
test
sbb
lods
lahf
jbe
call
or
and
notl
outsl
dec
adc
add
test
xchg
ret
or
or
stc
je
jle
pop
shlb
mov
mov
adcl
ss
xor
mov
mov
sbb
fsubs
and
mov
test
cmp
aas
ds
jg
lea
in
lret
add
jb
add
jne
mov
stos
push
pushf
xor
add
jo
cmp
jmp
dec
fisubl
xchg
or
movsb
xor
inc
inc
sbb
lret
aas
xor
mov
out
fldenv
adc
shl
sbb
cli
xchg
je
ljmp
adc
ljmp
jb
push
int
loop
mov
cli
mov
dec
scas
dec
or
cs
cmpsb
shlb
lahf
mov
rorl
sbb
test
sbb
cmp
je
cmp
ljmp
clc
jno
repz
pop
mov
pusha
push
sub
pop
adc
fisubrl
cld
scas
jae
xorps
push
inc
in
pop
rcrb
add
mov
test
adc
cwtl
and
mov
iret
dec
push
mov
dec
inc
scas
jb
ja
cmp
les
test
mov
add
stc
sahf
stos
std
pop
fldcw
pop
in
mov
aam
sbb
fdivrs
fsub
rcrl
jmp
add
popf
fstpl
cld
add
jnp
fcoml
push
and
adc
sti
and
adc
cmp
cwtl
loopne
jbe
cmp
psadbw
pusha
cld
in
test
xor
cld
push
add
rcll
push
cmp
and
adc
pop
lahf
sbb
or
in
dec
aaa
aas
cmp
bound
mov
addr16
pop
cmp
pop
and
inc
inc
push
push
xchg
notb
fs
mov
xchg
sahf
dec
mov
pop
jae
inc
push
sbb
aaa
pop
jbe
lea
pop
xlat
rcl
scas
int3
xchg
mov
das
push
sub
jo
mov
jns
mov
int3
ret
shlb
aam
fimuls
xchg
rolb
fwait
xchg
dec
inc
or
or
add
out
mov
cmp
sub
dec
cmp
xlat
jl
or
mov
mov
jae
iret
ss
lock
out
test
dec
push
jl
mov
test
jb
scas
push
mov
stos
add
push
xor
bound
xlat
inc
lret
jnp
lock
add
xchg
rcrl
jmp
mov
cmp
rclb
cltd
sub
mov
push
data16
sbb
shl
ja
xor
lcall
sbb
daa
jecxz
xlat
pop
lcall
shrb
cmp
lock
pushf
or
les
and
pop
xchg
addr16
mov
lock
sub
xchg
fisubs
xor
mov
mov
test
mov
stos
sbb
or
xchg
inc
imul
scas
sub
jae
in
and
dec
xor
shlb
pusha
mov
jo
pop
pop
sub
and
data16
dec
xchg
sbb
cmp
cmpsb
pop
loop
push
in
mov
adc
add
push
shrl
shlb
cmp
cltd
pop
test
pop
mov
push
popa
ja
jmp
cs
mov
and
nop
dec
test
out
jnp
xchg
push
imulb
out
es
lret
lds
mov
pop
sbbb
cltd
iret
jb
xchg
in
push
in
mov
sbbl
mov
cmpsl
inc
je
cs
jnp
or
lods
pop
mov
subb
mov
mov
call
cltd
sub
scas
ja
inc
push
out
test
pop
dec
dec
push
lahf
xchg
cmpsb
cwtl
fs
dec
repnz
ficompl
mov
ds
in
push
cmp
fsubrl
imul
sbb
mov
or
popa
sub
shlb
pop
lock
add
test
jbe
mov
and
xchg
pop
mov
cmp
out
cmpsl
sub
dec
push
xchg
imul
dec
jns
stc
aaa
mov
imul
int3
sub
sbb
enter
in
mov
data16
inc
sub
or
mov
pop
xchg
out
pop
jo
add
jns
mov
movsl
clc
mov
adc
mov
fstpl
add
repnz
pop
push
mov
das
xlat
sbb
popa
popa
or
mov
addr16
pop
pusha
sti
push
mov
sbb
cmp
test
lock
jp
sbb
ljmp
jecxz
shlb
fistpl
rorl
jecxz
andb
nop
jp
mov
inc
inc
ja
push
cmp
add
sbb
xchg
xchg
xchg
insl
mov
add
negb
jae
adcl
cmc
sbb
mov
jp
scas
pop
cmc
leave
mov
inc
jle
jnp
pop
pop
sbb
fidivl
in
and
mov
aas
lahf
bound
pop
add
mov
je
in
xor
out
xchg
cmp
decb
cmp
hlt
in
cmpsb
jne
shl
fldcw
bound
ret
push
xor
pop
and
andl
or
test
pop
jns
out
aas
rcrl
mov
inc
cli
jp
divl
ds
push
lret
movsl
and
adc
js
inc
sub
leave
and
jl
push
call
das
fwait
push
test
incl
mov
pop
pop
mov
mov
arpl
push
cld
leave
scas
adc
jge
sahf
sub
in
sub
mov
cli
in
cmpsl
icebp
inc
dec
add
in
or
pop
push
mov
in
addr16
imul
adcb
jne
dec
xchg
xchg
mov
jle
jp
in
cmc
out
adc
lret
pop
jp
into
frstor
int3
jne
insb
pop
add
cmpsb
pop
cmc
jge
loop
push
outsl
sarb
adc
dec
rorb
adc
xlat
inc
shll
testl
inc
add
pop
lret
rcl
sub
ljmp
rolb
and
sbbb
push
mov
lea
fwait
sub
xchg
arpl
pop
xchg
fs
pop
push
sahf
es
clc
cmp
pop
push
fadd
mov
jle
mov
push
stc
out
ljmp
jne
aaa
mov
das
adc
or
push
daa
adc
dec
xchg
sahf
aaa
jg
mov
dec
imull
jbe
mov
mov
sub
shrl
in
scas
inc
adc
lret
adc
jnp
std
xor
jb
dec
mov
cltd
sahf
xchg
repnz
out
test
sahf
out
pop
out
fcomps
jmp
lea
dec
imul
pop
push
pop
int3
jne
sbb
xchg
clc
ljmp
inc
xchg
and
jp
push
icebp
icebp
in
xchg
and
out
or
inc
aam
lret
and
push
mov
out
push
imul
pop
mov
push
xchg
mov
mov
stc
mov
sbb
mov
out
inc
dec
shrb
pop
and
mov
bound
jmp
ja
sbb
jge
xor
ljmp
shll
pop
mov
pop
or
jmp
push
fistps
pop
je
xchg
cli
shl
jns
add
fmul
adc
insb
fwait
lret
hlt
call
sub
xchg
out
cs
in
fcmovb
lret
add
mov
xorb
push
les
scas
ret
sub
outsl
sbb
in
jbe
jmp
sbb
subb
int
int3
into
mulb
movsb
lds
nop
push
and
or
add
sti
fstpt
mov
xchg
xchg
inc
sub
in
xor
sbb
xor
fidivrs
lds
xchg
push
add
rcll
adc
loopne
scas
dec
mov
push
imul
out
xor
xchg
jo
je
and
cs
popf
lret
lcall
pop
lea
sbb
out
je
pop
cli
dec
sub
add
fldenv
cmpl
fildl
xchg
icebp
pop
mov
popa
test
mov
pop
cmc
cltd
sub
mov
cmp
and
pop
test
mov
hlt
mov
pop
fdivl
pop
loopne
xor
mov
bound
in
adc
push
sahf
orl
pop
lret
pop
cmc
stos
jl
mov
scas
add
scas
push
and
shrb
mov
mov
jmp
mov
into
push
loop
sbb
xchg
pop
cli
int3
lret
outsl
or
inc
repnz
sub
mov
stos
jnp
lds
mov
lea
push
jecxz
sub
outsb
xchg
fwait
ds
add
bound
mov
sbb
xchg
shrb
mov
mov
xor
jmp
out
ret
or
out
fnstsw
orl
cld
xchg
dec
adc
jae
out
push
sti
movsb
cmp
pop
adc
dec
mov
lcall
mov
inc
cmp
jmp
sbb
dec
mov
pop
outsb
mov
sarb
add
sub
mov
test
cmp
stc
fstpl
imul
xor
fs
cwtl
pop
test
test
push
aam
jle
sidtl
jge
pop
aas
jb
cmp
insb
sub
psrlq
faddl
iret
rcrb
adc
add
sbb
dec
cmp
mov
xchg
and
inc
fs
xor
inc
cli
mov
push
dec
test
xor
xchg
int3
jecxz
push
adcl
cmp
xchg
int
add
xlat
xchg
dec
ljmp
lcall
dec
ret
pop
or
mov
ret
mov
movsb
mov
fldt
mov
jp
imul
pushf
loope
push
sub
add
lods
push
ret
roll
iret
je
push
pop
pop
jbe
or
rcrb
mov
je
les
loop
scas
xor
mov
cmpsl
pop
and
xor
ljmp
dec
adc
dec
xor
iret
xchg
movb
mov
inc
pop
mov
hlt
sub
pusha
popa
mov
and
aas
push
sub
mov
cmc
out
jmp
shr
fs
rorl
xor
sub
and
mov
add
jne
adc
test
push
pop
stos
dec
das
aad
sub
sub
add
sbb
test
xor
scas
decb
mov
in
fdiv
aad
addr16
aas
xchg
pop
dec
ds
fsubrl
rorb
pop
add
xchg
sbb
ficoml
jno
and
mov
push
aaa
xchg
loopne
or
lcall
adc
subl
icebp
mov
stos
add
push
sbb
fisubs
and
shll
sub
stos
fmull
mov
aam
add
inc
pop
mov
sbb
rolb
sahf
push
push
movl
int
das
inc
shlb
adc
xor
jge
pop
popf
mov
mov
mov
stos
scas
add
lods
xorl
pop
call
cmpsl
outsl
fwait
jecxz
or
call
or
js
daa
lret
ret
mov
std
sbb
add
rclb
ret
fcompp
imul
fsubrl
mov
xor
das
pop
roll
and
scas
fdivp
or
sbb
in
or
decb
push
inc
dec
sti
bnd
sbb
push
lods
pop
mov
push
jmp
fisubl
add
or
push
sub
not
imul
mov
bound
sbb
adc
mov
add
push
dec
add
pusha
xchg
jge
iret
int3
sub
and
xorl
cs
jmp
jns
jmp
mov
push
add
mov
dec
gs
push
pop
mov
icebp
mov
nop
loopne
into
adc
not
pop
sub
pushf
pop
outsb
inc
jg
xor
push
test
shll
dec
mov
sbb
mov
stos
or
cmp
popa
xchg
and
fstpl
sub
dec
push
push
fcmovb
pop
mov
out
dec
dec
push
cli
mov
clc
or
insb
add
sbb
subl
cs
mov
push
mov
mov
lock
add
loope
mov
push
daa
mov
mov
stos
ss
aad
insb
mov
mov
data16
lret
cld
in
fwait
aad
jbe
daa
mov
shr
mov
jg
cmpsb
lret
movsl
sbb
aam
or
xlat
push
cwtl
fwait
pop
test
enter
mov
cmp
pop
shrb
mov
cmp
adc
mov
mov
aas
mov
sub
sti
mov
adc
or
sub
adc
inc
xchg
add
sub
loopne
imul
pop
clc
dec
ljmp
push
rorb
scas
arpl
sarl
pop
ja
rclb
add
mov
fldcw
mov
cmp
and
push
mov
mov
int
inc
xchg
fdivrl
and
dec
push
out
inc
and
in
sti
mov
mov
add
add
jb
pushf
lods
cmp
adc
or
out
mov
inc
sbb
pushf
outsb
mov
cmpsl
pop
hlt
in
inc
xor
lea
stos
push
mov
xchg
adc
lahf
xchg
bound
repz
pop
imulb
ja
xchg
mov
shrb
insl
jmp
adc
push
sub
bound
cmp
out
cmpsb
push
popa
cld
mov
mov
ret
movsl
mov
js
stc
jno
fstpt
push
in
int
pusha
mov
xor
lret
or
push
je
jmp
xchg
fidivl
outsb
sub
rcrl
hlt
xchg
stos
sbb
mov
insb
pushf
add
lods
push
and
stos
bound
inc
or
push
inc
and
pop
and
addl
jno
or
push
scas
push
mov
iret
lea
cs
xchg
xchg
outsl
sbb
clc
mov
neg
and
or
mov
clc
pop
jecxz
frstor
test
cwtd
dec
test
lret
loope
cltd
dec
pop
mov
mov
add
bound
into
mov
aam
fldl
or
pop
push
jb
shrb
lods
inc
adc
in
in
out
sbb
repz
lea
push
cli
xchg
imul
mov
inc
xlat
inc
daa
call
mov
push
inc
sahf
or
test
fwait
aam
xchg
lret
aad
xor
mov
add
out
lahf
sub
cmp
dec
jp
test
add
mov
popa
xchg
cmp
pop
scas
xlat
test
cld
pop
int
or
cld
testl
ret
testl
push
sbb
bound
inc
mov
sahf
pop
scas
sahf
push
mov
inc
enter
xchg
xchg
add
iret
insb
fwait
and
cmp
mov
mov
insl
mov
cmp
mov
cmp
cmp
jne
cwtl
shll
xchg
and
dec
push
mov
add
out
sahf
mov
mov
in
dec
arpl
orl
lods
dec
mov
stc
cltd
xchg
mov
mov
jecxz
mov
push
cwtl
cmp
push
push
cld
sbb
and
xchg
pop
rol
jl
repnz
jmp
inc
sbb
rcrb
mov
stos
pushf
fisubrl
pop
pop
pop
shl
aaa
or
cmp
mov
aas
hlt
push
push
push
xor
push
dec
xor
nop
aaa
movsb
dec
jbe
rcrb
jb
enter
mov
cmp
xchg
push
pop
rolb
popf
cmp
es
imul
mov
mov
mov
dec
aas
decb
pop
pop
pusha
jo
lret
hlt
cmp
jno
ret
mov
xchg
mov
mov
ss
xchg
sbb
jnp
divl
lret
into
inc
jecxz
pop
push
jb
lock
aaa
push
fsts
sahf
aad
outsb
mov
fwait
xchg
aam
sbb
dec
test
sub
xchg
mov
fs
adc
adc
adc
lods
decb
xor
jecxz
das
inc
out
movsb
data16
aam
xchg
es
movsl
add
clc
adc
popf
fists
mov
movsl
jge
movsb
loope
jne
mov
adc
cmpl
pop
cmp
ficompl
push
fld
push
sbb
popa
adc
lcall
lahf
pop
adc
adc
int
sub
add
movsb
stc
nop
xor
popa
mov
ss
mov
ljmp
stos
cmp
xor
pop
std
pop
and
dec
nop
add
call
xchg
insb
xchg
adc
adc
out
pop
cmp
je
dec
aas
jmp
cmpsl
jbe
xchg
mov
add
xorb
lcall
orb
aaa
es
pop
pop
bound
aam
int3
std
cmp
and
sbb
jae
pop
aas
lea
inc
ja
adc
mov
stc
loopne
cmp
das
repz
repz
testl
mov
mov
orb
pushf
sbb
popf
dec
inc
mov
pop
int3
jg
push
xchg
or
test
out
pop
cld
xor
in
pop
cld
xchg
mov
mov
andb
shll
loope
cmp
mov
mov
pusha
xchg
push
imul
addr16
stos
inc
jp
push
push
lods
pop
inc
imul
pop
and
cli
jb
pushf
and
mov
sub
sub
imull
shl
sahf
lcall
stc
cwtl
add
dec
push
dec
dec
xchg
mov
andl
push
in
push
xor
pusha
shlb
loopne
movsl
movsb
mov
push
cmc
xor
push
fidivs
xor
and
loope
sub
ja
or
addr16
test
enter
adc
daa
jne
pop
pop
cmp
push
mov
roll
sub
dec
aad
xchg
ja
sbb
aas
jae
mov
lods
and
aaa
fldt
pop
mov
or
incl
mov
mov
pop
mov
nop
add
shl
mov
movsl
xchg
popa
sti
xor
jae
jb
push
mov
mov
sub
jp
sbb
adc
xchg
add
mov
and
mov
dec
pop
dec
insl
scas
ljmp
movsl
fldcw
jge
int
cmpsb
lods
scas
sub
pop
xchg
inc
dec
setae
sbb
std
int3
pop
in
lods
aad
arpl
cli
sbb
add
sbb
push
imul
xchg
mov
mov
mov
mov
sbb
xor
test
pushf
pushf
ficoms
xchg
inc
outsb
adc
pop
or
mov
sbb
stos
bound
scas
push
add
and
jp
add
jmp
mov
hlt
cmp
mov
sub
fdivrl
adc
les
fsubs
push
mov
mov
mov
mov
mov
xorb
xor
iret
add
push
pushf
out
je
lds
mov
les
fildll
subl
aad
frstor
xchg
outsl
shrb
incl
shl
scas
lods
lcall
les
add
into
dec
push
addl
pop
addr16
decb
adc
mov
aaa
inc
jge
jl
xchg
fistps
in
adc
cli
fs
call
inc
push
fadds
in
aam
lcall
in
and
sti
xchg
ja
xor
push
pop
je
mov
lods
pop
repnz
or
fs
loope
jl
xchg
js
sub
sbb
insb
and
in
hlt
aam
push
xchg
or
scas
rcl
pop
lret
mov
jge
cmp
les
xchg
js
out
or
sbb
je
fcomps
pushf
lcall
aas
sbb
sahf
pop
mov
mov
aad
es
add
andl
shl
sahf
aaa
ret
pop
mov
nop
mov
fbstp
enter
mov
inc
clc
jno
in
into
xor
jo
test
push
clc
pushf
clc
xor
cmp
dec
inc
cmp
cmp
push
adc
adc
inc
fs
mov
jp
mov
cli
test
or
decl
insl
popf
cmp
dec
mov
add
fldl
add
out
shl
jp
xchg
fld
mov
hlt
xchg
pushf
or
add
cmp
sub
push
test
cmp
imul
xor
cltd
cmp
jb
jle
dec
ds
lds
xchg
or
pop
xlat
and
ret
aas
inc
loop
bound
test
add
or
call
xchg
repz
popa
lods
arpl
mov
adc
sbb
mov
xchg
fldenv
decb
jmp
movb
cmp
ljmp
and
jmp
inc
push
push
filds
or
xor
push
xchg
shrb
ds
in
leave
aam
pop
sbb
jl
insl
mov
pop
fwait
repnz
push
add
mov
adcb
pusha
cmp
xchg
daa
js
jnp
or
push
fsubrl
clc
ja
and
sub
rorb
xor
xlat
xchg
lods
and
dec
jbe
rsm
jbe
xor
sub
ror
jns
push
jg
jmp
test
icebp
std
inc
popf
fnstsw
pushf
dec
inc
push
fwait
inc
or
xorl
mov
std
iret
cmp
pop
outsl
stos
test
sahf
mov
inc
pop
sbbl
push
jno
mov
out
push
xchg
int3
loopne
inc
das
sbb
test
lods
xlat
stos
hlt
xchg
jb
cmpsl
dec
lea
xor
dec
pop
les
dec
iret
sbb
mov
roll
xor
add
test
bound
repz
jbe
adc
sbb
dec
fisttps
test
fs
cmc
push
in
xchg
or
pusha
ss
lods
sbb
cmpsb
aad
std
xor
xor
nopl
mov
or
cmp
testb
out
lret
pop
cmpsb
rcr
out
lods
and
cmpsl
js
push
pop
mov
sbb
inc
push
xchg
push
shlb
sub
sbb
jmp
jp
mov
outsl
test
inc
push
mov
test
test
sbb
loopne
sub
xchg
stos
imul
or
aam
mov
in
inc
jp
mov
popf
jns
pop
in
mov
inc
cmp
cmp
jo
sbb
iret
test
rcrb
ds
popa
rclb
mov
jae
je
movsl
not
ds
out
mov
cmpsl
dec
inc
popa
in
push
dec
sub
jge
lods
add
mov
out
sub
mov
dec
arpl
movsl
hlt
aaa
adc
daa
mov
mov
in
fs
and
dec
pusha
adc
sub
sub
loope
sub
or
int
insb
lds
aad
cli
lock
or
out
pop
aaa
popf
sub
insb
sti
movsb
into
dec
mov
lret
lcall
mov
je
sarb
call
and
loopne
das
jae
sbb
sub
ds
icebp
in
sbb
jb
xchg
mov
mov
mov
dec
loop
push
and
dec
xor
push
inc
fisubl
pop
cwtl
fidivl
inc
and
mov
or
cvtpi2ps
test
xchg
bound
fadds
xchg
or
leave
cltd
pushf
push
push
jl
push
push
and
imul
stc
gs
push
inc
int
fstp
mov
xchg
push
mov
pop
aas
mov
or
enter
cld
jecxz
sbb
mov
leave
clc
into
fnsave
in
enter
sbb
cmc
jbe
adcl
jmp
push
dec
clc
pushf
or
or
mov
cli
mov
es
mov
push
fcoml
pop
outsl
add
lods
adc
stc
mov
ret
cmp
push
bound
lcall
adc
xchg
pushl
and
loope
aad
outsb
lahf
sub
in
mov
xchg
call
pop
aas
nop
and
ljmp
out
popf
cmp
mov
jae
pop
dec
xor
cld
mov
mov
mov
or
push
pop
dec
cmc
ret
sbb
push
jns
mov
pop
pusha
cli
push
loope
xor
sarb
pop
and
insl
mov
or
lea
jb
lahf
sbbl
cld
mov
xchg
cmp
cmp
fcmove
leave
adc
movsb
lcall
mov
inc
pop
jae
pop
outsl
repnz
shr
xor
fucomi
fcomi
mov
sub
neg
inc
or
idiv
inc
lds
aad
cmpsb
movsl
inc
mov
inc
dec
arpl
test
inc
mov
jne
inc
push
mov
pop
stc
inc
outsl
in
xor
mov
lods
loope
mov
push
sbb
dec
bound
pusha
lods
movsl
test
icebp
xchg
stos
dec
mov
adc
sbbb
lahf
lcall
cmpsb
or
and
je
add
in
das
cmp
fucomp
scas
push
dec
mov
pop
imul
test
mov
xor
mov
mov
jle
adc
dec
jnp
jg
mov
jnp
sbb
mov
and
ret
es
inc
enter
mov
out
inc
add
and
jo
dec
jbe
jbe
lret
or
cmp
jne
cltd
pop
fiaddl
dec
aaa
sbb
test
pop
mov
aam
idivl
mov
dec
aad
jmp
cmp
sarb
rclb
imul
mov
shrl
cltd
movsl
sti
mov
mov
push
jge
push
neg
out
popf
fdivl
pushl
sub
out
shl
add
push
imul
rorb
mov
push
jae
loope
das
stos
cmp
sbb
lock
mov
xchg
mov
sub
and
jmp
add
xchg
mov
and
aad
add
mov
lea
or
in
les
dec
and
add
aaa
insl
sbb
push
or
pop
sbb
pop
mov
cmpl
cmp
mov
push
daa
pop
jbe
xor
dec
push
icebp
and
pop
scas
mov
outsl
sub
insl
arpl
pop
sbb
enter
pop
cwtl
mov
cmc
mov
inc
xchg
lea
clc
inc
xchg
pop
adc
clc
stos
stc
mov
adc
mov
roll
cld
pop
jns
jno
and
xor
test
outsl
repnz
push
push
stos
cmp
mov
into
leave
pop
adc
lods
push
or
or
push
jno
mov
jmp
in
inc
add
cld
out
cmp
inc
lods
cwtl
mov
in
push
mov
dec
jae
aas
fstpl
and
push
sub
sbb
inc
lds
ss
scas
or
adc
jno
insl
nop
clc
sbb
mov
sub
out
daa
js
xchg
imul
lds
push
imul
sub
and
xorb
setnp
mov
rol
ss
mov
mov
cmpsb
dec
dec
out
add
cmpb
jae
cmp
daa
lret
fdiv
cmp
jecxz
movsl
je
adc
sub
dec
mov
cmp
adc
or
mov
inc
xorb
push
inc
xchg
into
jle
and
fstpl
mov
out
add
rcrl
adc
jecxz
xor
mov
jl
push
mov
xor
imul
dec
insl
push
cwtl
jg
paddq
pop
and
adc
cmp
xchg
mov
and
lcall
jne
adc
imul
dec
dec
add
mov
leave
mov
mov
mov
or
or
aam
pop
jle
and
push
scas
cmp
jmp
push
cwtl
test
xchg
andb
iret
add
jp
mov
int3
pop
xchg
test
sbb
dec
icebp
mov
add
sti
lock
sub
enter
xor
jnp
out
mov
cwtl
shrl
and
mov
or
adc
xchg
xorb
push
xchg
out
sahf
mov
mull
push
xchg
jl
add
lods
add
pop
lods
arpl
xor
fwait
int
enter
lahf
mov
cmp
addr16
xor
or
sub
in
xor
xor
dec
fidivrl
adc
mov
jno
or
fisubs
add
pop
and
ds
jle
stos
stos
inc
and
or
stos
pushf
xor
inc
mov
sbb
in
sbb
push
imul
movsb
mov
ret
dec
mov
inc
daa
sbb
jp
out
inc
pop
imul
pop
aad
aaa
adc
test
mov
mov
scas
out
push
push
xchg
daa
dec
sbb
mov
adcl
mov
jg
sbb
mov
dec
cmp
mov
cmpsl
and
cmp
fisttps
je
jae
jb
add
add
insb
outsb
mov
sbb
add
xchg
fists
push
mov
insb
fs
fdivs
hlt
lock
push
popf
adc
jno
sub
push
and
inc
cmpsb
inc
das
out
test
cli
aam
pop
loop
xor
jne
fdivs
pop
clc
xchg
or
xchg
push
std
lret
mov
mov
mov
push
mov
stos
push
stos
std
out
xchg
push
jo
mov
fwait
cmp
mov
push
mov
or
lods
pop
les
stc
in
inc
imul
das
out
xor
mov
in
xchg
repz
mov
ficompl
push
jnp
fsubl
movsl
fbld
xor
mov
pop
popa
negl
jno
pop
xchg
mov
stc
mov
mov
adc
jl
mov
and
or
insb
inc
ljmp
jne
addl
pop
push
arpl
xor
or
dec
imul
or
fld
subb
int3
pop
jmp
sub
out
sbb
xchg
lea
repz
push
add
pop
sbb
lods
movl
inc
arpl
mov
push
cld
inc
addr16
in
test
inc
dec
mov
xor
stos
fwait
xor
sbb
lods
push
pop
pop
xor
ljmp
inc
sub
xchg
out
arpl
fcmovb
or
jo
jnp
pop
inc
je
arpl
xchg
imul
insl
sbb
into
inc
add
push
mov
fwait
inc
add
sub
lret
cld
js
and
mov
add
incb
std
xchg
pop
cmp
xchg
sbb
push
int
cli
inc
add
ret
mov
jae
pop
cld
subb
inc
inc
cmc
clc
inc
aaa
jnp
outsb
hlt
sbb
aam
dec
sbb
es
add
lods
dec
stc
mov
mov
sub
inc
cmp
scas
xchg
sub
mov
push
arpl
ret
fstpt
sub
xor
and
inc
dec
pop
mov
jno,pn
mov
fwait
pusha
clc
idivl
imul
push
leave
push
fistpl
mov
and
stos
cmc
lds
mov
imul
jno
pop
jle
jae
sbb
mov
jo
xlat
jo
stos
out
jecxz
and
mov
rol
dec
jl
popa
aas
add
icebp
pop
pop
in
inc
stos
stos
push
add
das
push
sbb
mov
sub
xchg
clc
inc
jecxz
aaa
jb
cmp
or
out
into
addr16
dec
cli
jp
mov
sbb
jae
ss
adc
jmp
int
ss
lods
inc
dec
testl
imulb
pop
in
sub
insl
xor
cmp
push
arpl
mov
and
std
loopne
xchg
cmp
cmpsb
testb
sub
sbb
push
dec
sub
fwait
mov
lcall
jg
mov
icebp
lock
jnp
pop
xchg
jnp
lock
gs
fcoml
push
cmp
mov
adc
jns
out
divl
fstpt
inc
push
jg
aad
dec
std
sbbl
nop
nop
mov
iret
popf
repz
out
and
xchg
ficoms
shlb
push
nop
int3
mov
xor
mov
cmc
sub
sub
inc
fcmovbe
cwtl
mov
call
mov
aam
clc
test
jne
arpl
fistpll
test
fwait
lock
into
scas
loope
push
or
sbb
sbb
cmc
outsl
mov
mov
lret
mov
imul
cs
pop
or
rcr
cltd
repnz
cmc
ret
sub
fwait
dec
push
cmpsb
inc
outsb
mov
sub
sbb
mov
xchg
jb
roll
dec
and
pusha
sarl
jno
in
cmp
stos
and
mov
hlt
pop
movsl
mov
jne
pop
out
stos
adc
inc
xor
and
xchg
and
sbb
sarb
sbb
dec
cld
cwtl
sbb
or
insl
pop
mov
insb
or
xchg
mov
pop
and
xchg
cmpsl
sub
jg
addr16
and
adc
es
push
xor
fwait
test
inc
inc
adc
sti
cmp
push
push
mov
movsl
movsb
js
fisttps
adc
inc
push
out
shlb
jecxz
das
push
mov
cmp
testb
jl
std
mov
negb
int3
inc
jne
inc
fidivl
aas
push
pop
rolb
cld
mov
push
and
add
pop
dec
xor
cltd
mov
aaa
mov
movb
sbb
popa
int
int3
add
arpl
pushf
push
xor
ret
mov
inc
xchg
stc
arpl
insl
pushf
push
movsl
mov
xor
loope
mov
rol
inc
scas
mov
cltd
out
xchg
push
or
addl
jge
mov
imul
or
push
cld
aad
jecxz
rclb
push
out
insb
jae
lea
sbb
roll
xor
push
test
addb
sub
je
shrb
pop
stos
jnp
arpl
cmpb
and
xchg
popf
cmp
nop
es
cs
lock
cmp
jge
in
sub
xor
mov
sub
stc
add
repnz
push
popf
push
pop
jecxz
mov
pop
sub
arpl
mov
dec
and
push
iret
mov
outsb
iret
stos
int
sahf
stc
test
or
and
cwtl
sbb
add
dec
mov
add
repz
and
outsb
pop
pop
mov
adc
std
push
mov
push
pusha
xchg
mov
mov
mov
lods
int3
adc
xchg
mov
jb
std
xchg
gs
pop
outsb
add
xchg
xor
dec
ret
dec
inc
lcall
push
inc
call
mov
ret
jmp
push
sub
aad
aas
cmp
shlb
scas
jge
sbb
fildl
mov
jae
and
scas
out
xrelease
push
jns
sbbl
stos
pop
in
mov
or
inc
adc
sub
xor
fisttpl
cmp
dec
mov
scas
mov
or
or
inc
xor
inc
jnp
sub
inc
cltd
jg
into
in
insl
adc
push
cmp
push
lods
in
xor
xchg
lock
mov
es
pushf
icebp
mov
xchg
mov
push
xchg
loope
inc
xchg
jae
inc
mov
cmp
xchg
dec
imul
fistpll
dec
cmp
add
popf
mov
push
ds
xchg
dec
addr16
xor
data16
xor
call
nopl
sbb
or
and
std
aam
jp
fdivrl
movsl
and
jg
push
inc
inc
popa
sbb
lods
inc
jne
adc
lahf
sbb
ss
imul
mov
jnp
int3
insb
repnz
out
out
jne
daa
outsb
lret
stos
movsl
imul
adc
sub
mov
mov
out
xchg
loopne
fisttpl
loop
call
adc
adc
xchg
sub
fld
pop
xor
push
out
pop
pop
cmpl
adc
push
inc
pop
push
jbe
and
lds
add
into
jg
jecxz
aaa
roll
mov
mov
xchg
fcompp
add
ja
int
mov
lods
xchg
mov
adc
mov
ffreep
clc
push
xor
dec
out
lret
ficoms
dec
xchg
out
daa
andl
or
out
enter
push
test
loopne
scas
cli
pop
pusha
xor
orl
sahf
arpl
aam
push
and
xor
cmp
and
mov
adc
ss
sahf
sbb
jnp
int3
sarl
push
jle
cmp
push
mov
xchg
popl
push
push
clc
stos
sbb
push
je
cmp
mov
loope
or
inc
jg
outsb
dec
imul
mov
repnz
dec
inc
jne
rcl
lahf
adc
nop
push
mov
repnz
fdivl
add
subb
jo
xlat
jge
subl
enter
xor
idiv
int3
insb
dec
and
ret
lea
mov
jae
cmp
cmp
outsb
mov
xchg
adc
insl
stos
and
or
rcl
adc
ss
and
cli
int3
push
sbb
outsl
cmp
push
cltd
xlat
cs
xchg
icebp
xchg
std
cmp
push
add
aad
and
sub
test
xchg
loope
and
imul
xchg
sbb
xchg
mov
fs
fidivrs
in
cmc
jl
imul
push
outsb
push
into
dec
mov
scas
nop
rclb
loop
movsl
jp
rcrl
lcall
shlb
mov
stc
aad
sub
in
mov
cli
dec
or
jg
scas
mov
mov
jae
xor
push
mov
aad
adc
gs
mov
fbld
fsts
cmp
scas
fisttps
in
jp
sub
int
dec
sbb
xor
fs
pop
jnp
push
call
fnstsw
out
cltd
dec
data16
popf
xchg
hlt
mov
mov
xchg
imul
lcall
xor
push
lret
adc
dec
les
cs
test
adc
ljmp
iret
mov
adc
aam
hlt
lock
adc
outsb
mov
add
pop
jge
mov
xor
add
lods
cs
cmpsb
adc
xlat
pop
mov
repnz
xorl
dec
dec
jge
xchg
fwait
push
push
cmpsl
or
sub
hlt
mov
cs
add
xor
mov
mov
or
loope
outsb
add
add
pop
mov
adc
outsb
inc
or
aam
xchg
mov
fucom
xor
push
cmpsl
mov
and
jmp
sbbl
jnp
jecxz
mov
xchg
clc
dec
dec
xchg
sub
fnstcw
sbb
mov
and
ret
or
mov
and
push
cwtl
xchg
test
fiadds
mov
imul
into
or
pusha
xchg
fisubs
mov
js
pop
or
mov
in
mov
pop
mov
xchg
pop
popf
test
addr16
sub
call
inc
pushf
mov
lret
jnp
sub
mov
call
addl
aaa
jle
push
push
out
pop
sub
mov
stos
jbe
test
ds
inc
push
inc
mov
test
cmpsl
imul
xchg
sti
lahf
ds
mov
cmc
fsubs
imul
push
scas
push
popa
mov
dec
ret
sbb
les
fnstcw
xchg
aas
inc
scas
mov
out
mov
cmp
stc
mov
aaa
adc
pop
and
sahf
or
pop
faddp
popa
mov
and
push
jno
pop
xor
xchg
out
aam
movsb
adc
or
dec
xchg
loop
xchg
pop
or
adc
aas
das
mov
mov
mov
aas
les
pop
mov
sub
xchg
fisubrl
push
adc
sub
mov
mov
pop
cmpsb
xchg
pop
mov
pusha
xor
push
aad
sbb
fmul
sbb
out
jmp
rcl
lods
fisttps
nop
and
and
xchg
xchg
sbb
jg
push
jnp
add
dec
adc
ja
aam
push
pop
roll
jmp
enter
loope
clc
pop
xor
call
ljmp
sbb
push
pop
push
rolb
frstor
shl
mov
jl
test
pop
jno
push
push
pop
xlat
fcompp
pop
and
xchg
repz
mov
std
push
inc
mov
push
stos
cmp
out
mov
es
push
mov
mov
lret
mov
popa
cmp
scas
sbb
inc
stc
push
sahf
cld
jp
js
push
inc
jecxz
sarl
and
icebp
jge
imul
mov
jb
clc
and
and
mov
sbb
test
testl
bound
or
xchg
xchg
dec
jae
loope
lds
cmpsb
lea
pop
dec
sub
lret
mov
inc
mov
sbb
pusha
hlt
jo
fldt
sti
insl
lar
push
push
outsl
jmp
test
ss
incl
cs
sbb
arpl
mov
push
jnp
test
loopne
cmp
test
loop
jo
and
orb
out
cmp
and
sub
lcall
lods
repnz
pushf
leave
and
pop
incb
sbb
sbb
cmpl
mov
or
aam
out
push
sbb
in
mov
xor
push
pop
add
dec
movsl
pop
add
fiaddl
cmp
pop
vpor
inc
addr16
std
ret
jge
sbb
pop
pop
push
xchg
sbb
mov
ret
mov
lods
rorl
xor
test
icebp
mov
iret
inc
lret
mov
xor
in
lret
jl
xchg
mov
xchg
or
xor
mov
mov
jecxz
xchg
or
push
in
dec
cmp
cs
mov
faddp
fdivp
aaa
fistpll
cmc
xchg
out
movl
add
mov
lods
xchg
cmpsb
push
mov
mov
aam
pop
loopne
lock
push
cmpl
jb
sbb
jns
clc
sub
xchg
test
js
or
sbb
fst
jb
pusha
loop
sti
push
testl
loope
inc
sub
inc
inc
fdivl
inc
jo
xchg
in
push
jae
mov
les
das
add
xchg
aas
push
cmp
lods
push
sarb
insb
ja
sbb
xor
fs
pop
cmpsl
xchg
ficompl
add
incl
push
es
or
orl
mov
cmp
ret
arpl
repnz
repnz
dec
add
arpl
loopne
xchg
sub
arpl
arpl
testl
pushf
aad
sub
pop
lret
cmp
dec
lahf
mov
aas
movsl
leave
jne
mov
scas
sbb
hlt
adc
jnp
lods
pop
mov
stos
xlat
push
or
imull
mov
sbb
cmp
mov
hlt
mov
aad
call
or
dec
fcomps
pop
mov
fwait
jge
sbb
inc
fsubs
xchg
mov
outsl
sub
lahf
pop
cld
cld
popf
sbb
stos
dec
dec
jmp
inc
fistps
dec
adc
push
lcall
cltd
or
dec
out
aas
shll
push
std
lods
pop
sti
movsb
dec
arpl
outsb
mov
cmp
mov
and
mov
mov
push
mov
jg
cmpsb
push
out
xchg
nop
addr16
ds
xchg
insb
inc
lret
xor
out
add
adc
mov
call
cmp
clc
mov
pop
xchg
out
push
pop
sub
icebp
jge
jecxz
test
sbb
shlb
sub
inc
fstpt
shrb
cmp
dec
mov
push
push
lea
add
scas
mov
paddusb
mov
test
jp
adc
and
or
repz
addr16
rcr
lds
sbb
jne
sbb
and
andl
lret
jmp
jne
inc
scas
stos
add
iret
fimull
shl
pop
jg
out
pusha
or
rcrl
fwait
mov
enter
lahf
push
scas
adc
in
pop
or
addr16
inc
push
sub
sub
mov
mov
mov
popa
inc
sbb
dec
rcrb
inc
test
outsb
mov
scas
cmc
sar
ror
and
rclb
orb
dec
adc
scas
push
je
dec
rcrb
push
cltd
out
add
lods
or
imul
pop
and
js
xor
mov
addr16
bound
mov
mov
push
jg
or
cmp
ljmp
cmp
mov
inc
int3
aam
fisttpll
stos
aad
cmpsl
dec
push
div
xchg
dec
mov
rcrl
lret
loope
popf
popl
xor
int3
inc
orb
dec
cmp
xlat
push
cmp
add
sarb
sahf
aaa
jne
jecxz
sbb
cltd
pop
into
adc
aas
mov
cmovne
mov
ss
call
pop
mov
lods
rorb
call
cltd
inc
and
pop
mov
inc
sub
or
dec
lods
int3
movsb
mov
ljmp
loop
and
mov
mov
push
dec
jbe
ret
and
sti
add
movsl
mov
fdivrs
push
cmp
inc
xchg
jb
out
inc
stos
push
arpl
sbb
adcl
imul
sub
popa
adc
and
outsl
xlat
xchg
lods
cmp
lods
pop
xor
lahf
dec
add
mov
cmpsl
cmp
dec
cmp
fucomip
out
iret
loopne
loopne
push
mov
imul
jg
adc
cmp
pop
inc
les
pop
aaa
push
lods
add
jle
push
mov
sbb
inc
icebp
adc
dec
cli
loop
mov
sbb
and
push
mov
cmp
test
adcb
das
xchg
jb
insl
xchg
cltd
and
fidivl
dec
mov
pop
jl,pt
stc
and
cmc
add
pop
push
jge
in
lret
in
xchg
lock
das
inc
mov
or
jg
daa
inc
rolb
inc
jno,pn
mov
fwait
mov
xchg
popa
mov
repz
sbb
push
pusha
dec
addr16
arpl
insb
nop
daa
xor
movsl
dec
cmpsl
jne
jecxz
sbbb
ss
test
inc
push
xlat
and
pop
mov
or
aad
cmp
adc
adc
rep
dec
adc
in
cmpsl
mov
scas
fstps
pop
movl
add
orl
cmp
mov
pop
adc
ja
pop
cmpsl
data16
std
rclb
and
jl
shr
add
sbb
mov
addr16
in
jecxz
jns
lea
push
xor
push
inc
sbb
ds
mov
loop
cmpsb
xor
ljmp
cli
sub
mov
jno
sub
cmp
lret
jp
cmp
lcall
dec
xchg
push
xor
enter
mov
xor
and
inc
std
test
cmp
scas
dec
es
jmp
xchg
cld
fwait
add
je
les
jb
cmpsl
ljmp
mov
sbb
pop
mov
fdivp
mov
ret
pushl
dec
push
lods
xor
hlt
int3
shlb
nop
rorl
push
add
inc
or
cli
outsl
out
les
mov
adcb
das
mov
mov
xchg
xchg
sbb
sbb
and
iret
sub
mov
dec
cs
fsubrl
cltd
sbb
push
out
and
pop
mov
pop
scas
mov
jno
cmp
mov
xlat
loopne
xor
mov
xchg
cmc
aad
jg
fisubs
addb
fdivrl
imul
xchg
cli
ficompl
mov
xchg
dec
adc
xchg
popa
jmp
and
pop
jae
sahf
fdivrl
gs
push
adc
leave
dec
addr16
push
ret
or
lea
inc
jge
mov
inc
dec
fmulp
out
mov
cmc
cmp
push
sbb
mov
push
xor
enter
stos
aaa
lods
or
mov
sbb
mull
ret
call
jecxz
ja
loop
mov
mov
xchg
push
or
xchg
sbb
mov
cmpl
jle
mov
mov
aaa
adc
lock
xor
fists
dec
outsb
test
stos
mov
lock
repnz
xor
rcl
icebp
fs
popf
and
push
insb
cmp
mov
cwtl
mov
aas
inc
notb
or
movsl
ret
inc
xchg
xor
mov
cmpsl
xor
and
push
aad
or
test
fsub
in
mov
jae
aam
mov
insb
add
pop
out
je
cld
jle
out
jae
mov
adc
imul
and
loop
sub
cmpsb
fists
push
push
dec
pop
mov
setno
lcall
jge
sub
mov
imull
rorb
add
cmp
sbb
mov
scas
test
lods
ret
adc
mov
pushl
xchg
sti
mov
imulb
pop
mov
repz
fldz
sub
rorb
jnp
bound
or
or
sub
inc
rcl
cwtl
jns
test
sub
sub
arpl
mov
push
sub
add
xlat
into
ja
push
repz
jo
pushf
sub
aam
xchg
in
xchg
sbb
in
lods
in
or
enter
lret
jp
sbb
pop
lods
add
jae
cld
pop
test
rcl
mov
dec
out
mov
push
daa
inc
pop
lods
inc
jge
jg
and
mov
cmp
cmp
out
xor
clc
pop
push
xor
std
push
cld
aas
sub
out
pushf
pushf
dec
cltd
or
push
int
shll
or
add
xor
or
scas
push
sti
test
xchg
rcrl
call
inc
mov
jecxz
inc
pop
aad
mov
es
int
loope
xchg
les
out
insl
jp
loope
fcompl
repz
shll
aam
mov
and
rcrb
loope
clc
pop
mov
mov
cwtl
sub
clc
xor
popa
outsl
aas
mov
aas
repz
push
adc
mov
push
lea
cmc
push
fwait
or
jmp
jg
sub
sti
mov
inc
outsl
add
cwtl
fcmovne
fcomp
push
add
sbb
push
cwtl
fmuls
sbbb
mov
pop
mov
jg
sti
jmp
sbb
xorb
dec
cmp
call
inc
or
les
adc
sub
mov
pop
outsl
gs
mov
xchg
jnp
leave
cli
sbb
xor
inc
cmp
dec
cmp
loop
lret
cli
bound
jl
add
jmp
out
adc
inc
pop
movsb
stos
inc
movsl
jns
int3
daa
sub
iret
aaa
jbe
sbb
in
ret
addr16
ds
in
ficomps
ret
push
mov
xorl
push
xchg
mov
sub
pushf
icebp
mov
sbb
jge
pop
fmull
jp
add
sbb
push
ret
mov
dec
cmp
rol
add
scas
push
aas
or
outsl
or
pop
mov
xor
incb
int
mov
cld
loope
mov
imul
adcl
pusha
lods
out
clc
fwait
mov
shl
dec
inc
dec
sbb
in
mov
subb
pop
in
aaa
fistpl
dec
lcall
inc
add
shlb
out
cs
mov
sti
mov
dec
pop
lahf
test
lret
in
or
push
adc
mov
xchg
sub
icebp
sub
stos
roll
bound
mov
lock
sub
jnp
mov
stos
cmpsb
fwait
repz
push
rolb
jge
sub
sbb
and
jae
xor
imul
xchg
push
stos
dec
mov
stos
into
int3
popf
imul
xor
in
fcoml
cli
pop
call
jp
xor
adc
scas
inc
adc
xor
nop
add
add
sarb
mov
adc
xchg
sahf
pop
idivb
cld
insl
and
mov
mov
out
and
clc
pop
out
addl
xchg
cmp
ret
jge
mov
outsb
movsb
iret
mov
push
aad
xchg
stc
xchg
sub
adc
mov
mov
push
lods
clc
or
loope
mov
adc
push
js
sub
jp
mov
pmaxub
in
ret
lds
add
sub
inc
imul
and
xchg
repz
add
xchg
sub
cmp
ds
jnp
sahf
and
and
jbe
in
testl
adc
je
push
sar
data16
xchg
cmp
in
jl
or
lret
fiaddl
fs
sbb
xlat
jb
sub
adc
test
inc
add
addr16
jecxz
shlb
cmp
fxch
nop
cwtl
pushf
ficoml
xor
mov
push
adc
jecxz
lcall
mov
xor
jg
xchg
lock
lret
mov
fsubp
cmp
lock
insl
pop
test
scas
clc
notb
xchg
mov
addr16
mov
test
mov
mov
imul
push
or
or
fdiv
ffreep
mov
sbb
arpl
repnz
sbb
aaa
inc
adc
testb
mov
lods
aas
mov
and
notb
scas
cmpsl
push
sbb
pop
cmp
pop
insl
icebp
jnp
test
test
stos
divb
or
pop
jecxz
adc
sub
lock
hlt
icebp
inc
push
sbb
inc
rorl
rorb
loopne
mov
add
add
test
jnp
add
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
test
jnp
add
add
add
add
mov
add
addb
add
test
jnp
add
add
add
add
add
add
enter
add
add
loopne
add
test
jnp
add
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
test
jnp
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
test
jnp
add
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
test
jnp
add
add
add
add
mov
add
addb
add
test
jnp
add
add
add
add
add
add
addb
add
add
test
jnp
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
test
add
add
add
test
jnp
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
enter
add
add
test
jnp
add
add
add
add
add
add
fadds
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
or
add
test
jnp
add
add
add
add
add
add
sbb
add
test
jnp
add
add
add
add
add
add
sub
add
test
jnp
add
add
add
add
add
add
cmp
add
test
jnp
add
add
add
add
add
add
dec
add
add
test
jnp
add
add
add
add
add
add
pop
add
add
test
jnp
add
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
add
add
test
jnp
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
test
jnp
add
add
add
add
or
add
add
add
test
jnp
add
add
add
add
or
add
add
add
test
jnp
add
add
add
add
or
add
add
add
test
jnp
add
add
add
add
or
add
push
add
add
add
test
jnp
add
add
add
add
or
add
push
add
add
add
test
jnp
add
add
add
add
or
add
push
add
add
add
test
jnp
add
add
add
add
or
add
push
add
add
add
test
jnp
add
add
add
add
or
add
add
add
add
test
jnp
add
add
add
add
or
add
add
add
add
test
jnp
add
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
andb
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
orb
add
add
add
add
add
push
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
adc
add
add
add
add
add
add
adc
add
add
add
add
pushf
adc
add
add
add
add
add
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
pop
jecxz
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
movsb
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
std
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sbb
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
xor
loop
mov
test
imul
push
xchg
shl
ret
pop
aaa
iret
and
lock
jl
mov
insb
mov
xchg
orl
or
insl
in
mov
loopne
insl
mov
adc
fsubr
rcrl
addl
dec
ds
cwtl
dec
mov
push
pop
shll
lods
scas
out
sbb
add
mov
mov
movsl
cwtl
loop
sti
test
rorb
outsb
loopne
push
pop
stc
rcrb
xchg
lea
sahf
stos
pop
popa
lret
pop
jg
pop
pop
mov
xchg
mov
or
mov
push
out
fists
sbb
ror
leave
pop
inc
popa
mov
adc
xor
sbb
add
pop
xchg
push
xor
fnstsw
jno
sub
push
mov
nop
in
sub
ret
adcl
test
mov
push
repz
pop
push
lds
fidivl
cmp
dec
lods
bound
in
xchg
fwait
ret
stc
jmp
jecxz
mov
lods
xor
xchg
enter
shll
xor
movsl
sub
inc
add
les
fwait
mov
dec
sahf
mov
in
inc
ja
mov
test
push
push
out
test
bound
pop
lahf
jne
mov
out
fisttpll
mov
fcmovb
sub
inc
imul
xlat
jle
mov
push
in
std
mov
arpl
sbb
jl
fiadds
orl
xchg
inc
mov
sbb
dec
stos
cld
cmp
add
add
sbb
jne
mov
jo
xor
jmp
enter
call
adc
cs
xor
sub
or
sbb
xchg
fwait
mov
mov
test
subl
xchg
dec
ljmp
cli
mov
ja
sarl
jns
add
pop
mov
fnstcw
addr16
repz
hlt
sarb
lods
jg
add
cwtl
outsb
shld
dec
fnstcw
fldl
pop
add
xchg
mov
cmp
xchg
data16
mov
mov
jns
xchg
sub
mov
cmpsl
and
es
aam
jg
sub
inc
push
sar
add
aas
push
lret
sbb
mov
add
ss
out
inc
pop
or
ljmp
jno
xor
cmp
std
sub
sbb
mov
cmp
mov
pop
mov
xchg
sub
push
dec
repz
jnp
push
push
push
adc
mov
ss
jns
adc
jg
js
or
pop
mov
data16
ficomps
dec
scas
pop
fdivl
pop
mov
xchg
into
scas
xchg
fistpll
out
inc
ja
nop
in
and
push
pop
lahf
adc
out
pop
into
fsubl
pop
stos
add
and
and
cld
sbb
cmc
in
sub
sub
lret
dec
ss
ja
xor
shll
std
and
incb
fdivs
mov
push
mov
ret
std
andb
and
outsb
cmpsb
push
cmp
mov
push
fistl
mov
lds
stc
jbe
lahf
and
out
shll
lcall
cmp
movsl
scas
les
in
ss
pop
lcall
fistpl
jne
xor
jg
and
scas
in
push
outsl
orl
fildl
loop
pop
sub
jno
cmp
stc
daa
sbb
xor
dec
pushf
jo
mov
lods
lea
into
test
add
ret
or
xor
mov
mov
xchg
or
inc
es
je
xlat
cltd
idivb
jo
dec
mov
outsl
test
test
and
lahf
ja
mov
icebp
in
cld
jno
dec
imul
sbb
push
pop
lret
mov
jno
fldl
pop
jns
dec
jo
sahf
lock
mov
int3
mov
mov
adc
cld
aas
mov
pusha
rclb
fwait
dec
or
std
adc
jle
pop
lods
or
test
mov
shl
fld
mov
mov
add
jp
pop
sub
lea
aam
push
std
xchg
testb
arpl
mov
iret
or
add
rorb
hlt
xchg
and
aad
cmpsb
mov
aad
sbb
imul
notb
inc
xchg
and
add
mov
xor
vmwrite
out
and
bound
and
insb
xchg
fcoms
mov
test
iret
in
or
inc
lods
mov
pop
or
xchg
sub
sbb
dec
push
and
fs
lock
rolb
mov
xchg
mov
mov
rcrb
shll
sbb
xor
mov
xchg
in
lods
xor
jae
inc
or
jns
repz
jle
mov
insb
pop
pop
mov
inc
lret
pop
ret
pop
and
aad
outsl
push
add
add
or
push
push
dec
inc
out
lods
test
mov
rcl
inc
icebp
mov
dec
das
pop
sbb
in
imul
sub
scas
push
mov
inc
clc
inc
jb
pop
stc
lcall
sbbl
cmpb
sbb
add
shl
loopne
push
inc
mov
scas
cmc
mov
sbbb
call
inc
cmp
ficomps
shll
jb
ret
push
arpl
pop
pop
adc
push
es
sbb
xor
sub
pop
inc
xchg
inc
adc
mov
lods
sbb
mov
jnp
mov
mov
xchg
pusha
sbb
loop
or
mov
std
fistl
sbb
sub
fdiv
push
pop
add
nop
addl
je
xchg
imul
inc
in
add
imul
or
and
and
out
out
lock
les
fwait
in
xlat
icebp
and
sbb
cmp
pop
in
shrb
in
out
xlat
push
cli
jnp
lahf
push
mov
and
adc
aaa
dec
jle
ret
outsb
test
mov
pop
fisttpll
gs
fisubs
cmpsb
xor
pop
lret
incb
xchg
pop
xchg
loopne
adc
and
shll
mov
dec
add
sub
in
sub
sub
adc
dec
hlt
pushw
aas
dec
inc
xchg
sub
pop
add
cmpsb
dec
sub
xchg
scas
dec
data16
ds
rclb
out
adc
sbb
sub
mov
ja
adc
xchg
dec
push
cs
adc
popa
sbb
dec
xchg
mov
loop
repz
dec
inc
push
mov
pop
dec
pop
sbb
add
fs
shlb
push
add
pop
ret
pop
rolb
out
ljmp
jo
in
loopne
push
jns
rorl
testl
inc
pop
ss
nop
bound
push
negb
xchg
aas
dec
roll
jae
out
sbbb
xor
jnp
lret
rorl
adc
pop
iret
push
andl
sbb
popf
mov
cmp
xlat
jp,pn
push
push
pop
pop
push
int
xchg
out
and
jmp
cs
sbbl
loop
or
fwait
mov
inc
daa
imul
sbb
or
jg
in
jl
inc
test
jg
repz
stos
shr
pop
aam
jns
sbb
test
push
dec
out
lcall
movsl
andl
push
xor
sub
aad
or
sub
xor
mov
das
notb
fs
mov
inc
int
adcl
fcomip
sub
and
xchg
mov
lock
push
mov
add
and
mov
inc
out
pop
xchg
inc
pop
mov
ss
popf
jo
ja
dec
adc
int3
js
or
and
movsb
and
xchg
lods
rcrb
movsb
and
int
and
push
imul
scas
neg
xor
dec
sbb
sub
xor
lods
cmp
jle
sbb
and
icebp
add
adc
gs
mov
pop
pop
mov
xor
push
mov
mov
adc
cld
std
sub
mov
add
xor
xor
cli
lods
xchg
mov
sbb
jns
xchg
cmp
jmp
test
push
call
out
inc
daa
mull
push
push
repz
bnd
and
jg
fsubl
jmp
xchg
add
aas
sub
sbb
sbb
shll
shlb
in
mov
dec
jnp
jnp
dec
lods
outsl
shl
pop
cli
dec
mov
xchg
and
lret
aam
jmp
popf
enter
enter
xchg
lret
xor
jmp
xchg
sbb
ret
cmp
out
popf
ds
mov
loope
faddl
dec
add
sbb
sub
push
jnp
xchg
xchg
inc
cmc
push
into
lea
clc
pop
stos
repnz
movsb
jns
inc
and
fsubl
aad
pop
into
add
aas
or
aad
movsb
inc
xor
inc
push
sub
sub
mov
sub
mov
jne
popa
add
pop
call
inc
fistps
sbb
cltd
pop
dec
insb
sti
adc
shll
loop
mov
pop
imul
jg
stos
roll
fdivrl
stos
jl
popa
adc
sarb
and
sub
xchg
mov
xor
pop
in
add
imul
jns
cld
xor
sbb
xchg
or
adc
jne
movsl
mov
loop
nop
in
inc
sahf
dec
sub
sarl
xor
add
loopne
mov
es
dec
lret
lcall
std
and
dec
shll
cmp
xor
sahf
mov
push
mov
xchg
cmp
sbb
aas
iret
jg
sub
xor
xor
pop
movsl
inc
jo
ret
xchg
dec
cld
jl
push
push
in
mov
cmp
and
call
xchg
call
add
sahf
scas
les
dec
rcrb
cmpsl
mov
outsl
ficoms
push
xchg
or
leave
scas
pop
aas
mov
inc
mov
xlat
and
push
adc
xor
mov
fadd
or
mov
push
dec
sbb
jle
test
movb
sbb
dec
or
mov
mov
out
es
sub
inc
mov
jmp
push
stos
inc
rorb
out
push
mov
or
mov
outsl
mov
inc
sbb
mov
pop
mov
pop
add
cwtl
movsl
mov
and
mov
mov
lcall
cmpsb
js
sbb
shlb
out
and
xor
and
cmc
xor
adc
inc
mov
push
cmc
icebp
pop
shll
and
rcll
es
sub
divl
ror
cmp
xorb
pop
dec
jne
xorl
pop
test
jge
popa
out
cmp
mov
cmp
add
dec
fcmovnb
push
xchg
hlt
loope
mov
lcall
movsb
push
mov
mov
xor
mov
call
pusha
test
iret
das
mov
mov
cs
dec
dec
stos
jo
sub
pop
std
adc
sub
hlt
pushf
xor
icebp
mov
mov
and
test
jbe
sbb
mov
cmp
mov
cmp
rcr
mov
add
inc
add
add
cmp
aas
or
jb
mov
xlat
lret
mov
pop
jbe
cli
dec
or
call
lret
inc
aas
sub
push
testl
in
insb
mov
jo
dec
rorb
jp
mov
inc
mov
movsb
sti
sbb
dec
sbb
sbb
pop
fcomps
iret
cmpsb
push
pusha
cltd
mov
in
addr16
and
jle
testl
test
ljmp
cld
test
push
lret
add
sbb
mov
inc
and
jg
or
imul
stos
rorl
and
les
inc
inc
inc
and
ffree
mov
xchg
sub
and
xor
aas
xor
mov
inc
pop
sbb
iret
movb
add
mov
clc
jg
mov
dec
adc
sarl
fs
pop
dec
pop
adc
leave
ja
lods
iret
imul
out
out
sub
xor
jmp
jge
fiaddl
cld
insl
int
cmp
lret
repz
mov
clc
push
pop
add
cmp
push
call
dec
and
dec
jmp
mov
data16
cmp
aam
xlat
dec
or
test
dec
sbbl
add
mov
xorl
cmpb
mov
dec
jmp
lods
cwtl
push
push
rolb
movsb
jo
lret
mov
dec
shrb
ja
je
cwtl
lea
and
ds
sbb
aad
test
enter
and
in
cltd
sub
push
xchg
sub
adc
adc
sahf
mov
cmp
in
pop
lds
xchg
cs
hlt
frstor
mov
outsb
out
adc
popa
cli
dec
dec
mov
mov
out
rcrb
in
addr16
adc
push
mov
adc
add
adc
mov
mov
imul
in
rcrb
cwtl
mov
fdivs
nop
ds
lds
loop
lcall
fcmovbe
cmp
rcrl
fcomi
sub
ljmp
push
cmpsl
push
dec
dec
fdivrl
decl
mov
fs
decl
adc
ds
mov
ja
iret
inc
add
dec
cltd
shll
lret
push
cmp
mov
push
jae
je
mov
pop
or
pop
aad
incb
and
add
sbb
inc
jg
scas
aam
addr16
lods
imul
roll
lret
nop
jb
mov
rcrl
jl
scas
adc
add
push
mov
cmp
adc
out
pop
pop
add
fcom
ljmp
es
rclb
in
sbb
out
inc
cmpsl
gs
jo
scas
jecxz
lds
aas
out
dec
sbb
faddl
fstps
sar
push
imul
jne
mov
cltd
sbb
mov
jle
out
rcll
pop
sbb
add
xlat
loopne
inc
lcall
leave
jne
inc
lret
jge
push
inc
push
imul
bound
xchg
sbb
lret
aam
jns
lahf
aas
mov
push
gs
lods
mov
push
cwtl
mov
dec
adc
popa
cmp
adc
cmpsb
movq
in
push
inc
int3
mov
pop
pop
popa
lret
xchg
dec
mov
repz
mov
xchg
cwtl
xor
gs
scas
cmp
sarb
inc
addr16
dec
add
loope
jnp
lock
lret
mov
icebp
stos
movsl
xor
testl
int3
xchg
sbbb
sarl
lods
aas
pop
in
js
xchg
or
shrb
test
cs
pop
inc
icebp
testb
cmpsw
mov
mov
mov
and
les
jg
sti
jo
mov
enter
adcb
sbb
or
mov
adc
iret
add
testl
mov
loopne
into
adc
cmp
sub
imul
nop
push
pushf
hlt
xchg
mov
jecxz
and
add
adc
shr
adc
rolb
and
fisubl
push
push
jnp
mov
les
scas
adc
das
fmull
test
sbb
dec
shr
or
push
push
test
dec
movsb
jle
call
fists
inc
pop
iret
add
sub
inc
clc
push
mov
sub
inc
scas
fldcw
into
clc
mov
sub
xor
mov
sbb
push
ret
pop
cmc
xorb
or
lods
sbb
cmp
cmp
xchg
pusha
and
test
lods
cmpsl
xchg
push
dec
decb
loopne
inc
jns
adc
pop
out
out
ds
in
test
ja
xlat
dec
fld
dec
lret
addr16
jbe
xchg
xlat
xor
sub
xor
popf
dec
mov
ret
fcom
xchg
and
cltd
fisttpll
or
lret
jo
dec
push
je
imul
xchg
aaa
sbb
aam
pop
scas
and
sbb
push
adc
mov
bound
mov
push
in
xchg
xchg
cwtl
adc
inc
mov
aaa
les
aaa
cmp
rorb
movsl
sbb
sub
or
pop
mov
or
repnz
idivb
mov
sahf
mov
mov
push
push
add
sub
jne
sub
jbe
sub
mov
jge
ret
dec
movsb
lods
repnz
cmpsl
fnstenv
mov
test
push
xchg
mov
fs
adc
fstl
push
test
adc
lea
cmpb
add
orl
pusha
cmp
gs
and
xchg
out
scas
sbb
dec
push
pop
outsl
idivl
or
sub
clc
xlat
ss
nop
shlb
push
or
push
adc
ja
icebp
je
hlt
pop
dec
inc
inc
jmp
mov
xor
push
dec
xor
mov
aad
pop
inc
xchg
mov
test
aam
sub
cmp
or
add
enter
sbb
sbb
ret
jno
hlt
xlat
imul
sub
add
call
lea
movsb
sbb
divl
hlt
jo
arpl
cwtl
ret
pop
push
das
sub
jge
repnz
and
xchg
push
push
ja
in
xchg
fstps
js
xorb
xchg
inc
fidivl
test
mov
cmp
add
insl
int
and
push
cmc
mov
adc
sub
lret
test
cli
and
aad
mov
mov
mov
inc
push
inc
aad
ja
faddp
das
dec
push
rcll
dec
sbb
mov
adc
sahf
or
lds
ds
jmp
outsl
sub
nop
stos
sbb
hlt
inc
push
fidivs
mov
movsb
imul
sub
cwtl
xor
mov
xor
xchg
or
add
mov
mov
push
mov
pop
out
outsb
xor
iret
sti
aad
and
sbb
adc
jbe
enter
pop
push
inc
out
or
icebp
mov
adc
int
inc
idivb
pop
std
loope
cmp
in
push
mov
mov
and
push
fstps
test
fsubs
aad
roll
mov
push
xchg
imul
lret
and
fisttpll
add
lahf
sbb
dec
sbbb
ljmp
mov
sbb
and
mov
sar
push
rcr
jp
sub
xor
cmp
int
add
in
je
jnp
jg
scas
lahf
ss
cs
stos
mov
mov
sub
out
push
or
sbb
data16
popa
and
jg
dec
xor
add
and
pop
stos
mov
aam
enter
test
imul
jmp
decl
out
in
icebp
cld
pop
dec
test
fisubrl
ficoms
nop
jecxz
fs
sub
sub
xchg
dec
jl
pop
loopne
rolb
inc
add
xlat
inc
sub
xchg
mov
jle
jns
push
inc
add
js
jmp
aam
mov
cmp
jmp
scas
push
mov
xor
jge
out
inc
js
jne
insb
int3
jl
cmpl
push
dec
pop
int
or
mov
jecxz
imul
lcall
push
scas
test
lret
and
test
hlt
ret
jecxz
push
stos
sub
fs
mov
es
test
or
clc
je
and
jl
lea
outsb
ret
pop
popa
xor
nop
pusha
mov
add
jne
int
scas
mov
and
jbe
lods
jb
inc
mov
lea
fildl
sub
and
shrl
jne
sub
or
addb
dec
jle
xor
pop
or
loope
add
dec
or
roll
cmpsl
pushf
cmp
call
jnp
cmp
fistpl
or
fs
dec
xchg
repz
je
sbb
cmp
leave
in
xor
push
pop
dec
imul
xchg
pushf
out
inc
mov
xchg
cltd
add
inc
es
cmpsb
push
sub
fdivrp
mov
ja
jmp
je
out
dec
fdiv
push
push
arpl
xor
pop
xchg
and
cmpl
pop
dec
dec
mov
xor
imul
ljmp
cmpsb
dec
mov
je
sbb
iret
pop
jno
dec
rcrl
call
and
push
lock
in
mov
loop
ret
daa
xchg
in
outsl
dec
sbbb
movsb
dec
dec
adc
sahf
cwtl
enter
xor
adc
or
jnp
inc
dec
mov
add
xor
jp
gs
and
or
inc
or
icebp
add
stos
in
jnp
scas
out
adc
or
jne
in
shll
sbb
stos
clc
mov
test
or
and
dec
and
push
sbb
or
dec
and
cmp
jp
inc
call
sbb
mov
or
sub
and
mov
push
cmp
jo
add
sbb
shll
into
mov
movsl
add
xlat
jnp
std
dec
mov
cld
cmp
and
imul
push
aam
sub
int3
movsl
dec
sbb
call
cmp
pop
pop
and
idivb
adc
push
xor
fsts
mov
sbb
xorl
xchg
push
cwtl
jp
or
stos
rclb
int
rcr
lods
push
addr16
das
xchg
mov
daa
mov
jb
insl
into
lock
or
jl
nop
subl
xchg
mov
pop
mov
mov
aad
adcb
xor
data16
or
ss
pop
roll
cmp
xorl
add
dec
ja
enter
sub
fwait
data16
pop
or
data16
jns
adc
repz
testb
fstl
sahf
or
mov
mov
loope
mov
pop
arpl
cld
xchg
pop
inc
cmc
in
inc
mov
ljmp
into
aam
inc
pop
adc
in
pop
cmc
sti
popf
xor
push
sub
dec
inc
ss
xor
xchg
or
cltd
add
sbb
inc
fdivrs
push
rolb
pop
outsl
cmp
aam
fs
xor
es
cltd
mov
dec
es
xor
mov
mov
loope
adc
rorl
mov
sbb
sbb
adc
jg
xlat
fsubrs
mov
fistpll
sbb
jb
fldcw
mov
inc
aas
scas
adcb
sub
outsb
lods
mov
xchg
stc
dec
hlt
xchg
psllq
inc
scas
jns
daa
jecxz
bound
addr16
loope
rcl
pop
jle
je
sti
adc
xchg
popa
lock
loope
mov
cmp
call
xchg
shrb
imul
addb
or
sub
push
jb
ljmp
jl
sub
dec
adc
in
push
imul
cmpb
xorl
or
scas
sbb
je
mov
in
mov
xor
ffree
std
nop
adc
pop
inc
adc
inc
adc
and
es
in
cli
add
inc
sti
dec
cld
ret
fs
mov
xchg
pop
fimull
lods
dec
push
rcrb
push
mov
xchg
nop
cli
sub
jmp
xchg
ret
mov
xchg
loop
fiadds
adc
divps
mov
push
lock
inc
jb
xor
xor
add
jb
or
dec
mov
out
leave
xchg
jmp
adc
scas
out
fsubl
xor
jb
repnz
jnp
pushf
sbb
cltd
in
lods
pop
js
cmp
xchg
test
inc
cld
adc
jno
adc
mov
and
mov
stos
imul
pop
fiaddl
adc
popa
jno
jmp
int3
subb
loopne
sub
movsl
cmp
push
mov
jb
in
sub
pop
es
adc
mov
test
pop
jl
mov
xor
xchg
cmp
xchg
cld
hlt
jae
push
ret
iret
repnz
ret
push
push
imul
dec
pop
test
mov
fisttps
pop
sbb
mov
mov
cli
xchg
sbb
xor
cwtl
repz
decl
ret
cld
cmp
shlb
daa
push
sub
lret
js
in
frstor
repnz
aaa
out
clc
jno
lret
cmp
in
fsubrs
lods
mov
test
push
insl
pmaddwd
call
out
ret
adc
lret
push
movsl
jl
icebp
dec
xchg
mov
sub
xchg
mull
int
test
paddq
cmp
pop
push
mov
jo
cmp
aad
add
xor
inc
sub
xor
or
in
mov
fisttpl
sub
shl
lds
cmpb
inc
mov
mov
mov
push
pop
aam
push
fisubrs
ljmp
mov
inc
out
les
push
xlat
pop
mov
pop
jg
test
insb
repz
cmc
pop
xlat
sarb
cld
cltd
addr16
fists
mov
adc
lods
outsb
loop
push
mov
icebp
js
insl
mov
sbb
lahf
inc
jmp
test
xor
faddl
inc
ljmp
lods
sub
mov
in
ret
add
rorl
mov
jns
xor
inc
pop
popf
popa
xchg
enter
dec
shr
add
or
jecxz
repz
fcom
sbb
and
push
call
popf
or
scas
stos
ret
pop
push
and
mov
ss
lret
lods
fwait
push
incb
addr16
xor
push
pop
and
aas
dec
repz
mov
stos
int3
inc
test
adc
outsb
mov
fsubrs
sbb
aaa
clc
lcall
push
andb
daa
jl
mov
in
lcall
pop
int3
mov
cmpsl
outsl
jl
in
sahf
aam
jmp
daa
imull
stc
cmp
cmp
sbb
iret
pop
jecxz
push
cld
inc
xor
sub
push
xchg
mov
call
jmp
xchg
aad
mov
daa
aas
adc
jg
cmp
lods
xor
xlat
push
movsb
xor
add
imul
xor
push
rcl
mov
push
ljmp
mov
inc
mov
lds
fs
adc
ss
xchg
sub
cmpsb
ret
push
sbb
push
repz
or
rcrl
xchg
mov
adcl
notl
push
in
push
jle
sbb
ss
and
jbe
test
jo
jnp
lret
and
int
or
push
pop
pusha
pusha
xor
pop
dec
push
test
add
ds
cmp
out
mov
push
lods
lea
orb
icebp
pop
test
ret
cmp
inc
sbb
pop
xlat
pop
repz
lcall
shll
aam
inc
pushf
jb
mov
cmp
mov
ret
xor
jmp
ror
adc
loopne
stos
cwtl
stos
sahf
call
psrlw
out
mov
dec
push
mov
sub
iret
in
in
fs
aas
out
jnp
jb
pushf
cmc
sub
js
jecxz
push
pop
add
xor
jmp
lods
ljmp
mov
sarb
jl
push
push
divl
sbb
incb
gs
or
jge,pn
pop
ss
jmp
push
or
out
sub
push
lcall
std
mov
lcall
mov
aaa
jae
shrb
mov
repz
mov
xor
sbb
insl
dec
dec
xor
pop
fsts
cmpsl
cmp
gs
dec
mov
push
and
repz
aam
mov
sbb
shl
push
stc
fnstsw
mov
std
icebp
xlat
inc
jbe
fwait
xlat
fs
sub
pop
add
out
mov
clc
insb
mov
lret
std
movsw
adc
xor
xchg
mov
jnp
push
mov
gs
or
in
pop
ja
dec
enter
push
push
or
test
mov
notb
ss
loop
stos
add
aas
sahf
out
or
adc
cmp
daa
xchg
pop
insb
mov
xchg
or
sbb
jp
ss
sub
arpl
push
sahf
push
addr16
sahf
je
je
lea
or
push
cld
add
jmp
ja
ljmp
arpl
adc
adc
fcoms
mov
es
cli
js
fwait
inc
fwait
cmp
xchg
sti
xor
mov
pop
sarb
jg
mov
nop
mov
cmc
and
mov
jle
data16
dec
gs
sub
imul
and
and
outsb
mov
sbb
mov
or
xchg
rcll
faddl
jl
ljmp
pop
adc
icebp
jg
xor
adc
movsb
cmp
sbb
addr16
inc
movsb
cmc
cmpl
dec
cmovp
outsl
je
mov
sti
pop
push
ret
mov
mov
rorb
mov
jne
loope
mov
ficomps
mov
divb
mov
or
sti
inc
adc
jp
cmp
lahf
outsb
sbb
repnz
jle
or
jnp
out
ret
mov
and
fstpl
es
fildl
loop
and
adc
xchg
cmp
add
out
pop
fsubl
add
jmp
sub
scas
push
or
test
xor
mov
rcr
fidivrl
pop
mov
cmp
xor
mov
mov
and
dec
cmp
sbb
ret
out
je
faddl
cmp
jp
cli
sarl
stos
ret
push
fs
xchg
test
dec
xor
lahf
in
or
aad
lock
mov
negl
pop
lret
mov
mov
rcll
mov
enter
push
jb
insl
es
jnp
dec
fisttpl
lods
in
fsubl
jg
inc
inc
clc
add
cmp
xchg
lds
pushl
stos
jle
sti
arpl
cs
mov
push
xchg
inc
or
pop
ljmp
sti
sub
sbb
push
xchg
or
popl
dec
scas
inc
js
scas
repz
lock
lock
dec
mov
div
xchg
xchg
jbe
arpl
out
adc
outsb
ret
mov
testb
mov
dec
aam
repnz
jns
jmp
or
jl
or
daa
stc
push
iret
xor
add
gs
pop
ljmp
inc
push
aaa
aas
xchg
jle
clc
or
repnz
cmc
xchg
xchg
insl
add
jno
sbb
addr16
adc
push
fwait
std
insb
or
xor
cmp
std
jb
scas
push
sub
xor
and
movsl
jg
cmpsb
sub
push
mov
ds
jne
testb
popf
fidivs
cmp
rorb
ud2
ret
xchg
scas
jnp
jle
mov
fs
lods
lea
lret
out
lock
in
xlat
mov
sarb
dec
push
push
dec
mov
cmpb
roll
and
inc
mov
sti
imul
call
movsb
sbb
or
or
cmp
push
lret
xchg
lods
push
insb
filds
add
shll
xchg
lcall
add
fcomi
mov
cmp
mov
cmp
push
xor
test
jecxz
fistpl
add
mov
cmpb
test
sub
mov
xor
out
and
xor
lock
adc
jne
add
shll
sbb
inc
cmp
fmull
stc
fstps
fwait
cmpsl
mov
or
hlt
pushf
cmpsb
mov
mov
into
inc
imul
pop
adcl
push
test
pop
mov
in
adc
out
cltd
inc
and
pop
mov
or
rorl
adc
sub
sbb
push
xor
jae
sub
mov
inc
sbb
js
mov
sar
sbb
mov
mov
mov
pop
add
push
cmpsl
dec
imul
xchg
jecxz
lock
iret
mov
imul
loop
out
lret
and
push
dec
and
lret
orl
std
xor
xor
leave
jns
push
xchg
jbe
mov
xchg
loop
xchg
shld
test
cmp
sbb
out
inc
enter
mov
aaa
sti
dec
or
pop
lret
jb
fidivl
add
movsl
insb
adc
mov
xor
mov
test
sbb
push
xor
push
ljmp
test
jg
jbe
push
jns
add
out
lahf
add
push
add
xor
sti
xchg
call
or
inc
pop
lret
jns
fwait
push
inc
fcmove
fiadds
mov
mov
push
push
rclb
lods
sbb
and
mov
mov
int
xor
mov
dec
push
in
xlat
stc
icebp
or
add
loope
ret
push
mov
leave
adc
enter
jle
push
xor
and
psubsw
xor
mov
push
in
jmp
add
sub
lret
mov
xchg
dec
mov
mov
push
adcl
fmull
dec
sub
popf
test
add
jns
dec
aaa
arpl
adcl
loopne
cmp
js
mov
arpl
sbb
in
push
cmp
leave
inc
div
scas
mov
inc
mov
aad
mov
cmp
test
shrb
pop
in
sbbl
push
add
mov
in
fcmovnbe
ja
sbb
xlat
adc
subb
mov
sub
jmp
pop
stos
imul
sahf
loop
fcoml
xchg
sbb
xor
out
cmp
sub
xor
loope
sub
test
mov
inc
dec
and
push
pop
std
shll
push
fidivrl
out
movsb
fmuls
idivl
xchg
sbb
bound
outsl
in
iret
ja
xchg
lahf
add
xchg
mov
fsubrs
add
mov
push
sbbb
inc
cwtl
adc
sarb
push
test
dec
mov
inc
insl
dec
lock
mov
in
pop
push
fisubl
out
inc
int3
sbb
cltd
insl
mov
add
sub
jp
mov
stos
and
out
adc
push
dec
test
push
movsl
jns
mov
mov
sub
loopne
and
stos
xchg
cmpsb
dec
adcb
xor
sbb
jns
mov
sub
out
pop
lahf
std
stos
fmuls
subl
insl
nop
ljmp
mov
loop
psadbw
repnz
scas
jne
fwait
enter
sahf
xor
cmp
mov
jae
cmp
imul
and
dec
lock
push
mov
xchg
les
ljmp
jns
dec
push
pop
outsl
xor
aaa
dec
or
dec
push
out
dec
mov
cmpps
mov
cld
loop
jp
bnd
mov
out
push
adc
jle
je
pusha
xchg
jmp
lcall
aam
imul
push
xor
cmp
outsb
or
jg
jnp
test
mov
scas
sbb
cwtl
cwtl
mov
xchg
addr16
jbe
add
call
in
daa
aam
sub
jb
insl
jb
and
and
cmpsb
xchg
sbbb
cmp
std
jg
iret
pop
inc
xchg
push
add
jl
jnp
add
dec
sub
push
push
push
mov
ret
pushf
jp
mov
or
fnsave
sub
xchg
xchg
ss
outsb
enter
mov
iret
sbbl
add
push
test
sbb
enter
sub
or
push
les
cli
imul
shlb
ljmp
pop
pop
pop
popa
pusha
mov
or
leave
and
push
mov
fwait
mov
sub
xchg
out
jl
push
out
shll
hlt
ds
and
xchg
or
add
push
mov
lea
fidivs
imull
pop
out
sub
fwait
loop
or
push
out
adc
insl
mov
rcrb
jl
movsb
in
xor
adc
jge
jmp
js
daa
mov
adc
cmc
xor
fistpll
das
test
jo
mov
xchg
or
mov
xor
sbb
pushf
leave
or
lahf
push
add
xor
sti
scas
sarb
push
sbb
outsl
in
xor
cmp
push
jnp
or
test
inc
jbe
mov
scas
or
sub
icebp
fwait
push
movsl
jecxz
stos
cmp
xor
std
insl
inc
inc
loopne
inc
xor
les
in
repz
push
addr16
add
pop
fidivrl
cmp
sahf
xchg
mov
js
lahf
and
jecxz
mov
shll
sub
loop
add
sub
pop
mov
aad
dec
test
cmc
fwait
testl
mov
sub
je
adc
inc
mov
jno
adc
icebp
movsb
dec
and
out
sbb
or
dec
outsl
arpl
mov
cmpsb
ljmp
and
clc
in
pop
xor
xchg
xchg
push
add
ret
pusha
icebp
scas
pop
das
stos
outsb
jg
adc
mov
xchg
xchg
cmpb
mov
push
mov
mov
cmp
pop
mov
imul
test
rcll
pop
icebp
mov
pop
cmp
push
sub
add
xorl
and
xchg
push
mov
test
pop
adc
xchg
not
ja
sbb
push
jmp
sub
lea
xchg
popa
dec
sbb
icebp
loopne
xchg
rcrb
push
inc
sbb
xchg
lea
xor
fs
push
pushf
andb
mov
jmp
fbld
adc
enter
fisubl
je
fidivrs
test
lea
dec
test
pop
cs
xchg
jp
es
push
mull
dec
inc
cltd
add
mov
fmuls
or
cmpsb
add
into
add
sbb
fidivrs
xchg
jmp
cmc
pop
xor
inc
mov
mov
sub
les
and
fstl
pushf
lret
xor
jnp
push
cwtl
mov
push
sahf
sahf
in
mov
ss
pop
mov
push
or
mov
shr
xlat
inc
cmp
mov
leave
add
add
sbb
or
cwtl
xor
pop
rcrl
test
xchg
sbb
scas
mov
dec
or
or
jne
or
std
xchg
or
sub
jle
lods
loope
hlt
loope
cmc
imul
inc
mov
mov
fcomps
arpl
sbb
xchg
or
imul
add
or
incl
mov
xchg
and
sbb
frstor
sub
lods
mov
sub
jae
aas
push
rep
mov
imulb
mov
dec
insw
xchg
out
sbb
adc
inc
mov
cmp
sbb
lcall
pop
mov
add
ds
fstpt
das
cwtl
ret
fimuls
cmp
adc
push
sbbb
push
push
sbb
lret
mov
xor
xchg
cltd
pusha
jnp
sub
cmp
outsl
add
and
mov
lahf
lods
adc
or
xor
sarl
ds
jo
pop
jbe
xchg
cmpsl
xchg
mov
mov
sub
inc
lcall
repnz
push
push
inc
iret
sbb
cmpsl
inc
pop
dec
xchg
mov
mov
mov
dec
movsl
pop
lcall
fsubrl
std
push
jo
xor
cmp
sbb
push
test
mov
push
jecxz
or
adc
and
push
lret
add
jb
jp
nop
push
pop
xchg
dec
enter
fimull
and
je
pop
push
lock
subb
clc
and
mov
fists
cmp
xor
mov
pushf
fdivrs
sahf
mov
loopne
mov
xchg
clc
cmp
iret
rolb
out
inc
bound
dec
and
out
pop
sahf
add
cmp
jp
inc
nop
cmpsl
sbb
xor
ss
js
in
inc
xchg
lret
test
cmp
mov
fstpt
xor
ret
mov
add
inc
jne
jecxz
scas
mov
shlb
lcall
test
inc
mov
fdivl
out
data16
or
pop
out
fldenv
pop
call
cmpsl
xchg
cmpsb
sti
pop
or
mov
out
sub
rolb
fucomi
cmp
jae
push
push
jecxz
subb
test
and
jmp
jecxz
shll
add
aad
add
jecxz,pn
fisubl
push
pop
andl
dec
mov
ficoms
mov
jo
adc
shl
push
movsb
out
and
rorb
pop
mov
and
jmp
sbb
or
jmp
scas
jbe
add
popa
imul
dec
popa
dec
mov
add
lret
adc
test
inc
inc
inc
cmc
sub
data16
icebp
add
repz
or
ds
mov
es
int3
lods
fcompl
mov
mov
sub
xchg
inc
sbb
sub
jns
out
fwait
mov
or
rcl
fdivl
dec
shlb
mov
daa
leave
out
xor
xchg
xor
mov
sbb
inc
or
fbstp
sbbb
sahf
push
rcll
cmp
jo
ds
mov
jno
add
inc
in
enter
shlb
out
xor
gs
push
es
xor
ds
sub
stos
jo
icebp
loope
fiaddl
mov
ror
jo
push
shr
aaa
add
outsb
xchg
sbb
push
lds
pop
add
cld
push
xlat
aad
mov
movsb
jo
xor
cmpsl
aam
mov
pop
fwait
mov
sbb
and
sub
mov
cmpsb
dec
push
dec
xor
lret
sbb
loopne
mov
dec
mov
sbb
pop
lods
push
outsl
push
pop
cmc
pop
dec
lods
inc
pushf
in
jge
mov
loope
mov
pop
jnp
insl
adc
out
and
sbb
jmp
vmread
ja
push
xchg
iret
mov
mov
push
jl
add
addr16
insl
dec
mov
movsb
cltd
fdivp
mov
shll
lret
mov
xchg
push
jae
subl
int3
jne
jo
mov
xchg
pop
arpl
ret
push
dec
andl
sbb
test
fbld
scas
inc
jno
xchg
jl
aam
adc
sbb
leave
pop
sbb
dec
sbb
je
ret
fsub
and
jb
jno
int
jp
pop
xor
pushf
mov
push
inc
or
jbe
lods
lods
pop
mov
and
lret
outsl
and
mov
loop
dec
das
sbbl
dec
inc
push
add
mov
ds
jo
dec
idiv
cld
mov
shl
imul
mov
fdivrl
hlt
sbb
sbb
and
scas
rcrb
je,pt
inc
xor
hlt
pop
cmp
in
pop
pop
faddl
pop
jbe
daa
repz
insb
out
sbb
adc
and
or
mov
call
pop
sub
scas
cmp
andb
xchg
jge
mov
je
pop
testb
je
dec
icebp
negl
sub
push
rorl
xor
mov
ja
das
mov
push
lahf
and
dec
test
loopne
adc
add
push
sub
add
or
cmp
shrl
ja
mov
adc
mov
enter
das
dec
shrb
cmpsb
lock
add
testb
out
or
lret
fcomip
enter
pop
mov
out
dec
out
pop
cmp
outsl
xor
pop
decl
rcl
xlat
insl
js
push
mov
dec
imul
daa
cmc
outsl
dec
and
icebp
jnp
and
aas
out
sbb
ficoml
arpl
scas
add
inc
clc
mov
xor
jb
aaa
jne
orl
xor
xchg
loope
jecxz
fisubs
mov
stc
mov
fcoms
ja
fildll
pusha
and
add
dec
lahf
sub
adc
cmp
mov
in
fsubs
jp
jmp
sub
cmp
or
shlb
pop
xchg
ret
jle
xchg
sarb
add
or
clc
sub
scas
sbb
push
dec
cmp
mov
jno
mov
sahf
pop
andl
push
rcr
dec
mov
clc
scas
sub
fldl
inc
rorl
xchg
mov
pop
sub
jo
jo
push
push
add
push
out
inc
push
orl
movsl
into
mov
add
push
mov
push
xchg
lret
popa
inc
sbb
outsb
cmp
pop
adc
cmc
jle
mov
pop
mov
sbb
push
xor
test
adc
test
jle
xor
in
orl
aam
into
xchg
pop
imul
lcall
orb
adc
or
cmpsl
xchg
xor
shl
aad
lahf
push
shll
adc
adc
pop
and
xor
xor
ds
mov
rcl
fimull
push
movsb
aam
rcl
dec
das
inc
push
jb
mov
clc
xchg
pop
clc
jo
dec
mov
sub
pusha
and
push
jb
sahf
cmc
xor
pop
fidivs
jno
mov
push
xor
cmp
mov
xchg
inc
mov
sbb
lahf
int3
lcall
jne
mov
mov
sbb
cmc
add
xchg
mov
lahf
rcr
jns
xchg
xor
mov
mov
sahf
das
inc
push
fists
adc
push
jno
nop
repnz
in
gs
adc
mov
jae
mov
test
in
xor
sub
and
pusha
aaa
out
push
arpl
lods
rolb
cmp
bound
xchg
mov
in
cmp
jb
aad
xchg
jg
in
int3
dec
inc
push
dec
les
xchg
clc
push
push
fstps
enter
imul
jbe
fists
and
sbb
int
xor
sti
sbb
xchg
lret
dec
mull
movsb
inc
jne
jge
pop
add
jecxz
mov
imul
cli
fstpl
test
stos
dec
cmp
or
sahf
mov
or
push
movsl
mov
jbe
addr16
cmpb
xor
pop
imul
pop
mov
enter
ret
test
loop
mov
and
xor
jecxz
orl
jo
lea
ret
out
push
insl
sbbb
pushf
aaa
cmp
jmp
icebp
call
popa
cld
test
test
lds
push
mov
mov
into
or
imul
jb
adc
push
fildl
pop
dec
into
or
pop
dec
push
roll
shr
ljmp
loope
rorl
leave
loop
xor
mov
mov
fisubl
xchg
js
fidivrl
pop
les
stos
shl
push
pop
adc
or
mov
dec
jb
dec
xchg
in
rorb
sbb
mov
mov
xchg
dec
jae
sbb
xor
push
repnz
sbb
leave
cs
dec
in
movsl
xchg
lds
repnz
cmp
sub
scas
call
in
and
icebp
mov
call
outsl
subb
cmp
repz
or
mov
fldt
int3
aas
push
pop
out
enter
mov
adc
pop
popf
cs
ja
mov
and
push
stos
sahf
cmpsl
jno
aam
leave
jl
jle
cmc
inc
mov
cmpsb
jle
push
cmpsl
lds
push
xor
sbb
mov
sub
inc
cmp
gs
push
sub
out
gs
lock
pop
push
lea
inc
pop
movsl
rol
cmpsl
rcll
xchg
and
cmp
mov
push
nop
cmpsb
jns
aam
and
sbbl
daa
ret
xor
inc
or
sbb
shlb
popa
sbb
dec
pop
mov
mov
cmpsb
mov
inc
push
push
jecxz
xor
addl
rcrl
inc
ljmp
movl
pop
add
lds
call
test
rol
test
mov
mov
sahf
data16
popf
leave
loopne
cs
adc
imul
mov
rorb
dec
add
ficompl
outsl
outsb
jns
pop
mov
cld
ret
je
clc
test
sbb
mov
lds
test
xchg
scas
dec
pop
sbbl
add
push
xchg
rcl
les
mov
cmovns
sub
xchg
in
lahf
in
mov
ret
mov
inc
pop
mov
fcmovb
push
mov
mov
sub
repz
into
push
add
xorb
lea
orb
scas
push
dec
popf
pop
movhps
cmpsb
inc
push
int
and
notb
pop
cmpb
mov
dec
in
jae
dec
sbb
sub
test
sbb
outsl
test
adcl
mov
pop
xchg
xor
mov
test
and
xor
inc
popf
leave
pop
xor
popf
ror
sbb
adc
push
jns
dec
fdivl
test
pop
pop
mov
sbb
xor
push
mov
iret
push
fdivl
mov
adc
add
cmc
sub
xor
jo
lods
add
clc
ss
dec
fxch
or
rclb
inc
mov
mov
jns
pop
leave
mov
aas
cmp
subl
es
xchg
in
sub
ret
in
jb
fcomps
movsl
jl
jmp
or
xor
shlb
jns
lds
roll
push
and
pop
or
test
xor
xor
fmull
inc
mov
dec
fidivrs
insl
and
ret
int
scas
jge
cli
dec
movsl
or
ret
xor
je
jns
push
push
out
testl
imul
mov
dec
push
xchg
push
sti
imul
xchg
mov
mov
fsubrs
xor
push
insb
pop
xchg
ret
adc
ret
jns
mov
mov
pop
xchg
shrl
repnz
mov
outsb
imul
dec
loopne
pop
sti
out
cmp
mov
add
xchg
or
nop
and
inc
push
mov
sbb
lret
daa
sbb
aad
mov
mov
and
push
addr16
sbb
push
imul
scas
sbb
push
jmp
fstl
fistpll
sbb
aad
add
mov
je
pop
mov
insl
cmp
cmp
sbb
add
or
mov
fbstp
push
xchg
xor
fs
lcall
mov
cmp
int3
call
xorb
cwtl
xchg
push
pop
jnp
dec
jae
jo
shrl
xchg
pop
fsub
dec
xor
addr16
test
jae
mov
lods
mov
rcrb
xor
fcomi
mov
lods
pusha
ss
lret
mov
fptan
stc
fldt
push
das
ss
lret
ljmp
out
add
and
cmp
sub
xor
jb
mov
shlw
add
adc
inc
pop
call
mov
sbb
jnp
pop
sub
xor
jp
sub
mov
lahf
and
insb
rorb
test
daa
xor
ds
aas
adc
mov
mov
out
mov
pusha
xchg
sub
dec
in
xor
mov
mov
adc
fisubs
cmp
shlb
jg
leave
jnp
xorl
ss
je
fistps
pop
xor
dec
and
push
pop
xchg
das
in
pop
mov
leave
cmp
and
add
push
mov
mov
decl
jmp
and
out
jns
dec
push
jne
inc
js
lock
pop
mov
aaa
and
or
gs
jns
xchg
pop
jg
mov
push
mov
enter
cmpsl
mov
insl
lds
mov
aam
lret
xor
xor
mov
cmp
insl
sbb
leave
or
xor
sti
ficoms
sub
mov
outsl
jle
sub
mov
and
fidivl
inc
orl
pop
and
pop
push
add
aam
xor
pop
movsb
ficompl
test
xor
cmp
push
icebp
nop
fstl
jnp
xor
add
mov
xor
in
clc
jno
mov
jbe
ljmp
add
inc
sbb
fcomps
pop
mov
or
filds
inc
sub
in
xchg
push
mov
push
or
xchg
lcall
mov
dec
lret
and
pop
mov
mov
cmp
lods
pop
dec
mov
es
push
in
jnp
pop
sub
test
loop
pop
insl
xor
shl
loop
popf
and
popf
lds
or
cmp
and
xchg
xor
dec
jge
or
mov
jecxz
fimull
idivb
xorl
inc
loopne
movsl
pop
mov
cmp
cmp
fimuls
mov
test
icebp
and
movsb
ds
sarb
hlt
sub
aaa
mov
mov
jp
fiaddl
call
out
pop
add
iret
cltd
les
int
pop
sub
in
lgdtl
rep
mov
adc
pop
inc
xor
scas
sub
cmpsw
fistl
sub
mov
xchg
movsb
stc
ljmp
hlt
pop
push
roll
add
push
push
addl
mov
test
sub
or
xchg
sub
xchg
mov
rcll
jmp
lods
add
cld
insl
out
and
fcomps
daa
enter
dec
sub
sbb
adc
vcvttss2si
cmc
xchg
arpl
popa
lock
inc
mov
out
xor
pushl
and
inc
out
and
movsb
mov
xchg
fiadds
dec
cli
or
sub
mov
popf
cmc
loopne
xchg
mov
into
pop
dec
and
fwait
mov
push
fdivl
xor
pop
cmp
dec
dec
stos
jb
and
mov
adc
fisubrs
lret
xchg
push
bound
lods
xchg
sbb
sbbl
jp
mov
jae
ss
lods
loop
and
sub
or
cmp
sub
lods
push
xchg
mov
mov
dec
xchg
and
sbb
repnz
fnstenv
sub
pop
jb
fidivl
ret
or
jecxz
pop
je
mov
pop
mov
sbb
cwtl
fistpl
aas
cmpsl
cmp
inc
mov
test
sbb
rcll
pop
jo
pop
dec
xchg
xchg
sbb
and
mov
dec
loop
ret
aas
inc
jp
frstor
mov
ficomps
imul
stc
xor
pop
pop
sar
fisubrs
enter
daa
or
inc
dec
jno
xchg
movsb
rclb
das
insb
out
insl
sub
insl
lods
test
push
rolb
ficomps
imul
aam
adc
cmp
inc
sahf
mov
aad
sbbb
dec
int
cmp
cli
testb
jg
add
js
aad
fisttpl
popf
fmuls
mov
cwtl
inc
std
mov
cmp
mov
push
push
mov
sahf
sub
add
fsts
sbb
adc
orb
in
cmp
add
sbb
push
std
mov
sbb
mov
jns
cmc
mov
lret
pop
add
clc
lret
lahf
roll
inc
mov
testl
and
int3
es
jo
daa
mov
pop
clc
loop
push
mov
lods
notl
jno
lret
push
stos
push
out
out
push
cwtl
push
rclb
mov
inc
gs
or
clc
pop
lahf
mov
xcrypt-ofb
cmpsl
jmp
jge
cmp
xchg
aas
movsb
pop
jl
mov
popa
mov
mov
or
addr16
outsl
stc
inc
push
sbb
out
daa
sub
into
lds
lea
and
dec
das
push
and
stc
xor
add
nop
or
das
out
cltd
test
sub
xchg
adc
mov
sbb
insb
pop
jp
sub
push
ret
es
dec
loop
inc
cmp
inc
dec
pop
mov
push
mov
mov
jns
fxch
fisttps
fdivl
movb
and
rolb
loopw
test
inc
loop
addr16
scas
pop
insl
inc
pushf
inc
mov
popf
push
adc
or
xor
and
stc
pop
jmp
mov
and
pop
cmp
mov
in
or
jg
repnz
arpl
lods
cmp
pop
cmpsb
fstpt
aam
aaa
aaa
inc
or
fwait
sarl
push
or
pop
call
dec
je
shlb
daa
jae
mov
push
fcoml
sar
repnz
int
add
adc
cmp
push
loop
mov
out
lods
xchg
pop
movl
xchg
push
mov
and
lds
mov
or
mov
sahf
mov
or
sbb
sub
imul
xchg
call
inc
test
mov
std
lcall
imull
jecxz
test
or
pop
mov
rclb
dec
mov
nop
repz
loop
jae
mov
sbb
enter
subb
mov
xor
push
jmp
xor
std
adc
jb
xlat
insb
pop
rcr
pop
fldl
sub
outsb
mov
cmp
insl
sub
imul
jne
and
test
stos
adc
push
add
imul
mov
test
and
jl,pt
sti
push
mov
pop
sub
mov
ljmp
subl
lret
sbbb
fsubrp
out
dec
mov
lock
mov
pushl
cmpsl
in
outsl
and
mov
icebp
es
mov
fcomps
rorl
idivl
adc
mov
out
std
jb
aaa
mov
dec
add
mov
clc
xor
out
mov
mov
cmp
sub
int3
mov
mov
in
sbb
mov
inc
inc
dec
xorl
ret
add
mov
movsb
dec
sub
mov
sbb
lahf
shr
mov
bound
cmpsb
lods
cmp
xchg
mov
sub
outsb
and
popf
pop
mov
ljmp
dec
xchg
call
mov
jmp
call
add
xor
mov
cs
cmpsl
mov
jnp
sti
xchg
popa
mov
stos
in
mov
in
sahf
nop
lcall
pop
jno
push
or
inc
add
in
push
adc
stc
loopne
dec
aam
pusha
loop
push
mov
rcll
adc
add
imul
in
cwtl
js
rol
xchg
adc
jmp
cld
outsl
ljmp
xchg
mov
cmpsb
lods
flds
arpl
ret
xchg
xchg
xor
outsb
imul
cli
xchg
in
addl
ljmp
push
popf
loope
test
inc
pop
cmpsl
inc
pop
xchg
iret
inc
xchg
repnz
jno
cmp
push
into
sbb
lds
xchg
cmp
stos
aaa
cmpsl
mov
in
stos
adc
push
push
jmp
adc
in
ljmp
je
lea
imul
xchg
sub
inc
stos
and
push
in
xchg
pop
cmp
cli
xchg
mov
cmp
add
or
sahf
and
or
lods
movsb
or
sub
adc
sub
sbb
adc
inc
xchg
xor
aas
shll
mov
mov
push
aas
mov
cmp
rolb
push
xchg
movsl
push
adc
sub
inc
clc
mov
xchg
cmpsb
sub
insb
decl
cld
popa
push
sti
add
xor
mov
mov
dec
ror
leave
notb
int
or
xor
mov
clc
xorb
dec
mov
sbb
nop
nop
fidivrl
shll
into
cmc
les
lods
cltd
pusha
dec
xchg
mov
ror
inc
inc
repz
lret
in
and
cmp
xchg
movsl
push
push
jmp
orb
lcall
push
jb
add
lcall
inc
fcom
jne
mov
and
adc
filds
mov
mov
cmc
pop
in
icebp
jae
mov
pop
xchg
and
in
rol
loope
out
xchg
iret
pop
loop
loope
cld
sub
aas
xor
xlat
cmpsl
and
scas
rorl
dec
mov
fxam
inc
outsb
not
jae
mov
sub
jne
dec
pusha
adc
mov
and
dec
adcb
in
mov
jl
fidivrs
js
out
adc
xchg
jne
pop
lret
stos
shll
push
sti
xlat
cmp
adc
int3
lds
add
inc
or
inc
mov
int
dec
lds
repnz
jnp
loopne
mov
sbb
hlt
mov
outsl
fsubrl
out
ja
pop
xor
pop
out
shrl
sti
loopne
add
insl
pop
dec
inc
sbb
mov
fmul
fadds
mov
dec
sub
cmp
push
out
and
pop
mov
sub
clc
mov
in
cmpsl
imul
cmp
ffreep
fldl
push
fstpt
fimuls
mov
pop
lods
jns
and
jb
or
jecxz
adc
mov
mov
xchg
aad
dec
mov
push
mov
push
or
xor
mov
adc
es
test
fcoml
sub
ret
pop
adc
out
addl
and
das
stos
push
pop
jo
jno
insb
mov
outsl
add
jecxz
fldl
outsl
dec
mov
lahf
inc
loope
xchg
xor
push
or
dec
mov
sub
mov
pop
jns
outsl
sub
or
fcoml
cmp
in
or
test
sbb
jl
add
out
cmpsb
fisubs
fldt
imul
in
stos
xchg
pop
adc
test
cltd
orl
xchg
mov
dec
pop
mov
scas
sbb
jle
stos
cmp
loopne
jge
orb
inc
pop
jp
inc
add
enter
call
cmpsl
int
insb
rcrb
fdiv
jg
push
es
xchg
jae
adc
mov
movsb
inc
fcmovne
pop
mov
lds
popfw
rep
lret
add
push
jo
jge
sub
in
push
mov
je
inc
jno
push
cmpsb
inc
cltd
jg
enter
xchg
mov
je
push
mov
add
xchg
call
jne
mov
sub
inc
mov
int3
es
repz
jp
lods
fisttpll
add
fisubrl
shrb
ljmp
pop
mov
mov
and
fidivrl
pop
cld
fsubr
jo
xchg
vmread
mov
in
jb
outsb
mov
jle
jge
dec
movsb
ret
push
test
jno
aad
and
arpl
jmp
subl
ror
push
mov
clc
das
pop
int3
mov
jb
add
push
xchg
or
repz
inc
cmp
icebp
dec
xchg
rcll
mov
stc
aaa
testb
push
sub
clc
out
ja
pop
mov
mov
int3
cmpsl
jns
xlat
lods
les
in
ror
ret
sub
mov
sub
sahf
out
in
pop
scas
out
ja
xchg
ss
lcall
pusha
push
stos
mov
insb
aaa
adc
sub
mov
fwait
jo
dec
xor
aam
nop
xchg
sub
pop
cmp
push
in
xchg
or
dec
sub
cmp
test
mov
fiadds
push
push
aaa
push
and
mov
pop
xchg
aas
outsb
cmpsl
sub
lods
cmp
mov
xor
fs
into
dec
orb
jp
js
or
mov
mov
or
cli
cmp
pushl
xchg
lret
ljmp
pop
jmp
dec
movsl
pusha
lea
add
jbe
shlb
fiaddl
scas
fldenv
fisttps
pop
outsb
mov
repnz
jl
jecxz
mov
out
test
xchg
outsb
test
ds
test
mov
add
jno
ljmp
mov
lods
movb
cmp
mov
pop
pop
inc
sahf
and
xor
push
add
fmull
xor
movsb
cmp
add
es
stc
inc
fwait
jecxz
movsl
mov
mov
dec
cmp
int
jecxz
out
cmp
incb
pop
xchg
out
push
mov
leave
mov
mov
jmp
leave
pop
push
or
scas
insb
fcomi
adc
mov
not
pusha
push
testl
sarl
cmp
inc
outsl
movsl
clc
jl
sub
insb
movsl
jge
xor
and
xchg
dec
mov
pop
or
in
fwait
cmpsb
sti
add
cmp
dec
adc
mov
mov
mov
sbb
pop
xchg
repz
push
jp
lahf
in
inc
jecxz
aad
xor
xor
xchg
push
xor
iret
jecxz
arpl
inc
sub
dec
jmp
pusha
mov
mov
pop
lea
test
setnp
or
and
jecxz
sahf
push
scas
repz
and
xor
jbe
ds
scas
xchg
cmpsb
xor
aaa
popf
mov
leave
xlat
xchg
xorb
icebp
scas
jg
xchg
jecxz
aas
inc
sub
push
inc
mov
xlat
jmp
addb
enter
cltd
cld
call
jnp
out
jmp
and
xor
sbb
add
fidivrs
stos
mov
fildll
imul
sbb
rolb
fidivrs
popa
mov
shl
std
jae
xor
fwait
xchg
test
andb
out
lock
jp
imul
or
sbb
stos
pop
inc
scas
xchg
lahf
outsb
inc
sbb
or
push
pop
push
ret
mov
xchg
ljmp
mov
and
jo
stc
je
pop
das
push
arpl
test
mov
cmp
xor
pop
mov
divb
adc
or
sbb
sub
or
mov
invd
movsl
mov
xchg
pop
xchg
add
inc
add
jecxz
cltd
adc
xor
jno
call
add
add
shlb
in
mov
loopne
sub
int
in
dec
lahf
movsb
popf
add
pop
pop
fcoml
sub
push
pop
pop
xlat
push
xchg
adc
adc
ret
sahf
mov
mov
and
pop
jmp
into
push
mov
mov
hlt
dec
addb
shll
leave
stos
div
push
cs
adc
sbb
mov
pop
ljmp
mov
or
js
cmp
dec
dec
ja
movsb
mov
insb
int
cmp
adc
and
cmp
es
xchg
aam
das
sbb
gs
stos
and
stos
ret
inc
into
cmp
push
or
bnd
insl
sub
inc
cld
pop
cmp
pop
cli
mov
mov
pop
jp
inc
std
subl
ljmp
jns
faddl
dec
mov
ds
lahf
sub
filds
out
jns
add
stos
dec
enter
fdivrs
fdivrs
add
inc
testl
jmp
loopne
cmp
sub
iret
stos
repz
stos
lock
and
or
jecxz
nop
push
idiv
or
sarl
fisubrl
mov
xlat
pop
cmpsb
push
adcl
mov
imul
pop
call
push
or
addb
stc
imul
add
fidivrl
pusha
lea
xchg
fistl
jg
jns
shrb
sahf
sti
xor
mov
ja
adc
cwtl
pop
cmp
mov
roll
stos
rcrb
popa
rcll
gs
js
push
fwait
push
stos
jns
imul
sbbb
mov
mov
cli
pushf
push
mov
xchg
sub
mov
cmp
xchg
and
and
jmp
in
sub
mov
dec
dec
adc
jo
pop
in
xchg
push
ja
and
divl
insl
dec
pop
ret
imul
and
repz
dec
xchg
repnz
loope
nop
mov
jae
mov
out
or
jl
or
jae
inc
push
dec
mov
call
hlt
mov
jb
cmpl
sub
or
mov
decl
cmp
mov
lahf
insb
das
fsubrl
imul
mov
mov
loop
xor
das
and
js
iret
js
adc
int
data16
adc
mov
pop
mov
add
mov
add
inc
cmp
punpckhwd
mov
push
fwait
add
test
data16
cld
sti
ja
mov
or
or
adc
mov
fstp
test
sbb
add
dec
pop
arpl
data16
pop
test
std
mov
xor
cmpl
stc
lahf
cmpsl
jnp
xchg
adc
mov
pushf
ficompl
mov
fildll
mov
xchg
iret
test
push
pop
mov
js
jae
sub
mov
in
push
test
test
jb
test
into
dec
or
pop
lods
movsb
xor
sub
rcrl
lock
adc
leave
add
push
mov
push
out
loope
push
outsb
dec
mov
mov
xchg
je
mov
fdivs
mov
ss
cmc
mov
arpl
out
sub
jle
adc
adc
inc
stos
cmp
nop
inc
mov
test
in
pushf
jecxz
arpl
mov
dec
out
movsl
je
inc
fadd
and
and
sti
xor
fstpl
fcompl
add
cmp
imul
js
push
xchg
xor
cltd
dec
sbb
mov
daa
adc
xor
mov
mov
jae
iret
test
mov
bnd
mov
mov
jg
lock
mov
ret
daa
mov
out
mov
test
sbb
dec
je
scas
dec
addr16
in
out
pop
cs
xchg
jge
in
addr16
or
sbb
stc
sarl
arpl
cmp
mov
lods
mov
mov
dec
mov
adc
and
mov
lea
xchg
or
lock
push
jmp
mov
inc
fildll
push
jmp
mov
dec
xor
je
push
test
out
xchg
xchg
cwtl
in
xor
insl
mov
pop
jb
add
es
je
pop
out
inc
leave
popf
xor
loopne
dec
daa
stos
xchg
dec
jg
leave
mov
scas
push
xor
inc
jp
fdivl
xchg
inc
jmp
arpl
sbb
in
mov
aam
xchg
sub
andl
pushf
in
or
sub
and
mov
mov
pop
adc
fidivl
dec
mov
sub
lods
movsl
or
push
mov
add
jp
loope
add
add
paddd
and
and
test
jmp
std
jne
fwait
xchg
inc
sbb
inc
jle
gs
jo
push
jg
lcall
add
data16
in
lret
outsb
cmp
pop
das
xchg
mov
inc
jns
call
jnp
das
cmp
mov
test
pop
mov
test
mull
orl
mov
call
or
xor
cmp
test
shll
and
scas
shrl
ret
lods
fcomp
xchg
pop
xchg
and
dec
rorl
push
mov
cld
in
out
xchg
adc
insb
nop
cs
das
mov
cli
xchg
cmpsb
xchg
lods
insb
test
jne
in
push
fisttpll
cwtl
daa
rcrb
mov
jp
xor
pop
lcall
push
jne
jle
pop
in
push
cmpb
cmp
inc
dec
pusha
es
dec
sbb
fwait
das
dec
sti
xor
jmp
test
mov
insb
mov
add
leave
and
lahf
mov
or
fidivl
inc
test
mov
daa
sbb
cli
sbb
adc
cmpsb
cltd
mov
lea
ret
push
jb
fistl
daa
and
aad
pusha
add
or
jge
inc
sub
jno
sub
push
push
sbb
mov
and
pop
in
ret
push
sub
lret
push
dec
lock
loopne
mov
stos
divl
inc
mov
push
test
push
mov
sbb
movsl
jp
std
repz
jne
imul
fwait
cmpsb
xor
leave
mov
jmp
cld
mov
cmpsl
mov
lods
add
pop
das
cmp
ss
imul
shrl
pop
std
push
notl
or
testb
xchg
orl
sarl
ljmp
pusha
sub
or
ljmp
imul
cmp
std
inc
adc
lea
lds
push
enterw
add
inc
pushf
sub
dec
pop
fcoml
inc
push
cld
cli
xchg
inc
dec
push
shrb
mov
adc
pushf
ficoms
daa
mov
sbb
sbb
mov
sub
ja
push
in
pop
add
mov
pop
cmp
into
icebp
mov
jnp
sbb
adcl
shr
inc
pop
cltd
sbb
inc
jne
adc
mov
out
adc
imul
adc
sbb
mov
fiadds
testb
scas
adc
mov
ljmp
cmp
xchg
sbb
ljmp
int
fildll
idivb
xchg
jmp
inc
mov
pop
int3
xor
pop
pop
in
mov
inc
and
push
enter
test
cmpsb
sub
add
xchg
bound
sub
das
pusha
sub
das
cmp
jle
orb
out
mov
dec
shl
es
jo
xchg
iret
lahf
dec
shlb
mov
fcmovnbe
mov
adc
in
and
std
clc
and
dec
xchg
mov
adc
sbb
and
js
xlat
aam
aad
push
mov
xor
sbbb
mov
aam
pop
fwait
and
add
xchg
add
outsl
xchg
fcmovnbe
push
mov
add
or
bound
cmpsb
mov
out
cwtl
data16
dec
into
lret
roll
outsl
scas
or
sbb
add
xchg
call
lahf
jbe
jle
rorb
iret
fcoms
popa
out
aad
movsl
or
jns
push
movsl
mov
leave
and
mov
loop
out
mov
jo
leave
or
xchg
pushf
je
xacquire
mov
test
mov
sbb
cmp
mov
xor
in
mov
and
pop
adc
insb
ds
sub
pop
or
sbb
xchg
iret
in
std
fnsave
cld
lods
imul
jnp
and
insl
dec
xchg
aas
fdivrs
sub
xchg
ret
fcmove
cmp
lahf
add
fldt
scas
pop
dec
notb
int3
jecxz
mov
fldt
mov
inc
prefetch
andb
sub
std
pop
popa
dec
or
loop
lds
mov
repz
sbb
hlt
pushf
sbb
xchg
adc
rolb
jae
sbb
ret
jne
jl
aam
mov
in
push
sbb
enter
sbb
and
cld
xor
mov
lcall
mov
mov
ja
mov
mov
rcr
dec
push
mov
divb
pop
add
lret
adc
shl
mov
sbb
jmp
push
sub
scas
fdiv
repz
test
lock
sub
out
mov
int
jle
repnz
icebp
mov
mov
sbb
jecxz
inc
inc
popf
testl
repz
and
ret
addr16
pushf
inc
insl
faddl
into
jecxz
rcr
adc
nop
mov
dec
dec
mov
adc
xchg
mov
dec
in
cmp
jecxz
ja
jmp
int
leave
and
xor
dec
inc
shlb
jmp
pop
xchg
sub
pop
pop
dec
subb
lock
xor
inc
sbb
movsb
orb
push
inc
and
or
or
push
into
dec
xchg
pop
xchg
jmp
xor
arpl
cmpsb
fistpll
and
xchg
xor
mov
das
aaa
pop
std
fdivrl
in
les
mov
lret
adc
dec
xchg
inc
or
and
mov
sub
xor
dec
lahf
xchg
xchg
mov
xor
addl
repnz
ljmp
nop
add
dec
aad
je
mov
jae
scas
mov
nop
add
jl
cltd
mov
xor
dec
inc
stc
and
pop
aaa
cmc
ss
lret
cmp
push
fistl
fisubrl
jmp
push
and
add
or
scas
pusha
sbb
pop
pop
ljmp
cmp
icebp
cmp
aam
bnd
jbe
ficompl
pop
nop
add
rorl
rclb
cmpsl
popf
push
imul
das
leave
lds
sub
lds
push
pop
hlt
cli
xor
push
jg
fidivrs
cs
sub
data16
lods
xlat
rcll
mov
imul
add
icebp
cltd
cli
cmp
and
loop
xor
jle
fistpl
xchg
outsl
dec
xchg
subl
xchg
mov
dec
mov
cmp
pop
inc
and
insl
add
imul
pop
test
or
outsl
xor
stc
test
inc
mov
mov
addb
mov
mov
cld
hlt
mov
aaa
sbb
inc
call
mov
enter
stos
ss
jg
pushw
test
adc
in
clc
cld
xchg
sub
push
outsb
dec
daa
mov
push
lret
insl
gs
pop
aad
fdivs
jbe
incl
aad
inc
gs
out
push
sbb
mov
ja
inc
mov
sub
int
mov
dec
push
sub
pushf
adc
inc
movsl
pop
out
cmp
mov
mov
mov
pop
imulb
loop
inc
jo
mov
xor
xchg
push
cmp
cmp
jnp
or
ret
mov
dec
sub
orl
into
pushf
or
sahf
inc
repnz
push
adc
jns
fldt
sbb
aad
or
lcall
mov
shll
add
xchg
insb
push
into
loope
mov
push
loope
add
xchg
stos
or
ret
je
rcrb
outsl
sbb
fcompl
into
sub
das
sub
cmpb
mov
jne
dec
addr16
into
pop
aam
sti
popa
push
or
insb
dec
mov
cmpsb
mov
fisubrs
cmpsl
daa
shrl
sub
dec
ljmp
dec
mov
stc
test
xor
rcl
mov
cmp
fistpl
push
hlt
leave
aad
xchg
xchg
push
pop
xor
jbe
xor
mov
dec
sub
scas
adc
or
arpl
sar
shll
stos
sbb
xchg
shll
mov
or
push
xor
mov
sbb
cmpl
jg
stos
xor
pusha
ret
imul
pop
cld
mul
mov
rol
sbb
pop
xchg
mov
push
mov
push
call
sub
adc
cmp
int3
cmc
cmp
js
jp
cmp
cmpsb
push
add
fwait
adc
cwtl
je
dec
mov
scas
imul
dec
fs
aad
and
xlat
sarl
cmp
mov
into
xchg
adc
cmp
pop
pusha
add
jo
sar
sbb
jns,pt
test
lods
lock
inc
jbe
push
addl
iret
fisttps
in
dec
xor
sub
sarl
stos
mov
fsubrs
inc
jae
sbb
insl
push
test
add
hlt
mov
pop
cltd
xlat
andb
cmp
push
lcall
sub
es
xchg
fcom
pushf
and
jmp
mov
mov
pop
and
fwait
outsb
popa
or
clc
xlat
lock
pop
jnp
inc
mov
jno
sub
mov
sarb
jle
push
sti
jmp
sub
aad
les
pop
sbb
jmp
mov
jnp
xor
test
shrb
hlt
repz
push
mov
pusha
mov
push
mov
xor
xchg
push
aaa
or
movsl
enter
sub
sbb
push
mov
into
pusha
inc
inc
imul
push
inc
addr16
mov
int
and
stos
test
addl
sahf
ja
or
popa
sub
test
cltd
out
mov
fcmovnb
dec
jo
mov
fsubrs
rcr
cmp
push
xor
xor
and
lcall
out
std
or
mov
cs
xchg
lret
push
sub
pop
mov
movsl
aas
divb
packsswb
pop
pop
cld
lahf
pop
mov
jns
cwtl
mov
enter
inc
dec
xchg
and
add
xchg
fisttps
mov
pop
xor
dec
pop
ficoml
subb
pop
insl
clc
cmp
mov
pop
pop
xchg
jecxz
rorb
andl
xor
jg
popa
xor
jno
push
xor
outsb
test
or
in
dec
jne
ret
sbb
sub
sub
cltd
mov
mov
mov
push
shl
addr16
adc
pop
pushf
sub
cld
pop
les
dec
jns
jle
cmp
popa
xor
pop
call
popf
imul
mov
les
or
loopne
mov
fisubrs
add
add
mov
aam
jmp
arpl
in
and
mov
mov
addb
push
sbb
fnstsw
lods
cmp
sbb
bts
iret
call
stos
movsb
fimull
push
pusha
and
in
fs
push
sti
mov
mov
imul
sbb
cmp
dec
mov
dec
ja
mov
jge
jno
arpl
loop
aas
cmp
cmp
add
and
cmp
ja
loopne
lahf
fcmovnu
sbb
ds
ret
pusha
ret
aaa
jno
adc
fistl
xchg
arpl
mov
xor
pop
cli
xor
or
jecxz
mov
sbb
stos
dec
adc
xlat
sub
aad
jbe
cli
inc
leave
div
js
push
mov
mov
mov
lcall
lods
jg
repnz
rcrl
jg
rcrb
cmpsb
xor
push
insb
cmp
cli
call
xchg
xchg
ror
or
jp
push
mov
sbb
incb
insl
add
movl
insb
push
lock
outsb
scas
sub
mov
add
in
dec
sahf
fcompl
ret
in
filds
or
jmp
pop
ret
sarl
clc
pop
cmc
cmc
out
and
cmp
and
mov
jne
movsb
cmp
and
addl
out
sar
mov
iret
jne
fs
pop
add
pop
addb
push
fildll
mov
sbb
mov
xchg
cmp
lea
mov
push
pop
jg
pop
mov
dec
dec
mov
out
and
mov
dec
adc
xchg
imul
cli
xor
ss
pop
sbb
adc
push
dec
mov
sahf
push
inc
data16
inc
in
mov
fnstenv
repnz
adc
aad
pop
xor
rorb
cmpsb
rolb
clc
rclb
jg
clc
cld
movb
repnz
iret
sbb
mov
sbb
lret
pop
repz
add
popa
xorb
pop
adc
mov
jl
insb
add
pop
mov
pop
sub
scas
das
cmp
sahf
sub
mov
cltd
test
into
dec
push
jnp
cmc
fdivrs
and
call
adc
fadds
les
js
sub
pop
hlt
pop
call
pop
push
or
mov
adc
inc
pop
fcoml
repnz
mov
add
push
adc
sbb
shlb
xor
cmc
jle
mov
cwtl
or
lcall
xchg
cmpsl
movsb
push
test
jb
dec
mov
pop
sub
jno
add
xchg
arpl
cmp
les
mov
jmp
lcall
mov
xchg
dec
xor
arpl
out
ljmp
push
mov
push
dec
dec
fnstenv
test
mov
out
pop
jns
and
mov
jns
mov
jbe
mov
mov
jo
mov
inc
mov
div
andb
and
popf
cmp
push
movsl
push
mov
sbb
sub
mov
cmpsl
sub
xor
jnp
inc
pusha
dec
enter
pop
mul
in
fs
and
cwtl
outsb
inc
push
enter
fcomps
mov
stos
popl
arpl
test
or
ljmp
push
ficomps
in
in
leave
and
cmp
leave
shlb
jp
push
push
jbe
pop
mov
daa
mov
or
lods
xchg
push
mov
scas
lods
imul
mov
cld
cmpb
mov
lret
xchg
sbb
adc
pop
xor
push
enter
and
daa
lock
icebp
dec
fisubrl
jo
fs
test
xchg
mov
jg
dec
sbb
pop
push
pop
inc
test
in
std
imull
cmpsl
adc
lock
xchg
xchg
dec
or
xor
sub
xchg
pop
je
push
loope
xlat
add
out
out
stc
test
aam
and
in
pop
repz
pop
add
pop
sbb
inc
cmp
xor
call
orb
push
lcall
fwait
inc
fists
out
mov
les
adc
out
aas
jle
jae
outsl
inc
movsb
mov
sub
mov
pushl
mov
aas
mov
add
sbb
orl
push
inc
mov
call
js
jge
cs
jnp
cmp
and
ss
outsl
and
jne
pop
pop
jg
pop
dec
loopne
jp
push
and
mov
outsb
in
insl
or
fildl
movsb
jg
push
push
add
and
mov
repnz
shll
xor
lds
rcll
hlt
push
insb
mov
xor
mov
cmp
dec
mov
mov
or
cmp
stos
mov
mov
dec
lcall
imul
leave
push
stos
push
in
in
jno
sub
sub
dec
and
and
into
push
les
jmp
and
add
sbb
dec
ficoml
jnp
add
fnsave
cmp
lret
dec
incl
pop
int3
pop
xlat
insb
ja
pop
dec
or
dec
dec
addr16
or
xchg
pop
pop
add
push
xchg
ret
insl
pop
bound
sub
add
pop
scas
stos
std
sub
incb
shrl
dec
pushf
mov
lret
jmp
sub
xchg
pop
inc
ljmp
cmp
pop
push
sbb
jo
gs
std
sub
cli
jle
aaa
and
addr16
imul
je
imul
insb
inc
loopne
mov
cmpsl
nop
aas
lds
add
cli
pop
xchg
mov
rcrl
push
mov
in
test
insb
xchg
sub
mov
xchg
jb
add
dec
aad
sbb
mov
inc
lret
mov
push
sbb
enter
flds
test
or
dec
jns
ret
das
out
ja
dec
dec
pop
sbb
sub
je
les
mov
pop
add
out
mov
pop
adc
adcl
and
je
mov
xlat
out
or
adc
add
rclb
ljmp
sysenter
lcall
arpl
cmpsb
cli
scas
inc
push
enter
stos
adc
jl
cmp
or
cltd
fiadds
inc
stos
shrl
pusha
gs
insb
movsb
push
in
mov
xor
mov
and
lahf
lods
push
jge
dec
cltd
sbb
stos
cmp
mov
negb
scas
add
push
push
add
dec
or
lock
leave
pushf
cmp
loope
out
scas
stos
adc
add
sahf
mov
or
add
stos
mov
cmpsb
mov
or
push
cmp
fstpt
xchg
and
jge
rorb
sub
xchg
out
cmp
jne
and
out
sbb
add
loope
js
mov
mov
scas
and
loop
xlat
lock
inc
xchg
daa
and
rcll
xor
mov
jae
enter
nop
test
and
lds
cmp
repz
fimull
inc
fsubrs
inc
loop
stos
pushf
sahf
add
mov
xor
mov
popa
adc
mov
dec
test
mov
inc
scas
add
jp
add
jns
out
xor
hlt
add
xor
sub
imul
mov
mov
sub
xor
loope
enter
cld
aad
xlat
clc
std
pop
das
repnz
sbb
cmp
cmp
shlb
ds
movsl
push
xor
push
and
in
enter
nop
push
fsubrs
mov
iret
imul
or
mov
add
xor
mov
jne
cmp
mov
fdivrs
hlt
inc
adc
lea
fcompl
test
sub
xchg
dec
stos
add
mov
inc
jmp
add
adc
call
arpl
das
dec
or
fs
xchg
jb
mov
dec
inc
dec
jl
inc
sbb
scas
cmp
adc
inc
dec
icebp
ljmp
sub
les
and
xchg
dec
dec
add
push
popa
fsubrl
jo
test
dec
or
hlt
fimuls
xorb
test
add
movsb
iret
and
sbb
loopne
ror
les
ret
lea
enter
test
xchg
daa
lods
test
cs
subl
push
lods
jecxz
in
push
daa
mov
out
add
shll
out
dec
popf
mov
mov
lret
push
scas
sbb
movsl
nop
leave
sub
or
fmull
orb
sbb
inc
sti
repz
test
jb
pop
fisubs
mov
mov
popf
mov
fistpll
mov
aam
and
jp
setp
and
xchg
lret
mov
jecxz
xchg
out
fistl
sub
jbe
pop
je
inc
int3
imul
mov
outsl
pop
xor
in
xchg
or
adc
test
push
sbb
sub
mov
int
xchg
inc
or
pop
mov
adc
fbld
jb
adc
jle
sub
push
jle
xor
xchg
clc
pop
mov
sbb
cmp
add
push
cmc
cmp
mov
dec
js
adc
mov
mulb
stos
add
add
std
adc
cmp
leave
fcoml
jbe
push
test
sbb
aam
inc
je
or
xor
ss
push
dec
push
push
mov
push
inc
mov
add
lock
mov
repz
nop
xchg
test
xchg
xor
into
pushf
xor
xchg
xlat
test
pop
lock
mov
jl
stos
pop
cmp
int
leave
lahf
dec
dec
mov
xchg
xor
js
cli
enter
sarl
mov
mov
daa
jno
jecxz
and
inc
xchg
push
fisttpl
cmc
mov
lock
mov
or
mov
sub
loope
std
sarb
ret
fdiv
jp
int3
icebp
or
popf
and
lods
sub
imul
sbb
push
pop
pop
lret
push
xor
push
mov
cwtl
scas
pop
in
cltd
adc
sub
insl
mov
xor
jl
js
rcr
into
rcrl
push
leave
inc
jnp
xchg
jl
aaa
aaa
mov
adc
mov
cltd
mov
push
rcll
stc
adc
rorb
inc
std
inc
cmp
cltd
popa
out
sbb
rcl
xchg
xchg
sarl
scas
test
push
out
add
in
push
shrb
jmp
fbld
pop
rol
or
cli
ja
mov
stos
test
stc
dec
xchg
movsl
dec
xorl
hlt
mov
mov
pop
jb
cmp
mov
jae
push
mov
in
xchg
jecxz
pop
fwait
mov
adc
ss
cwtl
jmp
pushf
or
push
popf
mov
pusha
adc
loope
adc
mov
jnp
stos
mov
jnp
inc
pop
sti
out
xchg
and
shl
insl
xor
daa
or
inc
das
test
pop
imul
jno
push
bound
sti
mov
js
call
addb
popf
mov
lds
shlb
or
pop
sti
cld
test
pop
xorl
into
or
sub
and
shrb
mov
leave
cmpsl
mov
jne
or
dec
lods
stc
repz
test
inc
mov
mov
notl
and
xorl
jae
call
jg
cli
pop
mov
adc
lcall
mov
ret
es
jl
psllw
mov
mov
jae
push
in
ljmp
inc
cmp
push
pop
mov
lcall
aaa
xor
mov
aad
ljmp
xchg
xchg
ficompl
outsl
imulb
shlb
inc
in
pop
movsb
or
dec
mov
and
push
xor
popf
xor
xlat
out
mov
mov
jl
mov
push
mov
push
sbb
dec
push
sbb
xor
and
das
loopne
std
sub
sbb
adc
inc
push
iret
out
mov
out
or
jae
mov
fs
fldt
add
sahf
push
pusha
stos
mov
lea
shll
sbb
scas
pop
dec
lods
in
sahf
faddl
xchg
mov
testl
mov
jns
imul
dec
mov
aas
mov
add
cld
jg
neg
int3
push
cmp
mov
hlt
mov
pop
sub
mov
stc
mov
call
lahf
pop
inc
nop
push
leave
stos
sub
addr16
push
enter
ljmp
outsl
xor
fwait
pushf
leave
fsubrs
imul
pop
sbb
imul
xchg
fiadds
lret
jecxz
out
cwtl
ss
xor
cmpsl
xor
es
jnp
ret
jne
stos
sbb
and
adc
sbb
cmp
lcall
mov
in
mov
inc
in
jge,pt
ret
mov
and
repnz
mov
ss
jmp
adc
add
nop
push
dec
dec
lods
jg
pop
popa
xor
and
and
push
xchg
add
das
ud1
and
iret
pushf
mov
add
mov
test
pop
pop
mov
lds
das
mov
test
sbb
rclb
and
bnd
mov
jnp
lcall
sbb
pop
sub
pop
xorb
push
pop
fwait
outsb
cmpsb
lods
test
clc
je
iret
lds
xor
test
call
jle
rcl
xchg
xchg
fisubrs
movsl
loope
in
mov
push
push
dec
dec
ret
mov
sti
xchg
adc
dec
push
inc
sbb
pusha
xchg
clc
jge
aam
push
in
sbb
cltd
xchg
test
adc
mov
aaa
fld
inc
sbb
cmpsb
fiaddl
das
imul
push
pop
jmp
cwtl
test
movsl
add
arpl
aaa
stos
cmp
fwait
idiv
adc
sbb
mov
inc
ret
xchg
mov
sbbb
cmpsl
cmp
or
xchg
xor
fisubl
push
xchg
adc
pop
lcall
jnp
pop
cmpsl
rcrb
repz
pop
imul
stc
shlb
xor
adc
inc
jno
pop
xchg
jnp
clc
jno
mov
inc
ret
pushf
mov
mov
inc
adc
cmp
push
cmpsl
xor
cmc
pop
dec
xchg
push
cwtl
stc
in
into
fadds
icebp
pop
shrb
xchg
clc
cmpb
dec
aas
and
push
js
cwtl
inc
outsb
pop
cmp
test
dec
fwait
sub
xchg
mov
sarl
dec
inc
mov
sub
adc
dec
aad
pop
adc
xchg
cmp
inc
add
das
faddl
xchg
das
int3
pop
xor
inc
ds
fsubrl
pop
icebp
popf
mov
mov
out
jge
std
dec
adc
add
scas
xchg
int3
repz
stos
sub
xor
pop
mov
testb
dec
arpl
jno
xchg
outsl
xchg
popa
lcall
cmpsl
testb
adc
scas
xchg
sub
sbb
fisttpl
into
in
call
data16
inc
out
xchg
push
cmpsl
out
mov
pop
cmp
cmp
xor
jmp
inc
dec
shll
and
jne
sbb
sbb
loop
ss
shrl
lahf
inc
scas
dec
mov
inc
jp
ja
ret
aas
ljmp
xor
es
lods
repz
mov
pop
adc
pop
jle
mov
in
xor
cmpsb
ret
aas
repnz
ja
jb
adcb
jge
loope
add
ljmp
pop
push
add
mov
pop
aaa
xor
loopne
pop
in
and
mov
addr16
fs
stc
out
scas
sub
xor
rcrl
jbe
or
jno
shrb
adc
sti
aas
fcompl
xchg
mov
into
jbe
push
call
jnp
xchg
rcrl
mov
jno
mov
inc
adc
in
sbb
add
insl
fs
dec
cwtl
sub
lcall
sbb
shl
loopne
ljmp
sub
mov
push
fwait
xor
mov
movsb
aad
sbb
xchg
mov
push
xchg
jp
sbb
mov
mov
jg
mov
movsl
mov
xchg
je
insl
push
sub
int3
sub
es
sbb
je
jbe
xor
scas
inc
push
adc
add
rcrb
loope
test
cmpl
jle
sub
mov
in
adc
adc
and
mov
jbe
lret
add
es
scas
sub
or
push
push
pushaw
andl
cld
ds
data16
lret
sbb
push
scas
fisttpl
cli
jb
xor
sahf
mov
push
inc
xor
or
aam
ds
pop
cmp
cwtl
dec
inc
decb
popf
mov
call
imul
imul
outsl
dec
mov
adc
push
mov
push
or
in
lock
frstpm(287
push
cmp
mov
mov
mov
mov
fstps
arpl
sub
jg
adc
cld
out
mov
addr16
push
into
sbb
lret
aas
andb
jg
int3
inc
mov
cmp
jne
xchg
jmp
loop
lret
rorl
enter
rorl
mov
cmpsb
mov
mov
rorb
das
sar
mov
push
in
push
stos
and
lea
jecxz
xchg
les
pop
sahf
push
out
stos
push
addb
imul
pop
mov
inc
repnz
loop
xor
out
pop
xchg
aas
sbb
push
mov
xchg
std
popa
bnd
or
push
int
mov
dec
mov
jmp
mov
xor
icebp
jp
push
decl
dec
addr16
js
push
pop
incb
pop
xchg
mov
add
adc
jle
lds
jno
adc
clc
lcall
add
jmp
xchg
lret
addr16
and
inc
fs
data16
add
mov
mov
lret
or
push
pop
add
adc
in
sub
lock
push
mov
push
adc
lods
mov
mov
lret
sub
jg
ficompl
aas
mov
imul
outsb
dec
lods
fmull
icebp
mov
xchg
mov
addb
and
xchg
arpl
sub
mov
imul
add
je
cmp
mov
adc
xchg
std
lods
or
pop
mov
test
sahf
movsl
test
or
mov
mov
cmc
xor
popa
loopne
ret
rcrl
pop
bound
in
xchg
popa
lahf
xorl
out
pop
loope
xchg
pop
popa
adc
sub
into
ljmp
loop
cmpsb
mov
jp
jno,pn
xchg
xor
lock
inc
xchg
mov
xor
sub
repz
mov
fxch
insl
push
out
das
dec
inc
cmp
jno
shl
lds
outsl
into
mov
mov
or
xor
xchg
icebp
lahf
or
or
ss
rorl
cs
lods
imul
xor
lret
or
jnp
insb
mov
fistps
xor
out
out
mov
jno
cmc
inc
outsb
sbb
pusha
pop
push
and
jbe
mov
push
jbe
test
or
lea
loop
xor
aas
out
mov
mov
testb
into
sub
jp
mov
xchg
scas
and
xorl
fists
repnz
ret
das
jg
aaa
push
subl
mov
ret
lods
addl
dec
inc
fs
fisttpl
cmc
mov
out
mov
inc
cli
sub
lcall
add
lock
push
ja
jle
es
movb
xlat
mov
mov
loopne
cmpsb
add
cwtl
sub
sub
inc
pushl
lods
sbb
sbb
cmpsb
sub
test
mov
outsb
stos
scas
and
mov
mov
hlt
mov
sti
jnp
subl
addl
push
or
hlt
je
cmp
add
cmpsl
xor
add
xor
imul
add
cs
jl
adc
ret
clc
sub
jnp
pop
jle
dec
and
push
mov
pop
jl
cmc
push
jnp
mov
pusha
jle
movsl
cmp
lea
jmp
lods
iret
jno
outsb
rcrb
jb
mulb
out
mov
inc
daa
clc
outsl
rorb
sbb
jb
inc
imul
sbbb
scas
aad
inc
pop
stos
xor
std
insl
mov
fwait
mov
push
mov
sub
addr16
and
xchg
aad
push
out
jl
mov
icebp
cmc
imul
inc
clc
mov
je
and
addl
data16
js
xchg
and
mov
mov
cmp
sbb
nop
in
pop
out
aad
cmp
pop
dec
mov
adc
shl
and
sbb
sbb
sub
mov
push
mov
fidivs
or
mov
cmpl
popa
jg
nop
fistpll
ret
add
shrb
fsubrs
dec
lahf
clc
pop
aas
arpl
inc
adc
push
in
inc
insb
repz
push
xchg
dec
mov
or
leave
inc
and
mov
popa
xchg
divl
test
or
pop
loope
enter
lds
movsl
adc
push
in
lods
jle
xchg
xchg
push
sub
jg
jo
sub
out
jo
loop
rol
xchg
cwtl
in
push
cmpb
and
jle
mov
pop
repnz
stos
and
xor
mov
jge
mov
adcl
in
or
mov
push
test
pop
in
das
inc
out
mov
xor
and
sub
decb
outsb
fmull
fistpll
int
xchg
xchg
add
add
dec
jno
jo
pop
cli
aad
inc
dec
pusha
cmp
push
into
loopne
jmp
xchg
sub
pop
jno
xchg
cmp
sbb
icebp
pop
jg
lret
andb
push
imul
enter
jns
lds
xor
dec
nop
push
and
mov
mov
mov
lcall
test
aam
xchg
ljmp
push
out
xchg
int
test
jo
sbb
cmp
add
cltd
xor
arpl
jmp
popl
or
rcrb
push
repz
fistl
xor
push
lret
inc
pop
ds
pop
pop
push
rclb
js
adc
mov
sti
inc
sbb
sub
cmpsl
ds
and
mov
cld
std
ficoms
orb
das
push
push
fldl
fisubrs
fwait
pop
dec
les
push
fadds
loopne
popf
jle
cld
rorl
dec
push
or
xor
xchg
sahf
in
shl
ljmp
in
test
mov
outsl
repnz
dec
cmpsl
or
xchg
in
and
add
adc
or
clc
and
fbld
push
popf
pop
out
mov
push
cli
adc
sub
test
xor
jle
jle
andb
enter
test
fisttps
mov
cld
dec
pop
mov
icebp
ljmp
jge
and
insl
mov
es
cmp
mov
mov
shll
mov
mov
jecxz
sub
addl
sti
jb
mov
lods
and
push
inc
test
sbb
adc
notb
shlb
fists
or
fcompl
jbe
in
fstpt
in
xor
xor
push
hlt
arpl
xchg
dec
inc
inc
xchg
adc
xchg
in
jnp
mov
mov
push
setb
lea
mov
push
cld
mov
cmpsl
je
mov
or
aad
lods
pop
push
mov
insb
in
adc
xor
adc
push
popf
pop
push
jmp
dec
popa
jb
xchg
enter
adc
cmp
cwtl
push
mov
push
dec
aad
sbb
xchg
dec
cmp
sahf
pop
and
ficomps
bound
mov
xor
out
mov
lcall
push
adcl
test
lcall
mov
push
in
xor
pop
pop
shll
inc
inc
push
enter
fimull
dec
ret
dec
pop
xor
push
loope
fildl
dec
xchg
mov
movsl
es
inc
jnp
out
cmpsl
cmp
rorl
mov
adc
imul
in
mov
lahf
and
ret
or
into
es
cld
nop
icebp
and
imul
inc
adc
or
xlat
repnz
and
repnz
or
int
ds
mov
test
and
arpl
mov
xlat
loop
loopne
mov
loopne
mov
adc
push
pop
adc
test
int
iret
sarl
out
pop
add
or
jbe
pop
mov
mov
and
dec
int
rcll
imul
push
mov
push
jno
and
int
mov
and
dec
and
mov
mov
pop
jecxz
mov
sub
add
test
push
mov
fsts
jmp
jae
pop
lret
dec
rcll
adc
popa
pop
enter
push
repz
leave
jecxz
adc
ret
mov
jecxz
dec
mov
dec
dec
jne
jns
cmp
xchg
addr16
sub
cmp
pop
sub
xchg
fiaddl
cmp
fwait
repz
nop
in
adc
and
out
fisubs
jns
sub
fidivrs
jnp
mov
jno
mov
or
roll
cmpsb
stc
jg
lcall
addr16
xchg
sub
dec
cmp
xchg
jle
jns
jmp
dec
pop
mov
and
adc
test
push
cmp
cmp
sbb
dec
jmp
pop
sbb
jl
add
mov
cwtl
daa
iret
inc
iret
mov
or
mov
cmp
fxch
sbbl
sub
cmp
mov
sbb
or
push
jnp
push
mov
push
mov
movsl
enter
fnstsw
jae
sarb
xor
xchg
xchg
mov
lods
sbb
and
mov
pop
mov
inc
in
ret
push
xchg
and
bound
lods
and
mov
gs
sub
inc
imul
xchg
inc
jns
popf
sub
rorl
adc
sub
ss
jmp
sub
xchg
je
adc
add
xorl
insb
nop
pop
jns
out
inc
aas
cltd
dec
daa
icebp
nop
sbb
fldl
mov
test
mov
mov
push
nop
dec
or
sub
jae
les
sti
dec
inc
cmp
pop
rolb
pushf
es
sbb
das
es
ret
fsubrs
and
dec
mov
mov
shlb
mov
adcl
dec
addl
aad
jno
ficoml
xor
pop
int3
add
lods
mov
sbb
lahf
rcr
icebp
jbe
fadds
jo
rclb
lods
jb
dec
sub
sbb
enter
push
xor
xor
cmp
xchg
jecxz
shlb
ficoms
push
sbb
daa
aaa
push
fdivrl
out
pop
add
and
cmp
lods
imul
pop
roll
jnp,pn
mov
adc
sub
dec
mov
dec
cmp
jg
xchg
add
jmp
movsl
rorb
clc
add
mov
out
test
icebp
lahf
fcompl
and
cmpb
addb
jbe
insl
mov
rcrb
int3
sub
les
mov
dec
mov
xchg
adc
in
mov
dec
movsl
cmpsl
xchg
dec
mov
data16
mov
mov
pop
out
jmp
adc
mov
ret
sub
dec
mov
bound
imul
test
pusha
fs
sub
xor
or
ds
push
pop
gs
scas
insb
lret
push
and
mov
xor
dec
mov
push
xchg
popf
cmc
std
or
push
out
sbb
pop
jmp
sbb
xlat
sbb
pop
mov
mov
inc
repz
and
push
dec
ja
jg
xor
in
pop
xor
or
lds
mov
call
jbe
nop
lea
dec
testb
lds
std
inc
xor
cli
out
fsubr
mov
shrb
jmp
xor
data16
fwait
jl
lods
arpl
jmp
ror
addr16
sahf
icebp
jne
or
adc
ja
insb
ja
int
xlat
shl
shll
shr
fdivrl
xor
scas
sbb
je
push
into
repz
lret
test
pop
jl
xchg
mov
test
mov
xor
sbb
pop
dec
xlat
arpl
push
aam
lea
mov
push
out
jp
inc
std
popa
lods
cmpsl
cld
cmp
es
mov
into
test
adc
lods
sarb
or
jmp
loopne
mov
mull
fimull
hlt
stos
repz
std
xchg
adc
addr16
dec
popa
jmp
stc
pop
cs
stos
lahf
jne
lods
push
dec
popf
sub
lcall
cmc
xchg
rcrb
jbe
pop
bound
mov
pop
jle
ret
lock
mov
xchg
jmp
xorl
mov
mov
mov
rol
mov
rcrl
mov
pop
jmp
vmovlps
inc
cmp
cltd
pop
inc
xchg
adc
mov
out
push
inc
lods
sub
or
insl
mov
imul
cs
push
jb
lods
movsb
outsb
dec
sarl
xchg
cmp
insb
shll
push
xchg
iret
jae
sbb
mov
sub
pushl
popa
cld
mov
mov
inc
push
sub
nop
push
cmpsl
sbb
fisubrl
sbb
stos
mov
bound
fsubs
cs
sbb
aad
adc
shrl
leave
inc
sbb
xor
pop
xchg
ds
stos
sub
mov
xchg
mov
xchg
mov
and
aam
sbb
jmp
cmp
rorb
and
mov
cmpsl
iret
test
inc
add
popf
cmp
les
mov
jl
hlt
adc
imul
lret
stc
or
loope
movsl
lods
mov
inc
xchg
cmp
sub
fstpt
lcall
in
xor
fisubrs
adc
mov
cs
mov
pushf
push
inc
inc
cmpsl
mov
mov
and
pop
int
inc
popl
xor
xchg
jge
and
push
outsb
jo
fmuls
js
cmpb
bound
xchg
push
por
cmpsl
and
sbb
pop
mov
lods
inc
popa
lcall
negl
testb
lods
lahf
jno
xchg
shlb
xchg
xchg
mov
sub
dec
gs
inc
loopne
xor
dec
imul
and
inc
aam
xchg
dec
or
movsl
scas
cmp
and
ret
lods
xorb
xor
rcrl
shlb
or
lock
repnz
xor
lods
jb
insb
xorb
ret
or
push
lods
mov
mov
jbe
xchg
icebp
mov
pop
mov
xchg
lahf
or
and
pop
jl
mov
xlat
ret
push
adc
test
movsb
call
std
aam
idiv
out
mov
mov
pop
mov
mov
sub
push
bound
push
loopne
pop
aaa
mov
mov
jmp
sti
adc
ret
mov
push
adc
pop
push
mov
fcoml
jle
xor
mov
mov
sub
ljmp
xchg
and
or
mov
iret
mov
in
imul
scas
aam
jl
jae
shl
stos
fcoml
inc
jecxz
fwait
adc
cmovo
fistpll
add
and
jg
lods
cwtl
rclb
iret
sbb
cmc
push
aam
adc
shrl
shrl
incl
sub
rolb
cmp
pop
idivb
outsl
inc
push
cli
rorl
loope
cs
dec
inc
cld
sbb
imul
iret
xchg
and
fsts
pop
pop
jne
rol
pop
xchg
movsb
aam
sub
mov
cmpsb
dec
mov
nop
jp
fcoms
inc
dec
roll
pop
or
popa
es
jne
jge
pop
jp
negb
mov
mov
fiadds
push
in
jo
test
mov
and
jecxz
scas
xchg
enter
call
push
ffreep
cmp
ss
xchg
sbb
dec
or
and
push
ds
xor
xchg
and
sub
dec
lret
sub
jb
subb
pinsrw
lds
int
sbb
incb
jno
sub
jp
imul
and
mov
cmp
movsb
fcoml
sub
pop
lock
mov
cltd
cmp
and
fdivr
dec
mov
fnsetpm(287
inc
pop
jne
xchg
sub
fld
fsub
xchg
fcomp
push
mov
bound
fildll
and
pop
rclb
xor
dec
push
adc
mov
and
daa
adc
dec
clc
pop
mov
movsb
mov
lahf
cltd
stos
lea
mov
push
add
xor
aas
inc
jb,pn
jns
dec
test
pop
add
mov
xchg
aad
lahf
sub
push
inc
aaa
rclb
popa
inc
imul
inc
pushf
dec
dec
lret
push
pusha
and
in
popa
sbb
arpl
push
or
popa
or
dec
push
ljmp
sub
lds
fwait
aas
outsb
sub
shr
cs
push
repz
xorl
mov
sub
daa
stc
imul
pop
movsb
addr16
sbb
pop
mov
or
lods
out
mov
inc
xchg
push
cli
add
sub
scas
movsl
fnstsw
push
add
in
ja
dec
js
sahf
mov
je
xchg
lahf
and
int3
dec
call
sti
and
mov
adc
dec
jbe
cwtl
fdiv
aaa
dec
jnp
in
clc
mov
mov
mull
or
loopne
mov
mov
cwtl
arpl
lret
mov
iret
jge
je
xlat
jbe
and
mov
and
xor
jae
movsl
cwtl
in
int3
imul
out
mov
inc
sub
std
movsb
ds
mov
jns
pusha
nop
cld
leave
mov
loopne
outsl
xchg
add
xchg
sbb
lcall
jb
push
cwtl
or
lds
mov
aam
gs
pop
or
or
scas
inc
ds
xchg
repz
jbe
add
test
or
sahf
jb
pop
cmpsl
mov
cmp
pop
mov
cmp
repz
pop
loope
addr16
fld
ds
mov
sub
push
in
pop
mov
xor
inc
in
add
test
add
and
jg
mov
int3
test
cltd
xchg
frstor
jns
xor
out
push
adc
pop
xor
aas
dec
outsb
outsb
sub
or
dec
pop
push
xor
jge
movsb
out
into
daa
mov
shrb
sbb
sub
js
cmp
outsb
adc
jne
imull
loopne
jno
fldcw
push
jge
std
sti
mov
push
out
xchg
loop
xchg
pop
dec
lret
loopne
rorl
enter
hlt
fidivl
sub
fdivrp
dec
mov
lea
push
pop
mov
mov
pop
or
add
or
ss
mov
mov
sub
mov
lds
or
xor
sti
ret
sbb
fidivrl
jbe
mov
inc
jne
push
mov
and
testb
mov
fadds
rcrb
mov
sub
ss
or
fnstsw
clc
and
stos
push
adc
test
int3
dec
cmp
xchg
out
jp
inc
pop
pop
xor
in
pop
lock
mov
xor
cmp
aad
daa
or
leave
aam
cmpsb
jnp
lods
clc
dec
push
xchg
and
testl
inc
xchg
loope
cmpsl
and
dec
cmp
and
in
adc
inc
push
addb
cld
and
mov
sahf
hlt
jecxz
pop
xchg
lock
inc
push
and
jle
and
cmp
sub
test
and
in
cmp
dec
or
repz
in
mov
fisubrs
mov
in
pusha
jle
dec
xor
ljmp
fdivs
inc
mov
stos
repz
mov
push
das
out
lds
fwait
cmp
movsl
test
pop
add
xchg
jnp
push
dec
repz
sub
inc
outsl
cs
sbbb
adc
fistps
push
pop
jecxz
push
cltd
jecxz
mov
imul
mov
mov
aaa
lcall
sub
es
inc
jmp
mov
repz
sbb
mov
mov
lods
add
push
fsts
xchg
aaa
dec
outsl
push
jle
jmp
test
arpl
dec
jo
lret
sbb
add
jge
int3
dec
inc
addr16
je
leave
or
push
popa
jge
pop
lea
orb
mov
into
mov
xlat
aas
push
inc
push
cmpsb
sub
sbb
and
cmp
stos
mov
mov
mov
mov
pop
inc
pop
mov
clc
arpl
cmpsb
jne
push
ds
sti
xor
xchg
ja
adc
jns
insl
adc
adc
push
jg
adc
lods
cs
lret
add
data16
jb
jp
sub
adc
pop
adc
mov
or
arpl
mov
dec
pusha
arpl
xlat
movsl
ret
negl
mov
sub
and
jnp
mov
and
adcl
testb
sub
hlt
lock
mov
popf
iret
sarb
mov
push
pop
dec
fbld
imul
jecxz
enter
cmp
popa
popf
or
mov
daa
iret
mov
xor
movsl
rolb
or
and
gs
push
out
adc
jb
jecxz
popf
sti
mov
cwtl
adc
fadds
xchg
cmp
mov
push
sbb
push
imul
es
rclb
mov
adc
dec
imul
roll
pop
call
inc
shrl
inc
cmc
roll
xor
pop
mov
adc
ja
and
out
xchg
mov
les
or
dec
test
or
cmc
mov
xchg
mov
add
std
adc
xchg
mov
mov
jmp
mov
jg
push
iret
mov
push
addr16
out
outsl
push
mov
ret
or
shll
pop
ljmp
test
ret
test
minps
cmpsb
mov
push
push
dec
aam
inc
sbb
lret
loope
mov
xchg
and
inc
inc
push
movb
inc
push
mov
pop
jle
mov
andl
sub
lea
add
ja
pop
xor
outsb
jp
jmp
pop
push
and
push
pop
dec
call
pop
lods
adc
rcl
cmp
imul
sahf
adc
aad
mov
push
dec
and
jl
outsl
outsb
adc
pop
fistl
movsb
inc
int
mov
and
mov
shr
jno
ret
inc
push
cmp
push
push
loopne
or
in
enter
incl
lret
push
leave
movsl
out
adc
addr16
imul
scas
jge
movsb
cwtl
sub
jmp
pop
sub
pop
fldcw
mov
jle
data16
pop
push
jb
stc
and
and
rcll
cmp
inc
mov
sbb
mov
loope
adc
jno
stc
mov
jl
push
andl
push
insl
jg
lahf
lahf
fidivrs
adc
shufps
sahf
sarb
lea
push
and
lds
jl
and
stos
push
test
sub
les
adc
cmp
xlat
aam
push
or
jns
mov
xor
inc
int
add
cmp
cmp
dec
call
dec
and
daa
gs
xor
push
push
in
dec
sbb
pop
or
adc
int
mov
cmpsl
and
fs
dec
lods
jbe
inc
add
cmp
inc
xchg
mov
dec
jmp
xor
push
or
in
cmp
loope
cmp
addb
sub
adc
jp
inc
icebp
mov
pop
loopne
das
fdivrl
jecxz
inc
and
pop
mov
shrl
sahf
mov
cs
dec
adc
dec
and
ficomps
movsb
sub
imul
mov
jp
imul
stc
or
bsf
loope
mov
mov
daa
or
and
inc
jecxz
xor
or
movsl
divl
push
dec
sub
mov
fwait
lods
sub
je
push
mov
loope
je
mov
jo
cmpsl
fxch
adc
sub
push
xchg
leave
test
loope
ficoms
push
mov
sahf
ljmp
mov
lock
mov
in
out
sahf
mov
pop
hlt
or
xchg
inc
dec
pusha
and
cmp
mov
and
or
jb
fcomi
scas
cli
loope
in
movsl
xor
insb
addr16
and
pop
push
push
in
scas
nop
mov
stos
sti
std
adc
pop
pusha
divb
pop
fnstsw
imul
cwtl
pop
mov
repnz
cmp
xor
es
imul
xor
jnp
lock
imul
dec
mov
pusha
and
cmp
idivl
add
push
loop
adc
pop
xor
push
loopne
push
cli
adc
xchg
cmp
push
repz
inc
cltd
sbb
sbb
stos
inc
je
pop
lea
cmp
pushf
xor
scas
sahf
mov
and
jp
add
cmpsl
daa
add
int3
cmp
rcr
push
stos
cmp
pop
cmp
adc
in
imul
sub
mov
stc
mov
bound
clc
js
xor
inc
or
bound
push
js
lret
inc
lds
pop
mov
dec
push
fcomps
jae
sbb
mov
push
cltd
add
imul
and
scas
push
cmp
test
test
cli
sbb
jae
dec
stos
xchg
cli
jmp
insb
in
xor
xchg
inc
pop
mov
stos
adc
ss
push
std
sbb
fstpl
add
sbb
mov
push
sub
out
aam
and
xor
adc
push
neg
ret
loope
push
sub
or
xchg
mov
push
ljmp
inc
pop
mov
fmuls
scas
rol
les
loope
icebp
pop
or
fisubl
add
lcall
daa
sub
aad
mov
fsubr
jno
xchg
in
imul
pop
inc
movsb
inc
cmpsb
pop
mov
cs
scas
pop
cmp
ret
mov
dec
test
ja
inc
cwtl
popa
mov
dec
scas
pushf
ret
sbb
jb
lahf
mov
mov
ret
xchg
aam
adc
xorb
push
ds
movl
lret
add
je
push
mov
maskmovq
divl
fucomip
dec
insl
dec
xchg
push
loop
rcl
pushf
sub
pop
jmp
cmp
inc
std
jle
xchg
das
imul
pusha
cwtl
xor
rcll
loope
push
push
jno
or
xchg
test
jno
insb
int3
ret
lcall
or
aad
add
js
push
fstp
adc
push
out
push
cmp
outsb
sbb
loopne
push
stos
mov
mov
xor
cmp
sar
sbb
xlat
mov
inc
mov
enter
or
push
int
ret
out
cmc
adc
pop
int3
mov
mov
dec
nop
leave
jp
fwait
es
sbb
out
xchg
add
loop
fsubrl
ficomps
lcall
popa
incl
stos
and
fsts
push
mov
mov
clc
sub
loopne
xchg
xchg
cwtl
cltd
adc
push
es
test
mov
into
pusha
mov
push
lea
fwait
cs
fnstsw
inc
and
pop
sbb
ja
or
sub
lcall
popa
nop
stos
dec
test
xchg
sub
lods
jl
fistl
push
out
popa
loop
push
icebp
icebp
cmpsl
xor
or
fisubrs
into
inc
test
sub
sbb
cs
les
mov
jge
mov
pushl
pop
test
movsl
leave
sbb
xor
adc
add
in
mov
or
sbb
popa
and
jae
add
pop
or
fmull
push
jnp
sub
cmp
mov
or
xchg
leave
lcall
xchg
adc
scas
cld
sbb
loop
mov
sub
adc
movsl
aaa
loope
inc
mov
lods
inc
add
dec
cmp
pushf
daa
pushf
mov
jmp
imul
lock
out
test
dec
and
sub
lea
jae
xlat
mov
ljmp
add
dec
inc
mov
daa
ret
mov
jbe
xchg
ret
jl
pop
scas
std
pop
push
iret
imul
sbb
add
lcall
loop
mov
adc
fstpt
ja
mov
lret
inc
and
aaa
sbb
in
cmp
adcb
fstpt
fsub
mov
inc
repz
push
adc
jo
push
xchg
loope
mov
sti
lock
and
mov
xor
sub
jae
sbb
mov
lock
mov
rclb
fsubs
pop
es
leave
hlt
jge
hlt
imul
xchg
bound
loopne
dec
loope
arpl
fs
stos
in
cmp
pop
jb
shlb
addr16
or
sub
pop
leave
call
xor
cld
out
push
aam
mull
cltd
rcrl
jecxz
nop
sbb
mov
sbb
push
lods
inc
fwait
int
cmpb
mov
xchg
jl
sub
xchg
mov
jle
ss
jbe
mov
inc
inc
push
cld
push
dec
and
inc
je
mov
sahf
xchg
sbb
rcll
inc
dec
leave
mov
std
movsb
ret
das
aad
inc
int
in
dec
mov
cmc
insl
inc
mov
aam
jne
int
xor
push
aas
fisubrs
out
fwait
xor
xchg
nop
roll
push
dec
sar
sbb
xchg
jae
mov
xchg
les
loop
jle
es
add
jmp
test
lods
stc
je
subb
xor
ret
pop
sbb
divl
btr
addl
call
inc
or
aas
nop
jle
dec
fdivrs
mov
jmp
mov
mov
nop
stos
dec
outsl
xchg
mov
add
stos
mov
std
pop
sub
fsubs
ss
pop
fwait
xchg
jb
sbb
mov
sub
sbb
fstl
sub
in
sub
pop
cmp
int3
add
lods
mov
movsb
and
lcall
jmp
inc
jnp
lods
push
push
mov
in
ret
sub
pop
jnp
xchg
xor
pop
aaa
jmp
sbb
ja
cmc
cmp
push
jmp
iret
dec
pop
cli
or
jmp
mov
jns
ficoms
mov
cmp
xor
fidivl
dec
stos
sti
mov
pop
pop
sarl
in
fbstp
data16
int3
pushf
lock
stos
mov
jmp
sub
pop
dec
lea
push
lret
les
cltd
dec
sub
jg
push
mov
addr16
cwtl
stos
imul
xchg
mov
mov
bound
jb
mov
lea
push
aam
wbinvd
add
push
push
pop
shrb
lods
rol
pop
in
xor
inc
mov
les
xchg
je
or
add
adc
fadds
aam
lret
and
cmp
in
jae
or
pop
xchg
jbe
icebp
pop
test
dec
imull
xchg
xor
rclb
xor
out
popa
adc
test
xchg
dec
mov
test
jge
int3
add
loop
dec
les
mov
iret
leave
mov
aam
xor
jnp
mov
cli
mov
jb
bound
push
adcl
sub
and
push
cwtl
xorl
sbb
jle
ficompl
rcl
xor
mov
popl
jnp,pt
mov
cmpsl
inc
or
scas
mov
fildl
in
aad
adc
mov
rorb
stc
mov
es
ffree
push
push
stos
arpl
mov
jmp
xor
jg
jmp
icebp
cs
ja
mov
mov
cmp
mov
test
add
xchg
pop
push
cmp
and
hlt
sti
xor
cmpsl
cmp
ret
sarb
imul
or
out
jbe
into
cmc
fbld
test
in
test
add
idivl
add
lods
sub
dec
xchg
mov
jmp
into
mov
in
inc
push
cltd
jecxz
insb
jno
push
into
lea
jmp
das
add
sbb
les
jle
add
and
cmpl
jle
mov
jl
popa
fadds
fs
imul
or
push
mov
cmpsl
les
nop
xchg
movsl
or
aas
movsl
inc
sub
ret
cs
push
fcmovnb
popa
test
push
scas
lahf
mov
push
mov
jg
or
or
addr16
xor
cmp
test
xchg
call
pusha
xchg
pop
icebp
push
cmp
cmpsb
xchg
mov
push
xor
lret
inc
out
je
mov
popf
jle
adc
xor
pop
dec
insl
ret
mov
inc
sub
repz
fs
daa
jno
add
mov
clc
xchg
cmp
call
cmp
jge
fs
sbb
insb
lods
push
cs
ja
mov
jge
cmpsb
sarl
add
cmp
mov
mov
and
xchg
test
push
adc
jecxz
xchg
xchg
cltd
push
or
inc
loopne
mov
push
std
out
pop
fcoml
sahf
inc
or
sbb
rorb
hlt
into
and
jbe
fidivrl
mov
enter
addl
cmp
fcompl
pusha
das
push
inc
outsl
cld
test
adc
outsl
fs
add
lahf
jo
adc
dec
and
fcompl
mov
repnz
lret
cld
out
fcomi
test
ret
cmp
ret
pop
lea
push
mulb
lods
adc
es
outsl
inc
xor
out
leave
xor
bound
hlt
jbe
fwait
int3
cmp
mov
or
shr
dec
adc
jge
std
out
aam
sbb
repnz
dec
out
cmp
mov
jnp
mov
mov
mov
movsl
movsl
mov
data16
mov
mov
sub
and
rcrl
jmp
sub
pop
notl
dec
adc
adc
fildl
sub
mov
xchg
mov
xor
pushf
and
push
fstpt
js
xor
repnz
jl
fidivs
pop
int
mov
sbb
into
sub
stos
mov
jge
add
lds
inc
aad
sbbl
sbb
rol
cmp
enter
mov
orb
jno
sbb
and
or
pop
fbld
inc
movl
mov
cli
jae
mov
push
cmp
hlt
je
test
std
mov
jnp
pop
loope
mov
jnp
sbb
jp
lret
cmp
sbbb
jp
cli
int
xor
je
lret
cmp
mov
xchg
shlb
pop
cmp
sbb
cmp
mov
imul
fdivr
xor
sbb
cmp
dec
push
adc
add
cmpsl
push
cmp
inc
cmp
test
lea
jecxz
rorb
cmpsl
nop
popa
mov
jbe
sbb
mov
roll
clc
pop
sub
out
daa
mov
hlt
xor
pop
mov
ljmp
inc
mov
inc
mov
scas
lds
push
cmpsl
inc
into
repz
cld
setle
insb
pop
les
stos
dec
jecxz
pop
gs
rcrl
pop
bound
mov
idivl
mov
xchg
sti
pop
movsl
pop
ret
jp
jmp
push
into
jb
or
xor
out
or
mov
repz
pop
test
dec
mov
mov
addr16
std
xor
add
iret
push
ss
imul
mov
in
add
adc
test
and
cmp
inc
cltd
outsb
cs
dec
ret
movsl
xchg
testl
add
in
or
test
mov
inc
in
clc
call
shrb
cltd
je
mov
jle
ret
out
pop
jg
jae
push
add
xchg
cmp
mov
xor
mov
loopne
sub
sbb
push
fimuls
push
shr
and
cs
push
sub
inc
and
rol
mov
shl
stos
pop
cmpsb
inc
or
test
mov
mov
addl
fcmovbe
lret
sahf
add
popa
lds
vmovmskps
aaa
lds
jno
out
inc
cmp
out
mov
mov
cld
jae
inc
test
test
nop
mov
jmp
xchg
xorb
movsl
xchg
and
mov
mov
adcl
adc
ret
pop
xchg
inc
das
subb
popf
loope
and
add
clc
sub
pop
dec
jl
mov
stos
cmp
xchg
mov
cltd
fdiv
repnz
negb
hlt
mov
daa
daa
test
daa
sbb
cmp
mov
mov
aam
inc
add
mov
pop
push
or
push
add
cmpsb
cltd
adc
or
cmp
scas
mov
into
ror
test
jle
cmp
jns
sub
sub
jns
dec
gs
mov
scas
push
dec
jae
pop
jg
mov
fwait
rorl
xchg
inc
enter
sbb
test
sub
cmp
mov
jp
inc
popf
lods
call
jl
jo
sbb
add
in
notl
mov
fdivrl
scas
out
sbb
or
aam
and
cmpsl
dec
stc
dec
sti
cmpsb
push
cmpl
jl
jg
stos
mov
dec
pop
ja
lds
mov
popa
cmpb
aas
pop
xchg
jbe
ret
inc
mov
dec
xchg
bound
lods
pusha
adc
mov
sbb
add
lcall
pushf
inc
push
sti
mov
sbb
outsb
mov
sbb
aad
pop
sar
jmp
push
pusha
mov
or
out
add
push
jb
inc
jns
xlat
scas
clc
cmp
mov
sub
aaa
addr16
loop
push
push
mov
inc
subb
fcmovb
call
movups
test
mov
loop
mov
pop
mov
in
dec
or
mov
in
mov
mov
dec
sbb
add
mov
dec
cs
es
gs
mov
mov
pushf
into
jae
insb
add
faddl
or
pop
lods
lods
inc
lahf
inc
push
enter
and
clc
cmc
and
push
aad
rol
pop
xchg
xchg
jnp
sti
inc
adc
xor
push
movsl
stos
xor
cmp
jne
pop
jge
aam
mov
mov
arpl
inc
and
and
std
cmp
ja
loopne
mov
jb
scas
mov
fisttpl
pushf
pushf
pop
dec
movsb
leave
inc
push
flds
adc
mov
sar
cmp
popf
xor
sub
insl
mov
scas
dec
dec
nop
pop
orb
mov
js
je
lret
mov
loope
repz
fldt
lret
inc
sub
jmp
push
std
sub
mov
sbbl
inc
test
mov
call
ja
outsl
jno
shl
and
push
jne
add
scas
and
cmp
add
inc
lret
or
push
push
jp
cmp
faddl
cwtl
mov
add
test
dec
sub
xchg
loopne
aam
mov
mov
lret
sub
test
and
fldcw
cmpsl
fistps
dec
add
pushf
adc
and
pushf
shrb
es
push
imul
in
inc
push
cmc
adc
mov
fprem1
bound
in
ja
lods
sub
add
hlt
jo
bound
dec
loopne
push
xacquire
jmp
clc
fisubl
sahf
and
add
dec
or
cvtpi2ps
jb
fcompl
cmc
xor
push
dec
pop
cs
jmp
inc
lds
cmpb
rcll
adc
jnp
pop
sub
xchg
les
cld
jnp
add
imul
sbb
fbld
sahf
adc
cld
sbb
mov
fldl
mov
ret
xchg
jmp
cmpsl
pop
pop
and
iret
adc
shlb
pop
cld
inc
adc
xchg
mov
pop
cld
gs
and
outsb
cs
and
dec
sub
inc
or
mov
incb
lcall
jne
lock
pop
or
push
sbb
icebp
loopne
outsb
enter
cltd
insb
call
jae
outsl
and
cs
cmp
or
test
and
jl
cwtl
add
add
dec
xchg
pop
sub
les
dec
arpl
add
mov
je
sub
jnp
orl
push
aaa
iret
imul
sbb
outsb
mov
in
lret
mov
jb
dec
push
add
push
mov
cwtl
cltd
rcl
in
pop
mov
mov
mov
gs
adc
pop
hlt
lahf
push
jle
mov
jmp
mov
paddusw
mov
adc
and
punpcklbw
push
adc
mov
mov
inc
add
push
sub
jl
xchg
jo
xor
push
stos
enter
call
dec
xlat
sarb
rclb
in
add
fbld
cmp
mov
push
mov
pop
insb
imul
pop
imul
fidivrs
sbb
shrl
arpl
adc
sti
push
xor
push
lret
stos
movsb
data16
pop
xor
push
imul
dec
or
je
aaa
mov
adc
loop
cmp
pop
inc
sbb
data16
ljmp
push
enter
pop
out
xchg
iret
sbb
rorb
rorl
cmpsl
das
aas
fsubrs
sarl
pop
lret
dec
xlat
xchg
cmp
pop
sub
call
loopne
sub
pop
pusha
mov
popf
pop
out
inc
dec
xchg
mov
push
xor
mov
stos
mov
xchg
inc
mov
loopne
jne
add
push
mov
test
mov
lods
in
mov
jne
inc
jge
mov
fimull
incb
std
fidivrs
ret
inc
sbb
outsl
flds
jae
and
cs
pop
cmp
xchg
addl
aad
pop
fisttps
fs
mov
ror
sub
adc
mov
scas
pop
dec
xchg
pusha
pop
push
mov
cmp
or
jo
xlat
xchg
and
xor
dec
push
ds
mov
pop
xor
pop
cs
icebp
mov
add
repnz
call
adc
leave
xchg
rolb
arpl
clc
jns,pt
sbb
push
lock
push
clc
int3
jp
mov
xchg
ss
repnz
mov
ss
inc
dec
jle
push
inc
push
xchg
and
xchg
sbb
movsl
cmpsl
punpckhdq
push
aas
lds
popa
lods
scas
jp
cmpsl
or
cld
sbb
rcrb
retw
in
addr16
sub
test
hlt
mov
into
dec
sub
add
test
into
mov
mov
popa
les
sbb
lock
mov
filds
scas
insb
das
xor
ljmp
roll
idiv
xchg
stc
mov
push
in
pushf
mov
xor
jl
loop,pt
mov
sbb
and
mov
movsb
xor
xchg
mov
sub
imul
dec
inc
sti
adc
cmp
and
sub
sbb
sub
sub
scas
push
sub
xchg
nop/reserved
push
lock
jno
jge
or
out
push
cwtl
xor
and
imul
add
leave
or
add
add
or
les
loopne
push
std
movsb
int
add
icebp
sbb
xchg
inc
pop
out
push
sub
sub
pushf
mov
jl
lods
popa
cmc
dec
pop
lcall
pop
ret
out
loopne
stos
fsub
test
ret
jbe
mov
xlat
xchg
push
pop
cmp
pop
lds
daa
ret
add
jns
shll
sbb
xchg
inc
pushl
mov
xchg
mov
into
push
shll
cli
pop
mov
imul
cmp
pushf
jo
and
mov
sarl
nop
xchg
cmpsb
sbb
sbb
adc
xchg
ljmp
jmp
push
mov
jle
iret
iret
popa
xchg
jbe
icebp
mov
ljmp
shl
cld
jbe
pop
adcb
pextrw
jbe
es
pop
jge
xchg
mov
or
mov
cmc
sub
inc
xor
sbb
in
xlat
repnz
add
cwtl
sbb
test
sbb
jno
pop
mov
pop
pop
ret
test
rcr
xchg
aas
add
out
insl
cmpsl
mov
adc
xor
lahf
sub
sbb
callw
icebp
push
hlt
mov
movsl
mov
or
mov
cmp
inc
lret
idivl
push
and
call
sahf
inc
push
cmpsl
mov
jecxz
sbb
pushf
and
jg
lea
xchg
and
cld
jae
mov
gs
in
push
and
dec
pop
dec
cwtl
rcrl
pop
loop
pop
xor
cli
fs
xchg
cld
sub
mov
lahf
cmp
adc
jno
dec
test
mov
mov
inc
mov
pop
aad
cmp
outsb
shrd
scas
and
sbb
pop
lea
mov
scas
sbb
xchg
cmp
addr16
mov
or
cmpsl
push
sbb
pop
test
ret
cmp
inc
test
lds
push
xchg
ret
lds
or
nop
cmpsb
punpckldq
add
adc
fistps
add
rorl
pop
cmp
inc
imulb
loopne
ja
loope
sahf
test
not
xor
mov
cmp
in
jbe
or
ret
shlb
aas
mov
lret
jae
sbb
jo
inc
incl
mov
fiadds
pop
inc
lds
sbb
mov
out
xchg
stos
test
sbb
cmp
cmp
pop
cmp
sub
in
adc
cmc
cwtl
lds
and
shlb
pop
xchg
or
push
lock
cltd
adc
xor
mov
rcr
in
jne
push
aas
insb
outsb
lods
jge
mov
jnp
ja
or
mov
adc
sub
fcmovu
mov
jbe
or
sarb
imul
dec
add
inc
sbb
in
add
rcrl
int3
push
inc
fs
cli
cltd
adc
popf
push
int3
incl
movsl
outsb
dec
out
xchg
cli
sahf
cmpb
stos
jne
js
push
mov
or
add
mov
jmp
pusha
push
xchg
cmp
jle
das
pop
pop
or
cwtl
out
sbb
inc
loop
xor
push
movsl
mov
and
cmp
mov
jno
jp
adc
divb
push
mov
jmp
push
sbb
cmp
pop
test
jo
and
xor
gs
lcall
or
paddsb
push
pop
cld
mov
mov
mulb
fistpll
imul
je
xor
cmpsl
mov
or
hlt
jne
xor
stos
mov
outsl
int3
lret
lea
adc
push
rcrb
loope
cmpsl
mov
sub
roll
cli
out
aaa
cmp
mov
in
lock
sbb
sub
mov
mov
in
push
sub
pushf
movsb
push
adc
mov
outsl
jnp
mov
call
pop
fisubs
or
imul
pop
sbb
sub
xchg
mov
rolb
fcompl
mov
test
push
stos
xlat
push
jle
push
sarb
scas
push
xchg
adc
mov
xchg
das
inc
cmp
out
aad
inc
mov
rcrb
jg
es
mov
xchg
frstor
mov
data16
jg
mov
pop
loop
test
adc
divl
xor
leave
xchg
jb
sub
sub
fldenv
das
dec
out
ss
divb
xchg
jae
sbb
push
ss
xlat
rclb
iret
loop
stos
lcall
pop
mov
xchg
popa
push
icebp
loope
push
cmp
pop
decl
test
pop
loopne
mov
stos
mov
nop
push
xchg
dec
scas
pop
pop
ficoms
ss
jne
mov
gs
xor
filds
mov
mov
popf
enter
dec
in
fwait
jae
cli
or
mov
out
inc
xor
les
call
sub
aam
xor
xchg
fstps
jno,pn
aas
sti
xor
imull
inc
lcall
movl
cmpxchg
add
test
and
hlt
ja
push
aaa
pop
and
xchg
fldt
mov
push
fmull
loope
add
mov
repz
int
adcl
cs
in
xor
inc
fs
jge
mov
mov
fsubl
cmp
mov
addr16
stos
test
dec
jmp
mov
sahf
cmp
mov
push
inc
cld
jb
push
imul
push
leave
sub
push
push
cmc
mov
lea
adc
fwait
repnz
aaa
in
into
fs
jne
fcoms
out
jle
fidivl
std
out
fscale
dec
mov
pop
aad
sub
push
test
mov
add
arpl
sub
cld
adc
int3
scas
dec
in
or
dec
cmpb
fisubl
lock
cmpsl
pop
sbb
fnstcw
mov
lds
sbb
insb
sbb
test
sbb
rcrb
pop
cwtl
or
xchg
cli
push
scas
or
les
mov
sbb
inc
pop
mov
jmp
pop
dec
mov
sub
cmp
xchg
sbb
loopne
gs
icebp
fstpl
or
sbb
rorl
pop
cmpsb
dec
and
jne
xor
sti
fidivs
aas
sub
pop
push
add
movsl
into
sub
sub
xlat
test
andl
push
call
rolb
les
sub
jns
sbb
pushf
fidivrs
jo
in
pop
imul
and
cmpsl
inc
cmp
xor
jno
push
scas
subl
js
lret
add
and
cltd
ljmp
sub
push
push
mov
cwtl
movsb
int3
mov
out
push
add
scas
je
cmp
fwait
mov
mov
mov
add
pop
sbb
add
add
jmp
sub
fldln2
mov
idivb
pop
inc
cmpsl
test
push
shlb
lahf
loope
mov
xor
pop
clc
in
clc
sbb
sub
aad
cmp
shlb
dec
fcomi
insb
ss
test
jmp
push
data16
pop
sahf
ret
jp
inc
pusha
jge
movsb
movaps
ljmp
or
xor
push
call
sub
mov
xchg
mov
popf
push
jmp
nopl
adc
cmp
xor
sub
push
mov
mov
or
nop
mov
ds
cmp
sbb
dec
xchg
xchg
int3
fidivs
jp
cltd
test
ds
and
xor
ss
nop
mov
xchg
scas
in
xchg
sbb
divb
push
ds
or
pusha
je
push
xor
or
lret
iret
xchg
rorl
add
xchg
js
cmp
insl
cld
pop
insl
and
pop
sbb
push
cmp
add
fsubl
jecxz
hlt
adc
jae
int3
aad
enter
lcall
ljmp
push
sbb
fldenv
mov
fdivl
pop
mov
in
rorb
les
int
jge
xchg
int3
xor
imul
push
aas
cmp
dec
repnz
cwtl
dec
insl
xchg
orl
push
popf
popa
adc
cmp
xor
push
mov
dec
cmp
mov
jbe
les
rolb
test
sub
xchg
or
cmp
jae
sub
jecxz
sarb
outsl
addr16
insl
scas
mov
scas
lods
cmp
xchg
repz
test
xchg
subb
pop
icebp
cmp
xchg
insb
aas
mov
repz
mov
push
xchg
cs
mov
cmpl
lock
aas
xchg
mov
dec
push
scas
xor
pop
loopne
jp
popf
add
mov
aaa
popf
in
adc
xchg
sbb
loopne
jecxz
mov
lods
pop
cmc
mov
inc
mov
adc
xchg
xor
xor
pop
inc
push
jno
hlt
mov
dec
into
pushf
xchg
lret
fdivrs
shlb
neg
pop
data16
pop
jae
std
mov
mov
xchg
out
or
jne
xchg
mov
cmpsl
sub
adcl
inc
out
ss
lcall
lcall
dec
popf
cmp
push
adc
dec
outsl
insl
adc
jge
out
mov
jne
inc
stos
jmp
cmp
or
lds
lock
stos
pop
or
pop
mov
dec
jns
test
pop
cltd
test
lret
xor
ss
arpl
jge
hlt
out
adc
xchg
jge
push
xchg
pop
ds
lods
mov
mov
pop
test
cli
aad
jecxz
dec
cmp
xor
sbb
push
subl
scas
push
adc
lods
sub
pop
lret
adc
fsubl
xchg
cmp
arpl
outsl
je
test
inc
fwait
adc
dec
xchg
cs
dec
cltd
sbb
jb
dec
leave
add
cmpsb
mov
xor
imul
sub
inc
push
nop
mov
jle
dec
mov
orl
push
or
xchg
divb
mov
sub
push
imul
push
mov
scas
push
lret
das
mov
mov
gs
dec
pop
mov
imul
insl
sbb
loopne
and
add
rorb
or
movsb
cmp
push
jp
inc
sti
cli
shll
cmp
mov
sbb
daa
jo
adc
jae
dec
sbb
loop
clc
icebp
add
inc
xor
shll
fidivs
adc
leave
and
shlb
inc
push
pop
iret
into
cmp
lret
ja
scas
ds
ret
test
out
out
xor
and
dec
pushf
cmp
adc
stos
jp
movsl
add
in
test
aaa
mov
xchg
or
inc
xchg
mov
jecxz
lret
dec
jb
fistps
sbb
ds
cmp
fisubs
fs
test
add
jbe
cli
xor
sbb
fldenv
add
fldl
pop
push
mov
data16
ret
loop
dec
add
fst
pushl
ret
mov
pop
dec
stos
lds
and
push
sub
and
mov
ja
jns
jo
subb
jne
push
int
mov
stos
and
loope
push
ja
cmp
fnsave
lods
or
mov
js
sbb
pop
jns
ja
mov
dec
in
or
ja
call
xchg
dec
inc
jno
sub
mov
adc
xor
pop
and
lds
rol
jno
adc
ret
in
int
or
add
fiaddl
cmpsl
add
xchg
imul
jl
dec
rcl
lds
pop
fistpll
pop
mov
adc
dec
sbb
ljmp
outsb
push
and
popa
mov
adc
dec
fcos
fimull
sub
push
fadd
pop
ja
cmpsl
repz
arpl
lret
xchg
and
test
jno
mov
lret
push
push
jl
into
or
push
movsb
or
mov
jp
sub
in
and
mov
add
xorl
mov
lods
mov
dec
xlat
inc
cli
or
sbb
insb
pop
lods
pop
xor
cld
jb
in
sub
nop
das
cmp
push
pushf
and
adc
dec
adc
dec
mov
sbb
bound
or
cmp
xchg
insl
mov
shrl
test
push
ss
cmp
sbb
das
push
add
rcrb
pop
xchg
in
aad
xor
fdivrs
divl
scas
dec
sub
repz
or
jle
mov
ret
pop
jnp
sbb
adc
fsubrl
pop
gs
jae
xchg
iret
xchg
icebp
jbe
jb
and
test
mov
leave
push
jg
and
std
in
mov
and
mov
pop
sbb
add
scas
in
mov
jno
xor
pop
jo
sbb
and
fwait
add
cmpsb
xorl
inc
cltd
aas
cmpsl
icebp
hlt
jbe
dec
popa
add
lret
loopne
jns
push
int
push
cmp
fimuls
sti
aam
outsb
cmp
xor
dec
xchg
loope
mov
sbb
mov
fwait
adc
xor
dec
fsubrl
addl
imull
gs
push
mov
mov
xlat
xor
inc
mov
out
loope
mov
bound
cmp
push
repnz
dec
jg
decb
pop
jno
icebp
test
mov
lcall
lret
inc
add
add
in
inc
cmp
mov
xor
inc
loop
in
mov
jle
jne
movsl
jns
pop
sub
sbb
sub
jge
pop
hlt
ret
dec
dec
or
mov
das
aas
push
cwtl
or
xor
lods
xor
nop
test
xor
mov
repnz
jl
in
mov
cli
cmp
xor
ljmp
sbb
jno
mov
cmp
inc
sbb
pusha
pop
cli
or
clc
jo
int
dec
dec
das
iret
pop
xchg
call
push
dec
ret
lea
jge
mov
jmp
mov
ja
in
pop
int
sbb
add
shll
rcrb
int
loop
sbb
sar
aam
sti
adc
mov
scas
jp
scas
fdiv
fsubl
mov
push
push
jb
jl
fdivrl
iret
fsts
inc
mov
lock
pop
sub
inc
test
jle
fnsave
inc
push
xchg
mov
mov
and
jmp
idiv
inc
jmp
nop
or
dec
out
or
pop
daa
and
cwtl
push
xor
cmp
daa
cmpsb
jo
dec
or
lcall
cld
pusha
mov
add
jno
lret
shlb
dec
push
sub
dec
cmp
push
adc
negb
xor
inc
jno
stos
jae
sbb
test
in
pop
push
push
pop
cli
out
mov
iret
mov
lods
fdivr
enter
out
in
cmp
add
shll
scas
dec
sub
xchg
pop
and
test
mov
sub
xor
filds
loopne
stos
mov
jmp
stos
or
xor
mov
ret
xchg
push
jl
jb
xchg
stc
jge
xor
lock
mov
repz
xchg
mov
insl
inc
or
hlt
mov
je
shlb
fstl
fdiv
jl
cmp
add
aad
lods
js
cld
test
lahf
lods
push
cltd
aad
add
scas
xlat
pop
int3
jbe
in
mov
aad
xchg
popa
cmp
jge
shll
mov
push
or
jmp
maxps
cld
and
aaa
xchg
pop
sbb
add
jbe
jmp
jno
arpl
mov
dec
repnz
repz
inc
cld
lret
cmp
stos
cmc
sub
mov
sub
in
outsl
push
add
enter
inc
pop
pop
test
jp
cmc
push
push
daa
sbb
hlt
inc
stc
iret
ss
cmp
mov
xor
aad
hlt
sbb
dec
dec
out
push
sbb
sub
mov
stos
movsl
call
push
stos
mov
mov
shlb
cltd
xchg
cltd
pop
push
popl
sub
ret
popa
add
les
iret
cmp
cmc
sbb
lcall
rorb
jns
stc
sti
fisttps
xor
mov
daa
mov
jge
jge
inc
popf
iret
mov
add
test
mov
xchg
lcall
sti
add
out
adc
cmp
push
pop
and
mov
clc
outsl
sbb
icebp
xchg
sti
dec
orb
rcrb
insl
jnp
sub
xor
jp
fnstcw
add
pop
jae
mov
add
stos
inc
add
or
push
mov
ret
cmpl
cltd
lret
clc
mov
mov
sub
jmp
dec
xor
call
in
popa
xchg
dec
sub
push
mov
dec
movsl
shlb
call
repnz
inc
inc
decl
in
mov
insb
push
adc
pushf
ja
xor
je
in
int3
push
dec
dec
inc
iret
cmc
jp
hlt
mov
cli
jge
cld
and
sti
add
and
ja
mov
mov
insb
mov
add
stos
dec
inc
in
cmc
sahf
ret
xchg
jbe
test
push
mov
mov
or
popf
dec
xor
sbbb
push
enter
jmp
shll
sub
pop
inc
jl
testl
mov
test
test
cltd
aad
icebp
mov
sub
fidivl
int3
pop
pushf
pop
cld
jne
adc
dec
into
or
or
or
enter
dec
into
pop
push
cmp
aad
ss
sub
fisttpl
xor
pop
push
add
cmc
fstpt
pop
stc
popa
xchg
aaa
push
mov
push
pushf
xor
jnp
out
xchg
pushf
dec
lods
andb
push
stos
in
pop
leave
aas
les
imul
stc
and
in
push
xchg
sbbb
xor
das
in
aad
rcrb
je
cmp
movsb
xor
push
add
clc
mov
or
lock
sub
loop
sbb
mov
xchg
lds
xchg
hlt
das
pop
mov
push
add
mov
hlt
dec
mov
or
mov
or
ret
xchg
lock
call
fstl
add
sahf
cmp
jno
mov
sub
cmp
lock
lods
sbb
test
mov
shll
dec
xor
or
xor
test
ret
hlt
adc
into
es
inc
cmp
out
cmp
xchg
call
rcrb
fwait
repz
mov
mov
xchg
inc
rorb
lret
outsl
imul
fcmovnbe
pop
addr16
mov
cmp
fists
outsb
int3
jge
loop
inc
push
mov
les
lods
scas
mov
adc
pop
jns
adc
sbb
mov
les
inc
ficompl
xchg
dec
pop
push
sub
dec
aam
stos
or
push
test
xchg
rcll
fsubrl
out
xor
out
push
imul
test
pusha
mov
add
dec
and
jae
ja
inc
cmp
clc
mov
pop
je
scas
push
mov
movsl
push
push
jl
mov
push
xor
dec
xor
cs
mov
sbb
les
dec
xor
or
es
aad
push
dec
pop
ret
outsb
lcall
testl
daa
bound
cwtl
out
xchg
pop
mov
inc
mov
cmp
fldt
enter
and
adc
and
xchg
mov
cmp
sub
loop
add
push
mov
movsb
ficoms
inc
jg
call
or
mov
rcrl
push
xchg
js
int
loop
xchg
popf
and
mov
pop
sbb
fwait
adc
sahf
cmp
xlat
stos
mov
inc
in
xchg
cltd
inc
fadds
mov
mov
xchg
sub
rcrl
xchg
fwait
jecxz
or
mov
loopne
clc
mov
jno
add
enter
call
dec
and
xor
mov
insl
mov
repz
int
cmp
mov
aaa
push
and
shr
sub
mov
add
mulb
cmp
aaa
mov
outsb
push
dec
orb
movsb
inc
test
mov
lds
gs
push
xchg
shll
insb
xlat
xor
testb
jae
rcr
bound
dec
cltd
mov
mov
rolb
scas
mov
insb
repnz
jl
femms
pop
pop
test
or
jp
lahf
mov
jno
jp
outsb
sbb
fmulp
xchg
mov
add
fwait
das
das
sahf
jne
jns
cmpsb
or
mov
dec
es
xor
push
je
push
pop
sub
inc
sbb
dec
lret
push
cmp
es
or
movl
cmpsb
out
negb
repnz
outsl
fcom
or
call
dec
jb
pushf
sbb
pop
pop
or
xchg
icebp
pop
imul
push
or
xchg
leave
xlat
pop
push
rcr
mov
sbb
push
std
cmp
ret
mov
lea
ja
xchg
adc
xchg
adc
push
cltd
bound
mov
xchg
adc
out
jl
cmpsb
aaa
loopne
jg,pn
jne
mov
sti
xor
mov
insl
sarb
or
cli
xor
mov
sahf
cmp
push
clc
pop
subl
inc
fdiv
mov
mov
and
roll
mov
lock
mov
jno
jbe
push
insb
popa
fsts
jno
and
push
xchg
scas
out
jge
out
outsb
pop
fiadds
and
cmpl
aaa
mov
ds
xchg
sub
repnz
inc
fwait
sub
pop
outsb
jecxz
adcb
mov
cmpb
inc
mov
or
xor
in
jmp
pop
iret
xchg
mov
push
jp
sub
push
sub
xor
insl
cli
call
clc
pop
repnz
xor
push
add
inc
inc
imul
lods
test
pop
ret
inc
xchg
push
mov
jb
lcall
fs
loop
ret
sub
test
inc
into
jne
hlt
push
xchg
add
aaa
inc
test
pop
jg
mov
loopne
mov
jge
daa
enter
mov
sbbb
push
jns
int
dec
push
mov
xchg
push
test
movsl
fdivl
mov
fabs
cmpsl
fistpll
pop
pop
dec
inc
pop
sbbl
insb
push
dec
int3
mov
dec
or
xchg
mov
pop
and
add
lcall
call
aam
inc
mov
xor
sub
fildl
jbe,pn
mov
leave
lret
ds
sub
fstl
lahf
lret
in
repz
cmp
imul
or
mov
fidivs
cmpsl
cmpsl
and
dec
xor
xchg
inc
movsb
leave
mov
cmpsl
mov
jnp
repz
xor
jl
push
jbe
cmpsl
lret
mov
mov
cs
and
fwait
cli
iret
bound
push
xchg
ds
sub
fs
scas
jle
jae
test
dec
sub
icebp
mov
pushf
jecxz
xor
scas
pusha
nop
mov
dec
nop
rorl
iret
pop
sub
push
out
jae
pop
out
fstpt
cmp
jnp
pop
rclb
push
xor
and
cmpsb
stc
sub
jge
cwtl
cltd
mov
iret
inc
or
cmpsl
cmp
dec
sbb
test
inc
xchg
xor
imul
xchg
jecxz
ret
pop
mov
or
fisubl
add
je
sti
or
arpl
pop
fisubl
mull
dec
repz
lret
add
js
test
inc
ffree
fwait
hlt
jg
std
adc
inc
inc
mov
jnp
jnp
cmp
shll
bound
mull
aad
inc
sbb
stos
or
repz
pop
rcll
adcb
outsl
lcall
cmp
in
std
fstpt
in
xor
int3
sbb
xor
mov
fisttpl
mov
sbb
enter
icebp
push
pop
test
sub
jge
push
addr16
test
into
push
call
fmuls
dec
inc
cmova
mov
jae
xor
mov
iret
lahf
mov
push
out
jae
cwtl
loopne
lret
ret
inc
ja
mov
aad
out
add
lock
aas
add
out
lods
sahf
rcl
pushf
mov
xor
pop
jo
adc
ret
push
jp
push
cli
jmp
adc
xor
xor
inc
push
test
mov
cltd
dec
sbb
sub
push
mov
push
cmpsl
int3
aas
xor
enter
cs
rolb
adcb
sbb
pop
dec
fiaddl
push
sub
je
inc
mov
mov
rclb
mov
push
lcall
sbb
fwait
jl
lods
mov
mov
das
in
push
mov
fdivrl
xor
or
mov
test
cmc
mov
test
ja
sub
add
or
mov
sub
push
sub
mov
scas
pop
adc
jle
out
cmp
frstor
push
hlt
cltd
lods
mov
and
shlb
aam
push
ljmp
test
mov
gs
push
jb
popf
pop
or
fmul
push
cmc
mov
jnp
pop
dec
cmpsb
mov
sbb
inc
adc
mov
aad
xchg
jne
pop
adc
xchg
addr16
mov
pop
inc
sbb
jo
inc
sub
shlb
mov
or
cmc
in
adcb
adc
cmpsb
pop
mov
pushf
mov
insb
fwait
pop
and
dec
sbb
int3
add
addb
aas
outsl
loope
sub
in
inc
int3
cmc
inc
rcrl
dec
out
mov
lds
clc
xchg
push
lods
ja
insb
xchg
leave
ror
in
push
cwtl
pop
add
fldcw
ljmp
sbb
in
shll
sub
stos
out
leave
in
xorl
les
dec
mov
xor
rcrl
cmp
xor
cmpsl
lret
cmp
mov
lret
inc
push
cmp
sub
push
ret
cmp
dec
xchg
push
dec
loopne
arpl
dec
imul
or
pop
dec
mov
jo
push
test
jg
sbb
xor
rclb
cmp
jb
pop
aam
dec
and
aaa
sub
pop
out
jge
aad
test
idivl
mov
sbb
jp
lods
xchg
mov
stos
adc
sub
dec
ficomps
xchg
dec
sti
jno
outsb
xor
stos
dec
mov
push
push
jmp
adc
sbb
test
xor
icebp
ret
popw
jle
fstpt
and
js
inc
pop
push
lahf
in
and
push
or
shlb
jecxz
addr16
dec
and
int3
ret
add
pop
cld
test
inc
inc
sbb
sahf
lret
mov
outsb
push
mov
pushf
sar
lods
adc
inc
scas
or
add
and
mov
aam
std
jmp
fdivrl
sub
mov
mov
mov
jp
cmpsb
adc
in
mov
cmp
pop
dec
out
sbb
imul
mov
add
lods
push
and
std
cmp
mov
xor
rorb
enter
push
cs
cmp
jno
aas
xchg
test
cmpsb
data16
enter
pop
xchg
sub
push
ss
mov
or
pusha
xor
addr16
cmpsl
jp
es
pop
ljmp
and
mov
push
mov
add
es
mov
dec
lods
fiadds
test
dec
test
push
das
sub
daa
xchg
inc
or
mov
int
ret
xchg
mov
rcll
scas
push
call
or
jg
popl
xchg
dec
jne
cmp
add
pop
fadd
add
icebp
imul
ret
sub
pop
js
lret
add
jb
loope
xchg
loope
in
into
roll
cmpsb
sti
jae
xchg
push
sub
add
inc
aaa
scas
outsl
xchg
fdivl
push
movsl
xor
pop
push
jns
andl
push
inc
xchg
fdivrl
mov
mov
loopne
jp
xchg
and
xchg
loopne
and
xchg
pushf
mov
jne
call
iret
inc
ret
mov
in
mov
mov
sub
scas
cmp
ja
lret
faddl
test
stc
lods
ret
xchg
in
mov
clc
test
mov
lea
lock
and
testw
dec
sbb
lods
dec
outsl
or
push
sbb
inc
lahf
mov
mov
push
cmpsb
mov
into
jnp
movsl
adc
out
cmp
gs
pushf
out
lods
mov
and
jo
orl
or
xor
jne
inc
pushf
mov
pop
stc
repnz
inc
adc
daa
js
sbb
sbb
das
xor
jge
fisubrl
and
fcomps
mov
cmc
and
inc
sbb
ja
stc
mov
mov
inc
jl
pop
test
jns
pusha
inc
cmpsb
dec
pop
sub
je
push
in
pop
cmpl
addr16
inc
adcl
inc
mov
pop
xchg
cmc
push
into
push
repz
call
daa
insl
in
push
jecxz
pop
call
scas
pushf
imul
in
dec
mov
adc
shlb
mov
lahf
add
aam
mov
pusha
stc
xchg
push
pop
push
inc
icebp
xchg
xor
ljmp
mov
hlt
inc
adc
cmpsl
insl
mov
jg
lcall
loop
mov
loop
mov
sahf
mov
add
inc
addb
sub
aad
sub
imul
addr16
jnp
cld
imul
xor
cwtl
cmp
cmpsb
mov
mov
cli
mov
lahf
daa
cmovnp
ficompl
sub
sub
mov
out
sub
cmp
xchg
mov
movb
rcrb
subb
fiadds
mov
xor
jae
cmpsb
push
and
insb
iret
aad
flds
rclb
fcmovbe
idivb
or
mov
cs
dec
adc
sbb
mov
cmp
xchg
out
jp
imul
clc
pop
adcl
push
orb
and
bound
jl
mov
dec
nop
hlt
in
jbe
fcomp
pushf
ret
repnz
gs
movsb
aad
int
jge
cs
aaa
dec
fisttps
add
inc
pop
xchg
mov
mov
xchg
add
and
sti
xchg
daa
pop
ret
adc
divl
mov
loope
dec
stos
mov
mov
popf
ljmp
test
aam
cwtl
pop
loopne
jb
ss
add
or
jge
out
cmp
add
jbe
fmul
enter
lret
arpl
int
push
add
gs
sub
sbb
or
cmp
jle
lds
inc
scas
push
out
pop
inc
mov
push
jnp
sub
push
sub
xor
jne
mov
inc
lods
and
aam
in
loopne
xchg
lds
in
jg
in
or
or
fstpt
testb
jbe
in
cmp
jmp
and
mov
loop
jle
lahf
out
sarb
rorl
or
mov
mov
das
push
sarl
jbe
add
aad
addr16
or
mov
inc
jno
fcoml
mov
insl
aas
ds
movsl
pop
mov
or
rorl
ljmp
clc
cmpsl
mov
push
mov
mov
sbb
mov
into
mov
or
test
mov
imul
ret
insl
cld
inc
sub
movsb
es
out
std
shll
loopne
push
rcl
sbb
cmp
inc
cmpsl
negl
fldcw
nop
jg
mov
cmp
jnp
sub
and
gs
adc
jecxz
into
inc
imul
sub
aas
stc
out
lods
pop
fnsave
jle
pushf
ja
push
pop
xor
int3
mov
or
add
and
mov
bound
jp
test
in
leave
pop
ja
mov
mov
out
dec
and
out
fdivrl
dec
or
in
cld
mov
mov
fistps
cmpsl
xchg
adc
rcr
mov
cmp
cs
lea
push
mov
push
ss
pop
xlat
insb
mov
jne
pop
push
xor
fmuls
inc
jo
and
sarl
pop
fcoms
loop
add
cmp
cmp
xlat
jecxz
push
cmp
hlt
mov
data16
xor
jmp
adc
shlb
or
aaa
iret
and
arpl
mov
dec
or
cmp
push
outsb
jp
pop
xor
les
jl
jp
int
jbe
adc
push
aad
nop
push
xchg
imul
sub
int
pop
int3
les
cmp
mov
cmpsb
pushf
inc
dec
pop
lods
in
adc
mov
aaa
pop
iret
arpl
mov
sbb
test
or
cmpl
pop
pop
jecxz
andl
mov
int3
int3
ss
mov
mov
and
and
popa
adc
adc
int
rcrb
cmp
push
add
jp
int3
rcrl
jmp
or
and
lea
jg
mov
xchg
jo
add
sub
stos
shrb
xor
inc
pushl
xchg
mov
ret
popf
mov
pop
mov
je,pt
lret
cli
xor
mov
fld
push
stc
mov
in
dec
loopne
pop
icebp
lret
jp
loop
jno
mov
push
inc
mov
ja
xchg
inc
scas
jecxz
xchg
xchg
movzwl
mov
aam
int3
shlb
sbb
ret
mov
jge
jo
stos
inc
and
inc
pop
pushf
dec
lods
mov
fwait
imul
mov
or
adc
sub
cli
jnp
mov
in
jle
cmp
insb
daa
or
dec
xchg
dec
out
pop
dec
cmp
jno
jmp
stc
aad
xchg
dec
pop
jmp
in
shrb
adc
push
jne
scas
stos
sbb
add
stc
jge
or
aas
sbb
or
out
mov
mov
xor
dec
xor
cmpb
inc
jmp
inc
and
xlat
stos
repz
pop
aaa
mov
rorl
dec
dec
fisubrl
cmp
or
sarl
fwait
adc
repz
mov
mov
outsb
fnsave
push
dec
test
jno
dec
cmp
std
orb
dec
inc
add
adc
in
push
les
fwait
mov
in
aas
repz
jmp
or
dec
jnp
push
insl
popf
push
xchg
mov
jo
push
ret
push
or
outsl
es
push
in
mov
es
dec
je
and
dec
pop
lods
inc
dec
xor
out
pop
jp
jb
sbb
popa
mov
sub
xor
sub
jo
movl
and
fcmovne
popa
push
pop
inc
loopne
ret
ds
jmp
outsb
add
fiaddl
push
pop
in
cvtdq2ps
add
lret
in
es
ffree
cmpsb
dec
cmp
push
cmp
inc
mov
and
aad
lahf
sbb
out
lcall
pop
pop
jne
xchg
lea
dec
adc
mov
aam
cmp
or
pop
jb
cli
test
pop
xor
negb
leave
dec
jo
and
cld
sbb
dec
inc
push
repnz
ja
mov
and
sysenter
scas
imul
loop
and
xor
mov
incl
lea
push
hlt
or
sub
mov
mov
popf
loop
movsb
add
popf
scas
mov
inc
dec
out
and
dec
aam
push
shll
jnp
imul
xchg
sbb
pop
push
cwtl
mov
cli
fistps
inc
pop
dec
rol
pop
daa
lea
cltd
cmp
test
inc
ljmp
enter
push
frstor
adcl
mov
popf
bound
push
jle
pop
xchg
test
aad
jmp
outsb
stc
jb
xchg
addr16
andl
xchg
in
add
pusha
cmpsb
mov
imul
push
out
lods
add
jns
shll
hlt
loop
adc
dec
insl
mov
inc
adc
mov
bound
dec
je
pop
and
sub
xchg
dec
filds
bnd
pop
test
xor
inc
sbb
mov
xchg
push
xchg
fstpt
mov
aas
sahf
add
mov
sub
adc
xchg
or
subb
mov
testl
test
add
fdivrp
push
lea
repz
pop
cmpsl
inc
cmp
in
and
xchg
lcall
jbe
repnz
lds
loop
cmp
lods
xchg
push
xor
fbstp
dec
cld
in
inc
fidivl
sbb
decb
in
scas
xor
lahf
cmp
mov
rcrl
push
shrl
mov
pop
pop
mov
mov
inc
push
cmpsl
gs
es
popf
pop
cmp
loopne
repnz
aad
adc
mov
data16
mov
push
cmc
cmp
xor
xchg
pusha
sbb
lock
jl
sbb
negb
adc
lock
jns,pt
jae
js
cmp
mov
sub
sub
fidivrs
icebp
mov
add
test
adc
testl
orb
xchg
test
or
repz
xchg
sbb
adc
into
in
pop
pop
mov
dec
xor
mov
shll
fs
int
xchg
loop
push
xchg
pop
data16
jns
sub
ret
pop
mov
rol
xor
shr
inc
sub
test
cmp
push
jns
call
insl
loope
or
inc
hlt
inc
push
and
in
pop
ret
dec
pop
adc
mov
fidivl
sbb
ret
popa
and
popa
aad
js
sarb
loopne
frstor
out
push
shlb
dec
int3
rcll
test
push
pushf
push
testb
add
fiadds
sti
xlat
test
xchg
dec
fucomp
imul
sbb
int
mov
xor
shrb
mov
and
mov
push
mov
inc
das
loopne
rcrl
fidivs
and
cmp
push
xor
mov
cmp
xlat
les
cmp
cld
add
xchg
pop
dec
sub
or
mov
mov
cmp
add
dec
push
test
lods
xchg
mov
or
mov
in
mov
inc
inc
add
or
mov
mov
aas
gs
bound
arpl
jl
jge
push
stc
xchg
leave
jge
rolb
mov
div
sbb
pop
fisubl
aad
jbe
repnz
sarb
xchg
sub
pusha
je
cmp
push
jae
fldcw
cld
pop
xchg
scas
dec
push
icebp
movsb
sub
lret
jns
sar
cld
add
pop
jno
in
dec
mov
and
aaa
jno
or
movsb
dec
psubb
ficompl
push
int3
sbb
cli
shl
adc
enter
inc
mov
push
popa
or
dec
xchg
pop
mov
sub
clc
pop
rorl
lds
in
add
lds
andl
jp
add
xor
mov
sbb
imul
sbb
test
out
sbb
in
push
stc
push
pop
add
inc
fstpl
in
sbb
xor
mov
mov
ret
and
js
sar
adc
dec
inc
imul
xorl
push
mov
pop
call
enter
int
xor
stos
fbstp
test
lods
sar
mov
mov
mov
fstl
push
imul
or
in
xchg
and
mov
push
mov
dec
cmp
insl
xchg
stos
inc
push
xchg
push
arpl
lock
inc
in
mov
jne
lock
xlat
xchg
adc
out
fsubs
pop
mov
adc
mov
repz
aaa
ret
xchg
add
add
enter
mov
mov
int
lret
into
or
shl
pop
xor
cld
mov
ret
pop
pop
mov
lcall
cmp
xlat
setge
or
stos
fmul
insb
and
fdivl
test
dec
repz
data16
push
divl
outsb
loope
push
orl
mulb
jae
push
in
cltd
xchg
mov
inc
fstl
lcall
mov
adc
fidivl
mov
js
add
iret
pusha
push
inc
jnp
shlb
add
loopne
pushl
lahf
pop
subb
ffree
inc
mov
data16
pop
sub
xchg
in
sbb
mov
push
imul
inc
iret
cmp
jo
in
cmpsl
xchg
inc
cmpsl
vphaddubd
cmpsb
out
jp
mov
dec
ss
scas
dec
rcr
jnp
insb
fistpl
orl
mull
lahf
pushf
adc
jo
imul
cmpsb
xor
pop
ja
mov
push
jp
cmp
xor
nop
dec
icebp
or
and
gs
imul
int
test
fs
sti
je
out
add
mov
or
cwtl
cltd
and
xor
dec
imul
push
jno
xor
mov
or
aaa
into
fbld
jmp
mov
lahf
mov
pop
or
aad
sbb
mov
sbb
daa
mov
add
dec
pop
inc
enter
cwtl
fbstp
dec
ret
pushf
sti
adc
cmpsb
sub
mov
push
push
stc
pop
xchg
mov
fsubrl
mov
and
sbb
push
call
sub
outsb
notb
nop
std
xchg
adc
xchg
cmp
sti
push
testb
xchg
and
or
add
sbb
add
mov
sbb
pop
cmp
mov
cltd
psubsb
dec
cmp
push
idivb
cmp
enter
out
popa
xchg
cltd
test
jno
idivl
add
or
fs
xchg
sarl
dec
and
dec
cmc
adc
andb
adc
flds
lahf
and
lahf
pop
std
ljmp
mov
lods
pusha
stos
xor
aad
aas
jg
xchg
sti
loope
push
or
push
mov
dec
das
imul
cmp
popa
inc
stc
pop
bound
xchg
jbe
jp
mov
sarl
xor
outsl
mov
sbb
int3
movsb
sbbl
icebp
test
repz
jno
mov
add
sti
imul
leave
lret
push
loop
cmp
loope
fildll
mov
subl
and
adc
adc
ljmp
sbb
pop
sbb
fwait
lret
pop
mov
dec
hlt
pop
ja
mov
mov
lods
mov
rcr
push
loop
jecxz
sbb
lods
repnz
sub
fisubrl
mov
inc
xchg
jae
pop
push
mov
pop
inc
into
cmpb
nop
or
mov
sub
push
jecxz
mov
mov
add
xchg
aad
dec
rorl
call
push
repz
scas
rol
sub
test
sub
push
pop
cmp
imul
pop
les
push
rorl
xchg
in
push
les
jge
jb
and
push
rcrl
clc
in
stos
pop
shll
and
inc
daa
cld
lods
sbbl
incl
lcall
cli
jne
jo
pop
and
leave
in
push
pop
jge
stos
adc
loope
cs
daa
cmp
cli
int3
lret
std
and
jp
cmp
mov
mov
pop
sar
lea
imul
cld
jo
test
push
lds
sbb
std
cmpsl
mov
mov
or
bound
sub
mov
pop
std
cmp
out
sbb
int3
adc
push
pushf
adc
fwait
sahf
sets
xlat
push
adc
lods
lcall
arpl
rcrl
cmpsl
mov
leave
ret
sub
or
call
test
insb
cmc
js
add
push
push
in
movsb
lcall
inc
shll
cltd
push
pusha
cs
jae
fmulp
loope
inc
lods
lods
push
xor
mov
fiadds
mov
dec
jmp
push
shlb
in
lea
jmp
punpckhwd
ror
in
sahf
hlt
sub
sub
hlt
movsb
xchg
insl
add
faddl
shl
cmc
jns
ret
push
fnstcw
shlb
mov
sarb
out
xchg
add
mov
ljmp
mov
inc
ret
rorb
insb
adc
stos
lret
cmpb
stos
out
mov
imull
lods
lret
sub
jle
pop
pop
popf
aad
movsl
pop
repz
cwtl
testb
mov
loop
icebp
jno
mov
jns
inc
lcall
repnz
scas
add
stos
test
or
movsl
sbb
adc
inc
mov
mov
add
xor
mov
cmp
add
outsl
nop
lods
insb
mov
int3
push
sbb
dec
insb
push
push
out
jb
shll
fisubs
push
lret
cmpsl
push
in
pushf
sbb
sbb
mov
xor
scas
sub
mov
cltd
stc
mov
xchg
div
in
aas
add
lock
fdivrs
je
std
or
adc
xchg
xchg
loop
test
mov
jmp
stos
pushf
rcl
inc
je
fs
std
sbb
xor
mov
fbstp
inc
and
xor
outsb
in
cmp
icebp
sbb
push
cmp
xor
cmp
js
and
mov
push
add
cmpsb
fldlg2
push
inc
cmp
fdivs
icebp
ja
jo
jb
mov
lahf
lret
mov
xchg
jge
pop
push
push
mov
dec
pushf
and
cld
repnz
jmp
stos
mov
sub
cmp
sbb
mov
pop
jle
movsl
gs
sub
stos
in
cmpsl
aaa
addr16
jl
lret
imul
lods
add
pushf
mov
mov
mov
js
testl
imul
arpl
sub
fcompl
ljmp
inc
lcall
cwtl
jmp
insb
fwait
push
scas
sbb
mov
roll
int3
fwait
and
adc
mov
pop
jmp
mov
push
add
jge
subb
popa
test
out
mov
push
loopne
jnp
mov
cmp
test
scas
mov
xor
insl
dec
scas
push
inc
mov
and
pop
sti
jg
sub
pop
mov
out
push
sub
sbb
pop
mov
inc
fbld
faddl
stos
mov
loop
outsl
push
stos
jle
ficoml
loop
lea
pop
sti
insb
shrb
mov
pop
push
scas
xchg
adc
test
push
xchg
repnz
addl
test
fcmovnu
lds
fnstcw
pop
out
pop
ljmp
popf
cmp
mov
xorl
sbb
stos
add
xchg
inc
pop
loope
iret
sahf
in
insl
pop
mov
add
or
popf
dec
dec
daa
jecxz
fcmovnu
imul
mov
push
out
mov
cltd
fistpl
mov
inc
cmp
cs
sbb
in
adc
mov
pop
je
xchg
std
in
lock
lods
pop
cmp
cmp
scas
sbb
cmp
sahf
ss
aam
xchg
xchg
test
roll
loop
mov
pop
movsl
push
cltd
mov
dec
dec
mov
pop
jns
lret
jp
sbb
add
xchg
cli
jnp
test
outsl
sbbl
add
daa
icebp
pop
mov
pop
pop
jo
cmpsb
inc
jp
xchg
push
les
sbb
jne
in
lcall
dec
test
cmp
xchg
cltd
pop
sub
into
ret
mov
jl
lahf
or
inc
xchg
dec
cld
aam
jo
movsb
sbb
inc
fildll
adc
sub
add
std
mov
mov
icebp
lcall
jl
sbb
xchg
sahf
fisubrs
or
mov
jge
sti
dec
xchg
pushf
mov
push
add
int
mov
sub
jle
iret
shlb
out
mov
cmpb
les
pop
push
mov
inc
sub
adc
out
xchg
ja
jne
sarl
outsl
mov
dec
adcl
lret
push
dec
rorl
ds
rcr
in
scas
out
inc
mov
xor
pushf
orb
in
adc
jge
jmp
mov
add
jo
stc
add
xchg
dec
sub
pop
xchg
mov
mov
mov
inc
cwtl
adc
xor
xor
adc
dec
jns
cmc
push
jne
mov
sub
lods
lock
pop
mov
sbb
sti
dec
mov
lret
aaa
ficoms
mov
adc
ljmp
push
or
movsb
pop
cmp
jecxz
push
jno
shl
ds
mov
out
mov
rcrb
fisubrl
ret
gs
insb
enter
daa
inc
scas
outsb
xor
stos
xor
jns
pop
sbb
mov
mov
jne
mov
sbb
mov
repz
out
jb
mov
mov
mov
ret
stc
enter
gs
sbb
out
or
popa
das
imul
fistps
and
cltd
cmpsb
aad
add
or
mov
in
pusha
stc
cmp
or
lods
aaa
push
mov
dec
out
push
in
cmp
dec
and
testl
sub
sbb
ss
popa
adc
sbb
push
aaa
lea
sbb
or
fbld
loope
lcall
jmp
adc
fidivrl
shll
cmpsl
mov
icebp
jns
inc
jp
push
cmp
mov
rcl
cli
sbb
inc
add
mov
cli
pop
pop
xor
jo
insb
jl
jnp
and
mov
mov
ja
int3
inc
mov
adc
jp
mov
dec
mov
rcrl
push
scas
mov
mov
jns
cmc
pop
aas
push
das
dec
jge
loopne
jae
rcrb
jo
adc
int3
mov
xchg
movsb
daa
sub
add
addr16
cmpl
push
loop
test
sbb
dec
fimuls
scas
imul
sbb
rcl
inc
mov
outsl
fwait
sbb
xchg
mov
hlt
pop
mov
leavew
cmp
mov
loope
adc
mov
inc
call
or
lods
and
or
imul
outsb
mov
and
pusha
cmp
jmp
pop
lea
fildll
xchg
hlt
sbb
addl
xor
lret
jbe
aad
xchg
insb
cmp
inc
in
sahf
jo
insl
jae
fisubs
sub
xor
adc
and
out
mov
outsl
test
subb
cmp
push
fistpl
aam
fbld
push
out
mov
xchg
imul
pop
inc
adcl
ds
jne
inc
imull
push
cwtl
xchg
mov
loop
inc
or
mov
dec
out
jae
sub
add
jns
xor
popa
push
and
sub
sub
xchg
push
mov
mov
jno
addr16
xchg
inc
leave
pop
and
add
outsl
push
lea
rcrl
loopne
pop
cmpps
rcrb
mov
pop
cmpsb
stos
pop
out
cmp
imul
call
mov
inc
mov
fidivrl
aad
in
shll
test
rcrl
pop
inc
xchg
mov
pop
loope
int
imul
sti
xor
lahf
pop
dec
sbb
incb
repz
jg
cs
in
lods
sbb
jno
pusha
xchg
test
aaa
cmpsl
aas
mov
lahf
imulb
lahf
inc
lret
andl
cld
lods
mov
lea
xchg
cmc
daa
mov
repz
mov
xchg
cmp
mov
rcrl
or
mov
sub
pop
mov
out
lds
rcrl
popa
lret
ror
add
lods
cmp
dec
fs
popa
pop
jb
lcall
push
xor
lods
mov
cli
dec
xchg
data16
adc
pusha
jmp
insb
xchg
inc
and
stc
jno
or
iret
push
scas
ret
xor
aas
shr
lods
aad
jb
xchg
fldenv
push
push
faddp
sbb
movsb
hlt
int
xor
sub
xor
pop
xor
out
insb
pop
adc
dec
mov
adc
stos
and
test
push
mov
outsl
shll
out
dec
pop
sbb
jae
add
jp
movsl
fidivrs
xchg
cmp
imul
clc
fnsave
push
adc
mov
pusha
std
pop
xor
test
jl
loop
cmp
sti
cwtl
cmp
test
fnstenv
pop
jb
jg
or
iret
sbb
out
in
push
popa
sbbl
rcrb
ret
xor
icebp
pusha
or
mov
call
push
jge
dec
cmp
sbb
imul
inc
xchg
push
cmp
add
xchg
mov
jns
fmull
pushf
cltd
mov
aad
loop
scas
pop
xchg
es
test
jae
pop
scas
fwait
xchg
and
sub
pop
out
or
test
mov
int
mov
cltd
xchg
dec
push
insb
scas
les
jle
cwtl
jg
xchg
push
jmp
push
mov
shll
out
hlt
sbb
leave
test
dec
pop
or
into
xchg
mulb
cltd
lock
out
xor
cmp
pop
popa
in
push
shr
pop
pushf
push
sti
cld
mov
pop
sarb
push
outsb
es
pop
imulb
push
pop
and
fists
aaa
sbb
jmp
je
xor
dec
pop
mov
enter
insb
pop
scas
jne
mov
xlat
add
lea
pop
dec
and
dec
cld
cmpl
mov
jae
mov
cmpsl
xor
and
or
fidivrs
jno
rolb
rcr
lret
add
cmp
mov
push
out
arpl
div
push
mov
jg
lods
mov
push
pop
adc
push
cltd
repz
daa
sub
dec
jo
int
sti
jb
mov
adc
lahf
push
aas
inc
test
incb
call
scas
dec
daa
adc
insb
or
fsts
xor
fldl
fcmovbe
movl
inc
das
lds
mov
call
je
xchg
mov
std
sbb
sub
add
cmpsl
mov
fs
push
mov
xor
xchg
out
cs
and
add
js,pn
lods
jno
mov
xchg
sbb
mov
sub
lea
inc
iret
and
push
aam
aam
mov
adc
push
pop
out
jb
dec
pop
imul
test
fidivrs
mov
inc
and
dec
jl
push
pop
jo
shlb
dec
loope
clc
pop
mov
add
push
icebp
pop
jo
adc
rclb
stos
inc
push
sbb
dec
out
out
jno
mov
shlb
ja
clc
cwtl
ret
jle
lea
add
xchg
cmp
mov
into
rcrb
adc
inc
addl
inc
out
push
je
ror
mov
sbb
sub
adc
rolb
lds
and
and
jbe
mov
jge
pop
je
sbb
fs
push
add
xchg
push
jp
sub
nop
int3
hlt
xchg
jo
jp
pop
mov
cmp
test
mov
add
adc
sti
jecxz
push
xor
cmp
fwait
pop
xchg
sahf
and
rcrl
mov
and
shrl
mov
sub
aas
jns
ret
int3
pop
stc
pop
lahf
movsb
cwtl
arpl
mov
call
imul
xor
imul
pcmpeqd
push
push
shll
add
jecxz
sub
push
popa
in
mov
movsb
jb
in
dec
subl
loopne
mov
mov
jl
dec
and
insb
jae
ret
scas
pushf
push
fidivl
fisubrl
dec
jecxz
add
sbb
movsl
scas
jo
pop
jbe
das
jb
mov
sbb
jae
aad
jmp
sbb
sbb
sbb
into
jnp
xor
pop
mov
fs
arpl
dec
ret
mov
inc
pop
and
testl
pop
addr16
mov
std
cld
sbb
push
pop
dec
test
daa
stos
mov
into
enter
or
xchg
cmpsl
ss
pop
jmp
cmp
xchg
inc
data16
pop
sub
lock
pop
mov
dec
push
add
jg
fwait
or
mov
loopne
outsb
mov
push
mov
outsb
je
dec
dec
imul
push
mov
imul
push
jno
mov
cmp
xlat
ja
inc
push
repz
test
in
enter
cmpl
ret
dec
in
add
mov
inc
jle
push
mov
sbb
mov
sub
sub
enter
xor
push
or
pop
push
out
mov
dec
sub
pop
xchg
dec
pusha
rolb
jo
in
lds
orl
int
ds
mov
sahf
loop
je
mov
jne
call
dec
push
xchg
push
mov
jne
xor
jo
mov
sub
fwait
xchg
out
mov
cmpsl
rorb
and
inc
stos
std
in
call
mov
lods
psubsb
in
sbb
jg
aad
sbb
int
jge
or
inc
mov
push
test
arpl
test
xor
cmc
mull
imul
cmpsl
pop
lds
movsl
subl
cmp
cwtl
in
sub
lahf
cmp
sub
adc
mov
add
pop
lret
cmpb
mov
das
push
flds
stc
inc
mov
in
negl
scas
cli
insb
cmpsb
mov
mov
cmp
add
sub
ret
mov
jmp
mov
dec
add
cmp
xchg
and
mov
insl
xchg
rcr
xchg
test
jecxz
push
pop
out
imul
or
jbe
stos
sbb
shll
mov
or
sbb
inc
adc
sarb
fmul
ret
adc
rcrl
adc
pop
inc
aam
subb
sbb
daa
dec
add
cmp
mov
insl
repz
jne
std
inc
sub
filds
and
cli
out
and
sub
pop
add
adc
ret
dec
bound
clc
repz
pop
mov
ja
lea
dec
loope
inc
rorb
test
mov
mov
lcall
push
movsb
call
popf
repz
xor
pop
jbe
aas
and
testb
outsl
and
arpl
icebp
push
cltd
jb
mov
push
inc
mov
or
fidivrs
jns
sar
push
xor
dec
xlat
mov
dec
outsl
loopne
cld
mov
add
fdivp
mov
push
sbb
adcb
shrl
fisubrs
sub
mov
aas
adc
das
or
stc
das
pushf
pop
mov
int
xchg
ja
cmp
inc
scas
pop
add
insb
pop
sbb
and
cmpsb
lahf
inc
fimuls
add
add
pop
insl
out
imul
lds
leave
dec
mov
adc
inc
insl
or
ds
dec
int
dec
stos
and
xor
icebp
xor
mov
adc
andb
mov
push
test
jp
dec
sub
flds
push
lea
loop
cmc
xchg
xchg
xchg
test
cmp
scas
shll
jge
cmpsl
sarb
xchg
or
pop
in
imul
sbb
jge
sbb
jo
in
push
push
mov
testb
sbb
mov
xor
fildll
mov
popf
imull
mov
cmp
test
dec
lea
insb
aam
lea
or
push
pusha
rolb
push
out
scas
test
dec
out
dec
into
test
pop
movsl
scas
das
cmp
push
xchg
add
add
cmp
jge
stos
pusha
in
sbb
jmp
xor
lock
test
mov
push
push
outsl
aam
ret
or
lahf
add
mov
xchg
imul
mov
ja
ljmp
fwait
xchg
cltd
mov
push
add
rcll
lret
pop
scas
push
push
push
lahf
xor
aad
inc
gs
loopne
sub
push
inc
add
out
sub
cmpsb
xor
pop
std
nop
push
add
adc
fsub
pop
mov
pop
jno
rclb
in
add
pop
xor
sub
jp
cmpsl
jno
fsts
test
rcll
xchg
inc
sub
push
cmpsl
pop
dec
int
cmp
movb
sbb
leave
push
test
cld
xor
pop
mov
les
mov
mov
xchg
sahf
es
or
scas
or
push
add
mov
dec
push
or
test
jle
scas
ljmp
cmpsl
aas
test
inc
ret
packuswb
cmp
out
jl
in
test
xchg
loop
and
push
sub
xor
stos
aam
int3
je
inc
idivl
push
jp
xor
xchg
inc
cld
mov
cmp
add
loopne
pop
in
sub
push
inc
fwait
enter
jb
pushf
hlt
jp
xchg
inc
pop
test
add
mov
pop
xchg
js
dec
popa
mov
adc
xchg
ret
cmpsl
pop
sbb
dec
or
mov
pop
out
popa
xchg
adcb
xor
scas
sarl
jl
std
arpl
or
mov
xchg
adcl
cmpb
ret
or
mov
lea
ss
pop
pop
inc
sahf
push
push
inc
orl
out
lock
add
mov
daa
jno
sbb
push
pop
fisttpll
fisubl
cmpsl
pop
lods
outsb
sub
dec
enter
movsb
adc
ficoms
ds
mov
lods
leave
sti
test
sbb
inc
mov
xchg
mov
ljmp
rclb
xchg
ljmp
pop
cmc
mov
sbb
inc
sbb
cltd
push
loope
aam
pop
jl
lahf
xchg
cmc
mov
or
sub
mov
cwtl
test
jb
push
lcall
arpl
xchg
add
or
test
mov
in
sub
dec
jle
push
outsb
scas
xchg
idivl
xor
jecxz
push
lds
rclb
cli
fistpll
mov
ljmp
pop
clc
or
sahf
enter
js
lea
jns
sub
xorl
sbb
jnp
xor
popa
rcrb
lds
data16
add
dec
sub
sarb
rorl
test
mov
dec
dec
rolb
push
dec
mov
sbbl
fcomi
fs
or
pop
aaa
jp
adc
adc
and
mov
hlt
mov
jb
out
mov
pop
mov
out
push
add
les
jl
sub
out
leave
jl
rep
dec
out
cs
sbb
std
xchg
jne
xlat
cmp
mov
lds
ja
in
enter
sti
xlat
push
insb
dec
cld
mov
stos
fildl
jge
test
xor
aad
setne
std
xlat
lods
mov
cwtl
out
test
js
scas
into
jp
xor
mov
push
pop
cwtl
mov
lods
jle
fdiv
lea
or
stos
cltd
lock
cmp
mov
or
movsl
dec
scas
pushf
push
or
rorl
cmp
sub
arpl
clc
mov
jbe
stos
mov
dec
iret
jo
fs
xchg
add
jo
and
jns
or
out
dec
ret
cmp
mov
scas
enter
pop
dec
inc
push
jb
test
out
mov
out
call
nop
pusha
mov
stos
in
inc
sti
add
lds
sti
mov
hlt
aam
inc
popa
outsb
in
lret
xorb
sbb
bound
pusha
push
dec
rolb
add
daa
aam
sbb
ret
pop
fcomps
jno
pop
data16
xchg
stos
enter
incl
aaa
pop
int3
jne
xchg
jns
inc
incb
add
call
xchg
jp
es
add
movsb
xchg
hlt
push
scas
xchg
out
test
daa
mov
scas
gs
dec
adc
int3
es
jp
inc
lret
push
inc
sub
cmp
jne
dec
or
jmp
outsb
repz
icebp
or
sti
pop
push
dec
xor
lods
shrb
mov
test
enter
test
in
add
xchg
out
lds
sub
aas
mov
and
pop
fcomps
pop
pushf
aam
jnp
cs
or
incb
add
icebp
movsb
pop
lahf
in
popf
sbbl
out
push
in
cmp
int
mov
scas
sub
adc
int
addr16
mov
call
and
mov
cmp
and
add
es
sbb
cs
shr
in
fmull
pop
or
push
add
inc
push
fisubl
push
sub
scas
mov
das
lods
push
testl
mov
and
inc
inc
or
shll
and
movsb
mov
mov
pop
and
or
scas
lcall
sti
jne
aaa
repz
mov
cmp
aas
xchg
repz
jecxz
adc
icebp
loopne
out
sbb
scas
js
cmp
ss
dec
sub
js
pop
arpl
andl
mov
stc
or
ds
icebp
insb
inc
cltd
pop
ljmp
scas
inc
and
stos
sub
pop
pushf
call
inc
inc
jns
sbb
loope
fildll
mov
cs
in
pop
adc
mov
push
hlt
push
popf
dec
and
push
repz
xlat
aas
and
out
mov
pop
xor
pop
and
cwtl
sahf
enter
pop
movsl
iret
push
push
aad
flds
sbb
repnz
inc
jno
pop
add
pop
repz
or
sti
cmp
fucom
repz
cmpl
push
fistpll
or
sbb
leave
push
sub
js
cmp
hlt
rorb
mov
roll
xor
sub
outsl
mov
or
pop
lods
add
mov
xchg
jo
pop
sub
add
aaa
mov
mov
cwtl
imul
in
cwtl
fwait
mov
repz
and
dec
or
xor
mov
mov
adc
in
addl
test
inc
pop
shll
cmpsb
mov
mov
dec
cmpsb
dec
stos
mov
loop
aam
jno
mov
mov
out
push
xchg
inc
and
jle
int3
cmp
imul
fs
or
mov
les
movsb
insl
mov
call
inc
test
inc
pop
adc
stos
push
insb
mov
add
call
sub
push
push
ds
jnp
jno
aaa
jecxz
loop
mov
lcall
dec
mov
pop
lods
ret
mov
in
add
jo
out
lods
and
sub
es
pmullw
cmc
imull
scas
loop
in
adc
out
enter
cmpsb
subb
ja
js
loope
xlat
and
mov
push
mov
mov
or
push
dec
push
pop
lret
and
test
mov
mov
imul
mov
push
mov
jnp
mov
pop
popa
fs
sub
out
dec
das
sbb
loopne
popa
jl
data16
ja
push
inc
cmp
aad
pop
xor
xchg
jno
xchg
adc
stos
push
stos
repnz
test
rolb
daa
aam
pop
fwait
cwtl
xlat
dec
rcrl
faddl
push
push
das
repnz
stos
mov
ret
insl
rorb
mov
push
lcall
out
xor
mov
cmp
testl
ljmp
mov
xchg
clc
daa
fs
sub
sbb
add
and
aam
cltd
mov
ret
or
jb
dec
dec
sub
out
xchg
in
data16
or
es
xchg
dec
mov
jl
pop
fisubl
cmp
addb
or
jbe
cs
dec
imul
mov
frstor
mov
outsl
cmp
jae
icebp
inc
repnz
rolb
mov
adc
lret
cmp
pop
cwtl
pop
cld
js
jnp
dec
jge
jge
ret
pop
les
cmc
mov
arpl
inc
out
mov
push
cmp
xor
repz
iret
dec
adc
ret
inc
dec
sbb
popf
je
cli
aaa
sbb
and
lock
insb
ficompl
push
mov
pop
cmpsb
xchg
lods
xor
dec
mov
fnsetpm(287
shl
fsubrs
cltd
fmull
je
or
add
out
movsl
push
lock
insl
ds
cmc
mov
in
or
jl
push
mov
xchg
mov
insl
push
sbb
add
jmp
movl
loope
and
fwait
insb
xchg
pop
dec
je
test
mov
nop
xchg
and
loope
mov
lret
ficompl
scas
cmp
out
cmp
repnz
mov
imul
and
or
jp
or
aas
psrad
aam
icebp
jnp
icebp
jmp
lret
push
mov
nop
jnp
adc
xor
xor
sub
cltd
lret
adc
test
mov
mov
jle
dec
push
out
jbe
cltd
mov
flds
jg
pop
sbb
mov
int3
int
adc
dec
jbe
pop
imul
xor
ja
mov
stos
jecxz
xor
adc
addb
dec
insb
int3
dec
add
push
lahf
flds
push
aas
mov
fsubs
mov
xor
loopne
enter
xchg
pop
aas
lods
fsubrl
jnp
jl
push
popf
add
add
mov
push
mov
js
dec
inc
or
and
jne
shll
jae
cmp
scas
cmp
push
lods
sbb
popa
inc
push
jge
pop
test
add
rcl
or
fmuls
cmc
lods
lcall
lods
mov
jmp
pop
mov
movl
xor
sbb
or
dec
ficoml
pop
lds
adc
inc
cmp
popa
imul
sti
jb
xchg
jg
jg
jo
imul
cli
mov
clc
imul
insl
sbb
mov
jmp
clc
xchg
scas
inc
pop
push
mov
jmp
into
mov
aam
or
sarl
mov
in
xor
mov
iret
push
adc
mov
insl
mull
pop
sti
and
cmp
mov
lahf
lret
repz
inc
test
js
lock
imul
mov
adc
adc
ss
scas
stos
mov
push
dec
sbb
xchg
scas
out
xor
ja
je
in
lret
and
xchg
movsl
addr16
jmp
xlat
and
and
dec
push
pop
adc
mov
test
iret
fdivl
and
pop
and
sbbl
cmp
inc
jns
pop
xchg
add
adc
inc
xchg
icebp
lock
sub
sbb
or
negb
mov
scas
sub
sbb
scas
ret
movsb
mov
scas
mov
push
inc
add
cmpsb
xor
negl
scas
call
cmp
mov
daa
gs
imul
jno
nop
jle
scas
jl
xchg
insl
xlat
cmp
scas
sbb
gs
jle
adc
add
xor
fsubl
mov
sub
pop
adc
xchg
fwait
jnp
pusha
sbb
pop
mov
dec
xchg
adc
push
jb
shlb
fwait
xchg
das
dec
pop
cmp
lods
bound
sbb
std
mov
ret
xor
test
xor
pusha
inc
add
fsub
in
sahf
rcr
es
pushl
out
mov
movsl
add
mov
add
mov
cmp
imul
xchg
adc
rclb
push
pop
dec
leave
arpl
xchg
loope
imul
icebp
and
stos
add
inc
cmpsl
mov
stc
inc
std
rcl
xchg
push
subl
test
syscall
int
lahf
lock
das
pop
push
arpl
mov
and
cwtl
into
mov
xor
cmp
jae
rcrb
inc
mov
jl
adc
add
jge
aas
lds
rclb
stc
mov
nop
sub
push
leave
and
cmc
sub
or
sbb
mov
scas
xchg
push
insb
sbb
pop
mov
scas
mov
sahf
popf
cltd
imul
insb
std
cmp
aad
adc
outsl
adc
int
mov
lea
inc
jecxz
jg
loope
sarb
or
movsb
lcall
mov
imull
mov
mov
mov
cmp
leave
enter
or
data16
mov
rorb
orb
out
jl
mov
cmp
cmp
pop
mov
push
movsb
inc
fsubl
pop
lcall
pop
out
fisubl
and
in
jp
js
insb
jno
mov
ljmp
pop
dec
and
dec
mov
jns
es
xor
and
pop
aas
orl
jnp
jne
adc
ret
fs
dec
mov
adc
inc
or
mov
lret
jmp
shlb
outsb
sbbb
sub
and
add
fdivl
fnstcw
xor
mov
mov
pop
ja
mov
adc
sub
adc
jmp
and
adc
lret
add
adc
add
subb
in
mov
stos
cmp
xlat
and
cld
out
daa
push
mov
das
sub
adc
pop
incl
dec
xor
into
xchg
mov
clc
sbb
dec
cltd
mov
mov
cwtl
fisubl
repnz
add
jecxz
in
or
es
adc
cld
xor
aam
mov
pop
jb
inc
pusha
fnstcw
pop
jg
notb
andl
jo
pop
imul
jne
cmpsb
loop
sub
lret
adc
pop
xor
pop
repz
sub
jl
cmp
push
jne
lret
push
push
repnz
mov
shl
jne
cmpsb
ret
fdivl
push
jp
cmc
adc
insl
cmp
jae
inc
mov
cmp
imull
inc
cmp
repz
arpl
and
mov
mov
sbb
cmpsb
jbe
arpl
out
cmpsl
hlt
hlt
shll
insl
cmp
sbb
movsb
push
add
push
movsl
adc
push
cmp
outsl
mov
insb
xchg
in
popa
fucomp
pop
fcompl
xorb
loop
fsubrl
add
es
push
cs
data16
in
orl
or
fwait
test
pop
aad
inc
push
mov
out
mov
movsb
fs
daa
aam
mov
lcall
jo
nop
scas
leave
or
sbb
fcomp
lea
inc
cmpsb
popa
mov
sub
bound
daa
xchg
jae
sub
adc
pop
push
clc
mov
add
shll
pop
dec
mov
push
mov
scas
bound
adc
mov
xor
loopne
test
js
cli
or
repz
aad
inc
xor
psrlw
lret
dec
sti
inc
mov
xchg
inc
and
mov
mov
sub
sbb
fdiv
jb
jle
int
test
popf
pop
push
cmp
in
mov
sbb
lret
dec
jb
mov
pop
sub
jno
lock
jno
adcl
cld
popa
sub
ret
push
adc
cld
test
jne
pop
dec
icebp
xlat
inc
scas
and
sbb
cmpsb
and
push
pop
add
or
mov
aad
sub
daa
mov
xor
and
add
dec
cli
jo
mov
adc
enter
imul
push
sub
xchg
pop
std
cmp
data16
xchg
inc
mov
and
leave
insb
fistl
in
cmp
sbb
add
sti
call
or
loopne
lahf
test
push
jb
xchg
add
orb
icebp
jcxz
mov
mov
jmp
nop
mov
cmp
mov
testb
or
xchg
insb
jo
ret
push
sbb
push
xchg
sub
ljmp
push
loop
and
dec
dec
dec
sbb
and
test
xor
and
mov
dec
test
pop
pop
dec
mov
cmp
cmp
mov
jns
adc
pop
leave
sub
cmp
bound
xor
aad
mov
or
call
data16
lcall
jno
cmp
mov
popa
add
xchg
fwait
btr
push
imul
push
and
pop
dec
lds
or
icebp
add
pop
icebp
xor
fwait
mov
jae
mov
mov
outsb
fisttpl
icebp
je
dec
cld
int3
xchg
inc
lock
shll
repnz
pop
mov
xchg
mov
push
and
pop
test
or
fldcw
stos
jae
jecxz
lahf
xor
fcmovnb
repnz
in
jp
int3
cmp
inc
das
jbe
or
rcl
sub
xor
je
adcl
jecxz
in
sarb
or
or
cmp
inc
xor
dec
jbe
cs
ret
pop
and
data16
mov
cmp
push
lcall
arpl
pop
sub
add
loopne
fbld
dec
into
and
jecxz
fistpl
js
rcr
push
dec
xchg
add
mov
loope
cmp
and
inc
test
loopne
sbb
jae
mov
inc
fldcw
and
adcl
xchg
nop
xchg
inc
jae
in
push
mov
or
shll
daa
xchg
movb
jmp
xorb
xchg
movsb
out
div
aas
lods
xchg
mov
pop
lods
add
and
or
or
mov
fisubl
insb
inc
ss
push
cs
adc
mov
iret
fists
xchg
cmp
pop
mov
sbb
cmp
scas
sarb
push
outsb
pop
dec
adcl
xor
loopne
mov
dec
pop
mov
xchg
mov
adcb
pop
out
mov
sbb
adc
and
cmp
lcall
adc
mov
adc
aad
stos
inc
push
pushf
aam
into
sbb
xchg
mov
das
insb
push
mov
into
xchg
std
int
dec
js
sbb
xchg
xchg
fwait
xchg
sub
popf
rcrb
fisttpll
add
fs
das
rcll
lods
cmp
in
lods
sbb
sub
jbe
mov
and
add
xchg
movsb
adc
aas
xor
imul
mov
imul
dec
mov
aad
shl
or
jo
addr16
jo
ret
fs
jo
xor
inc
mov
lahf
jo
or
movsb
jb
dec
hlt
test
dec
xor
dec
sbb
lock
fwait
mov
rolb
dec
sti
or
dec
lods
scas
xor
cltd
lret
fimuls
mov
xorb
sti
mov
gs
lods
cmp
out
aas
sub
ret
pop
in
push
hlt
cmpsl
loopne
and
cmp
mov
dec
dec
negl
icebp
addr16
dec
adc
hlt
jnp
pusha
xchg
negb
clc
fwait
jo
or
lock
fisttps
pop
into
sarb
fdivrs
inc
add
jecxz
imul
add
mov
stos
dec
push
movsl
mov
inc
mov
pop
mov
arpl
mov
arpl
shlb
dec
cmpsb
stos
sbb
dec
jge
lods
inc
xchg
push
cmpsl
popf
movsl
mov
mov
mov
xchg
xchg
cwtl
and
insb
mov
stos
lret
pusha
lahf
pop
iret
xchg
std
faddp
std
xchg
xchg
sbb
push
cmp
mov
xchg
and
push
mov
xchg
cmp
repnz
outsb
fisubrs
in
es
out
aam
pop
popa
mov
cmpsb
ljmp
sbb
xor
adc
add
cmp
cmpsl
dec
popf
sbb
fisubrl
stc
add
xor
and
push
cwtl
cwtl
jns
mov
dec
jo
sub
add
shlb
sbb
dec
je
pop
xchg
cmp
jp
or
jmp
add
cwtl
in
mov
int3
imul
cmp
push
icebp
adc
and
icebp
mov
fs
cs
sbb
adc
jg
test
fs
mov
stos
dec
rorl
int
cmpl
and
cmc
xchg
mov
int3
adc
call
dec
cmp
mov
arpl
xchg
lcall
mov
test
dec
mov
cmp
ds
push
roll
sti
inc
xor
push
or
push
mov
cmp
stos
divl
lea
and
rol
pop
mov
or
iret
enter
test
aas
inc
dec
mov
pop
xchg
sti
int3
mov
fnstenv
pop
inc
shrl
cmp
pop
jmp
and
lea
jge
pop
jmp
push
push
pushf
push
jb
bound
sub
stos
mov
jne
and
fs
and
mov
shlb
jp
outsb
and
fstps
das
sub
adc
mov
push
call
test
rorl
xlat
xorb
scas
daa
xchg
daa
ja
lcall
mov
imul
icebp
dec
test
shll
ljmp
sbb
pop
xchg
ficomps
mov
sti
jnp
ss
das
add
xchg
xchg
jbe
enter
push
bound
and
jb
in
sub
dec
mov
push
das
lods
js
ds
xchg
ja
cmp
repz
mov
sub
cwtl
xchg
dec
gs
cmp
and
int
or
leave
rolb
incl
ljmp
data16
pusha
stc
stos
call
shll
test
add
int3
int3
dec
xchg
jb
test
loopne
cmpsb
sub
stc
leave
cs
sub
clc
icebp
inc
cmp
adc
mov
fstps
dec
mov
xchg
add
pusha
ss
pop
cwtl
mov
cltd
lock
mov
pop
or
popa
cld
outsl
lock
xlat
mov
ret
jbe
jg
lret
jb
pop
leave
cpuid
or
mov
enter
xor
dec
mov
jmp
dec
pop
mov
fsubrp
adc
jmp
jle
shrl
out
stc
pushf
enter
mov
dec
pop
xor
inc
or
lret
fistl
cmp
push
in
inc
fildll
fisttpll
mov
xor
push
push
or
fiaddl
or
push
addl
jl
mov
or
sbb
es
sbb
loope
addr16
xor
adc
repnz
aaa
aad
mov
arpl
insb
pop
mov
lods
cli
gs
mov
add
jb
jbe
mov
mov
imul
jns
inc
inc
add
cmp
sbb
cli
dec
add
iret
fs
inc
and
mov
subb
mov
inc
cmp
xor
addr16
insl
movsl
in
jo
mov
add
insl
xor
pop
mov
das
fsubr
xor
cli
sub
push
sbb
pushf
movsl
xchg
sub
sbb
insl
pop
inc
repnz
call
xchg
pop
cs
stc
ret
addr16
loopne
sbb
rcrl
pop
xchg
pop
push
rcrl
mov
insb
outsb
add
ret
mov
pop
pop
int3
sub
jb
rcll
cltd
jmp
popa
add
xor
cmp
imul
dec
push
push
jne
inc
shrb
data16
movsl
jle
test
dec
in
arpl
lock
cmp
lods
adc
es
insl
rolb
push
sbb
jae
dec
or
xor
cmpsb
or
mov
push
jp
pusha
neg
xor
and
jnp
cmpb
out
outsl
and
jae
jns
rorb
clc
jne
pop
adc
dec
xlat
sub
mov
jns
pop
cli
sub
sbb
aaa
adc
cmpsb
aaa
and
sub
pop
aas
mov
xlat
pushf
lret
push
push
out
test
jb
enter
stos
ret
mov
xor
xchg
add
sub
mov
test
out
aaa
test
imul
inc
shrb
mov
dec
stos
das
push
scas
scas
loope
pop
fucomi
incl
xchg
insb
mov
aam
arpl
fs
pop
out
or
inc
xor
sarb
push
mov
pop
sub
sub
sarl
stos
add
shrb
ficoml
jle
repnz
add
fwait
jl
movsl
je
cmp
out
and
mov
fsub
mov
xchg
fs
jg
notl
aam
pop
pop
lahf
add
adc
jl
pop
out
push
gs
mov
cld
push
add
mov
or
mov
mov
fldl
push
fnsave
jp
jns
sbb
inc
push
xchg
xchg
dec
outsb
cwtl
and
outsl
adc
add
sub
fbld
push
mov
mov
inc
jl
pusha
es
sub
loope
sub
or
je
push
mov
out
mov
test
pop
or
frstor
in
sub
and
jge
in
inc
push
dec
push
inc
ja
and
mov
cltd
pop
add
add
pop
mov
out
add
pop
scas
cmp
xor
pushf
sub
dec
scas
jge
or
jno
jnp
add
pop
fwait
cltd
mov
sarl
lods
int
or
xchg
sub
cwtl
lods
sub
jo
mov
push
inc
ret
ljmp
mov
mov
xor
jmp
jnp
pop
lret
rolb
cmp
sahf
dec
xchg
or
or
daa
or
test
cmp
mov
dec
add
int
loope
ss
pop
int3
inc
ds
imul
sbb
movb
sti
cmp
loopne
adc
jne
pop
mov
dec
xchg
les
mov
jle
inc
sub
dec
shrb
jmp
mov
sub
addr16
xor
je
loop
cmc
cmpsl
xor
push
mov
aaa
fwait
push
imul
pusha
push
out
int
iret
cmp
jg
sarl
daa
rolb
adc
cmp
dec
adc
and
dec
mov
sti
rolb
std
sarl
in
jo
out
mov
push
addr16
lret
call
out
xlat
lret
and
pop
aas
aas
in
insb
adc
rcrb
jl
adc
in
icebp
mov
imul
iret
jge
sbb
fsts
out
sub
or
add
insl
addr16
sbb
xchg
sarb
cmpl
push
cltd
mov
lret
or
dec
aad
sub
mov
mov
loop
lods
mov
imul
add
jle
test
push
push
test
push
mov
adc
fwait
xchg
mov
push
pop
adc
ret
scas
into
movsl
jp
daa
fcompl
hlt
subl
dec
aaa
and
in
pop
aad
leave
pop
lret
test
sarl
std
cmp
icebp
jg
mov
push
sub
popf
aam
mov
rol
outsl
lcall
mov
arpl
mov
xchg
mov
imul
add
push
push
jg
adc
mov
shll
sbbl
xor
add
add
mov
in
push
sbb
daa
ds
push
push
orl
ds
clc
jnp
adc
lret
int
inc
test
push
add
enter
dec
xlat
ja
ret
mov
push
pop
sbb
mov
sub
jns
cmp
shrb
or
call
arpl
loopne
add
loop
aaa
mov
and
sub
or
jne
ror
shl
xor
mov
outsb
jbe
pop
dec
gs
cltd
push
cmp
inc
jg
pop
dec
stos
push
popf
mov
in
movsl
inc
lret
pop
aam
xor
push
xchg
cltd
cs
xor
sub
outsb
cmp
roll
xor
or
hlt
sbb
or
xor
push
repz
inc
rclb
mov
scas
mul
rcll
icebp
fwait
aam
pop
negb
and
inc
sar
pop
sarl
fstl
xor
arpl
imul
jp
add
std
insl
mov
lock
icebp
cmc
mov
imul
shrl
mov
shl
cmc
outsb
mov
popa
nop
loopne
add
ja
push
orb
mov
in
cltd
inc
inc
jns
cld
add
cld
mov
call
lea
push
filds
mov
pop
jecxz
mov
jecxz
mov
xor
xchg
test
adc
leave
pop
dec
mov
lock
icebp
in
rcrb
cmp
pop
adc
xchg
js
fisubs
mov
jbe
xchg
negb
ja
or
cmc
dec
fdivs
popf
lock
js
and
leave
test
jmp
outsl
mov
pushf
xor
outsl
in
test
out
lods
push
imul
call
lds
push
lahf
mov
xchg
jo
ljmp
or
lret
out
push
imul
subb
jg
push
fnstsw
sub
xchg
incb
mov
push
jecxz
mov
orb
and
ficoml
add
rolb
pop
mov
in
inc
roll
clc
cltd
dec
push
pop
test
int
xchg
cltd
xchg
roll
outsb
dec
cltd
shrb
fcmovb
push
out
push
ret
ffreep
jge
jmp
hlt
pop
pop
mov
jb
pop
idivb
out
aam
stos
and
xchg
sbb
shr
jb
sbb
or
adc
add
popa
lods
addr16
inc
inc
cmpsl
lret
cmpsl
xor
jmp
dec
fnsave
xor
cmp
or
inc
dec
aas
mov
in
sahf
or
cmp
cmp
leave
repnz
and
add
inc
mov
popf
add
add
into
sub
or
movsb
xlat
sub
pop
xchg
xor
andb
test
pop
out
inc
jecxz
inc
aas
cmp
xor
pop
jnp,pn
push
mov
and
and
mov
arpl
mov
ja
jg
andl
jnp
movsb
xor
int3
rcll
hlt
mov
aas
dec
shrl
ds
mov
mov
add
push
rorb
or
ja
pop
sub
lods
mov
jecxz
mov
push
test
pop
iret
mov
sub
jno
shr
xchg
push
div
or
bound
fsubrp
push
jae
mov
xor
stos
add
inc
and
mov
sbb
aad
jne
mov
jmp
pushf
inc
jecxz
fsubrl
push
add
add
int3
mov
sbb
cmpsl
jge
mov
cli
mov
mov
lcall
dec
dec
mov
sub
pop
roll
in
nop
add
pop
mov
in
fwait
pop
sub
xchg
cltd
adc
cltd
cmp
leave
in
cmpsl
shll
mov
push
pop
cmp
cmpsb
push
mov
mov
push
sub
and
je
ret
out
sbbl
fisubl
xchg
and
sahf
mov
mov
mov
inc
xchg
jecxz
mov
lret
iret
mov
test
addr16
mov
loopne
sub
leave
arpl
xchg
mov
cltd
out
sub
dec
push
test
cwtl
xor
sbb
daa
rep
cltd
imul
xchg
sbb
or
or
dec
xchg
sbb
nop
mov
adcl
sbb
ret
xlat
out
leave
mov
cmpsl
mov
bound
stc
jmp
jge
fldenv
test
mov
and
sub
daa
push
cld
xchg
dec
mov
cltd
or
and
jmp
or
lcall
sub
and
loop
mov
pop
cbtw
loopne
jns
pop
test
pop
pop
loop
std
lds
test
cmp
and
faddp
sub
inc
dec
push
dec
insl
js
cmpsb
call
or
cmp
sub
pop
ds
cmp
clc
iret
lea
outsb
dec
mov
into
dec
lret
int
sbbl
popa
add
mov
push
pop
jns
out
mov
push
insl
filds
mulb
jnp
mov
lcall
repz
lock
std
scas
inc
mov
inc
push
loop
jle
cmp
pop
jne
mov
popa
dec
xchg
insb
sahf
cmc
call
cmp
lds
mov
pop
mov
jp
nop
mov
bound
mov
int3
iret
jb
lret
gs
pop
add
push
imul
push
testb
or
out
adc
cwtl
push
test
or
sti
push
addr16
xchg
jne
std
test
lahf
jb
popa
lods
cltd
dec
enter
dec
pop
mov
adc
icebp
mov
mov
dec
fsub
outsl
stos
and
mov
mov
mov
shll
stc
cmc
sti
icebp
jmp
xchg
mov
incl
mov
popf
loope
shll
push
jb
loop
mov
ret
aas
lret
pop
inc
sub
sahf
mov
pusha
cmpsb
addr16
and
and
adc
jb
mov
loop
rcl
rol
mov
mov
fimull
sbbb
or
xor
fs
adc
aas
ret
call
pusha
cmp
lcall
pop
mov
and
pushf
mov
imul
aad
ds
test
enter
cmp
movsl
inc
push
mov
popf
loopne
pop
call
jp
insl
mul
mov
jne
movsl
std
xchg
aad
push
inc
ret
in
lds
fsubs
in
jp
push
add
movsl
jl
sahf
aaa
shrb
dec
fisttpl
iret
mov
in
popa
push
insl
test
cli
jbe
mov
xchg
pop
std
inc
and
leave
and
xor
sbb
sub
hlt
lret
jo
or
ss
push
gs
bts
sub
xor
sar
cmp
js,pn
push
popf
int
xor
push
xlat
add
in
mov
mov
cmp
dec
out
cmp
enter
push
sub
sti
dec
mov
ds
jne
pop
popa
sbb
and
jae
rcrl
call
jl
xlat
les
jp
test
call
pop
sbb
je
add
add
subb
and
es
out
jmp
pushf
std
push
loopne
ljmp
mov
ret
dec
jecxz
push
scas
mov
xor
test
test
mov
in
xchg
ss
jmp
sbb
inc
lcall
mov
inc
adc
ret
pop
mov
ljmp
mov
jp
stc
adcl
jg
mov
xchg
in
add
daa
push
mov
push
push
addb
xlat
or
push
and
and
sbb
loope
xlat
push
dec
jnp
imul
lock
repnz
je
out
push
push
fs
pop
sub
xchg
add
mov
inc
enter
dec
or
jg
add
pop
mov
test
mov
adc
lods
push
push
andl
icebp
scas
jle
out
and
mov
xchg
or
lock
dec
xchg
jns
push
push
jge
bound
js
add
sarb
jae
jo
xor
jo
sub
sahf
push
cwtl
cli
push
xor
rcr
xchg
mov
dec
movsb
jae
lret
xchg
bound
and
dec
movsl
push
lahf
rol
ss
ret
cmp
and
inc
add
test
lahf
inc
push
sbb
aad
mov
pop
data16
lods
ja
lcall
push
and
fsubs
lahf
pop
andb
dec
repz
jno
xor
pop
xor
push
or
mov
std
or
xor
mov
xor
pop
adc
sbb
addr16
dec
daa
and
cmp
sbb
or
cltd
jae
dec
int3
lds
aam
out
or
mov
pop
sbb
xchg
cld
sbb
shll
int3
fsts
rorb
mov
sub
sbb
sub
outsb
inc
cmp
in
adc
nop
ljmp
and
xorb
daa
out
adc
inc
icebp
pushf
and
das
movsl
jg
inc
fnstcw
mov
add
shll
dec
clc
jmp
outsl
popf
dec
mov
adc
pavgb
adc
fistps
cmp
cli
jno
arpl
out
retw
lock
jge
pop
sbb
sub
sbb
loopne
stos
mov
sbb
jmp
adc
xor
push
jbe
pushf
dec
and
push
jns
stos
andb
dec
mov
out
push
sbb
lods
jno
mov
outsl
mov
into
and
and
int3
mov
sub
mov
loope
push
movsl
mov
lock
imul
enter
icebp
imul
loope
jmp
dec
and
mov
jb
add
sub
test
cmp
lea
mov
sub
cmpsb
fistps
ret
xor
inc
orl
cli
xor
pop
xor
dec
js
fcmove
call
inc
xchg
movsl
jl
frstor
add
scas
icebp
fcomp
pop
add
inc
lahf
js
fcompl
loope
fnstsw
mov
and
xor
mov
jns
imul
scas
push
stc
and
jne
fmull
dec
fmuls
lret
dec
pop
aad
in
inc
sahf
sbb
pop
mov
push
lock
mov
push
mov
fsubl
fidivrl
mov
jmp
jo
jmp
inc
pop
dec
js
js
clc
daa
pop
lahf
mov
lods
call
loopne
pop
loop
fdivp
dec
dec
call
cmpsl
stos
mov
adc
repz
inc
fdivr
inc
ret
repz
mov
mov
into
cwtl
mov
jnp
sti
inc
enter
lds
add
lods
push
mov
add
mov
push
adc
add
push
std
mov
es
push
div
stos
movsb
xchg
pop
mov
xor
addr16
sub
in
js
scas
loope
mov
adc
jbe
sahf
push
add
popf
adc
in
push
in
sbbl
scas
rcrb
or
cmp
js
lods
mov
iret
inc
adc
push
scas
shl
push
or
in
aam
mov
or
das
inc
jne
inc
push
sti
xchg
pop
aaa
push
or
pop
xchg
mov
mov
add
loop
push
dec
flds
xor
pop
les
aaa
movsb
sbb
cli
push
pop
mov
lock
scas
imull
popa
mull
dec
and
repz
add
dec
mov
loope
inc
ja
sbb
push
movsl
fmull
jo
adc
dec
int
push
xor
cltd
and
arpl
ja
and
icebp
nop
int
cmp
and
or
mov
out
mov
fstpl
into
inc
and
jae
into
push
mov
cmp
sahf
mov
push
in
push
add
andl
xchg
mov
xor
mov
sar
pop
add
dec
mov
enter
out
call
add
push
insb
nop
das
icebp
xchg
mov
xor
rep
es
add
pop
arpl
xchg
mov
jmp
xor
mov
mov
push
pusha
out
mov
mov
adc
pop
sub
and
pop
out
sti
das
inc
jne
sarl
clc
jae
xchg
cwtl
sub
push
cs
xchg
ss
sbb
and
pop
dec
aaa
loop
xor
mov
mov
rclb
arpl
pusha
js
inc
mov
fldl
mov
ja
push
mov
fs
test
rolb
jp
xchg
lret
xchg
push
adc
cltd
mov
sub
dec
leave
sub
test
call
xchg
fwait
int
lock
cmp
pop
pop
adc
in
mov
outsl
insb
mov
gs
std
add
fsubrl
cmc
sub
adcb
insl
sbb
outsb
adc
adc
jmp
in
and
jge
rclb
jne
in
xlat
gs
cmp
rorb
shrb
cmp
dec
push
pusha
push
mov
sti
adc
out
pop
js
and
xor
lods
js
loopne
xor
xor
mov
push
movsl
loopne
shrl
push
test
test
sub
stos
out
dec
lea
push
mov
iret
in
adc
add
add
andb
lahf
push
or
test
pop
jecxz
outsl
sbb
movsl
scas
and
enter
dec
out
and
jle
imul
or
lgs
xchg
cmp
jo
out
daa
pop
lods
das
xor
test
mov
inc
inc
sub
test
lret
addr16
movsb
fwait
pop
ret
xchg
dec
dec
jmp
cld
data16
add
test
je
test
cmp
xchg
icebp
sub
js
sub
into
in
into
dec
jecxz
mov
icebp
ret
push
fdivrl
mov
into
jo
mov
rol
push
dec
push
push
lock
enter
enter
sbb
lea
jl
clc
ljmp
clc
insb
popf
xchg
sub
stos
subl
subl
cmpsb
cmpsl
push
push
cld
sub
adc
or
pop
decl
sbb
lea
pop
out
dec
cmc
inc
xor
push
inc
lods
mov
push
mov
and
xchg
xchg
jecxz
xor
dec
push
or
xchg
adc
xchg
inc
jl
xchg
test
or
dec
ficoms
rolb
add
dec
out
dec
dec
push
mov
mov
sahf
enter
fst
adc
xchg
popw
ljmp
adc
es
ficompl
pop
lods
inc
add
sbb
scas
sarl
daa
inc
les
dec
fstps
out
push
mov
adc
in
out
into
cmc
rolb
mov
sbb
cmpsl
lcall
or
xchg
fimull
hlt
cs
mov
push
int3
sti
inc
jg
mov
and
cltd
les
inc
fisubl
cmp
sub
ret
daa
xchg
jno
and
pushf
orl
xchg
aam
and
dec
loop
add
flds
jmp
int
xor
xchg
icebp
les
mov
fs
mov
insl
int
nop
pop
xor
fsubrs
mov
test
cli
aas
lret
pusha
jbe
cli
mov
scas
lcall
xor
push
iret
or
xchg
mov
adc
sbb
je
enter
fidivs
adc
xor
out
dec
imulb
shl
mov
mov
shll
push
fadds
ja
dec
repz
dec
and
mov
aam
shrb
push
add
adc
ret
test
movsb
pop
mov
push
aas
pop
dec
pop
jmp
push
add
lods
sti
cmpsb
mov
adc
test
add
push
push
add
cmp
push
decb
out
cli
loop
or
mov
xchg
pop
push
enter
andl
push
mov
cmp
andl
jnp
fcoms
outsb
fisubs
or
mov
mov
cmp
std
fsubl
sub
test
nop
lcall
dec
inc
lcall
icebp
gs
and
imulb
dec
bound
out
push
or
fsubl
arpl
xchg
pop
inc
lea
shlb
cmp
jge
jl
jge
pusha
cmp
test
and
push
cltd
jae,pt
fdivr
iret
add
lods
popf
pushf
addl
mov
mov
mov
es
add
add
or
add
outsb
fsts
enter
fldcw
jecxz
push
dec
fs
dec
das
mov
pop
sub
incl
jno
or
cmp
dec
cmp
ss
sub
and
mov
jmp
lcall
movsb
mov
insl
fs
inc
xcrypt-cfb
cmpsl
loop
fld
insl
repz
or
xlat
cmp
outsl
addb
roll
in
adc
mov
cmp
scas
outsb
cs
jmp
dec
xchg
or
sub
and
mov
pushf
shlb
in
push
mov
mov
mov
sbb
sbbb
mov
ret
and
xor
outsb
dec
movq
aam
cmpsb
pop
cmp
out
inc
aad
inc
push
test
mov
or
fiaddl
dec
dec
mov
dec
nop
sbb
stos
cltd
out
mov
mov
into
rcrl
add
sub
or
cmp
cli
sub
mov
jns
imul
jecxz
mov
pop
or
mov
scas
sbb
mov
fwait
sub
cmp
sub
enter
cwtl
cmp
lcall
push
neg
xchg
sbb
lods
mov
int3
dec
movsl
xchg
pop
xchg
xchg
loope
cld
lret
mov
xor
push
sub
mov
or
int
jbe
jg
mov
ss
out
test
inc
fcomi
pop
mov
cli
insb
ja
mov
adc
xchg
inc
out
ds
rclb
xor
lock
push
mov
mov
sub
clc
mov
scas
jmp
or
scas
sub
cli
es
xchg
lods
lods
mov
movsb
push
mov
ret
daa
lahf
call
mov
fldt
adcb
in
xor
mov
loop
jmp
nop
push
mov
dec
je
sub
in
and
cmp
sbb
cmp
pop
bound
mov
inc
movsb
icebp
leave
shl
mov
rcl
mov
push
int3
in
ret
sbb
leave
dec
lods
or
cmp
orl
pushf
iret
xor
jg
pop
sbb
int
rorb
sub
pop
add
dec
mov
icebp
push
mov
cmp
sbb
aas
cs
jno
add
push
out
bound
negb
imulb
cli
std
andl
flds
subl
in
out
push
cmp
clc
dec
fs
out
and
mov
cmp
pop
sub
movsb
add
addr16
ljmp
out
nop
cmp
jae
rolb
mov
into
xchg
inc
loop
out
adc
outsb
fildll
mov
loopne
pushf
addr16
and
aad
or
or
xchg
cmp
arpl
jp
add
mov
mov
pop
mov
divps
and
push
cmp
stos
dec
xor
fsubp
movsl
inc
sub
clc
xor
push
divl
jp
dec
add
dec
push
in
jle
and
jae
shl
mov
dec
push
add
adc
out
sbb
push
mov
scas
sub
mov
ss
cwtl
aas
pop
divb
mov
dec
pop
mov
lahf
dec
inc
cmp
mulb
std
push
mov
insl
mov
mov
cmp
or
and
inc
in
lahf
leave
sbb
std
xchg
add
cmp
sahf
aas
cmp
popf
adc
cltd
scas
ret
pop
mov
xchg
addl
adc
insb
lret
pop
in
fwait
add
cmpsb
int
into
push
xchg
bound
scas
jmp
add
pop
mov
scas
pop
pop
fmul
shll
dec
or
daa
insl
stos
mov
and
into
fcmovb
lock
popf
jle
xchg
nop
test
sahf
test
xor
data16
cmpsl
aas
jo
pslld
adc
sahf
repnz
jns
mov
sbb
pop
call
filds
adc
cs
and
xchg
mov
dec
daa
xchg
stc
mov
cmp
jae
rorb
sahf
adc
loop
addr16
xchg
cs
inc
dec
jg
add
sub
aam
imul
or
xlat
test
out
mov
pop
daa
clc
fadd
aad
xor
or
roll
pusha
bound
xchg
outsl
xchg
inc
pop
mov
nop
stos
aas
ficomps
dec
cli
dec
lcall
pop
dec
sub
sahf
in
jb
cs
data16
push
je
xor
pop
pop
mov
jb
int
cwtl
lds
jae
scas
in
dec
lahf
mov
dec
push
jo
sbb
ret
cmpsl
ja
inc
arpl
fiadds
rcrl
adc
sub
lds
cmpsl
adc
les
add
lods
xchg
and
imul
cmp
shrl
sub
cmp
xchg
lods
idivb
mov
mov
xchg
cltd
or
int3
comisd
dec
cmpsb
mov
lahf
and
repnz
xchg
in
mov
xchg
push
stos
loop
xlat
clc
xchg
jbe
or
outsl
pusha
xchg
lahf
nop
pop
dec
inc
mov
sub
sti
add
scas
dec
fcmovbe
xchg
ret
push
xorb
gs
or
jge
push
imul
cmpsl
stos
xchg
das
inc
inc
fiaddl
lds
push
lret
psrlq
or
lret
dec
mov
sbb
add
mov
push
pop
std
push
dec
sbb
test
sbb
pusha
lret
cli
mov
xor
data16
iret
and
out
stos
fwait
js
jmp
imul
sbb
lock
hlt
testl
out
into
or
jns
ljmp
dec
leave
sub
test
lahf
das
in
loope
push
in
mov
mov
testl
lods
adc
push
popf
cmp
dec
pop
or
add
lods
fsubl
fsub
inc
cmp
dec
test
out
sarl
addr16
cmpsb
shr
call
lds
filds
push
js
push
ljmp
jmp
adc
pop
mov
jmp
movsb
je
cmpl
negb
and
pop
sysret
ret
insw
daa
add
jle
in
xchg
popa
rolb
xchg
mov
shl
push
cmp
jne
cmp
lods
mov
sbb
mov
and
arpl
and
rorl
outsl
sub
mov
pop
hlt
push
scas
jns
or
push
les
jnp
and
and
dec
mov
bound
pop
rcrl
mov
xor
push
xor
clc
loopne
shrl
push
adc
iret
mov
jecxz
sub
cmp
adc
mov
cwtl
repz
divb
mov
pop
mov
push
pop
pop
shl
adc
and
sarl
mov
jno
dec
rorb
push
jle
ljmp
mov
push
popf
adc
fmull
cmp
add
fistpl
mov
xchg
shrl
and
mov
jo
insb
mov
push
jo
test
and
dec
mov
cmpsb
pusha
xchg
jb
mov
pusha
pop
stos
lock
int
sub
in
push
and
sbb
push
mov
add
adc
add
inc
out
dec
mov
in
mov
cmp
xorl
add
mov
cltd
mov
in
jl
mov
mov
jle
and
jb
mov
repz
ds
jecxz
je
jle
je
mov
or
push
pop
pop
jl
sub
pop
inc
aad
test
mov
inc
icebp
shlb
sbb
dec
cld
sub
xor
fiaddl
cli
add
ja
mov
dec
xchg
pop
decl
cmp
daa
lea
ror
push
xchg
aam
in
sahf
mov
and
inc
cmpsl
mov
popf
dec
push
mov
rorl
push
fwait
push
push
stos
pop
push
roll
push
mov
jnp
shll
add
in
pushf
push
push
xchg
mul
lods
jl
adc
cmp
add
jb
movsl
aad
xor
dec
cmpsb
add
mov
fisubrl
or
inc
or
imul
imul
or
es
popa
ss
sbb
sbb
adcb
add
add
adc
int
dec
pop
jb
dec
aam
and
test
push
out
pop
cmp
fs
xlat
test
in
adc
nop
inc
insl
jno
mov
mov
repz
sti
cs
lcall
loop
push
cltd
lods
pop
jo
cmpb
out
xor
lods
insl
sahf
ja
xchg
mov
jae
daa
pusha
loop
stos
and
dec
cmp
and
and
cld
and
add
and
gs
sbb
sub
xor
add
sahf
add
lock
mov
and
or
out
or
daa
push
and
out
mov
inc
outsl
pop
mov
lods
icebp
push
js
andl
add
or
aam
movsb
sub
and
popf
loope
or
call
push
xchg
cmp
mov
mov
and
ds
movsl
xor
ds
out
icebp
push
pop
into
sbb
rcll
cmp
lea
sahf
loopne
push
sub
aam
js
xor
lret
mov
sub
push
les
pushf
pop
je
cmp
sub
aam
sub
push
jmp
aam
xchg
mov
fsts
cmp
test
cmp
cmp
and
jp
scas
in
sbb
js
test
lods
mov
int
cld
push
push
push
adc
call
or
xchg
mov
add
mov
stos
popa
adc
mov
cmp
and
jno
dec
or
jno
outsb
roll
daa
loope
mov
mov
mov
push
sbb
out
hlt
mov
sub
xor
test
les
adc
insb
dec
inc
sbb
jg
mov
pop
lock
subb
push
dec
push
or
out
lea
repnz
stos
push
scas
rclb
add
cmp
sbb
push
or
mov
hlt
mov
push
cld
xchg
add
xchg
pop
dec
push
cmp
in
mov
push
and
fdivs
outsb
jne
ds
in
sub
inc
mov
data16
rol
xor
or
out
push
adc
and
lcall
jmp
inc
xor
sbb
std
cmpsl
sahf
popa
cli
jge
fistps
pop
arpl
pop
push
sbb
jmp
cltd
jmp
mov
mov
xchg
sahf
fs
cmp
rcl
xchg
fidivs
les
jp
sbb
clc
test
pop
ret
mov
pop
jl
pusha
adc
add
add
mov
shl
out
xor
jp
or
test
test
pop
fst
in
call
ds
repnz
and
sub
mov
inc
movsl
xchg
lahf
jmp
sub
lret
sti
or
mov
sub
jp
adc
sbb
adcb
mov
pop
mov
lods
or
mov
fxch
xchg
cmp
or
mov
mov
les
push
mulb
addb
inc
add
sub
xchg
and
inc
lods
xchg
adc
std
es
xor
sbb
icebp
cli
out
xor
popa
test
jnp
sahf
in
cmp
shrb
adc
jle
repnz
je
fsubrl
int3
jno
loop
inc
testl
cmpsb
lret
imul
and
add
sbb
imul
fstps
inc
lock
int
cmovae
or
push
cwtl
pusha
sbb
and
iret
push
add
adc
and
pop
out
les
pop
cmp
jle
or
push
in
outsb
mov
and
xor
movsl
nop
push
inc
jecxz
insl
lcall
dec
mov
rolb
add
dec
cmp
add
out
xor
js
rcrl
subb
fists
add
rol
pusha
sysexit
or
pop
adc
roll
imul
cwtl
sub
push
adc
divl
out
outsb
repnz
jp
js
ja
xor
pop
push
jb
cs
stos
leave
lcall
sub
pop
popa
in
nop
mov
shr
shll
les
into
cmp
aad
xor
sbb
xchg
sbbb
cmpsb
adc
and
popf
sub
push
push
scas
mov
xchg
loope
repnz
mov
inc
lods
sbb
inc
insb
jne
xor
cli
int3
mov
in
aam
sbb
insl
or
sub
fildl
ret
in
mov
cmp
jb
xchg
push
jbe
mov
mov
jns
sub
out
data16
les
push
xchg
xchg
imul
shll
hlt
mov
or
jmp
sub
leave
dec
icebp
test
outsl
hlt
cld
add
add
call
sbb
fwait
jno
addr16
cltd
jbe
nop
imul
mov
push
cmp
fs
xchg
cli
push
mov
dec
add
pushl
das
divb
mov
push
aaa
loope
fmull
sbb
sub
fisubrl
pop
sub
mov
adc
sar
jp
xor
xchg
les
mov
adc
je
push
xor
movaps
rol
ret
insl
dec
movsb
jmp
jg
xor
add
sub
ja
das
out
das
cmp
test
lahf
sub
mov
adc
push
add
aad
and
jp
div
xor
mov
mov
mov
add
dec
out
add
loop
cmp
ret
dec
shll
sarb
push
vpmulhuw
lods
int3
stos
and
ljmp
fstpt
or
fcompl
xlat
push
mov
sbb
sbb
fcomip
nop
addr16
fs
xor
mov
lea
mov
leave
jbe
aad
movsb
inc
cld
cmp
into
push
and
aas
cmp
in
mov
push
adcl
sarl
dec
push
rolb
jecxz
das
hlt
pop
push
sub
lcall
aad
lods
or
mov
enter
xchg
and
sub
lahf
incl
dec
lock
pushw
icebp
test
and
mov
mov
mov
cmp
mov
xchg
sub
fidivrl
inc
jo
shrl
lahf
mov
pop
push
add
addr16
rcl
sbb
fdiv
cli
push
into
add
mov
mov
mov
and
inc
iret
sbb
les
gs
into
decb
popf
cmp
xor
test
push
xor
out
pop
adc
pop
mov
and
xchg
push
jl
or
nop
push
adc
xor
test
xor
pop
mov
fwait
int3
or
or
out
es
and
addr16
jecxz
xchg
or
push
iret
out
jnp
stc
mov
inc
xor
sub
data16
pop
outsb
inc
rol
cmpsl
lcall
cmp
mov
shl
cmp
pop
pop
pop
aas
shrl
pushf
inc
clc
mov
adc
repnz
push
call
add
add
mov
mov
in
and
rcrl
mov
into
das
push
mov
dec
pop
inc
or
pop
or
sub
cs
push
lcall
in
roll
fisttpll
in
mov
add
inc
adc
dec
dec
leave
inc
lret
cmpsb
inc
out
bound
xchg
stc
push
lea
push
xchg
sub
jns
cmp
mov
cmp
dec
negl
lahf
adc
fildl
xor
je
movsb
xor
loope
cmp
mov
jns
negb
cmp
pop
jmp
and
fwait
sub
aas
lcall
or
sbb
push
ret
cli
inc
pop
sahf
in
pop
inc
or
pop
jns
push
call
mov
adc
inc
int3
mov
xchg
add
jle
inc
push
pop
mov
adc
pushf
jb
rcrb
pop
jmp
cmc
adc
inc
jnp
or
dec
pop
hlt
mov
dec
mov
pop
jecxz
and
call
fcmovbe
hlt
adc
mov
mov
adc
inc
ret
loopne
dec
cmp
addb
pop
and
mov
mov
call
lds
rcll
popa
inc
and
cltd
mov
jb
imul
in
push
int3
mov
cmp
aaa
movsb
adcl
mov
in
mov
sub
add
or
inc
test
pop
idivl
dec
pop
sub
out
add
cmp
mov
sub
jecxz
xlat
xchg
inc
addl
xor
imul
loope
cld
or
and
add
mov
das
repz
push
ja
push
sahf
mov
pop
mov
mov
fcmovbe
lods
rcrb
stos
jns
xor
push
sub
lret
lcall
inc
or
pop
scas
lret
inc
push
xor
dec
outsb
push
in
mov
mov
js
pop
out
es
sbb
insl
and
sbb
lea
pop
and
jbe
jmp
daa
adc
mov
xor
mov
inc
fmull
mov
jb
sbb
jp
test
movsl
dec
hlt
pop
jmp
movsb
test
rcl
push
mov
repnz
fwait
sbb
rorl
ret
pop
movsb
out
xchg
imul
mov
jbe
loope
pop
mov
xor
jmp
mov
dec
adc
mov
in
dec
outsl
mov
clc
adc
push
int
add
pop
cli
stc
jns
lock
sub
rcll
jns
mov
roll
cmp
sub
push
push
and
lds
ud1
mov
fdivs
xor
in
adc
std
das
insl
fxch
jl
sbb
sub
loopne
or
xchg
jne,pn
fwait
dec
clc
outsl
and
cmpb
cltd
mov
sar
pop
test
scas
mov
inc
and
aam
mov
pop
xor
aam
pop
mov
dec
sub
inc
dec
scas
jl
mov
pop
das
test
repnz
add
arpl
hlt
sub
pop
sub
push
mov
inc
dec
xchg
cli
cmpsl
sub
ljmp
arpl
cmovp
gs
sti
mov
popa
or
aad
fisubs
imul
cwtl
cmp
push
add
int
bound
ss
sub
inc
sub
fwait
inc
fcmovbe
inc
movsl
bound
xchg
clc
cld
sub
pop
pop
idiv
push
add
sub
repz
int
out
pop
xchg
jb
rolb
sahf
pop
jno
inc
dec
pushf
mov
push
or
and
cltd
jns
sub
xor
adc
mov
roll
inc
cmp
cmp
pop
jns
adc
mov
push
popa
inc
xchg
ret
inc
iret
inc
dec
push
jmp
or
mov
mov
mov
push
movsb
mov
pop
mov
enter
jbe
xlat
pop
sbb
lods
pop
mov
int
sub
mov
daa
div
incb
pop
cmp
sahf
int3
inc
push
dec
and
insb
aam
and
pop
fwait
adc
lods
in
loopne
fnsave
imul
sub
imull
or
testl
xlat
push
ds
add
jae
testl
push
or
lods
fwait
addr16
xor
hlt
push
js
jne
addr16
push
pop
dec
bound
cs
mov
sub
roll
mov
ss
std
push
clc
mov
sbb
pop
xchg
xor
push
and
mov
jo
dec
pop
push
and
sbb
cmc
add
shll
cmc
cmp
adc
sti
inc
jp
inc
xchg
pop
aaa
xchg
dec
dec
movsl
dec
sbb
ror
sbb
and
mov
sub
fdivs
dec
nop
pop
xchg
inc
and
out
call
cmpsb
shlb
addr16
mov
jb,pt
movsb
xchg
call
out
loope
add
and
and
cmpsl
cmp
aas
fwait
push
xchg
dec
mov
loopne
xor
aas
and
pop
xchg
mov
jge
fmul
scas
bound
push
je
aaa
xchg
sub
jnp
sahf
cmpsb
pushf
in
cmp
cmp
aaa
pop
popf
scas
mov
cwtl
cmp
mov
js
lret
pop
into
sub
inc
mov
cmpsb
xchg
inc
cmc
mov
adc
adc
inc
std
cmpsb
pushf
inc
xchg
fcmovbe
xchg
mov
std
xchg
jae
inc
call
icebp
mov
adcb
sub
dec
enter
or
arpl
es
mov
ficompl
adc
and
mov
sbb
mov
enter
repz
addr16
jecxz
leave
cmp
jmp
jg
daa
sbb
mov
jnp
sub
rcll
sbb
aam
dec
push
add
fists
jne
js
test
cld
add
std
stos
sbb
sub
loop
lahf
out
lcall
cmp
out
aas
out
out
popf
sar
gs
xchg
sbb
test
imul
movsl
add
mov
loope
pop
sub
repz
sub
sub
fs
push
lret
es
sahf
jno
in
inc
popf
ljmp
rcr
js
sub
imul
loop
int3
adc
ja
imul
repnz
push
fwait
push
aam
jge
xor
aad
ds
sahf
inc
xor
aad
test
insl
les
jno
xchg
jne
adc
lock
mov
mov
pop
cmp
adc
cs
divb
inc
adc
clc
test
mov
outsb
stos
xor
add
aaa
in
sbb
leave
adc
adc
aas
rolb
mov
add
cmpsb
dec
cmc
push
inc
and
mov
push
nop
push
mov
push
mov
pop
mov
loop
stc
enter
mov
fadd
xchg
pop
add
adc
sub
movsb
pop
mov
into
mov
and
cmpl
add
mov
dec
int3
dec
orl
mov
push
dec
ljmp
ja
dec
add
xor
and
inc
inc
testl
inc
mov
stos
inc
jb
lds
pop
daa
loop
xchg
xor
je
jle
es
dec
jae
jl
imul
call
mull
and
xchg
scas
add
lods
jmp
jo
sbbb
fcomip
and
leave
out
pop
arpl
or
jbe
dec
test
and
popf
orw
adc
pop
lock
dec
cmpsb
xchg
test
mov
jo
lahf
ljmp
ss
push
in
testb
adc
sbb
pusha
mov
push
add
iret
add
out
shll
fwait
jae
push
fucomp
std
data16
mov
lret
leave
mov
arpl
rolb
aad
aaa
and
mov
push
jae
mov
dec
pushf
out
gs
cld
dec
fwait
mov
nop
roll
sub
sub
repz
out
xchg
dec
leave
repnz
jg
mov
mov
cmp
int3
loop
pop
inc
lret
inc
cmp
push
xor
mov
outsl
jno
loop
insl
pop
add
mov
xchg
pop
xor
out
push
or
inc
and
pop
push
xchg
div
fists
pop
mov
sub
mov
hlt
out
xor
sti
outsb
stos
push
enter
push
xchg
pop
jg
jecxz
int3
leave
mov
push
push
xchg
scas
mov
dec
xchg
dec
dec
push
push
pop
cli
fs
jg
dec
imull
pop
jge
sti
ja
lock
cmp
mov
lods
iret
mov
in
mov
mov
mov
sub
xor
mov
mov
std
adc
mov
mov
mov
jnp
lds
rcrb
pop
pop
adc
adc
mov
xchg
dec
jns
inc
pop
xchg
sbb
mov
add
dec
rcl
lahf
bound
out
push
test
fdivrs
gs
jge
push
out
and
loope
pop
fists
sub
add
or
and
aaa
loop
xchg
jmp
dec
cs
mov
or
push
and
and
dec
sub
mov
clc
enter
lret
push
push
mov
jl
mov
push
loope
stos
icebp
pop
xor
mov
test
sbb
xchg
arpl
mov
dec
jmp
mull
add
adc
sub
mov
stc
push
jmp
lcall
mov
sub
sub
out
int3
imul
xor
mov
xorl
daa
rcrb
hlt
mov
sub
xor
insb
sti
jbe
jl
cmp
lock
inc
mov
sub
fxch
mov
lret
add
or
xchg
nop
mov
dec
and
imul
and
outsb
enter
xor
dec
dec
cmc
lock
xchg
loope
jge
lahf
push
mov
xchg
mov
jns
mov
sub
cmp
rcll
fcom
stos
imul
loopne
mov
and
adc
call
xor
mov
aas
sub
dec
js
jmp
insl
sub
aas
cmp
enter
test
mov
out
fistl
out
cmc
test
push
sbb
in
push
lea
insb
or
outsl
push
push
mov
ss
icebp
jp
shrl
mulb
dec
bound
cmpsl
pusha
push
shl
mov
hlt
jle
in
aas
mov
in
dec
sub
push
lcall
sbb
xchg
push
cmc
fistpl
cmp
pushf
pop
sbb
aad
cs
dec
pop
ret
jecxz
push
sbb
mov
cmp
hlt
subl
fidivrl
mov
adc
lods
fsub
push
clc
outsb
mov
or
addr16
lret
popa
lea
xor
add
mov
mov
shll
cmp
cltd
mov
sub
xchg
and
fsub
mov
out
enter
loope
aas
fistl
std
jecxz
hlt
push
jmp
and
xchg
ficomps
popf
pop
cmp
insb
dec
and
repnz
in
add
cmp
cmpl
ljmp
test
xchg
sbb
mov
mov
test
call
sbbb
imul
aas
mov
cmp
and
xor
add
push
jl
adc
sub
jmp
mov
push
int3
mov
mov
aas
in
mov
mov
ror
mov
xor
xchg
sti
lds
pop
adc
mov
movsb
jge
xchg
mov
push
sbb
mov
ljmp
push
cmpsb
pop
mov
jns
mov
and
xchg
sbb
ret
lcall
scas
mov
mov
ljmp
lods
cmp
pop
aam
adc
dec
js
movsl
testl
pop
test
lcall
dec
stos
fistps
outsb
cmpb
imul
in
push
mov
lret
mulb
cli
jnp
stos
cpuid
sub
movd
or
or
shlb
xchg
pop
mov
inc
mov
test
jno
stos
pop
xchg
nop
cld
popl
pop
inc
lahf
adc
dec
adc
ja
outsl
bound
sbb
sub
test
or
lods
outsl
cs
dec
repz
inc
push
enter
lods
jnp
loope
xor
pop
mov
fbstp
fldenv
lahf
push
push
subb
aam
icebp
scas
iret
pop
sub
call
mov
sbb
pop
out
push
clc
mov
das
or
xor
xor
push
out
pop
lcall
clc
rorb
mov
xchg
enter
leave
push
stc
adc
mov
ret
inc
std
pop
test
and
rorl
jnp
out
cmp
ss
mov
pop
cli
cs
xchg
sbb
dec
movb
ror
inc
lock
ret
mov
jbe
fwait
sub
fwait
inc
test
fs
dec
mov
push
and
sti
in
mov
dec
pushf
popfw
mov
inc
sub
stos
in
test
lea
sub
sbb
mov
movsl
push
add
xchg
and
les
cld
or
les
aad
xchg
pop
ficoms
push
outsl
mov
sahf
push
jnp
jmp
test
xor
mov
aad
xor
xor
insl
lret
pop
sbb
sbb
inc
shll
nop
test
mov
aas
xorb
pop
push
fstps
mov
adc
push
insl
imul
sbb
fistl
push
stos
fimull
fidivrl
fistpll
lods
aas
sub
inc
fnsave
inc
mov
adc
lods
dec
jle
in
sbb
cmp
jecxz
and
mov
std
lock
dec
push
aam
mov
inc
mov
or
lret
cmp
mov
cmp
scas
cmc
in
pop
xchg
and
lods
cmc
sub
out
stos
sarb
sti
cmp
aaa
mov
adc
xchg
cmpsl
xchg
sub
push
dec
sbb
dec
and
movsb
mov
mov
dec
lahf
dec
adcb
test
sbb
aaa
sahf
push
lret
hlt
mov
rorb
push
fisubl
fwait
add
insl
lahf
ljmp
cwtl
outsl
pop
imul
lds
std
insb
js
into
scas
stos
mov
out
mov
adc
mov
pop
push
inc
adc
xor
xchg
insb
scas
jmp
sub
aam
cmp
mov
mov
push
mov
mov
jmp
iret
sub
or
or
nop
daa
imul
push
jb
sti
xchg
jl
cmpsb
and
jae
imull
sbb
mov
xlat
fcmovbe
push
aad
inc
ljmp
add
shll
mov
int3
and
cmp
mov
shlb
push
cld
mov
lods
addr16
pop
dec
pop
inc
in
sbb
mov
push
dec
in
sarb
adc
test
popa
out
fstpt
inc
mov
je
inc
enter
lds
inc
xor
mov
lret
mov
notb
imul
and
mov
in
mov
daa
mov
mov
les
lret
inc
mov
loopne
xor
adc
pop
mov
mov
pop
lahf
sbb
cmp
movlhps
arpl
sub
fdiv
mov
insb
add
std
jbe
pop
pop
insl
scas
iret
or
xchg
test
or
xchg
addb
in
cmp
pop
les
xchg
adc
jl
lods
xchg
aad
inc
clc
xchg
pushf
xor
and
sub
jo
addr16
shlb
pop
and
adc
mov
shrl
cmp
mov
shll
test
push
jns
and
add
les
ret
imul
cmp
jmp
adc
std
push
dec
mov
jg
mov
push
out
pop
adc
sub
adc
inc
mov
jmp
jbe
lret
mov
lea
xchg
pop
fisttps
cmpsb
mov
test
or
xchg
mov
pop
int3
push
dec
xlat
lds
loopne
jb
push
jg
xlat
out
ret
roll
mov
loope
cld
das
mov
pushf
clc
dec
push
mov
add
arpl
stos
cmp
enter
mov
leave
and
mov
lcall
inc
mov
fwait
mov
repz
jbe
pushf
push
sbb
cmc
sbb
loopne
cmp
and
dec
sub
movsl
sbb
loope
sbb
xchg
push
out
out
pop
gs
lds
mov
fisubrl
notl
sbb
sti
imul
stos
cmp
fxch
out
lea
popf
push
mov
add
mov
ja
jb
cmp
dec
pushf
push
sbb
inc
jne
imul
xor
add
jnp
mov
test
xchg
mov
dec
popf
sub
pop
pop
stc
in
insl
pusha
push
xlat
sti
stos
sbb
fs
mov
mov
hlt
hlt
andl
lods
jg
out
out
push
dec
ret
lods
push
sbb
xlat
mov
pop
mov
aaa
cmp
adc
mov
push
xchg
jecxz
loop
add
xor
in
push
lret
sbb
sub
iret
sub
cld
arpl
cmp
mov
rcll
dec
ret
mov
mov
pop
mov
shll
stos
mov
imul
jge
push
out
cmp
inc
repz
jecxz
mov
stos
ret
push
jo
dec
scas
inc
mov
xchg
and
sbb
icebp
lods
std
mov
dec
lods
rclb
xchg
jnp
push
adc
add
aaa
leave
push
loope
mov
xor
xchg
or
cmpsb
cmpsl
in
data16
movsl
andl
inc
insl
mov
out
lods
lea
in
in
enter
stos
sub
xor
sbbl
into
sub
call
or
xchg
sarl
pop
aam
mov
sbb
icebp
scas
xlat
push
jae
rorb
mov
movl
xchg
mov
dec
leave
aam
inc
loope
scas
fimull
pop
cmp
leave
inc
dec
adc
out
sbb
cmp
pushf
xchg
mov
pop
pop
popa
jb
mov
mov
test
jl
xor
xchg
fidivrs
loopne
pop
lret
xchg
sbb
mov
jae
lahf
fwait
xchg
sub
cltd
push
repz
shll
sbb
loopne
dec
int3
jae
and
mov
jp
cmp
daa
mov
mov
inc
loopne
jmp
loopne
pop
jp
push
or
push
mov
jge
test
cmp
inc
je
out
mov
mov
pop
int3
push
call
jge
and
sbb
push
inc
mov
or
testl
dec
add
jg
mov
scas
shrl
adc
lret
int
xchg
lcall
jo
call
sub
xchg
jae
in
subl
or
imul
mov
mov
pop
or
jge
in
or
dec
add
mov
orl
cmp
dec
mov
cmpsl
sbb
mov
icebp
ss
cmc
jae
pop
jge
dec
xor
mov
rorl
stos
sbb
out
lcall
out
gs
jno
or
cli
sbb
lret
cli
jmp
push
mov
sub
xchg
pusha
cmp
push
fidivrs
sbb
hlt
cs
sub
sbb
adc
pop
in
xchg
pop
incb
inc
std
mov
ret
fistl
xchg
push
out
jne
out
or
pop
mov
cmp
inc
mov
rcrb
mov
jmp
inc
xor
xchg
mov
pushf
cmp
jo
push
xchg
and
mov
xor
sbb
pop
mov
shrl
jbe
negb
inc
sub
cmp
mov
aas
into
outsb
or
mov
in
cmc
add
rclb
sub
dec
add
movsb
jnp
jmp
shrb
xchg
scas
sahf
ja
int3
orl
ret
push
lods
jnp
shll
or
es
pop
xchg
adc
inc
dec
inc
out
mov
sbb
sbb
xchg
test
and
or
and
pop
xchg
adc
std
je
jb
imul
out
jge
jne
popa
fisttpll
mov
sbb
or
jae
add
imul
sbb
frstor
dec
and
cltd
cmpsb
lahf
jns
mov
dec
mov
mov
dec
jle
mov
sub
jns
insl
or
dec
test
pop
movsl
xchg
sub
mov
or
pop
loope
lock
mov
cmpsl
enter
push
out
inc
iret
addl
push
dec
mov
cmc
cld
iret
push
stc
sub
push
std
sub
icebp
sbb
lock
sbb
gs
popf
imul
out
xor
add
dec
and
cmp
jo
aam
jb
rcrl
pop
insb
stc
data16
xchg
in
repz
mov
inc
sub
adc
out
mov
ss
lods
sbb
shr
ret
inc
adc
dec
repnz
mov
stc
add
xchg
pushf
xor
push
cmpsb
lea
enter
stos
jge
push
xor
jnp
fucomi
aam
or
ror
mov
push
js
inc
cmc
imul
sahf
push
adc
push
xlat
ret
xor
nop
adc
fadds
or
outsb
fcomip
add
test
xor
sarb
cs
fs
sub
aas
sub
lock
pop
adc
adc
cli
test
test
or
mov
pop
mov
test
jl
sbb
out
jne
shll
imul
rep
jo
mov
inc
push
test
jo
js
mov
ret
dec
adc
fcmovbe
inc
jns
mov
repnz
pushf
dec
in
mov
mov
test
dec
sbb
jge
in
movsb
cmc
arpl
insl
cwtl
sub
roll
xor
mov
mov
xlat
push
or
pop
sbb
mov
mov
dec
movsl
scas
gs
mov
in
leave
out
add
notb
xchg
mov
pop
clc
add
stc
mov
stos
imul
mov
mov
jb
dec
ret
pop
mov
std
pusha
push
add
inc
stc
push
jnp
daa
in
test
test
mov
test
add
repz
sbb
sub
enter
mov
lahf
cmp
ds
mov
cwtl
sbb
mov
movsb
stc
gs
sub
jnp
lds
pop
inc
push
fwait
sbb
outsl
movsl
sbb
add
hlt
dec
dec
arpl
aas
mov
xchg
or
push
and
mov
ficoms
or
or
or
mov
lods
clc
paddd
in
adc
nop
jmp
mov
push
mov
mov
sub
lahf
sub
sbb
sub
lcall
jbe
or
ror
jmp
sarb
dec
push
lock
and
leave
inc
test
xchg
ret
dec
push
cmpl
pop
inc
or
and
mov
mov
jmp
icebp
ret
std
and
sti
call
or
adc
fidivs
outsb
mov
stc
mov
mov
cmpsb
loop
jg
fimuls
inc
jbe
shrb
push
xor
loope
cmp
jmp
mov
mov
mov
lods
mov
mov
lcall
sbb
xor
sub
mov
xchg
js
pop
scas
sub
dec
popf
test
xor
jnp
out
and
mov
push
lcall
push
mov
pop
inc
jp
enter
sbb
insb
sbb
sbb
imul
stos
out
xchg
mov
mov
arpl
fdivl
je
cltd
mov
and
sub
mov
cmpsl
cli
sbb
and
and
mov
sub
mov
pop
sarl
mov
mov
sbb
rcrb
xor
inc
cmp
jmp
lcall
pop
mov
xchg
xchg
jg
xchg
movsl
sbb
clc
fstl
dec
jmp
jp
popa
sbb
dec
icebp
ret
les
rolb
lock
or
sbb
scas
jo
lods
stos
fdivrp
mov
test
ljmp
lret
test
and
xor
cmp
test
pop
adc
sbb
movsb
mov
cmp
lock
sub
imul
movaps
scas
out
fidivrl
add
scas
in
add
loopne
je
call
ret
sahf
adc
ja
js
jg
adc
dec
sbb
rcl
loope
pop
shl
orl
cmpsl
dec
out
daa
mov
clc
cld
cmp
int3
mov
aad
repz
jae
movsb
movlps
mov
mov
ret
cmp
push
xor
jecxz
mov
push
mov
ret
adc
shr
inc
fs
add
mov
mov
jmp
mov
call
insl
sarl
mov
jecxz
sub
mov
xor
aam
call
push
mov
add
icebp
jl
dec
pop
test
push
xchg
int3
and
adc
lds
hlt
sbb
jge
mov
jl
out
call
cs
xchg
lods
adc
into
xchg
mov
es
mov
sbbb
cld
xor
or
sbb
adc
xchg
sub
sub
mov
lahf
cli
sub
mov
lock
js
cmc
mov
stos
int
arpl
dec
push
xor
pop
loop
ret
bound
test
or
or
inc
and
lcall
mov
and
jge
push
xorb
scas
xchg
out
cmp
jo
jno
fwait
dec
into
daa
sti
addr16
and
pushl
outsb
add
ds
sub
outsl
sub
mov
inc
xor
sub
add
jle
mov
dec
pop
gs
pop
andl
mov
mov
imul
fsubrs
or
adc
mov
push
fcmovnb
lock
or
dec
cmc
xchg
aaa
iret
adc
sub
adc
cmc
dec
ljmp
add
push
in
jb
and
dec
or
pop
in
sti
lods
testb
ret
outsl
cmp
aaa
mov
cmpsb
shll
hlt
mov
outsb
jne
movsb
xchg
popa
fiadds
mov
xlat
jns
es
insl
cmc
fistpl
test
add
mov
cmp
mov
push
xor
dec
clc
dec
cmpsb
cwtl
add
aad
xchg
mov
stos
mov
or
push
inc
das
out
mov
cmpsl
lret
loopne
fwait
push
bnd
int
js
cmpsl
cmp
jb
scas
add
movsl
cld
arpl
inc
es
ret
enter
repz
and
jl
jo
rcrl
shlb
cmc
inc
in
mov
out
cltd
cs
jp
fisubrl
inc
loope
and
daa
or
into
push
lret
ja
cmpl
fidivrs
xor
lret
xchg
je
mov
stc
adc
and
push
lcall
out
iret
stc
loopne
fidivl
repnz
gs
push
xchg
mov
jnp
xor
jno
mov
mov
dec
add
jl
mov
aaa
cmp
bnd
and
add
jmp
js
leave
cmpsb
xchg
insb
popa
stos
inc
push
pop
adc
scas
je
and
mov
push
pop
mov
adc
mov
mov
push
mov
dec
lahf
push
ds
jo
dec
and
test
cmc
jmp
subl
mov
mov
pop
mov
sbb
mov
xor
xchg
push
lods
mov
pop
mov
xor
insb
notb
pushf
xchg
xchg
pop
add
xchg
ds
cmpsb
pop
inc
insl
xor
push
andl
dec
adc
pop
es
ret
jb
in
movsl
in
shl
push
sahf
mov
cmpb
ljmp
std
scas
inc
aad
outsl
jnp
movsb
mov
gs
pop
lods
lods
cmpsl
aaa
sar
js
xchg
outsl
push
mov
jo
inc
lret
sarb
stc
test
sti
xchg
sbbb
xchg
aad
mov
es
in
mov
jbe
xchg
push
mov
jl
enter
sbb
addb
mov
gs
xchg
cmp
lahf
je
test
nop
test
fdivrs
sarb
jle
mov
lret
sti
ds
sub
add
mov
push
scas
or
insb
loope
icebp
push
mov
loop
adc
fimuls
mov
mov
lahf
jae
adc
mov
addr16
popl
or
add
call
mov
push
pushf
insl
pushf
fwait
sub
lret
in
adc
faddl
scas
cmpsl
dec
push
test
into
popf
orl
xor
inc
push
inc
roll
pop
inc
popa
scas
push
rdtsc
and
loopne
cmp
std
adc
mov
stos
sarl
add
and
ds
mov
mov
add
and
xlat
mov
cmp
mov
sub
inc
mov
xor
inc
dec
cmc
xchg
jae
mov
push
scas
daa
cltd
xor
enter
lods
sbb
and
or
lcall
pop
sub
adc
inc
xor
pop
or
mov
push
stc
xor
out
pop
iret
xor
jmp
loopew
and
icebp
imul
repz
pop
mov
push
bound
ss
fimuls
push
aas
stc
mov
leave
popa
movsb
jae
movzbl
out
inc
das
mov
sbb
jo
rclb
jnp
or
lock
sarb
or
add
pop
push
cmpsl
dec
jmp
add
fisubl
in
movsl
les
mov
aam
or
mov
or
faddl
push
lcall
lahf
sbb
add
jne
mov
cld
mov
sub
iret
cmc
cmp
mov
xchg
ret
xchg
iret
mov
push
js
xchg
mov
inc
jbe
add
ds
cmpsl
push
adc
mov
jnp
repz
flds
mov
push
in
add
aaa
pop
dec
jae
test
fisttpl
movsb
jns
out
adc
fistpl
adc
movsl
in
mov
jb
out
stos
mov
inc
jp
mov
nop
mov
aam
xchg
aas
outsb
ljmp
xor
jl
jb
cwtl
jmp
lods
shll
jg
xchg
adc
mov
enter
aam
mov
insb
and
push
popf
inc
dec
mov
fstl
out
xor
in
loop
jno
ret
pop
xchg
inc
inc
jnp
push
xchg
ds
clc
out
ret
loop
std
mov
lret
outsl
sub
and
add
lods
adc
enter
lahf
dec
pop
repnz
lahf
test
outsl
addl
ss
ret
lret
fs
rcr
faddl
mov
int
cli
mov
add
adc
mov
and
inc
mov
fcomp
rcrl
push
out
and
out
inc
push
sub
jmp
mov
jmp
insb
sahf
mov
dec
mov
cmpsl
dec
or
pop
sbb
in
xorb
dec
cmp
movsb
outsb
js
loope
mov
pop
out
shlb
adc
xchg
inc
jae
adc
sbb
cld
insb
inc
pop
dec
je
jne
int
pop
fimull
push
pop
mov
incl
sbb
outsb
paddsw
sbb
jp
or
mov
mov
mov
jbe
add
pop
pop
rolb
dec
ret
cld
aam
add
pop
mov
lcall
daa
flds
inc
xchg
adc
inc
testl
xchg
imul
inc
nop
mov
je
xor
or
mov
call
out
movsb
xor
push
fs
outsl
pushf
cltd
and
or
gs
dec
arpl
dec
lret
orl
cld
xlat
fs
mov
jae
scas
stos
and
sbb
mov
sbb
lock
add
push
xchg
mov
jb
packsswb
mov
jl
mov
mov
mov
push
mov
lds
mov
scas
imul
pusha
mov
and
xor
fwait
dec
pop
imul
scas
sub
addb
push
fbstp
push
and
out
pushf
daa
mov
sahf
xchg
cmpsb
lret
arpl
aam
and
dec
aas
js
insl
daa
push
sbb
orl
mov
mov
pop
or
ds
fnstcw
pop
sub
mov
xchg
es
jp
aam
jo
mov
inc
sbb
out
mov
popf
stc
pop
lret
je
aad
call
sub
sti
mov
in
adc
mov
movsb
cmpsb
sbb
sahf
jg
inc
adc
add
and
inc
and
push
movb
dec
aad
xchg
adc
gs
xor
movsl
mov
roll
into
add
mov
sbb
inc
sub
jns
dec
jl
pop
cli
insl
aam
adc
mov
insl
into
icebp
and
ss
inc
push
cmpsl
mov
pop
push
sbb
shll
xchg
addr16
loope
sub
pop
cld
jge
das
repz
sbb
push
dec
jb
push
fnstsw
daa
mov
ret
aaa
inc
test
jmp
push
mov
sub
sbb
xor
or
mov
test
outsb
notb
xadd
sbb
cs
dec
mov
aad
rcrb
cmp
lret
pop
dec
inc
push
outsl
es
and
dec
cltd
jnp
jl
jecxz
mov
sub
ret
dec
fld
xchg
stos
pushf
sub
imull
pushf
lcall
js
shll
cmp
stos
and
ds
xchg
mov
out
test
sbb
cs
imul
or
stos
pop
lds
jmp
loopne
daa
mov
loop
outsl
fcmovbe
ljmp
xchg
fwait
data16
add
xor
dec
out
pop
addl
or
cmc
in
mov
test
xor
in
lcall
jmp
ss
and
cltd
int3
lcall
aaa
imul
sahf
gs
xlat
insl
pop
mov
add
int
pmaxub
mov
xor
pop
arpl
xor
nop
cmp
sbb
jge
lods
arpl
rcll
xlat
inc
xchg
mov
aad
xor
and
mov
aas
cmpsl
int3
xchg
push
mov
imul
and
lds
lret
std
adc
inc
jns
mov
push
es
push
stos
push
inc
call
rol
sbb
dec
mov
mov
repnz
cmc
xchg
test
dec
out
cli
js
or
ret
mov
xchg
cld
mov
jno
sbb
test
lcall
les
das
dec
sub
jecxz
out
xchg
das
inc
cmp
mov
sbb
push
adc
insb
leave
xor
pusha
dec
push
lods
jne
cltd
insb
aad
pop
sbb
insl
mov
push
cmp
push
mov
cmc
fildl
adc
sbb
adc
push
test
or
shlb
push
mov
xor
jecxz
cmp
sbb
or
mov
mov
and
sbb
jo
push
or
out
ret
push
pop
adcb
fdivrs
sbb
sbb
out
mov
fs
scas
dec
mov
mov
adc
inc
push
cmp
or
push
pop
push
xchg
cmp
jp
dec
mov
fisubrl
and
icebp
pop
data16
mov
jae
mov
lock
sbb
sub
outsl
daa
jge
xchg
xor
fadds
inc
loopne
pushf
fstpt
loop
push
push
dec
adc
or
mov
ss
dec
fldl
xchg
std
data16
nop
pop
test
test
mov
movsl
pop
lock
pop
les
pop
cmp
sahf
mov
xor
adc
rcll
loop
inc
ret
xor
jo
xor
xchg
and
data16
aad
or
fwait
clc
popf
add
dec
movsl
pop
ljmp
xchg
push
notl
pop
shlb
jne
jno
cmpsb
xlat
or
inc
mov
or
lahf
fnstsw
imul
call
inc
mov
push
cmpsb
push
int3
imul
or
cli
sub
sar
push
or
xor
neg
and
lods
fwait
lock
lret
and
fsubrs
call
aas
jae
and
sub
int
imul
cli
call
pop
mov
xorl
in
pop
cltd
rclb
pop
push
adc
dec
inc
ret
hlt
or
and
nop
mov
pop
in
sub
xchg
mov
push
xchg
mov
stos
jae
subl
scas
ja
jnp
pop
iret
inc
pop
out
add
adc
mov
popl
clc
mov
ljmp
push
adc
aad
mov
dec
dec
pusha
mov
cmp
mov
add
mov
cli
ss
push
or
addr16
dec
dec
cmp
xor
inc
jbe
in
cltd
js
jne
pop
shlb
vandnps
jg
jbe
sbb
xchg
mov
imul
pop
mov
ret
or
jo
sub
enter
jbe
jecxz
push
scas
pop
sahf
fstpl
and
lcall
pop
dec
inc
xchg
sbb
push
cmc
cld
cmpsb
ret
dec
pop
lea
mov
stos
pop
pop
incl
js
popl
add
mov
adc
mov
fildll
jno
in
inc
jne
inc
cmp
fstp
sti
and
dec
xchg
lods
pop
pop
aas
sbb
cli
push
push
adc
cmpxchg
push
enter
mov
repz
lret
in
pop
mov
dec
xorl
xchg
cwtl
dec
cld
pusha
dec
or
aam
or
insb
inc
push
push
inc
or
inc
cmpsb
lea
out
pop
or
mov
cli
fsubrl
lock
mov
add
in
std
lea
push
push
sbb
xor
in
idiv
push
xor
xorb
fstpl
movsb
out
sbb
out
stos
add
stos
pop
outsb
inc
push
in
ljmp
add
sub
xor
int3
shlb
xlat
jmp
cwtl
jecxz
pushf
mov
sbb
and
or
ret
adc
je
pop
mov
mov
pusha
out
call
fsts
outsl
movsb
fsubl
enter
lods
lds
in
mov
and
subl
sub
jle
jno
xchg
in
xchg
stos
mov
bound
nop
jle
gs
add
movsb
sti
stc
xchg
mov
lret
std
movsl
sbb
test
enter
inc
int3
push
cmpsb
out
mov
dec
sub
xlat
scas
dec
out
stc
add
sbb
xchg
daa
loopne
cmp
dec
xchg
pop
pop
xchg
dec
inc
cmpsl
push
sbb
testl
and
loope
std
stos
ret
add
push
pop
ja
fidivrs
pop
sub
mov
fs
fcmove
popa
push
leave
jp
out
push
push
dec
xchg
sti
rcl
mov
jbe
and
das
dec
mov
push
sub
loop
xchg
test
mov
aas
hlt
fsubl
add
xor
push
sbb
and
filds
inc
inc
sub
mov
lds
mov
sbb
mov
fcomip
shl
add
imul
lahf
push
push
xchg
in
ret
loop
and
mov
jae
sub
insl
cld
and
mov
std
out
test
pop
pop
mov
sub
pusha
mov
inc
test
sub
mov
push
movsb
push
popf
out
lods
imul
cmpb
test
mov
jp
fsubl
push
adc
cmpb
jp
or
and
imul
loop
lea
cmp
out
xchg
mov
in
test
aam
lret
lods
loopne
pusha
mov
insl
dec
lods
dec
jmp
lods
push
mov
sbbl
and
std
push
or
aam
imul
adc
inc
xchg
mov
add
addr16
out
imul
out
inc
mov
fsubl
dec
xchg
pop
rcrl
push
fstpt
sub
outsb
jle
jl
sahf
sub
mov
daa
xor
mov
data16
sbb
in
sub
fs
mov
into
in
mov
push
lods
adc
push
es
jo
enter
pop
sbb
mov
rcrl
cmpsl
js
scas
cmp
xor
dec
out
jl
outsb
repnz
sub
sub
cmc
sbb
sbb
insl
out
sub
cmp
shll
jge
divb
lods
repnz
dec
mov
in
mov
and
jnp
lods
das
sbb
into
cmp
outsb
cmp
jl
mov
fldl
dec
cmc
sbb
loop
sbbb
jecxz
insl
push
out
dec
das
fisttps
test
dec
xor
pop
push
mov
cwtl
add
or
sbb
sarb
pushf
insl
outsb
iret
jnp
pop
xchg
inc
cmp
rorl
in
ss
jb
mov
sub
in
push
das
mov
out
xlat
jne
mov
into
leave
popf
sbb
lock
dec
inc
adc
repz
sub
or
push
sbb
divb
cmpsl
mov
add
inc
or
mov
push
mov
adc
cmp
fst
inc
jnp
fadds
jne
int3
test
imul
pop
ret
inc
xor
cmp
aaa
ret
movb
lea
lods
mulb
lods
jle
icebp
leave
cmp
or
stc
and
out
dec
iret
fs
fcoml
cmpsb
aam
sar
jg
loop
shrb
sub
mov
jle
xor
sarl
fsubp
popa
nop
insl
je
mov
push
mov
push
nop
pop
inc
jnp
ret
arpl
mov
adc
pop
xchg
int3
hlt
out
imul
cmp
or
and
and
inc
cmp
xchg
pop
stos
xor
enter
repz
push
cmc
pop
xor
inc
xor
dec
mov
imul
and
cmp
jnp
aam
icebp
ret
dec
push
lahf
test
in
mov
xor
fcmovnu
sti
jmp
pusha
jmp
ficompl
adc
jbe
idivl
mov
xchg
iret
rolb
mov
cmp
je
xchg
dec
scas
pushf
mov
dec
add
mov
jne
jmp
imul
loope
out
mov
jnp
sbb
inc
dec
mov
lds
dec
or
xor
jns
and
aad
out
push
mov
sub
jnp
lods
inc
push
das
cmovae
les
jae
dec
or
ljmp
adc
clc
or
jmp
xchg
xchg
sbb
push
sbbl
cmpsb
loop
mov
push
xlat
mov
ja
mov
xchg
sahf
pop
mov
xchg
fnstcw
dec
mov
adc
mov
jo
adc
movb
loop
push
inc
fisubrs
aas
daa
test
jmp
pop
shr
inc
orb
add
adc
rcr
cmp
sub
popf
outsb
dec
sbb
stos
or
adc
fst
cmp
lods
lcall
rclb
inc
sbb
xor
int3
outsl
add
rcr
ljmp
dec
fxch
jb
out
push
push
shr
xor
int3
or
xchg
mov
in
push
not
mov
cs
aad
mov
sbb
inc
out
jecxz
or
inc
mov
daa
sub
push
mov
fs
xchg
mov
js
outsl
sbb
ljmp
sti
lret
test
or
sub
sti
rorb
sub
pushf
xchg
mov
push
jae
hlt
pop
pop
hlt
push
lds
jae
shlb
lock
movsl
stos
or
sbb
pop
mov
xchg
rcl
push
lahf
fstps
aam
pushf
cmc
jnp
mov
insl
nop
mov
add
scas
sub
test
mov
push
dec
lcall
insl
aam
jbe
subb
add
adc
xor
rorl
daa
leave
sar
ret
xor
scas
movsb
sbb
test
cli
inc
enter
inc
lock
mov
mov
xor
aam
cmpb
and
test
call
hlt
push
shlb
aas
clc
jmp
sbb
ds
cltd
xor
xor
mov
sbb
and
aam
test
in
xor
dec
lret
out
cmpsl
mov
push
inc
sbbl
and
mov
mov
pusha
mov
rep
lahf
or
xchg
xchg
jle
mov
mov
xchg
inc
add
inc
icebp
mov
mov
repz
sbb
xchg
adc
or
inc
pop
pop
dec
lods
shl
aas
scas
scas
ss
or
jmp
cmp
dec
inc
sub
jbe
mov
xor
inc
lods
rcll
aas
dec
mov
cwtl
into
leave
pop
cs
notb
stc
xchg
adc
out
push
adc
ss
cmp
mov
bound
ret
nop
pop
out
sbb
pop
ret
incl
sbb
cmpl
out
add
push
dec
sbb
enter
xor
or
aas
iret
or
pusha
js
mov
sub
adc
push
xchg
test
jle
adc
aas
daa
rol
les
and
sbb
dec
dec
jl
pop
mov
xor
enter
js
nop
out
sbb
push
jns
inc
jp
or
das
and
insl
gs
push
mov
pop
hlt
mov
pop
ret
shrl
lcall
stos
mov
cmpsl
shll
icebp
addr16
push
mov
pop
shrl
mov
or
sub
push
or
pop
pop
movsl
setg
push
sbbl
xchg
push
je
gs
cli
icebp
add
aas
xchg
imul
ret
xor
pop
lret
repnz
push
popa
add
xor
popf
push
or
xchg
mov
lcall
or
xchg
mov
loop
add
mov
in
fcoml
ret
scas
cli
sub
ljmp
mov
jecxz
stc
lcall
and
pop
pop
pop
mov
ds
call
push
int3
mov
lret
cwtl
scas
fs
add
lea
lret
cltd
push
gs
call
push
ss
ss
mov
std
mov
mov
repnz
hlt
jl
sar
pusha
and
and
fnstsw
fistpl
xchg
stos
repz
add
and
or
addr16
lods
addl
push
dec
cltd
nop
es
cmp
jp
int
add
mov
mov
mov
stos
xchg
adc
mov
cwtl
fwait
inc
popf
or
int
add
cmc
int
leave
sarl
add
jbe
movsl
mov
pop
ret
sub
pop
int
ret
movsl
pop
sub
cli
mov
negb
sub
push
sbb
mov
jp
add
dec
ret
cwtl
repz
aam
mov
mov
sbb
push
xor
das
and
or
addr16
dec
aaa
mov
mov
enter
leave
dec
jecxz
shl
cmpb
xchg
mov
mov
push
jecxz
pop
inc
sub
dec
mov
push
adc
mov
popf
mov
adc
mov
pop
lahf
mov
jmp
jae
out
xor
and
inc
clc
lret
mov
adc
les
rcrl
stos
or
je
movsb
push
int
test
subb
ljmp
aaa
and
and
test
xor
xchg
sbb
jbe
lods
mov
sub
jl
call
fs
dec
xchg
std
fs
jmp
adc
mov
pop
outsl
lahf
and
sub
inc
int
pop
push
jne
popf
in
dec
call
call
adc
mov
lods
aad
mov
leave
int
mov
mov
xor
popa
test
jl
lods
stc
add
ljmp
enter
adc
stos
mov
arpl
sub
mov
rclb
lods
inc
mov
pop
pop
ds
add
out
gs
mov
andb
scas
dec
lcall
dec
xlat
aaa
mov
dec
jecxz
pop
cmp
into
out
pop
mov
je
pop
pop
mov
xlat
adc
and
and
ss
stc
add
sarl
lods
adc
mov
push
dec
stos
nop
cltd
pop
ret
fsubrs
mov
popf
xchg
xor
aaa
scas
xor
popf
mov
pusha
sti
pop
pop
sbb
test
pusha
popf
mov
inc
out
mov
push
lock
jno
or
adc
dec
ljmp
repz
scas
pop
in
loope
push
inc
cmc
fldl
add
adc
xchg
pop
cltd
push
es
mov
mov
sub
dec
out
pop
dec
sub
fsts
aaa
jo
sbb
mov
inc
fdivl
test
stos
sub
pusha
dec
xchg
out
ja
inc
outsl
pop
xchg
fsub
cli
push
mov
mov
out
xlat
add
flds
dec
pop
push
sti
rorl
test
shr
ret
shr
add
mov
cmp
loope
in
xor
push
jp
das
in
cmp
out
gs
xchg
in
cmpsl
inc
push
inc
fnsave
in
inc
adc
dec
enter
fwait
xchg
rcl
or
sarl
fiaddl
fs
mov
mov
dec
addr16
fwait
mov
movsl
test
jmp
mov
ficoml
jno
ds
out
ret
or
mov
or
aaa
push
pop
sub
iret
dec
cs
clc
stos
pop
testl
or
and
mov
orl
sbb
enter
sbb
xchg
push
mov
cmp
popf
jns
push
sarb
les
xchg
notb
sbb
fwait
push
inc
mov
mov
lcall
add
movsl
dec
add
inc
orb
fidivl
sbb
aad
cmp
pop
push
aad
inc
xchg
push
loope
outsl
data16
aaa
mov
xor
ss
sub
pushl
sbb
xchg
iret
shrl
sbb
mov
out
sub
adc
mov
inc
xchg
sbbl
pop
push
dec
insl
inc
ret
push
sbb
pusha
mov
stos
adc
fldcw
push
add
push
jbe
popa
and
sbb
and
cmp
lret
imul
stos
fsubrl
mov
xor
mov
mov
sbb
fwait
xchg
call
push
ljmp
aam
push
in
out
ss
jge
jbe
mov
push
out
mov
xor
mov
lods
daa
std
mov
push
dec
dec
jge
sub
dec
mov
ljmp
std
jge
outsl
hlt
in
rcll
xor
mov
int3
and
push
cmp
mov
push
std
jle
and
fnstsw
adc
cmp
jmp
shrl
and
jno
stc
in
pop
out
sub
aaa
sbb
xor
clc
cltd
movsl
pop
lods
dec
addl
lds
scas
dec
xchg
pop
inc
push
jbe
in
xchg
inc
das
cmp
push
push
stos
push
mov
pop
test
jl
popa
dec
push
and
lods
or
ret
ret
inc
enter
jmp
ficoml
jb
loope
pop
mov
clc
pop
roll
adc
nop
cmp
xor
dec
adc
pop
xlat
mov
pop
and
dec
decb
xor
adc
mov
add
cwtl
pop
pop
aad
icebp
or
or
dec
pop
scas
mov
in
cmp
mov
jo
call
addr16
jmp
clc
jmp
out
push
mov
cltd
sti
scas
sarl
jno
cld
loope
inc
inc
push
dec
scas
jb
add
pop
cs
pop
fisttpll
mov
leave
or
stos
iret
jne
xchg
push
pop
icebp
and
movb
xchg
mov
mov
mov
fnstcw
mov
dec
cmp
pop
shlb
add
fldenv
cltd
int
sub
mov
movsl
stos
ret
mov
inc
pop
icebp
lcall
mov
dec
or
inc
xor
pop
lds
xchg
jg
lods
leave
xchg
inc
inc
push
mov
js
das
repz
movsb
mov
lret
jne
cmc
jnp
cmc
adc
lods
jnp
inc
push
neg
mov
sbb
pushl
mov
cmc
ljmp
mov
stos
jae
push
les
test
icebp
push
clc
lock
hlt
mov
std
int3
sbb
cmpsl
cmp
sar
adcb
out
adc
xor
or
arpl
push
in
pop
out
or
stos
out
cmp
pop
inc
jl
ss
xor
dec
jbe
cmp
add
loop
ret
movsl
test
ja
mov
rclb
addr16
mov
mov
std
push
je
pop
cmp
push
jbe
cmp
dec
fnstsw
outsl
sub
cltd
inc
rolb
adc
push
clc
lret
fidivrl
dec
inc
xchg
inc
insl
repz
mov
ljmp
pop
pop
scas
mov
push
xchg
out
adc
sarl
xchg
in
scas
pop
adc
out
mov
stos
popf
mov
adc
lea
jbe
iret
xchg
mov
data16
test
xor
mov
adc
adc
pusha
divl
xor
mov
aaa
lds
inc
cmpb
jecxz
stos
or
rcll
test
jl
lret
repz
lcall
mov
pop
mov
jno
jne
jp
movsb
inc
add
adc
or
xlat
mov
jae
mov
pushf
jmp
cmp
scas
arpl
xor
shlb
xchg
and
xchg
lods
sub
lret
xchg
mov
or
pop
jns
pop
loop
shlb
rol
lods
mov
sub
sbb
fadd
insb
repz
jle
sub
and
pop
das
cwtl
mov
push
pushf
mov
jne
pusha
jne
inc
adc
dec
mov
inc
cmp
add
mov
scas
ds
push
or
gs
and
jle
je
enter
fwait
jbe
or
jge
push
lods
mov
data16
inc
fisttpll
and
and
pop
jb
icebp
sbb
shll
rorl
push
cmpsb
sbb
and
rolb
mov
fs
enter
ljmp
xchg
loopne
xor
mov
xchg
stc
mov
pushf
mov
or
pop
push
fldenv
fsubp
and
add
mov
das
lahf
icebp
add
cmp
iret
mov
adc
push
insl
ljmp
mov
inc
les
sbb
mov
mov
cmpsb
pop
sbb
cmpsb
inc
fdivrs
cmpsb
stos
and
mov
fdivrp
inc
xor
jge
fnstcw
cmpl
mov
pop
pop
fs
jbe
jnp
push
pop
notb
and
add
lock
das
mov
mov
pop
cmpsb
xchg
cld
fisttpll
xor
fists
sahf
xchg
mov
stos
pop
dec
xchg
lret
mov
mov
add
repz
cmpsb
sub
jge
xor
out
cmp
movsb
addl
xlat
shlb
jl
mov
xor
out
cmp
clc
hlt
push
push
insl
test
jne
push
gs
mov
push
mov
jne
nop
inc
ret
sbb
adc
iret
push
sbb
loopne
lret
mov
xor
and
test
dec
test
jnp
and
lcall
les
pushf
push
in
hlt
shlb
lret
push
mov
bound
mov
loopne
adc
mov
cmp
icebp
out
add
lcall
sbb
arpl
inc
sub
ljmp
sbb
push
push
jb
xchg
ljmp
fstpl
adc
loope
mov
mov
xlat
js
push
pop
mov
xor
sahf
xchg
mov
dec
stos
sbb
push
xchg
xchg
mul
inc
pop
mov
out
jecxz
add
jnp
jmp
adc
lods
jo
mov
push
scas
lea
lock
scas
lar
imul
bound
pop
popf
fs
dec
arpl
jle
or
call
dec
rcrb
xor
mov
add
cmp
mov
test
pop
jo
xchg
sub
sti
xorb
pop
loop
mov
jg
loope
cmp
inc
xchg
or
inc
repnz
jbe
lcall
fstps
jno
lahf
mov
js
ljmp
repz
arpl
imul
dec
loope
iret
frstor
adc
outsl
js
cmpl
cmp
dec
call
test
aas
ljmp
pop
sbb
mov
movsl
icebp
jmp
mov
adc
ds
dec
sbb
add
inc
inc
insb
mov
icebp
sti
pop
add
mov
mov
and
jecxz
push
push
popf
mov
into
add
add
adc
scas
xchg
jns
jl
jl
adc
push
ss
mov
gs
jp
lock
sub
push
dec
scas
dec
xchg
out
dec
inc
xchg
dec
xchg
outsl
comiss
fisubl
dec
jnp
sub
mov
cli
and
pop
pop
cmpsl
sub
xor
fmull
jl
repz
enter
xchg
fsub
or
xor
xchg
mov
mov
dec
xor
shlb
neg
xor
repnz
inc
add
jmp
cmc
sub
mov
pop
outsb
mov
xchg
push
cmp
or
jo
das
sbb
dec
cmpsl
sahf
lock
sub
mov
cmpl
and
int3
in
cwtl
adc
jp
add
dec
test
lret
and
lahf
int
sbb
mov
sub
jne
inc
movsb
addr16
loop
enter
inc
jns
jg
xchg
je
add
lock
adc
inc
pop
jne
pop
fcmove
add
xchg
and
das
add
int
dec
or
pop
ficoml
or
cmp
cltd
out
push
sub
out
inc
scas
and
push
stos
hlt
mov
xor
jl
rcl
js
or
sbb
or
dec
or
mov
push
cmpb
clc
pushf
adc
pusha
xchg
in
cmpsl
loope
xchg
mov
imul
cmc
inc
xchg
and
mov
scas
mov
negb
nop
sti
xchg
cmp
inc
dec
mov
mov
fstpt
gs
scas
fs
mov
cmp
pop
xor
popa
fwait
dec
inc
mov
mov
sbb
pop
imul
cmp
scas
sahf
sbb
push
sarb
nop
fcoms
xchg
daa
inc
xorl
out
or
cmp
mov
push
enter
xorb
pusha
lcall
dec
fimuls
cmp
mov
lret
fbld
dec
sti
sub
inc
jmp
mov
out
outsb
xor
les
incb
lret
dec
xchg
add
push
pop
cli
iret
cmp
jl
cmpsb
outsb
and
popa
xchg
stos
aad
ljmp
repnz
pop
or
mov
cmpsb
in
sub
push
cmpsb
stos
inc
leave
jo
mov
js
lret
pop
push
sbb
xchg
rcll
xor
mov
sub
loope
sbb
pop
mov
dec
pop
sbb
pushf
push
decl
push
shlb
and
push
imul
mov
loope
repnz
mov
adc
movsl
pop
fidivrs
mov
mov
or
outsl
pop
sbb
add
pop
jl
dec
sub
pop
cmp
or
inc
aad
inc
aad
mov
adc
je
stc
pop
rorl
jl
sub
stc
cli
xor
arpl
xor
in
rcrb
mov
xor
loope
lret
pop
mov
xchg
orb
mov
mov
popf
xlat
out
cmp
push
stc
leave
xchg
push
push
sar
cmpsl
mov
cs
jae
pop
outsb
popa
sbb
pop
cld
sbb
sub
in
aaa
xor
aaa
ss
inc
loopne
jmp
je
push
and
sub
punpckldq
in
mov
ljmp
cld
fs
imul
js
sub
push
cltd
cmpsb
inc
pusha
xlat
movsb
gs
std
jmp
xchg
mov
mov
mov
int3
in
pop
xchg
cmpsl
fmul
push
or
jmp
es
cmpsb
jl
fwait
aas
popf
xor
mov
adc
mov
je
mov
andl
jecxz
daa
fwait
imul
jle
inc
xor
je
mov
lcall
xlat
pop
out
dec
push
push
hlt
xchg
or
arpl
cmpsl
aas
cmp
dec
jno
push
movsl
mov
lea
add
cmp
popf
mov
inc
mov
std
dec
repnz
lcall
fisttps
xchg
pop
xchg
sub
das
mov
clc
or
jo
faddl
popf
add
ja
mov
daa
cmp
mov
loopne
cmp
lret
inc
mulb
aad
sti
fucom
sbb
outsb
lahf
cmp
fs
outsl
pop
dec
les
xorl
icebp
rcrl
jp
addl
jl
sub
mov
sbb
das
mov
ret
jle
add
sbbl
movsl
and
mov
arpl
xor
scas
sub
aad
loopne
add
roll
or
pop
bswap
cwtl
pop
or
adc
les
out
iret
repz
inc
push
adc
sub
lahf
lret
mov
fldenv
out
pusha
push
push
mov
mov
inc
inc
arpl
add
ja
or
push
or
mov
adc
adc
incl
lods
xorb
xor
or
adc
sbb
repz
adc
dec
stos
and
in
pop
add
xchg
into
ss
mov
jl
pusha
in
dec
mov
jo
jbe
mov
mov
jp
test
lods
nop
xchg
xor
adc
mov
fwait
push
jno
andl
imul
jle
add
mov
sub
or
inc
in
push
push
sbb
sub
in
repnz
push
sub
insb
adc
fsubl
filds
push
cmp
lods
out
jb
sbb
jns
mov
push
mov
adc
pop
fsts
dec
roll
pop
stos
xchg
xchg
jno
cli
data16
orl
mov
std
dec
mov
push
mov
mov
dec
imul
aad
add
xor
aas
xorl
in
dec
lds
mov
subl
xchg
imul
sbb
mov
outsb
add
pop
and
lcall
mov
sbb
andb
inc
lcall
adc
mov
sbb
cmp
in
mov
sub
push
push
ficoms
mov
rolb
jns
ret
stos
jecxz
lcall
push
fmul
push
rol
pop
sbb
sbb
movsl
adc
xchg
add
negl
dec
ljmp
lock
xchg
aas
jae
movsl
mov
in
sbb
cmp
xchg
xchg
bound
jp
movsb
push
push
stos
push
add
fstpl
fldenv
sub
lret
iret
pop
push
mov
aad
mov
nop
test
enter
iret
hlt
xchg
in
push
adc
repnz
mov
cmp
sarl
mov
add
mov
and
jle
and
dec
inc
mov
fsubl
pop
mov
stos
iret
cmc
add
cmpsl
sahf
rolb
fistl
and
jbe
dec
sbb
sub
je
jne
rol
inc
and
xchg
jl
adc
xor
sahf
bound
push
std
mov
pop
fstps
clc
mov
ljmp
cmp
sub
push
jl
aam
mov
lods
sbb
dec
dec
cwtl
movsb
ljmp
push
jo
push
mov
out
cmp
adc
call
inc
mov
in
pop
data16
popf
xchg
ds
or
mov
mov
clc
cmp
test
insb
inc
xor
push
out
not
fidivrl
movsl
sub
call
pop
and
xor
shrl
in
and
mov
mov
jno
inc
adc
cmp
into
daa
shl
outsl
add
stos
xchg
sub
outsl
push
lahf
adc
aam
daa
lahf
sahf
mov
aas
pop
push
cmc
inc
je
jp
xchg
adc
lret
sub
out
mov
scas
or
leave
popl
lds
xchg
inc
push
add
stos
adc
mov
inc
scas
add
adc
test
lock
sarl
mov
push
int
inc
subl
mov
pop
xor
mov
bound
pop
inc
jne
lods
roll
pop
push
adc
xchg
mov
jo
pop
sti
rcll
or
add
adc
orb
sbb
cmp
hlt
nop
xchg
lods
xlat
insl
jbe
sahf
mov
out
clc
lock
mov
and
into
add
pop
dec
scas
or
mov
clc
jo
xlat
push
pushf
push
sub
and
dec
or
shrl
mov
cs
je
lods
sbb
and
jns
and
fdivrl
jbe
pop
push
ret
jmp
mov
leave
push
xchg
jle
mov
jb
mov
xchg
adc
or
fimuls
out
pushf
inc
xchg
fdiv
setae
jae
imul
adc
xchg
jns
in
sbb
and
mov
mov
adc
sti
stos
push
or
inc
jecxz
add
fiadds
sub
js
lret
dec
xor
sub
sbb
dec
jbe
and
adc
dec
pop
adc
decl
and
loop
adc
out
jle
sub
fcomps
repnz
adc
rclb
cmp
mov
cltd
mov
sub
ss
ljmp
jmp
mov
ret
lret
ja
push
push
fidivl
pop
push
decb
adc
dec
ljmp
decb
ret
inc
movsl
xchg
es
cwtl
mov
repnz
dec
dec
shlb
mov
stos
xchg
aaa
fbstp
and
mov
or
push
in
sbb
adc
orb
jge
mov
inc
mov
add
leave
mov
pop
push
pushf
jb
sbb
movsl
mov
xor
pop
xlat
loopne
push
pop
in
mov
test
lods
dec
roll
lds
adc
adc
push
addr16
xor
xorl
cld
adc
xchg
pushw
out
xor
mov
inc
inc
cmpl
push
stos
pop
gs
cmp
std
inc
iret
pop
mov
aas
pop
mov
jb
pop
lcall
mov
jo
sti
push
push
sahf
dec
sbb
cld
pop
and
mov
popa
pop
iret
scas
mov
or
or
pop
mov
xchg
push
popa
xor
and
inc
ss
out
test
je
les
mov
sub
pop
mov
pop
cmc
scas
xchg
xchg
or
xchg
dec
mov
data16
divb
out
sbb
ja
mov
mov
cmp
sub
mov
fiaddl
mulb
cwtl
inc
int
sub
es
mov
dec
and
ret
test
xor
pushf
lock
sub
loopne
jle
xor
pop
enter
inc
sahf
pop
dec
clc
push
lahf
ja
std
push
inc
stc
sbb
adcl
fadds
loope
inc
adc
das
imul
jp
mov
inc
icebp
loop
push
push
int3
fwait
inc
and
mov
xor
shlb
sbb
adc
pop
xor
test
jg
adc
imul
leave
mov
inc
popf
xchg
stos
add
cmp
outsl
dec
shr
dec
push
pop
rolb
int3
mov
xorb
mov
jno
inc
mov
mov
repnz
iret
sub
sbb
insl
outsb
lea
cltd
inc
push
pop
mov
xor
inc
or
and
iret
xor
or
arpl
mulb
das
nop
xlat
inc
outsl
sub
cld
mov
mov
in
sbb
push
mov
inc
icebp
lret
js
ror
enter
push
push
sbb
daa
testb
div
lods
repz
dec
hlt
push
sub
ja
or
lcall
outsb
cmpsl
data16
sub
xor
rcr
les
call
shll
dec
mov
and
les
lods
int
andl
mov
cmp
int3
xchg
mov
sarl
and
add
push
hlt
sub
out
test
adc
cltd
mov
cmp
mov
int3
or
adc
xchg
xchg
sti
push
jnp
orl
pop
pop
push
mov
in
insl
cmc
enter
dec
leave
popa
pop
mov
popf
ds
loopne
daa
jg
roll
repz
mov
sbbb
pusha
addr16
je
sahf
and
test
popa
pushf
xchg
pusha
rclb
xchg
js
stos
or
call
mov
xlat
lock
stc
insl
dec
xchg
bound
pop
pop
stc
sub
sub
mov
fwait
stos
in
movsl
ljmp
pop
pop
jmp
xchg
xchg
std
out
jmp
data16
jmp
xor
movsb
push
or
in
adc
in
in
jmp
jecxz
jmp
fs
mov
dec
mov
sahf
mov
outsb
jle
xchg
sbb
popa
into
insl
xor
sbb
xchg
mov
xor
mov
cmpsl
sti
mov
adc
data16
and
mov
xor
cmp
call
out
mov
test
js
fcomps
add
in
daa
mov
mov
out
bound
sub
or
std
hlt
ret
into
xlat
mov
inc
roll
mov
sbb
aam
cmp
jle
std
mov
test
lods
mov
rorl
jge
mov
stos
push
cmp
dec
out
or
and
xchg
mov
adc
jbe
mov
bnd
jl
mov
and
adc
xor
adc
push
leave
mov
pop
inc
test
sub
test
pop
sarl
pushf
add
lahf
sbb
xchg
int3
mov
rcll
push
sarl
fsts
sbb
ljmp
outsl
mov
les
orl
es
or
jo
adc
mov
push
roll
xor
or
mov
test
pushl
out
loope
fcmove
add
lahf
mov
pop
cltd
and
insl
jbe
minps
lds
jle
mov
iret
cmc
aad
cmp
loopne
lahf
jg
fnstsw
inc
adc
push
xchg
and
in
cli
xchg
sub
lea
push
inc
addr16
in
inc
pop
mov
dec
lock
ja
ljmp
inc
repz
mov
dec
push
pop
std
jl
shrb
inc
adc
loope
test
or
stos
andb
cmpsb
pop
je
movsb
lahf
lret
push
aaa
pop
fbld
pop
insb
and
inc
xchg
popl
mov
mov
xchg
add
mov
ljmp
mov
pop
jge
jb
mov
cmp
ljmp
lds
jl
mov
jae
sub
jg
xchg
popf
jae
shr
push
lahf
imul
sub
add
mov
cmp
push
jl
pop
mov
into
clc
fidivrl
bound
dec
lods
bound
mov
sarl
stos
int
sbb
pop
pop
iret
mov
fadd
xor
jg
xor
jg
add
or
adc
std
lcall
lcall
lahf
push
xchg
or
test
xchg
or
ja
ljmp
sub
jecxz
shrl
test
clc
xor
jne
push
adc
jns
scas
xchg
adc
sub
hlt
sbb
popf
pop
or
xchg
fsubl
cmp
stos
and
xor
rol
cmpsl
pop
mov
lret
cmp
rolb
mov
fidivrs
jnp
lds
jmp
fwait
repnz
mov
fdivs
mov
cltd
jmp
mov
rcr
enter
sub
jmp
and
inc
push
mov
push
mov
test
add
mov
movsb
push
das
jo
jb
pop
xchg
add
scas
in
mov
test
push
jp
mov
test
das
mov
int3
bound
test
dec
mov
lods
sbb
pop
ret
and
adc
pop
in
mov
xor
cli
mov
mov
mov
pushf
xor
add
addr16
je
xor
sub
shl
add
pop
and
pop
movsb
lcall
fldcw
mov
jnp
jb
xchg
jmp
inc
sub
bound
or
xor
loopne
sarl
dec
xor
and
popa
repz
sbb
sub
leave
scas
or
mov
inc
iret
mov
sbb
xchg
xchg
pop
jmp
jg
jne
adc
or
fwait
icebp
or
data16
rcl
repnz
fsubrs
iret
ljmp
popl
mov
adc
inc
add
cwtl
loop
pop
mov
or
fstpl
mov
aad
pop
pop
testl
fsts
push
jle
out
add
repz
mov
xor
bound
insl
inc
roll
sarb
cmp
dec
mov
ljmp
adc
pop
adc
clc
or
sbb
data16
sub
shll
out
sbb
lahf
ja
and
dec
mov
pop
push
lods
sub
inc
sbbl
xlat
jb
cltd
pop
sbb
sbb
lods
push
fstpl
int3
shll
pop
jge
arpl
rolb
mov
push
call
and
inc
push
lods
pop
mov
xor
fldl2e
fcomip
cmpl
pop
cmp
scas
add
mov
cld
nop
shll
or
pop
jl
dec
popl
pop
movsb
idivl
outsl
popa
jae
arpl
xor
lods
sbb
xchg
and
cmp
fxch
stos
rcrl
add
lahf
xor
mov
pop
xor
jae
movb
sub
roll
in
mov
mov
call
cmp
jno
aad
jmp
sahf
xor
mov
xchg
test
and
outsb
xor
rol
shr
loop
xor
imul
out
xchg
adcb
xor
stos
int
pop
xchg
enter
xor
push
int3
icebp
mov
iret
sarb
xlat
mov
roll
push
ss
icebp
xchg
cmp
xchg
jbe
cld
aad
imul
dec
adc
lret
loope
add
popa
pop
in
push
ljmp
pop
outsl
and
xchg
xor
es
xchg
push
pusha
call
and
lcall
ret
adc
mov
sbb
shlb
orb
idivl
jle
inc
cli
xchg
arpl
insb
sbb
jne
insl
add
cmpl
xchg
dec
dec
add
leave
sbb
rclb
das
scas
scas
and
push
scas
sub
sbb
pop
cs
leave
lds
subl
mov
add
jo
js
jb
add
imul
mov
xchg
call
repz
dec
push
stc
shll
cmp
ds
in
daa
add
bound
cmp
lret
insl
mov
xchg
daa
leave
inc
sub
or
jns
lods
sahf
lret
in
mov
loope
stos
jae
cmc
jg
sbb
aad
fisubrl
andl
hlt
movsl
cmp
rcrb
test
xchg
out
inc
push
sbb
push
mov
imul
dec
sbb
mov
jbe
jae
leave
inc
inc
enter
adc
pop
in
aaa
inc
les
mov
jmp
mov
xchg
sub
clc
rclb
and
pushl
jno
movsb
push
or
stos
iret
clc
jnp
out
loope
mov
xor
cmovle
push
lds
mov
sub
dec
addr16
push
js
popa
inc
adc
pop
push
sub
push
cwtl
xlat
repnz
and
xchg
jle
push
xor
push
gs
push
into
xchg
and
out
dec
faddl
sub
lods
mov
sar
sbb
mov
add
ret
ss
push
cmp
sub
sub
cmp
xchg
outsl
inc
lret
xchg
jmp
loope
mov
adc
or
sahf
push
into
dec
rcrb
jae
outsb
xchg
cmc
wbinvd
mov
je
ds
push
dec
mov
sarb
out
pushf
or
jae
cmp
in
les
loope
lds
mov
fimull
lods
cmpsb
ss
add
mov
ret
or
adc
and
scas
cmp
mov
loop
mov
jb
mov
push
sub
test
jge
mov
push
cmc
push
dec
mov
sahf
mov
fldt
cmp
pop
lret
out
mov
mov
inc
push
sbb
cmpb
mov
mov
lahf
fwait
sub
imul
jecxz
enter
dec
mov
rorl
fs
add
fsubs
lcall
sub
sub
iret
xchg
pop
jg
and
das
andnps
aaa
stos
movsb
pop
jmp
ss
jecxz
cmc
cld
in
aad
aam
fwait
inc
cmpsl
dec
mov
decl
cmpsl
int3
pop
lds
stos
dec
cmp
cli
and
leave
mov
xor
add
data16
add
outsb
push
data16
adc
jmp
jl
add
jne
jo
movsl
cmpsb
loop
sub
shrl
in
xchg
mov
mov
repz
mov
mov
lret
sub
cli
dec
leave
ljmp
sar
ss
mov
shlb
mov
repnz
mov
loopne
pop
loopne
ret
jae
add
mov
fmull
pop
adc
test
push
adc
xlat
movsb
pop
lds
sub
add
jae
jle
cmp
pop
inc
scas
xor
push
dec
mov
std
push
push
scas
cmp
scas
cmp
cmpsb
call
cmp
push
xor
or
out
jge
xchg
pop
pop
scas
mov
push
scas
adc
sub
xor
iret
ret
mov
pop
iret
cmp
pop
xor
insb
add
add
clc
or
pop
jle
data16
sub
push
ja
dec
xchg
fistl
jae
fisubl
es
insl
icebp
jnp
mov
ftst
movsl
dec
mov
dec
mov
xorb
mov
shlb
mov
mov
lods
fs
roll
adc
fstl
mov
sbb
icebp
mov
sahf
and
subl
sbb
or
lret
outsb
data16
iret
pusha
sbb
pop
add
dec
xchg
adcl
in
out
lret
pop
xlat
adc
jp
or
pusha
sub
mov
pop
fwait
mov
imulb
and
movsl
popa
movsl
and
daa
and
cmp
mov
xchg
jg
lods
or
es
xchg
cmp
mov
xchg
fisubl
jne
push
sub
icebp
and
adc
sbb
outsl
pusha
cmp
mov
mov
and
cmp
loop
mov
cmp
push
mull
es
pop
imul
sub
orb
adc
outsb
js
sbb
and
cltd
add
scas
arpl
xchg
xchg
dec
mov
scas
sbbb
scas
les
mov
adc
test
inc
movsb
add
call
sbb
hlt
pop
sbb
pop
cmp
loopne
fiaddl
mov
dec
dec
xor
sbb
sbb
jg
push
nop
cmp
js
adc
lret
jo
test
mov
in
aaa
movsb
or
jl
dec
ds
jle
testl
das
pop
mov
pop
jne
xor
arpl
push
and
lret
dec
bound
push
ss
into
mov
cltd
pop
jp
mov
aaa
fs
sub
mov
push
or
sub
xchg
and
pusha
jae
dec
mov
int3
negb
mov
adc
or
mov
js
xchg
insb
pop
mov
jae
xor
mov
and
scas
xchg
xor
arpl
or
mov
push
mov
test
xor
mov
cmp
outsl
inc
movl
lods
idivb
mov
xor
in
lret
inc
xchg
xchg
imul
xor
out
jns
xorl
std
out
sub
jbe
lret
dec
inc
call
dec
jae
fcmovne
sbb
pusha
cmpsl
das
nop
adc
rolb
push
sub
add
cltd
loopne
test
pop
shll
out
cmp
stos
cmp
popf
jbe
sbb
mov
loop
pusha
sbb
xor
pop
mov
mov
rorb
outsb
popl
popf
into
pop
std
mov
mov
popa
out
outsb
popf
cmp
pop
cmpsb
andb
inc
jecxz
xor
cmc
repnz
add
or
add
rorb
insl
inc
push
jno
sub
not
push
adc
aas
pop
sbb
dec
jae
in
mov
aaa
rclb
push
pop
adc
int
in
sub
insl
mov
pop
xchg
lds
clc
cmp
or
or
iret
add
mov
adc
in
fimull
and
iret
pop
pop
ror
sarb
roll
sub
int3
mov
mov
xor
orb
xchg
inc
mov
jae
bound
or
push
pop
xchg
dec
je
mov
gs
pop
sub
bound
mov
pop
mov
ja
mov
mov
fcmovnb
inc
leave
daa
jo
and
stos
jnp
and
js
pusha
or
or
xchg
cmp
daa
aaa
sbb
out
cltd
adc
js
js
rcll
jge
aam
pop
xchg
dec
dec
sbb
leave
fsubr
mov
ljmp
stos
shll
je
inc
aas
jecxz
sarb
icebp
lret
test
int
lahf
test
addr16
movsb
xor
or
inc
dec
rcrb
sbb
mov
and
sbb
xchg
sub
cmpsb
je
int
fs
dec
cmp
add
outsl
and
push
gs
mov
scas
test
pop
rorl
jo
jecxz
xchg
push
mov
xchg
mov
hlt
and
jg
mov
les
rcr
mov
add
mov
pop
cmp
loop
ret
aas
addr16
lea
cmp
aaa
mov
inc
repnz
enter
scas
inc
les
inc
cmpsl
addb
add
test
je
push
ja
sub
push
mov
insl
pop
icebp
lods
jo
xor
inc
sbb
out
aam
sbb
lahf
xchg
outsl
int3
xchg
xchg
das
es
in
dec
adc
dec
out
or
sub
inc
pop
pop
icebp
xchg
adcl
adc
add
sbb
push
stos
iret
sbb
es
dec
xor
mov
jle
lahf
and
test
or
loope
fwait
adc
push
hlt
pop
mov
add
mov
adc
xlat
rolb
xchg
mov
in
pop
push
testl
jl
out
mov
pop
je
xchg
lret
loope
dec
mov
lods
shll
es
ret
out
add
xor
adc
mov
shrb
or
xchg
imul
add
push
mov
mov
repnz
out
imul
inc
andb
sbb
dec
dec
fwait
adcl
neg
cmpsb
or
mov
push
data16
inc
jle
or
adc
icebp
or
push
sahf
sbb
cmp
pushf
in
test
mov
and
in
sbb
adc
pop
cmp
fistpl
es
cwtl
and
sub
std
pop
pushl
mov
or
dec
cwtl
outsl
jl
fsts
dec
dec
das
push
and
ret
inc
sbb
dec
adc
insl
lea
and
push
test
ja
jg
or
sti
idivb
dec
sbb
pop
mov
cmp
inc
pop
out
xchg
jno
sub
loop
insl
es
jl
pop
std
xchg
fcmovbe
aaa
lods
sarb
adc
pusha
jnp
pop
or
jnp
xor
cwtl
mov
push
ret
jecxz
repz
jl
hlt
int3
cmp
inc
fwait
xor
mov
dec
sub
mov
mov
pusha
fdivs
xchg
xchg
cs
jbe
mul
enter
mov
stc
adc
jbe
mov
sub
aas
inc
pop
insl
xchg
pop
fs
dec
sub
rorl
push
jmp
xchg
cmp
push
imul
fldl
lods
jp
lahf
xchg
pop
iret
mov
imul
ja
and
jne
xor
push
lods
xor
addb
push
adc
data16
pop
adc
jno
pop
push
pop
loopne
lods
stos
xor
leave
dec
mov
xor
pop
pop
mov
jnp
pusha
cmpsl
pop
xchg
add
fstps
std
imul
dec
enter
test
rclb
daa
cmpsl
fs
mov
ljmp
xor
cmpsb
xor
push
pop
dec
push
mov
sbb
sub
cs
mov
insb
ds
loopne
cmp
and
push
ss
adc
loope
adcb
pop
loopne
mov
mov
imul
lock
test
icebp
mov
nop
in
in
mov
dec
lock
repnz
or
movsl
imul
jecxz
xchg
cld
jg
insb
scas
lret
cmp
xchg
aaa
scas
push
adc
in
shr
lret
rcr
loopne
dec
rcrb
sbb
xor
mov
jmp
dec
adc
sub
adc
mov
stc
test
in
inc
pop
cltd
jo
add
fsubl
test
dec
inc
popa
cmpsl
lret
inc
pop
xor
nop
pop
arpl
push
stos
pop
jns
lahf
les
jmp
in
adc
out
out
je
cmpsb
jmp
ficoml
mov
mov
push
mov
inc
divb
in
jecxz
orb
rorb
lcall
stos
pop
sub
cmp
shlb
pcmpgtd
xor
arpl
xchg
int3
xor
add
cmc
pop
cli
xchg
das
pop
push
push
cmp
fistpll
repz
jl
cmp
cmc
xchg
mov
jecxz
sbb
and
mov
push
out
aaa
in
pop
mov
mov
jp
movsl
into
cmp
les
xor
cwtl
fidivrl
sar
mov
mov
rorb
pusha
loop
ficompl
mov
data16
lret
mov
inc
or
imul
adc
inc
jae
dec
cmp
cmp
inc
test
pop
mov
or
mov
ss
and
pop
popa
adc
test
push
lcall
roll
jo
adcl
lret
xchg
notb
orb
jne
stos
fdiv
push
mov
mov
jb,pn
sbb
cmp
mov
mov
pop
rol
or
adc
inc
adc
idivb
test
pop
loopne
cld
dec
cmp
jbe
jle
into
cwtl
xchg
lock
hlt
xchg
add
add
xchg
enter
xor
jns
cmp
ja
xor
lret
out
xlat
and
cmc
fdivrs
lods
sbb
xor
or
add
add
stos
jmp
lds
or
inc
or
xchg
xchg
outsb
push
cli
and
inc
add
orl
cmp
pusha
in
repnz
mov
pop
ljmp
pop
mov
mov
imul
aaa
mov
mov
dec
rorl
cli
inc
pop
loop
arpl
push
and
nop
scas
insb
repnz
ja
inc
mov
lahf
decl
mov
mov
mov
push
ret
mov
movsl
push
dec
subb
inc
pop
lret
and
or
outsb
cld
sub
test
jmp
jle
cmpsb
xor
cmp
or
cmpsb
xchg
fucomi
addl
add
inc
icebp
xor
repnz
loope
cmp
add
pop
jae
mov
sub
fmuls
lret
es
mov
pop
lds
cmc
jp
sub
pop
mov
pop
lret
push
out
pop
mov
xchg
push
roll
adc
or
movsl
xor
mov
fldl
mov
outsl
mov
es
leave
jmp
stos
mov
xchg
xor
orb
ficoml
mov
ds
std
cli
add
cli
clc
or
mov
mov
mov
loope
les
lahf
xchg
jno
inc
mov
test
cwtl
jns
aam
adc
jl
sub
adc
je
stos
int
sbb
mov
aam
dec
fistl
dec
mov
jnp
jle
jnp
add
push
push
fwait
xor
bound
insb
push
lea
fdivp
jp,pn
imul
ficompl
pop
xor
ljmp
mov
stc
rorb
xchg
stos
mov
out
insl
push
ds
mov
mov
adc
inc
xor
mov
push
loopne
lcall
sub
movsl
fs
shrd
scas
mov
lcall
mov
gs
repz
mov
adcl
mov
test
xor
jl
jae
scas
shl
mov
adc
ret
add
andl
cltd
jne
gs
sub
ja
inc
pop
push
mov
xorb
fstpl
sub
and
rcl
push
ja
shr
sbb
shrb
or
push
int
cmp
and
add
mov
mov
pop
pushf
add
jge
mov
adc
insl
dec
cld
fwait
inc
rolb
sbb
mov
xor
mov
vlddqu
push
iret
aad
test
pusha
or
sbb
dec
roll
mov
lds
test
jnp
mov
mov
test
jmp
clc
or
loop
push
stos
cwtl
cs
loope
outsl
divb
or
in
out
sarb
std
fsubrl
std
sub
dec
push
jb
lods
jae
stos
push
adc
or
adc
adc
negb
sahf
adc
rcll
stos
xor
lock
aaa
stc
rcll
push
nop
cmp
rorb
js
aad
jmp
cmp
outsl
adc
sub
adc
movsl
int3
cmp
sbb
imul
int3
addb
jge
or
jp
je
pusha
negb
cmp
and
arpl
icebp
push
sti
or
mov
hlt
in
push
sub
fdiv
orl
push
inc
mov
jl
pop
hlt
jb
in
cltd
mov
xchg
cmp
in
daa
mov
mov
test
rorl
pushl
cwtl
cmp
cmp
std
xchg
inc
int3
mov
add
out
mov
jns
push
cmc
fimuls
mov
imul
jge
fldenv
sub
popf
sahf
xor
mov
mov
dec
or
xor
out
mov
daa
add
xchg
nop
xor
aaa
pop
mov
sub
aas
sub
fstpt
fistl
add
idivb
stos
adc
mov
jmp
call
jl
pushf
ds
lret
inc
adc
xor
fldcw
into
xor
stos
xor
gs
jo
shl
jo
jbe
outsb
lahf
add
fsin
pop
xchg
test
inc
add
loop
in
and
fstpt
subl
and
add
cmpsb
sub
jl
imul
xor
push
or
pusha
test
scas
call
cmp
xchg
mov
subl
xchg
idivl
aaa
leave
adc
sub
dec
dec
sarb
lods
jg
lahf
in
push
bound
pop
mov
add
in
lret
mov
mov
fwait
scas
push
sub
or
loopne
jle
sub
lds
jle
dec
inc
das
out
mov
xlat
fwait
inc
fwait
in
pop
int
and
ret
dec
movsb
lret
mov
les
pop
addr16
inc
dec
adc
xor
out
cmpsl
adc
nop
inc
cltd
push
jne
mov
inc
push
int
out
jnp
push
push
sbbl
fiadds
or
cmc
lods
inc
lret
sbb
arpl
movsl
mov
mov
mov
icebp
jp
movsb
xor
hlt
inc
mov
xor
imul
int
out
push
movsl
out
add
iret
pop
jp
mov
jb
push
or
push
punpckhbw
enter
enter
push
outsl
std
xchg
aas
loopne
add
mov
outsb
cmc
cmc
inc
ret
dec
xor
aas
adcl
push
push
scas
popf
lret
or
sarl
xlat
pop
fistpl
pop
pop
pop
sub
aaa
dec
testl
mov
sbb
pop
mov
dec
xor
enter
adc
or
mov
xor
sub
sbb
cld
mov
sbb
xlat
ljmp
daa
aaa
jl
cmp
inc
sbb
or
mov
sbb
into
js
mov
in
jno
and
call
mov
aam
mov
adc
cs
ljmp
jns
cmp
ja
add
mov
hlt
hlt
popf
jecxz
dec
mov
add
mov
mov
lods
mov
inc
xor
adc
mov
add
push
mov
adc
xor
xchg
push
or
test
filds
or
inc
pop
imul
call
push
sub
cltd
xorl
xchg
shrb
add
push
cltd
cmp
arpl
imul
inc
negl
iret
lock
xchg
inc
jl
stos
cld
inc
and
daa
icebp
pop
mov
lock
xor
addb
and
mov
rcr
stos
adc
das
pop
insb
fisttpl
pop
dec
xor
imul
adc
rol
or
cmpsl
mov
pop
sbb
addr16
mov
xor
mov
mov
mov
add
and
and
dec
out
push
outsb
pop
and
mov
js
fsubrp
cmpsb
sbb
loop
mov
or
pop
rcrl
hlt
jno
addb
je
imul
and
lods
mov
sub
xor
pop
lahf
push
inc
xchg
test
cmc
mov
sbb
imul
lods
aam
arpl
push
lcall
cmp
pop
push
fmull
mov
pop
push
out
test
push
inc
sti
cmp
cmp
into
jb
fs
ret
ja
cli
pop
xor
lods
ljmp
inc
push
stc
movl
cs
mov
pop
lods
cmp
mov
imul
ret
or
xchg
and
xor
mov
dec
mov
outsb
add
pop
sub
hlt
lds
jnp
bound
sub
fadds
leave
fildl
mov
nop
xchg
pop
std
pop
sub
mov
xchg
mov
xlat
dec
je
mov
push
aad
out
and
xor
faddl
sbb
inc
pop
jecxz
ss
bound
int
cmp
sub
mov
mov
push
sahf
and
pop
imul
hlt
cld
or
jo
aas
push
inc
ficoml
addr16
loop
xchg
xchg
push
subl
nop
arpl
punpckhwd
xor
nop
xchg
aam
pushf
cmpsl
das
mov
xchg
pop
in
mov
hlt
ds
and
fs
jb
add
dec
iret
cmc
or
pop
pop
cwtl
add
cmpsb
sbb
in
dec
mov
jmp
shl
mov
enter
test
aaa
jb
fcoml
movsl
aas
arpl
movsl
sbb
and
int
test
mov
pop
xor
mov
dec
or
clc
fidivl
dec
inc
iret
and
shll
sbb
iret
sub
ds
mov
cmp
pxor
movsb
dec
pop
mov
enter
dec
insb
xchg
pop
loop
hlt
fs
aam
push
or
inc
enter
and
stc
mov
add
sub
pushl
ss
mov
xchg
jg
pop
jo
aad
xchg
cwtl
outsb
fidivs
shrb
sub
popa
in
and
mov
lea
das
fmuls
push
loope
jmp
cmpsb
shll
pop
lock
lock
or
outsb
add
pop
or
lods
out
mov
mov
aam
push
push
mov
arpl
lds
and
or
and
sub
and
push
push
aad
pop
sub
add
xchg
adc
rcr
je
mov
push
adc
mov
outsl
mov
sub
push
loopne
push
js
mov
or
pop
mov
xchg
inc
jp
mov
bound
xchg
and
out
adc
jmp
arpl
xor
cmpsl
pop
mov
out
jns
rcll
insb
out
xchg
xor
sbb
mov
lea
loope
jge
mov
dec
adc
inc
mov
fldenv
jle
fimull
adc
jns
scas
pop
push
sbb
mov
cli
jmp
arpl
mov
add
faddl
and
stos
aaa
xor
mov
popf
dec
sub
aam
out
dec
inc
scas
stos
xor
xor
xor
xor
adc
testl
rcll
ja
shlb
shlb
iret
mov
push
cmpb
dec
xchg
adc
pop
imul
stos
mov
in
sahf
cmp
ds
push
dec
into
mov
inc
enter
mov
mov
in
jbe
jmp
shl
xchg
test
out
add
ret
jmp
pop
and
ljmp
imul
iret
sub
ljmp
jae
inc
cmp
aad
les
jmp
jns
push
xchg
inc
imul
mov
rolb
jbe
jo
popf
push
aaa
push
xchg
into
movsb
xor
pop
xchg
stos
jb
sbb
icebp
mov
lods
dec
lcall
jecxz
inc
mov
jb
adc
jnp
add
push
mov
add
hlt
sub
cmp
aad
dec
rorl
inc
jae
xor
int3
nop
jno
pop
std
inc
pop
repz
dec
inc
inc
popf
aam
jo
fldenv
adc
jecxz
fidivrl
clc
mov
movsb
dec
push
lcall
xor
jns
pop
mov
push
mov
xchg
ret
sub
jecxz
sbb
fistpl
lea
ja
pop
and
dec
adc
push
sbb
lock
and
out
adc
push
mov
and
cwtl
sub
jns
mov
popf
jmp
xor
or
mov
ret
out
pavgb
mov
decb
dec
cltd
xor
cltd
outsb
in
or
push
test
push
ds
inc
insb
pop
mov
int
movsb
xor
ret
inc
pop
or
dec
roll
and
mov
out
ret
addr16
sbb
loopne
sbb
out
or
mov
dec
ljmp
lds
dec
inc
sti
sub
dec
jp
loop
aaa
jo
das
movsb
rorb
inc
ja
dec
mov
xchg
add
xor
bnd
inc
xchg
xchg
push
sub
lcall
test
sbb
pop
cmc
jp
sub
call
pushf
call
imul
add
xchg
adcl
adc
shll
clc
cmp
cwtl
mov
rcrb
mov
or
mov
loope
adc
fldenv
fwait
lods
inc
jge
jge
xchg
std
in
mov
lcall
nop
imul
push
mov
inc
mov
jae
lahf
aad
xchg
lcall
push
or
stos
daa
push
inc
or
adcl
inc
sbb
cmp
jg
mov
cmc
ljmp
add
inc
and
test
pop
and
inc
mov
sbb
repnz
sub
pop
shlb
aas
xor
mov
sub
cltd
cld
adc
inc
lret
jmp
test
nop
jbe
mov
insb
mov
out
mov
add
mov
mov
pop
outsl
jo
push
adc
lock
fidivs
test
out
sub
inc
jne
ljmp
jecxz
mov
xlat
ffree
inc
shll
sub
xchg
or
inc
jno
daa
out
add
mov
into
lcall
push
add
das
cmp
dec
mov
repnz
pusha
cltd
jecxz
jp
xchg
cmpsl
xchg
cld
xor
ss
push
pop
repnz
cld
pusha
or
or
dec
xchg
add
push
loop
sub
sbb
pop
fldt
jmp
mov
sahf
popa
nop
int3
xorl
mov
js
add
and
pop
inc
cmp
jl
sarb
mov
popa
and
ss
bound
cwtl
in
pusha
mov
pop
stos
and
push
iret
pop
daa
cmp
or
out
leave
push
lret
sub
orb
push
cli
cmp
cmpsl
mov
xchg
je
cld
jno
jp
add
ds
xchg
adc
pop
es
out
fstpt
in
mov
in
out
cltd
insl
in
outsl
sbb
fidivs
insb
out
test
push
mov
cmovp
add
add
jnp
ret
xchg
mov
or
push
cmp
add
iret
adc
fcoml
call
sub
lcall
negl
mov
adc
movsl
push
dec
add
or
pop
enter
push
popa
push
mov
inc
jbe
fbstp
xor
inc
lods
push
in
pop
mov
push
mov
test
cmp
jge
pop
cltd
mov
clc
das
ret
dec
adc
sub
aas
cs
das
jge
dec
aam
mov
gs
ret
mov
push
push
shll
inc
adc
movsl
fisttpll
mov
xor
pushf
cmp
out
sub
std
scas
inc
out
sbb
stc
jg
test
std
test
mov
inc
jmp
fptan
icebp
mov
or
lea
mov
ret
lds
pop
mov
jle
sbb
mov
push
mov
lcall
lcall
dec
or
jl
lods
and
jb
lock
ficomps
sub
adc
sbb
std
push
sub
loope
cmp
ljmp
fcmovnu
xchg
movsb
xor
dec
dec
repnz
call
cmp
in
mov
push
cwtl
sbb
jmp
mov
and
mov
fs
push
mov
rorb
jg
inc
sub
lret
dec
or
xor
jp
xchg
ret
push
fcompl
pop
adc
add
fildll
push
mov
roll
mov
sarb
cld
mov
in
push
repnz
dec
addr16
xchg
outsb
mov
xchg
inc
push
cmpl
jbe
cmpsb
adc
mov
dec
imul
add
movsb
lcall
push
lods
enter
fwait
data16
fsubr
mov
xlat
push
iret
inc
pop
ja
mov
dec
add
jl
pop
gs
dec
fwait
mov
repnz
fiaddl
addr16
mov
mov
pop
js
in
inc
addr16
mov
dec
jecxz
fs
pop
jae
ret
test
aad
ret
xlat
mov
lea
into
xchg
loopne
int3
std
adc
or
or
testb
fildl
mov
push
cmp
ja
lret
cmp
push
push
xor
sub
xchg
adc
jp
cmp
and
repnz
je
negb
sub
fbstp
leave
push
das
ljmp
lret
and
xchg
bound
and
ficomps
adc
popa
jp
mov
add
rcrl
fcoml
lods
add
xchg
dec
mov
sub
push
repnz
loop
mov
jecxz
push
push
jl
cmp
add
lds
rcrl
xchg
push
add
inc
clc
dec
movsl
mov
in
push
imul
mov
xchg
jmp
mov
insl
jp
xchg
xorb
mov
sbb
pop
pop
sbb
fxch
pop
push
xchg
xchg
addr16
xchg
insl
push
dec
lcall
call
jae
stos
ret
popl
in
dec
hlt
lds
or
adc
repnz
scas
ret
sub
scas
jns
xchg
mov
mov
inc
sbb
cmp
arpl
lret
dec
mov
pxor
fdivl
sub
sub
mov
repnz
gs
jbe
dec
cmpsb
fnstcw
mov
lret
xchg
roll
inc
inc
cmpsl
sahf
dec
xchg
cmpsl
cmp
push
stc
repz
mov
test
mov
jbe
add
roll
bound
into
xlat
imul
inc
xor
repz
fxch
dec
ss
cmpsb
xlat
adc
stos
icebp
or
lds
insb
sbb
pop
xor
loopne
movsl
inc
or
inc
pop
xchg
loope
mov
sub
pop
push
inc
mov
mov
jp
mov
fcomp
pop
in
sbb
push
add
xor
mov
imul
mov
mov
pop
or
cs
enter
jl
pop
add
cmp
movsb
int3
push
sbb
data16
lahf
hlt
push
or
inc
and
xchg
xor
adc
jmp
fxam
sub
pushf
inc
inc
lds
cmpsl
xor
mov
mov
or
adc
jns
sbb
push
mov
cmp
push
loop
dec
pop
adc
ljmp
mov
out
push
lock
sbb
fistps
scas
insl
sbb
or
push
mov
dec
cmp
pop
loop
shll
arpl
mov
or
mov
mov
gs
add
stos
adc
sbbb
shr
jecxz
add
ret
insl
push
imul
lods
in
cmc
imul
mov
lds
push
mov
pop
and
es
nop
js
jno
push
in
and
pop
insb
ds
cltd
and
or
cmp
or
lret
stos
inc
sar
insb
pop
arpl
aad
jecxz
scas
ja
jp
repz
jne
das
cmp
mov
std
sar
or
lcall
jb
popa
inc
aas
fwait
pop
pop
fildl
stc
lea
dec
inc
and
push
shr
cli
repz
es
or
incl
loop
cmpb
pushf
add
lret
and
out
adc
xchg
popf
movb
mov
lret
cld
imul
push
bound
cmp
ds
fdivl
cmp
data16
jg
inc
dec
inc
jle
nop
ljmp
push
test
mov
subl
jecxz
pop
movsb
pop
loopne
sub
or
rcr
and
pushf
pop
sub
loope
mov
imul
jne
fwait
cltd
mov
xchg
push
clc
scas
mov
fidivs
lods
inc
mov
idivl
fsubrp
icebp
js
adc
fs
pop
icebp
mov
shrb
lret
pop
push
pop
xor
push
mov
mov
or
cmp
inc
jg
mov
fs
jg
fadds
push
mov
xchg
popa
and
test
outsb
loope
sahf
add
in
pop
mov
into
je
cs
inc
sub
enter
test
cmp
idiv
loope
jo
int
mov
cld
push
lods
cs
xchg
xchg
in
scas
pop
or
nop
jne
jnp
pusha
or
cmp
enter
test
in
dec
cmp
mov
xchg
fmull
mov
out
pushf
pop
repz
imul
xchg
sarb
add
bound
testl
xor
mov
sarb
fnstsw
xlat
inc
cli
mov
fnstenv
add
std
lods
mov
add
add
bound
mov
lock
hlt
adc
sbbb
adc
mov
cmp
adc
ds
data16
push
cmpsl
pusha
popa
mov
insb
push
push
out
pop
test
sbb
dec
push
cmp
cmpsl
xchg
jbe
push
incb
pusha
loope
std
adc
inc
jbe
mov
mov
xchg
add
pop
sbb
call
cmp
stc
ret
jno
push
inc
leave
hlt
jecxz
adc
cmc
push
sbb
xlat
jp
sbb
cmp
arpl
aaa
adc
test
jmp
iret
mov
sub
nop
mov
aad
test
pop
add
fadd
lods
mov
inc
xchg
cmp
iret
cwtl
jl
push
sub
cwtl
adc
cmc
aam
scas
mov
addb
out
sbbb
jg
sub
or
popl
lock
pop
ja
pop
jnp,pt
sti
pusha
add
test
shrl
inc
je
imul
and
out
aad
mov
cld
loopne
and
subb
add
xor
negl
insb
movb
dec
std
sbb
jae
sbb
sbb
mov
adc
movsb
rcrb
mov
pavgw
ficoms
es
js
outsl
adc
shrl
cmp
mov
and
cmpsl
push
scas
shll
push
mov
push
push
push
xchg
test
jecxz
leave
push
mov
fsubr
pop
js
jo
sbb
popf
mov
inc
es
aam
jne
repnz
or
mov
or
sbb
nop
lahf
aaa
mov
xor
xor
inc
add
push
inc
xor
pextrw
push
lret
leave
push
pop
xchg
dec
rclb
fmulp
pop
shrb
xor
ret
mov
jo
pop
cmp
adc
inc
add
sti
ret
test
outsb
test
les
and
inc
xor
loopne
ds
shlb
inc
xchg
pop
loopne
sbb
aad
enter
adc
xor
xchg
mov
loope
push
fs
push
mov
fldenv
je
mov
push
pop
xor
loopne
jo
scas
add
or
jnp
cmp
jge
pop
into
lods
xchg
cmpl
push
sub
iret
cmp
shr
insb
pop
cmp
xchg
or
pop
call
daa
outsb
insb
aas
dec
lock
adc
data16
in
pop
lcall
and
shlb
or
add
test
dec
mov
repnz
into
adc
int
mov
shrb
inc
jo
ds
xchg
jp
sub
loop
add
mov
test
lahf
pushf
inc
or
or
dec
ds
bound
icebp
push
sub
push
inc
jae
sub
cmp
sbb
movsl
dec
mov
lock
lds
out
movsl
pop
sub
cmc
push
stos
push
xor
push
jns
jge
lret
jmp
cld
push
bound
paddq
aam
push
ss
hlt
cmp
push
dec
call
aam
jl
sarl
jne
movsbl
push
and
into
ret
ret
jge
std
pop
outsb
dec
fidivl
rclb
xchg
pop
xchg
jmp
data16
rcrl
pop
mov
cmpsl
adc
stos
add
cmpb
add
imul
test
dec
pop
pop
aad
popa
inc
fldenv
adc
xchg
dec
adc
rcrb
pop
imul
movsb
cmp
jl
and
ret
outsb
sbb
mov
sub
loopne
xlat
mov
ret
outsl
adcl
popa
inc
pop
sbbl
repnz
sub
adc
xor
sbb
fiadds
andb
sti
scas
enter
leave
sub
jno
add
xchg
mov
movsb
jmp
sti
stos
adc
fsubr
mov
jae
adc
stos
jnp
fisttpl
es
mov
in
sbb
int
icebp
jb
repnz
in
cli
jl
push
aas
lret
or
mov
popf
xchg
das
jle
cmp
lahf
cld
pop
mov
adc
imul
test
dec
cmp
mov
adc
jne
add
push
sub
dec
cmp
and
dec
dec
mov
iret
mov
divb
cmp
xchg
movsl
xor
xchg
popf
mov
movsl
push
ja
aam
sarb
or
out
sbb
and
push
xor
mov
push
ss
fdivs
adc
js
cmp
adc
cmp
xchg
les
popa
add
add
icebp
or
add
in
aam
mov
iret
test
outsl
add
or
push
ss
in
in
in
or
ss
add
jne
outsb
inc
test
scas
ss
movsb
clc
out
pusha
or
imul
mov
jae
cmp
or
mov
movsl
ds
and
out
jmp
enter
dec
mov
adc
dec
mov
push
je
adc
xor
mov
test
sub
inc
repz
pop
pop
cmp
movsl
push
sti
add
rcr
int
mov
cli
outsl
mov
in
outsb
inc
insl
sub
shlb
clc
add
cmp
test
inc
inc
add
dec
arpl
addr16
sub
fisttpl
ljmp
cmpb
in
mov
cltd
adc
divb
popf
and
adc
daa
cmp
test
adc
andb
cmpsl
xorb
ret
inc
sbb
inc
pop
pop
hlt
jb
mov
pop
xchg
adc
mov
pop
lahf
icebp
test
mov
std
mov
notb
aam
das
or
fwait
dec
pop
mov
scas
repz
jecxz
adc
dec
repnz
push
dec
arpl
lds
bound
out
rcrl
ljmp
adc
jnp
mov
mov
movsl
insb
adc
mov
mov
dec
cmp
aam
jae
cmc
cmc
negb
mov
or
jno
push
lahf
adc
movsl
pop
cmpsl
iret
inc
xchg
sub
test
mov
lret
cwtl
xor
pop
shll
push
aad
inc
and
out
add
nop
popf
jmp
shl
or
xor
je
mov
or
leave
xchg
inc
adc
arpl
lds
add
into
pop
iret
add
lods
loopne
pop
popf
nop
scas
push
jo
pop
mov
lcall
clc
mov
or
inc
movsl
pop
adc
sbb
lret
mov
and
mov
adc
cmc
es
jg
gs
fucomi
jae
lds
xlat
mov
sub
testl
jge
popf
cld
lds
push
shlb
xor
int
mov
inc
push
stc
aas
jecxz
aaa
or
and
js
rcl
test
push
dec
shll
mov
mov
clc
imul
int
adc
pop
in
imul
inc
lret
and
aas
dec
mov
push
in
cmp
je
test
inc
clc
xchg
stos
test
add
xor
push
cld
xchg
jbe
fs
arpl
fldlg2
jmp
lods
mov
add
cmp
sbb
ds
inc
les
movsl
sbb
popa
test
and
inc
in
jecxz
stos
push
xchg
pushf
and
add
lods
jae
and
call
mov
jne
out
cs
mov
mov
sbb
stos
pop
push
xor
lods
and
adc
push
mov
mov
mov
jnp
add
nop
inc
and
in
lahf
mov
jmp
or
pop
jbe
outsb
aam
mov
movsl
dec
push
sub
dec
lcall
outsb
dec
icebp
inc
cmp
stc
and
inc
mov
xchg
out
mov
std
xor
mov
push
fsubrl
fs
inc
mov
test
inc
sub
and
insb
inc
mov
jl
je
push
ss
jo
cmp
pop
jecxz
out
arpl
call
mov
mov
mov
pushf
loope
xor
fdivrl
mov
and
test
jb
mov
mov
iret
addr16
fnsave
cmp
cmp
xor
lds
add
gs
jns
sub
push
fadd
push
mov
jle
inc
loopne
cmp
push
or
mov
loope
jg
lcall
test
loopne
sbb
ja
jnp
loop
cmp
cmpsb
fwait
or
pop
roll
inc
bound
inc
add
fldl
or
rcr
out
and
das
mov
pop
cmp
mov
mov
adc
push
pop
in
pop
dec
mov
call
jnp
out
outsl
aas
mov
scas
pop
xor
and
adc
sub
bound
out
sub
mov
aaa
jae
sbb
mov
arpl
push
cmp
loop
push
subl
nop
cmp
cli
test
pop
in
cs
out
bound
cmp
sub
sub
out
pushf
icebp
adc
adc
sti
int
add
cmpsl
mov
arpl
cltd
push
xor
lret
push
dec
mov
aam
sub
adc
pop
cmp
sub
push
sbb
dec
xor
test
scas
ret
das
cld
fs
xor
cltd
jmp
pop
cmp
outsb
inc
data16
pusha
cmp
jp
fiaddl
mov
mov
popf
and
sahf
arpl
mov
out
aad
add
add
pop
inc
mov
xor
daa
pop
mov
push
sub
sbb
adc
movsb
popa
adc
arpl
es
add
aam
test
iret
push
aas
scas
inc
and
mov
rcll
imul
or
sti
std
pop
das
pop
cs
cmp
lret
dec
fsubl
pop
mov
push
pop
mov
lcall
push
adc
mov
jle
hlt
xchg
xlat
dec
pusha
std
aaa
xlat
add
mov
push
sub
adc
aaa
enter
xchg
mov
jecxz
xchg
inc
push
pop
or
mov
cmc
call
inc
inc
into
sub
shl
cltd
or
imul
adc
mov
mov
out
cmc
jge
adc
out
push
sarl
andb
mov
add
sbb
xchg
fdivrs
ja
xor
pop
fdiv
mov
push
fisttpl
push
sub
imul
mov
inc
dec
xlat
mov
push
jo
mov
sti
cltd
dec
mov
jp
scas
mov
cs
cmp
pusha
je
cmp
mov
jb
in
push
das
icebp
arpl
lock
push
cltd
push
hlt
jmp
mov
sarl
ljmp
outsb
push
xor
sub
xchg
aaa
stos
shrl
mov
push
add
lock
call
jo
pop
and
push
fwait
stc
sub
shll
mov
push
ret
clc
and
jo
das
pop
enter
mov
cmp
adc
inc
mov
repnz
pushw
or
cli
xchg
dec
add
xchg
dec
mov
xchg
mov
mov
fisubrl
ret
mov
mov
out
aam
cltd
mov
mov
xor
lods
bound
dec
or
and
les
push
cmpsl
push
nop
in
subb
inc
insb
cmp
outsl
test
pop
cmp
sub
loopne
mov
loop
fs
pop
add
fbld
xchg
ss
pushf
mov
in
test
xchg
push
mov
cmpsl
loope
adc
sbb
or
shrb
mov
and
xor
ror
jno
xchg
xor
ja
pop
icebp
popf
inc
sub
push
add
iret
fmuls
push
adc
outsl
outsl
adc
sqrtps
aad
nop
mov
mov
imulb
sub
and
lds
inc
js
jl
jo
push
pop
jp
cli
imul
lret
in
push
push
sarl
lock
xor
dec
pop
sub
jmp
test
mov
add
jecxz
pop
cmpsb
adc
pusha
ljmp
lods
sub
mov
aaa
sub
xchg
scas
jb
sub
in
fwait
and
jp
mov
cmp
xor
cmpsb
ljmp
sub
adc
push
xorl
sahf
jge
cmp
pop
lds
pcmpgtd
bound
add
jns
aas
fsubrl
jbe
push
notb
mov
addl
sbb
test
test
pop
xchg
iret
stos
cmp
es
mov
gs
clc
inc
lret
pushf
sub
xor
dec
iret
xchg
shll
pop
clc
sarb
in
lock
ds
xor
test
jl
jl
jp
adc
movsl
aaa
jae
mov
inc
and
dec
test
jg
cs
fisttpll
out
fnsave
xor
push
outsb
int3
notb
stos
adc
push
jle
fidivl
stc
jns
adc
or
jo
pop
jmp
mov
xchg
mov
repz
mov
sahf
roll
mov
lods
js
add
mov
xchg
push
ds
sbb
iret
gs
mov
or
enter
rcrl
fs
repnz
mov
lea
mov
cmp
lock
mov
pop
mov
fldenv
mov
incb
mov
or
adc
xchg
or
aam
xchg
rolb
std
stc
cmp
mov
lret
mov
das
mov
mov
push
mov
pop
push
or
sub
mov
mov
pop
test
sbb
sarb
sub
negb
ss
sub
push
sbb
xor
pop
addr16
xchg
mov
cwtl
repz
xor
mov
xor
nop
popl
push
mov
dec
out
push
leave
insl
aad
sub
cmpsl
cld
fcmovb
enter
jge
sub
stos
adc
sti
lahf
fs
inc
test
adc
ret
jg
in
dec
inc
cmp
rorl
iret
adc
jns
and
rcrl
cwtl
fucom
mov
jg
sbb
testl
inc
aam
data16
add
aaa
inc
pop
push
fildll
jl
arpl
sub
mov
test
out
sahf
xor
addr16
movsl
fwait
adc
pop
in
imul
fidivs
xlat
cmp
mov
or
jmp
lret
loope
pop
insl
mov
jae
cmp
lds
pop
mov
sahf
fsts
imul
mov
insl
xchg
sub
scas
add
mov
lods
adc
jns
jbe
loop
call
mov
cld
pop
and
roll
roll
jge
lods
fs
pop
imul
imul
std
dec
into
lret
push
fists
popf
scas
cmp
sub
xor
mov
inc
dec
and
je
data16
cmp
and
ljmp
dec
in
inc
lea
lret
mov
js
mov
and
fisubs
mov
mov
insb
aam
adc
push
add
jp
sub
fidivl
sbb
sti
daa
enter
cli
call
pop
xorb
jge
mov
out
mov
les
xchg
dec
popf
pop
in
pop
out
es
aas
lea
adc
xchg
lods
cmp
in
cmp
aas
loopne
xor
mov
movsb
inc
add
popa
js
push
mov
adc
outsl
cmpsl
push
inc
mov
push
mov
shrl
push
cmp
or
into
pop
mov
or
mov
cld
inc
fs
outsb
pop
pop
sub
popa
lock
add
test
or
cmpsl
orl
cld
pop
xor
cltd
ja
and
mov
hlt
mov
movb
je
mov
or
cmp
push
lret
sbbl
xor
inc
sbb
mov
lret
push
and
or
cmp
ret
and
roll
mov
add
mov
xor
cmp
fldenv
sarl
data16
fisttpll
ror
sbb
lret
lret
pop
jno
cmp
cmpsb
pop
test
add
bound
sub
push
insb
popa
repnz
jmp
mov
push
imul
scas
pop
mov
out
jmp
repz
cmpsl
outsl
mov
cld
jo
and
sub
cmp
cmpsl
cltd
sbb
pop
cmp
sbb
aas
in
xchg
jns
inc
mov
arpl
mov
pop
lods
aam
stos
dec
js
inc
xchg
mov
and
inc
es
in
fldt
imul
lret
addr16
incl
cmp
pop
xor
les
adc
push
push
call
shrl
mov
xor
mov
mov
ljmp
push
sub
add
sar
lret
idivl
xchg
fsub
adc
dec
ss
dec
bound
sub
into
cmpsl
sbb
pusha
add
mov
xor
push
test
cmpb
nop
push
jns
bound
mov
cmp
addb
fdivl
leave
mov
sub
cwtl
sbb
adc
aam
iret
out
mov
push
cmp
lods
xor
push
push
aad
loop
cmc
mov
outsl
sub
dec
in
insb
imul
pop
or
cmpl
pushf
fwait
mov
ljmp
cmp
mov
and
xlat
adc
cmp
test
mov
sbb
aaa
cmp
test
lods
mov
clc
push
cwtl
push
mov
dec
stos
mov
sbb
lret
loop
push
popf
mov
cmpsb
mov
lret
inc
push
je
outsb
push
dec
inc
jge
jbe
mov
sub
jo
mov
int
rorl
cmp
les
sbb
call
ss
fildl
sbb
scas
jecxz
test
loopne
aas
add
scas
mov
adc
or
jae
add
adc
push
movsl
pusha
adc
push
cmp
cs
loopne
push
and
inc
mov
jbe
rolb
mov
jnp
dec
addr16
xchg
sub
push
imul
inc
sbb
into
cld
lods
xchg
popa
mov
cmc
ja
dec
ficomps
sub
add
gs
mov
xchg
xlat
divl
insb
cmc
mov
jmp
xor
and
enter
xchg
aaa
xchg
mov
pushf
ret
outsb
pushf
sub
mov
and
mov
pop
mov
jne
mov
out
pushf
pop
popa
daa
inc
sbb
outsb
lret
lods
adc
das
mov
mov
outsl
adc
fistpll
hlt
sbb
fwait
mov
hlt
arpl
adc
add
jae
cmpsl
fisubrl
movsl
rcrb
sbb
cmp
jecxz
mov
sub
sub
hlt
xchg
push
aad
pop
pop
fxch
ds
or
adc
out
cli
es
mov
ja
daa
fildll
xor
ret
mov
jnp
pusha
add
mov
pop
jns
sbb
mov
stos
dec
mov
inc
lcall
push
sub
xor
jns
or
mov
scas
das
or
jp
push
call
lahf
pop
sar
xchg
popf
into
cmovae
push
mov
mov
add
ss
jmp
adc
xor
fistps
scas
repz
cltd
push
lock
mov
dec
popa
add
jge
clc
clc
cmp
jbe
out
data16
insl
call
push
in
shrb
jge
into
imul
jg
cmp
out
sbb
cmp
adc
pop
sub
lcall
mov
lods
cmp
dec
aaa
jg
daa
pop
test
cs
sahf
push
mov
xor
loope
int3
adc
arpl
les
or
xchg
pop
je
xchg
nop
mov
ss
sub
popa
pop
js
cmp
push
mov
push
ljmp
inc
cmp
pop
mov
xor
fwait
cmp
popf
xchg
jmp
ljmp
fidivrl
testb
not
ret
rcr
inc
outsl
sub
shll
add
sbbl
fmulp
stos
in
inc
cmc
imul
into
lahf
inc
pop
or
xchg
ss
sbb
inc
mov
xchg
and
out
xchg
pusha
sbb
and
sbb
xor
test
pop
xor
inc
lcall
imul
mov
mov
icebp
sbb
cmp
cmpsl
dec
xchg
insl
cmp
sub
test
pushf
popf
push
inc
cmpl
call
pop
xchg
xchg
jp
fwait
push
sub
fs
xchg
dec
insb
fcmovnbe
aad
imul
jge
xchg
cld
and
mov
fldcw
lret
lahf
mov
or
pop
jmp
ds
insl
and
lahf
or
lods
mov
mov
or
xchg
inc
fldl
ds
mov
pop
pop
scas
outsb
popa
mov
adc
fndisi(8087
adc
mov
arpl
mov
stc
xor
out
push
push
dec
stos
add
sahf
adc
std
outsb
or
jecxz
fs
repz
ficomps
cmp
out
lods
fdivl
pop
mov
addr16
push
rol
add
mov
xchg
sub
mov
test
out
fstl
fcompl
cmpsl
adc
xchg
lahf
cmpsl
subl
mov
mov
imul
xchg
les
or
mov
mov
cwtl
xor
xor
das
xor
faddp
ljmp
sub
popf
mov
mov
cmpsb
or
popa
jecxz
cmpb
popa
loop
clc
mov
jns
inc
out
push
leave
adcl
int3
bound
std
test
rcrl
arpl
sub
fs
add
fcoml
push
shr
sub
mov
xor
cld
mov
push
dec
mov
call
outsb
ljmp
xorl
arpl
scas
mov
pop
stos
subb
adc
or
mov
cmpsb
pop
pop
lods
add
mov
push
jno
push
push
cmpsl
xor
ljmp
dec
and
jp
push
gs
sbb
inc
stos
test
dec
xchg
jb
push
cmpsb
mov
and
or
ja
inc
sbb
fisttpll
xchg
inc
ret
cmpsl
sbb
sbb
into
fcomps
lahf
xor
pop
jmp
xchg
jmp
inc
enter
int3
jle
adc
stos
mov
aam
stc
add
ss
jnp
ret
punpckhbw
mov
fcom
lret
in
cmp
movsl
jg
movsl
push
into
and
out
sub
insl
or
int
imul
inc
cmp
xor
jb
xchg
fmuls
out
in
push
ret
fcoms
dec
sbbl
mov
jae
jb
daa
in
arpl
cmp
cmp
or
lods
dec
testb
pop
test
jbe
xor
or
jmp
jp
mov
xchg
xor
insl
flds
scas
inc
xchg
pop
inc
sbb
adc
test
popf
dec
clc
pop
dec
xchg
mov
test
cmp
or
and
hlt
enter
mov
jne
jo
subl
js
movsl
add
mov
adc
out
sar
adc
mov
jnp
jmp
mov
mov
das
fs
gs
inc
mov
push
mov
add
daa
out
clc
inc
mov
jo
into
xor
scas
pusha
mov
cmp
cmp
mov
and
movsb
push
cmpb
iret
test
sbb
jbe
mov
xor
fwait
mov
pop
rorl
test
fmull
sub
dec
cmc
and
xchg
sub
jg
cli
jno
leave
lock
mov
sbb
jnp
or
insb
stc
xchg
mov
fwait
insb
or
xor
out
mov
jae
loopne
xor
mov
iret
cli
pushf
inc
test
jo
dec
gs
mov
pop
stc
adc
nop
and
je
iret
in
cmp
loope
xor
push
lahf
pop
mov
pop
das
mov
ret
mov
xchg
insl
loop
xlat
lret
pop
lock
lock
jns
mov
xchg
mov
mov
mov
pusha
mov
mov
popf
ss
mov
adc
push
inc
ss
cmp
fidivrl
mov
mov
or
sub
push
jle
xchg
lret
mov
inc
dec
jp
ret
sub
xlat
popf
inc
lret
outsb
decl
aaa
xchg
jne
pop
mov
xchg
cld
xchg
pusha
sub
into
adc
jmp
ret
imul
xlat
inc
pop
adc
mov
mov
popa
subl
aaa
sub
fstps
dec
sbb
mov
jno
lahf
int3
push
mov
jne
sbb
ljmp
mov
and
insl
aad
imul
sub
xor
int
ljmp
lods
faddp
dec
movb
decl
xlat
shlb
sub
mov
test
sub
pusha
xor
adc
or
pop
push
xchg
lcall
jl
cmp
fsts
aad
into
cltd
outsb
fs
adc
cld
sahf
call
clc
sbb
ret
addl
dec
mov
lds
cltd
aaa
inc
mov
mov
sbbb
pop
dec
inc
cmpsl
cmpsl
push
adc
fst
jne
ja
xor
push
nop
clc
scas
lret
idivl
into
mov
jecxz
test
pop
dec
test
mov
les
inc
cmp
iret
test
or
in
loopne
xorl
jo
in
inc
push
dec
or
mov
xchg
cli
cmp
sti
jns
scas
mov
jno
fimull
sbb
ljmp
sbb
leave
bound
decl
or
add
dec
mov
jg
mov
adc
fisttpll
lds
push
jae
jmp
xchg
into
loope
loope
sbb
xlat
sbb
xchg
out
xchg
sub
mov
push
test
std
sbbb
movl
push
stos
lock
ss
daa
xor
adc
push
lea
inc
bound
aas
lcall
lcall
push
mov
rdmsr
mov
and
and
xor
mov
mov
adc
inc
fmull
adc
push
iret
mov
or
add
int
aas
mov
sbb
mov
mov
adc
push
sbb
pop
sarb
in
adc
cwtl
data16
xor
sub
cmpsl
aad
loopne
fistpl
inc
std
test
mov
icebp
decl
push
jmp
jmp
fstl
lret
call
adc
shr
mov
mov
dec
pusha
cmp
in
inc
mov
nop
out
inc
cmc
cmpsl
adc
add
mov
popf
ljmp
sbb
xrelease
pop
mov
enter
fisubs
outsb
push
insb
xchg
mov
push
call
or
fsts
adc
dec
pop
dec
rorb
leave
inc
int3
int3
fimull
lea
icebp
mov
xchg
xchg
mov
jp
add
push
push
hlt
sbb
xlat
imul
mov
arpl
cmpsl
push
mov
inc
ret
inc
mov
pushl
inc
sbb
lods
dec
sub
and
push
les
out
shll
cmp
mov
mov
lcall
push
mov
pop
jne
xchg
fwait
sub
cmp
cli
inc
lods
fwait
imul
ja
mov
push
insb
int
push
sbb
or
mov
dec
adc
lods
aas
inc
sub
rcll
jne
jle
and
ljmp
inc
mov
mov
pop
icebp
inc
mov
insb
inc
jo
pop
lods
and
ret
inc
mov
leave
mov
xchg
or
inc
popf
cmp
mov
stos
mov
or
mov
xor
adc
cmpsl
push
push
cli
mov
das
iret
adc
adc
mov
lock
leave
cmp
data16
mov
pop
xchg
out
lods
jnp
divb
push
mov
in
jmp
mov
jnp
loopne
jno
aaa
push
mov
dec
and
jno
mov
pop
arpl
aam
mov
jle
lock
mov
cmp
sub
jne
push
xchg
mov
ret
xchg
lret
outsl
mov
or
xchg
dec
add
jb
mov
cli
or
mov
dec
out
dec
arpl
mov
jmp
arpl
lcall
lret
pop
mov
imul
lea
xchg
loope
divl
decl
adc
aas
xchg
out
push
add
mov
add
leave
leave
cmp
pop
bound
sbb
aaa
adc
call
cmp
push
popl
dec
xor
mov
xchg
cmp
cmpsb
jno
push
movsb
mulps
dec
jecxz
push
sbb
mov
sbb
imul
sbb
scas
add
push
movsl
sub
dec
mov
insl
adc
push
mov
mov
out
das
pusha
sub
mov
inc
mov
pop
sbb
cmp
sub
sahf
dec
xor
clc
scas
mov
in
je
inc
shlb
or
sub
ja
dec
loop
leave
xchg
jo
call
icebp
outsl
hlt
push
sub
sub
test
mov
iret
jne
andb
shrl
and
int
gs
jle
xchg
cmp
loope
add
fidivl
dec
ret
out
and
adc
cmc
aam
and
ret
push
xchg
push
sub
rcr
inc
inc
mov
jno
sbb
into
inc
jecxz
jae
clc
lret
mov
mov
loop
cmpsb
out
inc
ss
jmp
jge
out
iret
shlb
aaa
out
jmp
and
adc
pusha
and
bswap
inc
or
xchg
xchg
adc
lea
fstpl
bound
push
pusha
pop
fstpt
roll
stos
or
push
cs
stos
mov
cli
adc
jae
pop
and
pusha
pop
cmp
leave
mov
inc
push
out
add
cmpsl
and
adc
cmpsl
roll
ja
inc
or
ljmp
push
bound
test
xor
stos
mov
mov
in
inc
js
loop
sbb
jl
xor
jg
inc
in
xor
xchg
lods
imul
jne
mov
xorb
pusha
jmp
push
mov
mov
fs
loope
mov
jecxz
in
adc
cwtl
lds
add
sbb
cmpsb
jnp
mov
or
rcrb
incb
jno
add
cmp
cli
or
in
push
sti
pop
je
stc
stos
lret
add
inc
pusha
out
fisttpl
jle
jo
add
les
xchg
fs
clc
int3
push
scas
inc
shr
or
sub
lret
dec
inc
sub
or
sub
aas
sub
js
std
mov
lret
repnz
fmuls
xchg
and
pop
into
ret
push
std
in
xchg
popf
cmp
clc
mov
aaa
stos
jge
dec
lcall
call
call
add
ds
jl
mov
jb
or
push
into
fwait
mov
sbb
out
sbb
sbb
lds
nop
push
lret
ja
sub
lret
mov
xor
or
aam
repz
dec
cmp
popa
and
or
nop
xchg
jmp
lret
adc
dec
cmp
insl
adc
and
fwait
sbbb
mov
aas
mov
aad
jge
adc
lock
out
sbb
or
out
cmp
hlt
jne
mov
xor
mov
lret
jbe
and
adc
pop
inc
cmpsl
dec
inc
or
shrl
imul
mov
or
pop
jns
cmp
and
stc
xchg
push
sub
push
adc
outsb
mov
lret
push
xchg
xor
adc
pop
sub
xchg
cmpsl
stos
xchg
or
cmpsl
mov
mov
dec
pop
inc
dec
push
insl
leave
push
mov
and
adc
adc
jmp
xorl
aas
loopne
outsb
movsl
lea
lds
out
sub
ljmp
out
negb
mov
in
repz
xor
je
jg
shl
cli
or
in
mov
pop
repz
push
jb
push
push
inc
push
mov
mov
fstl
jmp
xor
mov
sub
mov
out
mov
mov
xchg
sti
adc
xlat
inc
cmpsb
daa
bound
pushf
fisttpl
stos
ja
test
pop
stos
lods
insl
fists
mov
push
mov
lds
jecxz
lahf
xlat
push
inc
ret
lahf
add
xchg
ret
push
call
xor
mov
pop
inc
pop
push
lret
pop
inc
adc
sub
mov
imul
sarl
or
iret
push
loop
test
mov
adcb
cmp
lret
insl
push
push
je
xchg
or
imul
jb
push
shlb
push
clc
pop
jb
inc
stos
ss
pop
cmp
jbe
jmp
pop
js
inc
or
test
xlat
jne
test
and
ret
aas
push
pop
cmp
std
outsb
xchg
cld
vpmulhw
sarl
add
dec
adc
lods
repz
fs
int3
stos
icebp
xchg
push
icebp
and
jns
inc
ljmp
stos
mov
mov
rclb
push
sub
sub
icebp
test
imull
ljmp
sarl
psllq
repnz
lret
mov
mov
aad
pop
inc
lock
aaa
jno
push
pusha
and
cmp
pop
mov
dec
xor
xlat
xlat
sbb
inc
and
imul
cmp
mov
cwtl
sub
int
das
adc
inc
xor
sbb
mov
xchg
push
shrb
xlat
push
xor
xchg
dec
jb
lock
stos
and
or
arpl
jbe
add
out
fdivs
out
push
add
xor
sub
rorb
jbe
lret
loop
pop
orb
out
mov
arpl
test
mov
add
jecxz
inc
popl
orb
outsl
inc
fwait
in
dec
imul
pop
les
cmp
fdivl
incl
xor
stos
sarb
das
sbb
lods
js
inc
cmp
xchg
ljmp
shrl
xor
jecxz
xchg
cli
stc
sbb
ss
leave
dec
fdivs
repz
mull
insb
and
int3
ljmp
ficompl
cmp
pop
in
cmpsl
add
scas
das
mov
sub
mov
lods
aaa
mov
or
bound
dec
adc
shrb
jne
inc
ss
int
xchg
jl
sub
and
push
jbe
es
insb
movsb
and
in
cmp
jmp
mov
push
lods
nop
push
addr16
iret
loopne
aad
dec
inc
xchg
in
add
daa
addb
pop
and
ret
xchg
add
out
stc
int
mov
cs
mov
jns
mov
rolb
clc
mov
pusha
fisubl
int
faddl
out
xchg
pusha
or
je
and
je
std
rorl
pushf
mov
dec
mul
out
es
inc
add
cmp
sbb
adcb
test
addr16
test
jne
fwait
cmpsb
xor
addr16
pop
arpl
repz
sarl
cmc
pop
shrb
jg
push
jo
and
and
fildl
xlat
outsb
lcall
or
es
sub
fadds
cmp
and
pop
xchg
dec
dec
mov
ja
or
clc
inc
dec
push
fisttpll
sti
cs
ret
sub
shl
jb
sub
jmp
jle
cmp
popl
clc
inc
jmp
mov
sub
icebp
imul
les
test
push
jecxz
popf
xor
decl
mov
mov
xor
stos
push
xor
mov
push
jg
cwtl
ss
int3
fldcw
sub
xchg
fimuls
cmp
aad
loop
and
push
xchg
shll
cmc
cwtl
aas
cmp
fildl
jae
mov
xchg
ds
sarb
dec
bnd
jae
sahf
cmp
in
add
dec
cmp
fdivrl
xchg
mov
aam
or
sarb
movsl
arpl
cld
mov
fmull
mov
push
aad
push
push
ret
jae
std
loop
fwait
xor
repz
push
lret
stos
pop
lods
inc
xor
ljmp
lods
push
cld
mov
inc
aad
push
jp
pop
adc
aas
cmp
inc
mov
nop
and
addr16
daa
and
sbb
ret
sbb
push
fcmovnu
or
sahf
push
sub
adc
xor
push
sti
gs
mov
adc
je
subl
mov
notl
icebp
das
mov
push
dec
and
in
shlb
sub
cs
mov
jge
and
add
clc
xchg
mov
xor
mov
fstpt
jle
in
test
in
adc
cltd
loopne
std
xchg
cmp
push
add
jl
push
mov
adc
orb
adc
add
arpl
stos
lea
inc
inc
push
cli
roll
or
fs
iret
pop
cmpsb
mov
push
push
aaa
jl
int
xchg
cmp
lea
into
xchg
cmp
jae
sbb
dec
xchg
inc
inc
xchg
sub
mov
and
movsb
fcompl
dec
sar
pop
adc
aam
clc
sbb
jmp
insb
cwtl
shlb
lret
popa
int
add
xor
in
and
jge
mov
es
je
pop
and
out
lods
xchg
test
add
push
jp
bound
inc
test
and
ret
push
subl
lods
jno
es
pop
xor
inc
jge
fistps
xchg
mov
iret
xchg
mov
xchg
push
stc
sbb
push
pushf
xor
jae
movb
inc
add
mov
outsb
inc
mov
mov
imul
lea
fsts
jmp
dec
scas
adc
movsl
cmp
js
cmp
outsb
pusha
js
jg
add
or
aam
hlt
fidivl
pop
push
push
lret
gs
mov
orb
mull
jl
mov
cli
push
pop
call
xor
and
cmpsb
imul
xor
ret
add
inc
xor
xchg
loop
sub
push
mov
daa
jge
icebp
daa
aad
push
andl
inc
add
mov
cmp
iret
sub
xlat
dec
xor
daa
fisubl
mov
les
add
dec
test
pop
add
bound
ljmp
int3
test
sarl
and
push
fistl
cmp
mov
cmpsl
bnd
mov
or
mov
stos
hlt
test
xchg
mov
ss
mov
and
lret
out
fldenv
mov
mov
mov
inc
js
mov
or
dec
dec
mov
lods
and
cmp
xchg
js
in
push
inc
mov
add
add
ret
into
cmpsl
or
shr
fnstcw
fwait
int
jbe
lock
xchg
aaa
shr
dec
and
outsb
in
jo
mov
sbb
mov
sbbb
pop
negb
pop
pop
push
cmc
push
fisubrl
mov
sub
outsb
shlb
lret
daa
dec
ret
mov
add
iret
repz
cmp
or
pushf
out
or
mov
loope
inc
adc
loope
pusha
idivb
into
test
push
adc
jg
adc
testb
mov
sub
clc
dec
ret
jno
and
jnp
and
outsb
stc
icebp
pop
adc
rol
arpl
clc
sbb
pop
pop
pop
xor
mov
inc
mov
ljmp
jno
sbb
mov
pop
xor
dec
scas
add
dec
cmpb
icebp
mov
mov
cmp
clc
mov
xchg
movsl
jne
mov
js
es
stc
sub
push
sbb
scas
jmp
xchg
sub
out
je
sub
jle
loope
imul
std
jl
mov
lea
aam
aaa
sbb
xor
loope
or
dec
mov
jmp
xchg
inc
cmp
push
bnd
hlt
pushf
xchg
or
fistl
js
mov
loopne
jle
add
cmp
dec
xchg
push
insl
cmp
cmc
inc
arpl
ljmp
ja
stc
mov
lret
ret
sbb
into
ret
adc
idivl
dec
pop
gs
aaa
scas
lret
inc
adc
imul
push
ja
lock
rol
ret
ficompl
shll
cmpsl
xor
outsl
push
shll
stos
andl
cli
adc
mov
pusha
xchg
mov
xchg
mov
test
pusha
or
shlb
mov
mov
mov
mov
xlat
in
lret
sbb
inc
fsubrl
rcrl
xor
mov
rep
jge
out
pop
loop
jecxz
add
nop
push
adc
push
insl
add
scas
pushf
pop
arpl
bound
pusha
mov
roll
jle
out
dec
xchg
out
push
frstor
xchg
xchg
jmp
jbe
mov
int3
mov
lret
pusha
jno
inc
imul
push
or
je
inc
mov
fbstp
and
fisttpl
xor
sub
dec
test
and
int3
mov
enter
loope
cmpsl
push
add
jo
push
adc
xchg
test
mov
dec
lcall
shrb
ljmp
mov
stos
stos
sbb
dec
stos
push
ret
xchg
sbb
leave
cwtl
or
ss
and
mov
pop
ja
scas
or
inc
aas
and
xchg
out
cmp
adc
add
xor
subl
pop
mov
std
int3
aas
stc
insl
sub
or
lods
push
negb
cmp
aam
vmread
shr
movsb
pop
mov
pop
add
add
in
jg
mov
mov
push
data16
sbb
adc
arpl
cmp
iret
xor
jbe
and
popa
in
jno
aaa
sub
jb
pushf
pop
cld
sub
test
dec
pop
fnstcw
test
mov
arpl
pop
sarb
mov
icebp
das
loopne
hlt
jns
add
pushf
xor
mov
jo
inc
or
pusha
js
dec
push
cmpsb
scas
xor
js
popf
lret
sbb
js
add
dec
pop
adc
mov
jo
addb
xor
cltd
mov
inc
mov
shll
xchg
and
inc
pop
add
shrl
and
dec
mov
lock
mov
and
ret
mov
sub
push
scas
xor
mov
aam
jge
fyl2xp1
cmp
add
aad
inc
pop
push
shlb
ja
sbb
jno
push
dec
pop
pushf
jae
lret
pop
ljmp
dec
cmpsb
push
popa
enter
inc
sbb
cmpsl
mov
push
sub
dec
cmp
ljmp
js
xor
hlt
mov
scas
lahf
aas
insl
mov
ljmp
mov
mov
cmp
jbe
sbb
mov
mov
dec
xchg
in
xchg
gs
insl
flds
push
sahf
repz
sub
adc
jmp
negb
movsl
jnp
divl
jmp
jmp
pop
mov
scas
sbb
dec
xor
inc
xchg
push
scas
cwtl
fisttps
push
add
ja
cmp
or
xchg
ficompl
cwtl
in
js
adc
filds
stos
dec
pop
pop
stos
xor
cmpsb
and
fcomps
pop
xchg
mov
in
cmp
adc
jecxz
test
pop
or
push
mov
or
dec
scas
pop
je
lcall
lods
fidivl
mov
cld
add
pushf
loope
jecxz
jo
mov
jae
or
outsb
rolb
lahf
add
aaa
jge
test
sub
daa
or
fsts
xchg
jle
xchg
and
movsb
jge
fabs
loop
aam
addl
push
lock
outsb
lods
lahf
mov
and
adc
xor
fisttps
sub
xchg
lcall
fildl
mov
arpl
inc
scas
lods
and
xchg
js
iret
add
insl
mov
dec
icebp
sbb
stos
inc
sbb
dec
popf
add
push
jns
push
adc
dec
test
lahf
repz
dec
mov
cwtl
ret
test
jb
xor
setne
cmp
jmp
and
and
pop
aad
fstpl
cmp
pop
mov
mov
sarb
arpl
negl
fwait
jg
insl
movsb
cld
mov
inc
or
mov
movsb
dec
xor
gs
xchg
inc
nop
inc
aas
or
shl
cwtl
sbbb
arpl
pop
sub
je
insb
dec
test
rcll
mov
xor
cmp
int
pop
adc
into
pop
mov
add
cmpsb
pusha
mov
xchg
pextrw
and
out
sub
ljmp
and
or
push
jae
jns
adc
mov
sub
xchg
repz
adc
adc
shll
ja
dec
jae
jae
cmpsb
or
jmp
hlt
mov
add
mov
pop
popf
loop
sub
xor
addr16
ljmp
out
push
push
imul
repz
ja
lret
iret
add
push
push
inc
mov
fdivs
lods
repnz
jnp
pop
jge
sarl
stos
cmp
mov
testb
cwtl
dec
pop
ret
and
push
lcall
sahf
adc
or
aam
lds
ljmp
stc
adc
out
push
fnclex
cmp
add
pop
xor
outsb
loopne
mov
xor
cmp
push
je
testl
fmull
in
jecxz
ss
xor
rorb
dec
mov
cltd
scas
xchg
or
clc
mov
cli
xchg
sahf
pop
mov
add
and
dec
xor
push
mov
lods
jge
xor
add
inc
mov
push
ss
in
xchg
orl
mov
jmp
dec
xchg
rol
sub
lret
pop
push
jecxz
inc
movsl
mov
les
inc
aas
repnz
adc
mov
push
incl
jo
add
sbb
popa
jmp
push
js
xor
mov
push
std
mov
in
adc
imul
push
push
xor
push
mov
and
mov
pop
add
fstpl
cli
mov
stos
incb
mov
mov
mov
cmc
jg
push
adcl
pop
addb
pop
mov
xor
sbb
repz
jl
or
cmp
arpl
and
out
in
jecxz
jb
fidivrs
int
in
sbb
mov
mov
fs
sbb
xchg
int3
and
data16
jg
mov
pop
mov
mov
fmuls
jnp
jg
inc
lods
loopne
fisubrs
inc
mov
jge
sbb
pop
hlt
mov
mov
hlt
dec
jge
jo
dec
jmp
les
movsb
xchg
xor
aam
daa
xchg
adc
dec
push
and
fs
jp
xchg
inc
add
dec
push
addr16
xor
icebp
imul
repnz
ret
test
jle
inc
jecxz
mov
dec
xchg
sub
jne
mov
jno
sbb
shrb
mov
shlb
pop
adc
mov
icebp
sti
pop
arpl
movsl
lahf
xlat
pop
fsts
aaa
jae
xchg
add
jne
in
movsb
push
std
cmp
inc
mov
test
test
pop
repz
jmp
pop
mov
sub
mov
and
out
sub
dec
stc
imul
inc
mov
pop
out
int3
xchg
out
aas
dec
pop
cmpsb
and
scas
and
push
and
and
cli
sub
testb
stos
lret
fcomps
and
lcall
cs
adc
scas
pop
xor
mov
mov
in
loope
dec
test
cmp
xchg
inc
ljmp
push
pop
lret
jp
shll
or
pusha
sbb
adcb
out
and
test
popf
daa
dec
imul
pop
shl
out
sub
data16
push
jns
xchg
pusha
fwait
pop
mov
add
xlat
les
mov
jb
adc
aaa
movlps
adcb
xlat
out
pop
jecxz
mov
dec
out
push
movsb
or
fsubs
repz
and
std
mov
outsb
or
popa
mov
sbb
mov
dec
jle
adc
xchg
add
sbb
mov
enter
sub
pop
push
clc
mov
push
int
mov
pop
xchg
data16
cmpsb
cmp
xchg
int3
or
mov
mov
in
daa
clc
xchg
mov
stos
xchg
sub
sbbl
push
out
outsb
mov
cmp
repz
cli
daa
iret
stos
aam
push
jo
lret
cmp
push
push
pop
add
dec
pop
cmp
sbbl
ljmp
aam
cmpsb
adc
push
cmp
subb
cli
decl
or
pop
sti
data16
mov
xchg
fnstcw
mov
sbb
push
fisttps
das
outsb
mov
into
lret
dec
push
cmp
sbb
sbb
scas
outsl
cmc
inc
sarb
fisttps
ljmp
and
pop
adc
cmp
push
adc
aas
stos
mov
dec
fcmovnb
lods
jecxz
int
mov
testl
lret
xor
pop
imul
aam
jb
call
loopne
mov
push
mov
pop
add
outsb
pushf
enter
inc
jo
imul
pop
jle
shl
xor
pop
aad
jno
sbb
lret
pushf
cltd
xchg
jge
mov
sbb
mov
and
ret
cltd
push
sub
lock
push
loopne
out
and
data16
ficoms
or
dec
daa
sub
gs
sub
pop
adc
mov
lods
push
xchg
repz
cld
in
fcoml
mov
loope
adc
add
jae
adc
popf
add
rolb
aaa
inc
mov
pop
mov
jg
test
mov
mov
xor
test
push
iret
outsl
push
outsl
fwait
pop
or
call
push
popl
out
imul
fxch
std
mov
or
loope
xchg
adc
pop
adc
xchg
inc
insb
xchg
fwait
pop
xchg
jl,pt
pushf
imulb
dec
mov
jo
jge
or
pop
mov
sar
es
cmc
clc
clts
incb
daa
test
or
lods
test
jae
fistpll
ret
xchg
dec
jecxz
fstl
mov
cwtl
dec
scas
rolb
rol
xchg
dec
mov
adcl
mov
jg
fs
outsb
jmp
in
les
cmp
push
in
jne
inc
daa
ljmp
xchg
inc
aam
mov
loope
pusha
out
popf
mov
fbstp
dec
push
jb
xchg
aaa
in
push
sti
cmp
cmpsb
rorb
pushf
jo
xchg
leave
shll
mov
fcoml
int
adc
adc
dec
testb
fcompl
lcall
stos
xor
pushf
sub
addl
sub
loope
sub
es
in
mov
cmpsl
gs
cmp
stos
rcrl
cmpsl
cmpsb
adc
imul
cmc
movsl
cmp
jae
jnp
jo
sbb
xchg
ds
mov
pop
loop
loop
popa
jge
mov
inc
sbbl
pop
push
fisttpl
lds
clc
dec
fs
push
xor
out
dec
pop
cmpsb
es
sar
sbb
pusha
idivb
cmp
and
je
out
push
xor
roll
outsb
mov
test
fwait
mov
ja
fcmovne
lods
or
lret
lahf
jnp
or
sahf
cmp
pop
nop
or
cmp
dec
lea
ljmp
mov
insb
cmp
push
sub
mov
mov
insl
test
mov
inc
f2xm1
bound
mov
out
mov
lds
mov
dec
in
sub
xchg
mov
cmp
cmpsb
sbb
jne
aad
sahf
fimull
ljmp
das
push
adc
das
ljmp
dec
mov
shll
sub
sub
lret
fs
push
or
push
mov
out
xchg
pop
pop
xchg
das
in
div
dec
mov
push
dec
ss
jp
mov
pop
ljmp
fbstp
imulb
and
jecxz
pop
mov
push
cmp
in
imul
push
inc
xor
mov
mov
mov
push
cs
rcrb
lcall
loope
xor
loopne
and
dec
push
ret
and
add
test
or
and
and
jg
xor
pop
loope
mov
xor
xor
mov
int
mov
jne
cltd
cmpsl
jbe
adc
pop
cli
pop
sbb
scas
fsubp
flds
out
inc
mov
popf
or
dec
call
insl
inc
ja
mov
stos
shll
mov
out
xor
sub
push
inc
sarl
mov
loope
test
test
or
adc
insl
addr16
in
push
pop
arpl
rcl
ret
jecxz
ret
stos
insl
add
rol
testb
lahf
imul
pop
lcall
mov
loopne
loope
mov
and
enter
xchg
gs
ljmp
test
cmpl
outsl
xchg
lahf
push
lcall
pop
pop
mulps
pop
addr16
sub
cmpsb
data16
popa
mov
mov
cld
addr16
imulb
mov
aaa
test
xlat
aad
jns
pop
lock
jbe
imul
aaa
mov
out
popf
js
imul
pop
cs
push
arpl
add
es
pop
pop
sahf
add
or
and
cli
inc
cvtps2pd
pop
fnstenv
dec
shlb
xor
xlat
cli
sarl
push
xchg
shl
loop
sbb
adc
cmp
fstpt
pop
hlt
adc
cmc
inc
call
enter
rorl
out
cmc
pop
mov
test
xchg
lds
mov
sbb
mov
adc
insl
adc
adc
pop
xchg
cmpl
cmp
stos
pusha
test
jne
xor
ds
mov
cmc
pop
int
fsubr
xchg
scas
lret
stc
sub
dec
xchg
pop
mov
cs
pop
or
or
jb
dec
cltd
push
jb
iret
mov
insb
iret
xor
jge
pop
ret
aaa
add
push
push
dec
cmp
dec
dec
xchg
or
or
test
and
cli
pop
addr16
adcl
pop
xchg
mov
fistps
daa
fidivrs
mov
mov
mov
xor
outsb
sub
push
mov
fcom
in
mov
lcall
bound
push
movsb
mov
jle
push
adc
aam
cs
mulb
repnz
ficoml
inc
push
cwtl
xchg
adc
mov
add
add
ja
jno
cwtl
out
hlt
mov
push
testl
and
scas
scas
xchg
push
xchg
cmovb
in
popf
out
and
lahf
mov
lods
jle
stc
xchg
shl
pop
inc
and
push
movsb
lods
lea
mov
mov
shll
in
add
insb
mov
add
jl
insb
xor
mov
cli
les
cmp
and
push
int
cwtl
pop
mov
imul
in
ret
loop
scas
add
je
mov
dec
cmc
stos
shll
mov
lcall
jecxz
lcall
outsb
ficomps
gs
xor
outsl
cmp
imul
aad
sub
inc
xchg
jg
sub
lods
aaa
xchg
or
mov
loope
bound
jo
int3
and
push
loope
hlt
inc
std
or
cmpsl
inc
jmp
adc
lahf
push
gs
mov
cmp
or
scas
cmp
jno
jae
add
cli
rorb
push
jecxz,pn
and
fnstenv
or
out
mov
or
add
data16
pop
sub
sbb
jg
mov
loope
adc
push
push
jae
lret
lods
jns
add
cmc
daa
fiadds
fwait
out
cmpsb
xor
dec
int3
and
push
bound
push
dec
std
jmp
push
insb
mov
mov
xchg
pop
arpl
dec
adc
fadds
call
inc
jle
pop
mov
pusha
cmp
xchg
or
aam
mov
adc
aas
lahf
popf
push
cmp
pop
aaa
loope
pop
out
jl
add
faddp
test
fwait
push
mov
lea
pop
cmp
enter
jbe
sbb
inc
loopne
dec
push
clc
loopne
sbb
loope
add
pusha
mov
and
mov
dec
mov
sub
cmp
shll
xchg
fs
filds
xchg
jle
or
addb
lds
jg
mov
jecxz
xlat
push
mov
mov
cmp
call
outsb
mov
lea
sti
int3
sub
scas
inc
mov
daa
xor
jmp
orb
and
mov
inc
cwtl
cmpsl
fisttpl
push
imull
pop
subb
mov
cmp
cmp
addr16
pop
imul
push
pusha
jge
pusha
js
adc
pop
jecxz
push
hlt
jmp
fnstcw
ja
and
fucomi
push
lahf
divl
outsb
xchg
lods
inc
jo
ljmp
add
popf
jle
sub
fs
ret
mov
scas
mov
js
enter
andb
out
add
inc
bnd
xor
mov
es
inc
adc
fcoml
sub
fldl
mov
dec
and
xchg
cs
popf
cltd
inc
jbe
out
jle
addr16
xor
add
mov
dec
jno
adc
add
icebp
nop
lds
add
adc
gs
mov
and
xchg
or
xor
mov
xchg
and
arpl
dec
push
insb
imull
pop
pop
leave
mov
sbb
out
pop
sbb
shrb
push
adc
or
xchg
mov
pop
lret
ja
push
dec
push
cmpsb
pusha
mov
test
out
mov
or
subl
mov
push
add
sub
xlat
pop
imul
jmp
jg
cmc
leave
jae
sub
frstor
mov
out
push
push
loope
jo
lods
pop
test
popa
idivb
ret
jg
cmp
mov
dec
mov
inc
fstps
xlat
pusha
imul
and
popf
mov
test
lcall
aam
in
xchg
std
inc
adc
cmpsb
cmpsl
xchg
or
or
test
sub
adc
lea
sub
test
mov
cmp
lds
push
psllq
push
je
mov
lcall
adc
cmpsl
inc
mov
cmp
scas
filds
scas
and
push
cli
push
out
je
addb
repz
adc
xchg
insl
mov
popa
mov
jns
daa
push
aas
adc
mov
xchg
repnz
jns
movsl
into
cmp
or
aad
dec
pusha
das
shlb
push
jno
or
shl
ret
xor
pushf
rolb
inc
ja
xchg
outsb
mov
add
enter
lods
jo
addl
xchg
mov
lret
orl
pop
xchg
mov
int
push
adc
gs
pop
loop
lcall
outsb
inc
imul
push
jnp
jo
lcall
insb
cs
loopne
xor
fisttps
mov
mov
sahf
out
js
enter
jns
out
fiadds
lods
xor
or
fwait
fwait
pop
jecxz
or
rcrb
add
jl
les
or
xchg
sbb
insb
stos
mov
mov
push
jmp
out
movb
cwtl
mov
repz
addb
stos
mov
scas
mov
loope
sub
fwait
rcll
ret
addr16
mov
xor
dec
push
divl
divb
cmp
in
mov
push
sbb
or
pop
or
icebp
cwtl
mov
mov
sbb
scas
mov
pop
fld
cmc
jle
pop
movsl
and
push
inc
or
add
mov
mov
mov
pop
out
popa
xlat
push
out
push
ds
int
out
sbb
scas
js
adc
int3
adc
test
in
dec
xchg
or
repz
subb
mov
enter
jecxz
hlt
ja
xchg
sahf
jg
or
dec
daa
xor
sub
cs
adc
clc
adc
roll
ljmp
jge
movhps
push
jo
push
pop
mov
xchg
aad
repnz
inc
sbb
mov
dec
xchg
test
pushl
rorb
int3
and
or
pusha
mov
push
inc
xchg
arpl
inc
adc
mov
test
jecxz
mov
dec
xchg
addr16
iret
scas
push
scas
mov
jg
aaa
adc
push
hlt
and
dec
insl
inc
sbb
out
jle
jns
cli
popa
arpl
inc
dec
je
aas
push
out
int3
outsl
lcall
outsb
xor
sub
in
insl
test
leave
cmpsl
leave
and
and
mov
outsb
inc
bound
fadd
aas
jae
cmp
sub
dec
clc
inc
out
mov
aam
mov
test
std
cli
dec
push
addr16
push
insb
cld
add
push
aas
push
fwait
pop
stos
int3
cmpsb
sub
push
in
pop
pushf
sub
or
cmpsl
mov
cmp
movl
icebp
shl
aas
mov
add
cs
pop
out
pop
cmpsl
fstpl
and
sub
aam
stos
cs
mov
or
repz
daa
dec
shr
rcl
shlb
add
mov
add
xchg
sbb
mov
lret
fbld
xchg
pop
lock
jp
jbe
mov
std
daa
addr16
outsl
push
sub
sub
adc
mov
insb
ret
xchg
sti
popa
jno
pop
xchg
mov
cld
mov
pop
pop
xlat
das
repz
je
out
js
test
mov
out
inc
outsl
js
mov
jns
xchg
shlb
adc
out
jl
rcl
or
lock
sub
or
repnz
lret
mov
mov
scas
lcall
cmpsb
lret
shll
rcrb
xor
inc
pop
scas
mov
je
repnz
dec
lret
pop
pusha
xchg
out
leave
mov
shr
xchg
pop
or
loopne
cmpsl
frstor
cmp
push
xchg
mov
push
push
mov
cmp
loop
bound
fucomip
jo
cli
stc
mov
push
cmp
jb
ljmp
or
inc
mov
push
ds
ljmp
cli
dec
mov
and
ja
adc
xor
imul
xor
jp
dec
ljmp
cmp
cmc
and
inc
test
nop
cmc
idivl
std
and
cmpl
jnp
or
int
aam
cmpsb
dec
cmc
dec
mov
mov
mov
enter
pop
shll
cmp
adc
add
into
mov
inc
pop
dec
cwtl
cwtl
or
adc
mov
inc
mov
mov
jge
loop
adc
fadds
enter
outsl
iret
cmp
cmp
jns
cmp
test
pop
and
mov
xor
pop
mov
pushf
pop
cltd
scas
cmp
int3
push
sub
mov
into
mov
aaa
pop
cli
push
cmp
push
test
ja
cmp
sub
fiaddl
add
movsb
into
pop
sbb
mov
and
pushf
ret
cmp
add
lcall
mov
or
into
movsb
mov
fdivr
test
cmpsb
roll
or
out
cmp
movsb
lea
into
cmp
ss
adc
pop
popa
and
lock
loope
clc
scas
int3
cli
arpl
cltd
dec
or
frstor
lods
idiv
jg
add
mov
outsl
icebp
adc
ljmp
pop
inc
mov
lea
leave
pop
nop
into
test
mull
push
lret
lcall
ljmp
clc
std
cli
mov
mov
mov
out
jl
and
xor
aaa
loopne
jecxz
xlat
stc
jmp
shl
sbbb
mov
sub
xchg
lods
push
sbb
cltd
inc
mov
out
popa
insl
lods
xchg
push
inc
fidivrs
xlat
mov
xor
cltd
pop
mov
inc
or
jno
or
xor
es
outsb
inc
mov
cmp
xlat
rcr
mov
push
xchg
test
in
in
lahf
mov
jp
dec
lock
dec
ja
push
fnop
gs
push
dec
mov
cs
fidivs
decb
popa
push
imul
test
mov
sub
jmp
arpl
jb
mov
adcl
clc
dec
out
xchg
sub
push
fldcw
push
pop
enter
lock
mov
lods
js
ss
pop
and
xchg
push
repnz
lea
inc
in
mov
addl
jne
leave
jns
repz
cmp
mov
jo
push
repnz
movsb
int
loop
fnsave
je
daa
cmp
dec
xor
and
mov
inc
js
sub
add
dec
adc
out
xor
mov
ljmp
cmp
mov
ss
loope
ss
push
leave
ret
push
mov
arpl
addr16
mov
jne
cli
and
imul
lahf
hlt
dec
and
mov
loope
push
and
cmp
add
fcomps
stos
mov
sbb
xchg
js
sbb
pop
add
xchg
mov
cmpsb
add
mov
pop
lret
mov
mov
xchg
test
push
mov
cmp
andl
mov
add
je
call
fdivs
pusha
push
lret
call
dec
jns
sbb
lret
sub
clc
icebp
insb
sbb
pushf
xor
outsl
add
push
mov
sbb
int
scas
xchg
in
gs
int
push
lret
ss
andl
push
test
jp
adc
pop
add
jmp
int
xchg
fsub
inc
imul
xchg
inc
ret
xor
cmpsb
cltd
ja
outsb
mov
fldl
mov
rcr
dec
pop
jne
addb
loopne
inc
out
mov
sahf
mov
dec
mov
addr16
pop
mov
push
imul
jl
sbb
aad
fistl
shll
sti
mov
xor
sub
sub
popf
mov
cwtl
cmp
int
out
hlt
pop
mov
repnz
ret
loope
jae
push
add
mov
adc
int
xchg
aad
lds
jmp
push
xchg
pusha
dec
push
cmp
xor
xor
dec
enter
xorb
hlt
scas
lcall
mov
pop
ret
jle
cli
xorb
push
inc
mov
fwait
pop
stos
or
fwait
sub
sub
ds
push
push
pop
test
jno
jb
rcl
xchg
dec
lods
mov
roll
ljmp
sub
jno
shlb
add
sahf
xchg
adc
outsl
mov
insb
xor
nop
pop
jg
push
pop
xor
or
daa
pop
out
ljmp
cmp
lds
lcall
adc
cltd
popf
out
mov
test
inc
mov
cmpb
jp
and
lea
cmc
sbb
sahf
cltd
adc
les
mov
fisubl
jbe
sub
adc
add
or
sub
stos
hlt
adc
out
inc
push
xchg
and
and
imul
inc
ds
cltd
stc
test
divl
sbb
pop
mov
outsb
lods
push
inc
rorb
add
daa
dec
mov
sbb
fs
int
lods
sbb
cmpsl
sub
negb
inc
loope
mov
scas
mov
ror
lods
and
inc
pop
sub
or
rorb
in
roll
daa
bound
xlat
xchg
mov
mov
enter
lahf
and
pop
xor
jnp
pop
dec
stos
leave
push
lods
ret
cmp
loopne
inc
mov
in
push
fistl
data16
popa
stc
jb
cmpsl
enter
push
sarl
inc
sbb
std
cltd
movsl
stc
in
jae
push
jae,pn
fcmovu
adc
push
ret
pop
aas
xor
ret
rol
xlat
cli
sbb
ret
test
inc
lods
movsb
pop
fs
cmp
rcrl
push
add
jmp
mov
adc
fdivl
or
fdivrl
daa
fistpll
mov
dec
lret
roll
or
inc
lret
aaa
add
inc
jno
lock
mov
pop
sub
mov
ds
idiv
mov
into
in
out
pop
inc
cmp
mov
jo,pn
in
mov
mov
jnp
popa
loope
push
pop
out
jmp
lret
mov
push
xor
sub
inc
jle
inc
js
subb
jnp
push
add
ljmp
aaa
jecxz
inc
add
popf
loopne
push
jno
xchg
mov
lock
rorb
add
outsl
sbb
push
xchg
sub
mov
sahf
loop
cli
mov
subb
sbb
insb
jae
inc
push
push
sahf
cs
and
or
jbe
cmp
mov
in
outsl
pop
int
dec
rcrl
dec
cmpsl
mov
and
imul
fldl
jmp
enter
scas
add
adc
fsubl
cld
pushf
push
sbb
sahf
dec
jbe
and
test
in
pop
shll
push
inc
rorl
bound
in
or
push
in
int
jecxz
sub
or
repnz
fsubrl
xor
or
movsl
testl
add
sub
or
decl
or
or
sub
or
jl
jno
or
mov
pop
xchg
push
mov
in
scas
fcoms
xchg
or
mov
push
mov
dec
sub
mov
int
mov
aaa
adc
and
pushf
aaa
xlat
je
push
sub
movsl
and
mov
loopne
popf
decl
mov
lds
fs
mov
orb
stos
sbb
leave
das
aam
mov
stos
jnp
jae
out
loope
and
les
ss
xchg
fwait
mov
int
insl
lock
pop
sub
xor
stc
test
mov
jmp
add
call
inc
lds
icebp
es
xchg
icebp
add
mov
jno
jge
cld
add
push
and
jl
and
or
ljmp
mov
lock
adc
and
mov
add
xor
movsl
clc
cmp
adc
mov
icebp
sub
pop
push
icebp
xlat
or
fdiv
pop
stc
test
mov
add
leave
dec
outsb
lock
inc
test
je
lods
ds
adc
xor
and
pop
in
roll
jnp
ja
add
jns
fistps
outsl
pop
push
jmp
xor
sbb
push
cmc
mov
add
lcall
test
and
xchg
gs
inc
or
pop
sbb
mov
jae
xor
insl
dec
test
loopne
xlat
inc
cmc
pushf
sbb
js
or
rcpps
scas
lcall
dec
jno,pt
lret
inc
jmp
sub
sti
adc
cmp
addb
dec
inc
sub
mov
aam
pop
mov
sub
adc
aaa
das
push
sub
push
sbb
pop
aam
mov
sti
notb
jne
push
jb
lahf
sbb
clc
cld
icebp
mov
stos
or
cli
jle
gs
inc
sub
push
inc
aaa
push
repnz
mov
andb
and
pusha
mov
std
arpl
cltd
icebp
xchg
popa
fisttps
fsub
test
out
sub
mov
test
mov
imull
test
clc
xchg
push
enter
subb
fwait
enter
or
mov
cmpsl
sbb
jo
fistpl
jnp
leave
jno
xchg
stos
dec
add
rorl
pop
mov
repnz
addb
sti
xor
adc
imul
xchg
cmp
adc
mov
sub
cmp
sub
add
sub
or
mov
aam
enter
mov
int
push
xchg
lahf
repz
mov
sbb
popf
xor
xchg
and
in
lea
mov
popa
into
jne
dec
jle
push
or
push
mov
dec
push
or
test
or
out
fwait
xor
loope
adc
shl
sbb
cmp
dec
es
cmp
je
mov
js
lds
xlat
cmpsl
stc
or
hlt
dec
shl
out
fsubs
mov
pop
xchg
bound
leave
lahf
std
shl
std
dec
xchg
sub
sbb
jno
dec
int3
or
sahf
imul
push
fnsave
fs
imul
rcll
sbb
sti
jae
mov
dec
in
movsl
xchg
lahf
cmp
mov
in
cltd
repz
dec
rcrl
mov
xchg
dec
repnz
jbe
dec
pop
rcrb
cmp
stos
mov
inc
imul
jmp
lret
sarb
int3
imul
bound
outsb
ret
cmpl
ss
loope
mov
cmpsb
nop
and
outsb
test
sbb
xchg
mov
into
aas
xchg
mov
lahf
out
jge
pushf
jmp
mov
xchg
adc
xor
cmp
outsb
sahf
push
aam
mov
std
out
inc
xor
fisttpll
in
and
jbe
shl
fadds
mov
fdivl
mov
push
or
insl
jns
or
and
mov
inc
push
add
xchg
int
jbe
data16
aaa
inc
je
cmp
sbb
cmpl
loopne
push
test
mov
stos
sub
bound
aas
or
mov
call
jb
xor
bndldx
jb
jne
sarl
pop
xor
dec
leave
cmp
cmp
add
notl
pop
push
out
imul
or
jmp
adc
sahf
dec
mov
mov
movsl
lds
jge
jns
sbb
pop
inc
clc
inc
sub
lahf
stos
lds
mov
lret
jae
icebp
mov
mov
fsubr
jns
clc
ljmp
fbld
ss
jle
cmove
cli
int3
push
out
pop
inc
xor
add
stc
movsb
mov
push
test
cli
or
mov
sub
stc
jo
inc
push
loope
sub
sub
mov
jo
mov
fs
cwtl
int
jne
pop
xchg
pop
add
dec
cmpsl
js
jmp
cld
mov
scas
rcll
pushf
mov
adc
lea
and
popf
test
adc
fidivs
fsubrl
push
aas
ds
mov
mov
sbb
jne
testl
outsl
int3
sub
repz
les
dec
xor
sarl
xor
incb
int
xchg
js
sub
push
out
and
fmull
dec
neg
outsb
addr16
pop
pop
dec
mov
pop
ffree
cmp
mov
jo
adc
stc
add
and
rcrl
push
dec
test
mov
pop
add
sbb
lods
in
sub
dec
adc
xchg
sub
loope
add
je
jp
mov
stc
pop
dec
xchg
imul
xlat
xor
test
in
cmp
adcb
out
ja
loopne
lods
out
test
fwait
repz
test
xor
smsw
cld
xchg
dec
je
movsb
dec
mov
stos
mov
movsl
sub
and
scas
aas
repz
mov
sbb
jno
out
js
mov
mov
not
cltd
ret
test
jle
sub
and
and
scas
adc
xchg
arpl
lahf
cmpsb
push
mov
aaa
aas
pop
lret
jecxz
xchg
loop
cmp
fiaddl
nop
shl
sub
sub
xchg
int3
pop
daa
in
mov
das
xchg
pop
pop
das
sub
mov
fiaddl
xor
adc
scas
sub
int
ffreep
cs
das
test
fistl
fnstenv
cmpsl
cmp
push
lea
push
fmuls
inc
loopne
scas
rcrb
inc
sub
lods
rcll
mov
xchg
jns
mov
roll
movsl
xchg
xchg
push
sub
mov
jb
cmpsl
mov
pop
popa
jae
jns
mov
pop
popa
mov
sbb
fldcw
jb
push
push
mov
scas
leave
fidivs
int3
fiadds
mov
push
sub
add
jmp
sub
push
lcall
aad
jbe
js
mov
stc
mov
lahf
out
outsb
out
jno
xchg
rcrb
pop
out
loopne
mov
rol
fsubrs
out
pop
repz
pusha
push
data16
cmpb
jnp
data16
xlat
pushf
add
xchg
xor
pop
lahf
mov
pop
mov
xchg
mov
cmpsb
mov
rcrb
test
sti
cmc
data16
into
dec
out
in
or
or
inc
iret
and
cmp
outsl
mov
inc
jp
pop
add
push
pop
jmp
icebp
cmp
sub
xchg
xlat
pop
sbb
or
cmp
je
lods
push
jb
jmp
fwait
iret
hlt
nop
movsl
test
sub
into
dec
popf
adc
dec
push
int3
scas
iret
cmc
cmp
test
push
push
xchg
push
jg
stos
push
fstpt
fidivl
lahf
lea
bnd
mov
and
jge
mov
jno
ss
cs
dec
fcmovnbe
nop/reserved
fldenv
mov
adc
mov
cmp
cmp
xor
add
jne
les
mov
mov
adcl
sbbl
add
dec
out
mov
inc
cmpsl
sti
push
dec
xchg
mov
stos
imul
iret
mov
cltd
dec
dec
movsl
aam
outsl
mov
cmp
adc
pop
push
dec
pop
push
add
mov
sbb
stos
mov
test
pop
mov
sub
sbb
bound
inc
cmpb
push
lcall
and
dec
in
jge
pop
mov
add
imul
sbb
sti
les
inc
adc
insb
std
popa
mov
frstor
jns
je
cmp
or
fs
cmp
mov
pop
das
test
int
aas
data16
mov
push
minps
mov
lock
xchg
push
cmp
dec
add
sub
je
inc
hlt
sub
cmp
nop
int
fwait
sarl
pop
jo
xchg
dec
sbb
mov
adc
jmp
call
lahf
ss
add
add
sub
jge
rorb
loop
adcb
mov
aaa
fs
mov
insl
mov
xchg
push
push
inc
andl
and
push
flds
nop
idiv
pop
xlat
into
xchg
mov
cmp
inc
addl
and
push
scas
xor
jmp
rcll
stos
imull
xor
cmpl
mov
mov
shlb
leave
sti
aas
add
les
jp
shll
xchg
xor
dec
lods
mov
inc
xor
jb
jge
not
stos
repnz
test
or
sbb
andb
cs
and
stc
maxps
clc
popf
mov
cli
sbb
sub
stos
mov
scas
and
sbb
and
jl
sahf
cmp
loop
adc
popl
popa
insb
and
test
out
and
xchg
add
fadd
in
sub
jo
ficomps
inc
xchg
mov
pushf
ljmp
pushf
and
div
cmpsl
imul
pop
test
test
fistpll
lods
stc
cli
in
enter
dec
inc
in
push
mov
xchg
lds
jo
mov
cmpsl
mov
xchg
mov
data16
imul
mov
lods
jne
insl
sbb
push
dec
or
fadd
xchg
dec
mov
mov
pop
push
fldcw
push
adc
push
sbb
mov
sbb
mov
test
inc
and
mov
test
mov
xor
ficoml
and
ret
mov
fs
pop
iret
jno
jmp
movsl
mov
fst
push
test
inc
clc
in
push
in
and
imul
scas
cmp
mov
iret
loope
outsl
lea
mov
pop
lea
sub
orb
inc
and
inc
iret
test
cmp
ret
movups
xor
cli
je
mov
xlat
ds
dec
push
lcall
push
out
dec
xor
inc
add
js
add
pop
cli
stos
scas
mov
iret
lock
adc
mov
add
sub
adc
mov
scas
and
repnz
mov
shrb
imul
cmp
arpl
movsl
sub
addr16
mov
xchg
lahf
mov
aad
push
hlt
jb
nop
inc
xchg
sub
push
cmp
in
stos
push
push
aas
push
cltd
ljmp
test
adc
divl
push
push
data16
or
cwtl
push
cli
xchg
mov
xor
int3
orb
outsb
dec
incb
stos
mov
cmpl
inc
push
aaa
jge
jo
xor
dec
sub
pop
rcrb
into
jle
ret
out
inc
repz
ret
push
pop
fxch
in
xchg
adcb
in
lcall
sub
jg
pop
shlb
xchg
stos
lret
xchg
in
inc
test
out
sub
inc
fistpl
je
adc
jecxz
jns
repz
lcall
xchg
loopne
sub
dec
aam
push
scas
xchg
out
mov
sub
or
adc
and
in
cs
mov
push
dec
mov
ja
jg
mov
imul
pop
ljmp
leave
mov
ret
mov
insb
js
movsl
mov
imul
outsl
dec
pop
aam
cmp
and
and
cmp
dec
push
or
jecxz
ret
fwait
nop
test
sbb
mov
xchg
orb
lcall
lret
adc
ds
imul
and
mov
cmpsl
push
out
lret
sub
pop
aaa
mov
into
insl
push
into
adc
jo
adcb
sub
lea
adcl
adc
loop
out
sahf
or
stos
xchg
loopne
shrb
add
xchg
jge
jne
inc
insb
ja
lock
xor
cmp
xchg
ds
and
out
inc
iret
push
int
push
sub
das
call
lds
pop
inc
push
je
mov
cmpsl
ds
call
and
and
push
sarb
add
add
jmp
mov
mov
mov
mov
inc
mov
xchg
mov
out
adc
jb
add
xchg
adc
fdivl
fisubl
add
in
mov
dec
fnstsw
popa
mov
and
adc
add
pop
rcr
xor
xor
cld
lcall
jb
clc
xor
lret
jo
rcl
push
cmp
scas
fldln2
sbb
dec
data16
inc
insb
jae
sub
loopne
push
xchg
jp
xor
mov
popf
or
jnp
add
sbb
jg
mov
icebp
fdivr
cmpl
aam
ret
cld
mov
push
add
mov
push
jp
in
lds
xchg
pop
test
gs
xchg
push
xchg
mov
mov
cld
cmc
or
movsl
inc
outsb
sbb
xchg
mov
dec
inc
and
cmp
test
ja
shrl
mov
ss
insb
mov
dec
imul
push
and
ret
mov
aaa
push
or
xchg
xor
js
jo
add
cmp
cmp
jg
adc
stos
pop
mov
sub
xor
xor
lods
mov
cli
fucom
cmovb
jnp
mov
jbe
and
shrb
xchg
ds
popf
cld
leave
inc
dec
test
pop
add
sub
adc
jge
stos
in
or
test
in
insb
mov
loope
in
dec
push
push
xchg
pusha
lret
mov
or
loope
xchg
pushf
pop
lock
insb
imul
or
lret
stc
jmp
pop
popf
cmp
jl
out
mov
out
pop
jg
mov
imul
stos
inc
aas
sbb
loop
and
mov
sbb
jb
cltd
shrl
pop
je
sbb
mov
push
push
repnz
sbb
inc
mov
inc
cmp
mov
xor
sarb
test
gs
in
out
enter
out
stos
call
mov
pop
les
adc
inc
xchg
mov
fsubrs
push
fwait
std
cmpsb
cltd
dec
pop
sbb
imull
jb
pusha
icebp
and
xor
loop,pt
cmp
jne
lods
outsl
fbstp
and
mov
shrb
lods
jmp
push
pshufw
jb
shrl
push
adc
cmp
rep
mov
test
add
pop
jmp
ljmp
or
jae
mov
imul
test
scas
fwait
lock
pop
rolb
mov
and
dec
xor
adc
lds
push
addl
cld
fcmovnu
cmp
loopne
pop
out
sub
loope
mov
dec
mov
sub
repz
jae
and
push
and
and
and
sbb
movsb
mov
or
mov
bound
pop
bound
dec
int3
and
jne
push
ret
loopne
fisubrs
iret
pushf
adc
xchg
popa
cmp
into
daa
mov
pop
pop
xchg
clc
or
sbb
outsb
inc
add
push
dec
cs
lahf
mov
xchg
jp
push
and
sbb
aad
push
lods
insb
ficoml
cli
movsl
out
adc
shlb
mov
addr16
push
pushf
pop
pop
mov
jbe
shrl
test
xor
mov
mov
xchg
push
lret
inc
jns
cmp
mov
pop
out
xor
cwtl
cmp
push
xor
hlt
sub
mov
jmp
xchg
push
pop
or
out
mov
lcall
mov
imull
push
lds
jbe
les
cmp
push
scas
cmpsb
cwtl
and
push
sahf
cmpsb
stos
jne
hlt
test
xor
sbb
lahf
inc
popf
test
xchg
inc
mov
arpl
hlt
leave
enter
xchg
out
push
inc
inc
fstp
dec
repnz
add
test
add
add
push
outsb
inc
je
adc
mov
inc
sub
int
mov
popa
mov
divl
je
cwtl
popf
out
ljmp
dec
test
push
pop
push
popf
xor
rclb
jns
mov
insb
test
cmp
loope
push
popa
jo
loopne
lret
xor
inc
loop
xor
les
aaa
pop
sbb
pop
gs
loopne
in
sbb
mov
pop
arpl
cmp
push
jecxz
movb
sub
nop
xchg
hlt
mov
cwtl
ja
inc
jmp
or
adc
xlat
movl
mov
xor
ljmp
jp
or
loopne
push
subb
mov
push
dec
ss
pusha
addr16
ret
mov
and
mov
stos
aaa
lcall
jb
popf
adc
mov
pop
arpl
pop
mov
mov
mov
add
or
push
mov
scas
pop
xchg
dec
fimull
pop
jo
repnz
jae
filds
pop
shlb
fsubp
sbb
popa
push
push
jg
movsl
mov
dec
mov
enter
xchg
mov
pop
mov
iret
dec
dec
xchg
hlt
adc
push
cmp
scas
cmp
push
jmp
sahf
xchg
data16
fcmovnbe
icebp
and
adc
lcall
out
add
dec
es
jle
pop
mov
xor
inc
scas
test
call
bound
sbb
cmp
jmp
push
stc
mov
and
jle
add
subb
and
ret
hlt
inc
addb
add
jbe
repz
insl
mov
lea
and
or
or
sbb
jge
sbb
xchg
mov
add
out
and
cmp
popf
popa
hlt
xor
sbbl
test
push
and
ljmp
out
enter
decl
int
daa
push
sub
jmp
aaa
leave
jns
shrl
push
and
pop
nop
outsl
test
fnstsw
adc
test
inc
mov
je
dec
sub
add
fwait
gs
aam
test
nop
mov
sahf
mov
into
adc
push
into
out
pop
pop
add
cs
cli
mov
xor
je
and
lcall
xchg
jg
mov
incb
dec
inc
push
push
bound
dec
es
add
fldenv
movsl
repz
mov
les
mov
mull
imul
shr
psllq
enter
call
cmpsb
or
inc
ret
psadbw
mov
lret
mov
and
pop
add
data16
push
cmp
lods
jg
mov
mov
fstps
dec
lcall
frstor
mov
sbb
test
repnz
adc
lret
adc
fcoml
sahf
or
mov
add
and
pop
jno
xor
mov
addr16
jp
int3
insl
fscale
fsubrs
popf
fistps
push
out
dec
cmp
or
out
or
mov
loop
jmp
inc
push
das
mov
orl
pop
mov
sub
incb
sar
sti
xor
imul
add
hlt
fnstsw
scas
bound
popf
cmp
sbb
jg
lock
aas
fwait
lret
pop
dec
cld
gs
cmp
pop
nop
fiaddl
pop
xchg
push
mov
inc
ja
push
flds
in
adc
iret
pop
movsl
pop
loop
loop
xlat
das
xchg
nop
add
imull
mov
and
mov
adc
mov
jae
ljmp
pop
cwtl
jp
pop
scas
cmp
sahf
add
iret
jg
sbb
cmp
cltd
jae
ljmp
adc
dec
out
fcoms
sbb
int3
fadds
jl
jecxz
pop
enter
mov
cmc
daa
stos
jnp
dec
add
popf
gs
add
gs
nop
cmpsl
or
adc
testl
insb
shlb
inc
fsubrl
rol
sbb
iret
fisubl
popl
jle
sahf
xchg
sub
loop
add
push
jb
jg
and
sbb
mov
negb
dec
aad
mov
mov
push
mov
imul
out
jns
mov
cmp
and
aam
dec
dec
call
xchg
and
jnp
mov
ficoml
adc
rcr
inc
mov
pop
cmp
and
out
or
sbb
cmp
cmp
mov
out
pop
aaa
adc
xor
add
sub
lcall
inc
jns
inc
mov
push
add
push
xchg
es
popf
incb
popf
in
imul
inc
fimuls
lock
push
add
mov
jmp
cmp
jle
xchg
cltd
xchg
and
int3
rcl
aam
sub
out
inc
xor
fnstenv
insl
in
mov
mov
jg
sahf
jle
mov
xor
out
sbb
push
pop
aad
pushf
inc
mov
pop
fwait
lahf
adc
mov
aas
shrb
lret
push
cs
pop
or
imul
cmp
aam
adc
xchg
pop
shr
leave
or
mov
insb
or
das
dec
and
cli
adc
ret
notb
add
arpl
mov
outsb
loope
fadd
sbb
std
xchg
jg
mov
stos
mov
fstp
xchg
inc
mov
or
pusha
fcmove
and
out
dec
test
pop
push
xor
push
mov
push
push
sbb
fcompl
test
sub
xor
aaa
cmp
inc
push
inc
lock
dec
xor
dec
mov
jle
cmpsb
sbb
aam
mov
and
sub
in
sahf
ljmp
xchg
lock
dec
inc
adcb
outsb
aam
sub
stos
jmp
jo
xor
ret
int3
mov
or
fincstp
dec
stos
xor
dec
leave
imull
shlb
fs
dec
sahf
push
and
enter
sub
out
enter
ret
in
sub
rolb
or
pop
mov
pop
addb
iret
xor
mov
adc
int
xor
test
inc
inc
mov
mulb
ret
push
mov
loope
scas
dec
push
enter
mov
shll
hlt
mov
sbb
cwtl
mov
inc
cs
movl
das
test
xor
cwtl
dec
dec
sbb
push
mov
sub
cmp
fwait
dec
in
mov
out
jl
pop
sbb
xor
xor
out
xchg
inc
mov
sub
or
and
jmp
insb
fcoml
test
push
or
cmpsl
fmul
mov
push
stos
adc
fwait
das
cmpsl
std
aas
inc
xchg
rol
jbe
push
adc
pop
adc
mov
mov
push
xchg
push
add
dec
clc
sbb
sarl
add
out
jns
movsl
mov
cmpsb
jmp
mov
mov
dec
and
rcll
xchg
shrd
mov
pop
xor
push
scas
lds
adc
dec
mov
adc
mov
enter
fildl
jb
adc
stos
and
jmp
outsb
clc
ffreep
out
pop
dec
in
aaa
mov
pop
inc
shll
jo
mov
sbb
into
in
shlb
pop
pop
lods
adcb
and
aaa
mov
setl
dec
mov
dec
test
sahf
shlb
jb
lods
into
push
pop
sarl
sahf
inc
dec
mov
xor
mov
mov
dec
dec
fisttpl
sbb
add
xchg
mov
inc
push
inc
shrb
subl
mov
cmpb
repz
xchg
or
sub
shl
xor
and
xor
and
aaa
test
imul
leave
jnp
movsl
jecxz
test
mov
test
mov
cmp
jle
adc
dec
inc
hlt
lcall
fwait
arpl
inc
dec
ss
test
lods
sti
pushf
test
jp
fiaddl
je
lahf
sub
mov
inc
inc
jecxz
dec
ret
lea
dec
or
shrl
ss
lods
rorl
imul
fidivs
or
insb
mov
fcompl
scas
outsl
std
shlb
fistpl
rcrb
cwtl
push
pop
shrb
das
cmp
dec
and
sarl
mov
je
and
jge
mov
mov
jmp
inc
arpl
loopne
fcmovu
ss
std
cmp
rol
dec
sbb
jmp
je
push
and
arpl
fs
fcmovnu
fwait
popa
xor
fdivr
add
daa
repz
ja
ret
call
imul
aad
mov
jb
mov
jecxz
sub
lret
scas
daa
mov
mov
ret
mov
xchg
push
hlt
and
ficomps
mulb
test
roll
jno
in
lret
xor
adc
aaa
js
xchg
or
pop
cmp
negb
pop
xchg
jb
dec
add
xor
imul
in
ficoms
lods
sbb
cmp
pop
stos
push
enter
adc
jp
inc
loope
and
inc
sahf
pop
pop
pusha
cmp
cmpsl
mov
adc
mov
jbe
jnp
lcall
out
or
ret
dec
data16
pop
add
imul
dec
cmp
pusha
xchg
repnz
cmc
je
cmp
hlt
xchg
mov
cli
or
or
jg
cmpsb
cmp
sbb
add
add
lea
mov
fnstenv
mov
mov
inc
mov
xlat
rcll
jp
fs
pop
and
pop
xchg
inc
pop
lcall
cmp
js
sbb
and
cmc
push
loopne
jne
dec
movsl
xchg
xor
cmp
dec
lahf
cmp
scas
push
mov
into
pop
xchg
std
pop
adc
sbb
sbb
in
push
fs
mov
das
inc
shrb
nop
and
push
aad
mov
daa
sub
cmpsb
rcl
pop
test
jle
and
dec
movsl
push
sarb
scas
xor
test
lea
mov
push
add
mull
xor
out
push
stos
cli
mov
lods
mov
or
in
or
push
add
xor
mov
mov
popa
lock
js
adc
fsubl
jl
in
pusha
fcomp
std
or
lcall
out
cmpsl
scas
add
shll
sbb
or
pop
jg
sub
cmp
scas
loop
jmp
xor
dec
dec
push
stc
and
sbb
sub
xlat
test
cmp
hlt
je
mov
inc
mov
shlb
inc
cmpsb
int
pop
mull
addr16
add
jns
mov
add
out
sbb
popa
jno
sub
lods
shlb
or
jge
movsb
sahf
sbb
mov
cs
or
rol
xor
rcrl
and
mov
lock
lcall
adc
mov
add
add
jge
mov
sahf
xchg
packuswb
popf
inc
add
outsl
fists
pop
out
jge
out
jnp
jno
cwtl
and
sub
jg
lock
dec
sbb
sbb
or
lcall
aas
jno
or
jnp
pop
mov
outsb
jns
push
ret
clc
inc
cmp
nop
insb
sbbl
into
adc
in
mov
test
fnsave
movsb
sub
sbb
mov
ret
ret
dec
stos
mov
in
fcoml
pop
movsl
call
aaa
test
add
sbb
jmp
cmp
fsubr
pop
lahf
andl
sub
sub
sbb
push
lret
pop
test
and
adc
es
fisubrl
pop
push
iret
ret
add
xchg
mov
cmp
test
cwtl
xor
sbb
push
mov
sbb
xchg
sti
pop
fidivrl
push
callw
add
incb
lods
lahf
insb
es
decl
push
mov
push
jb
sbb
adc
fisttps
stos
push
dec
pop
clc
xchg
jns
mov
and
pop
rcl
mov
add
mov
push
clc
xchg
add
sarb
outsb
dec
in
mov
loopne
push
stos
mov
mov
cld
cmp
jno
insl
xchg
clc
ret
aas
out
fcmovnb
dec
sbb
icebp
mov
sarl
and
mov
mov
jge
mov
xchg
add
jns
negb
js
cld
mov
outsl
stc
jb
mov
xchg
mov
adc
sbb
sub
test
fiadds
xchg
cmp
cmp
add
xor
push
pop
cmp
ljmp
xchg
lods
rcl
or
cld
mov
jns
std
mov
sbb
dec
dec
mov
sarl
popl
or
imul
dec
jne
rorl
add
outsb
movsl
fidivs
adc
xchg
pusha
leave
pop
and
jne
mov
out
mov
stc
es
inc
pusha
mov
mov
std
xchg
jnp
nop
daa
xchg
lods
add
push
inc
and
loop
or
imul
hlt
fidivrl
scas
jno
lret
rorl
add
adc
push
lret
cwtl
push
dec
cltd
adc
lods
push
cld
cmp
jbe
cld
fadds
dec
pushf
lea
fs
lret
mov
cmpsl
mov
shl
sub
xchg
ja
dec
scas
sbb
and
stos
jmp
xchg
adc
lods
cmp
xor
fistps
cmpsb
int
sub
cmp
enter
pop
or
xchg
dec
sti
insl
or
dec
ja
mov
xor
fistl
jnp
push
in
sub
in
roll
pop
ss
xor
iret
leave
sub
push
xor
jne
jo
cld
cmp
scas
inc
or
and
push
push
fistl
aaa
jp
push
ret
mov
lret
dec
jne
movsb
decl
andb
das
aaa
lcall
rcll
pop
pop
jne
daa
and
mov
in
and
adc
in
mov
daa
js
bound
sub
push
dec
inc
add
dec
popf
pop
add
and
and
adc
popa
jmp
jle
lahf
and
or
xor
cmpsb
nop
push
das
out
inc
dec
int3
cmp
pushf
sbb
adc
xchg
mov
inc
call
jnp
jae
clc
mov
ret
pop
subl
shll
add
into
inc
loopne
fsubl
cltd
jae
pushf
in
addr16
pop
jmp
mov
lods
adc
imul
xchg
push
fistpl
cmp
cmp
into
ds
stc
dec
xor
fldt
movsb
test
and
stos
mov
cmpsl
popa
cwtd
mov
cmp
jnp
or
fadds
cmp
aad
pop
inc
pop
sarb
jno
inc
sub
fs
ret
fsubrl
mov
flds
xchg
add
loope
lcall
pop
cmc
fsub
dec
lcall
stos
sbb
lds
xchg
rcll
ret
int3
es
mov
sbb
xorl
enter
and
push
loope
popf
xchg
loop
cmp
sub
jecxz
js
fistl
and
inc
push
mov
inc
xor
add
adc
pop
mulps
mov
mov
shlb
add
push
sub
daa
dec
mov
icebp
xor
je
lods
scas
dec
inc
mov
ret
xor
cmp
cwtl
out
icebp
xchg
popf
insl
mov
das
push
add
out
add
and
mov
and
pop
adc
or
sub
mov
sub
lds
ret
jno
push
enter
es
pop
jnp
loope
in
xor
sahf
push
jb
mov
xor
sbb
jbe
cld
jge
jle
enter
int3
pop
pop
mov
add
jne
sub
push
cld
jg
fnsave
sbb
das
cli
cli
mov
js
push
in
fstps
jg
push
mov
imul
jg
xor
icebp
pop
xchg
repz
fldenv
inc
arpl
in
or
mov
adc
cs
jl
bound
test
outsl
jb
shl
fucomi
loope
out
and
add
pop
mov
ret
cmp
adc
mov
ljmp
sarl
push
mov
add
mov
jg
shl
setns
add
cli
test
mov
xor
fucomp
int3
cltd
icebp
out
sub
mov
adc
dec
mov
adc
jle
lcall
cmp
mov
jo
dec
mov
lret
sbb
mov
inc
cltd
mov
fldenv
or
push
ret
aas
lds
mul
stos
flds
mov
pusha
inc
jg
jl
mov
clc
jae
stos
jbe
mov
mov
shlb
sub
sbb
adc
out
cmp
push
xlat
or
mov
pop
pop
lods
mov
cs
xor
inc
les
pop
dec
popf
ja
call
sub
fstp
dec
imul
xchg
loop
lods
jo
stc
dec
js
xchg
jb
sub
je
enter
pop
fwait
mov
int
xor
mov
mov
mov
push
popf
pop
insb
mov
daa
dec
add
dec
hlt
inc
aad
arpl
mov
in
repz
xor
and
out
xor
ss
jo
cltd
jge
push
movsl
stos
mov
lret
out
push
pop
lcall
push
outsb
jecxz
int3
in
gs
lret
in
and
lods
cmp
daa
lds
fdivrl
cwtl
push
ljmp
aas
pop
or
push
sahf
push
and
cs
inc
popa
xlat
xor
aam
jl
cmpl
daa
ljmp
cs
cltd
sbb
enter
test
sahf
sbb
fadds
mov
cmpb
sbb
jns
mov
ds
cli
sub
clc
std
scas
clc
sub
lcall
loope
sbb
add
xchg
xor
push
movsb
add
sbb
sarb
dec
daa
sub
out
hlt
xor
or
pushf
adc
mov
filds
sahf
fisubrs
fdivr
leave
dec
and
lahf
dec
mov
jno
inc
or
mov
int3
or
dec
mov
lea
inc
xchg
sbb
rcll
mov
fimull
out
cmp
add
mov
cmpb
dec
sti
out
push
loope
mov
test
mov
sbb
sbb
cld
int
or
mov
aad
lock
and
outsb
rorb
xchg
push
pop
shrb
pop
lds
xchg
mov
es
add
cli
cmp
daa
xchg
or
les
in
mov
mov
xor
test
int3
mov
shlb
ss
mov
mov
mov
sbb
inc
hlt
test
pop
push
cmpsl
mov
cmc
clc
mov
mov
in
in
std
mov
les
mov
in
gs
or
and
imul
loope
icebp
xchg
stc
mov
mov
cmp
inc
cmp
rcll
jae,pt
mov
jecxz
jnp
sbb
loopne
cmp
jmp
insb
cld
sub
mov
stos
xchg
popf
push
jns
xchg
add
aas
data16
loopne
dec
ret
mov
icebp
sti
fldenv
loopne
jb
shl
loopne
rcrb
sbb
arpl
rcr
jle
xor
push
cli
je
or
jb
gs
push
sub
push
pushf
cwtl
js
sbb
sti
dec
adc
bound
shll
dec
popa
psrld
xchg
or
testl
jecxz
push
mov
jbe
sub
add
pop
pop
cmp
jno
js
mov
push
pop
jecxz
fmuls
inc
jg
dec
jmp
push
mov
cld
fcoms
mov
add
outsl
aad
popa
out
push
int
call
test
mov
lcall
adc
lret
lcall
xor
push
in
mov
jp
sahf
sbb
cmp
out
pusha
lahf
insl
test
inc
xchg
jo
lret
vmovaps
mov
and
stc
add
mov
sub
sarl
out
mov
inc
out
iret
sub
xchg
fwait
sub
add
jg
sub
push
jecxz
ljmp
jno
xor
in
adc
and
sbb
push
movsl
and
pop
or
mov
sub
add
fwait
into
movsl
js
ficompl
inc
or
sub
or
jmp
mov
push
imul
push
sub
lods
and
leave
in
pusha
lock
pusha
mov
mov
sub
dec
lahf
lcall
sti
mov
in
out
movl
imul
pop
in
mov
inc
jne
mull
out
pop
pop
cmp
ss
fmulp
dec
movsl
sub
and
lcall
adc
clc
sbbb
loopne
mov
scas
mov
sbb
pop
aam
xor
mov
adc
in
popf
loope
sbb
add
lock
fsts
push
inc
int
or
dec
into
mov
cmp
and
imul
ret
push
out
xlat
dec
xchg
das
push
mov
xor
xchg
push
dec
enter
pop
mov
jg
push
out
jg
sub
sub
pop
cmp
sbb
sub
ja
out
mov
ficoms
daa
add
mov
cld
cltd
or
sub
or
stos
dec
mov
add
sbb
pop
jecxz
std
popa
fldcw
mov
cwtl
movb
xor
adc
mov
enter
test
inc
jmp
xchg
in
fisubrs
xor
test
lock
pop
jmp
sahf
aas
mov
mulps
fimull
dec
lcall
daa
mov
and
sub
out
push
adc
repz
lret
sub
test
inc
cltd
mov
mov
cmp
sbb
incl
daa
add
popf
cltd
addr16
xchg
repnz
aaa
jns
sbbl
sarb
repnz
iret
inc
mov
inc
sub
pop
push
jmp
in
pop
ficompl
sarb
lahf
fnsave
aam
ds
imul
jno
int
pop
xchg
mov
shl
leave
mov
adcl
lock
mov
aaa
arpl
sbb
insb
cs
cs
fwait
push
stos
or
mov
imul
jg
mov
xor
cmp
xchg
hlt
mov
fwait
xchg
xor
mov
add
pop
int
mov
dec
outsb
ss
sub
and
sti
js
and
mov
push
xchg
mov
call
test
push
fsubr
push
xchg
xor
mov
test
mov
jg
jno
cwtl
jns
pop
rcrl
xchg
shrb
adc
outsl
cmp
pop
xlat
cmp
xchg
lahf
fbld
hlt
sbb
mov
out
sub
push
xor
sahf
fs
ret
xchg
sbb
add
sub
or
lcall
pop
aad
je
xlat
fcom
pop
aaa
jae
daa
and
mov
sub
dec
fsts
mov
xchg
sti
sti
out
push
mov
jns
aas
cmpsl
push
imul
pusha
lds
push
inc
and
stos
repnz
jmp
cs
mov
inc
cmp
cmp
cmp
xchg
sbb
sub
shl
pop
inc
xorl
and
orl
push
frstor
add
xchg
dec
xchg
fs
jl
lahf
and
stos
outsl
gs
sbb
in
xor
ds
sub
or
aaa
mov
cmp
jbe
movsl
jp
mov
push
mov
mov
or
push
out
loop
dec
xor
out
or
adc
outsb
lcall
pushf
cs
xchg
jno
hlt
orb
xlat
fistps
movsl
pop
xchg
mov
or
fwait
cmp
add
sbb
insl
pushf
pop
out
aad
ret
and
dec
call
popa
jae
jae
inc
std
push
repnz
mov
popf
ret
test
aad
loop
arpl
test
out
sbb
pusha
sbb
out
fists
dec
jno
cmp
jle
cmc
mov
pushf
sbb
daa
dec
lods
shlb
sbb
push
sar
add
lcall
pop
in
jo
out
mov
mov
loop
sub
xchg
jo
stos
iret
xlat
outsl
repz
cwtl
push
inc
dec
mov
inc
and
cmpsl
xor
pop
push
mov
insl
mov
in
xchg
nop
or
push
mov
and
and
rol
mov
scas
orb
pop
icebp
sbb
push
jo
fwait
and
rorl
in
mov
lahf
rcl
test
lods
mov
stos
xchg
jb
dec
xchg
mov
loope
jb
aad
and
dec
mov
outsl
cli
adc
daa
sbb
call
dec
push
pusha
jns
inc
inc
and
mov
mov
mov
shlb
pop
push
cmp
or
dec
stc
leave
arpl
and
and
xlat
xchg
adc
xlat
sahf
roll
jg
xchg
mov
jae
push
lds
xlat
jmp
dec
les
js
in
cmp
nop
add
das
mov
or
dec
pop
iret
adc
out
ficomps
push
outsl
test
push
into
icebp
mov
mov
cmp
cmp
in
scas
sub
movsl
fdivrs
cmp
mov
xchg
mov
sbb
popa
insl
jp
or
sbb
test
xchg
add
jg
je
adc
jo
dec
lahf
int
fcoml
lds
in
lea
add
and
adc
ljmp
mov
addr16
aam
cmpb
pop
popa
mov
jg
sbb
and
cmc
xor
mov
sub
sub
fld
xchg
rorb
insl
stos
xchg
fdivr
mov
mov
sbb
dec
sbb
mov
gs
fisttpl
addr16
lret
fsubrl
jae
cmp
cs
clc
fimull
dec
jno
xor
push
jne
jg
imul
push
aad
mov
mov
push
iret
mov
jb
adc
popa
adc
push
sbb
push
shrl
cwtl
into
pop
pusha
sub
mov
pop
js
jp
les
ja
inc
rclb
leave
pop
adc
mov
loope
xchg
mov
sbb
fnsetpm(287
pop
nop
mov
iret
shrl
ficomps
insb
sbb
xchg
inc
xor
subl
xlat
push
fdivrl
aam
imul
aad
mov
push
jecxz
jbe
je
and
fcmovnbe
fsubs
lock
lock
dec
fwait
add
into
push
xchg
sahf
push
adc
outsb
push
add
mov
loopne
ret
pop
pop
xlat
xchg
shlb
imul
xchg
shll
enter
lds
sub
lcall
push
jle
das
addr16
mov
stc
in
lods
pop
xor
or
push
mov
popa
pop
mov
or
or
lods
mov
and
mul
scas
loop
aas
mov
jnp
imul
push
mov
xchg
jbe
mov
insb
xor
mov
dec
or
push
out
imul
mov
outsb
and
jno
scas
stos
mov
push
mov
mov
es
jmp
mov
add
scas
dec
insl
pop
stc
jle
mov
inc
scas
jae
fldl
divl
fidivs
outsl
cmpsb
lahf
pop
xchg
stos
sub
test
jo
das
mov
push
mov
add
push
adc
push
and
jae
dec
orb
or
sub
xor
xlat
je
lock
or
pop
xlat
sub
mov
call
lcall
lods
in
adc
adc
mov
sahf
aaa
pop
arpl
test
ja
leave
adc
je
test
jge
fimull
js
push
pop
inc
ja
mov
fcompl
adc
test
push
fs
rorl
xchg
push
aas
mov
fiaddl
cmp
push
pop
out
cmpsl
add
sbb
mov
push
mov
mov
sbb
jae
pop
imul
cmpsb
xor
sbb
jp
add
xor
out
les
pop
xchg
aaa
aam
xchg
pop
mov
cmp
cmpsl
dec
push
mov
outsl
pop
or
sub
cld
outsl
ss
imul
xor
push
adc
addw
inc
mov
stos
test
lock
sbb
jns
fisubrs
dec
ss
inc
arpl
lea
mov
pop
jae
xor
dec
loope
mov
stos
popf
fmulp
mov
mov
fimuls
and
jmp
cmc
shrl
repz
ss
mov
leave
mov
lods
not
out
mov
mov
movsb
push
pop
popa
inc
cmpsb
sarb
js
stc
popl
or
aaa
mov
sub
lret
jnp
xor
or
pop
push
in
pop
cli
mov
daa
sub
add
cmpsb
push
cwtl
cld
stc
inc
shr
into
sub
cmp
dec
fs
fcomip
sub
adc
mov
jae
loop
int3
push
and
jecxz
xchg
sti
lea
pop
insb
or
jp
popf
cmpsl
push
popf
cmpsl
repnz
mov
cmp
cld
in
mov
divl
dec
icebp
and
imul
data16
jae
xchg
push
xchg
push
subb
jno
push
je
les
xor
pop
and
pop
stos
in
std
mov
cmc
bound
sub
inc
mov
in
sbb
sbb
push
mov
cld
mov
out
mov
aaa
nop
loop
push
lock
lret
loope
cmc
add
jbe
mov
mov
lock
aad
or
cs
sub
lcall
dec
jl
push
sahf
std
femms
cli
mov
jl
leave
and
sub
pop
adc
pop
pop
push
pop
loopne
mov
aad
pop
lea
fisttpl
xlat
inc
shll
pop
pop
decl
and
mov
insb
mov
and
rclb
outsl
jge
shrb
loop
cmp
mov
hlt
lret
adc
inc
add
pop
xchg
inc
and
cmc
push
gs
in
jg
xchg
hlt
scas
outsb
dec
stos
add
mov
dec
pusha
pop
testb
movsl
push
fcompl
clc
sbb
and
cltd
xchg
cli
andb
sbb
js
sbb
and
ljmp
pop
test
add
shll
jno
and
inc
fwait
sub
push
mov
push
sbb
les
fnstsw
mov
push
pop
sub
dec
pusha
aad
nop
lcall
enter
sub
outsb
dec
call
lds
faddl
fcmove
fstpl
jp
mov
mov
add
mov
hlt
dec
jnp
hlt
mov
test
push
in
cmp
push
and
fcomp
inc
flds
xchg
loopne
dec
jp
arpl
fiadds
xchg
jo
out
rcrl
fcompl
insl
pop
or
jp
mov
ja
cmp
lea
mov
in
movsl
sub
pop
jno
out
sub
xchg
cwtl
mov
mov
fbld
pop
xor
sbb
dec
and
add
mov
sbb
pop
push
in
test
jge
sbbb
and
cmp
xor
pop
lea
xor
push
inc
inc
xchg
mov
dec
icebp
jmp
xor
stos
mov
aas
test
pop
inc
lds
test
pop
test
cmp
adc
push
outsl
mov
stos
xchg
jno
scas
jg
push
adc
dec
pop
adc
pop
cltd
cli
js
orl
sbb
rorb
pop
pushf
lret
or
jl
sub
repnz
movsl
sahf
adc
cmc
test
lahf
mov
mul
dec
sbb
jl
mov
es
pop
scas
sub
lock
push
call
mov
inc
imul
dec
pop
adc
and
outsb
test
cli
or
mov
imul
ja
divl
hlt
outsb
lock
jecxz
jecxz
inc
imul
push
fadd
dec
inc
dec
add
test
add
and
push
daa
jle
push
pop
jmp
jo
scas
repnz
mov
jecxz
into
aas
mov
jg
sbbb
dec
mov
loop
out
jg
jbe
bound
sbb
lods
cmpsl
inc
rolb
call
orb
mov
jbe
aas
xchg
cs
hlt
mov
ljmp
add
pusha
and
sub
mov
ds
repnz
xchg
daa
mov
mov
mov
mov
nop
push
stc
dec
hlt
cmc
ss
mov
dec
inc
ret
or
xor
mov
in
cmp
jns
enter
leave
xchg
stos
and
adcb
jo
xchg
mov
push
enter
sbb
pusha
mov
fisubs
cmpsl
inc
insl
std
mov
leave
cwtl
cmp
mov
and
cli
outsb
or
mov
dec
repnz
sahf
cmpsb
pop
gs
fnstsw
std
push
popa
sahf
mov
jo
pop
flds
jp
sbb
ljmp
push
fdivl
pop
or
mov
pop
pop
mov
out
out
jb
testb
push
adc
mov
cmp
imul
and
imul
hlt
fdivl
xchg
pushf
out
lahf
cmp
xchg
mov
test
in
add
inc
sub
mov
jno
sbbl
shr
lods
jnp
fstpl
mov
add
push
and
push
inc
sbb
add
xor
pop
test
test
mov
adc
out
sbb
fnsave
or
mov
mov
ds
insb
ret
iret
movsl
jo
cmpsb
into
xor
les
stos
fdivr
xchg
fsts
inc
icebp
cmp
mov
ljmp
and
xchg
js
push
sarl
addb
negl
mov
sbb
enter
mov
or
mov
pop
xor
xor
mov
cld
sub
pop
lds
arpl
mov
stos
mov
dec
in
pop
xlat
sub
jo
pop
mov
sub
shll
mov
pushf
dec
push
mov
cmp
outsl
cmp
cmpsb
dec
cli
mov
stos
and
add
fnsave
inc
ss
add
pop
jl
cmp
insl
les
lahf
testl
push
int3
bound
jecxz
xchg
push
nop
jb
movsb
sub
and
mov
ja
inc
and
mov
sub
pop
repz
cltd
xor
mov
int
mov
stos
cmc
sbb
cwtl
outsb
adcl
adc
jo
mov
jae
pop
xchg
rol
adc
aam
pop
lock
adc
push
push
cmp
enter
xlat
sbb
hlt
lods
repnz
js
popl
sbb
or
mov
mov
das
sbb
and
or
pop
lea
jle
and
sbb
dec
cs
xor
dec
push
in
xchg
stc
push
das
dec
cmp
jle
stos
notl
adc
and
out
es
pop
icebp
and
out
or
xor
sbb
mov
mov
in
or
sbb
lds
mov
pop
mov
lahf
repnz
lods
dec
mov
jp
nop
mov
cmp
inc
and
icebp
int
push
int3
jno
dec
inc
hlt
xchg
sbb
add
jmp
sbb
inc
mov
je
rcrb
stos
sahf
out
push
sbb
insb
mov
std
inc
mov
test
push
push
lods
addl
jle
fiadds
cmc
lea
mov
repz
pop
fisubrl
add
add
xor
add
fsubr
mov
arpl
and
fidivs
mov
fidivl
pop
push
xor
jl
push
or
outsb
roll
jmp
push
in
sub
cmp
pop
push
outsl
jecxz
add
jnp
sbb
pop
push
addr16
stc
push
out
mov
out
stos
add
mov
push
or
sti
jns
add
jne
inc
or
cs
pop
cli
into
cmp
lahf
adc
iret
add
lds
cs
imul
sub
call
das
sti
sarl
ficoms
push
inc
repz
rolb
push
fdivl
add
fs
cmpsb
mov
pop
movsb
xorl
mov
jns
inc
xor
push
aas
jmp
inc
std
iret
mov
xchg
sub
push
mov
frstor
mov
sub
fwait
das
mov
dec
cmove
test
out
add
push
xchg
cmpl
jb
adc
xor
add
sbb
inc
movsb
outsl
jne
push
xchg
jmp
lret
call
adc
in
push
test
jp
shrb
pushf
dec
pop
pop
daa
in
xchg
inc
sbb
cmpl
iret
pop
ja
shll
jge
ss
inc
xchg
mov
sub
jl
ds
cld
icebp
pop
out
xor
xchg
sub
mov
frstor
testb
xorl
cmpsb
or
inc
jmp
push
fcompl
and
or
and
xorl
dec
movsb
icebp
and
ret
int
jle
xchg
sarb
lock
test
or
or
scas
loopne
sbb
add
jmp
mov
mov
push
sub
sbb
pop
ret
or
cltd
sub
pop
push
sub
dec
xlat
jmp
dec
push
push
add
std
cltd
jmp
mov
clc
sbb
in
popa
xchg
sbb
call
mov
arpl
movsl
mov
popl
icebp
dec
test
adc
sub
mov
or
add
add
ds
push
push
mov
cld
or
inc
addl
pop
data16
push
cld
arpl
xchg
clc
fsubrs
imul
in
aam
fsubrl
addr16
adc
les
or
scas
test
xlat
mov
jne
or
jbe
idivl
scas
xlat
dec
test
and
and
xchg
aad
adc
mov
cmp
les
sarb
mov
enter
or
cmp
flds
ds
popf
dec
ret
insl
adc
aas
fwait
jecxz
insb
mull
dec
inc
imul
rcrb
cli
dec
movsb
sub
add
mov
dec
outsb
adc
cmp
clc
popf
dec
xchg
jns
mov
mov
mov
ss
xchg
fsts
lcall
cs
jb
rclb
in
mov
xchg
or
inc
sbb
sub
xor
xchg
inc
in
xchg
inc
mov
push
push
insl
pop
push
test
pop
cmp
popf
adc
push
sub
ficoms
lods
or
cwtl
inc
sbb
mov
test
cmpsl
inc
mov
pushl
rcll
jns
cwtl
push
dec
sbb
mov
jl
test
cmc
aaa
scas
dec
les
jae
andb
pop
shll
mov
xchg
cmpsb
in
pusha
lret
les
jnp
test
or
dec
shlb
inc
repnz
sub
add
sbb
lahf
rcll
dec
lcall
mov
xchg
jne
std
pop
test
mov
cmp
xor
xchg
add
sub
mov
mov
aam
xor
xor
mov
mov
je
je
rcll
mulb
push
mov
insl
decl
and
xchg
ret
sub
scas
and
mov
outsb
dec
and
or
aaa
enter
mov
cmp
nop
pop
aaa
xchg
mov
adc
repnz
mov
insl
std
push
cmp
xor
ljmp
bnd
dec
xor
lods
cltd
or
filds
or
iret
lcall
push
das
mov
inc
ja
call
jmp
cmp
dec
fnstsw
dec
mov
sarl
inc
dec
sbb
jno
out
xlat
add
jno
mov
and
and
mov
mov
mov
adc
test
push
out
popl
mov
je
or
cmp
lcall
adc
testb
rcrb
rorl
imul
and
mov
stos
clc
sbb
or
xor
xchg
iret
test
cli
pop
ret
icebp
ds
ja
lahf
fstp
and
jno
mov
push
mov
mov
mov
stos
inc
arpl
pop
test
jo
jecxz
add
notl
xor
outsb
jge
xchg
lret
xchg
push
xchg
push
inc
aad
xchg
cmp
pop
inc
mov
cmpsl
sub
stc
stos
mov
mov
xor
shr
xchg
loop
jbe
push
jg
inc
sub
sbb
fisubl
cmp
sub
add
test
mov
sub
and
dec
jle
call
mov
push
pop
shlb
cmp
lahf
fstps
outsl
ljmp
hlt
in
xor
repz
lods
or
stos
lahf
sbb
fmull
add
ja
ret
int3
sub
test
mov
mov
jne
xor
mov
xchg
sbb
mov
arpl
cmp
lods
stos
std
jle
lret
fistl
cmp
bound
adc
insb
lods
inc
add
or
push
roll
adc
pop
dec
sbb
push
pop
imul
out
outsb
push
outsl
mov
or
loop
mulb
test
mov
jb
inc
push
push
and
adc
jge
fadds
xlat
mov
mov
mov
jmp
mov
arpl
mov
outsb
dec
stc
pop
ret
sbb
fxch
test
or
pusha
loopne
sub
mov
jnp
inc
inc
mov
scas
pop
loope
or
sahf
pop
pushf
pop
aam
inc
inc
lret
mov
fisubrl
inc
roll
sbb
or
ds
xor
sbb
cmp
pop
xlat
sbb
outsl
dec
jecxz
xor
xor
mov
addr16
lods
orb
xchg
inc
leave
xor
lock
out
imul
shrl
movsl
push
ja
mov
or
inc
cwtl
cmp
in
ss
addb
dec
call
cli
mov
xlat
out
cmpsb
xchg
adc
test
nop
sub
push
xor
sti
insl
lea
shlb
fbstp
push
pop
xchg
xchg
icebp
repnz
sub
sti
arpl
jge
or
dec
testl
pop
clc
test
movd
jno
sbb
inc
add
stos
repnz
add
call
xor
test
cli
mov
insb
cmc
push
xchg
xchg
ja
inc
dec
in
andb
dec
mov
aas
ss
push
xchg
mov
sbb
mov
sbb
pop
out
addr16
mov
ret
in
dec
or
add
mov
test
add
fldl
cmp
inc
adc
xor
xchg
cmp
xor
imul
test
stos
pop
test
jb
pop
rcr
ds
xchg
enter
das
sub
jmp
cmp
push
pop
xchg
sbb
aas
sub
into
push
mov
enter
jecxz
mov
out
inc
popf
aaa
xchg
jmp
push
push
mov
insl
dec
js
and
pusha
in
in
call
mov
test
fisubl
mov
sub
mov
stos
in
rclb
pop
pop
cmp
jne
sbb
jg
ds
loop
sub
add
insb
adc
testb
lret
js
out
sahf
dec
adc
mov
lret
inc
dec
daa
sub
mov
andl
and
nop
dec
fimull
pop
les
ljmp
mov
and
lea
cmc
mov
mov
dec
dec
js
pop
pop
pop
outsl
stos
shll
and
sbb
fldcw
les
loope
rcl
mulb
fiaddl
dec
push
shr
iret
cmp
clc
sbb
pop
jne
mov
rorl
dec
xor
jb
dec
fistps
cmpsb
jns
push
cmpsb
mov
mov
fimull
cmpsb
sarl
in
or
idivb
xorl
imul
movsl
fnstcw
in
orb
rorw
in
fldt
jg
ret
push
xor
test
into
sub
dec
inc
mov
testb
adc
cmc
movl
int3
cld
mov
pop
or
sbb
jnp
ja
mov
push
or
mov
in
xchg
xchg
pop
cmpsl
out
push
dec
jns
cltd
xchg
xchg
or
xlat
int3
ds
inc
sti
rol
jg
sahf
cwtl
jecxz
adcl
enter
and
push
mov
add
pop
nop
out
pop
pop
jbe
inc
aas
mov
loopne
popa
mov
adc
push
bound
negb
sti
jb
xor
sub
add
sahf
and
cmpsl
ja
lods
xchg
inc
lds
jecxz
push
movsb
daa
jp
inc
jge
insl
sbb
mov
cwtl
out
mov
aam
push
xor
cld
jp
xor
pop
mov
jbe
or
and
adc
movsl
add
std
cmc
scas
cwtl
pop
in
ja
std
mov
adc
sbb
mov
loope
inc
rclb
in
cmp
pop
xchg
pushf
in
xor
push
jno
lret
mov
jle
insl
adc
jno
dec
ret
inc
jb
popf
push
ficoml
test
mov
in
mov
or
xor
mov
jp
push
arpl
pop
mov
add
scas
rol
inc
inc
cmpsl
pushl
xor
add
push
das
adc
xchg
pop
xor
pop
xchg
sub
xor
jp
aaa
push
gs
lods
pop
sub
cmp
push
notl
stos
or
push
stos
jne
mov
inc
sbb
push
in
pushf
shll
and
das
adc
mov
les
mov
pop
push
sti
jb
sub
and
ret
shr
cwtl
pop
pop
jmp
test
sbb
aam
je
adc
pop
and
in
test
test
xlat
push
ja
inc
outsb
xchg
adc
mov
arpl
pop
or
push
pop
cltd
not
pop
push
dec
mov
pushf
mov
int
cmc
inc
jl
data16
fstps
jnp
out
push
adc
inc
in
mov
dec
mov
mov
xchg
jmp
inc
add
fidivl
fistpl
test
sbb
cmpsb
ds
or
pop
pusha
into
iret
push
sbb
enter
pusha
test
aam
or
pop
and
pop
jp
mov
fwait
aaa
call
adc
cmp
loope
sub
mov
pop
mov
sti
ds
mov
jne
dec
shlb
sub
and
xchg
xchg
mov
xor
add
push
in
nop/reserved
mov
enter
arpl
or
rclb
les
pop
js
fists
mov
ret
mov
hlt
loope
loop
lret
add
pop
and
stos
mov
adc
cmp
mov
icebp
hlt
icebp
les
shl
mov
jge
mov
cmpsl
push
cltd
mov
add
or
xchg
pop
push
imul
mov
fildl
push
push
pop
into
push
cmp
insl
sti
jnp
in
xor
mov
adc
lret
xor
cmpl
mul
jae
lods
mov
or
movsb
cmp
push
jne
lock
push
lahf
outsb
int
cmp
movsb
adc
lcall
mov
and
out
jo
les
adc
inc
ret
sahf
and
xor
std
out
xor
stos
xor
sub
push
pop
ret
mov
stc
imul
call
cmp
lock
call
mov
mov
push
out
xor
adc
jl
inc
cmc
xchg
stc
cmp
cwtl
or
into
flds
cmp
lods
push
ret
jae
xchg
cli
dec
and
add
fcmovnb
fisttps
test
arpl
les
sbb
mov
jbe
pusha
aam
into
and
pop
add
or
das
loopne
sbb
pop
insl
fnstcw
xlat
cmp
dec
lcall
outsb
xchg
in
mov
push
dec
jl
mov
or
mov
lahf
and
dec
mov
mov
insb
dec
pop
pop
cmp
popf
rcrl
jae
cmpb
scas
add
sub
mov
scas
enter
xchg
cmp
and
arpl
ds
cmp
fisttps
aad
aam
test
pop
into
add
je
add
stc
and
mov
mov
push
pop
je
insl
test
add
test
push
insl
cld
rcl
aas
adcb
lods
in
outsl
or
add
mov
out
pop
test
cmpsl
jge
xchg
pusha
movsb
into
add
out
in
xor
mov
cmp
mov
and
push
in
dec
mov
push
in
lahf
stos
lret
pop
nop
adc
and
sub
and
sti
pop
dec
xchg
push
imul
icebp
add
adc
pop
mov
fwait
cli
ret
mov
repnz
daa
mov
arpl
inc
xlat
in
std
into
push
std
imul
sub
adc
pop
pushf
cltd
adc
nopl
sub
ss
cltd
or
fcmovnu
jne
mov
push
enter
addr16
mov
and
ja
scas
shrl
mov
lds
std
popf
push
xchg
mov
inc
sahf
int3
sbb
arpl
xchg
jne
sbbl
and
frstor
pop
rorb
push
xor
xchg
xchg
adc
filds
push
add
mov
jge
inc
cmp
adc
fcompl
inc
clc
insl
dec
ljmp
and
dec
jbe
sbb
inc
roll
movl
test
insl
mov
xor
add
add
mov
inc
scas
dec
dec
shl
fisubl
adc
and
into
outsb
pop
int
or
pop
addr16
bound
outsb
xchg
loope
adc
dec
xor
jp
shrb
jmp
into
dec
cmp
jecxz
cmp
adc
popf
fidivrl
scas
mulb
xchg
push
cmpsl
jl
lahf
mov
mov
je
push
gs
arpl
outsl
pop
imul
in
cwtl
cmp
addr16
mov
sub
flds
stc
push
aas
pop
int
jns
sub
sbb
lods
orb
jne
add
gs
in
xchg
xor
push
add
ja
out
push
xchg
dec
jns
ss
sarl
adc
dec
shrl
rorl
xor
sub
lret
mov
insb
movsb
adc
addr16
inc
iret
jae
dec
shrb
call
mov
ljmp
in
subb
andl
xor
fistpl
mov
and
mov
in
enter
fistpl
pmulhuw
stos
or
mov
js
adc
scas
inc
or
and
jae
push
pop
cld
fisubl
popa
push
cmp
or
cs
pop
mov
clc
sub
mov
sub
fs
mov
out
inc
mov
in
aad
in
jecxz
xchg
iret
scas
lds
faddl
or
fdiv
into
xchg
xorl
test
cltd
pop
cmpsl
mov
sbb
mov
stos
gs
imul
jns
xchg
xchg
push
lret
jnp
in
push
fst
test
sbb
dec
xchg
cmpsl
cmc
sub
xchg
mov
es
push
pop
push
aaa
into
jl
imul
jns
add
cmp
xor
pop
xlat
shrl
cmp
sub
fidivrl
mov
jg
or
sbbl
mov
xchg
xchg
xor
aad
lock
call
mov
insl
int
jle
jno
xchg
leave
int3
push
imul
push
mov
incb
jmp
push
jnp
jb
pop
aam
rorb
adcb
dec
int
xchg
adc
cmc
sub
pop
inc
xchg
scas
ljmp
stc
fmuls
pop
or
sar
shlb
xchg
mov
jnp
lods
and
jns
add
lods
push
cs
sbb
sbb
mov
or
xchg
dec
and
xor
in
int
or
rcrl
arpl
mov
xor
dec
xlat
add
outsb
adc
inc
movsl
dec
les
lahf
test
movsb
imul
dec
and
addl
fsubs
xlat
dec
push
pop
cmp
dec
mov
and
sub
jns
daa
ds
rorb
cmp
or
mov
fcmove
xor
add
outsl
insl
and
push
dec
loopne
iret
test
xchg
dec
mov
jne
stc
pop
sahf
xor
jl
mov
gs
sbb
jae
adc
fimuls
mov
call
test
mov
pop
cmp
jp
inc
aad
test
xor
mov
mov
sbb
sub
pop
shrb
push
jl
dec
or
mov
cmpsl
pop
push
push
add
xchg
and
icebp
mov
fcmovnb
mov
xlat
shl
fisubrl
js
mov
adc
dec
fnstcw
clc
mov
loope
cmpb
out
push
jb
pushf
adc
mov
xchg
in
cmp
inc
cmpsl
out
sti
aam
adc
mov
or
adc
repz
cli
test
insl
mov
testb
jge
push
mov
lea
cs
shll
pop
xor
call
mov
add
fisubs
pop
addr16
cmp
dec
and
jge
push
mov
outsb
out
or
add
cmp
mov
aaa
push
nop
push
dec
movsl
hlt
ret
rcll
cmc
mov
test
inc
mov
adc
mull
nop
out
fstpt
aam
add
xchg
in
jb
pop
mov
cmp
mov
and
jp
imul
adc
rcll
filds
fwait
paddd
dec
cmp
pop
lods
push
push
orb
fcmovbe
aas
lcall
mov
incb
and
orl
aas
or
incl
and
cmp
cli
cmp
lds
dec
arpl
mov
xchg
mov
gs
in
or
sub
jmp
stos
sbb
loope
es
enter
jle
and
or
adc
inc
lret
mov
std
sub
fwait
jl
aas
aaa
mov
fimuls
mov
rcrb
fistpl
lahf
cmp
insb
inc
jecxz
sub
nop
repz
sub
push
leave
pop
mov
stos
push
sahf
and
or
push
bound
imul
ret
xor
pop
adc
mov
pop
pop
mov
iret
or
mov
lods
outsb
arpl
jo
add
jecxz
xchg
push
inc
jb
popf
ljmp
adc
mov
cmp
dec
les
icebp
stc
sahf
sarl
lea
jae
and
movsl
inc
sub
imul
arpl
jb
sub
push
sbb
cmp
xchg
cmpsb
add
and
dec
push
aam
dec
cmc
xor
fcomip
mov
xchg
add
jae
loope
addl
pop
les
shrb
jmp
sbb
cmp
push
xchg
jbe
add
sahf
notl
pop
ficompl
aaa
movsl
es
push
cmc
dec
fidivl
xchg
out
or
mov
test
addr16
xchg
daa
lock
mov
iret
pop
notl
test
jb
mov
jmp
int
dec
jge
and
shl
ret
jmp
inc
movsb
lds
push
cmc
and
lods
insl
mov
ret
and
and
adc
cmp
gs
rcl
cld
mov
scas
filds
xchg
mov
cs
lahf
sub
ret
in
xlat
inc
and
mov
adc
out
cmp
cmpb
fiaddl
sbbb
inc
pop
in
pop
sub
cmpsl
pop
bound
mov
rcrl
insb
sbb
into
cmp
sbb
cli
in
gs
mov
add
ret
cmp
pusha
adc
stos
add
repz
loop
cmpsl
lret
lods
pop
pop
inc
mov
jne
std
out
sahf
aas
sarl
jecxz
or
add
cmp
xor
data16
push
cwtl
jle
outsb
test
leave
out
cmp
jno
rolb
xor
xor
push
sarb
ret
pop
outsb
sbb
repnz
imul
dec
mov
fmul
aaa
push
sbb
jnp
adc
pop
sub
pop
shll
adc
aad
cmpb
push
ficoms
dec
je
ja
sub
das
adc
dec
icebp
lds
xor
adc
sbb
mov
xor
mov
and
mov
xchg
xchg
mov
testb
js
xor
test
adc
scas
push
rorl
mov
xchg
in
cmpsl
cmpsb
stos
xor
lea
xor
cmp
repz
fidivs
lods
add
test
mov
loope
add
iret
rorl
push
jl
aad
sti
or
add
shll
jp
and
push
test
insl
mov
cwtl
xchg
in
cli
mov
push
out
dec
insb
sub
xchg
inc
das
aaa
or
scas
pop
dec
cli
mov
adc
shrl
push
vpminsw
dec
adcl
jnp
pop
bound
and
xor
adc
loopne
inc
cltd
outsl
and
mov
push
push
dec
jp
push
dec
test
jecxz
push
gs
sbb
xchg
or
aas
mov
mov
add
stc
out
jo
sbb
test
inc
pushl
sti
fwait
mov
clc
scas
loopne
or
loopne
ljmp
xor
adc
xlat
mov
mov
cmp
inc
cmpl
fcmovne
insl
insb
scas
pop
ds
mov
push
inc
mov
jge
xchg
adc
sbb
imul
add
pushf
test
or
push
push
pop
mov
pop
adc
xchg
sbb
jnp
orb
mov
pop
mov
fidivl
test
dec
shll
je
mov
stc
xchg
cli
gs
cmp
mov
rclb
subl
loope
xor
scas
jb
jae
cmp
and
test
rcll
xlat
imul
scas
les
shll
addr16
divl
adc
out
ret
js
adc
ljmp
adc
mov
jmp
push
jmp
iretw
jo
or
push
sub
push
fstpt
cmp
inc
bound
dec
pop
cmp
fmul
mov
je
addr16
mov
mov
pop
add
xlat
loop
push
leave
pop
push
jb
sahf
mov
cmpsb
pop
movsl
dec
outsl
cmp
in
jmp
das
sub
push
stc
adc
shlb
inc
cmp
imul
testl
lods
adcl
xchg
outsl
xchg
inc
sub
pop
cmp
cmp
in
iret
dec
mov
pop
inc
push
mov
xchg
inc
popf
lods
jmp
push
insb
push
call
xor
pop
insl
pop
mov
push
shll
loope
fsts
jmp
ja
test
test
shlb
jl
mov
and
adc
xorl
lahf
jno
scas
bound
dec
in
fcomip
call
cli
mov
xor
dec
ja
pop
cmp
dec
pop
jge
lret
mov
imul
xchg
in
outsb
clc
or
pop
cmp
outsb
inc
pop
lret
out
push
sub
mov
dec
cmc
mov
pop
mov
int
imul
outsl
imul
jecxz
and
mov
popa
xchg
lahf
xchg
faddl
xor
sub
iret
xchg
sbb
jl
pop
repnz
jg
insb
sti
lea
push
jmp
xchg
inc
fcom
aam
fs
pop
in
jge
jmp
call
dec
mov
mov
push
mov
in
mov
dec
cmp
rcrb
push
ds
mov
ds
xor
je
and
fxch
sbb
rcrl
js
add
adc
fsubrl
pushf
cmpsb
in
into
add
pop
mov
xchg
shlb
imulb
stc
and
xor
insb
cmp
xor
fmuls
rclb
mov
jl
int3
pop
cmp
iret
mov
sbb
sbb
in
daa
inc
mov
adc
cltd
adc
pop
inc
iret
insl
inc
or
adc
ja
lock
iret
dec
pop
sbb
movsl
pop
je
mov
push
push
and
pop
pushf
aaa
sub
cld
lahf
cmc
xchg
and
lea
xchg
pushf
ljmpw
mov
lds
ficoms
enter
fadds
sbb
dec
pop
int3
cmpsl
scas
je
sahf
adc
jno
fimuls
lods
mov
sub
clc
xlat
std
inc
and
jmp
imul
rclb
pop
xchg
or
mov
xchg
cltd
movsb
lcall
cltd
or
gs
inc
insb
cmp
lret
pop
inc
push
jp
cld
mov
cli
je
xchg
inc
inc
cld
mov
repnz
cmp
scas
outsb
mov
jle
push
pushf
int
loope
out
inc
xchg
xchg
int3
out
mov
sbb
and
push
std
loopne
sbb
ds
rorb
xchg
int3
jbe
jns
imul
jp
push
cmp
cmp
jge
sbb
sub
push
es
gs
pop
or
imulb
fwait
lret
data16
push
sub
mov
pop
adc
jecxz
inc
leave
or
sub
in
out
clc
jmp
mov
sub
stos
jnp
jmp
jl
xor
pop
adc
dec
or
popf
addl
test
loope
in
sar
notl
hlt
push
inc
out
xlat
test
imul
jge
movsl
xor
daa
test
arpl
jne
incl
hlt
imulb
add
hlt
fwait
mov
ret
fs
jbe
inc
sub
test
inc
lods
fistpll
xor
les
jnp
jnp
pusha
adc
push
iret
mov
push
mov
cmc
push
mov
mov
popf
xor
adc
movsb
or
sahf
fcompl
outsb
xchg
lcall
mov
mov
sub
mul
mov
sub
dec
clc
inc
cmp
imul
fiaddl
lods
outsb
cmp
scas
int3
insb
int
rclb
fdivl
xchg
jecxz
ds
pop
xchg
mov
hlt
leave
ret
out
std
mov
and
dec
mov
xchg
mov
adc
filds
bound
inc
xchg
dec
cltd
addr16
call
jb
lods
inc
leave
aam
sbb
mov
sti
movsl
dec
rcrb
out
inc
mov
aas
jno
adc
and
not
call
clc
jl
xchg
or
dec
jno
push
mov
ficoml
shrl
or
jle
test
aam
into
jo
mov
flds
sub
dec
repz
pop
out
nop
push
cmpsl
stos
mov
mov
or
orl
leave
pushf
xlat
sub
lock
stos
je
inc
dec
test
sbb
jae
jle
hlt
test
push
fnstcw
aad
xor
shl
pop
rcrl
xchg
mov
pusha
pop
xor
cltd
push
xchg
cmp
faddl
sahf
enter
mov
scas
or
fwait
icebp
and
les
aad
jle
rolb
insl
jns
loope
mov
mov
aam
loope
pop
jp
sbb
out
lods
fidivrl
loope
inc
cmp
push
movsb
pop
xchg
xorl
fldenv
rol
arpl
add
and
add
pop
add
and
cld
pop
test
lods
fidivs
mov
add
lock
cmc
fcoml
aam
jae
clc
in
int3
pop
xlat
add
pushf
or
hlt
xor
dec
adc
popf
ja
shlb
pop
mov
sahf
dec
pop
fs
test
sub
ss
xchg
leave
ret
das
or
hlt
xchg
pop
mov
jnp
cs
enter
mov
xor
xor
popa
fisttps
push
lds
int3
inc
cmp
test
and
and
push
add
jecxz
icebp
pushf
movsb
enter
jno
arpl
add
pop
jbe
or
in
or
dec
and
icebp
movsb
in
nop
shrl
cmpsb
push
mov
in
jae,pn
mov
out
iret
gs
pop
ret
pop
add
pop
mov
fcom
add
mov
out
repz
sarl
mov
push
xchg
xlat
imul
outsb
stos
sti
inc
dec
add
xchg
dec
popf
inc
insl
pop
dec
mov
adc
xlat
out
push
cltd
dec
push
lcall
add
lea
icebp
rorb
ljmp
je
mov
lods
add
popa
in
inc
sub
and
jp
divl
mov
scas
mov
rclb
clc
aas
cmpsl
push
mov
mov
mulb
fnsave
aad
inc
or
push
repnz
xor
rorb
jecxz
xchg
push
lock
push
jmp
lret
arpl
sub
int3
and
or
pop
push
and
cwtl
pop
adc
imul
cmpsb
daa
pop
xlat
in
push
jne
add
jmp
mov
push
idivb
mov
test
add
xchg
shrb
xor
repz
xchg
addr16
stos
out
sbb
dec
es
jecxz
push
mov
stos
xor
xor
xor
mov
push
icebp
pusha
mov
mov
mov
imul
push
outsb
cmp
push
lcall
mov
stos
dec
dec
mov
lret
imul
inc
mov
pop
pop
arpl
mov
sbb
jmp
adcl
xor
mov
xchg
addl
and
inc
loopne
add
dec
and
xor
sub
xchg
aad
stos
xchg
scas
stos
jmp
pusha
pop
xchg
cmpsb
clc
cmp
and
cwtl
out
pop
call
xchg
cmp
sahf
aad
bound
mov
mov
mov
subb
mov
push
adc
jbe
js
and
je
adc
xchg
xchg
push
inc
outsb
int
aad
adc
jns
dec
out
mov
dec
subb
gs
hlt
push
mov
fisttpll
icebp
clc
dec
jno
imul
lds
sbb
push
sbb
lds
loope
std
or
cs
test
mov
pop
mov
dec
sti
jnp
clc
sbb
pop
jne
addr16
cmp
mov
xchg
fdivp
das
push
xchg
pop
cmc
lcall
shll
xchg
andb
lcall
add
ss
in
sub
test
inc
fldl
andb
dec
pop
sub
popa
mov
cs
adc
add
int
pop
mov
int
push
test
add
rcll
cmp
mov
gs
ja
into
jmp
in
dec
jo
jo
mov
js
outsl
fidivrl
add
mov
pop
nop
or
sbb
dec
outsb
cli
mov
push
in
lods
ja
push
or
stc
and
jg
mov
ror
cwtl
inc
mov
jne
sti
fsubp
and
incl
push
dec
inc
in
mov
xchg
adc
and
mov
nop
sub
pop
aam
aam
repnz
or
jno
mov
pop
sub
pop
das
inc
insb
cs
sbb
sar
jb
mov
inc
aam
mov
pop
jmp
imul
js
std
add
arpl
mov
adc
push
mov
arpl
test
mov
dec
mov
jbe
jmp
leave
imul
sub
in
inc
xor
sub
pop
stc
cld
xchg
jo
push
rorl
mov
xor
shr
mov
xlat
mov
lret
jecxz
sub
xor
sub
pop
sub
xor
sub
shll
xor
gs
push
daa
push
dec
push
cmp
test
shlb
out
nop
and
mov
sub
ja
data16
or
nop
sbb
push
pop
inc
mov
out
sub
inc
cld
lods
lret
ljmp
outsl
and
push
jmp
clc
push
mov
inc
ret
insb
xchg
push
mov
push
ret
mov
scas
cmp
sbb
data16
push
fldenv
out
ret
std
repnz
sub
cmp
jg
insl
jmp
imul
dec
rorl
sbb
stos
cmp
ja
inc
or
inc
orl
in
mov
jle
cmp
and
dec
fidivrs
dec
insl
cmp
mov
test
sbb
jl
fsts
xchg
sub
xchg
and
sbb
popf
mov
emms
adc
loopne
popf
adc
mov
test
mov
inc
and
pop
aaa
xorl
mov
stos
mov
repz
mov
fidivs
int3
add
jb
mov
mov
movsb
inc
pop
movsl
push
xor
test
mov
out
cli
notb
push
imul
nop
insb
inc
lock
mov
into
mov
mov
ds
out
pop
stc
adc
cmp
data16
jl
push
jne
push
imul
sarl
push
fadds
inc
inc
inc
scas
cli
mov
loop
and
pop
mov
dec
cld
jg
sbb
in
popa
loop
rorb
xor
rorl
out
insb
mov
mov
mov
in
jne
jae
and
cmp
sbb
dec
jecxz
lcall
add
xchg
test
or
shll
movsl
mov
lods
fimull
gs
push
inc
jmp
and
out
outsb
jmp
adc
dec
cwtl
pop
sbb
popf
sub
cmp
sub
sti
jo
mov
int3
test
cld
and
jmp
mov
fidivs
jne
pop
andb
xorl
psrad
int3
add
xchg
pop
mov
pop
mov
sbb
push
adc
or
pop
inc
inc
cmpsl
xchg
xchg
ret
test
dec
cld
fwait
imul
jbe
imulb
inc
xor
xchg
jge
imul
scas
js
xor
mov
mov
add
int3
into
lea
dec
iret
imulb
pop
push
adc
out
cmc
scas
call
xor
or
out
xchg
pop
adc
and
int3
pop
popa
repnz
jns
vaddss
add
push
and
jne
outsl
sub
inc
and
sub
mov
and
fwait
aam
cmp
sbb
adc
ja
and
xchg
or
hlt
xchg
cmp
aam
ljmp
dec
push
xor
test
and
jecxz
inc
in
push
mov
push
aad
pop
cmp
movsb
iret
rcrb
ret
adc
and
out
cltd
mov
aad
outsb
sub
stos
inc
dec
fidivl
sbb
xor
incl
stc
inc
pop
xlat
pushf
cmp
dec
mov
jne
mov
push
loop
push
pop
es
fdivrs
push
push
arpl
lods
jmp
xor
inc
daa
sbb
mov
pop
pop
enter
cltd
mov
jmp
outsb
xchg
push
clc
xor
shlb
push
cmp
arpl
loopne
mov
leave
dec
cmp
jae
in
pop
jnp
xchg
repz
lea
loopne
out
movsb
push
jge
pop
fstpl
scas
sti
lret
pusha
aaa
cmpsb
not
pop
xchg
int
sub
into
aad
movsl
js
test
adc
jmp
je
xor
aas
mov
int
les
movsl
sarb
jle
or
imul
out
cmpsl
or
daa
lods
pop
sbb
xchg
inc
movsb
cs
test
mov
add
je
xabort
xor
inc
cs
push
sarl
stos
fwait
and
ss
arpl
dec
push
mov
push
mov
je
jg
inc
push
sub
pop
push
mov
scas
loopne
inc
push
sub
je
add
xchg
fadd
add
lea
pop
mov
and
pop
test
movsl
pop
scas
or
jmp
out
xor
push
int
mov
ret
sti
mov
repnz
dec
inc
xchg
lock
mov
add
add
xchg
das
sub
add
mov
xchg
ret
loope
aad
out
and
mov
fistps
mov
mov
mov
cmpsb
lahf
pop
rcl
add
jae
iret
lret
jae
sbb
int
or
fwait
inc
scas
adc
push
add
and
inc
mov
ret
scas
adc
into
lahf
lds
in
outsl
pop
dec
add
je
shlb
aas
dec
js
fldenv
mov
or
js
sbb
jmp
pop
or
lcall
and
popa
test
jge
cmp
ss
push
in
jg
pusha
fstpt
pop
imul
std
lds
scas
mov
fiadds
adc
jne
dec
pop
jae
or
pop
mov
jmp
or
lods
jnp
push
and
add
cmc
inc
or
andb
inc
xchg
xchg
fwait
xor
out
stos
mov
mov
xchg
out
lret
repnz
insb
test
xor
jmp
fisttpl
leave
jmp
stos
arpl
push
and
push
scas
push
jnp
scas
mov
dec
add
pop
jne
sub
mov
pushf
or
mov
pop
and
loop
fistpl
pop
je
pop
cmp
leave
das
pusha
popa
inc
out
stos
xor
das
cwtl
or
pushf
pop
repnz
aaa
js
in
loopne
fstpl
scas
cs
fsubrp
es
xchg
into
fnstsw
test
jge
adcl
cmp
lahf
gs
sbb
rcr
inc
scas
and
out
mov
cmp
gs
pop
adc
adc
sbb
movsb
sub
push
jecxz
bound
dec
xchg
jp
jns
adc
push
cmpsb
push
sbb
arpl
loopne
jae
lods
mov
add
pop
out
pop
dec
xchg
pop
push
adc
sbb
std
add
orb
inc
aam
and
jno
jnp
fisubrs
mov
jmp
or
test
imul
aad
out
adc
xchg
pop
push
cmp
sahf
lret
pop
jns
mov
cmp
sarb
aas
fwait
mov
xor
ret
into
lahf
je
jle
insl
aas
cmpsb
add
lret
jge
mov
xor
jbe
mov
scas
inc
xchg
or
les
fucomip
push
push
das
inc
xor
out
ss
out
jmp
mov
clc
mov
enter
loopne
enter
popf
in
gs
or
mov
faddp
dec
neg
add
cmp
mov
shl
ds
jb
xchg
jno
arpl
adc
sbb
mov
lcall
push
aaa
ds
ret
add
xor
sbb
call
and
int
ret
jne
mov
and
aad
sahf
loope
test
repnz
and
adc
mov
test
dec
sub
push
dec
packsswb
mov
sub
insl
jno
jbe
shlb
clc
and
ljmp
out
test
int
stos
aas
xchg
stos
notl
inc
daa
arpl
aaa
mov
push
sbb
repz
mov
sbb
pop
aas
mov
cltd
mov
test
cmp
hlt
loope
addb
sbb
repz
mov
popf
je
xor
movsb
xlat
int
out
sbb
in
lret
out
pop
sbb
xchg
and
adc
pop
mov
dec
sbbb
inc
sbb
sbb
loop
xchg
fdivrl
data16
int3
jne
popf
lcall
lahf
lods
and
jmp
pop
icebp
adc
out
imul
pop
and
push
pop
loop
in
fs
in
adc
mov
mov
inc
xor
inc
dec
pop
cmpsl
sub
arpl
mov
clc
cmp
xchg
push
or
mov
fisubrs
cli
outsb
stos
pop
lahf
add
clc
lahf
push
mov
mov
mov
and
add
adc
xchg
fdivrl
mov
dec
mov
or
ds
push
or
in
pop
repnz
sub
jge
lock
cmp
lcall
inc
add
std
inc
mov
pop
xchg
pop
fcmovu
in
insl
mulb
ja
shlb
clc
jno
mov
inc
xor
clc
mov
rcrl
jno
testb
inc
loop
or
mov
lods
fildl
mov
inc
adc
into
adc
jo
and
dec
ror
loopne
repnz
aam
inc
dec
sbbb
aas
lods
aad
repz
hlt
fmull
clc
cmp
idivl
out
es
cli
sbb
xor
out
mov
insb
cmp
sub
lock
cmp
cmp
xor
and
cld
repz
mov
fstpl
lock
push
inc
inc
push
jmp
sarl
pop
sbb
xor
add
mov
inc
dec
pusha
rsm
enter
loopne
push
mov
mov
jge
cmp
add
out
rolb
sub
sbb
inc
jb
lods
movsl
cmpsl
into
ret
ret
mov
cmp
xor
push
les
cld
xchg
js
push
mov
test
sbbl
icebp
mov
mov
dec
mov
xchg
adc
jge
mov
lcall
adc
sub
das
pop
insb
xorl
insb
sahf
shl
loope
fnsave
or
cmp
or
loop
mov
lahf
outsl
nop
es
loop
and
popa
inc
loop
xchg
ficompl
mov
mov
xor
dec
out
cmp
fdivl
in
adc
pop
in
inc
arpl
cmpsb
nop
rcll
pop
aas
repz
xchg
lea
lea
ret
push
adc
das
outsb
rep
xorb
xor
dec
mov
inc
cwtl
shr
jo
lret
dec
or
bound
xchg
push
imul
arpl
add
in
fdivrs
pop
cmp
fstps
sub
call
dec
mov
mov
arpl
xchg
outsb
lods
dec
xchg
xchg
sub
lock
mov
mov
orb
popa
push
mov
ds
xchg
fildll
or
mov
or
loopne
scas
jmp
sub
js
sbb
aaa
and
adc
fwait
hlt
fst
dec
jp
lahf
out
addr16
cmc
inc
cmpsl
xchg
pop
pop
mov
lahf
hlt
sbb
cmp
int3
in
cs
sbb
in
sarb
lret
mov
mov
cmc
fwait
sub
loop
jg
push
add
mov
scas
je
mov
sub
cmp
sbb
and
pusha
ja
adc
ret
mov
dec
xchg
test
jne
loope
in
jl
sub
rcrl
and
pop
cli
lea
adc
iret
cmp
jmp
fstp
sub
js
ljmp
jmp
data16
mov
add
jb
push
inc
lds
fcmovnu
inc
dec
repz
fdivrs
sti
shl
push
mov
insl
roll
cmp
insl
xchg
pop
inc
mov
xlat
adc
pop
fildll
sbb
adcl
mov
xor
add
addr16
xor
xchg
push
pop
lods
lods
ljmp
stos
cmpsl
mov
in
cmp
xlat
mov
sbb
xor
jb
add
test
mov
rorl
mov
jg
xchg
enter
call
je
adc
shll
stos
stos
lret
stos
outsb
test
mov
cltd
mov
lret
sub
mov
out
mov
push
shr
testl
sub
frstor
insl
popf
sbb
pop
rorl
jo
mov
std
ret
data16
aas
sub
jecxz
notb
cli
adcb
lahf
push
or
shll
inc
ss
rorl
addb
push
xor
pop
pop
cld
cmp
mov
addr16
repz
sbb
and
push
inc
stos
or
pop
adcb
mov
sbb
xchg
xchg
repz
lods
pop
jge
jae
jmp
inc
inc
neg
cltd
push
inc
dec
mov
fsubrs
cmpsb
lds
test
mov
inc
out
jb
sti
sub
mov
push
dec
stc
jo
loop
decb
inc
mov
adc
rorl
lods
pop
nop
movsl
gs
aam
sub
ds
lret
pop
push
js
mov
mov
mov
or
shll
and
test
cltd
or
mov
push
enter
divl
inc
ret
test
pop
pop
in
loopne
flds
push
loopne
aam
dec
inc
push
xchg
mov
push
aas
xchg
inc
xchg
loopne
lods
mov
mov
xchg
movsl
mov
push
aas
and
xlat
mov
jb
jg
repz
jbe
and
cld
lea
jge
call
jle
call
xchg
mov
fstpt
xchg
xchg
jle
cmp
and
dec
repnz
clc
jo
inc
mul
les
mov
or
clc
sar
in
ret
cwtl
leave
jbe
or
xor
lcall
leave
lods
adc
inc
pushf
ret
xlat
lret
in
loope
cmpsl
aam
popa
imul
cli
stc
cmpxchg
and
xchg
mov
cmp
and
repz
js
push
test
pop
adc
dec
stos
lret
mov
pushf
push
fwait
int3
adc
add
add
xor
and
imul
xchg
jl
and
lret
in
test
mov
or
cmp
and
leave
add
insb
add
in
and
enter
or
lds
adc
jno
jne,pn
aam
pop
arpl
test
test
test
and
cmp
popa
pop
jns
cmp
pop
sahf
pop
pop
out
mov
int3
insl
fcomps
outsb
xor
rcr
or
ss
cmp
xor
les
mov
mov
adcl
pop
fistpl
xchg
fwait
out
sbb
and
pop
out
cmp
dec
fcmovb
xor
xchg
shll
cmp
cmp
push
mov
hlt
into
sti
adc
pop
aam
mov
jno
or
adc
fwait
mov
dec
data16
xchg
fldt
adc
fimull
subb
sbb
pop
dec
pop
imul
xchg
stos
and
repnz
das
aaa
pusha
shrb
lret
mov
ret
sahf
ja
xchg
or
sub
lods
push
sbb
ret
sbb
mov
mov
pop
dec
cmp
in
inc
mov
inc
mov
xor
jp
and
leave
fldl
in
and
sbb
mov
int3
dec
sti
shlb
xchg
pop
imul
aas
cmpsb
imul
pop
sbb
mov
cmp
lods
incl
and
and
popa
and
and
in
sbb
ljmp
hlt
subb
jbe
jg
fucomi
mull
ss
shl
mov
lds
out
insl
add
jnp
jecxz
popf
and
fstpt
cmp
xchg
in
das
xchg
rcrb
mov
push
mov
mov
fisttpl
dec
add
fwait
lret
ror
push
in
inc
xorl
sar
scas
jo
fstl
sub
fistpl
ss
cwtl
lock
cmc
cltd
sub
scas
cmpsl
dec
mov
xchg
dec
pop
pop
bound
popf
or
ljmp
mov
sbb
inc
cmp
mov
push
mov
mov
loope
mov
shlb
imul
daa
inc
xchg
gs
pushl
sahf
imul
mov
sarb
adc
lcall
clc
scas
dec
cmpsb
negl
dec
in
pop
jne
ljmp
sub
push
icebp
and
stos
mov
inc
mov
jmp
lea
jecxz
jnp
pop
shll
loop
jle
idivl
iret
adc
mov
mov
push
cmp
push
jl
cmp
adc
in
mov
sbb
or
cmpsb
ljmp
and
inc
push
mov
dec
xor
push
out
andb
aas
aad
mov
xor
mov
hlt
sbb
call
cmpl
push
mov
rclb
adc
stos
xchg
push
inc
jmp
mov
roll
push
rorl
sbb
jne
shll
inc
dec
in
cmp
bound
pop
jmp
push
cmpsl
inc
xchg
scas
sbb
adc
mov
out
xor
mov
rol
cmp
push
push
stc
ljmp
add
idivb
mov
or
push
pop
and
imul
and
or
push
inc
les
mov
outsb
xchg
loope
js
dec
out
shr
cli
das
push
or
pop
push
push
jp
mov
scas
mov
pop
daa
pop
pop
test
mov
dec
mov
sub
cli
jp
les
adc
inc
gs
pop
sahf
and
xchg
pop
imul
aaa
mov
mov
or
fwait
scas
push
std
mov
andl
repz
add
push
call
cmp
pop
popf
and
into
or
and
mov
jecxz
push
pushl
or
add
push
pop
inc
les
and
arpl
sbb
jno
stos
xor
xor
nop
mov
mov
push
dec
divb
xchg
stos
ljmp
mov
sub
sbb
sbb
jnp
sub
jmp
mov
daa
pop
xchg
sbb
xchg
out
mov
dec
jle
push
pusha
mov
mov
xor
cs
xor
rcrb
push
and
into
cld
jbe
shr
cmc
cs
iret
loope
pop
nop
or
insl
out
out
jp
aas
push
insl
or
lds
inc
idivl
inc
mov
shrb
js
les
xchg
in
pop
rcll
sbb
ljmp
mov
jnp
mov
rcrl
jne
fisubrs
inc
pop
mov
and
mov
xchg
cmp
and
jnp
dec
mov
movsl
mov
enter
int
loopne
stos
addl
cli
jge
pop
or
into
jl
call
xchg
jecxz
push
lahf
cmp
outsb
in
lcall
repz
and
imul
jmp
mov
xchg
mov
enter
inc
das
jae
mov
add
mov
add
not
jg
pop
inc
mov
xorl
lret
inc
leave
adc
dec
adc
dec
and
rolb
mov
xchg
jp
fwait
mov
andl
out
push
or
andb
or
mov
fdiv
jmp
shl
movsl
movsb
jp
test
test
movl
fbstp
add
fdivrl
int
pop
into
rclb
add
and
add
fists
popf
inc
out
std
lock
or
icebp
cmp
mov
add
daa
or
in
orl
insl
cmpsl
out
mov
push
popf
adc
divb
mov
pop
fwait
sbb
xchg
cld
fisubl
push
sub
adc
cmpsl
cmp
cmp
cmp
cld
mov
movsl
push
xlat
sub
jnp
mov
lret
das
cmpsb
mov
adc
and
jno
cmpb
or
cmp
pop
popf
push
in
push
xchg
add
jmp
les
push
jp
fisttpl
sbb
imul
subb
push
dec
add
mov
iret
arpl
xchg
mov
aaa
adc
push
hlt
adc
pmaxsw
daa
in
dec
push
xchg
scas
sti
mov
mov
pushf
in
mov
sbb
xor
lret
mov
xor
ljmp
adc
push
stc
pop
test
adc
scas
cmp
jg
lds
test
out
push
dec
mov
lds
mov
scas
and
loopne
xchg
push
add
in
lock
sbb
jne
and
mov
imul
ds
pop
mov
sbb
mov
outsl
insl
shl
shlb
sub
lcall
push
cwtl
mov
sbb
imul
push
or
cmpl
pop
inc
insl
xlat
cmc
aam
mov
inc
xor
dec
xchg
inc
dec
dec
iret
adc
sbb
inc
and
sub
mov
dec
sub
enter
pushf
add
shrl
int3
nop
push
mov
insl
push
gs
in
mov
mov
adc
out
lea
or
jbe
popa
ret
mov
cltd
jno
movsl
stos
scas
adc
add
sbb
push
cmc
or
sbb
data16
aaa
and
mov
jle
and
dec
imul
xchg
pop
xorl
jmp
dec
dec
rcrl
xor
lods
mov
fiadds
loopne
cmp
push
add
xor
xor
mov
dec
adc
mov
adc
movsl
inc
out
mov
xchg
andl
or
mov
jge
adc
xchg
insl
addr16
xchg
inc
mov
rcll
repnz
cltd
psubd
sub
dec
mov
fcmove
sarl
push
mov
push
xor
adc
fwait
orl
mov
inc
into
dec
mov
jle
mov
pop
pop
dec
cmpsl
add
push
mov
iret
repz
rol
in
rcrl
mov
outsl
nop
xlat
inc
ret
push
pushl
mov
sbbb
mov
lods
out
mov
je
push
push
jg
cmpsb
adc
jno
call
cmovo
sbb
inc
push
out
outsb
sub
inc
insl
inc
jno
scas
push
insl
stos
daa
fstl
adc
fs
aas
shll
rolb
call
lret
lods
mov
push
sbb
xchg
sbb
enter
mov
jl
mov
fdivrp
inc
enter
xlat
insl
xchg
jno
fwait
roll
or
jno
xchg
dec
cmp
and
push
sbb
enter
std
es
arpl
inc
or
ds
mov
sub
xor
mov
es
pop
lret
mov
stos
mov
adc
push
js
bound
clc
xor
out
sbbb
cld
arpl
imul
sbb
shlb
lahf
jb
dec
in
ret
sub
cmp
cmp
popf
in
movsl
add
jnp
lahf
push
lods
stos
je
cltd
shll
sti
call
xlat
sahf
adc
push
into
je
repz
dec
loopne
stc
mov
mov
xchg
jns
out
xlat
sub
inc
dec
setge
sarb
fsubrl
in
fwait
push
mov
lock
xor
mov
ror
sarl
jae
fcomps
push
aad
imul
jbe
add
popa
std
nop
inc
jnp
cmp
mov
and
push
sbb
mov
inc
std
cli
leave
mov
fldt
fcomp
lods
or
sub
and
test
scas
gs
test
adcb
cltd
adc
mov
imul
jbe
ss
rcll
mov
fmuls
push
sbb
and
jp
cmp
daa
in
cmc
int3
fdiv
sub
clc
push
push
dec
movl
sti
cs
popf
aas
stc
stos
jge
sahf
dec
mov
roll
out
adc
repz
sub
es
mov
addr16
test
ret
xor
stc
loopne
mov
sbb
push
fs
xchg
cwtl
mov
bound
aad
mov
mov
std
and
xchg
lods
mov
adc
ds
scas
cmp
inc
jmp
cli
test
jmp
sub
push
fimuls
cld
jp
mov
into
dec
outsb
ds
mov
sub
int3
scas
inc
add
mov
jmp
sahf
insb
cmp
stos
pusha
ds
push
or
or
cmovne
dec
fcomps
add
scas
cld
mov
jp
mov
sbb
into
arpl
fisubs
cmovle
jle
cmp
push
in
mov
mov
pop
push
lea
fsubrs
imul
orb
sub
cmovo
int
movsl
push
xor
mov
arpl
imul
lods
sarl
out
adc
pushf
xchg
das
daa
movsb
mov
adc
mov
push
imul
lods
je
push
pop
orl
xchg
movsl
lock
data16
cmpsl
xchg
cmpsb
fwait
mov
mov
iret
xchg
mov
pop
lret
jge
and
test
pop
stos
and
push
xchg
push
addr16
bswap
xchg
divl
and
push
push
pop
sahf
mov
jmp
dec
mov
push
inc
dec
sti
add
sbb
std
adc
movsl
sub
xor
inc
leave
es
jae
scas
icebp
mov
adc
fsubl
fwait
loopne
or
pop
jecxz
inc
out
loop
add
fbstp
xchg
xchg
xor
cmpsl
in
sbb
xorb
test
pop
mov
pop
jp
dec
xchg
pop
bswap
push
outsl
mov
cmp
dec
lds
enter
mov
pop
jnp
andb
dec
lret
lock
push
insl
jp
js
pop
xor
pop
out
pop
or
test
lds
fadds
add
imulb
scas
push
mov
inc
loopne
outsl
dec
fidivrl
into
inc
cvttps2pi
pop
loope
shll
xchg
cltd
and
push
mov
in
frstor
daa
shl
fidivl
cltd
xorl
scas
repz
in
out
mov
addr16
or
loop
ret
mov
and
adc
out
push
lret
push
outsl
cmp
add
cli
aam
cmp
and
add
jae
jmp
xor
push
insl
nop
sbb
movsl
cwtl
rolb
fnstcw
sub
pop
loop
add
sarb
cli
lock
xchg
sub
test
dec
jecxz
mov
cld
inc
xchg
popl
or
jmp
inc
gs
pop
or
frstor
push
xor
leave
das
jge
int
adc
fnstenv
fs
sub
scas
scas
pop
lahf
pushf
lret
mov
or
xchg
mov
push
mov
stos
cmp
lea
mov
jg
inc
dec
lock
xor
cwtl
sub
sahf
icebp
sbb
imul
mov
out
cmp
mov
sbb
xchg
ja
outsb
sub
dec
mov
jmp
ficoml
push
bound
stos
sbb
xchg
xor
shrl
fbld
dec
in
dec
mov
push
xchg
aam
dec
dec
jle
insl
cmp
or
jl
in
mov
dec
int
enter
movsl
pop
popa
jne
cmp
mov
gs
shll
out
cmp
ds
push
movsl
inc
adc
adc
and
mov
mov
pop
mov
xchg
and
lods
lods
xor
mov
mov
fisubl
mov
movsb
pop
or
mov
negl
in
inc
jl
lret
filds
and
fcomip
outsb
mov
or
test
hlt
push
adc
iret
jecxz
out
fsubrl
pop
inc
mov
pop
push
pop
jnp
inc
stc
xchg
jne
aas
das
loop
loop
fists
aad
dec
popa
cmp
or
mov
push
add
or
push
add
mov
shrb
jmp
movsl
xor
xchg
test
enter
jb
xor
and
cmp
sbb
jle
inc
cltd
inc
aad
xor
xchg
rcrl
push
sub
mov
lock
inc
pop
mov
std
and
rcrl
scas
clc
xchg
sti
test
jb
push
ficomps
dec
test
movl
dec
stos
hlt
add
dec
mov
ljmp
fcmovnu
adc
clc
daa
roll
sbb
dec
xor
pop
test
sub
stos
mov
fsubs
jg
add
test
xchg
jb
lret
ret
mov
pop
dec
faddp
jp
ss
jae
lcall
dec
out
out
pop
popf
clc
add
fprem1
push
fistpl
xor
mov
adc
jecxz
mov
xchg
push
xchg
pop
ljmp
mov
or
mov
cmp
pushf
jp
ljmp
jle
pop
inc
pop
rcrb
jne
xor
mov
clc
xor
inc
xchg
jg
ja
gs
arpl
push
xor
movsb
ds
push
xor
push
mov
cmp
pop
lahf
xlat
int
pop
shl
gs
and
mov
mov
movaps
stos
imul
shlb
shll
push
add
mov
in
and
cmp
mov
xor
sub
inc
cltd
mov
push
add
stos
fistl
xor
push
cmp
xchg
fidivs
adc
scas
mov
enter
inc
int3
xchg
xor
rclb
popa
loope
push
aam
pop
popa
repnz
divl
xor
pop
sub
imul
call
test
loope
or
adc
arpl
cwtl
and
and
int
jbe
call
and
loop
js
cli
jp
and
adc
adc
sub
mov
int3
fwait
cli
fmull
div
subl
sar
fdivrl
outsb
mov
cmp
es
das
dec
cmp
pop
cmp
mov
test
pop
and
push
inc
ds
jge
add
cli
xchg
cmpsb
loope
int3
jge
mov
mov
mov
dec
imul
in
jnp
jg
inc
ror
inc
inc
xchg
or
dec
in
and
adc
std
adc
xchg
aam
jp
sub
adc
dec
into
pop
add
bound
push
pop
jecxz
add
movsb
sub
mov
enter
or
jb
repnz
sub
repz
arpl
sbb
xchg
das
in
xor
nop
jo
adc
sbbl
mov
lret
inc
lret
jmp
pop
mov
outsb
movsl
ss
ljmp
lret
popf
aam
xchg
jmp
addr16
and
outsb
aad
lcall
rcr
fmull
push
inc
pop
add
lock
sub
or
loopne
hlt
mov
aam
cmp
jecxz
and
pop
rcrb
popf
mov
cmp
lahf
incl
outsl
mov
cmpxchg
hlt
dec
lret
and
dec
dec
cmpsb
mov
idivb
jp
in
ljmp
test
or
dec
and
jmp
mov
add
mov
xchg
lcall
xor
lahf
xor
mull
inc
imul
les
push
loop
aam
test
push
shll
or
xor
stc
int
in
test
nop
push
add
xchg
add
test
dec
xlat
outsb
enter
cmc
fdivr
mov
adc
cltd
rcrb
cmp
pop
pop
or
push
add
mov
pop
lahf
and
enter
pinsrw
sub
xchg
pushf
mov
addr16
sti
jb
mov
ds
lea
push
inc
xchg
fisubs
test
inc
out
dec
mov
adc
inc
ja
mov
mov
sub
idivl
test
and
adc
mov
cmp
insb
xor
hlt
arpl
cmpb
pop
mov
imul
dec
lea
jnp
xchg
and
sarb
xchg
mov
outsb
pop
sahf
fwait
mov
sbb
jg
aas
mov
aas
inc
or
stos
mov
dec
ds
jns
push
lret
adc
xor
adc
or
mov
testb
enter
push
xchg
jo
dec
jo
call
in
ss
ret
push
push
xor
adc
mov
movsb
out
mov
adc
xlat
les
inc
jnp
je
repz
jne
dec
das
jmp
mov
ficoms
xlat
jno
jecxz
fnstenv
test
fisubrs
or
add
pop
inc
pop
fs
mov
push
jbe
mov
in
cmp
sbb
pop
leave
pop
outsb
loopne
test
dec
xor
arpl
popf
outsl
andb
mov
sbb
clc
insl
dec
in
mov
mov
dec
mov
xchg
mov
popf
inc
loope
cmp
in
or
inc
jno
scas
mov
and
add
stc
rcll
pop
scas
insb
clc
lahf
push
push
mov
nop
decb
push
mov
cmp
xor
insb
data16
test
cmp
insb
ja
fwait
mov
out
leave
daa
mov
add
fmuls
cmp
xchg
mov
lcall
mov
lcall
push
push
mov
sub
movl
insb
aas
mov
xor
mov
cwtl
push
push
mov
movsl
ror
xchg
add
shr
xchg
std
pop
inc
aad
and
xor
mov
dec
jmp
sub
mov
jno
inc
test
mov
nop
and
cmp
cmp
dec
add
sti
mov
adc
xlat
mov
fiadds
out
gs
push
jl
orl
repz
test
push
mov
popa
sbb
and
popf
stos
mov
sti
pop
add
add
jle
mov
adc
push
mov
adc
xchg
push
in
jl
xlat
add
outsb
pusha
adc
int3
mov
mov
cwtl
jno,pn
jo
cld
sbb
adc
push
mov
xor
testl
popf
fucom
ss
cwtl
rcll
push
fisubrs
fsubrs
es
fnsave
mov
adc
mov
stos
cltd
jns
out
inc
fisubrl
rclb
add
nop
or
ja
stos
aaa
xor
mov
xlat
scas
mov
push
sbb
xor
fists
int3
xor
arpl
sbbb
out
pushf
jmp
imul
shll
loop
test
in
out
cmp
add
sub
je
cmc
sbb
sub
mov
daa
xchg
xchg
sahf
ss
jbe
mov
jo
popa
mov
sub
push
repnz
pop
adc
sub
insl
pop
cmp
xor
and
clc
mov
enter
pop
add
cmpsb
cmc
repz
repnz
mov
mov
lret
das
out
and
cmp
dec
and
xchg
andb
psubq
mov
adc
or
mov
dec
or
mov
jne
pop
adc
movsb
push
fisubl
clc
jge
cmp
jp
mov
dec
xor
test
pop
movsb
push
jecxz
sub
pop
xlat
fdivl
je
xchg
xor
lret
xchg
inc
addr16
testb
imul
inc
pop
loop
movsb
ds
xchg
sub
icebp
fcoms
popf
rcr
push
pop
dec
std
mov
add
pushf
fiadds
stos
push
pusha
dec
sub
jp
mov
push
xchg
fadd
loopne
dec
rcll
push
test
mov
aaa
ljmp
lahf
out
repnz
mov
clc
stos
inc
loope
jl
adc
fs
bound
movsb
sbb
xor
cld
arpl
sbb
adc
mov
bound
push
sub
lret
push
stos
lods
xchg
cmp
aam
daa
mov
inc
or
mov
xor
and
mov
hlt
push
and
or
pop
icebp
mov
and
sbb
mov
icebp
jne
mov
add
mov
mov
icebp
jne
jns
sbb
jle
shl
jo
call
jge
add
xchg
cli
cmpl
ret
xor
dec
mov
hlt
xlat
in
xor
test
test
jl
dec
shll
test
fisubl
cmp
inc
lods
cmp
lahf
sub
int3
xor
add
ja
inc
fstpl
outsb
les
ret
loopne
ja
lahf
or
and
rclb
push
imulb
cli
sub
mov
sbb
mov
mov
dec
idivb
lods
pop
fdivl
jmp
js
add
cli
or
cs
sub
xor
inc
das
popa
push
aaa
fistl
mov
icebp
dec
shl
out
ljmp
xor
inc
fwait
out
ljmp
mov
and
pop
xor
enter
sbb
push
out
lea
fs
xor
or
and
pusha
loope
in
mov
sub
and
sahf
out
push
sub
in
xor
add
add
les
cmp
sbb
dec
mov
pop
ret
add
dec
decb
lret
push
in
shlb
dec
adc
aaa
stos
pop
cvtps2pi
xchg
lahf
xor
xlat
enter
jmp
dec
arpl
pop
pop
outsb
lahf
mov
sarl
lods
mov
jl
outsb
hlt
cmc
push
dec
loope,pn
aaa
loopne
or
cmpsb
int3
test
ret
xchg
mov
xchg
jmp
mov
fwait
xchg
into
push
and
inc
icebp
shll
mov
in
pop
inc
rclb
inc
mov
jp
or
push
lods
mov
ja
rorb
xor
mov
shll
lcall
movsl
daa
and
adc
test
adc
adc
scas
jbe
sub
inc
cmp
and
mov
cmp
mull
pop
decb
hlt
ret
mov
cmp
out
shl
xlat
int3
and
inc
dec
jbe
adc
cmp
fwait
orb
dec
lods
out
push
lret
imul
jo
mov
ja
or
mov
jno
jo
clc
iret
addr16
jge
mov
jo
mov
pop
push
push
and
fbld
sti
adc
pop
sbb
pop
enter
pop
fdivrl
pushf
sti
into
movsl
xor
lds
cltd
push
ret
outsl
or
ss
sbb
fdivs
mov
mov
out
push
lcall
or
les
cmp
jbe
sti
pop
and
scas
cmp
rcrl
std
js
sub
sbb
data16
xlat
adc
push
inc
out
fwait
mov
inc
jge
repnz
mov
in
lock
hlt
add
mov
push
or
gs
mov
xor
jge
push
scas
jmp
adc
pop
pop
into
mov
stos
inc
pop
std
or
andl
mov
stos
nop
pop
int
cs
push
hlt
dec
xchg
xchg
cwtl
pop
mov
mov
dec
jp
fistpl
add
cmp
jl
test
sub
pop
dec
dec
dec
mov
sub
dec
inc
xor
push
xlat
das
movl
aam
pop
jp
fmuls
sub
ds
lock
mov
out
sbb
scas
push
dec
subb
les
setb
add
dec
fdivr
mov
cmp
out
mov
ljmp
mov
sbb
add
out
xor
dec
and
sub
dec
jb
and
mov
test
lock
sbb
subl
fidivs
int3
jecxz
ffree
mov
sub
and
cmp
in
cmpsb
adc
arpl
xchg
jns
test
push
scas
iret
daa
sub
cltd
adc
out
movsb
pop
nop
cmp
cmc
sub
cmc
negb
inc
push
mov
xor
inc
data16
popa
ret
insb
in
xor
xorl
std
inc
mov
push
vdivps
hlt
psubusw
xchg
je
mov
lret
jb
sbb
jnp
push
push
sub
dec
inc
cs
repz
mov
int3
call
rorb
stos
dec
cmp
mov
shrl
jp
icebp
pop
add
aam
jo
dec
pushf
xchg
push
sub
int3
cmp
add
pop
mov
sbb
sbb
pop
or
iret
ja
test
jecxz
cmp
xchg
cmp
mov
xor
nop
out
out
push
xabort
push
jmp
in
enter
mulb
popf
xor
cltd
mov
jecxz
in
mov
mov
addb
cmp
rolb
or
call
and
push
and
rolb
cmpsl
bound
jl
sbb
mov
popa
cmc
sbb
lock
call
mov
dec
daa
cld
jecxz
mov
pop
lods
addr16
push
aas
mov
cld
addb
xchg
mov
push
nop
mov
and
into
xor
das
cmp
push
push
es
jno
push
bound
orl
out
outsb
pop
and
scas
xor
pop
xchg
jo
inc
and
lods
or
mov
or
mov
or
movsl
mov
mov
push
call
mov
mov
aas
jne
jo
fsubrl
scas
sub
cld
jge
cmp
out
clc
adc
sbbb
mov
cmpsb
mov
outsb
pop
popf
out
out
fcmovbe
cmc
xchg
fcoml
pop
flds
jmp
dec
and
pop
mov
push
andb
jle
lret
sub
mov
lods
jecxz
arpl
leave
ds
cmpsl
mov
jo
mov
dec
mov
dec
lahf
lret
inc
or
xchg
int3
dec
dec
sub
rcr
js
dec
or
stos
dec
mov
movl
xchg
test
sbb
roll
xor
dec
sbb
push
mov
push
jno
into
orl
xor
sar
xchg
sbb
xor
test
pop
aad
xchg
and
rolb
hlt
hlt
fadds
adc
cmp
jmp
loope
and
pop
call
push
sbb
incb
loopne
es
out
sbb
test
and
mov
add
sbb
divb
sub
lock
cmp
icebp
aad
inc
push
push
cmc
sub
mov
pop
repz
lock
imul
test
lcall
lds
mov
jmp
or
or
pop
rcll
and
xchg
aam
dec
add
cmc
sti
jne
push
mov
orb
mov
sbb
scas
scas
ss
cmp
inc
ret
jb
mov
xor
movsb
xchg
push
cwtl
adc
popf
dec
jne
ficompl
popa
fiaddl
mov
push
ret
pop
or
cmp
test
insb
mov
sub
scas
mov
outsb
sahf
sub
ss
es
lret
inc
into
icebp
xlat
ret
cmp
pop
sub
decl
push
mov
pop
lcall
call
adc
mov
es
sub
jg
add
push
cmp
lret
add
dec
or
lods
dec
nop
or
mov
sub
repnz
xchg
addr16
lret
mov
icebp
enter
xor
jo
or
rcrl
push
adc
cmpsb
in
scas
fstpl
test
xchg
pop
sbb
fstpl
hlt
int3
imul
in
xchg
or
insb
ret
loope
fiaddl
cmp
cmp
ss
aas
jbe
xor
jmp
adc
mov
in
pop
add
cmp
jle
add
fnstenv
xor
cmp
orl
insb
pop
insb
paddq
mov
xchg
mov
in
mov
jg
push
sbb
repnz
in
sub
pop
xchg
cltd
pop
push
nop
fistpl
sbb
jl
pop
jl
insl
dec
imul
mov
and
imul
add
sti
mov
sub
cmp
add
shll
popf
ss
mov
cli
fsubl
lea
pop
test
outsl
xor
in
aaa
jecxz
push
fdiv
mov
syscall
test
push
xor
push
ja
add
inc
jbe
inc
pop
out
xor
add
xchg
popa
adc
jmp
adc
cwtl
test
adc
adc
or
aam
test
and
cld
mov
std
test
call
push
out
cmpsb
out
jp
pushf
xlat
mov
jae
mov
dec
mov
jnp
fadd
sub
shr
fwait
or
or
jnp
rcll
xchg
je
sbb
fisubs
aam
dec
js
test
testl
outsl
arpl
pop
xor
subb
xor
mov
mov
adc
jecxz
fisubrl
test
movsl
sbb
bnd
out
loop
cli
dec
xchg
and
dec
inc
xor
ss
mov
sahf
push
push
push
pop
mov
xchg
jne
or
xor
cmp
ds
and
and
jno
add
js
and
adc
and
orl
add
adc
xor
fs
cmpxchg
sti
scas
loop
aaa
sub
dec
dec
aas
pop
lret
xchg
mov
pop
call
dec
cli
lods
sub
mov
shr
or
shlb
scas
adc
add
add
dec
outsl
dec
jl
int3
aam
add
out
jno
test
and
cld
loope
jp
push
rcrl
aad
dec
mov
xorl
shr
xor
push
pop
xchg
cmp
inc
jle
sbb
add
fisubs
or
and
jne
xchg
xor
inc
jge
pop
psrad
enter
sub
icebp
insb
fs
lods
cmp
fnsave
lods
inc
push
movsb
addr16
clc
imul
sbb
test
xchg
in
inc
sub
and
dec
scas
mov
popf
and
cli
daa
inc
xchg
push
lahf
cmpsl
sbb
jmp
cmc
jle
sar
andl
jg
aaa
mov
push
gs
jecxz
adc
lds
pusha
pushw
fsub
jmp
add
xchg
imul
insb
jns
ja
adc
or
push
cmp
sbb
inc
stc
imul
out
push
cld
pusha
insl
mov
sub
pop
xor
adc
mov
sub
movsl
xchg
lahf
mov
jmp
adc
mov
mov
rorl
inc
mov
int
leave
mov
call
inc
stc
pop
div
shrb
int3
add
and
xlat
fsubs
outsb
gs
aaa
out
jg
fadds
cld
push
fs
scas
std
cwtl
stos
lret
in
pop
imul
lods
cmpsb
aaa
repnz
repz
leave
fists
ss
cwtl
pop
dec
mov
push
divb
inc
xchg
pop
movsl
mov
clc
dec
orl
xor
outsl
inc
int
fsub
jb
cmp
rolb
sub
xor
push
cmp
pusha
shl
mov
rcrl
push
fsubr
ss
lds
repz
sbb
or
test
inc
into
push
data16
cmp
xchg
jp
pop
dec
out
addb
cmpsl
xchg
cmpsb
sub
fdivrl
dec
icebp
mov
xchg
pushl
push
add
xor
push
out
pushf
test
fnstsw
pop
test
dec
gs
ja
je
out
loopne
in
inc
mov
cs
sub
pop
cmp
shrl
loopne
mov
adc
inc
lret
jne
inc
arpl
mov
jne
add
push
adc
inc
push
xlat
aad
dec
xor
cli
xchg
arpl
mov
push
push
push
jae
xchg
push
lahf
sbb
pop
xor
jle
inc
dec
mov
gs
mov
cmp
pop
xor
pop
xor
addr16
xchg
jb
adc
cmpsl
inc
pushf
dec
into
shrl
decb
inc
dec
or
and
jmp
jmp
mov
cmpsl
xchg
pop
pop
loopne
sub
add
pop
clc
pushf
pop
inc
stos
divl
fnstcw
rcll
iret
dec
or
jbe
inc
adc
dec
adc
int3
outsl
mov
lods
jle
push
xchg
mov
decl
out
loopne
ja
aas
sti
inc
rorl
in
outsl
icebp
mov
pusha
or
pop
mov
or
inc
sub
lds
pop
mov
dec
popa
mov
lock
cmp
stos
sahf
cli
icebp
pop
inc
xlat
xor
xchg
mov
mov
and
adc
push
inc
pop
push
jl
mov
lods
ret
dec
ja
arpl
dec
mov
sbb
or
dec
jge
aaa
or
jg
mov
mov
mov
xlat
or
jmp
ret
add
popa
out
ss
lods
add
sbb
mov
mov
out
insb
or
dec
std
clc
or
and
dec
fldcw
and
mov
insl
jl
jo
push
ret
sbb
sbb
test
sbbl
fwait
out
xchg
scas
inc
comiss
pop
lret
dec
cmp
hlt
insb
divl
enter
pop
out
jecxz
imul
xor
lret
and
stos
test
pop
add
popa
xor
loopne
ja
mov
mov
mov
ja
repnz
and
inc
jno
jne
sbb
dec
pop
das
xchg
orb
js
adc
std
adcb
dec
inc
jno
mov
cwtl
loopne
jnp
repz
dec
or
movsl
jp
pop
stos
xlat
pop
xor
jne
xchg
xchg
enter
push
jno
sbb
insl
in
mov
sub
int
xchg
sbb
pop
push
and
or
jo
sbbb
leave
out
fcompl
ja
js
add
mov
push
fidivrs
mov
push
movsb
in
fnstcw
ret
mov
jg
aam
sub
dec
lods
js
addl
adc
mov
pop
cmp
inc
cmc
xor
cmp
or
add
pop
adc
shrl
push
aam
in
sbb
dec
int
jmp
cmpsl
es
bound
dec
pop
clc
xor
insl
repnz
cwtl
pop
and
jne
cltd
sbb
cltd
push
jne
sub
sbb
inc
xor
push
sub
or
fs
inc
xor
mov
and
or
cmp
bound
test
mov
add
push
mov
je
pop
or
shr
enter
rcll
and
cmp
stos
ja
iret
scas
out
jne
cmp
cmp
outsl
test
mov
outsb
dec
popf
test
in
out
dec
inc
mov
push
or
jnp
inc
jno
dec
inc
test
clc
cs
addr16
sbb
sub
enter
dec
dec
pop
mov
pop
int3
std
test
fstp
cmp
xorb
arpl
xchg
xor
fcmovnu
cwtl
xchg
std
and
negl
mov
lret
stc
loop
imul
jbe
fucomi
cmp
stos
mov
aam
lcall
xor
xor
add
mov
cmp
cmpsl
daa
sbb
mov
out
and
inc
pop
add
push
jle
bound
ja
xchg
in
ret
cmp
mov
push
pop
sub
negl
push
rcr
test
sub
rcrl
loop
inc
ljmp
fnstcw
dec
push
imul
sti
stos
push
and
add
pop
pop
ds
dec
and
das
stos
push
test
lcall
pop
or
mov
imul
mov
and
mov
push
cltd
xor
pushf
push
jmp
inc
sbb
mov
lods
mov
and
ret
mov
in
int
pop
cmp
mov
test
cs
lret
xchg
cmpsb
jmp
xchg
or
in
idivl
jns
mov
scas
cmc
add
fists
mov
adc
sqrtps
scas
scas
inc
bound
mov
xchg
jg
outsl
mov
lcall
gs
cmp
repz
inc
cmp
in
cmp
dec
sub
enter
mov
fwait
dec
or
push
dec
bound
and
xchg
dec
mov
ret
inc
enter
sarl
cld
adc
push
xchg
push
sub
adc
arpl
fsubrs
aaa
pcmpeqd
rcll
add
sti
add
mov
out
xor
jns
ret
popa
pop
stc
imul
xchg
outsl
xchg
push
rorb
push
sbb
pop
stc
mov
sbb
test
jge
mov
and
mov
sbb
in
sub
push
add
sbb
or
jmp
push
ss
test
xor
stos
sarl
cld
or
push
push
xchg
push
sbb
or
mov
push
sub
and
mov
lret
mov
xchg
cmp
outsb
andb
xchg
jmp
pop
cs
daa
inc
negb
rcr
test
movsb
fcoml
dec
mov
mov
xchg
fdivrs
lcall
mov
loop
repnz
mov
fcoms
add
adc
pop
xchg
lahf
or
mov
inc
or
jmp
add
std
or
mov
mov
dec
shl
pop
repnz
mov
in
stos
mov
dec
sub
cwtl
push
out
push
sbb
pop
adc
mov
enter
and
in
mov
mov
test
ficoms
xchg
jns
orl
jbe
pop
jge
jecxz
flds
sub
and
popf
pop
lret
inc
pop
pop
test
les
cmp
adc
push
dec
cwtl
mov
and
sti
dec
sbb
inc
repnz
jae
in
push
add
push
inc
mov
movsb
lret
jl
add
cmp
pop
push
aas
popf
out
push
js
es
int3
adc
je
imul
and
push
lret
add
mov
dec
push
into
sub
cmpsl
leave
popa
inc
add
inc
stos
je
incb
xchg
shll
sub
pusha
push
nop
jl
mov
repnz
sub
scas
movsb
dec
xor
outsl
or
inc
xchg
out
fadd
rclb
cmpsl
and
cvtpi2ps
xor
sub
or
jno
sbb
adc
cmp
popf
dec
lar
inc
out
mov
sub
push
dec
sbb
loop
test
in
in
rcrl
sub
fwait
jmp
dec
movsb
es
aaa
popa
sbb
ret
fwait
ljmp
and
addr16
mov
and
sub
out
mov
xchg
jmp
cmp
popa
cmpsb
xchg
fs
push
and
cmp
sbb
repnz
mov
jo
addr16
nop
mov
std
inc
bound
leave
out
jno
popa
pop
imul
cmpsl
ja
xor
inc
outsb
pop
ret
inc
and
aad
adc
jns
mov
popa
mov
out
and
cmc
push
mov
andl
cmp
pop
pusha
mov
mov
aam
in
push
dec
sbb
int3
xor
push
jae
cli
rcrl
movsl
addr16
dec
sbb
add
fcoms
cli
jecxz
inc
sbb
fsub
inc
shrl
and
stos
repnz
daa
xor
push
push
adc
lcall
jecxz
dec
gs
sbb
jecxz
pushf
inc
or
scas
cmp
incl
dec
sbb
ljmp
cmp
and
outsl
addl
ret
pushf
mov
aam
cs
in
test
adc
addb
mov
xchg
out
popf
jno
fwait
ljmp
icebp
js
mov
das
jecxz
fisttps
movsl
push
adc
outsb
test
aad
or
jg
std
and
fmul
jb
jecxz
movsb
insb
mov
lret
and
std
test
stos
out
inc
push
mov
scas
push
insl
inc
scas
hlt
aad
aad
or
cmp
fstpl
cmpsl
lret
mov
imul
les
mov
mov
inc
das
pop
rcrl
imul
std
xor
gs
inc
xor
lcall
mov
sbb
sahf
mov
mov
imul
and
mov
cmp
xor
sbb
mov
adc
stos
add
cs
loopne
std
cltd
pop
or
push
cmp
fdivp
mov
add
insl
sub
push
mov
jle
call
std
push
jb
sub
stos
cltd
cmp
ss
fstps
sbb
nop
push
jae
jg
xchg
pusha
xor
sub
jl
add
fldl
jg
fidivrl
sub
and
cmc
pop
push
lcall
mov
aad
js
popf
pushl
push
xlat
cmpsb
sub
push
cmp
scas
jns
lcall
dec
ret
xchg
in
xchg
xchg
ret
fsts
or
mov
add
mov
ds
dec
push
pop
jge
xchg
or
push
insl
fwait
subl
popa
add
fdivrl
aas
pushf
mov
lods
push
cs
sbbl
or
cmpsl
stos
scas
cwtl
in
cmp
jmp
xor
mov
and
andl
ficoms
cmp
inc
scas
mov
pop
mov
inc
sbb
cmp
sbbb
add
inc
cmpsl
cmpsl
and
pop
mov
mov
or
xchg
lret
mov
adc
or
adc
dec
insb
jo
clc
mov
sbb
xchg
adc
pop
mov
test
mov
clc
inc
iret
aas
std
lods
push
sbb
inc
and
inc
add
or
push
inc
popf
clc
pop
add
test
popa
or
mov
stos
sbb
mov
inc
push
xlat
adc
je
sbb
and
cltd
dec
adc
in
lea
movl
in
lahf
jecxz
xchg
ss
imul
addr16
pop
arpl
jbe
push
push
jne
and
fists
out
outsl
mov
gs
fdivl
lea
add
mov
in
lret
adc
jne
cmp
pop
jecxz
xorl
jo
sbb
xchg
fnop
cltd
adcw
or
sbb
out
cmpsl
pop
loop
lods
sub
lahf
bound
cmp
adc
mov
sbb
pop
xlat
fwait
xchg
and
mov
fsubs
sti
adcl
inc
and
xchg
mov
adc
add
pop
cld
add
ljmp
or
cmp
sbb
pusha
fs
xchg
mov
incb
xor
adc
cmc
test
add
movsl
mov
mov
mov
cmp
imul
orb
mov
and
jne
out
popa
call
push
or
adc
inc
push
inc
lock
jbe
sub
mov
pushf
dec
test
mov
xchg
xchg
or
icebp
fistps
clc
les
and
loopne
in
pop
mov
ja
and
xor
movsb
sbb
jl
sub
mov
shlb
xchg
jno
dec
arpl
in
lret
pusha
mov
jl
fistpll
aas
mov
inc
inc
roll
sar
test
stos
and
aad
ja
call
jno
adc
imul
daa
sbb
ret
dec
push
lcall
and
fwait
leave
add
insb
xchg
cli
repz
ljmp
rcl
movsb
push
mov
inc
cmpsb
repnz
loope
dec
les
mov
fdivrl
xchg
loope
dec
add
inc
pop
scas
and
outsb
jb
sub
xor
mov
adc
adc
add
mov
movsl
and
inc
xchg
mov
mov
lret
xchg
shlb
ja
mov
xchg
out
sbb
pop
testb
push
cmp
push
pop
inc
out
adc
adcl
jp
adc
add
fs
mov
fsubl
cmp
dec
push
pop
sbbl
pop
mov
mov
enter
push
xchg
and
sti
mov
jecxz
push
xor
ja
mov
add
shlb
in
int
incl
xorl
in
outsb
xor
lcall
jl
sub
sub
pop
into
inc
insb
mov
imul
enter
in
adc
cmp
data16
xchg
mov
sub
insb
mov
enter
in
aas
cmpsb
jb
jne
cmp
mov
xchg
pushl
push
xchg
mov
gs
cmpsl
shlb
xchg
cld
cmp
sub
cmp
loop
frstor
cmp
jl
xchg
xchg
movb
inc
inc
out
ss
add
mov
pop
scas
push
mov
sub
std
fldenv
xchg
xor
pop
aaa
cmpb
faddl
shll
mov
fwait
add
std
pop
inc
adc
cmp
sub
add
icebp
imul
jo
sbb
adc
push
fwait
adc
push
sarb
mov
xchg
loopne
loop
mov
cltd
add
xlat
or
jb
and
cld
xchg
test
and
inc
call
mov
hlt
repz
pop
cmp
xchg
fwait
nop
adc
sti
outsw
mov
test
cld
test
xchg
jae
mov
lahf
test
lret
stos
scas
add
mov
hlt
lret
stos
adc
outsl
cld
icebp
lock
mov
outsl
neg
xchg
sbb
out
adc
xorb
addr16
imul
addl
aam
or
pop
shll
pusha
or
add
aad
or
mov
lret
pop
add
call
or
jge
imul
xor
mov
sti
test
or
dec
inc
xchg
cmpsb
arpl
cmp
bound
push
xchg
xchg
fcoms
jbe
int3
cmc
cmc
cmp
and
int
jbe
icebp
bswap
fmuls
lcall
dec
aad
cmp
dec
repz
push
sub
das
jns
jg
pop
in
add
aas
and
adc
lods
jnp
fwait
jg
sub
mov
test
dec
inc
and
dec
and
in
fsubp
xchg
push
add
mov
std
mov
out
add
adc
xchg
mul
mov
movsb
lds
cmc
jmp
or
cld
or
xor
sub
test
mov
add
repz
mov
nop
jle
fdiv
mov
push
int3
xor
clc
xchg
adc
fiaddl
lcall
push
fnstcw
data16
lahf
test
pop
jae
cmp
inc
sahf
inc
push
subb
inc
xchg
xchg
add
mov
lahf
into
inc
out
dec
add
shrl
out
sti
xor
sub
jl
cmp
hlt
inc
or
sbb
shlb
cmp
outsl
mov
mov
jp
cmc
sbb
bound
mov
test
inc
in
push
mov
out
popa
push
out
xor
jae
mov
divb
rcll
mov
addr16
sub
sub
cltd
jne
mov
push
fstps
adc
das
jecxz
xchg
pop
or
dec
in
mov
pop
aad
aad
jno
lock
inc
cmp
mov
mov
movsl
jo
ret
sub
pushf
js
mov
movsl
xchg
and
jecxz
pop
or
and
lret
mov
push
lea
xchg
das
call
jae
jae
lds
repz
inc
not
mov
push
push
mov
addr16
out
push
data16
test
je
out
daa
pop
adc
ljmp
dec
sbb
adc
roll
test
outsl
pop
pop
xor
leave
xor
pop
insl
inc
sbb
inc
lret
adc
call
xchg
add
mov
repnz
nop
mov
rorb
push
pop
cmpsb
unpcklps
lret
pop
outsl
push
les
sub
loop
cwtl
sub
aaa
cmp
dec
adcl
mov
adc
mov
mov
and
test
pop
push
dec
in
ljmp
sbb
std
and
int
push
pop
rolb
xor
mov
dec
xchg
xlat
add
cmpsb
enter
mov
jl
fsubr
xor
sbb
sub
or
sub
pop
stc
inc
mov
xchg
inc
jl
out
bound
clc
sahf
inc
mov
adc
rol
mov
add
xchg
push
aaa
cwtl
lods
popa
subb
push
idivl
dec
sbb
jb
jb
loope
push
xchg
push
mov
pop
pop
out
dec
add
rorl
in
loop
fs
dec
mov
sti
and
or
shl
bound
push
mov
jnp
xor
repz
sbb
mov
push
mov
icebp
sub
ja
xchg
cltd
xlat
mov
addr16
shl
loopnew
jbe
mov
xchg
test
mov
mov
jl
clc
loop
inc
ljmp
mov
push
pushf
daa
test
fistpll
push
mov
fildl
bound
into
or
inc
jp
xchg
icebp
nop
pusha
xchg
fadd
out
xor
imul
repnz
mov
or
jl
jmp
and
mov
add
or
repz
xor
mov
and
push
jg
pop
mov
and
and
push
into
push
dec
xchg
in
cli
inc
scas
lcall
repnz
mov
jle
and
call
scas
ret
popa
inc
iret
dec
mov
inc
outsl
sbb
push
jne
test
jg
jb
push
mov
in
cmpsb
out
mov
daa
int3
push
js
and
cmpsb
scas
jns
gs
mov
adc
negb
lds
sarb
sbb
lret
aam
addl
nop
adcl
mov
mov
mov
and
mov
ret
xor
arpl
rorb
cltd
cltd
cli
dec
push
sbb
fnsetpm(287
out
leave
jae
xor
pop
aam
xchg
mov
lods
ret
mov
loop
jl
repnz
ja
mov
rol
outsl
sbb
cmpb
bound
int
sub
pop
or
mov
mov
and
mov
or
dec
nop
sub
enter
inc
lcall
test
jns
push
xchg
mov
insl
or
pop
cmc
dec
mov
movsb
aad
outsb
mov
inc
aaa
cmpb
loop
das
andb
nop
mov
mov
bound
stos
in
sub
and
scas
das
xchg
bound
int3
pop
out
cltd
xlat
add
mov
sahf
movsb
hlt
push
pop
in
xchg
pop
mov
xchg
jno
aad
lret
pop
cmpsb
out
dec
leave
outsb
lock
sub
dec
scas
xor
push
and
fsubrp
sarl
ljmp
in
dec
cwtl
fwait
enter
sub
sbb
xor
movsl
loopne
push
imul
in
pop
loopne
pop
sub
loope
adc
aas
and
sbb
cs
jecxz
out
mov
test
bound
push
push
mov
cld
bound
push
adc
shlb
scas
scas
dec
xchg
fcompl
mov
bound
push
push
repnz
mov
sbb
js
push
sahf
dec
add
iret
out
imul
fdivrs
test
inc
addl
pop
sbb
in
popw
arpl
xchg
test
sbb
adc
mov
xchg
push
jecxz
out
adc
rol
lahf
lret
dec
repz
mov
add
clc
adc
fsubrp
sbb
dec
inc
pop
and
jp
daa
sub
stc
imul
jp
xchg
sub
insb
jl
test
add
out
adc
fisubrs
imul
push
daa
nop
bound
jo
pop
inc
pop
xchg
test
xchg
dec
push
fcmovnbe
mov
arpl
jle
lds
mov
aad
mov
aam
xor
loope
sti
pushf
xor
and
cmp
call
add
xlat
dec
daa
repz
xchg
mov
mov
sub
mov
mov
dec
sbb
pop
jne
push
fldenv
das
xorb
add
mov
ljmp
add
pop
sub
adcb
xchg
inc
dec
sub
sbb
mov
incl
adc
stos
mov
lods
pop
out
rep
pushf
add
or
loope
ljmp
int3
repnz
popf
jne
out
iret
pop
inc
jb
out
mov
dec
int
and
sbb
dec
add
add
in
push
imul
test
and
adc
xor
mov
je
mov
mov
ret
sahf
push
add
sti
lock
aaa
inc
or
cmc
mov
jg
mov
jno
push
addr16
jecxz
jbe
xchg
dec
pop
test
inc
insb
push
out
sbb
popa
sub
out
neg
mov
inc
out
or
repz
and
dec
add
lea
jle
add
push
mov
fidivrl
icebp
stos
or
fstps
sub
icebp
ja
aad
mov
pop
or
xor
dec
sbb
mov
fidivs
aaa
imul
in
jmp
ret
dec
mov
push
movsb
jns
sub
mov
sbb
adc
popa
mov
int3
shrb
leave
jl
dec
test
enter
or
and
lcall
pop
int3
sub
orb
lock
dec
jb
cmp
sub
clc
pop
jmp
jecxz
add
jge
push
ja
fisubl
push
das
sbb
jmp
test
fs
push
loope
jo
out
js
add
push
das
ret
leave
jbe
xor
inc
sbb
pusha
ficoml
push
fwait
ds
sub
xchg
pop
shll
test
roll
ss
inc
insl
loope
int
movups
xchg
rcr
sub
mov
xchg
jl
and
adc
insb
aam
sub
fimull
push
inc
mov
in
inc
adc
mov
and
sub
lret
add
cmp
cmp
mov
add
scas
rcll
add
cltd
xchg
pop
stos
test
loope
imul
push
mov
adc
mov
imulb
sbb
mov
daa
mov
rcrl
lock
mov
inc
mov
cmpsb
inc
test
sub
dec
test
mov
fisttps
stos
add
mov
or
mov
or
outsb
jecxz
sub
lcall
addb
in
push
sub
adc
mov
sbbb
and
push
adc
jo
ret
inc
data16
mov
mov
dec
push
fdivr
and
sbb
jg
scas
push
jl
mov
dec
repnz
addb
in
xchg
dec
push
pop
insl
dec
movsl
fdivl
pop
inc
mov
sarl
loop
push
pop
cmpl
sbb
pop
les
pop
bound
out
and
js
or
push
jg
mov
int
mov
cmp
jge
and
add
sbb
mov
cmp
into
pop
add
push
sub
jmp
es
mov
ret
cmp
fcom
jp
add
mov
pop
add
lcall
test
jnp
push
rorl
xor
cmpsl
xchg
cld
popa
in
insl
ds
push
stc
into
sbb
sbb
lret
ja
jno
sbb
pop
sub
in
aaa
pusha
stc
jno
rcr
call
jb
dec
loopne
mov
jno
mov
sbb
adc
inc
lods
nop
cltd
jne
dec
dec
iret
stc
sub
cmpxchg
mov
scas
sbb
jo
fistpll
jne
jmp
data16
push
add
fsubrs
pop
bound
cltd
andb
jge
lods
test
mov
outsb
ja
jns
dec
pop
out
jns
dec
lahf
test
js
lock
repz
les
pop
fstl
test
pop
lock
test
jae
xchg
inc
push
ljmp
pop
mov
mov
add
mov
insl
and
cmp
mov
data16
stos
push
clc
mov
imul
sub
adc
mov
cmpsl
mov
dec
sbb
fcoml
sub
test
movsl
sub
out
in
iret
lcall
aad
out
sbb
sub
fiaddl
xor
mov
add
sbb
in
pop
pop
sub
pop
pop
mov
xlat
test
xor
and
mov
mov
sbb
out
sub
rcrl
xor
xchg
sbb
jl
out
push
test
out
fimuls
dec
imul
fistpll
addr16
jne
jg
rcll
jne
sbb
pop
sub
hlt
outsl
loop
inc
adc
and
fcos
sbb
andb
adc
sahf
leave
push
lods
cmp
data16
pop
mov
daa
push
jo
lret
jge
out
xor
jno
pop
jns
cwtl
lcall
xor
cmp
stc
lods
or
rclb
sbb
xchg
movsb
outsl
xlat
mov
call
xor
ret
ret
pop
xor
sahf
mov
jg
dec
fnsave
dec
push
mov
leave
jp
sub
icebp
adc
mov
loopne
mov
loop
js
mov
nop
iret
les
cmpsl
mov
mov
mov
orl
inc
fsqrt
push
jmp
test
lock
aas
push
or
push
add
out
jp
test
add
mov
sbb
negb
addl
sub
mov
mov
and
shl
lahf
scas
jo
xchg
push
js
jne
in
out
xchg
call
ss
jbe
inc
dec
add
jbe
fistps
cld
and
pop
pusha
pop
mov
push
xchg
cmp
mov
test
daa
dec
test
rolb
iret
das
clc
lea
xor
xchg
mov
pop
mov
cmp
pop
inc
cmp
mov
popf
xlat
lods
mov
jns
sub
jmp
push
dec
pop
stos
adc
call
in
ja
mov
test
jmp
test
repnz
icebp
sub
sub
bound
or
rolb
mov
mov
test
xor
and
icebp
cli
outsl
sbb
sbb
into
data16
add
jae
test
xor
les
fnstenv
mov
xchg
xor
jae
pop
adc
push
cmp
lcall
push
or
cmpsl
mov
push
popf
in
mov
into
inc
push
ss
loopne
xlat
push
fiadds
adcb
adc
stos
mov
xchg
push
xchg
sarl
in
inc
cli
mov
test
pop
cli
loopne
lea
sub
cmp
xchg
mov
dec
mov
out
cmpps
popa
add
xor
test
rorb
xor
xchg
sti
aas
ds
dec
cmp
ror
test
push
outsb
jb
sub
ja
push
push
rcrl
jp
in
cmp
mov
in
mov
mov
addr16
movsl
sbb
aas
adc
jb
rcl
jp
and
push
mov
cmp
cmp
sbb
dec
inc
dec
xchg
jl
movsl
fldl
test
pop
mull
sti
pop
jbe
inc
adc
push
adc
lea
push
jle
in
ljmp
cmc
lret
sub
jno
ds
shr
or
xor
or
pop
inc
xchg
fcmovb
and
xor
fnstenv
sbb
std
pop
adc
insl
out
enter
jo
lret
jp
out
pop
ret
loope
ret
sbb
data16
cmp
ret
repnz
incb
or
or
out
push
aam
xchg
fidivrs
es
sbb
jnp
dec
stos
dec
xlat
pushf
movsb
nop
jmp
pop
lahf
cli
fistl
std
sar
lcall
sub
pop
mov
mov
test
cmp
push
xchg
nop
jbe
ja
pop
xlat
fdivs
aas
mov
js
movsb
into
ljmp
push
stc
test
inc
pop
pop
pop
mov
pop
mov
out
call
movsb
pusha
sbbb
push
cmp
sbb
insb
dec
cmp
xchg
jnp
or
in
inc
push
add
repz
cmp
repz
popf
or
dec
in
hlt
in
mov
imul
stos
out
dec
test
add
ret
insl
and
int
addl
pop
jne
movb
test
ret
int3
in
mov
fisubrs
mov
aaa
jo
xor
sub
arpl
lret
cli
mov
dec
sbb
jae
int
mov
jl
sbb
push
dec
imul
push
out
add
sub
shlb
je
push
data16
out
loopne
shll
jne
mov
enter
cmp
sbb
dec
sar
lret
loope
outsb
or
iret
jecxz
sbb
push
mov
test
cmpsb
push
les
inc
aam
fwait
xor
pop
gs
adc
ljmp
sbb
int
fldl
inc
xor
popf
add
lods
bound
dec
int3
jle
jl
pop
mov
cmp
insl
cmc
inc
pmulhw
pop
adc
fsts
jns
fists
push
xor
mov
int
pushf
pop
xchg
cmpsb
mov
jnp
sub
xchg
inc
aas
insb
cmp
dec
sub
jns
lcall
aaa
adc
test
xchg
ljmp
daa
push
fs
pop
shlb
push
es
fbstp
cmpb
mov
mov
pushf
sbb
sbb
adc
or
mov
cld
lods
test
addr16
das
addl
xor
addr16
xchg
inc
enter
mov
cmpsb
shll
mov
fldenv
loope
jg
push
cmp
cmp
inc
pusha
jbe
or
ss
adc
cmpsl
mov
dec
pop
fadd
jp
imul
fwait
insb
test
dec
mov
push
sub
out
cmp
xchg
out
sub
ss
mov
sahf
repz
add
sti
scas
mov
xor
dec
negl
loopne
loop
lock
sbb
mov
cwtl
sbb
mov
add
and
fdiv
push
inc
push
fcoms
clc
or
ret
and
mov
mov
out
jnp
sub
and
insl
mov
fwait
mov
mov
fs
dec
out
push
push
lds
mov
test
xorb
negl
movsb
xchg
dec
pop
xchg
push
negb
testb
cmpsl
lea
push
ret
pop
out
xchg
jb
inc
es
pop
in
xor
clc
seto
imul
mov
stc
es
add
es
notb
in
and
and
cwtl
xor
js
jnp
push
mov
push
leave
push
jo
or
mov
int
xor
add
cmp
jne
fisttpll
mov
xor
sti
and
cli
out
sbb
add
popa
test
int
movsb
sbb
test
xorl
cmp
sub
push
hlt
add
mov
jb
mov
test
loope
fdiv
enter
dec
in
cli
xor
jl
mov
mov
jmp
inc
sbb
dec
int3
jo
ss
push
insb
inc
dec
in
add
loope
mov
ds
dec
jae
xchg
jo
mov
cltd
adc
mov
cmpb
and
xchg
fisttpll
add
orl
test
mov
sub
push
in
rcr
xor
sub
dec
adc
pop
scas
popa
stc
in
shlb
xchg
sahf
push
and
adc
aaa
jecxz
adc
call
sbb
mov
mov
adc
pop
cwtl
rclb
mov
fists
pushf
pop
jmp
outsl
push
mov
pop
movsb
cmp
or
fcmovne
dec
sub
mov
xchg
mov
cli
fnsave
sbb
sti
push
add
movsl
pop
js
dec
xor
mov
mov
lcall
xor
mov
and
and
sti
mov
mov
inc
sbb
cwtl
mov
movsl
xlat
lods
push
fildll
inc
mov
shll
add
aad
je
dec
or
test
lea
fmuls
imul
in
repnz
and
sbb
add
jmp
mov
fidivrl
test
fsubs
std
mov
cmp
in
pusha
jge
adc
dec
jge
icebp
add
adcb
or
xor
push
in
push
fincstp
lcall
into
test
xchg
mov
rcrb
stc
pop
mov
shll
fwait
mov
stos
in
iret
sahf
dec
stos
mov
or
inc
inc
xchg
imul
inc
inc
xchg
ds
mov
lock
pop
cmpxchg
nop
push
xchg
mov
mov
inc
icebp
rorb
je
outsb
dec
movsb
cmp
fwait
call
mov
int
icebp
add
stc
or
xor
popa
xorl
jbe
jae
test
inc
aam
jno
inc
ret
ljmp
imul
dec
int
aaa
or
lock
inc
mov
mov
ja
out
ret
outsl
pop
dec
pop
sbb
imul
dec
movsl
bound
aaa
adc
mov
sbb
rorb
jl
mov
rorb
or
in
nop
aam
jge
push
or
int
int3
add
and
sub
and
mov
pusha
lea
pop
stc
icebp
iret
xchg
and
add
adc
loopne
int3
call
arpl
je
push
sub
ret
mov
mov
popa
push
movsl
cmp
fisubs
mov
ret
cmovnp
cmpsb
mov
and
imul
push
push
xchg
into
into
cpuid
test
in
fstpt
or
or
out
mov
sbb
pop
or
sbb
jno
sub
loope
mov
dec
lds
add
pop
adc
jmp
push
mov
inc
push
cmc
fcmove
inc
mov
leave
data16
jae
jo
scas
xchg
mov
fsubl
cmp
or
in
mov
xchg
jns
mull
mov
hlt
call
sbb
stos
mov
cmp
pop
cld
jno
push
lock
int3
in
mov
add
mov
daa
add
cmp
mov
das
sbb
cltd
xchg
xchg
and
ljmp
cmpsb
out
sub
lea
mov
push
pushl
movsb
sub
bound
imul
fsubp
cmp
adc
popf
adc
scas
xchg
mov
xchg
in
sub
fwait
cmp
jae
inc
add
or
gs
adc
and
ret
outsl
xorl
cmpsl
sub
std
jno
mov
gs
aam
sar
jge
mov
push
call
insb
mov
call
cmp
lahf
xor
cmp
xchg
dec
xchg
xchg
es
mov
dec
enter
decb
cmp
xor
outsb
sbb
inc
vmread
jae
mov
dec
outsl
les
orb
movsl
pop
aad
mov
xlat
fistpll
pop
xor
adc
fsubrl
xor
outsl
mov
push
mov
lea
imul
push
sbb
dec
or
imul
and
mov
and
ljmp
add
jl
pop
ds
xorb
sbb
repnz
xchg
or
inc
add
inc
pop
push
mov
xchg
in
inc
js
cvttps2pi
xor
outsb
jl
inc
rep
pop
mov
and
mov
jge
out
loopne
mov
sub
sbb
in
mov
dec
lock
mov
rorb
pop
jp
pop
aas
xchg
pop
rcl
xlat
push
loopne
aam
or
jmp
ds
sub
push
ret
enter
jbe
pop
inc
xor
aad
jne
mov
inc
lds
cwtl
add
push
mov
dec
ljmp
out
mov
adc
jle
sub
and
sub
jns
cmpl
jno
inc
ret
or
push
xor
stos
add
aas
loopew
jne
xor
jnp
ret
into
or
cmpl
jns
sbb
sbb
pusha
mov
sbb
mov
mov
inc
negl
pop
mov
push
mov
xor
es
mov
adc
bound
dec
mov
jl
jl
testb
cmp
pop
insb
cmp
call
ds
shll
mov
aad
repnz
push
or
in
cmp
and
mov
pusha
xchg
jbe
cmp
pop
in
jb
xchg
ja
sub
mov
daa
out
fisubrl
shl
xchg
imul
add
lahf
movsb
pop
sub
xchg
cmpsb
jnp
call
mov
pop
test
scas
das
into
cmpsl
jae
ret
in
hlt
sbb
ljmp
cld
fwait
fwait
pop
cmp
aam
mov
sub
and
jne
sub
push
out
mov
mov
cld
ret
fisubl
mov
pop
nop
sarb
sbb
rcrb
pop
xchg
push
sbb
rcll
xor
into
enter
test
mov
add
add
dec
push
push
add
movsb
shr
insl
std
add
ret
cmp
inc
les
mov
sbb
int
lret
mov
push
add
adc
mov
loope
cmp
pop
divb
mov
stos
sub
mov
lahf
lfs
mov
mov
scas
or
add
pop
bound
cmp
lea
push
andb
mov
in
pop
icebp
sub
mov
pop
pop
jecxz
pushl
mov
js
arpl
scas
sub
mov
mov
xlat
pop
fildll
addr16
aad
mov
mov
test
in
xchg
clc
push
mov
adc
mov
jno
mov
loopne
fldcw
pop
and
test
or
jno
test
int
mov
scas
inc
adc
stos
adc
push
sub
pusha
jle
mov
ds
dec
loope
cmpsb
out
pop
push
mov
fidivs
pushf
pop
xchg
cwtl
push
popf
jne
repnz
movsl
and
lret
xor
out
xchg
mov
aad
sub
cmp
loopne
add
dec
jns
shl
cmp
jl
sub
dec
adc
lret
outsb
shrl
adc
inc
xor
shlb
loope
sahf
xchg
push
sahf
repz
lcall
clc
dec
inc
testl
std
shll
rcll
push
push
sbb
ret
lods
lea
sbb
inc
jge
push
inc
add
push
adc
adc
aam
cmpsl
adc
aam
bound
pop
ss
outsb
add
cmp
es
mov
stos
movsl
movsb
fimuls
mov
inc
cmp
test
inc
insb
cmp
cmc
add
jmp
mov
sub
scas
mov
ffree
jle
sbb
popf
pop
push
xchg
mov
fldl
subl
in
mov
shll
and
mov
lret
jne
es
push
xchg
lcall
rcll
fmulp
js
outsl
imul
pop
pop
xor
and
testl
ja
xor
mov
or
cs
jg
mov
sbb
in
xchg
lcall
sub
and
fs
and
fcompl
adc
daa
aaa
add
cmp
pop
bound
cmp
mov
jmp
out
aaa
into
push
clc
xor
pop
push
jp
sbb
or
mov
cltd
loopne
inc
sbb
sbb
call
or
neg
xchg
aad
loop
ljmp
add
imul
dec
roll
addl
pop
add
scas
push
movsl
xor
lret
lret
mov
or
out
insb
xchg
out
int
jns
mov
nop
test
test
xor
mov
pop
iret
outsl
ljmp
cwtl
sti
adc
fwait
in
out
out
pop
pop
ss
add
iret
add
xchg
sbb
cmp
rcl
pop
lahf
clc
jbe
push
inc
xchg
and
jge
int
cmp
sahf
int3
fisttps
es
nop
mov
out
aam
js
aam
mov
in
lahf
push
addl
es
pop
push
cmpsb
movsl
std
dec
xchg
cmp
push
push
loopne
decb
mov
movsl
scas
lret
mov
mov
pushw
pop
mov
xor
movsl
test
xchg
xchg
mov
cmpb
inc
sahf
inc
adc
mov
pop
insl
arpl
bound
xchg
jno
xchg
push
sahf
data16
std
mov
mov
xor
pop
loop
cld
sbb
idiv
jle
mov
mov
xchg
cli
xorb
test
ds
mov
inc
fmull
dec
repz
sub
and
add
inc
fld
jp
shrb
push
mov
xchg
out
stos
sti
cmpsl
push
addr16
sub
or
pop
in
das
test
mov
stc
add
je
data16
lods
jo
dec
idiv
lock
test
fmuls
inc
ficompl
icebp
sub
mov
enter
pop
inc
jnp
insb
test
imul
sbb
and
xchg
pop
xor
sarb
xlat
push
int
data16
xorl
jns
fistpl
pop
mov
lods
xor
pop
into
into
stc
or
pop
mov
hlt
ljmp
sar
lods
inc
xor
push
mov
ficoml
sub
scas
pop
loop,pt
xchg
jbe
mov
jns
lahf
test
out
out
mov
inc
sbb
iret
loope
add
adc
aaa
not
cmp
jb
and
mov
push
xor
pop
xchg
lahf
jp
cs
inc
fildl
inc
sbb
aam
fsubrp
sub
into
repnz
popa
or
aam
push
mov
adc
jns
jle
inc
lods
push
fidivl
insl
mov
lock
jge
lcall
enter
lods
mov
iret
mov
stos
fcmovnb
mov
jne,pn
xor
xchg
xchg
jmp
xchg
add
fs
adc
fwait
rorb
add
push
fiadds
lds
mov
arpl
mov
movsl
lret
sub
dec
fdivrs
cmp
pop
out
cmpb
jg
adc
push
jo
and
and
mov
dec
ds
lret
stos
mov
dec
add
sbb
mov
mov
mov
pop
mov
out
popa
lods
mov
push
fs
sti
addr16
push
push
mov
xor
pop
xchg
adc
popl
arpl
into
cmpsb
mov
dec
xchg
lret
cltd
hlt
cmp
jge
sarb
inc
ret
pop
jle
pusha
xor
test
daa
push
sti
inc
mov
fcmovnbe
inc
sbb
push
cmc
stc
fcmovu
cmp
jne
cmp
add
push
or
add
lods
jge
ds
jmp
jle
lds
lret
xor
mov
push
and
out
mov
pop
cmp
jnp
dec
cwtl
mov
repz
dec
adc
ret
ja
rclb
push
xor
icebp
daa
ret
mov
inc
imul
aaa
test
fidivrs
mov
mov
inc
add
mov
jae
sbbb
jmp
ret
adc
call
cmpl
push
xchg
fs
call
mov
inc
push
test
dec
out
push
rcrl
mov
repz
dec
mov
or
ljmp
repnz
in
adc
adc
mov
fsubr
jmp
pop
add
lock
repnz
mov
xchg
mov
push
clc
movsb
cmc
iret
jno
push
inc
push
mov
icebp
stc
jnp
adc
jb
setbe
lret
lahf
stc
inc
movsl
popa
outsl
mov
jnp
jns
dec
push
int
cmp
push
xchg
aam
sbbb
les
jno
adc
int3
int
dec
and
and
adc
adc
mov
xorb
cmp
sub
mov
aad
fcomip
push
add
or
mov
outsl
insl
cld
xor
aad
jo
pop
out
daa
mov
aam
pop
ret
insb
push
jmp
ds
xchg
mov
adc
and
sar
je
jmp
outsb
inc
mov
xchg
icebp
sbb
mov
cli
and
xor
jl
pop
pop
pop
popa
push
outsl
ficoms
cli
jge
push
psubq
mov
xlat
mov
xchg
lods
movsl
inc
and
jmp
in
mov
mov
jmp
pop
mov
lods
xorb
test
mov
mov
or
mov
add
mov
push
xchg
in
dec
iret
mov
fwait
int3
cmp
pusha
jmp
arpl
cmp
test
stos
enter
push
pop
enter
test
xor
sbbl
lea
pop
mov
aad
std
popa
scas
in
sbbb
nop
pop
or
std
outsb
xchg
jecxz
arpl
stos
sbb
mov
test
add
adc
iret
jae
sarb
ror
loope
rorb
adc
mov
mov
jmp
repnz
mov
imul
gs
cmp
xchg
pop
jmp
xor
scas
stos
sbb
into
jl
inc
je
int3
or
add
xor
xchg
push
xor
pop
cmp
mov
push
adc
sbb
xchg
jnp
jge
ljmp
fisubl
cli
in
inc
jae
sub
hlt
mov
xor
dec
jb
movsb
sub
aam
rcrb
sbb
sbb
imul
loop
bound
fucom
mov
push
call
mov
outsl
inc
pop
xor
jmp
cs
fstps
mov
mov
push
xchg
out
cltd
mov
inc
sbb
cmc
pushf
inc
js
mov
inc
mov
aas
out
sub
cmp
sub
sbb
mov
movl
dec
es
sbb
cmc
in
pop
leave
imul
sbb
nop
addr16
fbstp
dec
outsl
int
pop
outsb
mov
pop
pop
push
xchg
pop
mov
stos
and
shufps
or
in
sti
test
pop
pop
bound
lret
mov
ds
aas
push
xchg
inc
int
sti
mov
push
cmp
inc
xor
mov
ret
mov
xor
lds
mov
push
or
fldt
jp
jb
push
in
add
repz
pop
dec
stos
cwtl
mov
enter
loop
dec
lret
mov
inc
add
mov
pop
imulb
dec
mov
add
inc
push
or
rcrl
outsl
mov
and
mov
adc
cmp
xchg
mov
and
dec
push
faddp
mov
fucom
leave
leave
push
mov
in
movsb
int3
add
adc
mov
loope
sti
dec
mov
cld
xchg
outsl
test
xor
out
sbbb
jae
notb
scas
wrmsr
xor
or
mov
inc
fucom
gs
push
ret
icebp
mov
je
dec
and
mov
int
jns
xchg
and
stc
pop
sub
mov
push
ja
mov
fs
repz
dec
test
stos
out
push
pop
icebp
js
cmp
mov
rol
jg
imulb
insl
xor
pop
or
jb
add
xchg
pop
out
into
pop
xor
shrb
mov
fsubr
aaa
push
sbb
mov
and
je
aad
and
jmp
inc
and
stc
enter
ljmp
cmpl
pop
in
popf
pop
cmp
adc
sub
cmp
mov
push
pop
dec
push
cltd
push
cmp
outsl
pop
or
sbbl
mov
loop
loope
mov
mov
stos
mov
mov
icebp
add
ljmp
lods
data16
xorl
jno
push
push
rcrb
enter
cmp
rolb
in
int3
push
hlt
lcall
push
iret
push
lods
leave
xchg
arpl
mov
subb
or
lcall
daa
popa
fisubl
sbb
sbb
out
mov
push
and
leave
pop
dec
ret
cli
mull
lret
fwait
je
inc
adc
call
push
data16
cmpsl
mov
dec
xchg
pop
ret
mov
clc
mov
pusha
stos
pop
jge
scas
xor
out
sarb
cmpsb
cmp
mov
add
mov
out
es
imul
cld
mov
xor
addl
sub
and
jl
mov
lcall
ret
shll
into
adc
adc
cltd
pop
sarl
in
pop
int3
imul
mov
icebp
insl
stos
rcpps
mov
cmpsb
cmc
sbb
dec
cld
popf
or
cmp
push
push
mov
xorb
lret
imul
mov
dec
mov
in
jecxz
and
ss
mov
mov
jns
js
xor
daa
pop
aam
adc
fsub
push
nop
pop
or
or
fwait
sbb
xor
lret
mov
jg
imull
pop
cmp
push
push
mov
cmp
xor
pop
jnp
push
jl
jnp
outsl
movsb
jmp
movsl
adc
pop
lahf
and
jmp
cld
iret
mov
pop
dec
mov
fnsave
xor
imul
imul
adc
repnz
fstl
push
mov
aaa
ja
push
sub
sbb
mov
rcr
loopne
loope
adc
enter
mov
movsl
pop
cmp
xor
into
pop
rorl
int
xchg
les
enter
push
dec
int3
inc
mov
imul
les
aaa
rcrb
cmp
mov
push
fdivs
mov
mov
idivb
sbb
xchg
mov
aas
xor
add
push
clc
dec
jnp
fcoml
mov
stos
arpl
shrb
leave
jb
sbb
mov
xlat
bound
inc
jmp
and
vpaddsb
jnp
push
popf
sub
imul
mov
push
adc
mov
sub
xor
fldl2t
mov
testl
test
in
sbb
imul
xchg
test
sahf
cmp
lock
sbb
or
xchg
icebp
mov
outsb
and
or
dec
js
jo
int
pusha
sub
xchg
sahf
out
add
ljmp
xor
adc
nop
sub
sub
xlat
push
iret
and
shl
insb
outsl
pop
mov
jle
sbb
xor
arpl
push
sub
lahf
sub
repnz
imul
mov
jb
jp
jmp
xor
and
sbb
or
jo
push
jmp
lahf
or
dec
or
int
std
test
adc
or
mov
out
stos
mov
push
and
pop
adc
sub
xor
imul
das
in
pusha
pop
neg
and
xchg
cmp
jnp
enter
in
les
loopne,pn
subl
push
imul
outsb
bound
mov
in
stos
push
pop
cltd
or
mov
xchg
bound
ss
dec
sahf
rolb
push
arpl
push
cmp
mov
inc
scas
xor
divl
jmp
lcall
add
movsl
and
repz
add
cli
fldt
mov
sbb
insb
push
mov
dec
repnz
std
sub
inc
cli
push
and
sbb
mov
aad
or
inc
cmpsl
sub
or
jle
mov
and
outsl
mov
test
inc
fldl
sub
sahf
pop
xchg
dec
or
aad
or
mov
push
scas
jle
lods
lods
aam
aad
dec
add
xor
mov
lock
pop
icebp
push
nop
jb
add
clc
adc
mov
lods
int3
movsl
cmp
lods
int3
or
sub
cli
mov
adc
jmp
sub
leave
addr16
inc
mov
ret
dec
test
stos
xorb
test
pop
sbb
jg,pt
mov
jg
in
mov
xchg
dec
aaa
cli
out
negb
jb
jle
pop
mov
call
xor
dec
inc
test
enter
test
fcmovne
ret
shl
mov
push
inc
xor
fucomp
adc
iret
aas
shll
push
mov
cltd
in
xchg
lret
aad
jg
jbe
xchg
xchg
sub
mov
lods
popa
dec
cmp
lret
out
shll
xor
in
shlb
jae
lret
addr16
shlb
mov
adc
xorl
rcrb
and
push
je
test
push
fs
in
adc
sub
lahf
iret
icebp
sbb
insb
adc
push
xchg
sbb
xor
or
cmp
fsubl
cltd
pop
xorl
repnz
push
cmp
add
out
jp
cmpl
lock
sbb
push
rolb
push
les
sub
xor
lea
sbb
dec
in
shll
call
insb
in
cmpb
inc
sahf
repnz
mov
pop
jmp
adc
mov
movsb
aas
sub
mov
lds
stos
imul
nop
sub
lds
out
aas
insb
lds
sbb
mov
daa
jg
cmp
sbb
add
xchg
loop
lds
pop
aad
gs
cli
fdivrs
lea
jmp
iret
jecxz
repz
push
into
jmp
out
out
lret
or
pop
mov
adc
movsb
icebp
lods
mov
das
neg
xchg
push
mov
ret
insl
cmp
stos
ja
lock
repz
sub
mov
mov
icebp
fildll
cmp
pop
fs
jbe
sbbl
adc
mov
jb
and
xor
pop
pop
aad
scas
cmp
or
sahf
pop
mov
mov
pop
or
adc
jge
add
mov
xchg
sbb
testb
push
mov
popa
int
mov
aad
jo
roll
stos
push
punpcklwd
mov
mov
push
mov
pop
cld
lea
dec
inc
mov
add
rcrb
push
adc
mov
imul
aam
pop
popa
lret
fstpt
sbb
mov
pop
push
popa
test
xor
push
lock
je
mov
add
stc
jecxz
xchg
mov
fcoml
fs
pop
pop
outsl
xlat
mov
fwait
inc
xchg
push
push
cmpsl
push
dec
push
ret
pop
mov
loop
adc
ss
cmpsb
mov
lahf
out
jb
cmc
ljmp
mov
mov
inc
scas
pop
and
and
cld
xchg
stc
jp
fdiv
sahf
scas
test
xor
xor
outsl
imul
or
push
repnz
adc
inc
pop
sti
popl
pusha
jg
jmp
aad
rcl
gs
and
fstl
outsb
pop
cmp
in
mov
adc
jmp
cmpsb
out
incl
js
fisubs
inc
pop
insl
cltd
and
scas
fists
inc
fdivrl
xchg
dec
ret
xor
test
sub
xacquire
mov
pop
fmulp
mov
cmp
pop
sbb
xchg
enter
lahf
or
add
pop
test
ds
test
cs
adc
stos
mov
pop
jne
xor
hlt
dec
jge
punpckhbw
jnp
add
pop
cmp
sub
push
pop
icebp
adc
ds
lcall
mov
inc
fiadds
xchg
lahf
faddl
xor
mov
sbb
push
lahf
arpl
push
faddp
or
push
cmp
pushf
in
mov
insl
sbb
add
inc
cld
test
lea
out
mov
inc
insb
jns
and
and
sbb
push
lods
add
xchg
insl
lea
mov
addr16
inc
subb
jg
aas
loope
sub
testb
add
dec
mov
in
test
adc
mov
xor
fists
cld
int
push
fs
sub
rcrl
sub
jmp
xchg
das
inc
test
icebp
int3
incl
dec
mov
push
clc
mov
out
jle
dec
inc
mov
fadd
fs
pop
jle
push
jp
test
adc
jno
mov
ret
mov
or
push
loopne
fs
scas
sbb
dec
pop
xchg
inc
pop
cmp
cmp
outsb
sbb
cmp
loope,pn
pop
aam
inc
xorl
jb
insb
mov
in
sbbl
test
js
out
sbb
mov
push
aaa
int
push
call
test
xlat
addr16
push
hlt
pop
iret
bound
aad
testb
inc
jo
icebp
inc
mov
inc
cmovae
sbb
mov
push
data16
aas
xchg
mov
xor
aaa
mov
cmpsb
lds
push
mov
outsl
jge
sbb
jae
ret
xchg
mov
fistps
xchg
adc
icebp
sbb
jne
in
add
and
add
mov
xlat
out
out
sbb
xchg
shll
push
adc
inc
ds
lcall
aas
idivl
pop
sahf
aad
repnz
sbb
cmp
sbb
rcll
cltd
shlb
fsubrs
xchg
pop
into
inc
adc
sbb
loop
jmp
test
scas
int3
jmp
mov
fnstcw
mov
inc
enter
leave
jbe
jnp
mov
dec
and
hlt
mov
mov
pushf
pop
mov
fwait
jp
ljmp
imul
xlat
and
cli
and
mov
pop
dec
pop
in
or
in
rcll
aam
into
out
in
ss
dec
jb
mov
ret
xor
out
xchg
lea
fstpl
lea
sub
sub
xchg
add
repz
arpl
sti
xor
xor
push
mov
ret
xchg
push
imul
jge
push
out
mov
sbb
sbb
aas
inc
mov
mov
xchg
das
hlt
outsl
shlb
or
xchg
mov
dec
gs
xorl
les
adc
in
push
aam
cli
stos
popf
xchg
in
dec
xor
in
pop
shlb
lret
push
inc
inc
or
xor
mov
mov
ss
call
jge
push
out
jle
or
xor
rcrl
inc
xor
jmp
lds
movsb
test
adc
xchg
jp
inc
daa
xchg
pop
ljmp
idivl
sahf
sahf
mov
sub
push
mov
xchg
ljmp
cli
mov
pop
cmp
pop
mov
mov
jae
push
mov
sbb
dec
lods
sbb
lea
xchg
lahf
add
stos
ds
xorl
repnz
xlat
sahf
add
cs
or
push
cmpb
mov
fwait
out
sbb
sub
fcompl
int
cmpsl
fmuls
jecxz
xor
cmp
xor
jno
int
xchg
test
insb
scas
cmc
mov
jmp
jo
add
vdivps
jbe
cli
mov
cmpsl
pop
fimuls
cli
cmp
call
inc
pop
lods
movsb
nop
shrl
jae
popa
jmp
jmp
xor
and
sub
ljmp
enter
cmp
xchg
sahf
xchg
lds
xlat
mov
call
repnz
pop
fcom
stc
xlat
xchg
dec
js
push
xchg
mov
fisubl
or
stos
gs
lret
int3
cmp
repz
pop
fwait
ja
pop
popf
test
mov
push
push
je
lods
dec
shll
in
mov
daa
inc
leave
lret
inc
aad
nop
les
loop
add
or
mov
out
pop
sbb
mov
jp
outsl
add
movsb
mov
adc
jge
jmp
pop
test
sub
js
mov
sub
out
and
or
popf
xchg
jecxz
test
sub
mov
mov
adc
push
daa
cmp
dec
pop
jnp
sahf
sub
sub
mov
and
cwtl
adc
jae
push
mov
lcall
or
cli
adc
sub
out
mov
outsl
ret
mov
add
outsb
mov
stos
inc
lea
fcoml
mov
aas
in
and
inc
lea
into
mov
or
and
adc
shll
lret
sbb
cmpb
outsl
mov
add
aam
mov
sub
movsb
inc
xchg
incb
pop
cmpsb
mov
mov
fidivl
pop
cmp
inc
lea
loopne
mov
dec
mov
ret
gs
in
mov
cwtl
inc
sbb
cmp
push
cmp
daa
mov
add
jmp
jns
je
loopne
jno
aaa
loope
sub
xor
jmp
adc
les
outsl
xchg
sub
or
or
mov
hlt
jle
or
xchg
pop
leave
scas
ret
in
enter
and
in
jle
jecxz
pop
aam
test
jge
sbb
xchg
fstpt
pop
popf
out
je
jo
jns
sti
push
es
in
cli
push
lcall
mov
ds
mov
jo
sti
pop
out
aad
adc
pushf
adc
mov
fnstcw
jno
mov
fucomip
hlt
mov
pushf
xor
jno
lret
mov
insb
scas
lret
cmp
dec
mov
mov
pop
jg
jb
pop
add
les
aaa
sub
mov
fsubp
or
adc
test
sbb
rol
popf
xor
and
or
mov
lret
out
adc
aam
sbb
rcrl
outsb
sti
shlb
push
xor
std
xor
mov
test
cmc
das
xlat
scas
aad
mov
jge
movsb
add
pop
into
xor
jno
subb
xchg
add
mov
cmp
pop
cwtl
out
das
mov
jmp
andb
inc
cltd
adc
mov
inc
movsl
lcall
cmp
das
and
pop
fisttps
jmp
shrb
aad
cwtl
mov
pop
cmp
sbbb
dec
filds
xchg
int
aas
dec
inc
shrl
ljmp
je
in
add
cmp
cmp
mov
sti
scas
sahf
inc
mov
sub
dec
add
mov
movsb
aas
dec
or
xchg
test
and
cld
dec
lods
sub
in
inc
stos
xor
sub
push
and
inc
test
sbb
scas
pop
add
ja
insl
mov
pusha
inc
lock
cmp
sbb
leave
sub
cmp
into
je
in
or
push
lret
pop
negl
sbb
add
test
cmpsl
lods
imul
iret
rclb
mov
insl
ds
mov
sub
mov
cmpsb
push
mov
xchg
fimuls
xor
push
and
mov
xor
push
pusha
xchg
lss
mov
dec
popf
lods
cmp
lret
aaa
ljmp
sbb
stc
loopne
divb
xchg
rcll
push
lret
pop
mov
subb
lock
xchg
or
sub
adc
push
and
jb
inc
cltd
dec
push
leave
pusha
jbe
mov
add
stos
pop
stos
dec
cmp
add
stos
adcl
jg
scas
pushf
idivl
mov
xchg
xchg
loopne
leave
mov
xor
dec
pop
xchg
sbb
into
push
mov
xchg
fildll
mov
lea
sub
cmpsb
pop
mov
mov
xchg
cmp
xchg
add
push
mov
loope
xor
popa
xchg
shl
mov
rcll
test
cmp
pop
sarl
and
adc
loop
movsb
stos
lods
push
fwait
test
adc
ljmp
xchg
imul
xor
adc
js
cs
dec
sbb
xlat
push
adc
lcall
xor
insl
sub
mov
test
mov
ds
push
inc
shlb
neg
mov
out
fidivs
faddl
and
pop
adc
push
mov
gs
call
testb
sahf
cwtl
push
imul
mov
inc
notl
jbe
and
sbb
arpl
jle
dec
cmpb
nop
loop
jne
insl
or
and
sar
dec
xlat
mov
fs
adc
adc
sub
xchg
jo
cmp
lds
jmp
popf
dec
push
and
sbb
mov
popf
dec
sub
lahf
rclb
popa
inc
loop
cmp
ret
in
into
rclb
out
sub
jecxz
jmp
add
mov
xchg
fld
mov
mov
mov
cmp
push
inc
ret
cltd
rorb
ds
xor
gs
mov
clc
inc
inc
shlb
cmpsl
in
push
inc
in
hlt
ljmp
add
out
xor
push
jmp
imul
fisttps
dec
mov
loope
mov
lea
sbb
inc
xchg
ret
iret
ficoml
pop
push
push
rcr
mov
mov
mov
test
sbb
jmp
hlt
sub
add
and
or
push
push
mov
jle
fistl
inc
incb
movsl
ror
popa
js
cmp
sbb
fisubs
lcall
out
sbb
pop
inc
aam
sbb
xchg
pop
loopne
icebp
mov
sub
mov
adc
or
fsubs
cmpsl
daa
mov
loope
gs
popa
dec
int3
jle
add
xor
push
and
cld
add
lret
imul
jp
stos
jae
fistpll
pop
cld
jecxz
ss
clc
and
push
mov
popf
das
mov
gs
xor
aam
mov
in
pop
xchg
push
add
es
mov
sahf
dec
jns
pop
stc
push
aaa
and
xlat
loopne
out
inc
aam
int
lcall
pop
clc
pop
inc
push
punpckldq
dec
pop
or
dec
add
jno
adc
out
cwtl
mov
xor
pop
lret
out
mov
push
dec
and
sbb
imul
rcll
ret
nop
mov
mov
mov
or
add
xor
sbb
push
pop
loop
iret
cmp
mov
xor
mov
dec
xchg
xchg
sub
adc
mov
imul
imul
lods
push
push
hlt
movsl
xchg
sti
cmp
jl
xchg
pop
mov
jg
rclb
addl
fwait
inc
mov
and
ss
sbb
ss
push
push
pop
inc
mov
mov
sbb
adc
sub
cmpsb
adc
mov
sub
push
loop
cmp
pop
out
inc
mov
xor
js
sar
jge
jmp
movsl
ja
lea
cld
lods
xchg
les
sub
out
cld
pop
jp
push
jnp
sbb
sti
lret
push
adc
daa
out
or
xor
aam
fbstp
xlat
hlt
mov
sub
out
bnd
and
ret
mov
sbb
adc
pop
shll
mov
aad
hlt
mov
jo
inc
dec
cs
cmp
repnz
cmp
cs
push
xorl
push
ja
imul
xlat
addr16
xor
sbb
aam
xchg
xchg
inc
sub
add
out
mov
pop
dec
add
adc
mov
adc
and
adc
ds
dec
arpl
and
pop
jge
fwait
sub
add
sub
pop
mov
pusha
out
mov
pusha
shlb
ficoms
sub
sti
mov
mov
sbb
cmp
aas
inc
jne
in
dec
xchg
insl
xchg
out
out
mov
flds
mov
out
dec
call
cmp
loop
out
add
push
add
insb
add
cmp
idivb
andb
jne
fistpll
cmpsl
rcr
and
sbb
lcall
addr16
dec
and
pushf
inc
imul
or
mov
mov
cmpb
leave
xchg
push
fistpl
shll
ret
sub
jle
sub
add
int3
insl
jmp
pop
pop
call
adc
fcomps
add
cmp
sub
ja
repnz
mov
jno
jno
dec
out
repnz
cmpsl
lds
push
jmp
mov
test
dec
jno
jbe
cmp
sti
xchg
ljmp
jnp
into
int
cmpsb
adc
mov
pop
cmp
nop
imul
mov
xchg
fidivrl
xchg
sub
leave
or
mov
inc
leave
cmp
and
stos
mov
jbe
lret
push
pop
loop
push
bound
fiadds
dec
xorl
push
jnp
jp,pt
sbb
lahf
adc
popf
adc
shll
ficomps
fdivrl
movsb
push
sub
and
stos
or
push
push
jecxz
ja
jl
dec
inc
inc
dec
mov
pop
xchg
mov
shrl
mov
mov
sub
pop
insl
mov
xchg
sub
push
cld
add
mov
or
sub
push
add
aad
adc
inc
mov
je
sarl
ret
sub
or
pop
sti
jnp
in
xchg
cld
jns
out
add
mov
aas
jmp
dec
xchg
ficoms
lret
data16
xor
cltd
sbb
inc
mov
scas
sub
push
rorl
fs
hlt
shlb
sbb
fwait
out
xchg
loop
pusha
or
outsl
mov
lcall
mov
mul
jae
mov
and
dec
push
bound
inc
lods
lods
dec
repz
popa
lahf
daa
ret
cltd
addr16
outsl
lret
add
adc
jmp
pusha
xlat
in
sbb
mov
dec
aas
cltd
cmp
aam
fisubl
rclb
inc
mov
fs
or
stos
lock
cmp
int
sarl
imul
fcomps
jne
addl
cs
mov
xchg
pusha
jl
inc
popf
sbb
and
imull
lods
shll
cld
shll
cmc
ficompl
out
xchg
fisubrs
adc
or
lret
cltd
aaa
pop
pusha
shll
negl
pop
test
aam
jno
xchg
adc
pop
addb
sub
fistps
clc
mov
jmp
and
shlb
in
arpl
pusha
add
fxch
fisubl
cmp
rol
and
sbb
cmp
mov
imul
test
mov
fs
mov
stos
pop
cmp
in
push
fdivrl
dec
ss
call
rolb
rclb
jp
adc
sbb
aad
inc
pop
mov
in
pop
sbb
fwait
mov
jo
jmp
test
add
cmp
cli
cmc
push
test
subl
ret
rcll
cltd
jne
enter
xchg
jb
les
imul
pop
cmp
dec
xchg
lahf
insl
xchg
adc
or
aaa
lock
mov
adcb
mov
jbe
pop
fistpll
loop
fsts
xor
fistpll
fldenv
xchg
push
andb
fildl
arpl
jecxz
int
repnz
cmp
push
scas
cwtl
mov
pop
add
and
mov
and
push
and
cmc
sub
push
mov
aam
xchg
les
sub
push
push
fsub
mov
xchg
push
pmulhuw
push
mov
mov
sub
clc
pop
clc
mov
inc
mov
mov
dec
sub
test
imul
adc
inc
scas
or
stos
mov
sub
fs
cmp
adc
inc
mov
js
loope
stos
adcl
mov
int3
jg
loop
pop
out
rcll
push
jmp
adc
jg
fisubrl
mov
mov
je
adc
sub
xor
rorl
insb
movsb
es
ss
dec
push
gs
pop
mov
mov
scas
mov
icebp
lcall
push
pusha
mov
jl
jmp
lahf
sub
push
inc
jb
es
mov
jg
cmp
inc
cmp
or
add
inc
xchg
scas
std
mov
push
push
in
pop
outsb
es
pop
push
mov
movsb
and
insl
pop
mov
cs
cmp
or
mov
stos
adc
pusha
mov
nop
sub
call
cmpsl
sahf
push
mov
fwait
stc
and
shll
push
dec
clc
incb
rclb
fiaddl
std
and
pop
mov
loopne
js
rclb
lods
cmp
hlt
dec
pusha
pop
mov
mov
das
mov
mov
les
int3
jp
add
pop
xchg
fildl
cli
and
rcll
or
jle
mov
addr16
jae
and
mov
test
pop
push
ss
hlt
in
pop
lods
fnstenv
nop
in
pop
inc
push
xchg
movsb
cmp
js
mov
sub
scas
dec
in
rorl
pop
sbb
stos
xorb
xchg
push
enter
jb
mov
push
arpl
mov
jnp
or
icebp
fucomp
push
cmp
mov
loop
cmc
into
pop
jno
shll
stos
enter
leave
xor
fsubl
xchg
mov
or
enter
mov
pop
mov
pop
fwait
ds
cld
bound
das
mov
rcrl
cmp
stos
xor
ja
mov
movsb
stc
fldenv
sbb
adc
in
or
cmp
in
movsl
inc
mov
cmpsb
in
insb
mov
add
lds
push
cmp
shl
and
sbb
mov
jmp
ret
pop
subb
lcall
inc
mov
push
imul
int
in
pop
sbb
sbb
mov
mov
push
push
int
sub
or
lea
cli
mov
lahf
lods
data16
shl
sbb
pusha
and
fdivrs
mov
xorl
xor
fnsave
jbe
xor
jle
mov
cltd
sub
xchg
movsl
jns
inc
mov
xor
cmpsl
hlt
iret
inc
nop
fwait
xlat
add
insb
and
lcall
xchg
ret
repz
insb
popa
mov
hlt
fstl
cmpsl
pop
and
test
pop
jmp
or
push
push
mov
mov
cmp
rcl
cld
mov
cmp
in
xchg
or
xor
sbb
icebp
ret
pop
mov
test
bound
cltd
bound
push
inc
xor
cld
js
outsl
xor
mov
or
jne
shl
xor
xchg
cmpsb
test
push
push
cltd
fstpl
mov
push
xchg
xchg
ss
dec
int3
jnp
icebp
out
daa
push
pushf
sarl
addr16
int
jbe
mov
aam
sbbl
out
or
sbb
push
xchg
lods
jbe
adc
gs
mov
dec
repnz
pop
clc
idivl
mov
repnz
scas
repnz
pop
mov
cmp
nop
jmp
leave
push
mov
and
xlat
pop
and
mov
jmp
pop
pop
cmpsl
mov
mov
je
xchg
andl
stos
mov
fadds
stos
mov
es
cltd
imul
stc
push
adc
nop
ljmp
xchg
pushf
fmull
cwtl
xor
and
in
xchg
push
daa
into
nop
or
lock
pushf
and
push
fcom
mov
js
or
mov
pop
in
adcl
add
aam
cltd
dec
pop
push
ss
shll
or
sub
mov
das
jo
xchg
fsub
shlb
mov
push
pop
lret
ja
push
fwait
imul
push
aam
lods
insl
pushf
mov
int3
scas
lock
push
bound
bound
outsb
std
jg
and
add
fwait
and
popa
xchg
pop
lock
ret
aaa
adc
dec
jb
outsb
xor
xchg
nop
and
sti
insb
jnp
mov
sarl
gs
inc
test
xor
dec
aaa
cmp
add
jmp
ds
cld
sbb
sub
not
aas
insl
inc
jp
cli
jge
pop
and
lods
jo
lea
mov
inc
addr16
cmp
push
out
cmp
cmpsl
int3
mov
mov
pushf
decl
out
cli
outsb
or
cmp
aaa
push
sarl
push
cld
jbe
xchg
cmc
adc
leave
fisubs
lahf
ds
mov
cltd
cmp
sbb
les
lods
imul
push
inc
push
push
inc
addl
adc
push
and
jg
lahf
lods
sbb
adc
xor
pop
cmpsl
dec
mov
mov
mulb
pop
dec
pop
sbb
mov
in
xlat
xor
mov
lock
sbb
incb
ss
les
ljmp
dec
mov
dec
push
ficoml
popa
ljmp
bound
enter
in
fmuls
scas
sbb
sub
imull
movsb
inc
sti
xchg
push
imul
clc
scas
mov
inc
call
jbe
push
sbbb
xchg
icebp
cmp
lcall
push
repz
push
jae
mov
add
and
and
sbb
and
repz
cmp
inc
push
sub
stc
movsb
mov
arpl
movl
dec
xor
xor
repnz
fwait
inc
xchg
daa
mov
sbb
scas
jne
cmpsl
mov
xchg
out
or
push
xchg
out
call
mov
sub
lret
lock
sbb
aaa
int3
lds
mov
mov
aas
jmp
popa
aam
fiadds
mov
xchg
into
aaa
test
fmul
xor
jns
cmp
mov
jno
popf
out
inc
aad
push
mull
ret
xchg
in
push
or
or
and
scas
test
mov
test
and
xchg
clc
sub
adc
add
jbe
mov
nop
jmp
js
insb
jne
pop
test
shr
add
adcb
xor
fcompl
je
leave
jae
sub
sub
cwtl
ja
sti
or
fmulp
inc
movsl
mov
scas
aad
push
pop
pop
sbb
test
pop
or
xchg
in
inc
jbe
flds
enter
mov
stc
lea
aas
add
iret
pop
popa
insl
call
mov
xlat
mov
cmp
lods
jne
cmpsl
call
imul
negb
add
cltd
int3
cs
adc
xor
fsubs
xchg
sarb
sub
push
scas
fidivs
cmpsl
sub
aas
cmpsl
xchg
mov
cmpb
subb
fstl
xchg
test
ret
fndisi(8087
sbb
jp
jns
adc
sbb
and
and
and
hlt
rclb
test
outsl
mov
mov
stc
pop
sbb
xchg
out
push
out
sub
sub
pop
mov
out
dec
mov
mov
aas
add
xor
hlt
cs
loope
ret
stc
js
into
pop
mov
mov
pop
movsb
mov
sub
jmp
dec
sub
into
pop
cltd
ret
gs
ss
jo
add
sbb
aas
inc
mov
inc
dec
orb
ret
lds
je
shll
pop
mov
daa
xchg
sub
test
pop
adc
mov
pop
leave
fs
stos
outsb
cld
add
xor
stc
cmc
cmpsl
dec
jp
and
jp
fwait
sbbb
fdivr
es
or
int
inc
mov
stos
mov
jle
std
leave
lcall
subl
adc
xor
adc
push
dec
and
out
xor
ljmp
mov
dec
repnz
sub
scas
xchg
iret
clc
in
rcl
push
icebp
xchg
mov
cmp
mov
arpl
add
sti
enter
lret
push
adc
rol
test
rcll
insb
add
leave
and
add
test
ss
outsb
cmpsb
sub
ficomps
mov
adc
xor
dec
in
je
cmp
sahf
sbbb
push
push
adcl
mov
mov
fmull
xchg
bound
sbb
nop
dec
adc
in
adc
jne
xchg
rclb
adc
sbb
xchg
adc
xor
aam
jle
and
out
sub
push
subl
xor
add
push
in
push
mov
sbb
fsubs
ja
pop
das
add
xor
popf
repz
test
jge
mov
ficoms
cmp
jbe
mov
dec
cmpsb
xchg
mov
clc
mov
sub
rorb
push
in
popf
cmp
lods
addr16
cs
out
push
mov
mov
inc
arpl
mov
jns
movsl
pop
push
adc
sub
inc
sub
data16
bound
mov
in
fisttpll
lret
rorl
adc
xor
jne
out
fbld
xchg
movsl
outsb
jl
inc
push
ret
pop
mov
sbb
pop
jnp
mov
test
mov
cli
icebp
popa
push
cmp
mov
test
xor
pop
mov
int3
rorl
xchg
js
cltd
pop
call
test
jecxz
stos
sbb
out
mov
xchg
in
cmp
out
leave
xor
in
aaa
sub
and
push
cmp
mov
jb
push
lahf
push
int3
outsl
or
adc
test
loopne
aam
xchg
sub
mov
dec
pusha
int3
aaa
in
xchg
pop
js
xchg
xor
pop
ret
sub
jecxz
icebp
or
pop
cmp
in
rcll
sbb
inc
outsl
cwtl
or
sub
leave
xchg
jo
fsubrl
out
stos
cmc
mov
mov
jns
fistps
pushl
aaa
dec
inc
jl
in
and
mov
loopne
mov
mov
rcll
lea
xchg
insl
mov
imul
aaa
sarl
xchg
ja
popf
mov
cmc
pop
mov
push
xor
cmp
jne
insl
adc
push
mov
in
xor
cs
mov
push
jnp
fs
push
push
or
leave
popa
mov
ja
hlt
push
pop
mov
cmpsb
movsb
sahf
fdivrs
cltd
mov
mov
inc
push
hlt
fwait
mov
test
xor
inc
out
push
add
sub
mov
or
jno
pop
orw
shrl
sbb
pusha
cmp
sub
sub
push
xchg
push
enter
add
cmp
repz
add
jb
cmp
xor
xchg
andl
das
cmc
daa
or
shl
pop
fldenv
shll
push
push
subl
popf
iret
jae
add
fwait
inc
enter
lahf
movsb
clc
nop
inc
cmc
sbb
stos
andl
push
xchg
repnz
in
pop
adc
jg
ud1
pop
lds
mov
dec
adc
rclb
sub
cs
mov
cltd
mov
cmp
add
cmp
les
push
addr16
fidivl
mov
outsl
jle
or
lahf
fisubrl
mov
loope
aam
jno
mov
inc
inc
pop
lods
add
inc
in
xorl
mov
icebp
lods
dec
adc
in
cmp
mov
adc
cltd
inc
test
cld
lock
pop
loop
xchg
push
sbb
sub
mov
leave
cs
icebp
mov
dec
adc
ss
int3
pop
jae
xchg
mov
outsb
dec
push
cmc
mov
shll
cmp
jge
fsubl
mov
ss
lahf
cmp
rorb
rorl
jl
inc
inc
ds
mov
ret
addl
lahf
mov
jge
sbb
pop
add
mov
cmp
stos
fwait
xchg
icebp
mov
out
aad
mov
out
lret
pop
add
or
insl
adc
mov
enter
shll
lea
add
jp
push
in
fildl
fs
mov
and
aad
mov
aaa
pop
adc
movsl
mov
xchg
fistl
les
cli
lcall
int3
out
scas
adc
popa
fs
jb
xor
rol
cmp
adc
fs
xchg
daa
sub
adc
xchg
or
repnz
jl
cld
inc
jb
pusha
xor
push
fdivs
daa
cmpsb
and
loop
adc
int3
push
cmp
cmp
out
pop
dec
add
xchg
insb
jecxz
mov
std
xorl
stc
scas
mov
sbb
xor
mov
xchg
fimull
add
and
pop
dec
daa
inc
aas
lea
mov
fs
pop
maxps
pop
fwait
sahf
push
test
das
mov
hlt
sub
sub
out
lods
arpl
std
dec
inc
mov
hlt
cmp
mov
cmp
mov
jle
in
ds
dec
lods
lods
scas
loope
push
cmp
add
imul
cwtl
out
mov
xchg
sbb
pop
das
fucomi
pop
sarb
push
push
sub
pop
sbb
push
dec
dec
out
jns
and
nop
scas
sbb
out
and
jne
xchg
add
imul
jnp
fs
sub
sub
add
adc
dec
mov
inc
pop
and
movsb
add
adc
cltd
popaw
das
jge
xchg
stc
test
popa
xchg
dec
add
out
pop
fwait
sub
imul
enter
je
mov
add
cmc
add
les
fsubr
jns
xor
stos
xor
mov
push
dec
mov
std
ljmp
jge
adc
cmp
jae
xor
pushf
pusha
jb
push
and
xchg
dec
in
inc
mov
rorl
out
in
inc
movsl
fcmovnbe
fs
stos
jmp
xor
repnz
jb
sub
xacquire
jle
cmp
imul
inc
mov
out
jo
pop
push
push
sub
and
xchg
mov
mov
pop
pop
je
sub
sub
sbb
pusha
dec
mov
cmp
xor
dec
int3
inc
xor
push
mov
mov
mov
shl
js
icebp
mov
gs
xlat
sub
out
cmp
inc
shrl
pop
xchg
subb
pop
xor
andl
xchg
dec
aaa
or
out
les
pushf
mov
mov
sbb
mov
mov
inc
std
mov
int
js
sbb
adc
movsb
adc
mov
ret
xchg
repnz
mov
cmp
outsl
mov
test
repnz
mov
movl
mov
fisttpll
adc
bound
jmp
cmpl
mov
insb
push
and
pop
pop
lock
pop
push
fists
adc
into
cmp
inc
sub
pop
dec
fsubp
fwait
lahf
gs
std
cmc
bound
xor
into
mov
sti
scas
mov
xchg
js
push
sbb
jne
pop
fwait
xchg
je
xor
xchg
out
xchg
pop
sar
add
mov
jmp
in
xor
data16
xlat
push
stos
je
push
loopne
ret
and
test
xchg
inc
movsb
fldcw
lods
out
sbb
cmp
adc
pop
je
and
aas
dec
cmp
aaa
mov
js
mov
negb
xchg
adc
icebp
test
enter
pop
push
out
out
sahf
push
jmp
cli
pushf
pop
jnp
cwtl
leave
pusha
pop
mov
fsubrs
cmp
insb
gs
mov
int3
mov
mov
jp
inc
pop
jae
pop
imul
xchg
pop
push
lret
nop
xor
push
mov
cmc
mov
push
jge
repnz
add
adc
mov
test
jg
int3
aam
xor
dec
lret
cli
xchg
lret
mov
scas
push
add
jns
and
lds
into
sarl
aas
jnp
fistpl
call
cmp
repz
sbb
daa
sbb
push
cmp
scas
aaa
mov
mov
sbb
test
adc
add
xor
push
mov
cmp
ret
out
jne
sbb
push
mov
lods
insl
std
mov
push
dec
push
cmp
movsb
sub
dec
jecxz
push
ja
mov
ret
and
push
push
xor
aad
xor
lahf
insl
in
jg
out
arpl
and
arpl
loopne
cmpsl
jecxz,pn
sbb
test
xchg
call
push
cmc
mov
mov
xorl
mov
rcll
xor
push
add
mov
loopne
hlt
lret
ds
subb
sbb
fs
mov
fdivl
test
pop
or
cmc
add
push
pusha
pop
cmpb
adc
jnp
stos
icebp
movsl
std
add
sar
jbe
gs
dec
cwtl
cmpsb
add
rcrb
imul
push
jns
rcll
add
aas
cs
fistl
movsb
cltd
sbb
insl
call
xchg
sbb
test
xchg
or
add
or
xor
es
dec
jnp
mov
iret
or
imul
fsts
mov
ret
fnsave
lds
cltd
jmp
push
ljmp
mov
jae
xchg
jne
add
mov
push
add
cmp
cmc
inc
xor
fwait
ja
test
std
and
xor
fidivrs
aaa
push
sbb
mov
mov
arpl
push
div
mov
and
sub
icebp
dec
les
push
xchg
cmp
or
jbe
xchg
jmp
cltd
or
in
repnz
je
fnstcw
xrelease
jl
lret
jae
dec
sbb
test
aam
stos
fwait
mov
xor
mov
push
adc
mov
stos
sahf
int3
arpl
mov
add
int
adc
and
loop
push
pusha
imul
sbb
or
cmc
gs
or
dec
jl
out
movsb
loop
adc
adc
lret
sub
lods
pop
insl
add
sbb
stc
xchg
je
rcrb
sbb
lods
pop
out
push
jl
repz
fmulp
jp
and
les
dec
cld
loope
outsl
adc
mov
adc
cld
aam
xor
jns
clc
dec
jns
ja
push
loope
jle
fldl
push
or
pop
xchg
pop
inc
jno
xchg
mov
mov
out
xlat
aas
or
mov
push
or
movsb
sbb
fimuls
cltd
inc
lahf
mov
inc
faddl
jge
mov
std
dec
jg
mov
lret
xchg
push
insl
dec
mov
int3
push
push
lret
sbb
loop
out
lcall
scas
gs
and
ja
xor
push
cli
jmp
jp
ret
fcmovu
pop
xlat
and
incl
add
dec
popf
iret
sub
aas
outsb
push
fmulp
sub
out
xchg
jo
in
bound
loop
add
pop
cs
mov
icebp
fildll
in
pop
imul
movsb
test
mov
pop
aad
sub
mov
out
ds
dec
jmp
call
cmp
scas
je
xor
or
dec
shrl
or
cmp
dec
aaa
lods
cmpsb
mov
aaa
mov
jne
cmpsb
repz
movups
aam
je
xchg
sub
push
aad
imul
inc
dec
insl
push
fcompl
mov
mov
in
jl
lods
aas
loopne
scas
stos
lock
lods
movsb
fs
ret
dec
inc
mov
into
mov
sub
mov
lods
fmull
jp
dec
out
cld
bound
pop
sub
bound
push
adc
dec
shrl
test
jmp
popa
or
mov
sbb
test
inc
jns
sub
adcb
mov
cmp
dec
pop
mov
xor
xor
sbb
push
xor
dec
shlb
aas
push
adc
cmp
stos
mov
push
ret
lds
and
sarl
int
or
sbb
push
push
cmp
xor
iret
cld
in
pop
pop
mov
repz
mov
in
xor
popa
int
shl
pusha
push
fwait
xor
adcl
add
push
and
mov
push
mov
les
jno
js
mov
or
mov
add
ret
push
mul
lods
lods
out
or
adc
enter
adc
aaa
lds
ja
aad
push
push
jl
ror
aad
shll
jno
dec
or
jge
mov
pusha
mov
cmp
adc
leave
cmp
test
fucomip
pop
jmp
xchg
and
cmpsb
sbb
mov
add
xchg
pop
jbe
lods
mov
sbb
cmpsb
xor
push
mov
xchg
push
lret
dec
jb
mov
mov
xchg
fldt
ficoms
xor
dec
shlb
mov
jb
pop
and
xor
jo
and
mov
mov
cmp
sbb
cmp
mov
ret
sbb
adc
nop
js
pop
cmp
inc
cs
aas
add
inc
mov
push
lret
ret
add
mov
std
sub
sbb
jnp
repz
fistpl
test
jg
push
mov
sub
cld
jmp
sahf
adc
adc
and
call
scas
in
inc
repnz
into
add
cmp
jae
dec
push
or
ds
dec
cmp
iret
xchg
mov
push
and
push
pop
orl
cmp
loope
stos
mov
movsb
xchg
outsl
ja
call
int
push
dec
enter
cmp
xorb
lods
push
ret
mov
mull
mov
fwait
push
mov
pop
lahf
mov
adc
cmp
push
inc
lock
pop
movsl
data16
or
aaa
scas
rcrb
adc
decl
mov
sbbl
xchg
mov
movsb
addr16
lods
xor
or
mov
loopne
sbb
ja
jne
in
dec
xchg
mov
movsb
dec
scas
mov
mov
outsl
les
cmpsl
mov
xlat
rcl
xor
test
dec
xor
jge
jno
sub
js
mov
xchg
mov
jnp
sbb
pop
add
lods
or
fidivrl
xor
sub
push
dec
loop
sbb
add
add
stos
adc
sbb
or
or
movsl
shrl
inc
in
cltd
iret
push
enter
out
xchg
mov
divl
push
mov
and
jns
mov
cs
sbb
mov
call
imul
fists
jp
cmp
cs
adc
jge
sub
push
pop
test
int
inc
lea
loop
adc
push
cmp
mov
rolb
or
xchg
inc
ret
jecxz
push
mov
sbb
xor
inc
push
js
fs
xchg
fwait
aaa
cmpsl
add
in
and
sbb
dec
in
cmpl
lods
and
cmpsb
movsb
xchg
stos
mov
sub
imul
xchg
fadd
loope
outsb
insb
sarl
xor
fs
mov
fildl
fdiv
je
and
or
xchg
shrl
cld
fcomps
outsl
test
push
mov
sbb
sub
adc
test
sub
aad
push
notl
fisttpll
or
jecxz
jo
mov
out
inc
jns
jecxz
inc
push
out
sbb
sahf
mov
adc
mov
jmp
iret
sbb
and
aad
mov
inc
dec
and
adc
mov
pusha
dec
mov
ret
cwtl
rorl
je
dec
imul
bound
adc
pop
rcrl
and
in
aad
jo
aaa
add
inc
xchg
dec
sub
dec
pop
out
stos
sbb
jle
rclb
mov
lcall
add
mov
repnz
jecxz
mov
out
inc
das
and
cmpsb
and
jmp
add
icebp
inc
adc
es
aas
or
xchg
mov
dec
push
cld
inc
sarl
lods
inc
daa
lahf
push
xor
mov
mov
cs
jle
cld
aas
xchg
cmp
push
and
in
je
addl
sbb
pop
stc
push
fmuls
out
cmp
lahf
adc
leave
addr16
cmc
pop
adc
cmp
jne
xchg
shlb
cmc
push
jno
adc
xor
daa
or
jns
dec
push
sbb
mov
and
repnz
inc
xchg
jmp
into
lock
subb
pop
mov
mov
cwtl
and
ja
push
leave
in
xor
out
or
shrl
xchg
ja
rorl
or
cmp
mov
out
mov
mov
ds
push
xchg
jmp
jnp
pushf
and
mov
mov
ljmp
stc
movsb
rcll
pop
sbb
cmp
xchg
mov
loopne
js
shl
repnz
call
out
mov
mov
inc
je
cmc
pusha
subps
or
pop
outsl
xor
xlat
pop
mov
sbb
cmpsb
orl
cld
pushf
xor
out
add
hlt
jl
movsl
inc
sub
mov
push
jae
idivb
adc
cmpsb
lea
or
pop
rorb
mov
outsl
jle
jae
repz
test
aaa
xor
mov
xor
mov
mov
test
mov
push
mov
push
lret
lret
mov
clc
lret
pop
xchg
bound
mov
bound
xor
adcb
std
in
mov
push
pop
andl
jmp
push
loope
bnd
sbb
rorl
adc
cmp
inc
flds
fs
inc
push
fsubrs
mov
sbb
mov
aam
or
mov
rcrb
repnz
jle
ret
jg
insb
jns
daa
push
test
mov
test
ja
stos
and
aas
or
mov
mov
and
and
sbb
cmp
sub
fcomi
lds
fnsave
xorb
test
and
jb
push
aas
icebp
movsb
xchg
cmpsl
sub
out
jb
xchg
xor
mov
hlt
mov
cmp
popl
out
cmp
in
jne
das
mov
sbb
scas
lea
in
popf
jno
cmp
movsl
cmpsb
xor
out
mov
rolb
lahf
stc
in
cwtl
test
xchg
popa
push
subl
add
pop
mov
jne
fisubl
inc
dec
dec
in
repnz
iret
adc
xor
push
mov
fxch
and
in
fstpl
or
mov
lds
adc
loopne
and
pop
out
push
jbe
testl
movsb
xlat
repz
mov
sbb
xchg
sub
adc
sbb
mov
jbe
popf
adc
jne
outsl
les
jl
popa
in
lock
sahf
outsb
je
inc
lahf
idivl
loopne
das
dec
fisubs
xchg
jmp
movsb
fwait
pop
movsl
idiv
sbb
xor
dec
pop
testl
xchg
xchg
jns
xlat
movsl
sbb
cwtl
shlb
loopne
cmc
cmc
sbb
adc
cltd
lcall
es
or
inc
dec
rcl
shl
xchg
xchg
loopne
jmp
inc
das
xchg
add
push
cld
xor
sub
repz
fimull
call
push
pop
xchg
sub
mov
test
sub
jb
rcrb
dec
enter
out
int
rcrb
pop
inc
mov
movsb
js
sub
pusha
jo
add
shll
loopne
mov
arpl
xchg
and
and
push
jb
sub
into
ret
cmp
or
mov
add
pop
dec
jmp
gs
aas
dec
inc
mov
hlt
mov
jae
clc
lret
xchg
test
pop
cmpsl
pop
dec
adc
sahf
aad
sub
mov
out
and
adc
mov
add
jmp
pop
cltd
cwtl
fbld
test
push
adc
push
hlt
push
cmpsl
jmp
dec
inc
es
inc
inc
mov
inc
inc
mov
mov
xchg
cli
lods
aas
ret
sbb
dec
pushf
jb
in
adc
and
popa
inc
fcompl
add
xlat
dec
mov
xchg
and
insl
aad
gs
xchg
inc
loopne
and
stos
pop
rolb
lret
icebp
add
sub
xchg
adc
cmp
loope
dec
xor
lock
outsb
js
mov
ja
xchg
cltd
movsl
pop
jle
loop
icebp
nop
mov
xchg
in
incb
mov
jnp
inc
cmp
add
sti
inc
mov
push
mov
xchg
and
fdivrs
or
outsb
mov
xor
in
cli
orb
xchg
pop
pop
les
push
inc
rcr
insb
lgs
or
cld
xchg
call
sbb
loope
mov
xchg
mov
pusha
hlt
push
out
add
mov
fsubl
adcb
cmp
adc
rorb
dec
mov
in
call
pop
sub
lods
inc
out
scas
aaa
sahf
dec
pop
mov
mov
inc
stc
loope
ds
push
fildl
vphaddbd
call
lea
iret
imul
jbe
xchg
push
call
pop
and
mov
std
rclb
push
sbb
outsb
es
mov
movsb
pop
cld
in
jmp
fldl
adc
or
sub
xor
cli
mov
call
bound
pop
xor
inc
jno
push
divl
lock
into
sbb
xor
lock
xchg
imul
pop
addb
pusha
in
enter
enter
lds
sar
cltd
xor
jo
loope
rolb
je
and
ds
incb
push
jecxz
mov
dec
frstor
in
bound
ss
out
pushf
std
adc
cmpsb
push
xor
xor
sub
mov
jnp
sbb
xchg
or
push
andl
outsl
cmp
cmp
add
mov
sahf
mov
and
mov
lcall
jp
mov
xchg
sti
int3
cmp
mov
aam
push
push
movsb
fmull
movsl
adc
cli
jne
pop
in
fsubrs
cmpsb
push
daa
std
dec
sbb
inc
push
pop
dec
and
hlt
xor
ljmp
nop
dec
ljmp
aam
mov
test
xor
push
in
jp
inc
push
dec
iret
shlb
fistpll
push
jo
insb
adc
fidivl
sbb
std
mov
arpl
mov
xor
test
add
jmp
dec
imul
aad
clc
dec
sub
fwait
or
sub
idiv
aad
mov
jle
pop
jo
sub
xchg
cmpsl
mov
dec
mov
sub
xchg
aad
mov
xor
aam
jns
add
jo
and
inc
sti
into
jg
fyl2x
and
jle
mov
mov
popf
push
insb
clc
push
push
dec
dec
sub
jge
sbb
or
scas
mov
cli
sub
std
jecxz
or
mov
leave
xchg
fistl
mov
test
pop
lcall
repnz
mov
test
add
push
mov
push
shll
test
jne
js
call
icebp
inc
loop
mov
xchg
adcl
mov
and
hlt
jbe
push
dec
add
in
mov
jnp
pop
repz
call
or
popf
mov
rorb
es
cs
mov
addr16
xor
ja
rcrb
and
sbb
push
insb
adc
cwtl
cmp
stos
je
fcmovnu
inc
js
pop
push
dec
in
pop
dec
jne
inc
add
add
push
jl
inc
in
inc
mov
out
dec
imul
xchg
pop
cmp
mov
andb
repz
inc
lss
cld
mov
adc
jp
mov
jnp
loopne
mov
adc
pop
mov
lock
pop
sbb
popa
imul
push
out
and
fnstcw
pop
icebp
cli
cwtl
nop
mov
pop
aad
imul
aad
call
lahf
out
es
stc
test
cmpsl
movsb
imul
aad
cmp
fwait
push
ret
loope
sub
shlb
xor
inc
pop
fs
aad
shlb
rorb
mov
loope
jp
loopne
xor
mov
mov
dec
mov
pop
add
jo
dec
mov
mov
inc
mov
push
or
fsubs
mov
jbe
pop
popf
addl
std
jg
pop
call
insb
adc
leave
cmp
out
ds
jle
jne
mov
inc
add
or
xor
mov
xchg
arpl
adc
lcall
adc
pop
fisttps
bound
xchg
jne
dec
add
mov
mov
or
aam
icebp
lahf
cmpsb
jmp
ljmp
push
sbb
cmpsl
lahf
cs
xchg
and
in
dec
out
adc
mov
push
adc
ss
pop
add
xor
loope
hlt
push
ja
pop
pop
out
stos
mov
cmpsb
fists
gs
rorb
cmc
mov
push
imulb
xchg
pop
clc
aas
aam
pop
adc
add
mov
pop
fidivrs
cmp
mov
dec
xlat
faddp
adc
push
dec
into
gs
xor
cmp
and
insl
mov
pushf
rcrl
dec
jb
push
ljmp
or
inc
xor
lret
pop
mov
in
jp
mov
sahf
stos
ret
sbb
mov
jns
mov
xchg
mov
jmp
outsb
push
cmp
mov
jae
enter
xchg
sub
xor
push
xchg
push
test
jmp
ds
icebp
iret
mov
xor
push
rorl
xchg
xchg
and
into
mov
or
dec
clc
sub
adc
dec
fcomps
scas
inc
dec
sbb
inc
rolb
push
jne
jl
nop
in
push
xor
adcb
insb
mov
aam
les
je
adc
int3
cld
je
lods
pop
in
test
imul
stos
fdiv
das
ja
outsl
cmp
cmp
movsb
lds
mov
pop
cwtl
push
cs
sbb
push
jge
dec
cmpsb
loop
jb
es
iret
daa
xchg
sbb
jno
and
pop
add
adc
jns
push
movsl
aad
inc
add
shrb
pop
add
xlat
in
and
pop
lock
inc
repnz
incl
imul
ss
daa
xchg
fs
clc
lcall
pop
jle
pmaddwd
or
xor
enter
pop
adcb
cwtl
inc
push
ret
pop
mov
jnp
lock
ficomps
mov
in
sub
ja
shll
test
adc
adc
dec
jb
sbb
cwtl
cld
test
mov
repz
xchg
xchg
jl
sbb
inc
pushf
xorb
mov
and
dec
fldl
shrb
xor
rcl
cs
adc
incb
ja
dec
fcompl
mov
roll
push
mov
adc
sub
leave
lahf
fdivp
pushf
dec
scas
sub
cmp
adc
xchg
mov
push
ljmp
push
jo,pt
test
mov
adc
addr16
cmpsl
sub
popf
test
xchg
cmc
loopne
jle
jle
pushaw
dec
ss
rorb
xchg
popa
mov
jns
aad
scas
xchg
or
outsl
es
or
xchg
rolb
or
sahf
mov
jne
adc
xchg
cs
mov
push
call
or
popf
addr16
test
icebp
dec
xor
hlt
inc
mov
xchg
push
out
lahf
cmp
dec
or
nop
push
outsl
cwtl
mov
movsb
adc
pop
adc
sbbb
mov
adc
cmp
lcall
ss
jp
outsl
lds
jecxz
add
outsl
outsl
push
rorb
loope
pop
bound
or
or
or
outsl
in
scas
push
scas
in
fwait
mov
or
xchg
std
in
aas
cwtl
pop
push
push
sbbb
inc
or
daa
ret
testl
sbb
dec
pop
sub
sbb
cmp
or
hlt
test
cwtl
ret
push
arpl
dec
fsub
sub
aas
pusha
adc
or
inc
out
mov
mov
insb
push
inc
jb
mov
mov
aas
jbe
push
test
es
in
mov
jge
or
loope
mov
imul
dec
mov
push
dec
sbb
fs
pop
and
add
push
pop
xor
mov
push
cmp
and
push
jg
jle
and
xchg
xchg
or
and
mov
mov
stc
mov
jno
nop
lods
mov
stos
sbb
movsb
sub
jo
mov
daa
xchg
inc
pop
push
add
int
mull
addr16
jbe
mov
movl
in
jle
mov
rclb
jae
jge
inc
xchg
test
imul
inc
loopne
lret
aaa
mov
movsl
push
inc
push
filds
in
mov
push
das
outsl
pop
pop
fbstp
outsl
jl
bound
cmp
icebp
addr16
sub
push
stc
arpl
fmuls
clc
mov
dec
hlt
out
inc
mov
xchg
xchg
out
jb
xchg
xchg
mov
cmp
sti
inc
sub
fsubrp
mov
repz
pop
call
insl
aad
cmc
fisttpl
gs
xchg
and
push
fwait
enter
icebp
add
jp
out
popf
leave
repz
dec
inc
les
jno
mov
inc
pop
push
sarl
rclb
test
jns
orb
jnp
cli
aad
dec
sarl
sbb
dec
or
data16
xorl
add
fists
xchg
out
loop
fdivrl
pop
outsl
add
cwtl
lret
inc
or
andb
inc
pop
adc
sti
cmp
sub
jmp
mov
pop
sub
sahf
pop
add
mov
rorb
xor
xchg
cmp
lret
dec
push
popa
dec
dec
mov
push
repz
insl
xor
xchg
loope
lods
dec
out
cmp
in
adc
pop
jnp
cmpsb
dec
rcrl
sbb
outsl
dec
push
dec
in
pop
dec
sti
ror
inc
loop
adc
adc
out
xor
mov
xor
popf
mov
vmovups
sbb
adc
ja
mov
insl
xor
movsl
mov
mov
sub
sbb
fildll
std
push
push
add
loop
mov
or
in
push
shll
mov
aaa
filds
push
mov
popf
push
xor
dec
xchg
push
imul
jl
iret
shl
lcall
adc
fldt
popa
pusha
hlt
pop
imul
sub
push
adc
pusha
cld
dec
mov
dec
mov
out
sbb
pop
add
movsl
aad
sub
add
jmp
xor
loopne
fstl
mov
cltd
mov
and
push
fiaddl
mov
add
sbb
xor
dec
xor
addr16
cmp
std
mov
aas
out
insb
hlt
cmp
addr16
mov
int3
dec
ret
mov
or
sub
clc
push
sub
dec
sub
jns
mov
push
enter
int3
push
and
leave
pop
lret
clc
js
mov
ret
inc
mov
pushf
outsl
sbbb
ret
mov
or
xchg
and
test
insb
adc
jmp
leave
sti
jmp
ja
jno
xor
jb
jnp
cmp
mov
push
jecxz
iret
push
fimuls
mov
pop
cmp
xor
cmc
out
jge
xlat
jb
pop
pop
mov
sub
jne
sub
mov
daa
test
dec
push
insl
and
jge
sbb
mov
mov
or
inc
sti
pop
xor
add
icebp
inc
push
test
dec
sarb
dec
sub
cmp
mov
out
push
mov
inc
shll
mov
stos
inc
cmp
adc
imul
aam
int3
je
jbe
clc
and
cmpb
or
cld
pop
dec
cmp
loop
or
shlb
rclw
test
fiaddl
scas
xor
inc
lods
dec
sub
jo
cmp
gs
mov
aaa
or
hlt
out
jbe
popf
adc
shl
cmpsl
pop
cli
push
xor
push
notl
movsb
jb
aad
fiadds
les
notl
addr16
sbb
mov
out
sbb
je
push
jno
add
insl
int3
shlb
push
in
shrb
inc
jl
jbe
xchg
cwtl
jp
je
stos
imul
stos
bswap
mul
jmp
or
outsb
cltd
mov
xlat
dec
add
test
scas
mov
addl
mov
push
aaa
out
mov
out
jecxz
push
fildl
or
mov
cmp
mov
fistps
lods
push
cltd
adc
and
sysexit
push
cmp
push
jnp
xor
sbbl
jb
xor
pop
icebp
xor
cs
sub
cmp
sar
dec
push
xor
inc
ret
loop
rcrb
jmp
mov
xchg
xchg
sbb
cli
adcl
ud2
lods
loop
loop
and
xchg
add
mov
cs
mov
dec
push
mov
sub
movsb
lods
std
mov
mov
stos
push
mov
test
inc
gs
mov
pop
cmp
xchg
cs
mov
cmp
ret
xor
in
iret
dec
mov
add
dec
mov
loopne
pushf
sbb
push
add
xchg
cmp
pop
data16
or
fimuls
inc
leave
push
adc
ret
adc
stos
cmpsl
loopne
sbb
sbb
repnz
xor
dec
aaa
or
jae
add
sbb
repnz
push
mov
or
cmp
add
mov
sbb
xor
dec
shlb
dec
loope
and
pop
and
jnp
repnz
dec
jl
inc
out
cmp
and
jns
or
int3
pop
aaa
push
mov
test
je
dec
sbb
mov
iret
daa
enter
xor
push
addps
sahf
mov
js
xlat
jmp
movsl
test
lea
jecxz
jmp
lcall
lock
jl
cmp
or
rcrl
insl
add
test
cmp
mov
mov
xor
leave
je
pop
je
nop
sub
je
cmp
movsb
cmp
rcl
mov
mov
pushf
pop
push
jge
dec
aad
mov
sub
es
pop
inc
dec
adc
dec
pop
pushf
add
enter
dec
jne
inc
push
xor
sbb
hlt
jo
lds
gs
jmp
sbb
pop
int
mov
dec
xor
pop
frstor
les
ljmp
cmpsl
mov
lock
in
dec
inc
mov
and
jbe
adc
push
imul
cmp
sbb
mov
push
sbb
mov
lds
push
xchg
sbb
ss
mov
out
out
mov
add
stc
or
popa
inc
push
inc
and
out
xchg
mov
test
mov
das
loop
lcall
popa
sbbl
pop
lea
xor
cmpsl
lahf
leave
int3
push
popf
into
mov
pop
mov
es
loopne
leave
mov
xchg
push
add
add
cmp
xchg
lea
sbb
pop
pop
push
pop
lahf
mov
int
inc
data16
jno
mov
pop
mov
mov
inc
ja
inc
push
sbbl
adc
and
cmp
sbb
add
adc
fstpl
jnp
push
ja
cld
popa
mov
or
movsb
push
daa
and
xchg
mov
jae
push
aad
lcall
aas
pop
add
test
xlat
inc
pop
jecxz
pop
jecxz
push
pop
jnp
repz
pusha
jmp
stc
pop
loopne
pop
jnp
pop
jbe
ja
daa
stc
add
jae
loope
daa
xor
aaa
and
xorl
imul
push
and
and
in
mov
test
inc
xchg
add
pop
lret
cmp
adc
xchg
xor
call
pop
test
or
ja
stos
roll
sub
scas
ljmp
sbb
adc
xchg
xlat
jno
test
inc
sub
mov
outsb
push
int
and
mov
push
stc
pop
mov
sti
lds
les
mov
xor
hlt
mov
mov
adc
insb
cmp
fldenv
cmp
sub
fidivs
push
outsb
adc
sbb
daa
nop
inc
cld
cs
or
xor
in
enter
gs
jnp
pop
pop
sbb
pop
ficompl
inc
pop
jp
ja
mov
enter
imul
es
in
stc
clc
stc
js
negb
aad
enter
into
or
ljmp
mov
push
jnp
cs
and
std
push
dec
xor
lcall
fnsave
sahf
cmpsl
mov
pop
lock
mov
jmp
xor
cmpsl
cwtl
pushf
popa
lahf
jl
shlb
cld
adc
rolb
or
popfw
stos
jb
adc
jl
mov
push
adc
jg
and
movl
testb
sub
push
sbb
xor
inc
lret
cmp
push
dec
sub
mov
pop
lods
jbe
js
mov
adc
int
mov
and
sub
les
mov
icebp
movsb
ror
mov
dec
xlat
enter
test
in
or
adc
clc
enter
aad
iret
jl
stos
dec
add
or
clc
mov
iret
cld
pop
jmp
in
adc
gs
loopne
ror
clc
pop
clc
es
xchg
sub
pop
enter
and
cltd
mov
or
pop
pop
mov
pushf
add
inc
adc
push
adc
adc
nop
dec
cmp
push
xchg
stc
jae
in
idivl
inc
adc
dec
jo
lcall
jns
arpl
dec
jb
notb
mov
ret
popa
mov
dec
or
mov
nop
inc
fcomps
push
cltd
mov
add
lods
adc
xor
push
pop
out
mov
xchg
or
pop
insl
cltd
xchg
pop
add
adc
mov
dec
pop
inc
push
in
xor
push
pop
std
and
in
add
xchg
sub
mov
mov
loope
out
insb
lret
and
mov
insl
adc
test
adc
test
outsb
dec
ja
or
sub
test
rcrl
aam
cmp
inc
xor
push
inc
xor
leave
jecxz
xchg
shll
iret
lea
cmp
sarl
lods
loopne
dec
scas
enter
sub
mov
outsb
stc
out
popf
outsl
cmp
inc
aad
ljmp
mov
in
mov
mov
outsb
ja
ficomps
jp
push
or
insl
filds
jp
and
loope
mov
add
jb
sti
addr16
ljmp
add
xor
out
jnp
add
fcoml
test
pop
xor
repz
mov
push
shrb
jns
and
lods
add
ret
mov
xor
xchg
push
mov
sbb
mov
pop
shrl
outsl
jb
call
jnp
xor
push
dec
dec
ss
mov
push
pushl
dec
outsl
in
mov
inc
sahf
cmc
or
fwait
jns
inc
aaa
jo
dec
sahf
imul
or
jl
lods
test
adc
pop
inc
and
repz
dec
pop
dec
mov
sub
dec
adc
jns
mov
in
jmp
scas
add
sahf
aam
xchg
inc
jno
add
inc
lcall
fisubs
ficompl
jbe
int3
jmp
std
push
aaa
sub
mov
bound
aaa
fwait
and
cmp
rcr
lret
out
loopne
jge
imull
mov
out
or
sbb
and
sub
pusha
mov
lret
cmp
in
outsb
cwtl
mov
xor
ja
adc
sub
not
push
fsts
iret
adc
jo
shrl
pop
js
aam
mov
imul
fisttpll
push
imul
pop
outsb
push
mov
scas
fbstp
push
mov
subb
mov
jae
pop
mov
stos
icebp
lods
insl
in
jecxz
or
in
out
in
jne
adc
sbb
or
mov
adc
xor
nop
pusha
addr16
js
jne
add
stos
sbb
clc
cmpl
ss
out
incb
notb
hlt
aaa
cmpsl
xor
mov
bnd
in
or
daa
hlt
push
int3
mov
sub
xorb
mov
mov
dec
aaa
xchg
sub
cmp
adc
mov
mov
jle
dec
pop
fdivrs
cmp
inc
mov
daa
movsb
jo
int
cmp
out
dec
jb
fs
xor
es
ret
aaa
xchg
stos
sbb
call
popa
ljmp
outsl
iret
cmc
xchg
push
into
push
in
xor
repz
sub
mov
fists
stos
sub
inc
push
xchg
jne
jl
mov
adc
push
enter
mov
andl
dec
outsb
mov
cmc
xchg
mov
xor
adc
int3
mov
jae
mov
rcll
xchg
aas
rcll
cmc
cld
adc
adc
mov
aas
mov
push
test
std
rorl
cmp
lods
mov
sub
cmpsl
lock
fwait
cli
sub
mov
inc
cmpsb
fmuls
sub
stos
shll
int
les
push
jae
sti
pusha
lea
adc
ljmp
decl
pop
xor
ret
adc
dec
dec
jnp
jecxz
and
pop
jge
mov
jo
inc
idiv
dec
lret
pop
subl
in
or
push
push
push
les
or
fwait
xor
mov
or
cmp
fwait
cmp
loopne,pn
jno
xchg
xor
cmp
mov
xor
xor
loop
dec
outsb
repz
sub
orl
cld
imul
repnz
or
insl
mov
cmp
shl
mov
pop
and
sbb
and
and
adc
cmp
push
cltd
xchg
mov
cli
or
add
add
fbld
jle
cltd
mov
lods
mov
popf
xchg
scas
daa
jns
sbb
push
mov
test
jmp
push
inc
aam
xchg
jne
cmpsl
test
xchg
xchg
jns
loope
imulb
imul
pop
xchg
jns
dec
and
sbbl
scas
mov
pop
adc
mov
sbb
adc
ret
add
push
frstor
jns
xlat
pop
mov
sti
add
mov
pop
dec
aaa
adc
mov
mov
or
cmp
xor
insl
pop
lcall
bound
add
pop
push
dec
inc
dec
adc
push
dec
pop
adc
pop
add
mov
sub
cmpsb
add
lret
cli
pop
inc
je
push
mov
mov
adc
dec
mov
dec
xchg
std
or
lahf
xor
adc
jae
cli
out
fisttps
mov
push
mov
movsl
cs
lods
inc
xchg
je
jb
fdivr
and
scas
mov
xlat
dec
jmp
in
xor
jmp
fstpt
int
jg
jnp
popf
movsl
pop
sti
cltd
add
jno
mov
outsl
mov
xor
push
jbe
daa
fisttpll
cmp
jp
cmp
and
adc
jle
dec
es
cmp
lret
jnp
fs
into
jmp
je
outsl
sti
mov
inc
and
ficompl
jmp
dec
fwait
sub
movsb
lcall
fbstp
loope
das
push
addr16
cwtl
adcl
mov
xlat
scas
xor
push
or
daa
pop
popa
call
sbb
jle
je
loop
add
cmp
sub
inc
pop
pop
xchg
andps
call
je
xchg
call
adc
popa
mov
cwtl
and
lds
pop
cli
push
dec
js
fisubl
xor
inc
push
dec
xchg
mov
testl
rol
das
cs
inc
mov
cltd
fucom
adc
jnp
inc
mov
mov
mov
inc
mov
scas
popf
and
lock
xchg
sub
mov
out
and
push
mov
inc
cli
add
jo
add
jo
test
shrb
or
test
mov
xchg
fisubrs
dec
cmp
mov
daa
cld
stos
cld
scas
and
lret
imul
push
jecxz
dec
sbb
aad
rorb
mov
fimuls
sti
ret
mov
stc
mov
out
or
mov
cmp
sti
in
pop
mov
loope
jl
lea
xchg
repz
push
mov
ret
js
push
stc
xchg
xchg
mov
icebp
cli
inc
inc
and
dec
dec
les
in
adc
sub
fldcw
inc
sbb
icebp
aaa
jno
sub
fwait
mov
sub
push
inc
test
shrl
gs
fidivs
sub
add
dec
add
jecxz
imul
pop
movsl
test
loope
push
fldenv
cwtl
les
sub
sti
notb
push
pop
fcmovbe
in
or
mov
sbb
outsb
adcl
imul
pop
aam
loope
pusha
mov
sbb
push
pop
pop
sub
mov
popa
xchg
scas
ja
popa
cmp
add
outsb
sub
push
sbb
fptan
xchg
inc
gs
xor
hlt
insb
fisubl
mov
jns
adc
mov
cmp
mov
pop
jae
aam
or
jb
xchg
xor
in
loop
fwait
inc
insl
jl
xor
mov
stos
or
pop
sbb
arpl
insb
fdivrp
mov
bound
adc
push
dec
and
or
bound
test
stos
pop
lcall
lods
pushf
mov
sub
je
les
jge
jo
xchg
jno
mov
and
jbe
mov
arpl
xchg
xor
shr
inc
jbe
iret
pop
sbb
je
lea
or
stos
mov
push
add
rol
dec
xchg
ss
xchg
jmp
das
lods
or
mov
inc
mov
test
add
dec
iret
rorl
pop
cmp
push
pop
push
mov
mov
clc
movsl
aad
adc
cltd
out
inc
aam
xchg
repz
lea
dec
mov
lahf
push
bound
sub
cld
jo
daa
orb
adc
test
jp
cmpsb
clc
in
adc
mov
add
inc
dec
cmp
incl
jge
jno
out
sbb
shlb
lret
sub
cmpsl
out
pop
cmpsl
cmpsl
call
in
into
or
daa
sub
xchg
lret
push
pop
and
loope
mov
inc
add
frstpm(287
add
push
in
add
mov
or
out
adc
pop
xchg
idiv
loope
icebp
and
pop
pop
out
test
loope
push
cltd
scas
imul
mov
mov
mov
rorb
xor
push
sub
cmp
fs
fucomip
cli
add
jmp
mov
test
std
inc
popa
cmpsl
jns
sbb
lock
imulb
xor
inc
jmp
xlat
sbb
inc
push
js
mov
dec
jnp
cmp
xchg
loop
into
mov
les
mov
dec
sub
or
leave
lea
js
aad
mov
add
dec
push
mov
xlat
sti
loope
shll
pop
jno
push
and
addr16
in
mov
das
addb
es
xchg
push
xchg
lcall
negl
sbb
sti
and
lahf
sbb
rcll
je
jle
popf
jno
fwait
cmp
ffreep
addr16
adc
ret
ja
or
iret
aad
push
mov
pop
lock
inc
or
leave
fmull
mulb
ret
pop
dec
daa
xchg
cmp
push
push
jle
mov
fcomps
insl
es
or
movsb
sub
cmp
jl
inc
add
fiadds
ja
dec
aas
inc
pushf
fbld
sti
jge
mov
jg
sub
dec
mov
insb
sbb
idiv
mov
dec
pop
fisttpl
pop
out
int3
cmc
insl
xchg
lods
mov
cltd
push
push
lods
clc
push
loope
lods
outsl
mov
clc
out
call
loopne
mov
ljmp
and
mov
mov
sbb
mov
sub
mov
cli
ffree
scas
push
mov
pop
mov
fidivrl
ficoml
xor
ja
pop
jle
and
scas
mov
loopne
pusha
fistpl
imul
jmp
xor
and
outsb
add
popa
or
popf
mov
push
fdivp
jb
pop
out
inc
shlb
adcb
pop
xchg
fistps
push
cmc
pushf
inc
adc
test
dec
jns
lcall
cmp
xor
sub
xor
mov
decb
in
jnp
add
xor
sub
lret
cmp
fwait
sbb
mov
aam
test
pop
sbb
loop
lock
push
inc
js
inc
arpl
dec
js
inc
mov
in
repnz
or
fcoms
fwait
mov
push
js
test
out
into
sub
movsl
stc
leave
leave
aam
inc
cltd
cltd
pusha
xchg
cli
into
add
shll
push
push
jns
lds
xor
jmp
cmp
nop
ret
cld
mov
push
xor
test
mov
xor
cli
out
add
mov
pop
cltd
call
push
sub
call
cmp
cmp
test
repnz
push
in
loop
les
sbb
jge
jmp
adc
cwtl
pop
out
xor
call
jb
in
dec
sub
fwait
mov
fstps
fimuls
adc
scas
pop
xchg
popa
xchg
mov
adc
xor
shll
cmp
push
adc
lret
pusha
jp
add
cmp
dec
xor
xchg
hlt
int
xor
pop
add
or
xchg
cmp
lods
jo
push
pusha
sbb
push
or
mov
jae
add
into
mov
in
lods
aas
jnp
sub
sbb
mov
add
movsb
outsl
and
push
and
out
or
call
ret
cli
fists
jp
subl
mov
fwait
lcall
sti
repz
add
mov
or
dec
movsb
mov
cmp
push
pop
jbe
xor
subl
push
daa
dec
xor
sbb
gs
mov
cmpsb
iret
imul
cmp
mov
or
mov
jp
jecxz
ret
mov
cmp
xor
ds
imul
fimull
cmp
loopne
call
mov
cmp
mov
insb
mov
add
fwait
push
dec
bound
xor
pop
psubusb
cmp
add
mov
mov
repnz
in
mov
enter
mov
icebp
aaa
das
enter
bound
add
or
gs
sbb
call
cltd
lret
cmpsb
push
cli
xor
rorl
fisttpll
cmp
aam
cs
imul
dec
daa
xchg
or
aam
dec
xor
add
int
mov
pop
and
xchg
jnp
in
jecxz
jb
jge
incb
shl
imull
lea
lea
addr16
mov
aam
out
mov
cs
test
int3
inc
sub
clc
mov
out
cmp
lock
mov
out
dec
add
mov
mov
mov
xchg
adc
rcl
scas
pop
iret
in
mov
push
lahf
cwtl
cltd
icebp
das
mov
gs
sub
aad
and
and
stos
inc
sub
lock
sub
into
fwait
in
add
inc
cmpsb
xchg
jbe
test
jl
xchg
add
mov
les
dec
lds
xor
mov
xor
imul
mov
inc
test
in
jecxz
hlt
dec
stos
mov
cmpb
shlb
xchg
stc
push
das
mov
daa
insb
daa
mov
lock
sbb
mov
arpl
pop
int
push
sub
cmp
roll
test
adc
mov
xlat
xor
hlt
insb
xchg
fwait
mov
sbb
mov
sbb
cmp
jge
insb
sbb
jp
xor
sti
lock
push
out
lds
iret
push
and
xlat
mov
add
push
dec
dec
cmp
rcrl
or
jae
dec
sbb
fdivrp
cld
cmp
mov
lcall
jae
jno
mov
mov
jle
sahf
inc
jmp
mov
or
lods
or
add
add
sbb
pop
into
cmc
pushf
mov
shll
rolb
jle
leave
add
daa
pop
arpl
adc
adc
stos
push
in
roll
aaa
mov
dec
jno
movsl
cmp
mov
in
inc
jo
test
cmp
lret
int
cli
out
shl
imul
js
mov
cmp
dec
cli
pop
in
mov
sbb
imul
xor
cwtl
jno
ja
out
push
aaa
xor
mov
lods
mov
lahf
pop
divb
repz
mov
dec
gs
scas
cli
int3
sarb
or
mov
sub
lock
add
jmp
mov
gs
mov
inc
sbb
cltd
test
in
iret
mov
test
add
xchg
mov
es
outsb
mov
bound
jg
enter
loop
push
mov
inc
jl
in
sbb
mov
jo
adc
add
mov
scas
nop
ds
pop
cmp
xchg
and
push
orl
ja
mov
inc
lcall
std
and
popa
in
mov
daa
add
ret
push
or
and
stos
mov
sbb
das
mov
mov
push
insb
fstl
test
push
add
daa
add
xor
mov
push
es
pop
cmp
cmp
mov
popl
out
addl
sub
mov
cmp
add
daa
pop
jbe
dec
push
add
and
ds
mov
mov
push
or
jge
nop
pop
push
das
sub
js
outsb
divl
shll
mov
scas
cmp
and
pop
jo
cmp
loope
cld
and
xor
inc
adc
jmp
xor
sbb
subl
or
aad
inc
mov
sahf
dec
push
bound
cmpsl
cmc
call
es
outsl
leave
jmp
leave
pusha
ret
pop
pop
outsl
mov
adc
clc
jne
cmp
mov
sub
dec
imul
jmp
dec
pop
lahf
add
cmpsb
and
mov
mov
scas
pop
popf
repz
jle
and
adc
xlat
push
xlat
jp
pusha
or
test
xor
sar
js
mov
dec
push
movsl
sub
in
inc
jmp
xor
sub
xchg
adc
testl
pop
mov
cmp
mov
hlt
rorl
push
cmp
js
mov
or
add
leave
sbb
shll
out
and
fs
xchg
lods
ljmp
jecxz
test
jns
sbb
jmp
jge
addl
imul
jb
dec
add
rcll
call
jb
hlt
test
push
jae
test
and
test
in
aad
dec
out
mov
and
push
xlat
xchg
xor
in
jo
and
adcl
movb
or
inc
insl
xchg
sub
sarb
insb
aam
pop
xchg
dec
mov
and
xor
test
sub
mov
pushf
loop
test
sbb
stos
bound
adc
cmpsb
in
imul
sarb
pop
daa
outsb
shll
fidivl
repnz
jge
jp
sbb
and
out
mov
dec
hlt
fildll
adc
xchg
ds
xlat
mov
or
or
addr16
fidivs
mov
adc
adc
repnz
mov
xor
push
jae
les
pop
push
dec
fs
imul
and
pop
insb
jp
xor
mov
and
mov
dec
push
dec
mov
push
mov
rcll
inc
mov
push
jae
jg
pop
aaa
std
ret
jo
fadds
sub
mov
sub
shrl
cmp
sbb
fprem1
cwtl
inc
inc
dec
lock
pop
out
mov
mov
xlat
pusha
xlat
push
and
pavgw
inc
insl
push
mov
cltd
fnsave
lahf
adc
insb
push
arpl
xor
dec
sub
sti
mov
enter
or
inc
or
jl
jae
fildl
or
nop
popa
daa
mov
push
cmpsl
mov
int3
and
jg
sub
fiaddl
inc
insb
push
and
and
xor
cli
or
jae
mov
lods
mov
pop
mov
adc
and
or
add
xor
cmpsb
out
iret
rolb
addr16
rorb
push
push
and
push
test
int
mov
addb
mov
les
mov
mov
push
sbb
push
mov
ja
jle
cmp
and
xchg
ret
test
ficomps
add
inc
sahf
lret
bound
jmp
xor
repnz
int3
push
fistpll
rcrl
lea
cmp
sub
mov
xchg
loop
les
sbb
adc
test
sbb
dec
push
ret
hlt
mov
fbstp
or
xchg
cmp
inc
jp
scas
daa
xchg
dec
cmc
test
sbb
cmp
push
cmpsl
xchg
ja
or
mov
fdiv
add
lcall
loopne
sbb
ficomps
sbbl
sbb
adc
mov
fldlg2
xchg
pop
fmulp
fidivs
lahf
add
pop
test
push
arpl
xchg
cmp
call
sahf
xchg
cli
nop
pop
mov
dec
mov
jge
pop
daa
or
cmc
lods
mov
inc
fistl
xlat
out
adc
add
jle
cmpsl
aaa
pop
lods
mov
push
dec
mov
in
in
mov
out
out
insb
lret
mov
pop
dec
pop
xor
adc
aam
inc
out
adc
jno
add
mov
mov
inc
outsl
sub
test
xchg
jecxz
ljmp
pop
pushf
xchg
xchg
add
aad
push
loopne
mov
dec
cld
cs
gs
sub
es
mov
aaa
je
insl
push
push
jno
adc
add
out
pop
call
nop
aad
push
imul
jnp
stc
mov
jmp
mov
adc
negl
cmpsl
clc
out
test
mov
cmp
int3
adc
inc
mov
push
pop
add
insl
mov
push
lret
xor
cmp
clc
mov
shll
inc
dec
fsubr
mov
enter
lds
popf
cwtl
push
pop
mov
sbb
movsb
cmpsb
adc
dec
sbb
outsb
add
mov
and
test
cs
and
pop
cltd
mov
dec
mov
adc
int3
hlt
aam
fsubrl
push
jns
shlb
adc
jge
movsl
pop
add
push
xlat
cli
mov
imul
push
daa
hlt
and
mov
mov
cmp
or
shlb
inc
movsb
mov
mov
sub
in
adc
xchg
push
stos
mov
xchg
xor
clc
mov
xchg
mov
out
cli
and
cli
lahf
scas
scas
lahf
pop
mov
bound
in
sub
push
sbb
push
mov
out
dec
out
test
call
mov
stos
mov
lock
inc
inc
xor
dec
adc
lods
push
daa
or
and
icebp
ja
mov
lea
sbb
xchg
push
ljmp
js
jo
fcompl
add
push
push
faddl
pop
out
jge
js
pop
int
inc
fbld
inc
mov
enter
ja
or
pop
xchg
int3
loopne
sbbb
cmc
add
push
out
into
out
int
iret
movsb
test
adcl
pop
xchg
sbb
outsl
aad
jmp
lea
popf
dec
mov
cli
xor
pushf
lret
inc
fldt
std
fiadds
in
mulb
out
andl
pop
iret
les
sbb
rcrb
lret
stos
into
xchg
or
mov
iret
jne
ds
push
add
pop
push
lods
sahf
nop
fmuls
sub
clc
call
push
loopne
loopne
jmp
adc
imull
pushl
and
or
xchg
adc
insl
adc
addb
cmp
orl
push
cmp
xchg
ljmp
cmp
mov
jbe
add
out
inc
lock
ret
imul
cmc
inc
cmp
dec
jno
jo
pop
iret
sub
cld
enter
out
push
fdivl
push
fs
sbb
xor
in
test
xor
in
jbe
mov
andb
jno
jge
loopne
bsf
jns
ljmp
xchg
bnd
lock
cltd
inc
lret
cwtl
js
mov
inc
mov
mov
adc
add
jle
cltd
mull
inc
stos
pop
stc
sub
jmp
mov
sti
repnz
inc
xlat
sub
mov
adc
or
mov
pop
aad
pop
cmpsl
xchg
in
pop
cmp
inc
mov
das
imul
or
enter
cltd
cmpsb
jns
pop
stc
inc
jne
mov
in
dec
stos
pop
out
out
dec
push
sbb
ret
adc
rorl
cmpsb
iret
mov
mov
adc
inc
imul
mov
test
sahf
push
xchg
mov
pop
pop
cmp
fmuls
aam
fs
or
sahf
pop
stc
in
xor
stc
pop
data16
ret
push
ret
xchg
mov
xchg
addr16
insb
dec
pop
mov
mov
jmp
loopne
xchg
pop
mov
icebp
pop
cmp
inc
out
mov
dec
daa
gs
in
jno
xchg
scas
xchg
xchg
es
and
in
out
sar
cmpsb
ret
jge
sub
push
in
shl
add
add
aad
xchg
js
and
xchg
jmp
pop
repz
incl
insb
fidivrs
addr16
xchg
insb
mov
popf
std
cltd
or
or
ja
fnsave
stos
mov
lock
dec
js
lret
mov
pop
mov
icebp
xchg
roll
scas
inc
pop
dec
pop
jp
aam
sbb
mov
pop
mov
pop
iret
lods
fs
sub
out
insl
sub
inc
pop
push
rorl
inc
adc
xorl
outsl
orb
bound
or
icebp
je
lcall
ss
rol
inc
mov
jmp
les
mov
movsl
cli
outsl
movsb
lds
icebp
test
dec
push
loop
pusha
jmp
fistl
add
sbb
mov
andl
xchg
pop
or
insb
les
ss
xchg
out
mov
xchg
push
push
mov
out
jnp
cwtl
cmpsb
or
cmp
out
clc
shl
dec
mov
dec
out
mov
mov
cmpsb
xor
int3
negb
and
icebp
xorb
add
outsl
inc
pusha
ljmp
movsb
iret
and
outsb
pop
fdivrs
jle
mov
add
xchg
ficoms
mov
xchg
add
jmp
das
arpl
inc
popf
loop
inc
dec
shlb
sub
and
data16
push
adc
sbb
or
jb
xchg
jmp
scas
cs
mov
in
adc
lock
or
xor
push
or
xchg
jg
icebp
je
into
bound
cli
xor
and
jg
sti
daa
adc
jecxz
push
hlt
push
aaa
cmp
jno
sbb
push
out
add
lcall
mov
add
adc
push
fcmovnu
mov
aas
jl
cmp
or
out
push
les
popa
or
les
hlt
inc
mov
push
or
and
xor
aas
cmpsb
sub
and
push
push
jp
push
sub
pop
pop
mov
mov
xorb
imul
aas
loopne
add
ret
sbb
or
jo
add
shld
js
arpl
iret
add
jnp
xchg
pop
push
cld
or
xchg
sub
movsb
pop
in
jnp
ret
jge
jmp
mov
inc
data16
and
pop
mov
xchg
pop
or
jno
mov
lahf
and
jnp
dec
outsb
sub
sbb
scas
int
sbb
lahf
lds
sahf
icebp
cmpsl
push
push
loopne
sub
loopne
mov
sbb
imul
xchg
dec
jmp
add
stos
cmp
fidivl
jge
jo
add
and
push
mov
inc
xor
mov
push
test
or
sti
jno
mov
es
insl
in
out
jg
add
scas
push
fmuls
add
rol
xchg
dec
sti
je
je
sub
push
xorl
pop
mov
sub
jecxz
ret
xchg
cmp
xor
jnp
loopne
insb
pusha
insb
out
or
je
jmp
lods
stos
or
mov
mov
dec
and
mov
dec
cltd
inc
adc
or
or
scas
test
movsl
pop
rcr
dec
pusha
fst
sub
and
outsb
mov
adc
aaa
fnstenv
pop
push
icebp
cmp
outsb
sbb
cmp
ja
call
mov
cmp
arpl
xchg
and
ja
adc
bound
mov
in
xor
mov
sub
pop
gs
insb
cmpb
popf
iret
mov
mov
std
dec
pop
das
dec
xor
and
xor
and
push
addb
adc
lahf
mov
cs
shrl
push
iret
mov
cltd
pop
jae
inc
xchg
pop
push
inc
sbb
inc
cmp
movsb
nop
lock
mov
pop
orl
push
in
pop
loopne
in
insl
cmp
test
pop
pop
xor
movsb
bound
pusha
int3
add
adc
jmp
mov
and
daa
lret
sbb
pop
das
and
cmc
fdivrs
xor
icebp
out
xor
dec
insl
xlat
ds
out
mov
inc
stos
xlat
insb
iret
daa
popf
int3
mov
inc
push
jno
movsl
mov
dec
mov
nop
cli
push
adcl
test
push
or
mov
in
pop
outsl
cld
aaa
fs
push
sub
cld
std
jns
and
push
jb
les
pop
lea
jb
int
xchg
jo
lock
mov
push
mov
mov
cwtl
sbb
push
cltd
mov
cmp
out
jb
lods
je
movsl
lds
lcall
and
popf
xor
mov
lea
ficoms
andb
movsb
mov
xor
sbb
in
push
and
xchg
loop
movsl
jns
mov
sub
loop
mov
mov
shlb
aam
mov
push
and
es
hlt
dec
xor
sub
adc
fwait
les
lcall
xchg
pop
js
push
sbb
cwtl
adc
lcall
or
mov
in
xchg
ror
loop
dec
mov
mov
dec
je
mov
push
sub
or
js
bound
adc
add
inc
int
mov
out
stos
xchg
add
lcall
push
push
add
adc
fmuls
adc
jns
mov
test
aaa
adc
cmpsl
or
subl
mov
push
lock
xlat
imul
adc
push
push
add
pop
stc
ds
sub
push
add
mov
das
out
sahf
mov
inc
in
cmpsl
or
cmp
jae
lods
inc
xchg
xor
addr16
hlt
int
dec
cmp
inc
ja
mov
xchg
xchg
push
pop
test
repnz
jge
out
adc
mov
jo
aam
jbe
adc
out
in
xor
imul
pop
fadds
testb
pop
mov
ja
test
pop
inc
mov
pop
adc
adc
add
add
ds
fsubr
mov
int3
adc
out
ljmp
push
pop
mov
in
subps
cmpsl
dec
jmp
xchg
outsl
mov
mov
mov
jne
mov
adc
and
xchg
jmp
cmp
jle
call
inc
mov
das
ljmp
cmp
add
cltd
hlt
jecxz
pusha
or
outsl
sarl
fcom
test
pop
test
push
jbe
enter
shlb
ja
movsl
lcall
or
mov
jmp
jnp
add
fists
or
add
mov
jbe
xor
jno
sub
subl
jo
sti
jecxz
psraw
in
and
arpl
xor
lock
pop
lcall
mov
pop
adc
das
cmp
sti
in
inc
addl
mov
push
mov
sbb
lcall
mov
int
mov
pop
xlat
sub
sbb
lret
mov
dec
adc
cwtl
out
cmp
cmp
or
ss
push
into
pushf
lahf
or
mov
rorb
cld
bound
add
push
pop
orb
mov
pop
popa
pop
mov
mov
gs
fstpl
mov
scas
pusha
push
sbb
fimuls
and
out
mov
loope
pavgw
xchg
adc
mov
jecxz
mov
test
imul
fsubp
add
aad
pop
jo
adc
sbb
mov
clc
es
loope
and
inc
xchg
inc
dec
and
dec
shlb
paddusw
sahf
enterw
jmp
faddl
mov
pop
add
fs
dec
int3
das
inc
cltd
fmull
loopne
dec
std
push
inc
loop
out
fisttps
push
loop
out
xor
in
loopne
out
inc
loopne
aas
in
inc
inc
loop
leave
adc
and
sbb
in
scas
movsb
cmpl
mov
ja
xorl
fidivrs
roll
jnp
ret
add
push
lcall
xor
std
push
jmp
mov
push
addl
sub
and
sub
flds
sbb
mov
scas
hlt
and
pop
rcr
mov
inc
dec
mov
ret
sub
leave
ss
jl
nop
cmp
sub
cmp
insl
adcb
mov
std
mov
repz
inc
pop
add
dec
repz
fs
jg
rcrb
sbb
mov
mov
cmpsb
arpl
add
xor
sbbl
dec
or
scas
push
and
out
xchg
les
and
xchg
cmpsl
in
or
sub
ret
push
stc
jno
and
out
mov
getsec
push
repnz
gs
pop
mov
lahf
test
cmp
mov
aad
jo
sbb
int3
pop
jmp
adc
add
adc
push
mov
or
push
repz
aas
jbe
push
sbb
js
xor
ljmp
mov
adc
leave
movl
xor
xor
int
cwtl
test
rcr
cmpsb
add
push
cmpsl
je
push
mov
jnp
inc
jae
in
sbb
loopne
addr16
or
lds
lock
mov
sarb
add
mov
mov
gs
orb
scas
add
in
sbb
push
cmpsl
dec
je
xor
jp
in
ss
popa
and
sbb
jmp
loopne
xor
ficompl
aas
cli
lods
cmp
dec
std
sbb
in
loope
mov
sub
mov
rcrl
ret
icebp
dec
test
data16
jge
movsl
lods
mov
movsb
jecxz
gs
adc
adc
lret
decb
mov
sub
loope
cmp
pop
sahf
stos
test
lods
fcmovbe
outsb
loope
movsl
cwtl
aam
fdivs
inc
dec
pop
add
daa
gs
jno
repnz
cltd
sbb
cmp
loop
sub
and
jecxz
decb
jecxz
call
sbb
xchg
push
addr16
ficomps
push
mov
adc
aaa
sub
sbb
cld
jmp
leave
mov
arpl
aaa
mov
or
mov
mov
sti
sub
push
imul
or
mov
mov
jb
sub
push
popa
lahf
icebp
push
sti
loope
sbb
stc
adc
xchg
sub
xlat
dec
xchg
cld
sbb
in
arpl
rorl
icebp
xor
dec
nop
ja,pt
adc
xchg
pushf
sbb
mov
hlt
arpl
dec
lcall
mov
syscall
out
dec
inc
repz
je
outsl
pop
inc
std
jmp
arpl
fiaddl
shrb
mov
sub
sbb
xchg
filds
or
jno
inc
cmc
sub
push
adc
jne
push
or
imul
pop
fucomi
popa
jecxz
dec
outsl
popl
popf
fsubrl
add
sub
repz
xchg
push
mov
stos
in
push
ret
mov
jle
inc
iret
insl
dec
lods
adc
xchg
int
pop
sbb
aam
lds
add
gs
xchg
movsb
mov
bt
jle
fistps
xchg
icebp
sub
mov
ja
sbb
adc
cmpsl
rcrl
fistpll
xchg
inc
xchg
xchg
dec
popa
lret
lret
push
and
imul
sbb
xlat
mov
push
push
cmp
mov
lods
stc
jecxz
hlt
call
sarl
cs
std
xchg
adc
xlat
xor
mov
inc
xor
test
je
sbb
scas
mov
ficompl
jp
mov
cmp
negb
scas
cmpsl
mov
fwait
mov
cs
ror
xorb
mov
test
js
adc
pop
stos
outsb
sarl
jmp
mov
cmc
adc
jl
and
push
adc
mov
lods
fucomp
mov
sub
xor
push
int
push
mov
xchg
addr16
adc
cmpl
jecxz
add
int
sbb
and
sbb
outsl
sbb
test
jnp
adc
sbb
cld
mov
gs
andb
inc
sbb
mov
scas
daa
stos
xlat
xchg
loop
por
inc
sub
jno
ljmp
aaa
cmp
pop
pushf
xchg
hlt
test
imul
fs
lods
cmp
lods
stos
scas
int3
mov
iret
sahf
ja
sbb
addb
scas
pop
sarl
pop
sahf
pop
sbb
dec
cmp
pop
test
sbb
jae
sbb
sub
mov
roll
andb
mov
iret
cmp
cmpsl
sbb
rsqrtps
mov
inc
cmp
mov
loopne
divl
add
es
ret
push
pushl
daa
mov
ret
loope
sub
mov
add
mov
repz
in
push
push
scas
aas
outsl
aam
add
aam
out
cld
lock
in
push
clc
dec
xchg
in
cltd
loopne
in
ret
jb
mov
inc
aam
lcall
cmp
sahf
fidivs
mov
jmp
dec
loopne
push
hlt
fisubrl
pop
cmp
sub
fisubrl
mov
pop
and
mov
shll
pop
sbb
mov
imul
inc
add
dec
xor
je
mov
mov
call
mov
stos
loop
sub
sbb
pop
dec
cwtl
mov
mov
cmc
fucomp
pop
movsb
in
mov
dec
imul
cwtl
jmp
push
aad
pusha
xor
xor
push
cmp
pop
jl
push
mov
sbb
clc
fwait
push
leave
mov
add
push
push
push
cmp
mov
popa
lock
jmp
ja
stc
repnz
mov
in
outsb
div
test
cmc
mov
jne
andb
jle
sub
popf
jns
mov
mov
lret
jle,pn
xor
push
or
sub
dec
mov
sbb
and
in
int3
int3
sarb
add
jl
mov
test
mov
jo
fs
push
mov
popa
stos
sub
pop
inc
add
mov
mov
fisubrl
jns
lret
stc
xchg
xchg
andl
mov
std
adc
or
adc
setle
mov
je
cmp
das
nop
add
xchg
jmp
inc
sbb
cld
dec
add
daa
daa
inc
nop
xchg
int
push
dec
push
xchg
push
pushf
cwtl
pop
sbb
hlt
mov
jg
xor
mov
mov
insb
inc
filds
fwait
jnp
data16
in
xor
cld
outsb
aad
jo
dec
sahf
ds
cmc
sub
lock
sarl
push
sahf
dec
daa
cmp
js
mov
push
int
je
mov
xor
stos
in
sahf
lcall
jb
je
clc
popa
iret
cmp
pop
or
cmpsb
and
jge
lahf
lea
push
test
cld
out
testl
decb
inc
or
mov
lahf
ja
mov
sbb
imul
xchg
sub
test
mov
xchg
lods
in
mov
push
leave
add
sub
out
sbb
xor
pop
pop
ret
sub
icebp
mov
or
sub
push
shrl
jmp
inc
pop
jns
js
adc
ds
sbb
mov
push
mov
xor
pop
push
imul
sahf
cli
push
mov
inc
imul
sahf
xchg
addl
icebp
lds
repz
push
mov
add
xor
jb
and
dec
std
aad
lods
jne
test
rcrb
push
pop
cmp
or
xor
add
loop
jae
add
pop
and
in
mov
pop
jbe
pop
push
and
pop
jnp
dec
push
jns
mov
pop
add
lods
jecxz
mov
fdivl
insl
popl
xchg
xchg
insb
xchg
pop
adc
jo
mov
and
push
adc
mov
mov
movsl
in
jp
xor
mov
in
cmp
jb
jl
jl
xchg
pop
cmc
mov
pop
aam
lret
sti
sub
std
xchg
mov
sti
sbbb
pop
jg
mov
into
push
sbb
mov
addr16
lret
mov
inc
mov
jge
mov
and
test
test
xchg
fwait
and
adc
xor
popf
daa
jns
data16
add
les
leave
std
popa
cmp
lcall
clc
inc
cmp
lea
pop
les
mov
adc
xor
pushl
movsl
out
xchg
adc
testb
or
je
ss
pop
adc
inc
faddl
and
sbbl
or
inc
add
mov
cmp
lea
pop
xchg
jge
scas
push
rcll
shll
fisttps
xchg
mov
stos
xor
int3
hlt
xchg
adc
test
imul
test
or
jns
jnp
idivb
test
pushf
movsb
sbb
xor
repz
xchg
add
jbe
pushf
mov
mov
ljmp
or
in
push
dec
and
decb
push
bound
or
inc
shll
jne
adc
cmp
mov
jg
adc
mov
xor
testb
pop
mov
loopne
fdivrs
fimull
or
xchg
add
cmp
mov
xchg
std
rol
fists
pop
and
in
add
adc
xor
clc
sub
mov
xcrypt-cbc
cmpsl
xchg
jle
sbb
test
filds
aaa
jl,pn
call
add
stc
sub
addb
jb
mov
int3
fcomps
cs
pop
pop
add
inc
add
icebp
es
xchg
in
pushf
sub
incl
movsb
or
js
push
mov
inc
push
push
sub
cli
cmp
shl
lret
movsb
xchg
jae
aaa
rorl
pop
pop
mov
mov
scas
sub
xchg
es
xor
dec
mov
sub
mov
fsubr
test
movsb
shlb
mov
addl
lods
cmp
push
mov
pop
in
inc
xor
sbb
iret
int3
jle
mov
cli
insb
mov
loop
addr16
mov
xlat
or
xchg
pop
fdivs
dec
shld
ror
pop
inc
outsb
aad
popf
adc
ds
or
sbb
xor
mov
add
pop
mov
xchg
mov
fdivr
xor
sbb
pop
out
add
aaa
insl
and
xlat
bound
imul
test
cltd
dec
jo
inc
test
cmp
sbb
xchg
pop
lcall
addb
hlt
scas
rorb
insb
aad
subb
dec
cmpsl
inc
pusha
jle
mov
mov
fimull
cld
ja
sbb
mov
jnp
ljmp
or
leave
lock
cmp
or
shlw
cmp
and
sahf
fisubrl
fstl
xchg
in
push
xor
je
jecxz
add
inc
sub
inc
adcb
push
mov
repnz
inc
repz
aad
and
jl
es
out
dec
icebp
add
push
pop
pop
lret
or
out
fdivr
pop
inc
fwait
push
lcall
cmp
dec
pop
or
jbe
sbb
aaa
out
in
in
xchg
les
inc
xchg
sar
dec
jae
call
inc
cli
mov
push
out
xor
das
in
mov
mov
mov
mov
cmpsb
push
pusha
in
mov
int3
movsl
mov
sbb
ljmp
jp
mov
mov
pop
push
iret
xchg
jb
das
incl
jp
push
xchg
xor
xchg
call
mov
cld
or
mov
mov
push
lahf
pop
rcl
aam
in
xlat
and
jae
cmp
or
test
cmp
mov
sti
int
je
mov
cli
lret
ficoml
flds
cmp
push
mov
or
mov
inc
lods
fsts
in
cld
sbb
or
lods
das
test
popf
jns
or
mov
ret
push
adc
push
fs
sub
jne
pop
xor
fs
fistpll
pop
ret
jp
lock
mov
mov
repnz
test
orb
es
inc
shrl
adc
xor
int3
xor
fs
shll
add
fadds
cmpsl
adc
xor
es
inc
scas
cmp
push
mov
push
cld
test
add
lea
imul
cltd
fisubl
push
ret
in
jnp
or
jbe
or
sbb
stc
mov
inc
mov
cmc
add
out
test
push
xchg
mov
dec
mov
loop
pop
push
arpl
notb
dec
xchg
lds
cltd
fcoml
mov
mov
cmp
push
adc
pop
push
mov
xchg
cmpsl
mov
repnz
adc
and
stos
mov
cmp
mov
mov
xchg
sarb
pop
mov
cmp
dec
pop
movsb
xchg
sbb
aam
xor
jmp
aas
and
pop
insl
call
add
push
inc
dec
push
fwait
sbb
sbb
sahf
repnz
jecxz
xchg
cmp
es
pop
inc
ss
sbb
nop
xor
pop
subl
pop
sub
pop
lret
or
mov
rorb
in
orb
pop
push
pop
inc
stos
les
mov
add
arpl
pop
sbbl
push
jb
cwtl
adc
fistl
call
xor
icebp
inc
popa
xchg
push
cs
stc
int3
sti
xor
clc
fwait
mov
xchg
imul
js
add
jne
ja
jno
and
enter
ds
mov
xchg
pop
orl
mov
jp
mov
lret
sbb
int3
mov
xchg
jbe
cld
loop
push
or
pusha
push
call
jns
cmp
mov
hlt
mov
in
inc
jb
sti
rorl
scas
push
cmp
push
xor
sti
pop
sti
xchg
xchg
pop
test
xchg
idivl
mov
mov
adc
lret
roll
cmp
pop
out
sbb
lods
lahf
movsb
add
xor
xor
or
cmp
in
add
test
add
pop
lcall
adc
cld
inc
mov
shll
jno
add
push
mov
imul
rorl
push
fadds
aaa
stc
jg
inc
mov
cmp
or
jo
add
push
xchg
in
xlat
iret
mov
out
push
ss
lcall
xchg
sbb
sub
push
cmp
aas
loopne
mov
out
push
repz
fwait
sub
arpl
adc
les
jl
scas
test
or
lea
dec
lea
xchg
cmp
xor
mov
rcr
repz
lock
cvtps2pd
xchg
xchg
and
sbb
fnsave
push
int
jecxz
stos
sub
cs
mov
test
adc
fs
pop
imul
dec
push
and
mov
aaa
mov
inc
lret
mov
shrl
mov
adcl
ljmp
mov
sub
scas
xor
and
arpl
ja
das
dec
mov
out
mov
ficoms
mov
sbb
adc
lods
xor
out
or
push
stos
mov
and
cmp
test
mov
jle
cli
jle
xchg
mov
push
jns
loopne
xchg
and
arpl
cs
daa
pop
cmpb
cli
pop
xor
pop
mov
mov
or
scas
xor
push
popf
adcl
pop
sbb
jge
rcr
mov
ss
loop
scas
jns
aaa
and
dec
data16
sbb
insl
imul
cli
mov
xor
pop
add
mov
ss
cmpsl
repz
mov
cli
stc
lds
gs
xchg
clc
push
xchg
mov
rcrb
test
mov
scas
pop
in
stos
jno
fidivrl
mov
jns
xchg
cmp
fcoml
scas
js
lret
lods
cmpsl
jmp
push
jp
fisttps
leave
inc
cmp
movsl
pop
js
data16
pop
add
or
rcr
jno
or
jp
xor
mov
or
aas
repnz
int
jbe,pt
out
leave
fcmovne
jl
mov
stc
or
imul
incb
jp
bnd
gs
dec
mov
adc
mov
les
inc
mov
xchg
insl
test
dec
mov
ret
or
mov
jno
fucomi
or
lock
pusha
push
rcll
test
imull
js
enter
xchg
imul
sbbl
jo
jo
popa
jecxz
xor
cmp
andb
nop
dec
das
sbb
mov
in
xchg
div
loope
xchg
adc
mov
lret
cmp
pop
xchg
pop
mov
or
push
insb
cmpsb
xor
xchg
test
jns
dec
inc
out
cmp
js
movsb
dec
dec
pop
inc
movsl
cltd
shll
pusha
out
dec
lds
enter
fwait
and
dec
mov
and
fmuls
rcrw
sbb
out
or
pop
xor
out
gs
movsl
aaa
clc
sbb
adc
leave
addr16
dec
repz
inc
cli
lsl
mov
push
add
push
sub
xchg
int
jecxz
jbe
sbb
jo
fucomi
mov
xchg
out
jp
and
js
stos
push
fs
xor
shl
jle
in
ljmp
lea
ficoms
mov
jns
xchg
cmc
sbb
in
xchg
xor
test
and
btc
adc
pop
stos
syscall
movsl
inc
jbe
xor
push
jl
in
out
clc
or
xchg
sbb
clc
in
sahf
outsb
jle
fs
push
pusha
ss
jno
push
icebp
add
sbb
xchg
or
scas
adc
sahf
cwtl
int
sbb
and
sar
paddd
outsl
and
es
xchg
xor
xlat
leave
xchg
sti
mov
sbbb
insb
in
mov
jne
pop
jbe
int3
ss
fidivrs
pmulhw
ja
lret
and
dec
or
fidivl
lret
xor
dec
xchg
lret
dec
imul
mov
pop
sahf
xor
mov
jle
and
pushf
mov
mov
push
inc
arpl
mov
repnz
aas
pop
mov
cmp
into
repnz
fisubl
lock
std
es
jl
and
ret
xchg
add
ja
rcr
bound
pushf
stc
test
pop
movsl
mov
push
mov
xlat
xor
in
loope
bound
bnd
adc
lea
sbb
test
out
imul
imul
add
or
into
cmc
adc
cmp
shl
sub
mov
xlat
pop
pop
pop
je
inc
sbb
mov
xchg
movsl
jo
and
add
mov
push
hlt
or
mov
pop
das
lret
lds
jb
mov
adc
mov
xlat
adc
jg
pop
outsl
cmpsl
out
add
xchg
lahf
adc
push
xor
loope
lahf
in
iret
sub
cld
sbb
jbe
sub
repz
jmp
movsb
dec
inc
sti
push
dec
popa
ror
aam
in
xor
add
cmp
aas
cmp
jo
xchg
jmp
inc
add
rcll
sub
mov
push
or
cmp
or
or
mov
jecxz
and
shlb
jecxz
pop
and
add
mov
mov
mov
es
pop
mov
ret
xor
inc
mov
mov
aam
inc
mov
adc
mov
add
stc
pop
mov
dec
mov
jne
rcrl
outsb
or
sti
mov
mov
adc
pop
mov
arpl
aaa
dec
sub
imul
cmovge
xchg
fcmovbe
inc
dec
mov
cmp
fisubrs
pop
addr16
push
lcall
fs
popf
iret
mov
add
test
lret
scas
mov
and
into
out
mov
cmp
mov
adc
loopne
adc
in
bound
sti
fwait
scas
jmp
fs
addr16
sbb
fadds
enter
xchg
xchg
dec
divb
xlat
mov
jl
or
out
movsl
aaa
xchg
insb
rclb
call
xchg
bound
jge
mov
mulb
sbb
inc
xchg
fincstp
or
out
adcl
les
cmp
arpl
daa
in
inc
mov
fisubrs
adc
jle
sahf
and
test
sub
cld
dec
ds
movsl
push
lahf
mov
mov
fnsave
lock
push
sbb
lods
sub
lods
mov
filds
pop
outsb
dec
rorb
shlb
pop
ds
shlb
cs
mov
dec
push
jns
mov
enter
pop
xchg
addl
jo
adc
addr16
bound
in
arpl
lret
dec
pop
sub
and
movsl
xchg
test
pop
insl
xor
sbb
mov
dec
pop
xchg
mov
or
lret
xchg
lret
mov
jmp
cltd
jne
mov
mov
pop
cmp
sub
pusha
bound
mov
sub
ss
or
popa
fldl
dec
aaa
cmc
xchg
pop
fmul
push
pushf
mov
jecxz
fcmovb
sub
add
fcomps
lock
hlt
and
and
mov
nop
mov
or
add
cmp
popf
sub
mov
stos
pop
jbe
cmpsb
stc
pop
pop
adc
imul
pop
fisttps
outsb
data16
std
push
pop
add
push
push
sub
mov
shr
jne
notb
jecxz
js
xor
adc
stos
repnz
xchg
movsl
dec
xchg
lcall
sbb
xor
loop
sbb
sub
add
push
pop
push
cmp
insb
sub
mov
push
sbb
loopne
pop
mov
or
mov
loope
jns
add
imul
mov
in
decb
and
xor
mov
repnz
movsl
insb
mov
mov
jle
and
mov
pop
mov
mulb
call
and
pop
fxch
imul
and
int
lock
pop
mov
test
or
shrl
push
push
mov
sub
insb
add
mov
xor
mov
cli
sarl
popf
in
mov
out
nop
pushf
push
scas
push
mov
sub
insb
rolb
cmc
push
in
jge
push
ljmp
test
ret
fwait
cltd
sub
mov
mov
pop
out
pop
repz
fsubrl
lods
adc
in
call
cltd
or
rcll
movsl
mov
jl
mov
out
xchg
insl
jmp
mulb
insb
mov
mov
lods
loopne
push
push
sbb
dec
sarb
or
lret
push
add
mov
stos
ds
mov
sub
sti
leave
cli
and
call
repz
jne
xor
push
dec
call
jg
cld
push
outsl
xchg
add
hlt
pusha
lds
pop
test
filds
inc
pop
pop
lds
dec
stos
or
cmc
xor
jae
call
ret
ss
xor
mov
in
lods
adc
stos
xchg
jo
xchg
hlt
push
stos
inc
repz
mov
imul
ss
sbb
ret
dec
mov
xchg
mov
jecxz
pop
enter
stc
adc
adc
adc
add
push
test
inc
pushl
fmul
add
insl
test
adcb
push
sarb
inc
jmp
movsb
daa
sub
inc
jmp
dec
cmp
clc
lret
rclb
rol
mov
add
ficomps
int
movsl
fcoms
dec
in
and
popa
shrb
scas
adcl
arpl
ficomps
les
adc
repnz
stos
popf
dec
das
push
jl
or
cmpsl
pop
hlt
ror
imul
sbb
insw
orl
test
pop
jmp
inc
testb
xchg
out
mov
pop
fbstp
xor
push
or
ret
mov
sbb
js
sub
rol
gs
clc
mov
idivl
sti
cmp
mov
loopne
jecxz
mov
inc
xchg
add
or
push
jecxz
pop
inc
mov
shr
out
jns
push
sahf
fcomps
lahf
lahf
inc
jecxz
xchg
jmp
push
xchg
jno
mov
out
inc
cli
or
xchg
dec
ljmp
add
cmp
addr16
repz
sub
repz
mov
in
shrb
shlb
cmpsb
inc
cmp
sahf
push
shl
sub
loopne
xchg
les
pop
mov
pop
dec
divb
andb
add
lcall
mov
out
cmp
scas
fildl
repnz
fidivrs
mov
and
mov
repnz
cmpsl
xchg
add
adc
cli
dec
and
arpl
ret
data16
xor
or
stos
mov
int3
orb
arpl
push
cmp
add
sahf
fildll
lock
mov
out
adc
xchg
pop
jne
cmpsb
dec
xorb
mov
sub
insl
outsl
jne
sub
or
ret
stos
fldt
mov
loope
mov
call
add
enter
cmp
paddw
jge
mov
inc
xor
stc
ljmp
cmp
push
push
cmpsl
pop
leave
sub
xchg
divb
js
mov
outsb
push
pop
xchg
outsl
xchg
clc
pop
xor
shlb
popf
call
nop
jp
jb
mov
dec
or
xor
shr
sub
lea
adcb
cmp
pushf
sub
and
push
xor
outsl
push
fdivs
es
pop
lds
mov
and
popa
into
jnp
cmpsb
xlat
stc
clc
jl
fs
sub
sub
fistl
mov
mov
xor
mov
xchg
out
movsl
sbb
lods
xor
dec
aad
cmpsb
adc
aam
lahf
push
mov
mov
inc
popa
enter
xchg
outsb
outsb
aad
cwtl
sbb
cmpsl
call
fucomi
loopne
cmp
xor
outsl
stos
xchg
rorl
pop
test
dec
aam
les
xchg
arpl
pop
xchg
adc
mov
scas
out
ja
pop
pop
jmp
test
rolb
lods
pop
inc
fcomps
mov
je
pop
inc
xlat
adc
cmp
add
xor
mov
xchg
lea
ret
das
icebp
pop
sarb
ret
pop
loop
aaa
sub
repnz
push
faddl
movsb
int
das
or
shl
mov
or
ds
push
lahf
lcall
pop
fstps
xor
adc
mov
mov
push
nop
or
xor
inc
pop
xchg
or
mov
jle
ds
fdivl
popa
es
ss
test
push
ret
push
xchg
mov
dec
lahf
dec
xchg
loopne
xor
xor
outsb
iret
incl
outsl
fdiv
aam
or
mov
movsl
xchg
in
out
es
mov
into
xor
lock
mov
ret
xchg
stos
test
jb
mov
neg
repz
lcall
cmc
jl
ret
or
test
arpl
dec
xor
out
pop
mov
pop
xor
pop
add
jmp
jne
cmpsb
icebp
pop
nop
or
dec
hlt
nop
inc
dec
push
out
shll
imul
daa
test
popa
aas
mov
shl
fildll
add
movsl
clc
imul
insl
movsl
sbb
bound
andl
pop
rcll
std
xor
jp
push
mov
lds
jg
les
mov
mov
mov
xchg
lods
es
mov
inc
mov
jno
mov
push
dec
mov
popa
mov
add
lahf
loopne
inc
xchg
leave
in
xchg
add
inc
fs
fldcw
ret
dec
inc
in
je
clc
das
sub
pop
mov
sti
aas
sub
out
hlt
jns
xorl
jge
mov
out
loop
cmp
inc
mov
xor
jo
push
mov
xor
shlb
nop
or
movsb
js
xchg
lcall
in
roll
test
sub
jo
into
insb
xor
xchg
sub
out
mov
mov
mov
cmpsl
xchg
dec
ds
jecxz
jno
pop
mov
in
add
xchg
jge
jmp
popa
and
cltd
mov
mov
std
ret
icebp
sub
or
jno
daa
xor
mov
scas
xor
xor
sbb
mov
pop
hlt
dec
xor
pop
jp
sub
mov
aaa
mov
dec
fnsave
jnp
jg
test
jbe
aas
hlt
shrl
pop
mov
adc
push
lods
add
test
mov
imul
xor
inc
inc
mov
dec
movsl
dec
sbb
jne
mov
lahf
call
push
adc
and
popa
pop
outsb
push
inc
dec
fisubl
inc
and
mov
xchg
fidivs
and
cld
xor
mov
loope
push
mov
rolb
sti
mov
ret
insb
mov
mov
sub
mov
cmp
lea
cmp
xchg
decl
push
sbb
movsb
mov
push
stos
jnp
sub
dec
xchg
out
mov
pop
aaa
rorb
loop
in
dec
in
loop
cmpsb
lcall
push
inc
fsubp
mov
adc
cmp
fcoml
repnz
dec
fldcw
push
sub
inc
mov
test
or
mov
pop
movsl
xchg
out
int
dec
inc
sti
mov
or
inc
xor
jg
jmp
nop
fs
push
in
insl
cltd
mov
cltd
sbb
mov
mov
push
test
pop
cmp
dec
lcall
cmpl
ja
shl
cmpsb
mov
sbb
inc
mov
xor
ret
and
adc
pop
outsb
fidivrs
xor
je
in
sti
in
jle
push
push
adc
cwtl
pop
out
nop
ja
mov
jmp
and
je
jno
jl
arpl
testl
or
lea
and
mov
adc
imul
cmp
stos
loope
dec
subl
xor
pop
cli
xorl
repz
cmp
jno
in
ljmp
cmpsb
jns
aam
sub
mov
jmp
mov
mov
xchg
mov
mov
push
gs
aad
mov
jae
scas
divl
addr16
mov
adc
add
or
sbb
push
sbb
pop
xchg
xchg
sub
push
insl
mov
das
cmp
cmp
xor
sbb
inc
and
push
fdivrl
sub
divl
push
xchg
mov
push
rorb
mov
dec
push
sbb
or
mov
stos
enter
dec
xchg
out
jae
jo
in
xor
pusha
loope
jle
or
div
xchg
and
mov
loope
mov
mov
sbb
fisttpll
popf
jp
xchg
mov
inc
or
xchg
mov
xchg
daa
jb
xchg
adc
jne
or
inc
es
mov
add
rorl
and
inc
int3
hlt
mov
pop
dec
jo
cmp
add
aas
scas
mov
jg
adc
sub
mov
rclb
xchg
es
mov
add
shrb
or
stos
push
mov
fxch
cli
sub
stos
out
dec
xor
push
add
jp
fcmovnbe
dec
clc
decl
pop
dec
add
pop
mov
lods
in
push
fcomps
push
xchg
popa
jg
rcll
xor
insl
mov
pop
jle
imul
push
dec
lds
call
cwtl
and
stos
test
loope,pn
jb
jp
leave
xchg
ss
fwait
cmpsl
xlat
into
mov
lea
in
mov
dec
push
jecxz
in
jns
xor
mov
js
xchg
int3
mov
cmp
pop
or
mov
js
mov
sbbb
and
sar
ds
sub
xchg
pop
sub
ret
dec
outsb
test
cld
sub
adc
jmp
sbb
sahf
adc
repz
sbb
and
mov
cmp
enter
or
mov
fistpll
sbb
xchg
push
push
and
xchg
cld
ret
mov
push
in
jmp
add
jp
stc
lcall
pop
sbb
sub
mov
roll
sub
enter
jo
sar
push
add
mov
icebp
jmp
aam
push
and
cltd
mov
in
dec
fstpt
xor
loop
xlat
cli
sti
mov
mov
push
fsubrs
sub
lcall
mov
leave
hlt
jae
shlb
xor
jl
and
sbb
inc
clc
mov
imul
aaa
mov
inc
inc
jb
insl
jbe
movsb
sbb
addr16
cs
jge
aad
negl
adc
shll
adc
sbb
mov
jns
mov
cmp
jl
add
pop
cld
sub
sub
clc
jns
cltd
mov
lea
sahf
and
jg
inc
sub
inc
mov
test
cmp
lds
dec
test
cmp
lret
xchg
jl
adc
popf
rorb
mov
push
bound
push
test
mulb
cmpsb
popf
jp
fiadds
pop
rcrb
ret
mov
mov
adc
pop
jecxz
fisttps
cs
in
mov
mov
pop
xchg
lods
and
dec
scas
subl
jo
mov
add
and
outsl
in
xor
add
cmp
in
js
lret
mov
sbb
xchg
test
movsb
dec
inc
mov
sbb
adc
mov
mov
cmp
jae
xlat
fadds
or
and
pop
pop
cs
and
adc
lahf
cmp
rol
dec
ret
mov
push
lret
ss
sub
loopne
lahf
int
js
in
xchg
xor
and
sub
cmp
movl
xchg
jo
call
sub
jno
jge
push
insl
fnstenv
leave
fistps
loope
fscale
push
pop
adc
inc
rcll
cmc
jl
dec
jge
adc
into
mov
pop
inc
inc
shll
xor
aas
scas
and
ds
mov
xchg
sub
jmp
or
jb
fsts
aaa
cmp
aaa
stc
andb
or
stos
mov
mov
lock
loop
xchg
les
push
mov
lcall
and
xor
jmp
stc
imull
xchg
mov
cmp
out
fnstcw
sub
inc
and
cmpsb
mov
test
test
push
mov
inc
js
pop
movl
arpl
pop
sbb
mov
mov
orl
orb
out
mov
leave
push
sbb
mov
push
add
sarb
jmp
gs
enter
and
sub
mov
popf
jle
ja
push
pop
test
cmp
insl
shll
lea
mov
fnstenv
add
pop
sbb
iret
out
cmpsb
test
inc
jno
lds
mov
ljmp
fiadds
mov
dec
roll
sub
xchg
movsl
mov
add
loopne
imul
adc
mov
cmp
ja
and
jecxz
cltd
push
int3
call
ljmp
sub
fisttpl
test
repnz
sbb
mov
sahf
dec
rcrl
jnp
sti
ffree
std
and
shr
add
fsubrp
sbb
fldpi
sub
pop
into
cmc
or
imul
mov
imul
mov
add
xchg
clc
loopne
lret
call
mov
jns
sbb
jmp
xchg
jge
sub
ret
jecxz
lods
cltd
mov
add
or
rorb
dec
insb
add
push
mov
jae
or
nop
push
jae
ss
dec
and
cmp
dec
das
test
pushf
add
xchg
stos
push
and
adc
inc
outsb
and
insl
insb
outsl
aad
outsl
wrmsr
cmc
jmp
cmp
xor
xor
sub
cmp
shl
jge
dec
flds
js
fwait
pop
addr16
xchg
sub
xor
add
lcall
imul
jns
shl
out
sbb
mov
je
aam
inc
pop
ss
pop
add
pop
jmp
xor
xor
dec
mov
xor
mov
mov
and
cmpsb
pusha
aad
lods
sbb
mov
into
push
sub
fistl
sbb
fisubs
pop
imul
or
loop
xor
addr16
into
fsubs
pop
pop
mov
inc
push
jno
or
rcrl
int
pop
fmull
jle
lahf
test
sbb
jmp
divb
dec
jg
les
pop
cli
loop
out
jo
je
cmp
xor
popf
fdiv
sbb
je
pop
clc
mov
scas
out
cld
insl
rclb
scas
jb
mov
out
aad
sub
hlt
in
clc
gs
mov
sub
test
repnz
pop
inc
test
sbb
mov
in
gs
cld
sub
in
xchg
jle
idivl
push
cld
das
inc
out
mov
push
xacquire
call
mov
in
and
sbb
jbe
scas
inc
push
shll
mov
jb
iret
scas
lret
mov
cmp
cmc
sahf
repz
xor
shll
leave
xchg
popa
iret
mov
xchg
fucom
mov
nop
andps
mov
stos
sbb
pop
adc
mov
jne
clc
add
xchg
xchg
test
repnz
push
pshufw
mov
shl
fdivrs
mov
cmovbe
inc
add
addr16
push
test
ret
sub
push
cmp
adc
jp
mov
dec
shl
sub
pop
sbb
aas
pop
es
xchg
mov
cld
loop
jae
fldl
push
in
divl
dec
inc
rcr
and
les
add
pop
jae
popa
xor
outsl
sbbb
popf
mov
roll
add
jb
pmaxub
fwait
mov
ds
inc
mov
mov
jl
addr16
imul
cmc
lcall
int
pop
xchg
rcl
out
pop
push
insl
icebp
adc
lea
stc
sbb
roll
ds
adc
loope
mov
int3
fwait
pushf
bound
xchg
or
addl
and
jmp
cltd
pop
jmp
and
std
mov
incl
js
movsl
pop
xchg
popa
dec
mov
mov
jg
fcomi
or
sub
cmpsl
dec
imul
inc
das
mov
dec
push
or
and
test
jno
xor
add
lahf
inc
data16
sub
cmp
or
mov
insb
cmp
psubusb
or
cltd
inc
inc
dec
and
pop
xchg
push
xor
or
daa
sub
push
stos
inc
push
dec
or
aad
rcrl
outsb
sbbb
and
fiaddl
sub
test
and
outsb
inc
ret
lods
or
fsubs
insl
aas
push
pop
sbb
xchg
jnp
sbb
cmp
popf
iret
cmp
mov
lcall
sti
jns
outsl
sub
inc
mull
dec
pop
dec
pop
and
int
sti
mov
adc
jno
and
in
icebp
xor
pop
clc
sub
and
xchg
jbe
push
jb
enter
push
mov
icebp
xchg
xchg
mov
repnz
mov
mov
pop
ds
cmp
ret
sub
and
ret
inc
dec
daa
aas
pop
jnp
pop
loop
xchg
std
sbb
pop
sub
xor
insl
pop
fstps
cmp
add
mov
add
addl
mov
bound
addr16
cs
push
xor
mov
xorb
fcmovu
jbe
cmc
out
sbb
dec
and
lock
add
in
sti
fimuls
xor
das
xor
outsl
mov
lret
mov
sti
sbb
int
fnstcw
dec
lds
lret
movsb
mov
dec
cmp
in
push
push
js
sahf
mov
jle
pop
lahf
in
lcall
pop
lock
test
mov
rcrl
icebp
sarb
push
inc
adc
incl
pusha
lea
pop
dec
shlb
into
and
push
cmp
push
cmp
mov
or
vpsubusb
cmp
dec
out
mov
cli
aad
dec
cmp
cmp
repnz
cs
notl
into
ret
mov
cmp
pop
addb
enter
in
imul
sub
or
fisttps
mov
push
add
mov
mov
pop
or
loopne
push
scas
scas
mov
roll
jne
imul
sub
lcall
pop
push
xchg
adc
push
xlat
idivl
ret
xor
and
xchg
dec
jle
lcall
daa
testl
jmp
mov
shl
cwtl
aaa
or
sub
lock
xor
dec
es
push
imul
es
pop
add
jmp
jmp
sub
clc
add
jge
xchg
jl
rcll
inc
jge
popf
xor
lcall
or
sbb
inc
or
pop
smsw
outsl
cmp
push
aas
cmp
insb
out
daa
repnz
cs
shlb
ljmp
sbb
xor
bound
cmp
std
jne
jno
stos
rcrb
mov
and
loop
adc
jns
or
adc
in
mov
mov
pcmpgtw
mov
shlb
popf
mov
out
mov
dec
sbbb
inc
or
stc
cltd
push
pop
int
pop
repnz
lods
cmp
pop
sbb
mov
mov
xchg
push
nop
dec
stos
lahf
mov
test
test
mov
add
xchg
ljmp
ss
les
ret
adc
sub
jmp
mov
xlat
mov
out
gs
shlb
mov
stos
sbb
mov
xor
adc
out
dec
cld
pushf
lods
or
adc
cli
mov
xchg
rcrl
xchg
out
imul
inc
shr
jno
and
mov
mov
push
sub
dec
push
add
arpl
je
aam
std
cmp
aaa
jne
int3
dec
mov
pop
imul
lret
mov
cmc
jp
mov
pop
or
xor
inc
lock
pop
add
or
add
sub
jl
fiadds
sarl
ljmp
clc
jl
or
fdiv
out
xchg
cltd
int
pushf
xchg
out
add
movsb
insl
orl
mov
and
loopne
mov
pop
lahf
push
clc
mov
mov
imul
push
lret
or
mov
mov
mov
or
mov
les
repnz
sub
ficomps
aas
add
cmpsb
fwait
xor
dec
jb
out
decb
or
into
xor
push
sahf
fidivrl
inc
popa
aad
fisubl
jecxz
loopne
xor
icebp
dec
dec
fwait
loope
testl
in
xchg
and
cld
aas
mov
xlat
adc
test
insl
dec
addr16
add
push
test
test
lahf
mov
inc
push
add
mov
xor
fcomi
fstpl
mov
xor
xchg
lods
mov
int
jecxz
roll
es
mov
xchg
inc
mov
dec
test
outsb
insb
sub
or
in
fisubl
jmp
sub
cwtl
jno
cmp
push
int
in
xchg
pusha
mov
add
or
jne
je
rcl
out
hlt
jbe
loope
or
or
scas
icebp
leave
inc
pop
lahf
jp
inc
jg
fadds
fisubrl
in
maxps
adcb
leave
adc
cli
outsb
xor
or
pop
shll
sbb
and
inc
bound
mov
popa
adcl
insb
cmpsb
pop
pop
mov
mov
xor
jp
mov
pushf
jne
xchg
fadds
jbe
add
fcom
jle
je
mov
scas
and
mov
push
daa
ljmp
and
and
lods
lods
mov
imul
insb
gs
cs
or
dec
dec
sub
mov
jge
daa
cmp
cmp
ja
movsl
aam
test
push
in
mov
push
loope
inc
in
mov
movsb
push
dec
sub
and
mov
sbbb
cmp
xor
shl
push
jno
sub
xor
pop
xchg
data16
leave
scas
cli
cmp
push
lods
mov
out
stc
loop
sti
sub
mov
xor
lret
shr
fldl
or
ss
fs
mov
in
jnp
pop
and
sub
push
fsts
cmpsb
les
pop
jmp
loopne
mov
ds
add
and
lock
cmpb
loopne
jb
insb
das
pop
scas
iret
imul
mov
and
lret
add
aam
mov
iret
push
mov
pop
or
jg
jmp
dec
push
mov
adc
xor
bound
adc
loope
xchg
xlat
dec
lods
iret
inc
push
notl
repnz
adc
jns
lods
lock
jle
mov
lret
mov
sub
jae
xor
mov
cmpsb
ud0
test
push
inc
push
out
mov
in
jle
mov
loope
faddl
xor
lret
mov
cmp
jge
loopne
mov
lods
adc
and
pusha
jp
adc
stos
lahf
enter
fimull
jbe
jo
pusha
js
and
sti
and
xor
lahf
fscale
clc
fidivs
mov
cmp
insl
lcall
xlat
out
popf
cmc
adc
cmp
popa
jle
xchg
jbe
jl
adc
loopne
movsl
and
out
xorl
adc
subl
cmp
and
in
jl
adc
shlb
hlt
fnsave
in
gs
scas
and
cmp
or
aaa
jge
es
mov
mov
sub
dec
es
xor
mov
addr16
int3
cmp
mov
xor
mov
ja
cmp
ss
imull
sub
lods
ds
out
mov
mov
add
cmp
xor
arpl
mov
daa
jge
insb
out
jl
or
imul
lods
rclb
xlat
cmp
repnz
cmp
jmp
lahf
insl
int3
inc
push
test
ret
fdivl
pop
movsl
orl
std
fsubrs
into
shrl
mov
mov
or
xchg
dec
inc
movsb
cmp
jo
sub
dec
or
icebp
xchg
hlt
xor
xor
add
stos
sarb
and
lahf
test
mov
sahf
sbb
pop
mov
insl
addr16
test
xchg
sub
or
sbb
add
movl
sarb
pop
xchg
rorb
subl
aad
pop
sub
scas
mov
add
inc
test
lods
push
dec
fucom
adc
cmovg
stc
adc
loope
outsl
sysenter
or
out
call
xorb
dec
leave
out
sbb
jge
jg
aaa
inc
ja
sbb
cld
push
cmpsl
fisttpl
or
mov
stc
insl
repnz
adc
je
jae
inc
jne
mov
lcall
cld
mov
inc
mov
and
outsl
mov
js
sarl
test
dec
push
cmp
mov
xchg
add
jbe
les
cmp
inc
xchg
push
jae
mov
out
jp
lds
sahf
leave
inc
lods
jle
test
call
enter
fidivs
inc
adc
iret
outsl
mov
adc
and
mov
xlat
sete
xlat
dec
fisubrl
cltd
dec
ljmp
arpl
mov
inc
mov
push
out
addr16
aaa
adc
sub
jg
in
cmp
mov
mov
or
cltd
and
shlb
xchg
out
aam
jle
sbb
nop
stos
inc
mov
fsubrs
adc
or
test
cmp
mov
add
std
lods
push
out
mov
aas
dec
fistl
sbb
push
xchg
push
out
inc
mov
or
pop
jmp
inc
std
test
sbb
stc
rorw
push
dec
test
push
imul
inc
xorb
into
outsl
test
pusha
jo
and
mov
test
xor
inc
cmpsb
add
mov
int
test
sbbb
mov
movsb
and
shlb
and
and
jnp
imul
push
imul
push
cld
inc
jnp
sarl
sub
adc
cmc
mov
loopne
mov
adc
aaa
ja
dec
test
enter
scas
or
stos
rorl
push
aad
sub
sar
ss
fisubs
push
clc
and
jns
out
cltd
mov
popa
lods
jecxz
fnstsw
arpl
cltd
sahf
sub
pop
push
mov
test
andb
stos
push
mov
adc
jp
mov
stc
jo
cmp
mov
iret
cmpsl
cwtl
jmp
insl
push
cmc
pop
leave
ds
lret
or
pop
adc
aaa
fsts
loop
mov
adc
inc
push
push
sar
adc
inc
sub
dec
jle
test
orb
lret
inc
adc
shrb
inc
mov
int
add
ds
outsb
sbb
shlb
cmp
sub
sbb
cmp
dec
dec
out
pop
ret
inc
xchg
xchg
mov
jg
mov
sub
sub
cmc
xchg
nop
cmp
xchg
mov
icebp
xorps
outsl
ret
cmp
jo
loopne
ffree
cli
mov
aas
in
mov
out
daa
xchg
push
cwtl
dec
fwait
sarb
mov
mov
push
scas
or
pop
lea
adc
call
xchg
mov
inc
pop
add
sti
dec
sub
lock
pop
push
out
push
pop
jnp
or
in
nop
out
leave
adc
fcomps
scas
adc
xchg
inc
xchg
mov
fs
lahf
adc
andb
or
hlt
pop
in
add
ficoms
sbb
dec
insl
dec
dec
mov
mov
jg
xchg
dec
cltd
je
dec
ja
push
jp
push
adc
das
fdivp
dec
adc
push
inc
inc
xor
mov
addl
sub
mov
push
cmc
pop
add
mov
cmpsb
mov
fistpll
outsb
cmc
and
and
shll
lea
cli
enter
and
insb
lret
sbb
mov
aas
xor
sbb
mov
xor
mov
hlt
mov
int3
jmp
xchg
push
fildll
xchg
icebp
ret
push
xor
push
or
or
inc
cmp
sub
cwtl
lds
or
push
push
aam
scas
xchg
lods
cmp
arpl
lock
jne
mov
daa
sahf
cld
arpl
mov
leave
pop
pop
sub
fxch
ljmp
push
add
adc
pop
daa
jns
mov
sub
mov
pop
lahf
dec
jb
stos
cmpsl
int3
mov
nop
sbb
xor
je
sub
pusha
popa
and
pop
lret
scas
jp
inc
jo
jne
or
data16
ja
and
ljmp
push
jl
push
fldl
hlt
aam
pop
mov
lret
inc
xor
mov
mov
jb
xor
add
xchg
mov
test
inc
lock
xor
pop
mov
dec
aam
or
mov
cmpsb
cmp
scas
das
dec
movsb
aaa
lock
cmp
add
cs
adc
rcr
pop
lea
mov
gs
sbbl
popf
test
sahf
add
icebp
push
push
shll
es
jle
pop
or
scas
enter
jg
dec
pop
insb
add
orl
jecxz
das
xchg
aad
inc
pop
loope
out
mov
aad
cs
xor
mov
into
push
popf
or
or
in
jmp
out
jmp
orl
test
push
mov
rcrl
movsl
shrl
cmpb
mov
popf
xrelease
std
sbb
in
arpl
jo
dec
adc
std
data16
jnp
and
movsb
xchg
xchg
cmp
cmpsb
xorl
or
xor
outsl
mov
or
das
call
test
mov
cmp
sub
sbb
ret
daa
subb
mov
add
add
repz
aad
andl
sub
ds
lods
aam
mov
mov
rol
adc
je
mov
mov
dec
adc
movsb
lods
xchg
adc
lods
ret
leave
cmp
lock
mov
xor
bound
cmp
in
repz
fistpll
mov
test
or
mov
scas
je
bound
cmpsl
enter
scas
out
out
imul
sub
bnd
pop
inc
mov
clc
mov
ret
push
daa
xor
fcmovb
enter
movsl
add
in
mov
cmp
fwait
loopne
and
fdivp
add
imul
and
inc
push
insl
roll
cwtl
dec
aas
dec
cmpsl
scas
shl
xor
lret
mov
scas
jp
xlat
sbb
cmp
ds
pop
aaa
inc
and
fistps
sub
mov
or
push
imul
add
sbb
fucomi
xchg
fistpll
lahf
dec
cltd
cmpsl
xchg
stc
shll
lods
mov
and
jae,pn
cmp
cmp
mov
inc
ljmp
sub
push
add
cmp
data16
leave
cwtl
cmp
ja
lds
adc
or
adcl
or
jns
out
mov
das
pop
ret
call
push
sbb
inc
jecxz
push
cmp
mov
ljmp
out
and
scas
sbb
mov
lds
orl
mov
cmp
jge
shr
xor
negl
cli
xchg
sbb
pop
sbb
divl
mov
add
lods
or
mov
jp
xlat
aad
std
cwtl
dec
sbb
insb
dec
out
call
lcall
sbb
mov
push
mov
adc
aas
xchg
cmpsb
out
inc
inc
jnp
push
stos
inc
push
and
sbb
lret
mov
push
mov
iret
out
stos
fisubs
xchg
cmp
in
inc
cmp
jns
dec
xor
ffreep
push
jp
pushf
sbb
xchg
stos
cmp
insb
push
into
mov
bound
in
and
in
daa
paddsb
push
push
lea
mov
cmpsb
aaa
sahf
adc
push
inc
into
pop
sbb
test
ss
mov
mov
test
pusha
and
sbb
push
popa
es
shl
jle
adc
xchg
loopne
push
mulb
repz
daa
outsl
mov
lret
test
jecxz
pop
jo
js
aam
mov
or
push
jl
jmp
push
sub
adcb
sahf
inc
aaa
es
mov
stc
daa
and
es
inc
pop
sti
mov
leave
in
imul
sbb
push
cmpsb
nop
jecxz
dec
inc
adc
out
xor
cmp
jbe
mov
cmp
lret
pop
inc
dec
fiaddl
test
loope
into
data16
int3
cmp
inc
ret
das
mov
jle
cli
pop
stos
stc
xor
or
mov
rcll
cmc
loope
popf
jge
gs
sub
mov
fwait
data16
and
dec
or
inc
mov
mov
pop
popa
jge
push
dec
jg
push
add
cmp
test
call
test
cld
mov
and
jb
or
lods
xchg
or
sub
mov
lods
mov
cmp
out
push
push
fisubrl
fnstcw
xor
aas
xor
orl
cmp
loope
add
iret
mov
cld
xor
or
sbb
adc
lea
xchg
sbb
outsb
ror
xchg
jmp
imul
aad
push
add
addb
sub
mov
or
stos
mov
mov
mov
cs
mov
movsl
insb
push
xchg
pop
or
and
movsb
push
cmpsb
andb
jmp
enter
incb
cwtl
mov
fcomp
xchg
sub
ljmp
sbb
fldcw
mov
jne
push
mov
into
ss
cmc
mov
sahf
xchg
dec
lret
sti
movsl
out
pop
inc
push
pminsw
push
mov
fbld
inc
jbe
and
dec
xchg
fstpt
mov
dec
lahf
jecxz
mov
roll
adcb
lret
cmc
cmp
mov
inc
xchg
mov
dec
dec
mov
nop
sub
mov
pop
hlt
sbb
sub
mov
in
push
inc
xlat
rorl
aas
sub
pop
jg
hlt
xor
dec
cmp
cmp
ljmp
pop
mov
sbb
and
adc
cltd
mov
cmp
xchg
sub
mov
jnp
xlat
hlt
movsb
cmpsb
inc
imul
pop
sbb
fcoml
inc
xchg
cmpsl
mov
jns
pop
pop
pop
adc
test
or
add
adc
cmp
mov
pop
cmp
in
outsb
xor
std
repnz
loope
std
cmp
xchg
loope
mov
shrb
push
enter
scas
fwait
movsb
cmpsl
dec
jb
xchg
push
dec
repnz
xlat
mov
mov
jno
scas
jmp
repnz
xchg
mov
xchg
inc
rcl
nop
ss
stc
push
mov
ljmp
sbb
jge
ret
xchg
sub
mov
add
in
jg,pn
push
xor
mov
sub
pop
sub
cs
stos
dec
jmp
cmpsb
movsl
xor
addr16
in
mov
or
adc
push
jo
dec
popf
stc
adc
cs
lds
pop
mov
dec
dec
xor
sbb
pop
inc
xchg
outsl
mov
stc
iret
cmp
push
inc
pop
cmp
push
pop
or
std
ficompl
inc
mov
pop
nop
mov
pop
sbb
aad
pop
in
and
stc
adc
mov
loopne
jl
js
pop
rcrb
fs
add
add
cs
sub
fiaddl
loopne
sub
adc
jp
dec
push
mov
test
dec
call
int3
jl
stos
ss
ja,pt
mov
dec
dec
int3
adc
es
fnstsw
push
pop
pop
jne
aad
nop
int3
dec
rcrb
punpckhdq
push
mov
inc
sbbl
repz
jge
arpl
test
jno
rcll
aam
in
adc
mov
js
pop
in
scas
cltd
adcl
clc
or
hlt
clc
stos
lret
stos
movsb
xchg
pop
js
jl
es
cmpsb
pop
adc
mov
int3
stc
mov
int
pusha
mov
aad
in
push
push
movsl
testb
call
lock
xor
insl
mov
loop
out
mov
jne
lcall
sub
into
xchg
xor
dec
push
adc
mov
sti
in
add
repnz
roll
xor
scas
les
pop
inc
out
stc
adc
repz
and
mov
pop
dec
loope
fs
cmpsb
xor
push
push
ja
mov
pop
sub
mov
fidivrs
xlat
push
xor
cs
aam
pop
xor
imul
sbb
jne
shl
lcall
xor
aam
mov
lcall
lret
mov
jnp
cli
xor
adc
hlt
jae
es
test
mov
push
cmpsb
jecxz
push
lret
cmpsl
decl
aad
fdiv
test
int3
mov
push
enter
cwtl
in
dec
imul
scas
push
or
inc
xor
and
mov
or
or
mov
cmp
mov
jge
sarb
subb
push
sbbl
scas
test
xchg
push
or
scas
movsl
mov
fidivrl
mov
dec
xor
fdiv
popl
lods
int
and
inc
aas
gs
in
ja
mov
fcomps
xor
mov
pop
aaa
push
cmp
cli
xchg
fsubl
or
insl
push
xor
lret
add
sub
das
inc
xchg
int
push
push
fsubrs
insb
mov
mov
rcrb
hlt
loopne
aam
push
out
xor
push
sub
aam
push
mov
mov
data16
repz
cli
add
sahf
xchg
pop
movsb
mov
clc
push
mov
xchg
fldt
inc
insb
mov
rcrb
cltd
push
scas
push
and
pop
pop
adc
in
mov
dec
lahf
repz
push
push
inc
adc
inc
inc
sub
scas
adc
into
push
sbb
cli
mov
lds
inc
mov
cmp
dec
sbb
sub
push
push
in
js
mov
sti
out
imul
mov
jle
cmovle
loope
pusha
mov
repnz
mov
adc
dec
subb
add
dec
lock
lret
das
xor
testb
ljmp
stos
aaa
cmp
int
loope
adc
loopne
dec
dec
pop
pop
cld
or
in
out
cmpsb
fwait
jo
pop
add
pop
inc
cwtl
mov
mov
dec
fs
push
ficomps
mov
dec
xrelease
jg
divb
incl
lods
pop
lods
fsts
loopne
test
jno
addr16
icebp
dec
sbbl
in
inc
movsl
insl
in
pop
sahf
mov
inc
add
mov
das
mov
sub
pop
rcl
iret
and
mov
cmp
xor
cmpsb
lods
mov
call
dec
or
addb
or
xor
mov
push
repnz
and
mov
or
cli
nop
enter
mov
loop
sub
xchg
jl
push
mov
fstps
add
leave
gs
xchg
xchg
in
dec
pop
movl
adc
jne
sub
mov
aaa
mov
imul
in
pop
pop
test
fmull
pop
lds
jnp
in
pop
or
shrb
loopne
call
push
sbb
push
jge
push
andb
filds
out
cld
inc
jecxz
push
jnp
mov
incl
xor
mov
jl
add
in
jecxz
out
mov
pop
or
and
int3
es
mov
push
push
pop
mov
dec
push
push
pop
push
lods
hlt
add
sbbb
sub
sub
push
int
push
pop
xor
mov
mov
adc
aad
dec
das
or
or
ss
jns
mov
ret
xor
mov
stos
call
lock
push
sbb
aam
push
adc
xor
xchg
mov
mov
and
inc
jbe
xor
mov
enter
sbb
cld
mov
popf
rcr
fnsave
std
dec
idivb
sbb
insb
add
lods
cltd
into
xchg
das
sub
out
popa
xchg
push
add
jg
jb
aaa
jg
andb
dec
cmc
jle
mov
mov
clc
push
cmpsl
xchg
jae
xchg
hlt
sbb
pop
mov
and
fisubs
in
dec
mov
insb
cwtl
jecxz
js
push
add
mov
jne
clc
mov
test
adc
mov
insl
lods
pop
lods
pop
and
sbb
xor
mov
pop
cmc
ret
xchg
xor
mov
loop
into
push
call
leave
icebp
mov
dec
dec
ljmp
xchg
jl
adc
sub
rcl
pop
and
cmp
movsb
push
enter
scas
adc
and
popa
mov
push
mov
push
ljmp
sbb
addl
mov
add
push
sbb
fxch
dec
dec
mov
xchg
pxor
lock
mov
mov
pushl
jmp
jo
mov
mov
int3
cmp
inc
mov
or
xchg
add
lds
jmp
jnp
addr16
es
dec
bnd
mov
dec
fmuls
gs
pop
mov
push
adc
fwait
xchg
dec
das
adc
inc
ret
jecxz
loop
mov
jle
arpl
adc
pusha
pop
shrl
popf
std
gs
int3
in
jno
mov
mov
or
inc
inc
mov
pop
lret
jp
in
lahf
loopne
cmpsb
sbb
push
sbb
cmp
lock
sub
popl
in
xor
loopne
mov
int3
jecxz
dec
loop
and
inc
jbe
and
cmc
lock
leave
and
lock
dec
mov
pop
scas
lahf
xchg
aaa
mov
decl
sbb
ret
jle
push
push
xchg
lods
adc
mulb
rcll
pusha
inc
stos
push
adc
adc
cmpsb
loope
mov
insl
subl
dec
add
je
es
jl
and
xor
lcall
into
xor
imul
bound
adc
ret
push
cltd
js
mov
pop
test
push
enter
in
xor
stos
sbb
imul
mov
test
xor
ret
dec
xchg
je
incb
xchg
test
adc
sub
or
jb
push
notb
adc
out
and
test
call
filds
pusha
fwait
or
int
cld
in
mov
arpl
scas
repz
xchg
cltd
and
cmpsb
pop
das
adc
aad
sub
fwait
or
mov
push
push
or
inc
cltd
add
test
dec
shlb
int3
mov
and
and
hlt
out
pop
mov
in
add
movsl
dec
jnp
mov
lcall
add
les
fidivs
sti
or
mov
jecxz
mov
dec
lret
pop
out
std
or
mov
in
jmp
mov
xor
mov
int3
sbb
test
cmp
sub
test
or
lahf
mov
xchg
fdivrs
xchg
mov
mov
sti
bnd
ljmp
inc
xor
leave
push
das
add
fisttpl
in
shr
dec
repnz
test
lods
mov
jbe
call
in
stos
jnp
ficoml
dec
jle
scas
add
push
sbb
mov
out
test
sub
ret
les
cmpsb
add
and
out
sub
lret
jmp
jmp
dec
sub
xor
mov
gs
xchg
add
cwtl
inc
sti
adc
push
or
and
daa
ds
jae
sahf
orl
and
inc
sbbl
out
sub
push
addr16
cmc
dec
icebp
xchg
aam
dec
xor
jmp
push
in
popa
insl
cmova
inc
cmpsl
jl
loopne
cmpsl
push
fbstp
movsb
xchg
outsl
mov
xchg
cmpsb
inc
imul
es
push
test
pop
add
dec
ss
cld
fidivs
addb
mov
leave
out
and
pushl
sbb
ja
imul
mov
sub
pushf
pushf
in
adc
push
jl
mov
add
push
dec
sub
cmp
insb
test
es
adc
mov
mov
popa
and
sub
push
shlb
push
xchg
pop
mov
ficoms
fsubs
mov
rclb
lahf
or
or
mov
push
mov
sbb
mov
mov
notb
fisubs
fildll
mov
js
xchg
or
xchg
dec
xor
fcmovnu
and
out
movsb
xchg
cmp
data16
jmp
rorb
or
sbb
inc
das
push
icebp
ret
inc
push
sub
test
movsl
mov
inc
rcll
push
inc
test
loope
adc
sti
xchg
cld
jb
mov
hlt
cmp
push
jmp
sub
mov
sbb
rorl
aaa
cwtl
mov
jne
stos
dec
data16
lds
and
in
mov
pop
lcall
mov
mov
loop
out
test
cmc
adc
jle
repz
and
ds
xlat
or
cmc
sti
fwait
add
addr16
jbe
dec
das
ret
jo
xor
xor
hlt
aas
fisubrs
jle
lahf
pop
in
jp
mov
leave
jl
iret
addr16
or
ss
ljmp
cmp
adc
mov
in
imull
pop
sarb
sub
pop
ror
mov
pop
cld
cmpsb
push
aam
rorl
outsl
in
data16
into
mov
xcrypt-cfb
cmpsl
inc
or
or
test
mov
cs
xchg
les
and
cmp
cmp
loopne
std
mov
addl
imul
pop
lahf
mov
jg
dec
or
dec
or
scas
mov
rcrl
xchg
leave
mov
ds
mov
icebp
or
bound
je
aas
js
pmulhw
mov
mov
pop
and
mov
lret
lock
call
in
xor
mov
daa
popf
cmpsl
lods
lret
repnz
bound
cmp
lds
iret
sbb
inc
sbb
testb
xor
xchg
xchg
cmc
fxch
and
cs
jecxz
std
imul
fcom
clc
jge
xlat
dec
mov
out
bound
imul
sub
outsl
test
nop
fwait
push
pop
adc
mov
jno
daa
call
ret
mov
test
pop
jno
rcll
mov
jle
shll
dec
dec
mov
bound
mov
movaps
stos
insl
and
xchg
pop
rorl
jg
push
cli
push
push
fcompl
cwtl
jnp
addr16
xor
cmp
add
push
pop
cmp
add
in
pop
popf
and
clc
fsubp
inc
aad
imul
fs
add
ret
enter
enter
aad
jno
or
cmp
mov
jl
test
push
imul
xor
pushf
fcoms
fidivl
movsl
jne
fdivp
xor
mov
mov
jge
loop
fimuls
lahf
inc
xchg
xchg
ljmp
and
outsb
test
cmp
xor
inc
stc
stos
sub
xor
cmp
push
in
repnz
scas
adc
clc
in
subl
jp
inc
pop
dec
push
push
sbb
pop
and
scas
pop
pop
ljmp
lods
mov
dec
push
dec
dec
into
popl
aas
jp
imul
inc
test
jecxz
jbe
fdivrl
lea
add
mov
jecxz
mov
jno
jbe
adc
cld
add
sahf
or
scas
mov
mov
imul
frstor
and
enter
setle
jno
inc
xor
dec
cmp
fs
xor
mov
push
lret
or
ret
fdivrp
mov
fcomps
test
ja
xor
xchg
pop
lods
xlat
rorl
adc
fisubs
dec
sub
imul
xchg
loopne
inc
cmp
divl
pop
add
addl
dec
fistl
mov
xchg
mov
xchg
adc
adc
jge
cld
sub
inc
sbb
repnz
and
negb
and
jnp
pop
fdivrl
jns
daa
lahf
push
cli
aaa
insb
ss
pop
jns
jne
add
mov
push
rcr
push
cmpsb
xchg
std
push
cld
or
sarb
lods
insl
mov
cmpsb
shlb
ret
popl
adc
gs
sub
int
jl
hlt
mov
call
insl
mov
rcrl
mov
test
clc
mov
mov
fsubr
jl
addr16
mov
ret
xchg
out
dec
movsb
inc
inc
push
cld
test
int
pop
in
popf
mov
insb
mov
shlb
repnz
inc
xlat
add
gs
inc
popf
shrb
and
adc
lret
xchg
test
mov
push
mov
xor
std
push
outsb
repnz
sbb
jnp
mov
fstpl
dec
or
movsb
push
mov
and
mov
data16
popf
jae
dec
jns
inc
mov
jo
mov
sub
sub
bound
mov
jg
fs
dec
sub
popf
loope
test
fldcw
inc
cmp
push
outsl
rolb
dec
or
cltd
cmpl
pop
loope
fiaddl
cltd
push
aaa
pop
decl
push
in
in
add
rcl
jp
icebp
cmp
jg
jbe
mov
rol
mov
xor
ds
jge
jae
fwait
icebp
mov
push
iret
jnp
dec
sti
xlat
sub
orb
cmp
add
pop
mov
xchg
dec
mov
leave
xchg
pop
push
rcrl
lea
daa
movsb
push
sbb
sahf
imul
push
dec
push
push
sub
mov
sbb
pop
xchg
sub
ret
lcall
xor
dec
call
clc
rorl
stos
into
and
stos
or
add
inc
dec
xor
push
ret
mov
bound
mov
pushf
mov
cmp
mov
push
rolb
sbbb
ret
fs
pop
mov
cmp
je
mov
sti
cmp
adc
scas
rorb
shll
cltd
jl
in
mov
out
push
mov
in
and
stc
inc
lcall
movsb
cmp
pop
in
mov
cmp
setge
cmp
sbb
jle
add
xchg
ret
xchg
pop
pop
sub
mov
insb
nop
dec
test
and
adc
test
sbb
fmuls
pop
xlat
pop
pop
pop
dec
addr16
lret
adc
data16
std
push
orb
inc
fs
mov
rcrl
jge
lcall
lret
les
dec
lahf
lock
ja
rorb
sarb
sbb
loopne
and
mov
jmp
cs
in
inc
adc
ja
orb
jne
lret
cmp
aas
and
repnz
inc
jg
xchg
and
jbe
sarb
ret
subl
or
or
push
lds
repz
repz
cmpsl
clc
jbe
sar
pop
fisubrl
lret
lock
call
mov
dec
lock
xchg
add
fs
outsl
sub
imul
push
or
dec
fcomps
xor
inc
or
adc
aad
mov
inc
or
in
mov
insb
or
gs
cmpsl
bnd
gs
push
sub
or
out
and
pusha
push
aad
cwtl
mov
fs
mov
push
in
movsb
inc
or
jp
inc
in
data16
sbb
cltd
lea
push
out
pop
ljmp
orb
gs
adc
popf
mov
aas
push
mov
cmpsl
xchg
lcall
mov
push
test
jecxz
popl
xchg
mov
pushl
mov
ds
ret
mov
adc
aad
sub
jne
outsl
in
loope
jb
adc
cmpsl
fdivrs
jp
mov
lods
in
push
lock
mov
push
std
leave
daa
addr16
sarl
aaa
sub
xor
pop
mov
repnz
aaa
jo
in
out
fcmovnb
adc
push
cmp
pusha
arpl
xchg
push
xlat
sbb
jbe
inc
test
jae
xor
ret
xchg
cmp
push
dec
inc
ret
mov
stc
add
aam
mov
push
ret
mov
test
iret
gs
fstps
jp
push
pop
adc
mov
loop
xor
push
and
jmp
mov
push
cmpb
stos
cmp
xor
ljmp
leave
dec
loop
ret
mov
arpl
adcl
jb
jno
cs
daa
insb
daa
repz
stos
push
hlt
adc
cmp
push
xchg
xchg
lret
jae
aas
in
mov
std
les
adc
in
bound
pop
push
cmc
lods
dec
inc
push
sub
jae
int3
cmp
xchg
mov
lcall
das
or
in
popa
push
fildll
add
ds
leave
and
sarl
sti
push
pop
incb
adc
ds
pop
test
adc
inc
movsl
xlat
inc
call
cld
sbbl
cmp
xlat
data16
js
rcrl
xchg
clc
push
das
stos
cmp
lret
mov
imul
dec
mov
push
loopne
push
scas
popf
cmp
in
cmpsl
insb
icebp
cmc
push
push
pop
sbbl
dec
mov
fldcw
sbbb
idivb
popf
jle
imul
dec
mov
flds
enter
outsb
daa
mov
lcall
mov
add
or
testb
inc
add
sbbl
push
mov
jle
sar
and
pop
jge
mov
stos
xchg
test
out
dec
sbb
repz
pop
push
dec
add
sti
jmp
mov
xchg
inc
push
adc
jns
mov
ja
dec
ret
imul
lahf
lea
ret
sbb
jge
mov
fidivrs
cmp
mov
push
in
mov
push
repz
arpl
pop
push
mov
fcmovnb
lods
or
xchg
aaa
xor
pop
in
xchg
in
add
push
inc
out
or
filds
loope
add
stc
cmpsb
cmp
jle
sahf
aas
inc
jns
pop
popf
adc
xor
sbb
add
xchg
lods
cmp
add
xchg
and
cs
sbb
shlb
inc
ds
mov
popf
or
sbb
insb
adc
mov
pop
outsl
jns
dec
nop
mov
mov
les
or
in
rcrl
or
ss
lahf
aam
pop
movsb
mov
frstor
scas
sub
stos
or
js
jg
xchg
xlat
divb
or
pop
adc
jge
sbb
test
test
push
push
enter
mov
outsl
in
cwtl
mov
cmc
sbb
fcmovnbe
divl
push
fsts
and
mov
dec
xchg
xchg
lods
jno
xor
cmp
mov
push
fs
in
ret
mov
xchg
js
inc
xor
sti
pop
push
icebp
fiaddl
lahf
cli
inc
test
ja
outsl
xchg
adc
data16
fs
adcb
lret
jae
sub
push
or
cmpsb
sbb
mov
adc
fdivl
or
fidivs
push
mov
das
cmp
jp
xchg
out
je
mov
pop
sub
pop
fstl
addb
dec
pop
xor
sub
adcb
or
sub
add
pop
addb
sbb
lds
mov
aaa
pop
lock
insb
adc
hlt
dec
add
rclb
sbb
xor
int3
lock
fbld
imul
mov
movsb
movsl
mov
fsubrl
jns
sub
and
es
movb
rorl
fidivrl
adc
fsubrs
xchg
mov
inc
fsts
jp
dec
mov
lcall
mov
pop
jle
ret
dec
and
cld
jb
add
push
jmp
mov
mov
pop
sub
jmp
inc
mov
jae
sbb
ljmp
mov
mov
pop
stos
xchg
inc
ror
cld
inc
fisttpll
and
cmpsl
jo
mov
mov
add
sbb
jo
fdiv
ljmp
mov
test
jp
pop
jl
xchg
xchg
hlt
sbb
mov
ret
or
std
scas
rclb
imul
jp
dec
or
mov
push
dec
jns
cmp
or
pop
cmp
push
fs
push
jmp
jecxz
jmp
mov
fwait
mov
and
jmp
jecxz
arpl
jg
inc
push
clc
cmp
fs
sbb
mov
clc
sub
xchg
in
push
sub
in
jle
daa
movsl
into
push
adc
movsl
jb
pop
cmp
stos
lods
mov
xchg
fldenv
sbb
mov
or
and
mov
xchg
cld
sub
pop
clc
xorb
xchg
adc
out
and
xchg
mov
bound
std
aas
movsl
mov
outsb
add
push
xchg
popa
pop
push
mov
jns
dec
pop
adc
in
sub
pop
outsl
out
jae
jp
push
in
in
les
jbe
pop
fiaddl
js
or
outsb
add
loop
pop
pop
popf
std
aad
scas
push
xchg
push
iret
dec
lahf
stos
sti
arpl
mov
xchg
jno
js
lods
mov
sub
jb
lahf
ret
shrl
repz
clc
push
push
mov
aas
xchg
test
or
lods
leave
lock
stos
xchg
mov
inc
sahf
aam
addr16
fwait
mov
outsl
jge
sbb
xchg
notb
push
sub
or
out
jp
add
jne
dec
cld
loope
ja
fs
mov
aaa
clc
add
ja
sbb
and
scas
imul
fldenv
xchg
adc
nop
out
out
xchg
fidivs
dec
lret
dec
xchg
push
cs
inc
lret
lcall
xchg
push
es
daa
adc
iret
xor
std
rclb
xor
pop
in
jae
loop
outsb
fcom
and
inc
addr16
pop
cmc
add
nop
jg
push
push
daa
mov
push
subb
std
scas
cltd
pop
mov
mov
xor
push
mov
and
push
cmp
test
and
dec
sbb
and
leave
xchg
test
roll
pop
push
cwtl
inc
dec
xchg
gs
sti
dec
scas
adc
dec
sub
push
mov
cmp
int
push
xchg
loopne
shll
cmp
popf
cli
test
pushf
adc
movsb
daa
push
cmp
fildll
pop
sub
cwtl
ds
and
cld
in
xor
outsb
or
cmc
xchg
cltd
frstor
jne
xchg
jns
jne
mov
das
xchg
mov
or
clc
jge
outsb
or
shlb
cmp
dec
dec
lret
stc
popf
pop
gs
mov
in
lcall
sbb
lcall
loop
jmp
pop
sub
or
and
jae
jne
cs
xchg
ffreep
sbb
jmp
out
mov
xor
adc
shl
jns
loope
mov
jae
decb
inc
pop
icebp
mov
int3
loope
adcb
xor
fadd
cmp
mov
push
in
loope
insl
fwait
test
mov
inc
dec
jnp
add
mov
inc
jle
pop
inc
mov
iret
dec
add
negl
popa
adc
arpl
jecxz
out
aas
mov
xor
xchg
fs
jo
xlat
dec
pop
pop
int
sub
stos
cvttps2pi
inc
jo
pop
rcr
icebp
sub
sbbb
popf
pop
add
test
or
in
pop
jl
popf
pop
push
mov
faddl
cmpsl
xchg
pop
sub
xchg
cmp
es
pop
and
sub
pop
push
out
les
aaa
add
bound
xor
mov
data16
lahf
daa
push
or
add
jle
addb
push
mov
dec
in
xchg
test
pop
xor
push
loopne
and
jb
push
jae
mov
push
sbb
lods
push
add
cmp
jmp
fwait
ds
mov
cmp
loopne
adc
mov
sub
sbb
lret
or
imul
mov
mov
shr
loopne
add
push
test
es
xorl
mov
and
out
ficoms
scas
call
int3
fisttpll
and
out
popf
mov
xchg
out
sbb
sbb
cmp
icebp
jecxz
inc
lods
dec
mov
mov
push
insb
pop
push
lods
out
in
push
repz
frstor
xchg
lods
scas
xchg
movsb
fnstenv
mov
js
mov
jle
fs
filds
dec
lods
xchg
std
mov
in
and
lahf
inc
fdivs
sub
push
sbb
movsl
je
mov
mov
xor
repnz
mov
insl
xor
push
sahf
repz
inc
cmp
xchg
sub
int3
outsb
mov
dec
loopne
cmc
mov
xlat
stos
aad
jmp
lea
outsb
daa
bound
add
int
in
shl
xchg
shll
sub
adc
xchg
shl
or
imul
dec
adc
popf
xchg
shrb
jne
repnz
sarb
jns
in
lcall
xchg
push
xor
mov
sub
mov
adc
or
out
jne
pop
or
arpl
out
jno
divb
lock
clc
cmp
aaa
mov
mov
popa
cmpsb
dec
lds
fnstcw
jle
sub
jo
push
daa
je
mov
jl
loop
cmp
xchg
cltd
adc
aaa
outsb
pusha
lock
cmp
mov
push
das
mov
jae
inc
jo
sub
cmp
jg
inc
inc
test
sbb
push
sbb
pop
in
mov
xchg
insb
jp
and
sbb
dec
add
mov
adc
inc
xchg
push
rcll
xchg
mov
dec
inc
dec
xor
cmpsl
mov
pop
or
mov
mov
dec
out
or
pop
lcall
lret
mov
int
push
cld
fidivrl
lret
outsl
xchg
je
dec
cmp
ds
test
cltd
jmp
pop
lods
scas
or
cli
mov
into
push
xchg
faddp
movsl
push
cmp
add
dec
es
or
das
imul
push
mov
xor
fsub
loope
mov
mov
call
mov
xor
fs
and
xor
push
leave
add
mov
cmp
pop
inc
jecxz
jb
cmp
je
sbb
shrl
push
push
pop
dec
and
scas
clc
xchg
in
dec
call
out
psrlq
imul
fs
and
gs
scas
sahf
jo
imul
mov
es
pop
aas
cmp
out
adc
sbb
sub
xchg
cmp
pop
push
cmpsl
sti
notl
aas
dec
add
jo
shll
xor
in
test
xorb
jno
push
mov
mov
lock
in
imul
push
stos
jmp
out
aad
lret
jmp
dec
out
mov
lock
dec
xor
mov
push
xchg
fildl
mov
ds
scas
push
test
xor
movsb
icebp
cli
cwtl
je
xor
jb
and
ss
xchg
jl
jg
push
or
xor
xlat
push
dec
stc
push
cmpsb
out
stos
test
mov
mov
pop
outsb
addr16
mov
insl
jmp
mov
add
test
mov
call
add
ja
adc
shl
mov
filds
cwtl
mov
pop
aas
push
imul
enter
mov
dec
mov
jg
and
dec
loop
outsb
dec
push
scas
sub
repz
push
std
mov
dec
cs
clc
adc
cmp
inc
aam
push
dec
xor
xlat
push
push
push
mov
xchg
push
inc
adc
ja
push
mov
stos
or
and
mov
lcall
mov
push
and
fsubr
xor
lods
lea
cmp
cmp
int3
push
xor
push
or
mov
sbb
pop
or
sbb
sub
mov
and
ljmp
out
or
andb
clc
mov
sbb
pop
pop
cmp
insb
sub
js
out
rcrl
loop
sub
mov
stos
or
mov
or
repnz
lcall
jle
add
push
pop
and
in
pop
or
jl
ficoml
mov
sbb
movsb
xchg
popa
call
data16
lods
pop
ss
xchg
jmp
mov
xchg
popa
jb
or
or
sbb
loop
sbb
roll
cmc
jge
outsl
or
imul
adc
mov
push
inc
hlt
cmpsb
mov
inc
lea
pop
rcr
mov
scas
sbb
bound
lahf
mov
or
loopne
or
shl
push
loope
cmpsl
nop
dec
test
cmp
shll
rcrl
and
cltd
push
mov
dec
mov
push
jle
pushf
cmp
pop
dec
add
test
lock
push
cmpsb
mov
xor
mov
xlat
inc
xor
sub
dec
int
enter
add
iret
push
test
mov
repz
sub
out
xchg
cmp
ret
push
jns
cmp
xlat
icebp
push
lcall
and
cmpsb
push
iret
pop
mov
test
scas
incb
mov
xchg
cmpsl
cmc
cltd
aam
lea
xchg
test
cmc
cltd
jo
outsb
out
xlat
pop
pop
and
add
xchg
andb
cmp
shl
inc
jg
call
mov
sti
pop
xor
arpl
lods
ja
and
inc
shr
cmp
adc
pop
inc
cmp
pushf
out
xchg
outsl
repz
mov
sbb
das
mov
inc
add
push
pop
xor
adc
cmc
dec
and
mov
sub
xor
sub
sub
addr16
popf
popa
je
test
pop
cmp
dec
ja
add
xor
mov
lcall
sub
adc
fstpt
int3
adc
push
dec
setae
pop
jp
ret
jl
rolb
sbb
roll
or
push
or
loope
es
jecxz
sbb
and
cmpsl
ret
jo
mov
stc
push
fmul
push
fdivrl
push
add
mov
imul
das
adc
pop
cli
and
pop
xorb
not
xchg
xlat
pop
sbb
enter
mov
shrl
iret
ss
sub
nop
sub
or
pop
leave
xchg
mov
mov
dec
cmp
data16
adc
sub
es
scas
sbb
leave
push
sbb
fldl
rcrl
pop
popf
sti
enter
dec
sti
dec
dec
adc
rorl
jp
mov
mov
add
flds
cmpsl
mov
push
out
int3
incb
sbb
sbb
stos
mov
into
xlat
rcrb
je
ret
out
popf
fbstp
lcall
icebp
sbb
mov
subb
or
push
fiaddl
inc
leave
mov
push
jb
cwtl
fdivrs
imul
lock
dec
lods
popf
push
movsl
cmp
subl
cld
inc
loope
mov
pop
xor
icebp
and
into
paddsb
aaa
xchg
decb
rol
jl
ljmp
xor
out
xor
and
repnz
or
aad
xor
repnz
test
fcoml
add
sub
outsl
roll
insb
icebp
jae
dec
and
add
mov
cmc
cli
fldcw
lock
pop
lret
or
mov
hlt
or
mov
fists
lret
mov
fs
cmp
ret
xor
les
xchg
fdivs
mov
or
into
clc
loopne
or
adc
adc
dec
push
mov
add
cwtl
popa
ret
fnstenv
jle
adc
mov
jecxz,pn
repnz
popa
out
rorl
fsubrp
lock
std
sbb
jb
inc
mov
lret
fiaddl
mov
jno
pop
pop
test
daa
mov
jg
dec
and
xchg
pop
jge
aad
imul
call
hlt
sbb
mov
push
xor
out
push
lods
in
cli
mov
mov
add
mov
pop
adc
cli
int3
xlat
fstpt
in
movq
jle
les
mov
daa
aam
aam
push
jns
mov
inc
mov
or
mov
mov
into
ret
sbb
lods
lahf
cltd
cmp
xor
xchg
sub
mov
jae
xchg
out
dec
xchg
push
sahf
jo
fcmovne
sbb
cmp
aam
rorl
cli
lods
mov
jmp
add
ret
cmp
xchg
stc
fsubl
filds
dec
pop
adc
cmpsl
fcmovbe
or
cmpsl
sub
inc
adcl
push
jb
fistl
dec
ret
dec
iret
push
sbb
inc
shlb
das
out
push
push
insl
mov
out
jmp
popa
jmp
dec
lahf
add
aad
sub
ret
push
cs
jb
dec
ds
insb
mov
cmpsb
ss
push
lds
pop
clc
mov
pushf
dec
movsb
or
or
js
rorb
adc
movsb
subb
cmp
arpl
nop
lret
add
loop
mov
fwait
sub
int3
aad
inc
jl
pop
mov
xor
pop
in
xchg
inc
and
aad
sbb
dec
push
mov
xchg
push
xor
stos
mov
loope
shll
mov
push
popf
mov
pusha
mov
fcom
pop
mov
cmp
daa
stos
mov
and
bound
fldl
xlat
stos
adc
mov
mov
jle
sarl
mulb
jp
rcrb
jecxz
inc
sub
lcall
jecxz
outsb
dec
lods
push
sub
pusha
loope
xor
sbb
pop
and
divl
sbb
mov
or
cwtl
add
gs
aas
imull
lods
xchg
adc
xchg
xchg
test
push
push
in
call
xor
mov
xchg
mov
pusha
xchg
hlt
imul
leave
push
jecxz
das
cmpsl
mov
lods
mov
iret
and
clc
xlat
or
lahf
pop
iret
jns
imul
mov
sbb
daa
xor
lcall
mov
sbb
dec
and
pop
lock
stos
and
adc
ret
in
inc
sbb
je
mov
lret
inc
xor
add
or
insb
mov
mov
loop
aas
add
enter
leave
ja
sub
jge
mov
jl
jo
pop
mov
divb
jge
adc
xchg
pop
mov
cmp
pusha
aam
mov
and
mov
jbe
inc
lds
lods
call
jns
dec
test
out
and
sbb
cmpsb
lret
cmp
rcrb
sub
sarb
fucom
cmp
daa
or
push
aaa
outsl
sbb
inc
pushf
jb
movsl
icebp
movsb
stos
fiaddl
cli
rcl
outsb
pop
sahf
fisttps
add
lret
push
sub
mov
clc
cmpsb
std
sub
aaa
dec
mov
xchg
jns
loope
xchg
xor
jbe
stos
mov
stos
cmp
mov
xchg
push
mov
or
insl
sub
inc
loope
cmp
mov
pop
out
mov
out
mov
push
imul
sub
lea
aas
xchg
out
dec
add
hlt
insl
nop
add
rorl
jb
mov
popa
mov
pop
jne
cmp
jg
mov
inc
inc
test
cwtl
pusha
mov
push
in
ret
push
scas
das
push
and
movsl
and
cmp
mov
push
sbb
or
fs
in
mov
frstor
mov
frstor
gs
add
xor
jl
pop
cwtl
mov
rol
or
inc
push
into
push
imul
xorb
cmp
mov
xor
loopne
popf
lods
nop
and
mov
pushf
cltd
insb
out
mov
stos
sbb
pop
dec
sbb
jg
dec
mov
arpl
or
imul
ret
and
xchg
fstpt
stc
dec
xchg
inc
jecxz
dec
mov
pop
out
mov
into
popa
dec
addr16
jecxz
jns
add
std
or
outsb
enter
push
push
add
xchg
xchg
fmulp
fwait
sub
jno
dec
lahf
stos
mov
lods
daa
mov
or
ret
out
jbe
xchg
ficomps
imul
sbbl
leave
xchg
testb
adc
cmpsb
inc
dec
test
clc
mov
out
jg
imul
fwait
in
test
mov
enter
in
mov
or
xor
aad
lea
sbb
jp
jp
jecxz
roll
fcmovne
cs
and
inc
add
cmp
mov
cmpsl
fisubs
jmp
xor
pop
sub
ret
xchg
inc
sbb
or
mov
scas
mov
and
jns
outsl
mov
out
cmp
cmp
push
aas
gs
es
aaa
ret
ss
rcll
jg
jbe
cmp
cmp
cs
adc
push
push
pop
btc
lret
push
outsl
jne
in
push
shrb
das
aaa
sbb
jle
sub
pusha
mov
inc
in
in
inc
imul
xor
push
sbb
inc
incl
mov
cmp
mov
push
loop
mov
test
cmp
mov
sar
shll
add
pop
pop
jbe
jge
cmp
xchg
lahf
jo
or
ss
push
push
and
jb
sbb
lret
dec
negl
cwtl
fstps
mul
fbld
aas
in
lcall
rcr
daa
pop
cld
cmpsb
sbb
test
xor
xor
rcrb
pop
mov
aad
loope
cmp
sahf
xor
xor
iret
insl
xchg
ret
jno
adc
ret
cmp
test
stc
inc
and
jge
jne
xchg
cmp
iret
mov
out
cmp
addr16
sbb
or
mov
in
mov
mov
mov
xchg
dec
imul
mov
xor
xlat
mov
sbb
mov
es
mov
sbb
pop
cwtl
mov
fwait
outsb
push
movsl
sbb
das
mov
push
jns
hlt
jo
pusha
adc
int3
pop
adc
add
lret
dec
sbb
div
lock
jo
fcompl
call
add
out
and
push
jl
aad
pop
sub
sbb
gs
aas
jmp
arpl
pop
push
adcb
shl
cltd
loope
ds
push
adc
mov
mov
xchg
lahf
jo
jl
cltd
mov
movsb
push
or
shl
pushf
fnstenv
test
idiv
jb
sub
pop
fnsave
and
pop
xor
mov
and
jno
lods
fisttps
clc
rclb
out
stc
push
jp
out
bound
add
and
popa
cmc
mov
jg
xchg
jecxz
jnp
xlat
xchg
sbb
iret
push
adc
stos
jecxz
jae
dec
cmp
test
insl
rcrl
in
rol
xchg
shlb
push
pop
adc
inc
enter
xchg
jmp
in
cmp
pop
roll
test
sub
shll
or
push
outsb
aas
or
push
mov
mov
loope
mov
fwait
mov
xor
xchg
jo
xor
cmp
inc
xchg
sub
add
inc
pop
lret
dec
jmp
mov
and
inc
cmc
jp
cwtl
sahf
aaa
sbb
fsubrs
push
sarb
movsl
stos
divl
sbb
js
cld
test
scas
dec
pop
aaa
fcmovu
test
xor
jno
push
imul
mov
push
fildl
std
sbb
adc
inc
jp,pt
mov
hlt
outsl
sbb
nop
push
push
mov
xchg
clc
push
jbe
inc
fiaddl
sbb
in
insb
lret
lods
das
lods
push
outsl
test
ds
cli
sub
cmp
jge
xchg
cmp
and
into
fwait
and
and
cli
pop
sbbb
cmp
and
adcb
fsub
outsl
das
lds
lahf
outsb
pop
mov
call
stos
les
jnp
mov
push
mov
stos
outsl
pop
or
aaa
jo
mov
icebp
push
mov
push
and
in
dec
bound
insb
mov
push
std
ror
mov
sbb
pop
leave
lea
or
cmp
lret
subb
movsb
out
popa
out
jnp
or
jbe
imul
dec
mov
cwtl
add
sub
mov
jg
data16
mov
push
popa
fisubrl
push
cmp
pop
jns
out
cmp
iret
jmp
stc
xor
add
pushf
movsb
stos
sbb
mov
test
push
pop
push
xchg
mov
xor
cld
jne
cmpsb
xorl
cmp
mov
add
mov
inc
or
ror
pop
daa
push
test
inc
test
push
jb
push
fdivs
sahf
and
or
mov
ret
inc
leave
add
or
nop
mov
push
sub
push
test
xchg
fs
mov
push
cmpsl
fdivr
in
and
xrelease
mov
mov
cli
sub
rcrl
mov
and
xchg
cmp
sub
js
inc
dec
pushaw
movsl
inc
fcmove
jle
mov
test
dec
aam
enter
fdivrs
sbb
or
divl
ret
arpl
dec
scas
mov
dec
pusha
jb
jae
pop
push
aad
or
ja
and
or
inc
insb
dec
jmp
jmp
aas
fldl
test
lods
adc
push
mov
xchg
bound
mov
in
xchg
shlb
cmp
xor
frstor
fcmovne
inc
ljmp
dec
xlat
stc
lea
and
dec
adc
insb
out
and
popa
in
gs
push
aaa
scas
adc
pushf
das
mov
test
pop
stc
iret
sub
lods
insl
je
fists
loopne
stos
pushf
aaa
lret
fidivrs
jge
pop
fldt
leave
pop
xlat
pop
add
xlat
ja
fistps
mov
ret
push
arpl
xchg
mov
pushf
sub
cwtl
outsb
pop
rclb
popa
mov
pop
or
sbb
icebp
inc
mov
and
add
jmp
pop
mov
mov
fisubs
sarb
xchg
jns
add
je
imul
or
jmp
sub
push
jbe
adc
imul
mov
into
dec
pushf
mov
addr16
enter
sbb
lods
jae,pn
add
jbe
sbb
mov
aaa
arpl
sub
dec
xchg
jg
jp
iret
mov
out
or
ucomiss
in
sbb
mov
sti
xchg
sub
hlt
jns
mov
repnz
push
mov
loope
xor
mov
loope
jle
add
dec
mov
cli
mov
mov
es
add
xchg
adc
inc
jl
push
sbb
popf
cld
pop
adcb
repz
test
adc
sub
and
sbb
push
add
push
push
pop
out
fsts
test
sar
mov
test
jge
mov
les
dec
dec
sahf
mov
jne
inc
repz
cltd
repnz
test
inc
jp
imul
test
jmp
stos
pop
add
enter
mov
inc
stc
bound
dec
out
into
std
mov
jne
mov
cli
push
loope
cmp
stc
mov
mov
iret
cmp
lods
fldl
loop
aad
insl
insl
cltd
push
pop
pushf
jg
lret
sub
jecxz
mov
addr16
fidivrs
sysret
jp
test
mov
nop
in
ljmp
jb
dec
sub
add
imull
xchg
addl
mov
push
shrb
jnp
inc
in
ja
leave
cmp
out
imul
and
inc
outsb
sbb
or
imul
push
shr
fbld
dec
mov
nop
xlat
lea
push
jae
cmpsl
dec
insl
inc
add
cmp
add
push
jnp
jno
int3
in
mov
dec
sub
adcb
fs
out
roll
dec
imul
cmp
call
sub
fldcw
gs
in
jae
fdivs
pop
jle
cmp
pop
pop
test
into
push
cmpsb
xchg
inc
cs
clc
jg
mov
inc
jnp
jb
or
movsb
lret
fiadds
sahf
fistpl
mov
int3
and
jo
and
mov
jge
int
add
ret
iret
mov
pop
pop
push
ljmp
out
xlat
add
xchg
inc
xor
int3
fisttpl
je
sub
repz
or
ret
adc
loopne
push
xchg
pop
jo
in
lret
addb
pop
movsl
subb
jecxz
mov
fidivrl
enter
call
or
mov
data16
push
mov
push
movl
xor
out
mull
lret
mov
inc
shlb
repnz
sub
int
in
ljmp
mov
sub
push
stos
cmp
int3
aaa
mov
movsl
push
sub
icebp
add
inc
mov
xchg
outsb
adc
out
cmp
in
sbb
test
inc
mov
gs
adc
lods
jp
dec
scas
adc
lods
lods
cmp
in
sarl
lahf
notb
pop
scas
push
shll
cltd
daa
xor
mov
cmpsl
out
shrb
cmp
sbb
rclb
outsl
jbe
jmp
stos
mov
loope
jnp
lods
test
xor
cmp
out
push
pop
push
popa
out
call
je
enter
cltd
addr16
fwait
add
ss
outsl
arpl
cwtl
inc
mov
js
mov
push
mov
xor
adcb
les
pop
lock
and
mov
in
mov
mov
cmc
stos
in
cmp
fs
dec
jns
cmp
xor
push
mov
ja
adc
rcll
xchg
xchg
inc
sub
lahf
cmp
push
mov
js
mov
add
int
out
mov
mov
xor
outsb
lcall
sbb
cwtl
in
push
aas
test
mov
fdivl
dec
movsb
push
int
mov
fnsave
lahf
inc
push
in
push
jno
outsl
or
in
stc
out
push
jne
mov
enter
repz
cmpsl
mov
or
in
into
mov
jno
xor
cmovae
aad
iret
sti
stc
mov
out
jno
test
int
rcr
sbb
push
push
jne
ds
loopne
xchg
mov
mov
sub
loopne
xlat
cmp
rcr
ljmp
js
xor
mov
xchg
dec
addl
dec
mov
xchg
dec
mov
inc
shll
pop
jbe
xchg
mov
add
bound
inc
cltd
fldenv
scas
pushf
fnstenv
and
lock
repz
dec
jmp
aaa
adc
push
notb
test
fistps
sub
repnz
adc
imul
jo
sbb
pop
jb
jno
sbb
daa
loope
mov
outsl
pushf
add
mov
lea
push
je
or
loope
jp
dec
sub
xchg
xor
pop
stc
call
scas
leave
out
adcb
es
xor
mov
xlat
cld
adc
jg
icebp
int
and
das
push
aam
jge
dec
mov
test
in
push
rcrb
sbb
jne
insb
jns
lea
das
loope
imul
sbb
in
stc
test
mov
cld
push
es
lahf
xlat
cmp
fxam
fwait
cwtl
dec
daa
mov
stos
mov
push
into
or
push
adc
insl
xor
das
test
cmp
cmp
push
ficoms
in
imul
addr16
jns
xor
adc
iret
add
sub
add
popf
mov
in
cmpb
or
scas
cmpxchg
repnz
cmp
jmp
push
dec
push
cmpsb
inc
push
dec
std
out
cmp
test
xchg
lret
xor
fucomp
and
arpl
rorb
pushf
mov
mov
clc
add
lods
adc
test
insb
scas
sbb
jg
lahf
std
mov
daa
xchg
call
jns
jb
js
sbb
lcall
push
mov
adc
inc
sub
popf
push
mov
ficompl
pop
jno
adc
jns
lods
in
and
sbb
in
insl
leave
sarb
mov
in
cmp
loope
mov
test
mov
xor
jle
cmc
sub
push
lahf
arpl
addl
nop
push
pushf
jl
in
pusha
inc
arpl
negl
or
int
mov
inc
rcll
sbb
fsubs
nop
xor
mov
arpl
rolb
and
sti
sub
idiv
shll
mov
sbb
inc
lock
push
push
or
je
loopne
cwtl
jo
rolb
xor
sub
icebp
and
mov
fdivp
sub
data16
cmpsl
adc
daa
xor
add
sub
fisubs
daa
ljmp
roll
mov
repz
enter
mov
xor
and
icebp
daa
pop
mov
ffree
loop
xor
adc
aam
lahf
gs
fcoms
dec
cmc
shr
or
or
insl
int3
push
out
inc
je
jbe
and
cmp
adc
fs
or
mov
cld
or
add
out
lahf
jb
pusha
mov
scas
cmp
inc
ja
in
mov
add
adc
jo
mov
push
jmp
adc
rcr
adc
jae
cmp
mov
shr
mov
sti
andb
push
nop
mov
cs
mov
roll
dec
aas
lret
and
bound
lret
das
pop
hlt
add
push
test
fs
cmp
ja
and
sti
stc
push
ja
pushf
mov
flds
xchg
adcl
pop
int
adc
out
xchg
les
push
lret
cmp
sarb
movsb
in
lds
sbb
and
mov
hlt
popf
pop
mov
cli
adc
orl
subb
lea
pop
incb
cltd
fwait
cmpsb
sbb
pusha
rorl
jb
xchg
push
sti
ja
iret
mov
mov
pop
sub
call
xor
shll
jecxz
outsl
add
sbb
xor
pusha
xchg
in
xchg
dec
mov
or
or
mov
lock
xlat
sub
mov
outsl
fs
jae
cmpsl
popf
adc
addl
outsb
mov
icebp
and
mov
xchg
lods
fldt
adc
mov
jl
sub
jnp
je
popa
sub
call
or
stos
movsl
aas
sub
and
loopne
inc
push
xchg
lea
fwait
imul
jo
push
enter
mov
testb
into
xlat
add
or
outsb
lods
fidivs
icebp
adc
inc
mov
pop
mov
dec
xor
ret
popa
and
xchg
add
sub
arpl
aaa
out
xor
dec
aas
cli
insb
jae
mov
push
in
test
sub
icebp
mov
mov
out
jecxz
push
push
gs
sbb
inc
out
jb
inc
push
sbb
lea
pop
jnp
pop
je
fwait
cs
inc
mov
mov
fildl
sbb
int
das
or
je
xchg
add
sar
or
xchg
jge
movsb
cmpsl
adc
lcall
fidivrs
jbe
or
sbb
fs
ss
scas
inc
cmp
jmp
int3
jecxz
in
in
fs
cmp
and
adc
popa
adc
and
fwait
add
inc
inc
or
or
pop
sbb
fimull
fwait
sbb
pushf
hlt
in
jl
and
add
jno
enter
push
aam
pop
pop
fimuls
hlt
mov
scas
dec
push
stos
or
testl
sbb
data16
xor
imul
arpl
mov
pop
cli
fildll
push
rclb
push
scas
arpl
mov
jne
imull
inc
add
out
std
ds
notb
stos
int
adc
ret
cs
jmp
pop
jp
xchg
pusha
inc
add
ljmp
xchg
or
xchg
ret
stos
cwtl
mov
sbb
aaa
mov
jbe
push
add
mov
push
mov
icebp
fxch
mov
rcl
fdivrl
shll
nop
aas
shll
adc
shrl
add
lret
fimull
add
subl
aas
pop
inc
xchg
andl
inc
aaa
or
shl
xchg
pusha
mov
repnz
inc
loope
and
lds
xor
jo
sbb
loop
jo
sbb
mov
loopne
int3
leave
xor
sti
cmp
loop
cmp
cmpl
pop
cli
repnz
in
mov
mov
xchg
shll
cmp
fwait
iret
shrl
jecxz
lahf
push
fidivrs
pop
xchg
jne
mov
mov
mov
lret
jl
loope
fistpll
pop
pop
addr16
je
add
divb
inc
or
add
pop
lds
lret
std
loopne
fcomps
cli
dec
push
in
inc
push
sub
shr
push
xor
sub
mov
xchg
sub
cmp
xor
jmp
loope
bound
enter
jge
shrb
dec
fbld
jp
sub
imul
mov
fs
fstpl
sub
clc
mov
test
cmpl
pop
movsl
shll
shlb
mov
jmp
in
aaa
aaa
push
daa
jmp
jecxz
xchg
xchg
outsl
and
mov
gs
push
xor
mov
je
xor
fidivl
jmp
rclb
push
sti
xlat
movsl
jno
fs
test
sub
mov
xor
sbb
adc
test
fistpl
push
test
xchg
mov
and
cmpsl
add
xor
mov
je
xchg
push
xor
cvtpi2ps
adc
scas
push
cmp
fcoml
jnp
adc
mov
sbb
stos
xor
jne
out
jge
cld
and
jp
icebp
and
scas
xchg
repz
fwait
add
scas
cwtl
xor
mov
sbb
jmp
xchg
rep
xor
inc
push
cmp
cli
mov
adc
adc
icebp
adc
ljmp
xacquire
and
inc
jmp
mov
scas
movsl
dec
xor
mov
repnz
in
pop
and
stos
pop
push
repz
mov
dec
fnstenv
dec
sbb
orb
pop
pop
mov
inc
inc
in
lds
jle
lret
xrelease
outsb
lahf
icebp
nop
ffree
popa
insb
hlt
incl
mov
add
mov
popa
mov
arpl
xchg
movsl
mov
inc
sbb
cmp
push
push
or
lahf
cmpsb
fmul
ret
xor
xor
cmpsb
lret
add
jmp
or
cs
jno
sbb
clc
mov
subb
mov
inc
ljmp
push
cltd
shrb
mov
sahf
mov
pop
mov
fiadds
xchg
dec
push
and
add
sub
sub
outsl
push
das
push
out
fisttpl
mov
hlt
or
push
add
jne
in
popa
mov
int3
mov
into
sbb
iret
and
test
jae
dec
dec
test
lret
and
fs
aam
mov
jp
jnp
jo
xchg
loop
testl
ja
jecxz
adc
add
jg
gs
sub
les
sbb
push
xor
test
jmp
mov
fidivl
test
push
xchg
sub
pop
xchg
and
push
out
movsb
or
sbb
inc
pop
iret
pop
push
cmp
mov
inc
mov
adc
xchg
push
mov
jecxz
and
sub
mov
ret
loopne
push
popf
and
cmp
sub
push
neg
jae
push
cmp
insl
call
ret
fldt
xchg
sub
scas
popf
xor
pop
add
adc
icebp
mov
arpl
or
fwait
mov
sbb
jp
push
ret
imul
negb
mov
jns
xchg
mov
outsb
dec
lods
mov
jg
je
std
and
fs
jne
adcb
sti
cmc
scas
jo
xchg
fldcw
push
fistl
inc
lret
cmp
cmp
push
ja
ret
inc
and
es
sti
enter
outsl
jns
shrl
mov
jo
mov
pop
add
dec
fsubs
mov
outsl
lahf
pop
sub
jb
jo
js
sub
movsb
push
inc
xor
stos
mov
ds
popa
std
xchg
or
mov
push
or
or
aaa
shll
cmp
sub
fidivs
xor
xlat
push
in
cs
mov
jns
jl
lahf
xchg
insl
lcall
stc
ret
sub
sarl
sti
in
orl
or
push
jbe
pushf
lods
enter
add
add
daa
add
or
inc
sub
mov
mov
pop
dec
dec
add
aas
sbbl
ljmp
popl
insl
lea
cmpsl
add
adc
decb
inc
lahf
pop
mov
nop
jb
fs
pusha
sub
pop
in
fcomps
shlb
mov
mov
or
and
jmp
cmp
or
test
add
ljmp
jecxz
addr16
add
pop
push
sbb
push
out
mov
fistpl
inc
cmp
aam
mov
jae
mov
sbb
mov
or
cmp
xchg
mov
fildl
push
xchg
daa
arpl
dec
push
add
fldln2
icebp
pop
push
daa
fadds
pop
mov
sub
mov
adc
sahf
and
pop
pop
aad
cmpsb
and
sbb
ds
cmp
jecxz
add
lahf
dec
add
and
sub
scas
ret
push
mov
fidivrs
sbb
lcall
jecxz
pusha
loopne
gs
inc
add
mov
test
adc
sub
lock
mov
call
cmc
sub
dec
adc
in
fsub
sbb
inc
xchg
outsb
addr16
into
xchg
call
add
jle
loopne
and
popf
sbb
stc
adc
jle
fsubr
sahf
jg
inc
daa
pop
mov
into
push
pop
fcoms
jl
push
shlb
xor
mov
xor
inc
pop
push
stc
fsubrs
cmp
sub
pop
arpl
xchg
inc
scas
pop
scas
roll
cltd
add
ljmp
adcb
jp
std
mov
xchg
mov
or
pop
loope
out
add
imul
ja
mov
rcr
mov
or
sub
jno
aam
inc
aad
xor
repnz
ret
rol
and
lds
mov
sbbl
pop
dec
scas
and
jnp
hlt
xchg
cmp
repz
mov
subl
fcmovb
sbb
xor
sbb
lea
aam
add
dec
mov
mov
mov
imul
mov
mov
loop
stos
mov
jbe
test
jp
or
cmovl
mov
mov
loopne
js
xlat
loope
movsb
pop
dec
std
jge
out
or
jno
adc
sub
mov
int3
movsl
mov
mov
adc
xor
mov
aaa
mov
inc
fwait
sbb
das
js
loopne
insl
adc
ds
add
xchg
adc
fistps
fs
cltd
jmp
sub
test
jmp
dec
jle
sbb
pushf
jecxz
insb
cld
repz
lahf
push
cmp
leave
inc
xchg
lods
pop
or
sub
cmc
push
pop
inc
mov
stos
pop
xchg
xchg
xlat
jae
jmp
or
adc
stos
sti
push
shrl
mov
jg
fcomps
popa
lret
call
rcrl
xchg
std
jb
and
in
mov
mov
xor
xchg
mov
sub
mov
pop
cmp
and
or
repz
mov
mov
int
imul
shlb
mov
sub
pop
into
lods
js
xor
inc
insb
popf
mov
nop
or
aas
ret
inc
sub
sub
outsb
int
mov
inc
and
dec
add
jecxz
pusha
fchs
cmp
xorl
popf
inc
push
scas
mov
mov
mov
cmp
or
fistpl
inc
push
insb
push
push
dec
data16
sbb
sbbl
push
mov
in
in
fnstcw
push
sub
int3
lea
fs
sub
jb
push
xchg
in
xchg
mov
push
lods
jge
cltd
ficoms
dec
shll
imul
int3
fldenv
sbb
fdivrp
mov
imul
push
sbb
cltd
mov
data16
repnz
fdivs
test
popa
or
ror
js
inc
lds
xchg
push
sub
insl
xchg
test
shrb
test
or
int
mov
adc
mov
mov
nop
popa
adcl
dec
inc
mov
in
and
mov
pop
and
in
jp
xor
mov
or
mov
or
pop
lock
or
jne
push
mov
lcall
mov
out
addl
popf
add
push
inc
mov
mov
sub
cmpsl
dec
xor
cwtl
addr16
push
scas
sbb
add
sub
nop
dec
push
jne
add
cmpsl
fisttpll
les
stos
push
xor
push
lods
inc
cmp
xchg
jp
adc
lods
fists
fwait
adc
testb
test
pusha
cwtl
jbe
mov
mov
adc
outsl
stc
push
cmp
aas
les
fldenv
loopne
push
std
and
dec
jge
negl
insl
jl
and
out
ret
shrl
cwtl
lock
cltd
sbb
cli
jbe
dec
call
rcll
jmp
inc
jp
adc
jno
cmp
loope
addr16
int3
push
push
sbb
jge
and
es
xchg
leave
repz
cli
sbb
cmp
dec
jl
xchg
adc
xchg
stos
in
inc
add
xchg
out
jecxz
inc
rorl
bound
sub
fisubl
icebp
mull
mov
or
sub
arpl
mov
dec
adc
inc
loope
dec
inc
dec
or
xor
mulb
lods
pushf
dec
and
sbb
call
mov
cmp
mov
and
cmp
and
sub
inc
mov
leave
jecxz
mov
add
add
imulb
adc
jl
gs
and
inc
lcall
int
sub
xchg
adc
inc
push
lahf
in
sahf
test
jb
and
mov
jle
jmp
shlb
lods
sub
lods
aaa
popf
add
inc
push
icebp
adc
jp
into
mov
pop
cwtl
jae,pt
push
xor
or
inc
push
repz
outsb
pop
jmp
in
fildll
sbb
sahf
inc
idivl
add
shrb
lea
pop
loopne
inc
jmp
jp
dec
lods
inc
mov
mov
xor
push
cs
jl
pop
add
pop
mov
or
icebp
and
cld
jb,pn
xchg
js
ds
or
mov
sbb
xor
fimull
mov
aaa
sub
mov
inc
xlat
push
jmp
test
pop
ja
push
cmp
cmc
pop
inc
fs
jg
dec
ss
cli
dec
ja
fstps
adcl
jne
pop
rcll
fildl
jno
cmpsl
cltd
mov
adcl
mov
add
outsb
inc
gs
and
xchg
sub
in
dec
xchg
loope
ja
or
in
sub
jbe
sub
orl
mov
cmp
in
lock
push
add
dec
aad
cmpsb
popf
push
pop
inc
aaa
rep
or
test
mov
bound
ja
inc
cwtl
and
and
add
cmp
and
imul
mov
adc
cmp
call
pop
out
sub
fbld
add
imul
test
fistl
mov
push
sub
stos
jo
jmp
mov
push
cmp
outsb
mov
and
inc
or
fmull
jle
imul
outsl
out
jle
shll
aas
data16
sub
xor
lret
gs
jle
push
movsb
cmp
mov
loop
pop
ret
fdivl
repz
call
test
mov
cmp
lea
shlb
mov
in
faddl
out
dec
adc
cmpb
rorl
lret
mov
shrb
dec
mov
cmp
in
push
sub
xor
imul
fisubrl
cmp
and
jbe
xchg
and
cmp
add
pop
push
cmp
rolb
into
arpl
jnp
xchg
mov
int
adc
jne
push
mov
lods
ret
repz
lret
jo
dec
iret
sti
or
outsl
inc
adc
lahf
add
popa
mov
sub
xor
lret
inc
ljmp
dec
test
negl
cld
mov
sarl
jle
lods
lea
out
imul
roll
es
xchg
in
mov
dec
add
adc
jb
cwtl
ljmp
lret
out
mov
imul
lret
js
mov
ficoml
ss
gs
xchg
loope
push
sub
inc
push
cmp
cmpsl
lods
pop
jge
cmp
add
push
push
xor
dec
in
loop
shll
inc
outsb
cmp
adc
in
nop
lds
inc
mov
ja
and
or
jmp
ret
mov
cs
mov
aad
insb
add
xchg
jle
call
outsb
adc
mov
aaa
mov
out
call
cmp
icebp
fiadds
jo
lahf
pushf
pushf
lcall
inc
pop
xor
mov
leave
or
int
loope
cmpsb
leave
daa
sbb
aad
je
inc
add
movsb
fsubp
imul
lea
jecxz
shr
push
iret
sub
out
adcl
push
fs
mov
sub
and
sub
andl
repz
sbb
lods
mov
inc
sbb
mov
add
popf
test
shl
sahf
or
les
loop
imul
mov
jnp
xor
or
sahf
inc
push
in
or
ds
or
arpl
push
push
pusha
movsl
das
outsb
fidivs
iret
push
or
adc
jb
arpl
jecxz
out
stos
xlat
mov
dec
popf
call
jmp
js
dec
imul
mov
aas
sub
popf
mov
cs
loopne
icebp
in
add
ret
sbb
leave
mov
inc
jo
stc
push
lods
push
repnz
cld
push
inc
mov
cmpsb
mov
jno
std
cmpsb
inc
push
mov
movsb
mov
xor
push
or
std
lret
ja
bound
jnp
pop
call
inc
jg
cmp
fs
clc
lret
adc
jns
push
xor
add
data16
jb
aas
into
or
jp
mov
int
or
aam
daa
pop
adc
mov
jle
push
insl
sub
jb
push
push
add
rcll
sti
insl
cmp
push
push
push
or
add
or
std
lods
mov
das
push
adcl
jo
jle
jl
mov
or
loopne
cmp
movb
push
cmp
int
xor
packssdw
aas
mov
jge
loop
ds
cmp
shrb
orl
pop
sbb
sub
test
daa
arpl
imul
aam
sahf
mov
into
mov
dec
xlat
ret
int
push
stos
lret
lgs
mov
popa
scas
or
mov
je
shlb
xor
dec
push
data16
dec
inc
xor
mov
jnp
or
sbb
xor
jno
xchg
push
mov
push
mov
jle
or
ja
and
mov
mov
dec
outsb
enter
mov
mov
dec
push
and
cmp
sub
push
nop
mov
pop
xchg
add
fbstp
adcb
lods
sub
call
rcll
aam
fdivr
sarl
addb
je
rcr
aam
push
jg
dec
and
gs
inc
mov
les
mov
sbb
mov
push
inc
in
cltd
ret
sbb
test
sbb
mov
pop
jns
mov
push
mov
hlt
lds
pop
insb
out
pop
cwtl
lahf
mov
pop
cmp
data16
stos
bound
xor
inc
push
pushl
out
ret
std
jge
scas
test
cmp
mov
mov
mov
pop
push
mov
sbb
sub
add
into
sahf
cmp
bound
lods
and
add
stos
push
outsb
push
aas
mov
sub
sbb
jmp
sti
loop
sahf
mov
outsl
mov
mov
dec
nop
and
mov
jmp
mov
add
sub
jne
push
push
jae
push
aas
nop
test
in
out
inc
mov
aas
xchg
imul
jno
pushf
into
pop
jb
mov
and
add
xor
stos
cmc
sbb
jp
lcall
pop
cmp
cmp
shll
and
inc
sub
repnz
push
push
out
lock
fadds
repz
imul
sahf
mov
mov
ja
cli
aad
out
pop
scas
out
leave
mov
movsl
cmc
jo
out
sbb
cmc
cmp
xchg
xchg
pop
mov
push
adcb
daa
dec
jno
xchg
es
add
sub
xlat
cmp
adc
sti
cmp
add
push
or
add
cmc
add
fs
add
mov
in
test
xchg
push
incl
dec
xor
in
push
xchg
sub
into
inc
in
mov
push
in
inc
out
movsl
inc
mov
fs
or
in
or
mov
xchg
inc
push
jnp
pop
inc
jp
stc
jl
lods
push
push
ds
hlt
bound
mov
dec
pop
fldenv
repz
test
aas
pop
xor
iret
sbb
inc
icebp
sbb
jnp
jp
insb
imull
jnp
imul
aam
outsb
sub
xchg
dec
push
or
sarl
cltd
aas
ret
mov
push
push
subb
cmp
pop
sahf
scas
sbb
pop
xor
push
mov
loopne
div
jno
dec
test
cmp
cld
or
cs
outsl
mov
insb
inc
push
xor
loopne
jmp
push
sahf
mov
imul
enter
pop
xlat
adc
adc
mov
cmp
or
aaa
mov
inc
stc
stc
inc
notl
in
inc
aaa
inc
out
xlat
add
lret
mov
inc
or
and
rsm
xchg
lods
pop
out
mov
cmp
xlat
ret
out
fs
push
and
enter
movsl
out
movsb
clc
popf
jae
sub
pop
jne
aad
mov
pop
pushf
push
not
mov
andb
push
mov
scas
les
icebp
push
mov
push
fistl
fwait
je
fucomi
push
bound
adc
adc
lahf
pop
cmp
mov
or
lret
nop
adc
rcrl
push
mov
adc
xchg
xchg
ret
push
aas
xchg
outsl
scas
mov
insl
mov
xor
xchg
lea
mov
sbb
aaa
pop
data16
pop
jg
in
pop
jno
pop
adc
inc
mov
test
imul
jno
jae
mov
fstpt
out
cmpsl
push
sbbb
add
lock
test
js
das
add
push
imul
sbb
int
cmp
into
in
lods
pop
hlt
sub
and
sahf
addr16
clc
jb
add
adc
sub
jmp
mov
lret
push
jg
aad
insb
jmp
and
stos
cmp
inc
push
sahf
call
or
icebp
xor
rcll
mov
fadds
inc
repz
mov
iret
cmp
shll
xchg
out
sbb
mov
push
push
outsl
stos
imull
shlb
mov
push
outsl
cmp
clc
push
or
mov
dec
xor
in
ficoml
xchg
or
leave
adc
push
push
jmp
ficoml
repz
jo
sahf
add
sub
cmp
daa
mov
sti
cltd
add
fists
mov
mov
rcll
pop
jae
xor
idiv
fists
dec
or
jmp
test
sub
or
das
and
pop
jl
add
lds
pop
xchg
mov
orl
mov
arpl
pop
push
cmova
daa
movl
cmp
enter
cmp
push
xchg
ret
xchg
in
iret
dec
ret
jge
dec
cltd
std
aam
mov
inc
xchg
xchg
push
adc
fnstsw
in
dec
xchg
inc
negl
or
cmp
inc
call
mov
xchg
outsl
subl
fstpt
jno
xor
mov
xor
rcr
lods
sahf
pop
int3
jne
mov
inc
loopne
jmp
jnp
dec
or
mov
mov
push
xchg
js
xchg
fs
out
mov
and
popf
mov
ss
repnz
out
js
rcrl
jnp
scas
movsl
xchg
mov
jmp
xlat
ds
pop
lahf
sbb
mov
clc
repnz
inc
ljmp
aad
cmpsl
test
lods
mov
cmp
and
std
mov
orb
testb
fmul
dec
jl
pop
jp
push
xor
mov
subb
test
out
lock
push
or
cmp
int
push
pop
jl
sbb
push
jecxz
cmp
sbb
imul
pop
jb
hlt
mov
cmp
pusha
add
inc
outsb
mov
sbb
nop
cmp
dec
sbb
into
add
fs
or
repnz
aas
gs
jmp
adcl
jns
push
push
or
sbb
sbb
xchg
cmc
in
mov
add
xchg
mov
out
pop
int3
mov
lock
and
scas
inc
add
cli
adcl
push
jno
sbb
rorb
loopne
sub
arpl
cwtl
mov
out
dec
imul
aas
rol
pusha
jp
fwait
andl
cmovle
inc
daa
mov
data16
pop
aas
add
fcmovb
test
out
dec
je
hlt
in
push
int3
sbb
ret
xrelease
push
sbb
cmp
rcll
in
or
and
movsl
mov
push
out
pop
jmp
icebp
ja
nop
jge
in
add
arpl
mov
lock
pop
gs
es
js
rcrb
pop
add
aam
popf
adc
out
scas
or
push
adc
cli
or
adc
test
cwtl
jns
push
sub
out
in
loopne
sbb
seto
rclb
lahf
jo
inc
test
in
inc
xchg
sbb
xchg
cmpsl
adc
inc
push
stos
dec
cmpsl
mov
jg
out
stos
iret
loope
fcmovbe
mov
test
call
inc
inc
ja
xlat
xchg
ud2
popf
sbbl
outsb
repz
jmp
sti
ret
xchg
cmp
repz
jg
xchg
pushf
dec
adc
mov
adc
mov
lcall
dec
xlat
xor
cmp
jo
or
push
sbb
fisubl
gs
pop
test
cs
nop
idivb
fisubrl
lods
jl
insl
bound
adc
xchg
loop
outsb
mov
mov
lock
lea
push
adc
adc
adc
xor
xchg
mov
xchg
adc
aam
jecxz
jno
out
push
inc
loopne
push
fcoms
mov
inc
cltd
push
cld
test
imul
fxch
push
xchg
aad
lds
push
mov
in
call
add
xchg
add
pushf
add
sbb
sub
and
gs
hlt
mov
sub
aad
mov
inc
out
cltd
mov
xor
push
inc
lods
mov
sbb
mov
mov
mov
add
xchg
mov
mov
xchg
not
sub
in
aas
mov
filds
jle
std
sub
fs
imull
mov
fnstsw
and
inc
fstl
jecxz
lar
cmp
jge
in
jae
pop
ljmp
lcall
push
data16
sarb
mov
scas
fwait
or
and
sub
ds
iret
rcrl
rorl
adc
pop
add
xchg
mov
jle
adc
mov
jns
clc
iret
push
jns
dec
stos
int3
jns
call
fbstp
pop
pop
call
and
inc
jmp
je
xchg
movsb
fiaddl
xor
adc
mov
push
addr16
adc
pop
daa
inc
stos
or
out
sub
fldl
push
ljmp
incb
test
das
in
mov
push
je
jb
testb
ljmp
test
lcall
lret
addr16
jge
orl
jg
push
push
and
or
dec
cwtl
or
add
pop
dec
shr
mov
push
test
mov
mov
faddp
mov
leave
loope
mov
orb
bound
mov
push
lret
dec
push
sbb
stos
gs
pop
add
cwtl
stos
pop
jbe
stc
jb
nop
jle
inc
inc
dec
enter
push
test
aas
sbb
jl
cmp
push
jbe
sub
inc
es
xchg
imul
cmp
imul
ljmp
cmp
dec
mov
jb
xor
pop
in
and
out
push
or
cwtl
idivb
and
aas
repz
fwait
lahf
outsl
push
loopne
fistpll
cs
in
dec
jae
adc
shl
repnz
sub
mov
ja
push
mov
lret
and
imul
dec
jmp
ja
jbe
or
popf
ja
mov
or
leave
aas
sub
stc
adc
or
fisubrs
scas
push
or
jne
mov
repnz
jl
stos
lock
imull
fisubl
ficompl
jg
mov
jo
shlb
mov
int3
or
stos
pop
orb
fdivrl
das
pop
adc
clc
cwtl
pop
xor
rcll
cmp
sbbl
inc
shr
sub
imul
xor
ror
pop
dec
int
xor
leave
adc
clc
cld
roll
cwtl
fmull
xor
dec
and
pop
adc
mov
mov
das
dec
and
in
rclb
das
icebp
xchg
jmp
fdivrl
fnstcw
cmpsl
in
out
addl
cmc
push
cmp
pop
add
push
xor
push
rcll
out
out
repz
pop
cmpsl
jbe
daa
mov
mov
int
push
pushf
xchg
push
test
xchg
out
ja,pt
cli
xchg
cwtl
test
shl
outsl
and
daa
clc
jae
int3
lcall
jmp
jp
adc
xor
popa
jnp,pn
dec
mov
sbb
bnd
imul
lock
scas
sub
xor
sbb
xor
xrstor
add
insb
sbbl
arpl
inc
pusha
shl
sahf
add
add
popa
jae
insl
mov
jae
mov
int
into
cmp
cwtl
or
arpl
outsl
ds
nop
aad
scas
cwtl
xor
lcall
bound
sahf
pop
in
sub
xchg
mov
out
dec
andl
rcl
cmc
add
push
xor
or
dec
push
arpl
sub
fstl
popf
xchg
push
mov
inc
xor
sub
push
dec
insb
lds
loop
ret
mov
test
jne
sarb
dec
out
out
push
pop
pop
adc
rclb
lds
jmp
xchg
loop
cltd
ja
adc
fadds
ds
or
enter
jbe
repnz
and
and
mov
push
movsl
hlt
fcomps
imul
sub
mov
loopne
test
mov
or
shll
call
cmpb
cmp
shll
and
mov
cmpsl
clc
jle
or
xor
mov
call
jmp
xor
jno
rcll
clc
fidivs
cwtl
xchg
test
cld
jle
jo
add
xchg
jl
add
cmp
in
out
ret
rcrb
pusha
or
or
jb
movsb
scas
and
cmp
mov
dec
mov
push
rcl
outsl
or
nop
lret
inc
in
fiaddl
repnz
popa
mov
frstor
sti
ds
jbe
adc
and
lods
aaa
mov
or
xchg
mov
pop
mov
sub
movsl
out
lcall
mov
or
jnp
and
mov
pavgb
mov
mov
out
cmp
loopne
outsb
call
ret
jg,pt
cmp
lods
adc
dec
mov
jne
jle
aas
movsb
iret
decl
mov
repnz
leave
push
mov
in
adc
mov
mov
movsb
jne
add
mov
mov
or
add
sub
push
jmp
adcb
mov
jmp
push
clc
pop
ljmp
movsl
fsubs
dec
push
jno
push
pop
test
out
mov
lret
cmpsb
clc
add
xchg
add
sbb
andb
mov
jle
sub
data16
lods
cmp
lcall
sbb
das
mov
cmp
inc
loopne,pt
test
std
push
test
cmpsb
xchg
jp
jge
dec
pop
jle
pop
jecxz
sub
jg
and
inc
out
stos
rclb
jp
test
rorb
insl
andl
mov
sub
lret
fimull
pop
mov
mov
push
add
xlat
les
rcr
cmpsb
add
add
sbb
xlat
in
xor
ret
xor
add
jge
cmpsb
or
sarb
pop
lea
out
daa
mov
add
mov
cld
popf
or
test
roll
hlt
lret
add
pop
int
inc
pop
adc
aaa
test
shlb
cmp
aam
in
xchg
push
and
aas
imul
mov
cmp
sbb
addr16
fsubs
ja
int
in
fs
hlt
subb
and
imul
push
lret
aas
pop
cltd
mov
je
fisubs
jle
call
and
sub
sbb
cmpb
jae
mov
or
jmp
inc
push
iret
orb
ds
add
xchg
aas
loop
sbb
ror
cmp
rcr
scas
push
inc
pop
iret
cmp
jg
negb
or
push
loopne
inc
loopne
inc
mov
jmp
bound
push
cld
xor
push
jecxz
adc
fdivrp
xor
ficoms
in
lds
mov
loopne
lret
je
mov
lret
inc
lahf
outsb
sub
jb
mov
out
stos
mov
or
nop
rorl
or
jmp
in
jb
shrb
cltd
pop
jg
inc
pushf
adc
lahf
mov
in
push
mov
push
jp
mov
lcall
cwtl
insb
stos
jne
inc
push
jl
dec
mov
gs
xor
outsb
push
xchg
mov
call
cs
rcr
cli
aam
int3
lahf
push
nop
push
hlt
sub
pop
ror
add
push
mov
pusha
cmp
aam
ret
and
xchg
ljmp
mov
sub
stc
outsl
ja
xor
adc
dec
push
aas
or
addr16
es
test
xchg
jl
xchg
inc
loop
jnp
jmp
fmuls
lcall
aam
push
fcomps
jns
push
adc
xchg
pop
in
and
push
mov
adc
jb
pop
mov
mov
movsl
loop
ja
jmp
lret
clc
or
mov
sub
add
out
push
xchg
inc
lods
inc
lods
mov
repnz
fadd
fwait
cmp
cwtl
repnz
mov
cmp
addr16
bound
inc
xchg
ds
stos
adc
inc
jecxz
ds
in
outsb
inc
mov
shrl
clc
sbb
xor
lahf
sub
stc
into
and
jb
insb
pop
ret
jno
stc
in
add
xor
lret
xchg
fdivrs
mov
outsb
pop
jns
daa
ror
push
cmp
push
inc
pop
adc
push
fldt
insb
sub
mov
add
lea
pop
lods
int3
xor
insl
mov
xchg
stos
notb
test
arpl
movsl
inc
repz
cmpsb
in
mov
cld
sbb
imul
cmc
hlt
mov
mov
xor
cmp
cmp
adc
loope
dec
mov
test
pusha
fisubrl
and
xorl
xchg
and
jge
sbb
xchg
adc
mov
mov
mov
ret
pushf
mov
sbb
sub
mov
cmc
cwtl
or
cmc
les
sahf
add
sub
in
cmc
jmp
dec
popa
icebp
aam
insb
ss
loopne
push
inc
scas
push
and
sahf
jp,pt
mov
data16
pusha
rorl
push
xor
test
idivb
loopne
mov
sub
scas
mov
cld
icebp
ljmp
pop
or
dec
sbb
jb
fucom
push
fstpl
lea
mov
cmpsl
pop
popa
shr
int3
xchg
inc
ds
xor
data16
mov
mov
cmp
lret
add
mov
add
dec
testl
xchg
dec
sbb
mov
shrl
cmpl
inc
sbb
push
leave
orl
inc
subb
sbb
mov
mov
inc
sarl
sub
sbb
shlb
pop
jae
in
test
insl
insl
pop
int3
les
sbb
test
cmpl
test
pop
jno
std
cmp
pop
add
jbe
nop
int3
sahf
insl
fldl
add
push
mov
je
es
jge
dec
je
xchg
ret
mov
ja
inc
xchg
lret
sbb
das
test
xchg
sub
jns
push
adc
outsl
xchg
shrl
insl
std
jecxz
adc
in
xlat
jmp
jbe
push
mov
cmpsb
inc
or
mov
lods
mov
inc
pop
stc
in
add
add
mov
xchg
mov
dec
mov
and
ret
cmpsl
movsb
push
sbb
aam
cmpsb
cmp
not
scas
fsubr
xchg
cmpsb
pop
outsl
test
push
imul
mov
daa
push
push
cmpb
push
jecxz
mov
gs
mov
jne
cmp
jl
adc
cmp
adc
mov
mov
cmc
jecxz
arpl
enter
dec
and
int
hlt
push
in
mov
push
sbb
out
pop
and
and
mov
pusha
add
or
movsb
loop
popf
push
data16
xchg
pop
test
test
in
pop
and
xor
fistpll
das
push
dec
or
lds
sbbl
int3
mulb
cmc
movsb
pusha
cmp
pop
mov
scas
xchg
sarb
xlat
jge
scas
movsb
les
pop
int
pop
cmpb
or
aas
mov
outsl
pop
rolb
jb
jle
xor
jle
push
jb
pop
push
inc
mov
dec
cmp
in
dec
sub
call
sbb
lock
cmpsl
sub
mov
xchg
lods
mov
ds
push
andl
fstp
cmp
adc
test
push
cmpsb
out
adc
pushl
pop
insl
cmc
jp
add
jmp
jno
mov
push
mov
dec
call
ljmp
jnp
jne
or
pop
pop
movsl
dec
sub
mov
mov
es
repz
jmp
nop
cmc
unpckhps
lds
daa
fstl
sti
jo
dec
dec
stc
pop
dec
adc
pushf
movsl
mov
and
push
lcall
ror
jnp
rcl
cmp
out
bound
sbb
arpl
xchg
mov
add
inc
cld
popa
mov
cmpsl
sub
mov
xor
aam
ret
outsl
leave
and
mov
in
jecxz
dec
lock
xchg
xchg
mov
or
push
fwait
cmpb
mov
or
sahf
out
push
ljmp
das
enter
cmc
mov
mov
mov
mov
loope
and
pop
rorb
mov
mov
push
cmpb
stc
mov
out
jno
testl
out
fcmovnb
mov
and
cmpsl
xchg
push
leave
enter
mov
mov
jecxz
cli
dec
jae
mov
jo
stos
mov
leave
fimuls
ds
cmp
arpl
and
divl
cwtl
lds
rcl
int
fldl
and
push
repnz
xchg
dec
fistpl
lods
rclb
sub
sbb
jne
pusha
jb
mov
cmp
jmp
bound
lahf
cmp
mov
xchg
scas
add
adc
iret
gs
idivl
add
rorl
adcb
xchg
out
adc
cmp
aam
clc
push
sbb
mov
fisttpl
ljmp
xchg
repz
lahf
int3
mov
in
adc
dec
les
xchg
lods
mov
mov
xlat
mov
inc
mov
gs
sbb
lds
fidivrs
jne
iret
cltd
test
inc
aaa
loop
sahf
icebp
dec
sbb
cmp
mov
mov
xor
jne
out
fstl
rorl
mov
pop
ss
jmp
inc
dec
sub
pop
mul
pop
xchg
dec
jo
enter
inc
shlb
sar
add
aam
and
gs
mov
mov
sub
pushf
insl
repnz
test
adc
adc
pop
xor
mov
cmp
sbb
jl
scas
add
out
or
sbb
and
aam
or
push
je
jp
fstl
mov
subl
fwait
ljmp
xchg
mov
and
sub
sbb
lock
cmc
lods
mull
xchg
cmc
cmpsl
fimuls
lods
sti
mov
and
mov
sbb
pop
dec
sbbb
add
jns
mov
mov
outsl
jbe
insl
mov
movsl
and
pop
pop
lods
gs
cmc
inc
negl
adc
xor
mov
push
push
xchg
mov
ret
sbb
test
daa
pop
mov
es
mov
insl
ds
sbb
ja
push
lds
mov
adc
and
mov
xor
cmp
cmp
ds
insb
push
daa
mov
addl
sbb
aaa
mov
push
pop
into
ss
sbb
imul
sub
stc
xchg
mov
fsubrp
out
loop
bound
mov
cld
adc
negl
inc
xor
sub
inc
fisttpl
aas
cmp
dec
imul
addr16
jp
pusha
cs
out
jg
sahf
ja
movsb
jl
in
pop
and
rcrl
ret
orb
insb
jno
sub
mov
dec
inc
rorl
imul
push
push
and
sub
mov
jne
sarl
clc
xor
add
fcomi
out
pop
add
bound
add
xchg
es
hlt
ficoms
mov
jbe
sub
stos
pop
adc
insl
pop
push
cld
aad
int
xor
pop
rolb
and
repnz
jle
lahf
rcll
push
add
cld
jl
and
les
pop
ret
int3
test
mov
aas
jae
xchg
fwait
push
jbe
mov
fimull
inc
add
inc
xor
enter
jmp
lock
popf
cmpsl
inc
iret
clc
ret
and
xor
jecxz
cltd
xor
fucomi
sahf
mov
pop
push
les
in
jp
cld
jnp
mov
repz
call
fimuls
sub
jge
fs
outsb
inc
clc
mov
mov
inc
cmp
dec
shl
adc
push
pop
cmp
leave
mov
inc
in
sub
sub
int
lret
aaa
sbb
xor
push
in
fbstp
jmp
jb
enter
scas
inc
lock
inc
jl
in
jmp
mov
test
int3
data16
shlb
movsl
sti
xor
inc
mov
dec
ljmp
jmp
idivl
xor
std
jg
shlb
lahf
sbb
cmp
xor
push
and
xchg
test
push
pop
add
mov
jle
sbb
mov
das
mov
push
fsubs
inc
ret
mull
fs
out
lahf
xchg
incb
ret
adc
addb
in
test
xchg
push
decl
fistpll
in
bswap
mov
lcallw
push
or
jae
out
mov
lock
dec
xchg
mov
mov
xchg
pusha
cs
inc
jne
std
gs
aaa
les
dec
in
ret
xchg
add
xor
sbb
mov
push
push
ja
sbb
jp
sti
out
push
jmp
mov
push
das
ja
enter
clc
mov
sub
out
or
adc
cmp
dec
add
aam
dec
jne
mov
leave
je
sti
das
inc
test
fisubs
outsb
insl
adc
sub
xor
lds
test
shll
cmp
mov
or
out
mov
pop
loope
inc
lret
pusha
iret
push
dec
pop
push
lret
scas
pushf
dec
sub
pusha
insl
popa
gs
hlt
loopne
nop
cwtl
jno
push
pop
je
mov
pop
sbb
sbb
ret
inc
push
fcmovne
aaa
or
lahf
fwait
rorl
cmc
call
add
or
iret
inc
orb
stos
pop
aad
mov
mov
jl
lds
lea
pop
dec
adc
and
mov
mov
bound
fwait
out
mov
aam
dec
nop
mov
xor
pop
aam
idivl
movsb
loop
inc
cmp
mov
lods
mov
pop
jg
decb
addr16
jb
inc
dec
mov
sub
and
sub
sub
jno
stc
aam
xchg
push
jecxz
xchg
mov
sbb
das
fmull
arpl
hlt
popf
test
in
pop
mov
sub
shrl
loopne
inc
cltd
loopne
cmpsb
rcll
cmp
std
ja
hlt
dec
push
pushf
jae
lea
jmp
fisubrs
sub
pop
adc
mov
sahf
gs
dec
mov
or
mov
je
shlb
xchg
iret
or
jns
jmp
cmp
inc
ficoms
xchg
aaa
sbbl
rcll
fwait
or
cmc
sub
mov
pushl
iret
fcomps
daa
push
sub
and
rcrb
shll
mov
add
jmp
cli
lds
jae
scas
inc
sbb
imul
mov
shrb
lret
adc
push
xchg
dec
iret
daa
inc
sahf
sbb
data16
ja
inc
jp
in
push
sbb
sar
shlb
mov
icebp
filds
xor
dec
inc
and
mov
mov
inc
mov
xor
les
push
imul
inc
sub
rorb
insb
lock
sbb
dec
cli
fstl
or
fnstsw
fsts
push
sub
xchg
sbb
aam
insl
push
sahf
andb
xor
inc
pop
rorb
sahf
jecxz
cli
lea
aam
dec
or
movsb
mov
cs
sub
pop
daa
jg
xchg
sarl
lock
andb
jecxz
and
pop
loope
push
sbb
dec
dec
sarb
mov
movsb
push
das
adc
push
push
sbb
lods
dec
pop
add
insl
and
sti
pop
mov
sbb
aas
mov
jb
sub
outsl
push
add
jno
mov
adc
out
jle
mov
xor
adc
pop
outsb
mov
sub
sbb
imul
and
fdivl
inc
test
test
lock
in
push
loop
jne
jo
test
das
pusha
stos
jo
sti
mov
loope
daa
mov
lods
daa
push
daa
xlat
xchg
fnstcw
push
fucomi
insl
xor
push
stc
adc
add
adc
clc
add
mov
push
outsl
das
insl
fs
mov
jmp
fs
mov
dec
ret
jmp
aas
pop
cli
or
inc
sarl
xor
and
fsubr
test
es
or
jmp
adc
mov
pushl
fldenv
mov
daa
and
cmp
mov
push
lret
pop
mov
shll
stc
cmp
rcrl
fwait
notb
cmp
cmp
loop
add
fidivrs
push
mov
sbb
imul
add
and
ja
pop
lds
scas
shrl
shlb
test
insb
sbb
aad
ds
mov
insb
test
int3
aad
stc
pop
and
lahf
sbb
mov
pop
xchg
mov
in
mov
int
out
sbb
mov
loopne
pop
movb
mov
fnclex
sbb
divl
addb
mov
sahf
push
icebp
nop
mov
stos
adcb
xor
jbe
leave
std
mov
xchg
cmp
xchg
daa
imul
jp,pt
hlt
jae
jp
outsl
push
mov
fldenv
xchg
pop
and
pop
ret
pop
pop
and
out
js
xor
gs
out
push
mov
sbb
cwtl
adc
movsb
fbld
jg
mov
pushfw
add
call
or
mov
shl
xchg
mov
push
mov
xor
clc
prefetch
or
xchg
in
and
push
mov
cmp
or
int
mov
jo
mov
lods
int
dec
or
cmp
sbb
andb
outsl
pop
andb
int3
mov
mov
mov
xor
or
cmp
fcompl
dec
loope
rcrl
clc
movsl
or
xchg
cmp
addr16
fmul
dec
mov
jne
leave
stc
jl
in
jp
inc
jge
pop
or
dec
dec
test
leave
insb
lret
xor
or
inc
ds
sahf
jge
cmp
push
fisttpll
ret
or
movsl
iret
xchg
das
push
xlat
ss
cmp
jecxz
mov
data16
out
mov
js
sbb
xor
xchg
or
dec
sahf
mov
xor
mov
mov
lods
mov
pop
outsl
cli
adc
pop
call
rolb
adc
fcomps
add
fs
rcrb
cmp
pop
pushf
jg
fildll
cmp
out
out
push
popa
fbstp
mov
addr16
mov
jns
in
adc
jno
int
fwait
jo
cwtl
enter
pop
mov
int3
insl
loope
cmpsb
hlt
mov
aas
mov
or
ss
mov
data16
adc
das
jno
out
test
xchg
pop
das
and
xchg
out
push
into
adc
add
sub
bound
mov
mov
pop
test
add
gs
adc
xchg
out
dec
stos
ret
and
push
ja
sbb
push
or
shll
push
scas
sub
mov
cmp
lock
xor
dec
pop
decl
cmpsl
xchg
outsb
dec
xchg
imul
lret
pop
in
xbegin
push
fidivl
pop
dec
push
fildl
aaa
add
pusha
pop
ja
movsb
fs
ja
filds
cmp
out
xchg
das
shl
inc
mov
fwait
loopne
cld
xor
imul
lret
sbb
lret
jne
fcmovne
clc
sub
dec
stc
cltd
int3
dec
into
inc
add
mov
into
jmp
movsl
cmc
jnp
adc
mov
in
rep
inc
and
and
mov
outsb
sub
out
test
add
add
cmpsb
pop
shr
les
lods
dec
jge
lock
loopne
push
mov
loopne
dec
notl
js
insb
cmp
jno
dec
and
pop
pop
mov
popa
dec
inc
icebp
pop
jbe
test
mov
mov
push
jg
pop
xchg
sbb
jae
jge
pop
or
aad
xchg
mov
add
inc
or
jmp
push
rorb
daa
gs
popf
stos
aam
cld
inc
sbb
mov
inc
mov
xchg
repz
popa
jle
cltd
add
pop
mov
jno
cmc
iret
xor
scas
das
std
jmp
xlat
or
cwtl
jno
dec
mov
fstps
push
cs
cmp
les
popa
std
dec
sub
outsl
and
xchg
xor
sub
and
nop
in
dec
dec
insb
imul
cmpl
sbb
push
mov
and
decb
imulb
adc
push
clc
push
sub
sahf
mov
addr16
fstl
mov
inc
mov
fisubrs
or
ror
jae
sub
fiaddl
xlat
lds
gs
out
push
xor
stc
adc
loopne
mov
frstor
jmp
bswap
fdivp
jns
push
cmp
int3
inc
mov
les
pop
xor
sarl
sarl
test
xor
push
sub
ljmp
fisttpll
sub
sbb
add
sbb
test
popf
in
stos
sbb
adc
into
ja
or
jb
mov
icebp
push
push
cmp
icebp
xor
jae
fcomps
cmp
adc
dec
jg
arpl
lea
fnsave
adc
mov
adc
incl
mov
aaa
jle
pop
dec
popa
sbbl
scas
inc
ret
sbb
push
out
jp
push
xchg
ret
dec
std
or
xorb
iret
sbb
stos
aam
xor
fcmovu
mov
mov
imul
sub
mov
xchg
scas
pop
mov
ljmp
lods
shrb
jecxz
jns
pushf
outsl
scas
into
inc
jb
imul
cmp
ds
sbbb
js
pop
jae
fmul
out
dec
or
cmp
and
fdivrl
jge
jecxz
push
aad
mov
inc
jecxz
mov
enter
fildl
movsl
and
pushf
in
ljmp
add
test
cmp
cmp
or
add
pop
movsb
jne
mov
gs
mov
out
movsl
or
stc
popf
popf
pop
cmp
add
xchg
pop
movsb
and
jg
jmp
ret
pop
xchg
dec
push
jg
rcll
push
jo
ja
into
pusha
xchg
adc
xchg
inc
mov
xchg
mov
stos
int3
dec
pop
fistpll
movsl
or
lock
lret
icebp
nop
inc
lcall
movsb
mov
pop
nop
inc
filds
dec
push
fimuls
out
and
mov
std
sbb
mov
cld
pop
cmpsl
and
adc
dec
repnz
jmp
repnz
adc
push
movsb
xlat
jae
mov
jns
andb
mov
pop
neg
mov
dec
mov
lcall
lods
ljmp
dec
pop
pop
jns
xchg
xchg
mov
dec
or
fcoms
and
jge
mov
lahf
out
mov
in
subb
lret
push
jmp
dec
cltd
pusha
scas
push
stc
lods
jp
in
lds
sbb
inc
xchg
fstps
out
enter
rclb
adc
push
movsl
mov
icebp
jae
push
pop
mov
xorl
scas
sub
adc
adc
mov
into
les
xchg
adc
inc
lock
xor
ljmp
push
xchg
mov
ljmp
push
sub
xor
repnz
test
adc
fs
xchg
in
pop
sub
adc
cwtl
xchg
lock
or
mov
and
imul
push
sahf
clc
add
sti
or
loope
in
mov
inc
adc
into
xor
adc
jl
jnp
mov
lcall
sub
jnp
daa
dec
bound
mov
jno
mov
push
push
mov
inc
mov
aad
stc
movsl
or
or
into
addw
sbb
in
pop
or
shlb
das
sub
inc
hlt
cmc
je
and
fcmove
cmc
loope
mov
mov
test
std
test
sti
out
sahf
dec
adc
add
test
pop
jmp
lock
inc
sbb
adc
sub
test
fists
ficompl
jnp
data16
loope
insl
push
inc
mov
inc
sbbb
pop
or
sbb
pop
lods
add
xchg
mov
jg
lods
sbb
inc
in
jp
cwtl
push
je
pop
xor
nop
in
stos
push
das
inc
lahf
addr16
xchg
inc
push
push
xchg
test
pop
cmp
clc
jmp
and
pop
jnp
mov
sahf
or
add
arpl
mov
cltd
icebp
push
imulb
xchg
mov
xlat
les
movsb
sbb
cwtl
ljmp
xor
clc
fwait
cmpsb
in
lods
pop
insb
in
pop
aaa
imul
jg
sti
mov
movl
cmp
xchg
or
lea
imul
add
push
or
rclb
mov
icebp
outsb
cmp
push
fnstcw
test
lock
mov
cmp
xchg
mov
shlb
cltd
cwtl
test
push
push
mov
cld
fsubrl
js
push
hlt
pop
jge
stos
sub
insl
add
mov
test
push
xor
xchg
mov
shrl
pop
ss
fildl
fldcw
push
hlt
test
sbb
jl
arpl
lret
fidivrl
pop
rclb
inc
popf
and
outsb
addr16
sub
sbb
adc
jge
mov
fldcw
test
sbb
mov
mov
jmp
jne
xchg
or
lret
and
jp
dec
jg
je
loope
xor
gs
jnp
cmc
call
fiadds
sub
pop
imul
fildl
jno
jmp
sub
les
int
sbb
shll
jno
pop
push
js
nop
int3
or
and
dec
push
or
movsb
loop
xor
cli
and
pop
push
bound
and
adc
lock
addl
adc
inc
js
add
decb
das
push
or
push
cmovs
adc
push
or
cmp
cli
mov
fcoml
icebp
sti
ret
jo
decl
and
mov
aaa
jmp
iret
pop
lcall
and
mov
loope
hlt
mov
sbbl
mov
inc
cld
arpl
sbb
and
cli
push
flds
pop
shrb
in
xlat
xchg
ret
test
jne
pop
fnstcw
fdivrs
or
leave
mov
ja
dec
sti
rcr
sbb
jmp
cmpsb
jnp
push
negl
inc
cli
push
mov
inc
sbb
dec
loopne
pop
add
ljmp
xor
fcomps
add
mov
jge
leave
mov
mov
cmp
adc
not
inc
fwait
arpl
and
aad
mov
sbb
gs
jmp
sbb
sbbb
sub
test
pop
and
ja
sbb
fcoml
mov
xchg
loop
jbe
repnz
in
sub
cltd
mov
jno
imul
outsl
add
pop
jl
loop
jmp
sbb
ss
shll
push
sbb
scas
mov
xor
jmp
mov
aaa
mov
jecxz
jecxz
mov
jb
sub
out
xor
pop
dec
mov
insb
xchg
cmp
inc
mov
push
lcall
inc
jo
std
inc
inc
cld
mov
dec
mov
push
fisttps
add
inc
nop
sub
icebp
xor
push
imul
rcrl
mov
jo
mov
cld
fsubl
clc
mov
pop
lret
daa
lds
and
xchg
mov
aas
aam
sarl
jl
loopne
xchg
ret
sbb
inc
pop
jle
ror
roll
dec
xchg
mov
mov
xor
in
dec
dec
and
repnz
push
mov
aaa
ficoms
push
outsl
adc
and
cli
adc
xlat
mov
dec
xor
dec
mov
dec
adcb
sub
jecxz
rcrl
cwtl
fdivr
xchg
lret
in
into
add
ljmp
or
jmp
leave
xor
fiaddl
int3
jp
lret
std
mov
sbb
sub
mov
insb
aam
jae
aas
mov
sti
loopne
scas
lret
dec
jp
repz
repnz
push
test
fidivs
daa
jmp
mov
lahf
popf
movsl
stos
sti
shrb
sbb
mov
hlt
test
jecxz
xchg
je
xor
push
add
pop
arpl
stos
js
subl
jecxz
add
sar
dec
jb
stc
inc
out
gs
or
in
push
sub
dec
pop
mov
pop
rclb
scas
cmp
imul
xchg
addr16
mov
cld
add
outsl
bound
xor
mov
adc
push
mov
cmp
pop
pushf
rclb
xchg
push
iret
ret
pop
mov
icebp
gs
out
xor
jno
outsb
shrb
pop
mov
jmp
dec
or
mov
push
imul
mov
dec
sub
aas
mov
loop
jg
jle
mov
fnsave
pop
loop
test
dec
es
push
pop
xchg
div
pop
add
cltd
inc
mov
std
mov
mov
mov
or
jnp
push
push
and
push
xor
inc
es
or
insl
outsb
movsb
add
mov
cli
and
inc
push
cs
push
aam
pop
sarl
pop
das
into
lret
xlat
clc
addr16
mov
lcall
push
cmp
inc
or
mov
pop
xor
fbstp
outsb
in
mov
sarb
sarb
leave
sub
sub
addl
dec
test
push
mov
push
jmp
imul
inc
sbb
inc
movsl
inc
lock
stos
inc
subb
jge
xchg
arpl
cmp
xor
push
dec
and
shrw
mov
stos
push
push
push
mov
cld
xchg
lds
clc
aad
aam
hlt
mov
sub
dec
pop
in
rcr
dec
xchg
inc
gs
out
mov
xor
stos
sub
setae
outsl
sti
mov
hlt
cmp
mov
das
lret
cld
std
inc
bound
push
jecxz
sbb
cmp
or
inc
out
xchg
mov
jns
push
subb
fdivrl
rcll
lcall
cmp
jg
loop
sub
inc
into
andb
inc
xchg
xor
add
mov
mov
xchg
mov
lret
lods
adc
jne
imulb
xlat
jecxz
in
lea
xor
lock
mov
clc
pusha
cmp
xor
sub
pop
mov
insl
outsl
arpl
xlat
sub
mov
sbb
std
jne
xchg
pusha
test
inc
push
mov
xor
cltd
lods
aad
pop
xor
and
fwait
mov
and
and
jmp
minps
xor
dec
mov
pusha
add
lods
xchg
pop
rorl
jmp
adc
cmp
cmc
addl
adc
rcrb
insl
mov
icebp
lods
test
aas
arpl
xlat
inc
adc
xchg
repnz
xor
pop
loope
sbb
sahf
push
arpl
mov
icebp
push
sarb
push
pop
pusha
mov
push
loop
adcl
sbb
testl
mov
test
ljmp
push
cmpsl
loope
xchg
mov
lret
sub
pusha
imul
mov
ficomps
bound
mov
pop
fwait
out
dec
movsb
dec
add
scas
rol
dec
mov
sub
inc
pop
cmpsl
ljmp
pop
mov
jge
add
sahf
add
jnp
iret
inc
push
push
ljmp
sbbb
fs
call
sbb
mov
inc
imul
pop
in
pop
and
adc
jno
and
scas
fisttpl
shl
loopne
test
mov
jle
cmpsb
sub
and
jnp
push
jle
mov
leave
cld
jb
ret
sbb
and
pop
gs
mov
sub
outsl
popf
test
dec
cmpsb
add
les
sub
or
bound
jbe
or
lods
sbb
lret
push
pop
or
lea
clc
mov
sub
mov
add
pusha
movsb
shll
test
inc
out
and
das
cmp
sub
jecxz
aaa
mov
pop
das
dec
aaa
mov
test
cld
ljmp
sub
jns
xor
lock
xchg
lret
decb
ss
orl
xor
add
xchg
mov
repnz
stos
pusha
push
sbb
sub
scas
test
or
enter
pop
pop
and
inc
lahf
loop
push
dec
out
xchg
jl
pop
pop
test
mov
roll
mov
add
dec
movsb
add
sbb
mov
faddp
xor
push
stos
test
push
lret
jno
shll
xor
adcb
in
lods
push
sbb
inc
or
ds
test
xchg
pop
jg
xor
loopne
jo
into
stos
lret
xchg
fnstcw
jno
mov
pop
fdivs
lcall
jle
ljmp
mov
sahf
ficompl
clc
out
cmp
dec
inc
dec
xchg
fdiv
stos
mov
adc
cli
ds
sub
aas
jmp
or
ja
xor
loopne
imul
push
mov
inc
fldcw
xchg
inc
out
xchg
pop
mov
mov
cld
shll
xchg
mov
mov
sbb
dec
xchg
in
xchg
int
aaa
movsb
or
call
arpl
and
fidivs
rclb
inc
push
fstps
lcall
push
out
hlt
out
inc
cmp
mov
adc
leave
icebp
fdivrl
inc
cltd
add
test
insb
mov
cli
push
xchg
push
inc
les
adc
and
jno
stos
and
inc
ds
imul
insb
sbb
sbb
aas
outsb
push
dec
enter
fs
pop
std
out
cmp
aad
int3
inc
sub
mov
es
loope
mov
add
push
lret
int
fwait
pop
imul
inc
jns
dec
jmp
test
nop
mov
push
fcoml
sub
ds
lds
cmp
pop
xchg
xlat
shrl
nop
js
pop
cmp
add
das
sti
pop
pop
jns
fsubrl
test
jbe
ds
pop
out
clc
cmp
mov
outsb
push
push
ret
shll
or
ret
xor
fdivs
jecxz
pop
push
and
cmpsl
gs
loop
cld
test
mov
fdivs
sub
cli
cltd
jp
cli
push
mov
loopne
pushf
inc
loope
stos
xchg
adc
in
jle
push
mov
inc
hlt
test
sbb
mov
adc
test
fisubrs
dec
sti
loopne
vmovd
xchg
stc
ret
dec
pop
jl
mov
lds
mov
mov
pop
loope
mov
jo
pop
and
pusha
loope
mov
mov
hlt
adc
or
push
xchg
or
jp
inc
xchg
mov
or
add
movsl
pop
in
shrb
inc
push
adc
hlt
adc
insl
push
jg
pop
into
pusha
sub
inc
jnp
loop
and
mov
test
aas
ror
mov
das
les
cmc
ret
mov
add
dec
mov
addb
movsb
pop
inc
sbb
push
sbbl
outsb
mov
mov
shr
cmpsl
jo
mov
fidivl
imul
das
scas
or
movsl
mov
jge,pn
and
adc
push
wbinvd
pop
into
pusha
jge
addr16
jo
or
dec
lret
xor
sub
orb
mov
push
sbb
in
and
cmpsw
loopne
movsb
cmp
pmaxub
cmp
mov
aam
rolb
mov
and
xchg
mov
pop
cmc
xchg
push
pop
ss
jbe
mov
lret
mov
xchg
jl
mov
pop
mov
cs
xchg
inc
mov
mov
push
push
in
es
add
in
in
iret
inc
js
decb
pop
push
mov
ja
out
xor
std
xchg
mov
mov
lahf
rorb
mov
scas
fisubrl
jb
jmp
mov
or
cwtl
pop
mov
jge
lods
mov
and
sbb
jle
int
decl
es
xchg
das
fiadds
xor
jg
dec
mov
add
mov
imul
xchg
imul
jne
push
lret
inc
sti
or
out
adc
push
shll
pusha
adc
popa
sbb
sti
scas
test
aas
jecxz
sbb
aas
add
push
lds
daa
aam
jge
or
cmc
scas
lods
sub
xor
pop
fiadds
dec
cmp
pop
in
test
out
mov
call
das
ret
out
movsb
pushf
imul
fdivr
sbb
inc
push
es
mov
nop
xor
pop
sub
lret
stos
sub
pushf
jb
push
cli
js
les
out
cmpsb
not
mov
std
xor
xchg
pusha
daa
jge
nop
aaa
lds
call
mov
push
test
scas
insl
inc
jb
inc
inc
jecxz
cmc
cmp
xor
ja
repz
sub
xlat
test
test
cs
adc
test
pushf
add
cmp
mov
lock
ljmp
mov
add
adc
je
adc
int3
clc
lret
ret
sbb
imul
sti
iret
out
cs
icebp
in
js
addr16
sahf
sbb
xor
xor
call
cmc
cmp
shll
mull
nop
rcll
inc
push
fisubrs
adc
test
add
sub
lret
inc
daa
nop
std
out
lods
mov
or
push
mov
dec
ja
xlat
or
jo
lods
adc
add
imul
popa
xchg
cmp
rcll
cs
jbe
push
loope
and
mov
insl
sbb
in
in
push
inc
loope
dec
mov
inc
pop
push
notb
and
adc
jbe
pop
and
mov
dec
mov
mov
inc
xchg
jecxz
xchg
inc
dec
mov
jmp
lds
popf
repz
gs
addr16
outsl
sti
gs
add
dec
jecxz
mov
aad
call
fs
mov
loop
sbb
int
pop
repnz
pop
in
cld
pop
dec
iret
cmp
inc
int
int3
sbb
ljmp
adc
movsb
lds
inc
mov
rol
mov
cltd
repnz
enter
inc
xchg
add
mov
add
test
pop
int3
repz
aam
lock
push
popf
and
add
or
sub
leave
in
sti
add
push
xlat
js
jl
test
mov
in
ds
cmp
mov
mov
mov
aad
bound
fildl
ret
ficomps
push
adc
enter
clc
adc
hlt
arpl
dec
icebp
sub
push
popf
jge
int
mov
outsl
ret
jns
sub
popa
xchg
js
adc
inc
dec
lret
jo
pushf
dec
bound
or
movsl
mov
loopne
sub
loopne
call
xlat
ficoms
out
sub
adc
shll
repnz
fsubrs
ret
adcb
mov
cmp
dec
mov
inc
sbb
cs
mov
jle
out
jae
int3
pop
push
add
push
seta
sbb
rcrb
test
out
imul
dec
shl
flds
pop
aaa
mov
test
mov
jno
sbb
je
cwtl
test
pop
push
dec
int3
push
push
mov
nop
jnp
mov
jl
push
pusha
sub
pop
add
movsb
mov
add
rcll
loope
jl
cmp
sbb
push
xchg
loop
push
xor
ljmp
enter
daa
inc
loope
inc
mov
pop
inc
mov
sub
mov
adc
scas
pop
out
sub
inc
sub
in
mov
jns
add
out
sarb
out
lcall
in
dec
adc
jo
mov
xor
or
dec
pop
stos
sbbb
out
lods
push
out
mov
sub
inc
int3
sbb
lahf
push
inc
pop
sub
ljmp
mov
cmp
pop
stos
test
jno
stos
into
pop
gs
pop
mov
jns
fisttps
addl
loope
shll
in
push
push
jne
mov
sbb
loopne
faddp
and
push
jge
pop
insb
or
mov
and
in
inc
pop
push
scas
pop
pusha
std
dec
aaa
scas
push
shrb
in
pop
pop
leave
int
aam
jbe
inc
mov
dec
mov
mov
in
js
add
clc
add
mov
out
adc
jge
sub
inc
mov
pushf
fsubs
shlb
cwtl
pop
push
and
lods
sbb
gs
imul
iret
imul
sbb
add
mov
and
xor
pop
and
and
xor
cmc
add
je
adc
jbe
adc
lods
in
sub
dec
and
lret
insb
or
xchg
ret
fsubrs
mov
inc
test
sub
and
arpl
outsl
mov
outsl
xorb
lods
arpl
jns
cs
movsb
xor
sub
icebp
adc
aas
lea
icebp
pop
fnstenv
xchg
das
jmp
test
jnp
mov
fstl
int
push
jne
sbb
loop
inc
add
add
sti
fistpl
call
daa
mov
lock
cmp
dec
pop
inc
gs
clc
and
xor
cmovae
int
mov
lock
xor
push
sbb
and
cmpsb
push
ja
iret
xchg
pop
repnz
mov
je
pop
loope
or
mov
mov
cmp
xchg
inc
xor
outsb
fdivrs
sbb
xor
sbb
push
test
fsubl
mov
inc
enter
mov
jmp
jo
pop
mov
mov
add
push
mov
inc
push
sbb
lcall
mov
jge
xor
rorb
jmp
mov
push
mov
adc
sbb
push
jns
cltd
sub
out
daa
fidivrl
mov
push
dec
xor
inc
push
icebp
rol
jl
mov
fimuls
icebp
xor
xor
lcall
mov
xor
cmp
fldenv
adc
fsubrs
sub
das
or
push
loop
jnp
xchg
lds
xor
lcall
bound
xchg
fs
or
mov
push
xor
daa
or
add
push
jl
pushf
xchg
sbb
clc
and
shrb
and
inc
xchg
bound
int3
leave
lods
add
lods
or
pusha
mov
jb
pop
inc
fiaddl
add
subl
ret
mov
sbb
push
aam
aam
push
sub
push
imul
sbb
push
repz
jae
imul
cmp
bound
icebp
or
jnp
lea
mov
stc
mov
xor
cmpsl
dec
mov
sub
mov
jnp
or
xchg
js
loop
lea
jne
outsl
popa
sub
loopne
imul
lods
fcomps
aam
incb
pop
pop
int
jmp
gs
iret
andb
test
movsl
inc
xor
or
gs
cmp
xor
and
aaa
cmpsl
xchg
aam
pop
push
mov
aas
mov
mov
dec
fsubp
push
push
mov
lea
rorb
sbb
cmp
add
mov
and
mov
inc
pop
push
xchg
xchg
cmp
xchg
add
cltd
movsl
int
inc
add
dec
leave
pop
insb
dec
sub
lret
mov
test
fsubrs
loope
add
mov
push
add
and
sub
mov
sub
mov
push
or
into
pop
adc
jnp
notb
test
sbb
mov
cmp
fisttps
cmp
xor
bound
fs
cmp
push
dec
adc
xlat
test
div
xchg
mov
mov
sub
pop
stos
cld
mov
scas
out
jns
mov
xchg
dec
rcrb
jo
push
test
je
and
inc
stos
add
inc
pop
pop
push
lahf
cmpsl
xchg
jno
and
stos
mov
add
and
pop
daa
push
into
xor
sbb
mov
wrmsr
fidivl
cmp
pop
or
adc
add
pop
pop
outsl
cmp
imul
sbb
ja
push
data16
in
sbb
hlt
jp
ficomps
loope
data16
outsb
nop
xchg
jge
inc
xor
adc
nop
imul
pop
jno
fimuls
xor
movsl
fnstcw
mov
inc
sbb
das
in
ljmp
movsl
repz
jae
lret
sbb
inc
xchg
fcom
mov
adc
outsl
rcrb
dec
mov
mov
rclb
pop
es
cmpsb
jmp
int
jl
movsl
pop
ficomps
cmp
lods
add
xor
data16
xor
mov
xchg
lods
imul
xchg
test
xor
ret
xchg
dec
hlt
jmp
test
pop
fnstcw
lret
bound
int3
push
sbb
enter
clc
jnp
sbb
or
negb
adc
out
cld
xchg
mov
pop
sti
xlat
add
nop
sub
enter
out
pop
arpl
ljmp
ds
dec
xchg
jb
mov
cmp
test
stos
mov
imul
lret
hlt
hlt
mul
into
into
js
fwait
in
das
icebp
jne
push
les
incb
xchg
shll
in
push
lahf
mov
fiaddl
sbb
and
and
lret
jmp
jae
cltd
cmp
mov
sub
dec
mov
jo
out
adc
dec
dec
mov
mov
pop
test
in
mov
xchg
push
les
mov
fists
mov
add
js
movsl
lret
mov
orl
inc
xor
xchg
sub
hlt
bound
dec
inc
out
loop
in
popa
in
mov
xchg
in
adc
xchg
roll
pushw
insb
inc
loopne
dec
lds
push
push
out
les
mov
stos
jnp
xchg
mov
adcb
iret
sbb
push
jns
mov
mov
stc
mov
das
aas
mov
sbb
push
mov
in
jle
sahf
incl
sbb
dec
scas
sub
in
push
inc
mov
notb
sbbl
xor
xchg
inc
xchg
add
nop
add
shll
pop
xor
pop
dec
lret
test
mov
das
arpl
pop
icebp
xor
adc
mov
jnp
mov
dec
xor
iret
mov
decb
xchg
xor
int3
out
leave
int
sub
push
and
jnp
jmp
jno
mov
sbb
mov
shlb
fs
loopne
push
sarl
pushf
hlt
jne
sub
xor
and
push
mov
les
mov
jbe
fs
mov
das
in
inc
cs
add
pop
dec
dec
push
sub
hlt
sub
push
sbb
mov
jp
sbb
adc
sbb
xor
cwtl
into
mov
mov
aad
pop
out
or
out
cmp
shrl
mov
mulb
ds
inc
or
xchg
pop
push
pop
outsb
popf
jmp
push
mov
fxch
stc
aaa
mov
andb
movl
dec
data16
pop
bound
push
or
cmpsl
pop
scas
incb
ret
inc
inc
rcl
and
lret
jecxz
xor
jp
xchg
xchg
pop
adc
xchg
jb
imull
mov
out
in
andl
and
jecxz
inc
dec
jl
iret
push
cmp
push
xor
enter
dec
sbb
mov
mov
cmp
aaa
arpl
mov
scas
xchg
adc
sub
or
xchg
sti
cld
mov
ficoms
cmp
jne
rcrl
subb
adc
cmp
test
ret
xchg
mov
inc
add
aam
ljmp
loope
inc
xor
insl
nop
xchg
dec
xchg
adc
neg
test
repnz
mov
loop
test
sbb
or
or
out
xchg
cmp
add
icebp
mov
jae
xchg
in
xor
fwait
cmp
decl
inc
jnp
mov
or
jecxz
aad
and
xchg
inc
inc
or
popf
add
mov
xor
fs
inc
fldl
into
ljmp
in
sbb
sbb
xor
stos
in
dec
jo
add
jno
loop
movsb
test
or
pop
or
hlt
xlat
pop
cmp
mov
mov
sti
movsl
ret
sbb
xchg
xchg
mov
push
push
dec
in
lret
cmpsb
mov
sub
mov
push
adc
jge
jnp
pusha
in
cmp
add
mov
xor
pop
mov
mov
movsl
les
out
lods
stc
fadds
xchg
jmp
or
in
and
sub
push
cmc
jno
pop
jmp
enter
xchg
scas
in
adc
add
aam
bsf
dec
repz
xlat
cmpsb
xlat
push
inc
cwtl
sub
cmpsb
enter
or
rorl
sbb
loop
jae
cmp
mov
in
ss
sub
aaa
aaa
adc
xchg
pushf
jae
ja
mov
fimuls
inc
sbbl
xorb
mov
cmc
cmpsb
push
stos
into
lock
popf
pop
stc
mov
test
or
xchg
lds
adc
sbbb
push
fldl
fcmovnbe
int
xchg
aaa
ret
pop
ret
inc
ret
add
adc
adc
dec
je
ljmp
jle
leave
mov
movsl
rcrl
pop
push
pop
mov
ret
sub
loope
mov
fisubl
ljmp
movsb
jecxz
sbb
scas
pop
mov
ret
fdivl
frstor
pop
and
push
lds
add
cmpb
inc
cltd
pop
sbb
jae
or
cld
mov
dec
cmp
sub
adc
out
adc
mov
sub
sbb
or
pop
mov
sti
jbe
stos
lahf
mov
cmp
pop
fsub
dec
xchg
push
scas
and
jae
arpl
lock
das
xchg
mov
xor
mov
ljmp
pop
nop
imul
xchg
and
sbb
clc
jl
stos
mov
loopne
push
repz
and
jae
sub
sub
push
xor
or
add
rol
cs
push
push
xor
fsubrl
cmp
aad
push
push
xor
aad
dec
xlat
test
mov
fisttps
scas
hlt
xor
adc
pop
dec
cwtl
and
mov
pop
rorb
add
dec
and
mov
add
add
popf
mov
dec
push
loope
mov
lahf
dec
lea
inc
out
dec
sbb
xchg
roll
mov
into
mov
jbe
stc
sarb
nop
cmp
mov
std
call
mov
stc
repz
hlt
sub
mov
mov
dec
inc
fsubrl
xor
mov
jl
insl
loope
lea
adc
out
movsl
in
and
fs
dec
std
jbe
add
in
pop
mov
xor
sub
push
adc
xchg
pushf
and
arpl
bound
inc
stos
bound
rcll
jbe
xchg
xchg
fists
lea
jne
test
stc
cmp
hlt
inc
push
scas
insl
sti
jne
dec
lods
adc
push
sbb
cmp
cli
call
lods
jecxz
inc
mov
repz
rcr
add
loopne
jl
xlat
aam
sub
into
dec
mov
cmp
xor
xchg
and
add
xchg
das
stos
into
pop
mov
or
fadds
lcall
inc
adc
inc
mov
sub
jno
inc
inc
xor
imul
daa
notb
das
test
or
and
mov
or
mov
xchg
leave
lods
cmp
pop
pop
jle
movsl
shl
or
mov
jp
test
in
jg
push
push
leave
push
jne
push
lret
popf
cmpsl
pop
mov
hlt
mov
loopw
mov
xor
cmp
jae
lret
sbb
dec
inc
pop
push
cs
push
xchg
mov
out
add
in
and
shlb
test
mov
lcall
movsb
sbb
add
pop
jge
sbb
sbbb
or
inc
mov
mov
je
mov
mov
mov
sbb
movsl
test
mov
ret
gs
aam
imul
fsubr
lods
jle
shlb
or
add
and
add
popf
inc
jmp
mov
das
xchg
lea
fsts
push
pushf
xor
movsl
cmp
push
add
outsb
test
orb
cld
mov
clc
mov
fcmovnu
dec
fldl
push
add
adc
or
loope
ds
je
mov
fwait
ucomiss
dec
sbb
std
pop
shll
aaa
jne
jo
out
jbe
jge
lret
mov
or
or
or
lock
mov
faddp
mov
xor
and
jmp
push
mov
jbe
xchg
lahf
bound
xor
enter
gs
pop
insb
push
mov
or
mov
test
ljmp
adcl
sub
sub
mov
insb
and
mov
out
mov
sbb
loop
addl
daa
fcomps
mov
mov
push
pushf
inc
jne
or
daa
adc
sub
je
mov
adc
or
adc
aas
cmp
jns
jbe
shlb
icebp
or
in
mov
shlb
sub
rclb
das
dec
mov
clc
push
outsb
fs
xchg
aas
add
imul
xor
mov
ja
add
scas
mov
add
jle
push
loopne
mov
jnp
and
push
leave
dec
cmp
pushf
push
aad
dec
stc
leave
xor
sbb
mov
xchg
aas
xchg
inc
inc
inc
insb
jae
test
pop
dec
xor
test
pop
cmpsb
test
int3
andl
inc
mov
sbb
cmp
cmp
leave
sbb
sti
mov
mov
iret
adc
pop
inc
pop
push
dec
pop
inc
sub
jge
nop
icebp
shlb
ret
mov
pop
mov
xchg
fcmovne
xchg
nop
icebp
fildll
or
push
in
push
jnp
addr16
add
pop
xchg
dec
xor
xchg
test
mov
adc
add
add
es
mov
jbe
inc
xchg
adc
shll
mov
rcrb
std
inc
mov
sub
insl
push
sti
add
cmp
movsb
fstpl
xchg
jb
cmc
jp
enter
repz
adc
inc
pushf
xchg
mov
aaa
xchg
jno
mov
jae
push
int
aaa
xor
mov
js
jl
push
mov
push
and
xor
sti
cwtl
in
adc
pop
mov
rorb
xor
ljmp
sub
cmp
xchg
mov
popa
cltd
push
mov
sub
repnz
out
test
xchg
gs
ret
aad
loope
jae
mov
mov
sub
ror
out
add
repnz
loope
jns
push
ds
fidivrs
insb
add
test
and
std
pavgb
mov
dec
enter
inc
pop
test
sbb
jl
rcrb
mov
mov
int
pop
jg
rcrl
mov
push
test
rol
pop
sub
test
dec
xor
jbe
pushf
rolb
cmpsl
cltd
dec
mov
dec
out
hlt
sbb
aam
cltd
les
gs
imul
xchg
aaa
sbb
cmpsb
push
jae
or
ds
in
push
push
mov
add
sahf
push
lret
jp
pop
xchg
lock
xchg
adc
xchg
or
lods
jmp
pop
cmp
mov
mov
and
out
mov
or
and
or
jge
jb
cli
add
cmp
pop
fstl
test
out
xchg
call
outsb
lcall
pop
jecxz
sub
xchg
cmp
cmp
sbb
add
dec
test
in
lret
icebp
cmp
and
pop
mov
push
pop
add
mov
out
out
loopne
scas
fsubrp
loope
cld
inc
xor
lret
and
push
subb
in
mov
adc
aad
or
lods
sar
adc
negb
dec
lods
lahf
pushf
movsb
and
idivb
imul
or
in
pop
in
jge
pushf
adc
pusha
imul
jge
push
cmp
xor
xchg
out
repnz
mov
loop
jne
imul
in
mov
pop
xor
lahf
jecxz
jns
orb
pop
and
sbb
aas
ret
jbe
xor
into
adc
imul
sub
push
test
cmp
shlb
or
loopne
popf
adc
push
sbb
pop
mov
dec
xchg
hlt
clc
push
cs
lds
cmp
out
andl
cmp
mov
sub
nop
int3
jmp
sti
dec
sbb
mov
mov
pop
mov
lret
mov
xor
add
mov
xor
pop
sub
mov
push
into
dec
mov
jbe
inc
ss
or
call
aaa
jb
and
pop
scas
push
orb
xor
test
pop
push
inc
ja
stos
jbe
mov
inc
xchg
sbb
sahf
leave
mov
pop
cmpsl
outsb
pop
icebp
inc
je
dec
insb
mul
mov
pushf
sbb
jmp
and
push
xchg
insb
fildll
sbb
dec
sbb
inc
and
stos
jl
scas
ljmp
or
xorl
nop
ljmpw
je
shr
into
cmpsl
sbb
fdivrl
shrl
ret
jns
pushf
xor
in
and
dec
mov
sbb
mov
in
sar
sbb
jns
shll
cmp
rcrb
xchg
mov
ret
lahf
xor
fsubrs
nop
jb
adc
lds
or
addl
cmp
cmp
loope
pop
push
f2xm1
mov
cltd
add
in
scas
pop
movsb
xor
jl
mov
add
movsb
addl
imul
mov
cmp
addb
and
add
inc
add
nop
push
xchg
jae
jno
pop
pusha
mov
aas
pop
les
hlt
add
inc
nop
cmp
mov
adc
and
movsl
test
xchg
nop
out
fs
je
or
aaa
ret
stc
xchg
das
das
movsb
jge
mov
xchg
rclb
daa
testb
mov
scas
sbb
sbbl
and
lock
dec
push
mov
xchg
aad
add
movsb
push
ret
cmpsl
add
fcompl
add
push
fs
jns
cmp
xchg
lret
outsb
xchg
das
rcl
mov
mov
pop
push
js
movsl
xor
sub
xorb
sub
or
std
xor
adcb
xchg
rcrl
xchg
dec
arpl
inc
cmp
adc
sub
test
cmp
lock
shlb
cmpsl
mov
ljmp
mov
inc
jno
dec
mov
xchg
andl
sub
pop
add
push
adc
test
loope
cmp
inc
and
sbb
out
mov
and
dec
dec
pushf
jo
mulb
jecxz
add
fistpll
mov
xchg
sbb
loopne
jl
cmp
sarb
jno
sti
jmp
ljmp
shlb
sub
or
les
xchg
movzbl
jae
push
cmp
icebp
cmp
arpl
aad
repnz
scas
inc
sahf
inc
fbstp
cmp
jle
pop
fs
cmp
cmp
xor
add
mov
arpl
jecxz
and
inc
mov
xor
sub
push
push
ret
shr
insl
or
jmp
stos
mov
call
popf
xor
mov
pusha
mov
dec
jnp
scas
fnstsw
sahf
jmp
mov
cltd
push
ret
orb
xchg
leave
int
push
mov
sbb
jnp
pop
test
imul
scas
lock
fisttps
mov
and
push
jnp
into
xchg
ja
mov
fimuls
mov
sbb
fsubp
push
daa
aaa
jbe
into
inc
test
ficoml
out
aad
inc
jne
mov
pop
fistps
mov
push
inc
imul
mov
pop
ds
lock
popf
pop
les
xor
maskmovq
lret
jl
and
add
aas
dec
or
inc
xchg
aaa
or
js
cmp
push
rcrb
and
out
gs
cwtl
xor
fldt
mov
sbb
lret
mov
pop
adc
dec
mov
pop
add
dec
pop
inc
outsb
pop
mov
xchg
cs
mov
pop
ss
inc
mov
negl
ret
jmp
and
xchg
or
add
mov
dec
add
lahf
and
notb
stc
out
pop
stos
pop
push
pop
mov
test
sub
in
lret
mov
les
lods
aam
jne
sbb
mov
jl
jecxz
pop
adc
sbb
mov
add
xor
daa
fisubl
jno
mov
fwait
sarl
movsl
out
pop
sahf
adc
clc
lea
sub
mov
imul
mov
faddl
das
mov
ljmp
dec
xorl
jge
adc
insl
inc
in
dec
mov
add
adc
cmp
mov
lcall
jmp
xor
sbb
push
imul
int3
sbb
arpl
fsubs
pop
and
pop
sahf
inc
mov
mov
movsl
lahf
lea
mov
jo
in
je
inc
out
mov
jg
mov
pop
incb
nop
pop
fs
dec
jmp
inc
add
std
in
sarb
jnp
sub
push
lods
mov
and
aad
xchg
mov
push
dec
inc
fldz
flds
sbb
sbb
aam
jbe
pop
inc
out
push
pusha
push
mov
stos
mov
sahf
mov
sbb
xor
sbb
aam
pop
inc
xchg
es
cmp
repz
loopne
dec
popf
mov
xchg
sub
xlat
fwait
rcll
mov
push
out
loopne
sbbb
call
test
jbe
leave
dec
mov
lock
outsl
aad
dec
xor
int
jle
or
test
das
cmp
pop
xor
cs
mov
xchg
pushf
sbb
call
add
andb
jns
pop
fistl
shrb
test
rol
mov
jnp
scas
std
xor
mov
cmpsl
mov
cld
lahf
js
cld
and
cwtl
call
fwait
and
in
enter
ljmp
popf
sub
lahf
enter
sub
cli
push
add
fisubrs
outsb
out
pop
repnz
cli
adc
repz
xchg
insl
rolb
cmp
dec
cld
cli
mov
mov
rolb
cmp
pusha
sarl
sbb
popa
lods
push
xchg
jmp
inc
iret
arpl
mov
add
shrb
mov
pushf
cmpsb
rcr
loopne
add
sub
mov
cmp
rcl
orb
in
repz
mov
mov
jg
in
dec
in
movsl
add
cs
pop
lock
lods
ror
loop
sbb
lret
aaa
fisubrl
call
outsb
rcl
aam
dec
push
pop
out
dec
aam
or
add
jno
jno
mov
adc
fistl
jg
push
dec
sbb
mov
jo
xchg
fldt
sbb
dec
pop
push
clc
or
or
sbb
in
ret
and
pop
and
out
outsl
dec
out
out
inc
mov
flds
movsb
testl
fs
ja
xor
cmp
lret
aam
aaa
into
subb
fistpl
rol
cmp
mov
or
add
mov
mov
aam
jge
ffree
mov
dec
pusha
jns
push
movsb
pop
push
outsb
and
pop
ds
xor
mov
mov
pop
ja
out
mov
pop
cmp
jp
or
sub
xchg
filds
mov
outsb
sarb
xlat
pop
mov
daa
mov
mov
ret
jbe
jge
or
cltd
inc
jmp
arpl
stos
inc
jmp
lea
push
xchg
popa
push
std
mov
lahf
mov
out
mov
push
rcrl
push
lds
xor
dec
repnz
mov
pslld
test
mov
stos
movsl
ljmp
add
sub
and
cld
mov
and
inc
iret
mul
mov
mov
sub
mov
cli
stos
mov
push
dec
push
mov
out
sbb
dec
and
fistl
mov
jmp
repnz
iret
adc
add
add
sbb
pusha
mov
rcrb
jae
pushf
loop
xchg
les
mov
add
iret
mov
mov
push
push
loop
in
xchg
daa
xor
iret
loop
jmp
jg
dec
nop
adc
add
xchg
xor
int
aaa
pop
out
lods
test
lahf
shrl
xchg
cmp
mov
out
decl
cmc
push
out
or
dec
or
lds
adc
jle
mov
mov
sbb
shrb
jmp
xchg
add
inc
fldcw
xorl
and
xchg
push
xchg
in
fwait
popl
mov
data16
loope
in
int3
sub
ja
xchg
ja
sbb
and
mov
and
sti
cmp
sub
jmp
and
cmpl
jae
loopne
xchg
jmp
in
cmpsb
pop
lock
and
scas
pop
mov
cmpsb
xlat
xchg
aas
mov
fwait
add
ret
mov
cld
jge
loop
adc
fmuls
pcmpgtb
inc
test
sbb
xor
xchg
jl
sub
sarl
add
test
js
mov
outsl
aas
shll
inc
dec
jp
pop
add
out
pop
enter
addr16
cli
fidivl
movsb
jp
jb
in
stos
js
jl
push
and
dec
mov
fs
shll
in
dec
arpl
shrl
add
cmp
adcb
es
push
je
lds
jns
subb
outsb
xor
in
adc
add
leave
mov
jle
xor
popf
inc
out
int3
jns
mov
leave
push
iret
mov
push
popf
int
inc
stc
mov
jg
mov
jmp
pop
addr16
sbb
repz
adcl
pop
iret
xor
ljmp
mov
push
out
cld
sub
insl
in
lcall
outsb
incb
shll
rcll
xchg
daa
sbb
ljmp
mov
int3
mov
inc
rclb
mov
aad
fbld
sub
pusha
mov
add
fstpl
rcll
fnstcw
les
xchg
mov
mov
sub
lds
add
and
aad
ret
cltd
ljmp
loop
pushf
arpl
cmp
insb
cmp
mov
pop
repnz
push
das
outsb
test
mov
add
push
mov
scas
mov
mov
adc
bound
and
push
pop
inc
or
shll
sub
popa
pop
cmp
out
scas
and
inc
in
adc
push
call
jecxz
mov
orb
dec
in
adc
lret
mov
shr
inc
xchg
ljmp
cmp
fwait
push
mov
sbb
sub
xchg
scas
ljmp
inc
sbb
test
jnp
pop
mov
cmp
outsb
add
jno
adc
sub
jecxz
sbb
jo
dec
sub
pushf
stos
mov
test
mov
loop
xchg
frstor
out
rclb
aas
lcall
aaa
lods
popf
orl
out
cltd
fisttps
cmp
out
jb
mov
fsubrs
fldcw
sub
push
je
push
mov
push
mov
lea
mov
bound
cmp
push
push
scas
or
repz
insb
pop
mov
out
push
imul
nop
push
int3
inc
cmpsb
lret
jmp
xlat
add
or
fsub
scas
cmpb
cwtl
inc
bound
aas
dec
adc
imul
jg
scas
and
jle
test
pop
insb
fwait
int
rorb
rol
inc
fstl
shl
sarl
sub
mov
mov
outsb
push
xor
cmp
mul
imul
or
and
iret
jmp
mov
pop
movsb
imul
aam
mov
pop
test
inc
xor
in
lods
movsb
lock
stos
cmp
mov
rcrl
ret
push
jmp
outsb
and
popf
iret
nop
in
outsl
add
mov
push
mov
and
neg
push
out
pop
push
clc
fistpll
fadds
jmp
das
xchg
fbstp
in
sarb
hlt
mov
mov
push
xor
imul
rclb
xchg
mov
in
bound
jbe
cs
mov
das
pop
mov
pop
sbb
movsb
mov
movsl
sti
mov
dec
and
mov
test
sub
mov
jae
or
out
pushf
in
mov
pop
cmp
ficoms
dec
sbb
rclb
outsl
fs
jb
addr16
repz
pop
pop
js
cmp
push
stos
daa
xor
cmp
and
test
and
cmpsb
aaa
ret
xlat
sub
pop
lods
pop
dec
cmp
fbld
test
andb
add
rolb
push
inc
aaa
fcompl
push
inc
push
imul
push
call
pop
jns
xor
loopne
mov
push
ror
icebp
mov
push
popa
enter
or
and
xor
inc
dec
push
and
and
sub
sar
ret
sub
cld
jp
in
jmp
hlt
ss
arpl
push
xchg
testl
sub
pushfw
test
jecxz
adc
stos
std
jmp
insb
stos
and
jo
sbb
cmp
scas
rcrl
and
xchg
int3
fldpi
inc
test
adc
jne
inc
hlt
scas
orl
pop
icebp
clc
push
enter
js
outsl
push
bound
ja
cmp
mov
push
sub
cltd
push
mov
icebp
test
subb
inc
jno
lods
jg
lahf
push
fs
mov
dec
xorb
pop
or
adc
rorb
lock
xor
in
imul
lcall
xchg
inc
loop
cltd
out
ss
popf
sub
scas
mov
popf
sbb
pop
insb
in
in
push
mov
scas
bound
push
scas
jnp
pop
lcall
int3
and
jb
into
das
clc
clc
insb
dec
mov
in
sub
pop
stc
inc
xor
add
out
ds
in
out
add
pop
neg
xlat
sbb
inc
fidivrl
jle
imul
pusha
fsubs
jge
pop
jp
out
mov
aad
js
call
leave
cmp
sbb
in
add
jns
mov
cmp
das
lret
addl
mov
push
inc
lock
popa
jnp
pop
xor
xchg
mov
cld
aaa
dec
push
and
xchg
mov
notb
scas
fisttps
rorl
mov
es
std
bound
sub
push
mov
std
push
xlat
push
inc
mov
mov
mov
xchg
mov
xorb
loope
lods
cmp
in
int3
fwait
pusha
std
addr16
xlat
xor
das
out
dec
int
cmp
lock
push
xchg
call
adc
mov
cmc
mov
repz
or
hlt
add
xchg
jecxz
or
mov
inc
xor
push
js
aas
dec
not
frstpm(287
stos
jne
mov
loop
push
mov
sbb
mov
or
bound
and
cmp
shr
cmpsb
movsl
sbbb
adc
out
cmp
test
mov
lds
add
sub
repnz
jp
fildll
mov
jge
or
and
or
cmc
mov
out
push
cmpsl
jmp
push
je
or
fdivrs
mov
sub
inc
dec
jae
mov
mov
mov
mov
icebp
inc
xor
imul
jne
scas
push
pop
and
dec
sub
jp
pop
cmp
pop
fsubrs
imul
mov
inc
jae
and
cmpsb
mov
mov
icebp
repz
es
adc
pop
sahf
mov
in
add
dec
adc
jmpw
outsb
jl
push
fidivl
fisubrl
add
int
jmp
and
or
xchg
cltd
ret
ficoms
inc
cmp
movsl
and
sbb
sub
data16
stos
rcll
ret
ret
push
push
sahf
cmp
js
pop
pop
jbe
lret
pop
mov
xchg
popf
out
ret
pop
sbb
out
outsl
xchg
mov
scas
fsincos
sub
ds
mov
inc
rcrb
ret
xchg
sub
cmp
mov
push
jg
insb
icebp
js
sbb
add
aam
test
or
mov
iret
jns
ljmp
fmulp
cmpl
inc
stos
popf
fs
inc
frndint
jno
xchg
mov
jbe
pop
in
xor
cltd
cmp
mov
pop
mov
jp
and
bound
ss
xchg
rcrl
test
add
filds
in
cwtl
popa
pop
shlb
xor
cmp
dec
mov
push
fadd
scas
jmp
pop
adc
sbb
popf
scas
cmp
in
pop
pop
cmpsb
emms
ret
mov
xchg
mov
adc
jae
loope
cmp
mov
or
add
shrl
add
jp
out
out
aaa
or
pop
push
cld
mov
mov
adc
mov
pop
aam
sbb
sbb
js
jb
sbb
dec
xchg
scas
xor
or
test
or
addr16
je
mov
or
lock
inc
jmp
notb
mov
xchg
pop
cmp
dec
push
insl
pusha
xchg
push
arpl
bound
xchg
loop
inc
in
out
and
mov
cmp
imul
insl
shlb
cwtl
je
lcall
jns
adc
pop
fwait
push
addr16
pop
and
lds
push
mov
adc
dec
jo
xor
cld
jnp
jl
ja
xlat
xor
sub
shl
pop
dec
mov
cmpsl
jno
mov
pop
cli
mov
sbb
jbe
outsb
or
push
nop
sub
fdivrl
ret
addr16
fdivr
rorb
cs
cli
pop
mov
or
xor
and
push
vandnps
push
fiaddl
sbb
inc
pop
stos
inc
ret
movsb
push
out
iret
pop
mov
push
xor
in
dec
inc
sti
mov
and
push
mov
es
mov
jbe
cwtl
lret
lcall
daa
orb
fmuls
jnp
lock
mov
aaa
push
lahf
orb
and
test
rorb
xchg
jno
into
into
adc
xlat
mov
outsl
or
aad
pop
xchg
test
in
out
orb
andb
das
loopne
mov
xor
cmp
int
pop
mov
jle
arpl
or
orl
mov
insl
ficompl
add
xchg
jmp
ja
aad
dec
lret
push
dec
xor
lods
jmp
cmp
push
inc
cmp
lcall
mov
loope
scas
lea
or
movsb
rorl
ja
xlat
and
sbb
pop
dec
jge
dec
jmp
jnp
iret
sbb
sbb
xor
jbe
pushf
adc
ret
cmp
xor
outsb
add
mov
lahf
out
es
cmpsl
int3
test
aaa
dec
subb
mov
hlt
add
mov
inc
jno
lods
cmp
push
fcoml
ror
test
popl
push
jnp
aam
pop
or
and
scas
and
or
into
sub
push
andb
movsl
gs
pop
dec
imul
adc
push
aas
leave
xchg
aaa
pop
insb
add
int3
rcll
and
pop
xchg
sahf
dec
jo
cmp
call
mov
outsb
fcompl
ficomps
pusha
cmc
xchg
in
fistps
or
lock
add
xor
xchg
pop
in
bound
lahf
sub
add
jnp
add
mov
jns
sub
sahf
mov
inc
and
loopne
repnz
xor
ret
stos
push
fldcw
scas
xchg
mov
sbb
or
or
in
mov
pop
push
nop
mov
push
fs
add
pop
lods
xchg
pop
add
pushf
mov
mov
mov
ss
sub
je
cs
pop
in
pop
imul
outsl
daa
in
mov
mov
inc
dec
clc
icebp
divl
xchg
sbb
mov
jp
mov
testl
push
push
out
pop
out
push
mov
xchg
test
xchg
leave
fmuls
js
leave
cmpsl
cmp
dec
call
sti
cmp
adc
mov
enter
movsb
in
xor
ds
inc
xchg
xor
pop
bound
dec
cmpsl
push
or
mov
pushf
stc
xchg
out
loope
mov
pop
xor
xor
cmp
rclb
lcall
push
imul
lret
cld
test
inc
xlat
xchg
stc
push
jno
cmpsb
jle
cwtl
pop
sbb
ret
jl
mov
fnstcw
cmp
cwtl
outsb
or
sub
stos
pop
aaa
rorb
jnp
je
out
ret
fistpll
inc
add
inc
daa
jno
or
cmpsb
and
cmc
adc
fwait
sbb
loope
or
mov
ja
es
scas
or
out
sbb
into
adc
add
cli
push
inc
xor
pop
pushf
push
pop
pop
into
imul
jb
adc
divb
jmp
mov
lea
ljmp
mov
pop
je
divl
push
fldt
cmp
xchg
sbb
cmp
pusha
loopne
or
xor
adc
cmp
shll
jp
pop
xor
inc
xchg
hlt
lods
pop
sub
jo
aaa
inc
mov
fisubrl
ljmp
adc
add
pop
mov
enter
mov
test
cwtl
inc
out
xchg
jmp
rorl
aas
mov
jbe
xchg
pop
sub
clc
in
or
mov
mov
ja
inc
cmpsb
js
mulb
add
mov
or
flds
mov
repnz
mov
lret
jo
mov
xor
or
and
push
xor
aad
iret
inc
es
outsl
hlt
insb
sbbl
xchg
pop
xlat
sahf
jmp
push
dec
sbb
inc
inc
mov
sbbl
stc
imulb
lock
mov
or
fwait
mov
daa
mov
mov
jne
es
mov
pop
xchg
lds
fisubrs
xor
mov
lret
in
cmpsb
scas
aad
ret
pop
test
cmpsl
adc
mov
shrb
sarl
jle
sub
sub
push
call
insb
mov
dec
jmp
sti
sub
and
dec
mull
pop
push
pop
mov
out
jle
sub
dec
sub
imul
pop
cwtl
icebp
dec
xor
je
in
adc
or
pushf
cmp
imull
adc
sub
int3
jecxz
xor
jecxz
icebp
cmp
sbb
pop
int
or
mov
cld
popa
pop
xchg
ljmpw
xchg
mov
sub
xor
xor
sub
loop
mov
imul
mov
jae
shlb
bound
mov
imul
adc
cli
sar
or
xchg
std
fdivs
aam
inc
test
out
mov
lret
and
dec
negb
mov
rclb
mov
stc
clc
lahf
lcall
push
pop
movsl
pop
adc
or
rorl
loopne
pop
xchg
xchg
cld
mov
inc
mov
dec
movsl
or
std
pushl
rcrl
inc
jne
xlat
pop
and
sub
or
cmp
and
mov
enter
stos
adc
add
sbb
aam
imul
mov
dec
mov
insl
rorl
mov
sahf
fbstp
or
dec
in
or
mov
sahf
adc
iret
inc
pop
pop
fisttpl
cmp
pop
ret
test
in
mov
dec
xlat
fmuls
mov
es
add
mov
les
push
es
outsb
sarb
fcoms
mov
xor
cmpsl
jnp
xor
out
mov
push
add
xor
or
aam
jnp
ret
sbb
out
mov
xchg
mov
stos
mov
mov
mov
dec
push
nop
xchg
daa
repz
flds
scas
xor
mov
xchg
jae
repz
mov
inc
lahf
lcall
xchg
out
dec
jge
jmp
mov
filds
xlat
inc
pop
iret
ja
fyl2x
out
dec
and
mov
xchg
fs
adc
jae
loopne
lock
pusha
int
je
shlb
add
inc
sub
pop
add
pop
gs
mov
insb
aas
mov
test
mov
loopne
bnd
or
xor
mov
jmp
dec
psubb
or
js
addb
or
stos
shlb
adc
inc
pop
inc
mov
into
jbe
mov
js
loopne
and
jne
xchg
or
shll
sub
push
jbe
arpl
repz
movsb
add
cmp
lcall
jne
mov
test
popa
loop
pop
or
outsb
cli
xchg
lea
cmc
outsb
sub
inc
cmp
rcrb
shl
add
jo
call
sbb
enter
sub
pop
and
pop
push
fistpll
int
in
adc
stc
in
push
xchg
imul
es
in
cmpsb
mov
jecxz
bnd
loope
dec
jns
in
push
cmp
inc
push
aaa
in
mov
ffreep
daa
sti
dec
jo
ljmp
stos
mov
les
push
daa
sbb
fxch
hlt
imul
inc
int3
and
sub
xchg
push
pop
inc
in
fldl
outsl
xor
push
subb
fs
or
lret
loop
sub
in
sub
mov
xchg
inc
fmul
and
push
cmpsl
aas
pushf
es
mov
sti
xor
mov
pop
aaa
fisttpl
subl
outsl
mov
fadds
aas
imul
fstpt
rol
xor
dec
jbe
mov
cltd
dec
jle
je
push
test
sbb
enter
shll
or
dec
xor
nop
push
inc
lcall
aaa
dec
add
loop
fdivrs
jns
inc
arpl
inc
ljmp
push
lret
mov
sbb
out
das
mov
sbb
in
sarb
out
cmc
in
rol
or
orb
ljmp
aam
or
lcall
icebp
scas
imul
xchg
call
push
mov
cs
push
fidivrl
xchg
dec
mov
or
sub
sub
lock
add
mov
cmp
xchg
inc
xchg
cwtl
jmp
mov
out
mov
pusha
push
add
mov
cmp
mov
inc
aaa
cmp
mov
sub
mov
ja
stc
mov
sbb
insl
adc
mov
mov
jo
or
into
dec
add
stos
jno
call
mov
cmp
adc
lock
pop
mov
push
push
filds
push
push
sti
add
and
pop
push
xor
jl
pusha
adc
scas
mov
mov
xchg
mov
pop
sub
add
pop
stos
sbb
pusha
sub
jno
lock
insb
insb
test
ffreep
inc
aad
push
mov
mov
or
ja
xchg
pop
jle
xor
xchg
inc
sbb
cmpsl
testb
fidivl
or
out
loopne
sbb
ja
jg
mov
adc
add
loope
les
lods
mov
sbb
sahf
shlb
fcoms
popa
mov
scas
into
xchg
out
mov
cs
dec
mov
out
mov
pop
or
bound
mov
movl
stc
cmp
mov
call
mov
shll
mov
cmp
dec
lret
jle
das
mov
mov
add
repnz
add
movsb
sub
stc
and
inc
loopne
pop
and
cmp
inc
subl
in
xor
sbb
sti
cmpsl
mov
jns
xchg
xchg
stos
sarb
fwait
pop
sbb
fbld
push
in
xor
inc
stos
sbb
sahf
sub
out
inc
js
addr16
jmp
test
fstpl
jg
mov
push
mov
lds
stos
in
push
ss
popf
ror
pop
cmc
ret
mov
leave
xor
pop
loop
insl
inc
jnp
adc
pop
cli
sub
xor
xchg
lahf
stos
ret
push
jae
fsubrp
aas
and
es
dec
dec
xchg
sbb
mov
leave
cmp
insl
xor
nop
jbe
dec
aas
int3
nop
imul
clc
lods
mov
je
jmp
movsl
cmp
rclb
into
jle
vhaddpd
out
inc
fisubrs
add
repz
cmpsl
xchg
sbb
loope
in
mov
loope
bound
in
mov
sub
inc
out
insb
ss
and
cmp
cmpsb
sbbl
jae
xchg
insl
inc
fisttps
mov
idivb
rorl
mov
subl
test
cs
fbld
push
popw
cmp
push
inc
aam
and
pushf
add
repz
dec
inc
jge
dec
mov
hlt
out
daa
sti
pop
aas
or
add
adc
ret
es
sbb
stos
push
das
inc
xchg
aad
or
adc
sub
movsl
push
mov
sub
in
push
mov
je
movsl
pminub
dec
fsubr
cmp
jg
jae
add
cld
js
movsb
rolb
mov
inc
jl
fcmove
movsl
xchg
or
cwtl
idiv
setle
es
and
push
rcrl
nop
cmp
push
mov
mov
add
mov
lcall
jns
jg
loopne
xchg
adc
push
and
js
test
or
pop
das
adc
sahf
mov
mov
stos
push
inc
mov
lock
gs
call
lock
cmp
jo
ss
pushf
xchg
xchg
aam
ss
das
add
cmp
cmp
sarl
lods
add
jnp
pop
jnp
dec
or
xchg
pop
fcomps
lods
loopne
jo
ss
jge
xchg
rorb
sub
lret
mov
xor
add
jmp
call
movups
aaa
lea
out
mov
test
mov
or
cltd
push
scas
data16
or
andb
mov
clc
push
mov
jp
xchg
xchg
xchg
cmp
sahf
add
cmp
dec
and
int3
sbb
sub
cmc
stc
adc
ljmp
mov
das
add
and
stos
or
test
ds
adc
jno
mov
mulb
mov
push
cld
inc
les
push
out
dec
push
imul
lock
pop
mov
ret
mov
jle
js
fldl
cmc
jp
lods
mov
push
xor
jg
pusha
movsl
cmpsb
fsubrl
mov
in
or
or
push
mov
and
in
orb
xchg
jmp
cmpsl
push
loop
sbb
movsb
xor
push
aad
fisttps
imul
loopne
ja
icebp
movsl
add
loop
add
sbb
mov
adc
or
ret
add
loopne
outsl
sub
add
aad
mov
je
mov
add
mov
notl
mov
addr16
repz
lods
mov
mov
loopne
adc
adc
movzwl
xor
mov
ds
std
andb
or
aam
addr16
sbb
insl
repnz
xor
sbb
dec
push
add
pop
cmp
inc
test
and
popa
xorb
inc
mov
mov
xor
xor
outsb
js
mov
nop
add
xchg
rcrl
scas
scas
iret
das
xchg
mov
scas
sbb
push
popf
and
mov
sbbl
mov
dec
ret
cmp
add
scas
jge
ret
dec
nop
je
pop
mov
ror
dec
and
imul
push
push
mov
nop
in
bound
repnz
lcall
pop
jg
xchg
add
inc
fistl
xchg
cli
lret
sarl
scas
adc
mov
mov
mov
mov
pop
cld
inc
shlb
push
andl
mov
leave
iret
cwtl
das
lods
xchg
jecxz
test
nop
sbb
xor
shrb
sbb
lods
mov
and
xor
jae
mov
inc
iret
xor
popa
jle
inc
pop
loopne
xor
ss
mov
repnz
lret
pusha
xlat
popf
ret
xchg
lds
shlb
pop
testb
push
mov
lret
mov
arpl
movsl
jg
stos
insb
sbb
sahf
dec
xchg
mov
push
sbb
cwtl
pop
cli
dec
and
pop
or
idiv
xchg
mul
les
mov
push
or
sbb
or
repnz
lea
std
clc
ljmp
insl
xor
rorb
nop
jo
jns
jl
inc
add
push
aad
adc
lea
jb
xor
jg
push
mov
cwtl
ds
pop
inc
push
jae
sbb
cmp
xor
lock
mov
xor
div
faddl
test
cs
sahf
and
push
ljmp
repnz
pop
into
and
pusha
dec
int
pop
rolb
cwtl
xor
fdiv
shl
clc
sub
sbb
ja
fwait
sub
shlb
testl
into
sub
sbb
jne
sub
adc
mov
rorl
xor
cmp
insb
enter
dec
cs
shll
add
sbb
mov
cmc
inc
cs
mov
cmpsb
icebp
cltd
cmpsb
rorl
xchg
in
mov
jne
xor
jle
add
adc
jne
movsb
pop
inc
push
hlt
inc
lcall
pop
dec
movsl
test
or
es
jns
mov
mov
mov
insb
fucom
sbb
xchg
pop
pop
test
in
mov
lretw
adc
in
fimull
lret
addr16
push
les
mov
push
xchg
and
daa
roll
fistpll
leave
repnz
mov
fucompp
movsl
int3
inc
or
popl
imul
inc
fimuls
shl
mov
lods
fiadds
xor
sbb
mov
or
xchg
sbb
pop
imul
xchg
hlt
arpl
sub
add
movsl
mov
jp
hlt
xor
or
and
dec
sbb
fdivrs
int3
lret
push
pop
push
xlat
popf
cs
mov
and
pushl
imul
iret
sbb
xchg
sbb
xor
cld
stc
fldt
sub
mov
mov
pop
sahf
push
add
add
mov
fistl
aaa
scas
mov
adc
dec
enter
or
subl
xchg
orb
gs
pop
int3
add
in
iret
and
jb
sub
ds
mov
in
adc
inc
ret
xchg
int3
loopne
loope
add
sbb
dec
adc
fwait
pop
jle
jmp
lea
or
sbb
add
sub
in
jle
sub
pusha
jb
inc
icebp
fcomps
insl
add
and
loopne
fisttps
lcall
lea
push
outsl
push
clc
jmp
cmpsb
add
negl
sub
cmp
inc
xor
pushf
mov
push
sbb
inc
stos
add
orb
fimull
dec
fcomip
imul
xor
test
inc
loope
dec
pop
add
sbb
into
add
ljmp
dec
mov
popf
xchg
sbb
bound
in
mov
stos
rcrb
roll
xor
adc
jecxz
push
shrb
push
into
lods
mov
cmp
dec
cmp
adc
xchg
push
cmp
popf
cmp
int
fnstcw
inc
mov
lock
or
mov
popa
std
pusha
xchg
cmp
push
sub
les
and
cld
inc
in
mov
pushf
pop
les
test
cmp
xlat
dec
loopne,pn
pop
jmp
sbb
dec
cmp
shl
mov
xchg
ret
fistps
stc
and
mov
test
bound
inc
and
jnp
daa
cmc
jae
scas
xor
pop
push
cwtl
neg
scas
jns
popa
cmc
or
jae
jns
loope
inc
cmp
xor
sbb
inc
js
je
int
xor
loope
and
sbb
pusha
inc
mov
scas
and
sub
mov
fisubrl
adc
inc
push
leave
test
movsb
scas
hlt
div
xor
ljmp
jmp
data16
je
sub
cs
xor
lds
stos
aas
test
or
call
mov
adc
xor
in
cmp
nop
jmp
and
sbb
sub
psubusw
sbb
cs
dec
mov
sahf
jns
mov
jp
push
enter
inc
jns
and
xchg
nop
fimuls
les
mov
xlat
cs
sbb
andl
sbb
push
testb
sbb
xchg
outsb
xor
ds
test
pop
inc
ja
jl
sub
xchg
push
mov
xor
or
jnp
xchg
out
les
js
aam
pop
pop
or
add
xor
mov
test
out
sub
bound
mov
or
mov
inc
jecxz
sbb
jb
jp
jg
sahf
fistps
ja
test
mov
lret
mov
in
sub
std
mov
push
mov
mov
addr16
das
lds
mov
dec
insb
cmp
lahf
jp
xor
mov
notl
mov
lcall
in
mov
addr16
xor
sub
xor
inc
lret
mov
ljmp
dec
js
pushl
mov
and
pop
push
mov
cmc
cmp
bound
cmp
adc
dec
cmp
mov
cs
dec
sbb
fnstcw
sub
jae
jne
pop
pop
cli
adc
popa
or
dec
repnz
pop
rcr
add
mov
push
in
cwtl
mov
or
in
cld
scas
push
fstl
lret
fwait
int3
inc
sub
mov
insl
push
jmp
mov
cli
in
das
and
dec
gs
dec
js
sbb
inc
pop
inc
lret
inc
mov
fldcw
out
ja
enter
into
or
das
cmp
jo
sbb
dec
std
repnz
push
jecxz
lds
scas
in
adc
pop
bound
movsl
bound
bound
mov
adc
addb
sahf
pop
outsl
les
or
adc
push
push
ja
adc
push
mov
jo
mov
daa
das
push
cmp
data16
test
inc
mov
jne
fcomp
in
sub
xchg
icebp
daa
cmp
loope
xchg
je
adc
add
sarb
push
loope
or
hlt
mov
mov
sahf
sti
push
push
jmp
xchg
xchg
and
mov
mov
xchg
mov
popa
jl
shll
mov
fs
int3
ja
cmc
cmp
mov
mov
mov
fs
mov
push
sub
repz
ljmp
packuswb
jmp
mov
xchg
pop
push
dec
lds
scas
jno
ret
jp
dec
scas
or
or
sahf
ds
mov
cmpsl
mov
aas
or
sub
decb
push
pop
cmp
or
push
test
dec
jg
test
dec
pop
out
jge
call
enter
aas
pop
in
jnp
add
mov
popf
arpl
lods
cmp
sub
pop
cmpsb
xchg
push
pop
in
pop
push
es
mov
push
mov
lahf
jg
cmpsl
adc
inc
lret
cwtl
sbbb
loopne
cmp
jb
ficoms
inc
ds
adc
fmull
mov
mov
push
lahf
or
xchg
stos
rcr
stos
loopne
dec
aas
sbb
pop
adc
lcall
xor
mov
loopne
leave
into
lret
testb
jg
inc
inc
sahf
rorl
add
push
inc
sub
mov
out
mov
add
rol
fstl
imul
hlt
hlt
lods
add
push
and
mov
mov
sub
cli
push
xchg
nop
jle
push
es
push
std
sub
mov
lods
sbb
add
int3
imul
sub
inc
in
pop
shll
dec
sar
loop
scas
repz
xor
rcll
imulb
sbb
pop
mov
xchg
outsl
cmc
rcrb
mov
out
and
std
xor
sub
divl
ret
frstor
xor
gs
mov
loope
pop
cmc
cmp
dec
jg
pop
pop
push
dec
insw
dec
mov
inc
jp
xchg
pop
mov
stc
lahf
jnp
mov
ret
insl
or
inc
sti
mov
or
pop
fmull
pushl
fcomps
jbe
jne
adc
std
mov
iret
cmpsl
sbbb
cmp
dec
ficompl
mov
loop
sbb
adc
pop
xor
stc
xchg
add
sar
mov
lock
fwait
call
fcmovnbe
jno
mov
enter
sbb
ret
cmpsl
jmp
ds
movsl
sbbb
daa
adc
dec
jne
cmp
out
test
pop
cli
mov
lods
dec
mov
test
cmc
je
pop
xor
mov
xor
push
lcall
insb
inc
mov
mov
sbb
sbb
mov
cld
fldenv
in
rolb
mov
clc
xor
mov
shrl
movsb
sub
mov
dec
sarl
mov
out
xchg
jp
add
pop
in
jae
jg
pop
nop
jmp
loop
pop
lahf
and
out
inc
cltd
fdivr
add
jl
clc
jbe
fwait
inc
add
icebp
xor
xchg
pusha
mov
std
imul
jbe
add
cmp
jg
mov
push
mov
je
lret
ljmp
mov
enter
or
sub
loopne
in
jmp
daa
enter
iret
jmp
mov
jmp
jmp
out
adc
sub
ficompl
push
ss
cmp
or
addr16
inc
pop
clc
outsb
cmp
jp
mov
mov
pop
sub
cwtl
stos
out
movsb
push
movzbl
mov
push
cmc
sub
into
inc
pop
outsb
and
adc
xchg
lahf
div
xor
mov
mov
aas
or
push
mov
mov
lea
fucomp
pusha
aad
fstps
pusha
bnd
jnp
and
cmpsb
mov
icebp
lock
jbe
add
stos
jo
arpl
jbe
ja
sub
cli
arpl
lcall
mov
jo
sub
pop
pop
jmp
clc
or
sbb
test
cmpsb
popf
bnd
inc
sbb
cmpsb
pop
repnz
and
push
push
loop
cs
addl
adc
enter
stos
cli
rcr
lods
shlb
test
pop
xlat
cmp
aam
sbb
xchg
jge
in
cld
bound
xchg
pusha
fstl
clc
nop
sub
and
call
mov
push
mov
scas
imul
sbb
mov
adc
sbb
mov
out
jle
sti
and
lret
and
xor
jno
stos
sbb
pop
mov
stc
pop
popf
mov
xor
fsubrl
out
pop
roll
sub
pop
stos
add
rclb
xchg
jne
sar
mov
jp
sbb
popf
sub
jns
addb
fdivl
out
push
cs
aad
dec
jp
shrb
mov
mov
or
mov
test
sub
jno
stc
xchg
hlt
lea
popa
pop
arpl
rclb
loop
insl
mov
fs
mov
loope
cmc
cmp
add
inc
push
filds
fldenv
ret
lea
imul
sbb
or
mov
ror
les
jg
adc
xor
fldenv
push
out
aam
test
cmp
xlat
xchg
fcompl
and
mov
fs
pop
fimull
xchg
pushf
cmp
dec
jg
cs
jl
arpl
test
cmc
xchg
cmc
add
xor
imul
dec
jg
mov
add
inc
jne
es
ret
les
mov
inc
arpl
sahf
adc
xor
jecxz
or
add
cmp
orl
jmp
fldl
setg
pop
stos
push
in
push
adc
push
adc
xbegin
mov
movsl
ldmxcsr
mov
mov
inc
or
sub
fidivrs
xor
sbb
xchg
decl
js
out
fimuls
test
lret
cmp
push
in
rcrb
pop
sti
push
cmpsl
pop
mov
test
adc
ret
ja
ss
nop
jne
imul
daa
leave
fstl
test
jno
mov
into
int3
jp
cmp
dec
pop
cmp
hlt
dec
cmp
jge
and
jle
dec
xchg
in
add
sub
loop
sbb
popa
push
lods
inc
cltd
mov
fs
jo
std
mov
fmull
push
iret
shr
add
das
mov
mov
add
push
shrl
lods
pop
dec
call
ljmp
inc
in
mov
cmp
or
mov
sbb
push
fcomip
dec
dec
shrl
add
sbbl
pushf
inc
les
js
sub
jge
or
inc
stos
insl
inc
adc
pop
pop
out
xor
push
aam
dec
cmpsl
jecxz
push
test
sub
mov
mov
repnz
mov
xor
loopne
mov
jo
push
jmp
pop
mov
lods
mov
bnd
movsl
mov
arpl
xchg
add
or
insb
adc
aaa
cs
xchg
rolb
add
cmp
movsb
sbb
add
jg
mov
arpl
sbb
stos
bound
popf
or
cmp
sbb
sub
stos
adc
sub
mov
call
arpl
ja
mov
jns
lock
add
js
xchg
scas
cld
pop
jno
xchg
comiss
mov
sarl
xchg
mov
jg
or
xor
pop
push
mov
in
xchg
loope
divl
xor
mov
dec
push
add
arpl
cltd
mov
sbb
push
jg
pop
fsubrl
and
jmp
scas
movq
int3
lds
push
scas
cltd
inc
sub
xor
and
pop
jle
push
mov
stc
out
dec
inc
sbb
int3
inc
mov
daa
xor
push
arpl
fs
ljmp
cmpl
add
sub
push
push
es
xchg
enter
mov
into
pop
out
lcall
jbe
aaa
pop
sub
popa
pushf
imul
xor
add
cltd
fisttpll
inc
xor
cmp
popa
fstpt
add
adc
xor
scas
mov
add
in
inc
mov
test
dec
sbb
insl
es
cli
data16
int3
rep
sbb
das
xchg
arpl
roll
sub
fists
in
std
dec
inc
ss
rorl
jns
push
lcall
sbb
mov
scas
mov
xchg
nop
cmpsb
stos
test
shrb
push
enter
lcall
lcall
pop
nop
mov
lret
xor
lahf
stc
lret
pop
jne
sarb
ror
inc
push
add
roll
dec
lods
repnz
in
scas
dec
std
mov
push
cmp
mov
addr16
arpl
inc
sub
mov
cli
arpl
cmpsb
add
js
mov
add
fisttpl
lea
shrb
xor
xor
es
push
iret
aad
mov
or
xchg
cmp
jle
xchg
test
pop
inc
jl
pushf
push
and
fsts
pop
and
add
mov
lret
fistpl
pop
pop
jae
jnp
int
add
outsb
jb
mov
or
frstor
test
mov
xor
sbb
sahf
push
push
jbe
sbb
inc
mulb
loope
insl
hlt
inc
inc
xchg
fidivl
jecxz
dec
stos
aad
cmp
cs
ljmp
daa
insl
mov
mov
and
jle
pushf
faddl
mov
je
push
roll
test
je
inc
int
ret
xchg
push
repnz
lahf
adc
mov
pop
ret
jl
andb
lods
inc
dec
sbb
mov
aad
and
lock
pushl
sbb
push
mov
test
add
das
les
in
ret
sti
loope
loopne
scas
scas
jb
push
fbld
mov
sub
lahf
jg
rolb
cmp
and
out
pop
cmp
aaa
movsb
xor
mov
xchg
mov
std
in
jge
or
mov
gs
rcl
jne
jg
mov
das
aas
mov
jae
adc
mov
push
lahf
fiaddl
imul
push
rorb
ficoms
leave
test
or
sarb
jecxz
mov
and
xlat
negl
pop
subb
std
les
out
test
and
je
jle
xlat
pushf
fwait
std
pop
fstps
test
jp
cmp
inc
in
add
mov
mov
add
cmp
add
dec
into
dec
dec
aam
mov
hlt
stc
mov
jns
popf
mov
xor
sub
int3
fdivl
pop
daa
cmp
scas
cli
xchg
lret
xor
fsubrl
sbb
and
dec
xchg
lahf
or
cmp
push
cwtl
fldcw
dec
sarb
push
push
cmp
lret
loope
mov
sbb
cld
shrl
pop
out
jb
inc
imul
cmpl
mov
pop
cmp
shll
pop
push
call
sbb
pop
rcrl
fisttpl
faddl
sbb
push
pop
jns
adc
mov
mov
cmp
loopne
mov
shlb
xlat
fs
in
mov
movsl
nop
testl
pop
xchg
in
lock
dec
or
iret
popf
xor
aaa
mov
xor
es
addr16
clc
icebp
icebp
mov
jo
mov
imul
pop
outsl
jns
hlt
data16
lret
das
xchg
push
testl
adc
les
mov
out
ljmp
jo
dec
jmp
in
mov
mov
jecxz
cwtl
mov
mov
das
mov
adc
inc
inc
cld
dec
popa
fs
popf
pushf
sub
ret
mov
lea
shll
popf
inc
sbb
aaa
jecxz
pop
lcall
xchg
fildll
pushf
mov
mov
cmp
enter
sbb
and
daa
cmp
imul
add
shrb
psraw
xor
push
stc
aaa
popa
leave
insb
filds
fimull
pop
fsubs
xor
mov
test
inc
aam
cld
test
call
jns
in
xor
or
mov
fisttpll
add
xchg
jp
insb
mov
adc
mov
clc
sub
push
cmp
stos
hlt
sub
repnz
fadds
repnz
test
push
dec
dec
aad
xor
ret
hlt
fnstenv
xchg
sti
xlat
lods
cmp
outsl
sub
js
jne
gs
outsb
std
mov
imul
xchg
aam
scas
mov
dec
fistps
adc
jg
xchg
push
insl
insb
push
xor
loopne
or
cmp
mov
subb
ss
daa
stos
xchg
test
jl
ret
sub
lret
fs
dec
mov
sbb
movsl
or
jae
fwait
repz
xor
insb
dec
xchg
dec
jbe,pt
sbb
or
sub
cmp
jg
adc
ret
insb
shrb
rclb
or
ss
popa
pop
cs
sub
outsl
fstps
and
xchg
popf
or
sbb
push
mov
aaa
sti
and
loopne
add
push
fistps
cmp
fbstp
cmc
stos
scas
mov
add
inc
aam
sub
jne
push
mov
jge
ja
pop
stc
cmp
sub
pop
pushf
int
enter
bound
mov
adc
mov
movsl
stos
subb
int
pop
jg
loope
mov
lds
or
mov
test
loopne
adc
arpl
xor
xchg
mov
xorb
jg
neg
loope
adc
enter
mov
leave
ror
popa
sub
push
jl
aaa
fidivs
repz
sbb
mov
popa
sti
sbb
aaa
nop
loop
add
xchg
in
pop
jmp
mov
leave
xchg
popf
repnz
jnp
fcomi
sbb
adc
je
int
mov
mov
leave
mov
push
mov
jl
cmp
fdivl
pop
lret
pop
inc
add
add
movsb
popf
sub
pop
inc
iret
sbb
fisubs
cmp
and
adc
rcll
dec
aaa
pop
scas
or
adc
in
sub
add
sbb
or
ljmp
movl
negb
inc
imul
add
pop
dec
imul
jns
pop
rcl
cs
mov
mov
addr16
test
inc
hlt
mov
mov
pusha
or
fsubrl
or
mov
sbbl
into
cmp
xchg
aaa
fxch
mov
cmpsl
or
sub
push
push
enter
jno
sub
divl
or
les
cli
pop
sbb
add
mov
adc
xor
dec
lret
rorb
xor
mov
xor
lods
mov
pminsw
sbb
mov
add
or
stos
insb
sub
mulb
xor
jnp
jno
pop
data16
push
shr
enter
pop
push
and
ljmp
fs
in
arpl
pop
aas
les
stos
bound
xchg
rolb
bound
dec
subb
std
xor
sbb
fisubl
mov
stos
xchg
and
fwait
push
pushf
mov
xor
xor
pop
sbb
std
stos
in
enter
jmp
ret
jmp
add
mov
pushf
jnp
aam
ret
mov
movl
dec
xlat
mov
aaa
mov
and
sbb
test
pop
mov
out
cmp
xor
repz
jns
imul
jecxz
jns
leave
out
out
lret
mov
cmp
fildl
or
xlat
pop
lods
xor
ja
ljmp
pop
mov
push
xchg
inc
mov
jns
jmp
jno
push
cmp
aaa
je
pop
in
test
or
in
cmp
jns
mov
leave
jne
fisttpl
cmpsb
jns
pop
push
pop
cmc
dec
xor
lret
scas
mov
xchg
sbb
dec
jge
fcomps
test
je
sbb
call
mov
jmp
out
xlat
je
fisubs
fs
cmc
mov
push
jle
mov
jb
cmp
gs
jno
adc
das
cmp
sbb
xor
fwait
shr
push
sub
pop
jp
pop
add
dec
je
cli
adc
cmc
inc
ja
icebp
lds
jg
xchg
sub
popa
fwait
pop
outsl
or
enter
mov
dec
test
pop
xchg
ja
fldt
scas
add
dec
mov
insl
sahf
fwait
mov
sub
inc
iret
into
mov
adc
inc
xor
pop
jecxz
adc
mov
cmp
xchg
int3
sub
xchg
ljmp
mov
add
aas
adcb
shrb
rol
mov
sti
sub
mov
xchg
sub
int
adc
add
hlt
mov
les
popa
popa
and
adc
dec
push
xor
ja
and
les
or
in
dec
je
mov
ret
inc
insb
dec
icebp
jae
je
cltd
out
loope
xchg
and
add
cld
imul
or
stc
inc
push
in
clc
mov
or
mov
xchg
in
aas
cmpsb
mov
sbb
push
pop
lret
push
popa
inc
leave
jg
jnp
mov
mov
xchg
mov
mov
inc
mov
jnp
jg
add
push
jb
test
add
sarb
jb
or
dec
inc
mov
push
inc
mov
rol
fldl
fdivr
lods
dec
sub
dec
out
testl
mov
stos
cmc
cmp
xchg
cmpb
push
test
dec
mov
pop
inc
or
jb
sub
inc
insb
stos
xor
pop
or
push
pusha
adc
sahf
dec
push
outsb
xor
pop
sbbl
test
mov
repnz
fldt
cmpsl
sbb
xchg
inc
dec
rcrb
cmp
dec
out
outsb
mov
sub
jo
xor
push
and
out
mov
mov
inc
cmp
cmp
xchg
nop
fcmovne
ret
divl
mov
repnz
push
dec
push
and
por
push
out
mov
inc
pusha
iret
inc
mov
call
cmp
popf
test
xor
push
sbb
pop
imul
shrb
mov
loopne
test
mov
in
mov
cmp
cwtl
push
sub
les
jmp
or
or
jno
inc
shll
dec
fimuls
dec
and
mov
mov
adc
sub
cltd
adc
push
addr16
xchg
fistpl
adc
sub
mov
adc
dec
mov
jle
push
cwtl
or
lock
ja
repz
push
pop
in
fbld
sbb
out
xchg
push
ret
mov
dec
and
mov
enter
inc
sub
or
leave
sar
addr16
inc
mov
mov
imul
outsb
aaa
sub
test
or
add
xchg
call
pop
and
test
aad
and
mov
xor
es
and
enter
stc
addr16
xor
lods
cmc
iret
jl
rorb
repz
mov
cmp
cmp
movsl
add
lds
push
in
negl
sub
aaa
and
and
mov
adc
bound
xor
aas
scas
jbe
loop
call
xor
mov
sbb
aad
hlt
inc
mov
push
add
push
ljmp
popa
repz
xchg
int
mov
jbe
stos
xor
cmp
fsts
add
mov
mov
test
test
sbb
int
insl
mov
clc
mov
fdiv
inc
push
gs
js
jg
daa
fstl
cmp
xor
push
pop
subl
adc
sub
addb
test
pop
mov
roll
cmp
mov
sub
in
mov
sbb
push
mov
cs
jnp
dec
mov
sub
dec
sbb
sub
sbbl
sbb
xor
fdiv
jns
push
popf
adc
fimuls
cmp
pop
cld
in
sub
imul
xchg
cmp
inc
shlb
lods
dec
hlt
pop
dec
arpl
or
out
sub
das
xchg
xchg
and
iret
sub
xchg
push
xchg
fsubrl
mov
lret
movl
mov
and
shl
mov
push
adc
pop
call
ret
add
decb
xchg
push
scas
cmp
inc
inc
lods
cmc
mov
adc
mov
cmc
push
scas
mov
jbe
sahf
xor
in
ret
icebp
stc
addl
mov
adc
adc
pop
and
and
testl
incb
cli
ds
or
pop
imul
dec
imul
mov
inc
mov
cmpsb
push
insb
jne
out
push
xlat
add
push
movsb
adc
mov
addr16
movsl
xor
inc
sar
jae
ja
hlt
inc
or
adc
ret
ljmp
push
jns
je
mov
aam
jno
and
sub
insb
lcall
and
mov
arpl
push
fsubr
and
loop
test
shlb
fwait
mov
inc
cmp
lcall
cmp
push
out
jp
mov
faddl
dec
mov
jecxz
cli
cmp
adc
test
fdivs
or
cmpsl
and
fmull
lcall
dec
sahf
add
leave
icebp
sarb
int
inc
into
ds
lahf
push
sbb
les
mov
scas
pop
mov
ret
in
dec
sbb
fs
movsb
sbb
sub
sub
and
jmp
sarb
xor
sbb
daa
mov
cmpsl
push
jnp
adc
ret
sti
enter
out
push
enter
loop
cltd
js
subb
arpl
mov
jb
into
inc
jg
lcall
sbb
cmpsl
jmp
xor
das
or
dec
xchg
push
push
lods
test
negb
mov
and
dec
pop
lods
mov
pop
sub
arpl
ljmp
push
out
pop
pop
pop
sarl
inc
addl
jno
push
sarl
cmpsb
movsb
xor
mov
or
test
test
xchg
jmp
rol
or
xchg
leave
mov
bound
imul
call
out
scas
daa
fnsave
jle
pusha
xchg
imul
xor
int3
sti
push
cmp
jo
out
jo
xchg
mov
xor
enter
rcr
sarl
push
sar
mov
out
jl
mov
scas
jno
cltd
imul
insl
scas
pop
push
inc
cmpsb
cmp
bound
sub
sub
pop
ret
scas
push
test
nop
xchg
out
cli
sbbl
aaa
jle
scas
test
test
mov
adc
mov
xor
in
clc
jg
or
or
xchg
xchg
fdivrl
jecxz
lret
clc
pop
decl
mov
pop
xlat
loope
test
cmp
test
fistpl
fisubrs
mov
ret
push
dec
and
mov
cmp
dec
xor
lret
xor
int3
orl
aam
pop
adcl
push
in
fsin
shrb
jp
repz
jl
std
cmp
cltd
inc
ljmp
mov
mov
pop
xor
lret
push
xor
xor
sbb
call
int3
cwtl
dec
add
fistl
movq
loopne
pop
mov
mov
adc
xlat
mov
mov
imul
fstpt
shr
loop
add
pop
sbb
lock
push
mov
sub
push
fwait
enter
inc
mov
pusha
sbb
fdivs
sub
ds
xchg
pop
mov
call
outsb
test
sbb
cwtl
scas
xchg
sbb
loope
lahf
xchg
push
ja
mov
mov
rclb
pop
fisubs
inc
fldt
or
imul
ret
sbb
cmpb
mov
lahf
imul
push
mov
ljmp
mov
imul
fidivrs
data16
lahf
or
mov
insl
loopne
cmp
nop
inc
lahf
sti
xchg
out
cmpsb
xor
mov
and
hlt
push
cmc
sbb
mov
les
jl
mov
mov
pop
adc
xor
pop
inc
sub
and
dec
scas
popa
insl
out
inc
shll
mov
adc
push
mov
in
out
loopne
ret
shrl
fsubrl
mov
outsl
xchg
jb
xor
in
fsubs
fwait
fs
xor
cmp
xor
cmp
gs
dec
sbb
hlt
aaa
mov
mov
xor
or
pop
push
fdivrs
in
xchg
testb
mov
jno
xchg
dec
mov
cs
jnp
movsb
inc
adc
enter
clc
movsl
lds
adc
inc
pop
sbb
mov
adc
movsl
add
loopne
adc
push
ficomps
inc
cmp
jo
mov
push
je
repnz
add
pop
test
jns
sbb
mov
cmp
cmp
fcom
stc
sbb
add
push
stc
cltd
outsl
xchg
adc
jle
movsl
pop
repnz
out
inc
pusha
mov
mov
mov
lock
dec
mov
inc
mov
adc
xchg
jno
jle
fwait
int3
cmpsb
imull
test
insb
lcall
inc
pop
loop
jo
aaa
lea
or
pushl
fucom
cmp
imul
outsl
sbbb
pusha
xchg
push
mov
lea
inc
rolb
int3
insb
jecxz
push
pop
aaa
pop
xchg
fimuls
iret
rol
and
mov
test
mov
push
dec
insb
and
imul
push
adc
test
scas
cmpb
push
int3
sub
addr16
or
scas
mov
pop
les
in
sbb
cmp
inc
and
add
and
test
sub
mov
rclb
mov
rclb
daa
arpl
outsl
or
scas
sub
sub
xchg
jns
lock
cmp
xor
sbb
sub
frstor
loope
or
popa
sbb
adc
js
mov
pop
mov
loopne
xchg
fnstcw
jbe
stos
and
test
pop
dec
push
push
call
push
test
cltd
fisubrs
pop
enter
mov
add
clc
add
in
js
bound
add
in
call
pop
add
sub
gs
jne
scas
add
xchg
ja
test
movsb
icebp
dec
scas
in
call
jae
in
cmp
fdivl
jg
pop
shrb
cli
lock
test
or
jmp
fbstp
sub
push
adc
pop
add
and
xchg
xlat
jb
push
xchg
xchg
test
clc
sub
lds
jb
push
dec
cmc
jp
push
push
pop
inc
sbb
dec
jl
xor
filds
jae
popf
jmp
pop
cmp
cmpsb
or
repnz
rcrb
add
lock
pop
add
sub
sub
mov
loop
test
cmc
xchg
imul
in
pop
mov
xchg
inc
push
ror
push
adc
mov
clc
pushf
and
loopne
push
imul
into
arpl
dec
imul
daa
sub
andb
jb
mov
and
fisttpll
mov
dec
aaa
pop
les
sbb
lahf
dec
jecxz
inc
mov
das
and
fs
and
call
pop
movsb
int3
sbb
sub
dec
pop
mov
fdivrp
push
cmp
push
push
fbstp
or
cwtl
sbb
jo
adc
adc
lods
iret
or
lods
aam
xor
xor
pusha
pop
mov
xor
mov
test
cmp
dec
xchg
in
loop
pop
movsb
sbb
std
lea
mov
inc
push
lds
pop
jmp
push
dec
dec
xor
pushl
in
sbb
int3
cmp
movsl
mov
pop
dec
push
pop
xchg
cmpsb
loope
mov
sub
out
mov
shlb
cmp
popf
iret
sub
xchg
imul
ljmp
mov
dec
sbbl
std
or
lahf
fsubr
pop
mov
jle
mov
mov
xor
ljmp
js
aas
aaa
pop
fadd
lret
pop
sbbb
cmc
mov
sub
lds
pop
sub
cmp
cmp
into
mov
loope
mov
es
and
mov
mov
daa
add
fs
sti
cmpsb
mov
ds
jns
mov
pop
sbb
push
jno
push
mov
cld
mov
cmp
cli
aad
jmp
jecxz
dec
dec
mov
aad
push
push
ljmp
push
add
daa
icebp
dec
cwtl
adc
adc
cmp
sti
add
fwait
jecxz
les
push
xchg
xor
mov
inc
pop
movsl
xchg
movsb
mov
iret
in
cmpsb
arpl
xor
and
add
push
lods
dec
dec
jp
mov
cld
icebp
outsl
cmc
gs
or
push
cmpsl
repz
mov
mov
sti
mov
cltd
idiv
xlat
insl
repz
xchg
jnp
imul
inc
jbe
mov
sbb
adc
rcrl
popf
adc
es
stos
cmpsb
inc
sahf
xchg
int
xchg
push
ret
loop
mov
dec
jle
lods
neg
clc
and
out
in
popa
or
mov
push
cmp
jmp
sbb
outsl
xor
icebp
cmpsl
sub
fisttps
int
ficompl
xchg
adc
shlb
adc
sti
push
push
xor
cwtl
push
loopne
pusha
add
cmpsb
mov
adc
and
rcrl
cmp
loopne
fwait
int3
arpl
cmp
movsl
or
jmp
jmp
inc
ljmp
cmpsl
gs
xor
les
xchg
inc
hlt
inc
inc
popf
pop
lods
push
popa
pushf
jbe
mov
sbb
mov
aad
lcall
lret
ljmp
add
into
in
xchg
daa
call
in
push
lcall
push
push
hlt
push
imul
or
dec
mov
sbb
jp
mov
out
xor
cwtl
leave
imull
pop
ljmp
std
jecxz
icebp
jmp
mov
mov
icebp
lods
pushf
fsubl
push
inc
mov
dec
data16
aaa
js
mov
jmp
gs
xor
mov
out
add
inc
xchg
sbb
push
mov
stos
in
dec
or
lods
push
cmp
xlat
rorl
roll
ljmp
test
xchg
enter
jle
js
shlb
or
js
int3
sahf
fsubrs
jne
and
adc
push
iret
inc
out
and
cmc
aas
and
fadds
fistpl
jp
fnop
cmpsl
mov
enter
out
or
test
outsb
pop
repz
mov
sub
jge
gs
jne
dec
push
and
loopew
pop
mov
add
mov
jg
sub
fcomi
mov
xchg
mov
das
mov
inc
std
mov
pop
inc
das
mov
adc
xchg
pushf
pop
out
mov
lret
xchg
cmc
je
popl
mov
mov
jnp
fnstsw
adcl
xor
sub
jnp
movsb
adc
in
mov
dec
ror
inc
xorl
dec
cmpsb
mov
loope
outsl
and
inc
adc
cmpsl
ja
inc
cmpsb
popf
out
inc
bound
inc
scas
lock
into
xor
bound
mov
push
mov
arpl
cld
cltd
xor
mov
jbe
cld
cmp
or
pop
fs
adc
push
mov
cmp
jecxz
dec
ljmp
sahf
outsb
bnd
rcr
cmp
jmp
sti
adc
rorl
in
lds
mov
jo
inc
cmpsl
and
dec
pop
insb
mov
shl
repz
and
cmp
and
xor
in
xor
dec
xor
je
outsb
xchg
popf
push
aam
jb
jo
aaa
test
xchg
jl
ljmp
test
sub
lret
cmpsb
sub
cmpsl
insb
xchg
or
xlat
lds
cmpsl
dec
sbb
and
mov
and
adc
out
dec
int
lret
or
cld
xchg
cwtl
sbb
loopne
mov
xlat
stos
sbb
pop
int
out
push
cmp
movsb
iret
outsl
xor
cltd
lret
es
loopne
subl
idivl
lcall
adc
mov
cmpsb
xor
je
jno
fwait
out
adc
sbb
mov
jbe
adc
aam
movsl
adc
sub
hlt
repz
mov
jnp
fisubs
xor
mov
arpl
repz
sbb
fwait
mov
push
leave
clc
xor
mov
and
push
xor
and
stos
addb
lds
push
mov
or
push
push
xchg
mov
fldt
data16
dec
pop
fisubs
jne
jae
movsb
push
dec
mov
mov
adc
inc
adc
aas
pop
cmp
dec
push
pusha
sbb
lahf
mov
mov
clc
cmpsl
inc
sbb
adc
lods
ret
push
dec
push
les
je
cmp
adc
lods
test
adc
push
mov
std
test
addr16
pop
inc
cmp
mov
jl
mov
js
inc
cld
push
aam
mov
and
cs
ja
jbe
aas
bound
orb
pushf
dec
sbb
jo
jb
ja
xlat
inc
xlat
notl
clc
inc
imul
rolb
xchg
shrl
ds
ffree
nop
xchg
addr16
pop
aaa
xchg
fisubl
std
inc
fwait
fs
cmpb
push
push
jnp
pop
into
aas
int3
sub
enter
int3
notb
punpckhwd
loopne
sti
test
loopne
and
ljmp
sti
push
mov
add
or
xor
cmc
hlt
push
push
sbb
pop
andb
adc
mov
sub
sbb
jecxz
das
sti
les
pop
cli
xchg
xchg
fsubrp
cltd
sub
adc
cli
pop
fnstenv
mov
cld
mov
out
jmp
fdivs
loop
pop
and
lock
mov
repnz
mov
sub
hlt
mov
add
cmp
clc
int
xchg
push
sbb
movsb
xchg
add
aam
loopne
xchg
dec
adc
mov
push
inc
jmp
sub
sbb
out
sub
icebp
mov
xor
jno
dec
adc
sub
push
data16
ficompl
mov
or
jbe
jo
imul
aad
jbe
in
roll
jns
es
mov
jns
clc
or
stc
inc
xor
jne
sbb
mov
sbb
inc
shrl
inc
dec
add
cmp
cmp
and
sbbl
xor
sbb
or
push
inc
xorb
add
das
jle
mov
inc
addr16
pop
ret
xchg
and
pop
pop
adc
aas
pop
ljmp
and
add
sahf
insl
in
add
push
out
mov
mov
cmp
jns
sbb
loopne
mov
dec
jp
or
dec
pop
lock
jecxz
mov
pop
and
mov
inc
lods
or
ja
out
pop
mov
insb
je
stc
mov
gs
jecxz
xor
add
dec
sti
push
shrl
mov
in
sbb
jae
popl
adc
mov
and
fcompl
dec
hlt
xlat
add
out
adc
adc
inc
mov
data16
subb
inc
mov
mov
adc
lcall
mov
cmc
sti
mov
daa
push
nop
cli
stos
mov
stc
xlat
pop
jg
pop
rcrl
das
out
add
shrl
jae
pop
push
aas
inc
jae
mov
xor
pop
dec
outsb
xchg
arpl
adc
adc
lods
xor
adc
mov
mov
add
pop
or
pop
shrb
pop
out
push
push
aam
jmp
ds
cwtl
xor
jno
shll
add
shll
mov
adc
scas
mov
or
sub
cmp
pop
jmp
mov
pop
mov
xor
ss
pop
xor
mov
push
pop
addr16
lock
and
lods
inc
xor
mov
xchg
lcall
mov
lret
pand
test
lea
lods
add
or
je
pop
mov
cld
cmp
pusha
push
mov
insl
adc
push
inc
dec
and
cmp
xchg
pop
shll
and
or
mov
cmp
aad
mov
add
jle
icebp
xchg
or
lock
mov
cltd
pop
jle
cmc
jecxz
movsb
test
mov
mov
pop
jl
dec
jbe
loope
xchg
sbb
ret
out
cmp
popa
call
sti
stos
add
mov
inc
enter
decl
adc
mov
push
push
cmc
test
insl
dec
test
sbb
push
andl
xchg
lret
inc
and
cmp
stos
cmp
data16
pop
fnstsw
mov
sub
out
fs
dec
movsb
pusha
sarl
popf
leave
inc
pop
and
out
test
cmp
cmpsb
mov
jnp
pop
jle
or
lahf
push
aaa
pop
jbe
mov
xor
jo
data16
aaa
int
pmulhuw
adc
push
inc
sbb
push
mov
call
cli
sbb
sahf
mov
mov
jle
jns
stc
sbb
add
jbe
sbb
fisubrs
lods
std
adc
sub
push
and
bound
jno
stos
sub
mov
or
adc
pop
cmp
sti
iret
mov
dec
das
das
mov
mov
push
mov
pushf
mov
pop
adc
loop
repnz
pop
jl
mov
into
push
adc
popa
jmp
into
and
lahf
mov
out
lods
pop
adc
pop
out
rcrl
cmp
aaa
out
add
mov
icebp
arpl
mov
lock
push
ljmp
lds
mov
xchg
sub
add
pop
addr16
lods
fcompl
sahf
xchg
mov
inc
lods
cmp
sub
iret
sti
xchg
fs
mov
lds
fcompp
xlat
mov
fsubrp
dec
mov
sub
rorl
icebp
jbe
adc
test
cmp
ret
sbb
sub
in
int3
jo
xchg
out
push
arpl
aam
outsl
xchg
sbbb
mov
sub
cs
fsubl
add
loopne
cmc
lret
out
or
sbb
or
and
mov
mov
ret
insl
mov
ds
jmp
mov
mov
cmp
mov
testl
sbb
fldenv
ror
xor
push
test
xor
inc
jp
cmp
pop
mov
sub
js
inc
lock
mov
aas
in
mov
fidivs
call
add
idivl
and
cmpsb
push
jns
mov
adc
lds
stos
add
fs
mov
out
nop
cwtl
push
sbb
in
xchg
push
jge
in
loope
mov
sahf
adc
xchg
or
dec
xor
dec
pop
fdivs
and
das
push
cli
adc
addr16
daa
in
mov
mov
push
adc
in
std
mov
jg
lcall
test
mov
fadd
dec
fisttpll
sub
scas
and
dec
nop
xor
shll
xchg
rol
mov
in
imul
xor
xchg
sub
and
push
mov
cld
cmp
loop
pop
sub
int3
lahf
frstor
out
mov
xor
lret
pop
mov
dec
js
push
jmp
jbe
or
and
push
push
sahf
mov
push
mov
imul
stc
jae
cmpsb
xor
aas
sbb
hlt
inc
xchg
lret
jbe
pop
out
mov
fildll
shrl
jb
sti
loop
push
repz
cmpsb
jne
sbb
sbb
and
aad
lods
shll
and
cs
jl
out
fdiv
or
shll
jbe
pop
leave
loop
add
xor
int3
into
lret
popa
subb
aam
jo
lcall
pop
push
xlat
adcb
scas
jb
call
outsb
mov
aam
out
adc
mov
pop
mov
xchg
push
pop
lahf
jo
add
inc
xor
jmp
stos
xchg
inc
inc
sub
or
aas
add
cli
sub
into
mov
jle
loop
jl
jbe
adc
push
popa
dec
icebp
ds
int
fdivrs
ds
pop
cmp
std
sub
lret
out
lret
test
xchg
or
cli
fisubrl
jmp
sbb
int3
fisttpll
inc
inc
cmp
pop
xchg
vmovss
cmpsb
call
outsb
cmp
mov
mov
lock
pusha
xor
addr16
ds
pop
pop
arpl
cmp
jge
xor
push
testl
push
roll
pushf
xchg
in
cs
mov
cs
aas
xchg
sbb
push
sub
aam
test
fldenv
inc
sbb
out
aam
jo
ds
mov
mov
mov
and
lcall
pop
xorb
sbb
jecxz
loope
push
xor
adc
xchg
jbe
or
xchg
adc
fimuls
idivl
mov
mov
outsl
bound
in
jg
mov
cmp
test
pop
sub
jge
in
pop
in
pop
jp
and
jecxz
xchg
insb
imul
mov
pop
sbb
push
xor
push
ljmp
sbb
xor
dec
bound
xlat
negl
adc
mov
push
mov
lcall
test
imul
adc
push
es
outsl
dec
inc
out
pop
push
mov
dec
jge
mov
mov
xchg
or
in
cli
dec
ret
lcall
fistps
inc
lret
ljmp
adc
pop
inc
sub
in
gs
pop
pop
repz
cli
mov
xor
scas
adc
enter
clc
daa
lea
or
fisubl
ljmp
and
in
stc
jo
shlb
ss
fistps
inc
mov
push
mov
jbe
jno
mov
cltd
ror
pop
mov
mov
or
test
sbb
sbb
out
sbb
mov
je
in
dec
loope
jge
push
fildll
iret
mov
test
iret
adc
fisttpl
pushf
inc
jo
mov
pop
je
pop
clc
push
ror
xchg
sbb
push
mov
sub
sar
imul
icebp
xchg
lds
cmp
jmp
dec
xchg
and
lea
mov
push
std
je
cmp
mov
repz
mov
insl
outsl
mov
cmc
sbb
hlt
pop
ret
cli
fsubrs
fwait
movsl
lret
arpl
lret
outsb
pop
pop
pop
pop
enter
inc
jo
pusha
xchg
cmp
jl
fistps
dec
ljmp
mov
xor
test
sbb
adc
ret
xor
in
pop
pop
jmp
mov
les
jo
xor
in
cs
loop
negl
mov
jecxz
les
or
xchg
and
jle
out
pop
adc
and
dec
out
lret
call
cmpsl
test
in
pop
rorb
inc
dec
pop
lock
xor
dec
push
test
sbb
push
rcll
xchg
mov
xchg
aas
test
mov
mov
les
mov
sub
xorl
je
lret
sub
or
lds
aam
imulb
pop
pop
cmp
ret
or
sub
pop
stos
cmp
inc
ja
aaa
mov
movsb
lret
sbb
mov
in
push
dec
jp
sub
mov
dec
sub
ret
cmpsb
das
push
mov
leave
in
and
push
testl
ja
xchg
inc
push
xorl
push
dec
cld
cwtl
xchg
mov
inc
lods
loop
ret
je
pop
jmp
cld
push
jl
and
xor
cltd
fidivrl
das
xchg
cmpsl
sub
mov
ja
jno
sbb
mov
xchg
lods
jge
cmp
pop
sysexit
xchg
or
fmulp
jo
lret
push
mov
inc
adc
shll
pop
mov
popa
pop
in
test
pop
push
ds
or
ficomps
jg
adc
popf
leave
push
xchg
adcb
in
jmp
pop
call
cwtl
dec
and
rcll
lahf
hlt
repz
xor
insl
xchg
imull
adc
into
mov
insl
lahf
std
or
mov
cmpsl
inc
data16
mov
mov
loopne
int
je
jo
push
mov
subl
jne
mov
jg
and
or
push
cmc
push
pop
xchg
loopne
aam
movsb
xchg
pushf
inc
mov
sub
stos
in
stos
sbb
mov
adc
lds
inc
fcmovnbe
vmwrite
icebp
sbb
xchg
xchg
scas
ljmp
cmp
ss
lods
shrl
std
mov
mov
call
xchg
loop
inc
jle
sub
sbb
movsl
fisttpll
push
mov
movl
mov
inc
xchg
aaa
cmp
push
mov
cmp
outsb
hlt
mov
mov
cmp
inc
adc
sbb
popa
xor
xor
mov
in
test
cld
push
stos
jmp
pop
dec
mov
inc
push
cli
jl
popf
dec
in
scas
jle
add
aaa
jae
repz
outsl
pushf
sahf
ds
jg
fldl
sub
add
sbb
icebp
add
xchg
in
inc
jns
jge
lock
cli
mov
mov
orb
outsb
mov
fisttpl
stos
dec
mov
adc
repz
xchg
cmp
sub
sahf
pop
add
fildll
aaa
test
cs
int3
cli
ret
cmp
repz
dec
add
sbb
mov
ljmp
addr16
scas
mov
or
mov
xchg
int3
loop
push
add
add
or
dec
inc
mull
jns
inc
mov
cmc
gs
aad
sub
push
pop
nop
push
mov
scas
sub
out
add
idivl
sar
jno
cmpsb
pop
cld
call
cltd
or
mov
notl
aam
push
jb
test
jg
aaa
and
sub
fmull
aam
hlt
jmp
mov
xor
jecxz
mov
push
pop
add
imul
mov
push
fwait
int3
je
aaa
bound
addl
mov
shll
lods
push
mov
jle
sbb
mov
arpl
enter
mov
inc
mov
cmp
mov
int3
rcrb
push
mov
in
adc
add
or
hlt
push
jl
ds
jnp
adc
adc
push
mov
rorb
mov
iret
jmp
mov
adc
outsl
jle
fidivrl
pop
cli
gs
in
sub
fwait
sti
cmp
xchg
hlt
outsb
cmpsl
cwtl
jge
aam
add
push
shrb
adc
xor
cmp
je
movsl
jmp
sarl
pop
or
cmp
sub
loop
fisttps
ja
xor
and
frstor
insb
es
jmp
cwtl
jnp
or
inc
in
mov
lret
push
mov
dec
jg
mov
add
jbe
scas
lds
insb
cmpsb
sbb
cli
fdivrp
add
sbb
pushf
out
aas
xchg
push
xor
xchg
in
xchg
ljmp
addb
pop
test
jns
mov
mov
fcmove
mov
das
mov
adc
pop
scas
inc
xchg
jge
insl
cmp
in
xchg
push
loope
insb
loopne
in
test
mulb
jb,pt
es
sub
adc
adc
sbb
push
jle
pop
xor
push
aas
pop
jnp
lret
mov
pop
push
xchg
sbb
das
fmull
xor
insb
movsb
stos
lea
movsl
data16
xchg
or
sub
outsb
pop
inc
mov
sti
lds
das
dec
test
pop
add
xor
add
iret
pop
jmp
std
mov
in
fimull
in
adc
pushf
sbb
sub
sub
inc
jg
lods
in
popa
jl
scas
aas
cmp
lret
or
and
and
push
test
and
mov
icebp
push
push
ss
add
dec
push
inc
add
aam
mov
dec
lcall
pushf
pop
decb
jmp
call
mov
loop
movsb
cmpsb
mov
push
in
sub
xchg
jbe
push
aaa
insl
aad
insb
cli
inc
fcomps
xor
or
or
add
jae
pop
repz
xor
adc
sub
nop
hlt
jle
sbb
into
adc
push
inc
xchg
jbe
aaa
repz
inc
mov
cmp
mov
and
scas
and
and
dec
sub
mov
mov
adc
pop
pop
aas
mov
mov
dec
gs
orb
rorb
mov
movsl
leave
push
call
mov
pop
adc
jge
adc
push
mov
dec
sub
dec
pushf
inc
rcr
int3
mov
xchg
and
shrb
mov
push
jecxz
ss
dec
ss
xchg
faddp
fs
xor
dec
xchg
incl
xorl
lods
cli
add
lock
int3
stos
movb
lods
jo
repz
add
shrl
inc
jmp
add
push
sub
push
jae
xor
pop
out
add
add
pushf
xor
testl
xor
push
je
pop
mov
stos
sub
mov
rolb
jnp
cmpsb
mov
jae
jmp
mov
cmp
inc
stmxcsr
shrl
push
mov
dec
clc
clc
add
repz
push
insl
inc
push
and
movsb
mov
mov
add
fisubl
fsts
sbb
jecxz
mov
sbb
sahf
inc
stc
push
and
adc
nop
jl
mov
in
ret
dec
popl
aad
and
jnp
cwtl
in
jmp
outsb
decb
invd
je
sub
mov
cmp
push
inc
leave
das
testl
mov
jmp
repnz
popa
adc
mov
dec
dec
pop
and
mov
icebp
xchg
pop
out
hlt
xor
inc
or
stos
add
fistps
addr16
subb
sbb
fwait
in
loop
dec
std
mov
pop
xchg
cmpsl
jno
inc
inc
inc
pusha
out
inc
pushf
shl
test
push
clc
ja
and
lds
xchg
inc
mov
inc
cmc
in
push
addb
clc
jg
adc
cltd
mov
inc
sub
mulb
loop
fwait
xor
dec
xchg
xchg
scas
outsb
lret
call
mov
lret
fidivrl
gs
jo
out
ret
fildll
sub
or
gs
dec
aam
jge
push
xchg
in
xchg
sbb
fwait
add
inc
das
cli
cmp
jae
test
lret
mov
lods
cmp
xchg
push
in
and
lea
dec
cmp
lods
insb
pop
sub
xchg
pushf
mov
push
or
adc
add
leave
fldt
testb
ja
mov
and
jne
push
jb
mov
repnz
push
fsts
sub
jl
outsl
sub
insb
lcall
and
xor
ja
cmp
xor
inc
sub
and
inc
xor
mov
inc
push
pop
insl
and
add
int
push
rorb
mov
leave
xlat
loop
jo
push
lock
sub
aaa
cmp
mov
mov
jg
jl
imul
sub
xchg
cs
outsl
in
xchg
add
notb
cmp
out
scas
pop
dec
mov
cld
cmpsb
bound
fisubrl
in
jo
sub
inc
mov
into
cmp
mov
or
push
ss
mov
push
cmpsl
in
dec
bound
pop
sbb
imul
sbbb
add
dec
data16
aas
stos
pop
mov
jnp
dec
ret
adc
loopne
push
pop
out
push
add
outsb
negb
negb
shl
xchg
aam
xorl
inc
int
xor
lods
jae
mov
xor
jmp
pop
xor
or
push
imul
and
sar
and
and
pop
push
inc
outsl
adc
movsl
pop
sbb
mov
xor
inc
movsl
ret
loope
and
out
mov
mov
and
insb
in
nop
pop
lcall
shll
mov
cmp
fwait
add
shrb
push
into
xor
inc
lods
sbb
test
loope
popf
pop
lock
stos
mov
mov
sbb
andl
movsl
out
fidivl
dec
testb
out
jmp
sub
dec
cmp
hlt
js
fidivl
xor
loopne
sub
inc
adc
mov
divb
and
lcall
in
lcall
pop
outsl
mov
cmp
cmpsl
stc
roll
popf
ficoml
lret
adc
or
mov
inc
insl
stos
dec
jge
es
mov
fbstp
aas
ljmp
fidivl
and
insl
pusha
adc
mov
insl
add
mov
pop
lahf
sub
and
test
or
add
mov
mov
aas
arpl
xor
jns
loop
or
aad
test
popf
or
cmpsl
and
ds
lret
leave
mov
or
insb
dec
mov
add
addl
jmp
sbb
ljmp
mov
fcom
pop
clc
mov
jno
dec
cmp
pusha
movsb
xchg
mov
jle
and
repnz
fstl
lods
jne
das
call
andl
inc
or
ljmp
loopne
repz
cmc
adc
add
in
fildl
add
sbb
jbe
xchg
jle
cmp
aad
pop
popa
mov
inc
sbb
into
xchg
bound
dec
sbb
cmp
or
xchg
aad
pop
roll
push
roll
iret
xchg
and
les
xorl
mov
mov
mov
dec
ret
aam
jnp
mov
pushf
dec
movsb
cmp
imul
pusha
mul
mov
fldenv
sbb
ss
sahf
and
xor
sbb
jmp
ss
push
pop
leave
out
sub
sub
cmp
push
ret
pop
stos
pushf
ficoml
pop
aas
sbb
mov
ljmp
dec
icebp
adcb
insl
or
shl
jno
and
js
mov
fsub
and
addr16
lret
in
cld
cmp
das
out
test
inc
stos
add
sbb
sub
add
xchg
jnp
sbb
or
cmp
mov
xor
cmp
inc
pusha
nop
repnz
lcall
mov
xor
insb
push
pop
push
xchg
mov
cmp
pop
enter
jle
and
je
and
lret
test
int3
je
add
and
xchg
fisubl
sbb
push
lea
pop
imul
sub
repz
xchg
pushf
fs
cmp
jge
neg
fs
or
jno
popf
and
or
or
nop
sbb
mov
nop
int3
movl
fstpt
orl
es
mov
dec
clc
cmp
fldl
cmp
fcmovnbe
push
lret
push
mov
sbb
pop
inc
mov
sub
les
lods
xchg
pusha
test
sub
stos
aaa
sahf
test
imul
test
or
aaa
popf
mov
daa
shlb
cmpsl
xchg
dec
out
andb
or
pusha
aam
imul
les
sub
push
push
pop
sub
imul
or
leave
fbld
das
cmp
xchg
scas
push
sbb
push
mov
push
xor
pop
push
stos
in
rcll
xor
lds
cmp
and
inc
and
xor
mov
fmuls
pop
stos
out
cmp
lahf
dec
out
xchg
and
das
mov
adc
cmp
push
lods
ret
cmpsl
mov
lcall
call
jb
nop
lret
lret
data16
jp
or
xchg
shlb
test
pop
jnp
int
or
jmp
push
rclb
add
std
lock
rorb
cmp
jo
lods
mov
js
push
jle
insl
cmc
fcompl
aam
subl
sub
mov
les
in
cmpsb
add
scas
xchg
or
hlt
xor
jmp
lds
jmp
sbb
fdivs
lret
mov
mov
jle
or
sbb
sub
pop
loope
mov
jge
pop
cmp
and
setle
dec
stos
jbe
jp
cmp
insb
loopne
iret
lcall
inc
lock
lret
rorl
inc
in
add
sbb
cmc
ret
sti
add
std
jmp
pop
loop
add
aas
mov
lea
mov
dec
mov
addr16
stos
out
aaa
push
dec
fwait
aam
mov
and
dec
inc
ret
xor
lock
cmpsl
aam
fldpi
fsts
sub
ret
test
fbstp
cmc
lds
mov
test
loopne
imul
push
xchg
inc
pop
xchg
xor
push
lea
scas
inc
not
dec
sub
xchg
cmp
movsb
cmpb
sub
or
sarb
ds
js,pn
movl
or
jb
pushf
dec
and
sbb
mov
cmp
and
adc
add
bound
fsub
popa
sahf
mov
sub
out
xor
gs
dec
lret
sub
filds
cmp
xor
xchg
scas
fstpt
mov
je
out
outsl
push
inc
test
sub
mov
cmp
movsb
adc
mov
js
pop
jl
maxps
into
mov
sbb
and
mov
jp
cltd
aaa
testb
mov
int
andl
mov
test
iret
movsl
stos
pop
mov
cmpl
hlt
test
sub
ja
pop
cmpsl
or
les
sbb
jmp
movsl
and
mov
test
leave
inc
jmp
xchg
dec
sti
fadd
jnp
mov
ljmp
fs
mov
in
push
arpl
inc
sti
or
xchg
mov
push
sub
mov
pop
inc
xor
pop
mov
inc
insb
add
imul
xchg
dec
jl
inc
divl
or
call
cmpsl
in
cmp
mov
jmp
mov
mov
mov
mov
and
cmp
je
pop
ss
sub
mov
ss
vxorps
jg
test
sbb
stos
loope
adc
jo
pop
cmc
mov
or
punpcklwd
jge
add
push
push
mov
xor
pop
and
fcmovne
pop
das
stos
and
lods
repz
jo
mov
fcmovbe
out
add
rorl
pop
and
inc
scas
dec
shrb
in
mov
cmp
add
adc
testb
cs
arpl
fs
sub
xchg
lds
mov
and
mov
stos
cmpsb
dec
xor
lcall
cli
add
jae
lret
insl
incb
mov
fistps
xor
sub
nop
mul
jae
sub
loopne
movsl
fists
mov
push
stc
dec
sbb
mov
ljmp
sbb
pop
les
fisttpll
rorb
test
pop
cmp
pop
jnp
js
or
xchg
or
dec
lods
cmp
push
pop
ss
xor
mov
test
mov
cld
loop
lods
iret
lret
decb
das
xchg
xorb
sub
sub
hlt
mov
outsl
or
cmp
push
xor
inc
push
push
add
and
or
pop
dec
test
test
inc
mov
sti
xor
fiadds
xchg
and
add
clc
adc
lret
repnz
sub
sbb
in
mov
sub
dec
dec
jb
mov
push
ss
xchg
jmp
aad
mov
sbb
enter
jecxz
and
mov
lods
push
cmp
fisubs
or
xor
stc
xchg
into
lea
pop
cltd
ja
sub
fdiv
into
enter
add
mov
imul
sub
pop
arpl
pop
rcl
add
and
dec
mov
pop
xor
xor
push
addr16
stos
mov
ss
sahf
jp
mov
adc
xchg
mull
and
jnp
adc
dec
das
test
mov
addb
stos
xor
and
adc
cmpsl
ret
stos
loope
add
es
addr16
ljmp
xchg
inc
sub
std
xchg
and
xchg
mov
jp
adc
xchg
pop
clc
cmpsb
outsl
jb
imul
xorb
int
mov
fistpl
pop
mov
pop
std
clc
fcmovnu
bound
lods
je
add
mov
mov
cmp
jge
inc
int
dec
xchg
push
sbb
fwait
test
leave
or
insb
loopne
mov
imul
mov
mov
xchg
sub
ret
mov
imul
outsl
xchg
daa
call
aam
push
sahf
mov
inc
xchg
outsl
in
sbb
and
scas
inc
repnz
jle
out
jg
leave
jns
xlat
hlt
loope
pop
xor
test
or
enter
dec
aas
scas
outsb
sahf
insb
mov
pushf
insb
ret
cmp
and
aaa
in
pop
ficompl
and
and
lret
pop
mov
cmpsb
dec
sti
fnstenv
pop
sub
xorb
pop
inc
push
subb
out
mov
arpl
mov
mov
scas
outsl
inc
es
mov
inc
loop
inc
insb
stos
int
sub
jb
int3
inc
cwtl
cmp
pop
imul
jbe
push
push
and
and
xchg
jae
jb
cmpsb
pop
aas
mov
jmp
mov
loopne
mov
aam
sub
add
push
lds
xor
push
daa
loope
sub
push
aaa
in
lret
sti
add
enter
xchg
outsl
sub
fwait
sbb
ret
mov
test
aam
inc
push
xlat
insb
xlat
ret
fucomip
fcom
cld
ljmp
mov
lods
xchg
xor
sti
movsb
repnz
into
aas
arpl
inc
pop
cltd
imull
stos
sbb
mov
or
add
mov
jb
adc
sar
inc
mull
addr16
rorb
sub
ja
add
test
jnp
adc
add
shlb
push
loope
push
fnsave
dec
and
stos
loopne
push
fildll
mov
popa
cmp
std
xor
mov
inc
mov
pop
pop
iret
mov
jge
insb
shlb
lret
test
in
daa
and
fistl
mov
pop
cmp
and
lahf
inc
mov
xchg
jo
jb
push
ss
inc
cmp
adcb
inc
mov
xlat
push
shrb
dec
test
and
mov
dec
add
mov
mov
push
repnz
mov
in
cmp
add
lock
or
jp
les
sub
repz
cmpsl
pop
test
cmp
insl
mov
dec
adc
subb
fistpll
fwait
mov
mov
lcall
cli
adc
jno
sbb
js
aaa
cli
lock
daa
ss
and
mov
xchg
xor
push
xchg
sbb
xchg
jle
sbb
sub
daa
xchg
sbb
jl
xchg
push
inc
fdivr
xchg
adc
mov
mov
jle
arpl
inc
adc
push
lock
stos
jno
je
jle
dec
xlat
sbb
daa
push
pop
lods
hlt
addr16
pop
test
or
lcall
loop
xor
xor
fisttpll
into
jp
pop
adc
sbbl
mov
or
clc
stc
pop
add
mov
notb
js
insl
icebp
ret
xchg
adc
repz
in
jl
pusha
rorb
cmp
into
movsl
arpl
mov
aam
mov
fiadds
mov
add
xorl
mov
dec
sub
test
mov
dec
jns
or
repnz
shrl
ja
jle
addr16
xchg
lock
roll
cmpsb
ja
sub
loop
or
clc
scas
push
xchg
jl
xchg
adc
leave
jnp
fdivl
arpl
cmp
stc
jno
rorl
or
movsb
shll
mov
fistl
inc
adc
iret
lea
cmc
add
cs
stos
push
and
mov
mov
out
cmpsl
pop
fdivl
add
jb
mov
cmp
push
or
ret
int
sub
outsb
jg
mov
incl
sub
push
fwait
mov
iret
je
jnp
push
dec
cmp
les
xchg
aam
insl
ret
and
out
dec
lret
ds
pushf
add
js
inc
insl
popa
add
stc
faddl
push
icebp
lahf
and
leave
cs
sub
repnz
sub
sbb
std
inc
aad
ja
mov
dec
les
mov
sbb
fists
adc
sbb
mov
mov
and
dec
xchg
stos
pop
inc
sbb
push
lcall
adc
pop
adc
pusha
mov
ss
shlb
std
mov
retw
adc
int3
imul
ret
data16
mov
xchg
cmpsl
lock
xor
sbb
loope
scas
jbe
xchg
sahf
sbb
dec
lcall
hlt
xchg
neg
adc
add
sub
outsb
and
sbb
icebp
clc
xchg
cmp
sbb
mov
in
test
jmp
pop
ud0
push
cmp
lds
mov
pop
sbb
jmp
adc
aad
xor
ljmp
insb
mov
arpl
mov
rorb
rclb
push
xchg
jbe
xor
cmc
push
inc
sub
pushf
cmp
ss
xchg
shlb
mov
push
cwtl
fstpt
inc
es
lret
iret
mov
jg
sbb
push
mov
das
out
sbb
add
push
cs
outsb
repz
mov
jge
shl
mov
roll
lock
test
idiv
orl
addr16
call
test
je
push
inc
cpuid
xchg
or
fldl
dec
xor
icebp
into
adc
test
push
add
and
or
and
inc
test
xchg
mov
cmp
pop
sub
pop
mov
mov
leave
mov
jnp
popf
pop
mov
mov
idivb
push
dec
jae
dec
xor
mov
in
cwtl
cld
stos
fsub
call
lods
adc
in
add
jnp
dec
sbb
es
mov
stos
mov
cs
cwtl
adc
add
pop
ss
inc
mov
testl
lock
jns
mov
popl
leave
sahf
dec
inc
push
gs
fsubr
inc
push
lods
jne
inc
dec
xor
push
pop
pop
dec
xchg
dec
lcall
pop
jno
rcrb
lods
ss
xchg
mov
mov
loop
mov
sbb
out
movsl
inc
mov
loopne
je
xchg
push
jge
out
pop
jno
dec
scas
mov
xchg
sbb
jecxz
in
sub
fwait
xchg
test
scas
xor
lret
push
cli
out
ds
jnp
repz
mov
mov
push
mov
sbb
jo
ja
loop
sahf
fistpll
push
xchg
shr
xlat
mov
pop
cltd
daa
sar
decb
add
cmp
pop
lods
xor
cbtw
mov
sbb
jecxz
out
xchg
in
xor
jle
dec
cld
push
sbb
leave
push
lret
out
dec
int
and
ror
cmp
cltd
sbb
or
sub
loopne
cli
call
stos
add
imul
sub
pop
jmp
cwtl
stos
mov
repz
push
testb
std
mov
mov
stc
shl
roll
pop
adc
jg
pusha
decl
push
repz
sbb
adc
cltd
xchg
cmp
cld
int
clc
movb
rcr
fwait
stos
and
xchg
out
pop
sub
imul
bound
std
out
fs
lret
xchg
popf
sub
sbb
jnp
push
add
fimuls
xlat
or
dec
cwtl
adc
sti
add
gs
gs
ljmp
pop
ss
mov
mov
adc
fsubrl
es
push
clc
ss
push
sti
sbb
ds
call
lods
mov
aad
insb
or
imul
cmp
and
cmc
inc
movsl
enter
je
or
imul
divb
inc
mov
pusha
rcr
es
pop
int
inc
shlb
xchg
inc
sbb
xchg
cltd
sub
sbb
fdiv
repnz
mov
repz
lahf
ret
repnz
insl
pop
repnz
int
xchg
int
xchg
xor
rcl
aaa
jb
push
and
pop
sbb
repnz
inc
mov
pop
imul
dec
jg
addr16
mov
xor
out
and
ljmp
loope
jbe,pt
lea
jmp
and
clc
sbb
bnd
jno
cli
pause
and
jmp
data16
adc
sets
pop
mov
pop
add
dec
test
sbb
stos
xchg
mov
ss
shr
xor
sar
push
lods
loop
xchg
add
repnz
fucomip
xchg
cltd
xchg
insl
int3
pop
imul
inc
imul
rorb
loopne
mov
sbb
push
pop
mov
xorb
jl
sub
dec
and
into
jns
dec
cmpsl
push
push
stos
rcrl
mov
stos
mov
in
popl
jb
adc
gs
cmpsl
and
dec
ja
xor
icebp
jle
enter
push
jb
jo
loope
hlt
ret
pop
jae
fs
or
sub
in
pop
lods
mov
mov
notb
push
jbe
scas
push
cs
testb
pop
cmc
fs
into
jl
adc
mov
push
ret
dec
jnp
sbb
inc
jns
divb
out
and
jmp
popf
and
jbe
test
arpl
adc
insb
mov
scas
cmpl
rorl
sub
movsb
ss
mov
jae
adc
aaa
dec
repz
stos
or
ret
xor
add
push
je
mov
mov
daa
push
and
xchg
pop
mov
dec
pop
or
push
cld
mov
sub
dec
mov
cmpsl
testb
jp
cmp
jp
push
xor
mov
mov
outsl
in
lret
jae
inc
movsb
outsb
fimull
xorl
push
insl
mov
call
pop
cld
jns
loop
lret
mov
inc
sub
jmp
pop
pop
and
inc
jg
repnz
ret
enter
or
jnp
cmpsl
mov
add
je
icebp
pop
xlat
jae
jl
lds
sub
js
loopne
imul
movsl
pop
mov
pop
add
iret
test
popf
lret
inc
lret
push
dec
inc
jb
sbb
sarb
js
mov
add
adc
cmp
je
mov
sbb
leave
add
imul
jb
cwtl
xor
pop
jg
into
cmp
loopne
popa
xor
cmp
cmp
jae
fcmovb
loop
add
movsb
cmp
inc
sub
mov
add
aaa
movsb
mov
push
icebp
cltd
inc
ja
mov
insl
mov
xchg
mov
aad
xor
movsl
pop
xor
jle
push
aad
das
mov
inc
cs
or
jno
cli
cwtl
jb
push
xchg
xchg
repnz
loopne
les
fdivr
inc
dec
lods
mov
and
int
xor
mov
xchg
dec
cltd
aam
sub
or
or
adc
ficomps
or
pop
xor
stos
iret
ds
jg
lret
in
ljmp
sub
and
xchg
ljmp
outsl
dec
adc
add
sub
or
lret
bound
and
leave
in
nop
ds
jecxz
divb
xchg
out
inc
mov
addr16
bound
inc
cli
loop
sub
lcall
mov
add
xchg
push
aas
stos
bound
add
xchg
ficompl
push
orl
nop
inc
cmp
aas
repz
stos
push
lods
mov
mov
lret
xor
cmp
into
mov
xchg
lods
mov
gs
mov
icebp
pop
insw
sbb
aam
or
cli
movsb
mov
sub
jnp
lods
cmp
movsl
adc
shll
and
cli
test
sti
andl
out
jbe
fcoms
rolb
push
add
xor
in
fstps
fiaddl
xchg
add
mov
adc
adc
daa
ss
cmp
aam
shll
xchg
ret
je
hlt
call
and
loopne
loope
jl
adc
leave
pushf
adc
cmp
cli
pop
sbb
lahf
ret
or
movsb
hlt
iret
xor
scas
call
fdivrs
sbb
cmc
cmp
jmp
cmp
sarb
loop
adc
push
mov
scas
popf
jmp
fdivr
stos
mov
sbb
mov
sub
and
or
mov
fwait
nop
xor
fisttpl
adc
out
pop
jg
std
shll
cld
addr16
add
lds
bnd
cmp
cmp
cs
jl
mov
jo
and
shll
sbb
xlat
sub
data16
hlt
push
out
and
push
lcall
fists
adcl
lahf
sub
sub
jo
lds
push
int3
test
ds
xchg
fiadds
jo
mov
add
clc
cli
out
inc
pop
movsb
xchg
and
loop
sbb
es
in
mov
mov
jae
dec
pop
push
sbb
xlat
movsl
out
into
adc
je
imul
mov
sub
lds
jle
js
cmp
xchg
and
xchg
fadds
cmp
adc
add
leave
dec
in
pop
pusha
les
fdivs
push
fistl
mov
scas
lahf
or
loopne
jge
mov
dec
sbb
xchg
stos
xor
sub
ret
aam
mov
test
fbstp
int3
popf
pop
dec
pop
add
imul
scas
mov
sbb
lock
inc
scas
lcall
xorl
ja
or
jecxz
mov
stos
mov
in
xchg
push
inc
push
cmovge
jne
imull
cmp
jl
cmp
jae
arpl
leave
adc
inc
pop
jle
dec
scas
inc
loope
jmp
fimuls
xlat
jle
mov
mov
push
mov
cli
cmp
test
lds
outsl
movsl
mov
test
leave
mov
push
das
jb
sahf
js
mov
adc
hlt
sbb
or
pop
lret
inc
xor
lods
dec
sub
xchg
movsb
cmp
test
fnsave
in
movsb
lds
pop
add
sahf
ss
mulb
push
std
inc
ss
or
js
stos
dec
pop
stc
or
rcrb
or
or
mov
xor
stos
lock
push
in
cmp
sti
sahf
xchg
add
inc
test
loopne
pop
imul
mov
cmp
mov
jae
dec
je
js
dec
add
pop
push
mov
sarb
lret
enter
fsubl
pusha
imul
loopne
sub
inc
cmp
push
or
outsl
jae
in
xor
sti
or
mov
fnstsw
jmp
fs
int
imull
sbb
push
enter
ss
je
inc
inc
das
fs
pop
sbb
inc
xor
es
push
insb
repz
stos
in
or
lods
xor
dec
dec
xchg
inc
mov
xchg
mov
icebp
jg
fbld
push
insb
xor
ret
imul
ds
mov
mov
gs
mov
shrb
mov
sti
sub
nop
pop
mov
sub
shrl
mov
push
ja
lcall
loop
dec
dec
rclb
cmp
fimuls
dec
dec
mov
and
lea
xchg
dec
mov
xchg
pop
test
xchg
adc
sub
mov
test
ja
mov
jb
xchg
rcrb
mov
mov
popa
inc
daa
jecxz
in
pusha
mov
popf
std
repnz
repz
sbb
add
jo
inc
outsl
and
or
pushf
dec
cmp
fs
imul
push
outsb
push
in
fdivr
pop
mov
cmp
mov
test
pusha
mov
loop
sbb
sbb
sub
imul
mov
xchg
leave
add
cmp
push
inc
outsl
leave
shll
add
repz
push
cmp
cmp
sub
and
and
lods
lds
imul
aas
adc
xchg
adc
rcrl
push
and
xor
stc
lds
adc
jns
or
cmp
push
mov
aam
stos
sbb
lret
sbb
mov
sbb
out
imul
es
cmpsb
add
push
pop
ficoml
addr16
shll
dec
or
movsl
les
test
call
mov
imul
fwait
mov
sbb
xchg
xor
jp
lods
or
jnp
pop
arpl
lea
clc
jb
sub
xor
push
shrl
in
add
frstor
es
ss
mov
insl
push
lods
mov
push
jl
push
and
mov
or
loope
jae
jo
loope
je
jle
sbb
add
push
push
adc
cs
fisubrl
xor
and
xchg
sub
xchg
gs
mov
or
outsb
and
test
xchg
push
add
dec
push
push
dec
jae
movsl
jno
pop
push
insl
dec
in
popf
sub
and
ret
push
mov
xchg
mov
movsb
sti
mov
into
test
mov
mov
push
dec
ret
cli
jb
out
out
pushf
and
dec
adc
pop
scas
lds
loope
loopne
lods
mov
sub
je
cmpsl
test
dec
add
mov
popf
push
jmp
ljmp
dec
cwtl
jmp
and
andl
add
icebp
pusha
pop
fstpl
notl
ret
push
xchg
add
mov
leave
sbb
mov
roll
lods
aas
pop
jb
mov
aam
cmp
lret
cltd
mov
hlt
movl
cmpsb
adc
cmpsb
pop
add
aam
test
pop
xor
pop
int3
cmc
xchg
or
mov
mov
pop
rclb
mov
fcompl
inc
pop
lds
add
xchg
aam
sub
adc
cmpsb
lret
cltd
dec
test
pop
sbb
idivl
rorl
sbb
jae
push
in
mov
call
es
aas
out
lahf
pusha
xchg
xchg
pop
cmp
inc
bound
push
pop
push
sbb
push
cmp
xchg
xor
lahf
adcb
pop
mov
push
mov
cmp
mov
sbb
mov
cs
lock
dec
test
cmp
lahf
stc
into
pop
sbb
lods
xor
andb
pop
push
sbb
std
test
push
lods
ficompl
popf
fisubl
inc
arpl
fwait
roll
cmc
rolb
ljmp
mov
and
imul
xchg
xchg
fdivrl
xorb
js
and
xor
dec
or
mov
pop
xchg
push
popa
filds
jge
out
mov
aam
and
mov
xor
mov
das
cli
push
dec
push
jge
bound
inc
jmp
pop
fsts
fdivrs
cli
or
cmp
cmp
cmp
add
sarb
arpl
fsubrs
std
dec
insl
mov
lds
jae
mov
push
imul
xor
jle
imul
add
push
mov
mov
scas
xlat
test
int3
or
lods
mov
fwait
jg
xor
jmp
mov
or
push
add
sub
pop
and
or
inc
cmp
pushf
jne
inc
mull
sub
cmp
loopne
mov
and
into
mov
cwtl
sbb
ds
jp
roll
ret
inc
mov
mov
vaddps
cltd
in
xor
rcr
popf
call
mov
xchg
lret
shll
push
mov
ljmp
fs
fdivs
js
scas
aaa
or
mov
sub
std
fisttpl
shll
xor
mov
xchg
movsb
mov
outsb
adc
add
je
mov
and
or
sub
int
movsl
jecxz
inc
pop
mov
fs
inc
sbb
dec
push
mov
pop
dec
pop
cmp
pop
icebp
adc
mov
jmp
add
add
rolb
lcall
int3
int3
push
or
shl
xorl
fmuls
mov
xlat
and
jb
movsl
cmp
fwait
mov
fstps
les
rcll
stc
out
loopne
mov
add
mov
add
lcall
inc
lds
js
clc
lods
sub
add
push
pop
push
test
sahf
aad
pushf
fsubl
lret
jnp
jb
pusha
icebp
test
jle
into
int
or
push
xchg
enter
jnp
pop
adc
inc
into
inc
bound
sbb
fildl
mov
out
pop
in
sub
icebp
push
lds
in
sub
imul
lea
inc
popaw
jnp
add
out
sarb
rcr
loope
dec
push
aaa
jns
int3
sbb
aad
fistpll
add
ljmp
loopne
mov
jg
mov
in
int3
sahf
xor
or
mov
sub
mov
xor
in
lods
cmp
xor
test
add
push
imul
jbe
jg
mov
adc
or
icebp
imul
mov
pop
outsl
adc
pop
in
orb
jl
ja
imul
repz
fldl
scas
push
cmc
adc
dec
add
pop
pop
sub
mov
or
fcom
jle
adc
mov
add
rclb
inc
in
jae
lods
jmp
out
push
cld
push
leave
or
mov
pop
fldpi
or
jmp
movsl
push
sub
jnp
std
rcr
xlat
or
adc
and
dec
mov
pop
or
jae
insl
push
mov
dec
dec
imul
or
loop
nop
imul
or
mov
or
jbe
dec
sti
sub
cmp
jle
push
insl
pop
jp
sbb
xor
sbb
mov
dec
or
push
pusha
pop
repz
jbe
fimuls
roll
lret
outsl
sbb
pop
sbb
sbb
cmc
test
xor
fwait
test
testl
insb
and
jne
testb
icebp
mov
outsl
sbb
add
pop
mov
xor
xor
push
pop
pushf
xchg
pop
mov
cld
cmp
leave
push
movsb
out
test
pusha
lea
repz
insb
xchg
in
repnz
mov
les
or
mov
sti
ret
lock
cmpsb
push
add
rcr
out
test
and
fsubrl
lret
mov
nop
dec
stc
pop
fnstcw
icebp
jb
adc
aam
test
mov
cmp
and
xchg
imul
adc
jns
out
adc
outsl
pop
add
movsb
les
je
cmpsl
mov
gs
pushf
mull
cmp
jmp
xchg
fadds
xchg
inc
ja
iret
mov
iret
inc
push
ljmp
sti
mov
and
scas
sbb
lea
push
inc
fwait
test
xchg
xor
mov
ljmp
ss
xor
nop
cs
lahf
mov
js
cltd
mov
dec
sahf
mov
int
or
sub
cmp
mov
sub
gs
and
loopne,pn
jne
frndint
pop
fnsave
adc
or
sub
dec
add
sub
arpl
sbb
push
fcmove
mov
icebp
and
cmp
adc
mov
push
jne
jne
rorl
or
mov
adc
out
jmp
xor
daa
call
pop
mov
pop
dec
les
jmp
inc
or
out
mov
test
mov
pop
mov
js
dec
iret
scas
ja
js
mov
ret
adc
ljmp
pop
pop
shl
fs
push
aam
or
and
inc
jae
daa
or
dec
fcoml
xor
fiadds
ret
sbb
and
xor
test
ljmp
les
pop
xchg
in
add
xchg
fadds
adc
cmp
and
out
movsl
nop
jecxz
xchg
pusha
insl
jae
stos
xor
pop
pusha
sbb
push
jge
ljmp
inc
sub
cmp
aas
jnp
or
stos
sub
hlt
call
mov
in
mov
imul
mov
dec
jge
mov
mov
push
sbb
mov
pop
sbb
popa
inc
sub
xlat
mov
mov
push
lods
clc
jo
sub
rcrl
cld
movsb
mov
rcl
mov
push
jge
mov
and
xchg
out
push
fimull
cmpsl
pop
movsb
aas
mov
add
in
jl,pn
jb
addr16
repz
sahf
jl
or
jmp
cs
lahf
inc
cmc
cli
arpl
inc
lock
xchg
mov
shl
xor
jle
xor
dec
adc
movsl
dec
sub
ljmp
in
sarl
mov
cmp
int
xchg
testb
mov
or
pop
mov
mov
sub
xchg
add
cld
out
mov
in
xchg
jecxz
mov
lods
pop
xchg
cmp
mov
int3
mov
sub
cltd
mov
add
cmp
xor
inc
es
pushf
dec
and
scas
int3
aam
push
mov
repnz
mov
je
test
call
push
and
int
push
xor
add
dec
adc
cwtl
test
jg
in
mov
cmpsb
js
jp
popa
mov
movsl
adc
sahf
pusha
pop
stc
int
scas
push
aad
std
pop
sahf
js
leave
int3
addr16
sub
push
jae
pop
add
loop
or
mov
jae
fldcw
xchg
mov
jmp
rcll
push
push
inc
jae
pop
xchg
jg
push
mov
fucomip
and
xchg
stc
sbb
or
enter
mov
mov
div
ja
and
dec
jae
mov
xor
pop
loopne
push
xor
in
mov
gs
lcall
mov
mov
inc
jns
cmpsl
xchg
add
mov
jnp
xchg
outsl
lcall
es
add
aas
aas
shr
lret
xchg
daa
pop
mov
xchg
out
ds
dec
push
jno
sub
xchg
fistl
cmp
scas
or
imulb
cmp
xchg
or
inc
mov
out
and
push
les
pop
add
mov
mov
mov
cmp
dec
sbb
fwait
cmpsb
xchg
xor
in
mov
pop
sbb
and
xchg
mov
pusha
out
fs
and
enter
cmp
or
or
roll
push
xchg
mov
insl
addr16
out
in
or
push
add
sbb
das
pop
jle
xlat
cmp
or
mulb
pop
xchg
xor
jmp
and
cmp
and
addr16
mov
add
icebp
cmp
jg
in
out
mov
arpl
mov
int3
insb
fisubl
jae
push
add
mov
jmp
bound
inc
cmp
adc
aam
insb
incb
dec
pop
and
rol
stos
pop
call
fisubrs
out
leave
or
aad
pop
orb
addl
or
inc
bound
cmp
insl
jbe
ds
loopne
xchg
mov
inc
or
subb
xchg
stos
repz
sets
xlat
subl
hlt
adcl
inc
cld
stc
fdivr
sbb
mov
xlat
jno
sbb
mov
push
sub
mov
cmc
mov
push
mov
enter
and
out
push
mov
btr
sbb
inc
cmpsb
stc
repz
into
shll
push
lcall
mov
movsb
push
pop
xchg
fisttpl
std
inc
inc
adc
sub
dec
add
cs
and
test
pop
hlt
pop
movsb
xor
jmp
lret
movsb
sub
mov
dec
add
xor
adc
test
and
lods
fs
add
mov
xor
popl
bound
sub
xor
data16
out
mov
repnz
rcr
push
stc
dec
jge
mov
jno
loope
ret
out
pop
scas
cmc
mov
pop
mov
rcl
xor
ror
adcl
mov
push
mov
dec
lods
sbb
rep
lahf
clc
or
es
add
pop
aam
out
push
adc
cli
pushf
mov
cmp
sub
mov
mov
lcall
out
shrl
jno
mov
mov
shl
mov
push
mov
aaa
mov
scas
cld
out
fsubrs
add
leave
sti
sbb
fidivrl
arpl
jle
js
mov
aam
cltd
jbe
jg
mov
xchg
push
pop
arpl
insb
and
mov
mov
js
inc
xchg
sbb
push
movsl
add
enter
arpl
add
loop
out
mov
or
push
lds
pop
cmp
xchg
mov
std
pop
xchg
std
mov
clc
sub
xlat
mov
dec
sub
stc
loop
xor
inc
pop
in
cmpsb
fsubl
stos
std
sbb
push
cmp
in
cmp
push
fcomps
aaa
out
dec
pushf
dec
insb
mov
add
mov
stc
cmp
loop
xchg
les
xlat
lods
in
fbstp
mov
fs
scas
or
stos
inc
fiaddl
das
rcr
out
push
sbb
cmp
add
dec
adcl
ret
mov
cmc
mov
push
lcall
pop
mov
mov
ret
jp
cmpsb
xchg
cmpsl
jp
jg
push
clc
gs
sub
aas
loop
lods
jno
jnp
int
jae
cltd
in
mov
popa
aas
inc
inc
push
mov
push
popf
mov
mov
inc
enter
lods
lret
aaa
idivb
mov
test
lcall
rol
dec
mov
jns
test
scas
push
cmp
shrb
outsb
mov
ja
push
push
dec
mov
or
jne
inc
and
outsl
xchg
loop
add
add
jl
add
cmpsb
xor
loop
dec
dec
lea
sub
add
adc
ret
xchg
lret
mov
xor
int
mov
icebp
mov
xchg
out
not
xor
stos
cmp
dec
xor
movsb
ds
aad
mov
popf
out
jmp
aas
add
adc
mov
add
cmp
xchg
jg
sbb
and
test
mov
dec
movsl
test
mov
xchg
or
fdivl
jmp
movsb
lcall
add
sti
cmpsb
xor
adc
in
dec
or
mov
mov
adc
clc
sub
fimuls
dec
mov
mov
inc
or
daa
mov
push
out
mov
pushf
ret
icebp
jle
clc
scas
xchg
out
call
in
les
movsl
lret
clc
sbb
inc
jns
inc
or
push
adc
out
lahf
inc
loope
sub
test
ja
stos
nop
push
adc
xchg
mov
cmp
and
aas
dec
or
cmp
insl
jo
lret
fcomp
repz
mov
rcll
mov
lret
pop
pop
push
mov
dec
fistps
js
push
imul
xor
mov
jns
and
jmp
cld
jbe
fldenv
ja
pop
dec
out
mov
out
fcoml
stc
add
imul
sub
and
push
gs
test
xchg
xor
jb
jne
and
aaa
pop
fmulp
scas
xlat
das
je
push
fstpt
mov
movsl
mov
std
aaa
lods
push
xchg
repz
aas
outsb
idivl
dec
maxps
jbe
mov
mov
add
mov
dec
xchg
test
sub
and
jmp
sub
leave
ja
pop
pop
stos
push
out
les
push
xchg
cmp
sbb
arpl
loop
das
mov
insl
mov
aas
push
int3
xchg
lret
mov
inc
and
xlat
gs
fdivr
jae
pop
jns
out
jg
pop
push
pop
mov
sbb
sbb
sbb
sbb
xchg
inc
pop
daa
xor
adc
ljmp
pop
insb
or
xor
push
in
stos
test
pop
xchg
push
cltd
pop
andb
aam
push
jo
mov
js
enter
jo
sti
pop
mov
mov
into
lahf
in
adc
jno
aam
dec
pop
es
inc
out
std
sub
ret
jb
pushf
ja
sub
jns
sub
cmp
sahf
aad
xchg
nop
sahf
inc
dec
dec
data16
stc
xor
int
dec
imul
xor
sbb
sbb
jne
pushf
pop
mov
jnp
lcall
mov
cmp
lods
pop
cmpsl
aaa
bound
jne
inc
pop
or
lock
cmp
sbb
push
out
cmpsb
int
sti
push
jo
test
mov
jns
dec
jmp
clc
jae
xor
shlb
or
mov
pop
sub
jg
mov
test
mov
mov
scas
jl
std
push
rcrl
pushf
push
inc
mov
js
pop
pop
xchg
push
cmc
sbb
jb
ss
pop
je
orl
imull
fucomi
sub
cwtl
cmp
jecxz
lahf
enter
out
mov
cmp
mov
push
pop
or
sbb
xchg
push
mov
dec
mov
out
jl
xlat
and
mov
xchg
sbb
out
jnp
add
jno
sahf
movsb
fisttpl
jmp
sbb
cs
in
ljmp
popf
pop
sub
jb
in
leave
stos
jg
scas
popf
push
cmp
mov
mov
inc
int3
imul
xchg
inc
mov
iret
daa
xor
or
idivb
rol
cli
sub
mov
les
arpl
ja
jmp
adc
sbb
in
arpl
cld
add
xchg
movsl
mov
aam
cmp
lock
fldenv
int3
fwait
call
popa
inc
aaa
movsb
mov
adc
sub
sbb
decl
push
enter
xchg
loop
cli
dec
dec
jl
adc
pusha
sbb
pop
add
fidivs
xchg
xchg
or
out
mov
fwait
cmp
out
mov
push
pop
ret
sbb
jp
push
shll
and
sbb
and
pop
into
icebp
sub
or
sti
notl
cltd
loope
pushf
mov
out
loop
out
lret
decl
les
dec
push
jns
ret
xorl
and
test
enterw
pop
sar
sbb
push
mov
jnp
testl
jl
add
jns
mov
inc
pop
movsb
and
pop
in
movsl
push
jno
jae
and
cwtl
fists
jl
dec
xchg
mov
daa
scas
scas
pop
jns
pop
xor
xchg
and
mov
or
pop
add
out
fidivl
cmp
outsl
inc
subb
js
xor
mov
push
dec
hlt
lahf
out
cmp
shl
arpl
data16
sti
pop
out
int3
and
cmpsl
in
jbe
ja
fisubrl
lds
lods
jbe
test
dec
aam
adc
js
ficomps
cwtl
jmp
mov
xchg
mov
push
enter
outsl
gs
scas
add
mov
push
in
pop
rcll
ret
repnz
lods
jmp
sahf
push
and
ret
gs
popa
adc
int3
repnz
inc
inc
cmp
xchg
fldl
mov
and
outsl
iret
jmp
out
or
clc
or
insb
jno
js
dec
push
or
adc
icebp
ds
add
cmpsl
loopne
out
aas
push
push
xor
ds
xorb
dec
mov
pop
rol
add
or
sub
adcl
fbld
shl
jge
add
add
mov
movsl
push
mov
je
cmpsl
out
cmp
pop
add
pusha
cmp
loopne
lods
push
cltd
pushf
cwtl
pop
lea
loopne
mov
cmp
ret
dec
xor
adc
sbb
test
jnp
outsb
dec
pop
loope
test
cmp
fists
test
dec
cmp
sub
in
movsl
jno
dec
in
in
clc
fs
in
aad
mov
test
push
sbb
cmpsb
insb
fimuls
adc
mov
adc
add
call
sub
jnp
jnp
jbe
rcll
and
jp
lret
and
sub
repz
jmp
sub
shlb
je
fisubs
test
icebp
inc
loopne
xchg
mov
xor
pop
mov
mov
dec
add
add
ljmp
fstpt
nop
jmp
aaa
fstpt
sbb
insb
dec
and
mov
adc
ret
into
stos
adc
mov
jge
mov
enter
out
sbb
enter
jecxz
adc
rcrl
cs
sbb
fwait
andl
dec
stc
mov
hlt
test
imul
xor
cltd
repnz
cltd
cmc
shlb
movsl
shlb
mov
movsl
push
hlt
jp
dec
adc
and
ljmp
das
or
lret
mov
cmc
out
mov
call
cmp
js
mov
testb
pop
jbe
ja
xchg
inc
rcl
sarb
ficomps
adc
les
data16
inc
sub
jge
addr16
push
lret
inc
xor
scas
mov
or
lock
imul
or
shlb
neg
in
mov
outsb
mov
orl
push
ret
scas
add
out
push
mov
in
fldcw
insl
imull
out
push
push
loope
mov
or
inc
int3
outsl
mov
push
mov
jmp
addl
aas
push
cmp
repz
imul
jae
mov
pop
cmp
pop
inc
xor
xchg
or
add
enter
add
cs
dec
ss
jne
ficoml
enter
sbb
iret
sbb
divb
xchg
mov
inc
sahf
stos
fisubrs
pop
push
mov
fnstsw
xchg
or
push
adc
and
push
repz
insl
movsl
cld
xchg
dec
inc
gs
mov
mov
and
mov
pop
test
mov
dec
mov
jnp
xchg
add
in
leave
stos
cli
dec
push
mov
repnz
aam
mov
outsl
xchg
mov
cmc
fdivrs
or
inc
mov
iret
pop
or
mov
sub
sahf
inc
jl
ja
fwait
aas
repz
push
lock
xor
cmp
pop
aaa
orb
into
cmpsl
jo
cwtl
sub
sub
sbb
mov
pop
test
out
and
imul
mov
sbb
lods
pop
sbbl
sub
xorl
fnsave
and
pop
movsl
sbb
clc
test
ss
add
mov
cmp
out
adc
stos
and
and
add
test
lret
jp
mov
push
outsb
mov
stc
cmpsb
rclb
push
int3
aam
add
icebp
sbbb
and
dec
cmc
mov
mov
test
insl
nop
cmovnp
add
xor
insb
dec
not
mov
loop
in
xor
dec
mov
mov
push
jecxz
sub
mov
ds
movsb
gs
sbb
inc
jne
jmp
cmp
or
sahf
testb
mov
or
xchg
call
ds
add
out
nop
je
out
sbb
xchg
cwtl
out
cmp
imul
pusha
add
ljmp
fbstp
lea
rclb
bound
inc
fidivrl
daa
clc
sub
or
mov
pop
adc
mov
mov
cmp
test
mov
pop
int3
into
ret
push
aad
mov
dec
loop
pop
outsb
push
pop
xchg
bound
and
arpl
push
cwtl
adc
inc
mov
and
cmc
mov
jle
fs
jne
mov
xor
sbb
xchg
pop
mov
or
mov
mov
dec
out
inc
les
xor
xlat
xchg
movsb
test
cmp
call
test
xchg
in
movsl
test
mov
pop
mov
bound
and
inc
cmp
frstor
jae
and
sbb
shr
sub
lahf
or
pusha
or
lock
jnp
adc
add
subl
mov
dec
mov
sub
push
hlt
clc
aaa
movb
jg
ret
inc
fdivrs
lcall
xor
cmp
ss
mov
pop
dec
adc
inc
jg
push
lods
insl
flds
push
jb
jb
pop
mov
jns
push
movaps
lea
dec
dec
inc
adc
jp
add
sbb
mov
stos
lods
rolb
fidivrs
mov
xor
pop
mov
hlt
loope
mov
rcrl
std
cmpsl
push
xor
xor
push
mov
pop
lahf
decb
mov
xor
sub
or
dec
aam
mov
mov
call
out
loop
fwait
mov
push
jp
inc
push
xor
jge
lds
in
cmc
sbb
inc
mov
push
pop
loop
push
mov
dec
push
mov
adc
or
xchg
mov
mov
pop
je
sbb
stos
push
fimull
mov
sub
fisubrl
dec
dec
fidivrs
fwait
xor
sub
out
jmp
mov
xor
jg
loop
mov
mov
lds
or
lea
mov
fiadds
jg
dec
sbb
jae
mov
pop
sbb
mov
ja
jge
cltd
aaa
xor
popf
dec
jb
push
xor
mov
in
outsb
dec
dec
jmp
bound
xor
and
push
mov
xchg
jae
jle
xor
repz
lahf
add
fstl
fimuls
dec
testl
div
or
xor
push
sub
gs
lock
jmp
mov
or
clc
in
xchg
sbb
cmp
xor
pop
inc
out
jmp
xlat
mov
pop
out
lods
mov
pop
and
and
sti
pop
adc
movsl
mov
mov
and
add
call
pop
jnp
cmp
addl
xchg
jmp
mov
sub
dec
jbe
mov
fcomps
and
adc
or
div
xor
and
faddp
mov
xchg
and
pop
fcmovbe
pop
out
mov
test
xchg
push
jl
lret
lret
out
inc
out
shrb
mov
inc
and
pop
test
push
push
pop
insb
cmp
ds
clc
daa
mov
jmp
or
verw
xchg
jne
ret
fimuls
iret
test
shlb
out
add
sub
mov
push
loope
inc
dec
lea
xchg
arpl
mov
push
or
popf
sub
roll
out
xchg
out
ret
push
jmp
or
sbb
push
jmp
lahf
call
mov
adc
xor
pop
ret
mov
xor
add
movsl
xchg
xor
imul
lcall
ret
out
cmp
xchg
or
xchg
push
xchg
xor
xchg
in
rol
popa
adc
cld
arpl
ljmp
pop
imul
outsb
pop
sbb
in
adc
popa
ljmp
sub
daa
mov
pop
test
mov
pop
xchg
pop
fsubrl
outsl
mov
fwait
aad
cmp
setle
cli
call
das
pop
inc
mov
pop
lds
sbb
mov
subb
mov
mov
adc
and
adc
out
les
or
outsl
mov
cmpsb
mov
popl
dec
orl
xor
sbb
aad
cmp
mov
in
xor
sbb
cmp
xchg
hlt
cmc
sub
orb
push
lds
fsubrp
mov
jg
cmp
lahf
push
push
addr16
bnd
xor
dec
fdivrl
orl
jo
jge
mov
dec
cmp
cmp
pop
add
idivb
xchg
adc
xor
mov
or
cmp
int
addl
mov
aad
xor
inc
ss
stos
inc
xlat
ret
mov
loopne
sbb
push
cltd
hlt
and
call
in
dec
sub
in
xchg
outsb
pop
add
adc
xchg
xchg
std
mov
jo
clc
gs
xor
mov
iret
repz
in
insb
lret
cs
dec
mov
mov
and
pusha
dec
in
sbb
hlt
jbe
sub
test
add
cmp
lret
mov
loop
adc
out
and
jmp
push
fsts
cmpsb
mov
mov
movb
std
cmp
ret
mov
xchg
mov
arpl
cmc
cwtl
std
pusha
out
inc
jmp
sbb
xchg
jo
bound
adc
sub
mov
aaa
cmp
pop
out
or
or
movsb
cld
cmp
lods
addb
add
aad
dec
mov
xor
in
mov
dec
jb
pushf
stos
pop
or
call
jmp
cs
xchg
lahf
je
mov
push
aad
and
xor
mov
pop
xor
repnz
aas
mov
sub
xchg
leave
lods
mov
das
fnstsw
push
mov
mov
loopne
frstor
js
sub
pop
scas
push
lret
shll
sahf
stos
mov
dec
jo
sbb
hlt
cltd
push
sbb
lahf
mov
or
shll
rcll
aaa
inc
mov
mov
pop
insb
push
cmp
xchg
es
fisubl
ret
xor
popa
xchg
push
cwtl
clc
inc
dec
mov
sub
mov
lods
stos
mov
je
mov
mov
in
push
imul
enter
in
mov
mov
cmp
or
push
mov
ss
test
mov
lds
pop
shr
ficoms
hlt
mov
and
cltd
inc
or
lret
sub
jg
pop
outsb
enter
mov
xchg
push
out
lds
out
lds
enter
and
push
icebp
fistl
push
bound
mov
push
mov
pop
mov
fucomip
push
mov
shll
imul
sbb
lock
sbb
lds
test
add
cmpl
pop
pop
cmp
notb
add
pop
fnstenv
insl
cwtl
mov
ss
push
bound
sub
dec
scas
mov
sub
add
or
imul
icebp
jl
ret
gs
aam
jmp
sub
mov
sub
loope
adc
sub
and
xchg
insb
pop
in
bnd
xchg
jne
decl
rol
cld
push
test
sub
inc
and
jl
setge
js
outsl
xchg
shll
mov
xchg
mov
push
jb
iret
pop
data16
mov
jecxz
int
dec
and
sbb
pop
pop
pop
inc
cmpl
aaa
rorl
add
les
inc
pop
imulb
aad
les
mov
loop
cmpsl
jecxz
mov
aas
jmp
adc
sbb
iret
cmp
or
xchg
push
fs
subb
ret
iret
sub
imul
fdivrs
repz
out
mov
jo
push
dec
dec
and
jnp
jbe
pushf
xor
dec
xor
lea
andb
icebp
and
std
loopne
xchg
mov
out
das
std
mov
push
xor
xor
repnz
icebp
lret
push
insb
adcl
test
xchg
add
das
insb
inc
push
sub
mov
shlb
mov
inc
rcrb
cwtl
adc
into
movsb
aam
inc
sahf
out
out
leave
shlb
mov
out
hlt
das
inc
pop
rclb
insb
sbb
push
cltd
pop
pop
dec
arpl
xchg
and
outsb
inc
bound
jecxz
dec
adc
loop
push
dec
frstor
jmp
mov
pminsw
das
jbe,pt
push
pop
fwait
jge
rorl
sahf
mov
inc
popa
js
push
cmpsb
out
daa
fs
xchg
orl
add
jle
jmp
sbbl
xchg
sbb
jo
add
out
push
mov
hlt
sbb
imul
stc
arpl
or
cmp
into
popa
or
icebp
adc
sti
mov
data16
andl
int3
and
gs
arpl
and
dec
xor
mov
mov
dec
cmpsb
pop
jo
mov
lcall
stos
scas
mov
sti
jp,pt
inc
scas
pop
mov
addl
popw
mov
cltd
inc
movb
adc
jmp
out
out
negb
xchg
jb
mov
pop
push
movsb
fimuls
movsb
dec
int
addr16
fisubl
inc
sbb
out
popl
jo
arpl
xchg
jge
or
shlb
or
imul
xor
addr16
xor
in
or
add
xchg
inc
aad
sub
insl
jae
out
jg
mov
mov
mov
repz
lea
or
les
gs
or
fsub
push
je
mov
sar
jge
sti
cmp
cmp
add
mov
jns
nop
cmpsl
inc
inc
and
or
inc
push
insb
mov
push
aam
lock
repnz
sbb
jp
push
mov
pop
cmp
jb
push
clc
cs
in
mov
dec
aad
cmp
cmp
sbb
stos
pop
or
cmp
das
nop
and
cmpsb
fidivs
cli
cmc
cmp
fnstsw
or
or
mov
push
imul
arpl
mov
inc
icebp
inc
jns
fdivrs
fistl
mov
xchg
cmpsl
mov
decl
mov
dec
mov
dec
pop
rcrl
fs
insl
cmc
cmpl
loop
lret
or
cmc
mov
push
xchg
add
dec
jae
test
xlat
cmp
sbb
inc
sbb
mov
adc
cmp
jae
es
inc
and
pop
in
cmpsl
lcall
test
hlt
sub
cwtl
add
jmp
mov
jae
icebp
jecxz
xchg
push
dec
scas
fadds
lods
insb
jnp
xchg
fimuls
movsl
call
arpl
adc
popl
flds
ds
in
lret
dec
or
pop
jne
xor
mov
test
sbb
test
insl
sahf
sub
pop
mov
aaa
or
jne
or
inc
pop
mov
pop
push
add
arpl
je
stos
decb
mov
adc
mov
out
push
fadd
mov
mov
mov
sbb
xor
dec
adc
inc
jmp
ficompl
sbb
bound
fcompl
sti
jecxz
lods
push
cli
pop
and
lcall
adc
mov
mov
adc
add
test
and
daa
rcrb
dec
add
test
inc
inc
fldt
push
stos
jmp
push
mov
aam
mov
lret
add
jno
cmc
sbb
xchg
xor
inc
mov
popa
mov
repnz
lea
decl
lock
or
or
adc
dec
stos
bound
sbb
int3
aas
scas
fsub
inc
push
and
insb
pop
push
lcall
inc
insl
and
loop
sub
out
pop
push
or
bnd
dec
ret
inc
sub
das
cmc
negl
jge
sahf
jo
mov
mov
lret
add
lods
lcall
out
add
push
dec
jb
ds
mov
sahf
cmp
pop
loope
xchg
test
mov
outsl
cmp
dec
lods
mov
mov
push
fmull
xor
mov
in
std
push
cmp
rcll
ss
inc
and
data16
add
mov
pop
lock
bound
mov
sahf
inc
mov
rol
jno
stos
lcall
sti
gs
jmp
in
imul
out
dec
xchg
or
add
cli
daa
rcll
sahf
lret
call
xor
pop
ljmp
ljmp
ret
jo
mov
movsl
mov
xchg
inc
mov
daa
pop
gs
push
pop
jle
scas
popf
inc
das
outsb
cmp
sti
sub
mov
dec
sbb
je
daa
push
add
push
inc
and
mov
jb
add
pop
xor
pop
jns
and
into
roll
out
insl
add
sub
add
inc
stos
push
addl
xchg
mov
mov
ja
mov
add
outsb
popf
mov
pop
ret
and
out
mov
inc
xchg
jmp
stos
or
or
outsb
pop
jle
lods
subl
int
mov
les
xlat
test
fidivrl
shl
and
or
div
fistpll
dec
mov
cltd
xchg
popf
push
mov
sbb
outsb
and
mov
fildll
add
sti
or
inc
mov
mov
inc
pop
mov
xchg
enter
int3
getsec
sbb
or
cmp
cmp
xor
mov
lds
dec
in
aaa
xchg
ret
mov
roll
ret
rclb
and
jg
fcmovnbe
cmp
dec
pop
push
jbe
std
aad
or
cwtl
adc
mov
add
scas
test
stc
inc
pop
icebp
aas
mov
mov
dec
int3
in
pop
jle
adc
dec
out
and
imul
xchg
subb
push
test
adc
outsb
xor
push
sbb
pop
mov
jnp
divl
in
sbb
push
sbb
fsubs
jp
nop
movsl
jae
xchg
jmp
dec
daa
sbb
sbb
arpl
fsubrl
dec
clc
ja
xchg
daa
popa
sbb
ljmp
loope
jecxz
push
push
dec
sbb
inc
inc
jg
pusha
sub
out
mov
aas
aad
insl
clc
jno
or
lret
pop
adc
arpl
repnz
repz
inc
ss
mov
adc
mov
lret
out
sahf
aas
fisubrs
mov
push
mov
sbb
aam
daa
xchg
dec
cli
test
insl
sbb
int3
mov
xchg
imul
xchg
fsubrs
mov
xor
popf
bound
xchg
cwtl
test
insb
dec
inc
xor
fucomi
shlb
and
mov
out
ffreep
lret
push
jp
into
stc
and
nop
cmpsl
xchg
idivb
es
dec
loope
jnp
adc
out
das
loop
push
loopne
mov
pop
pop
lods
ss
sub
cmp
or
aas
test
push
iret
inc
mov
adc
xor
mov
inc
jns
gs
cmp
les
pop
sbb
fs
mov
jmp
cmp
add
or
fcomps
lds
fisttpll
testl
cltd
pop
das
pop
mov
inc
scas
jnp
jmp
xchg
cmp
adc
inc
inc
aas
pop
push
fdivrl
out
je
out
xchg
push
fnstsw
insb
and
dec
hlt
fildl
sub
pop
mov
jecxz
js
ja
aaa
sbb
rcrl
mov
std
dec
punpcklwd
jge
dec
mov
and
and
cltd
outsl
push
and
insl
out
sub
push
pop
repnz
mov
imul
xor
add
pop
cmpsb
xchg
sub
jmp
cld
jo
icebp
mov
mov
xchg
add
push
mov
jl
push
jge
inc
inc
fmull
dec
adc
in
inc
outsl
push
or
es
xor
sub
dec
push
out
lahf
dec
adc
mov
adc
push
adc
xor
fdivl
aad
jg
mov
cwtl
push
xchg
leave
mov
xor
push
xchg
add
and
mov
imul
test
negl
inc
jnp
lret
lcall
movsl
daa
pop
aad
bnd
adc
out
cmpsl
pop
std
pop
ror
xor
insl
mov
xchg
stos
inc
mov
test
or
mov
sahf
call
clc
lock
les
pusha
test
lock
cwtl
sahf
dec
xchg
add
dec
xchg
xchg
lret
lcall
cmp
and
dec
inc
fadd
cltd
dec
and
add
add
cld
shrl
mov
mov
mov
inc
and
mov
enter
jge
ret
cmpsb
xor
mov
pop
ret
push
add
lods
aas
adc
jmp
and
in
insl
inc
mov
hlt
sub
push
mov
mov
js
ret
lods
xor
out
out
std
mov
inc
inc
addr16
outsl
bound
jae
pop
lods
mov
mov
xchg
popa
add
mov
lods
stos
xchg
jl
enter
loop
add
xchg
mov
mov
pop
inc
xchg
fs
stc
cmp
out
daa
mov
mov
stos
dec
mov
xor
out
out
and
mov
lret
add
sub
mov
lret
clc
jae
jne
or
adc
test
stos
ficoms
cwtl
cmpl
jbe
pop
icebp
into
in
lock
dec
popa
jg
lock
xor
ret
out
sbb
pusha
loopne
hlt
loope
inc
sub
fsts
mov
out
dec
dec
mov
jne
popf
xor
out
pop
add
arpl
ds
or
sbb
sti
je
push
sub
jb
cmp
rorl
add
xlat
and
es
int
or
add
mov
loope
pop
aam
xor
add
loopne
mov
add
cwtl
stos
lea
pop
scas
stos
andl
pusha
or
repz
bound
into
movsl
gs
push
xor
and
fidivl
pushf
dec
ds
lret
jmp
sub
jecxz
push
mov
jb
nop
in
leave
cld
scas
push
pop
jo
pop
sub
pop
arpl
adc
sbb
out
adc
xor
xchg
push
mov
stc
inc
xlat
add
jbe
lods
jl
cmp
int
leave
es
adc
into
int3
inc
cmpsl
shufps
ja
sti
jl
mov
fildl
sbb
adc
sti
lods
sub
rol
je
or
mov
push
test
lahf
mov
pop
push
test
repz
dec
add
xchg
jg
ja
inc
xchg
xchg
xchg
aam
stos
push
sbb
repnz
aaa
mov
pop
xor
out
jae
or
push
nop
jbe
adc
xchg
jge
cmc
and
mov
or
das
repz
movsl
pop
movsl
mov
lret
lea
call
and
cs
mov
out
pop
mov
out
insl
xchg
sbb
inc
out
mov
out
test
fiadds
into
rcl
push
and
jecxz
in
add
xor
cmp
data16
sbb
push
mov
test
ja
outsl
pop
inc
lock
mov
pop
in
addr16
fnsetpm(287
xor
mov
jp
test
jb
jnp
arpl
fisubl
lret
xchg
les
mov
adc
cmp
push
insl
dec
jb
fwait
cmpl
xchg
out
repz
pop
andl
test
mov
bound
push
cmpsl
dec
jae
and
jns
fxch
lahf
cmp
lods
test
arpl
ljmp
push
or
adc
or
xor
filds
in
adc
mov
push
inc
outsb
imul
sbb
sti
popf
xchg
addl
cmpsb
loope
hlt
pop
scas
xor
cli
icebp
imul
mov
push
push
rorb
push
sub
bound
sub
fsubrl
mov
push
fadd
and
mov
outsb
movsl
rclb
jbe
shrl
adc
sub
xor
test
ja
adc
mov
adc
imull
xchg
adc
mov
call
jns
bound
addr16
push
out
add
inc
int
ret
rclb
dec
cmpsl
aaa
les
push
lret
jl
iret
jle
test
inc
mov
insb
cmp
cli
test
dec
push
jbe
cmp
jmp
pop
xorb
xchg
jp
sbb
adc
mov
shlb
int3
roll
jge
sahf
fs
nop
icebp
sbb
xor
adc
icebp
xchg
popa
cwtl
xlat
and
test
stc
mov
xchg
push
fisubl
fmull
jge
xchg
adc
stc
fidivrs
mov
outsb
mov
ljmp
mov
pop
pop
and
adcl
jp
iret
sbb
es
push
dec
fisttpl
test
or
subb
stos
push
inc
jnp
pusha
ret
push
jno
mov
ss
sub
mov
inc
movsb
lret
les
mov
jae
in
leave
mov
rcr
xor
xchg
fcomp
jl
push
dec
and
sti
push
ss
adc
repnz
test
pushf
mov
xor
xor
cmp
cwtl
ja
jae
mov
mov
cwtl
ret
xchg
test
cli
mov
mov
cmpsb
pop
xor
push
js
fidivrs
bound
or
sti
push
mov
inc
cld
imul
lahf
inc
call
jg
call
daa
inc
lahf
std
and
lahf
pop
mov
mov
jo
xchg
push
ret
cwtl
cmc
push
cltd
pop
repnz
hlt
daa
cwtl
das
xchg
mov
les
loope
xchg
pop
mov
sub
pop
loop
mov
pop
dec
cmp
dec
scas
repz
mov
add
add
jge
ret
test
sub
andl
jbe
jb
cmp
cmpsl
ret
xor
idivb
adc
sbb
scas
jmp
sub
div
mov
mov
mov
xor
add
jmp
xor
imul
in
cmpsb
enter
push
xchg
push
in
xor
test
sub
div
jnp
call
rol
stos
movsl
mov
in
mov
or
sbb
inc
ret
jmp
lret
jp
or
or
inc
addr16
and
xor
cmp
sub
mov
fldln2
inc
add
xor
xchg
or
cmp
cmc
xchg
data16
enter
cwtl
mov
cli
xchg
mov
adc
fcmovnb
push
insl
mov
imul
cmpsl
push
pop
add
ljmp
mov
push
in
and
add
daa
mov
fildll
jb
dec
xchg
pop
int
cmc
sub
repz
inc
sub
mov
cld
push
rol
ja
mov
enter
push
ljmp
rcrb
or
insb
pop
sub
adc
sti
dec
or
mov
or
arpl
pop
lea
sub
mov
push
push
push
test
mov
call
inc
inc
call
je
sti
movsb
int3
xchg
pop
mov
and
lock
or
or
mov
jecxz
lcall
xchg
add
pushf
pop
mov
jbe
int3
jns
call
add
insl
popf
loope
cmp
mov
and
scas
sbb
int
stos
pop
push
mov
add
mov
in
xchg
int3
das
pushf
inc
test
add
gs
jb
add
and
push
jle
stos
mov
test
mov
xchg
scas
xchg
push
dec
push
fwait
std
imul
and
sub
stc
pop
mov
adc
je
inc
jb
adc
mov
mov
ds
adc
dec
pushf
sahf
cmp
bound
inc
and
je
xor
fldt
push
jno
mov
cmp
fmul
push
outsl
cmp
inc
shll
jne
lret
pop
js
test
out
sbbl
and
fwait
inc
mov
sarb
and
xor
int3
subb
loope
cmp
jbe
pop
fmuls
adc
cltd
mov
out
cli
and
adcl
mov
lea
xor
jne
imul
pop
xchg
daa
jecxz
or
push
jg
pushf
xor
mov
loop
jae
xlat
movsl
pop
pop
imulb
mov
mov
popf
inc
or
jp
and
mov
imull
inc
aaa
ficoms
adc
inc
mov
cmp
clc
lahf
mov
sub
mov
jne
mov
in
dec
sti
mov
dec
ret
stos
sbb
mov
add
add
shlb
iret
dec
mov
fwait
pop
negl
pop
adc
jbe
push
sbb
xor
jno
sub
in
je
mov
xchg
add
mov
rorl
das
sub
jmp
sbbl
add
lcall
inc
in
xor
mov
subps
call
add
xor
lea
mov
rorb
sub
loopne
repnz
ret
pop
jae
dec
mov
jnp
lret
push
jae
mov
repnz
scas
cwtl
push
mov
fildl
sub
sub
insb
jo
test
les
mov
add
cmpsb
and
and
popf
lcall
outsb
push
dec
dec
mov
add
xchg
push
sahf
aad
lock
cli
xchg
dec
and
loopne
xchg
lret
push
dec
pop
inc
cmp
pop
js
out
fwait
dec
enter
xchg
imul
mov
inc
in
sti
sub
adc
outsb
enter
imul
xchg
test
or
jbe
xchg
pushf
cmp
loopne
clc
sbb
adc
lcall
xchg
and
out
sbb
xor
lret
aas
jp
hlt
test
add
outsl
out
jb
jae
xor
cmp
loopne
pop
andl
inc
jle
cmp
xchg
dec
into
lret
push
jns
jbe
iret
roll
fldl
and
rorl
push
icebp
push
pop
cmp
in
and
cwtl
inc
cli
mov
push
sub
cltd
pop
adc
push
int
dec
cwtl
les
jmp
sbb
or
fs
cmpsb
int
pop
xor
add
loopne
in
dec
enter
cmp
das
jmp
mov
mov
aam
xchg
dec
mov
mov
mov
push
out
ret
pop
std
adc
lcall
xor
push
add
sub
xchg
add
cmp
or
ret
mov
jmp
cs
adcb
dec
xchg
xlat
ret
cld
ss
stos
stc
cld
mov
shrl
dec
insl
shrl
pop
dec
mov
mov
sub
inc
cmp
js
push
mov
aam
movsl
lods
xchg
add
jp
pop
or
inc
fiadds
mov
enter
mov
jnp
push
ret
jns
mov
push
cmpsb
and
mov
jbe
out
mov
xor
fidivrl
dec
lods
test
sub
and
scas
dec
fsubr
add
cmpsl
push
push
xor
sub
ss
adc
sbb
mov
xor
js
int
insb
das
cmp
push
cmp
aaa
jle
dec
push
sbb
js
sbb
push
les
inc
std
stc
fadds
popf
inc
and
outsl
test
dec
repnz
notb
mov
std
cmp
sbb
aas
rolb
fnsave
and
mov
and
cmpps
insb
pop
sahf
lret
insl
push
dec
arpl
mov
dec
inc
add
fs
mov
adc
sbb
pop
cs
insl
cltd
ret
icebp
jmp
ficoml
dec
sarb
fs
in
xchg
and
aam
pop
xchg
fmul
call
lods
or
sbb
cmpsb
sub
jg
fs
jbe
jae
inc
fwait
rol
xlat
push
xor
push
icebp
adc
dec
dec
imul
prefetch
xchg
push
mov
rcrl
lock
stos
out
stos
inc
inc
jl
jecxz
push
sbb
xchg
lret
fisttps
lds
dec
out
mov
ret
cmp
jns
pop
adc
or
jno
or
inc
pop
movsb
rcr
cmpsl
hlt
mov
xchg
pop
add
jecxz
js
add
or
clc
in
mov
fadds
testb
insl
mov
out
cs
or
dec
lahf
mov
es
lods
hlt
sub
pop
pop
cmp
cmp
mov
cs
pop
adc
repz
arpl
idivl
dec
cmp
sbb
xchg
xor
mov
bound
out
xor
aas
pop
mov
mov
jb
cmp
outsl
aad
mov
insb
ds
stc
imul
jp
shlb
or
lods
jns
jmp
sbbb
jge
mov
cmp
cmp
je
std
mov
inc
jp
fwait
mov
sbb
cmp
hlt
dec
xor
lret
outsl
mov
lahf
subl
dec
jl
or
cmp
and
popf
fsubrs
inc
popf
pop
push
ds
or
inc
mov
movsb
mov
enter
cmp
push
jbe
rcll
imul
sbb
sti
iret
insb
leave
stos
cmp
out
int
jl
pushf
sbb
xchg
js
iret
ljmp
push
xchg
lock
push
das
lods
xchg
lods
sti
inc
int3
push
push
add
and
sbb
es
aad
mov
adc
sub
out
scas
xchg
movsl
stos
sbb
or
clc
test
lahf
fcom
dec
mov
push
xchg
and
pop
ja
lret
add
push
data16
mov
popa
jmp
pop
jb
cmp
jno
outsb
and
nop
ror
cmp
ret
xchg
lret
gs
repz
imul
jnp
adc
adc
and
jbe
mov
push
or
and
je
cwtl
gs
pop
pop
mov
ljmp
sahf
arpl
scas
mul
push
jle
sahf
frstor
add
mov
stos
mov
push
ds
orl
imul
xor
lods
pop
ja
lea
cmp
daa
shr
cmp
jge
fucomp
cli
aad
mov
jno
fisubs
mov
inc
cmp
ljmp
pop
dec
inc
inc
aam
cmp
data16
cwtl
into
sub
sub
jnp
mov
add
jecxz
cmpsl
popa
mov
cmpsl
ss
cmp
call
addr16
pop
lahf
mov
in
xor
repnz
repz
sub
xchg
dec
push
inc
nop
and
mov
in
ss
jno
jge
xchg
or
or
xchg
mov
imul
shrb
loopne
push
fldenv
clc
mov
pop
nop
push
cmpsb
inc
mov
out
popa
jmp
mov
in
ja
pop
add
loopne
push
mov
sbb
fcompl
insl
adc
jns
add
sub
andb
inc
dec
push
loopne
fnsave
test
jcxz
test
test
shll
das
jnp
test
xor
out
inc
shl
dec
cmpsb
sbb
int
test
imul
sbb
sahf
data16
inc
in
xchg
imul
fcomps
ficompl
add
mov
and
adc
lock
bound
push
xor
je
les
shr
xchg
adc
push
ret
pop
xchg
pop
jp
inc
inc
scas
xchg
inc
imulb
mov
adc
cmp
lods
movsl
cmp
fbstp
inc
int
push
iret
aas
mov
ss
or
shll
pop
mov
pushf
xchg
adc
popa
jns
test
loop
mov
mov
cmp
mov
sbb
cltd
cmp
loopne
inc
jo
or
aam
pop
mov
adc
pop
mov
jmp
mov
std
test
test
aaa
mov
jnp
mov
mov
ljmp
fcompl
mov
xorb
out
dec
adc
dec
xchg
in
scas
sub
xchg
add
adcb
adcb
jl
hlt
jecxz
xchg
test
lods
or
aaa
pop
pop
jg
cmpsl
push
and
pop
jne
je
cmp
pop
mov
sub
mov
int3
push
outsl
push
mov
xor
int
push
add
inc
push
add
add
ret
adc
pop
data16
lret
fcmovu
pop
in
icebp
dec
mov
bound
inc
stos
adc
and
push
mov
add
hlt
out
sbb
pop
iret
mov
ljmp
ljmp
adc
xor
jg
insl
mov
or
ss
int3
stos
jo
mov
divl
push
mov
mov
aad
lahf
xlat
pop
insb
pop
ds
rcll
daa
pop
mov
loopne
test
jbe
add
out
cmp
rolb
lahf
outsb
outsl
icebp
sbb
add
jo
mov
in
jae
jle
jnp
add
clc
push
ret
lahf
sti
ret
add
dec
adc
mov
out
push
push
or
in
inc
arpl
mov
mov
int3
inc
inc
imul
jne
es
pop
push
xor
lret
das
decb
add
dec
xchg
sbb
cmp
std
fwait
push
mov
mov
test
push
ret
and
outsb
jmp
in
xchg
pusha
stc
push
jecxz
xchg
pop
in
xchg
loop
lock
add
in
push
cld
and
sub
lods
or
xor
out
mov
mov
pop
aas
repnz
dec
inc
xchg
lcall
push
pop
js
pop
decb
in
push
xchg
lret
cwtl
dec
clc
dec
jae
xchg
test
mov
cli
sub
adc
adc
aaa
add
push
jae
outsb
mov
push
sbb
cwtl
push
shr
aaa
loop
cmp
mov
lret
test
xor
in
jmp
popf
sbb
xchg
sti
inc
inc
test
std
test
fsubs
ljmp
shll
sahf
repnz
aaa
mov
push
stos
inc
push
xchg
shrl
mov
scas
nop
or
pop
mov
in
xor
addr16
or
and
add
or
vmovss
cmp
std
daa
stos
and
mull
in
or
mov
les
mov
dec
cld
push
push
into
xor
mov
nop
loopne
mov
jne
and
pop
mov
mov
aas
xchg
imul
adc
xor
pop
icebp
xlat
pusha
and
imul
daa
mov
into
frstor
xchg
pop
mov
shl
lcall
jb
and
mov
into
pusha
test
sbb
scas
xor
or
sub
mov
sub
jmp
lods
sub
mov
into
fstps
push
inc
xor
arpl
or
aad
push
mov
push
stos
enter
cld
jae
sahf
sbb
scas
sub
push
mov
mov
xchg
jno
and
jo
out
aaa
dec
mov
mov
push
jle
jne
xor
adc
sub
mov
jno
outsb
int3
stos
leave
pop
jge
arpl
or
mov
ficomps
sub
mov
fsubrl
in
psubb
movb
xlat
xor
hlt
sub
jo
filds
xchg
xor
xor
imul
ror
inc
mov
imul
cltd
pop
pop
mov
mov
out
clc
mov
dec
cmc
insl
push
mov
fmull
cmpsl
jmp
iret
sbb
mov
add
jbe
loopne
ret
std
fnsave
and
ds
loopne
and
sbb
sbb
inc
jmp
stc
enter
ds
sbb
lds
mov
push
ret
pop
pusha
sub
popl
lds
inc
mov
mov
pop
push
insl
cmp
xorl
sub
jns
add
fnstenv
xchg
pop
cmpsl
hlt
jle
pop
repz
mov
mov
cwtl
aam
popf
or
outsb
rcrb
or
dec
addb
push
jecxz
sub
aaa
push
lahf
cmp
cmpb
mov
pusha
sahf
cmpsl
rol
loope
iret
mov
sbb
ret
mov
sbb
cmc
dec
pop
pop
cs
cltd
test
adc
mov
mov
jns
sbb
add
sbb
pusha
bound
insb
ror
arpl
das
ds
gs
pusha
push
push
cs
sti
or
push
adc
adc
push
aam
jmp
jg
cmp
sbb
das
jmp
mov
shrb
or
xor
xchg
sub
sub
mov
stos
and
xor
aas
or
aaa
sub
test
cs
mov
es
xchg
jns
mov
push
push
mov
shl
sub
in
push
sbb
ror
ljmp
adc
xor
lea
icebp
xor
idivl
cli
out
cmc
pushf
arpl
mov
les
popl
popf
lock
fdivp
enter
aas
adc
cltd
jae
stc
mov
aad
sti
cmc
imul
dec
pop
int
mov
add
lcall
subl
in
inc
inc
adc
push
pop
popf
outsl
add
lret
push
ret
sub
or
ljmp
int3
and
dec
pushf
sarb
xchg
sahf
cwtl
mov
fcoml
rolb
js
add
jecxz
sub
push
sti
sub
ds
cmp
mov
aam
pop
out
gs
push
jmp
adc
lcall
arpl
bound
pushf
fcoml
mov
inc
mov
lods
mov
cmpl
data16
pop
mov
adc
and
xchg
aaa
rcl
mov
imul
lods
mov
dec
in
testb
xchg
pop
popa
jo
in
inc
cmpsl
sbb
loope
jns
sti
test
repz
mov
pop
je
sub
lea
sahf
xor
mov
es
rclb
pop
andl
mov
insl
fs
adc
addb
pop
adc
pop
push
adc
pop
add
imul
sub
mov
jbe
sub
sub
addr16
frstor
push
loopnew
add
cli
inc
xor
sti
fcomps
ficompl
cmpsb
ret
xchg
hlt
cmp
in
mov
or
in
stos
and
push
jg
loope
and
scas
js
pop
add
out
jnp
sub
aas
in
cmpsb
fdivrl
cmp
incl
and
and
pusha
sbb
inc
lcall
stc
outsb
cmp
popa
or
cmc
mov
mov
testl
push
lds
hlt
adc
add
cmc
jns
mov
divl
pop
shlb
cwtl
ret
or
or
or
sbb
cltd
push
frstor
pop
and
mov
pop
pushf
add
push
add
icebp
mov
clc
cmp
xchg
les
mov
jge
xchg
push
aaa
pop
xchg
cmp
sbb
repnz
pushf
rcrl
push
addr16
dec
inc
adc
outsl
adc
pop
insl
sbb
push
cltd
and
cwtl
mov
std
and
xor
repnz
mov
mov
sub
loopne
arpl
rcrl
mov
shll
rcl
sbb
jmp
lret
inc
push
add
inc
shrb
iret
inc
sbb
stos
adc
push
repz
push
ss
lea
in
jg
orb
aas
movsl
xlat
dec
jmp
lock
fsub
lods
cmp
or
test
call
jge
cli
icebp
cltd
aaa
jl
sbbl
mov
xor
mov
fbld
sarl
dec
sub
je
imul
sbb
das
pusha
and
stc
fnstcw
fs
jns
mov
negb
pop
mov
in
or
pop
pop
inc
jb
repnz
and
mov
cmp
or
in
cli
std
pop
shll
jae
outsl
mov
mov
sarl
push
mov
out
adc
cmp
xor
out
or
add
je
mov
ss
pop
fnstenv
cmc
adc
subl
sahf
cli
push
inc
dec
mov
or
sub
int
arpl
add
aas
dec
mov
movsb
push
std
push
movsl
sbb
jmp
das
sub
pop
dec
push
xchg
mov
or
adc
mov
jno
mov
mov
push
mov
xor
add
or
fidivrs
cwtl
leave
out
or
repz
cmp
fisttps
adc
xchg
loope
aad
mov
jns
out
out
sbb
mov
outsb
push
pop
test
pop
jo
or
sarl
jb
mov
pop
jle
mov
stos
jns
mov
cmc
out
mov
jno
or
dec
add
xchg
stos
out
movsb
and
ret
adc
scas
ficomps
adc
lahf
enter
les
loope
sti
scas
dec
mov
dec
pop
mov
in
nop
icebp
sbb
jg
jmp
sahf
imul
mov
xor
leave
js
loope
movsl
pop
gs
jp
pop
test
pop
mov
jge
stos
testl
mov
ret
cmp
adc
fiadds
fidivrl
sbb
mov
popa
jbe
or
sbb
int
je
xor
jb
mov
xchg
rcrb
andb
pushf
inc
xorb
call
mov
mov
inc
mov
mov
or
jnp
xor
pop
fisttps
jno
mov
jle
out
in
xlat
and
js
ret
stos
sub
stos
ficompl
mov
nop
cmp
addr16
iret
add
adc
subl
and
dec
enter
popf
test
test
jns
mov
sbb
sbb
cmpsb
mov
pop
xchg
push
inc
mov
push
out
or
adc
fdivrl
inc
scas
sub
pusha
clc
mov
inc
shl
sti
xchg
sbb
pushf
notb
inc
call
push
movsb
test
icebp
jne
push
inc
lret
xchg
sbb
jne
loopne
push
lods
fisubrl
cmp
bound
int3
ffreep
imul
je
add
jb
call
enter
jne
dec
and
lcall
mov
gs
jge
mov
fldl
mov
mov
leave
mov
aam
cmpsl
ficomps
sarl
sbb
int3
sub
bound
and
sbb
cmp
cmp
xchg
hlt
imul
divb
gs
sub
push
outsb
cld
xchg
sub
outsl
xor
cmp
fs
cs
jmp
add
mov
dec
xchg
or
cmp
mov
sub
daa
push
fs
add
cld
sub
int
xchg
mov
sarl
test
push
xor
out
out
inc
jle
lret
inc
fxch
pop
sub
inc
das
sub
jle
mov
rcrl
sub
mov
std
cli
fisttpl
and
mov
or
dec
cmc
cmp
lret
shrb
das
popf
mov
lahf
add
jp
stos
mov
mov
xchg
loope
pushl
nop
iret
jge
stos
push
rcrl
fisttpll
lods
sbb
lret
rol
lret
fsts
pop
daa
pop
add
in
jecxz
les
enter
xlat
mov
sbb
nop
pop
icebp
jne
dec
sbb
sti
popa
cmpsb
sbb
mov
scas
outsb
test
bound
adc
xorl
push
adc
and
jb
mov
cmpsb
outsl
xchg
repnz
rol
cmpsl
pop
add
inc
jg
xor
inc
je
lcall
std
cld
mov
sbb
dec
hlt
popa
pop
or
xor
insl
pop
test
test
cmpsb
fisubrl
cmpsb
test
cmpsb
add
sub
mov
jp
xchg
sub
frstor
or
mov
mov
adc
sarl
xor
sahf
jmp
inc
fists
or
adc
cpuid
fisttpl
test
or
add
int3
jns
jnp
dec
cli
sbb
inc
addr16
dec
add
pop
push
fildll
push
fmull
aam
push
es
sbb
outsl
push
inc
testb
dec
in
nop
dec
lea
dec
push
add
cmp
fdivrl
mov
push
adc
ret
xchg
sbb
je
sbb
mov
or
clc
cmp
mov
test
xchg
movb
into
int
dec
mov
iret
test
test
lock
add
leave
sub
xor
jle
aaa
faddl
loopne
mov
mov
mov
jo
jg
bound
scas
or
push
sbb
xor
outsl
int3
rorb
pop
repnz
and
dec
adc
subb
jno
outsb
mov
jne
and
or
mov
ss
xor
rolb
mov
in
dec
stos
sbb
bnd
xchg
into
ret
lret
aam
or
scas
inc
sbb
push
fwait
arpl
pop
inc
insb
xchg
rcll
in
jge
test
pop
push
pop
je
push
pop
cmpsb
pop
stos
scas
leave
mov
add
jg
pop
dec
mov
repz
and
mov
mov
cli
je
add
mov
pop
jb
xor
aam
sarl
aaa
and
lcall
jl
sbb
pop
cs
mov
insb
aaa
stos
mov
jne
fidivl
fcoml
out
jno
mov
nop
inc
jo
rcr
cmp
rorb
pop
lods
mov
popa
or
out
mov
movsl
jmp
pop
loope
jp
or
xor
dec
aad
das
xor
jns
das
loopne
sbb
mov
xchg
add
into
test
sub
mov
mov
cmpsl
inc
std
in
mov
xor
out
pop
mov
popa
shr
push
pop
jmp
shrl
sahf
jle
fadd
pop
bound
pop
lds
jo
mov
mov
fwait
test
mov
push
hlt
sbb
int
ret
dec
fwait
cmp
es
cmp
mov
dec
and
sub
mov
push
xchg
xchg
movsl
lods
mov
sbb
js
daa
lcall
jns
push
inc
xor
pop
movsb
xchg
popf
dec
stos
mov
mov
jnp
sti
out
sarl
push
jo
lods
test
inc
pop
add
sbbl
mov
lock
jecxz
dec
and
mov
addr16
in
stos
sbb
xor
and
cs
cmpsl
js
out
popa
inc
sub
lods
inc
and
jmp
lret
fdivrp
mov
add
dec
arpl
mov
shufps
popa
mov
push
stos
dec
or
popa
rolb
inc
adc
scas
push
lret
out
arpl
cmp
aas
stos
adc
subb
inc
mov
push
out
push
jge
xor
jg
sbb
xor
mov
pop
imul
inc
pop
inc
sbb
fidivs
into
lret
in
lods
inc
xchg
sysexit
pop
orl
rolb
push
and
scas
pop
xor
ljmp
mov
mov
test
std
ja
ret
mov
push
repnz
jle
sahf
in
ret
das
fwait
notb
cli
and
cmp
data16
mov
inc
xchg
push
test
xor
pop
imul
es
int3
out
aas
and
fidivrs
xor
cwtl
dec
es
ss
xchg
loopne
cmpsl
test
sbb
insb
stos
and
and
add
outsl
in
rorl
xor
sub
cmp
dec
roll
adc
push
xchg
or
rclb
shrl
jecxz
add
les
adc
inc
cmpsl
les
push
pop
pusha
pop
jp
push
add
adc
adc
cmp
push
incb
movb
sub
add
daa
add
mov
pop
sbbb
subl
mov
leave
jo
sub
mov
cwtl
imul
stos
fwait
sub
sub
cwtl
dec
and
out
addr16
cmpsb
mov
jo
pop
jg
rcll
cmpb
outsl
adc
xchg
cmp
xchg
pop
mov
xor
ficomps
mov
mov
adcb
xor
dec
jns
loopne
imul
mov
jecxz
mov
sahf
aam
test
sub
dec
and
jg
ret
das
ss
mov
cmp
lods
lcall
add
dec
stos
mov
mov
cmc
push
add
inc
mov
inc
cli
rcll
sbb
pop
jmp
hlt
cmp
scas
ficompl
fsub
push
fidivs
add
in
bound
mov
inc
cs
mov
inc
add
cs
mov
stc
push
mov
jb
pop
imul
jge
dec
pusha
cmp
or
fiaddl
bnd
popa
mov
frstpm(287
lds
sub
xor
aas
mov
xchg
aaa
icebp
and
push
or
xlat
jae
cmp
repz
mov
dec
push
add
inc
lods
scas
lea
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
std
repnz
sar
lahf
in
mov
or
push
xchg
test
xor
imul
out
mov
mov
mov
add
movswl
mov
add
push
push
jle
pop
pop
pushl
add
pop
movswl
add
mov
add
or
sub
push
sbb
popl
mov
sub
and
dec
dec
mov
sub
jne
mov
or
je
mov
jl
xchg
cmpsl
pop
test
lcall
jmp
fimull
adcl
out
ljmp
xchg
insl
xor
mov
insb
sahf
xor
pop
or
daa
push
push
add
loopne
inc
or
fs
cmpsb
sbb
addr16
jne
fisubrl
push
imul
outsl
std
inc
out
dec
add
cmpsw
pop
jl
mov
xchg
pop
gs
cmpsb
pop
jl
movsb
mov
xchg
ljmp
movsl
mov
into
addb
test
inc
call
cli
das
sub
int3
xchg
push
jne
es
cli
addl
pop
pop
fimuls
fdiv
mov
addb
adc
mov
enter
ja
cmp
leave
mov
jno
bound
aam
inc
js
jg
sub
sti
adcl
daa
and
jl
inc
js
orl
lea
or
cmp
sarl
mov
loopne
rorb
je
or
aad
daa
arpl
or
or
jl
test
insl
aaa
imul
int3
add
sbb
les
xchg
clc
imul
std
fs
addr16
fsub
push
cmp
gs
mull
xchg
mov
cmpsl
xchg
dec
stos
mov
fsubs
sub
and
sub
sbb
or
std
cmp
and
and
push
sbb
jo
push
pushf
push
cmp
xor
pop
insl
lahf
scas
out
cmpsb
cmpsl
jge
clc
iret
mulb
sbb
cmp
movsl
jecxz
push
test
popa
and
mov
fists
stos
pop
jbe
mov
ret
mov
loop
push
cltd
stos
icebp
lock
sbbb
test
mov
sti
lods
pusha
dec
call
ja
mov
test
repnz
push
jg
add
sbb
add
sub
inc
cmpsb
call
in
stos
inc
das
insl
cld
push
pop
call
mov
sbb
sti
clc
movsl
outsl
inc
mov
adc
push
notb
nop
out
out
mov
or
add
in
push
call
push
inc
push
notb
fldl2t
jne
sahf
ja
dec
div
xchg
rcl
lcall
cmp
outsl
push
call
mov
sub
divl
push
call
test
xchg
pop
cs
fisubs
xlat
fsubrl
fdivrl
mov
push
jno
outsl
push
call
aad
inc
call
scas
imul
cmpsb
push
out
aaa
cmp
cli
movsb
jmp
jmp
mov
imul
sub
pop
mov
fs
decl
cmpsb
pop
rorb
shll
inc
jecxz
jmp
xchg
adc
out
aaa
scas
test
jno
stos
add
or
insl
movsl
insb
sahf
out
add
notb
test
jne
stos
test
stc
adc
or
mov
outsl
test
add
inc
test
or
es
xor
test
sub
mov
sti
ja
pop
push
and
and
mov
xchg
ja
cmpsb
pop
xor
jbe
movsb
test
adc
mov
push
xor
mov
mov
test
adc
mov
test
mov
or
fidivs
jb
dec
test
mov
shll
or
js,pn
xor
or
dec
enter
aam
pop
mov
xchg
push
into
mov
or
scas
into
mov
test
cwtl
xchg
xchg
movsl
pop
xor
imul
lds
push
mov
mov
dec
pop
daa
fnstenv
mov
ret
sub
test
sbb
mov
sub
imul
orl
mov
out
inc
xlat
into
mov
test
fnsave
mov
pop
mov
test
xor
adc
mov
push
pop
daa
aam
sbb
push
pop
sub
aam
mov
xchg
push
into
mov
test
xchg
cmpsb
movsl
pop
xor
cs
shll
push
sbb
push
jbe
xor
or
mov
or
xor
xor
or
mov
popa
mov
ds
cltd
scas
cmpsl
popf
mov
fwait
lods
adc
ds
xchg
push
out
push
fsubrl
lods
iret
pop
frstor
jmp
xchg
push
out
push
fsubl
orl
lods
iret
pop
frstor
xchg
jle
sub
or
into
xor
pop
sbb
dec
mov
push
xchg
push
out
push
fmull
je
adc
push
mov
adc
leave
lds
mov
or
bound
mov
mov
push
xchg
push
out
push
fsubrl
cmp
test
pop
sbb
dec
mov
push
xchg
push
out
push
fsubrl
or
gs
stos
push
jb
push
xchg
push
out
int
push
test
jle
sub
or
shll
bound
mov
aas
scas
inc
xor
pop
push
push
mov
jp
icebp
add
jbe
mov
xor
stos
nop
sub
and
cwtl
jb
popa
mov
lea
repz
adc
jno
or
daa
mov
mov
lea
repz
stos
or
push
sbb
push
jno
push
xor
xor
mov
pop
xor
insb
push
xor
or
cmpsb
mov
cmpsb
pop
xor
cltd
cwtl
dec
mov
dec
sbb
cmpsb
cmpsb
pop
xor
test
pop
xor
jbe
addr16
dec
push
xor
dec
xor
into
cmpsb
pop
scas
test
adc
js
sub
jp
xor
dec
pop
cmp
scas
repnz
dec
cmp
mov
loopne
cmpsl
aad
jnp
lret
push
scas
cmpsb
push
imul
xchg
loopne
imul
xchg
clc
idivb
jmp
adc
jb
aad
shrl
jecxz
jecxz
lock
fisubl
jmp
adc
xor
or
mov
or
mov
or
mov
or
mov
or
mov
or
lods
test
xor
mov
or
lods
test
or
mov
or
xor
or
xchg
test
xor
or
mov
or
mov
or
adc
mov
lock
mov
pop
pop
push
cmpsw
jg
mov
jns
mov
inc
pop
adc
das
sbb
mov
add
push
fs
out
push
into
movsl
movsb
int3
sbb
dec
adc
stos
shlb
mov
movsb
adc
push
es
and
arpl
xorps
dec
out
dec
mov
loopne
mov
clc
adc
nop
andl
jno
fisubrs
cmp
inc
dec
mov
pushf
test
cmp
cmp
test
lods
xor
xor
mov
mov
into
pop
mov
les
aam
adc
jg
sbb
loopne
add
fisttpll
push
test
sbb
ljmp
mov
ret
cwtl
aaa
dec
inc
jmp
and
xchg
or
ljmp
sbb
jne
test
fdiv
cmpsb
xchg
mov
test
jge
and
pop
cmp
jne
adc
inc
xchg
xor
add
dec
movsl
push
rolb
push
pop
rcl
out
cld
movsb
daa
push
out
push
cs
gs
fbld
out
cmp
sub
sbb
adc
sarl
mov
repnz
fisttpll
add
mov
js
pop
popf
xchg
les
mov
in
add
bound
mov
jmp
je
sahf
jp
cmp
sub
movsb
test
cwtl
xchg
adc
jno
jno
sub
mulb
mov
cld
insb
xchg
bound
rcrl
scas
dec
fsubr
add
leave
jmp
add
rorl
adc
push
lret
popf
rorb
mov
jne
or
push
lock
and
mov
adc
movsb
test
or
cwtl
mov
xlat
xor
inc
fcomip
and
ljmp
xor
loopne
test
movsl
arpl
js
daa
ret
ffree
xchg
push
fbstp
mov
adc
lahf
cltd
fcomps
ljmp
fldt
mov
std
shrb
xor
sti
xchg
xchg
push
iret
xor
in
ret
fdivrl
and
push
mov
inc
mov
into
adc
or
stc
div
sti
adc
dec
loopne
xor
xor
mov
adc
les
clc
int
enter
daa
push
cltd
cmp
pop
cmc
sub
bound
lahf
in
scas
cmp
jno
cmp
mov
stos
sbb
xorl
sub
jbe
imul
add
and
add
add
add
sbb
add
sbb
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sbb
add
sbb
add
sbb
add
push
add
sbb
push
add
sbb
push
add
sbb
push
add
sbb
push
add
sbb
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
sbb
add
fistps
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
mov
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
enter
push
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
lock
and
js
test
mov
jecxz
rolb
jae
inc
jno
fildl
ret
fldl2e
call
aam
hlt
cmp
jg
fldcw
lahf
fisttpll
test
adc
outsb
mov
bound
out
into
mov
das
or
out
or
js
mov
roll
dec
movsl
pop
and
xor
testb
adc
inc
mov
xchg
xchg
jl
ljmp
jo
xor
ret
push
je
push
int
ljmp
sub
in
ja
shll
arpl
and
inc
add
push
repz
add
jecxz
jge
lahf
out
mov
dec
mov
bnd
cs
inc
lret
jle
imull
jns
xor
imul
cwtl
in
jle
rorb
aaa
cmp
fwait
dec
mov
clc
shl
je
xor
sbb
cwtl
enter
in
icebp
jge
push
andl
jle
je
sub
cmp
mov
mov
fdivl
mov
out
or
push
out
scas
push
fnstsw
faddl
aas
addb
or
jmp
xor
add
and
fwait
dec
sub
inc
movsl
imul
iret
add
imul
xchg
or
mov
xor
adc
sbb
xchg
fwait
jne
fimull
std
cs
iret
and
xor
js
jne
push
and
movsl
add
iret
add
fdivl
lahf
sub
pop
cltd
mov
int
dec
mov
dec
push
incl
jge
testb
int3
mov
jl
sti
orb
adcl
xor
gs
rorb
cmp
lock
aam
mov
xchg
mov
pop
dec
fwait
int
push
inc
inc
inc
ret
jb
orb
mov
int3
inc
popf
jne
aad
push
test
inc
inc
ret
push
ds
fwait
jle
mov
mov
push
mov
js
shll
lock
ss
push
decb
add
mov
or
stc
adc
dec
sti
xchg
and
mov
xchg
lret
mov
imul
stos
test
test
in
push
lcall
xchg
add
adc
clc
jecxz
mov
add
jae
dec
inc
notl
mov
je
test
jmp
mov
repz
mov
in
lret
subb
add
lods
mov
std
mov
inc
or
sub
cmpl
je
jbe
inc
int3
jmp
mov
in
jle
js
sbb
ret
mov
adc
mov
xor
dec
lret
add
xor
dec
fwait
dec
mov
mov
mov
cwtl
xchg
fs
inc
jp
ds
bound
mov
push
jne
clc
pop
popl
movsb
xchg
or
dec
leave
mov
repnz
jg
jp
test
ss
dec
in
rcl
dec
outsl
jbe
sub
ret
cmp
sbb
sbb
inc
sahf
xchg
mov
andb
in
test
inc
push
std
aas
adc
test
sarb
test
repz
out
test
sub
add
or
mov
push
decb
xchg
sub
mov
outsb
cmp
dec
mull
dec
dec
out
cmp
mov
lods
imul
push
xor
and
test
mov
push
popw
out
or
js
lock
je
lret
xchg
sub
cmp
int
xchg
pop
mov
dec
inc
aam
or
cmp
prefetchnta
xchg
fmul
mov
test
push
jge
dec
cmc
filds
out
lahf
rolb
sbb
fadd
lahf
aad
mov
std
aaa
gs
mov
sbb
jo
pop
jnp
cmp
outsl
gs
mov
addb
dec
popf
jge
xor
pop
add
mov
int3
popa
aas
aas
jnp
les
scas
adc
stc
repnz
push
xorb
or
dec
pop
mov
mov
adc
sbb
das
in
xorb
sub
xlat
fdivl
data16
addr16
iret
insb
cmpsb
push
adc
test
jae
inc
stc
jns
out
push
insb
ret
lret
daa
neg
imul
call
xchg
in
aad
cmp
loop
dec
and
mov
or
mov
jl
iret
mov
push
xchg
push
jg
push
push
outsb
push
aas
xchg
xor
test
inc
cs
scas
lds
sbb
lcall
nop
and
jb
fdivl
lahf
adc
or
fnstenv
frstor
fiaddl
xchg
in
out
cwtl
negl
repz
xchg
mov
movsl
jns
xchg
pusha
jp
andl
ret
mov
lods
sub
sahf
pop
add
cmpsl
sbb
in
xchg
mov
add
jge
pop
stos
jge
dec
adc
sub
and
adc
test
out
push
xchg
outsl
or
stc
icebp
gs
test
sbb
outsl
cmc
movsb
sti
iret
jp
popf
pop
sbb
cmc
mov
inc
pop
mov
out
jnp
mov
xor
scas
movl
pop
out
notb
pop
int3
dec
cmp
mov
and
loopne
cmp
cld
adc
mov
mov
xchg
ljmp
stos
out
mov
ja
add
icebp
outsl
fildl
daa
sub
insb
xchg
inc
or
adc
ret
mov
pop
dec
ficomps
sti
dec
push
ja
mov
mov
pop
js
mov
insb
subl
lcall
aam
imul
push
loop
and
incl
and
adc
ret
or
loope
inc
jno
mov
and
aaa
fcoms
inc
xor
loope
icebp
adc
nop
imul
jno
arpl
lahf
int3
sbb
shll
scas
inc
mov
leave
mov
inc
jge
or
sarb
aaa
test
push
xchg
jns
test
inc
push
mov
outsb
arpl
xchg
out
mov
and
into
pushf
repz
mov
xchg
sbb
adc
add
adc
jb
sub
lock
iret
icebp
pop
lahf
cmpsb
jp
jmp
das
inc
mov
ss
and
mov
mov
addl
in
cltd
inc
imul
in
out
jl
inc
sar
xchg
sti
or
mov
into
mov
jbe
stos
jmp
xchg
add
lcall
aas
push
jne
xchg
inc
mov
sti
pop
outsl
pusha
xchg
mov
in
and
inc
je
xchg
rorl
in
and
into
dec
mov
or
movsb
and
add
pop
cwtl
stos
pop
cmp
xchg
xor
pushf
pop
lret
sbb
stos
adc
cmpsl
mov
xchg
nop
repz
mov
mov
mov
mov
inc
lods
test
cmp
xchg
xlat
arpl
or
repz
sub
stos
icebp
adc
repz
popa
xor
cltd
je
bound
sbb
ficoml
push
jb
mov
add
adc
ja
xor
jle
mov
fistpl
divb
pusha
int3
jge
aad
ret
lods
push
mov
push
adc
xchg
lods
pop
sbb
cmp
inc
mov
pop
and
lds
jge
lds
test
fadds
lods
push
mov
push
mov
sbb
jae
adc
or
ret
and
or
jno
ds
pop
cmp
lock
mov
mov
xor
pop
aas
cmp
mov
mov
dec
xchg
arpl
xchg
mull
cltd
dec
out
sub
popf
mov
jg
adc
mov
jp
cmp
sbb
test
sub
arpl
or
loope
popf
or
xor
add
inc
xchg
or
pop
andb
fstps
ljmp
sub
cld
iret
jno
xor
xchg
mull
sbb
lahf
loop
stos
repnz
and
mov
andl
push
xchg
dec
mov
fdivr
test
movsb
repz
pop
jp
push
mov
xchg
sub
cmp
in
jl
push
inc
mov
and
mov
xchg
xchg
daa
adc
jp
fnsave
in
inc
repnz
push
dec
test
je
shr
sarb
mov
stc
ja
adc
mov
inc
push
lds
shrb
pop
cld
or
push
inc
jne
lahf
jne
sub
pop
rcrb
mov
test
sub
into
ja
int
xor
jp
dec
cltd
mov
movsl
mov
stos
data16
leave
pop
imul
sub
shll
pusha
unpcklps
cli
sbb
and
xchg
and
lds
xchg
mov
lds
xchg
mov
cmpsb
mov
sbb
icebp
lcall
adc
fisubl
push
cmp
popa
fisttps
sbb
in
mov
add
lcall
pop
outsb
sbb
adc
popa
popf
jmp
das
sbb
mov
dec
fnstenv
test
dec
pop
dec
jle
sbb
fists
add
enter
or
lea
mov
leave
leave
rclb
jnp
mov
xlat
add
mov
repz
mov
icebp
sub
scas
cli
jle
cmp
fimull
adc
pushf
dec
or
loope
push
xchg
mov
fs
or
mov
stos
in
add
shrl
mov
call
scas
arpl
es
idiv
xorb
aad
dec
jg
les
and
add
push
repnz
idivb
or
mov
mov
sbb
es
pushf
ds
shrl
or
fcmovne
push
cmp
inc
bound
inc
sub
sbb
dec
scas
or
sub
rolb
cmp
imul
imul
test
xlat
sub
jo
pop
cmp
mov
popf
and
ja
test
cmc
cmp
movsb
in
call
mov
fisubrl
lret
movb
stc
inc
xchg
xchg
ficoms
push
xor
push
jge
dec
mov
or
das
enter
jg
xor
mov
or
call
inc
jge
jge
sub
in
xchg
xchg
sbb
sub
in
aam
les
in
push
sbb
pop
shlb
imulb
dec
in
mov
jmp
xor
push
pop
mov
call
loopne
jge
push
jb
test
mov
ljmp
jno
popf
pop
xor
or
pop
outsb
jg
pop
and
and
lcall
mov
jp
lret
mov
mov
xlat
divl
mov
xchg
inc
iret
or
hlt
popa
cwtl
ds
in
and
add
mov
fdecstp
cmc
btr
mov
mov
in
loope
leave
loop
pop
mov
lret
or
call
cmpsl
jno
js
ret
mov
mov
mov
pop
loope
out
xchg
fwait
or
pop
sub
add
jbe
pusha
into
inc
add
push
xchg
sub
or
movsb
sub
out
push
jnp
frstor
sarl
sbb
leave
add
push
loop
pop
xchg
mov
mov
jle
fs
dec
xchg
outsl
pop
das
sbb
ret
dec
jl
xor
sub
sub
or
pop
xor
jno
dec
popl
scas
xor
add
in
xchg
xchg
ret
or
aad
cmp
pushf
es
push
sub
int3
xchg
mov
sbb
mov
lea
or
mov
outsb
mov
sub
fwait
cli
xor
push
leave
ret
push
xchg
sbb
add
aam
mov
dec
sub
loop
jle
xchg
and
mov
cmp
and
ljmp
pushf
pop
daa
sarl
ja
outsl
inc
jnp
and
cmp
lcall
inc
addr16
dec
repz
repz
and
mov
es
repz
test
rolb
lret
sbb
leave
bound
mov
jmp
lahf
lret
mov
mov
outsl
or
ljmp
xchg
or
mov
jmp
jecxz
push
sub
in
jl
popa
adc
jns
mov
pop
add
cltd
ficomps
movsl
loope
dec
xor
jbe
push
movsl
outsb
push
and
sti
or
popf
mov
push
mov
jl
push
push
andl
aad
fistps
leave
jp
cwtl
out
pop
or
loop
imul
stos
jae
outsl
loopne
jnp
aad
daa
sar
popa
xchg
adc
jmp
insb
or
clc
rcl
mov
xor
shll
cltd
sbb
inc
aad
and
loope
lahf
dec
loope
cmp
cltd
imul
adc
subb
jb
jno
push
inc
add
dec
in
fxch
stos
popa
push
inc
inc
cltd
cmc
add
es
roll
lret
push
sub
es
push
out
pop
xor
or
call
int3
inc
xor
scas
mov
cmc
jnp
mov
dec
inc
mov
dec
xor
cmpsl
jecxz
xchg
cmp
and
rol
inc
pop
sub
rcll
adc
je
sub
in
es
inc
add
imul
mov
shlb
push
jl
push
lods
rclb
mov
pop
jbe
fsubl
xchg
shll
shlb
loope
sbb
mov
fimull
xchg
icebp
sub
push
test
mov
add
dec
movsb
jp
or
xchg
jl
outsb
push
lret
sub
arpl
mov
iret
pusha
cmp
dec
lahf
lea
sbb
ret
sti
add
sbb
and
push
pop
dec
cmp
add
leave
xor
lock
insl
xor
ficoms
dec
ss
in
call
and
lea
dec
sub
stc
jo
lahf
cmpsl
xchg
add
bound
pop
jl
sbb
aas
out
fstl
imul
cmpsb
sub
scas
jae
sub
fidivrs
les
loope
ja
cltd
push
pop
inc
mov
inc
std
push
loopne
jb
adc
jmp
test
cmp
adc
cli
cmp
inc
gs
sub
test
clc
mov
popf
lods
push
sub
adc
pop
mov
xchg
sarb
das
pop
mov
popf
sbb
mov
push
inc
mov
int
mov
mov
push
daa
dec
hlt
into
inc
cmpsb
aaa
dec
call
movsl
into
push
pop
inc
push
cmp
pusha
pop
push
call
dec
inc
fstl
repnz
and
dec
stos
mov
xor
sub
mov
dec
mov
pop
test
mov
mov
or
xor
mov
sbb
xchg
mov
hlt
setb
push
in
popa
add
jne
pop
pop
pusha
mov
add
adcl
mov
push
jp
pop
shlb
inc
inc
mov
fsubl
ds
adc
push
xchg
and
adc
rorb
fildll
movsl
and
sbb
int
jo
pop
imul
lcall
ja
arpl
insl
jmp
cmc
addr16
push
push
xorl
mov
inc
fistpll
cli
jecxz
popa
fisubl
aad
in
das
adc
adc
fmull
in
mov
aad
mov
outsb
scas
jp
sbb
xor
stos
sub
fsubr
out
lcall
mov
movsb
pop
cmpsl
push
add
or
or
inc
test
loopne
xor
inc
lret
fs
int3
fdiv
push
push
idiv
insb
dec
popa
shlb
cmpsl
icebp
ss
ror
xor
mov
jno
pop
nop
sub
pushf
gs
enter
cmp
pushf
stc
mov
push
inc
lds
cld
out
fdiv
mov
sbb
push
mov
pusha
add
insb
and
fcmovnb
clc
cmp
int3
sbb
test
std
adc
iret
aas
jmp
cli
jl
xor
rorb
pop
mov
cmp
mov
popa
imul
loope
fwait
sub
addr16
sti
je
pop
sahf
jmp
lods
lahf
pop
mov
inc
repnz
and
jge
dec
inc
out
inc
loopne
rcrb
pop
xchg
fildll
xor
xchg
negb
int
rolb
mov
push
hlt
sahf
add
daa
loop
out
fimull
into
inc
adc
and
fs
mov
mov
les
inc
into
ljmp
inc
push
push
jo
mov
cmpsl
dec
xchg
pushf
int3
xchg
sbb
push
xchg
cltd
or
cmp
ss
decl
ffree
fsubs
adc
sub
imul
dec
repz
jnp
inc
dec
and
sahf
mov
mov
push
xchg
adc
jns
pop
and
inc
jno
jp
loope
mov
mov
fdivs
daa
nop
add
xor
addb
cld
xor
mov
mov
cmovbe
pop
pop
cmp
aad
jge
add
outsl
call
imul
sub
xchg
aas
into
shll
std
push
jl
push
xchg
sub
pop
imul
enter
mov
inc
loop
mov
mov
sbb
xchg
out
iret
and
inc
out
add
xor
push
arpl
mov
aas
test
stos
xchg
subb
pusha
cmp
imul
addr16
adc
sarb
jne
dec
aas
incl
jb
pop
cmp
ds
outsl
xchg
xchg
adc
and
push
rcrb
aas
inc
or
jo
divb
jg
pusha
push
add
pop
inc
add
shlb
sarb
sbbb
xor
out
aam
bnd
pushf
mov
cmp
mov
movsb
sub
or
fcomps
mov
sbb
cmp
and
fidivrs
loope
inc
sub
test
add
push
jns
inc
inc
lret
add
mov
sbb
inc
lods
add
icebp
fnstcw
into
movsb
pop
mov
jle
sub
pusha
lcall
pusha
popa
jb
stos
adc
mov
subb
fimull
cmp
and
std
popf
jmp
ljmp
repnz
push
lds
or
stc
inc
outsl
dec
push
mov
inc
xchg
add
ljmp
rcrb
jb
repz
loop
test
mov
mov
jmp
nop
mov
or
xchg
inc
inc
lods
cmp
lcall
xor
cltd
shrb
adc
dec
scas
test
hlt
dec
sarb
pinsrw
shl
xorb
pop
jne
add
stos
inc
or
or
xchg
dec
rcrl
add
cli
lods
aas
movsb
jge
jmp
push
pushf
sbb
adc
mov
outsb
mov
xor
lods
lods
add
cmp
out
sbb
and
sbb
push
adc
insl
aas
or
xchg
sbb
pop
xchg
lret
mov
xor
iret
scas
push
cmp
inc
mov
push
cwtl
outsl
repnz
sbb
bound
mov
jo
push
incl
xchg
push
lock
aam
pop
or
and
xchg
fwait
push
loopne
imul
clc
jp
into
sbb
subb
test
or
xor
loop
or
clc
in
enter
addr16
ret
pop
aam
mov
sbb
out
subl
pop
xlat
push
cmp
cmc
shl
or
rcl
gs
inc
imul
lcall
cmp
inc
adc
add
inc
or
jmp
mov
inc
dec
push
sbb
es
xchg
mov
lcall
jo
orb
dec
jnp
in
sbb
xor
mov
data16
jne
inc
xchg
adc
pop
cmpsl
int
adc
repnz
mov
xlat
xchg
push
inc
ljmp
sub
jbe
sbb
jp
and
out
in
icebp
jnp
inc
push
jle
mov
sub
push
gs
bound
loope
je
insl
cmp
pop
xchg
fwait
test
sbbl
inc
xchg
cmp
sub
mov
mov
enter
movsl
sub
mov
adc
sbb
inc
loopne
add
add
scas
pop
loopne
iret
icebp
xchg
mov
push
jl
or
mov
add
test
and
mov
xchg
fs
sub
std
cmp
imull
stc
adc
jns
push
or
jb
jmp
fwait
mov
cltd
je
iret
xchg
stos
adc
rolb
mov
sub
jmp
mov
loop
fdivl
ljmp
outsb
jne
decb
lds
xchg
jecxz
imul
fmuls
dec
push
insl
mov
clc
inc
ja
test
cmp
stos
aaa
movsl
je
fwait
mov
dec
mov
dec
add
push
mov
adcb
leave
mov
push
sahf
inc
adc
gs
cmp
push
sub
add
mov
popa
vsqrtss
mov
mov
roll
mov
mov
jns
xchg
test
and
xor
leave
lea
lock
add
add
scas
in
mov
sbb
shr
cmc
movsb
dec
fnstenv
xchg
sarb
mov
mov
dec
adc
pop
lahf
pop
sbb
lcall
or
xchg
dec
lods
cmp
rcrl
imul
lret
mov
jmp
inc
inc
dec
dec
cmp
add
cmp
mov
pop
mov
jb
jecxz
inc
aaa
out
push
sbb
stos
sub
inc
fcoms
inc
in
inc
jecxz
into
frstor
clc
fdivrl
shlb
pop
cmp
out
adc
fdivrs
mov
in
xor
pop
mov
ja
loope
push
add
push
andb
cmp
push
and
insb
adc
aad
xchg
mov
sbb
sarl
insl
mov
mov
je
iret
repnz
mov
shll
adc
mov
test
test
and
and
std
inc
sahf
rorl
outsl
mov
imul
into
cmp
pop
mov
push
jle
mov
pop
add
jno
sbb
mov
scas
or
nop
ret
xlat
push
in
fnsave
push
mov
cltd
ret
pop
xor
lret
rcrb
fwait
repnz
jl
inc
sub
xor
mov
cmpsl
dec
adc
lret
mov
mov
scas
inc
movsb
cwtl
loopne
sbb
int3
or
call
js
fidivs
jecxz
ljmp
mov
out
inc
or
jp
scas
or
outsb
sub
cmp
pushf
dec
mov
sub
mov
add
sub
mov
mov
jo,pn
push
fldt
je
das
mov
cs
loope
sub
pusha
outsb
sbb
data16
push
test
xor
dec
dec
jne
imul
les
jmp
jle
incb
pop
pop
and
or
stos
insl
jl
clc
mov
ret
insl
inc
pop
sbb
cmp
fnstenv
insb
jmp
cmpsb
push
lock
popa
or
push
sbb
inc
clc
imul
cmpsb
adcl
out
popf
adc
push
push
or
ljmp
bound
rolb
fnsave
mov
cmpsb
inc
push
mov
push
dec
pop
pop
fisubl
jbe
and
inc
ret
pop
adcl
int3
imul
gs
pop
mov
mov
into
pop
mov
pop
pop
sbbl
push
jge
pop
mov
aad
test
dec
jg
ljmp
test
addr16
adc
inc
adc
test
and
pop
shlb
sbb
xchg
loopne
cmp
fstl
out
cltd
sub
adc
mov
data16
dec
mov
push
insb
lcall
aad
xor
jae
outsl
js
lds
scas
in
inc
or
cmp
movb
lods
mov
out
stos
jne
inc
push
outsl
fucomi
fisubrl
test
mov
frstor
lret
ljmp
jmp
jns
jmp
movsl
dec
insl
dec
xchg
popf
mov
pop
fiaddl
jbe
imul
xor
outsl
faddl
jl
mov
dec
mov
jg
sbb
into
sti
ret
adc
lret
mov
or
aad
icebp
sahf
sbb
aam
mov
ret
pushf
hlt
loope
out
ficoml
pop
aaa
mov
sbb
inc
hlt
fisttpll
ret
inc
repnz
jns
mov
sub
repz
sahf
jmp
cwtl
je
and
loop
push
adc
aas
mov
les
xchg
out
stc
jecxz
lock
sbb
leave
std
sub
push
lret
xlat
and
ljmp
outsl
shlb
pusha
iret
pop
inc
push
push
xor
ss
ret
cmp
inc
jb
and
sub
fwait
cmp
gs
cmc
and
fbstp
sub
movsb
iret
mov
imul
mov
pop
int3
pop
nop
add
jecxz
and
rcll
sahf
fcoml
inc
repnz
dec
mulb
inc
pushf
xchg
adc
mov
pop
inc
adc
rorl
movsl
xor
mov
or
cmp
ret
sarl
sub
push
and
inc
insb
cmp
aad
jg
pushf
jbe
jae
xor
gs
test
test
mov
ljmp
lock
inc
in
add
ret
cmp
lret
adc
jp
gs
decl
lock
in
jne
cltd
mov
fimuls
int
push
xchg
sub
xor
bound
xor
jns
outsl
outsb
mov
or
fs
je
mov
xchg
test
and
cltd
xchg
cmp
sub
mov
and
shll
lock
mov
jp
testb
cmp
bound
out
jbe
gs
addb
daa
sub
in
push
adc
push
sub
loopne
pop
add
rcrb
xchg
pop
imul
inc
mov
xchg
sbb
mov
mov
mov
mov
push
shll
rcrb
pop
and
nop
paddb
rcrb
ret
lcall
lcall
mov
push
adc
push
sbb
inc
and
push
dec
sub
jb
int
scas
pop
cltd
repz
stc
inc
xchg
ss
adc
dec
insl
das
stos
pop
cmp
scas
push
mov
insl
ja
mov
addl
imul
std
cltd
into
out
or
and
xor
lret
addr16
das
cmpsb
je
data16
mov
popa
cltd
sbb
push
scas
int3
stos
and
mov
aaa
lods
mov
mov
push
sar
mov
rcrl
pop
aam
cmpsl
mov
nop
or
call
mov
mov
je
mov
cmp
cmc
enter
xor
lock
pushf
unpckhps
mov
cmp
loop
cmp
cmpsb
cmp
xlat
cmp
xchg
push
xor
stos
test
aam
xchg
mov
mov
adc
decl
test
iret
std
xor
mov
push
inc
lds
or
fstpl
test
mov
je
mov
ret
adc
test
jo
adc
xchg
je
inc
jo
pusha
dec
out
and
je
mov
mov
movl
sub
fidivs
add
repnz
push
out
jge
or
cld
push
push
imulb
xor
fdivr
ja
gs
dec
xor
xor
and
push
lahf
nop
testl
push
mov
and
stos
jbe
adc
test
mov
cli
adc
mov
and
inc
adc
push
int
pop
out
or
clc
cwtl
jns
ljmp
jmp
pop
sbb
popl
andl
and
or
pop
xchg
mov
pop
sub
in
sbb
cld
pop
clc
jge
shlb
mov
das
int
push
mov
xchg
mov
outsb
ret
mov
add
data16
jg
jmp
loope
jno
arpl
push
adc
lcall
mov
mov
sub
jp
imulb
push
or
movsl
ret
stc
cltd
rorb
xlat
imul
jnp
bound
icebp
adc
push
filds
mov
fstl
cmp
leave
cmp
push
jns
repnz
es
inc
hlt
out
pusha
mov
mov
xor
push
add
lods
sbb
data16
adc
lea
fs
inc
xchg
lcall
or
aad
fisttps
fidivrl
ljmp
leave
xor
and
or
xor
enter
out
ret
in
inc
adc
jo
lods
add
fs
cli
xchg
rclb
and
lods
leave
addr16
ljmp
dec
nop
mov
dec
repnz
lahf
push
leave
mov
mov
dec
add
xor
pop
xchg
movsb
stos
rolb
mov
pop
mov
adc
out
jb
add
cmp
shrb
dec
pushf
or
sti
push
orb
insb
or
loopne
pop
bound
sbb
mov
sbb
xor
and
cltd
scas
adc
fwait
loop,pt
jb
pop
ror
add
addr16
add
repnz
imul
inc
fimull
push
xchg
add
jl
cs
imul
cltd
pop
rcl
clc
pusha
in
cwtl
jl
imul
inc
mov
inc
nop
xor
mov
cld
clc
mov
xchg
jmp
cmp
push
sbb
lahf
pusha
in
mov
in
imul
mov
mov
mov
or
add
and
arpl
mov
arpl
scas
inc
dec
cs
xchg
ret
enter
rorb
mov
jae
add
jb
daa
mov
movsl
inc
sbb
enter
inc
dec
pop
divl
cs
push
pop
jmp
xchg
jno
cwtl
ja
pushf
cmpsb
cmp
mov
insb
pop
and
add
aaa
ds
push
pop
mov
pop
adc
inc
pop
imul
shlb
jmp
pusha
fldenv
stos
push
pop
push
pop
test
icebp
sbb
imul
push
mov
outsb
dec
out
dec
dec
mov
xchg
in
add
lock
mov
shrl
mov
scas
mov
inc
cmp
mov
mov
mov
sbb
lods
movsl
push
cmpsl
mov
cmpsb
lods
mov
adc
mov
shlb
xchg
aam
mov
push
xor
into
cmp
test
jle
dec
add
xchg
adc
subb
in
cli
dec
sub
cli
push
push
jns
nop
jge
mov
adc
cmp
cmc
ret
lock
mov
lret
ljmp
sbb
mov
sub
out
stc
sbb
push
js
gs
clc
cmp
incb
fldt
push
fcompl
cmp
aam
inc
cmp
adc
mov
add
lea
out
out
xor
jae
push
popf
fstp
jo
inc
inc
jbe
sbb
dec
pop
loope
cmp
ja
jmp
cmp
or
sub
rcrl
jmp
xlat
lret
pop
or
cmpl
andb
fdivrp
pop
sbb
fidivl
popf
sub
push
mov
sub
insb
pop
jg
lcall
or
popa
xlat
jmp
cmc
mov
into
xchg
xor
test
insb
sub
test
dec
sub
xor
ss
in
lret
loop
ljmp
push
pop
dec
es
cwtl
jp
mov
aaa
stos
cs
push
out
out
sub
ret
fucomi
in
mov
adc
into
les
push
test
test
push
xchg
pop
dec
xor
out
into
enter
add
xchg
push
or
inc
sub
xchg
mov
rcll
test
dec
or
lahf
add
adc
cmc
mov
mov
insl
cmpl
je
xor
lock
sub
adc
push
pop
or
in
mov
and
je
outsl
call
iret
rcrl
mov
arpl
or
jmp
add
jmp
push
cwtl
or
lcall
fistps
fwait
inc
bound
scas
cmp
jae
dec
jecxz
aas
in
mov
dec
dec
push
sub
test
je
push
cmc
pop
enter
inc
dec
scas
mov
scas
pop
mov
mov
lcall
jg
lret
sbb
aam
lea
lods
into
jnp
shlb
xchg
fstsw
shll
push
sub
add
rcll
stos
dec
and
jl
xor
cmc
push
fildl
jo
sbb
shlb
mov
dec
cmp
stos
cmpsl
push
popf
loop
sarl
mov
mov
push
jge
push
cmpsl
rcrl
push
into
fimuls
div
jmp
sub
enter
fldcw
bound
cmp
adc
psrad
mov
jg
xchg
andb
lea
dec
push
lahf
hlt
ja
cmp
outsb
lock
pushf
cmp
mov
dec
lods
das
cmp
cs
rclb
shl
jmp
xor
jnp
push
xchg
pop
lret
jno
mov
stos
jne
cld
push
out
or
int3
into
fcmovnb
xor
fyl2x
je
ret
pop
adc
xor
in
mov
fadds
pop
stos
into
insb
shll
inc
int
inc
std
dec
dec
xor
popf
test
push
mov
leave
fldenv
xor
je
lret
jge
mov
adc
loope
pop
mov
dec
mov
imulb
jmp
push
cs
cmp
push
xor
push
idiv
mov
fmull
mov
pop
int3
sbb
sbb
call
jecxz
inc
jae
cmp
mov
out
inc
sbbl
push
push
imul
arpl
pop
pop
adc
cmp
ret
jns
and
cmc
sbbb
mov
addl
xorb
lcall
out
cli
sbb
addr16
sub
shlb
push
sub
xchg
sbb
xchg
je
ret
ja
ret
jmp
mov
lods
stc
leave
pop
mov
mov
nop
mov
sar
inc
mov
arpl
in
xor
adc
lahf
loopne
and
mov
addr16
out
mov
std
stos
push
mov
shrb
popf
cmpsl
push
or
mov
mov
repnz
pop
iret
imul
mov
sbb
sbb
jp
clc
jmp
int
mov
fiaddl
movsb
cmovae
mov
mov
sarl
mov
stc
dec
nop
adcb
mov
mov
sbb
scas
mov
mov
xchg
xorl
cmpsl
addl
push
add
add
mov
movsl
jno
dec
lea
aas
sub
mov
icebp
and
pmaddwd
push
jl
pop
adcl
loopne
movsb
cwtl
jns
cmp
enter
mov
mov
jno
lods
insl
and
nop
mov
ljmp
ds
es
fdivs
mov
vfrczss
inc
xchg
sbb
popf
inc
fisubrs
movsl
lods
pop
out
das
mov
pusha
test
rsqrtps
aam
outsl
imull
pop
mov
sahf
cltd
icebp
lahf
adc
in
nop
fildl
mov
or
push
outsb
xchg
jge
jmp
sti
mov
mov
sbb
cltd
imul
dec
mov
imul
shlb
in
pop
pop
dec
cmp
inc
stos
xchg
dec
jb
jb
mov
shl
mov
fistps
add
cmp
stos
test
or
ds
xor
dec
push
pshufw
sub
push
mov
cmp
fld
pop
in
ja
pop
aas
std
mov
push
leave
push
push
insb
cwtl
push
xor
in
in
push
fdiv
push
setae
loopne
and
adc
push
mov
mulb
mov
mov
and
mov
mov
xchg
jns
push
xor
cmp
rolb
xor
lret
jmp
jl
ja
inc
fnstcw
inc
jb
cmp
fs
iret
cli
out
imul
push
inc
scas
ret
mulb
push
sar
fcoml
xor
fdivrs
out
push
roll
out
adc
rorl
cld
cld
jmp
xor
cmp
sbb
mov
dec
jno
jl
pop
jg
sub
dec
xlat
fsubl
xlat
fidivl
sub
mov
sub
xchg
cmc
and
dec
cmp
imul
or
push
jle
and
outsl
out
mov
in
lods
mov
mov
or
loop
mov
sbb
lea
sub
mov
cli
pushf
out
cmc
pop
pop
or
or
cmpb
jecxz
std
js
xor
cltd
push
sbb
mov
js
push
clc
and
jge
pop
hlt
cmp
or
es
inc
xchg
sbb
scas
mov
cmp
fimull
inc
cmp
dec
mov
jnp
sahf
cld
out
std
dec
xlat
pop
mov
xor
stos
pop
add
aad
xchg
mov
sbb
inc
push
jle
mov
mov
dec
in
push
mov
cmpsl
jg
mov
sub
fidivs
mov
test
pushf
pop
inc
shrl
mov
call
and
mov
xchg
jno
adc
sub
mov
and
nop
jo
call
xor
add
roll
and
push
add
popa
sti
jno
ja
push
loop
sub
sub
jb
imul
sub
xor
sahf
pop
in
and
mov
les
mov
iret
out
or
out
lcall
lcall
idivb
xor
xor
sub
push
leave
test
or
cwtl
pop
popf
insb
scas
lcall
pop
loope
cs
out
adc
jb
adc
dec
and
sub
jbe
jnp
adc
mov
and
popa
js
mov
fldenv
cmp
fistps
xchg
sbb
jg
inc
cmp
mov
pop
lods
adc
insb
stos
mov
clc
imul
dec
ja
dec
inc
popf
sbbl
pop
xchg
outsl
fisttps
out
loop
aaa
out
cli
ds
mov
in
repz
cmp
pop
cmp
dec
mov
dec
lods
lahf
repnz
xor
dec
push
lds
adc
xchg
rclb
push
sti
mov
and
mov
and
je
mov
pop
dec
cltd
mov
cmpsl
in
hlt
push
fcmovbe
into
mov
sbb
dec
mov
stos
and
mov
jne
adc
fcomip
or
mov
xchg
jb
mov
pushf
mov
cmp
add
out
xchg
or
leave
add
sub
pop
cmp
and
mov
es
stos
or
or
sub
mov
sbbl
into
scas
into
rorb
cmc
mov
cmpsl
cwtl
mov
add
leave
cmp
jmp
mov
jmp
adc
adc
mov
jecxz
add
pop
xor
sbb
push
pop
push
dec
jns
lret
arpl
ret
jnp
dec
mov
and
jle
xlat
ficompl
out
out
lret
lret
pop
mov
stos
testl
es
aas
das
into
fwait
cmpsl
ret
je
jle
and
stos
jmp
or
push
call
sahf
cmp
das
sub
ljmp
add
mov
mov
push
or
test
adc
loope
les
pop
lods
xchg
out
xor
int3
jae
mov
mov
pop
cmp
lods
mov
scas
dec
test
adc
fstpt
sbb
int
dec
inc
mov
xor
rol
das
inc
nop
mov
sbb
jp
xchg
push
inc
enter
dec
addb
fucomi
outsb
xor
xchg
add
pop
dec
or
arpl
jnp
data16
rolb
add
sub
fimuls
mov
fincstp
jle
mov
xor
sbb
pop
adcb
xlat
out
lods
mov
aas
subl
shll
sub
jecxz
sub
jecxz
jno
popa
scas
push
mov
fistpll
sti
enter
repnz
push
xchg
mov
fdivl
hlt
leave
pop
sub
pop
pop
mov
xchg
mov
adc
jle
push
in
pushf
dec
jno
and
pusha
shrb
mov
icebp
scas
aaa
mov
push
fcomps
jne
mov
pop
out
mov
popa
call
mov
cwtl
fildll
ficoml
or
cmc
mov
mov
out
lcall
dec
xor
and
push
mov
cli
sbb
stos
mov
push
loope
push
ljmp
scas
jp
loopne
mov
add
imul
scas
rolb
mov
and
jmp
lret
mov
out
les
minps
nop
inc
xor
out
gs
gs
dec
ret
in
rorb
or
lea
mov
imull
push
jmp
jae
dec
fwait
push
dec
movsl
int3
cmp
xchg
leave
pop
dec
mov
add
iret
mov
mov
push
and
inc
xchg
icebp
dec
int
pop
sub
mov
push
filds
push
stos
sbb
into
mov
mov
jecxz
gs
sar
pop
push
mov
std
xchg
test
push
pop
ljmp
mov
xor
or
push
push
data16
fisubl
mov
add
dec
sarb
fld
and
hlt
sbb
xor
iret
je
inc
out
or
popf
or
sbb
mov
sti
insl
clc
and
pop
fwait
jle
mov
mov
push
test
push
mov
inc
add
mov
pop
gs
xchg
pop
ficomps
test
stos
dec
test
movsl
xor
hlt
adc
and
sarb
loope
jg
outsb
repz
daa
pop
out
push
fimull
mov
mov
out
lods
into
loop
mov
push
cmpsb
adc
mov
leave
fnstenv
jno
xchg
int
out
sbb
adc
sbb
mov
pusha
mov
testb
in
mov
imul
imul
inc
inc
or
xor
push
cmp
mov
lret
call
aaa
cmc
sbb
push
sbb
fsubl
into
jmp
sub
mov
ret
les
xor
cmp
jp
cmp
jge
sbbl
scas
xchg
add
push
and
adc
mov
test
inc
call
and
pop
or
push
xor
into
jecxz
sahf
movsl
mov
hlt
cmc
gs
pop
fwait
mov
repnz
jp
hlt
cmp
cmpsl
outsb
or
mov
ffreep
jg
subb
xor
mov
arpl
xor
xor
adc
xor
mov
stos
mov
jnp
faddl
call
fs
in
cltd
mov
arpl
vhaddps
pop
jns
xchg
mov
mov
rcl
sahf
test
lahf
pop
ret
lds
popf
icebp
xchg
insb
sub
sub
mov
dec
jle
bound
sub
cwtl
not
mov
cli
mov
inc
sub
sub
sbb
stc
cmpsl
jo
mov
movb
aam
mov
ja
scas
movsl
notb
test
add
lock
adc
negl
mov
fldcw
test
divl
push
es
mov
xchg
jbe
cmp
mov
xlat
push
cmp
push
inc
inc
stos
inc
adc
pop
fchs
movsb
fsubl
and
popa
adc
ja
movsb
mov
mov
sub
andl
push
ficoms
mov
popl
lret
arpl
fwait
shrb
test
xchg
push
pop
xor
imul
xchg
in
jecxz
push
mov
insb
mov
ljmp
lods
les
or
lret
sbb
jmp
cmp
gs
hlt
adc
mov
jb
test
inc
outsb
pop
jnp
mov
fs
gs
std
push
pop
push
or
es
inc
inc
mov
xchg
adc
jle
sub
out
imul
xchg
push
mov
bound
adc
dec
loop
cs
stos
ret
and
or
xor
pop
cli
push
leave
movsl
cwtl
mov
mov
jg
ljmp
jbe
adc
arpl
xor
adc
inc
cmp
pop
loop
jl
fstpl
dec
sahf
push
sub
popf
sub
xchg
mov
loop
mov
sub
pop
push
and
mov
loopne
mov
mov
ja
shlb
cltd
addr16
cmp
test
jg
xor
xlat
shrb
mov
cs
push
adc
addr16
pop
mov
scas
jne
lret
sub
fwait
jo
mov
data16
push
and
push
aad
dec
cmpl
and
mov
mov
les
jge
sbb
xor
cs
jae
in
pop
cmp
addr16
jns
jl
sti
cmc
xor
insb
inc
fldl
sub
cmp
adc
sub
pop
push
sbb
ret
inc
mov
mov
push
adc
mov
outsl
fwait
je,pt
push
movsb
xchg
addb
mov
mov
jbe
addr16
mov
sbb
dec
xor
notb
int3
inc
mov
dec
cmpsl
add
and
add
in
ljmp
mov
sub
cmpsl
fimuls
pop
push
adc
jge
jp
fucompp
jmp
lock
out
sbb
fistl
inc
and
mov
in
aad
rcrl
xchg
sub
sub
cmpb
push
stos
mov
sub
push
in
aad
mov
mov
mov
ja
and
mov
inc
pop
insl
es
aaa
in
arpl
and
jo
xchg
or
xor
addr16
push
xor
sbb
mov
xchg
sbb
pop
int3
push
lds
mov
popa
cmp
mov
sbb
movsb
cmp
in
call
push
mov
inc
jg
ss
push
mov
push
push
xor
stos
pop
fstps
push
push
mov
cmpsb
cs
push
pop
xchg
push
inc
jg
push
fcomp
xchg
mov
xor
sub
xor
ljmp
jb
pop
int3
or
sub
dec
mov
loop
fs
nop
cmp
xor
shlb
lods
sub
cltd
xchg
push
in
cld
ret
fisttps
pop
pop
stos
ret
cs
out
insl
cmpsb
mov
push
mull
inc
jb
mov
push
xchg
xlat
in
frstor
out
add
pop
mov
or
mov
nop
mov
out
jmp
and
or
in
fidivs
or
cmp
adc
push
pop
add
stos
jne
test
sub
sbb
pop
push
dec
inc
arpl
mov
cli
js
lock
imul
mov
cmpsl
out
add
adc
popa
and
jle
xor
and
pop
insb
and
push
mov
aam
pop
dec
gs
pop
jae
sub
or
xchg
pop
mov
lock
loopne
in
sti
mov
lret
or
sbb
inc
mov
push
mov
cmc
inc
push
xchg
mov
xchg
call
mov
jmp
fs
pop
test
das
adc
daa
xchg
adc
ret
jmp
les
js
mov
cmpsl
sbb
and
mov
inc
movsb
mov
pop
les
lret
dec
imul
out
push
insl
fsubrs
ror
pop
pop
add
mov
lds
fdivl
mov
cmpsl
aas
pop
ret
aaa
inc
sbb
cmp
pusha
inc
pop
and
pushl
call
cmp
push
or
stos
ljmp
cmpsb
jp
cli
dec
or
push
js
loope
repnz
fildl
jb
addr16
popf
inc
in
ljmp
jae
test
mov
aad
xchg
mov
ret
test
cmp
stos
and
push
pop
inc
sbb
testb
test
mov
ret
shrl
jl
cmp
into
sub
push
repnz
fnsave
xchg
jecxz
xor
hlt
jl
jle
shrl
push
sbb
ljmp
add
mov
adc
xor
inc
fistps
push
mov
cmc
pop
mov
enter
rcrb
xlat
xor
push
jge
or
sahf
in
inc
jae
inc
mov
jo
xchg
mov
push
inc
aaa
gs
inc
loope
sahf
add
cmp
mov
push
test
aas
cmc
lock
adc
push
sub
std
ret
push
inc
pop
fbstp
jge
sub
fbld
xchg
out
mov
arpl
sbb
mov
xchg
sub
xchg
stos
xchg
repz
mov
add
pop
test
lock
sub
out
mov
mov
push
sub
jae
inc
or
or
push
data16
mov
xchg
insl
pop
sahf
push
pop
mov
push
call
shlb
cmp
mov
negl
das
pop
pop
popa
lret
dec
lods
add
cmp
push
mov
mov
jl
inc
clc
arpl
mov
ja
mov
pop
dec
in
push
xchg
pop
xchg
cmp
lret
cmp
loopne
cmp
and
out
push
mov
dec
mov
divb
fisubl
sub
cmpsl
add
iret
sti
mov
xchg
sub
int
ja
pop
fisubrs
pushf
scas
lock
test
lret
ss
pop
adc
inc
mov
daa
loopne
xchg
movsl
loope
and
jl
in
jl
push
loopne
mov
imul
xor
pop
mov
int
pop
dec
mov
add
or
push
xchg
lock
adc
jl
ljmp
adc
add
rorb
jnp
and
xchg
sub
pushf
cmc
xor
stos
jle
cwtl
inc
push
stos
push
loope
cmp
or
clc
lock
sub
xchg
pop
cld
clc
lret
add
xor
addb
mov
nop
cmc
gs
ret
dec
scas
shll
rorl
addr16
cmp
xchg
outsb
mov
jno
jb
jmp
jne
js
in
inc
cmp
jg
arpl
adc
jno
jp
mov
pop
sub
mov
and
mov
in
subl
mov
mov
push
std
outsb
cwtl
out
pop
gs
cmp
and
dec
cwtl
add
pop
or
push
stos
sbb
test
add
mov
int3
push
dec
add
mov
in
jmp
xchg
mov
jmp
lods
or
inc
add
cmp
xchg
xlat
call
dec
fdivl
fisttpl
nop
pop
jae
adc
aas
jo
pop
xor
sub
xor
adc
sub
rcr
enter
fstpt
push
pop
xchg
xor
repz
shll
fcmovbe
mov
lods
jl
lret
sbb
sub
or
fwait
add
mov
daa
push
in
jle
hlt
cs
mov
loopne
ret
pop
insb
mov
xor
adc
xchg
lret
lock
fwait
hlt
dec
andl
jge
in
xchg
out
pop
dec
insb
stos
fisubl
mov
in
mov
push
adc
push
aaa
mov
insl
mov
movsl
into
or
xor
fiaddl
lahf
nop
outsb
jmp
xchg
pushf
bound
pop
adc
pop
sbb
jl
popf
mov
or
inc
sub
mov
mov
push
mov
lock
popa
jmp
and
dec
and
sbb
in
lret
push
subb
mov
adc
mov
jle
push
xchg
jle
popa
mov
jp
or
push
push
cmp
outsb
xor
sbb
jno
or
sarl
arpl
cmc
add
and
or
stos
bnd
test
xor
cltd
jmp
ljmp
jo
aam
sub
shrb
mov
mov
insb
lret
rcl
sbb
arpl
push
scas
add
inc
push
adc
scas
inc
fiaddl
or
scas
arpl
adc
test
shrb
xchg
add
fstps
sbb
fdivrl
mov
repnz
mov
mov
rcl
mov
jne
push
aam
lcall
dec
jo
push
ljmp
jge
sti
xlat
stos
push
cmp
and
dec
ljmp
neg
sub
and
int3
ljmp
loopne
xchg
popa
in
dec
pusha
stos
stos
js
and
lret
leave
inc
push
adc
test
in
pop
mov
cld
mov
imul
ljmp
pop
xchg
cld
dec
mov
mov
cmp
iret
stos
sarl
push
pop
jp
enter
sub
arpl
cmpsb
jnp
mov
mov
mov
pop
in
xor
mov
jb
jmp
pop
mov
pop
jmp
loope
push
adc
xchg
xchg
mov
notb
add
push
in
pop
orb
fidivl
pop
cmpsl
push
notl
cli
sbb
into
ja
jge
mov
push
add
and
xchg
or
add
mov
das
sub
into
stos
sbb
loop
and
and
into
fs
push
sbb
dec
push
push
loopne
or
dec
js
jecxz
jbe
push
jp
jne
pop
jmp
xor
popa
mov
test
dec
jbe
sbb
inc
stos
arpl
xor
add
add
data16
fdivrs
jnp
rclb
out
out
fstpt
mov
jle
data16
xor
test
gs
out
push
mov
fwait
cmpsb
mov
clc
jbe
ljmp
jnp
pop
hlt
pop
fldt
leave
popa
scas
mov
into
inc
outsb
dec
daa
cmp
test
sbb
mov
pop
repnz
imul
hlt
stc
pop
pop
xor
dec
test
lea
test
mov
mov
rcr
popa
lahf
es
mov
mov
xor
ret
sbb
and
mov
sub
jecxz
sub
mov
xchg
xchg
out
stos
sub
push
out
testl
inc
cmp
or
mov
rcrl
mov
push
adcb
inc
dec
jmp
stos
xor
stos
adc
pop
sub
mov
je
mov
jns
repnz
jge
jo
sub
pop
lods
push
sub
cli
jae
push
fwait
xor
mov
aaa
and
inc
andl
pop
addr16
repz
and
jg
dec
jnp
and
mov
dec
inc
ret
xchg
cmp
sbb
lret
and
adc
xor
in
xor
cmp
in
mov
mov
mov
mov
rorb
push
addr16
fistpl
jmp
fs
mov
lret
xchg
mov
xor
dec
pop
sbb
jnp
jno
cltd
stc
jo
lahf
aaa
jg
sti
jne
cmp
push
lods
pop
sbb
in
mov
daa
ds
ret
lods
das
lods
or
ds
fs
pop
nop
or
cmp
and
mov
xor
xchg
jo
lds
cmp
cli
sub
lret
lods
sbbb
cld
test
inc
inc
jge
subb
insl
lret
xchg
mov
das
add
mov
xor
test
popa
es
sarb
mov
rcrb
test
xchg
cmp
fcoml
add
rcrb
repnz
ja
call
filds
stc
pop
add
pop
mov
pop
stc
mov
jno
rclb
xchg
fdivrs
sbb
sub
sbb
fbld
mov
rcl
outsl
data16
or
push
sbb
leave
sbb
popf
das
and
popa
xchg
test
sbb
pusha
icebp
addl
lea
lods
xorl
and
call
jo
inc
cmp
dec
mov
fisubrs
jmp
sub
arpl
cmp
dec
mov
mov
clc
mov
push
mov
xlat
cmp
cmp
stos
popf
das
mov
movsl
mov
and
repnz
stos
test
lods
stc
lahf
cli
and
push
fs
out
xchg
xchg
mov
mull
jecxz
fldl
pop
pusha
bnd
inc
enter
rclb
xchg
insb
mov
cmp
pop
int
lock
sbb
inc
inc
in
rolb
mov
leave
in
notb
dec
addr16
aam
cld
cmp
negb
lret
jb
movsb
mov
dec
int3
cwtl
jnp
cmp
jno
lret
repz
dec
and
xor
shl
jl
iret
das
mov
xchg
outsl
add
mov
mov
sarl
cmpsb
mov
jae
lods
sbb
notb
push
or
lcall
std
outsb
les
stos
out
xchg
xchg
xor
mov
jg
pop
dec
addr16
lcall
xchg
and
aaa
inc
push
fwait
test
push
push
cli
pop
pop
ficoms
iret
xchg
pusha
orb
dec
sbb
outsb
rolb
popf
mov
bnd
popa
or
les
pop
xor
daa
pop
rcr
jg
sub
jno
lret
mov
mov
sub
pop
dec
xor
les
pop
inc
inc
cmp
cmp
push
roll
loop
bound
mov
inc
cmp
lret
xorb
shrd
cmp
pop
hlt
sbb
adc
mov
cmp
mov
mov
pop
pop
data16
fldcw
sbbl
aad
jno
dec
gs
sbb
jl
sub
mov
mov
out
cmp
aad
test
movl
jecxz
xsave
pop
cs
lcall
mov
inc
leave
loop
in
js
xor
xchg
pop
lret
jbe
repnz
cmp
dec
pop
jo
xchg
sbb
cmp
add
fsubs
fisubrs
xor
mov
lea
push
or
cli
add
outsb
icebp
mov
push
clc
push
int3
pop
jne
jns
xchg
pusha
loopne
mov
inc
clc
test
sbb
movsl
addr16
xchg
mov
sub
add
jmp
jns
daa
into
sbb
hlt
test
sbb
icebp
mov
sti
xlat
ret
and
pop
ljmp
hlt
mov
loopne
dec
addb
sub
and
xor
nop
and
ljmp
inc
xchg
xchg
mov
lcall
adc
lock
pusha
pop
in
jg
cmp
int3
adc
mov
mov
mov
jno
jl
pop
mov
push
and
adc
pushl
push
xchg
test
inc
cmc
paddq
mov
xchg
aad
sub
stos
mov
or
loopne
mov
xchg
les
sub
andl
pop
fwait
ljmp
pop
dec
cld
jne
iret
daa
scas
or
mov
dec
lahf
mov
dec
fmull
mov
mov
hlt
fstpt
add
jl
adc
mov
or
cltd
lds
fcmovbe
xor
or
mov
jno
mov
lods
loope
imul
sub
or
shr
repnz
popa
mov
cmp
or
shll
dec
lcall
pop
push
add
movsl
jmp
js,pn
sub
xor
and
xchg
push
xor
xchg
fdivrp
fiaddl
cmc
push
pushf
mov
mov
push
outsl
xchg
mov
cmpsb
jecxz
pop
insl
push
inc
iret
dec
subb
mov
sub
and
fcomps
pop
out
mov
sub
adc
adc
idivb
fs
fsts
je
mov
aam
dec
xchg
cmp
das
mov
dec
and
jecxz
jg
lea
pop
icebp
sbb
test
mov
jbe
jae
pusha
ret
ljmp
inc
xchg
outsb
pop
and
enter
add
lds
sbb
dec
bound
adc
fldcw
jg
aam
mov
rcrb
jmp
imul
sbb
add
mov
ffree
stos
jnp
cld
add
test
and
push
int3
inc
notl
inc
mov
aaa
jmp
push
and
iret
dec
je
mov
mov
sub
lods
outsb
xchg
dec
roll
xchg
xchg
mov
aad
ds
mov
pop
mov
js
dec
ss
lret
mov
lds
inc
xlat
push
jle
incl
lods
hlt
mov
mov
mov
das
push
jo
cltd
cmp
sub
xchg
lret
std
xchg
ficoms
jle
fidivrl
aas
inc
enter
or
incl
sub
lret
push
add
mov
es
daa
inc
sahf
movsb
shr
push
xchg
jno
ja
add
pop
bswap
adc
mov
imul
ljmp
inc
lcall
cmpsb
leave
mov
lea
xlat
clc
out
cld
mov
loope
repz
adc
pop
pop
mov
push
add
xor
sub
loope
inc
add
push
cmp
dec
xor
cli
cltd
ror
adc
andl
lods
leave
pop
cltd
ret
rcrl
push
jle
aas
jno
pop
xchg
mov
pop
loopne
pop
loopne
lock
insl
adc
xor
mov
adc
add
stc
or
xor
test
das
rolb
sbb
fbstp
outsb
xchg
inc
mov
cmpsl
and
fs
xor
mov
xor
cli
iret
repnz
cmpsb
add
push
ret
xchg
cmpb
lahf
dec
or
cltd
sbb
sbb
rcl
cmp
xor
pusha
cltd
leave
aas
mov
xchg
cmp
mov
js
dec
adc
insb
inc
aad
in
cmp
mov
int
ss
daa
jle
aam
imul
enter
imul
mov
xlat
popf
jecxz
enter
movsb
dec
data16
fwait
xor
push
inc
fldl
jecxz
sbb
inc
aas
add
sarl
add
mov
lahf
pop
or
sub
in
daa
pop
mov
cmp
or
arpl
in
jne
mov
cli
jle
push
into
add
icebp
aas
lds
xchg
cmpsl
hlt
fisttpll
fldl
xlat
ret
or
aas
push
shll
mov
jnp
test
push
mov
fsubs
jl
add
mov
mov
add
mov
xor
jg
les
arpl
imul
sub
or
in
push
rclb
sub
cmp
dec
repnz
fcomi
xchg
fcoms
int
jp
xchg
imulb
into
popf
rep
inc
jno
pop
lahf
outsl
dec
adc
jge
call
xchg
sbb
xor
adc
dec
jl
push
xchg
fsts
xchg
mov
notl
outsl
arpl
fwait
push
xchg
enter
mov
push
fadds
and
mov
insl
in
aaa
xor
mov
inc
inc
inc
lods
adc
cld
scas
int
fsts
and
lds
mov
pop
pop
pusha
xchg
in
pop
gs
fsubrs
in
ficoml
rclb
cltd
lcall
imul
icebp
mov
ljmp
jae
fldt
xchg
xor
pop
xlat
and
adc
repnz
jg
xor
jmp
mov
sub
mov
outsb
mov
adc
mov
push
stc
pop
imul
nop
push
jmp
shrl
cmpsb
add
rcrl
dec
and
xor
lds
int3
out
mov
cwtl
test
push
cmp
imul
mov
lods
xchg
imul
arpl
popa
xor
mov
lahf
cmpsb
or
aaa
jbe
lcall
pop
sbb
mov
cmpsl
daa
sbb
pop
scas
subb
rorb
pushl
loopne
xchg
inc
fwait
loop
pop
mov
fiaddl
scas
popl
push
dec
ss
addr16
or
nop
inc
cli
pop
insl
fwait
or
jmp
mov
push
mov
adcl
in
arpl
clc
push
shr
and
inc
mov
cmp
mov
sarl
cmpsb
add
mov
mov
sub
inc
cmp
fmuls
sbb
adc
scas
cli
push
insl
addl
ret
stos
imul
incl
xchg
arpl
fcomps
jg
inc
and
sbb
std
movsb
dec
in
mov
inc
test
aas
scas
adc
cltd
data16
std
out
faddl
and
loopne
xchg
sarl
adc
jmp
js
imul
xchg
inc
sub
and
xor
das
mov
adc
push
cli
test
sub
pop
push
aad
fdivl
nop
pop
sbbb
pop
cmp
or
push
dec
xor
faddl
adc
lcall
jle
int
test
inc
xchg
mov
jnp
adc
xchg
push
shll
arpl
iret
xor
into
repnz
add
xor
or
lods
rol
aad
and
cmpsl
lahf
cld
and
jno
adc
jecxz
dec
mov
dec
lahf
xchg
or
jmp
jmp
pop
sub
mov
fldt
push
loope
je
jl
out
adc
mov
lea
scas
mov
pusha
loopne
jns
fisttpll
movsl
mov
in
inc
shlb
aad
dec
jno
xlat
jbe
mov
adc
repnz
push
add
cld
in
jnp
shlb
sti
xor
out
cmp
and
scas
sbb
xor
xchg
mov
shlb
mov
test
or
push
fadds
adc
cmp
pop
into
sub
mov
insl
xor
push
ljmp
xchg
and
sub
or
mov
enter
push
pop
bnd
dec
mov
jnp
sbb
ror
cltd
or
add
inc
jns
and
notl
inc
cmp
jge
daa
push
push
xchg
and
mov
fisttps
and
jo
je
cmp
cs
dec
mov
lcall
push
lcall
call
add
mov
adc
mov
dec
sahf
insb
mov
xchg
mov
insb
sub
data16
push
fnsave
aas
dec
test
test
xchg
mov
fs
ss
out
es
push
rcrl
add
adc
loop
jg
cwtl
or
mov
jmp
sarl
dec
iret
inc
cmpsb
xor
icebp
sbb
cmp
movsb
jp
cs
dec
sbb
movsl
bswap
jo
or
ss
inc
push
loope
call
pop
jns
stc
hlt
ljmp
into
jl
mov
mov
das
mov
in
out
sub
pop
fsubl
adc
dec
daa
add
push
sub
xchg
cmp
or
mov
loopne
xchg
stc
js
mov
jle
rcll
repnz
xor
hlt
jmp
mull
adc
stc
cld
sahf
frstpm(287
fs
dec
aam
cmp
das
pop
inc
sbb
mov
push
lcall
or
mov
dec
icebp
sub
sahf
mov
inc
push
xchg
cmc
mov
xor
jle
xchg
rolb
subb
sti
inc
sub
xor
xchg
fmul
das
jbe
std
xor
mov
lea
dec
or
fcoms
cmpsl
test
imulb
push
orl
push
sbb
lods
add
pop
cmp
mov
out
pop
andl
push
sbb
mov
adc
mov
pushf
fnsave
cbtw
addr16
dec
scas
dec
jo
mov
cwtl
adc
insl
nop
and
bound
clc
loop
mov
or
stos
dec
insl
rorl
xchg
in
into
pop
sbb
fs
inc
mov
icebp
inc
cli
das
insb
mov
or
sbbb
add
cmpsl
push
loope
add
movsb
mov
mov
mov
sub
lahf
testl
lock
add
pop
js
adc
cmp
xchg
pushf
fimull
cltd
and
lret
mov
xor
ffreep
pop
mov
jo
sbb
sbb
push
int
inc
mov
mov
sbb
int
fs
mov
xor
test
iret
ret
and
iret
cmp
inc
rorb
pop
scas
inc
sbb
ret
adc
push
push
mov
movl
adc
xor
xchg
mov
adc
ret
xchg
fmul
xchg
cmc
mov
adc
insb
cli
lret
sti
ret
dec
fsubrp
inc
push
pop
xchg
pop
fsub
pop
cmp
leave
dec
and
mov
insb
push
pop
fs
cmp
cmp
frstor
inc
jbe
sbb
push
sub
lret
add
je
ljmp
xchg
movsl
lock
inc
add
jmp
pop
or
jns
jbe
and
add
pushf
int3
arpl
insb
ret
xchg
xor
and
and
sahf
adc
mov
push
adc
add
cmp
test
adc
hlt
pop
xchg
lea
repz
cmp
inc
or
pop
xchg
sub
loop
lahf
aam
mov
dec
inc
lcall
xor
shrl
add
xchg
aaa
inc
sbb
fnstcw
shrl
jo
push
in
xlat
inc
adc
ja
push
inc
repz
stos
dec
fldcw
inc
xchg
in
xor
mov
xchg
cmp
lret
sub
push
out
rorl
push
jne
sar
push
sbb
jmp
ss
inc
dec
pop
sbb
cwtl
sbb
jl
sub
add
test
ja
std
push
cmc
sbb
and
mov
cwtl
ljmp
and
cmp
adc
std
imul
out
bound
jl
or
mov
mov
in
adc
push
jmpw
push
std
add
inc
dec
jae
imul
hlt
icebp
sub
cmp
scas
dec
cltd
lret
in
sbb
jnp
and
sbb
mov
test
notl
mov
adc
cld
xor
js
roll
push
mov
test
or
lods
jns
jbe
jb
sub
mov
dec
into
xchg
cmpsl
cli
mov
into
pop
push
insb
into
lock
mov
pop
shll
movsl
xor
dec
sub
mov
inc
ja
push
xor
fistpll
test
sbb
fiadds
jb
ljmp
or
add
sbb
test
iret
lds
jmp
aam
cmp
or
stos
mov
fdivrl
mov
pop
js
add
in
xor
ror
add
xor
jns
xchg
jp
outsb
out
sti
scas
gs
aam
fwait
lcall
push
mov
pop
push
movsl
hlt
aaa
or
inc
xchg
cmp
lods
pop
call
push
leave
xchg
lret
sahf
aas
ds
dec
leave
popf
xchg
rol
mov
mov
sti
push
shl
sub
sub
arpl
ret
pusha
pop
ror
xor
mov
sbb
xchg
gs
frstor
enter
inc
out
mov
mov
inc
pop
sbb
xchg
lds
lret
movsb
or
push
call
test
add
mov
mov
das
movsl
xor
jo
fidivl
or
ljmp
cmpsl
aad
cld
jb
nop
fcoml
cmc
fldcw
pop
inc
lret
scas
pop
cmp
cmpsb
sbb
sbb
lods
mov
xchg
ds
mov
jb
jecxz
cmp
in
mov
mov
or
xchg
push
jbe
inc
call
call
push
mov
or
dec
lock
cld
mul
cmpb
or
ret
jae
jg
scas
jbe
test
ja
sahf
in
mov
inc
testb
inc
test
inc
stc
fmul
sub
in
lcall
notl
fucom
aad
jb
adc
ljmp
push
cmp
push
in
ds
mov
insl
mov
mov
adc
xor
push
xor
addr16
shl
xor
pop
pop
push
jb
push
xlat
sti
jge
mov
add
push
shrl
or
push
jp,pt
nop
shrb
pop
icebp
xor
dec
inc
icebp
push
daa
and
lods
dec
movsb
jecxz
inc
call
sub
add
or
call
inc
xchg
and
pushf
and
cmp
and
pop
pop
daa
subb
loop
lods
cli
decl
int
mov
jmp
xlat
ret
pop
adc
data16
nop
or
les
cld
sarl
mov
repz
fwait
test
push
int3
rclb
sbb
inc
cmpsb
in
popw
adc
sbb
stos
pushf
sub
sub
in
push
sub
jns
insl
into
lods
lcall
cmp
mov
rorb
cs
popa
add
cld
arpl
out
and
out
arpl
mov
and
lret
rclb
std
xor
stos
dec
adc
jmp
lock
outsl
aaa
aaa
xchg
sbb
addb
dec
dec
insb
and
lock
lcall
push
sbb
clc
jbe
lcall
cltd
test
cmp
or
sahf
add
cmp
notb
pushf
jae
mov
lahf
mov
test
fisttps
pop
ds
xchg
in
pop
xor
fs
les
jae
mov
rcrl
sbb
lods
xor
jmp
pop
insb
loopne
jno
inc
iret
iret
push
or
xchg
inc
inc
aam
cltd
std
cmp
adc
ror
std
rolb
xlat
js
cld
in
rcrl
inc
sub
dec
sti
mov
adc
in
scas
push
icebp
lea
sub
outsl
or
ficomps
int3
cmp
and
push
and
or
lods
cmp
shll
in
and
outsl
push
jb
dec
out
int
add
loopne
pop
loopne
test
inc
push
push
pop
imul
inc
nop
scas
pusha
pop
adc
xchg
xor
add
out
cmp
jge
or
addr16
hlt
aad
push
inc
adc
push
sbb
xor
fisubs
sub
aam
cli
push
pop
movsl
cmp
xor
cmp
cmpsb
dec
in
test
addr16
dec
jg
sub
push
mov
arpl
mov
mov
add
and
sbb
adc
and
xchg
stos
mov
dec
jmp
push
test
mov
rclb
adcl
sub
mov
or
in
lds
daa
out
cmp
lcall
push
or
mov
mov
nop
pop
dec
pop
jb
call
xchg
adc
pushf
loope
repnz
xlat
mov
dec
xchg
add
scas
pop
mov
push
pop
rcl
lahf
xchg
dec
adc
lea
xchg
orb
inc
mov
fdivs
gs
pop
andl
clc
mov
and
xlat
jle
xlat
iret
imul
sbb
push
add
sbb
or
cmc
inc
xchg
cld
push
mov
fbstp
and
mov
rsm
cmp
jge
mov
int
mov
adc
cmp
cmpsb
les
cmp
es
and
into
lea
aad
jle
std
jmp
jo
add
rorb
stc
imul
test
pushf
mov
scas
insl
mov
subb
add
lret
mov
test
les
mov
jnp
fimull
divb
ja
faddl
jge
jp
js
enter
mov
in
ljmp
add
ss
pop
xchg
push
or
add
push
aas
or
jns
aad
sahf
hlt
jno
movsb
mov
dec
fldcw
sbb
mov
insl
or
dec
mov
or
ja
std
inc
ds
dec
int3
enter
adc
rcl
fldl
or
ret
shl
inc
push
pop
and
out
push
lret
inc
or
pop
rolb
mov
aas
fdiv
into
dec
add
sbb
sbb
testl
fsts
and
sbb
stos
mov
sti
loop
cmp
xlat
jl
pop
mull
lods
sbb
fstpt
fnstenv
loop
lods
shlb
mov
popf
adc
popf
push
xor
jmp
aas
testb
or
insl
pop
mov
push
imull
push
lods
add
jnp
mov
pop
push
aad
js
and
mov
loope
inc
cwtl
ret
and
adc
inc
hlt
popf
loop
sbb
jl
dec
fstpl
enter
cmc
enter
ret
imul
push
and
xor
call
push
sbb
rcl
into
mov
xchg
sbb
xor
loopne
mov
and
test
lock
mov
xchg
test
lret
and
testb
lret
std
shlb
aam
lret
mov
in
sbb
xchg
hlt
xorl
or
jecxz
sub
adcb
xchg
inc
loopne
les
les
pop
inc
ret
mov
scas
cmp
or
insb
and
xchg
sub
fstl
stos
pop
clc
insb
xorl
pop
cmpb
add
js
sub
jae
iret
je
sub
ficompl
inc
jne
movsl
add
lds
or
push
popf
inc
jp
sub
xor
adc
or
push
pop
xor
cld
or
pushf
add
les
jecxz
or
addr16
lock
adc
dec
inc
test
dec
dec
sar
mov
pop
je
sbb
and
inc
mov
pop
adc
xchg
scas
mov
ret
mov
stos
mov
jl
out
xor
jo
or
nop
or
fidivs
pop
jp
ja
inc
test
xchg
mov
cli
xor
popa
mov
in
inc
add
inc
add
imul
cs
push
mov
int3
fadds
ljmp
or
cmp
mov
cmp
dec
inc
jp
test
test
dec
dec
sub
add
add
xchg
push
xor
pop
push
insl
test
sbb
mov
and
fnstcw
push
xor
jl
mov
push
xchg
cltd
aad
mov
imul
mov
pop
pushf
es
xor
jmp
push
outsb
sbb
int
ret
imul
add
inc
divb
ss
stos
xchg
lods
inc
mov
arpl
pop
lcall
sub
inc
inc
out
jne
xchg
pop
frstor
shll
lret
pop
mov
push
out
push
subl
inc
sub
outsb
inc
push
sbb
pop
lock
xor
arpl
and
dec
xor
lahf
imul
sub
xchg
pushf
push
inc
in
adc
sbb
iret
das
mov
movsb
rorl
arpl
cld
cmp
pop
mov
mov
pop
jmp
mov
jo
movsl
mov
add
fwait
leave
out
hlt
cs
pop
out
xor
lret
jne
push
dec
pop
sbb
mov
fstl
inc
test
fisubrs
pop
push
aaa
mov
orb
cmpsb
mov
sub
sub
fdivs
jo
ret
add
inc
aam
sbb
mov
pop
stos
cmpl
add
in
loopne
stos
xor
lahf
aad
jbe
fstpt
dec
dec
aaa
test
push
nop
je
aaa
ret
repnz
xchg
mov
dec
dec
fs
xor
push
out
dec
divl
lret
rcrl
mov
loop
pop
cld
orb
lret
sub
test
lret
mov
aas
cmp
xchg
xchg
aad
mov
pop
sub
cmpsb
sbb
pop
add
or
push
lock
daa
inc
outsl
mov
push
mov
xor
lret
subb
cli
mov
mov
lret
inc
lods
in
enter
push
jbe
int
rorl
fadd
addr16
into
dec
sub
sbb
inc
pop
int3
pop
insl
sahf
js
xor
loopne
lret
dec
and
out
inc
dec
aaa
xchg
dec
mov
mov
cmp
lock
mov
shlb
adc
jle
movd
sub
jmp
rol
in
sub
bound
cltd
sbb
aam
lcall
ja
push
dec
mov
bound
test
or
je
xor
insb
inc
jbe
jp
mov
jge
pop
adc
test
lds
out
out
lea
xor
add
xor
loopne
popf
xorl
xchg
jbe
shlb
or
jle
sub
fisubrs
out
enter
leave
cmp
inc
dec
lods
pop
inc
push
inc
sti
enter
rcll
pushf
fmull
scas
loope
hlt
push
xlat
in
and
test
hlt
adc
lea
and
arpl
loope
dec
test
mov
pop
cmpsb
dec
push
mov
das
je
pop
es
test
fstpl
adc
and
cmp
enter
std
cmp
push
mov
jmp
pop
and
inc
mov
push
add
jae
cmp
xchg
mov
nop
or
cmpsb
fistl
jne
fistps
mov
notb
mov
mov
add
add
or
mov
testl
or
mov
mov
jno
in
mov
pusha
data16
lds
cli
ss
stos
cbtw
xchg
out
pop
sahf
insb
and
xchg
fiaddl
xorb
ret
xlat
addb
pop
aad
cmp
mov
sbb
pop
js,pt
jmp
aad
add
je
frstor
add
in
jmp
mov
push
movsl
daa
std
idivl
mull
xor
sub
cmc
in
sahf
fimuls
pop
pop
add
mov
jne
or
xor
adc
rclb
mov
mov
fistps
ret
cli
cmp
inc
ror
push
cmp
inc
sahf
sahf
jge
ja
lea
sub
xor
orb
into
and
mov
arpl
rcrb
fwait
out
outsl
shl
je
mov
call
js
inc
stos
sub
fwait
sub
cltd
in
mov
xor
mov
aad
push
test
jp
jns
xchg
jle
dec
jb
mov
mov
xorl
ds
stos
sbb
fists
push
push
adc
adc
das
scas
push
adc
test
mov
xchg
sarl
or
xchg
dec
add
cmpsl
push
fldenv
add
enter
lods
mov
into
cmp
into
mov
mov
cmp
cld
mov
test
jns
test
lods
movnti
pop
mov
loopne
adc
sbb
stos
or
mov
out
mov
dec
int
aaa
xchg
cmp
cmpsb
rorl
mov
sbb
inc
pop
add
cmp
cs
lea
incl
rorb
and
cli
xchg
loope
ret
or
inc
aas
or
fisttpll
inc
shll
dec
pop
xchg
repz
repz
pop
push
sub
std
fsts
sbb
rolb
mov
gs
sbb
inc
loopne
pusha
fadd
push
xchg
push
jb
xchg
xor
push
test
sbb
fidivl
adcl
and
int
testl
adc
shrl
add
mov
cli
push
mov
sbb
dec
or
sub
pop
aas
lea
jne
sub
mov
sub
cmp
iret
mov
mov
out
mov
adc
or
lret
popa
out
ficomps
inc
dec
aam
daa
jne
filds
in
inc
ss
pop
cmp
int3
in
dec
jae
push
lds
dec
pop
pop
loope
aam
and
out
dec
pop
xor
pop
push
lcall
loope
dec
dec
lret
lods
cmpsb
in
inc
push
xchg
loop
pop
sub
xchg
mov
mov
sbb
mov
xor
cmpsb
je
pop
cltd
andb
mov
pop
out
es
sub
movsl
lret
decl
aam
insl
mov
lcall
scas
pop
je
and
sbb
xor
cli
xchg
repz
hlt
or
gs
adc
push
imul
and
pop
push
xchg
stc
outsb
inc
sub
arpl
sub
inc
pop
cwtl
dec
enter
lods
xlat
test
imul
mov
outsl
loope
or
ds
sub
mov
jne
lds
mov
jae
orb
mov
test
jge
mov
aad
xor
mov
bound
cmp
outsb
xor
sub
mov
stc
push
nop
adc
inc
jecxz
lret
xor
mov
nop
jno
jns
inc
int3
stos
push
insl
loop
adc
stos
lret
inc
sub
or
and
nop
ds
mov
and
mov
lods
xchg
pop
call
test
outsb
orb
outsl
and
je
hlt
inc
fisubrl
inc
in
or
pop
add
lods
cmp
cmc
sahf
pop
mov
xchg
sbb
test
mov
dec
in
notb
push
pop
cmpsl
sub
or
pop
imul
lods
repnz
stos
lret
in
jmp
ffreep
aaa
dec
xorb
sub
sbb
ret
test
sbb
sbb
fnstsw
fildll
incl
imul
push
xchg
ret
cmp
xor
jl
movsl
outsb
rol
loop
divl
das
xchg
in
mov
fistps
pushf
sti
sbb
xchg
in
iret
sbb
imul
aas
movsb
xchg
cmp
sbb
out
pop
mov
add
lret
push
push
in
add
dec
imul
shll
dec
arpl
arpl
aas
fwait
jno
nop
insb
and
dec
push
das
xchg
cli
push
dec
shr
jge
ljmp
xor
push
je
adc
fsubl
jb
lret
mov
ljmp
clc
push
sti
movl
js
add
add
xor
add
add
mov
sub
aad
fidivrs
lods
and
sub
rcll
and
mov
mov
dec
shlb
add
mov
and
push
xchg
in
pop
sbb
fwait
jb
jge
cmp
stc
or
dec
xor
xchg
leave
lock
jnp
fists
inc
xchg
daa
test
add
lods
test
popa
pop
jl
fsubrs
push
cmp
inc
arpl
int
pop
mov
imul
xlat
outsl
shrb
jmp
adc
mov
in
or
lods
cmc
jle
cmp
cmpsb
xchg
cmpsb
loope
and
fimuls
xchg
adc
hlt
insb
lahf
loope
push
mov
adc
insb
mov
iret
ret
xorb
push
lret
popw
xchg
lods
in
jge
inc
or
cmp
lods
jo
cld
lods
je
lcall
cli
and
sti
xchg
cmp
lret
sahf
mull
lds
scas
mov
orb
inc
mov
and
adc
cmp
inc
std
jne
inc
and
fnclex
jno
or
xchg
fdivrl
je
and
das
test
popf
orl
lcall
cmp
sub
ljmp
dec
rorb
mov
sahf
mov
in
cmp
inc
mov
lcall
mov
mov
andb
data16
pusha
addl
je
push
sbb
popa
or
pop
mov
jp
sahf
pop
mov
sub
or
add
cld
lret
inc
sbb
aam
fpatan
ss
sbb
gs
push
enter
inc
fs
sbb
push
hlt
xchg
cmp
shrb
jo
jno
into
lock
divb
or
clc
pop
inc
stos
push
sbb
cli
mov
pop
stos
mov
inc
addr16
lds
mov
pop
aas
mov
mov
idivb
mov
out
mov
push
mov
loope
ds
movsb
adc
add
mov
add
das
loopne
lea
xchg
mov
mov
mov
inc
push
lea
aam
out
pop
cmp
jecxz
mov
repnz
mov
fcmovnbe
dec
dec
mov
mov
lods
inc
adc
repz
int
pushf
mov
cmp
or
sarl
bound
outsb
ja
or
fnstsw
das
js
test
cwtl
sti
xor
inc
test
lret
pusha
xchg
ss
push
pop
mov
inc
cld
movsl
mov
xlat
roll
adc
pop
sub
sub
xchg
pushf
mov
sahf
xchg
popf
mov
data16
cld
mov
pop
inc
repnz
dec
push
orb
xchg
pop
mov
jecxz
rcrb
in
xor
movsl
dec
mov
jns
jg
add
fimuls
inc
bound
push
repnz
push
xchg
aam
fmull
add
xor
xorb
rol
loop,pt
mov
fidivrs
rcll
mov
mov
mov
fstl
sub
mov
pop
xor
dec
cmp
sbbb
jl
aaa
inc
lret
mov
outsb
xchg
dec
in
out
xchg
aam
outsb
jbe
xor
jo
mov
testl
jne
mov
scas
xchg
adc
push
jle
aam
mov
jb,pn
filds
out
fwait
adc
xchg
shll
sbb
mov
xchg
stos
inc
lock
push
push
push
lret
xor
lds
lret
out
je
sub
mov
push
daa
lret
loope
outsl
je
or
sub
sub
out
jnp
mov
in
shlb
mov
pop
push
push
xchg
pop
pop
fsubp
insb
dec
mov
and
and
into
sub
leave
aas
and
aam
addr16
ds
push
add
mov
sub
xor
shlb
outsb
and
inc
psubw
lcall
jb
cmp
enter
wbinvd
push
xchg
mov
inc
int
mov
xchg
pop
test
cmpl
out
clc
fstp
dec
jmp
leave
out
es
enter
int
pop
adc
mov
in
mov
jmp
xor
loop
pop
jecxz
mov
inc
xchg
fcomip
inc
push
cmp
push
and
pushf
mov
movsb
insl
sub
pop
jg
mov
cmp
mov
jge
add
push
push
push
sbb
xor
and
arpl
ret
mov
sub
mov
das
xchg
dec
out
jns
fildl
jo
test
outsb
fwait
dec
fcmovb
jnp
xchg
cltd
xor
in
aad
xor
cwtl
sahf
outsl
dec
add
sbb
jl
or
loop
ficoms
or
adc
stc
in
in
enter
ror
cs
jl
dec
jno,pn
add
sbb
sbb
push
mov
xor
xchg
pop
mov
inc
pushf
icebp
mov
incl
mov
pop
sbb
aas
lret
xchg
sarb
cmpb
movsb
fcoml
aam
cmpb
aas
adc
mov
sbb
push
mov
inc
popa
pop
sti
outsl
int
lret
js
cmp
jb
mov
movsb
or
push
cmpl
test
repnz
sbb
mov
pop
shr
sbb
sbb
dec
in
lds
loop
cwtl
hlt
stos
data16
jmp
add
lret
inc
add
and
xlat
mov
mov
fiadds
jmp
lahf
in
test
and
sub
jmp
pop
stos
sbb
sub
lods
dec
cmp
or
or
push
xchg
sub
mov
xor
and
xchg
out
negl
movl
fdivrl
fwait
rol
jl
mov
add
std
out
ficomps
stc
imulb
or
mov
inc
inc
mov
je
out
mov
cmp
mov
pop
fcmove
jne
inc
ret
and
cmp
and
inc
lahf
pop
in
out
xchg
xor
xor
add
push
add
adc
sbb
inc
cmp
mov
pop
aam
xchg
test
sti
test
fidivrl
jp
imull
cmpsl
cs
xor
test
popa
push
sub
or
mov
cmp
test
jecxz
cmpsb
jns
mov
rclb
jecxz
and
adc
fistpl
rcll
popl
push
or
xor
adcb
cs
ljmp
ss
adc
outsl
push
icebp
incl
rcrb
out
push
lods
aas
out
fbld
fcmovbe
inc
jmp
dec
bound
loopne
lret
sarb
pop
mov
aaa
mov
insb
or
out
dec
testb
xor
pand
pop
mov
rolb
imul
and
lcall
jmp
adc
jl
jecxz
cs
or
scas
cmp
inc
cmpsl
mov
int
pop
enter
xor
sub
lahf
in
inc
test
loopne
and
cltd
in
or
into
sub
xchg
loopne
ds
xorl
or
iret
out
push
xchg
fcom
push
pop
mov
sub
sub
adc
imulb
leave
sbb
jecxz
mov
into
cmp
mov
dec
cld
ret
jne
pop
orl
add
pop
jae
pop
dec
xchg
hlt
sub
std
scas
bound
pop
add
add
xchg
sub
mov
test
cld
mov
cmp
int3
dec
add
dec
inc
ret
cmpsb
test
cmp
lods
dec
ljmp
push
inc
je
leave
out
mov
push
popa
lret
xor
addr16
xchg
cmp
cmp
mov
stc
jecxz
out
xchg
fmull
movsb
push
xchg
push
jle
xor
sbb
push
fsubs
test
sahf
fldt
or
xor
pop
pop
insb
shll
mov
add
and
pop
jp
das
adc
test
xchg
notb
push
jg
into
sbb
add
ret
repz
loope
mov
pop
fcmovnb
in
insl
insl
xor
outsl
fwait
or
dec
inc
movl
sbb
xor
mov
xchg
roll
mov
sbb
lock
jecxz
jl
adc
roll
cld
adcb
ja
sbb
lock
loop
jge
jp
cli
inc
add
mov
sbb
test
push
jl
mov
mov
pushf
jecxz
fisttpl
leave
movsb
mov
rcl
or
dec
out
aad
inc
loop
aad
loop
xor
imul
ret
sub
mov
and
inc
data16
cld
push
push
xchg
xchg
sbb
sbb
popf
push
mov
test
jb
clc
adcb
pop
pop
cmpsb
mov
dec
jl
jge
loope
fdivrp
pop
inc
clc
xchg
cmpl
rol
adc
jns
adc
inc
mov
mov
add
pusha
dec
mov
mov
cld
inc
push
mov
inc
push
in
sahf
mov
ss
xlat
fiaddl
outsb
insl
pop
xchg
mov
das
stos
into
cli
leave
ficoms
mov
push
movsb
call
pop
leave
cwtl
inc
jb
mov
jecxz
pushl
cmp
sub
xor
outsb
xor
in
dec
push
dec
lcall
adc
pusha
cli
sahf
rol
repz
leave
fistl
push
popa
sbb
movl
test
ret
out
fmul
sub
and
clc
push
mov
jg
pop
lret
inc
and
xor
shll
outsb
aad
popf
dec
pop
jbe
gs
push
lret
scas
sarb
and
mov
xchg
ficoml
add
mov
clc
sbb
xchg
and
adc
int3
sbb
jne
loopne
out
sbb
jecxz
pop
std
sub
out
imul
bound
in
aas
add
ret
fst
mov
pop
adc
js
fs
inc
mov
mov
sub
cmpl
iret
outsb
fxtract
stc
call
adc
push
xor
daa
test
mov
jl
stc
roll
ja
repz
pop
cmpsl
int3
push
je
cmp
cmp
into
rclb
in
pop
xchg
xor
imul
inc
inc
nop
cmpsb
lea
add
loopne
cltd
pop
stc
jnp
pop
push
test
data16
imul
les
std
push
lret
test
mov
int
adc
xchg
clc
mov
push
repz
or
mov
xor
cmp
jno
mov
dec
mov
and
sbb
mov
xchg
sbb
iret
stc
push
xchg
push
fcoml
pop
adc
lret
fldcw
std
loope
insb
lcall
out
push
fwait
add
add
les
dec
loop
out
cmp
push
jp
cmp
scas
adc
popa
fwait
sub
rcrb
pop
insl
iret
sub
push
pop
subb
pop
repz
stc
adc
and
mov
orl
call
xor
adc
mov
lea
push
xchg
icebp
inc
mov
sti
lahf
repz
push
mov
repnz
inc
scas
aas
clc
push
rcl
adc
out
popf
lods
sub
outsb
popf
add
and
inc
stos
and
cmp
sbb
push
add
jo
mov
cmpsb
nop
sahf
pop
mov
lods
mov
and
mov
xchg
out
dec
insb
adcl
mov
nop
pop
add
ljmp
sub
sub
cmp
jge
dec
cmpsl
sbb
mov
stos
cmp
cmp
aas
inc
les
dec
sbb
outsl
stos
sub
adc
cwtl
xor
xchg
inc
push
nop
dec
bound
pop
clc
cltd
cmp
nop
stos
into
jge
and
shlb
rolb
push
out
repnz
adcl
and
dec
jl
je
xchg
push
cmc
test
cmpsl
adc
fmul
push
ds
int
adc
stos
fimuls
dec
pop
cmp
loop
cmp
or
rorb
sbb
jne
jnp
in
imul
notb
in
mov
das
cmp
stos
xorb
dec
negl
stos
call
or
sarb
cmp
ljmp
loop
lahf
lock
fstp
mov
sahf
sbbb
push
inc
dec
add
lahf
inc
mov
mov
popa
dec
lds
adc
sub
scas
dec
ljmp
inc
add
mov
pop
sbb
stos
adc
loop
addr16
daa
rol
mov
and
scas
mov
test
hlt
mov
dec
mov
mov
xchg
dec
pop
cld
test
jge
jo
push
std
je
push
iret
cmp
in
mov
rorb
xchg
lahf
xchg
mov
xchg
popf
pusha
ss
jmp
mov
icebp
lcall
daa
mov
loop
sahf
inc
add
add
sub
sbb
test
push
xchg
arpl
dec
or
push
inc
xchg
pop
dec
sub
scas
or
dec
mov
push
and
inc
fdivl
cli
xchg
in
and
out
lods
jno
inc
aas
gs
test
movsb
and
cmc
std
push
shl
lret
jo
fsts
push
add
mov
jg
icebp
xor
out
jg
push
lds
testb
sub
dec
mov
and
mov
arpl
push
orb
xor
add
or
lret
lock
mov
xchg
pop
not
dec
inc
cmp
pop
iret
mull
cs
repnz
dec
and
lds
je
cmp
sub
or
mov
adc
nop
pop
sar
xor
icebp
out
jnp
inc
test
pop
and
imul
mov
fs
xchg
hlt
sub
loopne
cltd
xlat
xchg
sub
mov
sbbl
int
scas
xor
mov
lods
cltd
push
or
dec
test
movsl
fucomp
repnz
sbb
rolb
sbb
dec
push
rorl
jnp
mov
pop
sub
fnsave
dec
add
dec
jge
xor
mov
pop
nop
aad
rorb
jno
cmpsl
or
les
push
shlb
push
in
xor
xchg
jo
fdivr
mov
push
testl
imul
outsl
pop
fadd
mov
xchg
inc
iret
xorb
jmp
xchg
inc
add
push
mov
lret
pop
add
inc
sbb
sub
mov
mov
outsl
add
dec
cmp
xchg
jmp
jl
and
aad
imul
sub
hlt
and
scas
xchg
inc
pop
and
sub
inc
xchg
add
clc
lock
jno
or
cmp
cwtl
dec
add
sbb
lret
aam
inc
ret
push
adc
push
cmc
mov
fildll
lea
and
or
mov
jns
xchg
in
addr16
dec
mov
pop
push
sbb
xchg
inc
push
into
mov
or
mov
adc
add
fs
aaa
mov
inc
sbb
inc
repnz
lea
test
shll
xchg
xchg
pop
jg
xor
clc
ficoml
daa
sbb
pop
pop
add
xor
sub
push
push
out
movsl
push
repnz
mov
or
push
xor
in
push
dec
add
pusha
or
shll
jne
push
mov
xor
or
pusha
or
in
mov
lret
cmp
jnp
push
aad
xor
ss
inc
in
fdivl
or
jle
test
lods
aam
decl
je
mov
out
cld
mov
mov
aad
ljmp
popf
jle
xchg
fisubs
jb
inc
scas
mov
pushf
adc
lret
mov
call
mov
addl
mov
in
jb
sub
sub
insl
shrb
mov
imul
arpl
daa
popa
fistps
movsb
add
push
movsl
adc
cmp
dec
adc
cli
lret
testb
adc
push
jmp
shll
xchg
out
push
ja
dec
and
sbb
lret
sbb
roll
xor
repz
mov
lcall
out
rorb
mov
jl
and
pop
xchg
pop
pop
sahf
js
cmpsl
test
jg
fdivs
cmp
ret
in
sub
mulb
in
enter
sub
xor
pop
scas
jecxz
imul
xchg
or
add
adc
pop
sub
gs
stc
cmp
in
test
mov
lret
in
ficompl
xlat
cs
adc
fdivrl
cmp
mov
ss
cmp
pop
repnz
andb
scas
mov
in
sbb
cmp
or
out
push
sub
and
inc
sub
sbb
xor
jbe
push
mov
xor
dec
mov
push
and
cmpsl
mov
dec
lds
mov
push
cmp
in
scas
xor
push
xor
adc
mov
pop
std
dec
icebp
shll
pop
ljmp
mov
cs
movzbl
or
inc
sbb
fcomps
rcrl
fsubl
mov
push
jbe
fists
loope
jno
nop
loope
jb
fsubl
dec
repnz
add
mov
inc
xor
xchg
nop
into
or
adc
push
cs
dec
sti
sar
test
loopne
dec
jmp
fwait
cmp
fs
in
inc
dec
repz
cmp
test
insl
insb
inc
sbbb
jno
push
ljmp
rol
cs
xor
mov
call
inc
inc
stos
div
push
xlat
mov
jnp
stc
fldenv
and
pusha
push
and
xor
cwtl
in
and
nop
inc
or
ja
xchg
jp
sub
int3
mov
and
xor
int3
xor
or
cltd
jp
inc
lock
jmp
xchg
movsl
clc
imul
mov
cs
dec
mov
outsl
cmc
pop
xchg
in
lock
xor
add
cld
cltd
ds
push
xor
fdivs
cmp
pop
stos
mov
mov
inc
loop
call
fsubrl
and
adc
pusha
jno
jno
xchg
xor
pop
movsb
jnp
outsl
adc
negb
push
pop
out
fidivl
xor
in
xor
cmp
push
fwait
mov
push
movsl
dec
test
and
ret
jno
int3
mov
jbe
add
mov
or
or
and
adc
add
movsl
leave
rcrb
mov
adc
int
es
test
aas
gs
mov
or
xor
xor
popf
outsl
xor
pusha
jne
adc
test
fidivrs
jecxz
cmp
mov
jmp
adc
pop
pop
or
push
jge
xor
call
push
xorl
xchg
dec
fisttpll
jle
push
xor
or
push
and
inc
fwait
mov
lock
sbb
push
mov
ret
movsb
fiaddl
xchg
daa
or
add
insb
rcrl
loope
mov
cmp
imul
popf
sti
and
mov
repz
in
addl
cli
mov
pop
lahf
enter
cmp
ret
and
ds
mov
popf
stos
fisttpll
bound
emms
add
mov
outsb
fsubrs
mov
or
loopne
cmpl
jg
sti
scas
iret
mov
test
push
push
mov
cs
pop
inc
push
or
daa
xor
or
add
sub
mov
cli
mov
cld
imulb
adc
jbe
or
into
sbb
ficomps
loopw
test
mov
int3
dec
mov
sub
push
bnd
xchg
jne
repnz
push
inc
mov
cmp
add
je
inc
push
fdivr
and
xchg
test
aad
push
cmp
jbe
adc
popa
cmc
in
mov
jecxz
imul
pop
add
test
lock
aam
aas
lret
inc
cmc
xor
hlt
pop
in
cltd
popa
leave
imul
cmp
cmpsb
push
pop
pop
cmpsb
subb
push
shlb
pushf
jmp
sbb
dec
mov
add
mov
jg
mov
faddl
sub
mov
sarb
call
stos
fincstp
stc
stos
jmp
inc
sbb
orb
xchg
insb
daa
shlb
mov
xor
iret
mov
push
sub
xor
pushf
xor
fsubrl
or
mov
in
cld
dec
cli
or
mov
gs
jmp
sbb
movsl
push
jb
loope
push
addr16
cld
aad
dec
aaa
jae
add
adc
push
mov
xor
ds
xor
cltd
mov
sub
push
das
fwait
mov
mov
mov
lea
push
ficompl
or
jne
data16
adcb
rorl
stc
adc
push
jb
sub
lods
test
mov
int3
cmp
or
adcl
mov
mov
clc
enter
pop
ret
push
inc
mov
lea
or
fnstenv
push
push
jbe
add
inc
mov
call
outsb
jae
xchg
mov
jle
jae
into
cmp
lea
mov
mov
xor
repnz
push
inc
lret
loope,pt
insl
je
mov
das
push
and
mov
loopne
adc
jo
movsw
jo
mov
xor
test
aas
jns
dec
in
leave
outsl
push
arpl
pop
inc
or
nop
addl
dec
ficoms
sbb
jae
fnstenv
pop
insl
mov
inc
fcomi
ret
jbe
push
jge
inc
sti
mov
dec
loopne
lcall
mov
push
mov
push
cltd
je
cmp
sub
cmp
sbb
fcompl
lret
pop
stos
mov
xor
adc
jmp
sub
inc
cmp
pop
or
scas
push
pop
inc
sbb
lods
test
ljmp
stos
inc
or
repnz
leave
xor
jecxz
cs
pop
mov
sti
ljmp
or
sbb
stc
inc
scas
xchg
push
test
mov
cmp
rcll
sbb
pop
dec
enter
or
jbe
and
inc
in
arpl
out
aas
out
mov
into
sbb
sbb
or
stos
mov
icebp
adc
push
inc
test
push
push
mov
aaa
xchg
ret
sti
xchg
and
in
cs
jecxz
cmc
incb
lods
rorl
imul
push
cmp
movsb
sub
rcr
fistl
imul
xlat
jne
aaa
out
inc
std
emms
mov
imul
and
or
pop
cmp
xor
sbb
inc
add
movsl
lock
aas
pop
mov
fisubrl
mov
xchg
mov
cmp
xchg
subb
xlat
pop
hlt
iret
add
orb
lahf
arpl
xlat
es
daa
mov
jb
cmovnp
or
or
pop
add
cmp
jns
fildl
adc
popa
sub
or
lret
cmp
and
push
lret
or
mov
jnp
add
mov
inc
iret
lods
rcrb
fs
ret
jno
sub
pop
outsb
into
stc
dec
out
cli
or
test
frstor
mov
stos
pusha
pop
xchg
rclb
cmpsb
push
in
push
les
jle
imul
mov
imul
imul
pop
data16
inc
xlat
ss
cmp
push
fcomps
jb
inc
data16
int
lock
pusha
iret
dec
push
adc
pop
stc
out
cmpsb
adc
ds
add
cld
test
adc
mov
cli
adc
pop
add
jmp
movsb
es
mov
retw
xor
cmp
sub
cmc
xor
mov
jnp
add
sbb
repz
xchg
push
push
add
lods
xor
mov
pop
das
jecxz
mov
push
repnz
lods
repz
arpl
pusha
mov
les
push
fnstcw
dec
pop
xchg
inc
or
repz
lcall
and
outsb
mov
nop
aas
loop
int3
push
or
push
outsb
inc
je
cld
pusha
dec
adc
or
sbb
sbb
aad
aaa
xor
cs
ss
addr16
in
jnp
jl
mov
call
jg
les
iret
pop
dec
xchg
jmp
ss
adc
pop
sbb
sub
testl
lds
add
sbbb
jno
int
sbb
or
test
sub
dec
mov
pushf
sbb
outsb
sub
nop
les
js
dec
xor
jp
dec
call
pop
imul
out
stos
or
lret
movsb
mov
sub
cmp
push
test
push
xor
out
sub
add
jp
add
cmpsb
leave
gs
lahf
je
add
and
ja
add
clc
fsubrs
sub
adcb
xor
cltd
rclb
jo
imul
xchg
xchg
xor
inc
gs
mov
adc
pop
cs
sub
js
sub
mov
std
push
add
jmp
or
xlat
mov
push
iret
mov
xor
cmp
push
pop
push
iret
xchg
repnz
insb
and
dec
jecxz
fisubs
cwtl
roll
sub
fwait
pop
test
out
test
aad
inc
jb
jno
es
push
or
rorb
push
out
daa
insl
pop
stos
mov
pusha
jnp
insl
loope
lea
mov
ljmp
fstl
cmp
mov
xchg
cmc
mov
xor
addr16
add
mov
adc
sub
jb
aaa
mov
push
push
jp
ret
cli
inc
or
jle
jbe
adc
outsb
adc
mov
fbld
jnp
pop
pop
push
bnd
jne
cs
inc
into
pop
mov
outsl
mov
mov
or
jle
xor
or
add
and
add
jns
and
dec
sub
cli
out
ss
push
lods
dec
and
cmpsl
jnp
aas
sahf
dec
inc
jmp
push
and
jno
cmpsl
pop
in
mov
aad
cmpl
add
decl
pop
bswap
xchg
and
add
fstpl
xor
out
push
icebp
fiadds
mov
stc
repz
lds
lods
jmp
rcll
repnz
sbb
addb
imul
enter
aas
incl
and
aad
sub
or
lcall
xor
mov
addb
mov
xor
jecxz
and
out
ror
enter
stos
cmpsb
adc
and
shrb
imul
roll
and
fistpll
adc
pop
test
push
mov
sbb
int3
mov
test
int3
cmp
ret
dec
sbb
pop
aas
int3
sbb
outsb
add
push
aaa
add
outsl
xlat
aas
push
lret
sub
sbb
sub
cwtl
mov
jl
outsb
pushf
push
mov
mov
xchg
div
dec
jae
inc
repz
xlat
js
xchg
push
pushf
push
and
loopne
dec
arpl
pop
push
mov
adc
add
mov
lock
dec
imul
mov
les
inc
xchg
mov
xchg
push
pushf
sbb
push
filds
loopne
inc
mov
mov
sub
mov
enter
cmp
movsb
sub
push
add
adc
push
and
addr16
subb
rclb
rcrl
pop
lds
in
fadd
in
test
movsb
and
cmp
outsl
sub
cwtl
out
std
add
adc
pop
xchg
incl
add
pop
adc
ja
sub
push
mov
movsl
pop
sub
inc
sbb
dec
leave
in
hlt
pop
pop
jl
add
notl
sub
mov
pop
mov
arpl
cld
or
add
rcrl
popa
sbb
jge
in
or
mov
xor
xchg
jns
popa
and
fwait
mull
ds
mov
cmpsl
inc
push
rclb
push
dec
loop
mov
mov
call
and
add
out
pushf
mov
jmp
loope
adc
sahf
es
aad
and
loopne
mov
gs
push
jge
imul
mov
clc
loop
mov
in
movsb
out
sub
mov
ret
xor
adc
mov
scas
add
gs
mov
adc
out
pop
mov
lea
mov
gs
shrb
movsl
mov
nop
push
sbb
cmp
scas
jg
enter
or
mov
sbb
or
xor
and
popa
out
imul
sub
fcmove
jle
push
mov
andl
ret
lods
out
jecxz
adc
cmc
mov
inc
and
aad
xor
xor
cltd
adcl
mov
xchg
inc
popa
and
adc
xchg
and
out
les
jae
cmp
clc
call
testb
mov
xchg
repz
sbb
loopne
jns
xor
mov
dec
in
inc
and
ret
imul
cmp
fdiv
add
mov
xorb
adc
push
in
mov
pop
int3
aad
mov
lods
push
insl
rol
adc
push
sti
mov
ret
push
cmp
dec
adc
add
or
pushf
outsl
mov
rcll
sub
daa
mov
into
rsqrtps
cmc
or
rolb
inc
inc
push
sbb
arpl
daa
jle
mov
in
mov
in
jns
mov
jmp
and
jg
or
test
mov
mov
and
dec
sub
aas
mov
jmp
fsts
pop
adc
insl
and
pop
mov
sub
imul
mov
enter
mov
pushf
mov
insb
mov
test
adc
push
in
jo
stc
rol
rclb
mov
or
int3
movl
cs
inc
inc
daa
cmpsb
shrd
movzwl
mov
add
andl
shr
iret
xor
mov
ds
ret
cltd
mov
cmp
adc
mov
push
sahf
push
mov
add
xor
jg
cs
out
lcall
out
xor
or
rcl
mov
out
hlt
in
iret
cmp
gs
sub
dec
fisttps
enter
nop
test
push
xorb
scas
movsl
mov
pop
cwtl
data16
arpl
popf
scas
inc
sbb
jns
nop
sbb
insb
pop
call
es
mov
sbb
jnp
test
inc
icebp
cmp
ljmp
sub
add
inc
sub
xchg
pop
dec
and
jmp
or
mov
mov
data16
lea
cltd
adc
mov
add
in
push
and
das
xor
popa
jl
ds
out
cmpsb
mov
mov
mov
divb
mov
push
repnz
out
push
xor
dec
push
lret
dec
push
mov
and
sbb
add
sarl
pop
pop
ror
dec
or
xchg
adc
add
pusha
ljmp
lcall
mov
dec
xchg
mov
loopne
sub
sbb
popa
aaa
lret
jecxz
and
mov
mov
or
pop
test
enter
adc
into
add
stos
push
les
flds
adc
sbb
jge
pop
repnz
jmp
dec
push
fisubs
jb
ficoms
mov
icebp
cwtl
fidivl
sahf
les
int
out
cmove
inc
dec
push
push
xor
enter
popf
dec
adc
xchg
aam
jle
popa
and
mov
je
xorb
jle
dec
lret
lea
cli
in
daa
pop
test
popa
sbb
sbb
ss
inc
jb
fwait
bnd
pushl
add
daa
pop
push
push
mov
push
cs
sbb
das
inc
inc
add
dec
lcall
aam
repz
roll
or
pop
jno
mov
sub
test
mov
sbb
sbb
int3
std
adc
adc
xchg
sbb
mov
fildll
shll
or
mov
outsb
dec
shlb
mov
int
into
adc
sub
adc
jne
enter
bound
adc
outsb
jp
pop
push
push
xchg
cmpl
xchg
je
je
xlat
pop
mov
push
fsubrs
test
push
jg
add
jo
outsb
lret
mov
mov
in
adc
pop
in
addr16
jmp
or
mov
cmp
aad
hlt
mov
sbb
scas
sub
lods
decl
dec
decl
mov
in
xchg
push
lods
lret
pop
mov
outsb
ficomps
repnz
adc
mov
psubsb
sti
mov
inc
loop
xor
fsubrl
or
rorl
iret
sbb
xor
mov
rorl
enter
imul
ret
stos
inc
clc
sub
lods
mov
mov
inc
inc
sub
les
xor
push
scas
fcmovu
scas
and
pop
jne
inc
popf
jae
xchg
fistps
or
adc
inc
stc
push
outsb
xchg
mov
sbb
lods
test
mov
mov
das
sti
cmp
incl
test
ret
add
dec
pop
push
popa
push
and
pop
aaa
mov
enter
and
or
movsl
push
cmp
ret
mov
sub
mov
or
scas
fnstsw
nop
mov
jns
shrb
xor
aas
lea
call
stos
or
cmpb
bound
inc
xchg
adc
and
jae
ja
mov
test
hlt
add
out
mov
push
out
cmp
add
loope
xorl
jp
and
cmp
inc
stos
push
loop
pop
adc
stc
cmp
adc
fisttps
int
sbb
sbb
cmp
adc
cmp
jl
push
rcrb
stos
mov
in
ret
or
aad
stc
movsl
sbb
loop
push
sub
xchg
sbb
enter
out
test
mov
loope
mov
xchg
sub
push
and
mov
cmp
cmpsl
mov
sub
adc
aaa
jg
mov
jmp
sahf
inc
pop
aam
aad
cs
fidivl
loopne
push
fnstsw
push
in
outsb
pop
or
mov
push
push
cwtl
pop
mov
shlb
add
jne
subl
xchg
js
mov
insb
sbb
push
shrl
out
push
in
xchg
insl
shlb
daa
push
xchg
nop
ret
xlat
loopne
clc
out
pop
add
push
cmpsb
fwait
subl
adc
repnz
xchg
xchg
and
lret
lret
mov
mov
out
jae
adc
xchg
mov
add
xchg
mov
mov
mov
xchg
mov
test
adc
mov
in
pop
push
popf
test
sahf
push
push
add
mov
cmp
fcoml
call
test
cmp
arpl
lahf
lods
lock
push
pop
cmc
in
cmpsl
xchg
dec
xchg
ds
es
fstpl
insb
sub
and
sub
fwait
pusha
int3
mov
test
shrl
out
hlt
adc
clc
nop
sub
lea
outsb
fsubrl
out
es
lods
inc
ret
rcrb
inc
jg
loope
out
xchg
sub
xchg
fistps
mov
and
fmuls
add
mov
pop
pop
ret
sub
push
bound
inc
fdivrp
mov
inc
mov
movsb
test
dec
aam
push
test
jo
stos
sbb
add
sub
das
into
hlt
dec
mov
dec
pop
or
stc
adc
outsl
mov
fisubl
repz
cmpsb
inc
cmc
jnp
hlt
mov
stos
pop
dec
orl
push
insb
addr16
addr16
sbb
sbbl
popa
js
mov
mov
dec
pusha
mov
in
dec
dec
adc
dec
mov
mov
push
xchg
mov
xchg
outsl
movsl
mov
cli
in
cmpsl
push
imul
cwtl
mov
lahf
adc
jecxz
sbb
and
scas
std
enter
int
xchg
outsb
adc
je
scas
inc
push
xchg
lret
inc
int
out
es
sub
mov
rorb
sub
xchg
and
in
dec
cmp
in
cmpsb
adc
ja
pop
pop
repnz
sub
xlat
subl
icebp
out
pop
add
mov
jp
movsb
mov
lret
xor
shrb
add
lret
into
sbb
mov
dec
arpl
sbb
xchg
fldenv
lods
shll
pop
aaa
or
fcoml
jmp
or
pop
add
adc
xchg
and
sbb
push
shll
sbb
mov
jns
mov
sub
push
ror
fs
push
les
and
fsubrs
adc
jbe
ret
sub
lret
in
jl
and
cmp
adc
push
divb
mov
in
hlt
gs
in
fcomps
es
mov
push
repnz
lock
dec
sar
push
sti
out
sbb
scas
pop
shrl
lahf
or
stc
in
add
cmpsb
mov
xchg
sub
dec
test
cmp
xor
sbb
pop
shlb
pop
js
cmc
sub
aam
push
mov
in
cmp
xchg
popa
ljmp
sbb
js
das
sbb
stos
out
add
mov
testl
popa
mov
ficomps
out
ss
mov
jg
sbb
imul
dec
fdivrs
movsl
std
pushf
jl
xor
pop
aad
lock
loopne
aad
sub
jl
clc
xor
cltd
jno
cmpsl
sbb
xor
call
xor
dec
mov
ret
repnz
dec
loop
clc
pushw
jno
stos
mov
pop
push
or
cmp
push
scas
and
gs
mov
pop
test
or
push
push
jne
ds
lods
adc
mov
sub
sar
cmpsb
enter
dec
inc
cmp
daa
push
cmp
lcall
sub
icebp
or
or
mov
push
cmp
cs
and
adc
pop
mov
gs
fwait
div
mov
xor
repnz
sbb
mov
or
clc
aaa
lock
outsl
cmc
call
sbb
adc
push
fs
pop
xor
sub
sub
les
lea
jl
push
lret
mov
addr16
out
movsl
mov
pop
sub
test
pop
pop
aam
xchg
mov
adc
cmp
dec
jp
js
jge
mov
push
addb
xorb
mov
nop
mov
sti
testb
ljmp
and
sbb
lahf
lret
pusha
ds
test
cmp
mov
imul
pushw
and
xor
je
sbb
cmp
sbb
pusha
add
div
mov
shrl
cmc
gs
mov
lods
sbbl
or
mov
faddl
push
daa
push
xor
jne
pop
and
push
pop
out
push
mov
mov
or
adc
hlt
outsb
adc
bound
dec
fs
loopne
cmp
fbld
shlb
outsb
and
insb
xor
fldt
adc
push
ljmp
lock
movsl
das
rcl
cmp
push
mov
sbb
adc
push
pop
or
cwtl
cmp
jae
rcrb
sbb
mov
jns
and
movsb
jno
cmc
sbb
aad
dec
jb
and
pop
aas
lds
xchg
rorb
loopne
mov
es
mov
icebp
aaa
aad
test
fmuls
decl
jae
adc
xchg
or
push
xchg
sub
sti
jbe
imul
sti
mov
test
push
add
and
inc
add
jl
into
cmp
xchg
sbb
data16
jmp
daa
pop
xchg
call
pop
mov
jne
fimull
mov
into
rcl
subb
mov
je
imulb
push
jg
mov
push
insl
sub
std
into
add
dec
mov
sbb
cld
test
xchg
int
lret
inc
xor
xor
mov
mov
fidivs
mov
stos
adc
mov
sub
decl
add
repnz
mov
nop
mov
addr16
negl
test
ret
sub
ja
loope
loopne
pushf
jns
repz
in
out
inc
inc
sub
jmp
xchg
jg
xor
dec
dec
ret
xor
roll
mov
repnz
or
popf
cmp
aam
xchg
pop
mov
or
and
mov
mov
xlat
aad
fimull
mov
jl
imul
xor
dec
in
mov
mov
test
xor
jne
jg
push
xor
dec
or
pop
fst
ficompl
sahf
dec
sub
stc
jmp
ret
mov
adc
xchg
xor
aaa
add
pop
sti
inc
xchg
loopne
and
xchg
mov
test
mov
scas
or
lcall
sub
xor
das
call
pusha
in
dec
bound
inc
shll
test
cmpsb
add
xchg
shrb
jns
shlb
mov
out
dec
xchg
mov
ss
xlat
sub
sbb
pusha
fsub
lret
hlt
push
out
and
mov
int3
adc
aaa
push
adc
or
sbb
nop
out
cwtl
lret
and
xlat
dec
lods
iret
test
mov
sbb
out
xchg
mov
fstpl
inc
cwtl
or
shlb
pop
xchg
mov
cmp
aam
gs
add
xchg
clc
mov
cmp
fidivl
inc
jbe
mov
addr16
xlat
popa
fisubrs
into
lret
or
stos
repnz
and
orl
cld
dec
inc
es
xchg
lds
push
mov
test
hlt
mov
mov
cmp
push
cwtl
lret
aad
sar
xchg
leave
lret
jl
int3
jbe
xchg
mov
cmp
add
rorl
addr16
and
pop
popa
pop
rcll
push
and
scas
xchg
fwait
push
jmp
cmpsl
ret
inc
sub
push
jp
shl
and
test
cmp
or
test
pushf
inc
xor
mov
std
adc
cmp
scas
xor
sbb
outsl
mov
int3
and
pop
pop
adc
sti
pop
jne
adc
push
xor
sbbb
sbb
inc
xor
inc
ss
dec
xchg
enter
push
into
popf
xor
sbb
stos
repz
inc
shl
jae
dec
pop
in
inc
add
loope
lret
fstpl
mov
imul
mov
xchg
push
mov
mov
loope
sbb
out
mov
sub
jmp
xor
into
or
fldcw
aad
imul
cwtl
xchg
mov
int3
fadds
mov
jecxz
in
cmp
add
ret
stos
mov
aam
push
add
cmp
push
push
jb
mov
lock
xchg
add
xor
mov
test
insb
adc
scas
dec
imull
inc
nop
add
test
or
and
jb
lock
jae
inc
shlb
xor
mov
insb
fwait
loope
jb
sbb
push
cwtl
adc
std
push
fwait
cmc
das
inc
je
push
mov
xor
jne,pt
pusha
int3
mov
adc
fstps
or
insb
nop
sarl
stc
in
dec
add
add
xor
stos
fs
sub
xor
cmpsb
xor
and
ja
leave
inc
push
mov
out
aad
or
lret
cltd
sbb
and
pop
scas
ja
int3
lds
pop
insb
repz
xor
rclb
ljmp
xchg
and
xor
lods
out
jne
pop
add
mov
mov
addr16
rolb
imul
adc
and
push
fmull
test
dec
sub
mov
stos
push
push
faddp
out
gs
loop
sub
jecxz
xor
cmpsl
pop
jo
dec
sub
sub
out
ret
fsubrl
cltd
test
mov
jbe
imul
std
xchg
and
in
popf
test
lods
les
ja
rcrl
pop
jns
ficoml
and
jb
mov
add
mov
pusha
xor
aas
std
dec
xchg
push
sbb
jnp
xchg
pop
push
mov
dec
jno
gs
mov
lcall
add
rep
mov
and
outsl
xor
mov
push
outsl
jae
pushf
mov
dec
xchg
in
aam
xchg
mov
xor
jb
jo
popa
outsl
les
bswap
cmp
xchg
pmaxsw
jle
mull
pop
mov
stos
adc
pop
jno
std
push
pushf
cld
sub
lea
jns
addr16
mov
in
mov
cmp
rcrb
jmp
cld
in
aad
loopne
mov
inc
roll
jne
adc
rcrb
pop
add
cwtl
adcb
and
ss
sbb
int
sbb
sbb
sub
and
or
in
hlt
pop
pop
andl
mov
insb
sti
and
jne
arpl
and
mov
or
jo
sbb
pop
imul
add
or
incl
or
pop
mov
nop
sbb
lds
xor
clc
scas
mov
sub
pop
rcrb
jae
adc
int
pop
jno
ret
bnd
adc
lods
or
mov
lock
insl
add
pop
mov
ffree
push
push
in
push
xor
iret
out
mov
cmp
or
mov
ljmp
call
dec
addr16
adc
xor
dec
jne
sbb
push
mov
mov
adc
mov
andl
inc
shl
push
gs
daa
xlat
std
inc
jg
fildll
in
rcll
jo
pop
enter
pusha
scas
loope
aas
insl
clc
pop
subb
cmpsl
jo
outsl
stos
lods
xadd
or
or
xchg
adc
test
push
jbe
sub
loop
outsl
lahf
pop
insb
lods
inc
lods
and
xor
mov
xchg
ret
leave
sbb
repz
ret
sub
cmp
cmpsb
dec
pushf
popf
movsl
xchg
cmp
or
mov
outsb
xchg
adcb
inc
jbe
fcmovu
mov
adc
xchg
outsl
into
mov
loopne
mov
movsb
or
cmp
pop
divb
adc
call
fstps
push
jbe
inc
loope
adc
sbb
cmp
push
sbb
push
lret
movsl
xchg
ret
pop
add
mov
jl
pushf
popa
pushf
cwtl
rorb
movsl
int
xor
adc
cmp
imul
pop
pop
jns
in
sub
std
mov
adc
sub
movsb
orl
mov
js
push
xchg
mov
test
push
mov
popa
enter
ret
jnp
pop
mov
cmpsl
shrl
cltd
insl
inc
add
pop
push
jb
cmp
mov
fstl
dec
imul
sub
fnstsw
lods
add
mov
add
dec
push
lahf
testb
cmpsl
xor
fwait
subb
ror
pop
mov
int
mov
loope
xchg
add
fwait
mov
jne
je
aaa
mov
mov
add
mov
repz
repz
xor
ret
in
jns
sub
add
mov
and
repnz
push
xor
pushf
pop
dec
rcll
and
sub
jge
inc
mov
cmp
mov
int3
jb
push
cmp
call
mov
jl
mov
je
sbb
arpl
and
xorl
js
shlb
das
mov
adcl
rolb
fcmovu
mov
shrb
sarb
mov
push
pop
xor
bound
sbb
ud1
mov
push
mov
lcall
dec
mov
leave
xchg
xchg
adc
dec
push
int
scas
lea
push
xchg
mov
mov
shrb
dec
mov
xchg
cmc
test
fldcw
push
jge
jns
and
jbe
lret
mov
cmc
out
mov
ss
sbbb
js
aam
dec
adc
mov
mov
jae
inc
int3
stos
push
pop
int3
adc
xchg
cmpb
ss
addr16
aad
jp
push
mov
pop
lock
push
adc
mov
xor
dec
jg
add
decl
frstor
movsb
addr16
and
mov
stc
sbb
cmpb
int
or
sub
into
mov
mov
xor
ja
aam
mov
aad
jle
inc
rcl
scas
mov
imul
fs
jo
sbb
int
loope
je
push
out
testl
cmp
sahf
mov
cmpsl
jnp
jmp
adc
ds
sub
jecxz
es
mov
insl
nop
mov
jno
mov
mov
jle
test
xchg
pop
inc
mov
mov
loop
les
movsb
enter
jns
adc
scas
xchg
lret
mov
jb
mov
add
jo
jne
fscale
sub
cltd
cwtl
or
adcl
sti
xlat
xor
ss
imul
mov
add
dec
push
xchg
push
out
xchg
sahf
pushf
shll
mov
lret
loop
xor
pop
cwtl
repz
clc
pusha
lock
scas
ficomps
in
imul
mov
jmp
fidivs
adc
mov
mov
mov
fisubrs
lea
mov
xor
add
xchg
pushl
push
mov
movsb
cmpsb
xchg
cmp
adc
rorb
mov
and
loop
sbb
movsb
in
bound
and
popf
add
popa
fdiv
sbb
mov
xchg
xchg
aas
sbb
and
fxch
jns
push
xor
mov
cmpsl
push
adcb
pushf
jae
push
mov
xchg
pushf
lcall
adc
push
jl
xchg
add
js
cmp
popa
add
or
cmc
mov
or
fbld
add
mov
ss
inc
rclb
xchg
div
out
inc
pop
lods
fistl
aad
xor
mov
inc
es
lcall
in
mov
inc
stos
mov
loope
aad
lret
dec
fs
fstp
sub
mov
mov
xchg
rcll
lods
sub
jb
mov
inc
xchg
arpl
jbe
dec
lds
mov
push
pop
adc
add
aas
int3
sarb
imul
sahf
pop
cltd
leave
push
cmp
pop
repz
ljmp
xor
je
outsl
sbb
adc
sub
call
lcall
adc
adc
ljmp
inc
xor
lods
pushf
popa
push
inc
cmp
adc
xchg
push
dec
push
or
das
cld
sbb
pop
pusha
mov
adcb
jbe
xchg
test
lods
xchg
jbe
insb
popf
cmpsb
jno
out
movsb
adc
xchg
mov
aaa
mov
stos
into
test
mov
icebp
and
loope
mov
adc
jge
xchg
das
inc
sti
fisttpll
fildl
jle
insl
or
pop
inc
dec
popa
nop
out
loopne
sbb
outsl
or
xchg
push
jns
mov
fldcw
add
shr
cmp
outsb
mov
pop
mov
lds
jecxz
cmp
fisttps
xor
push
jns
or
xchg
ljmp
push
js
in
mov
or
adc
lret
cmp
repnz
loope
fildll
mov
sub
lcall
outsb
or
dec
xor
mov
mov
dec
into
arpl
cmp
dec
pop
ret
xchg
call
in
jbe
adc
cltd
adc
mov
les
sub
out
or
popf
and
cmpsb
mov
inc
dec
icebp
xor
add
mov
je
mov
mov
cmc
fldcw
push
mov
int
adc
cmp
in
push
icebp
mov
jb
icebp
aas
insl
sbb
sub
mov
fiadds
lahf
fdivrl
xchg
sbb
movsl
daa
movsb
add
out
hlt
test
repnz
pop
xchg
cmpsl
and
dec
mov
in
lds
fisubl
xor
lds
xor
mov
jo
add
mov
push
in
dec
ss
cmp
pop
dec
sbb
xchg
shl
adc
cmp
mov
out
stc
jbe
mov
and
movsl
je
scas
cld
mov
push
scas
popf
xlat
jne
mov
jo
movb
in
lret
add
push
shl
pop
es
push
cltd
out
ss
ret
adc
xchg
stos
cwtl
int3
xchg
inc
xchg
mov
add
ret
test
mov
imul
sub
or
bound
and
iret
test
mov
iret
fs
and
cld
rolb
inc
jg
mov
gs
aas
and
popa
stc
and
nop
xor
or
js
outsb
sub
jns
loop
adc
fcomp
push
into
mov
cld
fistps
aaa
sbbb
js
rorl
sbb
jecxz
sub
addb
add
jp
cld
scas
addb
fsts
stos
mov
ja
jnp
imul
and
ds
dec
leave
ret
incb
mov
stc
movsl
sarl
sbb
mov
jbe
lahf
xchg
lahf
mov
outsb
jg
icebp
dec
xchg
dec
in
cmp
rorl
scas
pop
popa
movsl
hlt
lods
xchg
mov
xchg
xchg
test
add
mov
mov
lcall
mov
sbb
dec
pop
shl
insb
inc
cmpl
sahf
cmpsb
mov
or
mov
and
push
imul
out
push
lret
mov
cmp
mov
mov
loopne
out
rdpmc
aad
mov
pop
adc
cmpsl
mov
add
dec
mov
pop
sbb
sbb
jno
inc
push
cmp
test
cmpb
hlt
loop
lahf
aad
xorb
int
mov
sbb
push
shrl
inc
out
in
sti
push
add
mov
roll
pop
pop
addr16
or
and
aaa
in
jae
add
or
push
mov
adc
sbb
mov
shll
stc
mov
xchg
int
pop
and
lock
jmp
orl
xchg
add
imul
test
push
sbb
mov
mov
int
sbb
mov
out
out
cmpsb
adc
xor
fdivl
repz
sub
scas
lods
mov
jp
xchg
nop
faddl
lods
add
std
cwtl
inc
adc
loopne
fdivl
xor
jns
loop
in
jno
mov
stos
push
and
pop
int
mov
push
sub
jl
inc
repnz
out
xor
mov
sqrtps
pop
jbe
les
rclb
cmp
cltd
test
sub
jmp
divl
scas
outsl
sub
addb
mov
movsb
xchg
pop
sbb
mov
mov
aas
cmp
repz
jae
push
call
inc
cmc
lods
ret
push
mov
add
je
jle
mov
mov
jnp
adc
push
push
mov
xor
xchg
inc
pop
call
or
mov
dec
sub
xchg
add
ret
lds
rcr
in
push
mov
pop
sub
sub
icebp
xor
mov
cli
or
test
and
divb
mov
pop
pop
es
sub
sub
mov
mov
das
xor
sub
mov
pop
jmp
mov
icebp
in
sbb
add
arpl
sti
mov
sub
and
mov
dec
or
ret
in
jno
test
mov
orl
cmpsl
popa
loop
jle
mov
mov
mov
cli
mov
ret
or
nop
mov
mov
pusha
popa
sbb
adc
test
pop
push
scas
sahf
or
movsb
and
jne
adc
fcoms
dec
mov
pop
sarb
mov
gs
inc
loop
clc
fbld
and
xor
outsl
imul
outsb
cli
out
xchg
or
sub
mov
and
jne
sub
cmpsl
dec
popa
test
ficoml
jno
mov
dec
jge
in
push
imul
cltd
fists
mov
cltd
gs
in
dec
mov
sub
sahf
rcrl
movsl
inc
out
mov
pop
mov
fs
pop
ja
outsb
ds
test
data16
add
mov
and
adc
pop
stos
bt
js
out
test
mov
test
orl
popa
shlb
push
dec
add
shrl
xchg
jp
pusha
movsl
das
in
xchg
xchg
adc
jb
aam
mov
test
pop
rcrl
and
cltd
movsb
mov
in
dec
push
icebp
in
xchg
aad
dec
jle
stc
mov
cmpsl
mov
push
in
scas
push
push
sti
mov
push
das
lret
jmp
and
xchg
nop
fucomip
jnp
lds
xchg
cwtl
pop
cmp
xor
mov
test
jmp
clc
lods
lods
jmp
jg
mov
cmp
dec
popf
mov
mov
aaa
push
or
add
push
stos
cmp
adc
push
enter
sub
movsl
cld
imul
scas
push
xchg
outsb
xchg
xchg
addr16
enter
dec
pop
jbe
jg
inc
cmc
mov
lret
xchg
dec
pop
ret
pop
mov
notb
push
jl
mov
sub
xor
mov
shll
fidivl
popa
je
enter
stos
int
fidivrl
movsb
test
mov
add
sub
mov
push
sti
sub
lds
cmp
jo
push
popa
sarl
pop
xchg
cltd
pop
jne
scas
icebp
mull
dec
xor
xor
subps
shll
adc
mov
lret
fs
inc
in
cwtl
repz
cwtl
insb
daa
pop
mov
imul
inc
dec
outsl
and
test
push
fisttps
xchg
in
es
adc
stc
arpl
jns
lods
mov
xor
test
sub
jae
mov
fcmovnb
leave
and
testl
aas
cmc
inc
jge
mov
mov
aad
push
dec
mov
jne
xchg
pusha
aaa
cmp
mov
dec
cmp
mov
stos
sub
or
jnp
adc
mov
or
data16
sbb
cmpsl
shll
lret
dec
div
jne
xor
mov
pop
add
pop
dec
add
insl
pop
cmpsl
push
mov
ja
idiv
jl
add
lahf
mov
push
cmp
sarb
mov
aaa
push
sarb
movsb
loopne
push
pop
push
and
push
jb
or
sub
add
jo
mov
ljmp
dec
rcll
mov
call
int
testl
xchg
call
enter
mov
jecxz
sub
lret
ljmp
add
adc
xor
sbb
adc
inc
mov
cmp
out
stc
mov
sbb
jg
gs
imul
xor
cmp
outsl
xor
mov
push
jnp
shll
jno
xchg
jge
add
adc
enter
mov
add
inc
jns
push
loopne
pop
in
or
jae
sarl
mov
call
fstl
sub
mov
rcl
lret
jb
push
inc
shrb
mov
pop
in
dec
repz
sub
xor
pushf
and
jge
fsub
pushf
pusha
inc
mov
rolb
outsl
mov
imul
in
test
cmpsl
nop
xchg
mov
addr16
out
mov
dec
xor
cmp
cld
and
jmp
inc
lods
mulb
pop
mov
repz
add
loope
out
mov
ds
out
aad
xchg
popa
out
mov
inc
xor
mov
mov
xchg
lock
popf
push
jnp
gs
pop
lock
adc
lock
inc
ljmp
or
xchg
out
ret
and
out
push
jnp
inc
test
push
loope
lock
sub
push
cmp
cmp
pop
dec
and
shrb
ds
add
mov
sahf
jnp
stc
push
jne
lock
and
add
mov
les
in
mov
testl
mov
mov
test
push
pop
inc
cmpsl
arpl
rcrb
xor
adc
lret
sbb
lret
aad
jmp
cwtl
pushf
xchg
sar
cmp
scas
or
push
addr16
ret
xchg
popl
and
mov
aam
sub
jecxz
mov
stos
je
sbb
mov
js
adc
std
stc
push
mov
mov
mov
es
mov
or
push
repz
adc
dec
cmp
pop
addb
aam
push
and
xchg
xchg
icebp
dec
push
cmp
jno
push
aad
in
imul
inc
sbb
mov
pop
inc
enter
pop
jg
ret
sahf
mov
sbb
test
test
jo
push
push
cmp
aad
mov
stos
ja
sahf
add
imul
xchg
sbb
inc
ljmp
mov
je
xor
sbb
mov
jl
ret
test
fcomps
ret
cmp
stc
cmpsb
rclb
lret
std
adc
cmp
imul
loope
xor
in
inc
pushf
xchg
xor
daa
xor
ror
test
fsts
jmp
push
and
pop
andb
fsubr
test
ljmp
pusha
pop
push
mov
lock
mov
push
cmp
out
imul
fcmovnb
mov
cmp
ret
push
mov
xor
add
adc
int3
mov
adc
sbb
push
sub
bound
xchg
sbb
jle
enter
push
sbb
movsb
cld
imul
rorl
in
mov
cmp
lahf
xlat
daa
scas
mov
int
add
pop
cmp
pop
outsb
shl
push
mov
jle
pop
sbb
and
stc
push
addr16
sub
shlb
xchg
scas
insb
sub
sarb
push
ljmp
es
pop
jbe
push
pushf
dec
jmp
mov
lcall
sbb
lret
push
sti
mov
lcall
or
incl
push
dec
sbb
icebp
pop
shlb
jbe
in
into
int3
mov
or
dec
icebp
mov
fisubs
sbb
pop
stos
sub
xchg
popl
add
lcall
inc
sbb
ljmp
push
inc
nop
fstl
fidivs
lods
xchg
inc
cmc
adc
cs
xor
into
xchg
addr16
and
repz
fcmovnbe
fnstcw
dec
or
jmp
inc
xor
and
mov
test
test
hlt
das
out
sti
jnp
pusha
xor
xlat
lcall
or
mov
add
cmp
cmpsl
push
inc
and
add
inc
dec
in
sti
aad
out
dec
mov
or
cli
lock
push
lea
mov
adc
das
loope
sti
inc
cmpsb
std
mov
test
jmp
repnz
jo
jne
lock
pushf
test
mov
ret
pop
mov
or
int
jl
inc
push
add
dec
jle
shll
inc
insb
minps
push
out
or
add
cmp
cmp
int3
test
push
sbb
xor
faddl
cltd
xchg
push
adc
jg
loop
mov
out
mov
mov
and
jmp
lahf
ds
cwtl
xor
mov
fbstp
or
sti
lods
pop
repz
mov
pop
aaa
movsb
pushf
mov
mov
push
outsl
aaa
lods
outsb
imul
sub
repnz
scas
inc
int
add
out
inc
xor
jo
sbb
mov
adc
loopne
sbb
pusha
pop
ficoml
push
pop
lock
jbe
cmp
lods
mov
jl
sub
sbb
add
testb
or
roll
rorl
adc
pop
mov
int3
xchg
xchg
imul
push
sbb
enter
push
jle
push
mov
fstp
push
jl
outsb
shll
xchg
and
es
loopne
icebp
repnz
inc
ret
inc
arpl
add
xchg
add
addr16
out
lahf
imul
mov
arpl
movsl
lcall
sub
aad
or
es
lea
mov
popf
leave
pop
inc
int3
adcl
jnp
fistpll
cmp
stos
in
call
xorl
andb
std
mov
mov
inc
sti
sbb
adc
pop
adc
stos
ss
mov
jle
and
xor
xchg
or
movsb
jg
fwait
mov
add
clc
fldt
fidivrl
aaa
adc
jae
sub
dec
stc
push
imul
xor
jmp
add
lods
push
out
fwait
cmp
gs
ret
jns
and
adc
dec
mov
jmp
shrb
imul
je
lcall
mov
arpl
mov
jb
dec
rolb
lods
in
ss
pop
sbb
mov
aad
cmp
sub
xlat
mov
imul
mov
insb
scas
popa
add
icebp
lods
lahf
dec
push
mov
popf
pop
movsb
outsb
in
out
sahf
neg
cmp
aas
cli
fs
les
out
push
jp
js
aad
push
ret
push
jg
mov
sbb
xor
and
pop
xchg
push
fstpt
subl
rcrl
pop
cmpsb
repnz
cld
sbb
mov
ljmp
ja
jbe
pop
js
sti
stos
test
std
sbb
shrb
ljmp
push
pop
lcall
xlat
mov
add
in
cmp
ljmp
fisubl
push
notl
ret
leave
and
push
add
pop
jnp
jge
adc
inc
xor
aaa
cmpsl
test
mov
jae
mov
xlat
push
mov
sub
sti
push
hlt
inc
mov
mov
and
aad
push
ja
fs
mov
loope
jl
inc
imul
faddp
inc
push
scas
ret
cmpsl
stos
dec
jle
iret
aas
inc
into
ds
pop
rcl
lahf
in
jae
rcrl
sub
xor
lcall
mov
pop
xchg
mov
pusha
adc
out
mov
insb
rcrb
pop
icebp
cmpsl
popf
sti
xchg
mov
outsl
xchg
inc
pushf
pop
pusha
scas
add
imul
daa
push
jmp
sub
sarl
push
js
popf
prefetchw
sbb
insb
push
divb
mov
add
shll
inc
dec
testb
push
push
sti
xor
dec
add
stos
into
jnp
adc
clc
dec
in
loopne
ljmp
insb
dec
aam
sub
push
inc
int3
cmp
pop
mov
cs
xchg
push
ret
xor
fsubr
mov
lods
xor
popa
test
pop
in
imul
pusha
cmp
sub
fucomi
add
mov
andl
pop
insl
mov
xor
xchg
sar
aad
repz
rcll
iret
aam
fwait
icebp
cmp
mov
rcrb
push
sbb
adc
fisttpll
leave
cmp
cmpb
je
pop
push
ror
in
pop
xchg
sbb
and
hlt
imul
mov
pop
xchg
loop
out
sbb
inc
and
mov
lcall
sbb
imul
imul
jp
lock
mov
mov
imul
cwtl
sbb
jge
adc
clc
clc
xor
call
test
js
xorb
adc
repnz
pop
mov
cs
and
pop
push
sub
and
push
mov
and
gs
js
ja
mov
adc
mov
hlt
jg
mov
lods
fisubl
cmp
lock
popa
and
jle
push
pushf
in
fisubrs
sahf
pop
push
loope
repz
push
add
roll
ljmp
das
inc
std
lcall
int3
pop
arpl
test
push
cltd
sub
cmp
mov
jno
inc
outsl
adc
int3
adc
push
push
fistl
push
adcb
fwait
adcb
or
mov
mov
push
les
lods
pop
jle
dec
pop
xchg
pop
dec
pop
int3
cli
push
xchg
lock
adc
add
xor
loope
ret
aam
lock
mov
shll
std
mov
fimuls
inc
jl
mov
sbb
xchg
pusha
insb
int3
sbb
mov
or
mov
mov
inc
daa
sub
pop
mov
xorl
jno
movsl
mov
adcb
mov
add
push
bound
lret
rorl
xchg
fstpl
mov
push
js
mov
inc
cmp
pop
inc
ret
adc
mov
push
dec
dec
scas
hlt
cmc
loopne
fstp
adcb
mov
loop
ja
repnz
in
orb
or
dec
hlt
int3
fbld
stos
mov
lds
fst
pushf
lret
add
out
lods
inc
push
sbb
xor
jo
or
mov
test
cs
or
inc
mov
mov
mov
in
mov
xor
jmp
leave
sub
les
jg
mov
jecxz
xor
scas
iret
test
sub
aas
xchg
dec
lcall
push
dec
mov
xor
add
in
mov
adc
dec
in
imul
cmc
mov
pop
movsb
xor
or
or
mov
sahf
xor
mov
jne
call
outsb
ret
jo
fildll
push
fildl
inc
adc
cli
and
adc
cwtl
out
dec
and
fnsave
mov
roll
test
mov
cmp
xchg
in
lea
loopne
fwait
inc
aas
push
lods
mov
mov
xchg
adc
push
iret
mov
mov
add
andb
and
push
jle
mov
mov
inc
shrl
leave
adc
dec
push
or
add
mov
repz
pop
cli
insl
pop
xorb
ja
pop
mov
cld
jp
dec
push
jl
ljmp
cmc
adc
jae
jl
dec
mov
mov
xor
add
sub
lock
pop
test
imul
loope
test
or
mov
into
icebp
jbe
sub
pop
popf
imul
and
sbb
cmp
int
xor
pop
aam
sbb
leave
hlt
pushf
mov
and
loop
cmp
dec
and
popf
jg
mov
inc
mov
mov
incl
mov
adc
clc
xchg
dec
arpl
pop
inc
movsb
in
mov
insb
dec
jecxz
dec
mov
inc
ret
insb
insb
xchg
lock
orl
and
cmp
cld
jp
popf
jle
or
mov
and
movsb
jne
and
insb
sbb
aam
cmp
mov
and
mov
dec
data16
xchg
or
mov
in
add
arpl
mov
arpl
xchg
xchg
inc
movsl
test
mov
mov
sti
mov
cs
cmp
rorb
aaa
mov
jle
mov
fiaddl
sbb
mov
mov
inc
push
test
ja
filds
idivl
rcr
loop
inc
arpl
jns
mov
in
xor
jle
dec
xchg
jecxz
inc
push
push
inc
xor
jnp
lcall
bound
add
lea
add
imul
enter
arpl
fdivl
cmpsl
repnz
jno
lahf
sub
pop
adc
cmc
push
mov
into
cli
dec
in
test
lahf
jne
sbb
add
sbb
pop
jecxz
jl
add
dec
xchg
int3
test
int
cltd
iret
out
out
repnz
jb
push
jnp
jecxz
arpl
dec
sub
mov
fnsave
out
test
push
stc
push
sub
push
pop
xchg
pop
inc
and
xor
ffree
loopne
inc
xor
neg
push
and
inc
rorb
xchg
xor
test
mov
dec
sub
pop
xor
loopne
fiadds
test
sub
sbb
xchg
push
xchg
fcompl
xchg
fmuls
cld
sub
mov
adc
inc
xchg
adc
insl
lretw
incb
bound
out
adcb
sub
dec
xchg
lock
into
dec
add
clc
in
push
stc
add
sbb
adc
lds
xorb
pop
sti
pop
notb
gs
movb
cmp
dec
push
scas
pop
lcall
push
cltd
xchg
jmp
int
sbb
mov
mov
mov
inc
xchg
add
push
shlb
std
movsb
out
and
pop
movsl
xchg
pop
test
imul
gs
adc
mov
loopne
clc
loopne
inc
scas
sti
into
add
leave
pop
inc
cmp
jmp
imul
inc
cmp
fdivrl
push
sub
jnp
jmp
and
es
push
sbb
ss
push
mov
cmc
push
mov
fstl
sub
jg
lds
sbb
jb
les
xlat
mov
mov
repz
push
cwtl
pop
icebp
mov
cld
stos
stos
sbb
stc
icebp
ffree
js
mov
dec
fidivrl
inc
imul
loop
leave
stos
mov
mov
arpl
test
push
mov
mov
lock
fnstcw
cmpsb
addr16
and
sti
inc
test
jbe
lahf
in
inc
lods
icebp
add
fsts
jge
lcall
mov
jo
rolb
xor
mov
sub
xchg
lods
fbld
mov
rcl
daa
lcall
js
das
scas
in
imul
popf
mov
jecxz
lahf
jno
and
rolb
out
stos
sub
pop
sub
push
mov
cli
dec
shll
ja
rorb
outsb
pop
hlt
stc
and
nop
int
jmp
mov
jl
sub
push
fstpl
clc
add
jbe
add
xchg
and
stos
push
or
repnz
or
xchg
xor
jle
call
sbb
jmp
push
arpl
adc
pushf
xor
lea
push
inc
xchg
jo
popa
sahf
imul
loopne
loopne
push
sub
xlat
adc
adc
sbb
sub
ret
cmp
outsb
mov
adc
xchg
cmpsb
push
icebp
out
or
imul
cmp
xor
stos
inc
shl
xor
pop
pop
in
pop
pop
adc
jp
and
jns
psadbw
cmp
cmp
cwtl
jnp
jmp
jae
cmpsl
pop
push
cmpb
pop
out
lret
dec
addr16
mov
cs
scas
testl
sub
adc
mul
jge
stos
popf
jge
inc
mov
hlt
push
add
shrb
lds
aad
xchg
lods
js
jbe
lock
call
cmp
icebp
popf
add
outsb
mov
cmp
cld
insb
mov
xor
enter
mov
insl
add
add
mov
xchg
mov
push
mov
xchg
out
mov
xchg
fdivr
xor
in
leave
pop
mov
cmc
cwtl
arpl
stos
mov
sti
inc
pop
inc
pop
scas
aad
pop
cmp
cmpsb
flds
std
daa
xchg
inc
inc
repz
mov
fistl
push
adcl
repnz
fwait
clc
and
push
mov
cltd
push
aas
lret
jle
xchg
rolb
pop
add
inc
mov
aam
cltd
adc
xchg
mov
fldl
rcll
pop
mov
outsl
nop
mov
inc
shl
add
adc
mov
rep
adc
adc
cld
xor
cmp
ds
mov
in
imul
dec
dec
inc
pop
loopne
sbb
mov
into
jmp
ret
jmp
push
jg
push
hlt
pop
ss
mov
pop
cs
jae
in
imul
ljmp
ss
cmpl
dec
loopne
ret
pop
jge
mov
into
pop
repnz
mov
sub
sbb
sarl
dec
cwtl
cmp
adc
lds
stos
incb
sbb
inc
xchg
lock
popf
addb
inc
aad
mov
mov
mov
cmp
xchg
insl
stos
inc
sub
cmp
stos
xchg
add
fists
fcoml
icebp
push
in
xchg
aad
jnp
insl
push
jae
in
repz
sub
mov
cs
sub
fsubs
ds
sti
and
mov
inc
adc
push
shlb
xchg
cld
adc
testl
mov
adc
mov
iret
mov
pop
into
clc
mov
mov
mov
dec
and
lds
pop
adc
popa
dec
xor
push
xchg
imull
fsubs
scas
idiv
xor
loopne
mov
jmp
pop
fdivrl
cmpsl
sub
jne
mov
and
testl
test
pextrw
xor
mov
lods
adc
jne
in
sbb
mov
iret
add
sbb
std
lds
nop
je
iret
outsl
les
pop
xchg
loop
out
and
xor
push
repz
push
imul
loopne
lds
iret
incl
mov
gs
dec
pop
loopew
stos
sbb
fwait
xor
or
iret
shl
pop
ret
dec
xor
ret
and
dec
cmpsl
push
fistpl
fiadds
sub
sbb
sub
nop
in
cltd
mov
xor
cld
mov
out
mov
push
jo
mov
mov
push
inc
xchg
jae
add
mov
sti
xchg
lcall
or
cmp
cmpsl
aas
xchg
jbe
mov
out
xchg
jmp
inc
fwait
rol
xchg
into
ror
push
imul
cld
and
insb
jecxz
icebp
fwait
aam
sub
sbb
pop
mov
pop
or
in
pop
scas
cmp
out
sub
xor
jge
or
hlt
test
cmp
push
sbb
sub
scas
movsl
sub
push
in
popf
pop
outsb
pusha
je
sub
jae
repnz
leave
es
int3
cmp
aam
inc
and
adc
sub
rclb
inc
xlat
in
ja
out
scas
lret
mov
mov
stos
jle
ret
xor
xor
out
mov
xor
sbb
lcall
ds
xchg
inc
stc
aad
ljmp
adc
sub
pushf
adc
jg
push
addl
lcall
add
scas
xor
popa
mov
out
ficomps
xor
cmpb
cmp
lods
mov
lock
jne
push
inc
pop
repnz
push
lahf
xchg
andl
pop
insl
pop
sahf
pushl
cmp
stos
xchg
cmp
adc
xchg
xchg
pop
xchg
jo
ret
gs
notb
test
jecxz
push
stos
mov
int3
dec
xchg
lods
popf
pop
ss
stos
xor
jg
jne
xchg
mov
loope
or
loopne
inc
jg
push
loope,pn
xor
pop
subb
dec
hlt
sub
ljmp
ror
orl
push
push
fwait
lahf
pop
pop
and
jb
pop
cli
xchg
xchg
lods
adc
push
sub
xchg
mov
jge
inc
push
or
cmpsl
pop
pop
addr16
add
cmpsl
sbb
test
movsb
cld
rolb
jg
xchg
push
imul
into
lock
leave
or
sbb
mov
inc
cwtl
dec
mov
jae
movsb
mov
sbb
inc
int
and
push
pop
enter
data16
out
dec
icebp
mov
adc
mov
ficomps
sub
cs
mov
jmp
cmp
mov
mov
sub
stos
push
pushf
ret
mov
loope
sub
xchg
stos
sbb
arpl
aad
push
insb
daa
push
adc
icebp
fs
push
sub
outsl
mov
mov
es
insl
cli
test
dec
mov
adc
mov
add
je
fcom
push
movdqu
mov
imulb
data16
push
lock
cli
cld
lds
inc
jnp
jecxz
ficompl
inc
orl
mov
xor
push
fwait
ret
adc
movsb
push
inc
stc
fsubrs
push
and
sub
or
fadds
bound
test
out
inc
mov
out
mov
push
int
adc
cmp
adc
sub
inc
jecxz
ficompl
fdivs
add
les
mov
enter
cld
dec
push
out
ljmp
leave
sub
movsl
xchg
mov
or
aaa
xor
mov
add
aas
scas
or
xor
fsubrl
push
movl
popf
jmp
cld
cltd
xchg
sub
xchg
in
sub
mov
inc
mov
cli
sub
shl
hlt
jne
lods
stos
cmpsl
imul
aad
rcrl
loopne
mov
fs
scas
cmpsl
sub
mov
arpl
loop
ret
fs
sti
pop
cmpsl
dec
xor
xchg
subl
into
stc
sti
call
jmp
mov
mov
pop
int
ror
clc
aam
ljmp
lret
out
mov
loop,pn
sbb
fincstp
movsb
push
outsl
push
lods
aas
add
sbb
ret
pop
push
pop
lcall
sub
add
test
jg
fstpl
mov
imul
iret
cld
dec
inc
aas
int
jns
enter
pop
data16
inc
test
mov
and
test
mov
pop
xchg
cwtl
adc
hlt
dec
imulb
xchg
fcmovbe
ret
lods
mov
inc
jmp
dec
test
mov
out
sbb
dec
add
aaa
cmpb
xor
test
fildl
inc
imul
jg
insb
rsqrtps
lret
ss
sahf
dec
mov
lahf
arpl
jl
jmp
ret
jo
insb
lea
push
in
sbb
jp
mov
sti
cwtl
push
inc
arpl
push
inc
jle
movsb
push
xlat
das
push
jge
sub
aad
nop
popf
lock
add
or
outsl
icebp
test
test
mov
ret
sti
es
inc
add
xor
cmp
outsb
repnz
inc
mov
lds
mov
das
dec
pusha
fs
or
cmpsl
sub
lock
shlb
dec
idivb
adc
jne
mov
iret
ds
xchg
mov
cli
and
xor
xchg
mov
sbb
mov
jle
cli
cmp
inc
cmc
sub
dec
pusha
lcall
leave
jl
dec
jl
jb
jae
pop
mov
inc
daa
xor
ljmp
add
push
sbb
popf
jno
adc
xchg
xor
xchg
dec
and
mov
sbb
jnp
iret
xor
jecxz
out
xor
lods
sarl
cli
xchg
jae
dec
xlat
pop
mov
push
sbb
push
jecxz
cmp
in
cmpsl
mov
cmp
push
or
mov
dec
dec
dec
scas
movsl
mov
dec
and
adcb
jecxz
lock
or
popl
add
ret
fdiv
pop
jne
mov
jg
jecxz
cwtl
push
jno
in
fdivl
push
incb
pusha
into
fstpt
push
jbe
mov
in
cmc
inc
dec
ja
dec
scas
push
dec
out
pop
or
mov
xchg
push
lahf
div
loopne
mov
and
xchg
or
jl
int3
sub
add
cmp
xchg
mov
cli
jl
fwait
dec
adc
aas
fdivrs
filds
mov
data16
shl
aas
dec
cs
cmp
test
adc
rcl
wrmsr
idiv
lods
and
cltd
int
in
outsl
jmp
mov
imul
repz
dec
sub
cmp
adc
cltd
test
cwtl
ljmp
or
imul
leave
in
pushf
enter
stos
xorl
cld
xor
cmp
pop
sbb
lods
pop
mov
lret
adc
and
sub
arpl
int
jno
lret
pop
lea
jns
and
pop
mov
jnp
sbb
add
std
add
cmpsb
mov
jo
fistl
addr16
xchg
push
fadds
adcl
in
mov
fsubrs
andl
inc
add
js
or
inc
mov
out
mov
mov
mov
dec
pop
int3
push
repnz
int
cmp
and
mov
int
cmpsb
enter
jns
pop
push
mov
adc
adc
xor
int3
jbe
ret
mov
inc
mov
mov
aad
cmp
ds
inc
hlt
mov
sbb
mov
cltd
add
jmp
cmpsb
clc
cmp
sbb
jne
imul
jnp
and
push
into
adc
dec
cmp
stos
test
sub
cmpsl
push
sarl
cs
loopne
jae
push
sbbb
test
and
or
push
test
pushf
add
xchg
cmc
cld
fisttps
scas
xor
pop
sbb
fsubp
inc
cld
and
stc
int3
aas
sbb
testl
inc
loop
lods
mov
mov
pop
dec
push
xchg
call
xchg
sti
out
xor
lcall
cmp
in
inc
mov
pop
adc
mov
push
push
sbb
rcrl
dec
push
enter
jae
ja
out
mull
mov
mov
jae
lock
xchg
xchg
sbb
ficompl
sub
rorb
cmp
in
add
out
mov
jge
shl
add
add
xchg
aam
mov
xorl
push
jge
xchg
mov
out
or
lahf
or
xchg
and
cld
xor
mov
inc
js
outsl
icebp
pop
lret
addr16
ljmp
xor
pop
sub
fsub
add
out
xor
adc
lods
scas
xorl
jmp
scas
mov
cs
and
push
popf
jno
xlat
mov
out
xchg
rcl
imul
or
mov
clc
sbb
or
xor
inc
cmp
mov
cmp
fnstcw
cs
inc
jnp
icebp
push
fwait
sub
call
pusha
pop
push
push
inc
xlat
aad
daa
insb
xchg
mov
popl
ss
dec
aas
xor
xor
je
aas
jecxz
insb
xor
rsm
push
mov
mov
test
pop
dec
mov
add
push
mov
cmpsb
mov
jnp
stos
pop
addb
add
xlat
mov
sub
mov
pop
in
imul
xor
ret
xchg
add
cwtl
or
fst
xor
nop
lea
adc
out
mov
mov
aas
jbe
adc
push
add
int3
or
or
sub
xchg
lcall
arpl
add
test
scas
pop
or
push
push
dec
adc
ret
dec
add
test
push
xlat
loopne
mov
dec
cmp
sub
add
rcl
notl
dec
mov
sbb
popf
push
fs
lret
jo
lret
inc
cmp
push
adc
xchg
xor
loope
jb
push
sbbb
pop
fldt
imul
aam
les
add
int
lret
loop
dec
pop
test
enter
dec
sub
jl
fcomps
int3
fildll
inc
stos
arpl
loopne
push
pop
fists
xor
sub
xor
movsb
jb
mov
mov
pop
mov
scas
aaa
cmovp
inc
lcall
jno
mov
and
pop
fwait
sub
or
cmc
xchg
pop
orl
fiadds
inc
xor
cwtl
outsl
xchg
xor
dec
push
push
adc
mov
sub
add
mov
xor
fsubrs
inc
fcoms
sub
je
mov
aad
test
inc
sub
sub
push
loopne
loopne
das
jp
mov
mov
adc
lods
js
repnz
leave
pop
orl
dec
js
sbb
pop
inc
mov
iret
fldt
aam
mov
xchg
popf
push
jnp
cmc
test
mov
popf
sub
pusha
pop
popf
scas
jbe
pusha
xchg
dec
or
stos
mov
fmul
xchg
mov
pop
ds
mov
xchg
nop
mov
rorl
cld
aaa
adc
stc
mov
pop
pop
sbb
ss
mov
pop
daa
es
jnp
sub
dec
mov
pop
push
je
addr16
jge
jnp
dec
lods
pop
jbe
mov
mov
inc
cmp
add
fnstsw
mov
dec
mov
rolb
lcall
mov
in
jecxz
clc
stos
mov
adc
pusha
ss
rcl
pop
lds
sub
fucomip
repnz
les
add
sbb
lret
push
mov
inc
leave
lock
mov
sbb
pop
jo
daa
mov
inc
add
xchg
mov
add
inc
inc
jmp
cmpsl
nop
sub
call
cmpsb
sub
jp
bound
dec
in
xchg
push
insl
stc
pop
mov
test
mov
push
mov
jle
jle
pop
add
icebp
shll
mov
shrl
hlt
xor
xchg
mov
cld
xor
and
xlat
mov
push
mov
xchg
and
shl
les
les
dec
add
loope
cmp
mov
test
adc
or
push
hlt
mov
mov
mov
and
sbb
adc
int
jno
mov
or
nop
in
fcomp
jge
mov
pop
out
jns
sbb
aaa
out
add
jmp
cmc
push
ret
xor
outsb
push
mov
xor
pop
inc
jno
xchg
pop
dec
xor
testb
test
and
inc
add
sbb
adc
push
pop
mov
and
add
mov
xchg
dec
push
rcl
add
sub
je
fs
inc
xor
imul
push
stos
xchg
sahf
cltd
push
ljmp
loopne
outsl
hlt
jae
pcmpeqb
sbbl
sub
jno
add
nop
lret
fcoml
or
cmp
and
ss
mov
inc
ds
dec
adc
push
jnp
adc
ss
js
cwtl
in
sub
mov
push
stos
or
xchg
scas
into
add
mov
push
mov
mov
lret
and
repz
fadds
cs
pusha
fisubs
mov
fwait
mov
mov
push
leave
icebp
shlb
inc
clc
mov
in
mov
cmp
ja
push
mov
cs
mov
ffree
xchg
xchg
loop
cmp
add
mov
out
mov
and
push
aam
and
inc
sbb
push
int3
andb
mov
jmp
push
mov
and
popf
or
mov
movsb
inc
sbb
xchg
into
xor
xor
dec
push
and
lds
sbb
mov
cmp
movsb
arpl
mov
adc
cmp
enter
arpl
mov
mov
xor
fs
lret
pop
cmp
loop
jo
xchg
mov
inc
call
sbb
mov
xchg
xchg
xchg
mov
hlt
mov
fwait
sub
adc
ss
test
outsb
sarl
rclb
push
inc
push
rorl
fildl
ja
int
pop
pop
cmc
mov
and
and
and
movsb
movsl
dec
mov
xchg
dec
push
push
mov
ljmp
pop
pop
data16
and
hlt
or
or
sti
dec
cmp
push
add
sbb
imul
loope
lret
mov
lock
fidivrs
arpl
out
xlat
lock
in
and
xchg
in
pop
mov
imul
int3
push
jbe
sbb
add
fimuls
jge
sbb
fcoms
pop
psubd
es
out
cwtl
fs
pshufw
inc
loope
pop
sbb
lds
into
inc
xor
pop
shl
lods
in
iret
mov
jnp
mov
jno
pop
cmpsb
test
fldt
rorb
rcl
test
cmp
adc
movsl
aad
add
mov
mov
fcmovu
jno
mov
xchg
pop
mov
out
outsb
dec
or
cmpb
and
insb
stos
adc
enter
jge
test
push
push
insl
sbb
sub
das
lock
int
outsb
adc
mov
sub
jl
jmp
sbb
hlt
leave
adc
mov
or
je
mov
sbb
dec
mov
jecxz
popa
pop
fwait
mov
daa
movsl
mov
dec
mov
int
xor
outsl
ljmp
cmp
dec
xchg
adc
jp,pn
inc
xchg
jns
dec
or
or
nop
sub
imul
adc
sub
test
dec
stc
pop
ret
arpl
cs
push
adc
lcall
or
cmp
enter
shlb
cmp
clc
jmp
cmp
stc
add
in
enter
add
mov
mov
cmp
xchg
push
jp
push
imul
aad
subl
lea
sbb
pop
sbb
adc
jno
lcall
fdivl
jle
cld
ret
and
imul
testl
scas
mov
leave
int3
jmp
dec
cmp
arpl
push
sbb
fdivrs
outsl
je
adc
sub
outsl
dec
xchg
pop
adc
sbb
iret
or
loope
sbb
fisubs
pop
xchg
push
push
sbb
xchg
xor
sub
mov
mov
cmp
arpl
rolb
mov
inc
lahf
decl
lret
mov
mov
cmp
in
and
in
std
cmc
cmp
leave
jns
inc
or
ret
mov
scas
pop
inc
or
jmp
lea
mov
hlt
xchg
imul
stos
leave
je
xor
icebp
sti
mov
loope
daa
and
lea
aam
test
lret
int
push
adc
aas
idiv
or
js
push
push
xor
andl
xchg
fldcw
push
push
pop
rolb
out
adc
scas
fsubrs
dec
mov
pop
imul
push
and
add
xor
jl
sti
mov
mov
mov
mov
insl
adc
mov
test
jmp
out
xchg
fistps
inc
mov
fisttps
imull
jg
scas
xor
add
aam
and
xchg
rorl
stos
sub
int3
fcmovu
inc
imul
cmp
loope
xor
add
sub
xchg
sbb
mov
xlat
data16
or
negb
dec
xchg
push
arpl
dec
inc
inc
fnstenv
sar
jl
fidivl
push
stos
mov
es
filds
xor
outsl
mov
inc
mov
sub
sub
out
js
or
mov
and
xchg
dec
or
mov
add
jns
lea
sbb
cmp
jecxz
test
inc
and
xor
adc
insl
es
pop
cmp
adc
jge
aas
fildl
cmp
mov
pushf
ds
xor
in
cmp
sbb
xor
adc
push
insl
pop
push
xchg
cwtl
mov
xchg
add
or
imul
das
outsb
sub
pop
repz
xchg
testb
sub
psrlq
and
push
in
cld
std
inc
frstor
pushf
movb
data16
divl
sbb
pop
jp
or
repnz
popf
mov
cmp
lds
inc
jno
sbb
scas
push
xchg
mov
pop
leave
push
fsts
mov
jbe
mov
pop
sbb
jno
xchg
push
adc
out
fs
loope
inc
ret
mov
outsl
sub
orb
inc
xchg
add
mov
stc
dec
mov
or
cmpsb
cwtl
lret
enter
mov
lds
add
mov
pop
or
popf
xlat
jge
aaa
sub
mov
in
cwtl
mov
pop
dec
outsl
push
or
adc
push
inc
mov
pop
bound
add
aam
xor
movsb
fwait
lcall
adcb
icebp
adc
aam
xchg
push
jl
roll
jg
xchg
jg
jnp
aam
in
out
sti
mov
mov
js
xchg
mov
xchg
inc
lahf
pop
or
push
xchg
fwait
jg
adc
fwait
test
sbb
ja
repz
jl
insl
loopne
inc
loop
xchg
or
ds
dec
mov
push
fsub
xor
push
rcll
jae
aas
cmp
imul
in
imul
addr16
outsl
lea
mov
in
int
mov
xchg
test
sbb
insb
push
loopne
mov
flds
out
call
insl
pop
jo
imul
aaa
mov
cmpl
divl
or
push
int
lcall
outsl
popa
divb
insl
stc
cmc
pop
mov
inc
loop
xchg
or
pop
iret
add
dec
jecxz
cmp
mov
jle
inc
repz
dec
push
cmp
aas
in
negl
push
inc
mov
leave
jg
hlt
sbb
add
cmpsb
and
sarl
ds
mov
enter
mov
fdivl
daa
scas
jp
and
out
xchg
and
mov
movsb
jmp
ret
sbb
push
ja
inc
aad
addr16
push
lds
dec
mov
fnstcw
cmpb
pop
enter
ljmp
xchg
out
xor
imul
popa
xchg
sub
mov
adc
fidivrs
insb
xor
test
jp
cmpsb
add
mov
jo
arpl
rcll
call
fcomp
dec
mov
push
cmp
hlt
rorb
push
cmp
xchg
ljmp
pusha
ss
xchg
out
iret
jnp
dec
jge
mov
cwtl
add
jno
sub
cld
pop
fsubl
or
fs
add
push
cmp
jno
lods
mov
sbbb
jge
test
xchg
inc
sahf
add
cli
aad
jne
test
push
int
push
mov
adc
insb
xchg
scas
aam
loopne
ret
add
loop
lds
lret
mov
adcb
movsb
sbb
dec
or
xchg
sbb
arpl
xchg
shll
fidivl
add
mov
xchg
pushf
shll
mov
xor
repz
aaa
jecxz
aad
adc
pop
dec
cmp
repz
pop
fs
sbb
mov
jb
addb
mov
mov
or
stos
mov
mov
mov
dec
mov
lea
push
cmp
xor
jne
mov
pop
stos
dec
xor
and
out
fwait
decb
add
fs
arpl
cmp
adc
pop
sbb
ljmp
or
je
mov
aas
mov
jo
dec
xsaves
mov
lods
pop
pop
cmp
stos
xchg
sbb
or
in
pop
mov
sbb
jno
int3
mov
std
add
lcall
xchg
dec
sbb
xchg
dec
pop
jp
push
or
lods
push
sub
in
sbb
mov
sbb
jno
xchg
sub
mov
adc
cld
andl
out
imul
push
xlat
scas
jecxz
xor
negb
or
out
dec
add
aaa
clc
mov
mov
xorl
into
mov
or
in
pop
push
cmp
push
ret
fdivrl
xor
jno
add
push
pop
out
pop
insb
jb
rol
mov
jle
sbb
lods
jl
sub
cmc
mov
lods
push
push
out
repz
sub
call
push
jmp
cmpsb
jae
push
xorb
add
dec
aaa
cwtd
or
ret
inc
lret
mov
loope
nop
jo
cwtl
fidivrs
out
lods
stos
out
test
leave
cwtl
cmp
and
xchg
jno
scas
pop
movsb
dec
xchg
adc
stos
mov
jecxz
push
or
cmp
repz
aad
hlt
scas
jl
fs
push
repnz
int
sbb
mov
pusha
inc
shrl
or
push
mov
outsl
push
inc
popf
out
pop
and
loope
imul
mov
jns
push
add
sbbl
pop
jge
mov
js
push
jns
mull
jg
ret
pop
cli
push
lahf
dec
test
sub
repz
xor
incl
fmuls
push
imul
mov
into
hlt
int
aam
and
call
mov
xlat
mov
nop
aas
outsl
and
and
dec
js
lcall
jbe
stos
mov
push
add
xchg
cmp
inc
cmp
imul
leave
adc
adc
adc
and
and
sbb
push
cmc
orl
sahf
mov
mov
int3
xchg
jl
dec
jne
aad
push
sbb
js
inc
and
sbb
inc
fsin
pop
jnp
std
sbb
adc
jnp
test
icebp
mov
jg
push
push
loope
jmp
mov
es
fdivs
movsl
sub
ret
sbb
lods
mov
mov
pop
or
jae
nop
sbb
jecxz
jno
fs
pop
fsubs
mov
mov
nop
mov
in
divl
jle
dec
in
adc
xchg
lods
mov
jno
dec
pop
or
addl
mov
and
movsl
mov
cli
in
nop
repnz
cmp
data16
hlt
jp
xchg
sub
sbb
inc
mov
sub
or
sub
ljmp
mov
xor
jmp
pop
mov
sub
lods
rcrb
dec
sahf
leave
rorb
leave
in
rolb
mov
icebp
cmp
insb
iret
andl
sub
outsb
into
lea
inc
add
lods
adc
mov
mov
push
mov
mov
stos
daa
lds
das
xor
sub
out
mov
cs
cmp
stos
xor
mov
das
xor
bound
ljmp
pop
jne
insl
stos
pop
push
and
ret
dec
test
lcall
mov
or
xchg
js
cmp
sbb
jne
mov
sbb
insl
xor
lds
testb
fidivl
sbb
dec
inc
add
and
sub
jg
xor
push
shll
adc
addr16
mov
xchg
ljmp
mov
cmp
or
add
jmp
into
push
lds
scas
loop
lret
dec
stos
in
mov
negl
repnz
out
scas
fcoml
cmc
fists
pop
inc
js
adc
sahf
inc
adc
or
cmp
aas
push
fnsave
aaa
dec
aaa
jl
pop
out
jno
iret
mov
mov
jmp
fisubrs
enter
clc
stc
adc
cmp
andb
mull
sahf
shlb
sbb
xor
addr16
jle
sub
fcmovb
aas
scas
imul
test
mov
or
jl
xchg
inc
pop
pop
pop
test
or
inc
cmp
xor
cmpsl
outsb
mov
mov
sbb
xlat
cs
sbb
sbb
sub
sbbb
push
xchg
jl
and
scas
lret
imul
push
jno
sbb
push
cmc
ret
rcrb
loop
mov
nop
push
adc
mov
mov
push
push
push
imulb
mov
adc
xchg
cwtl
mov
jns
dec
dec
adcl
jecxz
push
mov
xor
test
nop
ret
lcall
push
sub
adc
cmp
subl
mov
xor
mov
cli
outsb
mov
in
fldl
loopne
dec
outsl
nop
inc
mov
std
outsb
xchg
sbb
inc
in
xorb
or
ltr
repz
enter
pop
dec
ja
sub
mov
xorl
hlt
jns
pop
ret
mov
rol
mov
push
mov
insl
xor
xchg
pop
std
lret
sbb
sbb
mov
jae
push
xor
ljmp
loopne
sbb
inc
scas
and
mov
mov
sti
arpl
outsl
and
xor
popa
shll
iret
mov
repz
cmp
popf
ja
fcomi
js
adc
ds
inc
jecxz
cmp
lret
and
lahf
rcrl
cmp
jne
rolb
stos
fcomip
ds
cmp
xchg
insl
add
sbb
in
xor
mov
pop
pop
nop
push
call
lret
xchg
loope
mov
in
mov
jne
imul
xor
xlat
xchg
ret
fwait
dec
test
in
insl
push
pop
and
cmc
inc
mov
xchg
pop
mov
cmp
ret
popf
mov
pop
inc
dec
sub
dec
mov
roll
mov
f2xm1
sahf
fs
loope
add
and
sbb
cmpb
jge
adcb
dec
stos
cmp
fdivrp
lock
fs
and
aaa
mov
mov
pop
cmp
scas
cltd
rcrl
into
mov
pop
mov
jns
pop
repz
test
int3
add
adc
inc
fmull
aam
sbb
pop
mov
int
mov
scas
fadd
imul
movsb
lahf
or
inc
sub
dec
loope
sbb
jns
pop
push
scas
lods
sbb
cmpsl
mov
mov
and
jno
fildll
mov
test
and
push
int3
movsl
shl
mov
popa
hlt
pop
pop
out
scas
mov
sub
shr
add
inc
in
outsb
call
sbbl
mov
push
push
xchg
push
push
jge
mov
push
sbb
xor
testb
cmp
xchg
cltd
out
dec
inc
leave
or
push
sbb
or
enter
xchg
stos
mov
add
or
mov
les
mulb
dec
push
or
ljmp
fsubs
les
and
pop
add
mov
inc
out
aad
std
adcb
iret
mov
add
imull
mov
cmp
jmp
xor
stos
pop
hlt
push
xor
mov
dec
push
lods
pushl
push
or
push
std
or
inc
inc
sub
negl
jnp
jg
das
mov
lds
push
shll
mov
push
pop
iret
scas
in
outsl
and
xor
cwtl
jno
jnp
ret
push
mov
add
cld
lods
xchg
or
mov
dec
sbb
pop
insl
loope
aad
in
sarb
data16
fdivs
pop
and
and
xchg
rorb
jne
adc
mov
pop
and
inc
mov
insb
mov
ret
pop
xchg
mov
pop
sub
sub
sub
cmp
andl
stos
jecxz
int
xchg
and
lock
aas
rcrl
jp
jmp
xchg
add
push
inc
pop
clc
ret
push
std
push
cwtl
rcrb
loope
int3
push
and
mov
xor
sub
jnp
mov
push
mov
test
adc
lahf
sti
push
and
shl
push
sub
lock
xor
mov
pop
sub
pop
in
cmpb
inc
push
pop
dec
in
je
add
sarl
subb
cmpsb
addr16
mov
jo
xchg
cmp
xlat
arpl
adc
push
and
adc
jnp
enter
out
stos
mov
pop
cltd
xchg
into
dec
push
cmp
ret
cmpb
mov
data16
shrl
lea
ja
sub
jp
popf
cmc
repz
mov
adc
nopl
hlt
es
pusha
cmp
pop
cmp
faddl
loopne
and
add
mov
mov
push
div
in
jae
aad
aam
jg
cli
pop
adc
lret
sub
repz
inc
dec
cmc
sub
cwtl
cli
loopne
push
mov
cmp
cli
leave
and
popa
or
xor
popf
test
out
inc
ja
mov
hlt
fs
out
cld
xchg
mov
mov
test
repz
add
adc
fistps
ja
pop
jmp
sbb
dec
outsb
pop
addr16
into
testb
mov
adc
sub
in
hlt
out
fistps
mov
adc
sbb
lods
mov
mov
repnz
fs
xor
xor
loopne
cmp
jae,pt
inc
jns
fldcw
xor
out
test
dec
jmp
add
mov
adc
dec
jbe
sub
pop
adc
adc
insb
add
in
imul
jns
pop
push
test
jg
xchg
dec
dec
dec
mov
jbe
push
pushf
jmp
and
mov
mov
enter
add
pop
xlat
sbb
seta
and
inc
loop,pn
iret
dec
xchg
fisttpll
insl
mov
fisubl
loope
add
xor
es
add
pop
jg
in
jns
popa
xchg
out
mov
push
icebp
imul
stos
xorb
test
xchg
mov
leave
cmp
fisubs
add
jle
lahf
push
icebp
loop
jmp
pop
push
jbe
mov
mov
cmp
stos
int
add
hlt
cmp
pop
jge
mov
sub
fs
xor
aas
ret
dec
jb
sbb
pop
sub
sub
mov
movsb
cmp
nop
roll
jle
mov
and
xchg
xchg
std
pop
mov
inc
dec
test
push
fdivr
cwtl
movsb
shrl
inc
push
or
mov
dec
lea
es
stos
stc
sub
call
dec
cmpsb
pop
adc
xchg
aaa
dec
clc
faddl
xor
push
fidivl
adc
stos
inc
movsl
gs
fistpll
mov
xor
cmp
inc
add
daa
inc
aam
pop
pushf
mov
adc
xor
mov
inc
aad
sbb
lcall
mov
xchg
add
les
xchg
mov
sbb
fwait
leave
in
dec
addl
cmp
stos
nop
mov
mov
inc
outsb
loopne
adc
lret
xor
fstpt
add
sub
jbe
in
decl
lret
mov
jb
outsl
ret
pop
enter
mov
adc
movsb
into
mov
add
mov
adc
sub
xchg
in
xchg
enter
pop
scas
fsubl
out
push
jecxz
jb
add
test
push
mov
pop
add
push
jnp
cs
xor
add
in
pop
out
and
mov
mov
adc
adc
or
fldcw
imul
rcrb
sub
jecxz
jae
int3
add
hlt
xchg
imul
pop
xlat
lods
mov
xchg
ret
xchg
mov
or
lret
lock
push
in
mov
js
pop
mov
push
push
or
mov
addb
scas
out
inc
adc
mov
movsb
popa
xchg
push
shrl
cwtl
loop
pop
addr16
outsb
das
dec
dec
fcomps
or
mov
sar
loopne
movsb
out
testl
js
push
mov
add
shrb
sub
xlat
hlt
mov
lcall
xchg
jmp
and
icebp
add
arpl
aaa
cs
mov
sub
test
shll
fwait
or
cmp
outsl
cmpsl
push
out
lret
outsl
repz
test
lock
aad
mov
cmp
or
cmp
cmp
int
fdivrs
or
outsb
ret
fisttps
or
test
fs
imul
pop
pusha
nop
cmp
ljmp
fadds
iret
lea
sahf
mov
popf
push
push
xchg
mov
jmp
mov
xchg
jno
scas
iret
mov
cmc
mov
cmp
popa
pop
inc
sub
push
sbb
popf
addl
mov
cmp
jb
ret
add
xor
or
mov
jne
cltd
sti
jge
push
clc
mov
jle
bound
icebp
xchg
sub
mov
mov
xchg
shll
lods
xlat
add
adc
inc
movsl
pop
lahf
mov
addr16
or
mov
lahf
test
shlb
cmp
push
cltd
push
aas
loopne
lcall
inc
ss
mov
dec
lahf
std
incl
mov
adc
je
fcomp
jmp
lret
push
push
pop
mov
decl
mov
xchg
jae
popf
cmc
fucom
ret
ss
enter
movsl
scas
add
leave
or
outsl
rol
aas
add
out
mov
mov
dec
orb
loopne
int
push
int3
lock
or
inc
jp
sub
cmpsl
inc
dec
push
push
mov
and
push
mov
xlat
addr16
cltd
cmp
xchg
sub
add
leave
inc
xchg
addl
inc
lret
jle
cmp
stos
roll
lahf
jecxz
pop
in
lock
sti
insb
mov
jl
mov
fwait
push
fisubrl
int
in
sbb
lret
les
or
ret
iret
pop
dec
into
in
pop
adc
pop
outsb
xchg
iret
sbb
lret
mov
xor
and
repnz
sub
test
adc
push
loop
jne
lock
into
sbb
xor
add
pop
or
cmp
ret
inc
jne
enter
adc
xchg
clc
insl
test
dec
jmp
test
repnz
js
jnp
int3
mulb
push
fcoml
push
mov
cmpsl
aas
mov
popf
sbb
out
jne
mov
and
outsb
fucomip
or
popl
dec
ss
inc
enter
or
cli
push
inc
insb
jecxz
jmp
push
lret
inc
xor
pop
dec
push
fmull
jp
jg
fdivr
cli
scas
inc
cmp
sbb
inc
and
push
insl
mov
jge
out
jo
call
or
stos
out
pop
popa
jmp
test
addb
icebp
adc
push
dec
stos
pushf
addr16
hlt
fwait
hlt
adc
pop
xchg
lcall
and
adcb
divb
xor
into
fstpl
pushf
les
cmp
cmp
mov
aam
xor
sbb
mov
add
add
into
imul
repnz
pusha
jmp
insb
movsl
mov
cmpsb
mov
loop
jl
int
ljmp
jb
les
cmp
cmc
sub
push
test
cmp
sbb
jb
lret
lret
in
mov
outsb
jb
aas
mov
shrl
rcr
idivb
leave
movsl
jno
inc
mov
cmc
cmpsl
movsb
and
loopne
mov
in
add
adc
cmp
mov
add
ret
inc
dec
inc
aam
outsb
add
cmpl
push
popf
mov
xchg
aaa
in
pushf
inc
jg
pop
mov
movsb
dec
xchg
pop
push
and
enter
scas
mov
xchg
xor
stos
sarb
jno
mov
jg
mov
ljmp
add
adc
xor
pop
pusha
mov
leave
dec
andl
mov
das
aaa
sub
inc
push
push
dec
xchg
inc
fiaddl
pop
pop
imul
aaa
sbb
imul
xlat
stos
insb
dec
bound
fwait
xor
popa
aaa
and
add
cmp
push
jle
sub
adc
adc
adc
aas
das
mov
dec
movsb
or
into
adc
sti
mov
test
adc
cmpsb
fst
cmp
cld
ja
push
xchg
jg
mov
pop
push
jmp
lcall
pusha
clc
dec
lcall
push
xlat
jbe
in
pop
push
mov
pop
shrb
insl
stos
cli
loopne
mov
aas
lods
xchg
pop
clc
mov
sub
testl
hlt
jne
xchg
inc
notl
lret
cmp
pop
das
std
test
cmpsb
pop
mov
mov
and
mov
mov
sub
sti
and
iret
inc
pushf
dec
mov
mov
sbb
sti
sbb
aaa
push
aam
sbb
lret
mov
bound
lret
mov
fdivs
sbb
aad
stos
mov
inc
ficoml
push
lret
add
or
mov
push
sub
sarl
mov
jecxz
test
inc
bound
cmp
mov
test
mov
mov
xchg
xchg
js
lahf
jnp
inc
lods
dec
sub
cwtl
or
push
dec
mov
fcomps
cmp
inc
push
inc
rorb
jecxz
dec
jmp
jle
jo
test
loop
inc
insb
and
mov
imull
fs
xchg
dec
mov
jmp
xor
roll
lock
lods
push
ja
scas
jns
dec
sbb
pop
sub
cmp
cmc
push
pusha
imul
xor
mov
xchg
xchg
cmp
mov
push
sbb
xor
mov
dec
movb
fisttpl
mov
mov
popf
jo
stos
subl
adc
fists
test
sub
push
les
cmp
out
mov
push
and
ljmp
sbb
lods
out
inc
xchg
adc
out
cvtps2pd
jmp
daa
pop
subb
repz
pop
test
inc
adc
scas
lods
aas
push
xchg
in
pusha
std
movsb
dec
cli
dec
scas
sbb
je
out
lock
mov
dec
shlb
adc
jg
xchg
dec
sub
int3
sbb
push
xor
sub
sarb
clc
or
jbe
push
jmp
xor
dec
bound
sahf
xchg
mov
jp
xor
sbb
fsts
ljmp
repz
inc
push
enter
sub
pop
imul
mov
and
bound
jle
mov
jle
cmp
adc
arpl
adc
lea
mov
lret
xor
pop
aad
jmp
loopne
add
aaa
aad
pop
xlat
sub
lahf
stos
ljmp
stos
mov
mov
sbb
daa
and
jge
or
push
jne
es
out
mov
insb
adc
xor
push
daa
adc
lahf
xchg
lds
mov
adc
jge
pop
dec
mov
pop
or
ds
out
adc
inc
push
sub
or
inc
into
shrl
inc
pop
lea
rolb
adc
inc
xchg
jo
hlt
je
xor
jnp
mov
imull
sub
fdivr
mov
jmp
xchg
sahf
mov
pop
add
push
add
repnz
xor
rorb
jns
icebp
dec
cmp
int
and
add
test
imul
push
dec
inc
mov
mov
fisubs
and
push
fsubrl
pop
dec
fbld
xchg
mov
xchg
sub
add
dec
das
pop
jb
add
add
sbb
xor
std
mov
xor
mov
pusha
push
xchg
or
ja
lret
adc
scas
clc
fwait
int3
pop
icebp
adc
ret
repz
dec
dec
iret
pop
sbb
data16
xchg
lods
mov
mov
pop
add
pop
mov
out
pop
mov
sub
mov
cmc
lret
mov
pop
dec
int
jl
jnp
mov
pinsrw
scas
test
mov
je
loopne
cmp
add
sahf
pushf
js
gs
out
cwtl
inc
sbb
sbb
gs
enter
jno
jae
jnp
inc
sahf
add
sahf
aam
cmpsl
and
cmpsb
loopne
testl
cmp
testl
or
nop
or
push
scas
ss
mov
pop
push
sub
aaa
mov
into
lahf
les
ret
movsb
idivb
ret
sbb
push
push
xor
adc
das
fistl
jl
stos
ja
jno
leave
xor
inc
and
sahf
mov
mov
sub
fiadds
jecxz
adc
mov
outsb
xchg
gs
stos
cld
push
dec
sub
stos
aam
test
test
clc
ds
push
and
jge
push
ds
in
pop
adc
mov
leave
and
add
mov
js
mov
lcall
mov
mov
xchg
cmp
sahf
mov
loop
lods
orl
xlat
fldcw
cmpsb
imul
sbb
stos
jnp
outsb
and
push
iret
xchg
or
push
xchg
inc
popa
pop
push
mov
xor
sbb
pusha
mov
jns
jmp
int3
ljmp
xchg
jns
cld
add
xchg
pop
lcall
or
cmp
fmull
xchg
jo
pop
jne
je
mov
adc
fimull
pop
or
cwtl
in
in
insl
in
mov
pop
dec
mov
mov
mov
add
adc
mov
pop
and
sbb
add
add
imul
iret
in
jmp
fldenv
push
push
push
out
xor
aam
test
pop
pop
sub
rcll
mov
or
fcomps
inc
cmpsb
in
inc
push
inc
cmp
adc
jae
shll
out
or
add
push
aaa
scas
mov
jmp
insb
xchg
sub
add
lcall
inc
xor
aam
mov
int
stos
cwtl
inc
pop
lock
jecxz
jp
bound
loop
fcompl
js
testb
push
adc
and
sbb
jl
aam
aad
xor
inc
cmp
adc
fdiv
adc
xchg
sub
xchg
lahf
xlat
pop
and
outsl
test
dec
add
jmp
insb
clc
sub
aam
es
inc
addr16
lock
popa
mov
mov
outsl
ret
jb
fwait
push
jae
ss
icebp
mov
adc
xlat
mov
push
rcl
dec
lds
sub
outsb
and
loope
pop
bsr
cmp
cmp
out
and
mov
cli
ljmp
inc
xor
pop
or
leave
xchg
mov
dec
pop
aaa
das
xchg
fistl
or
imul
mov
mov
mov
add
lods
mov
adc
xor
mov
fmull
outsl
lret
cmp
leave
pop
jbe
mov
lcall
daa
mov
xchg
xchg
bound
rcll
cmpsb
jle
insl
inc
inc
lret
test
out
sti
push
pop
js
sti
sarb
mov
mov
sbb
std
cmp
mov
mov
mov
arpl
sbb
xlat
fistps
push
test
rorb
sbb
ljmp
cmp
cmpsl
mov
inc
push
fildll
cmp
add
in
xchg
mov
mov
addr16
scas
sbb
sbb
vinsertf32x8
and
insb
movsl
inc
sbb
lods
shrb
test
aad
lahf
insl
add
rcr
insb
mulb
int
push
xchg
cmp
in
sub
dec
jb
push
repz
aam
in
jb
daa
inc
sbb
ret
daa
jbe
xor
mov
sbb
push
shlb
push
push
sub
dec
push
testl
mov
push
adc
cmp
cmp
lock
in
cltd
xchg
shll
into
out
and
lds
movsl
adc
fidivl
cmp
and
xor
cmp
pop
popa
mov
xor
std
mov
pop
jns
jae
push
rorb
sub
movsb
cmp
data16
lds
test
cmp
aas
dec
pavgb
sub
dec
adc
dec
rcrb
scas
scas
xor
pop
mov
dec
stos
sbb
push
pop
adc
push
push
mov
sahf
fsub
call
jl
test
push
out
mov
arpl
jecxz
xchg
movsb
xchg
in
icebp
push
mov
push
add
jmp
jne
mov
arpl
inc
pop
icebp
dec
pop
or
or
mov
inc
lods
cmp
inc
jb
xlat
dec
in
and
nop
dec
bound
in
xchg
fsubr
push
daa
in
dec
xchg
pop
cmp
or
and
out
cmc
and
mov
in
ljmp
mov
popf
daa
fsubp
lock
cli
xchg
cltd
xchg
dec
mov
sub
cmpl
xor
arpl
sub
icebp
push
sbb
leave
lahf
mov
pushf
add
sub
xchg
arpl
jg
lea
mov
loopne
popa
popf
sub
push
sub
frstor
out
jl
lret
shll
in
push
cmp
rcll
lcall
xchg
sub
ret
jno
fiaddl
mov
fs
lods
jnp
mov
and
mov
inc
out
mov
pop
mov
cs
xor
sbb
push
push
aam
bound
lcall
jle
int3
dec
test
jp
fwait
stos
fistpl
sub
test
push
mov
xor
movsl
adc
nop
int3
mov
push
cli
mov
xchg
mov
rorl
scas
mov
inc
mov
aad
sarb
jecxz
ds
mov
sub
jnp
sub
cwtl
scas
cmpsl
push
lret
xchg
fcoms
push
insb
cmpsl
ret
movsb
cmp
or
push
xor
adc
ja
repz
test
mov
jns
in
xor
xor
sub
out
pop
adc
in
lds
lods
fisubs
mov
jmp
and
call
sbb
mov
ret
sbb
arpl
sti
mov
fcmovnb
rorb
mov
pop
inc
mov
xor
push
jle
mov
and
cmp
ffreep
mov
xchg
push
repnz
jg
mov
jmp
and
sub
sub
in
mov
cmp
adc
mov
pushl
in
mov
mov
leave
pop
pop
jno
test
and
rclb
loop
pop
dec
lcall
sbb
imul
push
dec
in
jb
dec
mov
bnd
outsb
imul
mov
je
adc
inc
pop
clc
aas
fidivl
mov
mov
aaa
in
dec
loop
add
dec
pop
jge
jbe
and
loopne
add
cmp
inc
pushf
xchg
add
inc
cmp
subl
jno
add
mov
dec
iret
xlat
fldl
pop
scas
cmp
aaa
outsl
adc
jne
sub
out
or
add
mov
dec
pop
andb
scas
or
mov
mov
or
aaa
or
sub
shrb
mov
jg
cmp
jg
jae
mov
or
scas
mov
int
lahf
frstor
xchg
ret
cwtd
xlat
sub
insb
and
fistpll
jge
jmp
sub
sub
dec
movsb
lahf
dec
cmc
jl
push
add
loope
out
mov
xchg
fidivrl
hlt
jle
js
jae
add
repnz
xor
das
fldcw
daa
jle
dec
push
call
movsl
insb
push
push
fildl
mov
jns
pop
lahf
or
push
dec
pusha
call
repnz
mov
adc
orb
daa
out
add
inc
pop
mov
into
jno
mov
or
jle
addr16
mov
adc
mov
pop
sbbb
inc
mov
sti
sub
mov
xor
pop
icebp
arpl
mov
push
dec
ret
or
nop
rol
lea
inc
add
cli
loopne
jp
xchg
ficoms
mov
adc
inc
cmp
xor
mov
mov
ret
das
sti
dec
cmp
or
pop
scas
or
xchg
mov
push
mov
dec
mov
ja
push
dec
sbb
push
or
jo
inc
je
xchg
mov
lret
cmpb
xchg
dec
icebp
fcmovb
jno
ds
xor
nop
test
mov
enter
lds
add
xchg
popf
repz
jmp
adc
adc
mov
outsb
aas
push
bound
jbe
mov
stos
jb
xor
imul
outsb
or
movsl
cld
out
inc
out
dec
inc
int3
push
cmc
xchg
and
ja
or
pop
inc
in
pop
lahf
cmp
add
dec
adc
pop
movsb
push
or
xlat
mov
ja
stos
jbe
mov
aam
ficoms
dec
std
mov
insb
xlat
imul
je
stc
test
adc
sub
xchg
jecxz
fwait
mov
xor
sti
pop
or
outsb
mov
inc
mov
jge
cmp
std
add
lock
leave
xor
inc
call
mov
sbb
aaa
nop
and
fnstcw
cmc
lea
cwtl
hlt
sub
mov
adc
xchg
shr
jno
hlt
push
out
sbb
iret
test
sahf
addr16
xor
xchg
mov
les
xchg
movl
orb
sarb
pop
pop
jno
ljmp
adc
repnz
int
mov
stc
xchg
js
push
mov
push
mov
mov
sub
into
mov
mov
and
pushf
cmp
jg
and
dec
outsb
repnz
cld
test
xor
cmp
iret
hlt
cmp
dec
movsb
shll
mov
int3
stos
inc
jne
nop
lea
push
jmp
xchg
or
sub
insb
jmp
out
sub
jo
pop
pushf
aas
sarl
les
pop
adc
scas
push
fdivs
inc
clc
jle
hlt
push
mov
repz
sbb
fnstenv
inc
cmpsb
mov
lods
insb
hlt
dec
adc
sub
lcall
and
push
aaa
repnz
mov
imul
je
mov
jg
or
stos
xor
in
adc
push
int
jbe
test
pop
mov
mov
mov
mov
sahf
xchg
in
pushf
pop
pop
call
sbb
adc
in
icebp
ljmp
inc
add
les
call
jnp
xchg
push
mov
jbe
iret
aad
pop
mov
clc
push
sti
jne
mov
popa
into
out
jns
stos
ret
push
aas
pop
jge
pop
ljmp
and
jae
out
shrl
jle
lods
mov
loope
shll
add
lahf
xor
mov
inc
sub
inc
fnstcw
insl
std
sub
fcomps
pop
bound
pop
dec
push
andl
lock
arpl
in
and
fadd
dec
cmp
and
lahf
add
das
cmpsb
fs
xchg
sub
add
js
cmp
sbb
xorl
js
cmc
or
inc
cs
shll
inc
clc
dec
mov
fadds
add
sti
into
ljmp
aaa
adc
adc
cltd
cmp
xor
mov
popa
out
mov
in
insb
xor
mov
mov
and
jge
add
mov
xchg
pop
mov
cwtl
xchg
push
pop
add
rorb
ror
mov
aam
fimull
das
mov
xchg
pop
cmp
fcmovb
cmc
incl
nop
xchg
iret
jp
lcall
sti
loope
cld
rolb
cmp
gs
add
cmp
push
scas
and
mov
mov
mov
mov
pop
or
xor
mov
or
lahf
cmpsl
jmp
popa
rcr
lods
pop
jmp
xchg
jl
mov
addl
jg
in
sbb
lock
or
mov
inc
mov
test
js
inc
test
pop
rcll
xor
inc
insb
leave
xchg
vmulpd
mov
cmp
int3
bound
sub
mov
xor
mov
int
sbb
adc
xchg
pop
xchg
mov
roll
movsb
inc
xchg
mov
pop
push
adc
and
sahf
xor
xor
scas
sub
stos
dec
arpl
adc
xchg
xchg
scas
cmp
or
cltd
sbb
sti
xor
cli
xchg
movsb
jnp
test
or
add
dec
les
jecxz
push
cwtl
cmpsb
roll
stos
sti
insl
ljmp
dec
sbb
pop
cmpsl
daa
jo
pop
dec
xchg
xchg
inc
xlat
push
sar
stc
xchg
mov
dec
in
dec
das
lods
clc
pop
or
add
sbb
daa
shl
and
add
dec
ds
jle
push
and
dec
cmc
fimull
into
insl
mov
xchg
out
cs
insb
fisubrl
daa
jecxz
and
push
lahf
dec
ljmp
popa
loope
mov
nop
mov
xchg
push
iret
out
shlb
mov
jmp
xchg
mov
ljmp
insb
or
subl
add
inc
xchg
jp
mov
sbb
mov
dec
mov
fwait
mov
mov
pop
push
clc
repz
jno
push
mov
ljmp
add
lods
adc
roll
sbb
add
mov
push
add
push
jl
ret
mov
addr16
pushf
andb
cmc
int3
pop
lahf
pop
jmp
pop
loop
push
enter
add
movsl
cltd
in
lock
insb
pop
mov
in
inc
jb
push
mov
clc
je
fisttpll
sbb
sub
mov
adc
out
mov
mov
sbb
dec
scas
mov
mov
add
fsubrs
divl
sbb
sub
inc
scas
or
jge
xchg
lods
push
pusha
inc
es
cmp
fimuls
fisttpll
xor
push
test
ss
lcall
and
aas
ret
jne
add
cmp
mull
mov
push
jge
popa
fistpll
push
xlat
cmp
xchg
repnz
mov
les
mov
pusha
aam
jl
lock
cmp
push
movsb
push
std
pop
xor
add
sbbb
xor
sub
mov
cwtl
inc
mov
int3
std
jbe
mov
cmp
xchg
push
and
loope
aam
mov
in
pop
popa
movl
xchg
lcall
std
in
xor
fs
lcall
lods
lahf
mov
mov
out
outsl
arpl
mov
jle
int
and
cwtl
jbe
lret
or
add
pop
dec
xbegin
pop
aas
outsl
rcl
and
rol
push
inc
es
or
test
sub
aaa
inc
dec
aam
mov
push
iret
pop
adc
fistpll
sbb
lret
sub
mov
jbe
out
inc
stos
out
fdivr
push
mov
negb
push
mov
adc
xchg
aaa
ret
dec
pop
mov
and
dec
negb
pop
push
xchg
stos
mov
shrl
add
dec
adc
add
ljmp
mov
inc
and
xor
add
inc
inc
repnz
les
fldl
mov
jne
cmp
cli
mov
xchg
xchg
lods
push
and
iret
xchg
mov
or
daa
notb
mov
cwtl
shlb
sbbl
movsb
popa
mov
cmp
call
ja
mov
xlat
mov
shll
xlat
in
loope
mov
mov
dec
xchg
add
jnp
adc
pushf
mov
fwait
in
repz
push
pop
xor
or
cs
clc
lea
add
or
loope
loop
icebp
mov
arpl
mov
mov
sbb
push
mov
sahf
mov
sahf
shrl
mov
mov
xchg
movsb
pop
dec
popf
out
stc
and
jae
mov
dec
sbb
sub
sub
stos
add
xor
pop
incl
scas
shl
cmpl
xchg
add
cltd
loopne
sahf
mov
or
leave
cmp
push
repnz
push
lcall
pop
push
int3
push
xchg
paddq
in
sub
incl
cld
imul
out
xchg
dec
aam
addb
nop
push
cmp
mov
mov
lds
data16
cmp
xor
inc
pusha
sub
sbb
and
out
jle
aad
dec
imul
outsl
sti
dec
jnp
or
daa
add
sahf
or
fdivrl
imul
insb
dec
push
jp
xor
push
jecxz
das
fbstp
lret
fdivs
cmp
cld
cmp
pop
push
xchg
rcll
jecxz
call
jns
xor
push
mov
test
xchg
ja
fwait
jp
loope
pop
inc
fnsave
hlt
dec
test
cmp
xchg
lcall
and
subb
push
out
xchg
sbb
je
jge
sti
mov
dec
dec
fsubl
inc
lock
jle
mov
cmpl
pop
int
pushf
js
enter
xor
into
xchg
in
sub
test
mul
xorb
pop
xor
ja
push
push
gs
out
rclb
icebp
inc
pop
fdivrl
xor
sub
ret
sub
idivb
sbb
lcall
jp
jno
inc
sub
jbe
add
xlat
cmc
jno
xchg
rclb
adc
insl
aaa
out
mov
aaa
push
push
sahf
mov
dec
scas
in
push
das
dec
imul
into
mov
push
push
xchg
negb
push
mov
dec
leave
cmp
lret
mov
mov
cmpsl
cmp
mov
jmp
push
cmpsb
mov
lret
dec
cmp
sub
mov
jmp
mov
aam
push
enter
pop
adc
gs
adc
hlt
cmpsl
sub
push
aam
arpl
sbb
test
ljmp
pusha
scas
xchg
push
repz
jno
std
fsubrs
stc
inc
pushf
push
jp
ficompl
sub
mov
negl
push
adc
push
ret
je
mov
pushf
lods
jns
lret
push
imul
xor
adc
cwtl
rcrl
repnz
enter
ret
sti
mov
mov
fisubl
outsb
fildl
mov
inc
fistl
outsl
lret
adc
std
paddd
or
subl
dec
jbe
in
call
loop
divb
int
cmp
sarb
mov
lock
adc
mov
mov
dec
outsb
in
fnstsw
adc
xlat
add
in
daa
pop
je
jo
pushf
sbb
shll
cwtl
dec
out
mov
inc
xchg
xchg
lock
jmp
xor
xchg
faddl
rol
and
scas
jns
dec
add
push
pop
fadd
jns
mov
pop
ret
std
psllw
inc
cmp
rcll
push
add
mov
out
shrl
mov
hlt
jns
xchg
popf
or
divb
pop
add
scas
sbb
in
js
mov
xorb
add
int3
sahf
or
dec
leave
push
ret
xor
lahf
inc
and
fmull
into
mov
ljmp
insb
in
push
daa
adc
fnstenv
inc
andb
int
cmp
mov
xchg
mov
das
mov
aas
ja
ret
je
mov
sub
aaa
pop
lahf
cli
xor
add
js
sub
pop
fbld
pop
and
mov
mulb
nop
testb
or
mov
xor
pop
fcomp
stc
inc
dec
addr16
mov
sbbb
inc
daa
xor
and
or
or
sahf
rclb
pop
jg
or
xchg
lods
push
jo
cmpb
mov
mov
mov
popa
shl
arpl
sbb
dec
mov
je
mov
or
outsb
enter
and
mov
aaa
push
call
imul
cltd
insb
xor
arpl
mov
or
cmpsb
repnz
sbb
inc
pop
xchg
mov
test
aad
popf
jb
mov
inc
ds
lods
insl
sub
cmpsb
aas
dec
pop
pop
pop
lock
sarl
movsb
mov
ret
mov
xor
sti
xchg
clc
push
insb
aas
aas
out
lahf
mov
lds
jg
mov
push
pop
rolb
in
repnz
pop
mov
fwait
cltd
add
or
dec
test
cmp
ds
das
jecxz
sub
movsb
xchg
pop
stc
dec
push
repz
in
movhps
cmp
ds
lret
test
lods
out
or
cmc
in
arpl
lahf
addb
sbb
pop
mov
pushf
jne
arpl
sbb
jmp
xchg
lds
rcr
push
sbb
jecxz
std
mov
js
mov
xor
outsb
xchg
sbb
jg
int3
adc
and
sbb
cwtl
bound
call
jmp
leave
inc
push
cs
fildll
mov
and
fsubrl
les
cmp
repz
mov
cltd
enter
dec
lea
inc
cmp
stos
jnp
lods
mov
mov
lods
mov
mov
stos
mov
mov
ja
adc
cmp
icebp
and
arpl
cmpsb
pop
xlat
shl
mov
inc
int3
fdivr
xchg
cmp
push
in
cltd
mov
jge
movsb
stc
scas
loop
or
or
int
pop
jnp
das
push
inc
push
imul
into
outsb
jmp
aas
sub
dec
jbe
jnp
adc
push
je
cwtl
jo
popf
push
push
or
pop
iret
int3
jns
jno
loop,pn
jb
cmpw
mov
std
icebp
jns
push
xchg
push
inc
in
ss
ret
mov
aas
and
xlat
nop
leave
popa
and
jne
cmp
mov
js
pop
shll
lods
sarl
outsl
loop
daa
mov
lahf
sub
jno
addl
push
in
xor
dec
add
xchg
inc
loop
push
loopne
push
lods
push
cmovnp
cwtl
push
loop
fs
lea
mov
sbb
mov
sub
lret
insb
mov
push
ja
cmp
add
sbb
xchg
and
mov
pushf
mov
repz
scas
neg
repz
sub
cld
pop
push
jp
les
add
mov
out
pop
aam
sbb
inc
lret
dec
mov
pop
loopne
push
shrb
jmp
push
adc
adc
pop
iret
ds
inc
leave
cwtl
imul
scas
sub
adc
mov
push
addr16
fwait
sub
add
dec
stos
fcoms
out
jnp
adc
xchg
aas
rcrb
sarb
stos
stc
cmc
test
sub
cld
push
mov
fisttpll
mulb
shll
roll
xorb
mov
in
dec
jg
cmp
push
inc
jne
mov
and
out
fsubl
xlat
mov
sub
leave
and
testb
mov
into
sbb
fsubrs
mov
mov
xor
mov
cmp
fdivrl
imull
pop
cli
cld
jbe
jno
addr16
scas
insb
adc
insb
lock
je
mov
mov
add
xor
sbb
pop
jle
adcl
push
inc
sbb
sbb
jae
std
js
punpckhwd
push
add
sti
cmp
inc
daa
inc
xor
jns
pop
mov
icebp
fimuls
jg
dec
inc
incl
movsb
adc
xor
das
je
aam
fprem
mov
inc
or
pop
pop
lea
jp
out
test
imul
mov
scas
xor
cltd
leave
insb
mov
sub
dec
mov
pop
imul
movsb
jo
or
ret
or
aas
test
lret
jmp
jmp
shlb
jl
fstps
lods
add
loopne
or
mov
ret
sbb
adc
mov
push
or
test
sub
fidivrl
das
mov
xor
iret
mov
sub
dec
dec
push
and
xorl
sub
mov
cltd
lods
dec
iret
xor
jmp
imul
cmpsl
rcrl
xor
pop
adc
lahf
pop
int
push
in
out
inc
cld
jns
dec
xchg
orb
xor
add
daa
adc
mov
dec
jbe
mov
jns
lock
sub
mov
je
pusha
data16
push
rorl
adc
mov
enter
mov
jge
cmc
pushf
xchg
jo
lcall
fsubr
mov
lock
loop
xchg
hlt
adcb
out
sub
push
lods
xor
xor
shr
xor
pop
repz
lahf
xchg
mov
push
adc
dec
cltd
add
dec
and
add
add
pop
cmpsl
jg
loopne
add
adc
lcall
mov
in
adc
rcrl
lret
pop
push
dec
fwait
or
clc
xor
sbb
cmp
enter
push
mull
lods
cs
inc
pop
xchg
xor
test
xchg
cltd
scas
inc
adc
sbb
lret
push
movsb
cld
pop
xchg
dec
repz
and
mov
aaa
inc
mov
shlb
imull
movl
xchg
and
fs
int3
lea
in
in
das
out
lds
out
adc
insb
movsb
xchg
js
out
inc
jno
dec
sbb
inc
inc
mov
loopne
pushf
xchg
call
leave
aas
mov
push
cmp
stos
mov
out
or
sbb
mov
mov
dec
dec
mov
int3
pop
movsb
movsb
aas
or
mov
lock
mov
sahf
or
aad
jae
mov
cmp
repnz
jmp
repnz
leave
sti
out
mov
mov
icebp
pop
pusha
sbb
sub
mov
dec
int
aaa
enter
cmpsl
pop
mov
xor
add
sbb
fidivrs
cmc
insb
or
popw
bt
mov
mov
aad
std
test
pop
push
test
push
add
lcall
pop
inc
inc
push
orb
cmp
sbb
stos
mov
and
test
cmp
cmp
addl
lahf
cmp
xchg
pop
jmp
mov
pop
push
iret
mov
sbb
lods
cwtl
sti
fs
xchg
xchg
test
sbb
xor
adc
push
mov
mov
xchg
inc
nop
rorb
fldz
fildl
mov
andl
mov
and
or
sti
push
jmp
add
pusha
inc
dec
fs
rorl
cmp
sbb
bnd
xchg
scas
sbb
mov
push
jbe
icebp
xchg
pop
mov
shlb
jo
adc
push
pop
push
xchg
adc
pop
mov
adc
out
mov
pop
or
insb
inc
call
rsqrtps
fdivl
push
pop
int
mov
mov
cwtl
mov
aam
lahf
iret
imul
stc
push
test
xor
pop
xor
xor
adc
push
imul
cmp
mov
ficoms
push
sbb
test
xchg
mov
and
sbb
adc
data16
dec
and
enter
jp
es
aam
dec
dec
xor
cmpb
movsl
push
arpl
pop
jle
hlt
jg
jge
das
addr16
insl
aaa
into
fstp
xchg
insb
dec
xlat
hlt
lcall
popa
lcall
xor
jbe
pusha
inc
jmp
xbegin
icebp
loop
scas
xor
xchg
lock
xchg
test
insb
dec
aaa
sti
dec
cmpsl
icebp
outsl
sbb
push
ja
mov
or
sti
pusha
adc
enter
mov
mov
inc
sbb
fwait
push
nop
shlb
notb
cltd
xor
mov
pop
stos
cwtl
sub
nop
addr16
or
addr16
and
idivb
inc
stos
outsb
or
push
notl
xorb
sbb
jp
mov
or
stos
inc
icebp
xchg
fs
cwtl
xchg
and
or
fisttpl
jge
xchg
insb
push
adc
das
insl
and
fwait
ss
mov
add
cmc
decb
sub
js
fcomps
mov
sbbb
andb
sbb
sub
movsl
dec
addb
pop
add
dec
and
aaa
das
or
sbbl
fstl
es
movsb
lods
mov
imul
sub
adc
xchg
and
mov
dec
lods
mov
or
fdivs
loope
adc
call
push
xchg
jmp
sti
mov
mov
insb
imul
ljmp
pop
cmp
add
push
mov
inc
bound
imul
mov
insl
popa
inc
stc
push
jae
scas
testb
test
push
scas
pop
sub
rclb
mov
sbb
jb
leave
test
push
add
addr16
and
jns
mov
xchg
inc
mov
int3
fwait
sbb
xchg
movsl
out
hlt
shrl
ss
movsl
and
mov
insb
xor
in
adc
or
pop
fs
ljmp
hlt
add
adc
xchg
jns
dec
int
dec
mov
pushf
mov
aas
arpl
lods
ret
sub
xor
cmp
out
das
push
movsb
mov
lret
pop
pop
mov
scas
shl
dec
inc
dec
pop
repnz
push
fsubp
jl
in
ljmp
mov
mov
pop
loope
int
push
cld
popa
xchg
xor
mov
inc
int3
cmp
mov
lcall
add
stos
arpl
call
adc
imul
inc
and
mov
daa
add
push
nop
xchg
scas
arpl
roll
push
repnz
movl
out
xor
xor
stos
ss
mov
sub
push
mov
clc
pop
mov
sub
dec
aam
or
cmc
test
mov
cmp
mov
in
mov
out
mov
das
out
int3
call
xchg
gs
add
lds
add
xor
lret
mov
imul
jb
mov
scas
vpaddd
adc
dec
stos
pop
int
dec
jbe
into
ja
insb
int3
mov
and
sub
iret
and
testb
or
fwait
push
mov
xchg
push
mov
dec
cmc
iret
andl
movsl
xchg
inc
pop
mov
notl
popf
fsts
out
add
jns
inc
sub
inc
shlb
mov
sbb
std
and
push
cmpsl
stc
out
fnstsw
xor
rcl
fdiv
pop
mov
cwtl
push
cmp
inc
das
cwtl
mov
imull
dec
xor
sub
or
jnp
roll
fcmovne
lock
inc
push
aam
out
mov
cwtl
lds
je
push
ds
in
and
arpl
dec
mov
jne
push
cmp
rcrb
mov
adc
xchg
adc
xchg
imul
mov
mov
dec
jne
sbbl
pop
jbe
adc
sub
push
std
adc
repz
mov
mov
dec
push
mov
xchg
iret
rcl
je
sbb
inc
push
outsl
bound
jae
das
dec
mov
and
shrl
popf
cmp
inc
popa
icebp
int3
jne
inc
mov
stos
jbe
and
in
jecxz
lahf
sarb
dec
mov
push
push
ljmp
ret
addr16
push
clc
sbb
mov
mov
push
sahf
mov
sbb
ja
lahf
imul
inc
mov
ds
and
lahf
imul
cmp
loope
mov
and
jnp
push
dec
sub
dec
adc
mov
add
stc
out
xchg
neg
scas
pop
ja
ffree
mov
jl
aaa
mov
outsb
mov
fldenv
dec
outsb
aad
adc
xchg
mov
sub
or
in
add
jecxz
mov
mov
dec
xchg
ss
mov
mov
inc
xchg
fdivrs
xchg
mov
mov
rcll
test
pop
mov
adc
dec
push
and
xor
and
in
stc
dec
das
jo
cmp
dec
push
sub
mov
adc
fdivs
test
xor
sub
int
mov
xchg
ss
pop
mov
fistpl
jbe
jge
mov
testb
pop
sub
ja
mov
sub
xor
lret
cmpl
sbb
mov
pushf
or
xchg
or
test
mov
xchg
jge
mov
pop
lods
adc
mov
or
test
cli
loope
jb
xlat
or
sarl
xchg
imul
pop
cmovp
mov
pop
inc
or
es
pop
mov
dec
xor
xchg
sti
jl
ljmp
jecxz
insb
add
lahf
sub
pop
xor
sti
movsl
fwait
mov
idivl
add
icebp
cli
jns
sub
push
js
mov
into
daa
dec
dec
ljmp
push
dec
fdivrp
leave
and
js
mov
out
pop
inc
mov
lods
cmp
push
jge
pusha
xchg
sti
cltd
repz
jge
ret
leave
ljmp
sub
xor
dec
mov
adc
sbb
push
addb
xchg
cmp
mov
int
sahf
or
aas
pop
push
jne
js
mov
subl
xor
arpl
test
jmp
aaa
rol
fcmovne
sahf
cmp
xchg
dec
sub
add
adc
out
push
shrl
cmp
shlb
xor
and
sti
cmp
xor
pushf
jg
aam
setg
les
xor
or
adc
das
lret
lds
sbb
cvttps2pi
xor
jg
leave
cmp
sti
addr16
std
addr16
addr16
jne
int3
pop
xchg
call
mov
popa
dec
cltd
fsubrl
mov
js
xor
and
sub
mov
mov
pushf
jge
cmp
out
ret
int3
sbb
clc
cltd
aaa
push
xchg
mov
xlat
rol
xchg
push
sahf
mov
insl
cmp
inc
mov
sbb
xchg
stc
subl
mov
jg
cli
add
jp
or
push
sbb
jle
push
push
cmpsb
sub
pop
lods
xor
pop
dec
aam
push
mov
jecxz
mov
out
pop
sahf
fcmovbe
push
fwait
inc
ror
clc
in
xor
std
dec
pop
sub
ficoms
movsl
std
cltd
scas
push
outsb
outsl
inc
lret
push
bnd
or
push
and
orl
xchg
loope
scas
insb
es
das
call
in
insl
icebp
jecxz
push
rcll
iret
fld
lret
pop
shll
push
sub
xor
dec
pop
enter
dec
push
mov
out
inc
movsl
test
jb
enter
push
ss
pusha
sbb
push
mull
xchg
aas
popa
cmc
cmp
lret
or
out
mov
pop
repnz
push
cmp
jge
es
aad
adc
jl
in
or
fwait
movsl
stos
nop
sub
int3
aam
ret
fdivrp
mov
imul
sti
sub
xchg
fwait
es
js
loopne
inc
inc
fmull
iret
ljmp
jbe
xlat
pop
sub
adc
imul
addr16
jmp
jne
mov
call
dec
inc
stc
popa
push
and
data16
out
inc
in
into
xor
push
call
mov
push
push
mov
pushf
cmp
dec
sbb
xchg
add
in
ss
adc
scas
push
bound
sahf
cmp
or
dec
mov
or
adc
xor
ds
mov
shlb
jmp
push
repz
mov
jae
adc
js
mov
jo
sub
gs
les
xchg
jle
daa
clc
or
std
jbe
mov
insl
push
jbe
dec
cwtl
test
push
sbb
bound
add
ds
lea
movsb
andl
adcl
popa
rorb
inc
mov
push
je
int
xchg
pop
jge
ss
das
outsl
mov
mov
mov
mov
imul
inc
ss
and
out
push
lret
sub
adc
dec
fidivl
mov
jg
sar
in
inc
sub
mov
insl
cmpsl
add
pop
sub
cltd
pop
mov
push
cmp
mov
xchg
aad
jae
lcall
xchg
mov
icebp
das
std
aas
add
insb
scas
lods
mov
mov
mov
in
lds
lods
insl
mov
cs
add
das
dec
lcallw
push
call
aas
xor
push
xchg
push
inc
mov
inc
push
xor
dec
mov
jno
test
xchg
cmp
sbb
sub
mov
add
sarb
push
sbb
cmp
inc
or
scas
inc
and
in
jmp
xchg
inc
aas
cmpsl
xor
xor
subl
inc
inc
adcb
fcoml
xchg
pop
sub
jae
clc
aam
bound
sarl
or
sbb
sub
add
adc
nop
mov
sti
mov
lahf
xchg
outsb
mov
adc
mov
js
pop
addr16
xorl
lock
rorb
dec
and
push
jb
add
mov
inc
pop
pop
inc
ficoml
and
adc
inc
mov
mov
inc
xchg
sub
daa
jno
cmp
or
jne
jg
rorl
pop
fisubrs
arpl
xor
pop
cmp
mov
xor
dec
pop
arpl
je
roll
pop
dec
aas
fs
xor
out
mov
jbe
in
scas
aam
and
dec
jnp
mov
adc
jl
pop
mov
movsl
stos
xor
sbb
pop
jnp
call
fnstcw
push
icebp
lahf
fsts
outsb
aaa
les
movsb
xor
lods
push
mov
fs
mov
or
stos
pop
jbe
or
sub
call
jmp
les
loop
andl
loopne
std
mov
in
dec
movsb
jno
add
ja
jnp
std
dec
mov
adc
arpl
mov
outsb
ds
inc
ds
xlat
arpl
mov
aaa
jmp
dec
std
xor
pop
sub
mov
mov
jae
and
in
add
jl
ljmp
inc
cwtl
xor
sarb
sub
fiaddl
or
adc
pop
xor
inc
pop
mov
mov
mov
adc
pop
jp
mov
adc
fisubrl
sub
loopne
dec
mov
jb
pop
mov
push
jecxz
dec
mov
sbb
mov
pop
push
shll
sub
mov
mov
jle
xor
enter
jne
add
sarl
out
sub
loope
pop
adc
sbb
sbb
mov
in
push
lds
adc
xchg
in
insl
cwtl
rorl
fistl
nop
les
daa
imul
movsl
cmpb
popf
mov
lods
icebp
push
inc
daa
ss
ss
loope
cmc
in
fisttps
push
int3
ficompl
test
add
mov
mov
iret
test
cmp
sub
mov
jecxz
inc
adc
loopne
pop
test
push
pop
repz
pop
daa
pop
adc
lret
lahf
mov
dec
adc
ja
sub
dec
push
lds
mov
inc
mov
je
fiaddl
jge
mov
mov
cli
into
xor
dec
pop
adc
and
xchg
jnp
xchg
je
xor
repz
cwtl
mov
inc
xorl
pop
dec
mov
bound
xor
fsubl
je
stos
xor
xchg
ret
test
inc
ja
mov
jg
fldl
cld
cmp
stos
ds
sub
add
jle
fstpt
lods
or
ljmp
test
cs
cltd
in
nop
fs
ds
lods
stos
in
or
xchg
call
mov
pop
stc
mov
xchg
mov
jle
sub
scas
pop
popa
jns
mov
mov
or
aam
cmc
imul
enter
sahf
cmp
inc
in
or
rcrl
mov
cmp
imul
cli
push
xor
cmp
insb
fwait
push
adc
gs
jecxz
push
sbb
andb
ret
cmpsl
cli
mov
dec
xor
fmul
mov
cmp
sub
outsl
arpl
sub
sub
les
lods
pop
pop
addb
incb
sahf
out
mov
int3
mov
mov
pusha
test
stos
jl
mov
sbb
push
dec
out
push
iret
cmp
push
jmp
jns
pushf
pop
out
xchg
cli
lods
jae
xchg
jmp
cli
xchg
dec
jbe
sbb
and
test
jnp
test
jmp
sar
lahf
movsl
fs
jl
fisubs
xchg
xchg
ja
push
testl
stc
dec
lret
dec
sub
fiadds
cmpsl
mov
rclb
pop
dec
sbb
push
je
mov
aam
les
xor
adc
sub
in
mov
arpl
xchg
push
test
or
xlat
jl
es
xor
es
jp
stos
pop
es
sbb
out
inc
cwtl
push
ret
sbb
mov
fsubr
or
test
push
xlat
push
sbb
cld
lret
adc
std
push
cmp
fidivl
jae
lods
inc
lds
cs
adc
adc
data16
xor
int
mov
in
pusha
xchg
inc
push
mov
jp
dec
sub
aaa
pop
add
or
push
adc
xchg
adc
imul
stc
leave
cmpsb
xchg
arpl
lahf
aas
cmp
arpl
mov
xor
sahf
and
cmp
xchg
cmc
in
sbb
pop
test
imul
daa
push
stc
adcb
sub
adc
dec
test
negb
inc
and
idiv
push
subb
jmp
cmp
xchg
pop
jne
and
mov
dec
xchg
icebp
jbe
cmpsb
std
mov
push
les
and
pop
loopne
dec
xor
cmpsl
jmp
in
inc
lods
pop
subb
cmp
or
data16
lcall
xchg
in
xor
xorl
mov
xchg
popa
dec
into
sbb
cwtl
or
push
dec
hlt
out
cmp
sub
and
xor
stos
add
aam
nop
ja
mov
fwait
pusha
push
or
mov
inc
stos
cld
cmc
aas
test
xor
lret
add
xlat
push
jp
in
push
ret
jecxz
push
cmp
pushf
cmpsl
orl
lds
lock
repnz
mov
xchg
pop
push
mov
lret
add
imul
add
mov
mov
scas
std
and
hlt
iret
popa
daa
das
in
repnz
push
mov
and
shr
ret
jge
orl
sti
test
mov
and
pmullw
xlat
xchg
or
rcrl
xchg
test
loope
cltd
xchg
cmp
mov
nop
out
sub
roll
or
cmp
xor
movsl
ljmp
mov
cmp
add
mov
lods
dec
mov
add
inc
in
mov
cli
mov
lds
or
lret
pop
sahf
jbe
scas
dec
and
imul
repz
adc
cmp
sbb
add
sub
xorb
mov
clc
lea
cld
fstps
shrl
and
cmp
sub
data16
sti
pop
rcl
or
cld
test
push
jg
push
sub
mov
enter
leave
sub
lock
mov
cmp
xchg
rcrl
popa
push
loopne
ds
push
jne
or
or
sub
loope
or
lods
repz
mov
mov
and
pushl
pop
nop
xlat
mov
pop
or
daa
adc
lds
in
nop
test
adc
idivl
add
es
mov
aam
std
add
ljmp
jo
and
pop
jnp
push
pop
out
sahf
or
and
mov
cmp
aam
js
inc
xchg
es
test
push
stos
xchg
xchg
jmp
shl
cwtl
int3
aam
cltd
sub
es
iret
cmp
sub
xchg
inc
bound
and
or
in
push
sub
pop
leave
sub
xor
popf
inc
mov
dec
xchg
pop
jo
adc
shlb
data16
jo
cmpsb
inc
mov
add
lret
enter
loop
pop
dec
fs
sub
bound
dec
stos
sahf
negl
lods
out
in
and
sub
mov
mov
sub
enter
icebp
cli
xor
iret
out
in
dec
mov
mov
jb
sub
into
ds
xlat
adc
clc
push
add
jo
sahf
in
movsl
nop
cmp
popf
lahf
movsb
or
ret
jnp
cltd
test
xchg
testl
stos
aas
cmpsl
xchg
imul
lret
aam
gs
pop
xor
lock
rcrl
loope
xlat
cs
shl
cmp
out
adc
jnp
lods
imul
sbb
add
ja
mov
bound
sbb
lods
dec
sti
dec
mov
in
or
sub
and
mov
mov
lea
loopne
mov
lods
ds
ret
xchg
add
mov
pushf
inc
scas
mov
in
loop
inc
mov
in
push
fisubrl
mov
dec
inc
je
pop
aad
test
pop
call
and
mov
mov
dec
push
mov
pushf
mov
into
jg
fisttpll
notb
or
and
ret
or
sub
mov
stos
test
push
cs
clc
shlb
cmp
pusha
lcall
popa
sbb
in
cli
mov
mov
pop
or
lahf
movsl
pop
aas
adc
out
pop
and
push
js,pn
and
mov
mov
dec
sbb
add
mov
data16
xlat
int3
jl
or
xchg
in
inc
xchg
inc
push
call
mov
adc
test
addr16
lods
cmp
jns
and
data16
cmp
xchg
pop
cmp
cmpsb
das
mov
iret
push
mov
testl
and
pop
and
call
inc
mov
pop
add
cvtps2pd
vmread
mov
in
xor
add
pop
into
lret
fcomps
or
push
pop
enter
fst
inc
cltd
mov
fisubs
mov
call
adc
push
xchg
enter
jecxz
out
dec
push
mov
enter
les
cld
jg
cwtl
jnp
push
hlt
fcoml
inc
dec
lret
inc
jge
xchg
into
push
enter
sbb
aad
cmpb
jae
dec
xchg
cs
mov
lods
fnsetpm(287
test
mov
mov
mov
sahf
mov
and
out
roll
dec
sub
inc
dec
in
sbb
insb
inc
xchg
pop
icebp
addr16
inc
xor
adc
ret
push
sub
lock
mov
and
ds
test
mov
bound
shlb
and
call
and
aaa
jp
sbb
popa
xor
mov
or
push
xchg
imul
and
mov
mov
sub
sub
lahf
push
imul
inc
gs
cmpsl
mov
cmc
fwait
xor
fstpt
lods
mov
inc
pushf
dec
push
and
sbb
sbb
mov
cmp
out
lcall
shrl
add
dec
cmp
movl
ret
int3
notl
inc
inc
adc
mov
pop
out
or
dec
mov
or
jns
xchg
add
addr16
mov
adc
insl
mov
mov
je
sbbb
jno
insl
daa
imul
mov
jle
inc
cld
push
jne
jno
and
fdivrl
out
xchg
lods
ljmp
insl
iret
push
push
popa
xor
arpl
das
jle
mov
outsl
mov
ret
dec
fisubrs
in
xor
fstpt
je
dec
lock
pop
aam
jne
idivb
mov
test
mov
je
jecxz
imulb
int3
stos
addr16
mov
add
mov
sti
rcrl
push
and
insb
pushf
fidivs
cmp
loope
imul
dec
mov
mov
mov
mov
out
pop
dec
fcomps
add
jno
inc
lock
xchg
xor
mov
mov
dec
aad
rol
adc
adc
or
arpl
nop
fstl
mov
jo
mov
sub
cmp
cwtl
fidivl
mov
mov
jo
inc
push
int3
test
cmp
cmp
pop
je
jp
test
cmc
insl
and
cmp
bt
and
lret
jno
fmull
in
aad
stos
push
sbb
daa
daa
jno
mov
mov
dec
orl
and
rcrl
jecxz
adc
cmp
xchg
cmp
nop
ds
mov
int
jbe
rclb
dec
inc
call
or
xor
rcr
cmpsl
int
sbb
and
cmp
cmp
sub
fistpl
xchg
outsb
jecxz
jns
stos
cmc
icebp
dec
cmp
or
shrb
jo
sub
shlb
push
xor
hlt
mov
xchg
or
insb
outsb
out
fdivrl
test
fs
dec
sbb
mov
add
enter
inc
ss
in
cmp
dec
mov
ficomps
hlt
inc
sti
cmp
xlat
add
sarb
in
mov
movsb
adc
lret
add
in
test
rcrl
aam
sti
mov
sbb
test
and
imul
cli
lock
lock
imull
jl
add
pop
inc
sbb
pop
sbb
cmc
test
and
mov
fs
ret
ja
data16
scas
mov
repz
jge
ds
add
adc
mov
testl
pushf
jl
sub
mov
pop
and
and
jp
call
cltd
push
ljmp
dec
jno
or
cmp
sbb
outsb
dec
bswap
ret
sbb
sub
or
icebp
jecxz
push
sbb
pop
pop
pop
cmpsl
std
sbb
das
lret
rclb
enter
sar
aam
adc
pop
mov
das
mov
int3
shl
push
mov
jle
mov
pop
add
mov
in
sub
aad
jmp
sub
cmc
sti
and
jmp
out
out
or
hlt
bound
push
or
arpl
push
xor
ss
stos
mov
popf
scas
jmp
jnp
or
jb
dec
push
mov
cmp
and
into
das
aam
dec
inc
dec
pusha
jb
or
add
enter
in
cld
cmp
sub
jae
repz
or
sub
into
dec
loop
and
mov
mov
mov
fnsave
ret
jns
addr16
addr16
imul
adc
out
lea
orl
cmp
mov
dec
adc
lea
dec
lcall
out
fidivs
mov
add
or
adc
movsb
aad
test
sbb
adc
out
mov
insb
jno
bnd
xor
jmp
jns
mov
cmp
add
jno
test
inc
int3
fidivs
mov
push
sub
dec
ja
pop
jno
fstps
pop
inc
cmp
mov
and
cld
js
xchg
mov
pop
aas
in
imul
js
bnd
mov
mov
int3
xchg
adc
sbbb
xchg
xlat
push
cwtl
pop
cmp
mov
dec
mov
inc
or
popa
push
into
aas
rorl
icebp
rcl
xchg
sbb
mov
insb
aaa
iret
incb
xor
imul
inc
or
mov
arpl
cltd
jbe
popf
das
cmp
adc
pop
dec
repz
mov
clc
or
call
dec
push
and
sbb
loop
xchg
jb
cmp
add
cmp
and
jl
push
insl
push
fistl
aam
outsl
fdivrs
mov
lods
jne
cmc
test
xor
repnz
adc
push
repnz
jb
push
pop
int3
je
lock
mov
les
and
cmp
jae
jmp
cmpsb
jno
mov
xor
xor
adc
faddp
subb
je
jg
fcmove
and
xor
sbb
addr16
inc
aas
pusha
test
and
in
dec
imul
push
rorb
cmc
sbb
dec
push
cs
test
mov
ja
mov
addr16
lea
movsl
cmp
lds
push
fistl
xchg
hlt
hlt
je
gs
jle
xchg
mov
xor
cltd
repnz
into
mov
scas
cmp
lcall
cmp
fdivrs
inc
dec
xchg
sub
and
push
push
lea
cmp
push
inc
out
imul
leave
ljmp
aas
mov
hlt
and
ljmp
or
leave
mov
dec
in
cld
cmpsb
cmp
out
cmp
loopne
and
aam
adc
add
cltd
cmp
mov
rcll
loop
lahf
mov
iret
xorl
in
xlat
push
push
call
adc
sti
cmp
inc
shlb
sub
bound
out
fldln2
into
push
push
pop
pop
cli
insl
push
pop
push
test
dec
adc
sub
das
adc
xchg
in
adc
sbb
out
adc
sbbb
pop
movsb
cmp
and
xchg
js
sti
out
inc
popf
jno
xor
or
jge
in
in
cmpsb
clc
jbe
or
pop
cmpsb
push
mov
rclb
out
xchg
mov
dec
out
sbb
dec
mov
fmuls
dec
push
ret
add
lret
loope
or
xchg
xor
add
aas
repz
daa
sbb
sub
sub
shrb
pop
xor
fwait
push
sbb
jg
dec
es
push
movsb
dec
stos
gs
in
and
push
xor
jae
inc
into
mov
insb
ljmp
popf
xchg
inc
jg
xchg
ljmp
jno
push
mov
test
daa
mov
mov
jb
jle
fs
mov
add
in
fs
out
stc
mov
add
outsl
mov
pop
mov
insb
lds
mov
mov
xchg
and
and
or
jg
mov
jmp
dec
cmp
jp
sub
inc
je
adc
movsb
mov
roll
mov
cmp
repz
cmp
push
inc
adc
stc
inc
mov
adc
jge
addr16
dec
stc
push
dec
inc
imul
xor
cmp
je
ljmp
mov
out
mov
cmp
push
pop
js
xor
sub
aas
jns
sub
inc
xor
mov
arpl
dec
pop
fsubrs
cs
jg
dec
fs
hlt
inc
rol
fidivrl
repz
mov
push
pop
jnp
fs
aam
or
inc
jp
lock
ret
andb
fstpt
inc
outsb
mov
popa
ja
inc
inc
je
shl
stos
inc
xchg
push
stos
push
in
and
add
xchg
mov
cwtl
shr
sub
sbb
stos
leave
or
mov
dec
cmpsb
mulb
mov
jns
loope
imul
adc
insb
aaa
dec
jle
popf
test
mov
cmp
or
dec
in
sbbb
push
lret
inc
sbb
dec
movsl
arpl
xor
add
fistpll
pop
push
inc
out
mov
sbb
jg
sbb
lret
cmpsb
fs
sarb
sub
ja
ret
enter
add
ja
or
jg
loopne
push
rcl
pop
insb
mov
cmp
in
xchg
push
cmp
xor
pop
lock
imul
mov
push
insb
and
negl
inc
jecxz
dec
push
push
or
adc
sbb
pop
add
repz
mov
xor
mov
cmp
xor
sub
push
dec
jbe
adc
xlat
cmp
xorl
addb
cltd
adc
mov
lahf
ja
adc
or
pop
or
lods
sub
mov
int
outsl
or
mov
fidivrl
mov
sbb
testl
pop
scas
jp
adc
cs
std
les
popf
sub
jne
mov
shrl
cmp
lahf
or
movsb
jno
call
leave
out
cmp
imul
pop
xor
pop
sub
xlat
pop
or
sub
ds
jbe
arpl
push
mov
push
test
les
sarb
dec
test
adc
mov
adc
lods
cli
addr16
push
ret
and
push
mov
mov
mov
cmovbe
mov
push
int3
xchg
fists
jne
or
out
sub
mov
dec
es
dec
out
lock
pop
inc
and
loopne
cli
cmpsb
lods
xchg
add
sub
inc
das
pop
pushf
frstor
mov
add
dec
repz
stos
jg
xchg
out
rcrb
mov
jl
adc
sub
ds
stos
test
mov
xor
push
outsb
push
mov
push
fsubs
popa
sbb
test
aad
popa
mov
mov
add
sub
cmpsl
and
dec
mov
fucom
or
fistpl
cmpsl
fcomp
jmp
fldt
sbb
xchg
lock
add
repnz
pop
lret
outsl
je
sbb
les
pop
sbb
cmp
sub
aaa
jecxz
xor
ret
ror
rolb
add
mov
push
in
fs
mov
jo
lods
mulb
pop
dec
xlat
cmpsb
sbb
scas
fidivl
mov
push
xchg
pop
pusha
sti
inc
jecxz
jo
cmpsb
imul
pop
push
dec
aaa
fucom
daa
lea
addb
ja
daa
push
test
sarl
push
jmp
and
sahf
push
or
sub
stos
inc
sub
inc
ret
scas
cmpsl
xchg
arpl
jne
mov
aad
dec
rolb
imul
mov
pop
aaa
mov
pushl
bound
jle
sbb
mov
addr16
mov
mov
leave
jl
add
xor
in
sbb
aam
mov
mov
xchg
adc
mov
mov
push
add
ljmp
sub
sbb
xchg
jle
jns
cs
inc
jp
sbb
pop
out
and
cmp
or
js
lds
cmp
mov
mov
xchg
jp
xchg
aam
scas
out
jnp
xchg
pop
push
jae
out
inc
jne
outsl
stos
stos
push
in
mov
mov
pusha
in
add
or
push
ret
js
inc
int3
push
js
test
push
mov
mov
push
mov
dec
out
cmpl
push
pop
gs
orb
add
cmp
int3
into
movsb
push
sahf
test
xchg
in
dec
movsb
and
mov
jo
or
cmp
mov
ficompl
cmp
mov
add
adc
sbb
je
frstor
fidivs
jmp
jo
flds
xor
xor
aaa
jnp
xor
or
pop
xchg
rcl
jp
test
mov
xor
mov
cmp
in
mov
lds
jp
sbb
repnz
mov
xlat
out
inc
daa
or
fwait
rcll
je
jp
mov
dec
lea
mov
repnz
xor
inc
nop
hlt
xchg
stos
mov
dec
addr16
loop
aaa
iret
outsl
xor
fisubrl
stc
add
or
adc
mov
adc
outsl
inc
inc
mov
fs
pushl
xchg
pop
mov
fsubrp
mov
in
imul
fisttpl
iret
sbb
das
jge
dec
pushf
mov
inc
adc
sbb
ret
gs
cmp
ds
mov
dec
clc
sub
push
mov
cmp
jbe
fmulp
mov
scas
xchg
ret
add
mov
inc
cwtl
jmp
mov
add
or
push
mov
push
cmp
push
mov
inc
jmp
add
outsb
dec
jp
jle
cmp
pop
xchg
inc
movsl
out
cmp
sub
sub
pop
lea
in
add
and
jno
out
adcl
bound
fildll
sbb
pop
fxch
cwtl
popf
sub
sbb
xchg
sub
cmpsl
test
xchg
outsb
pushf
pop
stc
jge
jae
push
or
negl
outsb
add
das
aam
enter
jle
push
fildl
pop
das
xchg
sbb
push
iret
jno
in
ret
or
jb
cwtl
fiaddl
repz
xchg
rcrb
rclb
add
inc
push
pop
xor
xor
and
inc
das
mov
jb
pop
inc
mov
xchg
outsb
or
cmp
rcrl
cmp
pop
cmpsl
stc
out
mov
add
sbb
jecxz
ficompl
fmull
sbb
nop
out
test
enter
jl
sub
mov
ret
xchg
shlb
xlat
mov
in
mov
or
movsl
dec
mov
in
cli
xchg
out
out
add
js
ljmp
add
pop
cmp
xor
cmp
lods
xor
add
mov
push
insl
jb
inc
popf
push
iret
or
pusha
xchg
scas
aaa
fsts
cli
fwait
add
into
hlt
outsb
sub
jge
jne
loopne
push
mov
lret
lret
scas
call
scas
mov
dec
mov
mull
mov
repnz
lret
sub
mov
lret
bound
mov
or
int
imul
in
xchg
mov
imul
nop
push
cmp
jl
and
insb
lds
ficoml
mov
cltd
outsb
fstl
push
push
cli
ret
pop
ficompl
push
jne
out
and
lds
pop
push
aam
jge
mov
imul
jo
mov
jno
push
mov
or
lret
mov
mov
jae
stc
cmp
dec
pusha
lea
mov
sbb
adc
mov
or
xor
cmp
add
jnp
or
repz
sbb
je
clc
xor
push
mov
and
fcoms
stos
js
xchg
stos
lahf
dec
add
mov
sbbb
inc
imul
adc
icebp
xor
sbb
pop
jl
repz
push
add
or
test
dec
movsl
and
dec
std
in
scas
jecxz
jo
lods
mov
gs
fnsave
rorb
mov
or
mov
push
push
into
lock
xsha256
cmpsb
adc
test
imull
cmc
inc
sub
and
jmp
js
into
xchg
mov
inc
adc
rcr
inc
ret
xor
pushf
cltd
dec
pop
mov
sbb
pushf
insb
mov
dec
lock
and
out
lcall
ljmp
mov
push
mov
lods
or
mulb
lds
and
daa
sbb
leave
out
xor
add
add
inc
insb
lods
jo
mov
imul
dec
test
clc
or
out
sbb
mov
inc
adc
cmp
ja
std
push
inc
add
add
cmp
xchg
adc
scas
jae
shrl
stos
int
imul
dec
mov
inc
cli
cmp
cli
sub
cmp
pop
jbe
ret
fidivrs
je
lods
cmp
fistps
lds
cwtd
mov
and
je
pusha
lods
pop
jle
mov
dec
cmp
or
dec
imul
out
cwtl
mov
ljmp
pop
lods
inc
cmp
xor
jno
in
xchg
xchg
dec
push
and
or
dec
mov
push
mov
xor
dec
jns
outsb
stc
cmc
aam
push
scas
inc
cmp
jb
jnp
xor
test
int3
mov
cmc
jp
mov
mov
add
sbb
xchg
fisubs
pop
repz
cmp
aad
js
outsl
shrb
aad
add
mov
adc
mov
bound
push
mul
pop
cltd
les
imul
lods
mov
sti
daa
arpl
push
dec
fwait
lret
or
push
mov
adc
popa
sti
xchg
pop
jnp
shrb
or
fcomps
sbb
sub
xchg
ficomps
push
push
xor
sahf
outsb
test
sbb
or
mov
adcl
mov
xchg
shlb
jae
lret
pop
or
fs
loopne
dec
push
jnp
test
sahf
push
cmp
adcb
sub
cld
enter
in
mov
jp
adc
cli
insb
rolb
mov
jnp
lcall
pop
andb
fidivrs
sub
xor
cmp
xor
dec
aam
out
jg
es
or
shll
arpl
xor
fmuls
and
cmp
jns
in
sbbl
adcb
adc
cmp
adc
scas
mov
cmp
cmp
mov
jl
mov
arpl
dec
and
aaa
mov
mov
or
pop
dec
cmp
lea
jecxz
mov
es
dec
xor
nop
and
sbb
cmp
pop
jp
push
mov
in
insl
fisubl
push
mov
ss
inc
cmp
mov
cltd
lret
hlt
pop
jo
pop
sbb
popf
mov
lea
in
adc
sbb
les
adc
push
mov
sbb
stos
fwait
cmp
faddl
xchg
cmpsb
insb
fs
sub
ljmp
inc
cwtl
add
jnp
es
lods
test
or
or
jl
mov
mov
aam
out
xchg
fiaddl
sub
inc
jecxz
in
jp
xchg
sub
movsl
jmp
xorb
mov
mov
sub
mov
or
aam
xor
push
jle
mov
fsubs
jecxz
divb
mov
hlt
xor
inc
mov
and
mov
fwait
add
mov
out
mov
sub
cmp
cmpl
mov
mov
adc
mov
inc
sub
imull
or
dec
sbb
mov
mov
adc
sub
xchg
add
addr16
stos
cwtl
xchg
push
cltd
lea
movsb
dec
subl
fldln2
mov
negb
push
mov
xchg
aaa
inc
push
xor
mov
adc
cmc
stos
xchg
out
sbb
mov
mov
jne
lret
and
sub
mov
es
out
xorl
push
fstpl
push
push
mov
cmp
rcrb
pop
sahf
cmc
and
das
cmp
jl
jnp
in
xchg
dec
jmp
adc
jp
dec
nop
jns
ss
mov
scas
push
cmp
xor
and
sub
mov
addr16
xor
cli
jns
fwait
mov
add
push
stos
adc
bound
mov
jg
lods
mov
push
and
loop
sub
icebp
pop
in
nop
jl
dec
cmc
shlb
jns
cwtl
pop
xor
add
add
push
xor
xchg
rclb
ds
int
test
and
xor
mov
out
jge
xlat
gs
jecxz
int3
fisttps
jae
fists
add
lods
or
mov
adc
jecxz
sub
adc
sbb
dec
push
xchg
xchg
push
pop
xor
mov
dec
jecxz
mov
pop
std
ss
cwtl
add
mov
das
ficoms
mov
pop
mov
mov
cli
mov
insl
inc
ret
cmp
out
sub
js
push
leave
sbb
stc
pop
sub
xor
cs
test
sbb
mov
pop
leave
aas
ljmp
pop
divl
pop
hlt
adc
push
dec
das
lods
pop
in
mov
clc
pop
fisttps
dec
lret
pop
es
cs
test
xchg
push
mov
mov
pushf
xorl
icebp
and
sub
gs
sbb
or
mov
xchg
inc
mov
in
rorb
sub
lods
sub
sub
aaa
in
mov
mov
sbb
sub
sbb
sub
mov
jl
push
cld
mov
xchg
daa
out
into
leave
insb
insl
inc
rcll
imul
adc
mov
js
sub
xchg
ds
push
sub
in
out
into
mov
xchg
mov
mov
cmp
aas
xchg
mov
cmp
faddl
movsl
lret
test
or
or
ljmp
aam
jp
iret
notb
inc
cltd
pop
push
jo
lods
xchg
xchg
sbbl
hlt
jg
adc
test
pop
push
sub
clc
lcall
jo
mov
and
aam
mov
xor
jle
adcb
dec
cmp
pop
pop
jecxz
aaa
and
or
mov
in
xchg
mov
shlb
icebp
out
mov
adc
ret
mov
call
insb
inc
fsubrl
rolb
sti
jb
bound
cmp
mov
hlt
in
mov
and
jne
fsubrl
pop
push
imul
add
cmp
shl
adc
inc
fstpt
adc
mov
sbb
dec
int
pushf
push
stos
dec
jns
sub
data16
or
jnp
xor
fiadds
push
ds
dec
xchg
mov
ja
loopne
mov
cli
mov
jbe
push
pusha
pop
shr
pop
or
mov
and
sub
dec
xor
stos
arpl
jbe
aad
jns
sarb
imul
pop
jp
fistpl
cmp
lret
mov
mov
pop
jae
fnsave
xchg
push
mov
mov
iret
adc
popf
mov
push
jl
and
cmp
dec
out
sahf
test
fwait
data16
sbb
into
popf
imul
push
jp
daa
dec
les
cli
and
dec
inc
inc
dec
mov
push
test
cs
sub
xchg
dec
jmp
sub
arpl
pop
jle
ret
loope
lahf
mov
mov
hlt
repz
fstps
xchg
test
cmp
adc
jns
sahf
cmp
jg
rcl
mov
dec
xchg
fnstenv
rorb
dec
add
sub
fdivl
sub
fidivrl
mov
cld
jl
inc
popf
dec
pop
sub
call
stos
sub
adcb
cwtl
push
mov
push
jmp
sbb
js
insl
fcom
gs
out
jge
add
rolb
jmp
cmpb
in
gs
xchg
jnp
repz
mov
movsl
mov
mov
fs
jnp
popa
cmp
pop
jno
inc
jo
fimuls
ja
jecxz
hlt
fadd
mov
insb
dec
mov
call
lahf
into
push
cmp
cmpsl
in
and
mov
fnsave
rcll
mov
test
push
cmp
lsl
imul
clc
cmpsb
test
inc
xlat
aad
in
xchg
sub
pop
push
cwtl
cli
jne
xchg
or
mov
shr
pop
stos
andl
mov
mov
gs
push
dec
cwtl
or
mov
xor
dec
or
rorl
movl
loopne
adc
jb
fs
fcompl
push
sarb
dec
mov
push
and
movsb
or
insb
dec
add
std
stc
call
push
arpl
icebp
push
adc
ljmp
lret
mov
fsubrp
dec
lds
mov
pop
div
xor
imul
ja
mov
xchg
pop
pop
test
sarb
xchg
in
pop
sub
mov
aaa
rcll
xor
insb
or
sbb
mov
mov
xor
push
loopne
sbb
test
ss
pop
mov
jne
xchg
fucom
sbb
stos
ds
jg
lret
fucomip
push
pop
ds
pop
xor
jb
inc
pop
or
pop
sbb
push
xor
in
in
sarb
mov
adc
lcall
mov
pop
and
sub
mov
mov
xor
pop
jnp
repz
dec
stos
mov
cmp
jo
add
flds
fdivrs
les
mov
cmovbe
pop
stos
aas
jmp
cmp
dec
jne
cli
enter
scas
jnp
sbb
xor
mov
dec
icebp
xlat
fcoms
pop
pop
stc
enter
jecxz
das
out
mov
cld
xchg
lret
sbb
aaa
aaa
addr16
inc
mov
ficoml
inc
fwait
pop
repnz
decl
je
push
inc
insl
adc
mov
pop
cs
adc
stc
icebp
arpl
pusha
cltd
cmpsb
mov
mov
push
sahf
stc
xorb
sub
or
loop
insl
data16
inc
sbb
jmp
sbb
pop
push
mov
or
mov
mov
iret
mov
aad
sbb
das
adc
or
leave
sbb
cmp
cmp
dec
mov
dec
filds
jbe
and
out
mov
jb
cs
jge
lods
push
jae
add
pop
std
sarb
outsl
in
jmp
xor
fld
mov
push
push
mov
mov
xchg
adc
icebp
int
imul
xlat
mov
and
add
push
lahf
outsl
push
xchg
dec
or
mov
out
mov
addb
jmp
mov
jae
mov
pop
mov
jns
dec
cmp
or
inc
call
jns
push
mov
daa
in
orl
dec
loope
jle
jns
decl
test
dec
jge
and
clc
inc
cmp
mov
cmp
iret
stos
push
and
in
mov
stos
jmp
mov
and
lcall
add
pop
pop
sti
xchg
cmp
sub
flds
adc
scas
ret
sti
sbb
push
lahf
notb
faddl
pop
cwtl
and
adcb
sub
mov
or
mov
mov
mov
nop
add
mov
adc
int3
jp
and
dec
jl
pusha
sbb
into
xchg
rclb
scas
mov
fsubl
jle
es
fwait
dec
pop
subb
push
dec
mulb
bound
xor
dec
cmp
subl
mov
jae
sub
push
adc
jo
jnp
sub
or
push
and
outsb
in
mov
dec
xor
cmc
es
test
rcrl
fisubs
xorb
js
and
mov
popa
mov
pop
push
pop
cs
out
sbb
jg
es
xchg
int
arpl
dec
pop
push
push
leave
scas
daa
js
inc
xchg
notl
clc
lcall
adc
push
push
inc
xchg
mov
js
push
ja
rorb
into
dec
xor
mov
in
push
rorl
pop
mov
cmp
jo
push
jl
push
pop
pop
mov
in
push
out
jb
repz
clc
enter
enter
cltd
xchg
xchg
js
addl
jle
jl
shrl
ret
mov
aad
sub
adc
xor
outsl
aad
jecxz
jl
ss
outsl
lds
pop
in
push
pusha
inc
das
dec
mov
ja
inc
jne
pop
pop
nop
push
pusha
push
popa
cmp
js
pop
cmpsl
lahf
jecxz
push
lods
inc
dec
je
xchg
xor
mov
mov
pinsrw
idivb
push
daa
into
test
stos
and
aam
cmp
or
scas
out
cmc
lea
sub
sbb
pusha
out
inc
adc
in
bound
aas
pop
jnp
scas
jl
stc
repz
push
cmpsl
xor
push
mov
xor
mov
or
cs
jp
scas
je
cmpsl
outsb
cmp
ljmp
int
inc
scas
inc
mov
in
adc
inc
cmp
adc
icebp
or
fwait
sbb
in
sbb
or
idivl
adc
out
mov
daa
imul
pop
xchg
ja
cli
ficoms
fwait
pop
scas
mov
decb
and
xchg
fidivrs
int
sbb
mov
test
jae
stc
jl
or
gs
in
xchg
cmp
gs
sbb
faddp
iret
mov
fdivrs
icebp
mov
push
inc
jb
cmc
call
inc
pop
scas
pop
jp
adc
js
outsb
adc
jo
scas
sbb
loope
xor
cmp
dec
bound
or
cmpsb
xchg
cmpsl
and
enter
pop
push
mov
insb
lods
add
add
loope
out
cmp
sub
je
xchg
cmp
out
inc
aaa
inc
frstor
ffree
cmp
pushf
nop
or
push
xlat
pop
jns
inc
mov
adc
push
sbb
cmp
andb
imul
pop
sbb
jns
enter
sub
popa
scas
adc
repz
negb
clc
mov
scas
fdivl
cltd
fwait
das
es
out
push
idivl
popa
sbb
add
loopne
in
cwtl
xor
dec
mov
int3
aad
fisttpl
insb
sbb
xchg
loop
or
aaa
lds
aaa
mov
scas
inc
insb
cli
jp
sbb
pop
xchg
out
icebp
lcall
in
inc
xchg
stc
jmp
mov
sbbb
int3
jge
cwtl
add
push
inc
imul
ret
pop
or
push
and
cmpsl
repnz
xchg
and
sub
shl
adc
mov
push
add
mov
in
int3
fiadds
movsl
cmp
iret
es
out
mov
in
sub
mov
push
test
jnp
mov
inc
lcall
xchg
mov
inc
add
lock
push
sti
shlb
mov
xor
xchg
push
xor
add
or
xchg
pop
push
sub
jge
mov
rorb
popf
aad
xchg
jo
or
loopne
sub
pop
mov
push
out
mov
ret
jne
les
mov
mov
cmp
testl
mov
xchg
shll
lcall
mov
aad
movsl
outsb
push
clc
call
dec
fidivrl
pop
mov
jno
lods
jge
xor
mov
imul
or
lods
pop
ja
clc
push
or
je
xlat
rolb
cmp
push
jno
rcr
lea
ljmp
enter
insb
jl
data16
aas
lock
push
js
mov
ret
mov
loop
sbb
sub
xor
jae
outsb
adc
sbb
lahf
test
test
cmp
adc
gs
mull
test
dec
xchg
mov
cmp
push
icebp
in
pop
jns
sbb
mov
mov
xchg
and
jmp
or
sbb
es
popf
mov
xor
test
ja
repnz
mov
xchg
mov
sub
stc
pop
inc
fists
or
out
add
or
nop
test
repz
dec
sbb
xchg
jge
adc
lods
lahf
in
out
out
ret
xchg
sbb
pop
or
xchg
faddl
pop
jno,pt
xchg
cld
pop
out
es
lret
das
imull
sbb
mov
xor
jne
sbb
xor
mov
out
xchg
sbb
mov
push
rol
je
pop
pop
jb
mov
and
int
inc
add
fiadds
push
add
arpl
loope
and
mov
fimull
cmpsl
pop
mov
cmovge
dec
and
test
dec
or
xor
pop
mov
dec
lds
cmc
add
mov
cld
dec
fisttpll
imul
aam
lcall
lea
push
add
sub
or
adc
imul
jno
mov
jge
add
test
fcmovnbe
stos
hlt
incl
mov
das
sbb
dec
pop
xchg
mov
xchg
mov
cmp
call
mov
notb
lods
jb
add
or
mov
ds
push
cmp
rclb
bound
xchg
mov
sbb
lret
inc
insl
out
ljmp
icebp
fldt
das
jno
or
sub
in
push
sub
add
outsb
add
fnstcw
pop
mov
mov
inc
add
sub
or
jl
xorl
jl
rorl
xor
mov
adcb
decl
sub
jecxz
dec
xchg
arpl
push
mov
mov
push
roll
mov
and
jae
clc
mov
pop
add
ror
or
sub
push
push
xchg
jp
lcall
mov
sbb
out
xchg
sbb
mov
sbb
adc
or
push
jne
push
test
sub
loope
sbb
add
mov
cltd
push
xchg
shlb
ret
sbb
aaa
inc
in
pop
gs
iret
jmp
out
mov
aas
or
jbe
or
sbb
xchg
mov
cs
xchg
subb
inc
pushf
insb
paddq
inc
int3
pop
inc
cmp
or
insl
clc
enter
inc
mov
in
jne
ljmp
sbb
sbb
mov
push
aad
bound
ds
lcall
pop
int
dec
inc
cwtl
mov
int
xchg
ja
lods
cmpsb
or
and
ret
sub
xchg
inc
pop
push
fdivrl
je
or
and
mov
frstor
aaa
addb
pop
add
adc
inc
mov
mov
push
inc
aaa
cmp
sahf
popa
sti
mov
jle
jmp
ficoml
add
bound
hlt
cmp
mov
add
xor
pop
mov
adc
mov
das
in
imul
sar
pop
lods
jle
pop
pushf
xor
sub
es
mov
aam
andl
or
push
aad
out
sub
pop
jbe
orl
jl
std
dec
out
mov
or
cmovbe
pop
and
pop
push
mov
inc
stc
xorb
jg
enter
sub
mov
sarl
popa
test
mov
xlat
imul
pop
stos
scas
out
lea
mov
or
inc
inc
dec
pop
cmc
fldenv
movsl
jmp
in
sbbb
sub
fidivl
lret
inc
mov
sub
xor
addr16
mov
dec
push
in
add
clc
xchg
xchg
sbb
out
jge
dec
inc
arpl
inc
adc
adc
mov
scas
pusha
out
jnp
adc
clc
ja
pop
jb
cmpsb
fsubrp
imul
or
or
xchg
cmpsb
leave
push
xlat
sti
clc
mov
add
xchg
push
jp
mov
popl
cmp
pop
cld
xor
fdivl
test
out
lods
out
or
dec
ljmp
out
pop
pop
pop
pop
test
adc
xor
jl
dec
sub
mov
add
les
hlt
cs
cli
or
jge
jge
add
cmp
sti
cli
popa
jecxz
xchg
sti
je
adc
idivl
mov
frstor
mov
ljmp
lret
cmp
jle
iret
dec
inc
outsb
add
cmp
xlat
popf
fsts
or
push
push
in
ja
in
jae
test
bound
jle
fadds
sbb
out
orl
leave
lods
adcb
pop
push
lcall
push
xchg
into
js
inc
int3
mov
out
sbb
push
sbb
dec
mov
mov
mov
sbb
movl
jecxz
cmp
idivb
adc
or
das
adc
push
repz
adc
sarb
push
adc
cmc
xor
in
xchg
mov
and
jp
adc
xorb
out
pop
js
sti
fs
mov
pop
add
mov
movsl
mov
data16
jecxz
inc
push
jg
xchg
adc
mov
movsl
shlb
lret
add
and
mov
push
or
scas
dec
pslld
aas
and
push
les
push
push
xchg
sub
fs
xchg
mov
adc
insb
mov
lea
xlat
cmp
inc
lock
loope
adc
nop
cltd
xor
test
movsl
push
mov
pop
jns
loop
jnp
push
repnz
repz
icebp
or
push
icebp
sub
hlt
cmp
loop
paddsw
das
mov
std
addb
stc
or
and
pop
icebp
xor
pop
movsb
dec
xchg
sub
out
popa
lret
outsb
das
adc
lahf
das
xchg
dec
or
outsl
in
arpl
push
es
mov
aas
rcr
jbe
stos
inc
arpl
inc
xchg
leave
fcoml
out
cmp
jmp
es
cmp
lcall
stc
cmp
mov
or
add
fmuls
or
jne
fldl
push
jge
xchg
sbb
adcb
jbe
mov
and
or
or
movsl
and
cli
inc
adc
mov
cmp
fwait
cmc
dec
ds
push
pop
sbb
cmp
mov
bound
mov
push
pop
int3
jp
and
mov
aad
sbb
adc
adc
sahf
xchg
dec
xchg
adc
cmpsl
inc
mov
mov
xchg
ret
cmp
mov
je
xor
hlt
cltd
shr
lahf
scas
sub
mov
push
mull
and
nop
xor
pop
jg
or
mov
sbb
fistps
jp
lds
push
loopne
mov
fwait
jb
aad
cmp
std
xor
jecxz
xchg
aaa
mov
dec
inc
int
mov
sahf
push
push
outsb
outsb
in
ja
push
ja
xor
jmp
pop
movsb
mov
scas
push
dec
and
fnstsw
and
mov
sbbl
xor
mov
jno
adc
sbb
dec
cmp
in
and
xchg
stmxcsr
divl
fstps
into
lds
addr16
or
sub
aaa
push
sbb
jbe
adc
subl
xchg
jmp
nop
pop
jle
push
or
xchg
jne
cmp
adc
jl
xchg
adc
pop
pop
xchg
xor
cmpl
adc
loop
test
test
shrl
mov
xchg
mov
jge
rcr
lret
mov
popw
lock
xor
lcall
out
xor
jne
mov
xor
cmovo
repnz
notl
fildl
sub
incl
bound
sarb
push
das
push
xchg
jecxz
and
scas
out
mov
cs
jp
inc
and
xchg
pop
lahf
mov
lods
push
addl
cmp
cmovno
rorb
xor
es
or
ja
jo
and
pop
outsb
and
dec
cmp
cmc
enter
jecxz
cmc
adc
dec
adc
xor
add
shrb
test
enter
or
stos
frstor
pop
push
sub
push
insb
push
xchg
jo
add
jl
xor
xchg
fs
mov
test
call
mov
xor
adc
loopne
pop
shll
mov
pop
mov
jns
call
aam
xor
mov
pop
sub
cmp
bound
ret
pop
fs
test
rol
cmc
jb
inc
push
inc
jmp
mov
test
scas
in
repnz
jns
scas
outsb
fildll
pusha
ud1
cmp
xor
imul
out
fisubl
insb
mov
mov
pop
hlt
pushw
adc
add
out
daa
and
mov
jge
rcrl
pop
jp
mov
adc
jnp
or
sub
or
aaa
hlt
bound
repz
clc
adc
loope
in
test
pop
aam
xchg
loop
cs
sub
mov
fwait
lds
sbb
dec
sub
push
push
fstpl
js
ficompl
xor
loop
out
ja
adc
sub
imul
int3
mov
push
and
pop
xchg
jmp
mov
sbb
or
push
mov
and
std
mov
pop
lds
sarb
or
insl
rorb
mov
test
pop
stos
ret
leave
jb
mov
pop
mov
xchg
add
and
ja
lock
lret
aam
in
inc
mov
loopne
cmp
lods
mov
hlt
inc
and
inc
fwait
adc
xchg
add
mov
leave
mov
mov
bnd
orl
sbb
pop
or
in
push
mov
stos
cmp
or
xor
pop
and
lods
add
and
aaa
insl
jae
mov
push
enter
xlat
js
int3
sub
xchg
inc
and
or
cltd
das
push
testl
sub
sub
loop
pushf
or
xchg
mov
sub
adc
or
frstor
mov
repz
faddp
dec
fisubrl
pusha
or
inc
push
and
test
mov
imul
push
in
outsl
hlt
dec
rcrb
cmpl
and
or
jb
ja
jmp
sahf
arpl
dec
loopne
daa
adc
cmpsl
inc
in
push
xchg
in
out
sbb
lock
push
in
jmp
in
pmulhuw
cmp
sub
bound
sar
dec
sar
adc
xlat
mov
inc
xchg
scas
dec
aas
in
or
out
sub
jne
mov
mov
je
and
adc
dec
adc
cmp
fldenv
mov
and
push
inc
aas
cmpsl
mov
jo
pop
jge
loop
sbb
nop
xchg
mov
popf
mov
in
xchg
mov
xor
rcrb
daa
inc
xor
clc
mov
popa
movsb
xchg
xlat
cmp
sbb
sbbb
or
and
jecxz
mov
in
xor
sbb
pop
loop
fucomi
lods
sar
addb
out
adc
jno
add
andb
pop
adc
xlat
jecxz
movsl
shl
loop
push
leave
pop
xor
lsl
lret
add
dec
jno
out
fsts
dec
pop
icebp
rorb
dec
shlb
aas
or
pop
lea
aaa
push
lret
xor
sub
or
sbb
push
jle
cmc
sub
add
dec
mov
xchg
lods
scas
xchg
mov
mov
mov
mov
jg
iret
arpl
xorl
mov
je
or
xor
addr16
mov
inc
fnstcw
fstpt
out
mov
inc
mov
jno
ret
jbe
movl
fs
scas
pop
sub
je
mov
ljmp
jbe
je
and
or
mov
repnz
mov
mov
pop
test
pop
lret
out
shll
out
aad
inc
fdivrs
cwtl
xchg
mov
dec
or
sti
mov
pop
mov
jle
lret
fcomps
stos
ret
shlb
cmc
cmp
aas
sub
sbb
push
mov
cmp
push
xor
sbb
push
movsl
fildl
call
xor
aad
mov
in
ret
dec
enter
daa
insl
out
jle
loop
push
dec
xor
cmp
enter
or
sbb
arpl
stc
test
add
mov
jp
mov
and
inc
andl
subb
mov
sbb
mov
out
cli
out
mov
xchg
lods
testl
adc
jmp
ja
cmpsl
mov
jecxz
adc
add
xchg
cmp
mov
in
test
lahf
jnp
xorl
jno
dec
icebp
jno
inc
mov
clc
mov
insb
das
sbb
andl
mov
js
push
insb
sub
cmpsl
lahf
sti
cmp
cmp
sub
fs
test
pop
lret
add
dec
test
fscale
in
mov
jp
push
pop
fwait
gs
mov
sbb
fmull
sub
mov
fiaddl
mov
mov
sbb
movsl
push
push
movsb
filds
out
pop
lods
aaa
adc
or
out
pop
mov
fisttpl
jb
pop
dec
dec
inc
je
mov
mov
test
and
int
repnz
out
and
arpl
xor
cmpsb
test
lea
in
adc
popf
stc
mov
mov
rcl
test
pop
lods
pop
outsb
fsubrs
addr16
addr16
add
adc
imull
stos
loopne
loopne
xchg
mov
fisubrs
in
test
lods
jg
test
mov
xchg
pop
xchg
dec
cs
stos
in
cmpsl
adc
psrlw
inc
addps
mov
xor
pop
pop
je
call
dec
lret
pop
cmp
pop
adc
push
jl
iret
inc
inc
filds
les
loope
xchg
stos
iret
cmpsl
insl
mov
loop
je
dec
xor
cltd
sub
in
sub
adc
adc
pushf
xchg
xor
roll
inc
jmp
das
cmp
sarb
bound
mov
dec
and
xchg
notl
jo
pop
and
mov
les
inc
adc
add
pushf
push
or
add
xor
lret
jnp
sub
pushf
xchg
sub
fmulp
mov
adc
sub
loope
cmp
fs
jmp
cmpl
addr16
sub
adc
jp
and
jo
std
test
inc
push
rorl
dec
aad
fwait
mov
jle
add
cmp
into
and
iret
dec
ficoms
js
repz
pop
ljmp
xchg
movsb
fisttpl
test
jl
mov
jg
inc
popa
or
jle
xchg
and
pop
popf
ljmp
call
xor
rorl
push
lcall
insl
jle
xchg
dec
dec
testb
paddw
lock
push
mov
jns
xlat
xchg
jge
push
and
jns
popa
test
dec
push
xor
ja
stos
push
jb
in
mov
dec
push
scas
cmp
imull
jmp
lcall
shr
dec
mov
rorb
lret
or
imul
mov
daa
mov
mov
cmpb
mov
ds
mov
pop
stc
sub
xor
js
dec
out
add
push
aam
negl
hlt
pop
loopne
add
popf
ss
sahf
fistps
hlt
clc
test
fwait
shr
in
sbb
or
push
pop
nop
and
xchg
sbb
insl
mov
insl
xchg
fwait
jo
mov
push
xor
jns
nop
out
out
subl
ss
aas
js
xchg
sbb
scas
and
sub
cmp
pop
gs
adc
orb
movsb
popf
pop
call
mov
dec
mov
adc
sti
sub
mov
pop
shll
adc
push
dec
aaa
fdivrl
fbstp
ss
fsubrl
scas
jge
cmpb
mov
es
shlb
and
int
popf
push
lods
add
ficoml
lock
mov
mov
add
out
rolb
jbe
pop
inc
push
sbb
fs
adc
push
fsubrl
lret
mov
sub
dec
out
push
fstpt
iret
dec
cmp
bound
pusha
je
push
data16
repz
or
push
aas
pop
pop
loope
in
mov
int
fadds
fistpl
dec
adc
das
push
negb
cmp
jbe
pop
mov
pop
mov
jnp
push
push
icebp
cltd
inc
fildl
mov
pop
adc
stos
fsubs
icebp
clc
jle
call
in
jmp
das
jge
jo
cmp
roll
pop
outsb
jae
imul
sbb
out
frstor
add
xlat
cwtl
out
or
dec
add
push
in
cmp
cld
add
inc
into
pushf
mov
cltd
ja
inc
or
movsb
fldt
cmp
add
mov
adc
lds
mov
mov
xchg
adc
orb
sarl
addr16
xchg
idivb
mov
xchg
leave
inc
xor
xor
call
int3
dec
jb
out
repz
pop
cmpsb
and
add
xchg
aas
ja
xchg
ss
cltd
mov
ret
outsb
mov
pop
mov
xor
out
call
sahf
pop
mov
jno
jge
push
mov
inc
sbb
mov
pop
cld
vcvtpd2psy
push
popf
jge
push
in
and
mov
dec
cmpb
mov
lea
shrb
jge
xchg
and
outsl
pop
cmp
or
cmp
push
cs
pop
fwait
cmp
xor
xor
sarl
xor
adc
add
ljmp
lcall
push
shlb
sub
fisubs
inc
add
or
jmp
dec
imulb
jecxz
cmp
adc
lea
cmp
jp
pop
cld
dec
andb
das
mov
cmp
dec
outsl
jmp
xchg
xchg
jns
ja
pop
pushf
cmp
xchg
ljmp
out
inc
xor
or
mov
lds
jb
add
notl
sbb
dec
inc
mov
adc
fldt
test
push
dec
mov
mov
out
push
cmpsb
mov
cmpsl
frstor
inc
fildll
sub
jb
dec
add
clc
call
out
xchg
daa
dec
imul
cmp
push
icebp
call
clc
xchg
lds
jg
movsl
scas
cmp
push
xchg
into
add
mov
xor
push
xchg
movsl
aam
out
jb
inc
and
xorl
add
push
in
insb
out
not
xorl
and
pusha
xchg
and
cs
and
xchg
xor
aas
daa
pop
and
je
inc
insl
xchg
lret
push
jb
add
mov
jns
inc
push
repz
cs
adc
inc
and
pushf
cmp
lcall
xor
dec
pop
stc
imul
pop
aad
jl
mov
adc
pop
test
ucomiss
jle
adc
pop
mov
xchg
imul
push
lea
push
ljmp
daa
into
and
sub
adc
testb
lret
shll
push
popa
sbb
test
xchg
pop
xchg
sbbl
xor
push
cmp
mov
xchg
outsl
mov
movsl
cmp
push
sahf
jb
sbbb
xchg
inc
test
sbb
sbb
ja
mov
lahf
testl
push
xchg
cmp
clc
jb
clc
add
mov
lcall
push
mov
push
or
aam
and
push
mov
clc
inc
loop
jbe
sbb
cmp
push
mov
mov
pop
in
stc
movsl
clc
push
pushf
loop
mov
leave
mov
jl
or
je
call
sarb
test
adc
fldcw
jbe
out
movsb
mov
iret
dec
jo
push
mov
or
mov
jno
imul
xorb
in
sub
sub
in
mov
js
mov
add
push
add
and
aam
mov
sbb
push
pushf
fmull
pop
xchg
loopne
fldenv
imul
cld
div
sbb
mov
lock
xchg
sub
movsl
dec
xchg
adc
pop
fisttpl
push
xchg
or
jg
cmp
sbb
cli
nop
pop
fcomi
fs
movsl
cmp
loopne
or
rcrl
out
stc
dec
test
hlt
jns
bound
cltd
add
or
out
push
aam
insb
loop
mov
jecxz
std
fnsave
or
loope
gs
imul
jecxz
push
popf
inc
sub
cmp
xchg
jge
orb
fwait
stos
inc
push
add
sahf
shll
inc
push
adc
push
push
scas
in
mov
inc
shrl
loop
push
mov
leave
popa
mov
push
insb
aas
mov
test
xor
mov
ret
stos
sbb
sub
outsb
iret
push
mov
mov
and
push
outsl
sub
ret
push
in
sbb
shl
sub
cmpsb
aas
loope
loopne
cmp
mov
pop
pop
fucom
cli
icebp
lahf
sbb
mov
adc
imul
loope
mov
mov
mov
add
push
lcall
pop
cmp
test
xor
push
gs
mov
repnz
adcl
idivb
aam
mov
popa
addr16
movsb
jbe
and
ret
ret
stos
pushf
jo
or
mov
mov
das
dec
sbb
xor
xlat
in
inc
lcall
das
rcl
fisubrl
mov
dec
ficoms
sbb
jmp
test
jno
xchg
mov
lret
mov
jnp
mov
jmp
dec
mov
mov
stos
xchg
stos
push
push
mov
dec
and
dec
fcomip
or
pop
cmp
mov
jno
ret
fisttpll
subl
pop
and
push
stos
arpl
in
cmpsl
orl
insb
dec
hlt
stos
pushf
xor
aaa
xor
out
push
andb
dec
mov
pop
enter
aaa
lods
jge
cltd
mov
outsb
ja
jbe
push
jne
outsb
imul
dec
iret
pop
test
or
stos
aam
insl
xor
js
aad
divb
int
sub
add
notl
shlb
sahf
clc
adc
mov
popa
inc
dec
lcall
push
faddl
std
and
popf
dec
push
sbb
and
push
bound
gs
rorl
mov
dec
insl
fdivrs
mov
pop
arpl
in
je,pt
sub
pop
mov
int3
push
cli
lret
imul
cmp
rcl
cmp
insb
push
rolb
or
lret
sbb
jo
add
shrl
adc
lods
dec
insl
repz
in
xor
gs
mov
pop
jecxz
js
cmpl
jb
sub
or
jg
mov
cwtl
mov
mov
inc
psubsb
sti
inc
sub
adc
pop
mov
inc
add
mov
adc
mov
push
sub
xchg
inc
and
ficoml
aaa
sbb
aad
les
ficoml
loope
pop
arpl
outsl
das
mov
push
mov
inc
ret
xor
dec
inc
les
cld
xor
fdivrs
shrb
xchg
mov
mov
dec
sbb
ds
mov
popf
insb
lret
add
lret
test
mov
out
ss
jne
dec
scas
jmp
pushf
dec
jnp
repz
add
cmpsl
push
pop
adc
cmpsl
enter
and
or
and
pop
mov
outsl
add
nop
pop
cmpsb
vmovntpd
push
jl
out
call
ficoml
mov
or
mov
cmp
test
aas
sbb
push
bound
lcall
shll
inc
cmp
cld
fadd
scas
pop
mov
sub
jbe
outsb
lock
adc
js
jmp
in
push
cmp
jl
pusha
jecxz
mov
jle
fdiv
and
fistps
jb
movsl
sub
xlat
pushf
fdivrp
mov
jl
cmpsb
xchg
or
pushf
mov
cmp
pop
sbb
inc
test
test
sbb
notb
adc
xchg
add
repz
sub
das
cmp
fcoms
cwtl
lret
andb
mov
mov
and
push
pop
subl
and
aad
in
push
ret
cmp
pop
loop
ficoml
jp
cs
xchg
movsl
add
xlat
mov
adc
xor
imul
xlat
push
mov
sti
xchg
test
inc
or
imul
enter
push
dec
push
insl
push
jecxz
cmc
clc
push
jae
and
mov
mov
gs
add
daa
gs
mov
xchg
test
push
xchg
cltd
jb
pop
pop
xor
sti
jo
lock
fdivl
rol
push
pop
mov
addr16
sbb
stc
in
lea
dec
dec
sti
mov
push
iret
ret
int
pop
dec
movl
sub
mov
sbb
lods
cmp
shr
push
xor
xchg
mov
lret
sub
ret
sub
fists
sub
lret
add
adc
rcl
xchg
mov
inc
xchg
shlb
test
jge
jmp
aam
sub
insl
into
pop
mov
std
lret
mov
insb
hlt
push
in
cmpsl
xchg
sbb
adc
imul
or
mov
repnz
pop
cmp
les
push
lds
rcrb
dec
addr16
lret
xchg
das
mov
mov
mov
pop
lret
push
mov
daa
ret
or
js
cmp
dec
mov
addb
dec
fwait
cmp
dec
sbb
dec
mov
mov
xor
inc
push
sub
les
sub
pop
fildl
sub
adc
ja
mov
xor
add
jno
call
mov
xchg
repnz
js
movsl
sti
inc
mov
mov
fstl
and
cmp
xor
das
jnp
pop
mov
add
xor
arpl
sbb
mov
xlat
mov
dec
jbe
push
adc
int3
mov
xchg
aas
faddl
mov
xor
jns
inc
add
push
sbb
mov
fs
cmp
fidivrs
jne
add
andl
scas
push
push
adcb
push
bound
mov
mov
es
cmp
ficomps
into
xor
int3
dec
jl
sbb
and
and
add
nop
pop
cs
cwtl
mov
cltd
jp
scas
movsb
stc
outsb
mov
test
call
out
addr16
xchg
in
divb
adc
cmp
dec
mov
pop
jns
out
test
push
xchg
repz
popa
aad
sahf
mov
ja
jns
out
popf
sub
mov
jp
fstpt
addb
lock
sti
pop
push
sbb
or
je
add
jp
ror
xchg
test
xlat
repnz
fimull
popa
shrb
dec
test
jns
cmpsb
incl
cmpsb
adc
das
stc
xchg
in
mov
pop
pop
mov
pusha
mov
sbb
push
aas
mov
cmpb
test
inc
in
aas
aas
fldcw
fdivrs
clc
into
daa
je
jmp
pop
sub
aas
int
push
int
inc
xchg
mov
out
arpl
daa
stc
sbb
dec
loopne
std
pop
adc
sub
sub
mov
cld
inc
sbb
aam
sbb
and
jp
adc
xor
xchg
scas
adc
jl
cmpsb
in
dec
and
out
pusha
pop
stos
lods
imull
jb
inc
push
movsl
jmp
cmc
movl
push
dec
sbb
mov
in
ja
jg
test
fistpll
sti
imul
jne
lret
mov
inc
xor
xor
push
daa
or
lods
and
jle
and
subl
pop
jle
jne
out
bound
test
hlt
sbb
pop
aad
je
test
or
popa
inc
stos
cld
cmc
cmc
fcoms
bound
hlt
mov
push
sbb
or
cmp
xchg
dec
aam
dec
mov
imul
stos
call
lods
setb
xchg
pop
push
or
ret
mov
xchg
push
sbb
mov
popf
js
xchg
push
stos
loope
arpl
int3
cmpsb
lahf
jmp
mov
in
rcl
push
mov
mov
add
std
testl
mov
imul
test
shll
movsb
adc
mov
mov
imul
sub
cmp
dec
mov
outsl
add
addr16
pop
adc
cmc
push
jge
filds
mov
std
sub
data16
cwtl
xchg
insb
adc
push
mov
jg
jnp
stos
or
insl
pop
dec
xor
mov
mov
or
jae
popa
mov
pop
ret
lcall
and
push
mov
sbb
lock
mov
loope
mov
je
andl
pop
aam
rcrb
mov
push
mov
xor
imulb
dec
jecxz
pop
and
adc
loope
adc
mov
inc
adc
out
inc
in
lock
sbb
or
mov
and
or
cmp
push
in
rclb
push
mov
push
mov
adc
adc
inc
xchg
lods
std
xor
mov
ds
lea
inc
int3
or
jae
in
dec
mov
adc
and
stos
bnd
fimull
mov
and
dec
mov
sub
scas
stos
pop
mov
pop
jae
sbb
rcl
jnp
arpl
pop
repnz
jmp
sub
adc
cmp
jo
adc
xchg
cld
jb
mov
pusha
mov
in
fimull
loope
cmc
cs
xor
sub
lahf
adc
cmp
inc
lds
js
into
lock
mov
in
xchg
sub
lcall
xor
pushf
jp
outsb
push
mov
out
movsb
xchg
inc
rolb
sbb
mov
push
push
sbb
imul
sub
movsb
or
mov
ret
xor
jbe
stos
mov
ficoml
ret
mov
fstps
les
fldcw
jae
push
xchg
sub
jbe
or
inc
pop
sbb
mov
dec
dec
mov
jae
mov
xor
fists
push
jb
addl
mov
lods
jmp
cmc
cli
dec
xlat
cli
lret
scas
dec
fwait
shl
pop
inc
leave
or
dec
pop
jle
into
xchg
cmp
shl
aad
nop
xor
jp
xchg
dec
sbb
dec
pop
add
dec
mov
dec
xor
test
call
push
arpl
test
mov
jne
daa
adc
pop
lods
xor
mov
lods
xchg
cwtl
sub
sbb
jmp
mov
mov
xchg
mov
sbb
jge
aas
xchg
mov
in
push
call
andl
popa
mov
movsb
dec
subl
imul
xchg
or
inc
mov
or
pop
mov
xlat
and
int
inc
and
ljmp
mov
and
xchg
sbb
xchg
inc
lcall
dec
ret
leave
pop
mov
sbb
test
xchg
arpl
dec
orl
loop
subb
mov
rorl
or
aad
pop
sub
ret
aam
mov
test
push
sub
in
add
xchg
jne
pop
outsl
sub
sbb
daa
lods
repz
sub
xlat
cmp
cmpsl
ljmp
or
insl
cwtl
popf
cli
jae
jne
sbb
jle
pop
sahf
test
push
aaa
xorps
mov
xor
movlps
out
or
dec
push
addr16
xchg
in
pop
je
xor
inc
shrb
pop
dec
pop
mov
and
add
lea
shll
push
fnsave
mov
mov
sub
mov
and
mov
jle
push
dec
cmp
inc
loopne
repz
shll
aam
mov
push
xor
inc
lock
addr16
sub
adc
dec
add
ja
dec
cmpl
mov
addr16
cld
mov
adc
cs
add
add
and
jg
out
movsl
pop
xchg
inc
je
inc
jns
sbb
leave
inc
pop
mov
icebp
subl
xchg
std
xor
lods
mul
fxch
cmc
jl
add
jecxz
jns
add
mov
lods
jns
ror
cwtl
out
bnd
push
fstps
test
lahf
scas
out
xchg
scas
lcall
int3
adc
aaa
mov
ret
rcr
arpl
mov
psubsw
popa
outsl
cmp
outsl
xchg
jmp
mov
adc
jecxz
pop
lods
repz
adc
push
scas
es
jnp
aam
xchg
dec
daa
mov
je
sti
int
cmp
fists
scas
cmpsl
lahf
call
adc
mov
pop
cmpl
mov
mov
mov
cmp
mov
fcmovb
inc
mov
lahf
stos
pop
xchg
or
dec
lods
push
pop
cmp
popa
jg
ret
mov
sub
repnz
dec
mov
add
mov
mov
jbe
pop
stos
xor
sub
xor
pop
mov
lods
aad
cltd
sbb
popa
mull
sbbb
mov
and
push
push
xor
dec
cmp
sub
outsb
ss
nop
xor
inc
mov
scas
std
bound
les
pop
jg
sub
mov
rorb
idiv
xor
inc
daa
data16
inc
sbb
push
into
pushf
imul
pushf
fistpll
pop
test
rorl
stos
sub
or
aam
mov
dec
dec
cli
mov
lcall
call
xchg
mov
push
and
es
jge
rcll
mov
cltd
ret
mov
negl
cmp
sti
lret
jae
cmp
pop
imul
pop
es
jmp
jg
imul
out
adc
and
jge
enter
in
or
out
sarb
jle
rolb
and
mov
das
lock
mov
add
sub
ljmp
sbb
ror
fadd
sub
xchg
mov
adc
in
ds
icebp
aaa
sbb
pop
fldcw
in
ljmp
mov
jb
and
push
cmpsl
or
xor
enter
cmpb
push
ret
xor
dec
icebp
lret
test
mov
adc
jle
fwait
mov
aas
mulb
or
xchg
jle
cmpsl
inc
mov
incl
lds
mov
out
mov
les
pop
xchg
sbb
pop
fildl
insl
ja
fcmovnu
jecxz
mov
adcb
inc
aaa
mov
fs
shlb
jb
ja
mov
mov
adc
or
mov
jb
jmp
push
sub
cmp
mov
add
cmp
icebp
jae
jo
add
div
jne
fnstsw
into
daa
push
aas
pop
aad
movsb
xchg
in
aam
mov
jne
fldt
fldenv
sub
pop
add
cmp
jbe
stos
fdivp
push
ljmp
push
icebp
lea
das
pop
xlat
cmpsl
in
aam
ss
or
sarb
cli
arpl
fisubs
jne
sub
in
mov
push
es
sar
or
dec
test
or
add
popf
mov
mov
pop
adc
pop
mov
lds
xchg
outsb
lret
fadd
xchg
pop
push
lahf
loop
pop
add
sub
sarb
push
lock
fistpl
or
sub
aam
lcall
pop
shll
dec
sub
jb
push
and
ret
jge
js
and
cmpsl
adc
or
push
cmp
pusha
les
aas
sbb
xor
xor
rorb
xlat
roll
or
push
in
test
sarl
lret
in
add
rcll
sbb
jb
sub
sub
cli
mov
xor
pop
arpl
cmpsb
addr16
or
jge
jle
fsubrl
shrb
xlat
lret
mov
adc
jle
jp
fildl
fistl
aas
in
into
or
fcoml
rclb
leave
iret
inc
pushf
mov
addr16
add
je
jg
jbe
adc
inc
cmpsb
fs
cmp
sbb
repnz
mov
sahf
repz
and
mov
movsb
daa
or
mov
sbb
xchg
mov
mov
push
enter
popf
jns
cmp
sbb
jo
sub
lods
mov
es
push
pop
ret
jmp
lds
rclb
in
add
das
stos
push
pop
adc
paddd
xchg
pop
xchg
jo
test
xor
fldcw
xchg
mov
mov
mov
xlat
sub
dec
rclb
mov
dec
add
jae
sbb
inc
repz
cli
fnstcw
mov
jl
icebp
xchg
sub
pop
mov
inc
outsl
cli
aad
pop
inc
dec
push
or
cmpsl
stos
inc
clc
inc
sbb
lods
divl
cmpsb
mov
adcb
xchg
clc
mov
mov
mov
in
xchg
insl
in
cmp
xor
push
stos
subl
xchg
xor
and
mov
movsl
jecxz
sub
sbb
xchg
scas
push
scas
jl
enter
sub
mov
mov
pop
cmp
pop
mov
mov
pop
and
xchg
dec
movsb
lock
addr16
push
mov
inc
es
inc
ret
test
mov
push
xchg
adc
out
push
or
lret
leave
movsb
sbbl
repnz
neg
js
es
lods
fldt
or
imul
adc
andl
push
int3
lock
and
jnp
gs
lret
or
sub
adc
dec
mov
inc
clc
jno
aas
cmp
arpl
inc
sub
call
pop
clc
or
rcrb
ret
clc
fiaddl
iret
push
cmp
push
enter
shll
push
cmp
or
adc
sub
or
fcoms
add
pminub
pop
dec
xor
pop
fldl
and
repnz
popa
or
dec
stc
xchg
sbb
in
mov
or
cmp
mov
dec
shlb
add
dec
sbb
lcall
das
sbb
adc
jb
test
mov
loop
fs
test
idiv
cmp
stos
jp
push
pop
pop
adc
xchg
stc
stos
mov
jo
cmp
imul
andb
insl
adc
push
jecxz
jne
ss
cltd
incl
fdivrs
push
adc
icebp
and
pop
pop
imul
ss
pushf
adc
jb
inc
and
sbb
mov
or
clc
int
pushf
pusha
test
aas
jbe
jo
pusha
pop
xchg
sub
sbb
add
out
aas
dec
inc
dec
call
mov
xchg
and
js
and
cmpsl
sub
fcoml
das
popa
std
sbb
pop
cmp
arpl
in
movsl
test
or
pop
js
fisubrl
cmpsl
ret
sbb
insb
xor
sbb
cwtl
loopne
xor
test
dec
jae
mov
xchg
push
mov
cmp
lahf
sbb
sbbl
pushf
out
lock
in
add
and
sti
jge
imul
faddl
sbb
fistl
add
or
jbe
mov
sub
jnp
or
push
xor
xor
inc
and
and
inc
mov
in
js
data16
jg
xor
cmp
das
leave
cmp
and
sub
push
mov
and
and
sub
pop
cltd
jbe
fiadds
xor
test
sub
movsw
sub
test
lock
xchg
pop
jb
int
and
push
xchg
jle
fists
cli
pop
shrl
dec
mov
push
mov
dec
addr16
xchg
jecxz
ljmp
jo
sub
mov
pop
sub
cmp
xchg
cs
stos
sub
stos
jmp
sbb
sub
in
int
je
xlat
pop
neg
les
adcb
mov
out
fsubl
pop
popa
sbb
jecxz
cmp
mov
pop
dec
jbe
lret
fwait
mov
ror
inc
cmp
pop
lock
pop
push
cwtl
movsl
fistps
lret
inc
test
aas
imul
add
pop
xchg
sbb
xor
or
int
into
dec
xor
pushf
mov
and
addr16
in
mov
leave
popa
subb
hlt
rcl
push
sbb
mov
xchg
push
dec
test
rorb
lcall
or
jnp
or
cmp
clc
test
cmp
xchg
xlat
rclb
cmp
xchg
jecxz
imul
repnz
inc
push
test
xchg
cmpsl
or
cmp
fdivrl
push
xchg
adc
dec
xchg
mov
mov
das
jne
lret
inc
out
in
das
cwtl
cmpsb
arpl
lcall
ljmp
orb
jo
or
and
repnz
adc
scas
enter
scas
push
jnp
mov
lcall
scas
leave
cwtl
and
jne
outsl
nop
inc
mov
pop
out
xchg
loopne
lock
mov
aas
cmpsl
std
xchg
imul
mov
sbb
sbbl
enter
cmp
and
pop
icebp
stos
mov
push
push
push
mov
pop
xor
outsb
mov
into
or
aam
push
dec
andb
icebp
push
lcall
push
out
cmpsb
bound
icebp
pop
in
xchg
movsb
push
jmp
mov
lds
add
ret
mov
dec
scas
or
inc
iret
popa
push
stc
add
jo
pop
push
dec
mov
scas
pop
inc
add
and
sbb
fstl
inc
and
jg
mov
test
push
inc
sub
shr
mov
and
push
idiv
mov
xchg
in
inc
in
addb
sub
and
bound
into
lds
pop
inc
arpl
or
test
inc
or
mov
sub
mov
fsubrs
int3
mov
bswap
imul
dec
loop
popa
inc
inc
lods
lods
cmp
xor
fsubs
push
repnz
xor
sahf
lret
fistl
cmpsl
fistpl
sbb
mov
cmp
xor
mov
mov
insb
mov
test
jns,pt
dec
out
outsb
imul
mov
in
sbb
hlt
push
pushf
jne
or
rorl
pushf
sti
mov
mov
mov
push
inc
xchg
xor
shlb
adc
sbb
cmp
daa
mov
popa
or
outsb
add
sub
stos
pop
cld
cmp
add
addr16
ret
fldl
dec
add
push
mov
fs
sub
dec
xlat
sub
sbb
je
add
test
push
pop
xlat
test
dec
std
cltd
push
mov
jl
mov
cmp
inc
pop
dec
xor
or
imul
mov
aaa
stos
cwtl
repz
iret
int3
stos
cs
repnz
sbb
lods
data16
enter
pop
jmp
hlt
fwait
mov
lahf
test
daa
jnp
icebp
cmp
mov
aad
cli
or
test
dec
out
sbb
push
jg
or
pop
insb
mov
add
xlat
mov
rcrb
rcl
mov
xchg
lods
mov
out
push
dec
push
test
dec
mov
and
jge
in
in
push
mov
movsl
shl
mov
daa
gs
pop
mov
lods
cmp
lret
notb
mull
das
out
aam
sar
push
and
xchg
or
faddp
push
loopne
cmp
dec
ss
xor
loopne
pushf
sub
mov
ljmp
add
xor
int
xchg
stos
ds
fidivl
gs
lret
jle
cmpsl
sbb
xchg
jbe
or
inc
pusha
mov
xchg
cmpsl
call
jmp
mov
push
xor
mov
push
cltd
jge
fcoms
and
fs
xchg
movsl
push
mov
and
push
insl
fimuls
test
dec
lods
lea
inc
adc
hlt
mov
subl
shl
cld
leave
sbb
int3
mov
fwait
sub
nop
aas
adc
mov
sub
or
insb
into
fwait
aaa
xor
jo
test
mov
push
mov
cltd
push
enter
cmp
mov
dec
cs
adc
jmp
or
push
lea
pusha
lahf
sub
mov
and
clc
inc
and
std
sar
mov
sahf
mov
jb
inc
mov
cwtl
adc
xchg
cli
in
add
arpl
int3
bound
int3
cmp
dec
xor
add
in
jge
mov
sbb
sub
mov
sbb
mov
fdivrp
push
out
lds
push
out
lock
dec
out
pop
push
sbb
pop
and
xor
mov
cmp
mov
and
mov
clc
push
in
stc
jg
xchg
lret
lds
mov
outsl
dec
and
inc
imul
aam
push
out
sbb
push
cmp
movsb
xor
dec
xchg
pop
add
add
cld
les
add
nop
jecxz
cld
xchg
mov
mov
adc
fnstcw
push
pushf
into
xchg
insl
jmp
xlat
push
lea
ds
xor
jmp
aaa
shl
es
ds
test
dec
fimuls
gs
mov
popf
imul
lods
dec
fmuls
mov
ficoms
xor
scas
pop
and
or
js
and
cltd
lock
leave
xchg
add
hlt
push
adc
or
adc
std
ss
inc
cmp
popa
cmpsb
sahf
lea
cmc
lods
das
jno
das
xchg
jle
or
sbb
push
cmp
sub
dec
sub
arpl
pop
sbb
dec
and
add
push
aas
inc
aaa
push
pop
push
mov
cmc
jecxz
adc
push
outsl
xchg
lods
rcl
or
mov
push
dec
arpl
push
outsl
ret
cld
rcl
xchg
in
mov
push
cmc
mov
xchg
ret
sar
xlat
cld
dec
mov
or
enter
cmp
sub
mov
out
lock
pop
test
xchg
cmp
cmp
push
rcl
xchg
mov
add
in
shll
cli
mov
and
sbb
sbb
and
stc
pusha
pushf
aam
std
sub
xor
cmpsb
insl
mov
fs
push
call
scas
cs
call
mov
jae,pn
fs
cli
cmp
jp
pushf
aas
push
add
adc
cli
les
es
subb
mov
xchg
sub
or
popa
out
scas
test
pop
sub
scas
jl
mov
addr16
insb
mov
cmp
mov
das
jmp
and
test
popf
mov
jecxz
insb
out
nop
pop
je
push
fs
ja
jne
fidivrs
sbb
rcl
mov
negl
pop
push
or
adc
movsl
sbbl
xor
xor
sbb
ficoms
xchg
add
xor
js
fists
mov
jb
or
bound
push
sub
and
pop
mov
out
sahf
sbbl
cltd
insl
adc
mov
dec
add
inc
test
xor
pop
inc
std
int
or
aaa
jo
or
cli
out
pop
mov
sub
inc
mov
ljmp
jo
imul
test
jb
mov
cltd
mov
cltd
fnstcw
pop
out
push
push
repnz
and
pop
push
mov
lods
out
xchg
sbb
or
and
cmp
sahf
mov
jp
dec
sarl
jae
jne
xor
pop
mov
xor
scas
mov
shrb
pop
dec
xor
inc
pop
mov
mov
pop
xlat
test
push
sub
in
pop
lret
pop
js
or
sbb
sbb
es
jnp
pushf
addb
lods
lods
xor
dec
addr16
jg
popa
push
pusha
mov
sub
cli
std
js
mov
jmp
xchg
out
sbb
and
mov
sub
addr16
push
je
sarb
mov
cmpsl
out
lret
pop
out
outsl
lds
pop
push
jge
and
mov
xor
mov
inc
inc
jmp
das
das
jno
pop
int
jbe
lods
xlat
gs
mov
test
sub
inc
fistpl
in
jg
adc
lcall
pop
das
rcl
xchg
pop
mov
adc
inc
mov
or
and
inc
dec
mov
xchg
dec
sahf
and
outsl
call
sti
call
lods
jle
dec
ret
aam
jmp
aam
push
sbbb
lods
sub
xchg
leavew
mov
pop
in
jl
pop
inc
in
ds
cmpsl
fsubrs
fs
repz
xchg
push
cmp
idiv
fbld
sbb
sub
test
sub
jecxz
mov
sarb
adc
nop
cli
pop
xchg
mov
popf
mov
or
cmp
mov
push
insl
daa
sbb
aas
ljmp
mov
cmp
pop
add
adc
lock
repz
dec
add
xchg
test
push
mov
push
sub
clc
int
xchg
nop
inc
push
cmp
jl
inc
repz
sub
fisubrl
std
popf
push
mov
iret
adc
outsl
sub
cmc
loop
xor
mov
jns
mov
dec
cmpl
addr16
bound
xor
imul
dec
inc
sub
xor
testb
stos
pop
rcrb
xor
test
arpl
iret
jp
stc
in
pop
insl
add
movsb
xchg
mov
dec
lock
repz
xchg
pop
dec
and
dec
nop
or
mov
hlt
adc
pop
jbe
push
jno
xchg
dec
mov
repnz
lods
mov
xorb
xor
mov
ja
in
adc
pop
mov
or
pop
dec
jb
movl
mov
jae
sub
fsubp
repz
out
push
mov
mov
out
push
mov
sub
loop
imul
adc
stc
mov
mov
into
fidivrl
dec
push
mov
jb
fcoms
fcomps
jns
cmp
or
mov
out
sbb
add
or
jp
inc
pop
and
jbe
jecxz
fiadds
cmp
dec
outsl
cmp
out
xor
les
mov
cmp
fsubrl
jae
addb
lret
add
xchg
xchg
aas
xchg
iret
hlt
xchg
cmpsl
push
dec
cltd
mov
popf
inc
sbb
cmp
in
cmpsb
loop
hlt
jnp
sbb
in
pop
mov
aas
test
insb
xor
lods
pop
iret
das
jmp
inc
mov
inc
mov
jnp
leave
mov
xchg
mov
push
pusha
inc
outsl
mov
fcomps
lahf
sbb
std
sbbl
inc
jae
cwtl
xchg
jle
sub
fs
and
xor
adc
out
xchg
std
sbb
adc
cmp
sarb
or
lods
pop
fcompl
cmp
int3
xor
lea
inc
adc
xor
int3
and
cmp
mov
rclb
inc
inc
ss
fisubl
call
idivl
cmp
rcl
das
sbb
inc
xorb
shll
mov
xchg
clc
out
or
orl
and
push
fisttpl
aas
arpl
xlat
jle
js
inc
test
out
sub
fiadds
mov
jge
shrl
scas
shr
cmp
xor
fstpt
mov
outsl
mov
inc
scas
dec
sub
pop
notb
mov
sbb
push
mov
mov
int
fmull
cs
jg
ja
sub
test
pop
testb
iret
cltd
imul
xor
xor
mov
and
and
lods
xchg
into
rcrb
imul
xchg
aas
push
cmp
jo
push
idiv
lea
pop
mov
fcmovne
popa
xchg
sbb
jmp
loop
hlt
stos
test
rolb
insb
lcall
iret
arpl
mov
das
inc
gs
xchg
movsb
inc
and
mov
sbb
sbb
inc
in
cmp
add
add
insl
adc
inc
inc
rcrl
or
cli
imul
ret
ja
jp,pt
and
adc
and
jmp
out
lret
int3
inc
jnp
inc
lea
in
dec
adc
repnz
or
dec
cli
and
std
addr16
fsubs
cli
pop
movsb
imulb
mov
mov
movsl
sub
push
out
xchg
inc
in
notb
mov
out
in
xor
mov
fcomi
sbb
lods
testb
inc
or
cmp
adc
push
cmpsl
outsb
inc
stos
adc
push
ret
mov
jnp
lcall
out
mov
fnstenv
adc
mov
test
jo
pop
cmp
xor
mov
push
ficoms
dec
enter
cmc
stos
jp
das
and
adc
push
lret
inc
mov
js
fisttpll
addl
sub
mov
jnp
or
in
stos
xchg
pop
fistps
insl
adc
sub
adc
repnz
jge
jo
scas
adc
popa
xor
cmp
fstpl
int3
push
mov
pop
dec
idivb
cmc
sub
arpl
pusha
sub
sbb
jb
movb
mov
mov
pop
mov
pop
pushf
xlat
divb
jns
and
jg
cmc
sti
scas
popf
sbb
gs
fs
mov
inc
inc
sub
pop
inc
and
xchg
lods
push
in
js
insb
xchg
push
fiaddl
sbb
iret
or
inc
pop
jb
mov
xor
mov
int
jns
sbb
dec
push
xchg
push
popa
jb
bound
incb
pop
cld
mov
jo
push
jp
xor
pop
mov
mov
adc
int3
fidivrl
adc
xor
rolb
lahf
daa
xlat
lcall
cltd
fimull
mov
stc
mov
out
scas
cmp
cmpl
add
div
cmp
dec
sbb
dec
mov
dec
scas
mov
adc
pop
dec
xchg
int3
mov
mov
in
aaa
sub
mov
mov
pop
fadds
lret
and
pop
jns
lock
icebp
pop
pop
sahf
fistpl
inc
js
mov
dec
dec
jno
test
or
or
dec
int3
shr
addb
notl
cwtl
push
sub
add
mov
repz
dec
pop
shl
pop
pop
sub
mov
sbb
addr16
jl
mov
sub
lea
xor
xorl
push
jns
outsl
xchg
lret
lahf
hlt
pop
movsb
cld
xchg
push
sub
sub
ds
xor
inc
cmpsb
push
cmp
xor
lret
sti
rol
std
pushf
and
mov
pop
shl
adc
xor
test
xor
gs
dec
xor
push
mov
jle
sub
js
inc
cltd
ds
jl
adc
inc
jo
inc
into
push
aaa
xchg
cmp
popa
cmp
out
mov
xor
cmpsb
les
dec
mov
mov
fimuls
push
jle
pushw
sub
lret
loop
xor
xchg
add
out
and
fsubl
repnz
and
xchg
push
push
lock
pop
int
and
ret
cmpsl
cmp
in
in
seta
ficomps
xchg
xor
and
cld
sahf
adc
mov
testl
xchg
leave
daa
repz
xor
mov
push
dec
mov
ss
jle
mov
inc
xchg
outsb
js
aad
cwtl
pop
jg
sub
sub
push
sti
out
xchg
lcall
jno
hlt
sahf
jl
sub
mov
mov
push
daa
lret
mov
fbld
test
pop
call
icebp
pop
dec
jmp
ret
inc
add
cwtl
inc
mull
scas
notl
jg
cmpsb
sbb
dec
repz
inc
push
add
lret
inc
frstor
dec
roll
or
mov
repnz
and
or
daa
stos
cmp
cmpsb
adc
ret
jbe
jle
sub
add
gs
hlt
stos
inc
push
pop
cmp
stos
xchg
icebp
adc
pop
mov
mov
mov
rorl
xchg
inc
mov
aas
movsb
out
and
xor
push
mov
and
stc
inc
loope
test
adc
scas
xchg
or
pop
out
mov
sub
fdivrl
mov
push
sub
push
mov
lcall
fcom
gs
xchg
and
loopnew
adc
sbb
jb
jge
hlt
nop
cmp
stos
pop
out
cli
mov
call
dec
out
aam
popf
mov
addr16
sbb
push
lods
orb
test
faddl
jl
dec
cwtl
mov
insl
push
cmp
adc
cmp
push
xor
gs
pusha
lods
scas
in
and
cmpsl
flds
adc
shll
stc
es
int3
xor
dec
sahf
mov
cwtl
shlb
addl
or
dec
adc
imul
test
dec
mov
adc
mov
inc
sbbb
aas
loope
shr
dec
jecxz
xor
cmp
lret
mov
bound
ret
in
arpl
jge
jecxz
aam
lods
mov
mov
sbb
stc
cmc
ljmp
or
in
push
sub
out
push
test
mov
cmp
test
jae
lret
iret
lods
inc
stc
sub
push
incb
aam
add
out
jg
xorl
dec
or
not
insl
cli
scas
xchg
aam
fisubrl
loopne
ljmp
and
neg
cwtl
in
mov
push
cld
sbb
inc
imul
lods
jp
fisttpl
sbb
sub
scas
lret
and
cmp
test
cmp
dec
test
pusha
cld
lea
adc
adcb
push
sahf
fsts
pop
sbb
inc
scas
mov
ds
adc
jne
das
pop
outsb
push
xor
sub
imul
test
test
mov
cwtl
nop
jno
lds
dec
mov
mov
mov
aaa
inc
gs
sub
in
les
xchg
ss
pop
jmp
mov
clc
jecxz
fwait
mov
mov
fists
ffree
jg
in
mov
add
sub
adc
movsl
mov
rcrl
dec
daa
sub
sub
sbbb
lods
divl
pop
mov
dec
jno
std
cmpsl
mov
inc
arpl
stos
add
aam
es
lds
fidivrs
inc
xchg
popf
outsb
adc
mov
loopne
or
inc
sahf
stc
mov
lods
sarl
cld
repnz
mov
mov
jl
call
mov
nop
repnz
mov
fldcw
or
and
and
and
sub
inc
daa
cmp
ja
dec
int
gs
fmuls
outsl
mov
mov
outsl
ret
dec
mov
jmp
pop
mov
jg
nop
and
arpl
mov
dec
xchg
sti
push
pop
mov
rcrl
aaa
or
adc
icebp
imul
cmp
xchg
adc
and
xor
out
imul
cmp
push
cmc
sbb
mov
inc
cmc
add
add
pop
jb
dec
xchg
or
loopne
pop
mov
or
in
nop
mov
ja
lcall
in
in
xchg
pop
pop
enter
mov
jg
lods
lock
inc
cmp
pop
movsb
sbb
imul
cli
mov
dec
js
scas
jae
data16
push
fildll
push
sti
cs
pop
shll
push
xor
movsb
imul
dec
jne
add
aaa
notl
repnz
mov
imul
sub
jl
sbb
cmc
mov
and
in
decb
pop
dec
jl
fbstp
cmc
scas
inc
mov
mov
sub
cmpsb
sti
in
aaa
cwtl
addr16
mov
mov
cmp
add
data16
in
nop
nop
mov
pop
mov
pop
loop
jns
xorb
sbb
mov
imul
js
or
in
test
adc
and
mov
data16
xchg
push
jbe
mov
loope
lea
mov
fs
and
mov
jnp
rcrl
sarl
jecxz
mov
shr
sub
or
jns
lahf
inc
push
push
and
pop
push
and
stos
js
xlat
sub
cmc
mov
cmp
or
mov
push
fidivs
mov
cmpsb
call
xchg
push
mov
mov
pop
clc
push
fdecstp
xchg
mov
jp
and
and
xor
es
pushf
push
icebp
sbb
cmpsb
sbb
dec
out
pop
orl
test
push
les
push
ss
pop
jle
xor
hlt
xchg
and
mov
dec
pop
orl
jae
or
mov
fdivl
jb
aaa
stos
popf
testl
adc
jmp
dec
cmp
out
arpl
enter
adc
and
push
or
fisttpl
lret
mov
inc
in
xchg
ljmp
scas
inc
insl
ss
ret
inc
push
orl
jae
inc
cmp
push
or
lds
mov
mov
push
xchg
xor
shlb
ja
xchg
dec
cmp
test
mov
inc
insl
mov
fsubs
pusha
mov
aad
sahf
or
cmp
xchg
or
push
das
inc
xchg
pop
add
jge
rcl
sarb
popa
add
call
push
bound
fsubrl
push
push
out
ret
loop
lret
mov
jmp
jno
ror
or
mov
xor
jle
jb
aam
ljmp
inc
sub
fdiv
enter
test
xor
dec
repz
stos
dec
mov
jo
mov
dec
sahf
add
push
pop
scas
decb
mov
shr
bound
les
movsl
mov
cmpb
mov
testl
adc
mov
cwtl
xchg
mov
and
push
aad
sbb
pop
or
movsl
add
cltd
adc
movsbl
inc
or
push
ss
or
clc
dec
out
mov
pop
mov
push
xor
addb
les
mov
lea
jmp
sbb
adc
lods
cs
data16
pop
loopne
pop
enter
cmp
loope
or
clc
inc
insb
adc
sbb
lds
rclb
lret
iret
es
jb
cmp
ficomps
loope
jo
push
pushf
fwait
js
push
inc
mov
xor
and
int
cmp
iret
lahf
mov
hlt
inc
repnz
popl
cmc
push
xor
addr16
enter
cld
add
nop
je
mov
cmp
jmp
mov
ret
lods
test
and
push
dec
es
test
pop
stc
mov
movsl
mov
inc
outsb
inc
or
mov
pop
aad
inc
xchg
mov
push
and
dec
pop
adc
xchg
mov
sub
ret
insl
xchg
fldcw
lahf
xor
pop
add
cmp
lock
cld
pop
sahf
xor
movsl
jmp
sahf
or
gs
cmp
std
in
mov
jae
fcmovb
xchg
cltd
xor
xor
add
sub
xchg
xchg
jge
mov
into
into
lret
fdivs
jnp
dec
push
xchg
fisttpll
sub
pusha
daa
data16
sarl
hlt
cs
pop
fs
xor
push
dec
and
aam
shll
sbb
cld
stos
lock
jecxz
mov
loop
data16
sub
jo
cmp
dec
sbb
fiaddl
adcl
push
mov
insb
sbb
jle
iret
jg
add
fucomp
rcll
push
mov
test
ret
cmp
int
and
ret
add
iret
pusha
or
in
rclb
sub
sbb
inc
test
dec
jecxz
aad
jge
fs
inc
mov
mov
insl
bound
dec
push
hlt
push
daa
nop
scas
add
int3
jmp
nop
daa
sbb
data16
cltd
loopne
jbe
sbb
and
pop
add
jns
xor
js
sti
or
inc
imul
flds
test
mov
sbb
push
adc
add
pandn
sub
xor
sub
sar
icebp
dec
push
mov
sbb
push
popa
ja
movsl
jge
dec
orb
jne
inc
gs
mov
jne
dec
push
dec
out
adc
andl
mov
or
fisttpll
push
lds
pop
mov
lret
jge
pop
jns
add
ja
outsl
aad
imul
into
mov
mov
dec
cmpsb
xchg
ss
sbb
adc
cmp
fwait
jmp
jnp
clc
mov
rcl
push
sbb
xchg
mov
rcl
sub
out
xor
and
and
xor
xlat
jne
and
fildl
lret
jo
push
jmp
push
and
sarb
xchg
inc
mov
sub
fs
xchg
xchg
aaa
jns
imul
mov
gs
xor
dec
stos
or
loopne
pop
lcall
jne
push
bound
dec
out
jno
jbe
add
pop
pop
cli
aaa
xor
jbe
sub
xor
lock
arpl
pop
pop
gs
lahf
sbb
xlat
mov
clc
xlat
cmpsb
adcl
imul
cwtl
out
fcomp
bts
dec
push
push
dec
sbb
fistpll
cmp
adc
into
add
daa
sbb
fwait
clc
add
mov
fldt
inc
outsb
mov
bound
jecxz
loop
mov
filds
hlt
adc
pop
push
dec
test
lock
adc
in
jns
xchg
mov
imul
pop
jp
mov
push
mov
inc
adc
aaa
flds
notl
scas
repz
pop
lock
dec
cmp
or
dec
and
adc
andb
shlb
lcall
add
ret
add
in
repz
pop
ret
jb
sub
jl
lock
adc
mov
in
cmp
enter
pop
ds
ss
mov
mov
jo
aas
icebp
sar
arpl
lods
jbe
push
xor
push
shlb
jb
pop
or
repz
loope
sar
testl
cld
enter
dec
inc
xor
adc
inc
mov
das
or
xchg
bound
ret
jg
repz
fnstsw
cltd
pcmpeqb
rcr
movsl
movsl
or
cmp
rcrb
popf
jmp
in
std
cwtl
mov
pop
cli
inc
popf
or
mov
mov
pop
in
cmpsl
or
xchg
out
jne
and
sub
out
pop
orb
sbb
mov
cmp
xor
cmp
push
ja
jl
or
jb
pop
xchg
mov
shlb
xor
scas
imull
cwtl
cmp
ret
in
ss
sub
jno
xchg
add
xchg
gs
pop
sub
sub
pop
lock
lret
shr
mov
cmpsb
jne
scas
sub
sbb
xlat
sbb
and
js
hlt
dec
adc
mov
rclb
daa
jns,pn
push
ret
int
cli
cmpsl
or
pop
not
push
jnp
push
test
pop
mov
lret
mov
outsl
xor
cmp
xchg
dec
sub
inc
inc
adc
mov
push
dec
push
jbe
mov
or
insb
enter
sub
inc
inc
add
xor
mov
imul
repnz
cmp
in
mov
and
mul
add
int
add
enter
out
add
imulb
imul
push
inc
out
hlt
cli
or
lods
scas
jl
data16
mov
mov
jp
lcall
loop
shrl
and
mov
arpl
insl
xchg
or
xorl
push
in
sbb
cltd
lret
or
sti
mov
sbb
mov
stos
jb
loope
or
xor
imul
inc
jmp
cmp
xchg
mov
mov
mov
stc
fmuls
mov
mov
pop
sahf
or
mov
rcrb
or
cmpsl
lret
mov
push
adc
pop
loope
sahf
mov
daa
addl
cmp
enter
insl
aad
xchg
mov
cwtl
aad
fiaddl
inc
les
bound
adc
adc
movsl
sarb
fnstenv
iret
push
mov
sub
je
mov
popaw
lock
idiv
imul
aaa
xlat
pop
pop
sti
inc
xor
dec
cmc
or
imul
jle
and
aas
jmp
int
pop
inc
arpl
outsb
cmp
pop
scas
or
adc
cmpsl
or
test
xor
mov
push
fistpl
loop
xchg
sahf
sub
data16
clc
movsl
shlb
shl
jb
cs
pop
cmpsl
loopne
mov
mov
insb
shlb
mov
mov
mov
test
hlt
pusha
mov
sbb
pop
mov
cmpsb
jmp
scas
mov
mov
sbb
loopne
mov
sbb
mov
sub
pop
dec
add
mov
dec
add
insb
out
dec
jge
pop
add
xlat
dec
cmc
and
popf
into
test
loop
jl
xor
mov
mov
cli
jbe
in
std
push
jecxz
ds
jmp
add
dec
fwait
dec
cmpsl
or
xchg
pop
adc
mov
add
scas
out
push
jnp
aam
daa
and
movsb
pop
push
or
mov
mov
es
jecxz
add
rcrb
sub
shll
aad
bound
jae
imulb
add
inc
jbe
jb
imul
sub
loope
sbb
stc
movsb
sub
jge
ds
cmc
int
push
cmp
xchg
in
push
pop
mov
pop
sbb
mov
cwtl
push
dec
push
lea
push
fwait
test
and
lret
or
loopne
xor
imul
iret
dec
and
stos
dec
jmp
add
mov
out
xchg
loopne
repz
inc
in
stc
push
insl
out
popf
jne
or
mov
xor
jl
mov
loopne
lret
lahf
mov
ljmp
popa
imul
and
outsl
subb
icebp
adc
inc
or
mov
fnstsw
out
dec
imulb
out
orb
pushl
cmp
push
sbb
call
lea
stos
sbb
outsl
mov
bswap
xchg
icebp
in
test
mov
pop
mov
sub
jmp
xor
out
mov
adc
and
push
mov
dec
into
pop
xor
mov
outsl
push
adc
sbb
mov
dec
rorb
dec
sub
pop
outsl
roll
test
ja
je
cmp
orl
nop
jle
push
shrl
dec
bound
xor
sbb
inc
mov
xor
imul
xchg
push
es
les
iret
js
test
lcall
adcb
pop
or
sahf
ds
pop
push
xor
orl
pusha
stc
inc
lods
mov
mov
jne
mov
lock
mov
or
sahf
outsl
stos
orl
das
xor
pop
fmuls
cmpsl
and
push
loope
add
lcall
xchg
ss
or
adc
addr16
into
push
jb
das
lret
dec
ljmp
lret
push
lods
movsl
adc
mov
pop
sbb
adc
jns
sahf
cld
in
cli
sub
push
xor
pop
add
mov
daa
lods
add
movsb
out
arpl
shl
cltd
inc
adc
pop
jns
sbb
ret
inc
xor
jl
inc
stc
mov
xchg
ljmp
push
inc
pop
shl
add
in
dec
fwait
cs
test
adc
sbb
xor
sbb
stos
mov
xor
mov
ret
add
cmp
sti
aad
mov
push
and
test
dec
xchg
pop
xchg
inc
mov
cmp
xchg
pop
push
xchg
je
iret
stos
outsl
outsl
insb
jbe
sbb
pop
fninit
jle
in
cmpl
loop
jo
xor
andl
rcrl
lds
mov
jbe
sbb
lods
aaa
fwait
adc
out
ja
ret
mov
mov
add
or
mov
pop
cld
or
or
and
pusha
fs
mov
cmpsl
mov
sbb
scas
movsb
fists
add
fucom
lods
xor
cmp
pop
mov
jle
mov
mov
mov
sbb
outsl
addb
fisttpl
fwait
mov
fistpll
cmp
cli
test
mov
nop
pop
xor
xchg
subb
stos
push
pop
adc
push
and
mov
les
sub
icebp
cmp
sbb
or
es
dec
jnp
orl
dec
and
inc
push
outsl
shrb
dec
dec
andb
mov
sti
fsubrs
dec
ds
es
les
outsl
lahf
push
test
pop
popa
adc
mov
and
sub
inc
mov
orb
stos
add
test
or
jmp
sbb
inc
fsubr
jne
push
scas
out
int3
mov
daa
xor
fisttpl
push
adc
mov
adc
mov
in
adc
sbb
cmpsl
jecxz
test
add
imul
add
pop
or
jne
inc
sbb
lock
mov
rolb
pop
xor
add
aam
in
ljmp
jg
enter
negb
jg
fs
insb
inc
cmpsl
sbb
xchg
mov
mov
mov
mov
push
dec
inc
jge
cmpsl
inc
adc
nop
rcrb
pop
or
cld
test
lock
das
ja
sbb
xchg
push
fsubp
popf
fstps
pop
pop
mov
xchg
mov
ljmp
lds
adc
inc
pushf
pop
mov
sub
or
mov
fdivrp
mov
mov
lret
pop
xor
cmp
mov
push
popl
addl
jge
mov
iret
push
jle
arpl
in
lahf
pop
xchg
pop
addr16
xchg
and
stc
loope
mov
insb
mov
inc
jmp
cmc
cltd
xchg
fstp
jle
jecxz
jmp
scas
fs
or
sbb
or
dec
loope
fstpl
psrld
sub
in
xor
lcall
xchg
add
sbb
mov
das
dec
jnp
mov
in
adc
cwtl
pop
push
sahf
in
rcrb
lahf
ret
add
jno
xchg
mov
in
dec
add
sub
fildl
mov
jae
mov
out
mov
repnz
call
sbb
sub
jnp
pop
daa
cli
mov
add
mov
dec
ja
pushf
sbb
inc
pop
pop
fstps
mov
sbb
adc
pop
shll
jmp
dec
and
std
and
xchg
xchg
scas
or
pop
sbb
int
xchg
shrl
and
xchg
push
pop
pop
daa
mov
cs
push
sbb
mov
mov
xor
fadd
push
lds
ljmp
pop
jmp
add
xor
icebp
add
das
mov
sub
outsl
out
mov
dec
add
lret
dec
sbb
mov
fdivrs
add
add
jno
scas
sbb
shl
mov
sub
add
jmp
ret
jle
out
push
push
stos
mov
add
cld
lds
rcrb
jle
pop
int3
ja
mov
nop
or
push
mov
push
scas
adcb
push
test
out
push
ja
sarl
cmp
mov
ret
inc
sbb
and
fs
add
imul
iret
addr16
lahf
ret
stos
std
dec
movsl
sbb
sbb
test
inc
sub
stos
add
arpl
jge
cmp
in
fs
leave
lahf
out
fistl
mov
adc
xchg
jl
and
add
repz
mov
cmp
jne
push
lock
test
cmp
fidivs
popf
sbb
cmp
jne
in
fcmovnbe
cmp
ror
mov
outsl
inc
ret
aaa
lock
loope
jno
jl
jo
jmp
mov
jl
popf
andb
int
movsb
lds
stos
sahf
pop
fisubrl
loope
mov
pushf
lods
mov
mov
rorb
add
stc
jecxz
into
mov
xchg
push
pushf
pushf
aam
iret
jns
sub
mov
dec
in
xchg
int
stos
push
jmp
es
cmp
setb
jecxz
add
add
lods
jl
out
add
xchg
aad
inc
add
bnd
aas
mov
leave
add
mov
push
test
mov
imulb
sbb
adc
sbb
imul
push
add
int
loope
movsl
push
sbb
or
nop
push
lret
jae
cmp
jp
push
and
push
cmp
cltd
jae
dec
into
mov
or
stos
sbb
inc
in
jmp
das
cmp
lahf
lcall
xchg
dec
pop
insl
bound
xchg
and
add
fists
xchg
sbb
movsl
out
inc
int
mov
push
cld
ds
adc
nop
lahf
cmc
add
pop
xchg
mov
jmp
or
push
stos
jl
aad
xchg
cli
out
lods
test
mov
arpl
lret
jle
pop
or
aam
and
xchg
int
loopne
sti
sub
pop
xchg
addr16
aaa
push
in
add
xchg
or
mov
mov
push
xor
push
cmp
xchg
es
xor
and
mov
aas
cmp
or
sbb
lds
out
loopne
push
test
mov
cwtl
pushf
mov
insl
loope
and
test
adc
mov
sub
scas
outsb
and
mov
mov
test
adc
stos
jno
cmp
sahf
xor
and
aaa
pushf
dec
aam
pop
andl
xchg
stc
lcall
cmp
insl
or
loop
mov
push
push
movsl
movsb
mov
push
or
push
dec
jne
xchg
mov
mov
dec
xlat
test
fcoml
leave
idivb
lds
xor
imul
imul
push
inc
in
les
mov
sub
push
cmp
inc
lods
inc
pop
icebp
ret
xlat
push
mov
jb
cmpl
mov
loop
loop
xor
jmp
aad
pop
mov
arpl
ds
and
push
ja
movsb
cmp
jbe
fnstsw
xor
dec
push
cmp
xchg
mov
cmpsb
cwtl
lods
dec
incl
scas
inc
std
inc
imul
jns
popa
out
mov
mov
cmp
pop
mov
push
addr16
and
repnz
sbb
mov
mov
jnp
pusha
push
cmpsb
pop
cmp
enter
adc
ja
nop
mov
sub
aad
cmp
jb
mov
push
mov
or
xchg
js
sub
jl
pop
dec
out
aam
dec
mov
lret
pop
scas
or
xchg
out
mov
or
pushl
inc
cmpsb
repz
dec
push
in
cmpl
jmp
pop
outsl
adc
movsl
cmp
popf
mov
lods
sti
fmull
lahf
xchg
arpl
sahf
cmp
jmp
jmp
in
nop
adc
mov
in
popf
xlat
fwait
repnz
dec
sub
gs
in
fiadds
mov
fs
mov
jno
in
aas
inc
xor
adc
inc
lods
mov
outsb
sbb
and
and
lods
push
xchg
push
mov
in
aaa
ljmp
lahf
sub
pop
nop
cmp
mov
scas
jp
add
xor
cmp
inc
xchg
mov
dec
cmp
or
daa
push
movsl
push
js
pop
loope
fidivl
add
push
das
dec
pop
sbb
sahf
fcompl
out
scas
enter
push
pop
cmp
sub
aas
repz
insl
std
sub
roll
fistpll
insb
ret
addr16
xchg
je
xchg
loope
das
popa
and
or
into
fmull
lcall
mov
in
push
movsl
jno
pusha
push
push
cmp
imul
gs
xchg
mov
lcall
adc
leave
push
enter
pop
out
movsl
push
in
sub
jle
jb
xor
xor
xchg
xchg
les
and
push
roll
fstps
movsl
xor
dec
sti
aam
mov
mov
cs
aas
iret
cmp
aam
mov
les
push
loop
mov
call
popf
xlat
lds
xchg
push
cmp
out
int
cmpsl
into
icebp
rcll
or
iret
mov
daa
ret
push
in
in
dec
popf
add
mov
lock
fstp
out
leave
lock
repz
mov
cmpsl
pop
pop
xchg
scas
sub
push
leave
mov
mov
and
dec
enter
inc
leave
mov
stos
repnz
ficoml
js
lret
adc
fsubr
mov
push
xchg
xor
cli
lahf
inc
or
cmc
and
popa
and
cmp
dec
xchg
nop
leave
scas
sub
pop
fisttpll
jne
sbb
fcomps
inc
and
lahf
loopne
mov
cmpl
jecxz
add
pop
imul
lret
mov
cmp
mov
add
xchg
roll
jno
inc
movl
mov
daa
inc
adc
fisubrl
insl
inc
ret
shrl
xorb
dec
xchg
lret
faddl
and
lahf
push
push
jnp
scas
xor
pop
fstl
or
sub
daa
mov
in
sbb
jg
insb
adc
pushf
sub
insl
out
loopne
xchg
mov
enter
pop
cmpb
enter
clc
loopne
xchg
scas
jecxz
lea
outsb
mov
aaa
mov
pop
or
jnp
mov
pop
lods
inc
shl
stos
mov
pop
add
mov
jo
mov
xchg
loope
mov
dec
scas
repz
aam
sbb
mov
dec
mov
mov
fisttpll
or
ror
adc
adc
or
and
push
outsb
sub
mov
add
xchg
xchg
testl
pusha
mov
cmp
out
and
jbe
iret
mov
scas
maxps
adc
mov
adc
or
xchg
xchg
push
xchg
cmp
gs
xor
cmp
lods
mov
xchg
scas
xchg
mov
jg
jo
lock
frstor
mov
sbb
mov
cmp
pop
pop
out
adc
inc
das
inc
je
divb
xchg
out
cmp
fiaddl
repz
sub
dec
aad
mov
jge
cmp
or
pop
inc
jno
sub
jg
push
mov
xchg
incb
mov
jnp
out
scas
push
and
arpl
test
lret
loopne
xor
in
cltd
sub
xor
xor
mov
mov
cwtl
data16
aam
push
test
out
push
std
mov
lea
push
sahf
sub
subb
mov
lahf
in
cmpl
xor
push
loop
mov
sbb
and
jnp
pushf
cltd
pop
and
cmpb
aas
pop
ja
xor
xchg
andb
mov
data16
dec
mov
and
sarb
pop
jns
shll
xor
pop
imull
xlat
ja
repnz
lds
imul
ffreep
xchg
add
sbb
sub
cmpsb
and
mov
mov
shlb
neg
pop
stc
enter
adc
jmp
aaa
xor
fstps
insb
and
add
cltd
dec
cltd
or
sub
push
loope
popf
lahf
sub
or
push
clc
or
dec
in
shl
in
lcall
push
sbb
mov
and
jp
jo
icebp
jae
cmp
xor
fists
sar
jbe
js
fidivl
mov
dec
cmp
lret
mov
cmpsl
stos
push
mov
les
rcll
jnp
pop
mov
outsl
into
cs
push
out
cmp
div
in
scas
sub
ljmp
mov
mov
xchg
pushf
mov
shll
push
adc
daa
sub
lods
insb
mov
mov
or
mov
mov
and
arpl
fxtract
sub
gs
or
mov
cmp
hlt
or
mul
push
pop
pop
xchg
jl
ss
add
cmp
js
daa
mov
inc
jbe
mov
lock
pusha
xchg
mov
dec
iret
xchg
pop
mov
fldt
dec
mov
lret
inc
out
jmp
stos
inc
in
push
and
les
repz
fwait
jmp
mov
sbb
iret
and
jg
call
push
ror
jmp
loop
sbb
sub
cmc
rdmsr
pop
push
cmp
ja
addr16
fstps
cmpsb
cmp
and
in
fstl
push
xchg
cli
dec
daa
popa
push
adc
and
xchg
sub
pusha
icebp
aam
pop
and
cmp
or
mov
sbb
cmp
lret
add
into
lea
xor
lods
icebp
cld
ret
out
lea
and
mov
lcall
mov
stos
ret
loop
push
adc
xchg
push
inc
xchg
add
dec
xchg
jnp
lret
dec
aaa
push
in
lahf
cmp
xchg
lds
xor
xchg
fucom
push
mov
cmpsb
popf
movsb
lods
into
or
inc
stos
stc
mov
mov
roll
mov
stc
ljmp
in
in
fwait
sub
cli
js
sub
jnp
mov
or
pop
dec
jge
mov
or
dec
dec
adc
sbb
inc
pop
inc
adc
fs
jl
sbb
jecxz
insl
dec
xlat
push
jmp
xchg
loope
in
dec
shlb
xchg
jne
movsb
repz
inc
scas
addb
sub
lahf
cmp
test
mov
aam
push
sahf
mov
xchg
fmull
fs
adc
dec
ret
xchg
in
lock
adc
paddq
cs
mov
decl
push
jge
or
gs
add
je
jbe
cld
adc
pop
inc
or
and
inc
xor
jg
hlt
xor
push
dec
mov
inc
les
pop
or
das
sahf
pop
pop
stos
lock
jecxz
inc
sbb
xor
pop
shll
mov
cmp
mov
jo
xchg
fbstp
ljmp
adc
and
lea
loop
cmp
test
jg
sti
pop
fistpl
fwait
xor
or
and
and
and
sbb
insb
inc
jnp
xlat
filds
xor
rcr
xor
pop
hlt
mov
lret
loope
mov
out
jecxz
insl
dec
in
mov
scas
outsl
incl
loop
cmp
test
or
sbb
sbb
dec
iret
cld
or
cmp
xchg
in
in
jbe
push
or
push
stc
pop
cmp
jbe
mov
jmp
lcall
ja
ljmp
mov
jge
addb
arpl
xor
lds
pop
movsl
shrl
push
fadd
mov
xchg
test
cmpsb
ljmp
daa
xor
push
sahf
lods
push
outsb
stos
jns
movsb
repnz
and
jno
sub
pop
cmp
and
cmpsb
pop
sbb
idivl
out
push
sbb
in
pushf
clc
enter
div
aaa
test
decl
popf
sub
sbb
mov
stc
and
push
shl
imul
or
mov
dec
add
aaa
xchg
push
jb
mov
fs
pop
les
adc
inc
adc
inc
ss
mov
jno
negb
addl
in
pop
sub
cmp
inc
inc
adc
movzwl
lods
pop
movsb
pushf
int3
ret
loop
testl
xchg
iret
inc
xor
mulb
inc
cld
mov
or
outsl
out
lcall
or
jl
or
jge
xorl
pop
int3
xchg
fsubrl
out
mov
in
pop
sbb
arpl
push
jae
lret
jo
clc
and
fadds
sbb
inc
and
mov
sar
push
add
nop
fdiv
into
lock
test
es
sub
or
adc
je
ljmp
inc
hlt
dec
lret
jmp
ret
iret
adc
sbb
ret
leave
fistl
mov
fdivl
cmpsb
flds
push
clc
jo
sub
push
sub
cmp
ret
dec
xlat
imul
mov
mov
cwtl
inc
cmc
sbb
mov
aad
inc
xor
jne
mov
inc
ss
mov
imul
mov
add
daa
sbb
aad
jle
orb
ret
mov
test
sbb
mov
or
inc
add
sbb
and
int
outsl
popf
inc
push
xchg
pop
xor
and
inc
jns
cmpsl
int3
xchg
loope
cli
mov
aam
imul
push
jp
cmpsl
pop
popa
es
sbb
sub
popa
or
mov
outsl
fcoms
rcr
sarb
in
incb
lds
sub
cld
pop
idivb
repz
mov
mov
int
jmp
add
outsl
push
into
add
fbstp
sbbb
jle
popf
data16
lds
push
jbe
ret
jge
loop
mov
ss
repz
sti
jmp
cs
icebp
cmpsl
int
xor
push
cltd
test
inc
pop
xor
mov
jp
dec
sbb
stc
mov
jg
jl
jno
pop
stos
flds
xchg
int3
add
icebp
or
adc
pop
mov
into
or
inc
iret
and
mov
int
stc
pop
lods
mov
rcr
pop
jl
into
repz
ret
adc
ds
or
xor
mov
out
aas
test
sbb
pop
ja
aas
frstor
jnp
out
test
in
sbb
aad
popf
fcmovnu
sbb
pop
add
jae
ja
xchg
mov
ja
xchg
repnz
mov
xchg
movsb
add
jle
in
rorb
cwtl
dec
jae
iret
lea
inc
xlat
xchg
pop
dec
outsb
mov
jecxz
mov
stos
test
idivb
shlb
or
fcoms
outsl
into
das
and
sub
xor
cmp
cmp
pusha
add
stc
jns
xor
sub
int3
mov
pop
icebp
xchg
xchg
loop
push
and
outsb
xor
movsl
add
xor
sbb
add
add
test
dec
push
inc
fmul
addl
dec
sbb
xlat
dec
repnz
inc
sub
lock
xchg
arpl
dec
mov
stc
and
dec
sbb
mov
ds
push
ja
mov
dec
jecxz
addr16
pop
jnp
pusha
je
dec
or
xlat
or
push
fs
mov
out
aaa
scas
sub
push
hlt
xchg
popf
daa
decb
or
fs
xor
pop
aas
clc
dec
in
pop
and
divb
adc
xor
int3
jbe
lahf
fstps
rcrb
cld
push
pushf
sbb
push
lds
add
popa
fs
add
in
ljmp
addr16
mov
mov
dec
add
scas
sbb
push
cmp
jo
or
and
mov
adcb
jb
pop
xchg
cmp
or
xchg
xchg
cs
rcrl
push
int
add
loop
fisubrs
pop
sub
jge
adc
mov
call
loopne
into
and
mov
jns
and
ja
jo
or
fimuls
imulb
shll
dec
ret
insb
stc
out
stc
xchg
dec
cmp
add
pop
gs
and
xchg
add
mov
in
pop
cli
loop
ficomps
jbe
lea
iret
cmc
xchg
cli
lods
xchg
test
push
sub
pop
cmp
mov
repnz
mov
pop
xchg
mov
sub
adc
adc
jo
nop
andl
popf
mov
sahf
pop
xchg
enter
add
repnz
mov
mov
repz
add
iret
les
pop
dec
out
xchg
sbb
lret
push
mov
mov
inc
loopne
popa
orl
mov
xor
test
dec
shrb
scas
push
push
imul
mov
sahf
ret
in
sbb
and
cmpsb
cwtl
jl
repz
nop
popa
imul
testl
mov
out
sbb
das
push
lods
xorb
call
lea
out
or
xor
or
cwtl
cmp
insb
cmp
jmp
mov
cmc
xor
or
popf
and
gs
shll
test
mov
cld
pop
push
jae
xchg
jae
xlat
push
cmp
mov
repz
flds
out
jl
mov
mov
imul
add
std
cmp
sbb
in
mov
cmp
cmc
pmaddwd
ljmp
in
xor
cli
imul
ja
cmp
inc
enter
in
bound
lahf
jecxz
fdiv
xor
xchg
and
jl
bound
stos
and
sub
mov
repz
jns
lock
inc
sbb
fcomps
outsb
push
pop
aam
and
movsb
lcall
mov
fcoml
cmp
inc
pop
mov
in
pop
jmp
out
cmpb
pop
cmp
movsb
call
mov
bound
mov
pop
lock
jbe
enter
cmp
cmp
loop
and
fcmovnbe
sbb
daa
fdivrs
insb
je
sti
cltd
sub
adc
leave
cmp
sbb
in
arpl
pop
jb
outsb
xchg
pop
jnp
stc
int3
push
ss
jge
in
jmp
pop
inc
dec
lcall
jnp
cs
stos
inc
nop
mov
xor
int3
je
pop
dec
adc
mov
pop
push
movsl
adc
pop
cmp
adc
sbb
sbb
pushf
add
in
shlb
fstl
push
mov
push
lahf
mov
dec
mov
adc
push
xchg
mov
lcall
scas
dec
mov
ljmp
fdivrp
and
inc
jg
aaa
xchg
pop
aad
mov
sub
push
jl
loope
sahf
inc
mov
mov
repnz
jne
aam
jbe
jb
fists
aam
test
imul
pop
imull
ss
divl
mov
loop
push
push
aas
stos
xor
insl
test
lods
movsb
pushf
mov
pop
loopne
pop
push
fprem
leave
jne
lret
sbb
std
fdivr
push
ret
inc
or
fisubl
push
or
jnp
pusha
fidivs
lods
scas
shlb
cld
cmp
incb
jno
jno
pop
xchg
or
ret
rorl
or
mov
jns
int
jg
cs
int
jns
icebp
sbbl
mov
lahf
pop
dec
nop
sub
fsubrp
pop
pop
xor
sub
cmpsl
cmp
add
in
insb
sarl
dec
mov
jecxz
js
ss
xor
and
xchg
outsl
jl
mov
cmc
sub
pop
sbbb
push
sbb
push
lcall
mov
ror
cmp
push
jp
movsb
push
xchg
lds
idivb
pop
push
xchg
xchg
fwait
movsb
mov
cwtl
jp
pusha
enter
push
cmpsb
aaa
cmpsl
rclb
and
in
cwtl
and
mov
lds
mov
cmp
in
mov
mov
in
push
cli
js
jmp
in
or
icebp
nop
test
fimull
cltd
call
in
mov
js
cli
test
dec
mov
mov
sarb
dec
shl
push
jecxz
add
leave
push
test
test
inc
sahf
sbb
icebp
jno
mov
jae
lret
into
mov
xchg
mov
repz
adc
sarb
mov
xchg
test
sub
pushf
mov
sub
nop
fxch
dec
test
sub
jge
and
dec
or
cmpsb
ret
mov
pop
lock
jle
xchg
test
inc
clc
mov
fists
sbb
jp
negl
nop
pop
faddl
xchg
mov
dec
mov
stos
lods
and
testb
pop
jmp
and
int
adc
xchg
lcall
xor
adc
movsb
mov
dec
push
stos
xor
bound
add
or
dec
push
dec
mov
xchg
rcll
lods
in
cli
dec
lret
aaa
dec
enter
add
in
ret
cli
out
cmp
fstps
in
daa
jb
xchg
outsb
pop
subl
jnp
inc
cmpsb
jmp
lahf
and
and
sbb
fidivrl
jb
imul
add
std
in
xor
fcmove
dec
loopne
sbb
cli
sub
add
add
push
shrb
push
xorb
adc
bound
shrl
xchg
and
jae
push
daa
sbb
pushf
popa
jns
and
mov
jle
movsl
mov
scas
ss
sbb
adc
sbb
hlt
mov
int3
cmp
iret
arpl
shrl
std
and
mov
mov
movsb
adc
and
pop
inc
daa
lods
mov
xchg
mov
lock
stos
cmpl
dec
aas
push
scas
inc
scas
sbb
push
int
ficoml
sti
clc
xlat
cwtl
icebp
xchg
imul
es
aam
and
adc
aaa
clc
mov
and
xchg
in
inc
imul
test
xor
lahf
aam
clc
sbb
xchg
push
aaa
mov
ret
sbb
push
data16
dec
hlt
adc
push
in
or
mov
fmull
jae
push
jle
and
inc
xchg
push
mov
inc
lods
ret
jnp
cmpl
add
pop
push
cs
jo
xchg
into
jmp
xchg
sahf
mov
cli
xchg
jne
xor
jg
cmpsl
inc
icebp
je
mov
cs
int
and
jo
cmp
mov
repz
fiaddl
fwait
push
inc
xchg
jl
mov
lret
aas
jmp
iret
pop
ret
jb
cmp
jp
or
and
scas
movsl
test
or
sbb
push
fmull
inc
push
ljmp
or
cli
jo
cs
xchg
in
xchg
jle
or
xchg
adc
cmpsl
into
leave
cmpsl
inc
jp
mov
sbb
call
lret
gs
aad
shrl
in
sub
push
inc
and
rorl
cmp
pop
pop
insb
fstpl
adc
push
and
push
push
jmp
cmpsb
inc
pop
push
sub
add
sbb
inc
cld
pop
in
jb
sbbb
or
mov
int3
fistpll
and
pop
pop
nop
mov
and
leave
int
pop
popf
das
cmp
xchg
jb
sbb
fs
inc
jnp
rorl
test
push
xor
imul
fisttps
or
loope
push
pop
mov
test
ret
repnz
mov
cmp
xchg
inc
mov
or
xor
cmp
jno
or
mov
push
inc
fnsave
inc
jne
pushf
sbb
mov
push
adc
jmp
pop
or
cmp
cmc
pop
jecxz
sti
xor
pop
jno
hlt
cld
dec
in
leave
mov
hlt
sbb
mov
das
sbb
bound
fwait
imul
jp
xlat
sub
sbb
faddl
cmp
push
ret
xlat
rclb
not
sbb
dec
loop
ret
jge
xor
inc
xchg
fidivrs
xchg
bound
dec
jg
fsubp
jge
jbe
loopne
xchg
stos
mov
mov
push
out
imul
je
sbb
fcomps
rorl
les
movsb
xchg
push
push
or
jge
or
pop
push
rcr
fwait
ja
cmpl
scas
mov
jns
movsb
mov
pop
imul
sbb
jmp
xor
push
je
lcall
pcmpeqd
mov
cmp
movsb
cmp
ljmp
xor
loopne
pop
push
xchg
inc
sub
add
addr16
and
std
push
xor
mov
mov
pop
stos
xchg
lcall
jno
daa
push
dec
into
mov
mov
movsl
adc
cs
and
scas
dec
andb
jnp
pop
fnstcw
mov
mov
jl
mov
jne
push
mov
mov
orb
notl
decl
jae
mov
cmp
cmp
rclb
xlat
dec
push
mov
xlat
outsl
jle
ret
lret
sbb
lret
pop
xchg
pop
push
xchg
fildll
adc
ss
xchg
int3
fisttpll
cs
out
xchg
ret
xchg
lods
bound
clc
out
push
int
shll
add
sbb
pop
ja
dec
jns
adc
int3
iret
cmovg
sahf
mov
sub
lock
out
nop
dec
sbb
je
pop
fisttpl
aas
push
pop
jmp
jb
daa
or
sub
ret
ret
mov
dec
jge
decl
cmp
in
in
mov
push
and
pop
push
int3
push
orl
adc
push
add
pushf
out
ret
sbb
cld
cwtl
roll
xchg
out
jne
ret
repz
mov
test
rorl
sub
and
cmpsl
hlt
into
jp
and
sub
inc
cmp
imull
xchg
xor
in
lahf
pop
outsb
add
mov
push
lcall
pop
push
jns
testb
insl
or
mov
xorl
inc
sbb
jmp
ds
fstp
xlat
rorb
leave
adc
adc
mov
out
out
gs
mov
aaa
pusha
sbb
adc
xchg
mov
pop
sbb
movl
jmp
jmp
roll
jae
call
mov
lcall
roll
jae
movsb
inc
lahf
dec
mov
loope
jle
and
mov
fldcw
adcb
loopne
stc
jae
cmpsb
cmp
shrl
lcall
enter
sub
test
and
or
push
fdiv
mov
rolb
jne
mov
ror
xchg
mov
push
xor
aas
push
push
mov
imul
lcall
cmp
in
jmp
sbb
jbe
cmp
incb
jmp
xor
pop
dec
out
les
mov
mov
popf
cwtl
xor
cli
pushl
in
aas
pop
mov
mov
or
iret
sbb
fsubl
lds
sbb
xchg
shl
xchg
push
xchg
jne
cmp
cltd
jno
inc
lods
xor
lock
cmpsl
mov
scas
sub
jl
xchg
idivl
jl
mov
inc
imul
bndldx
cli
jbe
sbb
call
ret
push
cmp
lcall
sub
cmpsb
cmp
add
nop
aaa
shl
jg
adc
sub
sbb
jo
test
inc
inc
jmp
add
inc
in
fstpt
inc
pop
cmp
and
in
sahf
in
mov
mov
jb
sub
inc
add
dec
pop
jl
push
inc
xor
jge
push
push
xor
scas
cli
jo
fmuls
jne
mov
repnz
mov
into
in
inc
mov
jg
sub
xchg
push
pushl
jno
lods
arpl
add
dec
stos
jne
rolb
jb
cmp
inc
pop
sti
cmc
mov
inc
pop
adc
stos
dec
jo
sti
jecxz
or
cli
inc
test
ret
icebp
and
adc
cltd
sub
vmovsldup
enter
add
pop
popf
mov
jp
paddusw
jns
or
shrb
fcmovne
mov
adc
movsl
xor
lret
decb
jno
push
jno
and
jecxz
div
xorb
adc
or
inc
ficompl
xor
dec
ret
in
inc
jecxz
mov
push
lods
mov
inc
nop
dec
jp
clc
jle
sub
shlb
gs
js
scas
enter
xchg
mov
sahf
shrb
cltd
xor
lret
fwait
pop
push
aas
mov
pop
fcmove
fisttpl
mov
adc
push
mov
inc
inc
push
push
push
ljmp
imul
divb
mov
inc
out
xchg
mov
cwtl
sahf
mov
dec
int
xor
and
aas
mov
jp
shll
or
mov
jmp
iret
and
add
xchg
std
ljmp
sbb
ss
ds
int
cmp
imul
ljmp
inc
call
sub
add
ret
mov
lods
fstps
clc
mov
mov
xchg
std
adc
mov
mov
dec
sbb
rcll
mov
mov
daa
jnp
sub
lcall
lcall
xchg
mov
push
addr16
xchg
fdivs
cmpsl
pop
cmp
cmp
stc
inc
inc
jmp
cltd
mov
pop
pop
or
lcall
xchg
je
hlt
rcrb
ffreep
adcb
jo
lret
test
test
popf
ljmp
or
repnz
popf
push
fldenv
std
mov
repnz
and
dec
dec
repz
call
add
ss
xchg
dec
notl
std
lock
add
mov
lcall
mov
jns
mov
mov
mov
fadds
adcb
andb
ds
xchg
mov
or
push
jmp
pop
int
sbb
pop
leave
cs
fwait
push
and
push
test
push
cld
mov
addb
out
mov
dec
fnstsw
xor
add
call
and
fyl2x
push
repz
push
gs
push
mov
pop
fnsave
and
sbb
jnp
iret
adc
xlat
mov
jp
jecxz
jne
cmp
xchg
xor
js
or
cltd
arpl
movsb
jp
iret
test
mov
inc
pop
push
fistpll
ja
adc
sbb
cld
jae
aad
xchg
enter
mov
sti
inc
stc
rcrl
or
push
out
jmp
pop
add
push
adc
fists
cmp
mov
pop
sub
sti
fdivrl
sub
sbb
es
lcall
daa
scas
inc
mov
je
faddl
push
cmp
push
push
mov
mov
testb
enter
outsb
push
daa
xor
mov
xchg
aad
cmp
cmp
sbbl
loop
adc
cmp
outsl
sub
sub
in
roll
cmp
pop
push
mov
loop
outsl
cmpsb
xlat
shl
jno
mul
push
mov
outsl
xchg
pop
fstps
repz
cwtl
scas
cmc
inc
mov
pop
and
adc
outsb
mov
lds
lret
popa
sarb
pop
mov
jl
inc
std
mov
les
dec
aaa
rolb
daa
sbb
mov
vpsadbw
fiaddl
loop
jmp
out
fildll
lds
mov
mov
push
insb
jae
or
xor
sbb
xor
test
xlat
fldt
test
repz
jo
inc
jnp
sbb
xchg
fsub
push
clc
mov
insl
rorb
mov
movsl
ret
or
mov
adc
ljmp
das
mov
imul
jge
out
jns
jle
inc
mov
jo
sbb
pushf
inc
mov
clc
sbb
mov
sub
adc
lods
dec
jl
push
popf
fcomp
dec
mov
add
out
loop
outsb
push
nop
jne
stc
subl
sbbb
fsubs
inc
xor
cmp
pop
adc
das
addb
fcoml
cmp
in
lret
ficoml
pop
rep
pop
std
pop
fisttpll
mov
dec
test
sbb
or
popf
lret
leave
cld
sub
in
xor
aad
bound
int3
mov
jmp
ret
sbb
dec
jmp
jmp
mov
dec
pop
fstp
and
mov
nop
into
stc
in
mov
imull
insb
mov
ja
sub
movsb
mov
leave
inc
pop
sub
pop
mov
mov
imul
or
mov
movl
outsb
ds
push
pop
les
adc
jecxz
push
mov
fbld
pop
cmp
add
fxch
out
stos
inc
adc
stos
hlt
dec
fcoms
inc
in
lock
dec
inc
into
adc
out
cmp
dec
adc
sub
inc
arpl
mov
xor
fstps
sarl
inc
inc
and
fmull
mov
dec
mov
out
xor
inc
dec
mov
xorl
outsb
cltd
incb
add
xlat
pop
arpl
pusha
xlat
cld
je
mov
stc
fsubrs
or
and
daa
adc
lret
call
mov
mov
adc
add
mov
jmp
lds
aaa
inc
or
sti
add
hlt
dec
adc
rcll
roll
push
aaa
dec
xchg
sub
jne
outsb
jns
mov
cld
or
inc
push
arpl
add
pop
sbb
cmp
push
sbb
mov
orb
aas
dec
xor
mov
mov
out
xor
fsubs
jns
add
movsl
jle
cmpsb
mov
arpl
rcr
push
jmp
push
jg
ja
push
jge
or
jbe
pop
popl
cmp
inc
xchg
dec
mov
rolb
xor
adc
popa
sbb
mov
popf
pop
mov
pop
sub
mov
ds
test
jbe
sbb
les
stc
mov
rcl
mov
add
and
lret
addr16
jb
sarb
ds
mov
shrl
js
cmpsl
daa
pop
pop
and
push
or
xor
and
ds
add
movsl
mov
mov
sub
jp
inc
push
xor
add
popf
das
push
ror
sub
inc
out
xchg
es
sub
lahf
mov
sahf
inc
jmp
adc
mov
gs
xor
fwait
cmpsb
sub
jo
aad
ja
sahf
out
adc
push
sub
insl
pop
pop
cltd
and
movsl
sbb
add
xlat
cli
call
adc
add
mov
jnp
sbb
cmp
push
sbb
mov
pushf
xor
aas
dec
sub
sub
mov
shl
repz
mov
fs
mov
add
jno
xchg
pop
stos
dec
scas
cmp
pushf
je
jmp
dec
add
inc
xor
or
cmpl
pop
in
cmp
mov
push
movsl
or
push
push
leave
xor
push
xchg
das
xchg
add
je
fsubs
arpl
mov
dec
lods
sbb
mov
push
fbld
out
and
cmp
xchg
inc
adcl
jg
jl
divl
pop
repnz
jle
adc
dec
fadds
adc
adc
std
and
push
mov
fwait
mov
arpl
and
rorb
cli
or
jg
lock
fwait
in
les
or
inc
pop
push
divps
out
push
pop
mov
add
xchg
lcall
ret
adc
test
in
xchg
xorl
pop
push
or
xor
xchg
and
addr16
aam
jne
cmpsb
lods
xchg
dec
mov
cmpsb
or
cltd
mov
push
jnp
test
arpl
push
outsb
dec
push
pop
lahf
adc
aam
dec
mov
out
xor
xchg
out
aas
dec
pop
jbe
push
mov
popf
test
jl
mov
arpl
in
xor
cmp
mov
sahf
add
mov
cmp
mov
ss
addr16
cmpl
arpl
repz
mov
push
pusha
adc
jae
rcrb
insl
xchg
sbb
or
adc
jg
lcall
cmpsb
jno
cmp
incl
and
dec
push
sub
jno
js
imul
jecxz
add
movsl
lds
jecxz
adc
mov
mov
pusha
test
xor
sbb
leave
je
loopne
adc
dec
imul
inc
mov
mov
and
cmp
add
imul
push
nop
xchg
inc
out
das
pop
fldl
jnp
int
cmpsl
pusha
sub
cs
lret
adcb
pop
jo
cmc
sarb
arpl
fsubs
dec
fwait
orl
pop
cmp
scas
mov
push
mov
mov
sbb
jnp
push
xchg
test
nop
into
imul
lods
cld
cmc
jge
pop
les
mov
pop
out
in
xor
cmp
shrb
xchg
mov
push
gs
int
xchg
cmp
cltd
sub
pop
xor
les
andl
jp
scas
aam
adc
in
mov
ljmp
jle
jbe
enter
mov
add
jmp
add
add
and
lahf
lret
imul
pop
je
xor
lock
push
das
icebp
das
inc
fstl
fcmovnu
cmp
lods
loope
sub
jns
int3
cmp
push
enter
push
hlt
mov
adc
adc
adc
icebp
sti
imul
insl
or
cwtl
int3
ja
push
js
mov
push
sbb
test
ljmp
test
push
mov
lahf
clc
mov
scas
pop
inc
jb
dec
cmpsb
pop
out
xchg
cmp
push
adcb
jbe
inc
lcall
inc
jle
push
pop
sahf
ret
je
jmp
repz
xchg
outsl
stc
lods
push
addr16
mov
xchg
lds
pop
aaa
cli
mov
std
movsb
pop
push
xrelease
and
sub
mov
fdivrs
adc
push
sbb
xor
push
push
enter
pop
loopne
imul
cmp
insl
jl
mov
add
adc
lret
lahf
popa
mov
das
sar
xor
adc
sub
adc
or
mov
dec
or
mov
call
push
les
cli
mov
and
movsb
fs
and
negb
lods
fldcw
mov
mov
pop
loope
pop
mov
xor
add
mov
xor
leave
popa
dec
test
xchg
or
dec
sbb
cmc
sbb
pop
inc
jo
int
into
pop
nop
cmp
andb
xor
and
sbb
jge
jecxz
and
mov
loope
into
mov
push
lret
mov
mov
ja
test
xchg
loopne
add
adc
and
sub
mov
and
cwtl
jbe
outsl
popa
pop
adc
pusha
or
sti
test
sub
ret
mov
sahf
pop
nop
loop
mov
xor
jmp
aaa
jp
push
imul
movsb
das
mov
jg
or
es
dec
cmp
add
call
aam
dec
cmpsb
lea
ja
scas
inc
lods
cmp
dec
aaa
stos
jne
xchg
inc
mov
push
sbb
adc
bound
mov
inc
vdivps
out
loope
fildl
stc
scas
xor
mov
lods
sub
dec
popf
pusha
stc
ret
leave
out
cmpsb
mov
xchg
adc
cmp
daa
cmp
std
arpl
push
cmp
mov
inc
loop
clc
insb
fs
aam
mov
nop
ds
dec
mov
inc
rcrl
jge
jge
lods
lods
insb
enter
push
popf
mov
test
mov
and
mov
add
pop
cltd
pop
mov
lods
sbb
cld
repz
fldenv
test
xchg
in
adc
xchg
ret
and
hlt
div
outsl
inc
imul
mov
push
push
sub
mov
jne
in
aam
verr
inc
inc
data16
pop
lods
shlb
xor
aam
fmuls
or
les
mov
out
add
mov
jle
rcll
adc
or
xchg
dec
dec
adc
adc
je
sbb
nop
sub
lods
arpl
arpl
int3
mov
dec
mov
push
scas
loopne
mov
lock
arpl
add
outsb
mov
lret
push
sbb
push
lods
call
call
filds
dec
lock
into
push
scas
or
and
mov
aaa
cmp
xchg
ja
and
sbb
mov
es
in
jge
mov
cmp
ret
lods
jno
pop
loope
inc
or
arpl
sub
pop
rclb
movsl
or
and
push
pop
and
outsb
jnp
outsb
test
sub
pop
fbstp
scas
mov
shlb
add
sbb
aad
cli
lret
inc
jns
mov
loop
fisubs
xchg
fistpll
mov
xor
pushl
insb
add
aam
lahf
mov
or
jno
mov
movsb
out
pop
mov
cmp
mov
roll
lods
jmp
cli
mov
lea
dec
pop
sbb
es
push
push
jo
lahf
push
xor
imul
adc
pop
stos
sbb
mov
push
or
lahf
cmp
lods
int3
repnz
sbb
sbb
push
or
push
xchg
and
mov
push
in
adc
fisubrs
push
mov
std
pop
mov
outsb
gs
idiv
enter
ds
add
and
or
in
adc
xor
inc
mov
stos
inc
loopne
divb
jle
sarb
cmc
std
inc
jo
or
xor
loopne
xor
call
add
inc
clc
aam
jb
mov
test
cmp
and
mov
sub
loope
sti
cmp
lock
and
jmp
orb
add
es
pop
fwait
sahf
pop
mov
push
bound
jno
outsb
stc
pusha
cmp
dec
gs
jbe
add
sub
pop
jbe
imul
mov
sbb
andb
mov
xor
movsl
lret
sub
pop
mov
pop
incb
or
leave
imul
mov
nop
lahf
dec
addr16
mov
xor
negb
mov
add
cmp
mov
or
stos
out
sahf
mov
and
mov
outsb
jge
rcl
cmp
in
mov
add
pop
aad
movsb
sti
jmp
sbb
cmp
out
fistps
rcrb
sbb
outsb
add
test
stos
mov
adc
daa
push
stos
xor
cmp
cmc
mov
gs
pop
xchg
lods
or
test
iret
push
xor
mov
jl
loope
jo
cli
mov
aad
in
int
out
addr16
mov
pfmul
ret
les
mov
loopne
inc
inc
enter
stos
ficoms
rcrl
add
cwtl
ret
arpl
mov
cmpsb
in
xor
adc
mov
sub
push
out
cmpsl
cmp
mov
sub
adc
pop
aaa
aad
and
sub
sub
mov
ret
dec
add
sub
lds
test
std
cmp
dec
out
sti
sub
jo
shr
jne
push
das
sbb
mov
add
lcall
in
push
or
mov
in
inc
movb
stc
leave
fwait
add
scas
sarb
sti
stc
cli
ret
xor
xor
adc
add
and
push
aam
roll
out
mov
jae
push
or
mov
das
ss
imul
or
repz
out
andb
and
imul
push
cmp
lds
jbe
sbb
aas
mov
xor
mov
lods
add
inc
cltd
repnz
leave
sbb
push
mov
sahf
pop
dec
fdivrs
lods
call
dec
and
push
or
fidivl
xchg
pop
xchg
pusha
leave
pop
nop
add
mov
pop
dec
cmp
loope
push
xchg
movsl
jmp
adc
pop
ret
rcl
scas
mov
out
jns
dec
bnd
xchg
rcll
or
gs
fwait
mov
js
and
lods
jns
mov
jecxz
jge
mov
adc
adc
mov
pushf
push
pop
imul
aas
sbb
lds
out
push
loopne
aas
test
call
int
shrb
shlb
call
mov
pushf
mov
jge
scas
xchg
add
jns
push
ficoml
jge
mov
xchg
call
sarl
inc
mov
test
mov
sbb
js
jg
std
lahf
repz
xor
ljmp
ret
ja
sbb
repz
cltd
fs
sub
inc
inc
add
sarb
sbb
mov
incb
push
loope
or
ja
movsb
negl
into
push
in
popa
pop
lds
cmpb
mov
ljmp
fiaddl
push
mov
jbe
xorl
mov
sbb
aaa
add
and
sub
cli
dec
push
jecxz,pt
jae
push
xchg
inc
push
sbb
fsts
lret
and
in
pop
shlb
xor
decl
dec
lahf
push
lret
fcoms
jne
xlat
ja
xchg
mov
or
lret
mov
mov
push
mov
ljmp
cmp
sub
pushf
mov
jae
pop
imul
lods
cli
test
xchg
popf
lret
mov
pushl
mov
pop
or
push
aaa
or
xchg
call
scas
dec
adc
int
mov
mov
test
in
push
out
jnp
fwait
xchg
icebp
pop
inc
mov
add
or
add
fcoms
add
add
lock
aam
or
lret
and
mov
aas
cld
adc
cmp
fwait
mov
mov
movsb
sarb
fldt
lcall
ss
pop
xor
popf
imul
push
sti
sbb
out
xlat
imul
jg
fadds
jno
mov
lret
rol
dec
jno
or
cmpsl
inc
mov
stos
mov
arpl
lret
inc
add
jle
in
movsl
sti
xchg
leave
iret
xchg
push
pop
mov
jecxz
lods
sarb
sub
mov
lret
test
outsl
fisttpll
or
push
cmc
ljmp
fnsave
imull
jo
xor
cmpsl
mov
ja
push
sahf
pop
popa
push
add
lods
inc
jb
push
int
iret
addr16
jmp
push
ljmp
int
je
int3
push
in
outsl
or
sub
mov
mov
jno
xlat
adc
xor
ljmp
push
mov
and
pop
and
out
or
out
push
sub
and
xor
repnz
ret
add
stos
mov
enter
shl
ja
push
sub
jae
dec
dec
adc
xlat
decl
or
mov
scas
mov
call
popf
xchg
or
pop
cmpsl
imul
ljmp
push
aad
mov
inc
mov
in
add
sbb
mov
nop
je
movsl
and
mov
movsl
ror
fdiv
test
push
clc
cmp
mov
push
jbe
aas
in
mov
pop
inc
loop
jns
gs
xchg
pop
repnz
out
and
ret
rolb
and
repnz
int
pop
mov
dec
int
push
mov
jmp
test
rorl
xchg
mov
pop
movsb
sbb
pop
popa
fadd
out
mov
xchg
push
sahf
inc
out
pop
or
psraw
add
pop
sti
cmp
or
nop
mov
cmp
xor
shll
stos
pop
mov
cmp
out
fwait
clc
gs
mov
inc
hlt
mov
mov
outsb
or
xlat
dec
or
out
push
and
inc
fcomp
push
sub
xchg
imul
jmp
es
mov
fldenv
insb
jg
or
mov
pop
lret
mov
and
adc
jmp
push
pop
adc
dec
fs
sub
subl
pusha
dec
repnz
xchg
fwait
out
cmp
test
imull
dec
jge
dec
in
test
xchg
adc
pop
mov
dec
xchg
enter
packssdw
enter
aas
cmp
mov
imull
mov
sub
mov
mov
lahf
mov
fwait
and
xor
mov
aad
xchg
ss
into
and
jmp
stc
arpl
in
inc
packuswb
sti
and
xlat
sbb
movsl
iret
mov
imul
inc
jmp
pop
cmc
push
hlt
pop
jnp
mov
dec
add
sar
push
rorb
add
sub
cmp
or
mov
mov
loopne
inc
and
mov
pop
and
sub
dec
mov
sub
lock
add
jecxz
cmpl
out
add
daa
jp
in
test
mov
test
shll
mov
sar
sahf
jle
push
js
jns
int
mov
int3
push
addb
pop
sti
cwtl
push
mov
lea
mov
mov
xor
and
mov
xchg
out
cli
js
addr16
xchg
inc
das
cmp
sbb
out
inc
sub
scas
cltd
xor
mov
jecxz
loopne
inc
in
mov
test
mov
sub
mov
mov
pop
xchg
fstpt
ljmp
xchg
lock
das
jne
fimuls
xor
pop
mov
add
mov
lahf
test
cmp
adc
ljmp
mov
push
test
pop
in
mov
in
outsl
fnstenv
outsl
insb
movsb
dec
das
add
add
lods
dec
iret
xchg
push
push
pop
sahf
clc
inc
pop
xor
movsb
pusha
les
call
pop
jmp
lds
push
cmp
sbb
add
cs
jp
push
cmp
and
gs
mov
lret
and
scas
mov
push
xor
push
shl
out
mov
daa
pop
jae
loope
lahf
pushf
mov
cmp
add
dec
pop
fcoms
call
pop
mov
aam
jno
sbb
pop
stos
test
clc
mov
or
cmc
sahf
push
scas
mov
pop
pop
andl
dec
decb
int3
xor
iret
jp
cld
scas
xchg
push
scas
jmp
mov
stos
shrl
dec
stos
ret
popf
sete
dec
int3
hlt
xchg
cmp
mov
cmp
imul
imul
das
stos
iret
xchg
jb
dec
xchg
adc
push
out
push
jp
inc
mov
cmp
dec
jge
mov
mov
xlat
ja
int3
sub
pop
cltd
mov
sub
ss
dec
scas
dec
dec
jae
aaa
inc
xchg
into
rcr
in
cmp
jmp
xchg
push
sub
cmp
cmp
xor
out
cmp
out
rcr
ss
push
pop
dec
icebp
jecxz
xchg
or
push
into
lret
mov
pop
pop
add
iret
les
push
push
xchg
or
repnz
addr16
fwait
fistl
negl
dec
pop
imul
sbb
add
or
hlt
jne
aas
xor
or
mov
xchg
movsb
lret
mov
cwtl
hlt
stc
mov
jno
sahf
fisubrs
mov
jecxz
sub
push
outsl
jno
mov
cld
ret
mov
lcall
and
cld
xor
xchg
mov
std
mov
mov
cs
incb
dec
dec
lds
loop
mov
test
pop
ret
dec
outsb
scas
mov
ret
cmpsb
jg
lds
mov
jnp
movsl
xor
enter
push
or
cmpsb
cmp
push
or
and
jbe
and
nop
jae
mov
out
test
pop
xchg
add
fmull
cmc
cmp
fildl
jno
js
mov
outsb
test
iret
mov
loope
sub
stc
ja
je
stos
jmp
sahf
or
xor
and
inc
push
pop
arpl
cmpl
jo
test
addb
std
outsl
xchg
push
ds
fwait
outsb
mov
insl
out
sub
inc
mov
inc
sbb
pop
xchg
das
fidivs
sbbb
and
mov
mov
fstpl
sbb
rorb
repnz
aaa
rolb
repnz
je
adc
jmp
fcmovne
sub
mov
aas
xor
push
cmp
sub
lock
jecxz
les
dec
stos
call
ds
sti
outsb
out
mov
nop
mov
into
pop
in
cld
sub
data16
pop
mov
and
les
testb
mov
mov
cmpsb
in
aad
push
movsl
or
bound
icebp
in
out
and
incb
pop
testb
and
mov
inc
mov
push
xchg
gs
push
xchg
pop
mov
fwait
test
mov
cmp
inc
xor
adc
sbb
lret
subl
bound
jmp
inc
push
arpl
adc
sub
loopne
leave
sub
xchg
and
iret
loop
mov
cmp
dec
js
pop
aas
sub
jle
xlat
cmp
and
scas
or
push
push
pop
xchg
fdiv
push
loopne
lods
shll
test
or
pop
add
inc
outsb
push
insl
stos
cmp
sti
xchg
mov
cmp
sbb
or
push
lods
adc
inc
lcall
jb
mov
shlb
cli
push
test
into
int
clc
xor
js
add
cmpsl
cmpsb
xor
mov
pushl
ds
mov
loope
dec
sbb
shr
xchg
mov
xchg
xchg
lock
inc
xor
rol
movsl
std
pop
add
in
orb
jno
int3
mov
cmc
and
daa
icebp
xor
inc
inc
xchg
in
add
pop
sbbl
dec
jmp
xchg
push
fdivrl
push
fdivs
das
loop
aas
and
mov
push
adc
jnp
cmp
push
mov
mov
add
cmpsl
lods
xchg
cmc
ljmp
jo
mov
cwtl
adc
sub
push
sarb
call
pop
inc
cmp
lret
push
fs
ljmp
xchg
jecxz
add
inc
sahf
stos
or
sti
cld
int
inc
scas
test
dec
mov
or
icebp
mov
pop
insb
jle
or
stos
fwait
inc
in
lahf
pop
jnp
mov
pop
mov
js
pop
jp
mov
lods
jg
fmul
lds
ljmp
out
imul
fld
add
mov
push
loopne
lcall
inc
and
ret
sahf
loope
ja
adc
lock
sbb
leave
aam
out
dec
and
or
movsl
sub
fimuls
aad
cmp
arpl
pusha
iret
or
jmp
fwait
stos
repnz
notb
cmp
xadd
inc
jge
lcall
ds
add
hlt
mov
cmp
dec
mov
and
int
pop
jmp
sti
cmp
cmp
cs
movsl
and
fsts
cmpsb
jb
leave
ret
push
push
mov
repnz
arpl
imul
pop
cs
add
sub
mov
jnp
jo
in
push
movsb
inc
mov
sbb
movsb
add
ja
inc
mov
test
mov
icebp
lcall
jecxz
cmp
cltd
xlat
call
push
mov
mov
xchg
push
fstpl
scas
ds
mov
mov
mov
add
repnz
sbbl
hlt
jno
test
sahf
inc
das
ds
adc
add
iret
sbb
cmp
sub
aad
stos
and
cmpl
lahf
jp
pop
out
in
ljmp
shll
std
stc
loopne
xor
dec
mov
pushl
push
pop
addr16
add
jbe
adc
dec
adc
xor
das
std
addr16
test
daa
cmp
and
xor
fnstcw
ja
in
push
stos
or
jge
xor
out
lock
add
ficoml
sbb
das
mov
fildl
pop
popf
jae
pop
sbbb
and
ljmp
jmp
xchg
ja
pop
addr16
mov
jp
pop
fwait
mov
ds
imul
xor
inc
fildll
sub
aaa
aas
sub
out
cmp
dec
jb
fwait
or
xorb
adc
decb
and
cmpsl
cmp
fs
ljmp
int3
inc
sbb
or
cmp
lret
ficomps
push
mov
je
xlat
sbb
stos
testl
fbld
bound
cmpsl
mov
push
cltd
adc
lods
lret
jmp
adcl
xchg
scas
lahf
cs
xor
mov
test
mov
sub
mov
sbb
adc
jnp
or
mov
test
adc
cld
sub
outsl
jge
nop
mov
push
ss
mov
inc
dec
or
idiv
adc
out
or
or
pushf
jg
mov
in
sarb
mov
sbb
loopne
pop
cwtl
ficoms
int3
cmp
push
jg
mov
adcl
lret
adc
out
xchg
pushf
cmp
xchg
roll
mov
mov
add
test
xor
lret
mov
xlat
mov
mov
mov
in
std
cmpsl
mov
inc
test
pop
rclb
shrl
pop
je
aaa
jnp
rclb
cmpsl
sub
loope,pt
aad
jmp
push
ds
mov
push
int3
dec
mov
mov
add
mov
cmpsl
sahf
or
adc
adc
cmp
pop
hlt
sbb
xchg
sahf
shll
test
or
int
and
mov
pop
iret
pop
sbbb
std
add
push
dec
imul
sbb
int3
imul
fnstcw
add
cmpsl
push
pop
fildl
xchg
or
xchg
in
mov
cli
aaa
clc
int3
loope
into
outsl
sub
les
sub
ljmp
iret
xchg
js
movsl
mov
xor
insb
pop
sbb
test
jge
mov
pop
mov
iret
sbb
fistpll
xchg
ds
mov
fdivrp
cmp
xchg
push
cmp
jnp
xchg
jp
and
pop
or
mov
push
jne
in
xor
sbb
in
sbb
inc
lock
push
jg
pop
stc
xorb
sbb
pop
mov
push
sahf
mov
add
mov
imulb
sti
xchg
into
mov
mov
lock
xchg
mov
dec
cmp
fs
mov
pop
adc
sbb
outsl
fsts
xchg
cmp
popf
mov
out
loopne
inc
mov
sbb
test
outsl
in
popf
dec
js
and
addr16
lahf
test
push
ret
sub
sub
inc
loope
inc
mov
push
pop
xchg
push
mov
loopne
inc
pop
xchg
out
scas
hlt
xchg
pop
jl
push
int3
jne
jb
repnz
int3
test
sub
sub
pop
insb
dec
data16
nop
stos
sbb
pop
xchg
jmp
fisubs
test
lcall
arpl
sbb
push
ret
inc
add
ret
adc
popf
lock
aaa
jb
frstor
les
jmp
jbe
mov
mov
enter
fildl
iret
jne
aas
mov
add
lock
imul
std
fs
aam
sub
decb
decl
pop
add
std
sbb
vmread
xchg
mov
mov
loop
mov
repz
lds
jle
dec
scas
nop
jne
and
loopne
iret
xchg
sub
inc
push
adcl
sti
gs
ss
cli
pop
jmp
push
sbb
pop
push
test
es
or
fwait
in
push
enter
cwtl
or
jnp
inc
mov
movsb
or
push
sar
fcomi
stos
pop
mov
fistpll
cmpsb
roll
sbb
std
arpl
push
fbstp
or
fidivrl
fistpll
aaa
rclb
inc
jns
add
subb
inc
scas
pop
mov
es
inc
jnp
add
sbb
push
adcl
sarb
mov
fcomp
inc
inc
sub
push
lcall
adc
test
cmpsl
ret
cmpsb
sub
or
sub
push
shll
mov
push
sbb
add
push
into
mov
jg
je
mov
sarl
or
mull
std
jp
hlt
repz
les
enter
sarl
and
cli
rcll
divb
test
mov
mov
fisubrs
adc
jb
push
fiaddl
sub
ret
pop
scas
xchg
cwtl
jmp
dec
loopne
sub
test
es
insl
lods
imul
mov
sub
das
inc
pop
data16
hlt
lret
jl
adc
jnp
inc
cmp
shll
cs
stos
xor
leave
or
mov
xchg
inc
call
push
out
mov
loope
cli
sbb
sub
in
mov
jbe
sub
cmpsl
xchg
mov
sbb
pop
outsl
adc
iret
pop
mov
outsb
xor
adc
xorl
mov
jecxz
mov
icebp
dec
out
lahf
imul
movsl
and
jnp
jns
pop
es
shrl
jmp
fidivs
mov
loope
cwtl
decb
push
rol
out
push
pop
lcall
sub
ss
cmp
dec
push
syscall
pop
push
sarb
or
sub
outsb
jl
xchg
in
mov
leave
sbb
out
and
dec
jns
pop
mov
jmp
xlat
pusha
insb
in
out
ss
mov
in
test
mov
adc
dec
xchg
mov
jl
sbb
adc
cs
sub
nop
aad
add
ja
imul
mov
dec
push
xor
fsub
dec
jl
mov
addr16
je
daa
lock
sub
inc
push
xor
mov
push
fnsave
cmp
push
xchg
lea
xlat
shll
jno
xor
mov
pop
lds
movsl
adc
push
xchg
jbe
jp
idivb
in
xchg
sbb
paddd
xor
mov
in
pop
jl
out
loopne
sub
aaa
retw
xor
lcall
cwtl
mov
fisttps
clc
sub
mov
sub
sub
add
fiaddl
add
out
pop
repz
outsb
dec
stc
clc
mov
leave
lcall
rcrl
in
ljmp
repnz
jae
test
xor
add
sub
xor
hlt
xor
adc
mov
hlt
and
xchg
jbe
and
xchg
adc
shlb
cmp
in
scas
jae
mov
sub
pop
and
sbb
and
nop
mov
add
cmp
fstpl
adc
push
mov
jl
les
and
daa
dec
jae
cmc
pop
add
in
rcll
push
ret
adc
add
jl
or
mov
and
stos
ret
jb
rclb
es
lock
jg
mov
pop
movsl
out
mov
popa
pop
in
clc
enter
cld
jo
inc
cmpsb
mov
fimuls
rorb
xchg
xchg
mov
or
fistpll
push
mov
jg
dec
enter
xchg
add
dec
pop
in
sbb
sbb
call
aad
mov
das
cmpsw
and
sti
das
ss
pop
adc
pop
cmp
insb
ret
push
mov
or
jle
into
enterw
cmp
imul
jle
mov
dec
push
or
xor
andb
outsl
loope
dec
fisttps
jge
cmp
adc
push
xor
inc
and
and
and
or
jbe
push
xchg
test
stos
sbb
add
out
cmpl
js
mov
sbb
pop
inc
xchg
les
ror
or
pop
inc
stc
test
sarl
push
fmull
sarb
jne
int3
inc
mov
arpl
push
lcall
popa
daa
ljmp
sbb
and
aas
adc
jns
push
jbe
out
lea
xor
mov
out
aaa
dec
or
mov
mov
jno
cmp
adc
sbb
xorl
pop
jno
shl
push
push
mov
fnstenv
xor
add
in
mov
sbb
cmpsb
fistps
dec
push
scas
cmp
jo
push
rorl
mov
out
adc
jne
outsb
out
sti
mov
push
or
or
out
push
repnz
int
hlt
xchg
shlb
pop
loopne
xlat
mov
aad
cmovb
push
jb
out
push
xchg
out
popf
jle
fwait
or
jmp
in
inc
push
ret
shl
loop
xchg
jl
sbb
fisttps
call
filds
movsb
jae
jle
and
inc
add
push
je
push
lock
movsb
cli
rep
lods
mov
inc
fdivl
inc
mov
popa
dec
in
pusha
mov
fisttpll
lods
incb
cmpsl
sub
mov
xor
fdiv
mov
cmpsl
lahf
xorb
popa
dec
sbbl
outsb
scas
lods
sbb
pop
cmp
sub
mov
adc
das
pop
cmp
cmp
inc
lods
lcall
ret
arpl
adc
mov
jmp
dec
cmp
bound
push
scas
loop
mov
push
or
cltd
xchg
mov
dec
adc
shlb
aas
or
push
cs
cmp
mov
jmp
mov
inc
aaa
lds
arpl
fcomp
and
add
int
cmpl
lock
rcll
cmp
mov
leave
cmp
movsl
rol
mov
scas
mov
push
mov
addr16
mov
sub
xor
test
lock
mov
fildll
jae
sub
xor
xor
aad
stc
pop
movsl
mov
cmp
imul
iret
jl
dec
push
fstpl
aam
roll
mov
mov
mov
inc
and
push
mul
sub
stos
inc
loopne
ds
addr16
jl
jno
in
or
testb
xchg
movsl
ficoms
scas
sub
or
pop
lret
adc
xchg
inc
add
rcl
xor
fsub
or
cld
inc
pusha
stos
pop
push
dec
dec
cmp
mov
je
es
mov
in
lcall
mov
lcall
es
push
xor
xor
mov
repnz
push
decl
movsl
scas
nop
pop
enter
dec
lret
cwtl
dec
inc
popa
pop
jne
mov
imul
gs
adc
gs
test
sbb
or
inc
mov
test
cwtl
mov
fs
mov
daa
inc
test
std
sub
xor
jb
xor
push
stos
in
push
mov
jb
aaa
mov
sbb
test
ss
mov
out
and
push
pop
hlt
pop
fwait
rcl
and
and
push
mov
cli
jns
cmpsl
std
lahf
repnz
bound
lcall
out
xchg
add
xchg
lret
jo
or
sub
mov
pop
add
push
mov
pop
and
nop
jmp
push
push
gs
inc
dec
cmp
or
add
pop
mul
je
mov
pop
int
jle
repnz
jns
call
sub
repz
inc
in
mov
pop
add
push
fldt
sub
jno
rorl
test
int3
and
jecxz
sbb
add
sti
in
test
and
mov
dec
ret
push
sahf
rcrb
leave
call
gs
jmp
pop
out
pop
dec
inc
cmpsl
push
adc
mov
adc
mov
cltd
push
xor
sbb
mov
cmpsl
xchg
repz
xchg
in
push
call
sbb
bound
lcall
aaa
arpl
xchg
jmp
pop
movsb
sbb
sub
pusha
out
pushf
xor
push
sub
fisttpl
xchg
test
shr
mov
es
mov
adc
mov
or
stc
pop
xor
sub
cld
loopne
addr16
or
je
jbe,pt
pop
in
into
mov
mov
inc
stos
cmp
jns
jle
sbb
std
cmp
insl
enter
ud2
sub
inc
add
push
xor
jno
sbb
jg
sbb
fisubrl
out
mov
pop
mov
std
pop
loope
pop
jb
into
and
mov
xor
imul
ret
frstor
mov
push
lods
cmpb
push
pop
gs
jl
decb
add
inc
int
testl
ja
xchg
add
mov
jns
test
popf
xchg
shr
sbb
insb
jle
loope
lds
mov
ljmp
into
mov
lret
fistl
jns
fiaddl
in
mov
mov
sub
inc
fucom
mov
push
shll
inc
and
mov
and
out
sbb
ds
pop
movl
aas
inc
ret
lea
sarb
test
xor
lods
sbb
lcall
mov
aad
mov
fldt
and
pop
or
sub
jnp
ljmp
test
jne
inc
std
jecxz
call
mov
jp
sbb
movsl
jg
xchg
xor
mov
popf
xor
sarl
adc
sub
and
mov
imul
aad
inc
inc
int3
cli
sbb
mov
sbb
adc
sti
bound
jmp
mov
push
imul
jge
out
rcrl
dec
hlt
nop
adc
insb
xchg
sbb
enter
std
dec
inc
es
or
jmp
sarb
cmp
add
nop
push
repnz
jle
cmpsb
jg
sub
jp
xor
jge
jmp
inc
pop
loope
mov
push
mov
insb
sub
cli
test
test
dec
add
cltd
in
xlat
pop
stos
xchg
mov
fsts
aam
cmp
jmp
sbb
cltd
movsl
push
add
xor
test
ss
cmp
xchg
pop
scas
xchg
jne
lret
adc
into
push
out
xchg
int3
mov
outsl
push
jmp
mov
lret
jno
outsb
sysret
mov
test
push
call
xor
lmsw
xor
xlat
jnp
jle
cltd
dec
jle
mov
cmc
test
sub
scas
fsubrl
movsl
repz
inc
cmp
mov
movsl
xchg
imul
icebp
cvtpi2ps
mov
dec
sbb
and
cltd
popa
sbb
push
cmp
xchg
or
pop
mov
sbb
es
insb
mov
xchg
cwtl
mov
mov
aam
imul
cli
inc
in
push
sahf
or
ret
adc
aam
fld
fcompp
js
or
mov
mov
dec
fnsave
adc
mov
cmpsb
in
jl
mov
cltd
clc
fcoms
xor
repz
pop
or
push
and
cmp
sbbl
or
sti
movsl
pop
test
mov
mov
and
aas
xchg
call
aas
and
dec
cltd
sub
push
addr16
lret
insb
sahf
stos
cmovbe
popf
lret
jl
out
in
push
es
add
fwait
lcall
sbb
pop
loope
je
in
in
hlt
test
ret
int
dec
pushf
mov
add
inc
roll
adc
mov
dec
fdivrp
mov
jb
hlt
mov
mul
sub
hlt
sub
dec
cmpb
jp
push
mov
daa
je
cs
xor
je
popf
fcompl
loope
sbb
jns
ss
push
sti
jg
push
pop
cmp
add
xor
aas
pop
xor
jecxz
dec
jge
sbb
xchg
xchg
fcomp
stos
xlat
jle
in
jbe
adc
inc
mov
add
sti
push
push
mov
shlb
jl
test
lds
xor
movsl
jle
sub
jo
xor
ja
and
cmp
and
mov
insl
sarb
mov
xor
dec
out
insb
in
mov
and
mov
lcall
clc
mov
sbb
call
lahf
mov
arpl
xchg
leave
mov
insl
bound
and
push
ss
sbb
cmpsb
xchg
cmpsl
loop
aad
dec
add
movsw
or
inc
fistpl
fadds
jbe
sbb
or
les
jno
add
add
xlat
pushl
shlb
repnz
adc
out
andb
jb
mov
fwait
pop
xchg
orb
clc
push
push
shll
push
jb
lahf
sub
fldz
adc
in
iret
enter
xor
cmc
in
cltd
jns
sbb
push
outsb
fistpll
cmp
imul
aas
add
aad
shll
and
addl
adc
mov
cmpl
and
adc
or
daa
or
cmpsb
fcmovnu
cwtl
xor
loope
fcmovnu
mov
mov
lods
cmp
testb
adc
data16
sbb
mov
rclb
jns
xchg
in
add
and
scas
sub
addb
rorb
mov
testb
xor
repnz
lock
xchg
test
ds
vmptrld
pusha
subb
mov
stos
sbbl
jecxz
bound
fists
mov
mov
push
cld
cmp
lods
popf
jmp
xchg
adc
test
mov
inc
loopne
pop
scas
jp
and
aaa
in
jnp
mov
arpl
std
add
mov
hlt
xchg
push
adc
mov
inc
test
add
popf
arpl
call
ret
movsl
lret
pop
mov
xchg
cmp
mov
mov
and
dec
jae
frstor
xchg
ds
jae
jno
sbb
ret
filds
mov
inc
fcmovbe
into
test
addr16
repnz
mov
dec
and
jg
mov
cmp
popl
inc
clc
cmc
test
mov
xor
push
or
rolb
daa
and
xor
add
insl
mov
cmpsl
cli
mov
pop
ds
xchg
push
xor
lret
or
imul
mov
mov
xchg
popa
pop
outsb
int
test
fistpll
int3
dec
mov
xchg
inc
mov
cmp
lret
mov
lds
jns
outsl
push
xor
loopne
stos
fxch
inc
imul
das
inc
scas
daa
pop
std
imul
out
mov
int3
xchg
cmp
xchg
inc
loopne
jecxz
lcall
test
outsb
sbb
aad
mov
adc
mov
sahf
and
mov
mov
popa
dec
sub
movsb
jecxz
jg
int
xor
in
lret
pop
lock
repnz
sahf
dec
adc
pop
xlat
and
repnz
ja
aad
into
rolb
test
or
xchg
lret
cmp
mov
daa
inc
and
incb
arpl
fstl
mov
mov
mov
out
gs
push
pop
rorb
loope
adc
adc
sbb
fidivs
inc
jne
jae
adcb
bound
cmpsl
gs
push
shll
call
and
and
sbb
xor
jle
dec
dec
adc
fs
push
pop
bound
out
sub
adc
icebp
adc
call
test
loopne
push
ficomps
subb
mov
lds
test
cmp
push
repnz
pop
cmp
inc
popf
jne
push
push
cmp
outsb
rcr
add
fisubrl
movsb
lds
cmp
arpl
adc
int3
jge
xchg
test
mov
out
dec
es
movsl
jns
lahf
cmpsb
xor
sub
pop
dec
jne
out
adc
or
int3
jb
pop
outsb
dec
pop
loope
dec
es
jp
xor
mov
ret
cmp
xchg
flds
mov
xchg
hlt
adc
xchg
mov
bound
ret
jno
lock
leave
fdivl
repz
pop
cld
fbld
inc
movsl
mov
mov
jne
in
test
daa
cmpsb
push
loop
pushf
and
push
aas
add
mov
data16
jmp
lods
jle
test
jl
and
mov
lcall
and
dec
push
lock
out
ja
int3
inc
jl
rcr
and
sbb
push
cld
inc
add
shlb
inc
push
adc
push
add
ds
xor
cmp
mov
pop
sti
in
sbb
hlt
daa
pop
xor
shlb
xor
je
adc
stos
dec
or
out
jb
mov
add
hlt
rol
mov
fmull
int
push
imul
and
bndldx
enter
cmp
adc
pop
sub
pushf
mov
cmp
mov
pop
mov
and
cmc
subl
sbb
push
jb
fildl
lds
in
fcomps
xlat
mov
insb
inc
gs
jo
in
rcrb
shll
mov
pop
inc
insb
dec
or
mov
fwait
in
data16
pop
sbb
out
xchg
stos
pop
fsubrp
cs
test
push
mov
cmp
jle
mov
lcall
xchg
insb
pop
stos
in
dec
int3
ss
pop
or
out
mov
sub
adc
cmpsl
mov
add
and
xor
and
jb,pt
inc
sbb
dec
imul
and
loopne
sbb
mov
stos
in
cmp
mov
sbb
mov
lret
inc
outsb
pop
pop
dec
inc
pusha
aas
loop
xchg
or
ja
fisubl
std
repz
mov
insl
sub
lret
movsl
mov
loopne
mov
es
in
mov
nop
int3
out
xor
aas
mov
xchg
mov
sub
cli
fildl
mov
cwtl
mov
js
insb
xchg
xlat
stc
popf
push
mov
stc
mov
mov
js
stc
mov
xchg
add
dec
into
mov
leave
stc
mov
push
inc
sbb
imul
dec
in
adc
daa
flds
inc
aaa
sub
mov
jnp
jbe
push
xchg
fidivl
inc
les
adc
xor
lods
cltd
cmp
mov
inc
cmp
jl
push
ljmp
rclb
pop
dec
cmp
xchg
sub
stos
rorl
pop
cmp
xchg
imul
out
and
imul
mov
xchg
loop
stos
add
push
pop
subl
xor
xchg
jecxz
mov
flds
adc
fisubs
stc
test
in
outsl
ficoms
shrl
mov
lods
cmc
outsb
jns
icebp
testl
fcmovu
arpl
jns
movsl
adc
fs
shrb
cmc
popf
jb
add
repz
xlat
daa
ds
mov
mov
mov
aaa
fs
pop
ret
dec
aam
rcll
inc
ret
dec
pop
arpl
push
andb
mov
inc
push
and
loopne
outsb
pop
or
jb
sbb
jne
pop
add
pop
or
jae
push
mov
es
lds
loope
push
add
jne
push
sbb
lods
roll
pop
cmp
mov
negl
add
ret
mov
jns
pop
ret
xchg
jle
and
xlat
arpl
push
mov
in
imul
int3
divl
lods
fmuls
ret
in
lds
loope
push
mov
arpl
addr16
mov
lret
aam
je
xor
hlt
xchg
aas
add
insl
push
insb
push
xchg
and
sub
sahf
fmulp
add
das
pop
push
pop
xor
pop
sbb
push
sbb
adc
pop
mov
push
push
leave
fwait
push
cmp
fwait
mov
cmp
mov
insb
push
inc
cmp
icebp
cmp
or
mov
cld
outsl
sbb
iret
xchg
mov
mov
inc
fisttps
pop
dec
cmp
pop
inc
xor
js
dec
int3
jae
in
es
pop
stos
ss
add
rorb
sub
xchg
insl
fistps
pop
inc
iret
in
fcmovnb
stos
andl
add
sbb
xor
fwait
dec
and
in
cmp
cwtl
xchg
xchg
xchg
mov
mov
xchg
jb
stos
stos
pushf
xchg
cmp
dec
call
jmp
mov
jp
fcmovnu
nop
pusha
out
hlt
lret
push
daa
fwait
scas
push
lret
jno
pop
adc
adcl
das
in
and
push
into
dec
mov
sub
leave
fimull
in
jge
xchg
popf
push
in
push
icebp
aas
int3
inc
outsl
loope
out
adc
add
dec
pop
xchg
xor
dec
push
loop
xchg
mov
dec
mov
out
ja
mov
cvtps2pd
xchg
and
mov
push
stos
sub
jo
jno
sub
int
sbb
jbe
fwait
shrb
adc
test
xor
jnp
add
out
pop
inc
jp
mov
add
adc
xor
andb
push
lods
mov
adc
sbb
pop
repnz
sbb
or
xor
dec
pop
mov
fsubs
xor
xor
mov
stc
mov
xor
divb
cmp
dec
test
jb
int
fwait
stc
aaa
mov
pop
cwtl
lret
sbb
pop
inc
sub
mov
mov
pop
in
push
sub
pusha
cltd
ret
add
sbb
insb
inc
fnstsw
int3
fs
dec
sub
lods
rcrl
xchg
sub
mov
pop
xorl
iret
pop
movsb
fcoms
jne
adc
push
xorb
inc
or
sub
jne
stc
push
stos
mull
shll
enter
loopne
dec
and
imul
jecxz
mov
test
shrb
call
lcall
push
fistpl
ret
pop
mov
jae
push
ret
outsl
pop
cmp
and
rcrb
xor
sahf
pop
enter
data16
cmp
lret
mov
push
push
test
les
xorb
sbb
jmp
mov
pop
jnp
push
js
es
pop
mov
insb
loop
mov
sbb
rcrb
insl
and
hlt
das
dec
lret
xchg
bound
scas
aam
jle
cmp
test
arpl
ficoml
mov
sahf
add
sbb
adcl
jb
mov
popa
pop
mov
stos
movsb
fsubp
push
add
push
xor
mov
je
aas
jbe
fstps
fldenv
adc
mov
stos
sbbb
out
and
std
fcmovu
or
test
dec
ljmp
pop
xorl
mov
sbb
outsl
stos
mov
inc
lcall
insb
aaa
jmp
aad
and
aam
ret
arpl
push
adc
xor
ficomps
sahf
fidivs
into
pushf
and
and
jg
mov
cmc
adc
sti
dec
das
mov
push
jge
and
adc
fsubrp
test
push
mov
call
mov
jo
cs
sbb
and
mov
mov
int3
pop
add
das
adc
in
cmc
daa
loopne
sar
cmc
jae
or
movsl
scas
and
mov
push
xchg
push
pop
push
lock
test
aad
cmpsl
mov
data16
roll
scas
stos
cmp
mov
push
inc
movsl
in
sbb
mov
sbb
xchg
sbb
sbb
aad
jb
dec
mov
dec
jecxz
jb
or
lahf
mov
push
lds
fsub
xchg
loopne
cmc
es
adc
sbb
repnz
shlb
adc
outsb
sbb
add
mov
imul
mov
movsb
sub
stos
rolb
jp
cmp
cmpsb
shld
mov
xchg
aad
adc
ljmp
imul
pop
xor
fcoms
adc
inc
lcall
arpl
sbb
lcall
call
adcb
cwtl
push
std
xor
stos
push
mov
adc
aas
add
sar
cmp
mov
cmc
test
fimuls
xchg
sub
shll
xchg
xorl
mov
scas
mov
test
movsl
mov
arpl
fs
lods
xchg
push
adc
adc
inc
out
xchg
test
imul
mov
and
adc
pop
pop
repz
push
push
ljmp
sbb
insl
mov
xor
mov
outsb
xor
sbb
int
pop
ret
mov
pusha
or
push
loop
das
jge
cmpb
std
shl
mov
add
enter
shrl
clc
dec
and
inc
lret
fcoml
dec
sbb
pop
xchg
int3
mov
sbb
dec
xor
mov
rol
test
lahf
fsubs
adc
enter
pop
frstor
std
rclb
inc
add
fwait
cmp
or
or
dec
inc
cmpb
sbb
xor
cli
sbb
xlat
pop
nop
rcll
mov
inc
pushf
leave
scas
mov
fiaddl
mov
mov
sbb
mov
xchg
ds
push
out
or
push
sub
js
and
sub
out
shrl
stc
fcoml
cmp
mov
jp
jp
imulb
adc
or
in
fidivs
insb
xor
call
push
pop
lret
sti
inc
idiv
push
clc
or
dec
mov
add
push
sbb
mov
xchg
fistps
stos
pop
lods
repnz
mov
lcall
pop
xchg
outsl
dec
sbb
push
sbb
and
push
pop
gs
push
aad
adc
dec
xlat
ret
push
add
and
cmpsl
push
repnz
dec
mov
and
sahf
jmp
jp
push
into
xchg
inc
mov
hlt
mov
js
and
sub
ss
les
ret
inc
adc
lret
cmc
mov
dec
sahf
addl
push
jg
dec
mov
mov
mov
cli
jae
pop
dec
sub
sub
adc
add
shr
sub
jne
fcomps
and
mov
dec
test
jb
ret
stos
aas
inc
jbe
and
cmp
fldl
fwait
xor
and
pop
cmp
ljmp
inc
push
jno
icebp
outsl
cmpsl
pop
fldt
fidivrl
imul
or
xchg
mov
leave
or
dec
and
das
jmp
sub
xchg
pop
add
inc
shlb
fwait
pop
es
das
jbe
mov
sti
xor
testb
outsb
test
pop
dec
test
scas
clc
mov
shlb
add
aad
out
in
push
lret
push
fildl
mov
stc
xor
loop
add
aas
std
inc
push
sahf
iret
adc
sahf
inc
cmp
mov
jnp
pop
dec
adc
jnp
test
jl
je
ljmp
mov
stos
push
test
sbb
ret
shrb
rcrl
aam
push
orb
jno
sbb
outsl
xchg
mov
adc
mulb
cwtl
das
fs
les
mov
inc
jmp
andl
in
call
cmp
cmp
cmp
in
iret
aas
outsb
xor
rolb
add
lahf
add
add
or
xor
or
jo
or
leave
pop
int3
les
repnz
cmpb
andl
push
lret
sub
mov
xchg
mov
mov
sub
inc
ja
outsb
and
cmpsb
les
out
rolb
in
dec
adc
cmp
jne
xor
inc
dec
fsubrp
movsl
and
cltd
adc
fisttpll
les
push
and
fs
sub
xchg
xor
test
fnstenv
xchg
xchg
lcall
ja
orl
inc
int3
test
xchg
js
test
mov
rorb
mov
pop
jp
lcall
fistl
test
xor
ja
inc
jae
or
push
jmp
test
xor
pop
and
ret
xlat
lods
andb
ret
jae
inc
fsubrs
sub
pop
mov
xchg
mov
jmp
int3
cmpsl
jmp
imul
lfs
cmp
js
cs
jmp
jne
fnstenv
sti
pop
addr16
push
jmp
inc
xor
out
xchg
sub
jg
test
sub
push
mov
lock
inc
lahf
mov
mov
lods
repnz
xchg
ret
pop
xchg
inc
inc
arpl
lds
push
in
out
subb
cmp
pop
call
pop
imul
cmp
inc
mov
test
push
sbb
not
push
jg
lds
pop
int
sbb
jno
icebp
cmp
loopne
or
push
popa
mov
pop
out
and
or
and
pushw
xchg
test
pop
scas
sub
and
jno
dec
mov
enter
lret
mov
mov
mov
jae
out
imul
mov
lret
ret
je
push
clc
dec
push
mov
mov
and
in
mov
in
and
xchg
adc
cmpsb
shlb
cwtl
je
arpl
out
call
test
sbb
push
push
fildl
data16
push
add
pop
outsl
push
int3
push
add
and
imul
xor
mov
inc
mov
mov
in
xchg
add
mov
inc
rolb
es
ss
xlat
add
sahf
or
dec
dec
mull
mov
fwait
outsb
lret
sbb
or
sti
pop
xor
xorb
in
pop
pop
rorb
fidivrl
push
adcl
jecxz
negb
dec
in
pop
movb
ds
and
es
xor
inc
sub
mov
sub
pop
adc
repnz
fwait
pop
or
shll
xor
rorl
inc
sub
sbb
orl
push
adcl
fstpl
cmp
shll
cmp
daa
fwait
stos
inc
sub
outsl
out
lret
push
mov
push
mov
adc
inc
jg
inc
push
rcrl
gs
popa
test
cs
xor
or
fdivrs
jb
lea
xchg
test
or
push
push
cmp
outsl
or
dec
xchg
pop
test
xor
jg
push
in
cwtl
push
inc
mov
sbb
roll
sub
jnp
addr16
or
gs
test
xor
adc
push
cwtl
into
mov
inc
push
inc
add
push
inc
jno
sub
decl
mov
aam
dec
xchg
mov
bound
jmp
cmpsb
mov
jns
fists
int
mov
inc
push
repz
mov
das
mov
pop
lock
pop
inc
sahf
and
mov
mov
pop
cmp
push
roll
lcall
pop
add
xchg
dec
add
pusha
enter
push
loopne
jecxz
fists
sbb
pop
inc
loope
push
je
idivb
xchg
jns
gs
xor
xchg
rcr
pop
pop
mov
xchg
dec
addl
xchg
bnd
sub
cwtl
fprem1
jae
sub
cld
dec
push
scas
xchg
lea
js
or
fsubs
dec
movsb
cmpsb
sti
inc
stc
jno
jecxz
cs
flds
dec
xchg
aaa
xor
push
jp
mov
xchg
or
cmp
ficompl
insl
xchg
inc
sbb
and
mov
xor
in
mov
and
or
mov
fldenv
pop
jmp
xor
call
sub
lds
nop
cmp
fadds
fstl
pushf
lret
out
dec
or
or
scas
cs
test
aad
movsl
jge
push
mov
dec
push
xchg
or
xchg
pop
into
in
sbb
hlt
and
imulb
outsl
mov
pop
mov
aas
call
dec
insl
inc
cmc
push
out
adc
jnp
fwait
xchg
je
xchg
inc
jne
in
les
push
lret
imul
arpl
iret
lods
call
das
pop
stc
mov
or
push
push
in
adc
test
jle
into
push
adc
addl
or
ljmp
out
sbb
dec
xchg
out
cmp
jns
adc
stos
adc
dec
aas
hlt
add
push
or
pop
jns
in
or
mov
mov
add
mov
lods
cmp
enter
bound
orb
xor
icebp
daa
es
inc
cmp
xchg
mov
mov
xchg
jo
ss
fwait
inc
xor
lret
ret
mov
pop
rorl
and
and
dec
push
mov
mov
push
movsb
or
mov
push
cltd
stos
pusha
xor
mov
popf
mov
pop
imul
jle
and
out
cmp
andps
jge
or
sub
fwait
adc
je
arpl
addl
add
lods
aas
ss
xorl
dec
mov
dec
test
pusha
into
int
shrb
push
call
lret
adc
fcmovnu
call
in
dec
mov
fdivrp
add
xchg
mov
sub
mov
icebp
push
scas
adc
ljmp
rclb
mov
or
mov
cmp
mov
mov
out
aas
or
test
pop
jno
shrb
push
shll
int3
pushf
in
jb
pop
ljmp
pop
mov
fbld
sahf
xchg
mov
inc
inc
sub
shll
mov
cmp
mov
mov
movsl
adc
sub
xchg
or
adc
jne
mov
rcr
xchg
out
mov
xor
xor
or
sub
jl
and
xlat
xchg
sbb
arpl
js
push
add
loopne
fists
sbb
jecxz
lock
cld
lods
cwtl
jnp
mov
jno
jne
les
fdivs
push
outsb
gs
stos
out
pop
rorb
es
dec
or
push
sbb
jge
sti
out
mov
sahf
repz
dec
je
scas
iret
xchg
lea
push
xchg
mov
insl
test
pop
in
cmp
pop
add
movsb
jae
inc
mov
dec
adc
push
dec
leave
push
lods
sub
cld
lock
jge
xchg
xchg
and
mov
xlat
dec
lods
fs
and
das
and
cli
dec
add
movsb
out
ret
inc
negl
fidivs
jne
push
xlat
add
rcrb
mov
sub
insb
cs
call
dec
test
cmp
adc
test
insl
xor
flds
ret
sbb
fcmovne
call
xchg
mov
shrl
inc
pop
mov
sub
js
adc
int
sbb
inc
mov
mov
popf
push
jns
mov
xor
adc
xorl
sbb
shll
hlt
cmp
call
addb
addb
rorl
xchg
mov
shll
inc
xor
sti
sahf
push
jo
jle
mov
mov
mov
test
mov
in
mov
bnd
mov
inc
bnd
sar
push
repnz
sub
pop
push
arpl
mov
dec
or
outsl
insl
dec
add
mov
cld
inc
call
push
scas
inc
loopne
in
mov
xchg
testb
adc
bound
pop
subl
stos
int
cmpsl
push
cli
repnz
push
imul
cmpsl
and
xchg
inc
imul
sub
inc
cmp
outsl
insl
ljmp
cmp
ret
aaa
cld
xor
mov
add
pop
cwtl
pop
xchg
push
inc
faddl
push
aaa
lea
movsl
inc
mov
pop
xlat
cmc
rcrl
add
decb
cld
jle
add
xlat
imul
sub
js
bound
jecxz
or
scas
pop
lahf
aam
insb
lds
outsl
nop
xchg
xchg
pop
int
in
adcl
or
iret
flds
cmp
ret
push
data16
mov
popa
lret
stc
insb
jnp
push
mov
inc
or
pushf
and
add
pop
mov
xor
sub
movb
adc
inc
es
xchg
sarb
mov
add
arpl
add
addr16
xchg
std
mov
and
fdivr
fst
mov
mov
and
adc
mov
pop
les
push
pop
fs
subb
add
or
xor
mov
cli
lods
mov
xchg
cld
inc
dec
out
arpl
sub
dec
fcompl
xor
and
ret
inc
sbb
lods
add
call
pop
rorb
frstor
mov
sub
or
mov
mov
xlat
fstpl
stc
jnp
xlat
sbb
inc
dec
test
sbb
add
in
xchg
mov
in
pop
sbb
dec
ljmp
jbe
lock
push
xor
cwtl
mov
inc
ljmp
pop
stc
mov
hlt
jne
lret
and
shlb
test
leave
adc
inc
sbb
aaa
gs
ja
cmp
push
sahf
ret
scas
mov
ljmp
scas
push
popa
dec
gs
fistpl
ljmp
rorb
icebp
icebp
and
push
aas
add
scas
je
loopne
pop
jg
dec
push
in
fidivl
adc
ss
push
lcall
jge
incb
xor
outsl
pop
das
mov
cmp
mov
adc
pop
lahf
pushf
or
push
inc
pop
cmpsb
orb
pusha
inc
fdivrs
popf
and
jne
adc
into
outsl
outsb
aam
fdivs
xlat
cmpsl
hlt
mov
mov
jmp
stos
pop
push
xor
jb
mov
sub
mov
push
mov
xor
mov
aad
jno
aad
leave
out
hlt
mov
addr16
dec
xor
scas
dec
or
adc
out
int
scas
xchg
mov
adc
repz
push
aam
mov
mov
scas
adc
inc
loope
cmc
cwtl
cli
enter
mov
cmp
sub
jmp
sbb
scas
leave
test
and
xor
xor
xor
insl
jp
das
mov
ljmp
mov
push
xor
xchg
push
jle
ficoml
pop
mov
jns
enter
cmovg
inc
xchg
xchg
subb
and
repz
mov
mov
in
add
xchg
sti
jg
in
repz
inc
push
add
xor
popf
mov
pusha
push
pop
mov
mov
xorl
add
scas
loop
fs
mov
mov
jne
in
cmp
pushw
std
lods
leave
fnstcw
cmp
cmp
mov
push
into
push
jp
icebp
imul
mov
sarb
inc
cmpsb
pop
fmulp
aas
pop
fdivl
jg
test
cmp
outsb
lock
stc
mov
or
pop
adc
test
push
dec
add
repnz
pop
out
mov
jnp
hlt
or
adc
shll
xchg
sahf
xchg
dec
pop
mov
add
outsb
cmp
out
mov
loopne
pusha
sar
jne
cmp
hlt
mov
movsl
loope
push
pop
mov
lock
dec
push
push
inc
lret
mov
sub
inc
mov
push
fwait
xchg
mov
inc
pop
inc
mov
int
adc
xor
imul
mov
fsub
mov
bound
in
lea
addl
data16
test
add
or
add
repnz
sti
push
mov
inc
out
sahf
idivb
push
xchg
jmp
outsb
xchg
xchg
gs
inc
test
cli
fsubl
jge
xchg
xchg
and
inc
sbb
xchg
aaa
repnz
in
test
adc
enter
sti
clc
jl
test
inc
ffree
dec
je
pushf
imul
push
inc
inc
xor
pushf
mov
int
sbb
and
sub
fisttpl
fwait
aam
outsb
ret
cmp
sti
add
push
sbb
push
ret
rcrl
js
pushf
data16
jg
in
stc
sub
xor
sub
xchg
out
in
mov
andl
mov
mov
push
push
inc
aaa
jg
mov
gs
pusha
cmp
test
push
cmp
xchg
mov
inc
enter
add
xlat
idivb
mov
in
or
sbbb
and
out
inc
lea
mov
sbb
fdivs
cli
or
sbb
mov
dec
lods
dec
jge
andl
in
mov
lods
xchg
xchg
stos
lock
pop
cmp
in
cmp
mov
hlt
fildll
lods
insl
sub
movsb
push
sbb
rorb
sub
pop
and
xor
jp
leave
adc
add
mov
push
dec
adc
scas
pushf
fstp
xchg
jnp
clc
jmp
push
or
lahf
arpl
add
lret
lea
fdivr
pushf
pop
jge
push
loope
shr
pusha
ds
aad
ficomps
or
outsb
xchg
push
sahf
cwtl
xchg
sub
loope
xor
out
inc
test
pop
dec
fldt
mov
adc
mull
mov
outsl
movsb
pop
or
inc
inc
pop
sub
daa
bound
int
cli
sbb
pop
js
out
and
imul
sbb
mov
in
mov
push
mov
pop
dec
movsl
add
stos
push
scas
jae
loopne
ret
sbb
mov
xchg
dec
lock
adc
stos
iret
enter
fdivr
lods
xor
test
fxam
sbb
icebp
ss
cmp
test
mov
jb
or
adc
dec
outsl
movsl
lock
nop
adc
jge
scas
or
sti
in
loope
sbb
aam
and
and
filds
cli
xchg
push
lock
xchg
sub
cmp
test
mov
loopne
dec
jbe
ret
ss
jnp
mov
xlat
jbe
andb
lods
inc
push
push
pop
sub
pop
and
jmp
insl
dec
cmp
test
sbb
sbb
pushw
popf
cmpsb
push
sbb
pop
mov
jns
nop
icebp
aam
imul
adc
lock
push
mov
cld
jns
and
sbb
mov
cmpsl
adc
xchg
jb
sub
pop
add
sub
bound
and
inc
pop
cwtl
mov
push
push
dec
mov
adc
pop
ja
in
or
cmp
mov
pop
arpl
bound
repz
pop
addr16
xor
add
fisttpll
divps
pop
xor
push
mov
rcrb
ficompl
pop
inc
scas
xchg
ret
int3
loop
call
dec
sbb
mov
xorb
mov
and
icebp
sbb
es
pop
xor
xchg
ret
test
insl
loopne
mov
int
cmpsl
mov
cmovp
xchg
aam
mov
add
jmp
scas
stos
ss
jb
inc
fs
pushf
mov
jg
outsl
lret
popf
jns
filds
out
call
pop
add
fucomi
mov
insl
push
xchg
cmp
mov
test
call
jge
add
int
adc
push
aam
and
out
mov
flds
push
enter
fcos
or
mov
sti
mov
cwtl
es
ret
sbb
sub
int3
fists
xor
xor
push
lret
push
cwtl
into
out
pop
push
jo
mov
inc
push
xchg
es
mov
mov
add
es
push
scas
xchg
or
lahf
mov
mov
cld
add
testl
inc
aad
jle
mov
idivb
xchg
pop
push
mov
data16
and
rorl
sub
or
push
insb
mov
cltd
lcall
mov
mov
and
jbe
and
mov
adc
pop
jae
out
popf
pop
xlat
xor
outsb
xchg
ljmp
mov
enter
sub
jno
inc
repnz
xorl
dec
cmp
nop
out
adc
jmp
scas
dec
xchg
xor
pop
add
mov
arpl
fwait
jg
arpl
jl
mov
xchg
movsl
out
push
test
int3
popa
mov
sbb
scas
mov
outsl
cli
std
add
pop
je
repz
negb
adc
inc
push
push
cld
inc
mov
or
insl
pop
adc
aad
iret
lods
cmp
stos
hlt
es
nop
inc
push
movntq
push
movsl
or
mov
push
insl
notb
push
lea
xchg
mov
std
mov
stos
das
sub
sub
inc
lock
and
add
stos
clc
xor
add
jo
mov
in
test
cmpb
or
test
add
pop
xchg
dec
sub
mov
sahf
lret
and
ret
xchg
rorl
lret
push
mov
cwtl
icebp
xchg
mov
inc
shlb
and
inc
mov
and
add
adc
jl
pop
ds
test
outsb
notb
popa
dec
int3
out
push
outsl
and
xor
iret
adc
xchg
fimuls
fsubrs
ja
mov
addb
outsl
add
adc
ss
inc
and
or
imul
in
daa
or
shrb
imul
fiaddl
pop
inc
adc
fsubrl
fdivr
fwait
mov
mov
in
dec
push
mov
aad
lret
inc
int
sbb
fidivrl
fldcw
sub
test
pop
mov
mov
leave
or
bound
test
sti
out
sbb
or
xor
ret
andb
scas
push
sub
loope
cmp
cmc
test
lock
xlat
sahf
lock
mov
or
add
jno
mov
jae
rcr
int
popa
sti
and
mov
lock
jg
lret
mov
sub
xor
cmpsb
dec
shrl
js
xor
rclb
cmp
jmp
movl
jae
jmp
ljmp
imulb
sub
nop
sub
cmpsb
xor
sbb
jno
cmp
fsubs
aad
jb
xor
jecxz
pop
hlt
cmp
mov
das
xor
aas
lret
mov
cmpsb
lcall
xor
cmp
and
jbe
mov
sti
mov
add
adc
mov
and
cli
jl
icebp
cmp
adc
and
push
fcmovnu
or
ds
cmpsb
rol
mov
cmp
xchg
lea
jecxz
enter
sahf
jo
mov
loope
loop
fildl
or
std
loopne
imul
fidivl
or
das
xchg
push
aas
sub
or
in
and
call
test
out
mov
add
cs
xchg
push
sbb
xlat
lock
mov
cmc
inc
mov
enter
icebp
or
xchg
xlat
es
insb
into
sbb
pop
pop
mov
jmp
imulb
inc
and
repnz
call
push
inc
gs
push
xor
daa
jb
minps
mov
inc
jbe
movsb
lret
push
mov
popa
cmpsb
out
cmp
pushf
xlat
cld
fdivrl
testb
bound
lods
daa
sbb
xchg
or
je
jo
lret
jp
jbe
iret
mov
mov
xchg
ljmp
dec
or
insl
or
movsb
pushf
xor
adc
movsb
adc
mov
sbb
movsl
ds
cmpsl
mov
adc
and
bound
sub
dec
mov
dec
push
mov
push
daa
mov
hlt
scas
mov
leave
adc
mov
addr16
loopne
iret
push
loopne
hlt
lahf
mov
pop
xor
jb
dec
movsb
lret
mov
pop
in
mov
xor
mov
jo
test
je
xchg
mov
minps
rcll
rorb
push
dec
in
push
hlt
dec
fmulp
push
sbb
and
insl
mov
icebp
sub
mov
jl
pop
push
stos
in
pushf
out
push
push
pop
mov
addr16
loop
ljmp
dec
mov
lret
lock
nop
lods
aad
ja
cmp
test
cmp
xorl
jb
lret
xor
jae
shll
mov
xor
inc
xchg
mov
lods
scas
aam
mov
cmp
cmp
pop
outsb
push
mov
loop
add
cwtl
mov
insb
lret
adc
fstpt
shll
cmp
lcall
mov
sbb
lods
inc
or
cmc
mov
imul
mov
xchg
sub
push
aad
pop
dec
lahf
add
out
or
push
and
jnp
test
iret
xor
jno
push
clc
adc
pop
push
add
sbb
mov
cmp
notl
push
popa
test
outsl
adc
push
jae
cmp
std
outsl
scas
fadds
sub
mov
mov
xlat
sbb
push
jl
xor
mov
aas
pop
bndstx
mov
fidivl
jne
scas
sbb
not
push
and
mov
insb
pop
add
sub
clc
aad
cmpsb
jecxz
xor
xor
cmp
xchg
cmp
cwtl
shl
inc
iret
in
sub
jbe
das
add
shl
aas
jp
cmp
push
loop
jmp
ret
fldcw
lods
sbb
fwait
add
inc
add
jp
les
inc
lea
subl
adc
jecxz
push
arpl
push
xchg
ljmp
aam
jl
jae
sub
loop
das
stc
inc
cltd
inc
out
cmc
mov
outsl
inc
popa
cli
add
sbb
jbe
mov
out
pop
dec
and
arpl
cmp
jne
into
orb
and
hlt
pop
repnz
iret
into
les
filds
sti
or
cmp
pop
push
sbb
add
push
repz
and
and
and
cs
mov
jmp
mov
xchg
loop
dec
inc
push
test
in
mov
push
pop
fwait
jne
xchg
dec
in
aaa
int
pop
imul
cltd
mov
adcl
jmp
popf
out
imul
lds
mov
aas
mov
dec
sbb
in
ja
xor
push
das
shl
shr
cs
dec
mov
gs
mov
jbe
movsb
pop
push
mov
adc
in
je
jge
lret
lea
mov
mov
mov
test
xchg
fldenv
or
dec
mov
sbb
jmp
fwait
xor
call
aam
xor
rcrb
aam
and
out
out
jle
or
in
popa
shlb
bnd
add
mov
mov
bsr
xchg
mov
out
lods
mov
into
movsl
and
or
ficomps
jno
test
cs
fmull
push
push
adcb
jl
and
sub
mov
imul
push
adc
cmp
push
roll
jns
insl
jns
push
xor
inc
jnp
hlt
and
ljmp
inc
jne
cli
push
fstpt
pushf
prefetch
adc
test
push
xlat
ss
mov
mov
cmp
jo
stos
imul
jmp
rolb
push
mov
outsb
imul
push
lsl
or
adc
push
xorb
ret
and
xor
out
inc
mov
ljmp
xlat
pop
cmpsl
hlt
cwtl
xchg
lds
outsl
mov
sub
sbb
shl
lret
mov
lret
push
add
cmp
cmc
nop
jecxz,pt
fistps
jno
mov
les
add
adc
sti
imul
pop
loopne
imul
mov
mov
sub
add
sub
shrb
mov
mov
popa
pusha
popa
cltd
and
push
push
loope
push
adc
je
in
jg
pop
push
aad
in
and
xchg
push
stos
mov
orb
mov
or
sub
pushf
pop
rclb
push
and
fwait
or
bound
es
mov
es
sbbl
jns
sbb
mov
xor
aas
adc
dec
add
out
pop
adc
ds
outsb
lcall
data16
push
push
mov
adc
add
pusha
or
shrl
push
sbb
pop
aaa
aad
mov
push
jl
lea
jmp
dec
movsl
imul
scas
xchg
pop
shrd
cwtl
or
imul
xchg
js
pop
icebp
gs
das
dec
jl
or
filds
pusha
or
in
xor
mov
pop
out
dec
aas
lea
outsl
push
dec
imul
adc
out
lods
ret
pop
subb
test
ret
sti
in
jno
mov
fmuls
sub
loope
shl
sub
pop
and
cmpsl
scas
jl
mov
loope
loope
sub
sbb
jge
cmpsb
sub
cmp
and
int3
les
fwait
pop
stos
test
loop
cltd
xchg
push
jmp
scas
add
test
add
ror
or
mov
stc
mov
sub
sbb
mov
cmp
js
fists
jg
fucomi
lret
ja
pop
dec
sarb
inc
aam
adc
pop
fistpl
inc
addr16
outsb
sub
rol
cld
movl
sbb
cld
xchg
loope
jp
push
mov
bound
mov
adcb
add
stos
xchg
in
pushf
adc
outsl
mov
push
in
jg
cmp
jns
dec
mov
lcall
xchg
test
cmp
cli
ret
repnz
int3
pop
daa
pop
pusha
aam
pusha
mov
cli
push
lahf
jmp
or
jge
xchg
sbb
int
mov
fdivr
xchg
aam
scas
push
or
fucom
dec
aam
cmp
testb
cli
jnp
mov
movsb
stc
bound
or
mov
es
popa
adc
std
gs
pop
and
mov
fwait
dec
in
lock
jno
dec
movsb
clc
inc
idiv
icebp
js
sub
jp
out
stos
insb
std
inc
push
cld
or
pop
std
add
mov
out
loop
in
xor
div
pop
push
sarl
or
jnp
inc
cld
xor
mov
and
fdivrs
inc
repnz
jmp
adc
subb
ds
xchg
push
mov
add
arpl
mov
mov
pop
mov
test
test
divb
push
data16
lret
inc
imul
cmp
shr
lret
mov
and
and
jge
movsb
xor
inc
pop
xor
xor
cmp
inc
iret
sbb
lea
jns
pop
pusha
mov
hlt
lods
jg
pop
rcll
xchg
mov
imull
gs
mov
xchg
lcall
pop
push
fmull
adc
jo
loop
xor
popa
pop
fisttpl
xor
push
push
and
jge
lahf
xor
cld
clc
hlt
add
mov
movsl
mov
pushf
fistps
inc
push
sbb
js
mov
sbb
xchg
dec
xorl
pop
mov
dec
inc
imul
mov
inc
cmp
in
mov
push
sub
sub
loop
or
mov
xor
ljmp
and
add
cli
inc
sub
mov
mov
sbb
mov
dec
loope
push
cmpsb
dec
jl
test
pop
out
out
idivl
jb
lcall
mov
sbb
add
out
push
dec
pop
imul
fs
jae
mov
and
inc
cld
or
insl
insl
push
xchg
xchg
inc
mov
sbb
into
je
push
jno
pop
int3
leavew
outsl
pop
inc
jno
cli
sub
push
push
scas
stos
jmp
inc
insl
dec
jp
cs
pushf
pop
adc
inc
add
sbb
mov
js
test
repz
mov
lds
lds
adc
add
mov
cmp
dec
push
xchg
push
imul
loop
cli
lahf
movb
pop
lret
in
loope
dec
pusha
adc
and
je
push
sti
into
js
shrb
arpl
notb
sbb
push
in
adc
xchg
mov
mov
lds
orl
inc
lcall
fildll
inc
lcall
mov
cmpsl
clc
push
mov
push
dec
jo
fnstsw
jl
mov
fwait
dec
std
shll
ss
cmc
push
neg
inc
inc
out
adc
xor
pop
orb
sbbl
adc
inc
sbb
lret
les
js
cmpsl
push
cmp
ud0
or
outsl
cmp
cmpl
insl
insb
add
sbb
incb
or
add
cs
sub
push
int3
aas
adc
gs
inc
arpl
mov
jmp
cwtl
call
jmp
clc
cmp
sbb
popf
adcl
in
xchg
and
adc
xchg
stc
andb
xchg
sub
insl
pop
je
enter
in
push
xchg
test
scas
cs
movsl
push
popa
dec
clc
jbe
mov
movsl
imull
xor
into
jle
adc
mov
lods
int
adc
cmp
sub
xchg
es
push
repz
jae
inc
fists
sti
sub
mov
and
push
bound
pop
mov
mov
sahf
push
cmp
jo
push
push
bound
cs
pop
pop
imul
xchg
xor
insb
dec
jmp
into
xorb
insb
cmp
repnz
pop
push
cwtl
cltd
addr16
xlat
cmp
sub
hlt
inc
mov
sti
bound
js
xlat
ljmp
adc
sbb
xchg
jae
add
pop
pop
push
pushf
dec
test
out
inc
jae
mov
shlb
das
in
aam
stos
xlat
xor
fcomps
imul
cli
daa
into
mov
jb,pn
xor
mov
mov
xor
clc
fsubrl
aad
sarl
das
sub
hlt
loopne
jl
mov
mov
cwtl
repz
out
sbb
or
cli
mov
lahf
outsl
ljmp
cs
cmp
jne
fstpl
add
jle
adc
adc
loopne
xor
xor
sub
push
cmc
dec
adc
push
mov
ja
adc
test
cli
fsubs
nop
inc
cmp
xlat
and
pop
cmp
out
jp
js
in
inc
push
lods
cmp
lock
mov
or
push
adc
leave
xor
cmp
sub
dec
rep
aaa
inc
popf
sub
mov
adc
outsb
out
outsb
cvtpi2ps
sahf
and
call
ss
lahf
push
lods
int
pop
cmpsl
cmp
dec
sahf
lds
jp
mov
fisttps
movsb
adcb
or
jp
xchg
nop
out
adc
lea
das
pop
shlb
jmp
in
rcrl
push
cli
add
jae
push
push
divl
dec
insb
mov
or
jae
xchg
lock
call
insl
cmc
sub
enter
jo
adc
movsb
aas
pop
aam
jecxz
adc
mov
pushf
mov
dec
into
imul
jge
mov
pop
dec
fs
jl
ret
loopne
loop
jno
or
sbb
mov
or
std
xchg
sahf
js
jmp
bound
loopne
lret
iret
sub
ja
sub
sub
mov
js
dec
jnp
jg
add
mov
jb
cmpsl
out
jns
pop
mov
dec
mov
dec
xor
out
xor
jg
xchg
cs
or
lret
xchg
movsl
mov
sub
cs
cs
and
push
or
xor
pushf
mov
add
sti
jle
sbb
out
clc
je
rcrb
cmp
out
mov
sbb
push
cs
adc
mov
cmp
or
shlb
or
ljmp
cmp
popa
cmp
push
mov
push
stc
movsl
ljmp
lret
mov
mov
iret
mov
fldl
xchg
xchg
inc
sub
sub
lahf
pop
add
lea
add
fwait
jl
sbb
mov
pop
xchg
dec
jecxz
xchg
inc
fst
or
mov
cmpsb
in
or
adc
push
in
xchg
xor
jg
xor
adc
jmp
jo
das
xchg
adc
sysret
js
adc
mov
stc
dec
stc
jns
mov
mov
int
aad
cmpsb
ljmp
mov
sarb
xchg
or
mov
adc
lret
adc
add
imul
lea
scas
cmp
mov
daa
ret
pop
in
push
mov
out
cmpsb
jae
les
cmp
sub
inc
and
xor
sahf
repz
cmc
pop
arpl
je
insb
and
or
and
mov
lea
adc
fs
and
mov
fwait
inc
add
jmp
sarb
ret
bound
push
fnsave
sub
cmp
or
rorl
mov
pop
cltd
rcrl
xlat
orb
daa
insl
pop
inc
leave
imul
mov
outsl
repz
or
sub
scas
xor
dec
jmp
icebp
std
xor
adc
cld
or
icebp
daa
sbb
cli
mov
mov
test
and
sub
push
outsb
xchg
xor
jge
scas
xor
jmp
fistl
subl
bound
rclb
mov
pop
leave
call
popf
call
jo
cmp
xchg
jno
scas
scas
cmp
add
bound
jle
arpl
cmp
pushf
add
sub
ds
outsl
add
push
push
or
or
xlat
bound
cltd
aam
sbb
or
or
arpl
fisubrs
xchg
sbb
jp
pop
pop
sbb
test
inc
dec
cmp
and
scas
mov
xchg
xchg
pop
mov
outsl
mov
or
pop
fimull
lds
inc
xchg
lock
jp
test
mov
pop
hlt
ja
mov
push
orl
mov
xorb
repnz
sub
sub
sub
dec
scas
daa
bound
int3
jno
xchg
aam
out
mov
jo
aad
jbe
xor
mov
dec
pushf
int
pop
bound
sub
nop
test
aad
lret
push
pop
and
jp
call
add
jmp
xchg
fstl
lods
int3
sbb
outsb
scas
dec
sbb
xchg
and
shrb
lret
add
out
push
fwait
push
sub
lods
daa
daa
lods
jl
mov
mov
gs
fsubl
movsl
test
jle
mov
clc
ja
mov
mov
mov
pop
lds
cmc
movq
xor
cmp
add
in
lds
xor
roll
inc
nop
xchg
addr16
pop
push
xor
sub
lds
rcrl
lea
push
in
popf
mov
loope
dec
rclb
pushf
add
pop
jl
setae
mov
outsb
inc
aam
roll
sub
insl
lcall
jb
fdivs
das
rcr
out
fiadds
rorb
das
sub
mov
and
aas
outsl
adc
arpl
push
sub
add
mov
pop
fidivs
mov
scas
loop
mov
in
out
fmull
cld
loop
jae
cmp
add
or
outsb
jno
sahf
sbb
pop
sbb
mov
jae
fwait
addr16
sbb
push
outsl
in
jne
lahf
sub
push
rcrl
inc
dec
cli
jno
dec
ftst
je
fwait
clc
shrb
xlat
fs
stos
mov
fwait
push
inc
repnz
pop
dec
jmp
sbb
test
fldl2t
stos
in
dec
push
jbe
add
enter
scas
mov
stos
lea
cwtl
sub
testl
adc
jmp
sub
cmp
add
lods
mov
dec
push
and
pop
fs
mov
int3
or
iret
iret
xchg
iret
sub
push
insl
aad
or
mov
jg
insb
mov
movsl
mov
sub
cs
popf
ds
imul
mov
incl
fimuls
mov
dec
aaa
data16
adc
and
test
ja
addr16
ret
mov
scas
and
outsb
pop
push
or
push
int
jbe
jmp
sti
mov
jnp
mov
fists
and
jae
jge
mov
call
mov
mov
cltd
ficomps
pop
int
stos
xor
mov
dec
negl
mov
scas
add
pusha
mov
stos
mov
jnp
adc
sub
inc
mov
xacquire
xor
add
inc
or
dec
in
cmp
push
fsubp
mov
sbb
inc
sbb
lods
test
mov
sahf
mov
sbb
push
pop
push
or
arpl
pusha
dec
into
xchg
lock
or
pop
adc
sbb
jne
les
push
xchg
sbb
pusha
and
repz
mov
call
sbb
imul
mov
daa
xchg
fs
movsl
fldenv
jmp
cltd
das
out
shrb
andb
mov
dec
hlt
sahf
push
xlat
ucomiss
cs
fstl
popa
aad
imul
or
in
pop
ja
jbe
mov
inc
jno
or
insl
cli
adc
cmp
push
test
fbstp
in
mov
movsb
je
pushf
fisttpl
es
sarb
pop
lods
inc
cmpsl
xlat
push
jecxz
add
lods
add
jbe
fld
and
sub
jecxz
movl
cmpl
fwait
push
or
jl
mov
dec
aam
pop
test
shlb
ja
jne
mov
aam
test
cmpsl
lret
neg
test
stos
outsl
xchg
mov
pop
xchg
in
inc
xchg
adc
cs
pop
or
jg
add
jmp
jo
into
push
xchg
hlt
adc
lock
negl
mov
sbb
test
out
andb
in
mov
rol
loop
jnp
sub
sarl
fcomip
movsb
rorl
add
jp
mov
sub
xchg
sub
int3
nop
daa
sub
jmp
cld
neg
js
mov
cmc
pusha
enter
hlt
sbb
sbb
scas
dec
movsl
int
cld
cld
jg
push
push
ret
sti
lcall
cmc
dec
mov
out
lods
mov
pop
aaa
daa
jno
adc
scas
jp
call
push
xchg
hlt
mov
cwtl
push
dec
shrb
mov
sub
fs
or
jbe
arpl
xchg
cmc
mov
jg
jmp
lcall
jns
sub
sbb
xor
dec
aad
lcall
or
cmp
out
int
mov
jl
in
dec
mov
ds
aaa
sub
divb
roll
out
xlat
insb
lret
and
mov
push
pop
jecxz
repz
inc
sbb
and
daa
out
insb
subl
jmp
add
daa
subb
mov
cld
pusha
les
gs
cli
mov
mov
ja
xlat
lock
mov
push
or
or
fnstcw
pop
xchg
xchg
test
push
imul
mov
push
repz
add
inc
push
movsb
loopne
inc
mov
sub
mov
rcr
insb
inc
sbb
mov
push
add
addb
icebp
xor
loope
pop
hlt
pop
dec
stos
out
add
ss
jae
or
mov
push
clc
into
mov
cmp
leave
pop
dec
xor
xorb
lahf
ret
stos
fldenv
add
nop
mov
add
sub
data16
xor
dec
push
mov
xor
push
sub
mov
mov
rclb
mov
cltd
loope
sub
andl
push
lret
or
and
rcrb
jle
sub
out
sbb
aas
out
ds
fdivr
rolb
je
xchg
aas
lods
mov
jg
xchg
add
flds
mov
mov
cmp
addr16
xchg
sbb
out
iret
hlt
adc
jl
pop
pop
mov
and
sarb
jo
jbe
lds
inc
push
out
sbb
fprem1
xchg
mov
clc
andl
je
idivl
sbb
fisttps
push
and
in
aad
gs
mov
dec
out
lock
cld
insl
lret
pop
sub
sahf
jb
out
insl
loop
aas
jne
cwtl
lods
sub
or
mov
and
negl
out
push
lods
mov
add
and
repnz
test
jmp
cmpsb
filds
xor
mov
cmp
gs
movsl
repnz
dec
popf
test
pop
xchg
lds
adc
into
push
and
pop
pusha
lahf
imul
fsubs
pop
leave
inc
scas
test
push
jecxz
inc
xor
in
xor
push
fldl
push
mov
dec
shr
bound
dec
push
shlb
xor
sbb
insb
iret
xchg
addr16
call
cmp
orb
enter
fmulp
sbb
and
mov
xchg
pop
out
cltd
or
pop
or
jnp
lods
inc
dec
push
dec
push
mov
les
ret
cwtl
mov
loop
imull
sub
ret
add
mov
mov
rcl
popa
inc
out
lea
or
sbb
and
imul
hlt
sbb
movsl
mov
xchg
mov
adc
sub
loope
imul
rcr
sbb
imul
jl
jle
movsb
mov
xor
mov
xchg
cld
mov
loop
jne
in
pop
mov
pop
out
out
pop
fs
xor
mov
insl
push
adc
insl
popf
test
lcall
push
jge
insb
jmp
cmpl
inc
cld
lock
mov
aad
mov
mov
mov
dec
jno
pop
fidivs
xor
popa
pop
out
push
sub
test
mov
add
dec
pop
pusha
test
mov
inc
or
flds
iret
mov
pop
pusha
jnp
roll
sbb
cmp
movsl
das
call
ret
ds
fisubl
sbb
mov
mov
mov
xor
adc
xchg
dec
les
push
adc
add
mov
outsl
sub
fs
xchg
lret
jmp
or
sub
scas
stos
rcll
lret
pushf
add
cltd
dec
outsb
outsl
inc
cmp
icebp
incl
sub
dec
xor
scas
cwtl
sahf
insb
pop
cmp
inc
clc
lods
cs
in
cmpsl
stc
push
mov
sub
popf
push
aad
fst
adc
cmc
xchg
dec
sbb
sub
pop
and
inc
hlt
pop
or
xchg
fcoml
std
out
dec
cmp
push
xchg
fucomp
sbb
test
adc
lods
push
popa
daa
pop
adc
inc
dec
adc
or
cmp
lock
mov
in
aam
in
inc
shrw
mov
fcomps
fwait
test
lods
insb
je
jp
pop
jle
mov
filds
jbe
rcr
les
jae
xor
and
inc
adc
push
mov
jnp
and
push
daa
inc
mov
jns
mov
or
fisubrl
dec
or
andb
and
mov
sub
rcll
popa
xor
ljmp
cmp
or
sahf
adc
aad
pop
lds
xor
in
xchg
je
insb
sbb
cltd
cmp
repz
arpl
or
push
xchg
cld
jecxz
jae
adc
sbb
sarl
lea
cli
adc
jb
mov
mov
push
jg
mov
mov
scas
push
push
cli
lcall
pop
xor
movsb
fiaddl
and
inc
icebp
sar
pop
inc
jbe
xor
dec
pop
push
cwtl
call
and
lea
loope
mov
add
sbb
pop
push
insl
dec
loop
dec
sbb
mov
ret
mov
adc
mov
cmovno
cwtl
xchg
lock
inc
xchg
les
lods
cmpsb
fimuls
jbe
mov
push
les
or
iret
cmp
into
mov
lods
inc
out
out
cmc
imul
xlat
cmp
adc
fnstcw
push
fs
popa
test
hlt
and
cmc
jp
cmp
jae
dec
sub
icebp
xor
cmpsl
or
xor
mov
stos
cwtl
lahf
negl
cmpsl
out
adc
adc
jae
add
outsb
jae
inc
and
mov
xor
cmp
xchg
or
push
in
sahf
pop
bound
push
fwait
push
mov
int
adc
aad
push
mov
out
push
cmp
pop
ret
sbb
loop
fnstenv
ds
mov
or
or
testl
xlat
xchg
scas
cwtl
dec
sbb
or
cmpsl
sub
add
xchg
ds
ljmp
fists
test
xchg
rcrl
jne
mov
insb
mov
movsb
adc
insl
xchg
jns
rorl
movsb
mov
push
out
mov
rcr
add
jns
pop
pop
mov
lcall
jno
push
cmc
hlt
cmc
adcl
sahf
jo
aaa
rorl
test
cmp
sub
mov
clc
lret
pop
clc
data16
aas
adc
mov
fstps
iret
pop
sbb
jp
insb
mov
stc
cmc
pop
mov
inc
repz
adc
push
pop
mov
cmpsl
fmull
sbb
xchg
test
xchg
xchg
xchg
pop
or
pop
lahf
jmp
pop
frstor
rolb
ret
xor
shll
addr16
jg
jbe
sub
dec
xor
and
es
fmulp
cmp
pop
pusha
fisubrl
jns
jns
jge
fstps
pop
push
cli
pusha
pop
xor
pop
int3
loope
test
mov
aad
aaa
and
popf
out
leave
adc
jmp
inc
in
mov
and
imul
sbb
mov
hlt
pop
pop
jecxz
mov
or
push
push
adc
ds
mov
les
out
mov
fimuls
cmp
xor
mov
jmp
pop
and
inc
jbe
mov
and
out
cld
jae
or
mov
mov
lds
ret
inc
xchg
pop
lret
add
or
sub
repz
jmp
int
cmp
sbb
dec
int
cmp
dec
pushf
insl
push
dec
lret
lds
loope
or
push
aam
pop
aad
pop
dec
clc
shl
xchg
stos
mov
fadds
mov
and
inc
add
mov
enter
bnd
bound
pop
leave
fcmovne
rorl
mov
jle
out
pop
xchg
mov
das
pop
sahf
dec
out
pop
in
insl
in
in
int
into
ret
insb
rcr
and
pop
in
pop
xchg
js
mov
fs
jmp
ja
jnp
gs
insl
jecxz
dec
jge
push
clc
push
fstl
mov
adc
mov
data16
sbb
xor
pop
jl
xchg
sub
je
jle
jle
repnz
js
cltd
addr16
mov
adc
sahf
cmp
inc
cmp
jo
adc
jge
mov
sbb
mov
aaa
fldt
mov
jmp
cltd
sub
addl
push
lods
repnz
mov
pop
nop
xchg
je
sub
add
dec
jp
adc
mov
jmp
push
mov
xchg
out
adc
sbb
or
pusha
xchg
xlat
xchg
outsb
cld
js
std
fiadds
mov
push
xchg
inc
in
mov
clc
fistps
jae
pop
xchg
mov
add
xor
jle
xchg
push
loop
mov
stos
xchg
jmp
inc
and
jns
fs
or
cmp
stc
adc
aas
dec
movsb
pop
dec
pushf
fistpll
mov
lret
mov
hlt
insb
xchg
test
jecxz
dec
cmp
xchg
in
es
mov
mov
sub
inc
sbbb
lcall
imul
out
sbb
xor
pmaxub
xchg
es
sub
lea
mov
popf
mov
sbb
inc
fwait
test
lret
xchg
lods
fs
mov
js
sahf
cwtl
out
cwtl
xchg
stos
in
sub
pop
add
xlat
pop
dec
push
mov
pop
dec
jmp
xorb
ss
fisubrl
push
cmp
xor
push
push
inc
xchg
call
adc
push
call
stos
fimuls
sti
in
mov
je
push
ficomps
add
repnz
xor
dec
bound
mov
and
rcll
jb
stos
test
cmp
mov
les
dec
aad
xor
push
loope
sub
xchg
push
arpl
mov
ret
jp
imul
jp
mov
imul
push
andl
dec
adc
xor
cmp
sbb
adc
rorb
icebp
daa
xchg
repnz
setne
outsl
dec
and
shll
dec
into
mov
test
rolb
dec
and
xor
ja
sbb
lock
sbb
mov
popa
shrl
or
mov
sahf
shl
idivl
in
sahf
add
or
ja
js
push
xchg
stc
dec
idivb
andb
jmp
cli
aad
sub
ds
xor
xchg
mov
sbb
ficompl
in
lret
mov
subb
aad
add
cmp
push
xchg
pop
pop
scas
insl
jb
in
stos
cld
or
mov
fcoml
add
mov
mov
stos
shr
and
xlat
adc
cmc
mov
mov
mov
stos
and
sub
arpl
out
jne
adc
hlt
sub
xchg
sbb
aas
dec
mov
fwait
mov
std
jae
sub
mov
lock
and
mov
pushf
sbb
adc
pusha
cmpl
cmp
jbe
cmp
cmp
shl
filds
push
jg
mov
cs
movsl
mov
xorl
ja
mov
sbb
and
cld
or
cltd
imul
fs
sbb
pushf
and
mov
fwait
add
lods
imul
das
jp
add
fdivl
mov
pop
sub
xor
sbb
inc
dec
sarb
push
jae
sub
enter
ja
addr16
out
push
loopne
xchg
and
xchg
add
cltd
sbb
sub
push
ljmp
and
addr16
or
scas
fstl
mov
repz
add
mov
movsl
filds
cld
jp
jb
ffree
mov
cmp
adc
aam
nop
out
pop
scas
jmp
nop
aad
add
cmp
xchg
jmp
rclb
xchg
cmp
lret
rcll
mov
xchg
adc
jne
push
fmulp
or
jecxz
js
xor
fbstp
fstpt
add
scas
int3
mov
or
nop
pop
dec
pop
stos
mov
pop
mov
test
dec
or
scas
or
xchg
addl
enter
add
hlt
pop
push
subb
sub
jl
out
jle
add
insb
inc
decl
mov
repz
in
mov
dec
xor
aam
adc
ret
mov
dec
pusha
leave
scas
out
movsb
dec
loope
leave
hlt
pop
pop
inc
mov
push
push
pop
dec
cmpsb
scas
add
iret
out
jle
shlb
inc
inc
insl
orb
shll
fcomps
movsl
call
jge
mov
loopne
push
insb
sbb
lret
add
fbld
and
or
add
xorl
dec
enter
sar
mov
clc
test
sbb
push
out
cli
or
int
mov
xor
pop
rol
ret
jno
ret
out
shll
mov
inc
jne
and
cmp
ja
adc
js
or
jmp
or
aas
stos
xchg
cmc
std
dec
movsb
and
sbb
pushf
cmp
ret
sub
or
in
test
pusha
and
pop
inc
sbb
lock
inc
sbb
dec
fsts
push
fwait
or
dec
jb
arpl
loope
cmpsb
dec
repnz
daa
scas
xor
and
mov
aad
ret
filds
call
scas
xor
lahf
lahf
add
xchg
loopne
ljmp
fs
pop
je
inc
fidivl
lahf
and
mov
test
push
setnp
inc
stos
aas
or
mov
pop
xor
pop
inc
sub
loop
push
scas
fildll
stos
mov
in
pop
loop
xchg
mov
js
cmpb
aad
popf
popf
movsl
js
and
adc
sbb
and
out
xchg
scas
mov
shrb
jge
in
out
pop
imul
stos
pop
push
mov
movsb
sub
lcall
ds
enter
pop
lods
movsl
jmp
sbb
scas
cld
scas
mov
pop
aas
xchg
mov
sti
mov
in
or
imul
roll
add
loope
push
leave
xlat
jne
adc
push
test
sub
and
scas
inc
nop
jle
lret
aad
cltd
jecxz
mov
pop
xchg
out
dec
xor
mov
call
mov
lods
pop
or
jecxz
xlat
in
int3
cwtl
imul
fadds
cwtl
lods
in
inc
xchg
test
or
stos
ljmp
or
or
cs
inc
insb
xchg
daa
adc
mov
cmc
pop
push
popf
cmp
dec
push
sti
pop
add
add
lock
cmpsl
sub
push
andps
dec
ret
in
ljmp
mov
ja
cmp
lods
shll
cmp
inc
sti
mov
aam
pop
lret
adc
xor
mov
outsb
popa
jp
sub
dec
mov
push
loop
ja
lea
or
ljmp
fnstsw
cmp
mov
les
mov
pop
xor
push
sub
xor
adc
cmpsb
aas
xor
mov
jge
test
ret
in
out
xor
or
add
inc
in
cmpsl
xchg
popf
mov
jmp
pop
inc
push
in
sti
je
mov
dec
mov
dec
mov
or
pop
mov
mov
adc
and
push
adc
xchg
push
jbe
pop
jle
les
mov
push
lds
lcall
or
and
or
sub
stos
sbbb
aad
mov
push
push
enter
mov
push
js
subl
sti
add
cmp
xchg
fiadds
je
xchg
mov
sub
jge
xor
das
in
cmpsl
mov
adc
jno
cli
inc
iret
inc
andb
movsb
xchg
fsubrs
ds
xor
xor
shr
mov
or
push
in
jns
scas
scas
and
add
cld
xor
repnz
mov
xchg
xchg
shlb
jnp
xchg
hlt
pop
mov
jecxz
flds
popa
xchg
pop
push
inc
repz
gs
mov
sarl
inc
inc
ss
xor
jns
enter
dec
sub
test
pop
jmp
aaa
insb
mulb
xchg
mov
addr16
push
and
xchg
adc
cwtl
jle
xchg
xor
jo
cmpb
jbe
es
fs
pop
mov
mov
mov
fisubs
aam
test
pop
dec
cs
dec
and
dec
hlt
xchg
dec
pop
in
fildl
sbb
paddsb
dec
enter
xchg
jb
mov
shlb
mov
int3
mov
pop
mov
dec
and
mov
or
cmp
aad
stc
out
mov
xlat
int
fcmovbe
adc
or
cmp
jp
mov
or
shlb
ja
xor
ficoml
outsb
mov
mov
cmp
fistl
sbb
aam
cltd
out
mov
roll
or
test
mov
jl
push
loopne
and
popf
jb
fiadds
jge
jae
xchg
mov
call
dec
shll
push
push
push
dec
push
shlb
and
jae
push
scas
adc
jle
push
cli
xlat
lds
pop
jecxz
in
stos
cs
pop
ficoms
sub
mov
mov
test
jge
insb
sbb
and
adcl
xchg
jg
inc
cmp
fstpl
aas
dec
sbb
jge
cwtl
or
xor
out
jg
inc
jmp
jns
push
inc
adc
and
mov
popf
push
mov
faddl
mov
push
push
xchg
std
cld
jecxz
out
clc
jne
lods
mov
sub
out
adc
or
push
inc
push
sbb
inc
adc
iret
mov
adc
in
ret
std
add
stos
data16
sti
ds
mov
cltd
mov
push
movsl
inc
pop
xchg
adc
cld
jbe
sbb
and
in
mov
jb
sub
adcl
imul
sbb
arpl
orb
dec
iret
xchg
popa
pop
lahf
inc
mov
nop
je
inc
inc
jecxz
xchg
out
push
mov
lret
arpl
lcall
scas
idivb
aad
fnstsw
cmp
mov
cwtl
ja
sbb
cwtl
mov
pop
inc
scas
sub
loopne
test
or
mov
cld
add
cmp
pop
scas
loope
cmc
sbb
mov
insl
outsb
loopne
adc
adc
shll
mov
push
pusha
out
call
inc
dec
mov
imul
push
aas
adc
xor
rcrb
add
mov
mov
hlt
push
mov
dec
ljmp
andl
jo
jmp
xor
std
mov
rclb
mov
std
pop
sahf
cmp
xchg
xchg
pushf
jns
hlt
or
mov
lock
sbb
into
add
repz
stc
jae
jns
je
push
inc
pop
sub
xchg
cmp
clc
fs
inc
cmp
mov
inc
fcmovbe
loop
xor
es
repnz
push
ss
push
xlat
or
pop
in
in
jns
lods
je
or
stos
adc
push
cs
sub
movsb
mov
xor
pop
inc
inc
lcall
xor
sbb
pop
into
pop
psubsb
aad
dec
lods
mov
push
inc
shrb
xchg
imul
popf
leave
lret
pop
test
xchg
xlat
dec
xchg
mov
sub
jo
bound
inc
and
cmp
add
je
sub
ljmpw
mov
push
add
jmp
xchg
mov
xor
lods
lahf
hlt
fists
push
mov
push
scas
fsub
ffree
clc
arpl
add
leave
xor
nop
shll
xchg
inc
and
test
hlt
push
pop
jne
xor
fisubrs
cmp
pop
lret
insb
shlb
jecxz
fstl
pop
jno
push
xchg
sti
shlb
jnp
scas
movsb
sbb
inc
dec
pop
xlat
mov
lahf
xor
sbb
cmp
fsubrl
adc
ret
stos
dec
lcall
xor
and
idivb
pop
pop
shl
and
sub
push
mov
mov
pusha
in
loope
sbbb
jo
cmp
xor
xor
mov
mov
mov
ja
sbb
dec
inc
or
jp
lahf
push
fadd
ljmp
subb
fists
mov
sub
jae
lret
repz
add
div
add
rcll
pop
in
das
inc
cmc
cmp
sub
mov
ret
fstps
das
lods
push
mov
fs
lret
popa
push
nop
scas
cmpsb
ja
shrl
jne
mov
stos
dec
cmp
sbb
inc
dec
mov
cmc
push
das
or
jne
jle
in
adc
push
test
xor
sbb
mov
mov
add
mov
mov
xor
or
mov
lahf
mov
sarl
xchg
sbb
inc
dec
imul
fmuls
negb
shr
mov
pusha
lods
and
add
push
mov
stos
scas
es
or
cmp
mov
ljmp
mov
stc
dec
scas
jl
sub
xchg
mov
es
cmp
xchg
and
jge
xor
or
icebp
lcall
xchg
testl
sub
call
jae
shll
imul
cmc
out
test
fnstsw
mov
sarl
sti
fisubl
xor
ret
mov
iret
xchg
subl
cmp
fdiv
push
clc
xchg
dec
shl
call
mov
xchg
jle
mov
fstl
cmc
cmpsl
in
xor
or
or
jp
push
mov
std
adc
mov
jge
pop
into
lahf
sar
das
push
mov
or
pop
call
jb
loope
stc
and
adc
mov
jne
loopne
sub
pop
lds
out
ljmp
sub
push
pop
dec
sbb
rcrl
mov
mov
xchg
hlt
and
ljmp
push
mov
gs
filds
push
mov
daa
push
movsb
fcmovnbe
sub
int
ss
xlat
inc
nop
cmp
cmp
cmp
cmp
dec
js
scas
jae
pusha
adc
test
and
dec
adc
iret
rcr
repnz
lret
fistpl
rcll
fldl
or
dec
test
rcll
aam
or
je
cli
jae
push
xchg
sub
pop
dec
es
mov
in
loope
pop
cwtl
push
xchg
dec
call
mov
dec
pushf
in
push
push
push
adc
sti
inc
lret
sbb
push
sub
jns
mov
fwait
xchg
sbb
push
inc
push
xor
push
cmp
mov
jp
ret
movsb
fcomip
or
movsl
sub
push
into
mov
sub
ja
loope
incb
cmpsb
xor
loope
int
add
mov
adc
mov
test
pop
popa
mov
pusha
stos
add
add
ljmp
jg
dec
or
mov
repnz
mov
add
and
pop
scas
mov
movsl
sub
jno,pt
sahf
xchg
popf
and
stc
adc
push
aas
jmp
jp
std
les
inc
daa
mov
inc
sub
rcl
pushf
in
les
pop
pop
sbb
mov
adc
mov
push
sub
roll
iret
lods
test
icebp
push
aaa
mov
in
ret
lods
push
pop
mov
push
lcall
repnz
fdivs
xor
pop
push
pushf
add
jle
jg
sub
incl
dec
iret
adc
cmpsl
xor
ja
jg
std
xchg
adc
mov
cmp
je
xchg
mov
mov
das
aaa
mov
dec
jne
clc
jl
cwtl
es
aam
arpl
lahf
dec
jle
stos
pop
movsb
inc
nop
jbe
dec
pop
push
fidivrl
lock
sarl
mov
lret
push
inc
jle
pop
mov
cmp
rclb
pop
das
push
or
shrb
xor
iret
xchg
out
inc
xor
push
fisubs
scas
sub
push
sar
jp
stc
test
test
mov
cmp
outsl
pop
sub
sbb
mov
xchg
and
add
xchg
or
mov
bound
cmc
sbb
jo
mov
bound
js
test
scas
fdivrs
mov
test
or
loopne
cmp
and
jnp
call
jg
lock
aaa
sbb
sbb
ljmp
mov
fwait
in
xor
cltd
cmp
pop
pop
push
xchg
lcall
test
cld
mov
sarb
ret
adc
cld
dec
imul
loope
or
jnp
movsl
out
inc
jecxz
mov
dec
xchg
dec
push
xchg
cmp
jmp
leave
add
dec
outsl
fbld
xor
push
lret
cmp
push
bnd
adc
pushf
xchg
rcl
xor
mov
mov
sub
pop
sahf
xchg
dec
jbe
cmc
add
mov
xor
testb
fists
repz
inc
jmp
cmpsb
or
icebp
fimuls
inc
in
loope
mov
loop
jecxz
xchg
mov
mov
lods
push
icebp
fwait
and
mov
loope
aad
loop
pop
shl
insb
int3
sub
mov
xor
push
push
mov
mov
bound
loope
xchg
push
xor
lret
and
cmp
push
jns
dec
adc
sahf
das
gs
sbb
ficompl
lods
fmulp
fimuls
cwtl
mov
or
adc
daa
stos
lods
out
paddd
sbb
cmove
mov
mov
in
push
fcoml
jge
das
xlat
adc
mov
jne
int
or
loope
rolb
mov
mov
fwait
sub
cld
subb
push
andl
cmp
and
cmpsb
mov
xchg
gs
mov
jg
adc
mov
daa
icebp
daa
out
sti
bound
fdivl
mov
and
adc
fwait
js
dec
inc
push
ja
mov
leave
sub
xor
adc
jns
ljmp
js
imulb
arpl
jp
inc
push
mov
popf
push
mov
sti
mov
sbb
pop
push
add
jbe
pop
lcall
mov
xor
add
add
shr
out
xchg
fneni(8087
fbstp
nop
adc
das
mov
pop
mov
cmp
and
xchg
movsb
cmpsb
xchg
adc
pop
mov
aas
ja
repz
leave
pop
popf
dec
call
inc
aaa
or
inc
es
dec
jge
fnstcw
fsubrl
jle
jb
mov
cmp
sub
cmpsl
test
mov
stos
jp
sub
out
repnz
dec
lahf
lock
ret
xlat
adc
ja
and
inc
xchg
daa
std
rcrl
mov
jge
jbe
cmp
and
mov
mov
adc
jecxz
movsb
cld
femms
pop
dec
jne
popa
dec
xor
addb
push
inc
mov
arpl
lea
sub
imull
or
xchg
push
in
daa
pop
push
or
popa
and
and
dec
loop
les
shl
scas
mov
sub
sti
outsl
pop
adc
fsubrs
out
dec
andl
fildll
jno
mov
cs
repz
arpl
add
dec
push
jae
add
add
pop
push
testb
cwtl
ja
lods
aad
or
jg
daa
inc
stc
les
add
test
in
jo
ja
sub
pop
mov
push
pop
pop
dec
sbb
xchg
xchg
sub
sbb
inc
insb
push
mov
add
pop
mov
test
imul
push
int3
sbb
pop
dec
sub
das
scas
pop
jge
enter
push
push
adc
push
out
add
cmpsb
mov
dec
jns
lret
xlat
ror
clc
in
or
and
imul
rol
sbb
mov
cmpsl
jp
push
fnstcw
xchg
or
xor
xchg
in
xchg
xchg
add
pop
push
and
popf
add
in
xchg
leave
pusha
test
rol
sbb
test
mov
dec
add
mov
clc
jle
mov
pop
dec
push
addr16
cwtl
push
sbb
aam
pop
cld
xlat
cmp
jmp
xor
mov
imull
fldt
xchg
ds
sbb
pop
loop
movsb
cmp
jbe
push
imul
in
dec
cltd
daa
lods
mov
jbe
popa
sub
fldpi
dec
or
in
rcrl
fcoms
mov
out
stos
in
mov
xchg
jno
cld
mov
push
scas
adc
test
loop
mov
js
test
andl
aad
shrl
xchg
xchg
inc
xchg
inc
xor
imul
sub
fs
cmpb
jns
fcmove
and
jge
mov
je
lahf
xchg
pushf
inc
and
stc
and
push
mov
iret
imul
adc
fwait
ss
rolb
pop
push
pop
popa
ja
push
stc
pop
mov
les
add
mov
sti
jns
out
add
icebp
pop
pop
pop
mov
push
jp
cld
fisttpl
movsl
and
add
lret
inc
addr16
sbb
pop
pop
lock
aad
or
sbb
outsb
sbb
in
push
adc
push
sub
addr16
mov
mov
inc
fisttpll
pop
out
leavew
loopne
mov
leave
lea
mov
fisttpl
int3
or
mov
sbb
xchg
add
mov
mov
clc
pop
mov
hlt
repz
int3
pusha
sbb
mov
stos
or
cmc
xor
sub
lds
xchg
sub
ljmp
jbe
in
in
outsb
adc
or
std
xchg
adc
push
pop
in
xchg
fisubrl
cmp
mov
adc
sbb
test
dec
icebp
popf
cmp
popf
iret
and
call
test
imull
aas
xor
add
mov
mov
outsb
pop
test
shlb
mov
lahf
sbb
push
cltd
xchg
loop
int
jecxz
xor
inc
mov
xor
jmp
lods
push
jl
inc
idivl
dec
loope
and
push
cmpsb
outsl
add
das
jno
fcoms
pop
dec
sub
test
adc
push
out
in
mov
shrb
jnp
andl
insl
pushl
ds
shlb
popf
pop
xchg
dec
sbb
imul
pop
push
xchg
movsl
sahf
dec
add
fisubrs
add
mov
scas
mov
adc
cmpsb
imul
pop
aad
xchg
popf
in
into
in
inc
mov
pop
rcrb
sub
inc
cmpsl
daa
aad
and
test
pop
jl
jbe
mov
jge
scas
push
sub
xchg
fstl
scas
in
and
cmp
and
call
lods
sti
mov
movsb
arpl
push
insl
pop
ja
mov
call
push
scas
xor
and
add
mov
mov
push
test
pop
and
mov
ret
fsubrp
cwtl
jmp
imul
add
xlat
inc
lcall
dec
mov
fisubrl
sbb
lods
daa
stos
mov
out
rclb
and
fdecstp
pushf
lahf
data16
pop
test
lret
sub
pop
adcl
imul
sti
jb
insl
shll
jo
popa
int3
bound
pop
jo
repnz
into
pusha
push
adc
int3
jmp
movsb
cmp
mov
lods
pusha
ret
jmp
loope
push
xchg
das
lcall
pop
movsb
lret
int3
inc
loopne
aaa
mov
std
testl
adc
mov
out
xor
jecxz
jmp
repz
xchg
and
xor
sahf
fiadds
mov
sbb
orb
xor
mov
sti
inc
push
pop
movsb
cmp
aaa
fwait
and
pushf
sub
ljmp
mov
pop
cmp
inc
fstp
pop
xor
ds
jecxz
scas
mov
or
in
leave
mov
and
ss
mov
dec
push
in
sbb
mov
lcall
sub
sti
inc
dec
xchg
mov
ss
xchg
out
xorl
mov
and
fs
xor
iret
lock
out
out
pop
mov
sbb
cmp
adc
push
into
adc
push
inc
push
or
mov
add
mov
aaa
mov
iret
idivl
movsb
cmpsl
jmp
or
dec
add
sti
pop
cmp
mov
test
xchg
mov
cli
xchg
ds
sahf
call
jb
add
dec
rorl
lcall
test
xor
fbld
loop
push
inc
push
clc
fcomip
lds
mov
inc
cli
lds
daa
pop
out
and
test
orb
divl
popa
or
pop
test
nop
adc
cli
int
sub
xchg
and
xchg
stos
dec
lcall
test
or
jo
sbb
mov
inc
mov
test
push
and
adcb
int3
adc
mov
add
push
sub
sub
xchg
fidivl
mov
imul
int3
dec
lds
out
xor
arpl
test
pop
sbb
mov
scas
jmp
les
aaa
lcall
jl
jo
dec
add
ret
icebp
inc
testb
push
arpl
cmpsb
aam
or
jbe
test
and
sbb
cs
and
sub
mov
icebp
push
push
add
int
mov
ret
push
push
ljmp
movsl
xor
ljmp
xor
jp
pop
movsb
fwait
ljmp
jge
popa
xchg
cmpsl
arpl
ljmp
jg
add
in
lret
sub
lret
hlt
push
mov
mov
or
mov
add
sub
push
shll
cld
je
lret
and
std
lea
stos
adc
sbb
add
adc
xchg
xchg
lock
or
pop
mov
dec
vmovdqa
xor
and
mov
xchg
push
jbe
into
aad
mov
cmp
lret
push
ror
cmpsl
sbbb
fstpl
out
shll
test
cmp
test
mov
jge
sti
mov
lsl
mov
mov
das
cmp
add
lock
inc
push
lods
add
sub
push
jb
insb
dec
lds
rclb
jg
aad
xchg
and
jbe
jle
mov
add
and
std
add
loope
aas
inc
add
mov
sbb
notl
jl
into
mov
sahf
mov
adc
sahf
mov
xorl
cmpsb
xchg
xchg
lea
mov
lock
test
popf
les
inc
das
xchg
lea
sarl
sub
sbb
sbb
repz
sti
js
imul
add
push
sahf
ss
sbb
push
cmpsb
mov
hlt
sti
cmp
cmp
hlt
xchg
adc
mov
into
dec
arpl
jmp
xchg
adc
stos
in
leave
dec
mov
or
into
scas
addl
jne
arpl
repnz
inc
mov
lret
imul
push
testl
test
lock
inc
ret
mov
test
inc
movsb
xchg
pop
xchg
jle
sub
lea
mov
mov
or
int
adc
push
or
lahf
into
ret
adc
sub
push
sub
push
inc
mov
mov
pop
push
pop
iret
daa
imul
mov
mov
stos
in
xor
cmp
or
cmp
mov
jae
dec
clc
cli
xchg
movsl
mov
mov
sbb
mov
mov
push
mov
jge
test
xor
sbb
lock
mov
and
jecxz
into
pop
cmp
jg
stos
and
outsb
cmp
aad
pop
dec
mov
sbb
mov
or
ret
lods
push
dec
and
lock
leave
leave
rorb
and
lahf
lahf
inc
xchg
enter
notb
in
pop
ds
and
int
stos
fnstcw
pushf
fisttps
sub
dec
jne
fsubrs
jo
mov
sahf
ja
imul
cmpsb
inc
roll
fstpl
orl
clc
sahf
xchg
cmp
jge
jbe
xchg
adc
and
test
je
adc
pop
and
fdivs
lret
ss
push
test
xor
inc
rorb
fnstenv
pusha
sbb
pop
stos
cmpsl
subl
jg
xchg
icebp
std
xor
inc
jmp
push
addr16
xor
mov
lock
lret
and
or
push
pop
faddl
dec
pop
pop
mov
and
into
sbb
adc
stos
mov
push
mov
fld
rorb
iret
les
mov
ljmp
cmp
out
add
cmp
jne
scas
sbb
hlt
jo
leave
cmpsb
adc
mov
pop
out
stos
and
es
in
mov
pushw
sub
outsb
inc
das
mov
pop
cmp
mov
mov
pop
hlt
cmp
adc
dec
cmc
jo
push
mov
push
mov
inc
mov
sub
aas
rol
sub
mov
jb
and
sbb
loope
into
inc
add
data16
ss
in
repnz
div
adc
mov
mov
int
call
mov
fxch
out
in
jg
or
idivl
jo
movsl
mov
pop
dec
push
cld
and
fs
mov
clc
pop
ret
cmpsb
fimuls
xor
aad
sbb
mov
jb
mov
xchg
adc
les
mov
jmp
sbb
dec
es
dec
fnsave
mov
add
mov
xchg
jp
pop
push
mov
ja
sbb
or
test
cld
ds
jp
dec
adc
mov
push
out
outsb
inc
cmp
rcll
std
int3
and
lret
adc
pop
es
into
xorb
sub
xchg
jbe
adc
out
popf
in
push
sbb
subl
push
mov
mov
adc
pop
sub
cmp
mov
inc
xor
push
fisttpll
mov
xor
je
sub
fists
add
in
jb
cli
jo
jno
lea
push
push
stos
bound
push
sti
jle
xor
shlb
pop
mov
loope
ret
int
pop
or
fucom
lret
jns
loop
add
cmp
loop
mov
sub
push
int3
push
fsubr
pusha
jmp
dec
pushf
fbstp
mov
push
or
push
pop
adc
into
mov
xchg
lret
stos
xor
xor
scas
icebp
lret
loope
mov
out
pop
in
test
loop
jo
push
ficoms
cmpsb
popa
std
clc
clc
mov
inc
gs
sbb
out
mov
addr16
leave
xchg
int
jo
jmp
mov
push
push
xchg
repnz
dec
xor
cmc
mov
mov
ss
inc
shl
leave
lods
jle
rcrb
or
arpl
jecxz
aas
mov
sbb
sbb
ljmp
sub
aas
out
jg
mov
clc
aas
mov
arpl
lret
sbb
jl
mov
out
mov
push
cmpsb
add
mov
enter
ret
cwtl
mov
rorl
rcrl
data16
lahf
outsl
enter
dec
inc
ss
jo
inc
ret
jb
cmc
outsb
aaa
stos
xor
pop
roll
int3
pop
outsb
pop
push
clc
cmpsl
fisubs
xchg
addl
subl
into
inc
lret
in
mov
xchg
adc
loop
mov
movsl
add
cli
outsb
insb
hlt
dec
xor
push
jo
cli
pop
lea
and
sbb
or
popa
and
push
mov
mov
pop
mov
sbb
xor
inc
mov
or
jmp
adc
lds
je
imul
xchg
inc
repz
fmull
pop
fwait
cmc
jl
test
and
and
cmp
xchg
sub
pop
sahf
mov
mov
lret
inc
push
mov
out
out
cmc
or
rep
xchg
sub
mov
mov
mov
inc
pop
leave
mov
mov
inc
add
pop
repnz
xchg
pop
sbb
pop
jecxz
xor
jbe
and
sbb
xor
gs
clc
outsb
pushf
xchg
rorl
popf
lea
ja
jp
xchg
lods
or
aas
cltd
jg
jno
scas
push
mov
adc
xchg
int
sub
adc
psrld
scas
test
xchg
lret
out
sbb
imul
cwtl
inc
cmpsb
cmp
ljmp
dec
popa
xchg
push
xchg
cli
push
pop
adc
cmp
add
push
jle
push
scas
xchg
add
sbb
in
cmpsl
xlat
pop
jecxz
ja
in
push
jae
loop
mov
mov
ds
mov
xchg
or
and
clc
jge
gs
mov
push
repnz
in
ja
jmp
and
and
fisttpl
mov
xchg
imul
sbb
sbb
push
outsb
push
hlt
mov
cwtl
push
lret
into
test
insl
mov
cli
and
ss
push
fldl
mov
pop
push
rdpmc
repz
xor
or
int3
jae
sub
add
sti
lods
sarb
sbb
cmc
push
in
mov
add
aam
insl
scas
xchg
push
jecxz
imul
jmp
mov
xchg
mov
xchg
rcr
inc
push
fs
out
mov
imul
push
sbb
dec
and
das
adc
inc
jg
nop
or
add
fidivl
mov
ret
pop
insb
mov
inc
jp
packuswb
imul
jmp
fistpll
cs
dec
xchg
cmp
lods
sub
jno
fmul
pop
pop
and
sub
pop
and
addr16
push
mov
cmpsb
sbb
jmp
push
test
mov
xchg
push
sbb
pop
ret
rdmsr
xor
pop
dec
mov
call
and
push
dec
push
adcb
inc
adc
lcall
adc
ja
cltd
out
adcl
sbb
xlat
jge
pop
bound
add
xchg
daa
icebp
sbb
mov
iret
iret
jecxz
push
nop
and
ret
fmulp
jecxz
ljmp
push
movsb
add
outsb
daa
jecxz
adc
test
pop
inc
push
jl
sar
repz
adc
mov
pop
fdivp
outsl
orb
jmp
call
lods
sbb
scas
mov
mov
add
xor
pushf
push
js
add
in
mov
outsl
pop
inc
loopne
pop
dec
push
mov
insb
lea
or
int3
mov
sahf
pop
mov
jl
fwait
in
xchg
lahf
inc
add
add
jo
pop
ja
data16
fwait
cmp
mov
fldt
fsub
sbb
mov
outsl
imul
shl
push
jbe
mov
movsb
rcll
cmpsl
pop
lods
sbb
sub
dec
repz
sbb
mov
out
scas
test
lcall
loope
repz
fldt
stos
dec
mov
enter
popf
pop
inc
dec
mov
dec
inc
gs
pop
test
or
mov
mov
push
xchg
mov
lds
sub
mov
xor
sub
scas
ret
sub
xchg
and
mov
add
notl
inc
out
imul
lret
push
ret
inc
ret
outsb
int3
gs
stos
mov
add
add
popf
jae
mov
add
mov
mov
loopne
gs
xor
mov
and
mov
pop
and
ljmp
popa
out
insl
push
mov
pop
icebp
movsl
enter
rcl
pop
add
xchg
pop
mov
sub
jg
xchg
push
mov
pop
sub
push
mov
popf
dec
sub
hlt
pusha
add
in
mov
cmp
sbb
push
jle
adc
hlt
aam
cmp
loope
add
mov
lods
movsl
shll
imul
mov
lret
call
fstpt
lods
mov
xor
adc
mov
jle
aas
in
dec
test
push
imul
add
mov
xchg
out
and
pop
cmp
pop
cmpl
daa
sub
popf
cs
test
fdivrl
sar
addr16
cmp
jne
sbb
push
shlb
add
cmpsl
pop
test
lret
rclb
adc
xchg
xlat
push
mov
outsb
inc
inc
and
testl
aad
xchg
testb
fsubrp
mov
mov
or
nop
imulb
pop
mov
or
xlat
call
mov
mov
repz
test
sbb
push
sbb
lcall
sub
out
testb
fucom
xchg
mov
mov
ja
sub
and
popa
adc
xchg
in
cltd
mov
mov
jle
addr16
cwtl
arpl
mov
and
adc
sbb
xchg
pop
repnz
sbb
inc
pop
mov
in
xchg
pusha
lock
rcrb
xor
int3
push
jno
and
cmpsl
cmpsb
test
and
mov
loop
push
mov
push
test
xor
push
add
jp
mov
sbb
jb
xchg
movl
fwait
jae
out
fmull
stos
jae
fcomps
rclb
and
sti
or
mov
jp
mov
dec
xchg
daa
cmp
scas
test
jmp
imull
fisttps
cmpsl
in
adc
in
rorl
adc
in
orl
push
ret
subb
or
lods
lods
cli
das
push
and
xchg
lret
inc
pop
outsb
sbb
push
lods
addr16
inc
das
add
adc
mov
push
sar
jb
sub
ja
fcmovbe
in
add
lcall
mov
stos
mov
fbld
or
xor
push
out
imul
jnp
movsb
cmp
xor
hlt
xchg
cmpb
icebp
and
push
jbe
fs
add
mov
cmp
or
jne
jecxz
jno
adc
and
lods
lods
mov
push
pop
xchg
sbb
xchg
adc
dec
xchg
cmc
jnp
xor
dec
inc
sbb
dec
mov
dec
fsubl
dec
outsb
out
imul
roll
jecxz
cmpsl
jae
cmp
mov
scas
jo
faddl
pop
ja
xchg
hlt
in
jae
out
push
mov
push
aaa
ss
pusha
inc
fsts
inc
and
ftst
pop
mov
adc
add
sbb
lock
xchg
lahf
clc
shr
dec
sbb
movsl
call
repnz
xchg
xchg
ss
mov
jns
dec
pop
out
mov
mov
sbb
negl
test
pop
pop
push
inc
jb
pushf
jge
repz
dec
dec
jae
xor
sbb
push
repz
xlat
xor
inc
aam
sub
jo
hlt
jmp
imul
pop
imul
cmpsb
lahf
out
imul
dec
in
movsb
jns
jle
jecxz
ljmp
push
loope
mov
xchg
js
cmpsl
inc
xor
mov
cmpsl
xor
jae
sub
sub
cmc
lea
les
dec
dec
test
outsb
jg
div
stc
fst
jb
jp
push
dec
sub
lock
mov
rol
push
gs
jbe
inc
dec
outsb
sbb
push
cmpsb
and
testb
test
les
subl
lock
jle
aas
mov
inc
loopne
out
shl
xor
xor
notl
xor
inc
ficoml
out
sub
add
xchg
std
xor
dec
xchg
jl
pop
xchg
repnz
and
shlb
push
subb
mov
mov
imul
nop
lods
cmp
sbb
inc
repz
iret
sbb
iret
or
cld
or
inc
hlt
shlb
jecxz
mov
lahf
sbb
notb
jl
push
and
ljmp
sub
push
insb
cmp
mov
shll
cmp
mov
fxch
in
mov
sbb
xchg
xchg
push
dec
pop
mov
mov
xchg
adc
push
in
sbb
mov
mov
push
fdivrp
nop
or
mov
adc
daa
mov
test
mov
sbb
mov
add
cwtl
decl
cltd
jge
ss
push
negl
fstps
jmp
cmpps
loop
dec
int3
outsb
sahf
adc
pop
in
aaa
xchg
comiss
jbe
xor
cmp
sarb
lock
sub
jmp
push
inc
add
jge
out
cmp
je
push
fnstcw
sub
or
test
mov
push
add
popa
sub
clc
sti
cltd
shlb
fwait
xchg
ds
je
fwait
mov
inc
std
sub
mov
jmp
xchg
jbe
out
pusha
test
aad
mov
jnp
pop
dec
arpl
lret
jns
pop
and
stos
sub
dec
mov
imul
scas
jae
mov
jge
adc
addr16
sbb
xchg
sub
loope
sub
enter
fcmovnb
push
mov
xor
mov
pop
mov
shll
lcall
pop
push
gs
hlt
mov
cmp
inc
imul
pop
ds
fs
popa
addb
dec
movsl
lahf
into
push
jle
jg
pushf
les
into
popa
lock
inc
mov
cmpsb
das
popf
repnz
insb
push
add
cmpsb
loop
push
add
pop
fadds
lcall
popf
movsl
add
mov
xlat
jl
cmpsb
stc
pop
into
std
popf
jo
mov
push
push
pop
inc
dec
dec
lds
cmp
sub
outsl
inc
repz
adc
lods
inc
cltd
cwtl
test
inc
cmpsb
stos
outsl
inc
gs
mov
xor
out
push
push
shrb
fildl
mov
pop
inc
pop
div
mov
lea
sbb
stc
jmp
data16
sti
movsl
js
add
sub
inc
ds
add
cltd
sub
repz
and
sbb
and
ret
les
fldenv
lods
or
aaa
add
push
mov
push
dec
mov
xchg
jmp
call
lods
mov
aad
add
mov
mov
cmpsb
add
lock
pop
outsl
inc
nop
lret
out
push
adc
int
clc
leave
ja
xchg
test
jb
inc
dec
xor
xor
xchg
dec
and
scas
notb
stos
push
outsl
mov
mov
sub
xor
cmp
jle
fisttpl
mov
leave
xchg
sub
cmp
ret
mov
shl
mov
sbb
sub
xor
les
mov
push
pop
wbinvd
dec
push
test
and
xor
jo
icebp
or
xchg
lods
xor
pop
adc
fwait
adc
loope
rolb
jo
xor
clc
or
fldcw
jmp
out
clc
movsb
sbb
mov
pusha
std
xor
mov
xchg
leave
scas
mov
mov
fdivs
sub
iret
data16
jne
and
std
sbb
jge
lea
and
jae
psrld
adc
in
shll
mov
xor
or
jmp
mov
add
inc
enter
jl
xor
fldenv
push
mov
enter
push
xchg
or
mov
pusha
xor
or
lock
push
jnp
mov
daa
and
push
stc
or
cld
mov
mov
pop
arpl
aam
test
lock
mov
inc
rcrl
lret
test
jno
jb
leave
ljmp
adc
cmpsl
leave
lret
mov
movsb
incl
jne
lret
and
sbb
into
cmp
outsb
mov
outsb
xorb
pop
xor
dec
in
cmp
test
lret
roll
xchg
iret
fmull
shlb
pop
sar
mov
cmpsb
hlt
fidivrl
loopne
dec
sbb
iret
shlb
mov
pop
add
dec
add
cmpsb
sbb
leave
adc
ficoms
mov
mov
mov
ret
xchg
push
mov
sti
pop
mov
ljmp
pop
and
stos
pop
pop
mov
mov
inc
fiaddl
jl
mov
inc
loop
inc
aaa
stos
push
pop
fdivs
sub
push
call
cmp
loop
addl
std
inc
and
sbb
cmpsl
xchg
bound
sub
push
arpl
pop
lret
cld
inc
mov
jmp
add
add
lods
inc
adcl
fdivs
out
hlt
xchg
mov
leave
xchg
mov
repnz
aam
inc
pop
fcompl
cmp
and
shr
pop
cmc
or
stos
cld
cmpsl
jae
inc
bound
xorb
ret
xchg
push
out
jbe
mov
clc
jb
jno
cli
cwtl
cmovbe
adc
fnsave
xor
and
and
inc
es
lock
push
inc
pop
fiadds
scas
xchg
jbe
dec
aas
in
daa
add
loope
fmulp
aaa
pop
jbe
and
or
sti
pop
je
jge
mov
ljmp
adc
testl
cmp
lds
ljmp
mov
ss
scas
sub
push
mov
adc
fimuls
and
jle
sub
inc
cs
cs
add
adc
int3
mov
negl
cltd
shl
mov
jl
xchg
inc
push
add
xchg
cmpsb
ret
pop
inc
push
add
int
test
std
loopne
cwtl
cmpsl
ret
stc
pop
mov
sti
mov
in
adc
ss
cli
push
sbb
mov
loopne
mov
mov
test
dec
insl
js
loop
dec
int3
xor
inc
stos
push
repz
mov
mov
adc
in
shl
in
ljmp
ljmp
sti
sub
out
adc
int
jne
js
fcoms
ja
dec
mov
lcall
rcrl
mov
mov
fildll
jecxz
or
mov
sub
mov
mov
sub
dec
fstpt
pop
ret
cmc
pop
cwtl
mov
mov
mov
jecxz
jb
xchg
incl
mov
pop
pop
push
int3
lret
add
adc
jp
lret
push
lret
jnp
stc
push
scas
cmpsl
jno
cmp
cmp
cmpsl
and
scas
sbb
dec
loopne
lret
pushf
add
mov
cmpsb
sbb
mov
pop
adc
in
sbb
lods
clc
mov
mov
sbb
fistl
or
es
cmp
adc
movsb
push
imul
dec
dec
int3
xchg
push
cmp
int3
xchg
jnp
fdivrp
inc
scas
and
adc
mov
xlat
int3
cld
sub
push
jnp
aad
sbb
cwtl
test
pushf
repz
call
lahf
push
or
pushf
sbb
pop
xchg
out
popa
jle
lods
jo
xor
ss
and
pop
es
fcompl
sub
xorl
lahf
pop
shl
dec
fcomp
negl
outsb
int3
lock
pop
pop
pop
pop
call
inc
xchg
xchg
lret
mov
in
mov
call
mov
clc
ret
rolb
stos
fsubrl
or
sbb
into
mov
push
xchg
add
js
movsb
ret
jo
insb
andb
lock
push
push
adc
push
movsl
mov
pop
dec
and
inc
sbb
orl
fdivrp
loope
shll
sub
jmp
movsbl
js
nop
es
lds
sar
or
sbb
adc
cmp
fwait
mov
aad
xor
imulb
jb
in
mov
hlt
and
mov
test
jmp
sbb
test
stos
mov
shlb
movsb
xchg
mov
test
cld
xor
loope
cmc
ret
hlt
scas
mov
lea
jnp
jg
aaa
xchg
xchg
fsts
jns
fwait
out
xlat
aaa
in
xor
pop
inc
push
ret
outsl
xchg
pushf
inc
fwait
icebp
push
xor
pop
mov
aad
pop
mov
les
sub
xchg
xor
sbb
push
int
or
ljmp
pop
inc
pop
mov
stc
je
xor
aam
pop
adc
dec
cld
lds
and
inc
push
pop
push
gs
jg
xchg
movsl
mov
jb
sub
mov
int
in
dec
and
mov
hlt
repnz
mov
adcb
test
jb
aam
addr16
out
mov
rorb
fiadds
xlat
call
andb
xor
sub
imul
mov
xor
fsubs
xchg
push
cmpsl
inc
addb
pop
fcmovnb
xchg
and
imul
lret
add
aaa
mov
mov
jae
sbb
pop
lds
jmp
je
testb
cs
inc
es
inc
sar
pop
sub
mov
in
lods
mov
sbb
pop
sahf
mov
xor
outsb
xchg
ja
iret
cld
add
dec
test
jmp
out
adc
sarb
jge,pn
test
xchg
das
rorl
xchg
insl
fdivr
and
lea
jbe
cwtl
push
sbb
in
cmp
divb
xchg
popa
ret
mov
add
dec
add
in
pusha
je
sbb
xlat
inc
push
push
push
fstl
mov
sbb
sti
icebp
movsl
rcrl
mov
mov
mov
inc
icebp
cmpsl
jae
pusha
hlt
push
adc
push
sarb
mov
jge
shl
add
push
outsb
divl
cmp
imul
lock
aas
fsubr
stos
movsl
add
inc
add
pop
ss
test
sbb
aas
mov
dec
popf
adc
nop
xchg
dec
dec
or
cli
pop
int
andl
pop
lret
push
in
stos
cmp
ja
ja
outsb
loop
jmp
into
sub
loopne
mov
push
pop
or
test
adc
ja
mov
das
xor
sbb
out
push
sub
lahf
stos
loope
sbb
std
or
insl
xchg
imul
mov
jge
xchg
sub
lcall
fmul
mov
pop
and
nop
pushf
into
sub
out
cli
icebp
fwait
inc
das
sub
sbb
and
mov
insb
sarl
xchg
out
inc
mov
sbb
sbb
adc
dec
fs
jbe
mov
cmp
gs
sahf
sub
mov
cmp
daa
scas
mov
lret
lcall
sbb
call
das
sub
dec
aad
mov
fiadds
pop
cmp
adc
enter
inc
add
push
fimull
aad
push
cmp
xchg
cwtl
jnp
jle
or
ljmp
mov
mov
mov
or
and
int
insb
inc
inc
jbe
jmp
push
adc
pop
in
mov
add
out
and
xor
dec
pop
std
out
sbb
dec
sbb
dec
shlb
push
popa
push
xor
xchg
jmp
in
jg
and
mov
out
dec
test
cmp
data16
jae
aaa
xor
ds
rcrl
mov
imul
dec
cmp
push
xlat
ret
dec
imul
dec
push
fists
cmpb
jne
dec
dec
dec
mov
scas
arpl
int
lahf
adc
add
xor
pop
mov
pop
sub
pop
je
push
xlat
push
cmpsb
mov
stos
rorb
enter
mov
add
icebp
ljmp
rorl
mov
cmpsb
adc
fcmovnb
cmp
dec
cmpsb
pop
lcall
fwait
pusha
pusha
out
inc
repnz
lret
sahf
outsl
adc
and
add
jp
push
push
cmp
inc
jmp
add
popf
movsb
je
in
dec
das
lock
push
mov
arpl
jns
cmp
sbb
sub
lret
repz
nop
test
sbb
add
test
fstpl
lret
and
test
xor
and
pop
shlb
repz
add
add
sub
repnz
in
fstpl
inc
stos
pop
xchg
pop
dec
push
pop
into
fcomp
xchg
iretw
mov
push
mov
push
cmp
frstor
and
loope
mov
xchg
mov
and
push
aam
lods
mov
push
xchg
das
vpbroadcastw
shrb
fcmovb
data16
dec
lret
mov
subps
leave
scas
imul
dec
and
jne
rorb
enter
pop
cmp
js
dec
shl
pop
push
aaa
cmp
lret
lods
sub
leave
sub
mov
dec
adc
sub
je
imul
in
cmp
mov
sub
or
xchg
mov
int3
xor
adc
xchg
je
fldt
lock
std
into
jae
les
add
dec
mov
xor
cmc
push
cmpsl
mov
roll
into
jecxz
mull
out
mov
loop
push
xor
mov
sub
test
nop
sti
jb
jp
aaa
repz
sahf
lcall
add
lods
mov
cltd
jecxz
addr16
inc
fiadds
adc
and
xor
addr16
mov
mov
add
jecxz
sti
out
dec
outsb
jp
and
jbe
out
xor
pop
mov
leave
and
adcl
mov
mov
dec
ljmp
sarb
xor
shll
and
or
and
aad
or
adc
scas
cltd
add
outsl
cmpsb
ret
add
aad
add
adc
pusha
pop
jae
cmp
fs
loopne
sti
aaa
mov
imull
xor
push
add
push
iret
push
xchg
lea
dec
mov
inc
jb
shrb
pop
cmp
inc
lock
add
mov
sbb
popf
mov
and
push
pop
jle
adc
push
dec
sub
push
rorb
test
mov
xlat
cmp
daa
inc
mov
ljmp
outsl
mov
push
jbe
insb
jae
sbb
sar
orl
dec
shrb
loop
dec
jecxz
jge
bnd
lods
pop
out
sbb
imul
insl
xchg
data16
sti
out
leave
cltd
int3
inc
jae
mov
inc
jp
sbb
push
mov
push
nop
or
xchg
cmp
sahf
jbe
mov
xor
not
aas
popa
dec
aam
mov
pop
inc
stos
lret
call
xorb
adc
pop
sahf
in
or
mov
cmp
orb
sbb
pop
int3
pop
lods
adc
sti
push
ret
jne
xchg
add
out
cld
sub
icebp
adc
loopne
leave
popa
loop
jns
testl
and
ret
mov
dec
stos
dec
cmpsl
adc
sbb
and
sub
mov
and
add
mov
aas
ss
repnz
lahf
mov
lcall
pop
in
push
push
and
and
lahf
or
lsl
inc
mov
std
cmpsl
out
fistpll
sbb
pop
pop
scas
mov
loopne
sbb
push
push
test
push
push
pop
clc
inc
test
aas
repz
in
into
bswap
push
addl
pusha
cmp
ret
cli
xchg
xchg
lods
scas
jmp
popa
add
scas
jae
and
pushf
adc
popa
cmp
add
sbb
into
jb
pop
xor
xor
movsb
sarl
fs
push
sbb
add
and
sbb
or
cmp
push
mov
cmp
xchg
fimull
ja
pop
jmp
or
filds
inc
lcall
int
test
lret
mov
arpl
inc
cmp
loope
dec
cli
cmpsb
sbb
mov
xchg
addr16
scas
stc
lock
mov
jae
sbb
jne
gs
repz
jb
insl
test
aaa
xor
sub
imul
fsubr
pop
dec
xchg
mov
fsubrs
lcall
mov
test
adc
imul
or
cmpb
std
mov
add
iret
push
jmp
or
lahf
cld
nop
ja
mov
push
data16
sub
jb
sub
shll
sbb
sub
mov
mov
orb
inc
inc
mov
ss
aaa
xchg
xor
xchg
or
in
mov
pop
scas
push
mov
mov
negb
lret
jle
mov
or
sbb
sbb
xchg
into
outsl
imul
flds
in
imul
hlt
mov
in
mov
mov
sub
dec
dec
cmp
cmp
mov
push
add
adc
pop
jno
adc
xchg
or
ljmp
and
divl
dec
adc
call
xchg
xchg
pop
dec
pop
jns
pop
inc
jnp
loopne
adc
cmpsb
jno
rolb
scas
mov
push
sub
cmpsl
push
jno
ss
adc
jp
hlt
div
or
es
sub
mov
leave
jle
mov
les
jmp
int3
and
filds
loopne
dec
int3
push
and
mov
jns
xchg
stc
arpl
movsb
mov
jnp
movsl
or
xor
mov
xor
popf
add
fisttpl
push
jmp
mov
adc
sub
popf
adc
mov
insb
mov
xchg
lret
add
dec
sti
ret
cmp
stc
mov
adc
pop
push
xor
decb
adc
dec
mov
aad
mov
cmpb
in
pop
xchg
cmpsb
loop
arpl
out
push
test
shl
xchg
sbb
stos
adc
rcrl
nop
xchg
and
into
cmc
dec
pop
sub
ret
bound
movsl
outsb
jmp
js
xchg
adc
fucomi
jne
enter
out
mov
testl
lahf
inc
push
and
in
sbb
dec
adc
inc
inc
dec
cli
adc
in
adc
mov
mov
mov
fisubrs
inc
cmp
cmp
lahf
test
mov
clc
aam
cltd
xchg
repnz
pop
mov
lret
iret
mov
jmp
filds
add
xchg
fisubrs
sub
lock
pop
or
xor
cmp
jb
gs
mov
adc
rcrl
cld
dec
jae
push
push
mov
or
cmp
mov
and
les
jne
dec
aad
into
mov
out
mov
mov
sbb
mov
add
insl
add
dec
iret
xchg
rcr
sub
xor
outsl
cmpsb
incl
je
hlt
cmp
push
xlat
fisubl
xor
call
push
dec
add
cmp
cltd
repnz
inc
xchg
fildl
jns
outsb
xchg
sahf
mov
insl
jae
shll
inc
sbb
xor
pop
mov
cmp
cli
push
mov
fdivrp
shr
push
mov
lds
or
sub
push
xor
scas
adcl
mov
cmc
icebp
push
mov
int3
repnz
push
mov
add
cmpsb
inc
mov
sti
test
push
fwait
cmp
inc
imul
jo
mov
xor
jmp
insb
repz
jns
out
mov
out
push
xchg
addr16
frstor
into
daa
or
mov
fstps
adc
pop
shl
lahf
cld
push
pop
sbb
cmp
std
scas
add
movsb
xchg
sbb
lods
lods
out
and
jnp
inc
sub
icebp
mov
lea
into
div
dec
sbb
out
insb
test
loop
dec
push
mov
or
adc
and
imul
xchg
xor
or
fists
in
mov
adc
mov
jne
out
add
movl
fcomip
push
test
movsb
popa
leave
mov
jle
inc
pop
aas
and
push
sub
or
and
fidivs
popf
int
sbb
fdivp
fdiv
test
in
sbb
pop
sbb
loope
test
pop
push
or
add
sbb
loopne
js
aad
sbb
pop
sbb
loopne
lods
add
sti
ss
xchg
and
inc
and
shl
popa
cltd
jge
jp
outsb
ss
and
mov
popf
mov
push
aad
sti
pop
xor
jno
fistpl
cmp
or
xlat
stc
mov
test
mov
mov
rolb
dec
sbb
sahf
cmpsl
cli
jb
jecxz
push
inc
xlat
aad
or
loope
pop
dec
mov
frstor
iret
subl
jnp
addl
cmc
scas
loopne
inc
movsl
pop
ret
inc
dec
dec
outsb
dec
adc
inc
andb
cmpl
cli
hlt
rcl
cltd
sbb
jmp
pop
sbbb
add
ret
decb
push
lret
pop
or
movsl
sbb
jns
jle
xor
sbb
jl
dec
jp
pop
outsb
pop
fsubrs
ss
popa
jae
cli
jmp
or
push
popf
outsl
or
pop
jns
jo
mov
jmp
int3
xor
mov
add
rep
icebp
mov
bound
push
loope
mov
and
fnsave
mov
ljmp
and
fdivl
mov
push
xor
lods
pop
insl
mov
xor
ret
iret
inc
mov
dec
xchg
pop
stos
or
imul
jo
nop
push
mov
push
mov
push
xchg
push
mov
sbb
sti
outsl
dec
les
sbb
jne
or
sbb
out
or
sbb
cld
push
sahf
jne
xor
jns
fst
mov
add
sbbb
pop
dec
sub
adcb
mov
paddd
das
pop
movsb
sub
sti
jne
push
mov
testb
pop
jg
rolb
fwait
cs
jno
testb
cmpl
dec
iret
mov
ja
lret
pushf
mov
insb
or
mov
insb
lods
mov
jg
repnz
lock
outsb
ror
xor
stc
dec
pop
dec
add
sbb
out
imul
sbb
mov
and
das
push
cmp
rcrl
mov
out
push
insb
nop
fwait
mov
mov
or
xchg
hlt
xchg
sti
int
jb
mov
enter
jb
sti
xchg
or
gs
mov
lcall
loop
mov
movsb
adc
dec
lret
out
clc
jle
push
fwait
sbb
sbb
xlat
sbb
or
pop
lods
out
jp
mov
adc
mov
std
sarb
pop
cmp
cltd
or
and
inc
arpl
ljmp
jl
iret
pop
lret
inc
adc
mov
xlat
mov
push
std
adc
push
add
xor
dec
aas
mov
xchg
sti
push
shr
into
xchg
icebp
rcr
adc
mov
dec
mov
aam
jmp
pop
xor
popf
pop
adcl
int
out
mov
shl
int3
mov
stos
ja
sahf
sti
jb
and
push
ss
shrb
adc
cltd
inc
xlat
xchg
outsl
add
ljmp
addr16
aaa
mull
sbb
mov
inc
bound
mov
dec
jno
sub
int3
jecxz
xchg
in
cmp
dec
sub
cmc
lods
popf
out
fstl
pop
comiss
imul
and
fcoml
mov
pusha
sahf
sub
cmp
mov
pop
xchg
or
add
mov
andb
lock
sbb
lock
xlat
ficompl
xchg
mov
test
push
out
xchg
or
push
dec
addb
jle
das
or
mov
mov
out
cmpsb
xchg
leave
inc
xchg
ljmp
pushf
es
rcrl
cmpsb
aaa
iret
cmp
pop
ds
xor
push
cmpsb
movsl
or
mov
push
mov
pusha
xchg
jge
jb
jo
ds
test
lods
jl
div
out
or
popf
mov
xchg
cmp
push
pop
jmp
sub
xor
test
mov
sbb
dec
push
shll
xor
sahf
push
fbld
cmp
js
cwtl
stos
cmpl
movsl
adc
sub
ret
mov
leavew
rorl
inc
int
roll
in
mov
mov
jecxz
pop
and
lahf
pop
ja
sbb
popf
cmp
insb
cld
mov
push
cld
pushf
sarl
outsl
les
adc
cmp
in
imul
mov
sahf
lods
sbb
repz
aad
lea
xchg
call
cmp
pop
out
je
sub
mov
jno
and
adc
addr16
es
adc
test
rcrl
mov
mov
jbe
jne
xchg
daa
addr16
sahf
in
cmp
fs
jb
dec
sbb
jne
bound
mov
or
jbe
aaa
mov
cmp
das
imul
testl
ja
jbe
mov
xor
mov
testl
enter
repz
test
pop
pop
sbb
pop
mov
ret
sbb
xchg
or
dec
out
mov
xorb
cmpsb
mov
or
add
cmpsb
in
jne
arpl
daa
lahf
daa
sti
mov
dec
rorb
jg
lret
hlt
mov
xor
pop
aas
mov
cmpsl
xchg
lock
roll
repz
or
aam
aas
std
mov
xor
stos
nop
mov
insb
shlb
adcl
out
push
xchg
jecxz
cmp
popf
adc
test
lods
insl
push
dec
cmp
mov
pop
clc
push
fldcw
aam
or
cs
popf
mov
mov
cmp
jbe
ljmp
outsb
xchg
fisubl
mov
push
jle
stc
xchg
adc
fwait
clc
add
pop
scas
dec
dec
xor
aam
aam
popa
addr16
inc
jp
sub
mov
pop
mov
test
arpl
cmpsl
cs
pop
xor
lcall
sarb
push
outsl
push
bsr
mov
aaa
aas
dec
or
gs
out
jp
lahf
mov
push
inc
mov
leave
mov
pop
shr
imul
aaa
ja
sbb
stos
push
sbb
pop
jp
mov
cs
and
sub
mov
xor
pop
imul
ficompl
dec
cld
pusha
cld
inc
rol
sub
movsb
or
adc
loope
lods
dec
dec
adc
js
mov
imul
push
sub
xor
inc
xchg
mov
loopne
jl
sbb
in
xor
iret
pop
and
xlat
xor
mov
jnp
scas
repnz
pop
xchg
fistpl
xchg
test
xchg
mov
add
xor
dec
data16
mov
push
lcall
sbb
cmp
fwait
jp
jns
pusha
dec
and
stc
xchg
insb
ja
and
outsb
mov
daa
jecxz
adc
sub
jle
jnp
in
adc
test
enter
pop
or
sbb
lods
test
mov
xchg
scas
pop
imul
xchg
add
add
fistl
and
rcr
movsb
shrl
xchg
cld
movsb
xchg
int
inc
lret
fdivrl
scas
divb
aaa
adc
sub
cmc
outsl
jmp
sub
mov
xor
popaw
js
mov
pop
mov
ds
adc
or
inc
test
int
pop
adc
xor
cmpsl
push
sbbb
imul
daa
lahf
add
shrl
div
or
js
inc
jle
icebp
jmp
mov
or
xor
popa
mov
xchg
aaa
lret
mov
mov
dec
gs
pop
fisubrl
mov
push
xchg
daa
andl
adc
inc
pop
push
cmp
mov
and
out
jl
mov
icebp
addl
jnp
cmpsb
inc
outsb
cs
jns
mov
jne
sbb
cmpsb
ds
mov
mov
adc
dec
test
shl
sbbl
sbb
pop
xlat
in
int3
mov
movsl
pop
inc
stc
push
push
repnz
push
jg
jnp
sbb
mov
mov
lods
ret
call
mov
mov
inc
jge
and
adc
ljmp
es
mov
mov
cltd
clc
dec
jmp
inc
adc
scas
xorl
shrl
rolb
pop
les
stc
in
testl
aaa
push
dec
xchg
data16
pop
imul
push
test
xor
bound
sbb
fildll
cld
sbb
inc
xchg
lods
repz
adc
dec
repnz
or
movsb
out
cltd
sub
loope
jl
movhps
popf
inc
inc
xor
cs
pop
mov
flds
pusha
enter
mov
es
sbb
pop
pop
sahf
andb
push
in
sbb
in
add
adc
sub
inc
inc
xchg
inc
jbe
xor
lret
and
pushf
pop
and
add
imul
push
negl
sbb
xchg
xor
lods
jnp
arpl
mov
inc
push
jl
cmpsl
sti
sub
jno
enter
int
repnz
call
inc
lock
pop
jae,pt
rol
jle
add
in
repz
inc
jns
and
xchg
dec
aad
inc
jecxz
insb
fs
ljmp
test
hlt
mov
cmp
xchg
outsl
fisttps
ret
xchg
mov
or
mov
in
inc
or
rep
out
cli
add
aaa
insl
mov
or
mov
rcrb
rorb
jae
mov
cmp
outsb
push
test
mov
loop
ror
mov
inc
inc
test
mov
xchg
xor
je
mov
push
test
add
and
inc
nop
sti
aaa
add
dec
mov
pushf
clc
ljmp
and
mov
ds
xor
cltd
mov
test
repz
rcr
in
and
jne
jge
clc
in
sub
les
pop
push
insb
lods
bound
sahf
out
mov
jge
add
inc
rol
or
jb
rclb
es
int
xor
push
pop
adc
stc
and
ror
pop
xchg
inc
ljmp
mov
das
jp
add
int3
iret
loope
pop
jmp
dec
mov
ficoml
or
shll
out
pop
in
add
xchg
and
mov
sub
loop
dec
shll
inc
and
daa
icebp
dec
popa
cmpsl
and
push
cli
push
into
int3
xchg
lcall
dec
jle
adc
xor
adc
xchg
jo
mov
fidivl
movsb
xor
sbb
pop
je
lea
jge
jge
xchg
aas
cmp
xchg
outsb
xor
ljmp
lret
lret
jge
cld
ljmp
mov
and
les
andb
or
pop
inc
enter
adc
icebp
jmp
sub
xchg
call
jmp
jg
das
out
in
js
cmp
scas
orb
stos
inc
push
scas
adc
mov
dec
popf
sarb
adc
xchg
mov
xlat
cmp
imul
popf
ret
rcll
int3
xor
mov
aam
stos
imul
fldt
stos
out
les
mov
aad
sahf
or
xchg
mov
adcl
xchg
idivl
and
add
or
xchg
sti
rcl
mov
and
xchg
test
cmpsl
or
sbb
xchg
in
fstpt
cmp
stos
or
mov
mov
pop
mov
push
sub
lret
lock
leave
cmpsb
data16
add
push
xor
enter
xchg
cmpsb
xor
popf
in
adc
adc
xor
sub
rorb
rorl
lds
gs
in
sbb
push
inc
cmc
mov
int3
jne
cmp
mov
lret
ret
outsl
out
push
pause
push
rol
jecxz
xor
nop
inc
xchg
bnd
movsb
xlat
clc
add
out
mov
mov
lock
and
jae
fldl
andb
js
mov
aam
int3
mov
mov
aas
repz
xor
mov
movsb
scas
pop
movsb
adc
jmp
dec
sub
arpl
into
push
lahf
sub
iret
xchg
enter
ja
scas
in
inc
std
or
cmp
clc
lret
pop
jge
adc
mov
mov
sub
and
cmc
imul
lock
sub
cmp
or
pop
out
imul
arpl
mov
add
mov
arpl
pop
mov
icebp
imul
dec
test
imul
nop
jmp
aam
cltd
ljmp
inc
shll
inc
pop
add
data16
inc
jae
or
xchg
test
push
jns
popa
in
cli
test
or
dec
sahf
jecxz
jle
pushf
jg
outsb
fdiv
xor
rclb
push
int3
inc
push
fcomps
dec
push
outsb
sahf
loope
decl
push
test
or
pop
mov
popa
push
cmp
lods
mov
bound
cmp
imul
pop
cmp
jb
loope
movlps
hlt
in
or
xor
xchg
test
iret
sti
daa
pop
data16
es
les
mov
adc
pop
outsb
pop
stc
mov
outsl
lret
pushf
cmpl
jns
pusha
cmp
fsubrs
push
xchg
cmpb
nop
add
adc
mov
shlb
jle
stc
lock
gs
movsl
sub
pushf
pop
outsb
movsb
insb
sets
cmp
shlb
or
es
or
ja
sub
mov
push
ss
outsb
push
cs
cmp
xor
jl
jge
into
dec
or
insl
push
pop
xchg
adc
aas
jo
xchg
sub
cmp
jmp
push
or
and
sahf
push
aas
sbb
repz
fsts
ror
pop
int3
inc
mov
aas
and
pop
mov
xchg
andb
lods
pop
mov
adcl
loopne
xchg
popa
adc
adc
mov
std
jp
xorl
lret
cld
ret
cs
stos
dec
xor
out
mov
ret
sub
push
push
xchg
adc
aam
cmp
sbb
imul
xlat
sub
dec
mov
nop
loopew
stos
enter
adc
mov
fwait
loopne
xor
pop
push
xor
mov
sbbb
push
es
cmp
sub
xchg
push
nop
rorb
add
faddl
sbb
mov
aam
xorl
xchg
xor
mov
lret
imul
mov
lret
aam
cmp
pop
mov
sbb
jns
nop
or
divl
dec
es
arpl
insb
mov
clc
mov
or
into
push
loop
xor
test
mull
es
bound
pop
lea
pop
mov
dec
cmp
ljmp
dec
ljmp
adc
xorb
lcall
mov
loope
outsl
in
mov
mov
movsb
loope
xor
dec
xchg
adc
add
in
ja
stc
nop
jl
ret
ljmp
and
pushf
iret
inc
aas
xchg
pop
mov
xorb
jg
rcrb
out
push
pop
dec
jle
out
data16
adc
mov
inc
dec
fwait
cmp
and
pushf
cwtl
mov
push
sub
mov
push
fwait
push
xchg
pusha
mov
mov
mov
cmpsl
pop
pusha
push
mov
mov
mov
into
xchg
sub
push
je
dec
fidivrs
int
sbb
fstps
fimull
or
jno
sbb
out
xchg
cmpsw
pop
dec
js
js
notl
mov
adc
gs
xchg
inc
dec
push
xchg
or
pop
outsb
hlt
rolb
pop
mov
and
ja
sbb
fs
push
ret
jecxz
fadd
lcall
fdiv
push
nop
nop
loopne
inc
jmp
js
pop
hlt
in
pop
inc
dec
xchg
pop
add
hlt
cmp
std
jmp
xchg
adc
cmp
imul
popa
push
popf
mov
loope
popf
cmp
std
pop
lock
pop
fcoml
pop
je
lcall
inc
mov
and
ss
or
mov
mov
jae
ret
hlt
sub
push
std
push
mov
xor
lcall
cmp
cli
stos
lret
push
cltd
cmp
scas
mov
cmpsl
adc
push
jbe
push
mov
idivb
out
and
xor
pop
fadd
sub
dec
fildll
mov
mov
andl
orl
jl
sub
sbb
cmpb
ss
cmpsl
pop
cli
out
jge
movsb
orl
xchg
and
mov
icebp
out
loopne
fbld
loope
jbe
or
jne
cmp
mov
adc
and
sbb
xchg
cmp
jmp
mov
stos
add
je
push
jg
push
ljmp
dec
adc
jge
dec
cmc
add
sub
mov
les
add
notl
pop
pop
test
imul
and
sbb
push
cmc
in
push
clc
lock
mov
dec
cmp
and
iret
int
ss
imul
sbb
cld
lahf
lods
or
sbb
jne
mov
push
popa
or
pop
sbb
jno
out
lahf
shl
cmp
lods
out
dec
js
mov
dec
jno
rolb
inc
mov
mov
jge
and
lods
jecxz
cmc
int3
pop
dec
lods
jg
xchg
movsb
push
test
mov
jmp
mov
xchg
sahf
mov
xchg
test
in
inc
push
les
faddl
mov
fmull
adc
add
push
pop
dec
jge
mov
pop
xchg
call
mov
aad
mov
mov
call
cs
insl
jae
imul
fs
inc
popa
lcall
mov
ret
mov
jns
push
adc
xchg
push
cld
insl
es
adc
xor
cld
cmp
dec
cmp
hlt
xor
es
jg
fprem
fisubs
clc
add
movsl
jle
notl
enter
loop
out
push
lock
out
enter
dec
popa
mov
dec
sti
std
mov
pop
shl
rolb
je
es
orl
cmpsb
ljmp
dec
xchg
stos
shr
in
add
call
das
jo
pushf
popf
test
and
push
aam
inc
out
xor
and
mov
fcomp
mov
fdivrs
int
iret
das
js
jbe
flds
adc
fcmovb
inc
mov
fld
pop
add
adc
pushf
sbb
xchg
test
ret
rclb
sbb
sbb
cltd
outsb
les
test
mov
jbe
and
jecxz
mov
ds
arpl
cwtl
add
and
int3
fxch
insb
ret
mov
xchg
test
cld
es
cld
mov
add
repnz
insl
xchg
pushf
popa
sub
mov
add
add
and
pop
inc
mov
mov
lock
lea
mov
lock
add
movsb
and
add
scas
bnd
int3
cs
xchg
or
mov
inc
cwtl
std
dec
sbb
push
xchg
mov
push
mov
or
test
fs
mov
repz
cmpsb
jo
lds
fisttps
mov
loope
jne
push
and
fists
dec
mov
and
cmp
je
shll
std
sbb
imul
loop
mov
sbb
mov
sti
out
fadds
pop
sub
xlat
cli
nop
push
inc
scas
push
pop
mov
xchg
jecxz
mov
mov
dec
and
push
lods
sub
cmp
mov
sbb
addr16
or
clc
pop
mov
jle,pt
outsb
dec
rorl
and
mov
pop
loope
mov
add
fsubrs
aas
outsb
lods
mov
mov
push
ds
push
cmp
lds
cltd
dec
pushf
mov
inc
aas
xchg
mov
mov
aad
incb
cmpsb
inc
jp
sub
cmp
scas
fildll
inc
int
push
int3
repz
jne
sub
lds
or
sahf
sub
movsl
scas
pop
and
push
xchg
dec
clc
or
xor
jg
cmp
ds
and
cmpsb
adc
andb
pop
movsl
add
cmp
std
out
lret
insl
fidivl
ss
cmp
pop
xor
fmull
je
and
mov
cmpsb
mov
inc
pop
fcomp
outsb
add
mov
pop
popa
mov
bound
mov
scas
xchg
push
iret
push
jno
and
xchg
cli
jg
pop
subb
lock
push
sub
iret
cmp
jns
mov
fnstenv
and
adc
push
jne
mov
stos
in
shlb
or
shll
imul
testl
adc
xchg
inc
sub
mov
lock
adc
or
jae
xlat
jecxz
clc
sbb
sub
rcll
push
popf
movsl
add
test
xchg
and
aas
test
sub
pushf
imul
or
or
pop
sub
call
xchg
pop
test
mov
xchg
mov
adc
aas
fdivl
sbb
or
mulb
nop
pop
in
movsl
test
dec
add
mov
push
insb
out
fucomp
or
and
pop
cli
push
sbb
leave
xchg
xchg
jmp
sbbl
test
cmp
test
add
pop
push
fwait
xchg
xor
push
mov
push
or
or
leave
repnz
repz
mov
in
and
rorb
rorl
es
test
mov
in
stos
push
xor
jl
fs
cli
push
cli
add
push
aaa
fbstp
pop
mov
insl
mov
pop
jno
or
inc
iret
fidivl
out
scas
sbb
sbb
and
pop
and
push
setl
pop
daa
popf
ret
decb
xor
idivb
mov
fwait
aaa
testl
fnsave
and
dec
pushf
ret
test
jg
mov
pop
mov
xchg
imul
lea
insl
outsb
push
jbe
ds
dec
and
inc
je
gs
daa
xor
outsb
sbb
inc
arpl
repz
ljmp
adc
jb
xchg
mov
es
push
adc
gs
out
jnp
push
pop
sub
sbb
mov
adc
pop
aad
into
mov
jbe
mov
sub
gs
rcl
or
adcl
jae
jae
and
mov
mov
jp
ss
mov
or
icebp
loopne
imul
cwtl
lods
insl
xchg
dec
jg
fisubl
stos
mov
popa
fdivr
lods
test
fisubrl
xchg
iret
cmpsl
xor
dec
js
jae
mov
popa
aad
pop
mov
das
or
popa
mov
lods
sti
xchg
out
or
push
dec
xor
stc
in
shll
insl
in
jae
insb
sub
sahf
or
js
mov
pop
in
popa
mov
sahf
mov
ficompl
and
popf
cmpsb
mov
mov
js
xlat
enter
mov
lret
lods
mov
dec
insl
stc
mov
sub
movsb
les
movsl
mov
loop
loopne
imul
in
or
jne
jecxz,pt
scas
lret
pop
iret
leave
jb
xchg
and
sub
mov
sub
shrl
sub
fstl
cmp
push
jg
jmp
mov
arpl
pop
mov
aaa
cmp
js
ret
cwtl
mov
loopne
adc
icebp
and
push
daa
aad
and
mov
push
fisttps
sub
jno
pop
lahf
sti
and
fiaddl
push
cmp
mov
pop
frstor
jmp
popf
pop
mov
sti
sbb
adc
shlb
jns
or
fs
movsb
inc
mov
data16
dec
cmp
lahf
mov
push
clc
mov
pop
fstpt
cmp
sbb
pop
jne
cmpsb
inc
lahf
popa
pop
cmpsb
mov
mov
and
inc
push
jno
cmp
adc
adc
test
xchg
imul
add
cmp
sti
ja
cli
xchg
dec
or
and
jnp
xchg
mov
lahf
xor
pop
inc
inc
imul
inc
sbb
mov
sub
jne
lret
xchg
ja
push
and
dec
sbb
inc
and
pop
adc
popf
in
sub
jnp
leave
cmp
mov
in
fs
lret
mov
cmp
dec
and
sahf
xchg
cwtl
cltd
arpl
push
jp
mov
xchg
mov
lahf
fidivrs
xorl
cs
adc
add
add
cmp
jno
test
mov
jmp
roll
mov
push
ret
dec
das
inc
pop
ret
xlat
xchg
fsubs
addb
mov
addr16
movb
jb
inc
push
out
mov
ja
cmp
out
mov
cmpsb
add
jl
pop
cmpsb
aad
cltd
lahf
sub
cmp
fldt
cs
jb
jae
in
enter
clc
hlt
fsubrp
push
sub
jmp
jle
or
stos
loop
push
xchg
jle
aad
js
sub
cmp
imul
mov
loop
xchg
std
xchg
sbb
sub
xlat
sub
push
xor
insb
or
pusha
jecxz
push
ret
sub
inc
pusha
lods
shrb
hlt
xor
pop
outsl
jmp
mov
out
add
sbb
dec
mov
fwait
add
out
ret
gs
popa
mov
inc
int
adc
pop
xor
int
sbb
pop
cs
mull
or
imul
push
mov
jmp
adc
mov
rclb
mov
repnz
cwtl
pop
cmp
cmp
adc
sub
add
aad
sti
pop
ret
push
mov
sbbl
stos
cli
repz
xor
sbb
int
xchg
inc
xchg
rorl
sub
ror
cltd
in
push
ds
mov
sub
jp
adc
std
sbb
jmp
ss
and
push
ret
sub
sub
jo
je
add
sbb
and
push
xor
inc
dec
jle
jnp
dec
xchg
jmp
insl
push
cmp
sub
cwtl
mov
mov
jne
lods
adc
cmc
int
cld
cmp
xchg
xchg
pop
dec
or
and
mov
sbb
mov
out
fnstenv
pop
adc
fsubrs
add
popf
add
ret
sbb
sub
jb
out
lret
fisubs
dec
js
push
or
or
ja
mov
imul
jecxz
daa
mov
fucomip
adc
movsl
push
pop
ret
cmp
push
in
pop
scas
sar
mov
shufps
and
in
inc
outsl
hlt
negl
dec
inc
mov
sub
mov
repnz
cmp
inc
xor
hlt
test
lret
or
ds
push
inc
shlb
int
adc
cmp
xor
lods
xor
jecxz
fidivl
mov
jno
outsb
jne
and
scas
cmc
mov
xor
push
loop
xchg
jmp
pop
and
mov
pop
out
adc
in
in
cmp
mov
and
es
xor
outsb
push
fldcw
outsl
out
outsl
xchg
movsl
arpl
dec
dec
sub
adc
enter
rcrl
inc
inc
loop
xchg
je
mov
dec
das
into
mov
cmpsb
xor
xchg
jo
ds
lods
lahf
or
decb
xchg
mov
daa
call
cmp
jbe
into
imul
pop
push
or
cld
scas
and
clc
cltd
or
and
mov
push
mov
mov
enter
pop
push
je
xor
adc
or
fwait
mov
pusha
into
divb
cmpsl
xchg
pop
shld
xor
sub
scas
roll
shld
dec
push
xchg
cmp
sbb
fwait
jp
ja
cmc
leave
test
mov
jns
cmpsb
loop
pop
pop
and
mov
repz
int3
sbb
add
icebp
push
mov
sub
decb
repz
insb
jbe
or
cmp
fnsave
call
mov
idivb
and
sub
arpl
add
call
daa
xor
rolb
xor
cmp
mov
inc
xor
loope
add
pop
in
je
lock
pop
dec
mov
sarl
in
aam
and
adc
mov
std
rol
mov
adc
das
jp
cmp
rolb
shll
mov
pushf
pop
ficompl
lods
jp
mov
jns
sbb
cmpb
or
ja
mov
push
js
xor
ljmp
daa
dec
or
shlb
mov
jo
add
xor
xor
jge
sahf
mov
in
dec
xchg
sbb
mov
xchg
mov
cmp
popa
xchg
sahf
test
push
lahf
inc
shll
subb
add
pop
push
sub
ret
and
inc
inc
sub
aas
sub
add
push
loop
xchg
sbb
rcrb
xchg
pop
gs
mov
mov
orl
mov
mov
out
aad
cmp
movsb
fwait
adc
cmp
movsb
mov
cltd
mov
xorl
sbb
sbb
test
into
aas
out
rep
insl
mov
into
aam
jmp
es
fsub
pop
push
cli
cmp
jmp
push
leave
adc
lcall
je
mov
lret
jnp
sbb
sar
mov
add
adc
inc
jo
add
adc
sbb
sub
bound
push
shl
dec
and
stc
sahf
cmp
cltd
daa
xor
fcmovnu
and
sahf
addl
into
jmp
jnp
hlt
mov
aas
push
xor
inc
mov
movsl
mov
data16
scas
cmpsl
loop
dec
int3
jecxz
dec
or
fwait
fwait
or
cmc
or
pop
es
cmp
inc
dec
dec
jae
mov
ror
scas
mov
movsl
xchg
xchg
sbb
cmp
outsb
cmc
dec
gs
xor
cmp
push
shl
dec
xchg
pop
movsb
fisttps
push
push
inc
popa
cltd
dec
imul
cmp
mov
shlb
out
mov
pop
fcomi
ret
mov
popa
jg
jnp
mov
mov
and
movsb
fs
ss
push
fwait
pop
aaa
push
inc
jecxz
repz
xor
jne
pop
outsl
or
jne
loope
push
sbb
ror
testl
adc
int3
mov
in
and
pushf
add
and
bound
insl
cmpsl
lods
lock
dec
es
cmpb
mov
add
std
gs
dec
mov
mov
or
mov
add
add
repz
mov
testb
jl
lock
imulb
push
ficoms
data16
shl
andl
pop
and
mov
adc
cmp
push
mov
inc
mov
jbe
mov
push
mov
fucomi
int
cmc
insl
pusha
rorl
loope,pt
jo
out
out
push
sub
mov
ret
pushf
push
aas
and
movsb
stc
cmpsl
ljmp
pop
pop
movsb
cmc
pusha
push
mov
jge
stc
xor
sub
xchg
pop
fwait
or
cmc
mov
pop
int
ror
pop
mov
out
dec
pop
fstps
sahf
xor
movsb
or
mov
pop
xor
xchg
in
sbb
add
push
xor
push
adc
adc
inc
ss
add
pushf
daa
bt
dec
inc
push
mov
lock
dec
icebp
out
sub
clc
sarb
js
outsl
sub
rol
xchg
mov
sahf
jmp
pop
pushf
xchg
fwait
notb
leave
cmpsl
mov
mov
pop
lds
enter
add
or
rol
stc
pop
sub
push
lock
enter
push
xchg
enter
sbb
iret
lcall
push
pop
sub
xchg
lahf
sti
cmp
in
loopne
movntq
dec
in
div
pop
jg
and
push
jae
aas
fstl
xchg
out
push
push
mov
cld
jge,pn
push
jo
sahf
sub
pop
adc
xchg
adc
jmp
imul
or
adc
and
sub
or
or
out
adc
nop
pushf
inc
xchg
dec
decb
dec
adcl
push
mov
inc
cmpsb
push
es
add
loop
or
fldl
leave
mov
xchg
cmp
xchg
and
rcr
into
fimuls
js
cld
mov
sub
dec
mov
adc
xchg
popf
cld
mov
jae
fnstcw
xlat
pop
pop
enter
outsb
and
add
andl
xchg
add
sbb
lods
fs
rorb
dec
leave
movsb
lret
push
push
addl
sti
enter
and
dec
dec
test
shll
test
jl
aam
cmp
ficompl
lds
outsb
inc
jmp
mov
or
or
mov
loopne
mov
mov
xchg
mov
cmp
dec
push
dec
aaa
dec
inc
outsl
push
adc
or
jge
xchg
or
adc
shl
xchg
mov
imul
xlat
xor
sti
imul
jne
adcb
out
pop
or
jnp
xor
es
or
xchg
jge
rorb
pop
pop
lods
adc
sbb
stos
cli
mov
sub
or
push
outsl
cli
push
popf
jae
mov
outsb
test
ja
out
test
or
xor
sets
and
lcall
decl
xor
test
das
dec
cmp
jnp
loopne
jb
lret
dec
sbb
cmp
dec
rcl
sahf
sbb
jno
mov
push
or
jecxz
push
adc
ljmp
je
aam
mov
inc
lahf
xchg
dec
testl
cmpsl
inc
loope
daa
fnstsw
pop
fdivrl
sub
jne
iret
xlat
pop
das
cwtl
dec
lods
addb
mov
jle
dec
mull
mov
mov
mov
mov
inc
daa
xchg
jp
mov
test
ficoml
sub
bound
in
xchg
and
xchg
inc
sub
inc
adc
jbe
ss
dec
mov
push
xchg
cltd
mov
stos
dec
jg
test
js
jge
and
sbb
dec
inc
outsl
jp
addr16
push
subb
js
add
jae
movsl
lock
nop
sbb
and
popf
inc
rcrl
dec
dec
rolb
cmp
dec
cmp
sbb
andl
jbe
test
and
sub
push
leave
test
pop
cmc
mov
lcall
std
movsw
or
mov
pop
stos
sub
pop
dec
add
in
es
notl
and
icebp
xchg
pop
out
jg
divl
inc
pushf
pop
daa
ret
push
xor
out
inc
add
or
clc
push
lret
lea
daa
xchg
dec
jle,pn
jmp
out
jl
pop
into
iret
sub
xchg
fmul
inc
cmp
ds
push
dec
jge
mov
add
arpl
jbe
sub
push
movsb
test
jne
test
pusha
sub
pusha
repz
xchg
fsts
stos
hlt
aaa
addr16
push
int3
lcall
psllw
rcrb
and
sbb
movsl
test
jle
leave
push
outsb
mov
add
rolb
or
xor
jae
je
jo
mov
aas
stos
sbb
mov
addb
sbb
loope
pop
call
adc
jae
pop
xchg
mov
pop
xchg
fnstsw
icebp
adc
push
ss
fwait
adc
sbb
js
shl
std
cmp
cld
cmp
xor
mov
ds
dec
addb
cmp
inc
arpl
jnp
outsl
inc
add
mov
scas
mov
andl
cmpl
rcr
ds
adc
lahf
or
cmp
xor
push
pop
imul
out
adcb
push
int
and
mov
mov
js
call
insl
sbb
sub
lcall
fadds
and
xchg
fwait
add
repnz
cmp
sbb
jg
orl
test
in
xchg
push
adcl
ret
lds
hlt
adc
ret
hlt
daa
loopne
jne
dec
adc
hlt
sbb
sub
clc
mov
inc
add
push
std
loop
in
dec
stc
sub
add
sub
jb
mov
xchg
scas
inc
mov
fstpt
into
pusha
or
pop
pop
repz
aam
outsl
xchg
or
pop
sti
mov
addr16
mov
clc
jns
bound
mov
mov
xchg
stc
cmp
lret
movb
cmp
dec
adc
push
stos
xor
pusha
adc
dec
mov
mov
ljmpw
iret
jns
mov
fistl
cmp
jle
pop
jbe
mov
xchg
nop
ljmp
jae
cmp
lea
fdiv
into
dec
js
imul
jns
push
lea
dec
test
mov
pop
sub
push
lcall
repz
sub
push
stos
pop
fstpl
add
pop
outsb
mov
data16
jo
imul
sti
mov
mov
sbb
pop
aam
mov
adc
push
jmp
mov
add
fdivl
or
xor
adc
jecxz
xchg
cmp
sub
pusha
lcall
mov
dec
mov
add
mov
imul
mov
push
mov
lret
push
jmp
in
scas
shl
mov
hlt
movsb
push
dec
cmc
fisubrs
ds
xchg
xchg
sub
mov
repz
shr
pop
push
add
outsl
sbb
out
xchg
ficoms
ss
out
adc
repnz
popf
leave
data16
sbb
nop
jl
push
mov
cmp
mov
sbb
shll
loopne
push
push
aam
hlt
outsb
sbb
dec
and
push
jmp
ds
cmp
push
arpl
cmp
ljmp
adc
fprem
shl
xchg
xchg
int3
xchg
xor
lods
out
pop
cmpsl
dec
adc
adc
cs
pop
ficoms
lods
lahf
mov
lret
or
add
inc
inc
popf
inc
lock
xor
pop
lods
fistps
sub
add
add
lahf
addr16
sahf
rcrl
xchg
add
loopne
sbb
test
xor
call
faddl
repnz
shl
into
add
xchg
jl
add
imul
mov
cltd
and
push
movsb
adc
das
pop
fcomps
icebp
outsl
shrb
icebp
out
inc
pop
push
cli
movsb
push
pusha
sub
pop
movsb
sbb
je
test
iret
push
sahf
or
pop
movsl
out
push
cmpsb
test
pushf
mov
adc
imul
stos
cmp
or
mov
dec
shll
jle
xchg
pop
inc
push
leave
inc
outsl
xchg
mov
mov
flds
hlt
popf
fdiv
bound
pusha
pop
scas
lcall
jl
bound
and
mov
mov
cwtl
fadd
cmp
dec
jp
clc
pushf
popf
ja
add
lods
out
or
push
mov
sbbl
or
add
sub
fmuls
insl
clc
jno
add
or
arpl
jle
stc
in
add
add
or
sbb
or
mov
or
movsb
mov
adc
xchg
popa
ret
inc
aam
and
dec
and
invd
test
out
pop
mov
sub
or
inc
test
inc
push
enter
xor
dec
movsb
and
inc
test
dec
fmuls
lahf
xor
lahf
mov
mov
or
mov
push
sbb
and
mov
in
add
sti
xchg
cwtl
jle
aaa
bnd
pop
xchg
jae
adc
popf
sub
dec
mov
cld
mov
addb
outsb
pop
add
cmp
out
xor
push
pop
mov
cmp
or
dec
sbb
adcl
fwait
add
gs
int
xor
and
add
dec
push
push
sbb
mov
repz
popl
jns
add
push
aas
insl
fimuls
mov
addr16
rcl
or
lret
adc
sub
jo
add
xlat
xchg
loop
and
hlt
mov
popa
inc
and
stos
pusha
outsl
jmp
dec
int3
enter
mov
fnstenv
push
outsl
stos
adc
rclb
sbb
lods
je
xor
dec
roll
rcrb
pusha
sub
xchg
mov
or
or
test
mov
repz
jmp
xchg
loop
icebp
aad
lret
push
jnp
int3
xchg
xchg
lea
aam
test
ljmp
mov
jns
jg
sub
xchg
xlat
push
mov
addr16
call
shlb
shrl
dec
test
xor
mov
negl
lock
cmp
ljmp
or
lds
lcall
sub
out
adc
pop
stos
cwtl
fisubl
mov
rcll
or
cltd
push
bound
jecxz
mov
out
fadd
int3
lahf
xchg
aad
sbb
inc
out
jmp
mov
pop
cmp
sub
or
iret
jge
pop
popa
cli
mov
outsb
popa
mov
out
notl
mov
lret
adc
adc
xor
inc
out
sbb
loope
mov
sbb
jbe
gs
sub
mov
sti
sti
inc
insb
popa
in
sbb
mov
xor
sub
jnp
and
jecxz
mov
fidivl
jbe
add
lret
jecxz
scas
xor
rorb
loopne
pop
je
mov
push
push
xchg
shl
pop
xor
mov
xchg
movsl
sub
sub
out
xchg
xlat
lock
mov
scas
das
cmp
pusha
je
sbb
ds
cmpsb
cmp
cwtl
push
dec
pusha
mov
clc
jp
sbb
push
ds
or
adcl
sub
jns
leave
mov
push
dec
jns
sbb
in
xchg
repnz
gs
jbe
jae
scas
ljmp
push
out
loop
xchg
arpl
or
stos
adc
dec
pop
sub
fisubrs
mov
jg
hlt
cmp
les
xchg
cmp
xchg
jecxz
xor
sbb
and
or
pop
push
mov
dec
mov
add
aas
pop
fldl
adc
dec
cmpsl
push
xchg
dec
add
test
jl
sbb
or
xor
sub
mov
fsts
or
cmpsb
ss
add
inc
les
loope
nop
or
xchg
push
popa
es
lock
xchg
jnp
inc
xchg
into
cmp
sbb
mov
xchg
sbb
mov
dec
mov
jmp
push
mov
or
test
dec
and
jge,pn
shll
push
mov
sub
mov
xor
inc
lahf
sbb
jmp
and
out
dec
xor
dec
jmp
pop
insl
lods
dec
cmp
test
dec
push
sub
orl
sbb
lea
cmpsl
mov
mov
sub
das
shrd
lcall
jne
add
addb
fcoml
test
cwtl
pop
mov
jne
xchg
lret
iret
sbb
jb
cmp
jge
push
in
jle
mov
cwtl
add
lret
push
leave
add
into
fs
pop
fstpt
cltd
push
test
fistl
sbb
push
cs
cmpsb
sbb
popa
pop
mov
mov
or
popf
xchg
fsubl
dec
xor
pushf
test
ret
out
cmp
inc
sti
xchg
mov
sbb
mov
insl
out
fwait
hlt
mov
inc
lock
fisttpll
lock
sbb
xchg
scas
cmovae
mov
ss
std
hlt
daa
mov
mov
mov
fisttpl
in
push
pushf
adc
inc
cmc
pop
add
loop
xchg
imul
cmpl
pusha
aad
test
lods
xchg
xor
int3
ja
loopne
mov
pushf
cmpsb
stos
je
pop
stc
mov
add
in
mov
arpl
push
inc
sbb
jns
jmp
pop
iret
iret
loopne
jle
sbb
fidivl
fistpll
push
ds
rcll
sbb
and
xchg
loope
push
lret
ds
insl
mov
ljmp
das
adc
cmp
adc
push
stc
in
repnz
mov
pop
frstor
mov
idiv
dec
insl
sbb
jecxz
in
xchg
aad
mov
out
or
testb
gs
jg
mov
aam
fidivs
out
sub
xor
sub
testl
jno
cmc
in
stc
fcom
push
gs
dec
aam
movsb
notb
adc
pop
add
dec
das
dec
xor
loope
jle
daa
pop
dec
jae
mov
mov
lret
cli
stc
mov
adc
fsubs
jns
and
rorl
in
jnp
call
mov
sub
outsl
cmp
loopne
jbe
xchg
je
push
hlt
push
mov
lods
cmpsl
int
in
shll
push
mov
jb
fcompl
sbbl
mov
jmp
test
inc
inc
dec
push
movsb
out
push
sub
push
ljmp
lcall
data16
dec
fs
mov
sub
mov
iret
mov
pop
sbb
jl
jle
std
inc
iret
inc
mov
pop
mov
jbe
shrl
out
cmpb
mov
jo
mov
fsubs
adc
popf
jle
cmp
mov
icebp
push
sub
adc
mov
jle
mov
ret
loopne
mov
loopne
icebp
movsl
push
push
shr
sbb
jge
ja
in
push
in
test
leave
test
shrb
cmpb
xorb
pop
stc
out
loope
fstpl
add
movsl
out
jnp
inc
repz
repz
dec
mov
or
mov
mov
xor
leave
xchg
idivl
dec
jp
xlat
xchg
stos
add
xor
jmp
xor
out
out
sub
adc
jl
jge
push
loopne
ja
mov
das
sbb
adc
push
jle
xchg
mov
fiaddl
shll
fists
into
mov
sbb
xchg
jp
fnsave
pushf
add
push
scas
loop
xor
mov
cli
lds
or
jg
call
xor
mov
stos
add
gs
scas
les
xchg
in
sub
idivb
test
hlt
dec
incb
into
in
js
add
ja
dec
ja
cmp
and
lock
lds
scas
stc
adc
daa
sahf
and
jnp
cmp
sbb
test
push
les
mov
push
push
and
mov
cmp
andl
pop
int3
xor
and
gs
negl
xor
loopne
mov
data16
iret
xchg
xor
pop
push
cwtl
lret
or
dec
jo
mov
or
pop
loope
int
sub
out
test
jbe
and
fcoms
in
push
cwtl
fcmovnbe
loopne
gs
mov
cltd
xchg
adc
lahf
aas
cld
sub
mov
lds
cmp
hlt
and
cmp
pop
push
cmp
stc
sub
push
jmp
aaa
sub
negb
sbb
rolb
pop
sahf
jle
xchg
jbe
rcrl
ret
mov
xchg
mov
xor
cld
push
test
cmp
pop
cli
es
sbb
xor
inc
push
xchg
jno
cmc
pushw
dec
in
mov
sti
cmp
adc
into
out
clc
xchg
pop
mov
pop
dec
fsts
mov
xlat
xor
fs
jns
andl
xor
xchg
ds
xchg
lods
dec
jns
xchg
mov
mov
push
mov
aas
xchg
ret
dec
cmp
stos
popa
add
pop
daa
fldenv
inc
lcall
movsl
loopne
fcomp
in
push
nopl
adc
adc
shlb
cmc
pop
in
pop
rcl
pop
mov
cmp
test
pop
idiv
and
popa
push
int
dec
fmulp
add
mov
xchg
sbb
ror
out
inc
or
xlat
addl
lds
pop
pop
dec
cli
notb
jle
push
cmpsl
mov
lea
add
add
aam
fcomp
dec
sub
ljmp
pop
loop
hlt
cmpl
call
cltd
dec
push
dec
cwtl
fcompl
inc
in
mov
push
dec
int
fsub
push
call
mov
push
mov
inc
out
outsb
mov
sbb
gs
shll
jle
add
sub
rcrb
push
in
sbb
jae
movsb
sar
sub
cs
adc
xchg
mov
xor
cld
sbb
repnz
pop
dec
sub
jno
scas
ret
icebp
or
lds
icebp
call
dec
xchg
dec
sbb
mov
push
xlat
ret
xor
sbb
pop
adc
jmp
and
push
mov
cmpsb
mov
sbb
xchg
adc
xchg
jmp
xor
mov
jmp
push
or
or
mov
or
pop
ret
add
repz
repz
mov
lods
xchg
sbb
adcl
movsl
jns
xchg
aam
jno
popa
sub
and
popf
add
pop
cmp
adc
imul
inc
sub
insb
inc
testl
pop
cmc
pop
jge
jg
push
js
jmp
call
jle
mov
push
cmp
aaa
out
add
out
cli
mov
andps
data16
nop
adc
cmp
push
mov
or
jle
daa
or
lods
jmp
shr
push
jp
sbb
bound
adc
sarb
ficompl
pop
movsb
insl
push
jg
xlat
xchg
ja
and
dec
jg
xorl
adc
out
cwtl
sbb
data16
nop
ret
push
push
les
mov
std
push
lods
adc
dec
insb
inc
xor
loope,pt
or
jb
mov
test
icebp
jmp
stos
xlat
iret
mov
repz
dec
je
test
jae
lods
jge
pop
sub
pushf
sbb
repz
push
fistl
cmp
lret
mov
orl
lcall
push
dec
fidivs
sbb
jge
pop
adc
add
rcl
repz
sbb
cmp
push
icebp
xchg
out
mov
xchg
cmc
push
sbbb
and
jmp
and
jge
inc
or
roll
push
push
xor
inc
mov
fwait
popf
jo
ss
adc
mov
aad
mov
and
fucomp
fs
aad
xchg
int
arpl
xor
fistl
push
mov
lds
fdivp
jl
or
dec
fucom
mov
fsubrl
