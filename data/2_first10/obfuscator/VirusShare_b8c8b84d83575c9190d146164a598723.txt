add
or
cwtl
push
add
add
add
enter
add
add
sub
add
test
add
fmuls
add
sbb
add
pop
or
orb
add
or
orb
add
pop
push
add
mov
add
add
add
test
add
mov
add
add
add
mov
add
add
add
add
add
nop
add
add
or
rcll
add
add
add
add
add
add
mov
out
add
and
add
add
add
pop
add
add
add
add
addb
add
cmp
add
pusha
add
addb
add
add
add
add
add
add
addb
add
add
add
mov
add
add
add
add
add
sub
add
call
add
add
add
add
add
add
add
push
add
add
or
xor
add
mov
add
add
add
add
add
js
add
push
or
add
mov
add
add
add
add
add
mov
push
or
xor
add
mov
add
add
add
add
add
enter
mov
add
add
add
add
add
add
add
lock
add
adc
add
add
mov
add
add
add
add
add
sbb
add
and
or
xor
add
mov
add
sbb
push
add
into
push
add
fimull
add
in
push
add
cld
push
add
or
add
sbb
add
sldt
xor
add
inc
sldt
dec
sldt
pop
sldt
jb
add
mov
add
movsb
sldt
mov
add
mov
add
add
loopne
add
testb
sbbb
add
inc
push
add
push
adc
adcb
add
dec
adc
and
add
or
add
xor
add
pop
pop
add
addb
addb
add
mov
add
add
add
add
add
cmp
add
push
adc
add
add
add
add
add
add
add
add
pusha
add
add
add
mov
add
add
add
add
add
mov
add
or
or
rolb
add
mov
add
add
add
add
add
mov
add
fcomps
or
rolb
add
mov
add
add
add
add
add
fadds
add
test
or
rolb
add
mov
add
add
add
add
add
add
add
or
rolb
add
mov
add
add
add
add
add
sub
add
or
rolb
add
mov
add
add
add
add
add
push
add
add
and
add
add
add
add
add
add
add
add
js
add
call
add
add
add
add
add
add
add
mov
and
add
add
add
add
add
add
add
add
enter
mov
add
mov
add
add
add
add
add
lock
add
or
loopne
add
mov
add
add
add
add
add
sbb
or
loopne
add
mov
add
add
add
add
add
inc
add
or
loopne
add
mov
add
add
add
add
add
push
sub
add
add
add
add
add
add
add
add
nop
add
or
rolb
add
add
add
add
add
add
mov
sub
add
add
add
add
add
add
add
add
loopne
add
dec
sub
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
xor
add
call
add
add
add
add
add
add
add
pop
push
add
shrb
add
mov
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
test
add
pusha
das
or
rolb
add
mov
add
add
add
add
add
rolb
add
xor
or
rolb
add
mov
add
add
add
add
add
clc
push
add
add
or
rolb
add
mov
add
add
add
add
add
and
add
shlb
or
rolb
add
mov
add
add
add
add
add
dec
pop
add
mov
add
add
add
add
add
add
add
jo
add
jo
or
loopne
add
mov
add
add
add
or
add
xor
add
add
add
add
add
push
add
add
add
pop
add
adc
add
cmp
add
pusha
or
addb
add
mov
add
mov
add
add
add
add
add
add
add
outsb
xchg
or
test
add
mov
add
add
add
add
add
sub
add
push
mov
add
mov
add
add
add
add
add
push
or
add
add
add
mov
add
add
add
add
add
js
add
es
or
sub
add
mov
add
add
add
add
add
mov
scas
or
call
add
add
add
add
add
add
add
enter
ss
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
add
add
or
add
xor
push
add
add
add
add
adc
lock
mov
add
fmuls
add
add
add
sub
add
push
or
xor
add
js
add
mov
sldt
enter
clc
sldt
lock
cmp
add
sbb
add
inc
or
cmp
add
push
sldt
nop
or
cmp
add
mov
sldt
loopne
add
or
addb
add
xor
addb
add
mov
add
add
add
add
add
enter
test
jo
add
mov
add
add
add
add
add
lock
add
pop
or
loopne
add
mov
add
add
add
add
add
sbb
add
aam
or
cwtl
add
add
add
add
add
add
add
inc
or
add
add
add
mov
add
add
add
add
add
push
popa
or
pushf
add
add
add
add
add
add
add
nop
or
add
or
loopne
add
mov
add
add
add
add
add
mov
or
sub
add
mov
add
add
add
add
add
loopne
add
insb
or
nop
add
add
add
add
add
add
add
or
add
cld
push
add
mov
add
add
add
add
add
xor
add
and
add
add
add
add
add
add
add
add
pop
or
add
add
add
add
add
add
add
add
orb
add
add
add
mov
add
add
add
add
add
test
add
cwtl
jbe
add
add
add
add
add
add
add
add
rorb
add
test
add
add
mov
add
add
add
add
add
clc
or
add
jns
add
add
add
add
add
add
add
add
and
add
add
mov
add
add
add
add
add
dec
or
add
add
add
mov
add
add
add
into
adc
addb
add
hlt
adc
adc
add
mov
add
add
add
add
add
cwtl
or
add
orl
adc
add
mov
add
add
add
add
add
rorb
cmp
add
mov
add
add
add
add
add
call
xchg
add
xchg
add
mov
add
add
pop
add
jg
add
add
push
jg
add
jg
add
jg
add
or
add
or
add
xor
add
mov
add
add
add
add
add
pop
or
or
adc
add
mov
add
add
add
add
add
orb
add
add
mov
add
add
add
add
add
test
add
push
add
add
add
add
add
add
add
rorb
or
adc
add
mov
add
add
add
add
add
clc
or
or
adc
add
mov
add
add
add
add
add
and
add
movsb
sbb
add
add
mov
add
add
add
add
add
dec
push
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
adc
or
pop
add
add
add
pop
add
inc
add
dec
add
add
inc
add
inc
add
add
inc
add
push
add
push
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
add
add
dec
add
or
inc
add
add
inc
add
add
dec
add
add
or
add
push
add
dec
add
add
dec
add
add
or
inc
add
inc
add
push
add
add
dec
add
push
add
dec
add
push
add
pop
add
dec
add
push
add
add
dec
add
push
add
inc
add
dec
add
pop
add
inc
add
add
push
add
or
dec
add
inc
add
inc
add
dec
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
push
add
dec
add
add
inc
add
add
push
add
add
inc
add
add
push
add
add
or
push
add
dec
add
inc
add
add
pop
add
inc
add
dec
add
dec
add
add
inc
add
dec
add
dec
add
add
push
add
add
inc
add
dec
add
dec
add
add
or
push
add
dec
add
dec
add
dec
add
dec
add
add
add
inc
add
add
dec
add
dec
add
dec
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
push
add
xor
or
dec
add
dec
add
dec
add
dec
add
add
add
push
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
add
adc
adc
add
add
sub
add
add
and
adc
add
add
call
add
xor
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
incl
add
addb
addb
rol
add
fadd
add
lret
inc
addb
incl
add
add
add
incl
add
incl
addl
addl
add
xor
add
data16
add
add
xor
add
xor
add
incl
add
add
incw
add
int3
add
add
add
add
xor
cltd
add
add
add
xor
add
xor
add
xor
xor
cltd
add
xor
add
xor
add
data16
cwtd
add
add
incw
xor
xor
xor
cltd
add
cltd
int3
add
cltd
incl
xor
xor
xor
cltd
add
int3
int3
add
int3
incl
xor
incl
data16
add
add
xor
add
data16
cltd
add
incl
data16
data16
data16
cltd
add
int3
add
add
cwtd
xor
cwtd
data16
cltd
add
int3
add
incl
data16
xor
data16
cltd
add
int3
add
add
xor
dec
add
xor
add
xor
cltd
xor
cltd
cwtd
add
cltd
xor
cltd
cltd
data16
cltd
int3
add
int3
add
cltd
int3
xor
data16
data16
int3
int3
add
int3
data16
incl
int3
add
add
xor
int3
xor
add
xor
cltd
data16
cwtd
add
data16
add
cltd
add
int3
cltd
xor
int3
cltd
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cltd
add
int3
int3
add
int3
incl
int3
incl
add
pushl
add
lcall
add
incl
pushl
xor
pushl
data16
data16
jmp
add
data16
cwtd
add
data16
add
cltd
add
lcall
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
dec
add
dec
xor
dec
data16
int3
cltd
add
int3
int3
add
int3
incl
pushl
add
lcall
add
incl
data16
incl
jmp
rol
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
incl
movsb
mov
addb
add
add
incl
add
add
add
incl
add
incl
jge
add
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
add
add
incl
fwait
inc
lcall
lcall
lcall
lcall
jmp
incl
ss
lcall
jmp
lcall
lcall
lcall
jmp
and
and
cmpsl
ss
ss
lcall
pop
js
pushf
pushf
pushf
pushf
dec
ss
inc
xor
lcall
jmp
popf
popf
dec
ss
ss
jmp
lcall
ss
popa
popa
popa
popa
dec
ss
jmp
lcall
popa
dec
inc
add
sub
ss
lcall
jmp
xor
xor
ss
popa
dec
dec
xor
add
dec
ss
xor
xor
jmp
ss
fs
dec
xor
add
xor
ss
jmp
popa
popa
popa
popa
ss
or
dec
xor
add
ss
inc
inc
inc
jmp
mov
ss
dec
dec
xor
add
ss
jmp
mov
ss
dec
dec
xor
add
ss
jmp
add
ss
or
dec
xor
add
dec
dec
ss
and
jmp
add
js
dec
dec
xor
add
fwait
inc
ss
jmp
add
mov
or
dec
xor
add
fwait
and
popa
xor
jmp
fwait
fwait
fwait
add
mov
pusha
dec
xor
fwait
and
jmp
mov
mov
dec
dec
dec
pop
fwait
and
jmp
mov
mov
or
dec
inc
fwait
and
jmp
mov
mov
dec
dec
dec
js
and
jmp
mov
mov
js
js
fwait
and
jmp
popf
add
js
js
js
js
and
jmp
js
mov
lahf
lahf
lahf
lahf
lahf
lahf
js
and
jmp
add
js
js
js
js
fwait
and
jmp
mov
mov
lahf
lahf
lahf
js
and
jmp
inc
inc
inc
pushf
mov
js
js
js
and
jmp
mov
mov
js
js
fwait
and
jmp
mov
mov
mov
and
jmp
mov
mov
mov
lcall
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
incl
inc
xchg
incl
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
loopne
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
incl
add
addb
addb
rol
add
fadd
add
lret
inc
addb
incl
add
add
add
incl
add
incl
addl
addl
add
xor
add
data16
add
add
xor
add
xor
add
incl
add
add
incw
add
int3
add
add
add
add
xor
cltd
add
add
add
xor
add
xor
add
xor
xor
cltd
add
xor
add
xor
add
data16
cwtd
add
add
incw
xor
xor
xor
cltd
add
cltd
int3
add
cltd
incl
xor
xor
xor
cltd
add
int3
int3
add
int3
incl
xor
incl
data16
add
add
xor
add
data16
cltd
add
incl
data16
data16
data16
cltd
add
int3
add
add
cwtd
xor
cwtd
data16
cltd
add
int3
add
incl
data16
xor
data16
cltd
add
int3
add
add
xor
dec
add
xor
add
xor
cltd
xor
cltd
cwtd
add
cltd
xor
cltd
cltd
data16
cltd
int3
add
int3
add
cltd
int3
xor
data16
data16
int3
int3
add
int3
data16
incl
int3
add
add
xor
int3
xor
add
xor
cltd
data16
cwtd
add
data16
add
cltd
add
int3
cltd
xor
int3
cltd
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cltd
add
int3
int3
add
int3
incl
int3
incl
add
pushl
add
lcall
add
incl
pushl
xor
pushl
data16
data16
jmp
add
data16
cwtd
add
data16
add
cltd
add
lcall
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
dec
add
dec
xor
dec
data16
int3
cltd
add
int3
int3
add
int3
incl
pushl
add
lcall
add
incl
data16
incl
jmp
rol
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
incl
movsb
mov
addb
add
add
incl
add
add
add
incl
add
incl
jge
add
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
add
add
incl
inc
lcall
fwait
inc
fwait
lcall
lcall
incl
inc
lcall
lcall
fwait
inc
ss
lcall
jmp
and
and
xor
inc
fwait
xor
inc
lcall
js
pushf
pushf
pushf
dec
ss
jmp
lcall
popa
popa
dec
ss
jmp
inc
inc
ss
dec
inc
add
dec
ss
jmp
xor
ss
fs
dec
xor
pop
dec
ss
jmp
ss
fs
dec
xor
sub
ss
inc
inc
jmp
pop
xor
ss
dec
xor
sub
sub
jmp
xor
dec
xor
sub
xor
and
jmp
popa
ss
pusha
fs
dec
xor
sub
ss
jmp
mov
dec
dec
xor
sub
jmp
inc
add
mov
xor
lcall
jmp
mov
fs
dec
inc
lcall
jmp
mov
mov
lcall
jmp
mov
js
js
js
and
jmp
add
lahf
lahf
lahf
js
and
jmp
popf
mov
js
js
lcall
jmp
mov
lahf
lahf
lahf
lahf
js
and
jmp
inc
pushf
mov
js
js
and
jmp
mov
mov
lcall
jmp
mov
mov
mov
decl
aas
jmp
mov
jmp
add
cld
add
pop
cld
add
jg
add
pop
cld
add
paddb
add
cld
add
pop
cld
add
jg
add
aas
cld
add
aas
cld
add
jg
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
addb
addb
rol
add
fadd
add
lret
inc
addb
incl
add
add
add
incl
add
incl
addl
addl
add
xor
add
data16
add
add
xor
add
xor
add
incl
add
add
incw
add
int3
add
add
add
add
xor
cltd
add
add
add
xor
add
xor
add
xor
xor
cltd
add
xor
add
xor
add
data16
cwtd
add
add
incw
xor
xor
xor
cltd
add
cltd
int3
add
cltd
incl
xor
xor
xor
cltd
add
int3
int3
add
int3
incl
xor
incl
data16
add
add
xor
add
data16
cltd
add
incl
data16
data16
data16
cltd
add
int3
add
add
cwtd
xor
cwtd
data16
cltd
add
int3
add
incl
data16
xor
data16
cltd
add
int3
add
add
xor
dec
add
xor
add
xor
cltd
xor
cltd
cwtd
add
cltd
xor
cltd
cltd
data16
cltd
int3
add
int3
add
cltd
int3
xor
data16
data16
int3
int3
add
int3
data16
incl
int3
add
add
xor
int3
xor
add
xor
cltd
data16
cwtd
add
data16
add
cltd
add
int3
cltd
xor
int3
cltd
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cltd
add
int3
int3
add
int3
incl
int3
incl
add
pushl
add
lcall
add
incl
pushl
xor
pushl
data16
data16
jmp
add
data16
cwtd
add
data16
add
cltd
add
lcall
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
dec
add
dec
xor
dec
data16
int3
cltd
add
int3
int3
add
int3
incl
pushl
add
lcall
add
incl
data16
incl
jmp
rol
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
incl
movsb
mov
addb
add
add
incl
add
add
add
incl
add
incl
jge
add
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
add
add
lcall
lcall
inc
lcall
and
cmpsl
xor
pushf
ss
js
pushf
dec
xor
ss
jmp
ss
sub
ss
lcall
ss
dec
add
ss
jmp
ss
add
ss
jmp
ss
add
ss
and
jmp
js
dec
add
inc
ss
jmp
js
or
sub
jmp
lahf
lahf
dec
js
and
jmp
js
js
fwait
and
jmp
lahf
lahf
lahf
js
and
jmp
js
js
fwait
and
jmp
mov
and
jmp
mov
lcall
add
addb
add
add
add
pop
add
addb
add
ud0
orb
add
sldt
orb
add
ud0
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
mov
add
xchg
add
add
xchg
xor
mov
mov
js
or
repz
xchg
xor
js
cmp
add
xor
lock
xchg
add
js
cmp
lock
xchg
xor
add
xchg
jg
ja
add
ja
add
ja
add
ja
add
mov
add
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
xor
add
xor
add
add
add
add
add
xor
add
xor
add
add
add
add
add
cmp
xor
xor
add
add
or
xor
aas
xor
add
add
or
or
add
repz
lock
add
add
jo
xor
mov
add
add
add
or
xor
lock
or
add
add
add
or
mov
add
add
or
cmp
clc
testl
or
add
or
mov
mov
add
or
add
clc
testl
or
aas
mov
mov
add
or
cmp
or
mov
or
add
add
add
ja
add
js
mov
or
add
ja
psubb
testl
add
add
ja
add
mov
add
add
or
maskmovq
testl
add
add
add
or
ud0
ja
add
add
add
add
ja
add
pop
divl
add
add
add
add
ja
mov
add
add
add
add
ja
ja
ja
ja
add
add
add
add
mov
mov
add
decl
jmp
push
jg
ret
or
inc
add
clc
add
pop
clc
add
psubb
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
psubb
add
clc
add
aas
clc
add
aas
clc
add
aas
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
ljmp
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
mov
or
add
add
add
add
ja
add
xor
ja
add
ja
ja
ja
mov
jae
pop
jo
add
ja
ja
ja
mov
add
add
xor
add
pushl
xor
mov
add
jo
cmp
xor
add
repz
ja
incl
xor
movswl
xor
add
add
add
add
add
add
sti
sti
sti
sti
xor
xor
add
add
add
add
add
aas
mov
mov
xor
add
add
add
add
cmp
sti
lock
js
or
sti
lock
add
add
add
ja
add
xor
mov
lock
add
add
add
ja
mov
js
or
add
ja
ja
ja
aas
mov
mov
add
ja
sti
repz
js
cmp
add
ja
ja
ja
mov
add
add
add
add
ja
pushl
add
add
ja
ja
jg
jg
pushl
add
add
jg
jg
js
xchg
add
ja
pop
movq
ja
js
js
add
ja
pushl
ja
ja
js
js
add
ja
push
jg
jg
ja
pop
js
add
ja
add
jg
jg
ja
pop
js
add
ja
mov
incl
js
add
ja
ja
ja
ja
ja
ja
add
add
ja
ja
ja
ja
add
add
ja
ja
ja
ja
add
add
incl
add
mov
mov
mov
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
rolb
pop
incl
add
rolb
pop
incl
add
rolb
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
rolb
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
rolb
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
pop
incl
add
rolb
pop
incl
add
rolb
pop
incl
add
rolb
pop
incl
add
rolb
pop
incl
add
rolb
pop
incl
add
rolb
pop
incl
add
rolb
pop
incl
add
rolb
pop
incl
add
rolb
pop
incl
add
rolb
pop
incl
add
rolb
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
int3
fstl
jl
jecxz
cmc
fwait
in
jbe
ljmp
jge
fs
aad
repz
scas
seto
ficoml
or
or
and
sbb
adcl
inc
in
push
fs
into
or
fistpl
or
mov
cltd
inc
in
jg
xor
mov
push
in
mov
dec
and
jno,pt
jae
hlt
addr16
dec
stos
fwait
out
shlb
mov
inc
imul
adc
sbb
ja
add
pop
repz
jle
pusha
push
fnstenv
xchg
inc
add
xor
fsubrs
adc
cld
decb
inc
stc
fcomps
out
icebp
lret
out
nop
je
add
dec
sbb
js
pop
push
popf
out
add
sub
mov
push
test
pushf
sub
inc
int3
pop
mov
sub
xor
push
mov
cwtl
jle
fsts
bound
cmp
stos
lret
movsl
mov
out
mov
lahf
scas
test
cmp
in
push
xor
mov
push
dec
inc
clc
enter
adc
and
dec
mov
add
adcl
add
push
and
scas
cmp
jnp
xchg
push
inc
movsb
mov
jns
mov
sbb
jg
mov
subl
sarb
loopne
adc
mov
pop
nop
aaa
test
cld
or
pop
jl
lods
sbb
push
and
aad
or
cmp
jae
dec
sbb
adc
mov
test
add
lret
inc
mov
repnz
pushf
mov
sub
sbb
jbe
xor
push
in
insl
std
dec
lods
ret
or
pop
daa
inc
jl
dec
xor
hlt
ficomps
lret
jnp
cli
popa
fcoml
hlt
test
adc
pop
xor
repnz
and
jecxz
or
jae
sahf
jge
sub
mov
je
hlt
or
hlt
mov
jg
fldt
pop
jecxz
test
mov
jmp
mov
inc
jbe
aam
push
push
into
sbb
xorl
cld
in
jns
fnsave
shll
scas
cmp
push
fstps
xchg
mov
pop
mov
jecxz
mov
gs
push
pop
adc
dec
int3
ljmp
or
stos
jae
pushf
test
add
lds
int3
jmp
ret
jbe
jno
mov
push
xchg
dec
imul
xchg
or
inc
pop
ficomps
fldl
fstl
pop
imul
mov
or
mov
or
mov
iret
adc
xor
stc
lock
sub
push
call
push
push
aas
cs
mov
add
std
mov
and
pop
in
dec
rorl
bound
push
hlt
andb
push
pushf
gs
mov
sbb
pop
subb
xchg
outsb
nop
shlb
cmp
arpl
movsl
push
rolb
mov
sub
js
popf
adc
dec
repnz
jecxz
iret
test
or
xchg
outsb
loop
inc
sbb
push
mov
stos
negl
xor
or
leave
jne
je
leave
fistpll
xchg
lds
gs
insb
popf
insb
mov
out
leave
xor
rcll
mov
mov
call
loop
in
int
data16
clc
add
fldl
jmp
js
adc
or
ds
push
add
jnp
xchg
imul
fidivrs
jns
int3
incb
pop
adc
sbb
iret
cwtl
sub
push
dec
adc
mov
mov
mov
dec
popf
push
add
fmuls
cmp
insb
into
pop
scas
push
or
xchg
fnstcw
out
sbb
jnp
xor
jns
decl
std
cmpsl
cmpsl
pop
inc
sar
outsb
xor
sbb
leave
aam
out
pop
push
scas
test
add
lea
mov
push
mov
lods
cmp
dec
je
and
xchg
bound
movsl
movsl
bound
mov
push
aaa
mov
popl
in
adc
cmp
js
jbe
fstpt
in
add
mov
je
stos
cld
stos
mov
ljmp
jmp
ret
addr16
shlb
pop
cmpsb
add
or
aad
arpl
lret
push
jnp
out
fstps
pop
shlb
movsb
ret
shr
ja
leave
inc
mov
dec
xchg
adc
orl
rolb
sbb
out
pop
popa
xchg
inc
adc
and
mov
jle
subb
xor
outsl
dec
or
iret
jns
ljmp
in
xchg
les
outsl
dec
dec
fwait
cmp
lea
mov
mov
loope
xchg
jg
cmp
xchg
mov
mov
popa
inc
outsb
pop
fwait
mov
push
cwtl
int3
jno
ja
repnz
adc
test
xor
imul
aas
mov
sub
push
pop
xchg
sarl
gs
testb
mov
rcl
jle
test
jo
loop
xor
add
mov
push
adc
adcb
or
pop
test
mov
cmpsb
xor
sarb
jp
js
xor
fs
fs
ficoml
repz
push
cmp
out
sbb
cmpsl
jne
out
jae
mov
sbbb
addl
addr16
out
ds
jns
xor
sbb
mov
cmp
xchg
or
inc
sarl
pop
cmp
subl
mov
movsl
jo
pusha
fmul
inc
or
jns
sub
popa
cmp
ljmp
fistl
dec
inc
test
sub
outsl
out
in
mov
pop
cmc
mov
das
add
outsl
data16
adc
mov
mov
jo
dec
js
mov
add
test
or
inc
xchg
lcall
dec
mov
dec
adc
mov
js
popf
adc
adc
imul
bound
sbb
cltd
aas
and
movsl
mov
popa
sbb
xchg
int
dec
push
loopne
jns
adc
push
cwtl
addr16
lret
int3
nop
fsubs
push
popf
outsb
jne
cmp
gs
test
test
popa
push
xor
sub
push
pop
pop
dec
push
and
pop
pop
loope
and
dec
sbb
push
sub
and
scas
sbb
sbbl
test
mov
es
lret
jbe
testl
cmp
fs
in
dec
sbb
adc
or
cmp
push
lds
mov
cmp
sbb
ds
adc
dec
or
mov
std
dec
cld
scas
nop
push
jnp
sahf
rcll
ljmp
lock
mov
repz
mov
mov
orl
xchg
loopne
xor
fmuls
pop
sahf
int
rcll
mov
mov
into
mov
jne
jmp
add
and
fwait
cmp
iret
roll
mov
cmp
es
mov
xchg
dec
and
fstpt
cwtl
adc
jmp
inc
sub
ss
hlt
sar
and
jbe
ret
iret
mov
cmp
div
gs
pop
sub
mov
add
imul
lcall
xchg
cmp
imul
pop
jg
mov
jb
mov
or
repz
push
fcmovu
cmpsl
xor
fscale
call
enter
push
mov
pop
leave
inc
pop
aam
fildl
adc
divb
call
out
aam
fs
pop
ss
push
daa
aad
addl
push
mov
les
insl
inc
push
icebp
aas
pusha
cs
or
cmpsb
lcall
outsl
rorb
lods
fcomps
pop
push
mov
sbb
out
stos
mov
add
int
push
xor
ffreep
in
mov
xorl
lret
lock
sbb
add
and
add
sbb
lods
rcrb
mov
and
xor
daa
xchg
inc
ficoms
outsb
rcrb
jns
ja
xchg
test
cmp
test
insl
xchg
popf
mov
adc
push
or
mov
dec
fstl
pop
adc
jl
and
cmp
iret
xlat
dec
push
ficoms
stos
shr
xor
pop
pop
mov
int
pop
pop
and
cmp
adc
cmpsb
mov
mov
outsl
xchg
xchg
iret
aad
or
lds
mov
pusha
out
jne
repnz
mov
jge
test
jmp
cli
test
sbb
rorb
adc
insl
outsb
in
cwtl
repz
in
jnp
outsl
jb
sub
rcl
in
mov
fistpl
call
jns
pushf
stc
adc
jae
mov
add
jl
aam
cs
mov
movsb
fnstenv
sbb
and
jb
mov
loop
adc
xchg
inc
cmp
jne
sub
push
push
jnp
xchg
out
fwait
mov
and
cs
popa
loope
xchg
filds
and
call
or
sub
aad
test
fucomp
int3
std
pop
dec
outsl
das
andl
push
jg
addl
out
push
aaa
sbbb
loope
cmp
jecxz
pminsw
mov
imul
push
addl
repz
shll
loope
inc
addr16
pop
jp
stos
repnz
icebp
test
repnz
aaa
iret
pop
adc
loope
xor
cs
icebp
gs
sahf
jmp
jecxz
xchg
cmp
cmc
sub
sub
mov
insb
sbb
fdivs
lods
in
stos
fwait
cli
out
stc
mov
mov
scas
mov
roll
neg
dec
lcall
add
mov
sti
sbb
scas
jmp
pop
cmp
inc
inc
sub
pop
es
cmp
mov
sub
adc
pop
xor
mov
fcmovnu
xchg
fisttpll
pop
fidivs
ds
inc
push
jp
imul
lahf
xor
push
xorl
shld
sbbb
leave
repnz
aad
inc
push
outsl
or
xchg
int
pop
stos
adc
test
or
std
cmpsl
ss
pop
and
jb
xor
push
mov
dec
outsl
insb
inc
repnz
xchg
sub
sahf
pop
pop
sub
mov
fisttpl
cmp
xor
loope
and
jae
adc
add
pop
mov
movsl
adc
mov
je
mov
loope
xchg
or
cmc
xor
repnz
jge,pt
rcll
out
imul
sbb
dec
pop
inc
jecxz
addr16
rcll
xchg
or
inc
testb
or
xorl
pop
lcall
or
jnp
lds
shll
pop
popa
sub
or
outsl
and
xchg
imul
fldenv
repnz
lock
inc
aaa
sti
or
loop
repnz
jnp
rorb
mov
inc
jae
mov
pop
repz
and
jo
popa
cmp
jp
dec
cli
mov
pushf
fisubl
cmp
mov
add
iret
fimull
ss
pop
xchg
rcrl
pop
sbb
rcl
aad
aad
cwtl
ret
inc
stos
dec
mov
call
pop
dec
cmp
fildl
fildl
shll
mov
inc
aas
ljmp
popa
and
push
movsb
sahf
std
aad
add
test
inc
add
movsb
pop
sbb
mov
or
or
pop
add
test
enter
orl
les
push
in
movsb
fcompl
fldcw
imul
arpl
sub
fisubrs
ss
mov
outsl
add
test
dec
insl
outsl
push
hlt
dec
mov
bound
cwtl
nop
aaa
jle
fldt
std
or
cmp
inc
std
dec
icebp
mov
and
les
pop
divps
scas
or
insb
dec
lahf
leave
js
mov
outsl
aad
nop
push
and
mov
cmpsl
or
jle
lods
fsts
sahf
adc
jmp
popf
jmp
add
lea
in
jo,pt
mov
sbb
add
jp
arpl
sub
out
std
dec
stc
lcall
push
in
cltd
mov
adc
daa
inc
test
jl
testb
test
orb
fndisi(8087
aad
mov
jbe
xor
pop
aaa
lods
repnz
inc
testl
in
push
adc
and
cmpsl
cmp
push
pop
cmp
hlt
inc
and
push
clc
mov
mov
shlb
movsl
push
sbb
cmc
std
js
jbe
sbb
arpl
insb
inc
mov
fcmovne
lahf
push
cmpsl
dec
jo
cltd
sub
jno
mov
js
cmp
cmp
mov
loope
push
pushf
cmp
faddl
mov
and
push
in
cmp
out
sbb
sub
out
sub
cmp
mov
dec
xlat
outsl
mov
xor
dec
sub
inc
out
loope
sub
scas
xchg
sbb
imul
stos
or
nop
pushf
sbb
cmp
push
outsl
xchg
cmp
sbb
les
cmp
fdivrl
jno
clc
sbb
mov
and
jb
int3
and
std
mov
pop
adc
inc
fdivrs
sbb
and
out
loopne
dec
call
mov
mov
outsb
cltd
mov
ds
jecxz
add
jae
popf
cmp
xor
ss
inc
rol
scas
sarl
mov
popf
scas
movsl
sub
xchg
int
or
loopne
push
test
or
test
pop
or
dec
rorb
test
or
inc
cmc
sti
cli
jbe
movsb
orb
sub
jo
mov
imul
rcrb
aam
daa
push
rorl
es
lea
jge
add
sbb
xchg
test
data16
and
sahf
push
pop
stos
cmp
cmc
loop
enter
out
pop
or
adc
mov
sbb
sbb
xchg
clc
mov
sub
xor
cmp
cmp
pop
jae
cmp
cwtl
sahf
xchg
mov
mov
decl
pop
testb
movsb
into
xchg
fildl
cltd
add
sub
dec
stos
xchg
cld
lods
xchg
cmpsb
test
xor
or
test
arpl
ja
jno
push
js
and
and
pop
rorb
mov
fsubrl
dec
push
lods
test
mov
je
push
mov
jbe,pt
push
sbb
out
mov
out
push
xchg
fsts
out
cltd
pop
mov
fld
dec
ja
adc
test
dec
insl
sub
cld
dec
arpl
cmp
aas
sub
out
xlat
loope
lods
cli
mov
inc
mov
clc
enter
adc
dec
jg
adc
lds
cmp
mov
rcr
cmp
jb
push
int3
mov
jmp
push
or
jl
jle
lds
jno
scas
out
mov
mov
xor
call
pop
lods
bound
jae
dec
mov
dec
mov
push
mov
mov
mov
push
addb
sub
xchg
sahf
dec
push
mov
addr16
mov
cli
ffreep
das
mov
pop
rdmsr
into
mov
int3
inc
cltd
jno
lcall
xor
jge
adc
insl
add
inc
mov
inc
das
scas
jbe
daa
mov
sti
mov
mov
subl
add
sahf
mov
adc
ja
imul
inc
cs
xchg
cmp
push
pop
jnp
scas
mov
and
aaa
sbb
in
add
pop
gs
adc
adc
xchg
xor
aas
and
testb
loope
lret
cmpsb
mov
sbb
add
lods
pop
lret
jge
and
adc
jno
mov
adc
jne
sti
std
xor
imul
cli
and
dec
in
gs
out
mov
and
ds
aas
call
pop
out
and
or
cmp
pop
push
xor
stos
leave
dec
push
out
fsincos
insb
mov
int3
pop
insb
cld
or
push
add
adc
adc
rol
add
lds
adc
xor
push
out
xchg
xlat
out
movsl
cli
out
push
inc
fisttpll
lods
inc
data16
jae
xchg
aad
mov
sub
dec
mov
outsl
negl
mov
push
enter
or
add
pop
sbbl
sub
fldl
dec
inc
iret
pop
lea
incb
addl
test
shlb
je
xor
outsb
rcrl
pop
mov
test
test
mov
push
xchg
in
incb
cmp
jae
mov
sbbl
push
call
in
cmp
lahf
pop
in
subb
shlb
mov
notb
xor
cmc
mov
xchg
adc
push
xchg
mov
popa
pop
aam
inc
mov
lds
int3
xor
jecxz
test
xlat
push
mov
sbb
std
push
fmul
inc
xchg
pop
jge
stos
data16
clc
js
ret
negl
repz
fucom
mov
or
test
mov
out
mov
or
jg
mov
mov
je
pop
pop
sbb
repnz
aad
icebp
aaa
or
pop
lret
stc
lahf
xchg
aaa
addr16
push
je
aaa
jmp
pop
mov
sbb
loop
mov
out
push
arpl
xchg
orb
pop
out
aas
add
int3
pusha
push
mov
push
jno
sbb
sbb
fisubrs
inc
mov
ret
ljmp
iret
addl
xchg
xchg
mov
pop
movsb
shrl
mov
adc
stos
std
stc
jae
es
jno
in
sbb
and
pop
in
xchg
pmulhuw
in
add
lods
push
das
inc
mov
or
mov
inc
adc
dec
int3
mov
and
imul
les
fucom
xchg
lret
sbb
pop
cmpsb
cltd
lods
jmp
repz
xchg
cmp
mov
inc
pusha
jmp
out
sub
daa
push
ja
xor
scas
cmp
sti
cmp
pop
loope
sarl
aam
mov
out
sub
mov
pop
cli
test
repz
insb
aas
sub
jnp
out
outsb
jae
in
sub
or
jbe
cld
xchg
jae
cld
int3
iret
push
pop
mov
cltd
movsl
push
int3
jns
imul
int
pop
aas
lret
mov
cmp
aad
out
and
mov
jl
outsl
leave
ret
nop
push
push
add
push
jle
popf
movsb
imul
dec
enter
sbb
sbb
xchg
lea
outsb
and
cmpsb
mov
adc
out
je
or
jns
imull
push
jp
test
pop
xchg
lret
or
out
add
pop
mov
pop
adc
lret
stc
mov
inc
lea
mov
cmpl
mov
mov
std
cs
xchg
add
add
orb
mov
popw
outsl
out
jae
adc
int3
push
jg
enter
sub
push
sbb
std
fldcw
push
cmp
popf
or
sub
stos
cmp
stos
into
or
outsb
hlt
fdiv
add
cwtl
push
mov
scas
lds
mov
cmp
outsl
outsb
xor
add
pusha
jbe
cmp
loope
mov
mov
xor
lods
pop
jne
loope
imul
mov
or
jp
fs
in
and
push
pop
ja
addr16
in
add
leave
push
mov
loop
xchg
dec
inc
mov
sub
arpl
andl
aam
xchg
lds
adc
adc
in
pop
pop
arpl
push
stc
arpl
out
sti
dec
fstps
dec
jnp
or
mov
es
aam
jle
inc
inc
call
enter
jp
test
in
jbe
fisttps
or
dec
and
fs
lods
insl
add
test
iret
mov
adc
loope
or
sti
fnstenv
lret
cld
int3
incb
xchg
or
pop
mov
xchg
mov
push
in
out
push
insb
xchg
mov
sbb
jns
js
add
ljmp
adc
test
xor
insb
dec
xchg
xchg
xor
mov
cwtl
decl
and
ja
pop
cmpsb
add
push
sti
dec
scas
imul
aas
imul
mov
xor
mov
sarb
mull
pop
jbe
jecxz
dec
cmp
push
cltd
ror
and
test
cmp
push
fcomp
in
lret
pop
fmull
out
add
jmp
in
and
pop
inc
mov
dec
cmpsl
div
or
popa
imul
inc
shrb
lods
adc
std
repz
mov
adc
mov
xchg
cmpsl
sub
shlb
sbb
popa
stos
insl
ss
lock
xor
andb
or
das
cs
xchg
xor
jle
out
sub
or
xlat
pusha
fdivs
sbb
lds
mov
mov
push
imul
mov
sbb
int
mov
mov
xor
cld
aad
pop
subb
push
xor
dec
divb
test
fcoms
cmpsl
push
fidivrs
push
hlt
outsb
mov
inc
mov
stos
mov
mov
fnstenv
fcmovb
shl
loopne
cli
mov
jne
adc
xlat
push
inc
mov
aam
inc
adc
push
dec
cltd
fmul
lret
inc
sbb
push
std
sub
add
ja
insl
push
into
rcr
dec
jle
mov
push
mov
ds
jge
mull
mov
sarl
nop
fs
or
cmpsb
mov
outsl
jmp
xchg
sti
clc
xor
into
dec
cmp
inc
cld
xor
inc
dec
push
loope
sbb
pushf
ret
dec
jne
xchg
or
loop
mov
dec
negb
lcall
add
pop
sti
xchg
insl
mov
mov
push
xchg
cmp
aad
xchg
jns
push
adc
addr16
data16
jnp
aad
pop
sahf
sti
and
vpshlw
roll
mov
jb
push
in
cmp
cli
popf
mov
aam
lds
jl
push
mov
mov
mov
adcl
in
xlat
cs
push
sarl
inc
stc
pop
add
sbb
pop
scas
aas
clc
inc
lods
adc
add
jle
outsl
fwait
lcall
pop
pop
xor
push
inc
lret
or
adc
dec
pop
inc
iret
pop
iret
adc
mov
push
in
mov
xlat
inc
pusha
push
mov
int3
mov
ret
pop
popa
js
adcl
mov
movb
fdivrs
or
jnp
xorb
test
adc
xchg
sbb
xchg
mov
call
aam
adc
sub
jp
lods
xor
dec
jne
roll
cmpsl
inc
jnp
je
inc
dec
inc
dec
sub
or
stc
cltd
fcmove
mov
jb
xor
mov
mov
ss
jge
lock
pop
fsubl
mov
ds
aaa
jg
push
gs
shrb
push
mov
xchg
inc
push
cmpsl
cmpb
movsb
pop
bound
xchg
xlat
sbb
adc
dec
out
mov
les
jl
xchg
inc
jecxz
lahf
enter
rcrb
inc
ljmp
mov
loopne
sbbl
sbb
jmp
movsb
bound
sbb
repz
xor
lods
or
push
shll
mov
lods
dec
movsl
jg
xor
stos
mov
daa
negb
into
sti
mov
jno
xor
lods
xchg
dec
in
add
inc
jecxz
std
add
push
test
xor
cmp
push
stc
cmp
push
mov
push
cs
subl
xor
push
jns
fscale
js
adc
addr16
jp
xor
ret
and
ret
popf
pop
in
cmp
aam
mov
shrb
jb
xchg
sub
adc
ret
pop
dec
clc
mov
cld
hlt
insb
pop
loope
fiaddl
xchg
xor
sub
jle
cmp
int3
cmp
aaa
fcoml
negl
jns
rolb
jmp
test
and
fcoms
lds
int3
dec
int
sub
dec
cmp
push
mov
sub
mov
add
lods
les
repnz
cli
push
pop
sub
inc
inc
sbb
jbe,pn
jmp
sub
sbb
rorl
loopne
out
call
jnp
xchg
jne
and
jle
cltd
movsl
fwait
test
add
das
or
aaa
mov
mov
fnsave
fisubl
sub
loop
xor
arpl
insl
repz
push
dec
mov
int3
adc
cmp
jle
xor
cmp
bound
mov
or
bound
and
add
add
push
stos
bound
leave
mov
shll
subl
mov
in
dec
pop
pusha
rolb
inc
in
pop
pop
sbb
pop
mov
adc
loop
gs
mov
mov
dec
loope
sub
adcl
jae
sub
out
mov
pop
or
and
push
dec
ljmp
adc
cmp
ret
xchg
sub
lcall
lret
add
aaa
push
nop
or
dec
sbb
aaa
add
les
jecxz
lret
test
sbb
popa
cmp
push
adc
dec
loopne
or
clc
cmp
cmpsl
add
cmpsl
shlb
ror
or
outsb
or
clc
in
scas
out
pop
adc
shll
and
xchg
add
xchg
push
push
fmul
jae
sub
cwtl
and
or
inc
clc
xchg
adc
sbb
aas
shlb
lds
mov
push
push
stos
subl
jb
sub
lods
out
and
out
or
push
mov
rol
imul
fstl
push
or
fwait
jnp
enter
cmp
aam
test
jno
lcall
std
shll
push
lods
xchg
movsl
loop
dec
jg
jae
xchg
popf
jmp
imul
in
gs
push
lods
and
inc
mov
jo
mov
push
xor
jb
or
lret
jo
lret
test
mov
aaa
lock
les
std
mov
pop
xchg
mov
mov
testl
push
enter
mov
jae
shrl
fnstenv
sub
pop
or
push
xchg
pop
push
adcl
mov
add
cld
adc
bound
xchg
leave
mov
ljmp
sti
xchg
push
xchg
or
loope
and
dec
cmc
pop
push
push
mov
sbb
xlat
lret
xor
in
rolb
mov
mov
out
lds
add
loope
add
stc
shll
sbb
bound
xor
stos
aad
icebp
loop
popf
mov
push
mov
jmp
dec
fs
xorl
xlat
mov
mov
jbe
insl
repnz
lock
nop
mov
notb
int3
inc
int3
push
mov
repnz
inc
xchg
cmp
fisubs
add
mov
and
stos
cld
xor
dec
orb
cmpsl
cwtl
stc
add
ljmp
cmp
pop
cmp
mov
pop
out
add
das
and
loope
clc
dec
xor
inc
jmp
xchg
lret
movsl
imul
xor
xchg
inc
sbb
mov
and
jo
adc
loop
jo
mov
cmpsb
loope
lock
fimull
in
popf
lea
lea
call
test
mov
mov
xlat
mov
pop
arpl
icebp
xor
test
in
insb
cmpsl
shl
xchg
cmp
mov
pop
idivb
mov
push
add
xor
addr16
incb
lcall
sub
adc
mov
jge
sahf
adc
imul
orb
xchg
pop
add
push
inc
pop
adc
fstps
cmp
es
push
aas
sar
xor
or
rorb
cwtl
mov
push
pop
std
add
xor
or
negb
icebp
push
stos
mov
push
and
std
stc
shl
pop
loop
inc
and
xchg
int3
jo
and
pop
mov
adc
xchg
cli
xchg
xlat
pop
in
pusha
jno
imul
es
pop
dec
ficoms
imul
xor
leave
loope
js
add
and
rcll
andl
and
inc
inc
mov
loopne
push
sbb
push
cmpsl
movsl
test
in
lds
sar
iret
adc
dec
lahf
pushf
subl
xchg
and
mov
pop
push
jmp
add
mov
test
pop
and
addl
lds
mov
pop
jbe
scas
ror
jle
jae
rorb
out
lock
mov
icebp
xor
es
mov
mov
inc
je
aas
scas
cmpsl
mov
sti
js
cmp
aaa
ret
inc
movsl
mov
xchg
cmp
mov
mov
adc
mov
sbb
dec
and
fwait
rcr
jmp
in
sub
lret
mov
xor
mov
js
add
push
out
or
push
adc
xchg
enter
push
int3
insl
pusha
push
push
mov
mov
sbb
test
or
pop
mov
mov
sbb
sti
ret
jb
das
add
cwtl
nop
adc
js
push
repnz
cltd
daa
xchg
sub
lea
bound
lcall
cwtl
scas
out
lea
outsb
or
push
in
mov
mov
negl
cmp
popa
jns
fstpt
lret
enter
fsubs
jle
or
ljmp
fcoms
jae
je
or
inc
mov
fisubrs
decl
inc
cmpsl
iret
mov
inc
fdivrs
xchg
xchg
sbb
add
loopne
pop
daa
sbb
dec
push
xor
and
inc
stc
mov
mov
push
sub
ret
sbb
sub
jns
mov
leave
sbb
int3
mov
imul
sub
lea
inc
xchg
xchg
jbe
shll
push
lods
shll
push
push
xor
mov
jns
push
mov
jmp
mov
data16
inc
int
clc
or
xchg
lret
ret
xchg
popf
cmc
sub
mov
mov
mov
jp
push
scas
xor
push
je
pop
arpl
fstpl
sbbl
fdivl
outsb
fucom
mov
mov
cmc
xor
std
or
mov
adc
insb
jno
out
push
push
aad
sahf
mov
scas
mov
fwait
mov
clc
sbbl
ret
sbb
out
mov
adc
jl
rep
jg
xchg
movsb
popa
mov
fadds
push
mov
inc
mov
jb
outsl
jae
cmc
outsl
mov
cmp
mov
popa
inc
xchg
mov
dec
xchg
pop
ds
lods
fwait
ret
xchg
cltd
test
lods
leave
mov
xor
jb
fiaddl
push
cld
sarl
int3
add
in
jb
mov
imul
mov
stos
adc
lret
xlat
sub
ret
adcb
jne
inc
sub
jno
push
mov
sbb
jge
sahf
movsl
aad
out
dec
xor
sbb
mov
mov
les
sbb
in
xchg
xchg
lret
xor
pop
int3
stos
inc
in
cmp
out
sbb
dec
adcb
icebp
push
pop
dec
call
shll
lods
adc
adc
xor
repz
pop
cmp
cmp
adc
adc
xor
sbb
dec
js
lahf
lahf
xor
mov
pop
mov
xchg
pop
xor
inc
jbe
jg
add
dec
mov
orb
xor
insl
fdivrs
add
add
push
addr16
fildll
dec
mov
or
popa
daa
xor
jge
shlb
fwait
push
sub
stos
cmp
xchg
inc
pop
push
adc
or
or
inc
cmp
gs
enter
dec
mov
outsb
jb
mov
js
jmp
in
cli
lcall
push
pushf
popa
movsb
cwtl
sub
inc
pop
push
cltd
jg
dec
lock
out
xor
rcll
mov
jmp
iret
insb
out
mov
pop
out
stos
cmp
out
aaa
xor
addb
aam
add
pop
pop
push
sub
xchg
dec
jp
cmp
xchg
testl
aaa
xchg
mov
cmp
push
or
inc
mov
test
shll
pop
xchg
call
mov
imul
push
sbb
push
adc
call
xchg
loopne
repnz
shr
inc
push
hlt
pop
sub
ror
push
mov
inc
dec
les
jle
movsl
inc
mov
aam
scas
push
jbe
rolb
out
pop
mov
mov
popf
add
clc
adc
inc
mov
add
adc
pop
test
pop
jge
mov
sbb
outsb
in
xchg
jl
jmp
mov
cmpsb
pop
push
lock
push
pusha
fwait
outsb
ds
mov
sub
lods
stos
dec
or
ret
mov
repz
cs
and
scas
push
push
jno
icebp
repnz
mov
xchg
mov
bound
mov
in
aad
int3
xchg
mov
insl
sub
push
js
add
fsts
shlb
and
jb
jne
fidivrl
rol
in
jnp
negb
or
fstp
mov
stos
addr16
mov
adc
popf
cli
jmp
mov
je
adc
pop
enter
pushaw
mov
pop
mov
addb
loopne
bound
loopnew
into
or
scas
movsl
dec
mov
popf
or
rcrl
push
movsl
push
leave
cmpsl
and
in
aam
and
push
sub
loope
push
or
movsl
jnp
insb
push
sbb
jl
rorb
pop
sahf
and
push
or
inc
jge
stc
push
xor
mov
cld
fldl
cmp
adc
xchg
mov
vminss
shll
jg
lods
mov
xchg
pop
mov
xchg
cli
lret
xchg
out
mov
cltd
or
pop
add
enter
loop
loopne
lret
jge
out
fcmovnb
xchg
inc
out
mov
inc
mov
sbb
sub
xor
cld
adc
stc
jno
sub
outsl
push
jo
pop
loop
sub
cmpl
rolb
cld
adc
pop
sub
int3
ds
mov
pusha
cmp
adc
sub
pop
in
scas
pop
xchg
pop
mov
mov
ja
fcomip
mov
mov
xchg
jp
mov
mov
add
mov
jb
scas
ss
mov
lahf
push
push
cmp
push
sbb
xor
daa
mov
js
pop
test
pushf
outsb
shll
shlb
daa
ja
cmp
sbb
jg
xor
js
mov
rol
std
icebp
or
dec
and
cmp
dec
enter
repnz
dec
mov
xchg
ret
mov
lcall
cmp
mov
or
arpl
cmp
notl
jp
test
xor
sub
mov
xor
rorb
dec
movsb
add
mov
dec
in
orb
push
push
xlat
aad
enter
mov
add
cmp
out
or
pop
add
mov
lock
in
mov
test
addr16
pop
push
inc
addr16
jnp
xchg
jmp
dec
into
adc
in
lcall
call
fdivrs
lret
cwtl
xchg
imul
pop
es
lods
addr16
mov
mov
call
cmp
shlb
and
sbb
xchg
jno
filds
xchg
xchg
sub
push
fucom
pop
xchg
and
lock
test
jns
pop
stc
cmp
sahf
mov
nop
and
test
fistps
xor
adc
ds
js
testl
nop
out
xchg
shrl
mov
and
push
jl
sbb
fbstp
adc
test
je
jb
dec
fwait
insb
fwait
dec
mov
aas
push
add
add
lcall
sbb
pop
jg
pop
in
push
je
cmp
les
rorl
pop
push
mov
test
pop
les
out
jg
mov
popf
mov
cmp
add
jbe
cmc
sbb
jae
mov
aaa
popf
shl
lods
adc
std
ror
in
xor
cmpb
popf
in
jmp
pop
xchg
xchg
fs
ds
inc
mov
pushf
jge
mov
adc
sbb
clc
inc
jae
or
sbb
cltd
mov
inc
mov
loop
ret
and
testl
subl
aas
adc
cmpsb
or
xchg
jecxz
add
jmp
mov
dec
cld
fidivrl
mov
add
mov
daa
jg
xchg
mov
xor
in
sahf
xchg
add
lahf
popa
mov
sarl
push
stc
enter
xchg
push
aad
mov
push
jno
shrl
mov
jo
mov
mov
cmp
pop
mov
das
hlt
out
pop
movsb
pop
cmp
out
jle,pn
ds
iret
sbb
inc
xchg
iret
inc
xor
outsl
cmp
ljmp
outsl
xchg
xor
xor
stc
adc
add
adc
xchg
pop
test
andb
xrelease
cmp
scas
aaa
and
add
daa
aaa
pop
iret
loop
pop
out
pop
push
in
repnz
cmp
inc
push
int
mov
xor
mov
mov
push
scas
inc
xor
int3
jbe
adc
shll
andl
add
add
leave
stc
scas
mov
dec
xchg
faddp
jle
and
add
dec
out
outsb
lret
pushl
adc
popa
jae
sbb
or
bound
test
repz
loop
cmp
shll
gs
xchg
adc
ret
or
jbe
pop
outsb
or
outsl
mov
jl
sub
jbe
cmp
dec
cmpsl
and
ljmp
cs
das
and
mov
mov
sub
out
adc
int
and
mov
pushf
mov
jb
push
aaa
add
push
lods
jnp
sbb
sub
repz
pop
jmp
add
outsb
inc
movsb
stc
hlt
and
aam
inc
scas
lret
xor
fwait
cmp
test
push
cli
xchg
imull
cltd
mov
mov
daa
inc
mov
mov
popa
push
movsb
ret
call
cmp
adcl
test
cwtl
ss
aad
jg
and
js
push
add
xlat
inc
mov
push
pop
jno
push
andps
add
jae
repz
mov
loope
dec
xor
pop
test
int
stos
and
inc
pop
dec
inc
cmpsl
or
adc
in
mov
mov
das
cmp
fiadds
lea
xchg
cltd
data16
dec
mov
cwtl
adcb
ds
mov
mov
cmpsl
sbb
daa
lret
cli
sub
fstps
scas
mov
sub
hlt
jge
jge
lock
stos
icebp
or
scas
mov
or
pop
cmpsb
add
insb
shrb
push
add
xchg
test
sbb
jno
mov
xchg
pop
cli
js
dec
cltd
fdivs
push
add
mov
scas
and
dec
sahf
dec
fldt
pop
cli
xor
mov
pop
into
mov
repz
ficoms
xor
mov
outsb
inc
bound
aas
rorl
stos
xor
das
jp
jns
mov
dec
sbb
outsl
into
xor
mov
pop
and
xorb
mov
es
lea
lock
orl
mov
mov
push
imul
xchg
add
cwtl
lods
push
mov
out
mov
imul
or
pop
jg
cmp
adc
sbb
call
cmpsl
and
cwtl
cmp
loop
push
inc
adc
popf
arpl
jb
pop
jb
dec
mov
pop
out
dec
and
or
jae
push
adc
cmc
jbe
add
jno
or
or
adc
cli
xor
test
les
ss
pushf
xchg
jno
adc
jmp
dec
adc
insb
outsb
out
aam
pop
jg
or
fsubrs
mov
fldt
aam
push
cld
sub
cmpsl
and
xchg
jecxz
fstps
in
inc
in
jmp
lret
mov
sbb
and
or
iret
mov
xor
mov
into
jbe
cs
mov
xor
cld
rcr
dec
mov
xor
in
sub
movsl
mov
mov
cmp
sahf
aas
sbb
or
in
push
rolb
test
lea
push
inc
arpl
add
push
push
inc
fsubl
jmp
fbstp
jne
or
jle
xor
in
inc
movsb
cmp
jp
pop
and
xor
lret
lds
dec
lock
adc
add
mov
and
mov
mov
fidivrl
push
int
out
addl
cmpsl
popa
cwtl
push
mov
cli
sub
push
les
mov
ds
inc
pop
or
scas
sti
push
adc
pop
imul
outsb
dec
imul
hlt
sub
mov
adc
adc
addr16
jle
fisttpl
push
cltd
xchg
sub
jecxz
pop
iret
fwait
inc
xor
push
mov
jecxz
sbb
dec
aad
fdivrl
loopne
pop
sti
icebp
mov
ror
xchg
mov
aad
push
mov
jbe
mov
clc
adcl
add
sbb
sarb
adc
stos
mov
sbb
lret
adc
xchg
mov
and
stc
mov
ss
fstpt
sub
jmp
jecxz
addr16
pop
jns
push
lret
jne
outsl
mov
enter
movsl
arpl
jb
lds
xchg
or
movsl
scas
or
mull
nop
sub
loop
cltd
dec
fwait
sbb
fstp
sti
shlb
in
add
enter
repnz
mov
mov
or
jp
gs
pop
pop
or
mov
mov
xor
xchg
testb
mov
pop
inc
popa
mov
pop
test
cmp
mov
adc
push
add
xor
add
mov
into
es
add
dec
and
add
stos
sti
nop
or
add
mov
or
push
dec
test
pushf
mov
subl
mov
negb
mov
das
or
adc
fiaddl
lret
or
ljmp
inc
pop
scas
push
pop
sbb
jecxz
cmp
or
xlat
or
mov
push
lock
movsl
movsb
inc
sub
addr16
movsb
movsb
dec
jl
es
mov
inc
pop
lods
scas
pusha
fdivrs
test
xorl
imul
out
out
add
adc
lret
lods
jo
jns
negb
add
enter
sbb
popf
aas
xchg
xchg
pop
adc
mov
add
xor
pop
xchg
pop
xor
js
cmp
ds
ja
lret
nop
int3
mov
leave
mov
int
in
mov
jle
inc
jnp
xor
inc
jne
sub
xor
outsb
sub
xlat
pop
cmpsl
cmovb
lret
xchg
je
mov
push
cltd
stc
aam
cmp
ljmp
and
lahf
jns
or
bound
pop
insl
mov
push
inc
mov
xchg
xchg
out
sbbb
test
push
jp
mov
xor
cli
sub
test
stos
inc
neg
mov
cld
in
mov
pop
xchg
xchg
in
fwait
cmp
sbb
xor
js
jno
fsubrs
test
mov
insl
jmp
sub
data16
out
icebp
push
xor
insb
out
outsl
inc
or
mov
sub
cmp
loop
or
mov
jns
mov
loop
or
mov
fistl
inc
inc
lock
ret
daa
pop
push
imul
mov
clc
aas
stos
push
je
in
inc
lea
hlt
xor
sbbl
aaa
mov
lods
int
test
cmp
sbb
ret
lret
add
push
hlt
mov
sbb
es
bound
gs
mov
cmp
xchg
fistpl
inc
enter
in
pop
aam
push
xchg
data16
mov
lods
or
cmpsl
out
ret
xchg
cmp
das
fdivp
scas
pop
xchg
daa
sbb
push
stos
adc
inc
ret
inc
xchg
call
sbb
mov
mov
popf
rorb
pop
push
aad
jmp
mov
mov
hlt
mov
imul
popa
xchg
inc
das
push
pop
lea
clc
adc
outsl
fprem
gs
test
mov
pop
inc
sub
jne
les
fists
cli
pushf
jo
push
gs
push
xor
ret
pop
add
aaa
outsb
loop
orl
outsb
inc
xor
das
nop
mov
cmpsb
stos
test
jb
mov
icebp
mov
les
sbb
pop
clc
add
or
xor
sbb
mov
gs
fcoml
pop
cld
add
outsb
xchg
mov
pop
sbbb
repz
xchg
shrl
or
cmp
push
pop
push
cmp
adc
aam
daa
mov
roll
in
cld
mov
sbb
rcll
sbbb
dec
mov
ja
dec
xor
xchg
dec
lods
pop
pushw
cltd
stc
adc
mov
mov
jb
outsl
sbb
bound
push
sti
push
mov
test
pushf
jae
test
xor
dec
rep
jmp
push
data16
or
push
jno
cmpsl
cmp
repz
shll
jg
dec
xor
mov
mov
out
popf
sbb
jb
inc
rcll
fidivs
test
jecxz
ret
pusha
test
sub
testl
sub
jge
dec
sub
mov
inc
das
mov
mov
mov
cmp
push
xchg
int
or
add
out
jecxz
negl
pushf
fs
not
addr16
div
adc
pop
push
inc
dec
inc
dec
xchg
imul
aas
aad
push
pop
pusha
int3
fcoml
cmp
pop
ljmp
das
jp
xchg
mov
pop
das
lds
inc
test
popa
xchg
adc
mov
inc
ss
inc
enter
xchg
in
jbe
jbe
out
aas
in
or
push
stos
xchg
loopne
dec
nop
les
cmc
xchg
fs
orl
adc
je
stos
out
lret
add
and
and
jmp
inc
dec
mov
xchg
rcrb
sbb
lret
std
add
jg
test
push
or
mov
pop
repnz
cmc
sub
sbb
je
add
push
jg
inc
cmp
repnz
push
push
std
in
mov
ds
mov
ret
xor
loop
inc
imul
aaa
cmpsb
outsb
dec
cmp
push
cwtl
aam
out
daa
cld
incb
out
out
std
outsl
imul
xchg
and
cmp
popa
inc
leave
xchg
lcall
xchg
dec
mov
pop
test
movsb
leave
inc
sbb
xchg
mov
dec
pop
data16
adcl
xor
and
shr
in
mov
sub
addr16
cmp
jp
jbe
popa
into
jb
cmp
out
cltd
xor
sub
pusha
je
lahf
xchg
ss
jle
dec
aas
cmp
lods
mov
stos
pop
mov
push
loope
mov
outsl
adc
call
sub
imul
aad
mov
and
or
enter
rcll
shlb
insb
push
mov
bound
jb
sti
mov
dec
jno
out
lock
lahf
jecxz
arpl
lock
mov
adc
jb
cmpsb
adcl
add
loop
dec
jbe
sub
lahf
in
dec
shl
enter
jge
gs
cmp
cld
mov
fld
or
or
das
jb
xor
inc
inc
negl
fwait
rol
into
mov
fadd
push
jbe
mov
test
push
jo
lds
aas
rcrl
adc
jg
push
pop
filds
outsl
mov
dec
dec
dec
dec
jno
enter
mov
shrl
aam
bound
xchg
inc
push
sbb
sub
lods
jg,pt
pop
jmp
cmp
les
mov
add
aad
jl
mov
adc
inc
xlat
mov
insb
test
sti
mov
int3
inc
fists
add
and
mov
aam
mov
jge
inc
push
dec
inc
mov
insl
loop
pop
dec
push
ja
in
orl
ficompl
lret
dec
arpl
cld
dec
pop
push
jns
pop
cmp
add
rcrl
pxor
lahf
cmpb
adc
pop
and
cs
sub
stos
test
pop
shl
sahf
inc
jp
mov
or
push
data16
popa
call
fs
push
mov
pop
jne
push
xchg
push
enter
ret
mov
mov
push
hlt
out
cli
ja
aad
mov
adc
in
add
lods
ljmp
or
das
xor
addl
sub
stos
xor
adc
in
repz
mov
es
es
loope
imul
xchg
and
test
xchg
sub
xchg
xorb
int3
cli
out
or
dec
mov
pop
nop
xchg
fs
cmc
inc
inc
ljmp
adc
aam
out
push
mov
cmp
cmc
mov
outsb
adc
or
ret
mov
adc
insl
stos
xor
movsb
imul
xor
mov
mov
ret
cld
sub
cmp
mov
sbb
cmp
hlt
push
scas
push
cltd
movsb
pop
movsb
int3
js
sbb
cmc
push
add
cmpl
stos
push
mov
scas
push
lea
enter
or
mov
fstl
rcr
cwtl
mov
jnp
dec
sti
pop
popf
push
xchg
lret
mov
pop
int3
movsl
push
add
xchg
cmpsb
add
adc
jg
loopne
adc
repz
pushf
cmpsb
mov
pop
test
xor
pushf
mov
mov
add
out
cltd
xor
sub
das
dec
cmp
add
cld
xchg
inc
aas
les
rcll
icebp
sbb
jno
int3
loop
std
fcmove
mov
inc
lcall
xlat
push
inc
sub
mov
dec
pop
aas
shrb
adc
pop
or
loopne
mov
and
xor
xor
lcall
lock
cmp
mov
mov
cmpsb
adc
push
pushf
std
scas
ja
cmp
dec
dec
repnz
xor
icebp
mov
adc
js
xchg
pop
sub
xor
inc
cmpsb
test
push
cmp
push
mov
imul
cmp
adc
enter
dec
and
jecxz
mov
je
stc
fstl
loopne
les
sub
mov
fldl
outsb
mov
xchg
pusha
and
mov
mov
lods
jnp
hlt
sbb
test
in
adc
rcr
pop
flds
fisubrl
dec
jns
test
sub
cmp
jecxz
xor
test
xchg
shrl
gs
fidivl
fsubrs
or
movb
mov
fimull
inc
inc
divb
icebp
icebp
cmp
pop
fsub
sbb
jbe
push
sahf
and
aad
sub
mov
int3
test
es
jle
mov
popa
inc
inc
add
stos
sbb
or
in
mov
lock
cmp
add
lea
call
xlat
pop
fsubl
mov
ljmp
pushf
add
mov
xchg
mov
xchg
cli
sub
sub
inc
xchg
test
outsl
shlb
ljmp
cmp
xchg
lds
sti
test
lods
rorl
cmpsl
adc
dec
push
sub
add
xor
dec
jno
dec
imul
xor
jmp
inc
cmpsl
insl
xor
push
imul
fisttpl
shll
push
inc
rcrb
push
aam
flds
arpl
push
xlat
fnstsw
ljmp
inc
pop
pusha
cmp
idivl
in
add
out
nop
leave
or
push
scas
mov
pop
pop
adc
lds
enter
sub
mov
btr
mov
fwait
dec
iret
ljmp
push
inc
test
mov
in
inc
ja
or
mov
cwtl
and
mov
cltd
popf
lds
lock
adc
and
add
aad
add
out
pop
xor
lcall
icebp
or
xor
push
inc
mov
aad
cmp
imul
or
movsb
jle
int3
add
mov
push
push
movsl
add
jge
cmpsl
mov
adc
stos
leave
aas
add
xor
call
inc
add
stos
lods
jmp
sub
lret
cmp
loop
sbb
outsl
neg
inc
cwtl
jl
jo
rorb
mov
inc
and
inc
outsb
flds
add
out
hlt
xchg
dec
xchg
gs
xor
add
or
jl
mov
xchg
xchg
pop
cli
or
or
mov
hlt
scas
daa
sub
aaa
sahf
loop
aas
ljmp
xor
movsl
jecxz
fildl
sub
fsubrs
xor
add
sbb
mov
add
popa
repnz
in
icebp
iret
mov
fcomp
ud1
jge
rolb
or
jne
cmpl
mov
sub
aaa
adc
adc
sbb
jns
lret
push
ds
rcrl
push
sbb
test
insl
xchg
and
xchg
mov
xchg
sub
and
mov
lds
out
cwtl
cs
add
int
add
mov
movsl
sbb
shlb
xchg
or
fstps
pop
add
lret
push
pushf
jmp
sub
pusha
cmp
jmp
jmp
adc
inc
imul
mov
stos
cli
iret
lods
aas
insl
or
je
adc
push
mov
push
orl
mov
popf
inc
mov
pop
mov
cld
pop
cmp
adc
icebp
pop
push
faddl
lods
xchg
jl
or
xchg
sbbb
sbb
nop
idivl
outsl
pop
inc
pop
sbb
insb
fcomi
jno
dec
incb
push
fsubrs
mov
push
pop
test
std
in
add
mov
or
dec
shrb
mov
sub
pusha
add
shr
ss
out
pop
mov
in
xlat
cmpsl
popf
imul
sbb
mov
stc
out
mov
xchg
inc
stc
pop
fwait
rcll
inc
fistl
fs
test
pop
test
popl
lret
stos
outsl
movsb
dec
mov
xchg
mov
push
stos
mov
outsb
aaa
mov
shlb
jnp
xor
xchg
sub
sbb
lahf
cs
cli
fistps
lret
xlat
lret
and
shlb
pusha
xor
jecxz
mov
sbb
leave
push
pop
ret
aam
sbb
dec
jne
mov
lods
xor
push
xchg
mov
lcall
aas
stos
test
mov
add
lods
frstor
push
mov
mov
jle
ret
or
les
out
push
cmpsb
adc
out
mov
cmp
cmovns
sti
push
icebp
sti
xchg
sbb
dec
cli
jle
test
into
or
mov
js
iret
and
cs
and
loopne
je
in
in
sarl
daa
in
pusha
inc
lock
aad
icebp
inc
loopne
popf
lret
xlat
inc
loope
mov
jne
inc
inc
xchg
mov
out
pop
push
mov
push
imul
sti
xor
pop
clc
jl
shlb
inc
out
pop
ljmp
nop
mov
dec
pop
cmp
into
xchg
repz
call
aam
cmp
rorb
shlb
sahf
add
sub
or
stos
jns
into
shl
cli
test
testl
cwtl
mov
js
mov
adcb
sub
in
lret
fistpl
push
ja
and
jne
dec
inc
test
xor
pop
aas
cwtl
aas
cmc
push
add
sbb
ret
push
add
insl
cwtl
push
hlt
add
xlat
scas
pop
jns
mov
lea
push
scas
mov
dec
push
iret
inc
ljmp
pop
subb
outsb
aam
dec
jp
jl
push
sbb
movsb
xorl
lds
aas
add
dec
xor
ret
or
or
mov
xchg
mov
or
mov
fstps
sub
cld
push
lods
movsl
adc
push
hlt
and
sti
jecxz
int
cmpsb
les
mov
fs
gs
add
je
mov
hlt
bound
test
push
pop
dec
ficompl
lods
addr16
clc
pop
jnp,pt
adc
out
sbb
cmc
mov
scas
xor
xchg
outsl
pop
ds
inc
movsb
pop
add
cmp
and
mov
dec
loopne
clc
fsubrs
mov
push
mov
push
add
sbb
xchg
xchg
cmp
push
cwtl
sub
dec
jecxz
mov
lahf
and
sbb
jns
iret
pop
dec
dec
xor
clc
mov
outsb
sbb
jecxz
pop
jl
pop
mov
shrd
dec
xchg
pop
dec
jmp
mov
sti
and
cs
decl
xchg
push
lret
dec
in
jb
inc
mov
lock
lahf
push
ds
ror
das
test
xchg
sub
mov
xor
and
rolb
dec
out
aad
dec
inc
push
and
rcrb
shrl
ret
xchg
adcl
mov
mov
push
daa
cmp
fcmovbe
sbb
hlt
push
adcb
push
push
mov
cwtl
rorb
cmp
pop
inc
loopne
outsb
push
inc
sub
cld
lea
arpl
push
int3
mov
jo
xchg
inc
lods
push
lods
mov
or
push
push
dec
addr16
push
out
pop
mov
mov
mov
pusha
sbb
xchg
push
gs
aaa
jle
pop
and
pop
lods
cmc
pop
mov
pop
jecxz
daa
enter
faddl
cmp
xor
sbb
mov
mov
les
adc
cmp
xor
mov
js
cs
rolb
lret
aam
fildll
mov
imulb
push
aaa
aas
jle
dec
sbb
xchg
dec
insb
hlt
divl
out
mov
push
cld
test
sbb
dec
sub
in
imul
dec
ljmp
movsl
fidivs
mov
jno
inc
insl
and
mov
ljmp
mov
add
call
mov
lea
loope
add
mov
les
or
xchg
inc
test
pop
mov
push
xor
sarl
in
shlb
xor
adc
scas
cmp
daa
xor
inc
rorl
cmp
mov
bound
mov
loope
ret
mov
jns
add
into
jmp
ret
in
mov
mov
test
pop
ss
loop
loopne
mov
lret
push
inc
fcoms
push
js
sub
xlat
and
push
je
pop
stc
popf
test
shll
and
jbe
push
pushf
or
nop
and
push
sbb
and
push
cmc
mov
mov
inc
xchg
ror
xorb
push
push
xor
and
pusha
cwtl
add
inc
xchg
daa
stos
outsb
and
inc
sub
cmp
cmc
dec
sub
sbb
cmpsb
bswap
pop
sub
or
sub
out
mov
jmp
adc
xchg
pop
lea
xchg
mov
and
icebp
jno
cmp
btr
push
lcall
xchg
dec
jo
add
xor
push
or
jp
push
jge
rclb
adc
das
hlt
mov
fsubrs
in
pop
add
loop
mov
mov
add
sub
shl
jne
scas
outsb
add
insl
ja
ficompl
filds
cmpsl
sub
popa
jmp
jno
mov
dec
jecxz
jnp
sarb
clc
cmp
pop
mov
jb
and
and
and
stc
cmp
in
stos
push
fwait
es
clc
aaa
cmpsb
ljmp
lock
and
sbb
cwtl
mov
sub
pop
adc
imul
jmp
inc
iret
sbb
sub
popf
out
push
mov
aas
imul
jg
adc
mov
pusha
enter
lret
xlat
lds
idiv
aas
std
rolb
dec
data16
jmp
inc
or
mov
test
test
mov
inc
stc
xchg
test
add
mov
bound
and
cmp
aas
jmp
mov
cmp
or
cwtl
ss
add
mov
std
pop
setl
incb
lea
insw
loopne
insb
mov
movsb
mov
xor
stos
mov
fs
in
repz
or
mov
adc
push
mov
pop
rclb
mov
lcall
popa
and
pop
push
fistpll
jb
and
outsb
nop
cmp
push
icebp
sbb
adc
outsl
add
ss
adc
clc
xorl
ret
ret
cltd
std
movsb
out
gs
adc
cmp
shll
adc
inc
mov
clc
jo
shl
mov
insl
mov
out
ja
add
jnp
pop
out
xor
push
mov
mov
dec
mov
pop
out
daa
ficoms
mov
inc
outsb
insb
sbb
dec
mov
mov
filds
dec
popf
sahf
jnp
ret
xchg
pop
adc
mov
or
sti
int3
loopne
insl
in
lret
cmp
jbe
dec
mov
inc
mov
test
xor
insl
outsl
gs
shll
xor
roll
popa
sbb
hlt
stos
xchg
test
js
ja
cli
adc
cmp
jnp
in
xor
dec
adc
iret
sub
mulb
fstl
ljmp
jl
cmpsb
sub
mov
jg
lods
mov
stos
adcb
mov
les
daa
jae
pop
lea
int3
and
cmpsb
clc
test
movsb
cmpsl
jg
pop
cs
popa
rorl
mov
fldlg2
mov
lods
imul
out
addr16
jge
and
push
and
add
xchg
pop
cwtl
xor
xor
aad
mov
mov
bnd
nop
dec
dec
adc
adc
and
mov
dec
xorb
lds
lea
leave
sub
sahf
sbb
rcr
xchg
sarb
std
fistpll
sbb
inc
imul
out
and
pop
into
cltd
xor
sarl
and
sti
xchg
sar
rclb
std
sbb
fucomp
and
fsubp
stc
dec
pusha
sbb
dec
mov
inc
lret
or
inc
push
enter
stc
dec
jbe
rcrl
and
dec
fisttpl
adcl
cmp
add
fcmovnb
pop
test
cld
mov
push
lods
cmp
push
mov
push
sub
and
or
fadds
sub
mov
pop
add
lcall
mov
fmul
test
out
adc
adc
test
jnp
movsl
and
xchg
add
mov
sub
xor
and
dec
repnz
out
cmpsl
lock
les
jmp
sbb
add
dec
lods
in
out
loope
cmpsl
stos
lods
mov
xchg
mov
in
fldl
and
cld
add
aaa
adc
ss
adc
stos
enter
incl
popl
pop
inc
xchg
mov
mov
outsb
sbb
push
outsb
fistps
incb
sbb
fcompl
and
aaa
loope
xlat
loop
xchg
movsl
mov
nopl
pop
test
pop
xor
or
push
xor
jp
pusha
ret
mov
cmc
ret
lea
push
adc
or
push
xchg
out
ljmp
inc
or
sbbb
idiv
inc
sbb
push
push
or
pop
popf
jne
test
fs
mov
adc
inc
sub
insl
mov
clc
packuswb
push
lret
repnz
mov
lea
std
shl
inc
sbb
repnz
mulb
cmp
mov
sub
mov
inc
jecxz
cmp
dec
and
in
aaa
add
clc
sub
or
add
and
jne
jne
or
push
mov
or
xlat
fwait
mov
movb
popl
mov
dec
movsl
pop
lods
arpl
mov
add
add
mov
pop
mov
push
xchg
push
push
cmpsb
fmuls
jbe
add
lods
mov
push
out
not
mov
sub
mov
lods
lret
outsb
pop
das
mov
les
or
call
sub
scas
inc
jnp
pop
cmp
insb
cld
repz
ret
cmp
cwtl
lahf
xlat
rorb
fisubrl
lds
dec
adc
mov
dec
add
call
jb
xorb
jo
and
cld
test
das
loope
in
mov
jb
pop
les
mov
shr
ficoml
stos
movsb
jns
xchg
push
test
adc
cmp
sbb
insl
stos
xor
adc
dec
inc
or
clc
scas
add
push
pop
arpl
cltd
test
pop
gs
bound
popf
scas
pop
loope
cmpsl
xor
mov
inc
int3
sbb
enter
sub
aaa
or
jne
fidivrl
fcmovne
push
daa
pop
sti
nop
fadds
ljmp
insb
inc
mov
daa
mov
mov
and
dec
mov
hlt
sbb
outsl
in
or
clc
mov
mov
pop
je
jg
lock
mov
mov
sbb
icebp
add
mov
fdivr
pop
jmp
stos
mov
pop
fsub
inc
and
sub
repz
cli
xchg
xchg
aam
fcmovb
pop
inc
sbb
pusha
shl
das
mov
adc
scas
jecxz
cmpsb
xchg
dec
push
jg
ja
xor
jmp
xchg
cmp
outsl
dec
xchg
and
xchg
mov
in
subl
push
ret
dec
inc
xchg
arpl
xchg
mov
xchg
mov
push
ds
lods
cmp
rcrb
pop
push
push
sti
lea
fs
sahf
cmp
popa
cltd
xlat
test
pop
pop
sbb
dec
inc
movb
mov
cwtl
daa
popf
popf
mov
outsb
je
xor
stc
sub
stos
cmpsb
lret
icebp
movsb
insl
push
adc
and
jnp
rclb
shlb
cmp
sub
cmpsl
hlt
cmp
iret
leave
test
ret
rclb
pop
lods
fmuls
jp
jne
out
testb
cmp
mov
shl
fisttpll
sbb
xchg
mov
sti
mov
mov
dec
or
sti
mov
mov
push
and
inc
jb
mov
mov
lea
lds
jb
sub
jae
loop
out
jae
je
jle
arpl
jo
pop
mov
rcll
jo
cmp
adc
lds
repz
idivb
mov
hlt
fcmovu
ror
dec
arpl
out
jg
cmc
mov
xor
xchg
jp
repz
mov
pushf
fwait
lahf
jp
xchg
mov
mov
mov
adc
xchg
lret
icebp
xor
aam
int3
jbe,pt
push
push
shll
mov
in
mul
lock
or
pop
add
pop
push
pop
movsl
jg
aas
sub
xor
cmp
stos
rorb
mov
movsb
faddl
lret
adc
jg
stos
xchg
or
je
and
push
mov
mov
insb
sbb
and
xchg
int
mov
sbb
aad
mov
cmp
pop
sahf
or
clc
cld
cld
je
xchg
and
clc
scas
into
sbb
ss
adc
aam
enter
out
fbstp
idiv
out
and
mov
arpl
test
in
addl
movsl
ljmp
popa
xlat
cmc
cmpsb
xchg
scas
outsl
sub
enter
pop
cmp
test
scas
mov
jp
fcom
cmp
rorl
jmp
rcrl
daa
pop
pop
nop
pusha
mov
jmp
push
lods
je
out
mov
test
pop
mov
pop
mov
out
in
dec
mov
outsb
sbb
add
insl
imul
idivl
or
xorb
lods
daa
sbbl
xchg
fwait
mov
fs
loope
fcompl
icebp
lods
mov
add
mov
fidivrl
ja
cmp
insl
cli
xchg
shrb
jnp
sbb
shl
sub
sahf
pop
adc
mov
push
shrb
lret
and
mov
and
jb
pop
sub
or
push
jno
or
out
and
lret
ror
dec
outsb
push
mov
insb
sar
arpl
adc
xor
lock
aas
test
xor
clc
enter
xor
mov
and
popa
pop
ds
ss
add
jnp
fldenv
adc
fnstenv
cmp
pop
or
push
xor
in
dec
push
xor
xlat
xor
cmp
sbb
fimuls
js
xchg
add
mov
rol
xchg
shrb
mov
push
push
test
xorl
cmpl
xchg
dec
inc
mov
sbb
in
loop
sbb
mov
pusha
xchg
fimuls
xor
sub
scas
testl
ljmp
push
jns
popf
test
ja
sub
pop
cmpsl
sub
sub
cs
fsubr
inc
pop
adc
rcrl
ds
adc
scas
iret
test
adc
int
sub
outsl
jns
lods
leave
dec
repnz
cmp
sbbl
clc
adc
clc
dec
fs
mov
dec
sub
hlt
and
fistl
mov
xor
add
mov
jecxz
je
jmp
inc
xchg
and
shll
aas
gs
lea
jl
sbb
pop
fdivrl
xchg
into
in
sub
test
orb
and
sbb
xor
mov
lret
cli
ja
sbb
mov
sbb
loop
lret
mov
clc
pop
xchg
mov
jae
xchg
adc
ja
mov
fwait
cmc
push
and
cmp
outsb
outsb
lret
in
js
ret
cwtl
xchg
je
mov
adc
inc
cwtl
stos
sti
xchg
nop
je
stc
fcos
fldenv
movsb
add
fwait
push
xlat
inc
in
or
adc
outsl
mov
adc
sub
or
out
cs
jge
insl
push
and
in
adc
add
mov
stos
add
xor
lods
repnz
cs
cs
int3
bound
xchg
lret
dec
mov
repnz
cmp
in
mov
add
jns
insb
inc
xor
add
fdivrs
jbe
lret
xlat
pop
mov
popa
mov
xor
jecxz
and
lcall
or
stos
jns
in
and
addb
sub
jbe
cmp
mov
fwait
mov
ds
mov
movsl
dec
jecxz
adc
mov
pop
cwtl
rcll
xchg
es
inc
mov
push
xchg
sub
leave
dec
lahf
rep
xchg
sbb
mov
push
inc
and
hlt
and
test
push
adc
addr16
inc
int3
pop
inc
add
scas
fsts
stc
outsl
sar
mov
sbb
mov
sbb
in
push
lods
cld
push
cmp
mov
inc
lcall
jecxz
pop
jnp
mov
pop
dec
stos
movsl
push
lods
cmc
dec
add
jmp
or
sbbb
mov
cmc
sbb
mov
mov
movsl
sub
les
mov
sbb
leave
cld
cmp
outsl
inc
jae
push
in
jne
shrb
dec
popf
jecxz
jp
add
cmpsb
cmpl
mov
cmp
movsl
cld
inc
pop
adc
movsl
pop
data16
dec
fcmovnu
pop
mov
icebp
out
xchg
rolb
jnp
sarl
imul
insl
xchg
xor
mov
mov
or
daa
inc
jp
lods
dec
lea
insl
cmp
repz
arpl
std
fmulp
adc
loopne
scas
inc
jae
fs
push
xchg
lods
mov
negb
sbb
fucomi
xorb
jg
inc
int3
push
cmp
xchg
pop
xor
repz
mov
xchg
add
push
fnstenv
je
xor
add
xor
cmovnp
xchg
es
fidivrl
stos
cltd
mov
loope
inc
inc
sub
fldenv
int
jecxz
sbbb
xchg
inc
outsb
out
mov
dec
sbb
add
or
fcoml
cwtl
lahf
aaa
pop
sub
repz
cmp
sub
ret
orl
jg
xlat
insl
aas
aam
loopne
xchg
jl
lret
cld
jae
push
cmp
jno
jle
sub
ret
int
pop
fs
dec
leave
cs
mov
imul
cmpsl
sbb
incl
add
lahf
popa
pop
or
pop
xor
aaa
es
test
pop
stc
fwait
and
sbb
sbb
sub
movhps
push
inc
out
mov
sub
cmc
pop
xor
mov
or
mov
leave
pop
loope
pop
fsubrl
cwtl
or
movsb
cwtl
test
add
test
dec
add
jo
insl
push
jl
sbb
sbb
mov
jecxz
sub
jns
jle
add
xchg
gs
cmp
nop
rorl
sbb
xchg
xchg
imulb
dec
or
cmpsb
pop
leave
lcall
cmp
xchg
mov
sbb
jl
leave
popa
dec
repnz
pop
inc
movsb
leave
rcl
mov
jbe
subb
dec
arpl
cmp
xchg
jg
in
fwait
sti
push
insb
pop
sub
and
jae
fldt
inc
mov
enter
xlat
movl
jnp
stos
popf
in
aam
push
xlat
push
dec
mov
pop
ja
jbe
ss
pop
jbe
cli
or
stos
outsb
dec
mov
movsl
nop
xor
xchg
stos
adc
mov
cmp
mov
ficomps
lret
js
jno
addr16
cld
mov
cmpsb
push
sub
inc
loopne
stc
outsl
pop
xchg
daa
test
push
inc
inc
xlat
inc
stc
leave
div
sub
xor
shlb
call
pop
cs
ss
pusha
push
pop
or
orb
int3
pop
and
outsb
dec
jmp
aaa
xchg
imul
mov
push
stos
lret
xchg
mov
cmp
andb
and
ret
xor
jge
out
lcall
sbb
push
xchg
lock
shl
sbb
stc
in
das
ss
ja
pushf
aaa
mov
jno
jge
aas
cmpl
subb
jecxz
in
lret
dec
outsl
add
nop
scas
ds
out
cmp
inc
fwait
testl
sub
inc
xlat
inc
stos
mull
fists
imul
rcr
dec
or
jge
rcrb
add
rclb
jle
cli
int
push
jg
orl
ror
cmp
lock
jl
and
popa
xlat
imul
out
inc
mov
and
shrl
dec
mov
xor
mov
out
push
cmp
push
and
mov
mov
adc
xchg
cmp
call
fidivrl
inc
lahf
jns
insb
popf
js
scas
push
cmp
push
sub
jae
pusha
inc
jmp
nop
arpl
mov
xchg
jg
or
test
mov
mov
mov
push
lret
dec
das
fists
jp
push
adc
sbb
and
adc
mov
cmp
cld
mov
mov
mov
push
dec
xchg
mov
ljmp
xor
cwtl
shll
push
jnp
pop
mov
not
sub
cwtl
fwait
adc
inc
mov
xorl
rcll
rcrl
addr16
cmp
push
or
hlt
xor
mov
and
sbb
jb
aaa
dec
add
pop
jae
push
add
movsl
or
mov
push
addr16
sub
into
cld
test
xchg
mov
leave
add
jbe
loope
aam
and
cmp
leave
xchg
scas
fldenv
loopne
and
loope
ret
ja
je
ficoml
mov
jb
sub
aas
adcb
neg
in
loope
in
pop
fdiv
and
pop
cmp
addr16
lahf
lcall
adc
adc
mov
dec
pop
shlb
mov
push
xor
fmuls
pop
lcall
xchg
sub
mov
jno
add
call
fadd
jg
sub
dec
xor
negb
jmp
cmpl
cli
loopne
jge
fdivl
aas
in
lret
jnp
mov
cmp
mov
es
in
in
add
jb
test
outsb
insl
scas
je
ret
stc
ljmp
adc
mov
stc
cld
jle
pop
cltd
xlat
repnz
mov
and
sbb
sub
test
sub
and
lcall
dec
out
add
fists
sub
add
pop
xchg
inc
iret
sbb
dec
adc
push
cmp
xorb
loopne
push
in
mov
hlt
jmp
gs
xor
lcall
pop
pop
jl
stos
jmp
outsl
nop
daa
or
in
ficomps
repnz
sub
lds
dec
pop
out
cld
mov
add
or
sbb
inc
aas
dec
mov
aam
jo
in
popa
or
push
xlat
xchg
xor
loope
add
pop
adc
pop
out
lcall
hlt
sub
inc
aad
insb
mov
shr
sti
xchg
out
loope
fsubs
dec
jmp
cmc
cmp
arpl
add
in
daa
cmpsb
sub
jo
aad
pop
push
cmpsb
out
ljmp
scas
xlat
pop
xchg
cmp
mov
repz
inc
insl
inc
scas
pop
aad
jb
shrl
mov
mov
stos
mov
outsb
and
push
mov
addr16
mov
fisttpl
or
mov
push
sub
push
push
xor
gs
lods
and
or
mov
xor
xchg
out
cli
xorl
add
std
sub
fldl
sti
adc
mov
lods
cld
cmp
sahf
lods
fwait
push
pop
repz
imul
push
aas
cmp
test
push
idivl
adc
jle
incl
lahf
outsl
arpl
call
cmc
insl
ss
cmp
loop
and
ds
in
cmp
mov
inc
ficomps
add
cmp
push
cltd
in
and
call
dec
add
jo
es
lods
loopne
les
mov
lods
or
mov
jle
and
orl
mov
mov
pusha
xor
je
pushf
add
push
je
and
push
pop
mov
mov
pop
sbb
in
jo
inc
into
pop
pop
jecxz
sub
sub
sub
loope
pextrw
mov
pop
adc
mov
xor
mov
sub
inc
push
popf
in
inc
mov
loop
push
and
xchg
test
out
mov
lds
sub
stos
sbb
adc
jmp
or
dec
rorl
jmp
out
pop
pop
loope
mov
scas
aas
mov
lock
into
les
data16
imul
test
arpl
popf
cmp
loopne
ljmp
add
loopne
jne
iret
and
loopne
push
lea
repz
out
out
and
ret
push
and
push
or
in
outsb
cmpsl
sbb
push
in
fisttps
push
movswl
leave
mov
sub
hlt
cltd
pop
jl
pop
ret
sub
inc
lahf
jge
pop
jo
mov
ret
add
sahf
outsl
and
leave
jne
clc
inc
or
cmp
jmp
arpl
sbb
or
mov
scas
aad
pop
pop
sbb
sub
adc
inc
fsts
fldenv
cmp
add
rorl
add
pop
adc
jno
cld
adc
imul
pop
pop
outsb
lock
das
mov
adc
cli
jl
int3
clc
mov
sbb
xchg
pop
mov
adc
in
fdivrs
mov
pop
pop
frstor
mov
mov
sarb
mull
std
xor
pop
in
repnz
dec
pop
ss
cmp
cltd
xchg
in
cmc
inc
mov
or
fistps
into
add
cli
pop
cmc
js
call
and
mov
das
xor
push
mov
mov
xlat
inc
or
insl
aad
int3
ljmp
in
stc
add
nop
pop
inc
push
mov
test
mov
cmpsb
fnstcw
sub
dec
dec
in
mov
enter
dec
mov
xor
cmp
sub
pop
sub
adc
adc
idivl
push
je
jge
jmp
jl
add
push
cmc
lods
imul
pop
in
lds
sub
jne
cmp
add
pushf
jnp
jns
insl
mov
dec
mov
push
jae
cmp
adc
cmp
std
fcmovnbe
outsb
mov
sub
les
in
pop
rcll
pop
mov
aam
mov
pop
add
fnstsw
pop
leave
push
add
mov
inc
mov
pusha
out
cmp
push
mov
mov
cmp
mov
push
mov
xchg
sub
dec
sbbb
mov
popa
sahf
cmp
aas
xchg
push
adcb
inc
cli
mov
mov
loopne
inc
push
daa
and
js
inc
stc
mov
sbb
jl
mov
sub
test
cmp
cmp
push
es
jle
aam
push
fstps
adc
mov
add
cmp
push
adc
aad
mov
mov
inc
xchg
cmpsl
dec
sbb
popl
popa
jle
sbb
loopne
adc
push
dec
jnp
out
jb
cwtl
push
aad
push
push
mov
mov
out
inc
sub
xchg
and
inc
sbb
mov
pop
movsl
pop
rcl
mov
shll
cmc
jae
mov
mov
inc
inc
test
scas
cmp
or
push
mov
push
mov
shr
pop
andl
icebp
in
push
fwait
shlb
sahf
xchg
gs
push
stos
pop
insl
popa
repnz
dec
mov
jns
cmpsb
mov
push
hlt
xchg
leave
inc
adc
imulb
or
cmp
mov
pop
mov
repz
test
packuswb
inc
or
aaa
pop
mov
mov
loop
es
lock
fs
cmpsb
roll
inc
movsl
fnstsw
or
push
das
fmul
pop
aaa
insl
jae
add
cmp
daa
mov
imul
les
pop
jmp
mov
loopne
popf
imul
popf
stc
jge
aaa
jo
push
pop
xchg
xor
sub
xor
xchg
push
push
bound
jo,pn
inc
scas
and
or
mov
pop
mov
mov
shrl
into
pop
sar
aas
nop
movsb
cmp
rcrb
mov
push
add
or
add
leave
repz
cmpb
sub
sub
pop
fcomi
lcall
jmp
notl
xor
and
lret
aaa
out
rcrb
pop
and
rol
dec
bound
xchg
orl
xor
adc
push
xor
test
or
jl
push
sti
cwtl
xlat
popl
es
sub
jno
arpl
lock
push
lret
add
ljmp
in
cmpsb
jne
pop
xchg
int3
pusha
outsl
orl
mov
mov
mov
push
fwait
adc
pop
inc
subb
in
push
inc
mov
jmp
mov
fmull
mov
ss
gs
jecxz
out
mov
pop
test
js
push
ret
jl
ljmp
test
cmpsb
ja
sbb
push
in
aam
jmp
jae
push
sti
divb
push
xchg
mov
xchg
push
sub
mov
shrl
dec
imul
xchg
clc
add
push
imul
das
das
mov
sbb
sbb
sbb
hlt
xchg
iret
jbe
sarl
les
outsl
push
pop
xchg
outsl
insl
dec
pop
call
jne
roll
and
xchg
xor
out
insl
inc
mov
mov
popa
mov
xchg
ficomps
call
int3
dec
dec
cltd
or
jns
inc
pop
fldenv
repz
icebp
test
sbb
sub
and
mov
pusha
mov
in
mov
pop
into
sub
dec
shrb
mov
inc
xor
xchg
xchg
cmc
inc
xchg
out
inc
cmc
nopl
mov
cmp
test
jne
dec
pop
adc
jmp
shrb
add
arpl
xor
shlb
mov
push
jnp
inc
outsl
jmp
sub
jno
xchg
pushf
popa
or
add
cltd
cmpl
sbb
pop
or
xor
movsl
leave
movsl
inc
mul
addb
sbb
clc
mov
aad
pop
sbb
movsl
lahf
out
and
mov
jbe
fisubl
cmp
push
popf
push
mov
cmp
jl
cld
in
cmp
int
xor
pop
pop
fcoml
sahf
out
mov
lret
adc
add
cld
shlb
inc
inc
loope
mov
sub
cmpsb
into
fst
pushf
sub
into
aam
dec
mov
lea
jno
fstl
sti
adc
or
iretw
dec
enter
sbb
stos
adc
mov
out
jbe
test
add
cmp
loope
inc
mov
cmp
loopne
loope
sbb
in
out
pop
out
xchg
xor
dec
push
in
lock
push
xor
xchg
scas
xchg
imul
adc
pop
pop
subb
jmp
cmp
lds
ljmp
rclb
je
mov
xor
lret
jl
stos
jecxz
xor
push
adc
xor
jg
in
pop
adc
fadds
mov
dec
fnstsw
adc
enter
cmp
xchg
ret
jb
and
adc
push
fidivl
push
lahf
mov
fs
jg
xchg
mov
dec
pop
pop
cmp
icebp
cs
loop
lret
call
pop
pop
dec
imul
ds
outsl
cmpsb
daa
stos
adc
ds
adc
cmpsl
icebp
roll
mov
and
lods
cld
leave
loope
mov
adc
test
push
aad
xor
popf
dec
pusha
pop
adc
cmpsl
jle
stos
fwait
push
sub
int3
leave
mov
add
loope
int
mov
scas
and
sbb
and
iret
xchg
jle
rorl
dec
shl
xor
xchg
push
daa
rcrb
xor
mov
adc
sahf
orl
xchg
jl
scas
sub
push
int3
neg
shr
inc
fisttpl
rcrl
popf
xor
cmpsb
mov
mov
dec
fstpl
fldenv
cmp
cmp
inc
pop
push
mov
mov
pop
sbb
dec
xor
adc
pop
jnp
popa
cmp
lret
push
cmp
movsl
jbe
inc
mov
push
push
adc
cmp
pop
test
jno
and
and
jne
int
cld
mov
andl
mov
shlb
mov
add
mov
ja
add
pop
inc
mov
sahf
mov
subb
mov
fnstsw
out
xchg
inc
pusha
and
fcomps
int3
jp
cmp
stos
mov
fnsetpm(287
dec
mov
mov
aam
es
les
mov
mov
add
or
dec
and
dec
gs
mov
xorl
outsb
mov
sub
icebp
mov
sbb
xchg
jmp
mov
push
xchg
movsl
cmp
sub
pop
cmp
jmp
mov
pushf
lret
or
pop
push
in
or
outsb
stos
dec
loopne
or
dec
mov
loopne
fxam
mov
push
push
mov
stos
sbb
mov
dec
adc
and
dec
cmc
mov
jg
outsl
cmc
add
dec
jne
and
xchg
gs
inc
or
xchg
pop
jns
xchg
lock
rcr
push
mov
pop
sub
in
icebp
clc
add
adc
sbb
ret
dec
xor
xor
push
lods
sbb
mov
pop
xor
bound
and
ror
xchg
xor
mov
addr16
add
push
cmpsb
push
or
xchg
sub
sbb
adc
dec
rcrb
loopne
mov
xchg
shrb
cmp
cld
ja
inc
mov
xchg
sub
sbb
and
add
pop
test
lods
jecxz
cmp
add
mov
dec
in
les
sub
shll
mov
lret
add
addl
fmull
mov
popf
xchg
clc
fdiv
dec
push
add
sub
sub
sub
sub
aam
call
test
sbb
daa
and
sbb
nop
addr16
jmp
hlt
adc
in
ret
adc
xor
fldt
push
mov
lock
mov
fldcw
push
inc
cs
cmp
mov
xchg
icebp
aaa
pop
jg
loope
lds
scas
ljmp
test
orl
jno
and
icebp
in
pop
insb
pand
inc
xchg
pop
out
jno
dec
push
loope
adc
mov
dec
jb
std
dec
dec
clc
lahf
outsl
add
adc
jo
aad
xchg
lret
xor
dec
in
jb
inc
pushl
fimuls
pop
popf
mov
dec
ret
xchg
xchg
gs
lahf
jp
xor
mov
das
sbb
out
and
jno
cmp
dec
cmpsl
push
out
lods
adc
test
test
pushw
inc
jmp
or
lock
mov
scas
sub
jo
dec
ret
mov
lods
jb
ss
pop
and
mov
mov
stos
xlat
mov
sti
nop
mov
pop
pop
mov
xor
and
dec
mov
xchg
dec
sub
mov
jno
sbb
push
mov
stc
popa
push
pusha
mov
nop
les
scas
ljmp
push
jp
adc
out
xchg
addb
into
mov
out
mov
mov
jnp
mov
add
inc
dec
or
push
leave
aas
dec
std
outsl
push
mov
test
jge
xchg
test
stos
pop
dec
cmp
cmp
testb
add
sbb
add
push
fcomi
lods
icebp
or
hlt
push
jl
cwtl
dec
xor
mov
leave
rcll
and
mov
inc
mov
add
push
push
out
in
cmc
cmpsb
and
insl
xchg
add
mov
push
stos
mov
pop
add
cmp
iret
xorl
or
sub
sub
cmp
cmp
sub
cmp
adc
push
dec
fcomi
repz
mov
add
adc
cltd
lahf
test
add
fildl
sets
pop
jno
lods
sti
mov
in
add
xor
out
sahf
ret
sysexit
dec
add
mov
cmpsb
loop
pop
mov
fnstenv
test
sub
psubd
lret
fldl
jo
into
sbb
jg
gs
pop
inc
out
sub
and
dec
mov
xchg
or
ds
jl
inc
cmp
fiadds
je
dec
inc
xlat
arpl
pop
sbb
inc
sub
inc
add
jo
jns
loopne
lods
cmpsb
sub
cwtl
add
aas
cmp
cmp
xchg
into
jno
shrl
push
xchg
mov
jmp
jne
push
and
or
loope
jnp
pop
out
clc
add
cwtl
sub
les
xor
xlat
aas
sub
pop
shll
or
add
test
jns
jnp
loop
das
fwait
movsb
out
arpl
shl
cmpsl
mov
add
mov
mov
and
cmp
outsl
xor
data16
shll
fs
sahf
mov
call
add
out
inc
mov
jo
adc
inc
iret
arpl
mov
stos
lds
stos
cmp
pushf
clc
adc
call
dec
jae
sub
movsb
xchg
jl
xchg
mov
cli
pop
xor
jnp
rclb
mov
push
push
faddp
inc
jle
cmp
int3
cmp
stc
mov
arpl
jbe
jmp
xorb
fldenv
movb
pusha
mov
push
cmp
out
sub
lret
jp
cmp
jge
in
in
lcall
fimull
mov
pop
add
xchg
popf
cmp
push
hlt
stos
and
sbb
and
inc
scas
fistpll
mov
and
lds
or
mov
arpl
ror
loopne
incb
in
inc
jecxz
idivl
adc
out
mov
mov
or
and
xor
sub
sbb
pop
mov
sbb
mov
and
mov
sub
mov
icebp
push
jne
push
repnz
mov
pop
dec
psubsw
push
adc
pushl
push
sbb
adc
cmp
cmp
or
add
jle
mulb
out
std
jmp
sbb
shll
or
fisubl
fstps
xor
fsubp
sbb
pop
mov
popa
pushf
loopne
mov
scas
sbb
xor
xchg
pusha
ret
jnp
pop
xchg
or
add
shll
fisubs
orb
andb
sub
push
test
mov
lods
inc
mov
xor
insl
lahf
add
insb
ss
std
repz
mov
mov
insb
clc
or
pop
ds
popf
add
cli
cld
add
into
stc
in
dec
or
push
sub
dec
jo
inc
in
sbb
mov
gs
add
into
data16
das
adc
aaa
and
adc
testl
in
and
fstpl
call
xchg
hlt
mov
mov
jg
inc
pop
ret
inc
mov
mov
add
outsl
out
xor
fs
or
call
decl
scas
mov
hlt
mov
or
add
in
dec
repz
inc
ror
ret
jecxz
hlt
sbb
sahf
cld
enter
in
xor
cli
pushf
nop
loopne
pop
and
sbb
js
fildll
jp
leave
xchg
movsb
movb
and
push
sbbb
divl
jge
mov
xchg
inc
sti
fwait
mov
jns
mov
jno
adc
mov
xchg
cli
cmp
cwtl
xlat
aaa
lods
test
movsl
xor
loopne
stos
es
div
lret
lret
jae
cmpsl
outsb
sub
cmp
mov
sahf
outsb
in
hlt
add
imul
dec
iret
scas
pop
lret
xchg
mov
push
sbb
mov
leave
imul
sub
adc
push
int
call
mulb
push
dec
movsb
test
sbb
ret
lret
push
dec
lahf
mov
mov
imull
mov
icebp
xor
xchg
push
jbe
adc
inc
lret
lret
icebp
movsl
pop
sub
ss
aad
inc
nop
and
sub
sub
sbb
jns
xor
inc
es
adc
sbb
xchg
pop
cmp
fwait
cmp
fsubrp
rcll
sbb
add
cwtl
cmp
out
repz
scas
in
or
lret
rcl
push
inc
mov
inc
lods
addl
xor
in
popf
jnp
mov
loope
testb
fmuls
jne
hlt
repz
jmp
cmp
data16
jno
rolb
pop
fcomps
xor
mov
stos
scas
imul
sarb
add
fnsave
movsb
dec
insb
lret
mov
lods
jb
jg
xchg
adcl
cmp
jl
cmpsb
jl
jbe
fnstcw
push
sub
test
sbb
or
aad
inc
mov
mov
sub
cwtl
imul
imul
push
xor
outsl
dec
xchg
paddq
xor
fwait
mov
sti
mov
lret
cmp
xchg
loop
sub
mov
push
sti
mov
arpl
movsb
test
mov
cmp
rcrb
pop
mov
jbe
inc
sub
adc
enter
dec
cmc
fiaddl
lahf
outsl
xchg
dec
aam
jle
mov
ret
mov
jns
cmp
loopne
push
fdivs
mov
stos
popl
add
sub
or
push
dec
jmp
mov
hlt
pop
outsl
add
sub
shrl
mov
or
lods
pop
sub
ljmp
mov
imul
pop
xchg
add
push
inc
jg
or
scas
cmp
lock
sub
pop
jg
js
out
nop
enter
mov
lock
sbb
ljmp
sti
lods
add
scas
and
js
out
cli
test
jo
sub
and
sub
lret
mov
inc
daa
xchg
in
push
push
xor
mov
in
mov
jge
inc
pop
pop
bound
mov
shll
pop
call
sbb
cld
ds
mov
mov
movsb
fnsave
sti
jns
movsl
stc
out
clc
pop
mov
cltd
sbbb
imul
rcrl
pop
push
add
cli
fdivs
cwtl
mov
out
add
repnz
pop
js
xor
js
mov
jge
mov
inc
clc
dec
jbe
es
xorb
ret
sbb
mov
jno
push
fadds
setne
or
push
xor
sub
andb
xor
cmpsl
lret
shlb
je
call
dec
cwtl
mov
cmp
ret
andl
aad
cmp
bound
fcmovu
popl
push
ja
push
mov
jbe
and
push
movsb
aas
mov
mov
inc
push
dec
stos
nop
test
adcb
dec
outsb
cmp
inc
movsb
push
jbe
jae
cld
and
xchg
push
into
or
mov
aad
insb
js
cmp
mov
test
mov
outsb
mov
jae
dec
enter
repz
hlt
adc
sbb
adc
dec
jb
sbb
xor
test
sbb
jns
adc
stos
mov
enter
js
call
cmpsl
push
into
push
dec
adc
lret
sub
mov
daa
push
aam
icebp
loop
xchg
stos
in
out
loopne
test
jb
xor
pusha
xor
daa
movsl
push
mov
dec
mov
dec
pusha
xlat
subb
adc
mov
add
mov
mov
adc
cltd
cmp
mov
mov
pop
sbb
vphaddwd
pop
xchg
cwtl
je
sahf
mov
push
mov
aad
jne
inc
scas
adc
push
fadds
cmpsb
loopne
mov
adc
pop
sbb
and
cmc
es
aam
loope
lea
ds
into
xlat
outsl
pop
mov
push
shr
andl
mov
imul
lcall
push
jp
mov
adc
jecxz
inc
in
mov
int3
dec
gs
rclb
outsb
sub
pusha
rcrl
clc
shrl
insb
mov
popf
mov
sahf
cs
sbb
fimull
sbb
pop
ja
or
push
incl
xor
mov
jmp
xor
aad
add
loop
jb
jge
dec
jnp
call
xor
lea
pop
adc
mov
cmp
data16
int3
add
xchg
cmpsl
fwait
mov
out
out
cmp
test
insb
aam
jnp
jmp
fwait
cwtl
gs
std
pop
bound
xchg
dec
stos
out
into
mov
in
fcmovbe
popf
fcoms
fcmovne
std
add
outsl
add
jge
xor
push
nop
aad
xlat
dec
mov
or
inc
and
mov
sahf
jecxz
dec
pop
inc
xchg
mul
sbb
leave
inc
jne
or
idivl
and
mov
mov
das
push
pop
jmp
inc
jb
add
iret
dec
mov
mov
pop
inc
inc
add
negl
mov
sar
ret
jge
jne
sbb
jae
adc
mov
ret
je
xchg
dec
inc
loop
dec
sub
cltd
adc
outsl
and
in
and
div
bound
push
shr
and
dec
mov
dec
inc
xor
jge
jge
inc
in
sbb
ficoml
adc
les
and
cmp
sub
sahf
mov
cmp
lods
inc
aad
nop
or
enter
push
in
mov
fiadds
daa
mov
xchg
xchg
xlat
leave
sbb
push
dec
xor
outsb
pusha
mov
add
imul
inc
bound
xchg
scas
gs
jae
frstor
adc
into
sbb
dec
aad
inc
push
fists
push
fwait
lds
xchg
orl
jmp
in
adc
fucomip
jo
jo
xchg
fisubs
les
sub
sub
pusha
cmpsl
and
lods
xchg
and
and
inc
sub
lcall
aad
push
int
test
flds
movsl
jno
in
js
sahf
pop
xchg
xchg
test
dec
xor
out
fwait
fs
lods
add
xor
cwtl
sbb
fsubrp
pop
jmp
xadd
inc
daa
nop
movsl
fnsave
pop
ficomps
sub
or
sbb
adc
sbb
dec
ret
adc
xlat
hlt
mov
sub
js
push
sbb
and
adc
faddl
sub
out
icebp
roll
sbb
pop
in
mov
dec
testl
leave
fstl
gs
lods
les
sub
push
dec
cmpsl
fsubr
ljmp
xor
gs
inc
pop
xchg
sub
xchg
fsubr
push
xor
aaa
xor
sarb
icebp
dec
pop
mov
cmp
aaa
sbb
mov
out
adc
test
ja
mov
out
and
fsubrl
add
mov
fsubl
push
into
jbe
mov
mov
push
push
insb
gs
xchg
inc
loope
sbb
inc
sbb
dec
cmpsl
mov
xor
and
out
movsl
sti
leave
test
adc
lds
add
arpl
and
cwtl
iret
push
dec
mov
lret
test
test
aas
mov
pop
inc
or
out
loopne
in
push
mov
mov
sbb
mov
push
ficomps
xchg
scas
sbb
adc
ja
add
add
loope
cmp
adc
lret
insb
orb
ja
repz
ret
sbb
xor
mov
pop
pop
mov
enter
adc
dec
jb
dec
adc
or
lret
inc
repz
xor
std
xchg
stc
mov
xchg
orb
out
aad
imul
aad
in
lret
pusha
xchg
xor
mov
mov
daa
es
ljmp
data16
inc
sti
jp
inc
lret
sub
aas
imull
insl
cmc
out
cli
out
mov
jecxz
and
repz
dec
fwait
or
adc
adc
xor
int3
cwtl
out
mov
leave
clc
or
dec
test
pop
fisttpl
insb
sti
fcoml
jecxz
xor
lret
mov
pop
mov
bound
sub
dec
or
xorl
xor
mov
mov
push
push
icebp
das
lock
test
sbb
es
aaa
repnz
sbb
fisttpll
insb
ss
data16
iret
leave
add
pop
jmp
icebp
fucomip
loop
rcr
adc
pushf
das
or
cmp
fwait
roll
mov
adc
ja
insb
dec
mov
push
std
push
sub
pop
scas
fisttpll
cmp
jae
xorb
xor
hlt
ljmp
ret
mov
popa
mov
dec
mov
mov
mov
xchg
mov
in
jl
mov
add
xor
filds
repnz
adc
enter
stos
les
repz
mov
sub
sub
adc
aam
fistpll
inc
pop
inc
dec
xchg
negb
fdivl
mov
pop
imul
push
fnstcw
sub
inc
adc
adc
jg
call
pop
xor
jno
in
rcr
xchg
std
pop
push
cmp
aas
mov
pop
lock
in
sbb
jo
les
mov
jmp
cmpsb
mov
add
cmpl
loop
jnp
fs
fdivl
pop
mov
sbb
inc
mov
xchg
adc
aaa
ds
mov
pop
mov
loope
lahf
lds
pop
es
sbb
sbb
mov
mov
jno
jp
xchg
sbb
and
and
int3
dec
jmp
fbld
and
push
mov
add
adc
imul
or
sbb
sbb
sub
out
es
lret
sbb
add
sub
out
pop
das
cwtl
xchg
mov
icebp
mov
fistpll
xor
sbb
hlt
stos
out
mov
sub
sbb
mov
xchg
lods
sbb
cmpsb
sbb
jecxz
mov
jns
adc
das
out
mov
fimull
mov
xchg
dec
mov
jp
mov
push
mov
scas
icebp
ror
jmp
xchg
jnp
loopne
das
lods
inc
sbb
cmp
into
add
in
xchg
lods
mov
in
addl
dec
or
inc
jo
adc
add
xchg
ret
and
bound
ljmp
shrb
mov
jo
insl
lods
int
aam
inc
adc
iret
lcall
ljmp
push
lds
and
xor
sahf
gs
push
cmp
ss
pop
push
les
push
jmp
fmulp
add
fsubrs
dec
push
add
sbb
fcmovb
mov
in
lods
dec
mov
jge
mov
ljmp
inc
jae
fsubrs
dec
xor
mov
mov
cli
sub
push
mov
lret
cmp
sbb
xor
in
add
cmp
je
push
popf
cmpsb
lock
or
jnp
mov
sub
lret
pop
push
or
hlt
test
je
xchg
xchg
adc
mov
push
lahf
mov
test
adc
test
ret
push
mov
pop
fwait
dec
inc
in
cmpsb
sbb
icebp
testb
inc
movl
pmaddwd
outsl
jno
loop
push
dec
fwait
or
mov
inc
adc
rorl
mov
push
jp
cmp
int
das
pop
js
or
fsubr
ljmp
nop
aas
mov
jecxz
or
dec
test
sub
mov
pop
in
ret
sub
pusha
mov
inc
push
push
pop
inc
jo
pushf
sbb
jle
test
rcrl
adc
fldl
and
sbb
fdivl
dec
mov
cld
es
sbb
aad
sub
loop
movsb
push
adc
int3
cmp
jg
cltd
sub
or
push
mov
dec
in
xor
sub
bound
gs
push
mov
jecxz
xchg
push
scas
cmp
ret
lret
xor
mov
int
adc
mov
outsb
in
push
mov
bound
out
pusha
lret
pop
pop
shll
mov
les
jnp
ret
or
push
addr16
in
jne
in
pop
mov
xchg
lock
pop
mov
push
adcb
ljmp
inc
jns
sub
or
icebp
sub
sbb
jae
in
cmp
sub
push
fidivl
fld
adc
push
push
js
xor
and
dec
sti
fmull
sub
pop
mov
iret
orl
hlt
or
mov
xor
inc
jno
mov
sahf
mov
popa
jge
push
shll
adc
adc
add
icebp
push
pop
lahf
sbb
xchg
pushf
mov
data16
clc
lds
fldl
or
xchg
es
fbld
xor
outsl
push
lcall
or
or
and
test
lods
dec
push
jmp
inc
test
jmp
xor
ja
es
hlt
push
push
mov
xor
sbb
or
xor
xchg
pop
xor
adc
or
pusha
ss
dec
dec
shl
outsl
je
cmpsb
dec
pop
pop
pop
xor
push
xchg
push
inc
push
mov
and
insb
xor
sahf
mov
in
lret
inc
inc
sbb
push
ss
mov
arpl
pushf
xchg
pause
xor
jg
imul
sbb
xor
cmovbe
sbb
dec
imul
lcall
or
sub
ror
cmc
in
es
bound
add
repz
sub
dec
xor
hlt
aas
inc
test
in
adc
scas
imul
mov
shl
imul
mov
outsl
adc
push
adc
xchg
cmp
icebp
xchg
push
insb
pop
jle
cmc
cwtl
rclb
sub
push
sbb
xchg
add
popf
dec
andl
xchg
test
ss
mov
out
fistl
xor
cmpsb
mov
ficompl
in
dec
in
lcall
std
mov
stos
add
insl
mov
cltd
into
mov
gs
mov
inc
mov
cmp
jle
fsubl
clc
add
in
dec
loopne
sbb
data16
inc
push
fistpl
xor
mov
outsl
repz
cmp
fcompp
outsl
test
int
rcll
xchg
mov
jbe
cmp
adc
int3
scas
daa
popa
add
cmpsb
xchg
hlt
fwait
add
and
pusha
or
nop
jmp
jecxz
sbb
add
arpl
mov
pop
cld
mov
jae
add
and
jnp
sbb
adc
push
and
sbb
pushf
dec
mov
push
inc
xchg
mov
inc
test
lods
hlt
xchg
cmc
push
movsl
jae
sub
mov
lcall
out
stos
adcl
mov
out
fbld
loop
pop
mov
inc
or
loop
sbb
repz
fldcw
adc
pop
lahf
out
xor
xchg
or
movb
cmpl
rcrb
loope
test
adc
mov
cmc
fs
fidivl
cmp
mov
lcall
les
or
les
push
mov
xlat
shlb
lods
pop
and
sbb
jbe
loopne
clc
repz
adc
or
roll
mov
cs
jecxz
loopne
cmpsb
aas
js
adc
mov
dec
fbstp
int
iret
xchg
pop
push
sbb
adc
cmp
repz
pop
les
add
popf
xchg
testb
inc
fs
outsb
in
jl
movsb
orb
cmpsb
iret
aam
les
sti
inc
cmp
sahf
cmp
fistpl
cmp
lret
pusha
add
adcl
mov
repz
call
push
add
gs
ljmp
or
dec
and
xchg
jmp
xor
aaa
stos
outsl
and
je
and
mov
or
and
xor
sbb
enter
inc
mov
roll
lock
jns
mov
push
and
fbstp
fs
ret
aaa
add
cmp
jp
adc
in
cmc
rol
cmp
add
cltd
leave
jne
xchg
sub
inc
mov
out
in
mov
pop
and
loopne
lds
lds
push
cmp
xchg
sti
shlb
dec
fbstp
dec
aaa
pop
lods
sub
ljmp
lea
sub
cmp
lret
mov
xor
cmpsl
xor
out
jae
in
add
xor
mov
sbb
shll
adc
movsl
js
jl
jge
rcll
dec
ret
xor
mov
push
mov
jmp
xor
subb
into
jp
fmuls
in
mov
or
and
inc
mov
orl
lods
cmp
pop
push
or
jae
mov
cmp
cld
xchg
and
mov
cmpsb
mov
aas
sbb
subl
stos
xorb
arpl
pop
mov
loope
fstl
sub
outsl
insb
stos
add
cli
push
adc
out
js
xor
popa
pop
stos
mov
mov
sub
adc
xchg
or
movsb
scas
lods
das
mov
clc
mov
in
jns
jecxz
push
mov
push
or
push
xchg
fwait
mov
or
pop
xchg
push
push
repnz
mov
xor
jae
mov
pop
repz
dec
cmpb
insb
or
mov
ret
pop
aas
add
test
xor
or
cwtl
pop
inc
mov
fiaddl
cltd
loope
roll
loopne,pt
stos
mov
shlb
cmpsb
int
loop
adc
pop
fst
mov
mov
pop
pop
lea
data16
ret
inc
dec
shll
dec
xor
xchg
and
movsl
popa
lock
xor
sbb
mov
inc
add
js
mov
mov
mov
xchg
insb
mov
pushf
xchg
push
in
mov
scas
stos
xor
jmp
fadds
inc
pop
insb
in
mov
mov
jl
leave
out
outsb
out
incl
sbb
sub
fstl
clc
adc
push
icebp
movsb
adc
push
call
or
or
sub
inc
into
mov
cwtl
xor
ret
fsubr
dec
call
xchg
clc
int
lea
js
cmp
sub
aam
mov
ret
mov
mov
icebp
and
ljmp
adcb
sbbb
clc
or
aad
dec
dec
jbe
jb
sbb
iret
sub
pop
movsb
xchg
push
mov
push
xor
movsb
xchg
jmp
add
mov
fs
arpl
outsl
push
aaa
hlt
and
in
add
xchg
ss
sub
insb
xchg
dec
sub
and
mov
pop
sbb
mov
arpl
ret
pop
inc
out
push
test
xchg
test
aam
cltd
in
dec
xchg
ja
js
cmp
push
subl
in
icebp
mov
add
jae
enter
add
adc
negl
addr16
cmp
mov
pusha
pop
std
jne
add
fwait
cmpsl
fsub
stos
mov
mov
mov
das
lea
shr
fidivrs
fs
mov
dec
xorb
bound
or
mov
jne
dec
rorl
add
ss
dec
imul
sub
pop
sti
gs
pop
adc
repz
xchg
cmpsl
repz
stc
jl
sub
cwtl
dec
pushf
dec
mov
push
push
cld
pop
lahf
pop
test
inc
xchg
icebp
mov
lods
ret
cltd
sub
cli
cmpsb
aas
cmpsl
insb
push
inc
mov
mov
add
dec
ret
idivb
jp
mov
fldt
divb
pop
stos
push
fwait
xor
mov
xor
mov
dec
movsb
cld
push
xor
int3
sbb
pop
adc
add
sbbb
test
jge
and
xor
test
orps
lods
lahf
xor
pop
add
dec
cmpsb
xchg
div
push
lods
repz
std
mov
mov
mov
mov
push
pop
jmp
jmp
mov
jnp
push
std
sarb
rcrl
les
scas
xor
add
loopne
mov
sub
cmc
aam
push
test
call
adc
xor
mov
js
stos
ja
jmp
mov
sarb
iret
inc
shlb
je
pushl
fsubrs
cmpsb
cmpsl
add
fbld
nop
leave
push
jb
push
sti
push
inc
aad
insb
call
int
jg
push
jg
cmp
pusha
sbb
stos
mov
inc
negl
push
dec
cmpsl
add
xor
jp
cmc
scas
mov
dec
mov
imulb
stos
test
cmc
mov
or
hlt
movsb
sbb
dec
add
jmp
sbb
popf
cmpsl
and
fiaddl
jp
test
leave
scas
xchg
das
adc
imul
pop
nop
jo
mov
sub
dec
or
fsts
jns
rcll
lea
popf
rolb
mul
dec
xchg
stos
sbb
loopne
push
push
enter
inc
push
aam
mov
lock
ljmp
cmp
mov
inc
fs
mov
orb
mov
aad
push
push
jb
dec
in
xorl
gs
mov
outsb
jmp
mov
xchg
adc
aam
js
outsl
mov
rcrb
sub
mov
popf
movl
mov
stos
int
shrb
outsl
into
outsl
mov
ja
mov
in
pop
cltd
sub
ffree
push
jb
outsb
dec
push
adc
cmp
insl
pushf
dec
sbb
inc
lahf
pop
cld
pop
mov
mov
dec
xchg
jo
scas
inc
mov
xchg
add
icebp
pop
or
scas
and
push
popf
jno
int3
pop
andl
popa
xorb
inc
xor
in
mov
or
push
lret
daa
xor
add
fwait
inc
mov
mov
mov
je
push
lret
inc
push
jge
je
ljmp
xlat
ljmp
sbb
pop
lds
push
add
adc
aam
cmp
mov
notb
hlt
lahf
jg
int
xor
loop
movb
out
adc
sbb
dec
jns
push
and
test
push
pop
xor
cmp
les
mov
add
or
pushl
mov
dec
cmp
ja
pop
jns
cmc
xlat
ret
inc
cli
adc
adc
call
add
stc
xchg
mov
adc
cmp
arpl
jne
push
aaa
ret
repz
sbb
jge
aam
ret
std
push
mov
push
aam
jns
test
psubsw
adc
mov
mov
adc
repz
inc
test
add
jb
jle
adc
adc
mov
jns
mov
and
into
sbb
int
insb
cmpsl
aaa
jge
push
pop
arpl
sub
adc
out
mov
inc
iret
orb
js
in
daa
jae
adc
js
dec
fucomi
ss
cwtl
xor
xlat
sub
xorb
mov
test
pop
push
xchg
sbb
sbb
sahf
adc
sahf
lahf
enter
push
lods
hlt
xchg
xchg
fiaddl
push
jb
push
ss
push
daa
xlat
in
dec
test
ficompl
stos
sub
fdivrl
sub
and
sbb
jmp
sub
pop
addr16
push
jg
gs
cwtl
dec
inc
mov
in
roll
shr
jo
xor
push
mov
sub
and
sub
loopne
and
inc
cmpsb
mov
sbb
ret
push
movsb
rcl
adc
gs
add
arpl
push
mov
cmpsl
cld
mov
outsl
pushf
dec
push
sbb
inc
outsb
xchg
lods
lock
fdivrl
or
mov
dec
or
pop
ret
jle
jb
data16
mov
add
ret
push
fistpl
pop
jo
jl
in
shrl
mov
scas
pusha
mov
add
adc
mov
xchg
into
sub
jo
in
jnp
mov
lahf
roll
xlat
mov
dec
xorl
popf
sbb
pop
cld
jae
sub
je
mov
add
mov
cs
rorl
popf
stos
cld
adc
mov
jge
jecxz
mov
fwait
loopne
nop
loope
decb
cmp
int
push
sub
stos
hlt
cmp
inc
pop
aas
in
xor
jmp
icebp
loop
in
and
js
dec
imul
and
xor
imul
shrb
add
iret
or
outsb
and
xchg
add
push
insl
fldl
popa
dec
ljmp
mov
out
out
decl
dec
scas
repnz
xchg
add
or
bound
shrb
sbb
sarl
sarl
aad
in
xchg
jle
cmp
enter
fidivl
jb
inc
inc
stos
stos
addr16
jo
push
cmp
jge
rclb
rorb
clc
mov
test
inc
sub
adc
aad
repz
sub
jae
ret
jb
mov
movsb
leave
sub
pop
gs
mov
xor
subl
out
dec
in
jle
dec
sub
xor
stos
cld
in
jecxz
cmc
mov
mov
xchg
fs
mov
insb
lock
out
out
jl
insb
das
js
enter
orl
hlt
mov
fisttpl
addr16
rcrb
mov
pop
pop
adc
mov
pop
mov
imul
or
xchg
push
lods
xor
mov
jne
inc
jb
push
rolb
xchg
out
ss
jg
out
fadd
cmc
divb
sub
repz
test
shl
pop
jb
inc
sbb
addl
lock
mov
mov
int
hlt
sub
std
push
mov
int3
jne
xor
lock
mov
and
sbb
inc
pop
rcll
mov
xchg
pop
insl
dec
lahf
add
test
divl
jecxz
sbb
or
jns
mov
int3
push
lret
hlt
imul
add
xor
jp
or
sbbl
add
mov
mov
in
outsb
and
fldcw
movsl
ret
push
pop
cmc
sub
into
sbb
ja
jb
push
mov
notl
mov
mov
sub
stos
inc
mov
scas
sbb
and
inc
popa
or
out
sahf
sarl
shrl
fidivl
sbb
data16
mov
push
pop
in
stos
push
jno
int
loopne
sub
jl
shrl
mov
test
les
das
lods
xchg
movsb
pop
mov
mov
jae
xchg
cmp
es
adc
insl
jbe
sarb
push
mov
or
and
and
fnsave
mov
shlb
adc
mov
divl
xor
test
sti
clc
mov
mov
xor
mov
das
dec
pop
movl
movl
add
push
mov
dec
enter
xorb
pop
xchg
xchg
inc
jne
jp
lods
into
jecxz
mov
mov
das
lss
mov
sahf
enter
jbe
push
xor
fs
push
push
dec
and
pop
xchg
jb
icebp
inc
and
outsl
mov
idivb
mov
sbb
fwait
lock
lret
lahf
mov
xchg
aad
fldl
cmpsb
inc
gs
js
jb
rcl
xchg
pop
mov
cltd
dec
jecxz
cmp
mov
pop
xor
sahf
cli
inc
add
push
das
xchg
into
inc
nop
movsl
mov
ss
jne
jne
mov
sub
arpl
loope
call
daa
popa
xlat
div
pop
fimull
ss
inc
dec
and
pushf
push
sbb
pop
mov
dec
mov
cs
mov
adc
outsb
mov
movsl
xor
pop
inc
imul
out
ret
pop
bound
pop
hlt
lea
sbb
or
movsb
movsl
mov
mov
stos
mov
jnp
popa
movsb
adc
cmc
mov
int
test
push
int3
icebp
xchg
dec
lret
pusha
or
mov
xchg
sbb
out
xchg
lods
cltd
outsb
int
sbb
imul
push
mov
mov
sub
add
inc
or
imul
icebp
mov
lods
mov
shlb
jmp
sbb
adc
add
lods
dec
das
sbb
sti
or
inc
xor
out
jnp
std
push
cld
adc
mov
xchg
add
jle
lock
insl
push
mov
mov
out
push
sbb
mov
out
aas
cmpsl
out
or
aam
bound
mov
enter
clc
xchg
jmp
mov
loopne
sbb
nop
cmp
shlb
mov
imul
in
je
push
outsl
adc
inc
das
mov
sub
jne
sbb
aas
adc
icebp
cmpb
mov
icebp
js
or
and
adc
pop
and
ss
lods
push
xor
pusha
dec
push
iret
push
inc
not
aad
pop
inc
dec
sbb
popf
cmp
adc
popa
dec
subb
icebp
imul
scas
bnd
dec
int
fwait
ja
ljmp
jne
pushf
into
xchg
lret
sub
adc
mov
fldcw
add
popl
xor
fldl
decb
push
inc
push
lahf
jno
inc
test
lret
insb
sub
sti
mov
arpl
or
jle
adcb
xchg
frstor
jnp
hlt
lret
aad
xchg
add
add
shlb
mov
fsubrp
stos
fstpt
jg
insb
inc
push
xor
xor
sbb
cld
cmp
xchg
movsb
jbe
push
or
lret
into
mov
dec
jle
pushf
std
mov
dec
adc
std
popf
and
arpl
sub
cmp
test
push
aad
into
add
mov
xor
sarl
movsb
xor
cmp
xor
in
out
lret
ret
int
fldenv
into
xor
push
stc
pop
mov
ja
jmp
ja
sub
add
mov
or
jne
addl
mov
ret
add
fisubrs
mov
dec
or
or
mov
aad
movsb
loope
repz
push
or
in
test
lods
fucomi
sub
cwtl
in
sbb
daa
xchg
pop
int
ret
mov
inc
sub
bsr
clc
push
dec
add
popa
pop
mov
mov
mov
mov
mov
inc
es
jp
sbb
dec
fisubl
nop
inc
adc
leave
es
in
xor
in
movsb
or
adc
add
call
push
cmp
aaa
loope
jge
inc
je
imul
es
dec
out
insl
iret
push
inc
outsl
dec
repz
xchg
xor
mov
pop
jl
je
dec
cmp
out
int
aad
add
xor
aad
dec
push
add
js
pop
imul
jbe
cmp
and
adcl
mov
mov
jg
pushf
mov
adc
push
lahf
mov
add
pop
mov
rcrb
mov
cmp
mov
cs
fcom
mov
inc
sbb
int
fwait
sti
inc
mov
loope
mov
rcll
outsb
out
test
mov
mov
int
repz
mov
cmp
adc
cli
xchg
xor
mov
pop
push
pop
lcall
leave
push
adc
loope
leave
inc
scas
and
push
jae
out
jl
xchg
pop
and
push
bound
mov
in
lret
mov
decb
adc
test
jne
cld
fildl
xor
in
add
stos
lock
loop
pop
lock
pop
es
loop
cmp
add
js
sbb
aas
and
in
sub
inc
jmp
mov
call
outsl
data16
push
icebp
xor
mov
ljmp
sub
orl
cltd
sbb
in
int3
inc
or
scas
divl
and
out
notl
dec
lods
or
loop
insb
stos
xchg
lret
adc
cmc
sbb
lods
lods
push
jb
movsb
dec
dec
push
out
cmp
xor
adc
mov
out
dec
and
stos
int3
lods
xor
pop
test
outsb
add
aas
sbb
add
add
dec
xchg
pop
inc
pop
adc
sbb
or
loop
and
add
es
in
sti
shlb
push
int3
jo
sub
xchg
addr16
das
stc
popa
loope
xchg
dec
sbb
cmp
mov
lret
movsb
jge
dec
jle
ljmp
stos
pop
mov
jecxz
push
dec
and
fistpll
out
jge
sti
loope
inc
push
lods
mov
and
lods
or
lea
jecxz
cmp
and
xor
into
stos
hlt
cwtl
dec
lret
pop
imul
scas
pop
call
lods
push
xchg
loopne
mov
outsb
adc
pushf
or
fadd
cmp
mov
pop
int
filds
mov
add
pop
test
shlb
out
add
cmp
jnp
push
and
sbbb
cmpsl
test
jno
gs
and
enter
or
cmpsb
mov
push
jo
rcrb
mov
xor
mov
pop
mov
nop
mov
inc
das
fistl
sbb
mov
mov
arpl
adc
xchg
imul
cwtl
in
cld
fs
fwait
xchg
je
nop
add
bound
ret
adc
mov
arpl
sub
jns
push
insb
mov
sub
in
add
sbb
cmp
sub
imul
xlat
xchg
ds
rcl
jb
cmp
mov
cld
push
repnz
dec
or
enter
sub
xchg
lods
add
add
fbld
mov
aad
adc
mov
leave
dec
inc
cmpsl
sub
dec
mov
mov
push
inc
xchg
por
lods
icebp
scas
mov
gs
xor
xchg
aaa
hlt
pop
and
in
int3
out
insl
push
inc
cmpsl
loop
loope
xor
mov
or
pop
inc
inc
pop
fucomp
mov
addl
pop
jle
jmp
lret
mov
mov
sahf
sbb
mov
stos
sbbl
dec
call
mov
sbb
fsubrl
call
dec
test
dec
imulb
stc
lock
and
outsb
sbb
cmp
sarl
push
add
xchg
mov
xor
dec
and
shlb
loop
add
adc
jmp
pushf
stc
imul
xchg
shlb
ja
fcoms
into
int3
les
ds
inc
leave
sbb
push
ss
fisubrl
mov
fdivrs
push
pop
roll
icebp
mov
or
pushl
sti
jle
mov
lahf
pop
xor
sbb
pop
fnstsw
or
lahf
test
and
add
mov
jp
adc
lock
stos
aad
xor
cmp
adc
rcl
pusha
popa
mov
xor
sub
or
xchg
adc
sahf
rcl
das
idivl
xorb
mov
shrb
ret
rclb
cwtl
cmp
negb
cli
xor
cwtl
lds
or
fbld
mov
mov
dec
jo
sbb
jl
stos
inc
xchg
mov
sub
xorl
mov
mov
daa
sub
xchg
inc
sub
fcom
pop
divb
fcoml
push
push
imul
fsubl
fcomps
hlt
lea
dec
call
sub
popa
jp
call
mov
cmpsb
stc
insb
jb
test
test
xchg
sbb
mov
outsb
repz
add
xchg
lret
imul
pop
jg
ret
jle
adc
sti
push
inc
nop
enter
lret
cmp
push
inc
add
and
jns
lahf
push
mov
jno
pushf
in
mov
mov
cmpsl
lods
cmp
pusha
sbb
test
stc
add
jmp
insb
loop
sbb
out
adc
hlt
sbb
push
cmp
and
xchg
add
cld
cs
shr
in
xchg
push
mov
sub
fmull
iret
push
in
push
mov
nop
jecxz
movsb
insl
enter
inc
push
cld
xor
mov
sbb
push
mov
mov
fsubl
or
jg
xchg
adc
cmp
in
jg
pop
sub
outsb
mov
aam
scas
mov
sbbb
movsl
mov
push
jl
sbb
xchg
mov
mov
out
adc
imul
and
cmp
in
xor
fidivl
jb
or
insl
mov
inc
xchg
mov
cltd
in
inc
fwait
cmc
ljmp
movsl
mov
scas
js
les
lea
enter
test
mov
dec
das
sbb
lahf
inc
out
and
adc
ret
mov
popa
in
push
int3
mov
pop
sbb
gs
hlt
xchg
movsl
sub
cmp
mov
and
call
bnd
test
and
pop
ss
out
push
or
frndint
in
mov
mov
dec
aas
and
popa
cmp
xchg
in
mov
shll
mov
js
mov
push
fwait
rcr
adc
mov
in
cmp
fiaddl
aas
sbb
aaa
jl
jl
test
je
out
mov
int
insl
and
mov
xor
sbb
sbb
idivl
test
sahf
pusha
adc
jno
sbbb
dec
pushf
stos
loope
inc
jno
mov
push
arpl
jb
push
hlt
cmc
xchg
cmp
insl
aas
add
mov
jns
lcallw
aaa
xchg
jl
cld
outsl
fsubrs
sbb
adc
cmp
xchg
enter
icebp
shl
push
pop
xor
addps
loop
push
mov
int3
xchg
aaa
sub
scas
std
dec
mov
data16
arpl
dec
xor
jne
push
xor
loopne
cmp
jge
mov
mov
jnp
popa
mov
pop
cmpsb
xchg
rol
sahf
inc
cwtl
shrl
jg
insb
dec
cltd
mov
pusha
dec
cli
sbb
mov
repnz
mov
jge
cmp
fsubrl
xor
or
ljmp
subl
stos
ds
push
aas
jae
and
mov
pop
jo
xor
add
and
daa
test
arpl
imul
inc
pop
cs
mov
adc
xlat
cltd
ficoml
repz
dec
ret
clc
dec
repz
imul
sbb
sub
add
std
inc
out
das
jo
push
mov
int
jae
lods
xchg
or
inc
aad
mov
es
pop
adc
mov
imul
imul
movsl
sarl
inc
in
ret
shlb
push
insb
or
out
and
inc
clc
std
in
xor
fisttpl
lods
cs
in
adc
mov
jmp
adc
push
je
call
movsl
mov
sub
leave
push
xor
push
push
pop
mov
mov
pop
leave
push
inc
xchg
xchg
sub
mov
mov
cmc
hlt
iret
lahf
enter
fninit
add
sbb
sbb
add
cld
testl
mov
cmpsb
cs
lret
and
fwait
pop
inc
ja
popa
jmp
into
cli
lds
jb
rcll
int3
jbe
dec
inc
data16
fdivrl
add
push
shll
cs
scas
icebp
leave
jns
jae
mov
xchg
out
daa
adc
inc
sbb
ds
push
or
push
jae
lock
sbb
jp
push
pop
mov
sbb
adc
scas
cmp
cmp
mov
shr
es
ficompl
in
jl
lahf
ret
add
fdivl
jecxz
les
repz
mov
inc
dec
pushw
sbb
sbb
fwait
mov
cmp
push
pushf
fisttps
andb
test
aad
xor
xor
aam
pusha
ljmp
ror
push
sbb
lds
push
jge
dec
repnz
jns
dec
iret
push
jns
rcll
xor
sub
ss
xlat
pop
and
adc
mov
jb
inc
outsl
test
stos
rolb
mov
inc
adc
fwait
xchg
mov
jns
jg
sub
sarb
fwait
add
sbb
lods
orl
out
test
test
pop
cmpsl
filds
cli
insl
xchg
jo
ds
jl
int
sub
jnp
sub
inc
adc
mov
sbb
cli
jne
cs
xchg
testl
adc
das
test
sbb
xor
lret
scas
les
cmpsl
arpl
xlat
jmp
adc
gs
je
xchg
sbb
dec
mov
xor
add
cltd
js
bound
add
lahf
lea
push
into
sbb
cs
xchg
add
inc
call
scas
push
sahf
xchg
xorl
mov
ss
mov
inc
cmc
xchg
pusha
mov
sbb
and
sbbl
push
dec
add
sbbl
negb
xchg
fisttps
loope
lcall
inc
das
test
mov
jmp
roll
and
dec
les
in
arpl
outsl
pop
mov
shlb
ljmp
mov
shll
lds
adc
cmpsl
push
cs
popa
fwait
insb
shlb
and
outsl
stos
inc
xlat
imul
repz
or
daa
ds
cltd
imul
mov
jb
xor
call
cld
shll
or
lcall
cli
shr
jo
jnp
decl
push
push
cwtl
add
push
icebp
jecxz
inc
adc
adc
addr16
movsl
mov
scas
idivl
pop
and
add
aad
adc
dec
in
rorb
repz
cld
mov
lods
cmpb
mov
shlb
fs
fwait
aad
cltd
push
loop
xor
mov
push
inc
hlt
sbb
sub
call
and
sub
jge
repz
push
mov
jns
mov
xchg
gs
add
dec
lret
sbb
lods
outsl
iret
adc
jns
mov
shlb
inc
ffreep
fidivl
popf
popf
pop
mov
and
clc
stos
ficomps
jl
ss
xor
daa
hlt
pop
lret
popa
repnz
imul
adc
jns
lcall
test
leave
mov
int
testl
js
and
imul
pop
xchg
scas
lcall
stos
out
or
push
cmpsb
jmp
int3
inc
lret
jmp
ret
mov
lcall
mov
cmp
mov
xor
aas
xchg
out
scas
dec
mov
inc
out
mov
popa
xchg
pop
push
lret
popf
jae
shrb
and
mov
cmp
aas
cltd
sub
push
enter
rcrl
push
mul
jmp
mov
mov
dec
pop
jp
push
test
or
add
pop
xchg
adc
inc
jecxz
sub
lahf
sti
cmp
in
mov
jp
cmp
jmp
mov
dec
xor
popa
adc
jne
mov
incb
mov
push
xchg
sbb
sub
lods
mov
jg
lret
loopne
lds
jno
mov
push
push
inc
mov
pushf
dec
cmp
pop
push
pop
in
cmp
push
mov
mov
je
and
stos
xor
dec
add
mov
push
lahf
sub
stos
repnz
pop
imul
call
add
adc
scas
pop
outsb
or
mov
mov
cli
jmp
out
int3
cmp
out
sub
lds
push
add
ljmp
mov
movsb
outsb
sub
addr16
xchg
lret
pop
shrl
cli
cmp
jno
scas
jns
cmp
xchg
push
mov
dec
fdivrl
in
lahf
pop
sbb
ret
into
lock
xorb
int3
int
movsl
stc
or
inc
mov
cmp
cmp
pop
test
mov
add
icebp
sti
int
sub
mov
inc
repz
xor
adc
scas
and
xorl
cmp
cwtl
mov
xchg
and
jg
cmc
pop
sar
test
mov
lds
ljmp
lret
mov
sub
aas
lods
and
inc
push
subb
call
gs
or
rcrb
test
inc
lods
fsubs
add
and
sub
testl
and
and
ret
push
xchg
jno
mov
sub
dec
test
pop
jge
dec
pop
in
dec
mov
fwait
je
imul
iret
add
mov
scas
xor
ds
dec
lds
push
add
push
iret
fwait
or
jmp
aam
mov
adc
jecxz
or
sahf
cmpsl
fnstsw
fwait
add
sbb
push
inc
lock
ret
and
std
add
mov
adc
lcall
aaa
xor
or
mov
or
ret
mov
add
insb
adc
jle
jl
ds
mov
mov
adc
clc
pushf
cld
mov
push
or
scas
mov
sti
pop
push
ror
lcall
inc
push
aam
arpl
rcrb
xor
pushf
lahf
mov
inc
lods
xchg
cmp
jns
mov
jl
mov
fwait
dec
cmp
rcrb
pop
out
pop
cmp
adc
mov
xchg
sub
cltd
jns
test
insb
lret
xchg
test
mov
iret
scas
push
mov
fidivrl
xchg
cmp
inc
ret
and
sbb
jo
dec
cld
imul
inc
jecxz
jmp
jmp
test
cmp
decl
testl
mov
inc
mov
jns
and
push
inc
sub
jbe
mov
cmp
xor
push
lret
add
scas
rcrb
cmp
clc
clc
xchg
stos
jge
adc
or
mov
sbb
cmp
lret
mov
data16
arpl
aad
call
xchg
in
mov
pop
inc
jg
add
adc
stos
lods
nop
xor
or
popf
test
fdivrs
lret
daa
pop
ds
imul
fiadds
roll
clc
negl
call
dec
inc
ret
in
repz
xchg
jl
sub
jb
xchg
push
xchg
mov
fcoml
popf
xor
out
mov
sub
adc
xchg
roll
mov
sbb
mov
cmpsl
lret
inc
cmp
movsl
pushf
xchg
cmpsb
and
adc
ss
iret
pop
fmull
mov
movsl
test
sub
in
jecxz
lods
mov
add
mov
sbb
sub
mov
mov
pop
fwait
or
sub
xchg
lea
out
mov
orb
rcrl
xchg
mov
push
add
or
loop
mov
or
dec
or
xor
jbe
cmp
mov
or
push
jo
cwtl
or
fnstsw
insl
test
xchg
xchg
xlat
mov
xchg
repz
in
out
lock
popa
push
add
out
and
adc
xor
jno
adc
pushf
sub
jle
adc
rclb
cwtl
aas
add
and
xchg
sub
mov
cld
sub
repnz
push
cmp
call
clc
adc
fistps
dec
mov
push
scas
xor
mov
jns
aad
mov
decl
xchg
xchg
cmc
scas
mov
cmpsl
dec
lahf
push
xorl
mov
out
pop
mulb
sbb
jb,pt
stos
push
or
aam
xchg
movsb
cwtl
mov
jp
adc
push
sbbl
mul
or
cmp
xor
movsb
stos
mov
iret
inc
pop
movsl
inc
jmp
xlat
add
cmp
cli
mov
lods
stos
push
clc
adcb
flds
rcll
inc
addl
fstpl
out
fbstp
movsl
aaa
sbb
sti
add
in
ret
out
in
lret
in
dec
pop
imul
push
adc
cmp
pop
mov
mov
inc
iret
imul
jl
sub
pop
xchg
xor
mov
xorl
pop
fnstsw
mov
xor
fsts
shll
jmp
ss
xlat
std
mov
hlt
pop
jmp
sub
sarl
sbb
inc
sub
push
daa
jmp
xchg
int
lods
xor
push
sbb
cltd
sti
push
les
jns
out
leave
js
pop
and
push
int
hlt
pop
fs
test
mov
xor
fistpl
popa
fistl
push
pop
push
pop
jb
stc
rclb
and
mov
dec
mov
fistl
cltd
mov
cmpl
pop
mov
cmp
inc
lods
cmp
into
loope
rorb
jnp
popa
rorl
pop
sub
jecxz
or
fstpt
add
lahf
cmp
bswap
sub
lock
adc
add
cwtl
inc
out
xchg
xchg
sub
pop
cmp
dec
outsl
xor
xor
mov
fstpt
outsb
shlb
lcall
add
mov
std
cwtl
mov
push
dec
fwait
movsb
and
mov
test
incb
sub
movsl
test
mov
stc
dec
inc
hlt
mov
imul
add
inc
into
xchg
and
js
sbb
xor
or
stc
lods
add
push
js
es
adc
push
fstl
add
outsl
fidivs
adc
ja
roll
push
lret
or
push
pop
mov
jp
pop
popa
pusha
adcb
int
hlt
sub
mov
fistps
mov
ljmp
loopne
ja
subb
rclb
pushf
and
xchg
cmp
mov
clc
icebp
fildll
int
push
ds
push
sub
adc
xor
and
dec
or
ds
leave
scas
xorb
cmp
std
test
out
cmp
or
xchg
mov
int3
cwtl
mov
test
cltd
scas
sti
mov
dec
fdivrs
cmp
fwait
js
push
dec
pop
mov
out
inc
mov
sub
mov
lret
inc
in
call
cmpsl
pop
xor
jae
dec
jmp
sti
dec
dec
or
arpl
jns
daa
adc
test
imul
dec
ljmp
enter
push
movsl
cmp
dec
mov
sub
xchg
mull
fcompl
lret
jp
pop
movsl
adc
adc
and
data16
pop
sbbb
sbb
and
outsl
or
jb
cltd
bound
inc
cs
pop
or
sahf
orb
int3
call
mov
inc
and
xchg
and
in
adc
flds
xchg
dec
les
mov
jle
lcall
sub
pop
ds
iret
jle
pop
jle
mov
aam
jno
cmc
sub
std
lahf
loope
iret
push
je
mov
cs
aam
ss
clc
jbe
scas
cmp
divl
hlt
aas
mov
dec
mov
fmuls
nop
inc
sarl
adc
adc
out
jnp
inc
sti
pusha
adc
cli
jnp
pushf
mov
les
jg
call
and
ja
repz
negl
repnz
or
and
adc
inc
pop
inc
call
pop
pop
stos
lock
mov
cmp
cli
mov
and
pop
scas
mov
inc
lret
aad
nop
sub
inc
xor
js
fs
cli
stos
add
lcall
push
add
or
test
mov
pop
mov
sbb
pop
fadds
mov
nop
cmp
shl
div
data16
and
incb
inc
cwtl
adc
add
out
pop
aas
jns
movsl
adc
jle
jp
fistps
rcrb
mov
cmp
pushf
cwtl
incb
outsb
or
adc
lret
movsl
pop
into
stos
mov
inc
cmp
fisttpl
adc
popf
mov
mov
decl
jp
dec
cltd
push
jle
int3
mov
lea
and
cmpsb
xor
mov
cmpsl
sub
movsl
lock
stc
fwait
jns
cmp
in
rcr
fiadds
je
mov
pop
pop
xchg
dec
lods
fwait
or
rolb
lretw
scas
orl
leave
push
cwtl
fucompp
fadds
aas
adc
addb
scas
dec
pop
cli
sub
push
test
jno
ret
fisubrl
jae
movsb
in
das
cmp
lret
xor
or
pushl
jge
rorb
mov
jle
adc
xor
mov
es
pop
mov
pop
cltd
lods
ds
add
dec
mov
fidivs
fwait
lahf
push
sbb
sub
mov
jg
adc
dec
or
lret
sub
ds
hlt
hlt
and
jae
es
push
mov
mov
push
aaa
lock
and
test
xchg
incl
fs
scas
adc
add
shl
aas
mov
jl
lock
ja
aas
push
mov
dec
jne
push
ds
cwtl
shlb
push
cmp
and
cmp
jmp
lock
xor
mov
pushf
push
xlat
and
aad
fs
outsl
ljmp
mov
cltd
or
lahf
mov
fists
add
mov
mov
xor
xchg
mov
into
push
cld
jnp
lods
jb
mov
push
cmp
adc
addr16
insl
shll
and
scas
sub
cmp
mov
cmpb
pop
outsb
mov
and
dec
nop
scas
ficompl
ret
xor
popf
fucomi
mov
inc
push
push
cmp
push
stos
mov
insl
dec
sti
mov
dec
mov
xor
dec
sub
and
jb
cmpl
sbb
xor
imul
lock
xor
je
imul
mov
aam
dec
hlt
pop
test
in
mov
in
jne
das
add
add
mov
aaa
cmp
outsb
fidivl
shll
pop
push
sbb
jne
das
cmp
xor
inc
insl
mov
xor
cltd
out
xor
ffree
add
cli
in
jns
in
out
es
leave
pop
mov
jnp
inc
pusha
xor
mov
lahf
xchg
or
sub
int3
in
or
popa
add
cmp
std
pop
outsl
xchg
cli
jg
aad
fs
fiadds
test
push
mov
cld
lahf
xchg
xchg
test
jb
mov
fidivrl
mov
dec
pushf
pusha
ja
sarl
inc
push
cmp
push
jbe
lock
dec
out
dec
insb
jp
inc
shl
add
decl
je
adc
arpl
aam
jge
gs
jnp
mov
scas
inc
fnstenv
pushf
mov
mov
addl
sbb
mov
out
xlat
lods
pop
push
loop
sub
xor
fwait
mov
xchg
pop
insl
and
aad
xchg
imulb
mov
cmpl
pop
daa
dec
jno
mov
fcmove
js
ss
ljmp
aas
js
push
cmc
mov
dec
fistpl
adc
insl
and
rcll
ss
insl
push
sub
inc
pop
fcmovnb
or
xchg
repz
pop
inc
xchg
es
bound
pop
jecxz
adc
fldenv
push
add
mov
sbb
xchg
into
push
popf
fs
adc
cmp
loopne
lock
pop
push
out
iret
std
insl
inc
sbb
inc
mov
out
fwait
jecxz
cmp
mov
push
mov
in
push
mov
inc
push
cmp
mov
inc
or
fcmovnu
xor
dec
pop
add
insb
push
orb
sbb
mov
push
jl
mov
fnstenv
addr16
inc
inc
stos
jp
xchg
int
rorl
les
mov
movsb
test
jns
imull
or
out
xchg
push
xor
sahf
inc
imul
cmp
sub
sbb
or
vmovaps
int
ds
sub
adc
xor
outsb
and
xor
fcomps
dec
push
and
insl
dec
cli
pop
scas
into
xchg
icebp
pop
pop
scas
outsl
ret
rcll
dec
lock
sbb
das
loop
not
add
int3
lock
jle
jl
imul
loop
mov
add
xchg
jmp
xor
es
push
pushf
or
and
fcmovnu
sub
imul
pop
sbb
dec
sub
or
cwtl
sbb
out
mov
xlat
cmp
rcrw
ret
adc
es
testl
ljmp
int3
incb
outsl
inc
aas
mov
jl
lds
or
nop
rcrl
imul
sub
mov
mov
add
in
test
test
and
push
fnstsw
jbe
sub
xlat
mov
aad
push
gs
cmp
lcall
pop
nop
jbe
and
adc
rclb
xchg
jl
call
jae
xor
mov
fcoms
mov
sbb
adcl
push
fsubl
outsb
xor
test
ret
test
into
pop
sub
cs
xchg
jo
hlt
insl
dec
bound
aaa
xor
xor
arpl
sub
add
test
cmp
in
out
cmp
mov
mov
iret
jecxz
pop
fsubrl
add
sub
mov
out
subl
xchg
jg
in
pop
sub
dec
dec
daa
adc
xor
fisttpll
test
imul
push
push
pop
mov
inc
inc
dec
aad
pop
lret
mov
jecxz
push
cmp
or
fiadds
stos
sbb
push
ret
mov
or
dec
je
push
pop
adc
inc
push
outsb
decl
jmp
sbb
aam
movsl
iret
stc
sbb
cmc
xchg
jg
jnp
xor
sti
mov
fbld
scas
cs
inc
inc
mov
sbbl
pusha
push
in
cmp
pop
or
jecxz
or
cmp
stc
nop
arpl
mov
mov
outsl
mov
aas
mov
inc
cmp
push
mov
and
nop
mov
jge
popf
int3
ds
fwait
sub
fxch
fsts
and
clc
mov
adcb
sbb
or
push
inc
dec
ret
aaa
add
mov
dec
push
fwait
in
stc
decb
insl
cmp
mov
cmc
inc
mov
inc
cltd
int
mov
jb
and
dec
add
jmp
sti
or
inc
enter
orl
mov
adc
out
lcall
ss
sbbl
mov
adc
push
into
movsl
push
inc
leave
xchg
stc
insb
cltd
std
xchg
dec
pop
push
mov
fidivrs
scas
sbb
popf
inc
shll
test
add
xchg
movsb
push
jb
xor
outsl
ja
pop
gs
jae
mov
dec
push
xor
cltd
pop
pop
inc
mov
lret
push
xor
and
push
mov
cmp
hlt
test
arpl
pushf
ss
mull
add
out
ud2
pop
mov
sub
movl
add
push
repnz
push
fiaddl
jl
mov
mov
adc
lcall
fcmovnu
mov
sub
jb
xlat
pop
add
popf
adc
cltd
mov
xor
rcrl
dec
in
push
test
es
idivl
dec
lcall
ss
push
repnz
sbb
fmul
sub
mov
push
inc
cmpsb
repz
and
cmp
adc
ficoml
push
adcl
inc
dec
arpl
sbb
out
and
sbb
jnp
dec
adc
pop
scas
enter
xor
sub
comiss
gs
ljmp
gs
movsb
outsb
loopne
mov
cmp
push
iret
sbb
fcoms
mov
push
lock
rorb
jle
sbb
push
add
int3
cli
sbb
stos
pushf
movsl
push
fs
lods
fwait
inc
xchg
xor
and
pusha
loope
aas
addb
sbb
inc
add
sbb
movsb
rcr
cmp
mov
lock
fnsave
lahf
xor
pop
lahf
imul
dec
pop
insb
sarb
add
pop
adc
int3
ds
outsb
iret
lods
cwtl
arpl
aaa
cmp
fwait
or
pop
mov
push
mov
pop
scas
cmpsl
jbe
lods
dec
jo
xchg
lock
repz
jmp
add
mov
out
lds
add
xchg
and
mov
jns
pop
xchg
or
scas
jne
sub
cmp
fisubrs
jle
clc
mov
mov
repnz
sub
aas
jne
outsb
xchg
in
push
xchg
insb
es
pop
sbb
xorb
push
push
xchg
sub
lods
xor
mov
sbb
and
repnz
dec
movsl
icebp
or
sub
out
pop
into
mov
add
insb
mov
sub
add
or
movsb
push
adc
push
pop
lahf
push
cmp
mov
pop
cmp
mov
sbb
mov
int
lea
jno
lcall
adc
lret
in
std
subb
jns
fnsave
test
pop
and
movsb
pushf
mov
rorb
les
std
or
loope
lret
add
mov
inc
mov
js
rolb
idivl
pop
fstps
jbe
dec
sub
pop
xlat
mov
popf
popf
mov
or
mov
mov
push
jg
or
bnd
add
loopne
pop
scas
pop
sbb
fisttpl
jmpw
and
sti
sbb
cmp
dec
cmpsl
arpl
lahf
rcrb
push
leave
push
add
pop
and
enter
cmpsb
scas
xchg
inc
test
mov
test
shr
sub
popa
sub
dec
pop
dec
push
aas
popa
ja
das
add
jne
mov
jl
data16
cmpsb
dec
scas
dec
mov
push
and
dec
inc
mov
inc
cmp
shlb
sub
lds
nopl
xor
mov
lods
and
aad
insl
ret
sar
inc
rolb
mov
cmpsl
fcmovnb
clc
sti
sbb
add
movsb
mov
cli
inc
into
loop
xlat
fs
aam
scas
orl
loop
addr16
cli
jmp
sbb
jnp
aaa
inc
loope
subb
int
hlt
ja
lea
xlat
dec
sarb
pop
lock
dec
dec
sbb
arpl
xchg
adc
sbb
and
std
insl
mov
inc
xchg
pushf
je
cs
and
lret
outsb
jle
sub
cwtl
sbb
sub
dec
je
jl
ret
mov
imul
cmp
jbe
sbb
fldl
pushf
xchg
add
push
and
nop
mull
jb
out
mov
loope
mov
mov
inc
mov
bound
repz
pop
shlb
test
scas
inc
adc
lods
sub
pop
addl
dec
push
fistpl
cld
test
push
mov
sbb
or
in
lcall
clc
fdivr
xor
mov
dec
mov
out
sbb
add
push
pop
inc
pop
pop
and
sub
cmpsb
mov
add
insb
subb
jl
clc
imul
leave
or
out
aad
out
orb
and
add
rcrl
mov
mov
scas
out
test
add
pushf
out
faddl
xor
aam
mov
pop
adc
faddp
push
std
pop
pop
loop
mov
js
sbb
jae
push
cmp
xlat
push
movsl
pop
imulb
aaa
pop
jnp
sub
push
mov
lcall
mov
cwtl
fistpll
pop
push
sbb
js
daa
pop
out
mov
add
out
out
arpl
int
lock
dec
iret
fwait
pushf
jle
fs
test
andnps
imul
ljmp
test
ljmp
mov
leave
cmc
dec
or
pop
or
add
push
jae
cld
xor
dec
xor
aas
xor
dec
testb
test
les
pop
sub
int
and
aad
mov
cli
inc
nopl
daa
dec
jo
cld
push
sti
xchg
fnstcw
aaa
es
pop
mov
push
mov
aam
adc
add
std
mov
mov
jno
fwait
mov
fcmovnbe
jle
mov
jmp
mov
jnp
sbbb
sub
push
add
xor
std
inc
test
and
aad
addr16
ret
sbbb
sbb
mov
stos
inc
addr16
pop
add
sar
add
cmp
clc
lock
vandnpd
xchg
cld
push
hlt
roll
or
cs
mov
sar
inc
sbb
std
int
push
add
pop
setae
dec
ret
ficomps
add
insl
test
arpl
insb
inc
fidivl
ret
adc
dec
repnz
ret
and
cmp
gs
ret
cmc
mov
sbb
fldcw
dec
lret
movsb
es
jg
xor
movb
cmpsb
mov
adc
insl
sub
cmp
in
xchg
imul
jge
das
jbe
loope
lea
jle
mov
cmc
imul
pop
dec
pop
xchg
shll
gs
mov
shr
xor
divl
and
ljmp
aam
sbb
push
pop
mov
bound
outsb
nop
pop
arpl
mov
xchg
pop
lahf
out
daa
iret
ss
aas
mov
stc
test
push
stc
push
jecxz
loop
sbbb
cmpsb
int3
mov
cmc
cmc
fucomi
mov
jne,pt
cmc
mov
imul
addb
push
call
adc
fs
and
outsl
inc
outsl
mov
add
mov
jae
xor
pop
sbb
fsts
icebp
ss
lods
mov
inc
jno
test
jbe
ljmp
dec
mov
cmc
das
movsl
mov
mov
jg
sbb
sbb
pop
lock
movsl
es
loop
mov
imul
jl
inc
mov
cmp
fistpl
ss
add
and
ja
ffree
fistl
fldcw
sub
fdivrs
sub
xchg
push
add
aam
loope
fstpt
xchg
faddp
int3
mov
mov
xor
ja
cs
popa
jmp
mov
mov
int3
jg
pushf
mov
inc
inc
and
into
mov
sbb
add
adc
fistl
shrb
cmp
push
stc
std
lds
jg
jo
pushf
xor
add
fldl
outsb
addr16
lcall
mov
push
bound
je
sar
test
test
lret
jno
out
inc
mov
cmp
and
or
scas
out
xchg
ljmp
lahf
add
arpl
repnz
pop
pop
jns
lea
pop
sti
mov
push
and
ja
fldt
insl
sbb
add
addr16
push
cld
lods
fs
xor
es
jnp
xor
rcll
xchg
imul
pop
ds
jl
int3
add
push
out
push
mov
andb
mov
pushf
cmc
mov
push
imul
ror
cmp
mov
aas
cmp
sub
inc
push
stos
jg
outsb
inc
mov
lcall
xchg
cld
jecxz
adc
dec
xlat
pushf
xor
ret
mov
rorl
imul
stc
add
faddp
mov
push
xchg
xor
inc
fsubr
fwait
scas
cmp
movsl
bound
sub
mov
adc
dec
leave
jg
sbb
pop
mov
test
lcall
js
shlb
mov
xlat
lds
bound
mov
xchg
adc
adc
xor
add
inc
xchg
pop
mov
inc
or
jmp
jo
adc
popa
and
sbb
xlat
das
sub
stos
roll
dec
fildl
shlb
lcall
fsubrs
or
sbbl
sbb
arpl
ljmp
sahf
xchg
fildl
loopne
test
push
fwait
aam
pop
sub
cmc
call
xchg
mov
dec
nop
sub
scas
leave
ret
mov
bound
mov
inc
dec
push
mul
in
rclb
fwait
insb
repz
mov
pop
inc
out
ss
das
xchg
imul
pop
xor
repz
les
cmp
js
mov
out
adc
pop
lods
insb
dec
js
mov
xor
and
lods
cld
adc
test
xchg
xchg
repz
cmpsl
push
rorl
inc
inc
lret
and
test
inc
aas
inc
cmp
and
fwait
or
sub
sub
repnz
lret
or
cmp
in
fiaddl
mov
jns
aas
out
fdivp
mov
cltd
sub
cmp
and
mov
daa
js
subl
insb
mov
loop
in
mov
or
sti
cmp
int3
cmp
sub
out
inc
ret
cmp
xchg
jp
push
stc
dec
push
cmp
repnz
pushf
outsb
xchg
fwait
out
jle
jb
mov
or
fisttpl
cmp
cwtl
in
scas
or
std
sbb
dec
push
test
push
mov
cs
fisubrs
nop
ret
dec
mov
rcll
adc
mov
inc
mov
mov
mov
mov
jmp
adc
ficomps
jecxz
mov
xchg
fsubp
xchg
sub
shrl
mov
xchg
dec
jge
nop
mov
es
inc
clc
and
es
inc
fidivrs
cltd
sarb
mov
dec
test
mov
lea
pop
xor
bound
xor
notb
cmc
sbb
xlat
sub
in
stos
lahf
outsb
or
cmp
nop
sbb
pop
sti
sahf
test
loopne
lahf
loope
je
mov
jl
sahf
or
flds
inc
push
std
fists
pop
jo
rcrb
sbb
dec
push
pop
pop
lea
cmpsl
or
adc
or
clc
subb
jae
jo
in
in
sbb
shlb
push
mov
sti
mov
cmp
adc
inc
mov
adc
or
js
sub
icebp
add
loope
inc
cwtl
ret
rcrl
mov
cmp
push
fs
loop
es
in
in
adc
rcl
movb
xor
shlb
xor
ds
cmp
sub
adc
or
orl
jb
and
xor
iret
cmp
iret
adc
add
dec
dec
loope
es
mov
xor
idiv
inc
or
mov
mov
mov
hlt
add
pop
shrb
int
nop
stc
or
out
cmp
lahf
jle
fdivrl
mov
and
pop
adc
loope
jecxz
mov
xchg
xchg
cmpsb
or
test
popa
xchg
movsb
ljmp
push
test
or
inc
fldt
sub
pop
dec
adc
pusha
cmp
icebp
xor
push
mov
push
xor
das
movsb
cmpsl
loop
and
mov
jmp
cli
ljmp
push
cmp
jp
xchg
sti
mov
jp
cmp
xlat
lcall
sarb
xchg
jg
jmp
repnz
add
fwait
lea
aad
inc
sbb
enter
push
mov
pop
ss
mov
and
xlat
or
js
dec
sti
mov
cmp
aaa
stc
idiv
dec
mov
add
mov
push
mov
and
inc
out
faddl
jae
add
xchg
fcompl
cs
mov
mov
sub
cmpsb
iret
or
insl
scas
push
dec
push
rorb
fstp
inc
push
inc
fsubrs
shll
test
jmp
pushf
add
cmc
jne
jp
cmp
inc
lret
fdivl
dec
push
ja
test
pop
lea
mov
ds
push
in
fildll
mov
push
dec
add
lods
cmpsb
jne
bound
sub
mov
xchg
push
cmpl
cs
bound
cmp
scas
and
mov
leave
ret
pop
add
sub
mov
xchg
in
test
adcl
pop
sbb
mov
push
sub
jae
and
xor
je
inc
cltd
bound
es
jno
or
pop
inc
ret
bound
xor
mov
mov
out
xchg
mov
adc
enter
fs
add
jbe
xchg
aas
cs
pop
rcrb
enter
xor
test
lods
fcomps
ret
sti
loope
sub
pop
icebp
arpl
mov
sub
insb
mov
bnd
jo
push
inc
sbb
mov
sahf
cmpsb
mov
loop
cs
xchg
imul
fsincos
xor
inc
push
or
movsl
fwait
pop
xchg
pushf
repz
xor
mov
mov
cmp
ljmp
cmc
ss
cltd
and
inc
mov
ficoms
push
lock
ja
xor
adc
and
push
rclb
in
mov
pop
test
stos
movsb
cmp
xor
rol
and
gs
xor
std
fwait
mov
inc
sbb
in
sub
mov
pusha
frstor
lods
in
jg
cld
push
sub
mov
jp
push
sub
stc
adc
std
stos
jecxz
aas
out
mov
popa
or
xor
in
mov
inc
adc
inc
lret
cmc
or
inc
imul
push
sbb
jb
ret
clc
inc
push
dec
mov
pop
orb
ljmp
cltd
mov
movsb
mov
dec
mov
lret
adc
fsubl
in
shl
mov
inc
gs
ret
sarl
push
movsb
fmull
mov
loope
add
mov
ljmp
sarb
dec
ficomps
push
loop
lods
xchg
xor
loope
icebp
or
xchg
pop
ficoms
cli
xchg
xor
les
xchg
inc
mov
loopne
lock
mov
lods
cmc
aad
mov
sub
adc
dec
jg
cld
hlt
filds
push
and
or
enter
gs
jbe
adc
pusha
push
sub
jno
lods
sahf
rorb
xchg
mov
add
cmc
xor
inc
inc
shll
sarb
sub
pavgw
xlat
and
roll
dec
pop
pop
aaa
into
testb
add
or
mov
lahf
jp
les
fstpl
sub
xor
sub
jmp
sahf
movsb
sbb
xchg
and
in
sbb
call
imull
rsqrtps
push
cmp
xor
push
dec
popf
pushaw
adc
jp
testb
mov
or
inc
in
mov
mov
cld
mov
insl
mov
mov
fwait
mov
stos
dec
iret
dec
imul
jmp
mov
add
out
int3
pop
sub
mov
fmuls
inc
xchg
repnz
inc
pop
mov
mov
sub
dec
jns
cmp
test
or
in
inc
ja
mov
and
lret
xchg
daa
aad
xor
in
loopne
test
xchg
outsb
nop
clc
adc
inc
or
jp
cmpb
ds
mov
pop
leave
push
leave
add
rol
scas
ljmp
push
fst
sub
cmp
out
mov
jae
inc
and
int
and
cmp
repnz
sub
int3
fwait
adc
out
sbb
aam
mov
stos
lods
mov
xor
repnz
dec
xor
sub
data16
push
add
stos
adc
push
pop
jle
imul
jns
pop
jae
push
outsl
out
sub
dec
jns
fcomip
adc
hlt
cmp
orb
sarb
hlt
add
fsts
sti
andl
lcall
xor
outsl
mov
sbb
and
jbe
adc
add
lcall
mov
push
mov
insb
pop
sub
lret
dec
sarb
or
sbb
sti
xchg
jle
ds
inc
nop
and
pop
push
daa
and
push
mov
ss
xchg
es
jae
rolb
cmpsl
dec
sbb
out
test
lahf
pop
and
xchg
or
outsl
out
or
arpl
lock
adc
test
mov
addb
hlt
gs
sbb
imul
inc
pop
scas
repz
imul
xchg
sbb
sbb
mov
ror
outsl
adc
mov
aaa
loop
xor
dec
cli
mov
cmp
cmp
lcall
notl
and
mov
hlt
mov
xor
xchg
aaa
pusha
pop
cmc
gs
dec
sub
int3
das
sahf
lods
aaa
push
pop
addl
repz
insl
sbb
cmp
sub
jecxz
in
iret
out
fwait
data16
inc
mov
cmpsl
jae
into
adc
xlat
xor
mov
test
xchg
out
sub
das
push
adc
loop
sbb
aaa
repnz
out
mov
jecxz
sub
sbb
pop
mov
loop
dec
popf
sbb
in
shll
pushf
jecxz
in
dec
pop
mov
cmp
ret
xorb
adcb
mov
push
in
fidivrl
cmpb
dec
cmp
and
push
and
xchg
fdivr
lea
in
mov
lret
test
inc
jbe
dec
xor
pusha
das
dec
sbb
dec
jp
push
cmc
test
fbstp
aad
arpl
je
outsb
in
push
jp
lret
mov
cmpsb
cmp
and
inc
add
fdivrs
adc
push
jecxz
mov
xor
sbb
lret
icebp
js
call
jg
mov
jne
out
outsl
call
out
adcb
or
sub
sbb
fidivs
or
clc
jno
cld
jae
hlt
ret
jecxz
int
or
mov
cltd
mov
cs
test
out
or
clc
movsb
cmp
int3
sbb
ss
pop
outsl
mov
aad
int3
aam
ss
xlat
or
stos
scas
bound
mov
push
inc
sub
jb
aam
pop
sub
in
mov
ljmp
push
xor
adc
inc
aam
add
cwtl
jne
mov
or
jo
stc
pop
or
dec
test
pop
std
push
stos
enter
das
sub
adc
jns
in
jb
ficoms
lret
push
xchg
sub
inc
sub
popa
push
sub
adcb
lods
sub
mov
stc
adc
sub
stos
xchg
push
mov
dec
lock
fidivs
sbb
or
outsb
mov
loopne
movsl
cli
ficompl
mov
sbbb
call
jae
cmp
sti
imul
inc
rol
cmp
jp
loope
lods
hlt
push
jg
jle
pop
push
js
or
inc
add
in
xchg
mov
enter
pop
jl
jb
fimuls
dec
mov
data16
insl
mov
inc
lret
pop
mov
jg
cmc
mov
aas
into
mov
rorl
sub
test
and
les
es
lcall
xor
sbb
into
inc
mov
jno
adc
add
call
imul
add
adc
aas
or
test
adc
add
or
cmp
push
cmp
fs
popa
pop
fst
in
push
addr16
pop
dec
fmuls
ds
les
sub
push
pop
hlt
scas
rorb
cmc
bnd
jge
mov
jnp
mov
jo
pop
mov
divl
pushf
dec
je
sub
inc
and
bound
xchg
mov
test
dec
dec
push
mov
adc
adc
sbb
or
xchg
jne
mov
or
sbb
aam
jle
jb
lret
js
mov
cmp
stos
xchg
fdivrl
mov
bound
insl
xor
pop
sbb
or
insb
ja
es
adc
push
clc
jg
mov
int3
push
xorl
mov
sub
and
test
jmp
fsts
jge
xchg
mov
lock
sub
xchg
sti
sti
adcb
das
sbb
push
addr16
jl
sub
and
shrb
idiv
aad
push
pushf
jmp
mov
lahf
cmp
aas
mov
orl
mov
mov
xor
popa
sbb
sahf
xor
jo
or
nop
push
scas
fs
or
or
adc
fcompl
repz
mov
and
push
push
bnd
and
adc
mov
push
push
sub
mov
ret
mov
test
test
push
inc
fists
xor
xor
sbb
mov
stos
inc
fs
sub
or
mov
and
xchg
mov
pop
ds
imul
rolb
aad
in
mov
leave
cltd
jg
pushf
icebp
cmp
lea
cmpsb
pop
lods
xorb
cmp
jno
jnp
cmp
push
ret
mov
popf
sbb
scas
dec
mov
rcr
cmp
xor
ss
movsb
jnp
fidivrl
popf
ljmp
shrb
mov
add
mov
aas
xor
nop
int
pop
mov
repnz
push
jl
inc
mov
notb
dec
out
push
in
lret
and
fincstp
xor
xor
fcomip
xor
lods
and
dec
cwtl
imul
inc
jne
xchg
pop
in
push
and
push
xchg
and
cmp
or
jge
xor
pop
mov
leave
sbb
adc
testl
ficomps
or
lds
dec
fstpl
imul
adc
stos
fwait
cld
into
adc
arpl
ja
sbb
test
test
xchg
jno
add
idivb
add
sbb
or
decb
icebp
arpl
addr16
inc
push
inc
lock
into
movsl
in
aaa
aas
xchg
aam
insl
rcl
ds
ljmp
cmp
lods
clc
xchg
loope
inc
mov
sbb
data16
enter
xchg
int3
fwait
or
popa
xchg
cmp
fcomip
mov
cli
push
out
jg
mov
push
es
and
mov
and
sbb
dec
repnz
outsl
int
stos
push
test
cmc
xor
jle
cmp
xchg
pop
fdivrs
pop
loope
jo
jge
pusha
in
popa
jb
aaa
sti
mov
or
stos
pop
pop
pop
adc
lret
mov
sahf
mov
xor
or
mov
adc
push
push
call
cmp
add
xorb
ret
loop
dec
test
add
movsb
icebp
aaa
pushf
lcall
fwait
ret
in
push
mov
dec
dec
or
fsubrs
out
cs
mov
mov
std
repz
inc
ss
cmp
test
arpl
and
cltd
ret
shll
cmp
mov
std
inc
sub
in
outsb
xchg
dec
stc
adc
adc
mov
cmp
sbb
xchg
jl
mov
adc
mov
adc
xor
fs
in
or
stos
dec
bound
popf
in
fs
test
pop
popf
popf
pushf
shlb
ljmp
add
xchg
rcrb
stc
inc
dec
cld
push
lret
adc
pop
xor
mov
pop
mov
adc
or
outsb
jno
sub
xchg
add
lcall
sub
cld
fidivl
pop
cmp
ret
sub
pop
in
mov
stos
xor
adc
sbb
push
push
cli
adc
iret
xchg
sub
lods
in
jp
inc
in
scas
lods
lock
out
and
xchg
pusha
orb
fcmovb
in
push
out
add
scas
arpl
jp
dec
cli
pushf
iret
mov
lock
pop
pop
push
jne
mov
stc
insl
mov
icebp
or
push
pop
xor
stos
in
ja
push
lods
adc
xchg
je
das
jmp
js
jae
mov
jge
and
popa
mov
inc
lds
rclb
out
xor
push
xchg
push
sahf
adc
adc
loope
dec
pop
sub
enter
push
inc
js
cld
cmc
sbb
fstl
add
jo
mov
mov
mov
out
lahf
into
adc
xchg
outsl
jbe
xchg
push
mov
inc
push
mov
inc
jae
jae
cwtl
sbb
add
movsb
inc
sahf
sahf
jmp
mov
test
jmp
jns
inc
loope
lcall
arpl
addr16
push
sub
out
cs
es
push
dec
fdivrp
sub
cli
cmp
shll
pop
gs
hlt
cltd
out
adc
rclb
push
lcall
cmp
repnz
fadds
xchg
lds
nop
cmpsb
cmpsl
out
push
and
add
adc
sub
insl
jl
aas
pop
jp
int
xor
inc
icebp
and
xchg
mov
mov
out
add
inc
cmpsl
lcall
test
ror
dec
mov
in
or
add
mov
inc
or
loop
mov
xchg
add
cs
mov
sbb
mov
push
push
sarb
mov
sub
xchg
pop
xchg
inc
dec
andb
js
cmc
sub
addr16
js
insl
jns
movsl
and
jne
inc
fstl
movsl
iret
jns
insl
jns
ss
mov
sbb
mov
fcomi
insl
add
xor
cmp
out
cwtl
or
je
adc
pop
xchg
adc
loop
pop
int
xor
xor
in
shlb
rorl
mov
es
out
or
faddl
ficoms
jno
lret
push
and
dec
cmp
fs
cmp
call
ret
pop
sub
mov
mov
pop
inc
cmp
and
mov
xor
rcrl
push
mov
or
inc
jb
sbb
outsb
out
divl
mov
push
lods
cs
aam
or
aad
jge
imul
jae
in
hlt
flds
out
mov
add
add
pop
or
xchg
mov
and
sbb
mov
test
xchg
inc
push
in
std
xchg
push
sar
push
push
daa
fsubl
dec
mov
test
jge
dec
or
stos
pop
and
out
cmp
pushl
subl
push
movb
insb
push
lret
in
test
outsl
cmp
xchg
fldenv
out
ds
dec
jb
daa
push
xor
iret
cmp
sbb
std
int
enter
out
sbb
or
les
mov
xlat
or
bound
mov
sub
or
sar
aad
aam
sub
mov
aad
cmp
mov
imul
mov
test
cmpsb
cmp
mov
fwait
jge
sub
dec
iret
jle
nop
add
int
xchg
xor
dec
cltd
mov
pop
int3
sahf
xor
xchg
pop
xor
fldl
pop
inc
dec
jge
das
pushf
sbb
sbb
pop
xchg
notb
mov
cmp
xlat
jns
dec
add
cmp
mov
mov
fcomi
test
xor
mov
dec
xor
rcrl
das
push
inc
pop
jmp
icebp
inc
out
mov
std
push
ret
push
movsb
inc
stos
adc
nop
xchg
es
lods
and
or
push
push
call
dec
mov
cmpsb
fucom
jmp
xchg
stos
test
push
sbb
ss
dec
mov
xlat
cli
mov
inc
leave
sbb
pusha
sbb
pop
aas
cltd
mov
push
nop
cwtl
dec
or
std
cld
pop
pop
xchg
adc
shlb
inc
xor
sbb
push
gs
xlat
decl
jle
and
in
pop
pop
movsb
iret
mov
hlt
sub
add
push
lcall
stos
or
ret
cwtl
or
sahf
clc
divl
imul
or
dec
push
add
sbb
pushf
jle
cmp
in
test
inc
scas
into
push
push
mov
adcl
dec
in
xchg
cmp
fldenv
inc
dec
cs
cmpsl
pop
xor
call
mov
int
cmpsl
rclb
leave
lahf
sti
mov
shl
pop
fwait
and
cmpsb
gs
push
adcl
lods
clc
sbb
fadd
jo
cs
fidivl
loop
inc
cmp
pop
mov
push
ficomps
dec
push
imul
sub
add
push
mov
mov
or
dec
xor
call
scas
test
push
and
or
ljmp
or
adc
lret
cmp
shlb
aam
ret
push
push
inc
mov
insb
or
je
cmpsl
lahf
pop
mov
or
ret
rcll
push
xchg
cli
mov
push
stos
imul
shl
les
mov
cltd
dec
fdivrl
xchg
inc
pop
fnstcw
jmp
pusha
pop
insb
jp
psllw
hlt
fmull
add
outsb
ret
add
mov
in
sbb
jle
aad
pop
aam
add
pushf
xchg
or
lret
sub
popf
push
fisttpl
sbb
repnz
dec
dec
lea
fistpl
hlt
xor
mov
in
pop
xchg
pop
push
mov
mov
mov
cwtl
fcmovnbe
mov
lock
movsl
push
inc
xlat
mov
push
imul
cmp
mov
dec
mov
imul
xchg
pop
outsb
lods
or
dec
std
and
cmp
insb
xor
xor
cmc
xchg
push
xor
mov
bound
lock
aam
sub
loopne
test
mov
sbb
sti
test
pushf
mov
xor
adc
or
cs
jo
or
adc
mov
mov
pop
mov
inc
xor
aaa
dec
mov
lods
push
jge
pop
das
push
and
or
push
aad
inc
add
out
xchg
or
repnz
push
jmp
and
fisttps
ss
popa
mov
sbb
or
xchg
je
dec
and
inc
inc
lret
imul
add
std
jg
push
data16
add
add
fwait
xchg
sub
lods
movsb
sahf
movsl
test
dec
or
pusha
gs
cwtl
sub
jge
nop
mov
aad
les
or
xchg
pop
pop
js
or
inc
shll
fimuls
cmp
out
pop
insl
add
ja
stos
movsl
popa
aas
lcall
and
mov
fidivrl
mov
add
popf
fistl
sahf
sti
xor
and
icebp
stc
sbb
cmp
sub
add
jmp
je
and
jg
imul
xor
add
push
xlat
xchg
test
movsb
cmpsb
and
in
les
sbb
add
imul
cmc
jle
je
push
stos
mov
inc
pextrw
xor
inc
stos
rolb
push
sbb
and
pop
aad
sahf
dec
mov
in
ds
fisubs
pushf
mov
dec
jecxz
sti
inc
or
not
dec
imul
loopne
inc
std
and
lret
into
mov
xchg
in
push
mov
inc
outsb
xchg
adc
mov
cmpsb
xchg
or
or
sub
addl
enter
movsb
xchg
and
ds
addr16
jl
fistpl
push
scas
in
push
subl
and
jmp
inc
stos
test
pop
and
push
dec
add
mov
insl
cld
sbb
xor
out
adc
les
fwait
imul
arpl
push
push
xor
jae
mov
inc
rcrb
pop
pop
sbb
mov
inc
aam
ljmp
enter
test
rclb
fisttps
jmp
and
test
jmp
stos
jb
sahf
out
scas
stc
jae
mov
xchg
cmp
fst
mov
test
dec
sbb
rcr
pop
dec
lret
repnz
or
jbe
sbb
jbe
mov
or
mov
orb
stos
pop
ljmp
cltd
mov
inc
sub
and
and
das
out
data16
pop
dec
xor
jb
aad
andl
adc
aam
and
push
rolb
enter
cmp
int
sti
loope
stos
adcb
bound
push
ljmp
jbe
jl
cwtl
mov
pop
lods
cld
cmovle
mov
mov
push
ret
sarl
packuswb
cmc
jle
mov
data16
jl
lret
push
imul
push
outsl
or
inc
ljmp
add
dec
adc
mov
hlt
lods
push
cmp
fldcw
fnstcw
push
rcll
sbbb
mov
sbbl
mov
xor
std
and
insb
cwtl
mov
js
xchg
test
pop
and
in
sub
bnd
mov
cmp
sub
fs
push
mov
loop
and
pusha
das
cmp
and
into
add
pop
and
fstl
xchg
iret
sub
dec
dec
and
sbb
pop
adc
adc
mov
fs
in
inc
int
pop
sub
xor
rep
lds
cmpsb
gs
pop
or
sbb
push
mov
fsubrs
mov
pop
mov
insb
pop
xchg
mov
adc
imul
or
dec
dec
jns
int
push
xchg
outsl
xchg
imul
cld
push
mov
xchg
repnz
mov
or
xchg
hlt
sbb
sahf
ret
test
outsb
fxch
cwtl
ret
sarl
call
xlat
xor
sbb
jo
orl
outsl
ljmp
test
sub
mov
jbe
and
pop
jmp
imulb
pop
cmp
rcr
mov
inc
lret
sbb
daa
cmovne
icebp
inc
rolb
sub
pop
push
in
mov
aas
or
push
in
xchg
jecxz
and
cmp
mov
jbe
in
mov
inc
mov
icebp
add
ds
popa
xor
mov
icebp
xor
push
mov
je
jae
cmpsl
mov
loopne
cmp
gs
dec
or
cwtl
pop
xchg
and
dec
push
pop
movsb
testl
or
jb
rcrl
nop
mov
mov
sbb
mov
aam
xchg
pop
ljmp
adcl
dec
dec
adc
dec
fs
inc
push
mov
pop
xor
mov
dec
cmp
fimull
jecxz
inc
out
pop
sbb
test
cltd
jmp
push
mov
lods
aam
dec
daa
repnz
mov
cmp
imul
pop
and
int3
div
jge
clc
mov
sub
insb
add
out
adc
jecxz
leave
daa
std
xor
stc
add
add
and
enter
push
cwtl
in
mov
pop
pushf
aam
mov
mov
jne
push
loop
lret
aad
add
outsb
jg
cmp
mov
mov
push
in
xor
mov
outsl
add
jno
loope,pt
jbe
mov
pushl
imul
xor
pop
xchg
fcoml
mov
cmp
aad
ret
mov
fstps
sbb
clc
jp
and
mov
cltd
test
jle
outsl
xor
or
jecxz
xor
and
aaa
inc
test
jb
bound
js
pushf
stc
pop
inc
inc
mov
dec
push
mov
pop
cwtl
pop
inc
lret
sti
ljmp
sbb
inc
cmp
dec
aad
jne
pop
adc
xor
jns
dec
insb
ret
push
pop
inc
and
add
xchg
mov
shrl
int3
dec
int3
rcl
adc
pop
sbb
out
fistpl
push
xor
sbb
inc
addr16
cmc
idivl
sti
mov
movsb
mov
inc
mov
jle
dec
clc
icebp
out
cmp
pop
xor
outsb
gs
ja
xor
push
int
cmp
scas
clc
inc
adc
fistps
ret
sub
push
pop
xchg
movsl
lahf
push
mov
aam
sub
cltd
push
jge
hlt
iret
in
xor
xor
jnp
or
push
ret
jecxz
jle
xor
jmp
dec
cmpsb
pop
rolb
mov
cmp
testb
cmp
daa
xor
push
pop
call
sbb
cltd
mov
and
outsb
aas
jle
data16
movsl
jb
adc
out
push
cmp
add
push
popf
rcrb
and
stos
sbb
arpl
sub
addr16
fldenv
xor
xchg
andl
icebp
lds
cs
and
nop
mov
lret
loope
js
and
hlt
pop
cwtl
outsl
inc
jo
lret
xchg
and
and
data16
mov
pop
aaa
jge
and
jbe
inc
mov
or
xchg
imul
fwait
cmp
jae
sub
clc
jnp
idiv
dec
shll
imul
xor
mov
cmpsb
sub
push
jg
add
mov
jmp
adc
lock
xorb
mov
push
sahf
out
inc
jmp
pop
push
xor
ljmp
call
dec
xchg
or
xor
test
lahf
pop
ds
dec
lods
push
icebp
add
jnp
cmp
pusha
push
dec
or
rcll
addr16
sub
aas
outsb
lahf
mov
mov
jae
sub
js
out
add
adc
push
push
into
mov
arpl
sbb
out
call
mov
jae
cmc
xor
popa
cltd
test
test
or
dec
pop
flds
sti
pop
cmp
inc
add
push
movsl
loop
push
xchg
ja
jo
pop
add
sahf
movsl
addb
imull
ss
mov
fildll
ja
hlt
mov
mov
jno
and
shll
fimuls
mov
in
aam
inc
mov
mov
iret
mov
cmp
unpckhps
pop
mov
insb
outsb
jno
lcall
jg
and
mov
adc
mov
mov
in
bound
jecxz
dec
cmp
add
mov
test
arpl
push
or
mov
sbb
fdivr
int
dec
push
scas
lds
cmp
dec
push
adc
and
mov
and
adc
mov
push
push
in
push
shll
xorb
dec
inc
jmp
stos
sti
cmc
popa
pop
dec
imul
insb
mov
inc
test
clc
adcb
lods
cli
lahf
cmp
mov
add
dec
sarb
mov
out
dec
popa
fwait
movsl
jge
cmp
outsl
lret
lods
jecxz
stos
in
jne
xchg
out
nop
fldenv
cmpsb
xchg
loope
popa
popf
ret
jge
lret
push
lret
cmp
fldl
dec
je
in
xlat
sub
jecxz
mov
xchg
jo
data16
push
adc
jno
jno
lahf
aam
scas
add
cmp
imul
fdivl
pop
push
arpl
scas
inc
mov
mov
enter
rcr
push
xchg
cmp
jle
pop
aaa
and
repnz
js
adc
adc
fcomi
mov
aam
outsb
jp
xor
out
jp
and
lret
hlt
fmuls
orb
mov
fisttps
jns
adc
and
in
push
sbb
xchg
or
adc
fdivrl
pop
xor
scas
ja
add
lret
jl
mov
popa
jg
pop
inc
rol
pop
add
rcrl
jno
push
mov
or
idivb
pop
call
ret
clc
pusha
popf
push
add
inc
sbb
std
xor
cmp
lock
sub
sub
push
cmp
arpl
push
jnp
mov
movsl
xlat
out
pop
sti
sub
nop
mov
sahf
adc
out
lret
inc
adc
cltd
pop
sbb
dec
mov
lock
icebp
rcrl
inc
push
dec
sbb
rcrl
rcrl
fldenv
cmp
imul
xchg
pop
push
cwtl
daa
add
xlat
imul
mov
data16
xor
ret
mov
sahf
add
mov
xor
xor
sub
mov
cmp
dec
std
push
pop
mov
insl
gs
lea
sbb
ss
cwtl
mov
pop
xor
dec
jne
xor
push
roll
dec
push
test
sbb
or
fnstcw
cli
push
mov
dec
jle
or
fsubrs
and
add
test
stc
xor
pop
dec
jne
jle
gs
mov
adc
pop
cs
aam
pop
mov
cmp
je
pop
test
popa
sbbb
fisttps
inc
cmc
xchg
roll
pop
shl
rcll
xchg
ret
jge
adc
mov
mov
popa
mov
jns
jae
or
xor
rol
add
arpl
stc
add
mov
loopne
mov
jmp
dec
scas
lods
mov
xchg
dec
push
xor
mov
test
push
pop
les
and
cltd
loopne
insb
test
fdivp
cwtl
jo
cld
aas
sub
test
dec
stc
sbb
pop
popf
xchg
add
out
leave
adc
int3
and
xor
ja
js
push
lret
dec
jno
lods
mov
mov
hlt
push
nop
or
mov
cmp
or
add
xchg
mov
fnstsw
add
shrl
insb
rcrl
xor
and
lretw
jmp
shrl
mov
test
sti
cmp
mov
and
inc
sbb
add
fucomp
mov
loop
sub
fstpl
mov
loope
dec
sbb
xor
sub
fstp
add
cmc
sbb
sub
mov
stos
int3
pop
hlt
adcb
pop
push
popa
movsl
test
out
push
add
sub
or
cmp
cmp
and
lock
add
divb
shl
dec
push
js
pop
mov
sub
cli
andb
xchg
adc
test
mov
xchg
jb
jno
mov
mov
or
inc
fisttps
mov
movsb
mov
stos
xor
mov
xor
aas
inc
shlb
pop
mov
imull
jne
out
hlt
dec
mov
std
add
fdivrs
mov
in
inc
mov
mov
into
in
dec
mov
dec
jo
fdivr
lcall
jmp
pop
bound
adc
xchg
inc
pop
jbe
inc
es
std
stos
cmpsl
xchg
cmp
lock
jp
jmp
cmpsl
mov
hlt
xor
xchg
movaps
or
in
xlat
pushf
add
jge
scas
mov
inc
rclb
adc
cmp
push
xor
out
adc
mov
loop
pushf
addb
pop
paddusw
mov
jp
daa
mov
xor
xor
cmp
insb
frstor
lods
out
mov
push
add
cmpsl
insb
cmpsb
sbb
add
ficomps
rcrl
stos
daa
lret
push
shl
test
pop
push
enter
jmp
pop
xchg
sub
and
les
movsl
mov
sub
xchg
sbb
adc
test
dec
pop
insb
jp
call
repz
loope
sub
cli
push
lret
or
mov
imul
inc
mov
cmp
ret
dec
je
add
mov
data16
jbe
pushf
add
inc
xchg
inc
push
add
popf
dec
adc
mov
out
pop
mov
fs
aas
xchg
mov
and
push
cmp
gs
loopne
test
sub
jbe
push
or
cmp
dec
adc
enter
mov
leave
dec
shrb
pop
jnp
pop
es
inc
dec
cmp
jns
sbb
mov
movsl
sub
adc
in
xlat
les
cmp
out
mov
repnz
rcr
xchg
scas
pop
aad
fimull
ret
lret
test
sub
jmp
shll
sbb
movsl
xchg
sbb
enter
mov
in
aaa
jbe
pop
in
adc
loope
sbb
sahf
jne
jmp
xor
mov
pushf
mov
jecxz
or
inc
cmp
pop
xor
lret
dec
adc
push
sbb
adc
mull
repnz
mov
decl
cmpsl
popf
xor
dec
fldenv
push
popf
lods
inc
sub
loopne
sbb
les
cmp
jle
mov
test
sub
dec
iret
add
cmpsl
cmp
insl
rcr
jnp
nop
lcall
pop
ljmp
pop
xchg
mov
mov
cmp
dec
std
les
sbb
das
adc
push
and
testl
lds
mov
testl
rorl
mov
mov
and
fstpl
daa
push
pop
jae
pop
jg
std
adc
mov
lds
test
mov
es
addr16
ret
mov
test
mov
gs
aam
mov
outsb
pop
inc
dec
ss
sarl
xchg
test
adc
cmpsl
and
push
xchg
xchg
pop
cli
out
icebp
je
jle
and
loop
mov
out
mov
fstpt
xchg
je
mov
sahf
lods
mov
iretw
jno
popa
add
cmc
jnp
aad
add
pop
pusha
mov
add
mov
push
mov
fisttps
insb
lods
mov
mov
imul
bound
stos
cmc
xor
jle
push
push
aaa
jl
sar
icebp
mov
in
cmp
push
dec
shll
and
shlb
addr16
int3
data16
xchg
pop
clc
nop
cmpsl
sub
ret
dec
sahf
xor
jp
shl
in
das
pop
test
mov
fstps
jmp
xchg
push
dec
push
ret
push
lods
or
mov
es
mov
imull
enter
cmpsl
rcr
shl
push
push
push
daa
xchg
dec
test
fadds
cmp
sub
cwtl
mov
pop
jg
imul
test
push
bound
mov
and
cmp
mov
dec
mov
jns
pop
daa
mov
test
ljmp
inc
add
push
mov
xor
and
imul
sti
jns
add
push
or
and
ja
push
scas
imul
ret
cmpl
lret
mov
pusha
xor
fs
mov
xchg
mov
ret
inc
roll
mov
mov
mov
lahf
jmp
xchg
ss
dec
push
adcl
pop
jns
or
add
adc
mov
xor
cli
in
cmp
imul
sub
idiv
subb
and
add
dec
hlt
sub
lods
dec
movzwl
gs
je
outsb
xor
add
inc
rcl
popa
daa
cwtl
mov
mov
fbstp
mov
mov
imul
fwait
lahf
pop
leave
dec
shlb
jecxz
mov
adc
mov
jp
pushf
dec
pop
push
lret
add
dec
cmp
jae
sbb
leave
xchg
mov
in
rorb
out
inc
cld
out
movsl
fnstcw
out
xchg
fldt
sub
cmp
mov
or
push
stos
add
out
lods
int
sbb
lods
add
es
push
ja
lds
jnp
and
imull
pop
add
add
or
push
cmp
push
repnz
nop
push
addr16
mov
loopne
add
push
les
mov
mov
cltd
cmpsl
or
xor
test
pushf
mov
inc
enter
mov
jmp
xchg
sarl
xor
mov
adc
test
mov
mov
sub
popf
fsub
push
mov
sbb
inc
jnp
pop
cmp
inc
jge
jnp
mov
push
add
cmp
in
mov
inc
xor
inc
xchg
and
push
push
pop
cmc
testl
outsb
mov
dec
repnz
lock
shl
adc
or
jp
cld
mov
jmp
lret
daa
xchg
add
lahf
clc
push
in
adc
out
or
mov
cmp
push
mov
jae
xor
sub
arpl
ljmp
in
lret
les
push
lds
sbb
sub
in
outsl
or
clc
and
adc
xor
mov
dec
xchg
lods
push
or
push
movsb
stc
sub
std
jg
rolb
insl
scas
xchg
outsl
fsub
xchg
sbb
sbb
into
sahf
pop
scas
or
or
xor
jbe
inc
rcll
sub
pop
cwtl
jle
mov
xor
push
push
aam
sbb
add
inc
inc
xor
add
lds
shll
lret
pop
xchg
aam
mov
adc
ret
or
rcr
sbb
lret
cmp
jmp
lret
clc
shll
cmpb
xor
mov
pop
mov
les
mov
das
in
insb
add
xchg
arpl
jae
pop
push
jg
and
btr
vpdpbusd
ja
or
das
dec
sub
imul
out
mov
xor
adc
out
dec
xchg
sbb
loope
xchg
cld
cmpsl
ret
out
cmp
mov
mov
cmpsl
cmpsb
cmp
xor
stos
xor
cmp
push
add
pop
and
adc
mov
cmpsb
cmpb
mov
scas
mov
ljmp
jl
mov
sarb
cmp
xchg
enter
repnz
pop
cmp
lcall
aad
xchg
push
sub
xchg
cmp
sub
adcb
jnp
push
clc
mov
push
popa
movsb
scas
adc
lea
popf
xor
mov
fs
jg
in
popa
jae
sbb
fcomps
aad
mull
xchg
dec
and
lds
dec
jg
push
add
leave
movsl
push
arpl
inc
mov
xor
test
mov
inc
inc
jecxz
orl
push
push
test
sarb
cld
adc
outsl
xor
jo
mov
orl
js
fcmovnu
cs
rclb
aaa
push
imul
repz
xchg
mov
add
jl
movsb
push
mul
fstpt
mov
jns
sbb
jge
std
loop
xchg
ljmp
bnd
sbb
pop
dec
inc
or
sbb
sub
ret
rcll
or
sbb
dec
inc
add
inc
stos
insb
sub
cwtl
in
loopne
pop
stos
or
repz
add
jge
mov
cmpsl
pop
or
std
pop
scas
hlt
movsb
or
mov
mov
sub
rcr
mov
inc
fmuls
sbbb
or
movsb
movsl
in
psubusb
stos
mov
push
push
dec
xchg
cmpsb
cmp
iret
dec
jno
subl
out
rorb
sbb
mov
scas
or
in
sub
dec
or
cmp
lock
into
push
xchg
repnz
sti
hlt
mov
mov
cmpsb
xchg
and
push
pop
xchg
scas
or
jmp
mov
not
test
xchg
inc
cs
and
clc
fcoml
xchg
add
dec
notl
leave
mov
xor
nop
mov
xchg
cltd
and
cs
fisttpl
inc
xor
loopne
xor
outsb
pop
rolb
lock
insl
sbb
imul
rolb
cltd
mov
inc
ficomps
jae
sbb
imul
popa
hlt
lods
pop
jo
sub
xchg
pop
lret
cmp
adc
cmp
subb
sub
push
aad
lret
sub
cwtl
inc
or
iret
out
xor
pop
test
bnd
mov
xchg
les
jb
mov
repnz
push
sbb
push
movsl
and
jne
int
idiv
push
jno
dec
push
fisubl
xchg
mov
dec
jnp
mov
sbb
mov
movsb
mov
jo
mov
mov
aam
scas
lcall
xchg
lcall
xchg
add
jb
push
imul
shlb
test
or
mov
push
in
shrl
divb
shl
lret
and
mov
notl
fdivrl
fwait
daa
inc
pop
cltd
movb
jge
xchg
stc
sbb
mov
dec
loope
jge
mov
or
push
mov
lret
call
mov
int3
fidivs
adc
add
orl
dec
out
or
xchg
or
dec
ja
shrl
adc
arpl
mov
jns
fwait
inc
aam
or
les
push
inc
fisttpl
and
add
or
cld
sub
dec
es
cli
lods
dec
pop
push
or
push
int
aas
mov
ljmp
jge
mov
jge
mov
sbb
stos
les
imull
xchg
or
sbb
das
std
or
fisttps
push
inc
pop
popf
xchg
sahf
fbstp
dec
xor
fildl
sahf
imul
dec
stos
add
test
insb
sub
jecxz
sti
in
enter
dec
fs
fdivs
mov
sub
jnp
popa
jle
mov
shrb
js
rcl
lcall
and
aam
test
sti
push
imul
and
rcrl
sub
icebp
cli
mov
add
and
inc
mov
xlat
push
sub
mov
dec
lods
js
jnp
dec
mov
lret
push
xor
rorl
xchg
divl
mov
mov
jns
pop
imul
jb
lds
and
mov
les
sti
les
shlb
jbe
or
and
xchg
pop
imul
movsb
popa
pop
repz
pop
jno
loope
lds
sub
push
daa
jmp
shrl
jns
jns
test
jecxz
push
xor
das
es
mov
mov
jl
dec
repnz
dec
adc
adc
loope
lods
cmp
jnp
ficomps
cmpsb
xchg
sub
pop
mov
int
test
push
mov
ret
push
repz
cs
pop
jmp
daa
aam
xchg
movsl
or
scas
inc
adc
push
test
dec
mov
call
jmp
leave
pop
cs
mov
or
mov
lods
inc
sub
les
mov
in
mov
mov
jl
lret
dec
and
clc
pop
lahf
cltd
jecxz
and
mov
testb
mov
sbb
jmp
imul
xor
dec
sub
lds
out
pop
push
inc
out
mov
and
dec
push
cmp
xchg
mov
cmp
repnz
push
cmc
sarb
repz
pop
push
jge
mov
leave
pop
inc
mov
loop
sbb
scas
mov
into
mov
xlat
mov
inc
in
add
jns
clc
jb
mov
xor
adc
inc
pop
out
jl
sub
leave
aas
out
loop
loope
fsqrt
pop
pop
mov
cmp
fisubrs
jbe
jecxz
pushf
sbb
stc
dec
lods
clc
fidivs
xchg
xor
mov
mov
jmp
jne
popf
pop
bound
inc
pop
mov
mov
fsubrl
xchg
mov
lea
sbb
call
add
test
xchg
leave
inc
or
pop
mov
push
adc
sbb
or
inc
fstpt
hlt
mov
icebp
push
sahf
mov
jecxz
xlat
insb
lods
lods
inc
data16
je
rorl
std
insl
scas
sbb
mov
hlt
and
sub
fdivrs
bound
imul
jl
pop
xchg
repz
and
dec
push
cwtl
stc
lods
adc
dec
cmp
lds
add
sahf
mov
add
fldenv
adc
jbe
sub
mov
inc
jp
nop
enter
pop
ljmp
push
pop
imulb
xchg
add
arpl
je
mov
fldt
xchg
mov
mov
sbb
loopne
dec
sbb
xchg
mov
imulb
ret
mov
lods
dec
cmpsb
lds
cmp
in
and
mov
addr16
sub
lods
adc
fucom
test
gs
lret
int
sub
dec
xor
jns
inc
mov
sbb
and
std
pop
shrl
daa
inc
and
inc
shrb
mov
jl
mov
fisttps
sub
mov
jmp
shll
cmp
aad
lods
pushf
jo
xchg
lret
mov
pmullw
jb
dec
cmc
jle
lods
subb
int3
sahf
aas
lock
mov
push
aad
cltd
shrb
loop
cwtl
xor
jmp
and
pop
or
sbb
jo
sub
adc
sbb
inc
pop
pop
dec
icebp
inc
repnz
lret
into
adc
sub
testb
adc
xor
repz
int3
adc
mov
imul
push
je
cld
jo
jl
call
jb
insl
sarb
aas
cld
mov
test
int
sub
jmp
fstl
fidivs
jbe
mov
addr16
add
xor
jne
fs
jmp
mov
rorl
cmp
jo
repz
into
cli
repnz
xchg
leave
push
jge
xchg
movsb
cmp
sub
adc
fldl
or
sti
sbb
add
inc
adc
mov
add
mov
mov
aas
dec
enter
jge
sub
inc
sbb
rcr
add
les
or
mov
fcmovu
loopne
or
dec
pop
push
daa
inc
js
or
sti
in
xor
faddl
jmp
iret
jp
aas
dec
push
pop
fucom
xchg
mov
sub
outsl
aas
into
jno
or
aas
pop
xchg
ss
fdivrl
aas
cmp
cmpsl
adc
mov
push
or
mov
cmp
lock
mov
jae
jg
lcall
fisubs
mov
cwtl
fstp
pop
add
jp,pn
rorl
mov
jecxz
lods
jb
dec
fs
lock
cli
mov
mov
insb
push
mov
mov
pop
jecxz
add
fs
cmp
mov
add
in
xchg
add
fidivs
jno
push
ret
mov
cli
dec
outsl
push
rsqrtps
dec
rclb
cmp
jbe
fcomi
mov
sbb
mov
push
std
pop
arpl
dec
xchg
cmpsb
scas
popa
lcall
fucomp
clc
rcr
inc
mov
inc
xchg
push
repnz
mov
addr16
xchg
or
cli
mov
movzwl
add
or
pavgw
mov
cmp
imul
rcll
cmp
inc
adc
jo
adcb
dec
xor
loopne
xchg
icebp
sbb
jecxz
pop
and
mov
int
sub
pusha
int3
sub
mov
adc
pop
out
dec
mov
nop
popa
shll
cwtl
adc
sbb
ds
jb
jb
mov
mov
and
shrl
ja
xor
and
popa
fistps
test
push
cmc
rcrb
mov
int
fmuls
ss
push
push
lret
mov
and
rcrl
shl
adcb
cmpb
ljmp
push
sbb
adc
jb
or
cmp
test
xchg
lcall
cmp
aaa
out
out
or
test
rclb
lret
lcall
sub
call
clc
cmpsl
cmp
outsl
movsl
repz
push
dec
imul
push
loopne
push
xor
add
bound
mov
inc
add
cmp
mov
or
mov
mov
lret
dec
xchg
out
popf
mov
je
in
sti
adc
xchg
adc
adc
stos
xor
in
sbb
cli
sub
ds
shrl
mov
xchg
push
and
cmc
fwait
or
mov
mov
add
dec
jmp
iret
lock
fcoms
push
outsl
inc
imul
add
mov
cltd
test
and
mov
mov
push
iret
add
je
pop
shrb
dec
in
mov
dec
jmp
push
xchg
sbb
outsl
inc
inc
cmc
popa
bound
sbb
sbb
jp
loope
push
cs
into
int3
sbb
and
xchg
cmp
rclb
icebp
mov
imul
sar
and
call
sub
cs
mov
adc
bound
mov
cmpsl
leave
in
cmp
orl
imul
out
mov
jmp
push
cmp
cs
cmpsl
cld
addr16
cmc
jo
dec
mov
pushf
in
subl
rcrb
mov
nop
out
test
popf
sbb
and
dec
lea
bnd
in
push
dec
stos
jae
xlat
inc
imull
repz
xchg
xlat
into
loope
sub
fsubrp
xchg
inc
shll
and
hlt
pop
outsb
int
inc
add
int
loopne
push
inc
leave
dec
fmuls
insl
sub
pop
bound
ds
pop
fisubl
test
xchg
or
push
mov
dec
daa
aam
lods
pop
add
jo
int3
sbb
mov
call
jns
add
loope
aaa
mov
ss
icebp
subl
loope
mov
fimuls
xor
aaa
rcll
jns
btc
and
push
aam
in
jmp
mov
jb
pop
das
or
insb
mov
add
enter
and
rorl
outsl
int
fisubrl
aad
push
mov
xor
aas
mov
xchg
sub
lret
repnz
mov
add
cmp
mov
jl
cmp
iret
fdiv
mov
repnz
jne
imul
arpl
mov
add
sarl
mov
xlat
mov
adc
mov
jo
rcll
add
mov
lock
ss
inc
mov
shrb
or
shl
aad
pusha
jmp
sbb
iret
cmp
call
and
jge
cmpl
lcall
add
cli
lods
xchg
in
cmpsb
fcomi
cmp
jne
jp
lcall
cmp
adc
in
dec
cli
outsl
pop
aas
or
outsb
and
in
jecxz
sub
sub
sub
sbb
fiadds
sub
repz
fmull
jnp
sbb
shl
sub
nop
jns
lods
dec
pop
loope
lea
cmp
inc
cld
cmp
int
add
sti
repnz
pop
or
or
dec
clc
jge
xchg
lret
push
data16
sahf
adc
dec
shlb
movsl
mov
push
subl
lcall
xchg
sti
xchg
sahf
cmp
jns
ss
inc
pop
mov
cmp
jo
mov
mov
dec
rorb
ror
jne
sbb
pop
rorl
jle
inc
xcrypt-ofb
cmpsl
push
sbbb
jmp
stos
and
je
int
icebp
and
xor
sub
mov
repz
stos
nop
xchg
dec
mov
sbb
cmp
and
pop
xchg
movsl
mov
and
mov
jmp
addr16
stos
pop
jns
push
sub
and
mov
roll
jmp
test
mov
movsl
pushf
mov
mov
scas
mov
popf
xchg
push
loope
inc
rolb
push
popf
jl
fsubrl
rcl
std
sub
or
lods
in
int3
pusha
movsl
rolb
mov
jb
pop
mov
scas
add
lods
movsl
jle
hlt
adc
inc
push
jno
test
jno
xchg
loopne
test
cwtl
insl
andl
pop
dec
lahf
cmpsl
dec
out
cmpsb
pop
mov
aam
aaa
jge
sub
cmp
and
push
xor
cmc
xchg
jns
enter
add
inc
add
sbb
adc
jecxz
pop
lods
pop
addr16
xchg
in
sahf
clc
xor
imull
xchg
sub
mov
imul
pop
xchg
xor
ficomps
add
mov
jnp
stc
xchg
dec
mov
gs
pop
xchg
insl
out
jno
sub
pop
sbb
inc
faddl
inc
in
cmc
leave
push
hlt
aam
sub
js
xor
rcll
movsb
bound
jp
sbb
out
jle
int
es
fisttpl
mov
sub
cmp
mov
outsb
cmp
es
adc
test
mov
jnp
outsl
push
xchg
and
clc
out
cwtl
in
pop
cmpl
imul
pusha
popf
adc
loop
sbb
jecxz
xchg
or
into
ds
cld
push
in
add
stos
orl
sub
mov
sub
add
pop
xchg
push
leave
loop
shrb
mov
add
adc
clc
mov
sub
sbb
sar
cmp
aas
enter
mov
mov
sti
xchg
iret
lods
scas
les
xor
filds
or
dec
jns
movsl
sbb
pop
mov
mulb
mov
sbb
fcom
inc
dec
cmc
and
out
divb
mov
jnp
mov
inc
pop
jmp
es
mov
inc
jp
mov
cmp
lods
push
rclb
push
das
inc
xchg
pop
inc
jo
dec
or
ljmp
imul
movsb
sub
pop
push
ljmp
lods
adc
xchg
lahf
mov
loop
mov
inc
cmc
fwait
dec
mov
jmp
pop
pop
rorb
into
mov
pop
jmp
mull
jle
testb
push
icebp
mov
call
push
xor
bound
test
xlat
xchg
dec
push
or
imul
jo
test
and
cld
mov
pop
fisttpl
sbbb
cmp
dec
adc
into
mov
add
inc
add
mov
addl
divl
pop
imul
jbe
andl
jne
movsl
addr16
notl
xchg
ja
dec
mov
jbe
dec
repnz
adc
ja
mov
push
fisubrs
and
lahf
loopne
mov
ja
cltd
cmp
insl
daa
lret
dec
mov
pop
cltd
iret
xor
test
dec
out
xchg
flds
jnp
shll
cmpsb
fbstp
cmp
or
jb
faddl
int3
inc
dec
ds
pop
mov
out
loopne
or
dec
aad
pop
in
and
mul
lahf
push
fisttpll
inc
lcall
int3
jmp
ss
jge
mov
lahf
xchg
jo
out
mov
jb
jge
xchg
cwtl
aam
push
insl
add
lods
or
ret
lret
lea
xor
xor
mov
in
es
mov
hlt
mov
movsb
jl
mov
movsl
imul
movsb
cmp
mov
adc
xchg
lcall
jnp
or
sbb
pop
mov
inc
jnp
pop
mov
aaa
jns
xor
or
xchg
pop
or
or
pop
inc
pop
notb
sarl
and
mov
loop
jle
test
int
in
aas
inc
mov
mov
negl
inc
rorb
xchg
jbe
daa
insl
in
stos
and
inc
lods
fs
cwtl
xchg
rcr
in
pop
jno
mov
cwtl
fs
xchg
push
inc
mov
pop
addr16
mov
mov
ds
fisttpll
insl
repz
lret
push
addr16
push
cld
xchg
add
add
mov
xchg
mov
roll
dec
sti
mov
dec
les
mov
aaa
xchg
aas
stc
and
ss
cmpl
sbb
scas
jnp
inc
sub
test
mov
xor
ret
sahf
push
mov
dec
mov
cmp
shlb
mov
or
sbb
lret
lds
js
cmp
lret
pop
cld
sbb
enter
xchg
xchg
jmp
jne
outsl
push
in
push
xor
jg
outsb
std
mov
add
test
mov
in
add
pop
pop
cmpsb
sarl
push
mov
les
dec
test
shrl
lret
clc
mov
jecxz
arpl
sub
jle
pop
jecxz
jne
pop
ror
fisttps
inc
jg
pushf
push
jge
pop
outsl
imul
add
mov
push
lcall
fwait
push
sbb
xorl
cmp
out
lds
in
ja
popf
xor
xor
popf
sub
fcoml
mov
xchg
repnz
pop
repz
inc
mov
sahf
dec
clc
jns
fnsave
pop
ds
jo
ja
jnp
scas
nop
mov
jo
xchg
pop
dec
add
push
fiadds
xor
enter
cld
or
hlt
jge
loopne
sahf
jp
mov
mov
dec
xlat
lea
xchg
inc
test
dec
lods
movsl
lods
in
xor
cmp
icebp
sbb
mov
aam
sti
sahf
mov
mov
insl
popa
stc
cld
cwtl
cmp
add
lods
dec
pop
inc
js
mov
insb
xlat
adc
mov
sub
inc
scas
arpl
stc
insl
les
out
xor
sub
lret
scas
std
pop
add
adc
es
in
mov
out
pop
call
xchg
mov
and
add
ret
sub
call
push
sahf
push
xor
push
movsb
jg
ja
stc
pop
sbb
sarl
nop
enter
lret
in
mov
rcrb
lock
cmp
mov
dec
iret
lods
sahf
xchg
imul
sbb
cli
scas
stos
testb
add
sbb
divl
sahf
sbb
stos
add
xor
notl
mov
sub
into
nop
push
sarl
and
inc
ret
adc
push
lea
int
xchg
mull
pop
sub
add
dec
mov
aas
mov
push
jbe
cltd
pop
mov
xchg
pop
xchg
stos
push
inc
andl
mov
and
sbb
dec
push
in
mov
gs
adc
clc
mov
in
lcall
into
adc
cld
add
adc
mov
icebp
fsub
jne
aas
imul
enter
popf
xor
sbb
jge
jb
loop
mov
inc
sbb
ret
call
xchg
dec
mov
and
in
shrb
aam
sub
enter
push
in
dec
iret
xor
sub
je
adc
dec
shll
mov
mov
sub
je
mov
rcr
xor
ret
dec
mov
add
test
addr16
cmp
push
or
movsl
fiaddl
jo
adc
push
ljmp
jb
imul
cltd
mov
rolb
sub
lods
inc
pushf
sbb
mov
popl
test
sarb
push
pusha
push
mov
sub
cmpsl
mov
daa
add
aam
fcomi
mov
dec
xchg
jmp
adc
cwtl
add
cli
jne
mov
inc
xor
jno
in
lods
xor
adc
inc
xor
or
mov
sub
into
dec
subb
add
aaa
pop
xchg
push
adc
mov
shrl
pop
inc
mov
pop
push
inc
dec
xchg
ds
fwait
and
push
setnp
xor
call
iret
test
pop
and
mov
inc
int
test
sub
out
gs
mov
mov
mull
loop
sbb
mov
jg
ja
out
cmp
mov
jbe
push
into
pop
nop
adc
mov
jle,pn
ja
lret
lock
jne
stos
dec
xor
das
inc
cmp
xchg
mov
xchg
jl
bound
out
hlt
neg
lret
push
ret
fwait
ja
jge
test
outsb
out
cmc
inc
push
and
xchg
add
jne
ss
adc
jle
inc
test
hlt
lock
pop
sbb
test
mov
push
mov
aad
mov
jno
mov
xor
ljmp
sub
push
rclb
add
pop
movsl
jg
add
imul
xor
pop
or
push
push
xchg
sbb
test
mov
cmpl
add
mov
add
push
les
jo
lcall
dec
jecxz
dec
test
and
adc
push
xchg
dec
pop
mov
call
dec
ret
stos
sub
out
fadd
jmp
and
mov
dec
xchg
out
outsl
pop
xchg
je
xor
jo
and
inc
vmaxsd
repnz
xor
adc
test
orl
les
pop
aad
pushl
ret
arpl
cmp
push
mov
pop
xchg
adc
sbb
stc
push
pop
jmp
cmp
in
lock
pop
and
icebp
movsb
ret
and
lret
fdivr
inc
mov
adc
ljmp
lock
mov
lea
or
adc
xchg
icebp
call
push
xchg
out
lods
xchg
insl
gs
fisubrs
mov
mov
into
ret
popf
daa
jl,pt
jecxz
push
notb
ds
sti
pop
pop
cmp
fdivrl
cltd
adc
pop
mov
inc
inc
jmp
movsb
push
mov
fdivr
cwtl
dec
test
or
int3
sub
pushl
add
icebp
push
mov
fs
rcl
cmp
loop
jns
xchg
sub
mov
add
add
cmp
outsb
stos
pop
sbb
popa
subb
pop
mov
enter
stos
fwait
clc
xor
scas
lret
and
dec
mov
in
clc
idivl
pop
aam
inc
push
lock
cmc
in
dec
sahf
cmpb
jp
lret
outsl
repz
movsl
push
das
out
or
push
cmp
mov
pop
mov
icebp
push
adc
and
iret
inc
fisubrl
test
mov
pop
hlt
and
xchg
sub
dec
push
inc
jae
mov
cmp
mov
push
pop
jg
inc
imul
cmp
rolb
out
aas
pop
cmp
inc
pop
push
xchg
ljmp
inc
lahf
sti
nop
sbb
mov
sti
jne
cmp
scas
mov
lcall
mov
icebp
movsb
mov
stos
frndint
sub
daa
imul
adc
enter
mov
lahf
cmpsl
jg
std
out
js
mov
xor
in
or
pop
mov
sbb
daa
lcall
push
xchg
dec
mov
cmp
push
jle
sbb
sub
sub
jge
ret
dec
sub
shr
dec
test
arpl
pop
test
imul
dec
add
imul
jmp
push
cmpsb
mov
gs
or
popf
and
xor
icebp
pop
adc
push
push
sbb
lcall
mov
xchg
push
sub
popa
mov
mov
adc
cs
hlt
mov
adc
cld
sub
hlt
fstps
test
pushf
push
cmp
outsl
push
xor
sbb
lods
dec
sbb
mov
enter
jle
insl
mov
mov
aaa
aaa
mov
dec
daa
loop
add
and
mov
push
bound
xchg
ljmp
loopne
jb
push
or
daa
push
outsl
out
sub
and
loope
and
adc
pop
adc
mov
inc
int3
repz
push
sub
mov
xchg
shll
inc
clc
ss
cmp
cmp
jae
cld
and
xor
addb
testb
adc
cltd
jmp
cltd
mov
push
jne
in
and
push
push
add
pushf
inc
shl
in
adc
pop
fbstp
bound
or
mov
cmc
cmpsb
dec
inc
nop
aam
adc
sbb
aam
js
dec
mov
out
sub
mov
addr16
jae
insl
adc
lock
pop
fldcw
stos
fimull
sbb
pop
xor
jb
adc
jb
sub
adc
test
aaa
test
cs
xor
int3
cmp
mov
and
cmp
dec
lcall
cltd
fucom
sti
flds
or
mov
test
xchg
jne
fdivr
outsb
pusha
inc
into
push
xor
outsb
mov
dec
fs
jl
popa
cld
add
cmpsl
rol
push
std
xor
mov
add
ret
subl
push
adc
inc
push
push
fidivrs
push
add
push
sahf
and
pop
mov
push
cmp
mov
fildll
scas
dec
push
jl
or
xchg
xor
dec
add
sbb
xor
and
pop
push
addr16
mov
lock
addr16
aas
pop
push
int3
xchg
pop
push
leave
cmc
or
lock
out
aas
in
xchg
test
inc
int
ss
adc
test
movb
sbb
movsb
mov
in
jle
es
cli
sub
mov
outsl
lcall
loopne
fwait
and
mov
jg
rcrb
sub
ss
pop
push
mov
jecxz
imul
inc
mov
cld
sahf
pop
push
aam
xor
sar
les
movsl
lret
hlt
mov
test
in
mov
cli
dec
sub
cld
xor
leave
in
cld
mov
pop
mov
inc
aaa
cltd
jo
xchg
dec
xchg
sub
mov
cmc
push
ljmp
int3
test
hlt
imull
or
dec
and
push
bound
add
repz
stos
inc
add
push
pusha
xchg
mov
call
arpl
adc
pusha
add
xchg
pop
or
inc
addl
test
scas
and
divb
adc
add
hlt
mov
jmp
jmp
addr16
and
dec
mov
sbb
leave
lret
inc
push
xchg
mov
jbe
mov
push
imul
sub
xchg
hlt
and
clc
cli
jle
mov
sub
sarb
xchg
inc
xchg
mov
jmp
subb
out
shlb
icebp
imul
mov
jnp
lods
insl
pop
push
jne
fmuls
inc
pushf
subb
adc
js
lret
adc
xchg
push
mov
mov
ret
pop
sbb
adc
add
xor
jbe
or
mov
mov
xchg
push
mov
jge
or
fdivrs
scas
test
sub
popa
mov
sbb
ret
in
stos
mov
mov
mov
ss
fwait
push
lock
repz
cltd
and
test
jecxz
xor
leave
cwtl
ss
jno
push
pop
ja
mov
pop
rolb
mov
pop
cmp
or
insb
cmp
mov
fs
lldt
popf
lock
cmpl
push
and
hlt
scas
lahf
dec
test
or
push
in
mov
cmp
lods
pop
mov
data16
test
pop
push
xchg
mov
movsb
pop
jbe
cmpsl
hlt
fistps
mov
imul
jecxz
jbe
dec
mov
inc
cmp
xor
movsb
and
inc
mov
lods
cs
adc
in
cli
call
inc
test
dec
xchg
fcoml
int
adc
mov
rcrb
dec
push
icebp
repz
fcmovu
scas
cmp
jg
xor
insb
scas
fwait
mov
cwtl
orb
cmp
mov
daa
jmp
cmpsb
cwtl
imul
icebp
sbb
clc
pop
rcrb
popa
ja
outsb
movsb
push
inc
pop
mov
or
aas
jg
pop
movhps
jno
xor
fldt
negl
mov
aam
sbb
pop
test
mov
pop
aaa
addr16
adc
mov
loope
dec
xor
sub
add
je
xchg
fsubr
push
mov
data16
mov
data16
cwtl
dec
xlat
xor
jnp
inc
aam
rclb
imull
ja
mov
aas
sub
addr16
imulb
ss
fsubrs
inc
mov
push
ds
cmpb
jp
pop
xchg
cs
int3
mov
xchg
sub
into
imul
jge
cmpsb
cmp
adcl
nop
inc
mov
aad
jg
loop
mov
shrb
mov
push
xor
adc
in
orb
out
fidivl
cmp
outsl
in
test
sub
aam
stos
jbe
ss
pop
iret
stc
fnsave
je
fidivrl
roll
xchg
out
mov
add
mov
mov
data16
mov
bound
std
movsb
jg
jp
jbe
fbstp
mov
cmpsl
inc
push
aaa
sbb
sbb
mov
push
movsl
movsb
inc
ret
push
test
xchg
filds
jmp
ja
add
sbb
fucomip
mov
call
lret
mov
or
cli
int
mov
add
lret
jno
fcomps
das
sub
mov
fiadds
int
push
or
mov
lock
adc
pop
mov
or
push
scas
ljmp
mov
out
dec
test
pop
fwait
cwtl
mov
sti
hlt
into
pop
cmp
outsl
cmp
jnp
popf
jns
cwtl
mov
adc
push
jne
mov
repz
loopew
mov
loopne
mov
call
rcr
push
in
mov
xchg
testl
xor
out
push
sti
xchg
cltd
scas
jmp
jo
jecxz
jge
push
negl
xchg
int3
push
nop
cmpsl
mov
sbb
sub
add
sbb
xchg
mov
jle
sub
add
adc
sbb
jmp
lret
jo
push
rorl
rcl
pop
shrb
popf
into
sub
ret
in
mov
das
push
dec
add
dec
in
mov
ljmp
dec
inc
jne
fistpll
inc
or
sbb
push
fmull
lods
fld
inc
lds
push
inc
inc
imul
into
loope
dec
inc
xchg
dec
xchg
inc
roll
add
outsb
inc
inc
das
test
xchg
iret
jae
xchg
lock
or
sub
in
repnz
inc
xchg
lahf
push
or
jle
jmp
test
outsl
rorl
dec
andl
jge
mov
pop
subb
push
rolb
mov
xor
jo
ss
push
and
inc
popa
and
dec
xchg
repz
jg
leave
pop
push
adc
clc
test
xor
sbb
das
and
stos
xor
inc
in
or
aad
icebp
add
in
cmpsb
mov
out
int
xchg
mulb
leave
adc
ucomiss
jne
mov
js
lret
sbb
pusha
jnp
lock
clc
push
push
and
xchg
ss
rolb
test
push
add
shrb
dec
stos
jbe
pop
movsb
fidivs
int3
fistpll
pop
pop
data16
push
mov
inc
cmc
and
push
insb
push
hlt
ret
cmp
pop
adc
movsl
push
fisubrl
imul
add
or
adc
xchg
jb
mov
bound
sahf
or
cmpsb
lret
push
dec
jg
push
mov
in
loop
stos
or
mov
or
rorb
jge
mov
sbb
adc
stos
dec
sarl
inc
xchg
mov
mov
out
and
out
pop
fs
xor
dec
mov
rclb
push
sar
mov
mov
pushf
mov
and
aad
dec
dec
rclb
jne
push
sahf
mov
push
cli
mov
jle
xchg
imul
add
add
or
aaa
and
nop
add
pop
hlt
pop
xorl
ss
aam
lea
xchg
lods
add
popf
fisubs
testl
aam
ret
lea
adc
test
inc
ljmp
mov
inc
pop
adc
gs
push
insb
jle
cmp
adc
leave
daa
sub
push
in
xchg
add
js
les
fwait
cmp
ficomps
mov
in
sbb
inc
arpl
cs
test
push
fcmovnu
mov
and
add
sbb
imul
cmpsl
pop
mov
or
mov
mov
mov
dec
xor
sub
test
adc
nop
xor
push
js
scas
popl
and
testl
mov
test
mov
mov
pop
push
test
xchg
nop
mov
loopne
cltd
mov
fstpl
xor
inc
jmp
cmpl
rcr
out
popa
xlat
int
pop
pop
ret
add
into
icebp
cs
xor
xor
pop
inc
nop
jmp
imul
pushf
pop
mov
lret
cmpsb
pusha
cld
in
push
int
jecxz
test
xor
aaa
scas
mov
int3
cmpb
mov
cmp
out
jp
int3
stos
pop
sub
cmp
lods
pop
push
mov
push
cli
pop
fsubl
sti
and
out
mov
mov
push
aam
cmp
adc
hlt
lahf
push
jns
out
stos
xchg
xchg
fadds
sub
xchg
jp
xor
leave
pop
dec
push
jmp
jge
ret
pop
movlps
xor
cld
inc
lahf
ret
cld
pop
out
cs
push
dec
dec
insb
test
mov
mov
fcoms
pop
jg
xor
sti
and
and
hlt
pop
inc
repnz
std
mov
push
pop
add
push
jmp
mov
ja
out
lods
mov
and
xor
or
dec
sub
jo
adc
sbb
dec
dec
sbb
xor
dec
stos
cli
adc
push
dec
cmp
test
pusha
pop
sar
mov
push
fisubrs
out
adc
adc
popa
ds
popa
aad
mov
and
cli
or
ljmp
lret
xchg
mov
adc
xchg
or
sbb
adc
test
push
push
js
dec
cwtl
inc
dec
push
sbb
sub
push
int3
leave
pop
popa
pop
pop
jp
inc
or
popa
dec
sub
mov
mov
outsb
push
int3
inc
leave
loop,pt
gs
push
push
push
pop
push
mov
sub
cld
mov
and
out
xor
popfw
sub
imul
fs
lock
pop
dec
aam
shlb
rcl
mov
push
pop
ja
or
loopne
and
lds
push
mov
addr16
jns
add
sbb
xor
inc
lock
jecxz
or
loopne
mov
imul
cmovbe
mov
aam
push
jnp
or
jb
mov
into
add
movsb
aad
push
jne
mov
and
mov
into
mov
push
mov
pop
mov
xchg
stos
add
cmp
cmpsb
mov
cmp
scas
ret
out
scas
daa
test
test
int3
insl
int
dec
add
in
mov
jbe
add
lods
repnz
add
rcr
test
scas
add
pop
sbb
sub
popf
push
mov
rcll
jle
sub
leave
int3
inc
cmpsl
mov
sbb
fnstcw
dec
cmp
pop
in
jnp
dec
outsb
fisttpll
mov
dec
lea
outsb
cmp
push
hlt
inc
dec
mov
lea
pop
add
dec
cld
xchg
jge
and
mov
lahf
or
push
gs
lods
and
mov
cmc
aas
and
movb
negl
leave
aad
mov
inc
xchg
cwtl
lret
push
fldcw
push
xchg
shlb
hlt
jmp
cs
pop
loopne
enter
mov
sahf
cmp
loop
jp
jp
adc
lahf
mov
aam
call
pop
vmovshdup
cltd
aaa
xchg
repnz
aaa
mov
xchg
jo
and
cmc
pop
cmpsb
cmpsl
jno
pop
xchg
jo
xchg
sub
jns
mov
inc
xor
xchg
rcll
repz
mov
nop
mov
or
ss
dec
stc
out
xchg
lcall
mov
sub
cmp
fmuls
pop
popa
dec
mov
fstps
push
mov
lods
xor
push
jg
lcall
mov
mov
mov
stc
jns
dec
icebp
sbb
inc
jae
repz
cmpsb
repz
push
pop
dec
mov
sub
cmp
and
hlt
hlt
ljmp
jo
rcrb
daa
scas
pop
push
mov
inc
push
int
orl
cmc
sub
or
pop
mov
and
cmp
std
mov
mov
shrb
fldcw
sub
ret
push
pop
sbb
out
push
add
insb
popa
arpl
popf
xchg
cmp
mov
jle
push
mov
cmp
fistl
sub
rcrb
sbb
sbb
clc
test
lds
mov
xor
out
or
cltd
adc
mov
jle
xor
mov
out
imul
mov
dec
ror
or
xchg
dec
faddl
mov
test
sub
cmp
addr16
jmp
mov
or
adcl
pushf
out
sbb
and
clc
aad
movsl
pop
ljmp
sbb
dec
push
into
or
insb
jbe
lret
sbb
jle
das
mov
mov
lret
call
or
push
jecxz
xchg
xor
sub
popf
mov
pop
pusha
loopne
out
xor
and
mov
cltd
out
sahf
or
adc
inc
fsubrl
or
aas
into
std
int
and
ret
add
push
mov
std
push
nop
and
jns
dec
xchg
bound
inc
mov
xchg
xchg
xorl
test
test
lds
mov
lea
xchg
fisubrl
add
mov
mov
dec
rcrl
push
and
sub
jbe
push
mov
aas
or
imul
xchg
add
std
jmp
ficoml
dec
test
cmp
pop
dec
jno
and
fwait
je
mov
pop
aas
fistpll
mov
cmp
dec
aam
lods
mov
pop
sub
lock
and
sub
dec
fisttps
xor
shrl
sbb
fcomip
sarb
fsubl
push
inc
mov
inc
call
or
inc
pop
int3
jo
push
dec
xor
sbb
test
dec
sub
sbb
jae
and
mov
dec
push
shlb
cld
mov
sub
out
stc
push
cld
inc
mov
inc
adc
push
in
mov
inc
call
sbbl
xlat
xchg
icebp
in
sub
inc
loope
test
outsb
mov
xchg
push
mov
insl
aam
jno
sahf
add
xchg
push
mov
in
inc
dec
lcall
jle
jmp
push
in
mov
xchg
sbb
cmp
jmp
in
test
fists
das
test
test
xchg
sub
ja
insb
scas
jb
pushf
repz
rclb
and
sub
sub
pusha
inc
lea
outsb
cwtl
xor
push
out
or
cmp
test
pop
int
test
test
out
adc
and
push
dec
inc
ret
push
jne
sub
and
adc
or
cmp
stc
fstpt
dec
mov
addr16
cmp
rcll
test
sbbl
nop
xchg
jnp
mov
inc
inc
adc
mov
cltd
jg
mov
cmpl
mov
mov
pop
jp
les
scas
xor
test
mov
sbb
mov
mov
xor
sub
in
jge
insb
lea
subb
adc
mov
pop
push
rcrb
mov
outsl
mov
mov
shll
lds
sbb
dec
es
sti
outsl
sar
jae
fdivrs
lds
das
dec
inc
push
shlb
sub
jle
bswap
aas
pop
sti
addr16
jnp
sbbb
adc
cmpsl
orps
sub
mov
lcall
inc
mov
loop
and
push
aaa
cli
and
jp
push
push
subb
lds
std
movsl
shll
push
pop
dec
mov
mov
rorl
es
jmp
mov
jg
int3
mov
popa
push
mov
mov
enter
rcr
mov
push
repnz
cmp
push
jmp
cli
inc
outsl
mov
dec
xor
lods
pushl
jmp
inc
inc
ds
xor
cwtl
sbbb
ret
clts
aaa
jle
repnz
repz
cmp
bound
imul
xor
sbb
rolb
sbb
jno
das
xor
movsl
sbb
enter
sbb
js
repnz
insb
jne
lret
scas
pop
enter
fs
and
pop
jl
arpl
jp
push
movsl
test
xor
xchg
mov
in
mov
sub
adc
mov
aaa
popl
test
xor
adc
jo
pop
sub
jmp
pop
pause
sbbb
sbb
xchg
adc
decb
add
shrl
jb
aad
pop
mov
or
push
mov
rclb
mov
xchg
xor
stos
inc
and
clc
pop
xchg
mov
enter
xchg
cli
aaa
sub
cmp
bound
mov
push
mov
push
pop
fildl
imul
push
xchg
add
pop
stos
scas
adc
pop
inc
pop
icebp
adc
add
loopne
or
gs
pop
mov
adc
push
movsb
testl
pushf
cmp
repnz
outsl
inc
lods
add
aaa
pushw
jb
cmp
jns
xchg
fcompl
or
sub
and
outsb
push
lods
dec
jb
mov
push
test
lcall
lods
cltd
push
and
es
and
outsl
mov
add
fs
mov
adc
js
outsb
out
jmp
push
or
stos
rcrb
xlat
inc
insb
sbb
fdivrp
xchg
cmp
mov
and
lock
jbe
mov
ret
leave
out
cltd
je
test
sub
icebp
stc
inc
xchg
hlt
daa
in
add
into
and
sbb
sahf
xchg
pop
dec
mov
cwtl
xor
sahf
stos
push
leave
inc
cwtl
inc
mov
jg
sub
mov
andl
pop
rorb
add
push
inc
xchg
aam
fisubs
scas
and
inc
xchg
sti
cmp
inc
mov
jg
pushf
aam
jnp
aad
ja
mov
pop
dec
mov
ja
jp
addb
sub
daa
and
mov
pusha
mov
pop
scas
fdivs
rcll
popa
enter
jp
mov
push
cwtl
lods
xchg
adc
pop
cwtl
cltd
xchg
dec
aam
mov
push
mov
adc
fsubl
bnd
push
scas
pop
inc
pop
hlt
inc
mov
mov
gs
dec
mov
arpl
mov
add
jae
adc
cmpsb
jmp
lods
in
inc
lcall
mov
fs
dec
xchg
mov
xchg
pop
lret
and
icebp
xchg
rol
and
mov
pop
sahf
aad
test
mov
aas
hlt
ss
sbb
dec
and
or
and
and
std
hlt
je
mov
int
pop
cmpsb
cld
dec
ret
xchg
jge
jle
int
aad
xchg
in
mov
sbb
nop
fcomps
sub
loopne
jns
mov
mov
xor
inc
inc
jle
popf
xor
cmpsb
jb
fisubrl
push
stos
leave
push
and
scas
jnp
adc
fldenv
sahf
cmc
xchg
sbb
ficomps
xorl
js
js
stc
imul
fiadds
jl
fimuls
cmp
cmc
mov
test
sahf
adc
jae
jl
dec
or
add
jae
adc
test
hlt
push
lcall
push
and
enter
cmp
dec
loope
sti
test
jg
out
fidivl
rorl
and
xor
jl
lock
ret
xchg
mov
mov
xor
dec
push
lahf
mov
xchg
dec
push
lea
aaa
aad
stos
cli
enter
adc
pop
jge
jle
fsts
out
imul
jno
repnz
lods
adcl
int3
dec
mov
pop
pop
jle
cmp
sub
push
dec
xor
jmp
jecxz
mov
in
xor
gs
add
mov
test
xor
enter
mov
cmp
xchg
inc
jg
pop
idivb
jo
mov
mov
loope
out
mov
jmp
stos
mov
xchg
jnp
aaa
inc
sbb
out
fcmovnu
xor
loop
jle
notb
sahf
shll
out
push
popf
fdivr
shll
arpl
lods
dec
lds
xor
sbb
xor
in
inc
dec
lahf
push
cmp
inc
test
add
adc
in
xor
call
fimuls
ret
sti
push
xchg
adc
sarb
inc
jle
or
pop
daa
popf
cmp
push
pop
cmpsb
dec
out
mov
sub
gs
pop
rcr
push
fwait
cmpsb
test
daa
pop
ja
mov
xchg
and
adc
dec
dec
adc
push
shlb
fildl
frstor
push
dec
sti
mov
sub
mov
sarb
sbb
xchg
cld
loop
lods
adc
mov
jns
or
lods
stos
mov
inc
ret
fcompl
adc
adc
mov
sbb
lahf
or
and
add
lds
orb
pusha
cmp
fs
and
push
in
sub
lea
jbe
cmp
sub
dec
lahf
add
data16
scas
push
mov
jle
adc
cli
sub
outsb
fists
das
xor
or
mov
movsl
movsb
lock
ljmp
xchg
and
lock
pop
or
sub
jp
movsl
pop
lock
jno
sub
call
insb
sub
mov
xchg
rorl
ss
push
nop
loopne
mov
push
stos
mov
xchg
add
mov
nop
push
jl
pop
pop
xor
movsb
xchg
inc
out
xorl
gs
rclb
xchg
test
jl
in
bound
push
jecxz
cwtl
inc
shufps
or
ljmp
lods
popa
fsubrl
pop
jns
dec
dec
cmp
insb
inc
sbb
xchg
jp
cmpsl
test
xchg
jno
adc
inc
cwtl
mov
mov
add
mov
push
xchg
adc
pop
jg
call
cmc
lock
faddp
sbb
iret
push
lret
sub
fdiv
mov
sbb
pop
push
xchg
jmp
xchg
sub
mov
or
pop
cwtl
scas
pop
xchg
dec
into
lahf
scas
xor
jnp
in
sbb
adc
mov
sbb
loop
add
lds
imull
add
add
pushf
outsl
fcoms
jno
cld
repnz
push
push
sub
sti
push
arpl
mov
xchg
test
or
add
xchg
add
addb
fwait
cwtl
push
mov
icebp
push
in
cli
dec
pop
sub
ds
xorl
or
add
sbb
and
cmp
out
mov
je
sub
xchg
lahf
pop
dec
jg
mov
ja
nop
cmpsl
push
popa
jno
leave
xlat
mov
hlt
cmc
movsb
lods
aas
xchg
pop
mov
mov
jg
push
xor
and
push
inc
hlt
mov
cmp
cmpsb
lods
lret
adcb
subl
lods
pshufw
fmulp
fsubr
adc
mov
fs
push
mov
adc
mov
adc
mov
jmp
fs
data16
pavgb
push
or
push
mov
iret
jb
test
add
mov
sub
bnd
ss
idivb
inc
cwtl
jle
jmp
mov
lock
xchg
xlat
inc
inc
mov
mov
mov
cs
adc
out
loope
mov
cwtl
mov
mov
mov
frstor
mov
pop
repz
in
sbb
sub
inc
iret
lret
mov
mov
push
or
out
jo
idiv
jo
mov
inc
mov
out
pushf
xor
out
jnp
sbb
mov
jecxz
sub
call
cmpsb
push
fildll
jg
adc
cmp
push
stos
cltd
pop
shlb
rcll
push
jns
scas
dec
inc
daa
and
add
add
int
call
inc
mov
inc
sbb
jae
sbb
jno
pop
pop
lods
dec
dec
cmp
fidivs
mov
outsb
mov
out
dec
pop
bound
testl
dec
jl
mov
adc
call
sbb
jns
enter
mov
out
pop
and
push
or
mov
in
mov
inc
pop
push
enter
test
or
pop
scas
xor
adc
pop
enter
repz
mov
pop
xchg
xchg
or
icebp
pusha
jno
in
pusha
cmp
or
imul
add
mov
inc
dec
push
stos
clc
pop
roll
sbb
pop
test
mov
int3
stos
stos
divl
outsb
lret
inc
cwtl
sbb
mov
setl
setne
push
test
shlb
je
mov
sub
mov
in
push
test
add
cmp
xchg
jb
xchg
cmp
int3
or
pop
mov
std
mov
data16
mov
and
adc
inc
test
xor
imul
jne
imul
iret
pop
mov
xchg
xor
fcom
mov
pop
jnp
dec
mov
testl
inc
xor
rclb
pop
mov
mov
mov
cmp
cmc
fistpl
mov
daa
sub
push
movsl
adcb
or
mov
mov
nop
rolb
and
pop
sbb
mov
push
sbb
pushf
in
dec
dec
inc
and
mov
dec
jp
jo
rorb
xor
fadds
movsl
mov
shll
mov
xchg
daa
sub
sbb
jbe
sbb
push
rolb
les
lea
aas
movsl
hlt
test
xor
pop
mov
pop
dec
mulb
js
dec
arpl
or
cltd
imul
xor
mov
enter
xchg
pop
xlat
jns
pop
stc
sarb
dec
jne
shlb
mov
inc
dec
xor
adcl
pop
mov
jge
ficoml
in
fs
movb
mov
mov
or
pushf
fwait
repnz
scas
lret
inc
cmp
cmp
sub
lock
leave
push
pop
imull
sbbl
cmp
fadd
xlat
sbb
sub
mov
adc
mov
stos
addr16
mov
clc
out
in
dec
lret
addr16
stos
jb
mov
bound
mulb
movsl
es
jg
ss
jns
aas
jno
repnz
pop
cmp
orl
insb
jl
movsb
jns
and
cmp
push
push
outsb
mov
scas
in
into
std
xor
dec
mov
cli
jb
dec
sbb
incb
or
out
lods
add
push
int
js
xor
mov
jne
addb
das
or
stos
insl
call
cltd
cmp
and
std
push
adc
pop
and
jle
bound
movsb
addr16
popa
lcall
sub
js
int
sbb
shrl
cld
sub
gs
sbb
xor
fidivrs
xchg
clc
loop
xchg
cmp
sahf
push
mov
xchg
arpl
fadd
aas
cli
pushf
insl
in
pusha
and
iret
fnstenv
ret
in
mov
mov
inc
enter
hlt
mov
into
sbb
lock
dec
in
sub
loopne
ljmp
stc
repz
xor
jnp
pop
into
mov
add
and
outsl
sub
cmp
in
mov
into
sub
mov
das
aas
mov
pushf
mov
insb
shlb
adc
movsb
or
xor
sbb
aaa
jne
push
cmc
aad
push
mov
mov
inc
add
fcmove
jmp
neg
xchg
and
inc
ret
and
pop
mov
inc
dec
cmpsl
xchg
push
xchg
jo
call
xchg
push
cltd
mov
cld
icebp
insb
sub
shr
test
jae
in
pop
pop
push
mov
sub
sbb
adc
fdivs
and
stos
ja
inc
pop
add
movsb
lret
xchg
sub
sar
xchg
jle
rorl
cmpsb
call
lret
mov
movl
imul
mov
pop
push
mulb
sub
and
pop
loope
loopne
loope
dec
inc
fucom
enter
dec
xor
push
inc
fbld
fldl
push
mov
fcoml
scas
or
sti
mov
push
pop
push
loope
scas
mov
add
in
cli
and
sub
stc
in
cltd
fucomp
scas
cmp
pop
ss
inc
ss
jno
adc
adc
adc
jnp
xchg
out
clc
pop
mov
aaa
aam
cmp
sub
mov
or
mov
xorl
push
push
dec
daa
sbb
add
cmp
mov
and
lea
lods
xor
movsb
out
inc
jae
aad
adc
or
jb
lea
fs
jecxz
xchg
cmp
jo
test
adc
repnz
mov
ss
mov
call
inc
js
mov
xor
gs
add
pop
ja
cli
sub
push
cmp
xor
sbb
lret
das
lahf
mov
fimuls
cwtl
jbe
push
xor
test
adc
mov
gs
push
out
xchg
or
out
pushf
add
xor
inc
mov
cltd
add
loop
xchg
in
popa
lds
cmc
mov
insb
sbb
jp
cltd
inc
lock
fstpt
push
loopne
into
leave
scas
outsl
ret
sbb
mov
jnp
push
inc
in
jno
mov
mov
push
jp
and
aam
dec
mov
testb
int3
lea
sub
repz
shlb
dec
push
or
loopne
imul
iret
lret
rolb
sahf
xor
push
or
xor
outsb
mov
xchg
jo
ret
pop
cmp
jne
push
mov
jg
stos
jmp
xchg
ja
or
pop
mov
repnz
xchg
loop
fucomip
xchg
jae
sbb
fmuls
scas
in
add
jle
jnp
sub
mov
arpl
fnsave
pushf
xlat
adc
scas
sbb
adc
mov
sub
and
lahf
inc
sub
insl
jns
out
xchg
out
and
je
ret
push
jns
push
xchg
cmc
sbb
cmp
out
xor
repz
andl
in
push
addl
loop
or
sub
aas
cs
call
mov
dec
lret
cs
and
sub
add
mov
add
jg
daa
test
mov
or
add
imul
sub
xchg
stos
push
pop
jecxz
mov
ds
adc
dec
push
into
pop
push
int3
sahf
test
ret
xchg
rcrl
fimull
fnstsw
ret
cmp
aas
push
inc
cmc
inc
mov
lcall
negl
mov
loop
jne
and
aaa
iret
in
rcrb
scas
mov
xchg
test
pop
mov
or
adcl
xchg
lds
inc
shlb
mov
out
shlb
shld
aas
lods
movsb
fsubrl
mov
cmp
push
nop
scas
mov
leave
sub
inc
in
data16
fwait
jp
xor
adc
inc
testl
or
sbb
ficoms
jo
push
in
in
dec
jle
adc
imul
jne
scas
mov
ret
xor
shl
mov
mov
clc
fsubrl
jg
xlat
xchg
dec
add
call
sbb
sbb
push
loope
jno
dec
cli
or
roll
sub
mov
jb
cli
dec
icebp
mov
sbb
stos
mov
pop
push
insl
sbb
inc
mov
jg
ficompl
pushf
fimuls
ret
jl
lock
inc
mov
pop
sbb
mov
sbb
enter
cmp
je
lcall
push
mov
push
pop
loop
xchg
dec
lcall
lea
std
bndldx
jmp
mov
imul
andl
aam
xchg
icebp
adc
es
pop
addb
movsl
cmpsl
scas
inc
push
pop
hlt
push
int3
in
mull
mov
push
int
and
jbe
xchg
out
stos
push
push
cli
enter
or
ss
jecxz
push
mov
dec
jbe
mov
pusha
cmp
loop
add
out
mov
iret
popf
leave
aad
sbb
icebp
lahf
pop
xchg
jae
lds
or
push
repz
cwtl
and
lock
sbb
and
les
add
aad
call
sbb
add
pop
and
adc
xor
dec
push
lahf
into
jle
repnz
fimull
mov
add
fwait
mov
mov
les
pop
mov
pop
pop
mov
mov
dec
mov
push
jno
rolb
push
or
outsb
sarb
cmp
mov
rol
or
lods
cmp
mov
popf
mov
stos
aas
ror
loope
mov
jmp
inc
rcr
cmp
aad
mov
mov
pop
mov
fildll
and
jbe
mov
or
jge
fldcw
fcmovnbe
mov
xlat
pop
sbb
shll
xchg
mov
mov
pop
mov
mov
mov
lods
jecxz
shrb
js
jge
out
test
sub
cmp
push
insb
adc
outsl
push
jno
xchg
lret
ret
pusha
scas
scas
and
mov
sub
in
adcb
lcall
lahf
stos
sub
stos
test
mov
mov
add
cmp
add
pop
call
loop
add
roll
push
adc
arpl
bound
out
test
cmc
ret
pop
es
xchg
inc
jne
popa
in
xchg
daa
cmp
inc
scas
push
push
pop
sub
roll
aaa
lds
ja
pop
arpl
fistl
cmp
inc
or
bound
or
aas
cmp
or
jae
fsubs
enter
call
jecxz
xchg
adc
aas
bound
jle,pn
int
insb
jns
mov
loope
mov
mov
mov
jl
lcall
xor
call
cmp
cmp
aaa
jno
stos
xchg
and
xchg
xor
xlat
xlat
lods
movsb
push
fisubrl
cmp
scas
jl
mov
fdivrs
pop
inc
and
fs
out
jne
cmp
shlb
cmc
jp
dec
lods
fisttpl
inc
mov
mov
jecxz
or
jno
aad
shl
inc
adc
scas
mov
dec
cmp
xor
mov
cmp
push
sub
aaa
sub
mov
addb
hlt
hlt
dec
cmp
icebp
les
dec
xchg
lods
in
sub
movsb
icebp
out
pop
mov
ficomps
pushf
mov
inc
push
lret
loopne
outsb
lret
pop
mov
xor
mov
sbb
leave
and
xchg
repnz
xchg
or
ss
mov
adc
cmp
int
cmpsl
xchg
sbb
xorb
stos
ret
or
je
ret
daa
add
fs
fdivl
cmpsb
add
cmp
xchg
xchg
push
rcrl
rolb
fwait
mov
ss
icebp
cmp
scas
add
movsb
xchg
adc
int
lea
xchg
or
xchg
cwtl
cwtl
scas
push
pop
test
ja
stos
cmpsb
loop
arpl
inc
mov
cld
add
cmp
cmc
movsl
sub
jecxz
orl
shll
inc
shl
xchg
adc
sbb
mov
pop
fdivrl
inc
orb
cwtl
js
jg
push
mov
sbb
mov
jno
lods
lods
sarb
call
lahf
cmp
xchg
push
or
iret
in
div
rolb
out
sbb
stos
fdivrs
cld
sub
sub
pusha
jle
cmp
out
loope
mov
jmp
jmp
push
pusha
and
sbb
or
enter
ror
cld
fnstsw
and
mov
sbb
or
push
jns
jecxz
aaa
sbb
push
sbb
aad
cmp
mov
pop
sahf
aas
xor
jge
out
bound
and
std
call
mov
rcrb
sha256msg2
mov
cmp
xchg
rcrb
mov
inc
arpl
cmp
or
and
ror
dec
add
and
sbb
cmc
sbb
or
pop
imul
shlb
loop
jae
adc
nop
add
dec
add
adcl
cmpsl
and
loop
push
cmp
jno
ds
inc
psubq
jo
out
sbb
or
inc
cmpsb
mov
inc
shll
test
jmp
subb
dec
inc
andb
iret
inc
arpl
cmpsb
in
subb
pop
cltd
ret
pop
cltd
imul
pop
rcr
or
test
lods
inc
cmp
fldt
in
fdivl
xchg
in
popa
ja
pusha
sbb
cltd
add
or
cmp
push
rcrl
mov
out
or
push
pop
ss
arpl
stc
pop
hlt
dec
popf
jne
pop
inc
sarb
test
bound
insl
jo
movsb
pop
loope
cmpb
mov
mov
gs
ljmp
sub
mov
rcrb
push
jne
inc
aas
pushl
push
rolb
sbb
pushf
jno
sti
cli
negb
outsb
rorb
in
and
add
mov
mov
lock
push
lcall
clc
inc
hlt
push
lods
addr16
sub
mov
andb
jp
inc
jo
push
mov
pop
xor
push
pop
xchg
hlt
js
sbb
insl
mov
adc
shufps
aad
cmp
mov
jl
mov
inc
mov
nop
mov
arpl
xchg
ds
and
sub
and
es
insl
dec
mov
das
dec
xchg
inc
test
sub
leave
mov
dec
or
bound
mov
xchg
push
ficompl
sbb
mov
idiv
cmp
jg
push
push
insl
out
jb
mov
out
loop
mov
in
push
je,pt
inc
adc
cwtl
pop
cmpsb
add
cli
nop
push
inc
mov
pop
xor
mov
js,pt
out
daa
pop
jno
cmp
dec
cmc
dec
aas
push
inc
mov
dec
sub
sbbb
mov
mov
fdivr
xchg
jle
dec
jmp
lods
stc
pop
cmp
adc
jae
push
mov
das
pop
and
sbb
add
icebp
ret
outsl
cmpsb
insl
fisubrl
xchg
mov
mov
xor
adc
xchg
sub
imul
jmp
faddl
adc
add
mov
ret
inc
xchg
arpl
sbb
inc
outsb
adc
sbb
dec
outsb
cmc
loope
lret
int
jae
xchg
xchg
lea
fcoms
or
stc
cmp
cli
fmuls
push
pop
fsubr
push
pop
mov
fsubrl
mov
loopne
push
lahf
ret
pop
in
sub
xor
dec
dec
mov
cld
inc
shlb
in
cmp
add
daa
imul
mov
insl
push
fldcw
and
add
and
out
fmuls
cwtl
popa
and
test
rcrl
test
mov
push
cli
shrl
xchg
outsl
idiv
mov
in
push
or
stc
or
lock
mov
outsb
test
lock
push
outsl
sub
jns
dec
cwtl
addr16
inc
and
loopne
js
dec
roll
divb
test
mov
or
dec
jns
fdivrl
jae
pop
xor
pop
test
mov
loope
jae
adc
enter
pop
es
lods
in
mov
test
cmp
push
adc
xchg
push
or
js
push
sbb
xor
aaa
sub
or
jae
xlat
dec
in
pop
loope
je
mov
sub
mov
pop
ljmp
pop
mov
push
and
add
fdivrl
shlb
in
xchg
push
xchg
jge
shlb
scas
cmp
sub
out
icebp
push
pop
sub
pop
in
inc
cmp
jae
mov
imul
jecxz
or
ret
xchg
mov
cmp
or
or
xor
jecxz
out
psrld
dec
outsl
in
cmp
scas
mov
mov
push
pop
cmp
adc
sbbb
popa
rorl
les
cwtl
scas
add
push
inc
js
xor
jle
das
xchg
stc
lea
data16
insl
dec
adc
rcll
in
insb
fadd
call
xor
inc
add
repnz
test
mov
pop
xor
push
leave
test
lret
cmpsb
cmp
push
push
pusha
jo
xchg
out
ss
fiadds
movsb
test
stos
inc
push
dec
addr16
mov
jo
sbb
repnz
cmc
mov
addl
popf
in
fincstp
push
push
push
cmp
out
jne
test
push
popf
add
cmc
out
scas
xor
addr16
ret
mov
aad
ja
out
mov
cwtl
shl
mull
inc
aad
or
mov
ljmp
pop
fisttpl
outsb
fidivs
std
aam
into
les
jg
adc
fdivl
fdivrl
out
testl
mov
fildll
inc
aam
shll
lahf
push
insl
mov
mov
andl
dec
xchg
add
in
stc
loopne
and
and
lods
sbb
push
inc
mov
lret
cmpsb
pop
dec
insl
jne
fidivl
adc
mov
push
xchg
lods
and
out
pop
xchg
dec
add
ds
or
lea
mov
push
cli
sbb
js
mov
ficompl
decl
popf
dec
sub
std
pop
lcall
jne
pop
fisubl
mov
mov
jmp
lea
lods
insb
cld
call
in
mov
lea
adc
mov
scas
test
test
jmp
xchg
popf
repnz
sbb
xchg
lods
cmpsl
sub
sbb
ja
xchg
xor
mov
sub
int
stc
adc
into
cltd
stc
jl
or
aaa
push
adc
push
dec
clc
mov
cld
pop
repnz
rolb
sbb
out
pop
jno
cmp
push
or
and
in
lret
xor
push
or
mov
adcb
outsb
outsb
sub
sub
jp
jmp
sub
testl
or
xchg
fstps
sub
enter
push
data16
inc
pushf
cwtl
or
testl
ds
stc
lds
shll
int3
cld
adc
stos
xor
adc
cmova
xchg
adc
xor
dec
arpl
xchg
jg
mov
xchg
subl
mov
push
clc
lret
pop
inc
testl
cld
cltd
shlb
enter
and
test
adcb
sbb
lea
rcrb
stos
hlt
lods
pushf
in
test
fwait
mov
dec
dec
fnstcw
cmp
adc
mov
add
mov
xchg
cmpsl
pushf
fldt
lret
jb
pop
push
loopne
mov
addr16
and
pop
push
dec
pop
js
aad
lds
or
movb
insb
lods
dec
or
sbb
pop
stos
ds
rcl
test
repnz
adc
dec
subb
int3
mov
test
add
ds
das
push
mov
xchg
sub
jb
stos
cmp
and
push
xchg
lcall
dec
mov
movsl
jbe
sub
dec
pop
es
jge
push
adc
inc
pop
xchg
adc
xchg
dec
fptan
fdivs
loope
rolb
retw
cli
dec
pop
xor
arpl
sub
adc
mov
pop
pop
xchg
mov
fisttpll
push
mov
jmp
scas
sbb
aas
nop
cwtl
pop
jecxz
jge
or
mov
mov
mov
imul
xlat
cmpsb
fstl
xchg
dec
sub
adc
or
rolb
ss
movaps
in
push
cltd
imul
mov
stc
mov
pop
int3
hlt
pop
xchg
inc
loopne
adc
je
lahf
add
dec
rorb
cmpsb
push
imul
jnp
lret
rcrl
scas
lahf
xchg
daa
je
jp
pusha
add
pop
add
dec
lret
mov
inc
lahf
xor
lret
aad
sbb
inc
cmp
rol
pop
fisubl
leave
add
stc
push
pop
popl
into
mov
xchg
cmp
mov
inc
in
fimuls
sbb
bound
cmp
js
test
push
mov
add
and
jno
push
stos
cmpsl
adc
inc
decb
je
jl
fidivrs
mov
mov
addr16
out
test
xchg
or
push
dec
ja
dec
enter
cmp
mov
mov
out
js
jg
inc
out
fsubl
ja
sub
mov
cmp
inc
push
mov
inc
pop
sahf
je
inc
jle
inc
lods
int
mov
xor
shlb
ficoml
xchg
cmc
ljmp
inc
andl
pushf
and
sub
sub
clc
cmpsb
cmp
xchg
scas
add
jmp
mov
out
fwait
sub
adc
pop
push
sub
cmp
mov
fisttps
addr16
lahf
sbb
cmpl
out
outsl
and
mov
stos
mov
cmp
push
adc
inc
popa
push
fstpl
orb
rcll
jbe
scas
push
dec
mov
fimuls
int
mov
sbb
push
or
gs
mov
iret
wrmsr
loope
xorb
jmp
scas
cli
aas
inc
pop
push
pop
test
jge
xor
in
sbb
insb
and
add
inc
repz
sahf
aad
sub
mov
pop
mov
pop
daa
call
mov
or
cld
mov
outsb
loop
hlt
pop
xor
or
push
popf
cmpsl
mov
shrl
add
inc
pop
xor
inc
repz
mov
addl
push
mov
aad
mov
cmpsl
or
xor
jae
std
aas
rcrl
mov
mov
mulb
xor
mov
js
cli
leave
mov
out
pop
or
xor
cmp
lcall
xchg
out
mov
or
icebp
pusha
cmp
add
sub
mov
xor
and
cmp
cwtl
jmp
inc
push
inc
test
popf
andb
das
lret
out
mov
insb
or
rcr
xchg
fdivrs
dec
out
or
inc
cwtl
dec
test
sahf
mov
cmp
dec
mov
decl
leave
cmp
fldt
cmp
sti
subb
int
push
jecxz
jo
scas
in
repz
mov
nop
ficomps
movsb
jp
repnz
mov
idiv
jg
lods
jnp
xchg
push
lret
inc
and
ds
cwtl
stos
iret
xor
push
bound
cs
test
mov
icebp
or
imul
mov
out
daa
loop
adc
pop
fdivrs
push
mov
mov
bound
popf
movsb
test
mov
jl
add
push
ja
xchg
mov
jl
stc
xor
pushf
and
push
inc
hlt
push
xchg
scas
js
mov
hlt
mov
jae
adc
test
aad
dec
mov
adc
mov
das
aaa
xchg
insl
imul
call
cli
enter
push
movsb
aam
or
fidivrs
lods
dec
sub
mov
cmpb
test
jmp
cmp
pop
in
data16
call
jge
mov
dec
mov
push
push
sbb
aas
mov
les
push
jo
in
sub
stc
push
pusha
daa
out
incl
and
aas
mov
jo
stos
nop
jb
je
push
test
fsubs
and
iret
sbb
or
mov
test
cmp
push
push
lret
jg
adc
mov
adc
je
hlt
decl
aam
cmpsl
sbb
xor
xchg
mov
xlat
add
push
inc
adc
jp
or
cmp
scas
stc
push
fstps
std
jnp
fisubrs
loope
cmpb
mov
jg
xchg
fcmovnu
or
sbb
jo
push
loopne
or
aaa
cwtl
ja
fmull
in
or
inc
or
movsb
movsb
or
mov
mov
cmp
and
cltd
push
and
or
enter
jo
std
pushf
ja
sbb
push
mov
sarb
enter
xchg
push
outsl
pop
mov
addr16
pop
dec
inc
jge
push
or
out
rorl
mov
roll
test
pop
xor
pop
int3
nop
cmp
addr16
dec
arpl
out
push
adc
mov
jecxz
test
hlt
cmc
dec
add
adc
shrl
add
out
arpl
lea
rcrb
or
inc
sbbl
loope
add
js
pushf
mov
cltd
cmp
xchg
ss
imul
imul
jno
scas
out
push
addr16
std
cmp
mov
out
and
mov
jno
sbb
decl
scas
xor
imul
rcll
pop
arpl
pop
dec
cmp
outsl
lds
sub
pop
mov
jmp
or
loope
xlat
mov
jp
sbb
iret
cltd
imul
lahf
arpl
xchg
pop
adc
ss
xchg
dec
repnz
mov
mov
add
cmp
add
mov
mov
adc
jecxz
pop
dec
sbb
std
cmp
leave
inc
jp
and
jb
mov
inc
fsubr
or
aaa
sbb
adcb
xchg
ret
mov
fdivrp
jg
data16
stc
jp
repnz
je
mov
in
xor
mov
mov
cmp
in
js
xchg
pusha
xor
ja
pop
out
pop
xchg
andl
mov
insb
sahf
stc
ret
or
mov
xchg
push
ret
or
xor
aad
jp
dec
adc
andb
dec
add
std
dec
jbe
les
outsl
add
mov
push
inc
mov
fcoms
dec
in
nop
pushf
cmp
or
jnp
or
mov
push
xorl
insb
lahf
add
mov
dec
push
in
lock
out
sbb
in
lret
pop
cli
in
add
mov
popf
adc
sub
jecxz
js
adc
add
or
and
out
addr16
dec
popa
insb
inc
shll
out
insl
call
movb
and
add
push
pop
cmpsb
dec
test
lcall
lea
cmpsb
stos
bound
mov
orb
sbb
out
outsb
inc
sbb
dec
mov
pop
pop
jnp
nop
sbb
fs
xorb
lds
jne
ds
or
fstpl
das
cmc
rorb
and
sub
cmp
mov
fidivs
aam
mov
jbe
dec
push
inc
jnp
and
sub
push
aad
xchg
mov
sbb
aaa
xchg
mov
ret
mov
jl
shl
pop
loope
stos
pop
jle
inc
rorb
xor
add
orb
bound
arpl
hlt
ret
lock
lock
and
dec
cmpsb
clc
jnp
or
add
sbb
and
bound
cmp
fnstsw
adc
int
xor
mov
cmp
lock
out
pop
into
mov
cs
adcl
mov
adc
sti
in
push
insl
cmp
cmp
mov
lods
cmp
out
lcall
and
in
fs
inc
int3
push
nop
pop
push
rclb
movsl
lods
jge
cmp
outsb
jne
sub
test
push
jmp
push
in
sbb
enter
std
gs
dec
cmp
sbb
mov
sbb
sbb
cwtl
insl
mov
das
dec
fistpl
xchg
shl
jae
inc
int
mov
pop
jo
incb
test
pop
add
cs
sbb
aad
rcrb
sub
mov
orl
or
clc
popf
movsl
lea
fcmovnu
and
rolb
adc
aad
inc
mov
faddl
xchg
inc
pop
mov
or
fxch
sub
in
push
mov
mov
push
sub
xchg
mov
test
sub
or
mov
bound
push
push
add
lcall
mov
sub
pop
push
mov
cmpsl
mov
int3
sub
dec
push
test
int
aas
lret
dec
fs
aas
lea
fdivr
das
push
jge
mov
push
or
jno
mov
or
push
and
mov
movsw
or
hlt
in
aas
push
pop
pop
test
mov
xlat
mov
daa
and
out
push
cmp
pop
cltd
sbb
ljmp
int
pushf
mov
aad
insl
or
cmpsl
jle
mov
repz
sbb
jge
out
xchg
dec
sub
push
lods
adc
pop
cmp
gs
fs
dec
test
mov
xlat
sub
or
push
adc
stc
movsb
dec
in
pop
in
test
add
cmp
pop
stos
push
fs
je
push
movsl
int
and
mov
xchg
aad
loop,pn
mov
and
ja
stos
jle
push
sbb
lea
es
adc
fimull
push
add
push
sbb
jmp
xor
in
test
adc
es
aaa
mov
xchg
jp
cmp
cmp
das
clc
mov
jbe
sub
out
mov
in
hlt
mov
popa
leave
out
dec
ja
outsb
lea
mov
fwait
iret
aas
dec
jo
jg
push
mov
dec
lods
js
imul
sbb
data16
cli
jl
dec
addr16
es
xchg
aas
das
pop
js
jmp
xchg
adc
jno
jle
cmpb
mov
push
mov
xchg
test
inc
je
jbe
add
xlat
fs
sub
jg
jg
loop
inc
ret
test
mov
aam
scas
or
lcall
lahf
adcl
inc
inc
mov
mov
jl
push
push
adc
sbb
jl
cltd
enter
fisttpl
mov
sub
inc
jne
xchg
sbb
xchg
and
push
inc
push
add
aam
xchg
mov
pop
aam
adc
dec
xchg
lds
rolb
jno
add
pop
cmpsb
test
push
movsl
shrb
push
sub
adc
and
mov
xor
cmc
xchg
push
xor
pop
mov
jnp
sbbl
test
or
fwait
xchg
clc
scas
xchg
mov
adc
pop
cs
xchg
fstpl
imul
cmp
jge
jno
cmp
cmpsl
sarb
shrl
shrb
gs
aad
movsb
movsb
pop
pop
xchg
cmp
pop
mov
pop
inc
sbb
dec
lea
addr16
jg
cmp
pop
cwtl
add
mov
mov
adc
adcb
cli
fldcw
clc
into
out
jg
xchg
xchg
jnp
jb
out
fsub
add
xchg
insl
jle
xlat
mov
pop
mov
cmp
rcrb
pop
mov
pop
shlb
and
popf
idiv
or
xchg
pop
and
cmovns
cmp
pop
push
sbb
cld
scas
inc
shll
mov
fidivrl
cmp
dec
in
xor
cmp
insl
cmpsb
adc
inc
mov
jb
adc
out
out
jo
fs
js
push
mov
jl
cmc
lea
or
pop
in
fisubrs
leave
push
cmp
and
jae
cs
sub
jl
xchg
mov
xor
mov
cmp
lods
cmc
les
dec
dec
pop
xchg
loopne
cld
and
pop
pop
ret
dec
stc
out
or
outsb
and
pusha
xor
xor
aad
addr16
repnz
mov
mov
lret
lcall
jge
sti
mov
cltd
push
call
adc
jmp
aad
les
pop
ds
sti
popf
into
jecxz
aam
mov
mov
jl
push
xchg
loopne
sub
loope
and
inc
jo
fbld
loopne
or
lahf
lret
adc
jbe
or
cmpsb
jae
fnstenv
sbb
jo
insl
scas
mov
push
cltd
sub
pop
out
mov
out
cwtl
or
xchg
xchg
roll
push
sub
jo
andb
mov
js
jns
mov
sub
lret
incl
pop
jne
inc
bnd
pop
mov
ret
sbb
and
add
add
lds
xchg
and
gs
inc
ret
cwtl
adc
pop
hlt
sbb
xlat
sahf
stos
xlat
or
stos
pop
xchg
fsubrl
mov
rcrb
stc
adc
add
mov
addr16
or
xchg
xchg
fucom
loop
ljmp
jmp
mov
aas
es
das
dec
out
mov
push
and
pop
xchg
fisttpl
aam
cmp
call
les
loopne
mov
cmp
xchg
rclb
pop
mov
in
dec
addr16
rcll
dec
lret
out
rol
gs
lock
add
xor
adc
aaa
inc
or
dec
fcompl
and
fwait
adc
rcrl
or
dec
xchg
mov
pop
lret
inc
dec
stos
mov
outsb
movsb
xor
notl
pop
sub
mov
es
cmc
dec
lea
cld
mov
sbb
xchg
loopne
iret
fistl
cwtl
push
lods
psrld
cltd
push
jbe
inc
sahf
cltd
lods
mov
and
mov
sti
push
pop
sub
push
gs
pop
ret
push
mov
lcall
int
jp
jbe
pop
addr16
push
cmp
mov
mov
mov
das
push
sahf
out
lods
push
and
cmc
lret
push
and
sub
cmc
lahf
insl
imul
inc
fs
repnz
pop
sub
push
jl
mov
lcall
mov
sbb
ljmp
rcr
xchg
dec
test
mov
push
cltd
mov
clc
sbb
or
dec
cwtl
cmp
stos
mov
add
aaa
in
xorb
out
xor
jno
push
int3
push
popf
scas
mov
scas
mov
or
mov
xchg
mov
and
test
adc
push
fidivl
inc
add
mov
lods
adc
jge
jl
stos
mov
push
iret
iret
daa
enter
rclb
xchg
fmuls
lret
cmp
sbb
das
adc
loope
adc
mov
cmp
jge
xor
fwait
mov
adc
lods
mov
leave
inc
loope
adc
inc
add
cmp
sub
lcall
test
mov
int3
incl
cmp
pop
int3
mov
sti
add
fisttps
sbb
pop
ffreep
imul
lea
out
stc
nop
testl
clc
ljmp
add
in
add
pushf
enter
pop
sti
clc
xor
fcoms
int3
stos
sti
ljmp
aaa
movb
ljmp
pop
mov
fs
xor
mov
repnz
mov
filds
inc
mov
loopne
insb
sub
sub
inc
out
push
lahf
xor
adc
clc
jae
fbld
and
sub
int3
cmpsl
jns
xor
bound
lea
adc
mov
and
sub
cld
sub
cmp
mov
xchg
shl
sub
ficompl
xchg
inc
into
imul
lret
xor
in
aam
repz
enter
iret
inc
inc
xchg
xchg
lcall
xchg
sub
adcb
add
cmp
in
fildl
lcall
or
dec
aam
inc
inc
or
mov
stc
sub
cld
jge
sti
leave
loop
aas
inc
roll
pop
idivl
add
push
xor
jnp
cmpsl
enter
loope
push
xchg
ja
cli
into
jb
xchg
mov
pushf
clc
roll
mov
pop
movsl
mov
lret
lock
je
mov
cltd
ljmp
jno
pop
aam
mov
cli
xchg
push
or
insb
lret
repz
cmc
dec
mov
or
rorl
mov
into
es
add
repz
xchg
push
test
enter
repnz
lock
call
and
mov
pop
and
sar
aad
in
testl
cmp
adc
ljmp
popf
push
jl
mov
mov
xchg
popa
pop
lods
int3
addr16
or
in
xor
mov
or
test
jecxz
add
enter
mov
add
dec
call
out
push
and
lcall
inc
or
sbb
xchg
inc
inc
lret
add
cld
icebp
dec
add
pop
jg
push
mov
xchg
pop
aam
mov
rep
and
je
imul
mov
aam
outsl
cmp
or
jb
and
xor
mov
jo
mov
xchg
aam
std
andb
scas
cli
imul
out
shl
and
adc
push
pop
cmp
push
push
in
fs
jge
mov
pop
aaa
add
aam
shlb
dec
xchg
repz
dec
out
fnsave
lods
inc
int3
icebp
sbb
fwait
cld
mov
cltd
push
inc
or
mov
push
and
inc
dec
dec
cld
add
mov
mov
mov
push
adc
or
xchg
lahf
or
push
insb
xor
push
daa
orb
imul
aad
sbb
xchg
inc
outsl
jg
and
cltd
adcb
mov
pop
bound
mov
lock
xor
sbb
xchg
negb
and
pop
add
or
inc
scas
fdivl
fdivrs
repz
shl
out
fiaddl
cli
inc
nop
out
add
pushf
test
pop
repz
rcll
jno
pop
test
out
push
push
ror
insb
movsl
ds
and
xchg
insb
sbb
cmpsl
iret
jo
lret
and
or
mov
ljmp
orl
insl
dec
in
in
fsubrp
outsb
or
movsb
adc
and
les
pusha
sbb
shlb
xchg
movsl
mov
cmp
scas
xchg
xlat
dec
stos
xchg
test
jl
mov
pop
sub
mov
test
adc
xchg
xchg
adc
lods
pop
arpl
xchg
andb
lret
inc
lcall
mov
dec
mov
sub
jmp
out
rcll
jno
mov
in
dec
dec
in
or
cmpsl
popf
ficomps
mov
cld
loopne
sub
or
adc
cs
popa
xchg
pushl
mov
mov
push
mov
cld
mov
add
subb
dec
inc
repz
cmpsl
out
push
mov
lret
jl
je
xchg
out
jb
jae
hlt
mov
lcall
addb
jge
call
jg
ss
addr16
hlt
adc
lret
sbb
mov
push
daa
insb
ja
icebp
or
je
popf
xchg
loop
xor
xor
xor
pop
stc
js
sub
mov
and
cmc
xlat
mov
push
mov
xchg
pop
sarl
add
popf
cmpsb
or
pop
jp
adc
jae
imul
pop
ret
sbb
iret
jns
sbb
mov
mov
mov
in
xchg
pop
sub
icebp
insb
sub
ret
pop
mov
xorb
les
lcall
mov
gs
cmp
lahf
ja
push
mov
lcall
cmovp
stc
out
nop
aad
xorl
pop
sbb
sub
push
insl
clc
icebp
or
into
outsl
xchg
ror
pop
imul
mov
ljmp
ret
mov
push
xchg
cmp
xchg
and
dec
mov
mov
lcall
shll
int
jecxz
push
fldln2
inc
mov
xchg
mov
cwtl
or
pop
xchg
movsl
jp
mov
aam
popa
ss
inc
repnz
cs
hlt
pop
or
push
mov
mov
push
jne
outsl
mov
cld
xchg
adc
cltd
pop
jbe
and
cmp
nop
addr16
adc
out
xor
jmp
cmpsl
popf
popa
aad
fwait
js
and
xor
add
adc
mov
mov
aam
jbe
cs
sahf
cltd
arpl
cmpsl
scas
lods
inc
movsl
dec
clc
push
das
xor
jge
test
or
ja
sub
mov
loope
popf
dec
or
cmc
xor
in
das
push
add
push
inc
and
test
bound
sarb
add
dec
ljmp
int3
fwait
les
notl
insl
cmpsl
mov
jbe
jns
loop
test
adc
and
out
cs
mov
pop
int3
sub
mov
out
mov
mov
ss
jmp
cmpsb
adc
push
lock
sbb
js
xor
mov
cmp
inc
leave
mov
lahf
cmp
sub
test
or
xor
out
mov
ret
add
xor
jecxz
jnp
subl
loope
je
sub
push
scas
mov
fistl
or
test
mov
in
jae
outsb
add
pop
loop
shlb
test
shll
mov
ds
ljmp
aad
dec
mov
mov
jns,pn
adc
sarb
dec
setne
mov
mov
push
sti
cmc
pop
lods
pusha
cmp
pusha
mov
stc
jmp
sub
push
jbe
mov
jg
cmp
jo
jne
push
push
mov
sahf
out
icebp
adc
adc
push
jl
into
daa
cmp
cli
incl
and
push
xchg
addb
in
push
lock
mov
sbb
push
and
in
repnz
sub
subb
in
mov
outsl
cmp
cmp
mov
mov
outsb
lret
xchg
jg
or
sub
pusha
imul
mov
inc
fisttpl
inc
xchg
jbe
and
cltd
mov
jge
xchg
jns
and
jb
fs
sub
cmp
xchg
testl
inc
into
and
pushf
lahf
cmp
lret
out
xor
shl
xor
cwtl
int
ss
xlat
push
out
orb
sub
punpckhbw
ret
rcrl
shlb
pop
mov
sub
inc
xchg
aad
movsb
in
pop
aam
and
rcrb
test
out
leave
inc
cltd
pop
loopne
xor
movsb
dec
sbb
and
inc
dec
test
mov
roll
shlb
mov
mov
imul
dec
cmpl
jp
jb
push
xor
xor
cmp
movsb
in
aas
aas
add
lock
call
push
push
aam
add
out
repnz
pop
and
out
repz
sti
cmpsb
sbb
dec
fstpl
subl
ds
push
fdivp
sub
imul
jle
pop
push
lds
jbe
xchg
mov
lods
jbe
sbb
mov
jno
jo
cwtl
scas
push
cmp
cs
fidivrs
jo
mov
adc
adc
cs
mov
cmpsw
mov
mov
dec
dec
es
inc
cmp
out
mov
add
push
push
xorb
inc
jae
sbb
insl
dec
out
imul
dec
adc
inc
push
xchg
cmp
and
or
test
loop
ja
mov
lret
push
shrl
lock
outsb
mov
push
stos
out
adc
adc
psraw
and
popf
sub
jae
scas
hlt
jae
lret
negb
notl
ds
jns
aas
fmul
pop
push
hlt
rorb
dec
push
les
xor
cwtl
fstp
aad
inc
dec
rclb
sub
rcrb
xchg
test
cmpb
in
adc
jecxz
push
and
stc
arpl
ror
xor
fdivrs
jnp
jge
xor
jp
hlt
sarb
lahf
add
mov
inc
shlb
loop
adc
insb
shlb
mov
push
js
sbb
cs
cmc
iret
adc
mov
std
dec
int3
enter
push
out
mov
sbbb
test
cmp
scas
add
jge
adc
daa
pop
dec
or
addr16
insl
jl
or
movsl
inc
jno
insl
jb,pn
idivb
pop
jns
fidivrs
xchg
lock
ja
in
pop
jbe
mov
sarb
scas
in
pop
adc
imul
stc
nop
popa
lret
fldl
jecxz
inc
fimull
mov
sub
sbb
sbb
pop
dec
stos
daa
leave
mov
push
mov
jbe
jecxz
nop
jae
fcomp
mov
or
sub
pop
xor
mov
ja
shlb
hlt
lcall
push
xchg
and
dec
mov
xchg
out
repnz
mov
addr16
push
add
test
jae
pop
bound
sub
push
jne
cs
rcrl
pop
mov
mov
dec
pop
ds
addr16
scas
repnz
shl
and
out
lret
adc
dec
xchg
jo
inc
movsb
roll
jae
shrl
mov
in
popa
mov
mov
enter
stos
movsl
mov
cmp
mov
cld
cmpsl
mov
push
xchg
mov
into
jo,pt
jle
jb
iret
push
pusha
notb
mov
mov
xor
idivl
lahf
les
out
in
mov
fldcw
jmp
xchg
add
mov
mov
imull
cmpl
inc
mov
out
inc
ja
push
pop
fisubrs
cld
push
sbb
cwtl
mov
int3
or
fcmovnb
mov
pop
adc
fimull
inc
xchg
dec
jp
rclb
jge
lods
adc
xlat
out
roll
addr16
cmp
xchg
pop
ds
mov
jo
dec
icebp
jp
jno
les
lahf
jp
push
rorb
stos
xor
add
popa
mov
jne
inc
rep
mov
out
sub
test
and
sub
lds
push
cli
pop
aam
outsl
mov
cmpsb
lods
ja
adc
jne
imulb
in
out
sub
pushf
jo
roll
xor
sbb
adc
sub
in
daa
cmc
add
jb
inc
jno
jno
les
push
mov
push
add
in
stos
out
push
loopne
mov
cmp
cmpsl
rcll
insb
sub
mov
inc
or
mov
cmp
int3
lods
mov
jge
adc
jae
jmp
mov
push
out
dec
sub
and
lods
pusha
mul
and
mov
rcrl
jnp
shrl
cli
dec
jbe
xor
das
mov
or
inc
lea
xchg
xlat
addb
in
insl
lds
adc
dec
cmp
push
and
cmpb
inc
adc
stc
ficomps
mov
or
xchg
outsl
jb
sub
xor
xor
xor
fwait
sub
jb
fstpl
cmp
outsl
div
out
push
imul
in
push
push
fcoml
out
mov
inc
shll
gs
mov
jge
inc
sahf
pop
jg
xchg
xchg
jne
fdivl
cmc
lret
push
in
pop
insl
push
xor
push
mov
aad
lret
sub
mov
or
pop
inc
dec
sbb
push
mov
test
addr16
cld
das
and
add
movl
movsb
jmp
xchg
push
jge
adc
shll
pusha
add
pushf
mov
mov
arpl
fnstsw
xchg
sbb
jl
cmp
sub
in
or
mov
fbld
xor
sbb
dec
xchg
mov
pop
daa
test
push
pusha
jae
cwtl
sbb
push
cmp
xor
data16
es
ret
xchg
aaa
push
and
es
push
mov
stos
adc
das
inc
mov
cmc
fstl
push
pop
adcb
in
leave
cmp
mov
into
dec
cmp
push
iret
inc
pusha
add
xor
movsl
fstps
xchg
lret
setb
popf
or
dec
nop
mov
inc
repz
fsubrs
mov
lcall
xor
out
loop
rclb
push
xor
icebp
call
cmp
pop
and
jns
nop
or
into
add
test
iret
insl
js
jl
repz
roll
rclb
ret
je
test
or
lods
sub
sub
in
fsub
push
fsts
in
mov
mov
movsb
sahf
push
mov
testb
cmp
into
out
pop
andl
repnz
mov
ja
fisubrs
enter
imul
clc
xor
mov
mov
and
aas
push
mov
cmpl
lds
int
in
fwait
repz
add
push
push
jp
stc
pop
cltd
inc
fnsave
mov
jo
cmpl
jle
lret
mov
outsb
mov
cli
sub
mull
and
cld
and
cmpsl
addr16
dec
shlb
ljmp
idivl
pop
ficoml
mov
cmp
movsl
cli
sbb
call
aad
pop
inc
add
inc
inc
pop
icebp
jne
jle
pop
or
in
das
xchg
loop
sbb
and
add
xchg
inc
jl
jne
shll
dec
decb
movsb
fsubrs
cwtd
jno
xchg
dec
push
scas
cli
sub
ret
xorb
rcr
std
pop
pop
push
rorl
imul
jmp
iret
iret
push
popl
ds
mov
hlt
outsl
icebp
sub
xchg
jle
out
lcall
out
mov
stc
into
adc
xor
pop
add
xchg
push
jle
push
fdivp
cmp
sub
lds
shr
xchg
dec
fbstp
int3
iret
inc
mov
xchg
je
in
mov
sbb
cmpsb
sub
punpckhdq
dec
test
in
jne
adc
jb
sub
mov
mov
sarb
sub
jne
jno
nop
js
and
jns
sbb
mov
xor
outsl
int3
mov
cmp
popf
lret
cmp
mov
insl
add
add
jne
mov
cmp
adc
leave
lret
cmp
inc
mov
xor
frstor
imul
xchg
fwait
cmpsb
push
loope
and
out
frstor
mov
mov
js
mov
mov
mov
mov
adc
xchg
jmp
je
or
fstpt
jmp
lea
imul
jl
and
rdmsr
scas
mov
add
inc
jns
hlt
in
jb
lahf
push
or
mov
lcall
adc
pop
call
popa
add
adc
or
ss
les
sbb
icebp
cmp
and
jp
les
xor
mov
mov
shll
or
xor
pop
int
sbb
cmp
add
out
add
pop
addr16
std
je
int3
mov
xor
xchg
imul
test
mov
ret
xor
fcomi
fnstenv
and
inc
pop
mov
movb
loope
mov
xor
xchg
call
adc
pushf
mov
jge
mov
sub
int3
mov
out
jbe
cmp
dec
mov
enter
mov
insl
fnstenv
and
or
out
jbe
arpl
mov
in
sbb
jecxz
shlb
sbb
fwait
int3
stos
mov
sahf
sti
cmp
inc
ljmp
stos
mov
jns
stos
jmp
stc
clc
sbb
inc
aaa
fsubrl
cmp
or
pop
add
jmp
xor
inc
mov
mov
in
xor
aam
cmpb
push
sbb
and
jbe
or
dec
add
fsubrp
pop
mov
lcall
inc
in
push
test
sub
cmp
imul
mov
mov
mov
ret
or
push
popf
pop
mov
iret
add
test
xor
mov
pop
inc
sarl
pushf
mov
push
sub
call
sbb
enter
mov
sub
rol
or
mull
inc
push
inc
xchg
mov
jmp
andb
fwait
inc
pop
sub
test
lahf
sub
sub
addr16
sbb
add
addr16
outsb
imul
insl
sub
lea
sbb
or
dec
adc
push
subl
xchg
loopne
cmp
adc
jns
std
ljmp
xchg
xor
mov
shll
add
ret
test
and
inc
dec
adc
dec
out
jb
mov
add
nop
test
pop
in
adc
and
push
test
push
movsl
out
or
aad
dec
cmpb
cld
aas
pop
aad
sub
pop
xchg
push
ss
sub
repz
pusha
inc
xor
xor
jecxz,pt
adc
pusha
add
aam
sub
mov
xchg
push
mov
mov
xchg
imul
dec
out
popa
lahf
add
into
cwtl
inc
fdivl
lods
xor
scas
movsl
jl
test
adc
ret
cs
pushf
je
mov
mov
jo
leave
ret
test
mov
lods
xor
fildl
push
dec
push
inc
rclb
movsl
lods
cs
cmp
mov
mov
xlat
int3
xchg
push
repz
lahf
hlt
mov
or
scas
test
sub
pop
leave
pop
xchg
mov
push
loopne
push
mov
mov
sub
lahf
test
data16
sbb
inc
pop
adc
negl
mov
inc
daa
data16
xchg
aas
or
push
sbbl
fs
and
mov
or
sarl
push
sbb
addr16
or
lret
push
xchg
imul
jge
jno
mov
cmp
push
sub
sub
mov
cwtl
call
fimuls
pop
ljmp
and
data16
shrb
add
jo
repnz
sahf
jecxz
push
cmp
shlb
rclb
jb
or
cmp
sarl
mov
lods
add
icebp
test
dec
inc
dec
cmpsb
movsb
sbb
xchg
and
pop
mov
movsl
roll
sub
lea
cs
push
outsb
inc
hlt
imul
xor
stos
xchg
ret
cmp
inc
mov
pop
mov
daa
jmp
divl
lods
mov
lock
idivl
add
mov
sbb
mov
std
dec
mov
arpl
jnp
adc
and
sbb
cmpsl
dec
cmp
push
lea
dec
push
insb
fildll
cmp
dec
popf
lcall
cmp
fdivs
or
cld
push
clc
ret
adc
sarl
pop
mov
push
std
sar
inc
mov
mov
aaa
jp
popf
loope
mov
dec
and
fwait
pause
pop
xor
in
cmp
xchg
xor
add
int
test
repz
mov
je
push
mov
adc
mov
cmc
sarb
hlt
sbb
ja
lcall
ds
and
loopne
lods
cmc
jbe
cmc
fistpll
les
outsl
mov
xor
pop
xchg
cmp
fstl
mov
xor
imul
clc
push
cli
repnz
aad
pop
add
sbb
fisttpll
pop
mov
mov
test
or
mov
xor
xchg
enter
mov
xchg
lret
jge
imul
addr16
xor
dec
push
push
pop
inc
subb
stos
mov
mov
push
inc
fpatan
aas
outsl
mov
xor
dec
xor
add
imul
inc
jne
add
mov
add
and
scas
ljmp
outsb
jp
bound
cmc
xchg
pop
gs
sub
test
ja
popa
dec
add
cltd
mov
xorb
rorl
adcb
test
and
xchg
shr
xchg
nop
push
outsl
in
mov
ror
jo
cwtl
push
jo
xchg
and
xor
mov
incb
xchg
ss
push
ret
jno
mov
push
int3
addr16
inc
jp
add
pop
iret
cmp
mov
xor
adc
orb
sahf
xor
iret
push
lret
shll
inc
jb
xchg
inc
in
dec
test
andl
movb
test
jae
outsb
nop
pop
dec
sbb
leave
sti
xlat
ret
push
fld
loope
aam
inc
je
jecxz
cmp
fwait
push
movsl
sub
jl
pusha
pop
add
mov
call
fisttps
jp
lahf
jno
inc
pushf
mov
adc
mov
mov
jl
in
sub
mov
sbbl
dec
xor
aam
pop
or
lret
std
push
cmp
cmp
xchg
es
loop
lods
lds
and
dec
mov
sub
add
and
lret
mov
mov
shll
mov
xor
in
sub
push
loopne
cmpsb
imul
dec
mov
out
divb
clc
xchg
out
and
fldz
rcrl
mov
sbb
movsl
lock
xchg
imul
xor
or
movsl
jecxz
adc
out
loope
fldenv
sub
and
rorl
test
jp
xchg
mov
lret
cmp
aad
jge
lods
fstps
jg
popf
push
jecxz
out
inc
stos
xchg
stos
mov
push
push
pop
cli
and
push
mov
js
and
int
mov
mov
fcoms
mov
and
imul
and
adc
and
mov
pop
mov
dec
sahf
mov
fdiv
or
jl
icebp
mov
lock
mov
lcall
lret
mov
mov
pop
fcompl
aaa
addb
cmp
push
loop
enter
dec
cs
sbb
jp
or
mov
sbb
xchg
cmpsb
mov
mov
xchg
adc
dec
xchg
adc
push
adc
ret
inc
xchg
vmread
xorb
leave
mov
jae
in
adc
push
cmpsl
add
out
jns
xchg
adcl
jo
sbb
fldln2
and
jge
iret
and
jle
or
pop
adc
lock
dec
cmp
or
sbbl
cli
outsb
push
jmp
lea
popf
mov
lret
dec
dec
pop
add
mov
repz
or
test
mov
je
mov
loop
inc
pop
push
jns
xlat
cmp
out
push
jp
cmp
sarl
ret
pop
arpl
inc
mov
popf
adc
add
outsl
bound
scas
jmp
lret
mov
cmpsb
test
aam
and
sarl
movsb
fwait
cmp
dec
lods
pop
test
push
cwtl
and
fwait
inc
in
dec
jge
mov
jp
push
fisubs
pop
push
push
inc
fwait
dec
adcl
in
inc
call
and
scas
xor
test
fiadds
imul
or
xlat
adc
shr
xchg
sbb
incl
roll
xor
shl
fsts
mov
das
adc
clc
cmp
call
mov
fdivrp
sbb
cmp
ret
out
enter
jle
insb
jg
pop
cli
inc
xor
mov
je
enter
lock
sbb
sti
dec
mov
jae
adc
jae
fstps
cmpsb
fiaddl
lret
mov
jl
xor
xchg
add
insl
stos
cmpsb
icebp
loop
add
imul
sub
rorb
in
or
jp
insl
fstl
adc
add
gs
loopne
pop
pop
push
add
pop
gs
repnz
insb
ss
scas
ret
xchg
or
sbb
adc
sbbl
dec
xor
roll
sub
mov
rcl
fisttpl
push
mov
sbb
int
push
cld
xor
add
mov
xchg
fildll
cmp
mov
inc
jae
adc
sti
xor
fs
cmc
test
test
insl
add
stc
mov
lret
dec
add
fmull
push
jl
outsb
test
mov
rcll
pop
fcoml
and
adc
sbb
fidivl
aaa
aam
mov
insb
aad
mov
mov
and
mov
pop
enter
enter
jns
out
sahf
inc
scas
jae
movsb
aam
fstpt
dec
cwtl
hlt
pop
pop
pop
jle
xor
stos
cmpl
shll
lret
add
inc
jae
sbb
jle
rorb
push
test
pop
and
and
jecxz
and
dec
push
mov
xlat
push
jge
dec
test
sub
rclb
je
or
in
mov
sar
int
outsb
add
push
jns
pop
inc
rclb
insb
gs
pop
and
pop
xchg
sub
test
pop
addb
cwtl
mov
lret
mov
xor
enter
adc
das
fs
sub
mov
or
stos
jge
jmp
push
xor
cmp
jno
js
push
inc
repnz
push
add
and
inc
outsb
mov
shll
sub
sub
out
push
bound
lret
flds
mov
mov
mov
dec
jns
mov
outsl
pop
popf
stos
pop
mov
push
or
mov
lcall
scas
das
sbb
addr16
loop
loopne
out
cmp
mov
mov
aaa
sbb
loope
gs
inc
bound
cltd
or
out
pop
cmp
rcrb
jbe
jecxz
andb
cld
sbb
outsb
imul
or
ss
jmp
lods
cmp
sbb
movsl
inc
sub
popl
lods
pusha
pop
les
scas
pop
mov
xchg
add
sub
lcall
mov
in
insl
xor
sahf
movsb
jb
inc
sbbb
jl
xor
xchg
add
cmp
xor
pop
xchg
xchg
ljmp
xor
stos
push
jns
and
and
fstpl
daa
mov
cmpl
insb
sbb
and
mov
jmp
xor
enter
push
lcall
jle
or
inc
imul
lock
push
sbb
jle
loopne
sbb
iret
add
jp
inc
inc
jbe
icebp
inc
orl
or
xchg
insl
push
ss
sub
pop
pop
mov
adc
lret
adc
xor
mov
mov
and
orl
mov
popa
sub
stc
sbb
sub
cmpsb
imul
stos
push
mov
sub
push
mov
enter
inc
das
inc
aam
ljmp
xchg
inc
ds
or
cmp
stos
test
cmp
loope
lahf
repz
xchg
jnp
out
ror
ds
jmp
lret
fisubs
adcl
mov
jnp
dec
xlat
pop
or
cli
fistps
xchg
push
xchg
xchg
test
and
ret
sbb
insl
mov
in
xchg
push
mov
sub
clc
hlt
dec
pop
pop
out
mov
mov
int3
adc
xchg
add
cmp
inc
push
pop
aas
jp
ret
jl
fimull
fcompl
cmc
and
ss
sub
or
sbb
test
xchg
jb
inc
jl
lret
es
pop
xchg
cld
cmpsb
jg
mov
sarl
or
sbb
scas
add
dec
jl
push
sbb
movsl
ljmp
cmc
ss
fiaddl
fdivs
and
fistpll
cs
jge
mov
push
push
push
loop
aas
stc
push
shrl
jg
push
lock
enter
mov
add
cmp
cmp
nop
inc
loopne
or
imul
fwait
adc
ret
ja
test
jb
mov
xchg
loopne
fldenv
jno
rorb
es
enter
cld
ss
dec
jae
sbbb
mov
je
fiaddl
insb
ret
mov
add
mov
cmp
or
push
lods
add
adcb
dec
jae
stos
mov
test
xchg
lahf
arpl
cmp
mov
add
inc
or
js
push
mov
xchg
rcl
mov
push
sub
push
sbb
mov
sbb
es
pop
imul
lock
fsubl
add
in
test
and
fstl
mov
adc
push
shl
push
daa
stos
xor
shl
adc
pushf
les
imul
shrb
mov
mov
inc
dec
push
and
xchg
into
shrl
xor
push
test
cld
adc
in
push
xchg
xchg
push
repnz
xchg
sbb
push
sbb
push
stc
or
mov
cmp
loop
out
ficoms
in
aad
rclb
es
es
lea
pop
movsl
inc
iret
fwait
mov
sbb
movsb
mov
adc
ja
sti
fcomps
pop
mov
aas
mov
add
pop
sbb
add
sbb
aad
in
add
pop
stos
adc
insb
stos
sub
mov
jno
mov
mov
cmp
out
or
push
imul
iret
sub
xor
jo
ss
pop
adc
lods
inc
push
rclb
pop
out
inc
sbb
aad
add
pop
addl
insb
ret
push
aaa
adc
into
mov
aam
or
mov
hlt
and
lods
fdivrp
xchg
pop
inc
in
neg
int
sahf
nop
xlat
ss
movsl
pop
pusha
orb
jo
xor
shrb
out
xor
dec
subl
xor
sub
cmp
inc
mov
and
into
inc
ret
lds
ljmp
adc
roll
imul
out
loop
aas
mov
sahf
pop
movsl
ret
inc
cmp
jge
mov
rorb
shl
xchg
cld
loope
scas
inc
xchg
rolb
dec
jmp
iret
lahf
mov
sbb
inc
and
push
test
sar
pop
cmp
fwait
push
push
imull
and
push
jg
adc
mov
shrb
jge
cmpsl
jp
jb
mov
dec
in
test
lcall
inc
xchg
daa
data16
ror
mov
cmp
movsb
inc
xor
jge
or
push
outsl
pop
cmc
sub
ja
mov
xor
cmpsb
mov
push
ss
cld
in
orl
sbb
aaa
push
mov
outsb
imul
pop
jae
xor
out
cwtl
lock
inc
jle
shr
jnp
inc
xor
xor
xchg
push
fidivrs
mov
jbe
clc
xor
js
mov
add
dec
out
stc
sub
adc
sub
adc
cli
nop
jae
fimuls
outsl
pop
xchg
sbb
mov
arpl
jno
or
and
or
lret
cwtl
dec
nop
mov
add
lock
scas
into
push
jg
lods
sbb
repnz
sbb
lret
or
sbb
xchg
and
sarl
mov
xchg
xor
js
jmp
daa
pushf
or
jo
mov
pop
adc
sbb
je
test
int
sahf
lahf
mov
cmp
cmp
je
repz
sub
dec
fwait
pusha
push
inc
scas
rclb
sbb
jne
data16
int
xchg
mov
bound
fstl
dec
xor
sbb
andl
cmp
sbb
pop
pop
stos
test
cmp
push
sub
adc
cmp
scas
ret
das
inc
arpl
dec
sub
sbbl
fldl
add
aad
mov
cmc
push
adc
js
sbb
ror
xchg
bound
dec
arpl
leave
xor
cmp
pop
add
dec
int3
rcrb
push
cmpsl
pop
stc
mov
arpl
cmp
and
addr16
jg
cltd
mov
fdivl
pop
push
loop
fsubp
insl
dec
mov
fbld
xchg
and
adcl
mov
sbb
adc
roll
fmulp
mov
mov
pop
fistl
pop
add
loopne
pusha
xor
pop
jo
cmp
shrb
jnp
js
mov
pop
pop
mov
dec
mov
xor
loopne
mov
xchg
jno
dec
sbb
cwtl
imul
cmp
aad
adc
mov
imul
iret
mov
sub
mov
ljmp
scas
rclb
xchg
push
sub
jmp
dec
add
add
sub
pushf
mov
xchg
sub
dec
in
fwait
pop
and
pop
and
mov
outsb
and
sub
add
push
hlt
or
scas
cmp
dec
clc
test
mov
ss
sub
adc
into
cmp
sbb
adc
hlt
loopne
pop
mov
xchg
out
gs
mov
lret
pusha
and
cltd
int3
push
jle
nop
fmul
or
mov
sub
roll
out
inc
andb
pop
fs
sti
mov
ss
jns
repnz
inc
jbe
cmp
cmp
and
and
jmp
fistpl
push
bound
shrl
mov
aas
mov
xor
leave
mov
mov
push
pop
sub
jle
mov
or
push
mov
mov
dec
mov
icebp
sarb
jge
js
lahf
pop
jmp
nop
push
test
int3
lret
jno
push
rclb
mov
mov
daa
adc
inc
sti
std
test
adc
outsb
cmp
out
mov
mov
ljmp
in
jae
test
es
jb
mov
ds
icebp
mov
iret
jp
sbb
or
pop
cmpsb
or
scas
and
das
xor
jne
lret
sub
xchg
fldt
mov
jnp
leave
mov
stos
sub
adc
xchg
pop
lock
lods
mov
xor
filds
daa
mov
test
jle
jge
outsl
sti
les
ds
shll
gs
js
cmpps
lcall
loop
and
ret
es
add
cmpl
and
outsl
stos
mov
in
movsl
cmp
pusha
sub
lds
bound
xchg
add
dec
xchg
int3
inc
lods
mov
cmc
dec
paddusb
dec
dec
data16
scas
scas
les
jecxz
movsb
add
xor
ret
es
sahf
jb
int
mov
adc
lret
insb
int
mov
or
arpl
push
mov
inc
inc
cltd
or
and
add
xchg
sahf
push
xor
jo
ds
jg
sbb
pop
push
sahf
push
sbb
ds
jp
mov
cmpsl
pop
lods
mov
push
aad
sub
subl
sbb
pusha
call
aam
je
int
stc
rclb
subl
outsb
or
call
push
mov
pop
insb
rcrb
inc
scas
cld
inc
cmpsb
mov
add
es
orl
out
push
adc
mov
call
lock
call
outsl
hlt
arpl
test
jb
sti
stos
into
inc
sbb
mov
das
lods
push
sub
dec
cltd
xchg
jns
xchg
pusha
jne
and
dec
iret
push
add
pop
loope
push
lcall
mov
jmp
sub
xor
int3
jae
test
dec
loop
in
fldcw
or
sub
loopne
jo
int
jbe
or
ds
in
stc
ljmp
push
test
aad
iret
icebp
sub
mov
inc
or
mov
xlat
das
cmp
jae
and
pop
ds
push
rcl
cmpsl
pop
out
push
xor
xor
jle
scas
add
mov
ret
movzbl
sbb
fimuls
movsl
sub
inc
cmpsl
dec
push
int3
in
test
repz
popa
cmc
jge
hlt
aam
cmpsl
mov
cmp
dec
xorl
je
jns
jbe
pushf
mov
mov
ja
and
jnp
add
call
sbb
push
lret
out
cmpsl
xchg
pop
stos
pop
int
lods
pop
lods
stos
mov
inc
outsb
mov
mov
loope
mov
cli
jo
sub
loope
test
push
jns
ret
es
std
push
pop
add
adc
jge
lea
cmp
mov
adc
je
leave
ret
mov
pop
in
xor
out
jle
mov
mov
mov
outsb
adc
bnd
jmp
loope
mov
pop
dec
lods
sub
jg
shrb
sti
sub
mov
lret
popf
cmp
cmp
push
js
xor
sahf
jmp
add
sub
mov
mov
dec
ja
mov
push
xchg
aaa
aaa
inc
call
jle
add
fidivrl
inc
fidivs
cmpsb
mov
ret
fidivl
leave
aas
push
shl
repnz
cltd
mov
and
ds
ss
scas
and
push
ret
stos
push
and
sbb
add
pop
sub
in
jle
enter
inc
jle
sbb
add
cmp
fistps
pushf
lret
sub
mov
jne
dec
repnz
scas
and
add
rcll
jp
out
pop
mov
pop
xor
push
push
jo
das
jp
or
sbb
sub
inc
and
ljmp
mov
mov
cltd
out
sbb
sub
outsb
shll
jge
lahf
add
jo
adc
sahf
fnsave
fstpt
lret
rep
mov
cmpsl
dec
mov
test
dec
int
xlat
enter
pop
jbe
jge
pop
js
mov
or
mov
test
sbb
adc
scas
into
stos
inc
out
cmpsl
xor
call
movsl
xor
jg
xor
add
xchg
popa
sbb
xlat
push
cmpsl
test
xchg
fdiv
movsb
lret
and
fisttpl
fwait
mov
test
cmp
cmp
xchg
in
imul
out
mov
aad
jmp
cmp
bound
fcoml
and
pop
loope,pn
cmpsl
jle
inc
pusha
jo
cld
in
dec
xchg
loop
jp
out
adc
cmp
jo
jae
pop
stc
and
cvtps2pd
jge
jmp
lahf
push
lea
pusha
mov
mov
cmp
lcall
jecxz
lock
inc
fwait
mov
imul
ds
ret
mov
and
pop
sbb
xor
xchg
jae
adc
sbb
mov
push
rclb
pop
addb
scas
push
fcomi
sahf
in
popa
xor
xchg
loop
imul
push
rorl
in
jb
repz
sbb
inc
pop
loopne
hlt
xchg
out
jp
jmp
movsb
mov
adc
jb
inc
cmp
out
xor
adc
fldl
inc
in
sbb
in
inc
sub
popf
fldcw
jmp
and
aam
add
mov
out
outsb
jp
mov
jg
pop
jmp
popf
mov
cmp
fdivrp
mov
je
dec
int3
bound
cltd
xchg
fcompl
xchg
out
mov
dec
in
test
xorb
imul
adc
fldcw
mov
and
lret
adc
jns
cmp
leave
lods
inc
popf
mov
and
inc
sub
sub
or
rcll
cmc
repnz
into
mov
sarb
scas
ljmp
hlt
inc
sub
pop
sbb
pop
jge
sbb
and
mov
stos
pop
sub
or
push
jg
jp
in
mov
and
popa
aaa
pop
push
daa
xchg
jecxz
jp
orb
cmc
mov
add
sub
mov
xor
mov
sub
xchg
or
mov
or
xchg
into
xlat
cmp
xchg
mov
mov
shl
popa
or
push
mov
push
pusha
jecxz
pop
repz
jecxz
mov
mov
or
sbb
movsb
lret
xor
or
jge
stos
in
xor
dec
mov
int
pushf
lds
gs
inc
cmp
xchg
add
mov
mov
push
mov
test
add
loopne
gs
dec
xor
addr16
mov
push
mov
nop
std
mov
jns
dec
popf
stos
adc
sub
pop
or
pop
rolb
mov
pop
popa
jg
test
cmp
jg
jae
cmp
scas
add
mov
dec
push
testb
gs
xchg
jle
xchg
xchg
xchg
cwtl
fsubl
sbb
add
mov
test
add
xchg
inc
jg
gs
cs
dec
mov
leave
out
inc
rclb
adc
std
add
mov
jp
enter
out
loopne
stc
fnstcw
push
or
clc
dec
lock
sbb
fcmovbe
xchg
hlt
imul
lds
cmpsl
and
lret
mov
hlt
push
pop
out
and
and
aad
jl
mov
shlb
loope
and
aaa
pop
enter
jge
ficoms
dec
pusha
push
mov
push
xchg
sub
in
push
lds
mov
out
movsb
ja
mov
enter
fidivrs
cmpb
into
mov
call
int3
or
fistps
and
aam
xor
lahf
pop
mov
cmp
or
add
or
popf
mov
cld
daa
mov
mov
int3
xor
xor
cmp
imul
leave
loop
repz
pop
movsb
inc
push
sbb
sbb
push
test
jbe
cmc
stos
je
movsb
pop
xchg
pop
xorl
ret
stos
lock
cmp
mov
ret
stos
push
push
dec
xor
mov
sbb
iret
pop
adc
sub
cwtl
jb
lret
add
pop
push
xchg
cmp
pop
ret
or
and
push
inc
push
bound
mov
jl
out
int3
ret
xchg
popf
jb
pop
lods
loope
add
add
cmpsb
mov
sub
iret
je
jo
je
mov
decl
mov
gs
push
shl
adc
cs
adc
out
or
jns
aam
das
testb
xchg
sub
cs
pop
xlat
negb
xchg
or
mov
nop
push
push
cmp
cltd
push
jecxz
xor
aas
jns
xlat
xchg
lods
push
sub
fstpt
fsin
iret
fisttps
xchg
push
cmp
jbe
test
insb
lock
xor
sub
cmp
push
mov
mov
mov
mov
insl
scas
iret
cmp
addr16
mov
inc
loop
pop
adc
dec
inc
mov
jne
shlb
xchg
insb
or
fs
outsl
idivl
mov
push
jp
insb
jo
sbb
inc
adc
push
push
mov
imul
popa
data16
or
shll
out
scas
jne
mov
jbe
aam
push
data16
pop
inc
inc
push
leave
cmpsl
rclb
jne
imul
push
popl
aaa
pop
leave
mov
enter
out
and
std
call
inc
mov
cwtl
stos
or
jg
fdivrs
pop
out
sbb
sbb
inc
push
stos
enter
push
mov
addl
inc
push
inc
pop
mov
xor
pop
xchg
fs
in
mov
stos
aaa
xchg
xchg
jne
stc
dec
sub
dec
cmp
mov
jno
mov
add
jl
outsl
sbbb
jb
pop
nop
ror
std
sbb
pushf
xor
subl
andb
xor
jl
xor
jb
mov
pushf
repnz
cmp
add
cmpsl
sub
cmp
jnp
dec
mov
frstor
outsb
jmp
dec
aaa
push
dec
loopne
push
in
loopne
adcb
ljmp
cltd
hlt
data16
mov
loope
in
and
mov
and
adc
push
fwait
inc
mov
imul
pushf
aad
pop
enter
popa
test
inc
pop
lcall
and
cli
rcl
test
movsl
push
les
aam
loopne
in
out
cmp
das
jne
xor
pop
add
and
xor
iret
into
pop
loope
stos
int3
outsl
shrl
fiadds
sub
inc
adc
lahf
mov
jae
xlat
inc
xchg
jns
out
jge
insl
adc
mov
sbbb
add
add
mov
lahf
mov
lock
aaa
add
ljmp
lahf
or
mov
arpl
test
hlt
xor
in
fwait
mov
jecxz
mov
mov
out
or
and
loopne
neg
push
cmpsl
data16
test
push
mov
mov
and
jns
lss
xor
mov
lcall
xchg
push
xchg
inc
dec
lret
int3
inc
movsb
cld
pusha
jns
or
cmp
push
notb
push
pop
push
dec
push
cli
add
loop
push
jo
dec
pushf
pop
or
jnp
lds
jae
pop
int
push
mov
mov
or
les
sarb
mov
fwait
ret
cwtl
and
dec
adc
mov
sub
add
inc
negb
jp
gs
ja
pop
lods
dec
adc
cs
mov
aad
mov
mov
mov
sbb
inc
pushf
xor
xor
xchg
subl
lret
ret
loope
or
or
sub
daa
dec
lock
sbb
xor
ja
mov
sub
in
popa
mov
cmp
pop
and
sti
xor
mov
sbb
push
cmp
push
and
inc
fimull
shlb
adc
or
fs
clc
pop
pop
fs
pop
sub
repnz
sub
in
and
push
les
sbb
fiaddl
mov
mov
xlat
adc
xor
or
cld
push
and
into
or
cmp
lods
cmpl
popf
not
jmp
dec
aad
int
mov
jmp
mov
xor
jl
cmp
into
dec
mov
mov
es
out
rcr
ja
hlt
inc
xchg
pop
movsb
mov
outsb
mov
mov
fdivrl
call
out
dec
shrl
shrb
fidivs
fdivp
push
inc
sahf
ljmp
add
push
pop
jg
mov
pop
inc
xor
bswap
and
xchg
dec
dec
sbb
popa
or
imul
add
mov
in
xchg
and
push
adc
loope
xor
and
inc
sub
imul
xor
mov
mov
dec
add
das
aas
fcoms
xchg
sti
push
dec
cmp
outsl
inc
mov
xor
inc
xchg
out
mov
data16
dec
inc
inc
ficoml
cltd
scas
jnp
in
jnp
mov
leave
imul
inc
add
xchg
rolb
lods
mov
js
dec
addr16
cmc
inc
cld
inc
cltd
stc
stc
mov
lcall
sub
pop
cs
inc
fs
ss
lock
mov
lea
rorl
mov
loopne
push
enter
cs
jg
mov
mov
imul
mov
dec
xor
in
iret
mov
pop
mov
dec
sub
dec
xor
jae
cmp
les
cmpsb
pop
push
popf
rolb
cltd
xchg
xchg
sti
mov
movsb
int
rorl
and
adc
cmp
and
mov
test
xor
cmp
repz
pop
jl
lret
inc
repnz
scas
out
pop
adc
out
and
aad
cmp
adc
int3
xchg
mov
and
sub
inc
fwait
lea
pushl
pusha
lret
push
sub
jp
test
push
out
es
fiaddl
test
ja
cmc
outsl
sub
ss
std
addr16
push
rolb
sbb
and
cmpsb
loope
fadd
mov
sub
xchg
mov
addr16
add
addl
movsb
lods
rol
push
shlb
mov
ret
push
sub
popa
loopne
mov
mov
xor
popf
mov
pop
loopne
jnp
cwtl
sbb
pop
and
xor
push
aas
sbb
pcmpgtd
rclb
inc
cmc
and
jl
jle
insb
pushf
outsb
mov
xor
sub
fwait
pop
ljmp
or
mov
add
pop
dec
inc
xchg
js
push
and
or
sub
popa
or
into
jne
xchg
dec
mov
cli
jne
mov
xchg
repnz
xchg
push
pop
je
add
jmp
pop
mov
aaa
loopne
repz
add
arpl
sbb
push
dec
dec
cmp
arpl
faddl
dec
jne
or
inc
mov
pop
pop
fcmovne
js
sti
rcrl
cmp
dec
loope
add
xchg
popf
adc
inc
lret
push
and
add
test
mov
mov
mov
movsl
cmp
mov
rorb
mov
xor
andl
rcrl
repnz
jnp
cs
imul
xchg
adc
mov
test
inc
mov
xor
std
sarl
loopne
jge
es
and
jb
push
sti
aas
cmc
les
push
das
fsts
imul
test
cmp
je
xlat
jne
ja
divl
outsb
lret
js
adc
pop
or
mov
xlat
sarb
repnz
xchg
arpl
xlat
inc
pop
das
mov
sub
out
sub
xchg
or
int
repnz
cs
lahf
cmp
mov
push
lods
mov
bound
jmp
getsec
pop
xchg
js
push
pop
pop
popa
mov
mov
shll
les
push
mov
insl
jns
ds
inc
repnz
pop
pop
pop
adc
xor
imul
pop
sbb
sub
outsb
jnp
jo
add
inc
xchg
jno
outsl
cmp
cmp
cmpsb
arpl
inc
notb
fstpl
cwtl
and
xchg
mov
pop
push
mov
fxch
aaa
adc
and
cmp
and
dec
jbe
enter
lods
dec
inc
inc
ljmp
mov
lea
shll
pop
nop
jns
outsb
in
mov
jne
add
rorl
mov
ljmp
call
leave
jns
scas
ret
mov
insb
jno
test
dec
cltd
fisubrs
cmpl
aas
sbb
popa
popf
out
inc
mov
call
outsl
dec
xor
arpl
mov
lret
inc
leave
and
adc
loop
or
xchg
and
mov
xchg
mov
lods
mov
das
and
leave
jmp
push
push
jbe
adc
iret
scas
aaa
jmp
xchg
pop
add
push
aam
ljmp
ret
rclb
xchg
test
ds
lret
call
mov
pop
lods
stc
aas
repnz
jae
mov
aam
add
mov
fisttpll
dec
iret
and
xchg
andl
cmp
or
data16
imul
cmp
pop
popa
adc
data16
jg
pop
push
push
std
xchg
and
cld
and
dec
fcompl
icebp
xor
jge
loop
sub
pop
mov
mov
cmp
pushf
jg
xchg
mov
xchg
cld
movsb
jbe
sub
xchg
fsubs
and
lar
jp
pop
stos
out
clc
in
nop
cmp
sbb
adc
cmp
lds
outsb
adc
lods
test
dec
mov
add
add
add
imul
cs
mov
pop
dec
add
leave
mov
movb
sbbb
jmp
mov
pop
test
aas
or
lret
outsb
mov
mov
outsl
adc
ja
xchg
cmp
pusha
cmp
mov
pop
inc
stos
in
ss
mov
popl
sahf
cmp
sbb
pop
push
stos
sti
add
mov
nop
popa
lock
and
lea
pop
xor
lahf
push
and
sti
je,pn
cmp
dec
mov
mov
pop
xor
adc
xchg
sbb
repz
sbb
test
stos
and
or
pop
movsl
cmp
jno
lret
loopne,pt
js
dec
test
mov
inc
int
pop
mov
push
or
test
mov
xchg
dec
dec
sbb
mov
mov
loope
fidivs
imul
int3
jae
mov
addr16
mov
cltd
popa
inc
pop
pop
sub
negb
mov
scas
cmpb
pop
and
add
loop
push
adc
out
jnp
xchg
push
ds
mov
stc
pushf
lret
adc
adc
out
mov
xchg
xchg
insb
and
fsubrl
push
int3
push
ret
in
jmp
push
mov
dec
or
aad
add
popa
adc
push
addr16
repnz
rcll
jge
lods
mov
mov
xchg
inc
negb
push
nop
sbb
mov
ljmp
adcl
sbb
dec
in
cs
mov
out
out
cmp
cltd
jecxz
and
addl
enter
pop
scas
cmp
imul
pop
notb
loop
scas
stos
dec
fwait
mov
cmpsl
add
mov
push
out
rcr
dec
mov
adc
jg
cmp
fmuls
mov
lret
inc
fnstsw
insl
xor
cld
roll
xor
dec
pop
stc
jnp
mov
push
xchg
movsb
push
cmp
inc
or
mov
orl
ret
or
sub
in
or
xchg
adc
pusha
push
pop
iret
out
call
add
push
and
and
mov
cmovs
in
cmpsl
mov
lret
or
in
fsts
fucomip
test
mov
and
loop
push
sbb
xchg
lds
icebp
test
int
push
pop
or
jmp
add
imul
mov
out
mov
and
mov
sub
jmp
jno
shll
pop
aad
adc
push
pushf
pop
divl
lahf
out
cmp
xor
add
popf
mov
ljmp
divb
adc
dec
jnp
cmp
std
bound
jae
push
cld
xchg
pop
es
cwtl
in
adc
pop
in
adc
jmp
add
dec
add
jnp
mov
adcl
xor
push
or
push
mov
aaa
adc
mov
cmp
adc
fiaddl
popf
lret
stos
dec
icebp
repz
xlat
std
cld
mov
cmp
xchg
inc
sub
fstpt
loopne
es
adc
outsb
in
lds
aas
fs
mov
xor
clc
cmp
sbb
xchg
je
jg
lds
xor
sbb
cmpsl
mov
or
xor
mov
cmpsl
pusha
cmc
addb
or
mov
cwtl
mov
xchg
les
enter
lcall
imul
pop
or
inc
imul
aam
mov
dec
xchg
mov
xchg
adc
arpl
inc
mov
mov
jl
popa
adc
and
mov
mov
cld
fists
fwait
pop
cmp
outsb
cmp
sbb
push
das
into
aam
push
adc
sbb
dec
scas
and
hlt
push
in
lahf
jmp
cld
and
xor
push
push
pop
mov
inc
es
jno
pushf
or
or
rorl
scas
stc
scas
xlat
dec
out
test
or
xor
shrl
dec
jecxz
icebp
lods
push
adc
stc
pop
jp
sub
faddl
xchg
push
xchg
scas
popf
xchg
mov
pushf
into
xchg
pop
adc
lods
add
inc
aas
popa
loopne
jae
sbb
ret
jnp
popa
inc
cmp
pop
mov
je
push
bound
xlat
pop
pusha
push
movsb
fs
dec
cmpsl
adcb
push
adc
sub
insb
jae
daa
popl
fistl
das
roll
mov
leave
adc
insl
clc
or
pop
xchg
xorl
int
inc
and
inc
je
push
cmc
sub
mov
push
adc
push
jge
push
in
in
arpl
lret
out
xchg
insl
fcoml
mov
cs
pop
test
xchg
or
push
jmp
repz
cmpsb
dec
pop
scas
int3
add
xchg
in
mov
sahf
xchg
js
jmp
adc
inc
popf
mov
pusha
outsl
jnp
jbe
shl
mov
ret
dec
inc
dec
leave
jp
dec
mov
nop
jnp
pop
mov
adc
jecxz
inc
push
sbbb
xor
mov
movsl
sbb
xor
iret
insl
cmp
inc
pop
push
ss
call
jmp
imul
mov
dec
and
je
lret
data16
mov
in
xchg
dec
add
xchg
je
int3
xor
mov
stos
jbe
sti
add
sbb
aad
imul
push
adc
outsl
jg
push
and
lods
insl
fmuls
inc
jg
jmp
jns
jnp
pop
adc
or
cmp
data16
jl
jbe
sbb
push
insb
and
add
je
sbb
ror
sbb
in
sbb
mov
adc
jg
inc
pop
loop
in
or
dec
mov
or
lods
pop
in
sbb
imul
jecxz
pusha
inc
lods
pop
subb
cmpsl
or
in
or
rolb
aaa
andb
pop
push
test
inc
mov
roll
inc
cmpsl
mov
subb
sahf
test
addr16
cltd
mov
mov
dec
cmpsb
dec
mov
adc
test
inc
adc
aad
adc
mov
std
mov
lea
inc
adcl
xor
xchg
xchg
ret
pop
or
stos
sbb
sbb
jmp
dec
jg
inc
les
jecxz
imulb
pop
mov
imul
jp
xor
adc
push
mov
iret
mov
and
xor
adc
lea
sti
push
cmc
jecxz
mov
jo
sub
pop
sbb
pusha
stos
out
movsl
rorl
add
test
out
cmpsl
xor
xor
adc
xor
ret
xor
fwait
pusha
sub
xchg
jecxz
add
in
xchg
sbb
and
hlt
clc
movsl
sahf
out
mov
cld
jnp
decl
js
xchg
jae
cmpsb
mov
xchg
cs
mov
dec
sub
or
ret
gs
mov
cmp
aad
aad
cs
test
rorl
adcl
inc
jnp
sti
inc
mov
jne
mov
mov
and
push
xor
adc
lods
jp
nop
sub
xchg
out
pop
push
pop
mov
mull
sti
cmpsl
xchg
fidivs
xor
inc
sbb
jo
inc
adc
cmp
pop
xor
outsl
xlat
iret
cmpb
jae
mov
xchg
pop
pop
pop
pop
xchg
sbb
sub
imul
push
dec
add
inc
adc
pop
mov
or
inc
fldcw
divb
ljmp
pusha
imul
aam
adc
cmp
xchg
xchg
push
cmp
cld
add
mov
movsb
movsl
jg
mov
mov
iret
xor
xchg
addr16
cmp
jp
sbb
hlt
notl
and
dec
cmp
mov
mov
pop
enter
iret
daa
jbe
pop
call
sub
nop
mov
shlb
adc
int
je
fcmovb
mov
jmp
outsl
xchg
jae
jo
and
add
dec
push
mov
mov
jb
xor
lret
mov
xor
push
or
or
les
test
or
pusha
inc
idiv
cwtl
push
pop
dec
or
lock
mov
cwtl
js
fistps
cmp
mov
ret
push
movsl
sub
aaa
dec
loop
inc
adc
mov
and
cwtl
pop
push
add
jmp
aaa
xchg
add
inc
je
pop
repz
sub
out
xlat
and
clc
pushf
xchg
add
sbbl
jnp
cli
lods
je
test
dec
jne
sub
and
push
gs
std
iret
push
push
xchg
dec
test
or
pusha
out
jg
add
rcrl
inc
mov
mov
mov
add
jmp
fmull
mov
mov
clc
inc
sbb
in
data16
popf
loop
add
mov
jb
and
shlb
mov
into
mov
loop
jecxz
inc
lods
in
fcom
mov
rcr
popl
jnp
lods
mov
sbb
or
inc
sti
mov
pop
or
sub
out
dec
pushf
mov
dec
scas
adc
ss
mov
dec
mov
dec
loope
lea
xor
pop
orb
inc
pushf
mov
sbb
int
ret
movsb
ret
outsl
loop
stos
push
sub
mov
push
es
lahf
dec
mov
aaa
pop
sbb
xchg
nop
mov
sub
std
js
inc
pop
das
xor
push
lret
inc
mov
add
popa
push
jb
cmpsl
inc
push
outsb
notl
mov
sub
enter
and
pop
scas
cmp
xor
fistpl
mov
hlt
add
dec
mov
push
test
cmp
mov
in
ret
pop
out
dec
gs
add
leave
add
and
in
out
jle
bnd
aas
mov
outsl
pop
xor
lret
jns
push
sub
sub
push
lods
icebp
aaa
sub
jl
xorb
cld
dec
and
add
daa
mov
add
mov
inc
aam
adc
repnz
xor
mov
ja
ficoml
pop
mov
fmul
ret
test
int
mov
adc
xor
pop
mov
clc
jnp
jae
pop
stos
add
dec
sub
mov
outsl
out
pop
loopne
sti
xor
hlt
lret
sbb
pop
test
scas
sbb
cmp
add
inc
divl
or
rclb
cmc
pop
nop
push
andl
mov
lods
jns
test
sub
add
js
outsl
mov
cltd
js
fbstp
adc
add
lods
bound
out
cmp
inc
push
nop
cmp
push
daa
jo
nop
js
and
inc
sbb
shl
pop
cld
aam
lcall
lea
stos
push
lds
push
out
out
sub
fsts
jmp
cltd
mov
mov
xchg
jae
aad
pop
jns
sahf
fsubs
out
sub
push
lds
in
movntq
out
out
imul
jl
cmpsl
inc
call
xor
aam
loope
aas
cmpsb
mov
frstor
jmp
int3
roll
dec
bnd
aad
inc
mov
jp
or
js
rcll
mov
aas
imulb
dec
jo
cmp
cmpb
sbbb
and
sub
sub
pop
sbb
cltd
inc
push
xchg
stos
test
mov
jbe
sub
sub
movsl
enter
nop
sbb
push
lret
cmpsl
xor
cli
pop
rcr
jns
pop
and
and
push
mov
lret
sub
inc
movl
pop
adcl
push
cmp
mov
mov
push
push
int3
jp
pop
adc
out
jge
lods
sbb
dec
mov
or
cmp
lcall
std
in
inc
in
outsb
aad
out
xor
loope
mov
rolb
stc
aam
pop
andb
andl
or
ret
pop
cmp
sub
xchg
dec
rcll
iret
mov
insb
or
test
shll
out
or
shl
fists
cli
mov
inc
inc
ljmp
shl
mov
je
adc
les
pushl
jl
js
leave
dec
pop
mov
inc
lds
lock
jmp
mov
xchg
xor
cld
push
int3
stos
sbb
inc
out
inc
cmp
sub
xchg
cmpsb
addr16
clc
cmpb
jle
fidivrs
cltd
adc
fnstsw
xchg
push
inc
fiaddl
add
mov
xchg
jb
xchg
repz
pop
xor
int
cld
jle
popf
jmp
mov
test
jmp
dec
pop
push
sbb
mov
shlb
mov
sub
pop
int3
cmp
cltd
lret
test
jbe
mov
push
pop
jmp
rcr
xor
mov
shrl
sub
sbb
fadds
dec
push
sub
aaa
dec
pop
inc
push
rcll
andl
add
push
sub
xor
or
sti
xchg
mov
xchg
test
and
test
jecxz
cmp
add
inc
je
mov
mov
mov
adc
cmp
mov
xor
push
or
repz
sahf
sbb
xor
jae
mov
outsb
pushf
out
pusha
fildl
mov
test
jns
xchg
sub
and
pushf
lea
repnz
pusha
inc
inc
or
push
xor
and
sbb
pop
mov
bound
lret
out
sub
pop
or
jle
pushf
add
insb
scas
adc
mov
add
xchg
in
add
jb
sub
push
aad
push
sbb
std
out
or
or
or
fwait
cmp
xlat
mov
fsubrs
arpl
adc
outsb
sub
jp
decl
mov
out
daa
lods
and
mov
push
dec
push
mov
or
enter
jecxz
add
aad
mov
test
xchg
jmp
xchg
mov
outsl
repnz
xchg
pop
stos
jae
cmpsb
inc
test
out
lcall
push
or
enter
out
in
shrl
xchg
cmp
call
xchg
or
pop
add
cs
xor
and
ja
loope
out
pop
cs
cmp
cmc
jb
stos
ss
shll
int
mov
fldt
xchg
lds
out
xchg
popa
out
clc
aaa
sub
call
dec
mov
sub
mov
xchg
test
mov
sub
div
cli
notb
arpl
jmp
imull
pop
pop
push
fnstcw
push
mov
mov
or
mov
jbe
adc
stos
aaa
push
aad
jge
mov
es
mov
gs
insb
gs
lahf
andb
mov
or
repz
in
inc
and
inc
out
pop
xor
sub
stos
rcrl
pop
jecxz
out
jp
xchg
cmp
imull
ss
cwtl
xrelease
ret
pop
insl
sbb
repz
insl
fbld
out
outsl
shll
sbb
test
dec
test
imul
dec
or
shl
gs
nop
lock
mov
jb
shll
in
lea
ret
sbb
jns
outsl
mov
fs
cmp
gs
stc
cmp
xchg
out
mov
cmp
lods
cmc
pop
dec
jno
imul
mov
div
inc
imul
stos
cmpsb
popf
cmpsb
and
enter
sub
daa
mov
jmp
loop
nop
and
in
test
aaa
sub
sub
es
jns
cmp
je
in
aas
test
push
inc
pop
mov
clc
or
lret
and
ret
push
dec
add
bound
mov
xchg
cwtl
mov
lea
mov
filds
pop
loop
cmovae
jbe
pop
shlb
add
je
jmp
les
cmpb
add
imul
faddp
jmp
aad
cmc
dec
and
inc
arpl
mov
iret
out
outsl
sarl
xor
scas
arpl
cmp
int3
rcll
out
cmp
bound
lock
das
js
nop
popa
loopne
and
mov
cmp
xor
xor
mov
test
inc
jp
pop
js
out
sbb
in
int3
mov
add
pop
and
adc
leave
mov
dec
insb
jo
movb
ror
add
pushf
and
pop
enter
test
cmp
idivl
imul
mov
mov
sbb
mov
inc
add
push
pop
push
jnp
xor
inc
xchg
jl
cmp
fcoml
mov
int
sbb
push
add
lods
mov
mov
dec
sub
fildl
push
aam
and
sub
les
aaa
adc
add
ret
shr
and
out
cmpsb
je
and
mov
adc
aam
adc
push
lahf
xchg
jne
pop
xorb
repz
loop
jno
dec
cld
lods
notl
dec
sti
mov
cmp
add
dec
cs
jo
jmp
js
insb
adc
in
mov
sub
sarl
adc
xchg
inc
jmp
movsl
jg
xchg
pusha
stos
call
dec
cmp
sbb
push
xchg
mov
ficompl
adc
push
int
push
pop
lea
decb
sub
inc
push
adc
push
lret
mov
push
dec
test
enter
xchg
cmp
push
mov
test
andb
lret
cmpsl
enter
sub
call
mov
iret
cli
movsl
cmpsl
leave
test
inc
ss
into
lret
shrb
inc
sub
popa
js
in
lret
cs
cmp
inc
fneni(8087
and
in
out
movsb
push
sub
movsl
psrlw
jnp
in
mov
xor
fdivrl
cmpsb
cmpb
sub
cmpl
add
push
ficomps
lods
popa
cmpsl
push
or
imul
jp
fs
data16
xlat
ret
jp
ror
jnp
pop
and
sub
into
cld
mov
cmp
mov
mov
or
inc
xor
je
out
push
fsub
jg
mov
pop
jno
sbb
xor
mov
fs
popf
scas
sbb
inc
push
sahf
dec
daa
inc
push
cmp
insb
push
xchg
insb
jmp
out
cld
cmp
pop
mov
insb
push
jns
mov
or
jl
push
mov
jbe
and
je
dec
sub
movsl
pop
sub
fmul
adc
test
decb
cmp
sti
push
addl
movl
inc
sub
stc
mov
and
sahf
cmp
push
filds
dec
pop
arpl
push
mov
xor
or
mov
xor
sub
repz
cmc
pusha
inc
sti
cwtl
push
mov
push
mov
add
mov
jno
adc
hlt
and
xlat
xchg
xorb
ja
or
cmc
cmp
push
mov
mov
sahf
pop
pop
pop
jmp
sbbb
or
push
out
mov
mov
hlt
dec
mov
ds
imul
jo
adc
shrl
test
enter
xlat
and
test
mov
xchg
pop
xor
mov
mov
mov
lahf
xchg
into
jns
rcrl
cmpsl
js
test
xor
cli
fwait
int3
stc
mov
loop
lret
jbe
std
xlat
imul
aas
dec
inc
push
push
mov
push
test
fimuls
inc
adc
and
idiv
jl
xlat
xchg
add
jo
lea
cmc
fsubl
hlt
cmp
jmp
jecxz
cmp
lcall
movsl
xchg
fdiv
push
mov
mov
xchg
movsb
push
pop
test
call
mov
sbb
sbb
xchg
mov
dec
or
ja
sub
mov
outsb
mov
out
out
lods
loopne
jmp
mov
cmpsl
testl
jnp
push
sbb
dec
aam
cmp
mov
insb
push
ja
xor
push
test
jns
lea
mov
adc
dec
or
fimull
and
iret
imul
adc
dec
test
mov
mov
push
adc
adc
sbb
mov
lea
loope
jo
stc
sbb
out
sbb
rolb
and
ret
das
mov
into
enter
shrb
scas
fstps
jbe
pop
sub
push
aas
dec
rcll
enter
fisttps
push
mov
and
and
adc
mov
shr
inc
pop
xchg
lcall
push
les
dec
push
stos
int3
jp
add
add
mov
dec
pushf
push
cmp
jno
pop
push
inc
pop
xor
xor
out
sbb
xchg
stos
jge
daa
xchg
repnz
xor
sub
rcl
xor
cmpsl
mov
mov
inc
add
je
addr16
loop
inc
lcall
aam
sub
out
clc
mov
pop
adc
lret
or
arpl
aam
mov
cs
cmpsl
lea
sbb
and
fstpt
jl,pn
adc
sbb
jecxz
or
xor
iret
sub
les
xor
jecxz
mov
into
stos
mov
hlt
inc
or
xchg
sti
dec
pop
mov
jp
push
shrl
js
mov
dec
fstpl
bound
xchg
scas
test
sbb
pop
ljmp
mov
sbb
mov
out
adc
rol
cmp
sbb
adc
jno
lods
xchg
jae
inc
decl
lahf
push
sbb
mov
loopne
aaa
icebp
inc
test
ss
mov
hlt
mov
mov
cmp
fldenv
fiaddl
xor
mov
fisubrs
lock
cltd
insl
lods
push
jo
jle
mov
push
mov
and
push
sbbl
fnstsw
or
imul
and
dec
mov
and
xor
sarl
scas
mov
sbb
cmp
push
les
and
cmpsl
cwtl
hlt
movsl
cmpsl
add
cld
dec
mov
push
dec
dec
fcom
lret
xchg
push
cmp
cbtw
nop
shll
loopne
add
mov
xchg
out
cmp
ret
mov
daa
fcoml
add
lcall
jl
adc
iret
shrb
fwait
stos
movsl
fists
aam
imul
mov
loope
pop
pop
pop
iret
xchg
mov
sbb
fstpl
push
jl
stos
cmp
sub
lret
fadd
out
xor
adc
adcb
cmpsb
jl
rcrl
stos
pop
lds
fcmovnbe
mov
nop
movsb
pop
adc
jo
and
fwait
shll
or
jb
jae
fcoms
fwait
lods
sbb
and
test
shrl
jo
insl
subl
dec
pop
xchg
ret
xchg
aad
fldl
push
jne
mov
daa
mov
lods
inc
push
xor
xor
adc
adc
int
jnp
nop
into
jae
in
test
xchg
scas
xchg
jle
dec
add
les
sahf
data16
aam
pop
clc
cli
push
xlat
sub
push
push
xchg
leave
inc
pop
ret
popf
maskmovq
push
pop
test
filds
aaa
inc
arpl
push
xor
pop
cmpsl
pusha
or
pop
lds
adc
mov
data16
scas
aam
imulb
xchg
mov
mov
xchg
test
ja
and
jns
es
add
sbb
fistps
hlt
jo
mov
dec
out
clc
or
insl
iret
dec
or
jmp
subl
cmp
sub
lock
addr16
scas
sarl
in
stos
jl
jge
das
jbe
push
stos
jo
sti
imulb
sub
or
js
and
mov
mov
xor
xor
int
and
mov
pop
cmpsb
cmove
lret
out
push
repz
cmp
lret
imul
sbb
adc
and
push
fsub
xor
popa
cmp
or
in
mov
aam
nop
cmp
push
adcb
outsl
sti
test
movsl
adc
repz
push
or
cld
pop
adcb
mov
jecxz
push
mov
or
lcall
sbb
jmp
or
mov
rcr
inc
mov
out
xchg
pushf
in
insl
pop
int3
jnp
add
sbb
leave
xchg
mov
stos
or
int3
cmp
jns
daa
int3
std
dec
adc
jl
bound
shlb
sti
mov
pop
enter
loopne
jae
dec
iret
dec
lcall
ds
xor
pop
stos
aas
dec
iret
cltd
subl
jo
arpl
cmc
in
adc
ljmp
xchg
cmp
daa
inc
subl
sbb
add
loop
pop
scas
mov
mov
cmp
xchg
pushl
jae
in
shll
xchg
dec
ficoml
in
rolb
cmp
mov
int3
ljmp
scas
push
aad
or
jns
adc
mov
adc
mov
sbb
and
jnp
pop
push
inc
mov
sbb
sbb
sub
or
and
mov
mov
hlt
mov
and
pop
jle
aad
lods
int3
xchg
sbb
lods
stos
add
aaa
popa
fnstcw
out
jbe
push
lcall
icebp
in
mov
lahf
test
outsb
and
mov
fcmovbe
out
sbbb
pushf
mov
lahf
test
xchg
lock
out
out
and
xchg
mov
push
test
xchg
in
add
decb
pop
jmp
xchg
push
and
cld
mov
test
in
pop
fidivrs
enter
hlt
sbb
test
lcall
shlb
les
orb
in
push
pop
xor
dec
sbb
sub
inc
adc
mov
xor
sub
out
jmp
add
enter
ficoms
dec
out
cmp
xchg
pop
sahf
mov
pop
dec
call
in
cmp
test
in
stos
cmpsl
xlat
inc
inc
and
fcoms
adc
outsl
dec
xchg
stos
push
add
call
and
out
xor
jl
xor
movsb
inc
in
cmpsb
inc
into
shlb
fistpll
mov
adc
add
sbb
test
fs
add
shll
testb
cmp
test
xor
mov
inc
add
push
das
les
jbe
dec
in
push
mov
scas
outsl
push
and
push
jns
divl
out
adc
jmp
inc
in
jge
lods
sbbl
xchg
rcrl
ss
pop
jmp
jecxz
and
pop
pop
addb
lods
fisubrs
mov
loop
daa
subb
adc
add
test
jg
mov
push
xor
mov
enter
mov
outsb
mov
cmpsl
out
aam
aam
lds
and
fdivrl
rcll
jge
mov
push
xor
clc
sub
movsl
pop
cmpsb
gs
in
popf
pop
cmp
arpl
and
dec
aam
dec
mov
out
mov
clc
ret
cmp
adc
stos
and
jp
cmp
addb
lea
and
sti
mov
test
xor
jmp
repnz
push
lock
add
cmpsb
or
mov
push
push
je
sub
jno
xor
push
mov
pop
aas
test
out
jmp
xor
clc
into
out
mov
loop
inc
pop
mov
pusha
cwtl
jmp
into
imul
outsl
fdivs
xorl
sbb
sub
inc
das
sahf
add
fisubrs
fisttpl
mov
in
insl
cltd
sbb
sahf
sti
xchg
mov
sbbl
xor
mov
popf
daa
jns
ret
cmp
mov
ljmp
mov
xchg
das
lret
jg
pop
or
jns
cmp
lds
loope
and
sbb
mov
stc
icebp
jae
addr16
mov
loope
jle
xor
xchg
push
adc
lea
hlt
in
fimull
inc
push
pop
jnp
loopne
jle
add
push
mov
dec
sbb
das
xor
mov
mov
nop
pop
xchg
mov
fs
or
inc
clc
add
push
test
scas
imul
cmpsb
xchg
sbb
lea
jp
and
xor
cmp
sbb
test
cmp
sbb
jecxz
imulb
cmpsb
mov
mov
adc
out
push
je
addr16
lds
out
nop
pop
or
mov
dec
scas
rcrl
mov
imul
sarl
cmpsb
xchg
dec
cmpsb
aaa
cli
jne
stos
lcall
arpl
xlat
sahf
out
or
push
lea
rorl
imul
shll
and
cmpsb
jno
gs
mov
push
mov
dec
mov
sub
in
dec
inc
cld
cld
fld
add
loopne
ficoml
push
fs
xchg
add
dec
div
les
push
inc
add
loope
sbb
fwait
sub
lds
xchg
adc
andl
shrb
repnz
rcl
mov
aam
repnz
xor
scas
mov
int
mov
sub
inc
xchg
push
sahf
xorb
aaa
es
sub
xlat
and
xchg
mov
movsb
mov
or
sbb
imul
loop
mov
mov
sbb
adc
int3
fwait
imul
rolb
ds
xchg
jl
lcall
and
push
ret
xchg
clc
aaa
fstpl
cmp
cmp
push
dec
std
jecxz
mov
lret
daa
or
jp
movsl
cwtl
movsl
out
inc
sub
test
mov
nop
je
rorb
jmp
shr
push
in
dec
pop
sbb
les
and
mov
scas
cmc
pop
into
sub
mov
add
or
loopne
lret
hlt
and
dec
xor
popf
jns
in
insl
adcl
gs
sbb
mov
popf
js
mov
cmc
xor
pop
push
test
sar
jno
cmp
adcl
mov
adc
int3
icebp
sub
scas
push
insl
repz
mov
in
mov
pop
sti
push
cmp
arpl
shrb
ljmp
jge
add
pop
rcrb
in
push
push
test
aas
mov
add
cmp
push
push
and
je
mov
jl
jmp
out
imul
orl
jecxz
inc
ss
or
pop
dec
shll
or
mov
fwait
test
pop
fdivrl
cld
and
jp
mov
dec
vpsubsw
fmull
mov
pop
gs
popf
inc
push
dec
sub
mov
jne
ret
lret
jl
imul
dec
imul
xchg
es
sub
and
sahf
lret
and
pusha
jmp
sarb
scas
lds
imul
xchg
test
fs
sahf
sbb
xor
mov
sub
in
std
mov
sbb
fs
in
fnstenv
pop
inc
mov
or
hlt
push
cld
movsl
in
mov
xchg
inc
test
sub
decl
sahf
sbb
jl
clc
lds
push
mov
mov
push
andl
lods
jge
ficompl
jp
addr16
inc
sbb
cmp
push
loop
xchg
and
xchg
adc
or
add
or
std
test
push
ds
out
out
cmp
sbb
repnz
in
cmp
outsl
mov
mul
ljmp
pop
mov
or
out
jge
out
stos
inc
mov
pop
leave
subb
cmpsl
mov
lods
repnz
inc
mov
sub
pop
adc
outsl
push
adc
jne
subb
sbb
cmpsl
xchg
int3
stos
lea
add
mov
adc
lahf
pop
mov
xchg
push
lcallw
faddl
insb
and
ret
xor
push
sahf
ret
cmpsl
out
popf
pop
mov
ja
or
or
push
lret
cmp
sub
pop
jp
stos
xchg
into
hlt
xor
push
fstps
mov
inc
xchg
jno
js
lahf
adc
mov
xor
pop
add
jmp
inc
or
add
enter
imul
xchg
scas
popa
mov
ljmp
fdivrl
jno
sbb
jmp
adc
rcrb
mov
aas
inc
jns
ds
mov
scas
addl
pushf
jmp
es
mov
in
xlat
scas
sbb
pop
jno
rcrb
ret
xor
pop
sahf
jns
xchg
in
in
scas
mov
ret
or
cmp
ret
adc
je
cmp
jp
inc
push
idiv
ror
add
mov
pop
shrl
popa
test
fdivrs
scas
pop
jmp
pop
sbb
sub
pop
stos
sbb
mov
test
in
push
data16
inc
and
ja
or
inc
xchg
inc
jb
lahf
repz
divb
mov
repz
lea
pop
int
sti
jo
les
cmpsl
add
cld
sub
lea
pop
fwait
lods
xchg
sti
cmpsb
jle
xor
dec
lock
aaa
jle
lcall
lods
mov
sub
sub
sahf
mov
sbb
cmpsl
inc
inc
jg
mov
xor
jle
rolb
mov
inc
cmc
scas
sbb
repnz
mul
into
out
add
mov
data16
sub
loope
push
push
inc
mov
jle
movsl
dec
in
out
cmp
pop
stos
stc
xchg
out
cltd
inc
or
enter
lods
loope
rep
cs
add
dec
mov
dec
dec
pop
jecxz
xchg
mov
pop
inc
mov
sbb
scas
js
fisubrl
bnd
daa
xchg
push
test
aas
int3
shlb
fsubr
xchg
mov
daa
xor
jmp
popa
scas
shrl
jmp
sbb
cmpsl
mov
jp
xor
mov
ficompl
int
lea
dec
hlt
repnz
aas
aas
fmull
jo
or
lret
xchg
sub
mov
pop
aad
outsl
clc
or
pop
lahf
xchg
sbb
imulb
pop
push
decl
push
ret
aam
push
shrb
popf
sbb
mov
fbld
xchg
les
xor
iret
test
aad
fs
inc
cmp
lahf
fsubr
mov
jg
imul
jl
test
lret
out
adc
mov
ficomps
fsts
mov
nop
dec
lret
adc
or
xchg
lcall
cmpsb
xchg
dec
imul
mov
fcoms
sub
push
clc
pop
les
and
mov
pop
sub
repz
lret
cmp
adc
aam
scas
mov
outsl
sbb
mov
je
cltd
jl
arpl
add
out
roll
sbb
inc
sbb
add
push
mov
pop
dec
jae
cmpsl
lret
xor
fwait
cmp
popa
clc
ljmp
repnz
clc
xchg
cmp
into
cmc
es
jecxz
add
pop
adc
rorl
lahf
push
mov
out
mov
xor
inc
mov
and
fcomi
jns
jge
xchg
or
pmulhw
fnstsw
xor
fists
adc
sti
lret
jge
cmp
cmpsb
xchg
pop
jne
lret
nop
inc
pop
pusha
inc
xor
inc
mov
leave
jae
lds
aaa
add
pause
aam
jno
xchg
nop
shr
fst
mov
pop
arpl
pop
loopne
xor
sub
cs
push
mov
mov
enter
mov
or
out
scas
call
in
in
and
and
xor
iret
ja
pop
lds
add
inc
mov
inc
ss
je
xchg
das
mov
and
add
jns
into
lcall
inc
adc
js
push
or
bound
mov
or
jb
inc
inc
pop
sub
xor
mov
addr16
sbb
jg
adc
mov
test
mov
inc
cli
pop
sub
and
dec
clc
xor
mov
lock
ljmp
sub
push
inc
rolb
cmovb
dec
fsubs
fistpll
inc
call
xor
jecxz
xchg
leave
mov
pop
jns
and
jnp
movb
test
loop
outsl
xchg
dec
je
pop
jb
les
movsl
add
ret
cmp
js
ret
test
or
or
mov
lock
fwait
in
add
in
mov
pop
add
cwtl
jnp
pusha
and
cmp
call
ss
xor
cmp
jp
ljmp
adc
jl
mov
mov
int
in
leave
leave
sbb
lods
add
lret
jne
adc
push
pop
sarb
in
daa
or
jo
lret
movsb
gs
loopne
das
xchg
jl
lcall
and
push
jecxz
cmpsb
ret
sbb
add
jp
ret
sbb
addr16
jmp
test
cli
roll
loop
mov
outsb
and
jmp
leave
xchg
mov
dec
sub
cltd
add
testb
je
stos
cmp
cltd
fsubl
icebp
jle
lods
dec
jmp
es
add
outsb
sub
cs
test
dec
lret
iret
pop
push
negl
aad
pusha
rcl
lahf
push
lcall
ficoms
mov
add
xor
push
pop
aam
dec
mov
push
sbb
mov
stc
dec
sub
pop
cmp
add
inc
out
rcrl
mov
jne
push
add
insb
out
cwtl
xchg
mov
fwait
xchg
inc
mov
fdivrp
add
mov
outsb
out
rdtsc
xchg
cs
adc
lods
pop
pusha
dec
mov
mov
enter
lahf
xchg
dec
mov
subl
xchg
push
or
mov
cmp
dec
insl
popf
dec
dec
push
sub
adc
popf
inc
lock
push
sbb
jge
movsb
xor
test
test
mov
add
mov
aaa
cmp
aaa
stos
pop
cmp
mov
aam
push
xor
out
sbb
and
lods
faddp
pop
out
aas
cli
lret
mov
scas
inc
and
and
jmp
andb
cli
mov
shl
cs
push
sbb
enter
xchg
adcb
dec
xchg
mov
pop
out
cltd
bound
mov
in
cmpl
cmp
in
sub
add
pop
add
fdiv
shrl
outsl
int3
ret
jle
leave
fsubrp
icebp
pop
inc
hlt
add
push
push
mov
or
adc
jno
jns
test
sub
or
xor
push
jp
and
jg
dec
inc
popf
call
sub
sahf
inc
jp
loop
add
adc
xchg
pop
pop
outsb
into
cmp
test
xchg
mov
pop
jnp
in
cli
iret
push
imul
in
roll
popa
movl
jne
pop
loop
xorb
nop
sub
ja
std
push
cmp
jge
pushf
mov
push
mov
xchg
pop
jns
push
fdivrs
mov
arpl
arpl
adc
mov
test
fidivrs
cmp
ja
mov
mov
sub
mov
adc
icebp
mov
mov
dec
mov
sbb
cmp
icebp
fdivrl
adcb
adc
dec
adc
sbb
push
pop
pop
outsb
mov
dec
or
adc
insl
inc
add
stos
and
leave
xchg
inc
ret
pop
cmpsl
ficomps
cmpsl
add
mov
mov
xorl
pop
jae
or
notl
movsl
pushf
sub
jno
mov
mov
pop
cmp
movsb
jae
cmpsb
roll
fldenv
add
push
and
mov
adc
cwtl
jl
or
mov
push
lods
inc
mov
pop
jle
out
lcall
or
outsl
mov
inc
and
jle
push
loopne
push
nop
mov
mov
fsubrp
stc
and
jne
jl
sub
ret
adc
xchg
mov
js
sbb
add
enter
add
aaa
fcoms
ljmp
dec
jb
mov
cmpsl
jle
xchg
ljmp
leave
movl
cli
rcl
leave
adc
xchg
mov
xchg
mov
mov
xlat
and
pushf
xchg
xor
cmp
or
fwait
mov
xchg
es
push
mov
adcl
subb
sarb
inc
scas
hlt
dec
mov
add
lahf
or
mov
in
jbe
test
sbb
repnz
fisubrs
sti
jg
fnstsw
cmp
pushf
push
mov
test
clc
call
jnp
xchg
xchg
fcoml
xor
sarb
lods
lds
fldln2
ja
movsb
rcrl
xor
neg
aam
add
cld
jmp
loopne
test
insl
dec
add
clc
imul
mov
pop
and
cmpsl
push
mov
jle
shl
ret
unpcklps
pop
hlt
cmc
push
xlat
and
hlt
xorb
out
movsb
aas
adc
adc
out
push
int3
lret
jb
push
add
cs
jns
inc
stos
sbb
ja
in
je
inc
pusha
ret
in
stos
and
stc
push
mov
sbb
cmc
adc
jle
shlb
andb
dec
lods
dec
in
enter
insb
out
test
mov
lock
adc
push
aam
loopne
ds
mov
out
cmpsb
je
pop
in
jecxz
jne
inc
cmp
in
cmpsb
push
jb
int3
test
dec
cltd
lds
mov
pusha
inc
ficompl
mov
loopne
in
xor
push
pop
push
dec
shlb
or
mov
ljmp
test
or
and
push
and
insl
push
dec
inc
cmpsb
jnp
scas
xchg
ja
aaa
add
pusha
xor
bts
adc
js
insl
sahf
aas
test
sub
inc
mov
xchg
test
mov
sbb
and
imul
sbb
pop
push
xor
in
lock
mov
test
sahf
mov
shrb
in
push
dec
lret
add
dec
xlat
pop
test
aas
jecxz
sarl
rcll
xchg
add
jge
mov
mov
cmpsb
cmp
jmp
cmp
push
dec
std
xchg
inc
mov
into
sbb
lret
repz
in
jne
mov
outsb
sub
rcrl
push
jle
pop
fistpll
jo
notb
sbb
mov
xor
and
cmp
xchg
dec
jmp
pop
mov
and
or
mov
cli
ret
enter
and
test
cmp
jmp
mov
pop
sbb
xchg
push
add
push
aam
aam
loopne
data16
sbb
pop
dec
mov
in
dec
cld
adc
xorl
imulb
outsb
test
push
inc
add
aam
mov
sub
repz
inc
push
and
dec
negb
xor
xchg
in
and
aam
pop
dec
pop
cwtl
mov
pop
andb
test
out
adc
out
sub
out
pop
or
jns
dec
shll
jno
sbb
not
sti
xor
mov
je
enter
adcl
xor
cmp
add
pop
sbb
lds
lcall
out
mov
jle
mov
in
mov
push
insb
negl
lret
push
cmpsl
mov
test
cmpb
out
cmpsl
xchg
jnp
adc
dec
mov
lods
mov
add
andb
in
jne
int3
adc
popf
test
aam
cltd
xor
cmp
test
pop
lods
adc
cs
movsl
pusha
push
sbb
stos
aaa
jg
mov
sub
imul
es
mov
sub
repnz
iret
push
mov
push
cld
or
push
cmc
jl
add
addl
inc
push
add
mov
arpl
jne
xchg
lahf
mov
and
int3
fnstenv
imul
rcl
mov
jmp
in
fcomps
sub
mull
arpl
mov
repz
xor
sbb
insl
iret
sub
test
push
scas
sbb
xchg
stos
mov
outsl
mov
movsb
push
into
outsb
sub
push
jp
outsb
daa
jp
les
fwait
push
jmp
sbb
add
cld
mov
out
in
mov
jecxz
inc
xchg
jb
cmp
jbe
repnz
and
ljmp
mov
cs
jne
push
les
movsb
lock
mov
cmp
cmc
jle
add
jmp
mov
add
js
fs
ss
xor
xchg
dec
icebp
pop
jae
dec
cmpsb
leave
pop
sahf
adc
out
xor
pop
mov
sub
iret
loopne
into
pop
mov
pop
icebp
int
ds
repnz
mov
ret
push
add
or
lcall
mov
loope
ficoml
iret
inc
lods
pop
jbe
daa
movsl
fdivrl
stc
jo
pusha
daa
ret
int3
adc
xlat
jmp
loop
pop
bound
mov
out
fcmovne
pop
adc
add
stc
jo
mov
fsts
add
jge
pop
movsl
jl
scas
push
sub
fildl
in
pop
add
xlat
mov
inc
inc
xchg
ja
iret
xchg
pop
inc
jle
dec
mov
cmp
mov
mov
lds
pushf
and
sti
repnz
push
test
mov
out
fistps
sbb
call
cmpl
xorl
cld
hlt
xor
cltd
mov
in
and
xor
pop
daa
mov
xchg
mov
push
filds
insl
movsl
pop
bnd
pop
sbb
push
addr16
mov
pop
mov
rol
lahf
adc
fdivs
mov
fsts
push
dec
int3
lods
cs
xlat
mov
push
scas
cltd
mov
mov
bnd
inc
cltd
push
mov
mov
ror
and
ljmp
test
mov
lods
add
lds
and
stos
lds
sarl
jns
mov
aam
lahf
xchg
hlt
dec
test
in
push
ss
in
inc
lret
imul
pop
iret
js
iret
pop
aas
xor
fstps
jo
add
mov
dec
lods
dec
push
leave
add
mov
lods
pushf
out
lret
lcall
mov
addr16
mov
mov
add
add
mov
cmpsl
cld
mov
inc
adc
mov
test
into
mov
aaa
in
jg
mov
jnp
out
pop
stc
arpl
fisubrs
push
pop
push
add
shr
mov
iret
sub
cmp
or
incl
out
inc
sbb
inc
mov
xchg
aam
jb
mov
sbb
jns
dec
repz
or
cmpsb
fimull
mov
inc
fsubrs
lret
fiaddl
ljmp
shlb
jo
adc
movsb
lcall
test
inc
pusha
and
inc
dec
in
or
xchg
sbbl
scas
mov
xchg
stos
dec
add
push
and
add
jns
js
mov
loopne
adc
xchg
ss
or
jg
ret
jne
xlat
adc
sbb
stos
rcrb
dec
int3
inc
jbe
pop
mov
sub
pop
push
shlb
jecxz
cmp
xor
sub
hlt
out
xchg
xchg
insb
outsb
adc
push
aad
cltd
lods
xchg
stos
inc
adc
clc
pop
push
popf
inc
enter
fld1
jp
jge
aaa
mov
lret
xor
enter
lods
dec
dec
push
add
pusha
cmp
lcall
cmp
shll
cmpsb
and
insb
jg
mov
daa
add
lahf
or
xchg
or
stc
cmp
testb
sub
jne
add
cmc
jmp
shrl
and
cmc
cwtl
push
cli
rcrb
push
push
out
sub
dec
bound
pop
insb
inc
push
mov
lds
lret
enter
cmp
popa
jge
adc
jo
pop
lds
sub
mov
shrb
outsb
ror
lcall
push
cmp
dec
cs
std
repnz
dec
scas
icebp
xor
sar
fs
fstpl
xor
rorb
push
popf
mov
movsl
stos
jns
or
imul
rol
cmpxchg
dec
mov
jge
and
fnstenv
cmp
sti
xor
fsubrl
xchg
sub
adc
mov
pop
shl
sbb
in
adc
mov
rolb
pop
ss
loop
mov
nop
and
das
jo
mov
pop
jp
cmp
call
js
mov
in
inc
jno
clc
cwtl
pop
mov
mov
mov
fcompp
nop
sub
out
or
test
mov
sbb
dec
or
mov
xchg
lret
mov
sub
xchg
repz
subl
adc
movsb
icebp
push
gs
or
mov
push
push
push
adc
sub
cld
xor
sti
jge
pusha
cmp
xor
mov
insl
mov
push
jmp
mov
mov
xchg
imulb
cltd
nop
dec
pop
inc
dec
testb
jg
xchg
mov
imul
fs
nop
inc
xchg
sub
js
mov
pop
fwait
cmp
sub
out
and
cli
mov
in
cmc
cmp
lods
cli
shrb
into
xchg
add
jnp
cs
add
imul
mov
mov
or
jbe
mov
adc
inc
in
add
shrb
bound
out
jne
lds
sub
adc
or
insl
dec
sarl
and
jmp
dec
loope
mov
fdivrl
inc
pop
and
xor
aam
jmp
fwait
or
xor
push
ljmp
jno
insb
call
je
daa
sub
das
and
xor
daa
loop
sub
dec
xlat
aam
pop
add
mov
mov
sub
cmc
shlb
mov
adc
icebp
in
mov
jl
jl
inc
imul
mov
xchg
enter
cmp
jns
pop
dec
andl
js
test
loope
push
inc
jno
cmpsl
aam
mov
iret
push
xchg
push
subl
cmp
dec
mov
mov
mov
lea
das
stos
and
and
sbb
inc
and
fadd
stos
out
nop
dec
adc
xchg
dec
xchg
sbb
outsb
pop
jp
nop
add
rol
movsb
das
out
in
mov
leave
adc
ret
jne
pop
icebp
adc
inc
loop
js
ret
stc
out
shr
cmp
jl
xchg
insb
cld
rcrb
call
or
and
pop
pushf
lahf
lods
cwtl
lds
xor
mov
test
mov
pop
sti
std
call
dec
mov
fistl
sub
jecxz
out
sbb
or
sbb
add
dec
mov
mov
rol
mov
or
mov
and
mov
sbb
mov
sub
loopne
mov
mov
pop
ret
and
fcompp
ret
mov
aam
das
jb
or
dec
daa
cbtw
mov
jmp
mov
xor
out
add
movsb
stc
into
shl
jl
cmpsl
cmpl
xchg
add
ljmp
sahf
fldl2t
movsl
les
cmp
fldcw
fdivrl
sahf
dec
and
and
leave
adc
shlb
dec
push
inc
adc
push
repz
mov
mov
push
idivl
jge
push
sub
pop
or
pop
and
cwtl
dec
repz
xchg
sub
fistpl
push
mov
jo
mov
pusha
inc
pusha
movhps
jb
std
jae
push
aas
scas
mov
adc
jne
jns
xchg
push
js
dec
leave
mov
stos
mov
jno
nop
jg
mov
adc
lea
test
pop
jge
addl
sahf
stos
adc
mov
inc
hlt
sub
ljmp
ljmp
enter
int
cmp
movsb
sub
test
hlt
and
rsm
jg
jl
jl
pop
jle
mov
jg
lods
orb
mov
imul
fidivs
adc
mov
lods
out
call
adc
push
pop
push
mov
into
xchg
cld
fldl2e
pop
push
fbstp
or
mov
dec
dec
dec
dec
pushf
xchg
mov
xor
lret
xchg
pop
add
cmp
sub
add
or
and
dec
outsl
add
inc
sahf
inc
sub
mov
ss
xor
pop
dec
and
cmpsb
jg
flds
inc
adc
cltd
nop
cmp
and
and
pop
xchg
roll
jle
iret
cmpsb
test
int3
in
cltd
jg
test
and
test
dec
daa
clc
mov
out
sbb
insb
jl
lret
rcl
cmp
notb
or
sbb
bound
inc
pop
subb
xchg
mov
repnz
ja
adc
out
add
adc
lea
adcb
lods
sbb
loop
sbb
fbld
sub
repnz
ret
push
fucomip
add
les
arpl
std
mov
fisttps
add
mov
addr16
stc
mov
xor
and
data16
sub
shrl
in
pop
adc
jmp
lret
das
mov
in
ja
pop
pop
inc
imul
mov
fnsave
inc
int
repnz
ss
loopne
outsl
stos
pop
jmp
movsl
lock
xchg
je
in
pop
pushw
rcr
bound
fnstsw
sti
rolb
dec
jle
pusha
cltd
push
mov
xchg
aas
push
sbb
pop
lods
mov
push
xor
sbb
stos
sub
mov
ja
inc
xchg
xchg
and
inc
fs
sbb
je
cmp
xor
fisubs
test
ja
xor
cmp
repnz
inc
bound
rclb
inc
stc
ja
mov
cltd
adc
xchg
fimull
scas
inc
fwait
ljmp
dec
mov
inc
pushf
mov
sti
dec
je
inc
and
outsb
push
aas
mov
inc
ret
push
lahf
mov
stos
cmp
pop
insb
out
add
jne
cld
mov
mov
mov
xor
add
push
out
scas
pop
jle
pusha
std
add
add
and
insb
mov
fistps
inc
popa
in
xchg
ficoml
push
int
or
fwait
int
jae
and
pop
shll
inc
xor
sbb
add
pop
lock
mov
test
mov
jmp
icebp
push
ds
add
in
repz
and
mov
das
xchg
push
jg
stos
adc
fs
mov
cmpps
pop
iret
cli
jp
jge
push
mov
fldt
sub
jmp
stos
cmpsl
adc
mov
inc
enter
dec
sti
jnp
cltd
cli
lea
jns
repnz
or
pushf
lds
jne
imul
sbb
lcall
mov
loope
int3
jae
int3
scas
add
pop
hlt
in
push
sub
add
and
fs
mov
movsb
jecxz
not
std
xor
mov
xor
adc
or
orb
test
aaa
mov
sbb
in
xchg
xor
ljmp
pop
cmp
jecxz
lcall
mov
jno
cmp
xor
pop
mov
dec
arpl
mov
jg
test
test
push
mov
call
xchg
insb
dec
and
cmp
leave
mov
lcall
mov
shlb
dec
mov
xchg
add
pop
stos
pop
daa
mov
mov
cli
xor
sarl
arpl
movsl
inc
sub
fwait
das
shlb
dec
lret
loope
mov
outsb
mov
cs
push
es
je
aaa
mov
aaa
cmpsl
and
subl
cs
push
pop
and
pop
dec
pop
mov
clc
adc
jb
sub
stc
xor
cld
mov
bound
jb
iret
add
ficomps
dec
and
mov
xchg
mov
pop
inc
inc
push
cmp
jno
out
push
scas
and
inc
cltd
stc
stos
add
mov
loopne
push
cwtl
sbb
call
mov
cmpsb
pop
ljmp
and
or
sbb
add
lds
mov
push
aam
jne
imul
dec
insb
push
push
outsl
outsl
movsb
push
repnz
mov
pop
or
xchg
mov
stos
aas
dec
pop
pusha
sbb
push
fbld
loop
outsl
adc
test
ficoms
movsl
inc
push
sub
cmpsl
or
mov
sub
ret
pushf
cmp
fucomi
jmp
xchg
fs
pop
pop
subl
repz
insb
iret
sti
push
dec
jp
jae
adc
loop
or
sbb
inc
hlt
xchg
inc
rcrl
movsb
mov
cmpsb
mov
sbb
aad
gs
sbb
xchg
ds
add
aam
ret
sahf
pop
add
leave
or
jno
jno
sbb
sub
sti
in
arpl
pop
rcrb
out
jle
adc
dec
push
mov
xchg
pop
xchg
jp
pop
pop
xchg
push
mov
bnd
xor
mov
xchg
out
xor
lret
fcom
and
sub
push
mov
or
and
push
lods
cmp
in
push
push
pop
stc
clc
or
dec
mov
cmp
lock
data16
fs
popa
xchg
pop
sbb
enter
jle
pop
int3
adc
pop
leave
mov
mov
sbb
or
mov
jns
pop
aam
jns
bound
pop
jg
gs
loop
fwait
jae
mov
mov
add
fildl
pop
lea
aas
sbb
xchg
push
mov
jle
adc
mov
xor
jp
in
out
jne
pop
xchg
movsl
outsb
jae
pop
jns
pop
dec
loop
ss
js
and
adc
sub
leave
mov
cmp
lods
outsb
icebp
ret
sub
je
shll
loopne
pusha
popa
lret
or
inc
inc
adc
jo
or
aas
out
add
inc
enter
and
push
mov
jnp
je
push
fisttpl
cmpl
ss
mov
into
fsubr
mov
dec
mov
push
and
sbb
hlt
nop
insl
inc
add
dec
pop
gs
dec
jge
adc
jbe
out
jbe
adc
divb
sbb
add
loopne
push
add
add
movsl
mov
shll
daa
cmpsb
popa
inc
sti
ret
aaa
cld
fsubrl
mov
cltd
pop
or
stos
aam
adc
insb
sbb
insb
or
je
jl
pop
es
test
sub
push
js
int3
jl
out
or
arpl
int
test
jbe
out
sbb
test
popf
inc
pop
lds
rcl
pop
icebp
inc
lock
outsb
mov
mov
pop
nop
cmc
mov
jbe
orl
and
or
into
mov
push
or
add
bound
dec
jp
mov
push
dec
push
inc
fsubr
idivl
mov
push
push
pop
outsl
dec
shll
mov
inc
inc
stos
fwait
xchg
jp
popa
mov
aam
mov
in
mov
sbb
pop
fcmovne
sub
mov
fsubs
pushf
sub
das
xchg
sarb
xlat
out
inc
subl
daa
rcr
mov
fwait
in
xchg
ja
sub
je
add
pusha
idivb
pop
shll
cmp
sub
scas
push
sahf
xchg
nop
into
push
jle
xchg
xor
in
dec
mov
xor
ss
incb
gs
and
adc
jne
cmp
xchg
sarl
inc
inc
xchg
cmp
add
frstor
leave
xchg
lcall
xor
or
test
push
inc
imul
lret
gs
insb
inc
int3
jmp
js
mov
lods
cmpl
xor
popl
pop
sahf
mov
xorb
add
fidivl
adc
addl
cs
jo
loopne
ss
push
je
sahf
sub
adcl
sti
cmp
std
rclb
and
in
jle
pop
jmp
inc
out
ds
out
sarb
jg
mov
cmp
mull
out
insl
loope
push
lods
mov
dec
pusha
popa
sub
idiv
cmpsl
jecxz
std
pop
jge
xchg
lods
sub
jb
daa
push
adc
je
in
mov
mov
sbb
pop
out
sub
loopne
xchg
add
iret
imulb
push
daa
insb
leave
shrl
fwait
test
cli
fmull
out
sub
fcoml
sub
out
mov
mov
std
fiaddl
test
dec
jg
call
lods
loop
jle
xchg
push
lods
pop
push
in
iret
push
mov
jns
jbe
sub
repz
xor
or
sub
jae
jp
andl
dec
xor
sbb
arpl
es
popf
push
mov
inc
add
inc
cmp
sbb
mov
and
jne
iret
adc
adc
mov
inc
negb
outsl
push
xchg
xchg
es
xchg
mov
xchg
jb
pop
sahf
inc
shrb
and
lcall
loope
imull
fwait
in
fs
sbb
sbb
jnp
shl
je
sbb
push
and
aaa
mov
lock
out
jae
lea
and
cs
rcrl
cld
ret
rep
ret
dec
lcall
ja
xor
insb
cltd
and
movb
fnstcw
cwtl
bound
push
enter
push
mov
adc
sbb
xor
add
mov
icebp
jge
push
or
popf
je
sub
mov
cs
sub
adc
pushf
push
jb
dec
aaa
test
mov
outsb
test
shll
stos
mov
int3
and
xchg
mov
push
mov
out
das
shr
sbb
pop
mov
in
sub
test
out
je
xchg
int3
data16
ja
pop
mov
popa
add
sbb
aaa
jae
xchg
test
adc
push
mov
mov
ljmp
push
loopne
lret
std
adc
dec
ja
ret
stos
sbb
in
sub
mov
daa
gs
pop
or
stc
mov
lods
stos
and
mov
dec
into
aas
inc
xchg
pop
mov
cs
push
mov
jns
lret
sarl
mov
fstl
stos
andl
icebp
mov
addl
xchg
add
jg
mov
stc
imul
loop
cltd
popa
shl
popa
jp
jecxz
inc
jmp
jmp
adc
inc
dec
dec
pop
movsl
add
ret
jb
sbb
xor
or
xchg
enter
cmp
mov
mov
in
js
inc
inc
pop
stos
iret
repz
fdivs
fiaddl
xor
ret
scas
jbe
bound
add
or
inc
stc
stos
sbb
mov
push
ja
pop
push
dec
ja
dec
stos
cli
ds
subl
jp
pop
sbb
int3
ja
int
cmp
sub
test
inc
mov
bswap
jmp
xchg
mov
lret
addl
push
cli
cmp
or
push
ret
jns
push
into
pop
mov
xchg
mov
ja
dec
out
inc
xchg
pop
mov
xchg
dec
jae
sahf
and
sub
enter
push
pop
lcall
filds
fnstcw
fdivl
loopne
in
ljmp
mov
repz
cwtl
imul
adc
jmp
dec
sub
or
imul
lods
and
fstl
rclb
or
test
popf
push
insl
jnp
flds
pop
or
mov
mov
das
add
and
fldt
je
xchg
xor
jae
cmp
insb
test
cmp
andl
xor
inc
mov
daa
in
scas
mov
sub
xlat
adc
loope
jae
test
std
cmp
cmp
dec
movsl
out
sbb
push
test
xchg
pop
mov
rolb
mov
cmpl
loopne
jle
xchg
sub
mov
inc
pop
dec
xchg
in
rolb
mov
mov
stos
cmovnp
add
test
xor
daa
pop
fiaddl
adc
and
cmpsl
jge
jmp
lock
xor
lods
cld
daa
outsl
lds
decl
xlat
cmpsb
ret
fcoms
cmpb
adc
icebp
out
shrl
test
inc
pop
mov
ret
or
jno
xchg
outsl
push
mov
mov
xchg
push
jae
sahf
sbb
lret
push
movsb
fimuls
sbb
or
dec
je
shl
xchg
push
stos
push
iret
fwait
int
mov
or
mov
sub
sbb
jb
scas
outsb
cmc
jbe
sbb
or
pop
add
ret
outsl
sbb
es
mov
sub
cmp
rol
aaa
dec
jo
xor
mov
add
sbb
scas
test
pop
or
pusha
push
inc
addr16
ror
or
inc
jmp
aaa
push
xor
and
ret
mov
pop
jns
pop
dec
mov
pop
jne
fistpl
fs
enter
dec
cmpl
xor
jb
mov
pop
mov
vorps
clc
repz
cmpsb
jns
lds
adcl
outsb
lods
inc
inc
pop
xor
imul
shll
call
dec
pop
dec
popf
add
jae
rcll
inc
ds
push
std
shr
push
aam
dec
mov
pushf
xor
clc
call
or
xor
fcomps
jmp
inc
inc
insb
push
pop
push
pop
xor
pop
and
push
lods
or
sbbb
aad
rcll
jb
ficoms
adc
cmc
in
std
dec
ds
push
out
test
push
mov
std
push
xchg
pushf
sbb
mov
fisttps
push
mov
push
xchg
jno
cmp
xor
pop
scas
out
repz
loop
inc
fildl
xlat
inc
mov
adc
pop
xor
aad
pop
insb
pop
leave
push
movsl
inc
push
mov
push
andl
movsb
addb
jae
xor
insl
mov
jno
stos
sbb
cld
fiaddl
sbb
jns
icebp
mov
test
lods
xor
lea
add
in
pusha
jae
cmpsl
dec
mov
and
inc
stc
nop
inc
clc
push
negb
sbb
add
lds
pop
add
icebp
add
sbb
add
mov
xchg
pop
je
nop
jno
mov
sbb
mov
scas
or
fildl
cltd
cld
enter
in
lret
insl
dec
mov
data16
dec
cmpsl
jecxz
ret
xlat
jp
mov
test
je
stos
stos
daa
jnp
inc
pop
imul
add
jns
cmpsb
loop
js
popa
xchg
or
mov
adc
jns
lea
out
sbb
scas
inc
stos
in
vphaddubd
ret
pop
push
mov
adc
fxch
mov
cmp
push
jns
jo
cmpl
test
cmpsb
clc
lock
sub
test
sub
out
dec
dec
xlat
and
jg
add
lods
pop
adc
call
jle
jne
sbb
int3
mov
jo
lahf
imul
pop
out
in
repz
xor
or
add
repnz
adc
stos
stc
lock
sbb
xchg
in
mov
mov
mov
inc
in
or
dec
js
or
nop
adc
fidivrl
push
jmp
shrl
leave
mov
in
sbb
dec
xlat
sbb
pop
lock
mov
bound
aaa
inc
cmp
pusha
jg
stos
fs
lea
add
sbb
xchg
pop
sbb
popa
hlt
cmp
xchg
sbb
cmp
mov
lea
inc
vmwrite
stc
jno
mov
fnstenv
lret
jge
lea
cld
adc
sub
inc
fwait
into
dec
jmp
push
sbb
cmp
xchg
push
xor
jp
call
push
push
shlb
popa
loope
mov
pop
adc
dec
andb
inc
mov
xchg
subb
and
xor
dec
inc
mov
mov
push
mov
jle
pop
sub
lcall
hlt
inc
stos
pop
cmp
and
push
outsl
and
fldl
lret
push
dec
iret
jbe
lea
jnp
sbb
fisttps
roll
incl
push
rol
out
cmp
aad
int3
mov
push
shrb
daa
lcall
push
push
dec
mov
enter
shll
and
out
push
jbe
fisttps
aaa
jno
dec
mov
cmpsb
xlat
paddsb
enter
and
out
xlat
pop
mov
add
jmp
stos
loop
xor
jle
int3
pop
cmpsl
jl
in
xorl
imull
mov
and
hlt
mov
ljmp
arpl
jecxz
mov
outsl
and
leave
cs
mov
pop
mov
lods
lret
add
and
insl
loope
inc
in
lahf
loopne
sarb
cmp
sti
stos
lahf
jno
in
out
sbb
in
notl
adc
or
jmp
filds
fs
out
dec
pop
xorl
jl
scas
negb
shl
inc
adc
sub
das
xchg
das
add
jns
fildll
mov
and
push
push
xor
push
mov
incb
and
push
xor
mov
cld
gs
xor
ret
nop
push
insb
add
adc
in
jb
movsl
or
roll
push
lea
adc
pusha
call
cmp
fdivrl
xor
mov
xchg
imul
lcall
sub
jbe
in
and
or
stos
adcl
xchg
in
mov
insb
or
lods
imul
mov
jns
push
testl
dec
xchg
and
in
pusha
loopne
std
das
es
rcrl
and
mov
scas
xchg
sub
inc
repnz
int3
repnz
sbb
gs
lock
ja
add
out
cld
xlat
ds
cmp
mov
mov
fidivl
xchg
dec
dec
pop
jle,pn
in
imul
xchg
ja
push
pop
push
loope
jae
cmp
sbb
mov
ja
inc
xchg
sub
stos
setbe
sbb
add
and
loopne
shlb
ljmp
mov
add
mov
pusha
xchg
sbb
jp
iret
mov
dec
xor
addr16
mov
movsl
insl
mov
pminub
stc
sbb
jo
icebp
jl
adc
xchg
sub
or
push
dec
pushf
lds
movsb
in
ret
jmp
inc
pusha
jl
ret
mov
imul
mov
stos
mov
cwtl
cmp
incl
inc
repnz
cmp
js
mov
pop
in
lret
and
loopne
adc
mov
mov
mov
sbb
pop
dec
arpl
daa
lret
and
dec
enter
lods
mov
lock
mov
add
dec
orb
lret
test
cmovnp
mov
in
pop
jmp
jle
std
call
fstpt
jg
loope
negb
gs
xchg
roll
jbe
pop
imul
movsb
push
in
pop
test
fwait
cs
je
mov
and
cmp
in
mov
clc
call
mov
mov
fwait
xchg
mov
mov
inc
mov
push
push
nop
xchg
add
fimuls
mov
ret
sbb
or
jle
push
xchg
sub
divl
cmpb
jl
inc
movsl
and
pusha
lcall
aaa
movsb
pop
dec
das
repnz
leave
adc
xchg
icebp
out
dec
cs
inc
pop
dec
pushf
out
cwtl
pop
jae
jno
es
mov
out
adc
add
add
cmp
mov
shrb
pop
fs
mov
daa
mov
xchg
inc
jb
pusha
mov
jmp
jge
mov
testb
sarl
jb
or
sbb
out
fsubrl
cmp
cmc
mov
push
pop
std
stos
xchg
stc
mov
fdivrs
pop
maxps
jecxz
mul
mov
lock
das
pop
ret
xchg
fimuls
mov
sahf
adc
mov
pushf
add
arpl
arpl
dec
pusha
rorl
jne
mov
cmpsl
adc
inc
adc
fldl
adc
mov
nop
cmp
jge
in
cmp
arpl
jg
xor
shrb
cltd
xor
pop
inc
sbb
add
loop
jp
lret
sbb
sub
inc
sahf
add
add
sub
test
insb
cmp
jb
shrb
in
mov
push
mov
pop
pop
jl
leave
or
pop
pop
jge
pop
in
add
sbb
jno
lret
stos
call
enter
sub
mov
mov
pop
ss
sahf
fsubl
or
and
cmp
cmp
sub
pusha
out
and
outsb
out
pushf
shll
js
or
insl
fcmovne
test
aaa
sti
addb
loope
dec
lret
inc
add
xor
mov
sub
stc
sbb
dec
jmp
jne
jge
ds
mov
mov
inc
popa
sbb
cmp
das
mov
iret
sub
mov
in
mov
mov
dec
or
cs
lcall
xchg
push
jne
pop
and
xor
fucomi
pop
jno
push
sbb
js
loopne
stos
push
cmpb
testb
insl
daa
pop
and
push
dec
mov
sub
cwtl
mov
lea
bound
lea
mov
and
outsb
fdivrp
or
js
mov
xchg
andb
daa
mov
andl
mov
adc
mov
repnz
mov
lret
clc
fldl
notl
pushf
inc
add
ds
mov
inc
xorl
mov
and
cltd
repnz
pop
lret
and
xchg
pop
mov
push
dec
test
cmp
inc
inc
cmpl
xchg
sub
mov
in
xchg
sbb
scas
adc
push
out
pop
or
add
cmpsb
and
inc
ljmp
lcall
mov
mov
xchg
and
movsl
sbb
push
inc
ret
add
cs
fsubrs
push
jne
cs
mov
mov
shll
xchg
daa
mov
roll
jns
cmpb
divl
jb
sbb
outsl
and
test
mov
pop
imul
jge
jge
mov
push
das
xchg
pusha
dec
in
adc
mov
push
or
xchg
pop
push
push
add
lea
mov
fs
mov
adc
imulb
aaa
and
push
scas
push
xor
pop
xor
pop
andb
shl
cmp
mov
imul
enter
jmp
adc
mov
adc
push
mov
mov
arpl
int3
stos
shl
mov
jle
mov
lods
pop
cld
mov
pushf
cld
pop
sbb
js
jecxz
pop
jge
fcom
clc
sarl
dec
or
fdivrp
iret
adc
cltd
add
adc
lcall
cmp
rcrb
or
mov
mov
ljmp
pop
cltd
repnz
jb
out
jbe
jl
mov
pand
push
push
xchg
mov
jbe
ret
aam
iret
std
sub
pop
cmpsb
test
out
fucom
inc
test
mov
mov
adc
rcll
dec
inc
sub
fsubrs
movb
test
xor
les
out
or
jne
leave
sub
cmc
test
popf
in
sar
push
enter
push
sbb
repnz
mov
pop
add
mov
pop
jecxz
cmp
pop
xor
pop
fdivr
jmp
xorb
aaa
inc
outsl
movsb
scas
jne
push
cmp
sbb
imul
aad
xor
cmpl
inc
sbb
daa
and
aam
add
daa
stos
fistps
push
popf
pop
std
sbb
test
push
daa
aad
aad
std
cmpsb
mov
cli
nop
mov
scas
cmpsb
jecxz,pt
mov
aas
stos
movsl
sub
jecxz
das
jne
xchg
sub
aaa
ja
add
mov
pushf
xchg
pop
aam
push
enter
mov
and
pusha
push
jnp
les
imul
jecxz
sub
adc
xchg
and
movb
mov
aad
arpl
or
enter
out
inc
popf
subl
jp
or
nop
mov
fwait
imul
iret
ja
cmc
push
add
mov
sbb
and
xlat
repz
iret
add
inc
clc
movsb
repnz
aam
scas
jecxz
fisubs
cltd
jbe
insb
outsl
push
jno
fcmovbe
xchg
mov
jae
repz
lock
fnstsw
das
add
xchg
out
daa
daa
mov
test
cmp
mov
and
repz
cmpsl
imul
std
add
stc
mov
out
mov
je
int
out
pop
loop
pop
aas
fcmovnu
fs
movsb
add
std
inc
sbb
hlt
mov
inc
les
pop
into
mov
mov
inc
pop
sbbb
push
xor
cs
enter
imul
lcall
or
mov
push
subb
divb
mov
add
icebp
insb
and
jmp
sbb
pop
nop
rolb
jnp
and
sub
adc
pop
adc
lcall
xchg
sbb
add
adc
cwtl
call
pop
das
jns
xchg
or
shlb
mov
mov
je
sti
xchg
mov
fldt
dec
xor
fidivrl
fs
inc
hlt
push
pop
xor
stos
test
fs
jmp
add
aaa
pusha
mov
inc
mov
sub
ja
lahf
leave
lret
inc
xchg
jmp
mov
bound
stos
out
clc
cwtl
cmp
jmp
add
push
mov
shrb
sbb
repnz
enter
inc
add
outsl
push
add
sbb
out
int
inc
out
jne
sbb
pop
and
scas
cwtl
add
sbb
shr
and
adc
jae
fnstenv
add
dec
mov
je
fwait
sti
sub
nop
shlb
xchg
mov
mov
incl
jmp
hlt
push
scas
jmp
cwtl
pmulhuw
shll
sti
add
xlat
jp
cli
dec
iret
lret
pop
xorl
xchg
xchg
xor
in
xchg
int
pop
and
into
sbb
sub
push
shlb
aaa
mul
or
dec
daa
cmp
cmp
out
add
mov
testb
cmpsl
aad
mov
fiaddl
pop
inc
call
push
or
push
lods
and
mov
push
xor
jns,pt
pop
sub
arpl
call
xchg
ljmp
cmp
pop
popf
adc
mov
dec
adc
pusha
popa
fsts
jae
dec
les
in
imul
mov
mov
scas
outsl
in
lahf
jmp
sbb
mov
sub
sub
jg
into
les
movsl
dec
in
fs
rclb
idivl
test
push
scas
andb
xlat
push
movsl
testb
repnz
je
or
jmp
repnz
mov
in
test
add
lret
push
cmp
int3
lods
jecxz
add
imul
test
mov
and
push
idivb
cmp
ret
iret
jp
in
pop
cmp
push
dec
mov
pop
and
xchg
mov
cwtl
shll
xor
lahf
xor
dec
push
inc
cmp
jecxz
or
in
cmp
fmul
mov
outsl
iret
add
mov
fidivl
out
mov
rep
pushf
push
std
xor
cmp
push
jnp
mov
jmp
das
fnstsw
xchg
insb
enter
mov
lea
jns
popa
sub
mov
and
add
sub
fs
mov
icebp
scas
mov
mov
jbe
and
fcompl
clc
sbb
and
jl
movsb
lock
ljmp
mov
outsl
popa
out
std
adc
mov
cli
xlat
in
mov
or
jno
xchg
adc
lret
push
add
lods
sti
mov
lret
mov
fimuls
adc
push
mov
inc
push
sbb
cmp
loopne
mov
xchg
cmpsl
or
mov
cmp
mov
add
scas
jmp
xchg
ud2
and
clc
xlat
movsb
lea
mov
push
stc
fucomi
popa
push
jmp
rolb
es
lea
mov
push
cmpsl
dec
inc
pushf
test
stos
test
vpunpcklqdq
and
mov
mov
cmp
mov
sub
stos
sti
shl
and
outsb
xchg
inc
mov
or
or
mov
xor
inc
lock
adc
jae
jecxz
loop
int
test
cmpsl
add
jle
gs
fsts
stos
mov
fstps
mov
in
stc
mov
pop
outsb
daa
push
mov
pop
mov
jg
cmp
jb
jmp
sahf
jl
xor
dec
sub
adc
mov
and
jne
out
add
mov
push
xor
int3
dec
sub
jne
rolb
xor
xchg
std
fcmovne
pop
jle
lds
adcb
test
dec
add
out
jl
adc
push
es
out
mov
add
inc
jno,pt
enter
inc
fsts
xor
mov
dec
mov
sbb
mov
dec
stos
cmp
sti
push
cli
andb
mov
int3
sub
xchg
push
jnp
sbb
nop
fsubrl
jmp
aam
ror
mov
sbb
int
cmpsl
inc
push
add
mov
push
daa
and
cmpb
pop
adc
xchg
outsl
jo
lret
pop
push
and
je
add
out
mov
and
outsb
in
sbb
adc
cmp
daa
pop
ret
pop
lods
lea
push
mov
adc
loope
inc
sub
push
dec
rcrl
outsl
das
call
mov
xchg
sub
pop
fs
sbb
insb
or
add
push
dec
das
sub
ror
popa
imulb
std
cmp
cltd
shlb
cs
mov
adc
lea
sbb
dec
insb
mov
jo
out
ljmp
das
fcmovnb
add
xchg
movsb
ret
outsb
outsl
jle
dec
sbb
iret
cmp
aaa
mov
sbb
pop
jg
aad
inc
out
jg
mov
mov
add
imul
loopne
icebp
push
popf
cmp
adc
fwait
cmc
and
insb
ret
cld
xor
int
aad
sub
lods
mov
ss
add
dec
xlat
inc
push
push
mov
jle
xchg
push
mov
inc
xchg
js
fisttpl
adc
popf
push
lahf
jo
add
add
sti
and
repz
sbb
or
loope
jno
mov
rcll
dec
repz
adc
fisttpl
sub
dec
dec
jae
rcrl
mov
push
adcb
lods
aam
loopne
jnp
mov
adc
dec
push
lret
push
mov
mov
or
pop
or
jle
lods
lcall
push
fcomps
das
rorb
push
xchg
pop
loop
jmp
in
lret
push
jl
cltd
mov
data16
xor
mov
aad
mov
mov
fsubrp
ss
mov
insb
or
ljmp
xchg
cmc
icebp
mov
mov
ljmp
xor
aam
out
repnz
es
in
shll
mov
icebp
incb
or
out
dec
popf
pop
fildl
jb
shlb
mov
popa
out
xchg
adc
insb
push
leave
pop
cmp
mov
mov
lret
inc
nop
cmp
mov
lret
cmp
jmp
or
jg
push
cld
mov
enter
jb
adc
dec
sbb
sbb
in
jmp
out
adc
xor
push
xor
inc
in
jp
scas
pusha
insb
dec
shrl
outsl
pop
popa
dec
xchg
lahf
xchg
ret
lods
push
sub
inc
arpl
xor
stc
and
push
and
push
add
jl
iret
loopne
mov
dec
dec
movsl
and
lcall
call
lea
orl
js
inc
adc
pop
mov
loop
loop
fidivl
in
ret
stos
imul
add
popa
daa
lret
dec
std
mov
ljmp
pop
cmpsb
xchg
fstps
and
xlat
push
cmpsl
mov
das
inc
jp
rolb
ds
jg
inc
addr16
mov
push
ret
jg
aaa
pop
icebp
lods
rclb
pop
inc
mov
add
xor
push
jmp
pop
loop
ror
mov
adcb
notl
adc
pop
sbb
xor
mov
popa
push
mov
push
and
out
cmp
pop
jbe
mov
movsb
pop
call
inc
push
popl
scas
dec
gs
ret
ret
pop
sti
into
inc
mov
hlt
inc
xor
inc
ret
jb
ds
and
add
xor
icebp
dec
xchg
mov
std
repz
and
mov
mov
stc
mov
test
popa
sub
sbb
sub
les
test
sub
jge
or
lret
mov
adc
sbb
push
sbb
das
lret
cli
mov
xor
dec
pusha
jg
add
aad
xor
call
xchg
cmp
mov
mov
cvtdq2ps
dec
out
popf
push
adc
movnti
push
dec
fadd
pop
jnp
dec
cmc
or
mov
ret
mov
repz
pop
mov
push
jbe
push
or
shlb
and
mov
dec
mov
inc
add
fld
cmc
je
lcall
shlb
stc
inc
sbb
aas
leave
mov
xor
jmp
les
pop
jo
and
xor
sbb
mov
orl
movsb
adc
cmp
inc
push
adc
mov
cmpsl
imul
mov
mov
cmp
jb
xor
push
mov
data16
lock
sbb
clc
mov
jbe
ljmp
movsl
xlat
and
outsl
jp
xchg
ljmp
pop
jg
stc
pop
das
rep
jecxz
pop
nop
in
adc
mov
pusha
rol
data16
sub
sbb
ja
mov
mov
scas
dec
dec
xchg
push
pop
mov
inc
stc
pop
insl
stos
push
sub
xchg
add
es
dec
dec
add
inc
and
out
ds
ror
cmpsb
leave
jno
dec
dec
push
push
in
cwtl
add
xchg
movsl
lods
xchg
scas
push
push
in
pop
loopne
in
sub
js
and
stc
shll
fbstp
hlt
sbb
sub
fiaddl
push
and
clc
pop
int
data16
add
dec
mulb
and
insl
sub
jl
or
lcall
sub
pushf
cld
mov
call
push
daa
hlt
adc
mov
mov
int3
dec
pop
xchg
jno,pn
repz
xor
push
loopne
int
icebp
push
adc
clc
add
add
adc
lods
cli
dec
and
push
inc
pop
and
scas
jnp
or
scas
in
adc
push
pop
xor
cwtl
ds
or
mov
add
sub
and
lahf
or
cmp
jno
push
xor
fsub
sti
aas
lods
popa
adc
xor
movsl
mov
adc
pushf
repz
rcrb
lock
pop
sbb
lock
and
inc
and
pop
dec
add
lahf
push
mov
les
pop
aad
pop
test
roll
ja
or
out
loope
push
cmpsb
mov
pop
je
cmp
pop
ds
lret
cmp
lcall
dec
call
jmp
mov
push
and
cmc
xchg
dec
fcomps
xchg
int
out
cmp
lcall
cmp
add
jg
icebp
subl
mov
mov
xor
adc
dec
outsb
mov
lds
jle
in
cmpb
push
icebp
pop
leave
or
jp
movsb
xor
fs
lret
push
js
ds
repnz
test
xchg
xchg
or
jo
jbe
xlat
ljmp
fwait
xor
xlat
imul
mov
mov
lret
icebp
jne
insb
aam
lods
cs
mov
cmp
push
cmp
mov
inc
das
fadds
cltd
shlb
inc
sub
or
sub
fscale
pop
insb
mov
jl
jecxz
pop
adc
out
pop
xor
int
xor
or
fimull
dec
cmp
ret
xchg
sub
cmp
cmp
pop
and
clc
jo
repz
cmpsl
xchg
cmp
cmovno
and
repz
and
sub
hlt
cmp
cmp
fimuls
sub
push
ds
leave
jle
gs
insl
xor
fdivrl
xchg
xchg
and
pop
mov
lock
inc
ret
push
ljmp
pusha
add
push
insl
insb
sbb
mov
and
or
inc
push
dec
push
xchg
int
and
adc
sbb
stos
push
push
adc
mov
pop
hlt
mov
lds
int3
xchg
pop
or
dec
pop
add
adc
stos
das
cmp
add
mov
loop
and
lock
imul
or
jg
in
mov
cwtl
inc
or
lods
mov
mov
pop
mov
xor
mov
sbb
ljmp
add
sbb
clc
or
daa
insl
inc
add
iret
or
leave
in
fiadds
aam
mov
test
mov
and
inc
je
jns
push
cmp
aad
mov
push
call
mov
dec
jmp
xlat
pop
test
movsb
fucomi
xor
std
jne
sub
push
push
out
pop
jl
sbb
aas
or
loop
outsl
shll
xchg
push
mov
cmpsl
add
aam
imul
fwait
add
fsts
mov
mov
mov
sahf
ret
cmpl
sbb
scas
sti
jne
popa
sub
lret
aaa
testb
leave
mov
mov
xchg
mov
cmpsl
outsb
inc
mov
das
or
push
sbb
cmpl
xor
out
xchg
cmp
sti
lcall
mov
xor
mov
lahf
in
add
dec
jge
insl
inc
shl
jmp
enter
xor
mov
mov
ljmp
pop
dec
push
dec
jb
pop
lcall
pop
jns
stc
ljmp
push
pusha
adc
xchg
inc
out
in
mov
scas
sub
fnstenv
je
or
xchg
inc
dec
mov
jnp
dec
aad
pop
pop
in
and
loope
jbe
sbbb
push
inc
jb
lret
lods
movsl
xchg
cld
xor
cmp
inc
sbb
mov
xchg
pop
fdivl
int
leave
xrelease
push
xor
adc
orl
das
mov
mov
push
shll
call
aam
mov
or
push
pushl
pop
mov
pusha
das
jecxz
mov
push
adc
data16
mov
push
pop
icebp
bndstx
mov
fsts
imul
shl
sub
nop
dec
into
out
inc
push
insb
les
test
cmpsb
add
xchg
push
push
ja
add
mov
sbb
loope
test
push
xchg
xchg
dec
insb
fistl
dec
mov
ds
les
inc
cmpsb
lcall
jno
push
imul
ljmp
xchg
loope
dec
enter
ds
fidivrs
mov
or
mov
cmp
les
lea
pop
and
mov
outsb
pushf
mov
cmp
ja
jbe
jmp
fmul
pop
jl
movsb
push
sub
or
nop
push
mov
and
repz
inc
shlb
ja
xchg
mov
mov
lret
pop
mov
gs
imul
mov
or
cmp
xor
je
fiaddl
xor
or
push
in
jecxz
incl
add
sbb
push
pushf
outsl
loope
dec
subl
pop
imul
pop
dec
or
jge
mov
mov
scas
push
inc
inc
cmp
repnz
push
stc
sub
jbe
or
jmp
and
xor
inc
arpl
lods
sbb
clc
scas
mov
lea
pop
rcrl
bnd
jns
sbb
loopne
mov
stos
repnz
jp
jns
cmp
push
sar
imul
fldt
sub
cli
push
inc
popa
out
gs
test
mov
xchg
call
lock
arpl
cmpsb
int
pop
pop
dec
jae
add
and
or
leave
clc
testb
push
addr16
jb
dec
jp
xchg
add
imul
mov
cmpsl
mov
pushl
test
into
insb
jae
call
mov
jbe
and
push
ljmp
mov
adc
repnz
dec
sub
int3
adc
mov
movsl
sub
xchg
loop
stc
jge
ja
mov
push
incb
pushf
fcomip
sub
sub
mov
sub
lret
loop
ret
orl
and
sub
and
cmc
ret
subps
jmp
lds
push
cmpsb
es
lahf
stc
fcom
push
add
jae
or
je
mov
out
and
add
jne
hlt
shlb
sbb
dec
or
mov
inc
into
int3
mov
jmp
mov
int3
or
jns
jmp
in
xor
mov
cltd
push
cltd
mov
pop
dec
in
lds
insb
push
roll
faddl
stc
xchg
pusha
leave
sbb
push
out
and
xchg
xor
jecxz
inc
mov
daa
xchg
mov
enter
rcrl
clc
sbb
rorl
sahf
xor
outsl
sub
push
sti
or
push
fwait
arpl
mov
sarl
cmpsb
xor
mov
push
dec
adc
pop
push
scas
dec
aas
xchg
add
sar
cmpsb
add
or
or
xchg
xor
stc
add
dec
icebp
inc
sub
mov
aam
and
xor
rclb
stc
mov
dec
bound
imul
ds
movsb
lahf
bound
outsl
orl
data16
gs
cld
fildll
jecxz
mov
push
stos
test
mov
pop
sbb
lods
inc
insb
je
jb
jg
imul
pop
mov
repnz
lods
fwait
push
rcrb
cmp
pop
adc
jecxz
inc
and
stos
dec
lret
gs
mov
jmp
fdivrl
dec
test
add
jne
and
test
add
stos
pusha
mov
arpl
inc
cwtl
or
test
and
fnsave
ljmp
mov
sbb
sbb
ror
test
arpl
frstor
fisubl
les
into
popf
push
imul
mov
faddl
or
movsb
in
je
adc
push
xor
xchg
or
mov
jnp
xchg
repnz
pop
sbb
imull
scas
dec
dec
inc
and
add
pop
push
and
xor
ds
ret
or
jmp
leave
ljmp
xchg
jle
imul
add
dec
out
mov
idivb
jnp
mov
dec
cmp
xor
fmuls
cmc
fists
cs
mov
and
icebp
ss
mov
rorb
addr16
aam
cltd
jo
aas
xlat
add
sub
or
test
cli
cmp
icebp
mov
fdivrl
fwait
jl,pn
push
inc
aam
test
imul
add
cmp
clc
js
test
xchg
jnp
popa
movsb
test
and
push
or
mov
push
mov
ljmp
adc
jmp
add
scas
or
pop
add
pop
je
inc
xchg
mov
or
push
repnz
push
mov
xor
xor
out
into
cmp
pop
lods
dec
and
pop
into
es
test
fwait
popf
mov
dec
mov
notb
add
xlat
jge
xor
sub
add
pop
xor
loope
sub
inc
mov
mov
sub
fdivrl
sub
and
xchg
xchg
pop
jnp
les
xor
pop
insb
lock
ficomps
sbb
push
into
push
sti
ja
push
or
pop
lods
inc
imul
xor
and
dec
imul
cmp
sub
pop
mov
pusha
sti
sbb
jg
les
aaa
xchg
mov
xchg
mov
xor
xchg
pop
or
leave
mov
scas
mov
js
jle
int
mov
or
mov
lret
push
xlat
arpl
xor
and
or
and
les
pop
pop
and
mov
enter
stos
lahf
xchg
loope
lahf
add
movb
dec
add
je
aam
in
hlt
cmc
dec
pop
cmp
adc
fidivs
jecxz
and
cmpsl
add
insl
or
addr16
mov
pop
dec
mov
jnp
cmpsl
add
cmpsl
fs
push
push
mov
mov
jns
xchg
pop
push
xor
into
pusha
loope
movsb
mov
jp
xchg
lahf
inc
lea
mov
cmp
adcb
mov
inc
jmp
pop
arpl
cs
leave
aaa
add
imul
js
data16
sahf
xchg
in
jmp
popf
js
pop
mov
gs
mov
imul
ret
and
rcrl
sub
cltd
lock
in
jns
jg
popf
add
sbb
fs
sbb
lahf
outsb
dec
pop
push
inc
popa
pop
jl,pn
adc
into
fimuls
adcb
sti
sbb
test
pop
xor
sub
arpl
cmp
jo
push
dec
jne
jne
pop
daa
dec
pop
stos
andb
loop
xchg
lods
mov
ss
cmc
test
inc
scas
mov
jae
push
pop
lods
cld
push
repnz
jb
lahf
sar
cmc
cwtl
in
int3
push
xchg
pop
hlt
xor
iret
mov
mov
popf
mov
cmp
cmp
cmp
and
pop
sbb
mov
fstpt
dec
loop
cmp
les
sahf
sbb
xor
sub
enter
dec
into
les
iret
fstps
sub
loopne
inc
aam
call
push
or
add
pop
xor
or
mulb
mov
push
lcall
xchg
xchg
leave
jo
int3
lcall
inc
pop
mov
jecxz
inc
or
mov
clc
stc
loopne
lock
pop
mov
outsl
xchg
test
pop
leave
pop
aaa
fldt
orl
lret
and
sbb
add
rcll
lahf
call
push
rclb
hlt
repz
xchg
aaa
call
mov
add
sub
pop
mov
cmp
iret
sbb
std
push
xor
mov
cmp
cmpsb
enter
aam
push
jb
pop
pop
jns,pt
push
adc
aaa
cmp
mov
sbb
iret
mov
cwtl
or
xor
mov
mov
add
lcall
jmp
pop
push
cld
sbb
imul
or
sbb
ds
arpl
cmp
mov
call
lock
sub
sub
data16
or
adc
int3
outsl
cmp
jmp
pushf
jge
rcr
sbb
pop
jle
jge
pop
pop
push
test
mov
jne
movsl
popa
push
push
lods
pop
mov
dec
jno
arpl
mov
or
mov
push
ret
add
outsb
xor
test
inc
xchg
je
in
inc
add
push
pushf
xchg
inc
jae
loope
insl
popa
cld
lock
mov
ds
xorb
and
dec
daa
cmp
nop
inc
loopne
or
sub
pop
dec
inc
shll
push
pop
push
stos
ret
sahf
adc
pop
in
xchg
mov
mov
xchg
sbb
xor
movsl
push
in
sub
movsb
dec
clc
adcb
inc
les
lret
fildl
call
addr16
ja
jle
outsb
out
jae
repz
and
sbb
test
inc
jmp
fwait
cmpsb
outsb
shr
push
jae
pushf
into
loope
cmp
inc
sub
and
lahf
xor
idiv
xchg
test
jl
pop
cmp
jp
cmp
cmpb
lahf
dec
out
cmpsb
push
add
xchg
adc
mov
push
sub
mov
sub
loopne
lods
or
mov
add
add
push
frstor
pushl
js
hlt
sahf
outsb
nop
sbb
cwtl
add
jbe
sahf
stos
addb
rcrb
mov
inc
xor
outsb
icebp
ret
mov
int3
insl
adc
pusha
into
jnp
mov
adc
add
jle
mov
push
xchg
aas
jno
clc
stc
mov
xchg
movsb
inc
mov
std
jmp
jmp
sub
sub
mov
insb
mov
adc
or
bound
sarl
in
rcr
and
std
fstp
cmp
jg
push
push
loop
push
xchg
jo
adc
mov
out
push
sub
push
lahf
in
sbb
lock
lcall
add
xchg
pushf
pusha
mov
mov
cld
gs
lcall
test
in
rorl
cmp
mov
cmp
cld
test
xchg
mov
mov
push
xchg
and
or
push
ja
mov
sub
adc
leave
mov
into
popf
xor
in
stc
or
or
or
nop
daa
stos
idiv
inc
cmp
sbb
inc
cmp
fisttpl
cmp
mov
ret
arpl
sbb
aas
aas
dec
test
dec
jp
fwait
hlt
xchg
push
jle
in
xchg
les
mov
pop
xchg
popa
cmp
std
in
xchg
mov
lret
data16
lock
mov
mov
dec
push
out
in
std
sub
push
stos
jge
mov
cmp
ja
mov
push
out
or
imul
dec
mov
mov
scas
jne
data16
cmp
ljmp
and
fadds
pop
adc
stc
out
and
add
pop
std
iret
faddl
or
mov
xor
mov
mov
and
sub
sub
lea
lahf
ret
je
mov
dec
jbe
pusha
mov
mov
xchg
data16
fistps
arpl
lods
mov
xchg
movsl
lock
clc
pop
loopne
scas
xor
jne
xor
sbb
jnp
mov
rcrb
scas
cli
xor
push
dec
pop
or
dec
and
mov
mov
aas
inc
lret
dec
xor
arpl
dec
add
subb
or
xor
and
xchg
popf
ret
data16
mov
jmp
inc
addb
sbb
addl
and
inc
mov
mov
inc
mov
lret
sub
jp
fdivr
pop
or
imul
add
adc
hlt
xchg
cs
lea
jg
adc
sti
sbb
mov
xchg
dec
adc
iret
fdiv
and
repz
rcl
loop
push
fldl
or
jge
add
orl
leave
pop
sar
cmp
or
or
adc
lahf
and
test
mov
mov
cmpsb
cmp
aad
call
pop
jae
mov
movsl
fmul
xor
cld
and
test
dec
xor
scas
fdivs
mov
sub
lret
mov
jno
mov
rorb
jnp
jge
adc
ucomiss
xor
js
mov
daa
repnz
scas
mov
xor
hlt
mov
add
insl
dec
dec
pushf
xchg
xor
and
xchg
sub
lds
outsl
ja
push
mov
jbe
sar
cmp
sahf
cmp
and
rorl
adc
pop
shrb
add
je
mov
pop
sub
in
pushf
rcrb
fmul
sarl
in
orl
in
mov
test
dec
jp
jl
fsts
fcomps
ja
adc
push
xchg
or
push
xor
div
jmp
loop
cwtl
inc
and
fstpl
daa
push
mov
sbb
insb
out
push
sub
pushf
inc
in
int3
ret
adc
xchg
pop
and
mov
sub
mov
call
movsl
popa
pop
movsb
fnsave
cmpsb
shll
cmp
xchg
pop
pop
out
pop
enter
sti
in
cmpsb
mov
inc
push
ficomps
cmovo
mov
repnz
in
xor
mov
lods
lret
shlb
scas
push
xchg
and
in
or
ficompl
mov
mov
xchg
filds
mov
clc
cmp
jbe
fbld
mov
cmp
js
adc
clc
dec
clc
test
lods
es
cmpsl
call
bnd
push
loope
dec
mov
out
sbb
push
sbb
cmc
outsl
rolb
xor
mov
data16
ja
ret
arpl
pop
add
mov
je
sub
into
mov
add
jne
and
mov
jae
popf
adc
jg
add
lds
add
pusha
add
mov
adc
jb
mov
andb
es
test
dec
enter
fcompl
sbb
dec
repz
sbb
cmpsb
mov
xchg
das
jle
xor
in
mov
ret
jae
ljmp
movsl
mov
mov
xor
pop
hlt
jmp
and
mov
outsb
call
and
arpl
mov
rclb
adc
dec
dec
dec
xor
mov
push
cmp
inc
jmp
imul
inc
icebp
sub
cmpsb
xor
insl
fwait
ja
jmp
call
notb
daa
shr
popf
pop
pop
xchg
push
push
cmpsl
aad
neg
mov
test
bndldx
jp
xchg
rclb
jl
jno
pop
fs
popa
imul
int3
in
xor
orl
mov
leave
movsb
test
mov
rolb
jmp
loopne
mov
xorl
dec
pop
imul
dec
mov
lods
mov
lret
sbb
outsl
stc
cltd
mov
imul
rclb
mov
adc
xor
inc
pop
lcall
je
test
adc
inc
movups
mov
xchg
adc
sbb
lret
test
fildll
rorl
xchg
data16
cmpsl
push
adc
add
popa
ds
xor
fidivrl
call
cwtl
xor
add
neg
jae
or
out
data16
ficoms
aas
clc
push
bnd
pop
dec
incb
jo
push
popa
pop
pushf
xor
decl
stos
and
push
pop
mov
mov
jmp
je
ffree
cli
xor
in
ficoms
xchg
pop
cli
dec
jnp
jp
jno
dec
xor
xchg
mov
fdiv
xchg
jo
js
sbb
in
vmovntps
lock
add
sub
outsl
lret
loopne
cwtl
in
imull
aas
sbb
and
arpl
test
pop
movsl
int3
test
pusha
mov
int
mov
adc
cmp
in
jg
subb
dec
xor
xchg
out
out
aam
pushl
nop
sbb
ljmp
mov
in
dec
icebp
std
xchg
add
mov
in
roll
cmp
cmpsb
xchg
pop
mov
xchg
pushf
jle
int3
lds
es
cmp
add
out
cmp
and
rcrl
add
cmpsb
xor
fadd
adc
ret
xor
sub
pop
ss
fwait
and
add
mov
add
mov
adc
jb
mov
roll
leave
loopne
rclb
add
xor
stc
and
sahf
pop
notl
iret
lods
test
sbb
adc
imul
mov
push
jge
mov
rcll
cmc
dec
mov
xchg
idivl
insl
adc
push
cmc
pusha
daa
mov
pop
mov
mov
in
xor
jp
data16
iret
lcall
fimuls
lods
sbb
mov
pop
divl
dec
jp
rcll
lods
adc
cmp
mov
js
enter
cmp
fdiv
in
jb
xchg
mov
sub
xchg
push
jl
ja
and
pop
fs
pop
and
bound
dec
iret
cwtl
xchg
xor
jbe
pop
inc
cwtl
push
cmp
dec
les
cmc
subl
push
lret
sub
and
adc
and
sbb
ss
cs
add
jg
xchg
push
sbb
imul
adc
lods
lods
inc
pop
in
add
icebp
mov
mov
adc
clc
dec
les
xchg
imul
adc
add
dec
mov
shll
jne
sub
xchg
int3
cmp
dec
mov
imul
and
add
cmc
push
and
out
pop
mov
insl
pop
testb
lret
and
sahf
adc
pop
rcrl
call
loope
cmp
dec
sub
sbb
orl
mov
out
scas
inc
and
add
jge
imul
cmp
test
jbe
dec
sub
lret
lret
movsb
into
or
push
cwtl
std
inc
sbb
stos
adc
and
pop
mov
mov
dec
xor
mov
add
mov
fbld
push
rorb
mov
mov
push
and
xchg
arpl
mov
inc
ret
sub
push
push
xchg
jnp
add
and
add
lret
pextrw
subl
movsb
dec
faddl
xchg
xchg
in
gs
dec
ja
xorb
xor
ds
out
fstl
test
fsubp
sbb
out
xor
push
outsl
push
sub
sub
call
out
mov
es
jnp
repnz
es
cmpsl
outsl
mov
sbb
inc
in
inc
es
xchg
add
push
mov
xorl
jg
push
add
mull
cli
mov
mov
sbb
dec
das
int3
push
lea
cli
push
inc
cmp
cmp
and
jae
push
arpl
and
gs
adc
mov
cmp
aas
ret
into
jl
outsb
imul
or
mov
xor
jg,pn
scas
data16
cld
ljmp
jne
jg
ficomps
lret
aam
nop
in
cmp
aad
in
jl
jae
jle
mov
gs
inc
pusha
dec
push
dec
cmp
pushf
push
and
std
jmp
fildll
push
mov
icebp
gs
faddp
xor
and
mov
adcl
inc
lock
jg
inc
movsb
vpsubsb
xlat
lds
lcall
inc
loope
jns
adc
or
push
jbe
movsl
clc
addl
daa
aam
jp
aas
fwait
inc
bound
sub
bound
out
or
mov
jmp
mov
in
cs
stos
dec
xor
loop
iret
jo
mov
cmpsb
jp
mov
loop
into
pop
stos
add
in
dec
scas
cmc
jle
bound
andb
push
sbb
xchg
int
cwtl
fsub
mov
mov
push
mov
rclb
sub
jbe
repnz
iret
aam
aad
xor
mov
mov
pop
fadds
cmc
mov
or
loop
xchg
xchg
push
cltd
mov
out
or
mov
fiaddl
or
out
ljmp
shrb
shl
and
add
pushl
sub
inc
mov
mov
dec
mov
push
sbb
rcll
or
clc
pop
mov
inc
out
push
pushf
fildl
inc
negl
mov
and
scas
dec
frstor
call
out
push
jl
sbb
imul
sub
ss
scas
dec
mov
rorl
andb
push
and
scas
xchg
dec
in
fcomps
and
movsl
push
mov
inc
bound
xchg
lds
aad
mov
add
sub
xor
lods
cli
dec
and
aam
sbb
or
popf
pop
xchg
test
ds
xlat
adc
add
and
lcall
mov
fcoml
push
push
bound
rorb
inc
jg
filds
push
cmp
cmpsl
add
leave
sbb
fadd
cmp
lea
and
inc
push
lcall
mov
jns
movsb
jns
xchg
xor
movsl
rcrb
mul
cmp
mov
and
push
add
iret
aad
xchg
and
test
ret
into
ficoms
lock
jnp
notb
iret
nop
push
adc
je
push
insl
jp
cmp
aaa
or
mov
jmp
xor
xor
sbb
push
or
or
xchg
push
rorb
cld
mov
or
xlat
pop
fwait
push
xchg
pop
ret
stc
inc
ljmp
shr
sbb
aas
mov
pop
shl
xchg
push
lods
fbld
loope
lret
inc
xchg
testl
jg
sbb
mov
ficoml
outsl
scas
repz
pushf
mov
adc
rorb
pop
jecxz
mov
outsl
int
mov
and
and
jbe
xor
test
movsl
insl
xlat
jp
test
test
mov
xor
xchg
lock
rorb
fwait
lahf
cwtl
xchg
in
scas
pop
push
aaa
jp
push
or
mov
adc
arpl
cmp
adc
sti
pop
push
rolb
insb
sub
add
subb
ds
rcll
mov
adc
cmpsb
cli
dec
wrmsr
out
aam
pusha
lret
div
hlt
cmpsb
les
mov
and
or
mov
push
dec
sbb
out
call
in
lock
xor
cmp
fists
ss
into
sub
cmc
jae
fildl
add
inc
shrl
stos
sti
jl
xchg
mov
xor
imulb
cmp
lahf
mov
mov
fs
push
pop
call
test
jo
pop
jg
push
arpl
cld
repnz
out
jno
sbb
or
push
mov
loop
push
pushf
jg
shrl
outsb
pushf
jl
cmp
clc
inc
cs
loope
int
test
push
das
pusha
lcall
sbb
sub
fisubs
inc
xchg
movsb
jp
lahf
je
js
jle
cmp
aas
das
jg
cs
loope
hlt
mov
push
lret
imul
test
aaa
in
out
movb
jg
aaa
xor
stc
adc
inc
jle
out
pop
dec
inc
cmp
push
mov
push
mov
inc
repz
jp
push
repz
and
adc
idivb
out
in
adcb
lret
scas
xchg
cmp
ss
daa
in
std
fdivrl
lea
ds
std
fldcw
sbb
into
aaa
xor
mov
adc
jns
xor
lcall
inc
inc
pop
daa
int
inc
icebp
cmp
jmp
jecxz
adc
cmp
gs
sub
lds
mov
add
loope,pn
or
ret
jns
cmp
sub
mov
mov
cld
imul
les
mov
rolb
mov
dec
mov
jp
sbb
push
push
es
cmp
push
pop
xor
out
lock
sub
lock
shll
mov
pop
iret
sbbl
inc
mov
adc
sti
xor
cmp
xchg
dec
into
adc
mov
mov
je
xor
gs
xchg
mull
mov
sub
adcl
es
das
mov
sbb
in
fcoms
push
xchg
mov
jo
pop
mov
test
jbe
push
adc
push
fldt
clc
das
addr16
xchg
faddl
xchg
sub
ret
fdivrl
mov
fcompl
jp
mov
jae
dec
push
out
fmull
sar
lahf
mov
lock
cmpsb
sub
add
ret
std
jg
xchg
mov
ret
jecxz
xchg
adc
enter
jno
cltd
scas
push
xchg
idiv
push
xchg
add
lea
pushf
push
fsubp
and
sti
inc
in
or
outsb
rorb
dec
jae
pushf
dec
mov
int3
imul
xor
lahf
jb
outsb
add
addr16
imul
pop
dec
jl
push
aam
out
bound
dec
out
dec
test
inc
xor
push
inc
mov
les
inc
inc
insl
loope
mov
xlat
loope
push
push
cmp
sub
push
inc
cmp
add
adcl
add
fisubrl
cs
pop
jnp
int
jnp
mov
loope
dec
lret
adc
int3
and
scas
mov
mov
adc
mov
mov
loop
push
ja
xor
es
in
or
mov
sarb
sub
inc
push
add
or
fnsave
sub
mov
int
mov
imul
ja
sub
adc
push
cltd
adc
push
outsb
jg
outsl
clc
imul
jle
test
pop
cmc
push
je
aam
pop
cmpsl
xchg
sbbb
mov
and
and
dec
adc
push
add
mov
pop
push
mov
int
std
mov
xlat
pushf
in
stc
aam
adc
and
add
leave
sbb
sub
jge
fnsave
adc
cmpsb
repnz
out
addb
fidivs
mov
enter
aas
iret
cmp
scas
jns
sub
mov
into
or
stc
adc
fs
mov
cld
adc
and
es
mov
mov
dec
xor
addr16
std
fs
cmp
add
xor
mov
cmp
mov
sti
and
adc
fwait
ds
ficomps
shl
mulb
or
je
xchg
outsb
and
les
loopne
popf
jg
cmp
enter
mov
xor
test
cmpsl
xor
sbb
and
jg
push
and
loopne
aam
pop
test
fcoms
call
mov
jmp
not
insb
and
xor
and
jno
inc
test
mov
nop
out
fs
test
hlt
xor
movsb
or
mov
inc
repz
or
loop
in
shll
aam
inc
call
insb
mov
stc
sbb
mov
mov
adc
aam
or
popa
call
ss
push
xor
mov
in
cmp
and
push
fstp
or
cmp
fwait
out
std
int
aad
insl
pushf
xchg
pop
daa
cli
cmp
add
out
and
dec
jne
dec
enter
xchg
jp
in
stos
es
fadd
mov
ja
lods
movsb
clc
mov
nop
cltd
ljmp
lret
push
lahf
jg
ret
mov
iret
cmp
es
xchg
fdivrl
sahf
add
clc
mov
icebp
push
pushf
mov
pop
call
loope
push
dec
or
push
xor
imul
and
faddp
int3
div
cmp
out
add
iret
sahf
stos
inc
jge
pusha
fstpl
jecxz
inc
insl
jp
addl
dec
out
jl
or
fs
or
sbb
cmp
jo
cmp
mov
movsb
jae
jbe
mov
cmpsb
jae
mov
jecxz
jbe
punpcklwd
in
popf
add
cmp
adc
adc
jbe
sub
cwtl
ficoms
hlt
cmpsb
pop
mov
cmp
xor
mov
sahf
pusha
add
adc
hlt
ret
jnp
std
cmpb
mov
pop
test
and
sub
add
pop
inc
scas
leave
adc
repz
mov
outsb
sar
or
call
jmp
in
das
mov
test
ret
mov
mov
dec
cmp
sarb
leave
gs
in
add
sub
pop
rolb
rolb
cli
or
fldl
dec
xchg
mov
xchg
cld
out
add
call
mov
lods
pop
fsub
adc
ds
sbb
mov
leave
pop
xor
ret
sub
jle
int3
xlat
inc
cld
mov
xchg
jne
xchg
add
fcmove
push
push
push
jo
cmp
lahf
jae
dec
pushf
mov
pop
mov
pop
js
adc
jb
xorl
stos
mov
inc
xlat
dec
testl
rcll
mov
lods
mov
inc
mov
ret
int3
insl
mov
repnz
dec
lods
and
movb
jnp
jae
pusha
xchg
pusha
add
cmp
push
sti
js
push
xchg
jns
or
cmp
cmc
mov
icebp
shrl
jns
lahf
pop
xor
xchg
sub
inc
scas
mov
fstl
sti
loopne
mov
sbb
rcll
mov
sub
mov
jnp
mov
loopne
loope
lret
in
sbb
pusha
scas
je
dec
jne
mov
sub
shrl
dec
push
xor
jl
notl
inc
movsb
cmp
mov
sub
cmpsl
sub
jns
sti
pop
mov
dec
clc
pop
pop
and
xor
enter
stos
xor
enter
cld
sbb
push
mov
inc
int3
and
loope
mov
addr16
ja
bound
aas
mov
in
movsl
pop
adc
rcrl
movsl
lahf
mov
lahf
addr16
inc
mov
mov
stos
addb
xor
or
xchg
add
fs
mov
rcrb
or
jns
dec
and
dec
pop
xchg
pop
xlat
enter
cmp
mov
insb
jmp
xor
inc
in
add
aad
pop
push
dec
outsb
mov
movsb
sbb
cmp
loopne
and
decl
jp
add
inc
pop
clc
pop
dec
mov
fs
push
adc
jp
mov
inc
fldt
cmc
es
fisubrs
cmc
or
and
mov
sub
inc
je
add
or
daa
mov
xlat
rclb
ds
mov
stc
sbb
xchg
inc
mov
dec
iret
cli
enter
into
fsubs
imul
cmp
aaa
arpl
jmp
dec
iret
xchg
js
dec
xor
mov
add
push
lcall
cmp
insl
and
pushf
push
dec
mov
cwtl
negl
cmp
sbb
fistpll
pop
mov
and
scas
xchg
test
nop
repz
leave
jp
jp
or
dec
pusha
mov
sbb
jno
mov
add
add
iret
sbb
hlt
mov
or
pop
pop
fadd
arpl
cmp
movsb
mov
and
pop
adc
or
out
aaa
mov
mov
repnz
arpl
jl
cwtl
push
cltd
and
leave
in
lods
sub
in
sbb
imul
jge
xchg
les
cmp
movsl
sub
inc
dec
or
xchg
mov
cmp
fisubs
or
popf
mov
aaa
add
push
hlt
lcall
test
push
pop
cmp
pop
fcompl
or
jo
cmpl
push
sbb
lret
sub
xor
sarl
lret
inc
js
or
stc
in
push
jle
add
mov
pop
scas
jae
push
fdivr
rep
icebp
push
push
cmp
aaa
aam
or
sbb
shlb
push
inc
mov
icebp
js
dec
sub
jge
test
lahf
or
in
sarl
cmp
push
or
gs
inc
insl
push
pusha
sbb
pop
bound
mov
add
in
push
fisttps
mov
dec
push
mov
mov
sub
testb
lahf
mov
data16
jno
insb
jmp
push
adc
subb
scas
hlt
jg
mov
pop
popa
jg
adc
xor
add
mov
and
push
xorb
out
push
cmp
cld
ds
idivl
test
push
mov
mov
jo
ja
addr16
jnp
jmp
outsl
pusha
cmpsb
push
dec
lret
cmp
mov
add
or
ret
dec
mov
mov
in
movsb
mov
rep
adc
adcl
mov
repz
inc
jbe
push
loop
mov
inc
sbb
mov
ljmp
jl
push
sbb
cmpsl
adc
mov
int
jg
xor
adc
sbb
jno
imul
mov
enter
das
sbb
lods
ja
cwtl
les
mov
lret
dec
mov
push
sub
in
cmpsl
rcrb
daa
and
ljmp
xor
jo
bound
bound
mov
sbb
push
jb
xor
dec
push
aaa
pushf
push
pop
push
fimull
fwait
dec
jo
scas
test
mov
pusha
sub
mov
inc
push
ret
sub
repz
cmc
mov
in
pushf
ret
jns
imul
test
call
or
int3
jb
movsb
je
push
popa
addr16
fstpt
testb
pusha
xchg
int
shll
push
mov
pop
into
jecxz
cmp
divl
daa
sub
push
sbb
lahf
aam
mov
sahf
add
enter
and
xchg
mov
jge
jne
in
jne
jecxz
and
repz
popf
cli
cmpsb
sbb
push
sahf
jle
sub
loope
stc
fisttpl
cli
mov
lea
cli
push
cmp
sbb
cmp
and
int3
rorb
push
mov
insl
adc
loope
les
lea
and
pop
lret
out
ficomps
cmpsl
mov
cltd
add
mov
dec
push
pop
add
dec
pop
jmp
add
dec
dec
aas
js
shl
out
pop
push
add
repz
int3
nop
push
lahf
jbe
pop
flds
jmp
pop
fildl
loop
push
inc
movsb
mov
cmc
adc
pop
mov
jno
jl
and
out
xchg
mov
inc
xchg
dec
cmpsb
fs
test
loope
lds
movsl
cli
popf
movsl
jae
cwtl
mov
out
sbb
fiadds
add
cmpb
pop
xchg
mov
and
or
bound
lret
xchg
xor
fs
leave
sub
decb
mov
das
arpl
lds
push
dec
and
jae
insl
int3
clc
stc
mov
outsb
leave
lea
jmp
dec
xor
aad
and
mov
lods
push
in
loope
addr16
test
jns
pop
jl
sub
adc
xor
cli
push
jle
cwtl
pop
fcoml
popf
adc
mov
dec
lock
pusha
ret
call
xchg
cmp
mov
xor
lahf
int3
jae
ss
inc
out
dec
testb
mov
popa
push
pop
cld
and
cmpsl
inc
vzeroupper
or
cltd
inc
addr16
fcomps
pop
add
xchg
push
insb
xchg
repnz
cmp
xor
mov
mov
add
dec
lods
lret
test
cmp
sbb
mov
mov
mov
stos
ljmp
mov
cmp
mov
repz
push
lock
sti
stos
or
test
xchg
inc
in
or
out
jmp
negb
subb
inc
dec
imul
mov
add
add
sbb
pop
mov
adc
outsb
icebp
test
xchg
sbb
xor
and
xor
cmpsb
leave
dec
or
sub
xchg
loope
or
adc
mov
inc
jne
fwait
jb
adc
mov
sbb
outsl
inc
pop
jo
inc
test
mov
push
or
pop
bound
inc
decb
repz
loope
leave
xor
mull
cmpsb
pop
push
std
xchg
mov
hlt
cltd
movsl
jmp
jp
ss
xchg
fbstp
dec
xor
imul
mov
movl
xor
xor
arpl
mov
in
xor
rorb
test
movsb
jecxz
adc
or
mov
outsl
ret
aam
add
sub
mov
popf
icebp
aas
inc
rclb
mov
cmp
xchg
es
test
or
mov
ret
inc
jno
leave
mov
push
mov
jbe
movsl
imul
pop
hlt
fldcw
rcrb
xchg
sub
xchg
loop
shlb
pop
repz
mov
push
rorb
jge
dec
cltd
jle
in
ficomps
call
sti
fdivs
lahf
je
xchg
sub
sbbl
mov
mov
mov
push
jnp
fadd
fsubrs
les
je
je
daa
jmp
push
mov
fisttpl
jle
push
or
sahf
or
cmp
movsl
out
cmpsl
cmp
mov
fimuls
and
mov
jne
inc
mov
ds
and
pop
jnp
push
fsubs
data16
mov
int3
inc
test
push
mov
lods
into
call
dec
jmp
xor
ljmp
test
ret
out
pop
xorl
roll
mov
mov
pop
mov
jg
cmp
mov
push
addb
mov
xor
ss
lock
mov
enter
sti
out
xchg
aad
cmp
roll
jb
mov
out
xor
mov
sahf
mov
cmovl
xchg
rcll
daa
or
pop
jmp
push
fldl
cmp
cmpb
repz
cld
xor
push
xor
rorl
in
push
sbbb
test
mov
sub
mov
dec
cltd
sub
inc
cmpsl
movsb
push
or
or
andb
sti
outsb
mov
daa
js
call
ret
andl
popa
xor
outsl
adc
loop
cmpsb
jl
jl
scas
test
pop
jg
pop
pop
or
push
ds
pusha
mov
repnz
sub
insl
pop
jle
out
xor
mov
imul
insb
or
add
adc
mov
push
out
jne
ds
inc
ljmp
dec
test
sbb
xor
in
daa
cld
xchg
jl
out
fs
jno
dec
jecxz
lret
in
pushl
pop
jge
cli
mov
cld
sarb
stc
in
mov
inc
jns
mov
insb
xor
scas
pop
data16
in
xor
insl
out
and
and
xor
in
mov
fisubrl
inc
mov
xchg
sti
popa
push
xlat
out
adc
scas
es
rolb
xchg
sub
push
sbb
push
dec
pop
insb
adc
mov
imull
jle
inc
call
mov
adc
ja
popa
xor
mov
jns
es
mov
or
sbb
inc
sbb
aam
inc
jle
mov
jg
imul
push
xchg
mov
ds
lock
jp
inc
addr16
ja
lock
sbb
divl
lret
pop
push
mov
inc
xchg
rcll
lods
push
jecxz
fcomps
pop
push
mov
mov
aas
xchg
in
mov
mov
push
mov
rcrl
das
shll
in
test
and
lret
and
rcrl
jmp
cmp
dec
mov
cmp
inc
adc
jb
icebp
mov
ret
test
pop
add
fidivs
pop
inc
aam
out
repz
sub
test
dec
and
or
or
jb
cli
mov
jl
and
popa
add
sarb
sub
pop
loop
mov
test
xchg
clc
push
xor
arpl
add
das
dec
mov
ss
fnstsw
subl
sub
jle
in
inc
adc
divb
cmpb
cmc
std
ljmp
add
pop
jecxz
loopne
fidivrs
dec
stc
mov
push
and
push
add
popa
inc
test
jle
push
incl
dec
or
pop
or
cmc
and
shl
mov
push
push
pop
pop
inc
fcmovnbe
cmp
or
inc
mov
inc
ret
lahf
cmpsl
adc
adcl
cli
into
cld
and
leave
cmp
or
ds
ret
out
out
pop
dec
adcb
pushf
cmc
cmp
jae
shrl
js
loope
cli
sbb
push
sub
mov
sub
lea
mov
mov
cld
jae
add
in
or
inc
xchg
repnz
sub
jmp
mov
in
or
dec
xchg
out
inc
pop
rcrb
mov
int
add
ja
adcb
aaa
inc
or
mov
in
scas
test
cmp
dec
aas
sbb
jnp
dec
pop
jl
push
loopne
jmp
in
adc
sub
xchg
outsl
mov
in
dec
insl
out
and
dec
ret
pushf
adc
jno
cmp
jge
push
push
out
push
mov
lods
jae
test
inc
lods
push
mov
in
in
outsl
mov
loope
andl
mov
inc
clc
cmp
or
sbb
adc
cld
mov
and
es
push
mov
dec
call
mov
and
mov
out
mov
or
mov
dec
sbb
nop
sbb
adc
leave
mov
sarl
movsl
add
clc
sub
lds
repz
dec
int
jecxz
xchg
cmp
sub
sahf
lods
pop
mov
jae
fs
xor
cltd
in
imul
add
icebp
scas
xchg
lcall
cmp
sub
xor
test
addr16
stos
loope
mov
cltd
push
push
mov
pop
sbb
mov
out
push
inc
push
inc
dec
in
and
mul
adc
inc
bound
outsl
and
mov
lret
push
das
clc
cs
and
aad
movsb
pushf
shll
adc
das
and
in
mov
arpl
or
je
rclb
iret
shr
pop
mov
mov
rcl
ret
ss
sub
loope
pop
add
add
xor
sbb
mov
sub
sti
mov
dec
les
jbe
cld
sbb
add
bound
or
cmpb
lcall
cmpb
cmp
sbb
dec
cmp
jo
aad
add
adc
pop
mov
in
test
pop
in
push
pop
inc
cwtl
mov
xchg
add
xchg
lcall
fists
dec
ljmp
loopne
cwtl
xchg
stc
insb
mov
sbb
stc
pop
and
out
int3
arpl
jno
mov
or
mov
fstpt
push
inc
das
jae
cmp
pop
test
mov
aas
jmp
lcall
inc
fiadds
ret
arpl
ficoml
adc
mov
inc
push
jmp
enterw
pop
fidivrs
jp
subb
gs
lret
into
cmpb
sbb
shll
xchg
ret
into
jmp
test
cmp
jns
movsl
xor
mov
adc
adc
mov
in
cmp
repnz
lods
shll
sbb
cmpsl
das
cmc
mov
leave
fdivs
repz
sbb
ror
push
ret
adc
sbb
repz
sub
mov
shll
jle
push
mov
testl
mov
mov
enter
mov
les
push
add
or
sti
negl
out
insb
xchg
mov
push
test
inc
jg
mov
pusha
push
lahf
pushf
js
push
call
lods
das
mov
mov
insb
fnsave
sbb
ret
jne
xor
sbb
or
shlb
lret
outsb
scas
lock
adc
xchg
xlat
push
sub
sub
int3
pop
pop
jns
mov
in
leave
rcll
adc
iret
xchg
sbb
sbb
out
nop
add
or
repnz
in
out
stos
xor
inc
int
dec
leave
es
addr16
int3
xchg
cmp
sub
or
dec
xor
jp
pop
rorl
lods
fildl
aam
jo
jo
cmc
scas
aas
les
shlb
sub
jne
cmp
mov
das
or
imul
or
shl
stc
inc
xchg
mov
xchg
in
adc
in
inc
fists
mov
sar
mov
cli
sbb
into
or
mov
jge
out
push
inc
xchg
lahf
shll
scas
adc
mov
and
pslld
in
sbb
loopne
rorb
out
bndstx
mov
xor
pushf
fsubrl
mov
lahf
inc
or
cmp
xchg
je
aaa
cltd
addr16
ficoms
or
ljmp
fucom
lea
push
push
xchg
out
pusha
lcall
repz
sbb
enter
push
pusha
jae
arpl
push
test
xor
dec
mov
jns
adc
adc
out
mov
sub
mov
popa
mov
sbb
negl
jg
inc
aad
lods
or
popa
loope
lcall
push
add
cmp
jns
mov
fbstp
out
ret
movsb
loop
mov
in
in
lock
cmp
mov
dec
push
mov
push
xlat
ret
xorb
xor
mov
lahf
mov
divl
jmp
cmp
dec
cmp
fs
inc
iret
cs
fs
aam
add
fdivrl
int3
push
fwait
sub
xor
std
shll
xchg
test
rolb
xchg
enter
jp
sub
mov
icebp
clc
daa
cmp
ret
outsl
dec
rol
xor
add
mov
jno
out
cli
push
call
out
sahf
movsl
inc
insb
stos
inc
jne
repz
jecxz
mov
sbb
test
mov
mov
fwait
sbb
lock
aaa
movsb
xor
xchg
xchg
mov
xor
xchg
xchg
fnstsw
sbb
mov
outsb
test
sarl
pop
push
ja
mov
xor
mov
push
js
loop
xor
mov
cltd
mov
add
adc
mov
push
in
adc
sub
aam
test
xor
push
add
mov
or
sub
dec
push
ss
mov
stc
mov
mov
gs
movsl
shlb
xor
lret
loopne
and
jbe
xor
or
pop
outsb
pop
mov
add
insl
test
inc
sbb
push
cmp
insl
xchg
jl
push
cmpl
sbb
loopne
xchg
xchg
adc
fs
call
fisttps
test
popa
add
lahf
loop
rcll
inc
sbb
imul
mov
add
dec
mov
test
jmp
xor
dec
lods
xchg
push
inc
xor
push
xlat
add
les
or
pop
shrb
sub
aam
clc
dec
inc
or
inc
fisubrs
inc
fldcw
cmp
fcoml
xor
rcrl
jbe
test
pop
ss
mov
xor
mov
and
push
or
mov
dec
in
icebp
jle
iret
ret
push
jns
icebp
mov
cli
xor
mov
push
xchg
leave
cli
cs
push
fdivrl
dec
sbb
mov
xor
mov
xchg
movsl
lods
fstpl
pushf
gs
xor
mov
ret
jne
lock
add
ljmp
out
lds
push
mov
and
lods
and
xchg
adc
jmp
mov
ljmp
rolb
movsb
into
push
ret
dec
pop
clc
jmp
fucomi
sub
movsb
add
dec
repnz
icebp
repz
adc
stc
xor
jbe
mov
jg
mov
inc
iret
rcll
scas
or
inc
mov
fdivl
pop
jne
mov
loop
es
add
or
cmpsl
lret
xchg
popa
sub
pushf
icebp
sti
ret
scas
aas
dec
lahf
es
roll
cltd
jp
into
inc
jbe
mov
push
xor
cmp
fwait
xor
jge
ret
mov
idiv
repz
bound
cmp
sub
inc
push
pushf
push
std
mov
fcompl
movsl
cmp
fsubs
jns
adc
sub
mov
inc
jae
cmp
mov
sub
pop
inc
sub
mov
shll
dec
out
sahf
loop
out
popa
std
ret
dec
sbb
mov
dec
mov
shll
inc
jae
cmp
jno
inc
por
hlt
cltd
and
adc
pusha
pop
inc
in
adc
dec
jo
cmp
inc
jns
and
lods
sar
call
out
add
lds
inc
icebp
aaa
nop
das
xor
fwait
lcall
push
addb
popf
hlt
dec
test
cmp
xor
and
xor
push
pusha
repz
mov
hlt
cmp
or
push
xor
or
lret
pop
scas
loopne
sub
or
imul
xchg
or
sub
aaa
scas
mov
addl
or
lahf
cmp
rclb
int3
mov
je
das
mov
cmpsl
sub
xor
cmp
xchg
cs
movsb
lcall
popa
lret
push
fwait
sbb
mov
lock
pop
xor
jo
incl
lret
jns
repnz
xor
pop
sub
mov
push
lds
cli
stos
repz
sub
pushf
jno
pop
adc
stos
xchg
mov
push
enter
sub
cmp
movsl
jge
test
sbb
int3
mov
sub
clc
push
push
mov
xchg
push
add
pop
stc
sub
jmp
in
repz
out
or
fiaddl
gs
xchg
sahf
sub
pop
sub
jp
mov
cmp
fdivl
insl
dec
pcmpeqw
mov
xchg
sub
jecxz
dec
ficoms
cmpsl
out
xchg
mov
cmp
and
add
aad
jecxz
jb
xchg
xor
in
ljmp
dec
sbb
movsb
cmp
jbe
outsb
xor
test
cmp
push
enter
mov
js
ds
ja
cmpsl
sahf
jle
mov
mov
pop
stc
add
cmp
pop
sahf
in
shlb
loop
mov
mov
dec
mul
cmp
leave
testb
sahf
add
in
push
dec
pop
mov
push
jmp
dec
mov
cld
outsl
imul
mov
inc
sahf
inc
jo
das
mov
stc
push
loopne
ja
jns
jns
cmp
iret
orl
in
pushf
insb
jmp
ljmp
push
in
ret
mov
in
inc
adc
addr16
xor
pop
test
loopne
xchg
sbbl
cmp
dec
cmpsl
xchg
lods
movsb
clc
dec
sub
jo
dec
mov
ror
inc
cwtl
cmpsb
mov
sub
loop
fimull
xchg
mov
lcall
outsb
pusha
mov
stos
inc
pop
xor
push
cmp
js
mov
lret
push
fsubrp
pop
sbb
adc
and
cmp
cmp
jp
and
iret
mov
addl
sarl
xor
out
inc
jg
shl
lcall
sahf
aam
out
push
xchg
test
test
int3
dec
xor
xchg
out
push
xchg
push
push
mulb
xor
test
pop
adc
pop
aas
jbe
pop
stos
adc
jp
ret
loop,pn
xchg
push
pop
lea
test
cmpsb
jmp
mov
jl
jb
push
jne
nop
mov
scas
daa
push
sbb
add
add
push
addl
jmp
sbb
push
adc
cmp
test
test
inc
addr16
cbtw
int
repz
push
jp
nop
jno
mov
sub
das
movsb
jp
movsl
pop
mov
popa
into
cwtl
mov
je
xchg
in
dec
dec
xchg
and
inc
jne
test
adc
sti
ja
push
xor
ss
pop
js
mov
test
loop
rcrb
and
add
cld
sub
xor
fisttps
or
imul
fstpl
cli
es
xchg
lcall
push
jmp
adc
xchg
xchg
lahf
sbb
pushf
cli
push
inc
add
pop
aas
add
ret
cmp
xchg
repz
add
ret
and
cmpsl
imul
push
push
mov
mov
push
fisttpl
loope
cli
inc
and
into
out
push
mov
sbb
cwtl
arpl
pusha
cltd
outsl
mov
push
ficoml
dec
into
push
pop
movsl
inc
daa
mov
pop
outsl
fcmovu
lods
push
push
hlt
and
mull
add
mov
lret
cli
add
adc
scas
sub
cmp
inc
sti
mov
inc
repz
popf
jo
test
stos
mov
push
popf
jae
push
or
cmp
sbb
push
jp
xor
pop
or
loopne
inc
inc
fcmovnbe
cmpsl
jge
push
icebp
insb
inc
aas
xor
or
pop
push
decl
aad
popf
hlt
arpl
add
cmp
inc
into
add
in
pop
dec
xchg
sub
jnp
push
inc
outsl
and
pop
repnz
mov
gs
sbb
and
xor
hlt
sub
and
das
shl
xchg
push
pop
loopne
idivl
push
inc
mov
arpl
dec
int3
inc
sub
aas
and
xor
scas
fsubl
fsubrs
xlat
stos
enter
shll
pop
jae
mov
ja
and
cmpsb
add
add
cltd
cmp
movsl
movsl
jg
xlat
xor
dec
add
rcll
xchg
dec
cmp
pop
mov
sub
xchg
adc
pop
inc
cmpsl
sbb
movsl
xchg
cmp
jno
cmpsl
or
mov
mov
jb
stos
push
xlat
jb
lea
test
lcallw
mov
mov
jne
push
testb
ret
in
mov
dec
adc
sub
clc
mov
sub
jb
cmp
pop
pop
mov
mov
or
jb
insb
int3
or
daa
sbb
mov
pusha
inc
sbbl
test
mov
cmpsb
add
test
insl
dec
pop
push
movsb
test
jg
int
scas
inc
mov
lret
cltd
gs
enter
or
xchg
add
negl
xchg
jmp
cmpsl
adc
leave
cmpsb
das
pop
shrl
inc
in
mov
jo
lods
jno
and
sub
leave
jb
mov
pop
add
andl
out
out
xchg
and
mov
std
pop
dec
sub
ljmp
insb
sub
cli
sbb
leave
outsl
lock
js
mov
in
inc
pop
xchg
or
pop
out
roll
dec
mov
in
iret
pop
js
xchg
popf
outsl
mov
sar
pusha
mov
test
adc
loop
flds
inc
ret
rorb
mov
sub
add
shrl
jg
push
jae
cmc
or
pop
push
mov
jmp
stos
out
add
loopne
adc
cmc
stos
les
rcrl
mov
shl
lods
jl
mov
push
jge
stos
lret
popf
cwtl
push
fstpt
addr16
or
xor
dec
call
sar
sbb
pushf
in
inc
cmpsb
stc
lods
sub
or
loop
rcr
add
mov
imul
pop
adc
and
pop
andl
repz
bound
sbb
or
outsb
repz
mov
outsb
add
mov
std
sub
add
xchg
jg
lea
cmp
xchg
adc
xchg
stos
ss
xchg
test
hlt
mov
addr16
ja
or
adc
setne
out
push
icebp
mov
sti
dec
jmp
push
pusha
mov
outsl
jo
sahf
gs
push
adc
sti
dec
pop
mov
testl
lock
xor
loop
pop
mov
bnd
or
fidivl
fwait
jp
xchg
cmpsl
sahf
push
sbb
jle
sbb
push
arpl
inc
push
mov
mov
jnp
out
mov
sub
xor
push
aad
cwtl
mov
ficoms
cwtl
gs
xchg
lcall
lea
lods
pop
lret
gs
xor
inc
incb
fsubrl
and
popa
in
fisubrl
xlat
push
js
add
push
add
xlat
and
mov
bound
xchg
mov
or
sub
cmp
cwtl
sub
sub
int
jns
adc
out
push
push
push
xchg
and
push
sub
dec
add
sahf
leave
lock
mov
js
aad
je
and
pop
push
hlt
lahf
inc
jge
sbb
sub
sarl
add
xlat
hlt
call
sbb
loope
stos
insb
cld
lahf
fcmovbe
fcompl
dec
cltd
and
inc
ja
popa
sti
jg
outsb
adc
push
adc
cmp
jae
xchg
sbb
sub
fwait
or
sbb
in
lahf
and
sub
inc
xor
cmp
sub
outsb
mov
mov
cld
adc
popa
stos
dec
pop
aaa
adc
xchg
pusha
call
enter
repz
push
lret
insl
push
lods
cmpsb
jl
in
mov
cmp
out
outsl
push
lods
mov
out
js
dec
rclb
mov
lret
lret
loop
je
or
ficompl
xor
push
ds
pop
xor
mov
andb
repz
movsl
sub
inc
ds
cmp
imull
cmpsl
loope
mov
fnstsw
and
push
in
cltd
ret
pop
clc
ds
push
ljmp
sbb
xchg
dec
jp
iret
add
rcll
dec
js
paddusb
jecxz
cmp
fisubrs
sbb
pop
sub
push
push
inc
xor
sbb
pusha
imul
push
sbb
and
fs
lods
fsubl
cmpsb
aaa
sbb
flds
jb
mov
cmp
loop
push
outsb
insl
repz
imul
into
test
xchg
push
outsl
push
fdivrl
std
sub
cmp
jl
sbb
popf
xchg
cmc
lahf
mov
jns
xor
andb
in
sbb
aam
into
ss
pusha
pop
cmp
dec
add
and
pop
jecxz
addr16
xchg
fbld
popa
inc
mov
imul
lcall
mov
int3
sbb
lret
cli
xor
sub
orb
and
js
push
add
mov
leave
cmpsb
or
cmp
and
mov
jmp
sti
mov
lea
repnz
pop
out
add
add
add
stc
xor
imul
pusha
add
inc
lret
std
fmul
lea
mov
cmp
fists
mov
les
dec
movsb
pop
out
psubw
sbbl
push
dec
mov
or
pop
sub
pop
je
shll
mov
push
fwait
push
aaa
add
popa
push
scas
sbb
jmp
mov
mov
push
fsubrl
les
adc
out
xlat
xor
cld
mov
xor
negl
pop
dec
xor
filds
imul
cli
aam
out
fnsave
ret
or
lret
outsl
daa
sbb
lahf
dec
adc
pop
aaa
sub
outsl
adc
imul
lret
xchg
ja
lods
mov
inc
mov
call
xor
fisubs
and
jns
rorl
andb
xor
scas
mov
shll
hlt
clc
lock
jae
in
pop
sti
push
out
stc
pop
or
lods
pop
or
jbe
lcall
mov
add
xchg
fdivr
out
fistps
sbb
pop
xor
sbb
cmp
dec
shlb
icebp
xor
out
lods
sub
mov
pop
in
fcmovne
adc
dec
sti
mov
jecxz
adc
cli
cmpsl
xor
nop
jb
in
ss
add
insb
mov
out
dec
loope
sbb
mov
and
leave
xchg
dec
in
shll
and
push
ds
cmc
sahf
jg
cmp
push
mov
sub
aad
add
pop
ja
enter
es
je
lret
sub
xchg
shll
loop
push
je
mov
insb
mov
adc
std
jbe
dec
add
ret
mov
cwtl
sbb
xor
mov
testl
and
int3
push
loop
stos
mov
push
mov
add
int3
jo
sub
outsl
int
and
add
sub
lods
push
decb
jnp
lods
shl
dec
cld
data16
push
arpl
push
or
xchg
loope
jns
push
and
xor
push
loope
lret
adc
or
and
ficoml
jo
pusha
ret
mov
shrd
adcl
push
arpl
sub
cwtl
mov
mov
test
or
sti
add
dec
adc
cmc
jbe
cmpb
cmp
popa
push
stos
mov
mov
jns
flds
movsl
cmpsl
jp
movsl
pop
push
aad
jecxz
inc
ret
jbe
shr
lods
jns
shlb
out
and
inc
xchg
fs
in
addb
arpl
xchg
push
jge
lcall
jg
mov
fs
pop
pushf
ja
mov
repz
scas
xor
cld
cmpsb
insb
dec
mov
cmp
push
lahf
sub
pop
ljmp
sbb
cmpsl
shrb
ljmp
lods
and
sbb
loopne
das
mov
jecxz
push
loope
add
and
out
lods
fwait
iret
dec
sbb
and
and
aaa
jge
mov
fsubs
push
ja
mov
fildll
je
insl
cmp
sahf
mov
jno
jae
stos
jbe
adc
test
ss
lahf
pop
mov
test
test
adc
adc
xorb
pop
dec
popa
rcr
jo
cmpsl
in
clc
cwtl
xlat
add
cli
pop
and
adc
adcl
repnz
out
sub
lods
lahf
arpl
inc
push
add
pusha
lret
int
daa
fnstcw
addb
cwtl
pusha
pop
mov
mov
push
es
clc
in
mov
cmp
out
test
inc
ljmp
dec
ret
inc
stos
stos
pop
fsts
dec
cs
loopne
inc
push
sbb
mov
les
sub
les
fsub
push
dec
outsb
cmp
test
sbb
out
mov
arpl
push
pop
pop
xchg
sarl
jbe
mov
outsl
mov
pop
adc
aam
movsb
cld
dec
cltd
loope
push
popf
or
movsl
mov
sbb
fildl
pushf
xchg
loop
ja
mov
ljmp
fiadds
cmc
push
pop
test
add
jne
xor
add
add
sub
out
lds
jg
andb
mov
inc
gs
ret
ja
into
or
jnp
je
cmpsb
pop
cmp
push
cmp
pusha
add
push
out
xor
dec
inc
inc
inc
inc
fisttpll
push
test
push
jmp
jmp
ja
divl
fildl
notl
out
insb
fiadds
xchg
out
jmp
sub
into
movsb
pop
loope
xchg
je
cmpsl
shll
in
shr
fs
fisubl
enter
test
adc
add
loopne
in
inc
push
dec
in
js
pop
outsb
xchg
pop
jbe
inc
in
pop
ret
pusha
jae
inc
repz
in
mov
out
mov
cmc
addb
aas
cmpsb
dec
cmp
jmp
mov
mov
mov
inc
loopne
aaa
bound
cmc
mov
dec
jne
mov
dec
xchg
xor
pop
or
sarl
loopne
pop
adc
shr
jg
fsts
and
sbb
push
xor
pop
push
mov
jmp
aaa
mov
add
pop
out
jbe
fcom
in
ficoml
sub
scas
leave
pop
sbb
sbb
mov
arpl
lret
adc
andb
hlt
test
and
dec
jbe
inc
aam
out
and
push
call
adc
mov
lods
stos
mov
mov
outsb
lods
xlat
dec
stos
or
pop
push
in
dec
mov
add
out
gs
sub
sub
das
or
sub
mov
fucomp
or
lret
bound
stos
xchg
push
mov
pop
cwtl
lahf
iret
fldt
pusha
imul
das
push
in
mov
cld
add
ret
push
outsb
inc
mov
xchg
test
cmpsb
push
mov
xor
fsubl
out
in
not
push
gs
dec
and
fwait
aam
sarb
lods
push
es
cmp
test
pop
std
iret
dec
lock
jge
rcrb
ds
call
jecxz
mov
gs
dec
sbb
lret
xor
mov
andl
lahf
jecxz
sub
jle
addb
push
sub
repz
clc
sbb
jp
mov
mov
pop
mov
pop
hlt
xchg
test
movsl
xchg
loop
add
ficoml
mov
lods
jmp
leave
div
jae
ds
popa
mov
mov
inc
push
push
ret
lcall
and
test
stos
add
mov
jae
fistps
shrl
aaa
cwtl
out
mov
jmp
loop
adc
mov
or
mov
push
lock
inc
popa
push
push
jo
dec
adc
ror
adc
loop
orb
sti
in
lock
inc
dec
jge
mov
ja
xchg
or
test
popl
je
cmp
test
pop
push
adc
pop
or
and
je
in
sub
ret
xchg
dec
rorb
xlat
xor
add
inc
push
insb
mov
mov
and
dec
or
xor
in
cmpsb
add
sub
pop
rclb
je
iret
ja
adc
inc
pusha
pop
aas
inc
push
cmp
cmc
pop
stos
dec
dec
into
dec
movsl
or
repz
inc
iret
xchg
xchg
mov
sub
pop
rcrl
lods
mov
loopne
jge
js
xor
adc
mov
dec
cli
pop
sahf
fnstenv
xor
xchg
xrelease
outsl
mov
fidivs
sub
inc
pop
imul
es
mov
mov
testl
jbe
out
inc
xlat
ret
jne
fdivl
sbb
add
repz
push
into
xlat
dec
in
ficomps
std
enter
or
les
xchg
mov
adc
in
and
xlat
mov
gs
xchg
lock
pop
hlt
out
add
fbld
push
push
jne
imul
test
add
addl
lock
outsb
mov
lock
sub
cmp
mov
jo
mov
push
movsb
lret
sarl
mov
mov
popa
aaa
push
xorl
out
hlt
sbb
dec
push
and
outsl
aas
aas
sbb
push
fisubrs
or
mov
and
mov
aaa
das
pushf
lahf
jne
pop
fstpl
lock
pusha
fadd
sahf
sahf
jae
aas
adc
mov
idivl
sbb
cmp
lods
lea
jg
lods
popa
xlat
xchg
sbb
cwtl
dec
dec
ret
aad
add
in
cmp
pop
enter
mov
mov
js
inc
and
push
popf
stos
push
in
mov
mov
and
push
stos
es
add
fmull
add
jo
mov
sub
mov
adc
jecxz
mov
push
fnsave
or
inc
jno
nop
les
fwait
pop
ret
inc
mov
add
pop
test
pop
arpl
jnp
add
cmp
mov
fisubs
jl
inc
lea
jns
sub
cmp
xlat
dec
das
cltd
aad
push
arpl
push
out
jb
jecxz
cmpsl
push
iret
sbb
and
or
aad
cmp
mov
mov
rorb
rol
ds
outsb
repz
in
je
insl
pop
adc
lcall
xor
lret
sbb
scas
aad
cwtl
and
and
negb
add
int3
adcl
ds
sbb
adc
sub
and
push
push
jno
aam
jmp
mov
movsl
mov
push
mov
pop
cmp
inc
inc
pop
test
test
inc
loop
cmpsl
jnp
adc
mov
jnp
stos
pop
in
test
loop
enter
push
mov
out
inc
xchg
insb
pusha
and
add
pop
mov
dec
sbb
not
mov
ret
into
iret
negb
xchg
cmp
and
js
fmull
mov
jne
repz
cwtl
xor
add
test
push
bound
or
lret
imull
mov
fbstp
mov
stos
mov
insl
lret
mov
dec
mov
stc
popf
in
leave
jecxz
in
sbb
leave
cmp
testl
lock
inc
push
mov
test
jno
mov
fdivr
mov
data16
sub
pop
imul
or
icebp
arpl
inc
pop
mov
sbb
sbb
cwtl
fldl
jge
lock
pop
lcall
adc
cmp
inc
je
or
or
xor
pop
ds
cs
std
pop
imul
dec
cmp
lahf
ljmp
adc
lahf
push
dec
jg
scas
push
test
inc
pop
into
ljmp
lods
mov
mov
aas
outsb
lret
mov
cmp
push
or
frstor
push
inc
or
mov
dec
pop
sbb
pop
imul
pop
es
imul
pop
scas
scas
inc
sub
jbe
mov
iret
shrl
mov
or
push
and
add
scas
in
rcr
push
cwtl
mov
cld
stos
dec
inc
mov
bound
fs
in
scas
loope
ret
movsb
xchg
outsl
lcall
cmpsb
ret
test
mov
aad
mov
out
jns
hlt
cmp
or
rol
ja
fistps
stc
arpl
adc
shll
es
jl
jno
outsb
test
sahf
jge
fucomp
and
int
dec
and
xchg
fwait
movsl
pop
and
popf
outsb
cmp
xchg
test
push
inc
jge
insb
or
sbb
sub
pop
iret
out
jno
sub
xor
scas
and
mov
ret
mov
add
dec
push
into
sub
call
push
stc
dec
inc
or
xchg
sub
xor
in
dec
mov
imul
mov
loope
mov
cld
xor
jae
xor
jno
rcrl
dec
push
insl
push
ficomps
addr16
mov
xchg
mov
lcall
les
xchg
stos
call
shlb
jle
ficoms
sub
in
jnp
loope
nop
leave
cmpsl
mov
popf
jl
test
add
and
mov
ljmp
loop
rclb
addr16
mov
xor
lock
xchg
stos
adc
out
mov
in
rclb
fldenv
cli
dec
sbb
xor
fcomps
push
push
ds
jg
cmp
fstpl
popa
lods
jp
das
std
fbld
cmp
test
andl
sbb
mov
ficomps
mov
loop
inc
in
sub
filds
aaa
dec
int
xorb
dec
pop
mov
adc
sbb
xchg
xchg
movsb
filds
xor
fsubp
aas
cmp
xchg
dec
xchg
mov
add
lahf
std
lock
arpl
sbb
pop
bound
cmpsl
sbb
mov
push
mov
and
sub
lsl
pop
push
mov
fwait
in
in
ret
addr16
jp
mov
in
lods
icebp
pusha
insb
pop
mov
clc
sbb
add
cmp
loopne
aas
popf
into
sbb
mov
jle
in
mov
add
cmp
xchg
ret
xor
lock
es
popf
or
jle
mov
daa
movsl
dec
mov
pop
add
repz
int
outsb
lea
in
mov
cmp
idivl
ret
jecxz
adc
add
mov
jmp
pop
or
jg
xchg
push
enter
ss
mov
leave
les
ja
sbb
icebp
xchg
cwtl
add
xchg
inc
cmovno
das
mov
mov
and
into
jp
xor
inc
lea
push
mov
cwtl
fstl
mov
sbb
sub
add
mov
pop
jle
addl
call
sbb
out
pop
push
cld
dec
out
sbb
rorb
aas
cli
push
mov
ds
dec
jnp
jns
jo
or
mov
and
xchg
test
sub
cld
and
mov
cmp
mov
and
jnp
mov
xchg
mov
les
notb
fwait
bound
and
jno
or
pop
addl
sub
sub
fsub
or
jp
sbb
sbb
jp
fwait
pop
dec
pop
je
cld
fld
or
gs
push
push
pop
mov
ret
je
outsb
lahf
lds
jo
sbb
and
pop
arpl
cmp
lret
movsb
iret
push
pop
lods
imul
aad
clc
insl
out
adc
cmp
mov
mov
xor
mov
gs
dec
cmp
fmul
mov
add
js
sbb
push
cmpsb
xchg
pop
cmp
lods
xor
rclb
in
cmpsb
adc
in
jae
repz
push
mov
and
sbbb
push
inc
cli
xchg
push
fsts
enter
adc
or
insb
xchg
and
sub
into
mov
filds
into
xor
pop
push
stos
jmp
sub
das
xchg
cld
ds
lock
in
and
jbe
add
loopne
jl
and
jmp
mov
imul
jle
mov
pop
into
rcrl
mov
stc
es
pusha
cli
fstpt
push
inc
cmp
les
call
sub
mov
push
adc
push
adc
ret
dec
sub
in
cltd
add
xchg
xor
insb
cmp
mov
xor
mov
jmp
xchg
xchg
pop
pusha
push
xchg
add
mov
hlt
hlt
pop
test
das
inc
lock
fs
xchg
aas
cld
push
lods
xlat
sti
fs
mov
in
cmp
popf
pop
mov
dec
mov
push
popf
shll
pusha
cmp
and
filds
shr
inc
fsubs
mov
pushf
arpl
xchg
xchg
ror
xchg
test
aad
inc
sbb
cmp
lcall
or
xor
andl
push
adc
jl
xchg
mov
add
insb
jbe
lret
xchg
fimull
or
dec
xor
popa
push
mov
rcrl
cs
add
mov
jns
shlb
xor
xchg
mov
stos
sahf
pop
testl
dec
mov
pop
cltd
insb
xchg
gs
sahf
pop
aam
xchg
mov
sub
popa
mov
jbe
jl
imul
in
inc
push
lods
fwait
cmp
jbe
xchg
rclb
shr
call
fwait
sub
cmp
jg
inc
jae
test
fildll
mov
add
in
dec
cmc
pop
and
sqrtps
push
fisttps
pop
jo
mov
jmp
loopne
inc
sub
jp
mov
fsub
loope
pop
cmp
fistps
cmp
sub
imul
push
jae
aaa
out
dec
ficoms
mov
xchg
enter
test
call
daa
loope
scas
push
pop
push
fistpl
sub
sarb
and
jnp
sub
sub
cld
mov
push
test
lods
push
je
mov
repz
bound
jge
pop
push
sarb
into
sub
cltd
add
pop
mov
popf
pop
arpl
pop
shll
stc
test
in
pop
mov
xchg
pop
lcall
add
ja
jo
mov
dec
cmpsb
and
bound
call
adc
movsl
and
hlt
lds
jg
sarb
pop
mov
pop
mov
mov
jmp
mov
inc
pop
int3
lds
cld
fdivp
cmpsl
cmp
roll
aaa
shll
lcall
mov
mov
ljmp
push
add
out
adc
dec
stos
cmp
sbb
jnp
imul
cmp
pop
test
test
testl
xchg
jg
xchg
inc
dec
cmc
adc
daa
and
fimuls
push
mov
rcrl
dec
shl
dec
cpuid
mov
jecxz
scas
cmp
dec
out
push
xchg
ljmp
pop
inc
xor
sub
dec
ds
sub
push
sbb
addb
pop
xchg
and
out
cwtl
mov
dec
inc
dec
out
jno
loop
xchg
pop
sub
popf
sub
mov
xchg
and
cmp
push
in
adc
loop
xlat
push
test
ror
or
pop
call
push
push
sahf
out
adc
xchg
repz
xor
add
mov
cmp
mov
sahf
adc
loop
sub
mov
cmp
mov
and
daa
add
and
stc
int3
jns
or
push
sub
adc
and
negl
pop
roll
mul
adc
add
out
pop
add
testl
pop
pusha
mov
push
xor
test
sbb
outsl
clc
inc
mov
sbb
inc
ret
inc
xor
std
cld
mov
adc
jno
fst
out
push
cmpsl
es
out
ja
pop
cmp
aaa
jns
cmp
pusha
pop
inc
mov
jb
dec
mov
jns
dec
test
xor
mov
jg
or
int
push
jae
dec
out
clc
cmp
dec
or
push
data16
js
inc
cmp
add
xchg
cmpsb
xchg
stc
adc
adc
outsl
divl
xchg
add
sbb
jmp
cmp
sti
movsl
mov
jg
out
jl
pop
imul
inc
loope
lock
add
in
sub
rorl
or
sub
cmp
lods
mov
xor
in
dec
lret
insl
cmpsl
xor
movb
subb
and
stc
jmp
inc
loope
push
jmp
movsl
ret
adc
mov
shlb
int
jg
pop
pusha
sbb
mov
arpl
add
jb
pusha
push
mov
das
xor
daa
outsb
adc
dec
sub
leave
xor
imul
and
adc
xchg
mov
mov
pop
mov
outsl
pushf
aad
cmp
sub
inc
jl
or
notb
xchg
scas
call
mov
cld
jp
mov
in
cwtl
cmp
mov
in
int3
ss
sub
out
clc
xchg
add
adcb
iret
shlb
dec
add
gs
ret
in
mov
inc
cli
mov
loope
inc
adc
loope
dec
ljmp
mov
mov
outsb
push
mov
in
sub
punpckldq
sbb
cmp
mov
cmpsb
ds
push
imul
movl
push
push
and
addl
in
in
addb
je
cmp
or
lret
adc
jne
mov
and
fldenv
rcl
adc
in
add
dec
sbb
mov
das
dec
std
out
jo
icebp
es
xchg
fists
pusha
repz
push
xor
pop
dec
iret
push
jo
jmp
js
push
shlb
pop
loope
shll
sub
push
mov
xchg
mov
insl
dec
lock
ret
fildll
adc
mov
fcoml
iret
fldl
xorl
mov
jmp
mov
xchg
jb
mov
cmp
aas
not
movsb
inc
mov
inc
hlt
dec
out
popf
outsl
cmp
dec
sbb
aam
addb
sar
mov
jmp
xchg
jmp
xor
jecxz
xor
arpl
sub
lods
adc
movsl
imul
ja
xchg
out
outsl
cltd
clc
imul
test
push
cmp
push
les
ret
or
lcall
sub
pop
and
stc
bnd
imul
aas
fisttpl
rclb
lret
movl
push
enter
adc
cli
fadd
add
mov
arpl
into
ret
xor
or
inc
or
js
repnz
mov
pop
mov
sbb
in
ret
outsl
fbstp
in
loop
stc
es
xor
sarl
loope
sar
cli
mov
jecxz
lods
inc
orl
inc
icebp
or
mov
cltd
stos
mov
pushf
mov
or
or
test
pop
mov
jno
pushf
sub
popa
idivl
clc
xrelease
out
ds
lahf
inc
mov
jbe
mov
fsubl
enter
stc
aam
xor
inc
xchg
pop
pop
pop
sahf
jae
in
dec
mov
cmp
cmp
dec
arpl
in
testb
lahf
push
inc
add
pop
ret
or
cmp
cmp
iret
add
mov
arpl
push
repnz
sub
xor
xchg
mov
xchg
jb
aam
mov
addr16
subl
repz
jmp
div
sub
push
adc
adc
or
fstl
push
fwait
cmp
daa
mov
cwtl
test
fistl
push
mov
out
scas
adc
pop
mov
mull
inc
xor
and
cltd
stos
pop
pushfw
jge
fwait
sub
sbb
inc
jns
pop
test
push
ja
arpl
jne
ret
mov
ljmp
ja
aad
cmp
repnz
xor
or
dec
lds
neg
cmp
jge
mov
mov
aam
dec
inc
push
mov
loop
fsubs
adc
scas
hlt
jmp
xchg
lret
les
lods
or
stc
push
lahf
mov
cmp
cmp
sbb
mov
in
mov
and
jg
sbb
mov
out
mov
sar
rcrb
and
loopne
jmp
into
imul
cmp
sub
cmovo
push
je
push
sub
insl
popa
add
mov
adc
sarb
lret
jecxz
dec
sbb
les
test
bound
adc
mov
and
out
fwait
jecxz
iret
ljmp
sub
popa
flds
in
sub
sarb
sbb
lock
or
insl
jmp
fwait
adc
cmp
test
push
cwtl
hlt
pop
jmp
aad
insl
in
xchg
mov
mov
mov
mov
imul
xchg
enter
xchg
jb
jnp
mov
xor
mov
mov
cmp
cld
int
test
xor
push
jns
outsl
xchg
ja,pt
dec
nop
push
das
dec
mov
adcl
cmovl
nop
ss
jns
and
jo
fiadds
notl
cmp
jo
lea
xchg
mov
inc
push
mov
out
fstl
or
xchg
scas
lret
xchg
pop
or
mov
gs
sbb
and
mov
cli
scas
orl
sti
stc
inc
add
and
out
jnp
mov
insb
fcmovnb
xchg
les
dec
inc
dec
xor
dec
es
fimull
mov
push
std
cmp
sub
sub
scas
push
out
jge
leave
sti
test
out
ret
lods
dec
xchg
out
xor
scas
mov
pop
xor
cmp
or
sarb
jnp
fldt
aaa
cmpsb
addr16
adc
fwait
mov
cli
mov
movsb
pop
jmp
and
mov
pop
cltd
dec
aam
mov
jge
clc
orl
cmp
or
es
lods
les
int3
cli
rcr
push
sub
addr16
xlat
and
xor
add
aad
jg
sbb
pop
pop
jg
lock
sti
scas
push
add
mov
lds
loop
inc
mov
lret
xor
sub
in
cs
arpl
imul
lock
arpl
mov
lds
sbb
test
shlb
popa
cwtl
jae
test
outsl
mov
add
sub
and
mov
pop
cli
sub
rcl
repnz
fldt
lret
or
xchg
gs
cmp
int
iret
addr16
enter
es
test
inc
pop
insb
inc
add
into
in
sub
jge
mov
lcall
xchg
in
in
test
test
adc
push
xchg
imul
andb
out
sti
repnz
nop
push
ljmp
iret
dec
getsec
jns
insl
and
mov
gs
push
ret
int3
mov
int3
lods
or
push
dec
mov
stc
jno
insb
fwait
fwait
jae
xchg
lret
pop
mov
test
pop
lods
in
ss
and
fbstp
outsb
jbe
or
ret
sti
clc
pop
rclb
add
das
inc
mov
jb
in
jb
sub
mov
std
dec
out
out
out
push
push
xor
adc
push
mov
aad
sbbl
loopne
cmp
mov
xor
xchg
xchg
jae
add
or
lretw
je
jo
inc
out
mov
push
mov
mov
xchg
mov
je
xchg
mov
cmp
lea
or
aam
iret
arpl
sub
stos
imul
mov
sbb
sub
sbb
fnsave
lret
insl
daa
pop
mov
add
jge
es
mov
pop
xchg
das
adc
sub
lock
xor
icebp
push
cmp
jnp
cmp
push
movsb
xchg
aaa
out
and
lods
xchg
mov
rcr
fmull
add
and
lods
cs
sbb
sbb
fimull
sub
xorl
and
scas
pop
rcrl
inc
and
sub
xlat
fidivrs
jecxz
jne
sti
or
ja
adc
nop
sbb
inc
rcl
std
jp
inc
into
adc
nop
jg
pop
into
lret
das
in
inc
scas
cmp
push
inc
jbe
mov
inc
sarb
sbb
and
call
fcmovnbe
jecxz
xor
fists
cmp
add
adc
into
mov
fcoml
jo
cmc
into
jb
xchg
jge
mov
sub
pop
loope
outsb
add
dec
xchg
and
xor
mov
add
mov
js
lods
xchg
inc
mov
subl
sub
cmpl
jg
sbb
in
inc
dec
pop
push
mov
scas
mov
outsb
fldl
pop
fmull
mov
xchg
pop
jns
jnp
mov
inc
dec
addr16
and
cli
jno
or
icebp
lods
mov
out
cltd
jb
pop
mov
mov
push
sbb
mov
lods
movsb
out
cs
dec
je
cmp
and
cmp
add
dec
push
rorb
lods
jg
add
hlt
inc
jp
pop
stos
sbb
test
pop
dec
iret
stos
mov
sub
xor
fcmovbe
add
dec
push
out
adc
xchg
fwait
ret
ds
mov
push
aas
mov
pop
inc
test
and
sub
push
int
xchg
mov
add
sbb
ret
aaa
clc
inc
xchg
arpl
orl
lahf
add
jmp
fnstsw
sub
enter
mov
pop
lret
imul
mov
xor
dec
lods
dec
add
lcall
loopne
inc
mov
lock
and
sbb
push
fmuls
outsl
ds
repz
fdivrs
adc
test
lods
adc
cltd
aas
popf
cmpsb
sbb
stc
fidivs
adc
out
insl
testb
mov
mov
bnd
out
dec
mov
cmpsl
mov
jg
adc
nop
inc
sti
mov
mov
gs
lock
sahf
pushf
or
mov
cmpsb
test
add
sbb
addl
pop
out
shrb
xchg
jmp
mov
stc
mov
push
or
scas
jmp
mov
xchg
jg
sub
in
dec
xchg
dec
ds
out
and
fcom
fidivrl
sbb
cmc
movsb
lds
ficomps
jmp
in
lcall
add
orl
enter
in
mov
stos
ds
ss
cmp
inc
aad
push
fisttpl
or
and
dec
xor
movsb
stos
std
lcall
mov
pop
sbb
scas
push
inc
repnz
enter
sti
xchg
imul
sub
push
subb
ret
dec
movsb
scas
xor
data16
jecxz
xor
cmp
lods
stos
test
jmp
cmp
cmpb
test
bound
jb
loop
jnp
lds
lods
mov
mov
fsubrl
dec
mov
sbb
arpl
lret
mov
add
xorb
inc
popl
cltd
inc
iret
xor
cmp
add
jge
rcll
stos
sbb
ljmp
hlt
adcl
mov
arpl
adcl
cmpsl
push
jb
jmp
bswap
mov
adc
test
fcomi
adc
stc
xlat
cltd
in
jb
leave
sahf
mov
push
mov
iret
outsb
dec
xchg
divl
test
mov
mov
mov
sbb
and
mov
insb
repz
jecxz
inc
cmpsb
gs
out
outsl
das
dec
cld
pop
out
or
cmp
mov
adc
mov
inc
stos
cmp
insb
fistps
dec
insl
sub
jo
push
push
test
lods
test
jae
pop
scas
shrl
cwtl
or
aas
mov
test
push
adc
call
mov
out
inc
sub
and
xor
jne
cli
push
fiaddl
cmpsb
aad
das
add
add
xchg
lcall
pop
fistl
scas
insb
sbb
lock
inc
cmc
popa
jnp
sub
enter
lret
in
inc
push
xchg
push
adc
into
inc
adc
cmp
call
repz
test
lds
repz
and
movl
fcoms
test
sbb
xchg
cmp
pop
mov
jp
add
scas
push
repz
flds
imul
jns
cmp
pop
xchg
adc
jle
dec
cltd
xchg
nop
add
xor
inc
lahf
sbb
jl
fistps
ds
xor
lcall
xchg
cmp
iret
push
repnz
jns
iret
cld
das
cmpl
pop
jne
mov
out
cs
dec
jp
adc
imul
jno
dec
sub
shrd
jl
out
imul
sahf
push
and
rclb
addr16
cld
ds
fisubl
sbb
sbb
pusha
mov
lcall
and
mov
cmpsl
adc
mov
imul
inc
lods
gs
std
push
adcb
push
loope
ss
dec
hlt
mov
push
sub
addr16
pushf
and
pop
add
mov
std
sbb
adc
or
cltd
push
popa
fs
sti
sub
popf
dec
push
int3
lds
mov
cmp
lods
lret
cmp
outsl
daa
and
pusha
pop
mov
push
loop
fcoml
jae
test
push
stc
adc
lcall
mov
inc
cs
testb
push
sub
and
add
out
test
adcl
inc
fwait
enter
inc
and
popw
jecxz
mov
out
mov
push
fcoml
nop
call
shlb
setno
and
nop
sub
inc
mov
scas
imul
xor
dec
imul
js
test
xchg
stc
jg
test
push
pop
dec
cld
aaa
js
cwtl
jl
dec
adcl
hlt
int
ret
sub
mov
dec
push
pop
das
xor
decl
dec
inc
dec
mov
push
gs
fldenv
pop
mov
and
rolb
movb
mov
insb
orb
push
stos
daa
dec
cmp
pop
push
in
rcrl
enter
pushl
or
mov
lods
and
out
out
adc
sub
jb
add
or
sbbl
xchg
mov
mov
cmp
sub
rclb
paddsw
xor
push
dec
adc
push
ljmp
adc
mov
clc
fldenv
sub
fldenv
pop
orb
add
insl
pop
fwait
mov
test
lcall
adc
into
pop
aaa
aad
mov
idivb
insl
fs
mov
movsb
ja
mov
mov
sub
imul
mov
xchg
sub
in
xchg
push
orb
push
or
sub
mov
loope
pop
call
repz
sub
mov
lds
inc
add
fldcw
cli
in
jno
sub
cwtl
cmp
stos
loope
pop
mov
push
mov
insb
push
stos
inc
enter
pushf
xlat
adc
into
leave
fstpt
or
dec
mov
ret
arpl
js
cmp
jge
pop
data16
enter
into
pop
iret
jmp
js
ret
mov
adc
sbb
mov
sbb
xor
cmpsl
mov
frndint
mov
or
cltd
cwtl
pop
push
fidivrl
or
in
out
add
cmp
jns
dec
push
insl
fs
movsl
dec
aas
jae
subl
std
xor
js
push
push
testb
call
cmpsl
and
mov
fadd
mov
nop
mov
in
xlat
loop
sub
mov
xor
outsb
jg
ljmp
mov
leave
xor
and
imul
xchg
push
xlat
push
push
mov
mov
aaa
pop
xchg
ja
or
cld
push
lahf
dec
aad
fsubl
mov
fadd
jne
add
mov
addr16
add
out
loopne
pop
out
and
dec
testl
mov
xchg
xor
dec
test
popf
pop
jl
xlat
push
mov
dec
call
popa
scas
loope
jg
cld
and
xor
push
lods
cmp
daa
sahf
andl
std
mov
push
jge
sbb
and
cmp
pop
or
sbb
jo
jl
lods
jp
inc
or
test
add
shr
imul
daa
std
mov
ss
and
fdivl
popf
les
pop
xchg
pop
mov
push
push
jns
mov
fs
decb
movsb
jns
jmp
push
lahf
pop
dec
in
cli
cmpsb
mov
ficoms
inc
loop
cmp
sbb
sub
push
aas
mov
and
dec
mov
js
inc
imul
inc
icebp
into
loop
mov
lcall
ljmp
mov
aaa
iret
nop
push
jbe
movsl
mov
and
and
pop
loope
adc
jae
jmp
int3
dec
mov
cmova
fs
stos
int
lcall
cmc
pop
push
mov
out
idivl
pusha
pop
pop
or
sbb
xor
aam
sbb
imul
sahf
std
lcall
cmc
lock
jge
jp
jg
add
aaa
stos
sub
xchg
cwtl
cmpsl
movsl
test
mov
cltd
mov
jne
push
loope
xor
push
or
or
add
sbb
mov
ret
mov
inc
push
cli
jl
stos
xor
dec
pop
dec
and
jo
cmc
or
paddusw
xchg
pop
cmp
xchg
stc
mov
out
loope
mov
subb
push
lahf
into
mov
iret
mov
sbb
dec
ret
dec
aad
or
xchg
xlat
and
ficoml
js
fiadds
ror
js
and
push
enter
repz
lret
xor
arpl
pusha
or
adcl
xorl
outsb
pop
inc
fs
ss
adc
cmpsb
adc
xchg
inc
scas
shlb
xchg
pop
or
xchg
into
repz
pop
and
sbb
loop
sub
ja
mov
or
ret
addb
arpl
imul
mov
imul
call
in
ftst
shll
mov
std
lret
testl
aam
xchg
sbb
mov
xchg
xchg
add
mov
sbb
daa
inc
mov
out
mov
and
lahf
movsb
ja
add
xor
mov
dec
lods
pop
dec
pop
dec
add
ret
push
in
mov
scas
mov
std
sahf
mov
ljmp
lock
and
pop
inc
lods
and
cmp
mov
lds
cs
out
notrack
fists
and
fstpl
clc
cmp
fnstcw
movsb
outsb
loop
fwait
push
ds
repz
cmpsb
pop
test
arpl
mov
jae
aam
aam
xchg
pushf
aas
pop
loop
rcrb
lds
out
xor
push
pop
sbbb
lret
aas
das
test
add
gs
jbe
xor
ljmp
push
pop
sub
mov
adc
jmp
mov
popa
gs
pusha
into
out
lret
mov
out
push
movsl
cmp
repz
fs
jne
stc
or
out
jae
das
push
pusha
fmuls
jno
add
stos
cltd
mov
int
popa
negb
fdivrp
leave
hlt
scas
out
jp
ds
add
into
adc
movsb
cmp
xchg
stos
pusha
mov
scas
jl
adcl
fwait
mov
jmp
test
cmp
lock
inc
push
in
jo
jne
inc
lret
fmul
jl
sub
mov
cmpsl
push
or
adc
mov
stos
push
mov
pop
imul
lret
dec
test
out
test
ret
iret
int3
inc
pop
mov
call
outsb
cmp
xchg
cmpsb
sub
enter
mov
incb
xchg
clc
lcall
iret
outsl
cli
call
insb
shrb
mov
orb
push
nop
inc
insb
push
mov
es
lret
sub
pop
jmp
test
pop
sbb
das
xor
pop
loop
lret
incl
inc
sub
scas
xchg
cs
mov
dec
cmp
xor
sub
in
push
xor
xor
les
pop
push
int
sub
adc
in
lods
ret
pop
adc
mov
shll
sub
rcll
daa
cmp
push
cwtl
jl
fstps
shlb
test
arpl
leave
pop
mov
push
xchg
xchg
jge
inc
mov
adc
rclb
or
and
inc
sbb
out
or
aaa
nop
dec
adc
ja
daa
xchg
or
enter
shll
decl
ret
mov
adc
jnp,pn
xchg
sahf
bound
jne
inc
rclb
dec
sbb
test
mov
mov
jbe
lret
shll
aad
adc
dec
mov
hlt
xchg
xlat
mov
inc
push
push
lcall
scas
cmp
jno
stos
pop
inc
andl
loope
loope
lret
and
push
repz
jo
cwtl
jne
inc
jle
mov
jnp
daa
hlt
call
loope
dec
mov
mov
gs
cld
jmp
sub
stos
mov
pop
mov
lods
adc
in
sub
xchg
mov
add
inc
out
or
mov
jnp
sub
fsincos
aad
mov
insl
mov
ret
pop
jmp
ror
dec
ss
mov
mov
mov
clc
test
lea
rcr
mov
jo
testb
testl
mov
jo
push
out
push
push
inc
out
pop
lret
adc
jo
enter
ds
inc
ds
imul
cld
nop
cmc
sub
and
lods
repnz
aam
xchg
add
mov
mov
mov
sbb
mov
mov
add
fstl
or
js
pushf
mov
jecxz
dec
cmp
stos
add
mov
cmp
push
prefetch
into
shrl
xor
or
mov
inc
cwtl
pop
push
inc
stos
mov
pop
lock
mov
sar
mov
pop
push
mov
jmp
push
pop
aaa
or
clc
xchg
dec
adc
sti
lcall
push
lods
gs
shrb
cwtl
jo
push
mov
and
mov
imul
inc
imul
stos
ucomiss
push
test
xlat
sahf
and
and
mov
cmp
dec
icebp
cmpsl
push
add
mov
jnp
arpl
das
ljmp
mov
push
addr16
sub
xor
sbb
pusha
jae
and
in
xchg
mov
in
adc
fisttps
or
push
cmp
rol
mov
push
xor
shrl
push
pop
dec
popf
and
push
add
stc
xchg
or
xor
pop
sbb
pusha
or
and
sbb
lahf
jle
sti
mov
sahf
mov
push
xchg
fsubl
push
ljmp
dec
lcall
mov
daa
mov
pop
dec
sahf
jmp
ss
arpl
fwait
inc
xor
movb
and
mov
push
dec
out
hlt
and
and
test
int
dec
gs
jmp
mov
movsl
xlat
bound
insl
lahf
in
xchg
bound
xchg
hlt
loopne
jne
pop
aas
imul
xchg
mov
pushl
mov
inc
or
leave
mov
or
or
cli
iret
and
dec
jno
dec
or
add
outsl
test
mov
popa
push
mov
cmp
push
push
scas
inc
jns
shrl
cmpsl
sub
and
mov
js
sbb
aam
stos
cli
xchg
xor
lds
popf
xchg
dec
lret
dec
push
lds
lahf
inc
sbb
addr16
out
push
nop
xlat
int
int
push
std
jle
in
cmpsb
aas
cwtl
es
mov
dec
jmp
mov
test
je
lea
sar
jmp
cmp
sub
lcall
repnz
push
add
ja
mov
enter
mov
pusha
mov
outsl
idivb
mov
and
fdivrp
push
into
mov
repz
push
or
lds
sbb
xchg
imul
dec
mov
jns
inc
jno
nop
sub
adc
mov
jmp
adc
jo
loopne
aam
cs
xor
xor
xchg
cwtl
test
add
test
imul
push
pusha
jecxz
or
xorl
icebp
or
push
mov
ds
or
cmpsl
jbe
xor
mov
fwait
cmc
adc
jo
jmp
push
clc
or
xchg
mov
sub
sub
scas
cmp
pop
cltd
adc
out
xchg
mov
or
fs
lcall
add
push
mov
mov
push
rorb
lret
aam
sahf
lcall
bound
jne
mov
mov
shrb
xchg
in
push
in
leave
inc
jl
aad
sbb
out
and
adc
mov
cwtl
int
mov
out
xor
push
push
daa
loop
jmp
cmp
or
cmp
xchg
subb
jl
ffreep
or
das
jmp
call
pop
loope
pusha
mov
daa
or
xor
pop
stos
mov
iret
add
adc
ss
fiaddl
out
dec
mov
xor
push
ds
cmp
bound
cltd
or
repz
mov
pop
jl
rcrl
int3
gs
dec
push
loopne
mov
fs
push
insb
push
xor
nop
dec
pop
out
dec
fdivrs
outsl
xchg
sub
ret
mov
mov
or
adc
or
inc
jo
inc
adc
repz
lcall
xor
addr16
xor
mov
pop
inc
ret
lret
push
loope
sbb
cwtl
xor
movsb
mov
push
das
adc
in
test
adc
orb
lret
push
loop
mov
js
jmp
repnz
mov
add
or
jmp
test
sbb
js
cmp
push
jns
scas
fwait
sub
dec
mov
test
jmp
pop
in
loop
xchg
xor
mov
lds
or
scas
jae
aas
add
inc
pop
mov
mov
mov
test
xchg
pop
ret
or
cmp
mov
into
mov
data16
pop
cs
push
aam
stos
sub
mov
dec
shrl
inc
popf
mov
je
lock
xor
outsl
sub
ret
pop
shl
mov
call
cmpsb
rcrb
negl
and
dec
and
arpl
push
lock
xchg
push
sub
shll
aas
pop
fisttpl
cmpsl
adc
data16
adc
sbb
aaa
sub
psllq
jbe
sub
imulb
xchg
outsb
pop
push
jl
scas
scas
pusha
adc
fadds
mov
movsb
add
sahf
jecxz
cmp
pop
cmpsb
rol
mov
mov
jmp
adc
inc
add
mov
lret
sti
scas
bound
pushf
cwtl
push
rorl
and
inc
jns
lea
mov
xor
inc
pop
add
and
mov
icebp
addb
icebp
jb
lock
cmp
inc
and
add
mov
repnz
leave
mov
fwait
sub
xor
movsb
mov
nop
xchg
and
xchg
test
aad
add
mov
jnp
nop
stc
imul
stos
stc
notb
push
dec
ja
adc
mov
gs
cmp
and
push
stos
into
int3
add
push
jno
mov
mov
test
jmp
cmpsl
jo
stos
es
adc
lret
mov
cmp
inc
push
mov
popa
das
inc
nop
cli
cli
fwait
ljmp
sbb
inc
cwtl
scas
enter
mov
pop
das
xor
sarl
fidivs
gs
loopne
cli
mov
lods
cmp
ljmp
or
mov
loopne
add
inc
stc
xor
sbb
aaa
xchg
pop
dec
dec
xchg
outsl
std
sbb
pop
pop
mov
sub
mov
jne
pusha
or
mov
jo
inc
sahf
sub
xchg
push
aad
out
fcoml
mov
je
loopne
mov
into
push
xchg
dec
out
das
or
decb
fildll
fsubl
xchg
test
pop
test
pop
idivl
push
mov
lds
sbb
sub
mov
leave
jae
jmp
addr16
lret
pop
loop
hlt
mov
mov
out
nop
movsl
lea
imul
xchg
cmc
idivl
adc
lods
jmp
dec
mov
je
xor
stc
jl
xor
movsl
cmp
dec
mov
adc
cmc
pop
fxch
push
jge
ja
mov
xchg
jecxz
xchg
repz
imul
cs
add
gs
xchg
leave
inc
pop
leave
mov
dec
into
mov
dec
or
dec
mov
sahf
dec
mov
lods
push
lret
push
mov
jns
mov
cmp
mov
cmp
inc
scas
rclb
mov
iret
and
bnd
dec
pusha
loope,pt
xchg
adc
jne
push
daa
int
pusha
xor
sbb
adc
aad
or
js
pushf
xchg
jmp
mov
scas
sub
stos
xchg
add
mov
out
sbb
sahf
add
jmp
mov
nop
popf
std
scas
jae
and
hlt
rclb
xor
ret
mov
xor
inc
pop
and
test
mov
cltd
inc
dec
xchg
cltd
cmp
push
add
xchg
jns
push
imull
push
scas
shl
mov
xor
cwtl
movb
pop
andb
pop
inc
pop
mov
das
push
in
mov
mov
adc
dec
pushf
inc
push
mov
roll
sbb
arpl
ja
or
inc
dec
je
pop
jne
lret
jle
cs
add
shlb
mov
icebp
shll
rcrb
lahf
gs
mov
mov
add
stos
jne
jge
push
cwtl
push
push
in
mov
xor
pop
fcompp
or
dec
push
aaa
dec
fmuls
sar
cltd
lds
ror
mov
xchg
pop
jp
adc
aam
or
or
fs
clc
pop
pop
xchg
jb
insl
pusha
jge
idivl
lret
adc
pusha
and
jle
jge
dec
mov
ja
push
push
inc
sahf
push
in
out
mov
or
movsb
movsb
dec
lock
mov
mov
cmpsl
shr
or
arpl
aad
mov
mov
xchg
dec
fists
cs
adc
ds
hlt
push
negb
add
pop
jb
pop
stc
adc
inc
cmp
mov
repz
es
add
inc
outsl
lret
mov
lods
inc
movsb
popa
pusha
pop
hlt
pop
sub
aaa
ret
xor
loope
sbb
mov
and
andl
fsubrl
xor
int3
cli
push
rcl
cmp
adc
popf
sub
lcall
push
mov
sub
sub
cmp
lret
mov
lea
call
sub
jl
sub
cmc
test
or
lock
mov
sbb
mov
cwtl
rorl
mov
mov
or
jg
fsubr
push
inc
dec
addr16
push
into
sbb
jl
rorb
jge
mov
in
mov
and
fidivrs
mov
mov
addr16
push
or
adc
fiaddl
sti
outsl
sub
push
jb
push
xchg
push
pop
shl
mov
and
ljmp
pop
cmp
popa
adc
mov
xor
repz
movsb
mov
cmp
pop
lcall
and
daa
jo
inc
popf
jle
sbb
sbb
out
test
aaa
lods
cmp
jl
aad
cmpsb
lds
sahf
mov
jg
fstp
jmp
jecxz
jp
xlat
dec
loopne
test
out
loop
adc
sbb
jns
jp
or
jns
jp
jb
jecxz
cmp
sbb
push
inc
and
gs
js
imul
xchg
mov
or
add
push
jbe
cwtl
sahf
mov
or
loope
jge
sbb
sbb
scas
pop
ja
lods
aas
push
inc
stos
xor
lods
mov
cmp
adc
xor
mov
std
dec
sti
push
xor
jl
rcrb
sbb
outsl
xor
sbb
sbb
cmpsl
out
or
stc
fs
cmp
sti
xchg
push
pop
fdivl
clc
sahf
je
out
mov
push
adc
shll
out
test
cmp
adc
shl
push
mov
iret
daa
divb
adc
jnp
mov
loopne
lock
cltd
xchg
cmc
xchg
fisubrl
cmp
imul
imulb
sub
push
dec
mov
inc
repz
ret
push
mov
hlt
js
pop
andl
push
inc
cwtl
mov
dec
shll
dec
jne
and
push
jmp
jle
icebp
sub
pop
jg
gs
adc
pop
pop
jmp
pop
jae
pop
int3
faddp
cmc
imul
fistps
repz
jg
dec
andl
test
cmc
adcb
data16
aaa
adc
cld
adc
cmp
pop
into
fwait
sti
or
and
mov
xchg
loop
sbb
xor
or
insl
sarb
dec
cmp
xor
adc
dec
push
mov
lcall
aaa
cmp
or
mov
stc
cmpsl
test
rorb
mov
mov
xchg
jmp
stc
and
push
mov
push
ficoms
sub
dec
pop
mov
sahf
cmp
sbb
out
clc
lock
shlb
fisttps
sub
test
ret
frstor
mov
sbb
repz
cmp
pop
sub
jnp
mov
xchg
fstpl
les
mov
fmuls
lods
icebp
leave
sbb
loopne
mov
mov
and
fimull
jnp
jp
push
push
or
mov
mov
popa
imul
or
enter
popf
test
out
in
sbb
pop
rolb
in
cmpsl
sub
fwait
sti
mov
mov
mov
mov
jno
add
mov
ds
xor
rcrb
testl
or
xchg
inc
rorl
mov
xor
dec
out
pop
movsb
in
jmp
jmp
inc
nop
inc
jmp
movsb
repnz
dec
mov
cmc
pop
aas
lea
lret
rcll
test
fisubrl
push
push
jle
data16
xor
call
cwtl
xchg
hlt
insl
bound
xchg
cmp
repz
stos
xchg
mov
es
popf
in
daa
mov
popl
rorb
xchg
stos
cs
pop
mov
leave
out
mov
mov
inc
or
ds
xor
inc
test
add
sbb
jns
loope
sbb
mov
xchg
testl
sub
subl
cmp
inc
and
xchg
cmp
inc
sti
fmuls
leave
lea
or
dec
sti
call
ljmp
bound
fildl
sti
xor
ficoms
mov
jbe
stos
das
sbb
loop
imul
sbb
in
or
mov
dec
add
lods
xor
cmc
jg
out
fsubl
mov
bound
and
insb
sub
push
cwtl
mov
test
add
rcll
xor
outsl
in
sbb
mov
inc
pop
adc
imul
dec
pop
mov
jo
popf
mov
push
inc
add
fwait
bound
push
fstps
das
push
dec
lcall
or
mov
xor
fs
test
scas
aad
fmul
leave
xor
rcrb
shrb
aam
lret
les
xor
pushf
sbb
xor
cmp
cli
in
les
mov
adc
add
rcll
adc
inc
fidivrs
loop
push
sahf
push
sub
cmpsb
test
adc
clc
dec
into
push
ficomps
movsb
rcrl
ficomps
imul
in
push
xor
pop
add
mov
push
scas
sub
pop
shr
xchg
pop
jbe
and
pop
inc
and
sbb
and
fstl
inc
iret
sbb
les
std
mov
movsl
enter
popf
add
out
jbe
fildl
pop
movsl
inc
sti
mov
push
lea
data16
xchg
dec
sub
ljmp
mov
idiv
xor
add
mov
and
pop
mov
popf
sbb
inc
dec
mov
pop
xchg
mov
sub
and
xchg
iret
std
mov
das
or
lea
lods
test
test
cmc
sub
lcall
fidivs
ljmp
and
add
test
mov
push
pushf
jmp
es
aad
out
test
lcall
repnz
pop
cwtl
sub
jo
cmpsl
outsl
test
jno
fiadds
inc
test
and
popa
adc
xchg
lahf
enter
push
es
nop
jl
jae
inc
pop
cs
into
fstps
or
adc
jmp
xchg
fidivrl
push
pop
imul
cmp
cmpl
repz
or
daa
cmpsl
cwtl
add
test
fadds
pusha
jmp
push
mov
push
pop
fmuls
fldcw
pop
push
data16
xchg
mov
js
popf
loope
popf
lods
lahf
cmp
ss
inc
les
lahf
push
enter
and
in
pop
cmpsb
xor
sahf
inc
out
inc
ds
mov
jo
imul
adc
xchg
add
pop
imul
dec
mov
aam
push
test
mov
xor
hlt
jno
pop
mov
add
fucom
stos
sarb
push
push
lret
push
xor
adc
jne
sub
mov
ljmp
outsl
dec
push
fldt
insb
push
mov
push
pop
out
push
cmc
cwtl
xchg
fisubs
loope
lods
jb
push
fwait
stos
mov
in
insb
xor
cwtl
mov
dec
mov
jnp
icebp
icebp
fistps
arpl
aam
clc
call
mov
into
sub
jmp
mov
dec
ficoml
sbbb
stc
int
fsubs
lock
scas
or
inc
mov
mov
add
bound
xor
popa
sti
xor
push
stos
dec
push
inc
dec
lret
sahf
iret
pop
cmpsl
sbb
fwait
sub
stos
or
and
sbb
cmp
outsb
sbb
cmp
out
inc
mov
cld
inc
adc
mov
inc
std
jne
loope
mov
cli
js
outsb
dec
lock
mov
push
add
pop
iret
out
xchg
int
repz
add
aam
stos
loope
and
imul
push
lods
cmp
lahf
push
push
pop
popl
xor
std
test
das
lds
cmp
pusha
mov
aaa
push
jg
cli
test
sbb
dec
and
rolb
push
stc
mov
pop
mov
xor
push
out
incl
xchg
sbb
sub
add
xor
scas
aam
adcb
mov
dec
out
out
jmp
fstpt
and
lods
mov
xchg
sub
test
dec
insb
popf
loope
jnp
ficompl
and
xor
sti
jmp
fstpl
stos
bound
jnp
mov
xor
cli
cmp
mov
mov
movntq
cld
jo
pop
std
jle
in
je
testl
stos
divl
cmpsl
repz
insl
addr16
cmp
jns
sub
xchg
pop
push
imul
loope
mov
cmp
js
dec
and
pop
pop
push
insl
shlb
sbb
jl
lea
xchg
outsb
mov
enter
pop
and
dec
jecxz
lret
mul
out
fstl
scas
imul
adc
pop
loope
callw
pop
out
pushf
and
popf
hlt
cmpl
inc
sub
lahf
lret
imul
lods
ja
std
sahf
loop
ds
icebp
lock
xor
sbb
mov
push
dec
enter
jmp
mov
inc
or
shlb
xor
lock
sub
push
xor
xor
lods
add
add
clc
pop
rcrb
mov
mov
cmp
outsl
and
clc
push
cli
and
outsb
mov
cmp
pop
repnz
paddb
cli
popf
adc
jno
jg
mov
addb
dec
mov
movsb
popf
sbb
fcompl
js
mov
pop
add
mov
cmp
and
fisttpll
xor
lret
js
js
ds
js
ficoml
popf
jno
or
xchg
outsb
jg
and
into
jmp
xor
pop
bound
hlt
notb
sbb
pop
nop
in
adc
add
pop
ds
nop
imulb
inc
inc
outsl
cmp
sbb
addb
mov
movsl
adc
inc
imul
rcr
loopne
insb
sub
dec
out
aas
out
in
aam
xor
sub
and
sbb
inc
cmp
mov
pushf
les
jo
jns
mov
lods
jle,pn
add
in
les
sbb
pusha
fcomi
cli
clc
es
sahf
sahf
aad
adc
mov
mov
fldenv
ficomps
pop
or
test
push
jp
call
imul
not
xchg
decl
int3
jno
sbb
push
gs
mov
insl
mov
inc
dec
and
ds
movsb
leave
pop
lret
shr
sub
lea
ret
push
popf
dec
mov
cmp
sahf
outsb
jne
call
push
mov
or
lods
mov
mov
out
aad
push
leave
outsb
cli
loopne
xor
mov
dec
or
xchg
icebp
scas
sub
scas
adc
ficompl
aaa
rcr
pop
mov
adc
jge
imul
bound
nop
adc
cmp
les
clc
leave
insl
sti
loopne
js
jo
out
jecxz
int
pop
mov
sub
add
push
inc
adc
mov
std
xchg
test
xchg
dec
pushf
call
mov
fs
incl
sarb
add
stc
and
aad
std
movb
push
test
les
popf
dec
test
stos
pop
push
rcrl
dec
push
sarl
add
add
neg
sbb
inc
cmpsb
repnz
int3
popf
aas
sub
shrl
mov
daa
movsb
adc
dec
outsb
movsb
sub
sbb
repnz
mov
dec
or
jg,pn
dec
rorl
and
jno
daa
dec
mov
test
stos
loope
pop
jo
mov
imul
clc
xchg
pop
dec
lods
gs
jo
xchg
and
cmpsb
and
or
mov
sbb
data16
cltd
in
or
mov
adc
ss
mov
ja
inc
out
jno
fimuls
dec
cwtl
mov
mov
or
mov
push
adc
in
sbb
xchg
mov
xor
loopne
in
xchg
enter
ret
mov
clc
dec
xchg
adc
fldcw
sahf
scas
stos
leave
and
push
xchg
mov
push
lret
lods
push
shrb
push
inc
lcall
add
vdivss
bound
pushf
mov
inc
negb
das
lret
ja
mov
mov
push
stos
mov
in
and
and
cmp
mov
sub
add
mov
sti
or
into
rcrl
testb
push
mov
stos
xchg
adc
sub
fnstsw
mov
sbb
mov
sar
and
orb
aam
sub
push
jb
xchg
jmp
adc
aad
xchg
in
inc
inc
adc
mov
mov
pop
jle
in
inc
nop
sub
pop
stc
xor
mov
nop
push
xchg
or
mov
jecxz
jp
subb
dec
adcl
je
scas
mov
lcall
daa
cld
fs
pushf
mov
imul
cltd
test
loopne
aas
sub
xchg
lea
test
repnz
xor
lods
push
adc
and
icebp
pop
xor
sub
push
push
or
xchg
cld
and
cmpsl
add
popf
mov
test
mov
xor
lea
xor
pop
sub
fisubrl
pop
sti
xchg
adc
adc
push
or
movsl
and
xchg
inc
or
mov
popf
pop
out
cmp
ss
jne
popa
icebp
dec
pop
xorl
jge
lock
inc
subb
in
movsb
fisttps
popf
mov
push
test
xlat
xchg
aad
clc
aam
scas
fisubrl
ss
lods
popf
push
or
ss
pop
sbb
lea
sbb
fsubrs
sbb
sbb
mov
sub
loopne
ret
inc
mov
in
int3
aaa
fdivl
mov
in
idivl
insl
pop
pop
ljmp
es
sbb
xchg
addr16
pop
adc
push
je
dec
aad
pop
js,pt
mov
roll
jp
inc
fildl
popa
sub
pop
js
das
push
imul
mov
xchg
mov
orb
or
mov
enter
push
push
test
ljmp
filds
or
jne
cld
enter
mov
push
or
cmpsb
jns
push
mov
inc
dec
pop
incl
daa
pop
notl
mov
in
dec
sub
out
dec
mov
loopne
fnsave
aad
pop
repz
shl
in
sub
lcall
test
sbb
imul
xor
mov
or
sub
mov
dec
jae
jle
lods
adc
mov
ljmp
sub
inc
loope
mov
imul
mov
fcoms
adc
std
dec
outsb
xor
out
stos
or
xlat
ret
sbb
out
sub
jl
in
in
mov
ret
icebp
movsl
xor
sbb
outsb
nop
rcll
mov
cwtl
iret
rcl
push
ror
adc
cltd
lods
ret
adc
xchg
mulb
jle
cli
cmpsb
stc
sbb
cmp
adc
jns
mov
inc
or
in
and
dec
fcmovbe
push
aaa
cmp
sbb
mov
pop
stos
cli
clc
testl
loopne
test
push
psubusb
ds
imul
dec
xor
imul
push
dec
fcompl
mov
loope
xor
xor
xor
lea
and
sub
out
out
pusha
test
clc
jbe
shll
int
hlt
clc
cmpsb
mov
out
inc
jp
addr16
sub
or
enter
xchg
mov
jmp
sahf
xchg
adc
loopne
and
add
fs
movsb
jp,pt
jl
test
jecxz
cmp
scas
imul
xor
mov
mov
xor
adc
mov
nop
movsl
adc
push
sbb
in
sahf
pushf
call
mov
enter
rol
out
js
clc
cld
sub
mov
pop
or
push
mov
repz
xchg
or
push
push
lds
sbb
movsl
lret
or
inc
test
pop
fcomps
and
mov
sbb
sbb
push
ret
jae
sahf
rclb
outsl
fwait
cmp
add
cmpsb
jno
popl
rcll
dec
pop
data16
aam
cwtl
test
jns
jge
cmpsb
popl
mov
vmulpd
inc
shlb
xchg
sbb
lcall
dec
mov
sbb
shll
xchg
sbb
sbb
jecxz
dec
mov
ljmp
dec
in
popa
inc
pop
push
jne
mov
sbb
push
or
cmp
aad
int3
cmpsb
push
push
lds
push
push
out
sti
rcr
scas
adc
es
shr
inc
addb
mov
xor
mov
sub
repnz
insb
stos
sub
loope
popa
cmpsb
movsb
xor
in
push
scas
ja
mov
orl
sub
lret
cmp
das
push
repnz
adc
popf
pop
xorb
rcll
push
xor
lret
push
cwtl
xchg
aas
mov
push
add
fwait
inc
mov
push
call
ja
leave
test
aad
pop
ljmp
mov
pop
sbb
or
dec
clc
fwait
mov
mov
sbb
pushf
ja
pop
movsl
jae
imul
mov
mov
mov
dec
and
sbb
loope
arpl
or
dec
lret
call
popa
out
push
sahf
adc
mov
dec
push
test
mov
pop
aaa
fdiv
nop
mov
push
mov
test
test
jl
in
into
dec
xchg
out
pusha
xor
cmp
sarb
leave
je
loope
mov
pop
lahf
jg
jle
iret
mov
fcoms
dec
mov
push
rolb
sbb
xchg
mov
int
dec
or
push
fistl
movsb
add
xorb
or
popa
mov
pop
test
or
inc
mov
xor
mov
gs
pop
imul
andl
cmp
lcall
mov
pop
aad
adc
lahf
push
outsl
cmovne
or
xchg
or
and
lds
outsl
cld
inc
push
sub
mov
and
sub
int
xor
das
ljmp
and
add
mov
xchg
jne
jge
int3
sbb
adc
or
lret
adc
sbb
jle
pop
sahf
testb
add
adc
cld
add
or
push
pop
jae
loop
mov
sub
sub
lds
and
mov
jae
les
jne
and
inc
adc
outsb
adc
xchg
pop
xorb
adc
mov
iret
dec
bnd
add
push
adc
xor
jg
mull
pop
mov
out
xor
enter
pop
ret
dec
and
out
mov
cmp
in
ljmp
pshufw
bts
lcall
mov
and
mov
xchg
sub
jne
inc
or
dec
jb
push
cmp
js
or
cli
test
ret
leave
inc
pop
push
mov
or
sub
xor
jo
cmp
jbe
fsubrs
pop
pop
aam
outsl
and
lea
push
popf
test
xchg
out
adc
rcrl
test
test
xchg
fnstsw
aam
jno
repz
jle
mov
jae
das
cld
mov
push
daa
mov
in
xor
stos
cmpsb
or
rorl
fldenv
mov
cmp
sbb
xor
icebp
out
test
jne
es
out
pusha
ds
into
push
xor
sbb
int
cmp
sbb
std
shl
or
inc
pop
pop
xor
or
mov
sbb
mov
cwtl
dec
pop
and
ficompl
pop
and
out
xchg
jmp
sub
xchg
adc
hlt
xlat
rclb
lret
pop
inc
enter
pop
jmp
imull
lret
sbb
and
lods
cmp
stos
cmp
mov
inc
mov
mov
add
push
dec
adc
cltd
cs
loopne
outsb
lea
lret
cmpsb
jle
shlb
sub
fwait
out
pop
sbb
adc
adc
pushf
dec
push
inc
mov
jns
fadd
in
ljmp
push
inc
test
dec
sahf
out
les
lahf
sbb
mov
and
insb
push
xlat
sub
xor
sbb
arpl
cmp
cmp
add
jne
sti
pushf
xchg
pop
out
pop
fstpl
or
xchg
test
mov
mov
xchg
mov
jmp
or
std
aam
mov
mov
fstps
mov
stos
fmull
jb
repnz
inc
mov
jns
add
jae
cld
stos
dec
mov
xor
xor
dec
push
pop
mov
push
dec
xchg
hlt
popf
add
xor
xor
mov
or
xchg
inc
rcll
xchg
fiaddl
cmp
xchg
imul
jmp
lea
ljmp
mov
data16
mov
pop
xchg
arpl
sub
call
jbe
jns
sbb
hlt
mov
mov
ficompl
dec
inc
rol
or
mov
add
jb
in
xchg
cmp
mul
lcall
pop
into
push
mov
sti
neg
push
movsl
stos
mov
inc
xchg
lret
cwtl
addb
fsubl
into
and
loopne
jmp
cmp
fs
mov
cwtl
jnp
int3
repz
cmp
mov
mov
inc
arpl
pop
outsb
mov
push
out
sti
decb
mov
xorl
shlb
popa
pop
mov
sbb
adc
jne
nop
ja
cmc
or
or
push
mov
aaa
mov
lahf
mov
lcall
mov
imul
int
pop
push
pop
pop
push
mov
pop
outsb
cmc
mov
dec
imul
xlat
arpl
cmp
add
test
movsl
mov
cmp
pop
mov
or
jae
loopne
fwait
push
enter
mov
std
fs
xlat
sbb
sahf
adc
push
push
mov
jo
jl
cmp
lea
data16
shlb
decl
inc
loope
ud2
pop
aas
loope
and
es
push
adc
stos
pop
mov
sbb
lods
cli
xchg
sub
jnp
push
push
add
adc
lret
mov
adc
xor
outsb
push
mov
inc
lahf
pop
xorl
sbb
jb
adc
lahf
mov
sahf
cwtl
jg
aas
call
cltd
div
and
or
ret
data16
jno
mov
add
cld
add
in
dec
fcmovb
mov
test
dec
fldl
clc
ret
sbb
mov
jo
mov
jnp
jle
sahf
inc
and
lea
call
ficompl
and
mov
lret
sbb
add
jmp
cmpsl
jecxz
lret
pop
jbe
mov
in
mov
adc
adc
lds
repz
and
and
bound
mov
pusha
ds
lods
jecxz
add
test
push
fistpll
mov
inc
mov
js
pop
and
decl
mov
jns
xlat
mov
ja
jge
mov
bound
in
in
push
pop
sbb
mov
push
adc
cwtl
push
mov
dec
imul
je
push
shll
push
adc
cmp
fidivl
loop
rcll
sti
imul
scas
popa
push
push
jae
xchg
fdivrl
inc
andl
aam
ficoms
add
lea
xchg
mov
cld
addb
xchg
xchg
xchg
xchg
cmpsl
cmp
mov
imul
stos
lcall
insl
push
jp
cmp
dec
fcoml
in
aaa
inc
std
rclb
mov
and
push
ljmp
das
mov
adc
in
inc
imul
or
cli
insl
int
sti
inc
mov
in
or
xchg
xor
out
mov
inc
or
fidivl
xor
stc
jo
iret
hlt
in
push
lods
dec
fadds
loope
roll
cmpb
into
mov
push
xor
push
das
push
aas
jp
je
and
jmp
push
cmp
jne
sbb
jo
ja
fxch
daa
lret
jo
pop
clc
nop
mov
mov
insl
lock
mov
push
mov
mov
sbb
call
or
adc
out
xchg
mov
idivb
add
xor
mov
lcall
sbb
inc
mov
icebp
cmpsl
xor
sarb
or
hlt
mov
stos
jbe
out
cmp
rclb
mov
iret
rcrl
mov
xchg
imul
jle
push
mov
adc
lahf
mov
cmp
in
rorl
ss
xchg
ljmp
mov
xchg
inc
jo
fcomps
imul
xchg
pop
popa
xchg
shrb
adc
push
jnp
mov
pop
shll
push
adc
loopne
aas
mov
fstl
test
pop
popf
fistpl
imul
cmpsl
fadds
pop
loop
sarb
lea
inc
fs
cs
and
jne
movsl
int3
push
cltd
popf
out
lods
inc
daa
and
mov
xchg
scas
jno
mov
jno
iret
std
xchg
pop
jmp
mov
mov
mov
arpl
inc
in
dec
mov
test
imul
xchg
jae
cmp
mov
ret
lret
jp
push
popf
or
mov
inc
xchg
mov
in
mov
xor
popa
jnp
add
insl
call
stos
mul
test
xchg
dec
jb
push
push
or
xchg
movsb
gs
popf
dec
idiv
mov
mov
push
mov
mov
shll
call
pop
dec
xchg
cmp
repnz
inc
lock
test
idiv
shl
xchg
jo
jb
pop
and
dec
inc
cltd
pop
outsl
dec
in
jmp
mov
pop
adc
jbe
stc
call
fcomps
into
iret
mov
fmuls
loopne
add
pop
mov
mov
mov
in
std
and
int
enter
mov
fwait
push
adc
pop
cwtl
sbb
out
inc
mov
rclb
adc
pop
out
dec
ljmp
mov
lea
mov
sub
mov
push
jnp
sbb
cmp
scas
int
xchg
adc
inc
mov
jns
ds
push
pop
ljmp
ljmp
xchg
loopne
dec
and
mov
xchg
xchg
stos
jecxz
xchg
jno
les
mov
lods
cmp
jg
cld
jns
je
outsb
cli
xchg
loop
daa
loope
and
adc
rorl
dec
dec
aad
sbb
jno
jb
sub
test
adc
cmpl
fwait
jnp
sub
movsl
lock
inc
popa
jmp
inc
pop
xor
push
mov
testl
insb
xor
xchg
jecxz
aad
popa
cmpsl
pop
dec
ror
das
shlb
mov
adc
ficoml
and
push
test
sbb
jmp
jmp
and
adc
ficoml
or
pop
lods
pop
jmp
das
mov
inc
test
mov
call
jmp
jl
js
nop
mov
popa
ds
or
rcrb
dec
xor
aam
add
jae
mov
cmp
adc
orl
cli
cmp
xchg
mov
jae
pop
fsubl
lret
lret
inc
adc
popa
and
jbe
xchg
add
dec
aam
cld
std
dec
or
js
adc
test
fsubrs
jle
fbstp
loop
cmpsl
mov
or
aam
sbb
sub
mov
ja
adc
ljmp
xlat
mov
insl
shll
loopne
mov
pop
inc
mov
imull
je
jb
test
inc
add
push
dec
pop
jmp
jle
out
mov
xacquire
rcrl
outsb
xor
aam
std
mov
daa
xchg
sbb
mov
addl
test
lea
dec
cmp
mov
mov
jae
jmp
jge
add
mov
lods
jp
out
leave
in
or
xor
out
jne
sub
cwtl
test
in
dec
adcl
sub
xchg
or
xorb
cmc
data16
js
push
clc
and
gs
cmp
or
add
sbb
adc
scas
sbb
jge
out
nop
or
out
arpl
leave
dec
nop
xchg
adc
arpl
mov
or
shr
data16
mov
fistl
adc
dec
mov
mov
ffreep
popa
xor
popa
mov
and
mov
je
popf
shll
jb
and
dec
sti
hlt
jne
fcmovne
push
pop
sarl
shl
incb
push
aam
mov
and
lcall
ror
cltd
aam
cmp
movsl
sbb
out
mov
jmp
xchg
call
jecxz
iret
sti
ja
or
les
sbb
ja
add
and
testl
or
dec
mov
xchg
js
xchg
mov
pop
mov
push
repz
xchg
sub
cmp
movsb
aas
dec
paddd
sbb
mulb
push
or
and
mov
lds
ret
or
xchg
rclb
pop
pop
mov
movsl
insb
int3
xchg
xor
out
popa
lods
negl
fcmovbe
sbb
or
or
add
and
out
adc
jnp
out
lock
and
aas
lods
xor
ret
popw
xchg
iret
pop
adc
or
mov
mov
xchg
subb
mov
gs
mov
es
repnz
imul
scas
sbb
fnstsw
pop
fimull
in
jp
les
pop
sbb
jno
es
pop
adcb
xchg
push
xchg
mov
adc
and
sub
fwait
test
adc
out
and
out
frstor
mov
sbb
pop
xchg
cmp
call
insb
mov
test
mov
xor
dec
mov
sub
fwait
loope
jae
mov
jbe
mov
imul
out
ljmp
fxch
aaa
lcall
xor
cld
stos
test
pop
fwait
loop
testl
xchg
ljmp
inc
pop
enter
xchg
ja
scas
cltd
dec
cmp
adc
mov
cmc
mov
ja
cltd
add
cs
mov
shrl
ljmp
or
loop
fadds
add
push
ret
mov
ret
sub
push
ja
pop
mov
stc
inc
inc
scas
add
and
inc
sti
push
xchg
add
leave
xchg
das
out
jb
mov
and
jnp
push
mov
cmp
iret
fcomip
xchg
pop
mov
cmp
sub
repz
pusha
push
inc
add
xchg
pop
fiadds
cmc
clc
int3
xchg
pushf
js
add
aad
xchg
cld
loope
inc
test
repz
int
andl
stos
cmpsb
pop
inc
divb
add
cmc
hlt
pop
outsl
out
iret
insb
into
jp
ror
imul
sub
outsl
out
popa
shll
icebp
outsl
imul
xor
push
roll
sub
jl
push
out
dec
gs
insl
add
mov
add
sbb
call
fcmove
aaa
repnz
out
dec
lret
cs
call
pop
sub
daa
xchg
xor
jo
adc
jb
dec
and
adc
stc
movsl
mov
pop
mov
mov
int3
test
xor
stc
ret
lods
jae
subl
mov
fidivrs
sub
mov
mov
adc
pop
fcoms
adc
jecxz
repnz
xor
xchg
out
rclb
mov
adc
or
dec
xor
lock
in
sub
jle
jecxz
fidivl
xlat
cld
and
daa
test
adc
leave
lea
cld
sub
nop
into
sub
sub
cs
sarb
adc
jnp
sbb
xor
push
cmp
ret
push
ss
out
pop
mov
jnp
and
std
jge
xchg
jecxz
clc
cmpl
in
adc
fisubs
xor
rclb
inc
in
adc
in
xlat
je
out
icebp
ja
pop
je
enter
cld
fmulp
push
mul
repnz
dec
xchg
jmp
movsb
or
stos
mov
fcoml
dec
insl
sahf
aaa
xlat
push
pushl
or
mov
js
mul
or
in
jle
pusha
nop
xchg
xchg
test
push
add
mov
fwait
in
lret
xor
cli
je
inc
enter
imul
shrb
mov
imul
ja
repz
call
pop
dec
shll
jno
out
div
stos
pop
mov
cmp
movsl
fcmovnu
inc
xor
or
inc
sub
das
outsb
bndstx
stc
push
mov
loopne
mov
mov
mov
shll
dec
movsl
int
out
inc
mov
sub
clc
ficompl
in
adc
sub
sarb
mov
mov
stc
fisubrl
stc
push
inc
pop
add
stc
mov
pop
or
mov
jns
in
gs
or
fs
je
jecxz
mov
and
addr16
nop
mov
jb
inc
push
mov
arpl
fstpl
jae
call
pusha
jecxz
js
mov
mov
dec
cmp
cmp
cmp
push
cmp
pop
data16
mov
push
cmpsb
das
jbe
stos
adc
loopne
mov
lods
lods
or
mov
dec
dec
jne
mov
not
cltd
ljmp
add
mov
mov
sbb
adc
scas
lea
into
ss
push
je
movsb
aaa
pop
inc
jnp
aad
into
loop
inc
adc
mov
pop
adc
inc
je
adcl
pop
xlat
xchg
push
jecxz
cltd
pop
mov
pop
mov
cld
add
stos
mov
pop
push
cmp
adc
push
loop
in
mov
daa
int
mov
icebp
or
stc
push
push
leave
sub
movb
push
inc
add
daa
mov
xchg
rol
adc
mov
mov
mov
cmp
nop
xchg
in
jle
jns
adc
dec
adc
lock
push
aas
mov
sbb
cltd
or
xchg
inc
cmpsl
sbb
add
jae
mov
sub
push
dec
xchg
daa
testl
enter
adc
testl
cmpl
mov
jo
imul
aam
sub
imul
mov
adc
dec
push
leave
sti
dec
pop
loope
mov
pop
mov
fsts
shll
outsl
les
push
test
aad
adc
pop
push
ror
or
scas
xchg
push
es
ficoml
jno
insb
fs
test
dec
lret
ds
test
sbb
stos
inc
inc
rorb
jl
push
sbb
jae
outsb
rcrb
adc
inc
fdiv
adc
mov
jg
dec
nop
stos
and
cmp
inc
and
sbb
jl
data16
xor
lret
push
cli
stc
dec
push
sbb
xchg
mov
leave
popf
clc
insl
mov
cltd
mov
jns
add
pop
repnz
dec
pop
push
mov
push
adcl
aam
push
out
cmp
pop
out
lcall
xchg
orps
sub
fisttpl
and
lock
test
shlb
in
push
sub
jnp
scas
aaa
orl
sub
mov
xchg
or
add
xchg
aad
fsts
fnstcw
repnz
pop
xchg
inc
mov
rclb
and
hlt
jnp
push
inc
pusha
ficomps
sbb
adcb
adc
dec
cmp
shrl
jge
adc
sti
cltd
out
cltd
jg
fwait
jb
adc
sahf
scas
ss
push
fldt
aas
jo
pop
mov
dec
shlb
xor
pop
mov
lock
cmp
adc
mov
ret
sbb
dec
cmc
shlb
mov
clc
loope
ret
cs
negb
pop
mov
test
sbb
jnp
stos
mov
jnp
pop
je
xor
les
xor
adc
ss
out
ret
lret
mov
outsl
gs
roll
mov
add
dec
jb
insb
cwtl
aaa
stos
push
movsl
add
and
cmp
fcmovnbe
aam
mov
xchg
cmp
cld
cmpsb
testb
dec
scas
enter
jae
fisttpl
lea
xor
sbb
xchg
fcoms
nop
dec
jb
adc
or
outsb
sbb
insl
adc
xor
pop
adc
sbb
push
mov
mov
xchg
push
call
and
and
cmp
mov
xchg
mov
lods
std
add
ja
hlt
pop
add
xchg
cmpsl
adc
cmp
push
pop
mov
and
and
test
mov
inc
imul
sub
xor
mov
je
lret
daa
int
pop
dec
sub
arpl
mov
stos
adc
adc
xor
push
mov
testb
xchg
and
mov
and
icebp
sbb
test
mov
mov
shl
cmp
push
mov
sub
xchg
mov
ret
out
shll
pop
ss
aaa
clc
push
jne
shlb
push
daa
sbb
cmp
imul
repz
rorb
add
adc
divl
xchg
repnz
iret
push
in
inc
stos
pop
test
pop
push
fstps
mov
stos
adc
aam
test
loopne
data16
jne
cli
fnsave
jb
xor
jns
fistl
loope
cs
and
mov
push
or
out
add
lock
dec
pop
add
pop
dec
pop
fmuls
fucomp
std
push
cmp
mov
call
out
pop
cmp
daa
std
mov
sbb
add
fdivl
fsubrs
sbb
inc
cmpsb
push
lcall
aad
push
fisubs
mov
or
es
das
popf
pop
in
nop
sarb
xchg
movsl
fs
cli
fists
popf
pop
arpl
fwait
mov
ret
shlb
inc
cmp
pop
cli
mov
ds
cmp
adc
xlat
push
push
mov
lret
cmc
hlt
adc
pusha
jae
push
inc
or
pop
xchg
aam
mov
or
rorb
mov
xchg
lock
and
dec
mov
pop
call
jge
movsb
in
and
daa
enter
inc
addr16
mov
std
add
enter
mov
xlat
loope
loope
orb
outsl
xchg
jo
cmpsl
pop
dec
pop
insb
test
cs
stos
lret
int
ret
int3
jo
jecxz
cmpsb
lock
cmp
loope
nop
xor
or
andb
add
xchg
push
push
and
xchg
and
scas
enter
mull
mov
divl
and
jmp
bound
add
pop
cs
dec
adc
loopne
xor
cmpsb
stos
pushf
adc
and
adc
clc
hlt
ret
ja
push
add
mov
cmpsb
inc
shrl
aad
dec
shrl
js
and
mov
pop
xchg
mov
stos
xlat
popf
mov
test
rorb
mov
hlt
fwait
pop
xor
inc
cmc
dec
fldcw
ds
in
stc
test
addr16
int3
sbb
lcall
in
in
stc
stc
es
pushf
pop
mov
cmp
jp
movsl
mov
xchg
push
inc
jle
add
aaa
scas
push
bound
mov
iret
sub
jne
sub
adc
les
xchg
add
dec
xor
and
shr
sbb
push
add
lahf
cmp
mov
xorl
or
call
lea
data16
pop
add
mov
xchg
in
sub
or
pushw
pop
js
adc
subb
nop
mov
lods
mov
lahf
mov
clc
lahf
cs
test
into
push
xchg
inc
rolb
sbb
daa
cld
mov
push
call
es
stc
in
popa
dec
jmp
jmp
outsb
sbb
pop
inc
lahf
jne
call
mov
mov
shlb
xchg
bound
mov
orl
mov
pop
jne
xchg
xor
or
dec
push
xor
in
loope
mov
aam
inc
sub
test
nop
int
jae
mov
std
lret
jge
pop
jb
in
call
iret
test
dec
mov
pop
inc
in
dec
hlt
pop
push
adc
cmp
sahf
lahf
stos
inc
mov
or
pop
ljmp
testl
adc
std
dec
and
xor
push
adc
rcr
xor
push
cmp
inc
fldl
pop
jle
xchg
jp
enter
pop
leave
addr16
sub
popf
ret
mov
lds
aad
or
test
inc
xchg
mov
jae
popa
fidivs
aas
lea
mov
mov
cmp
cmp
cs
mov
push
imul
pop
adc
fwait
and
rorl
arpl
add
fwait
mov
add
xchg
popf
aaa
mov
sub
ljmp
lods
dec
aam
dec
adc
adc
jmp
shl
mov
insl
addr16
add
xlat
sbb
outsl
stos
add
add
popf
jle
lods
test
jns
pusha
and
jp
inc
push
insl
outsb
iret
ljmp
or
fsubrl
insl
popa
movsl
fstpl
push
cmp
pop
dec
push
and
sbb
mov
xlat
notl
dec
inc
dec
pop
jg
addr16
xchg
adc
mov
rcrl
sub
enter
mov
repnz
pop
cmp
xor
xor
and
xor
lock
rorl
insb
leave
in
push
push
inc
or
sarb
imul
arpl
xchg
push
or
ret
or
popf
imul
add
adc
stc
lcall
pop
jmp
ffreep
fists
and
mov
hlt
repz
repnz
lret
scas
call
sahf
hlt
cmpsb
or
imul
xor
xchg
cli
shrl
mov
shll
dec
nop
pop
mov
pop
xchg
add
or
cli
xor
mov
mov
repz
jg
mov
xor
push
pmulhuw
cltd
adc
cmp
sbb
fdivrl
jnp
or
adc
xchg
in
inc
push
cmc
hlt
jle
mov
test
pop
adc
add
rcl
decl
cld
pop
lock
jg
mov
xchg
lock
or
std
xor
faddl
inc
fmuls
movsb
adc
ja
arpl
jecxz
ret
jnp
xchg
or
pop
push
dec
cmp
jnp
scas
jae
sbb
xchg
dec
mov
enter
mov
mov
mov
push
and
jecxz
xor
int3
jge
mov
stc
pop
pop
insb
jne
imul
loopne
inc
mov
xor
push
and
sti
imul
pop
rolb
mov
pop
popa
push
or
mov
mov
andl
or
popf
xchg
mov
xor
adc
cmp
ficoml
imull
add
inc
sbb
pop
lahf
ret
ret
lods
testl
repz
insl
xor
add
in
add
push
cli
das
xchg
pop
push
cltd
mov
iret
mov
add
push
jbe
jb
insb
adc
dec
insl
mov
mov
or
sar
loopne
call
bound
notl
je
scas
in
call
jecxz
cld
or
into
sbb
clc
and
popf
adc
shlb
jne
cs
sub
pop
rolb
popa
mov
or
adc
push
dec
movsl
mov
ja
or
gs
or
cld
cli
idivl
push
push
xor
movsb
xchg
mov
repnz
fwait
jge
fwait
add
inc
stos
mov
sub
inc
inc
loop
sub
or
xchg
mov
outsb
loope
xchg
xor
shll
lods
push
sbb
push
enter
arpl
dec
lret
or
adc
xchg
pop
fmulp
iret
mov
jb
out
push
fldpi
aas
out
je
dec
cmp
cmp
push
or
mov
test
pushf
pop
xchg
mov
inc
mul
fwait
lahf
outsb
cmp
outsl
lretw
sbb
hlt
push
xchg
jo
jne
shrl
dec
jo
dec
fmull
sti
cld
mov
int3
rcr
add
cmp
lock
push
jp
mov
test
mov
mov
pop
xor
sar
rorl
incb
lret
mov
cmpsl
sub
fs
popf
push
xchg
bound
pop
cmp
cmp
jnp
jae
adc
hlt
push
jno
inc
stc
icebp
ret
adc
or
mov
cs
mov
fdivl
sarl
cmp
popa
mov
pushf
xor
push
mov
xlat
cli
inc
pop
mov
jae
inc
xchg
rcrl
pushf
mov
stc
cmp
xchg
lods
cmpsl
inc
js
lds
pop
and
lret
mov
jle,pt
push
cmp
shrb
push
push
es
add
sbb
adc
mov
xchg
xchg
push
test
lret
cmp
sbb
fwait
push
dec
ds
test
stos
jmp
jae
aaa
xchg
adc
adc
fisubrl
bound
inc
iret
mov
shlb
stos
repnz
lock
pop
dec
cmp
mov
ret
shrl
mov
sub
movsl
imul
in
cmpl
or
enter
push
in
jle
clc
test
in
mov
imul
and
jg
scas
imul
or
jmp
pop
push
push
leave
and
dec
scas
fistl
or
std
add
mov
dec
adc
adc
clc
xchg
jo
push
into
enter
arpl
loop
xor
cmp
and
out
jae
mov
ss
incb
loop
loopne
cmpsl
sbb
cwtl
aam
and
adc
addb
js
mov
sbb
cmp
cmp
push
loope
std
repz
lea
gs
je
lret
mov
stos
or
sbb
cmp
cmpsl
out
pop
jb
push
push
mov
dec
mov
int
cmp
inc
xchg
or
mov
out
mov
lcall
cmpb
push
lds
fdecstp
sbb
and
aam
ja
dec
popf
push
xchg
fdivr
daa
jo
cld
push
and
aas
mov
push
jnp
xchg
mov
cmpsb
sub
pop
inc
jecxz
push
into
xor
je
jb
jb
ja
pop
pushl
adc
aad
cmp
lcall
jns
bound
movsb
dec
adc
push
mov
sbb
mov
sub
arpl
inc
rep
pop
mov
in
push
lea
sub
mov
stos
xor
lret
fnstenv
inc
pop
jg
dec
cltd
mull
add
pop
mov
pop
lret
dec
xor
inc
adc
dec
icebp
mov
mov
ret
sbb
jge
out
dec
test
pushf
clc
cmp
sbb
movb
lcall
add
jmp
in
add
push
cmpsl
push
decb
push
movsb
mov
sahf
in
jg
or
or
insb
dec
add
and
xor
mov
in
enter
push
test
aam
push
mov
out
pop
js
ret
loopne
and
mov
mov
push
adcl
test
inc
jne
pop
or
cltd
push
lea
daa
inc
in
push
aaa
pcmpeqd
mov
fwait
pop
and
pop
xor
shlb
add
cmp
and
mov
cmp
imul
fcmovne
daa
fnsave
sub
shlb
arpl
push
aaa
shr
cmp
xchg
mov
out
out
dec
xor
and
jne
shl
adc
lea
jnp
loopne
ret
inc
pop
adc
or
xchg
pushf
sahf
fwait
xchg
xor
mov
mov
lea
dec
cmp
dec
push
mov
lods
add
mov
lock
xor
push
cmpsl
adc
fstps
or
and
push
call
dec
or
orl
pop
inc
inc
push
loop
shlb
push
cld
mov
and
xlat
pop
lea
push
sbb
clc
aam
dec
xchg
lea
adc
add
sbb
fs
aam
imul
push
insl
in
jns
adc
xchg
rorl
jmp
xlat
jae
mov
mov
insl
jo
inc
psrlq
jnp
adc
and
pop
xor
sbb
iret
add
imul
ss
push
in
mov
ja
mov
sbb
inc
jb
pop
dec
inc
jle
mov
movsl
lcall
jo
out
xchg
cli
icebp
lcall
fsubs
cmp
xor
mov
addl
pop
inc
jo
dec
mov
xor
scas
or
out
xchg
xlat
add
jae
insl
lahf
loop
push
ja
add
aad
inc
mov
lds
push
and
arpl
shl
rcrb
repz
mov
inc
xor
test
loope
and
stc
leave
push
dec
pop
lret
or
imul
and
leave
andl
inc
into
push
pop
in
fisubs
stc
out
std
lahf
nop
mov
out
xchg
daa
data16
or
outsb
jae
clc
data16
sarb
jecxz
rcrb
push
psrlw
sbb
fsubr
add
pushf
inc
or
int
or
mov
lods
inc
jno
out
fdivp
pop
lret
ffree
dec
and
mov
test
sti
mov
mov
addb
sub
xchg
and
xor
push
stc
fsubrl
js
cmp
mov
inc
shl
fsubrs
push
jmp
lcall
mov
or
mov
jge
inc
mov
rorb
mov
or
jge
jae
adc
cmp
inc
mov
pop
xlat
dec
lcall
xorb
xor
outsl
push
sbbb
mov
and
sbb
scas
push
sub
cli
or
and
outsl
fwait
mull
les
outsl
pop
rolb
and
inc
pushf
popf
dec
push
cwtl
decl
adc
out
dec
rclb
sti
pop
and
pop
paddw
adc
pop
clc
ficompl
fst
mov
and
push
sbb
pop
das
iret
ja
push
dec
lods
fimuls
lcall
push
pushf
add
or
sbb
mov
sbb
sbb
pop
push
mov
testb
mov
xchg
int
lock
jg
je
mov
push
mov
into
cld
or
mov
fdivs
mov
int3
fmull
xor
mov
iret
adc
cmp
les
pusha
mov
sub
cwtl
or
adc
inc
mov
insl
push
repnz
add
jp
push
scas
mov
mov
xor
jle
mov
xchg
mov
fcomp
mov
rcrl
mov
and
lcall
popa
jbe
fdivl
lea
push
imul
cltd
call
mov
push
push
loope
pop
std
dec
inc
add
fxch
in
pusha
cmp
clc
fstl
sub
out
arpl
cmp
outsb
test
sbb
test
outsb
test
add
out
repz
or
cmp
movsb
mov
and
sbb
cld
aam
daa
rcrl
or
adc
push
adc
mov
sbb
sbb
leave
gs
lahf
push
cltd
add
and
icebp
adc
fcoml
lea
ret
mov
jl
loopne
or
ja
mov
mov
sub
int3
int3
pop
push
loope
jnp
pop
cmpsl
mov
add
out
mov
movsl
xchg
adc
in
add
or
das
cmp
stos
stos
add
pop
mov
mov
daa
xchg
cmc
insl
stos
mov
fidivrs
mov
popa
pop
inc
push
mov
stos
jg
pop
cmpsb
adc
cmpsl
mov
int
add
pusha
or
call
lret
divl
and
dec
dec
pop
mov
js
stos
push
or
cmp
xchg
inc
push
add
mov
push
jnp
mov
lods
inc
aas
stc
js
and
xchg
test
jge
testl
mov
jns
lea
jb
sub
adc
jb
in
fsubrp
inc
lods
mov
xadd
dec
sbb
loope
aaa
js
aad
std
pop
enter
push
jg
inc
and
roll
cmpsl
mov
add
push
mov
jecxz
jo
sbb
shlb
sbb
and
push
lods
and
fs
xor
imul
pop
stc
cwtl
sub
adc
testb
ret
pop
enter
fwait
cs
pop
jg
jo
outsl
fs
dec
repnz
call
pop
lret
xor
loopne
out
xchg
or
mov
negl
xchg
xchg
aaa
fcomip
dec
inc
clc
data16
ss
aam
jl
push
les
jae
test
repz
or
pop
mov
xchg
scas
cwtl
in
cld
ret
pusha
shll
or
sarb
in
and
insb
pop
fcoml
mov
ret
dec
adc
and
xchg
inc
pop
sub
xlat
cltd
std
outsl
scas
and
pop
frstor
or
mov
mov
arpl
outsb
mov
adc
js
jno
push
push
inc
xchg
xchg
fsubrs
and
cmc
push
fstpt
ret
stos
and
inc
adcb
or
pushf
cwtl
lods
cmp
push
loop
or
fxch
fsub
clc
mov
sbb
add
orb
mov
xchg
lds
int3
jno
lcall
and
add
mov
jge
pop
loope
cmp
dec
filds
fildll
sbb
sarb
in
add
leave
pop
push
adc
xchg
mov
mov
scas
mov
popw
stos
pusha
xchg
push
enter
lcall
mov
pop
adc
fwait
add
and
test
jge
je
cmpsb
pop
lcall
mov
xchg
xor
add
cmp
pop
inc
pop
test
out
and
lock
mov
push
jp
shrl
cmc
adcb
icebp
bound
mov
imul
out
mov
adc
in
iret
inc
mov
add
xchg
stos
fmulp
testl
mov
dec
inc
ret
pop
outsb
sti
mov
loope
int
mov
lock
int3
lds
cwtl
inc
lahf
bound
cltd
rorb
jmp
aaa
shl
fs
jns
in
aad
xor
hlt
mov
imul
stc
jae
sub
dec
ret
pop
movsl
movsl
pop
nop
cmp
xor
jne
repz
sub
mov
inc
sub
pop
aaa
mov
int3
push
movb
cmp
imul
das
or
dec
sub
inc
push
mov
xor
lea
pop
or
and
xchg
jb
adc
xchg
inc
mov
clc
push
loopne
jge
es
push
mull
stos
das
mov
negl
pusha
fnstcw
pop
scas
add
push
or
mov
jne
pop
mov
mov
xchg
sbb
and
ljmp
inc
mov
adc
sti
add
inc
sub
lods
inc
call
cltd
adc
cwtl
lret
mov
roll
mov
dec
add
push
insb
dec
inc
dec
repz
jne
mov
xchg
mov
sarl
outsl
xlat
fadds
adc
rol
sub
insb
imul
into
push
cltd
sbb
sub
arpl
xorl
push
push
xchg
xlat
imul
in
jnp
lcall
dec
arpl
shrb
adc
test
jns
pushf
bound
fwait
push
or
bound
sub
adc
push
pop
sbbl
xorl
mov
cmp
movb
push
cltd
xlat
mov
xlat
cmpsb
inc
push
gs
adc
cmpsb
mov
sbb
inc
adc
mov
or
xor
clc
sub
rcll
inc
mov
in
jg
enter
cli
jae
xor
push
in
arpl
orl
in
jecxz
sub
mov
mov
dec
dec
sahf
aas
mov
inc
jg
jmp
inc
hlt
mov
decl
pop
mov
dec
ljmp
into
adc
test
ficoml
jle
daa
gs
outsl
xlat
xchg
mov
or
out
int3
xchg
movsb
jl
xchg
pop
adc
pop
lahf
inc
add
into
jmp
push
jecxz
out
insb
enter
popf
push
pop
push
mov
mov
iret
out
inc
adc
adc
lock
cmp
mov
insl
adc
dec
in
incb
mov
jmp
jns
subb
dec
imul
lods
cs
add
xor
inc
fisubrl
outsl
sub
adc
test
adc
push
hlt
xchg
mov
sbb
adc
mov
mov
das
xchg
dec
mov
stos
lods
clc
test
out
xchg
inc
cmp
les
mov
incb
jns
push
pop
stos
repnz
sti
imul
out
outsb
pop
or
jle
adc
imul
add
mov
mov
dec
sub
les
lock
jae
movsb
icebp
sbb
std
jmp
sar
in
aam
or
lock
mov
roll
add
mov
cmp
jae
clc
xchg
inc
lahf
movsb
fmuls
jno
ss
outsb
adc
imulb
in
fistpl
fiadds
enter
in
movsl
push
xlat
shll
mov
in
mov
dec
and
nop
and
xchg
iret
jmp
pop
sbb
addr16
xlat
leave
loop
jl
sti
test
int3
push
sbb
out
leave
xor
addr16
xchg
pop
cmp
sub
adc
and
pushf
fnstenv
movsb
test
shll
call
mov
add
mov
setg
mov
addl
test
jp
and
out
cmp
inc
inc
dec
mov
mov
push
mov
dec
xor
add
out
fistps
push
mov
mov
cmp
cmc
and
fs
mov
and
and
adc
pop
jnp
lret
push
xchg
fmulp
outsl
outsl
pushf
loope
or
or
jg
adc
cli
test
ds
inc
lods
lret
lods
xlat
lods
and
stos
push
xchg
js
xchg
cld
je
mov
mov
gs
and
or
jle
cli
rorb
dec
in
add
imul
arpl
fwait
rol
jp
icebp
push
test
sbb
jo
faddl
fnstsw
adc
sbb
push
hlt
xchg
filds
mov
shrb
inc
and
shlb
ret
insl
ja
das
cmp
shrb
out
notb
dec
lcall
mov
clc
push
adc
xor
aaa
mov
cli
ret
jmp
xor
jmp
inc
cmp
jmp
pushf
loopne
dec
mov
mov
sbb
int3
adc
jnp
adc
jmp
mov
in
xlat
pop
jg
divb
popa
or
aaa
lahf
push
outsl
cmp
lcall
adc
es
ret
test
fstpt
in
mov
mov
cwtl
dec
mov
mov
stos
outsb
adc
lds
ror
fildl
shlb
cld
int
fs
cmp
ret
popf
shl
iret
in
sub
movsl
sub
adcl
inc
in
dec
test
or
lret
xchg
dec
xchg
xor
push
es
enter
dec
mov
jmp
popa
jnp
data16
addr16
jmp
nop
sbb
stc
in
jbe
les
lret
add
adc
icebp
xchg
movsb
sbb
or
lahf
mov
jo
cmp
fwait
icebp
mov
insb
dec
rclb
jp
push
or
pop
adcb
mov
pop
add
insl
inc
clc
cwtl
mov
mov
jmp
and
mov
mov
mov
fisubl
or
jnp
test
inc
lock
call
nop
imulb
mov
out
xor
leave
out
scas
out
inc
push
jo
and
leave
popf
jge
adc
je
fdivrl
sbb
insb
xor
sbb
push
pushf
lret
aam
adc
dec
dec
scas
scas
push
movsl
pop
jne
sbb
mov
insl
fxch
pop
push
mov
jae
sbbb
pop
mov
aaa
mov
loop
test
or
pop
fisubs
fwait
cmpsb
mov
pop
jl
jbe
dec
mov
popa
push
fistpl
dec
int
add
ljmp
lahf
aaa
lret
adc
js
bound
out
push
lods
mov
dec
sbb
add
push
bound
lret
cmp
pop
out
in
or
add
inc
stos
sbb
movsb
push
inc
repnz
das
mov
jno
mov
imul
lds
dec
mov
fcompl
jae
adc
adc
push
testb
xchg
sub
mov
hlt
mov
test
in
ja
mov
rol
stos
cld
sarb
push
mov
push
lock
std
push
cmpsb
ret
xor
and
fwait
xchg
pop
mov
bnd
addr16
jmp
sahf
imul
fcoml
jb
fdivr
das
fiaddl
fisubrs
out
push
mov
aas
pop
pop
xchg
pop
ljmp
and
les
imul
pop
mov
push
inc
xchg
or
js
sahf
sub
pop
mov
cmp
ja
mov
or
jge
std
push
loope
movsl
stos
or
rcrb
orl
sbb
adc
jmp
and
jecxz
pop
rolb
mov
lds
mov
out
sbb
adc
insb
pop
loopne
loop
fldcw
movsb
sbb
cmpsb
xchg
jecxz
mov
lret
scas
cli
lds
mov
cmp
or
pop
jp
push
rorb
and
push
mov
push
xchg
jl
cwtl
inc
scas
xor
mov
xchg
imul
push
xchg
loopne
jle
fs
xor
xchg
jecxz
divl
hlt
lahf
sub
insb
dec
repz
fwait
xchg
mul
subl
xor
mov
outsl
xor
in
rcll
and
xor
xor
frstor
popf
cltd
mov
std
mov
sbb
sub
je
mov
push
dec
sub
cmp
xchg
loop
imul
imul
push
inc
out
jnp
shlb
ss
adcl
jno
mov
jge
sbb
xchg
sbb
add
push
popf
jp
mov
test
jmp
adc
negb
arpl
sbb
mov
push
inc
xlat
xor
push
in
dec
clc
fidivl
dec
jnp
rcrb
xor
loope
jne
repnz
jl
fcmovu
repz
xchg
jmp
stos
sbb
lea
mov
sti
sbb
mov
popf
rolb
mov
outsl
cmpl
in
inc
imul
jns
xor
lret
das
sbb
jo
xchg
ja
inc
pop
movsl
mov
orb
and
gs
jp
aad
cmp
sub
or
xchg
jns
ret
xor
xor
add
pusha
pop
pushf
cltd
lds
ret
add
xor
mov
lods
pop
mov
jb
mov
inc
hlt
sbb
push
sub
pop
jp
shll
pop
sub
jae
movsb
repz
cmc
mov
add
sub
fs
cwtl
jecxz
int3
imul
je
mov
dec
sub
push
cli
aad
dec
cmpsb
push
mov
in
shl
mov
andb
cmp
dec
push
xchg
jo
and
fdivrp
mov
inc
addr16
ror
loop
out
leave
ret
cmp
inc
stos
stos
and
jecxz
pop
mov
pop
cmp
mov
int3
fcmovnbe
mov
mov
subb
nop
mov
or
mov
mov
lcall
inc
shr
iret
mov
sub
push
xor
mov
mov
mov
arpl
icebp
sbb
push
stc
mov
gs
jae
adc
outsb
insb
lahf
cld
xchg
cwtl
js
loop
sub
mov
jle
stos
adc
fwait
adcb
sbb
cmp
mov
xchg
dec
lahf
and
aas
or
cld
mov
adc
sub
push
sub
andl
mov
mov
cmp
insb
sbb
mov
fidivl
mov
sar
jns
xor
xor
mov
or
dec
fisubs
sahf
rclb
out
nop
lret
int3
sbb
mov
stos
mov
into
mov
pop
divb
dec
popa
xchg
ret
ret
adc
popa
jg
xchg
mov
jecxz
add
pop
loopne
ljmp
lods
repnz
int
add
mov
push
pop
xchg
fstpl
jo
shll
dec
in
and
iret
pusha
mov
cmpsl
mov
sarl
out
cmp
adc
cltd
mov
cmp
ret
lahf
and
mov
or
shl
leave
push
je
fsubrl
dec
push
jno
lea
aam
pusha
movsl
cs
xor
cmp
push
cltd
xlat
in
cli
ret
lods
pop
and
jecxz
and
add
push
xor
add
divl
pop
dec
pop
rcrb
adc
aad
jg
jb
sbb
sbb
inc
movsb
mov
push
outsb
pop
ja
pop
mov
ljmp
call
fistpll
push
das
push
xchg
lea
lock
xorb
add
jns
fdivrs
aad
sub
jo
jge
cld
mov
fwait
lea
xchg
mov
add
lock
sbb
out
sbb
cmp
jno
addr16
mov
cmp
test
ficompl
lahf
push
call
mov
std
lods
xchg
inc
sti
cmp
outsb
mov
lcall
sahf
pushf
ljmp
fwait
call
cltd
inc
hlt
nop
ds
sarb
stc
int
dec
dec
xchg
push
aad
cmpsl
pop
in
mov
inc
shll
call
fs
rorl
or
pushf
jecxz
ss
int
lock
aaa
rcll
arpl
out
jb
sarl
call
fwait
clc
jb
jo
testb
sub
setne
and
xchg
xlat
das
fs
roll
ja
xchg
in
sub
sub
mov
mov
shl
int3
std
movsl
div
mov
push
xchg
adc
cld
sbb
bound
mov
scas
xchg
rcll
ljmp
daa
or
mov
jb
push
clc
lds
cmc
mov
loopne
sahf
cmp
cmpsb
mov
cmp
and
mov
sti
into
jge
cld
pop
dec
hlt
and
dec
cltd
xchg
iret
insl
adc
out
and
lods
clc
xor
out
sub
int3
xor
jne
fsts
push
and
xor
push
mov
add
xchg
push
adc
lret
lea
jnp
shll
cmpsb
in
pop
bnd
ds
push
loope
or
xchg
pop
loop
mov
lds
repnz
ja
mov
inc
std
mov
or
mov
test
fdivrs
dec
cli
pop
fcomps
in
push
pop
or
into
pop
pop
loopne
movsb
pop
pop
add
push
cmp
mov
test
ds
mov
cmc
aad
pop
sbbb
push
in
js
inc
out
inc
ret
cmp
cli
std
cmp
dec
xor
and
adc
hlt
sub
bound
adc
lock
jmp
mov
or
add
arpl
les
adc
jae
push
lods
test
shll
fisubrs
mov
bound
adc
idiv
xchg
pop
cmp
jecxz
sbb
ja
loop
outsb
into
mov
add
add
xlat
adc
pop
dec
mov
gs
push
xchg
inc
cvtps2pi
mov
movsl
movsb
mov
and
mov
fsubr
dec
fneni(8087
scas
out
lods
pop
call
inc
push
xor
mov
icebp
pop
xor
in
mov
xor
push
outsb
popa
icebp
je
je
inc
mov
aad
push
test
push
pop
mov
inc
cmc
push
mov
lock
loop
add
outsb
mov
pop
mov
int3
insl
inc
adc
lret
mov
sbb
cmp
pop
lea
lret
sub
xchg
or
aaa
pop
inc
daa
ss
in
lret
movsl
pop
cld
ret
inc
popw
inc
xor
mov
jle
cmp
lods
ss
aaa
je
jl
or
imul
or
pop
ret
enter
add
mov
inc
xchg
xor
scas
mov
out
cltd
add
xchg
mov
xchg
scas
sub
mov
jmp
je
xor
inc
inc
jecxz
push
iret
lea
mov
inc
sbb
out
ss
add
dec
sbb
mov
loope
hlt
cmpsb
iret
push
lods
cmp
dec
int
repnz
push
mov
scas
das
imulb
lret
mov
push
call
mov
push
pop
mov
nop
push
ss
mov
push
or
inc
int
insb
mov
mov
and
add
movsb
or
mov
sub
or
xchg
fsin
clc
insl
or
popf
loopne
gs
stos
cld
push
outsb
std
cltd
xchg
test
lds
rcl
or
sub
filds
dec
jp
sbb
cmp
insl
outsl
les
ja
mov
push
pop
dec
les
cmp
xor
ja
mov
bound
add
cmp
repz
sbb
xchg
std
lds
in
shrl
jae
push
and
inc
mov
add
inc
xchg
pop
or
in
xchg
sbb
xor
stos
mov
jno
jmp
mov
pop
shl
mov
lds
les
xlat
loope
cmp
cld
xchg
sbb
jmp
orl
pop
loop
xlat
xor
lret
rcrl
mov
sub
cmp
fstps
daa
cmp
xchg
fdivl
sbb
mov
fadds
out
sub
push
out
mov
push
lock
and
inc
popf
les
dec
mov
lds
mov
jp
mov
daa
and
stc
xor
movsb
scas
mov
inc
push
dec
lea
mov
ds
sbb
add
pop
and
int
or
cmpsb
xchg
push
cmc
negb
mov
mov
mov
stos
or
loopne
mov
or
dec
xchg
mov
push
xchg
dec
in
ret
out
and
mov
or
fbstp
inc
imul
test
cmpl
add
in
jo
decl
mov
jbe
push
sbbb
pop
mov
inc
mov
or
xor
xchg
cmp
mov
pusha
adc
mov
and
mov
xchg
shlb
cmc
mov
sub
enter
call
dec
xor
inc
repnz
adc
mov
out
fwait
jp
sub
sbb
dec
sarb
xor
leave
adc
mov
loope
test
imul
lock
aad
in
xchg
xchg
sub
cmpb
rcrl
mov
loope
pushf
jbe
loopne
lods
or
sbbb
dec
jecxz
jp
les
rol
es
repnz
sub
inc
call
sbb
push
and
imul
mov
std
lds
out
loope
mov
fstpt
std
ljmp
es
sarl
push
mov
push
lret
lcall
adc
jae
icebp
push
ret
mov
mov
sti
mov
adc
jge
outsb
push
outsl
push
fimull
stos
lret
pushf
test
xor
in
cwtl
mov
pop
lret
sub
push
clc
mov
xchg
jo
sbb
sti
xor
mov
imul
ret
mov
adc
mov
shlb
popf
test
fisubrl
imul
xchg
adc
in
dec
or
out
sbb
cmp
dec
and
fs
or
aad
pop
lds
mulb
pop
xor
clc
loope
jmp
jmp
mov
lret
mov
rorb
movsb
or
mov
or
or
stc
fmuls
ljmp
cmp
in
add
adc
arpl
xchg
sbb
dec
subl
negb
ss
jbe
loop
cmp
pop
int
nop
jmp
rclb
aam
jge
jo,pt
test
shll
dec
rol
xchg
xor
pop
push
std
movsl
lahf
jo
movsl
lret
incl
out
out
xor
dec
pushf
xor
sbb
fstl
pop
mov
xlat
mov
xlat
add
data16
jno
test
xor
sub
les
cmpl
mov
test
stc
pusha
rol
ss
or
dec
sbbb
cwtl
stc
mov
jns
addl
xor
and
adc
sub
pop
pop
mov
lret
data16
dec
cmpsb
ds
sub
inc
out
push
or
xchg
and
movsl
cmp
stc
inc
adc
pop
mov
xchg
mov
and
js
int
stos
outsb
pop
push
insl
leave
adc
shll
call
adc
xchg
loop
cltd
add
jno
lock
flds
popf
movsb
adc
dec
push
fiadds
dec
sub
push
xchg
inc
and
xor
cltd
or
push
jo
adc
xchg
nop
mov
xchg
cmp
cwtl
xor
fmull
pushf
arpl
sub
dec
popf
lods
pop
sub
jmp
adc
cmp
sbb
mov
je
fimuls
leave
mov
es
lods
jns
aas
pop
test
inc
rclb
addr16
xor
js
test
lahf
fcmovbe
movsl
push
adc
and
pop
and
pop
sub
xlat
jp
outsl
dec
xor
dec
cmp
pop
imul
inc
jle
xorl
cmc
jo
and
std
jl
add
mov
ret
xchg
push
pusha
xchg
push
fsubr
mov
mov
ljmp
fstps
je
sub
push
lods
mov
dec
lea
ret
sti
xchg
sub
jno
daa
popf
cltd
nop
hlt
dec
mov
out
mov
mov
mov
and
cmp
hlt
in
jmp
and
xchg
dec
pop
mov
mov
push
jmp
mov
xor
sbb
test
and
xchg
sti
sub
jb
sbb
jnp
pop
mov
test
sti
mov
and
divb
sbb
cmp
xchg
cmp
or
jno
hlt
cmpsb
sbb
jg
pop
pop
mov
sahf
mov
nop
pop
push
es
jbe
test
sub
jmp
xor
pop
cmp
cmp
in
arpl
cmp
mov
sub
cld
dec
sub
mov
push
test
dec
test
mov
or
mov
pop
or
adc
cld
aaa
stos
sbb
sbb
pop
mov
in
and
dec
xchg
mov
xchg
cmp
jmp
adc
mov
xchg
shr
lcall
mov
sub
pop
jg
cmc
mov
loop
daa
xor
pop
mov
ret
jbe
int3
mov
repnz
sahf
mov
jbe
mov
inc
jne
repz
add
rep
jp
mov
add
clc
aam
mov
scas
dec
loope
fwait
loopne
xchg
pop
gs
rcrl
pop
iret
sub
mov
xchg
cli
jg
mov
aas
in
mov
jle
xor
mov
shr
inc
incb
push
mov
or
mov
sbb
shll
mov
sub
int3
cmp
dec
shr
test
dec
inc
in
sub
pop
inc
add
jge
nop
or
adcl
rcll
and
add
push
mov
inc
sub
jmp
xchg
shll
out
adc
popa
lcall
xchg
jo
cltd
movsb
xlat
push
js
ds
es
push
or
fistl
dec
fsubrs
xchg
in
adc
sub
xor
or
adc
fdivrl
mov
sub
lods
xor
imul
xor
out
fmulp
pop
and
lock
ficomps
scas
movsb
subb
fs
scas
inc
arpl
insl
pop
fwait
mov
jno
lahf
jae
mov
sti
mov
inc
mov
pop
cmp
cwtl
fdivrs
js
leave
cld
das
mov
push
iret
xchg
push
or
inc
xor
call
sub
ss
mov
out
jae
repnz
jmp
es
fldt
sub
mov
inc
dec
xor
xor
hlt
cmc
xor
push
or
mov
add
and
and
ja
adc
mov
dec
negb
mov
sbb
pop
mov
xchg
pop
mov
fcomps
sbb
sbb
loopne
adc
stc
vmovhpd
hlt
pop
dec
ret
cltd
movsl
pop
stos
or
loop
sub
push
negb
xchg
daa
mov
jecxz
pop
lds
scas
add
dec
scas
in
xchg
popf
mov
or
mov
sbb
outsl
cmp
dec
pop
std
test
loopne
inc
push
arpl
jge
adc
mov
xchg
push
mov
and
fldcw
pusha
lock
in
cmp
insl
in
cmp
xchg
mov
into
sub
xchg
icebp
pusha
outsl
rolb
scas
sahf
out
fiaddl
mov
popa
mov
cmp
xchg
lock
xchg
pushl
ret
rorl
ds
xlat
dec
push
imul
xchg
fimuls
sti
inc
stc
loopne
mov
push
sbb
pop
fisttpl
mov
out
shl
std
mov
les
push
jns
fwait
or
mov
and
mov
sub
xchg
out
lea
aaa
push
adcl
aam
xchg
xchg
sbb
rorb
testl
inc
cli
loop
xchg
andl
test
clc
xchg
sahf
scas
jl
jp
sub
daa
movsb
daa
push
push
xchg
ret
push
xchg
aaa
je
mov
inc
mov
adc
sub
push
pushw
sbb
adc
mov
nop
cmp
std
pop
aam
fdivs
ds
sti
xchg
pop
bound
cmp
jb
adc
mov
sbb
or
jmp
test
cli
testl
call
push
daa
lock
movq
jg
and
into
adc
ljmp
outsb
push
scas
cmovb
add
dec
jo
xchg
cmc
lock
pop
lcall
clc
xchg
push
mov
ror
lods
loopne
jae
sub
in
or
loopne
or
jecxz
mov
add
clc
or
frstor
jns
shll
addl
add
push
sub
nop
add
mov
test
mov
cmp
ss
ljmp
daa
xchg
xor
pop
in
fistl
jae
pusha
sar
or
adc
add
jge
fisubrs
andl
rcrl
fisubrl
jbe
jbe
pop
shll
cmp
mov
sbb
test
and
xor
mov
mov
lods
cs
pop
iret
sub
cmpsb
xchg
cmp
bound
inc
sub
test
in
fs
or
aaa
scas
data16
xor
xorb
jo
scas
cmp
bound
push
cmp
pause
inc
mov
mov
mov
dec
subb
mov
sbb
mov
or
inc
mov
and
lds
pusha
jg
adc
xor
insl
outsl
jl
int
adc
inc
icebp
aad
xchg
mul
jmp
fsubs
popf
lcall
push
cmpl
sub
lods
iret
mov
cmpl
cmp
out
inc
inc
std
setbe
aaa
stos
outsl
dec
xchg
iret
cmpb
int
loop
xchg
nop
out
rorb
jne
fildll
sub
jg
bound
adc
push
pop
mov
jp
test
stos
test
ljmp
pusha
inc
dec
xchg
jecxz
xchg
test
mov
cmp
das
mov
dec
xor
mov
call
mov
sbb
cld
add
dec
jmp
lods
mov
ljmp
adc
sbb
aam
ficoms
push
mov
push
andb
fs
insl
scas
pusha
dec
nop
pop
call
dec
dec
addl
mov
cmp
stc
dec
mov
das
sub
jl
sbb
jmp
add
mov
ret
fcmovnb
cmp
sub
cmp
jp
aad
lea
idivb
lods
fs
repz
add
inc
shlb
loope
mov
jae
inc
inc
mov
push
fs
sbb
fs
out
push
inc
sti
or
and
je
in
aaa
shll
mov
cmp
push
xor
js
dec
add
mov
xchg
mov
and
mov
decl
ret
sub
dec
sub
sbb
aas
sub
in
enter
mov
xacquire
stos
outsl
imul
push
insb
mov
jnp
stc
sbb
aad
adc
fwait
icebp
data16
inc
xchg
in
dec
sbb
shrl
andb
cmp
mov
pop
mov
int
xor
or
call
scas
es
xchg
xchg
stos
aaa
dec
jb
in
jge
fucomi
pop
xchg
inc
int3
sbb
dec
sbb
jo
and
sub
jp
mov
sahf
aad
xchg
lock
adc
jnp
jns
sub
inc
fsubl
jmp
sub
int
pop
sub
leave
inc
imul
inc
popf
dec
mov
roll
imul
into
push
xchg
add
push
aaa
pop
or
popa
push
mov
mov
rcl
ljmp
xchg
push
xor
arpl
in
mov
sahf
xor
mov
lods
clc
andps
and
and
pop
leave
outsb
add
add
cmp
inc
ficoms
clc
popf
in
leave
ja
je
xor
jae
call
mov
int3
stos
mov
mov
sub
lods
mov
adc
adc
stos
and
insb
pop
adc
or
ljmp
pusha
xor
rcll
cmp
xor
nop
jmp
sbb
jmp
icebp
add
lcall
adc
dec
dec
pop
lock
je
and
lock
add
adc
jae
scas
scas
pop
js
or
cli
add
jb
fchs
movsl
stos
daa
outsl
dec
lods
test
adc
xorl
mov
dec
fisttps
xor
pop
sub
cmp
out
sarb
sbb
push
sub
mov
cmp
test
sbb
push
cwtl
push
push
inc
sarl
dec
imul
xchg
jmp
hlt
mov
push
push
in
lods
push
vmovd
mov
pop
and
mov
xlat
jno
stos
pop
mov
fdiv
fldt
adc
or
loop
inc
cmp
fisubs
xchg
lock
push
movsl
inc
cmp
pop
mov
daa
adc
cmp
sbb
mov
push
stos
push
inc
or
dec
ret
call
xchg
sub
lods
aaa
pop
lods
lcall
in
pop
mov
mov
inc
shlb
movsb
loop
push
lods
or
mov
fdivrl
or
test
movsl
push
pop
fimuls
fisttpll
jnp
jmp
flds
leave
js
jmp
dec
mov
adc
inc
mov
fnstenv
add
push
pop
push
outsb
pop
addr16
out
sbb
or
orl
xor
dec
int3
aam
aaa
xchg
outsl
jo
pop
sbb
pop
cmp
fimull
insl
adc
scas
mov
or
out
mov
sahf
jne
sahf
lods
jle
setp
push
out
pop
pop
ja
xlat
shrb
inc
cmc
lods
insb
lods
sub
add
int3
mov
mov
xor
jp
adc
xor
lcall
sbb
test
repz
cmp
out
mov
jp
push
add
nop
jo
xor
push
aaa
lea
das
push
dec
adc
lea
lret
xchg
jnp
movsl
cmpsb
repz
ss
pop
mov
jle
jle
bound
mov
xchg
movsl
mov
pop
mov
loopne
mov
int3
mulb
sti
shlb
push
sti
push
adc
xor
les
test
jmp
cmc
das
int
shl
jb
xchg
movsb
xor
sarl
push
lret
and
or
gs
ljmp
pop
lahf
push
rolb
jecxz
sub
mov
adc
add
and
push
xor
xchg
idivb
mov
clc
push
movsb
and
xchg
pop
adc
xor
add
xor
mov
js
ret
and
pop
fiadds
xor
ret
push
pop
push
push
sub
es
loop
cmp
sub
sub
insl
clc
mov
cmp
sbb
loopne
cmp
and
cmc
jmp
enter
push
daa
std
fadds
out
mov
inc
mov
ret
out
sub
pusha
inc
cmpsb
inc
push
mov
cld
insb
xlat
mov
enter
loope
sub
jb
xor
into
add
shl
mov
mov
das
push
jmp
aad
inc
aas
xlat
cmp
ja
mov
ds
gs
xchg
lea
leave
sub
jns
xchg
sbb
and
ror
sub
inc
hlt
sub
sub
dec
loop
sub
mov
ret
sub
out
in
lcall
subl
aam
test
call
adc
xchg
addr16
cli
aad
dec
test
xchg
dec
sub
ds
or
jge
add
or
loope
mov
mov
dec
mov
sbb
adc
fldcw
cmpsl
nop
cmp
add
movsl
test
das
pop
mov
and
dec
lahf
ret
ljmp
in
mov
jp
test
mov
stc
in
jbe
xlat
dec
cld
ds
mov
test
fdivp
pop
sarl
int3
rep
xor
pop
sbb
sub
imull
jmp
sbb
stc
sbb
mov
aad
inc
ja
mov
jo
dec
repnz
mov
mov
push
stos
pcmpeqb
push
add
adc
push
push
cmpsb
data16
movsb
xchg
fisttpl
mov
or
cs
lds
pusha
leave
adc
mov
and
ficompl
jle
xor
push
lea
cmc
jmp
sbb
aaa
xchg
pop
sub
aas
push
xchg
dec
mov
ja
ja
jl
inc
sti
clc
cld
pop
cli
rorb
push
cltd
lcall
adc
cmpsb
outsl
leave
xlat
stc
shll
sbb
xchg
xor
aas
pop
sbb
roll
add
jmpw
lret
dec
shr
add
imul
or
cld
sbb
leave
sti
lcall
inc
mov
daa
add
popf
ja
inc
pop
cmp
push
or
pusha
dec
mov
cmp
cmpsl
xorb
or
cs
jmp
insb
inc
sbbb
pop
aas
inc
ds
jne
roll
xor
mov
ret
mov
std
mov
mov
pop
jecxz
add
cltd
int3
cmpsl
inc
rolb
mov
push
loop
push
inc
sbb
out
test
test
push
add
cmp
in
sti
clc
lret
cmpsb
mov
pop
push
xor
fs
sub
sbb
xor
push
pop
icebp
insl
dec
jns
imul
cld
out
inc
movsl
imulb
mov
add
mov
pop
fs
jae
shll
movsl
dec
lods
pushf
ret
jle
push
push
pop
and
das
and
imul
jl
data16
and
into
jo
shll
fists
sbbb
lock
outsb
addr16
sahf
loopne
push
sub
xchg
mov
or
icebp
shlb
es
mov
fldl
lds
jae
and
or
jmp
neg
pop
roll
repz
sub
jp
inc
jmp
pop
push
sub
fdivrl
fisttpl
xchg
jge
adc
aas
add
mov
xor
jne
xchg
xchg
iret
sbb
xchg
dec
fs
icebp
movsb
test
imul
stos
dec
icebp
dec
jo
rcr
push
push
xor
adc
sbb
fadd
sub
ret
push
and
std
scas
jmp
cs
mov
cmp
popf
dec
arpl
in
mov
fdivs
xorb
mov
leave
push
repz
bound
in
outsb
add
popf
mov
add
adc
mov
ss
pop
xchg
ds
xchg
push
push
or
push
mov
mov
in
hlt
divb
test
jl
jno
popf
pusha
pop
loopne
cmp
in
push
fsubrs
mov
test
repz
adc
call
insb
cmp
inc
iret
and
dec
push
mov
lahf
jno
mov
sahf
mul
xchg
rcrb
dec
int3
lret
adc
mov
dec
push
aaa
dec
jg
adc
push
adc
inc
xor
stos
jno
pop
sbb
jl
mov
push
popa
jp
out
std
lea
mov
incb
mov
sbb
inc
jl
xor
add
add
add
int3
aaa
xor
ss
lcall
es
cwtl
negl
stos
ds
mov
and
cli
call
mov
in
aaa
insl
movsl
lahf
cltd
inc
cld
pop
daa
mov
and
fstpl
mov
jae
shlb
mov
push
fimuls
xor
adc
inc
ret
inc
jl
sub
inc
repnz
sub
popf
xchg
fcoml
pop
call
or
mov
mov
xchg
xchg
add
cmp
imul
lods
ss
in
jns
lret
adc
push
fldt
ds
add
in
cmp
push
mov
out
dec
push
shrb
call
pop
sahf
push
sub
jno
mov
mov
into
and
std
lea
adc
jg
adc
mov
fidivs
fwait
and
icebp
clc
test
jmp
cmpsb
repnz
xchg
jmp
popf
fstpl
sbb
mov
notb
lret
sub
pop
mov
or
xor
sbb
pop
ret
sbb
outsb
das
sbb
hlt
xor
or
cli
lock
mov
movsb
cs
adc
push
sbbl
scas
cld
cmp
insl
fwait
sub
push
sub
stos
mov
inc
test
lods
xchg
faddl
pusha
sbbl
and
sarl
mov
pushf
add
rorb
mov
jl
jbe
sbb
mov
pop
xor
outsb
pop
sub
hlt
ja
leave
cmp
inc
clc
sbb
dec
lock
pusha
inc
inc
ja
mov
sub
jp
testl
test
rcrl
pop
cmp
and
push
sbb
es
xlat
adc
scas
jmp
inc
jg
xchg
sbb
xor
aaa
enter
je
dec
adc
pop
lods
fwait
jno
cld
arpl
aaa
jne
sbb
jecxz
stos
insb
jl
jne
adc
jns
pop
sbb
or
jg
and
mov
add
push
test
lock
xor
or
jns
add
stc
sbb
jmp
aas
sbb
out
aam
mov
in
pushf
mov
push
jnp
ffree
cmp
inc
add
push
xchg
imul
clc
aas
push
repz
sahf
shrb
or
mov
notl
jno
cltd
lret
xor
cld
mov
inc
idivb
xchg
mov
js
xlat
insl
test
sub
xor
aam
xchg
adc
dec
dec
dec
sbb
loop
mov
das
adc
xchg
xchg
arpl
and
test
xchg
sub
insl
dec
std
out
into
mov
push
pop
je
lock
mov
dec
pop
sub
cltd
lret
mov
add
jg
sbb
or
push
iret
or
dec
je
je
cltd
mov
lahf
insb
jle
mov
es
je
lahf
ss
xchg
pop
xchg
scas
cmp
or
mov
mov
test
cmpsl
push
or
lret
xchg
lcall
mov
test
cmp
or
pop
jae
sahf
mov
or
test
sarl
cltd
aad
and
xor
sbb
mov
inc
mov
jge
je
xchg
cs
stc
dec
lock
inc
mov
xor
repz
ret
shr
stos
jle
mov
mov
nop
cmp
pushf
jb
movsb
jns
inc
and
cmp
fldenv
jbe
lcall
inc
sti
xor
jno
sub
cs
or
jge
aad
int
je
imul
movsl
shl
sti
add
pop
jno
rcll
repz
xchg
push
sub
pop
pop
lcall
icebp
rol
es
test
fs
jno
enter
add
mov
jge
jge
and
fs
fildll
lcall
in
fwait
daa
shll
cs
and
into
cwtl
and
cmp
nop
or
push
jbe
sarb
xor
popa
lahf
ret
mov
int3
icebp
dec
pop
or
or
mov
mov
mov
pop
xor
push
adc
mov
rolb
inc
lret
add
dec
std
dec
mov
je
and
lock
sub
cmp
mov
fld1
je
sub
mov
mov
pop
xor
jge
cmpsl
mov
aad
scas
mov
sahf
xor
mov
cmc
fdivr
inc
add
inc
pushf
push
xchg
rcl
xor
jns
and
ret
or
inc
and
in
mov
lock
shl
ljmp
mov
adc
outsl
insb
jns
sbb
mov
push
mov
mov
loop
sahf
data16
mov
dec
imul
in
imul
dec
cs
cmc
or
test
fadds
sub
lea
or
cmpsl
xchg
enter
ljmp
inc
in
xchg
cmpl
lret
or
out
adc
aas
mov
cmp
ror
xchg
ja
gs
xor
aad
dec
cmp
pop
cmp
rorb
xchg
or
ds
sarl
pushf
jo
dec
pusha
or
shrb
mov
out
push
in
or
pop
lods
mov
jle
xor
in
push
inc
hlt
adc
outsl
pop
adc
fsubrp
jns
dec
loopne
les
sbb
mov
xor
aad
pop
shlb
repz
mov
jo
icebp
mov
and
lcall
push
imul
pop
jmp
sub
sbb
or
inc
adc
jae
inc
cmc
into
jmp
into
in
mov
push
rcr
inc
xchg
pop
mov
mov
icebp
sub
add
mov
mov
and
ds
int
testb
daa
cltd
inc
jbe
iret
jbe
loope
fdivs
mov
xchg
repz
sub
sbb
sub
adc
add
data16
sti
js
mov
outsb
xchg
das
popl
mov
inc
xchg
push
jno
adc
push
and
int3
jno
pop
xchg
mov
mov
test
imul
push
sbb
imul
nop
cs
or
xorb
ja
jp
dec
lahf
jae
jge
sub
dec
ficoms
pop
fistps
in
pop
add
and
pop
mov
sbb
int3
mov
sti
fildl
xchg
mov
in
cmp
into
xchg
daa
add
sub
icebp
and
cmpsl
fdivrs
jg
add
jno
jg
inc
test
pop
adcb
mov
es
cmp
xor
and
insl
adc
add
mov
add
or
popf
jmp
lds
pop
aas
sub
jmp
xchg
stos
dec
enter
ja
cmpsl
pop
ret
jae
into
dec
push
push
cli
pop
inc
sbb
int
lret
sub
pop
xchg
dec
pop
and
je
cld
sbb
lcall
movb
lahf
stc
out
stos
std
xor
loopne
pop
xchg
push
rcr
xor
fs
stos
fs
pop
cmc
push
sub
pop
push
dec
cmc
test
jbe
inc
loopne
jle
xchg
push
inc
xlat
test
sub
lret
inc
jo
inc
and
lret
in
inc
inc
out
repnz
ret
in
addr16
sub
sub
cli
ffree
mov
or
sbb
loope
lods
jle
sub
ds
push
incb
push
std
data16
pop
cmc
push
movsb
xlat
mov
lds
flds
dec
xchg
inc
jbe
out
or
lods
mov
ret
xor
and
ss
mov
fsubs
and
shrb
cmp
bound
icebp
or
push
cli
fs
inc
rorl
cwtl
into
xlat
daa
or
ljmp
es
cwtl
dec
ljmp
pop
dec
mov
xchg
bound
pusha
push
jmp
sbb
shll
shl
mov
cwtl
jmp
scas
mov
dec
ja
sti
lahf
scas
in
push
cmp
fcompl
test
jge
aaa
in
addl
mov
loope
push
daa
push
sbb
pop
xor
jecxz
jbe
fisubl
cwtl
and
or
push
adc
repz
enter
dec
test
out
sub
cmp
dec
mov
test
push
push
fcoml
jmp
cltd
jmp
push
ret
pop
or
pop
jle
lret
outsb
insl
aaa
lret
dec
std
jb
lret
mov
sbb
lea
lahf
pop
mov
jp
clc
xor
fwait
inc
push
test
push
xchg
pop
push
shlb
aaa
sub
lret
daa
jle
andb
pop
adc
xchg
add
and
and
jns
dec
push
jnp
pop
popa
popf
mov
push
jle
jno
ljmp
mov
and
sub
jb
addr16
jp
add
xchg
xchg
xchg
mov
mov
mov
jne
fsubrs
mov
jne
lock
std
dec
inc
test
insl
jns
loopne
adc
mov
mov
loope
or
or
xchg
mov
jl
adc
lock
xor
ljmp
inc
fnsave
xlat
je
xchg
xchg
mov
xor
ret
popf
sarb
rcr
pop
jmp
push
stos
sub
push
dec
cmp
cmc
sbb
cli
data16
inc
sti
dec
xor
loopne
jno
sbb
mov
jg
sbb
fbstp
inc
xchg
addr16
xlat
xor
inc
ja
cmp
xchg
test
scas
cmpsl
sub
push
pop
fistps
push
xor
roll
or
mov
vprotw
decb
sub
in
icebp
lea
adc
sahf
or
outsb
sahf
xchg
das
mov
push
aaa
mov
xor
popa
repz
pop
fmulp
cmp
lret
pop
inc
or
mov
xchg
insl
popa
adc
fmuls
cli
fildl
cld
mov
ret
xor
imul
das
pop
into
hlt
push
andl
cmp
dec
push
fidivl
sarb
pop
lods
aad
repnz
and
mov
in
mov
aas
add
ss
push
lahf
data16
push
jbe
cmp
roll
test
adc
movsl
mov
and
fwait
cltd
inc
test
xor
fs
pop
cmp
pop
int3
loope
rcrb
idivb
in
dec
cmp
xchg
jecxz
cli
xchg
js
pop
aaa
and
sbb
push
gs
jl
adcl
xchg
aas
sbbb
xor
add
popa
leave
sub
mov
aas
jmp
dec
sub
sub
push
lret
gs
xchg
jle
jge
jne
cmpsl
sbb
mov
sbb
stos
xchg
add
jne
daa
xchg
or
xchg
cmpsl
inc
cmp
push
pop
sub
jmp
jbe
adcl
or
mov
shrb
loopne
movsb
and
clc
negl
das
negl
int3
pop
push
subb
adc
cmpsl
or
and
mov
xchg
jl
push
stos
xor
mov
jo
push
cmp
pop
out
mov
adc
mov
jg
negb
enter
pop
push
mov
inc
ret
push
mov
xchg
push
sbb
adc
hlt
cmp
adc
ljmp
mov
mov
insb
call
sub
fs
mov
fldcw
push
mov
setnp
stos
mov
cli
fsubrl
mov
js
jns
adc
sub
loopne
call
aam
xrelease
add
inc
loopne
pop
faddl
xchg
sahf
hlt
pop
test
mov
xchg
push
mov
xchg
test
stc
hlt
add
pop
mov
jl
stos
ficompl
sbb
jmp
push
and
mov
dec
fnstenv
jb
sub
lods
imull
aam
mov
push
inc
imul
pop
jge
mov
mov
pop
mov
pop
std
repnz
pop
imul
mov
in
push
stc
sbb
sbb
cmp
mov
inc
out
dec
jne
inc
mov
and
xorb
mov
mov
mov
mov
fs
and
mov
adc
push
cmp
notl
ret
std
fmuls
sbb
out
mov
popf
lcall
iret
jb
push
cwtl
mov
cmp
xchg
adc
and
mov
stos
mov
mov
cwtl
mov
out
pop
cmpsl
lret
xor
pop
lcall
push
cli
repnz
pusha
fdivl
cmp
insl
mov
push
pop
cmpsb
mov
cmpsb
xor
push
js
in
into
dec
inc
fs
jnp
jl
out
push
out
add
shlb
lds
aaa
or
sbb
fsubrp
push
jmp
icebp
aam
pop
jmp
jmp
mov
push
add
lods
cmp
lret
lahf
not
push
push
inc
mov
mov
pop
xor
inc
jp
inc
jp
test
rcll
aas
out
icebp
add
push
adc
out
sub
cli
and
lds
jg
push
popa
adc
mov
out
adc
sub
testl
sub
mov
loop
inc
xchg
into
rcl
es
inc
xchg
inc
testl
sub
imul
fnstcw
xchg
and
movsl
add
mov
mov
repz
in
movsb
lock
std
cmp
int
mov
cmpsb
push
add
mov
repz
dec
leave
jbe
jb
mov
lahf
adc
mov
mov
mov
xchg
dec
movsl
shll
les
xchg
nop
cli
sbb
nop
add
movsl
arpl
ficomps
adc
add
push
flds
adc
mov
movsb
inc
lea
mov
inc
outsl
jo
scas
insb
sbb
addb
mov
xor
push
jne
pop
pop
xlat
mov
cmp
jno
cmp
xchg
dec
loope
mov
scas
add
push
filds
dec
fs
cmp
rolb
lock
cmc
scas
das
mov
out
sbb
push
enter
test
mov
adc
sbb
push
cli
mov
adc
decl
cmc
mov
cmp
inc
xchg
pop
cmpsl
add
push
or
fisttpl
ljmp
dec
sub
ljmp
xchg
mov
addr16
fcom
and
mov
pop
loopne
inc
xchg
jmp
push
mov
ret
jmp
mov
xlat
and
xor
adc
jbe
adc
fsubp
adc
jae
add
sub
aas
cmpsb
test
mov
int3
mov
xchg
jge
dec
jno
pop
nop
enter
lds
add
stos
push
cmp
pop
push
inc
test
add
lock
fnsave
mov
xlat
mov
rclb
nop
xchg
cmp
xchg
jl
aad
dec
xchg
sbb
push
ljmp
aad
inc
ljmp
add
dec
sub
and
push
mov
push
stos
divl
xchg
stc
inc
nop
sti
imul
xor
xchg
dec
cmp
sub
xchg
or
cmc
push
sub
and
and
jp
adc
mov
lret
cmp
cli
xor
sti
js
enter
test
xchg
mov
enter
mov
jecxz
notb
mov
sub
lahf
or
mov
jo
sub
insl
pushf
lods
scas
xchg
pop
data16
lret
jp
cmpsl
xor
or
jae
mov
sub
cmpsb
dec
sub
out
movsb
mov
ret
mov
dec
shlb
lock
cli
and
inc
push
inc
pusha
out
cs
dec
xlat
out
and
push
mov
daa
add
mov
cmp
mov
mov
push
mov
and
mov
add
push
or
add
into
cmp
cmp
dec
pop
push
mov
mov
in
loopne
xchg
lock
test
sbb
ret
pop
lret
add
out
loope
ss
popl
dec
in
mov
dec
pop
subl
mov
repz
adc
das
lret
les
call
sbb
dec
fstpl
stos
ds
or
jmp
in
idivb
call
push
fucompp
mov
aad
and
test
adc
sti
imul
aaa
mov
dec
or
test
and
mov
inc
sti
aaa
mov
data16
push
sub
int3
pop
mov
test
mov
filds
push
in
push
or
or
pushf
mov
icebp
add
xlat
mov
test
push
jge
or
lcall
daa
pop
mov
shrl
xlat
out
sar
stc
adc
xlat
adc
pop
addr16
or
pop
push
fstps
inc
dec
xlat
xchg
jnp
push
pop
loop
into
add
mov
fidivs
aad
push
add
push
sbb
mov
xchg
mov
push
inc
and
dec
and
cmpsb
push
adc
fimuls
aad
fsts
movsl
in
xor
es
add
sbb
ss
lcall
shrb
cli
jmp
push
jg
and
hlt
or
jmp
pop
popf
jno
lahf
push
push
out
inc
lcall
adc
xlat
or
mov
pop
cmpl
orb
test
mov
mov
movsl
cmp
and
cli
dec
mov
ficoms
mov
les
adc
pop
sub
inc
push
adc
ret
out
addb
gs
cmp
insl
dec
push
cs
jecxz
scas
inc
jne
pop
xchg
lods
jns
jbe
fsts
mov
mov
jne
out
loop
loopne
addb
adc
call
fisubrl
push
sub
scas
and
dec
jne
scas
push
into
inc
push
adcl
outsb
cmpsb
ret
rol
xchg
jle
sub
pop
pop
popf
dec
mov
push
int3
xchg
xor
inc
test
pop
inc
mov
cmpl
sbb
out
call
mov
and
loope
and
cmp
mov
or
pop
mov
sub
in
dec
push
xor
mov
mov
xchg
mov
add
jnp
scas
pop
mov
inc
cmc
in
movsl
adc
movsb
pop
imul
sub
xchg
in
js
lret
cmp
xchg
pop
mov
cmp
push
sub
jo
les
xchg
rcrl
loope
scas
mov
cmpsb
sbb
mov
mov
jo
aas
shr
mov
mov
fdivs
mov
dec
into
lcall
push
sub
dec
aas
stos
jne
inc
xchg
xchg
in
out
push
cld
xchg
ss
stos
xchg
or
jge
aaa
testl
mov
xor
jns
rolb
xor
lahf
jecxz
xchg
xchg
pop
popa
fsubrs
dec
jae
nop
mov
sahf
jno
pop
test
pop
mov
leave
out
push
dec
inc
pop
push
rorb
jp
pop
jno
mov
sarl
dec
mov
adc
aam
test
add
setns
addr16
idivl
fistps
lret
adc
scas
adc
mov
xchg
xchg
rcrb
ror
mov
or
cmpsl
insl
pop
clc
pusha
das
into
out
sub
adc
rcrb
push
jne
pop
movsl
sub
incb
lahf
fwait
dec
popa
mov
or
mov
daa
sbb
rcrb
pop
ljmp
orb
sub
je
iret
and
inc
push
pop
pop
cli
into
xlat
mov
stc
sahf
xchg
fstpl
movl
fcomi
push
iret
outsb
jno
pop
out
mov
and
cmp
cvtdq2ps
cwtl
pop
mov
cmpsb
mov
popa
cmp
xchg
push
push
lcall
xor
loope
aaa
mov
imul
mov
or
pop
push
mov
fldenv
adc
mov
fcmovnu
fsub
outsb
out
xchg
and
mov
or
cmovb
fwait
xor
lods
outsl
sahf
pop
jmp
int3
mov
pushf
push
lret
add
lock
arpl
iret
in
mov
imul
lods
mov
enter
lret
cmp
push
imul
cmp
test
add
fldenv
movsl
pop
dec
or
mov
decb
mov
inc
clc
inc
fsubs
push
jns
jnp
stc
mov
adc
out
in
sub
pop
lods
lcall
inc
cmp
xchg
adc
test
sub
pop
push
adc
mov
mov
stos
inc
mov
cwtd
rol
xchg
xchg
int
sbb
push
lcall
frstor
mov
mov
inc
mov
data16
mov
das
out
sbb
dec
mov
shl
shld
pop
sub
pop
jno
xor
xchg
mov
mov
aas
fisttpll
mov
test
xchg
push
dec
loope
jae
sub
shrb
jns
repz
xchg
sahf
add
ficoms
fwait
std
insl
imul
cld
cmpsl
xchg
arpl
inc
push
pop
sahf
jmp
jmpw
int
lods
inc
mov
pushf
icebp
das
cmp
fisubl
nop
mov
gs
lods
sbb
lahf
or
in
adc
cmpsb
pop
jge
test
jne
mov
ds
pop
cmp
sbb
fildl
push
xchg
testb
and
es
cmp
mov
xor
lcall
xchg
pop
fwait
or
or
js
sub
mov
nop
mov
pop
cli
pop
outsb
paddsb
jmp
sbb
and
popf
push
cmpsl
mov
stos
imul
add
mov
jnp
out
and
mov
test
test
ret
mov
out
cmc
mov
push
stos
mul
insb
aaa
mov
sub
clc
enter
or
sbb
inc
dec
popf
js
fstl
push
pusha
mov
mov
repnz
pushf
addr16
mov
ljmp
and
loopne
clc
loope
jbe
out
mov
adc
sub
rcl
push
lcall
xor
scas
test
sar
mov
mov
xor
inc
imul
mov
lcall
nop
outsl
lods
xor
fiadds
aaa
xchg
mov
add
xchg
add
add
pop
add
pop
jbe
scas
subl
insl
adc
mov
jne
dec
and
jb
stos
mov
sub
ret
pop
lock
scas
xchg
cmc
xor
push
ss
mov
mov
xchg
sti
aam
sti
cmp
pop
jmp
dec
dec
int3
fidivrs
xchg
insl
inc
push
push
push
popf
scas
push
mov
std
int3
mov
add
push
sbb
cli
xor
in
lret
scas
lea
jl
mov
out
push
xchg
out
push
add
mov
stos
cmp
pop
lock
jecxz
jg
stos
inc
adc
sbb
sub
in
and
dec
jae
sub
add
jb
test
mov
dec
cltd
push
cmp
push
xchg
jmp
dec
sub
xchg
jno
push
sbb
pop
mov
ficompl
cwtl
push
and
cmp
cltd
cltd
jb
inc
cs
bound
xor
loopne
sbb
inc
dec
inc
addr16
mov
pop
enter
mov
push
test
sarb
test
arpl
lahf
mov
jnp
jbe
filds
mov
xchg
dec
in
cmp
mov
ret
aam
mov
or
inc
mov
test
lret
cmp
push
xchg
cmc
in
sub
adcl
fwait
call
decl
daa
and
cmp
vmovd
icebp
mov
packsswb
jnp
jl
jo
push
dec
lret
rclb
les
in
aaa
sub
cmp
outsl
ds
cld
sub
fildl
mov
mov
dec
push
push
add
or
inc
mov
repnz
movsl
es
leave
insb
pop
xor
sbb
int3
sub
rcrb
negb
xor
sbb
dec
pop
popf
or
inc
adc
and
cmpsb
mov
ja
inc
ljmp
mov
hlt
dec
xor
mov
aaa
scas
and
push
adc
adc
loop
push
cmp
xor
rol
outsb
push
sub
jge
mov
xor
int3
add
scas
test
push
xor
hlt
adc
jecxz
dec
dec
inc
test
aaa
in
out
js
add
adcb
fbld
jmp
aas
cs
inc
inc
jle
cmp
lret
lds
loop
mov
pop
push
daa
pushf
mov
dec
mov
std
dec
cltd
cmp
lret
dec
xchg
dec
flds
cmp
fsubr
in
dec
stos
cmp
movsb
or
xchg
lock
dec
adc
out
sbb
jbe
mov
stos
add
mov
xchg
jbe
sbb
andl
jne
and
icebp
leave
das
cmpsb
xchg
stos
xchg
pop
popf
stc
and
sbb
jne
cwtl
add
outsl
insl
dec
xor
xchg
dec
lods
dec
outsb
xor
add
stos
cmc
imul
cmp
das
pop
out
popf
test
and
lret
jecxz
pop
lahf
imul
pop
mov
and
ljmp
aad
add
mov
add
and
je
inc
inc
pop
shll
mov
scas
sub
cmpsb
fistpl
push
push
psrld
fimull
out
inc
jno
sbb
test
push
pop
sahf
sbb
dec
xchg
mull
adc
sbb
dec
add
out
xor
push
mov
mov
out
cld
pusha
gs
and
aas
ds
and
xor
or
pop
ss
int3
cmp
pop
dec
mov
pop
sbb
jns
call
sub
xor
mov
adc
lea
xchg
addb
or
mov
fwait
test
dec
sub
stc
sti
push
inc
and
enter
popa
add
push
out
pop
nop
xor
pushf
sbb
in
pop
sbb
mov
cmp
andb
orb
pop
inc
sbb
cmp
inc
sahf
mov
sub
push
push
and
ss
lret
test
ja
jg
repz
mov
jbe
sahf
mov
ss
rolb
and
stos
mov
or
push
xor
sti
mov
mov
jb
mov
push
cmp
aam
inc
mov
mov
pop
jmp
or
loopne
imul
pop
mov
enter
mov
into
dec
or
dec
adc
adc
adc
cmpsb
jno
std
or
push
and
insl
daa
jl
in
push
xchg
dec
and
sub
jnp
xchg
sub
jns
in
lahf
xchg
shll
loop
aaa
jns
jns
sub
sbb
push
push
sbbb
outsb
and
je
mov
aaa
cmp
shlb
cltd
or
lods
push
andb
lds
and
push
repz
mov
leave
cmp
cmpsb
fwait
push
fldenv
fucomp
push
fptan
jo,pn
les
adc
adc
in
stc
aaa
xchg
fwait
push
and
xchg
xchg
xchg
sub
add
loope
es
mov
pop
shll
loopne
xchg
int3
xor
test
xchg
pushf
aas
cmp
mov
mov
push
bound
aaa
cli
mov
adc
sahf
sbb
daa
aaa
in
push
fcomi
mov
shl
sub
and
cmpsl
mov
fcoml
fdiv
mov
cmp
mov
fbld
and
sub
xor
vsubps
pop
inc
popl
les
sbb
fcmovne
push
sbb
outsb
xchg
adc
mov
orl
or
cwtl
scas
fsubrl
in
dec
in
jae
add
dec
daa
out
imul
fnstsw
test
xchg
ss
out
lds
jmp
xor
jecxz
outsl
sbb
sti
mov
into
jae
push
xchg
xchg
in
leave
and
aad
jne
mov
mov
add
xchg
mov
je
fsubrs
fiadds
sbb
jg
cwtl
pushl
data16
and
movsl
push
mov
rcl
adc
sbb
jl
dec
sbb
addr16
fsubl
or
mov
jo
ret
sub
aad
es
and
je
cmp
fwait
push
jo
daa
cmp
dec
mov
inc
lods
popf
pop
cmpsl
ja
popa
xor
pusha
popf
xchg
lret
mov
sub
lahf
dec
out
mov
icebp
mov
addl
ds
movsb
jne
and
cmp
outsb
dec
cmc
dec
out
mov
mov
sbb
xchg
mov
rcll
das
jle
sbb
bound
cmpsl
push
mov
stc
cli
loopne
cwtl
icebp
mov
test
mov
jae
xchg
aaa
repnz
pushf
fnstsw
imul
sub
adc
mov
je
insb
cmp
popa
or
ret
xchg
pop
mov
fwait
inc
sub
addr16
mov
cmp
dec
fdivp
sbb
mov
inc
bound
mov
and
lock
stos
int
orl
dec
ror
loope
xchg
push
xchg
dec
lds
xchg
dec
adc
sahf
popf
shrb
jl
aas
xor
andl
inc
aad
dec
jl
aad
mov
js
std
inc
int
inc
cmp
js
jbe
and
pop
mov
pop
mov
add
insb
fs
int3
aas
xor
lods
js
lods
push
dec
mov
in
dec
scas
icebp
xchg
dec
add
adc
lods
clc
push
add
fcmovu
or
rcr
push
stc
mov
mov
out
jle
scas
test
and
dec
adc
dec
fldcw
push
data16
mov
dec
shll
cs
mov
sti
mov
arpl
cld
data16
insb
rolb
fst
cmp
movsb
add
mov
ds
insl
cmp
addb
xlat
xchg
jne
arpl
sub
mov
and
clc
lahf
add
or
push
popf
xor
frstor
call
cmp
lods
mov
add
stc
movsl
out
dec
out
sub
mov
pop
mov
fnstcw
pop
fadds
arpl
jge
hlt
add
js
cmp
inc
xchg
jns
cli
ret
movb
out
sbb
lea
pop
aad
inc
cmp
and
orl
mov
mov
sbb
mov
outsl
sbb
sbb
les
jl
fcom
mov
loop
xchg
fsubrs
pop
jge
cmc
jmp
scas
jl
insb
vcvttsd2si
add
push
repz
lods
xchg
or
inc
out
cmp
movsb
pop
gs
pop
push
cmpsl
test
mov
push
push
rorl
jmp
and
fcom
test
sub
sahf
clc
push
sub
movsl
test
das
dec
xchg
mov
imul
inc
cmpsb
andl
jl
das
add
jo
sti
adc
mov
stos
xchg
cmp
push
sbb
or
sar
pop
adc
sub
dec
and
pop
fcoml
fs
adc
sahf
jo
push
sub
push
jmp
enter
jbe
dec
icebp
ret
out
mov
mov
in
xchg
fisubrl
lcall
mov
or
push
arpl
stos
test
shll
fwait
cli
sti
xlat
hlt
and
mov
movsl
jp
inc
pop
jae
xor
jp
out
add
mov
jle
test
inc
xchg
leave
xor
shrb
loop
dec
adc
push
outsl
call
pop
mov
jmp
add
push
fcmove
xor
cmp
pop
leave
ret
lahf
jno
or
push
adc
repz
xor
subb
jmp
clc
mov
dec
jns
dec
enter
sub
jg
mov
iret
pop
lret
inc
test
mov
dec
cmp
enter
test
loop
mov
mov
mov
or
hlt
and
neg
dec
out
cmpsl
and
daa
or
jl
sub
dec
cli
iret
js
and
jmp
push
pop
mov
mov
or
jl
mov
xchg
pop
sahf
dec
loopne
mov
dec
mov
xor
cmp
sbb
push
repz
incl
ficoms
adc
cmp
pop
lcall
mov
ret
push
sub
push
pusha
test
in
pop
xchg
movsb
mov
loope
into
test
das
xor
mov
mov
xchg
sbb
pop
sub
dec
jnp
jmp
enter
stos
xor
nop
movsl
out
jge
or
add
mov
push
imul
mov
rol
fstpt
jmp
adc
adc
rcr
test
sbb
shlb
push
cmp
popf
ret
pop
inc
fnstenv
sbb
pop
inc
ja
iret
daa
and
add
mov
xor
mov
fcmovnu
sbb
mov
leave
mov
ss
in
jle
push
fs
fxch
into
stos
jno
xchg
arpl
lds
dec
pop
insl
imul
lretw
lock
and
xor
roll
comiss
das
add
sub
loopne
sub
mov
das
test
mov
lret
stc
dec
ficomps
mov
pop
outsb
push
inc
fbld
mov
jbe
xchg
inc
mov
mov
sub
push
je
add
xchg
pop
xor
xchg
lret
mov
add
push
mov
test
test
and
shrb
mov
rcr
mov
sbb
insb
inc
xlat
mov
jns
or
inc
mov
add
cli
filds
subb
jno
cmp
out
pop
sub
inc
insb
test
push
sub
ret
and
xchg
popf
and
sti
adc
cltd
push
push
daa
xchg
pop
push
je
fnstenv
push
in
out
dec
xor
pop
test
rolb
negl
mov
sub
aas
arpl
jnp
mov
test
daa
lods
lret
or
fdivl
and
lock
mov
dec
lahf
adc
movsb
lahf
inc
push
pop
xchg
or
sti
ja
mov
inc
ret
dec
data16
mov
mov
insl
sub
or
or
cli
jnp
pop
shll
idivl
mov
and
xchg
mov
xchg
adc
lods
push
adc
dec
pop
cwtl
dec
mov
jns
xor
insb
lahf
adc
push
les
mov
inc
lahf
and
mov
jle
push
dec
push
fadd
xchg
sarb
or
loope
fistl
dec
andb
pop
adc
ss
fcos
mov
xchg
ss
out
popa
mov
xlat
cli
sub
into
jecxz
mov
mov
inc
inc
mov
sub
mov
adc
jge
jns
shld
sbb
push
cltd
or
aas
out
adc
es
jbe
test
and
cltd
arpl
and
xor
jo
fs
and
dec
and
out
mov
and
out
mov
pop
int3
rdtsc
or
out
fs
ljmp
adc
dec
sbb
cwtl
mov
pop
ja
jae
std
ret
sbb
mov
pop
push
push
mov
adc
mov
test
jb
xchg
pop
fadds
xor
lock
pop
adc
pop
add
ret
xor
pop
push
fwait
rclb
in
ljmp
mov
xchg
adc
hlt
addr16
repnz
lock
jmp
mov
push
je
jl
in
sub
or
pop
pop
fcomps
movsl
lcall
add
out
punpckldq
aas
xchg
ss
pop
xchg
sbb
inc
dec
aam
add
adc
push
out
ss
insb
and
cwtl
imul
jne
jp
jmp
inc
lcall
loope
pusha
and
daa
int3
movsl
pusha
and
fmull
sbbl
pop
aad
je
in
xor
nop
hlt
add
jae
pusha
push
test
or
ss
mov
out
cmc
mov
xchg
test
xor
loop
cmp
mov
cli
test
dec
mov
adcb
xchg
jmp
stos
cmpsl
sahf
mov
or
jno
lods
push
sbb
sbb
in
adc
and
bound
sti
fstpl
push
adc
data16
repnz
push
push
in
or
repz
lret
lret
mov
fistps
insl
out
mov
xchg
jmp
push
pop
sahf
popa
sbb
jge
pusha
outsl
mov
jo
cmc
js
and
mov
jne,pn
dec
jno
sub
stos
push
ja
push
or
adc
mov
out
mov
dec
and
stos
lock
add
and
in
inc
mov
loop
add
repnz
into
enter
adc
outsb
in
cli
ret
sub
jne
dec
jle
repnz
sub
pop
je
push
add
mov
je
dec
shr
test
push
inc
adc
sbb
rcll
jp
mov
daa
mov
pop
gs
push
dec
adc
mov
xchg
xor
xchg
nop
test
mov
les
and
push
jnp
int
repnz
pop
sbb
add
pop
push
push
mov
mov
mov
test
and
fisttpll
xchg
fwait
xlat
mov
push
lock
mov
sbb
ffreep
dec
mov
xchg
jo
rol
ja
xor
dec
mov
cmp
and
inc
sub
je
xlat
push
xlat
sub
dec
out
pop
orl
jge
testl
jno
test
mov
aam
jp
xor
push
push
notb
out
rcll
inc
daa
or
and
arpl
adc
push
mov
outsb
xor
movsb
fs
outsb
add
push
pushf
push
pop
xchg
mov
or
jnp
addr16
addl
pop
push
cmpb
sub
mov
mov
xor
std
jbe
out
sub
js
shlb
jae
mov
int3
xchg
and
hlt
inc
jns
roll
sbb
mov
cmpsl
xchg
jns
inc
sub
dec
jl
cmp
mov
sub
stc
test
inc
mov
pop
pop
mov
cmp
ss
negl
mov
dec
cmp
sbbb
adc
cmp
out
insb
cmp
into
lahf
pop
jle
jnp
stc
xchg
hlt
xchg
inc
lcall
rcr
icebp
push
lcall
sbb
and
push
inc
cmp
push
aad
insl
lods
xor
movsb
out
mov
repnz
sti
sbb
push
jno
out
std
ficomps
cltd
add
mov
jbe
test
xor
inc
cmp
sbb
push
ret
and
push
or
ror
add
test
cmp
cmp
rcrb
dec
mov
adc
jge
sbb
inc
mov
lds
xchg
test
mov
scas
cmp
fsincos
pop
lods
je
subl
push
cmp
jne
dec
dec
pop
repnz
push
out
rcr
dec
icebp
dec
xlat
mov
inc
outsb
mov
inc
repnz
mov
rclb
xchg
push
sub
xor
xchg
fstpt
mov
rcll
xchg
ss
push
iret
mov
jecxz
nop
test
inc
cs
mov
cli
adc
xchg
mov
sub
xchg
aad
and
lods
mov
mov
das
inc
int3
push
and
push
mov
inc
push
aam
mov
sub
adc
dec
or
iret
adc
sbb
add
push
sahf
cld
sub
lds
xlat
xlat
inc
js
ret
lret
enter
arpl
ficoml
out
or
inc
fisttps
out
test
mov
jae
sub
cs
scas
hlt
pop
lret
es
xlat
jge
fsubrp
mov
in
lcall
pop
test
push
sub
sbb
ja
stos
in
jmp
add
in
data16
ja
sbb
out
pop
insl
sbb
fldcw
jg
mov
and
jecxz,pn
or
leave
loope
mov
and
adc
xchg
les
lret
rcl
add
sub
sbb
xor
inc
adc
sbb
popa
cs
scas
push
adc
jmp
out
and
popaw
aaa
dec
arpl
jne
into
pop
out
and
scas
or
or
jnp
push
xor
sub
pop
sbb
xchg
ret
shl
lret
scas
xchg
mov
xlat
dec
fs
sbb
dec
lahf
dec
fst
scas
xor
stc
mov
out
dec
xchg
into
mov
leave
sbb
mov
fwait
sub
imul
imul
int3
stc
cmpb
mov
aam
lret
cmpsb
aad
push
into
mov
or
mov
andb
inc
and
es
shl
jo
mov
push
out
jmp
xchg
aad
rcl
es
fdiv
sub
insl
cmp
scas
mov
imul
mov
jg
add
xchg
in
inc
mulps
test
and
mov
subl
sbb
pop
jno
or
nop
and
inc
ficomps
jne
test
add
in
orb
push
adc
hlt
rcll
push
add
std
andl
sbb
lock
scas
xor
call
aad
pop
lahf
js
dec
cwtl
push
jp
add
ja
and
xor
xchg
repz
lea
gs
jmp
add
jecxz
jo
sub
mov
bound
push
imul
adc
jg
jnp
lea
pop
or
fisttps
xchg
and
add
or
mov
mov
sub
mov
sbb
push
xor
jnp
dec
test
popa
xor
fsts
dec
imul
les
lcall
mov
inc
test
sbb
lock
rcr
adc
jne
push
fisubrl
xchg
leave
inc
add
ret
leave
pop
xchg
call
add
push
and
out
mov
mov
test
addr16
jl
jo
adc
imul
mov
insl
add
mov
lea
sub
dec
leave
add
xchg
push
stos
repz
sbb
gs
setl
mov
push
push
lods
and
aam
lods
and
smsw
mov
mov
mov
mov
mov
dec
sti
add
push
pop
cld
xchg
icebp
into
sbbb
push
stc
jp
push
pop
and
mul
push
scas
dec
cmp
movsb
pop
in
aad
xchg
or
and
jge
pushf
sahf
mov
and
jecxz
fistps
lods
test
mov
dec
add
sub
fnstenv
pusha
movsl
inc
or
jge
stc
pop
icebp
sbb
jne
or
push
add
lods
cmp
add
push
push
add
mov
cmp
push
jnp
stc
jmp
rolb
adc
cmp
sub
jmp
sbb
sahf
imul
jle
loopne
adc
mov
pop
xor
pop
ret
fcomip
call
int3
pop
mov
cmp
dec
inc
mov
jo
sbbb
loope
bswap
add
scas
fcmovnbe
or
cmp
inc
jp
mov
push
push
cmp
pop
xchg
arpl
in
jne
cmp
cs
nop
cwtl
test
and
mov
clc
shll
inc
mov
addb
mov
sahf
shll
imul
ss
mov
inc
data16
test
insb
mov
loopne
out
sub
addl
pop
pop
mov
icebp
ret
in
mov
or
dec
loop
xchg
mov
popf
je
orl
outsl
aam
or
lcall
ds
std
pusha
push
mov
dec
mov
xor
out
sbb
lahf
push
mov
insb
lds
mov
jg
sub
call
shll
movsb
loop
push
fsubs
or
cmp
int
sbb
sub
je
cli
popf
jns
loopne
roll
aad
loop
lock
push
mov
push
jbe
insl
inc
insb
dec
andb
adc
push
lock
nop
sub
ja
mov
mov
sub
jns
pop
inc
addr16
sub
rorb
sub
xorl
push
popf
leave
in
lods
lds
into
or
mov
sbb
lods
out
call
jmp
push
movb
mov
push
loop
test
and
mov
xchg
lcall
sbb
cmpsb
cmpsl
sub
movsl
jecxz
jno
cmpsb
rclb
ljmp
jp
or
movsb
inc
mov
inc
jp
dec
add
loope
testl
pop
push
test
mov
or
and
pop
daa
fidivrs
cmp
inc
int3
fs
sar
fisttps
mov
mov
scas
cmpsb
in
push
arpl
mov
or
jp
rcrb
loop
daa
mov
adcl
mov
cmpsl
outsl
and
ds
ss
fdivs
addr16
xor
testb
push
enter
iret
pop
inc
add
mov
nop
dec
sbb
enter
addr16
imul
cli
sbb
repnz
jl
cmpsb
jnp
or
ljmp
pop
dec
ret
push
fimull
adc
nop
cwtl
mov
loop
les
rcr
fisubrs
pop
inc
xchg
mov
lds
insb
aam
test
push
fwait
lahf
mov
mov
repz
aam
fistpl
clc
adc
mov
push
cmp
push
cmp
inc
icebp
loop
adcb
mov
add
inc
das
das
and
dec
xchg
lret
daa
jge
shl
add
pop
stos
adc
cmp
xorb
fs
mov
sub
and
dec
dec
xor
insl
inc
hlt
dec
cmpsb
sbb
rolw
add
aam
pop
jno
bound
addr16
aad
xchg
es
jp
xchg
add
cmp
inc
cmpsl
mov
xchg
fiadds
jle
jp
sub
mov
xchg
mov
enter
and
clc
ret
fucomi
push
in
jb
in
add
add
movb
into
dec
mov
adc
sub
pop
insl
and
xor
xlat
and
jb
jb
add
dec
mov
sub
xrelease
sub
push
sbb
sbbb
cmp
jbe
cmpsb
dec
push
mov
fisubs
mov
push
stc
test
lock
je
xor
outsb
mov
jmp
pop
aas
inc
mov
jns
pop
cmp
xor
cltd
mov
cmpsl
outsb
add
mov
addr16
sbb
enter
xor
cmc
mov
loopne
inc
movsb
repnz
xchg
aam
inc
push
imul
cwtl
aam
mov
add
push
mov
push
into
or
jp
iret
insl
mov
sahf
das
pop
mov
shrb
loopne
jne
adc
cmc
xor
cmp
lods
lret
loope
sbb
inc
lret
mov
add
xor
loopne
js
and
mov
or
into
dec
adcb
sub
mov
push
lret
mov
loopne
loopne
addr16
cwtl
mov
adc
add
enter
and
jne
mov
cmc
je
cmp
mov
or
pop
push
and
add
push
inc
scas
adc
enter
sub
nop
lret
fs
and
jnp
out
jnp
add
and
sub
les
adc
jg
cwtl
mov
xor
mull
inc
repz
sarl
pop
xor
xchg
nop
push
jo
or
sub
inc
mov
arpl
lods
bound
or
sub
and
fmull
inc
sbb
mov
xchg
cmp
fidivrs
cmpsl
xor
adc
xchg
mov
aam
pusha
jne
inc
jno
lahf
cmp
scas
pusha
sub
mov
adc
cmp
call
pop
cmp
dec
jno
leave
xor
cmp
out
stos
pop
mov
push
das
sbb
adc
popa
push
fists
pop
push
sub
in
incb
addb
sub
jb
add
mov
cmp
pop
and
adc
out
sti
in
loopne
cmp
daa
outsb
testl
push
and
enter
out
test
addr16
js
push
data16
jno
inc
adc
adc
pop
sub
sub
push
sbb
in
cmpsl
scas
push
test
lods
xor
imul
div
cmpsl
insl
push
mov
push
jl
add
filds
inc
cmp
subl
test
push
mov
xchg
loope
add
jnp
dec
push
cli
add
mov
lret
sub
sbb
insl
mov
push
fidivrs
movsl
pop
push
xlat
pop
or
and
mov
sub
repz
stos
adc
loope
std
dec
mov
sbb
jmp
sarl
xchg
xchg
xchg
movsb
push
mov
rol
jns
cmp
mov
sbb
movsl
add
stc
scas
int
xorb
xor
sbb
aas
aas
and
sub
lahf
push
clc
inc
adc
push
cltd
inc
cltd
adc
sub
notl
mov
data16
or
call
xchg
push
inc
les
adc
popf
inc
fwait
scas
xor
pop
rorl
in
lahf
pusha
decb
movsl
adc
imul
loope
xchg
and
mov
dec
shll
pop
and
les
sbb
add
out
xchg
dec
sbb
adc
stos
gs
mov
push
int3
xorb
xchg
ss
xchg
addr16
les
imul
fs
cltd
int3
push
lahf
insb
mov
pop
jg
cli
fnstsw
mov
cmpsl
add
gs
scas
insl
mov
and
cmpsl
jmp
push
xchg
xor
lret
sbb
shrb
push
push
inc
mov
outsl
adcl
mov
hlt
aas
mov
mov
enter
jp
into
call
bt
movsb
scas
mov
sub
incb
inc
push
pop
js
fucomp
ja
and
loop
jle
pop
ss
test
fsubrs
fcmovb
jg
lret
dec
cmpsb
push
push
repz
dec
aaa
in
mov
add
mov
loop
fiadds
out
jo
call
loopne
loopne
enter
xor
out
inc
xlat
push
pop
mov
push
int
add
mov
inc
pop
jb
addb
jp
lahf
pop
mov
mov
xor
dec
ret
test
stos
ljmp
gs
or
ja
add
and
loope
sarl
jge
xchg
adc
fdiv
call
scas
je
mov
outsb
mov
xor
sub
cld
aas
int
jns
mov
mov
cmp
mov
ljmp
aas
xchg
dec
push
push
lret
mov
cld
mov
in
sub
mov
xchg
nop
mov
xor
jo
ret
pop
iret
dec
xor
cmpsb
int
push
fldcw
in
repnz
cmp
out
pop
xor
mov
mov
lods
or
mov
mov
sub
dec
pusha
and
das
jecxz
mov
adc
jbe
xlat
inc
dec
popa
ljmp
or
ljmp
dec
mov
sub
sub
add
mov
lahf
or
sub
xor
jp
mov
inc
outsl
mov
jecxz
dec
push
cmpsl
mov
orl
int
stc
push
mov
mov
jnp
in
inc
and
cwtl
and
xchg
push
mov
or
jmp
cmp
dec
xor
add
daa
mov
incl
sbb
out
dec
pop
xor
mov
mov
lods
jge
and
por
ja
fistps
sahf
mov
insl
aam
push
or
mov
jg
jne
jb
add
es
lcall
in
mov
jae
cli
dec
adc
mov
ss
notb
cmp
or
fadds
xchg
sub
fsub
add
cmpsl
cwtl
pop
aad
mov
or
push
shll
mov
xchg
mov
xlat
jne
test
into
dec
mov
dec
xor
pushf
sub
pop
or
adc
add
filds
jl
xor
rolb
or
fs
addl
adc
hlt
mov
cltd
jmp
leave
cmp
ljmp
mov
outsb
ret
adc
xor
scas
inc
ror
push
jmp
mov
mov
add
dec
and
sub
dec
cs
mov
in
je
aas
dec
jmp
addr16
aas
add
popa
jp
jg
add
cltd
mov
mov
in
mov
inc
lcall
jno
repnz
daa
mov
xchg
dec
scas
add
mov
test
dec
jne
push
add
jae
nop
das
icebp
ror
pop
xchg
mov
push
das
push
fwait
lods
pop
cwtl
shll
push
sbb
je
into
popf
in
mov
xor
sbb
xor
push
add
mov
add
and
clc
xchg
mov
pop
test
mov
adc
pop
jl
pop
mov
push
je
cmp
xchg
sbb
inc
cmovnp
shlb
or
popf
dec
fiaddl
or
inc
xor
sub
dec
mov
pop
mov
xlat
and
in
pop
pop
cmp
popa
xchg
xor
sub
ret
xchg
jns
scas
mov
pop
inc
dec
jle
hlt
movsb
pop
dec
lods
les
or
lcall
mov
sahf
cmp
or
popf
xchg
pop
insb
jnp
ljmp
loop
clc
jecxz
out
mov
add
lea
jmp
push
push
pop
adc
pop
mov
aad
dec
ret
or
sbb
cmp
outsl
or
mov
push
std
sub
leave
mov
mov
add
in
adc
mov
stos
aam
iret
rcrl
mov
pop
sub
add
lcall
push
xchg
mov
jmp
sbb
shrl
fucomi
lods
xchg
fbld
stc
inc
scas
movb
or
mov
or
xor
and
xor
cmpsb
push
loop
mov
or
jns
jbe
jle
lock
pop
mov
xorb
and
pop
ds
inc
fndisi(8087
jae
adc
sbb
mov
cmc
push
dec
jl
imul
mov
mov
aas
andl
cmp
adc
adc
xchg
adc
pop
jmp
sahf
into
dec
stos
push
mov
dec
outsb
ret
addr16
aam
in
lea
mov
mov
mov
mov
aad
push
lods
test
mov
mov
out
push
cmpsb
sar
xor
jo
xor
mov
jmp
daa
lret
mov
cld
lcall
mov
sub
xor
inc
inc
or
call
mov
jle
jb
loop
and
aas
clc
std
add
xchg
cmp
cmp
xor
add
cmp
mov
sbb
jo
das
jbe
loopne
inc
daa
ret
push
clc
fwait
popf
add
pop
hlt
mov
and
mov
pushf
pop
outsl
cltd
cmp
adc
jp
push
xor
aam
adcl
icebp
movsb
orb
rcrl
xlat
lea
add
push
aas
pop
jl
push
jne
test
sar
xchg
sub
cmpl
mov
jne
out
mov
mov
push
sub
push
or
and
push
ret
out
in
dec
sbb
popa
inc
pushf
jno
pop
fsubs
push
pop
mov
imul
adc
leave
in
test
ss
or
lret
fstps
mov
mov
mov
popl
mov
fstl
jp
mov
push
out
in
lods
loop
icebp
lea
jnp
inc
push
out
sub
pop
mov
dec
rcr
pop
popa
cld
dec
push
rcll
out
cmp
testl
dec
pop
les
mov
cmp
insb
outsb
scas
out
jmp
iret
pusha
jecxz
lods
rorl
nop
filds
into
push
lds
les
lcall
insl
xlat
sbb
insb
hlt
pusha
ret
aam
and
mov
mov
insl
enter
fwait
cmpsl
pop
ss
adc
data16
jnp
hlt
xor
mov
xchg
test
clc
call
add
dec
or
clc
add
les
pop
add
xchg
xlat
push
jbe
pop
bndldx
inc
cmc
add
repnz
int
dec
xor
pop
xchg
movsl
sub
mov
enter
cmp
cwtl
mov
jns
cmc
daa
jl
jge
mov
dec
lret
stc
mov
push
insb
mov
mov
pop
dec
or
xchg
inc
push
pop
xor
pop
mov
or
movsb
or
adc
bnd
adc
lock
xor
xor
fisttps
xchg
aas
in
cmp
sub
lock
pop
mov
dec
jne
out
mov
divl
popw
and
inc
pop
dec
xchg
iret
mov
push
je
push
cs
sub
cmpsb
and
add
lods
pop
or
adc
test
add
insl
sbb
leave
push
xchg
adcb
sbb
sub
cwtl
ret
fdivl
mov
test
and
xchg
in
pop
dec
jnp
jo
gs
aam
or
dec
test
pop
movsb
orb
enter
or
aas
fcmovnbe
sub
aad
pop
fisubs
cwtl
data16
std
adc
addr16
sbb
add
or
js
sub
sub
popa
jns
imull
sarl
out
mov
cmp
push
or
clc
sub
outsb
xor
or
mov
mov
cmpsl
sbb
loopne
xor
xchg
loope
cmpsl
lods
shll
es
xchg
lret
int
jo
sub
popf
cmpsl
mov
push
mov
ljmp
adc
call
jle
andb
or
test
push
loop
sub
sbb
std
cltd
inc
cli
mov
movsb
or
sub
mov
sahf
test
mov
and
data16
out
jae
dec
clc
sbb
inc
inc
push
adc
jge
mov
cmp
push
in
insl
push
jo
repz
jnp
aas
test
bound
ja
fldcw
out
inc
imull
pushw
inc
jne
in
mov
loope
xchg
pop
dec
loop
mov
inc
jae
pusha
loope
scas
jecxz
iret
ficompl
ss
daa
imul
xchg
mov
decb
roll
push
cltd
mov
out
stos
xlat
sub
mov
add
setl
sbb
lcall
mov
mov
inc
xchg
dec
fdivr
add
sub
sbb
sbb
push
xchg
cmc
mov
dec
inc
adc
jle
cmp
pushf
mov
aad
pop
add
sbb
sarb
push
push
mov
out
pop
pop
stos
sbb
mov
jns
add
push
pop
push
push
cs
in
xor
sbb
repz
cwtl
pop
insl
or
sbb
out
fwait
mov
cmp
push
push
jno
pop
cmc
or
sbb
out
out
aaa
jo
fsubrl
pop
xor
test
push
mov
cmp
aam
stos
fidivl
xchg
insl
out
lds
xor
or
jnp
out
add
frstor
sbb
sub
jae
fucomi
js
xchg
and
es
outsl
sub
movsb
push
call
lahf
cmp
jbe
add
add
aam
push
mov
sub
xor
adc
insb
sbb
dec
inc
loope
push
or
xor
cmpsb
jbe
pop
add
fdivrl
mov
cmpl
mov
sbb
bound
xbegin
push
and
outsl
add
ss
arpl
mov
mov
and
repz
testb
xchg
out
les
cmpsl
and
mov
sti
dec
jg
test
hlt
push
push
lods
fcmovnbe
cmpsl
stc
movsl
scas
bound
fadd
ja
push
aas
sbbl
scas
sub
dec
cmp
imul
jg
test
adc
divl
mov
or
jae
insb
jmp
aaa
movb
mov
add
or
mov
mov
negb
pop
inc
ss
lods
add
inc
jnp
loop
dec
test
pushf
dec
popa
aam
test
mov
bound
pop
pushw
inc
movsb
lock
sub
sub
ret
sbb
mov
xlat
adc
inc
test
cmp
ss
scas
inc
jle
or
test
aaa
movsb
pop
xor
add
rep
cmp
push
xchg
int
mov
mov
es
jae
movsb
lea
ret
bound
mov
test
cmpsb
mov
add
xchg
push
cwtl
mov
mov
inc
in
outsb
ja
adc
bound
out
leave
push
add
or
xchg
out
xorb
jne
add
and
int
xchg
seta
jl
adc
shlb
xlat
icebp
pop
sbb
imul
dec
dec
inc
mov
and
adc
cmp
sub
lock
icebp
cmpb
push
mov
fistps
insl
lcall
inc
jno
lock
icebp
sbb
pop
nop
add
xor
gs
pop
jno
pop
xor
xchg
pushf
add
sub
xor
inc
sti
adc
add
jmp
pusha
pop
mov
data16
out
push
cltd
cli
sub
mov
sub
mov
pop
xor
repz
aaa
xor
fwait
push
xchg
rcll
in
sbb
push
cmpl
out
add
nop
add
cmp
clc
sbbb
imul
pop
adc
jns
mov
xor
cmp
xor
negl
jns
icebp
hlt
popf
leave
test
lds
jl
xchg
mov
sahf
adc
inc
ljmp
adc
sbb
dec
mov
and
sbb
sbb
pop
out
cmp
inc
pop
push
and
dec
lcall
inc
or
mov
into
push
dec
pop
js
sub
lret
sti
mov
std
and
dec
mov
and
push
outsl
mov
xchg
adc
dec
repz
addr16
in
test
sbb
adc
fs
in
jb
adc
int3
gs
add
in
lcall
sub
in
sbb
loope
imul
or
inc
ficomps
cli
mov
js
cmpsl
push
je
adc
loope
xchg
stc
push
mov
pop
popa
mov
je
sub
jns
jnp
lods
clc
pop
ret
stos
pop
dec
xor
dec
lods
jae
push
lret
nop
enter
sbb
adc
dec
in
cmpsl
push
pop
fists
pop
shrb
lock
add
or
subl
adc
int
sbb
cmpsl
fsubrs
xchg
scas
jo
fidivl
repz
mov
cld
dec
stc
pop
cmpsb
mov
pushf
push
jbe
enter
les
dec
daa
loope
jb
pop
mov
push
xor
das
push
pop
insb
pop
add
jp
in
xchg
jp
push
rol
lret
or
mov
xor
loop
daa
je
lea
stc
js
lret
xlat
mov
dec
mov
pop
pusha
aad
cmc
out
dec
push
je
pop
ljmp
jbe
mov
mov
and
adc
and
cltd
mov
push
jmp
push
mov
cmp
mov
shr
rcr
loop
popf
in
add
add
or
popf
outsl
std
mov
sbb
ljmp
cmp
fs
push
stos
inc
subl
mov
dec
inc
sahf
jnp
mov
push
popf
repnz
or
ss
push
out
lret
nop
mov
lds
xor
cmp
orl
icebp
fwait
or
bound
rcrl
icebp
jne
xchg
xor
cmp
repnz
test
pushf
jecxz
xlat
call
leave
lahf
xor
pop
pop
sbb
insb
call
pop
int3
lea
popa
cmp
mov
and
bound
lock
and
xor
jne
sub
cmpsb
sbb
push
es
add
scas
je
ja
movsb
mov
pop
test
test
rcrl
cmc
data16
pop
inc
or
or
jo
insb
or
test
imul
fldcw
and
jmp
push
cwtl
inc
or
adc
adc
inc
adc
mov
loop
cmp
sub
mov
out
push
add
xchg
and
xchg
fdiv
pop
or
inc
test
dec
bound
inc
jb
aad
mov
out
test
push
repnz
mov
test
imul
and
call
in
dec
pop
out
aam
mov
xchg
outsb
xor
push
sbb
mov
dec
xchg
cltd
imul
dec
jg
xchg
div
xor
cwtl
mov
mov
ss
fcomps
and
fcompl
stc
push
pop
mov
mov
fcomi
in
ljmp
jge
lret
rcl
jecxz
in
cwtl
push
or
sub
mov
push
test
jno
test
jae
jns
inc
and
lock
dec
push
jno
mov
clc
enter
dec
clc
pushl
pop
stc
pop
leavew
push
ljmp
jae
jne
in
test
loope
push
mov
clc
or
mov
inc
xor
xchg
or
pop
adc
push
out
mov
fstl
and
test
shrl
mov
and
lea
pop
ret
js
loope
sbb
pop
lods
out
mov
std
leave
out
pushf
xlat
push
inc
dec
cwtl
xchg
xchg
add
data16
shrd
test
pusha
shll
je
inc
scas
add
inc
jno
cmp
sbb
arpl
xor
jge
push
shr
ror
jne
xchg
out
dec
gs
dec
ficoml
dec
sub
cld
cmp
add
sbb
add
xchg
and
dec
das
dec
cmc
gs
sbb
xchg
inc
jo
mov
je
aam
cmp
cmp
sbb
sbb
push
adc
xor
or
cmpsb
int
or
adc
test
or
aaa
movsl
inc
xor
cmpsb
out
mov
arpl
sub
mov
jae
dec
aas
in
fsubrs
loopne
pop
inc
mov
lret
mov
out
arpl
fsub
and
mov
mov
xchg
out
inc
mov
gs
loop
cld
jmp
cmpsb
pop
lods
mov
test
inc
mov
arpl
pop
cmpsb
mov
jge
and
aaa
or
insb
add
mov
pop
aad
movsl
rcl
sbb
push
dec
scas
inc
inc
je
sahf
sub
sbb
adc
pop
dec
jle
pop
hlt
pop
inc
adc
jmp
bound
testb
push
fdivl
popf
dec
lods
insl
mov
pop
mov
dec
clc
lea
adc
adc
sbb
stos
sbb
cmp
jnp
mov
sbb
mov
dec
jnp
pop
or
and
and
push
push
iret
cmp
xor
sti
dec
jb
scas
pop
imul
jnp
sub
shll
lods
loopne
mov
outsb
adc
add
inc
adc
sbb
jmp
dec
pop
fidivrs
adc
hlt
and
sbb
loopne
push
or
addl
jbe
cmp
and
inc
mov
js
clc
mov
inc
cltd
jns
fwait
jae
andl
push
mov
jmp
orb
lahf
inc
jnp
pusha
pusha
imul
adc
mov
pop
push
movsl
mov
add
mov
xchg
inc
push
jbe
mov
mov
or
cmp
repnz
movsl
test
mov
enter
jne
int3
inc
xchg
pushf
ljmp
test
ret
pop
test
loope
rcll
ret
movsl
clc
push
adc
enter
mov
sbb
mov
inc
jns
mov
std
loopne
ret
cmp
cli
je
shl
jb
inc
retw
sub
push
rorl
test
mov
imul
or
imul
push
pop
sub
and
sbb
stc
ret
aaa
mov
xor
xchg
cmp
lcall
sbb
fnstenv
rcr
aaa
les
ficoml
movsl
mov
mov
or
test
or
lock
lock
mov
cmpsl
std
jl
or
shlb
mov
push
stos
ret
sbb
aaa
je
mov
das
adc
not
jne
xchg
xchg
jg
pop
icebp
and
jns
jle
pop
dec
dec
lret
mov
fiadds
xchg
cmpsl
dec
sub
and
adc
inc
cld
xor
xchg
mov
movsb
mov
roll
xchg
gs
out
fcomi
repnz
xchg
lahf
push
fisttps
dec
dec
or
vdivss
add
stos
imul
mov
stos
dec
xorb
adc
loop
out
popa
inc
mov
incb
lret
push
into
mov
cmp
or
jo
loop
dec
and
adc
mov
mov
sub
adc
pop
movsb
into
lret
xor
sahf
adc
xchg
xchg
out
daa
inc
fldenv
adc
adc
and
xchg
lds
dec
das
je
popf
jne
mov
and
lds
jnp
and
das
push
in
repnz
repz
fildl
or
adc
xchg
and
ss
lock
scas
mov
shrb
enter
pop
and
cmp
push
ret
mov
call
ljmp
popa
insb
pop
sahf
sbb
fidivs
les
cmp
cmp
in
sub
sub
push
dec
fstp
mov
ret
jg
jno
out
sbb
mov
xor
xchg
push
mov
aam
rcll
mov
ljmp
mov
pop
outsl
test
add
fcompl
les
ret
rorl
insl
mov
fdivp
mov
jno
add
cmp
inc
cli
ja
call
xchg
loopne
inc
loope
arpl
rorb
pop
clc
test
dec
fists
rclb
loopne
push
iret
das
lods
sahf
cmp
lcall
mov
jno
mov
xor
int3
nop
mov
cwtl
cmp
in
xchg
lret
sub
call
cwtl
jmp
add
aad
cmp
mov
test
dec
cmpsb
je
arpl
sbb
cmp
fistpll
cmp
sub
lret
or
sub
mov
pop
mov
and
popf
lods
cmovae
in
adc
test
jecxz
imul
fldenv
pusha
jbe
mov
push
inc
lret
test
nop
inc
sbb
lcall
pop
push
aad
dec
pop
jg
sbb
iret
and
push
into
cmp
pop
in
mov
pop
mov
sub
mov
adc
std
dec
cmp
mov
and
fsubrs
push
inc
imul
mov
nop
test
adc
stos
hlt
pusha
ret
jecxz
stos
jo
jo
xchg
hlt
cli
test
xor
imul
ss
movsb
lods
push
push
mov
fcmovu
arpl
push
std
or
int
sbb
lods
push
push
inc
xor
out
xchg
mov
xor
lds
mov
adc
mov
mov
or
xchg
shl
aad
das
out
push
jg
push
scas
inc
repnz
push
push
inc
fiaddl
test
in
or
cmp
popf
mov
pop
sbb
mov
sbb
mov
es
dec
cmp
mov
pop
imul
adc
outsl
rcr
inc
aaa
push
xchg
push
rorb
fdivrs
insb
shlb
test
jecxz
loope
sub
lods
ljmp
mov
xchg
cmpsb
cli
imul
and
push
mov
dec
icebp
test
mov
xchg
in
xchg
jne
stc
int
adc
imul
inc
popl
aam
lret
xor
xlat
insl
jae
jp
test
les
push
jbe
push
ficompl
pusha
leave
push
pop
test
ret
sahf
movl
pushf
lods
sbb
cmp
decb
push
sbb
and
or
mov
mov
stos
push
loope
xlat
inc
jnp
xor
shlb
aad
sar
rcrl
insl
dec
imulb
nop
loopne
aaa
mov
xchg
mov
cmpsb
cmc
mov
outsb
push
mov
xchg
mov
in
push
cmp
cmp
popf
jmp
rolb
push
orb
mov
mov
xor
jmp
repz
ds
push
adc
clc
out
mov
or
test
bound
popf
lret
xor
rolb
iret
xor
ja
stos
loop
out
sub
sbb
shlb
int
inc
mov
adc
jae
adc
pop
test
push
xchg
pop
jg
jae
xor
pop
xor
in
inc
loope
mov
mov
or
inc
cmc
xor
shll
sbb
in
inc
scas
cmp
rcrl
mov
iret
movsl
jge
pusha
roll
rcr
daa
push
stc
roll
ficomps
sti
enter
hlt
mov
pop
jno
in
jne
xchg
mov
scas
pop
push
add
popf
adc
sub
call
adc
ret
cltd
stos
arpl
mov
inc
int3
out
icebp
call
and
push
inc
mov
inc
lret
out
mov
adc
das
mov
loope
outsl
loopne
jno
push
mov
test
mov
mov
std
dec
std
push
push
cli
mov
and
ss
data16
fstpl
mov
inc
jo
mov
out
cli
addb
add
push
add
inc
pop
fs
inc
xchg
and
mov
ss
test
fwait
inc
sbb
jns
inc
outsb
hlt
fdivr
mov
aad
xchg
cmp
lods
aad
hlt
mov
movsb
jle
stc
mov
cmp
add
lcall
les
scas
sbb
inc
xor
pop
add
cmp
sahf
cs
icebp
mov
mov
and
jno
mov
mov
push
outsb
aam
sbb
push
rolb
repz
inc
mov
dec
aam
jnp
sub
dec
sub
pop
jle
push
shll
insb
jnp
jo
jbe
cmp
push
jo
lcall
shll
mov
push
ror
xchg
push
push
in
aaa
adcl
xor
push
ss
ja
sbb
jno
clc
imul
cwtl
fadds
sbb
test
cmc
lods
xor
pushf
xor
aad
mov
sbb
rorb
xor
ja
lret
fimull
push
xchg
xor
iret
xor
cmpl
push
out
test
cmp
stos
push
and
sahf
sub
leave
cld
add
push
push
js
pop
pop
sbb
daa
dec
nop
popf
and
jb
cmpb
sub
imul
adc
jge
daa
cmp
lahf
repnz
or
push
jmp
test
sub
les
cmp
in
jns
std
outsb
cwtl
xchg
adc
sub
idivl
dec
rcrb
cmp
sahf
es
int
ljmp
pop
ss
dec
mov
and
lret
and
mov
or
xchg
jge
mov
dec
out
cmp
call
and
iret
cli
cli
addr16
not
lahf
sbb
sti
scas
fldcw
push
sbb
outsl
push
xor
jnp
icebp
pop
sub
mov
xlat
pusha
std
adc
xor
sub
jb
in
sub
mov
outsl
pusha
pop
push
sbb
push
lahf
sbb
outsb
xchg
mov
mov
sub
mov
movsl
jne
test
xchg
xchg
lcall
and
push
adc
pop
dec
fistpll
jle
sbbl
mov
fisttps
mov
mov
inc
outsl
dec
xchg
in
or
iret
pop
into
sbb
mov
jb
jge
leave
xor
aas
add
mov
cs
mov
adc
ja
in
fdivrp
hlt
mov
dec
insb
mov
add
pop
add
lds
out
xchg
cmp
and
sub
mov
inc
pop
adc
jl
push
xor
jp
adc
sbb
out
push
dec
sub
xlat
imul
ja
jb
mov
pop
xor
ja
xchg
push
jle
mov
out
mov
mov
dec
ja
lock
adc
pop
iret
mov
add
in
and
cmpsb
mov
shlb
mov
ljmp
ljmp
jae
iret
jbe
lods
cmpsb
mov
push
pop
fsubrs
sub
mov
lock
pop
stos
adc
inc
mov
ss
fldt
cmc
jb
mov
jge
inc
scas
jnp
dec
inc
fisubrl
jbe
push
loopne
push
mov
pop
jge
dec
adc
sub
mov
lret
insb
inc
aas
fwait
gs
ss
add
imul
in
sub
and
sub
pop
je
inc
addl
xchg
test
es
jne
fs
test
ja
pop
sbb
rcll
aas
mov
lock
icebp
and
mov
pop
aad
es
adc
mov
push
clc
mov
loop
cmovae
mov
jns
push
cmp
cwtl
xchg
push
sbb
mov
or
arpl
add
add
movsl
movl
sub
inc
repnz
repz
dec
mov
sub
pop
shlb
adc
pop
push
pusha
xor
mov
add
scas
xchg
xchg
mov
jae
pop
ja
adc
cli
dec
hlt
iret
jge,pt
aas
inc
push
cmc
test
out
rorl
aas
insb
pop
loopne
sub
or
pushf
push
mov
aas
push
imul
cmp
cmp
sbb
lods
jg
bound
lret
add
adc
inc
xchg
xchg
aas
xchg
sti
mov
jp
xor
mov
or
shll
sbb
lods
inc
jp
dec
aas
sahf
shrl
xlat
mov
daa
les
mov
xor
push
mov
pop
fiadds
int3
sahf
cmp
sub
adc
mov
mov
loope
add
dec
inc
loop
push
repz
add
xor
bound
xor
sub
push
popf
xchg
push
xchg
scas
pop
jb
jnp
sti
fisttpl
outsb
divl
test
arpl
test
int
outsb
nop
das
out
ja
and
pop
jb
mov
mov
push
or
sbb
adc
lods
loope
iret
loopne
pop
mov
mov
pop
arpl
jb
jg
or
sbb
push
mov
and
ljmp
pop
xchg
xchg
fcmove
int
push
loope
sbb
int
jl
add
test
add
popa
mov
sub
sub
dec
fildl
mov
shr
shrb
stc
faddl
loopne
dec
sbb
data16
push
sub
mov
test
add
int
jl
roll
pusha
push
pushf
cltd
dec
shll
std
je
sti
lret
pop
xchg
lret
sbb
xchg
xlat
leave
in
inc
fidivs
inc
mov
test
mov
or
jg
mov
cmpsb
jns
aad
fsubr
out
stos
nop
data16
test
das
outsl
dec
sbb
mov
stc
and
sbb
mov
add
loope
rcrb
lret
ficoml
add
xchg
xchg
js
inc
dec
bound
mov
and
enter
xchg
pop
jne
xor
leave
cli
jbe
cmpsb
pop
cld
movsb
sub
add
clc
test
jne
dec
xchg
jbe
in
cmp
out
orb
fcmovbe
inc
gs
adc
pop
or
pop
dec
js
sbb
push
adc
push
sub
dec
add
xchg
jno
dec
sub
push
push
add
in
or
jne
popa
xor
jo
inc
aad
and
pop
push
rolb
push
pop
subl
jl
mov
scas
pop
push
push
arpl
ret
ja
das
and
adc
mov
mov
rcrb
das
aas
sub
shll
popf
cmp
repnz
icebp
mov
cwtl
xchg
in
setns
stos
dec
or
mov
movsl
inc
jb
push
cmpsb
and
repz
outsl
ret
adc
notl
aas
pop
sbb
mov
adc
or
das
dec
sub
or
ljmp
inc
cs
mov
fucomip
fs
dec
push
cmp
inc
dec
aad
mov
pushf
cmp
daa
xor
fstpt
xor
sub
xor
mov
push
insb
mov
int
add
mov
inc
xchg
scas
outsb
sub
add
inc
lahf
pop
xor
lods
adc
dec
mov
jo
scas
fdivl
mov
in
stc
push
xor
or
dec
mov
push
cmp
jge
mov
xchg
out
mov
xchg
lods
sub
mov
mov
push
push
shrl
rcl
dec
sbb
push
ljmp
addb
pop
push
rcrl
inc
data16
dec
out
movsl
in
test
xchg
jge
out
sub
cmp
push
popa
stc
jp
lahf
mov
lret
push
mov
xlat
inc
lret
std
sarb
xchg
jp
or
jecxz
mov
cld
dec
cwtl
adc
mov
loopne
push
nop
les
or
xchg
lods
mov
cmp
mov
and
fs
out
icebp
out
push
cmp
sti
sub
push
aaa
sahf
sbb
nop
inc
sbb
mov
lahf
pop
sub
mov
xor
adcl
call
ret
inc
push
jmp
inc
pop
aad
and
mov
loope
adc
fistps
sbb
dec
jmp
dec
jle
push
jne
fisubrl
xor
mov
dec
cmp
repz
pop
push
fadds
stc
mov
or
jle
jo
jl
ret
xchg
jb
in
and
rclb
sub
out
mov
mov
enter
mov
pop
xor
arpl
sub
sub
movsl
mov
out
mov
call
loopne
stc
mov
dec
cmpsb
mov
and
push
cmp
add
push
jnp
xchg
bound
jbe
cmc
or
shrl
ja
lock
imul
movsb
dec
in
fcompl
sar
xor
lods
cmp
mov
ja
das
pop
mov
imul
inc
cmp
int
sub
xchg
adc
inc
pop
dec
ficoml
mov
add
cmp
test
fcmovnb
mov
fwait
sbb
data16
mov
pop
enter
sbb
cld
adc
or
cmc
cmp
popa
in
pusha
movsl
ja
add
fadds
mov
dec
jmpw
sub
outsl
inc
jg
xchg
mov
leave
add
loopne
xchg
adc
jl
mov
aam
dec
and
adc
rcll
or
loope
pop
sub
pop
scas
add
bound
out
mov
mov
push
xchg
fisubrl
ja
jbe
push
push
fs
adc
ss
xor
das
cmp
inc
stc
pop
enter
inc
xor
inc
das
mov
sbb
lds
dec
fsubs
aas
enter
pushf
and
push
hlt
cmpsl
pop
bound
jo
fildl
mov
push
mov
in
daa
mov
pmulhuw
inc
test
mov
je
inc
adc
fimull
loopne
adc
fwait
into
jge
and
jo
push
and
and
xchg
cmp
pop
adc
mov
pop
dec
imulb
mov
jg
fsub
sub
test
mov
mov
pop
sarb
sbb
inc
insb
outsb
cmp
sbb
call
pop
test
call
sbb
xchg
jmp
fmull
sub
push
es
xchg
ja
dec
test
cli
xchg
fldl
les
ret
mov
or
fcos
dec
pop
push
pop
cld
add
test
popf
in
xchg
pushf
leave
movsb
idiv
mov
cmp
mov
mov
es
push
xchg
mov
xchg
pop
scas
ret
mov
cmpsl
pop
inc
imul
or
gs
or
in
xlat
sbb
stc
inc
inc
and
sbb
shl
mov
dec
cs
test
jl
imul
mov
std
adc
shrl
pop
imul
nop
mov
mov
mov
negl
enter
ds
test
idivb
fs
pop
mov
icebp
cmpsb
rcll
inc
push
pop
cmpsl
cli
aas
mov
int
stos
call
sub
jmp
insb
or
enter
sbb
int3
or
jmp
cmpsb
mov
sbb
mov
repz
adc
sarl
popf
ds
fcoml
mov
nop
mov
pop
sbb
adc
inc
mov
nop
das
insb
sahf
jne
jo
xchg
xchg
xor
mov
sahf
out
mov
adc
sbb
or
sub
mov
adc
add
lock
repz
aaa
int3
ja
fwait
out
cmp
mov
xchg
xchg
pop
aaa
ret
cmp
mov
jle
in
xor
divl
and
pop
mov
jns
mov
add
dec
inc
sti
movsl
aam
adc
inc
sub
mov
jle
icebp
sbb
jge
pop
aas
loopne
or
jmp
fs
inc
imul
push
lret
scas
stos
out
cmp
scas
mov
fisubs
enter
lret
fstl
into
dec
inc
sub
inc
sahf
mov
sub
xchg
cli
mov
sub
test
xor
mov
mov
and
shl
enter
mov
shlb
inc
cmc
inc
cli
cmp
das
aam
inc
pop
insl
xor
les
out
cmpsl
adc
xor
add
loop
mov
js
out
mov
push
xor
mov
imul
das
dec
cltd
mov
adc
jo
loopne
push
mov
jmp
xor
sub
in
into
sub
ret
or
addr16
decl
adc
jno
hlt
int3
pop
clc
loopne
cs
jge
int
lret
mov
mov
in
sbb
mov
outsb
pop
or
sub
fs
stc
sub
cmpsb
and
aaa
stos
test
cld
or
leave
fs
insl
add
adc
xor
add
inc
cmp
mov
outsb
fwait
cmp
mov
orb
scas
sbb
sti
imul
jae
jae
inc
lret
jnp
fcmove
flds
or
mov
bound
pop
stos
inc
ljmp
lea
and
stos
leave
in
mov
mov
rorb
imul
and
insb
xchg
lods
in
imul
dec
xor
out
xchg
dec
cmp
repnz
fisubl
sub
push
pop
push
jnp
adc
out
cmp
nop
push
sub
stos
in
out
pop
mov
roll
add
dec
sti
lods
ret
xor
js
iret
testb
add
int
mov
xchg
jnp
pop
inc
jmp
pop
aad
push
and
sbb
movsb
rcrl
push
addl
push
cmp
das
xor
or
cmc
mov
jns
cvttps2pi
or
push
sub
imul
out
sbb
sbb
cltd
mov
pop
and
rorb
imul
sbb
sbb
cmp
jnp
fs
ja
xor
mov
movsl
lcall
mov
dec
push
jl
imul
lea
mov
pop
lds
xchg
inc
aas
mov
sub
lret
lea
mov
jecxz
xlat
sub
and
stos
cmc
jmp
js
pop
les
push
enter
push
sahf
fcmovb
mov
fcomps
rolb
pop
clc
inc
dec
xor
mov
insl
push
repnz
les
mov
and
jge
out
jnp
leave
or
mov
push
lcall
lock
idivl
and
imul
pop
push
nop
ffreep
cmc
add
or
or
xchg
lea
cmpsl
pop
sbb
cld
movsb
cs
rcr
bound
inc
loope
aas
mov
xor
push
mov
popa
lds
jmp
pop
enter
mov
or
aam
jns
sub
xchg
or
sub
jecxz
push
lds
mov
arpl
shl
or
cmc
xchg
clc
jne
cld
lea
lds
or
lods
pop
out
out
and
add
push
fs
lcall
pop
fadd
addb
gs
jl
sbb
lret
mov
pop
jnp
add
xchg
lcall
pop
push
mov
dec
lock
lret
ret
fstpl
cltd
pop
repnz
dec
clc
dec
add
lods
gs
in
out
cltd
dec
push
cltd
jnp
cmp
mov
mov
jnp
test
push
push
mov
adc
dec
fstl
lret
ffreep
adc
mov
scas
xchg
pop
jmp
mov
add
push
imul
stos
test
xlat
dec
or
cmp
pop
es
push
ljmp
lock
das
filds
mov
mov
sbb
mov
mov
adc
jecxz
popa
cmp
push
cmp
or
mov
shll
scas
in
mov
adc
mov
or
mov
mov
cli
or
and
ret
pop
js
out
and
push
xchg
imul
out
rcr
movsb
stos
jg
fwait
test
lcall
push
test
lahf
rclb
dec
mov
test
iret
mov
fchs
loope
mov
pop
cmpb
pop
cmp
xor
xor
adc
mov
aam
and
mov
sahf
mov
ret
add
pop
sub
data16
mov
in
cwtl
les
data16
lret
pop
mov
nopl
and
aaa
aad
mov
jle
and
jbe
add
int3
divb
ret
pop
jp
iret
push
dec
scas
gs
xchg
sub
repz
in
mov
subb
xchg
jecxz
loop
in
out
fs
das
out
pushf
jge
sbb
or
push
add
das
push
or
inc
std
mov
iret
ss
mov
insl
pop
loope
jmp
sbb
stos
xor
fs
stc
jne
ja
or
sub
aad
popa
and
and
dec
int3
add
insb
rcll
loope
mov
aad
mov
xchg
mov
hlt
pop
sub
lret
jb
stos
js
imul
dec
mov
pop
aaa
sub
dec
sub
add
js
xchg
sbb
test
sar
pop
add
imul
dec
popf
imul
addr16
jp
mov
add
loop
jecxz
cmp
lcall
mov
cmpsb
gs
test
es
repz
in
xchg
shlb
ljmp
stos
xor
pusha
inc
xchg
popf
mov
insl
pop
into
insl
push
add
adc
popf
sub
movsb
jo
cmc
push
mov
cmp
lock
loop
dec
add
dec
lret
mov
push
or
call
scas
aaa
or
psubsw
or
xchg
pop
lcall
pushf
and
mov
sub
xchg
sbb
mov
jns
fldt
icebp
mov
loop
inc
dec
ret
xchg
fists
imul
pop
rcr
sbb
scas
xor
test
fxch
data16
jo
xor
daa
adc
cmp
test
mov
in
ret
dec
icebp
or
cmp
data16
push
aam
leave
xlat
dec
je
cli
cmpsl
pop
pushf
cmp
sbb
or
jae
xchg
dec
popa
daa
jmp
pop
aam
mov
mov
mov
push
divl
fdivrl
stos
xlat
sbb
jns
aad
cmp
inc
dec
mov
sub
movsb
dec
shll
and
imul
and
ficoms
pop
dec
jmp
sbb
in
push
das
jg
or
outsb
loope
in
imul
push
ds
jne
pop
push
popa
je
inc
dec
push
popa
push
loop
jmp
in
popl
in
das
pushl
scas
pop
fidivs
jae
ja
push
leave
or
std
sub
pop
push
lods
jne
lods
add
cmc
fbld
cmp
push
push
inc
aas
dec
jmp
xchg
fwait
lea
dec
aaa
cwtl
sub
mov
push
pop
and
jno
repz
gs
mov
and
andb
repz
les
mov
inc
js
mov
pop
xor
pop
xor
jmp
mov
into
push
nop
add
pop
shlb
cld
and
in
or
mov
mov
roll
mov
ja
fdivrs
outsl
push
xor
sti
jb
jecxz
xor
pop
in
xchg
fidivrs
loop
adc
cmp
pop
ja
movsb
in
inc
pop
in
lds
shll
lods
inc
adc
xchg
mov
aam
mov
xor
mov
out
enter
insb
js
mov
pop
xchg
scas
popa
out
leave
in
out
push
cmp
in
dec
leave
mov
call
cmp
gs
push
scas
ret
jl
popf
xchg
leave
scas
in
cmp
cmc
aas
add
jge
mov
rcrl
dec
dec
xor
fistpl
lahf
hlt
dec
xor
mov
lret
shlb
sahf
cmc
jb
iret
icebp
add
mov
adc
aad
jmp
js
jno
push
fstps
pop
lcall
pop
ja
and
cwtl
out
cmp
lahf
imul
push
rcl
popf
cmp
xchg
mov
and
sbb
aam
rcrb
fildl
test
cltd
inc
test
add
nop
mov
push
lea
cmp
mov
cmc
dec
mov
inc
xor
jns
dec
push
cltd
sahf
mov
es
ds
jbe
loop
sbb
dec
jg
mov
adc
xchg
and
fidivrl
sbb
xor
scas
adc
ret
inc
adc
mov
sbb
adc
popf
lods
mov
lret
out
hlt
push
lcall
fbld
push
xchg
repnz
in
orl
inc
aaa
pop
add
in
sbb
pop
dec
xchg
cmp
mov
mov
sub
push
sub
push
cmp
sbb
cmp
movsb
stc
adc
call
xchg
jb
ss
out
les
inc
inc
in
rep
jg
in
sti
jmp
cmp
aaa
ss
cli
sub
xchg
test
in
popa
add
out
push
pushf
mov
lret
rclb
mov
sub
or
sbb
push
fiadds
adcl
fwait
in
stos
push
push
dec
movsl
sbb
sub
aas
lret
call
cmpsb
enter
xor
adc
mov
add
jns
fdivs
cli
imul
add
jno
sub
lods
les
cmp
leave
jl
adc
pop
repnz
frstor
stos
inc
ljmp
xchg
inc
ja
ja
ret
les
xchg
push
or
adc
rcrb
jle
add
inc
cltd
push
mov
cli
push
out
inc
loope
mov
lods
sahf
pop
fldl
push
nop
push
mov
fisubrs
mov
shl
cmp
nop
lcall
mov
pusha
push
jo
or
aas
mov
add
dec
xchg
pop
outsl
jge
stos
inc
mov
and
std
out
into
fwait
sbb
fildl
in
imul
insb
cmp
cmpsl
mov
leave
xlat
pop
std
mov
push
jno
adc
mov
test
sub
or
add
mov
pop
les
lahf
popa
sub
cmc
neg
cmc
sarl
pop
int3
mov
push
add
ljmp
sub
push
jo
in
mov
pop
hlt
add
push
fsubp
push
pop
scas
test
call
mov
jmp
gs
and
sbb
fnstcw
mov
stos
and
hlt
jg
jb
outsl
int
or
jmp
in
and
xchg
push
inc
xlat
xchg
xor
or
add
pop
shll
into
jnp
aam
loope
or
out
sub
lea
cmp
cld
push
fs
outsb
jnp
sbb
fstps
imul
cmp
mov
cmpsl
popf
cmpsb
sbb
stos
cmpsl
roll
pop
pop
jp
mov
add
aad
int3
mov
jno
adc
xchg
cmp
mov
dec
imul
jle
pop
push
mov
mov
mov
xchg
pop
mov
push
xor
popa
pushl
das
inc
into
cmp
cld
rcrb
aam
test
xchg
jge
dec
xlat
and
loopne
sbb
js
mov
jbe
ljmp
jnp
pop
push
inc
and
outsl
sbb
cs
dec
movsl
fs
mov
inc
xor
dec
pushf
insb
jae
inc
lahf
xchg
int3
adc
adc
cwtl
or
in
mov
jne
sbb
pop
pop
push
sbb
ss
cmpsb
lea
dec
repz
lods
inc
ret
push
sub
frstor
dec
mov
sbbb
jp
clc
pop
popl
or
mov
jg
in
insb
les
test
outsl
in
adc
jno
loope
and
xchg
dec
inc
jne
dec
neg
add
mov
les
push
pop
scas
jb
pavgb
xor
jp
cmc
test
or
push
ljmp
sbb
ret
xor
inc
fistps
mov
pop
movsl
sti
call
jno
push
jmp
mov
xlat
and
loope
sub
add
mov
mov
js
and
adcl
inc
adc
leave
or
push
jmp
fildll
call
mov
inc
mov
jmp
loop
inc
sahf
sbbl
push
jle
xchg
xor
pop
sbb
mov
ja
mov
lret
sbb
xchg
fsubs
outsb
mov
test
int3
daa
mov
inc
daa
test
inc
mov
and
inc
and
xacquire
idivl
push
jne
mov
mov
mov
xchg
in
pop
pop
insl
je
pusha
fcoml
or
mov
ss
int3
scas
jmp
jbe
iret
mov
cmp
aas
ss
jno
pop
mov
popa
xchg
adc
test
xorl
popf
int
jne
subb
and
push
adc
sub
jecxz
into
sub
addl
cltd
mov
in
add
call
inc
pop
xchg
sub
cmp
jae
mov
jmp
xchg
jb
ljmp
ss
scas
dec
ds
lret
das
mov
and
xchg
jno
pop
pushf
cs
mov
pop
dec
jo
ret
xor
test
movb
adc
jb
ss
jne
cmp
xchg
mov
jg
out
iret
or
jns
add
xchg
outsl
loopne
mov
inc
ljmp
lahf
xchg
scas
dec
push
lret
insl
es
ficomps
mov
xchg
lret
dec
jae
mov
ret
call
mov
xchg
jns
jl
int
fistpll
inc
lea
adc
cmc
add
mov
scas
jno
lods
rcll
push
push
cwtl
mov
sbb
fprem
lahf
sbb
dec
adc
bound
sub
push
add
loop
cli
fidivrl
es
mov
shrb
cmp
scas
inc
enter
loop
pop
push
cmc
addr16
sub
sbb
inc
gs
rorl
xor
shl
rclb
cmp
push
push
mov
hlt
int3
push
push
call
jae
jns
mov
test
jbe
rorl
jno
test
xchg
ljmp
jmp
les
pop
rolb
notb
stos
xlat
dec
push
push
sbb
lret
xorb
test
lahf
xor
adc
pop
fidivs
xor
cli
or
mov
fs
xor
mov
cltd
lret
int3
aad
insb
pop
push
mov
push
call
dec
xorl
xchg
push
sbb
lret
sbb
jns
cli
xchg
lahf
les
and
imul
or
mov
or
mov
pop
adc
pop
orb
mov
mov
lret
test
dec
scas
icebp
call
fsubs
mov
dec
inc
pop
fs
cli
xor
cmp
cmp
mov
inc
jae
test
inc
sarb
xchg
pushf
loopne
into
call
popa
call
in
js
pop
repz
movsl
fdivr
jb
fwait
adc
scas
mov
lahf
lcall
stos
jl
inc
inc
adc
pop
mov
fcom
subb
cld
sahf
jecxz
pop
movsb
aad
or
fiadds
dec
dec
cmp
mov
jg
adc
outsb
stos
mov
or
and
jl
xor
nop
js
popa
mov
lds
xchg
rolb
outsb
adc
mov
push
lds
pop
dec
in
sbb
sub
cmpsl
dec
inc
repz
pop
gs
mov
pop
xor
out
add
pop
add
cvtps2pd
insl
adc
leave
jbe
jno
sub
std
sti
stos
cmc
cs
insb
inc
mov
ds
inc
fdivl
aad
mov
mov
sub
xor
mov
sub
es
aad
inc
push
add
repz
xchg
pop
xchg
es
sub
test
insb
dec
jo
fsubl
cmp
pop
dec
in
testl
add
dec
movsl
vmptrld
fucompp
imul
enter
pop
inc
icebp
pop
pusha
cmp
mov
jp
dec
push
test
xchg
sub
mov
test
ffree
xor
negb
jo
ret
add
xchg
xor
sub
in
add
loopne
xor
or
and
dec
pop
enter
jae
inc
jg
ret
adc
mov
lret
int3
and
outsl
jns
shll
jnp
int
lods
mov
stos
sahf
jmp
inc
mov
mov
inc
in
mov
sub
add
es
out
js
mov
nop
sti
jne
popf
push
xlat
jg
xchg
arpl
jnp
es
iret
xor
sbb
enter
jecxz
jecxz
or
mov
test
jnp
icebp
jle
mov
xchg
sbb
in
mov
adc
daa
in
mov
call
pop
xchg
movb
add
push
fiaddl
jbe
pop
or
scas
ja
iret
sahf
mov
adc
out
mov
test
ja
jne
sbb
pop
dec
test
mov
mov
dec
clc
ret
sbb
xlat
pushf
mov
mov
subb
dec
cmpb
push
dec
lcall
out
jne
add
sbb
cltd
test
xor
ja
movsl
xchg
cltd
ss
and
sbb
icebp
icebp
insb
sub
xchg
daa
jg
test
popf
loop
enter
bound
and
or
ds
mov
pop
rep
into
xor
inc
push
inc
push
fdivs
dec
xchg
sbb
test
pop
shll
insl
cltd
adc
cmc
cmp
jmp
xor
out
sbb
jb
addr16
mov
sub
jo
das
rcll
sbb
sub
cmp
push
in
or
sbb
in
stc
pop
cld
pop
es
xchg
lea
shlb
clc
sub
xchg
cmc
lock
mov
xor
call
shll
popf
ret
jns
xchg
clc
test
and
push
popa
jns
adcb
mov
jo
sub
icebp
and
lock
jno
pop
out
bound
mov
in
testb
sarb
mov
cltd
fnstsw
and
or
lock
dec
add
pusha
mov
pop
push
push
cmpsb
adc
cwtl
cwtl
pop
mov
push
cmp
out
xor
rclb
lret
pop
ds
mov
jp
loopne
nop
dec
scas
pusha
mov
xor
pop
ja
insl
cmc
adc
fs
aad
fs
ds
jno
adc
or
mov
into
pop
lods
cmpb
mov
mov
cld
loope
jo
xchg
push
ja
mov
pop
mov
sarb
xlat
cltd
adc
ror
and
jl
cli
aad
rcll
mov
mov
fwait
repz
inc
repz
jmp
shlb
fcmovu
mov
das
scas
jle
pop
shll
mov
cmpsl
bound
adc
inc
mov
imul
mov
mov
pop
mov
nop
dec
or
fmull
rclb
cmp
cwtl
into
jl
add
mov
xlat
pop
xchg
jp
xor
push
push
pop
pop
sbb
repnz
test
push
xchg
ljmp
push
ret
push
ret
mov
mov
das
jbe
jno
inc
call
cli
mov
sarb
sbb
ds
push
pop
call
sarb
in
out
fsubrl
add
ret
sub
lcall
jp
shlb
mov
nop
push
cwtl
or
movsb
inc
adc
jl
sub
cmp
aam
jecxz
into
sub
in
test
sti
jmp
lds
xchg
hlt
or
in
fldcw
inc
int3
lock
leave
loop
testb
insl
or
cltd
ja
outsb
jp
rolb
test
data16
dec
rcrl
push
fsubl
testl
ss
mov
and
xor
xor
sbb
fldl
mov
jmp
push
mov
or
in
pushf
adc
xor
and
cmpsl
push
mov
and
dec
jo
jbe
cmp
fildl
arpl
frstor
scas
insb
imul
das
push
cmp
cmp
roll
and
inc
je
push
fbld
into
sub
pop
sbb
push
in
pop
shlb
xlat
bound
out
push
inc
adc
add
xor
cld
iret
inc
into
adc
cmp
js
mov
insb
insl
dec
daa
and
es
add
fdivrl
andb
adc
or
aas
mov
inc
cltd
jbe
daa
sbb
lcall
xlat
inc
mov
sahf
and
lods
and
sub
mov
les
dec
lret
mov
sbb
fists
jmp
cs
pop
icebp
ja
and
pop
cmpsl
xchg
sub
cmp
push
dec
iret
mov
jo
add
pop
rol
adc
call
push
adc
xchg
bound
push
test
pop
test
xor
in
aam
pop
inc
inc
ror
xchg
jo
ss
jg
jl
loopne
call
jg
pop
xor
out
inc
fmulp
xchg
jp
rorl
sahf
push
sub
add
imul
inc
out
loope
cltd
hlt
out
push
cmp
sbb
stos
test
fidivrs
sub
inc
xlat
jo
leave
xchg
push
push
xchg
fidivrs
push
leave
dec
scas
sbb
push
lods
andb
test
popa
std
mov
outsb
icebp
jbe
ljmp
inc
jno
fwait
call
and
add
mov
sbb
nop
cltd
aam
inc
imul
or
mov
repnz
pop
xlat
mov
cmp
and
cld
out
dec
sarl
cmp
dec
ljmp
xchg
mov
iret
mov
inc
sbb
cli
out
leave
jle
add
das
mov
repz
cmp
imul
adc
lds
dec
push
test
hlt
jle
pop
adc
pop
add
add
arpl
mov
pop
push
adc
hlt
inc
sub
lods
pop
in
lods
cmp
mov
mov
adc
mov
push
insb
push
mov
hlt
popf
fbld
pop
ds
jp
scas
mov
cmp
mov
in
and
pusha
xlat
cld
dec
push
lcall
inc
iret
push
test
cwtl
aas
scas
xchg
imul
dec
pop
fdivrl
xor
push
inc
cmp
mov
xor
mov
pop
inc
sarl
lods
add
cmc
ja
jle
fwait
dec
sub
ficompl
mov
stos
lahf
fadd
repz
repnz
in
sub
clc
repnz
and
cwtl
scas
arpl
shlb
fisttps
out
test
into
test
push
push
test
in
inc
stos
lcall
outsl
xchg
cmc
stos
out
lret
xor
test
lahf
push
or
fwait
stc
popa
call
cmp
je
sub
jp
mov
cmp
push
in
jns
ret
or
push
sbb
mov
xchg
scas
push
lock
cld
loop
cs
call
push
cmp
jns
repz
dec
dec
xchg
fstpt
jmp
xor
movsb
test
xor
push
jmp
or
add
mov
lock
xorl
test
repnz
fstpl
xchg
mov
ret
ljmp
mov
sarl
inc
or
sarl
nop
xchg
xor
cmp
cld
mov
jmp
add
jp
std
bound
pushf
addr16
notl
xor
enter
mov
mov
mov
hlt
add
arpl
das
cmp
jp
in
dec
insb
ja
in
ja
pushw
fcmovb
ljmp
aad
adc
jle
push
sbb
mov
mov
out
inc
and
cmp
xor
push
add
test
ret
fdivl
ds
sub
push
pop
jae
lret
cmp
mov
push
add
aad
lret
or
imul
aas
daa
lret
push
and
inc
and
mov
adc
jp
sbbb
insb
push
popa
jnp
lea
inc
int3
aaa
aas
mov
subb
cmp
aaa
sti
push
jle
push
jge
xchg
in
mov
sbb
addl
adc
xchg
adc
pop
xchg
or
loopne
cmpsl
in
xor
iret
stos
fs
sub
xor
rcl
fisubs
aas
out
cs
ret
inc
xchg
flds
add
pop
clc
xor
pop
cmp
mov
jmp
push
or
xchg
lods
mov
hlt
mov
clc
sbb
push
cld
sbb
fs
rcr
sbb
adc
roll
push
enter
adc
stc
les
mulb
imul
fcomp
fwait
adcl
push
xlat
cli
les
or
sbb
out
aad
pop
bound
jmp
adc
sbb
add
call
mov
sub
rcrl
mov
xor
or
xchg
rol
push
or
lret
adc
mov
fsubs
add
mov
mov
mov
sbb
rorb
push
mov
imul
cmovo
mov
test
mov
insl
lret
data16
test
insl
jge
xchg
lods
jnp
mov
cmp
mov
and
js
sahf
ret
pop
arpl
and
cltd
insl
movsb
negb
jle
adcl
xchg
popa
mov
or
push
ljmp
mov
xorl
sti
cmp
clc
lcall
out
mov
mov
jg
repnz
xchg
cmc
add
dec
das
iret
fwait
lahf
movsl
xchg
hlt
loope
jmp
pop
jmp
sub
in
ret
sbb
add
out
icebp
cmp
lods
pop
out
js
xbegin
dec
divl
xchg
add
xlat
mov
lds
cs
jo
sbb
xchg
sub
dec
jbe
dec
sub
dec
xlat
and
cwtl
jg
cs
fisubs
outsl
xchg
mov
mov
pop
xchg
and
xchg
xlat
out
les
int3
push
daa
cmp
fldenv
out
adc
test
sub
ja
insb
cwtl
stos
fdivl
fcmovne
and
xlat
pushl
call
or
pop
or
jg
jb
jae
mov
sub
adc
or
lea
movb
mov
ja
int3
push
mov
jb
imull
and
test
xchg
and
xchg
jecxz
test
xchg
imul
sbb
xchg
sbb
loop
jg
popa
shr
test
rorl
jle
adc
adc
or
push
les
adcl
mov
pop
decb
loope
adc
mov
mov
push
push
jbe
sbb
adcl
sbb
shll
pop
mov
fwait
mov
scas
into
leave
inc
aas
lds
xchg
cmpsb
add
imul
sbb
stos
ljmp
cmpsb
mov
add
xchg
cs
test
pop
cltd
adc
push
pusha
cmp
xor
aad
nop
cmpsl
inc
sar
mov
sub
adc
dec
repz
sub
popa
dec
das
jne
pop
sub
pop
hlt
imul
push
xchg
and
pop
dec
shrd
add
mov
stos
and
mov
lds
and
push
lcall
push
lahf
or
nop
add
push
lcall
lds
adc
xchg
push
loop
hlt
scas
xor
insl
test
cmpsb
jb
mov
adc
loop
add
ss
mov
ja
or
jmp
call
pop
out
push
push
flds
pushf
fadd
js
xor
fsubrs
jg
imul
mov
lret
ljmp
sti
out
loope
xorl
xor
pop
fnstcw
pop
stos
sbbb
cwtl
and
inc
pop
dec
cwtl
shll
fstp
push
mov
push
fwait
shlb
mov
mov
xor
adc
sub
andb
mov
imul
aaa
nop
arpl
mov
push
dec
push
out
and
mov
out
adc
fwait
mov
bound
test
dec
lock
push
mov
lds
and
or
dec
cli
push
jo
scas
adc
dec
xlat
pop
or
addr16
ret
xlat
fnstsw
sbb
push
jmpw
minps
push
cs
or
aas
sub
jge
mov
sarl
cli
aam
mov
sub
lds
mov
sbb
data16
cltd
adcl
xor
mov
incb
shr
mov
cmp
ljmp
dec
cld
pop
and
pop
dec
mov
push
sub
repnz
enter
push
popa
hlt
jb
pop
movsl
inc
js
cmpsl
inc
fwait
shll
mov
mov
add
test
dec
push
jno
call
sub
movsl
lret
into
and
stos
push
sarl
in
stc
jbe
imul
cld
jge
out
cmc
pop
push
ret
sbb
cli
and
add
in
jg
mov
int
xadd
out
and
cmp
or
test
adc
pop
fisubrl
int
les
ljmp
ret
stos
dec
scas
sbb
dec
pop
fcompl
adc
sub
adc
inc
cli
jns
setl
or
or
or
mov
pop
aad
mov
nop
add
add
aad
cmpsb
lret
rcrb
iret
lahf
rclb
out
cmp
mov
ja
mov
cltd
movsb
add
stos
mov
loopne
push
data16
fnstenv
sbb
mov
call
lret
incl
movsl
popa
pop
je
nop
je
testb
cmp
hlt
cmpsb
push
fidivl
test
pop
add
hlt
push
out
push
outsl
gs
gs
leave
pop
pop
lcall
ds
xchg
push
mov
xor
or
aaa
mov
fmull
cmpsl
into
adc
adcl
movsl
cmp
add
int3
nop
or
and
sub
fwait
dec
jmp
mov
and
shll
xchg
imul
dec
out
jo
rcll
xor
mov
arpl
loop
mov
ljmp
aas
push
mov
adc
jbe
dec
mov
imul
inc
mov
mov
xchg
es
ret
pushf
pop
jbe
fsubl
or
jge
push
out
jbe
addb
das
add
stos
mov
cld
dec
jno
xchg
jbe
cmpsb
add
dec
rorb
adcb
loopne
dec
xchg
cmp
cmpsl
pop
pop
scas
cwtl
sub
push
mov
repnz
xorl
aam
pop
add
ret
pop
fs
dec
imul
ret
negl
or
cltd
outsb
clc
outsl
mov
jb
mov
hlt
enter
jno
outsb
xlat
testb
jb
fwait
dec
arpl
out
pop
sar
cmp
jge
pop
jle
out
jmp
pop
inc
and
jns
sub
outsb
ja
lock
repz
pop
add
aaa
lahf
pop
into
ret
adc
inc
cli
enter
outsb
scas
sub
je
ss
sub
data16
pop
in
sub
shlb
pop
xchg
das
and
lods
gs
adc
mov
sbb
ror
cli
decl
inc
ret
inc
movsl
sarl
out
stos
mov
popf
outsb
mov
rcrb
sub
sbb
rcll
fisubrl
es
dec
orb
rcrb
aam
add
jne
addr16
pop
outsl
lahf
jmp
aad
mov
and
jae
cmpb
sub
jnp
fwait
cmp
push
sbb
xor
pop
adc
push
es
incl
aaa
adc
adc
pushl
test
stos
push
sub
adc
shlb
adc
or
mov
mov
fistl
mov
in
and
ss
mov
mov
or
xor
les
fnsave
mov
push
inc
scas
inc
ja
pop
sub
push
fbstp
xchg
ds
in
mov
or
fisubrs
inc
push
and
sub
pop
aad
jg
cmp
addb
jo
call
cld
or
adc
test
xchg
mov
fcompl
nop
and
jns
subl
lods
xor
cmpsl
push
dec
aad
jmp
imul
jle
pcmpgtw
sub
int
and
mov
xchg
mov
mov
dec
adc
sahf
jnp
ss
fisubrs
scas
jl
sub
das
imul
inc
inc
mov
shlb
mov
dec
lea
jge
movsl
out
shlb
cs
lcall
fcompl
xchg
sub
out
adc
loopne
dec
out
out
adc
rorb
mov
inc
xchg
pop
dec
out
jge
add
push
stc
sbb
inc
and
mov
outsl
js
sbb
inc
in
loopne
xchg
jmp
cmp
fidivrs
xchg
or
or
scas
adc
rclb
insl
repnz
jno
sub
test
addr16
cmpl
in
mov
mov
dec
xchg
cmp
enter
pop
pop
jnp
xchg
push
es
lods
mov
adc
push
inc
and
repz
in
int
push
sbb
push
imul
int3
mov
xlat
mov
and
mov
scas
rcll
sbb
leave
insl
pop
xchg
in
aas
xor
ljmp
data16
mov
or
bound
add
lret
mov
push
sbb
mov
mov
mov
sti
sub
push
fs
jl
jo
inc
push
mov
xor
dec
jae
dec
cmc
mov
sbb
xor
into
adc
mov
add
cmp
mov
inc
outsb
adc
fchs
ja
dec
sti
in
jecxz
cmp
cmp
in
sahf
sbb
int3
cli
pop
or
adc
push
lock
cmp
imul
rcll
fs
lret
xor
lret
pusha
cmp
loopne
imul
pop
or
sbb
js
xor
pop
popf
sbb
mov
fistpll
add
daa
lock
bound
mov
nop
fstpt
and
gs
jb
aaa
ds
push
nop
add
out
push
jl
das
add
cli
xor
sub
jne
and
mov
mov
mov
push
inc
out
mov
sti
pop
add
das
xchg
sub
cltd
jge
out
jmp
xchg
sub
and
push
lds
mov
notl
and
inc
fwait
pop
jp
pop
aas
mov
outsl
push
mov
and
push
ret
sbb
shr
out
sarl
sub
pop
pusha
pop
mov
xchg
pop
insb
cli
pop
mov
enter
scas
sub
dec
ja
and
push
xchg
xchg
ret
dec
mov
dec
shll
pop
jns
push
lcall
cmpsl
mov
push
fistpll
cmp
cld
aaa
or
xchg
sbb
push
and
sbb
popf
or
ljmp
inc
add
pop
mov
dec
adc
lods
movsb
sbb
or
int
flds
in
adc
bt
in
pop
sbb
and
loop
cmp
fdivs
jne
pop
sahf
xchg
cmp
int3
pusha
mov
test
imul
xor
push
pusha
cmp
nop
mov
dec
addl
cmpsl
push
sbb
pop
cmp
icebp
sbb
jbe
clc
xor
push
shlb
out
psubb
push
in
insb
dec
pop
xor
shrb
mov
cmp
mov
cld
les
ds
gs
pop
mov
bound
aad
aad
add
and
push
sarl
mov
adc
pushl
aad
in
jns
push
jg
mov
or
dec
lret
push
cmc
fdivs
xlat
test
cmpb
sbb
push
push
add
inc
or
cli
or
fiaddl
mov
pop
add
repz
mov
xchg
xchg
mov
add
xor
dec
xor
in
xor
sbb
add
cmpsb
mov
pop
push
add
add
sub
in
mov
ret
je
adcb
js
and
mov
mov
mov
into
fnsave
sbb
lods
sub
pop
daa
jb
mov
adc
push
pop
lret
sub
pop
cltd
xchg
adc
inc
sbb
pop
daa
xchg
cs
fisubrl
jge
and
and
das
dec
and
fwait
lea
jecxz
popa
xchg
sub
repnz
adc
cmpsl
popf
push
inc
add
xchg
push
push
fwait
push
shrl
lcall
movsl
and
ret
mov
xchg
setge
imulb
xchg
clc
lcall
in
push
je
or
frstor
dec
sbb
call
and
testl
insl
push
inc
push
inc
ja
or
fisttpll
test
jecxz
mov
mov
movsl
lods
dec
into
test
xchg
notb
sub
stos
dec
enter
and
pop
add
sahf
jle
xor
jge
xor
sub
or
inc
and
mov
mov
and
mov
repz
lret
in
cmp
xchg
ret
and
sbb
into
in
xor
pusha
xor
sti
pop
push
sbbb
dec
mov
cmpsl
push
clc
adc
xchg
call
mov
mov
fcomps
pop
sbb
cmp
loopne
add
aad
out
shll
inc
sub
xchg
cmpsl
inc
clc
push
pop
pushf
and
sbb
or
or
push
movsl
js
cmp
out
popf
pop
js
cltd
or
subb
test
dec
cltd
int
test
pop
and
and
sbb
xchg
xlat
xor
in
imull
lret
dec
js
pop
int3
arpl
fs
cmp
jg
and
out
mov
lock
cld
cs
call
cwtl
ret
daa
jmp
dec
sub
mov
push
dec
out
insl
lcall
mov
push
movsb
notb
dec
xor
xchg
and
sbb
sbb
outsl
dec
or
or
and
xor
lret
xor
mov
xor
dec
in
mov
jl
mov
scas
cmp
jbe
pop
push
mov
xor
mov
lock
dec
xchg
or
xor
addr16
sbbw
push
mov
push
jno
push
or
repz
rcll
pop
dec
sbb
jmp
jae
push
xorl
lahf
es
mov
dec
sub
mov
mov
cmpsb
jp
sub
sbb
xchg
cmp
dec
lods
adc
out
fs
and
lock
hlt
ret
ss
cmp
std
notl
sub
xor
cltd
or
testl
mov
ret
sbb
lret
call
sbb
add
dec
mov
sub
mov
mov
scas
mov
aad
jo
sbbb
mov
sbb
sub
std
outsb
xlat
pusha
call
xchg
loope
ja
push
or
inc
sbb
mov
out
sbb
shll
stc
jae
cmpsb
push
pop
lds
cmp
loopne
mov
sahf
jno
mov
fldcw
cvtps2pd
xor
mov
lods
push
loope
add
jns
dec
lods
fisubs
out
inc
stc
popa
inc
xchg
pop
test
es
inc
scas
or
shr
je
aaa
jle
rolb
fsubs
mov
ds
inc
pusha
mov
aad
test
mov
adc
rcl
cmp
pop
or
les
dec
enter
dec
push
xor
or
and
ds
jl
push
imul
mov
jbe
sbbb
pop
jo
aas
jnp
stc
mov
jle
adc
mov
out
cmp
pop
xchg
aas
adc
je
data16
dec
divl
or
push
push
inc
rcll
and
sub
adc
jge
mov
aas
adc
push
mov
mov
stos
adc
jmp
or
popf
loope
sbb
jno
lahf
call
xor
in
fistpl
rcrb
xchg
aam
or
popf
push
sbb
pop
push
enter
mov
mov
push
xor
sub
lods
aam
out
push
dec
or
push
stos
lds
ja
add
pop
fstpt
xor
lods
jae
push
sbb
mov
les
push
aaa
ds
les
jp,pn
fdiv
xor
sub
es
call
insl
jno
scas
repnz
insb
ret
jns
inc
dec
xchg
mov
mov
stos
mov
jae
hlt
pop
out
jl
popa
xchg
push
jl
add
cmc
xchg
push
pop
xor
rcrb
pop
push
and
fwait
push
aam
sbb
xchg
repz
xlat
jl
xor
dec
pop
lods
push
inc
or
gs
test
xchg
add
pop
push
fidivrl
cmp
and
push
add
mov
lret
nop
dec
push
jle
mov
out
inc
mov
call
push
sahf
cwtl
outsl
mov
shlb
mov
cmp
test
push
push
filds
fcomps
imulb
cmc
add
mov
mov
cltd
xchg
subb
cli
faddp
pop
mov
ja
xchg
or
pop
cmpl
iret
sbb
xchg
cmp
fdivl
shll
test
or
jno
or
int3
jmp
inc
in
je
repnz
loope
mov
pop
stc
lods
cmpsl
jne
jp
or
and
sub
rcll
clc
popa
repz
mov
in
hlt
daa
mov
push
insb
pop
jns
repnz
mov
or
push
add
mov
sbbb
and
mov
pop
add
out
test
inc
add
dec
pop
pusha
cmp
pop
outsb
addr16
sti
lock
jnp
xor
repnz
push
sub
stos
shlb
lret
cmp
inc
mov
xor
addl
xchg
daa
jecxz
xchg
mov
fwait
add
mov
xor
xchg
sti
mov
call
sub
lock
xor
dec
mov
aam
aad
int
es
push
cld
sub
jp
add
adc
in
pusha
or
aaa
movsb
outsb
testl
pop
outsl
xor
testl
out
lea
pop
sub
imul
ret
bound
sti
inc
sbb
cltd
movsb
sub
sbb
dec
int3
in
mov
xchg
xlat
add
or
popf
jp
fcoml
pop
mov
adc
jg
dec
mov
or
bound
and
gs
in
andb
inc
das
sub
out
jns
dec
adcb
mov
xchg
add
aam
or
xor
add
xchg
aad
jmp
jbe
mov
push
cwtl
daa
lock
xorb
mov
xor
in
jl
mov
aaa
lcall
iret
insb
cmp
push
inc
jno
pop
std
jg
or
mov
ss
mov
dec
aas
pop
call
dec
dec
dec
js
push
loop
ret
loope
jnp
xchg
sub
push
cmp
adc
dec
dec
rolb
cmpsl
and
jns
imul
xor
xchg
imul
inc
push
dec
xchg
repnz
pop
pop
add
and
push
xor
ucomiss
sbb
or
adc
stos
scas
fcompl
jg
add
rorl
mov
test
mov
fisttps
jecxz
mov
push
lods
mov
sbb
and
lret
adc
leave
out
mov
xchg
xchg
pop
inc
xor
arpl
sbb
add
dec
nop
roll
mov
mov
fs
es
mov
xchg
ficompl
mov
pop
je
pop
xchg
sub
inc
jb
adc
sahf
mov
daa
mov
inc
and
pop
inc
cmp
xlat
leave
test
push
mov
and
imul
jle
hlt
mov
cld
add
stos
je
xlat
pop
and
in
push
and
adc
push
mov
mov
and
jp
js
inc
in
outsl
add
jl
adc
pop
es
jno
fiadds
push
popf
les
and
ficomps
push
mov
cmp
lahf
xchg
loopne
jle
jae
lea
popa
adc
pop
or
xchg
imul
adc
jl
pop
std
sahf
imul
lds
in
dec
addr16
out
insl
jne
adc
cmc
jl
adc
push
cmp
push
pop
jmp
jge
nop
xor
mov
insl
jle
sbb
add
jnp
cmp
mov
jae
push
and
lret
jecxz
mov
loope
rorl
enter
xor
fwait
push
es
sbb
stc
jg
arpl
dec
rcll
jg
pop
popf
movsl
jb
bnd
xchg
scas
push
jl
iret
push
add
movswl
push
mov
pusha
add
jns
aam
aas
inc
cltd
in
stos
in
jl
mov
xor
xchg
add
xchg
mov
dec
cld
dec
xchg
jae
in
cmpsl
pop
mov
xor
imul
outsl
lock
mov
scas
mov
imul
adc
movsb
pop
xchg
push
mov
mov
dec
sub
test
cltd
popf
jbe
fimull
mov
and
mov
data16
mov
aas
push
add
push
insl
iret
mov
and
fsubrs
shrb
mov
pushf
add
add
adc
lahf
adc
sti
lahf
arpl
jne
mov
test
xor
lods
push
mov
jnp
sub
in
roll
mov
cmpsb
ret
je
cmp
cmc
mov
push
aas
push
mov
roll
negb
sti
adcl
add
out
mov
ret
shrb
jns
add
or
mov
bound
cld
sub
popf
mov
push
test
cmpb
out
push
inc
cmp
lods
adc
adc
mov
fs
std
dec
xchg
hlt
fmul
aaa
fnstcw
xlat
inc
pop
inc
jmp
jge
icebp
mov
lahf
fwait
das
pop
push
mov
jne
or
add
adc
hlt
insl
and
xorb
mov
adcl
sub
sahf
stos
dec
and
loope
clc
movsb
cmpsl
adc
sbb
into
jmp
jno
stc
mov
mov
adc
jecxz
push
popa
add
pop
icebp
sub
sbb
add
ljmp
movsl
xor
xchg
in
mov
jle
sbb
flds
pop
test
xchg
jg
in
sub
xchg
insb
int
shl
lahf
push
add
xchg
fmul
mov
mov
enter
mov
lods
ret
fmull
out
xor
mov
jne
dec
mov
je
dec
cltd
sbb
dec
adcl
dec
loope
dec
loopne
fs
ret
int
xor
ljmp
push
int3
mov
xor
push
cmp
stc
mov
std
mov
inc
cmc
xchg
rcrb
in
fmull
cltd
lock
adc
pop
leave
roll
jne
test
leave
mov
push
rol
les
ficompl
dec
xor
or
mov
xlat
add
fadd
sbb
roll
mov
aad
jae
popf
xchg
adc
ds
lods
jne
dec
loop
fisttpl
imul
das
xchg
jo
xlat
adc
rolb
lea
in
aad
xor
adc
shlb
push
inc
push
cmp
push
int
rorl
sbb
xlat
das
enter
xchg
mov
push
xchg
jno
mov
dec
into
push
rorb
xor
lcall
stc
out
in
sti
js
pop
fistpl
inc
js
inc
inc
daa
sub
ja
test
clc
loop
sub
adc
jmp
push
stc
repz
push
lcall
dec
mov
mov
jp
push
imul
ljmp
cmc
stos
inc
pop
xchg
repz
jmp
loope
aam
mov
into
xchg
popf
ret
xchg
xchg
iret
outsb
loop
inc
test
js
lahf
push
sub
aaa
in
gs
pop
mov
lds
xor
fmull
mov
lock
push
repnz
xchg
insb
test
mov
ja
or
or
test
pop
lods
ljmp
js
cltd
jo
hlt
ss
xchg
jg
mov
inc
or
jae
icebp
sahf
or
out
mov
stos
filds
push
mov
cmp
cmp
test
inc
lret
xor
xchg
mov
bound
add
push
aam
push
fs
mov
xlat
sbb
push
and
lods
daa
pushf
xchg
mov
xorl
das
insb
add
mov
or
sub
mov
xor
xchg
fsubrs
jnp
sbb
fistpl
sahf
dec
adc
mov
mov
inc
mov
aas
lods
movq
fwait
ss
sbb
scas
mov
ja
mov
test
test
gs
adc
sbb
ret
dec
pop
xchg
inc
loop
lcall
call
call
or
std
test
pop
push
out
adc
xchg
mov
and
push
pop
loopne
pop
scas
mov
dec
test
cwtl
jl
mov
repz
dec
pop
mov
rorb
xor
rcll
xchg
outsb
pop
sysexit
cmp
cli
and
inc
insl
add
mov
and
lods
pop
test
dec
pop
xchg
fdivrs
cmp
mov
nop
insb
mov
es
jg
cmp
pop
pop
pop
scas
xor
in
inc
cld
mov
mov
adc
aam
lea
iret
lods
gs
add
adc
out
fnstcw
fildl
pop
and
clc
pop
mov
shlb
xchg
pop
shr
ljmp
xor
lea
mov
jmp
mov
mov
xor
cmp
jp
push
out
stos
push
push
sar
or
dec
sbbb
enter
mov
pop
or
mov
sub
push
lock
sbb
sub
pop
je
ret
pop
mov
lret
or
xor
std
clc
ljmp
and
and
xchg
imul
rol
dec
addr16
loope
pop
or
xchg
push
mov
cs
xor
loope
lret
loopne
sti
adc
sub
push
mov
imul
dec
mov
outsb
xchg
cmp
divl
ljmp
lods
movb
pop
inc
popf
push
adc
fidivrl
shlb
mov
xorb
cli
jmp
sarl
sti
aas
imul
stos
lret
je
sahf
or
lods
push
lahf
sbb
mov
clc
jo
lods
fisubl
insb
stos
mov
add
mov
int
mov
shlb
mov
or
mov
xor
outsb
xor
sub
xchg
nop
xor
xchg
push
adc
int3
inc
or
jne
inc
dec
loop
or
fwait
and
jp
pop
mov
pop
jne
movsb
testl
sub
outsl
addb
add
fdiv
pop
mov
dec
scas
mov
nop
lods
shr
insb
lret
popf
out
adc
rorl
mov
and
mov
adc
out
push
jae
jg
shll
push
popa
lcall
push
call
pop
jo
and
dec
jle
dec
mov
cmpsl
cli
push
ret
out
add
mov
dec
cmp
mov
inc
and
lahf
sti
jl
shlb
call
jo
dec
mov
lea
call
loope
mov
xorl
add
push
pop
sbb
jb
sbb
mov
inc
aad
cmpsl
push
ret
pushf
jno
lret
jg
xchg
ss
xchg
test
or
pushf
ljmp
push
test
mov
xor
and
out
sbb
in
mov
ret
jbe
mov
cld
mov
inc
inc
mov
ret
sti
push
shl
sti
pop
mov
adc
xchg
repz
cld
cwtl
mov
add
lock
xchg
out
addr16
xor
fisttpll
dec
lods
adc
cmp
inc
mov
std
fstpl
rol
adc
nop
mov
and
imul
xchg
cmp
andl
roll
xor
pop
mov
pushf
movl
shll
push
mov
mov
icebp
insl
sbb
rolb
xor
adc
xor
arpl
or
aas
xor
add
outsb
inc
les
je
iret
pop
into
sbb
scas
dec
shll
cmp
or
mov
sub
mov
lret
adc
pop
leave
lock
jl
jbe
xchg
fsqrt
jns
out
cmpsl
je
out
mov
out
xor
cmpsl
sbb
push
mov
je
je
mov
aad
enter
pop
dec
inc
mov
push
divl
addr16
test
cmpsl
xor
aad
les
pushf
mov
mov
int3
dec
loopne
sahf
outsl
aam
sahf
push
jnp
scas
jle
pop
movsb
clc
jns
add
xchg
rcrl
addr16
push
ficomps
pop
cmpsl
add
imul
call
adc
push
stos
jmp
rcrl
push
cmpsl
ljmp
ds
xchg
push
cmpsl
mov
mov
inc
ja
mov
mov
or
stos
cld
and
das
enter
jge
or
rorb
stos
inc
js
and
jb
iret
sbb
mov
sbb
mov
xchg
scas
fistpll
cmp
outsl
pop
mov
in
jg
stc
jae
dec
push
mov
insb
out
or
add
dec
add
cmpsb
test
loop
outsl
inc
sbb
rcl
jge
sbb
mov
mov
stc
mov
push
repnz
icebp
fildll
ss
jecxz
aam
cmp
bound
pop
xchg
inc
xchg
mov
xchg
sahf
push
push
inc
ljmp
ljmp
sahf
mov
arpl
mov
jns
rcrl
dec
lahf
addl
out
fildl
cltd
lds
inc
cmpsl
dec
pop
pop
mov
cmpsb
mov
pop
out
mov
in
pop
clc
push
jns
inc
jmp
push
or
lock
mov
in
test
in
nop
iret
jbe
push
movsb
and
shl
inc
loop
sub
lahf
xchg
push
inc
cmp
in
push
xchg
loopne
in
mov
adc
ret
jnp
daa
sbb
xor
gs
add
dec
lods
add
std
add
mov
add
push
mov
fcomp
jp
loopne
cmp
dec
and
cmpsl
pushf
sub
fs
jno
jb
mov
ret
mov
bound
cmp
fbstp
leave
add
mov
cmc
movsl
and
jae
mov
sbb
in
lock
mov
aam
xchg
out
stos
mov
add
xchg
sub
sbbb
les
jo
out
sub
insb
push
leave
dec
aad
lds
adc
stos
adc
sub
fnstenv
sbb
jg
mov
xor
repnz
pop
out
pushf
shlb
fstpt
jmp
call
xchg
pop
les
xor
enter
test
out
add
and
pop
repz
cmp
lock
push
xchg
sub
incl
push
xchg
cltd
rol
mov
sub
int
cmp
xchg
insl
paddusw
pop
ds
stos
dec
inc
xor
test
xorb
movsb
inc
cs
and
pop
pushf
pop
lea
sub
popf
pop
add
fstpt
mov
arpl
in
dec
mov
jl
sub
pop
leave
sbb
hlt
bswap
mov
pop
fwait
inc
ds
out
rcll
test
repnz
cmpsb
or
insb
leave
jmp
jnp
cmpsl
xchg
sub
sarb
pop
lret
gs
cmp
pop
sub
jne
pop
push
scas
testb
lret
imul
sub
addr16
mov
shlb
outsb
lock
inc
call
aaa
sbb
xorb
cs
lods
sbb
add
addr16
add
mov
adc
inc
popf
cmp
test
je
out
out
inc
pop
add
test
dec
cmp
pop
push
adc
outsb
inc
loope
sub
dec
sti
inc
cmp
dec
sbb
fs
scas
fld
inc
mov
fucomi
pop
addb
and
pop
mov
into
adc
jp
mov
xlat
inc
push
sbb
xor
inc
data16
xor
add
mov
cmc
xchg
enter
pushf
adc
mov
xlat
or
mov
mov
clc
mov
push
cmp
dec
lea
xchg
jge
lcall
dec
mov
hlt
cmpsl
fs
mov
imul
push
jle
cmc
inc
int
outsb
lods
into
mov
inc
sbb
inc
mov
mov
test
clc
adc
movsb
in
test
push
push
dec
push
into
mov
dec
orb
add
rclb
jnp
mov
pop
icebp
pop
sub
cmp
inc
cmp
sbb
dec
jmp
jge
daa
sub
and
nop
mov
loop
mov
jecxz
lea
aaa
out
icebp
sbb
fwait
lods
test
bound
aas
lds
imul
scas
mov
dec
adc
and
in
mov
pushf
test
int
in
xor
in
sbb
test
lret
imul
pop
rcr
mov
test
lods
xchg
adc
and
pop
shrl
inc
and
sarb
mov
cmc
loope
mov
dec
sbb
jae
cld
push
sbb
lret
shrb
fcmovnb
xchg
sarl
test
sbb
sbbb
xor
insb
fisubrs
aaa
fucomi
clc
loop
mov
mov
mov
dec
dec
out
sahf
or
and
push
insl
clc
mov
adc
nop
push
fisubrl
pop
outsl
cmpsl
out
lahf
arpl
fstl
mov
pop
mov
pop
ja
and
sbb
cmpsl
cs
bound
ds
lret
sbb
inc
ret
js
stc
push
test
sub
cmpb
xlat
push
pop
xor
cld
pop
roll
out
jle
test
pop
andl
jecxz
das
xor
push
cmp
lds
sub
ljmp
add
sbb
enter
rorl
dec
setne
das
in
inc
out
fistpll
inc
mov
dec
cmp
or
scas
push
mov
lods
and
and
incl
cld
dec
repnz
shlb
arpl
sbb
mov
inc
pusha
imul
adc
and
xor
push
jecxz
fcom
pop
dec
insb
mov
push
dec
pop
mov
dec
pop
ret
std
xchg
cltd
call
adc
mov
adc
mov
hlt
repnz
xchg
fisubs
repnz
xchg
ljmp
scas
clc
dec
xchg
mov
ds
rcrb
insl
xchg
out
xor
or
cwtl
cmpsb
mov
ret
sbb
cmp
mov
dec
push
stc
mov
lahf
enter
lret
movsl
jb
push
cmp
jmp
or
insl
mov
sub
stos
or
ds
ljmp
mov
fwait
popa
or
ret
lea
ja
rolb
mov
sbb
les
push
mov
xchg
jae
pushf
xor
in
mov
popa
mov
test
in
jb
sbb
xchg
dec
divl
push
out
loopne
cli
ffreep
arpl
nop
insb
mov
int
xchg
dec
ja
xlat
ss
add
inc
loop
dec
test
ja
shrb
mov
cmp
test
decl
repnz
roll
jge
xorb
push
sbb
scas
add
mov
xchg
ds
lods
xchg
outsb
stos
iret
ljmp
repnz
ljmp
aaa
popa
xchg
lods
fsubrs
mov
shl
xorb
add
cli
rorb
movsb
addr16
pop
pop
push
inc
stos
addb
out
scas
jb
jp,pt
cmpsb
repz
pop
mov
mov
or
loope
dec
fdivr
push
loopne
xor
cld
xchg
xchg
hlt
xchg
cmpsb
mov
add
fstp
inc
and
dec
stc
fwait
insb
fwait
not
cltd
fidivrs
sub
ljmp
aaa
add
sahf
lea
xor
jnp
clc
xchg
aad
lea
jp
aad
xchg
out
push
scas
js
in
test
mov
dec
es
repnz
xchg
sub
pop
scas
test
faddp
dec
sub
xor
and
mov
mov
imul
sub
mov
fstpl
mov
xor
mov
sbb
stos
lods
ss
jbe
jle
push
icebp
out
lret
add
aas
sub
jmp
mov
repz
jb
jle
cmp
push
inc
cmp
jl
ficompl
add
mov
insl
int
mov
fcom
sbb
push
pop
and
mov
addl
rcr
not
cltd
lret
ret
loop
repz
inc
mov
dec
push
push
je
adc
adc
movsl
jmp
out
clc
lcall
inc
not
fsubs
add
push
xlat
lret
add
sarb
xor
out
lods
lret
sahf
sub
cmpsb
xor
js
insl
or
outsb
xchg
cli
lcall
push
adc
ror
mov
inc
and
cli
jmp
js
mov
shll
clc
sub
mov
lcall
add
sbb
mov
daa
mov
sub
cltd
clc
fisubrl
js
cmpsl
jecxz
ret
mov
inc
data16
push
cld
gs
mov
stos
lcall
mov
sub
jae
mov
dec
adc
mov
and
cmp
sub
aad
xchg
mov
fxch
sub
jno
shr
pop
ljmp
jne
shl
jge
loope
adc
mov
adc
into
dec
aaa
xor
xor
mov
inc
repz
or
fimull
inc
sahf
das
pop
and
pop
imul
mov
push
sbb
jno
insl
fcomp
jg
or
sti
or
outsl
adc
jae
scas
jb
aas
cs
xor
mov
mov
pop
pop
and
mov
movsb
sti
push
data16
ds
sbb
pop
xchg
pop
repnz
adc
inc
je
mov
xor
int3
fidivl
and
cli
stos
dec
or
or
sub
pcmpgtw
mov
xor
push
dec
jns
push
sahf
jl
repz
cltd
or
dec
and
adc
jge
test
repnz
pop
push
cmp
mov
divb
and
int3
push
fcomps
lods
arpl
scas
adcb
dec
in
pop
xchg
push
adc
pop
push
fcomip
inc
call
dec
mov
insl
ljmp
mov
popf
adc
fbld
add
sub
movsl
mov
test
sub
shll
ficoml
cmpsl
idivl
loope
pushf
cmc
inc
mov
dec
mov
jmp
lahf
dec
cwtl
ss
lock
orb
mov
mov
testb
jae
in
aad
pop
lock
test
xchg
mov
lds
ja
mov
jbe
ja
cmpsl
push
mov
imul
bound
mov
cmp
adc
shl
adc
and
cmp
pop
xor
push
pop
xchg
test
xor
sub
mov
pmaxsw
cs
fdivs
shlb
dec
inc
test
aaa
inc
test
ret
xlat
sub
iret
adc
adc
pop
imul
mov
imul
pop
sub
sbb
rsm
scas
jbe
imul
xchg
lcall
je
rcl
pop
push
lods
jp
cltd
aas
fs
jp
test
adcb
clc
out
into
push
in
aaa
lods
pop
or
mov
mov
xchg
inc
and
inc
out
aam
and
stos
jo
jl
push
ja
lods
or
arpl
adc
xchg
inc
in
pop
ja
mov
leave
pusha
aas
or
mov
pop
pop
pop
xchg
mov
repnz
sbb
lock
out
jmp
in
dec
lods
stos
cmp
mov
arpl
cmp
stos
push
dec
inc
mov
mov
jo
int
data16
xor
cs
mov
std
lret
sbb
mov
repnz
pop
dec
xchg
mov
popf
je
cwtl
fidivl
pop
jl
pop
adcl
cmc
aam
aas
xchg
cmpsb
je
std
in
dec
fistl
mov
pusha
inc
adc
mov
fstpl
jbe
add
in
cmp
dec
xor
push
or
fninit
ret
pop
loope
push
lret
pop
aaa
stc
xchg
out
lea
sbb
sbb
aam
jne
push
jb
lahf
sub
movsb
and
jg
add
jb
sub
xchg
push
aam
outsb
scas
aas
cmp
imulb
mov
loopne
xchg
pop
notb
add
sbb
or
mov
dec
sahf
pop
mov
fmuls
and
mov
fistps
je
dec
and
repz
jnp
and
xchg
repz
jmp
out
jne
lret
loopne
jmp
push
sbb
ret
popl
dec
mov
dec
cs
sub
ds
enter
and
mov
pop
insl
test
pop
lea
sub
or
push
jb
xchg
mov
mov
pushf
repz
std
hlt
call
shlb
stc
jbe
mov
and
sahf
push
lds
pop
jns
mov
cmpsb
sbb
mov
mov
clc
dec
js
and
adc
jge
ficoml
jg
mov
scas
es
fs
push
xor
std
sub
arpl
pop
fcomip
xchg
push
fdiv
mov
pop
aaa
pop
push
fimuls
sti
incl
pop
mov
in
mov
insb
iret
aad
xlat
or
mov
rcrb
mov
xor
mov
dec
das
push
call
loopne
bnd
hlt
outsl
es
mov
cmpsb
cs
jmp
push
dec
cmp
or
test
hlt
cmp
fstps
in
pop
decb
stos
pusha
add
mov
shlb
and
cmpsl
xchg
dec
fisubl
push
sarb
imul
xlat
cmp
jp
lahf
sub
push
jge
fists
add
xor
fwait
or
testb
or
mov
insl
orb
and
mov
insl
xchg
jns
fisubs
cmp
xor
aas
mov
cs
jb
inc
cmp
push
in
sub
rorb
mov
cmp
mov
and
adc
inc
mov
inc
jmp
and
out
and
sahf
mov
int3
js
sub
mov
mov
mov
xchg
push
pop
xor
pushf
mov
nop
dec
mov
movsl
sti
pop
mov
push
ss
ds
into
fsubrl
std
fs
sbb
daa
or
mov
sub
inc
ficoms
inc
mov
test
lcall
or
sub
test
sbb
pop
xlat
inc
inc
fbstp
cld
jno
push
and
sbb
lods
adc
cmp
sub
dec
add
aaa
flds
jbe
xchg
adc
push
cmp
aad
rcrl
das
sub
int
insb
jg
inc
stos
sbb
fistl
mov
mov
push
push
mov
icebp
fs
adc
aam
jb
cli
fs
add
sahf
into
test
loop
mov
adc
xor
jo
icebp
jns
pop
mov
push
aas
sbb
dec
mov
lcall
mov
xor
in
ds
mov
into
jg
sahf
sbb
push
sahf
dec
mov
sbb
and
jns
mov
lods
std
shll
aam
mov
inc
and
push
push
xchg
jmp
aaa
enter
cld
gs
sysenter
adc
out
adcb
pusha
xchg
ret
outsl
fmuls
inc
out
add
movsb
test
sub
xor
xchg
test
insb
stos
jp
push
xor
mul
mov
dec
bnd
add
inc
out
test
je
xchg
loopne
test
outsl
jmp
pop
fildl
mov
dec
mov
das
mov
ja
push
add
nop
lea
shlb
fcmove
mov
lods
adc
sti
test
push
cmp
jecxz
jmp
lds
xchg
mov
pop
outsb
cli
mov
inc
dec
push
sub
adc
in
notl
pop
enter
bound
and
and
popf
test
or
and
cmc
adc
xchg
loop
cli
and
notl
hlt
adc
andb
jle
scas
fsubl
add
sub
out
mov
shlb
cmp
add
jl
ficompl
jl
push
and
cmp
testb
in
icebp
clc
push
push
lds
xchg
cmp
mov
xchg
or
out
adcl
dec
lods
movsl
cmp
lods
and
rorl
inc
lahf
adc
addr16
push
push
jo
dec
stos
push
sub
push
das
or
addr16
ds
jmp
jl
xchg
jmp
adc
push
mov
adc
popf
xchg
gs
ds
mov
aaa
jmp
sub
mov
movsb
xchg
and
lock
dec
xlat
ljmp
jle
stc
pop
cmpsl
or
push
imul
add
repnz
and
and
cmc
add
xchg
mov
cmpsb
scas
movsl
sbb
push
add
into
or
sarb
fcoml
jne
lcall
mov
ss
outsb
test
inc
out
repnz
cmpsb
js
mov
inc
aam
adc
jg
inc
push
rolb
xor
push
je
call
in
mov
ljmp
mov
je
arpl
mov
es
aaa
fs
pop
in
icebp
les
mov
inc
pop
mov
xchg
jno
cmpsl
aaa
pushf
xlat
and
data16
xchg
xchg
mov
mov
pop
push
sub
jg
mov
jge
cmp
movsl
out
ja
lret
fwait
jl
movb
popf
mov
pop
push
sub
xchg
mov
roll
add
mov
xchg
mov
xor
cmp
jp
loopne
pushf
jne
xchg
sub
fstpt
cmp
dec
bound
sbb
test
in
out
mov
mov
pushl
out
xchg
sub
xchg
ss
push
pusha
mov
pop
pop
push
jg
push
popl
loope
jae
sub
js
mov
fwait
pop
push
mov
js
lret
mov
cmp
push
pushl
dec
mov
js
adc
cli
push
xchg
mov
dec
fcmovnbe
or
loope
cwtl
cli
cmovbe
leave
hlt
pop
insl
in
jmp
test
pop
add
push
je
mov
arpl
inc
icebp
cmp
mov
lea
inc
xchg
inc
or
ror
fstp
aad
mov
je
mov
inc
or
test
gs
cmpl
mov
xchg
lahf
mov
mov
jmp
sub
dec
jo
imul
or
in
cld
and
mov
popf
daa
in
and
add
lods
sbb
pop
inc
ret
cltd
or
in
add
dec
jno
roll
in
std
inc
mov
aam
mov
mov
mov
leave
sbb
pop
aas
dec
push
xor
push
jecxz
push
je
mov
or
icebp
mov
mov
add
mov
xchg
push
jns
out
int
test
enter
std
insl
fdiv
jae
loop
mov
das
addb
sti
adc
xchg
insb
lahf
cmp
and
pop
int
push
scas
outsl
and
xor
pushf
push
subl
jecxz
scas
pop
mov
sbb
and
push
pop
iret
call
xor
fsubr
xchg
insl
int3
dec
fimuls
push
jb
in
insl
jno
add
mov
xchg
loopne
dec
mov
adc
mov
cld
pop
jno
out
cmp
xchg
jge
int
mov
jae
cmc
stos
lret
nop
mov
js
and
pop
cmc
adc
sbb
pop
out
push
lods
jo
dec
ret
aaa
jmp
mov
mov
sti
jo
mov
cmp
scas
dec
daa
cmp
mov
out
pop
mov
mov
mov
xor
mov
mov
xchg
icebp
mov
or
je
mov
lds
enterw
xor
lods
jl
push
cmpsl
leave
faddl
or
ds
iret
xchg
jp
orl
fadds
pop
jg
or
lret
mov
dec
orb
mov
pop
clc
ret
mov
jmp
pop
pop
clc
push
out
pop
movsb
sar
inc
rol
jne
mov
scas
sarb
bnd
test
dec
cmpsl
mov
test
shlb
jbe
sub
outsl
push
gs
dec
subl
stos
or
push
cmpsl
and
or
ds
inc
je
pop
aam
xchg
add
jge
ret
and
orb
adc
inc
jecxz
sti
xor
loopne
aaa
adc
cmp
add
cwtl
sub
jle
stc
in
mov
clc
aad
mov
sbb
adc
jno
ds
inc
testl
sub
mov
add
rcl
and
jl
adc
test
push
cmp
fadds
adc
pop
clc
dec
adcl
push
add
or
sbb
dec
lods
sub
mov
dec
bound
dec
movsl
mov
mov
push
shrb
push
lock
cmp
sbb
or
pop
pop
repz
rcrb
push
jns
movsl
jns
cmp
cltd
ja
gs
cmc
jno
jge
adc
cmp
stos
nop
pop
dec
mov
sub
in
imul
mov
ficoml
mov
adc
xor
adc
sub
jae
pusha
mov
pusha
jl
aad
sahf
mov
xchg
sbb
nop
xor
mov
stc
in
xchg
sarb
mov
push
add
adc
cmpb
cmp
insl
push
in
repnz
lds
popa
outsb
movsb
lret
rcrb
pushf
mov
pop
repnz
pop
cmc
nop
mov
stos
add
cmp
and
cwtl
sub
jecxz
mov
jle
sub
adc
xor
inc
ret
stos
sub
cmpsl
mov
xor
sub
xchg
xor
pop
ds
cmp
push
sbb
or
and
pop
dec
std
adc
sahf
cli
cmp
mov
and
pop
jae
outsl
add
lret
outsl
pop
stos
sbb
jbe
cmp
cli
xchg
roll
dec
enter
jl
jg
pop
add
xchg
xchg
add
lock
fstp
sbb
xchg
or
mov
insl
test
test
pop
sbb
idivb
mov
xorl
sub
adcl
mov
jmp
push
mov
dec
sahf
adc
xchg
hlt
xchg
loop
and
inc
xchg
ss
repz
mov
fcompl
jo
idivb
pop
lret
dec
idivl
inc
xlat
and
loop
mov
ss
les
mov
or
dec
jge
jo
and
xorl
mov
lods
pop
and
jnp
jg
int3
xor
push
lods
in
hlt
stc
mov
js
or
xor
mov
jl
mov
popf
xor
lods
or
stos
lcall
jbe
cmp
or
lcall
mov
dec
or
jmp
sbbb
jns
cli
pop
loop
icebp
xchg
ficoms
sub
xorb
lret
cmpsb
fistpll
test
mov
jno
push
imul
adcl
pop
lods
adc
fmuls
ja
push
aam
out
lods
add
je
and
inc
loope
syscall
mov
jns
mov
stos
cmp
js
inc
inc
pop
add
xor
addr16
cmpsl
divl
cmp
ficompl
add
sbb
jnp
cli
ret
fucomp
bnd
mov
pop
inc
mov
out
cwtl
add
outsb
sti
shlb
ret
sub
mov
stos
pushf
nop
pop
pop
data16
orl
pop
cli
cltd
mov
imul
hlt
jo
xor
dec
dec
test
adc
push
stc
pop
aam
jge
jno
add
lods
inc
adc
leave
mov
cmpsb
mov
mov
aad
popl
mov
xor
aam
and
adc
jns
xor
scas
nop
jmp
pop
loop
nop
cmp
sarl
jl
insl
outsb
mov
ret
cmp
int3
pop
mov
lcall
cmp
push
lock
shlb
aaa
fnsave
jle
out
adcb
lock
cli
loope
and
inc
xor
mov
loop
push
xor
cmc
dec
sbb
dec
mov
ljmp
xor
rolb
hlt
scas
fwait
imul
movsl
fmull
add
xor
cwtl
and
jmp
xor
dec
push
stos
xchg
mov
sbb
sar
cmp
sbb
fdivrl
cmp
jne
fcomps
or
ficoml
stc
jg
sbbw
mov
cmp
int3
inc
scas
push
mov
xchg
inc
mov
leave
cmc
arpl
mov
ja
es
jne
scas
xchg
iret
pop
adc
popf
pop
mov
mov
mov
push
ljmp
je
jns
add
insb
mov
jp
cld
dec
mov
fsts
add
jp
jg
mov
pop
cli
pop
sbb
fisubs
lret
test
push
out
mov
and
arpl
in
adc
inc
gs
lahf
daa
push
xor
pop
jns
inc
shrb
cmc
inc
shrl
sahf
sub
lahf
push
pop
or
dec
cwtl
xchg
fiaddl
fldcw
or
loopne
pop
add
push
push
roll
addr16
inc
pop
cltd
and
cmp
je
dec
movsl
push
out
mov
add
cli
sarl
jbe
dec
add
imul
mov
xor
stos
xor
inc
sbb
orl
xor
icebp
adc
lods
out
jno
push
ret
int
adc
xchg
push
test
xlat
les
in
add
mov
jge
jp
jbe
sub
out
dec
adc
dec
out
mov
push
inc
pop
faddl
bound
jl
sbb
setle
xchg
pop
push
dec
leave
mov
daa
lods
pop
mov
or
push
cmpsb
clc
mov
pop
pop
test
je
push
aad
and
xor
adc
out
iret
lock
xchg
xchg
mov
inc
in
push
mov
shl
xchg
popf
sub
cmp
inc
cmp
and
push
je
jno
sub
inc
fsubrl
stos
leave
cli
push
xbegin
scas
mov
mov
push
mov
jecxz
mov
and
dec
pop
sbb
mov
repz
fstpt
xchg
cmp
mov
jg
mov
push
shlb
sub
ss
insl
mov
fstl
sbb
int3
cmpb
jnp
daa
adc
push
sub
lods
mov
xor
cs
loop
xchg
dec
mov
mov
xchg
mov
cmp
movsb
cmp
pop
int
shll
mov
inc
jno
inc
stos
push
sbb
or
je
arpl
fistps
stos
mov
movsl
xchg
xor
subb
inc
gs
pusha
lods
shrb
outsl
arpl
mov
fistl
pop
mov
xchg
xor
dec
clc
inc
test
push
pop
outsl
or
adc
xchg
inc
pop
sbb
mov
test
pop
and
dec
jno
and
jmp
dec
and
mov
jl
in
call
or
jae
outsl
fimull
add
mov
push
pop
pop
stc
add
xchg
inc
adc
shlb
pop
lea
push
mov
inc
inc
push
pop
insb
nop
fcomip
mov
adc
push
xchg
push
test
mov
and
adc
xlat
ficoms
jle
mov
pop
in
stos
mov
pop
push
fisubrl
mov
or
dec
movzwl
pop
inc
mov
mov
pop
jbe
xor
mov
ret
out
cmp
test
cli
faddl
daa
movsb
mov
addr16
xchg
aas
push
cltd
push
into
sahf
loopne
mov
push
ret
test
jp
stc
mov
leave
add
fwait
xchg
inc
sub
jmp
out
mov
cmpsb
sub
dec
mov
dec
pop
pushf
and
push
xor
mov
push
pop
shll
mov
fstpt
test
mov
lds
jbe
mov
mov
test
sbb
stos
dec
je
adc
out
sbb
mov
stos
mov
jle
push
add
idiv
push
cmovo
fcmovne
mov
insb
xchg
mov
bound
fcmovu
fists
lret
gs
sbb
sbb
pop
sbb
dec
lds
cmp
mov
sub
push
adc
cmp
xor
dec
rcrw
sbb
adc
in
pushf
out
stc
cld
lds
mov
pop
ret
cmc
and
testl
mov
inc
idiv
add
lock
cmp
dec
fucomi
mov
lea
shlb
mov
xchg
push
hlt
dec
and
sub
fld1
fdivl
popf
jae
fists
mov
or
cmp
sub
add
xchg
imulb
addr16
dec
cmp
cli
fldt
lods
dec
mov
jl
inc
mov
jmp
mov
inc
aam
pop
frstor
ret
in
int
jnp
and
jmp
add
push
push
xor
jne
inc
cwtl
cs
adc
repnz
mov
pop
jae
movsl
and
popa
sahf
clc
fs
mov
mov
int3
lods
mov
push
cmp
cmp
push
inc
in
pop
xor
jmp
fcoml
in
mov
and
test
xor
mov
daa
push
cmp
insl
adc
outsb
pop
xchg
mov
mov
cld
xchg
push
sbb
movsl
insb
add
call
cmp
cmp
lret
je
push
sahf
mov
div
fistpl
es
leave
subl
outsl
inc
cmp
sbb
in
rcll
xchg
or
xchg
xchg
das
cmp
insl
pop
inc
lret
mov
mov
fwait
add
call
nop
xchg
dec
jg
in
cwtl
xor
mov
sahf
lcall
xor
addr16
das
lods
into
jl
enter
es
inc
cmp
push
inc
sbb
in
inc
push
mov
sbb
jns
js
leave
dec
rcll
push
out
xor
jecxz
xchg
xchg
es
lock
adc
shrl
sbb
inc
sub
pop
mov
lea
adc
loop
sbb
push
mov
jae
mov
sub
jge
lods
cmp
jbe
push
mov
imul
add
stos
xor
xor
fisttpll
inc
mov
mov
scas
das
icebp
call
cld
dec
out
test
lea
cli
cmpsl
inc
test
insl
ja
movsb
mov
adc
xchg
dec
insb
mov
sub
scas
pop
push
cmc
dec
aaa
jg
add
test
jno
hlt
mov
ljmp
or
sbb
jnp
fs
mov
cmc
xorb
mov
ret
inc
call
add
or
sub
ljmp
fst
add
test
mov
mov
scas
add
movsl
in
aaa
stc
sbbl
in
add
sub
pop
sbb
jno
xchg
or
pop
das
pop
outsl
push
add
out
daa
fisttpl
inc
mov
push
mov
imul
je
test
dec
lock
push
xor
xor
add
cmp
push
sub
xor
icebp
pop
adc
ds
jbe
or
add
jns
iret
push
jnp
push
ss
mov
out
aas
outsb
es
or
dec
push
ret
adc
pop
add
mov
lds
sbb
push
cwtl
stos
lahf
xlat
pop
daa
inc
xorl
shlb
and
movb
lds
sarl
ljmp
jp
adc
add
dec
in
adc
iret
jno
mov
lods
push
fwait
xor
lock
sbb
push
jb
out
mov
mov
xchg
mov
sub
addb
mov
mov
dec
add
scas
call
xchg
fdivrp
cmc
fwait
imul
push
xchg
pop
inc
sarl
rclb
sub
cmpsb
jbe
stc
popf
orb
stos
pop
ds
dec
xchg
dec
cmp
push
popa
and
or
pop
inc
js
sbb
push
or
test
pop
push
loop
pop
add
push
test
cltd
test
mov
aas
cltd
inc
fldl
push
fwait
insb
rclb
movsl
jp
inc
or
jl
loop
jbe
repz
adc
loope
jle
xchg
lea
mov
flds
sbb
add
xchg
mov
andb
mov
ja
cmp
movsl
mov
fdivs
in
sbb
rcll
scas
jbe
loope
loopne
or
test
pop
subl
scas
sbb
and
out
and
push
sarb
dec
pop
jg
stc
orl
cmp
lods
xchg
inc
repnz
test
and
imul
aad
lods
jg
imul
rcrl
aad
push
fdivrs
jmp
dec
aad
inc
dec
cwtl
lods
dec
repz
mov
es
sub
push
mov
bound
jmp
aas
clc
push
call
sarb
adc
fnstsw
dec
jmp
jecxz
push
jecxz
in
xchg
ret
xor
xlat
daa
xor
scas
scas
add
sbb
adc
mov
pop
ja
cmp
les
pop
test
icebp
cmp
push
aas
xchg
lds
aam
negb
les
insb
rcr
ja
dec
addl
and
gs
xchg
ljmp
popa
xchg
shlb
loope
push
aam
jp
rorl
push
xlat
insl
inc
sbb
mov
jp
cmp
jbe
lahf
out
add
clc
les
jbe
add
cmp
mov
loopne
aad
pop
test
pop
insl
jge
es
sub
push
js
push
mov
icebp
inc
push
in
jge
or
daa
rcl
push
stos
xchg
xor
rcrb
lds
stc
fstl
push
jbe
or
outsb
movsl
push
mov
out
adc
cmp
lret
cmp
xchg
push
push
out
adc
imul
xchg
sbb
xchg
mov
lods
xchg
mov
icebp
or
ja
mov
jbe
cs
and
fstl
mov
out
mov
jg
nop
jb
xchg
sbb
adc
fs
sub
sub
dec
mov
jmp
cmp
subb
push
das
pop
pusha
xchg
sub
int
mov
cmp
and
cmp
add
push
add
add
aad
ljmp
xor
outsb
dec
xchg
inc
jbe
push
add
mov
dec
fisubrs
outsl
or
pusha
test
arpl
movsl
shll
xchg
into
add
mov
jo
jbe,pn
insl
in
pop
cmpsb
or
mov
montmul
cmpsb
add
add
fnstsw
notb
or
out
push
bound
insl
es
sbb
mov
xor
xchg
xchg
mov
pusha
pop
cmpsb
or
or
dec
and
cmp
in
icebp
and
jno
arpl
xchg
je
adc
mov
shlb
loopne
mov
out
fwait
mov
in
sbb
mov
mov
add
loope
sti
push
and
mov
sub
cmp
adc
pop
jg,pt
or
fst
or
pop
out
mov
call
jg
sub
in
mov
fsub
fs
gs
pop
cmpsb
push
int3
jl
dec
orb
jecxz
insl
scas
movsb
jns
adc
lods
out
cmpsl
mov
mov
out
imul
xchg
sahf
fists
aas
mov
xchg
push
fimuls
adc
xchg
cltd
adc
mov
sub
adc
jb
pop
stos
daa
shlb
xchg
stc
mov
pop
jmp
pusha
int
sub
add
imul
loopne
hlt
pop
cmpxchg
loope
sub
lods
mov
push
adc
sbb
outsl
mov
pop
mov
sbb
or
aaa
mov
cmc
shrb
mov
in
mov
pop
enter
idiv
adc
in
mov
inc
add
sahf
mov
lret
or
ja
test
mov
add
stc
loop,pt
cmpsl
or
xlat
pop
jg
mov
cwtl
enter
arpl
clc
add
lds
xchg
mov
mov
xchg
push
shr
jle
add
jbe
jl
in
ja
jo
inc
stos
dec
push
sbb
jnp
addr16
insb
cmp
outsl
shll
sbb
scas
rcll
fnstenv
or
mov
pop
jns
push
sbb
addb
push
inc
int
mov
test
cmp
vpcmpgtw
push
pop
rcl
mov
arpl
imul
testb
mov
into
mov
addl
pop
inc
orb
int3
add
push
push
xor
pop
inc
pop
stos
leavew
pop
adc
fs
pop
je
add
loopne
jl
add
shrb
lahf
or
in
mov
mov
rcr
mov
mov
jecxz
mov
popa
jb
mov
mov
lahf
push
lcall
pop
mulb
mov
icebp
call
xor
icebp
pop
add
dec
xlat
pop
adc
push
jmp
push
cmp
fcoml
gs
xchg
lret
dec
aad
scas
lret
push
jno
ror
cli
sub
sbb
dec
mov
jecxz
add
into
adc
mov
mov
rcll
pop
les
fwait
adc
push
jo
cmp
cmpsb
pop
test
repnz
jmp
das
imul
or
bound
shld
cltd
ret
cmp
or
notb
pop
lock
jo
lock
mov
jbe
gs
pop
jno
or
int
shr
sub
sub
and
ds
pop
jp
imul
int
inc
repz
test
call
push
stc
pop
mov
cli
sbb
mov
orb
loop
test
inc
or
mov
fnstenv
fmuls
push
sub
lcall
ljmp
mov
xchg
cmpsl
mov
and
aas
add
frstor
mov
pop
xchg
clc
repz
pop
test
ds
mov
imul
ret
mov
gs
aad
sub
dec
push
push
lods
popf
stos
push
ret
sbb
add
jae
je
out
adcl
mov
push
xchg
hlt
ret
jne
xor
loopne
pop
in
mov
inc
lcall
pop
stos
pop
test
stos
idivb
lret
cli
xchg
mov
pop
xchg
stos
mov
or
xchg
icebp
mov
notl
cmp
pop
inc
iret
jno
fadd
ficompl
adc
xor
mov
es
xlat
mov
sub
loopne
psrlq
std
mov
stc
adc
lods
cmp
or
mov
pop
mov
xor
mov
hlt
jo
mov
mulb
cltd
jne
mov
adc
push
adc
fisttpl
xor
cwtl
mov
mov
icebp
andps
es
dec
adc
addr16
jo
aaa
and
andb
cwtl
fnstenv
sbb
out
mov
insb
inc
je
les
popa
ljmp
add
mov
out
mov
mov
test
xor
dec
push
xor
pop
popa
push
pusha
xor
mov
cmpsl
std
adc
int
fwait
and
mov
les
jb
xchg
ret
mov
stos
in
fidivrl
popa
outsl
mov
sti
jnp
sub
pop
stos
fdivrl
int
mov
shr
mov
xchg
lahf
inc
and
push
das
mov
jecxz
xchg
jmp
je
mov
or
insl
jne
jecxz
out
cmp
cmp
xchg
fnsave
push
out
push
shll
xor
popa
sub
lret
movsl
stc
cmp
inc
jecxz
dec
dec
mov
xchg
push
push
pushf
add
imul
outsb
fld
inc
mov
adc
xor
mov
fwait
bound
aam
arpl
cmp
in
xorb
inc
cmp
and
insb
mov
sbb
cld
mov
push
shll
pop
sub
mov
xchg
dec
cmc
or
add
jnp
push
out
ds
push
xchg
and
jmp
adc
push
xlat
imul
out
sub
lahf
fimull
into
xor
shr
or
jp
push
xlat
cmp
push
out
jno
inc
inc
fidivl
lods
jo
test
mov
mov
enter
das
xor
xchg
adc
out
cmp
push
push
and
daa
sub
add
lret
jge
push
inc
mov
pop
mov
mov
call
hlt
rcrb
call
mov
adc
cmp
repz
cld
push
push
or
or
pop
mov
mov
xchg
adc
out
dec
popa
pop
fiadds
ljmp
bound
mov
iret
xor
insb
imul
jno
fists
and
dec
dec
inc
push
mov
in
dec
in
inc
pop
sbb
cmp
mov
sbb
mov
movsl
fidivrs
or
dec
fidivrl
dec
xor
ljmp
sbb
lea
jae
xchg
les
mov
add
test
lret
adc
sbb
in
stos
xor
and
cmpb
addl
push
loop
push
dec
cmp
inc
gs
or
push
push
pop
inc
in
int
pop
cmpsl
notl
pop
mov
or
in
arpl
or
out
outsl
ja
mov
loope
inc
inc
ret
add
sbb
shrl
dec
push
cmp
in
cmp
sub
cli
jl
shlb
outsb
icebp
popf
pop
and
imul
js
outsl
enter
daa
push
mov
iret
fisttpll
int3
xchg
push
sbb
push
xchg
sbb
cmp
rorl
sbb
fsub
rcl
ss
cmp
repnz
imul
sarl
sahf
add
test
std
stos
mov
sahf
mov
cmp
movsl
ja
stc
or
sti
mov
lcall
xchg
stos
dec
xchg
sbb
cmpsl
mov
cmpsb
add
sub
push
shlb
adc
and
xor
or
mov
or
jo
pcmpgtw
aas
sub
movsl
or
jae
cmc
je
xchg
mov
rcl
int
icebp
into
inc
lods
inc
idivb
lds
mov
in
lds
push
icebp
mov
test
cmp
cmp
mov
mov
mov
test
inc
daa
hlt
jno
dec
outsl
push
pop
mov
lcall
fcmovne
or
pusha
jmp
xchg
out
lds
loope
xor
sbb
fsubl
test
cmp
push
adcl
je
mov
fdivrl
dec
shll
loope
into
ret
or
and
int3
cltd
sbb
inc
xchg
jo
mov
scas
das
xor
or
jl
movsl
add
icebp
push
fsts
ss
rol
sub
jmp
cmp
mov
xchg
inc
mov
in
add
out
iret
lret
ret
or
mov
bound
insb
add
mov
into
lds
push
mov
push
fnstcw
add
xlat
mov
mov
push
jnp
cli
cli
aad
lods
dec
xchg
mov
dec
cs
insb
loopne
mov
cmp
sbb
cli
int3
or
movsl
out
stos
sbbl
les
cs
lods
lods
jnp
ljmp
sbb
fsubs
pop
push
push
mov
inc
fs
or
lcall
jo
lret
push
negl
and
pushl
push
aad
sbb
aad
mov
push
shlb
je
jno
pusha
insl
add
mov
out
in
cmpsl
jg
lods
xchg
lea
fdivrs
pop
pop
sahf
mov
les
popa
sbb
push
push
flds
mov
out
mov
dec
cwtl
adc
ds
fsubrp
daa
adc
push
push
xor
test
out
xchg
xor
xchg
dec
je
cld
pop
leave
aad
sub
jns
les
jo
aaa
imul
mov
loopne
sti
jecxz
jge
add
inc
or
pop
sbb
mov
and
xlat
jmp
out
leave
inc
enter
outsb
lahf
push
sub
sub
xor
sub
dec
jmp
dec
add
pop
stc
add
movsb
xchg
mov
inc
pop
xchg
js
and
cld
pop
add
or
fldt
inc
inc
fldt
jl
xchg
pop
xor
das
xchg
xor
ret
lea
xchg
xchg
into
push
lea
cmpsl
xchg
pop
and
repnz
insl
jge
fwait
call
jnp
repz
jl
fisubs
pop
ja
test
xchg
inc
mov
mov
mov
das
dec
cmp
mov
mov
into
dec
pop
sbb
hlt
mov
or
sbb
jge
arpl
xor
out
shll
ret
jp
or
fnstenv
adc
testb
cmpsb
daa
or
nop
popf
jo
out
jecxz
dec
rorl
and
mov
into
dec
outsl
leave
lea
xor
out
clc
inc
sub
xor
scas
dec
fmuls
mov
and
lods
int3
shll
dec
int
daa
xchg
repz
jle
xor
xchg
xchg
ret
sbb
sbb
dec
out
inc
mov
fucom
lret
ds
mov
dec
adc
push
rcrl
jp
xlat
fidivs
movl
xor
sti
movsb
imul
out
xchg
xchg
cmpsl
mov
fld1
push
and
stos
cmpsl
sub
fwait
dec
paddsw
mov
sbb
sbb
call
mov
push
inc
or
sub
dec
cmpsb
sub
mov
je
movsb
pop
pop
cltd
and
sub
enter
incl
jmp
adc
xchg
sub
imul
ja
or
dec
push
mov
jge
insl
sbb
lods
cltd
call
les
jg
mov
pop
dec
loop
mov
sub
dec
mov
fwait
popf
cmpsb
xorl
mov
psubsw
mov
dec
sarl
push
pop
push
fucom
and
loop
sbb
dec
mov
fsubr
jmp
xchg
mov
ret
jnp
mov
and
int3
mov
sbb
mov
cmpsb
fstpl
push
into
dec
sub
enter
ss
roll
and
aam
inc
vpsllvq
stos
push
scas
test
cmp
rolb
mov
jecxz
sbb
int3
and
inc
add
push
cmpsl
push
test
lods
testl
sbbl
cwtl
scas
ds
sub
push
and
inc
mov
loopne
or
mov
and
pop
into
add
in
and
jge
jl
stos
and
sbbb
ss
shl
and
idivb
dec
mov
and
outsb
int3
mov
shl
out
loopne
je
xor
mov
insl
and
gs
es
push
xchg
in
mov
ljmp
fcmovnbe
repz
negb
xchg
push
push
ss
push
add
ret
test
and
pop
sti
call
dec
pop
push
cli
xchg
xchg
xor
push
mov
std
and
dec
ret
sbb
inc
insb
dec
test
xor
pop
inc
in
inc
mov
push
jo
cltd
push
pop
cmpsl
test
jno
jecxz
test
ficompl
or
lcall
enter
cmp
cmp
adc
ret
lcall
jle
cmp
jmp
jno
add
cmp
mov
xlat
xchg
stos
mov
inc
mov
xor
sbb
and
jle
mov
orb
rcrl
or
push
inc
mov
leave
dec
mov
jns
xor
xchg
movsb
jg
push
sti
lahf
notb
jle
push
shll
pop
outsb
xor
jno
loopne
or
xchg
sbb
xchg
loope
push
and
ret
out
aam
adc
lock
movl
shlb
jb
rclb
dec
cmpsb
in
xchg
fsubrp
mov
and
dec
jge
imul
pop
pop
daa
and
ficompl
in
jmp
mov
leave
ficomps
das
sub
push
xchg
push
dec
jle
or
fidivrs
cwtl
insb
add
bound
cmp
fwait
jns
cmp
into
pusha
hlt
lods
or
adc
enter
jns
pop
push
pop
cwtl
push
mov
outsb
mov
pop
jbe
xor
xchg
mov
add
test
inc
mov
pop
outsl
and
push
sub
out
imul
sbb
lret
aas
push
cltd
mov
mov
outsl
mov
loopne
loope
or
aam
in
xor
sub
in
aas
lahf
ss
cltd
or
cmovnp
pushf
cmp
xchg
dec
shlb
jg
adc
sub
mov
clc
adc
mov
lods
sub
pusha
dec
inc
add
loop
mov
sahf
jmp
aaa
lock
jmp
repz
xlat
jge
push
cli
scas
lods
push
mov
or
fwait
adc
mov
mov
cld
enter
xchg
mov
push
jb
fs
enter
pop
fisubl
mov
cmp
hlt
adc
scas
int
jne
popa
push
sahf
ja
cli
test
jo
push
sbb
inc
ficompl
mov
adc
mov
fiadds
scas
cmpsl
xor
xchg
stc
pop
xchg
jo
xor
xchg
pop
std
dec
lahf
sub
stos
add
dec
scas
adc
cmp
fwait
adc
adc
adc
aas
sub
push
jmp
lahf
insb
lods
pop
jnp
nop
mov
push
notl
ret
jmp
hlt
in
mov
insl
sbb
mov
or
xchg
fwait
sub
in
outsl
push
std
cmp
cltd
sub
cmc
push
sub
and
stos
js
rcrl
xchg
and
test
lret
fcoml
outsb
dec
int3
mov
out
push
adc
or
sar
xchg
xchg
fldl
hlt
mov
js
loope
sahf
shrd
dec
fwait
inc
clc
pop
push
cltd
mov
adc
inc
xchg
cwtl
insb
or
outsb
mov
pop
daa
xchg
setnp
cli
cwtl
dec
fistpl
inc
push
mov
inc
jnp
test
mov
int3
ficompl
test
jns
adc
cmc
in
pop
mov
sub
out
xor
out
aam
enter
das
aas
jbe
xchg
cmp
in
mov
loop
mov
mov
lcall
jmp
imul
addr16
add
jae
call
mov
mov
jb
aas
dec
push
fsubrs
pop
lods
add
std
outsl
sti
int3
jnp
fldenv
std
jg
and
leave
push
rcrb
pushf
xchg
mov
out
mov
popf
mov
or
xchg
adc
out
repnz
into
xor
js
or
dec
lret
shlb
in
dec
icebp
push
xchg
mov
fstpl
cld
loop
dec
cli
cld
push
orl
fadds
imul
cmp
aad
jnp
das
insl
mov
out
sbb
nop
fwait
jnp
insl
jns
in
pop
call
or
cmpsl
pop
mov
jb
mov
adc
in
into
mov
out
dec
lret
pop
adcl
adc
or
aam
cmp
imul
cli
or
lods
into
ljmp
ret
int
sbb
jae
jge
lret
adc
mov
repz
clc
shrl
and
dec
into
outsb
add
insb
sbb
int3
test
imul
mov
xor
icebp
mov
ja
into
inc
shrb
mov
mull
in
je
fcmovne
shl
es
dec
cld
ret
jne
cs
aas
jl
push
sbb
push
cwtl
or
icebp
test
dec
outsb
sbb
inc
jmp
mov
jg
pop
push
pop
cmp
pop
xor
test
fsubr
xchg
in
in
call
out
scas
xchg
push
ljmp
iret
add
rcrb
cwtl
nop
inc
dec
xchg
push
push
xor
shll
jnp
stc
nop
daa
in
ja
inc
sbb
mov
imul
add
das
lods
xchg
pop
rorb
sahf
sub
lret
jns
inc
push
jecxz
shl
stos
lock
xor
push
stc
lahf
push
inc
sbb
lods
fwait
sbb
mov
or
mov
loopne
rclb
mov
fisubl
dec
sub
adc
out
sbb
mov
push
or
add
push
xchg
out
dec
sbb
bound
sbb
repnz
adc
add
ds
add
jg
lret
and
jmp
pop
dec
mov
into
divb
xor
cmp
sarl
xchg
mov
fsub
mov
popa
jae
call
sub
inc
sub
addr16
icebp
cmc
loope
scas
push
or
xor
jge
mov
push
scas
fistps
jno
jnp
ljmp
adc
scas
cmp
ret
adc
or
test
mov
sarb
dec
or
mov
lds
mov
movsl
neg
clc
ja
fmuls
fbstp
ret
sbb
mov
ret
dec
jge
cmp
ds
add
mov
negl
inc
lea
xchg
dec
in
inc
xchg
mov
lret
pushf
pop
les
ds
sub
lea
dec
mov
xchg
sub
xor
or
xor
shlb
adc
inc
shrb
xchg
ja
inc
pop
fistl
jae,pn
pop
lods
fbld
shlb
sub
xchg
and
mov
mov
mov
cmpsb
and
es
fidivrl
lret
dec
icebp
cmpsl
xchg
push
mov
js
or
dec
aas
mov
xchg
mov
adc
cmp
fmul
imul
fdivrp
in
std
push
pop
lret
repnz
or
add
jo
or
inc
cld
sub
ljmp
or
jo
push
sbb
mov
cmp
pushf
mov
ja
push
cmpb
sub
stos
adc
je
leave
fwait
negb
mov
mov
push
jbe
repnz
xchg
movsl
adc
pop
sub
outsl
push
sub
cli
or
ja
or
imull
xor
ret
push
enter
in
insb
lock
stos
cwtl
cwtl
test
pop
push
pop
call
decb
xchg
fwait
xor
out
adc
dec
fdivrs
adc
mov
jecxz
loopne
and
adc
jle
ja
stos
pusha
ljmp
lahf
sbb
test
in
xchg
add
pop
mov
mov
int
adc
cmp
mov
cmpsb
push
and
stos
repnz
aas
jb
xchg
sub
add
and
in
inc
test
inc
mov
fsubrl
cmp
test
fwait
in
loopne
xchg
and
jb
out
lods
in
daa
lock
and
push
or
pop
lea
dec
into
xchg
ja
arpl
add
push
ds
mov
or
loope
arpl
hlt
nop
mov
cmp
stos
or
sub
lretw
sub
cmpb
lret
sbb
xor
add
jne
sbb
adc
inc
aam
mov
aam
out
inc
mov
je
hlt
arpl
dec
and
or
loopne
inc
lret
pop
adc
pusha
imul
fidivl
fcmove
out
into
imulb
xor
pop
imul
lahf
sub
or
popf
enter
xchg
aam
add
test
jns
xor
xor
mov
or
mov
imul
les
lea
add
outsb
jns
dec
sarl
fld
pop
dec
add
pop
sbb
and
pop
gs
and
fcomip
xor
repz
push
lods
sbb
mov
arpl
jbe
xchg
movsl
push
out
rcrb
in
pusha
xchg
sbb
test
cmpsl
and
cwtl
and
out
std
jmp
mov
cmpsb
mov
mov
and
ret
rcrl
fwait
daa
mov
jb
push
pop
xchg
push
xor
scas
cmp
mov
outsb
mov
pop
imul
xrelease
call
sbb
and
push
fstl
mov
mov
and
mov
cli
rorb
xor
sub
push
push
mov
andb
fwait
mov
xor
jge
or
and
test
jg
lock
cmp
ljmp
adc
jl,pt
lea
mov
sbb
inc
jb
fstpl
sti
insb
fs
enter
fildll
mov
and
fwait
gs
or
sub
aaa
xchg
fistpl
xor
in
out
pushf
jecxz
xchg
sti
lahf
add
sub
add
shlb
les
sbb
hlt
jge
ret
aam
iret
adc
jmp
add
xor
xor
lds
and
mov
mov
aaa
out
pop
push
jecxz
add
fcomi
jns
int3
cmpsb
add
arpl
fdivs
movsl
sbb
mov
jmp
jg
div
ds
pop
adc
or
fst
dec
push
jns
sub
xchg
aam
je
sub
js
cmpsb
sbbb
xchg
les
ja
inc
mov
test
repz
push
push
bound
push
scas
inc
inc
iret
xchg
repnz
mov
je
lret
enter
push
or
bound
sub
pop
movsl
dec
mov
daa
pop
es
pop
fnstenv
sub
or
xorl
and
std
lods
insl
jp
aaa
daa
cld
jp
jge
fsubs
jae
lret
cltd
mov
cwtl
mov
sub
dec
pop
orps
lahf
inc
adc
mov
js
jp
outsl
adc
mov
adc
jle
cs
adc
adc
lds
in
jbe
into
push
cmp
vpcmpgtd
lahf
fcmovu
pusha
xchg
push
mov
dec
test
pop
loope
rcll
ljmp
sbb
ss
fdivrs
xchg
sbb
ss
and
sbb
lahf
sub
es
ss
iret
scas
test
fnstenv
cmp
sub
mov
pop
lods
das
add
mov
push
add
into
push
mov
ret
lcall
aam
sbb
sahf
lods
mov
addr16
outsb
lahf
int
pop
jne
or
jbe
js
push
or
and
lods
push
mov
clc
pop
int
enter
ds
test
inc
fs
sbb
and
push
dec
js
add
push
push
fdivs
repz
jge
xor
jb
jmp
out
pop
sub
xor
aas
pop
popa
mov
ss
or
pop
mov
loopne
mov
mov
xchg
sbb
cmp
int
pop
movsl
repnz
cmp
loopne
sbbl
mov
data16
mov
lds
mov
pop
jne
xor
sbb
icebp
shll
lea
lods
dec
jge
fs
and
movl
jle
fs
fsubrs
pop
stc
mov
sarb
dec
popf
cmp
xchg
loopne
out
test
repnz
adc
mov
out
push
and
push
sub
xor
cltd
cmpsl
add
mov
mov
daa
mov
or
dec
repz
repz
lret
jl
lock
fldenv
movb
jnp
scas
shlb
ss
sub
outsb
rclb
std
mov
jae
dec
repnz
arpl
and
sbb
sub
pop
imul
jge
stos
ds
inc
cmp
push
sbb
mov
cmpsb
sbb
jl
repnz
inc
sub
xchg
nop
mov
in
dec
sti
ret
sub
lock
mov
movl
xlat
xor
pop
mov
mov
mov
test
and
insl
inc
pop
and
pushf
xor
jge
mov
cmp
pushf
out
getsec
push
shrb
aas
cmp
inc
mov
decl
push
xchg
in
call
cli
add
adc
sub
mov
and
rolb
xor
pushf
sbb
dec
mov
mov
cmpsl
clc
movsb
aaa
popf
sbb
xor
jmp
cmp
sbb
sarl
clc
push
lret
int
ja
push
rcll
mov
cbtw
xchg
test
notl
in
push
shlb
arpl
faddp
sub
sub
push
cmp
push
inc
xchg
jp
mov
dec
mov
jb
lea
aad
ficoms
mov
idivl
lea
inc
popf
jns
cmp
std
outsl
inc
jg
sbb
sub
jo
mov
orl
and
fstpl
mov
in
and
mov
dec
ljmp
cmovp
cld
sub
lret
std
sub
fnsave
add
dec
push
add
js
sbb
cmp
and
inc
outsl
jno
lods
sarb
cmp
js
mov
mov
loope
inc
incl
mov
pop
jge
pop
cmp
dec
add
inc
hlt
and
gs
divb
lea
mov
loop
aaa
mov
sbb
cmp
cmp
das
jl
xchg
or
mov
ret
xor
jmp
xor
outsb
loope
fdivp
out
rcrb
mov
cmp
aam
cmp
sub
mov
dec
mov
loope
out
sbb
out
cwtl
jnp
sarl
mov
outsb
sub
stos
incb
cmpl
in
leave
call
pop
shll
fnstsw
scas
jmp
clc
lret
int
in
fs
jno
inc
push
out
lret
outsb
fildll
int
xchg
inc
jge
leave
pop
xor
insb
pop
cmp
sti
sub
add
arpl
sbb
mov
mov
jle
cmp
bound
or
inc
into
into
fildll
adc
test
xchg
sarb
rcrl
xchg
pop
xlat
pusha
jns
hlt
lock
insb
push
sbb
dec
aas
jecxz
pop
and
push
jb
lcall
movsl
es
gs
cltd
jbe
pop
cmc
sub
ss
in
test
push
loope
pop
lock
mov
sbb
loopne
pop
sub
add
pop
jmp
cs
dec
leave
ficoml
or
lock
enter
fdivrs
fs
nop
rolb
xchg
std
mov
test
mov
dec
and
repz
xor
xor
add
xor
add
clc
and
inc
mov
xor
aaa
mov
add
cli
dec
pop
mov
or
push
cmovge
js
sbb
pushf
xor
data16
das
mov
push
in
imul
pop
ss
sahf
es
fidivrl
imul
lret
dec
xchg
clc
out
stos
mov
sub
js
and
xor
mov
add
movsl
inc
stos
in
mov
dec
scas
icebp
ds
jnp
or
pusha
adc
test
or
and
pop
and
sarl
mov
fists
dec
push
jl
test
push
pop
inc
test
add
aas
ljmp
push
dec
lds
sub
movsb
push
mov
adc
adc
aas
sahf
sbb
gs
mov
sub
and
mov
roll
in
les
push
insb
test
jno
pop
mov
sub
lret
adc
negb
sbb
loop
pushf
icebp
enter
aas
cmp
adc
cmpsb
arpl
lock
loop
sbb
jne
xchg
xor
jg
mov
loope
and
test
add
cmp
mov
dec
jmp
call
xchg
xlat
nop
pop
out
lret
out
jno
movsb
dec
cmpsb
loope
xchg
inc
xor
and
aas
mov
repz
pop
lahf
mov
mov
xor
je
add
call
and
xor
mov
xorl
cmpsb
push
movsb
ret
push
mov
stc
jne
xchg
or
incl
jge
fnstsw
rcrl
in
adc
daa
stos
fcompl
dec
xchg
dec
aaa
mov
xchg
ret
adcl
daa
inc
cmpl
lcall
sahf
cld
icebp
lcall
xchg
xchg
inc
cwtl
pusha
pushf
and
cmp
pop
aaa
cld
pop
jp
cmp
xchg
shll
rorb
mov
cs
loopne
aam
fildl
test
pop
mov
cmc
sti
and
sahf
push
sti
test
mulpd
pop
rcr
fucom
xchg
movsb
test
inc
pop
test
push
jnp
nop
enter
xchg
scas
pop
add
or
addb
shrb
out
hlt
nop
insl
adc
adc
ret
xchg
das
xchg
loop
cmp
sub
js
sub
pusha
sahf
push
pop
pop
xchg
insl
adc
lcall
jg
and
mov
xchg
gs
cmpb
int3
xlat
faddl
loopne
or
popf
cmp
es
mov
push
dec
pop
faddl
cmp
arpl
ljmp
aaa
rcr
lods
or
and
mov
cwtl
icebp
xor
js
sbb
sbb
push
and
inc
testb
mov
out
enter
loope
dec
bound
test
pushf
data16
icebp
mov
adc
faddl
dec
cmp
lcall
in
xor
addr16
iret
stc
and
push
xchg
or
lret
int
jle
ret
lret
cltd
enter
mov
jnp
cmpsl
gs
cmp
xchg
jo
cwtl
in
aaa
fcmovnbe
clc
sbb
mov
xchg
fadds
xchg
ss
push
sub
enter
arpl
mov
fiaddl
mov
cmp
subl
mov
adc
mov
push
mov
outsl
shlb
mov
xchg
fdivrs
fcomps
dec
xchg
ret
pop
daa
filds
add
push
or
icebp
xchg
push
add
mov
das
fld
cltd
xor
xor
dec
das
mov
dec
mov
in
jae
sbb
fs
and
and
cli
ja
rdmsr
mov
nop
push
add
mov
sti
out
mov
pop
into
xchg
nop
jmp
das
xor
in
mov
xchg
push
lret
repz
add
pushf
call
mov
js
and
ds
jp
sbb
aas
lock
inc
pop
shl
loop
icebp
push
out
in
or
mov
or
stos
inc
imul
into
jle
push
andb
out
es
dec
or
xor
adc
loopne
stc
inc
push
jmp
scas
lds
and
shlb
add
enter
sub
xchg
pushf
shrb
stc
and
jl
sti
repz
pop
sarl
cmpsb
dec
inc
jecxz
test
test
dec
dec
pop
call
inc
or
jnp
adc
mov
push
and
rclb
xlat
sub
dec
dec
xchg
movsb
rcl
push
sbb
outsl
jbe
xchg
push
mov
and
out
mov
mov
jle
daa
fildl
incl
dec
aam
movsl
shl
xchg
mov
cwtl
pop
mov
push
mov
mov
nop
push
dec
push
insl
mov
dec
movsb
push
test
leave
inc
aam
or
inc
int3
les
outsb
push
leave
cli
mov
sbb
push
mov
hlt
test
into
xchg
sub
jge
test
xchg
divb
rcr
cld
addr16
or
cmp
cmp
or
cltd
dec
push
lea
fdivs
jmp
push
pop
sub
xchg
and
add
fcom
sbb
mov
inc
in
adc
out
xchg
ljmp
add
or
addb
push
sub
xchg
mov
bnd
cmp
xchg
sbb
xchg
mov
fmulp
push
lods
push
push
and
xchg
movsl
jge
outsb
mov
nop
xchg
dec
push
add
les
push
je
out
les
mov
lcall
xchg
test
lea
les
dec
jl
imul
test
ret
ss
inc
jns
xor
add
lahf
sbb
push
cmpsl
pop
jmp
daa
push
repz
scas
insb
clc
or
cmp
push
and
jno
dec
sub
xchg
xchg
and
push
outsl
outsl
rolb
je
add
cli
cltd
jb
mov
and
or
lret
or
dec
insb
push
push
jmp
push
lods
or
aam
pop
lcall
fcoms
push
fimull
mov
pop
or
icebp
rcr
adc
mov
pushf
das
stc
dec
and
dec
sti
xchg
pop
dec
in
xchg
sbb
push
mov
xor
loopne
cltd
mov
and
and
mov
movsb
sub
mov
mov
shlb
jp
and
rcrl
pop
cwtl
jle
in
cmp
test
xor
inc
mov
loope
hlt
mov
mov
and
dec
clc
inc
pop
dec
ds
insb
pop
out
push
bound
mov
scas
inc
adc
std
dec
aaa
cmp
jmp
ljmp
xchg
push
pop
pop
daa
pusha
cmp
add
stos
mov
jno
out
mov
shrl
mov
pop
jge
sbb
outsb
xchg
push
loope
mov
jle
test
out
or
orl
cwtl
int
pop
adc
xchg
aad
cs
iret
sub
jecxz
mov
sbb
dec
in
sbb
int3
push
addl
repnz
xchg
out
cwtl
bound
sub
loopne
and
fmul
mov
sbbl
xchg
pushl
dec
das
mov
test
mov
pop
repz
stc
nop
mov
dec
dec
nop
mov
sahf
int3
xor
leave
or
push
or
inc
inc
mov
fldl
or
popa
incb
imul
loope
sub
xlat
add
sub
pushl
or
xchg
sub
rolb
push
mov
cmpsl
addl
sbb
int3
into
mov
push
mov
mov
dec
popa
in
das
inc
out
je
mulb
sub
xor
in
dec
cmp
push
lods
shlb
add
sbb
dec
out
shlb
mov
repz
cmp
or
test
and
add
cmc
cltd
xchg
test
cmpsl
repz
jnp
subl
jle
or
or
hlt
adc
xchg
incl
adc
cmp
push
cmp
sbb
out
and
insl
or
repz
fs
fdivr
dec
punpckhbw
and
mov
adcb
mov
outsl
sbbl
wrmsr
dec
mov
lods
xchg
ds
sbb
push
lret
mov
xchg
in
cmpl
hlt
push
pop
testl
or
ret
out
jae
mov
adc
in
ljmp
adcb
ret
mov
inc
popa
push
jecxz
cmp
push
xchg
cmpb
test
xchg
jp
adc
sbb
loopne
imul
ret
inc
loope
in
arpl
sbb
or
cmp
mov
or
cmp
test
and
jo
dec
fnstenv
notb
jb
pop
sub
in
inc
rcrl
call
inc
sbb
cs
adc
aas
lahf
push
mov
cmp
dec
adc
ljmp
dec
mov
adc
scas
xchg
rorl
jg
lods
mov
loopne
sub
out
test
fnstcw
mov
adc
mov
ret
xlat
popf
mov
out
outsl
ss
or
push
clc
inc
xchg
sbb
lock
mov
inc
sbb
mov
inc
xchg
jl
aad
dec
sub
ret
adc
mov
mov
out
div
pop
int3
pushf
cwtl
sahf
sub
jb
shl
mov
sub
jns
push
fcomip
rcrb
mov
lcall
add
xchg
cmc
mov
jp
ljmp
cmp
jge
ja
test
gs
sbb
mov
pop
cmp
je
jg
lret
popa
xor
popa
add
jns
dec
mov
jmp
mov
xchg
fsubs
mov
jns
xchg
pushf
push
jns
mov
xchg
adc
sahf
aam
fwait
xlat
jb
rolb
and
jbe
pop
cmp
outsb
sub
movnti
mov
shlb
xor
sti
lcall
mov
ret
insl
xor
andb
xchg
mov
xor
and
push
sub
dec
dec
xchg
and
popf
mov
jnp
int3
stc
call
movl
pop
jg
les
cmp
sbb
push
xchg
jo
cmpsb
int
or
clc
jbe
add
hlt
and
xorb
call
xor
jmp
cltd
dec
pop
adc
dec
jbe
sbb
ljmp
pop
f2xm1
iret
mov
mov
pop
cli
sti
xor
outsb
inc
xchg
cs
mov
aaa
jnp
rcl
mov
pop
hlt
jp
add
or
stc
mov
aam
out
scas
pop
xlat
mov
cmpsb
rcll
jecxz
jge
inc
push
push
pop
adc
fcmovne
pop
push
push
dec
pop
aaa
lock
pop
vcvtsi2ssl
push
push
sbb
pop
push
ror
sub
or
add
mov
icebp
jne
jns
mull
mov
repz
jl
pop
pop
pop
in
arpl
les
jbe
mov
fisubrl
insl
in
in
ss
stc
mov
mov
mov
sbb
xor
pop
sbb
xor
idivl
cs
orb
mov
movsb
int3
fwait
outsl
inc
cmp
mov
add
into
jp
lock
imul
hlt
sub
aam
out
mov
pop
jno
pushf
mov
fnstsw
push
jp
mov
sti
jno
test
push
fdivl
pop
int
push
fsubrs
pop
test
dec
mov
mov
scas
cmp
pushf
fildll
rorb
and
fidivl
pushf
mov
push
mov
insb
xchg
mov
jle
shlb
fs
xor
cmp
dec
adc
lods
xchg
rcr
arpl
stos
ret
pushf
jg
push
data16
stos
mov
nop
movsb
shl
std
lods
sbb
pop
xor
pusha
das
or
lret
repz
out
mov
inc
ds
dec
ret
loop
pop
ja
xor
mov
sub
or
jae
xchg
cmp
cmp
outsl
insl
push
into
out
jmp
push
aad
out
jae
lods
sbb
dec
outsl
cs
pop
cmp
dec
arpl
pop
insb
pusha
mov
sbb
cs
outsl
dec
leave
cmpsb
adc
sbb
nop
int3
sbb
sub
repz
sahf
jle
es
mov
arpl
xchg
jb
sbb
dec
push
scas
out
faddl
pop
roll
xchg
icebp
movsl
frstor
sub
cmp
xchg
push
sbb
ljmp
push
inc
lret
ja
loopne
push
fstps
out
gs
stos
cltd
arpl
enter
rorb
scas
cmp
es
arpl
xchg
popf
cmp
sub
cmp
rep
fs
loope
loopne
pusha
es
movsl
pop
insl
cmpb
pop
push
jle
sub
cmpsl
cmp
jge
aad
shufps
mov
mulps
add
daa
jl
push
out
xor
inc
popa
loopne
dec
cmp
push
inc
pushf
add
push
lods
or
lods
notl
pop
xor
out
pushf
xchg
std
fcoms
test
iret
cmp
jne
mov
sbb
push
mov
jg
add
fbld
arpl
lods
divl
fstl
out
imul
cmp
push
faddp
sahf
or
sub
jecxz
sub
add
insl
adc
pop
xor
jle
jmp
ret
int
jg
loopne
xchg
inc
adc
pop
add
imul
mov
js
xchg
stos
shrb
or
cmp
adc
or
aaa
ja
cmp
jae
mov
movsb
dec
clc
push
aam
jmp
test
push
inc
repz
popa
xchg
xchg
pop
adc
mov
lcall
ljmp
cli
mov
and
jg
mov
loop
movsb
rclb
sbb
testb
in
lea
or
cmp
lods
sub
inc
in
pop
gs
pop
cltd
jl
push
add
xor
xchg
mov
and
ret
mov
or
arpl
ss
lcall
mov
mov
jno
cmp
fs
aas
imul
popa
sarl
add
mov
pop
gs
push
jmp
ror
out
imul
push
inc
jo
fists
xchg
adc
loope
jg,pt
dec
scas
scas
stc
fistl
xor
or
popa
or
jnp
xchg
jg
push
jb
out
iret
push
sub
andl
pop
sti
sbb
sbb
pop
inc
outsb
mov
fwait
inc
xchg
mov
inc
test
lcall
sub
mov
aad
mov
nop
mov
les
inc
adc
sar
movsl
insl
fucomip
jo
xchg
xchg
adc
pop
lods
or
gs
jp
outsl
inc
and
push
lods
mov
std
shrl
xchg
pop
pop
and
and
stos
call
shl
jp
push
movsl
rcrl
mov
add
fmuls
movsb
jmp
cmc
pop
push
or
loop
mov
cs
scas
stos
sub
mov
push
arpl
pushf
test
pop
xor
insb
sti
sbb
shr
int3
jae
arpl
aas
mov
push
sbb
xchg
stos
push
adc
imul
lds
cs
inc
imul
lds
rclb
clc
pop
testb
aam
popa
arpl
cmp
sub
push
xchg
ror
sub
mov
int3
aad
scas
pop
sbb
jnp
into
in
imul
sub
adc
es
mov
hlt
or
jbe
xchg
loope
mov
cs
fidivrl
test
mov
aam
pop
cmp
cmp
in
iret
mov
cld
jo
push
aaa
pxor
and
mov
and
pop
xorb
jge
add
mov
sti
dec
fimull
jmp
mov
sbb
cmc
adc
movsb
adc
scas
or
ds
push
or
and
sbb
mov
movups
cmp
outsl
pop
stos
add
pop
imul
pop
test
std
sub
out
sbb
out
mov
mov
pop
arpl
xchg
push
loopne
and
jp
aam
out
push
xchg
add
xor
in
shll
out
and
rolb
push
popa
in
daa
movsb
jecxz
ret
jae
sub
cmpsl
or
out
xchg
or
je
fstl
dec
mov
mov
xchg
push
fucom
pop
outsb
cmp
stc
and
adc
xchg
into
add
sub
pop
sub
push
mov
fidivrs
notb
shlb
add
scas
cld
inc
and
dec
push
inc
and
add
pop
jno
xor
lods
cmp
aad
test
pop
mov
dec
fs
insb
and
hlt
popa
fsubrl
cli
test
sub
sbb
adc
jp
jne
push
inc
sbb
adc
into
pop
popf
push
pop
call
mov
nop
jge
sbb
popa
daa
sahf
outsb
rep
sub
stos
cmp
adc
sti
divb
cltd
loopne
add
faddl
lea
sbb
pop
repz
repz
cmp
sbb
rolb
push
jmp
xlat
push
pop
int3
push
scas
fnstenv
clc
imul
roll
xchg
js
xchg
sahf
or
lea
ficoms
out
in
fs
in
xchg
sbb
ret
xlat
cli
pop
pop
cmp
dec
nop
orl
jnp
cli
mov
mov
jae
cli
xchg
arpl
in
pop
das
mov
sahf
adc
outsb
movsb
rcrb
pushf
test
xchg
mov
cmp
dec
rorl
cmp
aaa
outsb
scas
mov
in
jbe
addb
push
cmp
cmp
sbb
popa
addr16
lods
loopne
negb
xchg
mov
loopne
adc
aam
fwait
hlt
push
jecxz
and
sahf
cmp
xor
cmp
mov
sbb
fsubp
bound
scas
jmp
xchg
gs
adc
jge
stos
or
jge
lret
ret
stos
cmp
stos
xchg
mov
in
cmpsb
inc
cmpsb
xchg
mov
minps
cmp
xlat
cwtl
mulb
xchg
adc
scas
inc
stc
int
in
test
cli
xor
mov
cmpsb
sub
and
jp
fucom
push
sahf
mov
xorb
ret
daa
outsl
mov
add
mov
arpl
cs
mov
out
test
cmp
in
inc
inc
sub
loopne
mov
xchg
jle
sbb
add
pop
mov
fdivs
ret
sub
add
mov
rclb
lea
mov
fbstp
fwait
xlat
sub
ss
mov
lods
inc
mov
or
cmc
cltd
shrl
call
movsl
jp
hlt
mov
or
mov
popa
gs
jne
aas
adc
clc
mull
push
jae
mov
jle
xor
pop
les
inc
rcr
fdivrl
inc
add
or
jae
xor
push
lods
das
push
add
dec
rcrl
fwait
mov
fst
sbb
sbb
mov
shr
insl
mov
adcb
mov
xor
outsb
flds
lea
data16
mov
iret
pusha
lds
push
in
cwtl
sub
ss
xchg
lcall
jge
mov
rcrb
mov
movsl
mov
and
or
xor
outsb
cmpsb
mov
in
in
lods
out
lods
dec
mov
test
cli
and
mov
aaa
ret
cmpsl
adc
dec
ficoml
ret
push
icebp
and
cs
int3
sub
push
xor
jmp
xchg
leave
xchg
or
xchg
cmp
cmp
jns
popf
cmp
cmp
lea
imul
push
cmpsl
jp
xchg
repnz
jmp
cltd
inc
in
adc
mov
mov
adc
xor
mov
jp
rep
ret
sbb
xor
enter
test
jecxz
cmp
out
sub
xor
movsl
mov
mov
lock
cld
pop
rorl
divl
mov
out
insb
jle
rcrb
roll
pop
jecxz
add
mov
xchg
inc
jl
dec
fisttpl
jg
enter
sbb
stc
std
mov
fdivl
jbe
divl
add
xchg
test
adc
pop
inc
lahf
or
add
mov
dec
cmp
fldcw
cld
lret
mov
mov
and
dec
lock
shrb
test
testl
lcall
add
or
add
repz
pop
sub
sub
add
dec
jp
adc
mov
xlat
fwait
or
and
fstps
insl
jbe
aad
xchg
sarb
dec
cmpb
dec
ret
or
das
mov
addb
lahf
add
sub
xor
lock
or
sbb
rorb
cmp
and
push
movsl
xchg
dec
xor
mov
inc
jo
jg
outsb
inc
rolb
and
mov
ficomps
push
pop
sarl
pop
jmp
xchg
adc
shlb
sub
lahf
ja
into
scas
lret
mov
pusha
ret
push
or
pop
dec
and
shll
sub
movsb
outsb
adc
push
jno
sub
xor
test
pushf
dec
mov
out
jae
mov
jp
pop
inc
fsubs
bound
mov
or
lcall
lea
pop
push
lods
std
pop
xchg
mov
xchg
sub
cmp
sub
cmp
sub
dec
fcompl
pushf
cltd
cltd
mov
sub
out
mov
xchg
decb
inc
sub
dec
or
mov
gs
or
pop
outsl
sub
ljmp
fwait
daa
fsts
push
cmpsl
xchg
sbb
shl
lret
mov
mov
repnz
xchg
sbb
jge
jnp
add
pop
clc
imul
mov
das
fwait
jle
repnz
pop
and
sub
cmp
jl
mov
push
mov
js
dec
mov
xor
out
pop
movsl
arpl
cmp
aam
stos
addl
xchg
repz
cmp
inc
sarl
pop
pop
aam
push
rcrb
mov
jle
inc
sbb
push
xchg
sbb
insb
lret
fildl
jo
adc
sbb
in
popf
mov
mov
jmp
call
mov
pop
mov
int3
neg
out
push
jnp
adc
jmp
rorl
out
xor
and
push
mov
and
inc
cmp
cli
or
xlat
arpl
lock
outsb
xor
mov
mov
insl
fsubl
les
dec
mov
hlt
stos
mov
pop
push
pop
or
pop
pop
mov
add
mov
xor
jp
or
fidivrl
fsubl
cmpsb
std
mov
insb
xor
xor
mov
lds
mov
pop
mov
xchg
push
inc
arpl
rcl
movsb
jg
pop
or
mov
dec
data16
jl
mov
rcrl
ret
iret
add
xchg
enter
aaa
popa
sub
aam
decb
test
sbb
sub
pop
xchg
xor
sahf
in
loop
xor
aam
sub
aam
cmp
imul
aas
mov
insl
int3
cmp
jb
mov
aad
sub
push
outsb
push
out
hlt
aam
xchg
jns
ret
jnp
cltd
orb
xor
mov
je
xchg
and
mov
sub
cmp
test
dec
pop
sbb
and
lret
mov
pop
js
mov
sbbl
mov
jbe
jo
dec
mov
testl
fwait
pop
xorl
divl
ds
sbb
leave
inc
xchg
sahf
in
and
mov
cmc
in
mov
and
push
cmp
aad
movsl
xchg
fcoml
adc
jecxz
and
inc
inc
mov
leave
inc
scas
pop
adc
cmpsl
cmp
pop
push
pop
ja
je
fwait
hlt
and
repnz
xchg
aad
push
xorl
xchg
jecxz
cmp
mov
loopne
mov
xorb
loopne
or
mov
int
ss
xchg
scas
pop
or
sub
lret
arpl
in
je
sbb
adc
mov
std
fwait
jae
bound
fcompl
js
pop
and
xor
out
jb
lret
and
dec
jmp
lret
daa
sbb
dec
jmp
dec
aam
out
lahf
jnp
push
adcb
sbbl
stos
adc
pushf
jns
mov
and
aaa
sub
sbb
psubusb
jl
cld
cmp
pop
loop
inc
cwtl
out
fisttpl
frstor
fsubrl
shll
mov
inc
testb
push
sbb
lret
xorb
cmpsb
imul
mov
pop
js
lds
xchg
fnstsw
into
lods
es
add
cmpsb
je
and
cmp
in
fdivl
mov
shrb
pop
leave
or
hlt
adc
xchg
cli
dec
adc
or
gs
ret
divb
dec
aad
or
jp
mov
mov
jl
sbb
xor
xor
xchg
sbb
ljmp
cmp
cmp
mov
inc
mov
fwait
outsb
test
xor
inc
mov
mov
in
cmpsb
mov
and
in
adc
mov
pop
fildl
push
nop
dec
shlb
mov
test
adc
xchg
out
mov
push
daa
add
or
mov
cmp
push
mov
arpl
movsb
nop
movsb
pop
ds
push
roll
sbb
fwait
xlat
outsb
xchg
je
imul
lcall
cs
stos
push
sbb
stos
and
mov
mov
xchg
stos
test
cli
pusha
push
in
arpl
and
mov
clc
enter
addr16
jbe
pop
icebp
and
sahf
movsl
mov
fldl
icebp
insl
pop
xor
test
addr16
fildl
push
pop
xor
inc
leave
pop
ljmp
mov
es
ljmp
add
lods
and
popf
pop
daa
movsb
mov
int3
mov
sbb
rcrl
and
pop
cmp
je
pop
mov
adc
lods
push
out
or
sti
or
dec
fsubrs
and
ds
mov
scas
ss
pop
inc
add
jbe
and
rcl
push
in
xor
sbb
inc
lods
fnstenv
test
cmpl
or
leave
mov
imul
fcmovnu
fdivl
and
sti
push
inc
in
dec
cmpsl
and
sub
arpl
lret
aaa
dec
pop
sahf
scas
popa
sahf
pop
mov
psubw
jns
enter
faddl
out
movsl
jno
add
rcrb
mov
dec
stos
inc
mov
and
mov
iret
in
test
cmp
int3
lret
insl
push
enter
hlt
lea
fisttpll
loope
sbb
jne
shrb
in
jns
sbb
int
sbb
jb
js
and
sbb
mov
lret
pusha
mov
jo
clc
sub
rorl
stos
sbb
cmp
sub
and
cmp
adc
and
out
data16
dec
gs
lea
insb
nop
int
outsl
xchg
scas
push
pushf
adc
stos
or
in
inc
mul
mov
mov
dec
mov
add
pop
pop
pop
ss
xlat
subb
mov
lret
or
adc
icebp
dec
cld
jp
or
fstpt
daa
mov
inc
clc
pusha
adc
ret
mov
xor
xchg
and
out
ljmp
add
cwtl
mov
int
fs
ficoml
insb
scas
add
int3
mov
iret
aas
loop
call
xchg
scas
loope
gs
sbb
cmpb
add
sub
mov
aaa
pop
ds
int3
mov
dec
cmp
mov
push
mov
or
lcall
repnz
neg
ss
test
lds
daa
lcall
ror
int3
mov
dec
jno
mov
push
ret
lahf
mov
inc
jb
mov
mov
jne
pop
lret
popf
sahf
fsub
aaa
or
adc
mov
mov
nop
popa
fsubrs
push
dec
out
push
imul
scas
add
ljmp
sub
mov
xchg
push
icebp
xlat
mov
movsl
push
push
in
repz
push
cmp
icebp
push
jg
cmp
test
ret
pop
cmp
pop
adc
xor
scas
pop
push
push
sbb
and
fldcw
xchg
loope
jl
aaa
icebp
sub
scas
insl
test
sub
lret
in
gs
and
push
fisttpl
mov
movsb
pop
cltd
dec
pop
in
push
adc
scas
js
add
lods
xchg
cltd
mov
je
jg
std
sti
pop
inc
popa
cs
jge
shr
adc
mov
xchg
pop
pop
ret
adc
jno
pop
inc
enter
out
arpl
dec
add
mov
add
insb
add
mov
cli
int3
repnz
out
andb
test
stos
dec
loopne
adc
xchg
shl
clc
test
ss
imul
mov
mov
sbb
and
bound
and
xchg
mov
xor
movsb
cltd
pop
sbb
mov
psubusw
and
test
in
lret
rolb
fs
aaa
add
xor
imul
imul
aad
xchg
xlat
push
cwtl
jp
call
mov
in
in
or
faddl
xlat
negb
sarb
xor
test
and
aad
test
xchg
mov
subl
xchg
fsubl
sarb
xchg
fimuls
insb
sub
dec
cli
lret
imul
std
mov
jb
pop
shll
repz
inc
call
into
mov
cmp
jle
inc
pop
jbe
popf
into
adc
pop
mov
mov
pop
inc
in
push
xchg
mov
or
or
push
sub
lea
faddp
es
les
add
and
lret
stc
add
mov
je
jle
ss
sbb
dec
cmpsb
xchg
out
jne
xchg
int
scas
ret
add
adc
mov
lods
aas
add
inc
das
or
mov
cmc
jecxz
mov
rorl
sub
push
add
inc
add
and
dec
lcall
push
cmp
add
and
shll
jp
aaa
xchg
push
xchg
xchg
mov
mov
sub
insb
lock
out
cmp
adc
aaa
push
cld
dec
push
dec
pusha
mov
push
dec
cmp
mov
mov
mov
int3
mov
fnstenv
xor
fwait
xor
inc
insl
add
cmpsl
movsb
dec
fwait
or
loop
lret
xor
lods
ljmp
or
jge
pusha
xorl
stc
jecxz
xchg
pop
ret
pop
or
ud1
lock
xchg
ljmp
sbb
les
xchg
jno
cld
gs
fwait
adc
dec
xor
sbb
push
lret
into
shll
stos
mov
jne
popf
xlat
loop
pop
cld
or
adc
fistps
data16
sti
lds
movsbl
or
ljmp
ljmp
or
cmp
cld
push
mov
mov
into
or
ficompl
cmp
inc
cmpsb
ret
xor
jg
or
sbb
insl
inc
ja
mov
testb
push
pop
addl
or
shl
add
movsb
xchg
pusha
xor
sub
std
mov
or
inc
sub
ficoml
sbb
stc
cmpsb
adcb
cltd
mov
hlt
and
clc
xchg
cmpsb
mov
jp
pushf
ss
das
cmp
scas
mov
popf
sub
sbb
lahf
push
dec
aaa
data16
xorl
pop
mov
adc
and
mov
scas
jmp
out
call
sub
outsb
and
cmpsb
xor
ret
ret
movsl
dec
movsb
in
aad
mov
aas
insl
fsubs
daa
jns
je
sbb
lahf
and
loopnew
aad
addr16
movsl
jno
in
loope
ficoms
sbb
shll
inc
nop
xchg
lods
hlt
dec
cltd
sub
xor
mov
push
mov
mov
std
sahf
out
sbb
js
mov
xchg
sbb
arpl
push
xor
jle
shl
jp
jnp
pushw
push
pop
xor
pushf
inc
xchg
out
push
pop
sarb
mov
shr
pop
pop
jb
test
mov
addr16
pop
xchg
mov
pop
add
mov
mov
mov
out
xchg
cmp
mov
inc
push
lds
fcompl
add
rcr
pushf
or
out
imul
movsl
imul
cltd
enter
es
pusha
daa
cmp
add
int
and
sub
jbe
push
jge
mov
in
inc
cltd
aad
lahf
mov
cmc
mov
aaa
fildll
or
inc
xchg
push
mov
ds
mov
dec
sbbl
enter
xchg
sbb
jge
push
arpl
push
inc
lret
jg
inc
stc
mov
mov
pop
movsb
pushf
ds
ficoms
int3
es
cwtl
mov
mov
sti
lret
jmp
push
movsl
leave
call
stc
cld
loopne
mov
and
movl
jmp
out
jnp
movsl
adc
lret
pusha
mov
or
jle
lock
repnz
mov
not
pop
or
xor
mov
sub
push
test
dec
clc
mov
cwtl
hlt
mov
orb
int3
popf
pop
mov
jle
cmp
and
cmpsl
dec
and
pop
stos
ret
in
clc
push
sbb
jge
push
xchg
sub
mov
divb
sbb
jae
mov
cmp
arpl
shll
fdivr
mov
movsl
clc
jl
sub
leave
dec
push
jge
pop
xchg
sub
das
mov
jns
mov
dec
fildll
rcrb
push
mov
into
nop
sbb
hlt
push
in
rcrl
rorb
subl
imul
cmp
xor
jno
cs
jle
loopne
xor
leave
sbb
dec
mov
aad
xor
inc
int
clc
mov
jp
flds
push
mov
outsb
ret
mov
inc
xor
adc
dec
ja
sbb
cmp
jne
sbb
add
push
lea
jecxz
insb
jnp
imul
call
scas
and
jecxz
pop
fsubrs
or
test
fwait
jl
and
xor
xor
and
mov
dec
fbstp
nop
push
idivb
jb
outsb
lea
add
pop
and
add
sbb
shlb
add
fsts
mov
xor
movsb
fsubrl
mov
ljmp
push
xchg
movmskps
faddl
cmp
push
xchg
push
push
stos
aaa
mov
data16
xor
stos
ss
aad
nop
xchg
pop
mov
les
rolb
pop
ret
mov
xchg
lcall
lea
stos
push
xchg
out
out
push
mov
into
jle
fidivrl
push
lds
and
adc
jnp
cmc
ret
push
add
rcrl
ret
pop
adc
aas
icebp
and
ret
cmp
pop
pop
dec
cltd
mov
out
enter
lods
mov
ss
in
add
mov
pop
mov
jg
jge
sbb
popa
shlb
repnz
int
add
inc
mov
dec
mov
xlat
dec
lret
or
pop
addr16
movsb
lcall
cmpsl
xchg
dec
mov
sub
jg
das
add
sub
loop
fldenv
jle
dec
bound
rcr
inc
imul
pop
imulb
lcall
rclb
popa
inc
fstpl
mov
cli
ss
test
adc
cld
in
loope
push
inc
xchg
lea
xlat
or
sarl
sar
loope
xchg
or
xor
sbb
bound
fwait
ja
adc
gs
in
out
adc
das
sub
dec
xlat
xor
mov
mov
pop
lods
jle
and
lahf
fidivl
shll
fsubrs
push
dec
outsl
mov
shll
js
xchg
hlt
inc
xchg
xchg
div
mov
pop
and
adc
rorl
iret
jge
es
mov
lret
sub
mov
jge
cld
xor
sarb
pop
jl
addr16
pop
arpl
std
inc
and
popf
and
mov
xor
adc
pop
jg
dec
mov
pop
dec
mov
lret
sbb
cmc
pop
out
cld
fisubrs
fwait
out
clc
push
jae
pop
and
push
and
mov
cmp
sbb
pop
fstpl
adc
je
shrb
ret
adc
sub
add
filds
repz
inc
and
cs
jecxz
mov
add
push
xor
jno
sub
xor
pop
or
pop
add
and
aad
jns
sbb
stc
or
sub
xor
dec
pop
ficoml
inc
jecxz
fwait
sbb
jbe
jge
mov
and
mov
adc
pop
xchg
popl
dec
jmp
stc
add
inc
sbb
xlat
mov
jns
or
ss
icebp
aaa
js
mov
addr16
pop
loope,pn
pusha
loope
cmp
ret
cld
or
ss
in
or
popa
mov
mov
outsb
test
or
and
jae
in
push
rcl
xor
sub
shll
pop
xor
or
add
dec
test
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
inc
add
loopne
add
addb
lock
add
add
add
add
add
add
add
