sbb
cmp
outsl
dec
xchg
lcall
jp
pop
gs
fcomi
adc
or
mov
and
mov
xchg
mov
sub
pushf
test
mov
aad
jp
cltd
mov
jns
imul
and
sahf
orb
adc
sub
pop
out
scas
sub
cltd
mov
or
jbe
movsb
nop
ret
pop
adc
add
mov
sub
mov
xor
bound
int3
push
inc
stos
loopne
and
add
frstor
std
xchg
ret
xchg
mulb
and
pop
fnstenv
stos
dec
push
es
pushf
lock
pop
and
ret
mov
add
jbe
loop
sbb
lea
data16
pop
cmp
sub
out
cmp
mov
sar
icebp
mov
adc
add
loope
inc
jbe
mov
outsb
ds
inc
pop
ret
aaa
js
repnz
jns
pop
and
cld
jne
push
ret
and
addl
and
mov
and
and
aaa
mov
xchg
xchg
es
adc
xchg
cmc
dec
aaa
test
pop
pop
imul
add
cltd
and
pop
push
arpl
cmp
inc
xchg
fisubs
je
lret
sub
test
pop
add
or
cmpsl
popw
stc
in
pusha
enter
mov
or
lods
add
sti
nop
je
mov
inc
and
sbb
sarl
test
cli
sbb
out
xchg
dec
push
mov
mov
clc
jnp
mov
aad
insb
imul
arpl
adc
mov
pushf
imul
aaa
js
nop
lret
dec
ror
push
pop
daa
ds
icebp
out
stos
inc
dec
idivb
dec
je
pop
jnp
adc
cwtl
sbb
push
nop
int
lahf
add
lahf
es
shll
int3
dec
lret
push
xchg
sub
jmp
shlb
fbstp
daa
test
std
fstpt
push
mov
xor
neg
jle
mov
arpl
orb
pop
in
jns
andb
pop
cmp
fidivrs
ljmp
nop
jge
jo
xor
loope
mov
scas
inc
fiaddl
xchg
push
sahf
aaa
pop
loope
ret
cmp
shl
mov
cltd
jge
imul
imul
call
or
shlb
test
in
xor
or
movsl
daa
pop
popf
adcb
jb
in
cmp
testl
addr16
jmp
pop
pop
xchg
in
mov
sub
cmp
cmp
rorb
xchg
mov
xchg
xchg
pop
sbb
ds
push
cmp
mov
adcb
popa
test
in
fistps
xchg
bound
out
and
jae
add
mov
pop
adc
in
jo
inc
bound
or
and
fdiv
popf
mov
xor
in
lods
imul
fmull
mov
xchg
fidivrs
cli
mov
testb
clc
inc
adc
lds
add
cmpsl
lods
dec
xchg
in
outsl
testb
jle
out
fisubrs
jl
hlt
xchg
das
rorl
pusha
rcl
aad
arpl
lcall
jbe
jl
xchg
test
and
cltd
jmp
and
inc
adc
cmp
mov
fwait
movsl
insb
push
fldl
or
sahf
shll
idivb
popa
pop
ret
add
lea
mov
int
shld
sbb
insl
loope
and
cmc
das
insl
bound
dec
or
mov
scas
pop
add
fcompl
or
sbb
lods
mov
sbb
push
loope
sub
lea
test
mov
mov
inc
jg
cli
mov
fadds
push
sub
or
jg
inc
ds
add
mov
stos
in
sbb
ja
sbb
call
rorl
iret
adc
cwtl
push
enter
gs
adc
or
inc
or
cmp
js
pop
js
std
mov
jo
inc
xor
rorl
shll
std
test
pop
stos
push
shll
mov
cmpsl
mov
int
je
sub
incl
push
xchg
outsb
lcall
xor
sub
ja
fistpll
push
sub
mov
int
jnp
out
addl
ljmp
test
insb
mov
push
mov
dec
dec
fisubs
aas
push
jecxz
cmpl
sbb
movsb
jmp
je
test
add
mov
neg
mov
cmc
sbb
mov
les
sbb
inc
cmp
mov
aam
movsb
movsb
mov
adc
and
test
lea
and
test
pop
sahf
ret
test
pop
xor
cld
add
lock
xor
jle
pop
cmp
push
in
pop
insl
ret
push
ss
mov
sti
xchg
push
add
popf
push
stos
cmp
nopl
das
lods
mov
sub
sub
sub
std
jbe
cmc
inc
push
mov
and
iret
fsubl
icebp
punpckhwd
mov
mov
adc
mov
push
stos
mov
loop
sbbb
fisubrs
cmc
push
outsl
in
mov
mov
sub
cmp
fdivs
sbb
jae
sbbl
fisttpl
stc
ret
call
leave
adc
push
sahf
dec
push
int3
cmc
xor
test
daa
imul
pop
cld
add
in
mov
int
sub
gs
stos
ljmp
ljmp
sub
xchg
pop
or
aas
xor
push
cmp
xlat
xchg
stc
dec
jae
mov
xchg
pop
mov
mov
imulb
xor
pop
jae
push
movsl
or
add
test
sub
mov
mov
pop
dec
cmpsl
dec
cmp
xor
rolb
add
jnp
xlat
ds
xchg
ss
test
xor
pop
pop
sbbb
repnz
int
xor
das
call
mov
rclb
gs
movsl
ljmp
mov
daa
dec
push
pop
jnp
inc
sub
pop
hlt
sbb
dec
jns
shlb
aaa
sub
xchg
addr16
pushf
mov
inc
jno
mov
repnz
pop
test
push
xchg
shlb
cmc
mov
jb
or
pop
aad
pop
mov
pop
ljmp
hlt
and
push
cmp
mov
movsb
cmp
fneni(8087
mov
stos
mov
mov
addb
scas
dec
push
sub
out
rclb
lret
cmpsb
cvtps2pi
mov
adc
pop
mov
scas
mov
cli
incl
loop
jns
jmp
cltd
dec
pop
mov
cmp
xchg
js
lret
push
lods
xchg
stos
into
xchg
rcl
lcall
sub
pop
xor
out
out
sbb
add
rcrb
fcos
lds
xor
lea
push
push
mov
scas
dec
xor
rcr
stos
hlt
push
outsb
cmp
mov
out
in
push
loope
or
lods
mov
mov
stos
pop
adc
sub
mov
cmp
xchg
ljmp
dec
fucom
xchg
adc
sub
test
outsb
outsl
push
pop
jl
mov
stos
mov
jno
add
pushf
sub
pop
mov
comiss
push
pop
sub
maxps
mulb
fwait
add
iret
fwait
aaa
fistpll
leave
or
int3
xchg
lds
ret
sub
stc
fdivl
sbb
sbb
enter
in
dec
cmp
mov
fimuls
sub
fnstenv
ja
xchg
or
xor
push
xchg
inc
xchg
aaa
mov
sub
lods
movsb
cmp
dec
repz
bound
xor
mov
out
lock
or
or
sub
lods
xchg
push
mov
mov
loope
dec
ljmp
or
mov
pop
mov
and
jge
scas
into
mov
xor
lcall
sarb
fmul
jle
daa
sub
aad
dec
aam
shll
jns
sub
inc
aam
cmpb
ss
pop
lods
xchg
outsl
push
gs
dec
sbb
and
xchg
lret
adc
pushf
bound
ficoml
imul
push
repz
sub
and
push
jp
mov
addl
outsb
push
cmp
inc
test
inc
iret
cli
or
jle
int3
stos
fcompl
cltd
adc
cmp
add
hlt
push
dec
pop
jns
dec
sti
popf
icebp
movsb
or
jb
lods
insb
mov
cld
pop
out
and
lret
sbb
je
fisubrl
arpl
xor
imul
mov
repnz
aaa
loopne
sbb
in
icebp
outsl
add
jge
ja
cmp
in
pop
xor
xlat
push
ss
fstl
out
sarb
cltd
cld
scas
popf
xchg
outsb
add
dec
xor
inc
xchg
sbb
pop
xlat
inc
mov
inc
cmp
mov
loopne
inc
lahf
xchg
or
jge
popf
push
sub
cmp
sbb
xor
fwait
ds
insb
dec
bound
mov
imul
call
jmp
cmp
jne
pop
sub
lds
out
int3
xchg
sbb
out
jns
shlb
test
fcmovbe
je
lea
test
aaa
loopne
add
shrb
xchg
sub
lcall
and
pop
xor
cld
popf
mov
dec
int
jge
out
mov
or
push
pop
xchg
sti
loopne
xchg
push
sahf
jb
lock
stos
mov
int
mov
and
call
adc
dec
mov
jne
xchg
push
int
rorl
leave
mov
lcall
xchg
jge
jns
in
jg
sbbl
inc
out
ret
aas
ficomps
arpl
out
xchg
es
jle
mov
mov
nop
jb
mov
insl
fbld
xchg
inc
mov
pusha
loop
xabort
cld
pop
push
dec
dec
mov
and
sbb
enter
inc
xchg
aaa
js
outsl
jne
sti
push
sub
mov
aas
clc
mov
test
jae
or
jp
nop
jmp
or
sahf
inc
push
xchg
rorl
mov
xor
mov
jl
in
fldenv
push
inc
in
or
enter
rclb
jl
int
cmpsb
xor
pop
push
scas
das
jo
ljmp
sbb
mov
mov
sub
mov
push
dec
fistpll
bound
aam
addr16
push
inc
jae
outsb
sub
and
cmpsl
dec
inc
pop
or
mov
inc
nop
faddl
js
push
adcl
lods
push
popf
movsb
mov
iret
jae
adc
and
mov
inc
cltd
sbb
sub
fimuls
add
push
mov
push
sbb
lcall
dec
nop
mov
dec
adc
out
neg
les
test
xchg
pushl
jg
or
stos
jno
add
imul
jmp
dec
adc
mov
jl
das
jne
loop
add
mov
stos
imul
lds
std
and
dec
mov
loopne
adc
call
sbb
or
mov
sub
in
pusha
call
fs
adc
rep
jnp
pop
cmpsb
mov
andb
cmp
and
ljmp
sub
cld
pushf
clc
jae
loop
push
lods
std
inc
ret
insb
divl
fcoml
adc
mov
push
mov
stc
jb
dec
jae
xchg
gs
ljmp
loope
jecxz
xlat
dec
or
ficoml
push
loop
rcrb
loopne
mov
popa
cmc
stos
add
xor
add
fs
push
jl
stos
sub
fimuls
fwait
lock
mov
je
adc
mov
aad
inc
push
xchg
mov
roll
stc
jno
sti
aad
test
fidivs
movsl
cmp
or
pusha
dec
mov
fs
aaa
pop
nop
dec
mov
dec
sub
mov
rclb
sbbb
lods
mov
les
aad
iret
test
les
sub
popf
stos
sub
add
mov
ret
xchg
xor
fld
addr16
rolb
es
daa
sub
pop
test
iret
xchg
mov
jae
or
lea
xor
lock
je
fs
pop
lock
mov
push
dec
mov
mov
popa
test
insl
mov
or
and
sub
outsl
mov
js
and
inc
mov
popf
cmp
shlb
sbb
or
jnp
adc
adc
fstpt
cmp
xor
sbb
push
xor
idivb
mov
dec
mov
lods
sbbl
lock
inc
mov
sarl
test
out
mov
rcrl
mov
stos
mov
repz
sub
out
xor
iret
iret
fldenv
xlat
push
gs
jmp
cmc
push
xor
jmp
xchg
sub
fimull
ja
out
adc
xchg
add
sarl
ret
testl
andl
jne
adc
sbb
outsb
push
sahf
push
in
mov
mov
scas
shll
loope
test
into
inc
xchg
mov
mov
addr16
lock
pop
and
test
test
cmpsl
cmp
out
or
pushw
sti
repnz
cmp
xchg
cmp
ret
mov
inc
cmp
je
dec
sub
in
push
push
ficomps
xchg
aaa
std
dec
xchg
test
call
and
jge
fnstsw
mov
mov
mov
cli
mov
sahf
xor
fs
push
ss
rolb
sbb
std
fcmovnu
into
cli
daa
lret
and
or
test
lods
cwtl
lcall
mov
push
daa
cmpsb
aam
cwtl
pop
cmp
mov
dec
mov
push
mov
mov
outsl
or
rep
stc
xchg
gs
add
test
cvttps2pi
xchg
mov
inc
data16
je
in
xchg
in
or
frstor
xchg
fldcw
aam
rcl
mov
dec
lock
fdivr
sub
clc
cs
icebp
rorb
xor
fdivrs
mov
in
push
push
ffreep
cmp
xchg
icebp
jp
inc
fs
sub
rcrl
imul
out
cld
hlt
ret
dec
loope
out
pop
dec
stc
xor
mov
cwtl
pop
outsb
int3
cmc
mov
std
mov
mul
movsl
or
cltd
into
and
enter
bound
push
imul
cwtl
les
lcall
movsb
ja
mov
rcll
lret
sub
mov
mov
jb
int
mov
outsb
sti
pop
push
daa
cmp
lret
imul
jl
dec
xchg
out
dec
jbe
cwtl
adc
xchg
cltd
and
rcrl
pushf
sub
lods
cld
cmpsb
pop
xchg
insb
sbb
fnstsw
subb
and
dec
ja
imul
js
fadds
into
add
or
push
or
fildl
and
dec
pop
fsubrl
add
pusha
or
jae
in
dec
jns
lods
push
pop
das
lods
lahf
popf
cmp
mov
pop
cmp
add
in
aam
enter
sub
jo
bound
rcrl
imul
imull
mov
fisubrl
mov
dec
or
push
test
int
jns
adc
fwait
inc
mov
pop
stc
inc
mov
daa
push
mov
arpl
sub
mov
xchg
dec
mov
mov
test
push
mov
cvtdq2ps
rclb
pop
popf
orl
repz
and
pop
lods
data16
cmp
sbb
sub
mov
repnz
sbb
aaa
add
loope
and
pop
sbb
stos
dec
ficoml
mov
jo
adc
in
ror
imul
iret
jno
mov
jg
pop
enter
dec
mov
add
adc
mov
pop
popf
and
adc
push
aad
fwait
mov
mov
iret
lret
inc
clc
dec
mov
in
lar
dec
test
call
mov
inc
fcmovbe
cld
sub
mov
push
repz
mov
loope
outsl
inc
mov
daa
rorl
add
adc
and
mov
mov
push
les
fdiv
inc
rorb
cmp
jae,pn
adc
cmc
outsl
popa
mov
or
stc
gs
sub
sub
movsb
dec
cmc
add
mov
les
jle
arpl
dec
and
jp
inc
shll
add
jo
pop
ret
aas
mov
add
mov
fsts
and
sub
inc
cmp
lock
aas
xor
pop
xchg
insl
jne
repnz
or
das
fadds
or
test
push
cs
dec
fistpll
inc
sub
cmpsl
scas
ret
jecxz
std
dec
sti
sub
sub
sets
or
outsl
out
mov
movsb
pop
fxch
inc
fsts
sub
mov
divb
int
in
sahf
sbb
cwtl
pushl
sub
add
push
push
sub
pop
sub
push
rorl
sti
xor
daa
mov
cmp
xchg
pusha
xor
adc
pop
adc
add
and
mov
or
inc
out
and
adc
fstl
movsb
cmc
cmpsl
aad
es
sbb
jle
inc
xchg
stos
xor
imul
call
adc
les
and
mov
sbb
dec
dec
jecxz
repnz
sbb
and
inc
dec
fs
sahf
cmc
or
in
dec
loope
out
mov
lahf
or
xorl
mov
fsubrl
mov
lods
movsb
popa
adc
out
mov
cmp
lret
mov
adc
fstpl
sbb
mov
dec
insb
sahf
adc
push
push
add
lods
clc
mov
shl
sbb
rcl
andl
sub
in
sub
dec
cwtl
inc
js
pop
shll
xchg
repnz
mov
mov
jbe
pop
ficompl
aaa
imul
lods
mov
xchg
inc
mov
bswap
jnp
sub
cmp
daa
add
push
cmp
lcall
mov
xorl
cmp
add
sbb
jl
movl
jb
xchg
dec
jmp
push
push
mov
sub
sub
mov
mov
popa
int
movsb
repz
into
shr
ja
xchg
subb
pop
add
out
xor
dec
jae
mov
sub
ret
mov
sub
sub
imul
dec
jae
lret
call
sub
mov
sbb
ud2
mov
pop
loope
int
pop
jmp
mov
sbb
sub
hlt
mov
mov
loope
pop
idivl
les
mov
sarl
hlt
addr16
pop
sarb
ret
jae
pop
int3
jecxz
test
push
div
mov
cltd
in
mov
add
dec
dec
cmp
aad
jno
push
pop
xor
nop
cli
dec
mov
mov
pop
pop
push
dec
scas
inc
lds
scas
mov
jnp
lahf
movsl
sbb
push
ret
mov
loope
and
rolb
jns
jb
arpl
push
leave
mov
sub
cmp
dec
cmp
fnstenv
jmp
cmp
add
ret
lahf
or
fsqrt
call
jmp
cmp
adc
shrb
movsl
xchg
pop
lds
std
cld
mov
adc
xor
xchg
fnsave
sti
mov
jnp
hlt
push
sbb
xor
inc
addr16
test
aad
divl
adc
cs
shrl
mov
test
mov
lods
dec
mov
pop
clc
mov
mov
dec
sti
push
mov
cmp
mov
lret
mov
outsl
pusha
clc
ret
ja
push
dec
fidivrs
stos
subl
dec
daa
sub
mov
or
inc
gs
mov
out
fiadds
in
cmpsb
pop
dec
ljmp
in
outsl
mov
xchg
testb
push
movsb
inc
add
outsb
mov
ss
mov
pop
insb
jns
cwtl
scas
push
insb
cwtl
ds
bound
fndisi(8087
xchg
xchg
add
je
insl
push
int3
inc
mov
xchg
lea
or
xchg
jnp
or
add
or
sbb
push
stc
push
sarb
adc
clc
fwait
scas
lret
packssdw
andb
insl
in
lahf
cmp
adc
pop
hlt
inc
pusha
xor
mov
outsl
repnz
xchg
dec
mov
aam
mov
ret
lds
xchg
mov
mov
stos
cmc
ret
dec
gs
jb
ret
aad
inc
movsl
lods
sub
inc
cmp
lret
cmc
sub
enter
and
cmp
lds
testl
pop
adc
fmuls
adc
lea
xor
stos
nop
fisttpll
pusha
sbb
fdivrs
jbe
insl
add
or
add
pop
push
movsl
push
push
rorb
mov
jmp
call
dec
mov
xor
loopne
arpl
push
clc
add
sbb
mov
sti
ret
shrl
fdivl
lahf
in
test
lea
xchg
shlb
cmpsb
inc
inc
test
inc
loopne
ljmp
pop
popa
inc
aas
insb
ljmp
or
cmc
jmp
arpl
mov
rcr
sub
push
dec
dec
jb
fsubrl
or
mov
fdivl
xchg
inc
pop
inc
sbbb
sbb
adc
insb
xor
mov
xor
loope
sbb
dec
lock
jl
aaa
insb
inc
pop
mov
cwtl
cmp
leave
sub
pop
dec
rclb
lcall
mov
scas
pop
xchg
push
jnp
add
nop
or
flds
lock
push
inc
movsb
bound
mov
mov
sbb
jmp
aas
jo
ret
pop
jns
leave
lds
push
add
xchg
mov
adc
aaa
movsl
add
rcl
inc
cmp
add
jb
repz
aad
je
mov
sub
mov
mov
not
sub
jnp
shl
sbb
mov
push
movsb
inc
lret
out
lock
nop
ljmp
mov
fwait
mov
sub
add
jns
sbb
jo
jbe
pushf
mov
call
stos
jns
jge
mov
sarl
ret
inc
dec
cmp
dec
dec
scas
jle
int3
sar
dec
repz
pusha
lods
push
push
pop
pop
mov
jbe
in
or
mov
pop
test
inc
mov
in
lods
lret
mov
repz
fstpt
mov
cmp
mov
popa
inc
pop
sbb
jo
movsl
or
sbb
cmc
or
cmpsb
pop
gs
in
sbb
fildll
mov
mov
mov
sbb
mov
mov
pop
mov
jne
leave
push
push
adcb
mov
test
jle
shl
jb
and
clc
jb
inc
into
xchg
lret
fiaddl
sub
insb
or
mov
add
les
jbe
dec
add
or
jae
push
xchg
and
int
test
in
and
sub
adc
pop
inc
insb
sbb
gs
lods
cmp
xor
dec
mov
shlb
inc
add
push
gs
mov
sub
imul
or
or
and
ret
cmc
sbb
add
in
pop
shl
xchg
in
mov
das
or
sbb
push
push
cwtl
pop
aam
xor
push
xchg
not
bnd
mov
pop
mov
addl
adc
mov
negb
push
mov
lcall
les
sahf
aam
xchg
jl
rcrl
scas
pop
push
in
adc
movsl
ds
cli
and
mov
and
xor
xchg
ljmp
cli
adc
push
push
mov
xchg
push
iret
pop
mov
add
cmp
sbb
xorl
std
icebp
popf
jmp
out
mov
scas
idivb
inc
lea
dec
push
adc
insb
push
mov
xchg
fsubl
shlb
inc
xlat
jae
push
ret
cmc
lret
loop
cmpsl
pop
test
sti
aad
aad
inc
loope
push
push
and
call
lods
jge
out
xchg
push
pushf
dec
mov
jo
fs
icebp
dec
xorl
push
sahf
ret
inc
pop
cmpl
cwtl
fildll
mov
pop
lret
push
les
jl
outsl
cli
xchg
in
dec
mov
sbb
fwait
idivb
inc
fdivrs
pop
out
je
cwtl
outsl
insl
in
sti
dec
mov
add
pop
nop
mov
pop
mov
jbe
sti
popf
xor
ret
jge
icebp
shlb
enter
xchg
mov
loope
lahf
clc
notl
addr16
sarl
in
add
outsb
or
sbb
jnp
mov
mov
xor
pop
sbb
mov
fisubrl
sbb
fcmovbe
shl
jnp
call
sbb
xchg
or
mov
fs
mov
cltd
and
push
and
stc
xor
sbb
dec
in
jne
jecxz
push
jg
cmpsb
and
dec
xchg
xlat
rorb
jp
stc
push
add
jp
sub
mov
add
movsl
aas
or
push
enter
sbb
aam
add
lcall
and
cmpb
call
jl
insb
ljmp
dec
jge
lock
aam
pop
xor
inc
aas
mov
mov
ds
fidivl
sbb
pop
in
push
stos
cmp
inc
jo
jl
imul
loop
xchg
dec
pop
fstpt
lcall
jno
jns
test
daa
cmp
xor
dec
ds
cmpb
nop
aad
mov
jmp
xlat
mov
scas
cmpl
outsl
sar
neg
jmp
je
mov
push
mov
push
dec
shll
fnstenv
fs
enter
mov
or
lcall
dec
mov
dec
push
fsubrs
es
aas
notb
pusha
sub
jle
inc
mov
shl
and
inc
lret
mov
sub
pop
insl
aaa
stos
xor
test
std
mov
cwtl
fcmovbe
adc
push
sarb
into
inc
imul
xchg
out
sub
push
test
jg
loopne
orb
not
cli
dec
imul
lahf
lcall
mov
xlat
scas
pop
roll
ret
mov
push
pop
bound
rcrl
sub
test
je
rclb
mov
mov
sahf
ficompl
jbe
mov
int3
mov
ret
popf
movsl
mov
mov
pop
xor
insb
arpl
sahf
movsb
push
in
gs
cmp
int
scas
pusha
add
pushf
cltd
jge
mov
aas
imul
lock
push
inc
cmpsb
jno
or
xchg
call
test
mov
sahf
je
adc
xchg
jl
pop
mov
push
mov
cmp
xchg
pushf
inc
push
ret
push
xchg
push
jg
mov
ljmp
ja
subl
shlb
mov
scas
bnd
imul
or
fnsave
push
lods
mov
mov
mov
out
mov
outsb
loope
pusha
stc
mov
inc
sub
jp
or
mov
arpl
mov
push
jbe
aas
fistl
jns
inc
int
or
inc
inc
rclb
inc
addr16
mov
enter
les
fisttpll
pop
inc
push
sub
adc
mov
arpl
sbb
mov
push
shrl
aaa
dec
rcrl
mov
and
and
sbb
add
in
mov
cmp
test
xor
jne
push
cmp
inc
fwait
in
xchg
testb
iret
jno
push
pop
xlat
cmp
xor
inc
mov
ds
pop
aad
loop
push
cwtl
push
push
imul
push
lcall
inc
mov
call
sub
test
xchg
pop
dec
inc
push
or
xor
loope
mov
push
incb
xchg
pusha
das
adc
xlat
mov
outsb
sub
imul
aas
aad
pop
mov
xchg
shlb
jecxz
pop
mov
jecxz
inc
stc
ret
loop
hlt
mov
test
rcrb
cs
pop
js
insl
sbb
cmp
in
pusha
cmp
addr16
jmp
pushf
stos
jg
cmp
aam
push
inc
sub
push
cld
dec
es
mov
into
push
aad
cmc
imull
sbb
inc
call
push
dec
aam
jae
fstpt
stos
adc
lea
push
lods
call
or
and
push
fiadds
loopne
imul
int3
hlt
cld
inc
nop
add
les
cmp
into
jae
adc
or
iret
loop
insl
sub
jmp
adc
popf
inc
jg
stc
cmpsb
xor
bound
jo
dec
jo
adc
popa
mov
pushf
jns
daa
addr16
cmpsb
jle
inc
push
inc
mov
gs
test
sti
sbb
jp
pop
mov
push
push
adc
inc
imul
shl
inc
cwtl
sbb
ja
mov
push
out
pop
inc
shlb
stos
mov
xchg
pop
push
call
inc
sub
jg
repnz
imul
xlat
jns
xor
or
cli
leave
mov
or
sub
sbb
es
leave
push
jmp
cmp
push
mov
xor
into
loope
sbb
jp
jecxz
pop
xchg
icebp
mov
loopne
sub
dec
mov
out
pop
pop
nop
xchg
cmpsl
ds
pop
sbb
dec
xor
and
mov
xor
inc
cltd
xlat
lds
mov
cmp
dec
jae
sub
clc
pop
call
cmpsb
iret
das
frstor
sahf
hlt
push
mov
mov
inc
sub
hlt
test
inc
lcall
rcrl
mov
fwait
cmp
out
movsl
jl
dec
cmp
ret
mov
cmp
jecxz
imul
add
repz
push
fidivrl
adc
in
sbb
enter
pop
ficompl
inc
push
mov
push
push
leave
lods
xor
pop
sub
dec
cltd
inc
inc
pop
std
outsb
int
jp
cmpsl
addr16
clc
pop
lret
sub
sub
push
sqrtps
in
mov
les
fsubrl
pop
repnz
pushf
mov
xchg
sbb
ljmp
add
push
jg
xor
xor
inc
inc
ja
or
mov
aas
dec
ss
int
gs
cmp
or
dec
inc
pop
lea
ljmp
mov
add
std
out
inc
xor
rol
inc
and
pop
shr
repnz
sbb
push
or
push
jmp
fwait
push
inc
mov
jno
sahf
xor
loope
fwait
mov
fadd
push
inc
and
mov
lods
jle
push
jbe
stos
cmc
add
add
aaa
jne
sub
aas
int3
add
sbb
imul
out
inc
xchg
shl
dec
add
sbb
xor
xchg
ret
add
mov
sub
clc
aad
sub
mov
rcrl
fcmovb
mov
or
inc
push
push
mov
insb
sbb
repnz
movsb
in
and
or
rcl
sahf
fnstenv
andl
loope
out
pop
movsl
inc
dec
ficoml
js
sbb
mull
daa
inc
pop
out
fdivs
insl
adcl
test
cli
cmpsl
xor
inc
scas
mov
and
mov
xor
mov
aad
inc
pop
sahf
push
sub
call
stos
xchg
cltd
mov
xor
mov
lods
in
adc
data16
push
mov
mov
divl
repnz
fiadds
adc
cli
push
mov
std
out
xchg
andnps
xchg
addr16
ds
add
jle
xchg
jns
test
stos
pop
cmp
aad
pop
push
mov
lahf
aad
pop
push
roll
inc
outsl
lahf
loop
push
jge
stos
push
loop
imul
add
jge
cmp
inc
rorl
insl
mov
outsl
xor
adcl
leave
aaa
cmp
dec
pop
pop
jmp
stos
push
add
xchg
rorl
pop
jge
inc
push
dec
sub
fdiv
jae
pop
push
jnp
or
push
sub
xchg
mov
xchg
insb
and
fnstsw
xorb
lcall
xchg
hlt
stc
dec
and
push
rcrb
xchg
sbb
into
jo
mov
xchg
mov
out
cmp
push
aam
xchg
jae
lods
stos
adc
adc
pop
cltd
aad
stos
xor
sar
imul
xchg
loope
adc
sub
add
pop
pushf
cmp
imul
add
and
xor
xor
sub
in
mov
les
outsl
idiv
dec
or
fistpl
insb
loop
jae
mov
lcall
rcll
sub
insl
jg
out
jns
mov
mov
xchg
and
dec
sub
fs
jge
adc
clc
dec
pop
out
data16
out
jb,pt
fwait
mov
lds
add
jp
or
orb
xchg
movb
push
inc
fdivl
mov
mov
stos
mov
and
adc
stc
cmp
sub
lcall
lea
cmp
cmpsl
sbb
sub
and
jg
popf
sub
dec
mov
push
mov
sti
dec
pop
je
fistl
mov
xchg
mov
mov
or
enter
jae
xor
insl
mov
cwtl
popa
mov
sbb
std
fisttps
ret
das
push
repnz
rorb
stos
add
mov
mov
subl
out
std
movsl
inc
das
mov
push
test
pushf
push
jge
scas
push
pop
jno
call
dec
in
jo
xchg
scas
dec
loop
inc
stos
mov
cld
push
mov
cld
sbb
adc
add
adc
pop
arpl
push
inc
xchg
fwait
mov
push
pop
test
in
xor
push
sub
ror
inc
dec
jns
jae
sti
and
orl
rcrb
pop
fs
jo
mov
mov
cld
mov
test
repnz
dec
aaa
fwait
ret
jecxz
scas
adc
mov
jp
cmp
mov
dec
sbb
bound
push
cmp
inc
pop
repz
sub
adc
cmpsl
js
jg
xlat
stos
scas
xlat
ret
das
test
add
xchg
hlt
cmp
xor
mov
cmp
push
insl
jl
aad
push
ss
stos
iret
pop
xchg
call
je
xchg
negl
insb
xor
lock
into
aas
in
sub
sub
xor
xor
les
mov
std
aaa
leave
shl
lret
ss
sbb
lcall
out
std
xchg
mov
cmp
mov
and
jle
je
call
dec
sub
mov
or
loopne
or
or
or
jmp
jns
adc
mov
pop
lahf
xchg
mov
pop
das
icebp
sub
in
mov
adc
sub
movsl
push
ret
push
jp
lahf
and
int
out
xchg
out
pop
rolb
jb
xchg
cli
mov
xorl
cmp
adc
or
sar
scas
lods
shr
jmp
scas
notl
insb
gs
jnp
test
push
adc
sub
mov
stos
mov
lcall
scas
loope
scas
mov
xor
cli
dec
mov
lahf
adc
jecxz
pop
je
mull
stos
outsb
in
xorl
and
jp
jg
mov
inc
cmp
gs
arpl
or
dec
push
push
andb
adc
movsl
popf
jne
addl
xchg
fdivrl
aad
sbb
or
adc
dec
ljmp
je
sbb
xchg
dec
push
xchg
test
pop
mov
fstl
adc
adc
jge
pop
stos
int3
sbb
or
popf
and
sbb
or
jl
mov
mov
aas
mov
pop
int3
adc
pop
frstor
push
iret
aaa
call
fsubl
pop
xchg
or
jbe
xor
add
inc
dec
push
hlt
jne
mov
add
popa
popf
jp
les
mov
mov
mov
scas
addr16
mov
pop
test
stos
pop
mov
fldlg2
lret
mov
and
jge
inc
mov
xor
bswap
insl
mov
mov
hlt
dec
decl
adc
lea
fnstenv
loopne
mov
lods
pop
mov
add
dec
cld
shll
inc
push
and
inc
add
sarb
mull
jecxz
jno
rcrb
jns
push
in
outsb
lods
cmp
pushf
loop
add
mov
mov
pop
and
clc
or
lods
ja
adc
push
fsubl
test
sbbl
mov
stos
test
pop
int
pop
xor
fsub
cmpsl
inc
adc
leave
in
std
add
push
mov
lock
dec
imul
push
test
mov
inc
into
cmc
push
jae
fisttpll
dec
xor
movsb
test
inc
push
test
mov
lds
dec
subb
ljmp
call
jae
mov
or
fndisi(8087
mov
pop
lods
lcall
int3
fstpt
xor
sbb
mov
mov
sbb
or
call
or
xor
aad
out
or
dec
sub
jae
sbbl
stos
or
jbe
push
jbe
adc
sti
or
aad
cmp
adc
mov
sbb
xor
rcll
inc
aas
dec
inc
cli
mov
pop
outsl
mov
test
pop
xchg
fisubrs
popa
mov
popa
inc
sbb
inc
rcrl
imul
push
mov
push
jge
test
jg,pn
aad
inc
leave
mov
cwtl
push
or
adc
mov
push
or
out
inc
loopne
mov
pop
add
cmp
fs
rcll
insb
mov
into
inc
mov
daa
negl
es
add
add
push
dec
outsb
dec
sub
frstor
leave
or
jae
sbb
jns
imul
sub
test
pop
dec
cmp
rcrb
mov
stc
sbb
sub
sub
pop
ret
cmp
imul
push
jo
xchg
cld
pop
or
or
adcb
cmpsb
gs
cmp
cli
jmp
mov
in
fucomip
fdivr
xchg
xor
mov
mov
mov
mov
or
sub
sub
pop
sub
js
mov
mov
xor
loope
adc
xor
cmp
dec
add
fs
pop
xchg
mov
pop
test
sarl
sub
mov
jb
jno
mov
stc
jne
xchg
dec
iret
pop
push
jb
dec
adc
push
roll
cwtl
and
inc
pop
lcall
or
mov
jns
pop
and
dec
jecxz
push
pop
xchg
repnz
inc
lahf
xchg
loop
sub
jb
scas
add
xor
jns
lea
cwtl
or
in
and
inc
setge
mov
nop
popa
mov
jg
cmc
rclb
aam
push
mov
mov
inc
mov
ret
pop
lock
bound
sarl
movsb
jmp
das
adc
fisttpll
das
push
int
or
rcr
outsb
or
jecxz
cmp
je
insl
imul
and
xor
out
inc
ljmp
ljmp
aad
je
pop
and
lcall
movsl
bound
in
aas
mov
movsl
xor
and
mov
xor
sahf
cmpsb
jbe
push
and
in
ljmp
test
or
sbb
or
rcr
clc
dec
cmp
and
xor
cli
mov
pop
call
sub
xchg
jle
lock
mul
mov
push
add
push
repz
and
adc
jp
jp
xchg
aam
pcmpeqd
cmc
sbb
push
jge
clc
cmp
mov
cmp
mov
into
push
js
mov
fiadds
rcll
pop
in
sahf
inc
das
andb
jns
int3
push
pop
scas
loopne
jno
das
or
push
imul
inc
ret
nop
arpl
cltd
or
pop
push
cld
cmpsb
lcall
pop
dec
daa
in
lods
mov
push
jp
and
add
xorl
subb
mov
jecxz
xchg
enter
int
jp
xchg
add
lods
sub
cmp
lods
push
cmc
outsb
xchg
out
dec
mov
js
adcl
sub
adc
add
out
rorb
in
faddp
jg
rorl
icebp
and
mov
xor
pop
dec
inc
out
pop
outsb
xor
jns
jne
popf
mov
fwait
out
outsl
hlt
cmp
push
ret
es
int
pop
movsl
jg
roll
adc
movsl
lret
into
or
inc
mov
fsubrl
mov
mov
inc
mov
idiv
inc
jmp
dec
add
je
xorb
jbe
cltd
loopne
lock
mov
xchg
and
pushf
aaa
jbe
mov
repz
adc
mov
fldl
push
repnz
xchg
cs
lock
xchg
xor
lods
addb
adc
sbb
or
mov
inc
lods
and
jo
repnz
xchg
pop
mov
adc
and
fisubl
sub
out
out
daa
jp
scas
dec
sbb
mov
mov
lods
jns
mov
stos
outsl
jo
lea
ret
mov
xor
cmc
cmp
and
jge
xor
loopne
dec
stos
adc
cmp
mov
enter
ret
mov
dec
fidivs
mov
out
lock
cmpsb
dec
outsl
sbb
xchg
dec
into
filds
adc
or
std
push
xor
fs
lods
xor
dec
xchg
mov
xchg
sti
jmp
dec
mov
xchg
and
cmp
pop
popf
sarb
mov
dec
sar
sub
add
push
inc
outsl
xchg
repz
xchg
mov
xchg
mov
mov
inc
lods
xlat
adc
stos
cmp
push
mov
push
fcomp
cltd
cmpsl
xchg
mov
push
fxch
imul
mov
jo
push
or
sbb
fstpl
sub
loop
rcrl
mov
xor
xor
out
cli
cmpsb
sub
mov
push
add
fcoms
aam
shlb
jmp
lahf
aad
jb
out
mov
pushl
int
push
dec
out
sub
or
push
clc
lds
sub
cmpsb
dec
cmp
imul
sbb
cli
bound
loopne
jmp
mov
sub
fs
pop
mov
call
je
xlat
pop
test
xor
in
iret
mov
cmpsb
loope
sbb
add
mov
cmp
int
int3
sub
andb
gs
xor
ret
int3
lods
push
test
fs
push
adc
mov
sbb
repz
xchg
lock
mov
insb
jb
fildll
fidivrs
push
scas
addr16
fwait
jge
mov
mov
push
out
cltd
push
arpl
adc
mov
nop
xchg
scas
pop
jmp
or
cwtl
push
mov
and
fadds
std
js
test
pop
loopne
movsl
jb
shl
shl
push
sbb
push
gs
xor
adc
mov
or
jg
imul
sub
jo
pushf
inc
mov
lods
mov
jb
add
ljmp
jle
sbb
jmp
adc
sub
fstps
je
fldt
ds
popa
mov
test
cmp
insb
in
mov
insl
lret
pop
pop
xchg
loope
xor
ss
mov
hlt
loope
lods
adc
push
faddl
cmp
add
push
inc
mov
insl
xchg
jp
jl
stc
mov
testb
jl
mov
pop
inc
fstps
outsl
rcl
and
dec
push
jge
lods
mov
and
mov
or
sub
xchg
dec
outsb
fbld
or
push
adc
arpl
jle
jno
aas
in
icebp
loope
les
jns
dec
pop
addr16
cmp
sbb
repnz
repnz
sahf
int
cs
hlt
fmuls
dec
adc
xchg
mov
int
gs
mov
cmp
mov
insb
mov
movsb
add
aaa
ss
jl
arpl
xor
push
xchg
xchg
pop
or
jmp
mov
jl
sub
sub
xchg
xchg
xor
sub
xchg
xchg
sbb
jecxz
ss
mov
popa
add
pop
cli
sbb
scas
add
shlb
cli
or
sub
mov
cmp
ja
daa
and
jne
mov
out
ja
jo
mov
stos
sbb
pop
lock
cmp
mov
sbb
xor
pop
adc
out
cli
mov
icebp
or
ljmp
mov
xchg
jno
adc
divl
imul
inc
fs
mov
stc
xchg
stos
push
nop
fwait
xorb
jbe
xor
jae
sub
mov
aam
aas
aas
stos
and
pushf
movsb
sbb
scas
into
sbb
and
cmc
cmpsb
xchg
mov
outsl
cmp
adc
push
push
iret
mov
xchg
cltd
pop
pop
or
aas
cmpsl
sarb
jg
dec
jb
mov
mov
xchg
jnp
mov
out
stos
jbe
mov
ds
cmp
pop
es
sbb
aam
and
lcall
inc
cltd
mov
cmp
ret
pop
imul
jge
push
ret
sahf
fidivrs
gs
lahf
mov
pop
or
cmc
mov
add
cld
push
fsubrl
clc
or
cmp
icebp
push
mov
pop
fwait
movsb
in
mov
into
imul
imul
test
call
mulb
push
ds
mov
xchg
push
add
sub
ds
mov
scas
or
adc
mov
in
mov
jne
inc
movsl
jmp
dec
sub
sar
dec
out
cmp
cmpsb
and
pop
inc
push
sarl
cld
push
shll
push
xor
inc
lret
test
xchg
and
jge
mov
mov
out
mov
sub
fs
cltd
jnp
iret
aaa
test
bound
imul
dec
sub
mov
leave
mov
fdivrs
push
lret
lret
test
pop
sti
xchg
hlt
xchg
push
out
push
testb
mov
dec
bound
xchg
faddl
pusha
jmp
cmp
pop
gs
loopne
mov
xor
xchg
movsb
in
adc
bound
push
xchg
data16
push
lods
or
mov
cmp
mov
add
pop
movsb
cltd
sub
dec
or
fucomip
cmp
and
inc
ds
sub
mov
or
jno
xchg
int3
or
sbb
jg
loope
inc
xor
xor
or
jns
repnz
mov
pusha
das
shl
addr16
push
dec
jns
cmp
imul
mov
pop
add
pop
rclb
push
shrb
push
ja
aas
mov
stos
addr16
mov
pop
in
fbld
out
cmp
rorb
dec
lret
je
pop
push
mov
cmp
mov
in
push
or
orl
leave
pop
add
cwtl
pop
mov
mov
xchg
mov
mov
push
lds
fdivp
sub
pop
push
push
mov
pop
dec
filds
call
adc
push
les
pop
xor
test
subl
xor
dec
mov
ret
icebp
sub
xorl
and
andb
test
mov
sub
xchg
stos
push
jl
push
scas
mov
jne
divl
in
popf
lods
lahf
fcoms
pop
es
ret
lahf
mov
sub
sub
sub
loop
adc
jge
imulb
test
sub
cmc
jb
cmpsb
sub
in
into
stos
sti
sub
sti
cwtl
cmp
std
nop
dec
fsubr
clc
xchg
inc
push
test
add
stos
pop
cmp
arpl
cwtl
xchg
lods
cmpsb
rorb
in
es
loop
gs
rcll
shll
test
dec
ja
sbb
push
insb
in
cltd
xchg
test
aas
sbb
gs
ret
das
mov
pop
xchg
fsts
lock
dec
mov
movsl
lahf
jae
mov
arpl
pop
and
mov
imul
pusha
lds
inc
cmp
adc
mov
pop
push
cltd
cwtl
pushf
into
sbbb
fildl
aad
inc
data16
imul
sbb
jae
jg
outsb
jo
pushf
filds
movsb
push
push
and
sbb
jne
sub
cs
cmpsl
out
mov
mov
scas
mov
mov
xchg
cmp
or
adc
sti
in
sub
add
add
push
imull
outsb
mov
andb
add
daa
adc
in
sub
and
push
pusha
cmpsl
xlat
arpl
hlt
movsb
movsl
sbbb
mov
shr
divl
imul
fs
mov
pushf
xor
xor
push
mov
pop
loop
stos
daa
loop
mov
int3
iret
and
fsubl
daa
out
mov
pusha
out
sub
into
icebp
addb
push
pop
movsl
sti
mov
stc
aad
int3
adc
ja
loopne
cmpsl
jae
ljmp
push
loope,pn
dec
pop
dec
test
pop
aam
pop
out
push
out
cmp
out
out
xlat
arpl
daa
mov
sub
test
rcl
pop
xchg
or
or
inc
inc
outsl
add
mov
jg
inc
ja
pop
add
pop
mov
aas
fsubs
les
ret
push
pop
jg
xchg
ret
xor
or
mov
xchg
pop
shrl
aad
loop
xchg
jp
and
shlb
std
mov
testb
call
jne
out
mov
mov
cltd
cmpb
ficomps
mov
xchg
sahf
xor
mov
add
or
adc
push
lret
pop
ss
sbb
pop
or
test
xchg
push
and
xor
sbbl
jp
mov
int
sbb
addr16
stc
mov
mov
cmp
mov
add
stos
push
or
mov
clc
mov
lds
js
mov
xchg
dec
push
push
sub
call
xor
rorl
jp
in
add
cmpsb
pop
pop
pop
sub
sbb
jnp
add
push
hlt
inc
into
out
out
nop
sbb
fnsave
pop
push
in
inc
lret
xchg
cmovno
cmpsb
jmp
or
aas
mov
pop
pusha
sbb
in
mov
andb
cwtl
fcmove
inc
mov
stos
aad
fsubrl
aam
fsubrl
or
div
testb
or
cltd
in
sbb
fistpll
ret
adc
push
and
lods
mov
push
jg
cmpsb
mov
mov
popa
lret
les
lahf
je
xchg
cmp
push
jecxz
test
xor
sub
adc
add
add
add
xchg
cmpsb
mov
pop
aad
sub
bound
frstor
repnz
ljmp
out
data16
jl
ja
lret
lea
aaa
add
push
mov
loopne
adc
jle
mov
or
push
in
es
cld
nop
mov
mov
add
xchg
inc
cmp
ror
clc
dec
cmpsl
adc
sbb
jp
jl
sub
mov
push
popf
push
sub
ds
jbe
popf
inc
inc
mov
subl
sbb
sbb
js
adc
push
jo
cld
inc
fldcw
xchg
add
push
fsubrl
xor
stc
outsl
outsl
pop
pusha
in
test
mov
xchg
or
push
ss
stos
ja
add
cltd
pusha
push
mov
test
mov
lds
jp
jne
out
mov
sahf
fbld
outsl
cmpl
mov
push
sti
pop
sub
ret
addr16
scas
test
movsl
scas
dec
xchg
pop
push
pop
mov
cmc
loopne
setnp
aaa
jo
fsub
adc
mov
sbb
mov
lds
notl
jnp
mov
push
jl
rorb
insl
jge
dec
mov
push
fwait
inc
inc
out
movsl
rorb
stc
mov
or
jb
ret
shll
xchg
cmpsb
pop
sbb
test
hlt
test
fnsave
das
cs
dec
in
mov
jo
and
mov
loope
push
sub
mov
adc
push
inc
test
mov
clc
mov
test
stos
push
sti
xor
adc
sbb
inc
dec
scas
adc
mov
jmp
cli
mov
repnz
xor
mov
add
mov
stos
cmp
mov
sub
arpl
out
jl
lahf
jl
pop
mov
xchg
jg
adc
jg
loop
mov
sub
int3
cmc
es
xor
repz
notl
xor
iret
rclb
sub
sbb
call
sub
dec
inc
mov
sub
test
testl
jmp
dec
push
ljmp
cmpsl
sbb
in
aaa
int3
dec
sub
xchg
sub
addr16
pop
inc
fidivs
leave
imul
sub
out
sub
and
jno
mov
mov
push
fmulp
stos
add
lods
mov
ja
xchg
push
mov
popa
sahf
addl
sar
lahf
push
xchg
fs
loopne
das
mov
jns
insl
jl
mov
test
xor
mov
int3
cmpsl
daa
mov
mov
xlat
adcl
adc
mov
idivl
out
call
test
xchg
lds
push
adc
sbb
movswl
ja
sbb
or
mov
outsl
mov
sbb
in
sub
cmp
lock
inc
xor
mov
in
push
add
arpl
and
mov
loope
ds
out
ret
les
dec
or
jg
inc
out
sub
clc
and
inc
loop
mov
jp
daa
repnz
sahf
adc
or
jmp
mov
popa
pop
movsl
lock
add
lahf
mov
push
shll
les
mov
or
cwtl
sbb
test
xchg
addl
fisubrl
mov
push
bound
aam
xchg
mov
jae
addr16
in
xchg
out
sbb
push
inc
sbb
sub
pop
in
cmp
ja
jl
xor
push
jge
ret
fistpl
mov
cs
mov
insb
cmp
push
jb
pop
dec
xor
sbb
sahf
mov
xor
out
stc
das
mov
jnp
dec
in
fstpl
cmp
mov
sarl
sbb
and
sub
cmp
jbe
arpl
jecxz
outsb
push
xchg
jmp
sub
lds
decl
fldcw
adc
scas
test
jbe
dec
sbb
inc
popa
adc
dec
and
mov
cmp
pop
push
xlat
pushf
xor
add
mov
scas
loope
push
aas
cmp
add
xor
test
leave
push
cmp
mov
xor
push
cvttps2pi
in
jle
xchg
aam
pop
jno
xchg
cmp
popa
movsl
and
rcrb
jle
mov
adc
sahf
sub
xchg
xchg
add
in
in
icebp
mov
mov
std
scas
bound
out
shr
xor
pop
nop
mov
push
or
cmc
mov
iret
or
fcoms
pushf
das
pop
aaa
or
push
mov
push
repnz
cmp
repz
or
repnz
or
lods
or
lret
lods
jae
ss
sub
inc
clc
jbe
in
add
jb
andl
pusha
push
xor
fimull
mov
mov
imul
in
outsl
pop
and
ss
adc
shrl
addr16
jp
shr
jmp
jbe
sbb
std
jecxz
cmp
mov
hlt
pop
add
push
pushf
jo
xlat
lock
cmpsl
sub
out
sbb
fcmovnbe
or
sahf
jne
and
rorl
sar
ret
arpl
test
push
pop
inc
sbb
push
imul
scas
in
sub
testb
jae
daa
jl
inc
daa
add
gs
adc
lret
push
cltd
and
cli
cmpsb
pop
loop
outsb
add
cmp
sbb
out
ss
add
cmp
ljmp
sbb
cld
jns
loopne
adc
push
sbb
push
fs
push
out
xchg
xchg
or
mov
add
rcll
cli
jp
iret
stos
jb
ja
xor
leave
cmp
cmpsb
cltd
pop
cmp
subl
orl
sbb
aaa
aam
jl
and
in
mov
lea
mov
imul
iret
js
orl
xchg
and
mov
sahf
movsl
sub
je
mov
xlat
xchg
mov
loop
cltd
je
insb
inc
cltd
arpl
jecxz
je
inc
jno
out
test
pop
fs
jbe
adc
xchg
adc
fs
data16
dec
jae
or
jle
or
outsl
jae
cltd
mov
add
push
dec
mov
dec
movsl
pop
shrb
daa
andb
inc
mov
imul
mov
cmp
mov
ja
in
into
scas
lods
dec
mov
jno
ds
int
and
mov
ret
jno
fdivp
push
in
cmp
xchg
mov
mov
int
cmp
mov
sbb
iret
cmp
add
and
je
faddp
mov
sub
hlt
in
mov
add
push
jbe
fucomi
addr16
inc
sub
sub
nop
movsl
push
pop
stc
daa
addr16
push
mov
mov
pop
mov
mov
jmp
mov
and
mov
popa
or
out
in
cltd
and
lea
lock
xchg
push
fstl
and
shlb
hlt
mov
scas
and
aad
jg
jnp
push
fmul
jge
jbe
mov
dec
jb
ljmp
sub
lret
cmp
lods
dec
mov
in
or
ss
leave
pop
les
scas
mov
or
jp
loopne
xorl
cltd
jnp
pop
inc
nop
and
test
clc
push
daa
dec
mov
jae
cmp
or
inc
jns
cmp
ljmp
loope
jo
and
xchg
mov
jns
inc
sbb
mov
movsb
xchg
jns
inc
add
add
inc
xchg
out
and
push
cmp
inc
ss
pop
dec
adc
cwtl
repnz
push
pushf
ret
test
dec
xchg
mov
int
pop
negb
push
pop
push
adc
daa
clc
dec
xor
push
cmp
test
pop
push
out
adc
pop
mov
fdivrl
add
call
inc
out
repz
fistps
out
mov
call
loop
out
fwait
outsb
outsb
pop
sti
jle
repz
mov
fbstp
jno
or
fldz
lcall
loope
dec
shr
mov
push
xor
rorb
out
adc
dec
icebp
int3
xor
imul
inc
fwait
leave
add
cwtl
lret
and
dec
shlb
insl
pop
movsl
pop
mov
sbb
xchg
pop
pop
clc
add
or
leave
jo
xor
rorb
mov
adc
pop
daa
sbb
mov
and
sub
or
pop
add
inc
or
pop
cmp
ss
call
js
cmpb
mov
cli
xor
inc
aaa
cmp
mov
repnz
xchg
mov
bound
cmp
pushf
adc
cwtl
call
fildll
ret
imul
push
push
dec
mov
mov
hlt
and
pop
out
jmp
jnp
xchg
inc
out
push
lods
inc
call
out
mov
mov
cwtl
in
sbb
lret
pop
sub
hlt
lret
scas
jns
cs
mov
dec
call
cmpl
mov
pop
jnp
push
and
inc
mov
addb
hlt
pop
sub
xchg
sub
pop
nop
or
xchg
mov
icebp
jecxz
pop
xor
stos
adc
xor
mov
cwtl
test
loop
fistl
nop
dec
push
mov
ret
mov
adc
dec
push
and
xchg
pop
xchg
pop
xchg
in
jecxz
push
nop
dec
cmp
shll
add
gs
mov
xchg
jne
jnp
in
js
mov
add
jne
cmpb
add
lods
imul
rorl
das
sub
mov
add
add
dec
mul
out
rcrl
xchg
push
negl
sub
enter
fldenv
imul
dec
dec
imul
and
flds
out
gs
popf
test
jmp
jo
cmovae
sahf
inc
jo
out
in
xor
add
xor
sub
cmp
in
adc
sbb
lods
es
xchg
popa
std
lods
outsl
rcll
mov
lock
fdivr
jbe
clc
add
pop
nop
jmp
aad
jge
push
dec
fs
or
ja
add
aam
jmp
out
repz
mov
repnz
xor
fnstenv
subb
jnp
pusha
enter
cmp
negl
ljmp
negl
aam
pop
mov
out
es
fidivrl
jb
mov
hlt
aad
xor
sti
lea
je
pop
adc
jbe
inc
push
int
cmp
es
ss
fistps
lcall
or
inc
cli
psadbw
mov
push
mov
test
ss
push
movsl
pop
pop
xor
pop
xlat
pop
sub
fisttps
ds
add
add
push
add
dec
mov
in
mov
xchg
in
push
add
add
cmpb
jecxz
sbb
or
addr16
jge
sbb
xchg
mov
aam
cld
stos
mov
sbbl
out
adc
cmp
aam
cmp
sub
pop
mov
rcrl
sub
pushf
and
lret
push
int
sub
sbb
ret
push
inc
xor
push
icebp
mov
loope
mov
jle
dec
xor
jg
js
das
pop
mov
dec
daa
sbb
mov
shll
xor
mov
add
icebp
add
ss
shlb
cld
adc
cmp
pop
out
pop
sbb
inc
mov
push
fucomp
punpcklbw
jge
dec
dec
cmp
mulb
jns
inc
lcall
xor
enter
sbb
cwtl
movsl
iret
cmp
pushf
mov
cmpsb
pop
or
hlt
push
cmpsl
dec
push
dec
cmc
jg
and
mov
std
pop
lock
int
and
fisttpl
daa
jg
adc
ds
jmp
pop
inc
out
cwtl
aam
mov
addl
dec
sub
and
add
jnp
sub
cmp
cmpsl
sarb
push
cmc
das
das
cmpsb
jo
pop
and
addb
inc
sub
hlt
sti
pop
lea
mov
test
cmp
or
insl
pop
pop
cmp
push
cs
daa
xchg
repz
inc
push
dec
dec
mov
ret
dec
xor
mov
fnsave
hlt
in
dec
mulb
lret
dec
adc
and
popa
sti
popf
and
mov
out
sahf
lock
pop
imul
pop
mov
mov
out
dec
out
test
pushf
inc
mov
pop
movsl
cmp
clc
insl
mov
and
into
fisttpll
dec
cmp
lock
mov
dec
add
xor
jp
jno
mov
cwtl
cmp
stos
mov
shrb
or
pop
test
mov
jb
and
fcompl
inc
loopne
pop
xchg
cmp
in
sbb
push
hlt
pop
int
and
rcll
jl
xchg
mov
inc
ljmp
fs
es
loopne
adc
pop
xchg
pusha
movsb
jg
bound
mov
scas
push
sub
ret
cwtl
lds
pop
enter
xchg
xor
fidivrs
xor
shrl
std
repz
mov
cwtl
inc
push
sub
fistpll
dec
sub
sbb
dec
out
mov
jbe
pop
in
xchg
jnp
cmp
lods
push
fidivrl
cmp
std
fdiv
xchg
out
sti
test
cmp
sahf
mov
clc
loopne
inc
pop
pop
loope
bswap
lods
aaa
ficoms
mov
add
repnz
xchg
fwait
jne
cmp
dec
arpl
call
jns
sub
dec
adc
adc
sbb
or
mov
dec
adc
jae
pop
cmpsl
gs
pop
rcl
push
xchg
notb
xlat
push
repz
push
loop
aas
into
push
or
sahf
movsb
push
dec
in
jmp
add
nop
xor
jp
lock
mov
dec
cmpsb
jle
dec
inc
fs
mov
sub
and
dec
inc
and
insl
lahf
and
cmp
sti
fistpll
fistpll
iret
push
insb
sub
and
inc
roll
test
or
adc
int3
pop
fidivs
testl
mov
pop
fs
cmp
cmpsb
bound
mov
mov
add
imul
cmp
inc
sub
mov
add
mov
jge
out
lea
push
dec
out
iret
mov
push
jmp
mov
add
xor
sahf
xchg
stos
mov
inc
popa
out
sub
pop
jecxz
shrb
insb
and
mov
rcl
push
add
mov
xchg
pop
push
xchg
stos
push
dec
or
mov
mov
out
jge
dec
adcl
mov
in
xor
pop
inc
dec
lods
xor
sbb
mov
rcl
jge
cmpsl
lods
or
cmpsb
popf
mov
ret
xchg
mov
fwait
mov
add
movsl
mov
cmp
dec
outsl
or
mov
mov
sbb
repnz
orb
fs
cmp
push
add
adc
or
add
leave
std
jge
cmpsb
nop
daa
xchg
test
xchg
std
test
lret
mov
lea
dec
add
lret
pop
loop
movl
dec
push
insb
add
dec
xchg
or
cmc
add
and
in
and
mov
pop
xchg
leave
pop
mov
xchg
lret
sbb
lds
lcall
xor
cmp
test
mov
cmp
ret
push
ret
mov
jns
xchg
cmc
xchg
mov
mov
mov
dec
xor
sbb
xchg
outsl
add
mov
push
ljmp
pop
fsts
das
xchg
test
pop
inc
sub
sbb
lahf
push
or
jne
hlt
mov
jp
cmp
xchg
xchg
ss
xor
inc
sub
and
pop
mov
or
lcall
pop
jle
and
mov
or
jge
fisubrl
bound
inc
and
sbb
arpl
mov
outsb
test
mov
mov
cltd
mov
mov
cmp
inc
xchg
dec
pop
lods
inc
sub
or
in
aas
fldl
test
stos
notb
pop
cmp
xchg
sbb
xor
scas
clc
iret
or
mov
movsb
push
test
push
mov
cmp
push
inc
es
jae
ds
jp
add
aad
out
lsl
orl
push
mov
xor
xchg
lahf
or
jne
icebp
arpl
push
insb
xchg
out
mov
es
or
cltd
fwait
cwtl
sti
outsb
xchg
and
sbb
push
into
adcb
test
mov
inc
js
xchg
aad
mov
jb
adc
mov
stos
jnp
sub
lahf
sbb
repz
gs
daa
in
and
pop
sub
outsb
loop
repz
push
jne
das
mov
outsl
dec
lcall
adc
incb
mov
ret
dec
lods
in
movsl
jno
sti
mov
repnz
repz
out
aam
inc
and
mov
pop
lret
and
ficoms
cmp
and
add
mov
aas
mov
pop
lret
aad
mov
pop
imul
cmpsb
sti
push
xchg
sbb
shr
xchg
daa
fs
and
adc
pop
fwait
mov
popf
mov
cmp
dec
ret
jae
mov
mov
xchg
sahf
mov
xor
loopne
pop
mov
fwait
xchg
ret
scas
sbb
faddl
pusha
subb
mov
push
aas
shlb
cmpsb
outsl
dec
bound
fdivrl
mov
inc
scas
jae
dec
mov
mov
xchg
inc
cmp
pop
mov
bound
xor
inc
das
vpmovmskb
mov
mov
inc
lds
dec
sbb
sub
es
cwtl
or
cmp
push
mov
mov
sahf
repnz
cmp
iret
dec
cmpsl
fcoms
sahf
lods
test
jp
mov
mov
vmovsd
inc
xor
fisttps
lahf
enter
cmp
aad
stos
cld
inc
push
into
loop
pop
arpl
dec
cs
pop
and
sti
rorb
xchg
addr16
sti
imul
and
sbb
mov
lock
popa
sbb
mov
das
xchg
in
loope
adc
fistpll
jmp
insl
mov
movsb
stc
push
and
popa
nop
sbb
add
incb
dec
and
fs
out
ret
sbb
and
xchg
rcrb
jno
xor
lahf
fidivl
xchg
pmaxub
adc
jp
test
and
pop
outsl
stc
push
jl
jl
ret
jle
mov
jb
sti
or
fiaddl
ffreep
add
scas
cmpsb
insb
out
xor
or
fmuls
jl
out
notl
mov
out
imul
pop
adc
popa
lret
mov
adc
pop
jae
std
xchg
in
sbb
add
in
cs
testl
mov
or
fdivrl
fwait
xchg
aam
movsl
or
push
jbe
imul
filds
inc
testb
lea
add
inc
js
rcr
cmp
push
in
jnp
cs
mov
xlat
cli
xlat
js
or
xchg
xchg
push
aad
push
sbb
cmp
mov
pop
test
out
adc
cmp
test
imul
pop
mov
and
jnp
mov
fstpt
xor
mov
jle
scas
pop
loope
insb
ljmp
lcall
in
dec
ret
cltd
mov
mov
je
xor
mov
shrl
sbb
fcmovnu
push
dec
mov
fdivrl
dec
adc
cmp
loope
cmp
fwait
pop
stc
insl
jns,pn
fists
std
cmc
jne
mov
sbb
xchg
jg
mov
aaa
xchg
push
add
cmp
ljmp
push
lock
jp
cltd
push
ja
mov
pop
push
pop
dec
xchg
xor
sbb
push
fwait
jl
inc
jl
stos
shll
data16
addb
nop
das
pop
call
xchg
dec
push
pop
mov
and
ja
adc
push
popa
repz
into
mov
mov
jb
cld
js
pop
or
push
lahf
dec
inc
movsb
and
add
push
cmc
mov
out
dec
addr16
inc
and
cld
dec
cmp
daa
adc
pop
pop
xchg
mov
pop
lds
mov
jge
mov
addps
xchg
inc
cwtl
xor
sbb
lcall
sub
pusha
xchg
add
mov
push
lahf
add
or
push
adc
cmc
or
sbb
call
xchg
outsl
mov
xor
inc
push
and
cli
mov
mov
popl
enter
lret
or
or
inc
push
pusha
or
add
dec
jne
ficoms
jnp
cmpb
fwait
sti
pushf
js
push
rorb
sbb
jle
mov
lock
jmp
imul
mov
test
sbb
push
sti
incb
gs
out
cmpsl
movsl
jg
add
js
push
lcall
mov
sti
negb
pop
adc
xor
jnp
arpl
lea
cmc
sbb
mov
pop
cli
repz
adcl
sbb
js
cli
add
bound
scas
les
lret
ret
jle
push
mov
push
pushl
in
div
shl
push
mov
push
jge
pop
icebp
test
sbb
xlat
out
or
je
loop
mov
jp
cmp
xchg
movsl
mov
mov
and
inc
xchg
lret
les
stos
aam
jl
cli
jl
sbb
sbb
xchg
jno
ja
jb
repz
adc
push
xchg
lea
fwait
sbb
mov
mov
imul
dec
cmpsl
or
inc
mov
mov
loope
frstor
aad
cwtl
jae
insl
int
jl
push
cmc
in
cmp
jecxz
jmp
cmp
xchg
std
insb
pop
inc
pop
mov
xorb
sub
sub
shl
test
mov
std
cmp
inc
scas
call
scas
adc
jnp
ds
mov
les
pushf
push
dec
push
mov
mov
inc
mov
lea
sub
test
lds
push
xchg
repnz
rcrl
mov
in
roll
arpl
push
xchg
mov
bound
and
or
xchg
lods
outsb
mov
in
adc
jg
mov
shlb
ret
mov
lock
xchg
loopne
ret
in
adc
shlw
ret
sub
dec
stos
mov
fiadds
flds
dec
int3
xor
xchg
enter
jb
fs
cmp
ljmp
pop
push
cli
jg
xchg
xchg
or
inc
idiv
dec
aad
cmc
fmul
test
pop
and
and
cmp
lea
std
aas
xchg
push
imul
ljmp
sub
jns
out
cmp
xchg
fists
mov
aas
test
dec
dec
inc
xchg
repnz
mov
dec
push
and
mov
push
inc
mov
xor
loop
ja
pop
faddl
or
out
cmp
add
sarb
pop
mov
push
push
push
mov
arpl
cli
push
push
out
test
cmc
movsl
test
pop
das
bnd
test
enter
inc
icebp
or
arpl
pop
inc
push
je
mov
std
mov
jae
iret
mov
inc
inc
test
cmp
insb
ret
iret
jp
lcall
out
push
int
lret
cmp
inc
or
and
jle
stc
inc
xchg
stc
push
je
inc
call
lods
std
jle
mov
stos
std
mov
pusha
cwtl
add
mov
rclb
out
cmp
mov
and
inc
stos
gs
and
push
sarl
imul
loopne
mov
and
lea
aas
clc
sbb
in
fnstcw
xchg
dec
pop
sbb
inc
cmp
add
jecxz
call
inc
enter
jp
repz
les
out
ss
pop
pushf
ds
in
clc
lods
outsl
scas
outsl
sbb
push
xor
pop
and
lcall
fmull
xchg
jecxz
xor
dec
mov
loop
stos
cmpsl
sub
aam
xor
or
pop
jnp
adc
push
daa
mov
xchg
xchg
imul
lret
leave
mov
add
mov
andl
pop
fcmovu
stos
test
cli
cmp
cmp
fdivrs
adc
pop
jmp
clc
mov
sti
bound
lret
ret
fstl
dec
nop
inc
outsb
lret
jne
gs
mov
push
mov
addl
addr16
stos
inc
add
xchg
push
lds
mov
stos
test
addr16
movsb
sbb
adc
fcomip
mov
enter
in
add
lret
and
and
cmpsl
jns
lcall
inc
sti
icebp
sahf
gs
jbe
dec
neg
mov
push
push
ljmp
or
stos
xchg
mov
aad
sub
dec
cmp
stos
pop
adc
xorl
aam
xor
mov
pop
cld
xchg
nopl
in
xchg
jg
jo
ljmp
inc
and
jmp
mov
pop
push
daa
cli
add
inc
dec
push
or
fucom
sub
js
push
cld
or
fistpl
shrl
adc
icebp
xor
in
int3
decl
lods
bswap
daa
je
xorl
test
pop
xor
xchg
push
mov
cs
fimull
bound
imul
add
mov
inc
insb
adcb
jno
insb
xchg
mov
das
push
mov
push
xchg
adc
mov
and
xchg
push
jle
aas
cwtl
adc
jmpw
test
pop
add
jnp
ss
xchg
fdivl
sub
jne
push
mov
data16
fsubs
push
mov
in
inc
lds
jno
iret
lcall
lret
imul
aas
fxch
ret
fidivl
cmp
push
push
popa
fwait
jg
inc
jecxz
std
sub
adc
or
data16
mov
sub
push
inc
scas
test
frndint
lcall
hlt
mov
js
adc
imul
adc
lods
sbb
dec
cmp
dec
mov
jle
inc
mov
fcompp
push
mov
jo
mov
enter
add
arpl
stos
pop
sbb
popa
adc
sub
outsl
icebp
add
cmpsl
scas
or
arpl
lret
fadds
popa
out
inc
inc
call
shll
cmc
in
out
stos
lret
inc
mov
dec
push
mov
fs
ljmp
mov
lds
mov
mov
and
negb
mov
pop
outsl
xchg
stos
sub
dec
jmp
sub
sub
fstl
insl
addb
inc
and
mov
jb
je
push
inc
mov
out
pop
ds
lods
ja
jnp
pop
xor
mov
hlt
jl
adc
lcall
lock
push
mov
call
push
jae
mov
mov
sub
repnz
xchg
lds
sbb
or
and
adc
mov
lahf
sbb
pop
adc
jle
loopne
adc
data16
sbb
mov
aam
pop
jg
in
xchg
clc
push
int
push
sti
inc
lods
cs
adc
out
bound
jnp
das
ljmp
and
mov
jl
sbb
test
rolb
rolb
icebp
mov
imul
loopne
mov
jbe
out
jecxz
cli
lret
lea
in
jge
stos
adc
inc
and
mov
pop
fiadds
inc
hlt
fidivrs
sti
sbb
adc
lahf
and
mov
ljmp
xchg
jl
cmp
stos
lods
ds
add
and
mov
push
pop
call
stos
sbb
push
dec
out
pop
push
loope
add
push
or
jp
mov
lock
imul
shl
jmp
jns
jbe
in
mov
mov
movsl
or
sbb
test
and
jecxz
lcall
xchg
cltd
loope
outsl
ret
and
dec
pop
loopne
call
sarb
sbb
cltd
jecxz
je
int3
jbe
pushf
add
adc
scas
xchg
push
push
shlb
daa
push
mov
jg
mov
orl
push
shrb
sbb
aas
bound
mov
pop
cwtl
jg
cmp
xor
das
leave
pop
jecxz
push
xchg
xor
dec
add
sub
mov
sbb
scas
xorb
adc
or
sub
arpl
movsl
std
mov
xlat
in
pop
lock
mov
mov
popf
fidivl
iret
xchg
xor
cmp
pop
pop
push
or
jae
es
lock
pop
jp
xlat
push
cmp
jge
pushf
xor
std
stos
aas
and
mov
xchg
test
stos
and
das
lcall
popa
dec
sbb
test
push
test
mov
mov
xchg
jbe
inc
aad
ds
imul
xlat
mov
jnp
and
cmpsb
jno
inc
add
enter
sbb
add
xchg
stos
gs
rcr
lods
inc
fildll
cmp
movsl
jg
cmp
daa
aam
das
xchg
pop
mov
dec
cmpsb
dec
popf
mov
mov
pop
lret
ret
mov
fldenv
mov
popf
sbb
or
loop
pop
rclb
push
push
add
lret
mov
ljmp
adc
mov
fisttpl
fsubrs
imul
dec
lds
inc
adc
mov
jae
jns
push
js
mov
push
ds
mov
ss
or
jbe
inc
jo
scas
scas
cmpsb
jo
push
dec
push
sbb
mov
nop
jmp
js
out
cmc
stos
xchg
cmpsb
mov
push
pushf
sar
in
pop
sbbl
std
cmp
test
add
xchg
inc
imul
or
ret
push
pop
sbb
xor
inc
jns
rolb
or
or
call
sbb
sbb
add
jnp
imul
cwtl
jns
enter
gs
out
xor
scas
outsb
popa
xchg
cli
or
aam
pop
mov
add
jle
int
aam
push
sub
loop
out
stos
add
cmp
inc
inc
insb
push
cmp
or
out
fs
pop
test
xchg
mov
les
and
xor
xchg
shlb
push
daa
je
imul
std
mov
mov
out
das
out
xchg
sub
jmp
test
scas
shrb
in
and
movsl
cmp
pop
jns
data16
lret
loop
mov
dec
push
sub
sbb
nop
lret
add
js
pop
imul
jg
jg
ss
mov
into
xchg
sub
inc
sub
into
dec
cmp
enter
out
dec
loop
mov
fldl
cmpb
xor
mov
sub
push
imulb
sbb
adc
jb
pop
xor
bound
and
repz
int
dec
lcall
enter
sti
lahf
cmp
mov
jl
jno
outsl
daa
push
mov
push
hlt
sbb
addr16
pop
mov
daa
or
mov
push
jp
in
call
push
or
shr
cs
cmpsl
dec
mov
inc
xchg
or
movsb
mov
idivl
std
cmp
jbe
and
mov
xor
nop
xorb
xor
enter
ret
shr
cmp
adc
sbb
sbb
fcmovbe
add
add
mov
and
enter
addr16
fs
inc
addr16
cmp
sahf
imul
lcall
mov
sbb
sub
jns
aad
push
addl
mov
sub
or
lock
cli
decb
dec
iret
inc
sbb
jg
adc
mov
bound
mov
mov
xchg
out
cmp
push
mov
push
repnz
fstl
mov
jle
ss
js
xchg
dec
xor
jns
stos
add
mov
shll
test
data16
dec
adc
fsubs
xor
sarl
scas
xchg
jo
jne
mov
hlt
rorl
pop
and
adc
test
xor
getsec
es
push
enter
cli
mov
dec
sub
ja
test
out
mov
jno
cmp
mov
lods
push
jb
xchg
incb
push
iret
sub
pop
mov
pop
sbb
test
xor
mov
mov
push
cmpsb
imul
or
dec
je
lcall
shrl
ret
pop
xor
push
jo
mov
ss
inc
cmp
fucomip
or
xor
sar
inc
add
mov
inc
xchg
cmp
fimull
and
or
cmp
fimuls
and
mov
ja
insl
inc
fldenv
jmp
jge
dec
stos
jo
loope
mov
mov
rcll
pushw
shlb
jbe
daa
inc
xchg
arpl
mov
mov
fisubrl
adc
pop
js
adc
cwtl
jno
lea
inc
jg
mov
push
ja
fmull
xlat
test
cmp
xchg
mov
inc
mov
scas
test
out
fxch
jo
repnz
insl
jl
ja
and
xchg
adc
mov
insl
bound
cmp
jnp
movsb
movsl
loope
pop
add
sbb
gs
out
enter
cld
fdivrs
jae
pop
into
mov
addr16
xor
push
test
sbb
pop
jl
or
jg
push
jmp
add
in
jne
push
outsb
sub
lcall
mov
mov
fstps
movsl
or
dec
xor
aam
adc
lret
jmp
cmp
lods
mov
jg
cmp
imul
pop
mov
sahf
loope
add
adc
repz
add
sahf
xchg
mov
repz
dec
push
pop
in
pop
sub
les
push
je
mov
adc
out
fisubrl
jmp
pop
les
scas
sbb
mov
mov
lahf
lret
cltd
test
cmc
test
or
cmpsl
sbb
push
lea
sub
mov
push
mov
pop
push
lock
xorl
sub
pop
ret
and
pop
popf
inc
mov
rorb
out
mov
bound
ljmp
or
and
cli
or
fidivl
pop
popf
das
mov
push
jmp
test
fistpl
sbb
xchg
push
aam
nop
adc
add
imul
std
out
sub
loopew
mov
stos
sub
loope
xchg
pop
jg
adc
jnp
inc
cmpsl
lret
cmpsb
jo
mov
ret
imul
push
mov
xorb
sbb
lret
mov
scas
pusha
sbb
in
into
sarl
cmpsl
dec
cmp
xchg
mov
out
sar
fidivrs
in
mov
scas
aad
dec
xchg
ljmp
mov
mov
jmp
pop
mov
inc
sahf
push
test
daa
jmp
cs
xor
push
dec
outsl
test
add
inc
divl
dec
popa
mov
jg
iret
es
insb
pusha
mov
rep
out
repz
mov
dec
adc
outsb
adc
shll
insl
stos
insb
push
xchg
jb
jecxz
shlb
int3
add
sbb
hlt
js
pushf
xor
add
ljmp
insb
cli
ljmp
adc
shr
adc
and
outsb
fs
sti
pusha
or
repnz
scas
add
sarl
inc
call
pushf
pop
xlat
subl
in
and
rorb
mov
hlt
jo
cwtl
mov
sub
add
cld
jecxz
or
shr
call
aaa
adc
mov
adc
shl
sub
jl
in
mov
adc
cmpl
orb
ss
punpckhwd
scas
cli
adc
push
push
add
jmp
sahf
push
loope
mov
loopne
in
test
in
dec
int
stos
jnp
popw
dec
aad
out
sysexit
push
ret
ret
test
aaa
in
fisubrs
lret
dec
rclb
in
aad
cmp
rol
mov
jbe
fs
dec
pop
in
std
aas
sbb
push
sub
dec
lcall
rcrl
dec
pop
movb
mov
fwait
cltd
sahf
aaa
sub
and
xchg
pop
cmpsb
add
orb
xor
push
mov
test
ds
xchg
pop
les
arpl
adc
jp
pusha
sub
out
test
rcrl
les
xchg
aas
jecxz
add
incb
cmp
out
nop
lret
xchg
inc
ljmp
cmc
dec
int3
outsb
jno
dec
cltd
cmp
push
mov
in
jo
fimull
fs
popa
sub
int
in
mov
sbb
xchg
jmp
mov
xor
pusha
sahf
or
or
fnstenv
adc
test
sub
ds
fiaddl
lods
aaa
sti
push
ds
aaa
movsl
mov
outsb
mov
fmuls
stc
mov
cmpsl
movsl
repz
test
loop
test
dec
mov
push
dec
dec
xor
gs
mov
fnstsw
orb
test
mov
cmpsb
test
jno
adc
inc
call
lods
mov
fnstsw
mov
inc
pop
xchg
xchg
push
mov
cmp
sar
pop
and
sub
mov
aad
push
fmuls
mov
inc
test
pop
lock
adc
ds
in
jo
xchg
test
call
sarb
sbb
or
cs
stos
cmp
sbb
lret
xor
mov
pop
jmp
sahf
pushf
jge
adc
stos
div
int3
mov
xor
and
or
rorl
mov
and
loopne
or
lea
cmc
sub
rclb
adc
sub
bound
sub
test
xor
mov
cld
and
cmp
dec
adc
jnp
adc
rolb
dec
mov
mov
pop
push
pusha
scas
inc
iret
mov
imul
sub
jne
jb
mov
ret
jmp
dec
imul
dec
dec
inc
int
pop
mov
movsb
stos
xchg
cmpsl
test
mov
lahf
pop
pop
sub
mov
add
pop
cli
loope
and
jge
and
into
mov
incb
jnp
push
cmp
fdivrp
cltd
ss
in
aaa
lea
scas
push
add
sti
stc
push
or
mov
int
push
shlb
xchg
rcrl
popf
lret
and
out
add
dec
cld
adc
test
sbb
loopne
push
loop
inc
mov
shrl
dec
leave
test
sbb
inc
dec
push
fcoms
pop
xchg
push
and
dec
and
add
rclb
popf
adc
add
push
stc
mov
jo
xlat
divl
jne
call
cmp
pop
cmp
dec
aam
lret
inc
push
push
test
not
mov
fsubrl
add
sub
mov
push
jmp
test
mov
inc
adc
jnp
push
aas
pop
div
cmp
fldcw
lea
aaa
loope
sti
jecxz
test
das
or
aas
mov
inc
xor
stos
mov
mov
clc
in
cwtl
mov
mov
jne
popf
cmpsl
mov
shl
push
sub
repnz
jnp
rorl
out
rcrl
and
mov
cs
sub
rcrb
push
xor
mov
pop
xchg
rorb
cwtl
lds
jle
lcall
xor
mov
add
das
xor
mov
les
push
out
mov
int
inc
pop
push
jns
jle
es
out
test
insl
mov
cli
xor
cmc
xor
out
cli
lret
xor
xor
hlt
iret
sbb
xor
sbb
cmc
jb
aad
test
mov
push
pop
outsl
ret
push
and
push
push
xchg
cmpsb
pop
outsl
out
or
jno
pop
ljmp
xor
pop
mov
scas
xchg
sbb
imul
mov
ret
fadds
cmpsb
mov
sti
mov
jne
add
and
add
push
mov
inc
leave
xchg
xchg
popa
mov
icebp
jno
cmp
dec
jnp
mov
aaa
les
add
divl
jl
xchg
loope
ljmp
dec
xchg
xor
push
sti
cmp
rcrl
flds
xchg
or
mov
or
add
loope
add
enter
add
push
ret
jno
lcall
or
push
dec
call
pop
sbb
lock
mov
cmpsb
cmp
xor
popf
scas
and
sbb
in
pop
sub
add
and
outsb
sub
daa
test
lahf
gs
jmp
jbe
mov
xor
cmp
das
ja
ja
pop
cmc
xchg
cmp
ja
movsl
xchg
imul
mov
pop
xorb
lea
cld
inc
adc
icebp
add
dec
repnz
jnp
insb
js
je
addr16
xchg
push
stos
xor
addr16
into
or
mov
mov
mov
cs
rcll
sbb
add
inc
or
icebp
xor
fmuls
int3
jnp
adc
push
xor
clc
fnsave
repnz
adc
mov
sarl
pop
push
out
adcb
jb
testl
out
cld
stos
ljmp
jno
add
inc
mov
fldl
push
jp
inc
rsm
and
mov
sahf
es
adc
les
test
movsl
mov
push
jo
rcl
or
or
cltd
mov
xor
add
fldt
je
and
sbbb
jbe
cwtl
mov
lret
imul
and
ret
or
cs
test
push
lds
push
lock
std
jp
dec
push
xabort
add
mov
xor
fs
test
add
fwait
and
bound
jle
sbbl
sbb
xchg
jae
cli
push
ljmp
pop
cmp
xchg
or
pop
stc
sub
mov
popf
sub
pop
pop
out
mov
jge
add
pop
pop
sar
push
in
js
mov
mov
cmc
ret
push
cmc
repnz
lods
hlt
sbb
test
sbb
pop
inc
xor
dec
addr16
xchg
push
mov
pop
inc
xchg
and
addr16
xchg
sarl
and
repz
xor
arpl
and
fcoml
cmpsb
xchg
iret
mov
test
or
in
out
jl
xlat
dec
pop
cmp
sbbl
bnd
xchg
enter
imul
test
lds
cmp
lea
cmpsl
sahf
ja
jle
shlb
cmpsl
inc
ret
pop
fs
ret
fisubl
sbb
adc
arpl
xor
push
icebp
mov
sub
out
pop
pushl
fs
pop
dec
xlat
loop
dec
test
inc
lods
insb
enter
pop
ss
das
push
sub
les
push
shlb
jmp
mov
or
loope
mov
sub
ja
das
sub
cmp
iret
cs
call
pusha
and
lds
push
cmp
inc
int3
mov
jmp
bound
ja
inc
inc
jb
xor
cmpsb
adc
js
in
cmp
mov
jb
cmpsl
pop
je
out
imul
cmp
repnz
push
push
push
dec
ret
mov
xor
int3
mov
inc
lcall
scas
fsubrs
mov
jp
dec
mov
pop
fisubrs
cmpsb
add
ss
sbb
jnp
adc
jl
jp
std
mov
xchg
sub
push
addl
ret
sub
pop
inc
jnp
cld
mov
add
or
ret
xchg
jl
lahf
xchg
inc
adc
sti
push
pushf
aad
out
jno
ss
xchg
push
pop
in
sbb
cmp
es
xchg
popf
idivl
orb
sub
mov
xchg
mov
sub
stos
jp
gs
or
push
shlb
sbb
mov
cld
inc
nop
jb
or
mov
fstps
sub
push
imul
mov
push
mov
xor
xchg
jns
mov
mov
movsb
add
mov
add
mov
pop
jno
aaa
xorb
iret
mov
push
push
adc
or
adc
pop
or
jb
faddp
dec
xor
bound
dec
cmp
jbe
shlb
or
leave
sbb
mov
movsb
cld
xchg
stos
sbb
jle
js
mov
jne
rcpps
or
mov
xacquire
mov
shlb
lret
push
in
mov
xor
pop
dec
shrb
jnp
mov
mov
adc
rcl
cltd
cld
xchg
enter
fiaddl
mov
and
imul
xlat
lret
ret
insb
ss
push
or
jae
sub
dec
and
in
out
daa
ss
xchg
cmp
jo
xchg
jne
jne
xor
cmpsb
icebp
xchg
push
adc
mov
dec
xor
adcl
jg
call
ret
mov
xchg
popf
movsb
cmp
jo
stc
or
loop
jnp
addr16
jge
mov
pop
insl
xchg
int
sbb
fwait
test
dec
test
roll
xor
arpl
out
fsts
mov
sbb
xchg
dec
loope
fs
out
mov
or
popa
pop
jecxz
dec
sbb
in
in
xchg
cmpsl
ficoms
jge
lret
push
adc
and
push
push
jbe
sar
lcall
adc
xor
push
adc
loopne
push
dec
daa
in
jb
mov
test
cmp
out
lock
jno
test
inc
sahf
sbb
test
mov
cmp
or
mov
in
flds
cmp
shl
xorb
push
sub
nop
jp
in
xor
push
fwait
stc
leave
adc
jb
jns
inc
inc
xor
ja
dec
dec
adc
cltd
xchg
or
int
stos
or
test
jbe
xor
fdivp
sub
add
adc
inc
push
lock
pop
add
mov
mov
ret
sbb
xchg
bound
pop
popf
and
push
pusha
in
xlat
scas
stos
push
or
mov
xchg
call
jp
add
mov
std
push
push
lock
inc
inc
sbb
xchg
aam
mov
adcl
mov
add
int
incl
adc
iret
jnp
pop
mov
sbb
jnp
in
test
lret
test
aaa
imul
ja
test
lret
xchg
mov
dec
jmp
cmp
dec
cmc
cmp
xchg
pop
xchg
push
jle
daa
pushf
ja
std
clc
cmp
cmpsl
ljmp
cmpsl
cmp
lcall
xchg
hlt
sbb
inc
in
movzwl
inc
and
and
lcall
push
jle
mov
sahf
leave
push
outsl
sub
loop
jae
push
shrb
shll
xchg
add
in
sti
xor
xorl
rol
addr16
add
out
icebp
inc
add
add
addr16
jno
int3
jle,pn
pop
and
dec
ds
arpl
mov
adc
push
fsts
hlt
or
pop
push
orb
and
mov
cmpsl
test
push
fbld
mov
and
add
inc
jb
movsb
andl
dec
fisubrs
les
into
dec
dec
test
dec
jne
aaa
jmp
lcall
or
popa
add
rcll
jb
movsb
mov
cmp
out
sub
sbb
mov
ficomps
push
push
cmpsb
movsb
ja
pop
inc
xchg
xchg
cmpsb
jae
insb
repnz
add
ret
cmp
fstl
pushf
loopne
pop
leave
cli
das
clc
dec
lret
mov
lahf
mov
inc
add
mov
aad
test
ret
push
dec
faddp
lahf
dec
ret
xchg
fists
xor
mov
lret
out
jb
dec
stos
cs
mov
mov
aas
mov
pop
aam
movsb
mov
pop
stos
fisttpl
pop
iret
scas
push
sub
inc
pop
shlb
pusha
rep
mov
js
rorl
lret
mov
aas
push
dec
add
gs
jno
push
push
push
inc
mov
cmp
orb
mov
out
addb
nop
ffree
jns
ja
pusha
and
mov
cmp
stc
fs
add
mov
and
mov
stc
add
push
adcl
fimull
call
mov
xlat
adc
jmp
aas
xor
mov
inc
adc
dec
cmp
mov
das
cld
rol
sub
es
adc
lds
clc
push
lahf
inc
adc
iret
scas
out
cltd
or
loop
xchg
ds
or
or
mov
sarb
add
and
in
sbb
sarb
scas
add
les
inc
xor
pop
inc
push
in
push
popf
dec
adc
ret
mov
adc
and
sbb
mov
out
loop
sti
jns
mov
or
iret
xor
lock
dec
pop
mov
fwait
js
xchg
mov
xor
pop
enter
mov
xchg
and
in
pop
or
and
push
sub
jmp
es
shrl
xor
jmp
sub
repz
in
or
or
mov
pop
int
test
xchg
dec
dec
repz
cld
fadds
shl
or
jbe
or
lret
leave
std
mov
repz
imul
dec
jns
mov
mov
es
or
cli
mov
js
rcrb
sub
pop
outsl
sti
dec
mov
sarl
mov
add
ljmp
repz
mov
mov
lods
sub
cmp
stc
mov
dec
dec
cmpsl
repnz
fdivrl
test
adc
push
jb
outsl
icebp
roll
jl
test
mov
mov
mov
daa
bnd
push
repz
and
int
cmp
cmc
call
xorb
ds
cs
pop
mov
sub
inc
sub
mov
insl
pop
cmc
icebp
inc
and
pusha
jp
inc
mull
jns
dec
mov
dec
inc
pop
xor
test
les
icebp
add
notb
imul
pop
pop
pushf
ja
and
std
or
push
ljmp
cmp
cmp
sar
push
dec
ret
push
rcll
enter
and
xchg
jne
std
dec
fsubp
mov
mov
out
outsl
sub
fs
loope
cmp
test
add
add
leave
je
mov
add
lcall
xchg
push
mov
mov
std
test
cltd
xchg
scas
and
dec
mov
scas
inc
adc
inc
cmp
js
sub
dec
cli
adc
cmc
jbe
shll
fisttps
and
outsb
mov
dec
or
fwait
cld
ret
sbb
sbbb
fbstp
mov
aam
fnstenv
mov
jo
pop
or
inc
vpsrlq
inc
xorb
lret
mov
jecxz
mov
sti
notb
clc
ds
fwait
mov
aas
shrl
fsubp
mov
xor
sub
sub
cwtl
mov
mov
gs
sub
push
cld
int
jb
cwtl
and
rclb
not
lahf
jns
inc
daa
mov
or
xor
xlat
add
push
repz
xchg
cs
mov
inc
sbb
mulb
es
dec
adc
roll
ljmp
faddl
jecxz
in
scas
and
push
int
pop
pop
or
jnp
push
js
test
cmp
test
inc
mov
jae,pn
mov
int3
rol
pushl
out
test
arpl
arpl
or
dec
sti
adc
jmp
sbb
insl
dec
gs
icebp
int
inc
mov
je
cmpsl
test
mov
push
fiaddl
mov
add
imul
fsubs
movsb
cmp
and
lds
insl
xor
stos
shl
cmp
sti
xor
mov
outsl
nop
jb
dec
repnz
push
outsb
popf
lcall
ljmp
out
xchg
pop
cwtl
stc
add
push
enter
imul
or
sbb
jecxz
scas
ja
add
mov
dec
jp
mov
dec
cmp
xor
shlb
bound
mov
cmpl
add
fs
sbb
mov
or
out
out
in
insb
test
call
inc
jb
pop
jns
jecxz
fnstsw
inc
roll
mov
inc
outsb
dec
xor
adc
movsl
cltd
in
dec
mov
lahf
outsb
in
ret
int3
ds
xlat
add
or
imul
mov
adc
leave
jl
fdiv
jae,pn
enter
fiadds
mov
or
ret
xor
ds
insb
js
mov
aas
shrb
clc
aam
pop
sbb
sub
aad
cmp
mov
jg
loop
xor
and
adc
push
xchg
dec
sbb
sbb
lret
mov
jle
ds
mov
gs
pop
pushf
inc
jo
inc
xchg
jne
pop
idivl
pop
ja
shrl
insl
les
add
xchg
xor
xor
mov
fs
cmp
int3
out
dec
pop
out
imul
ret
ficoml
mov
pop
sbb
inc
jb
inc
jo
xchg
sub
sti
inc
fidivl
test
leave
pop
fildl
lcall
xor
in
pop
or
sbbb
sbb
nop
arpl
pop
push
or
inc
shl
repnz
sbb
in
and
sbb
int
or
call
pop
cwtl
add
add
jl
dec
stos
xchg
mov
dec
push
stc
jmp
push
test
pop
jge
sbb
sbb
inc
loopne
cmp
cmp
repz
sub
xchg
sub
loope
dec
xchg
inc
cwtd
out
nop
pop
stos
ljmp
nop
stc
xchg
fldenv
sbb
push
jns
push
pop
lahf
insb
mov
pop
jns
lcall
xor
push
sub
pushf
incb
push
ret
sub
xor
out
mov
adc
mov
cmp
les
int
dec
hlt
jnp
cmc
xor
mov
inc
mov
cld
mov
cmc
sub
cmpl
lock
or
or
lahf
ret
push
push
push
and
call
push
das
loop
mov
sbb
aam
xchg
pop
jecxz
adc
daa
sub
mov
inc
mov
adc
fmuls
sub
icebp
out
jne
inc
pushf
les
mov
insl
shll
cwtl
pop
out
dec
lret
cmp
mov
lock
sarb
dec
jns
mul
movsb
sub
push
or
fxam
dec
cmc
sub
jns
push
adc
mov
out
pop
and
sbb
imul
xchg
icebp
dec
mov
pop
out
cld
les
sahf
cmp
loopnew
dec
dec
mov
rorl
pop
jb
inc
call
sub
aas
mov
lea
clc
xor
jmp
out
sbb
sub
ret
push
out
cwtl
pusha
lods
add
movsl
jnp
adc
lods
dec
shrb
shll
push
fwait
jb
es
cmpsb
fstpl
add
loopne
movl
mov
pop
out
sub
adcb
mov
cmp
sar
stc
pop
pop
push
push
and
jl
cs
rclb
adc
mov
fwait
pop
lock
push
mov
aam
fcmovne
faddl
add
mov
xor
lahf
arpl
dec
mov
pop
ret
jbe
sub
jo
test
mov
ds
andl
mov
testl
fwait
sbb
xor
sbb
cli
test
mov
adc
xchg
test
xchg
ret
mov
jmp
or
outsl
sub
and
aaa
les
les
das
push
loopne
pop
call
jecxz
sub
gs
js
ret
and
xor
inc
repnz
stos
and
xor
pop
mov
add
mov
popa
lods
sub
and
les
mov
pop
inc
mov
es
xchg
jl
fisubrs
xchg
jle
adc
add
fisubrl
shl
lds
out
jae
sbb
filds
xchg
push
sbb
nop
dec
movsl
xchg
push
nop
leave
xor
adc
stos
dec
pop
push
jge
inc
add
in
mov
orb
adc
lret
mov
inc
add
in
in
sub
es
and
cli
jo
stos
test
push
jno
ja
cmp
push
mov
out
loope
enter
lret
mov
sahf
pop
gs
mov
and
out
addl
push
stos
jecxz
hlt
push
sahf
push
or
and
or
faddp
imul
adc
rcrb
mov
ljmp
cmpsb
or
adc
xor
push
inc
into
fcomp
scas
sub
insl
ret
add
pop
pop
jbe
mov
mov
ret
out
into
push
inc
mov
sbb
push
lret
mov
xlat
xor
add
xchg
xchg
jecxz
std
dec
push
ja
dec
xor
imul
lahf
andb
xlat
mov
cs
inc
in
jo
js
xor
adc
pop
mov
mov
push
out
inc
rcpps
jae
jbe
adc
aad
js
mov
mov
ds
les
cmpsb
mov
and
sbb
jbe
xor
adc
adc
xchg
mov
fisubl
cltd
xor
int3
in
sub
mov
lods
jle
ds
adc
stos
das
ret
xchg
add
icebp
cmpsb
push
fs
inc
enter
inc
mov
insb
and
fs
cmp
loope
sarb
sbb
inc
jns
push
rcrl
mov
add
stos
mov
jnp
scas
pushf
fstpl
aas
or
js
dec
pop
ret
pop
dec
sub
ss
xchg
repnz
mov
mov
dec
adc
movsb
sbb
outsl
mov
mov
add
mov
pop
lcall
jmp
movsl
imul
push
mov
mov
filds
jge
cmp
add
push
js
stos
push
std
adc
arpl
out
scas
scas
test
in
dec
cmp
insl
and
inc
jnp
daa
adc
push
xor
push
fdiv
jl
sbb
data16
fcoml
lds
lret
insb
fdivs
addr16
pop
cmpsb
mov
xchg
mov
stos
sti
mov
push
int
inc
push
mov
int3
dec
and
clc
cld
ljmp
pop
mov
sub
sub
in
insb
add
dec
pushf
aas
sahf
adc
enter
leave
pop
or
mov
cmp
ss
loope
mov
enter
and
mov
lahf
jl
sub
das
dec
out
cmp
and
push
outsl
xadd
xchg
popa
dec
pop
int
pusha
lret
dec
pop
ljmp
orl
pop
sahf
cmpsl
jnp
xchg
xchg
cmp
dec
adc
mov
daa
mov
lret
repnz
and
push
mov
add
xchg
jmp
mov
mov
pop
sub
movsl
cmpsb
mov
jnp
dec
push
xchg
enter
add
or
adc
icebp
test
cmp
test
mov
mov
push
mov
out
in
push
lods
loopne
icebp
in
jae
pop
shlb
xchg
lds
cmp
jle
dec
sbb
xor
push
rclb
sub
rorl
sub
icebp
cmpl
out
int
ret
push
subl
imul
push
adc
push
ret
outsl
adc
roll
inc
sbb
and
ficoms
movaps
in
in
inc
jg
mov
xchg
bound
ss
dec
or
pop
stos
dec
cmpsl
adc
and
xor
out
bound
out
rclb
popa
in
dec
cmp
jg
add
fidivrs
negb
flds
pcmpeqb
sbb
test
xchg
and
xchg
pop
xchg
in
mov
ret
shlb
int
bound
scas
insb
jp
inc
cwtl
fistl
stc
mov
jge
call
fwait
test
pop
dec
in
mov
xchg
mov
loopne
fnstsw
and
xchg
mov
pop
mov
aaa
xor
loopne
dec
fisttpl
jp
pop
adcb
ret
cmc
mov
xchg
pop
cli
cmp
pop
mov
xchg
dec
mov
hlt
mov
das
out
mov
fdiv
fstpt
scas
insl
test
inc
les
add
popa
js
mov
loop
sbb
jecxz
test
jae
add
mov
jl
push
mov
repz
jp
or
xor
fwait
out
dec
into
fs
aaa
mov
mov
adc
repnz
jae
mov
add
jmp
push
push
xchg
cmp
xor
scas
les
mov
cld
xchg
add
and
jno
pop
inc
rcll
cmp
mov
movsb
jmp
push
or
jne
push
add
test
roll
pop
sub
scas
push
push
imul
cmpb
sub
fisubrl
out
lods
xor
pop
icebp
add
xchg
and
jp
mov
and
adc
and
xchg
mov
in
xorl
ja
int
xchg
add
aam
xchg
xchg
sub
and
pop
out
jg
jne
inc
inc
sbb
inc
adc
or
and
mov
inc
mov
out
jge
pop
call
imul
bound
sarb
repnz
aaa
or
ficomps
fcmovb
mov
lock
aad
sbb
into
gs
lods
imul
aas
sbb
push
push
cmp
lahf
adc
and
jns
sbb
js
je
xor
out
lcall
sub
clc
lahf
lds
push
popa
xchg
push
add
mov
pop
mov
js
rol
lock
and
sbb
sbb
loop
dec
sub
call
frstor
sbb
sbb
hlt
test
and
mov
pop
aad
insb
mov
pushf
mov
test
dec
iret
inc
sarl
or
jg
push
std
adc
cs
test
jg
xor
lea
movsb
pop
push
xchg
mov
jecxz
xchg
bnd
insl
mov
dec
sub
js
test
popf
and
aas
test
sbb
push
les
pop
gs
stos
pop
push
and
mov
xor
add
rcr
ja
pusha
mov
adc
xor
add
pop
ret
sti
inc
push
subl
mov
sbb
decl
lock
hlt
daa
fimuls
or
sahf
pop
aaa
adc
iret
cltd
imulb
ss
call
xchg
shll
jns
inc
lods
sub
lods
inc
in
and
leave
dec
inc
ds
call
fmull
dec
shll
jecxz
int3
enter
jnp
inc
shrb
sub
aaa
or
sti
sti
in
mov
outsb
sub
sub
mov
cli
out
pop
in
cmp
inc
pop
test
push
and
fnstcw
adc
insb
in
loopne
outsl
pop
jg
pop
outsl
fcmovb
jge
adc
mov
or
loope
mov
fcmove
fisttpll
fwait
call
ljmp
and
adc
pop
sbb
jns
test
xor
lahf
test
pop
mov
inc
addr16
mov
fcmovbe
dec
fsubrp
add
sbb
lock
ljmp
adc
outsl
mov
frstor
dec
pushl
xchg
lods
aam
xchg
xchg
nop
or
xlat
jecxz
sbb
push
sti
mov
stc
push
sbb
and
sbb
mov
mov
cmpsl
dec
fldcw
movsb
cmp
notl
ljmp
rcr
mov
call
test
cwtl
jbe
in
pop
dec
es
and
bound
fwait
icebp
add
pop
lea
pop
and
fdivrp
addr16
jmp
xor
stos
bound
adcl
jo
insb
lea
jmp
sbb
cmpsl
stos
into
jae
pop
cmp
outsb
push
xchg
sbb
push
cmp
and
mov
stos
nop
dec
sti
loop
jl
mov
sub
dec
pop
or
fwait
pop
pop
jae
sbb
mov
mov
fs
pop
push
fwait
es
xor
sbb
insb
or
mov
movsb
cmc
mov
aam
aaa
imul
dec
push
sub
add
ret
sbb
cltd
out
movsb
mov
add
daa
push
mov
sbb
aam
fwait
lea
lret
cli
ja
popa
xor
iret
aas
les
cmp
dec
cmp
fs
inc
and
in
lods
lds
cmc
jp
sbbb
inc
call
push
pandn
clc
shlb
jns
dec
shr
out
outsl
push
sbb
icebp
and
rcr
pop
dec
popl
sbb
jge
nop
cwtl
push
cltd
dec
mov
cltd
xor
sar
std
imul
hlt
mov
jae
addr16
dec
or
call
pop
cwtl
loop
push
nop
push
inc
or
fcmovne
add
cmp
push
mov
mov
frstor
sub
mov
stc
mov
negb
mov
orb
stos
je
sbb
or
test
loope
inc
nop
pop
push
mov
pop
enter
repnz
out
push
jg
scas
xchg
call
or
es
or
ret
in
loopne
adc
repnz
ret
adc
mov
data16
adc
cmp
mov
xor
mov
sub
aad
shl
or
scas
call
mov
div
mov
mov
ss
pop
mov
jle
pushf
or
jmp
sub
das
out
pop
leave
ja
movsl
push
jmp
aas
outsl
push
pusha
insl
aad
push
jp
data16
cld
outsl
cs
or
pop
xor
pushf
push
or
mov
adc
mov
sub
sti
jl
xor
dec
inc
das
xchg
je
cmpsl
inc
mov
popa
imul
pop
insl
icebp
movsb
jmp
insl
decb
mov
nop
and
leave
push
push
cli
cmp
mov
leave
stos
pop
stos
add
and
sub
ds
jbe
mov
cmp
out
adc
shll
cmpsb
out
xchg
pop
sbb
lds
std
xor
jns
sbb
mov
add
movsl
dec
and
lcall
jge
shrl
ret
cmp
jp
sbb
and
sbb
sub
mov
sbb
mov
out
jle
jge
sti
mov
lods
add
inc
push
shlb
dec
repnz
jb
jb
inc
sub
sahf
loop
cmc
push
or
insl
mov
xor
mov
popa
int3
sbb
inc
xor
outsl
aad
outsb
mov
jnp
das
or
jp
jg
sbb
mov
inc
je
mov
jns
sub
push
push
or
xor
xor
outsb
push
xchg
das
addr16
fbstp
cmp
xlat
mov
mov
inc
iret
out
stos
xorb
nop
scas
aaa
cld
test
test
arpl
popa
jne
push
or
jno
data16
cmpsb
pop
nop
leave
repz
pop
cmp
lds
adc
push
pop
enter
cmp
mov
push
popa
and
mov
jae
pop
or
xchg
and
pop
sbb
movsb
cmp
xor
or
xchg
insb
es
jmp
bound
pushf
test
mov
rorl
ret
inc
xlat
addb
fsubrl
mov
imul
mov
call
pop
push
pop
sbb
push
arpl
fcmove
insl
fdivl
cmpsb
rcl
int3
inc
test
cli
pusha
out
push
or
call
fcmovnu
xchg
lahf
add
adc
jg
lods
and
stos
test
cmp
push
dec
jg
std
dec
rorb
fldcw
cmp
push
sub
outsl
sbbb
xchg
insb
repnz
xor
andl
or
adc
add
dec
inc
into
mov
mov
es
pop
cmpsl
ljmp
mov
xchg
xchg
loop
sub
pop
or
outsl
cmp
push
mov
aad
ja
push
cld
jg
daa
add
jo
int3
fsubrl
fmuls
loopne
shlb
aam
int
cwtl
hlt
inc
lahf
dec
or
xchg
inc
sub
xor
and
test
jo
jb
xchg
mov
xchg
xchg
ret
divl
sub
out
lds
mov
aam
aad
std
aas
push
add
cmp
out
inc
jns
and
or
sub
and
cmc
ret
lret
gs
movsl
lahf
mov
inc
mov
clc
jo
or
aam
bound
xchg
dec
scas
gs
add
movsl
in
inc
mov
pop
aam
add
rcrl
and
push
add
fadd
in
mov
and
mov
jp
mov
sti
jg
fcomip
ret
push
scas
or
push
into
ret
or
mov
mov
test
scas
mov
js
in
out
jno
and
scas
or
dec
mov
inc
icebp
leave
notl
pop
imul
rolb
mov
push
xchg
rolb
add
jb
cmpsb
shl
ljmp
popa
adc
call
rclb
sub
jbe
mov
inc
icebp
sbb
lds
adc
adc
lds
xchg
sub
ficomps
dec
push
fldenv
and
in
loope
fists
bound
lods
pop
cmc
fstpt
movsb
lods
jno
mov
std
rcrl
ficomps
std
cmc
sub
inc
gs
clc
cltd
xchg
cmp
and
not
pop
sahf
cmp
call
pusha
and
leave
or
orl
pop
pop
lahf
pop
hlt
jp,pn
add
jp
jnp
inc
sbb
orb
mov
loopne
das
xor
inc
cwtl
and
adc
pop
daa
aas
es
adc
mov
xor
pop
inc
mov
imul
movsb
test
push
mov
scas
rclb
xorl
adc
mov
cmp
std
shr
mov
cmovle
sbb
push
and
rclb
rorl
add
ret
dec
xchg
adc
fisttpl
negb
loope
repnz
mov
int3
mov
repz
rorl
dec
faddl
jmp
shrb
out
mov
push
andl
mov
pop
inc
xor
imul
out
insb
sub
pop
dec
jns
cltd
dec
insl
lret
imul
xchg
mov
loop
mov
dec
bound
add
cld
mov
xor
sahf
lods
jg
cmp
xchg
sbb
xchg
insb
lcall
adc
lcall
jo
pop
cmp
movsl
xor
push
das
sbb
xlat
dec
fs
xor
mov
push
stos
adc
mov
xlat
test
pop
shl
sub
mov
into
in
sub
stos
aas
and
push
mov
adc
sbb
fdivl
and
add
sub
call
add
xchg
dec
ss
pop
aad
retw
cltd
push
fldl
sub
ror
cmp
push
enter
mov
das
mov
add
repz
inc
dec
jnp
sti
movsl
jns
jmp
mov
fcmovne
dec
pusha
and
movsl
inc
mov
jnp
scas
in
fadds
mov
cwtl
dec
inc
clc
push
loop
ret
mov
xchg
pop
cmp
aad
fcoml
sbb
rcl
loop
dec
jb
jno
rcrl
sbb
movsb
xor
add
jb
out
jb
imull
enter
int3
push
pop
stos
adc
xor
xchg
or
loope
mov
test
jg
in
pushw
js
lods
mov
mov
loope
dec
cmpsl
mov
xor
imul
add
inc
sbb
mov
into
outsl
adc
scas
inc
insl
pop
cmpsl
leave
rcll
jl
repz
andw
dec
loopne
div
subl
cmp
sub
mov
dec
loope
jp
push
pop
push
icebp
add
outsl
dec
xchg
sub
sbb
test
clc
inc
and
sbb
rolb
lods
je
int3
insb
mov
movsb
jns
jmp
lods
or
mov
dec
lret
mov
sub
je
xor
mov
negl
popf
jbe
mov
inc
adc
imul
add
ret
adc
and
cli
mov
mov
xchg
sti
dec
inc
mov
jne
cmp
mov
push
pop
nop
mov
shrb
inc
rcll
insb
jne
mov
popf
in
adc
mov
pop
mov
inc
and
shrl
jne
mov
les
jae
cmp
inc
sbb
mov
jmp
push
and
xchg
imul
ljmp
inc
mov
adc
cwtl
adc
in
lahf
cs
xchg
int
pop
rclb
jecxz
out
xor
adc
jb
mov
ret
jl
mov
sub
inc
jp
scas
dec
mov
lods
cmp
dec
xchg
filds
or
js
jno
or
adc
rclb
jns
aas
xlat
sbb
daa
pop
inc
dec
jbe
sub
add
sub
and
xchg
mov
fistl
fistps
jmp
fmull
and
lock
sbb
js
cmp
ds
dec
je
fists
or
mov
call
ja
aad
movsb
or
jno
cs
cmp
mov
fcomip
pushf
mov
and
adc
sbb
add
or
lods
repz
sub
stc
ss
adc
mov
cmpsl
ret
mov
mov
enter
movb
and
xchg
add
push
pop
fwait
mov
fsubrl
into
xchg
push
pop
enter
sub
mov
sbb
lods
mov
repz
jle
repnz
lahf
mov
mov
cwtl
fstl
repnz
jno
xchg
xor
inc
sbb
into
es
mov
add
and
jge
rcrl
loop
mov
inc
fnsave
push
xor
sbb
mov
fimull
adc
int
movsl
lods
xchg
lods
add
push
andl
aad
push
mov
jg,pn
and
and
neg
jo
into
aaa
imul
or
ficomps
xor
add
adc
mov
cltd
lds
mov
cmpl
add
ret
cmpsl
es
ds
rclb
sbb
inc
sahf
xor
iret
jmp
rcr
mov
gs
mov
orb
lcall
out
in
stos
and
cmc
sub
cmp
push
movsb
cmp
vxorps
inc
mov
sub
divb
sub
pop
arpl
xor
jnp
mov
and
das
pop
jle
rcr
fldl
pop
aaa
push
xor
xchg
or
out
scas
int
xor
push
mov
bound
in
cwtl
call
xchg
sub
add
xchg
mov
push
test
jg
inc
fwait
mov
pushf
jmp
adc
ret
test
jbe
or
out
aaa
push
jle
rcpps
out
mov
mov
arpl
loope
xlat
rcl
std
es
lret
cmpsl
mov
jmp
and
andl
in
es
sub
mov
scas
pop
push
inc
out
sub
jae
or
dec
inc
roll
mov
xorb
mov
inc
jmp
imul
mov
sarl
cmpsb
push
cmp
cwtl
mov
or
xchg
dec
lods
imul
mov
adc
sbb
push
pop
or
inc
lock
jno
lret
stc
fwait
daa
mov
xchg
call
and
call
stos
adc
mov
jo
push
mov
push
cltd
xor
xchg
or
mov
stc
sbb
jb
mov
stos
adc
iret
xor
scas
jno
aad
and
fs
fisttpll
push
mov
cld
sub
out
shr
sub
pop
dec
lods
rcll
dec
mov
jbe
popf
adc
aaa
ss
in
sbb
pop
sub
aad
push
aad
rcr
mov
shlb
adc
add
push
sarb
mull
inc
ret
push
and
hlt
das
test
jo
les
adc
add
xor
and
fnstenv
add
ss
loope
mov
rcll
fsubrl
das
add
push
lock
mov
std
mov
rclb
popa
aas
mov
fsubr
movsl
xchg
lret
filds
ljmp
inc
subl
mov
push
int3
cwtl
mov
cld
enter
cmpsl
fisubrs
cwtl
addr16
lea
pop
jmp
sub
insb
cmp
mov
sub
mov
jo
hlt
mov
mov
sbb
fildl
xlat
std
cmp
mov
cmpsb
mov
cld
cmp
push
enter
cmc
enter
sbb
arpl
xor
sub
dec
or
bound
pop
int
adc
inc
ret
shrb
sahf
mov
lahf
sbb
jb
sub
sbb
jb
mov
ja
scas
jbe
add
push
outsb
mov
inc
dec
push
sahf
test
outsb
popa
clc
in
dec
arpl
vmovaps
mov
mov
sub
ret
jmp
leave
in
daa
cmp
mov
aam
es
fcoml
mov
popf
stc
test
mov
stos
push
bound
dec
mov
xchg
out
mov
pushf
lahf
mov
insb
inc
imul
pop
jmp
push
sbb
adc
mov
mov
addl
jl
jmp
sub
insl
push
out
inc
pop
lret
mov
imul
inc
ljmp
inc
js
push
adc
lret
shl
clc
mov
sti
int3
out
fcomi
scas
test
mov
sahf
icebp
lret
loope
popa
cmp
rcll
fsubl
rorb
cmpsb
jmp
push
fistps
mov
test
lea
push
or
mov
subl
jmp
and
adc
in
int
mov
xchg
mov
enter
pop
insl
hlt
pop
and
mov
dec
aaa
das
fsubrs
mov
add
push
lahf
movsl
push
lods
ss
bound
xchg
mov
xchg
mov
xor
and
add
leave
pop
pop
or
das
push
fisubl
mov
stc
loopne
mov
jge
loopne
mov
sahf
jne
mov
pop
push
js
jp
mov
mov
xor
std
add
xor
js
dec
or
xchg
sbb
stc
je
les
sub
std
sbb
loop
ja
and
pop
push
cld
xor
ret
into
stos
add
lods
aaa
sbb
jecxz
sbb
mov
insl
call
or
mov
sub
subl
es
out
loope
inc
mov
mov
les
cmp
mov
test
in
stos
cmpsl
stos
pop
movsl
scas
js
sbb
outsl
inc
mov
pop
adc
out
insl
dec
cmp
dec
pop
hlt
mov
adc
loop
sbb
jecxz
sub
ljmp
ret
pop
popf
push
adc
xor
ror
clc
adc
leave
jmp
dec
jl
cmp
xor
sub
leave
stos
js
jnp
dec
cmp
pop
jnp
ljmp
push
lea
xor
push
cmp
mov
test
lret
and
fwait
xor
movsb
push
and
cli
insb
sahf
add
pop
cwtl
notl
lret
lahf
or
jmp
mov
sti
mov
mov
cmp
or
aaa
push
les
sarb
ret
icebp
mov
adc
or
dec
cli
in
fimull
jge
ret
ret
jg
call
and
cmovp
leave
call
push
dec
je
ss
adc
lcall
cli
into
pop
pop
aad
dec
insl
sub
fwait
sub
fbstp
mov
push
mov
jle
cli
shll
pushf
pop
push
or
jg
push
ds
inc
mov
iret
sbb
mov
test
mov
shrl
xor
sub
sbb
and
jb
dec
int
push
inc
add
xlat
lock
mov
repnz
ljmp
push
fcmovnb
scas
xchg
add
lret
add
test
push
sub
jno
shrb
out
cwtl
loop
jns
push
push
jo
stos
loope
bswap
pop
inc
lea
popf
or
fldenv
cmpsl
inc
adc
jmp
mov
jns
dec
aam
rolb
addr16
and
mov
cmp
push
test
sbb
lea
dec
sub
cmpsb
mov
xlat
xor
sti
cmp
sub
shrb
test
mov
jle
cmc
pop
mov
inc
outsb
iret
push
movsb
pop
out
js
stos
mov
dec
movsl
jp
into
in
mov
testb
clc
out
cmp
mov
repz
add
testl
test
shrl
int
sbb
lea
push
test
cmpsb
or
pop
cmc
dec
cli
pop
add
test
icebp
movsb
movsl
lods
xchg
clc
dec
and
xor
and
sbb
test
adc
push
test
push
lret
xchg
and
dec
std
pop
rclb
xchg
adc
lods
addr16
or
mov
mov
in
leave
push
xchg
fsts
mov
or
mov
mov
add
in
sti
jae
or
sahf
int3
xor
or
sahf
mov
sub
leave
pop
js
cltd
movsb
fwait
or
daa
pushf
into
ret
sbb
jbe
mov
sub
add
add
add
and
xor
xchg
and
call
ret
into
mov
jl
loopne
mov
cli
push
jmp
push
outsb
dec
dec
xchg
pop
add
lds
movsl
lret
adc
or
pop
add
aad
aam
aam
shll
pop
cmp
jbe
inc
lds
bound
movsb
cmc
scas
xchg
push
mov
mov
cmp
clc
mov
mov
call
fyl2xp1
cltd
push
fistl
xchg
sahf
arpl
mov
sub
ret
loope
jns
outsl
sub
loope
mov
out
fwait
and
cli
rcrl
in
or
or
sbb
jo
out
mov
jle
in
dec
int
sbb
mov
mov
xchg
cmp
mov
fmull
pushf
or
aam
add
add
jge
movl
add
stos
push
repnz
imul
push
mov
adcb
sbb
lahf
mov
sbbb
out
outsl
mov
pop
inc
movsl
add
jecxz
scas
movsl
in
push
add
mov
jnp
addr16
jmp
sub
xchg
fisttpl
or
sbb
imul
sbb
mov
rorl
stos
into
sbb
xor
jns
bound
lods
jmp
xor
jnp
or
push
js
xlat
push
dec
pushf
mov
and
ljmp
sbb
and
sbb
gs
add
loopne
out
leave
gs
mov
test
pop
xor
add
aad
xchg
vphaddbd
jmp
xchg
lock
test
enter
mov
popa
mov
popa
lea
adc
test
pop
aad
xor
pushf
fsubl
push
out
adc
sbb
cltd
push
dec
and
cli
lock
push
xlat
stos
ret
insb
sti
addr16
icebp
nop
jbe
mov
scas
or
push
mov
repnz
pop
rclb
inc
jl
jne
and
dec
mov
add
nop
lds
mov
ds
pop
cmp
mov
shl
mov
mov
fstpt
xchg
ss
pop
repnz
or
adc
pop
stos
into
ja
jnp
clc
or
mov
movsl
sub
out
enter
int
jne
jmp
cmc
cli
cmpsb
xor
inc
ds
or
mov
in
jne
push
roll
fwait
les
mov
push
decl
add
sbb
cmp
sbb
insb
mov
dec
incl
es
adc
and
sub
mov
pop
test
sarb
mov
push
sbb
mov
add
and
sti
mov
adcl
stos
scas
aaa
lods
xchg
ljmp
inc
sbb
inc
and
fisttps
inc
dec
pusha
pop
pop
ljmp
inc
or
mov
xchg
call
sbb
fldcw
inc
dec
setne
jb
js
lahf
mov
lea
insb
call
or
mov
sub
and
cs
pop
mov
subb
adc
mov
mov
jp
subb
dec
outsl
and
out
cmp
fidivl
rcll
sub
test
movsb
adc
inc
addr16
lods
fwait
ljmp
add
hlt
sbb
aaa
bound
fld
scas
mov
aam
pop
lods
sbbl
and
jae
icebp
jmp
and
addr16
push
call
int3
jp
mov
lret
in
out
movsl
adc
xlat
and
lds
mov
lods
sub
out
test
sbbl
mov
adc
xor
subb
push
fwait
cs
aas
insb
adc
xchg
ljmp
mov
cwtl
les
test
ret
and
cmp
fnstsw
fstpt
out
out
mov
sbb
test
jl
mov
lea
loope
test
push
arpl
inc
loop
jnp
insl
push
cwtl
jnp
das
cwtl
outsb
adc
pop
fidivrl
xchg
sahf
adc
push
dec
fisubl
or
push
push
daa
or
ja
push
popf
pushf
sbb
mov
add
sbb
bound
jle
mov
jnp
inc
push
loopne
pushf
cmp
sti
fs
out
lock
loop
mov
inc
es
jmp
inc
out
and
pushf
jle
and
dec
xor
sub
shl
inc
rclb
sbb
iret
add
add
inc
ljmp
jno
sub
mov
inc
mov
xchg
mov
fmul
icebp
dec
jae
fbld
fwait
mov
xchg
in
jg
cmp
mov
jl
or
test
pop
ja
sbb
in
pusha
mov
call
test
pop
sbb
dec
rclw
inc
cld
xor
fldcw
sub
xchg
imul
xchg
imul
add
shl
mov
and
inc
pop
xchg
orb
push
pop
ret
jbe
outsl
mov
inc
ds
sbb
cmp
xchg
lret
jnp
iret
in
fidivrl
lods
mov
out
cmp
xchg
pop
push
cwtl
imul
loopne
or
imul
cmp
mov
divb
aaa
sub
jnp
mov
sbbb
xchg
adc
add
jno
loop
faddl
bound
lds
mov
das
ss
mov
ja
andl
mov
mov
or
cwtl
or
pop
jno
adc
cmp
mov
mov
idivb
dec
xor
xchg
imul
lods
int
inc
movsl
aaa
or
icebp
sub
xor
jno
in
scas
pop
mov
pop
lret
in
rep
in
cmpsl
cmpsl
filds
mov
mov
mov
out
fs
rcll
pop
add
shlb
lods
inc
mov
nop
xchg
push
cmp
xchg
xchg
cmp
faddl
mov
jg
lret
push
jo
and
or
sbb
push
cmp
add
adc
xchg
fmuls
add
in
xchg
sub
adc
in
iret
dec
pusha
mov
ffree
mov
pop
sbb
popa
dec
lods
mov
sti
out
add
cmp
into
sahf
bound
xchg
xor
cmp
je
mov
jbe
in
repnz
xchg
inc
mov
scas
in
popa
xchg
and
das
sarb
jmp
fsts
mov
push
mov
nop
sbb
mov
mov
shrb
pop
ss
repz
xor
xor
clc
xchg
jp
in
mov
cmp
sbb
fucomi
in
mov
repnz
addr16
ds
jmp
dec
jae
mov
sarl
or
ss
jno
mov
imul
adc
je
gs
push
rcl
shll
and
mov
repnz
int3
fldcw
sahf
lcall
push
push
roll
mov
jnp
inc
enter
push
and
jnp
rcrb
shll
push
cli
dec
loope,pn
jmp
mov
lods
xor
lock
and
and
fld
loopne
jbe
push
aad
xor
mov
pop
repnz
mov
sbb
mov
add
pop
mov
shll
xor
inc
lret
adc
out
ficoms
sti
xchg
mov
aam
mov
in
push
into
or
bnd
pop
mov
mov
dec
shr
lret
xchg
in
stc
ljmp
test
push
das
fadd
sahf
pop
rcrl
mov
mov
push
mov
std
mov
jbe
pop
in
mov
inc
ss
mull
jge
add
stc
mov
cmpsl
movsl
jmp
push
lock
js
lret
mov
mov
add
cltd
mov
test
les
inc
xchg
mov
je
adc
add
sbb
jg
mov
outsb
mov
jbe
aas
lock
pop
fs
push
mov
imul
push
je
dec
mov
popl
push
push
sahf
out
jg
pop
mov
std
cli
lds
pop
adcl
xlat
dec
outsl
fxch
jnp
cmpsb
jne
imul
daa
mov
mov
dec
pop
ret
xchg
inc
adc
push
aas
stos
and
mov
pop
dec
into
xchg
cld
mov
pop
xor
cmpsl
sbb
push
loop
je
mov
inc
sbb
je
mov
nop
mov
add
push
xlat
pop
xor
ss
gs
enter
test
mov
dec
out
mov
mov
or
jg
mov
sti
lock
pusha
or
movsl
test
stos
sub
add
mov
stos
push
leave
or
movsl
jl
lods
enter
jg
arpl
sub
ds
push
std
addr16
lret
xchg
inc
clc
call
xchg
jo
iret
fcoms
and
pusha
pop
insb
adc
mov
push
inc
cmp
jno
mov
ss
xchg
rcll
outsb
xchg
and
sbb
inc
cmp
cltd
mov
sub
sub
jge
jp
jae
stc
cmp
xlat
jp
dec
aad
leave
ret
stos
xchg
lock
pop
popf
and
addb
pop
cmpsl
outsl
aam
test
and
in
sarb
ds
test
into
inc
leave
lea
pop
adc
cmp
jbe
hlt
and
int
nop
sub
mov
dec
mov
shlb
addr16
repnz
push
loope
or
dec
xchg
mov
out
inc
or
popa
aam
mov
mov
dec
jmp
jmp
pop
aad
das
jl
andb
scas
pusha
sbb
stc
int3
or
jns
cwtl
cmc
ds
mov
cmp
mov
xchg
xchg
pop
iret
je
push
dec
dec
icebp
movsl
sti
out
xchg
push
aaa
addl
shl
push
mov
outsl
mov
pop
mov
jg
sbb
jae
movsl
arpl
arpl
mov
jle
mov
or
push
je
sahf
or
fxch
mov
xor
je
es
inc
mov
cmc
ja
push
cmp
mov
jae
les
das
inc
inc
jo
pop
bnd
cmp
out
shrb
cli
in
pop
cmpl
pop
xor
mov
stos
mov
jb
pop
repnz
mov
fbstp
push
lret
stos
rcr
out
mov
scas
lret
push
pop
rol
mov
lds
stos
pushf
in
test
movsl
sbb
dec
cmp
xchg
and
push
xor
jne
mov
fisubl
ret
xchg
push
and
mov
xchg
jecxz
xor
push
mov
push
push
inc
mov
jns
push
dec
mov
xor
xor
scas
and
cmp
iret
or
dec
cmp
movsb
jge
sub
cltd
jne
sub
testl
inc
cmp
pop
and
ret
pop
jle
pop
cmp
xor
mov
in
jno
cld
dec
jo,pn
int3
ss
cwtl
pop
xchg
andb
xchg
sub
cs
cwtl
insl
mov
mov
push
sub
pusha
or
pop
and
iret
mov
add
es
adc
imul
xor
sti
inc
movsb
or
sub
push
cmp
ja
adc
ljmp
call
mov
das
cwtl
add
roll
pop
dec
dec
mov
sub
and
movsb
cmp
leave
mov
sbb
aad
cmp
xchg
mov
clc
pop
adc
xchg
mov
xchg
xchg
cmc
xchg
stc
sub
sbb
sti
insl
iret
sbb
arpl
sbb
loope
pop
push
dec
sahf
jl
push
rorb
jecxz
pop
es
push
loopne
popa
push
cmpsl
mov
mov
cmp
sub
jne
shr
scas
mov
push
pop
add
stc
clc
jae
dec
xchg
mov
cmp
sbb
dec
and
and
rorl
push
or
das
pop
js
dec
faddp
ss
push
scas
and
pop
pop
cli
inc
push
xor
insb
mov
fsubrl
ljmp
loope
push
dec
and
inc
xlat
sub
pop
out
cmc
fstpl
jge
mov
and
cmpsb
sbb
lea
mov
jno
lcall
insb
fidivl
out
add
add
js
shl
daa
xor
or
xchg
xchg
pop
lds
adc
xor
fcmovnb
ss
pop
push
popa
mov
gs
enter
inc
test
adc
jno
jmp
inc
jle
dec
xchg
outsl
ret
or
loope
mov
call
or
sbb
imul
pop
cmpl
test
mov
aas
outsb
test
fwait
sbb
js
lret
and
mov
cmp
pop
in
fldenv
and
pop
jb
xor
fisttpll
pop
fsts
xchg
and
fwait
imul
pop
mov
push
ss
lea
inc
push
add
mov
jecxz
cmp
mov
aaa
pop
adc
lods
jmp
ficoml
subl
push
ds
insl
shrb
into
xchg
xchg
xchg
mov
cmpb
scas
rcll
iret
scas
scas
jb
jp
sbb
cltd
jnp
mov
in
mov
outsb
pop
and
psubsw
popa
jp
pop
add
push
mov
push
pop
stc
push
fstps
aad
add
imul
xor
add
imul
jnp
loopne
fistl
fsubs
xchg
lock
jno
and
adc
sub
sahf
ficoms
out
jo
mov
mov
cmp
je
add
jbe
xchg
jge
mov
popa
lds
repnz
cmp
or
in
xor
sub
mov
aaa
fildll
adc
hlt
fsts
mov
lcall
sub
lret
jg
test
into
subb
andb
mov
sbb
mov
outsl
scas
mov
cmp
dec
mov
ss
shll
arpl
mov
rorl
icebp
sub
jge
xor
ss
push
mov
sub
inc
test
ja
jno
je
jb
das
cmp
pop
cmp
fsubrp
sarb
insb
mov
data16
fcmovb
xor
dec
ret
pusha
sbb
mov
pop
ret
insb
movsl
jae
cmpsl
popa
xchg
out
adc
jae
fwait
addr16
incl
inc
add
add
cld
clc
in
aam
sub
jle
xchg
movsb
std
mov
das
jge
push
lcall
scas
gs
xchg
out
in
or
adc
test
movsb
sahf
fsts
in
inc
aas
dec
xchg
jg
push
out
push
and
ret
inc
clc
or
popf
mov
popa
pop
fdivs
iret
leave
iret
in
jae
in
inc
jne
dec
leave
subb
loope
inc
repnz
hlt
push
gs
out
jl
ret
and
lds
jno
xchg
sbb
in
ja
int3
mov
sub
dec
movsl
mov
leave
daa
sub
cmp
mov
mov
sbb
sub
dec
sub
xor
or
icebp
imul
ficoml
inc
int3
mov
mov
lea
in
or
and
idivl
loopne
aas
jo
xor
cwtl
jmp
push
sbb
outsb
mov
pop
dec
out
dec
dec
jmp
enter
sub
gs
and
into
jne
adcl
sub
mov
adcb
outsb
inc
push
nop
adc
pop
imul
iret
or
fcomps
push
das
js
push
leave
or
cmc
push
movsl
mov
jmp
stos
shll
movsl
push
imul
rcr
xchg
jge
inc
push
jl
push
icebp
fsubrl
push
popf
and
iret
inc
sbb
mov
mov
mov
sbb
pop
adc
push
jmp
out
push
clc
sub
hlt
sbb
and
or
mov
fwait
sub
clc
out
cld
test
mov
inc
or
xor
inc
jg
dec
jo
xchg
mov
pop
jns
xor
lahf
jnp
or
je
lret
fdivl
dec
ljmp
mov
call
hlt
xlat
pushf
xlat
mov
addr16
test
or
jle
xchg
imulb
or
jb
shl
inc
out
sbb
rcll
sbb
adc
xor
loope
inc
push
xor
std
loope
fwait
adc
push
fwait
xchg
push
loope
sub
dec
fcoml
ljmp
pop
stc
dec
sub
jmp
jno
gs
cmp
sub
cltd
push
jae
insl
scas
hlt
adcl
mov
lret
mov
ficompl
in
and
incb
dec
fisubrs
ret
cmp
sub
push
sbb
rol
mov
nop
push
icebp
jno
mov
jl
mov
push
faddl
idivl
cwtl
inc
int
aas
hlt
in
lcall
jnp
mov
dec
icebp
jmp
adc
loopne
out
sub
and
std
inc
lods
and
insl
fwait
jae
enter
xor
mov
adc
cmp
cmpsl
mov
or
lret
xchg
mov
jl
and
sub
cs
ret
loope
jl
stos
ljmp
loope
es
jbe
icebp
xor
cmp
inc
dec
cmp
fdivl
stos
scas
pushf
movsb
ret
jo
shr
sbb
je
jns
outsl
dec
adc
jmp
sub
out
sahf
fidivs
sti
mov
mov
or
sahf
popf
pop
popa
leave
popf
pop
xchg
fldcw
outsl
xchg
cld
and
sub
sbbb
jbe
jle
add
and
mov
pop
inc
movsl
add
mov
fcoms
push
xor
jl
rolb
pop
add
inc
mov
rcl
mov
jmp
scas
pop
adc
or
sub
cmp
and
leave
in
ret
sbb
mov
cmp
mov
push
mov
and
gs
movsb
sbb
aam
test
ja
mov
ljmp
sbb
sbb
ss
xchg
aaa
mov
loope
push
jg
arpl
xchg
jb
dec
fldt
int
adc
dec
out
testb
sahf
sbb
pop
push
push
in
lock
xchg
or
adc
stos
cmp
aas
mov
mov
dec
lret
fnstsw
out
jno
lock
mov
mov
push
mov
sbb
ret
outsb
clc
push
push
int
sub
jo
je
mov
sti
pop
add
imul
in
jnp
sub
pop
ljmp
ret
cld
sti
fildl
in
cmc
sub
rcl
js
mov
jmp
mov
enter
mov
pop
adc
es
adc
jecxz
cmp
in
sti
jge
push
sbb
leave
inc
lea
xlat
sbb
jb
dec
mov
movsb
push
xor
xchg
xchg
out
scas
mov
cld
les
sahf
adc
inc
sub
pop
inc
shr
js
js
cmc
pop
daa
mov
sub
dec
push
or
jecxz
call
movsb
push
rolb
in
or
jmp
in
dec
mov
nop
stos
push
outsb
fdivs
repz
mov
jl
cld
adc
fsubr
mov
aad
sbb
xchg
pushf
jns
and
popf
sub
xchg
test
imul
in
mov
mov
adc
test
clc
push
mov
lret
pop
aas
test
sub
js
shrb
inc
lds
push
hlt
in
dec
call
dec
hlt
scas
rorb
jno
adc
jg
lcall
in
insb
jno
sub
fstpl
ret
jecxz
jle
repnz
cmpsb
aad
pop
and
add
jo
or
fs
notl
adcl
cmpsb
fistps
push
aaa
incl
jnp
mov
aaa
jmp
scas
aas
mov
dec
sbb
das
sbb
ja
in
in
repnz
pop
das
mov
xor
pushf
mov
push
and
ret
sarl
popf
mov
shrl
hlt
dec
jge
push
mov
out
shlb
outsl
outsb
cltd
sbb
add
cmpsb
popa
movsl
rolb
inc
scas
roll
xor
insl
add
fdivl
and
or
cwtl
sub
or
xchg
sahf
adc
cmp
xchg
dec
es
daa
pop
cmpsb
out
pop
inc
fsubp
push
mov
pusha
and
mov
fisttps
mov
shrb
andl
and
dec
and
inc
and
jbe
pop
mov
ret
push
xor
jmp
fimull
mov
or
pop
ret
fstl
mov
clc
jmp
cmp
sbb
push
leave
sub
notb
shlb
xchg
mov
fisubrs
psrad
repz
clc
or
aad
adc
aaa
pop
mov
fidivrl
decb
pop
adc
aad
sbb
scas
shll
cs
scas
mov
or
ret
pop
cmp
xchg
outsb
mov
sbb
ss
scas
addr16
xchg
aad
push
test
inc
lods
iret
adc
xchg
jmp
pushl
sub
clc
xchg
fisttps
aaa
xor
mov
fildl
lods
into
dec
inc
stc
inc
ja
jne
cmp
mov
int3
mov
xchg
sbb
or
repnz
arpl
dec
add
mov
mov
or
pavgw
fs
mov
out
fiaddl
cmc
push
mov
cmpsb
or
pop
adc
push
or
push
mov
lcall
mov
fistps
sbb
mov
adc
xor
pusha
out
mov
aam
ds
sti
fwait
rorb
xor
mov
and
mov
jo
and
sub
aas
and
jle
cmpsb
test
test
insb
cli
aaa
aam
mov
ds
mov
sub
imul
inc
imul
aad
je
jno
sbb
leave
xor
inc
mov
sbbl
enter
lret
sti
cmp
shll
or
insb
iret
nop
sldt
lock
cs
ficoms
mov
push
cmp
gs
popf
dec
mov
pop
or
out
cmp
jno
push
add
push
movsl
pop
xchg
fwait
xchg
mov
movsl
movsb
dec
add
xchg
jle
loope
jns
adc
mov
and
adc
aam
jne
jns
inc
jl
dec
sbbb
scas
xchg
inc
lock
cmp
push
adc
pop
lahf
mov
in
mov
sbb
mov
dec
in
xchg
add
inc
mov
xchg
bound
xchg
xchg
sub
bound
stos
dec
dec
ss
inc
mov
das
mov
movsl
add
sub
pop
pop
push
mov
lods
jnp
adc
lea
js
xor
sbb
mov
mov
xor
sbb
mov
inc
mov
stc
or
and
mov
movsl
adc
inc
std
cmp
mov
mov
aas
dec
lret
stos
add
fimuls
push
popa
cld
loopne
ret
sub
add
jecxz
dec
add
mov
sbb
cmovbe
shrb
inc
outsl
inc
jmp
movsl
cmp
std
daa
insl
cli
cmpsb
loopne
aas
push
xchg
sub
mov
push
mov
inc
xlat
fdivl
adcl
test
jae
xor
mov
sbb
push
popf
lods
clc
cmpsb
stc
xchg
test
cmc
mov
add
ss
lea
ljmp
add
pop
fisttps
xchg
xchg
and
push
and
xchg
xor
and
inc
pop
out
xor
push
jo
adcb
insl
loopne
push
inc
pushl
cs
dec
int3
stc
push
mov
add
stos
cmpsl
inc
and
xlat
push
and
sarl
sbb
jo
enter
mov
mov
stos
out
arpl
xchg
push
int
mov
repz
mov
mov
outsb
mov
shl
cmp
lock
push
sub
jp
rorb
aaa
dec
das
ljmp
xor
sub
or
dec
mov
push
xchg
aam
cmc
cmc
pop
mov
test
and
leave
adc
out
rorb
repnz
mov
fprem1
es
clc
dec
adc
insb
xor
dec
out
push
push
jg
push
in
rorl
push
test
pop
inc
jle
andb
mov
cmpsl
rcrl
xor
add
sub
add
and
jecxz,pn
aam
mov
sbb
rcll
shlb
int
inc
pop
or
mov
mov
adc
imul
mov
les
cmc
les
ljmp
scas
fwait
mov
mov
jo
xlat
jne
ss
rorl
sahf
stc
cmp
mov
test
jecxz
inc
lock
dec
aam
fs
mov
xchg
fwait
sub
cmp
popa
xchg
jecxz
lcall
fimull
aad
inc
int
pop
shlb
mov
cmpsl
add
mov
sub
jp
ss
std
std
sub
cld
xor
aaa
int3
xchg
add
adc
dec
jno
out
sub
inc
imul
imul
adc
xchg
je
cmp
xor
pusha
dec
js
cli
mov
adc
sar
fcom
cmpsl
jle
in
enter
add
mov
cltd
push
adc
mov
mull
shrb
xchg
adc
pushl
adc
or
dec
xor
loop
addr16
inc
xor
cmp
or
add
loope
and
push
mov
dec
pop
nop
lcall
roll
mov
shrb
aad
lret
pop
cltd
mov
dec
or
cmp
add
adc
pusha
insb
mov
nop
jle
test
inc
pop
arpl
data16
fistl
lods
jo
sti
scas
cmpsb
mov
int
mov
lret
out
js
pop
mov
or
std
and
pop
lret
cmp
jmp
mov
cltd
or
stos
mov
adc
push
mov
pop
xchg
andl
sbb
or
call
in
add
les
pop
mov
xchg
sbb
mov
push
lahf
xor
push
xor
jnp
rorl
push
fwait
aas
sti
xchg
es
ljmp
ss
fwait
movsb
xchg
inc
lret
aad
test
xchg
stos
pusha
lret
cmp
repnz
movsl
rclb
cmp
sbb
ljmp
push
mov
add
out
in
outsb
inc
mov
ret
pushf
test
mov
in
xchg
fcomps
mov
sti
xor
mov
dec
sbb
xchg
daa
imul
push
aas
cmp
dec
xchg
pushf
sahf
test
mov
loope
push
enter
inc
jbe
sub
decl
int3
inc
pop
movsb
les
inc
ret
iret
inc
jne
xor
ror
stos
dec
lret
xchg
sub
pop
xchg
sbb
mov
adc
jmp
push
sub
push
push
pop
test
pop
testb
pop
inc
adc
popf
dec
loopne
xlat
shll
sbbl
dec
mov
loope
pop
ret
sub
cmc
stos
in
cli
jge
int3
jecxz
pop
lret
jg
lret
sbb
inc
lods
lret
hlt
inc
fidivs
scas
mov
test
lahf
ja
pop
push
cmpsb
mov
sub
xor
mov
pop
sbb
push
cmpsb
scas
popf
cmp
inc
mov
xchg
cli
xchg
retw
mov
int3
int3
aaa
popa
int
xor
inc
xor
shr
adc
lret
test
pop
sbb
fldenv
xor
or
jmp
add
xchg
sub
xor
ret
ucomiss
into
and
or
mov
mov
xlat
cmp
in
mov
jbe
push
ja
and
lods
and
aaa
lret
nop
lock
loop
pop
mov
or
jae
mov
mov
mov
sbb
push
and
cli
ljmp
xchg
inc
push
push
sub
sbb
lret
mov
sub
sub
mov
orl
jp
jecxz
test
inc
jge
orb
add
xlat
into
icebp
dec
adc
push
ror
jle
adc
bound
roll
les
fs
lahf
push
pop
pop
std
pop
test
stc
pushf
mov
xor
hlt
out
lds
imul
or
cltd
hlt
pushf
jle
xor
or
and
pop
leave
cmpsb
in
xchg
fs
sbb
lcall
mov
repz
dec
mov
imul
cmp
outsl
rcrl
inc
fstpt
shlb
fwait
test
adcl
and
addr16
mov
mov
or
ds
or
cmp
or
cmp
lret
sub
in
push
add
xor
popf
sbb
push
mov
mov
sub
adc
aam
lds
mov
mov
sbb
lock
adc
mov
jle
mov
sub
or
or
or
mov
push
into
and
push
cmp
movsl
out
push
dec
sbb
or
jae
push
or
jnp
mov
jne
iret
or
movsb
cmpsl
lcall
cmp
out
jle
jns
inc
push
sbb
cld
cmpsl
sarl
in
and
push
xor
pop
pop
cmp
sub
rorl
xlat
pop
cmp
in
dec
sub
push
hlt
std
sub
sbb
lahf
test
xor
mov
dec
push
jecxz
sub
jg
fmull
pop
loop
cs
add
imul
lahf
in
ss
cmp
daa
in
shlb
inc
shl
sbb
mov
pop
cmp
push
mov
fs
daa
scas
jne
inc
pop
faddl
lods
mov
pop
stos
adc
je
cltd
jno
int3
pusha
mov
sti
push
call
adc
add
or
lahf
faddl
mov
pop
fisubrl
aam
jbe
or
cmp
scas
mov
popa
mov
or
cwtl
mov
push
cltd
adc
movsl
sbb
sub
cmc
xchg
mov
add
orl
mov
leave
insl
sti
inc
jecxz
and
mov
sub
clc
xlat
icebp
and
leave
xchg
ljmp
outsl
mov
cmp
dec
aam
js
push
mov
jno
lcall
shlb
sbbl
pusha
add
repz
dec
fnstenv
ret
push
lods
push
std
adc
pop
inc
inc
sub
push
jne
aad
popf
pop
jns
testl
xor
outsl
lcall
lods
dec
mov
jno
fwait
ja
lcall
mov
cmpsl
into
in
out
adcb
add
pusha
rclb
pop
pop
mov
pushf
in
mov
or
sub
js
ss
or
dec
mov
test
mov
pop
aad
sub
scas
hlt
jno
sbb
rcr
data16
adc
stos
or
in
mov
mov
scas
push
or
push
add
insb
xor
adc
pop
add
cmp
icebp
jecxz
adc
xor
stc
mov
aaa
or
jmp
cmp
dec
bound
dec
stc
imul
sbb
inc
insl
xchg
insb
jp
push
je
pop
jp
repnz
adc
mov
int3
jae
faddl
pop
popf
aad
dec
or
inc
push
popa
sbb
push
out
les
sbb
and
pop
add
out
in
repnz
or
movnti
mov
imul
mov
ror
pop
cmp
ljmp
sub
addr16
mov
in
loopne
or
insl
xchg
cmp
dec
shlb
mov
das
jbe
cmp
dec
push
scas
rclb
pop
and
imulb
sub
cwtl
fidivl
xchg
adc
lret
fbld
fldt
cld
sarl
jno
ret
xchg
jns
iret
or
sbb
lahf
div
mov
push
ljmp
xorb
adc
out
xlat
mov
mov
add
addl
imul
jne
lret
push
xchg
psllq
ret
insl
fbld
repz
call
jo
rorb
inc
in
pop
repz
in
cmpsl
mov
pop
dec
xchg
mov
add
scas
sbb
loope
scas
cmp
out
add
clc
mov
aaa
jmp
add
jmp
mov
repz
or
popa
adc
lcall
or
mov
test
xor
les
pop
sbbl
stc
test
pop
cmp
push
out
jae
cmp
xchg
xchg
cs
icebp
mov
pop
test
sub
push
cmp
mov
ficomps
jg
movsb
inc
pop
js
dec
mov
popf
sub
arpl
outsb
fstl
mov
push
xor
xor
jb
dec
ret
mov
pop
lds
and
dec
dec
fidivs
cmc
add
xor
sub
dec
in
lods
ret
test
daa
lret
xor
js
adc
add
cmp
repz
data16
cmp
lods
dec
clc
adc
aam
pop
xchg
inc
cmp
movsl
es
das
xor
add
popa
dec
ljmp
jnp
add
into
sub
fcmovbe
sub
mov
pop
cmpsb
add
dec
pop
push
scas
xchg
cmpsb
clc
inc
stos
popa
push
adcb
jns
or
inc
inc
aas
dec
inc
cmc
and
cwtl
pop
addr16
fwait
push
icebp
loopne
rcrl
push
mov
jb
adc
sub
ja
mov
test
rorl
inc
push
aam
fs
lcall
or
lea
mov
adc
dec
or
insl
lea
mov
dec
and
data16
or
and
test
mov
mov
pop
sbb
pop
les
push
lods
jle
xchg
fnstenv
aaa
rorl
inc
out
or
lret
push
movsb
sub
daa
pop
repz
pop
inc
mov
jp
je
mov
sub
xchg
push
and
or
mov
stos
fisubs
sub
mov
pop
dec
xor
lahf
shrl
jbe
or
scas
fildl
or
mov
gs
xchg
jecxz
sarb
rcll
jae
cmp
ror
adc
sbb
xor
loopne
scas
aad
sbb
xchg
lcall
sub
movb
insb
imul
shll
clc
test
jno
cmp
adc
push
in
lock
xchg
xlat
pop
mov
or
psubd
je
fists
cmp
xor
nop
add
mov
invd
lods
in
mov
loop
cmpb
cmp
lods
pop
xorl
clc
call
or
popf
mov
movsb
shrb
out
dec
in
clc
mov
in
inc
xor
ret
xchg
int3
enter
fadd
popa
jge
out
adc
loopne
adc
or
jns
fwait
mov
out
imul
mov
ds
sti
test
clc
jl
mov
aaa
lds
rolb
jge
jle
and
insl
dec
push
jle
loope
ljmp
jno
or
lahf
cmp
insl
stos
mov
repnz
call
cmp
push
fbld
movsl
mov
and
dec
fsubl
arpl
cltd
jecxz
aas
or
push
pop
rcl
adc
push
mov
mov
inc
push
mov
push
fsubrp
fisubrs
in
outsb
outsl
cmp
jecxz
sub
in
icebp
cwtl
loop
add
or
ljmp
cmc
or
imul
pop
insl
or
cs
rcr
xor
mov
ljmp
jb
push
loope
ret
inc
xchg
clc
or
in
mov
leave
add
push
mov
fcmovnbe
cmpsb
fstps
loope
dec
cld
nop
outsl
pop
mov
cli
add
int
jnp
and
adc
push
roll
mov
push
mov
xchg
lods
adc
rorl
add
push
adc
je
dec
aaa
pop
lods
and
addr16
pushf
sub
mov
pop
add
inc
call
xchg
and
gs
adc
pop
add
or
not
or
cmp
and
push
pop
aad
mov
pusha
sub
popa
push
inc
sti
xchg
cmp
clc
outsl
repz
cmp
loop
mov
andb
jge
jno
aas
sbb
gs
inc
bound
cltd
xor
jle
cmp
jp
test
and
test
mov
jl
mov
dec
out
dec
mov
adc
xlat
dec
jg
out
mov
pop
cltd
sti
mov
mov
lods
in
movl
xchg
mov
inc
les
mov
and
lea
push
xlat
mov
in
inc
sahf
cs
stos
dec
popf
mov
or
cli
push
sbb
add
dec
insb
mov
jg
inc
dec
push
xchg
insl
int
loope
loop
call
addr16
or
sub
pusha
sbb
xor
push
fwait
xchg
push
inc
inc
pop
dec
lret
push
sti
xor
push
cld
jg
push
xlat
arpl
in
sub
inc
lods
bound
pusha
pop
xchg
cmp
mov
dec
lret
clc
xcrypt-cbc
cmpsl
xchg
andb
sub
mov
lcall
jl
icebp
push
scas
jb
inc
cli
in
mov
out
mov
int3
xor
fstps
xlat
orb
lea
push
and
push
fcoms
add
shlb
ds
jmp
dec
pop
leave
jb
cmp
scas
mov
jno
icebp
sub
mov
nop
bound
pusha
push
pusha
ficoml
ja
sbb
mov
mov
jnp
cmp
loope
call
test
jg
or
inc
arpl
xor
aas
adc
in
jo
loopne
jo
cltd
fwait
lods
pusha
push
das
out
leave
sub
add
fidivl
ret
mov
adc
inc
into
lret
mov
popl
frstor
lea
pushf
pop
push
cli
jge
add
imul
cwtl
and
divl
test
out
sahf
adc
sub
mov
xchg
mov
sub
and
movsl
repz
test
lock
cmpsl
daa
xor
jb
xor
push
pop
stos
cwtl
pop
ficompl
inc
push
mov
adc
lock
dec
mov
lret
movsb
mov
push
les
aas
add
addr16
jae
mov
mov
in
adc
inc
push
cli
inc
popf
int
ja
cmp
push
mov
ss
xor
mov
aam
and
sbb
enter
jg
je
ja
je
sarl
rcrl
xsavec
fmull
inc
dec
and
cli
loopne
icebp
lods
and
adc
xor
sub
mov
add
push
or
push
dec
fdivrl
cltd
mov
push
mov
add
push
fiaddl
in
xchg
mov
mov
ljmp
xchg
stos
push
adc
jp
and
cli
mov
lock
das
popf
push
fmulp
clc
xchg
jns
inc
movsl
and
sub
cld
negl
hlt
imul
ljmp
daa
inc
out
dec
xor
nop
mov
adc
shll
decl
cmp
loopne
mov
mov
xor
push
loope
or
lahf
in
jnp
or
pop
fidivrl
pop
stos
xchg
mov
hlt
push
mov
into
inc
outsl
sub
cmp
test
repnz
mov
and
inc
aaa
xchg
ss
out
lret
jo
dec
mov
mov
sbb
fmulp
mov
jnp
sub
mov
push
adc
sub
sbb
sub
mov
inc
movsb
dec
scas
or
ja
push
inc
arpl
cmp
out
sbb
je
sbb
lcall
int3
jae
pop
arpl
mov
push
add
fsts
push
in
js
imul
xor
rcrl
pop
mov
jno
loop
stos
add
rcll
mov
pop
mov
dec
push
mov
add
ficompl
les
rclb
cmp
int
push
jmp
mov
js
sub
mov
pop
mov
inc
fsubrp
scas
lret
lar
sbb
pop
jl
add
jne
bound
pushf
mov
jmp
mov
std
iret
fldenv
xor
sub
cmp
in
mov
in
jb
mov
pop
mov
dec
push
add
test
lods
hlt
iret
sbb
inc
call
mov
mov
sub
cmp
mov
xchg
fldl
mov
pop
sbb
cmpsl
mov
dec
xor
xor
inc
data16
xchg
ds
mov
sub
mov
pop
repz
push
push
mov
test
aas
xlat
fwait
ret
and
jge
jl
loope
cmp
cld
faddl
popa
sub
mov
mov
gs
cs
and
sbbl
push
cmp
sahf
xor
or
push
addr16
add
in
cli
xor
das
adc
insb
pop
aad
add
insl
loop
repnz
or
scas
lds
fimull
xlat
push
aam
adc
add
testl
arpl
pop
sbbb
subb
mov
mov
insb
push
pop
popf
scas
loop
les
test
mov
add
and
das
les
js
cwtl
out
test
mov
xchg
inc
loope
add
push
mov
xor
loope
xor
jmp
jmp
mov
or
iret
pop
mov
clc
popf
xlat
fdivs
in
sbb
fstpt
add
inc
xchg
pusha
out
dec
das
xchg
adc
stc
mov
mov
lods
dec
jecxz
sub
sbb
sub
jmp
xchg
dec
push
xor
test
xorl
dec
jecxz
mov
jo
test
test
cs
pop
xchg
out
movsl
imul
cmpsb
add
lds
movsb
jp
std
nop
aad
sarb
inc
imul
pop
jle
or
xchg
sub
lcall
mov
shlb
add
sbb
mov
sbb
mov
jb
mov
lods
sbb
or
icebp
icebp
push
xlat
inc
sahf
jecxz
adc
xchg
arpl
or
int
xor
adc
movsb
cs
fsubr
into
pop
fcmovu
test
add
outsl
in
pop
sahf
cmp
xor
sub
inc
sub
ss
stos
jecxz
xor
jmp
sbb
in
rcr
fcoms
cmp
outsl
jp
or
fiadds
in
cld
pop
lahf
pop
lcall
push
scas
cmpsl
hlt
sub
fsubs
in
and
xchg
cmp
inc
jbe
imul
and
lds
insb
lret
loop
ja
lea
jb
sub
mov
xchg
icebp
adc
sbb
in
or
mov
rolb
stc
test
sub
and
mov
loop
mov
jl
filds
mov
mov
pop
cmpsb
js
mov
dec
jmp
fsubr
out
in
lods
es
mov
and
xchg
movsl
mov
testb
cltd
jnp
push
fdiv
sub
dec
in
lcall
icebp
jmp
jbe
jmp
cvtdq2ps
sbb
dec
push
xchg
lock
cmpl
xor
fcmovnbe
and
int3
push
pop
fwait
aad
scas
dec
jne
mov
push
lods
inc
sub
cmp
gs
aam
ja
fsubs
sbb
xor
lsl
cwtl
leave
lods
ljmp
pop
jl
xor
pop
ret
in
mov
dec
lcall
fimuls
pop
sbb
arpl
outsb
jnp
divl
fwait
push
in
out
inc
loope
mov
lea
push
aas
push
mov
loopne
push
mov
das
sub
and
rorl
cwtl
pushf
imul
pop
imul
xchg
sahf
repnz
push
jge
push
dec
pop
ja
cmpsb
daa
or
jo
add
pop
repz
xchg
bound
neg
cmpsl
lods
lock
and
enter
mov
rolb
insb
push
insb
ja
dec
adc
fnsave
fsub
jl
rcrb
add
xchg
push
int
pop
nop
xor
adc
movsl
mov
add
sahf
jg
fists
add
pop
push
std
aam
test
push
test
pop
in
sbb
jnp
jne
icebp
je
sub
stc
mov
lcall
call
negb
divps
mov
enter
mov
inc
push
sarl
pop
test
xor
ljmp
pop
inc
or
or
cld
mov
mov
incl
std
data16
add
cmp
push
pop
push
andl
mov
jge
xor
leave
cmpsb
pusha
div
cwtl
jo
rclb
daa
jg
test
cmp
cld
xchg
sbb
mov
nop
int
sbb
daa
cld
mov
add
loopne
adc
bts
jmp
sbb
mov
push
jp
rolb
mov
into
pop
jns
repnz
push
mov
fmuls
jo
sbb
faddl
xchg
mov
movsb
icebp
push
dec
sti
mov
fildl
pop
xlat
dec
mov
leave
pop
jno
enter
xor
jbe
cmp
sbb
in
imul
movsb
mov
adc
and
lds
mov
in
sub
sti
roll
adc
insb
enter
mov
rorl
xor
loope
xor
pop
cmp
sbb
fidivs
loopne
mov
xor
adc
ss
arpl
push
repz
xchg
aas
xchg
push
movsb
repz
aaa
lods
dec
and
cmpsl
push
jge
dec
adc
stc
jae
aad
les
inc
cmp
pusha
ljmp
loope
dec
jae
or
mov
leave
adc
idiv
loope
cmp
mov
mov
add
in
ror
lret
cmp
push
xchg
cmc
cs
adc
aaa
xchg
mov
shr
test
jno
bnd
movsl
pop
and
mov
adc
mov
ja
or
pop
outsl
mov
xchg
icebp
adc
adc
xor
cmp
pop
sub
dec
push
adcb
push
jo
mov
adc
cmpsl
int
jg
out
fistpl
cmovg
sbb
xchg
test
pop
or
inc
call
add
xor
arpl
daa
into
pop
rcrb
sahf
dec
out
bound
cmp
aas
lret
ja
push
pop
ds
mov
mov
adc
aam
sbb
inc
jp
imul
into
hlt
push
xor
xchg
cmp
add
and
cmc
cmp
daa
mov
push
scas
ds
push
aam
add
cwtl
mov
popa
mul
pop
push
lret
ret
push
outsl
mov
in
insb
jge
leave
xchg
testl
lcall
out
jge
and
aas
lret
andb
lahf
inc
xor
cmp
xorl
mov
xchg
mov
xor
loop
pop
cltd
mov
sahf
jg
bound
sbb
loopne
mov
in
inc
stos
push
bound
mov
in
ja
in
out
cltd
add
cwtl
and
jbe
icebp
add
imul
cmp
and
test
xchg
mov
adc
xchg
inc
cltd
cmovp
rclb
xchg
adc
or
jge
mov
pusha
ret
out
cltd
imul
push
dec
push
out
pop
push
jnp
fsubrp
xchg
xchg
or
ret
xor
ds
mov
and
and
scas
mov
pop
cmpsb
into
jae
jno
vmread
ss
sub
pop
cmp
mov
sub
movsl
inc
dec
ja
rorl
andl
add
lea
adc
jno
ds
int3
fucomi
aad
pop
push
imul
pop
int3
or
xchg
jbe
mov
pop
jbe
jp
mov
rorl
mov
push
jl
mov
js
inc
jmp
in
out
cld
out
data16
insb
add
inc
fs
xor
dec
jns
pushf
jp
imul
push
jg
fwait
mov
out
lahf
ret
pop
sbb
xchg
or
aaa
jne
sbb
jg
jl
sahf
es
inc
cwtl
and
pop
inc
push
pop
daa
insb
popa
lcall
push
pop
xchg
not
repz
sbb
cmc
cmpl
pop
je
stos
lods
dec
lods
push
sbb
rorb
ljmp
sbb
daa
jmp
inc
bnd
push
insl
inc
pop
idiv
movsb
test
push
sarb
sbb
and
mov
shll
xlat
push
lea
mov
pop
push
mov
fnstcw
jnp
cltd
add
jns
xchg
sub
cmp
add
gs
mov
andb
popf
js
and
xor
out
xchg
daa
mov
mov
in
mov
add
bound
stc
insw
jmp
mov
aas
cwtl
pop
aas
lret
or
cltd
hlt
sub
sbb
xor
int
sbb
leave
daa
xor
mul
arpl
fcoml
in
in
cli
punpcklwd
cmp
jns
mov
cltd
mov
and
push
aaa
popf
or
mov
xor
out
cld
call
push
mov
call
or
int
push
mov
xchg
bswap
push
mov
hlt
sti
xchg
cmpsl
pop
cmpl
mov
icebp
push
lahf
mov
mov
arpl
popf
test
in
pop
aaa
dec
jb
andb
call
sub
negb
lea
push
addr16
xor
popf
fmull
packsswb
push
jae
lods
daa
or
sbb
loopne
push
push
sub
popf
pushf
pusha
clc
push
repnz
icebp
enter
popa
pusha
fcoml
mov
sbb
push
sbb
jmp
loopne
ss
sbb
pandn
mov
jl
es
ss
divb
test
xor
cmp
mov
scas
jmp
fstpt
adc
mov
lret
nop
in
rcll
adc
dec
adc
test
and
hlt
adc
pop
pusha
popf
and
mov
xor
je
sub
xor
repnz
push
sbb
cltd
xchg
xor
cmp
int3
cli
sub
jo
aam
and
jge
scas
stc
mov
pop
rcrb
push
adc
xor
in
fadds
push
cltd
cld
outsl
mov
test
daa
dec
pop
test
xchg
cmpb
jne
addr16
insl
adc
int
mov
mov
push
mov
inc
adc
pop
sub
outsb
mov
pop
pop
lods
das
lea
clc
xor
add
cmp
mov
mov
ja
xlat
icebp
inc
cmpl
mov
mov
sub
xchg
test
or
pusha
inc
mov
call
inc
mov
push
iret
dec
cli
ret
mov
les
insl
sahf
jno
sub
push
add
out
and
lret
jnp
insl
stos
add
ret
je
insl
inc
inc
idiv
push
clc
or
pop
fwait
xchg
nop
aaa
stc
in
jecxz
adc
cmp
mov
mov
jge
add
mulb
into
mov
in
jmp
jno
gs
out
stos
mov
and
enter
data16
pop
loopne
rcl
xchg
scas
mov
imul
adc
imul
adc
flds
fcoms
cwtl
push
lock
or
cwtl
dec
mov
pop
sar
ret
into
rcrb
pop
inc
scas
mov
fwait
psadbw
push
fs
aas
fisubl
inc
or
pop
cmp
or
and
das
ss
inc
sub
lcall
movsb
inc
mov
nop
fisubrl
cmpsb
test
int3
popf
sbb
jns
xchg
pop
shr
cmp
cmp
insl
mov
rcl
xor
ret
push
push
cld
inc
inc
das
adc
inc
lock
sbb
xor
sbb
lea
jbe
addr16
clc
and
loop
lods
jl
testl
ret
and
push
repz
mov
add
xchg
daa
daa
sub
jmp
cmp
or
aad
pop
fidivrs
bound
xor
push
dec
sahf
mov
leave
sti
sub
sar
add
pusha
addl
cmc
fwait
jp
sbb
push
arpl
roll
mov
aad
xor
std
inc
scas
arpl
pop
and
in
add
into
mov
or
aas
movsl
rcrl
sbb
inc
mov
andl
lods
push
into
adc
cltd
arpl
pop
or
movups
jge
sub
pop
lcall
mov
ret
jg
mov
xlat
fisttpl
jns
and
fwait
add
mov
loop
mov
aas
inc
je
mov
pop
inc
add
sbb
test
scas
push
ja
in
and
lret
sub
cmp
fistpll
mov
stc
xchg
sbb
ficomps
loop
sbb
cmp
iret
jle
add
enter
mov
jl
ret
push
fisubrs
mov
dec
iret
cmc
lahf
jbe
jecxz
sarl
idivb
push
mov
fmuls
fmuls
add
jge
inc
iret
adc
imul
stc
call
push
lcall
xlat
testb
push
jne
imul
rol
jne
lds
fs
xor
pop
sub
adc
push
fistps
ss
mov
imul
rcll
rcrb
mov
pop
nop
stos
shlb
adc
push
insl
adc
andl
pop
adc
hlt
pushf
aaa
lret
push
enter
test
xchg
jnp
mov
nop
scas
push
scas
fadds
mov
push
daa
cld
jmp
sbb
and
das
aam
out
in
arpl
push
or
dec
insb
pop
cli
aas
sbb
test
hlt
dec
aas
xchg
nop
clc
adc
adc
jbe
ds
out
add
pop
scas
sub
cmp
jae
pop
pop
jb
lret
std
ror
sbb
rclb
cmp
jb
decl
xor
lret
sub
nop
out
add
les
cmp
mov
into
fwait
mov
iret
fists
je
inc
mov
mov
adc
cmc
call
pop
push
adc
adc
jns
sub
mov
inc
pop
add
mov
jnp
mov
gs
jge
imul
cld
pop
insl
push
out
rol
sbb
pop
and
pushf
sub
ds
clc
unpcklps
inc
jecxz
outsb
mov
mov
repz
ror
inc
cmp
push
dec
dec
or
insl
push
lahf
negl
in
pushl
ss
dec
sahf
xchg
scas
out
or
and
test
mov
xchg
push
and
ficoml
adc
fs
js
jecxz
or
popf
cli
jp
ja
sub
ds
insb
andl
shrl
test
and
pop
cmp
std
loope
mov
xchg
add
cmpsb
cs
cmp
and
adc
pusha
add
sahf
fs
pop
mov
into
loop
cmp
mov
stos
lods
pusha
lods
xlat
int
mov
fstps
push
xor
mov
popf
movsl
pop
fbstp
adc
dec
inc
pop
xchg
mov
movl
add
rcll
or
in
adc
push
inc
jmp
mov
js
test
js
ret
addb
hlt
test
out
pop
aad
test
sarl
pop
mulb
xchg
loop
pushf
lcall
dec
nop
out
fsts
mov
gs
push
sub
sbb
mov
rcll
ja
test
adc
das
push
xor
inc
fisttpll
ret
fldl
das
mov
mov
inc
or
imul
mov
sub
add
jmp
inc
cli
dec
js
cmp
aas
rolb
inc
lcall
mov
xchg
nop
pop
inc
or
daa
jge
mov
sbb
and
jne
dec
and
jg
enter
orb
pop
pushf
push
jge
icebp
movsl
cmp
jne
insl
xor
das
popa
test
cmc
mov
loope
push
testl
jl
add
je
in
in
sbb
lds
xchg
test
push
xchg
stos
sbb
sar
jecxz
dec
cmc
mov
dec
or
aaa
xchg
push
in
jo
out
fildl
rorl
cli
test
pop
in
or
sahf
inc
ss
call
out
shl
cmp
xor
ja
and
pop
xor
sub
sub
xlat
loopne
enter
pop
loope
mov
sbb
cmpsl
or
push
movsb
xchg
lock
jmp
lods
sbb
out
dec
rcrb
and
fcoms
cltd
fwait
aam
xchg
scas
adc
mov
pop
jp
std
add
test
adc
mov
pop
aad
or
push
imul
push
into
push
sub
pop
mov
test
ror
add
push
cld
sub
xor
xor
mov
push
dec
cmp
lock
xor
aam
adc
iret
pop
xchg
inc
fsubl
test
in
divl
or
leave
xchg
add
push
fstl
mov
mov
in
add
and
and
ror
leave
fs
add
push
xchg
mov
js
aas
pop
rclb
add
dec
push
cmc
push
rclb
vmwrite
shll
inc
fsts
xchg
mov
jb
and
push
push
xorb
dec
push
rcr
and
mov
mov
jle
loop
aad
mov
jp
inc
and
jnp
into
sub
jle
jge
fbstp
call
movsb
int
sbb
scas
mov
mov
inc
arpl
pop
push
inc
loop
sub
nop
movsb
push
lods
scas
pop
xchg
mov
cmp
cld
sbb
xor
add
bound
mov
sub
pushfw
repz
pop
andps
dec
inc
push
aam
xchg
or
int
aas
jae
andb
pusha
lock
xlat
mov
adc
dec
jecxz
repz
push
js
cli
sub
cmpsb
scas
or
sbb
xchg
lock
jo
mov
or
pop
rclb
dec
sub
sub
ljmp
in
test
cwtl
jmp
pop
dec
mov
jns
jb
mov
lods
lcall
jmp
fcoml
xor
scas
mov
gs
inc
xchg
mov
pushf
push
bound
bound
xchg
negb
and
push
jmp
cmp
test
in
mov
aas
or
push
mov
jae
dec
in
sbb
add
xchg
fimuls
adc
sub
cli
mov
lahf
iret
cmpsb
xlat
es
dec
or
push
outsl
cmc
aam
mov
add
push
push
jnp
lods
ret
sub
jns
or
push
inc
jo
cmpsl
stos
adc
pop
mov
add
orb
rcr
mov
dec
sub
push
es
adc
push
clc
fwait
ljmp
or
icebp
mov
cmc
pop
jmp
lahf
ljmp
push
sbb
mov
cltd
xchg
int
lahf
testl
mov
mov
idiv
push
inc
and
pop
loopne
pop
sub
pop
divb
lcall
lods
out
sbbl
ficoml
cmpsl
cli
fmuls
or
cmp
pop
js
push
mov
fst
ficomps
push
leave
es
push
xor
jae
adc
cmp
fistpl
mov
jbe
insl
roll
dec
xchg
lcall
xor
lods
add
cmc
dec
stc
xchg
or
cmp
adc
push
sbb
sub
jne
add
addr16
notl
adc
fidivs
jnp
ret
ret
dec
nop
stos
or
jnp
hlt
mov
jno
sub
lods
inc
ja
mov
pop
or
xchg
add
mov
leave
mov
jne
ret
jl
fists
jo
jb
adc
sti
adc
xchg
fildl
je
in
es
push
mov
and
mov
call
std
mov
inc
stc
sar
sahf
addr16
dec
sub
or
ret
in
fs
jno
repz
pushf
jae
inc
inc
mov
pop
bound
hlt
pop
in
mov
sub
movsb
xchg
add
add
js
and
fwait
jne
clc
movsl
jmp
mov
mov
and
inc
dec
clc
or
jmpw
test
movsl
shlb
inc
ret
test
leave
loope
movsl
pop
mov
daa
push
stos
scas
pop
push
cmp
data16
das
mov
call
shlb
shlb
lock
or
cltd
inc
bound
mov
movsl
movsb
fsubs
sub
jecxz
dec
sbb
sub
ret
sbb
mov
rcll
lret
xchg
mov
stos
lcall
cmp
fwait
inc
mov
cmp
fcmove
xchg
out
sbb
adc
dec
lock
push
cmp
idivb
inc
sbb
inc
sub
iret
adc
adc
loopne,pn
leave
out
cmp
and
jne
push
data16
fcmove
fmul
inc
in
pusha
pop
jl
lock
les
sarl
je
ljmp
imul
mov
ja
scas
into
mov
jg
dec
mov
inc
fsubrs
inc
je
xchg
hlt
fwait
jp
mov
jmp
push
mov
xchg
add
cmpsb
arpl
aaa
add
add
data16
je
push
mov
dec
mov
cmp
and
mov
push
pop
or
fldenv
mov
mov
mov
shrb
xchg
and
sub
add
mov
xor
lds
pop
sub
imul
movsb
or
and
dec
sbb
mov
cmp
xchg
lods
mov
sub
arpl
xchg
scas
cmp
pop
mov
orl
adc
adcb
scas
leave
push
hlt
jmp
repnz
cmc
inc
js
gs
pusha
jp
popa
pop
gs
dec
jp
push
cmc
lret
and
cmpsl
fisubl
or
addb
xor
jmp
xor
xchg
push
add
test
lock
or
sbb
sub
adc
sub
add
out
cwtl
push
pop
lods
inc
sbb
cmpsl
sbb
push
or
adc
jne
es
xchg
int
imul
cmp
lock
jle
jns
fcmovnb
les
mov
mov
invlpg
pushf
push
fldenv
cmp
ljmp
cmp
ret
vcvtps2pd
xlat
inc
lcall
add
cmp
ds
cmp
movsl
jmp
dec
sbb
cli
in
push
sahf
or
loope
loopne
cmp
pop
lds
and
lea
add
or
adc
mulb
sbb
das
push
add
stos
shlb
dec
mov
push
cltd
xchg
nop
sarl
lret
push
iret
in
hlt
je
je
pop
sarb
hlt
outsl
jnp
add
divl
je
popl
scas
pop
cltd
std
inc
jmp
jne
sbb
outsl
add
mov
nop
cmp
das
insb
test
fstl
stos
add
into
mov
and
data16
xchg
lret
or
sbb
pusha
pusha
sub
cmc
xor
adc
push
dec
pop
cs
lock
rorl
mov
jg
shlb
lods
ficoml
fnstenv
add
lds
rclb
push
call
xchg
xchg
ret
sbb
hlt
dec
cmpsb
jno
call
mov
or
addb
stos
in
mov
ret
lock
xchg
mov
mov
lods
pop
xchg
mov
mov
insb
sti
je
in
je
push
out
xchg
jp
ret
dec
sti
stos
sub
mov
lret
add
or
jl
repz
stos
lahf
cmpsb
sahf
adcl
inc
in
xlat
xor
pushf
lcall
popa
call
xchg
lahf
sub
cmp
mov
sbb
jge
je
ss
cld
loope
jmp
leave
test
fldln2
and
pop
into
loopne
cli
lock
addl
and
sub
sub
xor
xchg
in
and
test
cmp
cmp
cmp
out
jecxz
dec
cli
jnp
movsl
outsb
loop
and
jno
inc
out
or
lret
sub
in
push
imul
pop
xchg
xor
aad
lret
adc
dec
negb
aas
rorb
mov
mov
inc
add
push
xchg
or
xchg
stos
and
xorl
inc
fists
xchg
mov
jbe
mov
fs
or
jl
das
into
lcall
cmp
mov
xchg
into
push
push
mov
negb
shrl
dec
lods
lea
xchg
fucomip
sbb
push
cmpsb
sub
mov
jo
mov
jp
or
lds
pop
fs
mov
push
std
xchg
fs
pop
jb
pop
outsb
sbb
inc
or
jp
shr
cs
inc
xor
nop
imul
jecxz
scas
cmp
adc
and
ret
mov
cmp
scas
or
adc
xchg
cwtl
sbb
pushf
push
cli
aas
negb
iret
daa
lea
fcoms
sbb
aam
jle
add
mov
mov
inc
lods
xorb
cmpsb
in
sub
imul
stos
mov
sub
dec
or
test
xlat
int3
cmp
mov
pop
jb
fsts
subl
fildll
mov
add
mov
add
arpl
jp
mov
inc
mov
mov
stc
xchg
into
sti
dec
ret
mov
cli
pop
fstps
inc
ljmp
cli
scas
sub
dec
sbb
test
int3
leave
scas
mov
shrl
or
rclb
fwait
clc
cmpl
pop
add
or
push
gs
pop
fcom
inc
dec
rclb
add
shll
pop
inc
js
push
hlt
or
add
movsb
cmp
je
pop
inc
pop
mov
sub
out
pushf
mov
cltd
mov
mov
clc
adc
test
and
int3
fsubr
sbb
cmp
movsl
pop
test
ret
les
cmp
sub
pop
push
ror
jnp
push
and
sbb
inc
popl
in
out
je
cmp
xor
xor
sarb
cmc
decl
push
and
dec
mov
push
sti
int
jne
aaa
fcompl
out
fnstenv
fldenvs
stos
pop
loop
sti
or
test
lods
xlat
mov
stc
sbb
cmp
jne
in
inc
cmp
test
pop
and
lahf
cmp
lock
test
mov
mov
clc
inc
mov
jne
jae
sbb
pop
mov
sahf
ret
xor
sahf
mov
insl
lret
push
nop
out
and
jo
mov
sbb
jle
cmp
mov
mov
fnstcw
xor
ret
xchg
dec
out
mov
ljmp
sub
js
movsl
dec
popf
pop
xor
repz
mov
insb
inc
scas
shll
insl
ss
jne
ret
or
fisubrs
lcall
xchg
push
ds
dec
jge
mov
cmc
cmp
mov
xor
orb
in
adc
inc
mov
xor
je
sub
les
add
fcompl
adc
les
loope
cmpsl
and
or
fdivrl
mov
jo
enter
lods
comiss
div
repz
andl
outsl
sti
and
ja
aaa
mov
es
fs
lea
loope
out
adc
jae
push
ret
mov
add
dec
ss
pop
jnp
add
pop
je
add
repz
pop
popf
jp
hlt
repnz
xchg
xchg
imul
mov
adc
jns
fwait
or
jno
and
scas
adc
jae
push
mov
aam
and
das
xlat
jns
mov
xchg
outsl
jecxz
sub
mov
or
arpl
sahf
pop
fdiv
push
dec
fiaddl
mov
addr16
mov
dec
xchg
popa
outsb
out
aam
mov
rorb
mov
sbb
ret
ja
cltd
inc
jmp
int3
add
popa
stos
dec
cltd
leave
xchg
bound
inc
into
loope
xor
fcmove
pop
and
ss
cmp
sbb
jp
lds
sarb
fstps
and
je
mov
xchg
mov
sbb
add
aad
jge
lods
inc
lcall
xchg
mov
push
cli
into
movsb
jns
mov
lret
jnp
mov
xchg
rol
or
or
sbb
push
clc
adc
cwtl
mov
ret
push
jg
push
je
je
dec
inc
test
cmp
addl
popa
or
fstps
scas
popf
ret
inc
mov
jl
pop
or
jmp
loopne
in
subb
stos
sub
mov
xchg
das
xor
cs
js
pop
dec
sbb
sub
call
xchg
repz
and
or
sbb
stc
mov
cmpsb
outsb
xchg
dec
xor
das
mov
push
inc
insb
mov
outsb
leave
hlt
bound
add
popa
out
mov
jle
hlt
je
in
jns
in
and
je
leave
jnp
fsub
sub
in
dec
gs
mov
pop
and
or
mov
repz
xchg
cmp
loope
into
adc
push
xchg
leave
gs
lds
push
push
cmp
jecxz
sub
insb
fcom
sub
push
popf
jmp
cmpsl
push
push
inc
jge
sbb
xchg
jge
lret
ror
adc
mov
outsb
cs
out
xor
mov
xchg
out
das
fsub
xor
mov
jp
insb
add
adc
insl
shl
push
push
and
shl
fwait
pop
and
dec
sub
push
jg
sbb
jb
aaa
mov
jb
fisttpl
daa
cli
or
inc
int3
xchg
pushf
aad
add
push
ljmp
movsb
fnstcw
in
fwait
adc
mov
adc
dec
pop
loope
mov
enter
cs
push
leave
sbb
lret
scas
mov
mov
jge
adc
fidivs
movsb
adcb
lcall
leave
in
aam
fists
jmp
adc
insl
inc
mov
bnd
push
jae
int
xchg
inc
ja
sbb
jecxz
popa
mov
scas
in
dec
fsubs
outsb
inc
test
mov
mov
xor
mov
sarb
sbb
dec
mov
stos
sbb
outsb
adc
aam
dec
ret
and
xchg
in
stos
pushf
sti
fdivrs
and
xor
out
pop
clc
nop
push
xchg
mov
sahf
nop
int
leave
sti
cld
or
mov
inc
jno
ss
add
lcall
int
lret
jae
int
sub
add
or
ljmp
jmp
sbb
sbb
mov
addr16
fisubrs
xor
adcl
xchg
aas
cld
jnp
jp
add
rcl
rclb
cli
repz
lret
popf
xor
or
punpckldq
hlt
push
icebp
rcrl
jl
in
lret
inc
jo
shr
jo
dec
mov
and
jbe
sbb
add
mov
push
mov
repz
cmp
nopl
ficompl
sbb
inc
fdivl
sbb
cmp
lock
push
clc
adc
mov
fdivl
fistl
push
jb
xlat
lea
push
call
clc
cmp
in
fdivl
jns
push
inc
pop
and
mov
mov
cli
sbb
insw
lret
xor
int
mov
ret
pop
pusha
mov
in
sub
mov
push
xor
rcl
ja
pusha
roll
inc
fistpl
mov
or
outsl
adc
movsb
mov
test
arpl
mov
cmp
fidivrl
mov
test
add
jmp
jecxz
mov
mov
lret
movsb
add
enter
adcl
or
add
nop
mov
dec
push
orb
or
fwait
stos
mov
lock
js
roll
jne
aaa
out
push
in
jo
enter
ds
mov
inc
pop
adc
jb
loope
pop
mov
xor
inc
mov
loope
jge
dec
jne
fwait
aam
jle
jne
add
jg
ss
rcrl
and
mov
xor
cmp
pop
loope
cmpsl
xor
popf
aam
or
daa
dec
aad
vmwrite
lds
mov
movsl
cld
add
pop
and
and
pop
out
cmp
mov
fwait
ret
popf
or
dec
sub
pop
push
outsb
stc
mov
out
lods
and
adc
dec
icebp
nop
xlat
push
je
jbe
mov
jnp
jl
mov
pop
add
rorb
aam
jle
cmp
jno
cmp
add
in
jg
xor
pushf
sub
lcall
lods
popa
xchg
add
cld
mov
fstpt
xchg
repz
cltd
and
and
addl
push
int
xchg
aam
je
and
es
push
mov
fwait
pushf
ds
xchg
enter
add
sub
ds
in
test
jecxz
je
inc
bound
std
sbb
sbbb
mov
sub
sbb
pop
hlt
inc
and
and
fs
dec
mov
and
pop
cmp
cmpb
mov
es
imul
sub
popa
mov
mov
or
pop
cwtl
pop
jge
daa
xchg
xchg
insb
outsl
mov
fs
mov
push
call
mov
mov
out
push
xchg
rorb
pop
addr16
loopne
xchg
shll
arpl
ret
in
or
std
push
sbb
adc
jb
fcoml
dec
repnz
mov
xlat
jle
dec
outsl
std
add
xchg
adc
add
push
and
fwait
lods
sub
jg
push
cltd
inc
andl
adc
pop
cmpsl
subb
sub
or
push
jb
out
or
and
add
or
mov
mov
pop
or
jne
jmp
lret
push
xchg
inc
push
addr16
dec
jg
in
sub
add
insl
mov
lret
mov
out
mov
inc
xchg
adc
xchg
sub
enter
notl
and
add
add
ret
outsl
jb
jo
add
gs
pop
push
push
sarl
jmp
cmp
sub
xor
dec
dec
jl
rol
sbb
push
and
mov
enter
ja
loopne
out
dec
int3
sub
fmul
push
rclb
jecxz
outsb
inc
adcl
xor
stos
adc
in
pop
or
movsb
dec
and
cmpb
mov
imul
ds
add
mov
push
jo
cmp
fsubrs
shrb
push
nop
push
test
mov
aaa
mov
jmp
pop
stc
or
daa
lods
or
mov
inc
jp
sub
dec
mov
call
inc
std
in
and
ljmp
daa
or
inc
cltd
mov
loopne
jg
mov
mov
adcb
cmc
ret
xorb
jne
jno
cmp
enter
add
inc
or
adc
icebp
cltd
std
sbb
call
mov
ret
push
das
xor
stos
push
adc
add
sbb
popf
cmc
and
sbbb
repnz
lcall
aas
in
repz
fimuls
mov
pop
push
sbb
das
ljmp
sahf
jecxz
lcall
negb
nop
out
lahf
jmp
jecxz
mov
sub
je
stc
sbb
cli
paddb
call
inc
aam
push
jl
pop
push
mov
jle
xchg
lret
pop
and
jp
dec
insb
sti
stc
push
jo
sub
addl
insl
mov
push
ret
sbb
lahf
lahf
push
fiadds
negl
jmp
insl
cmp
adc
mov
lret
mov
inc
icebp
push
add
movsb
jae
jecxz
shl
push
fs
repz
adc
and
push
dec
call
movsb
mov
or
sbb
dec
add
fwait
sub
dec
cmp
dec
cs
stos
in
stos
fistl
push
adc
and
popa
mov
rcll
jmp
xor
mov
lock
jb
ds
gs
lret
dec
int
fisttps
mov
iret
adc
in
sbb
and
xorl
idivb
pushw
add
ja
mov
stos
cmp
enter
mov
fsubr
mov
into
xor
mov
mov
hlt
push
cmp
sub
xchg
jae
fs
enter
adc
sbb
mov
pop
mov
xchg
outsl
testl
int
enter
xchg
in
or
lret
les
lcall
jmp
stos
push
rorb
mov
dec
sub
std
movb
scas
pusha
imul
mov
rcll
dec
cmp
out
lea
or
cmp
cwtl
sub
push
pop
insb
jae
cmc
test
pop
nop
inc
xchg
sbb
lahf
mov
xchg
xor
push
aam
mov
pop
push
clc
std
xor
stc
inc
sbb
inc
das
test
push
mull
adc
inc
imul
and
lret
fnstsw
hlt
int3
les
ret
cmpsb
rcrb
pop
cwtl
mov
mov
mov
aad
fwait
dec
stc
loope
mov
or
adc
pop
mov
dec
adc
cmp
mov
inc
ds
pop
jge
fidivl
inc
sub
sub
pop
xchg
in
ja
cld
add
inc
pushf
enter
pop
inc
pop
or
incb
fldl
ret
aad
ljmp
pop
addb
hlt
jno
lods
rorl
ja
into
jnp
aas
pop
vcvttsd2si
cmpsb
push
stc
dec
jbe
fisttps
and
inc
mov
loope
mov
in
scas
adc
cmp
adc
pop
jno
and
sahf
cwtl
cwtl
add
mov
xor
cmp
cmp
andb
aaa
pop
imul
insl
inc
fs
pop
inc
sub
popa
out
std
jae
push
xor
aaa
pop
lret
dec
fistl
mov
jecxz
sub
shrb
ret
insb
push
adcb
js
inc
std
iret
scas
popf
hlt
in
out
mov
mov
pushf
and
xlat
xorb
fbld
negl
sub
sarb
jg
xor
push
adc
cmp
aaa
add
sarl
outsl
lret
dec
pop
adc
push
test
call
or
jb,pt
popf
fsubr
mov
pop
jmp
lret
fcom
jge
mov
cwtl
pop
pop
mov
pop
insl
mov
xor
pop
cwtl
scas
jge
aaa
and
add
rcll
inc
xor
repnz
outsl
rcr
xor
mov
test
pushf
je
aas
add
les
adc
mov
sbb
inc
je
pop
jo
lahf
lds
mov
jle
in
call
out
iret
jno
stos
movsl
iret
sti
push
add
cmp
cmp
push
rcll
ret
imul
fnstcw
movsl
sbbb
xlat
xchg
bound
pop
inc
xor
push
pop
xlat
and
sahf
adc
fimuls
push
aaa
imul
lods
cwtl
push
mov
xchg
push
imul
insb
aaa
xchg
sub
pop
push
push
mov
pop
push
inc
xor
sub
add
pop
jne
pop
pop
jbe
xchg
fstps
push
shll
inc
and
jne
vmovaps
adcb
mov
pop
xchg
jg
push
xchg
cmp
sti
and
inc
sub
inc
rol
xor
adc
mov
pop
mov
dec
out
lret
sub
outsb
in
outsl
jns
test
outsb
fnstenv
add
addb
sub
out
fwait
pusha
lret
arpl
test
mov
dec
call
out
push
xchg
cltd
lods
lea
pop
mov
mov
sbb
mov
js
xchg
cmp
or
test
mov
mov
and
inc
decl
orb
add
movsl
outsl
sub
xchg
pextrw
jae
inc
push
xchg
imul
jp
mov
mov
cmc
or
ss
xchg
or
xor
pop
xchg
rcl
jge
movsl
mov
int
aad
adcl
scas
lahf
inc
cmpsl
mov
out
scas
pop
hlt
xchg
in
shlb
pop
clc
push
test
push
cs
imulb
stos
addr16
clc
push
lcall
fstl
inc
or
inc
push
cs
mov
pop
sbb
and
push
mov
cmpsb
mov
stc
cmp
inc
in
xchg
outsl
mov
xor
sbb
pop
test
gs
cmp
loop
out
imul
vmovss
jb
repz
push
xchg
js
mov
mov
repnz
xor
xorb
mov
push
dec
call
sbb
xlat
ret
jmp
mov
jl
push
lcall
lcall
sbb
add
rorl
fcom
movsl
into
shlb
fsubl
test
leave
sbb
cli
mov
repz
push
movsb
hlt
add
imul
insb
jns
dec
adc
add
adc
call
repz
sub
out
in
test
or
add
imul
inc
push
nop
pop
pop
adc
inc
adc
popl
xchg
jmp
cmpl
insb
sub
arpl
subl
sbb
dec
push
cmp
inc
pop
cld
jae
jns
cli
xchg
xchg
mov
insb
xlat
or
mov
es
mov
jae
push
cld
cltd
pop
nop
in
pop
ret
xor
in
push
test
lock
push
pop
inc
jmp
mov
adc
xchg
cmpsb
repnz
mov
adc
cmp
and
sub
mov
add
mov
and
add
or
movsl
fisubs
sbb
fildl
pushf
cli
stos
and
iret
aad
mov
xchg
loop
dec
push
dec
and
mov
mov
cmp
inc
xchg
inc
test
ljmp
cmp
jmp
sbb
add
push
push
pop
xchg
push
xor
xchg
jmp
jbe
iret
nop
into
add
movsb
aas
fdivrp
lcall
mov
mov
or
mov
je
mov
or
lds
das
inc
xchg
xor
sbb
ja
mov
inc
push
out
subl
push
insb
stos
push
or
stos
cmp
std
lahf
mov
xlat
sbb
mov
ret
mov
lods
lcall
mov
decb
inc
hlt
mov
pop
clc
jno
pop
into
pop
imul
inc
pop
mov
push
jns
pop
rcll
or
loope
addr16
adc
test
adc
push
in
addr16
call
shl
fistpll
hlt
jl
sbb
lock
in
lar
cmpsb
lret
mov
out
daa
adc
add
adc
fwait
sub
movsl
dec
mov
cmp
lock
xchg
mov
loop
mov
jg
movsb
jb
stos
daa
pop
ja
sbb
and
push
or
xchg
sbb
sub
aam
xchg
cli
scas
leave
mov
adc
jae
mov
add
out
cmpsb
sbb
repz
adc
inc
jmp
ret
testl
shrl
mov
cmp
sbb
sbb
mov
mov
pusha
jno
jno
aas
sub
push
lods
cmp
mov
arpl
lahf
nop
fcomip
xchg
mov
xchg
jmp
aad
mov
add
xchg
push
pop
arpl
popa
and
sbb
mov
xchg
or
sahf
imul
shlb
icebp
jge
bound
xchg
imul
lods
fisubs
pop
cld
push
and
adc
data16
xor
iret
jg
push
mov
sub
out
lock
cmc
sbb
aas
xor
lret
jmp
nop
cmp
or
mov
xor
dec
in
jns
and
mov
push
leave
jbe
mov
pop
mov
lock
addr16
mov
or
out
cmp
dec
aas
pop
insl
push
bswap
ret
lcall
inc
jmp
cli
inc
fdivrs
pop
inc
lret
std
mov
test
xchg
xchg
aaa
inc
movsb
es
xchg
repnz
orl
ja
push
mov
and
sbb
test
stos
mov
clc
popf
mov
adc
pop
icebp
mov
xchg
or
std
jmp
xchg
mov
adc
shl
test
mov
adc
subl
lock
imul
out
jb
lret
jp
loope
out
iret
shlb
shlb
inc
call
in
lock
lcall
jle
xchg
insb
or
test
dec
mov
push
loopne
insl
mov
adc
sbb
negb
bound
int
pop
inc
clc
jae
push
xchg
jl
mull
out
inc
cmp
lock
xchg
mov
pushf
lcall
scas
pop
xchg
adc
mov
sub
add
pop
cmp
xor
cmpsb
insl
push
stos
dec
divb
sbb
xorl
cli
les
xor
jg
cmp
mov
add
aaa
sbb
xchg
push
ja
call
push
sbb
mov
inc
movsb
cmc
pop
rol
into
int
dec
mov
push
xlat
pusha
adc
mov
sahf
decl
mov
fmul
push
sbb
cli
cmpsb
sub
xor
enter
cmpb
outsb
nop
push
jns
xchg
lock
lds
inc
int3
jns
push
push
mov
add
push
mov
popa
push
sub
jo
sub
xchg
lods
fisttps
std
cld
xor
aaa
and
pushf
js
imul
add
scas
ljmp
mov
mov
stos
enter
push
sub
sub
xchg
dec
xchg
pop
and
pop
dec
inc
in
stc
fcoml
sbb
push
cs
add
pushf
pop
pop
sbb
xorl
sub
cmp
lds
in
inc
jmp
mov
push
mov
lret
sti
fbstp
jo
push
mov
enter
inc
je
imul
add
fwait
mov
fisubrl
ret
mov
xor
push
mov
jmp
dec
lods
add
in
xor
inc
push
inc
stos
or
add
cmc
sub
jno
rcrl
leave
ret
hlt
ja
in
pop
hlt
addr16
or
popf
sbb
out
aam
andl
fucomip
clc
pop
and
add
jnp
pop
test
sub
shll
lret
sbb
mov
loopne
aas
xor
sbb
aad
fisttpll
aam
push
outsb
xor
dec
lds
pop
xlat
aam
and
jne
dec
sbb
das
out
lods
int
adc
or
and
imul
bound
push
inc
daa
push
add
push
add
imul
xchg
lahf
std
mov
add
loopne
mov
adc
pop
mov
push
or
hlt
repz
mov
adc
test
icebp
aad
daa
pop
insb
mov
pop
iret
stc
sub
lret
subb
jecxz
push
icebp
ljmp
mov
fsub
std
pop
pop
addr16
add
mov
loopne
aas
daa
cmpsb
cli
icebp
into
pop
cmp
fcompl
push
push
inc
jp
and
fstpt
sbb
cmp
dec
xchg
ss
jecxz
mov
jnp
ficoml
and
dec
push
sbb
mov
insb
pop
inc
int3
sub
jbe
sbb
xchg
mov
add
xchg
gs
xor
mov
or
out
movsl
add
scas
out
icebp
pop
shlb
add
shlb
div
fimuls
xchg
sbb
mov
xor
int
shll
xchg
cmpsl
cmp
enter
xchg
dec
add
ja
loopne
fimuls
add
sbb
dec
ds
push
mov
mov
sbb
insl
ret
shlb
fwait
imul
sub
aad
mov
xchg
mov
dec
cmp
dec
lods
jmp
packsswb
in
imul
addr16
aad
lcall
sbb
cmpl
xor
inc
dec
jmp
jo,pt
push
ja
cld
mov
stos
movhps
jne
adc
mov
push
xchg
cld
bound
push
mov
dec
neg
xchg
in
or
mov
sbb
push
pusha
cmpb
cmp
dec
mov
cwtl
sub
aaa
arpl
jg
cmpsb
cmp
inc
outsb
mov
aaa
mov
lret
adc
lods
push
in
adc
lods
push
dec
sbb
int
arpl
fcompl
inc
ss
mov
mov
ja
cmpsb
pop
std
cltd
mov
jecxz
lods
imul
xchg
ret
mov
dec
adc
inc
pushw
inc
xor
cmp
and
ss
int
dec
jns
lds
stos
lock
or
sub
pop
ljmp
xchg
popa
dec
nop
mov
sub
mov
int
mov
dec
or
out
enter
mov
xor
pusha
aas
loope
lea
mov
mov
scas
sub
aad
pusha
mov
loope
jmp
push
add
xor
cmp
iretw
push
shr
popfw
data16
movsl
notl
lock
add
cmpsl
jnp
mov
bnd
push
stc
in
adc
inc
or
jle
pop
lds
sbb
dec
push
jbe
stos
stc
xor
lods
das
mov
cmp
lret
ficomps
mov
lret
fists
scas
or
nop
or
cmpsb
xchg
pushf
in
pushf
or
test
mov
mov
push
mov
rcrl
cs
jno
push
sub
and
cs
scas
cltd
cli
sar
cs
subl
push
adc
pop
aam
fldcw
cmp
mov
rolb
add
in
fs
push
inc
xor
imul
es
popa
sub
mov
dec
out
fnsave
sub
pushf
and
ja
sahf
cli
cmp
mov
or
sub
and
repnz
xlat
or
and
cld
dec
out
sbb
or
ror
mov
xorl
xor
dec
setp
adc
lods
xor
dec
mov
sbb
test
or
stos
add
into
xor
inc
push
inc
int3
push
dec
push
outsl
ds
and
mov
cmpb
inc
push
or
subb
and
pusha
cwtl
repnz
sub
fidivs
sbb
pop
or
and
mull
in
cmp
scas
cmp
add
lahf
fcmovne
lds
xchg
popf
mov
jae
xchg
and
insl
jb
or
stos
sahf
push
inc
ljmp
in
sub
leave
and
or
clc
dec
push
testl
jb
xchg
jmp
pop
dec
outsb
pushf
xchg
lock
lret
xorb
xchg
inc
dec
inc
aas
push
stc
dec
or
shll
jne
sti
inc
inc
iret
jb
jle
js
push
sbb
aam
xor
lret
inc
mov
mov
dec
loope
jl
or
cmp
iret
loopne
iret
adc
xchg
repz
int3
je
gs
inc
call
jg
iret
or
dec
and
aas
push
in
out
pop
pop
stc
mov
loope
popa
scas
hlt
xchg
sbb
mov
inc
pop
sub
xchg
stc
je
xchg
or
aas
movsb
sub
shlb
or
push
jo
inc
xor
jns
out
adc
iret
out
mov
mov
std
adc
fbstp
pop
test
adc
lods
push
mov
xchg
xchg
push
cmp
dec
mov
pop
adc
xchg
pop
popa
push
insb
sbb
push
sbb
mov
nop
adc
xor
cmp
stc
setle
test
repnz
repnz
mov
repz
xchg
testb
add
adc
sahf
rcll
xor
daa
cmp
pop
mov
ret
jo
sub
fidivs
hlt
scas
insl
call
adc
iret
dec
push
fisubrs
stos
nop
ss
lods
xchg
in
jmp
test
scas
jne
mov
adc
repz
out
sbb
cs
clc
addl
add
push
xor
lods
mov
insb
jmp
loope
add
lcall
adc
loop
mov
enter
jne
in
lahf
adc
or
insl
fadds
inc
lods
push
push
mov
shll
xor
incb
fnstsw
mov
jle
ficompl
and
lret
stos
std
sbb
push
xchg
mov
mov
inc
mov
aaa
add
div
ja
jae
pop
pushf
and
arpl
dec
push
mov
push
xchg
aas
push
fstpl
jo
sbb
add
int3
add
sbb
int
mov
xchg
or
dec
jae
addr16
lea
inc
dec
rorb
xchg
fwait
in
jno
mov
test
mov
insl
fidivs
test
sub
leave
outsb
mov
mov
ja
jecxz
mov
icebp
or
inc
mov
test
add
mov
pop
out
push
outsb
mov
jne
xchg
inc
pop
jecxz
rolb
inc
mov
fbstp
in
test
aad
stos
shrl
mov
movsb
fisubl
mov
mov
andb
dec
mov
add
incl
out
mov
pop
cmp
in
add
add
jl
cs
jo
aam
push
lds
sub
popf
std
outsl
adc
loopne
push
inc
popf
repnz
push
or
lea
test
cmc
test
shll
pusha
enter
dec
mov
inc
add
ret
fcom
jge
and
mov
in
mov
pop
inc
cli
outsb
aaa
lods
mov
loope
adc
fisttps
cmpsb
flds
into
or
adc
ds
test
lret
pushf
cmpsb
mov
test
inc
sbb
jae
fwait
sub
xchg
mov
ja
int
add
sbb
jp
and
push
cmp
js
mov
call
sarb
lods
jb
mov
pop
shr
in
imul
mov
inc
jns
jle
and
cmp
test
fwait
dec
je
dec
add
sarb
cmpsl
ja
xorl
cld
dec
sbb
push
mov
test
test
iret
push
cmp
inc
lock
jnp
push
stos
adc
fadd
dec
loopne
addr16
loop
ljmp
out
daa
ljmp
jnp
mov
xchg
mov
mov
shll
loop
or
xlat
fisubl
adcb
push
or
loop
push
fwait
sti
mov
push
inc
stos
add
cmpsl
cwtl
jne
in
mov
mov
jb
repnz
ja
xchg
xchg
sub
repz
cmp
dec
into
push
insl
int
xchg
mov
out
or
sbb
out
stc
clc
fdivrp
add
dec
es
fs
ret
mov
adc
adc
lcall
clc
mov
loope
daa
rorl
lcallw
mov
pop
inc
movsb
xchg
sub
popa
lahf
and
or
jmp
aas
and
mov
push
mov
pop
fiaddl
fwait
xor
or
cmc
in
inc
adc
cmc
stc
test
mov
jbe
lds
fwait
xchg
addr16
cmp
adc
jo
dec
sbb
xchg
adc
jo
leave
cmc
cmp
jb
cltd
leave
xchg
sub
and
std
andl
sbb
pusha
jae
sub
pop
roll
pop
fistpll
mov
xchg
negl
mov
jns
call
mov
incl
test
push
dec
or
push
sbb
pop
aas
adc
enter
sbb
les
out
test
into
add
xor
and
jne
and
mov
int
flds
outsl
mov
xchg
cmp
jb
adc
mov
bswap
cmc
or
mov
cmp
in
adc
mov
xor
outsl
out
mov
pop
dec
decl
ror
int3
xchg
leave
stos
or
xchg
fbstp
mull
fildl
dec
push
and
mov
jp
mov
inc
jae
and
popf
das
cmp
mov
insl
cwtl
outsl
out
out
daa
cmc
lea
cmp
xchg
sbb
inc
fldt
dec
mov
inc
popa
mov
mov
pop
xor
xor
sbb
mov
shlb
cmp
xchg
hlt
jae
adc
mov
movsb
iret
lods
gs
in
outsb
mov
stos
inc
jmp
pop
cmp
inc
push
inc
arpl
pusha
push
pushf
in
inc
popa
jns
scas
pop
data16
stos
leave
into
jns
or
lret
fs
cmpsb
mov
or
into
jmp
loopne
mov
xchg
mull
jb
xchg
out
dec
xor
lret
xchg
inc
dec
mov
insb
push
adc
mov
mov
lret
cld
test
in
mov
inc
adc
cmp
fbld
scas
rolb
into
rcl
icebp
mov
cmp
into
cld
in
sbb
cmp
cltd
iret
in
repnz
ficompl
sbb
mov
sbb
lret
ret
cs
push
sarb
cmpsb
shlb
jmp
aad
leave
jg
pusha
dec
inc
mulb
sbb
jnp
leave
mov
lret
push
iret
pusha
sub
mov
movb
leave
mov
sarl
add
or
pop
stos
mov
scas
nop
sub
push
xchg
icebp
aas
add
popa
into
pop
daa
stc
into
mov
test
add
sahf
and
arpl
or
fisttpl
or
mov
sbb
pushf
mov
xchg
leave
inc
and
xor
add
addr16
orl
andps
ljmp
aas
and
into
mov
and
adc
cmp
test
cwtl
xchg
adc
jo
add
stos
lahf
pop
outsb
xor
mov
loope
ss
loopne
addl
fwait
dec
xor
stos
dec
pop
push
xlat
test
stos
fisttpll
loopne
sbb
adc
dec
xor
push
xchg
xchg
jg
xchg
scas
in
lret
and
movsb
imul
mov
mov
jl
inc
push
fs
popa
dec
pop
push
sub
mov
fwait
cmc
in
xor
in
dec
and
pop
jae
pop
mov
mov
mov
sbb
sub
pop
xchg
aas
xchg
push
cmp
mov
dec
mov
test
nop
gs
dec
aam
add
mov
or
arpl
add
ds
mov
xchg
xor
imul
mov
out
sub
cmpsb
fists
inc
mov
pop
stos
push
and
shll
lods
mov
xchg
lock
aam
mov
out
aas
jl
lahf
mov
sti
roll
into
jl
outsl
loop
adc
and
push
sub
mov
movl
sarl
ret
in
rcl
push
stc
xor
adc
cmp
mov
cmp
xchg
cltd
movlps
and
inc
gs
mov
in
sub
neg
dec
cwtl
adc
mov
pop
xor
test
popf
and
movsb
cmp
scas
mov
push
jl
test
icebp
or
add
test
outsb
push
shrb
lock
test
mov
out
rcrb
insb
adc
dec
fcomi
mov
sbb
subb
jp
movsl
or
add
jge
sub
pop
mov
adc
adc
adc
adc
into
xor
push
mov
xchg
repnz
lret
pop
bound
insl
adc
sbb
aas
add
xor
addb
push
inc
lahf
movsb
sahf
loopne
sub
mov
cmp
adc
cltd
orl
cmp
ss
jge
mov
sbb
aam
fs
inc
add
inc
mov
cmp
sub
cmc
idivl
ret
pop
mov
bound
jno
imul
dec
fwait
jp
filds
and
cmp
dec
jne
mov
and
rcr
mov
push
jnp
cmp
mov
in
mov
mov
mov
insb
call
addr16
adc
or
shl
mov
lods
sbb
mov
cmc
lret
leave
jmp
sub
in
jns
mov
test
sbb
xlat
xchg
jle
loopne
fstl
aad
ds
aas
dec
cmpsb
adc
mov
ja
mulb
pop
sub
mov
mov
mov
sbb
xor
fs
pop
mov
ja
cmp
push
mull
scas
cmp
push
sub
push
cmp
lret
enter
popf
ss
mov
push
xchg
xlat
xchg
mov
sbb
jg
iret
jb
into
xchg
daa
fadds
or
cmpsb
dec
jg
push
ret
xor
mov
push
mov
jno
inc
lret
dec
mov
or
dec
pop
adc
in
popf
xchg
xchg
icebp
jl
in
jmp
and
hlt
mov
sbb
xchg
jae
imul
inc
fsub
mov
inc
jmp
das
cmp
mov
pop
mov
lods
and
add
mov
or
jecxz
xor
loope
adc
mov
sub
daa
sub
in
daa
pop
test
mov
push
push
pop
cltd
cmpsb
shrb
jns
sub
insl
mov
mov
js
outsb
gs
pop
add
jae
fwait
adc
jl
imull
push
ja
sub
jnp
pop
les
jbe
jl
push
mov
lea
leave
pop
fildl
add
inc
cwtl
bound
push
addb
sub
ss
in
out
xchg
add
and
pop
pushf
pop
and
addb
mov
lods
notb
pop
outsb
push
lds
pop
mov
dec
adcl
jecxz
cltd
es
lcall
mov
pop
sbb
mov
insb
jae
out
xor
arpl
rclb
jo
test
sti
into
clc
je
mov
mov
sbb
aas
pop
rolb
or
dec
fnstcw
cmp
jg
sbb
push
push
pop
js
xchg
mov
sti
add
sbb
add
add
ljmp
dec
jnp
and
dec
mov
testl
fnsave
pop
jae
cli
dec
inc
push
jge
popa
mov
test
repz
mov
or
ja
popf
inc
insb
stc
adc
pop
and
aad
btc
movsl
jp
and
out
sbb
bound
push
ror
jmp
pop
dec
jne
js
jno
dec
push
out
adc
add
xor
jo
aam
push
jne
lahf
cmpsb
push
add
or
adc
mov
mov
dec
xchg
mov
adc
and
and
mov
cmc
add
xor
ja
xchg
adc
inc
je
imul
dec
in
add
into
mov
push
inc
ss
mov
cmovne
hlt
mov
in
mov
mov
push
lret
daa
sub
pusha
in
addr16
imul
aad
or
push
add
mov
mov
xchg
mov
call
stos
hlt
ficomps
data16
xor
ja
test
mov
idivl
sub
test
mov
add
fld
jno
popa
cs
xchg
and
enter
dec
inc
xlat
push
lcall
in
mov
xchg
push
sbb
cwtl
push
leave
iret
jo
xchg
and
popf
xchg
fisttpl
rolb
ret
stc
xor
pop
dec
stos
push
mov
inc
adc
mov
cmpsb
ja
inc
mov
pop
mov
out
fcompl
arpl
outsb
jb
aaa
sbb
dec
xchg
push
cld
ficomps
fcomp
or
das
stos
into
lcall
test
mov
sbb
jmp
mov
scas
mov
sub
dec
sbb
xchg
clc
inc
add
inc
cmp
adc
popf
cmpsl
aad
and
shl
daa
pop
test
cmp
test
lods
or
je
dec
xor
cltd
sub
shll
mov
sbb
inc
inc
jb
call
nop
test
daa
jmp
sub
and
xchg
jbe
hlt
and
cld
mov
addb
pop
test
xchg
push
aaa
pop
mov
arpl
pop
std
push
mov
pop
or
or
cmc
and
sub
das
xor
sbb
sbb
sbb
loope
lock
sub
js
adc
cmc
xlat
inc
mov
jae
ja
sub
inc
sti
jbe
add
jo
test
jle
cmc
add
adcl
sbb
into
mov
adc
lods
adc
adc
test
mov
rclb
hlt
imul
das
nop
in
leave
push
xlat
rcrl
dec
int
pop
in
mov
xor
add
mov
jnp
jbe
jno
lock
inc
jbe
repz
xor
insl
test
sar
in
aaa
adc
push
roll
lahf
or
xor
pop
bound
test
in
sub
add
mov
pop
mov
add
sub
push
pop
testl
repnz
pop
pop
sub
push
mov
pop
enter
scas
lret
cmpsl
enter
aam
insb
jns
rorl
xor
sahf
fs
loop
dec
nop
subl
xor
roll
inc
mov
aaa
sub
cmpb
push
cmp
sbb
rcrb
es
loope
mov
hlt
pop
dec
jae
xchg
inc
sub
push
push
loopne
push
push
jo
je
jo
in
jbe
inc
ljmp
mov
bound
loopne
bound
jo
xor
pop
push
cmpb
push
or
mov
out
cmpsb
lret
push
inc
cs
pushf
and
adc
sti
int
jns
xor
jle
icebp
test
adc
mov
cmp
push
rcrl
out
out
jp
andl
filds
jo
jae
jl
insl
jae
and
add
pop
ljmp
leave
add
imul
cmp
adc
fcomps
std
xor
pusha
cli
dec
or
inc
jne
push
test
inc
test
inc
xor
dec
aad
orl
loope
ja
hlt
push
pop
mov
and
pop
sarb
mov
stos
and
mov
xor
pushf
out
test
lods
aas
pushf
xor
inc
and
pop
pop
dec
mov
sub
lods
inc
lcall
data16
test
mov
or
loopne
movsb
mov
and
imul
out
mov
js
or
mov
and
mov
outsl
mov
mov
out
xchg
cmpsb
or
or
sbb
push
push
std
imul
out
pop
lea
add
push
mov
decb
xchg
repnz
pop
pop
pop
subl
into
inc
cmp
shlb
scas
mov
pop
leave
inc
cmpsl
dec
andb
dec
sub
xorb
popf
repnz
or
adc
ds
pop
mov
shld
out
sub
insl
mov
in
rclb
xorb
addr16
cld
mov
lahf
inc
pushl
jnp
imull
aam
notl
icebp
roll
pop
out
scas
divb
add
or
inc
sti
imul
lcall
dec
popa
cli
push
jge
mov
xchg
je
ret
xor
insl
adc
or
dec
jb
ficoms
jb
movsl
inc
push
cmp
jecxz
stos
cmp
fistl
inc
addr16
lahf
pop
inc
jmp
dec
xlat
dec
aaa
movsb
scas
cmc
jae
add
jnp
cwtl
sub
push
notl
movsl
inc
xchg
push
xor
xchg
sahf
fisubrs
mov
pusha
addr16
pop
fdivrp
inc
jle
jb
add
sbb
sub
mov
jb
push
andb
jne
enter
std
test
testb
ret
aaa
fnstsw
mov
xor
push
inc
sub
cmp
js
int
iret
pop
in
sub
das
mov
imul
lock
lods
lea
xor
cli
stos
pop
pushf
mov
or
sbb
aam
xorb
movsl
aaa
lea
scas
dec
push
push
cmp
mov
mov
xchg
imul
mov
int3
popa
movsl
pushl
cmp
jge
jg
jnp
das
push
mov
push
ds
push
adc
cmp
cmp
xchg
jl
call
call
mov
mov
cmp
loope
lret
in
dec
stos
pushf
sub
jns
negl
mov
flds
xor
cmp
loope
sbb
rcrb
into
testb
insl
mov
sub
cmc
push
cld
inc
mov
sbb
mov
push
stos
sarl
aad
cmp
hlt
addr16
out
cmpsb
add
cltd
add
icebp
ret
xchg
and
das
add
cmp
cmpsb
or
push
xchg
or
dec
dec
lods
dec
sti
enter
push
push
mov
inc
and
push
mov
stos
cmp
and
sub
cmp
push
mov
outsl
mov
lds
xchg
or
idivl
mov
iret
add
or
sbb
mov
xor
push
inc
test
movsb
mov
push
aas
pop
lds
out
or
xor
fisttpl
mov
inc
loope
dec
faddl
enter
test
test
xchg
ja
add
leave
push
enter
sub
fs
push
ficoms
popa
mov
pop
push
cli
sub
and
movsb
mov
push
pop
lods
xchg
ret
aad
push
jl
fnsave
cmpsl
loopne
mov
sbb
cmpsb
adc
cmp
int
repnz
add
push
push
jbe
jne
jp
outsb
inc
inc
or
sbb
mov
push
push
stc
sbb
xor
popa
xor
mov
test
mov
sbb
cli
push
cmpsl
inc
lcall
or
or
rcrl
xchg
jno
inc
cli
je
leave
addr16
loop
stos
das
pushf
scas
hlt
cmpsl
sti
je
nop
iret
mov
mov
adcb
pop
fwait
and
pop
leave
cmp
fs
adc
out
mov
jp
movsb
fcoml
push
mov
roll
xchg
inc
fisttpl
xchg
movsl
mov
das
dec
popf
frstor
mov
xor
push
test
mov
sbb
or
cmp
stc
adc
adc
out
inc
out
xor
dec
cmpl
cmpsl
inc
jp
adc
mov
fisubs
sub
push
dec
mov
cltd
xchg
jp
dec
test
fwait
and
mov
fdivrs
roll
jg
xchg
repz
sbb
lods
in
or
out
and
ret
xorl
test
pop
loop
mov
lods
lret
xchg
enter
aad
scas
call
pop
imul
aaa
pop
lock
arpl
mov
test
sub
dec
pop
mov
cmpsl
adc
aam
lea
cltd
xchg
test
ljmp
add
mov
xchg
sbbl
mov
or
or
pop
inc
adc
push
or
or
mov
pop
sbb
popa
inc
mov
je
lds
out
std
faddl
mov
lret
cld
push
pop
and
adc
outsl
loope
in
and
sub
sub
das
mov
mov
jl
or
inc
lret
test
jb
cmp
subl
mov
bound
adc
and
xchg
dec
lock
aad
jmp
xchg
aaa
xsha1
cmpsb
dec
mov
cmp
jecxz
dec
std
ja
mov
cmp
adc
inc
mov
gs
test
xchg
dec
mov
push
pop
popa
inc
sbb
testb
xchg
imul
lea
sahf
xor
rolb
push
stc
es
mov
pop
sub
icebp
sbb
popa
ss
stos
pop
fisttpll
and
loopne
xchg
adc
mov
sub
mov
lcall
lds
or
mov
xor
pop
mov
push
push
push
xchg
lahf
adc
pop
mov
add
rcrb
sbb
shrb
dec
out
lods
loop
cmp
inc
push
pop
stc
stos
icebp
pop
inc
dec
and
dec
enter
push
fadd
ffreep
cmc
repz
adcb
pop
dec
cmpl
inc
hlt
inc
mov
and
testb
mov
dec
push
loop
rorb
xor
pop
xchg
cwtl
insl
mov
js
inc
inc
cmpsb
shl
pop
lds
jle
fstps
orl
xor
popa
push
ljmp
pop
lock
out
xchg
sti
out
les
repnz
jmp
mov
imul
pop
xchg
push
stos
sub
iret
repnz
cmp
mov
pop
mov
sarb
sub
xchg
xor
and
mov
fwait
addb
icebp
add
mov
inc
dec
jle
push
js
into
scas
xchg
insb
test
lahf
dec
js
decl
popf
lds
mov
popa
idivb
jp
pop
mov
dec
sub
push
lods
mov
adc
clc
xchg
mov
dec
test
repnz
cmp
mov
mov
or
xchg
out
mov
loope
pop
xor
xchg
mov
ret
pop
sub
or
fildl
xor
out
mov
push
insl
jne
cmp
sub
or
inc
fcoml
pop
mov
aaa
jecxz
mov
xor
push
cmp
and
arpl
dec
outsb
xchg
popa
pusha
mov
cmpsl
mov
push
xlat
lds
jo
scas
negl
dec
xor
push
dec
pop
dec
mov
jmp
arpl
mov
or
cmp
cmp
or
nop
loop
fldenv
sbb
jmp
and
adc
hlt
push
mov
adc
imul
movsl
fisttps
in
scas
cs
cmpsb
cltd
sti
and
dec
cmp
cmp
adc
adc
stos
test
arpl
test
xchg
sarl
dec
outsb
add
jo
jmp
jo
loope
fmull
das
push
add
sahf
call
dec
sub
cmp
aam
mov
outsb
iret
nop
clc
lret
das
adc
dec
jnp
mov
mov
popf
into
fdivrs
jmp
dec
cmpsb
mov
leave
cmp
mov
fdivr
out
cmp
scas
mov
lahf
mov
push
aaa
xchg
gs
adc
jnp
push
outsb
mov
out
icebp
jbe
push
mov
std
fwait
dec
mov
rcrl
push
aad
mov
call
xor
sbb
insb
aam
idivl
jo
lret
jnp
mov
test
aam
mov
mov
mov
inc
push
shl
add
cmpsl
mov
nop
inc
mov
adc
push
xor
jbe
mov
mov
push
rol
mov
aad
cmp
xor
mov
xor
sbb
outsb
cmc
sbb
xor
mov
push
pushf
lahf
cli
cmp
iret
dec
mov
outsb
push
and
movsb
mov
mov
and
inc
sbb
int
dec
fwait
int
fildl
call
gs
mov
pop
inc
inc
in
imul
mov
fdivr
push
inc
inc
push
or
pop
sbb
out
in
mov
jbe
or
test
and
and
popf
sti
mov
jbe
pop
xor
adc
cmp
in
push
dec
mov
clc
inc
cmpsb
jp
mov
ffreep
xchg
mov
sbb
jecxz
xlat
cmp
pop
fiadds
in
xor
add
out
jne
mov
xor
out
sbb
sub
jp
cwtl
xchg
adc
jnp
lret
dec
xlat
subl
mov
or
movsl
pop
xor
jae
cmp
cmpsb
jmp
xchg
mov
pop
mov
mov
adc
int3
jg
sub
mov
adc
arpl
lods
pop
xchg
fwait
jns
mov
xor
mov
je
inc
inc
sbb
icebp
xor
icebp
xchg
lret
movsb
fistl
dec
sbb
push
lock
xchg
add
mov
loop
inc
dec
popa
mov
scas
fstps
xor
imul
ret
sbb
mov
mov
cmp
jbe
adc
dec
push
jne
fwait
xchg
add
stc
jo
mov
lds
xorl
sti
imul
movl
inc
dec
nop
ds
scas
pop
fcoml
adc
mov
mov
mov
dec
mov
sub
loop
xchg
gs
dec
lds
jb
pop
xchg
loopne
sub
sar
pop
outsl
jnp
mov
mov
loop
ret
call
mov
inc
rol
lahf
fs
mov
in
mov
ds
ret
inc
mov
mov
imul
add
jl
or
mov
inc
addr16
xor
or
shlb
fimuls
sti
scas
add
add
xor
inc
cmpsb
and
pop
jg
stos
inc
jnp
or
pop
hlt
jg
push
testl
imulb
je
inc
test
in
bound
jg
and
mov
adc
es
push
gs
mov
ret
test
inc
add
pop
fldl
adc
or
cmp
jl
cmp
into
dec
pop
mov
cmpsl
pop
test
xchg
jge
in
fs
mov
mov
xchg
lret
rcll
inc
fisubl
and
mov
push
and
cmc
aas
stc
shrb
popa
data16
rcrb
insb
cmpsl
and
adc
mov
out
sub
aam
xor
push
dec
xlat
movsl
bound
fidivl
fsubs
popf
loop
jecxz
es
enter
fildll
rcl
push
sub
dec
cld
lods
rclb
ljmp
jbe
fdivrs
xorl
divb
daa
mov
jle
int3
pop
fcomps
or
jae
mov
inc
mov
aad
dec
sub
out
cmp
push
xor
xchg
mov
imul
data16
add
cmpsb
jno
xor
adc
lods
xor
cli
nop
and
mov
xor
push
mull
jp
mov
xor
dec
repz
mov
or
lret
cmp
mov
je
fwait
insl
jmp
adc
sarl
or
push
lret
pop
imul
subb
sbb
lods
out
mov
in
xchg
cmpsl
popf
mov
add
pop
and
mov
scas
int
mov
stos
movsb
icebp
in
mov
test
and
lcall
jae
std
orl
decb
add
and
adc
icebp
xor
add
aad
andl
jp
adc
cmp
xlat
shrl
enter
ret
xchg
inc
jns
xor
scas
pop
in
push
aam
jg
arpl
rol
mov
daa
lret
int3
loopne
fisubs
mov
or
mov
mov
cs
insl
mov
std
and
sahf
insb
inc
int3
inc
lahf
add
mov
popa
cmp
adc
out
push
jmp
push
in
mov
sub
dec
fildll
dec
push
pop
test
repz
add
ret
jge
cmpb
sbb
loope
pop
insb
sbb
sub
rorl
and
or
lds
test
sbb
nop
dec
aad
sahf
cwtl
stos
xchg
inc
and
cli
push
and
fisttpll
xchg
xor
add
ret
push
push
mov
sbb
addr16
enter
jecxz
xor
and
pop
jbe
mov
add
xchg
and
sbb
cs
lock
mov
in
ds
push
or
adc
repz
inc
rcll
cmc
test
mov
sub
add
ljmp
addr16
mov
cmp
sti
dec
sbb
mov
out
std
stc
insb
dec
xchg
inc
add
push
mov
jno
pop
mov
out
enter
xor
mov
cmpsb
and
and
sub
push
cmp
std
push
push
sbb
mov
nop
ds
sub
mov
cs
jle
repz
cwtl
lret
arpl
adcb
mov
insb
cltd
or
mov
dec
test
pop
iret
inc
or
sbb
xor
repz
dec
sbb
ret
xchg
das
hlt
fsubrp
loop
mov
mov
inc
imul
add
mov
mov
xor
movsb
movsb
aam
outsl
or
cltd
fwait
mov
sub
stc
mov
xor
out
loope
fwait
lcall
cmp
fstpt
pop
dec
pop
adc
push
lds
ret
notl
test
js
dec
adc
or
jle
stos
test
lahf
adc
adc
mov
lock
fcom
mov
push
outsl
inc
loopne
hlt
mov
jb
inc
ljmp
sbb
aam
ds
fstps
push
rorb
add
or
mov
hlt
ret
dec
leave
push
cmp
stos
lcall
cli
jl
movsb
adc
or
inc
cltd
lods
out
push
sahf
mov
pop
cwtl
push
or
and
inc
jl
pop
cmp
jo
testb
mov
les
mov
sti
fadds
lock
addr16
lret
cli
mov
scas
or
jb
pusha
dec
and
sbb
nop
mov
imull
jmp
popf
mov
push
lock
aaa
loop
push
pushf
mov
aas
add
in
shlb
jbe
dec
and
cmp
loop
les
jecxz
xchg
mov
jl
mov
gs
cld
fisubl
stos
xchg
ret
inc
mov
imul
or
add
push
or
push
xor
out
dec
sub
dec
icebp
and
dec
mov
dec
movsb
iret
inc
flds
sbb
xor
jl
lods
mov
sti
dec
movsl
xchg
mov
xchg
add
cmpl
sub
push
cmc
fdivl
cmp
mov
jmp
cmpsl
sahf
push
movsl
push
int
es
mov
loopne
sub
fistpll
and
scas
stos
iret
fstps
xchg
data16
pop
call
cmpsb
popf
insl
add
sub
jb
mov
sub
lret
lret
dec
mov
and
cmp
dec
sub
mov
sahf
push
jnp
faddp
xor
out
jno
loopne
movsb
data16
call
dec
and
pop
mov
and
clc
adc
dec
sbb
mov
adc
jl
adc
divl
mov
rorb
mov
arpl
xor
xchg
push
pop
push
xor
filds
out
pop
ret
std
aam
sub
shlb
mov
xchg
push
addr16
hlt
inc
pop
push
ljmp
scas
xchg
jne
pop
test
adc
test
pop
movsl
xchg
inc
sub
pop
xor
xchg
sbb
lcall
adc
std
daa
inc
mov
pop
movzbl
mov
mov
jno
jp
lock
aaa
pop
scas
mov
and
lahf
push
sbb
int
mov
and
ja
fsubr
aam
sbb
mov
loop
mov
imul
mov
outsl
cmc
lock
cmpsl
adc
xor
bound
test
add
cli
push
ds
xor
std
mov
icebp
pop
jle
dec
dec
fmuls
sbb
andl
sub
cmpb
sub
lahf
and
and
add
pushf
jne
adc
add
sub
jns
ds
dec
mov
fidivrl
stos
pusha
outsl
xchg
ror
sub
ret
clc
mov
lret
push
jl
imul
lret
js
and
cwtl
daa
stos
aaa
pop
test
adc
repnz
rorb
sub
dec
xor
pop
jne
jge
stc
mov
inc
dec
gs
inc
popa
stc
outsl
icebp
call
in
sbb
mov
sti
mov
arpl
addr16
lods
sti
or
dec
lds
in
out
pusha
fcompl
mov
inc
repz
cmp
sbb
pop
movb
xchg
mov
and
mov
fisubs
lods
jge
cwtl
or
stc
mov
sbb
imul
adc
enter
add
cmp
test
mov
movsl
insl
pop
push
pop
popf
pop
fildll
xchg
mov
pop
sub
stos
lods
ror
xor
or
xchg
loopne
jle
add
or
jae
mov
mov
and
stos
mov
fucomip
cmpsb
xchg
adc
push
cwtl
push
pop
repnz
or
fs
pusha
dec
jl
xchg
aas
icebp
sub
fcompp
outsl
adc
inc
push
xor
pop
pop
scas
push
xchg
adc
jmp
adc
aas
xchg
shlb
bound
enter
clc
jl
pop
adc
push
std
sbb
xor
mov
xor
push
dec
xlat
mov
data16
rorl
out
mov
push
sbb
lret
fwait
pop
loop
js
mov
notl
jmp
adc
or
mov
ret
mov
or
test
in
dec
or
or
aaa
jnp
jge
cmp
xorb
cmpb
cwtl
adcb
pop
ja
xchg
xor
adc
ljmp
gs
adc
ss
cmpsl
cmp
mov
mov
fimull
pushf
or
aaa
cmp
dec
orl
int3
rcr
das
mov
xchg
cmpsl
adc
in
jg
push
push
bound
push
pop
loop
fcomps
shr
leave
repnz
adc
pop
mov
ljmp
dec
scas
cmp
dec
imul
xor
fidivrl
cmp
inc
in
jecxz
pop
mov
leave
lret
int3
incl
inc
outsb
adc
mov
push
jle
repz
pcmpeqw
jns
cmpsl
inc
xchg
mov
inc
repz
mov
pop
daa
pushf
jge
or
jp
gs
ljmp
test
lods
adc
lock
mov
push
jecxz
and
shll
jns
cmpsb
int
movsb
test
push
das
pop
xorl
sub
xchg
icebp
push
xchg
rcl
pop
push
sbb
push
faddl
aad
outsl
andl
lret
inc
mov
and
push
stos
cltd
jp
fsubrl
sbbb
xbegin
inc
lcall
dec
ja
sbb
dec
call
inc
pop
mov
pop
pop
mov
mov
loop
outsl
decl
insb
lret
pushf
out
cmp
push
sub
fdivl
sub
addr16
sub
mov
stos
sti
hlt
xlat
aad
mov
mov
out
hlt
addr16
mov
mov
pop
fimuls
push
lock
jb
and
xchg
call
xchg
mov
je
ficoms
cmpsb
adc
out
gs
nop
insb
cmc
jge
fildl
aaa
push
or
and
arpl
push
mov
int3
sub
arpl
jl
inc
movsl
mov
adc
aad
fidivs
cmpsl
adc
dec
cwtl
cmpsb
fstl
pop
mov
data16
enter
fstpt
into
cmc
xchg
pop
xor
movsb
cmp
xchg
push
arpl
jmp
ret
loopne
jg
les
sbb
cmp
sahf
pop
sahf
push
std
nop
cmpsl
ror
mov
dec
xchg
jae
dec
daa
stos
xor
loopne
mov
lret
inc
das
pop
sub
imul
and
clc
pusha
rorl
imul
jmp
jp
loop
mov
je
pop
outsl
les
mov
pop
bound
fs
jl
sbb
xor
push
jp
movsb
cmp
lcall
in
sub
int3
inc
pop
imul
push
insb
movl
or
repz
or
jmp
dec
iret
or
cmp
push
mov
and
out
or
xchg
jl
loopne
sti
loopne
ja
pop
sarl
pusha
aad
ss
inc
xor
rclb
ficoms
mov
mov
insl
cltd
pop
xchg
push
outsb
jle
pop
negl
sti
test
lods
test
das
outsb
icebp
sbb
ret
push
and
repnz
fsubl
jae
add
popa
ret
mov
inc
pop
sbb
adc
stos
mov
dec
sub
dec
pop
sbb
aaa
pop
lahf
icebp
pop
fisubrl
jns
mov
jo
loop
and
sarl
mov
lods
mov
pop
mov
mov
enter
or
popf
sbb
icebp
mov
mov
xchg
cmpsb
jo
lock
xor
mov
cwtl
out
out
jne
mov
addr16
push
push
daa
and
mov
xchg
mov
jg
cmc
or
sbb
xor
ret
push
mov
test
dec
mov
cmp
mov
js
jne
mov
loopne
scas
sbbb
and
pop
lcall
subb
lret
into
cmp
push
stc
stos
fistps
add
sbb
cmp
dec
shrl
mov
popf
xor
push
outsl
mov
add
mov
add
xchg
and
mov
add
loopne
and
jb
lea
in
push
in
xlat
inc
cli
pop
pop
sti
dec
and
mov
addr16
xchg
jge
and
inc
sub
jmp
out
cltd
inc
out
lods
scas
imul
stc
icebp
jo
cmc
push
lods
pop
xchg
sub
pop
sbb
push
mov
and
lods
xchg
add
xchg
lret
jb
lret
mov
enter
jns
and
sbb
adc
rcll
xchg
rolb
adc
add
arpl
pop
mov
mov
push
in
sbb
cmpl
xor
out
inc
movsb
mov
enter
notb
mov
dec
ffreep
xor
jno
sbb
add
and
inc
push
sub
sub
lods
fnstcw
mov
adc
into
dec
into
in
bound
pop
sub
shll
add
fists
push
push
movsb
pop
mov
xor
lcall
jl
pushf
xchg
jae
jae
ret
mov
cmp
lods
fs
dec
jns
fnsave
aam
es
cli
shrl
test
pop
es
push
sub
inc
rorb
jo
push
rcrl
or
fistl
mov
xlat
sub
not
adc
mov
or
pop
add
call
mull
cmc
icebp
test
adc
popf
jg
call
mov
in
and
fdiv
and
hlt
jecxz
movsl
repz
push
and
sub
adc
mov
cmp
cli
cmp
mov
icebp
ds
adc
mov
sub
add
out
xor
movsb
jecxz
lret
ds
jle
or
rcr
inc
test
bound
aam
ds
addr16
insl
and
mov
sub
or
mov
or
mull
das
pop
in
add
scas
std
icebp
cwtl
and
push
dec
push
sub
sub
xchg
adc
push
fistpl
push
mov
jns
les
loop
ss
loop
sbb
stc
dec
out
cld
outsl
out
shll
popf
sbb
xor
inc
ljmp
wrmsr
fildll
es
sbb
call
xchg
mull
xchg
lock
repnz
add
push
sbb
shlb
jge
test
adc
add
sbb
pop
xchg
pop
rorb
imul
jae
xor
mov
inc
lods
ffree
and
push
in
sub
and
stos
icebp
addr16
in
add
cmpsl
rcrb
cmpsb
push
xchg
sbb
loopne
cmpsb
arpl
pop
push
xlat
sar
xchg
push
cmpsb
push
pop
hlt
lahf
or
push
push
aam
mov
push
xchg
pop
or
fisttps
dec
enter
adc
mov
jns
rclb
lret
push
addr16
jecxz
mov
lret
out
imul
and
adcb
or
out
inc
push
sbb
sub
inc
cmp
pop
stc
cmp
pop
into
pop
push
xchg
bound
push
pop
adc
xor
mov
mov
ret
jp
adc
jmp
mov
mov
clc
pop
sub
aas
and
sbb
aad
sub
inc
inc
call
ret
adc
pop
mov
hlt
push
cmp
adc
sub
mov
mov
inc
fiaddl
jmp
test
dec
out
loope
dec
add
popf
mov
ret
iret
add
cmp
pop
cmpsb
xchg
mov
inc
aam
sub
aam
mov
and
std
push
sbb
mov
ret
fistps
push
insb
mov
mov
addr16
scas
sbb
repnz
xchg
add
xchg
pop
stos
repz
mov
aad
or
ret
sbb
sub
adc
xor
add
jne
sti
out
cld
test
jmp
cli
mov
popa
das
sub
or
subl
in
push
jb
aas
pop
sub
data16
sbb
mov
sbb
sbb
dec
push
and
clc
std
or
and
cmpsl
stos
or
loopne
xor
in
jmp
push
ja
lods
jg
insb
stos
mov
mov
jle
inc
sti
sbb
sahf
mov
and
lea
push
pop
cwtl
cwtl
arpl
fldenv
and
and
out
cs
xlat
hlt
outsl
mov
in
rcrl
sub
iret
push
out
bound
sbb
xchg
or
mov
faddl
pop
jb
popf
scas
daa
cmp
and
mov
test
in
scas
xchg
xor
jp
sub
xchg
xchg
loope
and
mov
out
pop
lds
xchg
adc
mov
inc
jle
mov
fs
repnz
mov
push
pop
out
les
inc
sbb
clc
mov
iret
mov
test
dec
jns
xchg
pop
adc
mov
lods
pop
dec
add
cwtl
mov
dec
aad
pop
add
or
movsl
dec
mov
scas
adc
fldcw
push
insb
mov
test
mov
imul
insb
mov
aaa
movsl
pushf
fdivp
in
jg
add
mov
mov
shl
je
mov
mov
mov
pop
push
dec
or
xchg
dec
sub
out
xorb
mov
or
push
aam
ficompl
icebp
mov
in
cmp
arpl
enter
sbb
stos
mov
add
inc
xchg
dec
into
jmp
xor
cli
push
sbb
fdivrs
dec
cmp
jnp
shrl
mov
mov
jmp
std
and
push
jmp
negl
sub
out
jo
cli
sub
push
xor
fisubrs
mov
jg
fstps
aas
cmpsb
into
int
imul
lds
negl
mov
push
xor
dec
in
in
mov
mov
xor
inc
pop
adc
shrb
mov
les
data16
out
sbb
movsb
fwait
sub
ja
ja
jecxz
aaa
outsl
outsw
aas
test
jg,pn
sub
mov
nop
sub
mov
cmp
xlat
adc
xchg
test
xchg
xor
stc
jno
addl
xor
push
std
cmp
lea
lods
dec
jmp
in
push
xor
stc
test
cmp
ret
xchg
pop
testl
mov
shlb
aaa
jl
in
mov
leave
add
mov
je
push
lcall
ret
outsb
shrb
sbb
pop
nop
fists
sub
mov
sbb
mov
fwait
sbb
xchg
std
pop
adc
xor
or
clc
repz
push
jno
push
mov
xor
je,pt
dec
enter
mov
xor
push
mov
jge
fcmovbe
popa
push
ss
or
cmpsb
cwtl
adc
movsb
adc
adc
arpl
dec
mov
ljmp
imulb
inc
lahf
inc
sub
pushl
jmp
push
nop
sub
testb
xchg
enter
xor
xchg
mov
ror
jae
and
lret
jg
inc
call
vucomiss
push
push
cmp
sti
movsl
call
shlb
dec
fstl
sub
js
jno
mov
or
ficomps
sub
sbb
and
out
and
hlt
ss
jbe
cmp
popa
push
insb
test
shr
sahf
mov
clc
jae
stos
jo
cld
fidivl
jb
outsb
xchg
jae
fnsave
jg
pop
popf
jno
rcrb
imul
scas
mov
pop
sub
sahf
dec
mov
js
mov
and
push
or
and
xchg
pop
jae
or
mov
jb
adcb
mov
adc
fstpt
xor
pushf
lret
in
in
lods
lret
dec
or
ds
lahf
cld
pop
cmp
arpl
inc
bound
rep
outsb
fadd
pop
or
inc
push
divl
jo
jmp
enter
shrb
xchg
cmp
xor
or
add
push
lret
out
pop
xor
les
sbb
pop
fisubrs
jmp
stos
test
mov
cs
mov
ja
mov
addr16
stc
push
lods
jle
add
ret
mov
ds
test
push
adc
lea
cmp
add
fidivs
push
addl
jb
mov
sbb
mov
mov
adcl
mov
ja
stos
std
mov
call
add
xchg
xchg
add
pusha
repz
cmp
push
sub
mov
pushf
mov
int
jae
insb
sahf
pusha
mov
cmpsl
std
and
test
fdivr
aad
insl
outsl
scas
jne
push
jb
dec
rol
fcoms
mov
push
je
dec
add
mov
ret
cmp
jl
dec
cltd
fildll
or
loop
lret
mov
pop
sbb
jmp
sti
hlt
int3
sti
mov
inc
mov
incw
mov
lret
std
int3
sbb
js
sub
sbb
call
cmp
jle
imul
fdivp
movsl
adc
nop
adc
inc
mov
and
je
sbb
xor
adc
lods
jecxz
bound
ljmp
or
or
mov
sub
cmp
inc
rorl
jnp
mov
cmpsb
cmpsb
dec
sahf
or
out
aas
sbb
jle,pn
add
lods
repz
dec
sbb
sbb
sub
and
push
push
int
std
push
cmp
adc
mov
ss
mov
inc
movsb
or
test
imul
jno
cmpsl
or
mov
sub
dec
shlb
adc
xchg
jno
js
fdivl
inc
and
push
adc
sub
jle
loopne
loop
xchg
loop
push
xchg
setne
aad
lock
add
imul
mov
js
sti
cwtl
ret
in
fucomip
dec
sbb
push
push
inc
sub
rcl
add
nop
xchg
fisubs
jbe
pusha
cli
xchg
je
xchg
adc
ja
sub
pop
fwait
aad
les
inc
loop
mov
ljmp
std
aaa
sub
adc
mov
test
cltd
xor
sti
into
push
cld
lret
or
mov
inc
add
iret
and
sbb
test
loopne
cltd
jae
xchg
imul
jae
mov
cltd
xor
mov
icebp
pop
mov
mov
cmp
sub
aad
test
jle
popa
sbb
xor
sbb
stos
inc
addr16
mov
push
fisttpll
inc
imul
push
jae
sbb
xor
hlt
lea
out
fs
mov
ljmp
scas
lds
xchg
jmp
xchg
sbb
and
push
and
fsubrl
shl
xor
xor
dec
daa
inc
in
inc
push
mov
in
test
fstl
mov
inc
pop
adc
fiadds
mov
ds
dec
add
jmp
popa
fsubs
jp
push
jmp
add
sbb
pop
into
adc
dec
mov
sbb
xchg
inc
sti
dec
push
and
jbe
popa
xor
scas
ret
pushf
add
les
int3
xor
sbb
shlb
int3
jmp
xor
add
xchg
adc
fildll
inc
jg
faddl
sbb
jae
jno
sahf
jmp
mov
mov
pusha
push
mov
add
les
je
mov
push
add
movsb
mov
xor
es
loope
mov
int
mov
test
cmp
mov
push
xchg
push
lret
mov
jnp
popf
mov
xor
int
scas
xchg
mov
lods
shl
ficoml
mov
mov
stc
scas
iret
xchg
test
sbb
mov
fidivrs
inc
and
fistps
and
add
pop
out
cmp
xchg
mov
mov
shll
lds
ret
rcrl
test
lahf
gs
sahf
adc
lcall
mov
xchg
sub
lcall
and
pop
mov
push
and
push
mov
sti
das
lods
push
jne
lea
and
std
adc
adc
ret
add
adc
lds
lea
in
ljmp
dec
movsl
rcrl
sarl
inc
fwait
lcall
pop
mov
mov
out
mov
jae
push
cli
adc
inc
les
sbb
clc
pop
lret
fdiv
std
repnz
and
cmc
fnstenv
jbe
xchg
popa
xchg
movsl
outsb
std
xchg
inc
push
jp
shll
shrb
les
loopew
outsb
std
dec
cmp
ljmp
stos
lds
stos
mov
add
std
sahf
mov
bound
sub
push
les
sarb
dec
push
repnz
stos
mov
int
xor
mov
dec
in
cmp
out
add
push
push
mov
push
xchg
push
and
jnp
and
ja
imul
mov
mov
fiadds
or
gs
lds
sar
imul
xchg
sub
add
arpl
mov
orb
scas
lea
mov
xor
por
pop
test
adc
sbb
bound
daa
push
sub
or
xchg
mov
mov
incb
pop
rclb
pop
movsl
inc
jecxz
rorb
aaa
lods
addr16
nop
fiaddl
jmp
arpl
inc
mov
dec
mov
ror
cli
filds
cmp
pop
mov
jp
cmpsl
pusha
dec
scas
out
insb
icebp
addr16
mov
sub
out
cmp
push
cmp
xor
imul
stc
bound
add
decb
mov
inc
and
add
lods
aas
popf
fsubl
and
fildll
and
add
lret
lcall
and
cmp
push
inc
xor
js
pushf
dec
or
xlat
push
test
scas
push
mov
inc
inc
xor
sub
fnstenv
lock
adc
push
mov
mov
fidivrl
imul
xchg
out
ja
add
mov
pop
nop
in
cmp
scas
ss
mov
pop
push
xor
es
clc
and
push
pop
je
or
push
sbb
sarl
lock
add
fwait
fs
dec
icebp
imul
test
inc
push
mov
inc
jno
shlb
mov
or
sti
and
iret
sbb
push
lret
mov
pop
jo
dec
pop
add
and
aas
test
cmp
ss
into
dec
cltd
je
inc
inc
cmpsb
cltd
data16
cmp
or
std
cmp
mov
dec
inc
shlb
mov
lods
call
sub
out
ja
push
das
xchg
ss
add
js
std
out
test
inc
insb
and
sub
repz
push
jnp
std
jg
adc
pop
in
cmp
pop
sbb
sub
mov
mov
fwait
cs
les
pop
push
ljmp
adc
xorl
repnz
jno
ds
mov
sub
jle
cld
or
imul
adc
inc
inc
jge
fsts
orb
fbld
iret
mov
ss
mov
xchg
push
fdivl
pop
test
bound
cld
in
xor
pop
adc
rcrb
xor
or
cmp
sti
lods
fidivrl
mov
pop
aam
xlat
outsb
dec
mov
or
test
addb
jl
mov
int
or
jnp
adc
push
adc
rcl
fildll
andb
out
pusha
data16
xchg
or
mov
rclb
ljmp
popa
mov
out
enter
popf
lock
pop
push
js,pn
dec
rclb
test
pop
inc
add
jl
jno
stos
pop
cmp
std
xchg
adc
jnp
sub
out
jns
and
in
adc
xor
add
adc
inc
aam
mov
ret
andb
loop
mull
es
ret
jmp
repnz
adc
fistpl
or
lds
sub
nop
mov
notl
pop
inc
push
loop
xchg
iret
pop
or
pop
fcoms
pop
movsl
adc
mov
mov
inc
dec
aam
xor
add
push
das
lods
jp
movsb
in
lods
dec
das
addr16
xor
sahf
and
js
test
xlat
insb
mov
mov
xor
cmpsb
dec
mov
rep
dec
mov
xchg
pop
or
das
lea
mov
scas
popa
sub
xchg
mov
imul
jle
les
dec
mov
enter
lahf
jl
dec
and
shlb
jo
and
outsb
mov
mov
xchg
test
jbe
pop
adc
adc
sbb
jle
call
inc
sbb
jg
dec
mov
xchg
mov
xchg
aam
push
jno
fninit
pop
push
out
clc
rorb
in
les
test
lret
sbb
outsl
cmovns
adc
inc
adc
sbb
adc
xchg
mov
bound
pop
das
arpl
into
popa
or
push
mov
add
ficomps
mov
roll
cltd
enter
addr16
inc
repz
jb
or
jns
jns
xor
jno
aas
xchg
scas
sub
push
push
scas
lock
sbb
outsl
inc
call
popf
subl
outsb
xchg
ret
and
pop
into
jnp
loop
das
stos
fbstp
jmp
sub
ljmp
fwait
inc
mov
pop
sti
or
adc
stos
push
adc
ds
lret
xor
inc
adc
lahf
fsubl
sub
push
jbe
aaa
dec
lea
xchg
js
jns
ret
dec
fisubs
mov
sbb
and
loope
in
push
jecxz
add
pop
xor
mov
iret
dec
adc
fwait
shrl
xor
jle
out
pop
daa
test
mov
cmp
in
xchg
sub
js
xor
or
xor
mov
sarl
mov
sti
push
iret
cltd
pop
cld
and
cmp
mov
adc
fst
jmp
lret
ficompl
ljmp
xchg
cmp
jecxz
xor
sub
aas
add
mov
sbb
insl
jbe
subl
push
mov
test
aad
out
ds
stc
fstp
decl
repz
cmp
xchg
icebp
cltd
loope
idiv
mov
fcoms
mov
inc
jl
push
cmp
aam
cmp
jp
pop
xchg
lret
call
nop
cld
add
jb
pop
adc
aad
dec
push
andb
push
outsl
adc
or
jae
or
and
jmp
mov
fwait
push
or
jecxz
jle
and
lods
pop
negl
xchg
add
clc
mov
mov
fimuls
les
cltd
cmpsl
pop
loop
xchg
dec
or
lcall
cmpl
push
xchg
sub
cwtl
scas
repz
pop
fldl
clc
and
mov
sub
sub
jge
or
ret
mov
cmp
and
and
adc
sub
cli
pop
xchg
mov
xchg
js
ds
add
xor
mov
test
nop
mov
and
adc
sbb
popf
push
cli
xlat
mov
test
in
pop
movsl
mov
sub
pop
and
cld
movsl
loopne
cmp
xchg
fstl
mov
jne
mov
jmp
xor
sub
test
add
repz
mov
or
cmp
pop
push
xor
aas
jecxz
pop
mov
mov
jecxz
mov
mov
sub
or
adc
outsl
cmp
sbb
xor
sub
ficompl
jne
cmp
inc
fldcw
into
std
mov
repz
or
sub
mov
or
inc
mov
ret
dec
in
xchg
hlt
fisubrs
cs
cmp
fs
enter
out
pop
sub
int3
cmpsb
stos
pop
sub
inc
jne
sub
inc
push
cmp
sti
or
push
jl
push
jmp
or
loopne
jp
cmp
pop
sbb
jns
das
xchg
push
out
dec
dec
repnz
ror
sbb
xchg
push
fwait
xchg
imul
push
mov
daa
iret
add
xchg
int
cmp
xor
mov
adc
cmp
mov
repnz
mov
mov
pop
scas
je
loop
setno
add
sub
fdivrl
cmp
mov
xchg
push
mov
setne
mov
movsl
mov
in
xchg
subb
xorb
cmpsb
scas
aam
lcall
push
pusha
rclb
fwait
jns
lret
repz
mov
or
mov
scas
lods
lahf
dec
mov
and
aas
in
xor
push
shll
jmp
xchg
mov
fs
push
stos
dec
lcall
dec
cltd
test
shll
leave
push
les
in
data16
xor
fisttpll
mov
cmp
mov
cwtl
iret
mov
cmp
pop
faddl
pushf
adc
sub
les
or
jno
jno
mov
lds
subl
imul
jbe
cld
outsl
adc
cmpsl
aad
js
leave
cmpsb
inc
push
sub
sahf
mov
xor
loop
pop
test
testb
scas
out
jns
or
mov
std
pop
sub
pop
imul
int
pop
lods
jno
xchg
adc
loopne
test
lret
insl
cld
imul
movsb
jecxz
aaa
dec
dec
and
outsl
adc
and
xor
dec
iret
sbb
push
jo
cmp
push
shl
mov
rcr
dec
adc
lcall
mov
sbb
cmp
dec
dec
aad
mov
loopne
das
pushf
testl
std
clc
inc
enter
iret
scas
cltd
xor
dec
xchg
ja
mov
dec
scas
mov
and
aaa
bound
lods
xor
pushf
adc
xchg
push
and
push
and
mov
jge
lret
and
push
mov
sbb
jl
fmull
mov
mov
out
jbe
lret
out
mov
and
push
mov
inc
mov
sub
repz
mov
rcl
arpl
or
mov
lds
scas
jae
lea
pop
aam
loope
jp
lret
fimull
adc
lret
lret
arpl
mov
mov
dec
lods
int
leave
xlat
aaa
mov
dec
inc
lret
xor
or
add
mov
add
les
jg
orl
push
push
fwait
addb
stos
add
mov
fxch
cltd
or
fcoms
dec
mov
pusha
mov
sub
out
inc
hlt
cmp
sbb
pop
and
sbb
test
jl
cwtl
jns
push
mov
xchg
pop
arpl
lods
ret
fsubrl
cmpb
sub
jl
mov
mov
sub
into
outsb
lahf
fstl
and
pop
gs
add
jmp
xchg
repz
cli
and
sbb
repnz
mov
xchg
cmp
push
xor
xchg
xchg
cmpsb
test
mov
pop
sub
xor
cld
xchg
xchg
push
fistpl
xchg
jg
inc
push
rcrb
fldenv
mov
ficoms
repz
lcall
ret
addr16
dec
outsb
add
invd
and
mov
mov
jbe
inc
in
repz
mov
dec
dec
xor
adc
mov
enter
xor
or
je
fsts
enter
das
jecxz
shl
xlat
inc
pushl
test
aad
idivb
jno
xor
pop
test
pusha
dec
xor
rorl
sbb
mov
mov
ljmp
aas
sbb
mov
xchg
ret
popa
mov
lret
loop
jmp
push
fists
mov
int
loop
aas
dec
or
clc
mov
test
inc
test
lods
jge
cmp
dec
loopne
pop
inc
out
dec
sti
iret
and
mov
scas
nop
out
in
sub
add
repnz
insl
addr16
rcrb
loope
jge
push
xchg
or
and
sahf
lods
or
fwait
xchg
clc
jns
pop
xchg
push
jmp
jecxz
xchg
xchg
arpl
data16
sbb
cwtl
aam
sahf
ljmp
jnp
jnp
fwait
pushf
push
rcrl
test
xor
jmp
shll
nop
das
xchg
and
mov
xchg
sub
xchg
hlt
cmp
fisubrl
mov
mov
mov
std
fisubl
test
int
lea
fisubs
push
and
mov
push
adc
clc
fldenv
cmp
bound
cwtl
sbb
mov
sbb
mov
or
adc
lods
rcll
xor
idivb
cmp
popa
outsl
outsb
inc
and
rolb
add
push
sub
sub
out
gs
mov
adc
jmp
pop
arpl
push
outsl
push
or
and
adc
push
jnp
test
jno
jne
cmpsb
inc
xchg
shlb
adc
in
push
daa
test
je
sbb
xchg
jg
lock
xor
push
psubsw
scas
aas
cmp
test
hlt
push
xor
xor
and
lods
jnp
test
jmp
cltd
xchg
sbb
sub
sbb
jl
insb
adc
int3
es
loop
xchg
jecxz
clc
out
lods
scas
jmp
jno
dec
js
idivb
or
insl
pop
fcmovnu
push
push
or
or
pop
stos
jns
jmp
fs
pop
ja
movsb
sti
cs
xor
rcrb
mov
aaa
push
push
lret
sbb
je
fsubl
inc
add
add
sbb
push
and
push
sbb
insb
or
mov
dec
cmp
or
cld
and
sub
xchg
and
movsb
push
cli
push
inc
outsl
jecxz
add
jne
push
mov
jno
loopne
xchg
js
jnp
nop
and
xchg
cmp
fsubl
leave
or
leave
scas
jle
fld
mov
cwtl
mov
jecxz
fwait
out
push
cld
mov
mov
insb
cmp
push
add
arpl
and
sbb
xchg
adc
jge
cltd
dec
dec
mov
popa
xor
mov
sub
mov
jns
or
inc
mov
xor
add
xor
js
test
subb
mov
out
add
rep
mov
sahf
mov
ret
jmp
pop
cld
push
aaa
test
movsl
push
mov
in
adcb
cs
cli
pop
cmp
loope
mov
bound
dec
call
data16
inc
stc
bound
fwait
jns
int3
cwtl
addr16
call
test
lret
or
pop
popa
sahf
ror
leave
movsb
in
cmp
mov
push
adc
xchg
xchg
lret
pop
pop
cli
pop
pop
push
lret
adc
and
mov
sbb
ficoml
fldl2t
cli
mov
test
sbbl
jp
xor
in
pop
stc
addr16
pop
sub
pause
push
pop
mov
sub
stos
sbb
jb
mov
imul
mov
scas
cmp
aas
jmp
sbb
icebp
repnz
stos
xchg
fs
or
and
or
test
fstl
xor
jb
hlt
dec
lods
shlb
sub
loope
mov
or
rcrl
fdivs
out
pop
and
sbb
movsl
clc
push
sbb
mov
mov
sbb
push
imul
xor
in
les
lods
les
jecxz
fimuls
lods
ljmp
mov
loop
xor
mov
lcall
push
inc
insl
lds
xchg
popl
pop
jne
add
lcall
inc
inc
sbb
fimuls
pop
pop
and
push
ret
pusha
push
mov
dec
xchg
adc
orb
sarl
or
leave
mov
sbb
pop
jnp
adc
roll
std
push
cltd
mov
repz
notl
sub
insl
xor
cwtl
aam
in
xchg
pop
imul
inc
jns
out
test
push
cli
aad
jmp
rclb
or
mov
cmc
lods
jo
jge
and
iret
and
inc
arpl
sti
pop
inc
scas
sub
aam
push
push
mov
jg
inc
fstps
rclb
mov
daa
repnz
pushf
mov
fcmovne
faddl
hlt
dec
fildll
jle
loop
mov
and
fcoml
jns
icebp
mov
inc
inc
add
jnp
push
pop
int3
data16
out
mov
jmp
test
cld
aaa
shll
cmp
mov
pop
cmp
adc
xor
inc
in
xchg
shrl
fwait
or
std
out
pop
pop
std
fwait
out
mov
into
shrb
lret
inc
shll
inc
sub
test
jp
ret
inc
sub
addr16
adc
pop
inc
sub
lods
mov
rorl
pop
cli
fsubs
add
int
or
outsb
cltd
add
test
push
add
in
stos
push
les
jg
daa
imul
and
xchg
and
outsl
xor
scas
pop
popa
pop
stos
int3
jae
xor
lods
or
pop
aad
imul
test
or
lods
out
xor
movsl
stc
jns
pop
pop
xchg
jbe
dec
mov
mov
test
dec
ret
jnp
jge
data16
fidivrl
mov
jae
lahf
add
xchg
ret
mov
cmp
add
sbb
test
data16
ret
mov
xchg
std
lret
push
or
stos
adc
sub
popa
xchg
pushf
imul
pop
xchg
mov
lock
fimuls
and
sbb
jp
popf
fistps
mov
int
pop
ds
cld
out
ret
dec
imul
mov
icebp
pop
cmp
fisttpll
adc
lahf
test
jg
mov
mov
je
lahf
rcl
add
add
jns
push
cs
movsl
jb
stos
in
cld
shl
pop
mov
xchg
or
cmp
fisubrs
pop
pop
cmp
int
push
addr16
sbb
sbb
mov
ficoml
outsl
adc
push
loope
xor
push
lods
js
mov
adc
or
mov
insb
push
jne
pop
fwait
and
xor
xor
cmp
sub
sub
leave
jp
and
movnti
cmp
js
jns
or
and
popf
jge
jge
cmp
sub
fdivl
mov
icebp
loopne
fsubrl
dec
push
jecxz
in
and
movsl
mov
pusha
jo
cmp
pop
aad
mov
aaa
imul
or
lret
les
jecxz
scas
mov
or
popa
imul
shll
popa
lahf
test
mov
push
out
mov
pop
or
ja
roll
adc
adc
dec
adc
and
out
push
aad
mov
out
subb
loope
fucomip
frstor
push
popf
dec
hlt
add
pop
push
pop
jno
cmp
gs
push
jg
cli
sti
jp
sub
mov
jo
gs
insb
push
pop
fisttps
pushf
jae
ret
xchg
int3
sub
mov
daa
pop
push
fdivl
adc
pop
or
cmc
dec
pop
sub
sub
jle
int3
mov
int
into
add
and
pop
mov
mov
or
xlat
adc
sbb
imul
pop
mov
mov
mov
xchg
inc
addl
je,pn
repz
cltd
mov
add
loopne
call
push
lcall
dec
and
push
and
imulb
cs
loop
bnd
jno
fbstp
shlb
int
ret
ss
vmread
xchg
cli
adc
push
adcl
sar
lock
inc
cs
btc
sub
mov
mov
je
jno
and
cltd
mov
dec
jbe
data16
cltd
out
xchg
in
in
idivl
in
sub
cmpsb
push
lahf
mov
hlt
jne
inc
mov
pop
in
xchg
das
adc
addb
ret
jae
shlb
out
jecxz
cmpsl
xorb
jno
mov
inc
adc
lret
mov
arpl
or
jle
or
mov
xor
out
imul
push
mov
repz
add
inc
std
imul
and
in
es
je
ljmp
dec
sub
cli
xchg
cmpsb
mov
pop
and
jns
data16
dec
lcall
push
sti
lcall
lea
mov
les
cmp
fst
imul
movsb
stos
jl
cs
mov
jmp
out
in
movsb
nop
les
cs
mov
data16
lea
xor
into
xor
push
aas
iret
lahf
xchg
int3
ss
imul
notl
sahf
insl
and
mov
das
or
int3
outsl
mov
dec
jle
sub
jle
push
jb
xchg
xor
mov
mov
sbb
push
bound
addr16
sar
xor
out
cmp
inc
rcll
lock
aam
sub
dec
cmp
out
icebp
push
loope
xchg
clc
mov
adc
xor
nop
or
mov
push
mov
push
cbtw
jecxz
sub
mov
mov
push
call
scas
xchg
sbb
ss
lcall
mov
sub
ss
jmp
xchg
mull
lods
test
push
outsb
aaa
xor
and
jo
clc
pop
ja
lock
xchg
mov
jne
rorl
jl
mov
ss
in
add
sti
push
add
cmp
xor
fcmovnbe
out
int
jno
imul
orl
push
ret
xchg
ret
mov
enter
inc
es
mov
fcompl
and
rolb
dec
inc
cmc
jecxz
ret
cmc
or
cmp
jo
insl
mov
lcall
mov
add
sbb
inc
fnsave
add
mov
dec
mov
outsb
mov
in
dec
xchg
mov
shlb
lock
xor
sti
xor
rclb
test
add
imul
in
push
adc
xor
pop
dec
mov
and
jecxz
bound
sub
out
push
in
adc
sub
hlt
xor
fidivl
push
test
int
in
and
test
and
cmp
push
add
xchg
push
popa
inc
adc
pop
xchg
inc
adc
ret
ds
xchg
dec
pusha
dec
and
dec
popf
insl
pop
pop
ss
xchg
std
jmp
loop
dec
push
lods
lahf
js
fwait
insl
data16
lods
cmc
mov
orb
sub
mov
and
test
fsubrp
data16
icebp
lds
adc
icebp
cmc
mov
inc
sbb
sub
adc
inc
inc
mov
loopne
cmc
xchg
shlb
mov
out
adc
dec
mov
fsub
push
add
std
cmp
cmp
add
xor
inc
dec
shrb
pop
in
push
pop
xor
xchg
aaa
int
push
xor
push
and
jns
or
pop
je
in
addb
push
xchg
cld
sub
mov
sbb
aad
das
popl
scas
dec
rcrb
xchg
and
fninit
and
ror
addr16
jle
ss
sub
rclb
rorb
ds
mov
mov
pop
sbb
in
push
dec
out
cmp
pushf
cmp
lods
xor
push
subb
mov
aas
mov
adc
lahf
or
int3
mov
adc
add
pop
adc
jo
pop
mov
iret
loop
push
cmpsb
jns
or
fdivr
fstl
push
cwtl
insb
clc
jb
dec
fildl
xor
je
aam
imul
push
dec
add
faddp
pop
ret
add
sub
adc
push
mov
inc
jl
stc
int
js
and
push
dec
jmp
jns
addr16
ds
inc
cltd
add
stos
dec
insl
cmpl
shlb
les
repnz
mov
adc
jbe
or
cmp
jmp
sbb
xor
mov
in
and
push
inc
in
pop
repz
adc
sbb
test
and
repz
or
dec
pop
cmp
fisttpl
cmp
jbe
movsl
xchg
add
js
mov
pusha
out
es
icebp
mov
xchg
cld
cmp
call
rcrl
rcr
xchg
adc
xor
mov
add
push
mov
mov
cmp
mov
dec
stos
cli
sbb
js
add
jmp
das
test
ja
inc
sub
repz
cmc
or
jo
xchg
jle
call
or
rolb
scas
rcrl
leave
mov
xor
jae
add
imulb
cmpsl
out
outsb
pop
adc
adc
or
arpl
mov
gs
xchg
push
dec
imul
pop
fists
mov
adc
add
test
pop
xor
aam
int3
pop
mov
cmpsb
cmpsb
clc
aaa
in
inc
xchg
arpl
jg
mov
insl
cmp
enter
add
insl
inc
mov
push
ret
lahf
movsb
enter
add
rcrb
xchg
iret
xorl
es
push
xchg
dec
add
je
mov
inc
pop
fisubl
push
mov
xchg
imul
push
inc
mov
sub
fcomps
xchg
and
and
inc
loop
fdiv
xchg
fcmovnu
ret
in
pop
sub
add
xchg
adc
cli
dec
push
and
les
leave
xor
lods
cltd
push
adc
mov
mov
shr
ss
jb
mov
push
shrb
xor
pop
push
sub
cwtl
pop
jmp
or
adc
adc
mov
sarl
pop
push
inc
lea
xchg
enter
imul
xchg
sub
push
mov
sbb
fisttps
les
sub
aas
daa
and
jl
adcl
subb
jmp
rolb
and
loopne
ljmp
test
je
lods
into
mov
inc
mov
sar
pop
push
pusha
pop
add
scas
sbb
pop
and
jae
mov
inc
rclb
xchg
dec
add
lcall
pop
mov
lds
loope
ret
mov
in
xor
cmp
push
mov
jle
fcmove
inc
leave
mov
fsubs
leave
pop
push
and
jnp
mov
in
dec
sti
arpl
dec
jecxz
jmp
les
or
stos
test
out
mov
shlb
stos
or
inc
loop
mov
je
in
enter
sti
daa
push
mov
stos
inc
subl
es
or
je
mov
mov
jg
and
mov
je
mov
and
in
daa
xor
aam
push
push
sub
inc
ds
mov
lcall
mov
stc
insl
jnp
out
test
int3
icebp
stos
aas
xor
fsubrl
inc
clc
cmpsl
sti
jmp
ljmp
cmp
jp
outsl
scas
aaa
push
sub
push
roll
xchg
mov
repz
push
pusha
jmp
insl
out
test
cmp
mov
test
mov
mov
inc
cmpsb
and
pop
lcall
push
push
dec
fstl
mov
mov
in
rclb
cmp
push
and
lds
mov
pushf
mov
andb
adc
inc
sti
lahf
inc
add
rorb
sahf
lea
xor
addr16
or
jns
mov
dec
in
mov
shll
lods
ljmp
scas
dec
fwait
pop
xchg
xor
inc
rcrb
push
sti
out
idiv
sti
xor
mov
mov
test
and
sub
subl
push
into
je
jnp
hlt
jecxz
lods
daa
pushf
adc
mov
aad
arpl
repz
jg
dec
xchg
cmc
imul
repnz
mov
mov
push
adc
pop
mov
xchg
mov
fs
sub
and
or
or
fs
orl
cltd
sti
testl
mov
xchg
jp
lods
jnp
jp
push
insl
jb
arpl
xor
stos
fcomps
mov
inc
nop
ds
lret
push
nop
xor
lods
cmpsl
and
cli
in
pusha
pop
out
sub
pop
out
mov
pusha
xor
add
cmp
pop
pop
xchg
adc
cmpsl
xchg
xchg
xor
pop
mov
or
or
lret
js
add
mov
mov
fistl
push
stc
mov
cmpsl
cmp
jg,pn
jge
popf
dec
addb
mov
dec
ljmp
icebp
movsb
add
or
idivb
ficoml
cmc
cs
loopne
int
lcall
dec
inc
ret
and
frstor
push
xor
add
gs
stc
lret
sub
add
push
xchg
or
js
rcrl
mul
inc
jmp
mov
aaa
fisubrl
hlt
rclb
into
notl
sbb
jl
adc
add
cli
int
addb
or
push
mov
push
call
fldt
jno
cld
cmp
aam
in
jbe
pop
imull
nop
fistps
jne
jmp
inc
push
fadds
pop
mov
sbbl
rorb
aaa
out
rorl
loope
lret
outsl
add
sub
int
sbb
mov
jno
out
fs
push
ljmp
sbb
jne
push
cli
lret
fwait
out
xorl
xor
outsl
call
cmp
and
xchg
enter
mov
jne
push
mov
sbb
int
mov
insl
add
test
aaa
orl
pop
mov
push
dec
lcall
mov
pop
in
mov
sub
mov
mov
rcl
and
adc
jae
popf
jbe
cmpsb
push
fistl
and
jne
mov
sbb
clc
std
jp
add
push
and
leave
mov
sti
pop
jl
mov
mov
rclb
pop
repz
xor
xlat
je
lret
mov
xchg
mov
jmp
sbb
outsb
fnstsw
mov
pop
mov
or
pushf
cmc
call
cmp
jne
sbb
cmpsb
push
insb
push
adc
bound
in
add
cmp
mov
jmp
mov
fsub
sub
cmpsl
leave
aaa
and
sbb
rorb
jb
test
aad
jno
popf
push
mov
es
cmp
push
sti
dec
jecxz
dec
les
push
xor
xchg
pop
cmpb
enter
xor
popa
aaa
lods
imul
pop
xor
adc
jb
add
lods
scas
and
add
incl
add
rcr
inc
data16
or
mov
sti
adc
push
stc
jnp
cwtl
xchg
mov
mov
xor
inc
pop
adc
add
mov
pop
aaa
inc
xor
faddl
sbbl
pop
les
fiaddl
dec
xchg
add
jne
lods
fisubs
adc
jmp
cmp
ja
inc
and
xlat
aam
inc
mov
pop
pop
out
cmpsb
repz
ljmp
shr
bound
scas
jbe
js
fwait
jbe
sub
pop
xchg
pop
dec
cmp
js
add
test
and
into
push
add
push
fbstp
cmp
sub
in
pop
inc
mov
fwait
cltd
int
xor
fs
shl
leave
mov
sub
arpl
clc
mov
add
mov
xchg
sub
mov
and
cwtl
movsb
insl
sbb
xchg
repnz
cltd
repz
xor
sub
push
adc
repnz
pop
in
fsubrl
cmp
mov
in
sub
and
test
aam
lods
das
dec
in
dec
ror
jnp
pop
movsl
mov
push
out
and
mov
sbb
icebp
punpckldq
mov
ret
ljmp
sub
bound
stos
mov
lahf
mov
int
add
lret
or
cmp
mov
inc
ss
cli
repz
or
in
xor
sub
cmp
stos
fcomps
test
repz
outsb
pop
pop
bnd
data16
imul
call
cltd
test
daa
dec
inc
bts
fnstsw
test
push
sub
and
adc
ret
cwtl
in
out
mov
mov
push
outsb
popa
aam
xchg
fmull
cmpsb
les
out
imul
push
pop
test
fadds
xchg
and
outsl
mov
cmc
pextrw
ja
mov
pusha
cmp
xor
popa
jb
roll
stos
imul
pop
loopne
out
mov
inc
inc
js
lea
cmp
push
call
mov
sub
xor
iret
nop
stc
mov
imul
mov
and
pop
mov
xorb
inc
fimull
int
ret
push
mov
xchg
mov
lods
enter
inc
xchg
adc
or
push
dec
pop
xor
xchg
rorl
pop
nop
shrb
outsb
call
lcall
insb
xchg
sbb
jbe
ljmp
call
dec
pushf
mov
cld
fs
int3
push
adc
adc
jecxz
mov
jae
cs
call
xor
aas
or
pop
hlt
cwtl
into
dec
xor
clc
or
loop
shll
jb
jle
in
jbe
int
faddl
and
xchg
fdiv
adc
fyl2x
jnp
divl
rcll
xchg
fidivs
add
lods
jns
ret
addr16
out
aas
fs
cmp
or
mov
dec
mov
mov
vphsubd
sbb
mov
popa
sbb
cmc
dec
inc
lret
test
or
or
fisttpll
sub
push
rcrb
mov
pop
adc
xchg
loopne
inc
pop
jne
sub
and
mov
das
sbb
cmc
ja
shll
dec
std
ret
in
scas
cli
jnp
dec
mov
mov
sbb
and
daa
test
sbb
outsl
xor
aaa
push
dec
loope
push
int
pusha
addb
fucomip
and
sar
imul
push
xchg
mov
sbb
icebp
pop
out
mov
ds
xor
xchg
inc
out
pop
push
pushf
cli
inc
cmp
or
psubb
out
fsubrs
je
arpl
lods
or
mov
mov
jno
inc
dec
lret
movsb
and
xchg
popf
iret
sub
mov
pop
iret
push
inc
mov
mov
pop
and
das
or
aam
js
push
pop
out
scas
mov
add
sarl
xchg
sub
sub
aaa
add
xor
es
inc
loopne
xchg
loope
lret
sti
es
fidivl
mov
xor
pop
lea
cli
or
pop
mov
test
dec
jmp
jbe
push
out
shr
popa
sub
fildl
lret
adc
daa
movsb
add
loope
dec
outsl
mov
testb
lods
stc
jp
push
sub
or
adc
lahf
adc
aas
ret
pop
sub
jmp
adc
mov
fyl2xp1
nop
pop
movsb
cld
lret
mov
ja
mov
cmp
mov
cmpb
punpckhbw
enter
xchg
jge
cmp
enter
add
inc
cmp
cld
pop
repnz
movsl
add
dec
xor
ss
inc
out
add
mov
push
ja
sub
pushl
push
sbb
sarl
xchg
jmp
xor
popf
push
loop
lods
add
xchg
lret
pop
adc
push
mov
dec
pop
jmp
popl
push
lods
sbb
adc
pop
outsl
ss
sub
lods
sbb
xlat
sub
and
in
sarl
lret
sahf
movsb
mov
mov
sub
outsl
int3
fcoms
cmpsb
fstpl
mov
loope
sub
jno
xor
mov
repnz
test
fbstp
add
inc
popa
je
xor
cmp
iret
repz
out
push
sbb
arpl
pop
rorl
sti
cmp
mov
out
pop
mov
jae
jg
test
dec
sub
cwtl
lret
fildl
js
divl
dec
xchg
fildll
push
in
mov
cmpsl
scas
in
out
das
inc
mov
add
cmp
adc
sbb
mov
popf
nop
mov
in
cmp
adc
jp
jbe
pop
punpckhbw
mov
push
fwait
dec
fistps
xor
pop
cld
xor
movsb
or
mov
mov
cmp
stc
xor
mov
aad
imul
mov
data16
outsl
add
filds
lea
arpl
insl
push
imul
jnp
push
mov
mov
pop
fidivs
ljmp
sbb
fpatan
inc
ficoms
cmpb
mov
in
iret
mov
mov
imul
jnp
into
cltd
aas
sbb
mov
sbb
add
add
lcall
mov
mov
mov
addr16
mov
dec
popf
and
cwtl
xchg
push
add
mov
std
insl
aad
movsb
push
mov
mov
addr16
clc
movsl
stos
lods
mov
jmp
les
xlat
sbb
jle
ret
push
add
dec
in
lret
jge
insb
out
std
dec
jg
dec
mov
mov
das
je
iret
fcmove
out
dec
shll
xor
daa
aad
out
fdiv
and
loope
push
lret
scas
fwait
xchg
rcll
cs
mov
filds
loop
pop
adc
mov
inc
rclb
fdivl
lods
clc
inc
xor
int3
xchg
cmpsl
aaa
or
rorb
pop
lock
or
or
bound
sbb
cli
movsl
popf
pushf
loope
scas
cmp
arpl
call
insl
or
jle
test
xchg
or
jb
pop
mov
divl
cwtl
cwtl
xchg
mov
gs
or
pusha
pushf
xor
aas
and
cmc
mov
dec
sarb
loope
test
xor
add
testb
xchg
push
cmp
aam
fs
orb
mov
insl
int3
pop
push
pushl
shl
pop
pop
in
or
icebp
cmpsb
sub
in
mov
sti
jge
mov
popf
jb
jge
neg
pop
lods
mov
dec
mov
jmp
push
sbb
sarb
loope
movl
sarl
and
cmp
mov
mov
mov
std
and
sbb
mov
mov
xchg
lods
cmp
jmp
push
adcl
push
sahf
xor
xor
xchg
xchg
xor
repnz
adc
loope
mov
roll
enter
fistpll
dec
out
pop
ljmp
aas
mov
cmpsl
inc
cmpl
popf
and
dec
xor
sti
les
call
sbb
gs
je
xchg
dec
dec
insb
mov
movsl
dec
lea
xchg
adc
je
and
pushf
rolb
push
adc
push
int3
jecxz
jns,pt
lcall
rcrb
fldl
lcall
pop
hlt
mov
jp
aad
and
int
neg
sub
shll
ret
rcrl
inc
shlb
aas
xchg
jb
mov
out
push
add
pop
push
mov
loopne
mov
repz
insb
sbbb
fwait
je
imul
scas
mov
ret
ds
stos
addr16
dec
in
sub
fcom
hlt
inc
sub
sbb
stos
jns
inc
adc
lcall
ljmp
mov
xchg
mov
xchg
movsb
push
popf
dec
or
fbld
mov
adc
mov
or
push
jecxz
int3
sbb
push
xorl
std
jp
mov
insl
mov
add
fsubrl
loope
mov
mov
and
dec
adc
mov
ficompl
jecxz
popf
xchg
mov
xchg
outsl
or
xor
push
push
test
icebp
mov
pop
and
sbb
jo
inc
xchg
fisubs
push
int3
cmp
sbb
inc
add
rorl
mov
cmp
mov
inc
mov
test
push
push
sub
cwtl
mov
push
ret
and
pop
pusha
test
pop
sub
add
popf
dec
push
push
scas
stos
jnp
mov
jge
xchg
jge
in
std
inc
sahf
fldl
sbb
or
loopne
or
gs
add
aaa
fstps
inc
jp
es
mov
negl
mov
xor
sahf
mov
inc
clc
sbb
testl
loop
cmp
fwait
lret
lcall
insb
jg
int
push
lea
dec
add
in
sub
sub
dec
mov
sbb
fldt
xchg
and
add
jp
hlt
and
push
jnp
dec
xchg
in
sub
decb
into
clc
add
and
and
stos
lahf
xlat
lret
push
sub
add
fidivrs
rclb
fmull
rcrl
dec
or
cli
shr
fistpll
jns
add
imul
or
rol
insb
das
loopne
sti
mov
fdivl
or
xchg
jnp
movsb
jb
pop
and
dec
fisttpll
aas
push
sbb
mov
xor
xchg
roll
push
lods
cmpsb
and
out
pop
xchg
les
inc
shlb
daa
jecxz
xlat
xor
add
scas
mov
add
mov
lods
mov
imul
xor
jg
ret
dec
mov
mov
push
mov
jb
push
scas
icebp
jp
xor
sub
jne
loop
dec
fldcw
mov
in
lock
test
sbb
into
or
mov
nop
rorl
mov
in
xor
dec
shld
cmp
xlat
sahf
in
mov
repnz
xchg
sbb
xor
lock
or
popf
int3
lret
jae
sti
cmc
xchg
test
dec
mov
es
jg
aas
sarl
jmp
dec
movsl
pop
sub
loop
das
fmull
mov
mov
cmp
imul
sub
adc
lds
push
xlat
stos
rcr
ljmp
fistpl
aam
shrb
or
stc
jne
loopne
or
mov
outsl
dec
jns
sbb
mov
in
or
pop
icebp
cmp
sub
pop
ret
jle
mull
lea
imul
inc
push
data16
enter
push
or
sub
push
xor
sbb
push
leave
inc
data16
xchg
adc
mov
jmp
jnp
sub
ss
aas
xchg
mov
pop
mov
test
inc
push
fisubl
jb
jae
adc
inc
icebp
imul
in
adc
pop
cmp
mov
js
jmp
aad
aam
add
std
out
stos
dec
popf
stc
jmp
xchg
roll
lahf
cmpsl
ficomps
mov
outsl
and
pop
fstpl
or
scas
pop
hlt
xchg
aaa
imul
sbb
push
mov
sbb
lret
cmp
loop
push
cmp
xorb
push
mov
xchg
out
stc
or
dec
adc
ja
in
pop
push
int3
push
lret
pop
pop
nop
pop
sub
lahf
popf
mov
ja
sbb
pop
movsb
fdivp
lea
push
pop
or
pop
add
mov
xor
es
cmp
into
or
mov
mov
aam
adc
pushf
cli
mov
sub
sub
fcmovnbe
mov
insl
push
xchg
sub
mov
pop
ja
loope
jae
or
shll
insb
mov
ficomps
hlt
test
lock
and
repnz
fidivrs
xchg
mov
movsb
jg
or
push
add
addps
push
in
in
lret
ret
out
rcrl
aaa
xchg
les
pop
fcoms
mov
push
sbb
mov
insl
in
out
xchg
shrl
ret
nop
xchg
movsb
adc
xchg
in
imul
aad
cmp
dec
pop
repnz
aam
jb
fucomi
inc
adc
mov
sub
rorb
mov
sub
into
iret
out
into
adc
inc
cmp
js
cmp
jo
sub
pop
and
pop
out
aas
xor
mov
pop
push
cs
ficompl
mov
mov
ss
push
dec
cmp
jge
enter
outsb
or
add
xor
sub
xchg
movsb
daa
push
pop
int3
je
push
ds
mov
mov
push
push
imul
jo
xor
xor
mov
lcall
loopne
mov
push
fcomip
movsl
lea
and
cmpsl
repz
lods
ja
jg
imul
cmp
sahf
mov
loop
jp
inc
jl
xchg
pop
test
fisubrs
out
xchg
cmp
pop
imul
out
jno
fcoml
mov
aad
mov
mov
xor
jns
cmpsb
lods
pop
test
jb
decb
adc
or
outsl
push
add
iret
rorb
xchg
insl
xchg
in
repnz
insb
or
dec
cmp
sub
jo
cmpsl
mov
in
mov
lahf
xchg
dec
fwait
icebp
and
mov
pop
bound
in
adc
popa
mov
push
xchg
inc
dec
mov
xchg
lret
data16
ret
stos
test
loope
mov
push
mov
leave
shrl
mov
jb
pop
gs
cmp
mov
cmp
mov
add
sahf
mov
out
dec
dec
or
pop
jne
add
out
cmc
mov
adc
lahf
adc
je
pop
xlat
iret
sti
fsts
stc
xchg
ja
jo
mov
shrl
imul
stc
enter
imul
cmp
or
dec
enter
repz
pop
stos
push
jmp
push
push
sbb
pop
movsb
pop
popa
sbb
sahf
adc
out
dec
xchg
aam
lret
fstl
stos
push
jp
gs
xchg
xchg
ss
inc
cmpb
xchg
sbbb
psubsb
push
aaa
dec
push
popa
inc
ret
mov
and
dec
sub
aad
push
xor
nop
pop
loop
loope
push
mov
ss
sub
push
fstpt
fmul
dec
aaa
dec
fwait
movsb
inc
movsl
mov
data16
jl
xchg
xlat
jl
movsl
cld
outsl
mov
cmpsb
push
adc
popa
adc
out
mov
pop
cwtl
inc
push
sub
cmp
shrl
leave
and
in
xor
push
rolb
insb
mov
int
and
out
incl
cmp
mov
sbb
pop
in
cwtl
xor
ja
mov
xchg
ror
loope
in
outsl
out
mov
cmp
ljmp
dec
out
js
in
dec
repz
mov
insl
int3
push
pop
jb
inc
mov
mov
fcom
jne
xchg
sbb
clc
in
aas
std
push
test
fdivrl
aaa
rclb
out
sub
imul
es
cmc
rcl
dec
mov
xlat
jg
adc
pop
xor
aas
and
sbb
in
ror
jge
icebp
hlt
lret
pushf
inc
stos
out
movsb
push
mov
jo
scas
push
loopne
in
jl
or
sbb
pop
pop
xchg
testl
push
dec
test
fwait
jg
cli
test
cltd
push
aas
std
jo
xchg
add
rorb
out
mov
mov
dec
jge
jae
adc
mov
and
push
not
es
xor
mov
insb
sti
data16
into
mov
sahf
xchg
jne
mov
push
mov
call
push
popa
ds
xchg
mov
adc
hlt
es
inc
jl
or
lcall
fmuls
add
xchg
cltd
stos
mov
ret
xor
push
fnsave
fld
dec
jg
insb
outsb
sub
icebp
and
lret
les
sub
insl
pop
lds
ss
pop
cld
and
pop
cli
stos
add
pop
jbe
inc
fldl
mov
add
scas
out
and
cmp
xor
imul
test
jae
xchg
repz
cmc
jle
cmc
cmp
ret
shrl
mov
cltd
cmp
xor
jns
out
jmp
repz
data16
adc
pop
jnp
jne
les
sbb
fildl
out
mov
loop
mov
pop
test
repnz
pop
jb
nop
lcall
add
mov
fsts
adc
sti
inc
shrb
fidivrs
push
lcall
fs
ds
jle
mov
lahf
popf
mov
sub
or
lahf
and
or
orl
and
dec
mov
pmulhuw
test
dec
jb
sahf
test
stos
or
lock
or
xor
adc
shl
sub
dec
fldcw
movsb
and
jle
sbb
ret
pop
clc
rorb
push
dec
cli
out
or
insb
dec
ljmp
inc
push
or
mov
jg
test
sub
xor
in
adc
addr16
cmp
mov
cmp
or
sbb
jmp
sub
lret
aad
xchg
xor
sahf
push
es
fidivrs
xchg
lods
jne
xchg
cmp
inc
mov
jmp
sub
adc
push
faddl
cltd
or
in
jg
xlat
mov
dec
repz
adc
out
sbb
xchg
mov
mov
sub
inc
dec
jno
shl
xchg
int
lods
push
nop
inc
push
jecxz
xchg
ret
lds
push
je
cmp
int
outsb
or
dec
lods
test
sbb
push
jl
sub
pop
arpl
xor
mov
cmc
arpl
jg
rorb
dec
jge
outsl
test
xchg
mov
cld
cmp
jnp
imull
mov
aas
test
and
rolb
das
into
pushf
rcl
jp
mov
xchg
cltd
stos
add
or
jae
pop
mov
lods
push
xchg
pop
sub
and
pop
push
inc
lcall
movsb
xor
inc
mov
push
or
add
xor
mov
mov
sahf
fldcw
jle
mov
sub
sbb
movsb
mov
dec
gs
jo
aas
pop
lea
sub
inc
mov
inc
dec
shll
imul
dec
xchg
fsqrt
cmpl
fldcw
add
insb
inc
insl
pop
std
idivb
jnp
ret
cs
fimull
mov
popf
or
mov
sbb
xchg
push
testb
je
mov
inc
andl
mov
clc
dec
mov
test
shrb
dec
mov
pop
dec
sbb
mov
insl
xchg
push
movsl
loope
mov
stos
mov
cmp
mov
addl
ds
mov
or
dec
mov
mov
incb
jnp
cmp
insb
mov
inc
jl
mov
pop
cmc
lret
scas
jp
jbe
cmc
adc
cmp
es
mov
decb
jnp
inc
cmp
mov
and
mov
loopne
daa
inc
or
cmp
fildll
ds
push
enter
repz
outsb
sbb
nop
aaa
or
outsb
sub
mov
adc
ret
mov
sub
ja
add
add
movsb
dec
sbb
xchg
in
cld
push
sub
fwait
add
jns
scas
pop
test
push
adc
insl
movsb
or
and
sub
xor
cmpsl
fwait
sbb
pop
lahf
stos
mov
lods
and
and
aam
adc
or
adc
xchg
jmp
mov
jl
das
pushf
dec
rcrb
push
js
sub
fimuls
pusha
popa
or
add
loope
or
mov
cmp
leave
jae
cwtl
stc
imul
push
pusha
ss
inc
stos
inc
mov
sub
addl
test
daa
jnp
int
xor
jecxz
adc
aas
push
push
cmp
incl
dec
push
push
leave
inc
xchg
jl
sbb
pop
jns
mov
cmc
push
dec
jbe
lahf
enter
rclb
inc
out
push
sbb
and
mov
sub
jae
and
dec
scas
aad
adc
xchg
dec
dec
nop
mov
pop
xor
or
cmp
xchg
fiadds
ficoml
dec
fcomip
push
les
xor
xchg
and
pop
xchg
or
jp
test
negl
push
lret
and
lods
rolb
mov
push
adc
test
inc
jge
jo
fsubrl
ljmp
setbe
push
jmp
cmpsb
xchg
xor
add
jo
loop
js
cmp
adc
adc
push
sbb
daa
sub
xchg
cli
push
push
cld
cmp
ret
adc
fistl
pusha
cmp
inc
rorl
mov
mov
push
les
jb
mov
and
outsl
jp
add
out
pop
xchg
add
daa
repz
outsb
das
jae
dec
int
and
fucomi
inc
or
mov
mov
frstor
rcrl
mov
cmpsb
popa
imul
lcall
daa
lods
jle
mov
cli
jp
insl
je
mov
and
ficompl
xlat
enter
mov
mov
shr
jo
loope
jne
repnz
and
mov
push
jb
shlb
fwait
addr16
mov
cmc
inc
jg
sbb
call
push
fs
mov
xor
aaa
clc
sbb
push
sub
ja
addl
popf
or
or
fistps
push
lahf
es
xor
cwtl
push
scas
mov
inc
push
in
inc
repnz
jno,pt
mov
lock
mov
adc
fsubs
dec
int3
add
int
jecxz
add
mov
push
or
in
sarb
push
loopne
loopne
or
popf
xchg
jmp
pop
mov
mov
lods
test
or
sub
sub
jns
or
push
stc
jnp
sti
sbb
adc
in
sti
pop
repnz
cwtl
lret
jmp
sbb
leave
in
push
xor
dec
out
sbb
dec
ljmp
xchg
and
aaa
pop
jmp
dec
sarl
rcll
enter
jg
and
xchg
movsl
fldl
inc
cld
pop
mov
dec
maxps
iret
xchg
inc
mov
icebp
fnsave
pushf
xchg
imul
xchg
loop
insb
mov
repnz
lods
lret
jle
rol
push
pushf
test
adc
inc
dec
outsb
inc
pop
test
das
movsb
mov
int
adc
xchg
xor
lahf
addb
or
js
loop
pop
fsubr
jl
push
in
jns
push
aaa
jmp
adc
jns
or
mov
test
and
jb
es
cmpb
jae
daa
inc
inc
sub
insb
lods
int3
mov
sub
inc
hlt
nop
pop
jae
or
mov
mov
jbe
mov
out
sbb
jb
xor
lods
mov
xchg
push
push
add
dec
cs
loopne
movsl
xchg
pop
out
sub
lds
rcrl
inc
mov
xor
jg
rorb
shll
leave
add
xchg
mov
je
test
in
mov
lret
iret
pop
mov
inc
inc
pop
mov
xlat
push
in
popf
popa
mov
test
loop
les
xchg
in
loopne
in
lock
loop
popf
icebp
mov
mov
lret
fwait
adcb
loope
adc
jbe
inc
mov
nop
outsb
dec
cmpsb
push
test
pushf
xchg
mov
jg
and
pop
iret
test
or
inc
xchg
lods
cmpsl
pop
das
inc
jae
das
push
shrb
iret
pop
push
stos
sbb
xchg
dec
out
rcr
popa
je
ds
cli
das
stos
push
pop
or
mov
jmp
movsl
in
adc
subl
outsl
dec
lds
popa
mov
push
scas
ret
and
test
add
test
xor
cltd
add
mov
add
xchg
adc
xchg
adc
fsubr
and
push
xor
mov
add
fs
cld
addr16
jnp
xlat
mov
jbe
mov
xchg
mov
sub
pusha
inc
cmpsb
or
out
dec
imul
rclb
pop
adc
pop
mov
add
imul
insl
sbb
cltd
fldenvs
popa
imul
out
mov
rcrb
nop
hlt
push
dec
and
sahf
dec
xchg
pop
push
insl
ds
jno
xlat
xor
cmp
dec
mov
jmp
ret
out
adc
pusha
xor
xchg
ljmp
mov
dec
ss
jne
push
popa
stc
cli
cmp
push
mov
fstps
test
cmp
dec
rcrl
inc
mov
xchg
pusha
fisubl
jmp
repnz
jbe
or
adc
enter
or
scas
push
mov
or
imul
push
dec
clc
cmpsl
into
call
push
and
decl
movl
pop
sub
and
xchg
pop
lea
repz
mov
push
insl
insb
imul
sbb
in
icebp
movsb
pop
scas
out
mov
mov
inc
flds
jge
popf
adc
lahf
pop
mov
adc
addr16
jecxz
pusha
test
movsl
pop
mov
mov
ljmp
mov
cmovbe
jne
and
cmp
adc
scas
dec
lods
icebp
mov
cmpsl
mov
fcmovne
inc
repz
pop
inc
adc
push
cmp
inc
into
pop
add
dec
xchg
or
lods
jp
mov
xlat
data16
add
addr16
imull
jge
ficoml
adc
cmpsl
mov
pushl
icebp
les
cmp
sahf
sbb
cltd
ljmp
scas
pop
movl
cmp
cmpsb
jne
pusha
pop
incl
pop
or
sub
mov
out
and
jg
xorb
out
and
cmp
push
fsubl
dec
dec
cmpsb
cmpsb
scas
repz
clc
out
push
pop
mov
fstpt
sbb
push
es
rol
fwait
mov
mov
xor
enter
xor
ss
push
cltd
bound
pop
daa
data16
lods
mov
lock
mov
fisubrl
pop
xor
and
mov
loop
stos
ret
test
in
adc
ret
cmp
bound
cmpl
pop
lods
inc
sbbl
and
adc
push
notl
and
push
push
mov
push
push
scas
cmpsb
js
std
mov
add
sub
dec
loop
xchg
insb
out
mov
push
or
dec
je
push
inc
jns
jg
fwait
mov
mov
sahf
push
add
dec
test
stc
mov
dec
mov
push
lcall
jg
scas
mov
mov
aas
or
sti
mov
sub
fs
sub
test
loop
dec
out
mov
mov
adc
hlt
mov
aam
add
adc
push
movsb
adc
in
popf
mov
lret
stos
xor
imul
pushf
sub
ds
jns
fistpl
addr16
outsb
mov
rol
mov
dec
icebp
pop
inc
stc
xchg
fistpll
in
shlb
lret
mov
push
mov
add
gs
lret
std
mov
mov
adc
or
jno
bnd
jg
dec
repz
push
xor
mov
test
cmc
sarl
fcomps
test
pop
cmc
push
mov
jmp
xor
jne
lods
inc
into
sub
lods
dec
jge
adc
int3
or
dec
ss
int
hlt
sahf
adc
dec
int3
push
mov
shll
mov
les
pop
lds
jle
jg
movb
cmp
jae
jge
jmp
outsl
loope
xor
or
push
stc
mov
es
out
loop
fists
fadds
mov
sbb
outsl
pop
lret
pop
cltd
fldt
fsubr
sub
mov
add
pusha
leave
and
xchg
sbb
jno
inc
sahf
ss
jns
in
ret
jno
out
sbb
fucom
or
mov
xchg
mov
cltd
mov
pop
arpl
scas
lea
sbbl
call
and
jl
cld
ja
jecxz
xor
push
mov
ret
mov
and
mov
mov
sub
sub
pop
lcall
inc
lock
mov
imull
add
cli
push
int3
cld
jns
addl
sar
mov
cmp
xor
xor
push
xor
cmp
dec
or
inc
mov
mov
fldt
mov
xchg
mov
paddb
push
sub
adc
cmpb
fimuls
sub
inc
cmpsl
out
fstpt
xor
mov
pushf
shr
mov
cmp
lods
dec
lahf
or
fnsave
mov
and
mov
cmc
cmpsb
dec
mov
lock
les
arpl
mov
data16
sbb
xor
cmc
mov
mov
xor
lods
and
inc
jp
mov
in
int3
mov
sub
mov
push
xor
jle
push
push
push
mov
jo
pop
jp
mov
dec
rorl
pusha
mov
sti
ret
xor
stc
lret
inc
xor
dec
xchg
cli
mov
out
test
fwait
fwait
mov
cld
ss
hlt
mov
stos
xchg
xchg
jo
pop
mov
mov
jno
xchg
sbb
int
xchg
insb
setg
add
mov
jo
cmp
mov
mov
lret
popa
inc
jnp
inc
aad
add
loope
xchg
into
bound
ljmp
xchg
or
jg
mov
je
data16
inc
stos
aas
ds
inc
je
mov
or
aam
mov
cmpl
mov
leave
loopne
hlt
xor
xor
inc
cmp
pop
mov
cs
cmp
or
dec
mov
aam
xor
pop
cld
es
ret
lods
orl
xor
out
mov
pop
fwait
dec
jbe
inc
enter
dec
insl
out
hlt
adc
and
push
dec
mov
jmp
mov
scas
dec
mov
cmp
pop
pusha
outsb
xlat
stos
push
insb
and
addr16
inc
scas
pop
mov
lret
out
pusha
movsb
mov
pop
addl
arpl
icebp
scas
clc
sub
stc
lret
pop
sub
sub
add
outsb
fmul
gs
lock
xchg
cmp
aam
pop
test
inc
imul
std
sbb
stos
bound
add
pop
dec
add
and
jae
fisubl
pop
and
inc
ja
ficompl
inc
js
test
dec
addr16
mov
mov
mov
sbb
iret
mov
lods
ret
jecxz
mov
inc
jne
iret
fmul
lock
popf
enter
imul
xor
xchg
test
lock
and
popa
lret
out
dec
mov
fincstp
cmp
jl
test
sbb
add
and
lds
fstpl
xchg
shl
ljmp
in
lret
pop
xchg
aam
insb
fwait
adcb
jb
jg
or
stc
cmp
mov
mov
xchg
call
mov
or
pop
fnstenv
popa
ret
gs
pushf
in
mov
filds
stos
adc
or
cmpsb
push
jne
jb
fdivl
mov
cld
aaa
ds
mov
fsubrs
cs
mov
imul
mov
adc
jb
setle
or
mov
jg
inc
jo
push
pop
ret
sbb
dec
out
cmpb
into
inc
mov
js
in
xor
mov
jb
addr16
sahf
xlat
jno
xor
inc
xchg
or
xchg
fistps
stos
mov
mov
cmpsl
daa
fcoml
xor
inc
sub
xchg
mov
outsb
test
pop
jecxz
sbb
and
push
mov
cmc
push
mov
gs
jnp
shrb
ljmp
push
adc
cmpsl
test
pop
mov
or
cld
xlat
std
push
mov
mov
cltd
inc
cmpsl
stos
xor
lret
xor
mov
push
mov
jae
test
xchg
shrb
mov
or
add
imul
and
je
in
push
sbb
or
or
sub
sbb
pusha
jne
dec
mov
outsb
mov
xchg
neg
mov
sub
outsb
push
lods
mull
pop
stc
lods
sub
jmp
cmp
mov
and
mov
repnz
shrb
leave
fimull
iret
rclb
mov
addr16
jo
push
lds
insl
lret
outsb
dec
xchg
in
sub
outsl
lods
inc
insl
add
cmp
call
pop
adc
add
xor
decl
stos
and
mov
sbb
mov
adc
pop
push
push
push
js
ret
fimull
and
dec
andb
jl
cli
lock
sub
mov
fxch
test
dec
mov
sti
jecxz
and
push
mov
sub
jae
negb
adc
xchg
jle
and
mov
fcoms
mov
shll
mov
add
push
push
fidivrl
xor
add
sub
and
icebp
shlb
jbe
mov
mov
shll
cltd
aad
sbb
rcrb
lret
xchg
rcl
dec
lds
sub
aas
jge
out
mov
cltd
xchg
addr16
push
mov
adc
mov
or
or
push
mov
mov
cmp
insl
push
jge
pop
notl
pop
pop
pop
pop
inc
push
ljmp
out
sar
pusha
pop
push
or
pop
dec
jo
incl
and
lret
ret
cmp
std
push
repnz
hlt
mov
lds
pop
inc
xor
fiadds
lods
lock
notl
daa
fildll
shll
pop
sub
sub
mov
insl
out
out
dec
aad
out
lock
into
loope
pop
pop
sbb
js
sti
and
mov
add
test
mov
add
jp
cmpsb
cmpsl
add
aaa
sub
movsb
sub
test
push
les
xchg
pop
or
mov
mov
fisubrl
pop
outsl
cmc
mov
sbb
aam
data16
aam
lret
dec
daa
xchg
jecxz
push
sub
adc
lret
and
sub
mov
pop
les
mov
push
sahf
test
out
nop
pop
test
out
sub
pop
or
test
mov
call
sbb
jb
addr16
push
stos
mov
cli
pop
push
and
push
jmp
xor
orl
test
xlat
sbb
imul
iret
je
je
sub
inc
dec
mov
outsl
sbb
stos
push
sbb
cs
cld
mov
mov
out
int
xchg
into
clc
test
movsl
daa
outsb
das
mov
into
jecxz
call
int3
nop
cmpsb
andl
js
add
int
or
add
mov
inc
push
call
cltd
jbe
xchg
pop
lods
pop
test
mov
dec
mov
imul
mov
imul
sbb
fcoml
mov
inc
jl
pop
and
cltd
lds
xchg
pop
sub
imul
jl
adc
lock
mov
mov
xor
xchg
push
in
imull
in
outsb
andb
sarb
jnp
lds
mov
mov
push
outsl
gs
jbe
stos
xor
mov
fwait
xchg
dec
dec
mov
movsb
cld
cmp
xchg
xchg
in
mov
jge
dec
dec
cld
cli
shlb
lock
add
add
cmpsb
shlb
mov
lret
loop
in
fstpt
xchg
aad
pop
xor
stos
pop
cs
pop
pop
sahf
in
hlt
pop
mov
icebp
xlat
push
mov
push
push
into
ret
fcompl
jl
sti
subl
inc
xor
shrb
jno
or
repz
xchg
cmc
push
insb
pop
pop
fstpl
mov
gs
in
outsl
jae
sub
mov
cmp
and
outsb
and
sbb
or
idivb
imul
imul
xchg
and
xchg
xchg
int3
push
mov
in
mov
and
movsb
fs
pop
inc
inc
pop
jmp
sbb
pop
inc
push
iret
loop
push
push
xor
aaa
cli
add
cmp
cmp
bound
pop
mov
inc
cmp
or
pushf
cmp
push
sub
dec
orb
cmp
nop
jo
push
pop
pop
cwtl
xchg
sbbl
xchg
filds
int
fwait
mov
xchg
daa
jns
adc
sub
ret
pusha
sbb
xor
stc
movsl
xchg
cld
mov
jp
cs
adc
inc
nop
test
lea
das
adc
mov
rorl
or
xchg
xchg
pop
call
andb
sbb
cld
stc
idiv
ret
xor
jae
sti
dec
clc
xchg
mov
xor
mov
pop
cmpsb
pop
call
pop
cmc
xchg
mov
decl
les
jge
add
xchg
pusha
mov
shll
mov
lds
mov
fsts
cmp
mov
test
jae
sbb
lahf
repz
testb
pop
es
mov
fucomi
mov
push
fdivp
mov
push
and
insl
jge
repz
add
loop
into
xchg
sbb
fists
fld
lahf
fbstp
pop
test
inc
test
mov
jmp
mov
std
or
fsubs
mov
xor
mov
or
rol
sarl
xlat
loop
testb
cmpl
lret
cmp
lret
rol
pop
fs
or
fsubrs
dec
adc
sub
pop
xor
ljmp
ja
sbb
outsb
sbb
stos
dec
aad
xor
cmp
jle
xlat
push
mov
push
inc
push
lds
movsl
aad
adc
and
mov
jbe
push
push
int
ret
mov
ja
divps
fdivr
inc
movsl
add
outsb
ret
mov
inc
xor
inc
xchg
ss
icebp
pop
lret
sub
and
cmp
out
mov
and
inc
mov
xlat
jge
mov
push
arpl
pusha
inc
fisubrs
loopne
addb
pop
cs
sbb
pop
xchg
mov
adc
in
and
rcll
push
daa
and
mov
pushf
stos
into
out
icebp
jle
jp
pop
cltd
pop
push
iret
adc
push
pop
test
cmp
push
or
dec
and
rorl
cmp
loop
pop
jns
add
pop
ljmp
repz
mov
pop
sti
sub
not
call
imul
fisttpll
adc
loop
lcall
inc
mov
mov
cwtl
mov
jnp
mov
int
inc
imul
test
fwait
adc
repnz
mov
hlt
push
lcall
cwtl
out
lcall
incl
test
or
ds
push
xchg
mov
jle
push
mov
mov
adc
adc
xchg
mov
cltd
mov
or
xor
test
jns
mov
sbb
lahf
xlat
pushf
pop
cmp
daa
inc
cld
mov
lret
mov
aaa
insl
imul
mov
inc
cmp
sub
shll
scas
arpl
enter
scas
stos
jae
bound
dec
into
ret
cmc
mov
adc
in
and
xchg
cmp
sbb
out
cmc
xorb
push
js
mov
cltd
mov
divb
jbe
in
out
xchg
add
push
or
add
dec
popa
push
add
jle
push
sarb
shrb
cmp
jmp
fistps
repz
insb
xchg
pushl
pop
or
fwait
pop
add
xor
cli
adc
fcoml
icebp
ret
inc
out
push
std
mov
sbb
inc
scas
pop
addl
ds
cmpsb
xchg
ret
add
jmp
fs
push
arpl
inc
cmc
hlt
dec
jbe
std
call
adc
pusha
jmp
lret
jp
or
cmpsl
inc
inc
subb
inc
lock
dec
shrl
aam
loop
jns
cmp
emms
cmp
ficoms
mov
lods
xchg
popl
xor
mov
mov
adc
mov
cmp
or
push
adc
inc
inc
push
sbb
pop
inc
cmpsb
adc
out
into
or
or
sub
clc
or
movsb
pop
cli
lahf
push
cmp
scas
pusha
lret
cmpsb
arpl
pop
insb
loop
sbb
push
mov
scas
sub
rcll
and
sbb
cld
ret
xor
sbb
pop
fucomp
add
fbstp
xor
fsubr
xchg
icebp
xor
dec
mov
pop
xchg
movsb
js
pop
mov
xor
jne
imul
scas
das
subl
fnstsw
push
inc
push
or
ret
les
jle
push
clc
xchg
push
cmpsl
insl
push
add
mov
mov
mov
outsl
loopne
inc
inc
sbb
adcl
pop
mov
xor
sbb
ficomps
mov
cmpsb
adc
add
sbb
je
cwtl
mov
dec
jne
orl
xchg
ljmp
cltd
das
xor
lret
pushf
bound
pmaddwd
out
nop
daa
das
ffreep
and
jb
pop
mov
stos
xchg
xchg
sub
gs
pop
lret
xor
inc
fcomi
test
mov
inc
repz
fsubrl
sbb
stos
mov
shl
cmp
cmp
lea
xchg
sahf
stos
mov
test
sub
data16
jge
test
sub
aad
rcrl
dec
movsb
sub
mov
push
mov
mov
push
jle
cmp
lahf
iret
ret
mov
add
in
or
mull
xor
lock
cs
insl
int3
dec
mov
add
gs
mov
mov
dec
aas
mov
jge,pn
mov
dec
cmp
testb
ljmp
cmpsl
adc
jl
call
add
lods
xor
loop
mov
clc
jnp
call
outsb
or
dec
push
ljmp
aas
inc
insb
fisubs
and
push
jne
pop
lods
cmp
outsb
sti
stos
fidivs
adc
int3
sahf
out
jp
mov
outsl
pop
data16
push
pop
adc
jg
loop
fsubs
fisubrl
xor
cld
lcall
les
and
les
push
fistps
je
mov
adc
mov
dec
pop
in
pop
das
lahf
or
adc
lock
jge
xor
mov
imul
xor
jecxz
fxch
sub
sub
xchg
push
add
jp
dec
leave
idivl
push
adc
addr16
push
sub
sti
test
jo
xchg
mov
leave
leave
lcall
jle
fidivl
and
shl
mov
jge
mov
popf
adc
pop
insl
loopne
mul
sbb
mov
imul
pop
push
and
sub
int3
mov
mov
cmp
xchg
cwtl
push
dec
push
shr
dec
sub
mov
clc
add
push
repz
dec
add
xor
push
insb
xor
cmpsl
inc
or
inc
cmp
mov
iret
sbb
jmp
shr
dec
outsl
out
movsb
movsl
mov
repz
hlt
int
sbb
out
dec
in
sbb
or
jne,pt
and
test
pop
repnz
mov
sbb
or
xor
push
pop
pop
inc
out
and
lret
sbbb
push
jnp
xor
push
jp
fstpt
cmp
cli
cmpb
pop
fisubl
pop
lock
incl
push
jns
je
movsb
mov
sahf
shll
imul
dec
ljmp
push
xchg
cmp
aaa
loope
addb
or
jne
fisttpl
push
scas
push
cmpb
mov
add
jnp
sub
orl
adc
test
mov
adc
sbb
jl
mov
mov
sbb
sub
movsl
lret
dec
movsb
mov
pop
cld
and
pop
adc
add
fsubs
pop
loopne
js
dec
dec
shlb
inc
sbb
cmp
frndint
push
mov
sbb
cmc
stos
mov
outsl
int
faddp
dec
rcrl
flds
jo
jne
xchg
imul
xor
pop
push
enter
mov
imul
fiaddl
in
out
dec
outsl
and
push
or
dec
fcomps
push
fistps
iret
xor
jl
mov
adc
mov
cmp
mov
mov
mov
push
iret
mov
jp
or
imul
adc
mov
mov
jns
popa
aaa
ror
int3
sub
jl
test
lds
subl
adc
mov
fsubl
push
cmpsb
aam
int3
and
sti
xchg
jns
loope
and
add
push
pop
xor
jle
and
adc
in
mov
lcall
mov
xlat
pop
mov
lahf
cld
add
lahf
mov
daa
insb
fs
mov
mov
imul
fnsave
jne
jle
cmpsb
in
outsl
adc
movsb
cmc
test
mov
adcl
mov
mov
xchg
aam
lds
roll
dec
int3
popa
shll
xchg
idivl
mov
mov
and
data16
push
mov
inc
jle
cltd
sbb
dec
inc
cmp
add
mov
dec
cwtl
fisttpll
leave
insl
fst
in
jmp
lods
scas
pop
mov
cli
aad
xor
faddl
or
rcrl
mov
test
test
call
insl
outsb
and
mov
dec
lods
cwtl
or
cmp
int
ficoml
inc
dec
sub
mov
scas
adc
inc
ds
mov
xchg
cmp
mov
js
ljmp
mov
test
adc
mov
push
adc
push
scas
insb
call
in
loope
fnstenv
dec
add
shll
push
pop
lret
sbb
cld
insl
test
xchg
test
xchg
jno
fiaddl
xchg
add
andl
jl
and
cwtl
jno
mov
and
int
xchg
fdivl
stc
rcrl
cmpl
arpl
imul
mov
ret
stc
leave
mov
xchg
scas
dec
movsb
lret
inc
test
mov
adcb
and
mov
xchg
jo
popa
push
fs
int
sbb
mov
test
jo
mov
loopne
inc
ss
mov
mov
aad
push
jle
inc
jle
fiaddl
iret
clc
mov
ja
push
adc
mov
add
mov
sub
and
out
xchg
sub
xor
in
inc
into
mov
out
test
cmpsb
es
xor
sahf
add
leave
cmp
lcall
es
cmp
push
pop
adc
je
scas
test
or
cmp
or
mov
push
sbb
dec
mov
jg
mov
lcall
test
xchg
pop
out
mov
cmp
xor
push
push
mov
pop
push
adc
or
rorl
loope
jp
and
jl
inc
in
mov
mov
ds
jle
mov
ret
mov
or
mulb
mov
mov
inc
jl
movsb
mov
xor
out
rcrl
sbb
and
mov
fnop
dec
mov
sub
fisubrs
insl
mov
or
pop
shll
inc
stos
test
or
jnp
stos
movb
sbb
iret
pop
mov
dec
cmpsb
adc
imul
arpl
and
and
call
loope
mov
out
xlat
in
mov
aam
add
out
outsl
mov
loopne
pop
fdiv
cmp
fistpll
das
and
mov
and
fsubrp
test
mov
mov
adcb
sbb
xchg
adc
or
pop
lcall
fisubrl
cltd
cli
inc
mov
cmp
jnp
fisttpl
movsb
xchg
imul
sbb
fnstenv
mov
sub
mov
push
sahf
bound
shll
xlat
cwtl
adc
or
adc
mov
js
adc
jle
add
and
not
adc
fistpl
adc
nop
pop
repz
pushf
jns
mov
push
fnsave
in
inc
icebp
aam
cmp
jae
fcoml
and
xor
xchg
add
jmp
cwtl
das
shl
or
pop
sti
jp
aas
inc
out
out
xlat
jne
mov
jmp
push
push
push
cmc
inc
ljmp
les
pushf
and
jb
lret
mov
lods
out
or
je
xchg
xor
mov
xchg
pop
addr16
pop
bound
out
mov
cld
fnstenv
push
fnstsw
popl
mov
inc
pushf
outsb
pop
jle
out
mov
mov
pop
pusha
ficomps
add
sbb
xor
mov
test
test
add
jg
mov
movsl
test
mov
arpl
mov
and
inc
push
sub
cltd
pop
push
push
push
lods
dec
jl
sti
sarl
mov
fnsave
hlt
fsubrl
repz
jge
cmp
adc
push
lret
loope
cltd
arpl
dec
aaa
dec
jae
pop
stos
adc
inc
cli
jnp
aaa
test
mov
in
imul
or
inc
inc
mov
aaa
std
lds
xchg
imul
pop
imul
and
jecxz
push
popa
sub
aaa
jp
cmpsb
in
mov
adc
fstpt
push
push
mov
stos
and
cmp
ss
inc
inc
dec
jb
fbld
push
test
es
dec
adc
pop
out
div
outsl
outsb
mov
pop
fsubs
popf
or
adc
push
movsb
cs
shrl
js
xchg
repz
fidivrs
test
mov
add
jge
xor
pop
pop
lret
add
sbb
or
data16
stos
or
lahf
inc
xchg
rolb
fadds
xor
nop
push
mov
ret
out
or
mov
mov
xchg
sti
ret
xchg
scas
and
loopne
popf
sub
mov
jae
mov
sbb
test
icebp
inc
mov
ffree
dec
push
fcomps
repz
test
xor
outsb
inc
sahf
ficomps
mov
subb
shl
cmp
mov
sub
adc
jno
inc
pop
cmp
loope
das
inc
in
movsb
inc
xchg
cmpsb
aam
pop
int
mov
xor
cli
mov
jae
sbb
lods
mov
push
outsb
out
lods
stos
lret
xchg
or
adc
stmxcsr
add
jl
imul
in
add
loope
pop
hlt
push
and
push
mov
xchg
es
dec
test
xchg
cmpsl
mov
xchg
cmp
lock
int3
cmp
movsl
mov
inc
sub
adc
sbb
cmp
test
or
xor
fnstsw
mov
dec
add
movsl
loopne
fwait
mov
mov
scas
pop
mov
sub
pop
and
jo
ss
cmp
ss
in
inc
sahf
push
frstor
pop
pop
sub
test
push
popa
sarl
mov
repnz
out
adc
pop
and
xchg
lret
in
enter
dec
sbbl
jae
sub
mov
repnz
jmp
sarb
push
mov
fidivs
inc
sub
pop
pusha
jno
imul
movsb
mov
icebp
test
fistl
sub
out
mov
xor
push
outsb
mov
shrl
nop
cwtl
cwtl
ja
push
outsb
push
dec
aam
fwait
loope
daa
popa
xchg
mov
in
mov
stos
push
stos
jmp
into
aad
leave
stos
out
push
xor
pop
daa
test
jmp
or
pop
or
xchg
push
sarl
dec
pop
and
sbb
std
ret
cmp
test
rep
es
stos
cltd
sahf
adc
aam
mov
and
aad
mov
adc
fcomi
dec
lds
or
xchg
aas
jno
cs
sahf
shll
cmp
push
jmp
js
xor
repnz
mov
adc
std
aam
rorl
cmp
sbb
sbb
push
mov
inc
ljmp
loope
push
jmp
dec
xlat
pushf
and
call
lods
pop
arpl
jmp
push
fidivs
xchg
push
xor
stos
stos
jbe
jecxz
adc
and
xor
and
mov
loope
mov
pop
cmc
fisubrs
in
or
stc
or
ljmp
sbb
sti
mov
mov
dec
pop
das
shr
les
jno
push
mov
push
dec
and
or
mov
cld
enter
lods
sub
push
or
pop
mov
fcoms
out
inc
lock
cmp
cmpsb
xchg
push
adc
push
mov
les
outsl
add
test
jnp
add
jmp
push
dec
jbe
sbb
dec
js
mov
add
popa
orl
mov
imul
movb
dec
and
hlt
xchg
fidivl
mov
int
jne
jle
std
iret
popf
mov
xchg
push
dec
fsubrs
out
pop
notb
xlat
adc
xchg
sub
leave
mov
sbb
mov
imul
and
mov
out
mov
sub
pop
outsb
lea
and
shld
mov
and
into
scas
sbb
mov
mov
jne
les
add
scas
test
out
enter
dec
outsb
push
scas
xor
xor
pop
fisubrl
lods
xchg
jbe
cmpsb
xor
cmp
push
dec
sbb
pop
jnp
addr16
in
stc
insb
push
push
adc
push
push
add
hlt
lcall
loope
lock
in
mov
and
mov
scas
out
xchg
push
loop
or
add
cmc
dec
push
mov
shl
mov
fstps
adc
sti
pop
push
or
mov
add
addb
into
mov
mov
nop
enter
adc
or
dec
and
imul
push
mov
sub
sbb
mov
icebp
xchg
push
iret
xchg
test
push
or
fcmovnb
xchg
pop
stos
sub
dec
fnstcw
test
fsubrl
outsb
out
daa
in
push
pop
mov
mov
in
nop
xchg
mov
jb
or
outsb
mov
test
mov
jb
imul
cs
pop
movsl
xlat
dec
movsl
rol
stos
pop
add
and
adc
sub
arpl
faddp
xchg
ficoms
cli
mov
repz
aaa
xchg
inc
mov
cmpsb
xchg
out
cmp
je
in
mov
stos
seta
push
add
fs
push
sti
fisubl
push
mov
jns
fbstp
lds
add
sbb
adc
sarb
fsubs
outsl
sub
mov
flds
jg
fcoml
sti
pop
xchg
out
loope
push
or
xlat
cwtl
ss
cmp
jge
fstps
das
mov
fmul
mov
insl
mov
out
addr16
xor
push
pop
call
inc
mov
inc
mov
scas
fs
fists
pop
lds
shl
lods
jmp
xor
clc
add
push
mov
adc
xlat
out
call
pop
lods
stc
dec
cmp
add
filds
pop
dec
add
or
imul
lcall
mov
in
cmp
cli
hlt
clc
mov
mov
and
push
sub
daa
fsts
push
inc
mov
sbb
insl
pop
incb
shlb
adc
pop
dec
push
rcr
shll
movsl
dec
dec
dec
jle
push
jl
push
jne
push
jae
ds
jl
sarl
fnstsw
loope
or
inc
and
mov
repz
sub
addr16
adc
das
jns
pop
test
cld
cwtl
fmul
adc
dec
add
scas
sbb
in
imul
je
mov
inc
adc
clc
sub
xorl
out
cmp
icebp
loopne
push
add
leave
sarb
sbb
jg
add
pop
and
sarb
sub
mov
sub
jb
push
push
loopne
xchg
adc
loop
dec
fs
out
adc
pop
cli
mov
ret
in
bound
dec
mov
fisttps
mov
push
aaa
jecxz
cs
xchg
and
mov
cwtl
es
add
pop
push
adc
lret
jge
xchg
pop
out
lods
cmp
fbld
mov
cs
mov
add
inc
rcrl
xchg
jnp
movsb
test
jle
imul
in
in
pusha
aas
push
sub
xchg
or
push
or
inc
xchg
in
fsubr
clc
repz
xor
movsl
dec
jp
movsb
enter
mov
popa
mov
and
sbb
frstor
and
hlt
jno
movsb
dec
push
fiadds
or
movsb
out
jl
into
xchg
cmpl
aam
adc
pop
jmp
mov
dec
aad
lea
xchg
jb
es
and
ret
pop
mov
sbb
shl
pop
fs
out
repz
std
out
stos
xchg
cmp
shrl
xchg
cmp
xchg
mov
out
and
pop
inc
pushf
adc
adc
jmp
clc
stos
sub
repnz
add
int
jl
push
in
int
sti
popa
jo
lcall
mov
les
jg
movsl
dec
add
jmp
daa
pushf
xorb
addr16
clc
and
mov
jne
sahf
pop
cmp
das
daa
xchg
push
pop
xor
or
cmp
jnp
sub
jle
xchg
and
repnz
jbe
lock
jbe
ss
fldcw
mov
fwait
ret
les
cmp
lret
inc
aas
rorl
dec
mov
push
sbb
cli
dec
push
loopne
and
mov
dec
pop
push
and
xchg
std
sbb
mov
dec
push
in
mov
pop
and
dec
nop
sub
into
xchg
mov
mov
and
jb
aas
dec
and
scas
fildl
adc
pop
jg
dec
cli
insb
or
ds
xchg
pop
push
testl
sub
mov
xchg
repz
ret
pop
repz
mov
jnp
push
fwait
int3
dec
mov
sub
scas
fcoml
and
adc
sbb
pop
and
push
xor
sbb
cmpsl
push
inc
lret
xchg
cli
push
je
pop
sarb
pushf
ret
test
cs
addr16
in
mov
rcl
xchg
xchg
jg
add
fstpl
mov
movsl
or
cwtl
mov
js
out
insl
sub
ljmp
inc
das
cli
sbb
jmp
fldenv
sahf
ja
cmp
mov
sbbb
popa
inc
pop
sbb
jp
mov
mov
insl
ds
enter
cmpsl
es
cmp
enter
sub
sbb
jecxz
sbb
push
es
cmp
addr16
sub
or
aad
xor
ret
cmpsb
faddl
das
xor
sahf
call
mov
sbb
or
cmp
cmp
lahf
jb
pushf
pop
and
push
scas
lret
outsb
pop
adcb
test
mov
jne
js
cmp
mov
mov
mov
leave
dec
mov
icebp
out
lock
cmc
imul
shlb
and
inc
sar
pop
scas
xchg
rorl
insl
subl
cmp
cmp
xchg
inc
je,pn
std
or
rorb
aam
add
je
shll
xor
pop
jmp
ds
adcb
lret
test
add
fwait
add
sub
aam
data16
ucomiss
mov
fstpt
add
or
inc
insl
dec
adc
mov
pop
int
sahf
or
leave
addl
jg
in
divl
dec
jmp
cli
int3
sub
loop
lea
ss
jb
daa
lods
or
ja
dec
rorb
dec
push
subl
push
mov
repz
pop
xchg
int3
leave
xchg
gs
fimull
int3
xchg
fsubr
cmpsb
aad
test
stc
lea
popa
fldl
pop
sbb
xor
lretw
jle
loopne
adcl
and
roll
cmp
or
stos
sti
lret
mov
testl
pusha
outsb
leave
cmp
mov
mov
test
cmp
xor
sbb
icebp
loop
lds
add
mov
dec
daa
pushf
mov
pop
jbe,pn
ljmp
and
cmc
jmp
or
mov
lds
test
sub
loope
push
mov
lahf
test
add
out
xlat
pop
adcb
mov
insl
mov
jecxz
xlat
or
mov
fcomp
inc
inc
cmpsl
adc
inc
loopne
push
inc
jmp
cmp
mov
xor
icebp
pop
leave
repnz
out
xor
fdivl
ds
dec
in
mov
sbb
or
lods
xor
das
inc
jg
insl
jo
dec
xchg
arpl
add
xchg
loopne
jle
dec
push
fsubl
testb
insl
xor
pop
mov
inc
lock
sub
mov
sub
jno
fsubr
inc
fdivrl
sub
sbb
xor
cmp
push
dec
push
jp
fs
adc
loope
outsw
movsb
shll
out
out
sbbl
outsb
pop
ja
mov
jmp
or
xor
std
cmp
push
out
xor
mov
dec
out
mov
cmp
adc
xchg
xchg
out
xchg
es
sub
pop
loopne
faddl
pop
int3
push
or
xchg
sub
enter
xchg
sbb
pusha
pop
sbb
addl
cmp
pushf
loop
mov
out
mov
jb
pop
and
fstpt
dec
test
jne
dec
aad
mov
mov
out
dec
mov
push
mov
mov
ficoml
loop
imul
lahf
ljmp
mov
je
int
push
xchg
stos
icebp
icebp
movsl
mov
mov
push
adc
mov
adc
int
dec
lret
iret
in
mov
flds
inc
pop
xor
jp
and
mov
jo
mov
call
mov
xor
xchg
sarb
movsl
cmp
addr16
rcrl
mov
mov
lds
repz
es
pop
cmp
pop
mov
insl
arpl
cmp
or
sbb
inc
push
mov
mov
aas
sbb
fstpt
enter
push
bound
in
mov
adc
in
mov
loop
insl
clc
aam
xchg
mov
sub
jge
outsb
fisttpl
js
mov
inc
data16
mov
sbb
nop
test
xchg
ljmp
cmp
andl
mov
call
setge
add
cmpsb
ret
dec
xchg
cli
and
ret
ljmp
xchg
inc
xor
fnsave
cmpsl
fldl
mov
aaa
inc
dec
mov
xrelease
insl
shrb
push
cld
in
leave
lret
inc
ds
das
scas
pop
mov
ds
jo
loopne
cld
out
cmpsb
xchg
mov
cmpsb
rclb
push
jb
or
dec
pop
lret
dec
das
out
fbstp
sbb
test
sarb
inc
xchg
jge
sub
enter
ja
nop
and
sub
cwtl
stos
mov
fucomp
adc
cld
dec
test
lea
push
or
in
verr
test
cltd
push
popaw
out
cmp
out
bound
mov
cltd
ret
test
jnp
cmpsb
pop
stc
jns
and
or
fwait
iret
dec
ret
jecxz
arpl
mov
das
jl
mov
jne
and
push
inc
pop
sub
aad
cmp
popf
icebp
lods
inc
mov
xchg
xchg
add
into
push
out
sbb
jbe,pn
cltd
lret
push
push
add
lret
sti
decb
and
lods
mov
call
out
push
cltd
adc
sbb
movsl
push
les
mov
pop
jo
jecxz
inc
cmp
push
lret
mov
scas
fsubl
push
mov
jge
xchg
sbb
add
fdivrs
add
fs
mov
xlat
inc
rolw
xchg
adc
add
jb
lret
jge
mov
xchg
pop
data16
int3
inc
fisttpll
mov
fistpll
cmc
imul
jge
xor
lods
and
pop
jmp
das
inc
sbb
jo
xlat
jae
lods
dec
inc
push
jge
cmc
bound
mov
pop
cwtl
dec
ficoml
dec
or
cwtl
mov
fwait
out
adc
daa
stc
aad
fldenv
add
jmp
xchg
mov
shrd
mov
add
xchg
or
in
cmpsb
gs
sub
sbb
aaa
scas
jne
push
lret
add
clc
sub
std
movl
aam
mov
pusha
xchg
xchg
stos
cmp
scas
daa
lret
lods
fwait
jae
xlat
cwtl
add
xor
inc
out
push
or
aad
pop
scas
jnp
sub
mov
insb
test
mov
mov
shlb
call
mov
imul
cmc
movsb
in
sbb
adc
xchg
xor
sarl
sub
daa
mov
lods
mov
daa
push
jecxz
mov
loopne
fnsave
popa
xlat
xor
jb
aas
shll
cmc
inc
or
leave
mov
mov
inc
xchg
std
lea
xchg
repz
icebp
dec
mov
mov
inc
mov
xchg
out
sub
outsl
inc
enter
or
mov
inc
inc
pop
fsts
repnz
jmp
nop
dec
xor
imul
xor
in
out
inc
cs
and
xchg
xchg
jbe
add
jbe
mov
sbb
call
std
ljmp
imul
test
xor
cwtl
sub
into
jmp
pop
add
cmp
jg
jne
sub
jne
fxam
lcall
add
ss
out
outsl
jns
ljmp
loop
and
shl
sahf
xchg
lahf
pop
mov
xchg
jno
jl
sub
or
push
std
adc
hlt
sbb
out
dec
cmp
pop
mov
mov
mov
add
and
pop
dec
cmpl
push
jl
add
ret
adcb
addr16
fisubs
ja
imul
xor
cmp
xlat
adc
aad
xchg
into
xchg
stc
popa
das
jbe
sti
or
aam
jnp
jp
out
arpl
pusha
jg
mov
pushf
cmp
and
fs
inc
mov
repz
in
lret
and
xchg
popa
shll
xchg
cmc
sub
pop
mov
scas
loop
negl
fstps
movsl
mov
bswap
lret
mov
fsubr
pushf
insl
cltd
out
nop
or
mov
shlb
or
fisttpll
jno
fs
push
mov
xchg
cmp
repnz
xor
dec
sub
fldcw
movsl
addr16
cmpsb
out
mov
std
xor
push
ja
lret
jmp
fwait
push
pop
aas
movsb
adcb
js
xor
rcl
jo
push
or
popf
fsubrl
xchg
test
orb
je
push
cmp
pop
inc
jne
xor
popa
outsb
jbe
lret
sub
sbb
sarb
cmp
loop
scas
scas
or
jge
xchg
insl
lahf
mov
sub
xchg
loope
lock
cmp
sub
jl
push
adc
push
jb
pusha
xchg
adc
push
bound
adc
test
inc
mov
add
sub
stos
fisttpl
addl
call
mov
std
push
test
adc
out
or
orb
jne
push
and
stos
jne
sbb
aas
sahf
push
add
add
aam
xchg
xor
stos
and
hlt
or
mov
and
inc
xor
jns
out
mov
xchg
sbb
mov
ret
out
or
jp
lock
dec
mov
out
std
dec
push
cmpl
loopne
mov
pusha
or
aam
fimuls
aam
sbb
movsb
lahf
jbe
shl
add
movsb
rcrb
fidivrl
or
and
lock
mov
loope
dec
fimuls
bound
sub
or
icebp
cmp
push
into
movsb
daa
mov
jle
cmp
inc
addr16
int
add
add
in
dec
xchg
mov
jno
fisubs
outsl
imulb
push
cmp
aam
sbb
sub
push
lret
add
shll
ljmp
jae
jecxz
inc
jnp
ss
inc
mov
pop
sbb
jecxz
mov
testb
movsb
iret
cltd
inc
push
mov
inc
mov
jns
mull
adc
add
xchg
jg
push
xchg
xlat
mov
leave
push
mov
aam
jmp
outsl
in
cli
leave
loop
out
dec
in
jecxz
adc
leave
mov
aad
add
aam
jne
lods
popf
iret
mov
mov
cmp
orl
mov
ss
mov
repnz
push
cwtl
or
out
in
sub
lock
mov
imul
fucom
pop
shll
mov
insb
test
ljmp
mov
js
and
sub
popa
mov
out
push
shr
pop
sub
sahf
fcoml
push
mov
sbb
dec
mov
lock
xchg
xchg
gs
xor
adc
mov
ror
push
cs
std
shll
fistpl
pop
push
rcrl
ret
loop
test
push
jbe
clc
test
xor
mov
jns
dec
mov
int
aad
in
lea
stc
xchg
call
add
xchg
in
cli
cmp
aam
das
out
cltd
sub
cmpsb
push
dec
addr16
dec
dec
repz
adc
call
lods
or
push
mov
or
inc
mov
mov
or
push
or
popf
lds
pop
push
jo
cmp
mov
jbe
jnp
adc
orb
repz
mov
rcrb
lcall
and
or
cmp
repz
fisttpll
adc
inc
push
mov
mov
pop
adc
shll
add
out
outsb
aad
popa
and
xchg
lret
add
mov
mov
pop
fbstp
bound
adc
and
and
mov
lods
loopne
clc
mov
insl
cmp
mov
popl
popa
add
push
mov
popa
sbb
fs
and
xor
jbe
push
mov
pop
jecxz
push
fs
addr16
in
imul
ss
mov
add
lret
gs
dec
xor
push
loopne
xchg
pop
add
adc
add
and
sub
push
mov
xchg
int3
test
cmp
mov
jg
add
sbb
rcr
sub
cmp
jge
mov
addr16
sahf
mov
imul
jl
dec
adc
lahf
mov
shrb
push
add
mov
js
lret
pop
dec
xorb
loop
adc
push
inc
insb
outsb
rcr
sbb
mov
xor
ror
les
mov
in
jne
jl
cmp
add
push
gs
leave
in
cltd
inc
cmpsb
inc
pop
movl
test
arpl
and
mov
test
pop
lahf
pop
cmpsl
sub
rcrl
xchg
add
aaa
jp
test
out
cmp
xor
out
lods
lea
test
add
movsl
jno
dec
sub
scas
jbe
cmp
fstl
or
clc
mov
rorl
adc
rcrl
maxps
xrelease
sub
testl
mov
sbb
pop
das
sub
adc
cltd
andl
sub
mov
outsb
loope
cmpsb
pop
jg
jo
or
das
jmp
and
outsl
sbb
sbb
mov
outsl
ficoms
mov
pop
clc
mov
xor
pop
adc
lods
push
adc
push
mov
aam
xchg
scas
add
fiaddl
inc
jmp
pop
pop
loopne
pop
sbb
out
aaa
xchg
jb
pop
gs
ds
jo
mov
mov
xrelease
ljmp
mov
enter
adc
fsubrs
out
pusha
pushf
mov
int
dec
out
testl
das
jecxz
sub
add
or
ret
or
cltd
push
cmp
xor
xor
xchg
aaa
inc
arpl
arpl
or
pop
loop
jae
dec
cmpsb
lods
aam
clc
addr16
mov
push
in
mov
inc
enter
popa
out
std
mov
push
mov
cmp
arpl
andl
mov
mov
mov
xchg
loope
xor
dec
int
and
push
inc
lods
jo
std
aad
stos
inc
cs
cwtl
pop
dec
loop
adc
iret
push
add
loop
call
mov
clc
pushf
bsf
pop
sub
or
jo
pop
mov
push
gs
xchg
lods
and
mov
rorl
int3
repnz
les
orb
cli
pop
xor
xchg
add
in
lret
jns
jg
clc
das
pop
ja
cltd
bound
aad
adc
sbb
or
loopne
rorl
pop
cmc
jmp
jae
jmp
stos
xor
push
lock
jp
inc
in
adc
cmc
aad
lods
pop
into
and
stc
cs
cwtl
xchg
mov
int
add
insl
pop
sub
lods
les
in
sbb
lods
push
or
jecxz
mov
aad
push
outsb
adc
decl
mov
int3
arpl
call
add
push
jae
test
xchg
gs
faddl
sbb
add
lret
push
dec
adc
fsubs
or
leave
pusha
xor
cmp
in
jmp
push
mov
fists
jg
mov
ret
jl
pop
pop
mov
jae
das
and
mov
inc
sub
cltd
add
arpl
es
call
mov
js
lods
and
adc
mov
mov
pop
and
dec
mov
xor
scas
cmp
push
test
or
push
xor
dec
dec
lds
inc
fdivl
bound
fwait
stc
cmp
iret
es
ret
inc
lods
hlt
rolb
cmp
mov
and
in
fisubrl
mov
sbb
xchg
pop
popf
in
loopne
and
cmp
push
xor
loop
push
sti
add
pop
mov
mov
fcomps
jo
pop
rolb
jecxz
lods
lahf
test
sub
stos
std
dec
mov
sbb
jp
ljmp
mov
cmp
mov
sbb
ret
push
mov
push
xchg
pushf
sub
mov
xlat
push
andb
outsb
sbb
fistpl
arpl
fisubrs
stos
mov
or
mov
aam
jmp
push
out
add
aas
out
jmp
je
test
sti
inc
cltd
and
push
decl
add
add
pop
aad
ljmp
iret
cmpsb
mov
sub
mov
int
or
cmpl
jmp
stos
or
arpl
fistpl
int3
jle
lret
push
mov
mov
jge
rcrl
repnz
movsl
cmpsb
sub
pop
fdivrs
test
enter
mov
cmp
dec
cmp
repz
loopne
mov
or
inc
movsl
lods
test
repnz
ret
xchg
addr16
jmp
inc
and
and
ja
pop
jbe
adc
push
imul
out
pop
inc
push
stos
movq
adcb
mov
pop
jge
nop
mov
xor
jo
dec
aam
subb
fwait
cltd
sub
sub
std
adcl
lods
bound
cmp
jp
jne
loop
ja
jno
sbb
mov
mov
je
push
test
cmp
stos
or
daa
and
stos
mov
fbld
jl
sarb
sbb
jbe
sbb
addr16
xor
dec
or
ret
pop
pop
enter
test
test
out
jae
sub
xchg
or
and
ljmp
mov
imul
in
dec
cmp
loop
dec
out
stos
push
xchg
cmp
xchg
push
push
jnp
insl
jge
push
into
inc
push
inc
sub
pop
sub
gs
shrl
inc
mov
and
mov
sbb
fptan
adc
push
stos
sub
pop
gs
add
xchg
xor
dec
in
adc
mov
stos
outsb
orb
jle
aas
pshufw
movsl
inc
and
imulb
mov
aas
subl
dec
out
sahf
into
cmp
clc
cmp
lea
ficompl
cmp
std
mov
xchg
add
cwtl
push
enter
cmpsb
adc
fwait
pop
mov
xchg
ds
mov
repz
loope
or
arpl
add
aam
or
cmc
push
and
jo
aad
cmp
fadds
mov
add
lret
add
sbb
or
lcall
lret
lahf
jbe
lret
sub
jecxz
lea
lods
movsb
pop
or
gs
inc
incb
push
xor
or
and
rcll
mov
mov
cmp
jo
popa
int
js
out
sbb
in
push
mov
xchg
mov
and
xchg
jb
mov
mov
xor
out
sti
test
leave
bound
jns
aam
sub
mov
lcall
adc
mov
iret
push
es
pop
lret
in
ret
scas
hlt
inc
pop
xchg
hlt
xor
lock
jge
shlb
jp
xor
dec
push
fiadds
pop
xor
jb
cltd
add
xor
jae
testl
and
and
and
arpl
inc
ljmp
pop
push
popf
xchg
repnz
pop
loopne
adc
sub
out
jle
or
mov
dec
jl
sbbb
and
out
mov
shrl
inc
orl
dec
fucomip
decb
fldcw
shll
aaa
cld
cwtl
aaa
leave
lret
mov
and
lods
call
adc
add
movsb
xchg
sar
jmp
push
sti
pop
cmpb
cmp
out
push
ljmp
mov
rorl
imul
mov
popl
in
jae
popa
and
sahf
mov
push
and
fisubrs
int3
fdivl
fdivrp
xchg
mov
xlat
enter
aam
push
dec
int3
mov
lret
popa
js
sub
popf
jmp
scas
lahf
sbbl
lahf
pop
outsb
mov
pop
popa
inc
inc
pop
sbb
pop
and
enter
pop
insl
or
mov
lcall
lds
shll
cwtl
mov
fldt
sub
fstl
dec
mov
lods
jmp
das
loop,pn
lahf
mov
dec
adc
notl
jo
mov
movsb
xor
mov
xor
xchg
push
xor
pop
fidivrl
frstor
mov
xchg
add
push
iret
lods
sub
adc
sub
ja
daa
inc
cmp
adc
test
xlat
cld
cmp
sub
lods
inc
cmp
add
mov
dec
out
jns
xor
test
mov
push
cmpsb
imul
sub
ja
fists
lock
cli
mov
cmp
out
popa
sbb
sysenter
repz
push
cwtl
xchg
jmp
repz
mov
fsubrl
sub
or
adc
mov
aam
arpl
in
and
shll
pusha
test
sub
cmpps
lds
sub
cld
int3
outsb
mov
add
jns
mov
aas
subb
pop
stos
mov
or
adc
adc
pop
inc
in
mov
sbb
push
xchg
jge
mov
xchg
xchg
pop
sub
mov
inc
int
push
shll
and
inc
testb
insb
xchg
xchg
test
push
jo
fs
lret
mov
jns
movsl
mov
jnp
icebp
testl
mov
xor
xchg
mov
inc
inc
testl
idivl
jae
add
pushf
fnstenv
icebp
stos
jne
dec
ljmp
dec
mov
lods
bound
jle
stos
insb
jl
loopne
xchg
mov
movsl
dec
pop
inc
and
push
dec
jno
add
ss
dec
rorl
mov
jl
push
mov
shrb
cmp
and
dec
fcmovnb
sahf
aaa
fucomp
jle
rolb
mov
jae
push
cmp
ja
decb
sbb
popf
repz
movsl
es
dec
xchg
mov
sub
push
xor
push
and
xor
jle
push
mov
xchg
mov
mov
fwait
or
inc
js
fwait
stc
fbld
jle
inc
std
outsb
adc
push
lahf
push
pop
and
nop
outsb
sub
fsts
mov
lock
dec
lea
ja
dec
adc
mov
or
vmwrite
imul
push
xlat
cmp
lahf
push
pop
rorl
sub
aaa
adc
inc
pop
call
mov
ja
rolb
jne
loopne
lahf
and
scas
push
mov
mov
jnp
adc
add
loopne
mov
add
fimull
push
xorb
dec
dec
imul
ret
mov
fnstcw
out
and
adc
fadd
pop
fisubrs
sub
outsl
out
inc
mov
pop
iret
movsl
xchg
add
jbe
repnz
pusha
out
clc
daa
mov
sbb
out
lahf
inc
rcll
push
sbb
xchg
stos
and
out
or
cmp
pop
and
ret
in
cs
pusha
fnstenv
jmp
sbb
cmp
es
or
es
jmp
lret
cltd
lock
pop
or
pop
push
lret
loop
add
adc
push
push
mov
pusha
idivl
pop
mov
sbb
push
sahf
cmp
push
xchg
push
xchg
shl
cld
scas
xor
test
or
das
in
rorb
aas
outsl
xor
adc
imul
hlt
push
inc
jmp
movsl
xchg
add
imul
nop
mov
pop
int3
jle
push
lds
jno
inc
fistps
pop
xchg
cld
jns
pop
cmp
lret
mov
jae
sti
std
xor
insb
mov
das
jmp
aaa
in
adc
lock
xor
ljmp
inc
cli
sub
xchg
inc
push
dec
popf
ja
xor
cmp
iret
idiv
mov
xor
ret
jp
repnz
pop
out
gs
dec
ja
sti
andb
push
xor
mov
and
cld
jmp
pop
scas
testb
xchg
stos
adc
repnz
nop
dec
xchg
pop
adc
jne
pop
xchg
ja
cmc
mov
dec
cmp
je
cmp
pop
outsb
mov
add
dec
mov
adc
fwait
js
fisubs
aaa
fmuls
mov
mov
push
popa
xor
xchg
pop
frstor
dec
push
sbb
cmp
adc
shl
pop
in
iret
sub
cmp
shll
shlb
inc
shll
js
mov
call
lock
inc
in
mov
jl
push
mov
test
stos
std
adc
int
cmc
mov
dec
xor
add
sub
dec
dec
push
sub
inc
cld
daa
and
or
jo
mov
lods
fwait
jmp
inc
adc
mov
in
out
jle
push
mov
mov
adc
icebp
mov
fs
push
sub
mov
cwtl
sub
cmp
les
filds
xchg
pop
cs
call
adc
or
cmpsl
icebp
test
mov
iret
stos
adc
daa
xor
clc
add
mov
popf
call
sti
dec
scas
pop
xchg
sub
xor
push
stos
into
popf
pop
mov
insb
ret
mov
or
ret
rclb
sbb
mov
xchg
std
mov
es
mulb
int3
pop
pop
test
adc
into
xor
insl
or
scas
mov
call
jns
pop
icebp
xchg
ss
pop
adc
xor
out
cld
movsl
or
xchg
lods
and
jns
in
jmp
and
push
xchg
data16
xor
insb
test
sbb
add
divb
and
scas
mov
push
inc
cmc
adc
ficompl
test
push
push
mov
xlat
inc
out
jle
pop
mov
int
mov
and
repz
mov
loope
cld
mov
cmp
cmpsl
mov
stos
jnp
mov
or
add
daa
enter
lret
les
out
mov
fidivrl
pop
jmp
aas
mov
jo
or
adc
gs
dec
ret
call
movsl
ds
inc
xor
xor
and
mov
or
pop
inc
pop
fisubs
or
dec
fwait
add
int3
mov
mov
lcall
mov
xchg
clc
cmp
push
std
jmp
pop
dec
xor
inc
iret
cmp
jl
aas
repz
sbb
mov
in
in
cmp
in
popl
rep
subb
loop
loop
mov
jmp
es
cwtl
outsb
push
mov
stos
xlat
out
add
mov
fstps
aas
inc
movsl
lock
test
cs
sub
dec
lcall
fs
call
push
adc
fisttps
sub
in
stos
mov
inc
stos
xchg
mov
pushf
imul
pop
inc
icebp
jbe
stc
add
xchg
fstpt
pushf
sarl
xor
pop
std
scas
or
add
mov
movsl
mov
ret
sti
das
or
fisubs
mov
and
insl
fists
fwait
addl
jne
in
rcrb
loop
cmp
mov
mov
adc
imul
leave
je
push
into
jo
sbb
push
ss
jno
fnstsw
ds
aas
jp
sub
mov
cltd
and
jmp
xor
rcll
lock
nop
jge
bound
or
or
push
hlt
mov
out
mov
fs
cmp
mov
mov
cmc
aas
insl
dec
sbb
mov
ss
sbb
cmpsl
cmp
xchg
push
mov
ss
loop
xchg
mov
je
sar
jo
dec
mov
lahf
out
pop
mov
adc
imul
mov
int
xlat
lcall
push
stc
mov
sub
gs
push
lds
int3
jnp
mov
mov
dec
sahf
rcl
orl
rorl
inc
or
inc
dec
dec
lds
je
in
out
jmp
aaa
mov
loopne
hlt
jp
xor
mov
xor
adc
pop
mov
std
addl
iret
lods
dec
add
xchg
lcall
sub
cmp
add
jg
xorb
jp
sub
push
xlat
rcrb
add
adc
mov
mov
jle
lock
mov
scas
pop
mov
enter
pop
fs
in
notl
sbb
inc
in
movsw
mov
mov
and
jp
sub
mov
jle
or
mov
ljmp
sub
add
ret
fsubp
andl
jl
addr16
jg
rolb
loope
test
es
mov
testl
xchg
sub
xorb
in
in
sub
and
imul
mov
icebp
inc
out
test
shr
in
mov
xchg
stc
pushf
dec
shufps
push
fs
sub
inc
xchg
jo
fwait
inc
rolb
in
inc
add
xchg
pushf
push
fnstsw
dec
jge
sub
adc
test
inc
adc
xor
mov
xchg
and
in
adc
aam
dec
pop
jno
enter
into
ror
cmpsb
cltd
ret
sbb
ror
xlat
jge,pt
cmp
aaa
rcl
add
stos
jmp
adc
jns
pop
arpl
lcall
jmp
dec
dec
icebp
sti
or
lret
mov
ficompl
adc
jb
xlat
sbb
js
pop
scas
fsubrl
test
repnz
call
daa
xchg
or
xor
add
mov
xor
repnz
mov
sbb
in
mov
push
mov
push
subb
rolb
pop
lea
inc
enter
test
les
aas
cmp
sub
pop
fists
inc
jmp
lcall
or
hlt
fbld
popf
xor
in
xor
fwait
test
push
lods
mov
inc
loopne
dec
addb
popa
jg
pop
fcom
cmp
add
sbb
imul
add
fnstsw
dec
adc
jo
mov
ret
inc
xor
push
imul
je
mov
mov
mov
mov
inc
data16
idivb
xchg
add
cmpb
mov
cwtl
loope
sbb
cmp
mov
jns
pop
push
jecxz
and
xchg
lea
out
xchg
dec
or
icebp
jge
outsl
sub
pop
and
mov
push
pop
xor
inc
fcompl
int
in
push
xor
inc
jbe
out
cmp
pop
lods
lds
add
in
mov
stos
iret
hlt
pop
movsb
into
xlat
sbb
and
sbb
mov
enter
nop
sbb
out
or
daa
out
aad
jae
add
jmp
icebp
addb
arpl
inc
xor
loopne
xchg
push
mull
jmp
sbb
popa
addb
mov
push
adc
and
insb
dec
xchg
cld
push
popa
dec
push
adc
push
push
movsb
mov
data16
leave
dec
push
jl
fnstcw
cli
lret
mov
pop
pusha
cmp
das
inc
push
xor
xchg
inc
or
mov
or
imulb
mov
leave
jns
out
sti
mov
sub
jecxz
idiv
lods
rcrb
movsb
push
pushf
sbb
add
add
sahf
or
mov
outsb
mov
aam
ja
pop
mov
jle
push
dec
mov
lock
push
and
ret
sbb
push
loop
insl
xor
in
int
xor
mov
xchg
push
negb
and
mov
in
loopne
or
je
dec
sub
shl
cld
jge
fidivl
leave
and
fnstcw
movsl
inc
cmpsl
xchg
cmpsb
and
mov
in
mov
mov
add
or
xchg
or
push
inc
mov
mov
int
mov
int3
es
mov
mov
jo
sbb
push
mov
dec
pop
sarl
or
rol
sub
shlb
sub
mov
jae
inc
xor
push
int
add
jb
ss
pop
xchg
jmp
mov
dec
loope
shlb
and
cmp
add
jae
stc
or
sbb
mov
push
adc
add
hlt
pop
int
cmp
jecxz
mov
dec
pop
lahf
scas
mov
in
add
mov
insb
sub
mov
or
lock
adcb
mov
xor
cmp
pop
sbb
ficomps
adc
das
rcll
pop
mov
lods
neg
out
sbb
or
xchg
cmpsb
or
inc
sbb
test
mov
lock
pusha
cld
mov
jmp
stos
enter
lods
dec
lahf
or
lods
je
fsts
aad
ja
inc
outsb
cmp
pop
shrl
mov
sub
ret
fsubs
lahf
push
push
and
movsl
pop
icebp
and
jge
xorl
adc
lods
ficoms
fmul
cmp
out
aas
xlat
cld
cld
ds
jle
or
jmp
mov
mov
xor
nop
mov
push
lds
aad
push
cli
ss
add
xchg
and
mov
push
movsb
imul
cmp
push
cmp
dec
popf
pop
mov
xchg
pop
mov
or
xor
scas
in
mov
xor
call
shlb
outsb
xchg
mov
adc
xchg
loopne
call
sahf
stos
xchg
out
fstps
and
mov
and
mov
add
xor
xchg
pop
cmpsb
cmp
jg
jb
outsb
jg
sub
fcom
ret
mov
pop
mov
sub
in
xchg
pop
mov
ljmp
fs
movsb
and
jb
pop
insb
test
pop
xor
lret
stc
cmp
pusha
pop
nop
xchg
sbb
in
and
cmp
and
add
scas
ja
lret
pop
mov
leave
repnz
arpl
add
sbb
adc
in
into
jl
ds
fcmovnu
and
mov
xor
jmp
into
std
insb
sbb
jmp
popa
in
adc
push
imul
divl
push
arpl
and
sub
jp
xor
mov
outsb
jle
mov
shl
and
dec
fsubrl
and
js
pop
repz
out
mov
test
inc
mov
cwtl
push
mov
insb
movb
cltd
jno
jmp
or
mov
cwtl
in
shlb
popf
out
cmp
sub
cmc
jl
and
mov
or
sti
inc
push
cld
push
daa
out
adc
jmp
lock
jmp
mov
add
jle
push
jge
xor
in
ret
imul
mov
cmp
in
mov
sahf
adc
push
sub
xchg
leave
les
or
push
ljmp
lea
push
je
scas
or
dec
push
sti
dec
jl
sub
mov
icebp
sbb
mov
dec
scas
das
addr16
inc
out
ret
or
xchg
imul
cwtl
xchg
jns
scas
inc
mov
xchg
arpl
pop
leave
mov
jecxz
xor
in
dec
cmc
cmpsl
inc
fwait
cmp
dec
sub
int
pop
mov
subl
jl
cmpsb
sbb
xlat
xchg
or
cli
out
imul
pop
mov
loopne
leave
mov
int
mov
insb
push
xchg
mov
push
jp
pop
add
imul
push
mov
add
mov
cs
popa
xchg
fsubrs
xor
sarl
push
adc
inc
xchg
or
and
xor
sbb
stos
mov
aad
add
out
and
jns
mov
sub
dec
pop
push
jnp
into
int
sub
fcoms
sub
in
add
xlat
lods
into
fwait
push
imul
mov
push
popf
in
loop
cli
mov
nop
lds
outsb
or
add
rolb
adc
sbb
es
and
xchg
jp
cld
dec
test
loopne
cmp
enter
xchg
lods
push
jge
mov
pushf
nop
dec
hlt
stos
inc
jb
test
mov
push
sub
fiaddl
add
lods
leave
mov
rcr
mov
xchg
mov
xchg
pop
cmpsb
in
or
cmpb
jb
push
scas
sub
shl
adc
outsl
lahf
mov
lret
loop
inc
mov
gs
mov
xchg
repz
out
xor
cmpsb
out
xchg
mov
stos
jne
shrl
mov
int
clc
stos
push
push
in
mov
xor
daa
inc
scas
fistl
iret
cmp
mov
jecxz
sar
aad
loop
mov
std
lahf
sub
jb
sub
pop
mov
pop
mov
pusha
xlat
adc
lea
cmp
sbb
xchg
mov
stos
mov
leave
mov
pushf
pop
mov
push
jmp
cltd
das
fdiv
adc
mov
jp
mov
xchg
mov
and
out
adc
adc
ret
lock
cmpsb
push
cmp
mov
push
sbb
daa
dec
dec
lea
test
pusha
cmpsl
mov
leave
dec
and
in
mov
stc
cmp
mov
mov
movsb
stos
aam
pop
sbb
xchg
mull
inc
stos
cmp
lret
and
sarb
mov
int
pop
mov
fldl
adcb
shr
xor
rcrb
push
adc
jg
jmp
nop
out
shll
xorb
fnstsw
xchg
dec
std
mov
repnz
dec
lret
sub
popa
xor
and
adc
add
push
daa
roll
adc
and
xchg
mov
aad
bnd
in
cmc
jge
in
push
push
pop
jmp
out
repz
ret
push
adc
mov
hlt
neg
aas
loope
bound
mov
int3
mov
mov
lock
pop
adc
leave
mov
loop
addr16
xchg
jo
jp
js
cmp
loopne
repnz
jecxz
fisubl
mov
add
adc
push
mov
clc
es
jne
pop
pop
xchg
pop
rcl
pop
jno
aaa
cltd
out
fdivp
ds
inc
cmp
xchg
mov
xchg
loopne
loopne
adc
cli
xchg
aad
test
mov
mov
addr16
mov
mov
lock
leave
mov
jmp
dec
loope
gs
mov
mov
inc
inc
imul
sbb
pop
scas
jns
arpl
cltd
xchg
push
add
and
test
pop
add
fmul
sbb
cwtl
mov
jl
test
jl
mov
jnp
push
aaa
xchg
pop
mov
stos
add
sub
sub
clc
pop
lods
push
pop
push
std
lcall
mov
repnz
mov
sahf
andb
xlat
js
sbb
pop
or
nop
daa
imul
lock
mov
pushf
jmp
mov
ss
dec
cli
pop
jl,pt
in
add
add
xor
jge
mov
fucomi
gs
inc
flds
sub
cmp
aam
add
dec
fisttpl
rcrl
adc
push
sub
fs
push
mov
int3
cmpsb
cmp
loop
aad
fists
lea
pop
jno
push
inc
xlat
movsb
sub
mull
inc
lods
mov
add
out
ret
mov
stc
cmp
dec
xor
mov
xchg
add
loopne
cmp
or
pusha
sub
push
aaa
nop
pop
aad
cmp
pusha
xchg
aam
adc
jns
jle
mov
insb
ja
mov
and
mov
movsl
inc
cli
fbld
push
loopne
gs
mov
jns
fstpt
aam
rcrl
mov
xor
xor
mov
movsb
cmp
outsb
in
pop
mov
out
xchg
adc
sbbl
cmp
mov
and
fadds
out
lret
imul
push
cmp
pop
jle
push
adc
outsl
push
pop
movsl
jne
push
dec
cmp
add
dec
push
flds
loopne
lea
push
jnp
pop
jl
xor
dec
cmp
stc
popa
adc
shrb
xor
imul
jne
dec
repnz
inc
and
jp
mov
fimull
out
jno
dec
cmp
xchg
out
mov
fstpt
mov
icebp
in
fcomps
cld
jne
into
sbb
dec
int3
mov
mov
popa
cmpsl
pop
jmp
push
cs
mov
aas
out
mov
out
ror
int
adc
jne
ja
dec
scas
pushf
or
sbb
lods
cltd
xor
mov
daa
retw
fwait
loope
jle
out
xchg
out
xchg
and
push
call
in
mov
in
lret
adc
add
xor
cmp
outsl
and
nop
inc
xor
sbb
loop
aaa
mov
mov
rcll
cmpsb
insl
mov
fdivl
push
jg
pusha
lock
mov
xchg
dec
ret
xorl
and
clc
shll
out
mov
clc
test
push
sub
ror
lods
leave
pop
jp
pusha
iret
daa
cmpsb
inc
pusha
xchg
ret
cmp
imul
lea
push
pop
pop
push
gs
pop
xchg
cltd
dec
xchg
clc
enter
testb
or
and
leave
push
lods
sbb
movsl
add
cmp
and
or
sbb
inc
ss
or
mov
mov
inc
sub
mov
es
fs
clc
sub
pop
or
icebp
test
sbb
mov
mov
hlt
mov
adc
jne
icebp
mov
add
push
enter
push
cmc
push
mov
call
inc
dec
sub
sub
jne
jle
xchg
ljmp
aas
mov
sub
sti
lock
or
test
add
leave
ja
sub
aam
lods
repz
popf
hlt
loope
test
xor
push
insl
xchg
xchg
icebp
sub
pop
jp
aad
insl
xchg
jbe
ja
and
jle
add
neg
mov
jb
pop
mov
aas
popa
call
sbb
hlt
pop
xchg
outsl
rorl
cmp
aam
lret
outsl
sbb
sbb
xchg
sub
mov
inc
sbb
outsb
mov
xchg
or
lcall
lret
clc
imul
test
repz
shrb
jne
xchg
mov
or
iret
add
pushf
xchg
push
push
dec
aaa
and
scas
mov
sub
push
xchg
dec
ret
outsl
cli
sub
xor
testb
adc
mov
cmp
push
fcompl
cmpxchg
fs
test
sub
nop
mov
in
pop
call
lods
or
jl
and
push
fsub
cmp
mov
shlb
fldl
xchg
mov
cwtl
mov
and
dec
es
push
xchg
or
loope
lock
pushf
dec
jbe
mov
mov
ja
pushf
or
stc
lods
and
xchg
adc
sbb
add
xchg
adc
stc
add
jp
pop
jle
add
fistpl
inc
add
and
sahf
js
mov
inc
mov
or
mov
xor
addr16
orb
ret
sbb
dec
rorl
add
aas
fistl
add
cltd
aaa
inc
mov
decb
icebp
cld
jmp
jb
leave
and
push
xchg
int
ret
into
jo
loopne
fnstcw
movsb
push
ja
inc
or
cmp
xchg
pushf
fildll
fcomps
out
dec
xchg
stos
push
fldenv
mov
jp
rcll
mov
xor
into
popa
mov
mov
test
mov
jo
inc
xchg
out
cmc
out
mov
mov
sbb
dec
mov
cwtl
pop
push
sti
xchg
aad
in
rolb
jmp
xor
push
jnp
and
aam
jbe
adc
pop
aad
stos
punpcklwd
fs
sarl
jnp
xor
push
fs
arpl
jge
rcll
into
adc
add
ret
cmp
dec
and
mov
dec
and
fsubrl
cmp
jecxz
daa
ss
lea
aaa
icebp
jecxz
inc
les
adcl
arpl
add
mov
xchg
mov
or
jno
scas
scas
imul
xor
adcb
test
int3
pop
sub
sarl
or
xchg
dec
or
les
in
sbb
inc
jg
leave
sub
mov
mov
pop
lods
cltd
mov
xor
ret
xchg
enter
sub
loope
sti
cmpsl
movd
cltd
sub
sub
inc
in
test
xlat
push
lds
push
int
insl
adc
push
lret
fbstp
add
xor
daa
rolb
add
push
xchg
xchg
cmp
push
jmp
and
dec
stc
aam
cmp
cmp
sbb
lods
cltd
lret
filds
mov
xor
jo
xchg
xchg
sub
add
and
xor
aas
or
mov
and
pusha
lock
mov
jp
add
sub
or
out
or
push
xchg
out
xchg
xchg
js
ja
stos
or
sbb
jno
cmpsl
add
jecxz
add
or
loopne
test
imulb
lcall
push
adcl
sbb
jnp
jp
inc
or
pop
mov
sar
fwait
icebp
enter
shrb
popf
rcrb
sbb
inc
or
mov
sbb
mov
pushf
neg
mov
sub
jg
add
ret
xor
mov
push
int3
dec
add
out
popf
std
sub
inc
shlb
lret
pop
insl
mov
fcomps
je
rep
push
add
mov
mov
fsubrl
xchg
dec
pop
sub
xlat
pushf
dec
enter
bnd
pusha
push
mov
pop
mov
pop
and
scas
fsubp
sbb
lcall
pop
mov
into
fdivrs
adc
jle
cmp
inc
shll
ds
and
and
mov
inc
in
push
outsb
jmp
xchg
enter
pop
mov
loop
test
bound
sbb
enter
xor
popf
push
es
lahf
push
jbe
ljmp
dec
das
cmp
sbb
xchg
dec
and
mov
dec
inc
push
pop
mov
mov
rorl
jp
std
push
stos
movsl
lret
in
push
sbb
in
mov
es
sbb
lret
clc
push
movsl
push
or
or
fdiv
hlt
jno
mov
xor
andb
mov
inc
js
mov
jg
jnp
or
jb
movb
xchg
and
jns
div
call
negl
jbe
enter
cmp
sbb
enter
movsb
pop
rcrl
loope
push
sub
mov
das
adc
pop
mov
jp
mov
call
jge
les
and
popa
cmpsb
dec
js
ret
les
mov
hlt
subb
bswap
add
test
popf
cmpsb
ret
scas
cmpsb
stc
xchg
push
subb
add
out
subb
sbb
nop
sti
mov
push
imul
fstps
and
jle
div
shlb
and
roll
xchg
adc
and
mov
cmp
jg
jle
jp
mov
push
loopne
lcall
push
stc
mov
sub
cwtl
pop
popa
push
gs
pusha
or
dec
mov
fwait
lods
pxor
mov
push
push
sbb
sbb
aam
or
test
jb
jge
rolb
lahf
test
daa
hlt
xor
fadd
dec
rclb
fnstsw
dec
aam
nop
mov
sahf
inc
repz
int
pop
adc
mov
push
add
mov
adc
dec
into
dec
jae
push
jb
mov
mov
xchg
xlat
clc
jb
or
lock
jne
jno
xchg
test
pop
mov
fsts
mov
xlat
out
dec
add
push
mov
sbb
cmp
shrb
push
shl
xchg
jnp
xchg
and
movsb
cli
pop
pop
nop
mov
in
lds
push
rcr
and
mov
cmc
popf
xchg
lcall
enter
repnz
and
fists
fmuls
test
sub
leave
or
mov
mov
push
cmc
adc
or
cmp
xchg
insb
xor
sub
es
dec
inc
adc
or
mov
insl
sub
lods
inc
in
imul
pop
loop
iret
dec
out
mov
cmp
movsb
jbe
jnp
xor
push
cmp
xor
sahf
fdivrl
dec
call
or
call
mov
out
mov
mov
xlat
clc
shlb
push
insl
sbb
xchg
mov
sarl
pop
imulb
jp
and
test
dec
cs
inc
fiadds
sub
dec
cli
mov
out
inc
jmp
outsb
inc
mov
roll
insl
add
int
in
inc
roll
mov
jb
push
test
mov
mov
mov
push
test
jecxz
lods
push
inc
jmp
std
lret
fwait
jne
das
xchg
push
adc
jne
sbb
pusha
or
lods
mov
imul
outsl
inc
mov
cmc
cld
lret
push
in
ss
pop
loope
int
mov
dec
push
enter
int
sbb
insl
jp
imul
iret
out
push
jo
imulb
ds
lock
mov
dec
mov
xor
pusha
push
adc
std
adc
jg
popf
push
mov
int3
sbb
aaa
into
jge
lods
cmp
mov
push
sub
outsb
jno
fiadds
xor
sub
cmp
fistl
test
cld
pop
inc
and
jp
xchg
push
lods
inc
mov
fstp
fisubrl
inc
je
or
sub
cld
aad
push
ss
jnp
pop
rclb
pop
mov
in
sub
pop
jmp
push
fbstp
jbe
call
or
mov
in
dec
fists
aad
das
icebp
xor
aam
fs
pop
mov
and
cwtl
adc
je
cwtl
int3
jnp
test
ljmp
adc
add
adc
cmp
inc
inc
ret
stos
jg
mov
xchg
cmpsl
push
sti
int
mov
jg
hlt
add
sahf
xchg
ret
fwait
mov
jmp
mov
cmp
cmpsb
push
xor
sub
jg
pusha
dec
inc
mulb
and
mov
fisubrs
cmp
or
cmp
pop
cmp
push
cmp
pop
mov
lock
mov
pop
pop
insb
dec
adc
std
jmp
mov
fsubrl
mov
fbld
adcl
xchg
dec
icebp
or
add
push
sub
fwait
bound
sub
inc
inc
xchg
or
and
cmp
pop
cmp
or
mov
jl
inc
add
mov
shlb
hlt
int3
dec
lock
movsl
mov
mov
xchg
ja
sbb
pop
xchg
jno
mov
mov
stos
lahf
rorb
dec
fcompl
dec
pop
push
cmp
shrl
fmull
add
jbe
push
and
je
cmp
icebp
mov
cmp
inc
mov
xor
lahf
in
add
outsl
inc
push
rorb
cltd
inc
push
jg
push
shrl
ljmp
int
mov
push
aad
je
jns
subl
xor
mov
push
xor
dec
pusha
fwait
in
mov
cmp
mov
ljmp
scas
shrl
or
enter
out
add
in
and
xchg
std
std
xor
in
sysenter
push
and
scas
outsl
pop
sbb
lret
sub
inc
mov
add
scas
mov
sarb
sub
mov
in
sub
xchg
test
pusha
dec
das
push
loopne
out
and
xchg
in
aaa
cld
fwait
dec
jne
ds
sbb
and
ret
les
sbb
test
fstps
out
pop
push
and
scas
inc
inc
popa
out
pop
jmp
jmp
xor
dec
dec
dec
fsubrl
add
cmpsb
xchg
mov
cli
aas
pop
hlt
jecxz
imul
mov
jo
insb
ret
stos
lahf
adc
xor
xlat
ja
jne
in
add
sahf
cli
or
inc
loop
das
or
test
sbb
incl
inc
enter
int
jo
movsl
mov
or
imul
mov
jmp
cs
inc
out
insb
adc
adc
cs
jns
and
cmp
and
xchg
push
jmp
jo
sti
xor
outsb
lods
sbb
sarl
mov
mov
repnz
jle
inc
pop
popf
addl
repz
push
adc
inc
push
cmp
jae
fisubrs
repnz
rcrl
and
jb
outsl
mov
mov
fs
into
jns
sbb
jle
mov
push
cmp
repnz
shlb
cli
ret
int3
in
mov
mov
xchg
mov
in
xlat
pop
dec
daa
dec
sub
or
cmpsl
sub
cmp
inc
rcr
int3
imul
enter
xor
in
and
dec
scas
int3
sub
imul
push
data16
sbb
adc
mov
mov
or
repz
push
fisttpl
pop
or
inc
insb
icebp
lock
inc
xor
gs
sbb
and
pop
add
popf
xchg
mov
int3
add
xor
inc
and
add
push
in
jbe
xchg
mov
and
std
mov
lret
insb
cld
mov
and
in
pop
faddp
popa
dec
inc
push
pop
cmp
outsb
stos
sbb
cmc
dec
cmp
mov
mov
xchg
mov
cmp
pop
adc
mov
mov
popa
in
mov
imul
mov
test
mov
inc
jg
mov
push
xchg
mov
movsb
cwtl
in
push
and
in
repz
into
pop
fisubrl
lea
cmp
mov
dec
repnz
mov
cld
repnz
adc
ss
jmp
cwtl
repz
pushf
push
sahf
xchg
imul
jns
clc
push
and
insl
rcrb
pop
lds
sub
xchg
dec
dec
out
dec
scas
pop
pop
pop
xchg
cwtl
dec
int
dec
jb
add
aad
pop
and
or
mov
xchg
ret
mov
scas
jp
sbb
inc
mov
popa
mov
test
xchg
mov
rcll
fsub
pop
inc
nop
lock
ret
push
jmp
pop
ficoml
cwtl
jnp
xchg
push
push
push
leave
movsl
inc
lahf
imul
pop
cli
adc
into
push
in
lods
xlat
aas
vcmpngess
dec
jnp
lods
pop
mov
lods
movsl
add
xchg
incl
lahf
jo
mull
cmp
jne
pop
jle
mov
pop
ds
push
mov
pop
xchg
cwtl
fadd
xorb
mov
adc
jo
xchg
jecxz
pop
mov
jge
add
sbb
sahf
mov
and
rclb
mov
add
orb
sub
scas
and
and
pop
mulb
int3
fwait
sbb
dec
or
jecxz
mov
int
xor
test
mov
mov
fbld
pop
cmp
out
pusha
fdivrl
jne
cmp
or
add
popa
inc
pusha
mov
movsl
incb
xor
xor
jns
in
andb
or
stos
xchg
mov
mov
rcrl
cmp
stc
addr16
xchg
pop
aas
inc
std
insb
cmp
stos
push
dec
daa
xchg
push
mov
cmpsl
pop
adcl
xor
ret
or
in
rolb
scas
fldcw
xlat
push
popa
or
dec
test
mov
idivb
jbe
andl
or
mov
mov
in
je,pt
sub
fildl
inc
iret
jecxz
push
jb
repz
nop
lcall
add
test
xor
dec
loope
cmp
and
dec
ret
scas
data16
ficoms
pop
mov
add
sub
arpl
clc
inc
movsb
rcll
jp
jnp
cmp
or
inc
test
mov
inc
push
adc
test
scas
sbb
push
outsb
rcll
aas
push
lret
jb
mov
cmpsb
incl
and
mov
mov
mov
pusha
ret
mov
pop
out
loopne
jle
mov
bound
mov
sub
and
std
cmp
xchg
ror
and
or
adc
fisubrl
mov
test
jg
fisttpll
inc
insb
mov
cmp
xchg
popa
icebp
mov
in
outsl
ror
xor
lods
inc
shl
xchg
mov
and
add
and
mov
and
jecxz
sub
mov
aas
es
pushf
xlat
and
add
and
out
push
xchg
lods
sub
jb
pop
arpl
and
mov
pop
add
orl
adc
and
in
pop
push
je
rcrl
mov
hlt
pop
jbe
dec
cli
out
cmc
ljmp
and
fstps
ds
gs
xorl
xchg
jmp
call
jnp
shlb
xor
pop
inc
dec
mov
stos
push
lods
and
pop
cmp
xchg
jbe
push
jg
mov
outsl
and
pop
cld
jle
sbb
pushf
mov
cwtl
cmp
rcl
adc
je
lds
cmp
jecxz
int3
xchg
pop
dec
xor
mov
pop
mov
pop
imull
aas
movsb
std
adc
not
inc
pop
mov
inc
jns
and
movsl
dec
popa
outsb
sbb
sahf
data16
jae
std
xchg
call
sti
fdivrl
ss
test
inc
cli
jne
mov
push
inc
fdivrp
daa
mov
fistl
out
int
dec
inc
push
pop
addr16
mov
mov
pop
mov
mov
pop
sub
mov
cmp
jmp
xchg
dec
jns
push
jns
mov
shll
repz
loope
mov
out
scas
push
xor
xlat
lods
pop
push
rorb
js
int3
pop
mov
push
insb
push
mov
repz
fs
insl
xor
leave
mov
mov
mov
adc
push
out
sub
clc
imul
mov
scas
jle
js
pop
adc
enter
mov
sub
fwait
inc
ss
xchg
fs
xchg
std
xlat
cmc
popf
hlt
mov
fidivrs
inc
add
jg
roll
inc
fldl
pop
pop
jge
dec
lret
mov
dec
dec
sub
cli
or
enter
mov
lods
imul
mov
cltd
mov
jmp
jecxz
sarl
sti
jo
adc
fmuls
aaa
jns
pop
mov
lock
sub
add
cmpsb
push
gs
push
je
inc
into
fstpt
cmp
sub
cmp
pop
imul
hlt
or
mov
push
xor
in
movsl
mov
mov
ljmp
xchg
sbb
push
jmp
adc
mov
pushf
out
push
push
mov
xchg
pushf
pop
and
sbb
daa
fisubs
daa
cmpsl
xchg
dec
daa
imul
repz
inc
scas
cmc
push
stos
arpl
mov
mov
aam
inc
adc
mov
test
mov
stc
test
lds
cmp
iret
lret
or
ds
lods
xor
adc
mov
lods
or
lods
into
lcall
hlt
push
bound
dec
pop
adc
fdivrl
push
push
mov
mov
or
pushf
rcrl
add
je
adcl
push
loope
pop
lock
mov
call
sub
mov
sahf
xchg
and
out
ficoml
out
jbe
mov
outsl
mov
pop
pop
les
cltd
inc
sub
xchg
push
or
sbb
addr16
call
arpl
push
push
outsb
push
test
popa
cmp
sbb
fiaddl
mov
lret
adc
data16
jl
leave
pop
fisubrl
lods
jbe
jle
jae
sahf
mov
fwait
and
ss
mov
pop
dec
mov
and
gs
cmp
sahf
add
cmpsl
addr16
mov
push
gs
pop
jo
mov
push
cmpb
and
ja
gs
icebp
enter
daa
mov
jp
mov
dec
into
das
inc
pop
xor
pop
push
outsl
aad
xchg
iret
insl
mov
popa
push
movb
frstor
into
das
xor
push
sahf
loope
test
xor
sar
mov
iret
imul
mov
pusha
add
inc
in
cmp
cmpsl
test
add
std
je
push
aaa
js
sub
popa
adc
adc
xchg
lock
iret
mov
push
cmpsl
addr16
sbb
pushl
xor
mov
test
inc
adc
cmpsl
inc
mov
jl
xchg
lea
and
ficoms
add
push
pusha
clc
mov
lods
add
nop
in
stc
movsl
or
jmp
aas
mov
or
xchg
and
sub
test
imul
inc
sarl
sarl
jp
out
test
lock
dec
lods
add
mov
and
ljmp
test
test
dec
repz
sbb
in
das
xor
repnz
in
pop
xchg
fs
fidivrl
or
adc
sub
inc
pusha
sub
dec
stos
xor
hlt
push
es
int
adc
and
loop
aad
loopne
nop
outsl
aaa
inc
imul
adc
and
scas
inc
movsb
xlat
fisubs
gs
lret
les
std
hlt
lahf
sub
imul
sub
mov
xchg
mov
xchg
into
ja
cld
fnstcw
lret
lahf
fwait
adc
xchg
enter
ret
shrb
xor
divb
arpl
pushf
mov
iret
add
loope
jae
mov
or
sahf
jne
mov
mov
add
jb
jmp
push
loopne
loopne
lea
mov
mov
mov
jle
dec
enter
sub
xchg
xlat
scas
or
faddl
xchg
je
or
sbb
push
outsb
cltd
inc
out
jmp
das
inc
mov
cmp
sbb
ljmp
mov
push
fidivs
mov
int3
lea
iret
add
scas
popf
cmp
push
inc
stc
mov
insb
push
fwait
pop
cmp
and
sub
pushf
cwtl
fwait
iret
push
negl
xor
test
nop
subl
jle
lea
jecxz
sub
frstor
imul
mov
inc
push
in
jno
fnsave
pop
cmp
xor
int
sbbl
pop
test
mov
pop
arpl
es
fcomip
or
lock
scas
jno
mov
pop
fisttpl
inc
cmp
cwtl
adc
xchg
rcrl
mov
enter
dec
nop
xchg
mov
leave
sbb
cmp
cmpb
push
jl
sub
mov
lcall
scas
and
mov
mov
sub
sub
mov
push
fisubs
ret
ficoml
das
scas
or
fadds
pushf
mov
pop
cld
jno
imul
push
in
ret
cmpsb
mov
or
call
jo
icebp
pop
xchg
mov
js
cmp
rcll
sbb
mov
mov
or
lea
sbb
repz
ret
fxch
dec
pop
inc
out
sbb
mov
fimull
gs
movsb
bound
aas
notl
jb
les
push
fisubrl
pop
xchg
insl
in
mov
in
jg
jbe
pop
out
popf
xchg
xchg
lret
int3
das
cmp
fdivp
out
mov
sub
les
fwait
ljmp
pop
movsb
fsubrs
jg
adc
lea
cltd
dec
in
jno
cmpsb
jg
out
add
mov
mov
out
hlt
movsb
mov
pop
xor
loopne
push
dec
push
call
enter
in
ljmp
or
mov
cmpsb
mov
test
and
das
xorb
stc
icebp
sub
push
sbb
call
pop
divps
leave
test
in
xor
jecxz
dec
jne
or
xor
add
out
dec
add
xchg
test
dec
push
xor
sets
xchg
jae
fnstenv
loope
mov
dec
ret
inc
add
mov
enter
inc
cltd
ret
loop
int
aaa
sub
inc
mov
or
sub
jb
lret
test
mov
cmpsl
jmp
lock
pusha
mov
scas
cmp
xchg
xor
xor
lcall
cmc
test
and
sbb
ret
int3
bound
sub
jnp
fcmovb
jno
lods
or
push
pop
push
pop
cwtl
popa
push
ficomps
nop
lcall
xor
ret
in
mov
mov
mov
stos
pop
icebp
addr16
out
js
jns
xchg
lea
pop
jge
stos
ret
jp
mov
and
xor
into
dec
pop
xchg
in
jo
popa
sahf
jnp
or
popf
and
lret
inc
mov
mov
mov
das
xchg
nop
push
fiaddl
pop
pop
adc
mov
je
hlt
cmpsb
daa
inc
cmpsb
das
push
xchg
fistl
pop
movl
add
ss
gs
mov
mov
insb
bswap
imul
fisubrs
cmp
std
sbb
cmp
loope
cmpb
mov
mov
popa
ss
in
push
dec
jns
mov
mov
jbe
adc
push
dec
enter
inc
push
jmp
xlat
adc
dec
add
sbb
mov
filds
fisttps
or
xchg
add
daa
rclb
enter
pop
inc
fwait
pop
push
adc
adc
out
test
mov
fs
add
rcrl
out
adc
cltd
gs
jl
mov
pop
lds
std
sahf
pop
xchg
int3
push
dec
jno
inc
pop
xor
mov
add
out
mov
ficoml
nop
imul
mov
pop
in
push
lret
jnp
push
adc
fldl
push
iret
push
notb
mov
inc
cs
cmp
fstpt
aaa
inc
shll
out
push
cmp
mov
xchg
leave
mov
and
rclb
pop
js
mov
mov
std
adc
add
data16
loope
lods
xchg
test
pop
mov
mov
jecxz
imul
xchg
es
xlat
rcll
lods
repz
outsl
repnz
xchg
xchg
xchg
cmp
xchg
je
repnz
mov
dec
imul
xor
or
stos
test
cmovp
push
sub
outsb
push
ror
or
sub
mov
mov
cmp
xchg
or
pusha
inc
add
mov
enter
stos
gs
std
dec
dec
jb
jmp
inc
imul
leave
xchg
in
xchg
push
mov
inc
mov
insl
hlt
mov
pop
int
cmc
mov
filds
mov
call
mov
or
outsb
iret
lock
jge
stos
jp
ret
or
dec
ret
xchg
adcw
loop
insb
and
out
pop
mov
popf
mov
jp
adc
dec
mov
mov
scas
aad
mov
jmp
leave
movsl
bound
test
notb
mov
xor
sub
fyl2x
in
daa
shlb
aad
scas
int3
mov
cmp
lcall
mov
mov
dec
pop
pop
add
dec
sbb
pop
bt
add
push
cmp
loop
mov
mov
push
imul
dec
arpl
adc
js
test
cwtl
sub
dec
lret
push
and
popa
pop
lock
dec
sahf
push
sbb
xor
ja
push
ret
leave
daa
stos
cltd
mov
fldt
cmp
fs
pop
push
fstpl
cli
xchg
jle
cmp
lret
push
jnp
clc
add
push
pop
in
fisttps
leave
xor
outsb
inc
mov
stos
lods
std
pop
mov
ja
jp
loopne
jecxz
xchg
add
fmul
sbb
in
in
mov
push
mov
jle
and
rcrb
sbbl
ja
xchg
test
mov
ss
cmp
movsb
aas
scas
push
cltd
pop
sti
fnstenv
push
ljmp
into
jns
lcall
xchg
inc
repz
in
adc
mov
sbb
pop
lods
cmp
adc
sbb
sub
xchg
aad
divl
cmp
fbld
cmp
arpl
push
pushf
fnstenv
or
pop
dec
in
into
mov
test
cli
lret
and
stos
xchg
stos
adc
cmp
sbb
leave
push
imul
xchg
fwait
iret
pop
mov
ret
mov
imul
xchg
mov
repz
fdivrs
test
push
ds
xlat
push
dec
lds
mov
popf
aas
xchg
sbb
stos
scas
and
test
and
mov
outsb
sbb
push
or
add
mov
in
ret
jne
add
fprem
and
outsl
and
negl
repnz
fnstcw
cmpsl
out
enter
jo
jno
push
or
sbb
push
mov
inc
adc
bound
sbb
xchg
and
adc
xchg
or
fcomp
fadd
mov
add
sbb
jb
mov
icebp
ror
add
push
test
stc
sbb
xchg
pop
ret
xor
cmpsl
clc
pop
mov
pop
push
arpl
mov
repz
incb
ds
add
aam
movsl
mov
add
mov
rcrb
cmp
jbe
jecxz
mov
xchg
enter
mov
lods
jl
out
add
aaa
mov
inc
mov
dec
mov
push
cld
adc
fstl
icebp
andl
cmp
out
dec
pushl
mov
mov
ret
js
mov
arpl
jmp
pop
movsl
cmp
std
and
jns
jle
bound
jmp
sbb
lods
and
adcb
je
cmc
jbe
inc
add
in
movsl
xor
pop
cmp
cmp
ljmp
ja
sbb
fidivl
pop
xor
out
lcall
push
sub
pusha
in
bound
ljmp
sub
popf
inc
sbb
leave
lcall
sti
pop
add
nop
dec
sub
and
idivb
rolb
or
ficompl
dec
mov
pop
test
inc
cltd
cmp
mov
mov
and
js
movsb
xchg
inc
or
dec
xchg
or
hlt
call
js
jle
push
popa
hlt
push
out
inc
mov
pushf
mov
push
dec
int
je
loopne
mov
push
lods
lock
inc
add
push
push
xor
iret
cs
jle
jb
sbb
push
add
pop
int3
adc
mov
inc
aas
mov
daa
stc
sbb
or
push
jp
cwtl
adc
bnd
dec
dec
sbbb
push
mov
hlt
mov
cmp
shll
inc
cli
lcall
sbb
dec
shlb
mov
sbb
mov
mov
jecxz
cmp
mov
fwait
cmc
pop
mov
sub
notl
xchg
or
mov
out
jecxz
add
sbb
push
push
push
popl
mov
clc
mov
les
hlt
and
adc
jl
aas
arpl
jae
lcall
dec
jecxz
or
mov
fldenv
rcrb
xchg
imull
dec
mov
fldt
or
sbb
shll
iret
bound
mov
or
aas
enter
outsb
lahf
clc
enter
push
push
xor
or
ficoms
inc
int
pusha
mov
daa
sub
cmp
mov
mov
add
sbb
loopne
push
mov
popa
flds
mov
cmp
pop
popa
js
sbb
test
andl
lock
mov
pusha
and
movsb
or
cmp
mov
or
adc
jbe
xor
movsb
cltd
jmp
adc
sub
adc
inc
pop
fcomip
and
lahf
push
in
shrl
jle
lret
stos
and
mov
lcall
aad
jle
bound
jecxz
pop
jg
rcl
mov
fwait
dec
add
js
or
adcl
inc
push
and
jp
or
repnz
xchg
jbe
shrb
insb
mov
xlat
mov
xchg
fidivl
std
nop
cmp
shrb
xchg
int
xor
lock
shl
and
add
lret
imul
in
jge
test
faddp
jae
clc
nop
loopne
jb
lds
xor
data16
push
inc
push
mov
add
arpl
xchg
inc
fwait
decb
popa
mov
mov
push
sbb
iret
mov
mov
jae
fstps
sbb
push
mov
or
mov
mov
sbbl
pop
test
dec
jb
aad
jbe
pop
std
mov
add
mov
sbb
mov
nop
xor
push
push
mov
ficoms
mov
mov
loope
sbb
mov
dec
lcall
lock
ret
loop
push
sbbl
dec
ficomps
cltd
add
push
xchg
or
or
push
sub
xor
aaa
cld
jle
jg
stc
test
or
push
rcrl
inc
mov
mov
jp
xchg
push
cs
add
pop
cmp
sbb
mov
loop
sbb
push
xor
inc
int
mov
jmp
pop
outsb
and
cmp
test
js
mov
shrl
mov
sub
or
and
lock
jno
aas
ja
insb
call
jl
add
mov
adc
call
cmp
das
cmpsb
mov
dec
sbb
push
faddl
mov
andl
push
add
sub
inc
push
xor
push
insl
jg
sbb
lea
out
pop
sbb
pop
adc
arpl
loope
mov
inc
add
jge
mov
push
std
xchg
imul
push
out
mov
sub
enter
popf
std
aam
es
adc
inc
jnp
dec
rolb
and
push
int3
fiadds
sahf
pushl
loop
jae
leave
cmp
cli
add
outsb
push
pop
mov
das
out
subb
orl
mov
cmp
pop
mov
push
push
aad
aad
and
hlt
sbb
vmovddup
mov
andl
mov
mov
mov
and
std
mov
dec
pop
lock
pop
xchg
inc
pop
fbstp
push
push
mov
cmp
jnp
pusha
and
mov
js
xor
imul
sub
lock
push
jle
jecxz
cli
lds
in
mov
lods
pop
aaa
mov
mov
pushf
push
mov
cmpsl
gs
adc
das
xorl
cmp
aad
repz
negl
jmp
push
sub
stos
out
lahf
adc
xchg
les
mov
adc
lcall
sub
cmpsl
and
xlat
loop
jbe
insl
adc
sbb
jmp
cmp
das
iret
pusha
add
sbb
ss
jle
loopne
jle
pop
mov
jecxz
mov
cld
xchg
mov
ss
add
lcall
test
mov
inc
push
negl
adc
dec
xchg
out
jnp
push
adc
adc
call
push
push
test
push
and
aam
das
and
or
ss
push
inc
pop
out
popa
sti
add
inc
ja
insb
sub
stc
push
inc
icebp
push
adc
sbb
or
aas
lcall
sbb
movsb
fidivl
jp
push
pop
test
add
stos
popf
mov
mov
jo
or
aam
std
mov
inc
js
jle
push
call
jo
daa
clc
testb
xor
out
mov
inc
inc
mov
sub
imul
clc
cmp
testl
test
adc
mov
pop
mov
pushf
data16
dec
int
lods
and
ret
out
fildl
xchg
mov
ljmp
sub
push
mov
in
and
lods
outsb
mov
scas
mov
mov
fwait
ja
fidivrs
mov
loope
test
fisubrs
push
mov
std
xchg
dec
sub
pop
inc
pop
movsb
jge
bound
movsl
mov
xchg
pop
pop
js
mov
in
enter
sbb
pop
loopne
mov
jmp
ret
js
popa
pop
sti
dec
cs
ljmp
repnz
or
or
and
lods
sbb
dec
pop
test
pop
add
outsl
bound
mov
cltd
les
cld
lea
dec
xchg
pusha
repz
add
xchg
gs
push
pop
xchg
cltd
jecxz
loopne,pn
push
pushf
push
mov
cmp
call
jl
clc
stc
inc
mov
movsb
jmp
xchg
pop
xlat
ljmp
hlt
push
lods
outsb
hlt
icebp
sbb
push
mov
aas
fldcw
stc
jnp
or
fidivrs
shll
mov
lret
lahf
insl
xchg
jmp
cli
xor
lcall
mov
subl
push
shr
pop
xchg
push
in
mov
leave
lods
jp
inc
call
pop
lea
sbb
cmpsl
pop
or
sub
mov
fndisi(8087
out
outsb
nop
rorl
sub
sub
pop
jp
mov
loopne
cmp
xchg
sbb
xchg
xchg
mov
loope
int
stos
addr16
int3
movsb
xor
xor
jns
pushf
sbb
das
adc
sbb
push
call
lahf
repnz
push
push
icebp
andl
inc
xchg
cwtl
inc
xor
inc
cs
mov
call
and
jp
sub
jb
fs
inc
pop
xchg
push
in
loopne
lods
int3
inc
mov
popa
cmp
cwtl
pop
stos
in
ja
xchg
mov
sub
test
cmp
xor
sbb
and
xor
pushf
insl
int3
lret
lods
pushf
push
mov
xor
xchg
jo
lock
inc
mov
mov
fwait
push
rcll
push
jo
cmp
gs
push
sub
rorb
ss
pop
xchg
ja
clc
add
pop
cli
jne
aam
fs
push
or
ret
inc
and
cmpsb
fs
sbb
mov
popl
mov
ja
dec
repz
pop
dec
xor
lods
loop
nop
jge
pushf
dec
nop
lcall
out
mov
imul
nop
adcl
rcrl
mov
mov
cmpl
fld
mov
or
pop
mov
cmpsb
and
fwait
mov
adc
cmp
fisubs
pushl
mov
adc
pusha
cmp
cmp
add
xlat
adc
lods
inc
ror
mov
pushf
repnz
repz
stc
pop
cs
stc
movsl
and
loop
mov
pushf
outsb
outsl
sti
jmp
adc
jno
and
pushf
lea
mov
fsubrs
dec
adc
mov
mov
pop
lret
pusha
pop
mov
lods
push
inc
jbe
jnp
and
scas
clc
sti
mov
loop
mov
cli
add
hlt
test
pop
cmp
inc
in
and
inc
hlt
fisubrs
in
ss
ficompl
iret
int3
push
outsb
mov
sti
pop
mov
enter
cmp
xchg
popa
mov
inc
shlb
icebp
sub
call
or
lea
inc
sbbl
mov
out
push
call
loope
pop
fs
fwait
aam
mov
sbb
popa
test
roll
xor
inc
push
cmc
or
mov
mov
mov
push
mov
lods
or
cmp
pusha
cmovne
fstpl
jle
sbb
push
sbb
adc
add
xchg
inc
dec
push
xchg
pop
js
xchg
add
stc
fisttpll
jmp
out
enter
sti
lea
rorb
mov
je
sbb
cmc
scas
xchg
xor
je
movsl
and
daa
fisubl
jle
and
xor
insb
sub
mov
push
rcl
dec
sub
dec
insl
mov
mov
fsubl
and
sbb
or
jns
push
xchg
fnstcw
sub
leave
xchg
push
inc
push
pop
xor
ljmp
aam
mov
add
out
dec
adc
mov
pop
repnz
pop
jle
and
or
sbb
mov
xor
add
cwtl
sbb
stos
dec
or
xchg
int
inc
insl
stc
fnstcw
js
ljmp
aas
aam
jecxz
repnz
ja
and
and
fadd
inc
cmpsl
in
and
jns
lret
and
pop
nop
loope
xor
xchg
sbb
out
std
add
pushf
imul
lea
out
cmpl
outsl
insb
hlt
in
repz
outsl
jb
insl
push
adc
jno
sbbl
lret
sub
push
inc
xor
and
xor
adc
sbb
push
pop
push
in
into
rorl
adc
mov
mov
dec
jns
mov
das
lea
addb
lods
fbstp
shrl
jnp,pt
and
xchg
les
sub
jne
insb
xor
movsl
aas
jmp
aas
notb
icebp
aam
xor
mov
push
add
cmpsl
rorb
cli
stos
inc
es
mov
push
add
and
scas
cmpsl
mov
adc
xor
xchg
mov
fstpl
push
jp
addr16
jnp
cmpsb
cmpsb
mov
cmc
mov
sbb
jno
dec
and
xchg
mov
pop
into
shlb
mov
loopne
inc
in
bound
cmp
arpl
sub
mov
imul
inc
push
add
enter
push
lret
insl
adc
push
push
push
cwtl
mov
or
inc
mov
call
cli
push
aaa
inc
xchg
xchg
jo
pop
pushf
push
pop
inc
movzbl
mov
xor
pop
mov
xor
insb
outsl
int
out
sbb
cld
mov
push
push
int3
data16
into
imul
jmp
orb
rcrl
clc
rcll
xor
xchg
aam
rcll
cwtl
das
jnp
pusha
popa
outsb
xlat
outsl
cmp
daa
adc
jecxz
rcrb
loop
test
pop
rolb
bound
xor
imul
mov
mov
cmc
out
mov
adc
shr
xchg
or
ja,pt
lods
xor
or
sti
cmpsb
addr16
inc
notb
psubq
lret
in
lods
dec
dec
mov
push
lahf
sbb
loop
mov
fwait
ljmp
movsb
mov
adc
xchg
ret
mov
cltd
lds
adc
jne
cmp
fsubl
jno
sbb
push
pop
cmp
aaa
int
jg
adc
add
out
jns
adc
das
inc
pushl
cltd
cmp
jb
sbb
mov
movq
push
sbb
ds
fimuls
lds
mov
dec
xchg
jne
mov
pop
lret
xchg
sbb
icebp
dec
add
push
subb
xor
jp
xor
cld
push
loop
divl
in
mov
add
inc
ret
ror
and
in
and
pop
call
add
add
and
pop
pop
in
lock
cmp
in
icebp
pop
pop
movsb
fcomps
push
loope
jae
dec
sub
int3
adc
lods
push
add
ss
cmp
cs
imul
pop
cmp
aam
cmc
cwtl
jns
js
les
xorl
inc
scas
loop
es
in
push
sbbb
xchg
movl
lret
inc
cmp
outsb
fisubrs
pop
movsb
add
xor
jge
and
sub
mov
loope
mov
in
and
fistl
xchg
outsb
adc
insb
add
inc
movsl
sub
cmp
ret
dec
inc
les
inc
jmp
dec
mov
push
mov
pop
xor
or
sub
leave
or
lahf
inc
cli
sub
mov
cmpsb
loop
rcl
lods
push
sub
xor
or
push
mov
fisttpll
inc
adc
add
add
pusha
push
cli
dec
inc
dec
subb
fldl
leave
or
xchg
fstl
and
xor
add
push
pop
sub
lods
jns
and
test
push
jecxz
lret
adc
push
fsubl
push
cld
xor
xchg
aas
dec
fsubs
cmc
dec
fimull
bound
loope
xor
add
adcl
mov
sbb
push
std
dec
push
gs
mov
mov
xchg
lahf
dec
xor
pusha
xchg
and
roll
addr16
dec
cmp
loopne
mov
lds
mov
or
dec
lret
decl
mov
jle
lret
int
fistpll
enter
mov
fsubl
sbb
add
gs
stos
popf
loope
sbb
add
rcll
loop
dec
shlb
mov
std
pushf
and
aaa
sub
xchg
mov
sub
pop
pop
add
add
pop
mov
jmp
call
sub
cmpsl
inc
adc
repnz
call
add
sti
gs
lea
mov
sbb
stos
testb
lcall
fiaddl
popa
movl
adc
loope
leave
subl
push
cmpsl
in
xor
xchg
sub
xchg
lahf
adc
jg
lea
and
jp
ljmp
xchg
pop
incl
xor
jl
ret
sahf
cmpsb
ret
mov
xchg
push
imul
xor
outsl
in
cltd
int
add
adc
push
mov
das
lea
lea
imul
jns
jp
add
jmp
mov
fsubs
or
int
insb
xlat
jb
pop
push
rcr
and
ret
adc
lods
jl,pt
jno
or
or
ret
inc
dec
jae
adc
rclb
in
lahf
out
mov
sbb
xor
seta
or
and
dec
sub
jns
aaa
aas
cmp
pop
aad
hlt
mov
outsb
jbe
mov
loop
sub
je
push
das
jo
and
scas
jge
ret
dec
insl
les
inc
sbb
fildll
leave
cli
fucomip
push
inc
outsb
sbb
or
inc
inc
xchg
sarl
jb
scas
and
mov
mov
es
sbb
sbbb
push
dec
xor
xor
stos
add
jecxz
ret
cmp
fdivrs
test
adc
gs
xchg
jl
adc
xor
sbb
xchg
jb
xchg
sub
jle
mov
cmp
outsl
mov
fs
mov
push
jno
out
sti
xchg
sub
mov
push
movsb
add
add
inc
push
dec
adc
stc
out
popf
mov
or
add
cld
ss
test
lcall
jo
mov
inc
cltd
sbb
inc
test
jne
mov
dec
insl
fwait
aam
repnz
jp
push
stos
movsl
add
or
scas
inc
add
jb,pt
jne
movsl
ljmp
sub
dec
lods
inc
inc
nop
push
jge
xchg
test
push
aaa
ret
cmpb
lcall
not
mov
js
mov
lock
jmp
aad
or
dec
scas
sub
adc
xchg
xor
or
push
pop
fiaddl
jmp
lock
sbb
xor
lret
inc
dec
aas
loopne
es
int
and
jno
xor
repnz
out
popf
cmc
shlb
sub
jle
fwait
dec
xchg
sbb
sbb
mov
int3
arpl
scas
nop
mov
jno
adc
popf
mov
xor
pop
pop
addb
test
cmp
stc
arpl
lds
pop
add
xchg
aam
cmpsl
pusha
repz
in
jbe
subb
adc
addr16
jo
arpl
cmp
je
and
mov
xchg
popf
nop
sahf
jle
dec
mov
cmp
inc
daa
sbb
cmp
sbb
mov
xor
mov
xchg
arpl
jb
fs
sbb
jns
stos
fs
cltd
stos
cmp
lods
pushf
cmpl
or
jle
rcrb
lret
jecxz
lods
adc
ror
pushf
and
lcall
cs
fisubrs
fwait
lods
dec
xor
adc
fwait
push
int3
sti
out
xchg
loop
and
in
movb
xor
cmc
in
into
mov
movsl
test
jecxz
cmpsb
insb
icebp
mov
sbb
mov
fidivrs
push
xorl
and
int
mov
xchg
repz
out
sub
imul
mov
inc
lea
in
push
inc
dec
mov
je
and
and
push
push
stos
xor
in
xchg
dec
outsl
or
sub
ss
push
cwtl
xchg
imul
adc
push
pop
js
fbld
mov
fistps
sbb
icebp
xchg
and
and
pop
nop
addl
je
or
pop
push
fistpll
imul
mov
sub
mov
mov
jnp
sahf
int
divl
pusha
icebp
xor
mov
xor
mov
adc
nop
jmp
xchg
scas
les
dec
or
inc
popa
and
and
jns
add
push
cld
dec
test
bound
adcl
dec
cmp
xchg
fisttps
testl
test
push
adc
shlb
in
mov
or
xchg
mov
dec
cs
pushf
fwait
aam
and
cld
repnz
mov
jbe
lods
cmp
je
and
cltd
sbb
or
sub
hlt
xorb
xchg
sub
movsl
ret
xchg
call
or
mov
inc
js
xor
sbb
in
stos
ljmp
movsl
movsl
sbb
sub
les
cmp
shll
test
call
fnstenv
pop
or
pop
divb
loop
dec
xchg
fcmovnbe
xor
jp
nop
sub
sbb
sarb
fs
loope
fisubs
jl
icebp
fisubs
cwtl
cwtl
scas
out
cmpsl
fwait
push
sbb
and
addr16
lods
add
and
push
lods
push
cmpsb
sbb
popf
leave
test
cmp
daa
unpcklps
jb
in
ret
mov
xchg
test
fs
adc
sahf
aam
or
pop
cmp
mov
movsl
fstpt
repz
loopne,pn
outsb
mov
nop
add
jnp
aad
pushf
loope
aad
aaa
push
cmp
lret
push
arpl
adc
add
scas
fstl
lods
cmp
leave
lods
ss
cmp
pop
adc
cs
clc
xorb
pushf
ret
sbb
mov
aad
jp
popa
and
aam
pop
xor
add
pop
test
mov
sarl
mov
mov
cmpsb
out
hlt
sub
cwtl
std
js
aas
cld
sub
imul
sub
mov
scas
push
int3
mov
inc
gs
sar
mov
test
stc
mov
mov
shrl
push
out
jmp
dec
out
push
stc
repz
outsb
pop
cli
std
scas
push
in
ja
pop
daa
mov
cld
arpl
or
leave
mov
mov
adc
icebp
lret
loop
out
cld
push
loop
insl
or
scas
out
inc
fisttpl
push
push
insl
int3
loop
adc
sbb
mov
scas
or
and
push
pop
cmpsb
xor
mov
cmp
das
fcomi
cmc
add
mov
hlt
pop
pop
add
sub
ljmp
aad
inc
or
les
leave
adc
mov
cwtl
arpl
sahf
cmp
xchg
and
and
push
loop
std
orb
lea
jecxz
adc
pop
lahf
sub
mov
xchg
mov
adc
push
aad
and
stos
jns
ret
out
movsb
push
or
jg
js
sbb
shrl
lds
push
mov
jno
in
push
cmp
lea
stos
cli
mov
test
je
sahf
and
fisubs
xchg
stos
mov
jge
repnz
mov
mov
sub
adc
movsl
jae
lods
int3
shrl
cmp
xchg
je
aam
cmp
scas
dec
test
add
pusha
pop
sbb
jb
mov
cmpsl
mov
mov
in
pop
fwait
mov
xchg
add
std
loope
insl
or
test
jecxz
add
shlb
test
xor
xchg
into
imul
mov
movsl
pop
jle
xlat
push
and
mov
inc
jp
icebp
lret
xor
pop
jnp
imul
insb
stc
add
sub
mov
dec
sbb
imul
out
inc
test
jp
jecxz
adc
adc
mov
ljmp
jo
ret
roll
mov
iret
mov
in
mov
cli
iret
or
hlt
adc
push
ljmp
adc
test
mov
in
dec
shll
and
es
sbb
test
sbb
int
clc
jp
ja
mov
adc
sub
jne
sahf
mov
lahf
sbb
leave
pop
xor
lahf
jecxz
cmp
mov
mov
repz
mov
inc
jns
outsb
fcomps
pop
lods
cmc
sub
subb
and
addr16
cli
or
xlat
push
xchg
scas
mov
popa
repnz
das
scas
dec
movb
sti
pop
fcoml
outsb
mov
nop
add
sbb
add
cmc
sub
add
jae
inc
jge
inc
dec
pushf
sub
imul
ss
jbe
sub
mov
test
xchg
in
cmp
mov
aas
add
mov
cmpsb
in
xor
lcall
xor
ret
fists
push
xchg
je
sti
cmp
jl
mov
mov
test
xor
flds
xchg
insb
sub
ss
sbb
sbb
dec
mov
out
push
mov
mov
insl
xchg
hlt
push
add
lcall
push
imul
in
or
jbe
insl
and
icebp
jo
enter
adcl
cmp
mov
mov
jmp
stos
xor
push
push
mul
sbb
mov
std
sbb
cmp
jno
sub
adc
int
mov
sub
inc
jecxz
testl
and
pop
sub
dec
scas
ret
arpl
jnp
mov
or
push
push
dec
inc
std
std
scas
push
xlat
cmpsb
dec
sub
fdivrp
shr
movsb
jo
scas
cmpsl
insl
and
xchg
mov
rolb
in
daa
and
adc
sbb
loopne
sbb
xchg
ret
mov
push
dec
stos
ja
imul
int
jecxz
sub
mov
int3
mov
movsb
push
adc
stos
cmc
cmpsl
mov
iret
pop
push
jge
cld
and
sub
insl
bound
cmp
xchg
imul
loop
sub
stos
mov
adc
adc
sub
lret
xchg
xor
js
mov
inc
bound
inc
inc
fisubs
ret
js
pop
cmp
pop
jp
das
aam
arpl
stos
mov
lret
ss
sbb
mov
out
jae
repnz
movsl
and
mov
pop
push
mov
das
or
pop
adc
mov
and
push
mov
adc
mov
in
out
and
mov
jle
leave
cmp
xchg
pop
dec
inc
sub
and
mov
insb
sub
jmp
jbe
xchg
jge
mov
push
mov
xor
add
jge
or
cmp
sub
mov
inc
jnp
repz
scas
mov
push
and
cs
in
fisubs
and
add
jmp
int
xlat
jg
mov
aam
dec
mov
lds
xor
mov
insb
outsb
nop
addr16
mov
jge
mov
pop
into
fsub
cmp
xor
cmp
adc
dec
scas
add
jns
sub
xor
dec
cwtl
mov
adc
mov
xor
decl
cltd
sti
xchg
push
int3
in
jmp
ret
add
dec
sub
jne
sbb
or
pusha
jne
or
or
jo
roll
mov
mov
pop
pop
lret
push
xchg
mov
push
mov
in
pop
push
mov
into
mov
nop
stos
ret
mov
mov
js
jnp
xchg
fisubs
sahf
shlb
cmpsb
lods
jl
scas
data16
fmull
bound
mov
mov
dec
xchg
je
paddusb
inc
inc
sahf
aam
ljmp
xchg
add
jb
xchg
outsb
into
out
sub
cltd
outsb
pop
jo
sarl
inc
jge
int
aaa
mov
mov
pop
nop
mov
dec
fcoml
xorb
ds
dec
mov
sbb
xchg
cmp
xchg
add
dec
xchg
filds
lret
and
push
ja
xlat
negl
fdivrl
add
and
fsubrs
add
inc
mov
in
cltd
imul
sahf
sbb
jo
pop
mov
pop
and
and
adc
add
cmp
mov
xor
das
xchg
jns
xor
repnz
cwtl
lret
xchg
dec
and
mov
dec
test
mov
adc
and
lcall
adcl
xchg
mov
pop
int3
xor
lret
xchg
push
addr16
gs
mov
cmp
mov
jbe
ljmp
imul
aas
mov
sbb
cmc
scas
lret
jns
out
pop
cmp
daa
negb
js
jne
jge
test
mov
and
xor
inc
or
jnp
push
dec
call
push
add
sbb
insb
in
jge
inc
je
dec
rcl
dec
pop
notb
sbb
out
cli
cmpsb
insb
sbb
std
adc
jae
cld
adc
jo
ret
xor
xor
add
or
aam
jle
lods
int3
pop
dec
pop
mov
xlat
popf
cmp
testl
or
pop
int
mov
lock
gs
imul
outsb
mov
mov
clc
sub
sub
add
inc
jp
xchg
or
test
and
and
ss
lods
sbb
nop
mov
jecxz
mov
add
data16
mov
xchg
mov
push
insl
and
roll
mov
cwtl
jl
imul
repz
xchg
mov
jp
jo
std
out
adc
loope
sbb
dec
mov
push
fdivrp
mov
dec
pop
jmp
mov
or
sti
pop
mov
inc
loopne
lods
int
xor
fistpl
xchg
cmpsb
adc
in
cli
add
outsb
into
dec
in
jle
push
mov
mov
mov
mov
xor
and
dec
or
cmp
sbb
out
dec
mov
shrb
fs
and
lea
jle
jmp
sub
sti
inc
push
stos
lock
in
cmp
xor
xchg
inc
repz
leave
inc
inc
out
lcall
js
dec
pop
cltd
mov
mov
cwtl
or
xor
mov
loope
or
sti
stos
repnz
aas
lahf
xchg
loopne
not
pop
test
repz
add
xchg
or
pop
xor
dec
notb
cs
lahf
push
jno
fildll
popa
xor
stc
cmpb
lahf
mov
shlb
out
jle,pn
push
mov
in
insl
sub
sbb
lahf
pushf
fdivrl
inc
mov
push
adc
sbb
in
mov
dec
cmp
popf
mov
push
insl
rolb
add
sub
jbe
pop
movsb
insl
mov
add
fsts
sti
push
xor
loopne
xchg
inc
sub
andb
mov
test
in
daa
mov
mov
cltd
mov
cmp
or
mov
sbb
dec
mov
add
push
push
in
fs
ja
sbb
jae
add
je
pop
stos
adc
inc
sub
pushf
xor
jb
or
push
movhps
in
mov
cmp
dec
ljmp
add
cmpsl
sbb
jle
dec
test
mov
adc
imul
rorb
mov
sbb
or
jg
sub
out
es
outsb
xchg
cltd
dec
in
sub
inc
xor
inc
inc
mov
cmp
push
mov
in
xlat
mov
dec
mov
test
jno
push
or
test
mov
imulb
ja
shlb
mov
mov
cmp
cltd
in
push
lcall
or
shlb
lret
lods
mov
lahf
mov
das
js
stos
loopne
cli
insb
cmp
mov
add
rorl
ret
outsl
jge
cmp
dec
xor
sbb
fisubs
push
jge
pop
mov
adc
sarb
xchg
ret
insl
push
sbb
sbb
dec
and
cmp
repnz
out
sbb
or
xchg
icebp
mov
stc
and
push
and
mov
fbstp
push
cmpsb
insb
pop
xchg
pop
add
fsubrp
aaa
jne
jns
ret
and
adc
cli
mov
dec
popl
or
push
out
setns
rorl
test
dec
cmp
notb
mov
pop
or
push
insb
xchg
add
pop
jbe
imul
or
das
inc
out
jl
outsl
mov
ja
add
push
pusha
adc
xchg
adc
sbb
in
div
sub
stos
sbb
mov
jmp
sahf
mov
shld
lods
jecxz
aad
or
pop
sahf
cwtl
xor
ficomps
mov
ds
ret
cmc
lods
jb
test
pop
sub
bound
pop
lret
bsr
and
add
std
xorl
stc
imul
sbb
xor
or
fs
int
sub
cmpsl
sbb
fimull
mov
into
subl
mov
je
cmpl
cltd
sub
jg
dec
cld
stc
mov
lret
lahf
mov
icebp
popf
lods
lock
xchg
xor
aad
les
imul
lahf
popf
inc
test
push
mov
and
sub
mov
test
packsswb
dec
in
popa
mov
jne
iret
push
dec
cli
lcall
jmp
or
mov
je
hlt
lds
jns
out
cmp
jne
and
push
cli
clc
loopne
pusha
add
cmpsb
fsub
fiadds
cmp
imul
outsb
jmp
lea
stos
in
jne
dec
pop
testb
mov
enter
jbe
pop
cmp
movsb
pop
sub
pop
push
out
pop
adc
add
test
jle
cmc
and
ds
dec
pop
in
xor
or
imul
xchg
mov
ds
aaa
lret
mov
lret
sub
pop
andl
cltd
mov
mov
jecxz
lods
faddl
cld
push
sti
addr16
inc
movsb
xchg
sti
leave
mov
stos
data16
and
xor
jl
adc
pop
mov
in
cltd
mov
iret
ret
or
add
pop
fwait
dec
fstl
jmp
push
sbb
dec
call
pop
sub
xchg
dec
aad
ljmp
cltd
xor
mov
rolb
xlat
sub
mov
add
test
xchg
repnz
iret
sahf
aaa
sti
sub
xchg
jno
mov
xchg
or
popf
add
dec
jbe
loopne
mov
lea
mov
add
push
iret
test
cltd
sub
push
nop
sub
hlt
xchg
jnp
sti
dec
fadds
mov
push
jecxz
inc
pop
js
jnp
loope
shl
xchg
xchg
insb
adc
out
fmull
repnz
das
add
inc
sbbl
mov
and
mov
ja
daa
mov
cltd
iret
sub
adc
and
fadds
xor
call
adc
or
xor
out
push
mov
push
fildll
imul
pop
pop
shll
testl
push
cmpsl
jle
push
cmpsb
out
xor
dec
sub
mov
loopne
data16
push
hlt
jge
addl
xor
int3
sub
test
add
in
mov
gs
fisubrs
popa
cmp
fcmovne
cmpsl
mov
jle
test
and
rorl
push
das
fldt
sub
mov
xchg
pop
mov
out
test
aas
fs
jnp
outsl
fldenv
mov
outsl
out
push
cmp
jnp
push
rol
ror
inc
cmpsb
outsb
addr16
pop
dec
and
aad
outsl
xchg
subl
xchg
jb
imul
mov
je
mov
cmp
lods
mov
push
cs
je
sbb
dec
in
out
addb
adc
mov
xor
push
add
pop
xchg
or
push
jecxz
dec
mov
mov
sti
lods
push
push
jb
jo
sub
out
cmpsb
mov
rolb
shl
lret
push
sti
test
mov
mov
push
jnp
xchg
outsl
imul
cli
mov
add
out
adc
scas
leave
mov
mov
ret
sub
stos
inc
dec
mov
jb
dec
cmp
inc
cltd
sar
or
popa
cld
andb
ja
mov
cltd
mov
jle
inc
xchg
insb
pop
sbb
icebp
mov
dec
xor
push
and
int
test
les
inc
ds
adc
cwtl
xchg
sub
rcll
push
push
xor
adc
cmp
or
popa
popf
adc
add
scas
pop
in
out
push
cmpsl
arpl
pop
movsb
xchg
mov
std
sbb
push
jbe
inc
sbb
pop
pop
aas
cmp
push
mov
jnp
mov
dec
call
inc
jno,pt
lock
movsl
mov
jbe
aas
push
pop
inc
sbb
scas
sub
scas
mov
pop
notb
mov
mov
movsb
into
add
jl
pmaxub
inc
popf
jl
aad
mov
inc
out
lret
test
in
mov
scas
cs
push
adc
incl
inc
inc
jbe
and
cld
jb
sub
jo
jg
or
xchg
mov
pop
inc
stc
aas
insl
in
in
es
dec
dec
jmp
add
push
push
fidivrs
mov
pushf
push
sub
nop
ljmp
fsub
inc
hlt
icebp
in
sub
xchg
mov
shr
lea
mov
cltd
cmp
sbb
int
inc
mov
gs
stos
and
ret
negl
sti
je
inc
push
mov
inc
pushf
adc
movb
xor
sub
sbb
aam
and
push
mov
pop
stc
in
mov
xchg
mov
cmpsl
adc
cmp
mov
dec
xchg
pop
cmp
inc
out
shlb
or
movl
mov
inc
sbb
fsubrs
sub
int
sbb
repz
sub
xchg
pop
loope
push
and
test
jne
mov
jae
fdivl
push
inc
stos
pop
mov
std
stos
insl
mov
mov
lahf
xchg
repz
xlat
push
pop
push
jno
aaa
repnz
pop
outsb
inc
filds
pop
movsb
jmp
mov
das
pop
xchg
popa
das
xchg
jp
mov
test
call
mov
xchg
int3
pushf
jmp
sbb
mov
mov
push
call
xor
xor
sbb
add
lock
push
jbe
xchg
jg
jns
stc
xorb
aad
xor
xor
cmpsb
bound
xor
outsb
data16
inc
dec
push
outsb
mov
push
gs
fwait
insb
lret
ret
inc
test
imul
jnp
outsl
pop
iret
mov
fisttpll
and
cmpsl
mov
cmp
je
orb
xor
jmp
mov
pop
outsl
cmpsl
popf
and
ror
lods
fs
mov
mov
jne
ja
inc
jbe
bnd
jmp
pop
jg
ja
inc
test
lret
repz
pop
in
subl
cmp
pop
lahf
subb
cmpb
icebp
push
jmp
mov
mov
sbb
movsb
clc
std
call
mov
xorl
xor
jne
lret
dec
test
jp
insb
mov
cmp
dec
and
mov
jecxz
fs
out
subb
mov
push
dec
adc
in
lods
add
inc
cmc
aad
lods
push
pusha
sub
enter
pop
jns
xor
xor
jns
xchg
int
out
test
outsb
outsb
sub
cli
leave
nop
imul
daa
sahf
int
outsl
hlt
aad
movsl
jnp
cmp
aam
jp
test
inc
das
lods
mov
jbe
rcr
es
push
pop
enter
sub
adc
jl
jl
mov
dec
rcr
push
mov
add
scas
jno
jg
and
les
pop
pop
mov
mov
mov
pop
mov
enter
popf
mov
inc
cwtl
sbb
das
cld
in
add
scas
in
xchg
jo
pop
mov
in
clc
aam
and
mov
test
or
gs
out
outsl
fmul
icebp
cmpl
enter
negb
hlt
scas
cmp
inc
cmpsb
mov
pop
mov
pop
out
sub
mov
jae
scas
dec
pop
fwait
pusha
in
dec
out
and
lods
neg
cs
test
sub
insb
dec
scas
loop
in
xchg
dec
xchg
gs
mov
pop
inc
es
fucom
jge
sbb
jmp
adc
mov
fnstsw
push
add
jp
xchg
jmp
push
imul
or
insb
call
add
and
pop
mov
or
or
mov
nop
and
loop
lcall
sbb
xor
mov
imul
mov
mulb
dec
mov
pop
shrb
or
xchg
outsl
fmull
popa
jle
push
mov
xchg
je
pop
stos
test
pop
xchg
test
adc
popf
cmpsl
mov
mov
nop
mov
push
inc
dec
rorb
jmp
rclb
jl
xorl
int
cli
clc
repnz
insb
daa
mov
fisubs
xchg
jnp
test
push
leave
push
push
das
addr16
add
jmp
fcomps
cmp
das
push
inc
add
leave
int3
jmp
inc
lods
cmp
adc
dec
outsl
pop
xor
cmp
les
push
jnp
inc
insl
aam
gs
adc
sub
mov
cli
or
es
ret
dec
pusha
mov
aaa
dec
and
outsb
aas
or
cmpsl
call
pop
icebp
mov
ja
lcall
adc
bound
xor
out
in
aaa
imul
xor
and
inc
test
xlat
sub
gs
sbb
cmp
mov
xchg
in
inc
mov
jns
xchg
fwait
std
test
or
inc
hlt
mov
stos
mov
and
repnz
and
mov
lret
in
jmp
add
movsl
lods
out
jmp
cmp
pop
jne
jle
insb
sub
fwait
xchg
mov
popa
popa
notl
push
push
push
test
test
sar
fistl
xlat
sti
aaa
inc
loopne
add
sbb
out
cltd
lret
pop
or
fcmove
stos
dec
push
jecxz
aaa
mov
imulb
test
in
mov
cmp
pop
cs
in
xchg
jge
lds
loopne
in
fcomps
les
jnp
nop
xor
rorl
mov
ljmp
push
aam
adc
jmp
addr16
out
rclb
addr16
dec
dec
outsl
insl
stc
nop
dec
jg
cmc
jno
fistpll
jnp
push
mov
adc
jbe
sub
jge
push
leave
push
scas
pop
repz
ror
inc
adc
inc
inc
mov
mov
mov
in
sub
scas
mov
jmp
mov
pusha
std
or
ret
xor
cmp
mov
push
xchg
aam
rcr
lret
inc
aad
les
cmp
call
aam
daa
popl
xchg
shrl
inc
pop
pop
xor
lret
xlat
mov
xchg
xor
into
mov
outsl
pop
push
inc
lods
dec
stos
inc
imul
inc
cmpsb
and
pop
inc
jmp
pop
and
xchg
or
dec
xchg
mov
push
aaa
or
dec
inc
bound
mov
aaa
pop
aad
sub
pop
inc
les
jns
out
shll
xchg
sub
adc
or
adc
test
inc
jo
bound
insl
repnz
adc
les
xchg
das
ficomps
test
sub
fmuls
stos
mul
lods
cld
cmpsl
mov
add
inc
pop
jbe
cmpsb
push
sbb
inc
ret
cmp
push
out
dec
mov
push
xchg
pop
into
int
mov
ss
int3
mov
int
lret
mov
lods
bound
jns
add
jmp
dec
adc
pop
push
sbb
pop
loope
inc
fistps
jne
pop
idivl
mov
js
rol
mov
rolb
repnz
sub
fdivrp
jmp
popa
jbe
push
push
loop
cmp
shll
andb
sub
cmp
dec
pop
xor
cli
mov
cmpsb
sub
lods
and
jecxz
ret
call
inc
sub
mul
xorl
mov
sub
cwtl
test
mov
push
pop
xor
orl
aas
pop
dec
xchg
mov
das
sbb
imul
ret
stos
lret
cwtl
insl
je
xor
xor
fimull
mov
cmp
outsb
ficoms
xorb
std
mov
add
pop
pop
dec
leave
in
outsb
fwait
or
mov
test
pop
shlb
fdivrs
icebp
subb
stos
jecxz
xchg
in
dec
jp
test
push
in
jo
out
sub
mov
xor
mov
xorl
jnp
mov
push
adc
mov
and
enter
adc
addr16
xor
sbb
jo
jmp
pushf
out
jl
addr16
xor
push
push
loope
xchg
push
and
push
or
sub
es
addr16
int3
dec
les
lret
sub
and
sub
sbb
rclb
lea
mov
add
cmp
dec
sub
das
popa
jle
movsb
xchg
mov
mov
push
movsl
stc
cmp
jnp
pop
call
scas
aaa
push
in
xor
xor
int3
pop
mov
dec
cli
inc
and
add
loop
dec
out
int
xchg
adc
cmp
push
inc
movsb
aaa
xor
repz
xchg
mov
rorb
out
arpl
mov
js
out
pop
js
movsl
push
in
xchg
jb
push
shrb
mov
or
xor
xlat
ja
cmp
jl
inc
pop
lock
test
cmp
enter
je
adc
mov
sbb
lahf
cmp
or
rorl
in
push
jmp
xchg
xor
mov
sub
jae
xor
push
daa
hlt
xchg
mov
out
cmp
or
daa
cli
inc
ret
push
cli
push
outsl
andb
add
mov
ficompl
lret
lcall
sbb
push
add
popf
xlat
fcomip
jns
jno
add
xor
lds
aaa
pop
add
xor
add
and
aad
bound
cmc
cli
ret
dec
pop
loopne
pushf
movsb
out
mov
cli
sub
cmp
sbb
popa
ljmp
repnz
daa
dec
pop
xchg
in
jbe
outsb
mov
ret
scas
les
or
lret
lods
mov
mov
jp
hlt
ds
shlb
aad
sbb
or
dec
mov
js
in
scas
test
js
scas
shlb
insl
mov
ret
repz
xchg
out
stos
push
pop
jp
pop
repz
mull
lods
int3
xchg
jo
lea
sbb
push
fcomps
fnstsw
or
inc
mov
cmp
fnstenv
push
mov
outsb
jle
cmp
jge
xor
test
ljmp
std
shlb
jno
mov
xor
mov
xor
pop
sahf
js
xor
popf
or
stos
insb
std
das
xor
fldt
imul
pop
mov
fs
xlat
popf
sbb
adc
xchg
cli
iret
aaa
inc
mov
and
push
imul
rcr
and
jp
mov
inc
jo
sub
inc
lret
std
lods
inc
mov
xor
sti
adc
js
enter
loop
xor
stos
push
xor
xor
sub
inc
sbb
inc
cmp
push
sbbl
jecxz
aas
jo
push
cmp
mov
xchg
fldcw
fists
cmpsb
loopne
jo
and
or
sub
movsb
mov
mov
xor
mov
pop
popf
mov
mov
je
repz
inc
iret
add
jecxz
gs
mov
inc
pusha
adc
mov
mov
or
and
sbb
push
outsb
jbe
dec
in
cmpsb
popf
test
sbb
sub
sub
leave
daa
icebp
pop
enter
or
sbb
cmp
mov
es
push
add
in
popf
and
jae
pop
xchg
in
add
iret
cmp
inc
xor
lea
mov
xor
xchg
sub
test
mov
mov
stc
push
jecxz
cmp
add
outsl
lret
jb
movsl
imul
xor
ret
push
xchg
xchg
push
jg
gs
pop
pop
or
decb
sub
add
stos
imul
rcll
cs
push
testl
rclb
mov
xchg
mov
xchg
pop
or
and
insl
aam
lods
sbb
movsb
cs
add
cmc
pop
mov
xchg
out
or
mov
dec
lods
xlat
sub
sub
xor
cmc
icebp
jp
inc
fstpl
mov
std
mov
pop
and
jecxz
ret
and
mov
sbb
stos
out
sub
mov
scas
das
push
mov
mov
push
mov
mov
pop
shlb
nop
pusha
popa
jmp
insb
imul
notl
fsubrs
dec
cltd
popa
rclb
loop
jp
lcall
inc
cmc
repz
push
icebp
dec
sub
pop
jne
pop
mov
inc
add
stos
and
pop
adc
icebp
mov
fmuls
in
sbb
pop
and
add
cmp
or
mov
mov
hlt
cmovl
out
mov
fiadds
loop
sub
pop
rcll
or
dec
add
sub
pop
cwtl
inc
into
fnstcw
cmp
ret
fiaddl
jecxz
mov
xorb
push
inc
or
dec
mov
dec
mov
jno
dec
stc
ds
pop
jns
in
mov
sub
js
xor
fld
xchg
out
int3
mov
adc
adc
xor
into
out
pop
jae
push
sbb
outsl
xchg
add
mov
sub
fildll
arpl
pop
mov
ror
jmp
adc
cwtl
mov
push
rorb
mov
push
loop
xor
cmp
jne
and
jbe
dec
movsl
add
int
add
movl
xlat
push
out
insl
xor
fstp
imul
or
out
or
aad
push
push
lods
and
loope
jbe
rcll
fisubs
xor
mov
das
inc
aad
sub
xchg
jge
cmp
popf
outsb
and
stc
or
inc
testb
or
pop
dec
and
fsub
mov
fimuls
cmpb
mov
xor
in
andl
mov
or
jbe
lods
bound
cld
adc
in
sbb
sub
dec
xor
mov
fwait
xor
out
jno
push
lret
adc
xorl
push
xchg
pushf
icebp
test
test
jge
call
fdiv
das
or
mov
out
fsubrs
xor
mov
out
sbb
add
dec
push
push
jns
add
arpl
add
cld
loope
add
gs
or
jecxz
data16
lret
xor
ss
add
xchg
dec
ljmp
test
cmp
jo
filds
add
push
daa
ja
add
mov
fdivr
lea
sub
shll
xor
ljmp
inc
pop
test
pop
jg
fidivrl
repnz
hlt
pop
scas
outsb
pop
sbb
les
jl
cmp
adc
mov
lret
cmpsl
jo
jbe
jmp
dec
mov
mov
call
js
xor
xchg
iret
pop
add
jmp
fistpll
mov
shl
jp
push
push
jp
cmp
sub
pop
inc
pop
in
out
sbbl
inc
cmp
xor
push
shrl
cmc
test
shlb
fninit
gs
and
test
movsb
jb
ror
jbe
sbb
and
xlat
sbb
xlat
ficomps
push
mov
pop
scas
xor
xchg
insb
cmp
push
inc
ljmp
popf
test
aad
fists
push
fbstp
mov
call
testl
sbb
push
leave
and
dec
mov
aaa
mov
repz
out
inc
shr
cmp
xchg
mov
int3
or
push
mov
xchg
bound
mov
xchg
jbe
mov
pop
subl
jle
lods
ret
push
add
out
inc
adc
or
daa
subl
jmp
push
fdivr
cwtl
ljmp
stos
jmp
mov
movsb
jno
movsb
dec
and
jge
std
cli
adc
mov
loope
fnstcw
xor
stos
aad
repz
inc
xor
jno
ja
jae
sub
add
xor
jbe
dec
dec
popf
adc
daa
mov
xor
fildll
lds
int
push
int3
mov
shl
adc
loop
out
aaa
mov
push
mov
nop
pushf
iret
xchg
cmpsl
xchg
addr16
or
lods
cmp
inc
ds
push
mov
and
lret
mov
inc
test
mov
lds
aaa
stos
test
in
shrb
sbb
pop
push
pop
sub
inc
iret
es
xchg
xchg
movsb
adc
fnop
xor
insb
imul
cmp
test
push
mov
stos
xchg
push
push
pop
mov
cmc
xor
movb
mov
lods
sub
push
xor
xchg
push
push
inc
cs
or
mov
sbb
add
imul
nop
add
cmp
stos
cmp
lods
sbb
push
dec
idivb
inc
mov
inc
outsl
cmp
jno
mov
sbb
cmpsb
cmp
jns
mov
das
cmpsl
jno
int3
inc
or
mov
cmpsb
push
shlb
adc
data16
mov
mov
push
or
push
jle
and
push
pop
out
add
cwtl
jmp
mov
stc
es
xchg
push
les
mov
pop
cltd
adc
cli
cwtl
mov
fldenv
and
stos
cmc
mov
jo
out
mov
divl
movsb
stc
cli
mov
mov
sti
adc
js
xchg
arpl
repnz
mov
xchg
jl
push
mov
mov
xor
incl
inc
dec
cwtl
push
mov
popa
xchg
adcb
popa
push
xchg
dec
mov
into
in
pushf
dec
pop
cmc
jge
sub
xchg
dec
mov
decb
pop
adc
dec
dec
cmpl
repz
pop
jnp
insl
dec
mov
test
xchg
rcr
xchg
mov
movl
or
pop
cmpsl
std
into
test
icebp
mov
mov
fimuls
jne
and
test
sub
mov
mov
sbb
dec
jmp
sub
mov
lcall
addr16
and
mov
cmpsl
daa
dec
leave
std
cmpsl
cmpsb
inc
shlb
adc
outsw
loop
mov
out
and
test
rolb
pop
jge
mov
lahf
test
addr16
adc
imul
inc
fimull
mov
inc
push
cmpsl
ds
and
pop
adc
mov
push
jns
mov
inc
cld
aaa
subb
or
dec
std
mov
jge
xorl
xchg
jnp
and
mul
jmp
push
jbe
aaa
add
imul
xchg
fucom
pop
aas
add
stc
mov
sbb
jmp
sbb
add
les
popf
inc
sbb
es
js
cmp
gs
test
outsw
rolb
xchg
das
add
imul
stc
sub
cmc
sub
out
jb
sbb
add
repnz
sub
push
pop
mov
out
les
ret
adc
repnz
or
xchg
cmp
es
sar
fwait
iret
mov
jl
js
jle
mov
iret
mov
jg
dec
sub
ret
push
xor
test
and
xor
mov
xchg
arpl
dec
outsl
jo
test
les
jecxz
mov
mov
mov
leave
movsl
adc
hlt
dec
lcall
scas
aaa
jle
xchg
popa
mov
fs
push
dec
std
mov
jnp
shl
push
outsb
mov
xor
xchg
pop
mov
jle
ss
lods
sbb
mov
jno
insb
inc
or
xchg
cmp
mov
pop
push
xchg
mov
mov
mov
jne
mov
xchg
shlb
add
popa
inc
xchg
roll
insb
xor
std
or
inc
cmp
jae
inc
push
pop
cwtl
push
jb
push
push
pusha
and
inc
cmc
and
xor
push
out
add
cmp
outsl
add
xor
out
mov
xchg
jae
inc
or
decb
aad
test
into
in
pop
xchg
ljmp
aam
ss
mov
pop
jmp
in
mov
jg
cmp
and
shlb
inc
ret
scas
dec
repnz
adc
xor
dec
inc
pop
nop
mov
xchg
mov
sbb
stos
sbb
daa
xor
stc
test
adc
or
and
mov
jne
test
xlat
leave
xlat
mov
shlb
mov
mov
hlt
rolb
pop
imul
add
jae
xor
ret
ss
iret
xchg
cmp
mov
xor
sbb
xchg
ret
stos
icebp
inc
rcrb
cmp
dec
ds
popf
mov
jg
pmaxub
inc
push
xor
fiadds
or
sub
ljmp
adc
jno
inc
scas
xchg
or
ret
inc
sahf
rcll
mov
ret
push
dec
add
inc
subb
and
fdivs
pop
shll
pop
adc
jmp
andb
inc
dec
ret
xchg
fsubrl
adc
fs
das
adc
mov
inc
loop
and
add
xchg
xlat
lahf
xchg
xorb
leave
fldcw
idivb
ret
mov
into
fildl
pop
mov
inc
ror
jg
jge
data16
iret
add
repnz
adc
mov
cmp
nop
cwtl
inc
icebp
or
mov
loopne
insb
sbb
insb
shl
adc
bound
sbb
and
cmpb
jl,pt
jge
sbb
in
push
rolb
add
arpl
and
jns
inc
leave
lods
int
insl
mov
push
andl
fstpt
mov
pop
and
add
std
std
adc
repnz
cld
jle
in
add
jl
adc
cmp
adc
dec
jg
js
mov
dec
pop
sub
ds
daa
xchg
and
ret
data16
cli
push
inc
repnz
jp
loope
push
insb
int
adc
or
push
hlt
rorb
int
cmp
test
mov
loop
or
add
aam
int
icebp
lock
dec
push
and
lret
aam
or
lahf
and
xor
pop
div
mov
outsl
xor
dec
lea
rcrl
xor
out
data16
mov
daa
add
orb
push
in
fwait
loopne
icebp
mov
jns
test
in
loope
test
vpmaxsw
add
stos
jmp
gs
xchg
xchg
jno
arpl
lea
clc
jp
call
adc
cwtl
out
jl
push
cwtl
jge
sub
mov
jo
dec
cmp
inc
jo
adc
push
and
lea
cli
push
mov
xchg
int3
ja
sar
js
adc
pop
clc
cmp
pop
jne
fisubs
mov
int
bound
push
int
cmp
xchg
mov
xchg
ror
pop
push
cltd
adc
gs
jmp
ds
push
dec
sti
out
jne
sbb
mov
and
xchg
fstpl
push
pop
cmpsb
lcall
inc
in
xchg
mov
add
xor
dec
jp
mov
out
pop
rcrb
mov
jbe
mov
xor
stos
dec
addb
or
pusha
out
movsb
cmp
adc
sahf
inc
pop
hlt
cmovb
add
xlat
or
adc
mov
enter
gs
jns
leave
cmp
xchg
mov
sbb
out
push
testl
xor
add
adc
dec
in
fnstenv
mov
orb
sti
or
testl
clc
xchg
xor
mov
roll
pop
sub
sbb
repz
repnz
inc
in
sbb
xor
fsubr
mov
and
xlat
xchg
ret
fcompl
jge
cwtl
dec
sbb
xorb
lods
dec
push
arpl
xor
lcall
cmp
push
cmp
push
mov
enter
jp
clc
cmpsl
dec
inc
out
adc
dec
fdivs
jnp
add
pop
xchg
in
nop
bsf
jb
adc
out
sbb
out
xor
push
push
shrb
jnp
scas
in
xchg
xchg
pushl
aam
add
mov
lea
and
fisttpll
jo
and
sbb
jae
stos
push
pop
xlat
jo
mov
push
jb
xor
and
outsb
xchg
aam
push
mov
dec
in
xor
xor
fidivl
inc
inc
push
aaa
stos
push
sbb
dec
in
mov
inc
dec
fistl
rcr
sti
pusha
mov
cmp
xchg
and
clc
stos
mov
sub
cli
bound
dec
daa
sub
jae
insl
je
push
clc
push
or
sarb
xor
xor
imul
mov
in
pop
int3
push
dec
cmp
aaa
sbb
outsb
ret
out
inc
xchg
push
subb
inc
outsb
inc
pop
mov
xchg
les
ds
and
orb
divb
mov
jae
and
jmp
fsts
repnz
xchg
adc
fcomi
loope
imul
jmp
push
mov
je
push
jo
js
jl
xor
test
push
jne
loop
push
arpl
push
and
cmp
cmc
jnp
in
loope
in
cmpsl
add
or
push
push
imul
outsb
xchg
out
inc
imul
in
add
push
mov
shlb
ficoml
sahf
ds
iret
sbb
mov
sub
mov
into
mov
lock
sub
outsl
inc
cmp
add
ja
sbb
cmpsb
sbb
mov
xor
fistps
cmp
add
dec
mov
pop
or
fsubrl
imul
xor
add
or
daa
rclb
sbb
xchg
push
push
xchg
stc
sbb
stc
mov
popa
hlt
xor
dec
xchg
xchg
fsubrp
addr16
xchg
xor
mov
clc
jno
cmc
push
divb
jle
lcall
xchg
mov
mov
neg
or
out
nop
lds
addr16
adc
xor
lret
sbb
push
push
inc
outsb
cmp
out
in
rorb
push
mov
push
ror
sub
into
jns
sbb
sub
test
andb
jbe
add
out
out
jnp
jl
inc
jmp
in
pop
repz
adc
adc
mov
and
inc
push
inc
xorb
mov
mov
inc
sub
jle
sub
jge
sbb
dec
mov
fidivrl
dec
cld
and
or
subb
pop
clc
mov
mov
pop
out
popa
enter
or
jno
shrl
aam
xchg
scas
sbb
pusha
sub
mov
push
sarl
jle
mov
out
sbb
sbb
mov
pop
cmp
or
arpl
and
cmp
jo
jnp
sub
hlt
icebp
popf
cmp
or
cmpsl
sbb
mov
popa
xchg
ja
pop
jge
nop
pop
jmp
pushf
and
lahf
cltd
sbb
xlat
dec
jo
dec
push
dec
and
leave
jl
scas
jns
push
shl
jmp
mov
cld
fstpl
adc
mov
ror
addl
out
bound
stc
lcall
push
in
lock
add
mov
mov
std
mov
in
bound
dec
and
jle
mov
ja
and
hlt
test
inc
sti
into
and
cld
fidivrs
es
add
dec
cmp
sbb
out
pop
jge
xchg
and
lahf
push
stc
adc
push
xor
in
jg
fcmovne
ds
int3
or
fldcw
xlat
jmp
outsl
pop
jno
stos
dec
add
cmp
bound
mov
mov
add
lcall
loope
shrl
add
jne
imul
shrl
mov
sub
push
push
and
nop
repz
mov
and
pop
and
push
mov
mov
push
mov
cld
movsl
std
mov
cmpsb
movsb
fisubrs
jp
stc
repnz
sbb
leave
pop
add
fdivrp
aad
mov
push
jne
mov
push
imul
clc
popa
dec
mov
add
loopne
mov
adc
pusha
dec
cmp
jae
pop
mov
mov
out
gs
leave
cli
test
add
andl
lcall
fs
rorl
lcall
and
gs
fcomps
cmp
jo
pop
pushf
adc
inc
popf
es
inc
push
pop
fwait
mov
push
cmp
rorl
push
add
or
sti
sub
int
and
outsl
or
mov
xchg
or
and
mov
popa
dec
push
bound
pop
or
ss
or
or
sub
sti
adcb
push
int
fidivl
data16
pop
inc
mov
sub
sub
xchg
jbe
dec
push
sub
dec
dec
mov
jne
adc
adc
fwait
leave
mov
jg
roll
int3
movsb
int
fcmovnbe
xchg
mov
push
fisubl
ljmp
jno
add
inc
ds
std
cmpsb
mov
pop
jg
add
sub
test
inc
dec
hlt
clc
sub
pushf
mov
push
xchg
mov
out
push
ss
inc
mov
push
in
mov
sbb
cwtl
inc
inc
push
dec
push
stos
lds
adc
mov
sahf
in
cmc
adc
out
push
lods
adc
and
mov
int
lock
mov
or
sbb
aas
scas
and
rcll
add
push
mov
mov
adcl
icebp
test
mov
fwait
dec
mov
push
std
lods
shll
test
dec
std
add
cli
gs
int
lock
stos
push
xchg
jns
or
mov
aam
mov
xorb
or
decl
insb
sbb
ja
fwait
std
mov
sbb
aam
jecxz
fmulp
xor
push
lock
outsb
push
push
inc
arpl
out
std
push
sbb
mov
mov
rcr
or
sbb
jns
clc
dec
pop
imul
call
pop
and
fs
out
and
dec
sub
out
leave
add
out
fisttpll
ret
test
or
insb
mov
and
lret
inc
push
cmp
push
ret
add
add
mov
pop
loope
xor
bound
lods
lcall
in
lods
jo
bound
stos
pop
xchg
jno
jo
lret
push
leave
repz
push
fchs
jge
push
xor
in
in
xchg
ja
cltd
in
dec
imul
push
add
lcall
imul
inc
in
in
popf
pop
mov
add
rcrl
sbb
leave
lahf
push
sbb
iret
in
in
sahf
test
dec
pop
cmp
inc
shll
out
mov
pop
shrl
pop
sbb
pop
xor
jecxz
mov
inc
lcall
dec
les
dec
inc
stos
int3
jne
imul
cltd
test
pop
gs
add
xchg
adc
push
push
sbb
data16
add
push
xor
sub
pusha
inc
pop
adc
in
or
nop
in
inc
cltd
rclb
mov
shl
jl
mov
ret
pop
inc
jno
pop
mov
adc
out
outsl
bound
add
cli
xor
mov
adc
out
adc
dec
test
aad
fbld
dec
setb
hlt
je
fmuls
cmpsb
xor
loope
in
cmp
push
mov
cmp
mov
mov
rorl
cmp
and
js
add
pop
popa
jbe
sub
test
cmp
lcall
into
out
push
dec
hlt
inc
dec
inc
stos
data16
and
adc
outsl
cwtl
jmp
dec
in
fstps
daa
insb
sbb
sbb
shl
add
das
lcall
ret
inc
jmp
fmul
dec
adcl
jle
dec
or
sbb
lea
fadds
loop
call
inc
repnz
fcomps
dec
lret
fdiv
fcompl
shll
mov
lret
cmp
sbb
push
shr
and
fildl
scas
ficoml
in
arpl
scas
pop
nop
inc
pop
insl
inc
cltd
movsl
cmpsl
incl
dec
int
xor
addb
adc
add
icebp
and
nop
xchg
push
test
dec
or
xchg
jp
mov
imul
sbb
sbb
push
ds
jg
jle
mov
push
jbe
icebp
and
xchg
jl
cmpsb
push
sbb
mov
or
and
mov
sbb
stos
outsb
push
or
fiaddl
and
or
or
fldenv
jmp
or
rclb
push
sub
xchg
inc
rclb
sub
jnp
mov
mov
rolb
out
cli
addr16
in
cmc
pop
aaa
pop
jne
lret
daa
aaa
adc
iret
xchg
mov
push
stc
pop
dec
cltd
pop
mov
push
mov
stos
sbb
lcall
les
fcmovnb
jno
stc
dec
enter
das
rclb
pop
sbb
and
sub
xlat
cli
mov
mov
pushf
and
push
sub
popa
fsubs
mov
and
sbb
out
inc
insb
dec
xor
aam
outsb
or
mul
jge
dec
pop
jmp
xor
aad
sbb
sahf
mov
pushf
lret
leave
dec
push
or
xor
xchg
sub
cmpsb
cmc
push
xchg
push
call
fldl
imull
jnp
push
repz
out
xor
push
sti
push
popf
pop
mov
push
mov
movsl
popa
fst
std
jnp
xchg
pusha
cltd
mov
sar
je
js
cmp
or
sti
pop
dec
mov
scas
je
pop
mov
int3
scas
push
lds
stos
adc
in
xor
dec
inc
jno
dec
add
xchg
fwait
fwait
mov
test
xor
daa
insb
cwtl
xchg
daa
icebp
jecxz
add
lea
icebp
out
mov
xor
mov
sbb
add
xlat
add
jae
mov
out
nop
mov
fisubrs
fwait
adc
clc
bound
sbb
mov
pop
outsl
scas
mov
fwait
sub
push
or
adc
or
sub
adc
icebp
test
lods
data16
fsubs
shrb
cmpsl
in
rcrb
mov
sbb
sarb
cmp
xchg
cmc
jmp
sub
loope
or
or
mov
mov
dec
divl
push
inc
shrl
dec
cwtl
lock
push
sub
daa
cmp
adc
popa
mov
loope
ror
pop
mov
icebp
cmp
daa
mov
nop
or
mov
xchg
inc
xchg
xor
push
adc
ja
lock
cmpsb
cmp
jle
repnz
adcb
outsb
rorb
add
or
xchg
inc
test
mov
add
and
or
loope
rcll
jo
movsl
or
adc
or
inc
push
ja
mov
and
test
xchg
jge
and
aam
mov
add
out
inc
cmp
cmpsb
jl
push
lret
dec
jge,pt
loop
adc
shll
push
sub
dec
sbb
mov
fldt
jecxz
jno
xchg
mov
les
imul
lds
fbld
into
mov
add
hlt
addr16
cmp
daa
imul
push
mov
insb
arpl
mov
cltd
dec
add
jge
pop
push
inc
gs
mov
popa
bound
pop
add
dec
aad
pop
pop
inc
cmp
mov
and
std
jmp
jno
cmpsl
xor
sbb
out
sub
inc
inc
loope
inc
out
jp
nop
mov
sub
movsl
sbb
sbb
and
cli
dec
mov
mov
or
sub
mov
stc
inc
mov
into
xchg
adc
mov
gs
mov
repnz
pushf
add
movsl
out
scas
mov
and
and
std
mov
xor
mov
inc
mov
dec
xchg
and
sahf
movsb
adc
dec
out
sbb
out
loope
imul
sbb
mov
cmp
sbb
sahf
sub
jae
out
xor
mov
mov
adc
mov
imul
sahf
adc
add
pusha
mov
repz
push
xchg
stc
sti
cli
call
and
pop
loopne
jno
jae
pop
fldl
hlt
sbbl
add
push
std
daa
repnz
lock
or
stos
cmp
cmp
sub
fildll
xor
push
mov
sub
in
xchg
xlat
jmp
xlat
imul
add
test
pop
mov
ret
insb
inc
mov
or
mov
cmp
sarl
and
lods
int3
dec
ljmp
xchg
or
cmp
jne
lret
ljmp
pop
outsl
aas
cld
xchg
push
pop
mov
add
or
ja
fs
mov
xchg
pop
mov
and
or
jmp
test
pop
lahf
in
and
arpl
cld
jl
pop
cli
cmp
mov
in
jmp
out
decb
push
hlt
xor
push
ret
scas
aaa
sbb
and
popl
icebp
lock
inc
lods
mov
jmp
inc
jg
or
and
cmp
mov
add
test
clc
ds
mov
mov
lods
adc
loope
dec
sub
sbb
jl
cld
pusha
mov
push
and
inc
addl
cld
loope
cli
jae
shld
fwait
fldcw
inc
addr16
fbld
push
leave
dec
jns
or
loope
add
and
jecxz
test
adc
xor
inc
cmp
xchg
rdtsc
fs
jo
ret
mov
iret
fidivrl
jo
out
lret
pop
orb
leave
dec
loope
int3
jmp
inc
pushf
icebp
sbb
lea
mov
dec
daa
inc
or
out
lcall
sub
xor
stc
adc
clc
and
shrl
cld
aam
addr16
dec
add
lcall
shll
or
idivl
sub
xchg
nop
xor
aas
lahf
pop
cltd
lods
inc
mov
jo
adc
push
pop
movsl
mov
movsb
out
nop
std
pop
out
clc
ret
jecxz
into
jb
sbb
mov
jmp
cmp
or
add
data16
sbb
lret
dec
cmpsb
mov
test
pop
shlb
sbb
adc
sahf
scas
lret
cmp
out
inc
ja
loop
dec
mov
aad
rolb
lret
data16
mov
jb
sbb
loop
lds
push
vmwrite
push
jle
scas
jno
cmp
sti
push
xchg
dec
scas
hlt
xor
xor
lea
loope
jge
adc
adc
ss
add
jae
ljmp
add
aam
popf
loop
mov
mov
lret
cmp
pop
stos
pop
mov
popa
ret
pop
outsb
lahf
adc
push
push
dec
jge
sub
xchg
inc
xor
test
in
mov
pop
and
xor
popf
outsl
cmp
subb
pop
mov
pop
inc
insl
inc
dec
mov
add
xchg
int
movl
es
std
lcall
jnp
pop
mov
shlb
out
and
shr
aad
mov
outsl
mov
pop
mov
mov
pushw
js
or
dec
cs
orb
or
into
xor
adc
pop
out
push
sub
popf
fsubs
daa
xchg
jae
mov
cmp
push
in
imul
iret
adc
test
and
mov
adc
jo
lds
stos
mov
jne
inc
dec
jge
ja
jmp
sub
push
pop
mov
repz
lcall
inc
push
mov
mov
cmp
adc
int
scas
arpl
sbb
mov
sahf
shl
lret
arpl
pop
int3
or
insl
aad
sarl
div
xchg
adc
test
lods
xchg
add
sti
sbb
cli
imul
pop
xchg
add
neg
iret
inc
cmc
push
mov
mov
dec
jnp
pop
aaa
rcrb
test
add
test
lcall
add
mov
fnsave
jno
stc
cmc
cltd
cmp
add
es
mov
mov
sahf
cmp
insl
pop
imul
pop
jo
cmp
and
xlat
mov
fsubrl
in
insb
lret
sbb
fistpl
xchg
daa
xor
test
test
les
sub
addr16
mov
sbb
shrb
adc
mov
popf
lret
adc
or
idivb
and
cmp
cmp
cmc
dec
adc
jb
jmp
loopne
sub
in
das
pop
mov
adc
clc
cli
pop
dec
mov
or
inc
ret
fbld
orb
jp
les
pop
pop
jbe
inc
pop
mov
fdivs
push
adc
dec
push
icebp
xchg
jmp
pop
inc
mov
jae
dec
cs
xchg
xchg
std
jle
cltd
fisttpl
mov
mov
scas
cmpsb
insl
dec
fsubrl
sub
mov
add
addr16
xchg
pop
mov
hlt
outsl
and
cmp
mov
jo
loope
sbb
sti
out
into
cmp
xchg
jae
pop
cmpsl
inc
mov
sbb
js
and
sub
dec
inc
test
fistpll
sbb
add
fcmovne
js
mov
pop
popf
repz
lahf
dec
out
push
dec
mov
mov
adc
gs
cmpsb
mov
loope
bound
push
xchg
call
clc
adc
fists
les
stos
inc
pushf
pop
sub
lcall
inc
lret
sahf
sub
daa
xor
push
or
dec
lock
sub
cmp
xchg
add
lret
stc
or
or
lahf
jp
push
pusha
mov
stc
jns
ret
mov
pop
sbb
stos
pop
int
xchg
lcall
add
mov
popw
xchg
jb
inc
mov
aam
add
stc
jbe
cmp
fmull
ror
mov
addb
sahf
push
xchg
jmp
jg
mov
mov
add
pop
ror
xorb
adc
popf
iret
cmp
dec
sti
push
lret
sbb
lret
adc
negb
loope
cmp
jl
pop
lds
sub
adc
mov
dec
mul
sbb
dec
repnz
pop
inc
jp
jmp
dec
clc
ds
fnstenv
das
xchg
pop
cmpsb
fstps
or
mov
pop
aam
push
ret
sbb
push
sub
int3
mov
rorb
aaa
mov
add
mov
xlat
jo
mov
inc
xor
mul
sarl
fnstsw
jp
ficoms
and
cli
adc
dec
xor
lcall
inc
xor
lret
loope
xor
inc
ja
xor
dec
outsb
mov
add
cmp
andb
andb
pop
jae
cmp
pop
sbb
pop
insb
arpl
mov
push
pop
lret
xor
push
lcall
int3
push
fistl
aaa
loopne
fldt
test
xor
fadds
sbb
mov
push
fnstcw
inc
and
cmp
sbb
je
xchg
jecxz
lret
aaa
xor
inc
in
mov
cld
cmp
lret
pushf
enter
jno,pt
push
push
pop
push
js
pop
push
mov
aad
dec
insb
push
aaa
fdiv
push
iret
cld
jnp
loopne
insb
stos
ja
lods
js
mov
mov
shlb
icebp
sub
jno
outsl
xor
mov
cs
out
and
dec
movsl
loop
sbb
sbb
ljmp
fprem
mov
add
movsb
jne
sub
inc
mov
pop
mov
push
xor
push
loop
aad
sub
sub
mov
mov
into
sti
or
mov
cmp
dec
lcall
fcmovnu
fstpl
ficoml
inc
fsubrl
addl
xor
cmc
mov
mov
addb
sti
outsl
rcrb
ja
and
aaa
mov
fcoms
jnp
daa
and
into
jnp
iret
jp
cli
repz
cli
stos
cmpsb
out
jo
test
adc
outsl
xchg
add
xchg
push
mov
push
jmp
jg
movsb
pop
pop
das
lea
cltd
cmpsl
lods
jnp
push
mov
mov
icebp
fisttps
or
lcall
xor
ret
ss
sarl
add
sub
mov
mov
inc
fidivs
or
cwtl
xchg
and
call
cmp
sbb
into
push
adc
or
aaa
inc
jle
sub
and
movsw
clc
daa
sub
dec
pop
movsl
mulb
ds
sub
call
add
in
mov
push
scas
std
es
push
mov
leave
lds
xor
sbb
hlt
inc
out
pop
and
int
lods
pop
sbb
push
push
stc
adc
mov
and
and
lret
imul
test
call
and
sub
push
shlb
les
test
xchg
call
add
inc
imul
mov
sub
or
cmp
xchg
mov
decl
mov
dec
or
cmp
cmpsb
pop
mov
cmp
jno
jmp
xor
js
std
cltd
cmp
jle
nop
movsl
nop
adcl
rcr
lret
ljmp
clc
lods
insb
pop
es
sbb
shl
icebp
ja
jb
xor
push
and
dec
aam
out
dec
jo
mov
jb
gs
sub
in
jno
popa
adc
adc
mov
mov
pop
nop
xchg
pop
add
loope
fsubrs
test
fsub
sahf
lock
or
pop
push
pushf
jg
inc
pslld
nop
push
ficoml
xlat
push
outsl
lock
inc
dec
divb
xor
jno
sub
jecxz
ja
cmp
lcall
jbe
lock
iret
lods
outsb
pop
mov
into
popa
repz
xchg
out
call
lock
pop
mov
cltd
jg
scas
dec
jns
dec
jne
mov
jp
jne
addl
fcoms
fdivs
insb
lods
notb
addr16
cltd
dec
push
push
pop
pop
gs
or
lea
cmp
sbb
sub
mov
sub
loop
push
jb
scas
stos
addb
je
pop
gs
mov
cmp
lods
roll
movsl
movsb
ret
stc
pop
sub
pop
int3
ret
and
cmp
or
push
mov
inc
into
aam
mov
lret
bound
sub
fstl
ret
mov
dec
mov
insb
pop
sbb
or
jecxz
outsb
lret
inc
push
inc
movsl
dec
adc
jnp
or
ja
in
cli
ss
mov
sub
nop
push
sbbw
scas
les
arpl
es
pop
mov
sbb
stc
daa
or
cmpsb
inc
addl
add
cltd
call
or
sahf
in
push
mov
or
lods
and
fisttpl
jns
mov
pushl
dec
cld
cli
pop
stos
clc
fndisi(8087
sub
xor
pop
cwtl
push
fldcw
inc
insb
int3
pop
enter
fwait
mov
fsts
cld
stos
data16
mov
std
pop
fucomp
imul
lcall
and
push
cmp
dec
xchg
mov
aas
pushl
pushf
cli
daa
mov
mov
call
pusha
jno
dec
aaa
xor
push
sub
imul
dec
pushf
les
xor
mov
jne
rcrb
inc
leave
popa
or
cmc
fsub
xchg
jg
push
and
add
loope
push
inc
xor
mov
aad
adc
mov
jmp
jle
les
add
in
dec
pop
mov
cltd
js
aaa
lret
xor
mov
enter
xor
pusha
xchg
dec
gs
inc
fmul
jmp
xchg
icebp
cmp
addr16
pop
movsb
inc
xchg
insb
lcall
push
out
xor
adc
or
loop
in
push
repz
sub
aas
push
lret
and
and
and
and
sbb
repz
push
ficoms
rorl
sti
add
outsb
icebp
jnp
push
sub
mov
jp
mov
push
repz
arpl
push
inc
mov
aam
divl
mov
xchg
or
in
or
inc
ds
inc
cmpsb
mov
scas
es
sti
subb
push
jge
xchg
jbe
int3
loope
ljmp
push
gs
and
xchg
add
or
push
pop
or
mov
icebp
mov
rcrb
sbb
lcall
jns
and
jge
in
sub
and
sbb
push
mov
rcrb
sahf
cltd
xchg
fnstsw
push
sub
mov
ljmp
sti
jmp
div
pop
iret
mov
inc
aaa
jno
movsb
fdivrs
xchg
jmp
push
xchg
xchg
and
xchg
pop
mov
sarb
dec
pop
scas
ds
js
push
or
subb
mov
jg
mov
jge
mov
aad
outsl
stos
dec
test
or
out
mov
sbb
dec
test
pop
or
divl
fsub
dec
test
cltd
ds
cmp
sbb
xchg
repnz
jecxz
fcmovbe
cwtl
push
fsubl
and
sahf
push
cmp
dec
hlt
mov
and
cs
dec
bound
pushf
push
aad
push
popf
lea
outsl
xchg
sub
mov
int3
lods
mov
mul
lret
add
xchg
or
cmp
insb
pop
push
lcall
ficomps
jle
in
aad
xlat
movsl
jl
in
xchg
aas
add
cld
or
bound
push
ljmp
add
test
or
pushf
lret
shl
cltd
xchg
mov
sbbb
les
call
cmpsb
repnz
xor
and
push
or
inc
jl
pop
push
out
adc
push
cmp
idiv
sub
jb
xchg
inc
ficoms
push
fidivs
fisubs
jnp
sub
imul
pop
loopne
enter
dec
out
mov
subl
loop
fistps
mov
dec
out
aam
lcall
add
ja
shlb
xlat
add
add
pop
shll
dec
cmp
cld
sbb
leave
xchg
adc
fstp
xorb
jnp
dec
out
dec
lods
dec
adc
mov
mov
testb
outsl
push
insb
stc
cmc
test
mov
jnp
popa
gs
inc
or
pop
decb
add
ret
in
or
inc
mov
xchg
adc
in
sahf
nop
inc
adc
mov
sbb
or
mov
mov
mov
add
data16
cmp
outsl
loopne
lret
mov
mov
scas
xor
cmp
adc
mov
pop
adc
out
jge
mov
insb
mov
pop
test
jmp
test
mov
push
loopne
xor
sar
push
and
push
dec
xor
lods
dec
les
mov
jmp
lret
jle
push
out
testb
push
outsb
mov
nop
xchg
es
cmpsl
call
repz
subl
push
or
push
sbb
mov
xor
aam
jno
insl
lods
lods
mov
pop
shrb
clc
imull
daa
loopne
xchg
scas
inc
adc
push
mov
inc
push
inc
sub
mov
jns
out
jecxz
aam
mov
pop
cmp
mov
fwait
movsl
cs
data16
mov
inc
add
leave
inc
gs
jbe
mov
jl
inc
insl
and
int3
dec
insb
xor
loope
test
xor
jge
jmp
fsts
pop
cmc
ret
xchg
sub
mov
push
cmc
pop
adc
decb
xor
jnp
movsb
cmp
or
out
jb
jle
pop
aad
adc
jmp
ss
and
lret
mov
cmp
ret
fnclex
add
jle
aad
lock
mov
and
inc
inc
shlb
dec
arpl
repz
xor
sub
stc
les
cltd
lds
mov
cli
jbe
insl
push
inc
outsb
sbb
mov
or
out
xor
call
ret
xchg
xchg
adc
push
daa
pop
cmpsb
shl
mov
jle
fdivs
xchg
push
lret
addr16
filds
pop
pop
ljmp
out
and
push
inc
xchg
fs
xlat
or
scas
push
fdivp
imul
xor
push
lock
mov
sbb
inc
xor
add
cld
sbbb
add
pop
addb
sbb
inc
mov
mov
pop
xchg
pop
cmp
outsb
or
jae
dec
icebp
xor
mov
xchg
mov
xchg
jecxz
mov
test
ja
inc
push
cwtl
ds
xor
cmp
sbb
dec
arpl
cmpsl
cmp
pop
dec
push
in
loope
pop
lret
scas
cltd
arpl
mov
insl
loop
xor
dec
and
loop
gs
xchg
adc
vsqrtss
mov
das
sbb
dec
pop
int3
and
into
push
std
mov
inc
rorl
jecxz
jle
pop
ss
int3
mov
mov
pushf
sub
stos
sub
fwait
sbb
adc
xor
insl
sarl
push
push
add
lds
out
mull
dec
add
push
loopne
faddp
adcb
popa
sarb
je
or
jp
arpl
pop
lds
bound
leave
in
shll
add
fidivrl
inc
pop
cwtl
clc
scas
in
add
mov
pop
lock
test
jnp
inc
push
dec
xorl
cli
lods
mov
mov
scas
iret
push
cltd
mov
dec
out
movsl
mov
call
cld
xor
lret
out
adcl
enter
repz
or
jnp
add
pop
jnp
cmc
lods
pop
popa
cs
pop
or
dec
push
aaa
mov
and
movl
xchg
inc
or
lahf
xor
std
scas
insb
pop
insl
pop
ret
movsb
adcb
mov
mov
inc
fsubs
mov
rclb
or
dec
dec
push
or
pop
arpl
fdivl
pusha
fwait
ret
jbe
testl
lea
push
adc
repnz
push
xchg
call
clc
out
push
jge
imul
add
arpl
mov
dec
push
xor
jge
push
lds
aad
aam
pop
add
rcrb
movsb
pop
notb
add
mov
aas
mov
out
pusha
pop
xor
push
push
xchg
sbb
mov
adc
scas
mov
mov
mov
lods
fstpl
sub
pushl
mov
int
xchg
in
dec
leave
cmp
sbb
fwait
int
sbb
adc
dec
movsl
sbb
scas
or
fstps
lea
call
ds
int
insl
add
fdivrp
fnsave
or
pop
sub
inc
pop
test
push
loop
aam
loopne
sarb
gs
gs
mov
xorl
lcall
enter
rcll
mov
push
xchg
xorl
fsubrl
aam
popa
fnsave
pop
cmp
mov
enter
pop
xchg
sbb
add
mov
addr16
xor
arpl
test
jns
pop
imul
pop
or
movsb
mov
push
in
cmpsl
cmpsb
jno
or
jmp
push
xchg
push
lds
idiv
mov
push
test
ror
mov
mov
lahf
add
shlb
fisttps
adc
in
push
cmpsb
insb
jbe
jecxz
or
jecxz
xor
adc
lds
jnp
jg
das
pop
sbb
or
add
icebp
push
js
in
and
cmp
rol
add
sbb
dec
scas
rorl
dec
fildll
dec
loop
mov
les
lret
xor
in
cli
xor
or
lahf
or
cmp
cmc
pop
pop
leave
jge
mov
inc
int3
sbb
and
movsb
outsb
mov
pop
push
fsubl
cmp
push
sub
std
jp
adc
lods
aam
hlt
fmuls
mov
test
or
icebp
mov
adc
fidivrl
lret
mov
ret
aam
jo
roll
aas
fwait
es
hlt
xchg
rorb
inc
cli
bound
shlb
push
std
adc
loopne
cs
mov
mov
cmc
movsb
negl
dec
test
jns
inc
cmp
adc
jns
lods
fistl
scas
frstor
jno
jge
icebp
orb
mov
jo
and
push
mov
dec
insl
rcrb
cmpsl
dec
loop
add
into
cmp
js
fwait
in
sub
jle
jno
add
mov
std
loopne
idivl
mov
push
pusha
fidivs
addr16
add
call
mov
cli
xor
sarb
ficoml
push
repz
xchg
push
daa
mov
mov
mov
dec
jbe
sub
mov
gs
mov
aam
into
lods
push
fisubrs
sarl
jl
mov
xchg
aaa
int3
mov
test
mov
mov
shll
xor
jnp
inc
jle
adc
popf
hlt
jo
test
cmp
lods
dec
fisubl
jmp
fcompp
ret
xchg
imul
ja
call
or
lcall
leave
pop
imul
push
xchg
stc
add
mov
jle
push
icebp
divl
popa
and
mov
adc
xor
push
popf
xchg
jmp
ja
sub
scas
dec
inc
in
stc
push
inc
add
ds
sbb
mov
adc
ficoms
sbb
adc
out
mov
pop
xor
insl
and
loopne
into
imul
ficoml
inc
imul
stos
pop
push
fiaddl
sub
les
mov
leave
in
push
int
in
in
jae
cmc
cmc
js
imul
push
and
sar
jl
lock
int3
and
jmp
fucomi
test
pop
nop
cmp
adc
cmp
inc
std
popf
sub
mov
sub
mov
adc
or
repz
mov
or
test
xlat
cli
mov
jbe
sbb
push
push
inc
or
dec
shll
enter
adc
jae,pt
mov
cmpb
and
cmp
sbb
pop
mov
into
adc
sar
rolb
cmovae
js
add
stos
jbe
xor
adc
mov
jns
stos
mov
pop
fsubs
popf
sahf
mov
ljmp
sbb
jl
in
in
xor
shrl
aaa
mull
cmp
cmp
test
out
shrb
mov
ret
mov
sub
xor
push
xor
push
xor
out
cmc
push
arpl
jbe
cli
push
sub
test
data16
shll
into
imul
mov
add
and
hlt
inc
leave
xor
aad
inc
ret
pop
inc
testb
out
mov
jmp
inc
lcall
cs
jno
insb
ljmp
jne,pt
and
insl
sbb
mov
lods
stos
push
inc
lea
or
sbb
jle
lret
scas
imul
jae
pop
lock
testl
shrb
jne
dec
fnstcw
push
mov
testl
and
dec
fnstsw
inc
stc
mov
gs
or
mov
mov
into
fisubrs
xchg
pop
xchg
stos
jecxz
je
cltd
sub
pushl
jmp
stos
and
cmp
dec
cmp
idiv
lret
jl
fstpt
push
les
xchg
jp
inc
leave
lods
lds
jnp
cmp
push
mov
popf
jae
in
mov
jo
call
rep
adc
arpl
mov
xor
pop
in
loopne
out
mov
shl
dec
adc
enter
xor
iret
movsb
int3
mov
lods
fisttps
shrb
addl
sbb
sti
or
cmp
outsl
inc
in
stos
xchg
jle
jo
lret
xor
addr16
xor
jle
jae
sbbb
addr16
adc
jle
outsb
test
adc
dec
mov
add
push
mov
and
mov
pop
cmp
sbb
dec
fdivrs
pushf
jmp
jecxz
mov
cmp
enter
in
dec
shrb
rorb
mov
out
xlat
cli
stc
sbb
sbb
arpl
xor
ficomps
sbb
negl
ljmp
sub
and
bound
xlat
lock
repnz
dec
mov
loope
cmovo
data16
idivb
call
adc
add
test
xor
fistpl
xor
push
in
shrl
rol
mov
dec
pop
in
jle
jb
jb
mov
movsb
jne
inc
cmp
jno
cmp
addb
and
pop
sub
bound
iret
stos
dec
jmp
mov
outsl
push
cmp
pusha
stos
cltd
andl
jno
icebp
negb
xchg
pop
adcl
es
cmp
pop
cmp
gs
jnp
addb
sahf
xchg
insb
mov
sbb
into
cltd
in
cwtl
sbb
rcl
pushf
flds
push
enter
xchg
hlt
imul
scas
repnz
ffree
dec
xor
sub
pop
mov
bnd
add
and
fldt
rolb
cltd
lret
sbb
and
or
push
scas
dec
jbe
mov
cmp
int3
sub
push
pushf
sbb
fsts
or
jns
daa
sub
insb
inc
out
mov
out
mov
lahf
cld
je
in
loop
lret
adc
mov
leave
and
enter
dec
ret
insl
xlat
sub
inc
xor
jno
out
mov
mov
rclb
add
or
mov
subb
push
inc
jbe
mov
loopne
loop
xchg
push
push
int3
sbb
rol
lods
pop
das
inc
ror
pop
sub
jmp
pop
pop
mov
mov
push
popl
mov
mov
imul
not
repz
je
rolb
xor
fdiv
pushf
sub
ss
aad
aaa
loopne
adcb
lock
cmp
sub
in
fwait
aam
aam
xchg
pop
and
ja
or
in
lds
mov
or
movsb
loop
cs
and
adc
jmp
or
inc
jne
fmuls
and
adc
add
fwait
jno
lods
mov
add
cs
jb
roll
scas
inc
sub
jge
adc
scas
sbb
loope
jno
inc
outsl
dec
push
sbbl
dec
shll
push
testl
jo
pop
jmp
cli
xor
or
jp
cli
sub
pusha
jle
push
mov
push
lahf
shr
fstp
cmp
in
xlat
loope
arpl
xor
lcall
mov
daa
dec
xchg
adc
imul
sub
call
lock
data16
sbb
sub
ja
lret
hlt
outsl
loop
lret
bound
xchg
cli
adc
aas
xor
rclb
push
fldcw
or
loop
cmp
cs
jae
xor
sysexit
cmp
negb
loope
xor
inc
test
add
rolb
push
les
movsl
mov
or
push
mov
stc
xor
jg
or
pop
psubsb
jne
sbb
pop
add
lods
out
push
mov
in
jnp
inc
or
scas
inc
xchg
and
pop
movsl
mov
pop
xchg
pop
jge
jns
mov
out
inc
push
inc
jmp
mov
pop
mov
in
sbb
adc
outsb
lret
hlt
sub
arpl
inc
pop
or
dec
mov
stos
inc
or
push
xchg
xstore-rng
cmpsl
add
sub
mov
push
jg
cmpsl
add
in
arpl
rorb
sbb
and
jne
sub
fsub
adc
gs
icebp
mov
in
rcrl
cld
dec
mov
cld
mov
nop
cmp
dec
cltd
mov
orb
mov
cld
fisubrl
or
punpcklwd
cmp
popa
lods
nop
arpl
inc
divl
sahf
xchg
fmuls
mov
mov
imul
into
pop
add
sub
fmull
shr
sub
cmpsb
aas
mov
out
mov
mov
test
int
sub
add
add
fsubrs
mov
push
pop
xor
stos
jae
mov
xor
loopne
fwait
pop
jne
adc
sub
cmpsb
mov
call
sbb
repnz
sub
std
adc
mov
cwtl
push
jl
cltd
push
dec
adc
adc
mov
or
sub
mov
mov
lar
scas
xor
sbb
test
and
sbb
xchg
inc
push
pop
sbb
js
ss
push
jne
test
pop
dec
mov
pop
jle
aad
jp
pusha
inc
adc
out
mov
or
js
movsb
fadds
sbb
add
sub
loope
mov
push
pop
push
xchg
jmp
daa
mov
push
mov
dec
adc
shrb
jmp
mov
andl
or
xor
or
movsl
loop
sti
jle
rcll
jp
sub
in
mov
pop
or
add
mov
cld
fsubs
ja
inc
jbe
in
shl
xor
clc
ja
inc
addb
jne
mov
sbb
inc
lods
or
dec
test
pop
mov
add
rorb
lret
jl
fwait
lods
imul
in
faddp
add
mov
gs
mov
mov
mov
inc
pop
lcall
dec
add
scas
inc
pop
cld
dec
sub
jno
sub
xchg
dec
sub
out
fsubs
inc
xchg
movsb
sub
dec
scas
mov
inc
push
mov
xchg
inc
int3
les
call
ret
cmpsl
jle
inc
xor
cmp
and
push
dec
stos
das
push
fwait
push
fnstcw
dec
out
jo
pop
fnstenv
ja
je
lahf
addr16
cmp
or
cltd
cmp
fxch
out
and
dec
push
test
mov
lahf
pop
out
mov
scas
jo
add
movsb
pop
mov
add
sub
outsl
fcoml
cmp
adc
sbb
mov
ret
fimuls
shrl
rol
fldl
iret
mov
mov
out
arpl
fdiv
enter
or
dec
ret
imul
ljmp
sbb
ljmp
inc
pop
pop
pop
mov
dec
cmp
add
push
inc
idiv
jg
repnz
add
in
ret
cli
inc
xchg
mov
std
pop
and
mov
aaa
aam
mov
imulb
testl
cmp
pop
stc
ret
dec
out
int
jg
mov
add
adc
pop
jnp
add
xor
pop
mov
mov
inc
push
lods
sub
pop
stos
mov
call
adc
es
out
fwait
popf
les
and
pop
icebp
fsubr
sub
mov
fidivrs
pop
ss
adc
xor
mov
mov
sahf
fistpl
in
inc
inc
mov
ret
xor
int
cmp
loopne
ret
cmp
fisubrs
repz
imul
sbb
add
cmp
orb
or
fmull
lahf
div
adc
pushf
ret
inc
outsl
addl
std
fdivr
cmpsl
arpl
mov
js
mov
xor
jbe
loope
outsl
aas
mov
xchg
lret
aam
add
scas
andb
hlt
xchg
cmp
adc
loope
fcmovb
push
pop
inc
pop
outsl
push
mov
mov
mov
or
lahf
jb
push
and
jns
cmp
cmp
xor
pop
mov
popf
mov
outsb
rcll
xor
or
sbb
sbb
fcmovu
into
add
lea
repnz
andb
sub
aam
pop
in
leave
fmuls
int
dec
test
sub
pushf
xlat
ja
into
ss
insb
inc
jo
pop
dec
mov
ja
test
pop
push
cmp
push
mov
sahf
fisttpl
daa
inc
je
movsl
lock
cwtl
test
cmpsl
or
push
shrl
add
cmpsl
dec
lds
stos
jb
test
dec
sbb
incl
stc
fildll
adc
std
mov
sub
out
inc
std
add
out
push
inc
sub
sbb
sub
ss
out
aas
pop
sarl
pop
lods
icebp
sbb
push
shlb
jmp
fsubrs
pop
cmc
cli
xor
adc
insb
cmpsl
xor
imul
or
jl
sbb
push
jg
stc
xlat
rcl
das
cmpsl
sub
cmp
andl
sbb
pop
inc
xchg
fdivrl
cmp
in
es
inc
rclb
xchg
mov
push
jb
mov
in
std
sahf
cmp
loop
sbb
mov
jle
or
sbb
xchg
cmp
inc
mov
and
mov
and
sahf
lds
cli
mulb
cs
ds
aam
or
je
jno
ds
mov
idiv
pop
pop
shrl
xchg
test
hlt
cld
loopne
popf
icebp
jge
sub
xor
daa
push
cmp
sbb
in
insb
mov
rcr
popf
popf
ret
jno
xchg
es
and
add
cmp
cs
pop
pop
adc
cmp
cltd
pop
daa
and
movsl
movsl
imul
outsl
mov
jne
sahf
inc
inc
ss
leave
movsl
sarl
loopne
push
dec
test
push
repnz
xchg
xchg
sarl
inc
and
ret
rcl
mov
loope
jbe
daa
mov
cli
jle
or
xor
fidivrs
xchg
mov
push
dec
sbb
pop
adc
cli
imul
xor
incl
mov
or
repz
adc
sbb
and
sbb
dec
or
or
mov
jno
mov
xchg
sbb
fs
fldenv
xchg
push
subl
adc
inc
pop
out
shr
leave
lock
xchg
imul
or
vpminub
pop
push
adc
loope
mov
test
push
lret
inc
fwait
mov
inc
cltd
pop
aaa
aam
pop
adc
pop
jl
fbld
jle
lahf
dec
test
outsb
sub
ja
int
cmp
inc
xchg
and
and
mov
mov
jae
aad
xor
cwtl
or
pop
loope
frstor
push
addr16
aam
int3
rol
jp
pusha
push
adc
inc
dec
in
fdivl
mov
loopne
mov
mov
inc
jb
cmp
std
mov
fwait
pop
jnp
ss
mov
or
push
cwtl
pop
pop
fs
push
jge
aad
icebp
dec
push
mov
mov
or
xlat
push
or
bound
mov
mov
aaa
dec
push
fdivs
mov
leave
repz
push
das
ds
insl
aam
pop
xchg
or
fs
pop
add
push
add
cmpl
fdiv
dec
js
mov
js
mov
push
ljmp
fs
fwait
call
pusha
fbstp
es
cli
fcompl
xchg
andb
mov
ret
inc
imul
mov
les
movsb
insb
adc
jns
sahf
aas
adc
jp
fistps
cmp
into
imul
negl
inc
shrl
test
mov
xchg
lcall
icebp
sbb
inc
mov
push
cmp
jo
ljmp
mov
adc
cli
lret
into
cmp
es
xchg
shll
and
iret
nop
cld
pop
arpl
dec
comiss
repz
arpl
popa
mov
mov
pop
mov
xchg
xchg
add
rcrb
mov
lahf
sub
mov
mov
addr16
and
test
les
rcr
out
mov
cmpsb
ds
pop
scas
test
mov
sub
sub
or
add
imul
sbb
cltd
insl
pop
iret
sub
adc
push
imul
push
lcall
je
ja
movsl
push
fwait
pop
inc
test
andb
into
cmp
mov
imul
or
cmp
outsb
mov
inc
iret
lods
add
jns,pn
sti
aas
dec
push
dec
jbe
xchg
outsb
pop
pop
sbb
loope
das
push
cmp
and
pushf
sarl
push
lahf
inc
das
xor
add
push
daa
ljmp
lods
out
mov
sahf
fstl
push
dec
cmp
lock
pop
xor
sub
pop
repz
pop
add
adcl
xorl
jbe
ret
loopne
daa
scas
xchg
dec
lock
mov
mov
push
inc
push
test
sub
push
push
jl
adc
fisttps
push
and
stos
loope
xor
inc
psrld
imull
push
cltd
jle
cmpsb
cli
push
or
jg
shlb
mov
push
aam
fldl
jmp
and
add
jmp
aaa
xor
or
sub
adc
loope
dec
fimull
sbb
imul
or
out
popa
in
fdivrl
std
xchg
mov
sub
and
and
call
add
ret
enter
lret
jo
imul
sub
inc
pop
sbb
mov
addb
cmp
and
inc
inc
dec
call
dec
daa
ljmp
sbb
mov
icebp
lods
test
sub
sub
xor
inc
push
mov
add
fadd
add
mov
xchg
xor
in
push
cmp
nop
nop
gs
movsb
leave
scas
lret
ja
cmp
cs
shlb
test
ss
lea
lods
mov
sub
scas
cmpsb
mov
sbb
inc
add
mov
sub
jns
add
insb
mov
outsl
int
mull
cmc
mov
imul
lods
xor
out
add
insb
mov
push
mov
inc
std
out
jb
mov
or
push
sbb
sarb
subb
sub
xchg
cltd
in
dec
sbb
ds
cltd
jge
paddd
mov
lds
add
js
mov
pop
jecxz
imull
mov
mov
out
mov
pop
cli
pop
pop
mov
add
lahf
call
dec
xor
dec
sbb
das
dec
bound
push
pop
shr
or
pop
mov
loopne
hlt
pop
and
in
fcmovnb
mov
jl
cmpsb
nop
mov
dec
push
int
mov
pop
mov
insb
daa
fdivr
xchg
mov
push
push
loope
ljmp
push
dec
xor
arpl
stos
jb
aas
push
jns
mov
xor
lcall
xchg
movsl
je
das
adc
das
add
push
call
mov
cs
mov
mov
pop
jae
jnp
filds
cld
mov
and
out
and
lret
or
popf
pop
fcmovu
outsl
stos
and
xlat
xor
shl
inc
xlat
push
sub
mov
shll
xor
fistl
pop
cmp
rolb
test
xchg
dec
inc
mov
hlt
sub
dec
out
arpl
pop
enter
sbb
jg
pop
popl
xor
mov
popa
push
std
sub
mov
xchg
ja
pop
fnstenv
rcrb
pushf
mov
cld
xchg
lea
mov
push
xchg
mov
mov
fstp
ja
sahf
vpminub
adc
jb
stos
outsl
mov
add
sbb
add
sarl
mov
fstpt
inc
push
std
out
stc
enter
imul
into
sub
fdivs
inc
cltd
aam
ljmp
push
jns
into
pop
or
insl
jo
lea
mov
mov
mov
in
push
lcall
test
mov
ja
icebp
or
sbb
mov
daa
mov
iret
in
pop
inc
and
inc
pop
imul
inc
xor
test
mov
call
cwtl
xor
daa
push
mov
lcall
stos
push
std
int
inc
and
jge
sbb
jo
lods
sub
ljmp
ret
push
add
xor
sbb
movsl
test
pop
dec
push
cmp
mov
mov
dec
outsl
popa
push
adc
or
adc
mov
sahf
stc
andb
sub
lods
repz
or
shlb
fcomip
fstpl
jns
jmp
std
push
mov
fs
adc
gs
outsl
lea
fs
lock
dec
and
jae
repnz
cmp
dec
imul
data16
je
mov
and
jg
or
inc
loop
cmp
xor
inc
cltd
cmp
mov
out
inc
notl
sarl
int3
mov
dec
sub
iret
scas
xor
mov
les
inc
push
cmc
call
xlat
sbb
mov
out
popf
notb
xchg
lcall
shlb
lods
test
loopne
xchg
shrb
in
mov
and
je
jle
cmp
xlat
pop
arpl
or
rol
add
outsl
or
add
imul
incl
mov
je
jg
xor
shl
lods
sbb
fstps
test
push
jo
add
shlb
pop
xor
inc
adc
jp
xchg
jae
push
lret
fisubl
mov
push
and
out
jo
mov
pop
mov
cltd
or
push
shll
jae
repz
sub
mov
rclb
push
lcall
cli
loopne
dec
iret
jle
jg
inc
into
sbb
out
call
xchg
sbb
das
mov
sarb
adc
bound
mov
sahf
iret
add
adc
jnp
arpl
xchg
sub
out
sbb
push
ds
jg
call
cltd
insb
daa
movsl
sub
js
lea
mov
jne
mov
rcrl
int3
mov
mov
fstpt
mov
addb
pusha
sbb
mov
das
push
lcall
fwait
adc
xchg
cmp
push
les
shll
pushf
in
sub
in
fsubrl
fsubp
xor
mov
push
popf
and
add
xor
mov
and
ret
lret
dec
and
push
sub
cld
xor
int
jp
xor
ret
nop
mov
and
or
stc
xor
mov
adc
insb
fisubl
adc
inc
and
xor
pop
inc
or
das
xlat
outsl
imul
and
xchg
mov
lods
iret
pop
dec
stos
lds
inc
ds
filds
cmpsl
mov
dec
xor
aad
mov
popf
hlt
imul
bound
lods
sahf
cwtl
stos
or
mov
sbb
pop
xlat
xchg
lds
and
add
addr16
inc
test
push
xorl
push
sbb
inc
ds
pop
fistl
add
arpl
incb
in
xor
jg
imul
js
mov
sub
sbb
js
pop
cmc
nop
jle
scas
ljmp
sahf
push
inc
add
jo
sbb
stc
inc
pop
mov
pusha
mov
push
or
adc
adc
cmpsb
xor
xchg
das
mov
imul
adc
rorb
lea
test
clc
pop
test
sbb
jge
notb
cltd
dec
jp
jnp
fcmovu
scas
loop
aas
popa
fsubrs
xchg
js
xchg
sbbl
pop
addr16
adc
mov
leave
leave
mov
sub
pop
sbb
mov
movsl
enter
pop
stc
adc
imul
cmpsb
push
fdivrs
xchg
aas
pop
lcall
cs
mov
xor
test
ds
xchg
pop
mov
scas
push
out
repnz
cltd
loop
pop
cs
or
add
xor
dec
push
fwait
push
loope
xchg
pop
fstps
mov
adc
jl
dec
cmp
pop
lcall
imul
pop
insl
sbb
hlt
push
sbbl
and
or
add
mov
movsb
arpl
adc
pop
jle
stc
scas
ficoms
ret
gs
sub
jl
xor
jns
pop
js
loopne
and
popa
jo
or
mov
xchg
iret
insl
fnstsw
loop
lret
popf
in
aas
push
mov
std
aad
mov
xchg
jo
stos
inc
ret
dec
jl
stc
int
xor
lret
lods
arpl
push
int3
push
or
jmp
add
mov
stos
inc
push
add
clc
cs
and
ret
nop
cmpsb
mov
or
xor
push
nop
xchg
sti
inc
out
jns
sub
out
xchg
ss
or
fildll
loopne
test
jb
shl
in
push
add
xchg
stc
cmp
pop
int3
sar
test
movl
mov
mov
jl
mov
push
fstpt
clc
pop
dec
dec
fcmovbe
jg
xchg
fisttpl
subl
xchg
mov
add
pop
int3
loope
xchg
jnp
fnstenv
or
bound
sbb
mov
sbb
rcl
jne
inc
test
in
out
lea
and
xchg
cmp
and
xor
xchg
cmpsl
int3
bound
jmp
lds
mov
pop
and
hlt
xchg
and
lock
mov
imulb
inc
aas
cwtl
ds
cmp
inc
sub
pop
shlb
test
push
notl
cmpsb
jnp
pop
push
add
inc
jne
and
cmpsb
cli
sub
dec
arpl
or
sbb
adc
mov
dec
fcoms
test
lret
insb
test
ror
nop
jae
sahf
shlb
insl
ljmp
cwtl
cmp
lahf
sub
push
mov
insb
stos
and
ret
sti
jb
cwtl
stos
in
adc
pop
pop
pop
das
xchg
test
je
sub
imul
outsb
mov
mov
sbb
scas
mov
cli
sbb
fnsave
sbb
ds
mov
sbb
xchg
cmpsb
out
jo
mov
cli
in
adcl
pop
repz
xor
ja
aas
ja
and
xchg
cmp
pop
xor
imulb
pop
clc
and
add
dec
push
arpl
inc
jne
sub
mov
or
ja
imul
mov
in
loop
inc
icebp
add
dec
lds
lods
and
mov
dec
mov
fcmovbe
lods
adcl
std
mov
pop
cmp
andb
xchg
dec
or
cs
xchg
mov
test
and
je
sub
aaa
cmp
cli
pop
lcall
cmp
mov
fwait
adc
mov
push
fsubrp
jl
scas
push
xchg
outsl
dec
inc
mov
jmp
cmpsl
sbb
sub
jecxz
fisubrl
cmpsb
gs
inc
fwait
inc
jmp
in
add
adc
inc
and
rclb
adc
adc
mov
and
insl
push
repz
mov
mov
scas
mov
loop
inc
mov
out
jne
push
inc
ret
xchg
aas
cmpsl
mov
je
adc
outsb
jns
or
dec
rclb
daa
lock
arpl
cltd
cld
loopne
jnp
push
mov
dec
adc
fcoml
lahf
adc
fistpl
or
mov
cmp
jmp
ror
jp
aas
popl
xchg
stos
jle
mov
adc
es
adc
lret
mov
aad
jecxz
cmpsl
jnp
icebp
or
push
addb
cmpsl
xchg
pop
addr16
mov
mov
xchg
sub
jne
andl
mov
jge
mov
int
pop
jmp
push
inc
cmpsl
sub
push
jmp
les
aas
xor
cmpsl
adc
dec
outsl
pop
dec
insb
lret
adc
mov
mov
jb
push
sar
add
xchg
push
out
stc
fnstcw
add
mov
push
pop
add
shll
cmp
or
fsubl
je
jmp
jp
call
rcrl
call
shl
or
adc
mov
rcll
push
aam
and
mov
cld
scas
mov
sub
cli
cmpl
fdivl
popa
pop
or
fisubl
dec
dec
sbb
add
inc
fisttps
inc
test
xor
lret
fsubrl
shll
inc
ss
data16
int3
and
and
out
push
adc
movsb
push
mov
dec
out
insl
mov
and
push
imul
sahf
cmp
pop
test
ret
std
bound
into
jl
xor
call
inc
test
arpl
inc
dec
sbb
imul
mov
inc
sub
push
xchg
or
test
mov
dec
xor
mov
push
xor
mov
aaa
inc
xchg
stc
shrb
pushf
iret
mov
nop
int3
stc
and
imul
inc
lods
out
shlb
and
jo
push
stos
pop
jbe
push
sub
bound
cmp
push
addr16
pushf
pop
out
cmp
pop
insl
dec
mov
jmp
lock
mov
pop
mov
xchg
mov
fxch
insb
cli
mov
in
cmpl
out
mov
lahf
push
mov
mov
cmp
xchg
mov
mov
mov
push
add
out
rclb
mov
jnp
mov
cltd
pop
movsl
inc
xchg
xor
pop
push
sbb
out
mov
inc
jb
rcrb
shr
repz
fxch
je
mov
shl
test
insl
and
adc
xor
sub
jnp
xor
pop
aad
ficompl
ds
dec
inc
xlat
imul
jge
mov
insl
das
xchg
les
lds
xor
out
xchg
push
flds
into
push
iret
xor
je
add
je
icebp
xor
subl
jo
and
jno
test
arpl
inc
mov
pop
lret
daa
xchg
aas
lods
adc
pop
and
inc
out
loopne
pop
cmc
fwait
inc
sub
pop
or
in
sahf
popa
xor
in
out
sub
push
scas
mov
add
add
outsl
add
jnp
lahf
cld
xlat
sbb
rcrb
dec
mov
sbb
stc
push
idivl
dec
adcl
mov
cwtl
mov
movsb
outsl
add
jmp
imul
push
jae
mov
ret
ds
sti
lock
cmp
mov
push
mov
add
fmull
jg
pop
test
jmp
mov
dec
movsl
aam
test
sbb
daa
mov
sbb
call
inc
pushf
std
xchg
sbb
dec
enter
jg
cmp
xlat
jmp
mov
pop
adc
sbb
data16
outsl
pushf
std
nop
and
ds
sahf
shr
push
sahf
rol
push
push
mov
cltd
or
aaa
and
mov
frstor
sbb
push
pop
lcall
int
sbb
dec
xor
fisttps
lods
push
rorb
into
cli
clc
lock
sbb
adc
xor
push
inc
pop
fnsave
neg
scas
sahf
test
lods
sub
push
ret
xchg
repz
mov
aam
push
push
mov
cltd
add
pop
inc
loope
repnz
xchg
imul
in
mov
sbb
mov
and
and
jmp
lea
mov
ja
scas
xchg
popa
or
ds
stos
adc
stos
arpl
lret
push
jo
aaa
push
sub
sti
adc
pop
cmp
push
add
aas
cltd
push
stc
jns
in
divl
outsb
pop
cmp
adc
divb
lcall
orb
nop
pop
or
call
js
xchg
repz
popf
cmp
cmp
cmc
mov
push
popf
pop
test
pusha
out
repnz
xchg
test
or
fstpt
js
pop
in
scas
sbb
sub
mov
lret
lret
or
sahf
pop
jns
shlb
test
andl
mov
imulb
sub
and
ljmp
das
sbb
outsb
jmp
mov
cmp
mov
push
xchg
sbb
movsl
mov
mov
clc
xchg
enter
push
xchg
pusha
lock
test
cmp
jecxz
test
mov
lods
outsb
mov
and
sbb
xchg
gs
std
push
push
clc
pop
inc
add
mov
or
add
adc
fstps
xor
ja
fisttpll
nop
cmp
idivl
mov
pop
mov
sub
cwtl
sbb
lcall
mov
pop
test
aam
mov
jmp
daa
jecxz
loop
hlt
cld
out
popa
icebp
jecxz
inc
ljmp
cwtl
out
jmp
std
cwtl
jae
adcl
rclb
jl
mov
out
lods
in
dec
cmp
lods
xchg
bound
mov
sti
cwtl
cltd
mov
ljmp
out
gs
dec
mov
xor
mov
ret
fistpll
cmp
jb
jo
push
pop
mov
std
pop
dec
mov
jle
xlat
loopne
test
and
jnp
or
and
inc
movsl
cmpsb
dec
dec
imull
add
xchg
mov
sahf
sbbb
or
inc
or
psubusb
add
ss
cmc
mov
xchg
cmp
inc
int
xchg
lret
ret
pop
push
movsb
mov
cmp
cmp
pushf
or
fwait
jb
pop
mov
in
out
rorb
xor
outsb
icebp
sub
cmc
cltd
or
xlat
lcall
mov
mov
scas
js
and
jo
xchg
xor
xor
and
in
stos
sub
shrl
mov
stc
bound
dec
cmp
xchg
mov
pop
je
pop
pmulhuw
push
jo
sub
movsb
pop
mov
cmc
movl
xchg
shlb
push
sahf
adc
imul
leave
sbbl
enter
jnp
fwait
jg
or
shrl
dec
cld
jae
repnz
movsl
imul
jg
mov
mov
pop
mov
or
push
mov
jge
data16
and
push
push
and
or
jb
scas
jmp
cmp
je
mov
dec
cmp
xor
pop
out
loopne
mov
cmp
sbb
push
sub
loopne
adc
lock
daa
pushf
inc
sbb
sub
mov
std
pop
loopne
sub
pop
xchg
dec
mov
popa
mov
repnz
mov
xchg
push
add
jecxz
popa
and
mov
lret
stos
adc
notl
adc
movsl
sub
cmpsb
push
or
ret
cmp
enter
pop
sub
fldenv
push
rorl
inc
add
addr16
mov
rcrl
mov
inc
xor
stc
aad
stc
lods
or
sbb
js
xchg
sbb
jae
adc
movsb
insl
pop
push
bnd
fistl
imul
dec
out
mov
pop
cltd
icebp
pop
mov
in
cmp
push
aad
jg
xchg
jno
lahf
aad
adc
test
leave
mov
inc
and
add
adc
divb
sub
or
cwtl
cmp
mov
mov
nop
mov
cmp
out
loopne
ret
push
pusha
jns
pop
jmp
xor
push
mov
xchg
add
add
jo
imul
out
pop
pop
mov
pop
out
cmp
push
lea
dec
jns
add
xchg
dec
xchg
lret
dec
or
mov
sbb
fnstsw
inc
cmp
cmpl
ljmp
jnp
std
and
sbb
push
arpl
lods
xor
or
js
aas
cwtl
add
in
and
xchg
stc
mov
lds
push
dec
dec
dec
das
xchg
jnp
lmsw
mov
shl
jg
dec
xchg
addr16
or
in
insl
lds
pop
inc
or
push
push
loope
pop
push
sbb
lock
sbb
cld
pand
xchg
cmpl
sub
push
add
inc
xor
jl
addr16
subl
loopne
add
mov
sahf
and
push
inc
fs
jns
jmp
sbb
pop
cld
mov
xchg
bound
sbbl
jns
ret
mov
lods
cmp
imul
divl
adc
mov
xchg
push
push
out
mov
jnp
cwtl
sub
and
sub
fisubl
xchg
loop
pop
sbb
js
fs
add
jo
fwait
rcl
cs
or
lods
filds
jnp
mov
mov
add
rcrl
fsubrl
rcrl
call
pop
scas
dec
jmp
lahf
nop
aad
lds
cltd
jno
cs
jmp
push
iret
loop
xor
cmpsl
aad
and
jns
or
push
xor
push
inc
push
les
faddl
aam
add
cmp
loope
push
mov
jmp
jmp
data16
sub
xchg
lods
and
xchg
pop
shrb
fcom
mov
mov
cmpsl
int
imul
jecxz
int3
loop
insb
lock
orb
shll
mov
jbe
jno
shrl
push
mov
test
shlb
sub
dec
push
ljmp
mov
cmpsb
xchg
pop
fsubrl
out
mov
mov
cltd
cmp
jl
iret
or
jnp
movsl
insb
rcrl
test
xchg
outsb
mov
cmpl
push
ror
push
js
insb
loope
push
sti
test
or
mov
cmpsl
xor
lock
int
daa
fiadds
push
aad
in
sbb
adc
jo
mov
mov
mov
test
outsl
jmp
cmp
shrl
push
imul
arpl
test
sbb
and
push
xchg
rcrl
or
adc
lods
sub
push
dec
daa
sbb
pop
inc
pop
mov
les
pop
xchg
aad
mov
mov
inc
push
add
movsb
add
lret
adc
lret
cmpsl
jp
mov
push
das
and
pop
insb
scas
or
sub
push
inc
arpl
add
mov
andl
in
or
out
lahf
pop
jne
adc
inc
inc
jb
mov
psubb
mov
inc
daa
add
call
mov
mov
imul
fucom
push
outsb
cs
or
jmp
inc
push
jns
hlt
fwait
fwait
push
jmp
aad
mov
int3
sbb
mov
xchg
or
lea
out
lods
mov
nop
outsl
int3
outsl
div
xlat
mov
xor
sti
icebp
sbb
test
jge
mov
fcompl
popa
cmp
adc
inc
repz
jnp
cmp
sub
pushf
adc
pop
mov
lea
adc
xlat
jno
das
inc
ss
cmp
pop
or
cld
enter
or
out
jne
xchg
adc
rorl
mov
insl
xor
jg
xchg
dec
frstor
rorl
arpl
popf
dec
js
imul
cmp
inc
test
xor
ds
cltd
into
add
pop
push
mov
rcrb
aam
xor
push
pop
push
and
and
inc
mov
or
inc
les
mov
lcall
push
je
subl
fwait
bnd
lahf
jns
popf
push
loope
mov
bound
clc
xlat
int
push
adc
pusha
pop
cmpsb
xchg
stos
sbb
repnz
xchg
pop
inc
mov
fsubl
into
pop
cmp
in
vpackuswb
out
fadds
and
mov
addr16
shlb
jg
in
push
mov
xchg
pop
popa
mov
mov
scas
cwtl
and
dec
test
fstpt
je
mov
mov
fistpll
inc
insl
test
dec
gs
mov
push
or
jns
data16
lcall
bound
push
js
mov
lcall
mov
imul
xlat
mov
add
inc
outsl
rcll
xchg
sbb
push
pop
xor
loopne
iret
outsb
inc
aas
add
fiaddl
fwait
adc
sub
popf
cwtl
daa
and
pushf
cli
adc
lods
mov
add
mov
or
in
in
cmp
cmp
iret
mov
pop
cmp
mov
adc
mov
and
inc
popa
popf
dec
push
xor
in
adc
inc
ds
movsl
aas
push
stos
jne,pt
or
cli
rol
dec
xor
jns
movsl
mov
pop
ja
ja
pop
inc
testb
gs
and
lods
and
data16
in
or
mov
aaa
cmp
fnstcw
out
mov
jo
sub
pusha
aad
icebp
ja
and
das
sbb
ja
sbb
adc
bound
rcrb
sbb
xchg
jno
jecxz
mov
cmpsb
add
xchg
insb
mov
sahf
and
out
test
sti
mov
or
fisubl
test
jge
addr16
mov
movl
std
mov
sbbl
push
add
xor
loop
dec
mov
push
sbb
cmp
test
pop
arpl
ljmp
push
aaa
cmp
mov
cmc
sbb
or
fmulp
cmp
loopne
sub
jne
mov
hlt
or
mov
jne
ret
jl
mulb
test
cli
adc
jbe
sub
add
popf
xor
out
push
mov
ja
add
gs
pushf
cltd
fldenv
sbb
lret
nop
jl
add
xchg
bound
push
mov
mov
in
cli
or
push
cs
scas
xchg
pop
ja
add
mov
jp
mov
aam
aas
aaa
addr16
shl
push
jge
int3
sub
aaa
fsub
mov
scas
pop
cli
adc
out
pop
xchg
mov
cwtl
xorl
repz
inc
adc
pushf
fldl
inc
dec
lods
in
or
stos
inc
idivb
mov
adc
scas
fildl
pop
push
and
inc
sub
xchg
in
dec
inc
pop
gs
inc
add
outsl
xor
pop
aaa
sub
or
ja
or
test
in
cwtl
mov
mov
mov
jmp
mov
nop
mov
ds
add
mov
test
and
ja
inc
ja
dec
xor
cwtl
mov
ja
test
mov
add
jno
sub
das
rcr
imul
xlat
push
mov
pop
pop
push
cli
bound
adc
xor
shrb
insl
adc
lods
push
hlt
int3
pop
pop
sbb
xchg
jnp
cli
or
push
je
imul
ret
shlb
sbb
lea
jl
sbb
fisttps
xor
mov
movb
ja
adc
ss
shrl
cmc
add
into
jno
dec
jnp
dec
fcomps
in
push
lcall
push
in
inc
mov
out
mov
imul
mov
jne
enter
std
jo
lret
xchg
mov
jnp
rolb
push
jno
gs
test
fnsave
push
pop
popa
inc
subl
push
daa
icebp
rclb
testb
push
xor
and
pop
dec
and
hlt
test
pop
jo
addb
pop
out
jmp
stc
xchg
jno
push
sbb
insl
aad
shlb
cmp
sub
or
call
fdivs
lahf
or
lret
data16
ret
into
andb
popf
jae
cmc
incb
pop
push
loop
mov
int3
fldt
add
inc
lret
or
imul
outsl
jne
popf
xor
cwtl
xchg
xchg
sub
push
xor
mov
je
inc
sbb
out
mov
xor
adc
xor
sbb
jmp
cmc
xor
jns
imul
aaa
cmpsb
pop
push
shlb
mov
mov
movsl
push
jno
inc
pushf
jl
push
adc
filds
gs
dec
fcomip
xchg
fdivrp
xlat
ljmp
inc
push
adc
mov
xor
inc
mov
xor
jbe
mov
mov
je
or
push
or
enter
xor
xor
mov
pop
and
mov
add
movsl
gs
add
sbb
rorl
sbb
insl
jae
inc
lcall
ljmp
in
and
stos
mov
call
xchg
mov
iret
rcrl
aam
sti
notl
inc
andb
push
or
jbe
sti
sahf
mov
cmp
movsb
or
dec
lock
sbb
sub
push
mov
pop
scas
call
inc
mov
loopne
scas
into
inc
mov
push
jecxz
leave
sub
ret
imul
pop
push
ret
push
roll
xchg
adc
push
lods
xor
xchg
push
push
outsb
fstpt
stos
or
pop
mov
dec
push
jae
mov
repz
add
ja
xchg
add
pop
sbb
cmp
aas
loope
sbb
mov
bnd
out
gs
adc
mov
out
inc
dec
inc
ficompl
xor
imul
cli
cmp
pop
jmp
ds
addr16
js
mov
std
mov
push
daa
sub
ja
mov
add
or
xchg
rorb
xchg
jbe
push
cmp
rcll
jae
leave
fists
popf
add
shl
std
push
add
stos
divl
mov
shr
push
pop
arpl
jp
jle
xor
stos
ja
mov
pop
push
fcmovnbe
fwait
imul
movsb
jne
sbb
cmp
inc
sbb
subl
inc
daa
enter
scas
cmpsb
pop
clc
inc
mov
and
ss
sbb
call
cmpsb
or
mov
leave
jae
or
fistl
pop
push
punpckhbw
xlat
push
out
sahf
and
shrb
jno
scas
int
dec
sub
xchg
lret
mov
inc
rcll
popf
or
movsl
shlb
mov
sbb
jb
outsl
and
faddp
mov
lret
scas
xchg
inc
push
ja
dec
sub
add
cmp
jns
inc
loopne
xchg
and
mov
add
adc
iret
jg
sbbb
sbb
cmp
mov
popf
fadd
rcrb
or
enter
cmp
sbb
pop
dec
jno
push
pop
mov
cmc
xchg
push
sub
ret
sbb
pusha
sbb
mov
cmp
sub
mov
popf
icebp
jl
cmpsl
mov
fistl
jne
int3
mov
popf
lds
js
adc
xor
xchg
bound
rorb
xchg
in
neg
fwait
pop
into
mov
xchg
pop
or
sub
cmp
sbb
xchg
fldenv
lcall
aam
mov
cmp
mov
sub
lea
mov
outsl
inc
mov
in
mov
cmp
cmp
xorl
mov
sti
sub
pop
jg
lds
aas
aad
negl
pushf
mov
inc
mov
sub
repnz
pop
fmuls
mov
bound
jbe
dec
dec
enter
ret
or
xchg
addr16
xchg
xor
cmp
sbb
scas
sbb
push
ljmp
addb
xchg
sub
jae
gs
cmpsb
in
es
mov
mov
inc
xor
sbb
ljmp
rcl
cmc
mov
fstl
and
jae
mov
push
aaa
mov
add
inc
pop
inc
push
in
subb
shll
sub
jmp
adc
pop
sub
mov
dec
ret
int
push
aaa
jp
repz
jle
roll
jne
loopne
loopne
cltd
jo
dec
icebp
fsubrs
xchg
pushf
lock
mov
pop
ds
cltd
sbb
xor
sub
pop
test
or
adcb
dec
cmp
mov
sbb
sarl
outsl
and
pop
cmp
mov
and
mov
pop
sub
stos
xor
rcr
xor
popa
mov
pop
xchg
xchg
lds
and
sub
mov
cmp
hlt
add
int3
lods
hlt
into
in
inc
mov
icebp
adc
cmp
xor
into
mov
insb
mov
inc
cs
pop
es
pop
je
mov
subb
sahf
lret
or
repz
sarb
adc
jle
popl
lock
lea
inc
cmp
push
fcomp
jl
mov
insl
sti
lahf
outsl
fldenv
fnstcw
jne
scas
test
pop
rcll
mov
fadds
iret
jge
add
inc
fsubrs
inc
mov
add
sub
adc
iret
imul
pop
dec
fsubr
hlt
cld
sbbb
mov
arpl
mov
dec
dec
jp
pop
fistl
sbb
leave
or
addr16
test
scas
inc
cwtl
in
test
in
stos
into
sub
scas
in
lock
mov
xor
loop
push
js
stc
add
movsb
inc
fmuls
call
sub
aam
cmpl
xchg
rorl
xlat
ja
lock
mov
inc
push
xchg
cmp
out
pop
add
pop
jne
dec
lock
and
lods
mov
in
repz
out
stos
pushl
popf
lods
ret
mov
int
inc
push
stc
xchg
loop
dec
loope
pop
movsb
cld
push
push
loopne
lock
out
adc
clc
addr16
stos
mov
gs
lret
mov
push
xchg
add
std
mov
aad
jecxz
mov
pop
fdivl
inc
bound
js
jnp
sbb
cltd
or
push
sub
leave
cmc
stos
lea
push
outsl
sub
out
adcb
call
and
push
loope
xor
in
xor
fisubrs
lret
es
inc
sbb
jae
frstor
jno
sbb
xchg
lcall
imul
out
mov
hlt
jle
push
push
lock
jbe
xor
xor
arpl
sub
js
fwait
jo
pushf
xlat
sub
in
xlat
pop
icebp
outsb
push
ja
insb
std
add
in
outsl
push
andb
sub
out
pop
inc
mov
nop
fldt
lcall
mov
sub
mov
jg
popf
push
mov
shl
and
xchg
movsl
adcb
push
mov
mov
cmpsb
loope
sub
mov
ljmp
mov
push
scas
out
push
push
mov
and
les
add
outsl
push
in
movsb
lahf
or
in
and
fistpl
call
adc
std
mov
in
or
add
arpl
fucomip
arpl
dec
lds
and
scas
fldt
fidivrs
sarb
jne
or
lcall
pushf
jne
adc
sub
repnz
jns
xor
out
pop
cmp
test
sti
gs
pop
das
push
add
sub
lods
int
push
mov
mov
imul
and
loopne
lret
fsts
pop
ds
xchg
jns
inc
xor
dec
pop
out
adc
sahf
movsl
gs
cmpsl
pop
adc
jle
mov
add
inc
push
cs
movsl
add
inc
sbb
pop
xor
jnp
outsb
dec
cli
clc
push
icebp
adc
and
push
mov
lods
gs
idivl
sub
mov
xor
xlat
mov
push
jnp
dec
and
add
loope
jns
out
and
sahf
arpl
xor
mov
mov
aas
imul
xor
jmp
push
or
xchg
imul
mov
xor
cmp
nop
cmp
aam
add
sub
and
and
in
shlb
out
not
mov
ds
jecxz
test
jbe
dec
sub
pop
int3
jns
jbe
repnz
cmp
mov
sarl
rorl
aaa
mov
or
jb
inc
movsl
jmp
mov
pushf
fists
mov
xorb
xlat
cvtdq2ps
adc
loopne,pt
pop
popf
lds
inc
jnp
aaa
pop
int
push
ret
xor
push
sbb
lret
fldl
cmpsl
mov
aaa
dec
mov
lock
pop
cmpsl
fsubs
test
fwait
mov
xchg
outsl
xor
pusha
xchg
and
mov
mov
sbb
jecxz
lods
pushf
push
fadd
mov
sar
aas
and
push
dec
stc
pop
dec
fists
pop
addr16
std
add
enter
fnsave
cmp
mov
mov
aam
cld
add
lahf
in
jbe
mov
rcrl
addl
inc
adc
xchg
cmp
fdivl
sub
lods
mov
mov
sub
lock
popa
out
pop
lods
add
setg
jns
fstl
daa
cmp
popf
mov
jb
add
mov
sti
inc
or
aam
aas
imul
mov
into
scas
loopne
fisubl
addr16
push
or
fwait
data16
mov
push
inc
lods
mov
stos
dec
cmp
and
mov
jae
iret
jge
sub
jecxz
subb
dec
call
loope
cli
pop
and
in
xor
in
sbb
cmc
dec
mov
inc
push
sbb
rorl
xchg
loop
xchg
hlt
jl
aam
cwtl
divb
push
mov
rorl
subb
outsb
pushf
imul
cltd
std
mov
enter
ret
js
mov
xor
shlb
push
add
clc
mov
fstp
mov
icebp
sbb
dec
or
and
xor
ja
sbb
inc
mov
lock
lods
roll
adc
xchg
lcall
out
lcall
out
jle
lods
mov
pop
idivl
imul
dec
xor
pop
xchg
insb
mov
pop
cmp
iret
xchg
aad
or
insb
lods
add
in
out
fs
xchg
or
inc
adc
and
fildl
adc
jp
cmp
xor
imul
in
jbe
sub
and
add
lds
sbb
and
or
add
out
lods
mov
xchg
xor
insl
inc
dec
popf
shrb
in
jmp
pop
sbb
mov
scas
js
insb
push
orl
dec
xchg
cmp
mov
pop
mov
cmpsb
push
lea
fidivl
cmp
andb
pop
int
xor
imul
idiv
decb
jp
mov
xchg
mov
inc
dec
mov
push
cmc
sbb
lret
push
shlb
fs
inc
add
push
mov
mov
lock
xchg
jmp
movb
inc
decl
pop
mov
filds
inc
jecxz
jmp
test
rolb
stc
pop
stos
outsl
mov
nop
stc
std
or
sub
das
sahf
mov
bnd
xor
fsts
mov
repz
jmp
shr
jmp
mov
pop
mov
xlat
gs
xor
and
push
lods
movsb
loope
inc
ret
pop
outsl
and
or
or
pushf
mov
fwait
sbb
ret
das
mov
jecxz
adc
lcall
movsl
bound
jnp
xor
in
cmp
mov
mov
add
sub
enter
mov
iret
xor
cwtl
das
and
xchg
in
sub
hlt
das
mov
insl
adc
mov
std
jnp
and
cwtl
jbe
hlt
mov
gs
xchg
shll
call
push
daa
dec
scas
loop
mov
lret
js
mov
or
push
sub
xlat
dec
jb
cs
mov
jb
and
inc
fcmove
pusha
cmpsl
push
ss
push
jmp
inc
jmp
push
ret
or
vmovhps
aas
sbb
mov
es
mov
mov
mov
addr16
mov
add
dec
daa
adc
pop
push
jne
mov
loop
icebp
pop
pop
pushf
pop
cmp
mov
push
test
jecxz
out
leave
lock
mov
aam
sahf
jb
loop
and
mov
jnp
movsl
dec
adc
icebp
adc
lret
cmpsb
jle
pop
int3
fadds
add
lods
out
inc
neg
adc
xor
lock
dec
mov
emms
mov
xlat
scas
inc
jae
jo
or
push
push
dec
add
aam
in
loope
insb
in
out
cmova
jns
ja
pop
fisttps
push
sub
xchg
jno
and
cmp
les
stc
xor
fwait
push
xchg
popf
push
cmovns
add
gs
dec
dec
aad
push
call
push
mov
loop
loopne
cmp
hlt
in
sti
sub
cmp
lcall
xchg
add
rorl
into
sub
in
dec
sub
pop
jb
pop
dec
lock
in
inc
dec
mov
push
xor
jns
scas
jno
lds
insb
pop
scas
cmp
aad
icebp
loope
push
inc
jb
jae
aad
push
sbb
mov
pop
mov
xor
pop
push
cmp
loopne
ror
mov
jno
ds
jnp
jae
scas
stos
xchg
xchg
xor
mov
lcall
aam
arpl
mov
adc
insb
leave
pusha
xchg
cmpsb
out
incl
inc
insb
inc
repnz
inc
push
mov
xchg
sub
dec
dec
shrb
rcll
sahf
jo
out
mov
and
lds
xchg
out
inc
xor
out
xor
dec
lret
outsl
mov
pop
fnsave
cmp
mov
mov
outsl
jmp
les
push
xchg
pop
mov
jle
shll
add
sub
mov
roll
xorb
inc
movsl
fxch
cmpsl
cmpsb
divb
add
jl
ljmp
add
pop
insb
aad
sub
test
mov
sahf
mov
mov
dec
les
inc
pop
rcll
push
cmp
lcall
es
sbb
gs
out
jecxz
iret
adc
jae
adc
or
and
les
enter
into
into
jnp
pop
xor
xorl
mov
sbbb
sub
mov
sbb
mov
xlat
movsb
or
retw
pop
xchg
loop
lock
pop
push
jle
shll
pusha
cs
fldl
inc
insb
adc
aaa
xlat
xchg
push
test
repz
or
movsb
xchg
xor
lds
jmp
mov
push
test
cmp
fcomp
dec
cmp
loop
pop
pushf
mov
mov
rcrb
pop
int
push
addr16
sarb
in
mov
xchg
test
fs
or
lahf
jecxz
add
mov
shrb
mov
pop
push
repz
jnp
jmp
adcl
sbb
dec
lcall
pop
js
xchg
lds
mov
xchg
out
sbb
sub
adc
cmp
mov
xchg
outsb
pop
push
sahf
lds
xor
push
jb
out
and
sub
jmp
dec
and
mov
test
inc
dec
dec
mov
mov
dec
rclb
pop
mov
mov
and
push
adc
push
or
push
xchg
push
dec
lahf
ffreep
and
mov
dec
test
enter
sbbl
dec
test
mov
js
and
jb
scas
xchg
sbb
sbb
repnz
loop
mov
xchg
sbb
jae
cmp
mov
ret
inc
xchg
add
cld
xor
outsb
push
mov
out
pop
fmul
jg
sub
jmp
scas
fiadds
lods
xor
lea
push
fisubl
imul
inc
pop
cld
mov
lea
lods
xchg
lea
sub
rcll
sub
and
repnz
push
outsb
bnd
repz
inc
xor
lret
in
jb
ljmp
dec
cmpxchg
cmp
iret
repnz
cld
dec
shl
in
stc
dec
lods
mov
sbb
dec
lret
or
pop
sub
push
popa
pop
pushf
aam
xor
repz
dec
cltd
fdivr
pop
fdiv
cmpsb
mov
shr
lahf
arpl
dec
inc
lea
loop
cmc
cmp
sbb
or
or
or
data16
mov
or
sub
ret
out
push
outsb
adc
icebp
adc
rcll
jb
or
push
das
mov
add
sub
inc
js
repnz
movsl
loope
dec
mov
loopne
data16
cs
dec
mov
pop
cmp
pop
or
pop
jns
adc
mov
cmp
ljmp
pop
xchg
pop
repz
rorb
mov
pop
inc
jp
ljmp
fstps
jae
shll
inc
pushf
sub
jb
xchg
aaa
cmp
scas
push
lds
movsl
sbb
lcall
xchg
les
jb
or
or
das
ret
std
mov
ficoml
cmp
int3
clc
fs
cmp
push
adc
inc
jp
movsl
jne
push
daa
rcrb
add
mov
adc
mov
addb
xor
cmp
sub
inc
xor
stos
fildll
pop
cmpb
call
mov
add
dec
lds
mov
int3
test
jmp
pop
and
sub
pusha
dec
jl
lea
mov
cmp
xchg
movsl
cmp
mov
jne
in
sti
add
pop
mov
test
lret
and
int
pushf
imul
movsb
repnz
jns
or
adc
xor
mov
push
xchg
add
adcb
repz
shlb
and
pop
sub
sbb
outsb
inc
push
fcoml
and
dec
movb
test
je
or
push
pop
xchg
cmc
jp
inc
or
shlb
mov
rcrb
and
pushf
pushf
loope
sub
sahf
mov
mov
int3
mov
addr16
fcoml
xor
mov
mov
enter
xchg
xlat
pop
js
int
lock
outsl
cld
loope
xor
dec
sahf
data16
inc
or
inc
inc
lods
andb
lods
pushf
push
outsl
inc
pop
lea
and
cmc
pop
jbe
loope
fdivs
xor
xchg
in
ss
mov
popa
mov
sbb
es
cmpb
dec
in
icebp
iret
pop
mov
lret
lea
or
pop
jle
movups
aas
inc
jno
sbb
vmaxpd
mov
and
icebp
shrl
movsl
out
outsb
shl
fsubp
testb
icebp
jbe
sub
aad
mov
adc
cmp
push
dec
mov
sbb
inc
jnp
lods
out
mov
es
pop
xchg
test
jge
lcall
scas
inc
shrl
mov
lds
call
in
bound
mov
scas
aas
mov
pop
pusha
push
inc
mov
fdivs
push
rcl
adc
xchg
add
outsl
xchg
jmp
je
pop
xchg
hlt
dec
mov
nop
add
int3
push
lods
sbb
sub
add
in
mov
nop
nop
je
mov
xchg
push
xor
testl
dec
imul
pop
mov
out
cmpsl
addr16
lret
sub
mov
mov
shr
mov
dec
aaa
mov
hlt
stc
jp,pn
andb
cmp
mov
fs
push
lods
jle
mov
enter
daa
mov
adc
les
call
cs
lock
jnp
call
mov
pop
xchg
mov
sub
popf
dec
push
std
xor
call
dec
in
clc
out
inc
pop
out
mov
dec
adcl
lods
lods
aas
sbb
mov
jnp
pop
fcoms
jo
push
add
and
aaa
add
adc
pop
inc
jbe
lods
dec
loop
sub
add
add
xchg
jmp
jns
lea
lret
mov
test
jns
push
and
dec
mov
jmp
push
add
adc
hlt
imul
insb
shl
sub
ss
mov
inc
pop
xchg
inc
pop
mov
rcll
rcr
adc
sub
xchg
ss
cmp
xor
addr16
pop
in
jmp
shr
mov
movsb
cmpsl
jo
cmp
nop
pop
insb
mov
push
andl
clc
inc
ss
inc
and
mov
pushf
jmp
jl
and
mov
and
fldl
push
push
fwait
fwait
int3
aas
or
dec
jp
movsb
repnz
out
scas
jne
ljmp
push
sahf
int
push
pop
xchg
jnp
repnz
mov
repz
mov
fs
push
or
ja
int3
popf
inc
cmp
and
jbe
cli
sbb
fwait
aaa
push
int3
cmp
cwtl
mov
and
jl
adc
inc
jnp
test
xchg
mov
sbb
jbe
stos
mul
pop
add
jbe
push
adc
sbb
into
xor
push
add
jns
es
jg
es
testl
cmp
jmp
xor
leave
arpl
iret
pop
rorb
in
and
fstps
or
loope
cmpsl
ljmp
push
mov
lods
jne
cmp
mov
scas
int
cmp
and
mov
push
loop
ss
mov
das
sbb
aaa
ftst
and
in
fmull
push
dec
pop
jecxz
fcoms
dec
les
sbb
icebp
sub
cmp
sub
je
movl
arpl
dec
idivl
lock
sbb
ss
adc
lock
add
or
dec
inc
data16
div
mov
adc
mov
out
mov
popf
sub
in
sti
mov
and
xchg
shlb
sbb
push
mov
rclb
outsl
jno
lret
adc
push
sarl
int3
imul
or
xchg
lea
cmpsb
add
les
push
in
xor
mov
outsl
dec
jne
push
add
pop
sub
and
test
rcr
sub
jl
dec
jbe
sbb
jb
in
adc
dec
or
xchg
pop
jle
xchg
push
push
sub
je
sub
adc
and
orl
jno
ljmp
inc
push
mov
xor
xor
imul
aaa
inc
movsl
fwait
jmp
sub
in
jp
insb
push
enter
mov
fdivs
lcall
enter
fdivl
pusha
int3
iret
xchg
mov
shl
xchg
std
insb
mov
call
dec
rorb
popf
fdivp
mov
mov
jp
xchg
repz
jle
jge
pop
jno
aad
into
mov
cmp
and
dec
dec
jmp
rorl
dec
jmp
mov
pop
scas
mov
mov
pop
xchg
cmpsl
adc
lods
clc
jo
je
pushf
jne
arpl
mov
cmp
push
add
jns
lds
adc
ds
or
push
iret
mov
into
adcl
loopne
cmpsb
inc
mov
sbb
cmp
sbb
outsl
pop
push
pop
movsb
xor
jecxz
inc
aam
loopne
jns
cmpsb
adc
dec
mov
stos
push
leave
pop
and
rcrl
js
or
testl
loop
es
push
sub
stos
xor
dec
rcll
mov
add
in
xchg
pusha
sbb
push
jp
adc
repz
inc
pop
lea
lret
dec
mov
cmp
and
xchg
jo
lcall
test
inc
jb
dec
cltd
lret
inc
sub
jb
outsb
mov
insl
push
cmpsb
and
mov
stc
popa
lret
fxch
mov
push
adc
test
dec
in
jmp
adc
mov
sub
jmp
pop
roll
test
sub
movl
xor
sbb
test
bound
jg
mov
fs
xchg
jnp
sar
cmc
jg
inc
xchg
push
and
ljmp
cmp
add
jne
aam
dec
jno
mov
xor
popa
popf
xchg
mov
sbb
jge
shll
sub
push
fdivl
inc
adc
movsb
jno
fs
iret
repnz
in
xchg
call
outsb
add
jae
mov
xor
cmp
or
lods
push
sbb
lret
mov
cmpsl
sbb
jp
scas
test
enter
test
inc
sub
cmc
push
sub
pop
push
jp
stc
adc
lods
imul
mov
hlt
pop
xchg
fnsave
mov
xchg
or
sub
in
push
js
test
xchg
stos
in
adc
xor
enter
lcall
inc
enter
xor
in
fwait
sub
aam
rorl
push
scas
dec
push
mov
stc
cmp
push
call
clc
scas
cltd
imul
mov
into
and
lcall
jle
sub
jno
and
mov
cmp
xor
fisttps
imul
or
in
pop
test
icebp
mov
adc
cmp
ss
mov
dec
arpl
add
xchg
cmp
sub
xlat
add
scas
int
les
lea
sub
pop
push
scas
push
data16
pop
lods
adc
enter
fidivs
push
dec
js
enter
inc
inc
pushf
or
xchg
dec
stos
lea
shl
fwait
or
iret
cwtl
js
lcall
out
lock
mov
popf
out
stos
jl
mov
and
pop
dec
scas
push
nop
mov
mov
push
int3
or
cmp
repz
ret
mov
adc
popa
mov
mov
out
mov
cmp
loop
aad
push
pop
in
mov
sbb
jecxz
leave
int3
dec
or
rclb
cmpsl
dec
aam
sub
mov
xchg
ret
das
sbb
int3
pop
sub
jo
xchg
adc
or
or
fistl
sub
mov
rcrb
loope
shr
scas
jle
sub
mov
jmp
pushf
push
ljmp
adc
subl
push
lret
inc
and
cmp
or
pop
aas
inc
fwait
stos
bound
out
jle
outsl
out
dec
sub
addr16
mov
ficoml
mov
jnp
dec
mov
mov
idivl
pop
sbb
mov
jp
fwait
inc
addr16
mov
xchg
dec
and
mov
mov
insl
aad
jb
mov
imul
inc
cmc
lock
mov
popa
push
int3
shlb
sub
mov
mov
push
popf
xchg
aad
jae
sbb
adc
and
push
shl
sub
and
and
arpl
outsl
test
sub
cmp
mov
jnp
mov
xor
jb
fsubrp
inc
jle
and
jg
pop
js
sti
xchg
lods
sub
jb
ret
cmp
add
mov
pop
sub
push
subl
popf
leave
cwtl
sub
ljmp
or
push
cwtl
shlb
mov
in
into
call
cmpl
inc
aaa
cmp
lcall
test
iret
xor
sub
sahf
shll
filds
cmpsl
out
inc
sbb
jecxz
or
shrl
jns
xor
je,pt
inc
testl
jle
les
sbb
fwait
lds
inc
adc
ja
push
mov
adc
lahf
inc
insl
jb
pop
in
js
add
sbb
add
mov
in
jne
push
fs
stos
cmc
add
adc
ja
out
xor
push
or
mov
jl
shrl
pushf
stos
mov
popf
gs
lods
mov
mov
and
xchg
cmpl
jns
sub
or
shlb
aad
leave
popa
xchg
or
out
call
adc
movl
jp
add
lds
or
sbbl
inc
adc
mov
iret
push
out
push
outsb
or
loopne
shr
xchg
loope
push
xchg
fcmovnbe
mov
jne
mov
fidivrs
insb
movsb
and
addr16
mov
fs
inc
mov
jae
lret
push
ret
aaa
imul
sbb
das
lahf
mov
and
mov
adc
sbb
pusha
dec
jno
fwait
cmpsb
in
lods
push
and
movsb
orl
es
sub
pop
jle
fisubrl
jne
cmpsb
mov
jmp
popa
push
pushf
out
jg
cmp
jmp
mov
test
adc
mov
sbb
inc
cmpsl
pop
jno
in
out
mov
pop
imul
dec
pop
into
push
inc
cmpl
in
shlb
mov
add
nop
and
xorb
stc
lds
dec
ljmp
test
jecxz
push
pop
std
out
mov
cmpsb
and
push
cmp
jo
sub
fwait
sbb
mov
cmp
xchg
push
outsl
and
stc
mov
add
or
popf
fdivrs
cmp
xchg
pop
push
add
sub
sbb
data16
xor
and
inc
rolb
xchg
cmpsl
repnz
les
cmp
nop
rcrb
dec
xor
rcr
das
lea
movsl
cmp
clc
xchg
push
pop
ds
xor
ds
lds
sub
mov
inc
jne
cmpsl
sti
leave
sbb
push
pop
lcall
movsb
xor
sbb
and
mov
test
jmp
std
imul
inc
mov
jmp
mov
pop
dec
and
out
ss
jno
pop
jns
clc
pusha
mov
push
test
rorl
mov
push
mov
stos
daa
into
inc
inc
std
test
subb
lds
pop
and
dec
xor
lret
push
ds
cmp
sbb
pop
ss
xchg
xorb
add
int
testb
or
add
and
movsb
mov
lret
test
incl
addb
rcll
xor
dec
sti
xor
xchg
cmpsb
cmp
lret
push
outsl
or
dec
xor
cmp
ficoms
jl
aam
cmpb
push
in
insb
add
jo
ret
roll
or
aaa
pop
jmp
dec
and
mov
gs
dec
dec
scas
mov
or
jno
cmp
dec
push
shrl
sub
mov
call
jnp
dec
mov
mov
mov
inc
adc
shr
sbb
iret
xchg
out
lahf
pop
test
or
sbb
sub
enter
cld
add
and
cmp
cs
mov
or
cmp
js
xor
imul
xchg
stc
or
push
mov
or
mov
popa
mull
jg
fdivrs
inc
aam
push
jp
and
mov
inc
and
adc
leave
loope
shll
es
ja
in
adc
jecxz
lcall
incl
dec
cmpsl
nopl
mov
dec
enter
cmp
pop
cmp
call
jbe
mov
imul
scas
dec
cmp
mov
and
aaa
cltd
mov
out
push
rcl
lret
rsqrtps
and
push
stos
cmp
push
sbb
xchg
mov
fidivrs
push
cmc
fnsave
out
cmp
rclb
in
push
scas
sub
cwtl
xchg
insl
cli
imul
inc
push
and
jnp
pop
shl
insb
adc
sbb
sub
andl
xchg
lahf
pop
pop
jne
xor
popl
loope
and
jo
lea
dec
sbb
mov
ljmp
jg
jnp
xchg
outsb
pop
mov
test
inc
inc
repz
mov
pop
movsl
or
into
xchg
adc
stos
jne
jecxz
xchg
and
and
and
adc
jo
jmp
je
imul
faddl
daa
sbb
push
data16
xor
leave
mov
sbb
inc
xchg
adc
insb
push
add
adc
xlat
push
xor
pop
cmpsb
dec
sarb
pop
cmp
into
mov
cmp
popl
dec
into
test
sub
sub
add
push
pop
lock
jae
aas
enter
inc
mov
cmp
xor
xchg
out
cmp
jbe
push
mov
in
sbb
pop
jnp
mov
mov
push
adc
clc
jl
das
pop
xor
pop
mov
in
mov
cmpsb
mov
pop
lea
jp
mov
mov
cmpsl
push
or
imul
loop
jmp
push
mov
mov
xchg
icebp
dec
in
mov
stos
inc
push
jle
roll
subb
xchg
lahf
popa
lea
divl
movsl
inc
jb
std
jg
movb
mov
fs
jmp
xchg
test
ret
xchg
inc
cmpsl
dec
mov
sbb
repnz
pop
adc
push
and
fstpl
outsl
or
and
jle
icebp
lods
inc
lds
insb
cmpsb
imulb
mov
mov
push
xor
adc
in
add
xor
dec
enter
or
sub
rcrb
mov
dec
cmp
in
mov
pop
mov
adc
mov
mov
lock
cmpsl
mov
idivl
pop
sbb
or
sbb
dec
lds
daa
ja
aaa
movb
inc
rorl
dec
pushw
xchg
cmp
mov
pop
leave
adc
and
in
jo
lock
push
xchg
sub
pop
ds
mov
mov
dec
mov
dec
hlt
pcmpgtw
sub
dec
std
nop
pop
in
sub
sarl
jl
cmp
dec
arpl
ret
ret
aas
inc
aad
push
cmp
int
xchg
jge
xchg
out
mov
pop
push
xchg
cmp
out
mov
daa
sbb
mov
xor
inc
sbb
sub
dec
pop
sub
and
push
flds
fsubl
or
add
dec
jge
insl
or
xor
xor
pop
test
pop
pop
aam
adc
lea
add
xchg
dec
loopne
jp
dec
jge
mov
adc
mov
jbe
dec
jns
test
add
es
push
repnz
pop
outsb
out
adc
rclb
jmp
mov
or
adc
and
outsl
iret
mov
push
test
xchg
dec
mov
call
ficompl
dec
in
push
fdivrs
xchg
cwtl
int3
sbb
ret
int3
test
pop
test
push
adc
xor
in
mov
sbb
cmp
in
and
ds
das
or
mov
insl
arpl
bound
xor
sub
ljmp
mov
iret
push
dec
rcll
push
xchg
mov
daa
jmp
pushf
orb
ds
pop
mov
mov
sahf
mov
dec
mov
repz
pop
enter
adc
push
sbb
jnp
xor
dec
mov
jge
sbb
inc
clc
sbb
int
cmp
into
in
dec
into
popl
xchg
xchg
jno
add
sbb
mov
push
call
mov
daa
or
adc
fcompl
loopne
inc
test
clc
xchg
jge,pn
mov
mov
and
mov
pushf
xor
nop
in
enter
imul
pop
push
lret
jge
sub
mov
xchg
jb
ljmp
adc
adc
neg
int3
mov
notl
out
inc
lods
pusha
mov
or
pop
mov
cmpb
cmp
pop
cmp
push
sub
pop
push
in
lods
sahf
cmp
dec
jg
js
decl
mov
pop
pushf
pop
in
dec
xchg
sbb
mov
xor
cmp
sub
and
lret
aas
sbb
icebp
loope
inc
addr16
insb
mov
ljmp
jbe
jmp
pop
and
dec
sbb
cltd
mov
add
in
mov
xor
xchg
push
and
aaa
inc
insb
inc
pop
jmp
ss
mov
loopne
movsb
sub
dec
int
sub
scas
popa
movsl
pop
mov
lahf
mov
orl
repz
mov
pop
leave
jae
dec
clc
mov
sbbl
je
fiaddl
jae
inc
dec
xchg
jne
xchg
pop
loopne
test
pushf
loope
jno
decl
out
outsl
in
xor
dec
bound
and
adc
idivl
negl
scas
mov
add
mov
pop
mov
test
inc
pushf
dec
jle
cmp
dec
dec
dec
lcall
push
xor
push
cltd
adc
push
push
dec
fwait
cld
js
dec
loope
jno
idivl
enter
pop
nop
mov
add
add
lds
push
icebp
inc
cmp
ja
bswap
pop
push
push
push
orl
inc
scas
repnz
pop
lock
sub
mov
incl
lahf
jo
jae
movsl
jns
xorb
cmpsb
jmp
dec
mov
sbb
sub
das
arpl
sti
jae
jg
out
lods
adc
out
cmp
ficoms
sahf
jg
and
pusha
lds
test
jle
arpl
loopne
movsl
std
jle
dec
cmp
pop
dec
mov
pushf
ljmp
inc
cmpl
pop
sbb
pushf
push
lcall
inc
pop
int3
in
lods
mov
leave
adc
out
xlat
push
jg
or
inc
mov
in
ja
shr
jmp
es
int
nop
xchg
pop
dec
dec
xchg
inc
mov
scas
das
push
sub
lods
cs
in
xchg
out
push
nop
cld
cld
mov
test
lock
fadds
mov
inc
lods
and
pop
inc
jmp
lret
aad
jno
lods
jb
pusha
push
push
pop
adc
xchg
inc
hlt
gs
xor
test
aad
out
jb
push
sbb
pop
mov
in
out
mov
stc
int
inc
cwtl
inc
repz
push
stos
and
nop
add
stos
mov
mov
pop
ret
imul
das
jl
cmpsl
ss
mov
das
xchg
jo
popa
push
rolb
jg
cmp
repz
shlb
and
and
pop
shl
sub
ja
push
add
jge
frstor
sahf
rcrb
cmp
loope
and
popf
into
cmpl
je
enter
xchg
xor
scas
jae
cmpsb
daa
jbe
loope
imul
pop
in
subl
jo
xchg
pop
push
repnz
sub
inc
mov
jle
push
cmp
lcall
dec
mov
sarb
dec
jno
push
or
dec
dec
sub
lahf
xlat
mov
loopne
mov
sbb
adc
roll
sub
fisubrs
movsb
jbe
xchg
add
xchg
imul
ret
lock
sti
loopne
add
sub
ret
das
mov
cmc
lcall
xchg
pop
loop
dec
test
cs
mov
inc
hlt
iret
out
xor
xchg
inc
pop
stc
adc
frstor
inc
nop
and
xchg
sbb
dec
jge
rcl
adc
dec
mov
adc
xor
or
jge
and
scas
dec
fwait
or
mov
pusha
inc
outsl
push
jnp
sub
loop
sub
mov
adc
fwait
and
jne
mov
mov
and
jae
and
and
sbb
adc
sbb
and
add
cltd
xchg
insl
and
stos
movsb
pusha
lock
pop
mov
inc
pushf
cmp
movsl
mov
inc
xchg
cmc
xor
nop
divl
jl
icebp
jp
and
aas
sub
dec
pop
lret
mov
sbb
and
in
and
mov
je
and
jecxz
insb
cmp
loop
jae
movsl
cwtl
cmpsl
in
enter
jnp
pop
add
cmpsl
jbe
add
mov
mov
cmpsl
mov
sub
jb
shrl
pop
mov
addb
pusha
cmp
sarl
imul
jl
jecxz
cmp
xor
rcrb
push
cmp
imulb
jecxz
mov
pop
in
inc
notl
and
movsb
cmp
aam
test
lea
scas
fmul
test
loopne
mov
add
mov
or
arpl
iret
and
pop
rclb
popf
mov
mov
insl
jmp
add
dec
xchg
pop
cmp
xor
lahf
mov
mov
push
cmp
scas
aad
cltd
enter
and
pop
mov
aaa
in
and
clc
xor
xchg
cmp
sahf
push
testb
adc
in
xchg
stos
sahf
aad
arpl
cs
mov
dec
movsb
cmpsb
insb
mov
mov
and
int3
leave
mov
dec
xchg
inc
insb
xchg
xchg
add
jmp
jne
mov
loopne
inc
into
push
sbb
pusha
dec
in
lds
mov
sub
iret
sbbl
int3
out
out
daa
jl
je
enter
out
loope
ja
jle
jb
jp
aaa
test
mov
test
imul
jle
lcall
lea
pop
fstpt
lret
std
out
and
and
mov
lahf
mov
testl
jae
fistpll
jno
add
pusha
xor
pop
div
inc
in
iret
cld
jecxz
xlat
or
xorl
lea
xchg
lcall
sbb
dec
dec
mov
iret
loope
fs
mov
or
aad
aad
inc
std
mov
mov
mov
sbb
adc
mov
mov
out
xor
movsl
test
repnz
mov
cld
push
cmp
adc
lods
lret
jge
pop
jg
lcall
inc
lret
jbe
call
jmp
xchg
faddl
xchg
mov
pop
fwait
sub
je
leave
test
fcmovnb
mov
jecxz
mov
add
or
fdivl
cmp
or
xor
adc
mov
arpl
inc
cwtl
sbb
aas
xchg
cld
mov
sub
call
push
mov
mov
pusha
and
sti
lahf
pop
jae
loopne
mov
cwtl
push
cwtl
add
clc
adc
rcrb
addr16
xchg
ret
sbb
out
fdivs
test
iret
fldt
loop
and
xor
outsb
push
fsubrl
push
mov
les
mov
mov
xor
sub
test
pop
subl
pop
mov
repnz
out
addr16
popf
and
xchg
push
inc
cmp
mov
lret
sub
sub
ficomps
mov
rorb
int
movsl
sbb
jle
aad
pop
xlat
add
fisubrl
out
scas
call
add
jns
arpl
test
cmp
jl
fwait
and
mov
dec
ss
mov
and
pop
lret
jno
insb
add
xchg
into
mov
xchg
sub
in
mov
imul
es
shrb
cmpsl
or
inc
jae
test
es
jbe
mov
in
mov
mov
lret
adc
pusha
adc
bswap
loopne
dec
scas
push
mov
fcoml
adc
mov
stos
inc
sbbl
repnz
mov
mov
mov
ss
sarl
cmp
enter
or
hlt
adc
mov
mov
mov
sti
sbb
mov
lods
sti
xchg
bound
cmp
lret
out
cld
xchg
hlt
sar
out
in
aaa
fistpll
sahf
aaa
call
int
mov
pop
je
popf
dec
xchg
inc
push
int
aad
cld
andb
imull
xchg
cmp
lea
cmp
cmp
mov
scas
das
and
lds
sbb
push
shlb
inc
cmpl
out
jnp
into
add
ljmp
pop
in
inc
lds
sbb
mov
inc
jl
or
inc
and
rcr
push
add
push
loope
jge
test
sahf
dec
mov
loope
adc
sub
hlt
push
lds
push
push
lret
imul
cmp
mov
int
mov
dec
mov
cld
testb
cld
fstps
out
shr
push
sbb
or
test
in
push
push
fimull
inc
push
into
orl
xchg
lods
mov
adc
mulb
idiv
jbe
nop
loopne
inc
xor
ja
lcall
enter
movsl
cmpsb
sbb
sub
cmp
adc
test
push
cli
xor
ljmp
outsb
into
cmp
xchg
push
jg
in
leave
data16
fmuls
je
mov
insl
jne
ret
push
adcb
daa
pop
inc
xor
dec
daa
popf
mov
add
in
outsb
mov
cs
pop
mov
addr16
xor
add
insl
sti
daa
lock
add
xorb
mov
sub
push
sub
shlb
jo
and
or
popf
popf
mov
dec
sub
xchg
adc
aad
icebp
fcoml
push
sahf
lods
repz
add
cmpsl
dec
nop
in
xchg
inc
rorl
stos
pop
adc
cld
jmp
test
mov
ljmp
cmp
bound
fidivrs
pop
outsl
xor
sub
inc
push
xchg
pop
repz
xor
or
pop
lods
fildll
int3
adc
cwtl
repnz
lods
rol
sub
sti
jmp
xchg
decb
shll
out
mov
sti
sbb
add
outsl
jl
ds
and
es
decl
lret
out
flds
dec
mov
sub
dec
lahf
ss
lock
popf
lahf
or
xchg
loope
push
push
std
pushf
cmp
push
pushf
push
das
mov
and
mov
mov
mov
dec
fistpl
jo
pop
pop
lds
xchg
mov
int
in
dec
xor
mov
popa
sub
rorb
test
mov
mov
sub
imul
das
popf
or
ret
orl
mov
inc
movsb
xchg
ret
or
jle
xchg
loop
xor
icebp
andb
lcall
sbb
outsl
inc
or
xchg
pop
mov
inc
push
ja
in
stos
cmp
add
inc
dec
lcall
hlt
push
test
fcom
ret
jg
push
mov
xor
pushf
pop
gs
mov
dec
std
dec
mov
xchg
mov
jle
das
stc
fldl
push
mov
out
cmp
push
or
je
sub
pop
cwtl
out
pop
jae
sbb
fistps
push
leave
sbb
notb
ret
cmc
and
dec
mov
outsl
jmp
xchg
in
leave
outsl
or
jecxz
negl
sub
and
ljmp
or
aad
xchg
mov
jle
rcll
sub
xor
stos
data16
ja
dec
arpl
xchg
add
push
sbb
lret
pop
jnp
xor
fisubs
jae
mov
jp
add
dec
inc
lcall
sub
mov
pop
push
call
adc
inc
xlat
lds
insb
loope
cmp
pusha
sub
fnstcw
xchg
xor
pop
je
pop
icebp
pop
subb
sahf
mov
mov
add
mov
lods
sbb
sti
sbb
outsb
mov
dec
push
adc
cli
scas
and
ficoml
jge
mov
jo
bound
ljmp
out
ret
inc
bound
insl
cmc
addb
sbb
push
jns
es
cld
ds
addb
add
lods
ret
cmpsb
test
sbb
add
pop
push
addl
xlat
sahf
enter
fcmovb
xor
rolb
ret
in
xlat
test
sbb
xor
push
popa
in
inc
xchg
das
mov
add
inc
sub
add
push
test
jae
push
sbb
adc
xchg
jno
fwait
movsl
fists
cli
lcall
ss
je
sub
inc
ret
dec
orl
dec
dec
pop
sahf
add
and
sbb
push
mov
mov
nop
xchg
pop
push
mov
jns
sti
push
xchg
xchg
xchg
je
out
movq
notl
mov
jbe
mov
scas
add
jne
adcb
sbb
lret
popa
mov
or
jnp
push
mov
inc
bound
repnz
jl
jo
push
mov
popf
sarb
cltd
xor
sub
or
xchg
inc
out
push
push
cmp
js
imulb
movsb
rorl
mov
inc
pusha
adc
push
jbe
mov
adc
sub
shlb
outsb
movsl
pop
push
xchg
inc
in
imul
sub
cs
mov
mul
jb
sbb
sub
push
cltd
push
test
and
movsl
jge
inc
out
add
mov
movsl
ucomiss
ds
aam
arpl
sti
jge
nop
xchg
and
clc
sub
mov
or
mov
dec
cmp
fisubl
aad
repz
test
test
xor
or
stc
mov
hlt
aas
or
fcmovnu
add
ret
lock
or
movsb
sub
bound
sti
subl
mov
xchg
ficoml
xchg
inc
mov
or
cli
sbb
jns
fsubrl
or
mov
insb
dec
es
inc
inc
lods
add
rdtsc
movsb
fs
lahf
daa
pinsrw
loopne
orl
cmpsl
add
xchg
std
shrb
mov
dec
cmp
sbb
scas
push
sub
sbb
fwait
mov
dec
out
fsubrl
push
push
fisubrl
scas
cwtl
cmpsl
icebp
out
fcmove
mov
sbb
in
mov
aad
sub
inc
cmp
dec
stos
fimull
mov
adc
sbb
and
mov
xor
scas
ja
inc
mov
cmp
cmp
push
push
test
sub
loop
dec
sub
loop
mov
test
sub
fwait
mov
outsb
lcall
mov
ds
and
mov
ja
mov
fistps
loopne
mov
aaa
cmp
push
in
mov
mov
hlt
cmpsb
cmpsl
and
mov
dec
out
lcall
repz
xor
outsb
mov
jbe
xorb
cmp
add
push
mov
in
mov
xor
loope
insl
mov
pop
adc
sar
add
sub
xor
inc
dec
mov
and
xor
clc
or
out
jge
fcmove
bswap
add
add
je
dec
push
insb
add
repz
pop
adc
in
out
sub
push
es
roll
push
mov
cmc
adc
inc
daa
ror
arpl
and
xor
dec
inc
sbb
xchg
or
call
fdivr
sub
fdivr
mov
cwtl
sahf
repz
xor
mov
jo
or
into
add
adc
push
xchg
jns
dec
ja
in
out
cmp
pop
repz
dec
fwait
xor
pop
lods
js
pop
bound
aad
inc
xchg
push
mov
in
in
cs
out
mov
subb
add
cwtl
xlat
xor
enter
cmpsb
jo
jmp
adc
loopne
push
or
or
cld
flds
imul
sub
sahf
jg
adc
stos
mov
jno
scas
and
icebp
cmp
lret
push
test
mov
jbe
mov
mov
out
mov
es
dec
adc
arpl
xchg
or
push
in
imul
inc
fs
push
lods
fsubl
smsw
dec
lret
mov
out
std
push
mov
insl
pop
fstl
lock
stos
iret
aam
xor
mov
lret
popf
lahf
cmp
xchg
stos
add
roll
movsb
ficoms
xor
arpl
jne
lds
xchg
cmp
test
or
bound
mov
sub
mov
icebp
pop
dec
popa
ficomps
jae
push
inc
sbb
and
sub
adc
shll
daa
inc
jp
fdivrs
nop
test
lods
and
add
les
dec
and
aaa
sub
push
lods
xlat
int3
insl
fyl2x
mov
add
rcrb
pop
sahf
pop
loope
ret
sub
out
cld
or
aad
loope
std
ficoml
cmpsb
ret
mov
push
xchg
xor
xchg
xlat
push
arpl
shll
gs
jb
lds
fsub
sub
les
rcll
adc
add
aad
xchg
push
mov
mov
jp
aaa
adc
dec
jge
repz
pop
nop
inc
stos
fwait
jge
inc
pop
mov
fisubs
call
inc
xor
and
shl
scas
popl
mulb
fwait
push
xor
adc
scas
leave
mov
popa
and
je
mov
push
lahf
sub
push
or
or
in
cmp
pusha
mov
push
ret
push
cli
mov
cmp
xlat
and
ret
aad
jmp
insl
xor
jns
jne
aaa
data16
lods
call
aaa
pop
or
xor
xor
pop
cmc
ds
incb
hlt
ror
andl
xchg
loope
ljmp
cmp
dec
push
rol
enter
mov
daa
lcall
aad
hlt
ss
test
mov
push
xor
jne
imul
aaa
call
fisubs
and
dec
mov
lret
lcall
mov
sbb
push
dec
ret
adc
xor
in
and
jle
in
mov
lock
loopne
inc
aam
outsb
xlat
and
lcall
lods
inc
jmp
xor
insb
sbb
dec
pop
in
sbb
pop
in
aad
negl
dec
sets
int3
ds
ds
aas
out
mov
sbb
xchg
shll
fists
sub
jb
inc
pop
jno
xor
dec
stos
sbb
or
push
adc
out
mov
sbb
stos
mov
aad
test
sahf
int3
inc
imul
sbb
and
or
adc
sahf
jb
mov
movsl
xchg
push
push
dec
popf
jp
dec
jb
fs
pusha
in
pop
jge
mov
mov
push
cmp
clc
mov
iret
in
fdivp
aas
shrl
pop
and
or
cli
popa
jae
mov
fs
pop
or
xchg
adc
shr
arpl
mov
in
mov
sahf
sub
sbb
fwait
push
pop
pop
orl
lahf
adcl
cmp
mov
cmp
inc
and
lahf
stos
sbb
leave
into
xchg
jp
mov
pop
cmp
fucom
xor
daa
shrb
jae
fs
lock
pop
sub
pop
jp
mov
test
cmovl
cmp
jecxz
pop
push
jl
push
pop
push
cld
icebp
and
jne
and
pop
mov
mov
sub
jecxz
pusha
sahf
and
test
je
inc
inc
ds
cmpsb
test
jg
cmpsb
mov
pop
dec
mov
and
into
adc
into
not
xchg
ja
sub
ds
lahf
fs
cmp
int3
push
dec
lahf
xor
fistps
and
xchg
clc
jmp
jnp
repz
pop
sarl
cwtl
xor
xchg
or
push
shlb
pop
mov
jl
xchg
loop
int3
and
pop
fidivrl
jmp
sub
rol
dec
iret
add
scas
pop
imul
negb
xchg
dec
repnz
negl
out
mov
adc
fsubrl
cmp
jp
in
out
fdivr
add
dec
addr16
mov
iret
mov
add
dec
mov
movsl
roll
mov
aaa
wbinvd
jne
test
pop
push
mov
nop
push
mov
jp
cli
and
mov
mov
out
jp
sti
sub
rclb
xchg
popa
xor
iret
sbb
inc
mov
jb
movsl
jno
push
jno
nop
cmpsl
xchg
add
sahf
and
cmpb
adc
jp
jge
insl
mov
or
jae
bound
adc
sbb
mov
adc
dec
out
js
jo
xlat
cmp
jae
iret
mov
in
popf
mov
andb
and
mov
push
mov
call
cmpsl
dec
sub
push
ficomps
xor
loop
mov
imul
jnp
pop
pop
sbb
dec
dec
xchg
aam
sub
inc
push
adc
push
inc
jae
sbb
push
imul
jp
movsl
sbb
push
jns
mov
and
push
ret
jecxz
int
add
jns
movsl
add
sti
and
fisttpl
mov
aam
add
pop
stc
outsl
incb
pop
push
mov
mull
xor
pop
call
push
mov
lock
out
sahf
sbb
xor
push
lods
fwait
cwtl
or
adc
mov
or
leave
cmpsl
jo
sbb
lock
xchg
pop
xor
test
xor
or
leave
cld
adc
pusha
mov
inc
sub
and
jo
js
notl
sub
cltd
sarb
xchg
inc
ret
outsb
aad
push
popa
lret
je
ja
lret
into
frstor
pusha
lret
pop
xor
dec
push
jl
sti
dec
dec
fistl
call
dec
fcoml
lret
loop
rcrl
cmpsb
adc
xor
push
sbb
inc
sub
jge
fisubl
cli
cmp
jo
jp
push
imul
adc
dec
dec
out
inc
int
jg
test
movsb
add
mov
jne
sub
lods
scas
imul
or
out
rcrb
inc
paddd
push
lcall
lret
dec
cwtl
add
decl
negb
push
cwtl
pop
mov
adc
lret
movsb
mov
into
cmp
es
cmp
cmp
inc
push
push
cs
in
cmpsl
lods
ret
inc
jb
cli
rcll
test
jnp
ret
jno
or
dec
iret
call
movl
cmp
stc
push
jg
jae
lret
lea
out
or
jmp
dec
andl
ss
mov
jo
out
mov
inc
mov
inc
jmp
lea
fistps
sbb
push
push
jae
es
push
jle
push
mov
jnp
jp
push
pop
jnp
loop
mov
int
fs
int
xchg
decl
or
fiadds
fmuls
and
scas
in
pop
aaa
xchg
xchg
sbb
ret
mov
int3
mov
int
clc
sahf
push
xchg
cmp
cmp
testb
std
shrl
shlb
inc
push
inc
insl
lods
mov
movsl
mov
or
pop
jp
sub
lods
or
out
lock
movsb
insl
dec
xor
dec
cltd
push
or
imul
bound
xor
insl
dec
lret
ljmp
subl
jle
jo
mov
inc
cld
sti
imul
negl
inc
xorl
mov
and
or
adcl
daa
rclb
xor
jge
add
jo
lcall
int3
mov
sti
mov
fistl
push
ds
dec
int
negl
cld
mov
sti
mov
mov
pop
jae
pop
clc
mov
iret
adc
bound
cmp
add
mov
and
imul
pop
add
jp
pop
repz
into
xor
inc
nop
push
lcall
rorl
sub
lcall
ret
pop
out
aam
adc
stos
punpckldq
ror
fcomi
aaa
hlt
cltd
fs
test
lock
repz
and
fwait
cmp
shlb
dec
ret
inc
xor
ret
mov
sbbb
lret
jae
int
mov
into
mov
insb
pushl
sti
sti
gs
xchg
sbb
adc
mov
jmp
mov
int
test
add
add
sub
mov
loop
cmpl
dec
sub
testl
addr16
idivl
imul
inc
jne
testb
jb
call
push
push
pop
pop
cmpsl
fsubr
add
hlt
std
test
inc
test
push
arpl
daa
jo
dec
or
lock
mov
mov
int3
out
fadds
ss
cld
daa
stos
jbe
sub
fsub
pushf
mov
std
cmc
sub
aam
inc
adc
xchg
mov
adc
faddl
cmp
sbb
xchg
std
aad
fmull
mov
sbb
push
push
dec
lock
sub
push
cmc
xchg
ds
add
adc
add
and
mov
adc
pop
ror
sbb
push
rcr
je
iret
xor
fsubs
insb
mov
stc
adc
inc
into
mov
add
orb
cmpsl
nop
adc
js
movb
loopne
xchg
cmp
movsb
push
arpl
cmp
mov
fsubrp
out
jl
daa
mov
gs
scas
icebp
nop
or
iret
adc
je
pop
jne
movsl
pop
push
lahf
push
mov
mov
push
add
lock
repnz
jl
jb
mov
rcll
test
cltd
inc
adc
xchg
call
ss
cmpsl
lret
cwtl
lret
pop
push
or
in
add
js
bound
mov
jg
mov
mov
insb
xor
pop
cmpl
xlat
add
pop
insl
cld
stc
negb
mov
adc
clc
add
mov
push
int
rcr
sahf
mov
je
sti
sub
cltd
bound
mov
das
addr16
add
and
outsl
jb
adc
leave
hlt
inc
mov
stc
repnz
popl
out
lods
fwait
in
and
dec
nop
sub
cmpsl
dec
adc
xchg
jg
lcall
test
cmpsl
mov
imul
push
mov
xchg
data16
and
xor
push
pop
mov
lods
sbb
xlat
pop
sbb
jns
or
pop
mov
cmpsb
mov
cmpsl
lea
cmp
sbb
cmp
pop
and
pop
fs
xchg
sub
lcall
aad
push
push
cltd
mov
lea
mov
push
xchg
popa
xchg
aas
jb
sbb
and
ljmp
and
adc
gs
lods
sbb
je
sub
sub
cwtl
push
mov
imul
pop
aad
daa
mov
loopne
cwtl
int
pop
and
popa
dec
std
ficomps
roll
mov
insl
outsb
call
xchg
hlt
jb
ja
add
pop
xchg
jae
loop
incb
jl
lods
loope
push
xchg
stos
sarl
repnz
jnp
lods
lods
push
push
sbb
dec
push
mov
mov
je
xor
xlat
adc
adc
and
pusha
mov
popf
cli
out
pusha
shll
dec
sahf
inc
mov
mov
cmp
pop
inc
lret
test
push
xor
sub
cs
jno
push
push
sbb
push
add
frstor
push
xchg
add
dec
fisttpl
clc
or
ret
xchg
das
in
cld
ja
cmp
ds
cmpsl
mov
xchg
cltd
cmpsl
int
fldt
inc
iret
xchg
out
pop
int3
icebp
dec
jg
dec
outsl
cli
cmpsl
and
sub
cmp
cmp
fidivs
stos
sub
icebp
js
scas
cmp
int
xchg
xchg
mov
xor
inc
aaa
aad
jno
arpl
aas
inc
pushf
movsl
pop
pop
data16
inc
adc
xchg
inc
fildll
pop
pop
push
or
sub
mov
in
bswap
sub
enter
adc
shll
xor
and
into
lahf
adc
test
test
jne
push
sub
popa
and
outsl
mov
test
jle
push
pop
mov
push
jg
mov
addb
pop
mov
inc
cld
adc
mov
ret
roll
sub
pusha
out
dec
mov
inc
popl
movsb
jae
aas
into
add
dec
add
jp
pop
popf
jns
fstpt
mov
icebp
cltd
push
mov
and
xor
movsb
adc
inc
inc
adc
stos
add
pop
imul
lret
roll
mov
outsb
sbbb
int
outsl
loope
jmp
inc
ret
lcall
jne
add
cmp
mov
imul
mov
dec
aas
jne
push
leave
fstl
scas
fstl
mov
retw
pop
add
in
adc
cli
popf
imul
dec
and
jne
in
faddl
repnz
fcom
ss
lcall
loopne
cmp
push
cmp
and
iret
lock
jmp
imul
pop
push
dec
clc
lds
cmp
xchg
ja
addr16
mov
ret
and
push
ds
cmp
ffreep
in
in
xchg
aam
out
cwtl
jo
mov
add
add
sbb
sub
ljmp
icebp
xchg
dec
js
ss
jns
jae
aad
jg
aas
stos
out
add
sbb
add
outsl
mov
mov
lcall
daa
std
mov
je
adc
pushf
hlt
adc
cld
inc
js
sti
stos
xor
cltd
scas
sub
in
xchg
push
jge
or
and
aaa
insb
sub
lock
lods
xchg
pop
movsl
loopne
in
xlat
pop
ret
cmp
aam
andb
movsb
inc
pop
ja
dec
and
test
stc
test
aam
mov
or
cmp
out
loopne
xor
inc
in
ret
xlat
sub
loope
fsubr
jns
mov
scas
adc
or
sub
cld
aas
adc
cltd
mov
pop
sbb
roll
xor
cmp
inc
pop
or
jmp
fs
outsb
mov
dec
aaa
mov
dec
data16
mov
ljmp
jl
pushf
in
dec
out
mov
sbb
lock
pop
pushf
rorl
pop
mov
outsb
mov
adc
das
ss
sub
mov
push
testl
xchg
push
jmp
jnp
ljmp
fdivrl
push
mov
mov
nop
jle
fnsave
sbb
imulb
int3
daa
push
dec
sahf
stos
lcall
lea
adcl
jnp
inc
adc
inc
jne
scas
rclb
ret
pop
jnp
stos
mov
push
mov
adc
test
popf
into
pusha
inc
pusha
inc
clc
cli
in
inc
clc
mov
lods
mov
les
push
adcb
sbb
adc
lds
jmp
lret
out
out
aad
jbe
daa
mov
dec
dec
cmp
push
jmp
xchg
push
ret
jnp
mov
in
scas
mov
xlat
push
cmc
sub
xor
je
cs
repz
aad
or
das
into
fwait
and
rcll
imul
iret
push
xchg
push
jns
mov
and
push
int
xchg
imul
stos
push
mov
dec
int3
cwtl
movsl
mov
pop
js
pop
cld
mov
cmpsb
bound
mov
dec
add
xor
xchg
mov
stc
in
jp
xor
lea
nop
dec
out
scas
pop
loope
mov
dec
into
cmp
scas
testb
insl
add
jae
dec
movsl
mov
push
cwtl
mov
lds
mov
xor
and
xor
xor
push
dec
in
push
movsl
mov
es
mov
je
dec
jne
pop
rclb
dec
jp
rcrb
lret
pop
std
and
movsb
jecxz
cmp
shrb
ss
js
movsl
adc
bound
jno
imul
pop
in
xlat
adc
fisttps
ret
add
push
pop
push
mov
jae
dec
lea
lock
add
push
add
stc
push
mov
jo
ljmp
sub
lcall
add
pop
or
or
movsl
push
imul
dec
test
lcall
inc
mov
xchg
jb
jle
mov
jecxz
push
mov
iret
adc
sub
cld
cwtl
movsb
bound
pop
mov
push
fadds
stc
pushf
mov
pushf
sub
bound
lret
xor
sbb
or
aas
mov
push
jae
rcr
repnz
lock
cmp
and
test
aas
lret
out
fcmovnb
mov
add
ffree
sbb
cltd
mov
add
negl
ret
insb
inc
icebp
push
adc
fildl
pop
pop
mov
jmp
pop
cmp
test
lds
adc
lods
or
or
js
mov
push
cli
test
sti
insl
xorl
popl
outsl
xor
dec
add
push
outsl
and
pop
inc
push
arpl
outsl
icebp
pop
pop
add
lret
mov
outsb
clc
into
xchg
incl
xor
jge
cmp
insb
test
rcll
enter
xchg
add
push
std
push
dec
mov
pop
fnstenv
mov
mov
pop
es
cmpsb
dec
mov
mov
lods
das
and
jb
mov
add
fmuls
in
outsl
or
pushf
aaa
or
icebp
pop
mov
shrl
mov
add
push
jns
inc
or
jno
mov
push
and
shlb
jbe
div
or
int3
test
scas
mov
mov
cmp
cmp
js
and
mov
ja
lcall
push
sbb
lock
fsubs
or
cmc
mov
mov
jnp
fisubrs
clc
jmp
dec
movsb
out
push
das
xor
sbb
andl
xor
into
cli
xor
lahf
pop
in
das
mov
mov
push
popf
xor
daa
popf
pop
ds
adc
push
test
test
lds
inc
xchg
push
leave
jge
lcall
addr16
sub
cmp
lods
shll
push
test
mov
adc
xchg
popa
ljmp
inc
inc
jp
add
push
or
andb
ljmp
pop
into
dec
pop
xor
mov
idivl
fs
or
and
pusha
adc
mov
xchg
adc
xor
test
lea
aaa
mov
scas
lock
mov
aas
sub
jne
stc
add
pushl
ds
cmpb
sub
or
xor
inc
xchg
loopne
out
rcl
inc
into
xchg
fidivrl
sarb
fcmove
lcall
mov
push
xor
pusha
dec
in
inc
adc
fcoms
sbb
loope
sub
sbb
cltd
sbb
and
gs
mov
lock
inc
in
movsb
int3
ja
out
inc
lcall
mov
sub
loopne
or
fcmovnbe
shll
adc
gs
push
icebp
jp
sub
pushf
dec
fs
rol
push
adc
ss
dec
mov
or
lods
pop
scas
mov
ljmp
pop
scas
test
dec
cli
inc
jg
std
xor
shrb
push
insb
xchg
inc
and
jp
cmp
xchg
xchg
sub
ljmp
adc
sub
shlb
test
outsl
cmp
cmpl
mov
les
stos
cmc
orl
adc
sub
mov
cmp
bound
lahf
dec
adcb
dec
adc
fimuls
cmp
es
jo
pop
push
inc
and
cmpsl
pop
out
lods
mov
in
lret
setl
and
ljmp
fcompl
pop
sbb
adc
repz
rcr
sub
pop
roll
mov
xorb
push
mov
adc
std
int3
pop
pusha
mov
aas
into
and
inc
push
xchg
call
adc
push
ja
fs
sbb
pop
mov
and
or
popf
mov
pop
popf
pop
mov
out
or
xchg
lods
sub
pop
dec
decb
xchg
rol
xchg
mov
sub
mov
mov
aad
push
jmp
lea
xor
adc
push
sbb
mov
rorb
mov
ds
in
mov
mov
fwait
jb
aaa
mov
mov
inc
xor
mov
clc
mov
imul
cmp
adc
lcall
sbb
fstl
or
pop
add
lahf
mov
xchg
pop
mov
xchg
sub
fisubrs
inc
adc
icebp
movsb
addr16
outsl
jno
mov
xchg
push
ds
aas
pop
or
or
push
rcr
leave
inc
sub
adc
ljmp
ret
cwtl
or
or
arpl
mov
mov
shl
adc
mov
bound
jb
pop
sub
scas
mov
arpl
xchg
jbe
leave
ret
cmpsb
xchg
mov
filds
scas
imul
sub
pop
rcl
sbb
shll
nop
push
imul
scas
cmp
int3
or
shrl
pop
je
pop
sub
test
pop
mov
aas
es
xchg
push
sub
pushl
popl
push
mov
fildl
dec
je
stc
pop
stc
les
hlt
jbe
cmpsb
mov
push
mov
sbb
test
bound
cmpsl
inc
scas
enter
xchg
mov
out
pop
xchg
push
jg
int
inc
jmp
bound
mov
push
dec
cmp
xor
ret
fsub
ret
aad
sbb
mov
xchg
pushf
clc
push
mov
in
pop
int
into
shlb
cmpsl
gs
add
mov
pop
jge
jg
pop
cs
pinsrw
mov
inc
xchg
inc
push
into
test
imul
xchg
repz
push
inc
sub
xchg
adc
movsl
in
rclb
jmp
pushf
insl
add
sbb
or
cmpsb
xchg
lock
sbb
fstps
add
adc
divl
add
gs
dec
mov
dec
mov
fnstsw
aas
inc
in
pop
not
shl
repnz
add
cmpsl
mov
push
movsl
ret
iret
adc
movsb
repz
mov
sub
cmp
pop
int
jmp
mov
push
mov
pop
dec
mov
insl
jns
test
outsl
test
lahf
pop
lret
shld
jp
and
lahf
and
sbb
xor
aas
xor
push
fbstp
jno
out
dec
xor
rorl
xor
and
mov
xor
pop
sub
in
inc
mov
cwtl
dec
rcll
cli
loopne
stos
xchg
jmp
or
mov
cmp
test
mov
pop
pop
mov
stos
pop
in
mov
cmp
jmp
fbstp
sti
mov
pusha
xlat
sub
pop
xchg
cmovns
sbb
movsl
out
mov
dec
dec
push
inc
stos
rcrb
stos
dec
xchg
xchg
les
and
and
and
incb
aaa
popa
and
fcoml
pop
mov
stos
loop
add
popa
xchg
scas
incl
shll
into
xchg
repnz
test
cmp
inc
pop
mov
add
movsb
xor
lret
adc
in
jo
sarl
leave
sbb
cmp
adc
fildll
xchg
and
nop
adc
add
cltd
stos
add
mov
push
popa
icebp
adc
xor
and
xchg
and
pop
testb
inc
xor
aas
ljmp
jg
jl
scas
push
negb
cmp
dec
iret
push
xchg
dec
sbb
out
shll
popl
or
or
and
popa
in
mov
minps
or
ficompl
or
out
ljmp
repz
sub
andl
dec
jecxz
cli
mov
int3
lcall
sar
cmp
or
cmp
cmp
pop
xor
loop
fiaddl
lds
or
sbb
cs
sub
fsts
loop
mov
movsl
test
in
loop
inc
out
jns
push
out
test
push
cld
mov
test
test
daa
push
stos
push
sarb
dec
movsl
xor
fwait
mov
jecxz
xor
xor
cmp
dec
mov
inc
test
div
dec
fnstenv
loope
mov
add
pop
pop
adc
jne
leave
mov
gs
push
insl
scas
sub
jge
jl
sub
and
loopne
mov
popa
adc
test
mov
sbb
jb
push
jnp
movb
pop
cmp
std
in
gs
sub
sub
dec
sbb
sti
add
cmpsl
and
xchg
es
cs
stos
xlat
outsb
cmpsl
clc
push
jecxz
popf
mov
cmp
out
pop
adc
addr16
mov
cmp
push
sbb
sub
dec
adc
sbb
dec
test
ret
insl
out
and
rolb
jbe
mov
inc
mov
and
mov
int
cmp
imul
sub
push
shll
aaa
sub
jae
jae
adc
inc
scas
cltd
xchg
aam
add
or
xlat
mov
mov
jae
dec
clc
mov
mov
shlb
aaa
nop
testl
fists
aam
lret
add
xchg
ds
mov
aas
add
fidivrl
sbb
pusha
shll
push
in
or
inc
mov
push
pusha
shlb
dec
aaa
icebp
cmp
out
dec
inc
lret
test
imul
push
or
push
lahf
bts
push
leave
fwait
dec
push
outsb
push
xor
pusha
fwait
roll
out
movsl
divl
xor
rclb
loop
sti
inc
jge
fldl
sub
mov
adc
lock
nop
sbb
jnp
lods
stc
test
scas
nop
mov
jp
cld
lahf
jns
inc
hlt
and
adc
test
mov
rcr
lret
stc
mov
adc
and
enter
mov
xchg
fs
sub
mov
lcall
jbe
call
sub
or
and
cli
shrl
fimuls
xorl
or
xchg
pop
in
std
cmp
fs
mov
sub
jge
jb
sahf
jae
xor
arpl
lea
cmp
mov
push
push
and
pop
cmp
outsl
jl
outsb
fnsetpm(287
test
xor
add
cmpsb
xchg
adc
movsl
ja
inc
faddp
js
push
pop
jle
loop
inc
js
test
cmc
jo
dec
cltd
mov
out
xlat
jo
ret
jno
lods
les
int3
xchg
in
jge
out
adc
dec
lods
add
jo
inc
jmp
test
xchg
clc
test
sub
adc
push
ja
and
jecxz
lahf
or
dec
shll
dec
addr16
xor
movsl
mov
dec
or
xor
mov
add
dec
ret
push
pop
nop
dec
data16
insl
je
inc
xchg
in
ret
rorl
jmpw
jbe
stos
sbb
loopne
jmp
in
movsb
cmp
lahf
lods
inc
add
and
nop
movsl
fwait
or
pop
mov
fs
sbb
mov
push
lret
cmpsl
lret
sbb
sbb
rorb
or
cwtl
push
jecxz
mov
add
push
lods
insl
pop
subl
insb
fldl
and
xchg
imul
or
call
int3
inc
jne,pn
xchg
push
rorb
jns
jno
lock
ret
dec
adc
jecxz
mov
pusha
pop
lods
xor
pop
or
dec
data16
bound
xor
sub
mov
push
movsl
or
and
push
mov
jge
fisttps
daa
pop
xchg
and
fbld
mov
hlt
dec
rol
nop
sub
aaa
into
std
call
js
cwtl
in
push
dec
movsb
mov
lahf
outsl
shrb
xchg
cltd
or
pusha
cmp
inc
cmpb
cmp
cmpsb
cmp
dec
and
push
xor
mov
or
popf
nop
arpl
aam
mov
mov
inc
sub
mov
sbb
negl
sbb
sar
fs
dec
test
lea
les
mov
ja
xchg
pusha
es
inc
mov
cmpsb
xor
aam
jns
jno
stos
and
push
or
idivl
scas
adc
icebp
mov
rorl
inc
lds
xor
packssdw
push
add
bound
ds
aas
orl
xchg
cmp
mov
jmp
jbe
push
cli
jl
out
and
call
mov
xchg
ret
or
push
mov
xor
inc
dec
xor
sub
dec
sub
in
xor
in
sbb
movsl
js
and
sbb
leave
mov
imull
loope
mov
cmp
jns
pop
cmp
mov
inc
repz
out
push
insb
mov
mov
rcrl
pop
shl
outsb
or
scas
mov
mov
inc
inc
mov
mov
mov
aaa
or
shr
sbb
dec
lea
imul
cli
dec
dec
push
mov
out
rclb
xor
add
adc
adc
xlat
adc
movmskps
cmp
out
cli
adc
cmp
xchg
test
ss
roll
mov
cmp
iret
in
mov
pushf
push
test
imul
jno
stos
mov
mov
add
in
cld
aam
int
mov
mov
mov
and
js
and
mov
mov
dec
pop
xor
sbb
out
ds
pop
data16
sbb
stos
dec
pop
pusha
shrb
or
addr16
stc
jne
rcr
bnd
add
popa
mov
pop
cmp
call
or
les
adc
xor
mov
pop
mov
add
test
ret
vpaddsb
lahf
mov
adc
push
xor
dec
fstpt
call
es
scas
outsb
test
mov
divb
repnz
outsb
sbb
inc
jne
cmp
pop
mov
fldenv
lea
push
ja
dec
add
movsb
lret
cmpsl
inc
jne
lods
cmpsb
mov
sbb
outsl
bound
or
mov
pushf
xchg
sbb
std
lret
into
ss
clc
or
sbb
call
arpl
lds
dec
sahf
add
std
iret
push
sub
push
pop
sub
mov
dec
xor
daa
cmp
fldenv
loopne
cmp
pop
or
jl
cli
sub
pop
pop
pop
js
push
mov
ja
mov
aam
jno
sbb
or
cld
pop
adc
sbb
arpl
ficompl
sbb
lock
xor
pop
pop
push
push
enter
out
add
dec
jmp
pop
jge
je
dec
jb
mov
mov
push
cmpsb
sar
outsb
les
jg
xor
decl
movsb
movsb
in
cmp
inc
ja
jmp
pop
xchg
lods
sbb
fldenv
mov
xor
dec
inc
push
inc
jb
sub
and
mov
mov
and
sbb
xor
mov
pushf
fwait
inc
or
xchg
and
repz
push
sbb
xchg
inc
in
and
imul
pop
push
pop
sbbl
std
cwtl
ret
adcl
sbbl
add
punpckhdq
inc
ja
sbb
cmp
lods
add
sub
repnz
pop
jecxz
jge
adc
loope
lcall
es
cli
pop
mov
bound
sti
and
pusha
mov
or
sub
ja
and
pop
fdivrs
jge
sbb
pop
cmp
sub
arpl
dec
aaa
sub
pop
mov
lods
xchg
jg
adc
lea
inc
rcrl
nop
xor
lock
ret
push
ret
decb
pop
push
fsubs
loop
mov
icebp
adc
push
fistpll
enter
mov
cli
add
jle
mov
mov
pusha
test
dec
in
aam
cmpsb
push
fisttpll
sahf
sub
xchg
imul
subb
xchg
xchg
jecxz
and
sbb
int3
fcoms
ljmp
mov
pop
stc
imul
xor
ffreep
je
les
sahf
push
in
jmp
cltd
and
dec
sub
adc
adc
js
incl
popa
cmp
inc
scas
icebp
fistpll
pusha
lea
mov
out
xor
fidivs
scas
jge
jbe
mov
jb
pop
pop
icebp
hlt
xchg
in
xchg
sub
cs
jnp
ljmp
jno
inc
push
jb
push
push
mov
call
jge
mov
dec
call
insl
cmp
push
xor
stc
push
les
data16
scas
sub
pushf
loope
pusha
push
dec
insb
sarl
insb
or
pop
data16
iret
sbb
out
or
cmp
mov
xchg
sub
ds
dec
inc
pop
or
dec
jno
frstpm(287
out
inc
add
jmp
call
sub
aas
bound
imull
filds
add
fstpt
jge
mov
mov
mov
push
ja
sbb
sub
push
cmp
push
inc
sbb
and
xchg
movsb
sbb
xchg
scas
push
inc
inc
cltd
iret
inc
and
adc
in
xor
lret
pop
add
test
iret
scas
adc
movsl
decl
lds
dec
or
pop
and
cmp
nop
pusha
inc
lods
popf
push
out
mov
mov
test
fistl
mov
addl
sub
nop
andl
inc
jo
cmpsl
mov
adc
push
call
das
jle
and
cmc
hlt
add
movsb
jae
std
les
cmpb
outsb
inc
scas
call
jp
mov
or
outsb
insb
test
mov
push
inc
inc
jne
test
adc
insb
sahf
mov
pop
or
into
mov
insl
add
pop
jecxz
inc
in
dec
scas
daa
aas
jns
int3
or
inc
popa
out
pop
adc
imul
out
dec
ret
adc
mov
rorb
xchg
cmpsb
push
sub
and
int
dec
pop
lea
mov
and
pop
ret
dec
sbb
jg
mov
mov
int
jno
test
xor
jl
test
pushf
cmp
pop
orl
mov
sbb
sub
cmp
cli
push
add
pop
fisubl
test
ljmp
inc
out
aas
test
leave
mov
adc
jecxz
push
rorb
repz
loop
adc
cmp
push
jl
mov
inc
inc
inc
inc
or
jle
adc
mov
mov
cli
addr16
pop
test
mov
add
adc
inc
sub
sahf
das
je
repnz
mov
shlb
sub
movsl
loopne
aam
rcl
mov
inc
pop
mov
jp
pop
mov
jbe
mov
addr16
sahf
call
push
push
pop
mov
xchg
xchg
sub
xchg
outsb
incb
mov
cmpb
iret
sbb
sub
lret
add
inc
jp
sbb
repz
imul
int3
or
cmc
fnstcw
es
imul
or
pop
pop
jl
test
popa
xor
jnp
add
shrb
test
mov
loop
cmpsb
mov
dec
mov
inc
xchg
cmpsl
movl
cmp
push
push
sub
pop
or
in
mov
mov
je
xor
dec
adc
jl
pop
mov
pop
sbb
push
into
test
mov
push
fs
adc
xor
ljmp
in
push
popf
pop
lods
cmc
jb
mov
aad
jecxz
dec
cmp
or
dec
push
stc
pop
mov
gs
and
aam
dec
ds
cltd
inc
jecxz
mov
or
mov
sahf
xchg
int
movsl
lock
iret
push
sub
dec
ror
pop
add
lock
ret
jae
jmp
add
retw
outsb
mov
stc
in
xor
mov
stc
mov
add
xor
int3
push
push
pop
mov
mov
fs
mov
and
push
mov
jne
ja
test
test
movsl
in
repz
pop
stos
lods
fadd
cs
cltd
pop
cmp
mov
ret
test
fwait
pusha
divl
ret
mov
mov
inc
ljmp
xchg
push
lcall
ror
and
push
es
cmp
fistps
stos
es
popa
xchg
test
fcom
dec
in
idivb
dec
addr16
add
jg
je
push
pop
nop
add
pop
bnd
pop
adc
mov
lahf
xor
aaa
xor
pop
mov
push
push
add
xchg
test
pop
cmp
jle
push
loop
test
loopne
lods
pop
fs
rcl
pop
test
test
pop
cmc
sub
aad
jg
movsb
lods
pop
pop
js
add
jge
movsl
pop
pushf
add
pop
enter
rcr
out
jae
popf
xor
push
es
inc
adc
mov
sub
out
repnz
jbe
sbb
ficoms
pusha
out
cmpsl
stc
inc
jnp
cltd
data16
xor
daa
and
or
popa
push
push
loop
mov
adc
loopne
addb
inc
mov
pop
dec
pop
movsl
inc
int3
inc
push
gs
jns
xor
xor
aam
dec
ljmp
sub
out
push
scas
orb
inc
test
test
jne
dec
mov
push
mov
jns
test
dec
in
lods
fsubrs
sarl
add
scas
xor
sbb
aaa
xchg
scas
fdivrs
mov
mov
icebp
mov
nop
fadds
ljmp
and
mov
ret
std
int3
inc
inc
jns
push
fildll
xchg
into
mov
decb
and
xorl
sarl
lret
lret
cmc
test
mov
xlat
push
dec
scas
test
lret
mov
jmp
and
adc
pop
dec
and
sbb
pusha
call
leave
fs
sarb
sbbl
rcl
pop
movsl
xchg
mov
rolb
fdiv
cmp
pop
push
xor
dec
or
leave
outsl
add
add
jmp
fisttps
jle
mov
into
bound
lds
mov
popf
pop
mov
add
mov
sub
mov
shll
orb
mov
outsb
mov
das
push
cmpsb
pop
sti
xlat
xor
iret
data16
xor
mov
in
cmp
loop
jmp
call
data16
jge
cmpsb
nop
out
push
mov
leave
adc
jb
xchg
lds
cmp
testb
push
mov
fbld
mov
je
xchg
jle
mov
dec
jle
rcrl
mov
loop
jb
notb
repnz
icebp
sahf
mov
mov
mov
das
pop
aas
mov
and
mov
cmp
add
and
mov
shl
sahf
add
jg
lods
pop
addr16
pop
push
sub
insb
mov
cmc
mov
mov
sub
push
add
xor
sbb
mov
jns
repz
inc
dec
cs
aam
push
fidivs
adc
mov
sub
cld
shrl
cmp
sbb
test
pusha
dec
adc
sbb
or
xchg
loopne
cmp
out
sub
shlb
cmp
lds
pop
xchg
loope
add
sub
rcll
lea
push
mov
sub
inc
sbb
xchg
and
xor
in
mov
or
pop
mov
jg
bound
mov
xchg
test
loop
add
lret
cmp
adc
fadds
or
dec
mov
repz
test
push
sbb
cmp
insb
shl
sbb
push
xchg
lds
xchg
test
or
scas
inc
jg
pop
adc
adc
jl
pop
adc
addr16
xchg
lods
mov
xchg
test
mov
hlt
mov
pop
cmpsl
xor
sub
test
jb
stc
jg
loope
sti
jb
mov
add
sbb
inc
jb
bound
mov
fiaddl
lock
adc
aam
adc
pop
push
jae
add
shrl
fstl
out
lods
mov
jecxz
mov
loope
inc
aam
out
and
jge
popw
sub
mov
ja
xchg
outsl
dec
inc
inc
rcrl
cmpsl
sub
cli
mov
sbb
repz
inc
mov
mov
nop
imul
ljmp
adc
xchg
stos
lret
or
mov
idiv
sti
sahf
jl
inc
lret
stc
or
mov
xchg
lods
hlt
mov
xor
dec
cmp
repz
sub
lahf
mov
sub
aaa
xchg
jae
pusha
test
inc
mov
pop
cmpsl
shrb
cmp
sub
add
push
mov
aam
das
dec
stos
std
aam
push
fdivl
add
sbb
pop
mov
xchg
jnp
in
mov
loop
xcrypt-ecb
cmpsl
or
jae
mov
sub
add
mov
xchg
mov
outsl
jns
scas
and
lahf
push
daa
dec
lahf
arpl
mov
lods
push
add
mov
mov
mov
xor
imul
mov
dec
xchg
push
popa
mov
mov
fmuls
xchg
and
enter
jmp
add
daa
add
push
dec
jg
jo
movsb
sbb
lea
ret
les
insl
aas
lret
scas
repz
testb
fstl
xor
lret
jle
sarb
ret
cmp
and
sub
lret
loop
inc
int
mov
mov
mov
jge
enter
add
jecxz
mov
shrd
sub
mov
data16
cmp
out
popl
adc
inc
jmp
iret
jo
lret
xor
lock
cltd
out
dec
test
aaa
shrb
mov
add
out
adc
mov
adc
js
add
clc
adc
pusha
xor
push
ss
pop
lcall
mov
xor
pop
into
pop
cmp
push
push
outsb
pop
cmp
mov
sub
push
js
rcrb
into
es
repz
lahf
inc
jge
out
push
faddl
pushf
mov
test
fstpt
or
stos
clc
jo
xor
cmpsl
hlt
jo
pushf
xor
add
imul
ret
lahf
sub
push
mov
xchg
nop
cmp
mov
clc
xor
test
xor
mov
loopne
cmpsb
sbb
mov
fcomps
pop
dec
in
lcall
and
sbb
lahf
jae
ljmp
sbb
adc
pop
or
out
pop
mov
pop
pop
pop
mov
imul
icebp
shl
push
icebp
sub
cmp
push
sbb
aad
sahf
pop
jns
popf
in
repnz
jmp
or
add
cmp
es
push
mov
stos
xchg
jne
f2xm1
hlt
lret
jg
mov
mov
ret
sub
dec
out
test
mov
or
addb
subl
sub
cmp
mov
pop
dec
mov
enter
mov
pop
in
cli
orl
push
outsl
cltd
xlat
or
adc
movsb
cltd
jl
mov
movsl
jne
dec
cltd
je
imulb
mov
std
iret
ret
out
fistpl
mov
cld
cltd
icebp
dec
lds
sbb
cmpsb
ffreep
in
pusha
in
fdivp
cli
js
leave
inc
popf
ficompl
sub
dec
jge
bound
mov
and
and
xlat
inc
xchg
pusha
ljmp
lahf
xchg
or
mov
in
pop
mov
pop
jmp
out
je
push
push
jo
dec
mov
movsl
sub
ret
adc
leave
fsubrs
sub
push
inc
sbb
jb
and
in
addr16
lods
mov
add
idivl
add
into
or
lods
xchg
test
adcb
add
lcall
fldl
cmpsl
jno
sub
test
lods
pop
aam
ret
popa
aam
jns
fnop
ss
inc
xchg
mov
xchg
lret
or
out
mov
mov
xor
fldt
mov
addl
fildll
gs
mov
dec
push
insb
mov
js
adc
fimull
sti
hlt
aam
jne
sahf
adc
cltd
fsubs
test
sub
arpl
std
push
jo
and
or
popf
lods
xor
and
and
adc
ret
aam
jge
decb
adc
and
stos
sub
and
adc
pop
ss
loop
and
or
stos
mov
jmp
xchg
jecxz
pop
mov
push
data16
out
into
pop
mov
movsl
out
jo
pushf
ficoms
popa
xor
dec
fstps
adc
iret
es
dec
cwtl
inc
add
icebp
add
dec
icebp
adc
adcb
test
push
in
pop
je
push
cmp
adc
iret
lcall
pop
mov
rcll
fcomps
jae
aad
sub
sbbl
sub
sbb
dec
push
outsb
xchg
in
mov
inc
and
mov
sub
icebp
mov
test
mov
dec
adcb
xchg
and
sarb
cmp
cs
push
test
mov
movsb
pop
jae
pop
dec
push
sub
test
xchg
popf
jno
mov
sti
mov
mov
je
gs
mov
outsl
dec
xchg
lret
xchg
aad
fildl
inc
mov
fmull
cmp
incl
mov
mov
loop
push
stos
mov
dec
hlt
mov
fdivr
mov
popf
scas
leave
xor
adc
cs
leave
dec
es
cmpsb
cmp
xlat
cld
shll
cmp
pop
shlb
repz
fstpt
or
int3
adc
cltd
rorb
jne
cmpsb
ds
test
push
jp
cmp
aam
in
sub
gs
sub
xor
dec
rcrl
inc
cmpsb
sub
in
mov
jne,pt
jmp
les
lret
nop
movsl
push
add
out
cmp
lahf
push
loop
faddl
out
push
jecxz
sbb
mov
sbb
adc
addb
cmp
clc
push
mov
aaa
push
icebp
inc
jmp
pop
xor
dec
jnp
in
sub
repz
xchg
in
fdiv
add
ljmp
add
mov
or
pop
and
aaa
mov
xlat
adc
popa
out
pop
push
outsb
xrelease
sub
std
xchg
sarl
push
xor
jmp
jge
sbb
insb
sub
imul
mov
mov
xchg
xchg
xchg
mul
ljmp
mov
push
mov
cmp
pop
out
loopne
xchg
inc
cmp
imull
div
xchg
cmp
xor
cmp
call
xor
jns
push
movsl
pop
mov
test
ljmp
pop
push
int3
adc
jne
in
in
and
test
cld
push
fs
mov
add
frstor
xchg
lret
sbb
cmp
or
dec
leavew
jecxz
stos
or
aas
imul
mov
sbb
aad
or
insl
das
adc
ror
push
xor
add
hlt
mov
testl
or
mov
in
xchg
cmp
dec
aam
mov
stos
and
jo
nop
inc
mov
mov
sbb
push
add
imul
sub
imul
cmp
lods
int3
fdivr
gs
pop
inc
xor
mov
bnd
lods
int3
or
sub
icebp
jns
push
cmpsb
mov
test
jae
iret
into
das
cmpb
out
das
rcrb
je
mov
xchg
addr16
aam
inc
sub
stos
dec
lds
leave
pop
inc
adc
stos
ja
int3
test
dec
cwtl
cs
push
pop
loope
in
cmc
lcall
iret
stc
lcall
add
aam
inc
mov
xor
cwtl
ror
hlt
stc
push
xchg
std
adc
aam
mov
arpl
imul
mov
outsb
cmp
ds
les
loope
int
sub
push
jnp
arpl
xchg
scas
clc
insb
or
sbb
fsubrp
mov
aam
or
push
push
arpl
aad
inc
arpl
outsl
mov
les
cmpsb
or
xchg
xchg
addr16
mov
fldl
lea
stos
mov
sahf
cld
outsb
testb
jmp
ret
pop
cmp
xchg
mov
sub
push
jbe
cmp
shr
into
iret
add
xlat
sub
lcall
push
sub
sub
ret
repnz
jbe
adc
add
out
adc
push
cmpsl
mov
mov
mov
stc
lret
sti
pop
mov
mov
xor
jae
sbb
lea
pop
mov
xchg
push
in
mov
cmpsb
cmp
push
das
sbb
iret
or
mov
dec
push
mov
inc
ljmp
fwait
pop
add
in
mov
ss
lret
pop
rorb
fnstcw
fldcw
pop
add
cmp
stos
data16
mov
ret
lock
loopne
cmpl
xchg
call
mov
bnd
mov
inc
xchg
cmp
loop
cltd
rolb
cmpb
push
pop
inc
mov
ja
mov
xchg
nop
pop
jb
lret
orb
and
or
ret
lds
jg
xchg
popf
xor
sub
aaa
outsl
push
hlt
fldcw
test
or
test
jb
loope
or
mov
rorb
push
mov
cmpsb
and
inc
sub
imul
shl
div
adc
call
jb
xchg
lea
inc
cwtl
and
push
xorb
bound
lock
testb
cmp
xor
mov
fcomi
and
in
fcoml
call
leave
roll
stc
add
arpl
dec
mull
sbb
fidivrs
fs
mov
in
mov
mov
mov
adc
lods
lds
test
in
cltd
xor
in
pop
sbb
push
jbe
sbb
xchg
arpl
sbb
or
xchg
rcrb
aaa
mov
cs
gs
ja
pop
mov
push
adc
pop
nop
xchg
jbe
jp
test
dec
fsubs
in
xor
pop
in
daa
xchg
sub
insl
scas
inc
sub
loop
insb
inc
sti
loope
adc
in
repnz
push
pop
sub
shlb
mov
pushf
jno
pop
dec
and
mov
add
jge
fmul
lods
pop
add
dec
lcall
je
stos
adc
fstps
mov
movsl
daa
in
mov
lcall
pop
js
xchg
cmp
fstpt
repz
lea
mov
add
sub
js
xor
mov
shr
call
fcom
mov
mov
mov
xchg
out
pop
push
out
mov
sub
mov
mov
cmp
andl
scas
mov
mov
outsl
xchg
jne
sub
mov
ljmp
outsl
lret
mov
jns
jmp
sti
sahf
xchg
push
pop
or
cmpsl
cmp
ret
andb
cld
daa
leave
dec
daa
roll
or
popa
inc
pop
add
mov
push
test
iret
xchg
in
loope
xchg
pop
jns
fwait
or
sarb
inc
mov
push
out
outsb
lock
pop
mull
jne
lock
out
mov
das
jo
das
cmp
and
mov
pop
xchg
lret
pop
cli
inc
jns
pop
push
cmpsb
mov
imul
mov
xor
push
pop
xchg
mov
xchg
mov
enter
add
push
fstpt
gs
push
icebp
sbb
mov
xchg
jne
mov
mulb
mov
cmpsb
lock
sbb
jp
jae
addr16
mov
fidivs
push
sbb
jle
xchg
xor
in
cwtl
subb
insb
scas
mov
mov
fidivrl
xchg
lods
arpl
notb
call
pop
push
adcl
add
sbb
and
mov
jnp
add
popa
pusha
add
ja
loop
insl
jne
call
mul
mov
adc
mov
dec
dec
fadd
jmp
ss
mov
inc
fbld
test
mov
lea
dec
pop
enter
jae
imul
imul
insb
arpl
jl
cmp
pop
out
cmp
cmpsl
mov
mov
ja
push
mov
xchg
mov
lcall
sbb
int3
add
cmp
jecxz
cmp
xor
sti
add
jecxz
mov
dec
jle
cmp
jmp
lret
jae
xchg
or
mov
adc
mov
jp
loope
aad
pop
jo
iret
dec
je
aad
lods
xor
push
fsubrs
nop
cwtl
call
inc
mov
ret
mov
dec
bnd
jns
pop
mov
test
mov
jo
scas
repz
aad
test
cmp
mov
lcall
out
mov
xor
sub
arpl
testl
push
cmpsb
pop
cmp
aas
test
lods
jle
sbb
xchg
or
aaa
stos
dec
popa
leave
mov
cmpsb
mov
sub
mov
cmpsb
orb
test
into
std
movsb
push
jb
mov
ret
idivl
mov
push
jae
out
jnp
sbb
scas
repnz
xchg
xchg
mov
daa
xor
sub
int3
aaa
test
adc
pop
cmp
outsb
rol
das
cmc
loop
add
cmp
sbb
jne
loop
xor
test
es
pop
cmp
ret
xor
shrl
out
xor
sub
cld
mov
cmp
sarb
mov
mov
jns,pt
insl
add
mov
inc
lods
mov
lock
add
sahf
pop
cli
jbe
aaa
jns
jne
mov
imul
push
insb
xor
or
rorl
ss
cmp
mov
or
insb
out
push
call
add
movb
xchg
adc
mov
or
mov
insl
sbb
push
int
fstl
outsb
stos
sub
push
hlt
dec
stos
or
das
pusha
int3
or
xor
in
es
outsb
mov
imul
in
sub
pop
mov
cmp
adc
testb
mov
xor
mov
inc
jecxz
xor
xor
je
sub
mov
push
cmp
or
neg
test
sub
outsb
sbb
and
hlt
lahf
mov
and
xchg
dec
pop
lods
cmp
ja
rcll
rolb
inc
das
push
jns
das
js
xchg
cmp
mov
xor
cwtl
push
lret
or
data16
orb
fcom
pop
shrb
movsb
jno
mov
divl
les
inc
mov
lcall
cmp
ja
imul
ficompl
xor
mov
cld
test
lds
sub
lcall
inc
fbstp
sub
icebp
mov
leave
xchg
lds
je
movsl
xor
aaa
add
call
test
lahf
repz
xor
push
or
mov
dec
pop
int
push
and
jg
shlb
ds
xchg
xchg
fdivr
pop
sbb
rol
jo
test
stc
and
push
and
push
push
nop
push
cmp
jb
mov
int
xchg
add
mov
in
add
addr16
push
ret
push
cmc
jb
ja
dec
scas
mov
jb
lahf
sub
xorb
jg
popa
mov
scas
cmc
adc
hlt
out
cmp
loopne
in
cmp
stos
jl
aam
or
inc
pop
xchg
adc
aam
inc
jnp
lret
dec
rcll
es
in
mulb
loopne
push
in
test
aam
insl
mov
pop
mov
roll
pop
pop
pusha
mov
xchg
mov
js
jecxz
out
mov
ret
jae
sbb
ss
test
fists
sub
add
cmp
js
xchg
xchg
gs
ja
cmp
sub
rorl
scas
sub
aam
cmp
sahf
mov
sub
jle
dec
in
xchg
jo
push
nop
and
scas
insl
pop
add
sbbl
pusha
add
pop
xor
push
pop
or
jge
js,pt
mov
fmull
test
inc
xor
xchg
add
jmp
adc
or
xor
mov
cmp
mov
jg
gs
add
xor
sub
scas
imul
hlt
mov
inc
out
mov
mov
cltd
out
iret
pop
mov
shl
dec
aas
lahf
loop
xor
mov
test
xchg
mov
aad
sbb
cmp
xor
add
pop
in
clc
clc
std
ret
cmpsb
cmp
adc
ret
fsubrs
mov
test
or
adc
xchg
mov
fs
jmp
cmp
push
mov
mov
adc
sbb
imul
loopne
or
out
pop
xorl
pop
pop
and
xchg
push
bound
xchg
inc
je
xchg
stos
or
dec
mov
sub
push
jle
or
popa
cmpsl
inc
jno
mov
xchg
emms
pop
and
xchg
repnz
or
pop
cmp
insb
jne
inc
or
test
or
fwait
push
jbe
mov
push
sbbl
push
mov
add
ret
pop
out
fidivrl
mov
enter
in
out
mov
mulb
adc
ja
cli
pop
iret
cmp
pop
inc
test
dec
fldl
mov
movsl
int3
xchg
sarl
adc
push
adc
stos
push
imulb
xchg
cmp
fisubl
pushf
add
sub
shrl
push
add
popf
outsl
idivb
lock
lret
testb
daa
xchg
dec
mov
lods
mov
pop
pop
cmp
outsb
dec
xor
hlt
adc
push
in
mov
sbb
aas
xor
cmp
xchg
hlt
inc
inc
mov
jns
out
push
hlt
fxch
and
fwait
hlt
mov
inc
cwtl
inc
lods
jnp
mov
sub
sbb
inc
roll
ds
and
sub
movsb
or
mov
jg
cmpsb
jae
inc
push
fwait
or
push
jne
pop
out
inc
inc
addr16
sahf
lds
mov
pop
inc
inc
cmpb
test
divb
or
pop
jmp
adc
test
bound
inc
sub
loop
push
gs
into
push
pushf
xchg
rclb
xchg
jge
fimull
test
jp
sbb
mov
sub
ret
pop
pop
mov
and
jge
sarb
rcl
out
push
aaa
xlat
in
inc
cmc
rorb
push
and
cmp
insb
lods
nop
xchg
jmp
fdivrs
add
push
fdivl
ja
iret
jmp
jle
xor
clc
adc
mov
push
cmp
pop
in
adc
outsl
outsl
mov
fidivl
xchg
push
jecxz
mov
ret
call
mov
sbb
insl
xchg
ja
daa
adc
jge
cmp
add
and
and
add
imul
out
into
cmp
bound
sbb
out
mov
push
aam
or
daa
cmc
jl
iret
push
outsb
xchg
pop
inc
sub
loopne
pusha
ret
out
push
out
ljmp
sub
ss
jns
adc
xlat
dec
and
jp
ret
push
jbe
test
notb
andb
cwtl
outsb
cmp
pop
xchg
dec
js
adc
jp
adc
xor
movsl
xor
dec
cmp
imul
sbb
jno
sbb
dec
xor
imul
pop
or
mov
repnz
and
push
cmp
push
xchg
fdivp
cmp
mov
adc
sahf
pop
xchg
and
in
push
loopne
or
adc
jns
outsl
hlt
call
push
jecxz
pop
loopne
lods
mov
pusha
xchg
inc
ja
lods
movsl
lahf
cmp
pop
imulb
in
push
lds
adc
jo
pop
movsb
push
cwtl
loopne
popa
mov
sbb
icebp
and
out
repnz
mov
mov
xor
mov
test
sbb
aad
in
inc
xchg
stos
out
icebp
lcall
addr16
dec
pop
js
icebp
push
mov
xchg
add
add
pop
mov
es
xor
xorb
mov
gs
push
inc
fidivrs
scas
pop
pop
in
push
lock
sbb
sub
outsl
pop
push
mov
scas
fdivrs
pushf
scas
nop
fwait
add
adc
cld
leave
pop
paddq
and
jp
imulb
adc
fisttps
dec
imul
mov
sbb
in
pop
lret
mov
rcrb
lcall
adcb
sub
movsl
mov
out
inc
insl
ljmp
lea
push
icebp
jl
jnp
mov
out
inc
js
clc
or
sub
fldcw
ljmp
shll
push
lods
aas
push
inc
fimull
push
insl
or
sub
or
es
fcoms
push
mov
sbb
adc
adc
push
mov
dec
clc
pop
mov
into
fisubl
mov
inc
inc
mov
pop
fcompl
movsl
xchg
push
jns
mov
jo
sbb
inc
movsb
push
or
sbb
add
push
ficoms
or
fdivs
icebp
add
scas
lahf
adc
aas
out
ljmp
out
sbb
pop
push
mov
add
sbb
add
andb
xor
jbe
test
and
lcall
cmp
add
inc
mov
or
lock
sub
or
mov
sub
fildl
pop
into
ror
cmp
loope
insb
xchg
jnp
xor
popa
ja
xchg
jbe
and
mov
jbe
loop
jmp
push
add
lahf
test
js
insl
cmc
fnsave
test
add
int3
shrb
das
mov
push
sub
lods
stc
hlt
push
jecxz
lret
jg
fcompl
aam
neg
inc
fildll
pushf
push
dec
cmc
leave
dec
in
js
sbb
sbb
push
mov
cli
sbb
jb
push
pop
bnd
mov
push
imul
aad
stc
xchg
xrelease
push
dec
lods
sahf
popl
xor
jmp
rcr
or
xchg
jno
adc
out
fs
sub
dec
mov
adc
lods
fdivrl
cld
dec
mov
inc
ss
dec
fnsave
pop
out
inc
mov
js
dec
vpaddusb
int
mov
ror
cmp
pop
dec
leave
mov
inc
sub
ds
aaa
mov
xor
dec
imul
cmpsb
jge
mov
mov
add
fcoms
inc
loope
mov
out
xchg
push
sbb
jmp
insb
fdivrs
cmp
sbb
repz
cmp
pop
mov
jmp
lahf
fwait
mov
or
and
fdivrl
pop
xchg
sbb
cmpsb
rcrb
cmpsl
pop
sub
sub
fwait
mov
leave
or
imul
lahf
mov
aad
loopne
adcb
jno
pop
sbb
test
inc
jle
ficoms
pinsrw
js
mov
adc
mov
adcl
mov
xchg
xor
call
and
cmpl
ret
xchg
jg
jo
xchg
fdivp
lea
mov
mov
push
jg
outsl
sub
andl
mov
repnz
cmp
jns
ljmp
fs
addr16
gs
xchg
add
clc
clc
add
mov
leave
popa
pop
fwait
adc
and
data16
pop
push
shlb
mov
fdivp
nop
and
adc
jge
and
ret
sub
xor
or
push
stos
add
sub
mov
and
test
and
pop
dec
in
mov
aas
sbb
mov
jp
xchg
data16
std
sub
pushf
cld
out
inc
fs
lods
or
mov
jnp
xchg
and
and
imul
push
cmp
adc
sub
rcll
jnp
ror
and
dec
push
sub
into
call
repz
in
js
insl
jo
shrb
xor
lret
mov
addr16
dec
inc
add
push
std
int3
dec
inc
push
pop
or
dec
adc
addl
lahf
or
dec
add
adc
and
push
icebp
fistpll
dec
xor
inc
repz
stos
pop
ror
jle
push
lods
rcll
daa
adc
in
icebp
test
xchg
or
test
adc
inc
int3
xor
comiss
ljmp
iret
outsl
aas
mov
or
adc
iret
add
mov
jge
mov
aas
sub
out
fwait
cmc
lret
sub
jne
movsb
push
leave
and
hlt
push
pop
pop
bound
fcmovne
outsb
int
adc
fwait
xchg
or
andl
and
push
loop
jbe
mov
or
cmc
jmp
mov
bound
xchg
mov
sbb
shll
gs
add
call
jne
or
cld
cmp
jo
or
mov
mov
cmc
mov
clc
ret
cld
in
pop
add
mov
and
dec
jbe
sub
into
in
and
daa
fcom
in
sub
mov
stc
push
daa
into
jmp
dec
dec
dec
popf
into
ds
out
sub
in
sub
sub
and
gs
mov
push
clc
insb
pop
int
addb
cmpsl
pop
in
lds
aaa
cmpb
and
mov
push
mov
dec
cld
and
sbb
rcrb
notb
fs
int
loop
sbb
mov
test
lret
inc
testl
insb
insl
fstl
jo
repz
xor
mov
mov
lahf
pop
sub
sbb
cwtl
stc
add
add
cli
sti
mov
arpl
mov
add
arpl
jnp
cwtl
adc
jmp
dec
icebp
push
mov
mov
pop
mov
cmp
cld
sub
dec
sti
dec
cli
sub
push
clc
dec
inc
sub
in
dec
cmc
xor
sbb
pop
imul
cli
cmp
adc
es
pop
arpl
in
jge
icebp
scas
je
ret
fwait
pusha
sahf
aaa
insb
icebp
js
out
clc
sub
ja
aas
ficoms
hlt
inc
fwait
mov
push
xchg
mov
in
cltd
lock
sbb
int
pop
ret
sbb
jp
pop
push
in
loopne
ds
jg
stc
pop
flds
cs
mov
insl
cmp
push
push
mov
adc
cmp
fcmove
aad
test
or
in
test
mov
popa
xor
xor
add
rcl
jns
or
or
sar
mov
cltd
jnp
jle
add
es
cmpsl
sub
sbb
test
xor
in
divb
xor
int3
push
mov
mov
jb
das
lods
out
lock
stos
dec
repnz
test
mov
mov
imul
push
xor
addr16
ret
or
jle
push
jg
adc
lret
mov
jecxz
cli
js
mov
ljmp
subb
pop
popf
aaa
shrb
jbe
loop
stc
stos
inc
jo
mov
dec
dec
cmpsl
ja
repz
stc
sub
loop
in
in
mov
push
test
mov
aaa
and
dec
adc
shrb
jbe
addb
adc
sub
xor
into
or
or
and
xor
jp
popf
call
sbb
in
dec
mov
sub
mov
dec
dec
cmpsb
popf
es
lds
jge
mov
or
mov
insl
push
fneni(8087
mov
cs
cwtl
subb
sti
sbb
icebp
outsl
int
push
sub
cmp
cli
sub
xchg
mov
mov
xlat
popf
pop
sbb
cmpsl
out
aad
push
stc
mov
adc
arpl
icebp
pop
idivl
xor
sbb
and
arpl
fisubs
xor
cmp
xchg
xchg
loope
ja
scas
dec
lods
lahf
xor
dec
jae
shlb
adc
adc
push
out
push
and
xchg
leave
les
pop
insb
aam
cld
mov
scas
insb
inc
clc
cmpsl
jns
xchg
sub
add
push
fwait
lea
les
adc
kmovb
xchg
push
push
add
frstor
mov
mov
push
dec
jno
pop
in
aad
cmpsl
adc
daa
and
mov
xor
outsb
in
jle
xchg
fs
mov
pop
hlt
dec
ficoms
sub
mov
cmp
rorl
pop
jl
mov
pop
mov
xchg
ljmp
xchg
add
in
cmpsb
mov
mov
movsb
push
addr16
sub
dec
xchg
into
sub
xorb
push
enter
aas
js
ljmp
cvtpd2pi
inc
pop
mov
fs
iret
jl
mov
mov
mov
mov
cld
dec
sbb
lea
adc
in
int
adc
addl
adc
fiaddl
aas
in
mov
push
cmc
pop
mov
inc
and
inc
mov
lahf
add
xchg
mov
jmp
mov
ljmp
and
call
rcrb
mov
leave
movsb
in
out
push
cmpsb
xor
mov
je
cmpsl
mov
mov
andl
push
mov
push
xchg
push
sub
dec
jno
ss
pop
in
cmc
mov
ret
push
inc
hlt
lea
and
dec
leave
dec
lds
push
bound
int
mov
sbb
mov
mov
scas
mov
jb
sub
cmpsb
dec
xchg
or
shrb
mov
jae
test
mov
or
xchg
jle
je
decb
cmp
push
mov
or
bound
mov
imul
sub
jb
xchg
push
cmp
std
popf
lret
rcr
mov
adc
scas
and
xor
nop
fldenv
jg
pop
pop
mov
mov
dec
imul
mov
neg
mov
rclb
xchg
and
sbb
les
dec
add
out
pop
add
sbb
xor
shll
cmpsl
jle
xor
push
stc
aaa
xlat
push
and
add
sbb
int3
cmp
sbb
popf
es
outsl
xchg
mov
mov
je
push
lcall
shrl
xchg
pop
int3
lcall
push
mov
ss
pop
jmp
cltd
fistps
lret
mov
das
sti
mov
sub
pop
jne
sbb
gs
add
dec
ret
mov
add
ficompl
cli
iret
outsl
jl
inc
push
sub
sbb
fsub
sbb
mov
jmp
pop
or
lods
mov
pavgb
lret
dec
aam
cmc
lahf
add
cmpsl
fistl
inc
popf
push
xchg
andl
mov
xlat
sbb
ret
enter
and
loope
pop
sub
push
mov
int3
push
mov
xchg
iret
test
lods
dec
std
add
ja
push
push
or
sub
inc
push
shld
push
dec
bound
sbb
xchg
movsb
mov
push
sbb
push
sub
xchg
popa
push
jg
push
cmp
fistl
inc
dec
test
fistpll
xor
inc
in
pop
popf
out
mov
dec
push
dec
push
add
dec
or
adc
movsl
fs
pop
fcompl
cmpb
jnp
sbb
jge
cmc
adc
mov
jne
xor
dec
sub
inc
push
xlat
cmp
xchg
mov
sbb
cmpsl
jmp
mov
js
fsubrl
sysret
scas
mov
or
jmp
and
add
int
and
xchg
sahf
out
push
add
and
mov
pusha
loope
dec
xchg
arpl
sbb
adc
or
pop
iret
jno
mov
adc
dec
test
push
negb
sub
inc
sub
jo
sub
loopne
push
in
add
fsubr
and
xchg
xor
push
sub
movsb
pop
std
lret
sub
mov
add
fmull
mov
inc
scas
stos
in
shll
mov
mov
movsb
lahf
out
mov
pop
pop
ja
lea
sbb
out
sbb
pop
pop
inc
lock
pop
and
cwtl
pop
cld
xor
rolb
addr16
xor
jae
pop
pop
outsb
mov
jmp
or
inc
xor
lds
push
daa
push
lock
insb
push
ret
cmp
out
cltd
sbb
push
xchg
cs
in
pusha
cli
cli
sbb
and
jnp
xor
lret
adc
mov
test
loope
fidivrl
mov
xorl
fwait
sbb
dec
je
jb
adc
push
and
popa
sbb
int3
test
stc
dec
sbb
dec
aas
and
xlat
inc
int
pop
pop
mov
out
push
xlat
cld
sbb
movb
xlat
dec
enter
adc
scas
add
popf
and
push
pop
iret
shr
cmp
outsb
fists
jae
push
js
stc
fs
ds
adc
inc
cmp
cmp
mov
add
aam
add
rcrb
cmp
mov
mov
cmp
or
adcl
arpl
xor
jle
cltd
mov
push
orb
mov
into
add
cli
sbb
adc
mov
add
mov
pop
test
outsl
loope
mov
push
adc
cmp
adc
or
push
jns
and
sbb
xlat
push
lahf
test
push
cmc
mov
push
lock
jle
sbb
mov
sahf
gs
mov
mov
outsb
lcall
mov
cvtdq2ps
push
push
popf
inc
mov
shlb
push
cmpsb
in
nop
jns
sti
xor
shrb
jp
je
les
xchg
divl
dec
pusha
stos
xchg
xor
das
mov
adc
aad
and
lahf
out
cs
addr16
xchg
pop
adc
inc
push
cmpsb
mov
aam
or
pop
mov
call
cld
pop
test
pop
addr16
xorl
jne
adc
pop
pop
xchg
nop
scas
in
sub
aaa
lcall
add
or
inc
jge
leave
insl
push
movsl
aas
pop
cmpsl
mov
scas
mov
adc
addr16
sbb
dec
jl
or
test
mov
xchg
push
xlat
mov
das
jp
inc
mov
dec
cmp
sub
test
dec
in
jg
push
pop
sub
and
xor
and
gs
cmp
and
movsb
dec
out
sub
aad
stos
fldl
adc
bswap
inc
js
in
dec
add
rcrl
mov
and
inc
pop
or
sub
mov
in
and
pushl
addr16
int
sub
ds
and
das
cmp
int3
xchg
data16
rolb
xchg
fwait
sub
test
add
fildl
push
fbstp
pushf
or
push
sub
pushf
leave
adc
or
inc
lret
mov
shlb
cmp
pop
repnz
fwait
sbb
mov
push
in
adc
inc
iret
and
sbb
add
jge
sub
dec
loope
int3
push
xchg
inc
sub
jo
popa
jecxz
lahf
outsl
inc
add
and
lods
fimuls
fcomps
leave
dec
nop
cld
gs
cmp
int3
xor
hlt
jge
or
je
shrb
xor
xor
loope
cmp
inc
fcmovnbe
mov
inc
mov
stos
shrl
mov
cli
mov
xor
in
std
aas
xorb
jns
inc
cltd
dec
mov
or
ljmp
xchg
xchg
cmpsl
fstpt
outsb
shl
rolb
or
test
dec
dec
outsl
push
xchg
shll
subl
in
dec
mov
cmc
jl
lea
bound
and
movsb
pop
or
sarb
xchg
pop
jno
jno
push
and
mov
aam
cltd
mov
out
lods
iret
clc
push
push
xor
mov
mov
mov
mov
pop
dec
mov
out
push
aam
pop
mov
or
add
or
push
cmc
xchg
int
roll
ds
cmc
gs
add
fistl
jl
lcall
jmp
dec
or
sbb
out
xchg
mov
pop
sub
int3
out
mov
and
inc
shr
and
lcall
dec
test
pop
xchg
addr16
sahf
mov
inc
jnp
arpl
jmp
inc
mov
dec
inc
andb
fnstenv
insb
pop
je
imul
in
fwait
and
faddl
xlat
test
dec
out
pop
add
jle
jns
test
mov
out
shlb
sbb
adc
mov
xlat
cwtl
push
or
jno
pushf
stc
mov
push
fwait
aam
jge
mov
push
call
movsb
stc
lods
insb
lods
lock
std
aad
or
mov
xchg
mov
sbb
mov
pop
orb
jp
mov
sub
mov
adcl
insl
pop
inc
xor
adc
cs
mov
push
xor
or
addl
lds
in
ja
add
dec
lahf
bound
cmpl
mov
rcrb
std
dec
push
aam
int
pop
push
pushf
or
and
cmpsb
call
ja
jae
jb
repnz
add
dec
push
js
lock
lcall
cmc
push
sbb
lahf
and
mov
sbb
outsb
inc
push
bound
ds
cmpsl
mov
xor
mov
fisttpll
lcall
sub
mov
addr16
xchg
enter
iret
test
jns
sbb
sbb
jne
sahf
xor
les
mov
cmp
test
push
in
pop
in
jmp
jge
xor
pop
addr16
sti
ret
xchg
pop
ret
xchg
push
sbb
or
adcb
inc
aam
pusha
fiadds
imul
test
icebp
push
std
xchg
pop
push
pushf
pop
jno
mov
ret
xor
adc
cli
jns
iret
mov
pop
repnz
push
adc
adc
or
cltd
fcom
sub
push
addl
idivl
dec
jg
mov
push
inc
insb
aas
push
out
and
out
inc
push
dec
sbb
sysret
int3
cmp
add
sub
jnp
jno
out
fimuls
sbb
mov
mov
mov
jge
ja
icebp
xor
pop
mov
add
cltd
int3
or
leave
lds
sub
es
gs
lahf
xchg
push
lds
push
push
jl
aaa
repnz
scas
pop
mov
cmp
insl
in
adc
js
js
cltd
ljmp
sti
push
add
iret
dec
sbb
mov
mov
xor
std
pop
push
mov
lahf
sti
call
mov
test
mov
xor
sbb
lods
jne
push
js
stc
ds
int3
sbb
sbb
dec
das
mov
enter
dec
sub
loopne
pop
mov
dec
int
iret
addr16
sbb
dec
psubb
lods
dec
lods
xchg
mov
cmp
loope
cmp
jecxz
repnz
jge
ja
addr16
lret
iret
sub
adc
inc
and
cmp
insl
cmp
mov
enter
pop
into
add
call
test
loopne
jecxz
cltd
jle
xchg
or
shlb
stos
cmp
gs
scas
cli
shrb
inc
sub
jecxz
sahf
xchg
bound
cmpsb
sti
fwait
adc
popa
adc
scas
xchg
xchg
add
push
ja
les
gs
and
pop
xorb
or
in
call
test
dec
in
loopne
mov
icebp
stc
or
fstpt
lret
mov
xorl
pushf
inc
test
ret
xor
cmp
pushf
push
repnz
fwait
leave
or
mov
icebp
popa
sti
dec
std
movsb
in
leave
push
jbe
das
sub
ret
fildl
xlat
cmp
add
add
xchg
inc
test
mov
flds
fisttpl
movsl
out
xchg
rcrb
icebp
sub
mov
mov
int3
xor
js
repnz
sub
clc
jle
sub
in
or
out
ja
movsl
add
dec
dec
or
xchg
sti
sub
xchg
test
or
das
and
jns
mov
xor
jmp
xchg
mov
fnstsw
lds
cmpsb
or
pop
dec
xchg
mov
inc
into
divl
xchg
sub
scas
adc
ret
sub
pop
dec
sub
aas
xchg
sbb
sub
pop
add
fmul
xchg
push
repz
ret
jmp
sub
lahf
scas
cmp
fcoml
movsl
inc
mov
jle
sbb
cmpsl
mov
test
xorl
gs
iret
xor
mov
pushf
sahf
inc
cmpsb
sub
push
pop
daa
lock
outsl
mov
sub
lds
repnz
jge
rorb
outsb
repz
dec
sbb
push
mov
jae
lret
movsl
push
aam
xor
push
cld
fstpl
pop
push
xor
repnz
in
popa
lods
push
repz
int
sbb
pop
imul
test
pushl
out
mov
cli
movsb
mov
dec
xor
or
stos
bound
inc
sbb
and
imul
inc
sbb
xchg
cld
cmp
xchg
loope
and
inc
sbb
fcoms
cmpsb
scas
daa
ret
dec
lret
push
xor
jbe
jp
and
lahf
sbb
dec
sub
and
ret
jg
cli
pop
inc
int
insb
cli
mov
out
imul
pop
jl
and
lahf
orl
pop
add
add
jo
mov
lahf
faddl
sbb
jo
orps
inc
in
lret
push
aas
shr
pop
xchg
push
leave
xor
movmskps
mov
push
inc
push
mov
xchg
mov
lods
mov
inc
push
in
adc
add
pop
std
xchg
shl
lods
xchg
in
addr16
mov
adc
and
fistl
cmp
mov
jno
arpl
lcall
mov
cmp
mov
xor
ret
inc
inc
and
push
fwait
xchg
and
xchg
leave
std
fists
sub
jg
sahf
or
insb
lret
hlt
dec
pop
out
cmp
adc
jnp
push
cmp
cmp
out
push
shll
jb
cmc
mov
mov
lock
sub
bound
and
data16
add
movsl
mov
loop
fistpll
mov
ljmp
data16
or
arpl
jnp
mov
cmpsl
iret
lcall
xchg
jnp
orl
push
lods
out
addl
mov
and
mov
sahf
lock
jg
xchg
mov
xchg
sbb
cmc
jb
sti
inc
dec
xchg
add
rol
pop
mov
cmpb
ss
pop
cmpsb
xchg
cwtl
mov
jge
inc
in
cmp
add
inc
pop
test
add
inc
jnp
jb
bound
fidivs
jo
mov
icebp
pusha
xchg
xchg
mov
xor
cmp
std
inc
push
dec
mov
repz
push
adc
xor
push
and
and
lret
dec
xchg
mov
dec
push
pop
jnp
pop
cmc
and
sub
pop
and
out
dec
sarb
mov
mov
cmp
pop
mov
inc
insb
fidivrs
shll
outsb
cs
jg
ret
test
lea
sub
aad
and
and
and
inc
mov
mov
jg
aad
sbb
scas
mov
loope
leave
sub
loop
fcmovne
movsl
in
ds
add
scas
dec
mov
cmpb
leave
nop
mov
mov
aaa
rcll
scas
mov
and
sub
scas
sbb
cltd
addr16
mov
mov
mov
xor
mov
mov
fmull
push
mov
xchg
leave
in
mov
cmpsl
aaa
loope
scas
sbb
cmp
sub
std
ss
lods
aaa
inc
xor
mov
scas
jge
mov
scas
in
jae
aaa
fistl
push
push
xchg
and
sarb
out
pop
mov
push
aas
adc
sub
and
cmp
inc
orl
outsl
and
call
pushf
push
xor
xor
mov
bswap
jle
cmp
adc
pop
lahf
adc
bound
push
fdivr
adc
hlt
or
mov
int
pop
call
aam
imul
sbb
jb
ljmp
jb
pop
aam
jbe
inc
xchg
insl
js
into
sbb
lea
lds
push
test
popa
xor
lret
mov
or
mov
adc
xchg
or
sahf
sti
sub
sub
sub
adc
fwait
dec
push
stc
xchg
cltd
xchg
dec
jns
dec
fisubl
pop
mov
shll
add
popa
add
pop
dec
mov
and
fsubp
testl
or
adc
outsb
jge
cltd
cmp
sub
in
push
les
pop
and
jecxz
pop
adc
and
js
leave
icebp
fiaddl
scas
sub
int3
imul
dec
repz
mov
push
sbb
cmpsl
dec
pop
mov
and
mov
jp
sbb
data16
icebp
mov
cmp
sbb
in
fistl
or
and
int
fnstenv
inc
add
sti
xor
std
dec
dec
mov
addr16
and
jns
and
xchg
cmc
jne
fimull
shrb
mov
addl
je
lods
mov
inc
pop
stos
dec
sbb
jge
xchg
add
xchg
sbb
adc
lock
jmp
aaa
cli
jbe
mov
jns
enter
dec
sub
sbb
cltd
push
pop
cld
aaa
mov
inc
and
sub
mov
push
mov
cwtl
xor
mov
scas
jp
aaa
push
adc
mov
addb
int
add
pushf
push
ret
mov
xor
mov
dec
mov
nop
jb
cmc
sarb
stos
cmp
mov
insl
das
stc
xor
pop
xchg
fldl
add
mov
and
movsb
je
pop
loope
fbstp
outsl
stos
dec
test
ja
mov
into
jge
ret
pop
mov
dec
mov
pushf
das
clc
push
push
or
fstpt
pop
mov
popa
loopne
add
mov
nop
fiadds
pop
mov
dec
fcomps
shrl
movsb
mov
out
push
cs
or
xorb
movsl
ffreep
in
repnz
adc
xor
push
imul
cmp
xlat
push
adc
scas
int
and
enter
rclb
add
mov
or
mov
aaa
jno
lret
dec
cmp
imul
aam
or
repnz
jmp
mov
lahf
jne
jl
or
popa
pushf
je
adc
push
mov
scas
or
movb
push
ret
stos
aad
xchg
mov
mov
push
aas
mov
repz
arpl
xor
mov
aam
jl
cld
rol
stos
jecxz
jl
pop
adc
push
mov
aas
lret
mov
add
pop
xchg
jo
lods
mov
popf
shrl
sbb
imul
int3
out
add
add
test
leave
adc
popf
or
les
xchg
mov
lcall
negb
test
sub
icebp
repz
and
add
ret
push
es
mov
ret
pusha
loop
and
ret
dec
imul
xor
push
mov
out
jbe
xor
pop
and
loop
adcb
cmpb
imul
adc
or
roll
lret
movsb
lret
or
add
and
xchg
xchg
out
int
out
jecxz
dec
cmp
xchg
or
call
dec
jmp
call
gs
test
loopne
mov
sbb
mov
cmp
sub
mov
xor
mov
adc
mov
sub
xchg
jl
test
test
call
and
nop
loope
imul
adcb
out
xchg
bound
mov
icebp
mov
pop
inc
movsl
testl
insb
xlat
mov
mov
out
xor
pop
and
out
lahf
ret
outsb
fwait
lods
pusha
sub
inc
sub
lret
out
imul
xchg
in
inc
jge
repnz
fistps
loop
sub
je
int
ja
in
js
scas
fwait
in
sbb
jnp
std
mov
lods
jb
dec
pop
arpl
jo
push
popa
loope
xchg
ret
fimull
sbb
in
js
lods
pop
and
inc
push
or
xlat
xor
and
subb
aaa
mov
pusha
fcmovu
jno
in
cltd
in
mov
mov
mov
cvtpi2ps
subb
rorl
pushf
sbb
ja
loop
dec
test
cmpsl
add
fwait
jno
mov
pop
jecxz
lret
clc
jg
jge
pop
aam
insl
cmpb
ret
lods
mov
sub
cwtl
lea
stc
mov
out
cmpsb
mov
pop
cld
cmpl
ret
dec
shll
nop
nop
xor
xor
fdivs
push
in
nop
stos
mov
xchg
pop
dec
or
imul
cmp
jmp
rcrl
cmp
add
sahf
cmp
push
push
add
push
out
std
setp
shrl
pop
test
decl
mov
mov
xchg
or
stos
push
scas
repz
cltd
mov
and
and
repnz
xchg
dec
addr16
int3
das
loopne
push
xchg
test
push
dec
leave
cmc
xor
in
cmp
xor
outsl
jno
mov
fs
sti
jecxz
lahf
repz
push
test
and
inc
repz
out
push
mov
decb
ljmp
pop
jno
or
in
xchg
push
cltd
icebp
mov
xchg
fmull
mov
dec
mov
xchg
sahf
mov
pop
out
cmc
ljmp
mov
sbb
or
lds
ja
fwait
mov
push
mov
mov
sbb
iret
jg
hlt
jge
pushf
or
arpl
or
fsubl
mov
daa
mov
jp
in
jge
fs
cmp
and
dec
pop
ljmp
pop
or
mov
cmpsl
inc
adc
je
mov
push
xchg
fsubrs
mov
jg
out
movsb
dec
push
clc
jne
mov
add
imul
leave
sahf
mov
lea
in
mov
mov
hlt
mov
sahf
in
test
pop
dec
jns
lock
cld
dec
push
or
addr16
pop
cmp
mov
add
lods
iret
pop
outsl
out
and
ja
js
inc
ss
shl
and
mov
mov
pop
hlt
mov
and
xor
cli
add
mov
hlt
int
icebp
pop
cmc
push
dec
xchg
repz
lret
mov
in
add
sbb
mov
jno
int3
add
cmp
jnp
insb
or
mov
inc
jp
jno
xlat
dec
push
push
push
push
pop
fsubs
addr16
xchg
bound
lcall
push
jle
or
sbb
and
xchg
sub
and
lahf
adc
push
add
push
xchg
leave
mov
push
enter
nop
xor
mov
lret
fidivl
or
test
push
pop
add
rol
aam
push
jge
popf
and
hlt
xor
jnp
mov
fs
dec
lcall
xchg
add
ljmp
xchg
cmp
flds
dec
add
call
out
jno
cltd
cli
xchg
stos
sbb
enter
cmpsl
das
cmp
stos
stc
push
adc
repz
add
ss
jg
jnp
adc
add
mov
pushf
and
and
divb
cmpsb
mov
aaa
or
mov
mov
mov
imul
cmp
cmp
jne
inc
decl
ret
push
xor
xchg
and
scas
loop
in
jbe
adc
cmpsb
xchg
out
dec
or
or
or
cwtl
xor
test
push
mov
bound
lods
leave
inc
fnsave
mov
dec
or
jge
mov
xchg
or
mov
push
sbb
push
lahf
fwait
mov
and
adc
es
or
fmulp
lds
leave
push
inc
stos
xchg
in
dec
sub
push
insl
jge
out
test
icebp
inc
enter
xor
cmp
pop
dec
lahf
insb
or
fbstp
sbb
add
jb
pop
jp
push
mov
hlt
xlat
push
scas
mov
xchg
fwait
stc
out
pop
aaa
lock
xchg
inc
scas
cmp
and
push
out
pusha
pop
xchg
ret
popf
fidivrs
outsb
pop
les
adc
xor
xor
sub
mov
or
aam
mov
mov
cmp
stc
call
xorb
rcrl
xorb
mov
dec
fsubp
sbb
ss
sub
imul
push
stos
fcompl
cmp
inc
ret
int
mov
out
into
or
loopne
dec
ror
mov
aaa
push
lds
in
orl
testb
lret
xchg
fnstenv
jmp
enter
je
icebp
or
inc
pop
mov
sub
sbb
insb
push
insb
inc
mov
jno
jp
xchg
repz
js
int
dec
pop
mov
test
scas
aaa
pushf
mulb
pop
subb
mov
stos
xlat
mov
popf
cmp
mov
jmp
adc
jl
dec
mov
ja
mov
mov
pop
and
stos
jp
nop
xorl
mov
movsl
dec
sbb
mov
leave
cld
mov
mov
insb
iret
push
in
push
xchg
inc
sub
pop
inc
pop
add
test
int3
or
jmp
jmp
xor
enter
push
adcb
lds
loope,pt
inc
xchg
out
loopne
mov
insb
leave
jo
inc
xor
out
adc
lock
stos
test
push
fisttps
shrb
xchg
leave
out
and
dec
movsl
ret
pop
adc
nop
stos
pop
fisubs
fidivs
mov
lods
xchg
arpl
or
ja
mov
ljmp
iret
xchg
mov
and
enter
int3
inc
mov
push
pop
sbb
rolb
lcall
es
out
imul
imul
aas
outsb
lret
mov
mov
lods
and
stc
pop
aas
xor
shll
and
test
jl
mov
sub
mov
jo
scas
mov
in
outsl
int3
popa
int3
xorl
popf
xchg
jno
cs
insb
dec
out
sub
roll
xchg
imul
cli
mov
pop
popf
jae
lods
dec
ja
sub
into
push
icebp
push
jecxz
mov
inc
cmp
nop
mov
pop
xchg
in
dec
data16
repz
adc
es
push
xchg
pushf
dec
cwtl
lcall
incl
or
or
dec
or
inc
cmp
mov
ss
and
mov
mov
jle
imul
adc
in
mov
scas
push
push
fstpl
sbb
roll
fistl
negb
mov
adc
loopne
xchg
pop
xor
loope
xchg
ret
cmp
lds
jno
xor
das
pop
pop
leave
push
push
imul
inc
mov
sbb
sub
out
stos
lcall
jbe
sbb
int3
ret
add
mov
not
inc
dec
sub
in
xor
sub
mov
sub
insl
test
bound
fnstenv
ljmp
rclb
lock
fsts
lahf
push
mov
push
aam
ds
xor
add
pusha
sub
enter
test
cmp
lret
pushf
popa
dec
outsb
bound
mov
xor
addb
sbb
leave
cli
mov
addr16
xor
dec
mov
cmp
lods
out
popa
aas
fcomps
mov
push
pop
mov
sbb
mov
mov
mov
sub
cwtl
int3
iret
mov
in
cmp
push
adc
mov
push
jbe
cmp
std
clc
pop
or
inc
in
pop
mov
test
pushf
xchg
fwait
ss
cmpb
gs
daa
leave
adc
xchg
xchg
inc
insb
loope
xor
or
pause
lds
xchg
pusha
xor
mov
mov
imul
inc
inc
cmc
xchg
ficomps
lret
sub
pop
xor
and
test
jle
inc
gs
xor
pop
mov
cs
and
mov
xchg
orb
lret
mov
imul
mov
mov
and
xor
xor
out
mov
lea
lods
shlb
jg
xor
xchg
inc
dec
daa
inc
mov
dec
jge
repz
inc
enter
pop
shrl
adc
cmpsb
xor
add
insb
inc
cltd
or
xchg
lret
arpl
mov
sbb
jns
mov
stos
pop
push
push
ljmp
outsb
and
out
daa
mov
sbb
inc
push
jecxz
jno
sub
rcrl
sub
gs
aas
in
push
mov
push
out
dec
mov
inc
mov
mov
pop
aaa
push
sbb
sub
or
xchg
add
fistpll
mov
push
sbb
jb
jo
daa
add
dec
and
js
adc
enter
inc
add
sub
dec
stc
outsb
mov
push
add
test
or
and
test
mov
and
lds
das
mov
mov
cmp
cld
cmc
mov
insb
sbb
gs
mov
mov
incb
ficoml
jbe
cmp
mov
inc
icebp
scas
xchg
add
data16
cld
adc
adc
inc
adc
push
jnp
push
addl
inc
mulb
ret
sbb
cmp
shlb
xor
sub
cmp
daa
xor
cmc
lcall
cmp
adc
pop
inc
into
xor
aas
mov
sub
xchg
fwait
mulb
rcrl
js
mov
js
dec
stos
mov
or
push
mov
push
inc
mov
and
push
sub
push
xchg
ret
fcmovne
mov
mov
or
push
xchg
push
add
test
mov
movsl
dec
sub
fucom
iret
mov
roll
dec
test
dec
xchg
mov
pop
outsl
sbb
pop
ret
aaa
aaa
sbb
cmp
sub
cmpsb
mov
movsl
call
leave
shlb
leave
mov
sub
fcompl
xchg
into
ret
aaa
test
cmpsb
rcll
push
and
mov
pop
fwait
jl
mov
or
push
popa
clc
stos
daa
js
push
xchg
or
outsl
adc
test
mov
out
repz
sbbb
arpl
mov
cmp
movsb
ljmp
sbb
xorl
lock
aam
mov
pop
cmpl
jb
sub
cmpsb
int
mov
mov
fisubs
jecxz
add
xor
xor
or
imul
shr
inc
lods
into
rcrl
das
cmp
fsubr
in
mov
ss
fmuls
add
inc
jne
jmp
daa
dec
jo
lods
and
jns
iret
movsb
fsubrl
jle
out
xchg
or
pop
into
stos
daa
mov
mov
pop
mov
cmp
push
cmp
iret
push
outsb
inc
push
cmp
add
add
nop
mov
ja
enter
in
std
add
fsubrl
and
dec
jecxz
or
rclb
add
fbld
outsb
and
dec
dec
movsb
lret
ljmp
push
xor
jns
jb
pop
mov
pop
fisttpll
pop
sub
mov
inc
outsb
jne
mov
jecxz
dec
xchg
cmpsb
movsb
rol
mov
mov
cmp
je
mov
out
leave
dec
adc
xchg
cmpsl
sbb
pop
cmp
lahf
xor
dec
add
sarl
xchg
mov
out
and
bound
fnsave
pop
adc
dec
in
fidivl
sub
jp
pusha
repz
xor
adc
test
jnp
mov
jae
mov
xlat
mov
fnstcw
pop
sbb
push
xchg
fstps
sub
aas
sbb
iret
sub
jo
add
cmp
xchg
xor
shrb
sub
mov
loope
add
xor
shlb
cmc
cmp
sti
out
mov
shlb
pop
in
pop
push
mov
loopne
mov
ds
pop
cmpsb
adc
pop
xor
sbbb
imul
and
add
shr
adc
imul
xlat
lret
dec
pop
into
rorl
fsubp
push
es
push
mov
pop
pop
sbb
jp
xchg
scas
pop
xchg
xchg
das
das
aaa
xor
lret
jl
ja
adc
and
out
ret
mov
pop
mov
add
mov
adc
mov
icebp
adc
sahf
subl
incb
stos
ja
add
mov
imul
imul
push
fistps
data16
subb
pop
mov
adc
stos
sbb
push
jecxz
pop
lods
mov
jb
jns
xchg
aas
push
aam
cwtl
test
jne
int
movsb
mov
pop
xchg
push
sub
push
lahf
imul
push
xorl
popa
xchg
mov
mov
cmp
rorb
test
xor
ljmp
bound
and
cmp
shll
mov
mov
cwtl
ret
and
push
setp
xchg
cli
subb
mov
scas
nop
mov
int3
inc
sub
add
pop
movlps
aad
movsl
push
cmc
mov
or
push
add
sti
cmp
aad
sub
push
into
pushf
add
pop
and
dec
popf
in
cmp
sahf
cs
xchg
shl
sub
cs
dec
sahf
js
mov
cmp
mov
stos
adc
lret
mov
and
shll
mov
pop
add
cwtl
or
repz
into
sbb
outsb
mov
imul
push
mov
mov
jecxz
out
push
or
leave
cmp
ret
jne
push
sbb
ss
repz
test
inc
xchg
mov
rcll
jns
notb
mov
sbb
and
test
xor
nop
test
xchg
ret
insb
pop
xor
mov
std
inc
in
mov
adc
pop
mov
adc
lcall
shll
or
movsl
shrb
in
pop
test
dec
jl
stc
inc
jae
push
rcrl
pop
dec
adc
arpl
mov
sbb
popa
call
jno
in
or
loopne
mov
lcall
test
arpl
mov
sahf
fwait
cmp
inc
hlt
sub
dec
pop
pop
lret
int3
lret
xor
cmp
pop
out
scas
or
push
je
add
imul
loop
out
push
jae
jle
shll
lea
xchg
cmpsl
push
aad
add
jge
imul
lds
pop
pop
js
jo
aad
sbb
pop
in
xor
pop
fstl
cli
pop
jg
fnstcw
incb
sub
ja
out
sub
mov
js
fmull
inc
popa
lret
mov
sbb
fwait
push
ds
and
cmp
out
mov
pop
outsl
stc
stos
jg
jl
bound
loop
jl
xor
rcrb
mov
bnd
cli
loop
lea
shl
pop
jmp
mov
mov
js
mov
sahf
xchg
xchg
sbb
test
int
dec
add
lret
test
push
xchg
je
pusha
outsl
mov
lods
out
pop
cs
mov
cmpsb
dec
lods
push
pop
sub
adc
jae
mov
push
loope
or
in
inc
test
jbe
cmc
lahf
jmp
inc
and
xor
add
stos
imul
and
mov
inc
mov
aad
mov
gs
or
adc
jae
cmp
mov
mov
push
cmpsl
clc
in
repnz
mov
icebp
movsl
call
jecxz
data16
lret
xchg
mov
sbb
aad
movsb
in
pop
mov
test
or
pushf
xor
arpl
int
jg
or
insl
push
sti
mov
fxch
add
movsb
sti
jo
out
pop
xor
int
rorb
adc
mull
mov
rol
mov
pmulhuw
test
call
push
testl
jns
pop
push
mov
adc
sbb
scas
mov
push
sbb
jns
out
cmp
mov
pop
add
xor
xchg
pop
jg
adc
mov
jbe
insl
mov
call
imul
pop
xor
xor
sti
xchg
imul
dec
push
cmp
push
loop
arpl
in
mov
stc
pop
ds
xor
cmp
nop
scas
faddl
rcrb
aad
popa
xchg
xor
aas
bound
dec
jae
int3
add
dec
push
test
in
sbb
ja
dec
sbb
jmp
dec
in
stc
jns
or
icebp
std
and
leave
call
test
adc
xorb
clc
ret
std
mov
cmp
cmp
dec
pop
jg
jne
ja
push
or
sub
loopne
pop
push
push
test
pop
cmp
test
insb
xchg
dec
adc
bound
pop
fnstsw
sbbl
pop
aas
mov
inc
sub
stc
lock
aad
add
fstps
and
enter
pop
push
jp
xorb
ja
cmp
rclb
push
inc
add
fistps
fwait
pushf
hlt
and
call
pop
or
pop
fdivp
addr16
orl
jo
jg
bound
dec
push
cs
aas
nop
dec
push
insb
push
push
scas
jns
pop
mov
fcmovu
repz
fwait
sbb
fucomi
stos
mov
aam
cld
test
ret
add
hlt
outsb
jne
push
sub
dec
xor
aas
fsubrs
decl
outsl
mov
jle
dec
in
leave
jns
movsb
jg
mov
mov
test
cmc
sbb
ret
out
pop
xchg
stos
imul
push
leave
push
mov
sub
cmp
popa
xchg
rorl
add
cmp
cmp
das
int
sbb
mov
cmp
cmpl
cmp
xchg
mov
fimull
push
jge
stos
imul
das
inc
mov
cmp
cmp
mull
adc
sub
pop
jmp
cmp
pop
dec
pop
loope
sub
stc
jne
adc
jmp
test
sub
ljmp
icebp
pop
hlt
imul
lea
sti
and
add
cld
mov
cltd
sub
lock
sti
sbb
inc
cmp
sub
sbb
mov
adc
mov
sbb
mov
xchg
pop
lock
fcompp
xor
lea
sbb
testl
jp
int
stos
icebp
mov
sti
adc
mov
mov
sub
iret
int3
push
and
mov
or
cmp
pop
push
ja
or
sub
in
push
xchg
push
daa
or
jle
popa
outsl
cld
mov
jbe
loopne
jno
pop
bound
ret
les
push
fidivs
sbb
push
sbb
mov
dec
rcrb
pop
inc
divb
xor
inc
mov
lock
adc
pop
lahf
cmpsl
repz
cwtl
gs
xor
and
mov
or
mov
xchg
lahf
or
adc
xchg
mov
dec
loope
pop
sub
sahf
adc
fcomip
repz
inc
add
lock
push
out
push
adc
pop
into
push
mov
adc
pop
push
aam
aad
test
jle
div
mov
loope
inc
outsb
jmp
stos
jecxz
sti
cmp
sub
sbb
sub
adc
aam
jnp
test
loope
push
push
mov
jo
xor
dec
mov
dec
vsubsd
push
xor
out
rorl
insb
pusha
push
mov
iret
sbb
mov
pop
aad
and
outsl
mov
jae
push
shl
jge
test
push
addb
sub
sbb
aad
pop
aad
lock
jge
cltd
xchg
les
add
adc
xor
xor
or
mov
pop
cmp
lret
rolb
mov
mov
ffree
and
mov
dec
movsb
jl
js
nop
lret
sub
jl
testb
dec
fldz
cmpsb
push
sub
jecxz
and
popf
test
insl
filds
mov
dec
or
mov
xor
push
mov
gs
and
and
hlt
lahf
loopne
mov
ret
call
sbb
push
mov
shr
in
jo
std
mov
arpl
mov
pop
mov
stc
xor
xor
aam
sar
and
push
adc
mov
iret
pushf
jne
pop
and
clc
and
add
fcom
scas
mov
mov
jnp
pop
std
or
sbb
jnp
inc
xchg
fidivl
lret
xor
mov
dec
cs
arpl
test
cmpsl
mov
and
xchg
fstl
push
mov
sbb
cld
xchg
jg
cld
pop
cwtl
push
push
stc
popf
arpl
stos
lock
sbb
mov
xor
xchg
mov
fistpll
mov
dec
sub
fiadds
jmp
pop
mov
sub
cmpsl
xchg
insl
cmp
iret
pop
das
cltd
test
mov
adc
iret
js
jbe
fistps
sbb
dec
and
pusha
push
dec
lea
cltd
mov
cwtl
xchg
insb
lods
jns
pushl
fcmovnbe
mov
movsb
clc
idivl
pop
mov
ljmp
adc
jb
inc
xchg
pop
test
frstor
mov
push
push
mov
loopne
xchg
lret
push
sti
push
shrl
fstpl
out
mov
jmp
add
pusha
xor
stos
iret
mov
push
out
mov
out
or
and
repz
jns
aaa
pop
jb
ljmp
mov
inc
xchg
in
sub
xchg
pop
jle
scas
jecxz
rclb
xchg
adc
inc
fdivrl
outsl
jo
mov
cwtl
mov
ret
push
sbb
cmpsb
sub
pop
aad
cmpsl
popf
push
negb
nop
add
dec
pop
mov
gs
inc
mov
mov
lds
push
adc
loop
aam
adc
push
mov
xchg
mov
jo
mov
leave
sarl
cmpsb
sub
push
mov
andb
les
push
mov
adc
into
cmpb
in
lahf
push
pusha
pop
ret
out
or
add
lods
fidivrl
movsl
mov
and
mov
jmp
das
das
mov
aaa
cmc
inc
mov
adc
jno
out
push
sbb
mov
loop
cltd
out
scas
daa
dec
adc
js
xchg
aam
adc
ret
mov
cmp
hlt
scas
aam
js
sarl
addr16
cmc
mov
push
arpl
pop
fs
mov
int3
mov
imul
aam
mov
pop
mov
and
jnp
movsl
sub
xchg
scas
clc
lret
push
mov
pop
movsl
sbb
loop
fidivl
lret
adc
sub
lret
cmpsb
inc
sbb
jno
lock
hlt
rcr
negl
daa
push
or
mov
scas
and
adc
in
ror
add
les
aam
shrb
nop
push
adc
lds
mov
push
addr16
popa
mov
xor
cli
mov
and
mov
dec
in
data16
or
fnstsw
ss
mov
pop
jl
popa
mov
scas
cmp
jmp
pop
pop
arpl
test
xor
inc
jmp
and
sub
sbb
out
dec
xchg
inc
out
ret
xchg
ret
sbb
and
inc
mov
das
jns
gs
pop
aas
xor
out
fsubl
and
mov
sti
pushf
sbb
sub
or
and
sub
call
jb
xor
pusha
push
test
mov
pushf
push
pop
shr
pop
lods
sbb
push
mov
xor
ljmp
mov
xor
nop
inc
pusha
sub
iret
lret
pop
icebp
push
das
sti
lret
in
jno
and
and
adc
fstpl
push
push
adc
xchg
divl
jne
subl
out
arpl
cmp
add
xchg
adc
pop
int
je
add
mov
xchg
inc
loop
out
xchg
push
subb
lods
add
fnsave
rcrb
xor
lods
sbb
das
mov
jb
mov
repnz
lds
sarb
shll
xchg
mov
sbb
cld
dec
cmp
adc
ficompl
sub
mov
fbld
rsm
into
sub
ret
cmc
test
jl
leave
ds
and
xor
imul
jl
out
mov
pushf
test
pop
cmp
mov
mov
jecxz
sbb
ljmp
clc
jge
movsb
les
call
mov
adc
jmp
and
lret
gs
pop
movl
push
shlb
sahf
int
mov
mov
jle
pop
and
dec
lea
mov
insl
filds
xchg
pop
pop
pop
xlat
xbegin
fdiv
cmp
jl
xchg
pop
inc
pop
inc
call
dec
adc
jecxz
adc
ljmp
pop
popa
call
nop
rcrl
dec
inc
jo
stos
jo
inc
push
sub
inc
jmp
out
mov
rorb
sbb
xor
cmp
stc
mov
xor
add
mov
adc
cmpsb
or
mov
jge
cwtl
repnz
mov
les
push
push
cmp
adc
adc
test
jmp
dec
push
ja
sub
jle
hlt
popf
popa
xorl
nop
add
dec
jecxz
mov
loopne
dec
dec
repz
jge
adc
xchg
bound
add
cld
pop
sbb
das
data16
pop
notb
ja
sub
inc
fcomps
xchg
push
jae
jle
jmp
lock
push
in
repnz
mov
outsb
xor
sbb
shrb
arpl
xchg
or
pop
mov
scas
mov
out
subl
das
mov
stos
ret
push
jle
jae
inc
and
jne
adc
lcall
xchg
mov
cltd
bound
leave
popa
mov
add
and
mov
jno
out
out
repz
inc
cwtl
fstpl
shll
xchg
out
dec
ds
jb
aaa
data16
insl
inc
xchg
lea
and
mov
sub
sub
int
push
cltd
fsub
jmp
mov
mov
mov
in
pop
lock
js
decb
add
leave
ficomps
mov
test
xchg
xchg
pop
sbb
cld
div
and
xchg
xrelease
mov
fbld
or
ljmp
movsl
sahf
jns
jmp
mov
lret
jo
leave
insl
outsl
es
scas
pop
stc
popf
push
jecxz
pop
mov
jmp
xchg
call
xchg
shl
xor
jecxz
daa
and
je
sbb
add
mov
mov
lret
iret
push
push
cmp
sahf
aad
rclb
mov
in
jp
aam
push
outsl
mov
xchg
bound
std
aaa
inc
cmpsb
aam
sub
aas
and
scas
sbb
mov
icebp
das
iret
call
hlt
sbb
enter
loop
jnp
push
cmp
xchg
xorl
jo
test
out
cmpsl
imulb
das
xchg
sysenter
jg
mov
mov
jge
xchg
lock
je
jnp
pusha
mov
xor
movsl
push
adc
or
ljmp
xlat
sar
test
dec
mov
cld
test
jge
jmp
add
add
mov
rorb
adc
mov
push
rorl
push
stos
in
test
lock
icebp
rol
pop
inc
inc
fmuls
lea
xor
push
mov
mov
mov
fstpt
jno
mov
dec
mov
push
nop
mov
add
cmp
adc
sar
sarb
mov
arpl
ficomps
cmpsl
lods
mov
fsubrp
in
sbb
mov
mov
insb
adc
lds
stos
push
lahf
stos
cmp
movsl
pop
add
adc
fdivr
lahf
mov
std
mov
out
inc
push
insl
jns
mov
int
push
adc
xchg
imul
xor
aaa
adc
cmp
dec
ss
test
mov
lds
jl
xlat
outsb
aam
jg
and
pop
ljmp
dec
pop
xchg
test
scas
subl
adc
jge
invd
xor
popa
aam
fsubrl
mov
pop
pop
mov
sbbl
mov
ljmp
fdivr
xlat
sbb
cmpsl
pushf
cmp
cmp
push
movsb
jnp
dec
gs
data16
xor
sbb
xchg
jp
adc
loop
sbbl
xchg
cmp
inc
pop
push
push
in
push
mov
in
xor
sub
inc
push
ljmp
lahf
lods
aas
sbb
out
in
jmp
into
imul
jae
fisttps
push
jmp
notl
cmp
cmp
sbb
cmp
sub
nop
push
sbb
scas
js
imul
adc
push
lds
xchg
cmp
mov
bound
xchg
mov
mov
xchg
mov
aaa
movsl
pushf
jg
out
xor
adc
popl
mov
cmc
cmp
stos
subb
cmp
add
mov
mov
adc
xchg
inc
cmp
leave
sbb
lock
notl
mov
cmp
arpl
sti
mov
xlat
pop
clc
into
add
aaa
in
inc
dec
loope
shl
divb
inc
jbe
lret
cmp
add
xlat
icebp
inc
fbld
loope
xor
mov
adc
push
pop
loop
dec
std
inc
jle
repnz
int
test
push
cmp
and
mov
and
pop
cld
mov
sbb
inc
int3
inc
jp
inc
mov
lods
mov
stc
inc
rclb
stos
xor
nop
ret
cmp
mov
dec
cmpsb
mov
sub
cmp
xlat
lahf
sbb
sbb
dec
lret
dec
out
mov
push
pop
jns
scas
pusha
pop
jo
aas
mov
jge
lock
ficompl
sub
jae
add
push
xor
sub
inc
testl
push
push
and
int3
dec
cmp
and
mov
fs
xchg
ja
or
fadd
mov
sub
sbb
push
mov
stc
push
xor
orb
mov
rolb
scas
test
scas
mov
out
xchg
jae
test
pushf
movsl
les
sbb
mov
les
mov
cld
lcall
mov
jmp
push
stc
push
and
lahf
dec
xchg
int
data16
xchg
mov
ss
jnp
mov
jp
fcom
dec
pop
leave
push
fistps
xchg
pcmpgtb
lds
adc
mov
clc
push
mov
xor
out
inc
jge
fnstenv
jle
and
fwait
imul
sub
das
xchg
inc
sub
repz
test
mov
fcoms
shll
mov
sahf
pop
shll
scas
cmp
daa
adc
xchg
loope
add
in
cs
jp
imul
fistl
mov
add
pop
push
xchg
jno
into
cwtl
dec
hlt
or
ja
addb
pushf
movsl
ljmp
dec
popf
dec
pop
push
xorb
push
adc
js
jno
repnz
ficoms
lods
das
test
push
add
and
je
ja
insb
rep
mov
sub
loop
fimuls
cmp
frstor
push
movsb
pop
push
cmp
push
mov
popa
push
stos
lods
popa
in
test
cmp
js
mov
imul
adc
ror
push
shlb
or
or
or
mov
cld
cmp
push
xchg
test
and
shrb
addb
inc
sub
pop
clc
ret
jmp
loop
cmp
xchg
ficoms
nop
or
push
in
into
pop
or
imul
xor
mov
push
pop
clc
mov
xchg
pop
and
mov
sub
out
dec
push
in
lds
mov
orl
jbe
add
xchg
mov
lock
pop
or
push
outsl
rcrl
dec
sub
out
dec
aad
imul
insb
jl
testl
scas
xor
push
jns
mov
dec
mov
xchg
inc
and
out
icebp
outsb
in
nopl
inc
loop
mov
inc
add
cs
jnp,pn
stc
pop
xor
lods
push
out
or
js
mov
xchg
xchg
xchg
xor
ret
in
xchg
cmp
xor
inc
add
pop
mov
xchg
jge
inc
mov
ret
test
lea
and
leave
fidivl
stos
cmp
gs
in
add
dec
outsb
lcall
push
jbe
stos
xchg
push
int
push
dec
and
call
aad
je
stc
inc
mov
std
xor
push
test
cltd
mov
shll
push
jnp
sub
inc
in
ficoms
xchg
jns
nop
mov
roll
xor
rcl
out
gs
pop
pusha
cld
pop
add
and
inc
lret
mov
hlt
push
or
dec
fwait
mov
mov
lods
cli
inc
movsl
cs
dec
aam
loop
outsl
fnsave
mull
int3
in
bswap
enter
movhps
cli
xchg
and
and
or
mov
add
xor
cmpsl
ljmp
dec
dec
clc
jg
sbb
pop
push
pusha
push
mov
inc
rclb
xchg
outsl
es
jnp
pop
and
push
movsb
pop
ss
aad
sub
bound
add
jns
sub
int
pop
dec
rol
cmp
dec
adc
mov
push
adc
lea
lahf
mov
add
and
push
ret
or
or
xor
push
jne
add
movsl
xchg
xor
sbb
mov
sub
sub
loopne
add
xchg
sbb
mov
mulps
add
and
sbb
inc
jno
pop
aaa
mov
push
mov
jle
adc
sub
mov
loope
jmp
leave
stos
shll
cmpsb
mov
xchg
mov
mov
js
sub
xchg
sbb
mov
lret
lfs
out
aam
das
iret
pushf
lret
movsl
test
popl
xchg
jbe
scas
fdivrl
mov
fs
hlt
imul
hlt
pop
xchg
sbb
pop
pop
or
incl
test
popf
loopne
mov
add
dec
int3
cmp
push
pop
push
jnp
sbb
sbb
pop
lahf
xor
or
inc
sub
add
sub
inc
setg
mov
pop
mov
sub
les
jecxz
pusha
xchg
outsl
fs
loope
or
ds
inc
leave
xchg
mov
pop
rol
sub
add
sub
nop
into
mov
ret
divl
incl
xchg
cmp
es
pop
gs
jp
out
lods
cmp
mov
fs
adc
cld
cmpsb
lea
cmc
mov
aas
out
lods
jmp
daa
push
jmp
jp
sarb
imul
adc
movd
sub
xlat
sbb
jae
std
fnstenv
sbb
and
sti
shrb
mov
lds
and
pop
adc
push
ljmp
mov
or
popf
cli
sbb
jne
jmp
ds
cltd
orb
insb
scas
stos
in
mov
xor
lock
cli
dec
lret
pop
fstps
repz
fstpl
pop
xor
push
mov
test
cmc
aas
out
je
cmpsb
test
flds
adc
mov
mov
out
aad
popf
inc
movsl
pushf
jp
and
mov
ss
mov
fisubrs
lea
sarl
dec
inc
hlt
imul
add
imul
clc
mov
icebp
pop
imul
inc
cmpsl
cmp
cmp
xchg
mov
cmpsb
test
stos
out
or
andl
popa
inc
ljmp
test
prefetch
push
in
mov
pop
sbb
int
fcomps
mov
push
fmull
call
and
jns
cmpsb
cmc
sbb
dec
mov
shlb
mov
filds
nop
mov
ret
lret
sahf
xchg
ret
gs
rcr
lock
cmp
fwait
sub
aaa
das
cmpsb
movsb
mov
jp
nop
loop
mov
faddl
ret
sbb
mov
jle
ror
push
rcll
js
lea
test
lods
mov
std
gs
inc
enter
outsb
das
stos
ja
pop
fidivs
inc
arpl
mov
pop
fldt
mov
inc
movsl
jae
inc
lret
pushf
adc
shrb
sahf
fistpl
adc
in
jno
cmc
xor
popa
cmp
into
mov
mov
or
mov
xchg
adc
push
inc
lods
test
adc
and
iret
mov
or
cmp
insl
test
xchg
xor
insb
das
inc
popa
aas
fbstp
pop
mov
sub
or
inc
adc
andb
or
and
mov
mov
mov
cli
test
insl
pop
and
loopne
jae
insb
or
iret
loop
mov
and
lea
add
jae
pop
or
ja
fdivr
xor
mov
xor
and
inc
repnz
faddl
pop
lahf
jmp
xor
or
movsb
sub
xchg
cld
inc
sti
sub
mov
int3
or
push
aaa
inc
sub
cmp
xchg
inc
pop
cli
xchg
and
inc
stc
push
hlt
cltd
data16
bound
push
shlb
adc
hlt
sbb
add
xchg
repnz
idiv
cld
mull
sbb
pop
clc
inc
mov
cmp
or
imull
sub
sub
sbb
sub
repz
sub
jnp
add
inc
pushf
sub
xchg
push
ss
and
inc
sub
adc
sahf
fimuls
out
inc
lahf
in
cmp
mov
rcrb
dec
push
sub
push
mov
lea
mov
scas
pusha
push
sub
adc
mov
mov
movsl
in
push
xor
fdivrl
dec
mov
xchg
es
test
and
sbb
inc
xchg
push
cld
int
and
fs
rcrb
bound
pushf
inc
pop
xchg
pop
cmp
push
mov
push
cmp
pop
insl
cs
std
or
xchg
insb
sbb
mov
aaa
rorb
inc
ret
nop
lods
mov
pop
inc
cmc
std
push
jnp
or
fdivs
lds
shrl
lods
lcall
xlat
and
in
mov
xlat
enter
pop
xchg
sarl
rcrb
sub
out
pop
fdivs
shrl
lock
out
stos
push
data16
jbe
sbb
and
push
jnp
xlat
icebp
push
and
push
sarb
jg
pop
xchg
xorb
push
jge
xor
popa
pop
sahf
pop
pop
mov
lods
int
fidivl
cltd
xchg
aas
test
stos
les
sbb
decb
in
pusha
and
movsl
mov
cmp
outsl
iret
mov
out
ret
cmp
pop
lods
or
lcall
mov
daa
aaa
push
mov
adc
inc
push
dec
xchg
mov
jno
and
cmc
int3
xor
and
in
cmp
mov
push
and
enter
dec
mov
jo
jmp
dec
inc
cmp
push
mov
shlb
in
xchg
xchg
mov
out
outsl
aas
jbe
and
jae
mov
push
add
dec
out
xchg
mov
inc
ja
cmp
add
icebp
test
mov
dec
push
int
lret
pop
test
cmp
fs
inc
jb
movsl
mov
or
pop
sti
test
push
mov
int3
hlt
das
jecxz
pop
out
adc
pop
adcb
cltd
mov
ficoml
dec
push
mov
sbb
stos
lds
mov
xchg
jne
insl
lea
inc
call
hlt
add
add
cli
enter
into
int3
std
push
insl
cli
inc
testl
jae
push
mov
out
imul
repz
sub
cmp
cmp
push
shlb
loopne
mov
clc
mov
jecxz
inc
mov
jle
ficomps
sbb
clc
xchg
push
push
arpl
out
fdivl
inc
add
clc
mov
lret
xor
hlt
and
sub
popa
mov
fdivrp
dec
sti
inc
sub
jne
loope
inc
xor
ret
pop
adc
inc
adc
int
dec
ds
pushf
jecxz
jns
nop
dec
pop
xchg
add
pop
in
into
in
movsb
movsb
xor
idiv
add
popa
mov
lret
ljmp
stos
mov
out
jbe
xchg
call
int
movsl
imul
shlb
dec
pop
stc
adc
sub
in
jns
push
push
and
iret
inc
and
dec
das
push
fists
test
push
lcall
bound
push
lock
icebp
shll
sbb
pop
pop
push
and
insb
int3
aaa
in
jbe
push
lods
enter
or
cmp
jmp
jp
ljmp
bound
rol
push
out
sub
dec
in
js
lret
adc
test
jae
lret
movsb
in
dec
xchg
add
mov
into
mov
adc
lret
dec
push
xchg
testw
out
jge
pop
das
stc
and
sub
lcall
inc
data16
sbbl
sti
shrb
push
xor
idivb
cld
jnp
test
pop
cmp
call
rcrl
jo
lods
sub
rcll
fildll
cmc
dec
imul
es
pop
int3
inc
dec
insb
push
mov
mov
xor
idivb
and
sar
addr16
int3
pop
pop
xor
mov
and
ret
shrb
ret
popf
sub
int3
mov
pop
jae
sub
sbb
adc
push
push
jp
mov
sub
adc
outsb
xchg
and
xchg
sbb
test
pop
je
inc
inc
inc
lds
jecxz
and
inc
ret
cli
mov
push
sbb
fmuls
ss
bound
in
pushf
cli
repz
scas
outsb
lods
aad
into
mov
jno
mov
jb
aad
adc
cmpsl
iret
cld
int3
mov
cmp
cmc
fidivrl
cli
add
adc
pop
fcoml
popl
mov
es
mov
mov
xor
and
cmpsl
xchg
mov
fdivr
fs
mov
jge
mov
loopne
cmp
jno
push
sub
es
lods
mov
in
and
ja
mov
xchg
test
mov
adc
mov
pusha
iret
adc
or
mov
mov
sbb
xchg
adcb
pop
jge
aaa
mov
outsl
movsl
rcr
ljmp
imul
clc
cmp
mov
jb
mov
lcall
movsb
mov
nop
mov
pop
xchg
push
inc
shlb
cmc
stos
mov
jns
hlt
lcall
xor
shrb
lds
pushf
push
add
mov
pushw
aaa
or
fnstsw
loope
cmp
test
sbb
cld
jl
jecxz,pt
sbb
in
jnp
jl
inc
leave
push
mov
test
lds
rcll
lock
les
or
sbb
xchg
movsl
js
cmp
mov
inc
push
push
pop
cmp
cmp
xlat
add
and
repz
insb
dec
inc
cmpsb
pop
jl
jl
push
test
or
xor
mov
int3
mov
lahf
iret
cmp
bound
or
adc
mov
mov
jl
subb
lcall
mov
push
lds
adc
cmp
ret
icebp
ss
mov
pop
push
add
aad
in
pop
sbb
ret
mov
xchg
jae
xchg
adc
jae
pop
loope
idiv
aas
call
cmovle
jp
dec
gs
sbbl
cmp
cmpsb
pop
nop
call
dec
das
out
inc
dec
jb
mov
dec
dec
outsb
mov
dec
push
jg
arpl
add
fwait
js
mov
jae
mov
push
inc
stos
fstpt
jg
mov
xor
mov
fs
mov
movsl
add
dec
and
es
movsb
dec
daa
jno
mov
xor
or
mov
in
testb
bound
imul
fimuls
jne
fwait
ja
jg
push
mov
xchg
mov
pushf
fwait
mov
fcomip
dec
mov
and
imul
dec
stos
add
js
cmpsl
cld
xchg
icebp
jp
jge
inc
lock
loop
adc
pop
jmp
stc
mov
out
jae
aaa
sbb
push
imul
dec
xor
adc
imul
dec
jmp
out
jb
sahf
gs
test
fadds
mov
mov
inc
jo
jo
ss
jmp
adc
xchg
sbb
mov
enter
adc
sti
pop
and
cwtl
add
jns
mov
js
or
in
shl
je
cli
sub
push
loopne
mov
mov
cmp
hlt
inc
mov
test
xchg
xor
mov
test
in
sub
fbstp
jle
dec
mull
mov
loop
dec
repnz
sbb
lds
in
cmpsb
sbb
push
shrb
cmpsl
lcall
lret
push
inc
dec
notb
cmp
sub
mov
jge
and
jae
xchg
dec
jo
cmp
pushf
insb
inc
rolb
leave
sbb
sbb
arpl
icebp
xor
cmc
arpl
rorb
inc
mov
in
push
pop
inc
jge
mov
cmp
enter
mov
jbe
add
jne
sub
psubb
inc
outsl
in
js
fwait
shrl
sub
insl
inc
fdivl
mov
inc
ja
sub
xor
cli
pop
lahf
mov
fiadds
mov
xchg
popa
lods
push
or
sub
mov
cmpb
mov
adc
jb
testl
or
cmc
packuswb
repz
cmp
cs
and
mov
adc
ret
push
xchg
enter
xor
sbb
cmc
dec
fadds
das
out
push
sbb
lea
xchg
jmp
arpl
das
cmp
jnp
ss
inc
js
loop,pn
clc
pop
mov
push
cmp
add
and
addl
mov
mov
cmp
and
push
or
xchg
mov
addl
mov
movsl
mov
add
out
mov
push
pop
inc
sbb
testb
xchg
clc
cmp
pop
lahf
inc
pushf
insb
jmp
pop
add
lret
in
lock
iret
mov
push
jmp
xchg
mov
icebp
jo
xchg
push
out
inc
std
jmp
mov
mov
test
sub
pop
inc
sbb
sub
push
std
or
xchg
mov
ret
arpl
dec
imul
push
enter
aam
imul
fdivrs
and
jno
js
inc
div
cmp
jecxz
xchg
dec
pop
pop
insb
lock
in
inc
notb
inc
les
fld
loopne
cwtl
enter
lret
xchg
test
dec
xchg
xor
cmp
cmp
xor
pop
shrl
fcoms
dec
js
dec
int
call
nop
inc
sub
adc
jle
test
cmpb
or
daa
sub
xlat
jns
clc
push
fisubs
sbb
das
jmp
push
dec
movsl
push
adc
and
or
outsb
aas
bound
shlb
les
int3
xchg
ja
popa
pop
js
add
push
pop
jecxz
and
ja,pn
lcall
cld
push
ret
sub
push
dec
sti
push
aaa
mov
lret
movsl
jle
movsb
mov
les
sahf
pop
inc
insl
outsl
push
aaa
loopne
fst
fcomp
lods
and
pop
cli
ds
dec
or
sbb
fnstsw
dec
inc
and
cmp
inc
xchg
in
clc
xchg
pop
lahf
mov
sub
fcoml
push
rcl
inc
pop
push
sbb
pop
mov
inc
clc
xchg
pusha
xorb
xor
xor
cs
aam
cmc
xchg
add
stos
jmp
mov
test
jns
sbb
cmp
lea
cmp
adc
inc
es
jmp
add
fwait
mov
cltd
aas
xlat
add
mov
push
push
adc
int
push
xor
inc
dec
call
jecxz
stc
cld
jmp
in
inc
add
push
fsub
xor
aaa
sub
pop
jno
xchg
jb
das
mov
out
cmp
into
ja
push
in
xor
out
push
pop
add
mov
xor
nop
cltd
cltd
lcall
fdivl
fstl
adc
add
addr16
dec
sarl
xchg
jle
push
add
mov
repnz
mov
mov
mov
arpl
mov
dec
inc
test
pop
sbb
mov
in
testl
pop
sub
mov
pop
lret
or
in
push
cmc
cmp
mov
push
mov
dec
mov
imul
fisubrl
repz
insb
imul
adc
dec
hlt
mov
lods
add
xor
fwait
repz
xchg
lods
cmpsl
cmc
add
bound
push
jge
cltd
outsl
mov
xor
xor
mov
pop
pop
sbbl
loopne
push
xorb
mov
mov
loop
imul
jmp
mov
pop
std
insb
roll
push
dec
jl
les
out
aaa
imul
fcoms
cld
inc
loopne
shl
sub
add
xor
into
dec
jl
cmpb
jp
cmp
lcall
add
daa
sub
decb
mov
add
mov
xchg
jle
ret
test
and
inc
incb
in
fnstsw
and
xchg
fisttpll
xchg
mov
in
ret
inc
int
iret
pop
xlat
inc
dec
mov
inc
loopne
add
fnstenv
xor
push
fidivs
jg
cmp
js
test
mov
pop
je
shl
lahf
dec
addl
loop
call
or
inc
movsb
xchg
jmp
ss
add
movsb
outsl
mulb
add
xor
add
cmpsb
jle
pushf
in
cmp
push
in
lods
clc
mov
cld
jns
fstps
xchg
inc
ret
sbb
add
sbb
inc
and
mov
popa
lods
test
add
push
cmp
repz
and
repnz
addb
xor
inc
pop
fists
or
test
flds
ret
jb
das
in
xor
in
fbstp
inc
xor
xor
call
sbb
or
ficoml
lret
inc
push
cmpl
jg
ljmp
dec
add
ds
mov
xlat
js
adc
adc
push
mov
jno
and
and
dec
adcb
add
push
and
pop
aas
lock
push
inc
insl
mov
pop
jbe
adc
insl
sbb
mov
out
ds
into
stos
notl
inc
push
cmp
adc
ljmp
arpl
in
inc
stos
add
mov
xchg
std
or
pop
fldt
cli
inc
mov
sbb
iret
and
pusha
or
inc
adc
movsl
enter
dec
out
dec
xchg
cmp
adc
pop
ror
xchg
inc
mov
mov
stos
xchg
xchg
clc
xor
sub
and
arpl
lret
sahf
addb
scas
movhlps
cwtl
cmp
das
scas
push
cmp
push
dec
sbb
and
adc
cmp
sub
mov
movsb
sti
push
xorl
xchg
test
add
xchg
add
shl
fisubrs
cmpsl
jmp
xor
jb
cmpsb
and
add
call
js
test
cwtl
aad
xor
adc
cmp
outsl
sbb
scas
movsl
cltd
fiaddl
fs
mov
or
dec
jne
mov
testb
rcr
sbb
cmpl
sbb
jb
push
mov
pop
and
mov
jle
fs
nop
test
pushf
ljmp
inc
pop
dec
sbb
dec
mov
movsl
test
push
push
mov
jge
outsl
in
mov
outsl
xor
pop
push
push
cmp
ret
imul
cmpsl
mov
xor
fstl
lret
push
test
fcoms
xor
mov
xchg
mov
mov
out
loope
jns
mov
jg
leave
les
push
and
aas
fists
jecxz
and
sub
dec
fdivrs
pop
idivb
xchg
movsb
dec
loop
inc
insl
sub
push
xor
mov
pop
xchg
leave
ljmp
mov
xor
adc
cmc
in
cli
ds
xor
pop
outsb
mov
xchg
jne
sbb
cmp
push
push
dec
cmp
sbb
fstpt
sub
stc
mov
aaa
lret
out
cmp
jo
repnz
std
loopne
jmp
jbe
in
mov
clc
outsb
jo
add
dec
push
rolb
cmp
aaa
push
push
cmp
mov
add
jp
sbb
xchg
jno
popa
pop
mov
scas
jge
scas
test
rol
cwtl
scas
int3
sub
mov
mov
mov
mov
xor
iret
sub
enter
sahf
mov
dec
push
ret
mov
fildl
jbe
pop
stos
stc
xor
testl
and
lea
inc
push
mov
stc
push
lahf
das
pop
pop
sbb
xchg
test
loope
jnp
int3
and
rcrl
xchg
clc
xor
out
ret
loope
insb
das
popa
xchg
loopne
outsl
in
jecxz
sub
mov
sbb
or
xor
jl
mov
call
daa
pushf
cmp
mov
sub
lods
adc
enter
es
sub
push
mov
adc
push
testl
sar
iret
xchg
push
mov
les
out
inc
out
hlt
mov
int3
and
outsb
mov
repnz
push
lahf
mov
pop
insb
pop
call
mov
pop
dec
addl
movsl
test
les
cwtl
decb
sbb
leave
xchg
pusha
dec
xchg
sub
mov
mov
xchg
int
dec
les
shll
xor
data16
add
in
lock
jmp
cli
shlb
bound
scas
aaa
pop
mov
out
sbb
outsl
call
mov
mov
adc
and
mov
call
fisubs
rclb
mov
or
imul
test
out
stos
mov
int3
out
test
shll
jno
shll
test
xchg
and
xlat
mov
inc
leave
cmp
outsl
dec
mov
test
jns
mov
testb
sbb
and
sub
imul
cmp
jnp
ret
int3
rcr
push
cmp
rep
cmp
push
aaa
jmp
fsubr
add
test
loope
repnz
pushfw
mov
and
enter
mov
scas
fwait
out
xor
mov
adc
push
movsb
mov
inc
mov
mov
lods
fidivrs
sbb
dec
mov
stc
cltd
test
cli
sbb
and
mov
add
mov
dec
inc
xor
test
inc
fsubs
fs
jne
push
xor
or
gs
xor
aam
push
ficoms
mov
stos
fistl
cmp
inc
clc
test
cltd
and
in
icebp
inc
loopne
jle
call
sbb
xor
movsl
dec
in
sbb
stos
mov
pop
mov
sbb
push
mov
sub
movsb
call
push
jle
xor
ja
data16
xchg
cltd
adc
test
cmp
mov
rolb
mov
pop
inc
sbb
bound
adc
add
jne
fwait
push
add
adc
jbe
add
pop
out
push
mov
clc
mov
dec
inc
fistps
jp
pop
into
sub
sub
adc
push
push
inc
sbb
arpl
sub
in
inc
jno
pop
sub
stos
mov
test
mov
sbb
hlt
jmp
andl
or
add
push
iret
pop
shlb
and
hlt
push
nop
loope
mov
xorb
rcrb
mov
shrl
clc
xlat
cmp
jne
out
or
adc
movsb
sub
inc
xor
sbb
mov
es
lcall
xchg
fisubrs
cmp
xchg
xchg
add
ss
pop
adc
dec
push
out
mov
outsl
cmp
jae
pop
loope
pop
push
ds
xchg
lea
lods
add
es
push
ljmp
jbe
dec
roll
xchg
inc
aaa
outsl
mov
push
push
cwtl
adc
mov
lds
cmp
inc
lret
push
push
fsubrl
xorl
xchg
es
sbb
rolb
fiaddl
and
sub
sbb
cmp
insb
jle
cmp
or
xchg
and
and
mov
xor
jmp
call
push
std
in
fdivr
shlb
cli
rcll
add
stos
sti
les
mov
xlat
jne
enter
int3
xchg
pop
pop
lods
fildl
dec
decb
inc
push
dec
mov
clc
ljmp
jge
mov
mov
popf
lahf
dec
mulb
jecxz
iret
jae
inc
sub
orl
dec
cs
lock
push
mov
sahf
outsb
and
xor
fst
fwait
adc
dec
dec
ljmp
testb
loop
jg
popf
jmp
cld
mov
inc
add
xchg
mov
add
jne
xchg
adc
outsb
jmp
repnz
outsl
mov
jge
popa
enter
outsb
imul
in
xchg
adc
fcoml
fidivl
cwtl
add
sbb
ret
test
insb
dec
loop
into
mov
jge
cwtl
push
adc
scas
test
sahf
cmp
fcoms
stos
ret
loopne
dec
lret
out
lret
testl
mov
sti
fcoml
aaa
jb
pop
mov
push
mov
mov
scas
sahf
inc
sbb
repnz
inc
mov
jns
scas
sbb
or
xchg
mov
xchg
xor
int
stos
cltd
xchg
and
fistpll
scas
aam
inc
or
cmpsb
fimuls
jle
sbb
xchg
lods
mov
jb
dec
push
cmp
cmpsb
ss
mov
adc
jo
xor
imul
or
mov
sbb
xor
cs
stc
xchg
jp
test
ss
sbb
das
popf
push
cli
jecxz
mov
jnp
jns
and
sub
scas
mov
push
and
adc
cltd
lahf
cli
jge
leave
sub
cmp
out
pop
pop
lds
loope
jp
pop
push
or
sbb
mov
loop
loopne
mov
lea
bound
pop
and
lcall
or
cmpsl
frstor
xchg
arpl
sti
sbb
xorl
test
inc
adcb
add
cmc
mov
mov
cltd
clc
mov
jno
loope
pop
mov
fdiv
mov
addr16
cli
popa
xorb
mov
loope
daa
out
pop
push
mov
out
bound
out
imulb
jp
jmp
xchg
sbb
lods
jge
adc
pop
push
xor
mov
out
xchg
add
daa
loope
mov
rclb
sub
mov
int
lret
or
shlb
cwtl
sbb
pop
je
das
into
cmp
add
adc
aad
jno
filds
push
dec
js
mov
sti
cmp
scas
sub
mov
lahf
xchg
xor
inc
push
in
and
leave
ds
cltd
sub
sub
pop
push
jb
or
sahf
add
cwtl
das
pop
cmp
fsubrp
ret
rolb
mov
pusha
mov
loopne
mov
cmpsb
add
repnz
jbe
imul
xchg
pusha
ja
adc
ja
pop
jbe
imulb
jnp
xchg
ret
mov
jns
js
adc
adc
mov
icebp
and
xchg
mov
call
pop
stos
shll
jb
mov
test
cmp
sub
ret
aaa
and
dec
cld
imul
ficoml
cmpsb
or
call
rcll
shrb
popa
dec
jae
gs
int
adc
add
les
lods
push
fdivs
sbbl
out
rclb
outsb
pmaxub
rol
scas
sbb
repz
xchg
mov
mov
jnp
push
xchg
nop
lcall
repnz
jnp
sbb
push
jmp
xor
mov
fs
test
or
dec
imul
sbb
lret
lods
inc
cmpsl
jbe
pop
jno
fldt
cmp
fisttpll
mov
popl
cmp
ds
jns
cld
jg
mov
lcall
or
xchg
pop
cmpsb
pop
pop
inc
dec
roll
inc
shlb
push
shl
in
in
imul
push
mov
jo
clc
loop
adc
loope
inc
idiv
idivl
cmp
and
js
imul
jmp
push
lock
jmp
jmp
xor
sbb
mov
jp
push
cmp
push
dec
add
lret
fwait
adc
daa
mov
lret
and
add
sub
jns
xchg
mov
jb
aam
int3
push
js
rcll
jmp
and
das
dec
cli
mov
push
xchg
les
add
cwtl
stos
scas
into
lret
mov
mov
or
aas
outsl
roll
test
pushf
push
out
int3
in
or
jbe
sbb
jecxz
and
or
cmp
cli
bound
jle
lahf
sti
and
mov
cmp
gs
jmp
or
xchg
mov
adc
or
cs
lock
pop
fmuls
std
push
jg
xchg
mov
cmpsb
scas
add
pop
dec
bound
int3
rclb
xchg
lods
mov
cs
cmp
mov
push
test
jle
pop
hlt
loop
sub
aam
out
inc
xchg
mov
add
hlt
lcall
test
cli
jle
xor
dec
add
std
leave
fcoml
fisubl
loopne
shlb
or
push
sbb
std
xchg
sarb
mov
leave
je
pmaxsw
sub
adc
ljmp
adc
call
sarb
stos
sbb
lods
jnp
sub
clc
daa
shlb
xlat
mov
in
cmc
in
xor
je
aas
or
pop
or
or
mov
or
xor
dec
and
mov
sbb
popa
addr16
add
xchg
das
pop
sbb
or
arpl
dec
shr
xchg
aam
and
call
cmp
fwait
dec
or
stos
frstor
adc
sub
addb
scas
xor
lods
dec
xor
jecxz
pop
lods
mov
outsl
jmp
stc
mov
xor
daa
or
pop
dec
add
and
scas
stc
lret
decb
subb
jge
int3
imul
popa
loope
leave
loop
cmp
push
xchg
jae
fcmovnb
jl
cmp
lret
sub
mov
fcoml
lcall
pusha
cmp
xor
mov
pusha
lahf
push
dec
adc
fnsave
jbe
das
lcall
or
xorb
pushf
add
cmpsl
jae
mov
or
mov
into
mov
fs
pop
lcall
push
test
jg
xor
in
cmp
outsl
add
cmp
fnsave
outsb
sbb
mov
xor
dec
inc
aas
jae
aad
aad
cmp
xchg
mov
ror
movsl
hlt
or
mov
mov
pop
stc
into
cltd
ss
insl
jbe
sub
stos
aaa
cmp
rorl
clc
aaa
lods
pop
inc
loope
das
add
add
pop
inc
or
sbb
shl
jge
mov
xchg
mov
out
push
xor
jge
cwtl
stos
adc
sub
jb
decb
jle
mov
inc
mov
int3
lock
mov
das
or
fisttps
mov
inc
xlat
cmp
dec
dec
sbb
xor
xlat
and
fsubl
mov
mov
xchg
loope
test
jmp
movsl
call
mov
mov
dec
cld
testb
cs
xlat
push
jne
ljmp
mov
das
mov
or
ror
mov
lret
ret
les
clc
aaa
or
sbb
pop
or
es
shlb
in
xlat
addr16
lcall
out
shrb
sbb
mov
mov
mov
xor
shrb
mov
mov
nop
xchg
pop
mov
jmp
add
inc
ljmp
cmp
repz
out
aam
or
cmp
xchg
cmp
push
cmp
cmp
repnz
push
enter
dec
popf
push
push
pop
xlat
in
dec
sbb
leave
mov
xchg
test
lret
xchg
and
push
push
das
ret
fcomps
pop
mov
jae
or
dec
xor
dec
out
dec
and
sbb
xchg
inc
daa
sbb
jp
add
enter
je
xor
call
out
leave
xchg
imul
mov
fidivrl
sbbb
xor
fwait
sahf
push
aam
mov
or
and
mov
aaa
mov
mov
xchg
pop
pop
test
roll
andl
ja
xor
rolb
xchg
out
or
int
xchg
loope
imul
shrb
xchg
pop
xchg
jge
movsb
jno
repz
jno
jmp
mov
pusha
jbe
or
idivl
sahf
call
mov
out
cmpsb
movsl
jae
test
lds
lahf
push
leave
popa
or
mov
mov
rol
iret
aam
sbb
js
iret
movsb
aas
xchg
cmpsb
sub
pusha
pop
push
stos
jae
stos
sbb
add
mov
add
int3
sbb
ret
cmc
ss
lcall
ret
ss
mov
sub
das
fidivl
xor
in
mov
pop
in
int3
dec
aaa
outsb
or
push
sbb
push
xor
mov
mov
mov
push
pop
mov
adc
jle
push
jo
lret
movlps
mov
xlat
sub
jecxz
out
sbb
and
orl
movsl
dec
in
cmp
or
xor
push
fisubrs
nop
fbstp
jp
add
push
into
mov
mov
adc
aas
inc
add
jno
mov
ds
xor
int
mov
aaa
and
pop
fiaddl
addr16
jo
repz
insl
jnp
int3
mov
cwtl
lcall
pushl
aad
test
mov
inc
scas
pop
xchg
test
push
in
or
pushf
and
fmul
insb
sub
bound
sbb
lret
movsb
cwtl
mov
sarl
in
jl
jnp
and
add
xchg
xchg
jmp
pop
in
shll
mov
imulb
cmpsb
jp
lret
insb
inc
sarb
mov
dec
aam
pavgw
and
es
jmp
leave
inc
sahf
dec
loop
in
adc
jne
in
lret
hlt
push
sbb
es
es
xor
sub
add
mov
xor
and
das
mov
nop
fs
mov
lds
out
in
mov
jle
mov
lret
mov
and
mov
inc
mov
sti
xor
loopne
xchg
mov
xchg
into
inc
rcll
xchg
jle
xor
push
adcb
pop
adc
or
cmp
enter
hlt
jo
ret
cmp
inc
pop
repz
mov
add
or
dec
mov
dec
popf
adc
fdivs
pop
or
jno
pop
fiaddl
cmpsb
adc
and
cld
xor
test
pushf
insl
and
jge
ljmp
in
sub
cmpsl
aad
cs
pop
rorl
mov
inc
dec
inc
les
and
bnd
and
pop
dec
and
or
add
pop
in
loopne
insl
mull
std
pop
pop
jb
out
jp
or
inc
fwait
ja
stos
xchg
push
add
addr16
pusha
pushf
and
xchg
popa
imul
js
mov
mov
cmc
movsb
lret
popf
shll
in
sub
test
data16
dec
in
add
jmp
pop
ljmp
inc
xlat
imul
rclb
icebp
adc
lock
in
in
or
repz
xchg
nop
aad
stc
repnz
loopne
in
insb
rcrb
dec
mov
out
daa
push
xor
or
xchg
push
in
ss
inc
mov
mov
mov
jp
mov
jno
adc
xchg
jne
les
jl
jnp
jb
inc
clc
pop
in
filds
push
cmc
add
mov
mov
and
cmp
lods
nop
inc
mov
sar
imul
adc
xchg
popa
push
mov
jg
adc
jne
sbb
sbb
lea
pop
jbe
mov
inc
ljmp
stos
xor
jbe
insl
mov
lds
mov
dec
insl
mov
mov
fs
ja
add
pop
arpl
inc
lret
addr16
loopne
mov
jae
movsb
dec
adc
fwait
pop
mov
loop
clc
xlat
scas
and
mov
inc
add
icebp
push
movsb
xchg
dec
pop
fs
dec
and
icebp
je
adc
jne
pop
icebp
pop
mov
mov
adc
push
push
jns
outsl
iret
jo
mov
mov
scas
loope
iret
jnp
insb
cmpsb
or
sahf
adc
fldcw
loope
jg
xchg
or
mov
arpl
cs
cmpsb
cs
pop
mov
ficoms
cli
or
inc
xchg
adc
mov
inc
aam
call
lret
negl
ror
jp
movsb
adc
cmpsb
hlt
xlat
sbb
inc
or
mov
mov
dec
es
and
imul
es
dec
or
mov
pop
or
cli
bound
mov
adc
mov
fwait
or
leave
jb
into
xchg
mov
dec
mov
in
das
fldenv
enter
lods
push
incb
adc
xchg
inc
lret
testl
mov
leave
and
cmp
mov
cmp
mov
mov
imul
adc
leave
or
push
ret
xchg
sbb
outsl
or
scas
lea
sub
pop
filds
jns
stos
icebp
jl
mov
fcompl
mov
test
test
das
outsl
pop
pop
mov
insb
pop
or
add
in
arpl
adc
add
roll
pop
cmp
call
add
pop
mov
jnp
insl
push
push
sub
arpl
cmpsl
mov
hlt
mov
lods
push
fstps
test
faddl
out
fwait
iret
ficompl
cli
xchg
xchg
stos
xchg
insl
push
cmp
test
out
pop
mov
and
insl
mov
insb
cli
bound
ja
cmpsb
lock
sub
mov
dec
jns
lcall
popa
stc
lret
repz
mov
inc
add
xchg
popf
fisttpll
jno
fwait
adc
and
test
add
add
push
mov
mov
and
les
dec
xor
push
imul
bound
ljmp
jmp
push
loope
mov
movsb
das
cltd
test
leave
orl
adcl
jns
in
cmp
jno
js
addb
xchg
or
mov
shrl
sub
lret
pop
sbb
insb
mov
pop
sti
clc
or
ljmp
cmp
xchg
adc
cmpsl
lods
xchg
test
cs
sysenter
jno
pusha
jns
cmp
roll
xchg
sub
cmp
push
aas
loop
jne
mov
cld
sub
lret
test
insl
daa
test
cwtl
leave
movsb
adc
call
sub
pusha
adc
addr16
cmp
lods
add
add
fnstenv
mov
push
into
inc
sbb
sbb
or
int
mov
xor
cmp
mov
or
nop
lods
shlb
sbb
dec
sbb
xchg
mov
xor
adc
push
clc
fistpll
sbb
loope
ficomps
mov
pop
push
daa
cli
pop
loop
negb
add
xchg
divl
jns
divps
sub
mov
add
push
insb
cmpsl
sub
out
xor
add
sub
xor
cs
jmp
push
mov
lret
xchg
rcrb
jbe
mov
lcall
std
or
int
test
rol
arpl
adc
inc
sbb
lods
and
cmp
xor
pop
mov
out
shll
push
mov
inc
xor
call
or
sub
rcll
jp
imul
jge
cld
repz
leave
mov
cld
inc
fs
and
mov
jl
das
and
mov
add
xchg
and
mov
ljmp
or
mov
in
int3
call
popf
mov
sar
daa
insb
xor
and
aas
seta
iret
aas
jmp
nop
imul
rcll
sub
subl
ss
jmp
sub
jmp
loopne
dec
lret
dec
loopne
test
mov
stc
mov
mov
cmp
shll
cmp
adc
inc
shld
xchg
arpl
imul
fs
out
das
and
and
sbb
popa
and
cs
mov
mov
ljmp
push
add
pop
push
push
std
in
sahf
adc
push
les
xor
xor
inc
xor
aas
sub
xorl
add
call
pop
rcll
and
and
mov
push
cmpsl
or
xchg
rolb
cmp
es
test
ret
dec
mov
jp
mov
push
mov
outsb
push
jb
or
mov
in
fnstcw
imul
add
adc
bnd
cmp
xchg
push
movsl
or
sbb
fwait
mov
shrb
and
mov
in
jns
addr16
add
pop
cld
fcmovnbe
std
fidivl
cld
or
mov
ss
ja
jo
pop
mov
fisubrl
mov
mov
mov
or
jbe
pop
mov
popf
insl
xorl
and
shlb
cwtl
leave
jecxz
cmpb
or
cmp
das
pop
jmp
pop
adc
lock
dec
repz
das
jl
xchg
popa
cmp
push
xchg
or
adc
cltd
out
jmp
push
xchg
call
sbb
push
xchg
outsl
sub
in
pop
andb
scas
xchg
fwait
insb
mov
cld
inc
add
adc
roll
mov
xchg
xor
sbb
adc
mov
ret
cmp
stos
je
nop
cmp
sti
add
mov
xorb
cmp
rcrl
adc
pop
xchg
fcompl
xchg
out
ror
cmp
fdivrl
and
push
dec
xchg
mov
sub
sub
rcrb
sub
lock
nop
pop
scas
jge
in
and
outsl
cmpsb
loopne
xor
inc
in
rcrl
sub
push
mov
test
xor
xor
xchg
popl
pop
bound
sub
stos
negl
xlat
inc
sarb
inc
jl
xchg
rorb
out
cmpsb
iret
or
sbb
sti
pop
and
out
or
sbb
loope
adc
leave
gs
pop
lcall
inc
dec
mov
and
and
xchg
test
mov
ja
movsb
pop
js
jae
mov
aas
cmpsl
xchg
and
int
xlat
cltd
mov
dec
loope
mov
das
pushf
mov
adc
inc
loopne
cwtl
outsb
ss
and
adc
or
jnp
popf
dec
or
aaa
push
cltd
mov
xchg
lcall
in
jo
scas
pop
rclb
push
pop
cld
imul
sbb
sahf
sti
gs
cmp
adc
mov
outsb
lcall
mov
enter
sti
lods
ljmp
pushf
loop
dec
mov
xchg
adc
imulb
sbb
popf
xor
rsm
inc
cmpb
or
inc
xor
cmpsl
clc
pop
and
test
push
xor
jnp
repz
das
mov
pop
es
cli
mov
push
in
xor
mov
and
loopne
fstpt
mov
repnz
out
and
ret
cmp
xchg
popa
enter
mov
mov
stos
xchg
out
dec
ficoml
sub
cmp
push
pusha
jle
or
sub
and
adc
inc
mov
jp
leave
data16
push
sbb
xchg
sbb
loopne
add
dec
lcall
mov
inc
jecxz
je
leave
js
loopne
mov
mov
mov
into
scas
insl
lcall
pop
in
xor
stos
arpl
test
insl
hlt
das
or
cs
and
fisubrl
hlt
mov
push
cmc
in
iret
out
xchg
mov
jne
xor
adcl
cmp
or
int3
mov
in
push
scas
dec
sbb
cmpsb
lcall
mov
mov
fisttpl
inc
mov
mov
out
sbb
mov
scas
sbb
les
aad
outsl
les
pop
mov
mov
xlat
loope
mov
pop
push
cld
fs
push
dec
fs
leave
mulb
inc
out
push
ja
dec
xchg
scas
shll
lds
xchg
ret
ds
xchg
jo
jb
fwait
xchg
xor
pop
xchg
pop
lock
ret
addr16
loopne
int3
lods
and
jmp
imul
jo
cmpsb
std
lret
sbb
outsb
movsb
push
cmp
mov
jnp
enter
test
mov
mov
inc
adc
ja
testl
imul
xchg
inc
xchg
adc
ret
sub
decl
jmp
aad
stc
sbbl
add
hlt
fdivrl
dec
jmp
lods
test
in
mov
insb
xchg
or
or
sub
stc
xchg
cmpsl
movsb
jne
pushf
mov
adc
pop
cld
sti
or
scas
jg
sub
ds
push
xor
imul
mov
int
sub
mov
sti
sub
hlt
sbb
addl
ja
movsb
pop
repz
paddusb
ficoml
push
out
jae
jnp
mov
inc
jmp
repz
or
pushf
xchg
xchg
mov
popf
aas
in
and
out
aad
inc
les
mov
and
aad
fidivs
xorl
imul
xor
and
push
dec
dec
mov
sub
stos
loope
sbb
loopne
jne
fcoms
sti
scas
aaa
es
push
clc
add
inc
stos
call
inc
xor
push
jb
sbb
ret
inc
int3
dec
jnp
jbe
dec
dec
test
mov
mov
inc
sub
rorb
scas
fdivrl
push
out
das
insb
cmc
and
mov
mov
sbb
xlat
inc
fwait
sahf
jp
fldenv
inc
rcr
outsb
pop
push
sub
out
mov
test
bound
enter
push
mov
fdivrl
jo
insl
push
fldcw
xor
divl
popf
jo
adc
imul
lods
stos
out
xor
cmp
mov
stos
push
adc
repnz
add
jo
ljmp
repz
divl
imul
or
and
jae
mov
jecxz
test
fcmovne
jne
xchg
sub
pop
xor
mov
cli
aam
mov
xorb
push
dec
test
mov
in
cmp
sbb
mov
push
lret
mov
or
loopne
hlt
ret
lods
and
data16
add
aaa
sahf
call
dec
or
les
aas
cmpsl
pop
cmp
sahf
mov
inc
leave
jmp
mov
ret
pushf
and
sub
sub
aas
mov
outsl
xor
pop
aas
mov
add
scas
fistps
add
leave
pop
xor
push
add
jmp
jno
xchg
mov
adc
jg
pop
jne
arpl
outsb
aaa
mov
xor
cld
push
sbb
idiv
pop
test
jns
mov
mov
daa
loopw
add
aas
clc
sub
enter
adcb
mov
lahf
cld
sub
or
mul
imul
mov
and
pop
loope
clc
xchg
push
out
pop
leave
scas
pop
or
adc
sbb
xchg
sbbb
add
lret
lcall
movsl
inc
mov
cmp
inc
cld
in
xor
stc
pop
mov
and
push
add
dec
cli
mov
pushf
es
dec
aam
pop
xchg
sbb
sub
pop
subb
xlat
push
inc
dec
add
test
je
fs
out
outsb
out
mov
shll
xchg
and
xchg
push
fbld
sub
out
out
repnz
in
xor
jo
ja
pop
ret
das
jge
lods
inc
subb
jle
mov
jg
pop
arpl
dec
mov
lds
pop
mov
pop
imul
fadds
cli
push
fld
ds
dec
pop
mov
repnz
lret
popf
divl
fwait
cmp
or
filds
call
jge
jg
pop
iret
pusha
clc
ret
push
sbb
out
arpl
lret
and
push
jl
sub
js
jne
mov
lret
lods
fiadds
pop
cld
pushf
jae
fwait
mov
adc
jb
test
jg
push
ja
sti
xchg
or
jo
lock
inc
into
ljmp
mov
fimull
adc
pop
cmpl
or
mov
or
insb
pop
mov
mov
inc
fiadds
les
aad
jno
push
ja
lret
cmp
mov
jge
aaa
loope
gs
scas
ret
cwtl
icebp
xchg
pop
cli
add
cli
and
fcoms
pop
and
test
out
shl
mov
sbb
into
xchg
stos
aam
fildll
cmp
add
push
fisubrl
push
incl
xchg
mov
inc
sub
lods
cld
inc
dec
mov
xor
push
lock
lods
iret
lret
jp
jp
xchg
and
out
mov
std
hlt
dec
add
mov
mov
lock
mull
ljmp
test
sbb
fs
xchg
jp
jl
jae
aaa
insb
inc
push
xor
scas
das
xor
sub
es
xchg
dec
cld
add
inc
test
ds
stc
adc
scas
dec
inc
dec
xchg
mov
mov
add
mov
popf
scas
add
test
mov
iret
enter
jge
cmpsl
cs
adc
sub
fisttps
or
loope
in
adc
lret
test
cmp
mov
and
mov
out
jb
test
xchg
pushf
ja
xchg
jno,pn
push
xchg
xor
jae
lods
in
repz
xor
xchg
jnp
clc
je
popa
and
movl
or
call
pop
ja
sub
pop
jg
fldl
xchg
add
je
or
and
fwait
lret
mov
dec
out
push
pop
iret
inc
jg
mov
fldenv
mov
negl
xor
rorl
lods
aas
rcr
dec
sbb
or
cmp
sbb
loop
dec
rcrl
push
lahf
out
imul
std
sub
dec
dec
add
sahf
movsl
jmp
push
fdivl
xchg
fisubs
lret
cmpsl
ja
xchg
pop
scas
pop
mov
and
das
cmp
clc
bound
faddp
cmpxchg
inc
add
xchg
sbb
and
aaa
cld
pop
jnp
sub
dec
jae
xor
lds
push
bnd
dec
sbb
sahf
int
and
in
mov
xor
add
push
pop
sub
stc
add
mov
or
mov
int
xchg
xchg
test
mov
fdivl
aaa
dec
imul
aas
inc
dec
std
mov
mov
in
out
jb
and
jnp
add
sbb
mov
ficompl
sub
add
cmp
cmc
mov
aam
outsl
dec
jno
xchg
repnz
jo
test
lret
jb
dec
jp
movb
cmc
sti
add
sar
sbb
int
xchg
int3
shlb
outsl
stos
push
xor
adcb
pushw
dec
jbe
xchg
or
pop
mov
shll
pop
push
dec
fisttpl
stos
xor
ret
pop
lods
out
adc
and
inc
scas
call
inc
in
aaa
stos
cmp
nop
test
xor
imul
test
sub
sbb
xor
scas
ljmp
adc
jp
out
stc
push
add
fsubrl
sahf
push
mov
mov
pushf
mov
ret
pop
sahf
popa
aas
xchg
enter
mov
sbb
pop
mov
incl
mov
cmp
dec
jne
and
ficomps
movsb
pop
sbb
fcmovb
push
aam
push
dec
push
pushf
jnp
in
daa
test
sbb
xor
jbe
adc
pop
cmc
movsb
xor
cmp
imul
sahf
faddl
mov
inc
pop
daa
enter
out
popa
adc
sub
rcrb
cmp
pop
leave
popf
call
in
xor
mov
cld
sub
and
std
pop
add
repz
pop
dec
fstps
add
xchg
cs
mov
add
push
pop
sbb
push
lahf
dec
pushf
in
or
sbb
push
in
cmp
lcall
jge
adc
inc
inc
push
shr
dec
addr16
jmp
jle
xor
dec
add
fsubrs
les
cmpsl
xchg
repz
ret
mov
add
loop
add
imul
pop
icebp
aaa
inc
mov
stos
test
add
dec
ljmp
test
cs
test
mov
lods
lahf
stc
rorb
mov
scas
jmp
adc
leave
test
out
cmpsl
in
pushf
iret
mov
stos
rol
addr16
outsb
imul
movsl
in
or
inc
and
sbb
rcrb
add
aam
nop
outsb
or
sub
test
inc
scas
int
or
fucomi
push
fistpll
test
pop
out
push
add
hlt
sub
stos
enter
ds
xchg
dec
lods
in
dec
jl
cmp
cli
icebp
jecxz
cmp
push
sub
leave
stc
imul
cld
adc
push
cmp
pop
lds
ror
scas
sbb
test
lea
repnz
cmpsb
mov
or
mov
fnstsw
outsl
cmp
or
lods
addl
addr16
lahf
leave
xchg
or
shlb
stos
imul
les
cmpsb
imul
jnp
shlb
pop
and
jne
add
mov
aaa
aam
js
in
inc
addr16
push
push
gs
pop
pop
hlt
insl
mov
jae
bound
loop
push
lods
mov
cmp
int3
sub
jle
dec
xchg
jecxz
sub
rol
lret
sub
stos
or
outsl
int3
cld
test
pusha
sub
lcall
cmp
divb
and
sbb
xchg
mov
lret
aas
pop
adc
xor
lods
inc
cmp
mov
mov
mov
stc
pop
insl
sub
pop
jbe
push
js
pusha
jns
lds
in
pop
jae
fwait
in
sbb
and
dec
lods
cmpsb
inc
dec
ret
dec
ja
shr
out
xchg
mov
fildll
dec
mulb
dec
cltd
inc
dec
mov
sahf
pusha
shll
movb
cmp
cmc
xor
and
jbe
mov
loopne
xchg
jnp
int
subl
in
dec
js
fwait
cmp
loope
mov
movsl
push
mov
mov
sarl
xchg
rcr
push
xchg
and
pop
or
mov
stos
cmpl
cld
inc
jns
mov
sbb
pop
stos
push
in
fyl2x
xchg
call
gs
pop
fildl
shrl
add
inc
daa
push
in
lods
push
cmp
fidivrl
pop
mov
fisubrs
iret
arpl
jne
out
xchg
sbb
cmpsl
xchg
outsl
sbb
pop
ljmp
sbb
mov
outsb
and
lret
test
xor
cmpsl
hlt
adc
add
xor
xor
mov
adc
pop
stos
lds
mov
inc
and
fimuls
aaa
je
aaa
jmp
mov
mov
insl
or
sub
int3
into
mov
popf
bts
and
sti
jnp
and
ljmp
xchg
dec
adcb
lods
out
add
push
fstpl
push
fldl
lret
je
mov
pop
cli
or
lret
pop
lods
or
jmp
stos
test
mov
cmove
cmp
adc
icebp
mov
sbb
mov
aas
adc
aas
adc
ljmp
pop
std
es
or
push
add
ret
push
mov
push
popa
and
pop
mov
or
dec
js
xor
nop
imul
mov
pop
push
sbb
cmp
mov
add
rol
jae
mov
sbb
jle
fisubs
push
scas
jg
jne
ret
ja
sbb
enter
or
jecxz
push
xor
and
cmp
sbb
mov
icebp
fs
xorb
add
mov
jge
push
ds
iret
cmp
cmc
or
js
cltd
fimuls
pop
movsl
push
jne
sbb
insb
cmp
sub
ds
or
mov
cmp
cmp
add
stc
sbb
mov
aas
in
push
cmp
add
xchg
arpl
arpl
ljmp
lock
xchg
mov
jns
adc
push
mov
aas
repz
mov
sbb
mov
pop
push
icebp
inc
push
es
cmp
dec
mov
cmp
ret
sub
sub
clc
in
outsl
adc
add
mov
enter
cmp
int
push
hlt
int
push
jae
push
and
shrl
daa
js
push
cmp
dec
sub
test
sti
mov
jae
notb
test
pop
and
jns
sbb
or
mov
movsl
cmp
test
lcall
leave
jge
xchg
jge
js
push
jle
cmp
cmpsl
int3
divl
push
ror
jns
pop
aaa
insl
or
andb
jnp
push
lret
pop
out
jge
jp
in
stc
push
insb
les
xor
rcrl
dec
cli
mov
dec
stos
push
cmp
xchg
movsl
sub
idivl
xchg
jmp
xchg
icebp
mov
out
in
push
xlat
or
fwait
dec
popa
rorl
cli
xchg
xor
ret
repnz
jbe
cmp
out
sub
mov
enter
adc
outsl
loop
inc
cs
sub
or
add
cmp
out
addl
cmp
in
add
jb
subl
or
fisttps
shll
inc
adc
lea
cmc
ja
ret
xchg
mov
aaa
jo
fiaddl
jno
dec
cli
data16
outsl
mov
cmp
adc
mov
lds
pop
inc
xor
sub
lds
sub
mov
out
xor
jmp
fsts
or
cmp
pop
cmp
xchg
or
fidivrs
mov
fistps
vunpcklps
in
mov
inc
inc
jmp
push
aam
sbb
lcall
ret
fucomip
dec
pop
loop
or
fiaddl
mov
test
aad
js
mov
mov
movd
outsl
dec
dec
pop
mov
scas
or
adc
jmp
add
push
shll
frstor
add
lods
lahf
enter
aad
mov
out
sub
dec
mov
enter
dec
incl
test
xchg
or
cmp
adc
repz
pop
arpl
or
sub
fcompl
inc
and
dec
jnp
inc
and
mov
das
jmp
cmp
xchg
addr16
pushf
addr16
push
fists
call
push
xor
jle
and
sbb
stos
push
lahf
mov
jecxz
inc
addr16
outsb
push
xchg
in
dec
mov
cmp
adc
sbb
je
jo
adc
sbb
push
lret
inc
xchg
mov
add
daa
fnstsw
mov
sub
bound
stc
ljmp
ret
push
popa
filds
shl
and
out
lahf
dec
dec
xchg
jmp
cwtl
bound
mov
mov
and
cmpsb
leave
jmp
orl
mov
cmp
sbb
pop
sbb
push
js
pop
pop
mov
out
bound
jmp
and
push
xor
and
push
stos
inc
mov
sub
fisttps
stos
pushf
jbe
sub
cmp
push
aaa
fdivrl
mov
ret
mov
lea
pop
mov
add
adc
xchg
jp
mov
push
call
in
push
mov
jge
sub
push
test
lods
loop
add
iret
in
fsubr
dec
outsb
xchg
test
clc
testl
jnp
dec
movsl
cmc
insb
int3
cmpsl
dec
fs
gs
pop
repnz
scas
rcr
je
inc
adc
lahf
test
outsb
js
or
mov
mov
sti
mov
jle
repnz
sbb
add
inc
shll
out
xor
out
scas
xor
jnp
lret
das
sbb
iret
xchg
enter
pop
pop
push
test
cld
or
sbb
mov
jecxz
movsb
dec
lret
mov
mov
sti
fldt
ljmp
lcall
sub
sbb
dec
push
and
inc
add
xor
dec
lea
xchg
push
or
dec
inc
jge
rcl
nop
push
pop
mov
in
pop
mov
dec
popa
jecxz
inc
btr
pushf
mov
mov
imul
push
pop
cmpl
mov
fucomp
adc
push
addr16
mov
roll
xor
lods
xchg
daa
pusha
jl
dec
xchg
ret
notb
mov
adc
mov
rcl
cmp
stos
sbb
push
ljmp
lret
loop
js
test
pop
fsubrs
cli
cmp
inc
jl
push
lea
sbb
cmpl
mov
xchg
dec
push
loop
testl
xchg
cwtl
ds
scas
cwtl
and
iret
sub
mov
sub
imul
sub
test
push
dec
in
lea
xchg
inc
and
or
movsl
bnd
out
mov
dec
xorl
push
mov
xchg
enter
xorl
jmp
jns
inc
mov
pop
ret
xchg
dec
jns
rclb
fidivs
push
adc
sahf
icebp
pop
sahf
mov
mov
mov
pop
lahf
sahf
lds
adc
lock
jbe
test
outsl
bound
ss
nop
sbb
pop
sub
in
pusha
and
pop
xchg
push
add
inc
movl
in
sbb
mov
outsb
aad
imul
mov
pop
mov
cwtl
gs
dec
pusha
push
xlat
mov
call
mov
mov
fdivrs
andl
push
fcmovu
xchg
pop
inc
test
sub
cmp
push
out
in
mov
aaa
insb
and
sti
loop
xlat
iret
add
push
jne
jne
mov
ss
or
mov
inc
inc
xor
push
lret
das
add
fisubrl
xchg
adc
fwait
sbb
mov
push
data16
sub
mov
lds
jne
sbb
xor
mov
out
jmp
int3
lods
test
mov
sub
fistpll
inc
stos
outsl
push
ss
push
xor
inc
shl
stc
mov
daa
xor
pop
cmp
pusha
push
jg
push
scas
xchg
cmp
pop
adc
sbbb
shlb
add
push
lea
fists
jl
popa
mov
fstpl
scas
daa
outsl
test
sbb
fdivrl
adc
fnstenv
rolb
push
cmc
lods
mov
and
testb
inc
push
pusha
or
shr
mov
out
stos
add
inc
sub
or
cmp
jp
inc
mov
cmp
jnp
lea
int
lret
push
and
mov
lret
cmp
xor
push
shll
pusha
xlat
cld
mov
movsb
xor
xor
push
xor
push
mov
cmp
xchg
mov
popf
scas
repnz
mov
mov
adc
add
repnz
mov
mov
test
jns
fildll
mov
pusha
mov
inc
mov
test
aaa
sbb
inc
jecxz
test
sbb
mov
push
pusha
push
pop
int3
mov
and
fcoml
testl
add
aaa
pusha
jle
shll
cli
js
mov
xor
call
mov
test
popf
push
into
push
inc
fpatan
test
lcall
in
mov
fstl
lea
cmp
add
push
push
and
and
push
outsb
insl
xor
and
adc
and
and
dec
loop
in
subl
jle
je
cmc
jno
sub
and
subl
mov
mov
mov
inc
je
inc
xchg
inc
xor
push
push
mov
aam
pop
fsubr
loope
cs
testl
inc
dec
aad
or
cmp
int
add
cmp
push
jp
xor
sbb
add
mov
sbb
xor
in
pop
and
adc
and
rcr
inc
cmp
add
jmp
mov
imul
inc
lret
mov
push
sub
inc
mov
stos
fisubrs
mov
jg
dec
and
loope
pop
push
sub
addr16
xchg
movsl
pop
push
ds
xor
push
pushf
dec
push
les
adc
mov
adc
imul
movsl
shl
cwtl
les
and
push
cli
cwtl
popl
loopne
inc
mov
jmp
and
xor
insl
push
push
ret
jae
dec
and
lret
in
jmp
cmc
push
lods
mov
lods
push
xchg
test
popf
pop
push
sub
iret
jmp
ret
ds
mov
int
loop
mov
add
dec
sub
and
push
inc
pop
scas
push
andb
fistpll
push
jne
addb
jl
fiadds
jge
decb
and
std
aaa
arpl
sub
dec
cmp
test
sbb
cmp
sbb
mov
fstpl
mov
push
cmp
imul
cmp
arpl
inc
mov
movsb
pop
sub
pop
mov
mov
jl
cli
inc
repz
pop
aaa
cld
das
lcall
xor
add
out
popf
pusha
out
push
or
stos
lea
sti
xor
popa
pop
mov
arpl
out
xor
test
sahf
inc
cltd
out
mov
xchg
addr16
adc
sbbb
imul
call
sbb
dec
or
ficoml
aas
orb
outsb
jbe
push
aaa
pop
aad
lods
sbb
cmc
in
das
ret
cwtl
sub
or
lods
mov
inc
jbe
lret
pop
dec
jg
pop
sub
rcl
in
xchg
cmp
inc
cmp
iret
cmc
jp
mov
aam
sub
and
mov
ss
inc
and
push
pop
dec
lahf
int
iret
pushf
jb
jb
movsl
into
lock
and
idivl
nop
cmc
xor
lods
sbb
dec
out
loop
push
lcall
icebp
pop
dec
sbb
and
xlat
movsb
jmp
repz
leave
shlb
fucomip
jp
sbbb
pushf
popf
push
jg
and
nop
ret
rcr
stc
push
cmp
push
cli
shll
or
push
sub
inc
jnp
ds
cs
cld
inc
mov
rolb
mov
in
mov
jmp
lods
out
shl
fldcw
int
jno
andl
push
pop
out
into
sbb
test
sbb
fdivrs
jge
pusha
push
push
dec
gs
std
sbb
pop
pop
xchg
push
call
mov
xchg
fildll
jl
test
jle
xlat
in
fidivrs
jg
mov
fcmove
lods
add
hlt
movsl
or
aad
or
outsl
loopne
leave
int3
dec
sbb
ret
ja
sahf
add
repz
lret
xchg
rclb
xor
or
lds
imul
dec
mov
sarl
add
mov
addr16
jo
fdivrs
dec
or
or
push
filds
movl
push
enter
test
pop
leave
cmc
xor
sbb
cmpsl
dec
mov
pop
sbb
je
hlt
pop
ret
xchg
sub
sub
iret
inc
or
cld
xor
xchg
lret
or
mov
push
ds
pop
sub
mov
mov
sub
sbb
adc
mov
cli
dec
addl
mov
sbb
adc
mov
jmp
cltd
ss
aam
adcl
int
into
imull
pop
aaa
and
in
sub
push
int3
push
test
pop
push
sbb
xchg
inc
in
cmp
dec
aad
mov
cmpb
sbb
sbb
adc
das
pop
ret
sub
mov
sub
and
sub
or
pop
jle
jb
repz
mov
lds
sub
bound
fiaddl
ljmp
repnz
cmp
pop
pop
mov
sti
scas
stos
fstpl
sbb
imul
pop
mov
add
cmpsl
mov
shl
je
cmp
rcrl
cli
sbb
jne
add
test
push
push
and
sub
inc
mov
std
jge
ret
test
dec
dec
push
inc
idivb
jge
out
aam
imul
subl
lds
pop
cld
and
leave
pop
jg
push
push
lcall
sti
lds
xchg
inc
aam
cld
es
jnp
mov
xchg
inc
add
mov
inc
inc
jo
mov
aaa
adc
or
mov
push
adc
cmpsl
pop
into
loope
mov
cmp
ret
xchg
sub
inc
loope
push
loope
jmp
data16
jo
mov
sbb
daa
push
and
adc
lcall
jns
movsb
aas
shll
adc
sub
in
xchg
daa
and
mov
adc
sbb
rcrb
cmp
fiaddl
jmp
dec
mov
mov
and
lock
sbb
mov
push
cmpsb
or
push
jb
or
and
ret
lods
xorl
jb
test
stc
in
bound
lahf
cwtl
inc
or
int3
movsl
mov
mov
sti
dec
enter
push
ss
mov
fsubl
aaa
mov
aam
push
xchg
leave
or
pop
sub
scas
lock
jmp
fidivrl
imul
cltd
cs
mov
xchg
lret
or
into
jb
add
add
loopne
out
ljmp
xor
xchg
xchg
shll
jecxz
das
mov
mov
and
mov
xchg
or
or
jl
lahf
pop
cld
pop
mov
call
test
cs
push
adc
mov
out
add
out
xchg
insb
add
xor
xchg
mov
ljmp
insb
jg
push
out
push
shll
inc
mov
mov
sbb
cmp
inc
mov
mov
cmp
int3
enter
or
xor
add
xor
mov
mov
jns
dec
mov
inc
add
xchg
push
int
add
rorl
jl
jl
das
dec
mov
pop
int3
stc
lods
inc
fists
lock
xor
jo
imul
stos
xchg
int3
pop
mov
lods
cmp
divl
in
mov
jg
test
and
scas
mov
push
mov
les
and
popf
aam
out
out
nop
jecxz
dec
test
test
gs
scas
inc
into
repnz
stos
shl
and
and
clc
cmp
lods
or
ret
or
rclb
xchg
and
sub
xchg
push
jne
es
mov
int
aad
mov
mov
mov
add
xchg
cltd
cmp
fcmovnu
fisttpl
ficoms
fwait
sub
popa
mov
icebp
int3
cmc
movsb
js
pop
mov
cmpsl
out
sbb
sbb
mov
les
loop
test
addr16
ficomps
mov
push
into
mov
xor
arpl
mull
sub
mov
inc
xchg
push
mov
aad
pop
cltd
sbb
push
push
jmp
dec
cmp
push
inc
jmp
mov
mov
cltd
ljmp
sub
inc
mov
ret
xchg
mov
xlat
in
popf
adc
dec
sbb
das
ja
sbb
cmc
movsl
outsb
cld
jl
jb
add
cmpsl
xchg
insb
or
jae
fwait
imul
lcallw
mov
add
es
sbb
xchg
in
or
rcrl
pop
cltd
inc
sbb
inc
ss
sar
jecxz
cwtl
push
imul
inc
jg
mov
inc
mov
js
es
pushf
ret
mov
inc
or
fsubl
xlat
dec
jmp
iret
add
das
pop
fisttpl
dec
lods
add
xlat
fbld
xchg
cmpb
add
fwait
cmpsb
pop
sti
into
lods
mov
scas
lea
jp
les
sub
jmp
cmp
push
imul
fildll
movsb
jnp
aaa
mov
in
push
push
push
js
ja
push
loopne
out
lret
xlat
rolb
xchg
add
aas
movsl
push
xchg
popa
shrb
ljmp
jno
mov
xlat
xchg
fstpl
xchg
cmp
insl
mov
arpl
jbe
stos
push
pop
outsb
jne
cltd
mov
sub
les
daa
std
inc
xor
cwtl
stos
dec
push
lahf
push
lret
pop
pop
or
in
test
mov
adc
mov
icebp
fbld
push
xor
ds
sbb
es
mov
in
dec
leave
aad
push
push
cmc
inc
loop
cwtl
dec
out
add
rcrb
aaa
sbb
dec
add
dec
enter
sub
imull
into
clc
jge
sbb
andb
orl
or
xor
sbb
into
mov
xchg
sub
js
rcl
mov
push
aam
test
xor
inc
push
sbbl
jo
pushf
fldpi
mov
mov
das
div
mov
cmc
push
dec
aas
aam
mov
inc
cs
lods
clc
in
and
xor
cmp
or
mov
adc
jmp
pop
jnp
mov
inc
leave
add
jmp
mov
pop
mov
fsubl
shrl
std
adc
inc
shlb
add
xor
lea
out
xchg
add
xor
fistps
inc
inc
add
out
mov
mov
iret
xor
test
outsl
andb
scas
clc
fidivs
into
lock
and
mov
arpl
jae,pn
fstps
xor
xchg
lret
cmp
sbb
stos
jnp
sub
push
jns
sahf
xchg
pop
mov
jb,pn
shrb
lret
mov
add
jg
inc
cmpl
dec
xchg
addr16
idiv
jmp
inc
lahf
inc
jl
movsl
stc
jno
lds
cld
lds
shll
test
cli
rorb
in
add
mull
loope
test
dec
xchg
cmp
add
mov
xor
cld
cmc
fwait
test
mov
icebp
cltd
not
dec
stos
int3
jl
add
sarb
pop
loop
xchg
aam
sar
ljmp
aad
mov
lea
adc
dec
aam
lods
sbb
pop
jl
out
in
xor
pushf
jbe
dec
clc
addr16
dec
push
jg
mov
out
nop
pop
fdiv
xchg
daa
xchg
pop
hlt
cwtl
jns
jl
or
rcrl
mov
mov
out
sub
dec
popf
jecxz
mov
xor
cmp
leave
cmp
fwait
inc
xlat
int
rclb
fcoml
lds
dec
jno
jno
movsb
push
loopne
mov
scas
add
rorb
mov
jne
loop
fwait
xchg
addl
push
jg
jl
add
cwtl
jb
mov
call
clc
pop
push
gs
and
lods
ja
cmovge
mov
mov
sar
xor
xchg
repnz
mov
adc
push
sti
or
or
outsb
jmp
les
and
sub
out
mov
insb
pop
sub
mov
mov
in
adc
ss
sarl
stos
lds
fdivl
loop
pop
repnz
push
inc
nop
test
std
addl
popa
push
rcrl
sub
cmpsb
fisubl
imul
jecxz
ret
dec
and
inc
inc
imul
mov
push
fmuls
enter
aas
je
jmp
das
cmc
hlt
bound
cltd
enter
cmp
das
xor
and
xor
outsb
js
orl
xchg
sbb
lret
insb
std
aaa
and
push
dec
pop
mov
cmc
lock
xchg
and
mov
mov
std
cmp
scas
push
push
fwait
lock
stos
jmp
jne
xor
pop
call
rolb
cld
xchg
ret
fstps
test
inc
repz
add
add
adc
hlt
call
call
aas
aam
push
push
or
pop
mov
stc
lret
out
js
shlb
and
sub
cmp
mov
dec
lea
fildll
pushf
inc
or
rcrl
cmpsl
sti
popa
repz
cs
jns
call
mov
clc
insb
xor
and
jle
push
add
arpl
jge
inc
test
icebp
inc
mov
xchg
cld
cli
adc
cltd
inc
stos
sub
repnz
pusha
loopne
cmc
out
icebp
inc
mov
mov
push
movsb
push
sub
inc
cli
mov
or
mov
mov
or
mov
lret
out
mov
adc
cmpsb
adc
mov
testl
push
adc
push
adc
xlat
xor
xchg
or
xchg
mov
adc
mov
push
fxch
xchg
cmpb
jmp
mov
cmp
jg
jl
outsl
push
xor
sub
mov
mov
xchg
addb
pop
outsl
pop
ds
xor
mulb
adc
push
cmp
hlt
stos
adc
sub
out
inc
das
js
push
repz
inc
repnz
push
mov
mov
out
jbe
insl
lods
into
pop
aam
pusha
xor
add
in
rcrb
loop,pn
dec
mov
pop
sub
sub
js
add
jne
dec
or
and
mov
mov
cmp
cmp
lds
xorb
shlb
xorb
popf
stos
pushf
jne
xor
cmp
jbe
sbb
mov
lret
and
or
jns
jge
repnz
sbb
cmp
xchg
fs
mov
push
push
aad
shrl
outsb
mov
push
mov
test
aad
pop
dec
sti
jmp
and
arpl
xlat
pop
aaa
mov
mov
push
shrb
popf
mov
xlat
push
out
jmp
add
adcb
push
lods
jo
ret
xchg
push
icebp
pop
lcall
movd
ret
stos
mov
insl
or
jp
mov
movsb
dec
sub
xchg
push
cmpsb
mov
imul
mov
adc
sub
pop
and
das
jp
arpl
add
pushf
pop
xorb
or
pop
cwtl
sbb
inc
icebp
icebp
loope
or
popl
adc
mov
cmpsb
into
pushf
jl
pop
xor
and
pop
xor
idivl
and
or
ljmp
loopne
int
out
jae
es
stc
adc
mov
jmp
push
add
outsb
inc
sub
adc
push
xchg
cmp
adc
jecxz
mov
nop
fcomps
cwtl
adc
orb
dec
push
dec
fadds
pusha
inc
and
stc
stos
adc
pop
mov
jle
nop
in
in
xchg
cmp
push
filds
fsubr
add
inc
aas
mov
mov
pop
out
push
pop
loope
push
packssdw
pop
dec
adc
icebp
push
mov
mov
popf
test
les
pop
ret
mov
insl
push
fwait
or
out
adc
ror
mov
adc
mov
lods
adc
jnp
xor
and
sbb
sub
pop
das
roll
fstl
push
cmp
imul
mov
dec
fdivrs
jmp
cmp
icebp
sbb
rcrl
test
and
mov
sub
mov
xchg
xchg
cmc
mov
cld
loop
cmpb
sbb
pop
nop
cmp
test
mov
xchg
popf
repnz
sbb
arpl
xlat
lret
cmp
pop
or
dec
pop
sub
cmpsl
cmpsl
fadd
dec
daa
xor
inc
arpl
aaa
cmp
frstor
cwtl
test
in
shll
add
and
inc
flds
or
mov
xlat
or
adc
xchg
mov
icebp
shr
mov
lahf
push
inc
xchg
jle
ja
xchg
mov
xchg
sbb
popl
rolb
out
push
shl
scas
adc
xchg
dec
or
mov
jmp
mov
repnz
xchg
sub
mov
xor
es
xchg
jb
sti
adc
iret
outsb
xchg
adc
pusha
aam
and
jecxz
nop
ret
into
and
cmp
xchg
sub
in
push
mov
xor
call
vmovdqu
lea
into
stos
jns
enter
stos
cmp
lods
jno
push
cmp
stc
sub
or
jns,pn
and
xor
mov
mov
push
inc
andl
mov
in
mov
fwait
stc
pushf
mov
ret
dec
hlt
and
add
sbb
adc
clc
sbb
ret
outsl
lret
in
fistps
add
mov
push
jl
loop
cmc
sahf
into
pop
cmc
sahf
sub
std
adc
and
cmp
ret
pop
out
jmp
xchg
popf
shl
fwait
adc
xor
and
popa
ficompl
xchg
shll
push
inc
pop
movsbl
inc
ffreep
push
outsl
cmp
sbb
mov
repnz
or
daa
adc
xchg
and
iret
push
lods
xchg
dec
lret
shlb
mov
xchg
push
outsl
inc
push
pop
xchg
ret
fwait
dec
add
ljmp
lcall
inc
fistpll
test
sbb
gs
lret
inc
scas
in
push
xor
jbe
call
and
push
xchg
imul
mov
out
sbb
lds
or
call
fwait
out
gs
push
mov
cmp
sbb
mov
jnp
mov
loopne
addr16
lods
or
cltd
dec
pop
sbb
mov
sbb
add
jmp
icebp
ds
ljmp
shll
or
clc
cmp
mov
cmp
pop
inc
nop
sub
arpl
stos
outsb
sub
imulb
jle,pt
lock
mov
imul
xor
hlt
mov
or
in
and
aam
cmp
popf
xchg
xorl
xlat
pop
mov
je
outsb
call
dec
sub
xchg
arpl
mov
aam
cli
mov
or
daa
sbb
shl
or
push
dec
sbbl
cmp
aam
push
arpl
arpl
dec
mov
mov
hlt
sbb
mov
int
xor
push
cs
mov
xchg
adc
fwait
aad
jp
enter
cltd
cmp
aaa
xor
sub
es
xor
lods
mov
mov
jg
adc
aam
xchg
push
dec
xor
div
movsb
and
push
shll
je
daa
outsl
add
cmpsl
aad
sub
std
in
mov
xchg
xchg
mov
sub
pop
js
dec
sbb
imul
std
mov
mov
xor
xor
mov
sbb
jbe,pt
cmp
inc
adc
lea
and
adc
lea
cli
cmp
inc
jecxz
jae
adc
sbb
and
lods
stos
ret
negl
xor
cmp
dec
int3
jnp
test
lock
push
jae
cmpsl
push
dec
aaa
insb
out
pop
test
or
cs
inc
and
movsb
ret
sahf
jp
jnp
mov
ljmp
jp
pop
fsub
enter
mov
aas
push
push
add
inc
fsubrp
js
sarl
pop
test
jl
in
ror
or
ficoml
lds
lea
lods
int
and
stos
mov
imul
fidivrl
ret
movl
or
xchg
fistps
mov
mov
sbb
cmpsb
push
gs
shrb
clc
jno
out
jmp
pop
pop
and
scas
cs
push
mov
xlat
jo
push
mov
add
cmpsl
add
add
and
push
jns
leave
fwait
dec
mov
aad
push
sbb
xchg
mov
lock
sbbb
cli
fwait
adcl
ljmp
sub
push
cmp
rcl
push
dec
xor
lret
pop
arpl
decb
fnsave
jp
out
outsl
mov
pop
mov
jmp
cmp
mov
mov
dec
iret
xor
psadbw
inc
lret
addb
sbb
sti
xlat
jbe,pt
mov
push
add
mov
cs
insl
fs
dec
lcall
movsl
sti
push
xchg
and
shlb
push
push
stos
pop
fiadds
xchg
dec
xchg
gs
loope
fiaddl
adc
inc
insb
bound
mov
push
xor
jo
hlt
imul
icebp
lds
mov
rorb
pop
and
jae
mov
inc
test
jecxz
pop
lcall
jb
es
jnp
sbb
dec
lret
lahf
incl
pop
adc
mov
dec
xor
push
xchg
outsl
and
dec
rolb
jp
xor
mov
ljmp
cmp
cltd
andl
cmp
in
mov
pop
jl
jno
sbb
ds
mov
imul
inc
cmc
pop
fisubrs
lcall
pop
les
or
sbb
xor
aad
jbe
cwtl
call
outsl
cmpsb
jle
sub
mov
push
out
push
mov
xchg
in
into
sbb
mov
mov
jmp
add
call
and
leave
dec
jo
dec
jb
xor
jae
jae
xchg
add
ss
fcoms
dec
insb
jnp
dec
push
jle
aad
adc
loop
outsl
or
mov
push
into
das
jmp
inc
daa
aam
sbb
es
or
stos
cmp
dec
adc
add
cmpsl
pop
and
movb
jae
fwait
outsb
cld
jle
lods
insl
xchg
jl
mov
xor
loopne
dec
jno
dec
imul
push
push
imul
je
mov
jbe
imul
cmp
mov
inc
xor
popf
jle
add
icebp
outsl
add
es
out
sub
enter
fisubs
cld
mov
ret
mov
jnp
dec
fwait
jb
std
or
cmp
ja
push
jl
mov
stos
fsubrl
and
inc
into
shll
stos
cmp
into
inc
xchg
aam
xlat
inc
nop
mov
iret
add
hlt
sti
and
add
hlt
and
mov
sbb
xorb
add
out
daa
jmp
in
jmp
mov
icebp
roll
push
cmp
xchg
xchg
sbb
aad
mov
adc
sbb
test
dec
push
mov
pop
sub
cwtl
std
aaa
and
mov
clc
jge
mov
sub
js
and
stos
inc
cmc
mov
xor
shll
rorl
or
call
jne
fistpl
mov
nop
insl
xchg
mov
stos
icebp
lret
test
ds
je
dec
pop
xor
jecxz
out
fistps
push
jns
dec
bound
lret
data16
inc
cmp
mov
notl
cmc
xchg
sti
and
pusha
xor
cld
or
jp
mov
aas
mov
inc
xchg
push
inc
jnp
movsb
inc
cmp
imul
fsubs
pop
int3
jmp
test
sub
sbb
repz
cld
xor
xchg
mov
test
jp
jecxz
frstor
inc
fcmovu
mov
lahf
sub
daa
push
dec
mov
ret
and
outsb
jmp
or
mov
ret
or
dec
cmp
cmp
lahf
or
rcll
xor
lahf
xlat
lea
xchg
cmpb
jle
ret
or
scas
xor
adcb
movsb
test
mov
mov
cbtw
xor
add
loop
dec
imul
gs
pop
add
pop
cmp
xchg
add
pop
in
jmp
sbb
adc
rcrl
fld
hlt
aam
cld
dec
jns
shrl
jge
dec
in
mov
jmp
cli
sub
in
or
inc
cwtl
shrl
clc
scas
dec
in
movsb
cmpsl
out
sbb
dec
ja
add
test
mov
mov
movsb
cmp
jae
lea
in
cli
push
pop
adcl
out
pop
mov
xchg
sti
iret
push
xchg
xor
mov
mov
jo
mov
dec
or
inc
imul
push
xchg
stc
in
insl
test
add
cmpsl
sub
push
rol
add
aad
pop
jl
xchg
into
push
xor
insl
mov
test
cmp
hlt
fwait
dec
push
arpl
pop
int3
mov
out
jmp
push
gs
orb
data16
mov
aas
sbb
stc
scas
daa
movl
pop
adc
mov
hlt
loope
lea
lret
or
sbb
add
add
sahf
push
mov
lds
fdivs
jp
add
int3
jns
mov
dec
inc
fcompl
dec
mov
cmp
push
sbb
mov
mov
xor
adc
in
push
dec
stc
rcrb
pop
sub
jg
dec
push
in
mov
add
xor
xchg
mov
test
aas
add
xor
ljmp
ja
int3
dec
pop
xchg
cmp
inc
mov
jno
lds
scas
cs
adc
xchg
mov
ret
cli
popa
xchg
sub
dec
lret
fistpl
iretw
push
js
lcall
imul
fdivrs
jle
movsb
mov
fs
cmp
mov
pmulhuw
mov
mov
mov
or
or
mov
out
ret
imul
nop
shl
in
cmpb
cld
bound
sub
inc
loop
or
jo
inc
in
jne
mov
or
cmp
mov
push
cmp
loope
xchg
ljmp
insb
movsl
arpl
sub
dec
lds
jge
mov
mov
jo
or
in
jns
bound
mov
pop
ljmp
dec
push
cmp
pop
popa
mov
pop
scas
jns
xchg
scas
mov
sbb
sbb
jb
daa
mov
pushf
iret
je
push
addr16
cmp
xchg
push
daa
xchg
cmc
pop
mov
mov
pop
popf
mov
rcr
bound
mov
or
xchg
fnsave
in
mov
adcl
mov
adc
cmc
mov
jecxz
ret
mov
repnz
fwait
lret
jle
shll
int3
xorl
ja
test
cmc
test
pushf
in
rcll
jl
sbbb
push
inc
push
les
cmp
icebp
jnp
fwait
mov
cmp
out
loop
inc
add
fildll
cmpsl
mov
mov
mov
mov
outsb
lret
xor
notl
jne
xchg
test
dec
jbe
out
mov
add
fxch
adc
inc
imul
add
mov
mov
rcrb
addb
fidivrs
dec
insl
minps
push
rorb
daa
call
inc
cli
mov
push
mov
xor
push
in
jmp
adcb
cltd
mov
sbb
inc
mov
dec
dec
sub
pusha
mov
mov
mov
or
jg
cmp
xor
shr
mov
mov
scas
repnz
scas
mov
ror
add
ja
add
test
xchg
loopew
or
shl
inc
outsb
ret
mov
aaa
add
xchg
adc
mov
test
mov
mov
jo
pop
in
sub
dec
jecxz
insb
push
shll
pop
mov
fdivl
repnz
cltd
leave
test
cld
jnp
shll
mov
lock
lret
mov
add
or
ljmp
fs
jb
scas
xchg
lahf
js
sbb
push
loope
daa
dec
jmp
pusha
stos
mov
sbb
push
jge
rcr
pop
out
push
lods
xchg
inc
lcall
filds
sub
mov
sub
hlt
sbb
int3
sbb
pop
or
sbb
std
cmpsl
inc
xchg
push
pop
in
mov
mov
mov
sbb
decb
stc
pop
nop
stos
out
into
add
pop
add
lock
movsb
gs
insl
lahf
outsl
xchg
mov
cmp
adc
fadds
jp
ds
in
fdivrs
push
dec
jg
push
jecxz
jns
loopne
mov
push
add
pop
movsb
call
andl
and
out
inc
cmp
sub
icebp
dec
fucomp
dec
jecxz
dec
and
add
cli
cmpxchg
mov
jmp
pop
lea
jmp
rorl
cli
push
xchg
jno
sub
jl
push
or
and
xchg
int
ja
or
cwtl
fcomi
lock
arpl
mov
into
add
insb
out
sbb
clc
iret
aaa
push
int
jnp
xchg
out
sarb
sub
lcall
lret
ficoml
daa
or
pop
cs
push
cmp
out
aad
add
inc
repz
rclb
dec
adc
push
and
jno
and
leave
repnz
add
ret
out
inc
dec
mov
mov
fs
fstpl
xchg
stc
add
cmp
adcb
movsb
cmp
icebp
push
cmp
or
sbb
xchg
dec
jge
push
ljmp
arpl
xchg
sbb
aam
mov
dec
aad
push
fs
test
stos
adc
jecxz
dec
sub
sbb
pop
xchg
inc
cmpb
out
push
mov
pushf
cs
ja
push
data16
movsl
mov
sub
into
les
xor
pushf
sahf
popa
sub
imul
ret
sub
fucomp
cmp
sahf
testl
jecxz
lahf
dec
xchg
or
stos
aad
lock
or
xor
data16
mov
cmpsb
dec
push
pop
enter
mov
in
cwtl
and
in
mov
iret
adc
dec
mov
jg
inc
pop
cltd
mov
pop
popf
lods
int3
push
add
or
hlt
jo
sub
fidivl
mov
mov
add
loope
ss
and
and
inc
nop
in
cmpsb
inc
jge
mov
mov
mov
outsb
mov
sub
and
test
mov
jns
mov
pop
mov
imul
mov
leave
int
mov
mov
mov
mov
out
aam
imul
pop
mov
cli
push
pusha
inc
fwait
xchg
add
pop
out
cmp
ljmp
fdivs
push
ret
add
ljmp
mov
lret
enter
add
adc
ret
sbb
adc
aam
pushf
pop
jb
jnp
sbb
es
cmp
fsts
pop
movsl
xchg
cwtl
xchg
mov
and
movb
sbb
mov
pop
outsl
iret
add
test
enter
enter
data16
mov
test
jb
fnstsw
pop
fldt
std
xchg
xor
sbb
mov
jle
movsl
notb
shll
test
push
jle
add
ja
fisubs
pushf
push
adc
and
insb
jb
mov
ds
in
sub
and
mov
push
sbb
pop
jbe
adc
dec
imul
cs
sqrtps
outsb
lcall
lahf
push
test
lret
pop
out
mov
adc
imul
xchg
mov
pop
xchg
cmp
mov
cmp
xor
and
js
push
xchg
repz
ret
mov
imul
jecxz
cmp
jle
ret
pop
cmc
divb
das
mov
xchg
into
test
jae
and
lods
inc
push
xor
xchg
or
outsb
testl
pop
and
xchg
xor
xchg
and
shlb
insb
cmp
inc
cmp
add
or
popf
int
repz
xor
xor
push
inc
jp
jge
mov
leave
xor
sub
push
pop
lcall
int
outsl
movsb
jp
das
add
movsb
shll
lods
into
and
fimull
js
adc
push
daa
stos
in
sub
arpl
mov
cmpb
lcall
mov
gs
dec
shll
cmp
inc
jmp
cmp
lahf
movl
add
adc
in
xchg
imul
xor
pop
fmull
push
cmp
or
cmp
pusha
push
pop
inc
fidivrl
add
hlt
negl
imul
popa
fimull
mov
push
fdivrs
out
xchg
data16
fimuls
mov
jle
mov
ror
lret
xchg
fildll
and
sub
pop
adc
rcl
and
or
sub
xor
mov
pop
and
out
adc
shll
enter
aas
inc
outsb
add
mov
jle
in
lock
jl
ss
and
inc
xor
mov
or
jmp
fidivs
inc
mov
mov
roll
lahf
ret
repnz
or
dec
xor
dec
sub
pop
cmp
inc
and
cltd
ret
popf
mov
cmc
mov
into
mov
add
idivb
iret
int3
sbb
scas
orl
jae
inc
in
lock
lret
mov
jecxz
ja
data16
push
aas
stc
rol
mov
and
cltd
and
and
or
cs
jge
dec
out
cmp
icebp
int
adc
int3
jo
inc
ja
fmull
movsl
mov
dec
lods
scas
leave
jge
gs
ja
adc
mov
and
and
test
loopne
push
add
das
or
sub
in
fstl
jne
pop
cmp
adc
mov
scas
mov
mov
push
and
call
dec
fsubr
mov
fildll
flds
inc
or
dec
mov
in
sti
aam
pop
sbb
inc
sub
xor
fwait
mov
in
lret
bound
cmp
or
mov
mov
pop
and
out
addr16
push
dec
pop
jg
repnz
out
arpl
in
ret
sbb
movsb
and
in
insl
adc
jne
test
inc
in
shll
mov
push
xorb
push
test
jl
add
sbb
lret
adc
mov
cmp
rcrb
jb
lret
pop
xchg
icebp
cmc
push
cmp
xchg
bound
sbb
std
sub
test
cmp
mov
jle
mov
shlb
fwait
clc
push
xlat
jecxz
pop
mov
test
jo
test
sbb
dec
rorl
adc
icebp
lret
ret
subb
movsl
xchg
fcmovbe
mov
inc
pop
cmp
mov
loope
out
sbb
ljmp
hlt
out
ja
jae
outsb
cwtl
and
fmull
ret
mov
xor
je
add
loop
nop
cmpsl
dec
fwait
stos
adc
mov
sahf
mov
jbe
cmp
add
add
add
insb
pushaw
push
test
jl
mov
cltd
fwait
in
cmp
jbe
shll
xchg
dec
mov
sub
pop
addb
dec
pop
add
test
xchg
dec
mov
push
sbb
xchg
inc
cmpsb
push
mov
dec
pop
mov
cmpsb
aad
sbb
mov
sbb
filds
jecxz
cmc
adc
stos
das
call
or
test
fsubs
and
inc
addb
stc
mov
and
loope
cwtl
repz
pop
pop
mov
dec
bound
xchg
clc
xor
pop
pop
sbb
jecxz
enter
sti
push
insl
cmpsb
dec
out
arpl
ja
sbb
mov
xchg
cld
rorl
or
sarb
xor
mov
repz
cwtl
loope
hlt
cld
jbe
push
cmp
aas
mov
mov
jnp
imul
movsl
cli
rcrl
fcompl
mov
insb
pop
sub
xchg
mov
push
les
fidivl
push
pop
jne
out
xchg
xchg
jg
clc
dec
test
ret
test
insb
push
mov
rol
outsb
inc
xchg
sbb
addr16
shlb
femms
jno
mov
push
cmp
int
jbe
pop
fbld
mov
ja
jmp
outsb
pop
aas
mov
shr
cli
xchg
add
addr16
pop
dec
cmpsl
out
pop
shlb
mov
adc
xor
dec
je
xchg
repnz
cmp
xchg
push
xor
dec
cmp
cmp
addr16
int
sub
jp
sbb
pop
icebp
test
inc
aas
and
sub
push
mov
ljmp
leave
add
js
scas
out
lds
mov
outsb
push
jp
or
push
test
lahf
and
mov
adcl
mov
jle
pop
cs
sub
ret
rcrb
and
hlt
cs
inc
les
jb
add
je
lock
cltd
push
sbb
in
xor
jp
pop
ljmp
icebp
and
lods
insb
int
and
loop
aad
fmuls
push
repz
icebp
mov
mov
push
mov
lods
pop
push
fnstenv
cltd
scas
ds
lcall
sbb
sbb
test
gs
mov
icebp
cmp
pop
pop
xchg
jle
mov
pusha
cs
fucomi
scas
popa
sub
fs
idivl
stos
jecxz
scas
cltd
addl
jge
sbb
pop
mov
inc
lods
js
adc
mov
add
fxtract
or
mov
iret
and
aaa
in
push
mov
or
imul
mov
sub
cld
jmp
add
jecxz
mov
pop
cld
faddl
in
push
or
jl
cmp
add
jmp
mov
rolb
popf
jle
sbb
in
mov
fsubl
push
movsl
push
enter
jno
cli
sub
mov
shll
dec
jno
add
xor
jo
fnstenv
or
and
xor
out
cld
sbb
fdiv
hlt
or
dec
fdiv
push
scas
or
fs
int
popa
add
push
and
dec
fdivs
mov
sti
cmp
add
fwait
adcl
adc
shlb
inc
pushf
daa
cmp
push
sub
xor
cmp
mov
add
dec
subb
pusha
push
jae
sahf
cmp
pop
out
arpl
and
mov
cs
sti
jecxz
bound
mov
pop
adc
test
pushf
inc
and
stos
xlat
or
mov
insb
mov
rorb
aam
sbb
movsl
xchg
or
inc
jae
xchg
adc
jl
xchg
xor
add
lods
jns
gs
movsb
push
dec
ja
xor
popf
jmp
outsb
int3
mov
cmc
fistl
mov
lock
add
push
mov
ret
iret
subb
pop
and
pusha
lea
mov
pop
mov
sbb
inc
cmp
clc
sbb
xchg
mov
inc
jno
test
mov
mov
mov
add
mov
not
and
movsl
aas
add
mov
fistpl
dec
or
iret
test
jo
push
orb
ffree
dec
popf
pusha
in
repz
add
sti
fs
dec
repnz
or
fwait
mov
pop
pop
lods
mov
add
ror
dec
nop
mov
lods
shll
sub
movsl
or
jno
js
outsb
mov
fisttpll
cmp
stc
aad
gs
pusha
sbb
les
push
fisubrl
and
mov
mov
cmp
jg
mov
inc
adc
daa
inc
lea
enter
push
imul
push
fs
cmc
jnp
ja
jg
ret
fistpll
cmp
cmpsl
xchg
paddsb
nop
aam
pop
shlb
les
nop
inc
inc
xchg
inc
cwtl
jbe
divl
jno
cmp
xchg
add
pop
les
fsubs
pop
aam
adc
scas
sbb
dec
mov
lods
mov
xchg
mov
or
mov
movsl
ss
add
ret
inc
add
test
add
mov
out
push
add
dec
mov
js
inc
adc
test
xor
xchg
mov
roll
add
jg
ret
push
aaa
insl
mov
or
ss
lods
push
jmp
popf
out
push
sub
add
ret
xchg
imul
test
stc
dec
cwtl
and
popa
add
xor
xchg
rolb
xor
in
mov
addr16
ret
mov
shrl
jb
mov
mov
mov
icebp
add
cs
test
pop
in
and
ret
inc
dec
mov
lods
mov
pop
dec
xor
jle
mov
popa
aaa
aas
adc
xor
std
mov
sub
mov
addr16
data16
pusha
inc
insb
aas
addb
jae
out
cmp
jns
orb
lcall
inc
sub
clc
cmpsl
mov
addr16
fwait
in
lock
cs
mov
out
xchg
jbe
dec
mov
fistps
or
lcall
mov
xchg
out
jns
popf
push
fxam
or
xor
ret
andl
cmpsl
sub
cmp
sub
hlt
fst
cmpsl
xor
mov
or
and
adc
cmp
add
dec
jmp
mov
pcmpeqb
fsubrp
mov
sahf
je
or
xchg
adc
and
mov
and
test
pop
pop
call
les
cmp
xor
lret
mov
jnp
popa
stc
es
fs
push
or
adc
loopne
mov
jle
pop
pop
fsubrs
sbbl
mov
jecxz
pop
enter
mov
mov
stos
rorl
push
scas
lcall
outsl
and
sbb
add
inc
xchg
pusha
xor
imul
jecxz
and
inc
mov
cmc
cli
call
xlat
fcoml
xor
mov
lcall
dec
xchg
mov
push
sub
cmpsb
shrb
call
fs
mov
fs
int
jns
lods
cmc
and
sti
lret
js
sarl
push
mov
xchg
adc
outsl
pop
ds
pop
inc
xor
mov
or
or
test
push
pop
test
jo
ret
or
dec
pop
add
jo
xor
pop
adc
nop
pushf
xchg
test
xor
xor
fistpll
in
push
sub
rcl
dec
sub
int3
xor
xor
xchg
int
les
dec
xor
mov
mov
outsl
idivl
xchg
cld
js
test
movsl
out
sub
mov
jg
xor
cli
sarb
push
add
lahf
sbb
jo
outsb
sarl
aam
sub
test
mov
sub
xchg
mov
movsl
loopne
pop
pop
int3
rcrl
out
iret
in
mov
in
mov
lea
mov
in
mov
push
ret
xlat
iret
fnstcw
sti
fprem1
mov
sbb
std
jns
outsb
xor
sub
push
add
mov
insl
or
inc
lds
scas
or
adc
cmpsb
lahf
mov
sub
je
xchg
test
ret
or
js
gs
mov
ret
xchg
popa
std
mov
inc
insl
jb
mov
pushf
movsb
and
imul
xchg
jmp
mov
test
dec
mov
cmc
inc
ret
add
xlat
mov
movsl
push
adc
pusha
pushf
mov
jb
lcall
jns
sbb
mov
pop
stos
repz
loope
push
mov
rcrb
pop
mov
out
xchg
xor
out
fimuls
in
das
inc
cmpb
pop
cltd
jmp
popf
loope
pop
call
xor
loop
stos
push
xchg
popa
or
pushf
arpl
mov
inc
pop
sbbb
leave
sbb
and
add
jecxz
inc
fstps
ret
cmp
clc
mov
inc
lock
popf
adc
mov
rcl
call
inc
cmp
sbbb
dec
xlat
popl
xchg
aam
add
jge
nop
xor
cmc
mov
pop
add
jae
add
pop
daa
outsb
mov
pop
sar
dec
cld
divl
mov
mov
loope
sti
sbb
loopne
out
xchg
inc
std
mov
out
sub
pop
sbb
rclb
push
pop
xchg
das
mov
xor
sbb
adc
in
xchg
cmpsl
dec
out
mov
popf
je
mov
cmp
popl
fldt
sbb
into
push
lods
lea
and
or
and
dec
cmp
pop
shr
popa
fcoms
scas
fidivs
arpl
jl
xlat
ja
or
outsl
shl
scas
or
test
inc
mov
xchg
iret
push
mov
inc
sarl
sub
rorb
ret
ja
dec
push
fimuls
dec
pop
sub
sub
shlb
pop
pop
in
push
lea
shll
push
xchg
dec
cmpsl
mov
jo
dec
je
mov
push
xor
or
sub
push
test
sti
add
add
pop
dec
lds
push
xor
and
mov
jp
push
scas
jnp
sub
mov
and
sbb
push
andl
or
lret
sub
mov
xor
call
jbe
sbb
or
or
insl
ljmp
lods
pop
push
test
push
jnp
mov
aam
je
mov
test
xchg
js,pt
mov
movsl
push
jp,pt
je
adc
or
fistps
xchg
fs
dec
pushf
test
cld
shlb
or
addr16
pop
pop
jno
scas
cmc
inc
xorb
in
in
nop
ret
je
fistpl
addl
jns
test
sub
or
or
push
and
jmp
push
inc
or
inc
cmp
cmp
test
cmp
in
mov
pop
orb
mov
mov
mov
repnz
dec
and
shlb
inc
xchg
mov
pop
pop
enter
xor
xor
bound
lods
xor
test
dec
std
jo
inc
and
pushf
inc
lret
scas
xchg
scas
pop
lea
and
test
pop
call
and
mov
mov
mov
ror
push
dec
sub
xor
adc
in
clc
mov
sub
jecxz
mov
or
das
add
push
fdiv
mov
mov
arpl
dec
in
rcll
popf
jb
mov
adc
mov
pop
dec
cld
adc
loopne
mov
fsubp
test
jge
pushf
or
add
test
sub
mov
adc
sub
lahf
xchg
adc
dec
add
mov
popf
jmp
jp
inc
inc
sub
dec
js
loope
ja
cmc
pop
add
daa
and
ret
adc
sbb
mov
push
pop
lea
mov
mov
in
jp
cmp
mov
fisttpll
roll
and
fildl
xchg
mov
jbe
mov
xor
aam
pushf
xlat
addr16
mov
or
and
stos
pushl
inc
outsb
fs
push
divl
mov
push
xchg
mov
js
mov
dec
rolb
std
xor
or
jbe
or
jmp
je
adc
sbb
sbb
mov
in
cmpsl
cwtl
pushl
in
push
into
enter
jae
sbb
retw
pusha
cmpb
cld
jg
jns
arpl
push
xchg
sbbb
insb
and
imul
es
es
lret
sub
jne
out
cltd
push
es
push
jbe
scas
lea
jle
gs
fisubs
adc
mov
xchg
sbb
push
mov
dec
mov
mov
adc
inc
imul
ja
xor
cmp
mov
mov
xchg
sbb
cmpsl
lods
jecxz
jbe
lahf
lret
fs
pop
fmuls
add
jnp
adc
or
xchg
arpl
sub
mov
sub
mov
mov
aaa
add
repz
int
out
imul
push
sub
xor
mov
ds
sub
out
xchg
outsb
mov
adc
dec
test
xor
push
arpl
jp
xchg
xor
mov
and
ficomps
fs
and
xchg
fstpl
popa
or
ljmp
les
adc
dec
into
scas
jae
scas
mov
cmc
push
out
scas
mov
mov
or
cmp
pop
mov
fcmovu
push
icebp
mov
fdivr
jo
aad
sub
mov
nop
int
adc
repnz
fstps
mov
out
int
mov
xor
test
repz
push
push
mov
repz
xor
lahf
addr16
sbb
test
scas
jns
dec
imul
sub
cwtl
adc
mov
aam
inc
inc
and
data16
lret
je
and
pop
adc
dec
test
cmp
mov
popa
je
shlb
dec
fdivrp
ja
pop
test
test
int3
add
jmp
aad
or
or
xchg
test
xlat
mov
lcall
add
add
sub
push
fcmovnbe
lds
jbe
ljmp
xor
gs
pop
mov
movsl
fbld
xchg
or
or
sub
mov
xor
aam
mov
test
inc
test
sub
sub
subl
and
mov
cmp
sti
popf
xchg
inc
mov
rcrl
pop
push
add
push
sub
gs
std
pop
insl
sbb
mov
xor
mov
inc
loop
mov
data16
cli
cld
and
push
fsubr
sahf
lods
insb
ret
mov
inc
sarb
scas
or
mov
push
test
adc
cmp
mov
mov
jbe
mov
roll
sub
sub
daa
and
ficompl
adc
fsts
int3
pusha
cmp
adc
dec
je
mov
popa
jmp
jns
insb
xchg
xor
and
dec
sub
test
jae
addr16
les
repz
shrl
insl
mov
imul
imul
sti
stc
sub
imul
add
cmp
in
jnp
push
xchg
pushf
ja
pop
dec
data16
mov
repnz
sub
bnd
les
jmp
dec
xchg
fidivl
in
in
mov
fs
push
mov
mov
pop
fnstenv
xor
mov
sbb
dec
mov
dec
fdivl
cmpsl
shll
sbb
test
subb
sbb
or
lods
cmp
inc
add
add
nop
add
inc
cmp
pop
inc
jmp
cmp
sti
cmp
cmp
sahf
push
movb
popf
and
jge
addl
test
dec
std
or
mov
jo
hlt
jo,pn
jbe
mov
lods
dec
sbb
test
dec
mov
inc
in
pop
negb
push
inc
dec
add
data16
jno
imul
xchg
lea
sub
and
jns
andl
in
js
push
xchg
sbb
mov
sub
dec
cmp
sub
cmp
mov
inc
xorl
mov
inc
adc
jmp
lahf
jo
shlb
mov
and
in
push
test
lods
lock
pop
adc
mov
sbb
and
dec
out
ljmp
mov
rcrb
mov
and
loope
cmpsl
and
push
inc
pop
jnp
mov
inc
xlat
inc
pusha
sub
orb
fbstp
clc
mov
nop
xchg
in
hlt
jbe
push
ds
sbb
dec
test
mov
cmc
stos
fmul
push
sub
inc
imul
dec
dec
mov
pushf
xor
jnp
xchg
jbe
stc
push
popf
flds
inc
lcall
jmp
xor
fnsetpm(287
and
dec
dec
push
popl
das
push
push
fistpll
cld
cltd
test
sub
sahf
test
mov
arpl
sub
popa
cli
stc
mov
outsb
repnz
cmc
hlt
mov
mov
nop
out
nop
dec
mov
faddl
sbb
cmpsl
add
js
jecxz
jnp
cld
sarb
jg
aaa
sub
test
jno
dec
or
stc
mov
out
dec
and
cmc
shrl
xlat
pusha
stos
mov
addr16
popf
jne
and
aas
xor
push
enter
bound
xchg
imul
dec
mov
or
or
push
cmp
add
and
mov
sbb
push
movsb
call
inc
jge
scas
mov
adc
cmp
fwait
push
and
sub
push
dec
stos
and
cmovp
int
scas
pop
call
popl
xor
mov
daa
icebp
lcall
cs
adc
cmp
mov
jp
fistps
idivb
idivl
test
jbe
loope
adc
pop
lcall
xchg
or
in
add
fadds
xchg
mov
mov
cmp
shlb
je
push
sbb
sub
jp
pop
lea
push
aas
imul
je
ja
mov
adc
pop
das
int
jbe
lcall
scas
xchg
leave
or
inc
add
jb
or
push
xor
faddl
xchg
mov
dec
or
int3
xor
shld
fistpll
lds
lods
inc
add
adc
fstpl
xor
adc
pop
adc
pop
jns
movsl
add
lods
cmpsb
fsubrs
testb
lret
sub
and
lods
out
in
mov
push
dec
or
add
pushf
inc
pop
aad
xchg
jae
jmp
push
fcmovnbe
mov
dec
lods
xchg
aad
xchg
push
stc
aaa
out
idiv
mov
ret
in
jle
push
cmp
sbb
std
sbb
mov
rcrl
bound
fbld
pushf
sub
andl
loop
mov
sub
and
inc
movsl
imul
ret
out
add
xchg
addl
mov
pushf
fwait
jmp
std
jnp
js
cmp
ja
pusha
inc
out
push
pusha
xchg
pop
fs
ss
pop
xor
rorb
std
xor
and
andb
xlat
popf
and
pusha
lods
movl
lods
fs
jmp
mov
es
out
jle
roll
mov
mov
adc
shll
ret
jbe
add
or
xor
cwtl
test
outsb
adcl
sarl
xchg
pop
hlt
jns
jae
inc
pusha
push
adc
stos
push
repz
lcall
testb
lods
fdivrs
sub
cwtl
sbb
jo
in
xchg
or
dec
loope,pt
sbb
pop
and
popa
cmc
daa
push
leave
int3
sub
xchg
imul
das
aaa
ljmp
lods
mov
jmp
pop
sbb
stos
xlat
in
mov
shlb
and
and
cwtl
das
clc
mov
in
sub
lds
xchg
movsl
jl
mov
loop
lds
not
shlb
mov
pop
movsl
dec
adc
cltd
je
mov
inc
testl
imul
cltd
jmp
sub
sbb
jb
pusha
cltd
mov
stc
mov
fcoms
add
movsl
lcall
test
mov
aam
push
pusha
jmp
outsb
movsb
je
ffree
scas
jecxz
jecxz
add
jl
das
aaa
dec
movsb
cmpsl
dec
inc
push
aaa
into
fcoms
fldl
mov
pop
push
xor
jb
push
ror
sti
in
iret
test
sub
mov
leave
mov
mov
and
jne
pop
out
adc
sub
sub
xchg
mov
pop
mov
das
ret
gs
pop
repnz
and
nop
ficomps
xor
sub
xchg
test
and
jmp
mov
sub
js
in
dec
mov
test
repz
and
and
mov
add
in
push
loope
out
loope
mov
aas
adc
or
mov
pop
ds
repnz
mov
repz
leave
jnp
inc
xor
push
or
popf
imul
popa
outsl
pop
data16
or
jns
xor
and
jno
add
test
xor
ja
test
dec
xor
jnp
jnp
jmp
rclb
ja
arpl
dec
cwtl
insb
push
nop
and
lret
push
lret
test
sub
pop
pop
mov
pop
xchg
aaa
popa
hlt
mov
pop
test
pop
lds
xchg
nop
push
dec
xchg
fsts
outsl
imul
pop
repz
das
adc
dec
repz
xchg
loopne
imul
jl
or
sbb
sbb
sub
push
lahf
les
inc
divl
fsubs
inc
adc
pop
sub
dec
test
mov
dec
mov
fs
mov
cmp
outsl
in
jmp
cmp
pop
aam
shll
jl
inc
fucomip
mov
sahf
xchg
into
dec
push
testl
push
or
and
push
adc
lea
pushf
in
pop
test
lret
jae
sbb
ret
push
cli
lds
clc
or
inc
xchg
cmp
out
movsl
lds
cmp
sbb
arpl
int
cmpsb
ret
popf
adc
jecxz
mov
mov
xchg
push
bound
clc
dec
sub
mov
inc
dec
push
pop
jp
inc
out
int3
and
xchg
or
fidivrs
mov
add
jo
sub
stos
pop
data16
mov
popa
mov
in
daa
inc
mov
inc
inc
mov
test
and
add
iret
jne
std
add
fmull
push
daa
jg
pusha
call
gs
mov
lcall
js
into
jge
add
arpl
fdiv
iret
out
cld
push
out
test
inc
test
jp
xor
jb
or
std
orb
lock
leave
popa
int
xchg
mov
xor
dec
rcrb
dec
in
repnz
ret
dec
add
popf
dec
mov
cmp
movsb
jge
adc
lret
adc
push
dec
xchg
mov
pmullw
out
ficoml
out
sbb
ljmp
jl
fcmovnbe
insb
and
ljmp
push
sti
arpl
cwtl
aam
or
jle
aaa
mov
leave
test
orl
pop
mov
mov
movsl
scas
iret
fists
push
inc
fisttpll
popf
pop
dec
mov
imul
mov
lret
sub
adc
sub
mov
pop
push
lds
pop
movsb
data16
rol
sahf
jecxz
sahf
loop
sub
lcall
das
lret
idivb
mov
jl
dec
out
js
outsl
rclb
ss
pop
push
mov
inc
jns
lahf
pop
rclb
adc
add
xchg
mov
pop
outsb
mov
inc
xchg
cmp
xor
mov
in
pop
pop
orb
dec
cmp
mov
outsl
mov
je
push
xchg
mov
jnp
jecxz
daa
outsl
xor
or
outsl
test
xor
push
pushf
adc
lea
push
add
xor
jle
sahf
xchg
push
popa
addl
and
inc
mov
pop
push
xchg
loop
push
xlat
cli
ud0
add
mov
filds
mov
xor
mov
movb
mov
xor
pop
sub
dec
sahf
ljmp
iret
mov
push
xor
and
inc
jg
in
out
out
push
int3
icebp
xlat
push
std
fmuls
push
cmp
mov
inc
mov
scas
jae
inc
fsubrs
mov
lods
ljmp
sub
mov
jb
dec
mov
mov
jmp
jnp
ds
daa
pop
test
xchg
sub
and
or
adc
into
inc
stc
lcall
loop
jbe
inc
inc
aad
in
mov
cmp
movsl
shr
and
call
test
or
in
pop
push
ds
push
sbb
aam
jge
aaa
mov
sbb
data16
sbb
jg
sahf
push
int
mov
mov
xchg
or
imul
push
or
and
push
lahf
and
mov
dec
pop
sbb
dec
sbb
jle
xchg
rcrl
xchg
pop
jae
lret
jno
add
pop
adc
lods
and
insb
xchg
repz
pop
mov
jg
mov
popf
jmp
insb
imul
mov
cmpsl
or
es
es
xchg
popa
add
cmp
lret
addr16
cmp
xchg
stos
ja
jmp
lahf
inc
out
pushf
xchg
repz
inc
test
dec
je
loop
inc
add
ja
jle
fildl
scas
std
mov
inc
negl
fisubrs
dec
push
lea
out
mov
je
mov
loop
aad
or
jno
pop
pop
rcrl
jb
es
lock
jb
xorb
or
pop
mov
jl
imul
inc
push
xor
jo
mov
mov
xchg
pop
adc
fnsave
push
mov
jmp
adc
pop
and
shrb
mov
test
and
add
xchg
in
push
popf
cmpsb
in
adc
pop
sub
das
pop
mov
pusha
push
out
xorl
and
sbb
icebp
jns
insb
imul
iret
xor
or
loop
add
mov
popf
push
adc
cld
gs
lea
mov
out
mov
inc
jne
popa
cmp
xchg
or
xor
jecxz
insl
test
pop
ret
mov
push
cmp
jae
scas
dec
sbb
adc
aaa
push
pusha
inc
sbb
clc
xor
dec
push
sbb
add
movsb
jae
inc
pusha
sbb
jo
aas
jno
cmp
or
hlt
das
mov
ja
mov
std
add
cmc
bound
jl
test
mov
lea
mov
push
stc
sbb
decl
gs
insl
je
sub
mov
jecxz
xchg
sbb
mov
pop
inc
dec
jbe
enter
lret
add
dec
das
cmp
loopne
enter
xlat
xor
out
sub
xlat
jp
and
cli
add
dec
ds
lahf
mov
dec
stos
xchg
es
xor
sti
push
fdivrl
sti
sbb
xorb
sbb
inc
sbb
mov
int3
es
push
mov
jmp
mov
sbb
sub
test
inc
aaa
fs
aaa
bound
test
fwait
mov
les
dec
jb
aam
fcos
filds
notb
negb
mov
mov
mov
sub
arpl
mov
popa
jno
mov
jno
cmp
sub
cmp
xor
data16
fnsave
daa
adc
enter
adc
pop
lea
cmpsb
sahf
cmp
xorl
out
push
pop
das
lret
mov
bound
sti
dec
push
adc
gs
sub
and
and
mov
cs
mov
add
cwtl
inc
jne
cs
daa
and
or
rcrl
ret
ficomps
push
movsb
lret
sub
roll
fisubs
xchg
inc
or
sub
cmp
imul
cmp
xor
pop
bound
ja
mov
out
xchg
stos
and
xchg
clc
in
push
cmc
fstl
div
mov
lock
xchg
jge
inc
adcl
repz
cmpsb
and
imul
xlat
dec
mov
cmp
pushl
sbb
xchg
dec
out
iret
and
js
data16
sbb
add
repnz
mov
jns
or
xor
repz
mov
test
dec
imul
and
cmp
dec
insb
mov
add
xchg
sbbb
jo
jp
fs
stos
iret
js
add
xchg
cld
mov
mov
divb
xor
data16
iret
into
subl
out
pop
cmpsb
jb
repnz
cli
pushf
push
jl
aas
push
inc
mov
and
lret
insl
inc
leave
out
rep
pop
leave
cltd
insb
out
movsl
xor
adc
test
xchg
movsb
sbb
jl
add
out
lcall
enter
xchg
dec
push
jecxz
cmp
out
leave
pop
call
add
inc
addl
mov
test
sub
sub
inc
int
scas
dec
lods
cmc
int3
jge
dec
iret
insb
mov
xor
pop
pop
sbb
inc
call
mov
dec
xchg
loopne
cmp
aaa
das
fadds
mov
es
pop
fcmove
in
cmp
bound
imul
mov
mov
dec
push
jle
aaa
leave
lret
maskmovq
mull
addl
push
xchg
vmptrld
clc
ret
xchg
mov
mov
call
stos
daa
mov
das
add
dec
les
xchg
mov
pushf
jae
pop
push
inc
pushf
js
pushf
mov
cwtl
lods
popf
xor
adc
dec
fwait
xchg
shrl
mov
jb,pn
inc
mov
andb
insb
cs
rorb
sbb
subb
add
pushf
jno
ljmp
stos
pop
movq
int
xor
fs
fisttpl
out
in
js
inc
lds
pop
cmp
enter
sub
dec
mov
shlb
imul
aas
pop
xchg
push
dec
int3
add
cmp
jae
xor
clc
leave
sbb
ss
scas
adc
fwait
inc
pop
xchg
shr
sbb
sub
and
imul
out
out
or
mov
pop
cmp
jo
mov
aaa
jb
das
loope
and
xchg
aaa
xor
loopne
xor
nop
mov
mov
or
pop
and
in
jmp
mov
lret
lret
out
enter
repnz
sub
inc
xchg
in
mov
pusha
xor
out
mov
xchg
pusha
dec
lahf
and
adc
icebp
lcall
push
mov
pop
or
arpl
lret
jmp
jne
mov
mov
lcall
loopne
push
repz
sub
ud2
stos
clc
stos
xor
sbbb
cli
xchg
dec
es
repz
sub
aaa
inc
je
sysexit
inc
jmp
push
lcall
cs
sub
push
pop
shll
fs
je
ja
mov
adc
in
les
xorb
repnz
aad
daa
outsl
mov
lods
cmpsb
in
or
shrl
sahf
fstl
sbb
int3
roll
mov
lds
cli
mov
test
inc
cmp
outsl
sbb
pop
sahf
sub
sub
and
dec
es
rol
mov
aam
xor
or
lods
les
inc
dec
jl
pop
fdivs
daa
push
push
pop
rorb
int3
adc
or
mulb
ds
xor
dec
xor
dec
inc
fmul
lock
or
sub
jecxz
cmp
loopne
dec
mov
sub
popa
movsl
adc
mov
lock
inc
mov
movsl
mov
stos
pushf
cli
push
adc
mov
shlb
sbb
loopne
stos
out
ljmp
add
fwait
out
jbe
or
lret
into
sbb
and
jp
cmp
sahf
bnd
enter
scas
mov
hlt
dec
push
insl
mov
scas
jns
loope
sbb
es
inc
cmp
repz
dec
sub
jle
xchg
ss
out
lds
jae
leave
icebp
movsl
pop
sbb
pop
push
rcl
test
jge
shll
mov
movsl
jg
stos
push
and
push
idiv
sbb
popa
sub
mov
cld
push
jmp
pop
mov
mov
xchg
ljmp
lret
mov
jl
cmp
hlt
sbb
cmp
repz
test
movsb
rcll
push
sbb
daa
arpl
sbb
sbb
rorl
xor
inc
cmp
fadd
mov
movsl
xor
movb
jbe
cmp
outsb
push
in
sbb
mov
andb
jge
sbb
inc
fistpll
jecxz
pop
ljmp
xchg
adc
cli
cmp
adc
repnz
inc
xchg
sbb
loope
lcall
push
cli
or
test
or
xor
pushf
mov
dec
dec
mov
inc
cli
push
jmp
sub
stos
out
in
enter
sbb
repnz
fdivrs
cwtl
and
push
mov
and
in
gs
test
inc
pop
pop
aas
into
rcll
mov
movsl
mov
addb
movsl
iret
test
pmullw
xchg
hlt
fidivl
iret
adc
das
nop
daa
cs
dec
repnz
mov
dec
cmp
mov
sbb
fst
loop
dec
mov
and
add
cmpsb
pop
rcr
xor
xorl
ds
ja
push
ja
sbb
inc
cli
cmc
fmull
add
jne
cli
mov
ja
cmp
dec
dec
pop
and
inc
pop
out
pop
inc
mov
out
jo
sarb
mov
lods
or
sbbb
test
in
clc
sahf
cmp
pop
pop
in
std
addb
adc
push
jnp
jecxz
pop
cmc
push
mov
leave
int3
xlat
mov
pop
sar
fidivrl
jnp
shl
push
jg
sbb
add
push
jp
in
negl
jmp
dec
cmc
cmpsl
addr16
xchg
xorl
adc
pop
sbb
clc
bound
out
scas
fdivs
push
jle
in
stos
jmp
stos
out
addr16
push
cwtl
push
cmpsl
add
into
cmp
pop
sbb
loop
lea
sahf
addr16
testb
xchg
push
rcll
subb
xor
sub
aam
adc
dec
out
gs
or
popa
notb
inc
add
hlt
jo
push
mov
add
dec
dec
gs
iret
pop
and
or
pop
clc
dec
lahf
inc
jmp
and
add
inc
std
xor
cmp
fstpt
orl
in
divl
jnp
push
imul
xor
into
pop
test
adc
mov
fs
fstps
outsb
sub
imul
jnp
sti
sub
mov
loopne
std
sub
add
call
dec
jbe
out
jno
lret
lea
xlat
sbb
lods
mov
lods
mov
sahf
dec
mov
jne
rcrl
and
mov
pop
mov
pusha
inc
cmp
aaa
xor
out
xchg
fldt
lods
cli
lock
dec
push
lahf
cltd
sar
shll
gs
or
jg
adc
test
insl
pop
jno
ret
mov
jle
nop
xor
repnz
jbe
popf
push
cmp
int3
jae
idivb
push
repnz
das
inc
cmp
xchg
into
movsl
insl
pop
std
inc
out
sub
mov
jmp
test
fstpt
gs
inc
jmp
mov
xlat
adc
clc
icebp
sbb
and
xchg
or
pusha
fisubl
test
push
mov
jmp
push
push
mov
jae
insb
xchg
jno
mov
sub
cmp
inc
sbb
sub
cli
test
xor
fimuls
pusha
insl
insb
lahf
aaa
pop
push
push
repnz
lret
ss
jge
jb
in
out
xor
icebp
aas
clc
mov
pop
adc
insb
stc
and
mov
jno
cmp
xchg
hlt
into
fwait
cmc
and
subl
inc
cwtl
pop
and
adc
fcomps
pop
xchg
cmp
inc
loop
xsaves
sahf
mov
mov
jge
out
sbb
loop
pop
das
mov
test
test
xchg
push
scas
mov
push
mov
push
inc
aaa
jne,pt
lock
rcrl
add
jbe
adc
and
orb
mov
push
int3
mov
mov
sbb
std
jecxz
push
add
jno
mov
repnz
pop
or
add
mov
roll
test
and
orb
sbb
imulb
sub
stos
xrstor
pop
pushl
icebp
jbe
mov
rcrb
sbb
xlat
push
popf
jbe
dec
inc
inc
stos
loope
pop
mov
sbb
pusha
sbb
fdivrs
sub
in
loopne
mov
xchg
cmpsb
lea
dec
sbb
jno
dec
push
addr16
sub
ljmp
mov
js
insb
rorb
jg
scas
stos
pop
loope
sahf
repnz
fbld
call
and
jno
lock
xchg
mov
in
xor
lahf
adc
or
cmp
and
push
sub
pop
shrb
sub
jb
mov
fwait
dec
das
mov
aam
rcrb
out
adc
lret
cmp
sbb
lea
adc
movsl
sbb
les
sarb
pushf
jge
adc
outsb
lret
cmpb
adc
inc
adc
test
cld
inc
mov
clc
push
jb
call
out
icebp
add
stos
test
shll
add
inc
cli
cwtl
pop
repz
push
inc
dec
add
lmsw
mov
jnp
push
je
inc
inc
sbb
dec
cmc
outsl
addl
leave
mov
cmc
fisttpl
mov
xchg
xchg
cltd
scas
jb
pushf
push
daa
cli
mov
add
push
jns
adc
adc
mov
push
cmc
push
pusha
sub
outsb
cltd
mov
popf
push
xor
fisubrs
push
sbb
int
jno
js
push
neg
adc
ffreep
loope
scas
xchg
add
sbb
sub
cld
pop
loope
adc
inc
notl
sub
adc
daa
jl
pop
mov
push
test
aaa
or
sub
xorl
and
je
jg
xchg
mov
push
inc
jo
fwait
insb
clc
dec
dec
xchg
fiaddl
or
scas
imul
fnsave
pop
pop
mul
aad
in
das
push
dec
outsb
and
lock
adc
pusha
into
jmp
aas
movsb
mov
pushf
adc
mov
ja
jp
cmc
jbe
jmp
inc
inc
jg
lea
xor
xor
cmp
mov
cld
xor
xor
dec
arpl
pop
movsl
and
popa
adc
rcll
pop
push
test
cmc
lods
cmp
jns
sti
and
mov
inc
nop
mov
adc
ret
cmp
loope
fsubrs
or
push
fnstenv
jle
mov
aas
inc
out
cltd
repnz
jp
and
add
pop
xchg
push
lds
push
in
jge
mul
xor
xchg
sahf
ja
das
cltd
mov
dec
sbb
fsubrl
stc
pushf
mov
sub
add
scas
and
mov
int
dec
adc
and
mov
pop
andl
std
cmpb
add
jnp
sbb
and
push
xchg
js
dec
jnp
cld
add
add
fs
jge
sahf
xchg
pop
dec
pop
andb
nop
sub
daa
rorl
jp
call
rcrl
pop
pushf
into
jmp
jmp
inc
mov
push
pushf
movsl
push
rorb
push
push
ds
pop
insl
fistl
sub
push
mov
xor
pop
imul
xorb
xor
into
out
cmp
adc
mov
ret
mov
jne
in
cmp
jecxz
push
xor
or
pop
adc
push
repz
popf
sbb
std
loope
jg
lock
mov
xchg
adc
mov
iret
mov
loopne
mov
aaa
pop
sub
xor
sbb
jo
jle
sahf
in
inc
jge
pusha
and
and
stc
mov
xor
ja
dec
in
test
inc
mov
inc
pop
inc
jge
mov
inc
dec
je
je
scas
lcall
leave
cmp
rclb
orl
mov
nop
lahf
nop
inc
mov
ret
cmpsl
js
ficoml
in
hlt
jae
push
sbb
pop
pop
xchg
or
push
int3
lcall
add
dec
mov
xchg
adc
mov
pop
mov
adc
std
xor
sbb
test
iret
sahf
pop
xor
push
push
pop
lock
fdivp
mov
jae
movsb
jbe
lods
cmp
or
stc
sti
xor
xor
jno
cli
shr
or
test
cli
test
in
in
leave
ficoml
ss
in
cmp
push
mov
test
cmp
jmp
sbb
add
lahf
sti
push
inc
or
ret
ss
std
or
icebp
addr16
sahf
cmp
add
js
gs
bound
movsl
cmp
negl
out
jb
sbb
in
call
mov
pop
mov
pop
aad
jecxz
xlat
scas
js
cld
popf
or
enter
ficompl
addr16
jno
push
sbb
mov
fstpt
repnz
loopne
fldt
jo
je
or
inc
sbb
scas
push
js
add
pop
adc
cmp
lahf
imul
dec
push
adc
inc
sub
fs
add
xor
fnstsw
inc
cmp
adc
jecxz
leave
lds
pushf
cmpsl
jg
aam
popa
xchg
inc
bound
lea
mov
mov
das
pop
push
pop
xchg
jo
sub
fsubr
arpl
pusha
roll
dec
cmp
push
jno
ror
mov
xchg
or
stos
data16
cwtl
out
push
clc
mov
xlat
insb
jno
inc
pusha
or
and
sub
enter
lahf
adc
jnp
dec
call
out
push
mov
jecxz
or
daa
push
fwait
xor
adc
xchg
push
mov
daa
xchg
into
adc
popa
mov
aad
mov
cmc
sti
or
mov
lcall
in
mov
pop
popf
subb
rcl
mov
lock
jne
fs
dec
sti
pop
jne
jb
ret
outsl
rcll
test
fcoms
cmpsb
mov
mov
jl
stos
gs
mov
mov
mov
pushf
insl
icebp
imul
imul
test
adc
dec
sub
xor
jbe
mov
xbegin
mov
pop
in
mov
test
pop
fisubs
aad
cmpsb
call
jns
mov
push
shl
sbb
xor
jae
and
fcoms
xor
sbb
filds
adc
jl
cmc
xchg
icebp
push
dec
cmpsb
add
mov
dec
lahf
hlt
xchg
fdivs
dec
inc
stos
adc
push
into
addr16
jge
jmp
or
addr16
push
shrb
icebp
aas
movsl
jmp
pusha
and
push
jg
mov
adc
pusha
or
dec
sub
nop
dec
pop
mov
fisubl
addl
pop
sub
clc
fildl
pop
test
xchg
jl
xchg
dec
cmc
push
jecxz
call
pop
js
cmpsl
faddl
dec
je
add
mov
in
xor
or
cwtl
mov
gs
adc
mov
mov
xchg
pop
mov
cmp
imul
or
movsb
mov
push
in
addr16
mov
lcall
shrl
jge
add
jno
fldl
cmp
repnz
mov
insb
arpl
popa
or
ret
sarb
sub
jge
mov
pushf
pop
cmp
adc
neg
xor
xchg
adc
jmp
sub
mov
aaa
rorl
mov
mov
loope
xlat
aaa
or
inc
mov
dec
jb
or
in
or
pop
int
jge
jne
cmp
inc
mov
mov
ss
je
mov
adc
add
xchg
cmp
sti
push
outsb
fistps
sub
pop
popf
pop
push
jne
jo
adc
lcall
into
test
mov
mov
clc
mov
jge
jge
sarb
sbb
shr
adc
jns
push
ja
cmp
mov
fadd
xor
xor
push
dec
iret
fs
lret
outsb
iret
fs
pop
ds
pop
push
push
mov
mov
inc
fldcw
popa
pop
cltd
sub
fwait
sbb
jnp
pop
cmpsb
sbb
push
mov
jo
loop
xchg
or
mov
dec
sarb
adc
mov
pop
mov
jmp
dec
cld
sbb
sub
gs
or
popa
adc
fbld
push
pop
pop
jno
cld
stos
fstpl
cld
out
sub
sub
test
dec
insl
adc
or
shl
int
inc
lds
push
mov
xlat
aam
scas
in
dec
call
jl
mov
push
inc
daa
dec
dec
testb
dec
je
icebp
xchg
or
push
loopne
aas
inc
popf
cld
in
xchg
in
pop
mov
xchg
lock
push
aad
pop
and
and
xor
mov
push
fnstsw
pop
mov
jg
mov
jle
das
push
pop
or
outsl
mov
dec
adc
cmc
ret
pop
adc
out
inc
adc
jnp
daa
add
movsl
xor
cwtl
mov
adc
mov
das
rorl
cmp
loopne,pn
mov
addb
mull
std
jge
pop
outsl
movsl
popa
stc
and
xchg
mov
push
lods
push
adcl
aam
stos
mov
add
add
ja
push
lds
cmp
add
lock
jl
mov
jp
add
clc
push
xchg
jl
lahf
add
push
mov
jae
mov
jle
aam
mov
data16
test
bound
das
cmc
inc
xor
sub
push
pusha
fimuls
loopne
pop
stos
jl
dec
pusha
xchg
clc
jns
or
mov
test
adc
popa
mov
mov
scas
cmpl
mov
push
into
and
and
sub
cmp
pop
jno
ret
popf
repnz
dec
in
out
sahf
sbb
out
inc
or
out
mov
lock
and
mov
add
xor
jmp
lret
cmp
mov
outsb
xchg
push
add
ds
sti
mov
adc
adc
lahf
jae
adc
mov
xor
in
add
push
adc
xchg
xchg
xchg
xchg
or
cli
icebp
lahf
test
mov
xchg
repnz
rolb
sbb
sub
dec
jae
in
jmp
mov
sar
rcrb
aam
xlat
and
mov
push
dec
lods
bound
das
mov
jb
xchg
cwtl
cmp
or
xchg
inc
xchg
ror
call
fldt
pop
adc
push
imull
sub
xor
data16
mov
mov
mov
fcmovu
xchg
mov
es
ror
lahf
test
xor
cs
fiaddl
xor
int
push
push
ret
test
lahf
fisubrl
lods
mov
push
mov
popa
adcb
das
repz
test
adc
dec
lcall
mov
lods
idivw
xchg
or
cs
test
push
fstl
ds
lea
or
popa
das
sub
add
int3
push
xchg
push
xor
mov
mov
jae
sbb
xchg
dec
addr16
pop
pop
add
inc
jne
ret
ja
call
or
xchg
push
pop
jo
or
and
rol
adc
xchg
sub
ja
jmp
lock
mov
sarb
int3
test
cs
lock
and
in
jmp
jns
subb
fsubl
jne
sbb
add
dec
sub
cmp
mov
nop
mov
lahf
daa
push
bound
jp
stos
fidivl
push
daa
or
push
cltd
xchg
lock
push
popa
cmp
mov
dec
add
mov
cltd
cld
pop
nop
std
mov
xor
sub
dec
pushf
in
fs
int
imul
adc
xor
inc
mov
push
cld
push
fdivr
mov
pop
lahf
enter
das
pushl
push
jb
sahf
mov
push
add
pop
out
in
sub
and
aaa
stc
jmp
mov
sub
lret
push
imul
push
push
out
pop
push
sbb
std
push
scas
jmp
in
test
mov
jl
mov
push
pop
imul
add
bnd
mov
mov
inc
fs
ljmp
adc
adc
adc
jl
popl
pop
leave
repz
stos
xor
mov
mov
or
iret
pusha
insb
outsl
jne
or
mov
in
jae
ret
push
mov
je
xlat
pop
repnz
push
ja
jg
pop
xchg
cwtl
push
jg
or
nop
add
cmp
pusha
loope
nop
insb
mov
or
and
icebp
loopne
mov
pusha
arpl
fidivs
push
imul
fsubrl
inc
mov
pop
sbb
xchg
int3
push
mov
sbb
jnp
rcrb
mov
dec
in
std
adc
ds
inc
inc
mov
sbbb
icebp
fwait
in
pop
stos
mov
outsb
outsl
cmp
cwtl
sbb
and
inc
push
xor
aaa
sub
test
sub
mov
out
xorl
xchg
jge
xchg
pop
in
mov
call
push
mov
pushf
pop
fcomps
addr16
and
adc
pop
iret
cltd
lret
cmp
and
jnp
lods
ljmp
inc
daa
rcrl
hlt
mov
adc
fcmovne
outsl
jmp
jp
sub
cmp
mov
push
jb
push
jmp
popa
fucom
mov
outsl
dec
fistpll
stos
cmp
pusha
jo
jg
aad
mov
inc
hlt
mov
test
or
cmp
shll
fcmovne
xor
jecxz
insb
cwtl
icebp
or
sub
cmpsl
aad
scas
sbb
pushf
fwait
mov
pusha
mov
cmp
insl
add
cmp
jns
jne
inc
mov
les
push
and
inc
popa
lods
icebp
stos
add
sub
loopne
outsb
stc
adc
mov
mov
and
mov
popf
push
xchg
fdiv
addr16
std
cmp
mov
sbb
pop
fsubrs
xchg
mov
nop
movsl
popa
rcr
mov
imul
jle
mov
add
inc
mov
test
imul
in
xor
mov
lods
sbb
xchg
shl
fmul
jecxz
test
mov
or
pop
call
jge
mov
sti
addr16
or
sub
rcrb
jo
repz
mov
js
incl
stos
movsl
mov
fadds
xor
xchg
aas
xor
stc
push
movb
push
xchg
shl
jae
es
ret
adc
std
bound
add
cmp
push
push
enter
jns
cwtl
cmpsl
inc
dec
xchg
fcoml
adc
out
jb
add
pushf
jnp
test
jl
les
icebp
push
mov
inc
push
xor
and
out
xor
into
cwtl
fcomps
push
adc
jns
sahf
ja
adc
scas
insb
dec
movsb
pop
sub
inc
cltd
loop
pusha
pop
data16
movsb
cwtl
dec
shlb
xchg
cmp
inc
hlt
jno
lahf
sbb
repz
leave
jo
add
jb
push
sahf
js
mov
push
jae
mov
inc
cmp
sbb
dec
ljmp
sub
or
push
aaa
pop
sarl
push
sub
lcall
xchg
pop
xor
add
cmpsl
pop
loop
dec
xchg
movsl
mov
jecxz
mov
popf
into
push
dec
ss
sbb
clc
stos
cmpl
jnp
outsb
test
mov
push
mov
push
lock
jae
jmp
xchg
xchg
fldl
imul
dec
lods
fldenv
dec
lods
mov
in
adc
jns
pop
and
lahf
js
insb
jmp
test
inc
pusha
dec
fadd
fldpi
adc
inc
out
mov
ljmp
pop
out
mov
jnp
popf
xchg
mov
ret
or
pop
mov
data16
sbb
inc
and
les
pusha
cmp
adc
out
push
mov
dec
mov
push
xor
mov
cmp
xchg
in
shll
std
sub
cmpsb
fsts
jno
xchg
es
in
sbb
das
fisttpll
mov
test
mov
sti
sbb
into
mov
add
jp
es
sub
sub
fsub
daa
ja
xlat
adc
jecxz
aaa
aad
sub
inc
sti
lret
jge
jbe
adc
jle
int
cs
mov
repnz
cwtl
jmp
idivb
mov
mov
xor
jmp
jmp
pop
mov
shll
repnz
sbb
shlb
cltd
into
mov
outsb
xchg
aam
push
outsb
mov
andl
or
push
adc
hlt
adc
hlt
push
and
add
push
mov
xchg
adc
cwtl
dec
jp
in
add
out
and
fildl
push
adc
pop
mov
popf
and
outsl
dec
data16
pop
xor
imul
rol
jns
pushl
jae
mov
ds
adc
xchg
loope
mov
ljmp
lea
pusha
mov
call
jo
arpl
nop
adc
sbb
ja
dec
dec
stos
and
int3
test
movsb
rcll
add
xor
mov
arpl
pop
inc
add
add
rcrl
test
push
adc
cltd
xor
jp
fs
sub
lds
int3
icebp
nop
jge
icebp
cmc
mov
xchg
lea
imul
mov
fisttpl
mov
stc
icebp
push
outsl
lods
movsl
cmp
cmpw
loop
sbb
daa
lock
cmp
and
pop
in
movsb
xor
scas
rep
test
pushf
movsl
in
ss
adc
das
jecxz
push
cmp
popaw
sbb
movsl
mov
fwait
adc
mov
xchg
lods
cmp
sbb
or
in
scas
sub
xchg
sti
popf
icebp
and
into
in
mov
mov
jmp
xor
decl
hlt
test
push
dec
xchg
jns
sti
imul
in
stc
cmpsb
sti
orl
add
push
sbb
jle
aam
pop
jae
js
fs
xlat
daa
or
aad
rolb
pushf
mov
and
jg
sbb
mov
mov
jge
cmp
adc
add
add
mov
jnp
pop
xchg
jl
mov
out
out
cmpsl
pop
sub
push
inc
cwtl
dec
push
imul
dec
movb
pusha
mov
ja
jmp
std
xchg
inc
lock
into
aad
ss
pop
push
sub
mov
outsl
in
bound
push
sub
jno
adc
lret
cmc
jae
pushf
dec
es
filds
adc
mov
in
clc
or
nop
lret
jle
and
fnsave
xchg
mov
jb
jmp
movsb
rcrb
ret
inc
mov
jp
xor
add
inc
enter
sti
in
sub
dec
mov
pop
loopne
adc
jne
cltd
pop
repnz
lret
cmpsb
pop
and
mov
loop
lahf
cmc
cs
ljmp
cmp
ss
cmp
daa
mov
cmp
lret
sbb
ret
les
add
fiadds
inc
int3
aad
das
inc
sub
jns
test
pop
xor
jecxz
jb
mov
xchg
shlb
push
es
jno
or
mov
jge
mov
pusha
out
or
and
or
sbb
sahf
bound
lahf
in
stc
xchg
cltd
jge
lods
scas
adc
jne
pop
stos
cmpsl
les
icebp
bound
jmp
sbb
cmp
int
pop
cld
ret
aad
add
and
dec
lret
mov
pushf
adc
js
cmp
xor
mov
hlt
in
xchg
call
xor
popa
or
dec
sbb
mov
or
pushf
xor
incb
push
movsb
mov
push
sub
pop
pop
in
mov
mov
inc
addl
mov
inc
lret
and
jmp
inc
push
lods
jp
xchg
fisubl
or
inc
cmp
das
mov
stos
stc
out
pop
jp
push
jns
cmpsl
adc
cmp
and
cld
out
cs
js
les
aad
jno
jl
out
std
adc
cmp
into
xor
adc
adc
sbb
mov
adc
and
pusha
js
mov
sbb
stc
inc
in
inc
sbb
or
push
roll
adc
lcall
es
pop
push
inc
test
aaa
push
cmpsl
test
xchg
push
jae
pop
xor
push
sahf
loop
xorb
pop
subl
cs
jp
sbb
mov
sub
insb
xchg
mov
pop
adc
lea
insb
xlat
dec
sbb
add
jle
and
inc
and
outsb
gs
dec
inc
mov
jno
ss
mov
cmp
add
push
and
loope
mov
xlat
jae
add
cmp
mov
cmp
ret
ds
rorl
mov
and
mov
test
inc
hlt
pop
cmp
stc
out
loope
inc
pushf
mov
push
iret
test
cmpsb
jmp
lahf
adc
test
addb
or
and
xor
push
cmp
jae
mov
pop
repnz
cwtl
lods
xor
sbb
cwtl
cmc
mov
xor
push
leave
xchg
sahf
sbbl
xchg
inc
jle
sbb
mov
mov
push
and
into
inc
cmp
rorl
jne
aas
cmp
shll
xor
cmpsl
test
leave
push
cs
xchg
inc
es
lds
adc
xor
fnsave
mov
pop
int3
pop
loopne
test
mov
mov
pop
lock
and
outsl
repz
je
lahf
ljmp
pop
mov
ja
add
leave
arpl
ret
push
fwait
mov
das
xchg
loope
in
jmp
jb
mov
lret
shlb
pushf
out
dec
cs
sub
mov
test
mov
jbe
or
out
xchg
movsl
adc
insb
mov
enter
rcll
mov
mov
stos
mov
out
mov
xchg
xchg
jno
insb
sbbb
fldenv
push
xchg
test
lcall
mov
add
iret
rolb
dec
mov
mov
sbb
daa
jno
cli
out
sub
sbb
shlb
xchg
cmc
and
aas
xchg
cmp
cwtl
jbe
movsb
jmp
pop
mov
out
es
repz
sbb
arpl
cmp
in
aad
jl
repz
cmp
or
out
sarb
adc
sar
xchg
cmp
or
push
lret
cmp
adc
in
fcompl
in
mov
inc
push
rcrl
aad
dec
mov
jns
mov
lret
mov
leave
movsb
fdivs
add
cli
loope
out
sub
inc
decl
ret
es
jmp
add
pushf
xor
sbb
mov
shr
lret
lods
or
mov
sub
xor
mov
or
add
call
popa
int3
xorb
das
xchg
push
int3
and
mov
jno
das
aad
aas
pop
sti
jb
sub
fcompl
add
popf
or
cmpsl
push
xchg
subl
nop
cmpsl
pusha
push
fidivl
xor
cmp
loope
dec
dec
cmp
outsl
arpl
push
je
push
dec
insl
pop
loope
out
flds
in
bound
ficompl
out
rorb
sbb
and
xlat
xchg
in
inc
cs
sub
xor
add
dec
adc
jge
sbb
pop
pop
stos
out
icebp
jb
mov
mov
xlat
movsl
loop
pop
jmp
xchg
popa
mov
clc
adcb
addr16
test
xor
lcall
sbb
xor
aas
ds
rcrl
or
mov
add
and
push
jmp
js
push
in
dec
and
shrb
in
xchg
ss
sbb
data16
cmc
mov
pop
int
fldl
repz
bnd
enter
dec
push
lret
movl
in
adc
jae
sahf
fs
inc
xchg
or
jns
mul
cmp
or
cmc
dec
popf
and
loop
xchg
inc
pop
inc
push
lret
push
inc
mov
jmp
push
add
xchg
movsl
es
dec
insl
arpl
mov
inc
repnz
pop
mov
out
dec
xchg
lods
adc
hlt
jl
inc
lods
jp
pop
pop
push
xor
call
gs
sub
daa
loop,pn
jbe
mov
sbb
mov
cwtl
sub
mov
fcoms
sub
mov
jp
sub
leave
ds
push
sub
and
ficoms
int3
jbe
fcoms
mov
mov
scas
dec
mov
loopne
test
sbb
fmuls
cmc
bndstx
icebp
adc
shrb
les
and
push
loope
jbe
inc
mov
jp
cmpsl
nop
das
xor
dec
into
fwait
int
cvtps2pd
and
jle
mov
cmp
cmpb
in
mov
scas
push
add
jl
inc
add
test
and
cmp
loope
mov
out
out
lret
lods
faddl
ficoms
call
mov
add
jmp
stc
sbb
add
add
sbb
jne
sub
bound
push
pop
pop
jle
cs
mov
inc
cmp
test
lret
and
sarl
inc
fdivs
sub
fwait
mov
test
cmp
jl
dec
addr16
xlat
mov
cmp
inc
xor
inc
inc
rcr
repz
jmp
out
notb
mov
arpl
and
cmp
stos
pop
push
mov
imul
fs
push
test
xchg
mov
jo
sub
lcall
mov
push
cmp
mov
lret
push
ljmp
adc
rol
pop
pop
ljmp
loop
imulb
cmp
pop
xor
aaa
mov
xor
push
push
mov
and
sbb
xlat
enter
jbe
in
jbe
les
dec
xor
and
repz
add
ja
xchg
xchg
fistl
pop
outsb
mov
jne
sbb
call
test
sub
stos
sbb
ljmp
call
dec
inc
test
jno
xor
xchg
dec
icebp
cmpsl
fidivrl
adc
cld
shlb
pop
sarb
mov
jge
orl
repz
sub
mov
mov
xlat
xchg
les
fisttpll
mov
dec
fildl
inc
repz
out
shrl
and
sti
xchg
loopne
add
into
xchg
sbb
inc
into
xor
ljmp
lret
jmp
mov
addr16
and
int3
xchg
pop
or
mov
in
idiv
mov
es
decl
xchg
loopne
adc
and
adc
mov
fwait
addb
mov
ljmp
xlat
xchg
inc
into
lock
aad
push
pusha
repnz
sarl
dec
jle
insb
cmp
lods
popf
cmp
push
imul
sbb
xor
movsb
xchg
int
lods
jae
mov
push
cmp
or
or
jae
mov
out
mov
stc
in
push
pop
jb
testl
fbstp
dec
das
or
adc
addb
dec
in
xor
mov
jno
mov
jmp
out
ss
stos
pop
pop
call
imul
pop
iret
out
push
mov
and
sarl
aad
mov
je
mov
movsl
sub
into
push
popf
mov
xchg
pop
icebp
sub
out
test
mov
push
jne
sub
mov
xchg
inc
jge
stos
test
pop
mov
inc
test
mov
and
mov
mov
ret
and
mov
sete
call
addl
jmp
cmp
sahf
rorl
and
jg
mov
push
cmpsl
jnp
jnp
lock
in
in
rcrb
aam
mov
out
lea
mov
mov
mov
cli
sbb
dec
lcall
cs
imul
insl
mov
test
stos
sub
cmp
jp
jno
lock
ret
neg
sti
scas
cmp
mov
dec
jne
stc
fadds
imul
pop
and
cmpsl
add
insb
imul
rcr
and
inc
lock
or
jo
dec
ss
mov
scas
sbb
push
into
aad
loopne
push
dec
daa
sahf
leave
rolb
into
movsl
ret
add
mov
sbb
into
es
push
pop
xchg
lods
adc
fsubrp
pop
movsb
jb
dec
and
inc
or
int3
xor
stos
std
xchg
aad
xchg
repz
test
inc
jl
aad
jo
lahf
push
cwtl
sub
mov
in
jae
out
into
in
mov
shll
sbb
pop
xchg
es
add
mov
jns
add
dec
xchg
stos
stc
imul
push
fwait
add
and
or
cld
pop
test
in
pop
cmp
insl
stos
pop
ret
lods
adc
xchg
pop
pop
test
jb
sar
ja
cmp
cmp
xor
int
fstl
je
cmpsb
mov
cwtl
xor
int
inc
int
xchg
jmp
aaa
dec
movsb
mov
add
flds
pop
push
fcoml
sub
out
mov
fidivrs
lcall
adc
jle
ss
jmp
push
push
daa
xchg
lea
lret
push
xor
xchg
in
adc
dec
movsb
lret
mov
pushf
adc
cld
scas
lods
movsb
xchg
jno
or
jns
jle
cs
fcmovnu
or
jg
outsb
loopne
xchg
or
test
fcmovnb
inc
xchg
call
ret
int3
sahf
push
inc
insl
mov
inc
and
push
jne
pop
fcomp
pop
add
mov
mov
int3
cmp
in
push
jbe
mov
xchg
xor
mov
cmp
outsb
xchg
adc
inc
in
mov
imul
mov
xor
dec
jmp
sahf
xor
call
data16
iret
insb
lahf
aam
aas
daa
test
insl
stc
int3
stos
incb
cmp
xchg
add
mov
lods
dec
pop
dec
sbb
pusha
icebp
test
adc
movsl
sub
negl
test
lcall
xor
arpl
out
xchg
push
or
adc
jnp
mul
mov
jp
push
stos
jbe
lret
add
pop
and
xor
fwait
inc
fldenv
andl
xchg
mov
mov
xor
add
out
call
gs
lock
sub
vmwrite
in
setbe
cmp
jge
cwtl
mov
dec
dec
or
es
inc
or
or
icebp
sbb
pop
aam
add
arpl
push
scas
repz
xor
sub
mov
inc
out
xchg
push
dec
ss
mov
stc
add
adc
mov
or
imul
rolb
inc
testb
cmpsl
aas
out
mov
nop
outsl
rcll
adcb
repz
iret
sub
cmpsl
idivb
mov
insb
and
mov
cmpsb
pop
leave
idivl
clc
jno
pop
test
pop
add
cmp
ljmp
dec
std
enter
xchg
jne
push
add
xor
and
and
je
mov
loope
sbb
lds
mov
xchg
push
pop
orb
xchg
dec
mov
fisubl
data16
cmp
cltd
mov
add
cwtl
or
pop
mov
xor
into
fwait
jns
mov
lds
idivl
mov
xchg
and
xchg
push
cmp
push
test
jl
in
mov
adc
dec
cmp
add
sti
mov
fwait
out
ret
dec
mov
roll
cmp
nop
setge
mov
in
and
jge
and
imul
jnp
loopne
xlat
xor
lcall
or
inc
imul
pop
lret
je
movsl
clc
xor
test
and
sbb
out
jecxz
sarl
or
std
and
fcmove
cltd
inc
js
pop
sub
dec
les
mov
iret
nop
jecxz
add
mov
add
push
mov
lds
hlt
cmpsb
or
adc
dec
or
clc
inc
addr16
jno
jnp
es
imul
lea
inc
and
mov
repz
mov
jb
pop
mov
ljmp
xchg
pop
cwtl
mov
lret
inc
aas
dec
leave
in
mov
mov
xchg
ficompl
stos
jmp
lcall
jmp
iret
ss
xor
fwait
clc
pop
ficompl
xchg
pop
popa
xchg
mov
sub
mov
pop
and
xor
jns
push
push
pop
mov
inc
cli
xchg
pop
cltd
and
fidivl
loop
mov
xchg
inc
sub
mov
mov
xchg
dec
mov
push
dec
xchg
jns
jb
sahf
add
add
xchg
mov
or
xchg
jge,pt
or
stos
jge
enter
inc
leave
sub
mov
sub
loopne
mov
push
stc
mov
sti
repz
ja
gs
jp
shll
arpl
mov
gs
mov
sub
lods
push
inc
call
lret
clc
stos
jg
cmp
push
loopne
sbb
outsb
aaa
test
ret
repz
push
push
sbb
sti
insb
incb
mov
add
jecxz
jo
enter
xchg
imul
pop
imul
and
add
jmp
lods
movsb
mov
cmp
aas
sub
iret
stos
imul
push
int
inc
cmp
mov
loopne
out
js
enter
push
xchg
cmp
out
fwait
sbb
push
in
aas
sar
das
add
or
dec
push
scas
cli
stos
imul
cmpsl
sub
jl
insb
adc
roll
mov
mov
mov
xchg
inc
mov
mov
icebp
xor
xor
add
jg
das
aam
add
stos
xorb
dec
iret
mov
out
jns
and
aaa
loopne
and
clc
cld
lret
cmp
lcall
cmp
aam
cmc
fidivl
and
cmp
out
jmp
stc
fnstenv
xlat
aaa
clc
ret
rolb
mov
ds
xchg
inc
inc
sub
scas
int3
inc
insb
fwait
push
mov
push
lock
dec
mov
das
push
ss
push
repz
or
dec
lea
jecxz
pop
in
cmp
in
mov
call
imul
sub
ljmp
mov
gs
add
push
sub
jne
jecxz
or
adc
mov
mov
mov
mov
add
ret
cli
cmp
jnp
sti
jbe
inc
push
je
dec
js
adc
shl
push
filds
std
nop
lock
shrb
mov
or
hlt
sti
mov
bound
mov
test
adc
jmp
add
jae
push
cli
cltd
cmpl
filds
cmp
mov
add
mov
les
addb
dec
sub
mov
ljmp
mov
jle
je
and
push
aaa
ficoms
jl
mov
cmp
sub
movsb
xchg
adc
data16
jo
sbb
add
xchg
jns
dec
pop
sahf
adc
gs
gs
dec
jmp
mov
clc
adc
or
push
sbb
das
adc
test
pop
mov
mov
stos
inc
or
imul
test
pop
imul
jle
fs
sub
cmp
in
inc
mov
mov
inc
aad
jge
add
std
adc
push
inc
arpl
in
std
int
sbb
test
sub
mov
xchg
iret
clc
mov
movsb
fdivrl
clc
dec
in
mov
push
test
pop
fs
idivl
imul
sub
les
idivl
loop
lods
in
xor
nop
sub
push
jb
and
xor
jbe
sbb
mov
rcrb
or
xchg
cli
repnz
rorb
lods
test
stc
cmpsb
jo
addr16
lods
in
mov
mov
xchg
and
pop
mov
push
mov
shlb
fisubrl
fstl
fwait
cmpsb
cmc
jne
movsb
xchg
sbb
scas
cmp
adc
or
and
push
imul
lret
dec
pushf
cmp
punpcklbw
repnz
push
data16
inc
lea
aaa
int3
sbb
jle
mov
addr16
and
imul
js
stc
pop
and
mov
clc
or
jp
std
inc
mov
fistps
out
push
in
repnz
dec
push
xchg
out
jo
dec
pop
fstpl
movsl
out
pop
xor
movsb
lea
call
ffree
cltd
xor
sbb
les
rclb
inc
jecxz
inc
jns
inc
jnp
pop
lcall
sbb
pop
shll
cmp
test
and
loop
mov
xor
das
cmc
xchg
mov
xor
cmp
movsb
xchg
data16
push
add
or
rcr
lret
imul
daa
test
cmp
adc
sbb
mov
mov
or
mov
fmull
shll
and
fimull
inc
mov
out
mov
ljmp
push
and
cmp
push
clc
pop
mov
loopne
test
or
pusha
sbb
mov
cmpsl
fistl
ja
inc
or
shll
xchg
clc
dec
stos
or
outsb
and
push
add
sub
enter
lahf
lods
pop
ret
clc
in
mov
or
mov
or
xor
dec
adc
xor
cmp
adc
sbb
je
out
fldenv
cmp
movl
cmp
dec
neg
pop
mov
aas
push
out
mov
cmp
mov
and
mov
fbld
dec
and
pop
lods
sub
aaa
outsl
jecxz
icebp
push
inc
sub
fldenv
xchg
pop
and
push
or
lds
hlt
les
inc
pushf
roll
pop
in
and
imul
lcall
movsb
test
sub
out
mov
add
mov
rolb
lret
mov
and
push
sbb
jb
pop
mov
test
out
call
in
push
and
push
cmp
mov
sub
loopne
movsl
pop
sbb
clc
mov
cltd
in
sbb
cmp
lcall
cmpsl
adc
jmp
dec
jp
inc
dec
mov
scas
xor
rcll
mov
sub
dec
jb
dec
jmp
scas
add
mov
loopne
fdivr
in
pusha
ljmp
mov
int3
decb
loopne
push
popa
js
mov
push
inc
jne
jge
test
xchg
push
mov
in
in
inc
cwtl
push
rcll
pop
push
jbe
xor
inc
inc
inc
int3
jl
push
insl
cmp
mov
std
call
arpl
sub
sbb
loopne
imul
ja
dec
xchg
pop
dec
dec
xchg
cmp
das
nop
fsincos
adc
mov
xchg
cltd
xchg
lods
jg
jno
and
sbb
dec
cltd
call
sub
out
lock
xlat
adc
add
cmp
lea
jne
pop
les
hlt
adc
stc
cmp
hlt
sub
ja
push
inc
lret
xchg
sahf
jnp
mov
cwtl
sub
mov
xlat
and
andl
pusha
or
daa
ret
loopne
test
or
pop
test
fists
pop
ljmp
sbb
sti
and
sub
add
in
dec
xor
jmp
jl
in
mov
push
sbb
pop
and
sbb
mov
add
mov
cmp
movsb
sti
aaa
pusha
inc
shrb
jge
mov
push
ljmp
das
jo
push
inc
out
jmp
xor
lock
popf
sbbb
ret
lcall
inc
push
jg
mov
xor
out
jns
sar
lock
push
daa
mov
cld
push
into
in
xor
cmp
dec
aaa
xchg
sub
push
add
insl
or
mov
iret
aaa
jbe
xchg
pop
fwait
xor
cmp
dec
rorb
loope
push
push
pop
and
or
cmp
push
cmp
loope
stos
pop
mov
mov
lods
jg
xchg
pop
pop
and
int3
outsb
jmp
pushf
push
js
and
lods
adc
ficompl
lods
ret
mov
push
lds
xchg
xchg
xchg
in
mov
push
loope
jle
add
dec
adc
xchg
adc
and
inc
into
fnstsw
cs
cltd
lea
repnz
ss
fsubr
cmp
mov
stos
inc
loopne
push
inc
dec
jle
cmp
lcall
dec
cmpl
xlat
mov
pop
fistpll
adc
popa
in
mov
mov
fsubl
adc
loope
fcom
leave
jno
int3
mov
push
cmpsb
mov
aaa
enter
in
aas
jb
repnz
or
aas
movsb
mov
xor
fisubrs
jle
mov
scas
pop
imul
daa
sub
xor
mov
or
and
out
rcl
adc
les
shr
repz
fwait
inc
or
repnz
jb
pop
mov
lock
adc
es
cmp
popf
and
xchg
out
xlat
adc
adc
push
adc
mov
push
dec
dec
ds
pusha
cli
aam
xchg
mov
add
cmp
adc
orb
test
addb
and
rolb
aas
xchg
dec
pop
inc
ffreep
pop
adc
icebp
stos
stc
xor
lods
mov
clc
ffree
mov
and
xor
mov
fnsave
cmpsb
or
mov
or
lock
or
and
dec
xor
or
stc
jp
push
mov
insl
mov
jmp
lods
add
out
mov
rol
int3
cld
cmp
push
sub
and
mov
dec
sbb
cmp
dec
fnsave
mov
fisttpl
xchg
push
popa
cmp
addr16
adc
sti
adc
mov
int3
daa
movsb
cltd
scas
popa
jmp
fisttps
sbb
test
fidivrl
test
xlat
xchg
ret
mov
pop
mov
scas
fwait
adc
imul
push
shll
into
pop
pop
das
add
fisubl
mov
pop
out
adc
sbb
mov
or
adcl
les
sub
push
mov
or
mov
jecxz
arpl
sbb
pop
test
rol
mov
sbb
jmp
cs
xor
mov
or
pop
pop
add
clc
les
sub
xchg
mov
sbb
repnz
out
xor
rclb
test
xchg
pop
jmp
repz
sysenter
xchg
lds
stc
das
push
rcrl
pop
outsb
loope
inc
shlb
push
popa
popa
and
cmp
pop
pop
pop
orb
xor
addr16
and
lock
in
mov
stc
push
loope
or
stos
pop
cmp
js
mov
sbb
xor
cwtl
test
mov
add
pop
shll
cs
mov
jnp
xchg
or
xor
pop
rcrl
xchg
sub
pusha
jl
xchg
fsts
out
mov
dec
dec
mov
mov
imul
push
test
and
ds
mov
sub
jmp
dec
inc
fldenv
mov
mov
and
mov
rorb
out
icebp
addb
cltd
inc
jno
push
frstor
data16
fdiv
iret
xchg
pop
inc
xchg
loopne
pop
adc
cwtl
jns
dec
xor
and
sbb
ds
jb
xchg
jge
lock
inc
cmp
sub
mov
xchg
enter
push
push
push
je
fmul
mov
mov
push
pop
and
inc
pop
test
mov
fists
into
in
inc
xchg
mov
popa
jns
push
mov
cmp
jnp
dec
sbb
aad
or
jno
push
add
adc
add
data16
addr16
dec
or
jae
sub
jmp
mov
cmp
pop
sbb
jns
xor
sub
loopne
aam
and
fidivl
mov
mov
and
insl
mov
xor
xor
pop
int
push
add
mov
push
arpl
cmp
outsb
or
dec
mov
popa
sarb
fwait
lock
scas
jae
cs
xchg
xchg
fmulp
mov
icebp
cmc
mov
ret
stc
popa
pop
fwait
inc
dec
cwtl
mov
or
ret
cwtl
hlt
xchg
in
mov
je
cmp
stos
test
subl
pop
sbb
rclb
aas
mov
add
and
add
jp
stos
xchg
mov
adc
xorl
rorl
andl
test
sub
mov
xchg
sub
into
stos
or
push
mov
cs
jne
sbb
sbb
pop
cmpsl
repnz
mov
sbb
imulb
mov
jns
fists
pop
imul
add
or
addr16
adc
push
pop
cmp
xchg
fadd
loopne
xchg
xchg
repnz
inc
cltd
icebp
idiv
bound
shll
cld
xchg
movsb
cs
xchg
out
test
pop
sub
jbe
jne
or
fsubrs
xchg
out
add
ret
add
ret
add
dec
inc
xchg
dec
in
and
jge
mov
clc
sti
stos
mov
mov
inc
sbb
stos
mov
bound
or
xchg
hlt
iret
jle
pop
sbb
or
cmp
imul
pop
es
les
xchg
daa
cmp
jp
in
mov
sbb
cli
lea
cmpsb
pushf
cmp
movsl
xchg
shll
and
in
dec
inc
inc
sbb
popf
fildl
xor
lret
xor
cmp
pusha
into
lods
push
pushf
inc
scas
nop
cmp
jnp
xchg
push
pop
xor
cwtl
jle
push
fstpt
das
scas
push
repz
push
aaa
push
fidivl
in
or
call
and
test
fnstsw
xor
inc
fwait
les
aad
js
repz
sbb
dec
mov
dec
jnp
sti
pop
inc
cmp
loope
lods
xor
cltd
stc
jno
fcomp
outsl
jecxz
bound
fcoml
pusha
sbb
push
pop
or
ss
fidivs
push
dec
repz
and
fcomi
and
insb
orl
pop
push
call
mov
fwait
sub
mov
leave
cmpl
adc
fcmovnu
outsb
icebp
mov
mov
mov
pop
add
and
ret
mov
cmp
xchg
jns
add
ret
and
les
hlt
jns
pop
add
inc
loop
test
add
movsb
dec
fsts
or
cmp
sub
mov
jae
lock
lods
inc
adc
push
das
jmp
or
bound
repz
jle
es
popf
mov
setne
out
pop
xchg
iret
icebp
clc
test
test
mov
cmp
adc
ds
or
pop
add
pop
mov
pusha
scas
aaa
les
rolb
lock
pop
sbbl
xor
push
mov
repz
add
imul
mov
test
andl
mov
mov
or
xor
fldenv
cmp
inc
inc
imul
adc
pop
mov
cmp
xor
in
xlat
es
leave
out
and
cltd
mov
ljmp
insl
scas
xor
xchg
xchg
jecxz
mov
sarb
repnz
adc
sub
jbe
repz
adc
sub
test
xor
addr16
cmp
xchg
cs
adc
imul
sub
xchg
adc
stc
ror
pop
loop
sbb
dec
push
mov
push
pop
jp
jo
xchg
ljmp
cmpsl
shr
add
xor
xor
mov
inc
bound
or
les
in
jle
jnp
dec
push
icebp
fs
sub
inc
push
ret
les
jne
ret
dec
and
cmp
jg
cld
push
fsub
scas
xchg
sub
fucomp
cmp
in
out
pop
push
add
scas
dec
push
pushf
das
push
xlat
subb
das
jb
xchg
dec
push
cs
pop
cwtl
push
ds
movsb
aaa
inc
mov
dec
sub
mov
mov
and
icebp
ljmp
and
sti
bound
lds
adc
icebp
mov
sbb
xor
lock
push
loop
pusha
xlat
pop
aam
out
adc
js
aad
out
sbb
in
mov
cmp
repnz
icebp
inc
outsb
clc
pop
add
cmpsb
stos
jb
mov
fcomip
popa
pop
fcmovnu
and
mov
repnz
fsqrt
xor
sahf
daa
call
jl
mov
add
dec
ds
bound
lods
aam
pop
aad
and
lret
adc
or
sub
fildll
into
or
pop
mov
push
push
xor
mov
mov
inc
dec
dec
lahf
dec
jb
scas
mov
loopne
push
mov
push
lds
fadd
fistpll
push
scas
and
xchg
xchg
imul
jns
lds
scas
adc
cmp
aaa
cmp
mov
sub
data16
push
sub
sbb
stos
ljmp
inc
mov
rorb
test
xchg
jl
push
hlt
and
pusha
rorb
fs
loope
sub
push
aad
xorb
fsubr
je
and
imul
dec
popa
inc
dec
in
mov
int
dec
aas
cmp
cmc
test
mov
ret
mov
aaa
jo
fs
push
bswap
xlat
cmp
scas
inc
xchg
out
nop
jl
cltd
lods
and
pop
lock
jno
dec
mov
dec
ja
pop
or
pop
inc
aaa
sub
mov
push
xchg
out
loopne
xor
jnp
fs
scas
pop
fadds
sbb
les
sbb
mov
jae
add
into
imul
or
mov
cmp
or
xchg
xchg
icebp
push
mov
clc
scas
adc
movb
pop
xchg
jae
iret
mov
dec
sbb
adc
push
and
jb
ja
mov
je
enter
shrl
mov
cmp
cli
mov
in
repnz
pop
or
jbe
lock
pop
scas
sahf
cmc
js
adc
sbb
or
es
sbb
or
ficomps
mov
stos
or
arpl
rcl
adc
les
das
rorb
inc
pop
ret
mov
mov
fsubrs
mov
call
jne
out
jl
or
inc
jg
jg
push
pop
xor
bound
mov
mov
and
outsb
fiadds
lds
xchg
pop
loopne
aad
out
cmp
rcrl
jns
leave
loop
inc
dec
mov
push
dec
push
fstl
sti
outsb
out
pop
leave
daa
imul
pop
mov
enter
add
xchg
push
loop
fnstenv
outsl
popf
aad
cmc
pop
cmp
lret
jne
pop
cmp
mov
pop
xchg
icebp
inc
inc
sbb
popf
mov
fbstp
pop
test
add
out
test
imul
xor
rep
jbe
fisubl
ret
daa
lods
xchg
lods
std
push
lods
aad
daa
fwait
popf
loopne
ljmp
outsl
adc
or
mov
inc
cmpsb
mov
nop
adc
adc
lods
shrb
cmp
cmc
mov
sbb
push
push
dec
cld
add
out
push
aaa
mov
xchg
sub
sub
mov
imul
into
arpl
pop
mov
or
mov
add
lret
lahf
and
inc
mov
cmp
mov
mov
addr16
lret
xor
mov
rclb
mov
sbb
inc
sar
test
fbstp
push
pop
or
repz
inc
cmpsb
mov
cmp
addr16
aaa
imul
cmp
push
movsl
aam
mov
sub
jbe
enter
or
popa
cmpl
adc
aas
push
mov
aad
fs
push
ljmp
out
dec
sub
cmc
insb
mov
popa
pop
mov
inc
mov
or
inc
xchg
mov
xchg
adcl
adc
js
fldl
fcmovnbe
and
push
push
push
ror
test
orb
adc
popf
cmp
repz
pop
xor
jmp
push
mov
cs
repz
mov
adc
jne
pop
mov
lret
add
stos
mov
fildl
ljmp
icebp
out
push
jle
in
aas
ret
mov
mov
stos
aas
cs
or
aam
test
push
addb
and
test
out
xchg
mov
adc
xor
aas
cmp
and
mov
add
push
push
mov
add
dec
sti
lea
mov
xor
xchg
lea
pop
mov
popf
int3
sbb
in
lcall
insl
dec
stc
push
imul
rolb
xchg
pop
mov
jo,pn
dec
lods
sti
xorb
jge
sub
pop
cmpl
imul
or
fcomps
insl
mov
push
cmp
inc
jmp
mov
mov
outsl
fists
repnz
arpl
push
jo
mov
sub
dec
imul
cmpsb
clc
cmp
inc
cmp
mov
in
mov
lods
scas
pop
mov
and
stos
in
jmp
add
push
call
pop
pop
outsl
ret
dec
in
shrl
roll
les
xor
pop
lret
lock
and
popa
sbb
and
stos
mov
pop
push
xchg
sbb
addr16
in
xorl
jno
sub
cld
mov
xor
fs
and
out
pop
fs
testb
loop
into
sub
inc
lret
adc
and
fidivl
pop
and
and
clc
movsb
dec
rcrl
cmp
cmpsb
adcl
xchg
mov
sub
push
jne
adc
push
mov
setb
cli
bound
adc
pop
int3
jnp
shl
xor
xchg
mov
jae
mov
and
call
jae
and
addr16
scas
icebp
jo
inc
dec
pop
enter
push
mov
jae
sub
and
lods
sbb
outsb
add
push
pop
orb
and
fistl
xchg
push
pop
dec
jl
bound
add
adc
jg
cmp
jp
das
leave
imul
sbb
mov
xchg
jge
xchg
dec
push
fadd
sbb
adc
shr
jo
mov
bound
push
divl
sub
in
cwtl
xchg
sti
sub
inc
inc
aaa
aad
cmp
cmp
aad
loope
dec
jbe
outsb
scas
fdivrs
or
or
dec
dec
sub
imul
enter
mov
jecxz
insl
pop
imul
cmp
push
or
xor
sbb
pop
out
std
pop
inc
pusha
jecxz
cmp
inc
repz
and
inc
out
enter
movsl
pop
call
mov
out
jp
repz
xchg
or
mov
iret
dec
and
xor
xchg
stos
aad
int3
and
adc
andl
popf
ret
mov
repz
jmp
inc
pop
ret
sub
cmc
mov
mov
xor
test
frstor
cmp
inc
dec
fstps
cmpsb
and
es
out
jne
int3
pop
mov
vpsubb
adc
mov
bnd
loop
pop
mull
jecxz
fs
dec
mov
cmp
xlat
cmp
push
inc
push
std
mov
ljmp
paddsb
fs
pop
shll
jns
pop
mov
aam
call
push
sar
andb
lahf
dec
mov
mov
les
cli
mov
gs
out
adc
ds
push
dec
jmp
clc
jne
test
mov
pop
fcompl
popa
je
ljmp
fildl
mov
inc
mov
insb
jne
int
xchg
sbb
xor
repnz
iret
in
or
sbb
in
xor
push
stc
xor
sub
dec
and
test
daa
leave
jo
push
lds
cmpsl
enter
cmp
cmp
inc
jno
ljmp
jo
outsl
mov
dec
sti
jne
pop
xor
xlat
adc
sbb
rolb
add
ret
dec
push
fidivl
adc
jae
mov
push
fldln2
xor
xor
lahf
jge
cmpsl
outsl
sbb
or
xor
pop
ficompl
jp
mov
rclb
inc
vpaddd
pushf
lods
out
out
sbb
nop
bound
add
mov
jp
inc
jle
clc
cmp
nop
jns
inc
mov
lods
cmp
shrb
lods
jecxz
jle
push
scas
push
loopne
sub
orb
mov
cltd
cmp
or
fisubrs
out
nopl
mov
xchg
imul
inc
int
mov
push
pop
cmc
imulb
dec
add
fs
cmpsb
dec
cmpsb
repz
std
lods
inc
xor
pusha
add
dec
sbb
mov
jle
or
inc
dec
push
rcrb
jmp
mov
lcall
sarb
call
cs
xchg
je
push
leave
cwtl
aad
pusha
jle
or
adc
push
test
sub
push
mov
out
mov
xorl
lahf
int
xchg
enter
icebp
or
inc
pusha
outsl
adc
jbe
aas
add
subb
xchg
cs
and
test
lcall
cmp
jb
aas
ss
out
fwait
xor
ror
scas
mov
mov
and
or
adc
ljmp
andb
pushf
loop
ficoml
stos
jne
repnz
inc
je
adc
inc
xchg
push
cmp
adc
adc
aam
pop
icebp
lret
mov
cmp
lds
pushf
inc
aaa
jmp
das
ret
push
pop
arpl
mov
xchg
push
sahf
pop
mov
ret
and
push
and
pop
imul
out
aam
ret
push
rcll
push
sbb
and
and
and
gs
and
mov
jbe
mov
ljmp
pushf
add
xchg
xchg
inc
int3
cmc
lcall
dec
subb
adc
ja
xchg
xchg
mov
sub
xor
lret
jle
sub
andb
xor
push
jnp
arpl
out
test
jne
mov
adc
int
xor
loopne
or
xor
dec
xor
mov
cmpsl
out
adc
or
adc
lods
xchg
push
cmp
jbe
in
pop
push
je
mov
into
sub
push
lret
clc
ljmp
jo
pop
sbbl
pop
push
push
mov
iret
sbb
mov
jnp
sar
mov
cmp
cmpl
loopne
push
cmp
lods
mov
dec
cmpsb
in
sbb
cmp
sti
scas
adc
add
lea
push
jne
add
das
mov
jmp
cli
mov
aas
mov
js
adc
or
jg
dec
and
stos
cs
loope
xlat
mov
push
add
push
lahf
mov
sub
pusha
mov
popf
mov
aad
cs
jecxz
jb
pop
subb
je
ja
sti
sub
mov
adc
xlat
mov
aaa
jle
dec
out
sub
xor
inc
sbbb
mov
inc
ljmp
and
rorl
jp
ss
je
and
adc
repz
insl
test
dec
dec
cli
pop
mov
xchg
mov
sbb
adc
ss
scas
scas
mov
mov
push
lock
sbb
lret
fcoms
mov
xchg
jecxz
leave
cmp
inc
leave
add
inc
pop
insl
sbb
js
push
push
and
popw
or
cmp
xor
ljmp
adc
ret
push
push
mov
push
adc
pop
rcll
mov
rcrl
dec
and
push
sub
inc
in
xor
mov
xchg
mov
ss
subb
jne
pop
fs
mov
in
arpl
dec
mov
mov
rcr
pop
sti
jo
xrelease
jecxz
pushf
push
test
xchg
and
imul
sbb
cmpl
xor
scas
or
add
mov
jmp
or
sbb
sub
cmp
inc
mov
cmp
cld
xchg
dec
add
arpl
repnz
lods
pusha
cltd
jg
add
add
hlt
mov
fistl
xchg
sub
hlt
xchg
dec
cmpsb
hlt
lahf
stos
movsb
push
lahf
nop
fnstsw
es
cmp
testb
pop
jecxz
sbb
jmp
ret
mov
pop
in
or
and
mov
cli
pop
and
xchg
ljmp
pop
call
mov
loope
cmp
pusha
mov
insl
ds
popa
dec
jg
xor
lret
inc
mov
jne
call
insl
mov
cmp
push
cld
or
aas
push
sbb
mov
cld
or
stc
int3
cmp
pusha
daa
xchg
cmc
lcall
in
mov
fcomps
or
mov
scas
loopne
push
fs
ja
repnz
je
lcall
psubq
std
add
fsubl
pop
dec
testl
in
pop
jecxz
mov
nop
push
xor
enter
mov
shl
sbb
and
insl
aam
andl
and
mov
test
mov
sub
adc
icebp
xchg
push
nop
lods
jnp
jae
sbb
aas
outsb
inc
sbb
lcall
stos
inc
jno
orl
dec
dec
lods
hlt
pop
inc
call
jb
mov
sub
cmpsl
notl
xchg
out
adc
mov
test
adc
xor
xorl
jbe
test
xchg
je
cmp
and
es
andl
jge
scas
adc
fadds
jnp
sbb
adc
and
add
push
enter
mov
dec
mov
sub
xor
push
pusha
mov
inc
std
jb
cmp
loope
and
pop
rcll
cmp
cld
stos
mov
sub
xor
mov
dec
and
ss
aam
addr16
pop
jne
dec
arpl
leave
cld
sbb
ss
or
enter
pop
js
fiadds
ljmp
test
leave
adc
mov
adc
jne
in
fdivrs
or
pop
or
jp
jle
sahf
xor
shrb
sub
je
ja
int
stos
test
mov
fwait
mov
je
cmpsb
outsl
dec
and
cmpsl
dec
pop
adc
and
imulb
adc
inc
xchg
xchg
adc
cmpsb
mov
mov
pop
jg
mov
call
mov
in
ljmp
in
add
mov
js
adc
jmp
jb
inc
mov
sbb
fisubs
cmp
jmp
adc
sarb
push
movsb
lahf
push
fdiv
mov
cmpsl
cwtl
inc
fcoml
inc
adc
popf
mov
fistl
pmaddwd
and
hlt
ljmp
jge
pop
sbb
cmp
stc
mov
insb
pop
sub
repnz
loope
jle
call
jns
out
mov
fdivl
in
jne
dec
cmp
mov
jbe
mov
add
imul
popf
fst
ret
lds
mov
jbe
andb
jmp
int3
lahf
xchg
lcall
lret
ljmp
call
dec
push
stc
daa
sub
outsl
test
inc
sub
jp
aaa
push
jg
aam
jnp
pop
push
mov
out
aad
sbb
icebp
mov
mov
test
pop
cli
jp
aaa
push
mov
xlat
inc
sub
jecxz
sbbl
jb
xchg
push
std
or
ljmp
iret
mov
xchg
mov
pop
xlat
inc
fstpt
shlb
jnp
lods
rcr
jns
mov
or
mov
nop
outsl
addl
and
sub
imull
jp
arpl
cmp
or
cmpsb
sbb
xor
gs
jmp
andl
sbb
sti
and
das
sub
dec
in
mov
daa
xchg
fildl
mov
xor
mov
cmpb
push
insb
icebp
push
fnsave
mov
cmp
xchg
test
sub
mov
dec
mov
xor
fwait
mov
xchg
lods
push
test
inc
xor
push
sub
sahf
xchg
jmp
shrl
movsb
fistpl
aam
hlt
iret
xlat
push
mov
dec
inc
add
fs
xchg
arpl
xor
rorb
scas
inc
idivb
cwtl
fdivl
pop
daa
ja
dec
lcall
outsb
scas
clc
dec
or
das
mov
push
mov
add
lock
cs
test
push
das
mov
mov
mov
cmpsb
sarb
or
sarl
mulb
pop
popa
les
fucomp
cmc
jae
cmc
jecxz
outsb
push
dec
add
sbb
adc
scas
stc
push
and
mov
mov
xor
cltd
movsl
push
adc
faddl
push
sbb
loope
xchg
push
and
inc
sbb
ret
int
and
loope
add
shlb
push
fwait
push
stos
lock
scas
jb
lcall
sahf
sbbl
aas
fdivrl
icebp
sbb
sub
cmc
mov
ja
mov
jp
dec
pop
or
data16
push
jmp
ud1
lods
xchg
mov
jge
dec
insl
imull
pop
xchg
sbb
jnp
or
movsl
jbe
mov
mov
sbb
add
dec
jo
xchg
scas
mov
dec
loop
pop
cs
dec
cmp
mov
fsts
std
andl
lret
subb
clc
adc
cmp
sahf
out
out
xor
pop
mov
sbb
daa
fxch
mov
or
stc
scas
scas
push
arpl
inc
push
ja
mov
mov
stc
int
add
mov
icebp
lea
pop
cmpsl
das
movsl
cwtl
jo
popa
sbb
insl
fadd
and
pop
and
movsbl
pop
lods
sub
and
out
xor
cmp
mov
lret
xchg
aad
sti
cmp
xor
or
popa
stos
rcr
xchg
inc
adc
movsl
into
dec
inc
and
xchg
jae
inc
mov
jae
sub
xchg
sbb
sahf
outsl
cwtl
push
sbb
imul
sbb
inc
aaa
gs
imul
dec
sub
push
pop
imul
outsb
mov
or
cltd
or
stos
insl
and
sub
das
loope
icebp
mov
std
dec
fistpll
aam
cmp
sub
icebp
mov
add
add
insl
aam
jno
iret
jae
les
xor
addr16
pop
xchg
mov
cmc
xchg
div
lahf
cli
push
pop
pop
int
lcall
push
cmpsl
insb
stos
cmp
mov
jno
push
aad
add
lret
sub
sahf
ret
inc
add
and
push
cli
jmp
ja
aas
shl
cli
sbb
mov
gs
xchg
enter
add
jg
push
sub
jp
std
push
mov
push
xchg
aas
push
aam
lds
jmp
xchg
push
cltd
adc
iret
fisubs
sub
fisttpll
jb
dec
xchg
cli
jnp
es
xorb
mov
hlt
out
addr16
jae
gs
add
enter
test
lcall
pop
cltd
xchg
movsb
imul
fidivs
mov
in
mov
jae
sahf
pop
adc
fstps
int3
pop
add
aas
cmpsb
adc
fsubrs
cmp
jmp
sub
dec
mov
enter
jns
inc
add
in
test
sbb
shr
jge
ficoml
mov
gs
das
inc
into
loope
mov
push
pop
mov
lods
clc
nop
dec
popf
loop
ficoms
les
enter
rcl
arpl
in
push
adc
push
push
mov
or
and
or
in
sti
pop
ror
les
sub
ss
and
popa
sbb
shrb
sub
in
jge
adc
xchg
cli
cwtl
add
jge
insl
dec
mov
adc
cmc
add
aam
xchg
stos
gs
imulb
adc
mov
fdivrl
mov
outsl
push
jno
pop
hlt
or
icebp
aad
xchg
cmp
xor
jmp
push
or
out
xor
mov
xchg
xor
je
ret
pop
inc
or
xor
loope
xor
push
shr
jmp
jns
negb
call
push
and
cmp
iret
les
jbe
or
fistpl
jo
lea
push
mov
shll
mov
mov
xor
ficomps
add
popl
cmp
push
mov
adc
cmp
or
ret
mov
mov
in
test
dec
cmp
cmp
or
sarl
add
lods
push
repnz
mov
aaa
cmp
add
sbb
pop
jne
mov
xlat
mov
aaa
cmpsl
mov
xchg
push
inc
adc
sub
sub
fcompl
push
inc
inc
pop
imul
and
dec
jo
xchg
ss
addr16
and
xchg
xchg
movsb
addl
lahf
sbb
call
cld
cwtl
inc
mov
cs
mov
jp
stos
mov
mov
inc
adc
adc
mov
ss
mov
pop
and
arpl
adc
add
mov
cltd
or
inc
mov
sbb
sbb
fstpt
push
inc
cli
gs
cmp
cmp
push
bound
rolb
inc
loopne
sar
xor
cltd
das
lahf
aam
mov
cmc
sti
mov
js
adc
jle
sbb
in
out
mov
push
push
ret
mov
lods
mov
sahf
xchg
ficompl
fsts
jge
mov
mov
or
fwait
jnp
je
and
jb
int
imul
jae
dec
sub
jmp
and
jl
jae
sahf
inc
aad
or
ret
hlt
andb
jns
sahf
and
arpl
addr16
push
sub
mov
mov
sahf
outsb
xor
jb
adc
mov
push
pusha
int
inc
xchg
rcrb
inc
sbb
lds
cmp
adcb
push
mov
cmpsl
pop
dec
lea
and
addl
adc
enter
xchg
and
int3
sbb
outsb
pop
fmulp
push
movl
fidivrl
cli
inc
adc
fldt
xchg
std
pushf
loope
stos
dec
ja
dec
aaa
loopne
roll
xchg
sbb
pushfw
mov
mov
and
sahf
sub
mov
jmp
push
mov
dec
xlat
sbb
jo
mov
lret
decb
and
sub
xchg
adc
push
xor
fs
add
ficoml
add
and
mov
pop
mov
mov
mov
inc
add
lahf
test
push
and
inc
jb,pt
movsl
sub
test
in
bound
adc
cmp
test
inc
outsl
xor
mov
adc
hlt
pop
jg
jp
setge
lock
hlt
movsb
push
jae
ret
call
fsubrl
enter
in
ret
jnp
cltd
std
sti
mov
aam
lcall
mov
pop
mov
jg
aaa
mov
and
adc
movsl
dec
daa
pusha
orl
icebp
ret
jge
test
xchg
xor
je
or
mov
sahf
pop
loop
mov
cmpsl
scas
cld
pop
enter
xchg
xchg
loope
stos
lret
push
push
mov
fisubl
cmp
inc
subb
mov
push
lahf
lret
mov
jbe
xchg
adc
imul
int
mov
lea
inc
int
out
imul
push
xchg
push
push
add
or
inc
nop
mov
mov
sub
dec
shrb
cmp
es
and
and
je
add
les
cs
imul
and
add
sub
push
adc
lahf
pop
xor
lods
loope
pop
loop
inc
into
jl
push
nop
cmp
vzeroupper
adc
mov
cmp
sbb
rorb
jb
jg
and
jg
xchg
loopne
mov
addr16
jle
mov
fisubrl
push
lods
xchg
cmc
cmp
xor
dec
rcrb
jae
xor
test
xchg
cltd
xchg
push
sti
into
cli
fsubrs
fdivl
xchg
cmp
inc
clc
test
stos
or
icebp
mov
and
adc
popf
arpl
dec
fmuls
shl
xchg
xchg
sub
jae
mov
sub
stos
mov
lcall
std
lret
insl
push
jne
sbb
add
or
imul
adc
push
sbb
pop
cmc
xor
test
repz
ss
jo
xorb
movsb
or
inc
mov
cld
jp
dec
xchg
pop
mov
push
sub
lahf
imul
xchg
ror
cmp
insl
dec
dec
ss
sub
arpl
xor
push
mov
dec
fwait
insb
sbb
mov
test
mov
movsb
rclb
pop
add
mov
imul
mov
enter
or
push
xchg
fistpl
dec
sub
dec
lea
ljmp
push
int
scas
xchg
dec
lods
ret
nop
xchg
lret
adc
adc
push
or
dec
push
icebp
pop
sub
adcb
cmpsl
mov
sarb
cwtl
test
or
add
jecxz
std
adc
push
inc
fcom
in
xor
gs
pop
ja
fbld
fcmovbe
pop
mov
sub
cmpb
adc
dec
aam
xor
fisttps
sub
sahf
pop
call
mov
cmpb
repnz
negl
dec
jb
cmc
fisttpl
sub
das
push
jno
clc
aad
lahf
mov
lret
rolb
or
adc
pop
js
and
xchg
out
aas
pop
imul
fcmovnbe
out
cs
inc
subb
imul
sbb
out
sbb
cmpsl
shll
les
sub
inc
dec
movsb
sub
stos
in
and
aad
mov
pop
or
mov
cmp
hlt
push
outsl
jne
fstps
adc
mov
aad
hlt
cltd
lahf
sub
loopne
mov
movsb
sbb
push
push
xor
das
pop
mov
in
lret
xchg
cmp
sbb
test
sahf
mov
jg
roll
cld
push
in
xchg
or
fcomps
fmul
pushf
or
or
mov
out
fwait
cmp
nop
mov
push
nop
notl
fistps
jae
ss
push
fcmovb
jg
pop
dec
cmpsl
in
adc
stos
xchg
cmp
sub
test
insl
cld
cmc
inc
mov
mov
orl
fstl
jmp
pop
adc
inc
mov
xchg
cmp
push
adc
fcomps
shrl
imul
inc
inc
jno
jo
popf
xchg
decl
jp
ficompl
popf
out
cmp
push
pop
push
lock
ljmp
and
imul
mov
pop
mov
add
push
and
mov
or
sub
pop
pop
enter
clc
push
rol
adc
mov
mov
lods
sub
sar
cltd
sub
add
mov
int
sub
mov
pop
or
cmpsl
ja
scas
lret
and
or
mov
mov
loopne
mov
add
and
xchg
int3
divb
shlb
adc
test
sbb
jge
xor
push
rcrb
jecxz
insb
roll
js
add
aas
cmp
das
repnz
pop
inc
shlb
aam
xchg
cmp
cmp
sbb
add
sub
iret
pop
ficoms
out
inc
pop
mov
add
and
in
sub
or
rcr
cmp
mov
adc
adc
push
add
add
adc
movsl
mov
lock
ljmp
pmulhw
fidivrl
adc
sub
jne
jp
in
or
jnp
ja
adc
and
mov
sub
xchg
add
jg
fs
sub
rcll
or
punpcklbw
das
inc
dec
push
jmp
mov
mov
xchg
je
out
cmc
or
push
push
dec
loopne
sti
mov
push
lock
fcoms
in
popf
jno
push
leave
jno
ficompl
mull
xchg
add
aaa
dec
mov
call
sub
or
xor
cmp
adc
ds
jecxz
push
cwtl
sub
xor
sbb
mov
insb
or
sar
cmpsl
pop
inc
aam
mov
sub
mov
push
sarb
mov
sbb
aaa
push
and
push
sub
sti
mov
addr16
xchg
iret
mov
ret
jge
incl
xor
fsubs
jae
sti
out
jmp
xchg
fisubl
jecxz
xchg
push
mov
test
lods
sbb
mov
pop
jecxz
lret
push
mov
pop
adc
dec
sub
push
cmpb
and
mov
loope
jb
leave
lret
int3
inc
jge
nop
mov
mov
xchg
sti
inc
adc
jo
aad
rcrl
lcall
popa
stos
pop
push
mov
pop
and
mov
mov
scas
stc
cld
arpl
mov
push
std
push
sub
adc
push
rcrl
cmpsl
call
cltd
inc
cli
je
cmp
and
xor
insl
std
out
cmp
xchg
shll
or
xor
ret
repnz
xchg
push
sbb
inc
cmpsl
xor
aaa
jno
dec
xor
sbb
ret
adc
dec
pop
or
mov
cmp
stos
and
enter
and
aad
xor
scas
aad
push
xor
mov
cmp
sbb
cld
int
pop
data16
xlat
mov
push
add
mov
mov
cmpsb
ss
add
add
pop
xchg
mov
movsl
ret
lock
xchg
xchg
and
jo
ss
inc
je
fcmove
fisttpl
adc
cmp
int
add
daa
cli
push
call
jge
adc
out
stc
mov
bound
ret
sub
dec
lods
cmp
movsb
dec
sub
fwait
iret
in
xchg
pusha
fiaddl
cmpsl
pusha
jl
inc
and
mov
cs
or
xor
cmpsl
cwtl
cmp
xor
sbb
adc
pushf
xor
or
push
jmp
push
mov
and
aam
scas
fdivl
loopne
notb
and
ss
jnp
faddl
mov
loopne
xchg
stc
xor
sbb
movsb
insb
fstp
aam
cmpsb
and
jae
mov
stos
call
ljmp
jbe
sub
sub
fcmove
push
loop
jp
cld
dec
imull
xchg
repz
pop
fidivrl
jb
lea
out
sub
inc
icebp
add
subb
sbb
int
inc
mov
xchg
subl
jecxz
pop
mov
flds
ret
aad
dec
fldenv
aas
cmpsl
imul
pop
int
sbb
mov
jg
mov
gs
xchg
icebp
mov
inc
cli
lods
jo
adc
cmpsl
jecxz
mov
cmp
and
xchg
fisttpl
test
aam
mov
cmp
xor
sub
pop
fsubr
scas
nop
add
push
pop
pop
pop
xor
mov
sbb
xchg
mov
inc
mov
in
inc
test
movsb
mov
ds
add
je
mov
push
pop
sbb
bnd
inc
test
shlb
or
leave
add
add
dec
stos
add
enter
jnp
jno
add
xchg
pop
imul
mov
cmp
jo
adc
and
ret
xchg
aam
xor
sub
stos
add
testl
ret
cmp
fxam
std
insl
bound
data16
lods
sub
fwait
push
pop
inc
mov
add
out
jo
sar
subb
add
add
cmc
adc
sahf
inc
cmovns
lret
sub
or
and
cmp
inc
and
in
cli
lods
in
mov
lahf
push
sub
arpl
lret
jns
push
subl
cmp
jns
xor
fildl
pop
cli
push
sbb
mov
mov
jbe
mov
pop
in
lcall
lds
mov
inc
jns
adc
scas
movsl
add
sub
push
lods
inc
rolb
gs
inc
sahf
cmp
adc
jp
ja,pn
xchg
xlat
or
sahf
xlat
pop
mov
push
jno
iret
mov
dec
bound
add
mov
xor
xchg
xor
lock
jno
push
out
loope
movsl
andnps
mov
movsl
mov
lods
sub
xor
stos
lds
cmp
ljmp
xor
mov
pop
push
mov
ret
push
jmp
or
xor
insl
into
pop
fstpl
jmp
adc
lock
ja
jg
popa
decb
and
cmpsb
fisubl
mov
mov
sahf
and
out
in
popl
adc
and
cmp
subb
xchg
sub
aas
mov
into
mov
jo
push
stc
bound
jmp
negl
jae
popa
pop
stos
xor
loopne
mov
mov
cmp
xlat
dec
icebp
sbb
xchg
adc
adc
ret
inc
lcall
push
mov
sub
jbe
sarl
sbbl
cmp
ficoms
in
imul
xor
stos
xor
add
out
loopne
xchg
inc
fmul
sbb
daa
mov
sub
scas
repz
rol
lea
fs
mov
stos
jbe
fs
test
repnz
aas
mov
in
inc
gs
loop
adc
adc
jae
fildl
push
mov
lock
movups
mov
sbb
add
or
or
rolb
frstor
mov
fldenv
stos
xchg
mov
xchg
cltd
mov
dec
jns
leave
outsl
out
mov
jnp
mov
test
int3
pop
ds
mov
rorb
xorb
out
jne
or
jnp
dec
mov
mov
jbe
adc
imul
ret
je
out
push
scas
jecxz
ss
pusha
inc
push
sbb
fsubs
xchg
inc
dec
aad
lds
shlb
sub
sahf
jge
fbstp
test
mov
lods
ss
cmpsb
sarb
icebp
add
cli
ret
and
int
gs
sbb
jno
cmc
cli
mov
mov
stos
test
pop
mov
adc
xchg
lods
sub
shll
in
data16
les
int3
sbb
test
mov
jecxz
in
xor
adcl
add
jb
and
pop
scas
loop
lret
pusha
pop
into
mov
test
daa
cli
jb
popl
jo
out
loopne
sbb
mov
cwtl
lret
aad
lods
loopne
or
hlt
push
leave
sahf
jnp
mov
mov
lds
mov
fistpl
rorl
add
movsb
les
adc
pushf
add
lea
mov
mov
add
push
jecxz
jo
dec
cmpsb
aas
or
inc
loop
imul
in
lods
jge
xchg
xor
push
test
and
pop
adc
sarl
out
mov
and
pop
mov
mov
mov
shlb
or
dec
test
ret
mov
stos
fsubrs
xor
leave
or
rol
andb
ljmp
imul
or
out
push
lds
das
push
lds
dec
scas
mov
jbe
out
jns
mov
add
adc
mov
dec
add
xchg
call
out
shlb
jno
out
stc
inc
mov
cmpsl
inc
repz
nop
mov
xor
fsubs
jo
jbe
inc
pop
push
push
pop
cmp
push
xchg
int
shll
stc
mov
add
inc
mov
or
xor
stos
stc
cmpsb
and
aas
or
sahf
adc
pop
add
xchg
sti
int3
orb
jno
int
les
xchg
mov
jne
jnp,pn
enter
adcb
xchg
mov
aad
xchg
into
repnz
fcoms
xor
mov
and
add
jbe
idivl
sbb
and
mov
add
push
sbb
lods
mov
aam
aad
les
stc
nop
mov
adc
mov
jge
push
sbb
push
int
sbb
sub
and
xchg
orb
jbe
into
int
add
mov
clc
xchg
sbb
jmp
nop
push
repnz
mov
insl
shrb
cmp
or
ss
mov
scas
or
jge
in
fldt
sahf
cmpsw
shrb
xchg
ret
mov
outsb
or
or
in
pop
sbb
mov
das
repnz
cmpsl
daa
push
pop
fwait
pop
xor
mov
jnp
adc
lods
es
jnp
pop
pusha
rorl
lret
inc
call
and
adc
inc
cli
cmp
dec
data16
jge
adc
fwait
cmp
mov
cmc
fldz
push
sar
imul
inc
in
xchg
sti
and
mov
xor
movsl
fdivr
push
jne
cli
add
sub
and
pop
cmp
push
mov
shll
aad
popa
scas
mov
adc
clc
enter
movsb
test
sbb
sbb
scas
jns
dec
inc
rcrl
inc
es
pop
nop
cmp
rorl
pop
mov
fisubs
add
idivb
push
push
adc
add
jb
repnz
cmpl
cwtl
push
add
scas
movsb
je
xlat
inc
test
imul
cmp
or
insb
fldcw
xlat
adc
dec
or
lds
mov
add
mov
sub
inc
shlb
outsb
mov
cltd
mov
mov
add
mov
repz
and
lods
cmp
popa
and
jnp
movsb
lds
xchg
mov
adc
mov
orl
push
scas
lea
jae
mov
push
xor
arpl
stos
jmp
mov
sti
lods
outsl
xchg
adc
sbb
jo
fnstenv
test
sub
mov
enter
insl
push
pop
ret
xor
xchg
fmull
push
jmp
stc
je
adc
out
adc
out
inc
adc
call
fwait
stc
adc
sbb
mov
xchg
clc
int3
pop
testl
fmuls
sub
lea
push
pop
stos
into
jecxz
mov
mov
mov
cs
jl
or
dec
mov
test
stos
pop
pop
outsb
add
sbb
shrl
xchg
inc
aas
dec
lret
insb
jo
mov
cltd
ja
pushf
js
push
xchg
enter
dec
and
cmpsb
test
push
add
sbb
cmp
jl
enter
add
mov
xorb
jmp
and
mov
mov
cmp
cmp
dec
enter
mov
inc
dec
and
test
lea
shrl
movsb
fdiv
mov
jp
pusha
nop
ret
adc
add
je
int
popa
add
xchg
insb
xchg
cmp
mov
dec
xchg
shlb
lods
xor
loope
cld
data16
jp
and
push
movsl
cwtl
add
mov
inc
xchg
sbb
mov
mov
mov
pop
in
mov
cmc
in
cmp
add
cmp
ret
das
test
adc
loope
and
sub
decl
dec
jnp
fstpt
add
lods
pop
jmp
xchg
inc
nop
sub
addr16
push
mov
xchg
repnz
mov
test
mov
push
test
add
xchg
dec
mov
sub
ljmp
inc
sbb
lods
ret
and
sub
test
mov
jg
pop
push
push
inc
inc
ret
imul
cli
es
inc
xlat
imul
jmp
mov
int
enter
jmp
decl
dec
loopne
add
xor
add
popf
mov
pop
push
iret
or
inc
das
ja
fmul
push
pushl
fucomip
dec
dec
out
out
mov
jb
pop
std
adc
push
out
call
jo
mov
stos
mulb
mov
dec
cmp
xchg
shll
adc
in
xor
filds
lret
clc
andl
jle
gs
jp
pop
rorb
pop
movsb
clc
pusha
or
ret
push
daa
pop
stos
push
in
and
mov
icebp
ljmp
or
fidivrs
fs
xchg
ljmp
add
cmp
in
push
sub
mov
mov
mov
push
and
or
mov
shl
add
call
xor
mov
pop
rolb
aad
xchg
push
mov
xor
xor
movsl
sbb
arpl
dec
mov
xchg
sub
test
sbb
loope
cltd
push
scas
jns
outsl
xchg
push
jle
sbb
sbb
adc
mov
xchg
stos
xor
std
dec
mov
std
es
pop
loop
ret
aam
bound
mov
jg
pop
ret
adc
or
inc
dec
cli
push
sub
outsl
aaa
arpl
jns
add
add
loopne
out
xor
and
mov
mov
or
lahf
xchg
add
out
idivl
gs
xchg
je
adc
jb
sub
out
jle
fmul
lods
fstps
pop
xor
loopne
fwait
push
cwtl
aad
lods
mov
fisttpl
sbb
adc
jecxz
pop
sbb
sbb
add
and
rcrl
cmp
jae
cmpsb
xchg
inc
test
jno
popa
adc
aaa
inc
inc
mov
sub
lret
sbb
mov
popf
push
sbb
sahf
push
push
pop
sub
rolb
lret
jnp
in
jle
rolb
xor
cmp
add
pop
mov
fiadds
cmp
gs
and
dec
mov
sbb
and
jl
pop
mov
jae
xchg
xor
aad
lock
ret
mov
inc
mov
lret
pop
push
mov
xor
shlb
adc
lret
xor
popa
mov
ljmp
adc
push
adc
pop
jp
mov
scas
sub
sbb
jecxz
adc
shrb
mov
in
inc
inc
add
mov
ja
sbb
add
sbb
stos
outsl
xchg
cmpsl
inc
push
incl
jo
mov
push
es
pop
xchg
cmp
popa
pop
sbb
dec
sbb
pop
pop
ds
add
push
jb
inc
xchg
push
imul
cmp
mov
cmp
rorl
mov
inc
jo
dec
mov
add
xor
cwtl
stos
shl
in
xchg
les
sub
pop
and
xchg
sub
mov
imul
mov
in
cmp
mov
sahf
xor
pushf
cld
cmpsl
icebp
orl
lidtl
xor
pop
pusha
sti
es
lds
fisubl
enter
ja
lods
mov
dec
inc
inc
mov
jecxz
stos
xchg
pop
sub
jmp
das
and
push
jno
pop
scas
test
xchg
jg
mov
test
jno
push
adc
cmp
imul
sbb
fistl
cs
adc
aas
neg
mov
mov
pushf
xor
outsb
xor
test
or
loopw
inc
rcrl
lods
je
lds
jle
mov
inc
or
sub
neg
in
loop
cmpsw
xchg
lret
lock
out
bound
ret
mov
jo
xchg
push
cmp
sub
cmp
fisubs
fnstenv
pop
cs
fs
lock
movsl
loopne
repz
sbb
sarl
sbb
jb
fwait
mov
sbb
stos
dec
mov
in
or
xchg
push
je
xorl
mov
or
repnz
das
dec
rolb
jns
mov
sarl
pop
cmp
jmp
jne
and
sub
ret
push
movmskps
out
mov
in
mov
sub
sub
add
adc
cs
push
loop
mov
lret
jnp
outsb
bound
mov
and
sub
cs
movsl
adc
test
pop
push
inc
push
mov
jecxz
in
jp
in
xor
add
xchg
hlt
shlb
stos
and
mov
inc
nop
or
sbb
out
adc
add
ret
sti
pop
lcall
or
movsb
test
dec
dec
add
imul
push
lock
push
mov
fcomp
repz
mov
aas
stos
push
lea
out
jne
test
rcrl
cmp
daa
push
les
idiv
loope
add
xchg
xor
test
data16
push
jmp
cmp
and
add
push
dec
clc
cmpsb
mov
sub
insb
xor
jmp
aam
adc
pop
fadd
pop
and
fisubs
cld
or
icebp
xchg
fisttps
sub
pop
sub
pushl
popf
dec
daa
lock
or
aaa
xchg
outsl
cmpsb
adc
mov
dec
adc
mov
cmp
cmc
jne
stos
int
pushf
sub
enter
cltd
lret
pusha
add
out
and
jecxz
sarl
mov
pop
mov
push
adc
xchg
addr16
push
outsl
fptan
mov
push
mov
outsl
jne
dec
sbb
sub
mov
push
outsl
sbb
out
mov
clc
in
adc
inc
and
lea
or
orl
int3
xchg
adc
inc
lret
inc
pop
hlt
mov
loopne
into
les
movsb
int
les
cmc
mov
inc
sbb
cmp
xchg
push
jb
ja
lret
js
and
popf
addb
lods
stc
rcl
lret
fs
scas
mov
pop
mov
cwtl
mov
mov
js
lock
repz
sbb
sahf
idivb
cmc
in
xchg
lret
stos
push
xchg
dec
in
lock
dec
arpl
cmp
lcall
jnp
jno
push
cmp
mov
cmpsl
pop
dec
cmp
notl
shlb
lock
lds
jle
into
fsubl
stc
in
sub
std
jae
jns
sbb
jne
jbe
adc
mov
inc
loopne
inc
leave
mov
nop
mov
scas
sub
hlt
out
mov
mov
xchg
flds
inc
push
imul
push
dec
jne
gs
jnp
les
repz
xchg
out
cmp
sbb
pop
push
std
ljmp
mov
xor
mov
mov
into
jl
mov
test
push
and
push
mov
dec
fmuls
mov
cli
xor
mov
xchg
push
mov
adc
sub
bound
adc
fbstp
sub
xor
xchg
sub
int3
aaa
daa
xor
jno
pop
sti
into
aad
stc
je
mov
jle
xchg
jo
out
les
pop
sub
xor
pop
shr
jns
xor
lock
or
clc
jmp
xchg
pop
aad
or
cltd
dec
or
dec
mov
sbb
adc
das
jp
adc
jmp
push
and
adc
sbb
lahf
cmp
out
fs
mov
sbb
lods
scas
ljmp
test
fs
loope,pt
and
xor
mov
loop
aad
xor
insl
xchg
cmc
adc
sahf
enter
pop
icebp
push
push
or
pop
fdivl
adc
and
and
pusha
mov
push
sub
addb
insl
cli
sub
js
out
stos
dec
adc
out
adc
dec
fwait
pop
rcll
inc
xchg
mov
insb
add
loopne
int3
push
in
jno
mov
mov
xorb
dec
jbe
mov
sbb
pop
add
adc
dec
mov
xchg
int
mov
pop
inc
sub
cwtl
enter
sub
xchg
test
or
xchg
ljmp
in
push
push
add
cmp
and
or
test
xchg
pop
push
test
mov
xor
test
nop
lods
cmpsb
push
push
dec
sbb
cmp
clc
adcb
vandnps
stc
push
sti
cmp
inc
jecxz
lds
jp
jns
add
mov
lcall
enter
shl
jecxz
mov
or
and
adc
xor
xor
call
sbb
mov
and
inc
aas
lock
xchg
xchg
std
cwtl
sub
sub
mov
push
mov
out
jns
pop
icebp
xor
out
mov
xchg
jge
rorl
iret
mov
shlb
cltd
fstpl
lock
dec
ret
lods
jne
ret
int
and
cmpsl
sahf
lcall
stos
call
rorl
mov
mov
imul
loope
xor
jns
cmp
add
es
lret
pop
xchg
scas
adc
lcall
pop
pop
test
mov
fistpl
pop
lret
jp
lret
lods
pop
jge
sub
sbb
push
mov
negb
adc
fidivs
adc
stos
leave
loopne
xor
pop
popa
repz
lods
lret
xor
mov
jns
arpl
mov
mov
imul
push
lods
sub
ret
notl
mov
pop
dec
xchg
jmp
mov
push
mov
jg
jbe
inc
cmpsb
mov
pop
out
pushf
push
sahf
cli
and
popl
xorb
or
hlt
std
jecxz
inc
cmpl
and
cmp
into
xor
sbb
loop
add
sub
jle
push
test
fs
aad
loopne
imul
hlt
pop
pop
aas
cmpsb
fldenv
daa
cmp
mov
aam
in
jns
jecxz
xchg
pop
pop
sub
fsubs
mov
pop
adc
push
imul
test
mov
test
es
pop
in
test
sub
or
in
inc
pop
jno
stos
inc
repnz
aas
xchg
ss
outsb
sbb
and
movsl
push
or
sub
add
lods
push
jp
aad
jge
push
aas
cwtl
or
mov
push
sub
adc
jae
repz
in
mov
rorb
dec
inc
pop
popa
lds
mov
jnp
jl
pop
ret
pop
adc
and
adc
and
mov
sub
stc
mov
or
or
jbe
in
mov
jle
inc
fsubrs
or
popa
fisubl
jg
push
cld
cmp
push
lods
xchg
or
jecxz
pop
xor
push
mov
ds
jecxz
repz
xchg
mov
fldt
pop
push
or
cmpsb
lahf
imull
add
in
into
in
negb
das
aas
gs
lea
mov
lcall
mov
push
mov
sub
arpl
jae
shl
scas
fldl
mov
cmpb
lds
and
cwtl
mov
mov
ljmp
insb
orb
sub
sbb
cs
cmp
nop
mov
in
adc
fisubs
mov
jns
stos
jne
mov
push
xchg
cmp
jge
pop
adcb
in
sbb
cld
rorb
in
mov
adc
push
lcall
pop
ret
std
movsb
test
adc
gs
shlb
or
sbb
aas
pop
dec
dec
out
mov
pop
sub
sbb
enter
adc
inc
push
cs
ja
arpl
imul
test
xor
fidivrl
xor
jb
xor
add
stos
test
cs
das
inc
loope
stc
data16
or
stos
xchg
mov
mov
jnp
xor
cmp
pop
adc
inc
pop
push
leave
stc
scas
and
adc
fmuls
gs
xchg
mov
outsb
add
add
cmpsb
and
aad
sbbb
lfs
ljmp
mov
std
inc
movsl
mov
adc
jae
and
cmp
ret
cmp
or
mov
cmp
mov
sbb
imul
andl
mov
add
lods
mov
cmc
adc
inc
and
call
lods
push
jne
jge
mull
les
mull
subb
push
repnz
and
loope
fsubs
mov
jle
loopne
xor
lcall
std
adc
loope
xorl
fmuls
scas
push
pop
fwait
ror
and
push
insb
inc
mov
in
xor
hlt
mov
push
scas
nop
clc
cmp
and
das
dec
cwtl
cwtl
int
enter
dec
stos
sbb
and
mov
sub
mulb
loopne
orb
into
and
in
bound
shrb
mov
xchg
sbb
inc
pop
out
mov
cmp
mov
loopne
or
cmp
cmp
xlat
out
lea
imul
and
pushf
jnp
iret
loope
sub
mov
xlat
push
push
dec
sbb
cmp
stos
popa
xchg
mov
iret
and
pusha
sti
subb
push
jp
sarb
sbb
push
jge
xchg
stc
fcmovnbe
xorb
inc
adc
scas
ficoml
cmp
mov
and
mov
push
sub
push
das
enter
jle
lds
ret
pop
sub
mov
push
outsl
in
mov
addb
fidivs
sub
lret
sbb
or
aad
in
fimull
in
int
pop
mov
xchg
mov
test
stc
aaa
stos
sbb
inc
or
mov
jecxz
pop
addr16
repz
mov
jl
or
cltd
mov
loop
cmp
inc
add
dec
fdiv
sbb
xchg
cmp
lods
jb
xor
fadds
shll
and
cmpsb
aam
icebp
pop
or
js
push
lahf
sub
imul
fisttps
inc
pusha
movsl
or
sub
inc
insb
xchg
pop
insl
inc
shlb
pop
jl
addr16
pusha
fcompl
fucom
in
decl
pop
cmp
cmp
mov
xchg
jnp
jp
adc
jae
jg
ds
stc
pop
and
cmp
les
jbe
cmp
lods
fcomip
test
and
cmc
xor
dec
cltd
push
fistl
mov
xchg
adc
das
xchg
cmpsl
dec
leave
adc
andb
outsb
and
cmp
mov
pop
inc
iret
idivb
dec
push
je
repz
pop
add
jno
ret
mov
jp
mov
push
lea
mov
xchg
test
mov
lahf
insl
out
sbbb
pop
and
mov
xchg
cmp
xchg
test
dec
pop
mov
in
sbb
cmp
or
cld
icebp
sbb
into
shll
cmp
adc
cmp
xchg
repnz
cmc
movsb
shll
in
fcomp
dec
dec
movsl
inc
lcall
scas
xchg
aaa
or
scas
cmpb
js
ret
sbb
pop
fisubrl
sbb
into
push
stc
mov
sub
adcb
inc
add
cmp
cwtl
mov
sub
xor
mov
mov
imul
das
in
cwtl
add
arpl
cmpb
testl
popa
xchg
add
and
inc
ljmp
sub
mov
rolb
in
pop
cmp
arpl
pusha
and
stos
out
rcr
mov
out
xchg
or
enter
adc
popa
inc
mov
xchg
jl
ret
cmpsb
mov
and
test
insb
sbb
inc
jbe
sub
out
filds
lods
cmpsb
lcall
dec
test
ss
popa
outsb
cld
js
icebp
shll
outsb
mov
in
test
outsb
and
or
out
in
mov
mov
push
arpl
fsubs
jge
sbb
inc
pop
fbld
mov
jg
scas
bound
and
rclb
movsl
iret
aas
sarb
lret
inc
or
mov
xor
xor
mov
arpl
push
testl
in
sbb
jp
add
push
ror
sbb
or
loop
stos
mov
mov
bound
cmpsl
sqrtps
push
mov
pop
lea
testl
inc
lds
movsb
aas
mov
dec
xor
dec
loopne
ds
aam
jg
lea
cmp
mov
pop
inc
outsl
mov
sub
loope
pop
ret
ret
outsb
insb
fwait
pop
and
jle
push
pop
sub
test
hlt
jns
inc
mov
pop
sbb
inc
xchg
rorb
pop
iret
movsb
inc
pusha
push
shlb
jne
jmp
lret
test
mov
mov
cmp
push
xor
ja
dec
clc
jmp
and
lock
jns
out
push
lret
je
shr
adc
testl
sub
jae
test
in
jl
adc
mov
test
xchg
loop
data16
movsl
shll
sbb
enter
sbb
jmp
js
cmpsb
jbe
fwait
sbb
cltd
jnp
fcoml
sbbl
in
fcmovnu
inc
popf
dec
jg
loope
sbb
mov
ss
dec
and
lret
cmp
cmpsl
outsl
pop
add
cs
pop
pusha
jge
jle
dec
fcmovbe
push
cmpsl
lock
jbe
aam
pop
mov
popa
ja
xor
xchg
pop
pusha
mov
mov
data16
cmp
add
insl
aaa
insb
cmp
inc
lock
mov
daa
and
shll
into
jae
push
xor
mov
jp
mov
or
scas
and
push
dec
nop
inc
inc
call
decl
xor
mov
dec
in
loop
pop
xchg
sbb
das
pop
dec
je
adc
and
sub
mov
xchg
push
pop
fldt
test
sbb
sahf
cmp
jb
sahf
add
int3
jle
vrcpss
rolb
dec
test
aad
lcall
jge,pt
imul
stos
fs
add
test
cmp
in
mov
dec
fsubl
mov
mov
cwtl
iret
dec
lock
pop
loope
sub
jo
aam
mov
cmp
inc
xchg
add
xchg
negl
mov
inc
clc
push
cs
push
repnz
add
icebp
loop
bound
sbb
push
mov
add
sub
adc
sarb
push
mov
cmp
mov
xor
icebp
outsl
add
jae
mov
jno
fdivs
and
call
add
ss
insb
jnp
ljmp
divb
das
stc
ret
sbb
pop
js
sbb
pop
repz
das
lods
clc
mov
jno
sub
gs
hlt
jnp
pop
cmp
cltd
cwtl
adc
jbe
adc
sahf
add
je
test
lret
arpl
pop
mov
jl
add
push
jb
push
xchg
or
aam
sub
push
shll
inc
shlb
movsl
sub
popf
inc
sub
mov
mov
inc
or
in
push
pop
pop
test
fwait
xchg
in
xor
repz
mov
xchg
ja
push
subb
fsubrs
inc
sahf
mov
and
gs
sbb
sbbb
inc
mov
out
or
cs
outsb
jp
addr16
mov
mov
out
mov
sub
test
add
pop
pop
inc
push
lcall
push
jb
in
xchg
cmp
xlat
cltd
lret
ljmp
popf
ss
jl
idivb
mov
mov
je
mov
mov
dec
loopne
sub
loopne
ficomps
pop
data16
jne
mov
pop
rol
repz
fcompp
addr16
push
jno
insb
mov
mov
push
mov
add
jl
mov
xor
adc
xor
sub
inc
aaa
lahf
ret
clc
in
mov
mov
push
loop
out
aas
mov
xor
call
test
cmp
inc
iret
dec
outsl
addr16
in
and
out
jmp
sbb
and
fists
push
xchg
xchg
jge
ficoml
pop
cli
mov
xchg
lcall
ss
jb
std
pop
int
jno
imul
repz
mov
jp
pop
pop
sbb
popa
sbb
rolb
fimuls
stos
ja
mov
sbb
out
cld
bound
mov
inc
mov
lahf
fnstenv
mov
pop
mov
and
jp
xchg
aam
or
jl
sbb
lret
sbb
repnz
inc
add
aad
mov
movsl
arpl
sbb
push
gs
imul
mov
inc
imul
pop
cli
or
push
jb
arpl
pop
out
and
aam
sub
jo
add
ss
jne
pop
arpl
outsb
addl
clc
sbb
cmpsb
xchg
mov
push
outsl
lcall
or
sahf
pop
imul
dec
xchg
fildll
xchg
int
adc
xchg
mov
dec
adc
sbb
insl
or
push
adc
fstp
out
stos
mov
popf
add
inc
pop
jg
add
mov
imul
pop
dec
sti
test
loopne
adc
add
in
pop
inc
int3
cmp
out
pop
xchg
mul
aam
pop
add
roll
xchg
dec
inc
mov
jns,pn
jecxz
aad
or
incl
and
cmp
cmp
decl
pop
xlat
add
cmp
add
adc
pop
in
mov
mov
popf
dec
shl
adc
leave
dec
pop
rclb
jmp
add
gs
inc
jo
cli
add
call
addl
pusha
dec
ficoml
dec
test
jl
test
outsl
and
xchg
lock
push
int3
push
sub
mov
mov
add
xchg
loop
cmp
int
out
adc
xchg
jno
lock
xor
add
jns
jae
inc
sbbl
rolb
inc
call
sub
adc
test
aam
or
insb
sbb
scas
test
sbb
add
mov
and
push
test
jp
push
mov
call
movsl
inc
hlt
lcall
test
repz
addr16
dec
lea
jo
jle
dec
shlb
loop
test
push
daa
lods
adc
jge
div
mov
push
dec
xor
rolb
inc
cmp
xchg
adc
cmp
roll
int
daa
pop
cmp
daa
sbb
inc
jnp
testl
dec
inc
xchg
lods
sbb
and
cltd
mov
mov
rcl
mov
xor
movsb
ja
stos
sub
xor
mov
inc
scas
in
mov
nop
xchg
cwtl
adc
rcr
mov
movsl
movsb
clc
gs
loope
push
mov
mov
xchg
inc
sbb
push
shlb
sub
enter
jl
cmp
repnz
insl
movl
mov
inc
leave
jbe
ret
int
clc
arpl
lods
imul
cltd
adc
jmp
inc
add
sbb
ret
inc
in
orl
inc
ret
push
mov
xchg
xor
aas
jne
negl
push
insl
repnz
sbb
mov
inc
or
lods
ret
pusha
mov
cmp
pop
xlat
repnz
xlat
and
add
dec
adc
jecxz
fs
pop
dec
mov
and
test
arpl
popf
add
and
mov
fcomps
dec
in
push
insl
dec
sbb
or
test
xchg
cld
cmp
dec
arpl
add
lcall
aaa
incb
or
adc
jg
jmp
in
fcmovbe
bound
fldenv
xor
dec
lods
fwait
ret
mov
nop
xchg
mov
stc
sbb
cmp
sahf
daa
repnz
cwtl
pop
sbb
je
pop
jp
or
jmp
int
std
outsl
ret
xchg
insb
push
push
dec
out
das
mov
jle
inc
mov
fisubrs
daa
jp
imul
and
dec
add
das
dec
sbb
fmull
mov
sub
add
push
mov
aad
push
and
mov
mov
push
cli
pop
sub
jns
push
popa
push
shlb
fs
xchg
xchg
stc
pop
ja
fs
pusha
sarl
lret
cmc
imul
sbb
and
or
mov
xchg
cltd
cld
jmp
sbb
out
mov
mov
xor
mov
mov
mov
sbb
mov
or
mov
mov
psrld
xchg
fldl2t
mov
xor
insl
push
rorb
xor
popa
jge
outsl
dec
movsl
xchg
push
in
sub
out
push
and
sub
loope
out
data16
pop
test
rol
xor
xor
sti
sti
nop
test
lds
outsb
sub
ljmp
out
sbb
inc
mov
into
nop
fcomip
and
dec
loope
test
int3
push
sub
je
sub
test
fstpl
sub
push
loopne
jge
loope
mov
lock
mov
inc
and
pushf
mov
cmp
out
movsl
cmp
mov
lods
sbb
sbb
outsb
dec
lret
out
mov
aaa
mov
arpl
sarb
rcr
js
mov
jmp
int3
jae
xchg
xchg
cwtl
outsl
in
movsl
push
arpl
arpl
outsl
push
and
lea
pop
sbb
fidivs
push
xchg
push
and
mov
aam
dec
repnz
clc
mov
enter
fidivl
data16
cltd
push
inc
cwtl
inc
pop
pop
aaa
in
jle
mov
aam
jmp
divb
lds
dec
and
adc
or
mov
jns
or
loopne
arpl
lret
movsb
ret
pusha
in
jno
js
sbb
mov
out
in
cmc
or
cmp
repz
outsb
shrb
cs
pop
cltd
out
push
fisubrs
dec
xchg
stc
xchg
out
pop
and
cli
pop
push
clc
push
sub
mov
clc
pop
jo
push
xor
shlb
mov
push
jg
sbb
pop
dec
insb
in
xchg
inc
cmp
xchg
mov
xchg
xchg
fidivs
cmp
mov
pop
ljmp
and
fsts
cld
mov
xchg
inc
push
jnp
out
mov
aam
dec
stc
aas
js
add
xor
mov
jge
push
lahf
insl
or
cmpb
out
fwait
jae
xchg
rcrl
cmpsl
ja
cmpsl
cld
mov
mov
xor
xchg
ja
and
mov
pop
pop
xchg
loope
and
mov
push
pop
cmp
jne
lods
out
insb
sub
and
cmp
aas
jb
inc
into
jge
int3
fucomi
jno
sbb
mov
int3
sub
push
xor
div
sbb
jns
std
dec
jo
add
push
outsb
inc
fs
mov
sbb
mov
or
test
dec
push
negb
mov
or
gs
mov
in
cltd
repnz
mov
sub
into
xchg
mov
push
out
dec
dec
movsb
fnstsw
xchg
pop
jle
ljmp
fldenv
sbb
push
adc
insb
pop
roll
repnz
or
lahf
cli
push
and
dec
adc
aaa
jmp
or
jns
lock
push
xchg
dec
jp
mov
je
jle
mov
add
push
xchg
push
fdiv
or
sbbb
and
or
enter
jecxz
out
flds
iret
and
inc
mov
pop
jp
mov
push
mov
or
in
dec
dec
iret
jg
roll
and
movsl
scas
sub
fdivp
push
rolb
out
lcall
mov
mov
pop
imul
mov
ja
lcall
je
fdivrl
add
and
lret
mov
xchg
or
push
inc
sub
cli
add
jns
fisubrs
ficoml
lock
fnstsw
and
cmp
fdivr
pusha
inc
pop
loope
pop
js
fldln2
test
mov
shrl
aad
fstpt
stos
mov
test
pusha
xor
push
inc
stc
mov
adc
cmpsl
xor
test
lret
push
xchg
or
xor
jmp
inc
or
xor
jge
in
xchg
jae
push
int3
xchg
es
xlat
ljmp
pop
jnp
lahf
xor
dec
sbb
cmp
fldenv
sbb
call
add
add
rcll
mull
mov
popf
sub
jo
in
pusha
ret
push
mov
imul
in
imull
push
movsl
cmp
icebp
cmc
mov
in
into
fsubrs
cli
les
mov
adc
test
xchg
dec
mov
js
or
mov
popa
lods
gs
shlb
jne
cmpsl
fcmovne
xchg
cld
sbb
cmp
sbb
push
or
sbb
rolb
insl
out
mov
mov
out
sub
push
mov
aad
push
test
in
sbb
jle
push
fnsave
mov
xchg
cmp
mov
iret
es
out
push
push
js
aam
mov
out
push
or
jbe
scas
bound
add
leave
lret
jmp
add
cwtl
fwait
cmp
and
push
xchg
xchg
push
jl
jle
test
pop
push
push
in
into
lods
cmp
out
outsb
out
mov
loop
fiadds
push
jge
push
inc
mov
faddl
repz
mov
cmp
shll
mov
lret
iret
dec
inc
jl
data16
in
inc
repz
push
mov
cmp
cli
add
adc
rol
mov
xchg
int3
icebp
into
cmp
vprotq
adc
dec
pop
xor
mov
rorb
xchg
insb
fstps
inc
in
mov
push
test
add
insl
xchg
jo
inc
and
inc
test
mov
sbb
jmp
cli
jno
add
and
stos
mov
pop
leave
int3
xchg
aaa
outsb
fwait
cmp
ret
cld
movsl
pop
imul
and
je
popf
ret
cmp
add
outsb
mov
cmp
daa
cwtl
andl
and
rcll
add
mov
negb
add
inc
test
mov
cmp
xchg
aaa
xor
add
addr16
arpl
mov
dec
pop
xchg
xchg
loopne
shr
adc
jecxz
sbbl
xchg
adc
divl
cmp
icebp
sub
push
adc
rcl
imul
jns
fbld
lret
mov
add
daa
jae
mov
aad
or
idivl
add
pop
fisubs
inc
negl
shrb
scas
adc
or
xchg
dec
push
aaa
pop
popa
sub
mov
aaa
cmp
popf
cmp
jns
notl
mov
lret
call
jne
mov
je
pop
stos
inc
xor
cmp
inc
jb
jno
mov
jmp
or
and
push
imul
ret
sarb
xor
xor
out
inc
mov
inc
and
lret
lods
push
enter
inc
push
cltd
loop
xor
cmc
push
ss
adc
adc
idiv
dec
leave
inc
daa
lods
or
jbe
movsb
sti
lock
adc
loope
and
pop
mov
ret
inc
and
aam
pop
cmp
sub
dec
lods
lea
lods
lea
rcll
jae
aas
jno
gs
in
aas
stos
jmp
movsb
mov
adc
pop
mov
adc
icebp
ljmp
hlt
out
and
mov
testb
hlt
mov
jb
popf
push
pop
mov
cmpl
cmp
push
aaa
aaa
xchg
das
lea
popa
pop
popf
shl
gs
dec
in
xchg
dec
jns
test
lret
sahf
popa
xchg
jne
push
pop
bnd
test
mov
loope
aas
jge
imul
subb
mov
scas
je
cwtl
mov
insb
mov
shrl
mov
mov
xor
add
test
shl
outsl
jle
mov
das
daa
imul
pop
rclb
pushf
insb
rcr
subb
sbb
pop
imull
xor
invd
lret
cs
scas
xor
flds
test
and
sub
sbb
cmp
stos
repz
or
repnz
aas
cmp
sbb
xchg
dec
sbb
out
jns
cmp
adc
loopne
dec
mov
adc
push
and
mov
sbbl
int
and
xchg
hlt
arpl
pop
lods
andb
xor
cmpsl
push
sbb
lahf
lcall
ljmp
sub
mov
popa
mov
xor
loop
mov
xchg
jns
pop
aaa
cmp
sbb
popa
pusha
jns
fwait
mov
mov
int3
popl
popa
and
scas
mov
fists
mov
js
push
mov
ds
sbb
push
loopne
psubb
hlt
add
call
jns
lock
mov
adc
sbb
and
pop
dec
scas
outsb
pop
pushl
mov
and
mov
leave
filds
jbe
jo
push
call
in
leave
and
jmp
mov
mov
mov
dec
fildll
insl
test
xor
nop
dec
mov
lods
es
popf
cmp
andb
jg
jmp
incl
mov
inc
movsl
pop
sub
dec
xchg
mov
sbb
mov
cli
sti
test
sub
cmp
orl
xchg
popa
push
lds
into
mov
lods
leave
sub
push
pop
pop
lahf
inc
icebp
das
imul
adc
out
lock
out
roll
dec
iret
aas
call
adc
fidivl
insb
sub
jmp
jecxz
sbb
test
lods
sti
dec
lret
jb
clc
xlat
mov
fldcw
or
enter
pop
sarl
mov
mov
enter
push
xchg
jns
add
lock
mov
inc
jmp
iret
inc
imul
loope
sbb
jge
cmc
cmpsb
xor
inc
push
stos
jle
test
jmp
sarl
ljmp
or
mov
cmpl
inc
into
adc
mov
enter
pop
es
loope
mov
pop
mov
mov
dec
mov
addr16
in
clc
and
test
pop
xorb
or
movsb
aaa
sub
add
stos
cmp
push
push
adc
jns
addb
add
cmp
in
xor
sti
jge
das
mov
mov
xchg
in
stos
lret
das
adc
pop
dec
sub
insl
jnp
loopne
out
negb
mov
push
xor
sub
add
jnp
dec
daa
push
sti
sub
and
pop
adc
xchg
add
in
das
movl
mov
data16
rclb
inc
mov
cmp
jle
aaa
pop
mov
clc
dec
repnz
ret
mov
jne
dec
jns
adc
or
fcoms
pop
cmp
xchg
shlb
ss
pop
push
scas
push
movsl
movsb
pop
pop
ja
sbb
mov
mov
lods
jmp
bnd
sub
jge
mov
lahf
out
cld
inc
aaa
outsl
add
rolb
jg
lds
dec
mov
or
mov
jmp
sti
pop
sbb
fnstcw
pop
pop
int
out
pop
jle
ja
adc
dec
jae
sti
jp
movsb
push
mov
inc
or
leave
in
call
je
inc
inc
add
dec
add
jno
hlt
jl
pop
mov
cmp
loopne
in
push
jg
adc
sub
mov
sahf
ljmp
cs
and
cs
jae
lahf
decl
divb
mov
jecxz
mov
imul
les
and
faddl
dec
insb
sbbb
pop
sbb
shl
or
adcl
dec
push
imul
push
lcall
pop
xor
sbb
add
stos
dec
dec
mov
test
or
inc
adc
sti
push
test
jns
data16
lret
add
incl
jo
and
cmp
inc
inc
shll
outsb
int3
jmp
xor
jp
dec
push
inc
lods
add
mov
dec
inc
mov
xor
add
xchg
push
mov
cmp
and
loope
aas
stos
fsubrl
enter
sub
or
das
in
xchg
cmp
dec
mov
jb
xchg
mov
mov
iret
mov
hlt
xor
sub
and
shlb
popa
and
imul
cmp
mov
sub
lret
add
sarb
add
push
mov
div
into
xlat
cmovb
loop
out
aam
push
loopne
sub
cmpsl
loope
jae
push
jp
in
or
mov
xor
cmpsl
mov
pop
insl
orl
insl
lret
test
mov
clc
stos
adc
andl
pushf
sub
or
imul
aam
mov
popa
pop
ret
or
jbe
push
aad
gs
adc
loopne
xor
insl
pop
sub
ds
aas
push
adc
and
mov
shrl
movsl
jns
out
js
negb
ret
jge
cmp
jp
movsb
and
divl
dec
int3
shlb
dec
push
stc
lods
jne
popf
inc
out
cmp
inc
lea
lods
pop
imul
fdivr
xchg
nop
mov
pusha
sbb
sti
lods
cld
cwtl
iret
loop
fidivrl
movsb
mov
dec
test
and
push
mov
les
push
sbb
cmpsb
enter
ja
loope
scas
ret
pop
cmp
xor
addr16
push
inc
loope
mov
pop
xor
or
mov
je
lea
mov
sub
movl
mov
leave
add
lret
movl
lods
dec
insl
lock
cmc
test
fs
int3
mov
test
mov
lret
popf
fiaddl
dec
sub
mov
outsb
int3
lret
std
mov
ss
cmpsb
mov
jb
ret
dec
mov
andl
cld
pop
insl
lcall
xchg
xor
icebp
adc
add
jge
add
dec
xchg
xchg
push
sarb
sahf
jmp
rdmsr
int3
mov
mov
sti
inc
fidivrs
sbb
lret
add
add
in
aam
sub
push
and
lahf
je
jmp
or
inc
sub
rcrb
lcall
test
je
fcomip
and
sbb
dec
aaa
js
jbe
test
out
sub
cmp
push
clc
sbb
inc
jecxz
loopne
fdivr
cli
and
into
or
xor
addr16
imul
sbb
push
roll
dec
lahf
shll
in
scas
scas
fmuls
cmpb
mov
pushf
jge
jmp
sub
pusha
pushl
fidivrl
and
cmp
push
out
push
xor
rolb
test
rcl
and
lds
out
int3
pop
pop
xchg
pop
mov
outsl
sub
shll
data16
fcom
xor
icebp
add
std
in
jnp
jae
movsb
cmpsb
movsl
mov
push
push
mov
rorb
daa
data16
jle
pop
jl
shrl
dec
shlb
sub
mov
adc
das
arpl
sbb
iret
xor
into
pop
test
int
hlt
mov
ja
stos
sub
cmp
xor
enter
into
imul
repz
mov
enter
mov
cmp
sub
ret
cwtl
pop
cltd
insl
in
jge
cltd
fdivrs
les
sub
mov
cmp
and
jle
out
mov
ret
mov
and
xchg
lahf
fisubl
jbe
adc
mov
xchg
xlat
dec
orb
and
clc
pop
cli
add
insb
cmpsb
rcr
rep
in
adc
xor
test
sub
cwtl
outsb
jae
sub
enter
js
xlat
cmpsb
lock
jmp
inc
and
jbe
mov
sarb
jo
repnz
pop
imul
pusha
shll
lahf
xor
and
repz
pushf
jnp
xor
mov
in
pop
insb
mov
add
dec
fnstcw
sbb
inc
mov
sbb
sub
outsl
arpl
xchg
jne
mov
rolb
das
mov
js
xor
andb
adc
pop
gs
xchg
fisttps
push
pusha
and
lock
add
dec
mov
sbb
jb
pop
xchg
rcl
cs
mov
aam
pop
ljmp
xlat
fdivs
out
xor
stos
push
add
nop
inc
mov
leave
leave
mov
rolb
aaa
pmulhuw
push
xchg
fwait
jp
dec
cli
arpl
aam
jno
mov
push
add
jge
push
leave
mov
je
cmc
out
std
popf
shlb
jae
aam
incl
js
std
fstp
xor
pop
and
dec
jmp
cmp
and
dec
inc
pop
or
xor
xor
mov
in
pop
fcomps
cld
jae
add
sub
adc
push
mov
inc
sbbl
fnsave
add
cltd
sub
bound
mov
in
sbb
xor
outsb
iret
push
cmpsb
outsl
in
daa
hlt
dec
push
jbe
or
sahf
scas
or
inc
ret
insb
cltd
mov
pop
adc
xor
movb
xor
cltd
xor
aad
jns
xchg
add
xor
adc
dec
mov
sub
push
sbb
jb
sbb
mov
aam
pusha
xor
test
pop
ljmp
pop
les
mov
cli
push
dec
sub
cmp
faddp
sbb
inc
fbstp
cmpl
dec
fcomi
insl
ss
pop
loopne
sub
aas
mov
lea
movsl
push
push
jl
test
adc
xor
mov
jb
pop
das
cmp
and
cwtl
call
sarl
adc
test
cmp
or
fisubrs
push
outsb
pop
stos
or
lock
or
mov
lcall
test
cmpsb
cld
bound
cmp
fildl
and
lods
xchg
outsl
mov
add
xchg
das
mov
stos
cmp
test
push
and
cltd
sbb
jnp
and
hlt
mov
mov
mov
inc
mov
pop
push
mov
aas
fdivr
popa
stos
and
fwait
mov
push
aas
push
test
dec
flds
mov
sti
lahf
mov
cld
setl
dec
scas
jecxz
jbe
sbb
sbb
sbb
out
fwait
cmpsb
dec
mov
mov
mov
sahf
mov
stos
idiv
mov
js
add
stos
divl
xchg
xchg
popf
and
aad
fstpt
hlt
cld
ret
mov
iret
mov
jmp
mov
jle
call
pop
imul
test
shrb
sbb
lret
inc
push
mov
mov
dec
cwtl
or
pop
rclb
pop
jp
adc
sub
hlt
hlt
mov
aas
jnp
and
imul
adc
js
cmp
xchg
daa
sbb
cwtl
add
sub
leave
jecxz
imul
je
sarb
dec
jle
pushf
les
sbb
clc
xchg
fwait
shrl
icebp
lods
pop
inc
icebp
jp
orl
rorb
sarb
pop
addl
sub
sub
xchg
xchg
push
mov
cwtl
dec
mov
adc
add
rcll
or
push
jne
shll
xchg
js
ljmp
clc
jae
stos
pop
arpl
aaa
lahf
std
push
dec
jns
insb
ja
clc
sbb
sbb
and
dec
pushl
xor
add
ja
push
adc
imul
sahf
cld
repz
leave
jo
mov
lods
pop
xor
in
cmp
push
xorl
jge
jg
fwait
fwait
imul
mulb
push
arpl
fadd
adc
xor
mov
xchg
popl
push
sub
imulb
adc
push
push
sahf
mov
mov
cmpsb
sbb
jmp
cmc
mov
dec
in
decb
mov
cwtl
pop
push
outsl
lods
cwtl
arpl
or
test
cmp
mov
movl
xchg
dec
mov
cmp
into
xchg
sub
sub
jno
pop
xor
inc
sahf
pop
inc
push
call
pop
mov
xchg
dec
es
les
pop
fisubl
int
pusha
inc
imul
xor
xor
or
xlat
icebp
loop
loop
rcl
es
insb
neg
ss
inc
cmp
inc
pop
mov
gs
int
es
insl
shlb
xchg
inc
inc
sbb
fcoms
mov
mov
dec
gs
cmpsb
rcll
cs
xchg
idivl
insl
stc
mov
jb
mov
jo
mov
in
cld
lods
mov
xlat
cmp
dec
xlat
ret
and
dec
ds
mov
iret
fcomps
mov
and
jno
sbb
inc
andb
lods
jg
jge
les
cmc
jbe
cmp
mov
pop
popa
xchg
jmp
je
aad
xor
in
pop
jb
jns
dec
inc
mov
loop
jge
jmp
fdivrs
sbb
pushf
loop
orb
sbb
pop
daa
pop
sti
imul
inc
mov
in
ror
repnz
jp
int3
shrb
sub
sahf
stos
cld
sbb
push
and
cmp
or
ljmp
adc
jp
imul
add
xchg
mov
stos
mov
mov
dec
call
fs
test
cmpl
xor
sub
out
cld
enter
aam
inc
sub
inc
cmp
loopne
xor
aas
int
pop
jecxz
mov
cli
add
sub
fs
fnstcw
bt
cmp
lret
cmp
lcall
scas
mov
mov
push
push
mov
push
lods
or
inc
out
daa
lret
cltd
mov
dec
mov
int
sub
sub
xchg
dec
and
test
cmp
stos
fidivs
pop
xlat
push
aas
aam
addl
mov
jbe
outsb
ret
insb
mov
frstor
fwait
vmovlps
out
test
push
das
loop
push
popf
mov
inc
inc
mov
mov
mov
dec
andb
into
jbe
mov
pop
xchg
adc
and
mov
addr16
xlat
test
daa
pop
push
inc
inc
xor
scas
jp
dec
les
adc
in
jge
jns
mov
test
pop
xchg
add
and
adc
loope
cld
bound
mov
rcll
xchg
mov
aad
add
call
mov
je
icebp
sub
stos
sbb
neg
xor
sti
pusha
iret
add
push
cltd
pop
mov
or
cwtl
pop
idivl
mov
ljmp
ljmp
push
ret
out
mov
xor
push
mov
roll
mov
ds
add
arpl
lret
daa
inc
jge
or
into
adc
hlt
mov
mov
mov
or
popf
pushfw
mov
cs
lds
cmp
test
cmc
ret
sbb
hlt
es
jl
subl
pop
jmp
sub
mov
fwait
ds
push
outsl
popf
movsb
into
sub
sub
loope
ja
and
out
mov
mov
sbb
cmp
popl
repz
repz
adc
sub
lret
mov
sbb
mov
rol
adc
jg
cmc
aas
imul
sahf
xor
inc
out
ja
stos
add
cltd
inc
call
add
mov
pop
xchg
push
cli
cmp
ret
mov
xchg
inc
in
add
test
cmp
push
push
push
lds
dec
int
ret
sbb
add
or
lods
mov
fidivl
pop
and
inc
addr16
test
pusha
sahf
push
or
xchg
jno
and
insb
std
aas
pop
popl
movsl
cld
dec
icebp
in
cltd
sub
mov
xor
cmp
xorb
or
movsb
sub
stos
adc
std
pminsw
cmp
sahf
rcll
in
call
cmp
inc
inc
cld
popa
inc
adc
dec
mov
pop
jne
sub
in
xchg
inc
roll
andl
rclb
iret
jae
scas
lahf
mov
mov
xlat
ror
and
sti
outsl
push
imul
sub
pusha
inc
in
or
mov
inc
pop
push
popf
popf
rclb
cs
xchg
xchg
and
pushf
daa
repnz
push
sti
hlt
fbstp
imul
cmpsl
adc
ret
scas
mov
and
add
mov
mov
mov
imul
out
xchg
movsb
xchg
mov
pop
and
sbb
dec
sub
mov
hlt
jle
xchg
xor
mov
repz
je
jae
inc
cmc
sbb
mull
popf
dec
or
ret
cld
das
lahf
cmp
loope
jae
cli
add
and
or
lret
iret
and
sbbl
fcmovnbe
aaa
mov
repz
roll
adc
mov
ror
push
and
sahf
push
hlt
push
mov
xchg
add
mov
push
xchg
js
fdivr
aam
repnz
cmp
mov
and
shlb
aaa
mov
and
imul
fadd
cmp
out
pop
fldl
imul
adc
stc
xchg
bound
jns
xor
mov
add
sbb
or
rcll
aas
cli
and
push
push
sub
xor
push
adc
aam
pusha
mov
jle
xlat
mov
outsl
adc
in
bound
hlt
dec
jmp
jnp
and
lcall
jp
dec
jo
xor
or
jg
dec
popa
sti
adc
je
sbb
ret
dec
sub
push
push
xchg
mov
jo
xor
xchg
stos
xchg
int3
cmp
ljmp
mov
inc
test
mov
add
sbb
fcomps
lea
or
test
fldenv
sbb
inc
jns
cmc
std
rcll
jnp
sahf
into
je
push
sbb
sub
inc
jp
lods
jae
inc
pop
pavgw
arpl
cmp
cmc
jbe
cmpsl
mov
mov
rorl
pop
filds
in
stos
cmp
lahf
sub
popf
out
xchg
jecxz
xchg
pop
inc
pop
mov
or
jns
xor
jge
pop
inc
stos
shl
out
or
imul
popf
je
cltd
das
jge
sbb
and
test
shll
mov
xor
ss
das
test
inc
or
ficoms
mov
dec
cwtl
sti
xchg
cld
pushl
loope
and
imul
aaa
int3
mov
push
push
push
rcrb
js
cmp
dec
xchg
loop
addr16
out
xlat
push
and
jnp
daa
pop
jl
cwtl
push
aas
cld
push
sub
mov
shlb
lret
dec
loope
into
out
add
dec
push
ret
push
mov
aaa
sbb
cmpb
mov
sbb
cwtl
addr16
ljmp
aaa
sbbb
dec
daa
or
mov
jns
cld
push
jl
mov
mov
cmp
dec
leave
clc
in
insb
ja
add
pop
xchg
mov
or
fldt
sbb
lcall
jg
jle
imul
xor
leave
shl
jl
mulb
ret
dec
dec
jnp
insl
sahf
xor
pop
pop
dec
cld
ret
loope
add
lods
sub
cmp
into
in
push
and
push
add
ror
mov
es
in
lods
movsl
mov
clc
adc
daa
mov
repz
mov
push
cmpl
push
sbbl
mov
mov
nop
fmulp
popl
out
and
das
fsubr
adc
and
jo
call
push
jmp
cmp
push
ret
xchg
or
rclb
xlat
or
clc
jge
pop
insb
int
bnd
pop
dec
flds
iret
into
lods
adcl
inc
adc
addr16
xor
lahf
pop
andl
or
das
push
push
xchg
and
add
sbb
std
sahf
rcll
cmp
mov
jle
pushf
addr16
pop
outsb
sbb
gs
jl
xchg
scas
mov
mov
xchg
xor
rcr
xor
hlt
add
in
add
ja
push
and
inc
jne
sbb
dec
std
mov
int3
cwtl
xor
mov
insb
rorl
jp
mov
jle
jmp
popf
pop
andl
in
xchg
fiadds
cmp
dec
cmp
enter
out
pop
jb
test
mov
jp
sbb
lret
movsl
mov
sub
push
sbb
das
push
jne
inc
cld
push
jae
sahf
stos
adc
jo
mov
or
cltd
rolb
push
xchg
and
xchg
adc
clc
into
mov
or
add
in
push
sub
mov
rol
insl
push
pop
mov
cmpsl
jg
aaa
rorb
sbb
mov
jnp
cmp
pop
fsts
lock
xorl
cli
inc
imul
loope
sbb
imul
inc
jp
test
cmp
mov
stos
dec
cs
push
add
fsubl
and
rorl
cli
pop
aas
pushf
out
dec
lret
xlat
aas
outsl
stos
ss
mov
jge
xor
mov
adc
insb
cltd
xchg
add
pop
lods
aas
lret
jbe
shrl
adc
fisttps
pop
lock
pop
iret
cmp
or
popa
clc
iret
rcll
jp
cli
lret
pop
push
pop
popa
xorb
dec
push
mov
xor
jg
test
popf
loop
fisttpll
xchg
push
data16
mov
lods
ja
std
or
pop
pop
addb
push
xchg
int3
mov
push
mov
aaa
adc
dec
or
sub
aas
aad
add
inc
mov
sub
int3
int
mov
bound
pop
mov
lods
in
jge
test
addr16
jno
add
xor
aas
test
push
psllw
aaa
or
int3
ljmp
imul
icebp
sub
lahf
test
stc
adc
cmp
xor
mov
in
test
aaa
out
pop
mov
push
jns
push
out
ret
imul
cld
mov
mov
push
sarb
int
xchg
inc
movnti
outsb
add
inc
sub
jbe
ja
push
jge
outsb
xor
rcrb
lret
jle
fs
fdiv
hlt
testb
and
pusha
jno
test
in
fistps
data16
aam
mov
lcall
push
mov
adc
insl
dec
sub
inc
mov
mov
jl
mov
fstpt
add
int3
pusha
fldenv
filds
pop
lock
mov
sahf
rorb
je
bound
leave
add
adc
in
mov
popf
js
ret
dec
jge
dec
push
js
jne
adc
ficompl
fstpt
adc
adcl
pop
stc
ja
insb
mov
xchg
mov
sub
sub
push
pop
mov
imul
lahf
or
lea
xchg
xorb
inc
mov
decl
jno
ds
mov
dec
dec
or
inc
sub
aam
pusha
fstl
mov
jnp
inc
stos
int3
ret
pushf
jge
scas
push
repnz
jecxz
jo
push
pop
pop
pop
xor
sarl
or
push
cmpsl
dec
dec
pop
lods
out
mov
and
cld
sbb
cmp
sbb
jle
loopne
sti
mov
bound
inc
sub
jbe
loope
movsb
jbe
gs
jnp
xlat
sub
mov
xchg
and
and
fcoms
stos
fnstsw
fistpl
xorl
jp
into
ss
and
cmc
psubsw
dec
rcl
loopne
pop
push
dec
jne
mov
adc
mov
mov
rcl
aad
xor
inc
rcll
scas
sub
sbb
ja
adc
sub
sub
dec
mov
mov
lods
dec
in
dec
cmp
cmc
cmc
int3
mul
icebp
stos
mov
jb
fbld
jno
push
sarb
icebp
and
pop
loopne
lea
addr16
dec
cld
mov
xor
cmpsl
adc
lret
xor
pushf
add
lret
in
inc
mov
xchg
xchg
lea
dec
inc
test
cmp
xchg
push
lea
inc
pop
pop
jns
jns
xor
test
mov
hlt
cmp
test
in
pop
sbb
scas
xchg
test
mov
pop
in
test
mov
push
ss
test
arpl
loopne
js
or
mov
xchg
jb
scas
mov
sub
inc
out
push
sbb
sbb
cld
fwait
jp
mov
and
inc
xchg
and
mov
and
inc
lcall
repnz
aad
adc
jmp
jae
popf
mov
sbb
pop
mov
push
dec
cld
lret
in
adc
mov
jmp
cmc
jo
int
enter
jno
xlat
bound
inc
in
js
bound
popf
push
cmp
outsb
dec
add
loopne
xchg
aam
jno
mov
ja
pop
jbe
mov
sarl
push
adc
jmp
cltd
dec
adc
dec
dec
enter
vmaxps
add
jl
cmpsl
adc
insl
int
xor
cltd
sbb
adc
arpl
mov
outsl
xchg
enter
cltd
fs
jne
dec
or
mov
mov
leave
jecxz
pop
lea
notl
insl
ss
cli
test
in
jmp
rcr
inc
sbb
and
test
in
lcall
movsb
cwtl
jns
xor
xchg
jbe
mov
cmp
push
push
cmp
jp
adc
mov
insl
mov
loope
xor
es
clc
cltd
ljmp
popf
aad
jbe
test
mov
sbb
scas
and
push
subb
push
mov
xor
xor
ja
xorb
jno
or
rorl
popa
cmp
pushf
ss
cmp
jl
cmp
test
and
xchg
xor
mov
cmp
out
lret
stos
shll
xlat
adc
and
call
jb
xchg
cltd
lret
or
jg
cmp
push
mov
sbb
pop
mov
or
mov
pop
ds
add
into
jno
loopne
dec
pop
sbb
loopne
sarb
cltd
aam
inc
fwait
icebp
mov
fcoml
jno
push
sub
in
movsb
pop
mov
inc
cmc
lret
xchg
sbb
push
and
into
fwait
fs
idivl
dec
imul
inc
mov
xchg
gs
jo
add
mov
inc
jne
cmpsb
ds
inc
cmp
enter
lahf
xor
inc
cs
es
arpl
cmc
icebp
lds
jp
lea
xchg
bound
mov
mov
push
and
int3
cld
out
jl
mov
loopne
adc
dec
cmp
push
loope
mov
mov
sahf
pop
jb
or
lds
ja
cltd
sbb
sub
loopne
add
test
fnsave
pusha
pop
xchg
pop
and
jbe
das
sub
jp
mov
xchg
adc
mov
jg
shll
push
sbb
insl
scas
add
mov
or
push
push
test
ds
cmc
ss
mov
jb
xor
pop
leave
out
and
hlt
xorb
mov
pusha
cld
mov
cmp
sbb
jae
icebp
add
push
jg
sbbl
cld
add
xor
stos
out
mov
and
shrl
clc
daa
inc
cmp
xlat
sbb
aam
xchg
and
sbb
shl
and
sti
xlat
call
push
inc
jo
enter
out
add
hlt
popa
sahf
call
inc
sarb
ja
xchg
jne
dec
fisubrl
and
mov
sub
js
cmp
daa
mov
fldcw
icebp
jne
pop
sbb
mov
enter
sbb
stos
jne
xlat
loop
out
add
in
fimuls
ss
mov
mov
popf
sbb
outsl
jns
jl
cmc
lods
sub
mov
mov
insl
or
mov
loopne
mov
adc
in
cltd
loopne
fiaddl
dec
xor
inc
aam
adcl
jmp
mov
in
sub
sbb
dec
xorl
xchg
fmull
hlt
mov
mov
inc
stc
pop
imul
adc
xor
or
bound
outsl
adcb
aad
adc
orb
jno
sbb
mov
leave
int
mov
xchg
sbb
or
jno
pop
call
pop
xchg
sub
cli
lret
xchg
lcall
js
mov
subb
stos
mov
cmp
pop
adc
xchg
mov
insb
push
jb
test
inc
adc
test
cld
into
or
pop
push
cmp
push
fcom
cmp
shr
nop
ja
pop
dec
lahf
adc
cmc
cmp
mov
lcall
dec
cmp
ficomps
jns
movsb
fwait
cs
lock
cmp
into
and
aas
xchg
xchg
push
cmp
pop
mov
sar
loop
hlt
jp
mov
pushf
jge
push
sub
mov
shlb
mov
int3
call
mov
fwait
out
sbb
adc
mov
xchg
imul
in
addb
jne
cmpl
ret
inc
leave
mov
add
lock
les
cmpsb
inc
and
in
fbld
jbe
movsb
mov
or
pop
inc
mov
scas
dec
adc
shl
fadds
sbb
push
pop
repz
or
repz
insb
test
pop
inc
loop
icebp
decb
xor
cmpsb
push
pusha
mov
jbe
or
xor
and
xlat
or
call
mov
ja
loope
mov
fldt
stc
or
xchg
push
hlt
dec
punpckldq
dec
std
orl
cmc
pop
in
mov
test
jge
jb
insb
xchg
jo
mov
shrb
sbb
mov
jmp
lods
shll
pop
ret
test
loopne
add
std
sbb
sti
test
mov
jnp
dec
or
leave
lods
pop
bound
xor
mov
jl
mov
sub
aaa
sub
pop
jge
mov
fnstcw
jp
notb
scas
sahf
mov
lea
adc
arpl
icebp
loop
int
inc
xlat
xor
cmc
xor
movsl
rcr
push
jl
xchg
mov
sub
loope
and
dec
jnp
mov
enter
and
fsts
xrelease
icebp
sub
or
sbb
mov
arpl
xchg
lock
jae
jg
test
push
jp
adc
adc
pop
fdecstp
xchg
sbb
lock
aaa
jne
mov
xor
inc
pop
dec
ret
mov
test
xor
sarb
jnp
jnp
sbbl
jno
cmpsl
mov
lcall
and
push
xchg
std
dec
or
inc
pop
movsb
popf
lds
xchg
movsl
mov
incb
lcall
push
or
addl
in
fists
lret
inc
xlat
movsb
iret
mov
xorl
pop
sub
mov
mov
lahf
adc
stos
pop
outsl
outsb
mov
arpl
push
imull
jecxz
mov
xlat
and
out
and
mov
rorb
dec
sub
addl
push
das
mov
xchg
dec
and
dec
inc
xchg
fsubs
pop
pop
lcall
cmp
rcll
dec
loop
imul
jg
cmp
lea
lcall
or
sahf
mov
loopne
js
sub
jle
jno
shrb
xor
sbb
mov
inc
pop
inc
out
pop
adc
in
push
rcrb
mov
pusha
insl
jp
fistpll
jne
das
in
jp
enter
inc
mov
scas
inc
sti
or
jnp
mov
rcr
xchg
lds
loop
jne
out
in
lahf
call
adc
sbb
out
or
xchg
mov
shll
aaa
ret
movsl
in
xor
jmp
incb
xor
pop
mov
clc
add
mov
dec
mov
cld
mov
push
and
lret
fdivp
loopne
mov
pop
out
ffree
jecxz
std
inc
out
mov
cmp
jg
mov
movsb
cmp
inc
xchg
sub
xor
jbe
xchg
gs
mov
push
push
aad
mov
je
cmc
into
push
push
push
lods
gs
popa
loope
pop
push
daa
push
xor
mov
pop
mov
mov
insl
add
mov
outsb
cltd
pop
sbb
xor
sub
das
or
and
and
and
and
cld
add
mov
aaa
xor
inc
cli
mov
sub
pop
ret
xor
pop
imul
adc
loope,pn
movsb
cmp
xchg
cli
xchg
sbb
aad
jno
and
frstpm(287
lret
out
sbb
aaa
lea
push
cmpsb
insb
add
cli
stos
popf
dec
outsb
jno
sti
in
iret
dec
lcall
test
cmpps
inc
icebp
adc
pusha
jae
pop
push
fisubl
ljmp
daa
xchg
cmp
cmp
nop
int3
es
out
pop
outsb
or
sbb
movsl
and
cmp
shll
xor
mov
popa
jne
inc
push
movsl
mov
dec
hlt
adc
lds
call
es
std
into
pop
aam
push
pop
push
sbb
mov
xlat
fwait
fwait
push
pop
test
repnz
ds
xor
pop
pusha
dec
xchg
jecxz
stc
scas
adc
sbb
repnz
adcb
imull
out
popf
mov
add
pusha
pop
mov
repz
adc
lret
mov
and
les
cmpsl
jg
xchg
mov
pop
xlat
loopne
mov
xchg
aad
pop
outsb
movsb
pusha
int
or
insl
aaa
in
xchg
repnz
pushf
iret
fiaddl
hlt
pop
mov
push
push
pop
std
push
clc
lea
lods
sbb
into
out
pop
mov
pusha
mov
scas
mov
mov
push
imul
mov
repz
or
mov
out
jo
test
jle
adc
in
jmp
hlt
xchg
xchg
int
push
push
cs
aam
ret
pop
mov
dec
xchg
cmp
cmpsl
cmp
adc
fsubrp
mov
sbb
push
sahf
jbe
outsb
lods
xor
xor
out
je
xor
jne
imul
add
fs
outsl
dec
push
orl
repz
outsb
outsb
fwait
out
pavgb
push
sarl
pushf
lret
mov
xor
or
inc
add
dec
subl
shrb
arpl
popa
test
inc
fs
adc
gs
adcl
cmp
sbb
daa
insl
push
test
aas
jnp
enter
int
jmp
pop
xlat
push
push
mov
jg
mov
add
insb
ja
sub
inc
loopne
out
pop
mov
ret
hlt
popf
xchg
jle
cmp
shrl
les
pop
mov
es
popa
inc
xchg
cmpsb
inc
adcl
sub
icebp
jg
push
shrb
cmp
ja
xchg
fdivs
mov
aad
sbbb
std
sub
fwait
mov
xchg
cmc
ret
xor
sbb
inc
pop
sbb
mov
jns
clc
xlat
and
pushl
icebp
leave
cwtl
aas
pusha
push
push
xchg
xchg
nop
cmp
push
pop
out
sbb
ja
out
xchg
ucomiss
pusha
bound
inc
not
int3
or
mov
xchg
das
sbb
movsl
sbb
aaa
std
pop
sbbl
jg
sbb
call
incl
sahf
scas
mov
repnz
test
add
jp
cmp
ljmp
push
xor
mov
jle
sub
pushf
insb
in
loope
stc
rcrl
cltd
xor
mov
pop
repnz
jge
sub
std
mov
imul
aas
hlt
dec
lahf
iret
sbb
push
inc
je
std
imul
loope
jnp
out
ljmp
sar
iret
lods
out
loope
ret
out
icebp
in
push
mov
add
ret
int3
js
push
xchg
ds
sahf
dec
scas
test
lahf
mov
call
xlat
and
cmc
rolb
mov
cmp
in
sbb
sti
lods
into
pusha
mov
stc
dec
and
and
push
mov
je
push
iret
pusha
sub
pop
out
adc
js
xchg
inc
sub
jb
sbb
aaa
mov
inc
in
in
push
stos
pop
fistps
sub
ret
popf
and
or
cmp
outsb
aad
out
push
sahf
test
cs
out
iret
int
xchg
jns
fsubrl
je
jp
flds
xor
mov
push
dec
cmp
ja
mov
push
into
in
sub
cmpsl
adc
sub
lea
jecxz
addb
sbb
data16
out
pop
and
dec
xchg
sbb
fidivs
dec
dec
int
test
mov
test
lcall
xchg
out
mov
adc
pop
loope
fisubrs
xor
xchg
cmpsb
outsb
dec
outsl
fdiv
mov
mov
cmc
push
out
or
jns
push
and
lret
mov
lea
xchg
sub
lea
jne
loop
mov
popf
outsb
push
or
cmp
movsl
arpl
popa
dec
xlat
mov
pop
imul
jno
push
outsb
adc
sahf
cmp
or
adc
ret
sub
test
mov
int3
inc
scas
mov
hlt
cmp
loope
imul
ja
mov
aaa
mov
adc
jmp
mov
ret
pop
and
push
lahf
ss
mulb
inc
xor
int
daa
xchg
rcrb
cmpsb
cld
jns
shrb
insl
push
sbb
xchg
sub
sti
cmpsb
or
rcr
adc
xchg
and
dec
mov
and
andl
xlat
dec
cltd
push
sahf
mov
mov
imul
clc
pop
or
jecxz
in
sub
lods
iret
into
stos
mov
leave
jae
jl
loope
imul
inc
fidivl
imul
cs
fimuls
push
cmp
lods
push
mov
lods
fistps
iret
inc
jp
movsb
movsl
push
sti
bt
or
push
addr16
adc
xchg
cmp
pop
and
stc
inc
movsb
push
lds
xchg
push
mov
or
dec
repnz
pop
jno
sbb
popf
push
lods
add
or
loope
scas
push
or
push
imul
mov
subb
and
mov
pop
xchg
mov
jno
in
dec
jg
jp
mov
push
call
test
or
mov
jmp
and
cmp
icebp
mov
inc
dec
les
dec
cltd
sub
cmpb
dec
xor
push
jmp
or
sbb
out
das
push
movl
in
sbb
sti
push
dec
adc
popf
sub
add
mov
stos
loope
jle
add
xchg
xor
outsb
ljmp
adc
push
loope
sahf
fisubl
popa
mov
test
mov
arpl
movsb
adc
mov
xchg
xorb
notl
mov
adc
push
xchg
cld
inc
addl
dec
cwtl
cmp
mov
hlt
adcb
add
cli
stc
daa
push
cld
or
aaa
mov
sbb
push
out
adc
lea
lock
or
fildll
dec
movl
insl
and
sub
dec
dec
ret
iret
dec
push
jae
mov
xor
scas
test
add
ss
lcall
call
out
iret
inc
mov
ret
adc
sbb
cld
sub
jle
mov
sbb
subl
das
jns
outsb
test
outsb
out
adc
xorl
leave
pop
movsl
xor
pushf
sub
arpl
or
fs
or
das
ret
dec
mov
jl
pop
and
pusha
mov
xchg
lods
add
xor
jle
repnz
test
int3
ljmp
enter
cmp
es
push
adc
in
push
xchg
xchg
test
or
std
out
add
sbb
add
jne
dec
and
das
leave
or
jne
shlb
push
sbb
sahf
jmp
pop
inc
testb
cmc
pop
pop
lds
lock
add
push
aas
test
adc
cmpsl
jns
andl
insl
pop
xlat
shll
sub
mov
js
push
jae
into
ret
xor
pop
outsb
test
enter
iret
cmpsl
jge
scas
fsubs
int3
adc
rorb
paddsb
mov
and
and
loope
jno
ror
sbb
jne
push
cltd
sbb
inc
push
push
push
cmpsl
scas
mov
xlat
xchg
pusha
push
xchg
aas
data16
and
or
iret
and
shl
sbb
add
mov
cmc
insl
jp
sahf
loope
popa
bound
jb
sbb
or
or
sub
jb
jno
add
fs
out
jne
inc
movsb
popf
sbb
pop
and
xor
cmp
ss
xchg
repnz
faddl
xor
jg
ret
ss
pop
sub
subb
test
jno
test
ljmp
push
add
enter
pop
cs
int
daa
test
subb
ret
jbe
cmp
test
std
sbb
in
das
and
push
adc
test
scas
sub
push
stos
dec
inc
adc
rol
jg
ret
dec
shll
aam
js
ficompl
xchg
hlt
into
out
jnp
cmc
jbe
in
inc
xlat
ret
scas
xchg
icebp
dec
push
daa
sub
jmp
mov
push
push
ret
test
or
les
divl
jno
faddl
in
xchg
sub
push
push
pop
sub
jge
ja
sbb
sub
adc
push
repnz
sbb
sahf
nop
out
pop
movsl
xor
pop
ficoml
pop
andb
sbb
xchg
ljmp
decb
pop
xor
mov
or
push
lds
add
nop
or
cld
shrb
jb
repnz
shrl
xchg
push
jns
jecxz
cli
and
jl
and
mov
fwait
in
nop
dec
mov
jl
lret
jmp
adcl
sub
int3
sub
stos
xchg
push
out
push
dec
add
shlb
jge
ljmp
cli
je
and
mov
test
repnz
jo
mov
sbb
or
ljmp
xor
scas
popf
insl
mov
ss
jnp
push
sub
xlat
ja
subl
in
adc
cmp
out
xchg
lds
fdivrs
gs
pop
sub
jge
mov
scas
cmpsl
inc
pop
pop
adc
add
cmc
mov
inc
stos
test
aad
mov
add
cli
test
push
out
popa
idiv
fs
jne
stos
out
mov
imul
repnz
mov
fidivl
cli
add
adc
cmp
shr
shr
cli
scas
aas
mov
cli
pop
fistl
imul
cltd
stos
inc
or
sbb
jmp
insb
addl
int3
xlat
ret
and
xchg
xlat
imul
mov
xor
pop
pushf
mov
lods
adc
mov
mov
inc
mov
rorb
into
mov
repz
clc
push
in
xor
vmovlpd
aaa
add
mov
leave
push
mov
int3
dec
or
std
xchg
pop
add
lock
mov
in
bound
cmp
pop
test
test
mov
insl
and
out
mov
sub
jo
jb
fldenv
pop
stos
push
sub
out
add
sti
aad
mov
cmp
and
addl
inc
mov
xchg
and
notb
push
push
shl
ljmp
data16
or
lret
je
lods
fcoml
movsl
rcrl
jns
lods
cmp
movsl
jns
cs
cwtl
enter
data16
popf
pushf
or
imul
fildl
sub
and
sub
push
sbb
notb
call
dec
in
mov
jae
cmp
sub
jns
bound
rcrl
mov
fxtract
outsb
ljmp
rclb
or
add
mov
sbb
or
loopne
daa
rcr
jle
sti
test
jle
push
xor
fistl
mov
stc
jecxz
cmp
aam
jnp
cmpsl
or
xchg
clts
scas
lahf
xchg
adc
pop
xor
jmp
cmc
add
mov
push
xchg
push
pop
pop
mov
inc
or
sub
inc
leave
mov
loop
dec
out
scas
rorl
inc
pop
dec
aam
sbb
add
fildl
fimuls
cltd
cmp
mov
add
scas
cli
or
xor
test
mov
mov
pop
cmc
adc
arpl
inc
mov
pop
shll
enter
inc
pop
mov
mov
fsubp
cmp
clc
or
inc
sahf
sub
fst
cmp
and
xchg
fnstenv
hlt
push
jb
cmpsb
pop
jno
or
adcl
sbb
inc
push
cmp
mov
jb
xor
adc
and
ja
jo
xchg
in
cli
aam
imul
add
push
lods
cmpsb
stos
in
xchg
cltd
data16
lock
gs
pop
jne
std
ret
cmp
daa
jns
orl
pop
jbe
frndint
push
pop
sub
mov
iret
pop
mov
lods
xor
arpl
inc
sub
das
adc
inc
adc
gs
leave
fimull
aaa
pop
push
sub
cli
addl
push
ds
fisttps
jne
js
add
mov
sub
cmp
jbe
or
nop
rcrl
add
adc
sbb
fwait
push
or
sub
ja
push
fstpt
push
inc
inc
fdivp
mov
sbb
add
je
clc
repnz
insl
int
pop
jp
inc
ds
test
dec
clc
es
and
pop
cmp
xchg
repz
pop
mov
jmp
adc
mov
insl
movsl
jle
daa
loop
ror
in
sahf
scas
les
and
je
push
xchg
jne
insb
ficoml
lahf
xchg
cmpsb
loopne
xor
andb
aam
outsl
gs
sarl
mov
movsl
mov
lcall
push
push
jne
shlb
mov
mov
cmp
fbld
mov
cs
jo
imul
mov
sbb
push
adc
mov
sbb
jo
test
andb
or
adc
mov
enter
inc
or
mov
and
and
fs
rolb
movsl
das
jbe
sbb
aaa
out
push
xchg
dec
add
mov
xor
sbb
jo
shrb
test
push
inc
fwait
cs
push
loopne
inc
lods
fdivrs
dec
xchg
mov
les
adc
xorb
in
dec
add
push
xchg
mov
stos
call
fsubr
fs
dec
das
jg
in
and
sub
ljmp
or
pusha
jo
in
sbbl
movl
sbb
loop
scas
cmp
stos
jp
mull
dec
ja
sbb
push
dec
sar
sub
inc
push
fwait
lds
fmulp
xlat
and
out
xchg
push
movsb
pop
sub
sbb
xchg
lods
pop
ficoml
orl
or
or
lock
add
mov
test
hlt
jbe
xor
int3
sbb
in
dec
jnp
pushf
pop
repnz
adc
aas
mov
scas
adc
push
jae
pop
into
aad
and
aaa
test
inc
push
addr16
cld
out
aas
and
loop
aad
testl
jecxz
aas
push
loope
sub
push
push
or
in
dec
addl
add
mov
lcall
orb
cmp
jmp
in
loope
int
jmp
in
mov
mov
bound
out
and
fistl
loop
inc
addr16
xchg
jecxz
push
iret
imul
out
cmpsl
stos
scas
pop
jno
call
push
xchg
popa
lea
gs
aam
movsl
cld
dec
imul
inc
cmp
xor
insl
pop
dec
sbb
pop
stos
xlat
mov
iret
sbb
pop
mov
mov
popf
push
pusha
add
add
sub
or
adc
nop
and
fld
sahf
shll
ljmp
jle
icebp
sub
push
pop
test
scas
xor
int
lods
arpl
dec
xor
cmp
and
sti
xchg
cmp
pop
jg
ds
aam
pop
mov
inc
cwtl
iret
ds
xchg
mov
out
pop
mov
jl
subb
aad
loope
pushf
out
pop
pop
fdivrl
int3
or
or
bound
pop
leave
inc
clc
jge
sub
pushf
lock
dec
mov
mov
pop
mov
jnp
lods
aam
push
test
mov
sub
es
and
push
movsb
mov
mull
popf
bound
xchg
test
add
ljmp
cmp
leave
cmpsl
mov
andl
pop
icebp
ret
push
push
testl
jo
imul
adc
dec
sbb
adc
cmp
ret
inc
mov
hlt
mov
cld
enter
jne
test
fs
pop
cmc
and
mov
sahf
or
push
int3
xor
push
shlb
test
sub
lret
pop
test
stos
aad
leave
adc
pop
std
out
cmp
daa
ds
pop
popf
mov
enter
xor
xor
xor
fwait
inc
inc
data16
mov
sar
pop
cltd
loop
mov
xchg
dec
adc
es
aad
push
in
push
mov
in
xchg
ss
insb
enter
xchg
les
cld
pop
xchg
mov
add
push
repz
fistps
and
pop
xor
movsb
fstpl
adc
and
jecxz
stc
cltd
ja
dec
push
mov
jae
or
xor
div
mov
xchg
jno
push
pusha
sub
repnz
cli
in
add
aam
int
add
loop
pop
call
jb
add
sbb
lock
mov
ja
pop
test
jl
inc
jne
mov
adc
push
insl
test
shrb
rclb
push
and
jbe
daa
ds
mov
sub
loope
adc
adc
ljmp
cltd
pushf
push
and
test
sbb
andb
inc
pop
shrb
imul
jle
outsb
clc
jle
jno
push
pop
insl
mov
stos
scas
mov
sarl
cmp
mov
add
mov
pop
push
sbb
push
pop
adc
into
lcall
mov
and
cmp
xor
mov
xchg
sub
jmp
fildll
push
sbb
push
xor
xchg
sbb
xchg
adc
hlt
xor
loop
dec
js
pop
adc
push
jge
imul
repz
cld
pop
sub
lcall
mov
mov
lock
mov
jl
add
jne
test
in
cmpsb
stos
adc
shlb
add
dec
push
lods
clc
dec
es
aad
fsts
daa
jmp
adc
nop
dec
pop
push
imul
mov
xchg
adc
data16
sub
lods
dec
stc
subb
test
fnstsw
mov
movsl
jg
jno
dec
repnz
push
adc
ret
shlb
fisubl
mov
fildll
addb
sbb
arpl
pop
adc
jno
jnp
xchg
cmp
fwait
or
fs
iret
cmpsl
sbb
or
data16
adc
sarb
xor
push
mov
pop
ljmp
and
mov
sbb
pop
fistps
sub
jb
pop
mov
js
fisttpl
adc
in
jae
add
or
dec
xor
lock
inc
adc
pop
jmp
out
std
cmc
mov
jecxz
push
call
pop
fsubrs
inc
mov
xchg
xchg
es
pop
cltd
loope
jl
fs
jns
test
and
enter
mov
push
dec
pop
stos
mulb
pop
mov
dec
sbb
fidivrs
sbb
cmpsw
lahf
scas
jge
xor
cmp
sbb
in
xor
jp
or
in
test
dec
cmp
imul
dec
dec
push
mov
mov
xor
mov
jbe
jbe
int
push
es
fs
jp
sub
and
jl
dec
insl
pop
mov
out
shlb
stc
add
mov
cmp
lret
cmp
jmp
mov
push
div
inc
scas
lods
dec
in
add
mov
iret
fimuls
jmp
movsl
insb
in
mov
mov
jb
cltd
xor
pop
xor
outsl
sbb
bound
xor
subl
ljmp
out
stos
mov
lods
sub
test
mov
into
faddl
or
pop
cmp
aaa
push
loop
popa
dec
ja
into
sahf
xchg
clc
push
and
enter
mov
stc
jecxz
sub
dec
fneni(8087
movsl
pushl
dec
test
lahf
mov
dec
xchg
mul
lock
lahf
clc
nop
int3
popl
mov
fwait
mov
adc
adc
push
cmp
insl
clc
pop
in
dec
mov
fsubrl
jns
xor
dec
stc
mov
mov
aam
popa
jmp
fdivrp
shrl
dec
es
or
pusha
push
dec
mov
movsl
sti
add
mov
cmp
jno
repnz
or
shl
add
adc
fdivl
iret
lret
cmp
incl
stc
aad
js
cltd
push
shl
adc
pusha
push
push
sub
pop
mov
out
and
xchg
sub
rclb
mov
dec
pusha
mov
inc
and
call
cmp
out
xchg
fdivs
xor
inc
jg
ds
mov
test
mov
or
sbb
bound
mov
xor
dec
mov
aad
shrl
adc
enter
mov
fcoml
nop
jmp
loopne
or
cltd
sbb
fnop
inc
les
push
xchg
ret
sbbb
testl
subl
je
mov
jle
leave
add
jne
std
into
test
push
sub
jge
pop
sbb
push
jo
mov
shrb
sbb
adc
mov
enter
push
std
sub
leave
inc
sahf
xor
jns
mov
xchg
aaa
cmc
mov
mov
fwait
aas
jae
js
mov
test
add
and
adc
cwtl
insb
dec
inc
xlat
jp
xchg
scas
ljmp
mov
mov
xchg
xchg
fildl
addl
ljmp
push
mov
enter
cmpsl
stos
cld
mov
adc
cmp
pop
sti
add
cmp
jge
pop
mov
mov
arpl
aas
cltd
add
clc
sbbb
stc
jp
xchg
mov
std
inc
fwait
or
fsubs
mov
stos
adc
inc
fsubr
xchg
push
enter
or
insl
lods
and
sbb
add
sbb
xchg
dec
fdivrs
jns
jns
je
addr16
xor
dec
dec
stos
mov
dec
cli
mov
insb
popa
ja
outsb
xchg
pusha
cli
inc
lahf
or
inc
add
cmp
pop
xor
adc
shrb
cli
xor
aas
xlat
aas
lods
ret
scas
fs
fistpl
fbld
add
dec
mov
mov
sarb
push
mov
repnz
mov
cmp
push
mov
add
clc
divb
lea
mov
hlt
xchg
lahf
jns
fxch
repz
sbb
inc
mov
out
push
xchg
mov
lods
sub
inc
test
fadd
outsb
enter
dec
mov
push
cmpsb
sbb
xor
add
lea
push
cmpsl
push
mov
push
mov
mov
dec
add
dec
popf
nop
fucomip
xor
dec
enter
cmp
pop
test
scas
bound
jb
cmp
adc
or
stos
mov
aas
jo
mov
mov
popf
push
mov
cmc
je
repz
mov
jp
fcomps
fcompl
push
lods
aad
je
adc
cwtl
ja
movsb
das
jbe
idiv
cli
jmp
adc
das
push
pop
cmp
add
cltd
cwtl
imull
sub
jbe
insl
mov
inc
sub
xchg
or
jne
cmp
add
fxsave
jbe
xchg
dec
mov
pop
mov
cwtl
cmovae
inc
xchg
loopne
inc
push
fs
lods
sbbl
mov
fcom
inc
pusha
mov
fidivrs
rcll
out
add
daa
add
lods
ret
sbb
mov
bound
scas
pop
mov
push
and
lahf
xchg
std
subb
push
std
xchg
out
mov
mov
pop
or
jge
and
push
mov
sbb
jp
in
lea
xor
mov
outsb
aam
sbb
loope
sbb
adc
jl
inc
inc
mov
fidivl
faddl
or
mov
adc
aad
cmp
pop
add
fstpl
sarl
cwtl
sub
fnstsw
mov
mov
jnp
inc
jg
xchg
adc
adc
mov
dec
mov
sub
mov
xor
cltd
sbb
sarb
push
add
hlt
imul
xchg
insl
cli
hlt
int
cmc
icebp
fisubl
dec
fistpl
or
mov
sti
aaa
mov
lahf
sbb
push
cs
jmp
sub
cmp
xor
repz
xchg
pop
inc
in
or
jns
imul
out
gs
bnd
loopne
js
ret
push
xchg
jmp
inc
fnsave
sar
adc
repnz
popa
sub
push
testl
mov
push
sbb
push
and
pushf
push
rsqrtps
cmpb
cmp
mov
fwait
arpl
lods
sbb
in
xchg
in
ret
add
insl
imul
cmp
push
ja
ds
sbb
adc
cld
rol
xchg
mov
xchg
stos
pop
adc
xchg
subl
push
je
lahf
xlat
push
shl
add
dec
movsb
mov
jg
scas
jns
ret
loopne
sahf
add
pusha
fnsave
sub
lret
in
and
shl
mov
inc
jg
xchg
fdivs
jo
push
fs
add
xchg
mov
inc
adc
jo
pop
and
mov
add
push
and
negb
jl
add
movsl
loopne
or
pop
xor
out
add
out
mov
add
inc
sub
in
cmp
sbb
cmpsl
push
in
outsb
fnstenv
adc
aas
mov
pop
inc
mov
mov
xor
sarb
push
pushf
dec
das
inc
nop
popf
hlt
mov
aad
ret
mov
mov
fdivrs
aam
push
lahf
adcb
dec
jo
leave
sub
subb
sbb
lahf
lock
xchg
shl
scas
push
nop
xchg
sahf
xchg
bound
nop
mov
mov
push
adc
mov
call
movsl
or
jg
cmp
mov
or
aas
xor
pop
je
lods
mov
xchg
aaa
xchg
push
pop
sarl
mov
fcompl
mov
cmp
cmpsb
cmp
shrb
setl
add
das
cmp
jnp
aad
fcomps
push
push
rolb
cmc
insb
scas
cmp
hlt
dec
shr
outsb
daa
adc
idiv
add
mov
imul
push
add
aas
fwait
mov
jno
daa
sub
mov
push
jno
xchg
sub
mov
loope
pop
jae
cmpsb
pushf
nop
ja
pop
shrl
in
jl,pn
inc
cmpsl
and
clc
add
frstor
cmpsl
and
mov
mov
dec
xlat
adc
xchg
cwtl
sbb
jne
data16
das
repz
push
ss
daa
mov
mov
test
pop
inc
dec
icebp
shll
xchg
cvtpi2ps
sub
jo
call
push
cmpsb
out
movl
mov
push
scas
outsb
cmp
xchg
rorl
popa
aas
pop
mov
and
pusha
xchg
lret
jmp
mov
pop
mov
jg
mov
jp
fwait
add
call
fdivs
js
int3
push
rcll
sub
push
dec
and
xchg
cs
sub
jg
dec
mov
insl
into
and
in
inc
ret
add
mov
je
es
mov
out
cld
repz
aaa
insb
inc
daa
stos
push
cmp
lcall
sbb
adc
ja
jb
loope
inc
gs
sahf
test
dec
loopne
xchg
daa
cltd
and
push
jnp
add
cmp
test
dec
imul
sbb
dec
fwait
mov
loopne
in
repz
xor
ljmp
loopne
xor
adc
sub
dec
mov
pop
or
aas
fnstcw
push
xchg
mov
les
lock
cld
lahf
cwtl
pop
pop
lods
lcall
dec
mov
pop
cld
inc
xor
mov
stos
mov
cltd
hlt
mov
aaa
push
push
mov
repz
stc
addb
fidivl
push
pop
lcall
jmp
or
xor
jns
test
xorb
lret
pop
cmpsl
push
iret
and
add
fisubrs
cmp
ljmp
loopne
push
add
inc
inc
stos
push
mov
lods
adc
rorl
in
inc
stos
aaa
xchg
and
xchg
cs
mov
mov
and
insb
fidivl
mov
mov
les
or
fwait
cmp
xchg
dec
gs
mov
ljmp
popa
pop
imul
dec
adc
and
sbbl
mov
mov
imul
xlat
mov
and
sbb
pusha
mov
push
push
and
mov
in
xchg
cmp
cmpl
inc
and
sti
loop
faddl
test
das
cmp
ljmp
jne
add
loope
xor
ss
cmp
xchg
dec
or
aaa
ja
inc
or
repz
hlt
int3
ret
out
mov
ret
push
test
lahf
sti
push
test
stos
lds
cwtl
push
test
in
or
into
adc
fs
test
xor
aad
jo
mov
scas
xor
sub
xchg
jne
shlb
cwtl
pop
mov
mov
xchg
pusha
xchg
push
xchg
jmp
adc
scas
pop
fs
dec
dec
push
inc
sub
sti
nop
jnp
popl
fiaddl
sub
lahf
sub
push
aam
push
popa
xor
rcrl
ss
pop
lock
daa
jb
lcall
es
je
lds
adc
pop
mov
into
cmc
fstl
push
mov
stc
fdivs
lea
addr16
das
lahf
movsb
ret
push
outsb
cmp
insb
out
sub
cmp
pusha
xchg
in
mov
xor
into
pushf
push
insl
aad
orb
adc
in
jbe
fdivrl
pop
add
cmc
int
test
stos
xor
lock
mov
mov
out
or
jecxz
dec
sbb
xchg
push
jle
mov
cmp
lcall
fdivrs
inc
jg
xor
push
daa
push
xchg
clc
test
push
add
lahf
cmp
jecxz
pop
data16
in
sahf
in
fwait
clc
adc
bound
mov
jno
int3
inc
xor
mov
hlt
daa
or
cmp
nopl
shlb
add
repz
out
fwait
cli
cmp
jecxz
es
dec
push
mov
pop
jp
xor
push
sub
or
add
or
jge
cmpsb
out
mov
gs
out
push
or
aam
xchg
stos
add
xor
inc
dec
xorps
push
mov
clc
lods
int3
jmp
or
inc
xchg
dec
push
sub
cmp
std
pop
add
sbb
cs
jp
and
jge
push
jns
sbb
dec
dec
popa
adcl
xchg
pop
or
pop
movsl
lock
dec
xchg
cmp
das
in
or
mov
into
lret
inc
clc
lods
pop
insb
pop
aas
pushf
fcompl
xchg
adc
mov
nop
stos
jnp
xchg
es
int3
jo
xor
ljmp
xor
ds
es
fcoml
out
xor
stos
mov
add
ror
cmp
ret
jnp
loopne
xor
js
lcall
sti
mov
insb
jmp
ljmp
fidivrs
jle
lods
xor
ret
outsl
push
clc
mov
addr16
and
lret
fst
lcall
cs
lcall
xchg
inc
enter
xchg
sub
jo
inc
mov
mov
out
mov
pop
sbbb
fidivs
xchg
jne
mov
int3
push
or
push
sub
jae
test
pop
push
arpl
loopne
xor
dec
test
loope
mov
dec
mov
dec
clc
jo
pop
add
dec
aad
addr16
jge
push
inc
mov
pop
movsb
push
pop
add
mov
inc
jnp
leave
mov
inc
hlt
and
jae
pop
mov
add
into
cs
in
mov
cmp
jl
sbb
pusha
pusha
xor
daa
cmp
cmp
or
xlat
and
sbb
mov
fnstenv
add
or
sbb
fdivl
das
pop
xor
dec
inc
adc
in
ret
hlt
lods
out
aad
int3
repz
lret
scas
or
mov
cmpsl
in
test
call
adc
xchg
cmc
dec
mov
leave
jne
add
jecxz
lods
popf
inc
scas
inc
outsb
pop
fwait
loopne
hlt
icebp
je,pn
lret
mov
jnp
or
push
movsl
or
add
loopne
xchg
adc
popa
sub
dec
inc
sub
push
sbb
lds
jne
cmc
mov
int
nop
add
jno
dec
cmpsl
mov
es
jmp
test
xchg
cli
jle
mov
clc
call
inc
xor
test
lahf
adc
jno
dec
outsl
xor
mov
jne
and
scas
pop
jecxz
data16
fidivs
adc
iret
lods
cmp
ror
test
cmc
or
popl
scas
mov
sub
xchg
push
adc
inc
test
push
in
jns
pop
mov
dec
call
in
sbb
arpl
ja
dec
xchg
fbld
test
sub
sub
mov
frstor
push
xor
hlt
pop
push
pop
cwtl
daa
inc
rol
aas
mov
aaa
xchg
imul
jge
or
fnstsw
ds
mov
xor
jbe
sub
popa
pop
lahf
sahf
jg
mov
add
rcrl
je
loopne
rol
movsb
mov
add
inc
inc
xchg
cli
lcall
and
fnstsw
mov
insb
push
in
and
popf
push
push
out
adcl
iret
sub
je
xor
or
stos
enter
pushf
push
push
sbb
push
pop
clc
mov
inc
xor
sub
imul
iret
ds
frstor
jg
lds
inc
nop
sti
imul
jg
dec
xchg
jbe
push
out
mov
sub
loop
cltd
sarl
loope
dec
mov
mov
inc
jmp
or
iret
sahf
pushf
mov
and
add
mov
push
andb
push
cmp
xchg
daa
outsb
movsl
mov
mov
xchg
jp
cmpsl
insl
test
sub
cld
adc
jp
insl
mov
adc
insb
push
inc
sbb
sti
sarl
mov
cltd
jns
and
arpl
bound
jo
addl
or
xor
rorb
andl
jb
mov
dec
mov
jno
xchg
mov
call
jb
sbb
cmp
repz
lods
sbb
jb
popf
inc
pop
and
jecxz
mov
and
mov
push
or
mov
iret
loopne
xchg
arpl
nop
pop
mov
es
xor
out
jae
push
adc
stc
into
dec
sbb
in
notl
inc
call
lcall
add
mov
sbb
cmp
std
loope
js
loop
xchg
lea
pop
or
xchg
aam
rol
sbb
mov
jne
cvtpi2ps
xchg
inc
int3
adc
or
cwtl
addb
in
and
add
push
pop
sub
mov
fisubrs
and
push
hlt
hlt
jbe
mov
lock
cmp
loopne
adc
fsubl
dec
in
dec
hlt
adc
repz
jp
fs
mov
ss
cli
cmc
sbb
fcoml
jp
mov
mov
sub
popa
or
in
arpl
cwtl
sub
mov
jb
inc
mov
mov
push
lea
adc
dec
repnz
in
aaa
popl
cwtl
dec
sarl
dec
fadds
xchg
mov
repnz
scas
sub
adc
cmpsb
imul
and
mov
lret
test
ljmp
in
test
jle
ficomps
pop
mov
call
imulb
call
movups
xchg
mov
push
sbb
sbb
js
insl
mov
lock
addr16
lret
sbb
sti
test
lods
dec
or
out
xchg
sbb
adc
xchg
mov
scas
je
mov
xor
or
rcrl
xchg
pusha
mov
int
push
jo
test
sub
or
jae
mov
les
scas
xor
repnz
daa
bound
mov
inc
fldl
ja
pop
mov
add
cmpsb
mov
jecxz
cld
dec
pop
dec
mov
cmp
push
pop
jb
imull
fs
mov
jnp
add
pushl
data16
add
movsl
mov
jbe
popa
mov
xchg
imull
ja
sbb
ror
jno
mov
aad
subl
jg
out
test
mov
fwait
neg
pop
add
outsl
mov
je
jg
ljmp
out
dec
xor
mov
add
cmp
pop
pop
or
sti
jb
pop
push
std
arpl
repz
loope
mov
mov
rcll
fstpl
leave
add
push
xor
in
jbe
lahf
cmp
xchg
xor
sbb
faddl
test
daa
cmc
outsl
jbe
dec
inc
fcomp
cli
xchg
push
mov
jp
adc
xor
cmp
cmp
sub
pop
enter
fmull
inc
sub
ljmp
fdivl
push
xchg
jns
roll
sub
mov
jle
xchg
int
call
call
jmp
mov
es
push
or
addr16
dec
sbb
rcrl
xor
mov
lods
sub
pop
inc
pop
clc
jle
sub
pop
mov
bound
test
cmp
jmp
pop
call
cmp
sahf
jns
loopne
ja
out
pop
out
xchg
inc
aaa
mov
cmp
cli
dec
jns
stos
jo
data16
mov
subb
aas
sbb
bound
sub
inc
adc
pop
shlb
xor
out
sbb
in
bound
dec
test
add
les
cmp
mov
pop
fstps
jge
je
aas
ret
mov
pop
stc
jae
lock
lcall
jo
xchg
jmp
push
mov
imull
and
push
outsb
ret
dec
adc
mov
mov
mov
mov
pusha
imul
insb
sub
inc
dec
xchg
rclb
mov
adc
xchg
mov
sub
mov
arpl
xor
fs
pop
lret
pop
je
scas
push
mov
jmp
push
mov
inc
daa
jbe
mov
dec
xor
aad
sub
rolb
jl
mov
stos
xor
mov
hlt
push
mov
dec
xor
addl
push
xchg
scas
push
lcall
into
inc
push
mov
adc
push
out
aam
cli
clc
in
or
mov
scas
sbb
adc
xchg
add
iret
lret
xor
pusha
and
mov
adc
bound
inc
arpl
xchg
add
popa
ljmp
test
cmpsl
jno
fildl
mov
adc
outsb
sub
pop
les
pop
outsl
or
and
enter
cmp
incl
jg
imul
movsl
imul
push
fildl
fidivs
cmp
shlb
mov
cld
pusha
out
mov
and
repnz
lds
shrb
push
cmc
mov
or
fs
in
dec
imul
lret
jle
repz
cwtl
test
sti
mov
test
adc
shl
push
jnp
mov
dec
or
leave
add
add
lret
or
adc
and
mov
adc
int
dec
test
adc
test
jns,pt
and
lods
test
or
sub
icebp
scas
int
lods
mov
es
sub
flds
call
fisttpl
lods
incb
add
or
add
mov
push
insb
mov
xchg
mov
leave
push
pop
jo
mov
mov
jecxz
jne
dec
jmp
push
je
stos
fists
ljmp
call
fisttps
mov
inc
ds
in
ret
xchg
lock
adc
push
stos
push
pushf
pop
inc
cs
cmp
test
lock
sbb
daa
fdivl
dec
jle
rolb
add
je
inc
ror
xor
jmp
popf
js
push
xchg
and
mov
testb
pop
pop
dec
cmp
inc
daa
stos
sub
cmp
aam
cmp
pop
cmpl
xchg
sub
xor
cmc
mov
add
cmpb
imul
push
mov
sbb
in
jns
icebp
jbe
jmp
xchg
leave
cs
sub
lock
push
xor
xchg
jns
out
gs
jecxz
ja
pop
test
adc
sbb
push
mov
sub
rorb
lcallw
clc
push
sub
cmpsb
sahf
push
sahf
adc
testl
push
mov
push
orb
cld
leave
jb
mov
inc
jae
insb
jb
inc
iret
cs
and
sbb
inc
push
pop
push
cmp
mov
jg
pop
pop
mov
mov
add
cld
cmpsl
bound
sbbl
pop
iret
scas
xlat
dec
repnz
mov
gs
and
push
xor
adc
mov
mov
dec
gs
mov
fwait
lds
std
jp
or
and
inc
xchg
pop
jp
pop
cmp
pop
cs
int
pop
sbb
pop
push
scas
push
xor
push
inc
dec
jnp
pop
mov
lea
adc
inc
xchg
and
adc
fsub
insb
pop
sbb
cltd
fs
sarb
loope
or
lret
imul
or
movsb
test
dec
mov
scas
push
fucomp
lds
dec
jecxz
jae
jns
in
push
in
lods
xor
lods
push
call
inc
push
push
aad
std
sub
push
inc
lock
mov
inc
cmp
popa
cmp
fadds
dec
push
jno
rcrb
dec
xorl
mov
push
or
test
aas
mov
sbb
xor
test
mov
add
push
and
incb
pop
push
cmc
mov
mov
cmc
and
pop
pop
ljmp
bound
mov
leave
aad
fbld
enter
add
xchg
sub
out
out
jle
mov
jbe
mov
sub
filds
scas
std
mov
inc
pusha
loopne
clc
imul
outsl
add
add
adc
fidivrl
add
sub
call
cmpb
adcl
jmp
jne
cmp
dec
ds
mov
cltd
cld
jmp
xor
cltd
and
mov
imul
ljmp
or
vphaddubd
inc
es
stc
mov
ds
mov
aaa
sahf
adc
addb
clc
js
in
aas
cmp
fidivl
loop
movsb
lahf
or
mov
mov
sarl
inc
xor
mov
jmp
test
or
adc
mov
sahf
push
push
lret
aaa
cltd
jmp
jns
add
ds
das
sub
ljmp
jmp
add
cwtl
cmpsb
iret
push
jo
mov
xor
das
sub
mov
adc
aad
rorl
mov
mov
mov
out
and
addr16
xchg
adc
add
mov
out
mov
andl
fwait
pop
lcall
cld
adc
fiaddl
or
adc
cmp
sbb
jg
in
xor
jg
adc
addb
lods
lds
dec
jnp
dec
and
mov
push
xchg
lds
ljmp
js
and
add
sarb
stos
repnz
push
and
subb
xchg
call
popf
fs
mov
push
push
aaa
repz
add
std
push
mov
sbb
push
sbb
push
jb
jecxz
jle
push
imul
push
mov
and
pop
divps
push
pushf
mov
leave
pop
in
mov
popa
pop
sbb
adc
pop
testl
mov
ss
es
int3
std
neg
js
lock
xchg
lock
sbb
rcl
jno
push
lret
test
adc
mov
cmp
hlt
repnz
mov
push
fwait
cmp
aam
call
test
cmp
not
in
mov
lret
test
addr16
cmpsb
dec
lcall
ljmp
sbb
and
and
fs
int3
jbe
in
and
xchg
sahf
testl
lret
data16
call
rol
outsb
iret
in
inc
test
int
mov
sbb
push
inc
pop
lret
lds
sbb
jns
pop
and
mov
out
stos
mov
xchg
dec
repz
pop
fstpt
or
mov
dec
cltd
es
pusha
pop
repz
sub
dec
mov
or
jp
insl
or
addr16
xor
mov
cmp
in
add
ret
sub
test
ret
hlt
push
das
lahf
pop
fisttpl
mov
enter
mov
mov
dec
xlat
jbe
lods
mov
pop
sbb
push
out
aad
gs
xor
cmp
add
aas
dec
push
frstor
xor
stc
lds
aaa
push
cli
loopne
cld
add
movsb
mov
sub
and
ljmp
sub
mov
into
and
mov
fists
cmp
ret
mov
sbb
test
insl
js
aad
pusha
ja
push
jg
sub
add
jl
sbb
cld
dec
sbb
jecxz
dec
or
pop
arpl
mov
cmp
cmp
leave
or
movsb
and
mov
inc
mov
inc
out
out
or
inc
test
mov
lods
sub
add
jle
aas
lds
push
or
jle
das
jbe
arpl
pop
test
and
dec
push
sbb
movsl
jns
popa
cltd
scas
in
scas
ror
addr16
les
cmpsl
insb
mov
jle
popa
adc
mov
stc
mov
daa
bound
xlat
push
mov
fcmovne
hlt
jp
jbe
data16
andl
push
or
jnp
cwtl
add
jb
das
or
aaa
xor
aam
mov
fst
mov
aad
mov
imul
or
xchg
xchg
daa
inc
fstl
xchg
cs
push
pusha
adc
pop
addr16
mov
jo
sti
mov
or
lea
adc
inc
divb
pusha
fstps
scas
aam
fdivrs
je
push
mov
sbb
les
in
es
sbb
and
push
mov
int
xor
lea
test
mov
xor
cmp
fnstcw
fsubs
pushl
pop
fsub
sbb
jmp
and
stos
pop
in
fidivl
mov
jmp
cmp
mov
dec
rcrb
lea
inc
ss
cmc
add
addr16
or
mov
inc
xor
andb
cmp
sub
in
mov
cld
test
push
out
sub
jb
popa
mov
push
test
sti
sarb
add
and
adc
nop
fwait
xor
and
rcl
aas
ljmp
xchg
xchg
aaa
sti
in
lea
jmp
movsb
mov
enter
push
cmp
xor
sti
xchg
sub
pushf
xor
mov
hlt
push
clc
psubsb
fsts
call
fcompl
lods
xlat
mov
jns
mov
mov
jmp
xchg
ljmp
and
inc
ljmp
jp
add
fmull
lret
sub
inc
out
lods
push
es
addr16
or
adc
fisubs
std
iret
push
cwtl
and
mov
and
out
loope
dec
adc
fisubrl
jb
or
aas
cld
adc
sbb
sahf
test
testl
cmp
daa
inc
sub
cmp
push
pop
jnp
shll
fisttpll
jns
jecxz
push
jecxz
xchg
or
mov
cmp
outsl
and
les
cmc
pop
fimuls
test
and
jg,pt
xchg
pop
mov
adc
int3
and
in
xchg
pop
lods
dec
outsl
shr
push
fmuls
js
call
adc
push
and
mov
mov
into
ja
shll
sub
cmp
cmp
fwait
push
ljmp
dec
ss
push
dec
mov
shll
dec
push
fcompl
add
pop
pop
outsb
fcomps
jmp
mov
pop
adc
clc
movsb
je
jb
lds
bound
push
pop
nop
adc
xchg
mov
seto
or
cmpsb
add
movsl
sbb
jecxz
cmp
dec
mov
lods
mov
pop
xchg
and
xchg
outsb
add
jmp
lods
jmp
mov
push
xchg
fsub
adc
inc
loope
add
std
adc
out
mov
mov
xchg
inc
in
mov
sub
push
xchg
mov
xchg
push
arpl
or
icebp
push
ret
cmp
cmp
adc
fwait
lahf
inc
out
inc
jae
sti
dec
xor
addr16
imul
cmpsb
push
mov
xor
mov
bound
xchg
or
dec
pop
repnz
test
lahf
fimuls
stos
cmp
test
shlb
aas
fwait
adc
xchg
test
aam
jmp
cmp
subl
in
aad
add
insb
push
insb
lcall
sbb
fs
and
test
sub
mov
dec
out
pop
inc
push
call
or
sti
inc
popf
mov
sar
hlt
inc
push
pop
daa
fwait
cwtl
add
add
xchg
xor
mov
lcall
cs
mov
push
mov
add
sarl
sub
fisubs
scas
push
push
rol
cld
lods
sbb
call
lds
sbbl
imul
cmp
mov
icebp
ja
or
rolb
xchg
cmp
dec
repnz
push
xchg
xor
push
imul
cmpsl
out
mov
mov
sub
mov
das
add
pop
xchg
pop
mov
mov
xor
add
loop
fidivrs
mov
add
mov
call
je
cld
xchg
push
scas
xchg
jnp
mov
pop
sbb
cmpsl
dec
lret
cs
jo
aas
jl
call
mov
pop
cld
test
nop
push
scas
mov
and
dec
stos
pop
push
xor
test
lcall
cmp
add
mov
jae
int
pop
scas
lea
int3
repz
cmp
into
sbb
inc
aaa
sbb
andl
and
daa
xchg
scas
xor
or
or
mov
insb
dec
daa
mov
sbb
jg
jb
imul
xchg
shrb
lea
mov
mov
pop
ss
adc
clc
rorb
inc
xlat
push
xor
stos
pusha
and
insl
sbb
andl
cmc
cltd
faddl
ss
test
dec
mov
out
jge
mov
mov
pop
push
cmpsl
std
and
insl
sub
cld
and
adc
add
out
negl
scas
cmp
js
or
stos
mov
scas
fldl
lahf
add
jp
adc
js
mov
xchg
cwtl
ds
ds
ret
and
push
add
adc
decl
mov
dec
xchg
dec
sub
outsb
es
inc
ss
test
sub
out
pop
cmp
jne
ljmp
mov
cmp
adc
stos
cltd
popf
inc
mov
call
addl
loopne
dec
data16
pop
add
aaa
ljmp
scas
inc
cmp
xchg
mov
jle
cmp
cltd
jo
pop
pop
cmp
aad
jns
mov
in
jae
add
ljmp
jb
ljmp
fmuls
ret
dec
andl
gs
hlt
nop
out
fstpl
pop
int
out
loop
xorl
push
or
lods
gs
inc
pop
xchg
mov
iret
xchg
in
and
lds
pop
jl
dec
int3
sub
mov
fwait
or
inc
adc
add
xchg
or
push
scas
pusha
mov
and
inc
cmp
repnz
cli
in
xchg
adc
sbb
dec
inc
xorb
and
cld
jle
pop
mov
xor
fstp
jge
jg
andb
and
pop
adc
pop
sbb
adc
adc
jmp
leave
shrl
sar
and
es
jl
xor
xor
pop
pop
out
pop
into
push
shlb
and
dec
bound
rolb
jns
push
fs
mov
insb
inc
jbe
loopne
push
mov
pop
xor
jo
mov
rorb
and
mov
dec
push
mov
xchg
inc
int3
cmp
int3
sub
sahf
imul
fs
inc
dec
mov
lahf
nop
test
fdivr
push
jae
and
push
jl
adc
add
aaa
and
repz
push
in
jae
sbb
movsb
cmpsl
stos
inc
es
or
or
sub
ds
inc
mov
mov
push
add
pop
icebp
arpl
test
dec
lds
add
sarl
int
mov
and
adc
xor
cmp
bound
fcmovnb
pop
mov
pushf
or
cmc
mov
jmp
jo
push
test
adc
dec
fxam
fadds
mov
lret
je
inc
nop
inc
cmp
jmp
ret
pushf
stc
incl
pop
sub
and
mov
mov
or
and
mull
imul
xchg
inc
adc
mov
pushf
mov
imul
sbb
cwtl
mov
or
jne
xchg
in
int3
pop
xor
mov
out
and
mov
add
push
imul
fstl
adc
fs
xchg
mov
inc
or
sub
inc
sub
call
mov
xchg
test
dec
pop
out
pushf
int
fisttpl
mov
inc
test
or
fmuls
lods
xchg
mov
adc
or
fs
fnstsw
addl
pop
or
ljmp
inc
loope
xchg
add
pop
jmp
outsl
mov
cmpb
cmp
or
jmp
sub
shlb
jo
call
jns
je
jecxz
push
push
mov
jg
adc
jmpw
dec
mov
xchg
push
cmp
mov
addb
and
push
cmpsl
les
or
or
push
inc
jp
adc
in
add
mov
push
adc
out
sbb
push
ret
call
in
mov
repz
push
adcl
adc
popa
ret
cmp
test
sbb
imul
jbe
repz
lock
rcll
mov
pop
std
or
mov
xchg
test
jae
lahf
int
test
addl
pop
test
insl
xlat
cwtl
sbb
test
mov
jg
push
ss
imul
in
rcll
clc
xchg
jge
jb
insl
push
mov
xor
lahf
mov
cmp
mov
push
xchg
aas
mov
push
cmp
stc
xor
and
dec
and
adc
addr16
dec
cmpsb
scas
jl
movsl
xchg
mov
pop
and
push
push
and
xor
lea
cltd
xor
in
pusha
cmp
out
ret
ljmp
or
push
lods
and
mov
pop
mov
test
test
vmovdqa
push
shrl
mov
push
loopne
cmp
inc
cmp
addr16
and
xchg
mov
pop
adc
mov
xor
loopne
pop
aad
xchg
mov
jo
mov
xor
loopne
out
stos
pop
imul
fdivrs
daa
mov
ret
mov
popl
lea
mov
lds
mov
xor
and
xor
or
cli
sub
cmp
xor
enter
repz
mov
push
mov
xchg
inc
or
dec
jbe
scas
cltd
repz
mov
into
fidivl
mov
lods
lahf
pop
mov
testl
xchg
mov
shlb
lods
ds
jge
mov
test
idiv
ja
mov
daa
mov
mov
mov
cmp
nop
add
test
dec
cmp
lods
sysexit
push
jbe
dec
cmc
cmp
jb
and
add
addr16
xchg
or
dec
sbb
inc
aad
pop
addr16
jge
lahf
mov
int3
icebp
mov
rclb
mov
adc
pop
in
or
lret
jl
sbb
pop
xchg
fsubl
inc
cmpsl
or
xor
lods
mov
outsb
adc
xchg
fisttpll
ss
jge
in
ss
cli
xchg
hlt
jb
cmp
int3
loope
xchg
fstl
xor
xchg
dec
arpl
mov
in
add
pop
fcmove
cmp
shrl
jne
cmp
jae
pusha
sub
int3
jns
scas
movsb
mov
fwait
invlpg
or
jp
loope
imul
lcall
push
int
jl
add
jno
fs
inc
jg
test
or
jle
test
lods
cmp
div
out
imul
cmpsl
hlt
add
pop
cli
xchg
jne
fiaddl
jmp
mov
pusha
and
ljmp
or
push
pop
mov
mov
jl
into
adcl
je
adc
ja
mov
mov
jae
and
int3
jge
cmp
push
shrb
testb
enter
sub
call
fidivrl
movb
in
shlb
fbld
jbe
push
in
rorb
icebp
test
pop
mov
fcoml
in
std
daa
pop
ret
mov
fndisi(8087
enter
xor
pushf
and
stos
lcall
push
mov
lea
lea
insb
outsl
mov
sbb
or
cs
push
and
mov
xlat
jbe
lods
cld
in
pop
dec
dec
xor
cmp
cmp
iret
inc
push
adc
test
mov
adcb
mov
xor
into
pop
dec
iret
shl
push
xorl
divb
jns
inc
mov
pop
xchg
jmp
xchg
loope
mov
fildll
test
test
stos
mov
add
xor
push
pop
mov
sub
call
sub
out
int3
int
popa
sub
and
sbb
mov
push
mov
mov
jns
adc
dec
adc
pop
sahf
push
xchg
cwtl
cmpb
aas
xchg
clc
lods
rcl
fsts
sbb
sbb
sbb
adc
add
jl
movsb
cmpsb
andl
insl
test
pop
pop
adc
cmpb
mov
loope
xorl
add
inc
imul
push
movl
dec
add
or
dec
lea
push
pop
xchg
scas
pop
imul
fcoml
mov
pop
sub
lcall
and
inc
lea
cmp
lds
stos
rcrl
inc
das
xor
dec
insb
pop
mov
mov
inc
jns
mov
adc
mov
hlt
test
xor
popa
mov
je
xor
and
loop
mov
push
repz
shll
ret
arpl
inc
aam
dec
clc
scas
mov
mov
mov
int
xor
mov
sub
enter
cmp
sbb
mov
or
push
outsl
decb
gs
faddl
leave
pop
scas
mov
push
xchg
jg
mov
js
bswap
adc
sbb
mov
xchg
jmp
mov
test
test
test
subb
popf
fwait
addr16
notb
dec
or
lods
push
orl
add
xchg
ds
jo
les
rcll
xchg
xchg
mov
cmp
add
and
inc
mov
or
stc
mov
ret
dec
jno
and
sub
add
jbe
dec
and
and
xor
hlt
icebp
loope
xor
and
or
mov
clc
aad
sarb
sbb
dec
mov
mov
jl
jbe
testl
das
mov
push
sub
push
mov
testl
sbb
cwtl
cs
mov
lea
cli
adcl
inc
lds
js
out
mov
iret
sbb
aas
jmp
negb
mov
fstpt
out
cwtl
mov
push
dec
sub
rorl
adc
pop
into
daa
sub
dec
je
inc
or
clc
xchg
into
clc
cmp
ss
jo
mov
jle
and
rcrb
cwtl
shl
jg
xor
inc
push
jl
inc
stc
js
sbb
sub
jno
or
dec
cwtl
or
mov
mov
push
and
call
int3
movsl
rcrb
call
cmc
mov
cmp
repz
stc
hlt
jp
jne
jmp
ret
mov
int3
xchg
lods
cmc
mov
add
jmp
sbb
fbld
call
or
mov
js
cmp
push
jmp
js
shlb
xchg
dec
mov
outsl
test
jo
inc
shlb
jo
xchg
mov
mov
fcmove
push
subb
addr16
mov
mov
dec
push
nop
mov
nop
xlat
scas
lock
jo
dec
sbb
lcall
addr16
cmp
ret
mov
mov
mov
icebp
jns
inc
out
int
lods
sbb
ljmp
sub
ret
sti
lahf
in
cld
sbb
fs
stc
out
adc
add
lcall
or
mov
pop
je
popa
loopne
mov
fldcw
dec
insl
mov
xor
jmp
popa
vphadduwq
sti
or
add
shlb
sbb
outsb
fisubs
pushf
incb
inc
leave
aad
cmp
loopne
or
lea
bound
jo
cmp
jle
dec
sarb
sbb
movsb
xor
sbbb
push
fisttpll
les
out
outsl
xchg
jbe
movsb
daa
push
jo
hlt
imul
sbb
out
xchg
cmp
icebp
data16
ret
inc
sbb
pop
sbb
clc
inc
inc
jno
andl
sti
pushf
inc
int3
xchg
mov
sub
stos
out
mov
inc
jns
jmp
xchg
xlat
mov
lret
mov
scas
ret
jmp
or
je
pusha
adc
dec
push
mov
jmp
shlb
int
or
cmp
rcll
jp
add
shl
jo
and
jae
add
ds
aam
or
mov
lea
lea
into
fisubl
push
mov
xchg
stos
jns
sub
movsl
icebp
cmp
lret
cmc
push
inc
add
and
or
lret
divl
pop
jne
cwtl
push
cmp
inc
xchg
leave
mov
insl
dec
inc
call
lea
clc
fst
pushf
add
cs
pop
xchg
mov
push
push
hlt
fildl
jmp
in
call
push
xor
mov
lock
insl
mov
test
push
nop
gs
fiaddl
jnp
ret
mov
xorps
stos
inc
inc
fldenv
stc
xchg
scas
or
divb
int3
imul
ffreep
mov
stos
pop
lahf
pop
fstpl
call
lea
or
nop
push
mov
outsl
add
cmp
sub
inc
mov
enter
mov
dec
jne
pop
or
sahf
dec
sbb
jp
push
movsb
push
mov
inc
lcall
adc
gs
rcr
push
sbb
jo
dec
js
xchg
fidivl
mov
aam
jae
and
dec
std
addr16
cmp
out
das
inc
or
add
es
xchg
clc
add
mov
mov
stc
push
and
fs
and
fadds
repz
cmpsl
add
mov
push
shrb
iret
mov
stc
and
cmpsb
add
cmpsl
cmp
insl
lea
cmp
mov
fidivs
ljmp
sahf
test
push
imul
js
inc
out
ljmp
daa
jmp
test
pop
mov
sbb
xchg
mov
pop
and
cld
in
pop
repz
out
imul
mov
push
test
aas
out
pop
lock
add
ss
add
movsl
jle
push
nop
pop
leave
adc
push
sub
push
xor
dec
push
fistpl
inc
fistpl
out
push
shll
movsl
nop
jg
xchg
add
ficoml
aam
bnd
dec
jae
sbb
dec
xchg
and
test
out
adc
push
adc
aam
lahf
inc
jge
test
add
push
sbbl
jl
inc
in
mov
jecxz
sbb
inc
out
cmp
stos
sahf
or
int
mov
push
push
xchg
imul
frstor
cmp
gs
jmp
push
pop
outsl
dec
das
insl
push
jge
mov
push
sub
orl
cmpsb
jne
stos
pop
mov
jbe
sbb
and
clc
ret
cmp
add
cmpsl
sub
fs
bnd
testl
jne
loope
repz
dec
sbb
add
inc
dec
cmpsl
mov
sub
fsubrp
cmp
call
mov
daa
rorb
ljmp
ror
dec
sub
je
jno
mov
mov
out
movsl
int
lods
ss
loope
ljmp
push
mov
inc
int3
cli
leave
or
jl
lds
repz
fs
cltd
lcall
sub
sub
push
test
jge
out
xlat
ror
add
jnp
mov
shlb
lods
and
lret
mov
sbb
popw
repz
push
aaa
out
rcrl
loope
xchg
xchg
sbb
mov
stc
daa
dec
add
jmp
cmp
push
fidivrl
fldcw
and
cmpsl
add
ljmp
enter
jne
pop
insl
mov
ljmp
push
je
jo
mov
repz
aam
lods
loopne
sub
mov
jnp
add
cmp
sub
cltd
xchg
je
mov
mov
xchg
jo
test
push
movl
leave
add
pop
add
add
xchg
inc
pop
mov
aad
cmpl
sbb
mov
test
shl
mov
sbb
push
lcall
in
std
xorb
sub
inc
cwtl
jg
mov
scas
test
rorb
mov
fcoms
mov
or
pop
nop
and
inc
fstpl
test
test
ss
adc
test
movsb
pop
fistps
ss
cmp
push
mov
fyl2xp1
push
and
js
ret
outsl
bnd
mov
out
roll
bound
or
cltd
testb
push
or
mov
xchg
cli
xchg
les
sub
push
xchg
dec
addl
loop
jp
adc
arpl
stos
jge
and
or
fstps
sbb
push
cmp
movsb
jne
fwait
sbb
cmp
mov
sarl
xor
xchg
insl
sub
or
pop
outsl
jl
push
mov
cld
faddl
lods
xchg
dec
pop
sub
out
cs
mov
in
lret
jo
pop
aas
js
addr16
imul
popf
xchg
arpl
sti
test
dec
pop
scas
mov
jmp
out
xlat
popa
sub
jne
xor
in
dec
mov
adc
jo
add
push
bound
mov
xor
test
mov
inc
pop
mov
negb
fwait
int3
add
cmp
aaa
ret
sub
push
xchg
cmp
mov
lods
jmp
lods
nop
jecxz
nop
loop
repz
shl
test
fiaddl
mov
sbb
or
nop
out
jp
pop
mov
inc
lods
inc
xchg
pop
fldt
repnz
dec
lret
inc
sbb
bound
sbb
mov
inc
aaa
test
and
adc
stos
xor
sbb
sbb
rcl
pop
xchg
int3
scas
iret
hlt
and
adc
add
xchg
outsl
nop
rcrb
imulb
imul
bound
std
and
sbb
test
or
aad
jle
mov
dec
das
xorb
outsl
cmpsl
lret
gs
xchg
dec
test
mov
ret
test
fstpt
lods
inc
inc
jnp
jo
loop
inc
inc
popf
jl
mov
mov
pop
adc
and
adc
xor
jecxz
xor
add
enter
mov
cmp
adc
fdecstp
jmp
mov
adc
xor
xor
aam
addr16
pop
mov
pop
xchg
shlb
rcrb
insb
adc
mov
mov
mov
mov
jb
mov
adc
pop
inc
aad
sub
cmp
inc
mov
mov
ljmp
pop
outsl
cmpsl
xlat
scas
outsb
sti
xor
mov
pop
je
call
inc
cltd
repnz
pop
sub
in
ja
jge
outsb
lcall
and
pop
and
fcmovbe
dec
rclb
neg
push
je
outsl
adc
sub
cmp
std
in
int3
imul
xchg
xor
ds
call
mov
mov
adcl
add
sub
xlat
push
and
sbb
xchg
out
shlb
push
inc
mov
test
push
and
push
xlat
xor
xchg
in
cmp
pop
movsl
mov
and
lods
xchg
lret
or
je
dec
add
popa
je
mov
cmp
or
imul
or
add
mov
insl
loopne
std
mov
sbb
cmp
jmp
add
pop
xorl
inc
fcompl
imulb
gs
push
push
pushf
pop
std
addl
hlt
jns
pop
call
or
jo
cld
mov
xchg
xlat
mov
xor
inc
repnz
and
rcl
mov
adc
aam
cmpsb
push
js
ljmp
mov
jb
xchg
sbbb
pop
xchg
push
aas
dec
dec
idiv
mov
adc
insl
inc
adc
scas
xchg
xchg
loop
jmp
push
push
or
adc
lret
or
int
or
imul
fdivrs
enter
leave
popa
imul
popf
pop
adc
or
cmp
test
cmp
enter
andl
push
xor
or
sub
movsb
xchg
sbbb
lcall
cwtl
sbb
cld
xchg
mov
jge
mov
sbb
mov
push
ret
and
pop
adc
cmp
dec
mov
dec
sahf
shl
jns,pn
adc
mov
ret
push
lahf
lret
mov
pop
idivl
sub
push
fwait
imul
shll
icebp
mov
add
dec
cmc
rsqrtps
or
pop
dec
jle
pop
pop
or
jbe
popa
sahf
les
mov
cmc
mov
cmp
mov
sbb
or
fmull
mov
inc
stos
js
outsb
mov
jecxz
sbb
das
xor
mov
adc
rorl
in
das
jecxz
sti
inc
xchg
dec
jns
in
jne,pn
add
leave
andb
and
jb
out
adc
cmp
push
adc
or
cmp
icebp
stc
pop
lds
orb
inc
lds
call
pop
loop
xor
out
sub
ja
push
js
sub
xor
jecxz
or
adc
lahf
xlat
dec
test
cltd
sub
std
insb
dec
repz
les
mov
pop
jle
insb
mov
in
pop
dec
mov
das
test
lds
mov
xor
clc
and
inc
rcll
leave
int3
pushf
call
sbb
push
mov
ret
mov
and
jge
imul
loope
sbb
sbb
dec
out
scas
data16
or
dec
push
xchg
inc
xchg
dec
and
outsb
push
ret
das
rcll
imul
negl
sti
es
cmp
mov
mov
mov
lods
insl
mov
test
fnstcw
jnp
xor
cmpsl
cmpsb
and
scas
push
jge
lock
out
mov
repnz
pop
sub
arpl
inc
test
ss
or
mov
fsubs
dec
push
leave
test
das
test
out
mov
lcall
pop
cmp
mov
sbb
mov
jge
insb
adc
or
pop
fxtract
fldlg2
cmp
and
test
push
jns
in
das
mov
pop
and
mov
cmpsl
stc
stos
and
ss
sub
mov
in
jge
popa
in
in
shll
xchg
mov
testb
stos
ret
adc
jp
nop
ret
push
push
xchg
jns
push
cmp
sub
and
lods
add
jg
inc
roll
xchg
cmp
in
int3
sbb
loopne
jae
push
cmp
jae
jge
pop
stos
jg
clc
inc
pop
mov
clc
lods
xor
jl
jns
jno
push
pop
dec
lret
ret
insl
xchg
xchg
mov
inc
mov
mov
sahf
jle
and
pop
ret
push
jae
xor
sbb
xchg
xchg
mov
les
mov
ds
xor
aaa
jno
push
push
or
adc
call
popa
sbb
aad
xor
add
jl
divb
cmpsb
lock
call
adc
gs
lea
adc
sub
push
jecxz
mov
aad
es
hlt
xchg
push
jg
xchg
fisubs
subb
repz
sbb
or
gs
clc
js
jle
cmp
popf
adc
mov
inc
shll
mov
inc
fwait
je
xchg
ror
dec
sbb
data16
nop
in
ss
inc
push
jmp
das
sarb
aas
arpl
xor
mov
test
lock
stos
pop
dec
icebp
test
dec
sbb
movsb
mov
pusha
sub
mov
xchg
test
mov
lock
movsb
dec
rolb
lds
hlt
sub
mov
add
sub
mov
call
js
or
sbbb
shlb
sbb
fidivl
sbb
and
decl
inc
shlb
add
adc
add
mov
dec
or
sbb
lcall
or
movsb
xor
lahf
mov
insl
gs
fiaddl
pop
jnp
mov
pop
jne
push
out
shl
dec
test
test
fisttpll
jb
icebp
add
int
scas
mov
test
in
sbb
setae
pop
iret
pop
jecxz
xchg
ss
adc
lods
push
mov
xor
adc
fsubrs
xor
sub
js
into
push
xor
lret
mov
sbb
inc
mov
jae
inc
add
push
dec
xchg
mov
sub
cmp
add
jl
xchg
lea
xchg
xor
push
push
push
pop
std
lds
cmp
dec
push
fnstcw
loope
das
mov
fsqrt
or
movsb
popf
jns,pt
lret
and
or
xchg
cli
std
outsl
dec
pop
dec
sbb
push
mov
xchg
mov
outsb
cmp
ljmp
xchg
and
jg
int3
test
leave
push
push
imul
outsl
adc
sti
and
pop
or
mov
out
mov
int3
or
xor
das
adc
jle
ror
iret
mov
push
mov
sub
test
lods
adc
mov
or
push
jae
xchg
mov
adc
daa
jo
push
ret
lcall
mov
inc
mov
in
mov
ja
mov
push
inc
lods
std
sbb
sbb
add
mov
aas
fistpll
fldenv
or
mov
sbb
pop
repnz
aaa
ss
sbb
and
or
pop
inc
inc
mov
xchg
push
xor
stos
pop
mov
jp
in
push
mov
mov
cwtl
pop
in
bound
addr16
in
pop
or
mov
mov
mov
cltd
or
or
mov
add
bound
cli
sbb
ficoml
xchg
mov
mov
mov
sarb
pusha
aam
dec
out
xchg
ss
cmpsb
movsb
adc
push
mov
mov
pop
jne
int3
and
scas
jp
lods
rcrl
dec
sub
push
in
lret
inc
adc
pop
jnp
xchg
xchg
jne
lret
insl
insl
test
inc
cmp
push
cmc
jmp
dec
loope
lret
cld
aaa
das
cmp
push
in
addr16
pop
out
pop
lock
xchg
mov
pop
cmp
adc
push
cmp
mov
imul
js
push
and
ss
push
add
adc
mov
in
push
and
addr16
cltd
cltd
decb
push
dec
dec
xor
pop
das
adc
xor
mov
xchg
inc
arpl
loopne
pop
outsl
ljmp
lcall
psubw
es
sbb
aad
mov
jne
dec
mov
push
cltd
movsb
dec
mov
or
sub
ja
pop
aad
push
push
add
add
mov
jae
test
in
or
or
and
ljmp
jg
push
add
or
inc
iret
dec
js
and
lods
mov
out
pop
jg
jl
lods
add
cmc
lret
push
dec
in
imul
xchg
xchg
push
filds
scas
clc
movsl
mov
mov
test
pop
shlb
push
lock
mov
dec
mov
popf
sub
pusha
ret
jl
mov
and
mov
aad
dec
pop
movsb
jl
aam
les
mov
mov
pop
enter
ds
xor
loope
add
enter
inc
push
addr16
daa
and
mov
inc
daa
add
stos
jle
in
and
out
lret
mov
inc
mov
movsb
push
pop
hlt
repz
adc
bound
int3
dec
jge
add
sbb
mov
dec
sub
insl
inc
sarl
xchg
jns
scas
lods
mov
fs
dec
mov
inc
inc
pushf
roll
dec
cmp
int
lea
xchg
jo
sub
cli
lods
pusha
mov
mov
and
fucompp
push
mov
jmp
push
xchg
lea
imul
mov
iret
push
mov
dec
arpl
push
push
sti
jae
inc
clc
clc
rorb
imul
cmp
icebp
icebp
xchg
add
test
xor
jle
outsl
imul
hlt
lret
call
dec
das
mov
push
push
mov
shr
push
sbb
xchg
neg
add
insl
add
cmpsb
mov
arpl
dec
cwtl
fidivrs
sti
cmp
jbe
mov
loop
jo
or
xchg
scas
idivl
jne
dec
aam
lret
jle
nop
dec
cmp
mov
jg
test
in
inc
push
jl,pt
xchg
sti
and
add
sub
mov
addr16
jae
dec
aas
jae
mov
xchg
sbb
sbb
cwtl
call
imulb
inc
stos
aad
mov
popf
cltd
xchg
adcl
and
mov
mov
pop
adcl
pop
in
lods
std
js
imul
and
fistpl
and
fsubrs
popf
push
xor
ja
mov
jbe
xchg
add
jb
cmp
and
push
pop
push
call
loopne
mov
mov
ljmp
mov
jle
mov
xorb
jo
mov
dec
sub
push
roll
jnp
std
inc
mov
in
push
shll
pushaw
sbb
mov
scas
sahf
sbb
push
nop
cmp
add
imul
fimuls
xchg
or
sbb
push
lea
rorb
and
lock
js
mov
sbb
test
xlat
sub
lods
mov
pop
loopne
mov
mov
sbb
in
fisttpll
push
mov
rclb
jns
fwait
test
push
cwtl
or
inc
add
sti
add
loope
iret
inc
pop
negb
es
jo
out
in
inc
push
add
data16
cmp
arpl
orb
inc
pop
pop
mov
stc
imul
movsb
cmp
call
outsl
mov
dec
ret
data16
fsqrt
dec
or
ret
jp
inc
ja
lds
push
inc
mov
loope
call
or
xorl
arpl
xor
adc
adc
pop
test
ja
mov
jecxz
sbb
xchg
xor
lret
dec
inc
inc
push
sarl
imul
cld
ds
push
add
and
sub
popa
cmc
mov
aad
adc
mov
inc
dec
mull
push
add
jne
mov
push
adc
popa
adc
sub
add
dec
mov
mov
xchg
dec
test
mov
jo
jge
in
fsubs
insb
xchg
je
xchg
sub
and
insl
or
jge
les
cmp
clc
leave
daa
xor
mov
fst
repnz
movsb
sub
push
inc
fwait
lcall
mov
rol
fidivrs
popa
or
fsubrl
push
in
and
xor
loopne
dec
mov
xchg
sbb
inc
es
test
adcb
mov
push
cmpsb
jl
aad
add
loope
das
roll
leave
or
outsb
aam
roll
popa
movsb
or
xchg
mov
jp
dec
add
icebp
nop
adc
shll
inc
sbb
rcr
jg
mov
xchg
jo
shlb
lea
aam
jno
mov
cmpsl
add
mov
sub
enter
idivb
mov
es
xor
pusha
into
in
xorb
mov
mov
cmp
jl
hlt
or
scas
push
pop
mov
xor
add
jecxz
and
jo
ret
mov
lds
mov
lea
mov
shlw
push
cmpsl
cmp
movsl
xor
sbbb
or
mov
hlt
dec
popa
outsb
sbb
aam
cmp
iret
and
call
sbb
xor
ja
sub
jg
and
aas
push
cmp
test
mov
aad
pop
test
orb
loope
inc
xor
xor
es
push
xor
pop
inc
push
lcall
daa
pop
dec
mov
mov
ss
xchg
pop
loop
cwtl
push
int
hlt
ljmp
aam
add
jns
lock
scas
push
xchg
jns
test
and
xchg
cmp
jecxz
es
mov
not
arpl
mov
arpl
test
adc
lcall
jmp
or
pop
daa
out
xchg
mov
xchg
fmulp
cmovne
fdivrs
imul
mov
cli
popf
and
movsl
push
icebp
mov
jns
mov
scas
imul
dec
pop
and
imull
xlat
mov
or
rolb
test
inc
dec
pop
cmp
or
mov
test
dec
clc
mov
and
stc
in
pop
cwtl
out
lcall
stc
mov
lods
out
inc
mov
inc
pop
add
daa
mov
cltd
add
popa
cmp
out
xor
lods
bound
pop
mov
mov
add
inc
sbb
adc
imul
mov
fwait
mov
sbb
mov
div
xor
jp
pop
js
cmp
lods
xchg
ret
jg
push
cmp
dec
jae
cmp
sbb
sub
inc
sahf
mov
bound
pop
ja
inc
sahf
inc
xchg
sub
pop
shlb
dec
adc
fstps
test
lahf
imul
push
rcrb
sub
imul
in
pop
jmp
rorb
xchg
scas
lds
enter
or
pop
mov
mov
adc
cmp
jnp
fistpll
adc
cs
mov
mov
clc
fidivrl
mov
mov
call
mov
test
jg
sbb
mov
into
add
test
lahf
xor
cli
push
sbb
sub
pop
mov
adc
aas
push
xlat
mov
push
popf
pop
mov
ret
cmp
jbe
mov
repnz
pop
outsl
sub
je
mov
loopne
sbb
jp
cs
jbe
push
repz
icebp
gs
mov
rcr
mov
das
mov
ror
pop
pop
dec
cwtl
and
fcoms
xor
or
sub
jns
push
and
js
sbb
pop
cmc
cmp
inc
or
push
daa
mov
aaa
stc
mov
out
push
test
mov
roll
ret
xor
mov
push
loop
pop
lcall
cwtl
push
dec
into
jne
jne
jp
push
mov
jo
adc
bound
ficompl
push
mov
mov
hlt
jg
cmp
sub
dec
jecxz
jne
xchg
fbld
cmp
add
test
mov
jg
mov
push
and
negl
xor
fwait
lods
sbb
push
scas
pushfw
dec
rorb
sbb
sarl
sub
lods
fstps
insb
mov
xor
test
lahf
mov
dec
std
sbb
daa
out
ja
scas
les
xor
sub
pusha
mov
xchg
aam
out
push
dec
outsb
aaa
bound
mov
xchg
adc
testl
test
jmp
rcl
int3
pop
aaa
lahf
add
icebp
cmp
mov
mov
mov
xor
sqrtps
js
test
push
sub
adc
inc
sub
jge
lahf
pop
ret
aad
push
xor
pushf
gs
fmulp
adc
iret
xchg
stos
mov
mov
jp
xor
test
stc
push
imul
sbbl
addr16
pusha
inc
push
push
mov
add
jmp
add
lock
jle
repz
popf
push
pushf
aas
mov
ret
mov
or
outsl
gs
and
xor
insl
and
mov
mov
dec
loop
fmull
mov
lock
jl
inc
cwtl
ja
idivb
add
sbb
nop
rcrb
fcmovnu
mov
and
popa
jne
xor
rorb
mov
andb
rcll
notl
in
jge
push
jns
roll
cmp
push
push
scas
aam
adc
cmpsl
xor
xchg
add
xor
mov
lahf
jg
push
scas
sub
sub
retw
mov
mov
pusha
into
out
stos
sbb
xchg
gs
or
xor
insl
cmc
cmp
fidivl
ljmp
into
pusha
pop
int
fstp
pop
std
jle
daa
ljmp
push
pop
jl
lock
adc
jp
mov
xorb
cmpsl
push
pop
loop
prefetch
or
cmp
sahf
xor
shll
popa
push
scas
rol
inc
push
cmovnp
jnp
cmpsb
pop
xchg
imul
pop
xor
clc
in
lahf
push
gs
je
cmp
and
in
jb
and
ret
bnd
and
pop
jo
fs
or
adc
jne
mov
xchg
or
mov
loop
cmpsl
and
outsl
leave
mov
pop
push
or
in
mov
or
cmpsl
incb
mulb
out
xor
add
cs
push
mov
addr16
sub
push
sub
jae
subl
lcall
pop
andb
dec
mov
leave
dec
push
jl
mov
or
pop
inc
scas
jge
mov
stc
cmpsb
jno
cmp
test
stos
stc
inc
or
cmp
or
mov
ljmp
popf
out
adc
imul
mov
mov
pop
int3
sbb
roll
or
jle
outsb
and
inc
fisubs
adcb
dec
mov
movsb
jno
inc
arpl
mov
push
push
mov
sub
sub
mov
or
mov
in
outsb
add
out
mov
fbstp
mov
aad
sub
adc
and
push
test
cmp
mov
stos
stos
xchg
and
les
popa
test
jno
add
ret
add
test
nop
in
sub
xor
cwtl
std
jnp,pn
mov
adc
std
aas
jns
mov
out
int3
cmc
mov
cld
and
sub
pop
mov
cwtl
add
sub
pop
mov
lock
jbe
xchg
inc
pop
aad
push
fldl
or
push
cmp
jge
inc
sbb
cmp
loopne
or
dec
jle
roll
cmp
popa
dec
dec
clc
das
inc
imul
test
fcmovb
and
lods
push
adc
jae
xlat
adc
sub
mov
icebp
jmp
xor
lods
xchg
xchg
je
or
jno
fcomps
cmp
popl
mov
les
jno
mov
fstps
inc
loop
push
xchg
ret
adc
fsubr
dec
movsl
xchg
adcl
ret
aas
push
in
ja
add
aad
popf
js
icebp
lret
add
lock
lahf
adcb
mov
lcall
dec
sbb
cmp
xor
imul
cld
out
lret
data16
inc
out
xor
push
lret
jbe
jge
push
add
int3
add
and
fisubl
hlt
loope
into
les
or
hlt
push
push
mov
push
fs
cmp
repz
cs
mov
mov
mov
pushf
xchg
outsl
loop
enter
ror
mov
adc
dec
shlb
daa
bound
mov
push
test
and
insl
les
mov
cmpb
icebp
js
dec
rorb
lock
es
mov
fs
mov
mov
je
pop
and
mov
jle
pop
aad
cmp
call
mov
jno
divl
pop
push
les
orl
push
mov
dec
dec
xchg
mov
test
xchg
xor
pusha
lea
or
xor
sbb
std
outsl
dec
repz
xchg
lcall
paddq
stos
lock
movsl
out
in
lcall
cmpsb
popa
jne
mov
or
js
nop
in
xor
xchg
test
mov
dec
xchg
dec
mov
notb
jbe
sbb
rcl
push
outsb
mov
mov
mov
jle
xor
jno
pop
into
in
sub
cwtl
rolb
stos
mov
xor
icebp
inc
sub
sbb
dec
push
xor
ljmp
inc
test
sbbl
call
mov
into
cld
xchg
loopne
mov
mov
into
sub
insl
dec
push
aaa
push
in
jg
sub
call
sti
or
loop
clc
or
mov
ds
mov
lods
jbe
out
sbb
jb
lret
aad
xchg
pop
pop
in
jge
add
push
mov
sub
stc
mov
pop
rclb
sub
inc
xor
sub
cltd
jp
lock
sarb
sub
lcall
ret
dec
xchg
cmpsl
pusha
mov
lods
inc
js
adc
iret
lea
ljmp
ret
sbb
jo
sub
xchg
and
and
sahf
jg
imul
xchg
inc
sub
lcall
mov
add
clc
jno
enter
mov
push
ja
cwtl
fisubl
cltd
push
lret
sar
negl
pop
jns
dec
mov
pop
pop
or
pop
loope
decb
fidivl
sti
mov
sbb
lcall
pop
cmp
push
sub
mov
leave
cmc
sbb
add
mov
mov
fbld
xor
pop
enter
xchg
xor
mov
mov
add
pop
lcall
fisttpll
pop
icebp
in
sub
cmp
xor
mov
push
loop
mov
cmp
or
int3
lds
out
in
xor
enter
js
xchg
xor
dec
cmp
in
lock
jb
add
sahf
js
icebp
pop
xor
jnp
shll
adc
jnp
cmp
test
cltd
or
mov
xor
repz
cwtl
jmp
sub
clc
and
clc
test
inc
out
add
jo
fisubs
ror
jl
mov
incl
push
cmc
movsb
pop
push
int3
test
repz
and
add
mov
scas
and
xor
xchg
pop
mov
jmp
cltd
ljmp
aas
ss
loope
in
xchg
push
inc
jmp
mov
arpl
out
out
inc
fcompl
out
out
fstps
pop
cs
sbb
and
and
mov
sub
popl
push
and
xchg
gs
loope
or
and
lds
jbe
jmp
xchg
cli
test
xchg
iret
sahf
push
es
jo
add
sbb
popa
cli
or
dec
jae
fisttpl
aaa
js
xor
in
sahf
out
dec
inc
inc
fyl2x
cmp
rclb
dec
call
xor
fwait
outsb
aam
add
sbb
shrl
jmp
pop
popa
rcll
cmpsb
or
inc
shrl
sbb
les
notb
cmp
jb
ror
shrb
pop
xor
cwtl
pop
call
jo
lods
movsl
dec
or
or
in
sbb
jno
dec
pop
outsb
mov
xchg
jle
pop
adc
int3
push
push
pop
es
mov
es
push
inc
or
mov
stc
vpunpcklbw
jb
cmpsl
push
vpcmpgtw
cmp
and
mov
add
and
mov
loopne
outsl
out
movsl
push
sub
ficoml
mov
and
insl
inc
push
xchg
or
push
adc
outsl
add
aas
xchg
cs
je
cmp
das
and
sbb
leave
jae
movsb
fsub
xchg
popf
cld
lods
inc
in
test
pop
out
lcall
jp
pop
and
lods
fisubrs
nop
xor
adc
push
jp
xchg
addb
push
and
jmp
test
pop
aad
and
ret
or
fucomip
jno
into
divl
cmpsb
ja
in
add
in
loope
mov
mov
inc
scas
lea
sub
imul
jl
scas
adc
fdivrp
fs
aaa
out
mov
cmp
fwait
inc
cmp
mov
popf
mov
mov
mov
push
fs
xchg
mov
shrb
aam
sbb
push
pusha
add
dec
test
mov
out
ds
adc
jns
push
mov
lret
std
jnp
movsl
loopne
bswap
jns
lods
push
gs
testl
aad
adc
mov
clc
push
pop
or
stos
scas
jle
adc
sbb
jg
nop
fists
nop
or
push
scas
pop
mov
sbb
sbb
mov
jecxz
test
cmc
sbb
fs
xchg
les
icebp
into
sub
xchg
adc
mov
mov
xor
repz
test
or
iret
xor
movsl
lods
aam
xchg
sahf
repnz
adc
fisubrs
iret
cmc
aaa
dec
cmp
in
sbbl
rclb
pop
call
add
mov
js
stos
pop
sbbb
rclb
mov
cmp
xchg
adc
dec
out
pop
cmp
or
inc
push
sbb
pop
fwait
imul
js
orb
cmp
fsubs
jno
mov
jg
popf
sub
aad
lahf
adc
cltd
sbb
lods
add
lcall
push
pop
lcall
mov
loope
jo
mov
cmp
out
or
jnp
insl
dec
dec
and
sbb
out
mov
push
ja
arpl
cli
lea
in
cmp
mov
stc
xchg
xlat
sub
out
imul
mov
int
arpl
mov
cltd
mov
mov
popa
sub
inc
cmp
xor
mov
mov
sub
push
jge
sbb
js
or
or
outsb
out
ljmp
das
mov
les
push
sarb
inc
lods
xor
cmp
mov
lods
jl
ffreep
adc
test
lods
mov
mov
pop
repnz
shll
add
loop
mov
rorb
pop
in
aam
or
outsb
dec
push
arpl
sub
loope
jns
cmp
jo
or
insl
les
notrack
pop
jecxz
push
cli
daa
cmp
dec
popa
push
lea
push
mov
cmc
fxch
push
test
xor
xor
or
lcall
mov
cmp
jle
inc
ficoms
je
popf
movsb
dec
sub
xor
out
mov
out
out
or
xchg
xchg
add
bswap
push
mov
push
mov
dec
xlat
mov
and
pop
jb
jp
shrd
movsb
jg
cli
out
jecxz
mov
mov
mov
repz
mov
or
dec
mov
mov
mov
addb
aad
nop
out
shlb
dec
lret
testb
xor
inc
sti
inc
enter
mov
pop
fbstp
pop
repz
mov
stos
in
push
push
ljmp
fdivp
push
fiadds
mov
push
sub
push
xor
pop
cmp
in
add
mov
roll
loopne
out
jl
js
push
sbb
pop
mov
movsl
cld
dec
inc
pop
ljmp
xor
add
pop
inc
or
in
mov
xchg
arpl
jge
and
cld
nop
mov
fldt
roll
aam
mov
mov
lahf
xchg
hlt
jl
lds
xchg
lcall
adcb
xor
sti
lret
popf
shr
or
data16
dec
mov
rcrl
xchg
test
xor
pop
repz
loop
jae
push
dec
mov
es
cmpsl
jnp
mov
inc
out
pop
lret
shlb
cli
add
iret
arpl
sub
mov
mov
dec
stos
mov
mov
sti
lock
inc
shl
push
ljmp
fidivrs
leave
mov
mov
data16
loopne
mov
gs
dec
push
sub
unpckhps
mov
sbb
lods
shrb
lret
cli
cmp
aam
gs
inc
jns
test
cltd
loopne
in
sub
orl
rolb
adc
fwait
insl
in
adc
mov
call
notl
xchg
dec
rorb
loope
clc
in
les
jbe
frstor
sahf
xorl
aas
jge
push
inc
es
ds
lods
pop
int3
hlt
lock
int
loopne
mov
mov
cmp
inc
out
sbb
mov
daa
sub
mov
shlb
repz
imul
xchg
movsl
pop
pop
jge
outsl
popf
pop
cmp
movl
mov
cmp
mov
inc
cmp
cmp
stc
mov
mov
rsm
mov
mov
and
push
xorl
xchg
add
dec
mov
pop
and
push
pop
out
lds
and
std
test
lock
adc
mov
mov
push
test
mov
popa
outsb
and
dec
cmc
or
xchg
clc
stos
int3
loopne
sar
hlt
sti
fabs
push
and
mov
pop
shlb
and
fstpt
sbb
loop
xchg
push
imul
stc
xchg
fnsave
mull
nop
lgs
out
fisttpll
mov
fidivl
shrb
dec
mov
hlt
cmp
inc
adc
shrb
mov
jg
roll
insb
sbb
push
std
mov
addb
or
int
xlat
add
imul
push
pop
add
pop
jecxz
into
adc
add
fmuls
adc
xchg
negl
fld
ret
loopne
dec
dec
sub
repnz
mov
repnz
pop
rcrl
call
add
mov
dec
mov
testb
cwtl
loopne
xchg
scas
shl
mov
inc
movsl
xor
or
sar
loope
xor
fdivrp
xchg
mov
loopne
mov
test
adc
and
fimull
push
clc
or
xor
push
lods
lcall
in
xchg
fisubrs
jle
dec
fmull
mov
fmul
fstpl
cs
xchg
stos
pop
andb
repnz
xchg
ret
fsubs
xlat
jno
dec
leave
es
lock
nop
and
out
and
in
imul
lods
lahf
clc
insb
mov
cmpsb
filds
adc
mov
inc
test
dec
aaa
pop
push
dec
push
dec
lret
add
in
mov
or
pop
sbb
pop
and
inc
cmovne
sarb
mov
ret
and
pop
jbe
mov
popf
shlb
adc
aam
movsl
mov
aas
pop
mov
mov
xchg
jbe
pop
fcomip
xchg
xchg
add
xchg
icebp
ret
stos
lret
dec
mov
ror
push
mov
sti
mov
cmpsl
dec
add
cmpsl
aad
sbb
xchg
and
fcomi
ljmp
ja
scas
xor
arpl
in
mov
pusha
fnstenv
in
fwait
xchg
pop
lcall
jae
push
dec
push
ds
mov
xchg
push
xchg
mov
xchg
sbb
xorl
lods
fimuls
dec
jbe
jae
or
or
fbld
inc
stos
and
jg
cmp
gs
and
sub
jnp
fcomp
ja
jb
ja
lcall
push
inc
shlb
adc
outsb
jns
push
movb
inc
and
jne
ss
mov
xchg
aam
jae
xorl
lock
sti
out
jb
add
cmp
testl
cmpsb
lds
xor
pushf
int3
xchg
sbb
mov
ljmp
push
fisubrl
adc
jno
dec
add
jne
sbb
mov
xor
jge
or
push
out
mov
je
mov
push
mov
jl
les
xchg
daa
adc
mov
cmp
inc
cmpb
add
fnstcw
xor
mov
stos
jnp
mov
push
mov
cmpsb
mov
test
xor
pop
orb
add
dec
mov
ljmp
mov
mov
lea
jno
jb
inc
mov
add
sub
pop
out
cmpsb
movsl
insb
pop
pop
adc
xor
addr16
ficomps
out
aas
and
fwait
clc
sbb
cmpsl
mov
and
mov
push
mov
pop
ffree
push
add
pop
lds
cmp
and
arpl
add
sub
call
aas
sbbb
jmp
adc
lret
pop
test
xchg
fs
lea
push
jecxz
das
std
jge
xchg
jp
mov
push
jmp
cwtl
imul
loop
xchg
das
pushf
lea
rol
inc
cs
add
in
cmc
test
test
push
movsb
sub
mov
lds
scas
jl
in
leave
pop
addr16
mov
sub
xor
std
cmpsl
clc
add
cmp
test
and
imull
mov
add
test
sub
insb
inc
out
movb
iret
jg
push
adc
and
sbb
imul
mov
bnd
fcoml
es
sub
push
in
insb
dec
lds
mov
je
movsb
add
add
inc
xchg
push
push
jno
repz
and
inc
mov
test
arpl
mov
shll
aaa
cmpsb
push
jno
xchg
cli
rorb
add
lahf
add
leave
subl
scas
adc
jns
rcr
add
sarb
sysenter
or
test
mov
shr
dec
fisttpll
add
add
pusha
add
fimuls
hlt
lret
push
push
mov
cmp
popf
aad
rorb
sub
or
fiaddl
frstor
and
fcomp
test
dec
arpl
jns
aaa
push
sbb
pusha
xor
shrb
xor
into
add
xchg
cmp
popl
dec
push
ljmp
jb
mov
add
dec
cmc
ficomps
inc
fcomps
ret
jge
lods
lods
push
out
mov
jp
or
mov
flds
ret
and
ret
jo
movsl
sub
mov
test
aaa
rolb
dec
push
clc
ret
sbb
incl
push
fimull
xlat
mov
add
push
repz
jae
cmpsl
cmp
mov
and
dec
gs
xchg
add
addb
shl
out
test
dec
xchg
and
push
xlat
in
xchg
push
fwait
cmp
push
rcl
jne
lret
cmc
xchg
lods
cmp
xor
mov
sub
adc
push
pop
push
ja
inc
jecxz
ljmp
dec
mov
fsubrl
popf
xor
xor
fcompl
ljmp
add
and
adc
push
lcall
and
cmp
adc
mov
xchg
and
in
aaa
push
clc
nop
cmp
push
lcall
mov
jmp
push
loopne
nop
cmp
je
mov
aaa
icebp
mov
in
cmpsb
cmpsb
jg
insb
outsl
or
sub
dec
mov
fs
icebp
pop
jbe
pop
out
mov
dec
imul
add
popf
pop
xchg
leave
sbb
mov
fxch
mov
aad
xchg
cli
inc
pop
sti
pushf
fmull
jg
insb
lock
jb
lods
ffreep
movsl
inc
mov
dec
pop
mov
jmp
imul
and
push
dec
cld
les
jb
xchg
lahf
test
push
mov
icebp
or
sbb
insl
cmp
in
dec
mov
repnz
xor
inc
lea
push
lods
in
sub
push
xchg
stc
xchg
jnp
ss
fadd
sub
rcrb
aam
inc
mov
out
and
jle
shlb
lcall
dec
jg
jnp
dec
ljmp
dec
sbbb
xchg
inc
inc
cmc
pop
test
cmc
dec
xor
adc
jbe
jne
out
xor
mov
xchg
jnp
xor
fwait
sub
pop
fdiv
in
fiaddl
aaa
std
rcrb
inc
stos
xchg
cmp
loopne
inc
push
cmp
or
dec
xor
lods
mov
push
popa
xor
add
cmp
cmp
adc
mov
or
divl
pop
adc
jo
xor
mov
inc
jo
push
dec
enter
cmp
sub
sub
mov
sub
cwtl
fcoml
test
lds
adc
mov
shll
cmpsl
or
mov
push
not
or
in
loope
rorb
std
clc
or
insb
lods
aam
sahf
fsubp
pop
xchg
test
inc
xor
inc
icebp
add
dec
ret
xchg
push
cmc
push
call
inc
js
call
jnp
enter
popa
and
mov
fisubrs
cmp
fucomip
push
or
add
push
es
scas
xchg
cmp
or
inc
inc
adc
push
sbb
push
push
call
cltd
mov
cld
xor
jbe
cwtl
or
cmovge
dec
xchg
push
sti
arpl
dec
adc
push
cmp
xchg
mov
fdivs
and
mov
sbb
jne
arpl
mov
aad
adc
mov
les
in
movsl
dec
jbe
test
fiadds
aas
pop
cmp
incl
pop
paddq
out
fcoms
lds
sub
stos
sbb
jecxz
xchg
jns
push
pop
dec
ljmp
mov
shrl
ljmp
jns
int3
xchg
popf
dec
pop
sbb
inc
xor
loop
rcrb
mov
mov
aas
inc
lcall
cmpsl
pushf
mov
pop
xchg
push
flds
bound
cmc
or
adc
lods
mov
jg
or
pusha
pushf
sbb
cmc
jns
mov
loope
add
dec
fiaddl
xchg
loopne
int3
jl
mov
iret
cli
cli
inc
cltd
xor
mov
loope
adc
loopne
andps
mov
sub
add
roll
sahf
mov
out
mov
mov
pop
sub
insl
or
dec
lret
or
cli
cmpsb
pop
mov
sbb
xchg
xor
imul
add
push
jne
out
movsl
mov
xor
pop
test
sub
inc
or
sbb
popa
enter
jge
dec
mov
jp
and
fucomip
out
sbb
xchg
orl
mov
insl
mov
bound
lahf
mov
notb
fcmovbe
push
call
jne
rorb
dec
mov
jnp
jp
mull
mov
mov
sahf
mov
sbbl
push
cmp
adc
out
outsb
or
push
or
jmp
jmp
sub
sarb
out
or
push
push
scas
outsb
xchg
sbb
aam
ffreep
fwait
add
push
jns
add
sub
das
out
and
aas
sti
stos
jnp
mov
mov
mov
lahf
or
inc
repnz
xchg
cmp
rcr
fmul
call
mov
ds
mov
mov
lods
mov
mov
shll
imul
rclb
iret
mov
data16
push
lcall
outsb
xor
adc
hlt
jmp
sarb
push
sbb
bound
sub
fisubrl
mov
jbe
push
les
pop
mov
dec
xchg
mov
lea
dec
stos
jb
and
xor
or
cmp
fwait
xorl
xorb
add
push
mov
push
das
push
or
ja
inc
pop
add
cmc
clc
lcall
pop
cmp
adcl
mov
jge
pop
repz
pop
jae
inc
jmp
popa
mov
popf
cmpsb
movsb
imul
cwtl
into
xor
mov
cmp
mov
inc
sub
sahf
mov
mov
mov
add
jg
sub
pop
xchg
or
je
incb
jno
call
ret
rorl
out
cld
dec
sarl
adc
or
lds
loope
mov
les
sarl
xorb
cs
arpl
push
fs
push
xchg
mov
mov
dec
mov
xchg
faddl
test
pop
in
popf
pushf
cwtl
xchg
dec
mov
mov
xor
pop
scas
mov
push
jbe
push
in
push
popa
xor
inc
ret
mov
out
push
pop
fcomps
mov
sbb
jno,pn
je
lods
push
sub
dec
or
sub
dec
lock
sbbb
cmpsb
loope
cld
movsl
push
pop
mov
mov
pop
test
fsubr
jecxz
arpl
push
sub
xchg
ss
test
scas
aad
mov
mov
std
push
mov
and
cmpsl
pop
popa
loope
cmc
clc
in
and
mov
adc
pop
push
bound
inc
in
dec
pop
push
jae
scas
lds
push
inc
mov
movsb
add
dec
sub
sbb
idiv
xor
popa
test
test
and
inc
or
orl
sbb
lahf
xchg
hlt
dec
mov
push
testl
push
aas
or
mov
repz
shll
dec
lret
aaa
mov
sub
cmpl
lds
jg
mov
and
or
sbb
dec
cmp
sbb
ljmp
push
cmc
and
mov
add
shld
jle
loope
mov
pop
jmp
mov
fwait
pushf
dec
scas
int3
loope
nop
xchg
or
mov
dec
inc
hlt
inc
daa
js
and
cwtl
xchg
mov
popf
pop
test
adc
jl
xor
aas
inc
fdivs
add
xchg
push
mull
leave
pushw
leave
xchg
callw
jmp
fs
aam
add
dec
inc
mov
std
aad
dec
fwait
push
push
inc
mov
and
inc
dec
jmp
jno
pop
popf
scas
or
dec
pop
pop
add
cmp
lock
xchg
aaa
loopne
dec
inc
mulb
pushf
inc
and
and
adc
jge
fsubrs
les
pushf
mov
stc
int
xchg
dec
es
int
andb
out
dec
cmp
xor
aam
iret
mov
lods
cmp
ss
out
dec
add
gs
push
or
mov
or
add
ss
pop
pop
inc
gs
pop
mov
jmp
inc
dec
mov
mov
enter
orl
xor
lods
sti
cs
daa
xor
sti
lds
pop
pop
and
lea
add
clc
lea
mov
aad
and
xchg
mov
adc
popa
out
shll
flds
jmp
ljmp
mov
fistl
cltd
xchg
inc
iret
aad
dec
rclb
fs
lods
xchg
out
xchg
lret
sbb
nop
pop
lahf
and
shl
push
cmpb
mov
hlt
fstpt
negl
lahf
ds
cmp
lcall
xchg
scas
add
push
scas
push
fsubl
mov
jae
out
jno
and
stos
outsl
cld
fdivp
aas
inc
or
jns
pop
inc
in
mov
fimuls
pop
es
pop
xchg
dec
repnz
xchg
pop
ficoms
filds
stos
mov
leave
fcomip
cld
out
mov
cltd
lods
fiaddl
or
and
pop
popf
mov
iret
sub
movl
mov
mov
ja
out
push
xchg
xchg
jg
rolb
pop
scas
xchg
jns
insb
and
es
push
sub
xchg
js
std
int3
mov
dec
xchg
push
ss
ret
sub
sub
cld
popa
stos
dec
pop
insb
repz
inc
push
scas
push
pop
adc
outsl
dec
mov
jle
popa
scas
jne
ja
mov
movsl
movsb
xchg
push
adc
les
or
movsl
imul
loopne
lea
lods
mov
dec
mov
push
movsl
cmpsb
xchg
movsl
cmpl
sti
je
inc
lock
adc
loopne
inc
push
movsl
ss
nop
xor
sbb
adcb
dec
cmp
inc
cmc
mov
xor
pop
hlt
pop
cmp
ret
cmpsb
mov
inc
loope
inc
imul
sbb
lds
mov
mov
xor
lods
jp
add
mov
dec
jmp
scas
gs
pushf
leave
cmpsb
pop
or
fistpl
cmpsb
arpl
lea
repz
hlt
mov
in
imul
or
sub
dec
xor
das
rcl
mov
movsl
mov
jmp
add
addr16
stos
jno
sub
daa
jg
sbb
jp
add
loop
mov
in
or
fptan
ret
sbb
pop
cs
mov
or
dec
xlat
or
mov
testb
mov
lock
mov
push
in
mov
lock
aam
in
fcom
dec
popf
call
js
addr16
sub
arpl
aaa
cld
mov
pushl
pusha
bound
ret
fildl
and
jmp
add
xor
jmp
jl
inc
scas
mov
rcrl
sub
mov
xchg
push
cmpsb
mov
inc
xchg
rolb
pop
add
and
fistpl
insl
rcl
ffree
out
xchg
push
sub
xchg
cltd
daa
cwtl
stc
adc
hlt
pop
adc
inc
adc
mov
test
push
push
jns
iret
nop
and
mov
ret
mov
fsubrl
jge
add
xor
dec
mov
ret
or
pop
hlt
mov
into
cmc
jl
and
jo
adc
jge
cmpsb
xchg
xchg
pusha
sbb
sub
xor
data16
jge
adc
cmpl
into
sbb
inc
lahf
mov
mov
ljmp
pop
lods
int
cs
lock
in
aam
pop
cmp
xor
mov
sahf
jl
sub
fcomps
pop
jbe
adc
cmp
sbb
dec
daa
sbb
push
mov
enter
push
dec
inc
add
fimuls
std
pop
xor
clc
or
xchg
adc
and
lock
out
mov
mov
pop
sub
ret
push
sbbb
int
dec
das
sbb
xlat
or
gs
pop
push
aad
sahf
loop
jg
ret
repz
mov
dec
repnz
bound
xor
or
xor
decb
cmpsb
imul
xor
and
mov
jno
mov
mov
stos
scas
stos
and
adc
fdivs
adc
pusha
mov
add
ds
lds
pop
cwtl
and
shlb
xor
sub
inc
test
mov
imul
adcl
xor
xchg
pop
adc
pop
sarb
mov
mov
jmp
in
inc
into
xor
es
lods
dec
jg
repnz
push
inc
jbe
nop
sbb
pop
std
jl
loope
lods
adc
inc
xchg
test
sahf
ja
jne
std
jg
pop
mov
mov
or
or
sub
call
loop
lea
dec
dec
fisttps
pop
xor
cmp
mov
sub
adc
rcl
addr16
sbb
scas
movsb
adc
add
das
cmpsb
int
int
push
or
cmpsl
arpl
stos
push
popa
clc
cs
ds
fsub
les
or
mov
inc
jns
xor
sbb
xchg
mov
int3
addb
rorl
add
pushf
aam
sbb
frstor
repz
gs
aam
push
mov
imul
mov
arpl
pop
xor
into
xchg
loopne
dec
jg
pcmpgtd
pop
rcrl
sub
les
cmp
or
inc
stos
bound
adcl
inc
sbb
or
imul
sub
dec
insb
jo
pushf
jmp
pop
adc
out
daa
das
sbb
mov
sub
pop
or
filds
fidivrl
iret
xchg
ss
or
loopne
int3
inc
inc
push
sbb
les
xchg
insb
mov
je
jbe
popa
or
mov
xorb
loop
movsb
test
jl
ror
push
iret
mov
daa
arpl
stc
and
ss
fwait
jg
mov
cs
pop
mov
or
int3
mov
test
int3
rol
pop
cmpsb
inc
add
clc
inc
pop
push
mov
sbb
aam
sub
dec
pop
push
and
pop
mov
jge
sbb
lret
dec
loope
sti
and
pop
arpl
ret
mov
cli
movsl
and
lcall
sub
nop
xchg
jp
xchg
push
icebp
mov
inc
xchg
add
lahf
outsl
push
div
xchg
jns
imul
leave
sub
xor
xchg
repz
xchg
jg
pop
andb
inc
mov
mov
adc
sbb
cmp
push
sub
jle
pop
fdivr
xor
jnp
scas
ret
inc
xlat
outsl
int
push
cmp
sub
loope
xor
xchg
jne
arpl
js
jne
add
mov
and
mov
push
loope
dec
sub
lods
flds
pop
mov
mov
sbb
jbe
jmp
scas
jo
cmpsl
cmp
sahf
jo
adc
jg
push
clc
lahf
add
xchg
sub
outsl
icebp
mov
or
add
sub
ja
and
inc
pcmpeqb
stc
push
test
jo
das
or
shll
xchg
js
cmp
fidivl
fs
cwtl
rol
push
push
xchg
cld
mov
sub
ljmp
lret
rcll
out
aas
xlat
popf
ficomps
pop
out
sub
pop
cmpb
rorl
cmpsb
mov
cmp
aad
dec
pop
lret
js
pop
and
inc
pop
mov
ret
xor
cmovge
std
ljmp
mov
inc
dec
pop
mov
push
add
clc
aas
xchg
mov
dec
and
fwait
std
add
test
jnp
scas
or
xchg
cmp
mov
sahf
and
add
push
adc
lret
fmull
in
xchg
add
sbb
inc
xchg
cs
xchg
jo
out
arpl
inc
fldt
sahf
int
cli
dec
push
cwtl
jns
stos
add
or
pusha
sbb
pop
loop
cli
call
fldcw
ds
xlat
in
adc
push
push
aaa
sub
adc
sbb
add
mov
shll
jne
sbb
cmp
lods
popf
pusha
adc
out
sub
aad
std
push
adc
xor
pushf
leave
in
je
add
inc
mov
out
and
xor
mov
push
scas
mov
push
lock
daa
shrl
clc
xor
sbb
xlat
pop
fwait
outsb
sub
push
lcall
cltd
mov
sub
dec
aaa
adc
xor
js
es
dec
jmp
fisttps
xchg
leave
sbb
adc
jno
xor
mov
sub
pop
pushf
jbe
enter
daa
and
fwait
inc
imul
call
pop
jbe
lds
sarl
adc
inc
add
cmpl
rcr
xor
dec
in
xchg
cmp
xchg
jmp
xchg
mov
jg
add
imul
addb
and
sahf
lods
push
out
addr16
cmc
sahf
mov
adc
push
lock
jmp
sahf
pushf
and
cli
hlt
ljmp
movsl
mov
ret
imul
xchg
mov
sub
mov
jle
lods
cmpsb
das
jnp
movsb
clc
jle
out
mov
adc
cmp
andl
xchg
and
mov
mov
pop
repz
mov
xor
scas
mov
inc
inc
pop
daa
cld
inc
mov
sbb
cmp
loopne
sahf
divl
dec
fistpll
inc
xlat
sub
bound
adc
and
negl
push
movsl
shl
popa
out
clc
mov
pop
sbbb
sbbl
mov
adcl
aaa
sub
iret
inc
ss
jb
out
xchg
push
scas
and
lret
cmp
mov
push
jp
repz
or
inc
rcll
xlat
daa
cmc
xor
mov
icebp
pop
mov
testb
imul
shlb
sub
jg
addb
sbb
cmp
fildll
sbb
ret
jns
insb
pop
decl
mov
lea
shrl
call
jmp
dec
xchg
dec
imul
mov
jns
fbld
nop
xor
or
jae
inc
jo
pop
or
in
fadds
or
mov
pop
or
shlb
out
mov
outsb
jmp
push
bound
lods
fsubs
push
test
sbb
mov
or
mov
repz
jg
icebp
rcll
mov
add
and
mov
inc
add
or
push
ret
push
jg
ljmp
push
in
push
popa
inc
scas
dec
push
lods
scas
rorb
or
mov
testb
adc
dec
jno
stos
jmp
pop
cltd
mov
pop
shlb
inc
lret
loop
xchg
add
dec
fidivl
push
pop
jbe
cmp
int
fst
test
cli
sti
cltd
imul
jnp
mov
adcl
inc
mov
and
sub
and
flds
sbbl
push
jecxz
push
xchg
xor
enter
ja
test
xor
mov
repz
sti
push
adc
ss
fs
mov
pop
add
or
loope
mov
or
mov
or
fistpl
cvttps2pi
adc
popf
loope
pop
movsl
ficoml
pop
xchg
sbb
ret
sbb
xor
inc
aas
rorb
loop
and
jae
add
mov
loop
imul
mov
dec
push
xorl
inc
cmp
push
adcl
loope
add
sarl
bound
dec
mov
jb
cmp
call
and
adc
sbb
inc
or
aad
repnz
jg
repz
mov
cmp
subl
add
and
pop
inc
test
fdivr
jno
aam
push
xor
arpl
dec
repnz
shll
insb
sbb
push
xchg
mov
dec
or
int3
lods
std
fsub
lret
pop
jecxz
lahf
sarb
or
lahf
aaa
jne
pop
mov
pusha
addb
pop
lahf
adc
cltd
imul
cmp
jp
xor
sbb
icebp
inc
add
push
mov
xlat
divps
and
sbb
cmp
fcmovnb
dec
or
out
daa
mov
and
xchg
dec
js
out
in
sbbb
adc
lock
and
hlt
xor
and
pop
mov
ja
aaa
imul
ret
or
mov
push
leave
sub
add
in
repnz
xchg
or
push
sub
stos
sbb
sbb
cltd
or
adc
addr16
cmp
and
sub
mov
sahf
pusha
int3
mov
inc
mov
xor
xlat
mov
mov
lahf
add
or
repz
xchg
repnz
mov
mov
add
fwait
adc
outsl
std
fistpll
imul
pop
sub
dec
jne
bound
xchg
out
cmp
jnp
mov
stos
inc
movsb
push
stc
inc
loopne
movsb
push
ret
test
nop
hlt
in
push
pop
std
mov
inc
adc
add
inc
je
in
and
push
sar
add
cmp
adc
mov
pop
mov
clc
and
fisubrl
dec
pushf
scas
adc
dec
cmp
das
nop
add
adc
pop
faddl
jne
jge
sub
lret
and
ret
lock
mov
push
aad
out
in
insb
insb
and
adc
ror
daa
pop
adc
int
cmpsb
popa
cmp
dec
push
inc
jnp
dec
jmp
xor
xchg
pop
dec
fcompl
fcoms
scas
leave
mov
imul
adc
and
cmp
jg
dec
mov
mov
jp
sub
or
movsl
or
loopne
lods
mov
and
rcl
mov
mov
rcrb
lods
inc
sbb
adc
ficoml
and
adc
int3
outsl
push
inc
and
stos
dec
inc
xchg
mov
and
and
inc
push
outsl
pop
mov
loop
cmpsl
stos
push
cmp
icebp
jp
mov
mov
scas
xchg
loop
cmp
sar
push
fs
aad
inc
test
in
adc
mov
xor
and
adc
or
mov
inc
sbb
mov
std
out
inc
test
xor
push
jp
in
stos
add
cltd
xchg
jne
and
daa
pop
jmp
loop,pt
lds
sub
mov
dec
inc
dec
dec
xchg
dec
outsb
sbb
mov
test
icebp
popa
jg
pop
mov
andl
rcll
shrb
dec
mov
push
push
adc
dec
fsubrl
movsb
cmp
mov
pop
xchg
jbe
repnz
xchg
stos
dec
mov
xchg
or
cltd
stos
addr16
test
pop
icebp
aad
imul
add
and
adc
fwait
jecxz
dec
xlat
int
jmp
subb
sub
shll
aas
and
xorl
jo
in
xor
mov
fisubrs
jbe
movsb
or
adc
and
fstps
adc
shll
mov
sub
fstp
enter
sub
mov
push
sbb
push
jge
cmpsb
hlt
fcmovnu
and
lcall
insl
push
xchg
addb
aad
jo
xlat
bound
pop
mov
data16
mov
sbb
adc
mov
pop
das
iret
dec
test
int3
bswap
ljmp
or
jae
in
add
es
and
push
xchg
xor
xor
push
imul
inc
push
jecxz
xchg
or
dec
or
icebp
mov
rolb
xchg
imul
xor
fcoml
adc
mov
or
jo
in
xlat
jnp
and
mov
jne
cli
jge
rcl
test
mov
cmp
test
stc
cmpsb
mov
out
ds
subl
fsubrl
adc
push
jne
std
arpl
enter
int
aam
or
dec
es
pop
mov
and
xchg
mov
stc
mov
sub
and
dec
inc
mov
cmp
out
jo
xchg
cmpps
lea
push
xchg
xor
mov
enter
sar
and
push
call
dec
insl
test
ds
xor
mov
les
add
xchg
shl
jecxz
dec
or
inc
data16
jno
pusha
sbb
push
ret
gs
adcl
std
push
push
add
movsb
sbb
sarl
shrb
les
adc
mov
pop
jmp
int3
fbld
repnz
fidivs
js
in
inc
jmp
pop
or
pushf
hlt
mov
shll
mov
jecxz
inc
out
les
pop
jnp
or
fbld
loope
out
xchg
jmp
push
lret
cmp
es
test
imul
adc
push
pop
and
add
lods
fildll
push
dec
dec
iret
jne
popf
sub
ljmp
inc
rcrb
jo
mov
pop
sahf
clc
jb
mov
mov
outsl
cltd
push
xlat
fisubl
cli
out
fs
xchg
pushf
add
cmp
xor
sub
cltd
adc
out
xor
dec
pop
mov
push
mov
mov
mov
das
adc
sahf
and
out
adc
lret
stc
data16
in
pop
pop
not
imul
insb
dec
xor
loope
out
imul
and
cmpsb
dec
lock
pop
imul
mov
adc
pop
jae
mov
xchg
pop
sub
jns
push
int3
iret
add
pop
mov
inc
add
cmpb
or
inc
mov
mov
push
pop
into
pop
dec
dec
pop
xor
push
cmp
sub
in
sbb
add
xchg
addr16
dec
dec
jae
popf
and
cmc
aad
movsl
imul
inc
mov
push
pop
icebp
cmpsl
jno
das
xchg
in
lds
movl
es
lcall
push
mov
pushf
mov
adc
pop
or
jne
add
in
sar
xchg
enter
std
in
jne
in
sbb
hlt
inc
add
out
ljmp
adc
dec
outsl
rep
sbb
jno
inc
and
hlt
mov
jg
test
es
cli
nop
testl
insl
imul
adc
jmp
jl
push
xor
movsl
push
xor
jge
inc
mov
outsl
inc
ret
mov
and
lea
sbb
and
clc
adc
push
add
sti
cmp
test
rorb
imul
std
adc
jb
pop
and
lods
icebp
out
fisttps
ds
add
lds
jg
jecxz
jnp
popf
int
fsubs
arpl
test
or
movsl
leave
push
fcomi
sub
lret
dec
mov
xor
jnp
movsl
shll
xor
add
mov
push
mov
loopne
cli
push
jne
aaa
jbe
push
enter
fbld
cmp
imul
adc
xlat
pop
and
jne
fiaddl
mov
out
cli
sub
mov
stos
jns
std
mov
movsl
cmp
pusha
mov
adc
ds
lods
xchg
cmp
cmc
xor
inc
aaa
jmp
bound
or
dec
inc
push
mov
shl
mov
jo
flds
dec
sbb
into
add
int
out
out
icebp
rcrb
mov
inc
lcall
shl
in
loopne
bnd
call
push
iret
dec
pop
xor
push
push
adc
aaa
jle
jg
in
addl
pop
pop
add
jnp
xor
jecxz
je
loopne
mov
sub
pop
mov
test
outsl
pop
arpl
or
in
sub
clc
cmp
andl
and
cmc
testl
push
xlat
push
sbb
sbb
mov
or
sub
inc
lock
xor
shrl
cmpsb
push
or
mov
repnz
shll
mov
in
push
and
insb
rcll
pop
pop
pop
dec
aam
es
das
test
add
cmp
add
xor
mov
cmpsl
xor
cmp
test
fdivrs
cltd
dec
in
call
inc
in
in
js
rcl
xchg
jns
lock
ljmp
fsubrl
std
adc
or
cmp
mov
repnz
dec
adc
lret
loop
mov
in
cmp
dec
xchg
push
lock
mov
mov
test
int3
inc
xor
fisubrl
push
fcompl
leave
cmpb
clc
or
xchg
addl
in
jle
push
stos
frstor
pop
cmp
arpl
aad
inc
hlt
xchg
mov
dec
lret
mov
push
popf
jl
inc
loope
or
sti
and
mov
xchg
inc
pop
dec
push
mov
sbb
xlat
jne
es
cmp
aas
out
jae
or
fs
push
xchg
cmp
cmp
push
icebp
lods
mov
sbb
std
fisubl
aad
loop
xorl
out
lods
sub
loop
sub
loop
xchg
and
jno
jns
xor
dec
adc
sub
or
lds
jecxz
test
push
mov
push
xchg
or
xor
jp
cmc
pop
fnstenv
xchg
aaa
xor
xor
je
mov
cltd
sbb
sbb
adc
xchg
outsl
js
fiaddl
aam
ljmp
test
xchg
mov
sbb
xchg
lods
sbb
stos
mov
mov
xchg
xchg
or
pop
jp
mov
push
into
loop
shll
les
outsl
or
xchg
addr16
dec
pop
imul
xor
mov
cmp
in
clc
outsb
aas
aad
or
sbb
bnd
lahf
sub
mov
pop
add
fmull
leave
pop
inc
scas
in
xchg
scas
sbb
or
jg
cmp
jnp
mov
jbe
xchg
adc
repnz
inc
and
sahf
add
adc
iret
pop
xchg
adc
inc
loop
mov
es
cmpsb
adc
push
sub
inc
ja
push
add
push
pushf
loop
lcall
pusha
xor
sbb
mov
mov
xor
in
gs
or
pop
inc
dec
push
sbb
in
sarb
jmpw
sbb
frstor
jl
pop
pushf
jae
outsl
xlat
test
inc
xor
pop
ret
pop
arpl
or
xor
sub
es
mov
and
into
out
test
cmp
fcom
movsl
jae
jb
xor
push
mov
cwtl
adc
xchg
les
fldt
pusha
mov
test
pop
fucom
in
mov
or
gs
jmp
mov
ficomps
push
pop
leave
and
mov
stc
into
iret
xor
or
cli
mov
cld
outsb
fcom
insl
add
push
daa
push
add
testb
fidivrs
sbb
and
pop
outsb
bnd
pop
ja
mov
mov
push
jb
je
pop
adc
xor
ljmp
cltd
cmp
pop
sbb
dec
scas
stos
arpl
cmp
push
adc
adc
stos
sub
ret
xlat
ss
mov
pop
cmc
lret
rorb
cmc
js
popa
into
jno
pop
fisttps
mov
add
cmovnp
mov
jle
cmp
fsubs
mov
inc
sbb
push
adc
fldt
sub
aad
sbb
push
stos
cld
dec
ret
pop
inc
push
jns
mov
push
test
lock
iret
iret
push
cli
and
es
mov
sbb
mov
mov
inc
loopne
pextrw
jl
dec
icebp
movl
mov
or
clc
pop
or
lods
in
in
xchg
negb
jno
pop
shll
loope
jno
into
add
in
push
push
mov
mov
test
in
pop
ljmp
aam
inc
jno
fstpt
sub
ja
popf
sbb
andb
sbb
mov
popa
dec
in
or
icebp
mov
fnstcw
hlt
and
lock
dec
add
sahf
and
mov
fs
xchg
popf
push
adc
mov
data16
in
mov
cmp
xchg
sub
out
adc
mov
xor
xor
out
fidivrs
sbb
or
lods
jg
ror
lret
sub
sahf
lods
daa
pop
and
mov
dec
lahf
popa
mov
movsl
subl
sub
out
and
adc
pop
xchg
repz
mov
cmpsl
or
mov
shlb
dec
mov
std
cmp
insb
xchg
and
cmc
test
and
jp
into
cs
jae
addr16
jb
sbb
sbb
mov
pop
lret
push
test
subl
cmp
int
stc
roll
cmp
pop
fistpl
fsubrl
sub
xchg
repz
push
add
aaa
mov
int
lahf
mov
ret
pusha
xchg
sbb
inc
fwait
cmc
lods
or
jecxz
shrb
popf
add
int3
add
cmp
inc
hlt
push
cmp
test
push
xchg
pop
pop
cmpsl
sbb
or
imul
pusha
stos
testl
cmc
mov
sbb
cmp
adc
add
call
sbbl
mov
jg
add
or
loopne
adc
push
movsl
mov
mov
push
mov
jg
pop
mov
push
sti
es
pop
lock
in
add
dec
mov
loope
inc
push
daa
inc
lahf
nop
push
pop
insb
mov
stos
push
ja
inc
xchg
out
and
xchg
mov
xor
add
add
lret
movsb
cli
call
in
aas
mov
repnz
mov
jns
sbb
pop
xor
inc
repz
push
or
pop
xchg
sbb
leave
inc
xor
mov
sbb
cmc
stc
xchg
lret
dec
and
out
inc
fldt
popf
mov
fld
xlat
fstpt
ss
cmp
mov
or
fcmovnbe
lret
sub
cmp
in
jg
sub
insl
andb
pop
push
aad
dec
je
push
lret
mov
lea
mov
adc
call
ljmp
insb
push
testb
leave
jns
hlt
or
out
aad
insb
pop
cmp
aaa
js
lock
nop
xchg
dec
xor
sub
inc
jae
cmp
mov
cmc
and
jle
inc
jnp
ss
scas
push
lods
xlat
mov
inc
jno
mov
test
lods
sub
cmp
pop
mov
lahf
out
sub
enter
or
pop
mov
fisttps
xchg
push
jp
xchg
inc
aas
aas
gs
dec
jbe
adc
pop
rorb
loope
sbb
sbb
out
push
repz
push
andl
pop
fs
ljmp
mov
xor
stos
sarb
push
mov
mov
pop
lods
jle
js
sbb
cs
out
pop
loopne
icebp
sbb
adc
es
mov
cmp
stc
lret
dec
ljmp
jne
mov
fsubp
pop
xchg
ljmp
mov
sbb
aaa
cmpsb
mov
mov
aad
adc
mov
sbb
in
pushf
jmp
movsb
in
outsl
inc
test
mov
xor
in
test
push
mov
pop
je
or
xchg
shrl
or
lods
shl
or
or
jne
and
inc
xchg
push
jle
dec
adc
push
sbb
insb
cwtl
test
push
pop
les
pushf
xor
mov
insb
jns
mov
xchg
pop
push
dec
aad
loopne
iret
add
icebp
orl
sbb
xor
shr
or
out
ret
std
mov
gs
movsb
fsubs
ficoml
jmp
dec
push
add
gs
js
jge
xsha256
cmpsb
push
or
repnz
mov
adc
andl
and
clc
cmovb
cmp
mov
sbb
add
mov
negl
dec
push
dec
fisubl
pusha
insb
mov
adc
cld
sub
mov
fisttps
jp
out
aam
dec
lahf
fldenv
push
ljmp
add
inc
mov
adc
adc
mov
stos
fcoms
mov
xchg
add
dec
xchg
loope
les
pop
adc
inc
dec
mov
jl
dec
icebp
ret
fdivs
stos
cwtl
pop
or
jg
ss
push
std
stos
cmp
sub
or
mov
fisubs
mov
jo
or
popf
inc
lods
mov
and
mov
mov
int3
or
adc
and
pop
out
mov
inc
stos
xor
mov
scas
cli
stos
add
dec
sub
push
mov
adc
std
in
shlb
xchg
sti
jae
xchg
jmp
push
xchg
lret
in
jecxz
sbb
mov
push
movsl
into
jbe
xor
and
fldt
mov
jne
fadd
into
dec
addr16
xchg
add
jnp
int
mov
fisttpll
mov
cwtl
adc
pop
xlat
arpl
mov
xor
movsl
aad
jp
mov
in
jmp
fsubrl
rcrb
shr
int
andb
sub
and
pop
dec
cmpsl
pop
out
or
and
mov
xor
aam
imul
ficoms
pusha
mov
pxor
mov
xchg
icebp
lock
mov
aad
jmp
sti
fwait
sarl
push
push
pop
inc
and
fildll
mov
mov
and
ret
cmp
push
mov
test
pushf
cwtl
flds
loopne
mov
adcb
rorb
loope
pop
ja
cmp
pushf
lret
cltd
movsb
faddl
aas
cld
push
push
rcrl
and
cmp
mov
jl
or
sub
lret
and
xchg
cmp
popa
mov
pop
jae
sti
jb
mov
jmp
cmp
dec
add
inc
add
cmp
push
sbb
nop
roll
inc
enter
out
pop
push
imul
xchg
loope
test
and
jb
lods
in
and
call
roll
or
and
xor
jmp
cld
xchg
pop
scas
imulb
int
iret
aad
and
fstps
push
data16
enter
int3
mov
test
mov
add
and
jle
inc
sbb
adc
stos
test
fcomip
add
aas
xor
and
stos
push
les
loope
mov
int3
imul
fucomi
pop
mov
jmp
je
mov
shrb
cmpsb
sbb
pop
pop
arpl
iret
int3
mov
lds
push
adc
push
mov
push
jmp
out
subb
cmp
mov
or
out
pusha
in
mov
fcmovb
xor
sbb
shl
fisttpll
xchg
mov
sbb
jb
loope
push
sbb
adc
ss
adc
inc
and
cmpsb
ret
xchg
arpl
sbb
inc
jge
aam
and
test
jl
push
lods
aaa
mov
inc
push
mov
loope
divl
aam
jae
sbb
mov
inc
test
mov
loopne
sti
setle
es
cltd
cmp
jg
loope
inc
push
rorb
stos
or
rclb
mov
mull
mov
das
movb
icebp
xchg
int
insl
arpl
outsb
cmp
shll
jle
sub
daa
sub
ret
jb
sbb
mov
inc
stc
std
pop
hlt
leave
int
add
sbb
fs
mov
dec
mov
jg
repnz
pop
sub
cs
sbb
lret
outsl
dec
hlt
ret
bswap
pop
dec
lea
jge
inc
out
lock
xchg
cmp
and
dec
xchg
dec
push
xchg
push
jmp
dec
jl
aad
movsb
jno
fsubl
sbb
int
mov
lea
xor
mov
repz
and
mov
sub
addr16
lret
sahf
fs
mov
cltd
aad
movsl
mov
shrb
popf
mov
xchg
jecxz
rolb
addb
xor
lret
fsub
xor
pop
jmp
and
add
cwtl
repnz
sbb
mov
aas
jo
lods
pop
pop
jp
call
notb
pop
sbb
pop
ja
fcomps
mov
in
iret
xchg
dec
lock
mov
or
stos
push
lods
scas
test
inc
xchg
repz
xor
push
xchg
mov
jmp
pusha
sub
mov
add
jns
jmp
int3
sbb
xchg
gs
lahf
repnz
pop
iret
jge
lods
xor
jge
mov
in
mov
popf
fcmovu
shlb
scas
xchg
jl
inc
ret
std
mov
push
mov
lret
popf
sbb
pop
aas
adc
call
lret
xchg
mov
movsl
addr16
cmpsb
imul
loope
fdivrs
or
xor
ljmp
cmp
stos
and
inc
or
inc
sbb
fs
pop
movsl
not
sub
adc
add
js
idivl
or
dec
xor
add
push
repz
add
ret
jecxz
or
and
bswap
and
or
test
pusha
inc
arpl
inc
lods
outsl
or
cwtl
push
nop
jo
jb
mov
jnp
and
int3
xchg
push
adc
inc
sbb
das
pop
cmc
jecxz
loope
push
xor
sub
mov
aam
xor
pushf
mov
fs
dec
jl
dec
or
repnz
int
mov
adc
mov
mov
aad
sti
fs
mov
scas
lahf
int3
lea
mov
mov
in
push
push
mov
popf
push
add
movsl
push
inc
jmp
imul
push
mov
inc
push
stc
inc
jle
jmp
dec
cmp
sbb
in
or
and
aas
mov
mov
cwtl
sbb
pop
test
xor
das
aas
fs
jnp
imul
lret
ret
mov
outsw
cmp
aad
sub
xchg
lcall
pop
or
mov
push
inc
pop
in
js
in
dec
mov
jnp
daa
cmc
xchg
in
addb
sub
add
fisubl
std
sub
adc
sub
pop
arpl
outsl
xor
test
jge
mov
imull
pop
inc
icebp
clc
aaa
mov
test
and
or
inc
insb
imul
push
adc
push
jl
test
popf
enter
add
sahf
adc
lea
sub
pop
mov
and
leave
pop
lds
int3
jne
mov
lock
add
jae
popw
and
icebp
dec
mulb
pop
sbb
mov
mov
popf
sub
ret
sub
imul
push
pop
cltd
fstpt
pop
lods
xlat
jb
mov
int
mov
les
cs
ret
aas
sahf
xchg
and
fnstsw
cmp
in
inc
add
mov
enter
inc
xor
in
sub
arpl
cmp
lock
int
or
rcrl
jle
xor
dec
pop
lret
add
jg
ret
jmp
push
js
data16
lock
in
and
adc
jp
popa
dec
and
sub
inc
push
insl
fldcw
outsl
lret
aaa
mull
and
test
outsb
xorl
dec
dec
pop
lret
adc
xor
push
mov
nop
out
sbb
in
pop
and
fs
xchg
dec
sbbb
push
pop
xchg
or
xor
ljmp
andl
xchg
lahf
mov
sub
shl
xor
mov
sahf
mov
mov
or
arpl
add
repnz
xchg
mov
sahf
pop
sub
popf
cli
ljmp
mov
jae
xchg
ss
jb
sahf
push
add
inc
sub
lret
pop
or
xor
cmpsl
pusha
ficoms
mov
bound
ds
add
sahf
outsl
js
scas
or
jno
scas
aaa
push
and
ret
jl
add
xor
dec
bnd
cmpsb
mov
mov
daa
xchg
aam
push
cmp
push
outsb
hlt
in
aaa
dec
insl
xor
subb
mov
xchg
push
rolb
loope
push
mov
push
lods
add
test
cmpb
sbb
and
ljmp
push
js
jns
std
subb
cwtl
stos
xor
inc
or
call
mov
daa
sub
or
add
popf
outsb
mov
cmc
sub
mov
mov
xchg
or
fnsave
pop
std
in
push
mov
mov
scas
cmp
push
loope
pop
jle
adc
or
push
adc
mov
cmp
aam
pop
sbb
and
dec
les
cltd
push
dec
or
test
mov
adc
popf
pop
xchg
cwtl
inc
loop
push
and
sub
jge
push
sub
pushf
in
fcmovbe
push
or
hlt
je
outsb
mov
ds
jp
mov
pop
pop
repz
shrb
into
xor
scas
into
icebp
je
jmp
test
push
pavgb
stc
xchg
fidivrs
out
sub
clc
pop
into
xchg
add
pop
jbe
cmp
out
cld
adc
pop
bound
sub
aam
xor
ljmp
test
sub
imul
ss
outsb
sbb
adc
jl
enter
jecxz
and
inc
xor
aad
sahf
ficomps
sub
cmc
mov
lea
shlb
xor
dec
shl
inc
aam
inc
pop
std
dec
leave
xchg
popf
das
fidivrs
jo
sbb
cmp
and
rorb
mov
xchg
test
jae
mov
dec
pop
imul
adc
cli
xchg
jnp
pusha
xchg
andb
mov
cmpsb
mov
shll
cmpsl
stc
push
arpl
inc
loope
lds
mov
mov
lods
cmpb
test
push
ja
sub
sub
lret
ja
sbb
xchg
jp,pt
jbe
push
jle
or
lret
in
mov
sub
mov
ss
fstpt
adc
pop
xchg
xchg
or
mov
xor
pusha
push
or
sub
add
test
out
sub
cmp
pop
mov
adc
mov
adc
shll
lret
sub
xor
xchg
int3
ficoml
ficoms
movsl
jmp
jg
lcall
setl
push
dec
mov
mov
xor
xor
fists
dec
inc
push
in
out
and
shll
call
jp
xor
xchg
enter
fldcw
lea
adc
aad
mov
ja
push
mov
add
cmp
rolb
popf
sbb
push
add
cmp
dec
out
jbe
mov
xchg
add
lahf
and
int
and
adc
inc
testl
or
xchg
cmp
ljmp
sbb
outsb
out
mov
dec
scas
and
jecxz
jb
inc
xchg
pcmpeqd
add
repz
inc
aad
daa
dec
ds
inc
cmp
jmp
addr16
adc
in
push
repnz
cmp
repz
sti
cli
out
adcl
dec
xor
pop
fsub
sub
mov
pushf
jp
push
adc
addr16
jae
aad
or
test
mov
loopne
xchg
xchg
test
and
outsb
movl
stc
and
jmp
fbld
leave
inc
sub
sbb
insb
or
fidivs
push
lods
leave
xorl
mov
or
fisubrl
cli
inc
mov
stc
mov
repnz
clc
dec
orl
push
push
aam
je
push
pusha
jecxz
sbb
rolb
xchg
dec
xchg
cmp
dec
mov
or
inc
jnp
int3
xchg
popa
cmc
jl
jg
mov
pop
scas
insb
popl
add
mov
xchg
jb
aam
add
sbb
into
mov
leave
pop
pop
fs
jae
dec
fldenv
jecxz
push
mov
xchg
push
jge
pop
xchg
push
cmp
push
icebp
rcl
lods
js
pop
test
es
xchg
fnstcw
jnp
or
xlat
stos
and
fsubs
ret
sbb
cli
adc
scas
je
das
test
pop
inc
add
mov
repz
jno
repz
xchg
jmp
jne
jge
adc
nop
mov
in
cld
sti
es
out
dec
inc
imul
adc
lock
push
nop
sub
add
jne
jns
mov
mov
addr16
or
int3
and
sbb
jl
jne
jns
mov
jnp
push
bound
cmc
fwait
push
ror
fdivs
rcr
sbb
sbb
jge
insb
mov
or
sub
outsl
jnp
mov
or
scas
lret
adcl
shr
pop
xor
sub
jp
mov
sbb
adc
mov
lahf
xor
fs
cld
cmp
lods
mov
sbb
loope
outsl
mov
or
in
pop
cmpsl
inc
add
jl
inc
cmp
adc
mov
je
mov
adc
std
mov
pop
int3
iret
enter
mov
jecxz
or
fmuls
je
xchg
sub
mov
ds
in
rcrl
jnp
push
loop
pop
aaa
shrb
testb
mov
inc
push
icebp
iret
cmp
test
in
push
adc
push
or
test
iret
xchg
jge
jae
mov
sbb
fwait
ret
jne
out
call
mov
fiadds
or
mov
shlb
sub
mov
mov
gs
insl
push
testl
bound
adcb
cld
adc
popa
aad
inc
push
pop
std
pop
ljmp
push
push
jmp
pop
pop
fs
mov
das
stc
gs
je
clc
add
in
pop
lahf
lods
dec
addr16
sub
xor
push
cmp
lock
dec
xchg
fnstenv
or
lea
mov
xchg
outsb
adc
mov
jl
dec
into
cwtl
popf
inc
ficoms
xorl
imul
cld
mov
jge
jb
dec
mov
pop
sub
adcl
test
push
sub
mov
sub
cmp
push
icebp
push
sub
lock
stos
pop
lret
out
test
push
mov
and
insb
xor
ror
pop
xor
repz
sub
shr
mov
mov
imul
sub
enter
scas
fisttps
imul
cmp
lahf
inc
shlb
fwait
xor
pop
xor
pop
rcl
out
sarb
arpl
dec
or
loope
shrb
pop
mov
jnp
jno
lods
mov
lret
ja
or
jecxz
pop
xchg
pop
fs
ss
jge
shll
xchg
push
jmp
add
adc
imul
ljmp
test
lret
sti
out
stos
and
or
ret
and
cmc
jp
subb
pop
inc
dec
sbb
jnp
lret
in
mov
xchg
mov
jmp
adc
add
cli
mov
sub
gs
mov
rolb
jg
es
sub
jp
mov
xor
sbbb
fdiv
sbb
xchg
add
mov
dec
push
mov
ret
das
ficomps
adc
or
call
ret
dec
pushf
aaa
or
inc
mov
insl
cmp
xchg
mov
mov
bound
arpl
iret
or
pop
xchg
mov
dec
push
inc
xchg
out
mov
xor
jecxz
jae
test
cwtl
pop
xchg
fwait
sub
dec
fmull
sub
cmpsb
cli
cmpsb
jns
cwtl
and
repnz
sbb
int3
mulb
push
or
mov
mov
xchg
das
xchg
test
push
addr16
jg
icebp
test
in
pop
inc
or
sbb
rcr
fsubl
push
sub
mov
lods
sbb
test
testb
jl
lret
cmp
mov
enter
jl
add
jl
pop
xlat
aaa
dec
in
add
jno
stos
jp
nop
adc
xor
and
and
sbbb
jmp
inc
cmp
loopne
mov
aas
xchg
cwtl
pop
cmpl
or
push
sub
xchg
repnz
adcb
or
mov
sub
cmpb
pop
xlat
mov
add
mov
pop
jno
pop
aas
push
push
mov
or
into
dec
add
inc
mov
repnz
jnp
lods
sbb
jg
pop
sub
xchg
pop
cld
pop
or
lods
mov
bound
xchg
cmpsl
mov
movsb
or
clc
xor
jle
dec
add
inc
sub
pop
out
push
test
xor
mov
pop
lock
mov
sbb
data16
cmp
jae
inc
and
stc
xor
push
addr16
pushf
mov
cli
mov
ds
movsb
add
repnz
add
in
inc
idivl
roll
leave
sbb
mov
push
nop
mov
adc
pop
mov
xor
js
cwtl
push
cs
rcrl
ret
fcoms
mov
aas
jae
loopne
pop
push
push
arpl
dec
push
jne
repz
fistpl
lds
fdivrl
test
push
sbb
fstpl
sti
cltd
punpcklbw
lahf
sbb
fcoms
jle
or
dec
mov
and
fldt
add
mov
outsb
dec
dec
pop
repnz
xlat
pop
sub
or
cli
dec
mov
outsb
in
into
cs
sub
divl
mov
cltd
fadd
jmp
negl
mov
xor
cmpsb
clc
or
sbb
pop
shl
lock
jno
loope
fcoms
aaa
pop
xchg
mov
push
and
dec
jle
loop
aaa
pop
int
push
mov
subb
jecxz
ret
out
repnz
jmp
push
or
sti
in
aaa
mov
sub
xchg
les
xchg
in
outsl
xor
dec
mov
sub
je
jne
mov
lock
leave
jo
fidivs
subb
and
push
pop
out
lret
clc
in
mov
pushf
xchg
mov
iret
lock
imul
mov
lret
loope
shll
dec
adcl
and
lods
pop
fs
xor
rcr
aad
lds
outsl
sub
addl
cmpsl
cmp
out
test
sbb
and
les
jns
dec
sub
add
and
hlt
sub
and
jp
rcrb
sbb
push
xor
push
xchg
js
push
ss
pop
ja
cmc
daa
and
push
test
cmpsb
xor
push
sahf
je
inc
sti
fists
gs
inc
xor
mov
sbb
fwait
rorb
mov
nop
and
int3
jno
cmc
ret
out
xlat
mov
push
cwtl
insb
outsl
test
or
pop
xchg
xchg
lock
dec
jo
shll
mov
in
pop
aaa
mov
pop
xchg
dec
sbb
lcall
add
dec
pop
aas
mov
sbb
and
pop
pop
int3
cmp
jbe
xchg
or
and
mov
jmp
mov
je
dec
push
rcrb
decl
imul
sub
inc
cltd
shl
movsb
or
pushf
shl
mov
pusha
cmp
lods
add
lcall
dec
dec
pop
sbb
jmp
lcall
xor
sarl
call
scas
or
push
hlt
dec
repz
loop
push
lret
std
dec
add
cmp
xchg
add
adc
xor
loopne,pt
and
and
pop
fcmovbe
lock
out
aad
cmp
jle
rcr
mov
add
clc
sbb
fistps
out
outsb
outsl
cmp
clc
jae
cmp
dec
sub
stos
ja
sbb
xor
in
std
xor
xchg
pop
xchg
std
int
negb
push
and
push
mov
pop
orb
xor
adc
jb
pushf
jg
inc
sub
stos
in
jp
aad
sub
inc
int
push
lods
lods
push
cmp
lret
pop
out
mov
shll
cld
mov
fsts
ret
repnz
int3
inc
push
std
stos
or
adc
fs
pop
out
cld
divb
in
xchg
add
bound
push
cli
idiv
jl
xchg
mov
fdivp
popa
fbstp
push
dec
mov
sbb
sbb
cmpb
mov
into
sbb
mov
pop
and
out
push
mov
push
jmp
call
ret
jmp
sub
out
scas
rcl
rcl
inc
lods
add
push
mov
pushf
or
outsb
bound
negb
or
sub
mov
lods
pop
iret
sub
fisubs
xchg
push
sub
leave
lods
sahf
pop
adc
ret
jns
mov
cmp
cmpsl
fs
fcoml
and
xor
or
rcl
pop
dec
std
push
adc
pop
or
flds
sbb
jg
jmp
xchg
fdivrl
sub
add
mov
sbbb
mov
and
pop
ret
in
dec
loopne
aad
cmp
lods
ffreep
dec
xor
ret
and
xor
sbb
dec
test
xor
pushf
mov
pop
cmp
ljmp
imul
lret
stos
push
stos
mov
push
push
or
imul
cmpsl
adc
jns
int3
sbbb
dec
stos
lret
pusha
movsb
sbb
scas
xchg
in
pop
xor
fists
pop
stos
adc
pop
in
xor
push
pop
pop
jno
or
mov
push
push
loope
mov
cmp
sbb
js
cltd
mul
xor
loopne
cs
lods
js
inc
loopne
cltd
data16
mov
xchg
xchg
adc
dec
insl
jbe
sbb
and
mov
int
loop
loop
jg
pop
pop
sbb
inc
sbb
fisttpl
in
mov
dec
jno
mov
cwtl
jl
dec
test
outsb
xor
adcb
jbe
fisttpll
mov
mov
jne
jecxz
or
int3
hlt
in
lahf
scas
pushf
push
mov
fldcw
bnd
jno
lds
repz
and
call
scas
adc
notl
push
loope
jb
cmp
vshufps
popf
pop
mov
cmp
fdivs
out
sti
xor
std
xchg
aas
xor
sub
inc
cltd
xor
and
bound
addl
xchg
sbb
pop
xchg
adcl
fsts
sbb
sub
and
ds
lock
lret
xchg
lcall
in
sbb
ss
mov
out
lods
icebp
andb
std
mov
int
lret
cmp
sbb
ljmp
pop
xor
jo
enter
test
and
mov
cmp
stos
cltd
out
stos
mov
mov
dec
jmp
push
mov
xlat
jne
pusha
push
int
insb
push
mov
sbb
dec
or
lar
in
fcomi
lahf
push
adc
aad
xor
lods
pop
dec
xchg
pop
cmp
test
call
aam
loop
mov
pop
mov
mov
int3
pop
aas
cmc
adc
xchg
cld
inc
push
or
jmp
rorb
xlat
inc
xchg
xor
lea
lds
lock
scas
xor
addl
mov
mov
dec
xlat
pop
mov
aaa
xchg
and
and
popf
xor
cmpsb
adc
xchg
popf
and
sbb
aaa
pop
mov
lret
inc
mov
sahf
mov
dec
test
movsl
cmc
sub
movsb
in
loopne
sub
ljmp
xor
mov
and
roll
test
inc
adc
leave
mov
cmpsl
clc
jns
lea
add
sbb
add
mov
add
adc
push
iret
inc
sbb
jne
jns
idiv
sbb
addr16
fidivl
out
jle
lods
cld
xchg
subb
out
xor
sub
cmpsl
mov
dec
imul
popf
push
sbb
or
scas
mov
and
lock
std
cmp
cmp
rolb
out
lods
pop
and
pop
dec
add
pop
ja
lds
inc
sub
repnz
pusha
inc
and
mov
sbb
int3
loop
sbb
cmc
out
in
mov
pop
cmp
pop
insb
xor
inc
rclb
pusha
pop
hlt
insl
cli
push
adc
ja
sbb
mov
js
jbe
out
fstpl
mov
xlat
test
lahf
dec
inc
push
cmp
cmp
lret
add
xchg
or
test
jae
jecxz
pop
pop
cmp
fdivl
lods
sti
pop
outsl
pop
push
dec
mov
lea
addr16
pop
pop
mov
push
cwtl
push
sarb
inc
std
cmpsl
cmpsb
add
mov
bnd
jmp
push
sbb
adc
sahf
stc
rcrl
stc
mov
add
rcrl
push
adc
mov
mov
andb
fnstenv
clc
pop
fwait
ds
test
sbb
xor
sbb
mov
in
jno
mov
sbb
cmp
cltd
repnz
jb
scas
push
cmc
push
les
insb
in
pushf
lcall
hlt
pop
adc
cli
notb
and
in
adc
mov
dec
push
jbe
pop
stos
mov
xlat
insl
loope
and
push
lock
and
adc
xchg
inc
mov
pop
pop
lcall
outsl
cmp
daa
scas
mov
sub
ja
mov
jecxz
push
mov
sub
ja
scas
int3
cmp
mov
int
ret
push
call
dec
mov
loopne
push
popa
xor
fcmove
aas
lods
mov
mov
mov
jbe
repnz
lret
mov
pop
cltd
outsl
jg
int3
popa
cmp
pop
roll
sub
rorl
pop
outsb
ret
es
ret
pop
jns
lret
inc
call
sbb
imul
cltd
das
push
mov
mov
push
in
jb
mov
into
add
das
inc
test
push
jmp
adc
dec
jae
idivl
stos
jl
ficoms
js
sub
add
mov
mov
mov
call
test
lea
mov
test
mov
jg
paddusb
fs
xchg
dec
pop
add
pop
push
lods
adc
pop
cld
jge
mov
cmp
or
sub
dec
js
call
fdivrl
insl
test
cmp
jo
jl
js
cwtl
loop
int3
fldcw
mov
in
loopne
ds
scas
fstps
mov
mov
mov
jnp
cmp
cmp
cld
popa
test
daa
insl
sti
ljmp
out
pop
loop
add
xchg
in
xor
lea
insb
cmpsl
in
mov
sub
and
ror
in
inc
psubq
lea
mov
imul
and
fdivp
pop
in
jl
jo
pop
pop
mov
je
jp
popa
insl
out
xchg
mov
lcall
aas
mov
test
daa
jp
jge
daa
jmp
jmp
outsl
cld
rol
cwtl
xorl
js
mov
adcb
pop
lretw
icebp
or
mov
push
pusha
mov
loop
xor
xor
faddl
or
and
cmp
mov
out
mov
xor
inc
outsl
xor
in
or
imul
mov
cmp
cld
lahf
les
mov
dec
xor
imull
mov
and
mov
push
nop
mov
jmp
test
cmp
jg
xchg
aam
sub
rorb
add
jns
mov
jnp
aaa
test
idivl
pop
gs
inc
les
push
scas
ljmp
push
adc
lods
add
cmp
mov
sahf
add
push
push
dec
cwtl
jecxz
cltd
or
loop
cld
into
fstps
jg
mov
push
fsubp
lcall
test
inc
dec
mov
loopne
and
mov
adc
cli
and
push
sahf
ficoms
popf
movsl
jl
jp
stc
jb
xsha256
and
push
cld
push
jl
mov
fldt
lcall
adc
push
xlat
pop
sub
jmp
xchg
push
cmp
cmpsl
push
insl
mov
arpl
xorl
cmp
adc
sbb
out
pop
out
mov
xchg
pop
loop
addb
xor
cmpsb
xchg
fsts
daa
push
insb
push
cli
jnp
cli
pop
sbb
enter
rol
ds
or
sbb
rol
shl
loopne
dec
ret
vmovq
dec
sub
mov
popf
mov
cmp
push
out
lock
lock
or
or
fdivrp
test
les
lea
nopl
mov
movsb
ret
stos
adc
test
lods
xor
imul
bound
loop
rep
xchg
loope
xchg
inc
lcall
in
xor
mov
int
adc
add
sbb
sub
aad
aam
jnp
lods
mov
repz
scas
xor
cmp
fisubl
xchg
dec
test
lahf
pop
jecxz
imul
cli
push
push
cmp
dec
or
cltd
inc
mov
xchg
mov
add
sub
inc
std
push
jl
jb
adc
mov
rcll
int3
rorl
or
sbb
fisubrs
sub
jno
rcll
cmp
adc
sti
enter
mov
xor
cmpsb
sbb
dec
divl
test
call
jne
mov
jecxz
cs
jnp
mov
jge
out
int
add
test
cmp
clc
sub
jb
js
outsl
adc
mov
sub
test
stc
xor
int3
push
rorb
adcl
inc
xchg
dec
inc
dec
mov
mov
sbb
xchg
sbb
pusha
xchg
xchg
aas
fmulp
es
mov
out
ret
lods
adc
clc
std
jne
mov
lods
xor
pop
es
fstpt
cmpsb
dec
adc
out
pop
cmp
pop
mov
add
inc
inc
mov
fidivrl
sarl
pushf
jge
add
shll
mov
mov
dec
das
cmp
add
mov
push
insb
sbb
daa
insl
mov
jle
das
es
fdivs
and
cmp
sti
adc
jg
loopne
xchg
pop
stos
ret
pop
aaa
imul
in
bound
mov
inc
or
shl
shrl
sub
ret
mov
outsb
xchg
out
jmp
add
dec
add
cld
pop
lods
cli
or
mov
lods
pop
add
and
or
push
xchg
popa
add
movsl
shr
inc
fnstsw
scas
dec
cmp
sub
mov
sahf
out
dec
sbb
push
add
pop
das
repz
pop
repnz
mov
mov
lahf
popa
cltd
ljmp
ljmp
dec
loope
fidivrl
in
xchg
mov
sub
loopne
push
xchg
and
adc
insb
shll
mov
sbb
aad
and
pop
sub
pop
les
mov
iret
sub
sbb
pop
adc
sbb
jns
add
test
push
mov
push
adc
xor
xor
loope
mov
adc
neg
orb
jnp
push
sarb
xchg
push
into
data16
pop
ja
mov
iret
or
mov
fldl
mov
test
jle
pushw
rol
ljmp
mov
pop
push
stos
hlt
jge
mov
pop
arpl
jecxz
sub
sbb
imul
dec
mov
cmp
pop
or
fdivp
aad
add
sub
xor
lds
popa
cmp
lods
bound
cs
or
js
xor
push
add
test
nop
and
cmp
or
cli
insb
cli
repz
hlt
sub
xchg
inc
movsb
adc
clc
aam
scas
gs
arpl
push
pop
fistl
out
scas
ss
pop
fdivrp
jae
pop
xor
rol
ret
add
pushf
sub
mov
jnp
mov
dec
xchg
jno
sub
fldl
inc
mov
sbb
dec
dec
push
mov
cli
jecxz
pusha
sbb
shrb
enter
fcompl
shlb
aas
stos
mov
out
add
or
je
xchg
mov
arpl
in
cmp
cmp
mov
push
jae
lcall
push
cli
jl
sub
cmp
out
xor
push
push
shll
rcr
xor
mov
xor
movsl
xchg
aam
and
hlt
push
pop
and
mov
dec
pop
cli
test
rclb
jnp
clc
dec
add
in
jmp
ficompl
shll
or
out
lds
mov
dec
stos
scas
cltd
fs
pusha
push
aaa
mov
imul
mov
push
lcall
sub
inc
cmpl
cmp
fnsave
jbe
cmc
lods
xor
popa
jne
lds
cwtl
pushf
mov
and
in
repz
mov
test
jle
dec
cmp
out
stos
cs
fadds
fldcw
pop
shrb
out
faddl
xor
rclb
push
sbb
xchg
pop
fcomip
adc
popf
ja
ja
jge
pop
js
jecxz
test
insb
jge
test
jmp
pop
xlat
inc
mov
dec
cmpsb
cmp
iret
sub
mov
adc
sub
sub
iret
es
push
jle
loop
movaps
decl
popa
xchg
pushf
mov
add
jmp
dec
xor
aam
xchg
ljmp
cmpl
jmp
test
lcall
movsb
icebp
lahf
cmp
lret
pushl
inc
mov
loopne
dec
mov
and
pushf
xchg
xchg
inc
jle
std
sbb
sub
test
pop
shll
comiss
adc
cmp
aad
mov
push
push
xchg
lods
mov
in
and
lods
int
pop
and
in
popa
sbb
pop
add
sub
cmpsl
in
mov
dec
std
scas
test
shlb
into
popa
push
mov
cmp
pushf
popf
clc
sbb
loop
out
stc
andl
add
mov
mov
mov
scas
dec
shlb
xchg
and
loope
jne
inc
cmp
icebp
fs
test
iret
or
mov
mov
adcb
dec
call
js
dec
mov
mov
xlat
xor
jge
cltd
jbe
and
xabort
dec
sub
cmp
pusha
lods
call
lock
cmpsb
jae
outsb
roll
adc
cmp
pop
mov
insl
adc
jo
jg
fmul
xor
lret
pop
pushf
dec
outsl
xchg
shrb
mov
add
mov
xchg
jle
fcomps
cmp
mov
mov
fiadds
push
mov
jo
pop
lret
adc
add
in
mov
int
loope,pn
mov
xchg
pop
test
out
rcll
push
xchg
xchg
mov
xchg
fisubs
and
stos
mov
data16
jp
xor
les
outsl
fbstp
cmp
pop
aaa
loopne
xchg
add
mov
xlat
out
or
pop
movsl
jae
cmp
dec
ljmp
pop
sbb
in
decl
test
push
int
push
dec
ja
push
jp
mov
fwait
gs
repnz
xchg
mov
dec
cmp
mov
idivb
ret
xor
inc
jae
cmp
faddp
push
or
mov
mov
sbb
or
or
pop
and
sti
inc
pop
dec
loopne
fistps
pop
sub
push
mov
leave
push
fstpl
xorb
xchg
jmp
mov
rclb
xchg
add
fs
mov
cmp
test
loop
and
stc
mov
fld
insl
and
mov
push
fnsave
sbb
dec
call
int
jecxz
add
pop
lods
call
testl
test
push
in
jnp
in
cmp
or
jae
ret
jb
xor
rol
aas
push
dec
or
add
xor
and
cmp
adc
push
mov
sbb
inc
jp
sbb
pushf
das
adc
pop
xchg
cltd
imulb
fstpt
or
int3
adc
inc
jbe
push
bnd
xchg
je
ss
outsb
pop
sbb
clc
ljmp
adc
imul
lea
jns
cmp
mov
repz
std
ret
add
popa
xchg
and
imul
xchg
cmp
mov
idiv
es
push
lock
xchg
loope
and
cli
inc
xchg
test
cmc
push
loope
cwtl
daa
pushf
fsubrp
bound
test
test
sahf
movsb
adc
mov
mov
int
test
lods
mov
js
aam
dec
sahf
mov
je
std
xlat
sbb
lcall
xor
sbb
sub
jb
xchg
push
mov
out
fs
loope
or
cmp
jno
dec
icebp
in
fildl
sub
jg
cmp
jno
mov
xchg
fwait
and
fsubl
xchg
sbb
scas
arpl
adc
cmp
out
add
outsl
cmp
sub
scas
ret
xchg
cmp
sbb
xchg
or
gs
push
pop
or
int
in
and
addr16
in
lahf
cmp
cmp
jne
mov
push
cmp
mov
fldcw
dec
adc
notb
mov
add
jl
jp
mov
daa
pop
mov
mov
adc
mov
mov
scas
dec
mov
add
push
mov
arpl
adc
mov
scas
fnstsw
sbb
ljmp
test
mov
data16
jo
adc
push
adc
ret
sbb
movsb
mov
dec
inc
jge
clc
test
rol
lret
sub
bound
adc
pop
mov
mov
mov
or
pop
xchg
cmp
ljmp
adc
in
push
xor
mov
pop
jl
sub
sub
mov
data16
xchg
out
repnz
dec
push
jp
mov
xchg
mov
mov
mov
push
je
push
out
aam
pop
scas
or
mov
fwait
pop
xor
inc
mov
das
insl
arpl
xchg
add
stc
dec
repnz
mov
les
xchg
cmp
stos
adc
dec
push
cmp
sub
addb
adc
or
and
repz
xor
xor
shrb
mov
test
dec
jmp
lods
cmp
andl
adc
jmp
mov
push
cmp
mov
adc
sbb
orl
rorl
arpl
add
in
jnp
or
xor
mov
sarb
je
sbb
xchg
sbb
lock
imul
sbbl
mov
mov
ficoml
stc
mov
mov
sub
sub
adc
mov
pop
test
mov
jl
lahf
sub
mov
jmp
mov
sbb
push
mov
test
mov
movsl
or
mov
jns
sub
push
dec
sub
loop
imulb
push
or
lcall
or
repnz
arpl
dec
or
mov
jg
push
nop
fdivs
inc
sbb
stc
mov
mov
inc
jnp
push
pop
push
in
sbb
icebp
adc
stos
cmp
mov
jnp
insb
mov
push
mov
mov
push
lcall
pop
mov
in
dec
mov
or
divb
test
pop
mov
fwait
dec
int
repnz
lret
pop
cs
mov
jno
dec
fsubr
lock
mov
mov
or
sar
jne
sti
or
sbb
jns
mov
outsl
xchg
xchg
mov
popf
cmpsl
jge
adc
jnp
into
or
mov
call
jae
imul
fdivrl
jmp
xlat
mov
iret
sub
xchg
and
or
mov
aad
imul
dec
scas
ficomps
test
lods
push
dec
jge
mov
inc
ljmp
pop
cmp
mov
dec
leave
popa
sbb
lcall
xchg
addl
hlt
fsubrs
jbe
out
pop
xor
imul
rep
xor
das
icebp
mov
mov
jg
stc
xor
mov
gs
mov
cwtl
adc
add
cmp
sahf
mov
jl
movsl
jne
cmovno
jbe
mov
shlb
jle
mov
jmp
cltd
repz
leave
sarl
std
ljmp
sub
imul
repz
jne
mov
mov
sub
mov
pushf
mov
or
js
ljmp
xchg
imul
shll
cli
movsl
sahf
data16
xor
sbb
sub
test
pop
cmpsl
mov
jmp
inc
mov
mov
and
in
inc
fnstcw
adc
or
or
sbb
test
arpl
push
data16
fidivs
jno
stos
stos
testb
dec
mov
cli
push
lods
out
rclb
cli
pop
dec
and
int
daa
mov
daa
xor
xchg
test
les
inc
jle
push
in
cld
mov
add
adc
sub
adc
add
dec
bound
test
repnz
push
clc
fmulp
xor
std
mov
testb
test
pop
sub
in
jno
scas
popf
add
pop
stos
add
loop
aam
loope
sti
sub
pop
outsl
mov
mov
sti
inc
outsl
into
xchg
hlt
jl
stc
inc
insl
stos
nop
pop
push
mov
mov
inc
or
addr16
inc
lret
iret
mov
jae
sub
sub
ds
cwtl
movsb
hlt
mov
scas
.byte
and
add
scas
bound
dec
mov
xor
bound
fwait
lret
pushf
mov
mov
cmp
jecxz
jbe
hlt
jle
lds
mov
xchg
push
imul
inc
lds
out
cmc
lret
jns
mov
adc
lea
inc
push
cmc
sbb
lods
out
pop
in
mov
jl
jae
stos
adc
repz
adc
ja
and
stos
scas
pop
jmp
or
mov
test
add
or
lods
outsb
sub
add
insb
imul
jns
call
mov
jl
popf
push
lock
rol
inc
es
pandn
fisubrl
sub
pop
das
pop
mov
adc
jbe
cltd
shrb
in
inc
sbb
divb
paddw
test
pop
addr16
dec
push
push
in
int
popa
js
xchg
ficoms
sti
mov
cmpb
inc
pop
cmp
popf
xor
fisubs
push
fidivs
jl
xlat
and
adcl
push
add
lcall
div
insl
sbb
or
cmp
out
lcall
rcll
dec
sti
addb
xchg
fsubrp
int3
jno
sbb
sti
mov
fbstp
and
mov
pop
mov
xchg
pop
popf
int
cmp
cmpsl
push
sbb
sarb
add
cmpsl
nop
roll
gs
or
je
lods
sbb
lods
mov
rcll
leave
xor
fwait
and
int
loopne
in
adc
shr
das
in
orb
add
movsl
movsb
mov
sub
mov
or
jb
ret
mov
jns
adc
adc
loope
mov
push
or
out
sub
mov
ret
or
jns
add
add
sbb
add
cmp
sbb
add
add
add
add
add
add
sub
add
jo
add
jo
add
add
pushf
pop
add
sbb
pop
jo
add
add
add
imul
insb
insb
add
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
add
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
xor
call
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
add
or
pop
mov
add
jne
mov
push
push
adc
pop
pop
call
mov
int
xchg
ror
into
out
cld
test
or
or
add
out
cmp
jle
sub
pop
pushl
movzwl
pop
and
add
movswl
sub
mov
xor
mov
call
js
mov
and
inc
push
nop
mov
lret
call
cmpsl
push
std
repnz
sar
lahf
in
mov
pop
pop
pop
adc
sub
dec
movswl
cmp
jne
mov
add
xor
jmp
lock
pop
pusha
mov
sarl
insb
jnp
mov
xorb
jno
jecxz
mov
mov
cmp
mov
add
jmp
imul
imul
xor
mov
cmc
movsl
pushf
adc
mov
jmp
aad
mov
mov
mov
dec
xor
cmp
lock
aaa
xchg
insb
fiaddl
cmpsl
fists
cmp
rclb
enter
add
dec
xor
cmp
and
cmp
xor
inc
mov
cmp
jbe
xchg
jb
inc
add
add
mov
fmull
pushf
sahf
jle
dec
inc
call
xchg
cmp
jns
icebp
mov
pop
dec
jg
stc
cs
stos
mov
or
std
push
cmc
repnz
enter
fdiv
inc
scas
sbb
lock
cmpsl
out
jle
cmc
dec
ret
into
xchg
dec
dec
rorl
pop
sarl
or
fdiv
out
dec
or
das
jae
sub
mov
idiv
add
jae
add
inc
cmp
jae
pop
pop
cmc
std
cmpsb
js
repz
andb
lahf
xor
dec
dec
jg
dec
xchg
xchg
jb
pop
into
out
enter
pushf
pushf
sarl
xlat
lds
sub
insl
test
pop
data16
xchg
dec
fs
lcall
dec
dec
jg
push
and
mov
jg
sub
add
fwait
sub
cmp
push
addr16
dec
dec
ds
mov
mov
or
jne
inc
popa
ficoml
repnz
push
movsb
fistl
jp
adc
movsl
lahf
jmp
mov
xchg
shl
dec
popf
stc
das
pop
xchg
popa
fidivrl
movsl
pop
cmpsb
sarb
push
dec
movsl
pop
adc
and
jnp
data16
push
mov
push
sub
das
cmpsb
mov
js
lods
insb
xchg
loop
in
xchg
movsl
pop
fistl
sbb
jnp
sarb
xor
sub
scas
cmc
jecxz
fisttps
adc
movsl
pop
push
pop
adcl
jo
in
in
mov
movsl
pop
cmc
sub
cmp
xchg
jp
mov
lea
movsl
pop
adc
and
add
rcll
aaa
scas
jp
aaa
mov
cltd
jb
stos
pop
repnz
cmp
mov
cmpsb
aam
mov
xlat
cmpsb
mov
ds
mov
loope
adc
ret
stc
sub
enterw
xchg
rclb
jno
ret
stc
mov
mov
jg
mov
ret
xchg
jb
ret
xchg
jb
popf
rorl
test
cmp
lcall
mov
sbb
push
popf
jb
sbb
jae
xchg
jb
ret
xchg
jb
ret
xchg
jb
ret
xchg
jb
lcall
cli
xchg
ret
mov
stos
es
jb
ret
xchg
daa
popf
jb
cmpsb
imul
sbb
mov
outsb
sub
mov
and
push
insl
das
enter
jb
dec
inc
mov
es
jb
cmpsb
daa
jb
ret
xchg
out
ret
xchg
cmp
mov
cmpsb
daa
jb
ret
scas
mov
mov
sahf
xor
sahf
ret
xchg
cmp
mov
stos
lahf
xor
sahf
ret
xchg
cmp
lret
jb
stc
ret
cmp
pop
xchg
jb
adc
fisttps
in
scas
mov
cwtl
jge
leave
mov
jb
xchg
jmp
jo
sbb
loope
clc
or
cmpsb
imul
cmpsb
cmp
push
xchg
jb
mov
cmp
sub
cmp
es
jb
call
cltd
jb
lcall
sahf
sub
pop
xchg
jb
mov
outsb
jno
ret
scas
clc
cmpsb
xchg
cmp
lahf
ret
xchg
add
nop
jb
cmp
sbb
repnz
ret
inc
push
ret
xchg
fisubl
ret
mov
imulb
jmp
xchg
pop
pop
cmp
daa
ss
xchg
mov
adc
in
je
mov
pop
movsb
loop
daa
ss
xchg
mov
hlt
in
rcll
sub
je
mov
fnsave
lods
mov
lods
fdiv
subl
cmp
sbb
sub
ss
xchg
mov
xor
jl
lcall
pop
add
xchg
jb
ret
cwtl
mov
sbb
cmp
sbb
sub
ss
xchg
mov
pop
push
jnp
jmp
mov
cmp
daa
sbb
daa
daa
ss
xchg
mov
pop
insl
lahf
sahf
dec
iret
push
push
sbb
xchg
jb
fcmovu
aad
mov
fistpll
mov
mov
lods
fdiv
subl
cmp
loope
test
dec
push
ret
mov
lahf
sahf
dec
xchg
pop
push
sbb
mov
mov
sub
jbe
lea
sbb
ret
sbb
pop
xlat
outsl
jbe
sub
rcrl
mov
mov
jb
sbb
ret
jl
pop
pop
scas
icebp
xchg
cltd
jl
stos
ret
mov
shll
les
jb
ret
mov
mov
mov
xchg
xor
sahf
ret
xchg
cmp
mov
insl
sahf
ret
xchg
inc
negl
jb
sahf
fcompl
ret
xchg
cmp
in
mov
ret
push
test
mov
fmuls
sub
mov
daa
outsl
out
push
daa
inc
pop
push
ret
loop
jge
orb
mov
cmpb
sbb
push
in
js
jns
jo
loopne
je
lahf
xor
cltd
jmp
jbe
repnz
xchg
shrl
ss
adc
es
dec
sbb
popa
stc
pop
push
xor
jp
mov
mov
popa
decb
aaa
pop
or
js
xchg
jb
ret
xchg
jb
ret
xchg
jb
ret
xchg
jb
ret
xchg
jb
ret
xchg
jb
ret
xchg
jb
ret
lds
inc
jb
mov
ret
xchg
jb
ret
xchg
jb
ret
mov
ret
xchg
xchg
jp
push
idivb
ret
xchg
jb
ret
xchg
jb
ret
xchg
jb
ret
andl
je
adc
jge
mov
mov
ret
adc
add
in
mov
jle
insb
sub
and
fs
cmc
xor
mov
add
push
int3
xor
hlt
xchg
leave
hlt
mov
enter
adc
xchg
movsl
hlt
push
jp
enter
icebp
leave
mov
hlt
or
aad
mov
dec
xchg
notl
inc
push
pop
mov
cmp
rcll
add
push
and
sub
scas
pusha
iret
imul
cmpsl
insl
push
jb
push
out
lea
mov
movsl
jmp
cli
pop
xchg
js
mov
cs
mov
mov
icebp
pop
adc
jo
push
cmpsb
pusha
dec
in
jp
push
fxrstor
push
rolb
cmp
test
test
repz
jno
addr16
out
xchg
fdivrs
sub
lock
mov
dec
xchg
xchg
mov
jnp
inc
test
in
stos
dec
xor
or
mov
push
or
popf
inc
mov
mov
jmp
cmp
mov
fwait
xchg
push
shlb
rcr
pop
std
insl
mov
aas
daa
es
lret
ss
fnsave
aas
rcll
shlb
outsb
sub
sbb
mov
addr16
push
lods
rclb
stos
inc
in
and
or
leave
dec
je
imul
popf
leave
adc
daa
add
inc
push
xor
clc
xor
dec
stos
scas
sub
xchg
fldenv
cmp
mov
mov
bound
daa
imul
lea
push
xchg
iret
add
fnstcw
repz
xor
pushf
addl
dec
add
pop
aam
cmpsl
push
xchg
mov
testl
ljmp
adc
push
dec
xchg
mov
ret
mov
lds
loopne
pushf
cmp
pop
repz
jo
lods
push
jbe
scas
inc
sbb
pop
idivl
ja
les
push
leave
dec
in
add
add
scas
jle
push
cmpsb
mov
push
jecxz
in
sub
dec
add
rcrb
adc
pop
cmpsb
jns
loopne
jbe
into
dec
popa
mov
mov
in
out
xchg
lret
and
jg
and
pop
loop
xchg
cmp
dec
ss
outsl
imul
jl
xor
loopne
ret
sahf
outsb
pop
mov
mov
adc
lcall
dec
mov
test
mov
pusha
mov
mov
roll
sbb
inc
repz
loop
lahf
arpl
aas
dec
add
sbb
mov
cs
mov
add
add
add
or
add
adc
mov
add
mov
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
add
mov
add
sbb
dec
sbb
dec
mov
add
add
sbb
pop
sbb
popa
mov
add
add
sbb
insb
sbb
jns
sbb
je
sbb
xchg
sbb
xchg
mov
add
add
lahf
mov
add
add
stos
mov
add
add
mov
sbb
pushf
sbb
les
sbb
rorb
sbb
fisttpll
sbb
jmp
sbb
repz
add
sbb
std
mov
add
sbb
or
sbb
adc
sbb
sbb
sbb
daa
sbb
in
sbb
xor
sbb
aas
sbb
cld
sbb
popa
fs
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jb
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
popa
addr16
insb
insb
add
outsl
arpl
xor
fs
insb
add
xor
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
imul
add
imul
fs
insb
add
jbe
ja
xor
fs
insb
add
imul
insb
add
insl
xor
cs
insb
add
gs
insb
xor
cs
insb
add
jb
fs
insb
add
outsb
imul
insb
add
outsb
insl
insl
cs
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
sbb
add
add
pop
nop
sbb
add
add
sub
add
add
nop
sbb
add
add
dec
nop
sbb
add
add
pusha
nop
sbb
add
add
jo
sbb
add
add
test
add
xchg
nop
sbb
add
add
popf
nop
sbb
add
add
scas
nop
sbb
add
add
mov
add
add
nop
sbb
add
add
jmp
add
add
nop
sbb
add
add
or
add
and
sbb
add
add
cmp
add
dec
xchg
sbb
add
add
pop
xchg
sbb
add
add
push
sbb
add
add
jl
sbb
add
add
xchg
xchg
sbb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
insl
gs
jae
je
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
gs
gs
outsl
popa
jb
push
jns
add
add
popa
jb
push
gs
imul
inc
push
jne
dec
popa
jo
gs
imul
inc
inc
insb
gs
outsb
jne
add
add
inc
dec
outsl
arpl
add
push
gs
gs
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
jne
jb
push
popa
insb
jne
inc
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
inc
jb
ja
imul
add
push
outsb
jb
popa
insb
imul
arpl
add
insl
inc
gs
outsl
insl
jo
jae
je
outsl
outsb
push
je
imul
push
push
dec
outsl
je
data16
arpl
inc
add
add
gs
jo
outsb
inc
outsb
jne
inc
add
add
je
jb
gs
gs
fs
imul
jbe
dec
jne
push
jb
je
add
add
gs
je
push
imul
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
sub
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
cli
stc
or
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
mov
sbb
repz
jl
lret
out
mov
imul
shll
andb
pop
xor
imulb
adc
das
and
pop
cltd
push
xor
adc
mov
pusha
popa
sbb
insl
int
movsb
xor
sbb
xchg
popf
dec
and
or
xchg
cmp
inc
out
sub
mov
or
add
jbe
fldenv
inc
ret
mov
dec
hlt
repz
xor
mov
lret
loope
out
inc
sbb
loope
fiadds
imul
dec
repnz
sbb
cmp
fadds
or
out
add
sbb
dec
push
jbe
mov
push
cmp
or
pop
jecxz
inc
lret
sbb
inc
movb
sub
xor
sbb
mov
and
repz
xlat
or
xor
hlt
lock
fldl
jno
or
adc
jns
addr16
jnp
pop
mov
jns
pop
cld
pop
testb
push
push
in
repnz
push
insl
jge
ds
loop
mov
push
sti
xor
aam
jo
shrl
xor
mov
jle
fldt
and
cltd
lret
jne
add
push
adc
cli
shlb
inc
mov
int
fisubrs
fildl
iret
pop
outsb
xchg
out
call
adc
mov
out
adc
aam
mov
aad
daa
pop
gs
out
adc
stos
xchg
mov
xchg
rorb
ret
mov
adc
fnstenv
pop
adc
fisubrl
loope
stc
sarb
jbe
cmc
push
lahf
call
loope
incl
pop
ret
mov
pop
out
outsl
unpckhps
xor
dec
xchg
loop
in
xor
pop
je
sub
or
and
enter
push
loopne
push
shll
popf
push
gs
movsw
pop
test
mov
push
les
lea
and
call
fst
mov
and
mov
jnp
mov
xchg
clc
push
push
loop
xchg
leave
ja
in
rcl
mov
mov
adc
cwtl
pop
cmp
dec
dec
inc
mov
repz
mov
stc
jg
mov
incb
xor
fmuls
fwait
mov
adc
jmp
push
push
jecxz
mov
xchg
je
mov
sbb
sbb
pop
pop
adc
dec
pusha
clc
mov
int
or
push
push
adc
jp
xchg
sbb
popf
lret
dec
fs
add
ret
int
aad
jnp
dec
pop
sbb
fdivrl
lods
and
adc
out
pop
ja
mov
push
movsb
std
in
mov
xor
dec
icebp
cmc
xor
bound
add
aas
dec
and
ljmp
insl
inc
pop
mov
fists
cmc
fnstsw
add
sbb
shrb
daa
ret
loop
hlt
mov
or
inc
pop
pop
loop
add
fidivrl
mov
xor
or
cmpsl
subb
insb
or
shl
push
shr
fcom
lret
aad
mov
push
mull
inc
jmp
mov
sti
imulb
ds
adc
in
push
movsb
xchg
data16
inc
cmp
pop
lds
cmp
jne
cmp
mov
adc
out
rorb
insb
mov
insb
cmp
fwait
jo
testl
shrl
mov
cli
insl
or
std
cmp
push
mov
xchg
addl
fiadds
xchg
dec
push
das
lcall
outsl
popf
enter
pop
es
mov
mov
pusha
into
cmp
sub
pop
mov
test
cmp
outsb
inc
xlat
aad
jge
inc
push
add
add
xchg
adc
inc
add
jne
dec
rorb
dec
cmpsb
pop
or
int3
stos
inc
stc
xchg
and
int3
cld
das
stos
xchg
and
int
in
add
sarl
int3
push
icebp
jno
xor
xor
std
or
jp
lret
mov
fs
je
lcall
dec
adc
mov
ret
sbb
cs
push
sahf
pop
mov
out
inc
and
mov
cmpl
out
mov
pop
sbb
ljmp
in
sahf
sahf
push
daa
and
popf
mov
push
lret
lods
dec
into
call
dec
sbb
jecxz
fnstsw
movsb
prefetcht1
test
dec
lds
pop
leave
xlat
rol
adc
mov
and
mov
inc
paddsw
push
out
lea
mov
sbb
dec
jmp
sti
cli
cli
pop
push
popa
dec
fsts
inc
add
or
inc
shlb
lock
in
loope
xlat
ljmp
rorb
aas
add
mov
fnstsw
ror
xchg
xlat
in
in
push
inc
cltd
int
clc
ror
aam
icebp
jne,pt
inc
ja
mov
insl
pop
and
out
xchg
pusha
imul
xchg
shlb
movsl
add
mov
fldlg2
orb
cmpsl
cmp
leave
sarb
or
in
xchg
cmp
repnz
shll
cmp
jp
sbb
lret
or
divl
test
movsb
fstpt
roll
adc
mov
adc
mov
sbb
and
jge
rcl
pop
fdivl
rcr
test
pop
clc
add
inc
ret
mov
xor
jns
push
enter
pop
and
xor
xor
push
adc
ds
sahf
out
inc
or
enter
dec
cli
push
push
rorb
std
xor
sub
sahf
mov
andl
jmp
inc
pop
out
pop
das
cmp
call
or
in
add
inc
cmc
call
fs
adc
mov
jl
fdiv
inc
mov
sub
adc
stos
add
aam
shlb
shlb
sbb
in
cmp
test
sbbb
pop
aas
in
lcall
and
or
mov
mov
and
cmpsl
mov
rol
inc
add
fstpt
je
cli
ds
adc
pop
pop
mov
jle
dec
jne
outsl
or
mov
cmp
cmpsb
scas
lods
pushf
mov
lret
movsl
mov
rclb
fdiv
std
shrl
or
and
cmp
jp
js
test
mov
out
push
outsl
xchg
dec
testb
inc
sahf
add
push
test
mov
sub
jns
mov
push
mov
mov
je
adc
enter
sub
outsl
mov
dec
or
xchg
adc
stos
mov
or
cmp
xchg
inc
pop
in
mov
popa
leave
loop
push
jns
lgs
out
sbb
dec
or
lcall
divb
xor
sub
lock
push
es
adc
lock
inc
pop
mov
xchg
repz
pop
pop
adc
pop
pusha
icebp
adc
aas
mov
mov
mov
and
fdivl
cmovg
es
stos
ss
and
mov
rolb
add
or
mov
add
testl
fimuls
into
data16
fs
xor
test
add
sub
ja
mov
cmpsl
repz
xor
lahf
dec
pop
mov
sbb
and
cs
xchg
push
loope
xor
inc
push
fidivl
jmp
in
pushf
push
jle
ja
loope
mov
lods
imul
and
push
xor
js
fisubs
jbe
or
pop
xchg
mov
rolb
cmc
pushf
addr16
mov
push
mov
jb
xorl
or
xor
pop
stos
jecxz
sahf
cwtl
pop
daa
jno
inc
lea
inc
arpl
push
iret
xor
testb
push
mov
xor
test
mov
jnp
cmpsl
pop
stos
sub
mov
pop
sub
inc
sub
fwait
outsl
xchg
cli
into
outsl
outsl
inc
int3
ljmp
call
xlat
dec
cmp
negl
inc
sahf
test
das
xchg
test
pop
push
dec
int3
adc
iret
out
test
mov
and
dec
jns
jb
xchg
cmp
insl
aaa
cwtl
pop
cmp
fldl
dec
popf
fdivl
or
pop
inc
cmovl
add
bnd
inc
jns
xchg
popf
jbe
ljmp
xchg
je
cmp
sub
mov
pop
mov
loope
jp
iret
fwait
sti
test
mov
fisubrl
inc
pop
aam
sub
popa
in
in
fsubrs
and
cmp
ljmp
adc
scas
orb
cmp
adc
fildll
pop
adc
fld
cmp
notl
dec
jmp
enter
out
movsb
mov
lret
into
and
jge
ljmp
sbb
sti
mov
aam
bound
ds
jne
cltd
and
add
scas
and
sub
gs
fs
cmc
xor
push
mov
xchg
dec
stos
loop
hlt
aas
movsb
xchg
ret
add
cmpsl
aam
les
xor
xchg
insl
push
mov
aam
mov
loope
repnz
popf
push
push
cmp
movsb
dec
lret
cmp
dec
push
sbb
jmp
push
sub
dec
jg
imulb
mov
pop
add
dec
lret
cs
cmp
loopne
and
sbb
les
mov
xchg
and
fcoms
mov
mov
cmp
pop
out
cmp
xor
jmp
imul
cmp
sti
fistpll
mov
or
iret
add
fidivl
stos
es
inc
sbb
xor
pop
pop
out
push
lock
jle
mov
inc
pusha
push
pushf
test
hlt
scas
in
cmp
add
in
popa
add
or
int
mov
pop
in
pop
or
push
nop
fmul
call
outsl
adc
jg
repz
roll
lahf
dec
ret
test
sub
and
inc
imul
ds
call
mov
mov
imul
or
inc
dec
pop
pop
or
push
inc
lcall
ds
fcomps
cld
lds
clc
push
mov
adc
icebp
dec
or
andl
add
mov
push
push
sbb
xchg
pusha
leave
adc
leave
popf
adc
and
inc
mov
xor
add
jmp
rolb
cmp
clc
dec
add
dec
arpl
test
mov
xchg
lahf
mov
pop
fstpt
andb
jb
stos
mov
clts
jge
lcall
or
or
dec
mov
bound
adc
rcll
dec
mov
mov
mov
xor
fs
mov
lea
aam
test
mov
testb
push
cmp
icebp
mov
or
je
sub
in
adcb
pop
lods
cmp
or
mov
mov
iret
es
test
jmp
jge
xchg
dec
cmpsl
mov
inc
pop
mov
addr16
inc
push
pop
mov
dec
sbb
xchg
lcall
dec
lcall
jg
mov
dec
xor
enter
dec
and
jae
push
adc
pop
add
xor
lcall
bound
mov
xchg
xchg
lea
jmp
mov
stc
inc
test
fcompl
pop
mov
in
rolb
sub
int3
sub
sarl
dec
in
shlb
lods
dec
faddl
fnstenv
fsts
cld
repz
push
adc
sbb
loope
mov
cmp
cmp
arpl
out
pop
cmp
fidivrs
xchg
in
mov
aaa
pop
movsb
dec
neg
mov
pop
mov
jne
aas
lahf
rcrb
rcll
test
mov
call
sub
mov
jle
inc
sub
cli
adc
mov
sbb
cmp
cmp
dec
imul
scas
jo
pop
adc
inc
ja
cltd
xor
mov
nop
pop
sbb
jmp
sbb
incb
repz
sub
cmp
mov
lret
jmp
mov
add
call
fldl
and
cmp
loopne
repnz
fcomps
cli
insl
adc
sbb
or
cmc
mov
xlat
scas
adc
xor
jae
sbb
iret
subl
pop
int
loopne
pop
aam
bound
movsl
cltd
push
mov
add
push
and
andb
mov
aad
pop
pop
or
adc
mov
jno
mull
repz
aaa
ljmp
gs
hlt
xor
idivl
pop
push
mov
jae
mov
xor
sub
pop
ds
clc
addr16
xor
in
pop
pop
aas
pop
push
cwtl
fldl
jge
or
nop
dec
sbb
push
cmp
mov
popa
ret
mov
ret
xorb
xor
rcr
fnsetpm(287
in
test
or
out
or
js
nop
xchg
jns
in
out
loop
dec
xchg
xor
arpl
into
hlt
imul
iret
cli
cmp
jno
mov
mov
mov
gs
pop
push
es
pop
inc
fwait
xor
jmp
iret
ficomps
adc
mov
pop
xchg
mov
mov
fisubrs
cmp
fisttpll
sbbl
push
jmp
mov
popa
inc
shll
push
ret
sbb
push
sub
xchg
cmc
xchg
cmpsl
and
or
nop
sbb
pop
in
insl
in
mov
jge
lahf
pop
adc
or
fnsave
xchg
movsl
sar
fadds
jae
push
xchg
xchg
xchg
adc
or
xchg
int
fcom
rorl
cmp
or
fldt
outsb
push
outsb
popa
cmp
sbbl
xor
pop
mov
adc
push
es
addr16
popa
pushf
movb
mov
lahf
mov
ror
cwtl
sub
mov
sbb
cmp
xchg
rorb
stc
lods
mov
xchg
sbb
popa
jmp
pop
jb
or
and
jp
jne
nop
test
dec
js
jns
add
mov
mov
fwait
stos
dec
mov
dec
cmp
daa
test
loopne
sbb
loopne
int
pop
negb
sub
sub
idivb
pop
leave
push
aas
and
in
mov
in
cmp
push
aaa
cmp
or
out
fcmove
cmp
add
gs
xchg
xor
es
ret
mov
jne
mov
movsb
fwait
sbb
test
and
lock
loope
into
add
jbe
popf
sbb
es
pusha
es
xchg
test
pop
div
mov
mov
and
add
inc
fcmovbe
mov
mov
sbbb
ja
cs
std
cmc
inc
sub
divl
jle
mov
stc
jmp
dec
inc
cmp
mov
dec
inc
add
mov
mov
fildl
mov
push
into
hlt
insl
xchg
icebp
ficomps
jae
leave
inc
push
in
cmp
gs
or
mov
push
dec
fsts
dec
inc
or
mov
ja
mov
pushf
mov
jne
sarl
sbb
and
pop
shr
xchg
sub
jle
outsl
push
dec
mov
xchg
ret
sbb
outsl
int
mov
imul
lds
cwtl
data16
mov
shrl
sahf
inc
gs
jl
subb
pop
xlat
rorb
mov
insb
out
pop
mov
lea
or
sub
outsl
data16
xchg
mov
xchg
jnp
lea
cmp
sbb
push
mov
sbb
sub
xor
insb
in
mov
lds
pop
hlt
btr
dec
in
sub
jmp
jo
pop
cmpl
aaa
xchg
lcall
out
hlt
imul
adc
lds
mov
and
jecxz
fisubrl
sub
mov
mov
and
pop
mov
cmc
adc
cmp
inc
sub
incb
ja
sub
imul
cmc
pop
dec
aas
push
sub
out
or
mov
scas
fidivrs
adc
fdivs
cmc
in
mov
pop
ja
andl
js
mov
dec
dec
jge
dec
aas
lret
in
loopne
iret
call
push
mov
fwait
setae
mov
das
stc
jle
sub
pop
lret
and
push
popf
fists
sbb
cmc
cmc
addr16
shrb
jp
aam
mov
in
jmp
jmp
sbb
nop
pop
push
popa
mulb
dec
and
cmp
sub
in
pop
ret
and
popa
push
cmp
sbb
add
mov
int
rcl
mov
add
sbb
ds
sub
xor
inc
cmp
inc
mov
int3
pop
and
xchg
pop
test
cmpsb
fwait
dec
cli
adc
xchg
loop
lahf
xor
jmp
sbb
push
mov
fsub
imull
and
dec
add
pop
ror
pop
xchg
lret
push
push
test
push
cwtl
into
loopne
cmp
mov
push
xchg
push
pop
sarl
xchg
push
pushf
lea
adc
sbb
push
xor
inc
mov
stc
outsl
fs
int
jne
xor
mov
mov
sahf
jbe
fidivrl
aas
push
or
and
mov
sahf
int3
fs
ret
cmp
rorl
xchg
bound
cmp
mov
adc
push
jmp
sbbl
jne
mov
cmpsb
jmp
add
mov
push
adc
lcall
fstpl
aad
std
xor
rorb
and
in
or
jge
xor
and
das
pop
mov
or
addr16
lahf
jp
pop
push
inc
int3
cmpsb
push
cli
adc
xchg
xor
mov
pop
aaa
jmp
fnstcw
sti
ficomps
lea
out
sub
jbe
movsl
enter
outsb
xchg
out
test
push
push
mov
mov
ret
sahf
cmpsl
stos
addr16
subb
xchg
xor
nop
ret
js
ret
mov
lcall
mov
aad
out
push
dec
fisubrs
ja
sbb
mov
lret
aaa
pusha
pop
push
xchg
ror
pop
in
shr
das
mov
inc
ret
pop
sub
mov
test
out
ds
movsl
cltd
mov
out
add
daa
aad
mov
std
pop
pop
aas
pop
pop
mov
lret
lods
inc
jmp
mov
lahf
popa
pushf
in
or
arpl
int3
jg
dec
fcmovnu
jg
push
push
icebp
mov
dec
shr
inc
leave
in
dec
pop
cwtl
jb
jp
inc
and
adc
out
cltd
sbb
jge
mov
jbe
push
and
leave
aam
int
imul
pop
roll
pop
out
inc
xchg
ss
xor
adc
pop
lahf
inc
pop
imul
xchg
fwait
js
jecxz
jns
mov
sub
xor
adc
loopne
xchg
aam
xor
filds
push
mov
inc
das
dec
mov
xor
mov
std
les
subb
icebp
into
lcall
mov
mov
pop
xchg
mov
ja
out
stc
inc
rolb
sub
mov
test
fsubrl
out
pusha
cltd
cmp
xor
filds
lods
jns
js
xorl
jne
test
in
test
ret
lahf
or
jbe
push
jge
cmc
loopne
sbb
push
cli
int3
ja
fs
ja
xor
sub
mov
iret
pusha
and
hlt
push
cmp
cmc
xor
sbb
shlb
cmp
cmpsb
push
cmc
jge
mov
cli
sbb
repz
inc
mov
cmp
mov
mov
int
popa
loop
sub
lret
mov
sub
xchg
cmp
lea
jecxz
adc
cltd
das
in
cltd
sahf
jl
popa
and
pusha
out
idivb
out
dec
lret
mov
in
jo
or
or
jmp
insl
cld
adcl
adc
jns
pusha
es
sbb
nop
stos
aaa
add
push
out
clc
scas
cmc
push
mov
iret
je
fsubrl
mov
cmp
dec
push
dec
mov
jmp
mov
dec
adc
cld
dec
pop
lods
fistl
cmpsl
mov
pop
push
ret
inc
lcall
addr16
add
pop
jl
cld
xor
ss
test
pop
adc
adc
xchg
jp
pop
repnz
cmp
das
adc
aas
cltd
inc
loop
mov
lahf
movsb
sub
repz
repnz
push
loop
mov
and
data16
outsl
addr16
inc
adc
cmp
fucom
jo
xchg
out
xchg
dec
sub
vunpckhps
mov
jb
inc
fidivrs
sar
cli
inc
pop
testb
pop
or
loope
mov
cmp
push
inc
lods
xchg
out
cmpl
inc
push
sbb
mov
xchg
xchg
cmp
inc
mov
mov
push
out
arpl
addb
xchg
movsl
cmp
aad
adc
arpl
daa
cmp
insl
cmpsb
in
dec
addr16
aas
je
mov
pop
dec
mov
mov
int
enter
repnz
es
and
add
ss
ss
add
mov
lcall
std
push
shl
icebp
adc
sbb
js
push
in
pop
xchg
jno
dec
lret
test
jmp
or
mov
call
or
aas
and
das
pop
ja
ljmp
add
adc
add
mov
orl
or
jo
mov
push
xor
ret
jno
xor
adc
into
std
adc
push
popa
xor
push
push
add
pop
sub
sub
inc
sti
rcrb
loope
dec
xchg
push
aad
test
icebp
or
orb
pop
pop
mov
dec
mov
push
lret
les
arpl
cmp
push
scas
xor
adc
mov
es
and
inc
repz
pop
jbe
xchg
dec
rcll
aaa
xchg
sub
lcall
call
push
popa
rcr
pushf
js
mov
sbb
xchg
imul
xchg
and
js
sub
dec
out
lahf
repnz
inc
mov
pop
fidivl
jae
and
jp
pop
sahf
arpl
adc
dec
cltd
sbb
mov
lods
dec
adc
aaa
loop
loope
mov
push
sarb
push
icebp
push
arpl
xor
movsl
inc
out
test
daa
xchg
add
inc
mov
lods
repz
rcrl
xchg
stc
xchg
xlat
imul
or
mov
out
or
pop
dec
and
mov
ficompl
push
lods
push
fs
xchg
jmp
push
fmull
fs
pop
cmpsb
add
fimull
fld1
jecxz
enter
inc
jl
inc
ds
xchg
je
and
outsl
inc
vmovdqa
mov
push
cmp
loopne
inc
mov
pushf
int3
aam
mov
lahf
adc
jnp
ficomps
sub
mov
or
ja
xor
add
xor
xor
adc
ljmp
or
and
test
and
push
test
sbb
sbb
jecxz
arpl
cli
jbe
sbb
adcb
scas
mov
push
inc
lret
cmp
jbe
sub
sub
xorb
cmpsb
or
loop
or
cmc
lods
lret
pop
fcoml
arpl
add
ja
mov
sbb
lcall
inc
sub
loop
xor
les
mov
dec
or
cwtl
mov
jno
jo
sub
je
or
pop
bound
rol
inc
movsbl
je
xor
mov
sbb
add
sbb
jbe
roll
bound
dec
leave
sbbl
loopne
push
dec
mov
ja
sbb
popa
jle
jns
ss
cmpsl
xchg
xor
and
push
repz
xchg
inc
repz
fnsave
inc
mov
sbb
mov
cmp
icebp
or
aas
inc
add
bound
popa
mulps
js
push
pop
cmp
andb
xchg
and
add
fstpt
arpl
fstpt
es
or
scas
and
cmc
mov
jp
aam
jnp
outsl
pop
inc
rorl
fs
push
push
addr16
ljmp
addr16
add
out
mov
fmuls
jp
jp
or
mov
add
nop
shl
pushf
adc
scas
xlat
push
scas
test
pop
es
add
loopne
pop
push
lret
dec
mov
int3
xor
pop
repz
lods
jmp
cs
fsubrl
dec
inc
nop
adc
cs
imul
mov
outsb
test
mov
inc
sub
std
pop
ret
leave
cmpsb
mov
mov
andl
xchg
or
mov
mov
push
sub
imul
pop
jl
imulb
int3
int
or
sbb
popa
loopne
movsl
xchg
xchg
adc
icebp
mov
inc
xchg
test
inc
cli
fwait
gs
lahf
lfs
mov
scas
mov
xor
add
clc
dec
int
cmp
fistps
clc
xchg
sub
xor
mov
pop
loopne
adc
mov
addr16
lods
clc
cs
xchg
je
scas
das
sahf
push
out
ret
mov
sub
pop
pop
stc
subb
jno
lds
repz
outsl
mov
aam
pmullw
xchg
fstpl
int
lock
jge
sub
mov
add
inc
adc
push
push
mov
jnp
loopne
adc
mov
jbe
or
inc
xor
mov
sbbl
aad
jbe
in
lea
mov
pop
imul
repnz
mov
loopne
scas
add
nop
cmp
mov
sub
mov
mov
cs
pop
or
bswap
cmp
cmp
sbb
xchg
rcr
pop
jecxz
fdivr
mov
xchg
adc
mov
lahf
leave
pop
push
jno
xor
push
ficompl
mov
sub
ficomps
push
popf
push
add
adc
mov
adc
jns
imul
sub
inc
pop
into
addr16
inc
in
pop
dec
stc
add
scas
sbb
popf
and
shll
push
out
iret
fildl
lods
movsb
adc
inc
mov
add
notb
cmp
and
jns
xor
mov
jmp
push
pop
test
and
xor
xor
int
xor
adc
sbbl
cmp
test
addr16
dec
add
out
into
bound
jae
loop
shll
jp
sbb
clc
or
push
mov
pop
lahf
push
je
ret
repz
fisttpl
xchg
push
mov
adc
shl
leave
and
lock
aas
pop
cmp
ljmp
mov
shl
and
test
mov
cmp
cli
fistpl
adcb
out
in
and
mov
sub
add
mov
daa
mov
sarb
push
adc
add
js
push
adc
loop
mov
ljmp
pop
lahf
ret
sbb
and
rclb
push
sbb
ss
cmp
pop
imul
xchg
dec
mov
lret
cmpsb
jno
or
out
xchg
popf
mul
test
lret
inc
mov
clc
add
aaa
cmp
call
inc
or
cmp
adc
sbb
and
aaa
in
dec
imul
or
in
cmpsb
add
gs
and
xor
std
cmp
icebp
inc
lret
repz
jp
fwait
xor
push
jae
pop
push
mov
inc
fsubp
popa
addl
push
imul
int3
mov
jnp
arpl
xchg
sub
and
jne
jb
je
fisttpl
mov
jb
daa
inc
roll
cmc
gs
or
lcall
sub
gs
jb
add
sub
cvtps2pi
mull
sbb
xchg
in
jecxz
ja
andb
test
push
pusha
fcoms
dec
dec
or
sbb
inc
sub
xchg
inc
cli
sahf
in
leave
pop
push
mov
mov
repz
jae
adc
sub
dec
add
mov
aam
sarb
pusha
mov
outsl
popa
stc
daa
pop
xchg
movsb
daa
adc
in
or
mov
xchg
xor
mov
imul
loop
push
inc
jae
shl
ret
inc
out
jge
cmp
movsb
xchg
sti
cwtl
pop
repz
pop
add
adc
jge
xchg
push
pop
enter
add
out
scas
sub
sub
pushf
jmp
sub
cmp
sub
dec
add
dec
pushf
push
push
mov
into
add
jp
pop
cmpb
mov
cmp
mov
fchs
xchg
add
aas
cmc
or
mov
jmp
dec
pop
mov
int3
mov
repz
adc
sar
sahf
movsb
sub
xor
out
test
scas
sti
out
cmp
mov
mov
int
mov
jg
in
fnsave
mov
fstl
stos
popf
adc
pop
scas
push
loope
ret
sbb
xchg
test
ja
mov
int
cmp
icebp
pavgb
movsl
dec
cs
in
sub
enter
lods
jo
or
cli
cmp
clc
push
rclb
pop
dec
xchg
or
mov
ret
nop
xor
push
ret
sbb
outsl
fisttpl
cmp
jbe
jo
or
dec
sbb
xchg
xchg
or
dec
idivb
pop
mov
dec
pop
sub
cli
push
or
xor
loopne
je
mov
les
int
in
pop
cmpl
sub
jecxz
add
ss
ss
movsl
cmpsb
aas
or
pop
in
fcomps
sbb
pushw
mov
push
dec
sarb
ret
mov
xlat
lret
add
in
repz
mov
pop
testb
dec
sbb
xchg
fldcw
cmp
adc
and
fwait
ds
scas
cmp
mov
fcmove
outsl
dec
in
mov
mov
movsb
jmp
pop
and
shrb
stc
js
sbb
iret
out
or
test
scas
fs
pop
pop
and
hlt
add
sbb
sarl
mov
cmc
test
lods
or
addl
inc
jg
in
ret
jo
sub
add
push
or
sbb
pop
xor
push
jne
div
icebp
or
sub
xor
sub
xchg
push
push
or
outsl
ja
shr
adc
sti
mov
fs
dec
pop
sti
add
arpl
mov
dec
shlb
fwait
mov
ffreep
scas
imul
adc
mov
mov
hlt
xchg
add
mov
inc
push
jmp
pop
and
push
mov
adc
xor
lods
push
push
outsl
sbb
leave
xor
lcall
mov
ljmp
ja
hlt
xor
xor
ret
movsl
mov
mov
aas
mov
push
pop
into
int3
js
popf
inc
dec
mov
sbb
dec
and
mov
aad
inc
jae
int
popf
dec
loope
es
and
push
xchg
out
aam
imul
push
stc
aam
fisubrl
push
cmp
push
std
call
lahf
nop
mulb
push
hlt
mov
scas
test
sar
jns
iret
mov
dec
clc
mov
cmpb
cs
sbb
testb
rcrb
addr16
or
xor
push
loop
push
js
ss
hlt
cld
inc
push
sub
push
or
xchg
or
mov
or
into
cmp
adcb
mov
nop
test
imul
adc
das
adcb
add
xor
je
jle
insb
in
loopne
sbb
push
xor
imul
icebp
xor
jg
inc
mov
mov
sbb
fwait
mov
xor
test
lret
add
inc
mov
call
inc
das
dec
push
mov
movsb
leave
lahf
incb
mov
leave
xchg
in
rcrl
push
mov
cli
aaa
rcrl
data16
mov
insb
bound
data16
xor
call
push
cmpl
das
xchg
fmulp
mov
mov
js
fdivs
rol
ret
inc
jmp
mov
aas
ds
push
sub
adc
dec
popf
or
push
cmp
lea
les
fsubr
push
jle
push
push
mov
or
stos
push
fimuls
mov
scas
inc
push
dec
push
lcall
jg
sbb
cmp
out
xlat
addb
fwait
rcll
push
xchg
xlat
mov
sub
mov
mov
xor
add
negl
adc
jge
ss
jae
test
das
movsw
mov
xchg
clc
sub
in
xchg
add
gs
out
lcall
inc
fisubs
xchg
rclb
arpl
mov
add
add
in
mov
xchg
sub
test
pushf
push
shlb
lret
ja
stos
shll
push
push
jecxz
stos
dec
xor
mov
jae
adc
loope
ja
ljmp
push
dec
cmp
jne
adc
inc
insl
and
movsb
or
push
stc
aaa
mov
jno
mov
andb
add
enter
es
out
mov
jle
add
fcmovbe
sub
xor
rorl
ss
pop
pop
jp,pt
xchg
int3
mov
push
or
gs
data16
pop
and
xor
xor
mov
popa
movsb
cmp
and
sbb
imul
in
call
pushf
mov
ss
insb
xchg
push
xchg
adc
xchg
sti
sahf
incb
sbb
stos
sub
pop
xchg
sub
adc
push
add
jns
dec
dec
stos
int3
xor
flds
mov
pop
mov
lods
add
mov
push
pop
div
out
lods
xchg
jb
cmpsb
test
sub
bound
loope
repnz
xchg
into
jmp
lods
test
into
js
lds
lret
or
sbb
mov
inc
dec
push
sub
push
cmp
les
add
mov
inc
xor
push
cld
in
jecxz
es
fidivrs
sbb
in
adc
cmp
fimull
dec
jns
mov
cltd
cmp
sbb
xchg
jp
or
mov
push
jne
xchg
loop
push
test
dec
mov
push
nop
hlt
sti
div
dec
mov
test
movsb
jns
fiadds
add
xor
clc
dec
and
pop
jnp
mov
sbb
test
jp
dec
test
mov
repz
add
push
shll
test
insl
or
inc
dec
rclb
xor
adc
ret
xchg
sbb
andb
xor
stos
or
out
fldl
xchg
das
out
fistps
sub
int
add
jmp
sub
ljmp
mov
cmp
push
mov
sbbl
mov
lret
daa
inc
mov
sbb
popl
mov
pop
and
mov
adc
jmp
stos
lds
addl
les
mov
sbb
imul
lea
mov
cmpsl
mov
and
adcb
ja
pop
adc
push
daa
pop
fmull
hlt
xchg
inc
mov
insb
or
cli
sti
lock
fwait
subl
add
or
jne
pop
add
adc
xor
jl
rolb
fidivs
dec
xor
xchg
pop
pushf
xor
or
and
in
clc
movsl
adc
mov
lahf
gs
inc
add
in
jg
daa
mov
mov
mov
inc
shlb
out
cmp
and
out
icebp
cmc
sub
dec
or
mov
and
ljmp
cmp
aas
inc
es
add
mov
mov
sahf
add
mov
lret
jl
xchg
or
add
pop
addr16
es
in
cmpb
fwait
insl
fcom
fimuls
pop
mov
dec
cltd
dec
nop
jo
mov
lret
pop
or
adc
inc
arpl
pop
fmuls
push
sbb
dec
jae
xchg
fnsave
faddl
insl
xchg
ss
push
or
adc
out
pop
cs
jecxz
push
adc
bound
scas
add
push
outsl
out
mov
dec
sbb
inc
jno
add
rcrl
lea
sub
dec
jo
or
push
outsb
xchg
xor
lea
and
out
iret
fcmovu
leave
pop
dec
mov
lar
loopne
in
pushf
sahf
movsb
jb
pop
xchg
mov
add
push
and
rorb
jmp
adc
sub
dec
das
jo
outsl
out
pop
and
inc
std
dec
and
push
jnp
mov
int3
or
lds
cmp
xor
mov
enter
repz
jmp
inc
movb
or
dec
lea
and
out
in
gs
insl
mov
ljmp
lods
xor
push
loopne
shll
dec
cmc
push
movsb
jne
sti
js
jne
inc
mov
sub
xor
xor
sarb
mov
cmpsl
inc
in
xchg
pop
pop
fwait
aad
pop
and
fists
mov
aas
adc
lods
adc
mov
inc
cwtl
mov
aad
int
shl
shll
xlat
ds
test
or
mov
ficomps
popa
out
xchg
dec
sub
lea
xchg
xchg
outsl
mov
xchg
fs
push
inc
mov
pop
in
lods
mov
jne
xchg
or
fwait
cltd
inc
fsubrl
es
lret
adc
stos
xchg
popa
fbld
cmpsl
push
xchg
jae
lea
mov
cmovp
repnz
ss
cld
loope
pop
test
ficomps
xchg
add
lcall
add
mov
adc
icebp
mov
jo
test
dec
out
add
in
sub
dec
push
cmpb
sub
imul
int
adc
push
into
mov
mov
clc
lods
or
jbe
jns
and
imul
xchg
gs
mov
loop
sub
scas
mov
push
add
sub
jle
inc
mov
inc
push
int
jbe
sub
aas
or
ss
mov
out
jmp
repnz
pop
addl
ror
jle
pop
loop
mov
movsl
lds
lret
sbb
jno
jo
mov
outsb
fnstsw
or
or
cmc
sub
push
mov
jbe
movzbl
mov
mov
fcmovnu
cmp
sbb
cmpsl
psrad
loopne
pop
mov
shl
shr
push
sbb
data16
pop
adc
ffree
aaa
mov
jno
cmovbe
inc
sahf
repz
movsb
push
out
cmp
repnz
fidivrl
push
out
cmp
cld
insb
addr16
fnstenv
jne
ss
es
nop
outsl
adc
gs
rorl
pop
mov
cmpsb
rcrl
mov
into
xchg
sbb
je
pop
loop
xor
push
mov
jne
sbb
rorb
or
sbb
into
or
test
mov
sub
icebp
sahf
mulb
xor
and
adc
adc
inc
adc
mov
stos
inc
jae
mov
xorl
inc
lock
movsl
mov
je
gs
popa
lret
sarb
xchg
pop
roll
repz
sahf
mov
dec
aad
call
mov
insl
lock
popf
xchg
mov
jge
rcrb
xchg
sub
push
rol
sbb
xchg
leave
push
mov
lret
xchg
cld
jecxz
xchg
in
add
sbb
cmpsl
call
scas
cmp
outsl
mov
jecxz
sar
push
and
out
push
into
xor
stc
and
pushl
push
or
aam
jl
into
into
stos
inc
jnp
pushf
mov
mov
repnz
add
add
outsl
cli
and
mov
testl
clc
loopne
push
in
fnstsw
xchg
sarb
out
fidivrl
shl
shlb
xchg
enter
aam
xor
inc
cltd
push
fdivs
xor
push
xor
push
xor
push
pusha
xchg
mov
lds
test
sbb
sahf
into
pushf
adc
in
js
cmp
insl
xchg
sbb
sbb
in
mov
mov
lahf
shrb
dec
push
and
rcrl
sbb
lcall
jns
cmpsb
fisubrs
test
and
jp
out
cli
jmp
outsl
movl
shl
int3
loopne
mov
test
jae
lret
add
cmp
mov
mov
cmp
jb
xor
lahf
in
xchg
cs
push
jle
cmp
mov
add
js
xor
stos
inc
loopne
test
sbb
shrb
mov
xor
mov
fsqrt
add
jl
nop
fiadds
jp
or
xchg
outsl
es
cs
xor
mov
jbe
and
cld
dec
fldt
mov
jb
cmc
pop
pop
movsb
lock
shr
cmp
rorb
mov
repz
mulb
pop
outsb
and
sbb
pusha
or
adc
cmpsl
je
in
cmpb
aad
sbb
xchg
pop
cmp
mov
call
mov
fldenv
xchg
scas
mov
jg
jge
pop
add
inc
add
push
int
mov
xchg
mov
ror
test
scas
jae
mov
or
sbb
leave
aad
pop
ret
push
cltd
cltd
gs
sysenter
sbb
aad
push
xchg
inc
push
mov
fs
les
push
xor
inc
or
test
inc
jne
xchg
idiv
movsl
and
inc
rorb
bound
ss
jns
or
xor
push
popa
jle
outsb
sbb
inc
es
lea
daa
add
cmpsl
jno
cwtl
test
cmc
pop
or
fld
xchg
jae
movsb
mov
stc
cmp
rorl
or
xor
push
std
sbb
mov
add
cltd
popf
clc
adc
xor
inc
stc
cli
movsl
nop
add
data16
jnp
leave
mov
push
or
sbb
movsb
mov
xchg
cmp
or
or
mov
movl
push
lret
dec
add
push
pop
mov
and
mov
add
lds
sbb
mov
les
xchg
fwait
scas
andb
imul
sbb
sbb
dec
adc
sti
fimuls
mov
inc
test
adcb
js
cld
xor
push
daa
enter
pop
xorl
mov
dec
test
xlat
adc
rcrb
and
cmp
sbb
or
fadds
lahf
cmp
jg
pop
cmc
mov
aas
mov
fcomps
xchg
xchg
aas
pop
inc
sub
movsl
xor
jge
mov
test
movsl
movsl
sbb
popf
push
loopne
stos
std
loopne
test
pop
sub
or
xor
shlb
jp
xchg
mov
dec
cli
mov
push
std
lahf
out
cmp
pop
mov
pop
cmpsb
jmp
dec
cld
xchg
jmp
ficompl
xor
dec
outsl
test
cmc
xchg
pushf
stc
xor
addr16
dec
and
es
fldt
xor
into
jp
ljmp
stos
dec
lcall
movl
orl
dec
mov
outsb
stos
mov
lret
out
das
jnp
adc
test
decb
push
xchg
jmp
pop
sti
mov
js
pop
cli
scas
mov
movsb
rol
and
test
pop
mov
xor
pop
fdivs
xorl
subl
and
inc
test
mov
nop
call
aad
aad
cwtl
rol
inc
mov
cmc
scas
push
xor
lock
add
outsl
cmp
test
arpl
test
jbe
dec
sub
jbe
es
add
shrb
les
mov
sbb
ds
xor
sub
bound
addb
sub
or
movsl
addl
call
pop
sbb
neg
pop
loop
leave
jnp
add
inc
stos
lods
add
mov
notl
icebp
push
pop
sbb
adc
xchg
push
pop
dec
fisttps
js
sbb
adc
sbb
lock
and
das
or
jo
jno
loop
sbb
push
inc
sub
test
orb
push
jg
scas
jge
pusha
cli
mov
push
add
mov
inc
dec
adc
or
pop
and
stc
pop
roll
cwtl
jnp
shll
icebp
or
and
jge
loope
xchg
mov
sti
js
ret
fidivrs
jns
test
arpl
test
mov
pusha
xlat
xor
jae
notb
loope
ret
into
ds
mov
aad
shrb
push
fstps
jg
es
xlat
dec
mov
jb
push
aaa
xchg
add
sub
leave
jno
in
sbb
jnp
inc
loop
lods
iret
push
mov
pushf
lcall
and
push
xor
in
mov
xor
lock
shrl
clc
xchg
mov
jo
movsw
mov
pop
std
push
push
xchg
mov
div
and
mov
dec
jo
int3
js
mov
push
popf
idiv
mov
fbstp
cmp
cs
sbb
and
lods
test
add
mov
fs
out
cmp
jge
fisttpl
lea
sbb
mov
xor
test
decl
pmuludq
repz
data16
lods
sahf
notl
ret
xchg
add
push
loop
xchg
xchg
sub
xchg
xor
push
aaa
jae
das
sti
jb
or
int
inc
loopne
mov
out
addl
lcall
sbb
jbe
int3
xchg
and
lcall
ret
sbbb
js
dec
rcrb
mov
mov
shll
inc
push
loope
jne
sbb
push
or
loope
sbb
mov
jge
cmp
jno
sub
js
mov
cwtl
js
push
xchg
add
scas
add
fidivs
mov
icebp
xchg
or
fsubrl
pop
mov
loop
ficoml
das
inc
inc
cmp
cmp
mov
bound
dec
xor
fsubp
sbb
mov
int3
sbb
mov
ret
data16
mov
jmp
mov
in
push
and
testl
daa
outsb
and
adc
in
and
mov
mulb
xor
sti
or
push
mov
fs
add
fcom
cmovs
inc
xchg
mov
dec
mov
cld
out
add
mov
ljmp
inc
ret
adc
outsl
xlat
xor
or
test
loope
hlt
loopne
push
pop
in
inc
push
inc
ljmp
fsts
mov
rcr
mov
dec
cld
in
sbb
push
mov
test
ds
mov
add
into
push
cmp
pop
pop
or
out
inc
call
sbb
cmc
ret
push
mov
jbe
mov
loope
add
or
jae
or
mov
cmp
adc
rorb
pop
mov
rclb
pop
fldcw
ds
mov
cmc
mov
ss
add
jp
xor
ffree
push
out
fsubr
lret
ss
orl
out
pop
inc
aad
pop
xchg
cltd
shll
cli
cltd
addr16
ja
dec
sahf
nop
aaa
pop
std
dec
mov
cld
mov
shr
mov
xchg
cltd
ds
into
or
fbld
addb
add
pop
xor
jbe
addr16
ja
mov
sub
out
shll
adc
mov
xchg
pop
faddl
test
cwtl
out
in
mov
push
push
loop
popf
or
bound
bound
add
cmp
push
sbb
out
mov
hlt
aad
test
jecxz
xor
adc
push
lahf
add
setne
add
xchg
pop
aam
bound
out
dec
in
scas
sub
aam
jp
stos
cmpsl
mov
inc
push
xchg
out
adc
loope
dec
repz
adc
sbb
les
inc
or
les
jb
dec
lock
sahf
push
ret
or
dec
xor
out
mov
push
sbb
mov
xor
popf
mov
es
ret
mov
dec
push
xor
sti
and
movb
ljmp
add
les
ja
in
push
adc
aam
cmp
cmp
add
in
les
jne
dec
into
imul
xchg
cmp
mov
mov
je
cmpsw
fsts
cmpsb
in
out
xor
mov
sbb
sbb
outsb
mov
jle
mov
icebp
pop
jb
ljmp
test
pop
fsubl
imul
je
sub
int
push
mov
mov
push
xor
adc
jne
or
outsb
xchg
pop
push
mov
ljmp
insl
pop
jbe
loope
add
dec
or
mov
lcall
dec
adc
pop
rclb
movsl
add
xchg
xchg
jmp
cmp
push
add
jle
xchg
and
xchg
mov
jno
push
mov
pop
ja
test
das
scas
mulb
jmp
pop
arpl
adc
pop
adc
fiadds
dec
mov
sub
jb
adc
xchg
xlat
pop
xchg
sbb
pushf
mov
les
adc
push
cmp
add
or
adc
sub
addb
add
mov
out
fistpll
mov
mov
push
adcb
cltd
mov
cmp
xor
mov
mov
scas
xchg
jno
push
jnp
ljmp
push
sbb
cwtl
mov
jge
mov
pop
sbb
aas
popf
sbb
sbb
and
mov
mov
fistps
push
test
imul
push
sahf
pop
cwtl
xchg
outsl
ljmp
nop
add
cmpl
or
add
insb
movsb
insw
xor
leave
test
dec
pushf
push
jb
aam
into
int3
mov
dec
loopne
out
in
aaa
lods
scas
in
fwait
inc
aad
ror
loopne
out
mov
xor
mov
mov
lcall
ret
mov
rcrl
popa
push
dec
fnstenv
xchg
je
cmp
cmp
push
mov
sahf
cmp
fstl
int3
mov
adc
pop
pusha
pop
aaa
inc
sbb
pop
xor
loope
push
rcrb
mov
push
pop
push
popa
xchg
test
icebp
add
dec
mov
testb
push
pusha
jl
iret
lret
int3
push
dec
ja
mov
pop
das
mov
imulb
aas
adc
sub
jl
out
dec
inc
xor
inc
adcl
das
popf
fsubrp
bound
or
cli
cmpsl
lret
or
pop
xchg
or
movntq
add
pop
jnp
pop
lock
sub
hlt
aaa
cmp
subb
dec
mov
cmp
mov
imul
aad
jmp
mov
mov
inc
sbb
imul
pop
sub
popa
pop
push
popl
lds
sub
add
inc
jae
dec
les
dec
mov
sub
enter
jne
lret
jg
push
dec
dec
dec
and
pop
add
into
or
xchg
jo
sub
pop
jb
mov
sbb
mov
lods
pop
sub
add
cmp
sub
int
ds
call
mov
xlat
pop
fucomp
int3
cltd
cld
test
lods
add
mov
adc
sub
dec
mov
sub
stos
pusha
xchg
mov
and
inc
mov
sbb
call
test
in
sbbl
adc
jle
cmp
or
mov
fildl
lret
loop
lcall
in
cmp
mov
fcoms
xchg
cmp
faddl
mov
daa
push
scas
nop
lods
push
adc
xchg
loope
add
xor
adc
les
xchg
sbb
jbe
das
ret
in
repnz
sbb
pop
push
shll
cmp
sti
xor
xor
mov
scas
push
sbb
scas
add
sbb
mov
jnp
out
jmp
outsb
mul
addr16
addr16
mov
jbe
stos
imul
and
pop
pushl
fcoms
mov
jo
add
in
pop
mov
test
inc
push
dec
sub
sbb
xor
sub
xor
push
movsl
clc
imul
mov
mov
out
sub
lcall
lock
add
add
pop
adc
popl
pop
insb
mov
pop
inc
aaa
cwtl
out
sub
mov
pusha
jg
sbb
sbb
jns
add
dec
aad
clc
push
pop
and
pop
push
arpl
cmp
mov
std
xor
jl
inc
pusha
stos
mov
cli
lods
je
add
mov
lea
xchg
xchg
enter
mov
jmp
inc
dec
out
jno
sbb
or
orb
gs
std
sti
aas
frstor
and
or
mov
repnz
lcall
call
rorb
cwtl
in
stos
test
test
pop
pop
fldl
sbb
xchg
hlt
jecxz
add
jmp
or
fwait
nop
dec
jbe
cltd
or
out
xchg
jl
sbb
xor
clc
test
add
mov
jbe
jmp
sbb
out
jl,pn
sbbb
psrlq
fnstenv
sub
jne
aaa
movb
sbb
out
stos
test
aaa
jp
out
mov
in
das
jmp
xor
jl
dec
negb
push
sub
inc
push
cmpsb
and
push
mov
jns
adc
es
into
loopne
jecxz
jg
jg
lods
icebp
mov
outsl
mov
lea
pop
mov
int
aas
dec
xchg
pop
sbb
lret
data16
add
icebp
sub
inc
mov
sbbb
mov
pop
lods
lcall
outsl
cmc
popf
adc
fcom
pushf
imul
inc
sbb
mov
push
inc
add
clc
loope
jg
push
inc
sub
pop
cwtl
push
adc
or
fsubrs
or
stc
test
aam
mov
inc
sbb
sub
fwait
js
xlat
jge
loopne
int
add
int
movsl
stos
push
push
inc
nop
jp
movl
fistps
jge
out
mov
or
inc
enter
inc
cld
mov
test
cmp
mov
and
and
lret
mov
je
xchg
cmp
inc
movsb
div
sub
cwtl
mov
xchg
mov
stos
loop
orl
loopne
mov
outsl
enter
sbb
mov
mov
jno
and
jmp
out
lahf
lcall
fnstenv
inc
aam
movsb
testb
std
stc
jmp
das
xor
or
fadds
jl
adc
jbe
adc
mov
or
mov
jp
jb
lods
xlat
sbb
data16
enter
dec
sub
jno
xchg
ja
mov
pop
ljmp
out
cmp
mov
aas
lret
sub
lea
data16
lret
xchg
pop
lret
aam
jmp
jmp
mov
cwtl
and
stos
sbb
lods
and
add
mov
rorl
jg
clc
shlb
cmpsl
pop
sub
mov
inc
inc
cmp
fisttps
std
jns
mov
and
xchg
lret
ljmp
mov
stos
iret
adc
xor
shlb
cmp
jmp
aam
mov
fistpll
dec
repnz
xor
xor
popa
das
lods
dec
push
jne
sub
cltd
xchg
repnz
xchg
adc
jge
adc
xchg
xor
pop
pop
pop
icebp
xor
and
data16
push
loopne
and
xor
hlt
fstps
cmp
pushf
aam
pop
fcoml
mov
es
nop
mov
out
jae
jle
mov
xor
call
test
jmp
lret
mov
xchg
mov
out
lret
icebp
push
rcrb
and
xor
std
dec
lret
push
push
nop
cmpsl
mov
jne
fimuls
repz
aam
or
loop
jecxz
mov
rclb
test
and
push
mov
jle
es
outsb
cmp
xor
cmpsb
aas
lcall
cmpsb
in
mov
pop
ss
xor
xchg
cltd
bound
jne
dec
repnz
leave
test
test
das
push
loop
cwtl
lret
fs
pop
popf
icebp
jae
rcr
or
xchg
sbb
iret
xor
shl
push
xchg
cmp
jle
rorb
aaa
icebp
scas
shl
stos
scas
fnstcw
pop
push
rolb
in
mov
and
subl
int3
leave
mov
mov
lds
jmp
sub
or
mov
fdivs
loopne
jp
ret
jge
mov
mov
push
sbb
in
dec
dec
lcall
mov
jecxz
and
pop
fwait
push
and
jecxz
rorl
mov
sub
cmpsl
or
push
cmp
cmp
mov
pop
xor
jp
pop
inc
inc
pop
ss
sbb
jne
pushf
add
xlat
test
cwtl
les
imul
inc
stc
aas
jne
push
scas
xrelease
fidivl
stos
popf
mov
lea
repz
je
movsb
cmpsb
add
push
bnd
cmc
push
xchg
jle
mov
mov
das
lret
subb
xchg
int
jecxz
lahf
mov
inc
cmp
data16
subb
and
mov
addr16
jl
mov
xchg
jne
sub
rorb
stc
inc
xor
xchg
js
mov
adc
mov
in
mov
ds
cmp
mov
lret
jg
mov
pop
ljmp
xor
mov
cmp
daa
out
jmp
fisttpl
and
pusha
je,pn
aad
leave
xchg
ss
das
mov
loope
mov
cmp
mov
xchg
aam
loop
jmp
adc
pushf
mov
push
fcmove
inc
cmc
shll
cmpb
inc
push
push
mov
inc
or
sub
jae
sbb
inc
rclb
jb
pop
inc
mov
mov
shrl
adc
push
test
sbb
aam
das
mov
ds
sub
pop
ss
out
sbb
pop
loopne
xchg
cli
sbb
adc
sub
sbb
popf
bound
orl
out
or
sub
adc
mov
adc
int
ja
dec
mov
add
jno
sub
xor
lret
cmpsl
loopne
or
mov
addl
mov
fdivrl
xlat
fstpl
push
test
adc
ja
cwtl
jge
mov
pop
in
idivb
aad
push
sbb
gs
sti
and
xor
xor
mov
mov
adc
jno
mov
mov
pop
pop
and
inc
shll
jns
mov
mov
push
dec
xchg
and
lcall
pop
test
sub
pop
pop
ja
jle
mov
add
pop
rorb
mov
push
test
push
std
cmp
push
jmp
ljmp
into
std
call
sub
dec
push
sbb
adc
test
or
adc
push
mov
int3
movsl
mov
push
leave
mov
subb
adcb
xchg
inc
xor
xlat
mov
cmpsl
mov
std
andb
shr
lods
mov
mov
or
gs
dec
pop
adc
stos
xor
and
pop
mov
addr16
push
sub
popf
xor
lret
mov
sbb
jp
cwtl
push
std
add
arpl
aas
rep
xchg
cmc
xchg
jmp
xor
xor
andb
mov
ss
sbb
add
insb
arpl
adc
cmp
outsl
jb
in
lods
sbb
incb
pop
dec
movsb
cld
xchg
in
inc
loop
sbb
test
xchg
insb
ret
das
xor
push
inc
sub
bound
imul
xlat
push
aam
xchg
ret
dec
shlb
xchg
inc
cld
icebp
movsb
stos
xchg
lret
les
hlt
int3
pop
mov
inc
pop
mov
call
inc
xchg
adc
mov
aam
xchg
mov
les
push
mov
pop
jne
xchg
das
xchg
mov
je
cltd
pop
jns
pop
leave
enter
add
sahf
addr16
shrl
xchg
jbe
les
and
repz
mov
mov
inc
out
test
and
sub
sub
sbb
add
fninit
push
out
fimuls
jno
iret
sub
mov
int3
ret
xor
aas
and
hlt
mov
pusha
jns
mov
mov
pusha
sub
jns
cmc
fisubl
bound
pop
leave
arpl
xchg
jl
orl
cmp
aas
mov
ja
das
sbb
cmpsb
push
inc
divl
fistpl
and
push
lcall
inc
out
pop
out
or
mov
mov
out
aaa
sbb
cmp
out
xor
and
add
clc
cmp
push
cmp
sub
fidivs
mov
fldz
movsb
xchg
add
adcb
pop
xchg
in
ret
mov
fsubl
ret
mov
movsl
arpl
cmp
jmp
in
or
xor
loop
in
jno
test
andb
in
adc
mov
mov
push
push
fadd
or
test
fiadds
sbb
pop
push
mov
in
cs
jg
adc
test
scas
dec
outsb
loope
push
mov
in
fstps
int
adc
cmp
push
jle
cmp
stc
mov
xchg
jmp
in
rcr
ja
fxch
pop
sarl
stos
pop
dec
cmp
mov
and
dec
pop
les
lods
aaa
dec
cmc
inc
repz
jne
jb
or
inc
outsb
push
lret
jns
rcll
sbb
and
ja
inc
call
sbb
arpl
jmp
std
jmp
and
ja
sbbl
sbb
mov
iret
xor
aaa
popf
lret
sar
cwtl
xchg
or
clc
adc
imul
lea
inc
movl
repz
test
jae
dec
pop
pop
into
mov
cmp
sub
jb
jmp
pop
nop
sbb
jg
pop
fcmovbe
loopne
jl
sbb
cmp
imul
push
mov
sbb
cmpsb
xchg
add
push
add
add
push
aam
mov
ja
call
sub
pop
ljmp
jge
incb
js
adc
pop
inc
loopne
mov
fsubl
push
pushf
sub
lahf
test
outsb
repnz
lret
xor
aam
rorl
imul
fdivr
ljmp
mov
jae
addr16
or
sbb
push
push
mov
addr16
lea
iret
adcl
and
out
mov
cmp
mov
gs
or
mov
add
loope
mov
ljmp
dec
mov
lds
loope
jl
enter
and
sbb
mov
mov
int
sub
pop
and
push
and
or
in
push
int
aaa
out
adc
mov
pusha
xor
popa
mov
jmp
cmc
in
and
xchg
fstps
lret
pusha
inc
jg
pop
scas
push
and
mov
lahf
out
mov
jb
xchg
sahf
mov
mov
mov
mov
add
sti
xor
pop
mov
push
xor
sbb
call
repz
test
inc
mov
mov
pop
sub
jbe
fcompl
int
in
dec
add
cs
aam
mov
loope
lods
jns
xor
mov
sbb
mov
sub
sub
or
xchg
cli
push
lods
out
jno
cltd
jo
cmc
jo
cmp
inc
scas
dec
mov
arpl
sbb
cmp
push
add
sbb
jne
fisttpl
push
jp
loop
or
add
mov
mov
mov
shl
insl
rcr
cli
shrb
push
addr16
add
js
adc
cmc
clc
icebp
cltd
add
je
xor
popf
sub
je
sub
mov
cmp
mov
jno
xchg
les
lahf
sub
jle
leave
pushf
pop
sub
mov
aaa
mov
push
mov
test
sbb
and
std
pop
sbb
in
scas
mov
mov
mov
xchg
clc
xchg
mov
pusha
in
outsl
lret
fidivrs
shr
fstl
mov
cwtl
cmp
xchg
les
bnd
scas
lds
sub
repnz
imul
std
mov
repnz
shld
lcall
dec
pop
pop
notb
lcall
nop
test
push
sbb
cmpsb
pcmpeqb
push
cmp
sub
xlat
mov
pusha
dec
xor
mov
xchg
xchg
hlt
psubb
ret
loopne
ljmp
mov
sbb
fdivrl
daa
xor
push
test
pop
sub
cmp
cmp
pop
push
push
sbb
js
out
push
push
mov
subb
jne
xor
fnstcw
pop
add
cmp
fs
inc
outsb
add
inc
clc
mov
test
pop
leave
test
jl
pusha
adc
fs
pop
fstp
imul
cmp
jbe
pop
arpl
sub
imul
fsubs
push
add
aad
sub
mov
dec
add
cmp
adc
icebp
dec
mov
negl
dec
int
out
sbb
sbb
pop
xor
ret
xchg
and
jae,pn
lods
dec
lret
add
and
nop
imul
loope
mov
mov
pop
mov
and
adc
idivl
pop
xlat
sub
fwait
pop
ret
pushf
pop
shlb
mov
mov
out
adc
std
xor
jo
lea
ret
dec
lods
xchg
add
or
addr16
loope
xrelease
xor
jge
daa
dec
mov
out
dec
jl
aam
shrb
push
addr16
out
cmpsb
xchg
aad
jge
fisubrs
cld
js
adc
fcmovnu
out
mov
testb
cld
sbb
sbb
and
repnz
xchg
mov
adc
out
jp
push
jmp
gs
pop
mov
mov
mov
lock
sti
dec
cmp
xor
lcall
or
adc
xlat
fs
inc
cwtl
jl
fildll
out
iret
stc
and
adc
out
test
dec
push
iret
and
pop
mov
divl
push
xchg
ds
cmp
inc
pop
sbb
jo
shrb
stc
sub
push
jns
cwtl
dec
dec
mov
loop
push
pop
mov
jbe
daa
dec
lea
or
lret
orl
cs
cmp
cltd
adc
pushf
inc
lret
and
lds
and
or
and
dec
sub
xchg
in
je,pn
pop
mov
pop
sbb
mov
ds
push
mov
incl
add
inc
in
cmp
loopne
add
cltd
lahf
mov
jnp
stos
push
lret
lods
pop
hlt
ror
ficompl
pop
jg
movsb
lock
imul
in
test
pop
add
lock
xchg
dec
out
shl
or
jmp
sbb
shl
xor
push
push
lcall
sub
adc
sub
jl
xor
sti
cmpsb
shl
sbb
out
inc
sbb
mov
in
sbb
hlt
lea
iret
icebp
push
rorb
fs
push
mov
xchg
jp
fistpll
jecxz
loope
stos
cmp
out
xlat
lods
dec
outsl
sbb
inc
cwtl
mov
mov
mov
cld
inc
cmc
or
push
jle
je
mov
cs
ds
lds
or
cli
xor
iret
mov
push
out
mov
scas
xchg
cwtl
stos
fwait
aaa
negl
ss
mov
sub
ja
sbb
lods
sbb
inc
cld
mov
xchg
ds
shrb
inc
sahf
fldlg2
outsb
cmp
adc
jmp
lock
lret
fidivl
jnp
loopne
dec
push
lcall
jle
sbb
cli
stc
push
adc
push
jnp
fs
xor
xor
out
loopne
jp
sarb
mov
shll
mov
test
dec
movsb
pushf
pop
lcall
dec
cmp
pop
ss
or
lea
inc
xor
dec
mov
cs
test
add
cmp
push
lahf
mov
data16
push
jb
lahf
shlb
test
sub
cmp
cli
lds
movsb
nop
mov
mov
mov
fdivl
sbb
fcoms
stos
insl
mov
mov
fnstcw
push
xchg
lds
arpl
into
and
std
and
xchg
ret
idiv
repz
cmp
mov
in
xor
arpl
ja
or
push
inc
xchg
adcb
mov
cmp
lret
adc
mov
xchg
or
ss
test
shrb
mov
cmp
xchg
sub
ljmp
in
mov
pushf
into
popf
out
negb
xchg
jge
cld
jae
pop
scas
sbb
pop
mov
sahf
subl
jo
jg
mov
add
jg
outsb
aam
mov
sahf
imul
push
push
repz
or
jns
int3
cmpl
jne
jecxz
xchg
js
mov
cmpsl
add
xchg
xor
jo
stos
push
adc
or
pop
or
xchg
mov
cld
pusha
cmp
dec
out
mov
mov
fistpl
pop
inc
jo
adc
pop
sbb
pop
xchg
into
sbb
xor
xlat
inc
hlt
sub
data16
shl
test
xchg
shlb
mov
das
push
pop
nop
jp
repz
int3
push
fwait
clc
int
xchg
into
pop
repz
push
lea
jmp
adc
xchg
dec
shlb
test
insl
xchg
daa
sub
aam
inc
jecxz
ret
adc
xchg
icebp
pop
push
cmp
pop
push
sbb
leave
jl
xchg
insl
stos
mov
add
test
adc
gs
xor
icebp
adc
jl
das
adc
push
in
and
cmp
hlt
add
xor
cli
sub
in
dec
cmpsl
sbbb
data16
scas
pop
xorl
repz
pop
mov
movl
mov
push
xchg
push
and
adc
fildll
mov
xchg
arpl
mov
dec
adc
inc
test
aad
mov
jo
sti
push
lods
and
inc
jb
fcoms
mov
icebp
ret
push
dec
jae
das
iret
jno
or
mov
sahf
notl
pop
sbb
ljmp
push
lods
aas
lds
aaa
mov
std
push
ss
inc
rorb
jecxz,pn
dec
addb
call
cmp
cmp
mov
mov
fwait
push
pusha
jbe
jb
imul
stos
addr16
mov
arpl
out
inc
add
scas
sahf
xor
cmp
mov
insb
ja
jbe
push
jno
push
add
mov
insb
pop
adc
les
rcrl
cmp
outsl
mov
push
fs
enter
shr
lods
fldz
dec
cmp
loopne
jbe
inc
loope
jns
or
push
jnp
lock
mov
lret
orb
cmp
jns
int
adc
pop
mov
cld
jmp
jmp
fstpt
movsb
lcall
cltd
hlt
ret
mov
cmp
ja
out
xchg
jmp
lret
mov
pusha
lods
xchg
push
fwait
pusha
sub
push
xchg
nop
and
push
cmc
xor
pop
mov
xchg
int
mov
sub
je
sbb
xlat
or
test
sbb
int
cmp
rcrl
mov
add
jle
inc
imul
add
mov
sbb
addb
pop
xchg
shlb
jbe
dec
jg
xchg
add
ds
gs
adc
jecxz
pop
ljmp
adc
jecxz
jnp
mov
push
inc
xchg
pop
aad
mov
jecxz
xchg
jp
xorb
and
sbb
xor
and
lcall
lea
jae
ds
mov
notb
cmp
shll
push
pop
repnz
notb
add
mov
push
lds
mov
push
dec
lds
lods
out
shlb
pop
lahf
pop
addl
fs
or
mov
mov
mov
cmpsb
es
adc
ret
sarb
outsl
sbb
insl
or
push
cmpsl
roll
pusha
ret
cmp
movsl
cltd
xchg
jl
xor
mov
adc
push
jg
add
pop
aad
lcall
pop
push
mov
mov
sbb
jmp
bound
dec
lods
pop
xchg
negb
xor
inc
sbb
xchg
dec
push
clc
jp
ret
xchg
rolb
adc
push
adc
or
cmp
xor
jns
stc
push
xchg
enter
out
sbb
mov
les
popa
lret
push
xchg
out
push
mov
mov
adc
clc
jecxz
xchg
lahf
mov
cwtl
stos
push
icebp
or
fdivrs
popa
jb
aam
dec
pop
dec
jmp
cli
mov
xor
jg
jp
movsl
pushf
movsl
adc
sahf
lods
ljmp
mov
pusha
popa
lcall
mov
push
stc
ret
adc
sti
or
ret
popa
jmp
lcall
pop
pop
push
mov
pop
aas
aaa
mov
adc
out
ficoms
add
les
jmp
push
jb
arpl
ds
sbb
xchg
fdivs
mov
push
jno
rol
ja
rcl
cli
push
sbb
or
jno
stos
push
jg
fists
dec
into
push
add
pop
xchg
cmpb
add
xchg
add
sbb
in
or
jecxz
enter
aaa
shrb
inc
sbb
adc
push
in
sub
dec
movsb
pop
xor
adcl
neg
sbb
or
mov
push
jecxz
xor
mov
loopne
bnd
aam
loope
icebp
xchg
mov
daa
aam
fxch
jmp
iret
lahf
add
inc
inc
push
and
mov
cmp
mov
out
stos
inc
mov
out
push
jne
rolb
fs
and
lods
das
jnp
aam
out
mov
jb
adcb
xchg
pop
jb
inc
test
leave
sub
xor
lret
push
popf
stos
call
test
add
adc
push
shll
stos
lock
xlat
or
jno
push
sbb
lcall
pop
add
es
jge
adc
mov
adc
sarb
cmpsl
mov
lods
jo
mov
ja
add
mov
cmp
push
hlt
jecxz
jge
jle
pusha
bound
in
jle
scas
js
jne
iret
dec
add
sub
cmpsb
sbb
outsb
or
mov
fsubrs
add
adc
adc
mov
pushl
push
mov
pop
add
mov
rcr
jge
pushf
daa
outsl
in
movsl
aam
pop
icebp
loopne
les
xchg
repz
add
adc
pop
dec
icebp
pusha
push
mov
or
mov
xor
or
inc
clc
sub
inc
push
pop
dec
inc
mov
cmp
jae
mov
cltd
pop
cli
movsl
push
dec
jo
dec
and
push
jb
pop
out
lahf
or
dec
insb
es
mov
fdivrs
scas
mov
pushf
add
cmp
fdivrs
fwait
pop
lds
insl
and
xchg
pop
imul
sbb
sarl
cmp
push
imul
and
mov
jne
insl
testl
sub
inc
mov
fld
jb
js
add
push
mov
push
imul
std
dec
jmp
jg
push
sub
into
pop
incl
cmp
push
pop
mov
pushf
repz
jnp
repnz
cltd
jb
js
adc
test
and
outsl
nop
nop
xor
rclb
and
shlb
imul
xchg
xchg
loop
ss
push
lfs
cmpsl
jno
stos
push
jnp
jle
xchg
pop
mov
enter
add
clts
cmp
jb
xor
das
pop
mov
rcrl
xor
jns
pop
or
mov
mov
in
or
daa
jnp
cmp
mov
push
xchg
scas
divl
lret
addl
testl
clc
in
xchg
repz
stc
lret
pop
cmpsl
dec
or
push
pop
xchg
xor
or
adc
push
negl
int
outsb
mov
arpl
sbb
rcrl
sbb
fdivrl
ret
mov
leave
and
xchg
popl
and
in
aad
ds
pop
add
xchg
cmovbe
mov
std
xchg
mov
aaa
push
pop
mov
sbb
lcall
aam
mov
mov
and
sbbl
push
adc
push
sub
insb
inc
mov
inc
push
push
and
sbb
stc
data16
cmp
fisubs
xchg
cmp
ror
aaa
and
aaa
sbb
pop
mov
mov
mov
fsubs
push
int
pop
movsb
sti
fdivl
or
std
xor
dec
cli
outsb
aam
adc
std
sub
xchg
mov
lahf
add
dec
movsl
daa
mov
leave
pop
mov
pop
and
inc
bound
dec
out
sub
pop
ret
sub
mov
fisubrs
daa
scas
movsb
pop
push
notl
fwait
in
xlat
push
sub
mov
pop
mov
leave
lcall
mov
fmull
jnp
mov
fildll
push
push
xchg
pop
lahf
push
mov
dec
inc
pop
jo
xchg
pop
add
inc
jnp
push
call
addl
in
ss
push
setp
dec
mov
stos
addr16
icebp
movsl
xor
and
push
sahf
mov
push
inc
push
enter
mov
mov
clc
mov
push
push
aaa
rolb
jle
jg
cmp
add
xchg
popa
and
loope
xchg
insl
mov
mull
cmp
scas
xor
clc
shr
call
fdivs
pop
cmpsb
notl
inc
pushf
mov
aam
addl
cs
daa
push
std
add
loop
mov
das
call
in
add
int3
cmp
gs
adc
pop
push
jae
jl
and
test
fstpl
and
add
daa
arpl
push
test
dec
test
std
inc
xor
andps
aam
xor
mov
cmp
out
mov
out
dec
movl
imul
push
jp
fldl
xchg
out
fwait
mov
inc
les
icebp
sti
pop
and
add
mov
enter
xlat
enter
or
imul
inc
add
fcomps
xor
lret
xchg
mov
xor
sbb
or
in
mov
jae
sbb
cmp
xchg
jl
dec
xchg
jge
outsb
or
int3
cmp
imul
add
divl
int
ds
pop
fs
sbb
push
xor
push
push
mov
xor
fwait
inc
or
roll
dec
addr16
popa
call
imul
sahf
adc
sbb
lods
inc
lret
inc
jbe
sbb
push
cmp
xchg
push
loop
dec
and
and
aaa
lahf
dec
lret
sbb
dec
adc
add
dec
cmpsb
xor
stos
icebp
jg
repnz
testb
subl
insb
nop
lret
xchg
fidivrl
mov
jl
lea
pop
inc
int
outsl
xor
insl
fwait
dec
clc
lea
push
or
push
fistpll
inc
cmp
mov
inc
mov
lcall
bound
add
add
adc
repnz
es
lret
in
push
aam
iret
push
mov
cwtl
push
adc
cmp
ror
lahf
dec
pop
and
push
jge
xchg
ret
pop
pushf
jno
cmp
mov
xor
jae
lret
cmpsb
sub
adc
cmpsb
xchg
dec
or
mov
mov
enter
call
scas
mov
cmp
pop
push
cmpsb
xor
add
inc
lods
std
push
pop
or
xor
int
xchg
sbb
ficoms
jbe
mov
or
pop
sbb
pavgb
sub
add
inc
lcall
inc
ret
in
push
divl
pop
xor
mov
iret
into
fidivrl
mov
idivb
and
aaa
jne
cmpsb
pop
mov
imul
inc
ljmp
outsb
xchg
xor
out
cmpsb
and
jo
xchg
jno
sub
mov
dec
cld
xor
mov
mov
adc
sar
and
das
jne
push
mov
addr16
xchg
and
data16
stos
xchg
dec
jbe
pop
nop
call
popa
rclb
hlt
mov
jp
push
or
dec
outsb
xchg
fcmovb
push
out
inc
and
cli
cmpl
xchg
test
jmp
push
ud1
or
jo
push
idivl
outsb
jmp
lcall
leave
outsl
arpl
loope
aad
xor
or
add
test
adc
int
or
sub
mov
sahf
mov
lahf
push
xlat
lods
sub
loope
jne
sbb
icebp
pop
and
sub
mov
mov
loope
add
stc
cmpsb
add
arpl
dec
sbb
ja
jmp
fnstsw
fsubr
sbbw
shlb
sahf
divl
jae
stos
push
add
xor
xchg
push
ss
andb
stos
ret
cs
pop
xchg
lcall
xchg
pop
imul
fdivrs
mov
inc
sbb
lret
inc
ror
jecxz
dec
shrb
in
mov
repz
imul
aaa
clc
inc
jae
pop
loopne
mov
outsb
scas
sub
outsl
les
nop
or
ja
int3
cs
xchg
pushl
xor
cmpsb
pop
call
das
mov
pminsw
and
insb
in
sub
adc
sub
sub
mov
add
push
xchg
adc
cli
and
stos
data16
push
sub
je
popf
inc
mov
cltd
fcom
dec
or
inc
andb
jg
in
jmp
and
sub
cmpsb
jb
add
push
stc
inc
xchg
jb
sbb
xchg
adc
test
sti
inc
or
xor
popf
xor
push
sbb
aam
loop
and
loope
les
xor
and
inc
dec
sub
mov
into
in
arpl
cltd
lods
push
pop
rol
and
or
and
mov
mov
push
loope
mov
sti
adc
ret
out
sub
dec
stos
or
cmp
lret
cmp
xchg
push
fwait
xor
popl
push
sbb
bound
pusha
popf
sub
or
fldt
mov
and
je
cwtd
push
push
mov
aad
push
pop
cmp
or
mov
outsb
jb
jmp
push
ret
xor
push
lods
jg
jno
or
aaa
dec
ret
lcall
inc
outsb
out
adc
repnz
pop
xor
dec
pop
or
sbb
xchg
jle
mov
or
jecxz
cmp
mov
mov
or
cmpsb
repnz
jns
aas
lock
insl
sbb
and
cwtl
jle
add
repz
sub
sub
cmp
xor
jb
pop
mov
orl
cmc
shlb
mov
xrelease
mov
fs
mov
pop
inc
fmull
sbb
or
dec
xchg
jecxz
dec
cld
aas
mov
cs
adc
iret
arpl
push
insl
fadd
xchg
cmc
adcl
xchg
fsubrs
xor
push
or
fwait
jb
add
or
ljmp
icebp
loopne
enter
push
or
cmc
fs
add
mov
inc
xchg
mov
lock
dec
loop
lea
ret
xchg
mov
out
xchg
sbb
xor
sbb
aam
out
pop
adc
hlt
arpl
in
or
push
int3
ficoml
adc
in
repnz
fld
cmp
popf
and
mov
js
mov
jmp
out
mov
inc
pop
xchg
pop
inc
sti
pop
jae
sub
xlat
and
inc
lcall
enter
sub
hlt
out
pop
loopne
mov
add
je
in
jae
xor
sub
scas
dec
dec
jp
add
dec
les
push
int3
scas
mov
mov
and
dec
ljmp
mov
mov
aad
add
scas
lea
sbb
addr16
jno
ret
inc
push
daa
xchg
in
je
pop
jmp
inc
mov
adc
jnp
out
jne
adc
popa
shl
cmp
mov
dec
fisubs
push
mov
xchg
cmp
inc
insb
dec
add
lcall
mov
and
insl
lcall
fwait
dec
sbb
shlb
mov
jmp
sub
adcb
fimuls
and
ret
ja
loopne
gs
popa
sbb
dec
in
test
repnz
or
stos
jmp
and
hlt
outsb
jne
xor
mov
cmpsl
hlt
aad
xlat
mov
cmpsl
xchg
popf
xor
sub
sbb
add
insb
loop
add
paddq
out
mov
jbe
and
mul
mov
and
jne
out
ret
mov
rcrl
roll
andl
adc
sub
pop
and
or
mov
ret
in
inc
or
rcll
in
addr16
mov
xchg
mov
or
inc
push
sbb
or
mov
jg
add
ja
jge
pusha
clc
fadds
into
out
shlb
mov
dec
add
add
sub
jp
in
ret
mov
jnp
add
addb
les
add
sub
leave
stc
push
jno
ss
sub
jecxz
in
clc
and
push
mov
dec
dec
les
outsl
xor
int3
xor
in
push
inc
aad
stc
sub
lock
and
mov
xlat
add
int
and
xchg
dec
mov
out
sub
movsl
jp
rcll
movsb
push
imul
mov
rcrl
jge
adc
out
inc
and
insb
in
and
mov
adc
cs
scas
iret
mov
nop
lret
add
cmc
fldcw
mov
push
lock
sarb
fwait
test
imul
lods
xchg
sbb
inc
mov
pop
cmp
push
mov
sub
sub
xor
or
xchg
inc
popa
outsl
in
fadds
hlt
xlat
add
lock
out
subl
or
dec
fsts
ja
push
jo
mov
push
dec
pop
call
cmp
xchg
or
push
test
popa
idivb
push
loop
bound
pop
push
sub
jae
dec
cmp
enter
jno
les
fs
out
mov
pop
scas
or
out
nop
dec
clc
hlt
insl
pop
and
mov
mov
cmpsb
sub
mov
cmc
or
or
fsubp
xor
cmc
jmp
scas
inc
cmp
ret
adc
pop
mov
lds
and
and
aaa
inc
xchg
mov
rol
and
cmp
push
push
pop
imul
jecxz
inc
dec
xchg
inc
mov
pushf
inc
or
imul
pop
xchg
mov
inc
test
cmp
cmp
pop
ljmp
jmp
scas
in
mov
jecxz
scas
mov
pop
popl
out
inc
pop
lahf
push
iret
lahf
adc
les
ja
push
imul
pop
fistps
cmp
daa
sub
adc
dec
xchg
out
dec
aaa
popf
inc
mov
ja
mov
mov
jl
sbb
fidivrs
sub
cwtl
push
in
in
orb
mull
jnp
repnz
dec
jecxz
addr16
in
fildll
push
scas
shl
xchg
rorb
out
fnstenv
decb
test
pushf
xor
jge
in
sbb
cmp
jge
add
je
sbb
sub
lea
fldl
sti
sti
js
enter
shl
add
mov
sbb
jnp
or
sbb
ss
add
lods
push
jle
bnd
and
inc
mov
nop
sti
fisttpll
outsb
xlat
mov
in
fldcw
mov
fdivr
rcll
xor
or
insb
mov
popa
test
cld
mov
cmp
inc
leave
push
js
outsl
cli
cld
push
mov
sbb
sbbl
popa
add
les
rorl
jo
adc
xchg
mov
aam
outsl
adc
xor
fdivs
mov
mov
sub
and
mov
aam
mov
lea
inc
jmp
xchg
sbb
stos
divl
sbb
sub
test
push
lods
push
pop
mov
pop
loop
dec
mov
call
imul
int3
test
mov
xor
jp
or
mov
je
push
cmc
cmc
pop
pusha
repz
mov
inc
sub
xchg
fcoms
sub
and
stc
call
repnz
pop
jb
push
inc
scas
fnstcw
loopne
js
pop
adc
sub
cli
fldcw
mov
dec
aaa
mov
fistl
outsb
xor
dec
inc
je
fidivl
adc
testl
push
aam
outsl
or
out
iret
push
pop
ret
popa
aas
dec
loop
inc
add
add
test
aad
jg
ret
fcomp
mov
rcr
icebp
mov
cmp
xchg
xchg
mov
call
test
cs
xchg
jmp
mov
loop
pop
cld
pop
add
iret
dec
push
add
call
dec
gs
out
jnp
cwtl
inc
add
adc
hlt
mov
adc
ficompl
mov
xor
xlat
mov
movsb
sahf
fwait
sahf
jge
lock
subl
aaa
push
pop
movsb
sbb
add
add
cld
jge
mov
mov
and
add
push
mov
xor
addr16
pop
icebp
mov
push
dec
mov
incl
dec
negl
push
mov
pop
in
pop
mov
xor
push
push
test
lahf
test
cmp
inc
andl
fildl
pop
pop
imul
fmull
arpl
shll
cmp
aad
pop
lret
xchg
popf
push
xor
lea
icebp
test
push
inc
pop
lods
lods
mov
jb
pop
or
fs
das
pop
mov
mov
inc
das
movsl
js
push
pop
mov
inc
cmp
in
popa
shlb
insb
ljmp
test
stos
push
jne
out
test
mov
movl
in
mov
mov
add
nop
xchg
sbb
out
lds
test
out
cmpsl
data16
sahf
xor
loope
nop
dec
push
push
and
add
pop
lret
hlt
jl
shrl
insl
iret
movsl
clc
mov
lcall
sub
in
xor
pop
jbe
cmp
dec
orl
sub
dec
cs
dec
cmpsl
repz
cmp
loope
lea
std
cmp
test
mov
dec
cld
jns
bound
jns
xchg
movsl
in
mov
int3
dec
std
cmp
push
push
shrl
push
and
pop
in
pusha
sbb
sub
mov
lcall
lods
jns
test
or
shll
or
rcrl
mov
scas
jle
lahf
push
adc
dec
leave
sahf
jecxz
mov
and
mov
jmp
cwtl
call
push
ret
aad
js
mov
xchg
pop
sub
xchg
fildl
jmp
xchg
pop
cmc
xchg
sub
cltd
imul
sbb
xchg
inc
dec
cmp
icebp
ds
mov
inc
or
scas
adc
xchg
outsb
and
test
pop
andb
in
iret
xchg
mov
call
xlat
push
sub
cli
into
fidivrl
loope
dec
add
xor
cmp
test
sbb
sbb
xor
push
jl
sub
arpl
lret
jge
dec
dec
sub
push
xor
xor
mov
sub
loope
and
pushf
outsb
dec
jmp
inc
repnz
scas
call
push
vcmpsd
scas
test
pop
mov
aam
hlt
push
stc
fs
jb
xor
and
and
or
xchg
jecxz
les
and
jns
inc
mov
inc
and
pop
jge
adc
xor
dec
loopne
aas
cmp
cli
xor
pop
stc
ja
cmp
cli
cmp
mov
ret
mov
xchg
inc
push
sub
or
jge
leave
fcmovne
add
adc
mov
jns
into
push
mov
adc
lcall
sbb
mov
dec
xchg
pop
int
cld
lahf
clc
leave
inc
pop
out
dec
shll
int
jmp
adc
adc
enter
inc
iret
ret
add
pop
dec
mov
xor
add
mov
xchg
sbb
xor
adc
jmp
add
jecxz
lret
inc
cmp
in
cli
xchg
js
jle
jmp
sbb
sbb
cmp
mov
xor
lods
fcompl
adc
add
adc
mov
dec
mov
aam
rcl
push
into
pop
repnz
adc
fisttpll
rcll
jno
xor
cmpsb
mov
fistpll
fcoml
sub
out
test
xchg
sti
cmp
repz
mov
mov
inc
outsb
and
pushf
repz
pop
add
add
out
add
rorl
xor
lods
dec
mov
and
jecxz
shll
mov
test
lds
sub
outsl
xor
dec
xchg
inc
cmpsl
inc
icebp
mov
inc
sub
cli
rclb
mov
mov
cmpsb
dec
inc
test
femms
jns
jne
xor
lret
inc
aam
mov
ds
sub
sbb
cmp
mov
in
out
jge
add
lods
sbb
pushf
ljmp
loop
push
jmp
fists
jmp
mov
pop
cld
faddl
mov
scas
stc
shlb
add
int
xchg
fisubrl
fdivr
mov
add
cs
inc
push
push
enter
rclb
mov
pop
inc
xor
cltd
cmpsb
vcvtdq2pd
adc
rcll
scas
add
in
and
mov
or
ja
add
jge
cmp
xor
inc
mov
daa
push
jne
mov
lds
je
popa
outsl
subb
sub
pop
daa
inc
inc
jg
mov
mov
inc
sarl
push
adc
outsb
psubusb
outsl
cmpsl
dec
fnstenv
fsubrl
mov
cwtl
fsubrl
sti
push
push
das
cmp
and
sbbl
scas
mov
loopne
inc
add
cltd
xor
roll
lcall
push
dec
xor
mov
stos
mov
cwtl
mov
jg
scas
xchg
hlt
xchg
add
outsb
lret
fs
cmp
enter
mov
in
add
aad
lods
les
into
mov
or
jp
push
pop
cmc
jp
or
mov
or
inc
or
inc
inc
push
out
sbb
cli
mov
add
sub
gs
or
push
inc
sti
mov
mov
es
insl
rorb
jecxz
cmp
ror
icebp
in
mov
sbb
rorb
dec
aaa
xacquire
mov
push
push
mov
push
xchg
xor
pop
or
ds
sbb
cli
sbb
inc
inc
imul
shrl
inc
jle
jo
push
cmp
sbb
sbbb
cltd
iret
js
popf
mov
mov
jb
dec
mov
fidivrl
getsec
jle
stos
adc
or
jge
push
mov
add
icebp
movl
fwait
testb
into
sbb
je
mov
inc
dec
xchg
jg
dec
imul
pop
push
cmp
mov
int
adc
sti
pop
popa
mov
stos
fimuls
or
or
int3
add
repz
popa
popf
fwait
stc
xchg
inc
pop
loope
insb
std
cld
imul
jg
js
dec
mov
repnz
xor
lahf
push
mov
add
inc
adc
xchg
stos
movsb
pop
das
xchg
xor
shll
stos
push
fs
ret
mov
mov
insl
outsb
sbb
arpl
xchg
ficomps
das
inc
cltd
test
movb
daa
xchg
add
inc
loopne
mov
jae
jns
mov
push
nop
mov
xor
pop
leave
repz
jge
js
jg
clc
aad
ja
xor
push
mov
popf
les
sbb
lea
call
int
and
push
int
cltd
and
out
push
sahf
or
push
dec
fwait
scas
enter
add
negl
ldmxcsr
cmp
jns
mov
imul
imul
iret
loope
push
ja
imul
xchg
add
mov
movb
xchg
mov
in
pop
out
jle
add
sub
jmp
inc
push
cmpsb
adc
movsl
sbb
pusha
out
add
mov
sbb
xor
scas
hlt
popf
and
insb
jo
xor
fcoms
sahf
ret
mov
lret
cmp
cmp
sti
repz
daa
sahf
jge
loop
sbb
sbb
jbe
cmp
mov
shl
arpl
daa
cmp
ffree
push
loopne
push
sti
iret
aam
sahf
push
enter
cmpsb
adc
inc
je
cmc
cmp
jl
sbb
xor
and
in
sub
addr16
lea
jmp
or
bound
lods
inc
pop
cltd
and
or
and
add
mov
pushf
xor
push
imul
lods
fistpl
test
aad
test
fcmovu
shrb
mov
rolb
popf
dec
inc
jl
pop
fisubrs
iret
adc
call
mov
pusha
cwtl
scas
lock
adc
or
jl
pop
pushf
lea
icebp
mov
pop
pushf
inc
push
clc
pusha
sub
and
push
jmp
faddl
shr
jmp
mov
movsl
lods
sbb
test
dec
cmp
xor
ret
cmovns
fwait
adc
dec
xchg
mov
cmpsl
cmp
cwtl
insl
dec
fistl
cwtl
insl
xor
iret
mov
push
jmp
aam
push
movb
imul
mov
xor
test
xlat
pop
popf
movsb
sub
push
mov
lods
push
inc
shlb
mov
xor
mov
jns
add
clc
lcall
and
mov
fwait
and
ret
popf
inc
jle
mov
sti
mov
or
fldcw
sbb
shlb
pushf
jno
cmc
inc
scas
lock
cli
nop
lds
movsb
xchg
pop
rclb
dec
push
xchg
fsubrl
sbb
lods
lods
and
jle
aaa
sub
xor
push
pop
push
out
mov
or
mov
and
das
xchg
xchg
mov
jo
mov
pop
xor
ja
stos
sub
inc
and
out
dec
aaa
adc
sbb
add
in
mov
xchg
lret
fsubrs
mov
imul
ljmp
inc
jns
mov
add
adc
mov
fstpl
inc
nop
jnp
in
push
daa
insl
mov
fsubs
sbb
and
sti
sahf
lds
xor
dec
pop
dec
test
mov
sbbb
inc
push
or
mov
mov
lods
jl
pop
mov
add
es
jns
xor
lahf
js
pop
sbb
jl
xor
cmpsb
sub
das
leave
push
inc
pop
push
enter
out
mov
jp
jmp
inc
xor
sbb
adc
test
and
adc
pop
daa
mov
out
mov
icebp
popf
push
mov
fwait
loop
out
call
data16
inc
push
icebp
sbbb
test
mov
ss
lods
imul
roll
add
jge
fs
in
inc
sbb
cld
lods
cmc
jle
push
out
cmp
and
add
xor
addr16
aad
mov
fdivl
out
sbb
jbe
push
mov
pusha
popf
lret
mov
sub
pop
add
and
inc
adcl
fstpl
imul
cli
ss
cli
xchg
lea
pop
fwait
inc
sub
out
loope
bswap
imul
test
mov
xor
pop
mov
pop
adc
and
jecxz
dec
sahf
xchg
mov
fld
fidivrs
fsubr
arpl
and
in
ja
cmpsb
mov
outsl
decb
pop
setl
or
ficomps
or
stc
xchg
mull
int3
jl
fidivl
mov
fs
xchg
push
data16
cmp
or
or
jl
test
rolb
test
cmp
std
sub
jno
mov
dec
ja
jecxz
cld
test
xchg
sub
xchg
inc
or
mov
insl
dec
mov
out
pop
hlt
xor
loop
sbb
push
cmp
shl
jo
or
add
dec
rolb
cmc
add
sub
dec
lock
xlat
stos
sti
sub
xor
jp
out
cmp
loope
test
fdiv
mull
test
in
loope
pop
add
mov
pushf
ds
dec
lea
sbb
inc
jne
aad
lods
dec
je
das
sbb
mov
sarb
pop
cld
ret
add
pop
test
dec
fimull
fldenv
and
aam
clc
rol
pop
lcall
cmc
stos
mov
push
xor
test
xchg
aas
jo
fisttpl
rol
cmp
dec
lock
jle
jmp
pop
sub
mov
jb
cmpsb
cli
std
nop
add
test
pop
pop
call
or
test
inc
pop
mov
adc
lea
mov
xchg
pop
loop
repnz
add
out
xlat
xchg
lret
pop
xchg
sbb
mov
pop
es
in
mov
lret
aad
test
add
jo
push
ret
je
inc
ret
lods
add
push
mov
in
mov
push
stos
repnz
ret
xchg
dec
adc
adc
jle
fbstp
std
and
sub
in
or
mov
inc
clc
dec
lds
shrl
inc
into
out
cmp
mov
cmpsl
js
insl
mov
movsl
and
jae
xchg
sbb
ret
fwait
insl
cmp
sub
shlb
sbb
push
nop
int3
jo
ret
lods
das
out
sub
inc
gs
sub
lds
in
push
jmp
scas
xchg
clc
outsb
push
mov
dec
push
pop
in
into
js
call
adc
out
je
gs
loop
jo
mov
clc
loop
and
xchg
aas
adc
mov
test
xchg
xchg
jnp
cmp
aam
sub
mov
test
data16
pushf
clc
aam
jmp
cld
addb
fidivs
scas
xchg
insb
ret
js
out
stc
rcrl
xchg
xchg
mov
cmp
xchg
mov
cmc
hlt
mov
or
inc
mov
data16
stc
dec
test
ss
mov
pop
pusha
cwtl
jo
aad
push
in
sbb
stos
leave
rcrb
cmp
or
shlb
sub
cmc
sbb
dec
fwait
inc
div
popf
and
push
push
pop
adc
sbb
push
ret
call
daa
push
add
add
cld
lds
mov
adcl
pop
jno
cmpsl
push
mov
insl
lock
sbb
dec
nop
lods
out
pop
add
mov
and
sbb
sub
decb
das
jae
in
mov
mov
test
mov
movsb
xchg
xor
or
sbb
repz
out
add
and
push
sbb
pop
mov
xchg
popa
xchg
xchg
hlt
cmp
call
jmp
cltd
dec
cmc
and
add
xchg
jae
mov
ficompl
enter
inc
mov
and
jb
ds
fcmove
iret
shr
aam
push
nop
push
or
jl
into
jne
xor
mov
mov
jo
inc
or
push
jnp
mov
xor
movl
mov
sub
sbb
xchg
js
dec
sub
lret
xlat
lods
dec
cmpsl
lods
xchg
cmpsl
push
or
ds
push
mov
das
in
mov
loopne
dec
dec
dec
adcb
mov
add
addr16
or
stos
jb
and
sub
loopne
pushf
mov
movl
iret
cmp
add
mov
daa
xor
iret
and
add
movsl
pop
xchg
mov
jg
cltd
and
aaa
wbinvd
scas
inc
and
fbstp
sub
mov
cwtl
mov
inc
cmpsl
inc
pop
push
je
and
add
adc
xor
pop
xchg
js
cmp
cmp
pop
xchg
xor
int3
mov
mov
into
or
repnz
mov
lret
push
mov
push
sbb
lods
pop
jle
push
xor
mov
leave
sbb
das
sahf
clc
nop
add
pushf
adc
ffreep
push
ds
jl
jno
sub
jmp
mov
call
fidivrl
sbb
xchg
lods
jg
inc
jnp
pushf
ja
push
pop
fwait
mov
cmp
popa
jp
dec
xchg
mov
in
js
mov
test
push
notb
mov
pusha
aam
mov
cmpl
sub
insl
fwait
int
mov
push
dec
add
sahf
imulb
and
loop
dec
outsb
sub
aad
lds
cmp
rolb
out
push
movsb
outsb
or
shrl
test
das
daa
lods
mov
cmpsb
add
pop
loopne
cwtl
icebp
or
sub
cmp
mov
pop
xchg
jge
imul
dec
int
xlat
insb
mov
and
test
xor
shr
sub
lcall
scas
add
mov
dec
and
mov
call
mov
in
and
cmpsl
fimuls
popa
idiv
fstl
sub
in
leave
into
push
sub
add
mov
fcoml
or
arpl
icebp
testl
lock
jb
dec
dec
dec
repz
and
daa
lret
aas
clc
mov
pop
ret
leave
mov
call
scas
ficomps
xchg
pop
enter
pop
sbb
mov
xchg
mov
aaa
adc
cmp
or
mov
xchg
inc
ljmp
stc
cmpsb
call
inc
pop
inc
jnp
pop
add
pop
lret
push
pop
jl
add
gs
pop
sbbb
mov
sbb
out
or
test
test
push
mov
push
mov
fistl
adc
sti
stos
loopne
mov
or
rcrb
loope
mov
imul
lcall
mov
jbe
cmp
in
pop
pop
rcrl
jmp
rolb
dec
inc
cmpsb
or
call
aaa
xor
outsb
mov
or
fstps
mov
movsb
lods
and
mov
sti
add
outsb
decb
sbb
ret
jg
dec
inc
mov
out
mov
mov
cli
xchg
ret
mov
push
stos
out
ds
rorb
aam
xor
cwtl
fidivs
hlt
mov
dec
sbb
jbe
adc
fs
add
out
scas
push
out
call
cld
xchg
xor
fwait
or
cmp
xchg
xlat
mov
int3
cmpb
sti
lds
cwtl
jnp
jg
mov
sbb
dec
adc
icebp
xchg
int3
ficoms
pop
and
xor
cld
nop
push
imul
lock
mov
lret
sbb
xchg
mov
and
insb
or
test
fs
out
in
imul
loop
pop
lcall
fs
mov
mov
inc
hlt
mov
mov
or
and
mov
sbb
xchg
lret
scas
jb
jl
jmp
adc
sbb
inc
cmc
dec
hlt
leave
xchg
les
sbb
insb
ffreep
dec
lods
aaa
jge
loop
inc
in
adc
popa
pop
sbb
fcmove
es
sbb
dec
inc
xchg
ss
or
cmc
add
add
outsb
stc
dec
pop
cmp
and
fwait
pop
push
add
mov
in
insl
or
es
jno
scas
cmpl
push
push
enter
jmp
cmp
out
icebp
push
lret
in
lods
fistpl
test
xchg
xor
test
mov
imul
inc
add
cltd
adc
rcrl
push
test
out
arpl
mov
sub
jb
pop
pop
mov
ret
inc
and
dec
cmpsb
or
xor
sbb
loope
push
pushf
es
movsb
test
leave
movsb
inc
popf
pop
or
pop
popa
js
test
adc
pop
and
int3
ljmp
cmpsb
aaa
xor
push
out
push
addb
sahf
mov
jnp
movsl
insb
ds
inc
adc
and
fbld
leave
loop
into
cwtl
imul
fdivrs
lret
lea
rcl
scas
lods
mov
shlb
ds
jecxz
cmp
mov
test
dec
pop
rcrl
jne
push
or
jbe
adc
fdivs
push
mov
pop
cmp
out
sbb
xchg
data16
fdiv
cmp
lahf
pop
push
xchg
sahf
mov
jb
mov
int3
inc
sbb
call
ds
pop
cmpsb
push
jne
jb
inc
mov
xor
mov
or
stos
add
fdivrs
ret
in
jne
mov
mov
adc
cmp
dec
nop
bound
outsl
in
inc
xchg
imul
lods
or
push
xor
mov
stc
fcmovnbe
add
adc
int
mov
lods
shll
sbb
pop
push
add
rorb
adc
sti
xchg
out
inc
mov
inc
lret
scas
jmp
push
add
ficomps
cwtl
ficompl
pop
cmp
push
push
out
rol
lret
ret
inc
pusha
fldcw
out
dec
lods
stos
hlt
ja
and
mov
lds
and
out
xlat
out
imul
sub
mov
push
sbb
push
das
cmp
push
int
mov
pop
in
jns
movsl
daa
cmpsb
xchg
adc
sbb
les
xchg
mov
cmp
outsb
mov
sbb
sarb
movsl
and
jb
xchg
jg
jnp
ja
fucomi
out
inc
mov
fnsave
shrb
hlt
and
sbb
js
sub
cwtl
mov
mov
filds
cmp
xchg
adcl
mov
loope
mov
xchg
xor
pop
adc
scas
sub
mov
mov
mov
fistl
je
jge
add
xor
fwait
sbb
cmp
cmp
mov
push
push
les
ljmp
js
adc
ljmp
fdivrl
cmpsb
adc
hlt
in
adc
cmpb
scas
add
ja
inc
js
cmpsl
cmp
outsl
jne
lret
mov
das
add
and
shrb
lcall
xor
pop
cmpsb
lock
clc
ljmp
loop
sub
sar
pop
or
mov
mov
fs
xor
sbb
add
sti
in
pop
fiaddl
in
inc
test
out
xchg
loope
orl
add
push
dec
das
sub
std
xchg
jo
inc
out
lock
pop
fsubrl
adc
sub
in
and
cli
cmp
subb
adc
in
add
xlat
fs
fldl
sub
daa
jbe
mov
xor
dec
addr16
mov
sub
cmp
arpl
adc
stos
stc
mov
inc
mov
clc
in
fnstenv
jl
popf
jmp
fsubl
dec
sahf
jecxz
jmp
fnstsw
dec
shll
push
mov
adc
mov
test
xchg
mov
or
hlt
sbb
leave
inc
pop
jl
js
fisttpl
adc
sub
leave
push
adc
imul
ja
jge
mov
das
insb
js
dec
push
dec
mov
test
push
jne
and
xchg
cmp
mov
dec
fiaddl
scas
push
sbb
fsts
pop
push
lock
popa
subb
into
in
xchg
movsb
cld
sahf
int3
jecxz
lea
pop
test
int3
repnz
jecxz
sbb
insb
cmc
cmpsl
jg
movsb
repz
push
lahf
shl
or
cmp
xchg
shrb
push
insb
loopne
les
fldt
fwait
dec
or
fs
pop
lahf
and
in
cwtl
cmp
add
out
add
xchg
push
xchg
pop
cs
int3
nop
jbe
stos
push
xor
cmp
push
clc
sahf
jae
cmp
mov
mov
jle
jno
mov
dec
xchg
icebp
andl
es
add
dec
xlat
pop
in
push
pop
outsb
mov
mov
ds
test
add
push
popf
in
xchg
daa
or
sti
adc
push
shl
dec
mov
inc
aad
mov
and
dec
rcrb
sub
xor
xor
clc
sub
jle
sub
or
xchg
mov
jl
cmp
cmp
movsl
mov
test
pop
or
and
cmp
sub
dec
jl
xlat
popf
mov
cmpb
out
jb
imul
ret
push
pop
out
loope
punpckhdq
xor
sub
cltd
cmp
loop
lods
out
jmp
and
inc
xchg
loop
add
in
mov
xchg
cltd
fdivs
mov
push
je
add
mov
nop
sarl
lret
jp
popa
add
fimull
add
jp
shl
jecxz
push
cmpsl
inc
lret
je
daa
or
add
lret
pusha
push
in
or
scas
mov
xor
mov
bound
xchg
aad
cmp
xchg
popf
movsl
test
mov
mov
hlt
out
lock
scas
dec
cmp
stos
hlt
pushf
adc
bound
cmp
je
or
jne
aad
cmpl
gs
mov
sbb
cli
popa
xor
cmpsb
and
and
xchg
pop
mov
push
jno
sub
aad
jecxz
dec
gs
aaa
pop
out
aas
aaa
leave
sub
pop
inc
xlat
mov
cmpsb
adc
addl
je
test
aaa
mov
aas
sub
or
pop
cmp
mov
lods
fdivrp
or
push
inc
sbb
xlat
push
popa
adcl
or
lods
add
mov
and
mov
sti
sbb
stos
push
push
test
mov
mov
mov
sub
fldenv
or
mov
mov
inc
dec
call
xor
dec
imul
xor
shl
and
mov
notl
or
in
jmp
mov
or
mov
incb
sub
adcb
mov
add
testb
push
sbb
or
clc
dec
in
sub
pop
lret
ror
adc
ss
xchg
popa
xor
or
dec
ja
push
mov
jg
lock
mov
adc
pushl
int3
scas
xchg
imul
imul
inc
fst
cmp
lea
and
dec
xchg
dec
or
popa
mov
cmp
clc
cmpb
hlt
shlb
pusha
jo
or
fwait
and
out
sub
sbb
push
std
insl
push
cmc
aas
addb
repnz
insb
and
or
fnstenv
push
scas
mov
loop
insl
mov
mov
pop
out
adc
sbb
mov
cmp
leave
jbe
insb
pop
mov
xchg
xlat
daa
push
mov
aas
repnz
xchg
out
hlt
jno,pt
jo
aaa
jns
addr16
mov
jae
pusha
dec
in
icebp
mov
push
in
idivb
jg
in
out
repnz
sbb
outsl
cltd
inc
arpl
rcl
stos
pushf
rcll
nop
lods
popf
jl
mov
push
daa
or
orl
sub
or
or
fs
cltd
dec
push
loopne
inc
int3
push
sbb
cmp
les
pop
flds
in
cmpsb
rorl
cwtl
sbb
pop
mov
push
dec
out
and
mov
push
repz
rcl
add
cli
test
movsl
push
flds
or
test
cli
imul
fmuls
pop
icebp
jmp
push
out
loope
les
xlat
dec
mov
sub
add
push
scas
jno
lahf
push
xor
and
stos
addr16
insb
xchg
and
loope
fildl
xchg
clc
dec
clc
movsb
ds
push
out
ja
jns
adcl
cmp
pop
xor
fdivr
mov
addl
adc
enter
xchg
xlat
xchg
out
mov
mov
jecxz
outsl
mov
std
push
out
call
push
cltd
imul
ds
jl
mov
addr16
push
subb
mov
adc
adc
dec
sbb
lock
pop
sbb
mov
out
clc
lret
test
or
mov
loopne
fwait
jmp
repz
sbb
adc
fbld
das
cmpsl
and
and
bswap
xor
adc
aad
scas
xchg
pusha
in
leave
adc
fucomp
mov
ljmp
inc
adc
and
fcmovnu
xchg
scas
ds
jecxz
and
stos
int3
gs
jbe
push
lcall
ljmp
lods
mov
jge
xor
and
xor
pop
mov
test
testl
insl
leave
pop
xchg
cli
ret
xor
jl
mov
cmp
pop
push
popf
xchg
jmp
adc
adcl
das
push
push
repz
and
xchg
push
push
dec
incb
pop
pop
fstpl
sti
fnsave
xor
fimuls
arpl
and
add
mov
sti
icebp
or
aas
jnp
insb
push
push
cmp
xchg
js
jg
or
jns
xchg
mov
nop
push
aam
pop
lea
loop
test
mov
loop
jbe
sbb
into
add
cld
mov
mov
push
call
call
je
adc
mov
test
je
mov
stos
add
or
mov
call
mov
jo
and
cmpsl
in
mov
lret
or
xchg
add
mov
adc
and
pop
pop
or
and
repz
mov
sbb
pop
xor
nop
ret
inc
xchg
lods
insl
gs
scas
fildl
mov
pop
les
mov
sbb
ljmp
lds
pop
mov
jecxz
pop
imul
test
push
dec
shlb
add
xchg
fstpt
xchg
add
bound
jmp
adc
enter
xchg
repz
add
xchg
inc
push
xchg
das
mov
pop
ret
mov
mov
pop
xor
sarl
es
xchg
ret
jge
pop
rcrb
sub
cmp
jp
jp
push
push
cmp
or
jle
adc
pop
xor
mov
inc
out
enter
pushf
add
push
lcall
mov
movsb
dec
or
js
loopne
test
mov
cmp
cmp
scas
mov
jne
lret
bound
xchg
and
adc
mov
ss
dec
dec
bound
into
iret
cmpb
xchg
dec
mov
dec
adc
cld
sbb
push
cwtl
pop
lods
mov
outsb
mov
mov
mov
fdivrs
mov
out
push
add
gs
jnp
stc
mov
jnp
dec
jmp
add
jle
pop
loopne
mov
in
dec
movsl
loopew
jl
mov
adc
inc
dec
adc
outsl
and
nop
mov
jle
xchg
cs
lcall
sub
sub
sbb
pop
sub
jno
js
shrl
arpl
lock
jbe
in
das
ja
cmp
xchg
inc
xor
lods
inc
aad
test
lods
pushf
add
and
sub
add
or
sub
xor
mov
popf
mov
pop
xor
scas
jbe
loope
pusha
push
sub
in
sub
mov
xchg
cmp
fisttpl
das
pop
adc
pop
imul
cmp
push
mov
jecxz
jl
pop
cmpb
leave
mov
inc
cmpb
mov
enter
dec
in
loop
jge
fcoms
pop
cmpsl
mov
xchg
les
fistpl
jae
cs
loope
mov
iret
mov
out
push
pop
repnz
imul
sahf
fs
dec
out
movsb
mov
fiadds
out
mov
jge
and
fwait
jae
out
xorb
add
test
jg
dec
xchg
jmp
adc
rolb
and
dec
mov
dec
add
ja
adc
and
test
mov
xlat
and
test
and
pop
jle
lret
cmp
orl
push
int3
cltd
sub
xchg
aad
mov
xchg
leave
xor
ret
mov
popf
arpl
cmp
or
mov
das
ds
xor
mov
add
push
push
daa
insb
in
lret
mov
fldt
mov
sbb
loope
xor
fmuls
aam
push
adc
fldt
test
popa
cltd
negl
clc
in
inc
mov
cs
adc
in
jbe
push
xor
test
out
cmp
stos
orl
fsts
push
loop
jle
ja
pop
divb
mov
and
mov
shl
and
jmp
mov
or
mov
pop
in
or
sbb
clc
addl
arpl
pop
rcl
and
icebp
call
add
jne
rorb
adc
xor
addr16
or
xor
sbbb
les
imulb
dec
xchg
xor
mov
mov
adc
lds
cmpsb
mov
pop
test
les
aaa
fwait
imul
push
inc
xchg
test
in
loopne
jbe
shll
adc
push
cs
test
shrl
xchg
repnz
xor
rcrl
push
xor
aad
and
jbe
mov
std
imul
add
fmull
pop
rcll
sbb
in
mov
jmp
mov
bound
cmp
rclb
cmpsb
test
mov
mov
enter
or
aad
dec
lock
shll
sti
inc
movsl
inc
ljmp
sahf
bound
loop
out
out
les
in
cltd
rcll
and
iret
mov
mov
adc
int3
cmpsl
push
and
clc
mov
jmp
neg
aam
loop
test
int
mov
lock
pushf
das
and
push
lea
pop
test
jne
std
ljmp
stos
fidivrs
xchg
and
ret
inc
pop
ja
test
jmp
popf
and
test
inc
jecxz
fs
loope
arpl
jno
in
sub
cld
sub
fndisi(8087
ja
or
test
xor
rol
and
stos
push
mov
sbb
popa
pop
ja
movsb
push
fdivrl
mov
mov
pusha
aaa
push
dec
cmpsb
mov
xchg
mov
test
add
jo
jae
js
and
jmp
jp
divb
sbb
inc
scas
and
mov
imul
mov
rcl
enter
popf
push
jbe
sbb
jmp
xchg
int3
ss
jne
jge
sahf
adc
sub
aas
lds
das
cltd
aam
sbb
in
stos
jmp
ficompl
adc
mov
push
aaa
jecxz
jg
cmp
mov
xor
mov
addr16
pop
in
xor
xor
dec
add
jge
fsubrl
mov
add
cs
cmp
mov
in
pusha
data16
push
insl
gs
jecxz
scas
mov
lods
out
mov
dec
and
lcall
enter
rcll
or
xchg
xchg
dec
inc
test
mov
pop
test
pop
loope
and
mov
gs
cmp
jo
imul
sub
iret
add
sbb
push
push
rorl
loope
push
add
fisttpl
mov
pop
pop
adc
dec
lea
adc
ljmp
sbb
mov
aas
push
dec
inc
xor
outsb
dec
test
mov
testb
pushf
ljmp
das
inc
out
aad
popf
pop
xchg
lods
jle
xor
sub
subb
out
pop
push
sbb
lds
lret
sub
dec
cltd
jns
and
xor
jle
pushf
dec
int3
xor
ss
scas
ret
jae
cmpsl
dec
lahf
in
test
dec
jmp
mov
subl
ss
or
mov
nopl
jb
pop
jo
out
pop
lock
add
push
int3
andb
push
mov
call
jge
rol
xchg
adc
xor
add
jge
fmul
lock
cwtl
xchg
adc
inc
popf
mov
js
roll
jecxz
xor
jmp
xor
cmc
mov
lret
and
in
loope
cltd
inc
ja
out
fbstp
cld
data16
jl
mov
jecxz
xchg
jne
mov
cs
mov
and
cmc
or
xor
repz
xor
jg
sub
xor
les
add
xchg
dec
out
imul
and
scas
es
into
adc
into
sub
imul
mov
jge
jecxz
add
and
add
js
jae
lret
inc
xor
repnz
lahf
mov
ja
fcmovb
and
or
cmpsb
pop
xchg
jecxz
ret
ror
mov
dec
pop
pop
fwait
aas
pop
out
pop
fildl
ficompl
push
pop
mov
lret
push
mov
pmullw
jns
lret
out
mov
cmp
daa
ror
insb
cmp
push
jnp
sub
sbbb
cmp
lcall
mov
enter
adc
leave
pushf
test
sti
cmc
loop
sbb
jge
lret
pop
fidivl
loope
mov
pop
out
xorl
int3
out
aas
pusha
or
faddl
int
push
fnsave
ljmp
jno
aas
test
test
pop
icebp
js
jle
movsl
mov
cmp
fcom
dec
fistps
imul
ret
sbb
std
outsb
ret
push
or
mov
nop
pop
push
jmp
mov
in
inc
or
gs
in
mov
cmc
mov
mov
jb
into
xchg
or
mov
adc
adc
jae
negb
dec
pop
test
in
sbb
imul
pusha
lds
negb
or
push
ficomps
pop
jle
push
scas
jo
mov
iret
je
sbb
and
xchg
or
add
mov
test
pop
lds
xchg
aaa
xchg
push
popf
adcb
test
push
ds
in
xor
mov
pop
rcr
inc
enter
jne
stos
lahf
jp
addr16
filds
popa
addr16
mov
enter
aaa
aas
in
ffreep
lret
cld
ja
or
push
adc
mov
mov
sbb
push
mov
add
in
in
loopne
enter
adc
movsb
sbb
xchg
mov
fnstsw
pop
mov
std
cmp
fcoms
cld
arpl
push
fiaddl
cmc
movsb
mov
sbb
and
sbbb
clc
push
sahf
mov
dec
xchg
jbe
jno
stos
sti
clc
shlb
adc
xor
mull
es
inc
fs
mov
ja
addr16
fst
push
negl
ss
xchg
int3
jbe
mov
cmp
inc
push
lret
mov
jg
or
mov
out
psrlw
divl
xor
cltd
adcl
sti
in
hlt
xchg
imul
out
jnp
sahf
dec
jo
sbb
pusha
mov
add
pushf
jge
jge
mov
loopne
sarl
mov
lahf
mov
fnsave
mov
xchg
ja
cli
aam
jbe
std
test
insl
xlat
aaa
dec
test
sub
pop
insb
outsl
loop
mov
cmp
push
lret
clc
jp
mov
call
out
aas
add
mov
xchg
cmp
inc
fwait
stc
lods
stos
hlt
out
push
int
mov
bound
in
loope
icebp
sub
adc
aas
mov
xor
enter
test
test
mov
aam
push
pushf
adc
ds
stc
push
adc
fcompl
adc
adcb
dec
add
orl
shrl
sahf
mov
jbe
push
icebp
pop
or
adc
repnz
mov
ret
pop
ficoml
iret
or
jecxz
adc
mov
cli
mov
imul
mov
out
mov
fsubrl
in
call
ja
inc
leave
or
jecxz
lods
mov
sub
xor
jb
scas
sti
and
stos
jo
js
and
mov
xor
arpl
add
push
xor
add
mov
test
mov
out
pop
or
fstl
sar
jns
sbbb
or
add
or
jne
stos
and
mov
add
mov
pop
arpl
imul
test
lds
fcoml
jmp
out
and
in
jmp
cld
out
addr16
jo
es
fcoms
addb
jl
pop
dec
adc
cltd
pop
mov
stc
cmp
xor
pushf
xchg
mov
adc
lods
jbe
bound
inc
addl
jb
outsb
iret
roll
repz
pushf
fwait
mov
jg
jo
jecxz
sbb
adc
mov
testb
fs
loope
lods
sahf
dec
sbb
or
mov
cmp
or
lods
or
in
inc
push
inc
jo
push
dec
imul
ljmp
jae
outsl
stos
lahf
ss
pop
arpl
arpl
into
sarl
in
das
cmp
adcb
js
adc
addb
sbb
mov
test
scas
mov
dec
scas
xchg
jns
or
adc
mov
push
jp
cli
xchg
jnp
ljmp
inc
mov
mov
fbld
icebp
jo
dec
sub
push
das
lds
xor
lret
xor
or
push
lahf
hlt
push
jmp
lods
jnp
sub
shrb
adcl
subb
sbb
pushf
dec
hlt
inc
push
test
nop
dec
clc
push
sbb
cmp
add
xchg
jle
aam
mov
and
xor
and
xchg
nop
push
or
xlat
fs
loopne
and
call
notb
fdivrl
or
pop
jns
shl
in
mov
sub
and
xor
lcall
test
sbb
jle
aas
scas
je
pop
push
addr16
dec
nop
add
in
or
dec
dec
repz
adc
nop
pop
sahf
iret
mov
pop
jecxz
xor
rorb
pop
ud1
or
ror
and
sub
scas
adc
cltd
out
enter
mov
cmpsl
inc
jecxz
pusha
push
sub
xor
pop
lret
das
pop
mov
lea
pop
pop
mov
neg
orb
addl
adc
lods
insl
pop
aas
lock
jnp
cmpsl
shll
mov
sub
loopne
inc
aam
imul
add
mov
lods
sti
jns
fldt
jle
jecxz
cwtl
xor
loop
jle
and
in
push
ljmp
jno
adc
into
push
pop
pop
jecxz
lods
jp
and
jae
fwait
xchg
cmp
jge
enter
fbld
sbb
mov
int3
mov
fs
mov
adc
mov
iret
stos
fs
gs
cmp
fwait
or
loopne
daa
scas
lahf
mov
jle
xor
sbb
jo
into
push
push
movsb
and
repnz
adcb
xchg
push
dec
cltd
inc
arpl
mov
test
and
lahf
nop
and
jmp
pop
sub
xchg
sub
and
ffree
imul
int
pop
push
mov
pop
int3
mov
inc
sbb
adc
xchg
push
pushf
and
aas
fcoml
lea
mov
cmp
and
or
loopne
dec
or
mov
movsb
shrb
int3
cmp
mov
or
loop
cmpsb
xchg
xchg
mov
fdivl
adc
sbb
sub
sbb
cmp
jo
inc
outsb
jne
dec
xchg
mov
cmc
push
jo
push
repnz
gs
shl
jns
mov
and
lahf
adcl
sbb
shlb
xchg
xorb
out
jge
pushf
jp
aaa
movsb
adc
jae
jns
js
subl
dec
adc
xor
rclb
and
inc
mov
lahf
nop
xchg
scas
mov
lcall
popf
stos
mov
into
andl
pop
cmovbe
shrb
lcall
das
adc
mov
pop
dec
jle
sbbb
loope
int
and
rcrb
icebp
jp
mov
push
sbb
popa
les
adc
push
jbe
shll
jb
xchg
dec
or
sub
mov
push
mov
push
adc
int3
icebp
mov
testl
sbb
jno
or
and
and
fsub
insl
and
and
es
in
test
hlt
imul
incl
adc
arpl
iret
test
inc
cmpsl
in
clc
lods
pop
xor
add
outsl
cmp
cmp
adc
mov
xchg
inc
push
int3
mov
fisttpll
mov
gs
stc
sar
es
out
addb
jecxz
test
add
pop
pop
sbb
adc
ljmp
pop
dec
loop
scas
or
adc
and
cmp
ja
std
mov
leave
into
push
vpmovzxdq
movsl
xchg
js
xor
iret
add
xor
loope
cmp
mov
xchg
and
ja
mov
cmp
js
orl
lds
jmp
cltd
movsb
jno
nop
mov
inc
stos
mov
popf
mov
mov
jb
dec
adc
sub
dec
rcr
push
lds
cld
int
push
movsl
jns
jne
mov
adc
aam
or
and
movsl
fstpt
push
fsubrs
sbb
gs
inc
lret
frndint
lret
push
jp
add
jo
andl
dec
mov
cltd
ds
lcall
call
andl
iret
mov
inc
mov
subb
push
rclb
clc
mov
in
mov
icebp
or
testb
sbb
lock
xor
jmp
jne
mov
pop
mov
inc
rclb
mov
inc
pusha
push
call
in
fisubrl
fwait
mov
mov
jle
scas
out
gs
insl
push
push
sbb
das
sbb
xchg
test
lods
shlb
ret
push
push
sbbl
xchg
pop
je
test
mov
cmp
scas
push
inc
pop
ds
mov
test
pop
dec
sub
outsb
and
pop
pop
adc
jns
repnz
addr16
mov
loopne
sbbb
aas
fadd
jns
lods
jo
sahf
mov
sbb
arpl
mov
js
subl
lds
adc
jne
mov
out
push
out
pushf
mov
and
leave
and
out
in
cmpsb
cwtl
sbb
out
repnz
jp
iret
mov
inc
cmc
in
repz
lcall
stc
jmp
cmp
or
xor
dec
mov
je
shrl
push
jne
test
rol
outsb
jle
mov
inc
adcb
xor
stc
cmpsb
cmp
sub
shrb
test
xchg
enter
mov
addr16
cmpsl
jo
cltd
xor
ja
inc
gs
mov
ds
decl
push
cmpsl
xchg
sub
xor
out
push
sub
clc
mov
add
movsl
test
xchg
cs
out
jmp
gs
mov
stc
cmp
call
out
movb
xor
sbb
sbb
push
inc
mov
cmp
cmp
iret
adc
mov
cwtl
pop
fsubrs
jb
xchg
aas
dec
addr16
and
cmp
out
lods
pop
nop
lret
int
jecxz
inc
adc
cmc
loop
jle
inc
iret
mov
dec
les
notb
push
in
xor
mov
inc
mov
aaa
inc
inc
inc
cmp
dec
shr
dec
push
xchg
cltd
das
jg
aaa
push
adc
pop
cmpsb
xor
inc
subb
out
cmc
mov
push
mov
cmp
clc
loop
xor
cmp
cmpsb
dec
sbb
xchg
loope
jbe
aad
cmp
inc
jmp
xor
imul
xor
arpl
mov
and
inc
sbb
inc
xchg
addr16
stos
add
sbb
jae
adc
push
sbb
mov
mov
das
leave
fimull
fadds
daa
sbb
aam
fisttpl
jb
mov
jmp
inc
mov
inc
loopne
push
dec
lods
mov
mov
in
fdivrs
jnp
fimuls
adc
adc
adc
xchg
lods
pop
js
and
inc
aas
pop
mov
or
mov
sbb
insl
mov
or
jp
enter
jbe
push
sub
out
or
int
xor
xor
xor
push
outsb
aad
mov
ljmp
mov
push
fdivr
pop
add
xor
pushf
jp
mov
mov
rcll
sahf
pop
mov
les
pop
int3
jmp
mov
in
and
mov
push
xor
loope
adc
paddq
fildl
lds
adcb
xchg
dec
js
and
imul
inc
xor
js
loopne
pop
xor
xchg
dec
pop
test
mov
lahf
cwtl
je
stos
in
xchg
cmp
fsubl
scas
test
xchg
dec
xchg
aam
dec
test
rcll
jecxz
cmp
lds
insl
push
and
movsl
out
ljmp
cwtl
push
pop
ret
xor
xchg
add
pop
sub
xchg
pop
mov
mov
scas
and
xchg
loopne
scas
aas
and
loope
pushf
and
imul
or
js
cld
insb
pop
aam
mov
inc
xor
mulb
frstor
mov
mov
push
scas
js
mov
and
shll
or
xchg
xor
outsb
and
in
js
sbb
aad
mov
push
push
out
int3
or
mov
jp
dec
mov
dec
hlt
adc
pop
loop
mov
aaa
cmpsb
xchg
js
xor
int3
aad
mov
sti
jmp
nop
add
lcall
cmpsb
imulb
test
xor
out
cmpsb
mov
xchg
je
subl
xchg
int3
mov
inc
jg
call
jle
cmp
adc
inc
cmp
cld
adc
out
out
js
pop
ja
in
mov
push
pushf
jecxz
fmuls
loopne
cmpsb
fwait
or
dec
ret
sub
and
adc
add
out
push
jo
aam
inc
or
ja
sub
lea
fdivs
dec
xor
stos
call
mov
push
add
mov
nop
dec
je
dec
xchg
and
inc
into
push
scas
lea
lods
andb
in
sti
fidivs
aaa
sub
sti
pop
pop
lock
popl
enter
lods
jno
les
into
ret
mov
fmuls
pop
cmp
ds
sti
add
cmp
adc
dec
mov
adc
mov
orb
stc
sbb
xchg
lcall
xor
clc
jae
cmpsb
mov
cwtl
pop
cmpsb
aas
add
mov
inc
into
cs
nop
mov
ficoml
in
xor
jae
push
std
sbb
cs
loopne
mov
sub
imul
js
mov
mov
outsb
push
popf
sbb
mov
clc
or
mov
imul
bound
sahf
rol
out
jl
mov
xchg
arpl
inc
or
aad
mov
mov
ljmp
movsl
ret
or
pop
pop
filds
or
add
dec
jo
testb
leave
or
out
mov
xor
dec
push
lods
cli
xor
jne
push
inc
lret
movsb
hlt
add
xorb
out
fcomp
sub
shl
std
jecxz
sbb
mov
out
je
push
push
cmc
sub
sbbl
or
sbb
fdivrs
aad
or
or
or
mov
cmp
repz
mov
mov
jne
addr16
aad
sahf
dec
lds
test
repz
pop
jne
out
sbb
leave
xchg
or
inc
cmp
fdivs
add
mov
xlat
mov
sub
and
ror
scas
and
and
inc
push
cmc
or
xor
push
push
das
jle
cmp
ret
stc
lea
adc
dec
pop
sbb
mov
loope
popf
jo
ret
mov
ror
outsb
inc
add
mov
sbb
or
cmpsb
dec
jmp
mov
jnp
popf
lods
sbb
addl
ret
les
jecxz
cmp
xor
jp
mov
dec
push
dec
arpl
and
jmp
jno
xchg
pushf
add
fs
ret
jmp
or
fwait
shrb
rcl
xor
je
subb
jg
mov
cmova
push
sub
sub
fisttpl
xchg
inc
and
jne
out
mov
push
loope
pop
iret
mov
fdivl
xchg
xchg
ss
sbb
inc
mov
dec
cmp
or
insb
cmp
lock
cltd
outsb
clc
andb
lods
sahf
xchg
jge
fs
mov
into
hlt
push
add
mov
mov
jl
cmp
push
loop
fimull
xchg
repz
mov
sbb
mov
dec
jp
shl
lods
arpl
fiadds
cmp
lret
clc
sub
mov
cmc
pusha
jo
mov
and
pop
addl
mov
test
xor
xchg
xor
inc
pop
push
sub
scas
loopne
fcoms
pushf
repz
setle
xchg
aaa
imulb
jbe
xchg
sub
and
out
jmp
jp,pn
and
pop
roll
xlat
cmc
fisttpll
mov
adc
add
mov
adc
lret
loopne
jp
lahf
insl
xor
pusha
in
lret
loopne
xchg
adc
and
pusha
xchg
mov
sbb
xchg
and
stos
lods
sti
fists
adc
jg
mov
jb
lret
cmpsl
lods
outsb
and
test
cmp
cmp
in
into
pusha
sti
mov
adc
add
mov
cmc
push
bound
or
clc
dec
sbb
int3
or
push
in
sub
imul
inc
cmc
mov
xor
jle
sub
push
xchg
push
pusha
push
das
and
xor
jge
jnp
mov
xchg
call
mov
adc
cltd
icebp
dec
cmp
xor
movsl
pop
cld
add
dec
cltd
mov
jg
cmpsl
xchg
pop
pop
mov
je
dec
lods
fucomi
jno
push
mov
adc
movsl
lahf
push
mov
mov
mov
push
lret
jge
push
in
xchg
jne
mov
push
cmp
jb
xor
clc
xor
mov
jae
jo
enter
stos
mov
inc
mov
push
imul
mov
or
scas
xor
in
cld
mull
fmull
ss
lret
lea
jae
xor
jp
sbb
sub
push
dec
mov
adc
sbb
cltd
aaa
or
shll
xchg
bound
cmp
popa
cltd
push
shr
or
jecxz
popa
js
cmp
jle
xor
lahf
fldt
mov
and
push
das
inc
pop
fs
dec
je
inc
je
test
inc
out
sti
adcl
mov
lea
mov
jno
notl
xor
jno
dec
out
push
sbb
xchg
cmp
xor
enter
sbb
xlat
xchg
stos
or
mov
mov
ljmp
sahf
mov
sbb
jae
xor
mov
movsl
out
leave
subl
pmaxub
mov
xchg
fwait
and
shll
ficoml
adc
out
lods
pushw
sub
adc
jp
or
xchg
jne
cltd
lret
fildll
dec
sbb
hlt
jns
fs
xorl
cmp
adc
add
cld
xchg
sub
movsb
jg
pop
out
add
fbld
pusha
arpl
xor
mov
les
or
dec
sbb
inc
xor
popf
int
insl
push
and
fiaddl
popa
in
mov
mov
ljmp
jl
outsl
fcoms
or
mov
test
lods
insb
xlat
jge
test
jne
mov
add
sub
clc
mov
lds
cld
or
dec
or
xchg
dec
sbb
mov
lcall
mov
das
xchg
jo
add
add
push
or
cli
cmp
sub
mov
xchg
sub
repz
icebp
pushf
push
xchg
sarb
and
imul
adcl
push
pop
sub
rcrl
test
or
icebp
jnp
sbb
dec
jb
xor
xlat
inc
mov
mov
pop
mov
test
int3
aas
adc
lods
mov
mov
cmp
jmp
cmp
int
aas
pop
aas
add
push
add
push
push
movsb
pop
hlt
push
cmpsl
pushl
inc
insb
xor
rclb
jecxz
stos
mov
pop
repnz
mov
mov
inc
rclb
outsb
dec
and
mov
xor
rcr
jne
mov
jns
mov
rcrl
mov
xlat
test
pop
mov
xlat
inc
or
cmp
lods
pop
pop
out
fimuls
adc
addr16
xchg
push
jno
mov
pop
jne
leave
fmull
cltd
repnz
lret
sub
out
mov
fcomps
inc
lcall
shll
fst
pop
popf
in
push
sbbl
imul
xchg
enter
insb
cmp
inc
fidivrs
jns
mov
or
nop
rolb
jg
out
scas
dec
inc
add
int3
xorl
sbb
cmp
rorl
cltd
push
andnps
or
mov
mov
lret
in
scas
mov
lret
lds
cmp
mov
pop
imul
mov
push
jns
fsubrs
lret
push
pop
je
iret
mov
xchg
lods
imul
aam
aam
ret
push
pop
in
and
mov
int
or
xor
je
mov
outsb
in
jmp
pop
cmp
dec
xchg
push
and
jne
xchg
aad
popf
out
inc
add
dec
ja
andl
mov
cmp
jnp
xchg
test
out
pop
inc
mov
stos
push
xchg
fdivrs
pop
xchg
pop
inc
xor
xlat
out
jge
insl
out
or
xor
inc
sub
or
das
sbb
push
movsl
jae
aaa
fnsave
in
jecxz
jmp
push
inc
cli
xor
loope
fsubs
test
and
lcall
loope
int3
add
addl
in
xchg
or
lock
sti
inc
push
mov
dec
mov
pop
lock
lret
jno
jne
sub
inc
xor
enter
test
adc
adc
int
ret
and
adc
sub
add
lcall
das
push
jg
jne
sbb
mov
aam
movsl
aad
inc
mov
stc
or
repnz
lcall
inc
xchg
sahf
xor
jle
movsb
push
fbstp
ds
cmp
movsl
int
cmp
mov
jl
or
pusha
adc
lcall
fildll
lcall
ja
sti
fbld
xchg
add
and
ljmp
popf
pop
insb
cmpsb
mov
push
fucomp
add
push
divb
jp
cmp
xchg
dec
or
pop
lods
out
push
or
or
test
jb
cmp
jno
mov
cwtl
jle
mov
enter
cli
pop
add
push
and
mov
sub
mov
pop
xchg
lcall
test
cmp
push
mov
iret
lahf
ljmp
stos
cmpsl
mov
fcoml
sub
sbb
jb
outsl
xchg
imul
mov
test
fsubl
bound
orl
adc
in
push
out
xchg
outsl
shrl
das
testb
fwait
dec
mov
ss
stos
and
sub
mov
insb
data16
mov
mov
int
or
sti
psraw
in
mov
stos
inc
xchg
inc
adc
aaa
ret
xchg
mov
pop
sarb
enter
mov
sbb
push
pushf
jmp
and
or
push
and
or
icebp
add
neg
inc
in
out
dec
cmpsl
pop
addl
sub
cmpb
bound
in
out
fadd
scas
into
stos
repz
ss
lahf
xor
mov
nop
mov
mov
insl
push
aam
sti
int3
pop
inc
mov
scas
movsb
jae
out
sub
inc
pop
or
daa
push
repz
lods
pop
mov
mov
pop
inc
pop
test
adc
outsl
xor
pop
mov
push
pop
xor
cltd
ficomps
movsl
xlat
jb
jmp
mulb
arpl
icebp
jne
shrl
imul
ret
adc
pop
fcoml
pop
xchg
sbb
test
mov
jb
inc
ror
cwtl
int
nop
xchg
in
imul
add
mov
mov
adc
sub
les
mov
jg
nop
or
mov
scas
dec
and
mov
mov
lods
test
xchg
mov
sub
mov
lret
mov
add
shll
inc
sub
shl
xlat
push
ret
mov
popf
stos
scas
es
ss
add
insb
pop
stos
push
fistl
stos
addr16
imul
or
or
lea
push
rcrb
cltd
jbe
outsl
add
xor
iret
cmc
imul
mov
je
int
mov
add
inc
adc
cltd
jg
jle
psubsb
push
mov
fimull
push
pop
xor
loop
daa
push
or
mov
ret
or
jl
and
fwait
cld
add
imul
fcomps
imul
or
ret
dec
test
aam
je
dec
xor
push
mov
js
repnz
mov
jp
sub
mov
in
xchg
ja
lahf
pop
hlt
dec
pop
push
pop
sbb
dec
imul
cmc
pop
ss
ljmp
add
cmp
std
adc
jbe
xchg
or
bound
or
mov
or
adc
or
jns
or
xchg
mov
loope
cld
xchg
pop
cwtl
adc
loopne
aas
push
fnsave
dec
add
in
and
rcrl
bound
xchg
pop
outsb
add
sti
pusha
call
fstpl
and
sbbl
mov
fucom
jb
jge
adc
xchg
cmc
pop
push
mov
pop
aad
adc
shrl
inc
add
icebp
mov
repz
mov
aam
fcoml
rolb
stos
push
dec
mov
lods
xorl
mulb
in
aas
outsl
mulb
pusha
pop
jbe
jnp
jne
xchg
mov
out
dec
mov
movsl
pop
inc
inc
scas
pinsrw
xchg
cs
add
add
popa
jo
cltd
mov
adc
dec
mov
push
jno
cmpb
jl
movsl
out
sbb
call
mov
orb
or
cmp
mov
cs
cmc
and
and
mov
ret
and
push
call
or
arpl
or
lods
push
aas
stc
out
or
lock
scas
sub
movsb
out
jno
sub
mov
push
fucom
mov
aad
clc
inc
or
fsubrs
fs
pop
push
ja
shrb
jns
xchg
cmp
shr
mov
nop
mov
aas
xchg
cmp
lret
outsl
or
xlat
lods
cli
aad
or
push
out
push
fwait
arpl
jecxz
jns
add
pop
cld
stos
or
adc
mov
push
repz
shrl
ret
dec
lret
cmp
stos
push
cmp
pop
arpl
add
mov
arpl
test
jg
and
inc
dec
mov
out
popa
cs
mov
xor
and
pop
dec
lahf
and
test
test
pop
pusha
sbb
xor
mov
test
xor
xor
cmp
xor
cmpsl
jno
dec
aam
aad
les
int
clc
or
add
pop
loopne
sub
icebp
jp
imul
jo
adc
out
push
mov
iret
mov
xchg
and
scas
adc
aad
cmp
mov
pop
jg
and
loope
jmp
dec
adc
test
insb
pop
mov
stc
call
fadds
hlt
or
sub
add
jns
cmp
out
addr16
clc
loop
adc
mov
pusha
lock
mov
stos
jle
inc
add
aas
int3
jbe
mov
mov
xor
mov
pushf
lods
arpl
xchg
scas
test
stos
and
shll
xchg
cld
lds
out
dec
and
fmuls
add
out
sar
inc
leave
pop
lret
and
ffree
loop
mov
xchg
adc
jecxz
sub
fistpll
stos
adc
call
stc
push
fbstp
pop
das
insb
mov
mov
push
sbb
cld
push
mov
dec
popa
cld
pop
or
and
or
out
jl
lds
decl
xchg
js
int3
ds
lods
push
stos
lds
or
cmp
insb
mov
mov
jge
jb
dec
adc
push
cwtl
scas
out
test
movsb
add
arpl
das
cmp
add
push
add
mov
mov
xchg
inc
imul
push
cs
inc
outsb
mov
je
mov
xchg
bound
sbb
xchg
mov
cmc
loopne
imul
sbb
adcl
lret
in
sbb
pop
test
std
or
ja,pn
dec
jp
negl
xor
int3
loopne
pop
cmpsb
dec
gs
sbb
pop
xchg
sub
mov
out
mov
dec
xchg
mov
in
xchg
pusha
int3
jmp
lret
lock
ss
cmc
mov
mov
lea
cmp
push
in
sar
popf
cld
cwtl
lcall
add
sbb
lods
test
cmc
cmp
xchg
dec
out
jno
xor
cmp
pop
shrl
sub
jecxz
mov
mov
popf
cltd
dec
inc
imul
or
jae
js
rcl
jmp
add
xor
imul
add
mov
mov
jo
cmp
shlb
inc
jne
cmp
pop
and
outsb
sbbb
pop
cmpsl
and
int
add
push
mov
in
inc
adc
xor
repnz
xchg
mov
insl
fdivs
fistpll
push
pop
mov
mov
xchg
es
cmp
mov
sub
sub
lods
sub
lret
and
lock
add
mov
loopne
dec
fstpl
mov
enter
fists
ljmp
fwait
std
daa
aaa
gs
jle
pop
jns
cmp
mov
icebp
clc
fidivrs
pop
sbb
outsb
xchg
xchg
call
pop
and
mov
mov
sbbb
not
cli
sub
aam
scas
push
push
push
or
dec
aad
push
shrl
jno
sub
loopne
xor
fists
rcr
in
jp
xor
push
add
xchg
mov
sbb
adc
pop
js
loope
jo
insl
jns
mov
das
xor
dec
pop
leave
add
mov
inc
inc
lock
adc
mov
lahf
stc
call
fnstcw
sahf
cmpsb
add
sub
in
test
jno
lds
pushf
sbb
fld
xor
ja
mov
mov
sbb
cmp
in
arpl
in
and
mov
mov
popa
stos
mov
orb
mov
push
and
scas
scas
mov
bswap
jbe
in
mov
or
sub
jb
fidivs
rorl
mov
fwait
xchg
cmp
adc
add
jle
pop
sbb
in
sahf
pop
pop
inc
test
hlt
mov
sarl
idiv
out
movntq
es
fs
enter
sti
lds
jl
xchg
or
pop
push
scas
faddl
fs
xchg
xor
sub
imul
pop
sbb
jo
scas
sahf
cld
pop
fdivrs
sub
jl
adc
ljmp
mov
jmp
and
xchg
add
movsl
jae
sarb
sbb
sbb
mov
lods
cltd
outsb
out
xlat
xor
and
mov
or
mov
cmp
sbb
shl
sbb
xor
jg
je
movsl
insl
or
ljmp
jne
cmpsb
imul
call
xor
scas
leave
jne
nop
jae
pop
aaa
dec
dec
stos
std
jle
xchg
lods
jae
loope
daa
rolb
adc
pop
mov
fbstp
cmp
xlat
je
mov
jmp
movsl
xchg
int3
mulb
sar
int
mov
mov
mov
mov
pop
mov
xchg
or
lret
or
pop
ret
mov
inc
stc
clc
addr16
push
arpl
outsl
es
or
jp
addr16
rcr
xchg
lret
lahf
out
and
mov
enter
ja
mov
xchg
add
dec
call
and
out
push
inc
aaa
jp
loop
mov
pop
xor
push
ss
pop
jbe
mov
sub
push
or
fisubs
fcoms
pop
xlat
pop
arpl
inc
ljmp
sub
data16
sti
cmpsl
cwtl
movsb
data16
int
cmp
push
dec
mov
ficomps
add
push
test
mov
outsb
lea
mov
dec
faddl
mov
inc
push
and
lret
mov
add
out
aas
jne
cmp
push
mov
add
dec
pop
mov
mov
dec
out
push
repz
aaa
lret
pop
mov
sbb
xor
bound
and
nop
cmp
sahf
adc
sub
ja
test
xor
cltd
jmp
fisubs
loopne
loope
loop
andl
mov
arpl
jecxz
push
mov
int3
add
out
adc
rclb
pop
clc
sub
test
xchg
mov
in
mov
sahf
xchg
mov
xchg
xchg
fwait
add
mov
jae
sbb
sti
sti
fists
sub
dec
push
pushf
inc
push
test
ficompl
icebp
mov
push
es
mov
jo
pop
xor
subb
call
xor
inc
int
or
xchg
shrl
sbb
and
ret
ss
aad
fwait
adc
repnz
or
and
sahf
sarl
xchg
mov
daa
dec
btr
call
dec
ret
sub
rcll
js
arpl
sarb
xchg
xchg
inc
mov
cltd
lret
add
xchg
lret
adc
es
adc
mov
xor
mov
fisubrl
pop
cli
inc
bound
and
jge
jecxz
cli
mov
daa
int3
test
sbb
daa
push
imul
mov
cs
fsub
xor
push
aad
ret
repz
das
out
jb
mov
sub
movsl
cmc
and
outsb
pop
ljmp
push
mov
push
mov
ljmp
sbb
pop
mov
int
sbb
cltd
in
push
mov
mov
js
loopne
lods
xchg
scas
mov
push
and
mov
push
ficoms
or
andb
pushf
aaa
sbb
push
push
dec
add
jne
cmpsb
mov
sbb
dec
cmp
xchg
pop
ljmp
lret
jae
testl
dec
add
push
insb
and
into
ljmp
scas
xchg
fldln2
les
rcl
stos
sarl
lods
xlat
add
add
test
jns
pushf
pushf
push
jle,pn
mov
mov
mov
push
jne
push
pop
mov
js
xor
dec
fs
push
rcrb
stos
jg
or
pop
inc
dec
xchg
mov
push
cmpsb
ljmp
fisttps
dec
bound
orb
adcb
stos
mov
aas
sbb
in
dec
insb
lods
pop
clc
pop
push
or
test
ljmp
shrl
addr16
fucompp
xchg
and
gs
adcl
mov
pop
shlb
cltd
addr16
js
fsubs
jns
sub
das
out
push
cs
adc
jg
stos
dec
ret
jmp
mov
hlt
rclb
test
or
sahf
loope
xchg
sbb
pop
loop
js
mov
jmp
loope
loopne
mov
loop
out
xorl
rcrb
mov
adc
in
xchg
xor
cmp
roll
push
jbe
loope
lock
mov
addr16
mov
jb
adc
sub
mov
xor
out
sti
xor
movsb
lahf
aam
adc
adc
jge
pusha
and
outsl
pusha
jge
cmp
in
sub
imul
mov
ficoms
mov
pop
cs
lret
sahf
lret
xchg
sarb
sarb
in
adc
inc
xor
sbb
enter
inc
push
mov
loope
addr16
cwtl
es
jecxz
add
cs
insb
adc
or
test
insb
lods
sub
stos
xor
lret
outsl
pop
lea
ljmp
sarb
fnstcw
cmpsb
popl
cmp
sarb
jmp
ret
pop
sub
cmpsl
popa
in
mov
or
int3
js
fdivrl
dec
push
popa
fdivrs
jge
mov
jns
mov
out
mov
pop
fwait
or
inc
mov
mov
out
and
add
sub
mov
shlb
popa
mov
dec
sbbl
mov
mov
xchg
adc
sbb
xchg
or
adc
out
fsub
push
rcrb
aaa
xchg
and
fcompl
xor
and
push
into
mov
xor
sbb
std
sub
adc
or
mov
fldenv
pop
pop
outsb
mov
sub
lahf
cltd
lcall
test
outsl
ljmp
adc
pusha
push
sti
popf
jmp
jbe
into
cli
adc
pop
in
xchg
dec
mov
mov
xchg
hlt
addb
pop
test
out
stos
or
jnp
sub
jg
sub
loope
insl
in
stos
add
and
or
ds
mov
xor
leave
mov
mov
testb
adc
inc
lds
cmc
and
pop
push
cld
inc
decl
xchg
insl
or
mov
mov
or
adc
in
cmp
repz
add
rcrl
jnp
jge
mov
sub
fs
add
imul
clc
call
jae
xor
pop
or
mov
inc
xor
sarb
mull
push
lcall
mov
dec
dec
jb
add
adcb
dec
add
push
inc
lret
and
repz
movsb
push
mov
push
xchg
xor
xor
test
or
sbb
push
rclb
mov
in
add
add
pop
xlat
lds
jne
and
push
mov
and
sbb
arpl
and
scas
mov
fistpl
mov
rcrb
xor
push
pop
aad
lret
lds
add
loope
jne
into
cli
shr
pop
lahf
inc
push
mov
or
inc
inc
inc
test
les
mov
fwait
and
bound
repz
loopne
gs
addb
jge
lea
out
gs
mov
out
jo
xchg
cmp
mov
sub
insl
imul
jmp
add
xor
fs
sub
cmp
jmp
fucomp
pop
fmuls
jl
mov
je
inc
shll
ret
sub
cmp
jl
mov
orb
pushf
es
stos
repz
jo
cmp
add
jno
test
jle
lret
xor
pusha
jnp
push
les
pop
adc
std
mov
jae
xchg
shrb
mov
ja
xchg
or
fldenv
ret
xor
leave
popa
rolb
mov
gs
scas
xlat
mov
test
fwait
mov
dec
daa
ljmp
xor
adc
daa
pusha
cld
sbb
mov
fldl
fmull
repnz
aam
imul
lds
mov
pop
xchg
xchg
repz
popa
xorl
cld
rcll
mov
pop
or
fwait
xor
jne
pusha
lcall
mov
sbb
fisubs
movsl
and
ret
pop
dec
scas
pop
es
sub
cli
cmp
mov
sahf
rcl
sub
sbb
jb
xchg
mov
jbe
cmp
popf
cmp
and
xor
std
mov
popf
mov
insl
outsb
repnz
ja
cmp
jmp
pop
and
out
ds
mov
iret
aas
mov
jae
mov
xor
stos
pusha
dec
xchg
icebp
dec
add
les
cwtl
lods
loopne
es
cwtl
or
lahf
and
dec
lret
push
mov
push
push
jecxz
jecxz
jnp
sbb
mov
pop
xchg
call
mov
icebp
pop
pop
arpl
sbb
popa
adc
sbbb
outsb
sub
sbb
inc
adc
adc
xchg
fisttpl
and
xchg
js
stos
mov
test
jl
push
repz
fs
cwtl
notb
shr
shll
inc
sub
imul
lcall
rcll
xor
sarl
lock
lcall
xchg
mov
fisubrl
mov
xor
pop
pcmpgtw
push
lcall
testl
jb
add
push
jmp
jge
in
mov
les
outsb
aaa
push
lret
std
xor
data16
lods
out
mov
loope
call
imul
movsl
push
and
aam
pushf
out
scas
inc
jg
jle
xchg
sarl
lods
rcrb
lds
adc
jnp
dec
fcmove
cmp
pop
mov
jnp
data16
push
rcrl
add
ja
cmp
xchg
jmp
stc
push
sub
push
movsl
dec
in
push
cli
dec
jno
rolb
push
push
js
stc
dec
shrl
sbb
das
fstpl
xor
in
stos
push
js
sbb
jnp
cmp
xlat
mov
out
xor
adc
cld
push
loopne
lahf
dec
jo
dec
xadd
dec
jg
cmpsl
es
mov
mov
jne
ss
daa
dec
xlat
into
test
jns
pop
xchg
sub
int
dec
dec
push
xchg
movsb
jmp
lea
sbb
pop
pushf
je
dec
push
ds
mov
sub
jecxz
andl
xchg
in
jno
clc
out
mov
xchg
loop
sub
out
pop
mov
xchg
jne
pop
scas
cmpsb
pop
and
mov
push
xchg
dec
aas
mov
repz
js
jg
mov
xlat
rol
mov
push
test
xor
sbb
inc
cli
sub
sti
push
push
push
pop
ss
mov
jne
jnp
cmp
out
outsl
or
and
fcoml
add
fsubrl
in
cs
or
and
insl
xor
push
repnz
xchg
and
int3
mov
or
dec
mov
inc
int3
jo
fs
xchg
push
pushf
outsl
rorb
aad
sbb
int3
fadds
scas
dec
hlt
pop
repz
mov
aas
out
xchg
roll
xor
jns
add
je
outsw
shlb
pop
sub
leave
push
and
leave
jns
imulb
pop
dec
popa
jle
push
or
xchg
shrb
out
sub
les
inc
icebp
xchg
fbld
sub
xor
jne
xchg
incl
call
pop
test
cli
cmpsl
and
mov
adc
in
xchg
push
mov
and
pop
je
sahf
lea
out
dec
clc
cwtl
bswap
xor
sub
lcall
jbe
mov
cmp
mov
addb
mov
fbstp
mov
jbe
push
push
daa
adc
push
add
jns
or
xlat
fcoml
sbb
mov
pop
dec
imul
or
xchg
jns
ret
sub
inc
mov
into
add
jecxz
cld
xchg
decl
lods
sti
or
or
dec
and
jnp
addr16
repz
adc
std
or
fwait
fwait
lret
inc
jae
push
adc
xor
sbb
mov
ret
repnz
dec
pop
rorb
dec
inc
idiv
jbe
ja
repz
mov
mov
push
mov
test
inc
lods
loopne
sahf
jae
sub
add
iret
data16
shr
aam
or
in
stc
mov
bound
jmp
loop
addr16
cli
rcr
xlat
lods
pop
xlat
mov
push
mov
das
mov
inc
push
push
stos
mov
inc
cmp
mov
push
jle
pop
sub
sahf
movb
aaa
movsl
ja
mov
ja
in
fs
outsb
cmpsl
icebp
mov
rclb
pop
xorl
mov
add
mov
addb
jecxz
aad
push
mov
pop
andw
hlt
dec
mov
cltd
or
sub
in
lret
jae
sbb
sbb
jle
shrl
sbb
add
pop
mov
lahf
fstl
iret
clc
movsl
popa
ret
push
lcall
dec
loope
icebp
stos
xor
add
sti
sahf
adc
or
xchg
fcomps
jecxz
sub
inc
adc
arpl
cli
dec
sub
pop
scas
adc
mul
je
ret
push
out
stos
dec
or
insl
and
ret
stos
test
push
movl
dec
icebp
mov
in
mov
in
push
add
in
cmp
and
lock
mov
mov
ss
es
rclb
xor
jecxz
shld
jecxz
stc
adc
inc
adc
loop
repnz
leave
lret
inc
pop
inc
out
xor
sbb
jae
sbb
mov
add
sti
xor
test
clc
rclb
les
sbb
rcl
mov
das
dec
fsts
mov
xor
sbb
lock
es
fidivl
push
xor
inc
fwait
out
sub
mov
int
shlb
aam
lcall
push
scas
mov
mov
ficoms
roll
scas
push
push
repnz
push
xor
inc
pop
out
mov
enter
jb
push
and
push
dec
imul
pop
clc
sbb
sub
icebp
add
cltd
lret
push
cmp
cmpsb
aad
mov
frstor
mov
mov
stc
xor
das
sbb
xchg
dec
shl
mov
and
bound
add
jl
loopne
mov
pop
test
clc
addr16
jo
mov
sub
xorb
adc
adc
loop
xor
in
outsb
adc
or
adc
sub
push
inc
bound
push
cmpsb
and
dec
orl
or
sub
mov
mov
adc
adc
mov
sub
movsl
test
mov
lret
push
mov
std
mov
sbb
into
adc
cmpsb
inc
mov
add
push
idivl
in
adc
test
jmp
dec
into
jecxz
mov
es
push
out
mov
lods
jge
mov
xchg
jl
jmp
pop
sarl
jge
push
or
sbb
push
pop
pop
dec
hlt
adc
push
push
push
sbb
xor
js
jbe
shrl
add
add
xchg
mov
cmpsl
mov
dec
pusha
fxch
scas
cmc
loop
sub
mov
cmp
mov
jecxz
xchg
mov
and
loope
jl
inc
mov
xchg
mov
pop
dec
test
test
das
and
out
or
cmp
xor
cwtl
orb
sbb
and
cwtl
adc
cmp
call
add
movsb
les
enter
sbb
add
test
push
and
cmp
cmc
ret
into
jmp
loop
xchg
and
xor
dec
test
mov
mov
mov
mov
andb
mov
cmp
fstps
mov
mov
inc
test
xor
or
xor
test
pop
inc
test
lods
and
adc
imul
leave
outsl
pop
mov
and
inc
xchg
jge
xlat
ret
int
lret
popa
xchg
cltd
jg
lret
push
cmp
sbb
mov
push
call
jb
aam
sbb
fwait
mov
subb
icebp
clc
sub
add
add
mov
add
push
fwait
sti
xor
jp
push
adc
out
pop
and
jnp
scas
pop
xorl
jmp
das
or
and
in
fs
xchg
pushf
cmp
xchg
adc
popa
add
cmpsb
xor
lret
mov
filds
insb
dec
pop
fsubl
mov
pop
cmpsl
shlb
cmp
sbb
add
int3
jno
and
scas
aas
movl
or
addb
push
mov
and
mov
dec
mov
adc
mov
jbe
inc
mov
sub
mov
dec
cmpsl
jge
in
adc
jl
iret
ret
push
push
xlat
pop
mov
sub
loope
jbe
mov
out
mov
je
xor
mov
push
popa
or
mull
shlb
hlt
adc
ficoml
leave
mov
repz
add
inc
sub
ja
adc
add
popa
cld
adc
es
mov
jo
cmpsl
in
xchg
mov
or
dec
jecxz
and
ret
insl
inc
jge
or
dec
ds
jl
daa
mov
test
push
sub
popa
adc
dec
adc
out
shrl
sbb
adc
and
test
add
stc
xor
fisttps
adc
insl
in
mov
mov
xor
mov
lock
xchg
sub
mov
lahf
aad
pop
push
sub
push
sbb
out
sub
or
push
jns
popf
cmc
pop
pop
enter
stos
les
icebp
push
and
or
mov
jp
inc
push
inc
dec
dec
jle
shll
push
mov
push
mov
add
sbb
dec
cmp
push
gs
and
int3
mov
imul
jo
jg
adc
jbe
cltd
push
fstps
lea
call
aam
mov
lret
mov
mov
cmp
sbb
leave
js
pop
push
inc
dec
lret
xor
enter
or
sub
hlt
test
mov
push
dec
lret
push
add
idivl
add
scas
es
outsb
xlat
js
pop
jecxz
push
lahf
sbbw
outsl
loope
dec
in
push
push
jns
lds
ror
mull
sub
aam
jmp
in
xchg
mov
daa
push
mov
popl
sub
adc
xchg
xchg
fstl
lret
push
fdivr
push
mov
xor
cmp
xlat
xor
cmp
insb
jne
int3
test
into
and
mov
and
pop
adcl
mov
rcrb
stos
aaa
lea
lcall
in
test
in
in
hlt
cli
sub
pop
jecxz
sbb
push
cmp
xor
xor
push
mov
cmpsb
xor
mov
xchg
pop
lock
imul
filds
out
das
fiaddl
popa
jg
nop
insl
cmp
aad
mov
cmp
inc
pop
pop
dec
mov
sub
add
mov
popa
fwait
andb
test
dec
xor
gs
in
int
insl
xchg
mov
mov
das
cmpsl
pop
lods
popf
test
pop
jne
leave
jl
outsb
or
addr16
iret
decl
cmp
or
sub
cmpsl
add
lret
mov
icebp
aas
add
sub
out
pop
pop
cmp
int3
jmp
pop
mov
addb
mov
mov
pop
cli
pop
and
jo
imul
lock
pushl
mov
enter
jmp
arpl
adc
sahf
jp
cmpl
ret
cmpsl
mov
ds
addl
fsubrl
bound
push
mov
jbe
out
test
adc
cmp
rcrb
inc
adc
sub
fwait
imul
cmp
fcompl
jnp
sbb
sbb
jmp
cmpsl
xor
xchg
test
jnp
shrb
fnstsw
push
or
jge
in
nop
fs
neg
jb
or
mov
push
sbb
sbbb
jle
out
sub
sbb
outsb
pop
cmp
pop
shr
add
movsl
test
xor
es
test
sub
inc
mov
jae
leave
adc
imul
dec
pop
dec
fisttpll
sbb
js
xor
outsl
dec
ss
pop
push
adc
xlat
dec
cmp
pop
mov
sbb
out
jo
mov
idivb
inc
int3
adc
inc
add
xchg
cmp
popf
jle
xor
scas
leave
pop
pop
mov
rcll
inc
out
xchg
pop
jle
pop
mov
jecxz
das
lds
cmp
jmp
xchg
std
or
mov
mov
mov
in
test
outsl
or
fwait
outsb
hlt
aas
shll
mov
and
adc
push
mov
add
loope
jo
in
pop
add
add
or
dec
movsb
dec
leave
inc
xchg
loope
fninit
repz
inc
fdivs
setbe
ss
mov
test
pop
inc
push
popa
mov
jmp
xchg
aaa
aas
icebp
loop
push
subb
pop
shl
sub
test
outsl
aaa
das
sbb
add
mov
dec
rcl
dec
leave
or
outsl
pop
ss
jmp
mov
sbb
ss
fcmovbe
mulb
stos
or
mov
cld
in
mov
xchg
sti
jbe
dec
xor
pop
xor
in
pop
shl
shr
push
test
and
ljmp
mov
sti
stos
and
cwtl
mov
stc
popf
stos
dec
out
aas
out
and
mov
xlat
inc
in
push
jle
mov
dec
dec
fs
stos
xchg
cmp
lret
xchg
or
cltd
test
sub
mov
dec
sarl
fidivl
pop
sbb
jg
mov
das
pop
imul
mov
mov
in
ja
out
sub
mov
inc
ficomps
fidivrl
cmpsb
and
adc
jno
add
push
cmp
jge
mov
adc
fcoml
add
in
mov
arpl
popf
test
lret
sahf
shlb
and
pop
in
push
fsubs
aaa
xchg
pushf
xchg
mov
loop
fcoml
or
or
adc
hlt
test
mov
ret
cs
adc
movsl
insb
fimull
rcrl
push
pushf
xor
or
cltd
jecxz
cmc
aam
enter
mov
jg
fiadds
xchg
sub
push
or
mov
dec
pop
pusha
in
cwtl
cmp
jg
test
mov
lret
mov
xchg
out
push
jbe
push
in
sbb
addps
mov
push
xchg
loop
fsubrp
out
jae
add
std
push
out
mov
xchg
inc
test
mov
in
mov
and
push
es
sub
and
inc
out
pop
adc
mov
rorb
adc
mov
enter
adc
xchg
cmpsl
ja
lock
test
xchg
test
lret
imul
inc
push
ljmp
pushl
xor
inc
fistps
fiaddl
mov
bound
adc
scas
add
inc
push
sub
or
pop
cmp
test
cmc
clc
add
jecxz
cld
cmp
mov
shll
fsub
hlt
lcall
sbbl
push
je
dec
in
mov
fnstsw
xor
ror
mov
adc
movsb
or
clc
in
jmp
movsl
mov
cltd
sub
push
xchg
fmull
inc
cmp
pop
push
cld
xor
mov
rolb
jnp
mov
xchg
mov
scas
jl
aas
push
jp
and
jl
lret
lahf
mov
jp
pushf
or
xchg
xchg
adc
push
daa
lods
pop
cmp
mov
cmp
repnz
lods
cwtl
and
and
mov
insl
push
idivb
push
mov
aas
mov
shrb
cmp
push
xchg
addr16
repz
sti
mov
hlt
push
dec
lods
xor
add
mov
daa
adc
notb
mov
inc
push
mov
loope
repz
gs
ret
xchg
aas
lret
shrl
jmp
jbe
hlt
arpl
mov
pop
xchg
das
pop
out
or
pop
jnp
jo
scas
sub
add
imul
and
jecxz
je
pop
vpcmpgtb
push
push
jge
pop
pop
jle
pop
jge
arpl
mov
roll
inc
jo
push
cmpb
pushf
fldenv
shlb
into
bound
cmp
xor
push
cmp
std
pop
xchg
rclb
xchg
subl
xor
shl
sti
mov
push
aas
pop
jl
push
pop
in
out
inc
leave
cltd
xchg
ret
adc
shlb
inc
lahf
fisubl
push
shlb
aaa
and
adc
stos
ret
ljmp
std
inc
and
fmull
rorl
pop
js
aam
jb
sbb
ret
out
jno
inc
movl
jg
sbb
std
hlt
repz
jmp
not
jnp
jp
xor
or
fnstsw
cmp
out
test
gs
jae
movsb
sti
ret
jg
mov
add
or
adc
jno
add
mov
mov
dec
in
lds
mov
jge
xchg
cwtl
test
jnp
cld
jae
mov
pop
jl
jmp
cmpsb
rorl
mov
mov
shlb
popa
adc
jl
jno
in
pop
cld
or
add
adc
add
xchg
pop
xchg
outsb
fdivrl
cmc
dec
xchg
icebp
xchg
jmp
mov
ljmp
jno
mov
cmpsb
pop
pop
loopew
push
cli
xchg
sbbl
cli
aaa
xchg
push
imul
test
cmc
inc
dec
jns
mov
lea
jns
sub
out
jnp
mov
xor
push
or
xchg
lahf
add
scas
xchg
jo
mov
mov
nop
aam
enter
sub
mov
movsb
cmc
or
imul
sub
sysret
jmp
mov
das
adcb
mov
outsl
mov
and
adc
int3
xchg
jns
dec
push
cmpsl
adc
xor
xor
mov
mov
aas
mov
adc
arpl
mov
stos
inc
lock
mov
fucomip
daa
ret
out
cmc
or
and
inc
and
inc
shlb
gs
arpl
push
fisubs
dec
icebp
fdivrs
loop
fcompl
inc
push
xchg
mov
or
push
add
sbb
jns
pop
negl
mov
loop
aas
out
xor
lahf
lods
loope
jne
add
pop
inc
mov
mov
daa
pop
in
mov
ljmp
bound
lods
and
xchg
fidivrs
pop
cmc
sahf
inc
cs
jecxz
xor
sub
je
pop
ret
imul
lcall
jecxz
adc
and
repz
fs
pop
add
xchg
add
mull
imul
and
inc
dec
jne
jmp
rcl
es
cmp
cmp
inc
fldenv
jg
arpl
xchg
pushf
push
jg
ss
xlat
es
dec
jbe
push
sbb
add
lock
pop
mov
lret
jb
jmp
imul
xchg
mov
mov
mov
stos
cltd
lahf
mov
sbb
mov
sarl
aad
es
push
push
cmp
adc
push
jge
call
imul
cmp
outsb
adc
jecxz
push
sub
imul
and
les
cld
mov
inc
mov
add
lret
movsb
pusha
in
nop
lock
mov
ss
xchg
jne
loopne
pop
xor
jno
xchg
idivb
dec
test
or
xchg
mov
xor
test
add
or
fwait
sbb
jbe
cmp
lret
pop
clc
lahf
xor
pop
xchg
dec
mov
inc
cmpsl
pushf
cmpsl
mov
addr16
maskmovq
jle
sbb
cmp
jno
test
dec
mov
mov
dec
nop
call
paddw
jae
jb
fimuls
insl
pop
xchg
pop
lds
pop
push
mov
jp
push
mov
or
push
add
xor
jecxz
push
aas
mov
in
cmp
into
sahf
in
adc
ljmp
inc
fwait
mov
ficompl
adc
xor
cmp
pushf
outsb
jne
sub
fidivl
add
cltd
mov
inc
mov
lahf
xor
repnz
dec
push
fwait
push
pop
stos
movsl
mov
bound
cmp
fcoms
jl
das
cmp
xchg
in
mov
jge
jmp
repz
orl
or
arpl
insl
std
scas
add
rorb
jno
repnz
adcl
sarb
loop
xor
sbb
adcl
insl
stc
in
gs
and
mov
roll
pop
imul
or
sarl
outsb
inc
loopne
xchg
pop
sarl
adc
mov
jns
ret
or
cli
outsb
popa
mov
xchg
ficoml
xchg
push
sarb
mov
loope
arpl
inc
pop
out
out
in
inc
shll
insl
lods
cmp
movsl
fbld
sub
cmp
outsb
data16
inc
jmp
in
sbb
jns
shrb
xchg
inc
cmpsl
mov
inc
cmc
mov
pop
xchg
push
jo
enter
lret
dec
mov
mov
rorb
out
add
clc
into
repnz
cwtl
lods
incb
shl
xchg
push
jmp
push
xchg
fdivrs
arpl
jg
sub
xchg
mov
pop
cmpsb
pop
loopne
jg
and
xchg
gs
xlat
jo
icebp
jns
lods
out
cmp
rcrb
jmp
ret
ss
jmp
pushf
repnz
xor
out
ds
cmp
pop
ret
divb
pop
jle
pop
ss
or
mov
sbb
in
jle
mov
dec
jmp
popf
lcall
xor
hlt
push
mov
ret
sarb
out
sti
ret
or
cmc
js
lds
fnstsw
daa
pop
pop
push
cmpsb
push
bound
sbb
and
pop
adc
out
in
push
pop
or
outsl
iret
adc
jnp
mov
mov
mov
ljmpw
xchg
jge
and
push
ljmp
fs
dec
test
xor
mov
jecxz
jmp
shll
add
jge
lret
nop
scas
mov
gs
das
loopne
and
lea
aaa
popf
push
xor
mov
xchg
sub
in
inc
movsb
ret
add
jb
dec
or
pop
negl
aad
push
push
sbbb
xor
sti
mov
fistpll
loop
mov
lea
clc
add
pop
pop
cmp
in
sub
mov
data16
sbb
add
cmpsl
lret
shrl
shl
ds
or
rclb
xlat
xchg
xchg
fidivs
sub
aam
jo
ret
adc
push
cmp
xor
imul
add
cmp
ret
and
sti
popf
lahf
sub
insl
adc
push
pop
js
xchg
cwtl
dec
cli
hlt
dec
andps
push
adc
jne
lret
loopne
pop
sbb
xor
ljmp
add
jb
xor
fstp
subb
mov
jle
into
out
fwait
xchg
ss
nop
push
pop
mov
push
cmp
and
scas
ljmp
pop
push
cmpsl
inc
inc
mov
inc
shll
insb
ret
xor
dec
insb
lahf
lcall
sub
in
pop
ja
xchg
outsb
test
sbb
ljmp
sub
out
imul
movsl
andl
jns
les
sbb
push
cs
xor
data16
push
or
out
and
inc
sub
dec
js
and
xchg
pop
mov
fwait
mov
ljmp
mov
dec
rcrb
xchg
in
clc
fwait
mov
pop
aas
jae
insb
insl
out
jp
dec
or
sub
les
jo
cmp
stc
push
dec
mov
cmp
jg
lret
sub
in
loope
incl
int
push
inc
fwait
mov
sbb
call
inc
mov
lods
mov
dec
mov
adc
adc
je
cmp
jb
jmp
insb
xor
adc
es
bound
dec
imul
mov
xchg
dec
fcmovnbe
sub
test
mov
cli
add
add
inc
aad
cmp
cmp
jae
test
dec
test
jne
add
bound
aaa
pusha
add
xchg
mov
fisubl
xchg
sti
cld
ficomps
shl
xchg
adc
imul
in
xchg
pop
mov
es
add
cs
mov
sub
jo
mov
push
jp
adc
shll
mov
ss
xchg
out
rcll
add
dec
test
mov
dec
inc
in
jnp
imul
in
jg
inc
mov
popf
shll
push
xchg
ret
inc
in
push
sbb
cld
bound
pop
cs
cmpsl
mov
repz
xor
mov
imul
mov
dec
push
popf
jl
adc
popa
int
jb
adc
ljmp
test
sahf
cmc
xchg
popa
push
push
ret
pushf
inc
jo
mov
daa
cld
pop
pusha
sub
fiadds
push
je
lods
push
push
lods
mov
jno
xor
xlat
inc
shrl
fcomps
jb
inc
mov
or
jbe
loope
stc
loope
es
jbe
call
pop
fs
mov
and
fmuls
dec
xchg
mov
std
sbb
pop
sti
add
inc
push
mov
in
jo
mov
sti
pushf
add
dec
mov
lds
or
int3
bnd
lahf
nop
mov
sub
inc
nop
sbb
xlat
mov
fwait
test
je
je
push
dec
sbb
mov
fcomp
mov
sbb
in
stc
fbstp
cmc
mov
jl
mov
inc
aad
dec
add
mov
test
fmull
pop
aas
xchg
shl
loope
inc
push
xchg
test
dec
fistl
int3
testl
pushl
movsb
shlb
push
xor
rcll
stos
mov
mull
or
iret
popf
mov
adc
test
arpl
fidivl
ja
jg
pop
xchg
xorl
push
lahf
mov
jns
mov
in
in
fdiv
xor
stos
and
fsubrs
jg
mov
xor
mov
push
dec
mov
mov
cmpsb
add
int
mov
in
hlt
clc
ss
negb
pop
xor
cmp
mov
fisttpl
pop
orb
add
fcmovbe
or
mov
inc
cli
xchg
repz
cmp
lret
jmp
or
cmp
xchg
and
test
dec
or
xor
lds
in
jae
mov
ja
mov
add
repnz
cmp
loop
lods
push
pop
mov
sar
popa
xchg
ss
xchg
outsb
mov
lods
arpl
sti
scas
aam
push
je
jg
movsl
xchg
in
push
add
adc
lods
mov
xor
jnp
and
sub
sbb
out
jne
xchg
mov
iret
mov
pop
outsl
ljmp
mov
jp
push
xor
sbb
mov
pushf
cmp
stos
dec
test
lock
inc
ret
xchg
sbbl
rcrl
pop
xor
add
sarb
aas
jl
cmp
es
in
mov
aam
lea
stc
pop
cltd
mov
movl
sbb
aaa
xlat
loopne
xor
inc
fisubl
dec
sub
inc
sbb
adc
inc
dec
je
in
inc
repz
fldcw
and
fsubl
jno
mov
aam
pop
sbb
dec
and
ror
jbe
cmp
or
out
mov
xor
cltd
jmp
mov
jge
mov
xchg
pop
lret
neg
or
or
and
jmp
and
pop
mov
push
gs
cmp
std
jmp
aam
xchg
pop
pop
fidivrl
pop
orl
push
inc
psubb
mov
dec
mov
pop
cwtd
adc
sbb
outsb
mov
loopne
fwait
stos
dec
mov
and
sbb
jno
mov
mov
xchg
cs
pop
jns
push
ja
push
xchg
sub
dec
lock
push
fildl
mov
jne
push
aad
inc
outsl
fdivr
dec
pop
xor
fadd
cld
cld
sub
jns
xor
lds
jg
insl
xchg
and
and
push
push
lret
sbb
aad
popf
sbb
mov
sub
and
ret
and
push
ja
lock
dec
aas
pop
adc
jle
add
xor
js
aas
xor
sub
lret
xchg
sub
mov
or
xchg
mov
fisubrl
mov
scas
xorb
movsb
cmp
test
addb
into
cmp
dec
insb
push
sub
cltd
divb
shl
cs
dec
les
add
ds
pop
dec
add
lret
pop
loop
xchg
jecxz
sti
clc
loop
aaa
rorl
fisubrs
xchg
mov
lahf
jg
frstor
push
sub
shrl
xchg
xchg
cmp
push
mov
jbe
cmp
add
pop
sbbb
mov
in
adc
pop
outsb
sub
fsubl
and
mov
dec
test
fdivr
mov
movsb
lods
or
mov
add
std
and
popa
mov
xor
in
test
inc
addl
loopne
and
xchg
cmpsl
addr16
and
push
jns
outsl
pop
sub
aas
mov
cmc
mov
jb
cmp
aam
xchg
ret
xchg
jmp
scas
push
inc
xorb
xchg
sub
add
sahf
std
mov
nop
shrb
mov
and
hlt
shl
xchg
mov
pop
xchg
sbb
xor
pop
and
xor
xchg
lcall
cltd
sti
jbe
outsb
pushf
pop
shll
jo
push
sti
repnz
call
cmp
push
push
fstl
cltd
movsl
cmpsb
cli
cmp
jmp
push
jle
inc
popf
cmp
adc
push
inc
and
and
pop
and
sti
jecxz
mov
mov
lods
out
jnp
pop
into
stos
orl
sahf
pop
and
scas
cmp
pop
cmp
mov
fcomip
mov
outsb
stos
movl
sahf
mov
mov
or
or
fwait
jecxz
bound
adc
xchg
test
cmpsl
and
jbe
mov
loope
cwtl
insl
pop
sub
fidivs
inc
push
lea
xchg
pop
ret
cmp
sub
or
movsl
add
xchg
lret
mov
jle
pcmpeqb
cmpsb
cld
loope
mov
cmp
fwait
xchg
leave
or
mov
mov
sti
in
sbb
dec
iret
cmpsb
mov
ret
and
lock
popa
jbe
movsl
int
push
aaa
pop
outsl
lock
test
jne
cli
sbb
fcompl
into
cmp
jae
iret
push
or
in
or
push
orb
pop
test
mov
jns
cmp
jae
bound
test
mov
lret
xor
fildl
jno
das
fst
pop
mov
inc
pop
mov
in
push
mov
stos
iret
in
pop
mov
js
sbb
ffreep
cmc
leave
push
in
stc
fidivrs
ljmp
fs
push
orl
popa
inc
sub
mov
pop
bound
idivb
insb
mov
push
je
mov
sub
insb
fstpt
pop
jnp
cwtl
push
inc
jmp
ret
out
stc
sub
push
dec
mov
inc
pop
daa
mov
sbb
ss
inc
dec
cmp
inc
mov
push
dec
inc
in
push
or
jmp
or
stos
dec
iret
scas
xchg
sub
mov
dec
cmp
sbb
cmp
insl
dec
je
push
mov
nop
jg
mov
shl
mov
fscale
imul
xor
push
fimuls
mov
popa
insl
cld
in
adc
xor
pop
push
fwait
addb
mov
in
in
inc
and
int
fidivrs
int
mov
shr
test
jl
inc
xchg
gs
icebp
pop
fbstp
sti
out
mov
fsubrs
dec
sub
fistpl
in
cmp
cwtl
in
test
dec
in
lcall
aas
imul
subb
push
movsb
push
inc
mov
sub
or
hlt
sbb
leave
inc
mov
loop
sub
jo
pop
loope
jge
adc
push
sbb
sbb
mov
xlat
jbe
mov
add
imul
adc
gs
aas
pop
push
or
jne
xor
scas
pop
rorl
pop
pop
mov
or
mov
xchg
insl
cmp
fsts
fdivrs
movsl
or
jb
xor
leave
jo
pop
mov
outsb
mov
iret
orl
aas
loope
sbb
mov
xorb
nop
mov
add
xor
add
ss
lock
ss
fsubrs
sub
loope
ds
lahf
dec
sbb
dec
dec
push
loop
inc
mov
addr16
cmp
out
fdivrl
int
mov
cs
jecxz
ja
ds
stc
loop
adc
add
xor
add
imul
push
mov
jmp
and
adc
insl
lcall
nop
les
adc
nop
divb
push
cmp
in
popa
into
sbb
sbb
pushw
cmp
push
xchg
and
scas
xor
adc
enter
gs
aaa
mov
fdivs
shl
in
loope
addr16
lds
cwtl
pop
test
fwait
pop
lahf
xchg
testb
cli
push
js
stc
hlt
push
xchg
sub
cmp
sbb
xchg
ret
mov
push
hlt
or
inc
mov
mov
js
mov
dec
push
in
rcrl
mulb
imul
test
movl
inc
out
push
adcl
mov
mov
out
cmp
mov
pop
xchg
mov
mov
clc
fbstp
push
lods
pop
jmp
lock
or
mov
call
je
popa
and
cmp
dec
adc
push
inc
jae
pop
push
sub
stos
mov
jmp
fisubs
jo
push
push
ret
ljmp
scas
test
dec
pop
cmp
cwtl
aam
adc
testl
subl
jo
daa
fisubrs
ss
mov
cmp
cmp
out
scas
inc
loop
lcall
insb
jg
jae
fisubl
sub
add
andl
xor
cwtl
sub
testl
mov
cmpsb
jl
lods
movsb
bound
adc
ss
scas
int3
out
test
pop
push
push
insb
adc
mov
push
pop
ja
jl
xchg
inc
jmp
and
and
fadd
insb
sar
cmp
hlt
cmp
repz
lcall
cmpsl
push
add
xor
cmp
adc
dec
and
pop
ss
adc
mov
xchg
ss
pop
loope
sub
xlat
ret
cmc
cli
xchg
xchg
sbb
out
out
fwait
loope
push
add
out
movsb
pop
pop
inc
mov
dec
std
aam
popa
xor
cmp
jge
aaa
icebp
test
mov
xchg
xor
lahf
fisttpll
pop
imul
fcmovnb
push
lcall
xchg
mov
movsl
fiaddl
lahf
adc
enter
mov
flds
mov
or
add
into
mov
test
aam
popa
repnz
in
jmp
push
ljmp
bound
loopne
inc
pop
inc
push
xor
fwait
inc
mov
mov
cmp
lock
and
push
or
xchg
jne
add
lock
imul
out
insb
push
mov
icebp
stos
xor
in
dec
mov
jp
add
mov
out
mov
mov
push
in
mov
dec
loop
ret
insb
xchg
jb
test
or
and
mov
lcall
lock
mov
mov
in
cmp
sbb
xchg
pxor
mov
clc
jmp
cli
cmpsb
pop
fs
clc
jecxz
es
sub
test
dec
movsb
mov
insb
loop
xchg
fistl
mov
mov
mov
ret
inc
lods
xor
hlt
xchg
and
mov
and
xchg
cld
xchg
cmp
lcall
or
jecxz
inc
sub
imul
mov
andl
hlt
test
cmp
cld
dec
notb
bound
std
xor
cmpb
ja
inc
imul
leave
aad
xlat
jmp
lea
dec
out
push
sub
mov
or
call
mov
pusha
gs
xor
call
add
cmp
add
ss
pop
or
mov
sahf
out
gs
stc
jmp
pop
push
scas
cmp
xor
mov
pop
xor
push
or
mov
mov
xchg
loopne
xchg
adc
jp
arpl
out
push
je
mov
push
daa
inc
xor
push
sbb
aad
jns
orb
pop
bound
jb
jnp
popa
inc
lds
mov
sahf
lods
sbb
andb
sbb
sub
fmull
add
jmp
in
jl
popa
cmpsl
icebp
sti
fwait
loopne
ficompl
icebp
aaa
arpl
ljmp
mov
rdmsr
gs
inc
lods
loop
es
fcom
xorb
push
outsb
sub
jge
cmpsl
rcr
imul
imull
daa
aam
fbld
pushf
call
push
shll
out
inc
clc
lock
xlat
jnp
mov
pop
mov
call
or
nop
mov
je
mov
aam
lahf
mov
jp
jae
sub
adc
je
dec
xchg
adc
xchg
sub
into
and
and
sbb
sub
test
dec
nop
jecxz
jg
sbb
mov
xchg
sub
rcrb
dec
repz
inc
sarb
out
mov
jbe
inc
lret
xor
mov
adc
mov
jecxz
clc
in
fiadds
inc
push
sub
nop
cmp
jns
vunpcklps
imul
arpl
inc
mov
inc
jle
add
cmc
popa
sbb
scas
xor
push
jl
dec
adc
push
adc
or
movsl
hlt
test
cmpsb
lcall
xchg
adc
enter
in
jnp
es
xchg
enter
jns
xor
into
jp
fidivs
subl
mov
lea
cmovl
pop
rcrb
sub
or
sub
fdivrp
or
push
pop
aam
scas
pop
test
fs
or
pop
or
mov
fsubp
inc
jmp
lock
in
cmpsl
push
dec
insb
push
jno
cmp
pop
xchg
std
push
or
daa
roll
xor
pushf
lods
icebp
je
sub
xchg
mov
cmp
push
and
pusha
pop
push
xor
push
mov
push
xor
and
and
mov
and
pop
inc
movl
xchg
adc
push
mov
outsb
and
xor
loopne
fisubrl
inc
rolb
shll
pushf
dec
push
adc
aaa
std
shll
sub
pop
xlat
add
mov
push
data16
pop
mov
adc
pop
repz
push
xor
xlat
and
aam
ffreep
roll
imul
xlat
pop
push
roll
xor
test
jmp
add
xchg
stos
cmp
andl
cmp
mov
dec
outsl
xor
pushf
repnz
rcl
andb
sbb
es
xor
push
mov
lods
out
xchg
mov
pop
dec
decl
sub
outsl
cmc
imul
mov
sbb
and
sub
mov
sbb
stos
fldcw
lds
push
fistps
pop
mov
ljmp
loopne
push
sub
adc
outsb
sbb
mov
push
cmp
jb
dec
mov
pop
mov
or
aas
mov
loop
fmul
sbb
sbb
sahf
xchg
test
lods
jmp
into
add
cli
jb
int
lahf
and
insb
and
cmp
movsl
mov
and
hlt
lea
pop
mov
push
les
and
adc
mov
add
xchg
push
adc
sub
pop
dec
sahf
rorl
pop
sub
pop
nop
mov
pop
jo,pn
and
adc
rcl
mov
cmpsl
fstpt
xchg
sub
popa
lret
outsb
in
xchg
rclb
ficompl
pop
fs
scas
dec
sub
aas
mov
fimuls
cli
daa
sbb
lock
push
pop
jae
sahf
ret
std
mov
decl
shlb
jbe
hlt
add
push
aam
int3
cs
cmp
outsb
mov
fisubrl
shll
mov
aas
or
sub
jne
lods
add
fcomps
sub
adc
mov
mov
nop
imul
xor
ss
repz
pushf
fadd
xchg
mov
adc
rcr
loope
ret
cmp
test
jne
dec
and
fdivrs
pushf
xor
stos
adc
pop
mov
xor
cmpsl
adc
sbb
pop
jo
cmp
fnstsw
push
jns
fisttpl
mov
call
cmp
mov
loop
out
test
pop
rorl
repz
loope
mov
inc
inc
push
pop
rcrl
xchg
fdivrl
jle
test
pusha
mov
cmp
add
add
xor
inc
cmpsl
push
lret
popl
xchg
std
dec
inc
divb
in
cmp
xchg
dec
jne
bound
adc
dec
xchg
jo
push
fs
pop
das
loopne
fdivrs
mov
xor
popf
lea
mov
xchg
push
or
outsl
cmpsb
enter
pushf
ljmp
mov
add
daa
icebp
lret
imul
jg
xor
adc
xchg
adc
pop
inc
push
sbb
lret
xchg
aaa
imul
xor
mov
daa
xchg
les
xchg
dec
dec
mov
cmp
test
pop
cmpsl
faddp
std
mov
daa
pop
jne
roll
mov
add
xchg
outsl
sahf
add
imul
adc
and
and
mov
jmp
sbb
cmp
pop
shlb
jg
xor
dec
fidivrs
add
adc
mov
lret
cmp
arpl
inc
rcl
ret
jle
leave
cmp
jl
add
test
mov
std
rol
mov
and
test
cmp
data16
lock
or
mov
inc
push
mov
in
adc
mov
or
scas
sti
nop
mov
insl
call
mov
les
icebp
cmc
out
sub
inc
and
jg
lret
jmp
push
lods
cmc
xchg
add
sub
into
xor
mov
dec
xchg
mov
pop
mov
fildll
dec
in
nop
fdivs
into
imul
or
sarb
cs
out
fcmove
out
sbb
or
dec
pop
popa
and
jo
adc
sahf
jbe
sbb
sbb
ja
test
xchg
sub
xor
push
jbe
aaa
mov
aam
add
fadd
ret
xor
jp
cs
leave
iret
rcll
and
mov
lcall
stos
sbb
lcall
test
cmp
sarl
sbb
and
jp
daa
add
lea
daa
roll
lods
out
push
inc
icebp
adc
xor
das
fisttpll
movsb
rcr
call
push
jae
sbb
mov
call
mov
call
dec
add
xchg
xchg
jne
or
orb
adc
scas
andl
push
jg
lcall
aad
mov
jmp
lods
inc
push
xor
push
and
movl
out
aad
push
push
fimull
jge
imul
adc
pop
xchg
or
push
xor
lods
and
cmc
mov
inc
or
mov
into
testb
mov
bound
clc
xchg
adc
inc
adc
dec
or
push
adc
sub
pop
mov
xchg
mov
mov
add
jge
int
push
std
mov
jge
cmp
pop
add
icebp
test
mov
or
lock
cmpsl
push
add
ljmp
pop
into
jb
mov
push
cs
inc
mov
and
xchg
sbb
push
daa
clc
outsb
and
mov
iret
fdivrl
jmp
imul
xchg
adc
out
popa
sub
lret
mov
dec
stos
addr16
fstpl
sbb
sahf
and
ret
dec
mov
mov
cld
sahf
dec
mov
jp
and
ja
push
mov
pusha
jbe
lret
or
jns
xchg
cltd
jle
in
xchg
sub
gs
add
je
push
orl
xor
fucomi
xchg
sbb
push
inc
mov
push
popa
mov
xor
pusha
jl
cmp
lcall
hlt
mov
sub
and
sbb
fwait
xor
add
lods
push
flds
pop
loope,pn
imul
imul
imul
arpl
jecxz
pop
lds
jl
mulb
in
popf
inc
ficoms
mov
cmpsb
daa
push
cmovle
xor
jg
sbbb
xchg
mov
mov
mov
mov
jp
sub
xchg
xor
or
mov
dec
ret
add
push
scas
pop
and
inc
mov
lcall
mov
rclb
or
mov
sub
push
test
dec
push
xlat
scas
sti
lcall
mov
add
mov
test
cmpsl
mov
in
dec
sub
stos
jp
mov
adc
inc
mov
dec
lods
aad
int3
push
mov
cmpb
movsb
iret
and
pop
sbb
insl
lea
sub
jge
dec
or
ljmp
adc
cmp
sub
divl
jae
ja
dec
insl
cmp
xchg
cwtl
shlb
xor
loopne
hlt
push
scas
and
fdivl
xchg
test
xor
push
loopne
xchg
rclb
gs
and
xchg
popf
mov
xlat
mov
sahf
fs
cmp
divl
xchg
add
lds
inc
movsl
pop
sub
push
insb
jge
fdiv
cli
cwtl
movsb
push
enter
inc
inc
xchg
je
pop
insb
fcomps
push
cmp
test
addr16
out
pop
add
sub
mov
dec
xchg
jp
jo
add
xlat
ljmp
into
cmpsb
xchg
cmpl
out
inc
add
mov
imul
jae
sti
ret
inc
jg
or
aad
movsb
jg
into
mov
mov
ds
push
push
pushf
adc
xchg
jbe
adc
ret
jnp
pop
mov
pop
fwait
or
xlat
jo
xor
into
adc
adcb
lea
jge
sub
push
cmc
inc
mov
nop
jle
out
test
sub
bound
xchg
leave
cltd
mov
dec
lods
pushf
and
mov
leave
mov
and
xor
ja
dec
cs
sbb
fnstenv
std
loop
icebp
sti
cmp
cmpsb
test
cmpsb
or
popf
lock
leave
ret
cmc
in
cmp
lods
es
inc
cli
fmul
int3
pushf
icebp
xchg
add
aam
leave
dec
push
or
jge
add
mov
push
pop
inc
and
in
sbb
fidivs
cmp
adc
mov
inc
jmp
sub
je
aas
mov
mov
add
pushf
icebp
arpl
pop
sarl
in
add
aas
je
ljmp
inc
push
and
sub
inc
jo
out
inc
pop
cltd
mov
xor
cmp
loopne
inc
scas
icebp
loopne
xchg
cli
or
xor
push
mov
fs
mov
pop
fs
sub
jbe
jae
outsb
dec
adc
adc
hlt
shll
jae
push
sahf
push
lods
push
xchg
mov
es
pop
insl
and
mov
negl
lret
adcl
xchg
addr16
mov
inc
jne
jns
jle
cmp
pop
jg
popa
hlt
mov
or
jb
jne
jns
fisttpl
stc
fcomps
xor
imul
cmpsl
rcrb
xchg
fldln2
hlt
cmp
scas
sub
aaa
sbb
dec
dec
sbb
sbb
les
add
mov
ficoml
push
mov
lret
xor
cmp
das
cmp
mov
aam
dec
add
cmpsl
lcall
pop
test
adc
out
out
jo
dec
loop
adc
shlb
out
or
shl
ss
inc
je
inc
sub
push
cld
mov
cli
lret
das
jb
xor
ljmp
xor
outsl
lods
jae
push
sbb
jno
pop
push
dec
adc
mov
pusha
dec
nop
imul
mov
std
cmp
nop
lahf
out
jo
je
bound
fnstsw
xchg
repnz
addr16
adc
je
cli
mov
imul
inc
cmp
enter
out
jae
and
mov
inc
push
icebp
fwait
inc
pop
mov
dec
in
adc
jle
dec
stos
daa
js
scas
and
lgs
icebp
cli
xor
cmp
add
clc
in
mov
sub
mov
and
add
loope
xchg
sahf
pop
fiadds
iret
add
mov
fisubrs
cltd
mov
mov
xchg
push
cmpb
or
sti
sbb
jmp
repnz
fidivs
adc
jg
sub
es
mov
jo
test
std
stos
pop
shl
mov
mov
cmp
addr16
rolb
movsb
xor
dec
fistps
inc
ret
movsl
insl
adc
mov
mov
push
xor
inc
incb
xor
int3
leave
jno
xor
push
sub
outsb
lods
sti
int3
or
sub
pop
lods
jae
jb
jg
rcrl
and
mov
and
in
loope
repz
jge
push
leave
push
sub
pop
icebp
movsl
repz
add
loope
jns
jnp
mov
xchg
xchg
popa
push
mov
mov
add
mov
push
adc
xchg
repnz
sarb
fs
xchg
pop
insl
xor
add
nop
sahf
push
clc
sti
and
push
cmp
cld
mov
insl
push
pop
inc
scas
xchg
mov
push
sbb
rorb
inc
jecxz
dec
mov
ficompl
repnz
fsubl
shl
or
mov
out
repnz
filds
inc
bound
pop
jns
inc
testb
call
fdivl
out
nop
and
cmp
fsub
repz
iret
push
mov
addl
pop
aad
push
pop
hlt
ret
ficompl
cmpsl
shlb
adc
cld
or
notb
rcr
or
fsts
dec
in
aas
cmp
in
mov
mov
insb
xchg
lahf
sub
pop
jmp
ds
std
cld
test
sub
inc
mov
adc
sahf
sarl
dec
adc
pop
xchg
sti
push
dec
sub
test
cmp
push
or
rcrb
inc
in
dec
xor
or
or
dec
in
lret
xchg
mov
shlb
fildl
imul
andl
pop
xchg
test
loope
mov
push
adc
cmp
mov
cmpsb
xchg
push
inc
andb
insb
inc
inc
cli
in
fs
mov
jmp
and
sub
das
loop
cltd
movhps
sub
bound
ftst
sub
push
dec
pop
sbb
jge
cli
mov
stos
sbb
adc
mov
add
ret
or
popa
push
mov
cmp
stos
mov
push
adc
inc
mov
cmp
xorb
sbbb
xchg
addr16
mov
pop
mov
outsb
aad
pop
adc
lods
sbb
cmp
inc
adc
pop
sbb
or
sbb
popa
popf
sbb
jns
push
cmp
stos
cmp
adc
ficoms
gs
pop
pop
mov
and
imul
lods
xor
and
mov
push
pop
mov
pop
iret
dec
lods
push
call
push
pop
xchg
cmp
ret
ljmp
nop
inc
sub
xchg
mov
inc
ds
jmp
pop
mov
scas
jg
int
mov
mov
and
lock
inc
mov
sahf
xchg
aam
pop
pop
mov
jae
test
pop
or
mov
pop
sub
insb
les
ret
mov
out
sbb
cmp
into
leave
and
jl
inc
jns
sbb
cmc
je
jge
ret
aas
sub
scas
js
mull
adc
scas
cmp
jp
mov
loop
in
adc
cmp
jmp
jno
subb
mov
jl
popf
sbb
pop
outsb
cld
loope
data16
cli
adc
sbb
in
loop
push
xchg
push
push
lcall
inc
pop
mov
inc
hlt
xchg
mov
sbb
push
ret
lods
sti
cli
sub
pcmpeqb
sbb
leave
cmp
outsl
mov
pop
out
fdivl
mov
fldenv
mov
cmp
dec
cld
loope
jmp
jmp
fsts
xchg
jg
scas
xor
mov
xchg
stos
idivl
pushl
loopne
mov
xchg
xor
je
negl
pop
pop
iret
js
cltd
mov
or
push
mov
stos
mov
mov
ja
jmp
sub
push
sbb
mov
push
pusha
ret
std
mov
or
pop
std
xchg
repnz
cmpsb
pop
sbb
cmpsb
in
aad
fsub
sqrtps
mov
imul
xor
je
insl
inc
or
in
outsb
lods
adc
sbb
dec
pusha
mov
add
call
test
cltd
mov
lds
cs
cmp
imul
cmp
xchg
cwtl
in
sub
mov
testl
loopne
xor
fsub
push
fisubl
cmp
push
ljmp
jo
inc
dec
adc
hlt
adc
add
daa
dec
int
pop
inc
and
fcoml
nop
pusha
sbb
decl
jp
pusha
loope
roll
pop
ds
stos
inc
and
add
pop
lcall
ret
pop
adc
push
or
pop
xor
pop
es
jge
xor
sbb
push
xor
xchg
mov
mov
or
cs
sbb
cmp
mov
inc
call
ljmp
mov
js
or
push
fwait
xchg
inc
and
mov
fwait
gs
xor
inc
aaa
lock
fs
xchg
mull
test
sbb
rcll
idivb
bound
sbb
je
jg
adc
fnstcw
imul
jmp
sbb
out
mov
and
xlat
pop
mov
je
xor
fsubrs
fstpl
push
and
ffreep
add
bswap
int3
push
dec
xchg
jecxz
mov
push
ret
push
push
dec
mov
cs
dec
pop
cld
js
xchg
stc
rorb
cmp
jno
mov
gs
sar
jo
bound
adc
idivb
cwtl
fsubrl
shll
jb,pn
imul
clc
push
jmp
xchg
mov
or
mov
into
xor
subl
test
or
roll
pop
mov
lea
out
and
adc
fnsave
cmpl
mov
ret
stos
or
scas
roll
stc
add
das
mov
aaa
lods
test
jo
jp
sub
ret
clc
add
stc
mov
adc
clc
iret
push
mov
test
test
mov
and
add
jle
mov
test
mov
add
pop
jmp
ja
sub
orl
ds
imul
sbb
mov
sbb
daa
dec
cwtl
scas
outsb
mov
xor
mov
mov
aaa
jecxz
insl
cmpsl
xor
jno
cmpsb
sbb
cmpb
sub
sub
xchg
sub
cwtl
mov
jecxz
and
sbb
push
cmp
cmp
mov
cmp
ret
je
jl
lret
out
aas
cli
or
push
mov
sarb
loope
lea
bound
les
addr16
ss
xchg
sbb
or
pop
outsb
mov
xchg
mov
add
nop
out
mov
mov
or
pop
gs
xchg
inc
push
movsl
daa
sarb
xor
mov
bound
push
jl
mov
cltd
stos
ficoml
loopne
mov
and
sbb
cmp
dec
push
bound
fs
out
sub
scas
jae
ret
stos
mov
jbe,pt
aad
cmp
and
mov
test
sbb
sub
inc
aas
mov
ljmp
repz
iret
cmp
pop
add
mov
cmp
movsb
mov
push
inc
notl
lret
cld
sub
dec
jne
dec
or
fcomps
in
aad
dec
or
adc
cmpsl
mov
lods
cmpsl
mov
stos
xor
scas
enter
sbb
movsb
inc
xor
push
dec
add
mov
inc
mov
push
iret
mov
mov
lcall
inc
jno
rolb
push
jmp
lock
push
aas
add
test
int
rcrb
mov
nop
jg
jg
dec
cmc
pop
mov
in
popf
push
je
arpl
mov
dec
add
xchg
pop
sbb
mov
cmpsb
dec
dec
rclb
mov
call
lret
fdivs
xor
sahf
inc
sbb
inc
push
or
js
push
mov
fcoms
mov
mov
and
and
xchg
mov
leave
bound
shrl
inc
jo
test
mov
inc
xchg
xor
dec
loop
xlat
ret
mov
jle
pop
out
call
repz
jbe
nop
push
leave
xchg
pop
push
call
and
mov
sbb
mov
bound
fdivs
mov
xor
movsl
lods
or
lea
ret
cmp
lods
mov
dec
add
in
push
mov
jge
sbb
call
sub
fwait
cmpsl
popf
xor
iret
mov
lret
das
mov
outsl
dec
mov
lcall
bound
lods
mov
mov
fs
sub
scas
sub
sub
dec
outsb
dec
loope
or
mov
pop
aaa
xor
inc
sub
push
je
scas
pushf
jecxz
add
fwait
xlat
fsubrp
push
mov
sub
mov
lock
jl
stos
sbb
shrb
mov
aad
mov
loopne
stos
add
std
jmp
pop
cmpb
inc
cmp
loop
ds
lds
daa
sti
loop
mov
sub
nop
enter
xor
jno
mov
aas
dec
cmp
fistpl
jnp
dec
test
ret
fcomip
adc
loopne
es
testb
repz
fistpl
das
push
inc
mov
incb
jle
jne
pop
adc
cwtl
into
push
test
ss
or
xlat
shrb
ret
aad
fidivrs
inc
mov
push
lret
cld
test
mov
dec
mul
les
lods
nop
pusha
cmp
xchg
mov
xchg
loopne
jns
dec
out
dec
sub
sarb
ds
jae
dec
cmpsb
and
xor
scas
cmpsb
fisttpll
adc
mov
xor
push
inc
mov
orl
xchg
shll
fisubrl
aas
orb
dec
add
gs
lock
mov
js
jp
dec
stos
dec
imulb
xor
jae
aas
stos
jnp
mov
jae
pushf
pop
lcall
cmpsl
push
js
mov
sbb
insb
pop
pop
sbbl
mov
nop
pop
jmp
std
mov
int3
sar
sbb
adc
daa
pop
mov
jecxz
fdivrs
add
ret
xchg
mov
test
push
fdivr
jno
ret
or
cs
mov
out
pop
cmpsl
scas
sbb
dec
push
adc
push
pop
clc
lea
jno
cmc
test
aam
mov
mov
leave
popf
xchg
stos
add
inc
cmp
dec
xor
lea
rolb
and
and
push
push
in
inc
call
add
mov
lods
sbb
dec
add
cmp
mov
faddl
cmp
jno
fistpll
scas
sub
ds
in
inc
adc
add
mov
push
and
mov
xchg
out
movsl
push
dec
mov
enter
rcr
push
mov
outsb
ljmp
or
jecxz
insb
pop
xor
inc
cmp
sub
mov
xchg
mov
in
pop
je
stc
test
adc
lock
popf
lock
xlat
stos
dec
scas
mov
mov
repz
mov
mov
into
inc
ljmp
cmp
cmp
mov
loop
sub
andb
jo
mov
loopne
stos
and
dec
sbb
cmpsb
fldt
popf
adc
cmp
mov
dec
dec
add
xor
fs
cmp
aas
or
mov
or
mov
xchg
cmp
mov
lahf
add
mov
xchg
test
adc
cmpsl
xor
aad
jo
cltd
mov
mov
xor
in
ficoml
dec
inc
pop
cmpsb
test
cmpb
pmaddwd
fnstsw
jecxz
or
mov
lock
push
mov
daa
sbb
mov
mov
pop
inc
mov
adc
cmp
mov
add
enter
in
xor
xor
ss
inc
mov
icebp
push
test
inc
ficomps
adc
enter
into
jg
xchg
pop
push
lods
fisubrl
test
shl
mov
and
notl
jecxz
scas
mov
or
xor
cmp
pop
lods
mov
scas
fisubrl
or
pushf
cmp
mov
cli
mov
hlt
cmc
aad
mov
pop
inc
adc
out
push
adc
and
push
leave
ret
fcomps
test
fcompl
jne
addr16
loopne
mov
pop
jnp
push
shrl
and
rorb
mov
or
inc
cmpsl
rol
insb
mov
int3
mov
xlat
push
jne
lret
hlt
sbb
ret
mov
jp
push
int
rclb
adc
aaa
add
adc
push
lods
enter
inc
leave
mov
inc
adc
imul
jno
pop
rolb
add
fcmovu
addl
adc
cmp
cmp
cwtl
fisubs
mov
call
push
jmp
pushf
cmp
gs
adc
outsb
call
fcmove
in
push
lock
mov
int3
add
jecxz
push
inc
cmp
inc
cmpl
adc
imul
cwtl
push
mul
ret
and
xor
outsl
imul
insb
stos
mov
sbb
and
dec
mul
lcall
nop
test
mov
inc
push
test
sbb
addl
push
mov
test
push
jle
cmpsb
sub
dec
lahf
repnz
mov
inc
cli
lcall
imul
rcrl
scas
rorb
test
push
cmp
cmp
mov
insb
cmp
cld
jb
sbb
cli
in
movsl
pop
cmpb
dec
ss
dec
std
mov
lret
repz
mov
in
test
jbe
loop
add
test
hlt
shrb
xchg
stc
ljmp
xchg
inc
jno
fists
mov
and
sbb
add
out
mov
sub
cmpsb
add
jmp
mov
xor
xchg
lods
ret
cmp
dec
push
stos
mov
int3
stc
ja
adc
dec
movsl
fwait
xchg
cld
ljmp
push
jmp
imull
iret
push
pushf
adc
inc
imul
adc
ret
push
cli
test
dec
push
push
arpl
icebp
lret
cltd
push
push
lods
fwait
or
lods
add
sub
cmp
rol
cli
xor
pusha
mov
inc
push
mov
or
dec
imul
mov
pop
hlt
cmp
nop
mov
dec
mov
xor
popa
add
xchg
iret
imul
movsb
mov
movmskps
loope
add
adc
pushf
daa
sbb
cmp
aam
repnz
int
dec
rol
cltd
sub
dec
icebp
imul
sub
aas
pop
mov
insb
jno
loopne
shrl
xor
or
dec
jecxz
insb
dec
test
call
dec
dec
lods
repnz
addr16
mov
mov
jae
mov
sub
xor
cmpsl
mov
jb
sbb
out
loopne
lods
test
jo
fs
out
adc
push
jbe
dec
std
addr16
movsb
sbb
adc
sbb
call
mov
xchg
pop
push
cltd
enter
pop
int
push
clc
pop
mov
mov
cwtl
adc
subb
stc
pushf
loopne
mov
arpl
jge
enter
mov
sub
sub
sub
xchg
daa
mov
js
bound
fwait
les
mov
mov
jnp
rcrb
movsl
xchg
jne
adc
roll
fildll
jecxz
jmp
dec
les
inc
pushf
roll
fnstcw
loopne
pop
jnp
jecxz
lcall
push
test
xor
push
sbb
aaa
mov
fildl
cmp
push
fisttpll
in
or
sub
iret
leave
mov
in
es
mov
and
xchg
sbb
imul
inc
mov
enter
scas
int
lods
and
dec
ja
fisubrl
aam
daa
xor
inc
aam
xchg
stos
dec
push
repz
gs
xlat
lea
mov
out
pop
xchg
pop
push
movups
push
rolb
sahf
cmp
xor
leave
push
mov
mov
mov
mov
jp
mov
iret
lahf
mov
mov
jge
mov
sub
and
mov
popf
fiaddl
insb
stc
ja
or
mov
or
pop
mov
sub
outsl
xor
xor
jno
push
je
jb
or
jg
xor
lahf
adc
sub
push
push
push
or
sub
lahf
adc
sub
cmp
add
xor
repnz
adc
sbb
insl
loope
es
cmp
mov
dec
cmp
call
mov
jl
out
sbb
sub
sbb
testl
mov
cli
jmp
sbb
jp
and
andb
bound
scas
lahf
insb
jl
or
push
fdivr
mov
inc
fcompl
jo
into
jbe
mov
hlt
jae
push
or
jl
xor
add
arpl
mov
imul
mov
ret
rdtsc
xor
icebp
fisttpl
ja
xchg
and
movsb
dec
jp
outsb
jb
ds
fpatan
or
dec
repnz
imul
ja
lret
push
inc
faddp
int3
fwait
lret
out
pusha
sbb
bound
mulb
push
inc
fs
sbb
inc
clc
sub
and
jmp
sub
jg
outsl
dec
aaa
daa
es
addr16
pop
mov
dec
mov
xor
mov
and
sahf
sbbl
fsubs
cltd
imul
sub
inc
or
mov
push
loop
xor
jl
dec
adcb
or
xor
insb
test
nop
jb
push
cwtl
mov
sahf
out
push
inc
jbe
xchg
sbb
mov
sbb
adc
aaa
push
outsl
clc
jle
popa
fisttps
stos
cmpsl
outsl
movsl
mov
pop
ror
fists
or
push
mov
jle
adc
pop
add
call
adc
and
in
jmp
lds
mov
or
inc
loopne
mov
in
out
les
adc
jge
add
aad
add
jle
jne
outsl
push
dec
cmpsl
addr16
jb
sbb
cmpl
mov
pop
daa
jmp
jns
fstl
sahf
dec
mov
sub
inc
jae
adc
pop
jle
jae
adc
shl
movsl
pop
pushf
mov
add
or
inc
dec
push
popa
test
in
add
xchg
movsl
fadds
pop
cmp
movsl
push
push
xchg
pop
test
movsl
ss
in
loopne
mov
repz
aad
push
jnp
cmpsb
xor
sbb
ljmp
jge
push
lcall
lea
add
pop
imul
js
push
sbb
loop
or
cmpsl
push
in
adc
cltd
cmp
fidivl
mov
fisttpll
and
insb
cmc
vmovaps
jno
outsb
sbb
and
jge
lock
jne
iret
mov
in
bnd
pusha
xor
cmp
sbb
add
lods
clc
and
hlt
mov
pop
jmp
inc
mov
ja
cmpsb
idivb
mov
adc
and
test
push
push
push
rclb
xchg
outsb
mov
mov
enter
sarb
sbb
mov
shl
cmp
loope
test
jnp
int3
push
fwait
stos
mov
push
repz
jns
cmp
aaa
int
mov
test
and
mov
xor
and
mov
scas
mov
fwait
pop
and
dec
jns
add
fadds
in
adc
mov
outsb
imul
scas
out
testl
cli
in
push
xor
dec
xchg
pop
xor
jecxz
jb
mov
rcrl
inc
test
xchg
xchg
mov
inc
imul
sbbb
cltd
xchg
jecxz
or
mov
scas
add
mov
lock
sub
xchg
in
insb
fneni(8087
lods
dec
pop
pop
mov
lock
xchg
dec
popa
cli
scas
div
xchg
xor
imul
outsl
lods
nop
shll
adc
hlt
out
test
push
cmpsl
dec
out
sahf
rorb
wrmsr
cwtl
ja
mov
fbstp
push
xor
jb
cltd
inc
es
subl
mov
xchg
mov
imul
mov
cmp
pushf
fisttpll
in
shl
mov
outsb
fiaddl
sub
and
add
adc
popf
dec
jae
aaa
rcr
lcall
insb
mov
stos
sti
out
mov
or
aas
imul
daa
push
and
fstl
repz
scas
sahf
and
adc
loope
sbb
sbb
adc
xchg
jmp
push
lret
int
pop
jne
adc
jg
stos
push
jge
push
shr
dec
pop
xchg
leave
add
push
mov
sub
pop
xlat
push
cli
jns
mov
sbb
lods
lcall
inc
mov
pop
and
jno
andl
adc
jb
mov
pop
scas
ja
sub
jecxz
shr
dec
xor
test
insb
iret
leave
push
jmp
out
gs
loop
mov
mov
div
mov
push
and
jns
dec
xor
ret
aas
loop
flds
movsl
movsl
rcl
aad
xor
and
out
pop
gs
push
pop
xchg
maxps
jns
fsubrl
fs
jne
lret
adc
insb
mov
jmp
sub
push
out
push
loopne
enter
inc
and
xor
xor
cmp
mov
and
mov
mov
pop
movsl
cmpsl
jge
cmp
loope
imul
sbb
or
sbb
and
pop
xor
or
sti
sbb
cmp
dec
xor
test
sbb
mov
mov
xchg
xor
orb
in
adc
dec
nop
fnsave
cmp
int3
stc
stos
jns
scas
mov
fsubrl
popa
push
rcl
pop
sbb
sbb
fsubrs
push
lret
push
lock
xchg
push
scas
dec
inc
int3
ljmp
pop
jmp
xchg
insl
adcb
jb
jge
cmpsb
cmp
sbb
add
jecxz
xorb
xorl
nopl
mov
dec
gs
imul
push
iret
nop
rcl
mov
cmpsb
mov
cmp
je
out
xchg
mov
mov
inc
mov
xorl
pop
mov
adc
cmpsb
inc
mov
mov
push
leave
sbb
push
push
andb
add
fwait
jbe
mov
and
cmp
jo
xor
imul
pop
mov
sbb
xchg
sahf
or
jle
cmp
or
xchg
sbb
dec
jp
int
lcall
decb
and
dec
xorb
jno
dec
push
mov
sbb
jnp
fldenv
repz
stos
test
imul
inc
mov
mov
pushf
std
mov
and
into
jle
adc
or
xchg
shlb
js
push
fnstsw
stos
add
dec
sbbl
or
xchg
aam
cltd
pop
xor
dec
ds
mov
xchg
mov
pop
mov
lcall
mov
mov
push
lea
jl
pop
cmp
int
nop
jmp
leave
aam
mov
addr16
ds
mov
rcl
pop
dec
sbb
fldt
and
fsubl
adc
iret
aaa
cmc
mov
scas
mov
pop
cmp
mov
or
ljmp
jl
pop
in
and
push
movsb
lds
movsb
pop
adcl
dec
sub
fiaddl
ficompl
bound
int
je
add
lahf
pop
adc
ficompl
sub
addl
mov
mul
mov
das
push
or
xor
bndldx
add
jo
ficoml
xchg
xchg
icebp
pop
mov
das
sub
mov
ss
pop
hlt
or
push
push
sbb
gs
add
dec
cmp
mov
in
or
push
inc
jbe
lods
push
test
cmpsb
outsl
sbb
push
stc
xchg
cs
jae
call
test
or
loopne
mov
pop
jp
fisubl
popf
in
push
adcl
sub
popf
sub
movsb
xchg
cwtl
pop
pushf
lcall
movsb
filds
dec
sub
arpl
sub
or
cmpsl
and
push
xor
cmp
inc
dec
das
jecxz
div
lret
jmp
inc
xchg
jne
sub
push
push
ret
pusha
pop
fadd
sub
jmp
or
or
push
mov
dec
fnsave
fcmovb
sub
mov
arpl
adc
jmp
push
hlt
add
clc
fiadds
jmp
sub
cmpsb
push
cmp
mov
xchg
lea
inc
movb
or
scas
sub
xchg
sbbl
sub
sub
int3
mov
insb
add
lds
push
sub
adc
gs
repz
jne
xor
mov
faddl
pop
icebp
cmpsb
xchg
decl
leave
xchg
sbb
test
subl
loope
sbb
adc
and
lcall
nop
pop
ja
in
int3
rcrl
ror
iret
dec
in
or
sbb
in
out
dec
iret
icebp
pop
jecxz
inc
mov
lock
sub
mov
ljmp
jge
ljmp
mov
inc
jno
push
mov
mov
mov
push
mov
mov
and
daa
vmovaps
cmpl
mov
leave
call
pop
pushl
pushf
xor
leave
sbb
pop
arpl
xchg
xchg
xlat
dec
mov
ljmp
xchg
rcrl
jge
lods
aas
nop
pop
mov
cmp
pop
pop
cmp
lret
out
or
arpl
aas
psrld
or
or
mov
pop
push
mov
aad
sub
push
jl
dec
lods
jecxz
sub
xchg
pop
jb
and
adc
or
inc
pushf
mov
push
js
pop
lock
adc
adc
inc
sbb
push
loopne
xchg
xchg
dec
sar
aaa
stos
push
pop
loopne
mov
imul
js
cmp
mov
shrl
mov
mov
ljmp
dec
inc
pop
jge
mov
test
xchg
ficomps
inc
enter
mov
cmp
lret
jp
dec
jl
push
scas
mov
xchg
pop
jle
sahf
loope
clc
fnstcw
lret
mov
and
mov
imul
sbb
mov
leave
add
pop
lods
cmp
inc
and
je
pushf
fwait
dec
dec
call
movsb
push
data16
mov
adc
jecxz
adcl
jp
push
xchg
leave
jle
dec
fwait
xor
jnp
rcrb
inc
pop
into
fs
push
loop
or
add
add
and
sti
mov
and
loopne
mov
push
hlt
inc
add
jecxz
jno
push
add
sub
clc
nop
mov
sbb
cmp
push
adc
cli
sub
pop
sbb
push
dec
sbb
pop
sbb
inc
test
jmp
mov
js
push
jno
lods
insb
out
lds
imull
xor
mov
or
std
mov
das
jecxz
loop
clc
out
xchg
fs
push
cmp
adc
aaa
outsb
lret
mov
je
or
mov
jg
rcl
push
insb
clc
pop
int3
xchg
sbb
rcl
mov
push
jg
push
pop
cwtl
sub
int
xor
data16
aam
mov
imul
xor
sbb
jnp
dec
rclb
mov
push
push
sub
adc
mov
movsb
scas
mov
movsb
andl
repnz
jg
push
push
pop
cltd
pop
sbb
dec
mov
mov
pop
xor
imul
adc
imul
dec
into
cmpsl
mov
orb
xor
jns
jp
outsl
sahf
mov
lea
shll
mov
or
ret
call
jecxz
and
rsm
dec
inc
dec
ficoml
dec
rcll
dec
mov
xor
sub
test
loope
xchg
inc
in
adc
nop
push
in
shl
outsb
call
sti
psubusb
adc
shlb
xor
test
mov
and
mov
ficoms
out
orb
dec
es
mov
fmul
cwtl
stc
cwtl
or
pop
movsb
scas
ds
arpl
loope
inc
cmp
rclb
pushf
cs
test
xor
mov
push
sbb
inc
imul
mov
bound
fistps
es
mov
ss
and
cmpl
mov
enter
int3
mov
aas
lcall
ja
dec
data16
add
add
fldenv
ja
int
and
mov
push
int3
jae
mov
sahf
add
xor
push
out
xor
shl
xor
and
iret
xchg
or
out
mov
out
loope
mov
js
sbb
cld
sub
fwait
dec
incl
ret
add
xchg
cvtps2pd
shrb
push
je
nop
inc
or
mov
inc
sub
xor
sbb
mov
fnstenv
xchg
dec
nop
andb
pop
xchg
mov
ret
push
pop
inc
jg
xor
dec
int3
dec
std
lea
testb
in
fst
mov
je
scas
enter
imul
in
dec
xor
leave
dec
pop
dec
inc
icebp
test
sahf
mov
idivl
jns
out
mov
xchg
or
andl
movsb
pushf
mov
adc
pop
int3
in
lods
sub
ja
lcall
divl
mov
scas
sbb
lods
jmp
into
xor
and
mov
lds
inc
inc
in
add
mov
stos
dec
jmp
lahf
aad
push
pop
xchg
and
daa
adc
lods
sahf
sbb
sub
notl
int3
add
xchg
out
mov
push
cmpsb
and
fcmove
pusha
inc
pop
xor
and
scas
outsb
into
add
movsl
jmp
dec
xor
mov
xor
adc
sbb
sub
mov
mov
inc
cld
jp
sbb
or
or
lds
push
mov
iret
inc
outsl
inc
ja
and
loopne
jae
or
mov
xlat
call
cli
cmp
ss
in
xchg
pop
jge
push
xor
aas
inc
rorl
rcrb
jmp
stos
test
mov
shlb
decl
jp
ljmp
loop
jecxz
dec
das
push
inc
adc
mov
add
or
cmp
mull
test
lds
adc
mov
dec
lahf
pop
dec
std
inc
sub
orl
pop
inc
in
mov
mov
imul
nop
sub
sbb
dec
add
mov
cs
test
mulb
pop
inc
pop
cmp
pop
xor
dec
mov
jno
popf
cli
adc
mov
and
shrl
push
or
aas
test
xlat
loop
lds
loopne
dec
mov
andb
dec
je
scas
out
test
add
mov
mov
fbstp
mov
clc
fisubl
jns
idiv
or
add
adc
dec
xorb
and
add
xor
imul
inc
dec
ds
or
pop
cmp
pop
mov
loopne
mov
insb
inc
lds
loope
adcb
push
or
sub
out
push
xchg
lahf
sbb
or
lahf
mov
or
movsb
pop
dec
cld
mov
mov
push
mov
dec
cld
das
dec
out
pop
sub
dec
mov
insl
push
sub
ljmp
ja
nop
push
add
add
call
imul
xor
icebp
imul
popf
push
mov
loope
fsubl
cmp
les
inc
notb
int3
jp
pusha
lock
gs
rcrb
stos
daa
sbb
adc
dec
mov
push
jb
loop
mov
popf
mov
sub
icebp
movl
and
sarl
into
shl
dec
pop
add
or
xor
sub
idiv
mov
aam
in
lods
mov
and
mov
push
lcall
push
cmp
sub
testb
and
ds
ljmp
sub
sahf
movsb
aam
xor
add
or
fnsave
jb
call
out
mov
cmp
popa
insl
xorb
cld
jbe
arpl
enter
das
imul
loopne
push
mov
push
fistpll
jno
pop
popa
fmul
sahf
xchg
int3
mov
adc
xchg
lahf
pop
xor
sbb
cwtl
push
mov
das
mov
movl
or
mov
xlat
jae
pop
andb
scas
push
fsubr
loopne
jne
nop
push
cs
imul
inc
nop
xor
jp
incb
test
push
lds
mov
inc
test
roll
adc
cmp
in
inc
or
iret
pop
dec
leave
test
sbb
inc
aad
stos
into
shr
sbb
or
test
movsl
test
inc
inc
fdivrp
or
ja
pop
fwait
sub
mov
jbe
or
fdivl
push
dec
sbb
jmp
sbb
mov
loopne
dec
push
mov
mov
stos
push
cmc
push
mov
jns
insl
shrb
add
in
lods
out
adcb
leave
mov
dec
mov
mov
mov
jl
dec
jno
pop
outsl
jns
cltd
pop
div
jecxz
dec
dec
insl
jl
inc
movsl
sbb
ja
sub
jmp
sub
dec
dec
jle
jbe
xchg
jmp
inc
and
fcmove
xor
jge
pop
test
jnp
mov
or
shll
cmp
xchg
or
scas
daa
js
xchg
popf
push
lahf
outsl
imul
xchg
movl
mov
in
adc
cltd
repz
mov
add
sbb
sub
mov
je
int3
rcrb
fwait
cs
sbb
stos
mov
pop
mov
mov
hlt
and
xchg
xchg
lahf
gs
out
or
or
pushf
aas
xchg
stos
pop
xchg
xchg
xchg
stos
mov
pop
inc
xchg
mov
iret
adc
popa
fstpt
sti
scas
ljmp
out
jmp
xor
jg
loopne
xlat
cmovg
rcr
scas
sarl
xchg
jl
rcrb
xchg
insb
repz
mov
pop
mov
dec
dec
xor
mov
insl
lods
ficomps
out
cmp
mov
fwait
jo
xchg
sarl
jge
xor
xor
jge
mov
dec
out
movsb
rcl
cmpl
cmc
cmpsl
aam
rcr
pusha
das
lock
xchg
sti
xchg
enter
std
push
call
cmp
sti
sub
lret
outsb
call
int3
push
adc
fisttps
sti
pop
sbb
inc
notl
fdivrs
lret
movsb
mov
int
mov
sbb
addr16
adc
into
in
out
sti
daa
sub
mov
mov
daa
fwait
mov
ret
sub
xchg
insb
xchg
fdivs
or
mov
xchg
or
fwait
add
insl
fimull
mov
fnstsw
in
jns
nop
pop
mov
sbb
adc
out
add
adcl
ja
stos
jmp
and
fildll
sub
cld
scas
adc
mov
pop
repz
adc
xchg
js
push
xchg
test
lock
mov
lea
nop
movsl
lock
imul
jge
das
in
pusha
sbb
mov
and
popl
test
mov
jl
mov
jbe
and
fmull
mov
push
call
or
test
xchg
aam
or
cmc
rcrl
sub
jge
icebp
fst
or
xchg
mov
outsl
outsb
inc
inc
call
jb
mov
cli
dec
mov
jnp
insl
push
adc
nop
out
push
andl
and
prefetcht2
pop
fs
sub
or
mov
mov
insb
mov
cmpsl
repz
xor
addl
adc
loop
push
xor
add
sbb
dec
mov
ret
adc
sar
arpl
dec
xor
or
mov
div
and
je
xor
mov
cltd
add
cmp
push
add
pop
cmp
or
sbb
enter
mov
dec
mov
lcall
adc
mov
leave
ret
dec
jbe
jne
aad
flds
fsubs
fcmovne
push
sbb
sbb
pusha
sub
xor
out
sub
cmp
test
mov
add
lcall
leave
cmp
test
adc
and
adc
jle
loop
nop
loope
pop
outsb
or
xorl
test
push
add
das
sub
mov
or
mov
cmp
in
push
add
dec
adc
xchg
push
lods
cld
pop
test
and
mov
mov
mov
loope
and
sbb
data16
mov
aas
lret
adc
dec
lea
xchg
outsb
mov
cmp
shlb
imul
cld
call
sti
sub
arpl
stos
lret
xor
xor
inc
dec
push
dec
dec
inc
mov
enter
pop
cwtl
sbb
out
jno
and
cmpsb
mov
dec
cmpb
jl
fwait
repz
add
shlb
loope
shll
sbb
into
and
mov
cli
xchg
mov
push
mov
and
lcall
loop
lcall
ret
pop
push
test
jp
mov
mov
sti
mov
push
cld
movsb
cld
jmp
add
fadds
mov
mov
pop
insl
dec
and
mov
imul
mov
mov
push
out
dec
jne
in
or
scas
std
bound
and
cld
inc
lods
cmp
or
jge
xchg
aas
jle
mov
ret
mov
cmpb
adc
pop
dec
jo
fdivrs
js
scas
inc
mov
lods
jae
mov
jmp
mov
into
xchg
lea
sbb
jecxz
jge
mov
push
pop
daa
adc
pop
lods
jnp
inc
pusha
lret
incb
imul
or
sbb
cmp
jecxz
repz
repz
dec
pushf
push
daa
mov
cwtl
jae
cmc
mov
insb
jle
es
sbb
mov
dec
je
inc
insl
icebp
pop
inc
out
cmp
add
daa
xchg
ret
lock
enter
clc
push
pop
divb
add
test
inc
shll
push
sbb
popf
cmp
pop
nop
or
push
cmp
popa
sbb
adc
lods
lds
inc
int3
sbb
stc
and
les
adc
addr16
mov
mov
dec
sub
pop
repnz
stos
xlat
ret
inc
lret
subl
pop
sbb
xor
adc
int3
mov
fidivs
jnp
mov
jle
or
or
rorl
gs
shrb
jmp
xor
push
ds
aaa
mov
cmp
xchg
lods
mov
mov
xchg
adc
add
cmp
xchg
xor
and
popa
lcall
iret
ds
push
data16
mov
test
enter
dec
add
jbe
pop
or
mov
xchg
push
jmp
mov
mov
fsubrl
inc
mov
insb
mov
xor
inc
cwtl
and
and
adc
outsb
flds
pusha
loope
mov
cmpsl
add
push
mov
iret
pop
jae
xor
das
push
or
inc
mov
out
xchg
and
fdivrs
in
adc
out
icebp
stos
pop
jo
xor
sti
fwait
pop
mov
xchg
ret
pusha
mov
icebp
dec
ss
push
push
inc
loopne
sub
js
mov
aas
call
mov
mov
stc
push
aas
and
bnd
mov
pop
dec
pop
push
pop
mov
push
mov
xor
mov
adc
dec
pop
xchg
xchg
push
mov
mov
and
test
ret
hlt
scas
mov
jl
stc
push
ret
dec
xor
rorl
aaa
inc
lock
scas
jno
test
or
cmpsb
mov
xchg
or
add
adc
push
cmc
mov
jo
or
jb
xchg
push
movsb
test
pop
mov
sbb
jbe
fsubrs
adc
mov
fwait
xor
cmp
ret
lcall
cmp
pop
rcrl
sbb
dec
xor
xchg
pop
sub
sbb
loop
test
add
es
xor
pop
and
sub
ja
test
ss
insb
pop
jbe
ljmp
movb
inc
popf
mov
cwtl
dec
ljmp
test
mull
imul
mov
sbb
cwtl
cltd
clc
sbb
inc
push
popa
fadd
aam
and
out
incb
mov
jno
shl
jnp
bound
cmp
pop
inc
sbb
out
ret
sbb
aad
pop
je
mov
arpl
sub
std
out
cmp
mov
neg
scas
pop
cmp
adc
and
rcpps
lcall
mov
sbb
mov
cmp
jnp
mov
push
push
dec
into
push
iret
arpl
cli
inc
hlt
pop
mov
xlat
pop
dec
push
mov
imul
imulb
inc
mov
fdivrs
cmp
test
xchg
insb
lcall
mov
mov
out
add
xchg
jmp
inc
iret
dec
adc
hlt
iret
inc
scas
adc
and
repnz
push
cld
in
loop
adc
mov
jbe
loope
lea
pusha
or
xorb
sub
sub
push
popf
imul
adc
outsb
fwait
jp
fdivrl
fcmovb
lea
cmp
cmp
mov
add
stos
xor
mov
jle
es
dec
call
lcall
cmp
push
loop
sub
cmc
dec
mov
call
adc
data16
decb
sbb
xor
enter
call
enter
hlt
orb
sahf
xchg
inc
adc
dec
lret
scas
mov
repnz
push
mov
int3
addr16
jmp
cmp
adc
push
and
sbb
xchg
in
mov
mov
outsb
or
add
dec
pextrw
cmp
push
bound
add
sub
push
ss
sbb
mov
xor
sti
jae
mov
and
cmp
loopne
cmp
push
insb
mov
push
add
lds
sub
bnd
and
mov
adc
lcall
sub
push
jecxz
insb
mov
mov
sahf
jo
sbb
xchg
stos
cmc
dec
mov
jnp
sub
sbb
and
pop
std
mov
test
sbb
mov
jmp
mov
cmp
shl
mov
jnp
xor
movsb
inc
dec
shrl
outsb
cmc
aad
jb
jecxz
add
sub
dec
outsl
jmp
ret
sbb
int3
aad
add
gs
mov
shl
mov
lods
cli
out
in
ret
sub
lret
rcl
mov
cmpsl
xchg
loop
rcll
xor
mov
adc
or
jbe,pt
mov
movsl
dec
xchg
fists
pop
out
xor
push
subb
inc
nop
or
pop
mov
push
pop
daa
pop
out
jb
sbb
repz
mov
mov
icebp
enter
neg
imul
repnz
push
shrl
inc
fstp
inc
repnz
into
xchg
pop
flds
adc
fwait
mov
pushf
sub
and
xchg
mov
inc
js
mov
lock
cmp
lods
mov
ja
inc
inc
cmp
in
iret
and
movsb
dec
xchg
push
jns
jle
test
sub
jo
mov
les
pop
cmpsl
loopne
xchg
lahf
sbb
jbe
jbe
nop
rcl
popf
pop
add
das
push
je
mov
push
push
insl
push
pushf
dec
jmp
fwait
loopne
mov
repz
ret
pop
and
dec
ljmp
mov
or
sbbb
hlt
cmp
notrack
xchg
outsl
pushf
mov
fldl
pop
imul
pop
add
mov
out
mov
push
fwait
int
js
repz
cmp
jnp
pop
inc
cld
jp
aam
dec
imul
sub
inc
les
dec
mov
or
mov
mov
divl
pop
jno
cmp
shlb
push
mov
outsl
and
sub
xor
out
sub
clc
mov
test
push
sbb
cs
fstpt
push
xchg
lds
inc
pop
jo
lahf
mov
adc
jp
scas
mov
sub
dec
cmpsl
xchg
sti
mov
add
mov
pop
ret
lret
pusha
push
adc
adc
xchg
je
push
sub
adc
push
iret
out
jecxz
sub
dec
in
shll
adc
mov
and
jg
cmpb
mov
push
or
sub
pop
lds
movsb
subb
mov
outsb
ja
out
push
pusha
pop
leave
movsb
pop
xor
sbb
cmp
add
pop
sbb
mov
aam
out
fldl
arpl
inc
in
loop
xchg
pop
push
ret
jnp,pt
jmp
cmp
add
jle
cmp
inc
mov
pop
jb
mov
jne
int3
test
lods
subl
add
loopne
addr16
pop
daa
rcr
cmp
fs
jl
or
dec
add
aad
or
ljmp
mov
ss
je
xchg
iret
aas
fadd
mov
xorl
ret
mov
popa
and
outsb
push
jl
push
mov
xlat
es
adc
push
ds
scas
sbb
into
xlat
and
lods
daa
jge
icebp
push
jno
aam
roll
sti
aas
orl
popf
jecxz
lret
mov
xchg
and
xor
rol
enter
push
sbb
nop
popf
mov
dec
adc
popf
xchg
outsl
sub
std
mov
jmp
aam
xchg
popa
popf
ljmp
sbbb
dec
push
or
ret
xor
enter
or
sbbl
sbb
addb
movsb
sbb
sub
movsb
mov
push
sar
loop
and
lret
bound
call
cmc
ficompl
clc
pop
cmp
and
dec
in
jg
sub
add
lahf
test
imul
push
or
lret
dec
xchg
lock
arpl
imul
std
push
ss
inc
xor
outsb
add
sbb
cld
sub
xchg
test
shlb
out
data16
dec
mov
push
mov
xor
scas
xchg
and
pop
mov
outsl
add
movsl
xor
sub
scas
mov
rclb
test
or
andl
push
sub
sub
fbstp
pop
in
pop
mov
jge
cld
aad
cmp
jnp
push
mov
loope
xlat
push
jno
push
mov
outsl
mov
push
sti
mul
enter
xor
pushf
aaa
shrl
inc
adcl
cld
adc
inc
ds
push
orb
dec
jne
cld
push
inc
mov
fwait
add
insl
mov
inc
lds
sbb
fwait
roll
mov
sub
outsl
jg
lods
sbb
jge
in
icebp
insl
lods
inc
ret
popf
loopne
sub
ljmp
mov
jbe
pop
subl
sbb
mov
pop
cmp
lahf
dec
mov
movsl
movsl
inc
pusha
in
sub
mov
outsb
push
pop
outsl
mov
cmp
pop
insb
jbe
xor
aaa
adc
int
cmpsb
arpl
mov
pop
fucom
cmp
xchg
popa
nop
int3
dec
hlt
xor
and
xchg
push
jno
rcll
pop
outsl
leave
out
pop
sbb
sti
sahf
std
idiv
aaa
out
filds
cmc
in
pop
or
push
rcr
and
mov
fwait
sbb
sahf
jbe
movsb
push
inc
out
arpl
outsl
mov
imul
inc
movsl
sub
xchg
push
aad
stc
pop
and
dec
adc
je
pushf
pop
push
mov
xchg
jecxz
stos
sbb
xlat
xor
cs
mov
rcr
add
inc
pop
add
or
mov
xor
stos
out
pop
je
inc
jnp
or
repnz
fists
mov
in
movsl
sbb
jp
pop
push
push
mull
sbb
repz
or
loop
cltd
xchg
pusha
mov
pop
mov
loope
imul
inc
vpcmpeqd
xchg
std
fs
mov
ljmp
ret
imul
loopne
jns
pusha
lods
cltd
and
pop
mov
fisubrs
icebp
fisttpll
test
jbe
mov
arpl
push
pop
aas
shrb
dec
into
stc
pop
jns
mov
imul
test
adc
ds
xlat
push
loope
xor
mov
xchg
jl
das
pop
or
sub
sti
xor
jns
push
sbb
jecxz
rcrl
fldt
loopne
xchg
ds
mov
adc
fucomip
cmpsl
lea
mov
jmp
mov
or
int
xor
imul
call
inc
call
sahf
jg
pcmpeqb
and
frstor
pop
fildl
xchg
ds
lea
sbb
test
sbb
sbb
stos
mov
in
add
addr16
test
pop
aam
gs
insb
mov
popa
ret
add
mov
lods
scas
adc
inc
mov
daa
sub
test
cmc
fcoml
test
xor
cmp
inc
mov
push
sbb
sub
sbb
xlat
xchg
add
jb
xor
adc
pop
outsb
jnp
sbb
fistpll
lock
out
pop
push
xchg
add
jg
sbb
dec
cmp
jns
rclb
xchg
and
fcompl
or
loopne
mov
jnp
dec
lret
pop
jbe
cmp
mov
mov
jne
fnstcw
stos
xor
jns
pop
out
cmc
ds
sbb
push
dec
scas
sbb
lretw
xor
fs
push
lret
iret
mov
lods
test
mov
inc
das
bound
mov
les
mov
cli
shll
addl
inc
outsl
mov
bound
dec
test
push
pop
loop
mov
dec
stc
jae
and
jle
push
inc
mov
mov
pop
in
cmpsl
gs
adc
dec
push
push
jl
lret
je
aas
cld
xchg
jp
xchg
pop
fmull
push
pop
add
cmp
jecxz
cmp
cld
test
sbb
insb
push
xchg
mov
mov
repnz
xchg
imul
notl
in
je
mov
xor
and
cli
stc
sub
pop
pop
flds
or
cli
cmpsb
push
sbb
stos
lret
loope
aas
and
mov
loope
mov
mov
icebp
scas
ror
lcall
lcall
jg
add
inc
cmp
push
xor
cmpb
ret
in
dec
stos
out
sahf
push
int3
xor
xchg
jecxz
cmpsb
jno
sub
mov
sub
ret
inc
push
in
xor
mov
lcall
add
aaa
data16
add
cmc
xchg
push
rcrb
cltd
add
movl
cmc
hlt
shll
cltd
in
jo
hlt
adc
bound
shlb
js
pop
dec
fwait
ss
fucomp
das
cli
inc
pusha
or
mov
jl
xorl
push
pop
sub
out
js
sbb
cld
lods
ja
daa
xlat
add
rcll
dec
fcmovnu
add
dec
push
add
fisttpll
xor
mov
cmc
inc
out
adc
sti
fimull
test
rcll
pop
movsl
fadds
sub
nop
daa
loopne
dec
call
mov
jne
cmp
mov
call
pop
xchg
jbe
stos
xchg
dec
add
sti
adc
sub
imul
shrd
and
stc
and
repz
inc
cmpsb
mov
xchg
sbb
mov
cmp
int
mov
push
test
out
nop
cmp
inc
jmp
pop
and
dec
enter
imul
jl
or
xor
fidivs
or
int3
outsl
movsb
repz
inc
cmp
and
push
das
daa
adc
mov
ds
adc
add
pop
inc
jne
push
andl
fisubl
mov
pop
out
adc
push
lock
mov
mov
adc
jb
lcall
in
jne
pop
outsb
pop
jns
jne
dec
adc
mov
jmp
add
divl
pop
mov
fsubs
sbb
js
std
dec
incl
jl
out
shll
adc
dec
dec
jmp
jno
and
mov
out
fcoms
jle
loope
mov
push
int
dec
pop
mov
adc
jno
pushl
add
fidivrl
pop
stc
out
push
stc
push
outsb
jb
xchg
mov
jno
fwait
insl
dec
jp
pop
jne
xchg
daa
or
je
addb
adc
pop
xchg
jno
push
fdivr
sqrtps
repnz
inc
cli
inc
cmp
jo
in
adc
pop
cs
inc
loope
push
mov
fldt
push
repz
xchg
push
or
bound
xchg
aad
mov
fucomi
jge
shlb
xchg
lret
fistpl
incl
or
adc
data16
dec
les
cmp
sbb
push
test
jns
push
sbb
pushf
cli
std
idivl
mov
add
jno
in
jl
aad
sbb
les
fs
pop
cmp
nop
add
fwait
mov
mov
mov
test
inc
sbb
jnp
ret
outsb
call
push
js
or
divb
out
test
mov
or
or
loopne
das
jmp
push
mov
or
out
dec
mov
sar
xor
mov
push
lcall
add
inc
add
dec
test
or
adc
sar
push
lret
imul
enter
test
pop
add
cmp
push
or
arpl
je
xchg
mov
out
sub
push
insl
ja
xchg
or
jg
cmp
fimuls
sub
mov
mov
push
mov
in
test
mov
leave
cld
or
or
sub
sbb
cmc
cmpsb
ficoml
cmp
arpl
imull
push
cmp
hlt
daa
dec
xor
mov
xor
andb
add
dec
xor
inc
xchg
dec
lock
push
xor
cltd
test
imul
jmp
mov
dec
out
mov
cwtl
fists
pop
insb
mov
scas
ja
sti
jo
mov
mov
ja
mov
jo
test
shl
gs
add
xchg
inc
mov
mov
pop
jg
and
adc
or
fisubrs
adc
mov
ret
mov
scas
or
dec
adc
insb
lods
pop
xchg
aad
add
pop
lret
add
jmp
sbb
and
jae
or
sbb
outsl
push
fmull
into
testb
lea
pop
mov
or
inc
cmc
pop
mov
pusha
push
iret
xor
repz
je
adc
pop
mov
push
daa
fs
cmc
push
and
pop
fdivrl
and
push
fdivrs
adc
dec
das
mov
iret
sbb
movsb
mov
xor
mov
mov
sbb
arpl
mov
ljmp
sub
in
insb
test
daa
inc
das
in
mov
add
add
add
bswap
std
out
bound
adc
pop
fs
mov
xlat
int3
xlat
adc
movsl
inc
sbb
mov
icebp
mov
xor
push
outsb
jnp
shrb
pop
outsl
test
test
loop
pop
scas
insl
mov
mov
loopne
loop
fimuls
lea
bound
lea
pop
rorl
aam
sti
ss
jno
jns
xchg
cmp
in
or
call
test
xlat
stc
clc
dec
bound
dec
jae
push
inc
mov
rorb
xchg
push
jle
pop
lret
xchg
loop
mov
addr16
pop
push
and
pushf
fsts
pushf
mov
jl
mov
insb
stos
push
xchg
outsb
test
lcall
fwait
push
hlt
pusha
add
add
mov
jne
dec
faddp
imulb
push
repz
test
or
inc
in
orb
or
loope
je
cld
stc
lea
out
mov
fs
mov
pop
popa
push
mov
cmpsl
jmp
aas
or
popa
enter
out
xor
ljmp
or
cltd
xor
rcr
movl
stos
or
mulb
arpl
es
add
sbb
add
fiadds
jp
mov
jae
inc
or
cmpl
sbb
ret
add
sbb
scas
dec
push
sbb
adcl
out
stos
lret
sub
add
in
icebp
dec
fimull
inc
cwtl
sbb
mov
pop
lods
fidivs
scas
inc
sub
xchg
mov
arpl
xor
rcrl
mov
cld
xchg
cmpsl
xchg
add
sti
fldenv
mov
into
int
rorl
sarb
sbb
push
fnstenv
sbb
mov
dec
dec
sub
cmp
sahf
clc
sbb
jns
jb
inc
add
repz
mov
cs
arpl
lock
ljmp
sbb
push
dec
push
cwtl
lods
cmp
and
xor
add
adcl
cmp
lret
adcb
mov
push
dec
mov
cmpsb
out
adc
pop
sbb
repnz
jns
lahf
andnps
nop
mov
pop
loop
loope
sub
mov
mov
movsl
xor
and
push
and
push
or
ret
mov
xorl
out
mov
sbb
adc
test
or
pop
and
popa
and
sbb
mov
sbb
mov
lea
push
or
add
mov
dec
or
fsubs
lahf
jle
lods
mov
sbb
mov
mov
jmp
and
push
or
cmp
and
ds
dec
mov
je
pop
xor
test
mov
or
stos
loop
inc
movsl
add
inc
cmc
xlat
jg
mov
outsl
xchg
pusha
mov
mov
icebp
pop
movsb
sub
xchg
es
movsb
nop
push
push
mov
pop
and
mov
and
movsb
out
sbb
mov
rcrb
add
rorb
pop
inc
ficoms
lock
push
mov
jl
insl
lods
hlt
cmp
dec
xchg
ret
lcall
movsb
sbbl
fadds
pop
and
jnp
shll
sti
and
cmpsb
outsb
sahf
pop
das
scas
push
jbe
push
daa
ja
mov
mov
data16
pop
in
add
inc
in
jmp
in
cltd
rorb
cmp
pop
mov
push
insl
push
mov
mov
lcall
ljmp
pushf
dec
cmp
jg
mov
shr
or
xchg
xor
adc
pop
sbb
mov
inc
sub
inc
and
out
scas
dec
daa
mov
movsb
push
mov
insl
orb
ja
movsb
fwait
imul
mov
mov
cmpsb
xchg
adcl
push
add
xor
notl
mov
xchg
mov
inc
pop
or
jns
mov
popf
arpl
popf
cmp
xor
out
inc
or
cli
mov
in
andb
in
mov
lret
inc
cltd
mov
cmp
jo
sub
fsts
icebp
ss
les
mov
xchg
int
leave
pop
adc
add
cs
in
ds
and
mov
mov
cmp
sub
popa
pop
push
adc
imull
fwait
lahf
cmpsl
jo
jo
cld
test
cmp
jno
pop
xchg
insl
mov
cmp
and
inc
pop
dec
ss
pop
sbb
push
mov
imulb
cs
mov
cmp
mov
test
sbb
shlb
daa
inc
or
xor
ret
xchg
xchg
sub
dec
iret
mov
mov
or
xlat
test
mov
loope
stos
adc
pop
sbb
cwtl
scas
outsb
dec
cld
lret
fwait
loop
bound
cmp
div
pop
test
pop
mov
fdivrp
mov
push
mov
inc
add
rcll
sub
push
mov
es
inc
sub
mov
adc
sbb
cwtl
sbb
add
shll
cmc
arpl
jecxz
jne
repz
jecxz
or
mov
dec
out
outsl
icebp
dec
xlat
addr16
jl
arpl
jne
shll
adc
sbb
mov
and
and
scas
or
jecxz
mov
push
in
mov
std
mov
jge
js
shrl
sub
fiadds
xor
push
push
cmp
jno
cmpsl
lock
or
arpl
cmp
call
pop
test
xchg
negl
mov
daa
xchg
popf
negl
int
loop
arpl
xlat
popf
mov
movsl
lahf
cmpsl
sbb
mov
testl
iret
stc
pop
aad
test
test
xor
int3
loopne
mov
push
stos
jmp
xor
xchg
xchg
push
inc
mov
add
fnstsw
sahf
mov
jnp
loopne
rorb
bound
lret
sub
ljmp
push
nop
pop
ret
push
fldcw
andb
push
in
pop
cmc
sbb
jle
inc
sub
push
stos
or
gs
sbb
mov
ljmp
pop
push
std
xchg
xchg
add
push
mov
pop
icebp
jl
insl
data16
js
push
add
mov
pop
adc
inc
inc
push
mov
adc
dec
imul
xchg
rolb
mov
jbe
mov
cmp
and
jo
es
mov
lods
sbb
push
test
popa
mov
insl
fdivrs
fxch
sbb
je
jle
or
les
or
cmp
inc
gs
test
pusha
fisttpll
xchg
shll
sub
jecxz
fisubrs
inc
rcl
int3
test
fistps
andl
add
and
jno
rcrl
cmpb
cmp
xor
std
mov
jb
ss
or
mov
adc
fwait
int
repnz
daa
jle
cmp
and
inc
adc
push
cmp
call
mov
cmpsl
mov
cmpsl
jnp
xor
sub
inc
mov
les
mov
mov
jge
dec
stos
mov
imul
mov
dec
and
mov
cltd
mov
xchg
leave
pop
in
cmp
sahf
lods
dec
inc
inc
outsl
mov
or
insb
ja
adc
int3
lods
out
sub
push
pop
cmp
xchg
lds
mov
sub
iret
lock
ljmp
mov
mov
mov
ja
mov
jg
sbb
lret
jbe
scas
xchg
imul
jl
mov
lahf
cmp
jne
pop
mov
cmp
or
in
addr16
pop
and
push
dec
inc
mov
pushf
and
out
dec
aad
or
in
xor
jbe
xor
stos
and
clc
xor
jle
lds
movsl
xchg
add
cmp
cwtl
aam
jle
dec
jo
hlt
add
loope
pop
lds
xchg
sbb
jae
lret
sahf
das
mov
inc
mov
sbb
mov
mov
movsb
test
adc
dec
repz
cli
imul
push
gs
out
test
pop
xor
dec
cmp
jne
dec
enter
inc
les
inc
test
push
jmp
stc
sub
loopne
inc
sub
jnp
jmp
sub
cmpl
pop
jge
xchg
sbb
cmp
mov
jb
or
sbb
mov
push
inc
std
cmpl
mov
mov
les
mov
xor
push
xlat
or
fld
cmc
mov
icebp
rorb
insb
lret
test
jmp
test
jno
push
test
inc
mov
and
adc
sbb
stos
rorl
lcall
gs
xchg
or
push
sbb
out
and
lret
push
fidivl
jnp
movsb
ds
in
addr16
push
xor
in
mov
pusha
out
xchg
bound
outsl
add
dec
dec
ret
sahf
inc
push
jmp
lock
enter
sbb
sbb
sbb
mov
xor
outsl
push
push
shrb
les
fisubrs
int3
mov
arpl
clc
fsubrl
ret
pop
outsb
test
xchg
add
jns
adc
int3
add
sarb
mov
movsl
movsl
fldt
movsl
sbb
shl
mov
add
inc
fimuls
pop
and
sub
sahf
mov
mov
mov
inc
inc
mov
movsl
nop
mov
scas
inc
cwtl
out
cs
imul
xchg
jl
insl
adc
mov
jns
les
pop
jno
push
jns
mov
int
cmc
push
das
dec
push
xor
push
in
dec
std
push
sub
fwait
pop
xlat
xchg
mov
fisttps
shll
out
in
popa
dec
in
sub
test
les
push
out
fiadds
rcrb
xor
and
ljmp
stos
mov
xchg
out
sbb
sahf
cmp
push
popf
scas
shlb
lock
out
sbb
mov
inc
js
xchg
jb
xorl
jnp
jmp
fdiv
add
shll
jmp
nop
sbb
adc
fdivs
jg
outsb
mov
std
jae
cmpsl
sbbb
aaa
out
into
rclb
out
fs
outsl
and
test
lcall
aad
add
fprem
push
push
test
and
mov
sbb
icebp
popf
add
jecxz
xlat
add
mov
pop
lods
loopne
cmp
mov
rcrl
ljmp
xorl
sub
push
mov
add
aam
cli
aam
add
and
inc
sub
mov
dec
jbe
mov
cs
jne
lods
lods
outsb
mov
pop
sub
popf
popa
push
adc
sub
shrb
inc
jne
fcomps
clc
push
iret
xchg
mov
lods
pop
add
jns
rorl
and
push
das
aam
adc
psllq
pop
inc
sub
jmp
add
xchg
mov
cmp
adcl
pop
push
shr
into
inc
xor
or
mov
xor
jp
adcl
push
popf
sbb
loopne
das
mov
mov
push
and
mov
rcll
daa
cltd
dec
pop
inc
xchg
mov
xor
push
push
test
mov
pusha
dec
lret
sub
shll
insl
adcb
fwait
adc
xor
mov
pop
cwtl
clts
data16
sti
lods
push
jge
add
out
js
dec
jb
mov
outsb
fiadds
into
and
je
xchg
lds
mov
sbb
cmc
push
mov
rcrl
push
mov
orb
dec
nop
inc
xlat
jecxz
add
std
in
ret
loope
outsb
notl
jg
mov
jecxz
and
stos
sub
add
add
lcall
nop
lock
xchg
adc
jle
adc
jle
push
jnp
mov
or
hlt
insb
out
and
mov
out
out
inc
stos
xor
xchg
mov
add
pop
pop
mov
push
cmpsl
js
pusha
sbb
into
dec
cmp
adc
sub
add
pop
lahf
sahf
cmp
fs
mov
lods
ss
test
sub
xchg
movsb
stc
imulb
xchg
or
pop
je
leave
mov
into
mov
lahf
push
testb
jb
dec
dec
les
stos
inc
pop
rcr
repnz
adc
fldcw
add
aam
cmp
out
xor
jle
shrl
dec
add
jmp
lahf
xchg
insb
dec
xlat
out
es
or
cs
std
mov
incb
repz
pop
inc
in
insl
movl
lahf
add
xor
fisttpll
xchg
pop
std
popf
sub
inc
xchg
mov
mov
mov
stos
rorl
add
jne
jb
insl
leave
inc
jbe
xchg
mov
scas
dec
jne
fdivp
bswap
jne
xchg
sub
out
outsb
inc
dec
pop
cmp
in
mov
cli
test
test
fbstp
popf
lret
cli
cwtl
daa
mov
ds
sub
iret
test
fcoml
add
sbb
or
jp
push
mov
jo
ret
mov
leave
push
cmc
sub
fistl
add
cmp
jecxz
es
and
cwtl
cltd
scas
mov
inc
call
into
mov
scas
xor
outsb
or
sbb
test
lcall
sbb
shlb
jne
pop
hlt
xchg
rcrl
add
mov
jp
add
inc
sub
movsl
jmp
daa
lods
sbb
or
xor
mov
out
sbb
inc
and
fdivs
lods
jecxz
lock
push
xchg
add
pop
cmp
inc
rorb
adc
psubd
xchg
gs
pop
dec
das
pop
adc
inc
out
jge
scas
xlat
mov
push
sub
lret
movsb
test
jbe
sub
push
xor
add
mov
insb
icebp
fmulp
xchg
jl
push
mov
fistpl
loop
pushf
cmp
out
inc
adc
dec
jmp
mov
ljmp
popf
out
mov
xor
outsb
popa
jp
stos
dec
fimuls
push
test
jae
ds
or
andb
mov
cmp
push
ds
je
push
push
in
pop
ret
pop
sub
daa
pop
mov
mov
test
or
pop
fadd
ror
sbb
sti
or
cmc
in
cmp
dec
mov
inc
and
lock
push
push
in
sbb
imul
adc
ret
sub
mov
sahf
les
and
fcompl
out
popf
pop
fimuls
pushw
insl
cmp
xchg
sbb
xor
mov
mov
mov
jp
xchg
inc
test
or
pop
daa
add
cs
ljmp
xchg
dec
jge
jb
es
or
dec
icebp
push
inc
mov
xor
mov
xchg
int
xlat
movb
aaa
jle
cmp
inc
push
std
cmp
movl
and
in
jne
pushf
xchg
pop
lahf
movsl
addr16
sub
jnp
pusha
cmp
pop
mov
jnp
cltd
jp
cmpsl
es
test
call
aad
mov
stc
xchg
xor
faddl
out
in
jno
xchg
clc
cltd
sub
xor
subl
pusha
xchg
lret
lahf
popa
xor
xchg
jns
push
addr16
or
push
dec
jecxz
add
movsb
jecxz
addr16
push
cmpsb
jmp
call
enter
lods
mov
pop
jge
xor
add
js
sbb
mov
imul
jle
addr16
push
out
push
fsubrs
stos
pusha
pop
shrb
aad
adc
mov
mov
inc
rol
in
jbe
dec
out
xchg
cmp
arpl
je
or
out
and
pop
mov
mov
and
fbld
rorb
jo
cmp
dec
les
dec
pop
idivb
loope
inc
jle
ja
cwtl
dec
shlb
sbb
jl
xchg
xor
push
out
sbbb
cmp
jmp
daa
mov
sub
cmpsl
loop
rcrb
pusha
std
call
lea
data16
mov
lods
cmpsb
scas
and
lods
add
aam
mov
add
nop
cwtl
xor
add
dec
sbb
dec
jge
mov
xor
and
daa
je
inc
pop
xchg
popa
loopne
mov
test
lea
pop
outsb
cs
sti
cmp
sub
pop
sbb
push
loop
jb
out
faddl
test
mov
setns
les
or
dec
cld
sbb
mov
push
paddsb
sti
pop
xchg
mov
outsb
lahf
fcomps
addr16
mov
pop
sbb
xor
stos
mov
add
xor
xor
mov
dec
sbb
stos
push
mov
fidivrl
insb
sub
test
xor
add
or
shlb
lock
adc
or
inc
mov
push
dec
fsubr
sub
cld
aam
dec
outsl
fistpll
mov
mov
pop
jns
in
outsb
test
dec
aaa
std
popf
js
ljmp
hlt
lcall
or
lods
ds
jns
nop
jp
movsl
std
xor
cmp
xor
lcall
mov
jp
adc
dec
stc
loopne
js
sub
and
mov
jns
pop
adc
xchg
xor
jg
sbb
dec
lcall
mov
pop
jo
mov
push
scas
repnz
leave
cmp
mov
and
mov
into
shrb
dec
fwait
inc
push
sub
adc
jecxz
imul
cmc
and
jge
je
inc
mov
nop
movsl
in
shll
cmpsb
sbb
sbb
mov
jmp
aam
pusha
repz
rcll
push
cmp
or
pop
clc
in
andl
leave
pop
xor
repz
aas
dec
jecxz
add
pop
cmp
cli
dec
jns
inc
or
xor
dec
outsl
in
inc
xchg
leave
popa
movsb
bound
cmp
ljmp
mov
pop
push
adc
xchg
cwtl
mov
lret
fstpl
in
xor
popf
hlt
adc
fistps
pop
ljmp
mov
inc
lret
lods
sub
rcr
repnz
test
fstps
adc
inc
pushf
shrl
mov
test
inc
repnz
push
test
cmpsb
imul
sub
sar
and
pop
jmp
rcr
add
or
movsl
movsl
cwtl
inc
ljmp
ficoms
and
call
loope
aam
xor
dec
das
arpl
fmuls
jle
dec
aas
xor
adc
aam
and
int
push
sbb
pop
pushf
cmpl
nop
or
dec
pop
insb
sbb
jmp
cmp
inc
jae
jno
fisubl
aas
mov
insb
add
xor
int3
filds
xor
sub
xlat
std
cmpsb
nop
sahf
sarl
int
inc
and
xor
push
mov
int
jge
push
cld
mov
or
xor
mov
jecxz
idivl
leave
data16
sub
shlb
or
cmp
push
int
mov
xor
jns
push
mov
cmpsl
repnz
cmp
add
or
int3
out
in
adc
xchg
mov
outsl
popw
pop
mov
push
fst
rcl
dec
push
adc
lods
roll
test
xor
and
shrl
cwtl
pusha
and
pop
lods
sub
adc
xchg
cmpsb
pushf
shlb
mov
inc
and
and
mull
add
cmpsl
call
dec
mov
or
enter
jbe
les
loop
rcrl
xchg
xchg
ds
pusha
sub
inc
xchg
ss
in
jmp
push
jge
mov
dec
pop
pop
mov
dec
es
cltd
cld
or
xchg
add
mov
icebp
ret
dec
cltd
bound
repz
imul
pushf
subb
test
pop
jmp
mov
mov
cs
sub
dec
cmp
jp
iret
ljmp
jne
mov
jmp
xchg
popa
cltd
jno
testl
mov
pusha
mov
cmpsl
and
pop
aas
sub
and
or
pushf
cmp
and
lock
gs
push
out
rclb
sbb
fcom
lret
inc
inc
push
push
into
xor
sti
xor
ret
cs
push
mov
insb
or
inc
xchg
dec
jl
mov
pop
in
enter
push
xor
lds
adc
ficoml
in
push
cmp
imul
shll
bnd
arpl
mov
mov
out
pop
push
nop
cwtl
stos
movsb
lret
and
fistps
inc
mov
xchg
push
out
clc
push
sbb
or
push
and
cmp
sub
enter
xor
xor
fisubrs
imul
add
push
stos
xor
fcmovbe
xor
or
hlt
sbbl
inc
adc
cltd
or
pop
add
mov
arpl
enter
ss
jecxz
mov
mov
push
sub
jno
lock
mov
xchg
or
fidivl
mov
xchg
scas
pop
pop
inc
test
inc
lods
mov
je
sbb
cs
repz
jne
and
and
xor
ljmp
test
jo
or
pop
addr16
jne
mov
sub
pop
out
mov
insb
adcl
xchg
sbb
or
mov
ljmp
arpl
fstps
xchg
or
pop
inc
add
stos
pushf
jno
hlt
xchg
dec
mov
mov
pusha
jbe
lahf
inc
cli
pop
sti
rolb
dec
jns
les
pop
mov
test
push
pusha
dec
ss
adc
leave
sub
lds
jmp
pushf
fimull
mov
clc
pop
push
cmc
cli
repnz
xor
pop
mov
add
push
icebp
leave
xorb
mov
mov
or
aaa
xchg
push
aaa
fwait
jne
mov
xor
int3
cmp
stc
cmc
push
jne
fwait
mov
xor
mov
dec
cmp
stc
sbb
les
xorb
nop
push
insb
xor
pop
mov
push
jb
gs
lods
mov
aad
jle
add
leave
inc
les
cltd
ljmp
test
add
popl
add
scas
pusha
dec
dec
daa
movsb
add
inc
cmp
loop
icebp
lcall
mov
mov
push
cmp
or
lds
addr16
bound
ret
int3
push
xor
int3
stc
arpl
fstpl
into
cltd
cld
loopne
jns
pusha
xchg
in
sbb
push
jl
xchg
sbb
pop
and
call
adc
or
pop
cmp
cmp
cwtl
cmpsl
shlb
sub
mov
ret
or
jge
daa
lret
sahf
inc
inc
jle
dec
out
aad
mov
stc
dec
jne
dec
divl
bound
sub
push
mov
inc
repnz
xchg
out
fwait
xchg
adc
xchg
pop
push
sbb
in
imul
and
push
push
jae
pop
cltd
shlb
int3
or
adc
sbb
lret
push
mov
mov
jne
insb
mov
and
pop
ret
jb
test
add
dec
std
mov
mov
inc
ret
push
imul
and
push
inc
daa
jmp
add
jle
ret
shl
jo
loop
cmc
sub
aam
jns
inc
stos
xlat
sbb
dec
cmp
sub
adc
loope
or
hlt
xchg
fiadds
sti
cs
add
ss
inc
and
in
cmp
aam
and
lods
in
fdiv
ljmp
cmp
les
shrl
aaa
mov
in
push
scas
push
cmp
jb
dec
sub
clc
imul
add
xlat
push
loope
pop
jecxz
mov
aaa
mov
aad
cmp
push
loop
push
push
mov
mov
mov
adc
decb
test
jecxz
pop
fldl
adc
ficomps
xor
call
mov
xchg
xchg
ret
xchg
rcrb
cmp
mov
and
sbb
movsl
pop
inc
mov
arpl
push
loopne
push
lods
out
imul
popa
sub
pop
repz
and
cli
imul
push
sub
mov
test
sub
stc
or
out
mov
mov
mov
jae
into
movsb
fldenv
push
sub
or
lods
aas
mov
shl
inc
mov
and
ljmp
inc
mov
out
sbb
sub
in
mov
and
imul
add
adc
jb
mov
mov
dec
cs
pop
dec
dec
pop
adc
sub
test
sbb
pop
arpl
dec
inc
xchg
das
hlt
pop
xchg
ss
arpl
fsubrs
sbb
or
mov
call
rolb
add
pop
adc
pushf
cmp
mov
pop
pop
push
ret
and
or
out
in
subl
adc
outsb
jg
ss
sbb
dec
adc
outsb
ror
jae
push
sbb
inc
addr16
mov
enter
test
bound
out
and
call
lcall
cld
icebp
or
sarb
mov
mov
xor
out
or
into
scas
test
movsl
dec
movsb
enter
or
jb
sahf
add
into
or
addr16
lods
popf
push
outsb
lods
inc
or
out
cmp
and
inc
outsb
fadds
loope
cs
pop
out
mul
repz
popf
mov
xchg
lcall
or
xor
cli
xor
pop
decl
roll
mov
mov
push
jg
lods
fisubrl
add
psrad
and
mov
mov
mov
in
or
bound
stos
and
jg
lock
pop
leave
aaa
mov
mov
clc
pop
inc
cmp
and
jmp
mov
mov
mov
in
and
es
fld
and
adc
leave
ss
mov
add
lock
mov
fcompl
lock
out
xor
addr16
xchg
cmp
adc
push
outsl
mov
dec
add
adc
out
pop
fs
out
sbb
leave
scas
add
loopne
outsl
cs
dec
adc
push
xor
insb
mov
or
dec
dec
test
or
call
xor
shrl
pop
push
popf
lahf
popl
dec
scas
jg
ds
fs
addr16
push
adc
scas
sub
in
lret
push
jg
fisttpll
push
inc
cmp
mov
pop
inc
jmp
icebp
dec
aad
push
push
sub
adc
in
cmp
lret
je
mov
popf
sub
jb
rclb
ds
gs
cmp
call
mov
mov
subb
out
xlat
subb
jne
rsm
pop
int
inc
mov
push
xorl
je
bound
call
sbb
add
rol
xchg
jae
ljmp
xchg
inc
add
jge
les
xchg
push
pop
xchg
into
test
popf
mov
xchg
jo
mul
xchg
sbb
sbb
jl
faddp
push
dec
pop
in
lds
push
test
addr16
jmp
in
repz
and
aaa
cmc
xlat
aad
mov
inc
scas
outsb
mov
in
mov
lret
adc
imul
aad
call
aad
mov
or
lods
cmpsb
leave
ror
movsb
xchg
call
enter
insb
adc
sbb
fstps
mov
jg
fadd
xchg
mov
and
rcrl
and
mov
imul
out
je
dec
mov
jae
sbb
pop
fs
inc
scas
loop
xor
fs
int
lret
loopne
adc
cmp
or
cltd
cmpsb
sbb
jae
pop
lea
push
adc
and
add
fsubs
outsl
adc
rcll
lea
lcall
popf
lods
insl
in
pop
dec
imul
sbb
hlt
int
repnz
addr16
sbb
inc
mov
std
pop
and
push
cmp
xor
sub
lret
jne
scas
pushf
mov
int3
jne
mov
dec
in
lret
push
bound
popa
mov
mov
int3
aad
mov
push
jge
push
xlat
jo
fsts
pop
outsl
push
in
lods
sbb
xlat
orb
sub
push
jl
sub
and
mov
movsb
pop
ffreep
mov
js
and
jae
shlb
mov
jne
movsl
mov
inc
pop
scas
push
dec
outsl
sti
xchg
pop
push
xchg
xchg
inc
pop
cmpsl
int
insb
addl
pop
ss
pop
nop
mov
aam
lods
push
scas
cmc
push
xchg
arpl
dec
pushl
and
xchg
xor
jo
lret
add
lods
lock
mov
sbb
aam
mov
gs
inc
push
pop
jecxz
pop
dec
adc
jecxz
dec
add
mov
sub
jns
int
inc
shlb
pop
pop
shrb
jnp
push
shr
and
je
aas
xor
fwait
jge
pop
or
adc
lcall
xchg
int3
mov
repnz
sub
sub
mov
fwait
movsl
jge
jbe
hlt
out
inc
pop
jle
pop
jle
jmp
mov
mov
xchg
mov
jge
push
jbe
jb
ret
dec
cmpsl
bnd
sbb
das
ja
fidivs
xchg
je
adc
lds
add
jmp
rorl
movlps
jns
and
fistps
jo
loope
cmpsb
jns
lods
pop
pop
ret
mov
les
sbb
pushf
sub
cld
cwtl
scas
cmc
jae
xchg
in
push
std
cmp
jo
sbb
push
push
pop
jnp
adc
insl
and
mov
into
inc
jbe
cmp
fwait
sub
es
lods
lea
push
jb
repnz
mov
inc
inc
jmp
jb
xchg
enter
jns
jns,pn
mov
rol
inc
push
cmp
sub
daa
lods
lds
pop
lds
pop
sarl
ss
mov
insb
mov
sahf
daa
xchg
jmp
repz
iret
scas
inc
jle
adc
clc
or
loop
push
jl
sahf
popf
loopne
pop
cmp
add
movl
sahf
mov
insb
adc
sahf
xchg
jg
pop
mov
mov
fadd
imul
ficompl
fmull
mov
fisttpll
adc
sub
xor
push
xchg
dec
lret
mov
fmull
jo
adc
adc
xor
cmp
pop
dec
loopne
lahf
push
call
add
cwtl
jne
fisubrs
scas
lret
add
push
cltd
or
jae
lods
jmp
lea
pop
test
icebp
test
sub
lret
shr
jo
adc
jmp
and
clc
movsb
sbb
sub
in
mov
dec
aad
repz
das
jne
sahf
lock
xor
out
cmp
mov
push
push
das
int3
cmc
jne
inc
sti
sub
jl
pop
rcrb
icebp
nop
and
pop
push
inc
cmpb
in
sarl
push
inc
xor
sbb
insl
adc
jge
into
adc
mov
inc
jg
popa
push
xor
push
gs
shlb
sbb
pop
mov
add
shlb
mov
jle
fldl
push
mov
movsl
lock
dec
arpl
fmuls
mov
sti
imul
sbb
mov
in
cltd
or
pusha
loop
pop
pop
add
filds
lods
adc
dec
add
insl
outsb
fwait
mov
addr16
aas
test
cltd
sbb
test
pop
jb
push
lock
insb
xchg
test
pusha
sub
sub
jno
push
mov
mov
std
pop
xor
jae
cmp
les
jns
jns
dec
cmp
cmp
jmp
test
repz
and
and
xchg
and
cltd
out
push
cltd
fisubs
xor
mov
mov
movsl
push
adc
andl
lret
pop
adc
testl
loopne
rep
je
rol
hlt
xor
cmpb
nop
xchg
push
pop
adc
out
daa
or
movsb
sbb
outsl
xchg
jle
test
jl
pop
pop
cmpb
popaw
pop
xchg
sub
dec
or
lret
xor
roll
and
pop
push
mov
push
es
pop
mov
or
xor
icebp
rorl
dec
jp
sbb
pusha
jl
sbb
and
in
sub
daa
dec
and
jo
sti
pop
sahf
mov
xchg
ljmp
into
adc
aam
loope
or
subb
lahf
nop
xchg
pop
push
bound
pushw
daa
test
mov
popf
dec
out
ret
incl
inc
jge
mov
std
popf
repnz
fcoml
pusha
push
popa
inc
mov
xchg
into
mov
mov
mov
jmp
mov
gs
mov
stos
loope
inc
inc
outsl
ror
xchg
push
cmc
lock
test
mov
push
pop
add
sbb
sbb
aam
mov
and
int
imul
enter
add
repz
lret
ds
test
dec
pop
das
lea
cmp
bound
pusha
jp
stos
lods
xchg
add
add
cmp
or
repz
adc
mov
xor
pop
test
jae
xor
jmp
out
mov
in
cmpsl
int3
adc
pop
or
outsl
es
cmp
xchg
fs
je
insl
shl
bound
out
pusha
sbb
jp
jg
adc
lahf
adc
sti
out
and
dec
das
or
mov
pop
mov
mov
adc
repnz
ds
fisubrs
loop
pop
fsubl
jne
loop
in
mov
or
stos
ljmp
lods
les
sti
dec
cmp
andl
into
jns
mov
pop
int3
lret
out
xchg
mov
cmp
jne
lods
mov
sub
popf
xchg
add
sahf
clc
jb
jns
add
mov
cmp
cld
fwait
or
push
lock
or
addr16
icebp
mov
inc
call
xchg
and
incl
icebp
das
dec
jecxz
cmpsl
faddl
popf
in
mov
sbb
mov
or
ss
pop
jae
outsl
jmp
loopne
mov
jl
xchg
out
repz
inc
xchg
sbb
or
mov
imul
pop
idivb
pushl
out
xor
lret
adc
and
lret
pop
xor
xor
jg
inc
mov
mov
jmp
aas
cmp
xor
das
or
test
mov
movsb
xor
cmp
sub
mov
daa
stc
pop
es
cmp
pop
sti
pop
cmp
add
jb
and
inc
push
scas
cmc
sbb
nop
leave
mov
inc
push
inc
lea
mov
xchg
mov
mov
mov
jae
inc
pop
std
xor
mov
insl
and
cmp
inc
popa
pop
push
mov
movsl
fs
clc
rorl
rcll
adc
inc
leave
mov
cmp
push
push
rolb
lock
imul
mov
mov
mov
and
sbb
dec
or
notb
test
loopne
mov
push
adc
cmp
movsb
cmp
mov
sbbl
add
xchg
push
jle
rcl
push
lds
addr16
inc
xchg
cmp
jb
inc
pop
sub
adcb
add
adc
and
bound
dec
out
jmp
incb
nopl
mov
scas
loope
adc
rorl
sbb
xchg
dec
test
pop
adc
lahf
ja
sub
fdivl
dec
fs
mov
imul
call
repz
pop
push
shll
and
add
xor
rcrb
or
fsubrl
sahf
cmp
add
jnp
mov
jns
movsb
lret
dec
add
pop
adc
or
out
leave
sub
mov
test
ds
fsts
out
rclb
push
push
lret
in
add
xor
adcb
add
mov
push
lock
dec
adc
imul
jne
dec
jbe
sbb
pop
mov
dec
ret
mov
mov
cmp
out
das
imul
mov
or
es
push
js
out
movsb
jno
xchg
cwtl
fisttps
mov
mov
roll
or
cld
or
mov
cwtl
dec
or
cmp
cli
mov
lcall
xlat
mov
out
jnp
imulb
notl
in
push
int
insl
int
sahf
test
dec
in
mov
mov
push
das
sbb
cmp
repz
fidivl
xchg
jb
jmp
sbb
mov
test
xchg
gs
int
je
insb
cmp
sti
push
mov
jns
dec
outsl
push
pop
fisubl
dec
cmp
jo
inc
sub
cs
mov
cmp
ret
idiv
xchg
insl
pushf
repz
mov
nop
sbb
adc
fdivs
mov
sti
pop
push
test
jp
inc
ret
cmpsb
cmpsb
mov
xor
in
mov
out
sbb
inc
cli
dec
out
inc
in
out
imul
pop
dec
push
jbe
data16
adc
and
adc
insb
dec
mov
lods
or
aaa
dec
cs
psubsb
test
dec
inc
out
aas
into
lds
push
bound
cmpsl
fists
adc
imul
js
pusha
fwait
xchg
mov
mov
jmp
in
xchg
xor
int3
mov
js
movsb
out
pop
sub
movsb
sbb
jmp
cmc
jge
subb
xorl
stos
inc
mov
test
pop
popa
ret
int3
jno
lods
jo
fistpl
pop
sar
popf
fwait
gs
fisubrs
xchg
insl
and
sbb
sbb
mov
jecxz
clc
test
mov
in
dec
shlb
jns
ficoms
mov
inc
lods
adc
in
out
mov
push
xor
fimull
sbb
pop
sbbl
and
jnp
xchg
mov
adc
xor
int
cmpb
cli
sub
cmpsl
std
add
outsb
jb
jae
or
les
inc
add
cmpsb
jbe
push
add
push
mov
fwait
sub
adc
imul
sub
jp
jno
sti
scas
rorl
xchg
test
push
pop
adc
testl
xchg
push
imul
test
inc
sbb
int
call
pushf
out
adc
xor
dec
jmp
xchg
pusha
cmp
shlb
pop
dec
imul
adc
outsl
mov
mov
out
in
stos
movsl
les
mov
ss
mov
xorb
bound
and
pop
mov
add
xchg
clc
outsb
idivb
jbe
popf
pop
and
lds
adc
adc
mov
mov
jns
in
jbe
daa
mov
push
push
in
pop
push
lea
fwait
sbb
pop
testb
addl
outsl
xor
test
into
jae
out
shlb
cmc
dec
sahf
jge
xchg
in
and
pop
push
and
mov
sub
push
test
sub
pop
iret
ds
and
push
push
cmc
xor
push
dec
fsubrl
insl
add
idivl
pop
jnp
jb
cmp
jg
mov
dec
add
das
rcrb
stos
adc
movsl
lahf
andb
mov
pop
fucomp
mov
ficoml
xor
dec
scas
lea
outsl
adc
repz
cmp
fs
int3
decb
or
mov
xor
mov
sbb
mov
jle
out
lds
sbb
sub
iret
std
jo
sub
aam
sbb
push
mov
aas
test
or
imul
cld
xor
fadds
xchg
mov
xchg
push
mov
xchg
sub
popf
inc
orl
jb
pop
test
mov
jnp
ja
dec
arpl
shl
jno
or
lret
scas
mov
jge
not
ret
or
ss
sbb
mov
test
test
ret
push
mov
lods
fucom
or
sbb
jmp
imul
loope
pop
icebp
scas
std
xor
mov
scas
loopne
divl
fisttpll
in
fstps
xchg
push
int
pop
adc
mov
dec
sub
xchg
mov
stos
xchg
mov
mov
push
adc
push
add
xchg
fimull
xor
loopne
add
inc
sbb
movsl
outsb
pop
inc
shl
lds
mov
outsb
or
test
nop
adc
push
jno
add
int3
mov
sub
fisubl
and
das
cld
pushf
stos
jge
sub
aaa
or
ja
xchg
scas
and
dec
mov
xchg
repz
in
ficoml
mov
cmpsb
mov
insl
mov
popa
test
sbb
sub
adc
jl
int3
push
xchg
and
test
lods
dec
xlat
nop
cs
imull
and
cmp
or
xchg
cmovnp
or
cwtl
int3
jnp
arpl
dec
sub
jg
dec
add
rclb
sub
les
mov
pop
fcoml
xor
in
mov
decb
jnp
jl
outsl
and
dec
shrl
dec
mov
lret
punpckhdq
xchg
pop
cmp
jge
les
mov
add
mov
pop
cmpsb
call
pop
js
das
sub
imul
jo
mov
adc
dec
jnp
and
jnp
jae
and
divl
sti
mov
aas
pop
dec
mov
std
and
cmp
lahf
pop
pop
jne
pop
aam
push
pop
outsl
fldcw
loop
mov
out
mov
popa
lds
sbb
adc
fstl
push
cmp
fidivrs
out
out
dec
rclb
ret
jns
xchg
dec
fnstcw
mov
pop
push
bound
lret
and
xchg
xor
loopne
repz
clc
mull
pop
sbb
xchg
fsubl
test
lret
jno
pop
scas
mov
push
lcall
push
mov
push
inc
sub
pop
lea
xor
sub
and
cs
sbb
mov
rclb
imul
dec
dec
xor
iret
sbb
xchg
fiaddl
add
fldcw
imul
jbe
or
mov
sub
adc
imul
or
lds
sbb
adc
ljmp
push
rolb
xchg
add
dec
aam
inc
std
lods
testb
test
jl
mov
clc
nop
cwtl
mov
inc
mov
cmpsb
or
pop
imul
xchg
and
mov
lock
xorb
pop
adc
arpl
push
mov
pop
adc
pop
cwtl
jmp
mov
out
dec
pop
adc
cwtl
lcall
in
cltd
mov
sub
aaa
fnstsw
push
mov
adc
mov
adc
scas
jne
lcall
cmc
mov
xor
sahf
in
cmp
push
mov
dec
pop
dec
rclb
fldenv
jb
ret
mov
mov
cwtl
pusha
test
inc
out
test
int3
cltd
loopne
pusha
inc
lock
adc
dec
jnp
and
testb
orb
xchg
sub
addr16
xchg
loopne
pop
dec
sbb
andl
push
xchg
add
sub
pop
push
test
cmpb
iret
adc
inc
jl
mov
jg
int
pop
xor
mov
mov
sub
mov
sbb
mov
movsb
push
js
and
push
rorl
mov
insb
pop
jecxz
dec
mov
mov
xchg
test
inc
push
js
pop
test
mov
repnz
push
out
mov
shrb
mov
inc
test
outsb
xchg
pushf
mov
push
cmp
mov
mov
es
add
imul
push
push
xor
dec
fidivs
mov
xchg
xchg
fwait
mull
xor
adc
xchg
inc
sbb
test
jecxz
sbb
jo
fistpl
or
fidivrl
push
sub
mov
pop
pop
subb
outsb
xchg
sub
sbb
or
insl
dec
jae
imul
dec
aas
mov
loopw
fbstp
popf
loope
iret
loope
push
mov
iret
mov
fs
addl
sahf
int
pop
cmp
mov
dec
xchg
add
fistps
mov
xor
jnp
rcrb
push
mov
inc
out
xor
insb
mov
mov
cmp
adc
push
pop
dec
stc
insb
aas
adc
xlat
adc
mov
add
mov
pop
hlt
sub
mov
pop
adc
daa
imul
imulb
mov
fwait
mov
ret
cmp
pop
push
fcomps
cmp
cmp
lods
repnz
xchg
xchg
fcompl
jge
insb
fsubrl
fstp
mul
andl
xchg
xchg
cmp
and
frstor
push
dec
mov
push
sub
push
or
ds
addl
fwait
xchg
cmp
sub
mov
imul
xor
push
into
lods
pop
sub
lret
lock
jge
cmp
adc
or
clc
push
jmp
sbb
out
outsl
inc
je
in
mov
jmp
movsl
inc
or
pop
addr16
adc
aad
mov
scas
ret
jae
mov
and
js
ljmp
dec
rcrb
adc
jns
fimull
jg
sti
lods
xor
jbe
test
dec
sarb
jp
sti
loopne
lahf
xchg
sahf
test
push
and
dec
mov
inc
inc
dec
stos
out
sbbl
notb
popa
adc
jp
pop
jmp
adc
xchg
in
out
pop
jl
adc
fistpll
cmp
movsl
pop
icebp
test
shrl
pop
pop
xor
jnp
movb
or
mov
jnp
adc
fnstsw
out
fs
inc
adc
movsl
sarb
lret
pop
jo
xor
dec
pop
dec
mov
push
inc
loopne
push
mov
dec
sbb
arpl
dec
fucomip
aas
xchg
lock
jno
cwtl
fsubrs
neg
ret
or
jge
gs
shrb
pusha
jae
pop
dec
xor
arpl
dec
out
push
sarb
enter
pop
lahf
adc
shrl
ds
fstl
jecxz
xchg
test
sbb
or
and
aaa
mov
sub
mov
rclb
test
scas
mov
add
dec
xchg
dec
inc
je
pop
sub
iret
mov
jb
fiaddl
inc
add
sahf
je
insb
es
mov
clc
scas
cmpsb
lcall
fwait
int3
push
test
sbb
mov
push
cs
into
int
mov
dec
lods
add
lock
dec
out
inc
jmp
xor
leave
push
xor
aaa
cmp
jb
lock
daa
push
xlat
sbb
pop
iret
fisubrs
iret
push
mov
cmp
xlat
into
and
int
mov
adc
sub
inc
nop
out
insb
adc
bound
stos
and
push
or
out
test
xchg
jne
shrb
sbb
sbb
dec
popf
fmull
and
aad
imulb
dec
das
jmp
and
push
fmuls
pushf
push
addr16
jae
clc
cmpl
inc
dec
in
out
stc
jae
mov
pop
push
rorb
jecxz
inc
into
mov
addr16
cld
cmpsl
jo
xor
cmp
mov
push
cmpsb
jle
xor
test
test
mov
or
sub
lahf
fcomi
daa
test
dec
cwtl
sub
in
or
mov
pop
pop
ret
lods
stos
js
stc
add
sti
pusha
rorl
outsl
fnsave
xor
dec
add
adc
pop
or
bound
hlt
notb
ljmp
frstor
out
xor
cmp
and
enter
mov
jecxz
scas
or
dec
nop
mov
add
or
mov
lock
fnstsw
loopne
mov
notb
dec
in
ret
adc
cltd
sbb
sbb
filds
xor
cmc
test
mov
or
js
out
jmp
ret
mov
pop
adc
ja
hlt
push
push
cmp
daa
into
popf
mov
or
sub
rcr
lds
add
mov
imul
mov
jb
cmpsl
jae
sbb
sbb
fistps
mov
cmpsl
in
in
pop
cmp
fsubrs
ds
add
aam
dec
iret
sahf
int3
sub
divl
scas
fwait
and
cmp
sarl
push
loopne
flds
sub
dec
cwtl
cmpl
fisubl
push
popa
sbbl
jno
mov
nop
fsubr
or
lret
mov
xlat
test
pop
adc
jne
jle
and
subb
testl
bsf
ret
inc
cli
push
fstps
push
and
xchg
call
pop
das
xchg
sbb
xor
ret
push
xchg
cmp
xor
push
pop
mov
leave
lods
rcr
sub
xchg
lea
mov
sub
mov
out
lods
subl
pop
shlb
test
and
int3
jne
push
daa
mov
lock
and
es
and
mov
test
dec
dec
cmp
adc
inc
cmpsl
loopne
sbb
test
adc
int3
lods
push
jmp
es
sbb
sub
cli
or
fdivs
xor
loope
les
test
aad
lods
cs
pop
inc
hlt
jae
shll
lock
pop
cmp
insl
and
mov
aad
lret
add
pop
adc
lcall
sub
in
lret
push
gs
bnd
xchg
int3
fdivrs
inc
popf
test
push
adc
pop
push
adc
inc
push
or
and
rorb
in
or
jo
rcl
std
ja
jmp
lret
or
mov
ficomps
lahf
push
pop
push
fiadds
call
aaa
movsb
sbb
lea
jmp
mov
rolb
mov
and
test
test
mov
push
in
mov
mov
add
cmovle
shll
jb
fwait
xor
hlt
mov
sbb
pop
mov
add
cmpb
js
lods
mov
jp
repnz
adc
push
inc
cmc
cltd
arpl
notl
lods
mov
arpl
xchg
adc
dec
std
sub
or
test
gs
push
inc
mov
nop
jo
cltd
xchg
mov
mov
jno
cmp
nop
mov
data16
shll
add
sbb
push
in
cmp
cli
stos
xchg
adc
cwtl
xor
dec
stc
pop
repz
pop
cltd
cmp
insb
pop
fsubl
sbb
add
enter
repnz
xlat
nop
out
pushf
aad
pop
pushf
jne
xchg
inc
xchg
cmp
subl
rcrl
pop
clc
sbb
jo
hlt
ret
dec
cmpsb
push
mov
xchg
enter
dec
sbb
lock
loop
inc
lcall
ja
dec
hlt
daa
sub
xor
jmp
mov
andl
mov
dec
clc
xchg
cmp
jge
mov
ds
loope
or
jp
popa
push
addr16
add
mov
xchg
gs
pop
jne
mov
add
clc
imul
inc
test
pop
aas
pop
mov
sbb
jg
sbb
cmp
andb
jne
lahf
arpl
xchg
inc
push
sahf
dec
jl
pop
adc
pop
push
or
adc
jne
mov
and
dec
hlt
lret
clc
sbb
pop
loope
out
xchg
out
sub
outsb
adc
cs
outsb
dec
int
sub
movsb
pop
and
sarl
and
jmp
xchg
insl
or
dec
mov
lods
add
lret
cmp
push
push
xor
lea
sub
or
sbb
mov
shll
xchg
inc
mov
out
jmp
sbb
inc
enter
jmp
add
cwtl
inc
popa
cld
sbb
add
pusha
add
fstpl
sti
cmpsl
push
movsl
fcomps
lock
inc
jno
cmpsb
les
in
repz
fistpll
imul
sbb
arpl
sbb
mov
sbb
lret
adc
or
mov
in
inc
lcall
xchg
mov
xchg
jg
hlt
push
pop
sarl
push
gs
add
inc
cmp
pusha
lcall
pushf
mov
mov
add
lea
mov
movl
sub
cmp
xlat
inc
sub
js
js
mov
xchg
push
adc
add
scas
pushf
lock
in
aam
jne
dec
or
aam
push
sarb
xchg
mov
sbb
cld
daa
sub
je
add
cmp
loopne,pt
lahf
lret
lock
or
jno
cwtl
movsb
fabs
jecxz
mov
xchg
loope
mov
mov
data16
mov
jg
cwtl
add
cmp
pusha
jnp
add
push
pop
cmpsb
out
aad
gs
mov
pop
loopne
add
add
in
imul
push
fsubrs
repnz
aam
popa
test
out
xor
hlt
fwait
cli
mov
xchg
aam
loope
mov
add
lret
push
cmpl
bound
xchg
movsl
mov
lea
mov
push
adc
cmp
push
jno
mov
fucomi
xchg
pop
imul
lcall
mov
xchg
mov
jnp
fwait
icebp
and
jno
je
lcall
divb
xor
push
imul
jno
dec
sbb
mov
arpl
push
push
fidivs
in
cmp
cld
pop
push
fcoms
jae
lock
xchg
in
push
rorb
jns
mov
popa
test
sub
adc
dec
ds
into
pushf
shlb
push
inc
jnp
insb
lods
xchg
arpl
jg
out
loopne
or
mov
ss
xchg
cmp
imul
and
loopne
lcall
sbb
mov
popl
scas
fldl
mov
xchg
push
movsl
rcrb
xchg
dec
mov
aaa
jno
cmpsl
insl
fcoml
mov
dec
sarl
jo
popa
loope
jmp
in
push
addr16
xor
insb
rorb
push
push
pushf
jl
fistl
sub
or
js
xor
addr16
cltd
fwait
cltd
sbb
pop
and
dec
pushf
xchg
scas
add
aad
test
rolb
push
outsl
mov
data16
repz
push
inc
hlt
shlb
ret
mov
add
push
je
iret
dec
test
lcall
pop
lret
lret
adc
add
push
je
xor
decl
out
lret
mov
xor
fstpl
sbb
orl
adc
mov
inc
cmpsl
out
inc
adc
jo
jo
ljmp
data16
sub
sbb
mov
or
sub
pop
or
jmp
cltd
lock
fwait
scas
cli
dec
inc
inc
rcl
or
mov
scas
jne
sub
enter
in
pop
dec
mov
lea
ror
data16
and
ret
in
hlt
pop
xchg
push
iret
add
js
mov
jno
adc
cmp
cmp
aam
test
data16
or
and
lcall
add
inc
cld
jns
pushf
push
out
cmp
dec
mov
bound
les
jb
jbe
push
test
cli
aad
lret
xor
sti
loop
push
sub
test
sub
sbb
inc
jnp
cmpsb
mov
clc
rorl
dec
arpl
push
out
outsl
lods
sbb
imul
dec
xchg
std
jb
xor
imul
xor
lret
inc
or
ret
pusha
rorl
add
and
sbb
pop
scas
jns
sub
lds
fwait
add
cmpsb
insl
mov
mov
sarb
jmp
ret
imul
mov
or
ljmp
add
lock
aaa
cmc
fisttpl
sub
lods
std
orl
pushf
ficoml
jg
sub
push
push
mov
lahf
cmp
subl
outsb
sbb
sub
test
out
cli
cwtl
je
push
jo
mov
fsubrs
mov
iret
lods
pusha
lcall
push
ror
xchg
ss
or
xor
and
mov
add
lret
xor
lcall
mov
jae
and
and
mov
das
lea
mov
cld
or
jo
inc
jbe
jmp
aad
rclb
mov
dec
test
push
gs
inc
xor
or
dec
xor
test
mov
cmp
daa
push
jmp
fistl
mov
mov
dec
ds
insl
mov
push
hlt
enter
sbb
inc
movsb
add
push
bound
push
mov
or
orl
fldcw
test
xor
and
dec
push
xchg
mov
adc
into
mov
adc
repz
push
cmpsb
jmp
or
stos
inc
and
fsubp
jl
push
ss
lock
ljmp
sub
add
xchg
cmp
repz
aam
addr16
lods
fsubs
sahf
das
stc
addr16
sbb
insb
dec
orb
out
int3
mov
add
bound
push
or
int3
cmp
loopne
addr16
push
loop
daa
mov
cwtl
or
mov
pop
xchg
pop
dec
sub
jmp
add
adc
xchg
dec
sarl
mov
test
pop
cmp
xchg
leave
lret
js
call
and
or
pop
mov
or
mov
jnp
and
cmp
push
add
stos
pop
test
cmp
gs
aas
cmp
fwait
stos
dec
hlt
enter
ja
and
pop
icebp
mov
in
lcall
in
lea
nop
stos
test
mov
fnsave
insb
outsl
cmp
or
stc
rsm
addr16
mov
adcl
popa
mov
pop
inc
mov
stos
scas
shl
data16
out
add
push
arpl
loopne
cmp
or
sti
push
js
jmp
pop
ss
pop
xchg
add
jae
jno
sub
aad
imul
pop
sbb
jb
and
adc
enter
cmpsl
mov
lahf
int
dec
test
mov
call
push
xor
outsb
fwait
and
push
push
data16
sahf
repnz
leave
cmp
test
popa
push
adc
mov
lock
lahf
pop
aam
mov
out
or
fxch
pop
addr16
mov
sub
out
mov
and
fisubrs
mov
mov
adc
and
pop
or
mov
loopne
enter
sbb
or
push
outsl
pop
cmp
adc
dec
jne
xchg
shrl
cs
jmp
insl
pop
lea
mov
lods
cmp
mov
adc
dec
daa
adcb
pop
in
sub
clc
sti
fs
call
ljmp
lea
cli
adc
xor
jb
jle
push
and
jg
mov
dec
insl
andl
dec
lock
loop
mov
jp
fidivrl
test
lss
mov
fsubrs
push
aaa
jns
push
cltd
adc
sub
dec
ffree
insl
pusha
sbb
lods
repz
out
jne
adc
mov
out
shr
rcrb
jns
inc
lock
mov
int3
loopne
cli
call
and
ja
mov
adc
adc
pop
ret
fcoml
push
das
or
in
aaa
insb
arpl
pop
es
jg
add
rcrl
in
lods
jo
mov
out
fdivrs
andb
out
das
cli
pop
sti
mov
loop
js
js
or
arpl
ret
push
sub
adc
out
or
inc
imul
and
and
push
and
repnz
mov
jae
lods
cmp
dec
out
loopne
push
jle
sub
jne
pop
leave
mov
xchg
imul
cmp
fstl
push
cmc
repnz
cmpl
movsl
mov
mov
mov
stos
adc
les
cmpsl
jne
sahf
cmp
push
sbb
or
sbb
lret
loop
das
cmpsb
pop
mov
aam
out
scas
rorl
int3
jb
cmp
jbe
sub
jge
fucomip
jae
insb
rcrl
stc
jbe
inc
sbb
out
in
inc
test
jmp
in
push
and
pusha
push
xchg
ja
push
shrb
je
sbb
test
rorb
add
scas
mov
xchg
cmp
test
repz
ja
xor
mov
inc
xchg
sub
mov
int
addr16
and
push
jmp
cmp
push
ret
mov
jbe
repz
xor
cmp
fs
into
imul
mov
and
adc
jbe
add
insb
icebp
sub
sub
push
and
add
cmpsl
ret
add
cmc
ljmp
inc
jb
ret
sbb
das
imul
xor
hlt
cmp
dec
loop
push
lds
repz
fists
sbbb
xlat
jp
or
and
mov
outsl
int3
inc
sub
inc
outsb
and
icebp
adc
or
je
xor
movsb
test
orb
dec
fimuls
xlat
pop
je
inc
xlat
adc
xchg
mov
mov
scas
testb
sub
out
lcall
push
fldt
pminub
into
inc
test
fidivrs
out
inc
inc
adc
ljmp
mov
add
lcall
sub
mov
mov
das
iret
lret
cli
sub
mov
mov
ficoms
repnz
push
loop
sbb
xor
stos
and
dec
mov
out
mov
mov
xchg
fsubl
aaa
lods
aaa
dec
scas
shr
sahf
imul
or
daa
cmpb
dec
sbb
pop
and
inc
dec
sub
mov
test
mov
cmp
fsubl
cli
test
stc
and
add
leave
adc
push
cltd
scas
add
aas
repnz
dec
scas
jns
xor
jle
mov
sbb
sub
pop
fistps
pop
rcr
dec
outsl
inc
mov
test
pop
test
inc
pop
push
cmp
test
in
jb
xor
push
xchg
roll
sub
sub
jns
add
mov
sub
dec
stos
fcomp
xchg
inc
cwtl
pop
inc
cmp
pmaddwd
cld
pop
mov
adc
xor
cld
or
lahf
aad
ja
lds
pop
mov
in
or
addb
jl
sbb
dec
data16
xchg
fldenv
in
add
dec
xchg
out
or
fcmovnbe
sbb
and
pop
pop
test
jbe
adc
mov
jbe
inc
pushf
mov
fsts
xchg
pop
pop
lea
out
cs
scas
or
mov
pop
sbb
jne
push
mov
mov
xchg
popf
pop
inc
inc
pop
inc
add
movsl
insl
dec
ljmp
mov
test
cmp
cmp
add
repz
popf
iret
js
mov
seto
sub
inc
add
dec
push
mov
in
jae
repnz
out
sbb
in
cmp
lea
or
push
mov
or
mov
mov
cmp
lret
sti
fwait
popf
js
inc
mov
int3
test
mov
cmc
sbb
fildl
movsl
aaa
mov
stc
jle
jecxz
adc
xlat
je
jmp
jecxz
mov
repz
adc
mov
mov
mov
mov
jne
bound
xor
cmp
add
xchg
popf
movl
dec
sub
lahf
or
or
inc
shl
xchg
dec
jle
fwait
data16
fildl
imul
cmp
stc
ret
scas
cmp
pinsrw
mov
push
mov
sbb
and
mov
gs
mull
sbb
inc
hlt
add
and
out
xchg
nop
sub
mov
les
dec
xchg
aas
mov
xchg
mov
jno
push
inc
sub
mov
push
or
pop
dec
dec
xor
mov
sub
into
add
dec
push
cld
adc
xchg
ret
dec
adc
and
mov
test
ret
add
nop
int
scas
mov
aad
pop
cmp
xor
hlt
mov
test
out
mov
adc
add
or
or
pushf
jno
lretw
clc
mov
mov
lock
aas
orb
dec
int3
int
loopne
fcomi
add
fstpt
push
inc
mov
out
mov
pop
inc
jo
or
or
pop
jb
aaa
pop
push
dec
ficompl
push
in
mov
cwtl
inc
int
bound
out
fsubrl
repz
and
or
push
lock
lcall
mov
mov
cs
inc
pop
cwtl
out
daa
fwait
or
shll
out
sub
push
test
mov
lahf
aas
je
and
mov
arpl
mov
sti
lret
sub
push
mov
adc
clc
aam
cltd
in
ds
adcl
add
mov
inc
push
or
push
test
xor
xchg
aad
mov
cli
inc
cmp
xchg
push
lods
jmp
arpl
iret
push
lcall
adcl
lods
lret
je
push
mov
xchg
test
sub
mov
jae
mov
mov
mov
lods
mov
adcl
inc
mov
pop
dec
mov
mov
jno
sbb
pusha
add
movb
jae
loopne
daa
hlt
sub
and
fwait
push
adc
jae
lahf
out
cld
int
xchg
lret
and
pushf
ret
js
fildl
jo
mov
jmp
cmp
mov
pop
pop
in
es
mov
mov
test
mov
cwtl
xchg
sbb
mov
add
movsl
mov
xchg
push
arpl
je
lret
aad
fnstenv
idivb
cmp
ss
xor
and
adcl
mov
mov
int3
je
aad
push
lea
push
pusha
and
xor
out
iret
out
stos
pop
cmp
or
jne
pop
xchg
inc
xor
adc
insl
push
jnp
xchg
cmp
xchg
sbb
inc
clc
je
push
decl
mov
cmp
bound
jg
movsl
pop
or
lahf
push
outsl
les
out
mov
out
mov
bnd
loopne
mov
xor
add
rcl
fdivl
fadds
mov
rcrl
jp
mov
push
outsl
loop
in
loop
dec
mov
cmpsb
std
loop
test
inc
push
or
test
jecxz
fdivr
add
in
or
mov
mov
mov
popf
mov
mov
sbb
arpl
lret
leave
int
pop
cli
insb
dec
xor
or
dec
rcrl
pop
testb
addr16
test
fisttps
outsl
test
dec
or
mov
mov
fstpt
enter
mov
leave
std
pop
std
cmpsb
in
test
jl
nop
jbe
inc
in
cmp
add
mov
xchg
and
fstpt
addr16
in
cmp
mov
das
cltd
jg
stc
movsl
shlb
lock
push
std
das
repz
push
and
xchg
sub
push
jecxz
sbb
cmp
mov
xchg
pusha
das
push
mov
xor
and
popf
add
jo
xchg
mov
xor
int
jp
andb
fmuls
pop
pop
lock
push
dec
sbb
stos
shlb
lods
add
adc
inc
fmuls
xlat
sub
push
pop
adc
movsw
xchg
sbb
in
and
push
into
cmp
cwtl
in
test
mov
pusha
lock
in
icebp
fwait
adc
jno
dec
test
pop
rcrl
xchg
pop
shlb
jns
cmc
test
fidivs
lods
dec
movsb
hlt
cmp
adc
cmp
or
stos
ja
notb
outsb
and
sbb
fdivrl
fbld
jbe
inc
aad
mov
leave
popa
sub
scas
inc
frstor
pop
lods
xor
jecxz
scas
scas
mov
adc
push
cltd
pusha
movsb
pushl
fbstp
sbb
movsl
mov
xorb
mov
pop
jb
mov
and
aam
adc
mov
push
rclb
out
iret
loope
aad
dec
stos
icebp
mov
out
repz
pand
jp
sub
js
data16
fistpl
push
fsubs
dec
in
andl
mov
pop
fwait
loopne
test
mov
insb
pmullw
clc
or
mov
arpl
bound
mov
xor
adc
in
dec
cmp
testb
pop
mov
inc
cwtl
mov
push
aad
inc
add
xchg
xor
adc
add
inc
icebp
sbb
loop
testl
cmc
pop
add
scas
mov
jne
and
imul
lods
adc
lods
inc
or
loopne
lods
cmp
aaa
arpl
sbb
cmp
xor
xor
xchg
and
xor
loope
sub
lock
and
arpl
pop
xchg
mov
sub
testb
rcrb
sbb
xchg
pop
out
cmp
xchg
mov
aad
lret
adc
sahf
jmp
xchg
cmc
in
push
lret
lock
xorb
mov
sub
test
xchg
out
mov
xor
in
in
subl
test
xchg
adc
xor
aad
jo
xchg
lock
adc
and
test
dec
pop
cmc
bound
pop
or
jne
cwtl
pop
lahf
cmpsb
mov
or
adc
popa
push
lods
mov
loopne
sbb
pop
jbe
iret
jecxz
jl
bnd
arpl
push
inc
xlat
lds
dec
inc
stc
int
ds
mov
mov
in
pop
pusha
push
daa
push
ljmp
imul
repz
les
out
sbb
cmp
mov
sbbb
add
stc
xchg
push
fwait
cmpsb
fisubs
lods
nop
ficoml
loopne
xor
dec
sub
push
repnz
out
loope
dec
repz
enter
mov
and
push
outsl
sarl
pop
ljmp
cmp
mov
inc
xchg
cmp
daa
pushl
lock
pushf
repnz
jo
lcall
popf
popf
shll
int
and
shr
dec
leave
or
sbb
mov
icebp
push
je
lods
mov
out
cmpsl
rorl
sbb
inc
nop
pop
cmp
or
jge
dec
stos
mov
push
daa
inc
inc
xchg
movsb
xchg
mov
cld
mov
pop
jp
sub
jae
push
repz
scas
rorb
arpl
mov
rorl
jb
and
fmul
jl
and
daa
int
loopne
sbb
xchg
inc
mov
ja
add
movsl
sbb
pushf
pop
push
gs
fisttpl
enter
and
cwtl
dec
cmp
cmp
into
xchg
or
out
pop
dec
pop
jmp
sub
femms
cmc
aaa
adc
jecxz
nop
push
cli
cmpsl
cmc
iret
sbb
pop
ljmp
mov
jg
imul
adc
mov
jnp
fxch
dec
mov
jg
mov
packuswb
iret
das
fwait
xlat
inc
es
mov
xchg
sub
jo
aaa
loopne
out
pop
push
push
mov
in
mov
jecxz
std
je
mov
les
push
loopne
out
nop
repnz
in
adc
add
and
stos
mov
pop
and
sbb
adc
jge
fcomip
aad
pop
in
jne
ds
sbb
in
fsts
mov
out
sub
add
repz
shlb
iret
cmp
mov
jg
cwtl
daa
xchg
test
xchg
xor
sbb
popa
cwtl
adc
aam
pop
mov
pop
shll
lea
enter
inc
outsb
jo
cli
mov
and
imul
mov
and
mov
movsl
cmpsl
mov
iret
xchg
add
mov
test
push
ret
cmpsl
loopne
int
nop
adc
mov
lret
les
and
push
adc
sub
ds
in
jmp
mov
push
mov
xor
xor
fsubp
cmpsb
clc
fidivrl
hlt
fbstp
push
stos
clc
cwtl
xor
inc
jle
adc
pop
jmp
leave
xor
mov
xor
mov
movsl
xor
push
popf
stc
dec
das
and
sbb
push
xor
imul
lret
sahf
testb
ljmp
xchg
adc
rcl
add
in
cmpsb
inc
xchg
lret
mov
inc
jp
push
stc
movsl
cltd
lock
das
aam
dec
dec
into
mov
pop
inc
lea
push
sub
loopne
jmp
ret
test
sahf
xlat
out
imul
cmp
mov
pop
cmp
in
add
or
pop
push
movsb
rcr
lods
adc
loopne
in
and
lea
loopne
pop
mov
mov
in
int
cmp
lahf
mov
repz
mov
orb
pop
push
fsubp
lods
testl
insb
xchg
out
fisttps
pop
repz
dec
jae
fcoms
add
jl
aam
je
mov
cmp
inc
push
push
mov
aam
les
mov
fisttpll
repnz
mov
cmp
outsb
fs
popf
add
cmp
clc
cmp
rcl
dec
xchg
mov
mov
dec
pop
out
push
sbb
add
addl
insb
lret
jo
mov
xlat
orl
enter
dec
add
xor
sub
add
jbe
pop
es
adc
stc
inc
mov
sub
stos
cwtl
or
pop
inc
push
fwait
scas
cmp
push
add
inc
daa
rorl
pop
jle
gs
cs
js
insb
maskmovq
divl
icebp
arpl
das
and
xor
add
sub
cs
imulb
mov
push
adc
cmp
mov
adc
outsb
xor
imull
dec
in
mov
cltd
push
mov
mov
push
bound
push
imul
mov
out
testl
fists
cmp
ljmp
repnz
ficoms
test
jns
fs
dec
mov
aaa
ds
mov
adc
scas
add
test
fcoms
arpl
shlb
aad
jp
aam
pop
std
sahf
or
push
imul
add
push
xor
pop
push
push
sbb
leave
loopne
fdiv
in
adc
add
lock
dec
test
inc
push
pop
push
fadds
lret
xor
xor
enter
inc
pop
and
fistl
out
cmp
in
rol
out
mov
dec
rclb
xchg
outsb
fldenv
mov
pop
out
cs
mov
mov
sbb
jge
jne
cltd
and
sbb
icebp
outsb
or
daa
mov
jp
push
cwtl
pop
cmp
out
or
or
jg
stc
adc
ret
inc
mov
into
sub
jo
scas
pop
loopne
mov
jg
jb
outsl
iret
nop
sbb
inc
mov
repz
mov
mov
jecxz
xor
add
fcompp
mov
xor
mov
ja
cmp
xor
mov
mov
sti
mov
cltd
idivb
jp
pusha
pusha
ljmp
in
mov
push
dec
sbb
and
inc
pop
xor
mov
jge
mov
jno
std
out
xor
fsts
dec
cmc
sbb
arpl
xchg
push
mov
sub
imul
mov
cmp
rclb
shl
jbe
sbb
add
fsubrl
mov
stc
mov
fcoms
push
xchg
xchg
xchg
sbb
in
inc
lahf
dec
push
lret
ljmp
arpl
mov
sub
gs
push
push
sbb
mov
lods
sbb
scas
mov
mov
into
aad
or
repz
ret
fldl
leave
jae
cmp
cli
mov
cmp
aam
popa
testb
jb
out
punpckhwd
mov
dec
sub
inc
and
sbb
fldt
mov
xor
fidivrl
mov
dec
sti
push
pushf
sahf
test
cmp
sarb
insb
push
push
mov
mov
xchg
jb
sbb
mov
cli
push
aad
jmp
lods
xchg
push
mov
btcl
rcll
popf
mov
cmp
add
js
subb
sub
jle
cmpsb
xchg
add
and
jge
shlb
shll
aam
xchg
sar
push
jecxz
int3
mov
add
int
lods
pop
mov
push
test
cmp
sti
xchg
mov
inc
fisttps
lods
inc
outsl
cs
adc
inc
sub
sbb
sbb
sbb
add
jle
jb
adc
sbb
push
scas
jb
mov
push
lds
mov
mov
adc
xchg
ds
dec
in
pop
test
sti
stc
in
jl
int
cmp
inc
lret
lods
jle
insl
dec
sar
push
call
jecxz
lods
mov
jno
push
mov
iret
push
rcrb
cwtd
or
xor
insl
in
faddl
movsl
or
lods
adc
mov
iret
mov
das
idiv
test
aas
out
push
inc
popf
les
and
test
movsb
dec
mov
push
adc
imul
in
lock
sbb
inc
shr
sub
les
add
push
mov
test
repnz
sbb
inc
xor
fsubp
inc
imul
and
pusha
cmp
ds
in
pop
jae
outsb
add
mov
cmpsb
repz
cmpsb
inc
scas
xchg
add
movsb
mov
das
push
adc
call
or
adc
loop
cmp
or
and
sbbb
orl
dec
cmp
mov
sbb
pushf
mov
mov
fbstp
shll
mov
push
xor
cmpsl
pop
sbb
mov
ficoml
pop
ret
mov
lahf
loop
xor
icebp
test
mov
nop
fnstsw
orl
push
and
shr
xor
shl
inc
dec
mov
cltd
enter
aas
push
inc
ds
dec
sub
pop
addr16
gs
mov
jle
sbb
pop
mov
inc
test
sarl
xlat
popa
cmp
enter
add
dec
mov
cmpsl
shll
popl
pop
sarb
leave
jecxz
lods
sub
pusha
je
pop
push
dec
jp
aaa
gs
mov
mov
mov
push
inc
sub
call
jae
pusha
in
inc
pop
mov
jnp
xchg
sub
cmp
js
adc
xor
mov
mov
jge
std
pop
jge
es
mov
adc
adcl
popf
mov
enter
insl
adc
cmp
dec
mov
and
repz
cmpsl
sub
scas
jge
xor
ljmp
dec
adc
mov
adc
fldt
mov
push
sbb
out
sbb
cmc
fwait
push
loop
mov
stc
movsl
xor
inc
negl
popf
or
imul
arpl
bound
fcoml
xchg
aam
push
mov
scas
fsubrs
sbb
mov
jne
sub
add
push
ds
sub
dec
jmp
dec
les
xchg
sbbb
js
inc
pushf
stos
cmp
sbb
pop
mov
test
movhps
jne
roll
in
sub
push
aas
adc
outsb
mov
sub
divl
jb
xor
mov
addr16
and
mov
int
mov
xor
xchg
pusha
movsl
ret
or
mov
sub
test
xchg
lcall
inc
mov
mov
xchg
mov
cwtl
jne
aas
inc
dec
stos
jmp
cmc
cld
jl
sahf
and
repz
int
cmp
fisttpll
cmpb
aaa
gs
sub
mov
mov
addb
mov
adc
fisubs
sti
xlat
sub
call
pop
test
outsb
mov
ja
pop
inc
or
sub
pop
movsb
add
xor
repnz
aad
dec
xchg
pop
pushf
orb
imul
je
lcall
xchg
jbe
jo
incl
pop
adc
es
or
inc
ss
fld
or
pop
mov
les
cmp
std
aam
push
fsts
jno
inc
int
pop
enter
scas
mov
xor
inc
pop
xlat
gs
xor
dec
sub
ret
jecxz
mov
aam
stos
fwait
das
hlt
and
lea
pop
int3
jns
cmpsb
incl
ljmp
cwtl
xchg
jecxz
cli
mov
cli
mov
rcll
popf
fisttpl
fiaddl
add
dec
or
lret
sub
pop
leave
push
or
pushf
inc
out
push
lcall
das
mov
push
imul
aam
cltd
jmp
mov
push
faddl
xchg
incl
xor
jl
mov
pop
jnp
negl
loope
out
push
ljmp
push
or
stc
fstps
imul
sbbl
mov
xorb
adc
or
je
or
hlt
mov
lcall
jge
adc
jmp
out
out
xchg
repz
pop
dec
mov
push
sub
and
cs
dec
xchg
and
cmpl
dec
mov
iret
lret
xchg
inc
fnstcw
or
icebp
fimull
add
lret
pop
rolb
mov
es
or
pop
mov
ljmp
mov
into
adc
jmp
lods
mov
into
push
xor
insb
aas
je
dec
add
add
popa
adc
test
dec
test
xor
repz
xlat
or
cld
cltd
fstpt
sahf
or
or
adc
scas
cmp
jo
jns
mov
lcall
jne
mov
les
out
inc
in
xchg
fstpt
je
xchg
dec
ss
sbb
xchg
sahf
cmc
enter
callw
loop
icebp
inc
pop
sub
add
insl
and
jno
pop
push
and
inc
xlat
push
add
ljmp
inc
es
push
or
or
push
mov
xor
daa
mov
mov
xor
test
out
out
sub
ja
jns
or
jecxz
rol
jle
jo
cmpsb
movsl
orl
mov
jg
cmpl
sbb
cld
std
mov
shrb
mov
add
mov
jns
movsb
xchg
mov
dec
adc
xchg
jmp
push
add
nop
sub
xchg
add
push
das
add
inc
dec
ret
cmp
enter
inc
cwtl
les
or
push
popa
ljmp
pop
out
test
sbb
or
imul
dec
pop
mov
das
push
mov
cs
rcr
xchg
xchg
lcall
jns
sub
popa
sub
dec
out
jl
push
adc
roll
stc
push
dec
inc
pop
push
inc
rorl
lods
pushf
imul
inc
repz
push
jge
dec
xchg
pop
push
adc
mov
test
das
cmpsb
xchg
fcmovu
cmpsl
add
inc
inc
movsb
addr16
xorl
mov
mov
das
push
and
mov
xchg
or
mov
mov
mov
and
or
loopne
rclb
and
add
dec
cli
and
test
stc
fistl
push
xchg
jmp
mov
insl
mov
insl
xor
dec
das
popa
addl
int3
in
sbb
or
js
jp
popl
lods
adc
movsb
fdivs
cmpsl
mov
dec
xchg
sub
aas
xor
or
insb
nopl
in
mov
lcall
addl
cmp
and
popa
fdivs
jmp
or
test
adc
lods
int3
lods
add
lods
cmp
jecxz
leave
scas
jbe
and
in
xlat
test
out
jo
int3
addb
ret
jno
lret
or
sbb
dec
mov
shlb
cmp
push
xchg
inc
inc
pop
xor
adc
les
je
mov
mov
jno
xlat
jbe
cld
fldcw
dec
cmp
mov
dec
aad
mov
mov
int3
inc
sbb
xor
bound
dec
lcall
add
inc
repnz
out
test
inc
jo
cmp
popf
loop
aaa
xchg
mov
mov
popf
sahf
ret
push
test
repz
lret
sbb
ret
inc
cmp
push
push
add
push
xor
das
daa
lds
loop
jne
jecxz
shl
mov
dec
push
loop
or
flds
ret
mov
fsubrp
add
aaa
mov
in
and
aaa
or
jp
jbe,pn
add
movsb
pop
mov
mov
sahf
in
out
xlat
pop
push
fdiv
out
addr16
cmp
ffreep
add
adc
jb
lods
rolb
cmp
bound
push
cmp
mov
mov
inc
fistpl
in
pushf
ret
dec
imul
out
cs
push
push
xchg
ds
sti
cmpb
and
inc
xchg
cmp
mov
mov
femms
add
inc
pop
cmpsl
xor
jp
out
test
xor
imul
pusha
inc
dec
add
das
dec
mov
or
das
pop
daa
out
xchg
lret
and
lahf
gs
nop
lea
jmp
jbe
jnp
xchg
and
dec
ret
leave
cli
lcall
mov
popa
fwait
clc
in
xchg
xchg
pop
mov
aas
xchg
mov
insb
sub
pop
mov
ret
mov
push
mov
sbb
in
adc
jb
fbld
divb
sbb
mov
test
mov
dec
pop
ror
fisttps
stos
pusha
popf
sahf
xchg
inc
inc
mov
sub
pop
int
test
popa
ljmp
lock
daa
mov
cmp
lods
ljmp
jge
jg
mov
adcb
ffreep
mov
mov
adc
int
call
inc
cmp
imul
frstor
fldcw
test
mov
adc
mov
sbb
bnd
and
je
inc
jne
and
jg
or
cmpb
lahf
in
out
inc
ficoms
in
adc
push
mov
or
push
shrb
or
mov
sbb
call
test
mov
add
xchg
and
adc
arpl
sahf
in
mov
neg
mov
insl
xchg
xchg
pop
addl
cmc
mov
jmp
in
aad
mov
jns
dec
enter
out
xor
xchg
nopl
imul
mov
cltd
stos
xchg
mov
popa
mov
mov
mov
gs
mov
pushl
dec
insl
int3
lret
dec
dec
add
dec
cmc
loopne
orb
mov
inc
cmpl
mov
or
xchg
cmp
sub
sbb
jge
into
pop
arpl
add
cmp
and
rorb
cld
in
pop
les
dec
pushf
mov
sti
mov
into
xchg
and
div
ror
cli
sbb
ljmp
push
hlt
inc
mov
pop
gs
insl
push
adc
ljmp
std
inc
in
je
sbbb
test
cwtl
jo
test
mov
push
mov
xchg
imul
bound
out
adc
inc
mov
push
test
mov
pusha
sub
pop
xlat
shll
mov
fistpll
movsl
push
dec
pop
jb
adc
pop
xchg
ds
cmp
dec
add
or
pop
lret
and
push
jne
jle
mov
push
nop
push
jecxz
jle
loop
mov
mov
out
adc
jno
out
xor
or
or
or
push
add
stos
jmp
das
adc
sar
xchg
push
push
mov
jbe
rclb
lock
inc
imul
bound
push
sti
out
mov
or
mov
xor
xor
mov
fwait
in
adc
sarb
repz
test
les
jge
push
ffree
mov
or
mov
loope
xchg
xlat
add
out
push
jge
or
mov
jbe
inc
fs
add
scas
or
jg
push
mov
add
sbb
xor
cmpsb
lcall
sbb
or
arpl
pop
push
inc
clc
fcomp
sub
fcmovu
outsl
inc
loope
ja
std
sbb
adc
jns
mov
sbb
sbb
xor
inc
and
mov
sbb
mov
fdivs
mov
sub
das
les
scas
push
add
jmp
mov
out
mov
and
sub
test
sub
mov
fisubrs
and
idivl
jge
and
rcl
enter
sub
adc
leave
std
mov
or
push
mulb
loopne
inc
pop
mov
insl
aaa
aas
pushf
std
and
mov
xchg
lock
push
jge
mov
push
jg
int
aad
loop
xor
sbb
dec
arpl
mov
xchg
xor
cmpsb
mov
inc
add
outsl
mov
inc
jb
fimull
pop
arpl
sub
mov
dec
adc
sbb
enter
fistl
xor
movsb
xchg
jg
mov
pop
in
movsl
pop
jle
es
xchg
xor
mov
inc
inc
fsubrl
faddl
test
and
and
add
push
cmp
mov
ret
incl
jle
pop
xchg
cmc
pop
dec
out
enter
mul
clc
es
xor
add
dec
push
test
dec
push
mov
insb
ret
mov
sbb
pop
das
outsl
mov
xchg
shll
adc
jno
mov
and
xchg
push
or
ret
lea
pop
add
loope
jo
mov
inc
ffreep
mov
xchg
xor
testb
mov
clc
outsb
mov
cltd
adc
push
in
fisttps
sub
std
shll
pop
mov
lea
jl
mov
insl
popf
jns
out
dec
addr16
xchg
add
aas
cs
pop
mov
push
addr16
sbb
xor
pop
add
or
jae
sub
in
cltd
pop
jno
les
repz
cld
push
aas
and
jo
loope
in
imul
cmp
pusha
xchg
push
ficoml
mov
push
fdivrl
cs
popf
inc
jb
lret
mov
fdivs
movsb
push
aam
bound
aaa
mov
inc
mov
loopne
jns
fbld
shll
pop
out
adc
and
rcll
sbb
test
jmp
inc
xchg
or
in
sub
pushw
repnz
popf
pusha
mov
mov
lds
dec
cmpsb
mov
stc
cmpsb
push
popa
mov
xor
push
loop
jnp
jecxz
imul
std
ret
push
jns
sbb
insb
stos
movsb
pop
inc
loopne
leave
in
mov
lcall
push
je
lret
inc
add
dec
outsb
icebp
test
dec
push
push
mov
jb
shlb
stos
xchg
and
fs
repz
inc
loop
out
inc
jno
mov
aam
inc
lret
jnp
jb
xchg
pop
lock
sbb
lcall
cmpsb
movsb
lods
pop
push
test
decb
or
xor
mov
mov
sub
fisttpll
jne
rcrl
int
sbb
into
mov
and
aas
lret
movlpd
int
and
cmpsl
or
mov
jno
push
shlb
ret
jo
int
ss
test
cltd
mov
ja
lea
or
dec
pop
mov
jae
xchg
mov
icebp
imulb
filds
into
sbb
mov
mov
testb
jno
xlat
inc
and
sub
mov
push
xlat
lcall
adc
inc
imul
shrl
shll
jp
sti
adc
bound
es
or
jb
jmp
cmpsl
xor
and
pushf
shll
decl
jp
fs
mov
push
cmp
mov
jle
pop
push
or
mov
jmp
bound
leave
out
lcall
fldt
xchg
leave
sub
mull
xor
or
sbb
pop
pop
icebp
adc
stos
fidivl
aad
clc
or
push
pop
pop
lcall
repz
lea
das
mov
sarl
fimull
jnp
push
cmp
inc
movsl
pop
cmp
aad
add
inc
xchg
cld
subl
mov
repnz
subb
fnstcw
mov
popf
sub
xor
decl
loopne
jne
cmc
xor
add
jbe
daa
je
std
sbb
aas
cmp
sub
pop
lret
push
dec
mov
jnp
dec
and
ss
cmp
jne
fldenv
pusha
std
das
adc
mov
mov
jge
pandn
mov
jecxz
dec
pop
mov
stos
or
sub
shrl
pusha
push
daa
lods
mov
fs
sarl
lock
add
inc
mov
nop
ds
mov
leave
filds
dec
mov
test
dec
push
icebp
pop
out
mov
mov
int
sub
pop
pop
call
jbe
loopne
andl
mov
loope
dec
sbb
jg
stos
int
inc
or
neg
sbb
out
mov
je
adc
add
fmuls
lcall
int
mov
fwait
cmc
sahf
mov
push
add
sub
pop
push
mov
clc
mov
mov
push
daa
push
pushf
adc
loop
aas
xorl
mov
in
icebp
stos
and
int3
in
push
clc
pop
push
cld
fmull
js
lods
push
or
ret
pop
ja
dec
clc
pop
test
fs
xchg
and
push
sbb
dec
add
roll
out
sub
adc
push
xor
and
shrl
enter
jno
mov
in
sahf
jae
rcll
fs
mov
xchg
cmp
stos
repnz
xchg
cld
aam
or
aam
and
cmc
aas
adc
cmpsl
mov
out
mov
pop
sub
add
pop
push
xchg
mov
call
pop
sub
inc
fwait
mov
clc
mov
push
imul
subb
xorb
jecxz
mulb
add
dec
lock
adc
dec
adc
test
nop
ret
push
add
fwait
int
lock
lret
jae
xchg
pushf
ljmp
arpl
add
push
xor
and
aad
lods
or
fists
lahf
loope
lcall
je
insb
add
xchg
and
pop
pop
out
enter
or
sbb
mov
push
jmp
int3
inc
lret
pusha
mov
lea
mov
out
outsl
mov
mov
jge
in
mov
fstpt
push
xlat
dec
je
mov
fdivrl
adc
push
sub
inc
mov
es
repnz
stc
daa
int
xchg
popa
cmp
sbb
jg
imul
xor
push
push
ret
inc
push
lock
je
mov
pop
movsl
imul
aad
movsb
dec
ljmp
xor
inc
jecxz
push
in
loope
lock
std
mov
sbb
inc
mov
call
loop
fistps
xor
cmc
mov
jno
fstl
xchg
pop
jne
int
ljmp
inc
and
jg
xor
and
std
inc
add
lods
push
dec
stc
repz
iret
icebp
stc
push
sbb
mov
xchg
mov
jle
mov
std
call
cmpsb
pop
loop
jecxz
mov
or
sub
xchg
ja
inc
jecxz
into
jle
cmc
mov
add
xor
aam
jnp
test
and
xchg
jne
xlat
adc
and
inc
and
adc
add
stc
jmp
js
lret
roll
fstl
lods
mov
mov
jecxz
add
cmc
cmpsb
sub
jnp
sbb
jbe
mov
sbb
gs
lock
and
push
add
out
or
ljmp
dec
hlt
and
cmp
out
imul
pop
pop
mov
fdivr
xchg
jbe
or
roll
in
sub
or
arpl
mov
int3
sbb
xor
sbb
loop
test
in
aas
push
pop
xor
stos
repnz
lods
push
repz
out
mov
inc
aaa
insl
pop
adc
xor
dec
pushf
sahf
jge
pop
xchg
mov
loope
leave
and
loope
insl
sub
lock
daa
sbb
adc
popf
or
cmp
repz
ror
inc
sbb
fimull
mov
xor
pop
jo
adc
fbstp
popa
push
xor
mov
int
push
leave
inc
xor
jb
mov
enter
ret
xor
inc
fwait
repz
jl
mov
mov
mov
mov
int3
fiaddl
shll
stos
mov
sub
mov
fs
cld
sti
ret
out
aad
pop
sub
arpl
xor
mov
pushf
fisubs
rcll
popf
sbb
jmp
jmp
cmc
inc
loopnew
dec
cmp
jnp
jecxz
mov
xor
lea
popl
inc
mov
fisttpl
pop
lcall
mov
mov
jo
popa
cmp
lcall
cmp
ljmp
pop
mov
in
insb
cmc
outsl
subb
sub
pushf
sbbl
in
add
shufps
push
add
dec
dec
mov
iret
cmp
and
movsb
add
xchg
cli
aam
and
outsb
push
mov
jb
fsubr
ljmp
rorl
xor
sub
shlb
cltd
jge
adc
mov
lea
xor
shll
addl
in
or
clc
mov
push
pop
sub
insb
inc
jge
aam
cwtl
adc
add
cmp
or
or
push
ret
mov
cwtl
comiss
cmp
lods
jl
or
mov
addr16
push
xchg
mov
jns
jle
pop
popa
movsb
sbb
or
dec
push
inc
into
push
addr16
mov
fmulp
fistps
pop
aad
popa
mov
cmp
jo
mov
mov
enter
sahf
xorb
fisubs
jo
sbb
scas
movsl
hlt
inc
push
fwait
xlat
sub
out
pop
aad
push
mov
lock
neg
jge
mov
adc
stos
nop
xor
cltd
inc
fistps
lret
out
jp
mov
xor
mov
jl
push
jl
test
jl
pop
and
mov
sub
or
jge
fnstcw
push
xchg
jmp
fdiv
pavgb
outsl
cmp
js
mov
outsb
jae
add
mov
dec
iret
xorl
leave
push
sbb
mov
xchg
leave
leave
cmp
jno
mov
adc
adc
adc
xchg
out
arpl
xchg
bound
aaa
xchg
jne
pop
cmpsl
rolb
push
or
enter
js
scas
pusha
psraw
pop
mov
pop
pop
jmp
cmpsl
sbb
mov
sbb
bound
and
outsb
adc
popf
cmp
pop
jp
test
fdivrs
xchg
adc
and
or
xchg
movsb
inc
sub
mov
dec
es
xchg
es
pop
xchg
outsl
dec
sbbb
sahf
xorb
inc
ret
jno
and
jo
jge
pop
xchg
sahf
out
cmp
push
sbb
loop
int
lds
je
rolb
imul
lea
aad
push
loope
lret
jp
fxch
jmp
pop
clc
and
ret
rolb
stc
fwait
std
in
sub
sub
push
inc
xchg
imul
or
icebp
lret
jae
mov
lcall
mov
jb
and
jecxz
loopne
mov
push
mov
fidivrs
test
rcrb
xchg
mov
sarl
inc
es
sub
cmp
repz
stos
ja
mov
dec
mov
inc
mov
push
add
gs
add
push
fwait
mov
mov
mov
add
repnz
sub
pusha
test
fmul
ljmp
xchg
adc
xlat
push
negb
popa
iret
rcrl
pop
stos
cmpsl
shrb
jp
nop
fwait
jecxz
sahf
inc
xchg
in
dec
scas
rcll
push
xor
out
mov
outsb
sub
lods
mov
mov
test
in
jp
aad
aas
cmpsl
inc
addb
andl
cmp
add
lret
hlt
and
xlat
fcmovu
aaa
mov
enter
mov
push
mov
lea
inc
mov
cmp
add
aad
jnp
jne
fldcw
mov
or
sti
shlb
mov
fstpt
and
enter
push
call
push
or
aas
xchg
push
mov
sub
enter
imul
mov
lcall
jne
outsb
fs
push
xor
add
flds
out
push
icebp
push
cli
cwtl
mov
add
jecxz
sub
in
dec
or
mov
sbb
dec
js
test
add
les
jns
or
fs
loopne
jne
pop
out
adc
cmc
test
idivl
xchg
ret
push
in
dec
data16
mov
test
in
lahf
xchg
inc
sub
jp
fistpll
xor
lods
lea
push
xor
add
mov
iret
call
loop
xchg
nop
sub
push
xchg
mov
rcrl
add
jge
shrb
jmp
adc
das
pop
rorl
dec
fisubs
push
cs
push
and
movsb
in
mov
into
jl
xchg
int
cmpsb
pop
shrl
test
cmp
xor
mov
mov
push
push
mov
push
test
clc
int
hlt
bound
inc
inc
or
lret
insl
sub
add
imul
or
insb
jbe
and
mov
jg
add
jb
jge
jle
jp
mov
test
popf
adc
shl
inc
imull
lods
cmp
cmp
pop
loopne
mov
adcb
imul
rolb
or
ja
xchg
out
add
in
les
mov
cmpsl
test
sar
adc
int
xchg
cmp
xchg
fdivl
sbb
mov
pusha
sti
sbb
movsl
pop
pusha
xor
pop
imul
jp
inc
notb
push
jmp
enter
jae
addr16
mov
add
mov
insb
mov
hlt
xor
or
inc
lds
bound
jg
jns
xor
scas
popf
adc
pop
or
push
in
stos
sbb
adc
or
loope
mov
or
popa
cmp
lods
lds
mov
fstpl
in
mov
push
push
ja
mov
call
pop
xchg
inc
mov
insb
aas
sub
mov
test
cs
mov
lcall
mov
xor
adc
adc
mov
push
ret
outsl
mov
iret
repnz
jle
test
mov
imul
xchg
arpl
adc
mov
loope
xchg
add
mov
fisubrs
and
push
mov
cmpsb
mov
lods
shl
in
ret
sarb
repz
cmp
mov
inc
lds
mov
cmpsl
pop
mov
jmp
lods
add
repnz
dec
jno
les
sbb
add
dec
imul
fiaddl
aam
jle
push
movsl
inc
adc
mov
inc
or
arpl
popf
repnz
in
and
xchg
mov
arpl
sub
fldt
pusha
in
inc
int
xor
fwait
jg
jb
xchg
stos
push
sahf
imull
mov
movsl
stc
std
jle
mov
add
vmwrite
shlb
inc
mov
outsb
in
adc
lock
std
jno
stc
dec
cmp
inc
fld
loope
mov
fisttpll
adc
bound
sub
ss
inc
jne
stos
rolb
sub
sbb
mov
sub
jp
xchg
aad
mov
jae
inc
rcrl
mov
sub
add
mov
xor
or
add
add
cmp
xorl
dec
into
mov
sahf
aaa
lea
push
mov
int3
lahf
cmc
pop
nop
pusha
std
aad
into
pop
mov
outsb
xor
xchg
lock
fiaddl
rcl
sti
repnz
push
stc
jg
jge
cmp
mov
dec
mov
filds
ds
jmp
push
xchg
mov
leave
jnp
adc
js
lea
mov
adc
pop
sbb
xchg
inc
xor
scas
out
shll
inc
xor
test
ss
aam
mov
aaa
jmp
mov
and
sub
fldcw
rcl
sbb
and
xchg
or
add
cmc
xor
lret
xlat
mov
mov
inc
mov
addb
mov
jmp
fs
inc
dec
mov
cmp
frstor
lea
dec
cmp
adc
push
xorl
jno
pop
cld
pop
xchg
outsl
rcrl
out
testb
ficomps
push
stos
gs
push
push
and
xlat
leave
add
enter
cmp
push
shlb
push
arpl
add
mov
jmp
cmp
stc
xor
xchg
nop
mov
addr16
sahf
loop
in
dec
aaa
repnz
into
push
popf
shr
es
adc
insb
jo
sub
mov
sbb
iret
adcl
loop
fcomps
ret
cmp
rolb
jmp
sub
enter
ss
mov
popa
add
or
cmp
repz
xor
inc
imul
dec
sahf
sub
xor
in
mov
cltd
fwait
out
mov
test
cmpsl
aam
jl
push
sub
sbb
and
push
dec
mov
cmpsl
push
lcall
sahf
mov
in
add
popa
shl
sub
inc
cmp
in
mov
aaa
callw
xchg
les
lea
sbbl
sub
lea
hlt
xchg
xchg
mov
push
das
stos
sbb
in
movl
adc
push
clc
cwtl
add
sbb
fcompl
iret
inc
lds
sub
ss
outsl
insb
sahf
out
pushf
test
xor
subl
push
push
and
mov
jnp
mov
outsl
sahf
mov
out
outsb
test
cwtl
dec
bound
int3
cwtl
add
aad
lret
mov
data16
or
ret
inc
jne
push
xor
add
pop
push
cmpl
repnz
mov
addl
inc
cmp
push
push
lret
cmp
sbb
lea
sti
or
sub
add
inc
lods
nop
cmp
mull
xchg
stc
pushf
jne
dec
test
aam
inc
cltd
add
cmp
test
cwtl
add
mov
mov
int3
lahf
push
sarb
loop
and
mov
and
in
xor
repz
repz
sub
shrl
inc
adc
push
push
icebp
sub
mov
je
cld
clc
xor
sbb
add
mov
in
ret
loopne
pop
mov
inc
movsl
push
ss
inc
leave
xchg
dec
ss
es
bound
lods
ja
stos
adc
jle
outsl
sar
add
fwait
and
pop
lcall
push
fbld
imul
jmp
adc
jbe
xor
jbe
icebp
ss
dec
and
hlt
fs
adc
fcoml
ficoml
cmp
push
mov
cmp
jns
xchg
pop
push
outsl
jno
mov
xor
cwtl
and
mov
pop
pop
add
or
mov
mov
cli
mov
dec
and
mov
push
jle
xchg
testb
adc
or
cmpsl
push
lea
out
or
addr16
ljmp
sub
jo
popa
dec
movsl
push
lds
push
mov
and
push
xor
add
sub
inc
cmp
mov
add
xchg
mov
xlat
xchg
dec
imul
sbb
sub
sbb
or
sub
jge
lcall
mov
imul
int3
push
lods
pop
mov
inc
filds
dec
mov
push
xlat
fimull
inc
sub
in
jno
push
or
dec
mov
leave
adc
push
shll
lret
orl
outsb
push
mov
jg
inc
xor
sub
pop
pop
mov
mull
fisubs
sub
enter
outsb
loope
or
push
and
std
hlt
dec
jbe
push
jmp
xor
jno
js
rcrl
push
repz
mov
mov
jge
inc
fstpt
in
popa
cmp
and
xor
add
mov
jno
out
arpl
in
idivl
or
dec
inc
inc
jle
mov
rcrb
cmp
push
repz
lods
sbb
dec
iret
scas
shll
rorb
jne
jl
pushf
lea
jmp
dec
inc
movsb
mov
or
popa
cwtl
daa
out
xchg
repz
mov
inc
add
push
cld
cmpsl
jae
pop
add
call
sub
sub
inc
mov
add
negl
je
es
pushl
loopne
cmpsb
mov
loope
das
outsb
enter
leave
push
sbb
movsl
in
mov
ret
test
jae
and
xor
mov
mov
mov
pop
xor
mov
out
fidivs
shll
outsb
jb
aad
adc
xchg
add
addb
daa
test
push
and
ror
lea
rclb
add
es
stos
xlat
cmpsb
xchg
push
sub
adc
dec
icebp
dec
push
loopne
dec
cmp
aad
mov
xchg
mov
sbb
dec
sub
dec
mov
stos
cmp
nop
xchg
lock
jb
sub
ljmp
inc
jmp
sub
bound
adc
xor
pop
jbe
push
ljmp
jl
dec
inc
sub
and
xor
mov
lods
xchg
push
and
cmp
mov
insl
cli
dec
inc
scas
push
sarb
mov
fsubr
pop
mov
stc
inc
or
js
dec
das
xchg
pop
imul
mov
aaa
jns
imul
jno
jo
or
ja
inc
in
adc
pop
add
jp
aaa
sub
loope
push
cmp
mov
in
imul
pop
in
dec
ret
push
scas
arpl
loop
push
sub
mov
inc
test
xchg
subl
lods
mov
jae
test
and
pusha
add
jne
pop
xchg
jno
aam
stc
xor
pusha
inc
jo
rclb
xchg
in
aas
cmp
xchg
ud1
jg
sbb
aam
lock
add
jecxz
popl
mov
hlt
fs
test
in
inc
pop
and
popa
cmpb
ret
dec
je
add
push
inc
mov
inc
outsl
sahf
mov
push
sub
mov
aad
dec
pop
sub
je
fdivrp
adc
or
cmp
sub
iret
popf
push
dec
cmpsl
push
mov
mov
test
cmpsl
sbb
hlt
stos
mov
aas
push
mov
pop
lock
pop
push
aas
sarl
push
scas
inc
adc
inc
cmp
je
inc
xchg
dec
ss
mov
push
divl
sub
jmp
mov
jbe
xchg
std
arpl
and
pop
stos
adc
push
nop
or
lret
rorl
jmp
sti
gs
and
jno
add
ret
mov
insb
jle
mov
xchg
loop
dec
pop
stos
mov
inc
dec
sbb
push
push
adcl
dec
xchg
mov
xor
mov
or
cld
xchg
and
cmc
je
pop
lods
or
mov
pop
das
push
std
jmp
out
pop
push
popa
dec
aaa
cmp
add
scas
add
js
loope
jo
or
les
sub
sbbl
push
dec
mov
jo
adc
and
minps
pop
mov
dec
mov
jmp
adc
dec
mov
cli
mov
jnp
stc
lret
lcall
jno
outsl
xor
mov
dec
dec
enter
cmpsl
popf
push
stc
and
mov
mov
add
std
pop
push
jnp
lock
mov
popf
inc
gs
sbb
xor
mov
pop
mov
add
std
xchg
scas
jle
loopne
or
movsb
repnz
ffree
ds
push
cmp
sarb
fdivr
jo
dec
fwait
or
mov
clc
aad
jmp
in
jo
add
mulb
mov
xchg
pop
inc
ret
inc
loopne
pop
addl
outsl
cmp
xchg
enter
fnstenv
movsb
fwait
dec
mov
add
add
mov
test
inc
lret
test
and
or
mov
push
sub
dec
sbb
push
stos
dec
andl
inc
loopne
ja
mov
sti
fwait
push
pop
and
jl
out
ljmp
aad
test
sub
add
hlt
mov
lret
adc
lahf
fildll
cmp
cwtl
mov
lods
mov
test
fs
cmpsl
nop
bound
dec
jae
adc
jbe
repz
or
test
dec
in
mov
inc
cmpl
xchg
inc
insb
mov
lds
das
xor
mov
test
inc
aaa
ja
xor
fs
mov
in
hlt
stos
andb
mov
cmp
cmp
dec
sahf
jae
aaa
mov
add
or
adc
cmp
lret
aas
add
repz
subl
jne
xor
push
sub
xchg
mov
lahf
in
arpl
movsl
jo
jmp
hlt
test
dec
push
jmp
gs
nop
lock
mov
aas
jl
sub
test
add
mov
outsb
nop
pop
inc
scas
jne
hlt
sbb
fbstp
enter
test
or
jo
mov
or
sub
mov
push
xor
pop
lret
cmp
fidivl
jge
sbb
xchg
daa
mov
push
mov
test
arpl
inc
mov
dec
cmp
outsb
xchg
mov
jmp
inc
add
fs
cmp
push
mov
ret
adc
mov
jge
shrb
rolb
mov
fildll
push
fucomi
negl
decl
xor
aam
fmull
cmc
pop
dec
ret
stc
add
lret
testb
xor
or
pop
movsb
sub
add
mov
inc
iret
outsb
xchg
ja
scas
sbb
cwtl
stc
add
fmuls
ja
outsl
inc
mov
pop
or
rcll
movsl
stos
pop
sahf
sub
adc
jg
hlt
dec
sbb
shll
imul
ljmp
pop
dec
push
in
jne
adc
pop
jns
out
cld
inc
orl
loop
cwtl
and
loope
sub
dec
out
mov
mov
mov
add
lret
mov
pushf
jbe
mov
xchg
xchg
xchg
push
int
push
int
subl
vpextrw
out
dec
fsubl
and
add
xor
cmp
adc
jno
add
lock
lds
mov
inc
lret
mov
outsl
add
std
inc
cmp
mov
jae
jo
data16
xchg
ss
and
nop
fdivrl
lods
or
int
fidivrl
ret
mov
nop
subl
loopne
fs
pop
push
xchg
push
cmp
insl
inc
inc
or
cmp
pop
push
jb
les
dec
cmpsl
pop
aam
imul
mov
nop
cmpsb
push
sti
xchg
jae
xchg
ds
repz
out
ljmp
sarl
flds
xor
add
fimuls
fucomi
cmpsb
scas
fstl
and
ret
adc
dec
or
mov
into
test
adc
jo
add
lods
lods
mov
pop
jnp
int
rcrb
and
outsl
mov
mov
and
sbb
clts
push
nop
cmpsl
repz
mov
adc
pop
pop
xchg
insl
test
or
inc
lahf
push
sbb
cmp
sbb
mov
bound
push
dec
push
mov
scas
mov
stos
stc
rcll
add
ja
sub
push
mov
xchg
mov
cmpb
shrl
mov
push
mov
insl
mov
out
add
loope
je
outsb
repnz
cmp
and
adc
mov
sbb
lcall
and
mov
lea
sub
jecxz
ljmp
loope
mov
fldt
dec
pop
or
int3
cltd
arpl
jo
test
call
test
jb
push
cmp
daa
loope
xchg
xor
fcmovnb
mov
pop
xlat
push
dec
sti
nop
add
jnp
adc
ljmp
pop
addr16
rcl
fnstenv
cltd
push
dec
call
jnp
xor
xlat
fbld
iret
sbbl
or
inc
jmp
ja
sbb
into
add
stos
push
fnsave
fcmovnbe
pop
fldl2t
mov
lcall
mov
mov
jno
in
jns
iret
dec
inc
xchg
cli
outsb
inc
jo
mov
jecxz
mov
dec
repz
push
mov
orb
xor
ljmp
or
in
aas
mov
iret
daa
movsl
mov
mov
xchg
mov
mov
inc
adc
stos
outsb
push
ja
mov
push
jbe
arpl
dec
xor
mov
hlt
sbb
pop
popa
es
cmp
aad
cmp
jo
aaa
shll
ds
xchg
jnp
bound
stc
dec
jno
out
out
mov
rclb
fisubs
lock
inc
sub
jl
jo
into
and
sti
andb
jmp
cltd
aad
pop
inc
cltd
add
loope
add
sahf
aaa
dec
pop
cmpsb
xchg
out
jno
pop
rolb
mov
iret
repz
xchg
leave
push
scas
std
mov
out
sub
cmp
xor
jmp
imul
pusha
or
fidivrl
dec
ret
movsb
outsb
in
cmpsl
jg
adc
pop
push
inc
xor
xchg
sti
clc
scas
mov
stc
test
jl
or
cmpsl
roll
jp
fld
shlb
mov
sbb
popa
push
dec
das
std
jnp
and
repz
fucomip
dec
and
adc
loopne
lret
cmpsb
add
mov
mov
dec
xor
fs
mov
sub
or
das
xchg
xlat
cmp
sahf
pop
sbb
sub
mov
popf
push
dec
xor
cld
pop
idivb
out
jae
cmp
popa
push
mov
pop
xorb
mov
push
insb
sub
push
mov
xor
lods
inc
and
test
cmpsb
xchg
movsl
movzwl
sub
and
or
mov
lcall
inc
adcl
ds
cmp
push
negl
addr16
xchg
into
mov
lahf
icebp
jbe
mov
and
dec
fistps
or
jg
pop
cmp
mov
nop
and
ficomps
jmp
inc
jmp
ds
shr
sub
scas
sbb
mulb
mov
push
mov
jb
cmp
mov
push
mov
test
fbstp
pop
mov
jecxz
ja
jb
in
js
mov
sub
in
mov
lret
xchg
mov
btr
cmp
out
pusha
in
pcmpgtd
pop
push
pushf
jge
cwtl
mov
ljmp
fimull
hlt
inc
in
pop
jae
std
shlb
cwtl
popf
push
iret
mov
mov
mov
xchg
fwait
in
aam
pop
adc
lahf
dec
jge
push
fists
call
cmpb
jns
push
jae
cmp
imul
das
xchg
push
int
push
decb
fsubl
dec
std
push
fdivrs
hlt
scas
cmp
mov
pushl
push
sarb
ljmp
das
sbb
lds
push
aad
movsl
sbb
into
or
mov
rep
sub
int
sub
lods
pop
xchg
xor
shl
xchg
push
fbstp
incl
lret
push
lods
jnp
in
movsb
sbb
dec
movsb
loope
jnp
push
or
inc
addr16
dec
mov
movsb
push
jnp
ret
iret
movsb
mov
xchg
lods
adc
neg
xchg
jmp
fsubl
lods
jns
xor
push
pusha
push
call
sahf
jp
movsb
int3
outsl
movsl
jp
addb
outsl
sarb
dec
insb
mov
adc
dec
mov
sub
cld
call
mov
stos
jnp
jnp
inc
push
add
mov
fwait
mov
dec
pusha
sti
sti
and
dec
xchg
adc
stos
add
mov
xchg
aas
aad
push
int3
mov
pop
pop
jne
dec
adc
icebp
add
imul
ds
and
lret
cmpsl
jns
in
pop
jbe
adcb
lods
jge
pop
mov
push
popl
div
jns
in
and
adc
das
push
push
aad
sbb
pop
mov
mov
inc
mov
movsl
movswl
lock
test
adc
loope
inc
roll
jmp
repnz
lret
xor
and
push
ror
mov
push
push
sub
cmpsl
add
arpl
and
outsb
inc
mov
add
cmp
test
dec
push
cld
and
daa
fimull
push
iret
xchg
lock
jne
int3
addr16
ja
mov
mov
rcrl
sub
cltd
dec
ret
or
push
xlat
mov
pop
lods
mov
fcoml
subl
push
enter
repz
mov
ficoms
mov
imul
cmp
movsb
pop
aaa
inc
cmpsl
pop
jle
adc
mov
push
xor
xchg
loopne
dec
daa
stos
mov
call
dec
mov
push
xor
daa
and
push
int3
dec
mov
les
dec
mov
xchg
mov
nop
add
dec
mov
das
cmp
insb
in
stc
push
pop
test
xchg
push
clc
adc
in
ja
shlb
adc
pop
inc
adc
inc
xchg
aam
lods
dec
lods
popl
sbb
and
lahf
lods
and
outsb
cmpsb
sbb
mov
aad
mov
inc
push
lock
lods
mov
sbb
in
xor
pop
aad
in
sbb
push
jmp
cwtl
in
scas
into
push
rcrl
imul
mov
repz
sub
cmp
movb
inc
pop
pop
push
inc
lock
fbstp
cli
stos
ds
shlb
mov
or
and
push
push
js
cmp
pop
nop
sub
inc
dec
in
mov
xor
add
daa
mov
data16
std
jmp
imul
les
popa
jecxz
jp
jb
mov
jle
cmpsl
fwait
in
mov
pop
add
insl
stos
mov
add
sub
xor
xorb
xchg
inc
daa
iret
cmp
aad
add
cwtl
arpl
xchg
mov
cmp
xor
pop
sub
xlat
and
std
lea
popf
lock
push
jo
gs
das
pop
dec
sahf
sbb
push
nop
xchg
xchg
ja
insl
loop
dec
mov
jns
fldcw
or
or
mov
mov
sbb
fmuls
lahf
in
cmp
faddl
psubusb
xchg
aas
pop
or
lahf
test
aad
or
inc
rorb
mov
in
push
adc
in
hlt
popf
nop
aad
mov
jo
and
fildll
xchg
or
or
lods
and
xchg
aad
pop
and
ljmp
mov
repz
mov
rcrb
mov
or
in
xchg
imulb
loop
lahf
inc
in
jmp
or
cld
in
pushf
mov
and
jge
xor
jp
mov
test
dec
mov
loope
incl
mov
xor
dec
out
push
lods
bound
andl
mov
mul
add
sbb
inc
adc
imul
aaa
pop
or
push
leave
mov
pop
mov
lods
outsl
or
adc
mov
or
imul
cltd
mov
and
push
cmp
adc
pusha
sub
scas
aam
icebp
test
or
jmp
add
or
cld
jnp
jge
xor
xchg
mov
clc
mov
inc
cmpb
rol
jae
cmp
or
xchg
test
pop
test
xchg
pop
arpl
inc
jmp
out
shlb
pop
sbb
mov
add
aas
cli
dec
movsl
xor
movswl
mov
push
loopne
enter
daa
and
adc
shrb
cmp
negb
mov
mov
into
out
insl
adc
test
nop
push
lret
jp
xor
arpl
nop
xchg
addr16
jecxz
popa
sub
test
rcll
into
jecxz
insb
mov
test
mov
cmc
dec
adc
rclb
hlt
xorl
or
xor
mov
add
in
call
lcall
or
inc
icebp
lret
stos
inc
inc
dec
in
sbb
out
popa
and
sub
push
jecxz
and
out
and
and
sub
pop
sub
mov
mov
scas
iret
cmp
cld
push
cli
js
or
or
sub
push
or
pusha
std
inc
and
adc
xchg
insb
mov
push
adc
mov
ja
inc
test
mov
push
mov
xor
sub
sbb
es
xchg
sbb
mov
inc
sahf
xchg
ret
jno
test
push
jno
cwtl
leave
sti
insb
inc
push
roll
imul
mov
mov
in
add
mov
in
xchg
mov
inc
mov
aad
int3
rclb
pop
xor
aas
aam
pop
cmp
rorb
push
andl
cltd
mov
add
pop
fcompl
lock
adc
into
mov
scas
ficomps
aaa
loop
lret
in
and
loop
or
pusha
cmp
push
mov
movsb
mov
cld
dec
or
dec
inc
lahf
fcoms
add
inc
fsubs
decl
ret
push
in
fbstp
push
and
or
pop
pop
or
in
shll
xchg
aad
mov
inc
xor
bound
sti
fs
in
sub
jbe
negb
lods
or
cltd
mov
out
sub
lea
mov
lret
xchg
outsl
sbb
adc
adcb
cmp
daa
inc
adc
xchg
frstor
inc
pop
subb
jo
loope
sbb
sahf
mov
xchg
xchg
ds
notb
arpl
das
ja
jmp
push
out
push
movl
xchg
loope
mov
sbb
movl
call
xor
mov
push
in
xor
mov
adc
sub
sub
push
and
enter
inc
pushf
adcl
mov
or
xchg
cmp
jg
mov
push
xor
iret
jo
aam
or
pusha
mov
xor
xchg
fistl
adc
sbb
gs
mov
frstor
je
push
pushl
cmp
or
rorb
inc
inc
lcall
stos
jno
adc
dec
adc
xlat
fmuls
inc
add
sub
and
insb
movsl
and
xchg
and
arpl
fadds
or
add
xchg
js
mov
xchg
std
mov
and
and
or
cmp
roll
gs
mov
push
mov
bound
xchg
idivl
in
jo
rorb
dec
add
mov
pop
xor
lret
shll
cltd
movsl
sahf
mov
ret
pop
mov
pop
leave
or
jns
ss
mov
or
sub
xor
mov
je
data16
enter
sbb
aad
push
arpl
int
hlt
shlb
cmp
jnp
and
mov
test
jecxz
or
into
and
lahf
outsb
cmp
sub
push
lcall
bound
icebp
xchg
lock
or
and
ret
jns
sub
pop
cs
mov
cmp
aam
bound
lahf
aam
cmp
outsl
lods
not
lds
fucomip
mov
cmp
xchg
mov
adc
cwtl
out
add
mov
xchg
fs
int3
push
add
les
lret
pusha
or
push
inc
roll
cmp
mov
fdivr
fyl2x
into
into
pop
and
and
adc
test
sbb
or
pop
stos
loopne
dec
inc
mov
dec
xchg
jnp
lret
sti
lahf
leave
mov
pop
cmp
cli
in
cmc
mov
jmp
stc
or
sub
push
xor
popf
dec
xchg
jg
sbb
push
cmpsl
fcomi
pop
jne
ret
mov
dec
outsl
mov
xorb
loop
xchg
test
cmp
jb
aaa
push
fwait
push
call
add
push
enter
cmp
cmpsl
mov
in
push
loope
xorb
mov
inc
lock
push
ret
clc
or
fldt
mov
push
pop
push
ss
test
mov
xchg
cltd
jl
mov
loopne
sub
scas
cmp
add
xchg
jo
shl
xor
lret
push
outsb
in
push
aam
movl
pop
and
leave
lahf
js
mov
enter
mov
lods
pop
push
out
ret
insb
xor
pop
xchg
jle
mov
or
sets
xlat
sub
jnp
dec
and
pop
jle
je
xchg
out
hlt
mov
lods
xchg
jp
mov
and
ds
sbb
insb
aam
jmp
sar
xchg
add
into
xor
xor
imul
scas
inc
push
arpl
xor
jl
dec
das
sub
lods
adc
jns
xchg
mov
pop
and
and
sub
or
rclb
push
std
xchg
lahf
cld
iret
push
xchg
sar
mul
and
aas
push
sub
xor
mov
outsl
adc
pop
aad
das
xlat
shlb
out
mov
in
inc
dec
xor
fldenv
out
mov
cmp
and
das
popf
mov
cmp
or
mov
test
subl
lret
push
pop
or
pmaddwd
nop
jecxz
test
lea
out
inc
test
cmp
sbb
xchg
sub
insl
jl
add
andl
push
sahf
in
mov
sub
ss
fwait
loope
in
cmp
dec
pop
sub
popf
jbe
cmp
cmp
pusha
mov
adc
xlat
scas
imul
out
sub
jg
add
lea
cmp
arpl
mov
hlt
jmp
mov
mov
add
jp
jno
sub
nop
sti
mov
stos
jnp
imul
data16
push
push
inc
fwait
sahf
jmp
mov
push
inc
mov
dec
jge
mov
int
fwait
fwait
pop
add
hlt
pop
in
and
xchg
inc
aam
cmp
repnz
pop
push
lock
mov
sbb
mov
inc
and
jne
leave
sub
aam
sbb
dec
adc
fadds
jg
lock
mov
leave
fwait
push
cmc
icebp
pop
cld
movsl
mov
scas
and
adc
mov
mov
xor
mov
lahf
cwtl
pop
bound
les
shll
jb
repz
pop
mov
push
testl
pop
repz
or
adc
hlt
add
test
mov
push
hlt
lods
aaa
movsb
nop
fnstenv
jno
addr16
sub
test
sbb
fcoms
cmpsb
add
mov
xor
enter
xchg
sbb
jle
inc
cmp
mov
jg
scas
jns
andl
ret
divl
mov
icebp
movsbl
dec
pusha
loopne
sub
mov
cmp
mov
gs
mov
int3
clc
pop
jns
gs
or
push
jg
call
jne
ds
push
cmp
jg
xchg
lcall
scas
pop
popf
push
aas
pop
jnp
xchg
es
dec
cwtl
pop
out
out
inc
mov
outsb
lret
enter
inc
sbb
mov
cltd
push
enter
enter
ret
movsb
pop
mov
adc
pop
mov
pop
xchg
bnd
popf
insl
das
mov
cmp
subl
loop
mov
or
xchg
mov
repz
pop
fisubs
xchg
pop
inc
andnps
push
movsb
gs
jl
imul
inc
aam
and
iret
pop
jle
xchg
dec
in
xchg
cld
or
xchg
aaa
bound
fisubs
jae
add
add
cs
push
sub
mov
fisubrl
push
pop
shrb
sbb
mov
xchg
mov
lds
mov
mov
addr16
push
xor
cli
sub
xchg
add
jecxz
push
push
dec
sahf
sbbb
xchg
dec
roll
push
subl
psubusb
mov
ret
adc
hlt
out
ds
add
imul
xchg
inc
ljmp
cmp
ljmp
dec
lret
xchg
imul
xlat
fwait
lods
scas
lods
test
cmp
sbb
mov
sbb
push
insl
cs
jecxz
fbstp
mov
hlt
mov
movsb
push
dec
and
cmp
cmp
jmp
pop
clc
and
inc
nop
pop
dec
add
stc
aam
dec
lret
gs
mov
rcrb
in
ja
scas
mul
cs
pop
test
scas
pop
ficoms
mov
inc
mov
mov
in
ja
mov
or
inc
sub
rcr
arpl
mov
xchg
in
inc
inc
and
std
pop
std
out
push
push
xor
test
lret
adc
fiadds
test
jae
push
pop
dec
clc
pop
test
in
push
mov
xchg
sbb
fnstenv
cltd
dec
cmpsl
lret
and
pop
jae
or
in
ljmp
pop
cmp
dec
test
adc
icebp
xor
pop
ret
mov
mov
sbb
rcrl
add
jo
pop
lock
push
or
xor
jle
call
or
xchg
es
fidivs
cmp
cmpsb
mov
sbb
decl
mov
add
sti
mov
mov
stos
mov
push
js
and
dec
cmc
mov
enter
inc
jl
xor
in
fldt
ret
dec
outsb
mov
xor
andb
ret
add
mov
stc
ja
lret
mov
jne
push
xor
mul
add
popa
jne
lcall
aad
loope
scas
subb
mov
xchg
test
test
xchg
stc
inc
fldenv
add
fdivrl
js
mov
ds
push
xchg
bound
rolb
arpl
ror
pop
enter
adc
outsl
enter
inc
out
xorb
lret
mov
test
lods
call
add
call
mov
test
pushf
ja
push
stos
std
dec
das
jb
bound
dec
fisubl
iret
jne
cmp
and
mov
sti
dec
mov
cwtl
in
cltd
dec
cmp
jnp
ret
sub
hlt
and
rcrl
mov
mov
mov
rclb
ret
adc
out
fidivrl
jns
xor
ret
lahf
decb
pop
or
ud2
xchg
cmpsb
fimuls
mov
lock
inc
ror
and
in
mov
sar
dec
aad
sub
aad
ja
cmp
pop
scas
in
lods
pop
sub
popa
dec
push
cmp
push
cli
xor
popl
cmp
enter
icebp
adc
lods
sbb
or
in
lea
loopne
mov
fists
fidivrs
push
stos
adcb
mov
js
cmp
and
outsb
and
cmp
pop
in
ret
mov
pop
sbb
cmp
sbb
inc
dec
js
inc
cli
push
jns
jp
fnstcw
shrb
mov
jbe
and
mov
xchg
test
jmp
data16
mov
mov
pop
mov
sbb
orb
in
ljmp
jmp
jl
or
popa
xchg
adcl
and
faddp
and
xor
js
rorl
jp
jns
lods
icebp
fldcw
fsubrs
gs
inc
out
insl
cwtl
fldt
imul
xor
adc
pop
dec
adc
mov
pop
jge
mov
xchg
movsl
sbb
test
push
cmp
dec
es
lcall
and
pop
pop
cli
xchg
pop
ret
sbb
lds
or
cmp
sub
mov
ret
pop
shrl
pop
add
in
push
push
call
faddl
shrb
int
xchg
inc
outsb
test
lret
cltd
mov
loop
sti
mov
ret
cld
sub
xchg
into
cmc
mov
cmp
sbb
les
icebp
xor
dec
in
loop
clc
mov
push
push
inc
or
and
xor
std
mov
dec
js
pop
and
aas
and
mov
xchg
jl
xchg
adc
lret
or
inc
jne
aam
es
in
mov
stos
jecxz
lods
mov
cli
jmp
in
lea
jnp
jo
lock
inc
push
testl
sub
cmp
cmpsb
mov
test
pop
out
ret
sbb
cmc
mov
ss
call
int3
sbb
mov
outsb
hlt
dec
popf
xor
in
sub
insl
std
subl
mov
out
sarl
daa
fwait
mov
cmc
mov
jl
xchg
test
test
and
adcl
xor
pop
or
out
xor
ret
aaa
bound
mov
push
fdivp
std
cmp
pop
push
or
aas
fldt
mov
rcrl
jge
insl
loop
addb
jp
or
in
cmp
jle
sbb
mov
shr
pop
lea
movsb
lea
sbb
xor
and
lods
xchg
push
mov
out
mov
loope
sbb
aad
and
in
cli
dec
jno
ret
sahf
in
sub
pop
mov
in
fidivrl
outsb
mov
jg
or
cwtl
inc
test
scas
sbb
pop
orb
sub
push
aas
xchg
dec
inc
sub
icebp
incl
adc
test
cmpsl
scas
cmpsl
cmp
push
mov
dec
xor
sbb
xor
addr16
adc
aas
aam
jmp
shlb
fs
and
shlb
pop
xor
cmp
mov
in
mov
fists
dec
mov
imul
push
rorb
xchg
pop
out
das
pushf
in
cmp
call
or
push
mov
mov
pop
lahf
mov
pop
cli
rcr
les
nop
call
jl
push
test
mov
add
jge
imul
int3
sbb
add
sarb
xchg
jp
movsl
clc
out
popl
inc
repz
mov
mov
xchg
fwait
dec
dec
cmp
pop
xchg
je
into
dec
mov
cmpsb
in
mov
pushf
sbb
testl
sbb
sub
cltd
lahf
fwait
xchg
shlb
fidivl
iret
sub
cmp
inc
sahf
rcl
xor
stos
mov
jnp
jae
lock
cmp
clc
imul
movsb
push
xor
sub
sbbl
bound
jge
mull
lock
add
pusha
mov
adc
cltd
push
clc
inc
es
popf
lret
jb
pop
cld
mov
mov
xor
lods
lods
sbb
xchg
shll
cwtl
jp
shl
mov
out
test
xor
lret
loopne
and
icebp
push
cmp
dec
mov
scas
push
pop
mov
cli
dec
jecxz
mov
filds
arpl
lret
inc
nop
push
xchg
adc
stc
out
stos
xchg
lret
out
mov
sbb
inc
add
jecxz
sbb
repz
mov
add
cmpsl
scas
push
mov
push
push
pusha
rep
stos
je
lods
xorl
fwait
xchg
ss
je
fbld
cmp
or
jg
leave
fwait
sbb
add
push
and
push
inc
add
mov
mov
xchg
ljmp
outsl
sub
inc
sub
imul
pop
test
jae
mov
movsl
ds
popa
xchg
test
push
mov
aaa
rclb
and
jmp
xchg
out
adc
cmp
ja
cmpb
jns
or
jecxz
push
adc
negl
out
test
iret
fmul
cld
test
dec
push
test
cmp
push
bnd
mov
dec
ss
cmp
repnz
xor
lea
xor
xchg
xor
xor
dec
ljmp
ficoms
fnstenv
int
mov
and
nop
push
std
sbb
outsb
inc
push
test
mov
push
add
test
mov
pop
xchg
aas
iret
bound
testb
cmp
mov
std
outsl
mov
repz
sbb
push
in
sahf
shlb
inc
push
fnstsw
pop
loopne
or
outsl
out
adc
loopne
clc
outsb
pop
loop
les
das
add
loope
fimull
dec
mov
push
inc
testl
je
adc
mov
push
cmp
jo
in
add
mov
push
enter
pop
mov
out
add
jmp
mov
sub
mov
sbb
jb
in
push
daa
mov
lret
add
into
push
push
pop
xchg
jge
imul
adc
xor
push
aad
jg
or
imul
rcrb
dec
pop
jg
sbb
out
mov
bound
pop
add
pop
nop
and
xor
aaa
cmp
ja
flds
lea
call
ret
js
aam
mov
dec
adc
mov
jne
xchg
lahf
mov
cltd
sti
leave
inc
xchg
pop
aad
dec
movsl
cmp
sub
mov
jne
lods
popa
cs
cmc
jo
or
int3
jo
scas
add
sub
xor
dec
adc
lret
imul
dec
cmp
les
sub
lahf
jle
ficoms
test
pop
xor
and
adc
dec
jl
jne
sbb
cmc
test
in
setns
cli
and
mov
mov
and
aaa
dec
ja
push
fnstcw
stos
dec
fnstcw
dec
jg
mov
adc
int3
adc
sbbl
out
xor
push
hlt
mov
in
dec
test
popf
sahf
and
jnp
mov
adc
adc
loope
push
xchg
into
push
cmp
adc
inc
dec
leave
sub
fwait
sbb
mov
add
movsb
call
in
ja
inc
xchg
jnp
cmpb
loop
add
jnp
iret
push
and
add
dec
outsb
mov
bnd
stc
and
or
mov
hlt
movsl
dec
imul
or
ret
std
lods
fucomip
cwtl
mov
fisttpl
in
mov
push
andl
sub
add
jmp
adc
or
ja
mov
inc
push
cmp
pushf
mov
popf
push
cmp
jae
mov
pop
shl
adc
ret
lret
cmp
cwtl
mov
mov
mov
cmp
mov
mov
lods
lcall
pop
lods
movsl
adc
inc
daa
lret
andb
cwtl
adcl
movsb
sbb
mov
cmpsb
or
call
subl
and
or
outsl
je
into
xchg
frstor
push
shl
adc
jmp
insl
and
jns
push
pop
mov
mov
out
jo
push
mov
push
jnp
xchg
or
cmp
jb
movsl
cmp
pop
rcl
or
fwait
sbb
mov
mov
shlb
das
sbb
enter
mov
into
subb
ja
imul
sub
jns
jecxz
addb
jo
stc
pop
ret
inc
loop
sbb
cltd
iret
loop
xor
repz
addr16
aad
sub
rcrb
mov
imul
cmp
mov
je,pn
roll
mov
xchg
fsubs
shrb
enter
push
imul
negl
insl
xchg
jno
fists
mov
sub
ret
push
aas
dec
xchg
das
out
shrl
mov
les
inc
jge
cwtl
cmpb
aas
lods
jl
push
xor
cmpsb
ja
cmp
in
sbb
pop
mov
and
adc
stc
jno
xor
cmp
pop
dec
cwtl
cli
jne
cmp
lahf
push
je
roll
orb
jb
lret
mov
stc
jbe
adc
jo
sub
jno
jae
inc
mov
cltd
cmp
outsb
lea
shrl
xchg
ficomps
xchg
iret
adc
jmp
add
outsl
push
insl
cmp
enter
push
roll
xchg
in
ffree
dec
jo
mov
pop
arpl
clc
popf
es
mov
int
ss
xlat
insb
xchg
push
scas
mov
loopne
ret
push
cmp
adc
movsb
idivb
pushf
xor
mov
dec
fcomip
out
cld
pop
cmp
jp
sbb
mov
int
cs
cmp
int
movsl
std
mov
repz
lret
sub
cltd
std
inc
inc
scas
ljmp
fimull
lods
mov
scas
mov
je
insl
xchg
dec
pop
pushf
in
cmp
loope
sub
adc
sub
negl
jno
mov
idivl
icebp
mov
imul
popf
xor
pop
arpl
adc
int
imul
addr16
mov
loop
test
push
sbb
ret
rorl
dec
dec
stos
fdivrp
mov
gs
mov
rcrb
jb
adc
xchg
sbb
sub
fistl
imul
mov
ja
and
adc
sahf
xor
and
movsl
dec
mov
inc
add
and
push
lock
ljmp
mov
jmp
mov
ds
mov
pop
fadds
sub
lock
in
mov
jl
sub
or
push
testl
data16
add
add
movsl
mov
ja
jmp
lds
jnp
and
jnp
cli
cmp
ja
adc
loopne
ljmp
xorl
in
mov
push
mull
inc
xor
sahf
add
jnp
push
cmp
in
rolb
pop
loope
push
mov
dec
xchg
xchg
addr16
push
mov
in
scas
inc
popa
stc
cmpsl
inc
repnz
add
push
adc
cmp
fldenv
xor
js
mov
scas
test
clc
xor
movsb
mov
jne
rorl
mov
clc
inc
inc
jne
push
loop
test
pop
testl
movsl
xor
inc
mov
popa
pop
lods
add
js
pop
and
ficomps
xor
repz
leave
rolb
push
push
inc
lret
mov
cmc
or
rcrl
mov
pop
push
in
jae
mov
aaa
jp
movb
add
iret
addr16
inc
out
and
pop
leave
mov
cmp
cmp
clc
cltd
ret
inc
rcrl
sub
mov
cmpsb
xor
cmp
mov
push
adc
fstl
shlb
test
leave
pushf
loope
insl
cltd
mov
stc
leave
add
fstl
insb
call
test
lock
stos
in
push
dec
sub
enter
mov
or
mov
push
popa
push
stc
loopne
insb
inc
sbb
lods
and
dec
cmp
mov
or
jg
adcl
sbb
ret
and
jb
std
dec
adc
sbb
inc
mov
imul
insb
jb
sub
mov
mov
jecxz
push
repz
loopne
jp
adc
repnz
mov
ret
add
mov
jno
icebp
mov
inc
scas
fildl
stos
xchg
fisubrs
popa
std
or
iret
outsb
daa
lods
xchg
pop
push
out
mov
cli
daa
gs
popa
push
addr16
push
orl
xchg
mulb
jg
cmp
data16
mov
iret
jg
repz
aas
divl
gs
int
rolb
xchg
or
pop
mov
hlt
mov
jne
cmpb
sub
aas
ss
pop
dec
cmpsl
mov
cmp
push
xchg
xor
aam
xchg
cs
dec
les
test
pop
pushf
out
lret
cld
dec
dec
xorl
loope
xchg
push
imul
pop
mov
ret
sub
jb
std
ds
aaa
mov
mov
scas
in
test
pop
pop
mov
pop
push
hlt
push
jo
imul
mov
mov
mov
rcrl
or
cmp
sbb
clc
lock
in
loope
xor
mov
and
push
sub
aaa
xor
icebp
cwtl
notb
cwtl
cmpsb
or
push
out
in
lahf
in
out
std
sbb
and
in
jo
lret
fnsave
sub
mov
and
pushf
sbb
push
pop
cmp
push
pop
int3
mov
lds
sbb
out
inc
adc
sub
sbb
es
sbb
frstor
inc
and
js
int3
mov
adc
push
and
mov
std
sub
cmc
mov
inc
sub
loopne
loop
aam
sahf
sub
ja
jo
arpl
daa
and
out
sub
inc
loope
xor
enter
int3
cmpsl
lret
xor
lds
jge
xor
pop
nop
mov
lock
mov
outsl
and
xchg
jno
push
and
mov
push
mull
pop
divb
data16
dec
aaa
mov
adc
mov
inc
mov
fistps
divl
jp
cs
and
test
fwait
repnz
shrb
xchg
sbb
mov
mov
pop
sbb
and
inc
and
fwait
adc
pop
or
adc
jo
push
mov
pop
mov
pop
gs
leave
xor
scas
jp
sub
dec
mov
imul
cmp
insb
pop
pop
inc
ja
pushf
mov
rorl
repz
lods
push
popf
lods
fucomp
cltd
repz
out
mov
pop
push
lret
dec
mov
popf
mov
jae
adc
rorl
jbe
inc
in
fcmovnb
dec
movsl
test
mov
out
xchg
xor
jo
call
ss
and
das
xor
or
xchg
repnz
pop
sar
cmp
nop
xor
add
jl
ret
jmp
lret
cmp
xor
add
cmc
scas
int3
lea
insl
or
mov
xchg
push
jl
xchg
sbb
jnp
jo
pop
je
cmpsb
aas
mov
cltd
xchg
mov
inc
add
insb
or
inc
pop
mov
mov
movl
push
pop
jmp
jo
enter
not
mov
std
hlt
mov
add
aas
stos
test
and
ret
fsub
mov
jge
cwtl
dec
addr16
pop
cmpsl
call
sub
stc
pop
enter
mov
or
jnp
rorb
adc
divl
or
lret
mov
es
ds
adc
popf
fprem
push
mov
mov
mov
mov
loope
add
repnz
push
fidivrl
aam
enter
push
mov
mov
sub
mov
pop
outsl
test
das
cmp
push
jp
into
test
xor
xchg
sahf
adc
adc
js
bound
and
adc
std
outsb
dec
jge
add
cmp
push
test
aad
test
xor
mov
jecxz
loope
outsl
aas
push
push
pop
jl
test
fstp
pop
out
xor
pop
push
subb
mov
xor
jmp
cmp
sbb
in
mov
in
inc
insl
sbb
add
lret
adc
loop
xchg
sahf
imul
fcmovu
aad
xchg
pop
mov
fwait
pop
cmp
adc
add
scas
sub
inc
int3
push
out
test
out
jbe
mov
int3
lahf
fsubrl
addr16
or
nop
mov
pusha
mov
fidivrs
adc
mov
nop
jne
lock
push
out
mov
or
jecxz
rorb
in
sbb
jno
xchg
out
sbbb
cltd
cli
cld
outsl
sub
mov
xchg
mov
inc
lret
in
dec
lahf
mov
add
pop
inc
in
bound
aad
adc
mov
mov
stos
jno
mov
and
mov
xor
pushl
cltd
xor
push
test
lock
lret
cmp
test
stos
orl
mov
aad
xor
cmp
bnd
idivl
icebp
mov
loope
xchg
fdivl
push
mov
stc
jg
in
sti
cmc
adc
cmp
icebp
dec
xor
push
jle
lods
cmp
sbb
pop
roll
push
and
mov
insb
xchg
lcall
test
fsubl
push
and
jae
push
adcl
cmpsl
jmp
std
aad
in
jbe
sbb
ja
xorb
lcall
xchg
or
mov
cmp
jns
pop
mov
outsl
popa
pop
outsb
or
cltd
scas
xor
lock
mov
or
ja
push
int3
pop
xor
call
inc
stos
add
imul
and
xor
out
push
add
fsincos
leave
sub
leave
neg
sbbl
dec
andl
jg
dec
cmp
shll
adc
unpckhps
mov
sbb
mov
arpl
jle
out
xchg
pop
lahf
xchg
mov
cmpsb
push
lret
mov
mov
mov
test
std
jnp
dec
stos
fcomp
aaa
jp,pn
mov
dec
and
aam
push
jno
aaa
dec
adc
and
iret
adc
and
dec
call
cltd
aam
es
shrb
popf
cmpsl
scas
in
mov
inc
jecxz
jecxz
insl
sar
sarb
cmp
cmp
in
xchg
dec
cmp
mov
mov
jle
addr16
push
xchg
mov
leave
xor
adc
sub
adc
push
aad
js
push
mov
sahf
movsl
xor
adc
sahf
test
imul
bound
jl
scas
clc
and
hlt
aam
addl
std
add
jle
pop
lods
outsl
dec
notb
out
jmp
aam
jecxz
sub
cmp
loop
or
push
jl
jl
mov
mov
into
nop
in
out
jge
push
fisubs
inc
jmp
fwait
dec
call
dec
lock
or
push
dec
sti
test
je
mov
xor
arpl
and
lods
loopne
cmp
into
jmp
jnp
mov
mov
mov
aam
cmp
stos
aam
pop
js
sub
push
es
add
sbb
xchg
movsb
add
in
pop
mov
loope
ljmp
popf
frstor
pushf
scas
push
cmp
xor
mov
int
mov
jnp
xor
xchg
gs
sarl
in
xor
outsl
cs
lahf
hlt
les
pop
jb
push
mov
fwait
push
push
aam
hlt
mov
xchg
or
dec
cltd
cmpsb
mov
cmp
cmp
jb
and
call
adc
notb
mov
imul
jecxz
fyl2xp1
andb
dec
jmp
adc
lcall
outsl
pop
inc
jg
paddq
add
sti
cmp
das
data16
sub
lret
xchg
cmpsb
fdivs
inc
lods
mov
or
cs
add
sbb
ror
cmp
sti
sbb
dec
jle
dec
fistpll
psrlq
add
call
dec
pop
add
jnp
subb
into
lcall
cmp
mov
rolb
pop
int
or
test
cli
cwtl
pop
push
sub
cld
adc
outsl
lahf
push
push
gs
iret
sbb
sbb
adc
loopne
outsl
lods
dec
adc
push
add
aad
loopne
testl
rol
and
mov
in
cmp
fwait
adc
mov
popf
jnp
notb
jae
out
mov
mov
dec
xor
jbe
xchg
dec
or
mov
sbb
pop
jo
or
ret
inc
xlat
jmp
push
push
inc
iret
hlt
and
or
cmp
popf
inc
push
sub
and
stc
sub
cwtl
cmp
insl
lock
and
mov
aam
and
xchg
fadds
xchg
inc
cmc
jns
sub
xchg
sahf
into
or
adc
mov
mov
mov
iretw
adc
sbb
add
fs
push
lea
lods
hlt
cmp
loopne
fidivrs
rclb
xor
iret
bound
std
and
xor
mov
lahf
scas
xchg
leave
sub
or
or
cli
loope
fidivl
pop
mov
pop
and
insl
jnp
sbb
or
push
rcr
xchg
je
pop
into
in
fistpl
dec
mov
sub
test
add
aad
mov
arpl
ror
pop
xor
adc
or
xchg
shll
std
insl
push
fimuls
mov
push
adc
pop
push
pop
lods
sbb
cmp
shll
daa
fxam
sub
fs
popf
push
pop
mov
mov
xor
shrl
aad
out
xor
fsubrs
mov
sbb
bound
or
pusha
enter
inc
arpl
jo
jle
pop
jnp
mov
xchg
sub
fsubl
mov
pushf
gs
mull
or
movsb
jns
lods
les
les
inc
xchg
xor
mov
ja
xlat
jle
mov
xor
xor
or
push
add
push
xor
in
jmp
or
test
frstor
imul
dec
mov
fnstsw
or
jb
aaa
fisttps
push
mov
sbb
adc
int
sbb
push
js
mov
or
pushf
aaa
imul
je
xchg
mov
fdiv
cmp
push
mov
repz
loopne
int3
push
mov
popf
in
inc
movb
clc
repnz
mov
xchg
mov
jmp
test
inc
push
imul
and
and
loope
cmpsb
scas
add
add
jae
clc
sbb
sub
xor
addb
adc
push
dec
sarb
push
adc
dec
mov
sbb
mov
jecxz
jp
fmull
lods
ds
mov
fildll
outsl
push
adc
fcompl
lock
push
shll
fdivrs
add
sub
push
or
data16
mov
fildl
aaa
jl
mov
adc
cld
dec
and
or
mov
test
jnp
fwait
xchg
mov
test
mov
cmpsl
fsubrl
hlt
jnp
pusha
push
cmp
cmp
pop
mov
mov
cld
fimuls
sub
adc
or
xchg
fcompl
shrl
jns
jns
adc
jge
cmpl
push
dec
mov
popf
mov
test
sub
repz
ss
hlt
ds
fists
adc
mov
sub
jne
mov
ds
adc
xor
or
sub
outsl
mov
pop
inc
je
pop
xor
stos
xlat
imul
cld
push
xchg
ret
aas
jne
cmpsl
insl
inc
inc
push
jo
sub
xchg
out
addl
ret
add
or
or
test
outsb
jb
cmp
mov
jg
pop
mov
dec
scas
push
icebp
add
or
stos
or
stc
test
in
testb
adc
sbb
push
or
icebp
jb
inc
roll
jns
jo
jo
lods
add
inc
into
std
adcl
ljmp
rcl
fnstcw
mov
out
aam
mov
mov
das
int3
fldl
imul
in
mov
pop
and
mov
data16
lcall
cld
add
lods
mov
push
mov
jmp
shlb
sub
mov
insb
inc
push
mov
pop
push
add
jns
mov
dec
aas
leave
xchg
add
push
adc
test
ror
dec
rcrb
loope
pop
mov
lret
imul
adc
in
data16
xor
mov
add
pop
imul
sti
push
and
mov
pop
fcomi
xchg
dec
not
icebp
in
std
nop
icebp
fcomps
shl
jl
in
pop
jmp
jecxz
aad
lods
sbb
ret
mov
test
dec
xor
fs
xchg
cwtl
fstl
out
aas
enter
aad
and
call
mov
sbbb
repz
jp
test
cs
mov
xor
add
clc
iret
cld
pop
icebp
fdivrl
adc
push
test
inc
adc
ss
mov
dec
mov
je
adc
xor
mov
testl
clc
arpl
cmpsb
mov
xchg
jle
mov
cli
sti
arpl
sarl
jecxz
shrl
jl
mov
idivl
jb
add
mov
sbbl
lds
or
je
in
jae
pop
shl
fcoms
lods
mov
inc
out
mov
aas
and
outsb
mov
insb
fstpt
cltd
mov
sbb
rcll
lods
push
jb
jae
out
jle
outsb
add
xchg
and
ret
shlb
mov
adc
in
lock
stc
jns
test
hlt
sub
pop
jge
in
jbe
es
mov
in
mov
mov
insl
jmp
pushf
test
adc
stos
dec
xor
fwait
mov
inc
adc
or
stos
bnd
rclb
push
xor
es
xchg
popf
inc
aad
out
add
in
cmp
jo
sahf
inc
outsl
push
push
xor
and
xchg
inc
out
std
test
inc
pop
int3
push
ljmp
leave
ret
jp
fld
scas
cmp
jae
mov
or
push
and
aaa
fs
mov
mov
jnp
test
ret
inc
add
jp
rol
and
and
adc
lea
jecxz,pt
sub
imul
dec
pop
pop
pop
arpl
dec
flds
shlb
lcall
lret
jae
jmp
int3
out
repnz
test
jne
cli
in
and
xchg
cmp
ds
fldcw
adc
sarl
setge
add
inc
insl
bound
je
daa
xchg
dec
push
shr
mov
jne
ss
cli
sti
xor
adc
or
test
mov
dec
cmpsl
fldl
lcall
add
sahf
dec
jae
test
dec
ds
xchg
popf
out
mov
sub
and
stos
out
inc
ret
jmp
lret
fbld
int
pusha
inc
jle
cld
mov
lods
iret
out
add
pop
out
cmp
lret
dec
cmp
sbb
sub
xchg
lea
pop
mov
sbb
xchg
mov
movsb
cmpsl
push
out
push
mov
icebp
add
insb
add
xchg
xlat
icebp
mov
cmp
fdivs
std
xchg
cmp
jecxz
sbb
cwtl
cmc
xlat
sub
aaa
sbb
movsb
sub
mov
pop
ficompl
cmp
dec
jl
inc
pop
fwait
sub
fidivl
sbb
out
mov
xchg
mov
fwait
mov
fdiv
and
in
loope
xchg
pop
outsl
lea
dec
imul
inc
mov
int3
jge
and
inc
lcall
jmp
jmp
imul
add
inc
xor
int
ret
jno
jge
je
out
sub
aaa
jne
sub
push
or
ljmp
pop
aaa
adc
ds
push
push
aaa
push
dec
add
sbb
push
in
adc
mov
js
push
cmp
test
les
data16
mov
push
mov
dec
push
mov
sti
mov
ja
int3
lret
mov
lcall
push
lahf
int
movsl
sbb
sbb
popf
popa
and
sbb
ret
das
xchg
mov
scas
rep
cmc
xlat
fmull
in
nop
sub
pop
or
add
mov
stc
pop
lcall
jae
aaa
rclb
test
xor
fstl
add
jo
jne
repz
jb
mov
push
pop
je
roll
lret
inc
mull
mov
xor
add
jno
mov
scas
jecxz
push
push
daa
inc
pop
mov
popw
icebp
lret
xlat
or
imul
dec
daa
and
dec
jmp
nop
push
rcll
decl
jo
shlb
lock
shll
mov
or
xchg
int3
xchg
lahf
nop
mov
scas
test
xchg
inc
mov
dec
jmp
ds
inc
mov
rcrl
dec
shll
or
inc
insb
pop
enter
test
push
mov
push
dec
jp
dec
mov
enter
jp
push
fisubrs
ja
jp
sub
or
inc
cmp
push
stc
call
pop
mov
cltd
dec
sub
xchg
sbb
add
cmpsb
mov
and
ja
ret
mov
lahf
cli
inc
dec
test
push
mov
stc
clc
loop
sub
xchg
jg
andl
ljmp
clc
lret
in
add
lcall
inc
fsubp
cmp
gs
cltd
aam
jbe
mov
push
je
push
sbb
pushl
sub
pop
ficoms
leave
dec
jecxz
push
rclb
mov
mov
push
xchg
inc
mov
xor
mov
jne
xchg
inc
mov
in
xor
aam
test
loope
pushf
pop
lcall
sub
xor
bound
imul
fsubl
test
inc
cmpsb
ror
pop
cld
adc
push
sub
cs
xor
iret
das
push
adc
adc
adc
add
rol
out
out
cwtl
andb
int3
pop
dec
aas
push
mov
sbb
hlt
mov
mov
adc
sbb
sbb
xor
outsb
mov
inc
mov
jne
sbb
dec
xchg
cmpsb
pop
cmp
into
clc
push
das
add
hlt
xor
pop
out
scas
daa
mov
cmpsb
stc
xor
lcall
sbb
inc
fwait
stos
pop
nop
pusha
cli
out
mov
dec
adc
pop
or
xchg
xor
push
ja
add
add
inc
mov
pop
and
das
xchg
xchg
scas
icebp
dec
loope
andl
push
pop
movsbl
sub
dec
imul
adc
mov
sahf
mov
xor
mov
pushf
adc
mov
ljmp
cli
cmc
jbe
cltd
lods
jno
stos
add
test
decl
jl
shr
fcmovnbe
jno
mov
aam
xor
stos
loop
std
movsl
jle
xor
sub
xor
adc
fwait
or
idivb
sahf
imul
dec
outsb
jle
inc
pop
iret
mov
ja
mov
nop
rol
add
shlb
cltd
sbb
es
xor
fists
push
inc
arpl
pop
imul
dec
xlat
popa
xor
fs
imul
add
xchg
mov
inc
loopne
sub
jmp
xchg
push
sub
mov
mov
sub
out
sbb
dec
push
xchg
mov
je
inc
dec
repnz
lcall
jp
jl
dec
add
sbb
lods
pop
es
xchg
outsl
mov
mov
mov
inc
jmp
add
aam
xor
ljmp
mov
pop
mov
lods
std
inc
scas
pop
mov
jle
xor
imul
push
pop
adc
mov
sbb
sbb
or
aad
inc
iret
add
mov
int
sbb
cltd
notl
pop
insl
and
adc
mov
cli
icebp
pushf
dec
scas
sbb
adc
addr16
icebp
add
xor
jl
add
dec
arpl
aaa
jp
sbb
pop
aam
and
mov
jbe
cmpsl
fcmovb
test
push
test
in
test
fs
movsb
lret
aad
mov
jne
faddl
sar
inc
jne
movsl
in
sub
ret
fisttpl
mov
dec
inc
cmc
std
lods
jno
ds
out
cwtl
lahf
fbld
sbb
xor
lahf
mov
mov
adc
jmp
xchg
or
add
sbb
pusha
scas
sbb
cmp
jge
add
jbe
jne
dec
je
mov
adc
sub
movsb
sbb
jecxz
dec
dec
jmp
cmp
ds
cmp
xor
and
inc
cld
scas
dec
mov
sbb
lahf
orb
fcomp
addr16
dec
push
jmp
mov
sbb
mov
inc
xchg
nop
xchg
cmp
data16
fcomps
sub
jae
ds
sbb
pop
lock
inc
add
inc
stos
push
inc
sbb
cmpsb
daa
sahf
mov
flds
daa
xchg
inc
out
sub
popf
xor
cltd
test
or
cmp
popa
hlt
dec
aas
xchg
mov
sbb
out
xchg
push
fldt
pop
push
pop
subb
mov
les
roll
into
xchg
xor
stos
dec
les
adc
sbb
pop
loop
je
or
push
std
subl
popa
mov
xchg
std
in
jmp
daa
mov
popa
xchg
xchg
mov
add
mov
lcall
or
daa
or
adc
shl
sub
cli
push
sub
punpcklwd
sub
in
lret
cmp
scas
imul
xor
cmp
mov
sbb
push
inc
in
sbb
push
xor
faddl
data16
in
jnp
jnp
sub
inc
popa
test
jb
arpl
xchg
push
sbb
popa
addb
aas
ret
add
push
jno
mov
add
in
stos
fldl
sti
in
ret
xchg
jbe
or
fsubrs
jge
cmpsl
rclb
ljmp
inc
sub
scas
xor
addb
push
jbe
popf
pusha
pop
push
fdivs
fsts
hlt
fs
cmpl
pop
jle
mov
sub
inc
mov
shll
pop
jb
out
in
ss
sbb
xchg
xchg
mov
xchg
pop
push
mov
dec
pop
mov
pop
pop
cld
dec
xor
pop
aad
push
je
xchg
adc
popf
inc
pop
arpl
psubusb
pushf
loope
fsubs
mul
xor
out
dec
jb
lcall
adc
loop
inc
add
pop
mov
testl
out
xchg
inc
dec
mov
sbb
sbb
ret
arpl
pop
push
rcrl
push
or
out
xchg
into
jne
inc
cmp
js
sbb
hlt
out
pop
mov
roll
addb
fimuls
and
push
sub
push
xorl
jo
cltd
divl
call
cmpsl
call
sbb
adc
sbb
cli
fdivrs
call
outsl
es
xchg
clc
fwait
insb
sub
push
outsl
mov
add
das
push
add
sbb
imul
mov
fsubrs
daa
or
inc
push
xorl
dec
cwtl
pop
mov
and
xchg
repnz
stos
mov
insb
out
inc
sub
xor
ror
push
inc
inc
pop
cmpl
fs
faddl
push
shlb
andb
notb
dec
test
sbb
xchg
gs
jnp
add
sub
hlt
int3
sbb
stc
mov
int3
icebp
push
movsb
adc
push
shlb
mov
cmpsb
dec
into
push
out
xchg
dec
stc
enter
in
pushf
sub
sbb
add
pop
jns
pop
sub
mov
movsb
popl
sub
das
push
sub
rol
push
loopne
fs
mov
sbb
daa
mov
pop
pushf
push
sbb
int
loopne
jecxz
int3
imul
or
mov
push
cmp
jl
sub
ja
sbb
jne
out
or
add
icebp
or
insb
repz
mov
ret
xchg
or
addr16
call
xchg
jge
mov
and
out
aaa
and
dec
mov
popf
iret
jns
sti
sbb
in
add
sbb
mov
adc
arpl
in
repz
sub
outsl
lock
jne
lea
aam
rcrl
std
pushf
jae
loopne
push
pop
repz
fimuls
cmp
add
stc
out
push
and
or
cmp
mov
fs
hlt
add
pop
sbb
pop
popf
movb
mov
sbb
push
mov
test
inc
push
xor
xchg
adc
scas
cltd
sub
adc
outsl
push
xor
lods
cmc
mov
das
imulb
jl
inc
push
jo
fimuls
cs
rcrl
mov
push
xchg
pushf
imul
mov
mov
popa
mov
les
push
cs
jne
cmp
in
or
adc
xchg
push
jecxz
xchg
cs
mov
dec
sarb
inc
push
jae
dec
push
push
leave
movsl
push
xor
imul
rcll
jecxz
js
pop
test
outsb
cmp
ss
dec
lea
and
dec
add
stos
adc
adc
push
pop
idivb
cmpsb
xor
and
cmp
cs
aas
out
fwait
call
lret
inc
test
outsl
dec
pop
fcompl
mov
mov
in
les
jecxz
daa
push
xchg
jnp
je
ljmp
lods
ljmp
bound
jo
dec
outsb
clc
and
stos
and
mov
repnz
jo
fcomi
inc
add
mov
and
test
cmp
dec
pop
shl
cmp
xor
cltd
imul
repz
jge
jge
jmp
fstps
pop
stos
and
repnz
cmpsb
jp
xor
imul
cmp
ret
cltd
xchg
clc
stos
jge
inc
pushf
xchg
rcrb
xor
xchg
add
nop
or
jle
aas
jg
loope
lcall
or
addr16
movsl
add
and
xchg
cwtl
movnti
mov
shll
les
fdivr
fsubl
or
sub
mov
dec
inc
mov
imul
test
fsts
push
add
and
lcall
ret
jne
mov
lcall
imul
fwait
addr16
mov
xchg
loope
inc
add
insb
bound
es
push
jne
mov
xor
or
jge
or
addr16
sbb
addr16
shll
sub
rcll
dec
xchg
add
or
ds
adc
daa
xchg
push
jno
cmp
insl
pop
push
inc
mov
in
mov
push
and
xchg
cld
mov
in
in
decl
inc
jg
push
insl
imul
pop
cmp
daa
sbb
pop
push
ss
xchg
mov
pop
add
repnz
out
jne
sbbl
fstpt
or
addr16
push
xchg
outsb
jl
fidivs
hlt
out
shl
push
xor
je
lds
mov
jl
lahf
mov
test
xchg
dec
dec
mov
test
pop
jl
dec
xor
push
enter
jbe
adc
mov
inc
pop
clc
clc
jno
or
clc
add
push
jne
in
mov
outsl
cs
xchg
sbb
das
push
mov
sbb
xor
and
adc
scas
push
mov
lcall
fwait
sub
sub
dec
jo
mov
nop
iret
pop
subl
mov
and
leave
std
pop
cmp
or
push
pop
xchg
scas
xor
imul
call
insl
xor
clc
jge
fdivl
and
fwait
xchg
fcompl
add
adc
addr16
jecxz
frndint
xor
pop
xchg
out
pop
sub
push
jmp
dec
in
inc
lcall
mov
and
or
adc
push
dec
xchg
popa
pop
xor
not
cld
jne
shlb
mov
lods
stos
push
add
jp
sbb
stos
ficoms
sarb
idivb
loop
mov
aam
push
xchg
testl
das
add
hlt
sub
and
xor
mov
sub
mov
xchg
cmp
aam
pop
arpl
jp
ja
or
imulb
movsl
dec
add
imul
in
fwait
add
xor
mov
shl
int
and
adc
aas
push
outsl
mov
cltd
mov
mov
aas
pop
shll
loope
test
adc
cmc
adc
mov
fs
rcrb
arpl
dec
fdivs
mov
xor
icebp
scas
outsl
mov
shr
sbb
adc
xchg
adc
cli
stc
jae
daa
add
add
sub
xchg
or
mov
xchg
nop
and
fnsetpm(287
test
jb
dec
lds
mov
mov
mov
xchg
insl
mov
or
clc
jbe
inc
or
mov
outsl
daa
daa
sub
xor
cmpsl
inc
xchg
fidivrs
mov
and
lods
test
nop
mov
inc
fists
lahf
js
adc
inc
sub
lret
inc
std
insb
or
std
sub
dec
addb
das
cwtl
cmc
jecxz
xor
push
adc
js
mov
mov
push
mull
stc
push
mov
cs
mov
aam
or
sub
jecxz
pop
pop
mov
dec
push
outsl
xor
jg
or
iret
mov
adc
push
push
jo
pusha
daa
pushl
mov
jle
mov
adc
std
lcall
jecxz
std
frstor
mov
xor
iret
xor
cmpsl
cmpsl
sub
ret
cmc
push
mov
hlt
inc
pop
dec
push
pop
test
subb
pmaddwd
pop
push
xchg
push
movsb
add
outsb
and
movsl
lret
and
or
in
data16
jne
fs
pop
int3
sbb
mov
sbb
push
movsl
enter
lock
mov
xchg
out
and
fs
mov
rorb
je
gs
rcll
push
pusha
sub
cmp
add
andb
pop
in
insb
std
cltd
push
outsb
pop
pop
sbb
in
stc
sbb
ret
xchg
dec
out
test
movsb
popa
push
pop
lret
rolb
mov
subb
jb
mov
jns
dec
sahf
sahf
mov
push
sub
icebp
nop
ds
fisubs
jne
mov
aad
dec
aam
pop
sbb
movsl
adc
xchg
leave
sbb
inc
jmp
xchg
dec
xchg
out
pop
fcomi
clc
sti
imul
dec
xchg
loopne
psllq
or
inc
push
push
les
pop
xchg
inc
add
enterw
insl
jnp
sub
rcl
mov
pusha
sbb
cmpsb
lods
and
mov
out
lret
enter
gs
dec
sbb
or
mov
and
loope
mov
bound
sbb
pop
xor
xchg
adc
xchg
mov
clc
inc
jae
orb
push
pop
les
cmp
sahf
xor
mov
mov
and
movl
movsl
imulb
std
rolb
mov
xor
repz
imul
nop
imul
jle
jl
and
ljmp
sti
push
in
xor
or
ja
mov
rorl
icebp
lds
ficoms
popf
add
push
mov
rorl
call
add
popa
push
push
add
rorb
fbld
call
sub
xorb
jns
jg
mov
and
data16
idivb
push
push
dec
es
inc
sbb
lods
in
and
in
into
jge
jno
ret
dec
addr16
loopne
add
pop
jnp
into
add
iret
into
mov
lret
pavgw
lea
mov
pusha
xchg
subb
xchg
pop
stos
lock
scas
lds
and
pop
cmpsb
jbe
jg
xchg
inc
in
xchg
push
pusha
dec
or
sbb
shlb
xor
popa
jnp
sub
lock
mov
inc
mov
xor
dec
in
int3
xor
inc
jecxz
bound
cmp
lret
lahf
xor
inc
dec
cmp
mov
popf
call
dec
mov
dec
jg
stos
pop
push
mov
mov
ret
jb
dec
mulb
adc
icebp
pop
aam
cwtl
xchg
mov
push
cmpsw
adc
xchg
pop
iret
jb
dec
ja
mov
mov
pop
mov
cmp
inc
mov
ds
push
testb
mov
shl
push
adc
in
stc
mov
sub
cwtl
clc
sub
sbb
cli
or
jnp
ss
add
movsb
adc
mov
icebp
sbb
jns
test
test
add
das
stc
dec
or
shrl
push
pushf
jecxz
jmp
or
stc
pop
jno
cmp
aam
pop
cmp
test
incb
fdivp
mov
push
dec
shl
pop
mov
mov
jbe
pop
xchg
dec
jb
cmp
lret
aas
mov
sbb
sbb
ret
aam
ret
xchg
outsl
cwtl
pusha
sub
out
cmpsl
xor
dec
and
jl
int
add
stos
repz
cmc
js
mulb
mov
jo
lret
mov
pop
ret
inc
dec
sub
xlat
xor
repnz
ljmp
nop
push
mov
fxch
push
and
scas
jbe
pop
xchg
mov
call
sbb
xchg
cltd
pushw
lcall
add
jne
jns
faddl
mov
dec
mov
fistpll
cwtl
xor
dec
in
ja
je
rorb
jl
xchg
cwtl
xor
jae
lcall
ds
insb
clc
sub
loop
test
sbb
scas
push
mov
mov
mov
in
sub
leave
pop
fmuls
cmpsl
cs
jne
lahf
push
push
inc
push
lret
dec
hlt
sarb
push
xor
sub
xchg
arpl
fdivl
setbe
ljmp
ret
lods
loop
roll
xchg
mov
outsb
mov
sbb
orl
sbb
repnz
mov
dec
fbld
mov
push
cs
popa
stos
movsb
mov
in
or
sub
movsb
push
sub
loop
loop
lods
inc
mov
lret
and
pop
pop
jnp
xchg
loope
mov
je
pop
ss
push
add
fidivs
mov
cmp
mov
sbb
sbb
jle
adc
add
icebp
push
add
cmp
cmp
int3
xchg
cs
cld
mov
scas
mov
rcrl
cwtl
xor
sub
ret
cmp
clc
push
inc
xor
add
jmp
je
xchg
jo
jg
fisttpl
fisubs
cltd
ud0
in
insb
jbe
inc
arpl
sub
push
cmc
dec
pop
adc
dec
mov
aam
sahf
xchg
cmpsl
sub
nop
lea
mov
aaa
sbb
jae
xor
xchg
xor
xor
dec
sbb
ljmp
lods
pop
out
cs
ja
push
int3
xor
imul
stos
std
aam
sar
mov
pop
cli
xchg
adc
sahf
jg
jno
mov
sbb
cmpsl
push
pusha
push
pop
pop
sbb
lods
jae
ds
ds
inc
fisubl
xchg
sbb
sbb
cltd
push
test
daa
lret
mov
pop
pop
or
jp
xor
and
in
or
out
icebp
mov
jl
and
cmp
enter
fwait
sti
fwait
into
jle
push
enter
push
add
sub
dec
or
fisubrl
mov
cmpl
or
movsb
and
ffreep
shll
pop
cmpsl
test
jnp
lcall
xchg
inc
xor
scas
insl
inc
cwtl
icebp
and
dec
clc
jp
dec
fwait
jns
addr16
jne
aam
pop
xor
dec
subps
push
daa
pop
jmp
jae
add
xor
inc
lahf
pop
les
push
push
cmp
xchg
int
add
imul
arpl
pop
test
mov
gs
in
and
cli
aaa
sub
mov
pop
imul
sbb
cmp
lods
jne
sub
dec
sub
dec
popf
add
xchg
xchg
dec
inc
fsubs
shlb
mov
dec
cld
cmp
js
xchg
lock
sarl
dec
jb
mov
pop
cltd
fisubrs
dec
jne
negb
mov
add
dec
and
insb
sub
js
mov
inc
dec
xchg
pop
xor
aas
mov
and
mov
call
ret
add
insb
mov
fbld
jle
sub
lea
adc
push
bound
in
push
mov
xchg
inc
push
mov
pop
pusha
xor
insl
push
cmc
mov
pushf
mov
mov
mov
add
mov
int
gs
sub
outsl
xchg
jge
out
outsb
ret
sti
mov
lods
std
dec
ret
mov
les
call
mov
scas
out
rolb
repnz
into
xor
hlt
ficoms
xchg
jnp
jae
push
cmp
cmp
fimuls
pop
and
push
xor
mov
mov
jp
cmp
mov
negl
jb
dec
push
rorb
shrb
aaa
movsb
jge
mov
push
lds
divb
cmp
cmp
dec
ror
cmp
ss
mov
out
out
stc
daa
cbtw
sbb
repz
es
pop
cmc
or
cltd
out
lea
mov
mov
xchg
add
jg
mov
mov
jb
bound
xor
xor
cmp
pop
lret
lods
lret
pmuludq
andl
pop
test
and
or
loopne
and
pop
pushf
jp
sub
insl
scas
mov
leave
outsb
repz
push
std
enter
in
mul
sbb
sbb
iret
fdivs
mov
dec
cltd
ret
xchg
sti
and
pop
sbb
ja
push
mov
stos
cld
mov
or
pop
sub
imul
stc
push
test
xchg
in
out
cmp
rolb
push
cmpsb
mov
shr
imul
cli
fstl
stc
pusha
jecxz
aas
ret
and
mov
add
inc
pop
arpl
pop
xchg
outsw
daa
test
clc
jns
pop
push
mov
inc
aad
shr
inc
out
jmp
add
jecxz
enter
imul
sub
cmp
mov
xchg
aad
mov
ja
shl
xorb
dec
int
out
test
mov
add
add
mov
push
pop
outsb
imul
and
jle
mov
pop
clc
mov
into
fnstsw
mov
lds
cmc
dec
mov
data16
or
push
adc
fnstenv
and
sbb
or
mov
sbb
pop
mov
jl
cmp
jg
rclb
jge
xchg
jns
ljmp
out
jb
sbbl
pop
cmpsl
xchg
and
or
jmp
and
hlt
add
inc
mov
iret
or
pop
mov
and
mov
dec
dec
jle
and
cmpsb
lock
mov
sub
scas
dec
cmpsb
mov
arpl
add
ljmp
mov
push
je
int
loopne
pusha
xorb
and
arpl
out
add
repz
xchg
cmc
aaa
inc
cld
mov
fisttps
add
outsb
imul
cld
mov
sahf
aaa
aam
and
xor
jle
pop
dec
pop
das
stc
loop
pop
mov
out
cmp
mov
dec
mov
scas
adc
jl
and
shlb
push
cmp
mov
test
mov
xchg
mov
jbe
fsub
ja
mov
mov
or
repnz
shlb
jnp
pop
mov
jl
mov
imulb
xchg
push
mov
jno
xor
js
cltd
mov
and
pop
rcr
lock
test
cltd
pop
cwtl
test
cwtl
pusha
ljmp
scas
cmp
adc
aaa
cmp
push
ret
push
or
pop
and
jge
in
cmpsb
inc
aam
mov
insb
inc
fs
push
and
jo
cld
mov
lcall
mov
lods
xor
adc
loopne
int
stos
mov
jns
mov
pushf
sub
pop
cmpsb
insl
inc
push
mov
cmp
mov
lahf
and
xchg
popf
enter
gs
subb
lahf
in
lret
mov
sarl
test
push
clc
adc
loop
int3
test
cmc
jb
enter
jecxz
and
shll
imul
dec
mov
sbb
shl
and
add
popa
in
cmp
into
or
enter
mov
add
les
mov
outsl
das
add
add
je
jge
stc
daa
std
fwait
popf
mov
mov
dec
std
notb
xchg
cmpsb
fmul
ret
subb
xor
sbb
loope
jl
dec
mov
mov
push
jno
fnstcw
sbb
clc
xor
cs
jne
and
fld
movsl
mov
and
mov
test
pop
repnz
xchg
imul
inc
mov
movb
sahf
push
into
movsl
pop
cmp
and
pop
xchg
test
or
shrl
dec
jp
in
jg
loopne
aam
out
inc
xchg
lods
cli
les
das
mov
push
mov
loop
imul
mov
fwait
int3
int
in
aaa
push
inc
mov
bound
xor
mov
jae
sub
sbb
movsb
sub
aas
jl
sub
xor
push
hlt
stc
sub
ja
cmp
xor
aad
clc
sbbl
inc
or
cwtl
inc
xor
icebp
arpl
sbbl
int
cwtl
lds
mov
loopne
pop
test
out
and
pop
js
popf
and
outsl
repz
cltd
fsts
imul
hlt
adc
aaa
push
ja
add
xor
push
fcomps
mov
ds
nop
int3
fisubrs
mov
push
lea
jle
call
sub
push
pop
pop
cmp
inc
sbb
ljmp
sbbb
sbb
and
lret
mov
cmp
out
out
cmp
adc
add
xchg
or
mov
push
jne
adc
mov
cltd
fs
mov
adc
dec
dec
adc
push
xchg
repnz
in
aam
outsb
xchg
and
push
std
add
inc
xchg
rcll
cltd
sarb
pop
mov
xchg
or
out
movsb
push
mov
imulb
sahf
pop
test
bnd
shrb
jb
lcall
adcl
cmc
aaa
mov
jl
inc
adc
pop
popa
lret
mov
pop
orb
test
scas
mov
stos
cmpsb
and
fsubl
dec
mov
mov
test
dec
cmp
mov
and
js
addr16
xor
xchg
aam
jl
adc
mov
in
lods
aas
test
push
cmp
cmc
mov
rol
into
sbbb
mov
enter
popl
out
mov
dec
inc
sbb
jle
jae
or
mov
clc
out
or
cld
flds
and
push
cwtl
icebp
rcr
incb
loop
and
push
pop
mov
rcrl
jecxz
loop
data16
mov
cmp
sti
ret
mov
adc
pop
jb
xchg
int3
das
jp
repz
jmp
in
das
lods
out
add
cs
add
xrelease
rolb
cmp
xchg
pushw
sub
mov
sub
sbb
cmp
pop
imul
gs
or
add
push
js
repnz
and
adc
rcrb
jo
insb
add
rolb
sbb
outsb
les
mov
dec
jne
and
add
sbb
dec
mov
sbb
jb
cmpsl
sub
in
adc
pop
xchg
mov
mov
dec
aas
mov
xchg
inc
aas
ret
xchg
es
dec
repnz
ret
cli
mov
push
mov
cmp
scas
pop
or
adcl
iret
push
push
shrb
scas
mov
sub
cmp
fisubrl
sub
xchg
int
fwait
imul
mov
addr16
adc
stos
pop
outsl
mov
rorb
adc
mov
test
fstps
mov
hlt
aad
rol
push
cmp
lcall
jg
dec
jg
stos
rcrb
xchg
lret
sub
test
pusha
pusha
fldenv
lret
and
push
jl
inc
es
jmp
nop
das
das
aas
sbb
xchg
or
in
mov
xchg
mov
pop
lret
inc
push
cld
aas
in
xor
mov
sbb
lods
jae
int
cwtl
fistpll
movsb
push
lahf
ds
loop
lds
fdivrs
loope
hlt
jne
jb
out
add
cmp
stos
in
add
push
test
dec
aam
push
push
fwait
pop
pop
and
sub
pop
xor
lret
sbb
ja
pop
std
cmp
pop
subl
xchg
sahf
loop
lret
add
dec
mov
jmp
xor
loop
lods
rorl
das
sbb
pop
cmp
pop
adc
aam
xchg
push
add
push
xchg
add
xor
cmp
sub
pop
xchg
stos
movsb
rcrb
and
sarl
out
outsl
jle
jns
dec
fwait
stc
lret
das
xchg
mov
pop
inc
pusha
roll
ret
pop
dec
mov
adc
mov
jmp
out
or
pop
in
xchg
mov
fistps
xchg
icebp
jl
adc
and
mov
inc
in
xor
hlt
test
pop
sub
rclb
popf
mov
testb
sbb
sub
pop
std
mov
add
pop
or
jne
cld
jmp
xor
call
rcrb
cmc
mov
mov
hlt
sti
cmpl
pop
cmp
mov
cltd
xor
add
mov
mov
and
xor
xor
and
lcall
xor
push
mov
jae
mov
mov
cmpsb
outsb
addr16
jg
clc
ljmp
sahf
inc
int3
and
lods
ret
push
xlat
push
addb
xchg
in
sbb
push
les
clc
xchg
xor
std
mov
jmp
mov
cmp
daa
lods
pop
sbb
xor
ret
test
scas
push
adc
cmc
clc
dec
xchg
xor
mov
loope
lods
dec
rcrb
pusha
mov
push
test
fidivs
repz
push
jl
popf
mov
cwtl
cmp
mov
mov
das
loopne
sbb
xchg
lcall
in
and
stos
scas
fadds
hlt
adc
xlat
aaa
imul
cmp
add
xchg
jg
mov
outsl
jle
cmpsl
scas
inc
cmp
enter
cmp
shlb
adc
andb
in
out
cs
cmpsl
in
cld
or
lret
or
clc
repnz
shll
dec
jnp
in
mov
imul
mov
xchg
je
and
xor
fdivs
or
pop
mov
cmp
in
mov
test
lock
mov
sbb
movsl
jp
insl
mov
sarb
insb
xchg
pop
sbb
scas
mov
arpl
cld
jo
sti
push
stc
push
test
dec
xchg
in
or
sahf
pop
mov
int3
test
or
bound
outsl
andb
mov
fiaddl
cli
in
hlt
subb
xchg
lcall
rcr
imulb
cltd
test
mov
pop
sub
scas
insl
cmp
inc
push
jl
hlt
pop
adc
jns
cmc
pop
adc
cmp
cmpsb
divb
scas
fcoms
pop
inc
repz
imul
sub
mov
cmp
addr16
popa
imul
subl
sub
and
dec
stc
lds
fidivl
das
xor
mov
jno
or
dec
enter
repz
jmp
das
pop
add
xlat
pop
mov
add
outsb
fdivl
pop
xor
imul
mov
mov
jne
ret
imul
push
pop
stos
movsl
fcmovnu
mov
jecxz
cld
add
cli
xor
add
sub
mov
stos
inc
pop
icebp
cmp
cmp
fwait
xor
gs
shl
xor
jnp
cmp
icebp
cld
push
or
mov
cmpsl
scas
sub
xchg
repnz
in
sbb
rcr
sub
xchg
push
rclb
in
fwait
cmp
ret
mov
ja
pushf
scas
push
inc
mov
sbb
cmpsl
sbb
js
imul
mov
pop
test
stc
sub
xchg
sbb
sbb
stc
test
addb
cmp
xchg
add
into
scas
jae
cmpsb
adc
insb
jge
and
lret
inc
pop
adc
adc
lret
clc
inc
cmpsb
out
cmp
outsl
scas
test
mov
ds
movsl
xchg
cmp
sub
js
add
popa
aaa
mov
mov
out
fcoms
outsb
sarb
jg
xchg
mov
or
jmp
cmp
rcrb
push
xor
mov
and
sbb
cmpsb
jmp
xorb
sbb
add
fstpl
dec
rcll
shrb
sub
pop
pop
jbe
pusha
cmpsl
adc
repnz
dec
pop
mov
push
xor
aad
xchg
jns
out
cwtl
push
fsub
cmp
pop
add
cmp
mov
mov
les
mov
sbb
inc
dec
pop
ds
popf
or
and
gs
pop
loopne
jmp
sbb
fdivrp
mov
mov
sub
inc
out
cwtl
or
int3
xor
aaa
mov
jge
cs
cli
in
int
popa
test
inc
test
inc
sarb
and
add
push
mov
mov
aam
jno
jo
dec
inc
push
jg,pn
idivb
outsl
xorb
mov
in
in
xchg
add
jbe
or
insb
pusha
cld
cmp
cld
and
push
mov
ljmp
sbb
or
jmp
cs
push
cli
adc
push
addb
arpl
pop
ds
fwait
pusha
mov
sub
sbb
clc
push
mov
xchg
and
push
movsb
stos
jmp
clc
pop
xlat
jno
push
movsb
or
xor
es
scas
cld
dec
imul
hlt
push
mov
and
std
insl
in
out
mov
aad
xchg
lret
push
aas
ret
das
ret
pop
inc
xchg
push
imul
or
xchg
inc
test
cmp
jmp
mov
repnz
sbbl
mov
cmp
xor
repz
and
fstps
rorl
push
ret
xchg
push
cld
jl
adc
push
sbb
out
decb
subb
fisubs
pop
xor
flds
stos
adc
inc
shlb
jmp
sbb
jne
les
push
daa
jmp
push
dec
lahf
insl
outsl
jno
mov
dec
pop
inc
mov
cltd
mov
sbb
sub
pop
mov
popf
mov
inc
add
sarb
dec
aaa
js
inc
leave
out
fisubl
xchg
mov
add
adc
cwtl
cmp
pushf
popf
xchg
lea
push
popf
dec
sbb
add
dec
push
in
std
pop
xor
jl
out
inc
jno
dec
cvtps2pd
xorb
sub
adc
adc
jecxz
adc
idivl
js
popa
dec
add
repnz
shlb
pop
xchg
push
and
jb
cmp
pop
mov
inc
mov
in
inc
dec
punpckhbw
push
imul
call
xacquire
mov
call
ja
push
loopne
ret
repnz
fnstcw
dec
loope
comiss
push
sbb
or
add
xor
pop
sbb
mov
incl
adc
or
push
jg
push
addl
adcb
jno
pop
jmp
psraw
lahf
jne
dec
and
imulb
mov
mov
in
cmp
in
push
push
sbb
mov
movsl
jmp
movsl
test
or
dec
frstor
repnz
inc
les
mov
rcll
jmp
mov
xchg
stos
push
aam
adc
imul
or
sti
jo
cld
rclb
push
and
adc
data16
aad
lock
sti
fs
adc
mov
repnz
test
mov
jb
cli
adc
mov
int
idivb
jge
in
cmpsl
jp
imul
pop
cmc
or
mov
mov
test
inc
sbb
mov
sbb
lods
jo
js
test
addr16
inc
lret
xchg
jno
add
dec
pop
mov
inc
je
xchg
enter
mov
inc
mov
daa
ja
ljmp
lahf
aam
push
insb
in
mov
lcall
xlat
mov
and
insb
lock
pop
lcall
pusha
inc
push
inc
mov
mov
push
mov
pop
stos
imul
xlat
mov
add
pop
sub
test
pop
testb
sbbl
xor
out
cmpsb
rclb
repz
push
scas
addr16
dec
aad
and
dec
mov
or
fldcw
je
lahf
xchg
add
lea
aad
test
mov
cmp
bound
dec
inc
pushf
mov
jg
int3
ss
or
or
data16
fidivrs
and
rclb
jbe
sti
ret
sbb
in
in
jb
jno
mov
movsb
xchg
negl
test
sti
push
in
push
stos
aas
ljmp
sbb
fbstp
inc
sbb
ljmp
sarl
outsl
js
xor
mov
and
mov
pusha
pop
mov
mov
mov
iret
out
xlat
dec
inc
jae
nop
and
push
pop
sbb
mull
out
xor
mov
fdiv
mov
cmpsl
ja
sbb
sub
xchg
test
adc
lods
scas
imul
or
push
push
scas
add
adc
iret
dec
dec
pushf
rcrl
jge
xlat
insb
popf
shlb
dec
mov
xchg
mov
bound
sub
mov
jo
adc
stos
movsb
mov
test
sub
pop
movsl
or
cmp
pop
ljmp
aaa
inc
pop
jg
repnz
and
sarl
mov
dec
arpl
jge
pop
push
cmp
jl
jnp
popa
fwait
jmp
mov
xchg
sub
int
xchg
add
sbb
inc
xchg
aad
and
fstp
jecxz
jns
fldl
or
xchg
inc
icebp
jg
shll
fisubl
mov
arpl
int
fmull
push
cmpsb
add
mov
xor
pop
jns
inc
pop
outsl
mov
cmpsl
push
mov
out
and
add
lahf
jb
mov
ret
push
repz
gs
into
mov
mov
add
sub
imul
dec
dec
xor
ja
dec
mov
cwtl
push
xlat
daa
xchg
mov
popa
in
or
ret
jnp
xor
sbb
aaa
in
fs
push
loopne
inc
addr16
fcoms
pop
sub
or
popa
dec
pop
rep
dec
imul
in
fdivrs
lods
dec
jno
inc
adc
dec
pop
mov
adcl
les
pop
div
push
test
cmp
push
data16
xor
das
sti
stos
es
mov
inc
daa
icebp
testb
ss
dec
lahf
adc
shrl
shrl
pcmpgtd
and
add
lds
inc
inc
lock
lea
lock
fcomip
xchg
arpl
repnz
add
popw
cmp
add
sbb
in
repnz
cmp
pop
cmpsl
push
fimull
scas
dec
movsl
inc
ljmp
inc
inc
sub
sub
mov
scas
jns
or
ds
dec
add
fs
addb
stos
dec
pop
xchg
inc
or
sahf
push
adc
lods
mov
mov
in
cmp
in
and
mov
pop
inc
mov
out
pop
add
mov
aad
adc
pusha
pop
je
jae
ficoms
push
dec
mov
mov
inc
ds
shlb
dec
jb
shld
sbb
xor
mov
xchg
xlat
sbb
and
mov
in
xchg
aad
addr16
out
sbb
cmpsb
movsb
mov
xor
repz
cmpsb
pop
inc
pop
jne
xchg
push
loop
enter
jno
andl
cmp
mov
into
jl
cmp
mov
popa
shll
in
imul
dec
rorb
shr
into
push
pop
jp
leave
stos
in
jno
fadd
or
dec
sub
stos
jnp
mov
js
nop
ds
rep
adc
lods
xor
or
inc
xor
xchg
pop
push
repnz
xchg
xchg
inc
sbb
mov
fiadds
imul
push
cmp
inc
push
lods
mov
idiv
shll
stc
scas
xor
xchg
add
popf
ja
loop
fildll
lds
mov
push
sub
adc
mov
add
lock
pop
stc
test
xchg
stos
add
adc
sub
pop
fwait
or
xchg
mov
push
mov
jge
ljmp
xchg
call
mov
xchg
mov
popa
push
fiadds
dec
shll
movsb
pop
test
inc
mov
es
xchg
cmc
inc
xchg
fsubp
insb
and
add
xchg
xor
fstps
adc
cwtl
stc
daa
inc
test
and
pop
inc
mov
and
mov
dec
pop
call
push
popf
iret
mulb
cli
xchg
ss
sub
cmp
rol
daa
rcr
sahf
fsubr
das
popf
cmp
inc
in
divb
push
cs
lea
mov
or
xlat
xchg
adc
sub
lret
xor
mov
xor
test
sbb
dec
push
sbb
shll
mov
loop
jl
daa
add
cmpsl
and
sbb
call
loopne
int
test
xor
mov
cmpl
cmpsb
adc
sub
pmulhuw
push
sbb
xlat
aaa
mov
pop
sti
rol
pop
loop
pusha
or
push
ja
movsb
dec
test
popfw
pop
push
xor
pop
inc
fwait
push
push
cmc
into
je
mov
jmp
mov
inc
xchg
in
cwtl
adc
lods
imulb
sub
push
sahf
adc
cwtl
jae
sti
adc
gs
push
or
add
mov
mov
arpl
fldt
scas
js
cmc
fs
push
push
adc
mov
sar
hlt
test
and
xlat
test
cli
dec
imul
aad
mov
arpl
ficoms
dec
cmp
repnz
subl
mov
lds
aad
incb
xor
repnz
or
mov
movsl
mov
sbb
xchg
sub
test
jae
mov
mov
cmp
xor
loope
dec
mov
mov
pop
push
fldl
pop
lret
scas
pushl
sbb
popa
fcoms
mov
lock
jbe
mov
lret
pushf
pop
je
sti
xchg
push
frstpm(287
rorl
daa
idivb
outsb
sub
mov
xchg
fidivs
in
andb
pop
dec
pop
push
pop
or
and
dec
out
movsb
cs
fcoms
enter
mov
sbb
nop
push
pop
inc
adc
test
incl
push
ds
lds
pushf
hlt
subl
icebp
adc
and
pop
pop
pop
jae
inc
out
stc
ficoml
cltd
rcll
cs
mov
or
jnp
inc
repnz
insb
or
bound
lock
stos
cli
in
xor
jb
into
mov
and
mov
lcall
adc
fnsave
xor
fidivrl
lahf
loop
sarl
aam
pop
test
movsb
dec
arpl
cmpsl
xor
fsubl
and
fcmovu
pushaw
pop
mov
lcall
add
xchg
adc
push
mov
imul
fldt
push
sub
mov
push
add
mov
mov
and
mov
push
addl
xorb
orb
mov
ret
daa
jmp
jecxz
xlat
jl
in
adc
adc
push
push
jbe
cmp
push
xchg
ss
rolb
jp
jo
push
repz
rcrb
repz
cld
arpl
gs
mov
test
test
pop
popa
dec
mov
jb
sbb
in
sarl
test
sub
inc
les
dec
jo
inc
cmp
sti
and
mov
das
push
test
iret
loope
xchg
push
imul
jmp
push
pop
fnstcw
outsb
lcall
stos
push
into
fdiv
int
mov
xchg
xlat
jno
jmp
ljmp
jnp
aad
in
repnz
push
aam
loop
jno
popa
inc
mov
ds
push
arpl
or
test
cmpb
pop
hlt
or
lds
adc
lret
sbb
pop
aaa
aam
or
cmp
pop
insb
sub
xchg
es
mov
mov
xor
shlb
fldt
add
ss
addr16
xor
jne
jecxz
inc
paddsw
mov
das
cmpsl
in
mov
les
mov
xchg
pop
cmpb
test
and
in
xchg
pusha
mov
jb
adc
jg
shlb
rclb
int3
push
aad
and
cmpsb
lods
cmp
add
stos
sub
ljmp
mull
xchg
dec
jo
mov
jnp
mov
jns
daa
lock
inc
stos
add
ret
push
sbb
pop
mov
shll
sub
pusha
std
mov
jbe
sbb
inc
mov
loop
push
dec
add
sub
mov
int3
repnz
mov
lcall
loopne
inc
mov
sub
sti
aaa
in
xor
aad
dec
adc
jg
add
fmuls
and
mov
sbb
rclb
cwtl
adc
jne
xlat
add
sub
loop
bound
iret
insb
pop
xorb
int
jl
lock
test
test
test
sbb
dec
ja
xchg
xor
jbe
jo
mov
nop
mov
cmp
push
outsl
xchg
jmp
push
int3
pop
lret
push
xor
xchg
orb
fistl
les
sahf
fisubl
into
mov
lret
sti
ljmp
scas
xor
pop
shlb
and
out
mov
cmpsb
xchg
repz
outsl
lcall
das
sbb
jge
or
lds
jge
cmpsb
xchg
cmpsb
hlt
mov
xchg
jbe
jns
loope
jno
dec
add
xor
jnp
or
loopne
repnz
jns
out
push
cmp
cmc
sub
xor
sahf
fcmovnb
scas
or
jb
rorb
mov
call
fs
fsubs
or
jge
xchg
rcll
shrb
aam
cld
pop
mov
ret
pop
adc
push
in
and
in
sub
scas
aad
arpl
inc
push
repz
mov
test
mov
jmp
addr16
mov
or
mov
jne
cmp
push
xchg
popa
push
xchg
mov
push
fxch
cmp
sbb
xchg
lahf
jae
pop
cmp
or
adc
outsb
mov
inc
mov
lock
shl
jp
testb
lods
push
hlt
and
cmp
jmp
jbe
imul
sti
clc
lret
out
rcl
adc
mov
in
pop
xchg
mov
xor
sub
cmpsl
cmp
loope
aam
or
in
ret
iret
lods
call
ror
cmp
xor
sbb
inc
roll
sbb
pop
sub
jp
ror
xor
mov
shr
cmp
mov
jbe
dec
into
std
leave
or
cltd
fldt
mov
ss
outsl
pop
pop
and
push
out
popf
sub
addr16
insl
call
cmp
das
hlt
mov
push
mov
cmp
pushf
sbb
stos
sbb
jmp
repnz
scas
and
or
rcrb
bound
push
mov
cli
lahf
pop
enter
call
aam
inc
and
mov
inc
js
imul
popf
push
add
lods
mov
dec
mov
mov
lret
add
out
dec
andb
inc
stc
mov
push
cmp
pop
fistpl
xchg
push
mov
lret
pusha
sbb
pop
mov
fwait
push
xchg
jbe
or
fnstcw
jns
stos
lock
movsl
dec
jle
imull
xor
stos
int
les
push
aaa
adc
ds
int
int3
push
push
daa
push
mov
cmp
scas
push
ljmp
inc
lret
cmp
xchg
sbb
mov
imul
push
cld
fists
jp
cmp
jae
repnz
js
push
fscale
dec
dec
cmp
pop
ss
out
mov
shlb
and
and
stos
and
lea
es
leave
dec
adc
mov
xchg
jne
fiaddl
xchg
stos
mov
jns
shlb
sti
stos
mov
jp
inc
sbb
js
push
sub
outsl
nop
pop
cmp
call
orl
push
repz
in
cmpsl
jle
sbb
sub
ljmp
js
push
test
xor
test
bound
clc
sub
adc
das
int
cmp
cmp
mov
jle
inc
test
stos
shrl
xor
and
das
mov
adc
and
add
pusha
bound
sbbl
fbld
adc
mov
push
add
push
xchg
inc
pop
push
pop
ljmp
rorl
and
call
mov
jl
sbb
jmp
jo
mov
pop
addr16
sub
sub
fs
cmp
vsubss
sti
pusha
mov
lret
sub
sub
mov
into
adc
dec
jg
pusha
mov
inc
inc
jl
push
inc
or
inc
lds
les
aaa
add
je
push
push
jb
fsubs
push
out
cmp
cmp
gs
insb
cwtl
js
in
test
or
inc
adc
fwait
xchg
iret
enter
lea
sbb
add
add
add
jns
mov
jg
sub
push
mov
ficoml
sbb
inc
test
mov
aad
mov
fildll
cmp
xor
mov
xor
cmovge
jle
gs
outsl
insl
mov
inc
shl
push
outsl
fimull
fldl2t
pop
xorb
xchg
inc
pop
cmp
loope
cs
cmp
int
sbb
mov
cmp
mov
push
aas
xchg
mov
xchg
fimuls
icebp
aad
in
outsl
popa
sbb
rcrl
jg
mov
call
repnz
dec
sub
xchg
divb
stos
add
shll
and
xor
push
mov
fnstsw
lahf
test
rcl
cmovbe
jmp
mov
mov
adc
sti
popf
or
stos
or
cmpsb
adc
subl
pop
in
das
dec
cmp
jl
cmp
pop
jle
mov
inc
jg
jecxz
and
xchg
rolb
daa
push
inc
mov
pop
push
or
ljmp
aas
dec
mov
dec
xor
scas
ret
aaa
pop
mov
inc
xchg
jo
mov
cli
xchg
jp
test
loope
outsl
jmp
push
cwtl
lahf
fidivrl
dec
cwtl
cli
andl
cmp
jae
pop
std
rcr
dec
loop
sub
inc
mov
ja
outsl
movsl
shll
xchg
popf
es
sbb
addr16
cmp
inc
jne
les
loopne
xor
xor
bound
repnz
push
add
xor
gs
lret
outsb
sub
nop
ja
adc
aam
rol
jp
jbe
loope
sub
jne
movsb
and
faddp
jecxz
call
xchg
mov
mov
push
adc
or
pop
dec
inc
sub
pop
add
fidivs
jbe
jle
cmp
test
mov
jecxz
lods
pop
clc
fildll
xchg
int
leave
adc
frstor
test
adc
adc
sbb
dec
xor
xor
lcall
add
and
cmp
sub
pop
cli
out
aaa
cs
mov
int
add
test
pop
test
hlt
into
jns
orl
dec
arpl
fwait
xor
outsl
daa
das
push
or
mov
cmpsb
sti
xor
inc
sub
add
mov
push
inc
jbe
jmp
mov
stos
imul
and
pop
inc
xlat
testb
ret
movsb
ror
cli
jne
xchg
fisttpll
pop
fistpl
sub
xchg
fcomp
in
mov
orb
jae
adc
sarl
fbstp
movsb
sbb
dec
loope
lods
sub
xchg
out
or
rclb
pusha
lock
mov
xchg
xchg
pusha
bnd
cmp
push
fimull
xchg
dec
stos
sbb
mov
jp
loopne
lret
addb
stos
mov
pop
mov
dec
shrl
repz
stc
les
hlt
jne
inc
push
jle
sbb
pop
out
fimuls
dec
addl
push
int
dec
and
imul
and
pop
data16
xchg
xchg
push
pusha
jnp
xchg
pop
jnp
inc
add
cmpsl
cmc
cltd
out
jno
mov
std
lcall
push
mov
inc
bound
cmp
push
idivl
xor
insl
xor
cmp
rolb
fs
cmp
cmp
repz
sarl
repnz
in
or
mov
xchg
fiaddl
iret
loopne
or
inc
xchg
scas
mov
sarb
adc
test
shrl
mov
or
mov
lret
mov
data16
mov
push
loopne
dec
loopne
stos
arpl
cmp
pop
pop
mov
cltd
pop
dec
push
xchg
popf
cmp
mov
xchg
enter
cs
push
popa
push
das
popf
push
jge
pop
in
pop
shll
mov
sarb
inc
test
repz
das
fs
rorl
fwait
fs
rcrb
fistl
scas
jl
pop
cli
add
test
dec
mov
mov
out
shll
loope
push
adc
outsb
lret
pop
adc
fmuls
cmpsb
cmp
sub
les
xor
test
mov
loope
sub
pop
testb
mov
xor
sub
sbb
aaa
jbe
adc
iret
jecxz
out
and
mov
divl
andb
idivl
push
cmp
ds
loop
ret
jb
jge
mov
dec
mov
adc
dec
std
sub
inc
cld
dec
add
xchg
xor
pop
sub
adc
aad
pop
cmp
pop
repnz
mov
mov
ss
outsb
pop
aad
inc
adc
lret
loop
mov
jp
fcmovnb
aaa
push
sub
and
clc
in
ss
pop
push
lret
cs
out
pop
aas
sbb
imul
in
sbb
cmp
ret
stos
adc
sarb
xchg
arpl
or
xchg
jge
mov
adc
cmp
adc
xchg
pop
lcall
fdivrl
sub
xchg
mov
pop
movsl
inc
aam
in
stos
cmp
sbb
mov
imul
pop
pop
out
mov
xchg
sbb
cmp
cmpsb
stos
ljmp
mov
push
and
ret
lahf
or
imul
sbb
dec
outsl
cwtl
rcr
push
pop
adc
nop
mov
adc
shl
sbb
push
rcr
ficomps
pop
xchg
mov
mov
mov
sahf
ja
rorl
jle
les
rolb
cltd
mov
and
frstor
fsts
adc
and
pop
cmc
push
outsl
in
popa
loope
ja
lock
xchg
test
inc
enter
sub
mov
arpl
aas
inc
pop
fidivl
cmc
or
xlat
adc
xor
jbe
jae
sub
inc
out
mov
pop
lds
sarl
sti
insb
imul
jge
scas
inc
test
add
xor
clc
rclb
andl
cs
push
add
dec
mov
adc
pop
mov
dec
inc
adc
pop
mov
mov
pushf
in
mov
loope
clc
in
xchg
hlt
out
sub
jp
movsl
push
pop
dec
push
mov
pop
adc
inc
rcrl
xor
jge
sbb
inc
mov
push
out
jecxz
in
jg
arpl
jnp
sub
les
test
insb
and
mov
insb
xchg
sbb
sahf
test
push
add
lret
popf
add
lret
shl
pop
mov
mov
xlat
xchg
mov
shll
xchg
lods
pusha
or
mov
movsl
shlb
repnz
cld
xor
sub
arpl
fildll
fcomps
movsl
test
movsl
into
scas
dec
cmpsl
cmpsb
movsb
jecxz
aas
dec
pop
jbe
jae
movsl
dec
dec
push
mov
shrl
jp
add
push
push
stc
and
cwtl
push
adc
sbb
cmp
pop
shl
xlat
cmpsl
bound
and
and
inc
jns
mov
stos
dec
call
cmpsb
add
testl
pop
int
inc
paddb
xchg
xchg
mov
mov
ficoml
mov
movb
pop
ret
aam
xchg
or
in
mov
sbb
lods
sub
iret
popa
aad
aam
mov
iret
inc
mov
jno
lods
pop
lret
testb
inc
rcl
cmc
loop
stos
ljmp
mov
movsl
jle
lret
mov
pop
xor
adc
lcall
push
dec
jecxz
jp
cld
xchg
repz
inc
and
mov
and
aas
and
cmpsb
pop
fdivrs
sub
movlps
test
adc
push
data16
cmp
clc
cmc
int
cmpsl
shlb
into
inc
dec
out
test
sbb
adc
jns
rorb
lea
jno
push
cltd
mov
or
and
mov
add
shlb
in
rcr
shrl
inc
lds
daa
dec
movsl
mov
loope
push
lea
push
lds
rorl
mov
dec
fcoms
push
sbb
faddl
lods
ds
push
push
js
cltd
xorps
out
mov
lcall
pop
sub
jge
int
out
push
adc
inc
sub
int
xchg
scas
or
mov
cli
sub
cmpsb
adc
aaa
xchg
arpl
call
inc
test
and
jp
adc
insb
pop
shrb
push
adc
addr16
stos
loop
sahf
cld
mov
ret
pop
lods
call
lret
divb
in
pop
rcrb
repz
ljmp
adc
fxtract
adc
sub
mov
cmp
jle
cwtl
sahf
aas
sub
add
mov
jge
mov
lcall
xchg
clc
mov
jl
fisubl
in
cmp
inc
shl
mov
jle
mov
mov
mov
sbbl
daa
cmp
sbb
or
pop
mov
xchg
data16
cs
das
dec
les
mov
and
nop
adc
fcmovbe
aas
lods
sbb
ss
cld
mov
sti
adc
inc
lock
xor
pop
mov
add
aam
mov
pushf
jg
ja
ret
pop
shll
in
movsb
mov
std
dec
push
mov
out
mov
sub
jg
js
loop
jl
inc
jb
jg
daa
sbb
gs
fidivs
push
mov
aaa
addr16
pushf
mov
xchg
lds
shll
xchg
push
mov
gs
sub
leave
sbb
shll
decl
push
pop
cwtl
xchg
ja
cs
mov
movsl
pop
xor
mov
xchg
xchg
andb
mov
jecxz
xchg
jnp
insl
cmpl
adc
pop
cmpsb
stos
adc
shrb
cs
test
jno
rclb
das
xor
push
cmpsb
jns
mov
ret
out
xor
mov
jno
mov
arpl
xchg
jecxz
ret
and
aas
jns
xor
mov
cmp
je
mov
add
pushl
dec
movsl
mov
cli
inc
dec
iret
adc
stc
cwtl
pusha
jnp
sub
js
pop
or
cmp
cmp
or
jno
fbld
stos
mov
or
cmp
lahf
out
and
sub
loopne
movsb
sahf
push
and
lahf
sub
sbb
sub
inc
ret
cmp
mov
push
pop
adc
add
pop
mov
sub
adc
and
sar
test
mov
lds
gs
es
cli
mov
movsl
nop
sbb
cld
cmp
popf
cli
cmp
decl
or
test
das
mov
in
push
repz
push
inc
jae
loopne
out
pusha
adc
repz
or
cs
add
insb
add
leave
xlat
push
jle
push
jne
mov
js
dec
aam
insl
cmc
adc
jo
adc
fimull
adc
sbb
mov
neg
xchg
xor
push
mov
jae
mov
pop
pop
pop
xchg
xor
adc
iret
into
fs
pusha
enter
adc
lahf
in
cmpsl
in
jne,pn
or
push
add
push
cmpsb
sub
outsb
inc
mov
jo
adc
xchg
inc
mov
pop
std
sub
or
mov
sti
movsl
cmovle
cmp
push
or
inc
sbb
jne
push
adc
mov
cmp
xchg
mov
fistps
push
popa
aam
nop
fcmovne
ret
or
sbbl
lcall
or
out
mov
push
xlat
sbb
inc
mov
jecxz
sbb
push
loop
call
jl
shrl
sti
mov
or
cs
push
jge
xchg
jmp
or
fnstcw
subb
push
jle
push
test
fadds
adc
xchg
jmp
aas
aad
mov
and
sbbb
push
fmull
push
test
test
push
push
stos
sti
icebp
stos
loopne
pop
sub
xor
nop
fadd
sub
repz
jecxz
cmp
iret
mov
mov
mov
shll
xor
movsb
sarb
cmc
lcall
lcall
inc
je
mov
lods
mov
loope
cli
movsl
bound
call
and
adc
mov
push
sbb
cmp
jno
scas
daa
fimuls
gs
and
dec
jle
outsb
fsubs
ljmp
in
mov
in
sub
lds
ss
xchg
xlat
jno
scas
sbbb
dec
mov
inc
pop
imul
push
xchg
mov
jae
jmp
cli
scas
xor
jg
ja
lahf
push
mov
and
pop
push
lahf
orb
divb
mov
xchg
jp
aad
push
sbb
xor
sub
add
mov
sti
rcll
insl
add
mov
mov
jmp
outsb
rolb
sub
ds
adcl
bound
sub
mov
scas
mov
sub
std
mull
movsl
dec
aas
pop
into
into
pop
clc
inc
fiadds
scas
or
rcl
mul
xor
mov
mov
adc
jle
test
mov
adc
shl
mov
pop
shrl
mov
add
js
cld
xchg
jmp
and
or
sar
mov
repnz
adc
testb
int3
inc
nop
out
adc
movsb
cmpsl
mov
add
xor
in
int
and
lret
mov
cmp
insl
clc
ljmp
jp
jp
cmp
cmp
mov
pop
stos
es
into
pushf
imul
sub
add
mov
inc
inc
push
rol
cld
cmpsb
fcmovnu
push
mul
fdivrl
pop
xchg
fidivs
in
movsb
xchg
mov
cmp
fmulp
jl
push
push
imul
movsb
pushf
ss
xor
xchg
cmc
add
scas
sbb
xchg
lock
push
dec
into
sub
in
aad
pop
rcll
pop
outsl
popa
clc
xor
popf
insb
lods
sub
dec
sub
fucom
xchg
pop
rcll
cli
rcll
cmp
lea
icebp
push
outsl
mov
icebp
mov
xchg
pop
out
push
jecxz
cmp
jns
rcll
addl
out
or
xor
neg
into
int
xor
or
or
outsb
rol
push
sbb
xor
inc
dec
scas
movsb
xor
sub
xlat
setb
shlb
js
aaa
cmp
dec
jbe
les
pop
push
outsl
ret
and
or
lods
cmp
inc
vmovaps
dec
jo
loope
lcall
jbe
cmp
sbb
arpl
sbb
stos
out
jns
adc
loope
xchg
push
imul
movsb
mov
ja
inc
sub
movsl
push
or
pf2iw
xor
fcoms
idiv
les
enter
das
out
xchg
push
rcll
movsl
jbe
clc
enter
pop
cmp
ljmp
jecxz
mov
aas
add
cmpsb
in
fstl
xchg
mov
xor
push
insb
sub
and
das
icebp
dec
or
inc
cmp
mov
xchg
inc
jbe
loope
mov
mov
xor
pop
cmpsb
mov
movsl
or
or
stos
sbb
mov
mov
pop
das
pop
push
aam
cmpsl
popf
clc
push
dec
in
mov
bound
mov
xlat
fdivrs
stos
cli
outsb
push
sbb
arpl
mov
test
arpl
das
fnstcw
dec
ss
mov
inc
adc
out
mov
sbbl
lahf
lahf
scas
sbb
xchg
adc
or
popf
pop
pop
and
adc
or
aam
xchg
insl
jecxz
lret
mov
aas
inc
adc
push
mov
cmp
shll
outsl
adc
and
fcomp
push
cmp
cmp
fucomip
mov
pop
jns
cmp
lret
leave
popa
neg
jecxz
test
jbe
imul
jg
ja
inc
pop
push
cmpsl
xchg
cmp
movsb
cltd
lds
sbb
jb
clc
imul
dec
fs
enter
out
mov
repnz
sbb
mov
dec
in
xchg
xchg
andb
mov
sub
and
inc
jae
pop
dec
xor
adc
xor
xor
adc
lahf
fldcw
sub
jmp
lret
or
push
out
out
xor
mov
and
movb
xor
push
mov
pop
lcall
mov
inc
aaa
lcall
push
inc
test
mov
fwait
cltd
jns
cmpb
cmc
hlt
sub
out
add
inc
test
xlat
jnp
aam
je
lret
sub
push
pushf
add
jmp
dec
ret
popf
pushf
push
add
loop
mov
je
mov
loopne
lods
push
nop
imul
mov
cmpsb
or
mov
ljmp
cmpsl
mov
jae,pt
push
das
outsb
cwtl
xor
stos
movsl
inc
and
aas
mov
sub
ret
popf
aam
sti
test
out
lods
cwtl
and
mov
jae
or
mov
pop
jnp
lret
test
sbb
ljmp
jmp
sub
das
mov
mov
test
ss
adcl
nop
mov
add
popf
sbb
imul
std
push
lret
push
jo
jae
lds
push
push
lock
push
adcb
lock
sbb
add
jecxz
push
and
sub
adc
orl
or
dec
aad
dec
outsb
loopw
and
jge
sub
inc
push
sub
in
mov
incl
push
daa
and
dec
dec
mov
dec
pop
adc
push
push
push
push
stos
lods
xor
sbb
or
repnz
roll
sbb
mov
fidivrs
cs
and
ss
popf
adcl
shrb
add
ficoml
lods
xchg
test
faddl
dec
inc
inc
mov
ds
inc
inc
fmuls
add
inc
cmc
call
rolb
test
lods
lahf
push
cmp
fwait
add
xchg
rcr
das
arpl
and
unpckhps
dec
rolb
dec
dec
int3
aas
and
in
or
sbb
pop
and
sbb
into
sub
inc
cmp
ljmp
stos
pop
mov
mov
int
xchg
inc
and
xor
je
lods
int3
jecxz
cmp
sbb
and
or
repnz
cmp
rclb
pop
or
faddp
fisubs
cmc
lods
mov
je
adc
mov
imul
rol
mov
fstpl
cmpsb
xchg
daa
push
mov
mov
dec
pop
data16
cmp
jno
adc
or
mov
daa
add
jmp
hlt
jb
fisubrs
mov
in
scas
int
sub
and
jno
mov
mov
pop
insl
inc
mov
and
out
ljmp
roll
mov
xlat
push
push
pop
and
popa
sbb
jp
mov
or
pop
jmp
rcr
push
int
pop
mov
decb
add
leave
and
enter
and
das
dec
rcrb
push
int
push
mov
pop
pushf
push
js
mov
xchg
cwtl
push
jae
std
push
testl
mov
xchg
call
sbb
mov
xchg
add
sbb
push
xchg
adc
test
jo
ds
imul
cli
sub
lods
or
xchg
pushf
sub
jns
jno
leave
mov
adcb
jp
scas
mov
push
test
add
mov
mov
nop
xchg
lret
jge
jne
mov
jne
lret
mov
xor
xor
popf
jns
dec
cwtl
adc
cltd
test
call
sub
xchg
sub
push
fcompl
repnz
jb
in
sarb
sti
cltd
mov
imul
cmpsb
jae
aad
jg
rcr
sub
xlat
xchg
mov
loop
xor
mov
loop
xchg
imul
loopne
add
xchg
mov
cs
sub
xor
in
ljmp
mov
loop
sub
out
into
push
lcall
fistl
repz
lock
lods
cmp
add
push
aam
stos
add
out
fdivs
rol
dec
test
cli
ds
movsb
ret
loope
shlb
rcrb
sub
jb
sti
adc
dec
xchg
out
xchg
mov
addr16
mov
addr16
out
pop
sarb
cmc
into
test
jo
xor
jl
out
sub
popf
adc
leave
pusha
daa
int
push
shlb
inc
nop
les
push
fisubs
inc
insl
xchg
sti
subl
das
hlt
dec
js
es
sarb
rorb
jne
adc
and
xor
shrl
mov
mov
popl
out
push
adc
sub
cmp
jo
or
push
and
arpl
cmp
cmp
fisttpl
and
fildl
shlb
mov
fdivr
lods
lret
add
push
cltd
iret
cmp
xchg
scas
test
in
mov
jae
inc
xor
sub
int
add
jne
dec
sti
lret
mov
pop
lods
mov
insb
mov
mov
repz
push
cld
sbb
xchg
or
gs
rcrb
and
outsl
jns
mov
lcall
jbe
loopne
dec
fstps
ss
pop
push
lahf
sbb
push
leave
sahf
jne
cmp
jmp
jns
gs
cmpsl
and
shrl
dec
mov
pushf
sti
cmp
shrl
inc
lret
push
inc
add
mov
pusha
inc
push
int
es
xchg
rcrb
repnz
ljmp
ljmp
imul
imul
repz
test
sarl
loopne
mov
test
stc
flds
cli
mov
clc
sbb
jg
push
jbe
scas
pop
xor
xor
ja
mov
mov
push
sbb
sti
test
xor
pop
jmp
push
jmp
popa
enter
shrb
inc
js
mov
mov
dec
jg
in
aaa
adc
mov
out
int3
mov
add
sub
mov
into
icebp
cmp
jno
lock
mov
fwait
mov
push
ja
mov
cmp
push
and
cmp
je
nop
test
dec
comiss
jo
shr
add
and
sbb
xchg
mov
jae
mov
popf
and
and
and
fcoml
push
andl
mov
loop
aad
je
add
push
nop
sti
xor
nop
test
sbbb
lea
sbb
push
push
cmp
or
int
lcall
xchg
cmp
ja
js
jle
icebp
iret
insb
push
jge
jmp
orl
sbbl
imul
dec
std
lock
jbe
das
mov
rcr
sahf
jecxz
sbb
sbb
jge
jl
or
xor
mov
mov
xchg
imul
out
add
repz
add
cmpsl
xor
cmp
or
add
push
and
rorb
ljmp
sbb
ja
loop
push
aam
or
mov
xor
imul
jno
pop
aad
mov
jns
xchg
xchg
xor
pop
les
testb
lock
out
xchg
insb
jecxz
shrb
dec
jmp
and
insl
dec
test
pop
and
andb
iret
xchg
rcrl
pop
mov
xchg
jns
fstpt
sbb
lea
aaa
or
paddd
fstp
lods
in
cmpsl
pop
xor
rorl
fisubl
jno
mov
ljmp
cmp
lret
sub
lea
and
cmp
outsl
sbb
jg
shrb
adc
jno
xlat
negl
lret
into
cmpsw
cmpsb
stc
aas
cmp
jbe
inc
loope
or
arpl
mov
fsubrl
dec
adc
sti
cmp
ss
mov
stos
mov
fwait
imul
imulb
cmpl
pop
dec
jmp
add
pop
xor
dec
xor
je
mov
sbb
notl
sbb
pop
nop
int3
inc
icebp
cmp
xlat
jne
sbb
stos
sub
movsb
aaa
sub
or
ljmp
adcb
push
xor
lahf
test
outsl
mov
test
stos
jge
jnp
mov
mov
cmp
dec
or
cmp
bound
jnp
scas
repz
fwait
adc
js
jns
adc
outsl
sub
cld
ficoms
and
xor
add
add
in
cmp
jno
in
jl
lret
push
int
mov
cmp
dec
lahf
pop
pop
sbb
fimull
or
daa
jg
dec
leave
mov
aam
cmp
cmp
mov
inc
nop
xchg
cmp
dec
test
rcrb
gs
popa
push
mov
sbb
cltd
insb
lahf
jne
mov
rorb
dec
mov
rcl
subl
loope
sub
jne
jg,pt
xchg
dec
lods
xchg
sub
fidivrs
flds
cmc
scas
cwtl
push
iret
lds
imul
dec
dec
push
mov
push
repnz
fldl
pop
fisttpl
faddl
pop
mov
xchg
mov
in
lock
sub
clc
movsb
xchg
or
call
push
popa
aas
dec
inc
pop
push
push
dec
push
mov
popa
in
xor
pop
jmp
lcall
ja
lock
add
jns
inc
mov
cwtl
sti
enter
mov
lahf
push
ljmp
stc
in
pop
and
int
sti
ljmp
mov
lret
jp
mov
ret
cmp
xor
pop
lock
push
iret
cs
lahf
ret
gs
inc
cmc
or
jae
mov
subl
jmp
mov
mov
inc
adcl
adc
rcll
pop
test
fldenv
imul
cmpsb
pop
dec
jnp
sub
ret
loopne
sbb
test
repnz
inc
inc
mov
flds
xchg
test
and
imul
sbb
into
ljmp
stos
sbb
pop
xchg
inc
jno
mov
rcll
jg
fldenv
cwtl
in
or
lea
and
cmp
and
xlat
cli
dec
in
test
mov
add
mov
repnz
sbb
imul
enter
cmc
xchg
lret
cmpsl
and
xchg
jns
bound
xchg
inc
push
xchg
lds
orl
sub
xor
jmp
pop
aas
iret
lods
fdivr
xor
adc
dec
lea
xor
xchg
jno
outsb
aas
fiadds
insw
outsb
stc
xchg
pop
push
add
aaa
adcl
mov
clc
jge
sub
cwtl
lret
das
sahf
add
aaa
repnz
adcb
pop
dec
leave
test
pop
dec
lret
lods
add
add
add
jae
ret
cli
lahf
mov
mov
stos
pusha
sbb
mov
mov
in
mov
jb
lcall
xor
pop
repz
call
out
jno
clc
add
and
jle
and
adc
jl
add
mov
jno
fwait
mov
mov
mov
int
fcompl
roll
clc
inc
out
test
pop
fs
outsl
ja
mov
into
mov
add
mov
lock
xor
repnz
jge
cld
mov
inc
sahf
mov
mov
lret
jbe
jo
das
sub
testl
pop
jae
rorl
adc
imull
add
add
mov
mov
clc
dec
push
adc
mov
and
leave
dec
out
mov
ja
and
push
and
cmpsb
popa
icebp
dec
ds
filds
inc
lock
test
inc
mov
mov
sub
lret
pop
pop
clc
arpl
push
push
mov
push
sti
ja
daa
lret
or
sub
mov
ja
popf
stc
decb
push
cmpsl
push
or
pop
adc
fsubs
lahf
cmp
pop
push
dec
je
rolb
out
out
lods
subb
sub
push
jl
les
daa
adc
lock
aam
mov
push
add
cmc
mov
mov
xor
mov
mov
inc
cmp
adc
jo
lea
mov
rorb
fldl
fbld
and
test
xor
push
mov
out
jae
pusha
jp
imul
and
test
push
stos
repnz
push
push
pop
pushf
cwtl
js
repz
mov
dec
xor
sbb
jle
mov
mov
in
add
sbb
pop
sbb
aad
sahf
mov
ljmp
rcrb
imul
mov
pop
shl
lret
loopne
aaa
mov
xchg
lea
shlb
lahf
rcrl
popf
ja
in
sbb
cmpsb
insl
xchg
sti
cs
push
mov
hlt
pusha
xor
rcl
test
mov
cmp
ljmp
push
rol
orl
cltd
push
xor
fsubrs
into
mov
and
sbbb
push
adc
fs
nop
popa
ror
dec
mov
loop
xor
pop
mov
idivl
loopne
int
xchg
cmp
ja
push
fsubs
mov
and
xor
mov
or
ret
roll
mov
xor
cli
ror
cmp
call
repnz
pop
dec
pop
adc
clc
les
adc
pop
out
in
int3
fdivs
scas
push
jp
mov
mov
shll
stos
bound
leave
lcall
pop
popa
dec
cmp
out
test
inc
xchg
xchg
jnp
mov
jmp
and
xchg
outsb
pop
insl
sub
arpl
push
push
lock
jne
loopne
incl
mov
xchg
dec
out
and
bound
adc
add
xchg
dec
roll
ret
je
and
sti
int3
cmp
mov
xchg
dec
fcoms
xchg
fcoml
push
imul
dec
hlt
rcll
loop
lret
ret
leave
ffree
mov
pop
push
ret
xor
dec
sahf
inc
bound
insb
mov
mov
test
into
sti
cs
inc
call
xor
cltd
subb
xchg
or
push
shrl
mov
sub
enter
enter
loopne
push
push
jmp
cmpsb
loop
jl
sbb
in
jecxz
xor
push
add
popf
or
or
push
test
mov
mov
testl
je
aas
inc
shlb
pop
and
push
imul
test
and
mov
pusha
dec
leave
cmpsb
cmc
pop
mov
addb
jecxz
jg
gs
int3
pop
dec
adc
jge
adc
push
pop
test
xchg
xlat
pop
cmp
push
sub
fnstenv
mov
inc
outsb
mov
cs
xor
ljmp
nop
dec
loopne
or
outsl
fs
inc
cld
inc
mov
lret
popa
cmp
cmpl
dec
mov
in
and
sbb
scas
adc
mov
dec
jns
mov
mov
movsl
lods
xchg
sbb
cmp
into
test
pop
cmp
data16
jecxz
ja
popa
ljmp
push
and
xlat
xor
jns
jnp
aas
sub
dec
adc
inc
inc
std
jecxz
xchg
jbe
sbb
lock
xor
out
aam
fmuls
out
dec
jne
cmp
xchg
cs
lcall
adc
push
bound
push
jle
test
pusha
mov
lock
jecxz
mov
sahf
rorb
sbb
dec
loopne
ja
in
cwtl
lea
std
cs
lods
mov
inc
out
jge
clc
push
pop
hlt
icebp
xchg
mov
aam
inc
vmovntps
adc
cmp
hlt
mov
sbb
cltd
shrl
lret
into
and
jp
call
cmc
jnp
xlat
aas
outsb
arpl
mov
movsl
sub
adc
or
repnz
ss
stos
or
lock
xor
mov
push
add
outsb
aam
pop
orb
or
jge
arpl
dec
sub
mov
mov
stos
test
dec
mov
pop
adc
inc
add
sti
lret
sbb
pop
dec
sti
pop
ficoml
or
cli
fmulp
arpl
mov
mov
add
mov
clc
dec
and
pop
ret
push
in
fistl
pop
or
add
int
cmc
fucomip
xchg
or
and
mov
sti
xor
repnz
jge
mov
mov
pop
arpl
mov
das
aad
jne
in
stos
popf
xor
data16
or
repz
in
pop
sbb
mov
sub
add
push
xor
mov
mov
push
sti
jecxz
int
and
lret
push
add
sub
dec
sarb
cmpl
or
je
rcrl
cltd
das
lds
sbb
cwtl
xchg
adc
and
jmp
dec
sbb
test
xor
aas
xchg
insb
fcmove
mov
stos
jno
fmulp
xor
xchg
es
cmp
and
les
cltd
add
jae
mov
les
push
push
call
sbb
hlt
iret
sarl
push
inc
mov
inc
loope
push
outsl
adc
adc
xor
or
lods
mov
push
cmp
lahf
pop
sbb
imul
int3
xor
push
stos
push
xchg
lahf
jbe
insb
int3
inc
les
jge
jno
mov
sub
fldt
pop
pop
cmpsb
aad
stos
adc
cmc
jmp
cmp
mov
ja
sbbb
ret
enter
add
push
cli
gs
gs
insb
mov
and
andl
jbe
pop
add
add
push
adc
cltd
mov
xchg
mov
test
pop
mov
push
mov
ss
mov
pop
in
lret
lahf
jae
inc
xchg
or
imul
aas
movsl
notl
hlt
sub
call
out
sbbb
js
fmul
flds
xor
lods
mov
adc
jmp
lds
movsb
inc
sub
xchg
stos
push
or
pop
sar
in
int3
cmp
mov
lock
cwtl
xor
dec
inc
lret
je
in
sub
push
popa
inc
bound
lret
push
das
iret
fs
jns
xlat
mov
xchg
jo
xor
ret
mov
cmp
pop
mov
shlb
mov
mov
sub
push
mov
movsb
in
popf
xlat
mov
repz
push
addl
sbb
ffree
pop
pop
sarl
jne
repz
std
mov
or
sbb
xor
int3
xchg
es
mov
clc
repz
fsubs
bound
fwait
loopne
aas
sarl
cltd
sub
mov
cmpsb
sbb
push
adc
mov
sbb
js
ficompl
out
pushl
jb
xchg
mov
jl
pop
jecxz
ret
movsl
in
pop
and
jo
lahf
cmp
cmp
jg
xor
cmpsb
inc
orb
into
out
ret
xor
mov
and
add
sbb
xchg
sbb
and
fldenv
std
les
call
daa
fidivrl
mov
outsl
movsl
test
push
out
arpl
loope
push
jmp
repnz
imul
pop
push
dec
xor
jns
arpl
push
subb
jns
push
loop
lahf
add
push
cmp
or
add
scas
popa
lahf
enter
lods
mov
pop
push
iret
cmp
lods
jl
or
sbb
pushf
mov
or
mov
mov
push
cmp
int3
outsb
xchg
aas
lods
movsl
das
cmp
add
cmc
lea
fiadds
dec
mov
lahf
or
xchg
inc
adc
icebp
ljmp
negl
jbe
iret
insb
pop
lret
nop
sub
jecxz
dec
lret
add
dec
jle
and
xor
lahf
in
sbb
lods
lret
push
popfw
pop
scas
mov
jnp
adc
adc
add
add
mov
in
movsl
push
in
inc
fldenv
or
ret
cs
hlt
fisttpl
scas
pop
out
push
filds
inc
enter
iret
jmp
add
add
movsl
dec
daa
ret
lret
pop
adc
shll
pop
adc
mov
repz
xor
stc
stos
addr16
ljmp
or
pop
mov
dec
rorb
loop
lret
mov
mov
pop
sbb
mov
mov
pop
cmpsb
lods
and
fistpl
inc
repz
std
push
mov
inc
push
gs
xchg
mov
sti
inc
add
adc
xchg
stc
cmp
add
xchg
scas
rorl
mov
jb
mov
out
xlat
stos
shlb
sbb
cmp
rcr
dec
dec
inc
pushf
mov
repnz
inc
add
scas
xor
mov
std
add
aam
jne
aam
sbb
ljmp
stos
dec
ds
aam
cltd
or
add
xor
fisubs
scas
insb
dec
bnd
push
lret
roll
push
jae
cmp
outsb
loope
inc
pop
jbe
xchg
mov
fstl
xor
movsl
xor
or
insb
push
mov
add
xchg
cld
jne
mov
or
nop
iret
add
lock
mov
sub
dec
push
xchg
add
in
cli
push
imul
sub
mov
outsb
mov
jmp
int3
xor
nop
pushf
insb
push
loope
adcb
jecxz
push
jnp
mov
or
addr16
fstpl
cmc
loopne
stos
mov
push
or
enter
shll
xchg
push
mov
mov
loop
sbb
call
pop
icebp
pop
cmp
and
mov
inc
lret
lahf
cmp
cmp
dec
ds
or
and
adc
sbb
testl
mov
and
xchg
in
fs
or
mov
repz
jp
negl
adc
cmc
xor
mov
xlat
inc
and
inc
jl
mov
jo
mov
fiaddl
cli
sbb
sub
or
rolb
sbb
pop
in
rclb
iret
mov
push
jecxz
mov
cmpsb
sub
add
mov
sbb
arpl
pminsw
jo
into
jo
out
out
mov
cmpsl
inc
repz
adc
jp
pop
pop
lea
mov
adc
rcll
js
adc
or
daa
pushf
pop
lcall
push
jge
push
xchg
out
jmp
lock
cmc
iret
xchg
imul
adc
cwtl
mov
mov
mov
pop
sarl
test
jge
push
and
nop
int
sbb
aad
sbb
roll
arpl
lock
daa
sti
or
je
lret
push
les
dec
cltd
pop
or
pop
sti
mov
mov
pushf
test
lds
mov
cmp
rcll
arpl
out
inc
lods
rcrb
jle
lock
int3
lock
clc
inc
sub
adcb
scas
les
loop
inc
pop
adc
and
sub
std
xchg
movsb
add
popf
lret
xchg
aad
fistl
add
ficompl
cmpsl
adc
xor
fdivs
push
mov
mov
or
push
das
and
mov
sbb
jmp
mov
movsb
int3
roll
or
and
cmp
in
pop
cmpsl
fmull
add
mov
jb
loopne
xor
stos
out
mov
and
outsl
fcoms
and
and
xor
jbe
add
add
lahf
lcall
nop
sub
adc
adc
repz
gs
shlb
sbb
dec
movsl
bound
scas
js
in
dec
lods
or
adc
mov
sub
loope
lret
enter
test
cld
push
imul
out
push
sub
inc
cmpsl
cmc
cs
call
out
ret
call
sbb
popa
cs
ds
and
in
xchg
dec
dec
ja
cld
pop
pop
inc
lods
call
imul
inc
rclb
push
add
adc
ljmp
xchg
cmpsb
add
cmp
jns
js
add
mov
stos
mov
push
mov
or
cli
lret
pop
incl
pop
push
cmpsb
mov
mov
negb
ljmp
aam
mov
sbb
in
mov
xor
fmuls
jp
xor
test
mov
sbb
cltd
and
mulb
lret
mov
inc
sub
mov
arpl
and
insl
xchg
mov
fiadds
sbb
ljmp
and
dec
mov
jb
cld
enter
jo
jne
lret
sub
xor
jl
push
fistl
cmp
insb
mov
inc
stos
sub
push
arpl
hlt
adc
xor
cmp
add
mov
push
adc
xchg
xchg
roll
pop
pop
out
insb
lods
lahf
lea
inc
test
or
mov
jne
xchg
jne
xor
or
lock
clc
cmp
xor
xlat
loope
sub
aaa
jmp
in
mov
xchg
push
out
sarl
data16
cmp
in
mov
jns
mov
adc
cmp
inc
mov
leave
ffree
test
scas
stos
ret
ja
jnp
test
popf
seto
xchg
mov
test
insl
mov
in
and
in
pop
add
cmp
or
xor
sbb
push
pop
je
aas
repnz
sbb
sub
mov
add
jbe
clc
mov
xor
dec
mov
mov
out
int3
outsb
cmp
jbe
leave
aaa
loope
mov
sub
fwait
lret
mov
stc
adc
xor
or
push
jl
movsl
sub
lods
sub
mov
push
dec
loop
and
js
cld
xor
test
jns
popf
mov
sbb
inc
sbb
insl
lret
xchg
cmp
hlt
shlb
jnp
movsl
outsl
or
insl
jns
test
and
roll
aaa
sub
push
test
ja
pop
pop
jnp
fwait
sbb
clc
dec
sbb
jge
or
mov
test
testl
clc
pop
mov
add
jo
xchg
rcll
dec
cmc
push
sub
cmp
xlat
arpl
iret
ror
or
jp
jle
scas
fldcw
cmp
outsl
ljmp
xchg
stc
add
xchg
xor
ret
lahf
btc
mov
dec
dec
movsl
jl
into
push
shll
add
push
mov
push
imul
clc
int3
cmp
sub
iret
stos
adcl
lret
leave
insb
jge
xor
sarl
xor
inc
shl
pop
aaa
out
fisubs
jns
push
mov
add
in
mov
adc
pushf
jae
pop
jbe
mov
sub
or
rclb
jecxz
dec
jo
mov
pushf
fdivp
jbe
cltd
leave
in
xchg
cmp
int
dec
jo
lods
and
pop
arpl
stos
hlt
incb
lcall
pop
rcl
es
ljmp
push
jo
adc
lods
or
lds
sub
orl
inc
xor
paddd
cmp
out
or
sbb
push
lock
xchg
mov
ss
lds
rolb
jae
sbb
xchg
shll
movsb
fidivs
mov
dec
sub
lds
je
sub
lret
lret
xchg
inc
cmp
fimuls
dec
jg
lds
xchg
pushf
push
test
pop
cmp
js
dec
jno
pop
addr16
subb
pop
pop
adc
sbb
rcrl
imul
dec
mov
mov
loopne
pop
test
inc
adc
sub
aaa
js
ja
lret
scas
sbb
dec
push
xor
icebp
mov
sub
ret
xchg
pop
imul
popl
imul
mov
clc
cmp
repz
iret
imul
dec
fisubs
mov
test
and
push
xlat
movsb
sub
mov
mov
mov
pusha
into
inc
fs
icebp
cmpsb
jno
das
sbb
shll
ret
ja
test
inc
cltd
xor
sub
mov
sbb
dec
ja
mov
rclb
push
out
repz
mov
sub
clc
fs
lret
pushf
dec
add
mov
fwait
je
adc
dec
jo
jecxz
sub
iret
shll
into
icebp
imul
lods
cli
cld
and
cmpsb
or
pop
lcall
sub
add
mov
mov
dec
adc
inc
repnz
stos
mov
pop
sub
fstl
add
cmp
mov
or
jmp
xor
push
iret
icebp
pushf
sahf
mov
insb
xchg
inc
stos
neg
aad
test
push
mov
xor
xchg
xorb
es
pop
adc
mov
hlt
and
mov
jnp
and
stos
outsl
pop
add
push
outsl
out
xchg
push
mov
ds
cltd
xchg
pop
lcall
push
pop
mov
add
je
xor
adc
jecxz
test
adc
dec
popa
ret
jno
frstor
jp
pusha
addl
and
aaa
ret
mov
in
repz
js
or
inc
push
adc
jb
inc
jno
fidivrs
fadd
bound
ret
xchg
arpl
jmp
add
inc
pop
into
aad
cltd
jp
jo
jbe
cs
insl
fstps
mov
adc
out
dec
fdivs
ljmp
scas
pop
sub
adcl
insl
out
jae
mov
xchg
adc
dec
adc
inc
addl
iret
xchg
movsb
in
mov
mov
sub
inc
ss
test
out
mov
pushf
mov
lcall
in
mov
xchg
xchg
push
pusha
lcall
repnz
jge
cmpsl
xchg
push
test
jle
psubsw
testl
call
std
jmp
outsl
mov
jp
js
sub
sar
xor
fwait
into
loopne
cld
dec
rorl
jp
dec
mov
outsb
pop
mov
pop
fildl
sbb
daa
sbb
pop
lock
mov
xchg
push
vshufpd
or
mov
sub
aaa
pop
testl
mov
xchg
les
mov
scas
adc
aas
and
pushf
bound
fadds
mov
lret
sbb
pop
xchg
push
sahf
lock
add
ds
xchg
sbb
mov
dec
mov
mov
out
stos
pop
arpl
or
pop
mov
sbb
gs
lahf
adc
mov
dec
ret
ds
lods
in
hlt
faddl
jg
clc
cli
inc
mov
push
mov
xchg
xchg
test
loop
out
cmp
cltd
xor
pop
mov
pusha
add
lcall
ja
fildl
cs
clc
adc
inc
imul
inc
lcall
push
push
stos
fimuls
std
leave
jb
rcrb
les
sbb
pop
mov
cmc
je
mov
repnz
js
jl
pop
sub
xchg
aaa
shll
push
mov
ja
cmpsl
fcomi
dec
mov
ret
outsb
dec
imul
xchg
jbe
inc
dec
jmp
xor
test
mov
movsb
adc
ret
lds
ret
inc
mov
fwait
jae
fildll
and
dec
cli
andb
jbe
xchg
mov
or
sti
xchg
addl
xchg
in
sub
sub
in
ficoms
sub
outsl
and
and
cltd
dec
mov
cmp
push
inc
sub
pop
clc
out
sub
xorb
mov
lea
ds
inc
inc
stos
mov
pop
adc
dec
inc
xor
sbb
push
aaa
pop
out
sti
clc
xchg
rcl
cmp
push
je
push
mov
ret
in
xor
stc
cltd
aad
mov
push
mov
data16
fildl
inc
sbb
add
aad
add
lahf
jns
pop
dec
out
in
pushf
fs
fcmovnu
outsl
aas
adc
fisttps
mov
xchg
cmpsl
nop
add
scas
jnp
shlb
dec
xor
les
lock
rol
mov
pushf
xchg
cmpsb
and
call
arpl
pop
sub
sbb
mov
push
push
dec
mov
pusha
xchg
enter
jmp
and
xor
or
out
inc
add
lods
push
subb
pop
jp
dec
popw
dec
mov
add
xor
ja
leave
les
js
push
add
fmul
cld
loope
gs
insb
add
ss
daa
roll
jno
loop
roll
push
push
inc
pop
mov
clc
or
xor
lcall
int
pop
and
sub
dec
adc
cmpsl
cmp
or
bound
xorb
test
jl
xor
int
sbb
cmpsl
jb
movsl
pop
or
jae
test
outsl
fsubrs
out
sub
jg
mov
lods
call
push
or
add
mov
pop
rcrl
or
es
mov
xor
std
or
ror
push
insb
jg
jp
rcll
sub
xchg
mov
repz
pop
ficompl
sti
fiaddl
ja
sbb
push
fldt
sub
movsl
fbstp
out
jmp
rcrb
rcl
lahf
jns
aam
sti
std
adc
mov
loop
mov
and
decb
cmc
pop
push
pop
push
mov
mov
xchg
push
ret
mov
xor
adc
test
insb
xlat
stc
cmp
mov
xchg
sbb
pop
aas
fistpl
cmp
sbb
mov
push
inc
push
shrb
mov
sahf
jle
dec
pusha
inc
jb
dec
cmpsl
cmp
call
enter
jb
ret
mov
mov
lret
test
pop
in
cmp
lods
mov
mul
mov
repz
in
enter
jg
add
aas
cmp
lret
mov
jns
push
xor
insl
pop
lret
stos
adc
xorl
xor
scas
and
and
dec
lods
hlt
pop
mov
and
mov
inc
mov
jbe
mov
bnd
xchg
out
insl
insl
sarl
dec
cs
inc
adc
hlt
mov
sbb
push
stos
addr16
sahf
and
sbb
hlt
fwait
add
jae
mov
stc
cmp
bound
flds
cmpsb
out
lcall
ret
sub
fcoms
jb
add
dec
pop
push
add
pop
jne
xor
lret
lret
jno
jle
push
pop
dec
outsl
testb
mov
adc
xor
push
pop
in
or
or
adc
or
jno
in
dec
sarl
mov
arpl
mov
insl
fwait
mov
sbb
jns
xchg
scas
int
les
inc
pushf
mov
lcall
loopne
dec
stc
pushf
add
incb
pop
in
add
shl
push
rcr
cmp
push
xorl
out
xor
xorl
xor
jecxz
pop
cli
mov
adc
cmpsb
mov
repnz
mov
test
stos
jmp
ja
leave
sub
sbb
mov
adc
mov
push
mov
addb
push
std
gs
test
icebp
shrl
pop
xor
mov
sub
sbb
enter
sahf
sbb
aaa
push
inc
sahf
jg
hlt
es
or
dec
sub
sbb
ds
adc
mov
push
arpl
jmp
addr16
fmull
pop
and
add
mov
ret
mov
mov
loopne
into
xor
out
outsl
ret
push
es
pop
dec
es
cld
iret
push
xchg
pop
push
pop
cmpsl
aas
jo
sbb
popa
push
in
and
dec
mov
inc
lret
xor
push
mov
jge
shll
lea
push
shr
mov
outsb
cmp
jmp
in
insl
pusha
inc
xchg
lods
ret
or
xchg
sbb
call
pop
add
xor
dec
pop
scas
and
data16
pop
sub
daa
rcrb
mov
enter
rcrl
jg
test
fildll
jmp
or
ficomps
mov
sbb
scas
add
js
ret
into
push
sbb
cmp
adc
scas
cld
lea
les
sub
mov
mov
cltd
push
push
adc
je
xchg
inc
cmp
aam
rorl
pop
xor
inc
cli
inc
mov
fldt
jbe
cmpsl
cmp
sahf
sub
jnp
dec
daa
jae
push
sbb
mov
inc
test
cmp
das
in
push
inc
push
enter
xor
arpl
mov
xchg
dec
outsb
shrl
dec
add
push
icebp
repnz
add
or
into
mov
movsl
or
push
aaa
dec
jg
dec
adc
mov
pop
sbb
push
lods
fwait
push
xchg
es
cmp
push
dec
dec
lret
mov
mov
ja
add
push
sub
nop
inc
inc
pop
stos
sbb
cli
dec
and
mov
test
push
rolb
scas
push
jp
or
sti
xchg
or
in
xchg
stos
bound
lret
adc
std
xor
aad
pop
mov
je
pop
int3
pop
inc
movsb
imull
mov
pusha
scas
cs
ds
push
cld
xor
faddl
and
das
sub
xchg
loope
clc
iret
loope
and
inc
sbb
and
int
lret
xor
lcall
jae
aam
push
stc
ds
sub
jnp
iret
pop
shr
test
pop
ficompl
mov
cwtl
ret
fisubs
je
sbb
sbb
jne
and
sbb
mov
sub
pop
push
mov
rolb
sub
je
add
add
movsl
sbb
daa
push
or
shrl
jnp
or
sub
cwtl
pop
fsts
popa
mov
push
adc
jb,pt
fiadds
movsl
mov
cmp
lods
ret
sarb
and
lahf
and
fcompl
push
mov
sub
gs
je
push
test
pusha
dec
or
jle
movsb
mov
cmp
mov
cld
push
xchg
aam
fistpl
mov
mov
sarb
dec
adcl
ret
xor
shll
mov
pop
jp
outsl
out
mov
xchg
cmpsl
push
push
pop
shld
push
clc
out
out
mov
push
xor
xchg
iret
ficomps
mov
imulb
fnsave
xor
xchg
arpl
rol
xor
mov
xlat
dec
pop
test
pop
ljmp
popa
data16
rclb
shr
push
sub
loope
inc
lock
pop
mov
popf
inc
adc
jp
push
add
cli
pushf
les
gs
stos
pop
sbb
out
dec
fwait
pop
fstp
inc
arpl
int
push
dec
jp
push
mov
and
insb
test
cmpsb
mov
int3
mov
jns
dec
sub
in
mov
xchg
xchg
roll
movl
push
xor
xchg
inc
in
subb
cs
push
pop
shlb
cmp
out
or
add
outsl
hlt
push
push
arpl
push
imul
cmovnp
mov
jb
jae
sbb
outsl
jne
enter
pop
adc
and
and
inc
jae
and
mov
jp
or
xlat
cli
test
xlat
push
inc
inc
xchg
aaa
popa
shlb
aas
push
stc
pushf
inc
sbb
lea
xchg
rcrb
pop
adc
sti
sub
pusha
int
fbld
adc
cmpb
mov
js
mov
cmp
mov
sbb
dec
sbb
test
mov
stc
aaa
add
mov
cmp
das
mov
aas
pop
and
daa
or
lea
jg
or
xchg
pop
fcom
adc
mov
xchg
cmp
mov
cmpb
sub
add
mov
jns
sbb
sbb
mov
push
pop
or
sub
icebp
popa
mov
adc
and
adc
xor
mov
mov
xor
loopne
lret
bound
testl
push
aad
popa
lea
out
shr
push
pop
push
adc
pop
push
movsl
cltd
lea
jnp
lahf
outsl
enter
rcll
call
mov
out
insb
push
stos
cs
rcll
sub
lods
outsl
aas
xchg
pop
cmp
shll
push
scas
mov
jno
lods
imul
add
repz
or
mov
sbb
dec
inc
or
out
pop
push
fsubrl
mov
mov
shlb
sti
and
dec
jl
xchg
push
outsb
popf
ds
xchg
mov
jp
lea
fnstenv
cmp
les
arpl
dec
bound
ljmp
repz
mov
dec
dec
mov
daa
popf
nop
add
or
fnstenv
pop
fcmovnu
push
sbb
push
pusha
jp,pt
test
push
in
fucomi
jb
dec
ljmp
les
lea
mov
lods
movsl
aam
rcll
imul
js
push
clc
jnp
mov
arpl
cmp
sub
cs
mov
and
push
pop
aas
push
sub
ss
je
adc
jle
dec
enter
decl
mov
jge
jg
pop
mov
stc
xchg
lea
pop
mulb
dec
mov
out
pusha
pop
xor
pop
ficoms
pop
inc
adc
adc
mov
sub
ss
outsl
jp
or
sbb
ljmp
mov
and
adc
repz
xor
sub
mov
std
gs
shlb
lret
adc
adc
inc
xor
pop
insl
add
in
dec
xor
add
dec
sub
adc
pop
nop
out
dec
bound
insb
mov
add
setb
sub
cmpsb
jp
sbb
mov
out
mov
in
mov
sbb
ja
rcll
stc
add
lcall
repz
stos
popa
pushf
stos
adc
cmpsb
xchg
fists
inc
repz
sub
sbb
pop
test
ret
mov
sbb
xchg
lea
in
stc
mov
or
sub
mov
fidivrl
mov
inc
mov
enter
inc
jmp
mov
movsb
adc
mov
push
nop
test
nop
scas
sub
mov
adc
adc
mov
inc
int
ds
popa
push
imul
repz
int
gs
daa
ds
mov
scas
or
movsl
mov
arpl
in
lcall
or
xor
jbe
ljmp
aas
mov
ret
inc
test
mov
insb
ja
mov
aam
mov
out
or
aas
ds
mov
add
sub
mov
mov
mov
inc
cmp
fists
jle
leave
push
icebp
sbb
pop
fsts
xchg
mov
test
or
fmuls
bound
dec
dec
push
inc
imul
sbb
sbb
mov
and
je
sub
adc
push
mov
adc
and
imul
xchg
push
jno
jnp
sahf
test
xor
imul
mov
ficoms
jb
jecxz
dec
fidivrl
repnz
dec
inc
sub
mov
out
mov
sub
call
jle
stc
stos
pop
enter
outsb
push
fs
imul
xor
leave
cmp
adcb
jns
jno
xor
or
iret
fcos
mov
out
rcr
std
or
pop
sbb
imul
fs
stos
xchg
push
ficoml
hlt
ja
cmc
std
data16
xchg
or
or
mov
incl
jle
add
push
adc
loopne
leave
and
cli
mov
ficoml
rclb
cmp
or
scas
pop
jbe
jb
mov
cmpl
jb
add
mov
stos
sbb
stc
repnz
inc
jae
aam
jnp
mov
call
pop
fldt
xor
xlat
test
roll
adc
in
dec
add
mov
inc
sti
pop
aaa
int3
sbb
jo
cmp
dec
ret
sbb
fdivrs
icebp
mov
jo
sarb
mov
jae
mov
daa
in
idivl
shrl
aad
das
xor
subl
sub
jns
int3
je
call
cmp
test
adc
jno
pop
pop
int3
push
lock
cmp
push
fwait
mov
aaa
add
xchg
dec
sub
dec
and
jecxz
xchg
loopne
inc
pop
push
cli
inc
dec
dec
and
mov
add
dec
cmp
rolb
add
data16
mov
pop
lret
adcl
mov
mov
xlat
jno
subb
ja
fdiv
jns
dec
xor
mov
lret
fcom
cmp
mov
sbb
or
lock
out
push
push
push
jne
jge
add
and
xchg
imul
push
xor
cmc
or
and
movsl
dec
cltd
jecxz
pop
and
mov
dec
xchg
clc
xchg
insb
xorb
inc
ret
subl
mov
push
pop
fsubs
aad
cmp
lcall
inc
movsl
xor
sub
and
cli
jecxz
popf
mov
sub
push
mov
je
mov
in
push
mov
xchg
icebp
jns
insl
push
repnz
mov
jmp
push
repz
dec
inc
nop
push
scas
popa
insl
mov
call
loopne
test
pop
call
out
xlat
sub
int3
insb
xchg
xchg
jno
push
ret
mov
sub
add
sub
dec
ret
out
pop
enter
popa
xchg
test
or
das
jl
test
fstpt
mov
fs
push
cmpsb
loop
pop
and
rorb
cmp
push
int
fistl
mov
jo
pop
mov
lret
mov
lret
pop
es
cld
xor
xchg
add
mov
push
das
out
xchg
adc
and
cli
je
adc
in
pusha
cmp
push
jge
inc
mov
loopne
imul
add
inc
sar
in
push
push
push
stc
push
xchg
cmpl
add
cmp
ljmp
or
cmpsb
cmpsl
scas
xor
xchg
rcll
gs
mov
push
fiaddl
push
push
sti
xor
ret
lret
sub
lods
add
dec
push
pop
push
mov
cwtl
lds
out
aas
xchg
outsl
lods
mov
mov
inc
dec
pop
repnz
adc
inc
mov
out
iret
push
sub
mov
mov
and
push
aam
sbb
jg
gs
xchg
sbb
lock
cmp
rorb
xchg
cmpsl
inc
sarb
add
pop
and
inc
add
imul
rorb
xor
cld
loope
lea
mov
mov
xchg
push
push
sbb
stos
icebp
cmpb
mov
xor
test
stos
mov
or
imul
test
std
or
aas
inc
push
addl
xchg
rcrl
cmp
outsl
push
fmul
pop
push
xor
es
or
ret
xchg
sbb
pop
or
sbb
mov
sar
lods
and
sbb
fdivl
mov
js
in
pushf
jb
cld
pushf
outsl
xlat
fmull
sahf
mov
add
xor
iret
pop
inc
add
stos
push
jnp
sbb
out
stos
fdivrs
mov
mov
mov
cmc
fmuls
repz
outsb
pushaw
inc
das
mov
cmc
addl
stc
mov
push
mov
jnp
adc
cld
and
xor
outsb
jo
int3
test
test
or
test
inc
std
imul
aas
xor
movsb
push
popf
daa
sahf
mov
mov
pop
adc
scas
nop
arpl
pop
clc
in
lds
aas
cmp
add
sarb
dec
inc
sub
xchg
lcall
cmp
stc
aad
stos
aaa
ret
push
mov
ljmp
dec
test
mov
into
lcall
pop
pop
adc
call
aad
jmp
jl
xor
js
pcmpeqb
mov
cmc
outsb
inc
mov
divl
jnp
gs
fists
movsl
jns
push
pop
push
sub
shl
rclb
inc
inc
pop
push
add
and
jp
jb
sbb
or
add
pop
lods
mov
dec
fs
outsl
stos
and
repz
int
psubb
add
mov
adc
mov
ljmp
jecxz
jne
out
imul
push
pop
jecxz
dec
mov
test
ret
mov
arpl
and
or
mov
mov
add
pop
adc
or
mov
push
aas
push
cs
mov
or
sti
adc
cmp
mov
movsl
and
pop
shl
ja
push
pop
xor
fdivp
adc
nop
inc
push
dec
sub
sbb
inc
pusha
xorb
pop
inc
pop
enter
test
sub
stos
lock
jge
cmp
xchg
daa
mov
les
adc
loope
enter
sti
xchg
lahf
enter
mov
add
int
into
sub
cmp
jle
cmp
stos
cmp
cmp
cmp
mov
lret
mov
js
nop
mov
xchg
ds
loop
pop
push
testl
xor
push
mov
jmp
pop
out
inc
bound
pop
imul
sbb
pop
push
iret
js
adc
test
jns
pop
cmp
into
mov
dec
xor
pop
inc
leave
scas
pop
fildl
orb
push
or
popa
mov
test
adc
inc
dec
movsl
ret
aam
mov
jl
js
push
out
bound
pop
cmp
or
mov
cmpb
jge
push
or
bt
push
test
dec
je
test
inc
jns
inc
enter
movsl
sub
add
popf
push
mov
in
mov
std
cwtl
jne
add
insb
ja
fwait
jle
sbb
sbb
mov
ljmp
dec
into
lds
mull
mov
jl
and
jg
adc
iret
xchg
fnstsw
cli
jnp
cmpsl
cmp
fcmovnb
jae
cmp
push
ret
ret
sbb
xchg
adc
xor
sub
dec
ficomps
sbb
outsl
jb
xchg
xchg
jp
add
jg
loop
imul
xor
test
ret
pop
lcall
jle
cmp
daa
inc
jne
adc
lret
lcall
out
stos
xchg
sahf
xchg
dec
inc
push
arpl
mov
cmp
cmp
pusha
inc
push
arpl
add
pop
inc
xor
lret
inc
sub
cmpsl
add
jae
xor
pop
xor
xor
pop
and
add
das
add
insb
sbb
stos
jp
in
je
imul
push
arpl
gs
pop
aaa
ret
test
addb
adc
inc
adc
call
les
push
out
push
push
daa
cmpsl
or
mov
loopw
xlat
les
xchg
adc
push
mov
hlt
subl
mov
push
aam
in
xchg
stc
xchg
cmc
dec
js
ljmp
xchg
cmp
or
and
pop
mov
mov
fdivs
xor
xchg
nop
mov
jae
loope
popf
xor
sub
sahf
fnstsw
sub
jae
in
lret
and
jbe
iret
and
in
repnz
arpl
ficoms
in
and
mov
sar
lock
leave
cld
out
add
push
daa
repnz
testb
sbbb
mov
xor
test
sti
sbbl
xor
xchg
dec
push
jno
xor
mov
shll
mov
out
popl
inc
and
hlt
daa
ljmp
xor
outsl
ljmp
out
repnz
daa
mov
cmp
mov
loope
orb
outsl
scas
sub
mov
fcmove
cltd
cmp
xchg
ds
xor
imul
push
lret
incb
shr
pop
jne
movsb
lret
int3
or
push
test
repnz
add
jp
gs
xchg
xchg
mull
flds
jle
add
pusha
icebp
xor
div
in
rolb
mov
in
mov
cmpb
shlb
jmp
divl
cli
cld
mov
orl
or
pop
cmc
rorb
mov
inc
mov
jbe
ja
sbb
jp
sub
in
popa
cltd
outsl
nop
xor
and
mov
xchg
mov
mov
fwait
push
orb
push
push
js
movsb
pop
movsl
and
adc
adc
mov
aam
dec
xchg
cmp
cmp
add
int3
lods
stos
fiaddl
repnz
pushf
sbbl
aam
jo
inc
shrl
ljmp
imul
mov
sub
push
orb
adc
outsb
xchg
mov
out
or
inc
test
add
sbb
jmp
orb
arpl
js
cmc
dec
mov
pushl
adc
repz
add
xor
cmc
lds
cmp
iret
cmp
repz
sarl
and
inc
mov
jecxz
pop
in
cs
jns
sbb
test
pop
test
rcl
or
mov
fld
pop
repnz
shl
movsb
into
jmp
jecxz
ficompl
loope
aaa
sti
jp
mov
imul
push
test
cmp
dec
dec
xor
pop
pop
arpl
mov
or
xlat
adc
adc
adc
sub
mov
imul
ret
es
hlt
sbb
ja
add
jle
ljmp
in
std
pop
ja
push
jl
dec
sub
pop
daa
ret
mov
sbb
repnz
daa
sbb
testl
mov
fadds
imul
sub
inc
stos
fidivrs
jmp
cltd
xchg
adc
cwtl
outsl
lds
lret
fldpi
xchg
decb
sbb
nop
rcll
mov
and
in
popl
les
mov
push
rcrl
addb
popa
fidivrl
enter
fisubl
aas
pop
jo
pop
sti
leave
ljmp
mov
nop
std
lret
push
clc
cltd
jne
nop
xor
jp
ljmp
fisttpll
xchg
pop
repnz
rcr
adc
shlb
pop
push
idivb
cmp
xchg
mov
and
mov
xchg
jmp
cmp
xor
push
push
lock
push
mov
das
pop
sbb
stc
xor
mov
je
push
sub
subl
mov
pop
hlt
jb
aaa
in
loope
jge
push
pop
in
subb
mov
xchg
bound
sub
inc
jge
fidivrs
jno
jle
xchg
in
insl
aad
mov
frstor
outsl
js,pt
add
xor
cmpb
lret
js
mov
sub
test
std
ljmp
xchg
std
iret
loop
cld
imul
cmp
fdivl
sub
xchg
pop
popf
enter
jmp
fisttpl
insb
pop
mov
sub
sub
dec
data16
cltd
xchg
das
cmp
rolb
lcall
push
sbb
adc
cmp
aaa
imul
rolb
sbb
mov
lahf
fisttpl
mov
aad
jle
dec
mov
andb
dec
xchg
popl
or
add
dec
popf
cmp
sarb
push
dec
xor
mov
mov
sti
ljmp
pop
das
imul
adc
fldt
mov
push
inc
ficoms
ja
jle
dec
add
mov
fidivrs
leave
cld
arpl
ja
fdivs
dec
sbb
push
pop
loope
addr16
pop
aas
shr
cmova
inc
dec
hlt
int3
cmpsl
jmp
xchg
es
aaa
jmp
jecxz
ljmp
repnz
call
xchg
pop
xchg
into
push
or
jle
xchg
inc
mov
pop
enter
fucomp
int
pop
lret
xchg
int3
sbb
lret
push
ds
je
std
testb
js
mov
inc
mov
scas
dec
dec
insl
add
popf
cmpsb
inc
data16
divb
fwait
ja
mov
leave
sbb
xor
push
lret
out
mov
aam
call
xchg
fistps
mov
pop
cmp
add
sarb
imul
je
inc
stos
nop
out
js
and
pop
daa
pop
pop
scas
or
out
iret
lods
inc
outsb
rorb
add
and
xchg
jle
ds
pop
aam
lods
adc
popa
inc
outsb
add
loope
loopne
ja
inc
mov
add
adc
into
ljmp
xor
enter
xor
jnp,pt
lea
insb
in
mov
stc
add
jmp
mov
arpl
shl
lahf
std
pop
rcrl
jecxz
sub
movsb
sbb
adc
loopne
sti
push
or
das
pop
jmp
daa
insb
adc
loopne
mov
popa
cltd
dec
lahf
clts
jecxz
adc
mov
or
stos
test
or
addb
aam
jge
jl
mov
add
test
mov
ret
jno
cwtl
mov
subb
or
test
dec
pop
mov
stos
out
pop
leave
roll
sub
cwtl
insb
adc
loopne
mov
cmp
in
mov
pop
icebp
push
lret
xor
mov
mov
pusha
sbb
faddl
roll
in
pop
das
daa
push
icebp
dec
into
or
jmp
lret
add
inc
sahf
cmp
addl
xchg
add
sub
push
sub
mov
cmp
mov
jne
adc
cmp
pop
in
inc
js
jmp
mov
add
inc
orb
std
mov
lret
les
sbb
lods
push
mov
and
pop
fs
dec
lock
fwait
xor
pop
test
cmc
jns
xchg
les
dec
add
push
push
into
push
and
mov
push
aaa
hlt
mov
addb
push
push
movsl
and
mov
filds
sbb
adc
cmpsb
fiaddl
push
lret
mov
sbb
das
mov
push
stos
push
jg
push
xor
push
mov
ret
inc
mov
stos
lods
mov
shll
mov
pop
pop
cmc
notl
mov
test
ret
loopne
aas
in
fstps
pusha
xor
jns
jge
test
pushl
or
inc
cmp
dec
movb
addl
int3
dec
mov
dec
mov
pop
jmp
fldt
shrb
lock
push
push
jge
pop
test
push
adc
mov
and
jnp
sbb
xor
sub
push
arpl
push
dec
out
pop
out
mov
fidivs
cli
out
push
cmpsl
int
push
push
aas
mov
cmpsb
cs
test
insb
popf
in
or
mov
push
jo
cmp
add
cwtl
test
inc
rclb
adc
jae
push
aaa
or
jecxz
cltd
mov
or
out
pop
and
push
enter
addr16
dec
xor
jbe
arpl
sbb
outsl
adc
sbb
mov
leave
and
loope
mov
fs
enter
ret
lock
ja
enter
adc
es
xor
and
cmp
mov
push
stc
nop
arpl
popl
lcall
sub
ret
push
xchg
adc
and
mov
pop
repz
cmp
mov
aaa
mov
mov
or
popf
rclb
sbb
jo
stos
mov
jnp
test
xchg
inc
sub
scas
inc
sbb
push
add
sbb
pop
dec
push
aad
sub
fmulp
fldcw
js
in
and
std
loop
stos
dec
imul
dec
inc
jmp
mov
insb
inc
adc
inc
add
icebp
jo
mov
adc
add
cmp
mov
shll
xchg
pop
ret
push
adc
sub
hlt
aas
add
imul
cmpl
mov
jg
bnd
loope
orb
pop
outsb
icebp
inc
lock
add
fadd
push
in
stos
and
mov
ficomps
stos
repnz
hlt
jnp
inc
mov
int
out
pusha
in
mov
aad
xchg
add
iret
xor
mov
inc
and
arpl
jecxz
sbb
adc
movsb
subl
mov
test
mov
in
cmp
and
dec
pusha
fcompl
pop
jp
jo
cmpsl
test
xlat
lock
push
outsb
scas
enter
inc
push
es
mov
inc
je
inc
enter
out
sub
daa
stos
xor
filds
cmp
icebp
ds
aad
jecxz
jo
and
lods
push
lret
jbe
jb
nop
jmp
out
cld
je
fistpl
dec
adc
jp
loop
iret
xchg
cmp
clc
lcall
movsb
shr
scas
imul
inc
jecxz
or
sbb
orl
call
inc
test
mov
xchg
push
rcll
loopne
mov
addr16
in
add
pop
ret
inc
jge
xchg
movsl
fimull
adc
cmp
aas
mov
xor
aas
pop
jb
and
popa
outsl
add
jge
xchg
lahf
fnstcw
mov
lahf
movl
das
jmp
xor
out
in
les
sbb
push
jno
cli
sbbl
icebp
inc
cmp
enter
or
cltd
mov
out
sarl
arpl
sarb
pusha
es
ja
shll
or
aam
xchg
cmp
jno
cmp
int
int3
mov
adcb
push
outsb
dec
push
mov
xchg
jns
mov
in
pop
cmp
xchg
inc
inc
and
and
ljmp
lea
push
mov
mov
add
adc
pop
aam
cmc
sub
xor
std
insl
sub
jo,pt
jge
push
cmp
sbb
pop
sti
xchg
xchg
rorl
pop
xchg
mov
fsubrl
clc
imul
loopne
inc
mov
push
inc
stos
punpckhwd
adc
leave
mov
mov
add
pop
fs
sbb
pop
bound
loope
pop
dec
and
cmpsb
lret
shufps
fs
out
ljmp
jp
jne
and
lahf
add
cli
mov
or
in
adc
std
mov
dec
scas
push
sbb
insl
mov
jb
mov
cmp
pusha
test
mov
ret
orb
sbb
jns
clc
ss
pop
and
les
rcll
dec
dec
mov
cmp
gs
aad
repz
xchg
cld
rcr
outsl
xchg
xchg
adc
fidivl
pushf
loop
jnp
push
sti
or
stos
cmc
rolb
mov
cmp
xchg
xchg
jg
scas
ret
sar
cmpb
sub
dec
mov
push
ljmp
dec
aam
aam
repnz
test
imul
jo
mov
subl
add
add
jno
icebp
ffreep
mov
pop
mov
into
xor
pushf
xchg
push
jno
das
icebp
mov
movsl
fcmove
xchg
or
hlt
cmp
inc
aad
aam
pop
cs
cmp
call
lahf
push
mov
insb
fmul
dec
gs
xor
cs
ds
fbld
mov
repz
mov
sub
cmc
push
rorb
lahf
arpl
cmp
test
aas
mov
inc
pop
jb
mov
icebp
jnp
mov
dec
ret
dec
shrb
mov
xlat
xor
sub
sarl
sub
sub
inc
es
and
dec
or
jo
push
xchg
add
push
rol
sbb
add
dec
in
push
xchg
sbb
aas
push
outsb
in
into
insb
jp
leave
stos
sbb
inc
shlb
mov
add
xlat
je
negb
inc
xchg
push
mov
pushf
in
adc
jg
movsl
aaa
xchg
or
fidivs
pop
.byte
