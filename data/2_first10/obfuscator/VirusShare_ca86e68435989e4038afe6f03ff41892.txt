sbb
add
mov
xchg
fstpt
ret
popf
dec
inc
pushf
jns
or
jmp
cmp
pop
rorl
arpl
nop
xchg
xchg
add
sub
repnz
movsb
push
sub
call
push
fwait
iret
sti
addr16
pop
adc
cmc
jge
imul
push
mov
sbb
fdivr
jmp
das
das
mov
orl
or
jl
enter
lcall
arpl
add
mov
hlt
sub
xchg
aas
les
adc
mov
xchg
dec
movsl
jg
dec
or
pop
data16
call
adc
or
mov
add
inc
mov
sbb
pusha
in
push
dec
add
fsubr
aam
sarb
push
fucomip
fnstenv
mov
sub
pop
jmp
aas
mov
push
aad
mov
insl
mov
in
frstor
sub
push
ret
fidivrs
add
mov
mov
inc
sub
pop
jne
xchg
jle
pop
mov
adc
lcall
xchg
push
mov
jl
out
pop
xor
adc
jbe
lods
je
jne
out
mov
mov
fstps
and
lahf
lret
jno
push
push
inc
sbb
pop
push
mov
xor
mov
push
xchg
ljmp
loopne
cmp
loope
mov
xchg
mulb
cmp
sub
inc
loope
pushf
pop
add
add
lds
popf
hlt
mov
xor
push
mov
jge
or
pop
loopew
push
inc
inc
notl
hlt
scas
fstps
cltd
sbb
je
or
cld
pop
pop
jle
xlat
push
mov
scas
frstor
mov
sbb
add
inc
mov
xor
out
subl
jo
xor
fdivrl
out
sbb
and
jl
mov
cwtl
in
dec
push
sbb
shrl
test
fldcw
pop
jle
loop
stos
fsubrs
aas
loop
cltd
scas
fmul
sbb
push
cmc
popa
xchg
popa
and
push
jnp
mov
popa
cmc
aas
dec
js
fistpll
pusha
je
ja
push
rclb
xor
xchg
dec
xchg
mov
orl
pop
cmp
pushf
jle
daa
cmp
pop
adc
adc
out
xchg
pop
mov
pop
fmuls
xor
idivb
xchg
xchg
fdivp
rcrl
add
pop
inc
shlb
xchg
call
adc
push
add
and
or
sbb
and
adc
fadd
outsb
rcll
inc
pop
pop
ret
outsl
push
lds
cltd
push
mov
lahf
insl
jae
cmp
xchg
ljmp
dec
xchg
fcompl
sub
and
fists
push
mov
outsb
cs
repz
cmp
push
push
je
xor
cmp
out
je
shlb
rcll
loop
sbb
xlat
push
push
clc
push
lods
adc
xor
add
pushf
bound
imull
lock
enter
xor
sbb
jb
inc
iret
and
testb
mov
outsl
sub
cmp
out
jno
adc
cmpl
or
stc
fbstp
pop
ret
enter
je
outsb
popf
ret
insb
pop
push
adc
divl
iret
jb
dec
in
jl
imul
subb
out
mov
movsl
jnp
sub
shll
sahf
or
mov
repz
ds
call
and
fcompl
cmp
pop
ret
dec
lret
je
jg
js
cli
xchg
loope
push
ds
mov
pop
in
rol
pop
sub
lds
xchg
icebp
ret
adc
rorb
pop
lret
pop
es
sbb
and
mov
call
aas
adc
jle
mov
lods
pop
inc
test
adc
or
and
rcrb
pop
lcall
pop
int
ss
das
xor
int
pop
xchg
ds
movsl
jmp
scas
dec
xchg
mov
test
cmp
js
shl
int
ja
ffree
shrl
inc
dec
ffreep
mov
lahf
inc
shl
jle
jns
rcrl
sub
jb
mov
push
mov
push
jecxz
jns
or
mov
popa
js
jg
daa
repz
fisubl
cvtdq2ps
dec
stos
xchg
push
fnsave
and
mov
adc
adcb
hlt
sub
fwait
cmp
shrl
xchg
dec
mov
push
push
ds
xchg
jl
xchg
sub
and
ret
clc
dec
pop
out
lods
jle
sahf
sub
repz
cmp
insb
xchg
and
nop
movsb
adc
sbb
leave
js
sti
dec
roll
sti
mov
scas
cwtl
add
rorl
aas
lds
bound
xor
fists
loope
mov
fidivrs
mov
sub
jnp
pop
insl
int
sbbb
clc
out
lods
jmp
pop
ja
or
fabs
daa
xchg
in
shrl
sub
fcompl
inc
enter
lret
cmp
pop
sub
cmp
mov
cli
mov
cmp
xchg
sub
out
leave
mov
jmp
testb
or
addl
lahf
movl
movsl
in
cmp
mov
cmpb
xchg
sahf
and
mov
sub
cmp
inc
lret
orb
lods
loop
test
mov
adc
outsl
jecxz
mov
jb
add
inc
adc
adc
sahf
mov
popa
jp
and
xor
sbb
ljmp
or
loopne
repz
stc
aas
jl
pop
mov
test
cmp
jmp
pop
push
cmp
movsb
nop
mov
jne
xchg
mov
push
dec
xchg
mov
iret
xor
lret
and
cli
repz
lock
nop
test
ss
cltd
mov
jo
dec
jecxz
mov
pop
sbb
cs
cmpsl
repnz
jle
push
sbb
fs
jge
push
push
cmp
rcrl
shrb
out
dec
rclb
or
or
sbb
gs
pop
xor
sub
pop
inc
sub
mov
sub
pop
pop
cmp
mov
out
out
xchg
testl
xchg
test
xor
mov
loop
mov
arpl
mov
nop
mov
popf
xchg
mov
aad
add
pop
and
cltd
loope
add
lods
sbb
inc
cmp
sbb
ja
sbb
shrl
std
out
ja
js
and
subb
pop
mov
dec
lods
in
xor
jno
mov
inc
push
jmp
or
popa
xchg
adc
sub
add
es
mov
out
bound
push
jmp
je
push
fs
mov
xchg
ret
cmpl
jmp
aam
pop
mov
cmp
mov
inc
popa
pushf
shlb
rclb
push
and
pop
mov
scas
cs
aaa
clc
push
mov
xchg
and
out
and
into
push
in
push
pop
ret
bswap
or
dec
imul
js
js
lea
in
imul
fdivrs
inc
mov
loope
adc
gs
cmpsl
loop
xchg
inc
out
sbb
adc
ja
xchg
xor
xor
in
bound
xchg
and
popa
aam
cmpsl
stos
adc
fwait
mov
aam
addr16
push
and
xlat
push
inc
imul
insl
push
arpl
call
loop
cmp
jae
bound
clc
dec
mov
xor
mov
in
push
push
push
add
push
movsb
xor
imul
in
inc
and
jae
or
outsl
adc
cmp
aas
scas
lods
adcl
jge
lea
test
dec
push
call
fs
stc
in
fs
stos
scas
xlat
xchg
sbb
push
es
out
ret
out
adc
xlat
fwait
ja
jg
imul
pushf
faddl
sti
inc
mov
sbb
bnd
insb
js
add
popa
sarl
inc
sbb
lods
pushf
in
ret
iret
sbb
addb
in
adc
lea
int
adc
repnz
mov
ret
cmp
push
lret
mov
dec
mov
out
sar
jnp
add
mov
push
jb
inc
outsb
arpl
pop
addb
sub
adc
cmp
xchg
adc
cmc
jle
call
mov
or
testl
adc
aas
addr16
mov
xorb
xor
testl
insl
repz
in
sub
int3
push
hlt
or
xchg
rolb
pop
ljmp
aaa
lcall
popf
adc
loopne
xacquire
sbb
jmp
into
push
sub
cld
lret
or
mov
ja
or
fisubrl
adc
mov
int3
mov
mov
sahf
ljmp
dec
addr16
push
icebp
es
mul
xor
pop
jmp
mov
or
pop
stc
dec
subb
lahf
inc
aas
sub
out
popa
outsl
push
sbb
mov
mov
lods
xor
or
cmp
push
cld
insb
add
jno
mov
imul
shrl
push
loope
clc
faddl
stc
mov
push
xorb
bound
in
pop
pop
adc
fs
sbb
ja
ja
cwtl
rol
bound
in
jg
pop
lods
sbb
outsl
cmp
mov
xchg
jnp
mov
push
add
icebp
lret
and
rcrl
sysenter
lods
and
pop
insb
jb
sub
jnp
cltd
addl
out
les
pop
call
jp
xchg
cmp
inc
pop
xchg
push
xchg
fucomi
xchg
push
ss
push
jp
inc
imull
push
cli
push
or
pop
out
fstps
cmp
clc
mov
cmpsw
aaa
cmp
jg
push
loop
sub
xchg
idiv
aaa
pushf
jae
mov
in
lret
mov
mov
int
lock
push
add
int3
add
test
push
adc
lret
stos
inc
dec
stc
and
add
ljmp
xlat
iret
xchg
and
xchg
stos
pop
jecxz
arpl
repnz
jmp
dec
addr16
nop
enter
and
fdivrl
hlt
cmp
jae
loopne
push
cmp
testb
pop
enter
xor
jb
or
mov
popf
jge
mov
xor
mov
dec
and
or
adcl
xchg
lds
inc
pop
ret
icebp
pushf
jnp
pop
ret
sbb
jmp
add
testl
push
andb
inc
nop
mov
xchg
call
das
int
aad
test
cmp
sub
cmp
sbb
stos
iret
mov
inc
dec
pop
xor
out
sub
mov
cli
movsl
dec
sbbb
fiaddl
mov
adc
call
xor
fwait
mov
and
mov
lahf
out
pop
dec
mov
insb
lds
lahf
into
enter
jno
inc
dec
adc
cwtl
es
movb
pushf
inc
lods
xchg
push
jecxz
add
lods
lahf
lock
orb
jae
xchg
add
pop
mov
clc
push
pop
and
repnz
pop
fisubl
fsub
mov
or
sbb
pop
in
inc
out
fistpll
fs
or
push
insb
cwtl
jbe
xor
adc
aad
dec
rorb
xor
sbb
in
mov
outsl
fldt
lock
mov
mov
push
rcll
call
adcl
fistps
and
sub
jb
scas
into
daa
xor
pop
es
imul
or
push
push
push
pop
mov
or
push
jle
mov
lret
xchg
aaa
jecxz
shlb
out
sti
stc
sub
loope
mov
cmpsl
jno
mov
outsb
or
loop
lea
inc
test
xchg
jo
dec
ljmp
xchg
in
mov
je
jo
xor
jecxz
bound
pop
sbb
xor
fsubrl
sbb
xchg
mov
add
cmp
mov
lret
adc
push
in
aad
aad
sbb
adc
bound
in
jmp
jle
jl
mov
xor
inc
push
ret
jmp
mov
mov
insl
out
mov
insb
loope
mov
js
dec
mov
daa
mov
mov
enter
aaa
pusha
xchg
pop
push
int3
int3
out
lret
or
cld
dec
inc
mov
pop
out
jbe
lock
xchg
xor
mov
lds
mov
push
jp
cmc
les
dec
xchg
mov
add
mov
in
rcll
call
push
insb
mov
pop
dec
in
or
popf
ljmp
loope
or
push
sarl
dec
jp
insl
xlat
jle
lcall
insb
pushf
pop
scas
ja
adc
sti
rorb
sbb
inc
or
or
mov
out
daa
fisttpll
test
lahf
lea
mov
fdivl
mov
jmp
mov
shlb
int3
stos
hlt
push
mov
xor
inc
add
push
pop
xchg
pop
cmpsl
xor
ljmp
cld
rclb
dec
add
cmp
ss
xchg
mov
jecxz
test
mov
pusha
fidivl
stos
or
xchg
mov
imul
sbb
mov
jae
pop
out
xor
pop
movsl
sbb
cmp
das
shr
ja
xchg
push
sbb
mov
push
addl
shrb
lock
mov
pop
mov
test
scas
iret
push
les
sahf
lds
aam
pop
js
mov
mov
rolb
mov
fisttpl
push
lock
test
mov
mov
mov
fidivl
pushf
push
dec
outsb
adc
stc
orb
push
mov
cld
in
les
push
pop
inc
xchg
mov
test
lods
cwtl
mov
sub
fidivs
dec
sbb
inc
shrb
mov
movsb
cmp
lret
ja
xchg
xchg
xchg
xchg
mov
ja
cmpsb
cmp
mov
inc
xchg
loopne
je
inc
je
adc
push
cltd
jp
daa
pop
inc
add
loop
lea
stos
pop
push
and
aas
xchg
and
jbe
pop
test
sbb
mov
les
xor
inc
sarb
cs
enter
mov
sbb
pop
push
mov
movsl
daa
cmp
insl
cmc
sub
in
mov
sub
sahf
sub
or
pop
xchg
mov
sbb
cmp
pop
outsl
mov
add
sub
repz
jae
sbb
in
loop
inc
xor
sub
inc
pop
xchg
dec
push
insb
sbb
sahf
cld
std
xchg
test
stos
xor
testb
adc
clc
jp
nop
out
dec
enter
pop
mov
fs
or
push
fsubs
mov
push
sub
xor
shrl
cmp
lods
push
sub
sub
dec
in
mov
mov
add
push
adc
clc
es
fs
or
push
test
ja
sbb
std
pop
jmp
movl
and
cwtl
sbb
mov
and
frstor
test
inc
sbb
mov
mov
mov
sub
movsb
fisubrs
test
mov
xlat
out
push
push
int
popf
and
je
sub
jmp
test
xchg
mov
out
sub
out
and
pop
xchg
mov
cmp
push
addl
outsb
dec
pop
fs
cmp
jnp
cmc
test
daa
cmc
mov
hlt
xor
inc
cmp
xor
hlt
push
mov
xchg
pop
rcrb
loop
aas
mov
and
mov
jo
in
mov
loop
ret
popa
call
jnp
and
mov
loop
push
mov
out
pop
les
adcl
pop
loop
xchg
mov
mov
xlat
sbb
xor
dec
mov
les
lret
stc
ds
pusha
jp
dec
outsl
fistpll
test
rcrb
mov
and
mov
je
inc
cmp
shll
jge
decl
pop
out
xchg
mov
icebp
push
add
in
sub
mov
xchg
jns
mov
outsb
scas
cmc
lcall
imul
ds
mov
insl
or
pop
jmp
mov
out
push
jmp
sub
mov
push
ret
xor
addr16
scas
pushf
clc
push
and
jnp
pop
sbb
in
int
cli
push
dec
sbb
xor
adc
lock
xchg
lret
mov
movsl
es
sbb
loop
dec
andl
outsl
inc
lcall
push
xchg
popf
stos
clc
jp
inc
xor
sbb
inc
adc
enter
push
push
inc
and
inc
insb
jno
adc
flds
insb
mov
into
imul
sub
rcl
pop
std
or
shlb
push
popa
adc
pop
mov
ss
mov
add
insb
pop
jecxz
dec
mov
lcall
es
add
popf
orb
sbb
mov
lcall
xchg
fldcw
ret
ja
gs
mov
in
dec
sbb
add
adc
mul
jge
sarb
pop
or
sbb
adc
int3
call
call
cmp
mov
xchg
enter
add
adc
clc
xor
inc
inc
iret
xchg
idivl
cmp
pushf
jbe
or
cs
dec
cmp
jne
ret
pop
fs
pusha
mov
stos
movsb
add
outsl
mov
add
les
xor
ret
mov
sbb
xchg
gs
inc
fs
pop
push
movl
icebp
xchg
in
and
lea
iret
orl
mov
push
stos
dec
aad
fsubs
jae
xchg
mov
inc
test
fisubrs
lcall
adc
mov
xchg
fdivl
jp
sbb
adc
hlt
xor
leave
and
push
jno
pop
pop
ja
mov
push
and
jl
adcl
or
les
xor
iret
mov
pusha
iret
and
sbb
out
jne
sahf
ficomps
jl
and
cld
and
out
and
sbb
cmp
movsb
nop
into
pop
jns
imul
div
imul
adc
std
arpl
mov
bound
mov
addb
cmpsb
les
sub
lret
popl
js
jp
pop
xor
mov
aam
push
xor
ss
inc
jg
dec
addr16
jne
negl
jle
xchg
adc
outsl
sub
cmpsl
mov
xor
jg
loope
in
lods
add
test
leave
and
mov
mov
aam
imul
jle
cmp
inc
out
jne
pop
pop
pop
xor
lea
out
dec
cld
or
leave
lcall
ret
or
fdivl
inc
adc
in
lods
pop
jae
pusha
fsubs
jecxz
insb
mov
pop
lret
ret
dec
sub
inc
xchg
push
adc
push
lods
insl
loopew
and
lahf
cs
mov
int
mov
xor
imul
loop
sarl
cmp
adc
pop
sbb
lea
fs
shrb
xchg
pop
cli
xor
jg
rclb
adc
inc
aas
jp
lret
push
call
sbb
xchg
fs
mov
cmp
xor
stc
test
jecxz
jecxz
xchg
jge
jnp
inc
add
rorb
outsl
mov
dec
lock
pop
aam
pusha
lahf
inc
mov
aas
pop
push
push
sbb
lock
aam
sbb
inc
add
sub
xor
adc
bound
sub
xor
jno
adc
xchg
or
es
jmp
je
adc
cmp
clc
lods
ja
cld
add
push
pop
jecxz
aaa
nop
cmp
jb
push
loopne
jnp
divl
out
sbbl
xor
ret
mov
leave
insb
xchg
iret
push
dec
dec
fucomi
mov
push
ret
jp
add
add
sbb
arpl
pushf
jp
ljmp
pop
adc
fs
pop
mov
mov
jb
push
jb
xchg
add
push
insl
pop
xlat
enter
add
lahf
shll
leave
test
lods
mov
mov
push
sbb
pop
cs
rcrl
inc
out
pop
cld
dec
repz
adc
lcall
pop
cmp
dec
jno
jb
jns
xor
call
sub
mov
cwtl
inc
mov
add
lahf
leave
or
adc
dec
ficoml
cmc
jp
pop
mov
cmp
lcall
push
enter
repz
leave
mov
cs
push
mov
cltd
fdivrs
stos
lret
xorl
push
jb
lock
ror
mov
push
or
add
xchg
mov
pusha
es
fistpll
or
push
out
dec
mov
push
dec
add
fdivs
lds
js
push
pop
adc
fisubs
inc
loop
cmpsb
fsubl
lock
push
cmp
jno
fcomp
pushf
es
inc
fs
sbb
add
dec
push
imul
mov
sub
add
stos
int
sub
push
fimull
popa
add
push
xchg
cld
nop
mov
mov
jns
inc
outsl
movsb
mov
pop
aaa
mov
fs
cwtl
adcl
ds
push
imul
jl
cmpl
outsl
and
jge
push
cmpl
sub
js
outsl
rorb
mov
js
shrl
jp
rorl
fcmovnu
aad
dec
repnz
sbb
dec
cltd
mov
push
sub
ss
xchg
pop
xor
push
popf
push
mov
jmp
jne
dec
sarl
adcb
pop
rorb
ljmp
out
popa
jmp
inc
sahf
mov
es
mov
orb
mov
mov
pusha
sub
test
jge
icebp
scas
loope
pop
cld
cmpl
cli
movsb
fmuls
inc
dec
pop
mov
lock
div
push
popf
insb
das
into
lcall
mov
mov
in
push
out
lods
sub
xchg
arpl
inc
shll
ljmp
cwtl
adc
mov
icebp
mov
std
leave
iret
aad
jo
cmpsb
mov
div
loope
push
xor
idiv
mov
and
bnd
pop
push
dec
jo
inc
dec
out
xor
cmp
rclb
cld
jno
divl
pop
cmp
push
aaa
in
pop
lret
jno
insb
add
test
or
push
lret
test
test
out
add
aam
xor
mov
mov
jecxz
faddl
pop
and
cmp
pop
xchg
shr
jmp
sub
pop
push
inc
pop
jecxz
mov
ret
popl
pop
addr16
cld
je
rcrl
mov
ficompl
fsubl
dec
loop
inc
mov
out
sbb
mov
adc
ljmp
jle
push
fistpl
in
aam
xchg
mov
popf
cmc
jne
adc
cmp
jae
imulb
xchg
pop
xor
ret
or
pop
sbb
in
cmpsl
or
jnp
xchg
je
push
jae
jmpw
pusha
rcrl
cli
xchg
sub
pusha
jle
push
push
sbbb
or
adc
imul
neg
movsb
pop
or
movsl
in
gs
add
mov
rolb
add
jmp
sti
xorl
mov
sti
iret
mov
dec
cmp
aaa
loop
mov
lods
into
dec
xor
call
add
ja
xchg
mov
sti
inc
pushf
leave
cmp
pushl
mov
mov
bound
repnz
sbb
sub
lcall
lret
sbb
dec
andnps
mov
sbb
in
pop
inc
pusha
add
pop
adc
add
mov
out
test
or
sub
lock
rcrb
int3
sahf
push
or
lcall
pop
fcoml
cmp
or
and
cmp
je
pop
mov
push
mov
cmp
mov
subl
or
xchg
dec
gs
sub
push
vdivps
in
ja
push
test
xlat
lcall
mov
notb
mov
addr16
inc
mov
adc
lahf
xchg
dec
ljmp
dec
ret
enter
xor
gs
popa
aas
push
loopne
xor
repnz
rep
cs
dec
sub
pop
ja
test
mov
loopne
cmc
xchg
sahf
js
ja
mov
mov
aaa
aad
cmp
dec
sbb
inc
jmp
sbb
orb
frstor
mov
jnp
cmp
push
mov
mov
pop
push
pop
fscale
sub
sub
lea
mov
xchg
mov
lcall
xchg
inc
div
lods
jp
stos
movsl
adc
fst
in
xor
and
add
xor
mov
sub
outsl
loope
jns
ret
adcl
jle
ret
das
sbb
pop
fwait
rorb
pop
add
outsl
adc
ret
push
loopne
sub
insb
cmp
lahf
mov
popa
in
mov
icebp
pusha
mov
cltd
cmp
leave
jo
xchg
sub
lahf
call
mov
popf
fcoml
out
test
jmp
inc
lods
cwtl
pop
adc
pusha
test
adc
cmpsb
sbb
inc
and
stc
mulb
ds
lret
cmp
lods
int
cwtl
jmp
or
int3
cmp
idivl
mov
int3
adc
pop
pop
sub
cmpsb
rorb
xchg
dec
sti
dec
jle
in
dec
sbb
push
imul
and
cmp
test
mov
les
std
ret
insb
iret
and
lods
roll
out
pusha
adc
test
test
out
scas
mov
inc
testl
test
sub
in
aam
push
mov
out
add
cmp
out
jae
sahf
xor
jecxz
loopne
loope
lcall
shll
jb
movsl
dec
add
adc
fisubrl
popf
push
lea
ret
sarl
pop
adcl
int3
push
out
xchg
loopne
xchg
iret
inc
fisubrs
jle
fs
repz
mov
sub
ficomps
or
cmp
pop
inc
push
adc
cmp
cmp
cltd
jecxz
and
pop
cmpsl
push
stc
jae
mov
sahf
repz
repnz
icebp
int
popf
add
mov
dec
mov
push
cli
fistpll
mov
xchg
add
test
xchg
arpl
movl
add
sbb
nop
dec
dec
mov
push
sbb
fucomp
mov
push
mov
push
cmp
or
mov
rorb
sti
xchg
cmpsl
cltd
mov
mov
mov
and
dec
xor
jbe
jb
mov
out
cmc
cmp
popa
xchg
outsb
std
test
mov
cmpsb
mov
sbb
push
mov
inc
cmc
outsl
fwait
mov
cmpsl
xchg
adc
inc
mov
enter
lahf
lods
das
sbb
dec
cmp
dec
out
cld
int
imul
cwtl
and
jb
dec
inc
scas
je
inc
ss
add
shll
pop
inc
jl
mov
das
sar
sub
mov
push
dec
lea
fcomps
pop
mov
iret
mov
push
jg
sbb
pop
inc
inc
jnp
fs
out
push
sahf
pop
pop
xor
cs
mov
pop
push
push
mov
lock
in
inc
add
sbb
out
das
dec
test
pop
test
lods
rcrb
mov
dec
loope
icebp
inc
jno
imul
outsb
cmp
push
ret
mov
sub
and
out
arpl
lock
and
test
int
xor
mov
fs
and
dec
repz
add
fs
scas
or
sub
int
xchg
jbe
jae
loop
cmp
jbe
mov
in
or
repz
int
les
in
pushf
cmp
in
ret
pop
std
ljmp
sti
sarb
sub
fst
jecxz
lea
mov
insb
pop
outsb
ftst
pop
in
push
in
shlb
pushf
mov
dec
iret
cld
sarl
dec
xchg
or
imul
mov
aam
incb
mov
addr16
cmp
repnz
cmc
shll
popa
test
mov
test
or
push
shll
mov
and
orb
mov
div
jmp
adc
inc
pop
pop
inc
cmpb
dec
xchg
inc
cs
dec
cmpsb
sbb
push
dec
xchg
and
dec
cmp
fwait
idiv
cltd
stos
mov
xchg
or
dec
mov
fadd
mov
repz
mov
out
bound
stos
ss
arpl
push
mov
aas
sti
addl
insb
xor
cmpl
test
addr16
inc
sbb
mov
xor
mov
sbb
add
cmc
fbstp
inc
aaa
jecxz
jge
dec
inc
sbbb
xor
fsts
xor
lret
scas
pop
sbbl
enter
or
imul
imul
cmc
jge
ret
push
inc
les
inc
lahf
js
add
aaa
xor
out
sub
xchg
lret
xlat
and
dec
jbe
stc
mulb
pop
push
jmp
leave
dec
fs
or
rcr
cmpsl
sbb
bound
imul
cld
xor
lds
pop
xor
inc
insl
adc
das
sbb
adc
xchg
xchg
xor
mov
rolb
sahf
out
adc
daa
jge
xchg
sub
inc
sarb
xchg
aaa
pop
pop
and
or
inc
fistpl
sub
pop
pop
fsubs
cmpsl
mov
test
cbtw
mov
push
push
out
cli
loop
iret
add
pop
rep
aaa
cmp
into
orl
in
addb
xorb
dec
xchg
push
jg
and
adc
pusha
icebp
mov
add
and
stos
in
insl
fwait
pop
sbb
jle
mov
decl
sub
sbb
imul
cmp
lahf
sub
pop
push
inc
push
lds
imul
shll
sbb
lock
pop
pop
mov
dec
pop
push
mov
outsl
daa
xor
push
or
xlat
add
fadds
adc
inc
push
je
jg
in
les
push
sub
mov
jg
xchg
imul
loopne
jge
dec
mov
outsb
xor
push
icebp
aaa
xchg
dec
jmp
sub
test
pop
loop
fs
xlat
call
or
sub
fldenv
add
inc
cli
popf
push
cmc
aam
popa
addr16
sbb
inc
lret
xorb
aam
push
cmp
in
mov
test
xchg
pop
movsl
lock
adc
xchg
stos
mov
lret
call
pop
mov
push
dec
lahf
mov
aam
outsb
loop
nop
shl
mov
cmc
mov
daa
aam
shll
xchg
lods
mov
pop
es
insl
jno
add
inc
lods
into
or
and
ljmp
mov
mov
out
inc
mov
and
jno
sub
dec
mov
add
mov
aas
pop
iret
cld
andl
cmp
mov
repz
in
pop
scas
jmp
sub
mov
test
das
push
iret
cmpsl
mov
cmc
shll
and
jmp
loopne
and
jb
lock
inc
adcl
push
xchg
xor
lods
test
fisttps
cmc
les
js
sub
sbb
dec
xor
pop
not
sbb
xchg
scas
lds
xchg
lcall
or
lods
icebp
cmp
ljmp
insb
mov
pop
mov
cmp
gs
push
inc
sbb
dec
into
sub
sbb
xchg
lds
push
fwait
cmp
pop
nop
adc
into
pop
mov
jb
jb
outsl
sbb
inc
in
push
fsts
add
push
ds
pop
xchg
inc
or
mov
xchg
lea
lods
add
lods
test
insb
gs
inc
add
sub
jo
outsl
lea
subl
cmp
and
rcrb
sbb
icebp
je
in
pop
lods
jno
mov
pushf
mov
int3
shrl
xchg
scas
rclb
jge
sahf
sbb
add
xor
cmp
jbe
sub
dec
cmp
stc
mov
jns
mov
mov
jg
or
out
nop
cmpsb
and
test
and
rorl
jo
cmp
push
icebp
popa
sbb
lret
xor
push
movsl
adc
insb
add
cltd
cmp
cmp
shl
fnsave
xchg
adc
inc
adc
sub
cli
repnz
xchg
push
push
fpatan
jge
inc
insl
pop
push
mov
loope
repz
cmpsl
daa
fucomp
jae
dec
test
insl
shl
lret
scas
aas
push
stc
add
ljmp
cld
xchg
lods
jmp
stc
fwait
dec
cli
int
pop
jg
cmp
mov
filds
jp
xchg
sbbb
hlt
fidivs
jle
cwtl
cmp
les
popf
and
ret
dec
aas
loop
lods
inc
and
pop
cmp
adc
daa
loop
into
imul
arpl
sub
and
sbb
hlt
inc
xor
daa
inc
dec
mov
sarl
xchg
and
mov
test
jae
out
stos
into
push
mov
jle
mov
lds
jle
xchg
xchg
cmp
sub
fnstsw
cmp
stos
push
pop
push
jp
fsubrp
out
sti
bound
pop
test
sbb
pop
push
repz
xchg
sub
sti
xor
cmp
ror
pushf
push
inc
xchg
insb
rcrl
loop
jmp
push
mov
pop
mov
lods
mov
xor
je
clc
orb
add
jae
push
out
mov
shlb
jnp
out
into
push
repz
andl
mov
xchg
jp
ljmp
push
sbb
lock
mov
mov
scas
push
pushf
pop
or
lods
sub
popa
mov
lret
popa
jecxz
ffreep
dec
movl
mov
add
mov
aaa
pop
pop
push
out
cltd
cmpsb
jl
adc
movl
add
ret
ficompl
popa
std
xor
sahf
aas
addr16
sub
sub
cld
inc
pop
inc
or
pop
dec
push
addb
sbb
jb
mov
or
sbb
push
inc
mov
je
jge
dec
sub
xchg
inc
mov
pop
repnz
leave
jl
jmp
cmc
popa
imul
sbb
cmp
imul
cltd
mov
pop
xchg
std
adc
cwtl
pop
jg
mov
enter
scas
movsl
lods
outsb
xor
comiss
ret
add
mov
sarb
push
fbstp
dec
jl
into
out
mov
fildl
and
outsl
inc
jb
cmp
repnz
shrb
in
mov
in
fwait
xor
mov
adcl
aam
push
add
xor
mov
xor
cmpsb
fcomps
cmp
and
shrl
test
stc
int
or
cmp
test
adc
bswap
mov
cmpb
subb
push
xor
sub
inc
pop
dec
lret
mov
mov
cmc
cmp
or
lret
out
dec
dec
cmpl
xchg
mov
xor
mov
xchg
fxch
mull
cmp
push
lods
mov
dec
leave
js
mov
jle
cmp
cltd
push
in
repnz
loopne
stos
jb
mov
int3
dec
outsb
pop
insl
inc
popa
das
xor
mov
test
popf
mov
cmp
dec
stos
je
mov
cmp
rcrb
mov
or
ficoml
lfence
inc
leave
cmp
lds
inc
repz
loopne
pop
aas
out
adc
in
pusha
push
add
jne
mov
mov
inc
pop
fbld
pop
fmul
bound
cmp
test
cmc
repnz
or
jp
es
arpl
adc
rorl
stc
dec
cmpb
lds
mov
test
in
int
outsl
scas
call
scas
out
push
xchg
jne
xor
xchg
ja
adc
adc
gs
and
jmp
pop
sub
add
pop
outsl
sbb
xlat
or
xchg
pop
ljmp
mov
push
call
jnp
stos
aas
enter
push
and
into
movsb
es
aad
test
inc
in
in
shrb
push
push
lret
jp
fistps
outsl
out
sub
mov
pop
xor
clc
mov
je
cli
in
mov
stc
inc
adc
mov
pop
mov
cmp
popl
pop
mov
push
xor
inc
sbb
popf
xchg
and
decl
jl
inc
js
mov
cli
aas
test
daa
add
add
in
mov
enter
mov
idiv
mov
shrl
dec
add
dec
dec
mov
pop
std
scas
ja
mov
cmpsb
test
ljmp
daa
add
xchg
and
repz
arpl
fs
or
pusha
push
xor
xor
inc
out
outsb
mov
enter
in
cld
adc
pusha
sub
repnz
mov
flds
out
out
in
or
orl
xlat
loopne
pop
jo
das
dec
cmp
out
sahf
pop
imul
hlt
and
test
inc
icebp
mov
dec
mov
fistps
add
in
jecxz
addr16
mov
mov
jne
sbb
cmpsb
loop
mov
pop
lret
jp
cmp
dec
xorb
jae
popa
ret
test
loope
lock
inc
arpl
pop
mov
in
test
mov
cwtl
fnsave
sub
das
mov
dec
js
dec
xchg
inc
outsb
mov
or
mov
in
jnp
xchg
in
push
stc
lret
out
pop
inc
in
cmc
mov
inc
stos
xor
adc
rolb
adc
xchg
repz
and
mov
and
inc
aaa
cltd
fs
cltd
mov
out
dec
sbb
call
push
mov
loop
xor
dec
iret
jl
test
shll
add
cs
or
cmpsl
sbb
adc
mov
add
dec
dec
roll
mov
push
lret
push
xchg
and
divb
lock
fwait
xchg
mov
ficomps
imulb
push
loop
repnz
ret
cmp
jne
fsubrs
iret
jl
jecxz
xchg
jbe
and
getsec
mov
push
cmp
sub
push
iret
or
ret
arpl
push
mov
subb
xor
aas
gs
mov
xor
jp
and
cmpsb
and
rcrl
and
addr16
push
pop
adc
push
jae
xchg
dec
push
inc
bound
adc
cmpsb
push
xor
mov
pop
dec
mov
je
cmp
cmc
inc
sbb
sub
jecxz
xchg
inc
movsb
jnp
dec
fwait
cltd
sbb
rsqrtps
icebp
int
sub
inc
fisttpll
xorl
jecxz
xchg
and
in
inc
into
lock
sbb
ja
push
cmp
aad
test
dec
rorl
jnp
jo
sbb
push
stc
dec
sub
aaa
jo
gs
inc
sbb
lock
xor
dec
std
cmc
ret
jno
jbe
and
cmp
and
pusha
ret
or
or
pop
pop
pusha
popa
idivb
or
loopne
ret
out
cwtl
lods
xchg
inc
scas
pop
jnp
shll
aaa
popa
mov
pop
push
sbb
int
and
cmp
or
shrb
sub
mov
mov
mov
push
sbb
mov
adc
aam
dec
mov
iret
or
pushf
syscall
mov
push
test
sbb
xchg
and
ja
shrl
fcomps
inc
sahf
out
shlb
outsb
fwait
cwtl
retw
jl
dec
cmpsl
test
fadd
jo
adc
popa
mov
outsb
or
rorl
mov
dec
mov
inc
fucomip
xchg
mov
addr16
gs
aas
dec
imul
repz
js
ds
enter
icebp
insb
test
jae
pop
sbb
sbb
dec
iret
pop
rcll
or
sbb
movsl
add
lods
inc
ljmp
xchg
sub
icebp
or
bound
loop
mov
lods
js
inc
cltd
inc
add
sub
es
sbb
push
and
mov
arpl
cwtl
dec
faddl
pop
rorl
cmpsl
loopne
aad
fsubs
jo
daa
js
dec
call
or
popf
pop
mov
sub
cltd
dec
bound
inc
xor
out
jb
xchg
outsl
insb
sub
dec
ror
add
rorl
cmp
iret
inc
sub
faddl
sub
fisttps
cmp
dec
movsb
jo
pop
xor
inc
dec
clc
ror
lcall
and
cmp
mov
lcall
add
call
aad
mov
sahf
shrl
test
shlb
or
mov
pop
fbstp
cmp
cli
arpl
jb
cs
mov
idivl
out
das
adc
sti
mov
pusha
popa
out
and
out
sub
mov
inc
popa
nop
sub
xor
jg
lds
rcl
aam
mov
mov
daa
lds
cmp
or
xor
rclb
dec
jmp
sbb
jle
aaa
jns
sub
adc
pusha
push
ret
cmp
cld
add
add
enter
cld
dec
fmul
or
adc
insl
add
push
fsubrp
clc
mov
fldt
xor
aam
test
cmp
imul
dec
cmpsl
or
ficompl
mov
mov
and
scas
shlb
sub
enter
fwait
or
push
dec
ret
mov
and
aad
add
pusha
mov
in
fyl2x
pushf
add
mov
test
jge
xchg
adc
adc
mov
inc
jp
and
sbb
repz
cld
outsl
outsb
loop
cmc
incb
xor
jmp
mov
cli
and
push
add
push
scas
shrb
hlt
fiaddl
cwtl
adc
out
inc
inc
push
push
sub
sbb
dec
jne
loop
or
shr
or
ja
mov
test
mov
mov
das
int3
mov
movsb
aad
inc
dec
xor
xlat
cmp
dec
mov
pop
add
adc
push
mov
clc
js
dec
cmp
jge
cld
inc
xchg
adc
rorb
jno
mov
pop
jne
lret
mov
sub
cmp
fwait
sbb
cmp
int3
adc
insl
call
mov
insb
hlt
nop
out
cs
test
add
lret
enter
sub
repz
or
xchg
insb
inc
clc
sub
lcall
pop
ret
mov
xor
xchg
das
nop
loop
rolb
or
jmp
ret
mov
and
aam
pop
adc
sub
xor
test
aas
mov
sub
cmp
ja
pushf
rol
test
stos
inc
push
adc
mov
sbb
fcoml
movsl
xchg
xchg
lret
cmp
xlat
rcl
mov
das
hlt
lret
aad
jbe
lds
mov
xor
fsubl
xchg
repnz
lcall
fnstenv
rclb
inc
out
mul
ja
mov
addl
jbe
or
push
leave
mov
mov
fiaddl
sahf
stos
inc
pop
xchg
mov
mov
mov
imul
js
shll
dec
inc
aam
pop
in
sub
mov
push
sub
mov
adc
lcall
mov
sarl
and
sub
mov
jae
cmc
jo
fwait
nop
mov
sbb
xchg
leave
or
mov
add
sub
std
adc
mov
loopne
dec
lock
mov
sub
in
adc
test
lahf
aad
addr16
sbb
jp
push
cmp
cmp
outsb
dec
add
mov
dec
mov
cmp
into
mov
call
out
jno
ret
pop
sbb
sub
dec
adc
xchg
cmp
jno
fidivl
xchg
inc
popa
mov
jo
xchg
lahf
mov
dec
pop
pop
sahf
jge
xor
mov
out
lret
rcr
fincstp
jge
push
cmp
add
aad
mov
jmp
scas
mov
dec
push
jmp
xor
push
aad
in
loope
adcb
icebp
gs
jg
inc
hlt
mov
mov
lods
cmp
inc
mov
jbe
or
rcrb
dec
sbb
push
stos
pop
mov
xor
ja
es
mov
out
repnz
and
dec
pop
aad
arpl
test
push
and
sbb
in
fsubs
xchg
lods
add
dec
add
repz
lahf
push
mov
xor
cmpsw
es
jp
sub
jae
sbb
xor
inc
cmpsb
jnp,pt
gs
pop
fisubs
neg
push
out
inc
or
lock
jns
mov
push
jno
mov
lcall
jl
mov
ret
aas
rol
rol
test
aad
cld
pushf
xchg
xor
and
jl
stos
sbb
es
jb
shl
roll
dec
dec
jae
adc
xchg
push
sti
bound
mov
xor
fwait
and
fucomp
sub
jmp
orb
out
and
mov
mov
jns
xorb
and
call
push
dec
arpl
jbe
and
out
sarl
insb
and
adcb
lods
lahf
test
fisubrs
call
push
or
xor
into
or
add
loope
pop
divb
rorb
mov
pop
inc
leave
or
out
jle
push
or
insl
mov
jle
in
es
aas
push
mov
cld
jmp
subb
jle
push
insl
jb
add
out
mov
sbb
aaa
lods
scas
mov
xchg
ja
stos
inc
cli
mov
push
out
xor
rolb
cs
add
push
or
popa
xor
cli
and
dec
jne
es
sub
jl
int3
mov
ljmp
int3
sub
cwtl
jmp
cs
adc
cmp
jnp
xor
push
aas
lcall
aas
pop
insl
stos
push
dec
mov
cwtl
popa
fnstenv
sub
sbb
call
push
mov
ds
push
icebp
xchg
hlt
sbb
inc
aam
xchg
sbb
popa
insb
inc
fldt
cwtl
lcall
sti
push
adc
pop
mov
add
inc
mov
pop
push
jne
sbb
pushf
les
nop
cmpsb
xchg
movsl
ljmp
inc
cmc
mov
fidivs
push
cmpsb
and
lret
sub
lea
jnp
rcll
aad
pop
dec
mov
dec
scas
jo
cmp
cmp
jle
movsb
and
out
xchg
repz
jmp
outsb
dec
pop
pop
dec
push
sbb
fdivs
loop
and
cmpsl
bound
loopne
out
aam
inc
in
mov
sub
add
in
mov
cmp
jne
js
dec
out
jmp
inc
ret
enter
add
jecxz
push
or
rcll
xor
cmp
xor
ljmp
rclb
push
mov
cmp
in
jbe
mov
es
fiadds
inc
adc
sub
fsub
imul
addr16
sbb
inc
cmp
adc
in
mov
arpl
jno
mov
movsb
lahf
sub
sarb
and
push
and
mov
mov
jmp
dec
je
and
sbb
or
xlat
cmpsb
call
addr16
shl
and
mov
std
xchg
mov
setne
mov
imul
test
mov
or
jne
and
cmpsb
sahf
inc
fsubrl
push
push
vpclmulqdq
mov
rorl
or
int3
and
xchg
pop
push
pop
jmp
imul
leave
addr16
push
jg
aad
push
xchg
test
fisttpl
movsb
or
dec
xor
popf
imul
lea
lret
adc
pushf
jb
push
scas
out
or
jge
mov
cmc
jo,pt
add
cltd
cmpsb
fistpl
sub
dec
mov
xlat
cmp
jp
daa
pop
pshufw
sbb
roll
cmp
add
ret
xchg
insl
pop
push
insb
xor
xchg
mov
inc
jge
xor
add
mov
arpl
jmp
push
movsl
jg
xchg
negl
jecxz
sbb
test
pop
popf
cld
add
cmp
mov
sti
xor
hlt
push
inc
loope
cmp
sbb
lret
lcall
loope
popa
call
scas
andb
sbb
iret
out
stc
push
dec
mov
mov
xchg
sub
jl
popf
stos
push
mov
push
push
xchg
in
adc
mov
pop
das
push
push
xor
cmovne
popa
cli
fldt
cmpsb
mov
stos
sti
jns
cmp
aaa
xchg
mov
push
mov
rolb
adc
xchg
push
sbb
mov
dec
mov
xchg
jbe
aaa
ror
int
shlb
repnz
nop
test
out
movsb
in
lock
cs
push
cmp
jmp
jnp
imul
cmpsl
sbb
gs
mov
mov
xor
dec
jmp
lret
and
popa
and
ja
mov
rorb
jg
andl
jp
sti
add
pop
push
sub
xchg
jg
sbb
lcall
in
ljmp
jle
adc
aam
adc
jecxz
pop
push
mov
hlt
ds
lods
mov
dec
out
stc
xor
sub
jbe
mov
insb
scas
sbb
arpl
shll
rcrb
jno
test
or
mov
pop
add
aaa
xor
ss
dec
es
fiadds
sar
repnz
add
scas
inc
xchg
and
les
fwait
xchg
mov
lahf
int
mov
mov
ds
dec
fcompl
push
pop
fdivrl
pop
dec
adc
and
mov
mov
cmp
push
cmpsl
mov
sub
jae
mov
jno
loopne
sbb
fucomi
ret
xor
mov
inc
stc
jge
inc
cmp
mov
cmp
inc
xchg
mov
mov
push
add
and
test
adc
cmpsb
push
and
push
xor
jnp
inc
push
mov
testl
or
jecxz
adcl
or
cltd
jmp
dec
dec
adc
mov
cmp
orl
add
lods
loop
ljmp
sbb
fists
pop
add
hlt
jecxz
faddp
dec
lods
insl
bound
mov
pop
mov
mov
iret
inc
movsb
lods
jecxz
ss
dec
out
or
jmp
xor
jb
xor
nop
mov
mov
jmp
sti
outsl
jne
xlat
loope
dec
xchg
popa
cmp
and
inc
std
repnz
push
lods
movsb
and
xchg
mov
orl
mov
pop
mov
addb
lock
xor
iret
jge
js
or
jns
add
mov
ljmp
jge
dec
out
adc
dec
jl
js
adc
add
rcr
pop
inc
das
mov
sti
lret
adc
cmc
push
test
mov
jp
push
xchg
in
inc
les
cmc
shlb
cmp
mov
push
add
sub
xchg
negl
pusha
es
dec
push
cmp
mov
mov
imul
loope
xchg
push
xchg
jb
repnz
jl
notb
mov
jns
jp
insl
mov
stc
ret
adc
cld
test
sahf
dec
xor
jecxz
test
cmpsb
cmp
or
cmpsl
rclb
std
xor
repnz
out
sbb
psrlq
scas
inc
test
aad
repnz
jecxz
jne
xor
lods
pop
mov
push
data16
divb
inc
pop
sub
dec
gs
mov
push
ljmp
stos
cs
mov
outsb
outsb
mov
in
es
pop
fxch
dec
xchg
xchg
mov
aas
cmp
sbb
xchg
mov
mov
lahf
lret
mov
add
enter
cltd
int
arpl
mulb
adc
adc
and
ja
subb
std
daa
fldt
jo
ss
sub
cmp
or
mov
test
outsl
lret
inc
int
inc
sbb
outsl
jne
out
mov
adc
loope
idivl
mov
lock
sub
filds
in
imul
jecxz
jge
dec
loope
imulb
lret
leave
dec
hlt
or
pop
xor
cmp
aaa
bound
xor
lods
xor
bound
rol
xchg
sub
jne
xlat
lcall
mov
aas
out
mov
inc
out
mov
subb
add
fs
pusha
cwtl
and
test
mov
dec
shll
lcall
inc
mov
and
popw
xchg
mov
movsb
sub
loopne
dec
sbb
push
les
mov
inc
inc
xchg
int3
push
pop
mov
inc
add
stos
pushl
xlat
arpl
cld
sbb
adc
dec
test
push
pushf
mov
icebp
jmp
cmp
addr16
mov
adc
mov
fistpll
sbb
inc
cmp
push
xchg
aaa
imul
aad
movsl
fmul
insb
sahf
cmp
stos
push
fsubl
and
mov
aad
mov
jnp
sahf
xor
test
adc
mov
and
loope
sub
rol
mov
or
imul
push
adc
inc
add
jecxz
xchg
inc
cmp
shrb
xchg
jle
ljmp
cld
mov
test
pop
and
mov
pop
sarl
pop
cli
outsb
xchg
test
in
cmp
ja
sub
test
imul
je
outsb
xchg
xchg
adc
inc
jmp
movsb
pop
fadds
fsubs
out
shl
add
xchg
cltd
bound
cmp
adc
or
aad
dec
mov
mov
sbb
xchg
sbb
ret
int3
cwtl
xchg
dec
pop
loope
movl
stos
cmpsb
loop
popa
data16
push
stc
lods
add
test
mov
xor
outsb
mov
inc
repz
inc
pushf
or
aas
call
push
pop
cmp
pop
add
popa
jns
aad
test
stos
sti
xchg
sub
jbe
insl
int3
push
sbb
popf
add
sub
mov
or
out
cmpsl
fcmovbe
xchg
lock
sub
test
and
out
inc
loop
mov
mov
int
mov
rclb
dec
cltd
lods
popa
in
jp
mov
push
frndint
outsl
lahf
fiaddl
imulb
xor
insb
mov
mov
pushw
inc
push
ljmp
sub
sbb
stos
adcl
nop
xor
mov
or
inc
call
or
jb
ret
push
es
mov
mov
imul
in
jmp
adc
mov
mov
add
mov
orl
scas
sub
adc
mov
rcrb
jae
add
outsb
out
dec
push
push
jge
lret
fwait
inc
mov
into
inc
xor
outsl
cmp
adc
dec
xchg
pop
outsb
pop
pop
pusha
xor
sub
xorb
jmp
adc
ficomps
hlt
aam
push
adc
jns
mov
test
sahf
pop
out
sub
adc
push
and
dec
adc
leave
scas
sti
mov
cltd
inc
rcl
out
call
sbb
sbb
or
das
cwtl
test
shrb
repz
xor
and
pop
test
out
testl
test
nop
cltd
inc
dec
mov
rcrb
jmp
nop
mov
cmp
cmpb
stos
stos
jne
sbb
and
repz
add
out
xchg
cmp
js
shl
pop
push
lock
mov
cmpsb
test
lret
les
jp
add
movl
mov
mov
arpl
loope
pop
sti
mov
jg
dec
int
jbe
scas
mov
pushf
jnp
leave
add
aad
add
and
int3
into
popf
dec
push
fdivrs
dec
push
orl
in
mov
push
cltd
sbb
pop
call
dec
jl
jnp
fs
in
mov
aad
push
nop
mov
jle
jg
sbb
adc
push
jecxz
aas
xchg
add
jle
shrb
mov
pop
jbe
aaa
loop
dec
orl
dec
jb
lret
test
out
js
jle
ds
push
adc
sbb
sbb
shrl
arpl
mov
add
fdiv
and
repnz
aad
or
push
call
jecxz
imul
fidivl
push
cld
inc
fdivl
sbb
int3
or
or
loop
fisubrs
loopne
adcl
pusha
xor
daa
pop
aas
sbbb
cmp
pusha
clts
jb
int3
lret
dec
loop
mov
jg
sub
cmp
mov
cmpsb
lret
push
and
push
xchg
popf
jnp
adc
inc
fcomip
test
jg
cmpsb
scas
cli
cmpsb
lds
push
shlb
mov
pop
jno
adc
scas
pushf
cltd
push
call
jae
sbb
mov
push
adc
xchg
xchg
mov
cli
fsts
fisttpl
stc
hlt
xor
std
and
fildl
mov
mov
int
cwtl
movsb
push
out
frstpm(287
pusha
mov
inc
addr16
mov
inc
jp
push
adc
iret
hlt
sub
cmp
pop
xor
das
xor
nop
test
mov
adc
inc
shrl
loopne
int3
stos
call
xchg
mov
push
jns
call
mov
sarl
inc
fwait
mulb
and
push
clc
xchg
inc
mov
iret
ja
adc
inc
cwtl
xor
in
push
ud2
sahf
fstpl
mov
mov
jbe
mov
and
inc
arpl
cmp
pop
push
and
xchg
nop
orl
leave
cmpsb
lock
xchg
push
scas
mov
mov
lea
xchg
push
push
lods
out
pop
dec
jbe
xor
test
je
repz
mov
int
inc
jecxz
notb
mov
adc
out
or
mov
push
sub
xor
rcrb
push
fisubs
scas
or
inc
adc
xor
jp
xchg
into
fisubl
fsubrl
mov
push
inc
lods
sarl
add
xchg
popf
jp
stos
sbb
imul
pop
or
mov
sti
lods
push
mov
adcl
mov
outsl
xchg
xchg
cmp
xor
jmp
scas
fwait
popf
in
shlb
push
icebp
fsubrs
add
je
not
pushf
xor
inc
movsl
mov
jne
cmp
mov
push
mov
test
xorb
jge
push
pushf
lcall
call
mov
call
stos
pop
out
sub
mov
add
ror
adc
cmp
out
ds
or
jl
cmpsl
and
ret
hlt
or
sub
push
arpl
setne
or
ret
jns
cmc
psubusb
cltd
cmpsl
insb
push
rorb
fsubrs
mov
pusha
push
push
cmp
and
cmp
xchg
orl
xor
xorb
inc
aad
xchg
rcll
xchg
stos
mov
pushf
push
dec
xor
jmp
test
pop
loop
mov
mov
les
mov
int3
add
dec
cli
jns
mov
call
xchg
scas
incb
pusha
sub
mov
pop
ljmp
adc
inc
aam
sub
cs
nop
ljmp
xor
int3
cmp
cwtl
inc
add
jno
in
push
je
outsl
mov
cmpsl
xchg
mov
sbb
scas
cmp
jmp
pop
dec
dec
testb
xchg
addr16
dec
jns
dec
sbb
xchg
test
lahf
pop
lcall
jmp
ret
std
mov
stc
sub
dec
xchg
jae
cld
xchg
addr16
jp
adc
sar
cmp
mov
lds
mov
xor
out
hlt
push
iret
data16
pop
arpl
pop
lods
in
jo
add
bound
popa
mov
jg
stos
arpl
popa
and
push
lahf
or
xlat
in
mov
cld
ret
cs
pop
ss
mov
push
int3
inc
push
jl
jb
incl
push
push
ja
dec
mov
sbbl
jle
cmc
add
in
mov
xchg
push
sbb
pop
adcl
stos
dec
stos
test
cmp
xchg
lock
div
pop
pop
xchg
push
int3
sti
das
mov
sti
inc
mov
adc
lds
mov
pop
inc
dec
in
dec
shlb
imul
cmp
test
js
aas
mov
mov
adc
cs
gs
loopne
jge
sub
sub
cmp
push
cmp
mov
mov
in
mov
mov
sub
jae
shrd
mov
cld
fldl
test
ror
in
mov
outsl
cld
xor
jb
cmp
cmova
jecxz
js
ja
dec
inc
or
sub
jno
shl
scas
jl
lods
push
lods
pop
sbb
aam
sbb
xchg
leave
fcoml
sub
sbb
mov
add
out
daa
aad
std
push
fsubs
mov
ror
mov
lods
inc
lods
push
lret
lods
outsl
sub
and
push
in
xlat
pop
inc
or
jne
mov
push
imul
dec
xchg
lret
cmpsl
or
push
in
jge
cmpb
mov
xor
dec
xor
into
xchg
xchg
cmp
xchg
mov
add
jmp
lods
or
or
mov
fiadds
and
ret
mov
nop
sub
push
and
add
add
jns
jno
pop
cld
in
aam
mov
lcall
loop
add
adc
pushf
mov
inc
fmuls
pop
add
lods
xor
inc
dec
jo
bound
mov
pop
cmc
rclb
cli
pop
inc
dec
mov
enter
mov
das
push
mov
js
fidivrl
gs
movsb
pop
lock
push
sub
out
xchg
lock
jb
mov
loop
repz
sbb
aad
mov
sbb
ss
js
or
add
xor
sahf
mov
daa
fcmovbe
xchg
adc
mov
roll
push
loop
fcmovu
add
add
and
stc
mov
add
add
lea
sbb
lret
loopne
add
adc
nop
ja
insb
mov
or
stc
jle
xchg
or
sbb
fmulp
add
ret
jg
xor
mov
dec
sub
iret
test
mov
ljmp
sbb
jp
inc
fnsave
popf
and
sub
add
fildl
sbb
sbb
jae
bound
icebp
sti
mov
scas
mov
movsb
mov
jns
mov
les
icebp
loopne
mov
mov
fcomi
roll
mov
imul
in
mov
fcmovne
out
and
insl
fs
mov
loope
cmpsb
inc
cmpsb
dec
aas
dec
mov
fs
out
sarl
flds
mov
sub
jecxz
inc
icebp
je
or
jmp
bound
cwtl
adc
sbb
stos
lds
scas
pop
lcall
push
mov
int
jge
and
test
add
sti
scas
xchg
sub
shrl
pusha
sub
jb
int
xchg
or
loope
add
lods
push
pop
lods
mov
adc
shlb
push
aaa
dec
xchg
inc
mov
stc
mov
dec
inc
in
bound
dec
lcall
jne
push
adc
divl
push
or
into
cmc
mov
loop
dec
dec
or
xchg
cmp
in
cltd
mov
adc
movsb
add
dec
pusha
shrl
pop
fwait
dec
imul
sarb
and
cmc
inc
aad
xchg
cmpsb
repnz
sub
add
mov
aad
xor
jecxz
lea
mov
sub
sbb
and
lahf
jl
outsl
ss
pop
inc
xchg
push
scas
sub
dec
pop
imul
lods
dec
xor
push
pop
sub
sbb
nop
add
dec
xchg
in
fisttps
movsl
sub
mov
movsl
xchg
adcb
push
cmp
jb
out
test
data16
fmull
jmp
pop
xor
mov
mov
mov
movsl
jl
xor
inc
and
cli
push
mov
mov
dec
orb
gs
mov
iret
jg
xlat
stc
in
sbb
sbb
xchg
mov
stos
cmpsl
mov
add
ljmp
sbb
inc
lods
sub
dec
fs
test
jo
dec
popf
sub
mov
ret
push
push
test
cmp
into
daa
mov
subl
cwtl
nop
call
sbb
push
rcll
ret
movsl
cmp
mov
mov
pop
sbb
test
cmc
test
in
jae
jmp
push
imul
sbbb
mov
incl
adc
mov
dec
dec
scas
lcall
or
mov
sahf
lock
jge
flds
iret
stc
hlt
out
jg
adc
pop
add
mov
loope
push
xchg
mov
xor
cmp
fsubr
sahf
push
pop
data16
xchg
repz
sbbb
in
add
and
adc
xchg
fmuls
cmp
inc
popa
dec
jnp
mov
jl
jb
mov
dec
jecxz
enter
dec
imul
hlt
or
mov
inc
sbb
sarb
pop
sbb
jb
and
test
hlt
adc
aaa
test
adc
push
fs
push
js
jbe
test
ret
outsb
add
rcr
jp
mov
clc
push
data16
repnz
icebp
mov
sahf
add
mov
repnz
or
pop
mov
dec
fs
jp
leave
clc
outsb
sbb
xor
or
sub
insl
pusha
mov
adc
and
lcall
out
ljmp
and
fnstenv
lret
sub
lret
sahf
xchg
lods
cs
int
je
fwait
cmpsl
gs
movsb
push
xor
jb
add
ss
sbb
shrl
adc
addr16
fadd
test
rorl
ja
in
lock
mov
push
and
enter
outsb
inc
iret
ss
shlb
cmp
mov
push
inc
fwait
xchg
adc
pop
push
pop
xor
cmp
insl
sub
mov
test
sub
vandnpd
sub
into
push
cmp
pop
jmp
mov
out
mov
ljmp
test
pusha
fildl
jle
ss
bnd
cmp
sbb
mov
mov
inc
push
addb
xchg
jmp
jl
push
in
xlat
mov
lock
pop
xchg
mov
cmp
cmpsb
or
cmp
sbb
xchg
inc
mov
pop
popf
movsb
sarl
mov
jo
cld
inc
js
push
les
jg
pop
fadd
xorb
lret
cmpsb
daa
in
sbb
mov
fldt
data16
sub
add
popa
push
push
cld
or
lcall
stos
div
mov
pop
ja
and
das
pop
hlt
lret
jmp
xor
mov
fdivrs
and
pop
mov
push
xor
or
pop
adc
dec
mov
pop
push
push
push
fdivl
jle
and
pusha
cmp
mov
fwait
jmp
insl
movsb
xor
jle
rclb
mov
cmp
mov
insb
dec
inc
andb
dec
inc
or
jno
aaa
cmpsl
mov
adc
and
xchg
jp
xchg
js
bound
test
jp
adc
pusha
mov
and
idivl
xchg
addr16
fs
sbb
dec
or
lahf
xor
pop
cmp
pop
mov
movsl
add
les
push
xchg
jl
xchg
orl
lea
cmpsl
aaa
jl
psubw
loop
xchg
xchg
mov
cmp
fwait
in
xor
mov
mov
cmp
clc
jo
arpl
fldt
xlat
iret
add
outsl
sbb
enter
aas
push
pop
add
inc
mov
xor
fistl
or
pop
aaa
adc
mov
mov
aas
fildl
outsb
push
mov
dec
inc
add
iret
outsl
push
mov
in
cmpsl
fsub
push
lcall
outsl
lret
mov
sub
add
inc
frstor
movsl
lret
or
cmc
test
jne
icebp
sbb
lea
pop
xchg
jle
fistpll
xchg
lret
fimull
jno
xchg
mov
insl
inc
sbb
xor
mulb
mov
push
xor
dec
dec
sti
push
sub
adc
inc
dec
add
adcl
movntq
out
or
adc
shl
and
mov
sbb
mov
pop
adc
lret
sub
and
push
xor
cli
imul
pop
jbe
jge
mov
icebp
or
inc
repnz
mov
dec
movsb
js
mov
cmp
push
sub
and
scas
inc
xchg
mov
or
push
jle
inc
stos
jo
mov
adc
xchg
into
push
out
mov
or
mov
notl
xor
xchg
sbb
fcompl
cmp
int3
test
inc
mov
iret
imul
imul
lret
cmp
scas
idivl
pop
hlt
mov
lods
xchg
lea
jmp
mov
imul
pushw
scas
data16
arpl
loop
out
and
cwtl
adc
mov
loope
shrb
push
xor
inc
lods
dec
mov
cmpsl
stc
loope
lret
movsb
movsb
fimull
push
stos
aaa
movsb
popf
pop
movsb
pop
jae
repz
mov
not
sbb
insb
cmpsl
sbb
sbb
test
xchg
adc
dec
push
in
push
cld
adc
jno
nop
ja
inc
fcmovbe
pop
stos
mov
xor
daa
call
dec
loopne
out
mov
mov
pop
push
inc
test
js
or
fisttpl
push
dec
lods
lods
mov
xchg
pop
inc
adc
pop
push
jns
xchg
mov
pop
mov
or
cwtl
xchg
dec
ss
inc
shll
scas
ljmp
mov
adc
data16
shlb
mov
fstl
stos
pusha
loop
jae
mov
stc
jnp
repnz
loopne
cmpsb
jne
test
filds
push
pop
loopne
andb
and
subl
add
inc
fwait
outsl
fwait
cmp
rorl
in
cld
sub
fs
insb
or
clc
stos
inc
jmp
push
cmp
fistps
sub
fisttpl
lcall
sti
mov
pop
in
mov
mov
pop
ljmp
mov
xchg
leave
sub
and
imul
or
punpckldq
fneni(8087
mov
sbb
hlt
pusha
push
push
cmp
add
decb
jle
dec
xor
lea
add
loopne
push
lcall
push
enter
xchg
int
lock
lahf
fisubs
daa
lret
pop
out
sub
pop
pop
mov
mov
fistpl
sti
rcr
cld
xchg
jb
add
dec
dec
repnz
inc
pushf
pusha
rorl
mov
stos
inc
jle
int3
clc
sub
sbb
adc
push
hlt
xor
pushf
push
cli
push
insl
mov
lcall
pushf
and
mov
sbb
lea
mov
inc
movd
in
fs
mov
int
cmp
push
adc
jb
call
cmp
sbb
xchg
das
xlat
cmpl
and
mov
test
mov
test
xchg
inc
shlb
in
pop
mov
or
and
gs
jne
lcall
les
outsb
daa
shll
negb
add
xchg
sbb
jl
out
dec
sub
testl
imul
pop
pop
es
movsl
gs
aad
sbb
dec
fsub
in
shrb
int
insl
sub
pop
inc
sbb
stos
mov
sbb
movsl
jne
xchg
and
cmp
imul
pcmpgtb
popa
mov
or
arpl
into
ds
fwait
clc
push
jp
cltd
jmp
fwait
iret
insl
daa
in
aaa
pusha
xchg
mov
repz
ficompl
and
or
pop
cmp
testb
je
xchg
push
and
out
ficoms
mov
clc
pop
pop
push
or
adc
jp
mov
cwtl
sbb
aad
xchg
mov
pop
and
ret
mov
sbb
ficomps
pop
test
sbb
lods
and
push
inc
push
outsb
daa
bound
sbb
mov
or
and
xor
mov
lcall
jnp
popf
repnz
out
and
or
sub
lret
daa
sbb
popf
lcall
jle
fisubrl
fisttpl
and
rcll
jecxz
icebp
inc
xor
popa
aaa
jbe
mov
pop
mov
pop
xor
mov
repnz
jb
sbb
ss
in
jmp
sub
pop
out
repnz
test
sub
adc
sbbl
sbb
jo
xchg
lods
ds
pusha
loopne
mov
or
pop
mov
fnstsw
aad
sub
test
into
push
cwtl
mov
or
and
popf
xorb
push
jo
xchg
loopne
lret
imul
sub
jb
mov
inc
clc
xchg
and
push
lods
stc
adc
xor
pushf
ror
cmpsl
rcrb
push
cmc
je
cs
xor
sbb
pop
jle
sub
xchg
jl
cmp
pop
lds
mov
xchg
mov
cmp
sahf
xor
clc
add
sub
call
sub
icebp
gs
xchg
loop
jp
adc
cmp
in
cmp
inc
mov
rcrl
pop
sbb
cmpsb
cmpsb
pop
push
adc
fdivrl
enter
adc
mov
je
jne
jg
adc
arpl
sub
sbb
cmp
adc
call
clc
jne
mov
aas
add
mov
ret
xchg
inc
pop
out
cmc
sub
repz
pop
and
pop
popf
push
jl
mov
and
push
aad
cltd
aas
dec
adc
test
xor
xchg
fwait
shlb
push
jo
loop
scas
les
lock
mov
cmp
xlat
push
ljmp
cmp
sti
pop
add
sbb
sub
mov
pop
sub
mov
fmull
mov
out
loope
pusha
push
and
mov
xor
sahf
stos
inc
push
and
jb
jecxz
outsb
jle
cmp
and
notb
sub
pusha
lahf
fcoms
mov
cmp
fildll
pop
adc
lock
lods
pop
pop
lods
rcrl
js
incl
cmp
sbb
push
loope
pop
dec
jo
lds
mov
mov
mov
fldenv
popa
mov
movsl
sahf
sbb
popf
movsb
xor
mov
pushl
test
and
dec
mov
or
ds
addb
mov
roll
jno
nop
or
xchg
or
sti
jo
fwait
idiv
ret
mov
or
xchg
push
mulb
xor
ljmp
jae
arpl
or
sub
pop
loope
lods
or
int3
add
adc
mov
fldt
out
pop
dec
xlat
adc
mov
icebp
or
lds
pushf
jge
mov
das
hlt
add
stc
sbb
pop
roll
push
insl
mov
fnstenv
adc
call
in
sbb
xchg
pushf
jg
std
int3
es
clc
fisttpl
or
sti
out
insl
push
outsl
sbb
xor
mov
cwtl
das
mov
mov
sub
pop
push
ds
jecxz
pop
mov
mov
out
sbb
mov
add
out
lcall
mov
push
add
shlb
cmp
lcall
pop
setno
jmp
dec
jb
int3
outsb
movsl
pushf
cmpsb
imull
and
mov
inc
insb
jnp
out
mov
or
jbe
fmull
push
lahf
addr16
xchg
mov
mov
xor
movsl
jae
adc
cmp
pop
push
dec
dec
test
inc
mov
cmp
adc
sbb
pop
sub
xchg
cmp
or
mov
sti
pop
or
and
data16
sete
popf
loopne
push
jl
in
fisttpl
adc
pop
cs
push
lock
xchg
sbb
mov
dec
inc
sarb
fsubr
imull
dec
mov
aad
push
lcall
mov
mov
movsl
fwait
dec
push
xlat
dec
mov
jecxz
outsl
dec
or
outsl
int
mov
jns
fwait
mov
sub
iret
sbb
mov
movsb
pushf
sub
mov
pop
jge
subb
mov
jbe
add
hlt
loop
repz
popa
add
mov
insb
jmp
shll
and
adc
repz
push
add
daa
les
push
movsb
clc
mov
sahf
mov
lret
adc
or
and
stos
mov
jnp
push
xchg
ret
xchg
jno
push
ret
mov
xchg
pop
icebp
jno
dec
add
jns
xor
adc
insl
cs
push
fists
mov
jmp
pop
lret
dec
jbe
bound
cld
xchg
jo
jp
dec
mov
add
xchg
mov
rclb
ljmp
mov
or
loopne
imul
inc
movsl
cmp
mov
mov
mov
xor
lods
push
xor
bound
stos
cmc
ret
dec
jno
fstpl
mov
xchg
cmp
fs
mov
pop
test
js
gs
loopne
les
out
mov
in
call
mov
push
push
aas
loopne
fisubrl
clc
pop
lret
jbe
out
loop
xchg
cmp
pop
sub
dec
fisubrs
jmp
rcl
ret
in
je
inc
daa
lret
dec
sahf
cwtl
stos
lds
mov
lods
scas
add
or
pop
mov
xor
xchg
mov
cmp
pop
jmp
inc
fsubr
testb
test
test
push
sub
incl
or
jge
in
add
roll
inc
int
fdiv
fiadds
push
fwait
sub
mov
jge
push
and
dec
fwait
xor
loope
xlat
jmp
fbstp
enter
lods
adc
cmpb
fucomp
cld
xchg
jno
enter
push
mov
fbstp
inc
cs
ret
insl
pop
xchg
cmp
shlb
int3
rcrb
lcall
cmp
mov
dec
xchg
sbb
mov
repnz
inc
lret
pop
sahf
jmp
jae
mov
jae
mov
aad
loop
push
cmp
popa
add
dec
and
loop,pn
xor
inc
adc
add
mov
shlb
dec
mov
rclb
ds
mov
adc
push
fmull
fidivl
outsb
das
ror
lret
pop
xor
mov
mov
daa
pushf
es
shlb
dec
stos
mov
ja
pop
loop
push
push
cmp
mov
xchg
frstor
mov
stos
pusha
pop
imul
jno
test
aaa
and
inc
out
jbe
adc
lret
xor
cmp
dec
inc
pop
loop
int
adc
pop
push
aad
adc
jmp
insl
sbb
xchg
cli
fcmovne
jmp
lock
mov
ret
or
aaa
xlat
add
mov
adc
add
inc
jbe
mov
iret
mov
dec
jnp
adc
jp,pt
cmp
jns
js
xor
mov
inc
fst
test
fildll
push
fwait
insl
dec
insl
mov
fisttps
xchg
mov
push
adc
mov
leave
popf
scas
popa
mov
pop
les
outsl
loope
jle
inc
mov
cmp
fidivrs
fiadds
les
and
push
test
loope
nop
jbe
or
outsl
sti
pop
ss
scas
rorb
loope
add
jecxz
cli
xlat
xor
adc
enter
pop
xchg
pop
xor
mov
dec
cmp
jo
jmp
cmp
xor
insl
mov
mov
cli
fiaddl
and
mov
push
or
lret
pop
mov
and
in
mov
lret
jecxz
xor
addb
fsubrl
fsts
jecxz
mov
mov
or
xchg
pop
subl
push
test
leave
pop
jb
std
adc
fsubrs
jl
std
jnp
add
pop
xor
lock
adc
push
adc
jne
push
mov
xchg
push
stc
add
cmp
aaa
shll
test
pop
push
in
out
movsl
ss
shll
movsb
scas
nopl
ss
push
js
aad
popa
lods
and
xlat
xor
xchg
mov
out
cmpsb
adc
inc
cmp
cld
mov
loope
mov
push
inc
or
inc
fiadds
adc
out
sbb
cltd
mov
push
xor
or
jle
aaa
jge
jg
xor
mov
out
repnz
decl
or
test
fnstenv
pop
int3
sub
js
inc
inc
mov
cmp
bound
xchg
pusha
daa
jp
sub
dec
sub
jne
xor
fwait
or
scas
push
cmpsl
out
dec
cld
mov
jns
add
xchg
mov
clc
aaa
in
jae
mov
jmp
and
imul
aam
or
repz
dec
loop
loopne
movsb
push
inc
xchg
dec
xlat
adc
add
sbb
cwtl
sub
movsl
or
adc
jg
clc
arpl
lea
mov
and
fnstsw
imul
mov
scas
pushf
push
pop
and
cmp
gs
sarl
cld
orps
jg
sbb
jmp
adc
es
lds
pop
inc
push
inc
mov
into
push
mov
jp
inc
cmpl
int3
enter
sahf
lods
dec
lret
les
sarl
mov
xor
iret
outsl
xor
rorl
add
nop
arpl
cwtl
js
gs
jns
decb
pop
jb
inc
lds
or
shrb
pop
sbb
add
movsb
scas
icebp
pop
lods
or
add
das
jmp
adc
jg
rcrb
mov
mov
fs
or
and
mov
xchg
add
call
inc
push
inc
lret
xor
stos
imul
mov
outsb
sub
mov
cmc
add
loop
lods
mov
inc
cli
popa
in
shrb
mov
add
mov
hlt
icebp
cs
inc
push
dec
or
xor
mov
dec
xchg
mov
and
jecxz
ret
stos
dec
shll
aam
andl
jns
pop
cmpsb
jo
fs
aaa
repnz
sub
sbb
add
out
fnstsw
sahf
mov
cltd
sbb
movsb
dec
shlb
pop
mov
inc
jns
iret
inc
dec
jmp
stos
inc
pusha
mov
sbb
sbb
lahf
jbe
push
jl
inc
pop
mov
inc
fmul
mov
inc
pop
pop
arpl
and
cld
add
mov
subl
mov
fdivs
je
imul
imul
push
mov
xor
ss
xchg
dec
adc
stos
inc
and
lret
pop
xor
ret
xlat
lods
jno
out
in
lds
inc
pusha
pop
pop
pusha
dec
mov
rcll
stc
lock
imul
in
test
mov
inc
aad
out
dec
into
adc
cmp
jae
jmp
mov
sbb
nop
in
xchg
fldl
sub
mov
jns
push
xor
push
gs
bound
imul
pop
cli
add
cmp
cltd
int
adc
fcmovne
mov
outsb
cmp
jo
or
or
cmp
aas
in
fisttpl
xchg
mov
lahf
call
out
ja
sbb
dec
cli
jmp
into
dec
aam
mov
aam
inc
mov
xchg
es
pop
pop
and
sub
shll
shll
mov
in
aas
push
dec
cmp
clc
cmp
das
mul
imul
dec
scas
cmp
faddl
xlat
dec
cmp
cld
dec
aaa
add
data16
js
fcmove
mov
movsb
mov
ret
dec
xor
and
sub
movsl
push
add
arpl
jl
xlat
out
xor
xor
pop
repnz
add
push
daa
pop
ror
test
jnp
daa
testl
cmp
adc
sub
je
int3
lock
xchg
scas
cmp
xor
sub
iret
repz
sub
cmovl
jp
mov
data16
stos
or
out
add
cld
add
xchg
adc
dec
fwait
add
sub
sub
xchg
aaa
subb
fisubs
sub
push
fstl
ljmp
or
lcall
movsl
std
sbb
ror
or
pop
popa
das
or
outsl
sti
mov
sarl
inc
mov
sbb
mov
push
mov
xor
dec
fst
or
mov
sub
out
mov
pusha
arpl
or
pushw
hlt
loop
mov
aaa
sahf
nop
js
push
adc
push
out
push
xchg
nop
dec
xchg
adc
xchg
mov
jg
mov
insl
xchg
scas
daa
js
fmul
dec
jge
or
movsl
xlat
adc
mov
xor
shr
outsl
insl
push
mov
push
sbb
in
outsl
push
data16
je
sbb
xchg
sbb
cmp
or
lods
in
ljmp
inc
dec
hlt
orb
dec
pop
sbbb
gs
jno
cltd
inc
bnd
repnz
icebp
std
xchg
push
adc
adc
into
stos
out
add
inc
loop
jns
leave
icebp
jb
add
sub
sahf
pushf
into
aaa
adc
jle
repnz
adc
pop
lret
xorl
sub
and
dec
rclb
test
sub
mov
fsubs
push
push
adc
stos
push
dec
rcrl
mov
shl
dec
adc
loope
xchg
mov
push
mov
imul
leave
dec
pop
testl
test
fdivrs
dec
mov
push
lahf
cmpsb
hlt
sbb
push
cmp
into
fisubrs
push
mov
mov
jb
mov
clc
leave
fsubl
dec
cmp
mov
cmpsl
xor
negl
packsswb
xchg
mov
mov
js
ret
aaa
arpl
and
test
stc
aam
xor
out
push
xchg
inc
jne
push
mov
out
push
mov
mov
add
aad
xor
sbb
les
lods
mov
dec
pop
repnz
imul
jl
jnp
and
fcmovu
mov
sbb
bnd
mov
iret
pusha
cmp
push
stc
shlb
insb
int
pop
jmp
rolb
lods
testb
jmp
out
std
mov
icebp
ret
inc
push
and
sti
adc
mov
mov
and
adc
sbb
inc
pushf
jmp
loope
lods
or
arpl
daa
test
int3
cmp
in
ficoms
retw
fstps
sti
dec
rclb
push
arpl
pop
pop
xor
insl
call
add
mov
xor
cmp
std
out
cmpsl
mov
dec
dec
shrl
sub
jne
mov
and
ja
fstps
stc
test
pop
mov
mov
push
cmp
dec
jl
cltd
pop
push
cmp
loope
inc
cmp
fnstcw
paddd
mov
or
inc
jno
popa
scas
jnp
mov
fstl
mov
ljmp
mov
push
arpl
repz
xchg
out
lds
xor
pop
enter
jno
lret
cmp
stos
pop
mov
stos
xchg
or
shl
pop
scas
int3
mov
sbb
pop
rcll
cmp
shrl
data16
icebp
xchg
jle
mov
cltd
or
gs
mov
xchg
leave
adc
fwait
aad
test
scas
fistpl
or
sbb
rorl
je
mov
adc
call
sbb
test
or
xchg
sarl
adc
mov
movsl
inc
cmp
cmp
cmc
sbb
lcall
fwait
pop
insb
fiaddl
lods
test
gs
pop
repnz
add
mov
loope
outsb
jmp
xor
mov
shl
mov
push
mov
jmp
ret
call
out
test
stc
in
mov
icebp
sub
push
mov
dec
test
mov
fcomp
xchg
mov
rcrb
out
popa
jbe
mov
test
stos
test
mov
xor
push
cmpb
mov
jb
xchg
ds
mov
ss
cmp
inc
lds
pushf
sub
cld
push
movsl
cmc
shlb
jnp
xor
push
pop
test
rep
lret
jmp
movsl
cmp
lods
push
mov
add
jle
xchg
addb
mov
mov
out
std
sub
mov
in
inc
mov
stc
imul
scas
adc
or
or
cs
aas
cmp
add
es
cmpsl
xlat
movsb
sahf
inc
xchg
aas
sub
popf
mov
jno
xchg
dec
aad
add
sti
mov
mov
xchg
les
insl
ja
cld
call
ds
lods
aam
aaa
and
movsb
or
mov
dec
rolb
inc
jnp
ret
xor
out
jns
mov
ret
mov
jnp
adc
test
push
inc
jge
pop
fiaddl
xchg
fisubrl
wrmsr
xor
or
pop
mov
btc
or
sub
out
add
pop
sbb
sti
mov
and
xchg
movsl
push
mov
dec
test
pop
fidivrl
add
in
sub
or
fildll
loope
push
xchg
enter
mov
stos
jmp
cs
push
mov
mov
scas
jge
cmp
call
cltd
into
loopne
fbstp
aad
add
xor
insb
in
pop
add
cmp
inc
push
repnz
in
push
or
jp
testl
jae
aas
jmp
out
mov
in
inc
pop
push
xchg
stos
dec
push
clc
cmp
lods
xor
sbb
gs
push
pop
daa
cmc
xchg
mov
sti
shr
add
fwait
rcrl
jge
lret
dec
aaa
add
lods
or
lea
outsb
inc
insl
lods
lret
popf
mov
and
pushf
lahf
imull
mov
inc
mov
mov
daa
gs
push
sub
xchg
cmp
roll
aam
jmp
int
rcll
sbb
shlb
loope
xlat
popa
fldt
mov
mov
out
pop
or
adc
out
aaa
mov
push
enter
rcr
mov
cmp
test
dec
jp
arpl
sub
adc
pop
xor
mov
or
sbb
and
xchg
movsl
dec
mov
jns
add
mov
lret
movsl
jne
insl
push
les
jecxz
pop
inc
pop
jbe
sub
and
lods
shll
stc
inc
push
lea
jp
sti
cmp
mov
arpl
jmp
test
je
das
xor
sub
sbb
mov
fldenv
repz
wbinvd
insl
dec
jcxz
push
xor
scas
sub
sarl
jb
ja
or
outsl
pop
je
xchg
and
jge
or
push
test
jo
mov
idivb
dec
mov
inc
xor
mov
lods
inc
into
inc
daa
pop
and
mov
mov
std
mov
cs
mov
insb
repnz
inc
loopne
mov
adc
xchg
xor
dec
and
clc
jg
mov
out
sub
inc
add
push
xchg
in
mov
scas
popf
mov
mov
ret
or
mov
ret
popf
lcall
dec
leave
and
popa
xchg
scas
gs
dec
clc
icebp
push
and
inc
cmpsl
adc
pop
fnstenv
pop
je
xchg
adc
push
pop
test
jb
in
test
test
sub
cmp
std
pop
mov
ljmp
aas
add
adc
fdivs
aas
mov
pop
cmpsl
test
xor
sbbb
sarb
pop
jmp
cltd
std
into
lods
out
jg
mov
push
dec
mov
xor
push
clc
xor
mov
sti
and
inc
or
loopne
adc
aam
or
int
xor
pop
jle
rcl
add
lcall
push
jbe
fsubrs
punpcklwd
mov
rcrl
out
inc
lods
stos
test
xor
mov
dec
scas
sub
pop
dec
xor
cmp
or
mov
loope
das
ret
rolb
daa
sti
shr
jb
popa
sbb
test
popa
aaa
cmpsb
das
subb
movb
add
jl
data16
inc
mov
loopne
jbe
out
push
sets
mov
cmp
mov
mov
daa
mov
mov
sahf
fcmovu
and
pop
out
dec
icebp
andb
jmp
cli
in
repz
lret
dec
sub
jno
or
jg
xchg
inc
ds
push
pop
xor
out
movsl
in
mov
sar
and
data16
mov
or
inc
inc
mov
ret
gs
pop
hlt
sub
nop
test
rcrb
xchg
in
arpl
std
mov
pop
and
stc
cmpl
sbb
pusha
adc
clc
cld
arpl
popa
and
and
mov
ficoms
fists
mov
xchg
pop
pop
xchg
das
inc
ret
push
aam
and
inc
push
jg
pop
xchg
fwait
cld
add
outsl
cli
add
mov
dec
test
rcll
xchg
pop
cmpsb
inc
xchg
jns
jle
das
loopne
in
fnstenv
pop
out
dec
jecxz
mov
sbb
sub
inc
test
notb
pop
iret
sbb
jle
sti
daa
mov
add
mov
pop
mulb
mov
cmp
mov
cld
scas
les
mov
and
jmp
test
mov
or
xchg
lods
imul
scas
inc
std
insb
mov
xchg
xor
icebp
mov
in
cmpsb
shll
cmp
jg
or
add
push
add
adc
pop
mov
dec
rcrl
icebp
inc
xor
cmp
stc
fs
mov
cmpsl
stos
insl
push
mov
inc
and
add
ja
loope
cmp
xor
sbb
lods
sbb
jp
rcrb
gs
ljmp
or
pop
in
clc
xchg
sbb
movsb
je
pop
add
insb
inc
add
pop
in
mov
or
mov
pop
into
pusha
negb
idivb
adc
push
mov
push
ds
push
xchg
cmpsl
mov
fidivs
and
lret
lds
enter
mov
out
push
mov
andl
xchg
xchg
scas
dec
xor
sbb
push
dec
bound
cmpsl
adc
lret
cmp
cmp
cmp
icebp
daa
sub
mov
ljmp
cmp
js
cmpsb
adc
insl
cmp
or
jmp
push
mov
cmpsl
lea
bound
cmpsl
mov
incb
jmp
es
das
testl
push
std
jge
mov
popf
add
int3
mov
jle
fwait
xchg
arpl
fstpl
daa
aam
movsb
int3
dec
jg
faddl
shl
sahf
add
repnz
mov
scas
add
call
outsb
xchg
js
adc
loopne
lods
es
arpl
jae
dec
fs
mov
and
mov
adc
sti
mov
cmc
mov
lret
pop
adc
mov
adc
pop
dec
ljmp
sahf
mov
xor
inc
ret
roll
and
mov
into
outsl
push
cld
sbb
mov
push
mov
jnp
adc
jle
pushf
addr16
fisubl
mov
mov
xlat
mov
mov
pop
sbb
mov
shl
or
jae
int3
mov
sarb
xchg
pop
push
mov
xlat
pop
ficoml
add
mov
idivl
jno
lahf
aad
data16
push
sub
int3
popa
push
xor
scas
mov
cmpb
stos
or
test
pop
pop
mov
or
call
in
xchg
std
lcall
test
insl
movsl
cmp
pop
test
cmp
mov
out
ljmp
push
dec
je
popa
pusha
int
cmp
gs
xchg
xor
in
rorl
xor
leave
mov
cld
loopne
stos
mov
push
ds
push
test
into
or
rcrb
cmp
adc
or
sbb
ret
add
xchg
ljmp
fdivl
rorl
pop
hlt
gs
lods
imul
xchg
inc
mov
cmp
add
out
push
mov
pop
adc
lea
call
repnz
sbb
dec
mov
fisubl
fmulp
adcb
insl
jne
pusha
imul
mov
mov
jne
jmp
mov
cmpsl
loope
add
push
addr16
mov
ss
inc
sub
out
mov
dec
adc
adc
ss
push
add
scas
mov
pop
push
sub
jns
stos
cli
pop
xchg
insl
mov
roll
push
xchg
adc
xchg
jnp
pop
daa
mov
adc
cltd
inc
push
sbb
jns
add
pop
test
lods
cmc
popa
jge
call
adc
mov
mov
mov
adc
pop
cmc
cltd
jge
sti
into
incb
aas
outsb
or
add
pop
stc
ds
xor
push
or
je
stos
add
addl
xchg
inc
dec
jg
int
fsubr
ret
adc
test
xchg
test
fs
call
sbb
lret
or
jp
loop
inc
arpl
addl
pusha
mov
mov
in
or
add
shlb
mov
and
movsl
cmc
sbb
stos
out
lock
sbb
fcmovb
into
add
imul
xchg
not
into
add
push
frstor
sbb
add
hlt
adc
int
sub
pop
inc
mov
repz
pop
mov
push
inc
mov
jns
mov
jp
cld
rorl
das
inc
mov
imul
pop
scas
hlt
and
incl
test
and
xorb
sbb
pop
sbb
outsb
into
lods
in
and
dec
lods
aam
dec
imul
and
sbb
sbb
mov
leave
ret
into
xor
mov
cld
imull
nop
mov
cmp
mov
ror
idivb
ficoms
rcr
adc
or
mov
roll
xor
or
sub
mov
gs
mov
in
andb
add
daa
lret
xor
mov
daa
xor
es
data16
lds
rcl
sbb
es
mov
imul
in
test
ja
aas
sti
inc
inc
sbb
ficoml
mov
and
cmp
dec
inc
sahf
dec
or
sbb
sbb
pop
and
movb
lods
cltd
push
and
cmp
mov
and
nop
add
mov
fldcw
push
mov
ds
cmp
test
es
daa
jno
lahf
pop
jne
subb
js
cmp
out
int
jno
adc
lret
sti
outsl
int
push
fwait
dec
popf
shl
adcb
jp
jge
push
dec
ds
cmp
add
mov
outsl
or
int3
xchg
bound
add
xchg
in
imul
lods
in
xchg
xchg
jmp
push
ret
inc
test
enter
push
xchg
pop
fsts
adc
xchg
xor
andb
inc
pop
pop
jns
jnp
sbb
movsl
and
add
jne
adc
cmp
dec
mov
arpl
dec
pop
cmp
mov
movsb
shrb
cs
dec
fwait
leave
and
xor
and
sbb
mov
xor
or
dec
shlb
mov
ss
dec
and
out
bound
xchg
hlt
pop
inc
subl
test
pop
ds
out
sar
dec
push
add
aaa
pop
mulb
mov
mov
cmp
cwtl
cmp
es
add
jle
push
les
lcall
mov
add
xor
dec
add
mov
popf
data16
jp
jne
mov
das
aad
jg
xor
ljmp
out
pop
cmc
pop
out
jo
mov
mov
stc
mov
rcrb
inc
cmp
add
test
jne
or
pop
xchg
cmp
xor
jmp
sbb
mov
cmp
jmp
sub
adc
scas
cmp
dec
adc
pop
ficomps
push
testl
push
jmp
rolb
ret
dec
fcomi
push
loopne
jns
lret
fidivrs
repnz
sahf
lret
jns
dec
sbb
fld
mov
clc
rcrl
sub
add
cmp
mov
cli
adc
sahf
dec
add
xor
test
push
mov
or
shlb
imul
fidivrl
insb
pop
ret
loop
dec
and
outsb
insl
mov
aam
cld
pop
xor
and
xchg
xlat
xlat
add
jmp
stos
add
pop
and
push
mov
inc
pusha
inc
pop
orb
icebp
shr
aas
lds
mov
mov
sti
notb
das
add
xchg
jp
mov
js
mov
test
dec
jns
ja
stc
push
das
and
jmp
sti
std
in
xchg
push
mov
adc
pop
xlat
fidivrs
in
add
cmp
adc
inc
int3
xchg
xchg
lret
sub
sbb
or
or
cmp
xchg
jnp
xor
push
jmp
les
xchg
lea
test
inc
mov
adc
jns
xor
sub
sub
xorl
lds
adc
mov
and
cmp
fs
sti
or
jae
and
lds
pop
xchg
scas
mov
lds
loopne
sbb
and
push
mov
mov
fwait
lds
outsl
dec
sahf
mov
repnz
mov
subb
lods
and
jl
xchg
mov
mov
push
out
xor
mov
popf
jmp
inc
sbb
cs
jbe
dec
scas
scas
rcrl
mov
idiv
lock
je
mov
jbe
xchg
xchg
cmp
sti
jno
imul
fwait
jb
xor
ret
into
sbb
dec
rorl
xor
dec
jo
push
mov
sbb
fistpl
das
lock
mov
out
or
pop
xor
aas
into
or
pop
mov
ja
inc
xorl
lods
cmp
sbb
lahf
sbb
and
movsl
dec
mov
xor
push
adc
rorl
xchg
fldt
mov
lret
enter
fcoml
mov
push
ss
mov
addr16
ja
jnp
sbb
xor
mov
or
test
cmp
cmp
fcomip
pop
jmp
and
mov
or
js
test
jb
call
es
pop
scas
insl
jne
inc
xor
xchg
mov
imul
mov
stos
clc
std
pushf
pop
jnp
outsw
outsb
or
pop
push
mov
push
jle
mov
xor
pop
sub
movsl
dec
xchg
ljmp
icebp
jne
divb
jmp
in
sbb
std
mov
out
aaa
adc
neg
in
inc
xor
sub
lret
or
jle
jg
mov
xchg
inc
call
sub
lcall
jno
rcrl
sub
cmc
jmp
mov
je
nop
clc
dec
mov
and
movl
mov
dec
stc
das
sub
jnp
or
or
add
or
daa
outsb
lea
call
add
cmp
mov
fimull
adc
mov
imul
push
mov
mov
sub
subl
inc
pop
jge
test
lahf
fmuls
push
mov
imul
mov
jnp
dec
sbb
test
pop
cwtl
dec
xchg
gs
add
into
inc
stc
mov
fidivs
push
subl
push
or
cmc
je
mov
in
lahf
jne
outsl
dec
int3
pusha
addl
cmp
aam
pop
cmc
cmc
cmp
scas
imul
cltd
mov
stos
in
ljmp
mov
sbb
mov
cltd
ret
pop
add
fldt
insb
es
mov
lcall
dec
push
sub
sbb
shlb
stos
xchg
mov
fisttps
cmpsl
jbe
adc
pop
shr
xchg
mov
pop
les
fsubrl
enter
mov
mov
shll
addr16
or
cmp
xchg
cmp
pop
inc
pop
mov
movsl
mov
pop
add
ja
shlb
xlat
or
sbb
pop
lea
loop
pop
mov
push
dec
lcall
divl
fmull
and
jo
pusha
pop
loope
aas
lcall
stos
nop
pop
sub
sub
je
enter
sub
dec
inc
xchg
je
std
xchg
fsubp
js
ret
out
es
xchg
adc
pop
xor
fbstp
daa
cwtl
pop
sbb
sarb
cmp
pop
lock
adc
and
pop
jnp
lcall
aaa
sub
add
pushf
cltd
sbb
fiaddl
dec
mov
mov
cmp
lahf
push
test
pop
aas
cmp
inc
movsl
popf
xor
in
jle
out
cmpsb
push
mov
inc
jp
loope
pop
adc
std
imul
dec
dec
adc
and
mov
out
test
das
loopne
inc
jnp
xchg
push
or
mov
mov
test
loope
mov
repz
je
es
mov
icebp
jg
shl
pusha
clc
mov
adc
lods
push
adc
int
vpbroadcastb
cmp
enter
xchg
jg
aas
test
fmull
fyl2xp1
and
mov
or
icebp
mov
mov
clc
mov
test
jb
lds
lds
adc
push
negb
pushf
xchg
inc
je
inc
sbb
addr16
out
pop
fiadds
movsl
dec
mov
jae
xchg
add
in
cs
into
pop
mov
cmc
es
imul
lret
dec
sub
cltd
ret
add
sbb
sub
mov
in
hlt
xchg
pop
lret
jecxz
jmp
arpl
in
mov
repnz
jle
mov
cli
sbb
inc
xchg
cltd
xor
add
out
pop
jb
sbb
mov
outsl
cmpsb
imul
jecxz
fsubrs
push
pop
sbb
inc
pop
and
mov
jb
popf
jae
inc
xchg
repnz
test
push
popl
hlt
push
dec
std
inc
in
mov
lods
adc
jmp
jb
or
in
adc
outsb
movsl
popa
xor
pop
xchg
stos
xor
outsl
jp
pop
push
cmc
mov
or
js
sahf
es
shl
jmp
inc
pop
fwait
test
imul
xchg
out
xor
and
bound
pop
sub
pop
mov
aam
pop
pop
cmp
sbb
jne
cmpsl
mov
xor
push
cmp
clc
cmp
inc
iret
int3
cmpsl
mov
mov
sbb
inc
fcoml
add
push
pusha
shll
cmp
mov
bound
lahf
dec
popa
sahf
ret
cmpsb
lds
dec
lcall
leave
mov
push
popf
in
jecxz
add
lods
cld
mov
cmp
xchg
lods
dec
and
cmp
insl
popf
daa
addr16
mov
lcall
call
xchg
std
aam
stos
pop
mov
and
jle
iret
cli
xchg
das
cld
cmpsb
int
push
jns
sbb
mov
imul
mov
pop
dec
shlb
xchg
test
pop
fisubrl
jnp
sbb
dec
mov
sub
fisubrs
sti
jb
ds
inc
sbb
cmpsl
mov
sub
add
mov
jg
pop
popf
push
inc
jns
xor
inc
dec
in
es
ljmp
lret
or
and
add
imul
leave
fnstsw
lahf
ret
icebp
cmp
cmpsb
jnp
push
jp
push
mov
cmp
repz
dec
in
or
sbb
les
ljmp
popa
push
test
iret
shll
lahf
and
and
out
cmpsl
and
mov
inc
pop
lea
sub
testl
test
test
gs
inc
mov
bound
mov
dec
sbb
mov
rol
into
or
out
cmp
xchg
mov
out
into
fildl
jo
cwtl
into
in
fistps
dec
push
or
pop
movsl
inc
fidivrs
mov
nop
sub
packuswb
sub
xchg
imulb
xchg
jnp
xlat
push
sub
das
jns
fisttps
in
sub
js
xchg
insb
addr16
pop
addr16
jg
adc
das
es
and
fwait
cmpsl
fs
or
adc
mov
out
pop
daa
stc
push
std
in
add
xor
dec
int3
adc
sbb
fbstp
data16
mov
lret
popf
cmc
int
mov
pop
testb
sub
or
lcall
mov
cltd
cld
mov
out
cltd
inc
jne,pn
aaa
dec
mov
jnp
mov
daa
subb
fstp
outsl
aaa
mov
jno
rorb
mov
sbb
in
scas
pextrw
inc
mov
leave
xchg
adc
sub
and
jle
sub
xor
xor
mov
lret
bound
push
adc
xlat
add
lcall
sti
lods
sbb
into
popa
push
dec
mov
rclb
cwtl
or
pushf
xorb
sbb
outsb
rolb
faddl
test
inc
mov
dec
loope
xor
mov
cmpsb
int3
outsl
jle
or
cwtl
in
addb
add
inc
push
sub
wrmsr
sub
cwtl
stos
cmp
cmpsl
lods
cmovge
insb
mov
pop
xor
jb
cmp
adc
cld
enter
outsb
mov
fsubrl
sbb
or
sub
clc
idivl
idiv
cmp
dec
add
dec
cltd
movsl
aam
lahf
out
push
push
push
les
call
out
mov
adc
inc
stos
test
or
inc
pop
inc
and
sub
xchg
inc
stos
sub
xchg
adc
add
cwtl
cmp
ss
inc
fnstsw
fldcw
mov
cwtl
cld
xor
jb,pt
cmpsl
jg
adc
sub
add
lret
fiaddl
push
dec
push
adc
inc
jbe
movsl
test
push
push
int
jge
lods
mov
and
push
xchg
sbb
nop
mov
pop
sarl
xor
xchg
xchg
shr
daa
out
mov
aaa
ds
pop
sbb
int3
inc
shlb
dec
jp
mov
sbb
sbb
movsl
jecxz
cmp
enter
sbb
hlt
gs
loope
push
aas
mov
jno
stc
and
dec
ret
rorl
push
sarl
mov
xchg
fwait
and
mov
filds
xor
sbb
pop
xlat
adc
sub
outsl
inc
sbb
sbbb
int
mov
add
jo
repz
rcr
fdivrp
test
sti
pop
fs
out
test
shlb
rolb
lea
lahf
lds
cmpsl
adc
cmp
mov
add
fisubrs
jo
sahf
icebp
xchg
imul
int
inc
adc
test
lcall
test
adc
icebp
xchg
jg
lock
xchg
clc
push
mov
popf
adc
inc
cmp
ljmp
pop
add
outsl
scas
xchg
push
rcll
mov
sub
mov
sbb
test
testb
dec
dec
or
ret
mov
ds
or
outsb
int3
xchg
adc
in
jl
sbb
fcmovu
mov
mov
loopne
cmp
les
jo
imul
push
in
fisubl
sbb
gs
cli
jecxz
mov
jae
scas
inc
fs
push
sbb
in
cld
xor
mov
das
aaa
dec
sbb
mov
sbb
ds
iret
add
push
mov
mov
sbb
and
dec
mov
cs
fdivp
jnp
mov
into
ficomps
xchg
fwait
and
das
mov
aad
push
mov
cmp
jnp
jle
fcom
clc
xchg
pop
sub
jmp
pushf
mov
xchg
mov
fs
lret
rcrl
mov
inc
sbbl
repz
mov
mov
aam
adc
es
imul
inc
repnz
jmp
test
cmc
mov
mov
filds
ret
push
test
fildl
test
and
jno
jecxz
cmpsl
sarb
rorb
and
mov
out
outsl
adc
cwtl
lahf
sub
xor
int3
int
sub
push
js
sub
mov
push
les
fwait
outsb
dec
lods
lea
cmp
dec
lret
fldt
outsb
and
xchg
cltd
clc
sbb
out
das
dec
fcoms
fnstcw
pop
inc
pop
push
or
test
push
fnstenv
imul
fdivl
jmp
stos
sub
out
sbb
and
lea
push
xchg
adc
aas
imul
lock
fidivl
xor
xchg
ret
mov
push
stos
flds
cmp
pop
aaa
outsb
sbb
mov
loope
or
mov
mov
out
fisttpll
and
mov
lret
xchg
pop
push
push
xor
xchg
xchg
popa
inc
cmc
gs
adc
jp
sbb
xor
add
dec
xor
repnz
push
cmp
mov
and
mov
in
rorl
gs
out
adc
mov
into
pop
stos
jg
loopne
pop
xor
fstps
pop
mov
inc
cmpsb
loopne
mov
push
push
xchg
nop
xchg
push
aas
sahf
adc
or
nop
out
incb
dec
fucomi
sub
aas
in
mov
lock
lret
dec
pop
leave
lods
mov
lds
les
xchg
or
inc
dec
xor
add
or
mov
dec
out
nop
pop
loopne
test
popa
sbb
mov
and
add
decb
cli
push
dec
rcrb
lahf
xor
sub
in
test
push
daa
sarb
rorb
lret
jge
mov
sbb
cld
in
sub
dec
divl
shufps
push
lods
mov
test
jb
fsubrs
lock
test
dec
inc
nop
pop
es
mov
ret
jne
xor
mov
iret
test
leave
fldcw
sbb
pop
std
movsl
cltd
adc
nop
mov
lahf
rcrb
cmp
std
lock
sbb
arpl
cltd
sbb
mov
dec
shlb
add
push
dec
inc
jle,pt
aam
int3
test
adc
add
cmpsl
inc
je
stos
enter
jmp
pop
sbb
cwtl
outsb
push
shlb
mov
rcrb
addb
fimull
cmp
ret
mov
out
stos
mov
idivb
push
aad
lock
lret
mov
out
loop
mov
fcomps
cmp
inc
or
mov
pop
lods
icebp
and
cmpsb
ds
mov
cmp
sub
rol
xchg
or
repz
push
mov
mov
lods
cmp
cld
xor
add
enter
mov
inc
scas
fadd
addr16
icebp
aam
push
or
xchg
mov
xchg
mov
mov
mov
and
jae
push
adc
ss
jp
jno
add
notl
scas
pushf
push
jo
pmulhw
xor
mov
adc
add
mov
repnz
mov
adc
sbb
adc
adc
cmp
enter
sbb
je
scas
mov
jo
inc
inc
sub
imul
jnp
pop
cmpb
mov
ret
mov
sbb
cmp
pop
lock
jo
leave
movsl
test
inc
les
shrb
int
in
pop
mov
rcrl
push
popf
bswap
mov
adcb
arpl
ret
jg
fcmovu
mov
sbb
jp
repnz
shll
ljmp
and
pop
push
addr16
mov
fs
pop
jne
pushf
xor
adc
jecxz
push
shlb
and
xchg
mov
mov
aad
cmpb
decb
daa
fisubrs
cmpsl
in
sti
cs
dec
jbe
repz
mov
and
pop
outsl
insl
or
js
cltd
mov
jmp
jbe
jns
fisttpl
pop
outsl
jmp
or
outsl
dec
mov
mov
lret
fwait
mov
dec
lcall
sbb
sub
sbb
mov
mov
rcrb
ss
pop
imul
ljmp
mov
movsl
ja
movsb
inc
dec
imul
ret
or
mov
hlt
lcall
mov
push
push
add
xlat
push
dec
push
lods
int
mov
test
add
ds
movsb
aaa
cli
int
ja
popa
fsubrs
repnz
and
sub
cmp
in
jbe
push
and
js,pt
test
jecxz
sub
repz
fldl
sahf
jb
imul
add
mov
addl
mov
jle
dec
sub
les
pop
push
sbbl
int3
cmpsb
push
cmp
cmc
mov
ror
add
dec
stos
push
enter
mov
hlt
filds
stos
xchg
in
xorl
inc
or
dec
adc
cmpsl
aad
xchg
jae
xchg
inc
jne
lret
cwtl
mov
push
ds
jbe
lahf
xor
gs
or
xor
jns
je
mov
dec
pushf
out
arpl
in
adc
sbbl
mov
jbe
jp
ljmp
xor
leave
out
xchg
int3
push
push
adc
sbb
lret
adc
mov
test
adc
outsb
add
pop
outsl
mov
sarb
inc
pop
sbbl
push
ret
cmp
aad
xchg
lods
movsb
and
movsl
cmp
adc
in
push
mov
xchg
int3
int
iret
jno
sbb
push
bound
mov
inc
xor
inc
add
sub
mov
mov
mov
push
fdivrs
popf
push
jmp
and
xor
lcall
jbe
add
test
aas
push
mov
dec
faddl
gs
addl
mov
cmp
leave
notl
clc
into
adc
pop
mov
xchg
imul
sbb
stos
push
xchg
bound
push
mov
adc
mov
insl
xor
fldl
inc
mov
jp
xchg
je
in
and
push
mov
jb
outsb
ret
inc
jns
mov
lea
jne
hlt
add
dec
shll
mov
or
add
jno
rclb
lret
inc
adc
or
xlat
cld
shrl
dec
cmp
ja
lahf
daa
ficompl
xchg
or
or
jle
add
outsl
push
dec
mov
imul
mov
in
mov
push
push
imul
jmp
jmp
addr16
pop
fmull
mov
popf
imul
jnp
xchg
cmp
push
repnz
or
jle
daa
jnp
stc
dec
push
sub
lds
or
pop
xchg
std
cmpl
dec
pop
fdivs
lcall
iret
insb
pop
push
subl
dec
or
jb
push
xchg
data16
lcall
insb
or
das
cmp
adcb
pushl
mov
lret
lods
mov
je,pn
mov
cmc
mov
mov
data16
out
sbbl
sbb
mov
iret
in
addl
fdivp
orl
pop
filds
push
cltd
shrb
or
or
xchg
ficoms
scas
mov
push
mov
dec
pusha
mov
dec
push
fidivl
enter
sub
lock
or
sti
aad
hlt
sub
xor
and
sub
nop
das
cld
xor
fdivrp
in
rcll
jbe
adc
cwtl
inc
cmp
imul
and
arpl
sub
adc
movsl
jl
out
lods
xchg
adc
push
outsb
mov
push
mov
into
add
or
rorb
call
repnz
pop
adc
or
pop
aaa
pop
ja
sub
jge
jo
pop
in
aaa
inc
ret
jecxz
nop
scas
rorl
pop
stos
add
movsb
mov
dec
repz
lahf
fsub
push
loop
stos
pop
insb
or
xlat
out
mov
mov
dec
sub
xor
fs
out
loopne
jne
les
lock
ds
add
imul
fnstsw
jnp
jo
movsl
cltd
inc
jmp
sbb
rclb
push
adc
dec
sbb
mov
sub
push
dec
jmp
xchg
test
push
jne
inc
nop
cmc
in
adc
pop
pop
lahf
cmp
fbstp
pop
mov
ret
fs
push
lock
cmp
popa
out
push
mov
and
scas
adc
cmp
cmc
cmp
call
mov
add
fstps
add
pusha
sub
xor
cli
push
and
jne
lods
xchg
add
dec
mov
xchg
scas
jo
xchg
ja
pop
and
dec
push
lods
jb
pop
in
cmp
fisttpl
test
ficompl
or
repz
shll
pop
pop
push
cs
orb
adc
mov
sbb
jge
in
xorl
ja
movsl
loopne
in
inc
js
push
and
cld
jnp
dec
call
add
lret
mov
add
cmpsl
or
fs
stos
enter
daa
or
or
inc
jp
mov
dec
insb
out
shll
out
outsl
aas
sub
and
cmp
dec
push
movsl
mov
add
mov
subl
scas
cmp
sub
call
andb
lret
mov
shlb
fdivl
or
clc
jnp
sbb
and
in
pop
or
xchg
mov
cltd
dec
fs
cmpsb
jp
xchg
mov
pop
aas
mov
sbb
jp
cmp
daa
fadds
movsbl
dec
mov
cmp
sub
mov
jne
cltd
mov
int3
jae
insl
test
popa
cmc
out
in
mov
sbb
adc
lcall
scas
adc
mov
add
mov
mov
enter
push
aaa
lods
xchg
add
pop
pop
sbb
jg
out
push
cmp
sub
push
mov
xchg
out
aam
jb
negb
aad
pop
daa
jno
or
ret
inc
neg
mov
pop
mov
mov
sahf
int
lahf
lods
jnp
sbbl
adc
xor
jmp
ss
cmp
aam
cs
add
inc
pop
inc
dec
daa
xchg
cmp
sub
fwait
jmp
jae
add
cmp
inc
pushf
les
pop
xchg
or
lahf
xor
pop
test
ret
cmp
xchg
push
xchg
ret
fs
and
sbb
and
outsl
sbb
push
pop
add
rcl
mov
xor
scas
xchg
nop
insb
mov
fs
rcrb
jp
dec
imul
pop
sub
outsw
stos
sbb
repz
int3
aam
dec
pop
js
sub
xchg
mov
add
and
pop
call
jae
shr
cmp
adc
push
pop
sub
push
xchg
jmp
dec
or
inc
movsb
inc
pop
arpl
stos
outsb
push
sbb
and
bound
mov
mul
push
addr16
xchg
js
enter
pushf
mov
or
call
mov
xchg
scas
add
gs
push
jbe
sbb
mov
movsl
adc
mov
mov
fsubl
test
mov
dec
fcoms
insb
shrl
ss
cmpsb
cmp
pop
add
test
popf
in
sarb
jbe
fstps
adc
orl
sbb
pop
ja
and
in
mov
test
and
add
popa
and
out
adc
mov
push
das
gs
add
cmp
test
fidivrl
fsub
cld
scas
enter
fadd
push
ds
arpl
mov
jbe
jae
mov
mov
add
scas
xor
push
mov
in
ljmp
cld
dec
add
push
mov
push
push
sbbl
pop
out
outsl
push
xchg
test
inc
sub
pop
fldcw
sub
pop
jmp
lcall
mov
fdivrl
js
ret
repnz
shlb
div
ja
scas
movsl
jns
or
jne
xorb
stos
dec
hlt
inc
cli
js
mov
pop
cmp
mov
pop
insb
mov
mov
mov
xor
jno
movsl
sbb
cwtl
dec
pop
sbb
or
xchg
mov
iret
testb
mov
mov
fstpl
cmp
dec
ss
daa
mov
out
test
or
shll
push
xchg
test
fcoml
mov
mov
hlt
in
xor
sarb
dec
cmp
push
dec
ret
lret
shrb
pop
sbb
push
pop
jle
test
aad
neg
dec
pushf
mov
mov
push
sub
dec
push
movsb
sbbl
sahf
fstpl
push
and
jo
popf
inc
cmp
mov
ss
movsb
jle
mov
rcl
js
add
jmp
dec
push
xchg
and
in
push
or
jmp
out
cmp
mov
repz
xor
bound
xor
push
or
dec
mov
sbbb
aad
gs
insl
in
or
cmpsb
fst
aas
stos
cmp
xchg
mov
cs
mov
mov
mov
loop
xchg
pop
scas
out
cld
add
xor
data16
mov
or
mov
sti
and
stos
and
sahf
cmp
mov
pop
or
mov
or
xchg
jne
loopne
pop
push
ljmp
cmp
sbb
mov
add
fidivl
in
cwtl
popf
push
mov
stc
lds
mov
in
ror
mov
adc
cmc
dec
sti
pop
pop
xor
test
jg
ja
mov
aas
push
leave
pop
cmp
scas
ja
mov
fistpl
push
test
sahf
push
add
fdiv
cmp
call
jmp
mov
dec
sub
inc
jmp
and
mov
mov
mov
mov
mov
lds
mov
cltd
and
pushaw
jl
lock
inc
inc
movsb
cmp
testl
add
push
push
imul
and
int3
xchg
push
mov
subl
jo
jns
loopne
ljmp
les
rep
xor
adc
fsubs
adc
and
pop
pop
imul
push
insl
xlat
ficomps
lock
mov
add
fs
int3
jp
cmp
icebp
lods
sbb
xor
mov
jno
dec
das
inc
pushf
dec
or
movsl
scas
xchg
repnz
xchg
loopew
lods
mov
lods
add
hlt
cwtl
fwait
xchg
push
mov
jl
inc
adc
rcl
adc
cmpsl
cli
mov
xchg
xor
iret
push
jno,pn
aam
push
xchg
push
or
push
push
lea
rcr
or
jmp
addr16
xchg
cmp
fs
sub
das
cmp
or
pusha
pusha
xor
mov
pop
xchg
jnp
subl
fistl
jl
or
jb
aad
mov
xchg
dec
data16
xor
sub
push
push
inc
sub
mov
push
sub
ss
nop
enter
shlb
dec
aam
sub
sbb
add
gs
test
enter
loope
in
and
dec
test
or
jne
and
in
adc
xor
jno
enter
inc
gs
out
inc
push
mov
pop
push
and
ret
and
hlt
ja
or
xchg
cmpl
fnstsw
pop
scas
mov
cmpsb
pop
scas
jmp
sub
push
int
jle
mov
xor
clc
inc
repz
pusha
les
xchg
jecxz
mov
out
mov
repz
add
cwtl
dec
xchg
add
dec
mov
xchg
and
and
xorl
je
push
jb
push
or
xor
subb
iret
mov
jns
outsb
pop
sahf
dec
cmp
jne
cwtl
repz
xchg
or
inc
loopne
xchg
jns
jne
adc
jmp
stos
pop
insl
inc
xchg
scas
out
adc
mov
jb
cmp
aam
or
push
adcb
insl
push
mov
add
fdivrs
es
adc
dec
lret
lock
mov
xor
sub
inc
mov
lcall
jle
mov
jnp
sar
aad
sti
outsl
mov
sbb
popf
mov
xor
fildl
adc
xchg
ja
inc
outsb
jp
push
daa
and
pop
adc
push
pop
mov
or
add
repnz
pop
movsb
insb
call
mov
repz
push
dec
sub
negl
fdivrl
adc
xchg
aas
mov
stos
xchg
and
pop
push
mov
cmp
or
mov
and
fidivs
xchg
sub
or
mov
dec
fwait
aaa
cmpl
decb
es
jle
daa
and
push
in
in
inc
fsubrp
cli
stc
inc
lds
vcvtps2dq
imul
cmp
popa
andb
lock
mov
mov
pop
cld
pusha
xchg
dec
xchg
lods
or
pop
pusha
adc
movsb
xorl
mov
nop
inc
xchg
pop
nop
mov
sti
lods
loopne
add
loope
stc
mov
mov
pop
pop
adcb
pop
sub
cltd
jecxz
dec
and
movaps
out
daa
push
sbbl
into
outsb
mov
ffreep
jp
negl
outsb
dec
xchg
lcall
jge
movsb
shr
movsl
pop
sti
ficomps
lahf
repz
pop
pusha
pop
sub
inc
push
xchg
mov
pushf
sbb
adc
ss
jmp
xor
adc
inc
test
or
push
or
and
jo
icebp
jl
scas
and
push
xchg
lock
jge
stos
jp
lock
push
jg
movsl
call
leave
or
clc
cmc
jge
aas
inc
loop
cmpb
dec
ret
push
sbb
push
jb
add
xchg
enter
jo
mov
add
insl
shlb
mov
xchg
fists
jb
decl
addb
stos
mov
lcall
lahf
mov
in
xchg
push
std
push
sbb
and
sub
pop
dec
mov
ret
mov
cmp
and
rcrb
cmp
je
das
gs
aaa
out
push
lahf
out
fsub
or
sti
call
out
add
enter
jne
push
push
nop
out
aad
sub
cmp
pop
lahf
outsl
arpl
lds
or
ret
cmc
jbe
mov
cmp
pop
or
push
jg
mov
in
or
pop
mov
fwait
push
rorl
push
loop
mov
rorb
aad
jmp
jmp
je
nop
xchg
pop
cld
mov
inc
or
mov
mov
aad
xchg
add
mov
lds
xlat
cs
popa
sub
dec
in
mov
pop
in
ror
dec
stos
mov
rcl
push
cmp
lcall
and
popa
cmp
mov
hlt
and
push
adc
xchg
jbe
testb
movsl
iret
scas
ret
out
cwtl
aas
rcrl
in
stos
jnp
sahf
mov
xchg
adc
mov
insl
test
fimuls
or
cmp
pushf
out
jg
insl
scas
xchg
repz
loop
insb
jb
mov
stos
in
fstpt
xchg
or
loopne
pushf
inc
dec
xchg
sti
lock
int
and
mov
orb
jp
movsl
xor
addr16
push
adc
jb
out
or
and
outsl
push
jbe
aas
xorl
push
test
adc
rcrl
adc
cwtl
adc
or
mov
pushl
cli
xchg
loop
lds
enter
ficomps
pop
divb
inc
dec
cmpsl
jb
lods
sbb
aad
jbe
imul
push
outsb
lahf
mov
out
inc
sbb
shll
push
pop
fcomps
rclb
lods
sub
inc
lahf
xchg
inc
add
pop
pop
mov
pop
mov
sbb
out
cld
xchg
jle
in
cltd
adc
pop
inc
or
mov
cltd
leave
fldl
fistps
pop
push
mov
aad
lods
outsl
fisttpll
sub
inc
mov
movsl
inc
pop
pop
inc
test
mov
adc
lock
dec
cmp
outsb
push
shll
xor
repnz
mov
rorb
popa
jmp
outsb
xchg
loope,pt
lahf
pop
fwait
pop
xchg
push
cwtl
fimull
outsl
int3
mov
or
dec
cld
lods
dec
push
ja
pop
xlat
xchg
jle
sbb
mov
ret
mov
lahf
push
testl
lock
xchg
je
xchg
cltd
inc
out
hlt
xor
in
sbb
pop
pop
jecxz
pop
push
push
in
sbb
daa
arpl
pusha
or
subl
push
push
scas
scas
push
aaa
dec
adc
xchg
pop
mov
adc
test
aam
sbb
xorl
mov
xchg
sub
cld
jbe
jmp
in
sub
sahf
and
outsl
or
inc
invd
dec
cmpb
sub
add
cmpsl
push
push
push
sbb
xchg
add
pop
mov
lods
inc
dec
fstpl
nop
sbbl
inc
inc
lods
adc
push
add
ja
repnz
popa
adc
mov
xchg
in
push
pop
sub
add
mov
mov
dec
cmpsb
inc
cmp
cmp
popa
loope
mov
cmp
adc
push
bound
mov
nop
xor
xor
cwtl
hlt
mov
add
sub
je
imul
sub
dec
arpl
inc
nop
jae
cmpsb
pop
jecxz
xor
aam
leave
test
xchg
dec
movsl
and
repnz
clc
xchg
xchg
cli
sarb
add
sub
mov
cmp
pop
cltd
push
or
aad
mov
push
cmc
out
add
cmc
jecxz
jp
imull
mov
mov
push
daa
xor
ret
jno
into
aam
sub
aad
and
call
pop
pop
mov
lods
mov
mov
mov
or
push
fildll
sbb
std
fsubl
fdivrl
loope
out
lods
sub
ffreep
ja
mov
cmc
inc
push
sbb
pop
notb
sbb
mov
pop
sbb
aam
bound
mov
cltd
xchg
xor
inc
pop
xor
mov
mov
daa
bound
int3
cmp
adc
push
orb
mov
sbb
or
inc
inc
movups
xchg
add
mov
fcomi
int3
fldcw
inc
jno
dec
stos
jb
pop
lods
add
ss
mov
cmp
push
jns
cmp
sub
shll
or
les
clc
inc
and
rorl
jl,pt
das
lret
mov
xor
stos
test
repnz
pushf
mov
out
movsb
cmp
cmpl
aam
push
add
xchg
adc
ljmp
cltd
mov
stos
dec
push
arpl
mov
outsl
into
fcmovne
pop
in
movsl
lods
inc
inc
fadds
dec
pop
gs
jl
push
pop
cmp
stos
or
cmpb
fld
push
jp
jns
icebp
in
and
outsb
sub
in
in
jns
sbb
test
dec
sbb
dec
xor
adc
dec
add
push
pop
push
or
xor
pop
dec
orl
les
mov
mov
stc
andl
adc
mov
and
mov
scas
loope
jno
adc
pop
out
test
lods
addl
add
scas
xchg
cmp
lds
xor
cmp
in
push
xchg
push
or
mov
mov
mov
add
fwait
push
pop
mov
outsl
sub
dec
aaa
xor
aam
sbb
add
scas
and
inc
pusha
idiv
daa
jl
lea
push
lcall
lcall
repnz
or
cmp
fstpl
stos
jle
rcrl
cs
jle
or
test
mov
mov
mov
xchg
or
push
or
imul
outsl
fldenv
sbb
inc
into
sub
sbb
idivb
add
jl
inc
cld
push
mov
std
sub
push
add
popa
in
push
fcmovb
or
imulb
scas
loopne
and
cli
test
movsl
out
and
push
shrl
outsl
cmp
adc
pushf
add
cmc
daa
mov
out
xchg
imul
pop
popa
fnsave
popf
xchg
outsb
cmpb
xchg
mov
dec
mov
out
push
add
xchg
mov
in
dec
xor
mov
dec
js
push
shlb
punpcklbw
orl
jl
pop
push
fbstp
sbb
and
push
push
aaa
pop
lock
fidivrs
aam
pop
stos
repz
add
int
rep
inc
addr16
xchg
adc
xor
xchg
lds
jecxz
push
mov
xor
sbb
pusha
insb
jmp
sub
fcmovnb
push
nop
mov
aaa
jne
sbb
and
push
cmp
ret
inc
roll
push
lods
movsb
xor
jle
push
jecxz
negl
sub
pop
cwtl
sub
mov
xor
ja
stc
inc
das
push
and
hlt
add
pop
and
bound
lock
pop
lcall
fs
lods
mov
push
cmp
lcall
rclb
mov
shlb
pop
fld
fildll
hlt
ja
mov
push
mov
jbe
cmp
cmpsl
mov
mov
mov
cmpsb
iret
inc
outsb
mov
daa
adc
xor
movsb
mov
outsl
cld
xor
push
iret
lret
push
push
fwait
dec
jp
cli
fcmove
ret
addl
addr16
aam
or
rcr
fadds
mov
dec
cmp
leave
pop
adc
mov
hlt
cmp
fcoms
mov
divl
insl
movsb
xchg
sub
xchg
je
aam
add
push
add
dec
mov
and
push
iret
stos
rcl
fwait
es
adc
pusha
xor
jbe
loope
xor
into
push
jmp
lcall
and
push
adcl
lods
pop
in
pusha
scas
mov
and
or
ret
push
inc
xchg
and
popa
notb
xchg
leave
sub
adc
pop
fnstenv
mov
movsb
push
shll
cmpsb
mov
outsl
mov
jmp
or
ret
fdivs
cmpsb
xor
sbb
and
push
inc
data16
scas
mov
pusha
fsubrp
inc
das
dec
inc
or
and
scas
inc
pop
jo
adc
fisubrs
aam
fs
aad
jle
inc
shlb
pop
pop
add
test
jbe
mov
loope
cli
dec
mov
inc
jno
xchg
mov
push
out
cmp
add
mov
lcall
cmp
pop
cmp
aas
cmp
hlt
or
and
cld
mov
sub
pop
test
loop
mov
mov
imul
jg
inc
cmp
push
test
jecxz
inc
out
dec
xchg
cmpsl
or
add
dec
pop
cmp
cmpsb
addb
cmp
sub
push
ja
mov
push
push
int3
pop
push
or
movsl
xchg
int3
inc
sub
xchg
out
pop
repnz
or
cmpb
stos
xorl
jbe
and
or
jnp
hlt
cmc
xor
push
popf
mov
xchg
add
dec
xor
sub
or
push
test
push
xchg
into
sahf
call
daa
aam
fs
out
mov
push
cltd
hlt
push
sub
dec
sbb
inc
int
out
pop
dec
pop
loop
sahf
pusha
adc
movsb
and
dec
push
lea
out
xlat
popa
mov
or
fisubl
add
callw
lea
icebp
test
and
test
stos
ret
sbb
mov
or
jge
lods
loopne
jne
ret
adc
jecxz
decb
ret
mov
outsb
cld
imul
les
iret
ret
fsubrl
cmpsb
les
xchg
xchg
pop
int3
ficompl
or
sbb
shrb
fs
adc
push
fists
sbb
pop
out
and
adc
and
test
mov
xor
test
push
push
ljmp
stc
mov
data16
sub
rsm
push
test
shl
stos
mov
adc
add
pusha
lods
cld
mov
pushf
xchg
jmp
scas
mov
adc
rolb
and
jnp
pop
add
addl
mov
lcall
lock
into
cmpsl
push
sub
xchg
mov
addr16
in
inc
in
fidivs
negb
shll
arpl
clc
aad
roll
sbb
push
cmp
pop
sub
fisubl
das
and
jg
fisubrl
pusha
lahf
pop
std
inc
pop
cmpsb
shll
jle
mov
xchg
xchg
shl
sub
mov
mov
mov
pop
insl
inc
fsts
inc
sbb
mov
lods
sbb
aas
adc
cmpsl
add
xor
enter
stos
sbb
push
pop
xchg
vpackssdw
pop
pushf
add
xor
xor
adc
js
fcmovnb
sbb
mov
jecxz
ds
push
in
inc
fisubrs
cmp
scas
ljmp
sbb
and
mov
fistps
cmp
pop
ret
shll
cmpsl
fwait
pop
addr16
xchg
cltd
lret
mov
mov
jbe
es
test
popf
testb
add
inc
mov
push
mov
frstor
inc
out
add
mov
mov
or
or
fs
xlat
ja
jno
call
nop
pop
lea
fstpt
fimuls
or
popa
lods
stos
mov
cli
xchg
pop
es
fsubrl
dec
lock
ss
fwait
ds
pusha
mov
or
lods
mov
sbb
xor
sbb
lds
or
adc
xchg
xchg
jno
adc
push
inc
inc
push
xor
stos
push
sub
iret
fidivl
icebp
sbb
cltd
jmp
movsl
sub
jno
outsb
push
inc
sbb
push
out
xor
cld
test
xchg
jne
cmp
adc
pop
andl
mov
rclb
in
ss
and
aad
add
notb
imul
pop
dec
scas
mov
and
call
xor
out
addr16
fcoms
xor
enter
add
outsl
cli
or
sbb
rcrb
xchg
push
sbb
lret
and
inc
in
lods
sub
push
popa
mov
push
in
lods
fldcw
es
aas
jmp
je
arpl
jae
or
inc
imul
adc
fidivrs
dec
dec
mov
jg
sbb
pop
lock
jle
dec
data16
cli
je
leave
pop
sub
jne
lds
pusha
imul
bound
xorl
mov
inc
add
ret
cld
or
xchg
mov
and
outsl
mov
or
jle
cmp
in
cmp
pop
add
arpl
dec
mov
cli
dec
cwtl
fmull
xchg
test
enter
lods
mov
dec
jnp
push
sbb
dec
jle
fisubs
pop
push
mov
sbbb
inc
add
push
in
test
adc
daa
xchg
mov
fs
dec
insl
mov
pop
push
out
cli
sbb
sub
mov
inc
jmp
push
push
push
jg
mov
and
push
cmp
imul
insb
push
cld
fsubp
mov
jbe
stos
in
addb
shl
inc
add
ss
mov
test
call
add
cli
fs
pop
sbbb
jo
cmc
divb
push
loope
dec
xlat
mov
push
sub
xchg
pop
ds
leave
push
shrb
xchg
jge
lcall
cltd
pop
pop
arpl
fistps
notl
je
inc
adc
icebp
dec
or
cli
call
add
mov
inc
mov
out
jno
inc
pop
xor
mov
jmp
std
dec
clc
ret
outsl
sub
sub
add
lea
popf
mov
xor
cli
mov
lods
inc
dec
mov
push
std
push
cmpsb
cmc
add
mov
rcrb
xor
pushf
js
and
arpl
xchg
in
inc
inc
lahf
inc
aaa
dec
mov
addr16
decl
test
cmp
adc
lret
in
mov
inc
nop
inc
jmp
in
mov
arpl
nop
loopne
mov
adc
jae
xchg
outsb
xor
pop
xor
aam
xchg
ja
scas
decb
jg
stc
cs
sub
push
sub
adc
cmpb
mov
adc
xchg
stos
out
in
fcom
aas
mov
dec
dec
push
or
popl
out
jnp
jne
les
push
xchg
pop
int3
sbb
mov
jp
aad
push
and
dec
adc
sbb
sub
test
fs
inc
add
fistps
int
mov
daa
flds
sub
add
popa
or
pop
push
inc
js
in
es
sarl
mov
sub
aad
xchg
adc
daa
iretw
xchg
xchg
lahf
xchg
stos
jne
mov
scas
fimuls
loope
data16
lahf
cmpsl
add
adc
aad
stos
call
jp
mov
push
nop
jno
cwtl
iret
dec
sarb
mov
push
fmul
pop
lret
jl
xchg
mov
into
insb
mov
push
xchg
inc
mov
imul
les
push
push
mov
cmp
into
fmul
xor
jp
rclb
cmp
inc
and
add
cwtl
out
das
in
in
xchg
pop
scas
outsl
adc
movsl
add
jb
push
fdivrl
adcl
scas
or
dec
scas
pop
xor
and
in
ljmp
dec
pop
inc
repz
mov
xor
fsubrs
int3
add
push
stos
jp
dec
inc
xor
sub
adc
sbb
or
xchg
stos
push
dec
neg
jecxz
sub
sti
adc
stc
jge
mov
in
or
fwait
out
rcr
or
xor
sub
pusha
jl
sub
push
gs
gs
ja
add
out
les
call
jle
lods
jmp
pop
push
add
in
jb
adc
or
hlt
hlt
sbb
aaa
inc
fwait
mov
shrb
mov
xchg
xchg
les
jmp
jae
es
mov
js
lahf
and
ss
popf
xchg
lcall
mov
mov
mov
pop
cltd
mov
sbb
mov
lock
addr16
dec
sbb
movsl
inc
jae
repnz
stos
dec
scas
addr16
rep
in
insb
cmp
jp,pt
xchg
jne
out
xchg
rcrb
fidivl
sbb
sbb
stos
xor
lock
push
and
js
sub
or
add
dec
adc
in
hlt
jl
cmp
mov
dec
adc
dec
je
dec
xor
lea
push
mov
mov
mov
repnz
movsl
cmp
aas
sbb
pop
inc
fwait
lret
stos
pusha
hlt
pop
pop
pop
jg
xchg
hlt
mov
pop
jb
or
data16
pop
sbb
ja
jnp
mov
cli
ret
mov
jmp
leave
dec
jno
lea
lahf
fcmovu
xrelease
mov
jmp
fwait
and
xor
inc
cmpl
jg
in
out
or
push
fdivrp
andl
lcall
es
xor
pop
incl
out
push
add
movsb
adc
dec
mov
lahf
or
and
push
arpl
xor
aad
mul
mov
mov
pop
je
lods
mov
push
jno
push
pusha
imull
hlt
sahf
lea
inc
adc
mov
sub
sbb
cmp
or
aaa
inc
aaa
push
scas
lret
mov
ja
mov
popf
cmp
push
inc
leave
sub
pop
inc
inc
repz
idivl
inc
adc
and
loopne
or
push
push
shll
lret
out
mov
add
mov
jl
test
fistps
leave
pop
add
mov
dec
mov
out
daa
adc
mov
inc
cmp
jo
idivb
and
adc
rcrb
lds
xor
xchg
lret
divb
or
or
jmp
inc
dec
or
ds
adc
cmpsb
xor
inc
mov
pop
pop
sub
add
shlb
xchg
mov
lds
ljmp
in
std
sbb
cmpl
sub
inc
popa
pop
cmpsl
add
cmp
push
iret
sbb
mov
in
inc
dec
cmc
lret
cmp
mov
sahf
push
imul
xchg
mov
hlt
pop
push
les
arpl
sub
jl
pushf
pop
mov
out
pop
xchg
mov
jle
sahf
and
xchg
and
jne
jg
insl
bound
xlat
mov
pop
add
jo
cmp
pop
jmp
es
jp
fildl
mov
sbb
dec
adc
pop
mov
mov
pop
scas
scas
lods
lea
sub
stos
inc
jnp
jae
adc
lcall
mov
stc
test
jbe
cmp
addr16
fbstp
mov
fists
sub
les
cld
inc
push
insl
mov
in
or
cld
or
mov
jbe
cmpsb
add
xor
js
and
movb
xchg
fcmovne
and
and
frstor
jp
jb
cmp
mov
int3
shr
adc
and
das
jno
add
jo
pop
pop
roll
mov
mov
sub
push
sahf
pop
addr16
int3
or
jl
push
add
test
xchg
sbbb
jnp
sbbb
enter
pop
cmp
xor
rcrb
adc
movsb
pushf
aaa
lods
je
and
dec
cltd
adc
out
push
cli
push
xchg
xchg
lcall
or
cmp
or
sbb
js
lods
shl
adcl
stc
imull
mov
shrl
fnstcw
jo
stos
int
mov
xor
lods
sbb
jp
xchg
outsb
fldl
sbb
dec
mov
insb
push
mov
fwait
add
and
sti
outsl
imul
sbb
loopne
add
push
insb
mov
insb
insb
xor
sahf
fs
or
cmp
sub
iret
xchg
dec
mov
sbb
inc
add
rolb
aas
test
adc
mov
sbb
and
fs
jno
cmpb
push
xor
out
fsubr
xor
cmp
mov
and
sbb
mov
push
mov
xor
cli
mov
imul
daa
xchg
enter
or
shll
push
mov
gs
xchg
aad
push
xchg
dec
test
xor
sbb
jp
or
mov
jl
add
jnp
xchg
inc
mov
or
scas
push
aas
mov
sbb
aaa
test
xor
mov
stos
pusha
in
xchg
test
add
in
cmc
inc
mov
cs
xchg
jns
xchg
mov
data16
and
push
hlt
iret
add
jge
inc
pop
outsb
xlat
loop
stos
je
or
fistl
cmp
dec
sti
xchg
cli
mov
add
rorl
ja
mov
inc
lret
test
and
sahf
mov
add
mov
cmp
mov
ja
imul
xor
sbb
push
cmp
push
call
jle
aam
adc
aaa
mov
or
mov
stos
rorb
mov
mov
and
rcrb
pusha
cmp
jnp
clc
jmp
loop
mov
jmp
das
xor
lods
lods
std
jg
insl
push
psubq
jmp
xchg
arpl
mov
cmp
ja
cmp
test
xor
cmpsl
push
fs
cmpsl
and
mov
push
incl
fdivl
mov
ljmp
mov
cmp
stos
inc
lods
icebp
dec
add
loope
mov
rcrb
popa
sub
push
cmpsb
jl
scas
inc
mov
ret
dec
scas
xor
push
pusha
decl
and
adc
std
cwtl
repz
lret
clc
mov
movsl
cmpl
xchg
jbe
gs
xchg
cmpsb
imull
pop
aam
int3
xchg
mov
int3
sub
dec
inc
cmp
ss
lds
pop
mov
cmp
sub
jne
cwtl
lock
push
sbbb
sbb
loope
rorb
and
rcr
lret
push
fnsave
repnz
jmp
sbb
and
push
shrl
dec
mov
in
jl
nop
leave
and
cmp
pushl
inc
out
mov
jl
jg
add
loope
inc
popf
adc
sbb
rcll
pusha
imul
jp
fsubrl
cmp
insb
popf
lret
dec
pop
movsb
ret
loope
push
mov
imul
arpl
jg
test
xorl
jae
mov
stos
pushf
stos
xor
aas
dec
and
sub
cld
mov
push
sbb
rorl
test
lcall
sbb
movsb
imul
outsb
mov
xchg
sbb
mov
inc
test
push
push
fisubrl
call
xorl
adcl
mov
hlt
mov
cmpsl
add
jae
pop
push
cltd
inc
insl
or
sti
aad
or
scas
add
outsl
dec
testl
dec
cmpsb
fld
je
inc
push
sar
aad
dec
icebp
ja
pop
jnp
icebp
jns
pusha
hlt
gs
push
pop
test
fsub
mov
sbb
shl
add
sub
jp
ret
scas
mov
pop
mov
xor
lret
mov
cmp
ss
jae
jecxz
and
or
out
pushf
xor
lret
push
jbe
or
xor
shl
xchg
repz
inc
sbb
insl
aad
pop
cld
in
test
repz
cmpsl
bound
fnsave
xor
dec
mov
stc
sbb
mov
and
xorl
push
iret
out
cmp
sub
xlat
bound
loope
inc
cmpb
jmp
lcall
xchg
mov
cwtl
fnsave
cltd
sbb
rol
sti
jne
mov
outsl
lcall
clc
hlt
pop
mov
mov
lods
stos
sub
mov
stc
ret
push
in
into
and
dec
dec
pop
push
cld
scas
fnstenv
sbb
and
or
adcl
and
mov
fwait
mov
int3
xchg
push
mov
and
dec
sbb
ljmp
inc
xchg
rcll
sti
push
jne
inc
leave
cmpsb
test
in
roll
jmp
mov
jecxz
mov
ret
add
push
dec
adc
mov
cltd
jbe
sbb
pop
int3
xor
sub
cwtl
jecxz
mov
jbe
mov
pop
push
aam
dec
ds
je
xor
shlb
ret
mov
pop
cltd
daa
jo
mov
xor
loope
cmp
f2xm1
fisubrs
xor
push
aas
sub
mov
repz
push
std
mov
push
imul
dec
jg
ret
or
lahf
ds
cmp
xchg
xchg
and
mov
int3
lods
les
push
jge
sub
les
imul
cltd
dec
or
arpl
pop
mov
cmp
or
outsb
subb
lds
pop
mov
cmpsb
pop
push
sbb
cmc
jae
dec
cmp
adc
test
lahf
iret
cmp
ficompl
mov
outsl
or
mov
mov
outsb
sti
shll
and
mov
mov
sbb
enter
mov
mov
divl
mov
sbb
popf
pop
sbb
jb
sub
mov
and
cmp
mov
movsl
adc
insl
ret
cld
icebp
cmp
and
or
mov
in
jle
aaa
add
iret
pushf
mov
jne
out
cli
sub
shlb
xchg
sbb
sahf
sub
das
test
sbb
xchg
pop
std
mov
ret
adc
loope
sub
push
test
fisttpll
daa
fildll
addr16
cltd
inc
mov
loope
gs
shll
sub
out
push
sbb
insb
mov
cmp
sub
xor
sub
decb
repnz
mov
dec
xchg
bound
xor
pop
aad
gs
jmp
int
jp
xchg
xor
push
cmpsl
jnp
rcl
aaa
fwait
js
shl
int3
xchg
adc
xor
imul
in
pusha
inc
loopne
stc
inc
adc
mov
int3
xchg
mov
adc
mov
adc
or
mov
push
fdivrl
in
out
pushf
mov
pusha
push
adc
dec
sub
loopne
xlat
push
enter
jns
imul
repz
push
int
in
cli
add
sub
pop
push
sahf
mov
or
fisubrs
out
push
dec
push
push
lds
out
cwtl
inc
filds
in
dec
daa
pop
loope,pn
fisttpl
mov
add
jne
sbb
mov
xlat
jl
pop
fbld
mov
fcmovu
inc
mov
and
sbb
repz
jae
in
push
dec
cmp
xor
cltd
and
lock
lock
cli
dec
sbb
xchg
cli
jbe
mov
adc
inc
add
jbe
sbb
inc
loope
xchg
or
mov
pop
out
ja,pt
add
int3
cmp
push
lret
adc
ss
pop
imul
out
add
out
pop
int3
ss
adc
ja
jg
or
sub
enter
loope
push
jl
xchg
ret
cmp
pop
roll
lods
dec
jne
insl
stc
mov
loopne
repz
sub
dec
push
aad
inc
mov
inc
mov
sub
loope
inc
and
mov
lahf
adc
cmpsb
and
ljmp
fidivrl
loop
rorb
mov
ljmp
ss
fcompl
push
aam
test
cmpsl
or
andb
jge
sarl
jno
and
or
cmp
mov
adc
xor
sti
jp
in
mov
mov
jo
rcll
lcall
inc
jmp
push
inc
stos
xchg
aaa
pop
mov
mov
mulb
mov
rcl
scas
jmp
pop
sub
adc
in
or
cmp
xlat
cli
pop
jmp
jae
xorb
out
or
rorb
or
push
cmpsb
bound
adc
or
push
xor
cmpsb
daa
push
ds
jns
lods
mov
push
mov
ficomps
les
shll
push
ficompl
jo
push
loope
insb
jle
mov
mov
out
add
jg,pt
push
aaa
inc
aam
in
mov
test
mov
sub
aaa
xchg
clc
ja
sbb
sub
adc
ja
enter
or
lds
push
in
push
push
insl
mov
test
lods
or
testb
dec
imul
pop
cmpsl
roll
sti
cmp
xchg
imul
popa
xor
push
pop
pop
pushf
shr
mov
testb
bound
cld
in
pop
sbb
loope
pop
sbb
data16
mov
icebp
mov
pop
jne
cmpsl
mov
verr
add
mov
andl
dec
sub
ds
inc
imul
stos
and
bnd
sub
aad
sbb
sbb
and
mov
arpl
filds
pop
fs
cmp
loop
inc
stc
add
imul
and
and
and
add
jmp
mov
jl
inc
outsb
fdivr
xchg
lea
sub
jle
adc
sub
xor
sbbb
inc
insl
adc
cmp
stos
mov
cmp
aam
cld
flds
and
mov
ss
adc
sbbl
int
dec
xor
test
das
jns
fdivrs
mov
es
xlat
or
xchg
cmp
jmp
mov
add
mov
call
pop
test
push
cld
jmp
dec
out
inc
mov
lods
sar
mov
sti
bnd
mov
iret
test
and
xor
jl
shl
jle
xchg
mov
dec
mov
into
lods
enter
lods
movsb
data16
add
lea
daa
sbb
pop
and
shrd
aad
rorl
jbe
push
pushf
adcb
inc
mov
mov
jo
xchg
adc
ljmp
rorl
push
xor
scas
mov
repnz
je
mov
notl
and
push
loope
out
pop
addr16
add
insb
push
clc
cmpsb
add
rorb
jb
icebp
inc
aad
lods
movsb
sub
fs
lret
sub
jno
xor
fists
lret
fistpll
xchg
mov
cwtl
nop
and
and
dec
jg
jb
mov
push
xlat
in
gs
and
outsl
clc
testb
xor
inc
ret
pop
fldt
not
xchg
aas
sbb
lahf
movsb
sub
stc
dec
cmp
xor
mov
xchg
jl
push
sbb
add
xlat
lock
std
cmpsl
into
popa
rorb
sbb
shrb
cmp
push
mov
in
cmp
stc
jo,pt
sahf
adc
lcall
push
das
les
sbb
adc
dec
xor
and
pop
push
pop
pop
mov
fsubrl
aas
push
negb
jecxz
cmp
out
push
sub
dec
js
jbe
lea
push
or
je
jbe
das
jnp
idiv
mov
add
sub
mov
pop
hlt
outsb
hlt
pop
jb
pop
mov
mov
and
pop
pop
pop
mov
jb
xchg
enter
dec
flds
cmp
mov
pop
shr
push
arpl
pop
repnz
mov
jne
pop
test
divb
mov
jo
jg
ret
inc
push
cmpsl
add
int
add
cmp
into
in
cmp
xchg
fnstenv
xchg
mov
pop
cwtl
mov
cmp
dec
int
cmp
leave
mov
lock
pop
mov
outsl
push
adc
sub
inc
popf
lret
scas
adc
xor
enter
loop
xchg
pop
sub
sbb
mov
ret
xchg
inc
push
xchg
xor
sti
test
ja
jbe
mov
les
push
lds
push
cltd
cmp
jbe
sub
sub
jl
pop
cltd
mull
mov
push
pop
inc
gs
enter
int
in
fs
add
bound
mov
in
push
or
lret
hlt
mov
std
scas
push
pushf
mov
les
lahf
outsl
js
pop
pop
mov
ss
sub
inc
out
add
test
add
xchg
sar
ja
dec
aad
daa
push
xchg
enter
cmp
test
in
call
leave
lret
push
fwait
int
xlat
div
sbb
fisttps
inc
out
cmp
and
lretw
jnp
lret
xchg
pushf
lcall
pushf
push
xchg
xor
loopne
roll
jle
cmp
xor
jb
adc
pop
aaa
dec
mov
jmp
mov
push
es
imul
sbb
leave
dec
xchg
xchg
cwtl
mov
mov
fs
sahf
popa
jp
xor
add
inc
adc
jnp
dec
imul
or
adc
xor
push
sahf
popf
sarl
jns
add
sub
cltd
mov
and
mov
push
in
mov
mov
lret
adc
daa
lcall
add
in
add
ss
dec
jl
sbb
xchg
loop
cltd
jg
xchg
mov
cs
call
dec
pop
andb
and
decl
fldl
aad
lds
jmp
sub
movsb
push
push
jle
and
inc
xchg
mov
adc
xchg
es
add
fucomip
in
lea
xor
movsb
les
xchg
movsb
lret
cltd
jb
leave
xchg
cld
jbe
and
cli
ret
jg
xor
jmp
and
jle
push
aam
push
scas
add
rcrb
repz
jl
xor
mov
cltd
sbb
pop
shll
fsincos
add
mov
shrb
xor
mov
push
inc
clc
mov
push
enter
mov
adc
xchg
in
xor
push
sti
out
mov
mov
ds
fld
pop
scas
xor
dec
mov
jmp
cmp
mov
cmp
cli
les
push
jl
test
push
mov
pop
lret
add
jnp
inc
xor
lods
dec
cmp
jns
adc
and
cmc
jno
andb
push
outsl
inc
mov
xorb
cmc
and
sbb
bound
or
into
push
mov
rorb
outsl
lret
xchg
sbb
mov
push
insb
das
scas
xchg
push
sbb
cli
into
or
push
pop
test
cmp
push
test
cmp
into
mov
nop
push
adc
notl
mov
pop
test
mov
hlt
inc
jmp
aad
pop
data16
jle
sub
sbb
fwait
push
lret
cli
fwait
repnz
push
cmpsb
mov
xlat
sbb
inc
cli
jecxz
cmp
aad
rcrl
popa
and
jmp
fisttpl
out
roll
mov
jle
sub
scas
and
fimuls
adc
ja
fadds
leave
icebp
scas
testl
xchg
aad
decb
cmp
pop
push
adcb
adc
xor
jle,pt
fsubr
push
rcrl
inc
mov
mov
js
jle
mov
popa
ja
or
lds
rolb
inc
jne
push
test
cltd
ja
fildll
push
push
jle
rcrl
xchg
add
das
mov
add
es
mov
movsl
ja
and
sbb
inc
rcrb
mov
pop
clc
lods
sub
mov
push
shl
imul
cmp
pop
xor
sbb
lods
xlat
popa
icebp
mov
in
rcrb
mov
pop
fcmovnbe
leave
loop
push
rcr
cmpb
push
xchg
push
jmp
mov
aaa
mov
fsubs
pusha
int
push
mov
inc
in
sub
inc
sub
jno
xor
iret
call
xchg
pop
add
mov
aaa
aaa
sub
mov
push
cltd
sbb
jb
cmp
adc
test
in
or
and
test
in
add
jbe
jl
mov
inc
adc
cmp
stc
cmp
ljmp
int3
insb
fimuls
jl
bound
xchg
test
jo
nopl
testl
add
xor
fwait
and
out
cmp
fiadds
xor
pop
pushf
cmpsb
fs
jbe
fldenv
sub
es
add
mov
call
inc
and
jo
addr16
inc
add
push
xchg
addr16
fidivl
push
push
fists
adc
clc
lcall
or
jecxz
or
clc
pop
jno
mov
sti
push
adc
pusha
jbe
dec
xchg
subl
sar
dec
xchg
adc
das
out
sbb
addr16
insl
jmp
stos
pop
or
and
pop
xlat
lds
rorb
jg
lods
cli
shr
pushf
and
hlt
xor
and
push
mov
pop
data16
insl
push
sub
lds
xor
addl
adc
mov
jg
dec
subb
jp
out
push
cmc
and
xchg
ror
fists
scas
jae
arpl
and
add
ret
cmp
sbb
loope
sub
cmp
dec
mov
cmp
sub
icebp
int3
sub
push
push
std
pop
lret
push
loopne
or
in
xor
scas
por
lods
loopne
lret
xchg
sub
cltd
mov
pop
cmp
jg
jbe
cmp
rclb
cmpsl
jae
movsb
adc
les
sarl
mov
lds
call
mov
pop
rcrl
cmp
lret
jb
xor
pop
push
jo
sub
push
mov
mov
sub
in
popf
cs
cs
rcrl
outsl
dec
js
push
adc
cmp
std
imul
mov
jno
sti
sub
sbb
or
ret
dec
stos
rolb
jbe
xlat
cli
push
loop
stos
cmpsb
dec
mov
pusha
enter
call
scas
mov
jbe
mov
and
xor
push
leave
mov
jp
sbb
jmp
subl
inc
int3
mov
insb
stos
lret
xchg
pop
stos
jecxz
cmp
mov
mov
lods
inc
push
aam
mov
dec
imul
sbb
daa
mov
mov
xlat
repz
pushf
add
test
int
stc
xor
lcall
rcll
jl
ficoml
add
in
popf
and
sbb
testl
cmpb
mov
xchg
push
aam
nop
popa
xor
push
test
roll
push
movsl
push
andb
sbb
mov
inc
loop
das
outsl
imul
loope
sbb
dec
xchg
add
test
ss
jnp
outsb
aas
push
into
cmp
push
sahf
cmpsl
xchg
nop
adc
hlt
test
iret
jmp
cmpb
fidivrl
xorb
jo
pushf
jmp
and
dec
gs
call
lods
test
popl
sub
cmp
inc
add
ljmp
aas
cmp
mov
xchg
shll
ljmp
adc
and
sbb
jnp
adcb
ss
rcrb
dec
jp
mov
call
iret
or
fstpl
inc
les
push
adc
test
test
pop
xor
loope
adc
xchg
repnz
enter
addr16
pop
cli
fdivrp
mov
xchg
dec
mov
lcall
push
loope
pop
push
pushf
inc
data16
xor
popa
xor
int
mov
jle
jno
sar
scas
push
inc
movsl
scas
cmp
xchg
inc
dec
std
pusha
xchg
das
fidivrs
push
or
test
clc
out
sub
sahf
iret
loop
push
push
push
jg
mov
out
fimuls
jne
dec
rorl
ss
add
in
lret
loope
sub
sub
pshufw
outsl
sti
enter
out
jnp
and
sahf
lock
add
mov
mov
aaa
lock
dec
mov
inc
push
in
jbe
jg
gs
mov
loopne
iret
push
add
mov
inc
xchg
fsubr
mov
ja
mov
imul
sub
imul
ss
icebp
outsl
adc
cmp
les
pop
out
add
fildll
insl
sbb
ret
addr16
mull
xor
sbb
xchg
or
loope
dec
iret
pushl
push
vpshufd
jp
adc
rcl
push
jp
inc
jae
lret
js
xor
dec
orb
test
in
mov
lret
ret
inc
pushf
push
inc
cs
push
loopne
in
cmp
call
int
dec
sbbb
dec
fisubl
push
cmp
orl
cld
in
gs
xchg
push
jnp
sub
push
das
inc
sar
iret
or
sarb
outsb
jns
xchg
jno
mov
push
lea
rorl
or
dec
or
and
rclb
dec
mov
hlt
lcall
jg
clc
or
xchg
mov
sub
pusha
lret
sbb
ja
cmp
std
int
or
xor
andl
pop
cmp
rclb
lds
add
bound
inc
flds
and
xchg
mov
adc
into
and
or
out
jnp
test
xor
mov
inc
dec
or
jle
dec
jbe
pop
popa
iret
add
lahf
sub
inc
loop
imul
ds
fstpl
and
xchg
sbb
std
hlt
pop
mov
add
cmpsb
outsl
jno
and
in
in
and
stos
mov
adc
shlb
ficoms
dec
pop
or
lret
xlat
pop
pop
js
mov
je
or
adc
lock
lret
fistpl
pop
xchg
pop
inc
inc
int3
leave
inc
push
addr16
or
jbe
adc
loope
jg
jno
push
push
jo
pop
rcrb
or
cmpsl
cmp
int3
sub
xchg
test
and
ja
cmp
cmpb
lcall
inc
push
into
loop
xchg
fmull
leave
add
lea
in
inc
das
or
hlt
std
adc
lods
cltd
xor
into
mov
sahf
lods
cmp
stos
imul
mov
mov
push
adc
out
arpl
dec
xchg
mov
stos
mov
pop
lahf
loopne
cld
push
cmp
mov
ja
pop
add
inc
pop
sarl
or
leave
push
mov
mov
xor
inc
mov
push
push
sub
movsb
cs
test
sub
js
stos
jmp
mov
sbbb
push
add
push
mov
sbb
lds
mov
leave
mov
and
mov
imul
and
lret
clc
test
pop
mull
test
fsubp
inc
xchg
xor
test
push
fisubs
insb
fcmovb
movsl
ret
and
movsb
stos
mov
in
add
lcall
add
sub
xlat
mov
clc
pop
roll
test
roll
iret
xchg
mov
lcall
inc
and
insl
xchg
mov
push
jp
cmp
pop
sub
add
lods
lods
pop
pop
mov
aaa
idivl
cmp
jl
insb
rcll
sbb
das
fdivs
fldcw
mov
cmp
pop
out
mov
xor
xchg
std
cltd
dec
aas
insl
shrl
cmpsl
adc
mov
ret
add
shrb
jbe
test
cmp
adc
icebp
movsl
push
icebp
jl
push
loop
xchg
repz
into
pusha
inc
inc
fisubrl
mov
lea
sub
test
xchg
aad
or
fucomip
dec
pop
ss
clc
add
mov
xchg
cmc
cltd
insl
leave
mov
xchg
pop
sbb
sti
pushf
jns
pop
mov
cwtl
popf
outsl
sbb
xchg
inc
popa
lret
dec
push
mov
inc
jmp
cmpl
repz
pop
andb
pop
dec
mov
adc
adc
popf
cmp
loop
add
pop
mov
mov
xchg
mov
mov
pop
das
mov
sbb
aas
fndisi(8087
in
ljmp
mov
jbe
sti
mov
and
test
push
leave
pop
xor
sub
repnz
cmc
inc
enter
fdivs
xor
sub
push
pop
imul
movsl
push
mov
in
imulb
sbb
iret
or
adc
dec
mov
cmp
and
popa
mov
mov
jae
pop
imul
pop
pop
test
stc
lds
inc
adc
cmpsl
pop
shr
lea
sbb
fstps
pushf
mov
xor
jge
jb
inc
lret
jp
mov
pop
inc
mov
mov
lahf
and
shl
inc
shr
jae
add
xchg
adc
dec
mov
in
and
xchg
inc
mov
mov
lea
or
push
inc
ds
adc
aam
jb
daa
sbb
jne
sbb
aam
or
stc
or
xchg
mov
movsb
icebp
dec
cld
jle
subb
lods
xor
imul
push
mov
jle
icebp
aaa
push
mov
in
jmp
xor
cmpl
cmp
daa
add
add
movsl
xor
sbbl
fstpt
mov
cmc
adc
xchg
in
adc
add
cmpsl
jmp
test
int
or
inc
xor
sbb
ds
sub
xchg
or
scas
push
je
std
push
stos
xor
popf
dec
add
ficompl
and
xchg
sub
inc
out
mov
jae
cmp
pop
push
sub
ljmp
out
lahf
add
les
popf
inc
test
lret
movsl
cltd
cli
adc
cmp
into
jge
adc
enter
push
je
mov
stos
or
push
pop
push
push
lret
push
aas
push
jb
mov
fcomi
pop
pop
popa
mov
mov
push
cwtl
cmpsl
ja
scas
aam
lea
sub
xor
xor
sbb
dec
adc
out
sbb
push
mov
xlat
gs
pop
sarl
into
dec
inc
dec
mov
or
adc
jl
cmp
or
mov
loope
dec
or
imull
sbb
cmpsb
pop
cmp
js
jbe
jne
inc
xchg
movsl
xchg
lret
imul
push
xor
push
enter
aas
cmp
mov
push
fldcw
mov
imul
stos
mov
mov
lahf
stos
mov
aam
sbb
dec
xchg
push
mov
lds
hlt
je
xorb
dec
int3
movsl
ja
or
sahf
in
jno
test
bound
bound
mov
mov
inc
mov
xor
lods
adc
mov
ja
icebp
pop
mov
cmpsl
push
icebp
xlat
xchg
stc
mov
sti
pop
outsl
leave
push
jmp
mov
adc
adc
popf
xchg
fistps
inc
xchg
rorb
ror
xchg
stos
inc
cmp
add
jg
scas
mov
loope
test
mov
xor
mov
mov
in
pushf
stos
rcrl
test
xlat
mov
stos
mov
lea
jl
packsswb
xchg
mov
pop
lods
in
cwtl
push
cmp
in
bsf
jne,pt
mov
repnz
push
dec
dec
mov
out
jno
cmp
sbb
rol
repnz
pushf
loop
sbb
lods
xchg
lcall
es
cld
cmp
js
and
jb
pop
mov
cmc
jecxz
arpl
in
out
out
mov
mov
pop
sub
mov
pop
mov
push
mov
imul
pop
test
mov
jle
pop
push
rorb
test
lods
dec
enter
push
into
notl
cmc
rcrl
xor
push
xor
lahf
xchg
ss
negb
call
add
push
push
rcr
sahf
mov
outsb
nop
lods
imull
in
inc
scas
test
cmp
mov
test
mov
fwait
sti
movsl
jns
mov
jl
cmpb
xor
popa
mov
lea
sahf
jne
add
xchg
mov
aam
ja
std
inc
outsb
sub
out
rolb
inc
pop
sbb
mov
dec
repnz
cs
push
or
mov
int3
insb
or
mov
push
or
enter
fcmovne
inc
jmp
pop
daa
mov
sub
divb
pushf
into
mov
lahf
and
in
sub
push
lret
cli
lret
enter
add
mov
leave
mov
add
push
xlat
and
mov
movsb
mov
sarl
mov
jmp
jo
sub
arpl
imul
loopne
lods
mov
fadds
or
jb
in
pop
ja
add
adc
inc
push
test
adc
outsl
jno
jns
mov
ss
addb
loope
xchg
push
or
lret
mov
fnstcw
push
cli
mov
push
int
inc
xlat
cmpsl
cmp
mov
hlt
sub
cmp
pop
inc
jne
xlat
lds
or
cld
sbb
aad
inc
dec
xchg
sbb
es
scas
cmp
outsb
ret
cmc
sub
hlt
add
nop
adc
subb
jb
or
test
xchg
xchg
lea
addr16
dec
loope
cltd
out
jo
stc
push
aas
mov
leave
pusha
xchg
mov
xchg
std
daa
stos
mov
xor
imul
jg
xor
fadds
pop
call
add
push
inc
push
adc
inc
xchg
push
test
bound
arpl
int3
mov
sub
xchg
xor
mov
roll
sahf
dec
cmp
ficompl
inc
out
lret
push
and
adc
mov
inc
xor
xor
push
fwait
push
aam
mov
cld
ss
push
stos
dec
dec
inc
and
push
fistpll
mov
adc
repz
je
into
icebp
pop
test
push
test
imulb
movsl
out
iret
sbb
xor
mov
out
jl
cmp
cs
cmp
sub
lcall
test
inc
inc
pop
popa
mov
test
outsb
cmp
push
divb
cli
jae
or
cmp
inc
dec
fcomps
xlat
shll
int3
std
loopne
cmpsl
rcl
lods
aad
mov
adc
jns
or
movsl
adc
iret
lea
and
sti
push
call
cmp
shll
lods
movsl
imul
sbbl
ds
pushf
notb
jns
sub
jne
fdivr
xchg
int
mov
pop
pop
lcall
mov
test
lea
or
add
stos
jnp
and
push
mov
call
js
jmp
sti
pop
or
add
cltd
pop
mov
fbld
mov
sahf
nop
outsl
pop
pop
dec
push
shll
xchg
jmp
sub
and
push
sbb
pop
in
call
mov
lahf
mov
cmpsl
shl
mov
stos
pushf
mov
test
sar
shrl
mov
jne
mov
or
rcll
fwait
adc
cltd
cmp
inc
pop
sarl
das
lret
neg
jae
mov
mov
adc
xor
in
cmp
sbb
xchg
jg
movsb
sub
push
test
or
ja
pop
test
dec
mov
insl
testl
push
dec
jo
push
arpl
mov
add
ret
adc
mov
jae
nop
aad
sbb
loop
sbb
gs
mov
out
cmp
inc
mov
push
icebp
pop
stos
adc
pop
es
popa
sbb
ds
and
cmp
test
out
dec
adc
fwait
sti
mov
icebp
ret
stc
push
or
mov
dec
pop
loop
outsl
xchg
dec
shlb
ficomps
mov
xchg
stos
popa
xchg
dec
fnstsw
mov
popa
pop
stc
inc
dec
outsl
stos
out
and
cli
repnz
xor
sbb
incl
adc
insl
pop
dec
mov
scas
inc
in
lcall
mov
xor
xchg
das
push
ds
push
gs
lods
sub
cmc
mov
popf
mov
std
xchg
or
pop
mov
add
dec
mov
rcr
loope
dec
repnz
pop
mov
test
fsub
insl
jmp
stos
aaa
or
outsl
push
mov
xchg
adc
mov
ret
int
xchg
or
pop
sub
mov
fcmovnu
sahf
cmp
loope
cmpsb
loop
lret
sub
imul
stc
dec
mov
int3
sbbl
jno
subps
inc
dec
xchg
or
jns
pop
movsl
or
cmp
outsl
je
jo
repz
mov
test
xchg
aaa
mov
xor
fs
sbb
cmp
insl
addl
add
sahf
and
jecxz
dec
jae
popf
inc
fcompl
jp
push
stos
lds
and
dec
sub
mov
jae
sub
fisubrs
sub
cmp
and
pavgb
fwait
mov
fyl2xp1
sbb
cmpl
dec
popa
fisttpll
add
cli
mov
mov
pop
rorb
pop
lock
pop
push
aam
dec
pushf
cmp
adc
xor
in
iret
pop
sti
fists
adc
outsb
dec
stos
mov
mov
mov
mov
sbb
fldl
add
pop
pop
cmp
dec
mov
xchg
std
xchg
repz
ret
aaa
gs
cltd
pushf
outsb
xor
lahf
mov
cmpsl
pusha
les
int3
pusha
sarl
mov
inc
sbb
sub
js
pop
int
jnp
cmpsl
aam
mov
xor
je
and
jnp
subl
cwtl
test
pop
or
dec
xor
pop
andb
lea
adc
jno
mov
lahf
orl
cld
sub
test
add
mov
inc
mov
pusha
and
inc
into
cmc
jmp
xchg
pop
jb
je
mov
gs
mov
cmp
std
push
out
test
enter
sahf
mov
add
add
out
and
pop
pop
mov
mov
and
add
xor
push
and
insb
cmp
je
adc
push
push
xchg
mov
cmp
add
push
lret
scas
jbe
xchg
sbbl
jge
fbld
clc
push
cmc
jg
rcrb
add
pop
cmp
call
fiaddl
insb
cmp
aaa
xor
stos
fwait
lods
sahf
cli
add
or
adc
dec
mov
sbb
rcrl
ja
add
in
jle
xor
xor
cmp
mov
enter
and
faddl
and
jmp
out
test
orl
les
stc
xlat
jno
fstps
xchg
into
pusha
cltd
addl
sub
mov
adc
pop
sbb
test
sbb
mov
xor
aad
pop
add
fmull
jge
aas
icebp
mov
out
addb
ss
cmp
cmc
outsl
mov
or
jmp
xchg
iret
jg
std
shrl
cltd
cld
push
call
in
mov
mov
rcr
mov
sti
or
es
mov
pop
xchg
xchg
lret
push
mov
subl
icebp
sbb
ficomps
ds
les
cli
enter
nop
stc
cmpsb
xchg
and
ja
outsl
into
xchg
adc
sub
sbb
jno
bound
ficomps
add
push
out
call
in
aas
fildll
xchg
push
sub
ljmp
lds
mov
daa
leave
leave
test
cmp
jle
xchg
push
insl
push
mov
call
ja
mov
push
cld
mov
dec
cmc
sub
pop
adc
xchg
aad
arpl
jmp
add
imul
or
cmp
decl
rol
sub
shlb
push
xor
mov
ret
dec
and
push
jl
inc
pop
add
lret
push
dec
push
pop
int
call
gs
cld
jo
cld
push
daa
sysenter
xchg
rorb
enter
cwtl
mov
ja
cmpsl
cli
stc
mov
jge
btr
outsb
mov
vmwrite
divb
xor
lahf
or
or
clc
mov
popf
lock
or
mov
sbb
loop
push
inc
out
sbb
xchg
push
incl
cwtl
sarb
push
pop
bound
push
mov
daa
rclb
inc
ljmp
push
ss
jns
les
out
push
in
pop
cmp
imul
or
cmpsb
mov
cmp
xor
or
mov
jle
stc
mov
jl
fstpt
sub
rcrl
mov
iret
test
xchg
daa
popf
mov
iret
pop
sub
mov
dec
aaa
pop
sub
adc
test
decb
mov
js
repz
aam
jae
jne
sbb
cmpsl
mov
out
sti
or
jle
jl
ljmp
sar
shlb
dec
and
jecxz
cli
xor
push
movsl
popa
push
xchg
xor
mov
fistl
push
inc
and
jns
in
in
in
adc
rorl
mov
or
ljmp
sub
popf
xor
xchg
fs
inc
or
or
mov
sbb
dec
and
mov
inc
mov
xor
mov
aaa
arpl
xor
shrl
pop
addr16
mov
jp
adc
inc
cltd
lods
sub
pushf
lcall
cmpsb
cmp
repnz
mov
movsb
pop
pop
push
mov
lea
mov
sbb
loope
in
stos
and
mov
psrlq
popf
cli
xchg
mov
shll
mov
inc
aad
mov
sbb
stmxcsr
mov
cmpsb
lods
sub
mov
mov
imul
jb
push
fmull
lret
cmpsb
je
ljmp
js
repz
lahf
mov
pop
jb
push
jle
andl
in
sbb
inc
pusha
in
jns
cli
jg
xlat
mov
sbb
pop
movsb
pusha
jo
mov
lahf
xor
testl
mov
pop
fcmovnb
inc
dec
in
jecxz
out
add
or
mov
frstor
xor
jle
sub
add
adc
xor
dec
popa
xchg
out
push
fildll
jl
cmp
repnz
idivb
push
roll
je
sbb
dec
out
xor
xchg
mov
lahf
push
push
out
mov
insb
mov
mov
daa
inc
pusha
xchg
mov
jg
xchg
sub
and
xchg
cld
inc
fistps
arpl
fwait
push
inc
cmp
ret
bound
imul
pop
insb
add
jle
into
and
dec
cmp
xor
sub
dec
cld
int3
sub
xor
cmp
xlat
sub
ret
out
jae
mov
cmp
popa
sbb
mov
arpl
fsubr
jge
jns
decb
jb
mov
pop
cmc
cld
sbb
std
fwait
das
bound
push
inc
mov
mov
cmp
pop
lds
and
mov
xchg
xor
loope
and
sub
rclb
in
mov
adcb
xchg
xlat
mov
in
cmp
movsl
data16
repz
jne,pt
xchg
inc
loop
hlt
adc
dec
arpl
cmp
enter
ss
orl
jl
jb
cmp
or
pop
pop
call
cmp
xchg
xchg
ficompl
mov
xlat
xchg
fstpl
cwtl
in
cmp
jl
sbb
cli
push
jmp
mov
not
mov
mov
xchg
cltd
stc
lahf
les
mov
sub
dec
pop
mov
shrl
les
clc
or
leave
fdivl
xlat
add
jmp
clc
or
les
fwait
dec
push
out
std
mov
xor
out
lret
sub
leave
inc
lock
icebp
add
ror
push
adc
stc
or
adc
sbb
xor
sub
lods
sub
ret
sarl
lcall
cmpb
cmp
cld
xor
xchg
sti
add
sub
push
mov
sub
xchg
mov
jl
out
jecxz
mov
and
xbegin
imul
ret
cmc
push
lret
call
neg
in
or
lahf
adc
call
out
inc
inc
sbb
push
dec
inc
mov
xchg
xor
sbb
aaa
add
inc
ret
push
scas
pop
hlt
arpl
mov
enter
leave
movsb
mov
shll
aaa
sbb
mov
imul
imul
xchg
mov
xchg
mov
xor
mov
por
sbb
hlt
sub
cli
loop
xchg
stc
in
cmp
std
adc
lock
in
cwtl
ret
inc
jg
add
push
jns
jbe
leave
add
negb
pop
push
int
lods
xor
inc
xchg
dec
fdivs
prefetcht0
popf
push
test
fstpl
int
cmp
inc
popa
mov
dec
or
push
cmp
inc
or
js
xchg
pop
sub
jge
inc
add
xchg
out
jmp
ljmp
scas
mov
push
int3
xor
mov
std
dec
imul
mov
mov
inc
test
cltd
jb
mov
data16
outsb
cs
jp
out
subl
mov
xchg
test
xor
mov
pushf
aam
mov
int3
jne
dec
push
js
cmpsb
sub
imul
lds
loopne
adc
xchg
add
and
pusha
fdivrl
les
test
imul
outsl
jle
sub
mov
out
mov
aaa
inc
sub
push
xchg
aam
nop
cli
cwtl
mov
dec
inc
push
or
scas
sub
xor
out
push
or
fsubrs
sbb
inc
cmc
clc
orb
mov
jl
add
iret
xor
push
outsb
mov
fcmovne
add
jnp
jnp
ljmp
push
sahf
shl
test
cmp
jbe
int
rorl
inc
mov
das
das
loopne
pop
add
mov
cld
cs
das
or
mov
jl
mov
sahf
out
loop
dec
rcrl
inc
or
fsubrl
jle
xor
cmp
dec
xchg
les
pop
mov
insl
dec
ret
movsb
sub
popf
stos
pusha
sbb
xacquire
mov
mov
mov
jb
dec
jo
xchg
mov
xor
xchg
jg
xchg
xor
jl
scas
mov
jmp
ljmp
test
repnz
cmp
aad
sub
dec
inc
ret
or
sub
jle
lods
setae
push
out
insl
xor
int3
inc
std
dec
inc
ja
xor
sbbl
out
repnz
mov
mov
ret
in
and
repnz
sti
or
mov
cld
push
push
mov
popa
ljmp
fists
adc
cmpsb
loopne
insl
lahf
mov
int
jbe
aaa
pop
xchg
bound
ficompl
daa
xlat
fnstcw
fcmovnu
push
push
out
mov
mov
dec
ja
hlt
mov
pop
cmp
cmc
aam
out
movl
mov
pusha
mov
dec
js
adc
and
jnp
rorl
test
xchg
lock
push
cmp
or
scas
cli
cmp
mov
xchg
sub
mov
or
pop
mov
pop
or
clc
into
movsl
stos
pushl
xchg
frstor
inc
repnz
enter
int
es
jle
inc
jle
roll
lea
lds
stos
mov
mov
das
add
push
mov
into
jbe
sbb
popf
call
cmpsb
fcoms
ret
sub
xchg
out
into
aas
pop
mov
sub
in
sub
je
frstor
xor
xchg
into
lcall
outsl
or
arpl
sbb
nop
roll
lcall
sbb
shll
pushf
ret
jo
out
aad
lds
fmulp
and
dec
fnsave
cld
dec
iret
inc
fcmovu
ds
pop
jne
aad
in
add
lea
in
cltd
adc
rdpmc
js
mov
addr16
jae
push
aas
mov
sahf
and
daa
pop
push
sbb
sub
daa
xchg
push
stos
jae
sarb
popa
push
in
adc
cmovb
or
cltd
lea
sbb
cmpl
inc
jecxz
outsb
scas
loopne
or
lods
jmp
imul
loope
into
adc
cli
pusha
push
gs
mov
test
push
adc
cmpsl
xchg
fadds
jecxz
adc
jb
cld
imul
adc
pop
test
dec
pop
xchg
cmp
shll
sarl
repnz
mov
fldl
pop
mov
sahf
je
sub
mov
adc
pop
push
les
xor
cmp
imul
cmp
loop
adc
add
arpl
xchg
out
js
fisubs
pushf
leave
dec
js
les
shl
sbb
or
jb
insb
in
fcomi
lds
jmp
cmp
aam
mov
int3
add
stos
testb
mov
adc
pushf
test
mov
mov
inc
add
sbb
insl
inc
mov
fiadds
into
js
cmpsl
lret
mov
dec
addr16
mov
test
xor
js
aad
mov
outsb
lods
adc
stos
adc
jb
es
popa
adc
aas
dec
xchg
sti
das
adc
fxch
and
mov
cmc
sbb
xor
dec
mov
stos
sahf
gs
in
push
lret
lahf
sbb
push
in
dec
jns
iret
adc
psubusw
stos
dec
std
jbe
test
idivl
std
dec
push
aaa
fcmove
shlb
xrelease
mov
mov
jno
push
icebp
fcmovnb
push
mov
call
outsb
rolb
fcmovnbe
arpl
adc
cli
gs
push
bound
dec
pop
mov
lock
stos
lret
jns
mov
rcrb
mov
fdivp
mov
push
sbbl
aam
cmpsl
jmp
sub
mov
fnsave
mov
push
inc
mov
pop
lds
mov
addb
sub
insb
in
inc
ret
push
mov
mov
adc
mov
xor
sbb
enter
sbb
imul
sbb
shr
sbb
test
push
lods
clc
ret
mov
repz
cwtl
xchg
jl
bound
fidivrs
xor
test
mov
jnp
das
cmp
adcb
cmp
pop
mov
adc
aas
or
mov
pop
roll
mov
fcompl
lret
test
jbe
or
mov
push
sbb
into
mov
xor
mov
sbb
ret
nop
cmp
cmp
lods
add
pop
xor
cmp
mov
loopne
stos
push
mov
pop
push
divb
out
leave
add
fadds
aas
push
dec
or
data16
dec
outsl
mov
in
into
test
neg
in
out
dec
out
inc
or
lock
jecxz
sahf
mov
insl
stc
loopne
repnz
lods
xor
push
adc
int3
mov
mov
out
pop
cmpl
mov
add
mov
fxch
imul
lcall
dec
mov
jmp
jo
or
jecxz
mov
jg
adc
bound
idivl
inc
test
add
push
lret
mov
arpl
pushf
inc
repz
ss
add
jp
imul
repnz
and
incl
dec
fidivl
mov
outsl
or
popf
cmp
sbb
mov
bound
or
jge
push
add
hlt
dec
push
std
add
daa
cmp
outsl
xor
movsb
out
popa
iret
stc
sbb
dec
ds
push
iret
mov
jbe
icebp
mov
popa
xchg
stos
lcall
cltd
jp
ret
or
pop
pushf
mov
out
jmp
enter
mov
lea
movsb
leave
ficomps
cmp
sahf
test
pusha
jg
adc
out
lcall
cmp
std
sbb
sub
aaa
cmp
mov
out
mull
push
dec
scas
imul
xor
push
out
hlt
mov
scas
push
pop
cmp
xorl
adc
std
mov
mov
js
cmp
nop
or
add
lock
pop
outsb
ss
sub
lock
aaa
xlat
je
movsl
sub
or
sbb
mov
iretw
sti
mov
sbb
cmp
mov
scas
lret
out
shrl
or
out
ror
xchg
xor
out
mov
xor
add
in
xor
add
xchg
fsubp
pop
xchg
test
sub
xchg
xchg
lret
mov
sarl
into
sub
cwtl
lods
daa
xchg
ret
stos
and
or
jg
cmpsl
sub
out
sub
inc
xor
shrb
push
xchg
movsb
sub
enter
data16
push
hlt
aaa
lock
inc
mov
clc
iret
ret
dec
ss
mov
jp
call
out
popf
jmp
jae
mov
or
mov
pop
or
push
mov
mov
pop
repz
jnp
sbb
mov
loope
push
sbb
popl
imul
fdiv
push
jnp
mov
pop
and
je
aas
mov
xchg
xor
fxch
dec
fcomps
sub
add
mov
das
push
jb
aas
pop
sub
push
out
adc
loope
mov
cmpl
pusha
into
push
inc
inc
xchg
xchg
inc
int
push
add
sub
out
pop
cltd
test
outsl
sahf
outsb
cltd
fstl
mov
mov
push
rcrb
ret
add
adc
cmpsl
dec
iret
add
xor
pop
mov
ret
dec
data16
in
imul
cwtl
movsl
popf
in
aaa
in
ja
dec
jb
bswap
sbb
push
xchg
sahf
xchg
xchg
adc
or
add
push
and
gs
jp
ret
xchg
xchg
dec
out
mov
lcall
std
mov
test
mov
or
sub
add
dec
dec
lea
xchg
loopne
jp
jle
test
leave
pop
jl
dec
and
mov
dec
ss
out
icebp
pop
and
cmp
inc
mov
out
xchg
repnz
push
xchg
sbb
je
pop
add
iret
push
sub
fldt
xchg
mov
rorb
and
loopne
pop
add
xorb
int
jecxz
mulb
andb
fs
mov
add
pop
fs
pop
andl
dec
inc
mov
or
and
push
mov
popf
pop
inc
inc
jae
jg
test
mov
mov
inc
inc
mov
daa
call
inc
lea
push
xchg
xlat
sub
xchg
and
js
fstl
adc
stos
ret
cmp
and
and
xor
test
jne
jmp
jmp
int3
sbb
push
fs
cwtl
pop
cmp
inc
sub
cwtl
insb
dec
mov
mov
xor
out
ss
jge
mov
fiadds
jb
push
fsubrs
xchg
and
flds
xchg
push
imulb
mov
in
arpl
xor
adc
pushf
push
aad
dec
push
xor
sub
mov
sbb
call
ss
imul
mov
clc
push
dec
addr16
sti
iret
mov
and
mov
movsb
cmp
cmc
roll
aas
rolb
jb
out
cmp
jl
mov
mov
arpl
pop
ret
cwtl
add
pop
repz
jnp
stos
xchg
mov
adc
shl
dec
out
call
loop
bound
mov
adc
pop
rol
sub
cltd
push
pushf
jo
sub
xchg
mov
rcr
fs
je
cmp
pop
fs
xchg
in
pop
loopne
cli
dec
add
mov
outsl
jmp
lock
adc
xorl
cmp
and
rorb
fldenv
and
adc
mov
mov
int
and
hlt
dec
stc
mov
pop
xor
pop
aas
std
jo
div
andb
push
aas
inc
xor
cmp
ret
cmc
outsb
fildl
lcall
xchg
leave
mov
mov
adc
pop
arpl
add
and
clc
insl
mov
adc
rorb
and
pop
inc
push
test
fst
or
push
addr16
daa
out
jle
dec
inc
lods
out
cmp
stc
test
sub
addr16
data16
jl
xcrypt-ofb
cmpsl
outsb
pop
andl
add
leave
in
mov
push
push
mov
in
sbb
cld
aaa
cltd
add
adc
mov
sbb
jmp
out
lods
test
sub
mov
repnz
loope
jae
fsubrl
pusha
cwtl
je
fxch
push
andl
sub
xchg
sbb
xchg
or
sarb
push
int
sub
sbb
mov
nop
xlat
test
xchg
cltd
sub
mov
jae
test
xchg
jl
pushf
dec
repz
lock
les
loope
cmp
js
xchg
or
sbb
fiaddl
jge
ds
test
pop
ja
outsb
sahf
inc
adc
mov
xor
pop
xor
sbb
ret
loop
adc
mov
inc
loope
jns
int3
pop
enter
push
gs
shll
cmpsl
rorl
and
cmp
mov
int
dec
jge
inc
gs
pop
or
movsb
xor
xchg
mov
out
inc
or
cmc
ret
push
xor
loopne
xor
sub
iret
xchg
sub
adc
out
mov
pop
jmp
in
inc
cmp
jb
call
fisubs
js
insl
repz
pop
mov
das
adc
xchg
lret
bnd
mov
jbe
mov
push
movl
push
mov
jne
fcmove
outsb
pop
les
jmp
sub
cmp
inc
sahf
div
jmp
in
int3
adc
out
repz
mov
sub
fldl
lods
xchg
fwait
pop
sub
xchg
enter
pop
inc
jl
lea
imul
dec
daa
enter
in
push
add
addr16
imul
cld
lret
out
mov
cmp
cmpl
mov
pop
scas
int3
fs
dec
fnstsw
pop
int
push
sarb
lahf
aas
movsl
jge
roll
jbe
addr16
jg
addr16
aam
push
add
cmp
mulb
mov
dec
test
sbb
jo
inc
inc
call
fwait
add
sub
iret
add
push
fldl
sbb
xorb
add
fisttpl
pop
pop
out
ret
or
mov
out
lock
pushf
mov
xchg
ja
push
dec
inc
mov
bound
add
sahf
rorb
into
cltd
adcb
mov
push
mov
push
cmpsl
loope
mov
ret
stc
sub
lock
lds
data16
or
lock
jmp
in
jae
std
and
mov
out
xor
jo
pushf
sbb
pusha
in
dec
insl
jp
out
dec
sbb
insb
adc
inc
adc
sub
movsb
jecxz
fwait
es
sub
gs
pusha
sbb
sub
mov
sub
inc
lcall
rcr
int
cmpsb
int3
add
scas
inc
add
mov
and
add
cld
outsb
pop
mov
fists
sub
js,pt
push
or
mov
sub
pop
jae
jo
cwtl
lock
jns
fadds
inc
icebp
pop
dec
xor
out
push
xchg
mov
xchg
cwtl
popa
mov
sbb
insb
push
js
loop
lods
xor
dec
stc
jmp
jne
daa
inc
jg
xchg
repz
imul
add
outsb
pusha
adc
sub
roll
data16
loope
aad
popf
leave
add
add
popf
xor
sub
pop
fwait
push
insl
pop
inc
loopne
repnz
xor
mov
sub
fdivrl
cli
fmulp
out
into
dec
push
lods
js
test
cmp
decl
adc
hlt
pop
cs
repz
xchg
or
sbb
jns
ja
dec
ret
ljmp
mov
sar
or
sbb
repnz
add
and
cmp
xorb
xor
lahf
popa
pop
imulb
inc
pop
and
data16
add
imul
or
aam
das
cmp
aas
sti
xchg
add
push
fisttpll
jns
popf
mov
mov
fcomi
mov
adc
rolb
mov
push
jnp
xchg
pop
adc
icebp
cmpl
push
stos
iret
mov
mov
mov
pop
and
mov
aad
sub
add
in
mov
jecxz
aaa
sub
test
inc
unpckhpd
rcrl
insb
aas
out
mov
bound
mov
repnz
sbb
loopne
sub
mov
inc
popa
push
lret
mov
mov
inc
lds
cmpsl
sub
test
cmovbe
cs
in
mov
arpl
adc
rol
cmp
mov
adc
leave
repnz
outsb
jmp
inc
test
je
test
add
jb
mov
ret
push
or
ret
inc
mov
gs
xchg
pop
es
xorb
adc
mov
fisubrs
stos
sbb
sbb
icebp
push
clc
or
ja
cs
jg
push
in
lods
popaw
jns
stos
or
adc
in
in
ret
adc
loopne
inc
or
das
fstps
cwtl
inc
cmp
cmpsb
sbb
shl
aas
or
lret
mov
bound
mov
xorb
inc
jp
push
mov
mov
out
in
xor
or
jmp
mov
mov
pop
xlat
xor
inc
mov
outsb
lret
rol
cmp
xchg
outsb
push
xor
scas
sti
arpl
cld
out
popf
add
cmpsl
loop
xchg
scas
pop
jecxz
xchg
jecxz
xchg
dec
xor
mov
xor
cs
idivl
adc
aaa
dec
repz
sarl
leave
inc
lret
daa
loopne
repnz
xchg
test
xor
imul
test
xor
push
movsb
ja
push
or
leave
fs
int3
inc
enter
cmp
xchg
fmul
xor
sti
sub
ss
sbb
call
add
push
push
push
and
aaa
adc
push
stos
inc
sub
pushf
cmc
or
or
mov
xor
xchg
fmulp
mov
adc
xchg
aad
cmp
mov
js
hlt
dec
xchg
testl
xor
addb
ret
shll
inc
cmp
jmp
cld
ja
lret
popa
mov
es
pop
and
or
pop
dec
stos
insl
mov
push
std
pop
arpl
lea
sub
cld
cmp
mov
sub
cmc
fists
nop
fldcw
das
pop
mov
mov
xor
push
cltd
fucom
add
push
dec
mov
cmc
in
rol
andb
add
pushaw
in
dec
sub
imul
nop
aam
lds
mov
imul
mov
or
jge
sarb
movsb
mov
pop
cmp
stos
dec
mov
push
stc
pushf
rclb
or
mov
and
les
nopl
push
dec
or
push
stos
movsb
adc
imul
fsubs
push
imul
or
pop
push
rcll
jl
hlt
repnz
mov
call
ficomps
push
add
mov
or
pop
imul
jo
sti
icebp
outsb
enter
pop
packsswb
leave
in
cld
mov
xchg
rorb
pushl
mov
pop
rol
or
jg
xchg
sub
adc
out
testl
sarl
repnz
jmp
push
add
xorl
inc
sbb
mov
jno
cld
imul
jmp
mov
add
push
cmpsb
push
loopne
push
repnz
fisubrs
imul
xor
mov
mov
lret
sbb
lds
adc
fdivs
mov
push
mov
int
push
repz
sub
out
gs
fdivl
push
jno
pop
jo
pop
cmpsl
dec
mov
cmp
sub
loop
xchg
dec
push
in
lock
nop
pushf
fcoml
xchg
cmp
add
push
das
jg
fbstp
popl
f2xm1
pop
inc
xchg
push
mov
fucomip
sarl
add
and
inc
lea
stos
pop
pop
inc
sbb
add
imul
inc
xchg
pop
xor
add
mov
mov
fdivl
loope
lea
xchg
in
dec
movsb
mov
lock
jl
inc
pop
cmp
or
out
mov
jb
into
inc
jo
lea
clc
insl
bound
imul
aas
scas
lock
es
and
cld
repz
nop
mov
jbe
cmpsb
stos
xorb
fnstenv
pop
or
or
or
mov
out
jno
adc
js
dec
cmp
jg
imul
push
and
fucomp
ret
xor
dec
lret
cmc
pop
pop
pandn
popf
dec
fiaddl
jno
clc
jne
pusha
mov
movsb
cli
mov
inc
xchg
dec
loop
jne
push
lods
mov
cmp
mov
inc
jo
pop
pop
dec
jbe
mov
sbb
test
mov
mov
mov
scas
dec
jl
push
sbb
sti
mov
dec
dec
inc
cs
push
xchg
pop
aaa
vpunpcklwd
push
cld
stc
repz
and
jl
fmull
lods
test
stc
push
leave
dec
imul
ss
dec
repnz
fistpl
sub
leave
test
out
mov
jno
sub
enter
dec
inc
xor
lods
insb
jle
testl
xchg
ret
sbb
sbb
dec
popf
arpl
sub
xlat
mov
mov
scas
in
xor
sub
iret
dec
or
pop
pop
pushf
leave
fsubs
mov
push
dec
popa
mov
aam
sti
mov
outsb
inc
jne
jo
stc
sbb
adc
leave
rcll
popf
push
lods
les
push
popl
push
stc
push
mov
mov
pop
xor
inc
cmp
ja
outsb
addr16
outsl
bound
pop
add
adc
fstpt
lds
aaa
jb
xor
or
pop
or
loope
sub
xor
push
push
cld
lods
jl
pop
shr
rcrl
fstps
sub
insb
sbb
insl
mov
sbb
into
add
push
shl
pushf
or
pop
and
inc
aaa
out
jno
addr16
cmp
add
bound
cmp
mov
sub
dec
mov
or
in
push
xchg
xlat
fwait
sbb
xchg
call
and
js
sbb
cmp
arpl
fbstp
dec
pop
mov
repz
inc
sbb
sets
arpl
push
stos
cld
int
es
in
inc
inc
icebp
cmpsb
lods
mov
pop
sbb
mov
dec
fidivl
mov
mov
in
add
inc
cltd
stc
lock
ljmp
and
mov
add
lock
ficomps
mov
and
repnz
mov
aam
sbb
push
adc
int3
add
lret
add
jecxz
pop
test
dec
and
inc
mov
push
adc
pop
aas
cmp
add
nop
gs
jp
movsb
out
mov
dec
sub
jno
roll
sub
add
outsb
cmp
mov
add
testb
pop
sahf
dec
cs
sub
add
inc
dec
push
sub
mov
in
mov
fcoms
jb
and
jne
test
scas
and
or
sbb
adc
nop
and
add
in
fsubs
dec
jg
add
pop
sahf
mov
addr16
shlb
dec
test
test
arpl
adc
and
outsl
lahf
jnp
std
iret
addb
xor
xor
popf
or
stos
dec
mov
push
leave
outsb
add
mov
mov
inc
xor
lret
leave
or
ficoms
imul
xchg
jge
pushf
lea
insb
test
out
call
mulps
mov
inc
popf
dec
movsl
sahf
outsb
mov
fcomps
inc
lcall
or
and
stc
lods
pop
sub
xor
add
adc
lret
pop
add
lock
jae
pop
or
popa
cld
lods
push
xchg
dec
cmpsl
sahf
mov
adcl
jnp
fwait
dec
cmp
fimull
cmpsl
push
jno
jbe
xchg
jne
movsb
mov
jmp
divb
ret
data16
push
lds
add
jo
lea
xor
repz
insb
hlt
cmp
mov
cwtl
adc
test
shll
lods
setl
ss
cmpsb
lods
xchg
pop
ret
addr16
in
or
jle
sbb
pop
es
or
push
pop
pop
push
into
pop
lret
xchg
push
cmpsb
jecxz
fcmovne
dec
sbb
int3
push
notb
sahf
fadds
stos
push
sub
stos
cmp
std
loope
inc
sahf
sti
pop
leave
movsl
jb
clc
mov
mov
mov
pop
mov
imul
xor
xor
cs
sbb
faddl
jne
and
nop
sbbb
loopne
xchg
jnp
inc
dec
sbb
repnz
dec
gs
int
mov
loopne
int3
mov
pushf
xchg
mov
loope
jae
das
or
mov
lea
push
lods
jns
jo
and
cld
icebp
xchg
fidivrs
sbb
mov
dec
lods
clc
push
sub
js
mov
ss
cmp
add
repz
cmp
cmp
fistps
stos
mov
and
outsb
mov
jae
xchg
movsl
fistps
in
jle
cmp
cmp
sti
mov
xor
cltd
movsl
xorl
fisttpl
mov
repz
push
ret
mov
push
je
mov
dec
mov
bnd
mov
cs
pushf
out
xor
and
pop
xchg
std
mov
rclb
and
sub
cmp
push
xchg
jb
fsubrp
sub
adc
es
push
cmc
stc
lea
scas
int3
push
lods
pushf
mov
sarl
lret
cmp
test
dec
pop
hlt
inc
inc
mov
insl
das
sub
push
xchg
xor
je
xor
pop
insl
test
movsl
lret
xor
loopne
clc
in
lea
scas
out
xor
stos
and
js
mov
jle
push
sbb
shr
jecxz
sub
addr16
mov
cs
dec
xor
cmp
mov
push
and
fs
popf
mov
lods
dec
ret
mov
ficompl
loop
ret
in
cmpsb
pop
cmp
psubb
and
xchg
lahf
nop
es
loopne
or
out
jnp
aaa
test
in
cmp
inc
pop
xchg
jo
push
xchg
xchg
iret
arpl
int
pop
mov
sbb
pop
and
int3
outsl
pop
jle
sub
nop
ja
inc
jne
push
lods
cmpsb
xchg
mov
insw
adc
sbbb
xchg
add
jb
dec
xchg
dec
jns
xchg
cs
mov
xor
sub
and
mov
shlb
das
push
inc
test
ror
cmp
mov
test
xor
addr16
push
push
or
xorl
mov
or
ret
inc
test
add
xchg
and
arpl
jecxz
inc
inc
mov
cmp
fdivs
into
testl
std
add
in
jge
jecxz
mov
jg
data16
and
xchg
jns
and
in
es
in
sbb
jae
push
loopne
jle
pusha
hlt
or
adc
leave
aam
stos
dec
outsb
or
xchg
xchg
cmpsl
mov
sub
fmulp
add
cmp
cmc
enter
test
xlat
sbb
notl
mov
rorb
cld
lahf
std
pop
call
push
lock
add
loope
mov
mov
or
orb
loope
sahf
jp
xor
add
adc
push
les
dec
mov
push
mov
jno
lods
insb
arpl
adc
rcrb
mov
dec
pushf
jae
pop
out
aaa
or
adc
and
add
mov
mov
out
mov
push
into
int3
mov
mov
jge
push
sbb
pop
mov
sbb
adc
in
andb
mov
sub
sti
std
mov
or
sbb
ficoms
es
ror
stc
lods
ja
jl
test
int
je
into
push
dec
adc
and
in
fcmovnb
mov
test
cltd
ja
jns
and
icebp
cmp
push
jnp
rcrb
xor
scas
cltd
fs
mov
pusha
and
mov
aas
pop
ss
push
cmp
imul
iret
xchg
imul
or
jbe
sar
pop
rolb
xchg
xlat
xor
stc
lods
bound
mov
shr
mov
or
add
fidivrl
fsts
scas
inc
negb
scas
jo
sub
pop
push
xchg
xchg
sub
dec
push
out
cmpsb
loop
mov
cmp
xchg
or
cmp
sarb
pop
dec
rcrb
notb
les
int
sbb
ret
inc
jae
cmp
cmp
dec
imul
lods
cmp
outsb
ret
and
xlat
and
in
notl
cmp
or
add
push
das
sub
and
in
addr16
pop
adc
sub
xchg
shrl
sub
repnz
mov
push
adc
pmaxsw
int
fistps
cmp
repz
and
dec
jmp
pop
imul
mov
sbb
adc
test
jne
add
mov
gs
xchg
sub
js
mov
stos
les
je
and
movsb
push
xchg
xor
rorb
mov
dec
ret
adc
pop
or
ja
loope
je
jae
js
data16
push
and
fstpt
bound
sbb
ficoml
xlat
lahf
es
mov
loop
dec
mov
fildl
ja
sbb
jne
add
xchg
mov
dec
push
dec
lret
add
xchg
ja
fbld
movsl
repnz
dec
lds
mov
and
mov
repz
stos
jo
ror
test
iret
movsl
mov
jle
icebp
xchg
movups
cmpsl
cs
outsb
push
fisubrl
movsb
dec
fwait
fs
mov
adc
mov
insl
rorl
mov
aaa
adc
fsts
cs
sbb
inc
or
push
jae
lret
fmuls
pop
jnp
sbb
dec
adc
bound
mov
data16
notb
lret
mov
xchg
aaa
shrl
mov
imul
cli
push
sbb
mov
ja
addr16
fdivrs
sbbb
notl
lods
mov
mov
mov
nop
loope
pop
and
push
pop
fiadds
leave
movsl
sub
in
ja
pop
sti
xchg
inc
and
xor
js
pusha
call
flds
sub
aam
mov
in
lea
xchg
or
or
inc
ds
rcll
jns
jne
push
lahf
jnp
scas
in
loopne
sarl
sbb
lret
fidivs
lret
cwtl
jns
ss
push
test
add
and
jo
pop
dec
lret
xchg
sub
std
pop
push
sbb
cmpsb
lods
mov
sahf
sub
flds
outsl
stos
ljmp
std
pop
clc
std
lods
push
pop
inc
sub
lods
push
movlps
jl
lcall
mov
leave
push
cs
aaa
mull
outsb
stos
or
or
pushf
iret
repz
pop
dec
jp
adc
sbb
test
mov
test
repnz
pop
pop
cli
pop
xor
out
adc
aas
popa
jecxz
dec
push
lret
and
jae
shrl
loop
rcr
inc
test
iret
xchg
enter
shll
xor
jge
fimull
mov
xchg
and
dec
je
mov
pushf
cmp
jp
aad
jg
les
cmc
mov
faddl
insb
mov
addl
enter
aaa
adc
das
stos
gs
xchg
pusha
add
aaa
push
jb
fists
fcom
and
lods
mov
jmp
mov
lcall
sti
lods
mov
xchg
mov
or
cmpsl
dec
inc
call
xor
loope
mov
and
push
cmp
push
lret
jge
adc
cmp
shr
sbb
inc
cltd
inc
inc
in
adc
pop
add
xchg
pop
mov
inc
sahf
enterw
lcall
xor
sub
mov
push
cmpsb
inc
xchg
incl
push
rcl
inc
cmpsb
shlb
add
call
std
mov
arpl
sbb
mov
mov
cmp
loop
and
xor
shl
inc
dec
mov
repnz
sub
cmp
jg
adc
jno,pn
add
sub
sti
je
lea
xchg
mov
and
mov
loopne
mov
hlt
lahf
clc
sub
rcll
test
in
or
and
test
mov
dec
mov
insl
movsl
sti
mov
jmp
sub
outsb
aam
push
xlat
jb
rcrb
jmp
push
outsl
jo
xchg
ret
pop
cmp
mov
dec
inc
xchg
add
sti
repz
cmp
push
inc
inc
mov
push
in
sub
das
ss
inc
jp
fstp
repz
les
mov
jns
pop
std
sub
xchg
imul
cmpsl
pop
dec
mov
and
sub
out
clc
dec
ficomps
cwtl
mov
daa
sub
test
xchg
dec
cmp
fdivrl
scas
cmp
jbe
push
add
lea
inc
mov
rorl
add
jmp
xor
mov
cmp
je
push
mov
popf
fbld
fld
sub
adc
ret
mov
xor
rorl
into
test
jl
cli
push
jno
push
inc
cmp
and
pop
pop
cmc
mov
cmp
out
sahf
lods
outsb
sbb
or
push
arpl
xchg
jbe
inc
ss
pop
dec
jp
xor
add
cmp
repnz
fidivs
rcll
das
int
je
mov
lret
frstor
cmc
cmp
sbb
leave
clc
pop
int3
aaa
cld
xor
and
cmc
pop
lock
cmp
sub
xor
xchg
mov
push
mov
and
fdivrs
adc
cli
ret
adc
push
aaa
cwtl
fimuls
mov
std
jg
int3
ja
fistpll
lds
stos
iret
arpl
lods
mov
repz
or
push
stos
clc
sub
cmp
shlb
push
shll
adc
add
adc
adc
inc
cmp
rcl
sub
in
lret
clc
xor
popa
mov
data16
inc
sar
jb
cltd
out
mov
push
ret
jmp
out
aad
fld
inc
add
dec
jle
add
sub
cmc
adc
pop
and
mov
fs
std
or
inc
dec
shlb
scas
sbb
or
and
push
pusha
or
nop
cmpsl
dec
rclb
xlat
cmc
mov
out
fwait
in
fsubrl
dec
decl
adcb
pop
arpl
xor
loopne
dec
adc
imulb
pop
lods
pop
jmp
pop
imul
outsb
jns
add
loope
insb
inc
jno
mov
jo
push
jns
pop
mov
pop
data16
cmpb
jbe
sub
mov
repnz
jns
jno
mov
mulb
xchg
adc
xor
sbb
fdivrl
outsb
dec
jae
jbe
mov
outsb
dec
popf
and
hlt
test
lea
inc
mov
lds
add
mov
jl
mov
aam
ficoms
stos
call
das
inc
js
jmp
inc
pop
ret
xor
pop
std
insb
jl
in
pop
or
sub
iret
pop
push
add
inc
push
movsl
xorl
pop
xor
lahf
cmpsb
mov
aam
mov
dec
mov
and
xchg
lods
int
movb
fwait
andl
push
add
out
inc
push
xchg
inc
xor
jo
jbe
sbb
das
sahf
shll
lcall
and
shrl
pop
cld
add
pusha
lods
popa
push
and
in
fcmovbe
mov
push
pop
sub
cld
adc
jo
stos
adc
sub
out
aam
mov
xchg
ja
sub
test
xchg
mov
test
and
cmp
movsl
xchg
dec
sbb
adc
xchg
sub
pusha
jb
sbb
out
mov
out
lods
popf
into
loope
call
out
mov
nop
and
or
subl
test
mov
addl
xchg
jns
xchg
xchg
inc
pop
mov
shl
jno
push
push
or
xchg
inc
cmpsl
fistps
mov
out
fadds
movsl
ret
imul
mov
lods
adc
mov
pop
enter
cmpsl
push
push
roll
out
xchg
stos
push
cld
out
inc
out
les
dec
xchg
cwtl
out
adc
in
idivl
mov
push
cmp
push
fiadds
mov
and
and
or
mov
test
loope
shrl
mov
adc
clc
add
pop
dec
and
inc
push
fisubrs
add
jmp
lret
daa
pop
sahf
out
mov
outsl
add
inc
aam
xor
lret
and
fldenv
mov
jae
stos
pop
cs
sub
sub
ss
xchg
lret
scas
and
lcall
or
shll
adc
fstps
lea
jmp
push
out
jne
dec
loopne
lahf
xchg
sub
sbb
mov
icebp
jl
sub
or
popa
enter
jecxz
mov
gs
jg
cwtl
mov
cmp
pop
push
pop
inc
sub
aad
lcall
popa
pop
jl
sbb
mov
dec
inc
xor
cmp
call
andb
int3
jl
xor
pop
mov
mov
jge
xor
lea
popa
and
pop
xchg
call
and
xchg
imul
cmp
mov
cmc
pop
jecxz
ret
and
cmpsb
jae
sub
jo
ss
pop
iret
jle
shrb
aam
mov
xor
cmp
fnclex
dec
jns
xchg
pushf
lcall
inc
adc
push
and
push
inc
in
cli
and
adc
jle
jb
cmp
stos
lcall
mov
aaa
and
loop
jo
sarl
imul
outsb
out
stc
cmp
sbb
add
aas
sbb
imul
mov
mov
push
sub
jl
mov
xor
push
dec
inc
std
gs
nop
mov
ljmp
in
das
pop
or
aam
mov
add
mov
mov
push
mov
cmp
and
mov
insb
sub
mov
xchg
push
nop
rcr
mov
adc
mov
test
hlt
inc
aam
push
sbb
out
mov
insl
inc
push
fisubs
imull
sbb
mov
cli
hlt
movsl
rsqrtps
sahf
cmp
mov
xor
mov
jb
mov
sub
data16
mov
fs
inc
and
sub
fisubrs
push
into
je
hlt
fisubrs
sti
mov
adc
incb
add
and
push
xchg
int3
stc
mov
jp
push
cmp
hlt
and
ficompl
cmc
ret
inc
pop
out
jns
mov
add
inc
xchg
sbb
push
dec
imul
out
mov
popa
mov
xchg
add
and
mov
enter
aas
mov
xor
movsb
xchg
mov
pop
sbb
sub
xchg
pop
sub
ds
fcoms
push
jle
mov
adc
jne
sub
andb
hlt
pop
sbb
add
nopl
or
inc
pop
cli
mov
inc
std
jg
jecxz
bound
ret
arpl
aad
xchg
pop
rcl
jecxz
xchg
cs
mov
jle
les
outsb
sub
sahf
loop
jge
inc
xchg
jo
mov
mov
inc
sbb
mov
out
dec
push
adc
add
xchg
mov
inc
pusha
nop
fcomps
negl
add
cmp
outsb
in
fistl
loop
mov
or
cltd
iret
imul
pushf
push
in
sbb
outsl
int
xchg
push
test
arpl
sti
arpl
loope
popf
push
mov
ja
rclb
push
int
mov
sub
jo
inc
mov
fcmove
push
sub
movb
hlt
pop
inc
adc
sbb
lcall
xchg
xor
insl
xor
stos
sub
mov
into
pop
sub
je
inc
subl
sub
cwtl
push
jmp
dec
add
cmp
repz
clc
pusha
fbstp
mov
dec
hlt
rcll
pop
push
call
push
and
push
or
mov
xorb
lcall
js
inc
test
fistpll
dec
andb
popa
lock
jg
js
jecxz
dec
cs
or
push
add
xchg
jne
push
sub
push
lcall
sbb
push
add
addb
or
sbb
xchg
or
xor
incb
push
mov
cmpsl
sbb
dec
sbb
pop
push
lahf
sbb
movsb
popa
lcall
loopne
sbb
and
xor
dec
fildl
xchg
push
gs
sbb
xchg
mov
add
mov
repz
pop
adc
icebp
sub
ljmp
dec
jbe
inc
cmp
daa
xor
mov
jno
push
inc
push
cmp
inc
nop
jne
jno
mov
add
rcr
jbe
mov
cli
xorb
sti
jbe
mov
add
gs
jbe
sahf
dec
add
sarl
push
cli
xchg
je
pop
ljmp
mov
aam
in
fwait
rorl
mov
int3
sbb
pop
mov
movsb
mov
enter
sbb
test
push
lock
mov
xchg
mov
xor
lret
jecxz
mov
loope
xlat
in
jno
jae
and
movsl
xlat
dec
leave
dec
inc
adc
arpl
push
sbb
cmc
and
adc
outsb
push
xor
enter
inc
cli
pop
sbb
jbe
std
enter
and
jp
mov
int3
inc
dec
push
mov
add
jl
push
fsubs
cltd
mov
add
sbb
mov
adc
sbb
or
loopne
adc
mov
mov
sysexit
mov
xor
or
or
mov
push
nop
mov
imul
daa
cmp
jl
enter
dec
adc
sub
push
lods
inc
adc
std
or
rol
push
divl
xchg
push
movsb
cltd
insl
scas
sbbb
cmp
in
mov
jge
in
lcall
add
enter
stos
push
push
add
xchg
jnp
and
dec
cmp
pusha
sub
push
in
outsl
mov
mov
xchg
mov
and
dec
sub
loope
mov
mov
lea
fsub
and
sub
jp
pop
push
mov
js
or
mov
fldt
rcl
jg
arpl
xchg
mov
xor
fsubs
add
shll
lret
cs
outsb
inc
repnz
xor
rclb
jl
out
mov
stos
ljmp
adc
leave
jno
stos
fwait
mov
call
xchg
lds
xchg
lods
xchg
cmp
out
sub
test
addr16
dec
pop
test
jl
mov
xchg
mov
add
loope
lret
lahf
cwtl
pop
js
loopne
je
into
push
jns
dec
fstl
push
pop
daa
out
pop
cmc
pop
jg
test
xchg
outsl
stos
cmp
push
adc
mov
jmp
xchg
mov
pop
mov
aam
cmp
xor
add
adc
out
outsl
inc
xor
jne
jmp
sbb
stc
cwtl
cmc
fdivr
into
push
sbb
es
notb
jbe
push
mov
sbb
sbb
ret
lret
ja
ficoms
push
jae
and
cmpsb
fistpl
inc
mov
dec
ljmp
in
push
or
jge
out
cltd
sbb
dec
imul
xchg
mov
scas
sti
mov
dec
inc
inc
movhps
cmc
pop
insb
in
or
iretw
push
push
idivl
fadds
pusha
loop
push
pop
xor
inc
icebp
movsb
jl
fstps
or
sar
int
and
cmp
test
adc
lea
lock
hlt
adc
ficomps
cmp
dec
or
add
cltd
mov
arpl
adc
mov
mov
adc
add
dec
push
rcr
int
dec
or
inc
gs
fimull
clc
fnstsw
ss
iret
es
mov
xor
mov
xchg
rorl
fcmovbe
fildll
inc
divb
xor
pop
xchg
adc
pop
test
neg
ret
sbb
je
and
bnd
xor
pop
jmp
mov
mov
adc
enter
lock
int3
mov
xchg
ret
mov
pop
mov
sub
nop
inc
fxch
push
inc
outsl
iret
aas
cmpl
jmp
fldl2t
shl
push
jecxz
and
das
ret
daa
lret
aam
cwtl
daa
dec
push
mov
jns
or
sub
popf
pop
lcall
fidivs
enter
pushf
stos
notb
jge
inc
pop
shlb
push
imul
stos
jp
jno
inc
push
xor
jmp
addr16
jno
sbb
jle
dec
insl
jno
ret
out
loope
mov
iret
push
jae
dec
mov
aas
call
js
ss
sbb
dec
in
push
and
adc
jge
sbb
cmp
xor
inc
xor
lret
mov
lahf
fdivrl
test
sub
outsb
repz
fnsave
aad
push
mov
or
xchg
dec
mov
xchg
xchg
xor
pop
and
mov
sahf
rorl
adc
push
pop
pop
mov
sbb
ljmp
loope
insl
repnz
les
in
xchg
sub
in
std
enter
das
inc
push
adc
xchg
dec
cld
xor
addr16
leave
ret
cmp
add
addr16
cmp
push
aad
ja
mov
pop
bound
movsl
jne
cmp
arpl
jge
lret
into
mov
sbb
dec
dec
and
mov
jns
leave
not
ret
pop
sbb
movsb
data16
lret
sbb
fbstp
sbbb
fisttpl
push
icebp
xor
xor
mov
fistps
jp
aam
fdivl
jmp
sub
push
es
shll
cwtl
dec
dec
lret
mov
fldcw
pop
sbb
jge
sbb
and
add
movsb
orb
and
in
popa
insb
cmp
push
xchg
stos
lea
mov
mov
pop
sbb
dec
adc
mov
shrl
push
adc
lock
jecxz
andb
mov
lcall
loop
mov
or
add
mov
aam
out
aad
adc
pop
push
mov
test
shr
adc
dec
fistps
mov
sub
mov
shrl
into
and
mov
pusha
dec
adc
push
je
imul
pop
or
add
push
aam
gs
int
fistps
mov
lock
loope
jo
pushf
dec
xor
cmpb
movl
loopne
xchg
adc
xchg
jecxz
dec
daa
push
inc
les
shl
jnp
pop
in
aaa
add
outsl
mov
and
mov
in
fstl
lock
in
mov
int3
cmc
movlps
xor
push
mov
push
clc
add
andl
ja
aam
xchg
outsb
xor
loop
lahf
xor
and
clc
inc
inc
popf
test
test
pop
add
push
push
xchg
inc
clc
ret
outsb
stos
push
or
movsl
cld
stos
shrb
mov
jnp
lret
fs
cmp
sbb
push
pusha
cwtl
jo
fs
jno
mov
xchg
push
push
xor
data16
test
cwtl
mov
dec
leave
and
mov
enter
cmp
push
and
outsb
stos
pop
and
mov
stc
filds
xchg
xlat
nop
xchg
js
dec
movsb
jns
faddl
dec
mov
mov
cli
lcall
divb
out
subl
xchg
and
stc
test
adc
or
dec
mov
jae
add
cmpsb
push
mov
jle
and
insb
es
lods
insb
jno
push
push
inc
cwtl
sub
lods
addl
inc
stos
stos
mov
scas
enter
inc
fidivl
and
pop
js
repnz
rol
push
hlt
xchg
push
imul
ret
xchg
hlt
adc
fadds
mov
push
lcall
stos
addb
push
mov
js
repnz
cmp
sbb
aas
leave
and
xchg
in
incl
mov
out
push
rcrl
dec
sti
adc
add
add
mov
and
mov
outsb
dec
sub
cwtl
inc
and
leave
icebp
sub
push
out
lods
les
mov
push
dec
jbe
sub
iret
or
std
jmp
imul
xchg
dec
aam
sbb
inc
out
and
aaa
shr
mov
out
sub
cmp
jle
sbb
inc
push
push
inc
xchg
out
xlat
sub
jo
push
dec
mov
lcall
xchg
push
mov
addr16
xor
pop
xchg
fistpll
mov
or
stc
jl
loop,pn
xor
jne
lcall
jb
jl
rolb
add
addl
push
pop
shrl
outsl
and
out
bound
jb
xor
push
cmp
mov
cmp
out
add
sub
xor
xchg
fsubl
jle
popa
scas
insb
cltd
addb
call
rcll
pushl
cli
or
dec
mov
push
aaa
mov
pop
jns
sbb
cmp
xor
shll
pop
mov
fidivrs
mov
fwait
aam
imul
mov
push
movsb
jno
adc
cld
icebp
lret
ret
push
add
add
out
mov
orl
inc
lcall
js
call
call
push
mov
decb
push
mov
jp
jae
xor
test
sub
pushf
mov
inc
ljmp
sarb
cmp
push
test
icebp
dec
lcall
mov
repnz
mov
pop
xor
push
mov
pop
and
push
cmp
stos
xchg
leave
pop
stos
mov
push
cmpsb
ds
fnstsw
jl
mov
mov
xchg
mov
add
and
push
sbb
pop
faddl
movsl
sub
pushf
lcall
insl
je
aam
dec
xor
xor
lock
std
pop
mov
ds
pop
fs
in
or
jmp
mov
cmp
lret
lods
jb
mov
mov
mov
inc
repnz
lahf
push
rcrl
movsl
sbb
xchg
and
mov
push
pop
subl
jb
xchg
cltd
testl
add
add
ljmp
hlt
dec
popa
icebp
test
adc
push
sbb
pop
xor
or
add
daa
xor
dec
lock
push
push
push
mov
ret
ret
aad
mov
dec
sahf
ret
test
and
ret
stos
into
xor
mov
push
fs
fwait
pop
out
ret
int3
lods
mov
mov
add
fdivp
aam
sub
mov
sbb
mov
xchg
mov
shll
add
xchg
cwtl
push
das
das
sbb
xchg
icebp
mov
fsubrs
fdivl
andb
popf
stos
les
cwtl
and
bound
fisubrs
xlat
sti
orl
shlb
dec
cmp
push
ja
test
xchg
xchg
out
mov
jge
cmc
jb
xchg
jl
in
ds
sbb
or
out
mov
cmc
inc
dec
fadd
shr
sbb
push
sub
ss
insb
icebp
jae
cmpsl
cmpsb
inc
inc
adc
lret
int
or
cmp
mov
dec
mov
call
cmp
push
inc
jl
mov
add
idivl
pop
shll
popf
xchg
xor
shll
xor
movsl
fwait
loop,pt
icebp
aaa
cs
idivl
lds
jge
mov
jae
sbb
xchg
clc
push
in
aas
mov
stos
pop
daa
aam
push
mov
or
out
pushf
mov
dec
inc
nop
notb
lahf
inc
xchg
pop
pusha
movsl
push
inc
mov
mov
data16
mov
arpl
fmull
out
and
mul
or
push
lds
js
loop
xor
jno
movsl
and
jae
add
mov
test
insb
ljmp
dec
push
pop
lret
sub
sbb
ljmp
std
dec
movb
mov
enter
imul
cmp
sahf
aam
xlat
loop
push
push
int3
jp
aas
or
cmp
jge
addl
test
pop
imul
adc
inc
lret
or
mov
aam
cltd
push
repnz
xor
push
xor
sub
shr
and
and
in
dec
les
and
movsb
iret
and
or
nop
jnp
mov
shr
push
jle
push
push
rorb
or
add
pop
mov
mov
popa
rorl
notb
pop
lret
popa
sub
fistpll
add
dec
sbb
int
pushf
pop
inc
pop
les
and
mov
fcmovne
sub
mov
jnp
fldl
fbld
sub
sub
leave
fdivl
ds
in
mov
cli
add
push
stos
inc
adc
mov
out
or
xlat
sti
aaa
enter
jp
and
sub
xchg
xchg
pop
jecxz
arpl
shlb
jl
add
les
popa
out
addr16
xor
sbb
add
pop
jne
inc
mov
icebp
ljmp
outsb
imul
data16
ja
mov
pop
pop
flds
popa
pop
or
xchg
xor
sbb
and
movsl
cmpsb
out
imul
mov
pop
mov
fdivrs
mov
sbbb
pop
fnstsw
loope
pop
add
xchg
shl
jg
xchg
sbb
xchg
mov
sub
sbb
jmp
loope
push
sbb
ds
pop
inc
push
adc
adc
nop
jnp
and
jle
ret
inc
mov
out
repz
test
mov
scas
jb
fidivrs
pop
add
lcall
adc
mov
push
lds
scas
mov
xchg
jnp
mov
call
sbb
mov
std
imul
inc
out
adcb
dec
sbb
cmp
mov
divl
ret
lea
sbb
add
icebp
sbb
test
in
or
lods
cmp
cmp
inc
lcall
pop
inc
cmp
sub
adc
cwtl
jbe
popa
ds
or
lahf
adc
insb
dec
mov
icebp
test
es
jp
push
repz
sub
repz
cmp
sbb
or
xor
imul
add
jl
cmp
es
or
in
ja
adc
push
pop
das
jb
sbb
mov
pop
jnp
pop
xor
add
xor
aaa
lods
test
or
lods
test
sti
flds
and
push
or
and
adc
aas
ljmp
mov
xchg
mov
lret
lret
mov
orb
mov
fisubl
clc
fldenv
scas
sti
jge
mov
ljmp
jb,pt
jnp
inc
push
jmp
cmp
cmp
pop
mov
loopne
sahf
add
push
add
inc
adc
gs
sbb
mov
repz
repnz
arpl
push
sbb
mov
jb
push
shrl
aas
mov
jge
outsb
jmp
inc
in
out
adc
push
or
mov
xchg
dec
inc
addr16
lds
outsl
fcoml
pusha
andl
in
jmp
int
sti
nop
es
mov
xabort
sub
jno
xchg
push
jle
addr16
xor
mov
hlt
mov
and
cmpsl
mov
aas
xchg
std
je
loop
sbb
rcrb
xchg
xchg
imul
pop
stc
pop
pop
sarb
mov
sub
add
push
mov
mov
insb
dec
mov
jl
sbb
mov
movsl
ds
test
pmaxub
pushf
arpl
arpl
push
jmp
pusha
repz
jecxz
lds
pop
jne
add
cs
fists
imull
lret
push
cmp
sub
jo
mov
rcl
mov
dec
sti
imul
xchg
or
es
or
hlt
pop
into
scas
mov
sub
lcall
fwait
xchg
sbb
cwtl
hlt
xor
fs
ss
jbe
cwtl
pop
push
decl
addr16
mov
add
out
mov
je
addr16
xor
aas
adc
cltd
sbb
xor
jmp
push
xchg
or
jae
pop
scas
mov
xlat
xor
mov
push
inc
xchg
xchg
icebp
hlt
stos
lahf
sbb
test
sub
stc
xchg
mov
sbb
mov
mov
xchg
sbb
mov
add
faddl
nop
imul
cmp
imull
into
dec
shrb
xchg
mov
loope
dec
jle
jge
cld
or
das
fs
das
int
mov
adc
pop
cmc
mov
out
jle
pop
cs
mov
jge
xor
scas
stos
sbb
mov
sbb
lods
sbb
fdivrs
lea
bound
lahf
mov
push
fbld
in
inc
pop
xlat
pop
inc
out
out
test
inc
sbb
dec
pop
xorl
cltd
inc
fldl
ss
dec
ret
and
icebp
fisttps
adc
mov
int
lock
cld
out
adc
lret
mov
mov
add
out
cmc
sti
hlt
cld
dec
cwtl
nop
icebp
je
loopne
cmp
lahf
out
aam
std
sbb
inc
negl
jle
js
pop
mov
dec
and
stos
push
mov
xlat
outsb
rolb
sti
mov
lods
fcoms
lret
ja
mov
fisttpll
pop
daa
cmc
mov
fisubs
enter
sub
ja
sahf
mov
xor
mov
fdivs
std
inc
lcall
fcomi
add
das
fwait
enter
or
cmc
jecxz
ficompl
sub
push
mov
pushf
outsb
jecxz
cmp
cmp
cld
subl
cmpb
and
xchg
xchg
jmp
mov
jns
mov
xor
mov
into
or
jmp
adc
nop
pop
pop
xor
cmp
in
jae
or
stos
add
jnp
shll
dec
test
test
add
out
jge
xor
inc
call
jae
xor
add
sbb
cs
ljmp
and
pop
andb
xor
xchg
divb
mov
jg
mov
inc
sub
fildl
cmp
mov
dec
sbb
leave
fidivl
pop
insb
and
mov
lods
xchg
out
mov
out
mov
sbb
scas
mov
loop
pop
xchg
and
jecxz
ret
repnz
movsb
addr16
shll
lret
dec
pop
outsb
jge
xchg
sub
pop
mov
push
xchg
mov
pusha
imul
or
add
aas
mov
sbb
mov
adc
pop
add
rol
arpl
repz
pushf
sti
je
imul
test
push
imul
jecxz
jae
movsl
adc
mov
push
shll
js
push
insb
frstor
arpl
inc
in
lret
add
in
shrl
inc
sbb
xor
out
cmc
xchg
nop
xchg
or
test
dec
imul
sahf
xlat
or
outsb
testl
mov
add
dec
mov
xor
sub
inc
jmp
outsl
aas
imul
push
xchg
sub
dec
fistl
mov
cmpsl
faddl
jle
out
aas
jg
cli
inc
xchg
div
test
adc
mov
fdivl
or
pop
mov
mov
add
pop
and
aaa
and
rcrl
js
ljmp
adc
xchg
lahf
cwtl
fimuls
into
addl
dec
adcb
dec
or
mov
sub
inc
sbb
pop
or
ja
or
adc
cld
sub
int
mov
aam
cltd
outsb
imul
adc
es
loop
add
bswap
pop
fucomp
or
adc
sahf
adc
int3
and
movsl
xor
pop
mov
dec
mov
mov
inc
repz
lret
mov
flds
or
fs
cmp
rorl
test
leave
fcmovnb
stc
repnz
and
into
push
out
mov
sub
sub
push
cmp
xchg
and
fsubl
or
or
aad
pushl
arpl
jecxz
mov
inc
xchg
push
jge
inc
std
jbe
and
leave
je
out
pop
sbb
lods
enter
cmpsl
outsb
xchg
mov
sbb
push
sti
sbb
jne
stos
notl
fs
jg
cmpb
ljmp
ja
and
orb
sbb
xchg
dec
std
push
lds
push
scas
xchg
dec
cmp
dec
je
and
xchg
jne
cld
mov
popa
fldcw
leave
push
or
sarb
push
cmpsl
pop
int3
rcrl
dec
movsb
rolb
dec
inc
jg
or
test
insb
fisubs
or
loope,pn
dec
mov
mov
sub
inc
pop
aam
adc
cmpsb
mov
jmp
jbe
loope
pushfw
dec
icebp
inc
fs
inc
push
adc
and
rolb
push
dec
and
lcall
aad
enter
mov
push
outsb
pop
cmp
lds
and
adc
mov
stc
leavew
mov
pop
dec
addr16
push
ljmp
lods
mov
scas
inc
xchg
inc
fimull
rcrb
adc
inc
cmp
lock
push
jbe
bound
mov
and
inc
int3
stos
push
dec
sub
lret
adc
mov
sbb
and
jmp
lea
dec
sti
in
push
jg
adc
inc
fwait
decb
and
sub
xchg
hlt
push
lahf
jle
add
adc
repnz
call
xchg
sarb
hlt
mov
inc
cltd
push
and
cltd
adc
jo
sub
jl
push
jno
pop
mov
pop
pushf
scas
cltd
dec
aam
xor
dec
sbb
dec
jnp
repz
ss
lea
sbb
push
nop
mov
jbe
inc
scas
mov
popa
push
push
cwtl
outsl
and
testb
test
mov
pop
mov
repz
repnz
mov
testb
inc
bound
pop
call
xchg
and
xchg
mov
pop
sub
insl
push
mov
lcall
xor
or
jns
aaa
dec
xor
jbe
movb
inc
xchg
pop
cmp
pop
xchg
mov
cwtl
iret
inc
xor
cmp
jg
sub
mov
das
cmc
cli
inc
or
loop
mov
adc
cmpb
cmp
dec
cmp
and
es
cmpsb
mov
xor
cwtl
testb
add
insl
mov
mov
test
mov
scas
bnd
stc
aad
cli
loop
xor
fildll
xchg
mov
inc
sub
subb
mov
adc
mov
mov
jp
pusha
xor
loope
ljmp
aas
adc
push
xor
xchg
jle
mov
sub
out
test
pop
and
mov
lock
add
push
shl
mov
ljmp
aad
sub
les
jo
push
mov
hlt
bound
iret
xchg
pop
shlb
and
add
add
xchg
mov
push
jl
cwtl
cmp
arpl
xchg
jecxz
xchg
sub
outsl
imul
repz
lds
test
xor
sahf
or
into
cmc
inc
xor
jb
mov
bound
test
sbb
popf
dec
xor
cmc
fimuls
jo
sahf
lods
mov
shl
cmp
call
mov
cmp
jmp
lea
ljmp
xchg
repz
cli
sub
test
in
push
add
not
sub
xor
push
mov
and
sub
rcll
adc
adc
mov
cmp
popf
xchg
test
bound
push
shll
bound
adc
dec
lods
and
call
loop
or
imul
inc
jecxz
and
or
dec
push
je
dec
icebp
nop
int3
xchg
lock
xchg
in
daa
push
nop
mov
ljmp
jnp
adc
mov
jle
cld
loop
push
ss
and
add
jp
imul
ficompl
ss
add
and
xchg
fdivr
mov
add
ja
lds
loopne
mov
mov
aad
pop
decl
pushf
inc
jecxz
ret
aam
sahf
dec
mov
push
test
imul
pop
jp
mov
xor
dec
imul
ret
popf
inc
xorb
cmp
int
ja
xor
jnp
adc
ds
cmp
jg
sbb
sbb
jno
dec
stc
dec
cld
adc
loop
pusha
imulb
cmc
lret
push
stos
js
xor
mov
xorb
lcall
dec
out
or
mov
movsb
test
mov
mov
mov
bound
jno
test
mov
in
nop
or
adc
dec
jl
out
xchg
mov
mov
push
cmpsb
fistpl
fs
pop
adc
in
aad
and
bound
add
mov
adc
push
cmc
fnstsw
popf
cmp
test
xchg
sbb
enter
xchg
cwtl
lods
cld
push
ficomps
xchg
jge
dec
pop
mov
adc
jb
pop
pop
cltd
rcrl
pop
pop
into
lds
movsl
mov
enter
test
sub
das
in
test
in
sbb
cld
out
fwait
lods
loopne
dec
lock
sub
mov
mov
lret
add
test
push
arpl
sbb
scas
movsb
in
and
ss
js
lret
pop
lea
cmp
or
mov
testl
jle
enter
enter
pop
xchg
loope
pushf
push
and
fldenv
scas
out
xor
pop
pop
jmp
cs
push
xchg
dec
jg
cmpsl
jae
add
push
push
pop
ss
aaa
pop
sub
xchg
hlt
cmp
mov
lret
inc
or
loopne
or
mov
fwait
mov
and
pop
sti
ret
xor
inc
in
rcrl
mov
lock
xlat
lret
iret
push
popf
push
inc
xorb
xorl
push
lods
enter
cltd
jne
repnz
ds
jmp
inc
jmp
mov
fnstenv
push
xor
jp
xor
inc
pop
stos
dec
out
lods
cld
jmp
xor
dec
jle
lret
xchg
push
mov
mov
lcall
xchg
mov
imul
lock
mov
iret
fldcw
jl
push
pop
daa
outsl
lret
pop
js
xchg
cmp
mov
not
aad
add
fimull
xor
nop
nop
push
test
sbb
lods
fidivrl
lds
mov
jbe
mov
mov
pop
lcall
mov
jmp
add
faddp
pop
mov
fucomi
xor
mov
push
lds
lds
dec
outsb
sahf
popf
fwait
mov
inc
sub
outsb
aas
push
stos
mov
mov
jbe
gs
pop
pusha
and
adc
mov
adc
push
inc
sbb
es
cmp
inc
out
and
std
fs
cmp
inc
outsb
pushf
push
push
pop
adc
popl
xor
shrb
adcb
inc
sub
in
sbbb
dec
int
leave
xchg
cli
push
jne
xor
mov
rcll
out
fmul
and
mov
cmp
shll
out
xchg
sub
stc
out
sarl
or
hlt
xlat
inc
pop
sbb
jge
js
xchg
jns
inc
lods
sub
inc
leave
mov
mov
rcrb
jbe
lds
not
fdiv
dec
fcmovnu
scas
insl
adc
sarb
xor
inc
fsubrp
cli
xor
cltd
xor
loop
mov
and
call
enter
mov
and
xor
js
or
cmp
xchg
cwtl
hlt
pop
sbb
fnstsw
in
out
jbe
out
push
add
jg
jp
or
mov
ss
icebp
add
clc
pop
xor
lods
cmc
xor
movsb
or
inc
popa
lock
jmp
pushf
mov
enter
mov
mov
rcll
jmp
daa
or
adc
dec
imul
or
in
add
pop
adcl
pop
call
sub
xchg
sarl
xchg
loope
stc
dec
jmp
lea
mov
sub
fcompl
in
cli
enter
xor
test
jns
xor
adc
ljmp
mov
or
shll
cli
inc
pushf
fldl
xor
push
lret
push
fcoms
in
push
or
movsb
adc
scas
es
add
es
mov
scas
stos
fimuls
inc
pop
jecxz
in
jo
outsb
test
lock
dec
pop
or
daa
pop
fimull
das
inc
je
or
repz
movsb
adc
in
mov
fcompp
ljmp
lea
daa
adc
dec
push
outsl
fld
fsubrl
cld
sbb
cmpsw
xor
cmp
popf
push
sub
test
mov
fnstcw
test
and
arpl
xlat
fwait
in
mov
arpl
scas
fists
jmp
xlat
push
cltd
mov
adc
std
ljmp
jns
sub
dec
addb
in
mov
sub
add
xchg
bound
xchg
xchg
adc
cmp
sub
out
jno
mov
push
enter
dec
or
ds
push
inc
push
les
jge
push
testl
push
aam
mov
xchg
addr16
mov
jne
faddl
popa
xor
inc
js
lahf
cwtl
fnstsw
call
mov
jp
pop
dec
loop
fmuls
mov
mov
and
cmp
sarb
int
lods
mov
or
or
test
cmpsl
gs
rorl
pop
daa
inc
cmp
cli
aas
cmp
fwait
push
scas
adc
or
jb
push
daa
inc
inc
pop
lods
imul
fs
test
call
stc
pop
jno
push
pop
filds
stos
cmp
sti
insl
mov
xlat
sahf
mov
mov
repz
shr
ret
sbb
add
leave
xchg
fwait
adc
xchg
xchg
outsl
push
push
xchg
mov
repz
pop
xchg
sub
std
and
enter
mov
pop
xchg
lcall
cli
outsb
aas
mov
insb
dec
push
data16
daa
in
mov
inc
arpl
pop
push
mov
mov
cmpsl
test
or
cmp
jae
sub
into
loop
fld
shrl
dec
jecxz
into
xchg
jno
ss
cmp
xlat
pop
stos
push
push
std
out
or
xchg
fsts
mov
scas
mov
std
pusha
scas
xchg
mov
inc
pop
jb
mov
and
sub
inc
push
and
adc
xchg
pop
addb
sbb
sti
aad
cwtl
dec
add
pop
jne
or
pop
cmp
mov
filds
mov
mov
push
cmc
rcrb
out
nop
popa
or
nop
js
mov
in
popa
or
cmpsb
pop
cwtl
das
xchg
cmovnp
je
inc
shlb
fwait
loopne
and
enter
pop
stos
fisttps
jae
xor
and
stos
and
xor
fwait
push
sti
dec
mov
or
push
hlt
jno
lea
fs
adc
fdivl
jno
dec
xor
hlt
gs
sub
ficomps
mov
js
or
sahf
fwait
add
mov
pop
fldenv
dec
add
clc
rorb
or
sub
lea
cld
cmpsl
mull
mov
jmp
jno
jl
mov
imul
adc
dec
add
pop
pop
repnz
mov
xchg
mov
adc
sbb
sahf
push
iret
and
cmpsl
jle
cmpsb
lods
and
roll
inc
cmp
insb
sub
cmp
into
sar
mov
data16
sbb
ret
invd
inc
dec
mov
push
sub
lds
clc
pop
lahf
adc
pop
sub
xchg
add
xlat
sub
fcomps
dec
push
aaa
ret
lret
fdivrp
mov
imul
lret
ljmp
loope
daa
call
sub
cmp
ljmp
test
into
movsl
xchg
ja
sti
jmp
inc
push
sbb
stos
mov
cmp
and
adc
ret
repnz
arpl
ja
xor
inc
imul
xor
dec
xchg
jns
rorb
insb
sbb
ret
jle
ds
dec
adc
imul
xor
clc
lods
imul
adc
in
dec
sbb
jbe
pop
ljmp
jns
mov
push
stc
test
xor
lret
fcomps
mov
pop
mov
jo
xor
mov
xor
push
sbb
add
pop
sbb
sarl
lods
xchg
add
and
insl
dec
sub
push
sub
mov
arpl
push
jno
pushl
pop
lcall
arpl
add
dec
cli
neg
out
pop
std
xorl
jmp
mov
xchg
pop
cmp
sub
cmp
or
bound
xchg
push
push
icebp
es
out
fwait
pop
sahf
enter
testb
jo
out
inc
je
push
and
insl
mov
inc
mov
mov
inc
mov
xchg
mov
sbb
in
sbb
sub
sbb
ja
call
cmovnp
sahf
cmp
and
rcll
js
into
arpl
sub
sub
std
mov
dec
push
fs
cld
shr
mov
nop
ja
aaa
ljmp
nop
sbb
mov
adc
jae
mov
outsl
push
cmp
jnp
mov
testl
xchg
add
xchg
jle
pop
cld
mov
jne
xchg
inc
icebp
and
xchg
cmp
gs
pop
pop
add
pop
leave
push
addl
push
dec
or
add
pop
loopne
fstps
push
scas
jne
jp
insb
sahf
addr16
clc
mov
sbb
add
or
mov
push
jo
sar
sbb
or
ja
out
lds
aaa
push
bound
mov
xchg
daa
sbb
cmp
push
cmc
test
std
dec
ljmp
in
andl
dec
outsl
fiaddl
jb
daa
xchg
dec
adc
fcomp
fcmovnb
xchg
stc
dec
pop
adcl
pop
dec
arpl
sub
ret
xchg
or
mov
rorb
push
inc
cmp
test
sbb
inc
xchg
rcrb
ret
call
push
sbb
adc
add
ljmp
ljmp
push
loop
xor
in
mov
aas
mov
cmp
mov
test
jbe
imul
ret
dec
ret
stos
xchg
scas
jg
jmp
add
or
xchg
stc
or
inc
xor
jo
fxtract
dec
sub
push
mov
sbb
scas
outsb
sbb
fs
call
pop
push
pop
sbb
fucom
out
sub
divb
cmpsl
out
lahf
mov
out
pushl
ret
inc
movsb
lods
jne
push
lcall
shlb
in
fwait
testl
mov
mov
lock
or
sbb
mov
test
push
js
out
push
sub
push
and
mov
into
enter
sbb
push
inc
xor
mov
sti
pop
fs
js
aam
xchg
loop
jb
setns
xor
pop
enter
and
sbb
fs
loop
push
jle
jns
mov
pop
sbb
pop
adc
mov
outsb
push
xchg
testl
jmp
jns
lock
jle
nop
jg
dec
bound
in
cs
xchg
sub
and
mov
add
js
idivb
inc
xor
in
test
pop
les
enter
xor
enter
inc
insl
xor
pop
icebp
fsub
loopne
jno
inc
pop
shll
pop
rcl
or
stos
push
frstor
movsl
mov
dec
nop
std
pop
int
jns
add
cwtl
push
mov
add
push
sbb
mov
push
xchg
push
fdivr
inc
nop
test
pushl
pop
lahf
mov
subl
push
add
lods
clc
sbb
jmp
mov
push
mov
jl
fisubs
into
nop
ss
or
mov
adc
jp
fneni(8087
orb
pusha
pop
mov
xchg
daa
sub
pushf
mov
inc
ret
cmpsb
and
ljmp
repnz
adc
xchg
jl
adc
in
movsb
jle
fadd
cli
mov
lds
jno
adc
sahf
jns
jmp
push
push
jmp
inc
sbbl
dec
fldenv
dec
leave
or
cmpsl
dec
outsb
jge
ja
js
add
cmp
xlat
dec
push
sub
mov
out
push
clc
pop
mov
rcr
jmp
xchg
shlb
inc
fcomp
dec
icebp
cmpsb
std
into
data16
sub
jecxz
arpl
sub
pop
aas
jae
repnz
stos
mov
add
sub
hlt
cli
movsl
jmp
inc
iret
jmp
out
adc
stos
pop
xchg
lods
lret
jge
fs
out
orb
insb
jb
pop
add
mov
mov
ss
jno
ds
in
cwtl
dec
lods
mov
cmp
movl
popa
test
outsl
sarl
pusha
sarl
roll
and
xor
rclb
je
ds
sahf
dec
xchg
cmc
cmpsl
test
inc
stc
adc
sbb
push
add
clc
les
pusha
popl
mov
push
add
inc
icebp
jne
dec
or
sub
mov
lds
mov
jge
adc
adc
push
adc
mov
jg
jb
jno
fdivl
fisubl
sub
push
jne
sbb
popf
mov
lret
mov
inc
rcrb
dec
sbb
xchg
rcrb
mov
mov
cmpb
inc
inc
lret
in
push
ljmp
sub
mov
mov
pop
lods
mov
xchg
inc
cmpsb
les
mov
push
mov
inc
out
cmpsl
mov
mov
je
cmpsb
cltd
xor
xor
dec
adc
or
stos
cmp
mov
outsl
pop
sub
sub
loope
pop
sahf
data16
movsb
xchg
rcl
mov
lea
inc
adc
inc
xor
mov
jb
fchs
inc
ljmp
cmp
pop
aam
adc
test
insl
lds
cli
xchg
fiadds
adc
repnz
jb
inc
sbb
pop
shrl
push
cmpsb
call
or
test
lock
ja
roll
pop
aaa
arpl
dec
int
adc
adc
mov
push
mov
inc
adc
xor
mov
std
ljmp
outsb
ds
jae
out
mov
stos
mov
jns
shrl
leave
or
jle
sahf
xchg
ret
lcall
lea
stc
icebp
dec
adc
push
push
inc
fbld
sbb
xor
add
ljmp
arpl
mov
jne
push
outsb
mov
iret
push
and
dec
sbb
xchg
scas
loope
inc
and
lret
adc
sti
out
cmp
push
mov
cmpb
rcrl
mov
mov
ja
add
lods
andps
popl
jb
push
loope
push
mov
xchg
mov
pop
sub
in
mov
stos
in
ss
and
sbb
stc
adc
decl
aas
mov
pop
inc
shr
cmp
dec
aaa
sub
adc
mov
out
xchg
fucomi
loope
in
in
leave
xor
pushf
inc
jp
cmp
mov
add
xchg
jb
subl
cld
ljmp
je
mov
cmpsl
std
mov
xor
push
cmp
gs
fbstp
push
sbb
inc
mov
fcomi
imull
hlt
lret
push
je
mov
mov
sub
xchg
loopne
out
js
xorl
leave
mov
je
fisubl
cmp
mov
int3
mov
mov
pushf
and
sbb
pop
inc
jg
mov
sub
cmp
xorb
movsl
push
sbb
test
and
sahf
dec
ja
inc
xchg
push
imul
jb
incb
lods
notb
or
cli
aam
jae
jb
lahf
and
fsubl
xchg
pop
mov
sbb
adc
dec
lsl
setb
or
mov
andb
in
cmp
cmpl
cs
jae
pop
and
sbb
js
in
pop
mov
adc
cmp
push
imul
cmp
xlat
leave
push
cmpsl
jb
push
mov
data16
jle
sbbb
lret
fcomps
sbb
adc
xor
rcrl
dec
out
shl
pop
in
xchg
in
aaa
gs
push
xchg
or
sub
fcmove
mov
ljmp
fdivrs
dec
add
cmc
adc
or
and
popf
int
lds
push
xor
pop
pop
test
inc
and
sub
fptan
add
adc
xor
stc
shll
mov
test
aas
xchg
outsb
sbb
mov
roll
sub
scas
cmovp
mov
mov
push
pop
mov
pop
fs
jp
push
pop
cmp
jmp
subl
cs
dec
lret
cld
xchg
sti
jecxz
inc
cmc
mov
rcll
fidivrs
cwtl
xchg
ret
rcrl
sub
inc
popa
mov
push
lock
xchg
mov
ds
mov
jno
lahf
fiadds
sub
xchg
lods
mov
std
xor
cld
inc
pop
and
stos
imul
xchg
pop
or
sub
and
mov
or
mov
cs
sbb
je
push
ja
mov
inc
cltd
cs
leave
pop
out
gs
shl
clc
fldenv
xchg
and
push
mov
mov
out
popa
test
or
rcr
aaa
popf
dec
jge
push
cmp
or
insl
jmp
out
jbe
xor
sbb
xchg
mov
jle
les
jne
nop
xchg
dec
pop
mov
insl
pop
imul
data16
clc
fwait
aaa
sbb
addr16
aam
imul
pop
sahf
pop
xchg
push
pushf
pop
pop
pop
push
sub
mov
xchg
fwait
sahf
inc
fsts
inc
pop
outsb
xchg
xchg
imul
cmp
and
and
or
enter
std
fsubl
dec
test
mov
cmp
scas
iret
xchg
leave
lret
dec
mov
xor
sbb
xchg
cld
repz
fistl
jne
mov
inc
cmp
xchg
movsl
inc
addr16
in
push
push
jns
dec
inc
xor
jae
mov
stc
adc
add
cs
sbbl
mov
inc
xor
add
divl
pop
jae
cmpsl
pop
scas
imulb
test
sbb
jae
out
pusha
xor
jecxz
ror
sub
dec
ss
add
imul
inc
stos
lock
or
mov
test
xchg
xchg
or
or
movsb
add
je
sub
les
outsb
fiaddl
xchg
jmp
mov
adc
ljmp
xchg
cld
lahf
sbb
scas
mov
inc
scas
cltd
clc
ja
mov
push
out
dec
or
les
nop
sub
cmp
mov
adc
movsb
and
or
data16
xor
sbb
repnz
sbb
arpl
movsl
xor
out
test
aas
shlb
cli
notb
inc
shlb
mov
loope
inc
xor
mov
std
jle
dec
int3
pop
mulb
or
sbb
jl
dec
repnz
repnz
cmp
mov
xchg
in
lahf
jne
popf
arpl
pop
dec
sti
cmpsl
dec
inc
int
jb
push
inc
adc
ror
push
stc
jp
xchg
push
cmpsb
js
sub
je
in
or
xchg
pusha
cmp
push
xor
lods
mov
insb
aam
xchg
push
mov
mov
fwait
imul
in
mov
in
jae
cld
sbb
pusha
test
jp
cmp
fwait
dec
and
xlat
or
stos
negb
push
mov
std
movsb
test
out
fnstenv
lods
xchg
test
out
sbb
mov
ljmp
mov
pop
repz
or
insb
sarl
lds
sarl
mov
cltd
cltd
adc
call
mov
aas
movsl
jmp
aas
inc
ljmp
jg
dec
and
mov
aad
nop
inc
pop
push
stc
dec
test
mov
leave
inc
jmp
add
stc
adc
jae
pop
inc
cmp
mov
ficompl
jg
mov
std
scas
aam
xlat
lods
push
mov
mov
sbb
xchg
cmp
cmp
xchg
or
adc
mov
pop
lds
in
insl
adc
cmpsl
pop
insb
lahf
pop
faddl
inc
sarb
lcall
or
inc
test
mov
sti
addl
ss
mov
test
mov
leave
cmc
adc
pusha
add
inc
insb
mov
out
cmp
adc
sub
repz
xchg
xchg
dec
dec
xchg
jle
adc
push
adc
fcoml
mov
mov
loopne
sub
imul
popf
loop
mov
popa
dec
aas
push
sub
movsl
mov
inc
and
pop
idivl
inc
and
xchg
data16
jno
ret
jle
mov
dec
rcrb
or
cwtl
add
mov
and
add
fldcw
pop
dec
addr16
hlt
loope
lret
movsl
ret
fs
push
fidivrs
popa
ja
pop
popf
shll
frstor
sahf
add
enter
push
insl
xchg
test
fwait
add
xor
mov
cmpsl
ja
mov
ds
jnp
insb
pop
test
std
out
dec
into
inc
jbe
ficompl
fbld
adc
sub
insl
cmp
ss
adc
faddl
int3
test
sarl
xchg
lret
push
or
or
sbb
push
lahf
push
jmp
or
jbe
fisttpll
jns
mov
aad
into
hlt
fidivrs
adc
decb
push
fisubl
popa
out
jns
ljmp
arpl
out
push
inc
jmp
push
imul
ret
mov
loopne
xchg
lods
push
into
adc
jl
idiv
inc
in
les
mov
lock
neg
xchg
sbb
and
and
data16
pop
out
mov
ret
push
fcmovbe
mov
pop
adc
test
sbb
shl
inc
dec
pop
lock
lret
ret
into
scas
mov
repz
es
dec
mov
shl
xchg
jno
jbe
cmp
push
repnz
decl
out
clc
movsl
adc
insb
clc
inc
jmp
adc
push
or
mov
mov
or
mov
pusha
inc
push
xor
js,pn
lds
inc
repnz
rcrl
jecxz
cwtl
add
mov
xor
dec
xor
push
pop
lds
mov
imulb
pop
dec
adcb
mov
lret
out
jne
adc
push
mov
pop
lret
dec
scas
stos
pop
cmp
jle
push
lahf
movsb
push
int3
add
xchg
ja
sub
mov
repnz
dec
add
ljmp
leave
dec
daa
or
mov
movsb
fildll
fdiv
ja
mov
and
xorb
pop
add
fsubrl
es
imul
jo
test
shrl
ds
in
loop
icebp
mov
jbe
add
add
dec
cmp
xlat
mov
sub
add
inc
cwtl
xor
jmp
mov
xor
adc
inc
leave
cmp
dec
sbb
adc
fmuls
ss
add
jo
dec
mov
jg
idiv
cli
test
incl
add
sbb
dec
daa
div
clc
lea
lcall
or
sbb
jmp
mov
jl
rcrl
cmc
ds
xchg
lahf
scas
sahf
insb
mov
pop
rcll
xchg
loopne
sub
out
icebp
push
mov
inc
dec
in
mov
add
inc
jb
loop
mov
push
adc
mov
pushf
pop
xchg
pop
mov
mov
push
inc
xchg
adc
aas
les
sbb
lahf
nop
outsb
cmp
mov
std
js
shrl
pop
scas
mov
lods
add
inc
sbb
in
insb
jbe
out
test
daa
xor
pop
mov
xchg
push
xchg
cmp
add
scas
inc
mov
insb
xor
arpl
mov
xor
mov
fwait
adc
jns
aas
pushf
fcomps
xor
fdivrl
jo
inc
push
pusha
adc
or
lods
mov
imul
add
pusha
fdivs
mov
std
ss
mov
lea
hlt
into
fwait
in
cmpsb
adc
xchg
mov
arpl
sahf
mov
fsubrs
js
ficoml
cli
test
outsb
mull
mov
pop
lcall
into
xor
xor
pushf
dec
inc
push
loopne
rol
cmpsl
pop
push
pop
fs
inc
mov
and
pop
icebp
das
xchg
sbb
add
xor
jae
je
xchg
push
sbb
xor
mov
adc
stos
jl
hlt
pop
push
mov
out
dec
dec
addr16
test
sahf
imul
imul
xchg
xchg
and
pop
les
stos
ja
cmpsb
sbb
mov
hlt
jge
mov
cwtl
xchg
inc
test
je
test
add
cltd
shll
add
jbe
xchg
xorb
popa
inc
sbb
test
lods
addl
push
sub
adcl
xor
lret
sub
imul
popf
dec
jne
adc
xorl
adcl
and
adc
lock
cmp
dec
pop
xchg
sub
sbb
xor
sbb
ds
shlb
pop
jle
ret
ret
pop
rorb
out
stc
loope
mov
lret
fadd
arpl
fbstp
inc
cli
pop
rclb
ja
sbb
mov
pop
lods
std
loope
push
repz
xor
mov
lret
mov
fs
mov
ljmp
stos
outsb
adc
frstor
push
fnstenv
and
data16
mov
lock
aaa
popl
push
es
rcr
push
add
dec
inc
sbb
lret
std
loopne
sahf
jl
mov
xchg
xlat
lods
call
aas
out
loopne
cltd
mov
jnp
jae
cmp
outsl
or
dec
push
lret
inc
mov
push
jg
xchg
xchg
mov
mov
jns
das
xchg
sub
mov
rcrl
push
xchg
fwait
movsb
inc
dec
mov
repnz
scas
std
or
adc
inc
and
sub
enter
push
dec
and
cmp
mov
jl
mov
cmp
test
cld
adc
pop
dec
jge
adc
insb
fsub
adc
push
dec
xor
inc
xchg
xor
outsb
inc
mov
adc
in
jmp
inc
test
notb
lret
cmp
push
rolb
cmp
dec
addr16
adc
inc
ret
push
test
out
adc
es
in
push
mov
int3
push
imul
xchg
leave
test
inc
testl
push
add
xor
adc
in
imul
cmpsl
jp
lods
jbe
jmp
notl
pop
fistl
cmpsb
aad
fcomps
xchg
icebp
fisttpl
insb
inc
mov
pushw
push
sub
ljmp
adc
push
lret
sbb
adc
mov
arpl
inc
les
repz
shll
lea
sti
cmp
xchg
ljmp
pop
mov
incb
xchg
push
sbb
mov
ljmp
mov
fcmovbe
insb
sbb
fstps
mov
pusha
popl
mov
jb
hlt
push
pushf
das
jnp
jno
sahf
ret
not
addr16
rorb
rclb
cwtl
fwait
std
sbb
testl
mov
mov
xor
outsb
mov
outsb
out
adc
repnz
jb
fsubrs
repnz
mov
dec
fsubrs
rcr
add
jo
out
ljmp
pop
mov
jle
aaa
pop
mov
mov
mov
das
cmpl
mov
push
xchg
fldenv
jmp
push
pop
jae
sbbb
xor
hlt
loope
loop
fidivl
mov
cs
shl
ret
and
pop
inc
mov
inc
xchg
rcrb
jb
mov
stos
xchg
iret
jmp
add
jg
lcall
xor
pop
call
outsb
sti
push
stos
xor
cmp
xchg
cmc
push
lock
adc
mov
pop
addb
repz
or
mov
insl
xchg
aaa
cmpsb
cltd
and
scas
aam
out
pop
xchg
aam
pop
pop
inc
loope,pn
mov
cld
cmovl
imul
mov
aaa
dec
or
test
jmp
outsb
stos
adc
mov
xor
mov
leave
flds
int3
cmp
test
movsb
add
loopne
bound
lods
lret
push
jne
or
add
les
mov
out
sbb
fwait
dec
cmpsb
jecxz
push
push
adc
fisubrs
pop
xor
or
decl
dec
bound
pop
mov
mov
movsb
in
stos
cmp
js
cmp
daa
enter
and
sbb
cmc
dec
ja
jo
fnsave
cmpsb
dec
push
cmp
shrl
sbb
mov
inc
pop
fcoml
pop
xor
xchg
xor
xor
mov
bound
inc
cli
or
fcomps
and
paddsw
jo
add
iret
in
push
in
cmpb
incl
lret
sbb
stos
sbb
mov
jo
in
lods
bound
inc
cmpsl
arpl
idivl
dec
clc
scas
repz
adc
jl
aas
in
sub
lret
movsb
je
xlat
add
sub
aad
daa
sub
repnz
stos
sarb
js
pop
inc
mov
mov
popa
sbb
sub
xchg
fs
imul
push
adc
push
xchg
cwtl
pop
dec
test
and
cld
iret
inc
add
cmp
push
cli
add
aas
jmp
mov
nop
and
push
js
fstl
cmp
jge
aas
or
rclb
leave
push
int
lock
pop
in
cmp
jmp
inc
mov
add
jne
in
arpl
mov
push
shlb
fbld
mov
adc
and
jg
xor
cmpsl
jmp
js
fadd
fmulp
inc
popa
mov
inc
sbb
imul
xor
stos
mov
stos
mov
dec
pop
xchg
sbb
jbe
pop
and
pop
stos
out
daa
je
stos
outsl
nop
pop
xchg
mov
inc
test
cmp
shlb
xor
jmp
adc
or
fs
mov
pop
xor
pop
jbe
fsubl
ds
imul
test
add
mov
imul
hlt
lods
popl
dec
int
sub
push
cmp
loope
hlt
dec
xor
lods
sub
scas
sub
mov
push
loop
jo
dec
xchg
scas
cmp
scas
ja
or
and
fmul
daa
movsl
mov
push
add
mov
push
pop
cmp
movsl
test
push
cmpsb
and
mov
mov
mov
dec
lahf
push
fiaddl
insl
mov
jp
inc
push
cmp
jecxz
jp
cmpl
inc
lcall
jbe
int
ret
fldt
mov
hlt
fcomps
and
push
cmpl
push
ljmp
inc
insl
inc
sbb
adc
mov
loope
dec
and
bound
adc
sbb
sbb
jns
and
sbb
loope
daa
pop
xor
icebp
imul
sbb
mov
jnp
pop
sub
loope
cmc
mov
test
in
and
inc
cmp
mov
dec
cs
cmp
push
pop
fsub
fwait
push
sub
mov
add
jge
outsb
xlat
dec
pop
imul
push
jge,pn
jae
and
inc
add
cwtl
andb
or
stc
inc
insl
cmp
mov
jle
outsl
and
jl
xchg
pop
jno
iret
push
insl
push
lock
sarl
test
ficoml
jmp
js
jnp
inc
cmp
jmp
jl
test
out
cwtl
into
lds
xchg
and
sub
and
dec
inc
popa
lret
push
dec
mov
pusha
cs
out
mov
cmpsb
lods
xchg
repz
add
inc
dec
test
jae
pop
aad
sbb
or
inc
iret
adcl
ret
lcall
mov
jecxz
rcrb
shll
outsl
fsubrp
lcall
pop
mov
rorb
ds
lods
xor
orl
xor
or
insb
add
mov
sar
ret
xchg
xchg
dec
loopne
xor
fsubrs
imul
sahf
xchg
outsb
dec
mov
aam
jb
mov
push
sarl
jne
insl
mov
rolb
inc
xor
pop
mov
cmpsb
xor
fcoms
cmpsb
stos
fnstenv
dec
mov
loopne
call
mov
scas
push
push
or
gs
aam
pop
mov
icebp
jl
mov
dec
mov
scas
and
sub
clc
sbb
xchg
xor
iret
sub
push
nop
xchg
data16
cwtl
pop
lock
sbb
data16
fs
xchg
test
pop
mov
jbe
pop
pop
movsl
or
adc
cmc
pop
sub
jmp
dec
sbb
xchg
sbb
mov
dec
or
lea
insl
test
push
push
or
insl
jns
sarb
add
insb
pop
xor
dec
jecxz
pop
cmpsl
in
sbb
insb
cmpsb
jb
add
dec
shll
daa
sbb
out
jg
sbb
sub
hlt
sbb
push
add
push
mov
lods
into
es
and
in
ret
pop
cmpl
mov
inc
xchg
jp
aam
pop
fnstenv
popa
dec
lahf
sbb
in
adc
xchg
push
js
jl
push
cltd
nop
insb
inc
rcrb
aaa
test
push
adcb
cmc
push
movsb
sbb
and
outsl
fs
nop
sbb
adc
add
adc
popa
and
xor
adc
sbb
aaa
push
adc
mov
xchg
xchg
rep
repnz
aaa
iret
xchg
push
sti
bnd
sub
push
call
add
sbb
mov
or
movsb
andl
dec
mov
or
nop
mov
cli
cmp
inc
shl
xor
sub
insb
fsubrs
add
cli
lea
sbb
xor
call
pop
dec
out
lahf
push
adc
cmpsb
int
cmc
pop
adcl
sub
cmp
out
inc
outsl
add
scas
push
mov
scas
push
mov
aam
add
sbb
mov
fadds
sub
stos
fstpt
mov
mov
nop
mov
sbb
fsubrp
push
add
inc
mov
mov
sti
mov
out
jno
xchg
push
rolb
pop
cmp
std
mov
push
icebp
sub
mov
push
push
in
lahf
popf
cmp
pop
cmovle
xor
sahf
push
into
in
push
adc
add
push
mov
scas
push
mov
push
loope
dec
cwtl
or
sbb
repz
dec
adc
add
xchg
jle
xchg
outsb
shl
test
add
xchg
or
mov
cs
push
imul
jp
adc
add
add
push
rcr
leave
in
mov
push
adc
and
jle
push
add
adc
cmp
and
hlt
imul
mov
xchg
mov
or
push
jge
xchg
into
ljmp
mov
addr16
dec
sub
sub
daa
mov
cwtl
lods
mov
mov
or
fwait
push
jae
sub
lea
test
cmp
mov
cwtl
sahf
ss
into
mov
add
and
rcl
daa
addl
aad
dec
mov
jb
mov
pushf
mov
cmp
push
negb
pop
rcrl
mov
loop
add
lock
bnd
movsl
or
movsl
call
push
popf
adc
push
cwtl
ds
into
fsubrp
pop
stos
pop
bound
inc
cmp
imul
push
test
mov
xlat
xchg
and
imul
rcrl
jae
jle
jmp
dec
push
in
pop
mov
pop
mov
sbb
cmp
cmpsb
mov
jo
fimull
push
les
outsl
loop
cmc
sub
loope
jg
insl
rcr
xchg
and
mov
in
xchg
ss
push
mov
cmpsl
test
mov
lds
sbb
aas
add
jecxz
fildl
cmc
xchg
fchs
repz
or
leave
jns
loop
loope
incl
lcall
enter
subl
push
or
in
aam
jb
cltd
test
pop
jl
inc
pop
pop
push
xchg
in
dec
lret
sarl
cmp
out
add
mov
pop
loop
ret
and
lret
loopne
stos
sahf
jno
arpl
fbld
data16
fsincos
push
xor
inc
shlb
pop
pop
xlat
cmp
jp
fildl
add
sub
leave
pusha
daa
iret
gs
cmc
push
inc
nop
test
or
adc
dec
fnstsw
xor
sbb
sti
xchg
sub
out
mov
sub
fdivrl
xor
mov
xorl
mov
pop
pop
xor
lahf
repz
imul
out
adc
sbb
dec
pop
add
jmp
pushf
in
push
aaa
pop
les
add
jb
inc
fcmovnu
ljmp
cmp
lods
fcoml
aas
sub
xor
das
outsb
mov
mov
test
cmp
ret
movsl
add
outsl
adc
mov
je
rorb
subl
repz
mov
and
push
out
rcrb
push
sahf
push
loope
imul
inc
pop
or
jo
jmp
dec
test
push
data16
sub
or
mov
hlt
jmp
inc
pop
into
orb
sbb
add
mov
int3
lret
scas
scas
lds
cmpsb
jo
dec
arpl
incl
push
js
push
sbb
mov
xlat
and
push
andb
outsl
pop
test
pusha
inc
adc
jg
jl
mov
lret
ds
sub
clc
loopnew
inc
mov
jb
xchg
pusha
add
adcl
mov
pop
inc
and
inc
into
rcrb
cmp
or
adc
je
cmp
lcall
bound
sub
mov
mov
mov
call
out
add
jbe
lret
mov
or
aam
and
pop
adc
and
sbb
and
popa
imul
adcb
aaa
jge
xchg
sub
push
jnp
jb
push
mov
stc
nop
shr
or
mov
inc
xchg
lret
test
or
subl
outsl
pushf
adc
ja
lcall
push
inc
test
push
mov
sbb
lds
js
psrad
and
cwtl
adc
ret
call
out
scas
lahf
dec
lods
dec
ret
dec
sti
shll
add
xchg
cmp
popa
sub
aad
je
aas
popf
inc
jp
cmp
jmp
xchg
insb
mov
std
clc
cmpsb
adc
fistl
dec
cmpsb
out
push
inc
push
mov
stc
push
sbb
loopne
hlt
pop
cmpsb
inc
bound
mov
loopne
pop
xchg
fs
mov
je
stos
std
and
std
es
jmp
lea
mov
cmc
jle
push
cwtl
ret
mov
jmp
jg,pn
jbe
xlat
sbb
out
ja
mov
in
je
les
out
scas
fwait
mov
mov
add
adc
pop
out
mov
add
hlt
xor
movhps
inc
mov
xchg
sub
push
sti
xor
lahf
and
cld
mov
jnp
cs
popf
inc
les
mov
and
pop
push
mov
and
mov
daa
aas
stos
sub
push
push
dec
aad
arpl
test
mov
and
rcr
test
jnp
xchg
fldt
mov
jge
xchg
pushf
sub
out
or
and
stc
ljmp
jae
roll
push
out
mov
jno
and
dec
mov
push
or
jge
enter
xor
inc
pop
push
imul
daa
leave
adc
outsl
ror
mov
leave
mov
lock
scas
sbb
add
aad
push
jns
mov
cmp
dec
sbb
lods
loop
dec
es
leave
and
shlw
orb
ret
nop
sbb
cmpsl
pop
mov
pop
push
dec
or
pusha
cwtl
push
cmp
add
cmp
lret
adc
pop
loop
test
and
popf
inc
movsl
xchg
sar
fimuls
test
inc
pop
out
mov
mov
push
mov
sbb
cmpsl
pop
jne
adc
in
scas
xchg
mov
xchg
es
and
das
push
mov
fwait
int
jge
pop
mov
jb
unpckhps
sbbl
in
stos
mull
cltd
add
js
out
xchg
leave
add
in
cld
fcmovne
mov
stos
dec
std
jns
mov
out
mov
insb
cli
push
dec
les
sbb
cld
jns
mov
dec
jbe
inc
lods
sbb
bound
xchg
jbe
call
cmp
inc
cmpb
or
xchg
pavgw
je
mov
jg
scas
scas
add
or
sub
fwait
ret
xor
or
insb
push
rolb
lea
daa
mov
add
add
shll
xor
push
faddl
call
add
jl
cwtl
stos
sbb
or
adcb
scas
outsl
pusha
push
push
dec
rorb
repnz
sbb
ja
iret
mov
imul
ja
mov
rcll
mov
cmp
rcrb
dec
das
inc
mov
and
adc
pop
push
ljmp
mov
cmp
jle
outsl
xchg
in
cmp
xchg
lret
out
mov
daa
inc
test
pop
sbb
push
jbe
push
mov
das
jle
adc
ss
xchg
xor
mov
jno
subb
mov
in
push
inc
xor
aas
pop
jns
mov
cs
jmp
xlat
adc
cmc
inc
xchg
xor
jp
cmp
leave
pop
cs
and
sbb
lods
mov
add
sub
out
aaa
sahf
adc
pop
xchg
add
nop
lock
lahf
jl
test
fiadds
jb
cmp
std
ret
xor
scas
mov
inc
adc
lds
fwait
ljmp
jnp
ret
sbb
rorl
inc
mov
icebp
notb
in
stos
lcall
xchg
mov
adc
push
xor
push
aad
mov
cmp
data16
lock
hlt
test
jle
test
mov
push
adc
test
hlt
push
sub
insl
in
cmp
cmp
pop
nop
push
mov
dec
jns
mov
les
jbe
mov
lds
mov
lds
popa
jecxz
repnz
xor
leave
popf
pop
fildll
mov
dec
int
enter
repnz
sbb
lret
jne
leave
and
dec
and
and
roll
stos
ja
pusha
je
push
or
ljmp
adc
inc
jo
mov
es
and
test
mov
cmpsl
fildl
in
sbb
xor
xchg
jnp
ss
stc
jae
ret
sbb
lahf
in
scas
movsb
mov
mov
adc
jmp
push
inc
fsubr
in
jne
lahf
leave
adc
fdivs
push
stos
pusha
fsubrs
int3
mov
and
pusha
add
dec
shrb
xchg
inc
mov
subl
sbb
hlt
sbb
mov
or
sti
mov
jmp
dec
cwtl
fdivrs
lcall
loop
movsb
rcl
pop
out
sub
rol
add
repnz
ret
jb
xor
add
push
sub
fldt
pop
push
push
in
int
adc
gs
mov
sbb
adc
rolb
pop
scas
fldlg2
dec
dec
pop
push
pop
test
xchg
loopne
and
test
sbb
or
inc
mov
inc
sub
mov
and
xor
ret
cmc
lcall
dec
cmp
add
mov
pop
les
pusha
push
push
scas
stos
and
cmp
jl
pop
bound
sub
push
push
cmpsb
pusha
mov
sbb
fimuls
out
mov
cmpsl
and
xchg
cs
fs
mov
mov
pop
sbb
sub
sti
add
and
xchg
in
sbb
mov
and
jp
fwait
xchg
mov
shr
mov
cmpsb
lds
jns
aad
mov
pop
adc
dec
xor
les
mov
je
addb
pop
xor
mov
out
pop
jnp
xor
mov
stos
pop
ljmp
and
add
mov
push
stos
and
fmul
in
cmpsl
inc
js
xchg
inc
stos
aas
mov
push
xor
inc
popf
push
fwait
iret
inc
jnp
xchg
mov
orl
lods
jp
or
leave
insl
in
push
aam
jmp
xchg
adc
xchg
pop
repz
addr16
sub
lcall
cwtl
insb
and
out
inc
in
shl
xchg
rcr
push
dec
mov
insb
jecxz
adc
movsb
cmp
insb
sti
adc
add
jmp
cltd
add
stos
lcall
xor
ja
dec
cmp
mov
stos
shll
fcmove
std
adc
out
and
push
push
rol
dec
mov
ds
pop
mov
fiaddl
mov
inc
xchg
mov
std
fisttps
jmp
inc
rcrb
cmc
fs
pushf
xchg
into
xchg
ja
pmaxub
mov
lods
jle
add
pop
into
cld
in
sub
inc
sub
mov
daa
xor
call
fucom
pop
mov
fsubrl
ds
mov
or
inc
mov
test
iret
enter
and
pop
sub
xor
insb
fistpll
fstps
pop
fists
pop
pop
sahf
int
add
daa
sti
in
enter
bnd
loopne
and
fld
jl
sbb
loopne
cwtl
mov
sbb
fdivrs
test
dec
push
mov
or
add
xor
xchg
loop
out
jne
loop
sarl
scas
enter
repnz
xorb
and
out
les
jmp
idiv
dec
inc
jmp
imul
push
aaa
aam
xchg
push
add
fcompl
push
dec
mov
popf
hlt
out
jne
popa
or
or
loop
mov
push
xor
imul
mov
inc
stc
sbb
sub
popf
mov
mov
add
fnstenv
dec
fiadds
cmpsb
sbb
xor
mov
sbb
mov
xor
sbb
dec
lea
xchg
cwtd
mov
arpl
cmpsl
ja
das
add
popf
ret
hlt
aad
adc
xor
loop
fildll
jl
in
push
sbb
sub
repz
test
or
insb
push
movsb
aam
into
stc
pop
je
arpl
mov
dec
pop
sbb
data16
cmp
inc
inc
dec
or
fdivs
mov
outsl
aad
jae
mov
dec
dec
arpl
jle
xlat
decb
mov
sbb
stos
sub
in
sbb
jle
outsb
enter
dec
pop
movb
lcall
sbb
loop
xchg
daa
inc
sub
cmpsb
mov
popa
sbbb
inc
xchg
dec
loope
xchg
cli
idivb
iret
push
inc
bound
mov
mov
imul
pop
xor
and
stos
out
popa
dec
adc
test
icebp
mov
lret
pop
jl
mov
xlat
inc
mov
jge
testb
mov
xlat
push
adc
jns
repnz
inc
mov
inc
pop
pop
repz
mov
stc
pop
jnp
push
xchg
pop
xchg
loope
test
mov
sti
jmp
cmp
xchg
lock
repz
hlt
cmp
lcall
jns
subb
cltd
cli
jp
push
mov
out
sub
lods
cmp
pop
xor
and
xlat
and
aad
cs
adc
subl
push
cmp
adcl
xchg
sbb
pusha
dec
pop
pop
and
jno
xchg
or
in
or
xchg
ds
mov
shrb
ss
adc
dec
sahf
mov
loopne
fidivl
push
xor
adc
outsb
and
lahf
pop
int3
xchg
or
das
mov
jb
loopne
pusha
fneni(8087
push
and
xor
test
sub
loop
out
inc
idivl
and
lret
jo
inc
hlt
or
test
xor
mov
adcb
jl
data16
dec
gs
int3
inc
sub
dec
push
jno
jne
mov
dec
aas
ret
fs
push
add
adc
xchg
dec
adc
add
shl
scas
jg
mov
in
dec
jb
ljmp
sbb
sbb
ljmp
test
mov
pop
pop
lret
jg
jne
push
mov
push
cmc
cli
in
repz
and
data16
scas
add
iret
stos
mov
test
movsl
xor
aam
les
insl
sbb
sahf
xchg
jmp
xchg
faddl
pop
mov
mov
scas
mov
jne
jg
call
mov
stos
jl
jo
push
mov
aad
jge
inc
mov
ret
cmc
sbb
int3
cltd
pop
cmpsb
cmpsb
or
push
fisubrl
mov
cld
mov
xchg
lahf
ss
int3
loopne
inc
or
out
mov
das
pop
mov
iret
in
adc
xor
loopne
lds
repz
sub
pushf
sbb
lods
in
ljmp
add
push
dec
mov
inc
cmpsl
aad
fs
xchg
push
sub
adc
jle
pop
add
stos
std
out
mov
icebp
addr16
xchg
sub
cmpsl
jecxz
mov
aas
adc
sub
ret
xor
je
scas
adc
dec
mov
rorl
sub
dec
cmp
gs
enter
int3
cld
and
lahf
add
jno
inc
push
int3
or
popa
divb
xchg
mov
mov
int3
mov
outsb
push
loop
fwait
xchg
push
mov
aad
adc
sarb
imul
test
inc
mov
imul
fildl
add
arpl
mov
jg
xlat
mov
adc
sahf
push
cld
pop
jle
stos
push
aam
mov
pushf
push
ret
sbb
aas
dec
cmc
push
xlat
adc
int
clc
jo
mov
lds
dec
xchg
or
sahf
mov
lods
test
dec
adc
sbb
scas
mov
xchg
scas
mov
mov
mov
stos
push
stc
sub
mov
lods
loopne
xchg
addr16
addr16
jo
push
pop
dec
popf
pop
and
aam
popl
inc
iret
gs
popf
jmp
push
in
push
sub
mov
lds
test
in
test
cmp
mov
ss
lock
ret
lock
sahf
test
insb
mov
std
scas
clc
jg
insl
es
jge
les
and
ljmp
push
xchg
fsts
inc
mov
loopne
push
sub
xchg
cmpsl
imul
or
int3
shrl
std
adc
rcrb
cmc
rcll
mov
or
lods
push
aas
or
je
push
inc
lock
and
push
gs
imul
subl
stos
fdivr
les
push
mov
js
cmp
out
sbb
aad
mov
inc
rcl
sbb
inc
jmp
cmp
in
stos
sub
int
dec
in
sbb
pusha
cmp
sub
and
mov
push
ds
cmp
mov
aad
push
addb
addl
dec
enter
mov
inc
jne
in
test
or
cli
xor
stc
out
repz
push
clc
lods
xor
imul
js
push
push
and
dec
test
inc
lcall
pop
test
jmp
insb
sahf
fsubrs
lds
dec
cmp
enter
pop
push
sti
leave
orl
mov
int
ret
adc
es
push
rcrl
push
out
mov
cld
pushf
inc
push
xor
mov
out
push
repz
mov
xor
pop
and
mov
adc
cld
jecxz
and
in
xchg
out
mov
out
jle
pop
xchg
add
inc
es
je
ljmp
push
rcl
push
test
test
daa
dec
cmp
sbb
je
mov
push
inc
out
pusha
int
lcall
and
push
jne
sbb
sbb
into
nop
icebp
inc
repnz
pop
leave
rcrb
pop
jne
dec
mov
mov
adc
adc
xor
adc
adc
or
lods
pop
jmp
mov
sub
test
xor
les
mov
mov
jge
add
mov
call
lret
xchg
mov
mov
gs
arpl
add
xchg
ror
cmp
ret
out
mov
push
inc
test
add
add
ljmp
and
push
gs
cltd
fwait
mov
sbb
int3
dec
cmpsl
test
lret
mov
scas
or
popa
sub
sub
and
test
out
cmp
mov
out
mov
cmc
in
xchg
pop
in
pop
pop
in
mov
frstor
pop
push
insb
push
jne
dec
dec
scas
push
rcrl
jbe
xor
push
sub
test
shlb
mov
fidivrs
pop
sbb
fldenv
leave
or
jmp
loop
inc
ja
lcall
das
push
push
or
dec
sbbl
add
popa
addb
mov
cmp
sub
insb
mov
and
loop
addr16
std
mov
andl
mov
inc
pop
sub
data16
std
jmp
in
pusha
fadds
sub
dec
xor
ss
mov
ds
mov
inc
cmpl
dec
jecxz
pop
adc
scas
mov
inc
dec
cmp
popf
daa
jns
and
mov
dec
stos
pop
push
test
cld
lea
pop
pop
addl
dec
repnz
rcrl
mov
inc
and
mov
pop
sbb
sub
es
mov
inc
popf
xchg
mov
adc
adc
bound
push
test
test
jecxz
pop
mov
test
push
in
hlt
fsubr
in
sbb
cmp
mov
loop
or
adc
xor
mov
test
inc
ds
stc
sbb
pushf
or
and
jmp
or
pop
pop
cltd
mov
mov
orl
ja
mov
rolb
fidivrl
lods
pop
sbb
scas
cmp
flds
or
jb
ja
fs
cmp
pushf
inc
mov
or
insl
icebp
jge
lea
jl
test
call
sbb
add
test
in
pop
dec
cwtl
dec
inc
ret
mov
ss
or
or
jnp
lods
ret
cmpl
je
popf
xchg
push
adc
dec
pop
sti
pop
and
jl
es
loope
call
mov
jns
aad
jbe
xchg
fs
sbb
out
out
dec
xor
stos
xor
sbb
mov
xchg
and
sbb
pand
sahf
int3
repz
test
ret
in
mull
fwait
or
mov
js
aas
inc
fwait
cmp
mov
loope
and
sarb
ret
into
xlat
dec
xchg
loopne
rclb
test
or
loope
arpl
adc
nop
jge
out
ja
sbb
ss
mov
insl
popa
or
out
shll
xlat
repz
int
and
pop
jp
testl
sub
jns
mov
fs
add
cmp
mov
or
inc
in
pop
mov
and
lret
out
dec
outsb
adc
xor
jo
jb
loope
cmp
jmp
cltd
cwtl
out
scas
or
sti
jle
ljmp
mov
lret
cmp
add
mov
mov
pop
int
add
fimull
pop
xchg
iret
lods
sbb
sti
mov
sahf
mov
and
or
jmp
outsb
bound
add
subb
push
push
rcr
mov
and
movsb
aaa
xchg
xor
iret
aaa
icebp
int3
sub
fucomi
xchg
push
push
jmp
std
adc
xchg
xchg
fld
lds
call
aaa
sub
add
out
pushf
sti
push
bound
pop
mov
data16
dec
into
andb
mov
enter
adc
fxch
lea
loop
mov
dec
mov
sbb
push
mov
out
arpl
fldt
mov
jle
sub
repnz
ret
insl
inc
lods
aas
test
push
stos
pop
pusha
and
nop
loope
pop
pop
xchg
cmc
fisttps
xchg
fidivs
xor
cmp
pushf
or
push
ds
add
divl
jge
int3
xchg
inc
cli
jecxz
je
mov
out
jb
imul
add
jle
mov
cmpsl
outsb
jno
cmp
sub
push
fimull
dec
rcll
pop
popa
movsl
cmc
pop
cmp
into
sbb
pop
mov
fisttps
mov
cltd
ret
add
lahf
pop
jns
lds
cmpsb
mov
sub
movsl
das
mov
pop
and
outsl
lock
cwtl
insl
divb
mov
repnz
imul
mov
daa
pop
push
aas
jne
or
out
adc
jecxz
cmpsb
nop
leave
hlt
stos
ret
adc
and
adc
mov
mov
adc
je
pop
js
dec
enter
push
aam
mov
xchg
inc
push
add
and
add
ss
lea
sub
imul
mov
jns
lock
aam
and
jp
push
sbb
enter
xlat
mov
pop
shlb
mov
es
pusha
xchg
pop
push
add
inc
adc
in
or
pop
js
lcall
push
mov
test
push
and
repnz
dec
clc
out
xorl
lods
leave
ret
xchg
iret
adc
add
sarb
inc
dec
cmp
pop
jne
mov
xchg
xchg
or
push
jge
test
or
mov
mov
out
jb
js
dec
adc
fcoml
add
inc
push
test
jg
push
arpl
rolb
lcall
addr16
test
lock
push
iret
stos
jmp
mov
pop
or
jg
pop
and
fisttpl
push
loopne
in
jp
xor
decl
mov
inc
loop
jp
stos
cmc
xchg
lock
adcb
sbb
sbb
add
inc
lock
inc
dec
xchg
add
mov
fldcw
outsl
sub
add
mov
dec
pop
mov
ret
sub
cmpsl
lds
push
xchg
jno
xorb
jge,pt
xchg
shl
les
loope
pop
popl
pop
pop
stc
in
sahf
loope
in
in
mov
fwait
xor
pushf
popa
xchg
xchg
mov
pushf
lret
or
stos
aam
mov
out
loopne
jecxz
pushf
sbb
cmp
adc
mov
sub
imul
fidivrs
or
cmp
loop
movl
pushl
fildll
cmp
or
xor
adc
push
loope
test
stos
addb
xor
jb
mov
and
cmpsb
adc
dec
push
xchg
dec
mov
stos
push
jmp
pop
std
das
out
fwait
aam
push
dec
cmc
cltd
dec
in
jb
push
dec
push
in
fwait
shll
or
gs
mov
jp
jp
xor
loope
inc
sbb
cwtl
and
orb
outsb
mov
mov
push
xor
jnp
mov
jl
cli
xor
dec
lods
mov
or
xchg
xor
inc
pop
pop
imul
inc
aad
xchg
push
xor
inc
dec
sbb
dec
add
aas
jns
test
pop
add
lods
mov
test
pop
xor
mov
decl
push
aas
dec
fwait
test
dec
push
out
gs
push
mov
insl
movsl
mov
lret
popf
insl
loop
cmp
xchg
mov
or
in
cmc
sub
fidivs
adcl
enter
cmpsl
arpl
leave
mov
in
movl
jnp
int
fidivrl
outsl
movsl
pop
mov
test
push
je
and
pusha
sbb
push
frstpm(287
jno
push
insb
or
je
jecxz,pt
hlt
pop
dec
mov
inc
ror
test
push
pop
push
inc
jno
jg
test
mov
mov
fwait
sbb
scas
adc
and
aam
and
repnz
push
mov
xchg
insl
sub
jp
adc
push
repz
push
jecxz
fst
pop
or
cmp
enter
xchg
mov
cmp
pop
and
xor
sbb
xchg
mov
add
pop
jecxz
and
clc
scas
adc
pop
xchg
ficompl
mov
push
hlt
mov
pop
add
daa
mov
cmpsl
dec
mov
dec
push
leave
fst
mov
mov
test
fsub
dec
adc
dec
cpuid
jae
cli
out
cltd
jbe
int
lret
fistpl
push
movsl
lea
lea
pop
pushf
push
mov
movsl
mov
dec
sar
rcr
add
mov
add
out
pop
out
cmpsb
and
imul
shll
push
inc
push
xchg
jo
fwait
sti
or
sahf
push
test
out
push
jbe
aas
and
dec
or
arpl
inc
mov
stos
dec
adc
pop
stos
pushf
fildl
dec
dec
cmpsb
mov
fistps
xor
out
cmp
sbb
dec
cmp
pop
mov
dec
not
jle
push
xchg
mov
and
stos
pop
icebp
pop
std
sub
xchg
outsl
outsl
sti
lock
popa
into
mov
insb
aad
add
xor
les
or
fsubrs
loopne
sbbb
leave
push
or
leave
int3
mov
mov
sbb
ret
movsb
cld
mov
push
out
push
cwtl
mov
popa
sbb
adc
mov
cmovne
push
or
outsl
test
test
test
mov
icebp
xchg
adc
inc
jns
cli
or
ja
in
xor
sbb
loope
lock
and
mov
xchg
jp
pop
mov
push
xchg
movsb
sub
mov
or
xor
dec
dec
mov
insl
adc
popa
loopne
mov
repz
xchg
sbb
cltd
jl
lock
adc
mov
or
xchg
sbb
das
jg
pushf
inc
dec
stc
mov
xchg
cmp
push
mov
cmp
jp
push
sbb
xchg
push
ret
imul
mov
push
dec
ljmp
daa
and
shll
sbbl
jecxz
jecxz
cmp
push
mov
sub
gs
mov
mov
fsubrp
push
cmp
sub
xor
add
pop
mov
fists
stc
pop
dec
leave
subl
js
mov
and
aas
imul
xchg
push
mov
xchg
lods
das
shl
push
hlt
addl
mov
add
push
adc
test
test
jmp
inc
imul
ds
cmp
jmp
lret
pop
xchg
and
sub
mov
jge
fidivs
mov
outsl
movsb
and
jle
aas
mov
adc
push
std
mov
icebp
nop
push
sub
sub
sub
add
inc
pop
ret
loop
mov
cmc
sahf
jecxz
les
dec
and
es
xchg
dec
mov
loop
lock
cmp
sahf
push
mov
xchg
mov
xchg
testl
loope
sub
icebp
mov
sbb
rcl
les
jp
mov
lcall
jb
test
loop
mov
xchg
and
in
and
push
out
pop
push
fwait
loop
dec
ds
mov
dec
movsl
repz
imul
ljmp
int
fdivs
dec
lea
inc
stos
xchg
into
into
mov
pop
imul
lea
pop
mov
fisttps
inc
out
sbb
jp
push
loop
push
cld
and
cmp
sbbl
shll
lahf
insl
push
xlat
add
outsb
push
int3
push
out
xor
imul
cmp
xor
adc
mov
cmp
std
gs
pop
add
jp
cmp
out
and
dec
mov
fmull
xchg
xlat
jnp
repnz
enter
mov
mov
cs
push
cmp
inc
addr16
pop
out
or
push
pop
and
mov
test
out
cmp
neg
fwait
shll
pop
ja
and
addl
stos
mov
push
je
lds
shll
mov
enter
scas
loopne
jns
ret
js
or
rorl
cltd
aas
fiadds
jno
push
aas
ljmp
mov
shlb
mov
cs
loopne
ja
jb
out
sbb
mov
out
xor
dec
cli
adc
cltd
sub
into
adc
pop
fiadds
loop
xor
loope
mov
mov
inc
movsl
ss
jle
or
call
sbb
loop
mov
xchg
jle
push
lock
aaa
imul
mov
cmp
xor
xchg
xchg
inc
movsb
add
dec
sbb
xor
mov
add
cmp
pop
movsl
inc
mov
push
cmpl
jecxz
push
lret
mov
gs
imul
or
ljmp
push
jno
movsb
ss
aaa
adc
jp
fwait
sbb
scas
loope
xor
push
stc
sti
inc
jae
in
jb
loop
inc
push
les
icebp
cmp
jge
push
xor
jno
sub
in
sbb
clc
jp
clc
pop
inc
pop
jb
jae
popf
cmp
adc
mov
xor
dec
or
xchg
sub
xor
int
ljmp
inc
cmpsb
mov
clc
and
xchg
jnp
popa
dec
icebp
ja
cld
cmp
shll
jae
test
xor
lock
dec
into
mov
icebp
xor
jl
pop
push
insl
inc
add
loope
out
fsub
js
je
xchg
psadbw
in
sbbl
in
and
mov
jno
cmp
mov
popa
cmc
cmpsl
enter
xor
push
adc
pop
add
xchg
inc
jg
adc
imul
movsb
and
and
rclb
outsl
cmp
pusha
or
cltd
scas
sub
imul
lahf
mov
xor
and
lret
push
out
lea
xorl
inc
mov
pop
ja
iret
inc
pop
stos
jl
push
sbb
les
lahf
mov
ret
pop
push
movl
mov
loope
inc
cmpl
popa
mov
sub
and
jne
nop
add
pop
pop
test
xchg
iret
add
xchg
sbb
jns
xchg
mov
leave
push
and
pushf
aad
into
mov
pop
imul
mov
push
add
int
mov
fisubl
std
fstpt
nop
repnz
testb
sub
rorb
aad
dec
cmp
cmc
fists
popf
mov
rorl
pop
mov
jg
lods
jp
cmp
sub
aaa
shl
add
adc
js
out
out
dec
shll
leave
cmp
jae
cmp
fsubr
shr
hlt
jge
std
cwtl
mov
or
xorl
cmp
imul
in
pop
cmp
faddl
push
or
out
scas
shll
pusha
jl
mov
adc
js
pop
lods
or
int3
scas
push
cmp
test
pop
adc
dec
lds
popa
adc
xor
es
inc
push
mov
xor
aad
stos
xchg
into
lock
pop
enter
rcl
pop
fs
adc
lock
mov
push
data16
mov
inc
lds
or
or
ror
pushl
mov
adc
cmp
leave
lcall
fidivrs
ja
xlat
dec
in
lcall
push
insl
into
xchg
mov
in
fidivrl
push
cmp
out
dec
rcrl
push
adc
adc
mov
jle
mov
add
test
xor
call
sbb
pushf
orl
jbe
cli
dec
cs
xchg
jnp
mov
xchg
cmp
dec
jne
add
pop
stos
push
jge
outsb
mov
sub
xor
outsl
cltd
cwtl
sahf
adc
adc
hlt
xchg
jns
cwtl
sbb
push
cmp
or
mov
imul
pop
rol
dec
cmpsl
pop
in
fbld
ret
sub
shl
fistpl
jne
dec
sub
movsl
push
ja
dec
sbb
int3
pop
loop
fstl
daa
inc
into
dec
mov
hlt
sub
push
pusha
adc
dec
in
jecxz
cmc
shll
mov
repnz
jae
jg
inc
adc
idivl
pop
cmp
cmc
add
adc
cmp
sbb
adc
or
push
lcall
insl
call
or
ret
cmp
dec
mov
fwait
lret
jge
scas
ret
inc
andb
cmp
popf
adc
sub
mov
mov
sbb
pop
inc
pop
test
add
inc
lds
mov
mov
or
mov
push
push
add
loop
loop
outsl
adc
imul
ljmp
bound
sub
sahf
loope
cmp
mov
cltd
orl
out
cmp
in
adcb
xchg
movsb
in
push
jl
sub
into
push
in
sbbl
cld
or
or
pop
inc
mov
rol
scas
fcoml
mov
add
js
jae
in
xchg
and
adc
sbb
mov
dec
lea
xchg
stc
ja
stc
cmc
cmp
out
jbe
aam
dec
add
pop
mov
frstor
add
xor
cmp
xchg
inc
enter
add
cltd
ja
mov
mov
stc
inc
cs
xor
nop
cmpsl
push
jecxz,pt
adc
ficomps
lods
repz
cltd
mov
cmp
push
dec
mov
pop
loope
out
xchg
cld
cmp
cmp
es
mov
dec
out
mov
dec
fsubl
sbb
push
or
sti
mov
inc
insb
pop
push
pop
out
rcll
cmp
ja
push
add
add
mov
dec
mov
flds
jo
inc
mov
xchg
scas
add
outsb
xchg
test
jecxz
jo
test
jp
inc
cmp
call
push
mov
shll
ret
lods
push
cltd
adc
cmpsl
outsb
mov
loop
mov
cmp
std
loopne
fwait
cmpsb
test
es
push
sbb
jp
add
je
in
and
sbbb
fwait
in
out
inc
xchg
cmp
dec
mov
jno
xchg
lcall
iret
nop
addb
or
mov
add
in
stos
push
fiaddl
call
adc
jl
stos
xor
das
in
push
inc
test
daa
outsb
push
cmp
push
mov
imul
fstps
jo
jp
sbb
ret
arpl
fisubrl
push
add
or
mov
cld
jmp
xchg
scas
fsubl
enter
and
popa
popa
movl
fcmovbe
adc
jmp
out
enter
xchg
mov
nop
mov
loop
mov
imulb
jmp
xchg
pop
pop
sub
adc
cltd
mov
aas
xor
push
xlat
loopne
mov
add
subl
lds
xor
outsb
ret
test
or
mov
je,pt
cmp
jge
clc
test
idivl
or
mov
push
mov
inc
mov
lcall
mov
jns
mov
arpl
jle
mov
test
xor
hlt
xor
mov
jmp
pop
jle
inc
pop
or
in
imul
in
iret
xor
or
push
int
adc
jge
sub
inc
ja
sub
adc
add
xchg
xor
push
cmp
adc
out
in
sbbl
dec
orl
inc
jae
lret
mov
mov
adc
mov
outsl
test
leave
or
adc
xor
push
mov
popf
mov
adc
rcl
flds
jg
mov
xor
popl
or
adc
cltd
mov
sbb
and
cld
mov
in
mov
dec
cmpsl
mov
cltd
jp
aas
cs
rorb
and
mov
cmpl
mov
fwait
ret
enter
push
dec
push
sub
pop
mov
scas
lahf
popa
lods
mov
ret
test
repz
and
hlt
sbb
gs
cmp
lret
push
mov
aas
jp
jnp
loop
xchg
aas
leave
test
pop
inc
scas
pop
cmp
or
in
xor
mov
loope
push
repz
cmp
inc
negb
and
xchg
loopne
loop
sbbl
xorl
inc
mov
mov
das
add
iret
dec
xor
jmp
popf
out
dec
sub
cmpsb
jl
into
mov
insl
jmp
xor
adc
push
add
jle
sahf
cmpsb
jge
cwtl
outsl
mov
xorb
jae
mov
lret
ret
divb
cmp
ja
xor
es
std
mov
or
inc
sub
sahf
cmp
xchg
sub
mov
jbe
imul
jg
cli
cs
fimull
sub
xchg
sbb
hlt
mov
xor
aad
daa
aam
adc
mov
jns
sti
fs
xchg
dec
es
pop
mov
xchg
out
pop
sbb
jbe
dec
mov
cmpsl
sub
sbb
sub
aas
add
in
pop
xor
out
std
inc
inc
rclb
dec
xchg
mulb
dec
xchg
ret
dec
pop
ds
mov
arpl
dec
inc
push
pop
mov
cmp
popf
mov
aaa
in
mov
and
iret
out
ss
adc
jne
pushf
inc
aaa
xchg
push
jbe
es
mov
test
bound
ret
cltd
mov
push
jle
sbb
stos
pop
mov
mov
clc
lret
fildll
push
test
shll
loopne
cs
sbb
ljmp
cltd
dec
xor
push
pop
xchg
ss
and
mov
push
ljmp
aam
jg
pop
push
push
fisttpll
push
sbb
cmp
shrb
jo
sub
push
loope
test
arpl
std
mov
jmp
adc
push
xor
pop
dec
testl
das
mov
mov
lods
lret
js
mov
ror
insl
lea
jnp
fsubl
cmp
jl
pop
loope
push
ss
inc
sbb
test
out
xchg
fwait
dec
aaa
iret
sarb
popf
mov
pop
int
dec
sub
pushf
jmp
xor
mov
imul
outsb
addb
cmp
add
and
iretw
mov
aas
xor
inc
or
test
cltd
aaa
nop
fimuls
out
mov
push
insl
std
mov
inc
mov
stos
add
stos
shlb
pop
adc
cmp
jns
push
jg
leave
aad
and
ret
sub
jge
push
mov
test
clc
mov
pop
inc
and
test
push
cltd
xchg
jbe
add
xchg
popf
push
sub
pop
scas
or
mov
push
xor
push
jns
mov
outsl
jecxz
pop
out
sarb
data16
inc
sbb
stos
dec
add
pushf
push
push
gs
outsb
add
adc
push
dec
adc
mov
mov
cmp
sub
add
xor
idiv
mov
hlt
lds
sarl
popl
ret
xor
mov
xor
add
gs
or
js
addr16
or
jbe
or
js
mov
cmpsl
jno
pushf
sbb
inc
jnp
lea
mov
fwait
in
mov
mov
pushf
sarb
inc
adc
and
ret
adc
jg
add
mov
int
sub
pop
dec
in
test
sbbb
lret
inc
and
idiv
dec
mov
sbb
pop
mov
push
aas
rclb
inc
repz
aad
in
push
dec
push
mov
sbb
jo
popf
jnp
cmpsb
rcrl
insb
cltd
arpl
insl
and
insb
mov
or
mov
loopne
cmp
sbb
jg
cmp
hlt
gs
xchg
xor
outsl
inc
dec
jae
dec
jge
and
dec
rcl
and
hlt
mov
jbe
popa
fcoms
loopne
add
imul
mov
push
in
jb
push
push
je
into
fbstp
push
insl
cmp
sub
cmp
pmaxub
or
call
mov
add
or
inc
mov
and
sbbl
pop
mov
rcr
lret
xor
lahf
dec
xchg
cmp
out
push
pop
dec
lret
cmp
jbe
mov
pop
scas
out
xor
jge
xchg
leave
push
aam
out
outsb
lods
and
imul
or
dec
clc
arpl
stos
dec
loope
mov
ss
outsb
ljmp
inc
or
popf
loopne
or
or
filds
repz
es
std
cmpsb
inc
mov
mov
fs
mov
jns
jnp
ss
mov
rcrl
and
sbb
mov
dec
jg
xor
movsb
ret
es
and
sbb
push
jbe
int
jg
pop
push
movsb
adc
std
icebp
jbe
or
push
les
fdivp
mov
popa
test
xor
cmc
mov
jecxz
mov
data16
xchg
aad
sbb
addr16
into
cmp
fidivrl
push
int
inc
pop
xchg
xchg
cmp
hlt
data16
je
mov
bound
arpl
xor
stos
icebp
dec
hlt
js
fldcw
jl
shlb
xchg
shrb
hlt
testl
pop
push
cmp
ds
xchg
hlt
mov
cmp
xchg
mov
mov
or
aaa
test
mov
cmp
pop
dec
cmpsb
jb
push
icebp
bound
pop
push
or
push
xor
xchg
dec
aam
stos
push
ret
mov
xchg
cmp
or
jecxz
xchg
adc
pushf
jmp
addb
pop
push
sbb
test
mov
ret
lcall
je
es
push
sub
xchg
add
les
xor
jmp
jge
cmp
imul
jno
insb
cmp
jl
nop
dec
mov
int3
xor
in
push
or
pop
adc
pop
out
add
adc
iret
leave
add
sub
popf
rorb
inc
push
out
repz
cmc
xchg
xor
cmp
push
pusha
xchg
aam
and
or
in
lcall
mov
mov
sbb
add
jl
add
lret
lock
repz
xor
inc
stc
pcmpeqw
mov
cmp
xchg
mov
jno
mov
sub
sbb
into
jb
in
or
mov
fadds
das
pop
xchg
push
and
push
out
xchg
jge
push
lods
xlat
negb
fsubrs
or
outsb
aad
cli
cmp
or
cmp
pusha
repz
mov
int3
and
mov
ficomps
adcl
sti
das
jg
adc
out
pop
push
cli
pop
ljmp
es
pop
lea
pop
xor
xorb
mov
ja
jle
outsb
popf
cmp
outsl
sbb
and
push
test
jns
push
jg
or
shrl
pop
sbb
jb
aad
adc
or
xchg
jmp
dec
pop
mov
sub
dec
add
stos
mov
jnp
adcl
scas
outsb
into
lods
popa
push
adc
ret
rcr
shlb
in
insl
hlt
cld
push
push
lock
testb
jne
test
aam
and
xor
rclb
int3
push
fisubrs
je
aad
push
ret
out
xor
cli
dec
repnz
call
cli
dec
jne
inc
outsl
cmp
iret
cmp
test
dec
sar
jecxz
sarl
loop
adc
aas
sbb
sub
inc
mov
rclb
in
mov
jmp
fsubrl
xor
arpl
jne
cmc
or
push
addr16
xor
movaps
cld
in
dec
fists
inc
hlt
mov
loope
out
cmc
pop
adc
fs
lock
mov
fwait
sarl
mov
sbb
repz
idivb
and
test
mov
cmp
sbb
jo
jg
dec
inc
adc
fldenv
lea
push
mov
in
test
cmc
sarl
stc
aas
mov
xchg
into
jb
movsb
inc
movsl
fucomip
mov
mov
in
sti
imul
or
sar
mov
inc
ret
pop
add
lods
lds
mov
fiaddl
std
xor
cmpsl
lods
inc
enter
in
mov
sbb
loope
pop
or
call
into
adc
jmp
call
stos
inc
xchg
loop
mov
jl
dec
mov
and
mov
sub
addr16
iret
or
scas
mov
rclb
in
jnp
push
enter
rcrb
insl
add
jnp
loopne
dec
lods
out
push
mov
mov
aam
inc
sbb
les
sbb
jge
sub
outsl
sub
gs
inc
stos
xchg
int3
pop
mov
lods
mov
imul
mov
movsb
repnz
test
leave
leave
je
shrb
xchg
and
not
out
sub
cmpsl
leave
mov
dec
loope
insb
cwtl
fwait
movsl
ret
push
cmpsb
adc
outsb
sub
adc
fstpt
cwtl
mov
pushf
test
push
scas
inc
subl
cmc
mov
fidivrs
fisubrl
jecxz
nop
mull
lods
cmp
rcl
add
mov
in
loope
mull
aas
out
scas
xchg
mov
cmp
iret
add
add
adcl
loope
and
aad
pop
and
add
mov
xor
in
sbb
or
imul
adc
xor
cmp
mov
cmp
cli
xor
test
push
mov
sbb
lds
sub
push
adc
mov
xchg
add
fisttpl
or
mov
pushf
inc
js
push
testl
test
ror
push
jns
scas
aaa
jecxz
cmpsl
sahf
sahf
movsl
adc
pushf
out
lock
push
repz
mov
dec
push
mov
pushf
loopne
push
jno
mov
into
sbb
pop
ret
clc
add
jl
adc
pop
mov
push
adc
loopne
and
stos
sahf
cmp
pusha
push
loopne
xchg
insl
addr16
in
lds
xor
fcmovb
pop
jae
jmp
repz
add
subl
rep
xchg
int
mov
pop
xor
in
jl
cmp
xor
negl
dec
sub
pop
daa
add
aas
mov
std
xchg
xchg
mov
inc
enter
pop
ss
xchg
or
add
call
stos
pop
and
jp
nop
push
jle
subl
idivb
sub
xor
mov
or
arpl
daa
mov
gs
xorl
mov
std
scas
and
insl
les
push
mov
adc
scas
mov
push
sub
test
cli
pushf
pop
fstp
call
into
arpl
lret
into
xchg
nop
pop
add
cmp
jl
cmp
adc
mov
or
mov
out
fldcw
movsl
loope
movsb
shrb
mov
and
repz
sbb
and
mov
cli
loopne
shr
les
xor
addr16
rorb
xchg
sbb
arpl
xchg
push
xor
fimuls
ret
cmp
lea
mov
adc
adc
hlt
jb
fwait
cltd
aaa
ja
ja
clc
sub
cld
pushf
les
xor
adc
or
and
add
or
lods
dec
jp
mov
popa
pop
jno
cmp
inc
test
popf
jmp
aam
push
push
lahf
cmpsl
xchg
lret
mov
xchg
rolb
lods
fbstp
dec
pop
out
mov
dec
nop
dec
orl
mov
adc
or
mov
repnz
divb
mov
out
push
pop
lret
rolb
mov
add
cmp
or
push
pop
pop
cmp
and
xor
jp
test
push
xchg
ljmp
push
scas
add
cs
loope
fcomps
mov
fwait
lcall
push
int3
adc
or
or
pop
xchg
shl
leave
ret
rcrl
into
xchg
xchg
mov
push
insb
and
in
arpl
jg
insl
push
pop
jnp
pop
xor
push
sub
inc
lahf
das
push
add
pop
push
or
push
pop
int3
incl
ljmp
sub
push
mov
call
test
pop
fsubrl
and
out
popa
shll
sahf
adc
xlat
in
ret
mov
sub
inc
into
icebp
jmp
lds
and
xchg
les
aad
jne
scas
pop
pop
enterw
lret
std
dec
adc
pop
xor
inc
out
lock
pushf
insb
popf
cmp
pop
ret
xor
movsb
jb
jle
aaa
mov
scas
push
mov
cmp
pop
mov
inc
data16
aas
insb
enter
fldl
lock
shl
ret
scas
ljmp
stc
fisubrl
dec
subl
mov
adc
psadbw
clc
xchg
arpl
repz
dec
add
cmc
je
mov
bound
jno
xchg
ret
out
popf
jbe
shll
pop
int
nop
outsb
push
jp
lds
mov
lds
jecxz
add
sub
into
jns
bound
out
insl
mov
das
sbb
mov
xor
fdivl
push
nop
mov
in
pop
cwtl
mov
cmp
cmpl
pop
sub
push
add
jg
lret
or
mov
shl
or
adc
pop
rcr
add
add
and
int3
jp
or
out
cmp
sbb
pop
adc
adc
fs
clc
insb
push
xor
pop
jp
mov
test
iret
sbb
data16
and
sahf
cwtl
xchg
mov
ror
and
inc
push
pushf
cwtl
fimuls
cwtl
ret
jecxz
nop
add
lods
enter
push
jle
xor
and
mov
outsb
out
std
xchg
xor
addr16
inc
xchg
enter
lcall
data16
stos
mov
test
dec
int3
cmp
outsl
into
mov
orl
filds
inc
ret
add
rcrb
pop
stos
iret
nop
sub
out
rolb
bound
cmp
push
out
sub
ror
shr
mov
outsl
hlt
or
je
sbb
mov
and
pop
xchg
push
out
nopl
adc
ss
mov
fdivrs
mov
mov
pop
out
push
in
shrb
or
jl
cmpsl
idivb
lcall
pop
idivb
mov
push
pop
sub
dec
mov
cld
sbb
pop
sub
or
cmpsl
subb
outsl
js
and
sbb
sbb
dec
outsl
lahf
out
jp
mov
adc
sub
int
push
gs
add
or
sbb
cmp
movsb
jns
popa
mov
dec
inc
jns
jmp
call
test
in
fisttps
mov
movsb
cmp
xor
fwait
iret
data16
ljmp
shlb
out
sub
adc
sub
daa
cmpl
xor
adc
xor
mov
pop
push
ja
cwtl
in
dec
cmp
addr16
dec
mov
cwtl
cmp
xchg
cmp
cmp
shll
shrl
jmp
orl
lcall
in
mov
push
pop
xchg
icebp
into
xchg
mov
mov
inc
movsb
add
and
sbb
fs
xor
mov
mov
jne
jne
gs
out
negl
push
cmp
sub
iret
fisttps
and
out
pop
jp
loopne
cmc
js
in
mov
jg
xlat
add
aas
xchg
out
jo
or
jnp
mov
shrl
jb
into
std
gs
and
pushf
cmp
jae
aad
cmpsb
add
push
imul
cs
dec
mov
fisttps
push
push
lods
mov
dec
popf
add
or
push
mov
mov
fisubrs
loopne
sbb
dec
lods
fstl
repnz
loopne
stos
sti
jb
icebp
jmp
and
dec
pop
divb
add
ss
cmc
mov
xor
push
outsb
bound
xor
push
jb
push
dec
inc
add
inc
out
out
fld
xchg
inc
inc
cwtl
cmp
stos
ss
les
adc
inc
mov
outsl
leave
and
les
sbb
mov
cmp
push
pop
mov
mov
fistl
shrl
or
inc
cmp
loop
testb
push
lahf
es
mov
pop
aad
lods
sahf
ja
movsb
loopne
mov
dec
sbb
lret
pop
xchg
jnp
mov
mulb
inc
pop
fidivs
sub
cmp
fcomps
xchg
rolb
popa
xchg
aam
aad
lock
inc
jg
pop
loopne
mov
sbb
jb
mov
pop
stos
mov
lret
rclb
mov
loope
or
push
xlat
dec
jecxz
cs
or
nopl
arpl
jge
jne
mov
jo
lds
push
pop
mov
jecxz
mov
mov
or
fstl
in
jo
out
mov
xchg
jl
jns
pop
push
fdivs
rcrb
dec
in
mov
scas
lcall
in
mov
adc
lods
mov
jl
jg
outsl
jno
test
adc
aam
outsb
aad
icebp
into
sub
adc
into
sbb
adc
jnp
add
dec
mov
out
xor
rorb
mov
xchg
sub
and
and
adcl
mov
pop
test
add
jbe
in
add
fst
loop
repz
inc
xor
and
fsubl
fisubrs
cmpsb
sbb
jecxz
cld
jle
mov
sbb
push
push
sbb
mov
or
fsubr
xchg
mov
xlat
dec
outsb
add
test
jnp
cmp
dec
dec
in
not
and
stos
inc
inc
pop
sub
in
mov
jno
sbb
mov
mov
mov
push
and
mov
fiaddl
fwait
jb
mov
call
sub
popf
mull
ss
sbb
out
aam
push
xor
outsb
imul
push
xor
and
sarb
int
cli
mov
cmpb
out
cmp
ss
or
dec
push
inc
je
cltd
lret
arpl
add
jl
popf
mov
jns
mov
or
xor
fwait
in
mov
cmp
cmp
jp
pop
jbe
out
jg
cmp
je
sub
jmp
mov
mov
sti
lcall
sbb
stos
cs
pop
cmp
outsl
cmovbe
gs
aas
adc
sub
mov
xor
mov
adc
addl
sub
aam
ja
sub
inc
popf
insl
pop
and
andb
mov
cwtl
jl
repz
mov
inc
stos
sarl
popa
and
pop
int3
out
sahf
nop
mov
dec
mov
cmp
test
dec
jns
or
inc
sub
and
mov
or
jo
and
or
js
pop
xchg
jp
or
push
cmpsl
div
leave
mov
add
and
xchg
cmp
or
aas
int3
jns
loopne
cmpsl
xchg
in
dec
add
lock
mov
ret
call
fadd
mov
push
dec
fwait
lods
sbb
jp
test
iret
sub
adc
add
jns
bound
xor
dec
adc
out
lock
icebp
out
push
aaa
adc
pop
jne
aas
mov
faddl
inc
sub
dec
cltd
xchg
int3
addr16
nop
mov
jmp
inc
inc
fdivl
pop
lea
sti
pop
aam
icebp
xchg
sbb
loope
pop
xor
ret
addr16
lock
xor
xor
pop
mov
dec
js
lea
xchg
or
cmpsl
or
xor
inc
or
scas
daa
pop
repz
fidivrl
mov
pop
xchg
fidivs
inc
outsl
push
in
sub
sahf
sti
fisubrs
sub
js
or
lea
lret
xor
adc
jg
movsl
push
mov
and
pop
cmp
mov
or
xchg
mov
add
ficoml
push
ss
push
rolb
ret
xlat
aam
push
cwtl
xchg
je
mov
fstpl
dec
sbb
push
xchg
jmp
sbb
mov
xor
fmull
or
dec
into
xchg
or
xchg
or
lret
xlat
push
or
push
xchg
push
add
sti
cltd
insb
mov
inc
mov
icebp
sahf
scas
clc
or
jns
fcmove
stc
xchg
xchg
sub
jg
xchg
aad
mov
mov
xchg
int3
loop
xchg
add
aas
xor
mov
pop
pop
dec
sbb
or
mov
inc
orb
mov
jg
mov
xchg
or
fsubs
adc
fwait
cmp
in
xchg
sbb
out
hlt
ss
xor
push
imul
add
iret
fwait
rcll
adc
and
movsl
popa
fsub
gs
xchg
cmc
sbb
bound
or
inc
add
add
call
mov
psubusb
pop
inc
inc
mov
mov
mov
aas
outsl
dec
fisubl
mov
xchg
rcll
sbb
imul
les
in
enter
cmpsl
inc
xor
sub
jecxz
push
sbb
mov
jae
xorl
rorl
and
outsb
jmp
movsl
ss
push
lock
call
and
pop
sub
mov
or
stos
xor
push
jnp
int
pop
es
push
jp
rorb
add
std
or
pop
fs
inc
mov
arpl
push
int
cld
lds
sub
les
add
jae
mov
data16
push
cld
fsubl
cmc
hlt
mov
gs
ljmp
sbb
jns
out
xchg
aam
call
fidivl
mov
inc
into
sub
jnp
scas
add
lahf
mov
mov
cs
and
cmp
xor
out
push
pop
aam
xor
jg
cmpb
addl
xor
xor
std
shlb
sbb
and
stc
inc
ss
sub
les
or
dec
jl
push
ret
ja
push
std
jle
ss
pop
or
xchg
inc
bnd
outsl
sub
cld
pushl
sub
in
inc
jo
rep
mov
sti
mov
out
sarb
jo
inc
mov
xchg
xchg
cmp
leave
mov
xor
cmpsb
imul
ss
les
sbbb
dec
xchg
inc
xor
xor
xchg
lahf
pusha
or
nop
pop
rclb
mov
lock
subb
xchg
jo
jae
adc
and
int
js
push
lcall
lret
or
pop
stos
mov
dec
jno
push
in
cmp
outsl
cmpsb
dec
cld
jl
inc
test
mov
inc
fs
jmp
mov
sub
mov
test
stc
cltd
lahf
mov
jns
lods
jp
dec
movsb
pushf
lock
imul
mov
sti
xor
pop
stc
pop
sarb
mov
add
mov
jnp
push
push
imul
sbb
outsb
sahf
lods
pcmpeqd
xchg
xor
cltd
dec
in
andl
stc
jns
inc
or
mov
ljmp
adc
xchg
push
jo
ja
pop
push
cmpsb
popa
and
mov
out
push
arpl
test
aad
dec
in
aam
loop
mov
xchg
lds
adc
inc
jle
inc
jnp
pop
xchg
lcall
pop
dec
bound
xor
iret
jae
pop
cwtl
mov
lret
insl
jle
addr16
xor
jo
sub
and
popf
pop
insl
dec
icebp
xchg
and
pop
loop
mov
inc
lea
nop
or
mov
testb
xlat
dec
jp
pop
lea
pushf
aas
push
mov
dec
pop
pop
adcl
dec
adc
pusha
sub
push
bound
ss
jmp
lods
rcr
xor
bound
pop
ss
ror
aaa
pop
aad
les
or
jl
jae
daa
push
push
push
mov
andb
sub
and
dec
cmp
hlt
je
insl
insl
movsb
rclb
xor
insb
mov
jecxz
jne
jmp
js
lahf
pop
subb
and
mov
adc
mov
or
ret
xor
iret
out
xor
pop
cli
push
std
jne
out
push
mov
insl
pop
xchg
iret
faddl
leave
stos
adc
mov
lods
jno
arpl
mov
sbb
jmp
js
rcrb
movsb
jne
push
stos
push
mov
std
mov
jmp
call
mov
mov
or
ret
jg
enter
ret
cmp
or
scas
or
xor
adc
mov
das
pop
mov
and
or
ljmp
mov
xchg
roll
dec
mov
les
lea
mov
mov
push
jno
dec
inc
inc
movb
adc
xor
cli
imul
jne
outsb
and
push
or
stos
push
iret
aaa
cmp
movsb
stos
sub
stc
pop
xchg
add
popa
jecxz
loop
out
mov
mov
stos
lock
scas
aam
fucom
aam
sbb
mov
movsl
jecxz,pn
and
lret
arpl
mov
xor
or
lcall
push
mov
shrb
dec
rol
adc
or
shl
inc
add
fisubrl
push
mov
loopne
das
inc
cmp
adc
js
sub
int
sbb
repz
insw
pusha
fcompl
cmp
sarl
in
mov
outsb
lods
mov
jge
mov
lret
adc
jmp
dec
sarb
cmc
mov
test
mov
cmp
das
imul
dec
pushf
xorb
sti
lods
call
pop
xchg
dec
hlt
lea
mov
dec
push
mov
aad
fs
sti
movsl
push
jne
add
jle
xchg
mov
and
and
mov
cld
inc
int3
loopne
fsubrl
shlb
mov
fldl
xor
lcall
mov
jno
test
pop
adc
daa
adc
cs
out
fdivs
add
pushf
sub
pop
ss
mov
adc
jmp
and
or
xor
push
adc
jmp
cmpsl
sub
cmp
cwtl
imul
inc
aam
hlt
cmp
scas
xor
lods
in
js
dec
js
jnp
sub
insb
sub
add
insb
rol
std
sbb
int
lock
test
pop
mov
hlt
jge
pop
xchg
jns
dec
std
icebp
js
mov
or
xchg
in
iret
loope
sbb
js
les
popf
add
decl
enter
out
mov
push
push
sub
sub
push
mov
cmpsb
xchg
xor
add
or
cmp
and
push
push
mov
gs
lods
jb
nop
pusha
add
inc
push
fucomip
ljmp
cmp
in
pop
ret
andl
es
mov
orb
inc
adc
mov
imul
xor
call
adc
pop
sbb
out
mov
mov
scas
arpl
sti
push
enclu
cmpb
mov
test
or
js
loop
jo
pushf
in
ss
movsl
out
dec
adc
pop
andb
test
inc
or
jge
sub
dec
xchg
cltd
bound
inc
pop
test
cmp
cmpsb
jne
clc
loope
jae
xchg
pushf
jns
push
andps
lret
mov
jns
cmp
scas
pop
jnp
lods
ret
lret
pop
cmpsl
sbb
cs
ss
test
push
or
mov
insb
xchg
shll
sbb
cld
mov
lahf
jle
enter
leave
addr16
fdivs
imul
jae
hlt
adc
nop
or
enter
insl
lahf
fstps
cmp
xor
mov
and
xor
mov
mov
dec
sti
ja
push
sub
scas
fnsave
bound
push
repnz
cli
jno
and
out
imul
mov
cwtl
icebp
xchg
dec
fcoms
sti
lret
pushf
sti
mov
pop
sti
mov
divl
mov
stos
es
shr
pop
lods
jae
orl
insb
mov
and
pusha
or
jge
iret
sbb
cmp
in
sbb
or
sub
add
subb
push
cmp
fidivrs
out
loop
mov
popf
adc
dec
or
add
iret
loope
xor
inc
and
mov
xchg
mov
and
orl
jl
rcr
mov
movsb
mov
dec
jle
lock
loop
cmpb
mov
ret
ss
shl
test
pushf
or
loop
movsl
iret
dec
sbb
imul
push
fcoms
push
xor
iret
loopne
xor
xor
lret
mov
push
insl
pop
adc
inc
fcmovbe
fs
adc
ljmp
jbe
dec
xor
popf
imull
or
mov
dec
push
jne
pop
jo
out
jbe
pop
jbe
adc
push
call
clc
and
ja
mov
lret
cmp
dec
xor
cli
jnp
stos
dec
into
sbb
aad
lea
push
andb
mov
jbe
mov
fisubl
sub
mov
xchg
aam
imul
cli
mov
clc
sub
stos
pop
dec
push
mov
xor
bound
das
jl
ljmp
lcall
sub
jle
inc
cmp
pop
adc
mov
jbe
leave
add
pop
mov
pop
out
mov
js
int3
add
pop
dec
push
jnp
mov
in
aad
negb
decl
das
cmp
jle
dec
pop
divl
jle
sub
xor
shll
pusha
push
jecxz
dec
rol
addl
jne
mov
cld
mov
out
add
mov
pop
andb
vmread
dec
cmpsl
cmp
jge
cmp
xchg
fcmovnbe
rclb
xchg
inc
xor
and
jmp
xchg
jge
pusha
xchg
adc
mov
lahf
iret
movl
notb
xor
lahf
shll
sarb
mov
push
cmpsb
sub
jmp
daa
addr16
pusha
adc
stos
xchg
faddl
add
push
inc
push
arpl
mov
pop
push
andl
addb
sub
sub
test
fchs
aam
outsl
push
stos
and
shrb
dec
and
inc
test
xlat
fdivs
pop
cmp
ds
and
int3
js
in
je
add
aaa
hlt
jcxz
fadds
imul
dec
aam
in
fbstp
ljmp
mov
jecxz
pop
xchg
test
push
leave
xchg
dec
movsb
out
jne
es
lcall
cld
stc
fstl
bswap
sbb
fdiv
mov
cmp
rclb
jo,pn
fldcw
orb
in
loope
scas
daa
das
icebp
ljmp
xor
pop
mov
daa
sub
push
inc
cli
jmp
pop
ljmp
cmpsb
or
jns
movsb
fnstcw
ja
push
adcb
push
subb
inc
jne
daa
xor
sub
mov
xchg
aam
mov
ds
jo
sbb
rcrb
sbb
xor
out
int3
cmc
test
push
jl
xchg
push
aas
bound
movsb
inc
or
movsb
push
sub
incl
ficomps
mov
push
lret
mov
mov
ror
and
lcall
iret
xchg
test
shrl
cmpsl
or
cmp
dec
int3
call
leave
mov
mov
sbb
add
stos
addr16
mov
clc
movsb
inc
and
jle
lret
fdivrl
mov
jg
repz
int3
int3
movsb
inc
xchg
xchg
xchg
adc
mull
xchg
mov
dec
inc
mov
das
or
pop
fwait
or
jg
cmp
mov
loope
mov
mov
xor
adc
dec
popf
dec
push
jle
or
pop
cmc
mov
dec
call
add
adc
mov
mov
insb
jp
or
mov
or
aaa
add
mov
sarb
mov
fistpl
dec
cmpsl
call
mov
fldlg2
loop
lea
cmpsl
add
out
js
xchg
lcall
cli
scas
dec
inc
fdivs
test
insl
adc
ret
pop
in
pushf
js
add
ret
pop
repz
jl
or
push
adc
cmp
subl
lret
xchg
in
push
jae
js
jae
adc
jns
and
leave
loopne
sar
loopne
inc
mov
jmp
push
pusha
lret
fistps
arpl
in
inc
cmp
fldcw
or
fimuls
subb
insb
mov
in
xor
inc
imull
pop
movsl
pop
loopne
hlt
jnp
inc
adc
mov
mov
mov
adc
mov
stos
sbb
push
loopne
xor
cmp
and
push
push
sbb
insb
xchg
sahf
inc
hlt
lahf
jns
int
mov
sbb
movsl
gs
insb
push
ficompl
sbb
pop
aas
cmp
push
aaa
cmp
test
xlat
push
ret
jp
push
mov
jle
dec
movsb
daa
adc
sub
sti
dec
sub
inc
adc
jecxz
sbb
xlat
mov
add
adc
es
xor
ja
xor
mov
push
jl
mov
ja
jecxz
xchg
icebp
xchg
subb
test
sti
xchg
jg
inc
sahf
and
jmp
sub
push
add
in
jo
sub
xchg
loope
movsb
or
jl
jl
lret
lds
lret
lock
pop
mov
mov
dec
je
fistpl
cwtl
mov
pop
fwait
hlt
int
pop
test
stos
test
lock
imul
add
mov
gs
test
dec
xchg
inc
int
sub
add
insb
out
repnz
je
push
push
push
cmpsb
jae
pop
sbb
xor
pop
add
dec
bound
loopne
bound
mov
sub
aaa
add
and
pop
mov
cmc
fs
inc
lret
jno
inc
repz
addb
xlat
daa
jg
popf
out
push
jge
test
lods
push
add
xchg
cmp
jo
test
stc
inc
adc
mov
cmp
int3
sbb
inc
outsb
mov
pop
sti
xchg
mov
mov
cmp
jle
mov
and
xor
sbb
mov
or
push
pop
cmc
fnstenv
mov
mov
test
lret
ficoml
push
pop
xchg
and
jns
or
mov
inc
lock
dec
loopne
adc
mov
into
inc
jecxz
cmpsl
inc
mov
xchg
addr16
stos
div
js
test
lods
dec
cmp
push
je
mov
movsl
stos
xor
sbb
pop
stos
shlw
arpl
cs
shlb
jl
ficoml
lods
mov
repz
aam
jns
fmuls
or
fxch
arpl
movsl
xor
pop
hlt
iret
cmp
jge
clts
xchg
jb
stos
xor
jecxz
and
dec
sbb
aaa
mov
fisubl
insl
mov
or
mov
or
jmp
mov
push
inc
sub
mov
adc
cltd
fbstp
repnz
out
jae
js
add
dec
pop
jnp
aaa
mov
inc
insl
or
and
cwtl
pop
mov
jne
mov
insl
test
cltd
icebp
outsb
fisubl
stc
cmp
scas
orb
lcall
jle
fists
sti
xlat
adc
and
sub
mov
shlb
push
daa
xchg
leave
inc
outsl
pop
out
xchg
mov
out
mov
testb
aaa
int
xchg
sub
xchg
cmpsl
mov
daa
leave
aam
int
bound
je
add
sub
mov
push
mov
call
fsubrl
push
mov
stos
cmp
mov
dec
pop
xor
lahf
jecxz
and
cmpsl
int
ret
repz
jl
lret
mov
fisttps
add
jl
bnd
imul
nop
push
sbb
add
test
add
movsb
mov
inc
aam
je
cmp
je
mov
push
xor
xchg
pop
push
push
scas
inc
cld
out
sarb
jae
lods
insl
cmp
mov
adc
xchg
xor
imul
inc
js
xchg
add
xor
jmp
fidivl
andb
test
fdivr
stc
pop
push
mov
fucomip
xchg
loop
push
mov
leave
int3
jnp
stc
ja
ret
inc
jp
inc
jle
inc
lret
jnp
enter
mov
sbb
popf
dec
cmp
and
push
aas
lahf
js
pop
add
lcall
test
jge
push
xor
fdivrl
dec
dec
ljmp
dec
movsl
cmc
in
fs
bound
gs
outsb
adc
mov
add
dec
sub
in
mov
adc
cwtl
push
or
jb
sarl
jnp
pop
pop
inc
xlat
push
xchg
xchg
out
or
ss
and
in
lcall
jbe
cmpsl
orb
dec
stc
xchg
rolb
sub
ds
sbb
lds
sbb
pop
inc
and
push
in
loop
ja
fdivs
pop
pop
xchg
mov
test
inc
rorb
mov
and
pop
mov
je
adc
int3
enter
xor
aad
xchg
lahf
and
push
add
addr16
and
push
jp
mov
shll
or
sub
pop
je
dec
push
mov
mov
insl
xchg
mov
add
into
in
cmp
and
out
sbb
rorl
jo
test
and
push
push
rolb
bound
mov
jmp
pop
mov
cmp
fwait
shl
lret
rclb
sarb
xor
adc
addr16
dec
ret
xor
xor
cmp
sub
cmpsb
cmp
mov
xchg
dec
pop
test
cmp
inc
test
je
daa
mov
icebp
sbb
pop
popf
jno
sarl
inc
add
push
repz
dec
enter
fisubl
adc
pop
leave
xor
xor
loop
sar
loope
sub
add
inc
cmc
fcmovbe
scas
insl
js
imul
dec
pop
fwait
not
adc
inc
insl
jns
in
inc
cmpsl
mov
inc
xchg
xor
jns
or
out
cmp
inc
jae
xor
adc
je
mov
jne
hlt
and
ljmp
stos
xor
adc
adc
movsb
sbb
adcl
add
mov
ret
add
loop
pop
call
gs
xor
stos
cmpsb
mov
jge
fimull
into
jb
mov
cltd
fcoms
mov
enter
shlb
mov
pop
addb
adc
loop
mov
jb
cmpsl
shl
or
lret
sbb
arpl
int
lods
adcl
out
xchg
xchg
jp
xchg
addr16
mov
stc
iret
ja
cmp
pop
mov
movsb
out
movsb
mov
fstp
pushf
in
and
and
adc
jmp
dec
inc
gs
pop
lret
xchg
leave
inc
mov
inc
jae
xor
pusha
movl
sub
mov
shlb
shr
adcb
adc
lods
orb
movsb
mov
mov
and
sahf
int3
inc
adc
mov
nop
cmpsb
es
push
repz
jo
inc
js
mov
jae
lahf
clc
cld
clc
push
fsubrs
add
dec
push
sub
daa
dec
std
mov
fistl
je
dec
jno
and
xor
fstpt
shrb
repz
ret
push
test
outsb
test
ss
xor
mov
outsl
rol
xchg
leave
xchg
jns
mov
lds
cltd
xor
xlat
jb
inc
adc
xor
in
cwtl
lcall
adc
out
sbb
adc
sub
lock
test
in
adc
int
cwtl
xchg
incl
pusha
mov
or
sbb
push
push
mov
js
sti
sarb
xor
xchg
mov
mov
push
gs
cwtl
lock
mov
jo
jecxz
arpl
dec
xchg
mov
stos
fldl
in
dec
sbb
jle
adc
and
fnsave
and
out
dec
mov
pop
xchg
mov
adcb
jae
lods
xchg
test
mov
sub
xor
repz
shrb
ficoms
push
cli
jnp
pop
adcb
dec
int3
mov
xor
add
cmp
incb
lds
add
or
mov
lret
fmuls
adc
es
jns
adc
sbb
jg
mov
jbe
push
iret
adc
jb
mov
dec
sub
xchg
lcall
out
arpl
lahf
ret
rcr
loop
cmp
cmpsb
fcmovb
mov
faddl
jno
adc
aam
mov
inc
xchg
outsl
jmp
and
int3
jne
aas
imul
mov
clc
sti
adc
inc
mov
mov
cmp
leave
cwtl
hlt
push
or
inc
add
adc
pop
das
movsb
popl
aaa
cmpsl
lock
cld
aam
inc
incl
push
inc
mov
mov
adc
adcl
xchg
adc
pusha
inc
jl
cmc
push
gs
ss
pop
loope
test
sub
jb
sbb
mov
cmp
sarb
cld
and
xor
das
scas
iret
mov
icebp
dec
pop
lods
ss
cli
cli
popf
add
inc
inc
xor
adc
xchg
idivb
test
shlb
ret
add
in
xchg
iret
movsb
or
xchg
jecxz
movsb
out
std
dec
push
inc
inc
lods
imul
push
rcrl
and
nop
jbe
popf
fstpt
jno
cs
das
dec
les
es
test
das
je
js
add
je
add
mov
mov
lcall
jecxz
mov
lock
movsb
jne
mov
cwtl
lret
pop
fdiv
pop
push
int
push
test
icebp
mov
xchg
iret
ds
sub
push
fsubl
in
in
sbb
loop
mov
dec
jmp
xchg
push
xchg
jl
inc
dec
flds
push
insl
iret
inc
fwait
mov
out
cs
test
and
push
lcall
cmpb
fsubrl
jecxz
or
xchg
in
xor
add
js
rolb
jno
sbb
clc
mov
cmc
pushf
clc
cmp
es
push
jbe
push
or
or
pop
sahf
mov
push
pop
push
xor
sub
sbb
fwait
cmc
jecxz
not
std
xchg
rol
xor
stc
add
pop
int3
mov
leave
sbb
push
ds
mov
mov
and
std
mov
aad
sbb
sub
repnz
pop
jp
sub
mov
pop
jb
push
xchg
mov
aad
insl
jns
mov
cmc
leave
add
pop
xor
push
cwtl
icebp
push
insl
xchg
insl
dec
movsl
pop
inc
xchg
jo
cltd
jmp
push
sbb
add
cmp
inc
or
shlb
cmp
mov
jmp
mov
push
xchg
call
fiadds
out
xorl
or
sub
xchg
mov
pop
aam
xor
sbb
jae
les
mov
imul
sbb
mov
stos
sbb
outsl
mov
xor
andb
repnz
into
lret
xlat
adc
xchg
aaa
lea
pop
pop
sub
jns
negb
sub
dec
aas
aad
fcompl
les
add
stos
in
testb
mov
dec
pop
sub
fisubrl
xchg
sbb
adc
add
stos
xchg
out
addr16
cmpsl
imul
mov
loop
mov
pop
clc
xchg
ss
hlt
sub
ds
sbb
rcll
pusha
fs
lahf
adc
test
mov
push
enter
cmp
jl
iret
xchg
pop
cltd
adc
fmuls
mov
ret
lods
push
cmp
jnp
addl
pop
sub
jo
mov
pop
pop
xor
mov
mov
cmpl
sub
mov
call
fsubs
aas
test
and
or
mov
or
jl
xchg
data16
sti
cld
lds
test
and
data16
cmp
cwtl
inc
lods
inc
test
cmpsb
mov
xor
fcoml
cmpsb
push
pop
push
mov
ficomps
das
fsubrp
dec
cli
fs
popf
sub
sbb
push
leave
xchg
out
outsb
sarl
cmp
jmp
push
fldt
sbb
test
loopne
in
xchg
fs
leave
std
dec
inc
gs
cli
inc
mov
and
jbe
dec
es
add
mov
xchg
pop
adc
int3
rorl
xor
xchg
pop
xchg
xlat
aad
stos
or
sub
fwait
ljmp
cmpsb
in
je
imulb
jecxz
leave
movsl
xchg
mov
xchg
test
sbb
mov
pop
into
call
add
ret
repz
pop
pop
cli
jl
imul
add
lds
js
imul
xor
dec
insl
out
not
arpl
adc
data16
or
and
imul
mov
add
xor
andb
push
and
dec
lret
cmpsb
mov
ret
mov
dec
es
loop
mov
jbe
dec
add
outsb
inc
sbb
scas
out
js
and
xchg
fsubs
xor
fnstsw
scas
adc
int3
mov
mov
orb
cmp
add
dec
aad
or
or
pop
adc
ret
or
enter
lea
push
jo
xchg
addr16
in
mov
adc
xor
dec
movsb
and
test
cld
outsl
arpl
fs
lcall
movlps
dec
sbb
jns
push
dec
or
mov
mov
pop
or
dec
out
out
cltd
pop
sbb
sbb
jne
scas
fwait
cmp
arpl
mov
test
popf
jbe
aad
cs
iret
shll
mov
pop
xor
dec
dec
in
ljmp
xlat
movsb
loope
in
test
outsb
inc
xchg
mov
pop
dec
pop
insl
aaa
lahf
insb
shlb
loopne
inc
icebp
add
sub
shll
push
jp
loop
pop
mov
into
pop
sbb
aam
sub
clc
lods
out
push
in
mov
dec
mov
mov
mov
out
icebp
lcall
dec
mov
mov
xlat
push
aaa
aad
mov
into
push
js
jo
xor
jmp
fidivl
sti
mov
pop
add
xchg
ljmp
insb
hlt
mov
jo
ljmp
jns
jge
loopne
insl
mov
jno
xor
mov
in
andb
lahf
adc
mov
scas
mov
dec
imul
ds
int3
sub
push
mov
or
leave
mov
pop
dec
int
imul
and
mov
cmp
rcrl
popl
fdivp
mov
lods
xor
loop
sbb
out
outsb
push
stc
daa
popa
data16
mov
mov
scas
or
imul
rclb
test
add
bound
loope
insl
shll
mov
or
lds
mov
jo
js
aas
stos
jp
mov
xchg
sti
js
pop
mov
fsubs
add
rclb
inc
mov
xor
or
arpl
in
dec
add
in
inc
mov
insl
mov
ja
lds
mov
addr16
lock
das
or
sub
stos
pushf
repz
push
sbb
mov
push
ss
stos
sub
pop
mov
xchg
xchg
ret
out
or
cld
xorb
or
leave
jnp
fldl
sub
push
mov
xchg
int
xor
or
jecxz
pop
pop
inc
jle
mov
outsb
and
ret
inc
cmc
fwait
xor
jle
popf
lret
pop
jl
pop
fcomip
xchg
xor
les
ja
lock
xchg
push
mov
or
jo
repnz
mov
pushf
daa
mov
sub
xchg
pop
mov
xor
je
loopne,pn
cmpsl
cmc
movsl
xor
mov
mov
mov
push
stos
pop
stos
xchg
ss
xor
add
cwtl
bound
neg
adc
mov
cmpsl
cmc
xchg
inc
aas
xor
mov
adc
dec
mov
sub
adc
insb
int
lock
sbbl
or
xchg
jecxz
dec
add
notb
fimuls
or
fldl
int
cli
jg
ja
cmp
les
add
or
cld
jge
sub
or
outsb
adc
fdivl
icebp
mov
leave
xor
inc
aad
mov
repnz
fistpl
sbb
das
ret
ss
adc
xor
pusha
sub
cmc
pushl
and
aad
enter
mov
insb
popa
leave
in
push
outsb
test
fistps
lcall
test
in
mov
addr16
inc
mov
mov
andb
mov
test
inc
or
mov
inc
mov
mov
mov
cld
lret
xlat
aas
mov
into
xchg
and
add
jnp
fcmovnbe
fs
push
or
mov
mov
dec
mov
mov
xchg
push
xor
cmp
push
gs
cmp
ret
and
filds
ds
int3
pop
mov
rep
pop
push
iretw
and
mov
mov
push
and
xor
test
cmp
jb
xchg
pop
pop
mov
lcall
insb
mov
jmp
sub
jp
js
clc
orl
scas
or
xor
push
add
add
mull
sarb
jns
mov
js
sub
pop
mov
jle
lods
and
fnstsw
cltd
mov
cmc
iret
mov
popf
jae
xchg
mov
cmpsb
scas
je
mov
cli
shl
mov
jp
mov
repnz
or
loop
sbb
mov
sub
xor
xchg
rorl
jae
sub
lret
pushl
mov
cltd
mov
daa
ret
adc
int3
mov
mov
or
popa
add
stc
ljmp
ficompl
mov
inc
add
sbb
xor
sbb
in
push
mov
jecxz
mov
adc
ds
popf
rclb
mov
stc
add
and
add
leave
sub
nop
ds
cs
xor
adcl
xorb
xchg
xchg
pop
xor
std
addl
test
in
and
adc
sbb
cmp
ret
gs
int
and
dec
mov
test
add
xlat
mov
in
and
inc
ret
sbb
sub
ficomps
and
xor
int
jb
sbb
fisttpll
jae
pop
xor
enter
xchg
frstor
shlb
loop
mov
arpl
sbb
or
jle
pop
cmp
jnp
shl
mov
fmul
sbb
sub
xchg
push
enter
or
cmp
call
or
cmp
scas
inc
lret
jl
cli
pop
inc
ljmp
stos
mov
jp
lcall
and
sub
xchg
and
into
xor
and
into
jno
lcall
mov
sbb
pop
mov
scas
sub
sub
pushf
sub
push
mov
sbb
aaa
xchg
addl
dec
fwait
or
and
inc
xor
aam
jbe
lahf
cs
jno
hlt
sub
ret
pop
sti
cmp
pusha
in
inc
rolb
jb
push
pop
sbb
icebp
loop
popf
fcompl
jbe
jo
push
push
cld
mov
fcoms
xor
stc
into
adc
mov
add
jnp
mov
pop
jge
sbb
mov
inc
adc
fidivrs
ljmp
lret
fisubrs
movsl
xchg
xor
enter
dec
dec
adc
and
out
pop
jno
test
fwait
lret
push
mov
shll
lock
cs
sub
scas
cmpsb
mov
test
dec
xor
cltd
iret
mov
xchg
or
xchg
xchg
outsl
dec
add
dec
fxch
mov
adc
cmc
push
adc
jl
mov
das
push
inc
jns
mov
or
ret
loope
sahf
inc
inc
ret
mov
mov
std
sub
xchg
int3
push
mov
lcall
outsb
push
lahf
test
addr16
mov
mov
fildll
push
stos
mov
xor
lock
out
lds
loope
nop
mov
je
fildl
and
test
adc
cmp
or
mov
outsl
push
jg
aas
fidivrl
fistpl
jo
pop
or
mov
out
les
rcl
popf
and
jo
lds
sub
out
or
inc
mov
add
push
insb
mov
insl
stos
repnz
xchg
xchg
pushf
push
add
je
in
aam
xchg
ja
andl
inc
andl
shlb
jae
icebp
mov
mov
sub
lds
sbb
fwait
pusha
je
dec
mov
lahf
std
es
pop
iret
int3
pushf
adc
lds
or
mov
rolb
lods
mov
pop
popf
mov
pop
gs
jmp
adc
mov
mov
popf
testl
mov
push
es
fadd
mov
fucomip
jne
pop
jb
inc
outsl
push
lods
ss
adc
out
cltd
push
stos
out
mov
inc
inc
pushl
fwait
test
nop
add
hlt
xchg
fidivl
enter
jae
xor
test
cmp
sub
push
mov
mov
xchg
push
movsb
sbb
fdivrs
int
out
push
mov
xchg
les
lahf
sbb
mov
mov
in
cmpsl
pop
jno
sub
adc
xchg
out
in
sbb
and
dec
in
cmp
or
dec
xchg
cwtl
push
mov
cmc
stos
mov
psrlq
or
pop
imul
and
ja
sbb
das
add
jb
push
and
pop
fsubl
ljmp
cmp
stc
js
ret
popa
sbb
push
insb
push
stos
push
sub
rcrl
mov
xor
rclb
iret
xchg
addr16
jge
or
outsl
cmpsl
js
xor
daa
and
ds
out
fildl
dec
adc
idivl
imul
cltd
ja
push
dec
jo
out
sar
xchg
xchg
testb
imul
ds
xchg
shrl
insb
push
and
mov
xor
ljmp
stc
es
movsb
das
xlat
nop
pop
repnz
ret
mov
aam
push
imul
mov
push
or
pop
jno
mov
cmc
pop
xchg
lods
call
dec
mov
add
loopne
mov
data16
and
sti
mov
push
xchg
in
xchg
push
daa
leave
and
push
shl
insb
lea
out
pop
outsl
cmp
sbb
or
and
sbb
roll
jg
mov
lret
loopne
mov
outsl
inc
scas
imul
sbb
pop
iret
fdivrs
jle
cmpsb
stos
testb
push
js
ret
mov
pop
scas
adc
loope
stos
xchg
fistps
imul
push
jmp
and
lock
dec
push
rcr
sub
ret
repz
call
adc
push
fwait
pop
sub
xchg
shrl
mov
mov
nop
push
jo
adc
push
daa
xor
and
fsubrs
dec
faddl
in
lds
mov
mov
shrl
ljmp
mov
dec
bound
sbb
mov
and
mov
sbb
jecxz
imul
popa
mov
push
cmp
mov
push
mov
test
ss
pop
push
sbbl
inc
imul
in
sar
fdivrs
fucomi
jp
pop
jbe
sbb
mov
lcall
xor
ss
movsl
add
fdivrl
dec
out
jg
inc
mov
lds
mov
push
xchg
in
movsl
add
pop
xor
xor
ss
out
xor
inc
jge
cmp
add
sti
cmp
dec
and
lcall
jo
sbb
sar
repnz
out
cmpsl
jmp
inc
sbb
ret
loop
cmp
mov
jp
je
fistpl
adc
lods
mov
adc
xor
sahf
push
adc
subl
movsl
pop
push
int3
aas
dec
movsl
sbb
test
lock
jbe
sub
mov
cmp
insb
pop
sbb
mov
add
lret
out
pop
adc
mov
sbb
cmc
and
lret
inc
fs
mov
icebp
aaa
sbb
xchg
xchg
pop
xchg
push
hlt
outsl
dec
sbb
fcomps
ret
pushf
cmp
xchg
in
push
fldenv
xchg
dec
loopne
xchg
add
jns
lret
leave
ljmp
fmull
sbb
dec
inc
pop
cmp
jnp
sbbb
xlat
cmc
pop
ds
jae
pop
loop
xor
mov
mov
xor
call
mov
mov
ficomps
mov
loopne
adc
lahf
ja
and
notl
adcl
scas
adc
cmp
lret
psubw
lcall
popa
cmp
inc
je
loope
in
add
sahf
mov
jbe
and
jmp
sti
pop
jmp
push
and
xchg
pop
fisubrs
mov
xchg
fildl
mov
xchg
notb
mov
mov
dec
fcoml
and
jnp
or
xlat
shlb
ja
test
imul
push
ret
movsl
mov
push
cwtl
dec
shlb
js
inc
rcr
les
cmp
insl
fisubs
ss
xchg
stos
or
aas
dec
xor
inc
jge
or
and
or
push
repnz
or
or
pop
fs
mov
inc
cmp
flds
cmp
sub
jg
adc
mov
lea
call
pop
sbb
in
aad
lea
in
jl
into
iret
fiadds
cmp
jno
loopne
mov
fmuls
add
cmpsl
adc
int
sub
lahf
xchg
call
xor
xchg
jle
cmpsb
iret
or
and
mov
xor
push
popa
arpl
lret
arpl
int
or
jge
test
adc
jle
pop
xchg
dec
push
mov
mov
mov
push
in
inc
mov
or
dec
int3
jp
add
add
adc
addr16
mov
adc
jg
and
xchg
in
lret
add
stc
xor
jge
insl
jl
imul
stos
fnsave
jp
in
cmpsl
cltd
pop
in
lds
out
cmp
in
fcom
ret
cmp
ret
mov
pop
pop
jl
fwait
iret
jp
pusha
push
out
inc
jae
call
cmp
daa
xor
add
inc
loopne
mov
incb
lods
inc
hlt
xor
jo
dec
xchg
repnz
stc
xor
loope
scas
das
cmp
out
sbb
rcrb
addr16
lahf
into
aad
jnp
xor
ficompl
jbe
not
jp
add
mov
aad
mov
iret
stos
adc
inc
xchg
icebp
js
xor
mov
into
sub
mov
and
mov
ljmp
push
lret
lea
add
push
jp
adc
or
gs
jg
jp
or
nop
push
or
push
mov
std
es
xor
add
jmp
out
cltd
mov
insl
inc
add
scas
andb
sub
cmc
xor
ljmp
stos
sbb
dec
movsl
ss
popf
stc
mov
jl
mov
jb
pop
negl
shl
add
data16
mov
aam
sub
int3
or
mov
and
jmp
ret
inc
sbb
cmp
cli
loope
pop
dec
in
mov
xchg
add
xor
pop
rcr
push
xchg
push
imul
scas
into
cmp
mov
xor
je
icebp
pop
cli
faddl
cs
xchg
dec
inc
and
lock
push
jle
cmp
mov
or
jp
bound
xor
pop
add
lret
or
fwait
inc
mov
or
pop
mov
push
and
xor
mov
call
jl
pop
xchg
add
int
sub
movsb
int3
xchg
inc
lods
inc
pop
arpl
jle
inc
dec
rcrb
inc
lret
je
andl
data16
dec
mull
cmpsl
xor
lret
fsubr
lea
pushf
pop
out
adc
fdivl
mov
xchg
popa
jbe
mov
inc
test
sbb
sbb
mov
mov
outsb
in
das
dec
or
mov
push
rcrl
gs
jecxz
inc
imul
adc
jbe
inc
cmp
adc
pusha
inc
scas
popa
fstpl
and
es
out
mov
sub
test
push
mov
loopne
flds
out
popf
mov
add
sbb
aam
stos
mov
ret
cwtl
xor
push
or
nop
sbb
sarb
int3
aam
enter
mov
cli
outsb
ds
fstpt
fbstp
and
mov
bound
jbe
rorl
dec
fistl
aas
and
mov
adc
and
mov
daa
pop
xlat
mov
movsb
pop
pop
les
mov
cld
and
daa
pop
xchg
sahf
daa
adcl
inc
cmc
js
xchg
repz
mov
lret
test
mov
jmp
inc
cwtl
daa
aam
scas
mov
or
pusha
hlt
jmp
mov
or
push
fistl
pushf
into
push
adc
push
xchg
mov
leave
jl
cli
pop
ret
and
inc
lcall
dec
fmull
push
sub
inc
icebp
shr
mov
push
push
popf
pcmpeqw
adcl
lods
jl
xor
add
add
lcall
mov
push
cmp
pop
inc
mov
cltd
iret
shrl
cs
cs
inc
push
jo
scas
movsl
jb
lahf
mov
arpl
xchg
loop
mov
es
into
or
sbb
mov
les
in
or
pop
lea
cmp
jp
rcrl
and
cs
add
test
sarl
push
or
pop
mov
mov
jmp
mov
les
aaa
daa
cmp
int3
mov
mov
inc
mov
lea
test
xchg
add
lret
fwait
xchg
repz
lahf
push
adc
or
lcall
cld
dec
pusha
sti
jo
into
nop
inc
mov
mov
pop
fs
mov
cs
mov
mov
or
mov
dec
pop
jne
dec
mov
hlt
mov
rol
or
leave
aam
gs
inc
outsl
mov
cmp
xor
popf
insb
out
lahf
cmp
cwtl
pop
xchg
shll
and
fmulp
es
ss
pop
mov
push
outsb
popa
inc
mov
sbb
addr16
fldenv
xor
jae
or
cmp
imul
popa
mov
pop
cmp
dec
shl
push
pop
dec
jmp
mov
sub
enter
or
xchg
mov
lock
inc
div
pop
dec
pop
cli
inc
fbstp
jg
lcall
mov
int3
or
xchg
jecxz
mov
icebp
jbe
mov
and
outsb
jmp
adc
jg
jmp
and
jne
sbb
add
cmpsb
push
insb
mov
push
cmc
nopl
push
das
sbb
fisttpll
mov
and
cmp
not
sbb
jae
adc
dec
cwtl
mov
push
imul
or
rcrb
xchg
rcrl
lods
mov
sub
pusha
loope
cmpsb
sub
cmc
mov
pop
fsts
fistps
fstps
and
mov
xchg
decl
cmp
xor
pop
movb
sbb
pop
mov
call
mov
test
add
leave
pop
lods
cmc
jp
adc
fildll
stc
fdiv
scas
fucomip
jmp
pop
clc
adc
mov
dec
rol
in
aad
mov
divb
rolb
cmp
stc
out
and
clc
add
dec
std
callw
mov
lcall
dec
pop
cmp
push
xchg
inc
jns
cli
xchg
mov
and
ret
jne
out
xchg
or
outsl
idivl
mov
push
lret
push
ss
mov
jno
cmpsl
test
mov
sub
cwtl
cs
pop
xor
add
push
leave
add
adc
fbld
ja
inc
aas
jp
sbb
xchg
lods
cmpb
dec
mov
inc
inc
adc
int3
cli
lock
mov
pop
mov
dec
jbe
push
test
outsl
mov
in
sahf
daa
sarb
xor
and
mov
dec
mov
pop
adc
scas
fstl
je
scas
test
stc
ds
pop
mov
mov
mov
push
dec
popa
in
xor
decl
out
mov
sub
fidivs
lcall
or
xchg
cmp
dec
jmp
xor
xchg
mov
or
leave
jo
and
push
test
test
sbb
jge
xlat
es
pop
push
sub
xlat
inc
sbb
addr16
or
and
lds
sbb
jbe
pop
push
mov
scas
mov
icebp
cmp
popf
push
mov
rolb
movb
push
fimull
inc
sub
int
subl
aas
insl
sbb
aaa
xchg
mov
inc
cmp
or
push
mov
jo
mov
fs
mov
and
mov
mov
pop
sbb
daa
dec
fucomp
cmp
scas
ds
popa
and
in
je
inc
xchg
adc
call
daa
adc
sbb
xor
jp
xchg
jno
dec
pop
push
pop
add
pop
test
bound
shr
cmp
xchg
sub
clc
icebp
push
mov
inc
mov
add
mov
sub
lret
imull
cs
imul
lea
push
lahf
adc
arpl
pushf
cmp
push
mov
sub
add
xchg
jne
pushf
fdivl
ja
add
and
push
aaa
popa
jp
test
lea
and
mov
xor
push
fwait
out
test
jmp
adc
pop
jecxz
out
mov
icebp
adcb
pop
repnz
mov
mov
xchg
das
andl
mov
and
lock
loop
jg
mov
ret
xor
lcall
popa
sub
call
xor
sbb
aas
aaa
sub
fdivrl
xchg
cmp
std
pop
or
pop
pop
pop
adc
stos
adc
xchg
adcb
test
je
sbb
xchg
mov
int
inc
sahf
jnp
test
xchg
scas
movsb
push
ret
loope
xor
je
clc
push
sub
imul
jecxz
mov
sub
rorl
jbe
xchg
gs
dec
fsts
lcall
fisttpll
mov
out
out
cmp
pop
leave
fldl
sub
push
xor
fdivl
mov
es
lods
imul
add
mov
cmpsb
and
mov
xor
loope
xor
or
dec
test
inc
adc
mov
mov
cmp
push
pop
in
ja
lods
divb
rcrl
push
xchg
xchg
mov
dec
hlt
push
mov
xchg
in
inc
inc
add
xor
sub
lret
mov
icebp
adc
fs
sarb
xchg
imul
jns
test
xchg
lods
std
outsb
out
pusha
repnz
mov
sub
pop
cmp
pop
sub
jmp
lahf
pop
sbb
mov
pop
push
sub
stos
mov
jnp
lahf
mov
sarl
frstor
mov
push
repz
xchg
or
std
outsl
xor
jmp
shl
les
das
cmp
and
lcall
rorl
mov
mov
sti
mov
int3
repnz
fwait
lods
inc
and
sbb
jge,pn
flds
push
arpl
mov
add
popa
aas
sbb
pop
addr16
lahf
mov
into
push
pop
jb
fs
mov
jae
enter
jmp
push
mov
ss
adc
add
leave
jge
xchg
mov
fistpll
sti
mov
leave
movsb
pop
xchg
push
test
jb
and
push
and
sbb
sbb
inc
jg
jno
aaa
rol
fxch
xchg
lds
push
out
inc
and
mov
jmp
sub
ss
cld
dec
insl
mov
adc
fiadds
jo
mov
test
jecxz
pop
xor
mov
arpl
adc
push
push
push
insb
and
jbe
add
jnp
stc
pop
scas
mov
push
xchg
dec
cmp
scas
sar
pop
sbb
fdivrl
cmp
dec
ja
adc
jle
mov
lods
mov
xchg
hlt
arpl
push
pop
cmp
xlat
mov
mov
test
xchg
add
adc
jmp
lods
mov
lock
mov
mov
pop
fnstcw
or
pop
imulb
pushf
or
push
mov
add
cmc
xchg
mov
fidivrl
and
sub
arpl
ja
xlat
lock
jns
inc
pop
rcrb
cs
ljmp
mov
into
in
aas
pop
scas
icebp
movsb
adc
stos
xchg
scas
ror
cwtl
into
adc
jne
aad
mov
sbb
shl
frstor
xchg
push
adcb
addr16
test
gs
shll
or
sub
in
fwait
dec
sub
pop
addr16
arpl
fistl
xchg
mov
fnstsw
push
mov
mov
cmp
mov
mov
es
lods
xor
outsl
repnz
xor
lds
stos
pop
mov
movsl
dec
dec
jae
leave
sti
jecxz
lods
add
aaa
cwtl
inc
or
std
lods
popf
and
jge
mov
jle
xchg
call
iret
lret
imulb
addr16
jae
nop
jns
push
and
dec
mov
ds
push
outsb
push
adc
in
cltd
xchg
lcall
jmp
hlt
jecxz
mov
sub
add
inc
ficompl
mov
filds
pop
dec
xor
data16
mov
cltd
push
popf
jmp
add
push
ss
popf
cmpsl
xacquire
loopne
loop
xchg
sbb
adc
mov
icebp
out
sub
lds
testl
aam
les
pop
sarb
or
popa
cmp
and
js
push
mov
mov
les
jnp
repnz
add
push
insb
add
das
ret
pushf
xor
jle
push
pop
or
scas
and
push
call
or
test
push
cmpsl
movsl
inc
push
adc
dec
ss
sub
outsb
cmp
insb
daa
xchg
imul
fyl2xp1
cmp
scas
ret
push
and
leave
push
jne
in
inc
fwait
leave
ljmp
dec
and
shlb
sub
sub
add
mov
mov
push
stc
mov
xchg
or
push
mov
pushf
sub
jge
notl
addl
imul
push
shll
jo
pushf
jge
andb
pop
rorb
ret
psrad
mov
jl
mov
outsl
push
mov
xchg
or
mov
mov
sub
cmp
sub
js
test
inc
scas
inc
cmpsl
test
and
bound
popa
xchg
pop
leave
mov
mov
shlb
and
and
mov
mov
sub
mov
dec
xor
adc
iret
mov
aas
rorl
fsts
repz
or
scas
mov
scas
lds
sub
and
adc
mov
lcall
inc
hlt
inc
icebp
aad
sbb
cmpsl
sbb
ficomps
incb
add
inc
aas
pop
fistps
daa
dec
fimull
jae
loopne
mov
stos
jge
mov
je
cmovs
cmp
sti
xor
fwait
addb
in
mov
incb
xchg
sbb
into
xchg
lret
xor
add
loop
cmpsl
fcomp
imul
imul
mov
repz
sub
adc
imulb
mov
cld
mov
mov
mov
shrb
or
sahf
rep
aaa
popa
pop
enter
xor
push
mov
cmp
jmp
je
push
aas
sahf
mov
arpl
cmp
adc
pop
jne
lcall
add
mov
je
rcl
xor
aam
insl
cmc
imul
out
aad
sbbb
push
loopne
out
mov
testb
js
mov
add
xlat
mov
popf
lock
pop
xorl
andl
xchg
sbb
inc
insl
inc
int
push
cmp
xlat
lods
jl
orl
mov
mov
inc
leave
mov
cmp
push
ret
test
outsl
std
addr16
mov
notl
dec
sahf
push
dec
addr16
pop
sub
sub
pop
mov
outsb
aad
xchg
jb
dec
jp
mov
mov
push
insb
into
or
mov
lret
fucom
and
outsl
icebp
decl
popf
mov
fisubrl
adc
daa
cs
sahf
push
xor
mov
inc
sbb
int
xchg
lds
jp
out
pop
inc
ljmp
popf
push
xor
popl
repz
stc
add
xor
jb
aaa
inc
adc
in
cmp
push
jge
cwtl
cmpsb
cmpsb
fldenv
mov
mov
sbb
sarl
insl
and
js
faddl
pushf
rcrb
insl
push
mov
jle
inc
mov
out
mov
fcoms
leave
xor
lret
mov
sbb
inc
subb
nop
sbb
xchg
mov
call
inc
adc
stc
in
andb
insb
mov
je
data16
daa
xor
push
mull
ret
loopne
cli
jbe
mov
cmpsl
insl
popa
imul
loop
repnz
sub
out
clc
je
dec
aad
imul
stos
push
out
add
les
jb
fwait
imul
adc
ret
push
jmp
adcb
xchg
ficomps
push
cmp
jne
dec
sub
pop
jne
or
stos
aaa
outsb
jno
dec
in
xchg
mov
adc
sbb
mov
fcomip
add
les
push
addr16
out
fs
pusha
sub
out
rorb
pop
sti
in
loope
dec
in
or
inc
int
sbb
mov
lods
mov
dec
movsb
imul
jne
out
sub
or
pop
push
sub
jb
or
sub
sar
pop
cmpsb
pop
fsubl
aaa
mov
adc
jns
push
push
adc
and
cwtl
std
cmp
push
lods
rcll
adc
xor
mov
mov
cmp
imul
cmp
and
fidivs
es
lcall
pop
lock
jle
mov
adc
inc
test
add
pop
lret
mov
pop
data16
out
aas
pushf
xor
push
sub
jmp
add
jge
int3
pop
clc
add
out
jbe
jne
adc
sbb
and
aad
jle
out
xor
cmp
mov
std
ret
gs
enter
xchg
add
push
lock
push
xchg
mov
insl
insb
pop
out
stos
xor
xlat
xchg
iret
loop
add
lcall
cltd
push
out
adc
filds
push
popa
jmp
fistps
loopne
push
dec
mov
mov
mov
pop
xor
int
ret
into
je
ljmp
dec
sub
sub
addr16
mov
jo
mov
pusha
add
sub
sub
jae
xchg
or
jp
xchg
adc
imul
sbb
add
pop
subl
pop
sub
ficomps
pusha
bound
stc
cmp
int3
stos
daa
repz
aas
xchg
or
jne
mov
dec
add
add
sbb
insl
and
or
shl
out
adc
pop
repnz
or
mov
pop
or
mov
andb
and
nop
pop
jmp
xchg
divl
jmp
out
xlat
cmp
pop
js
jnp
cmp
mov
les
xchg
test
pop
xor
push
xlat
orl
imul
sti
dec
scas
movl
pop
int3
sub
shlb
ret
mov
inc
inc
inc
enter
lods
jecxz
outsl
ret
cli
sub
pop
jl
sub
sbb
sbbl
pop
jno
lcall
roll
mov
jno
cmp
or
lret
in
lcall
enter
mov
cmp
pop
mov
mov
test
xchg
push
fisttpl
fisubrl
test
mov
lahf
inc
std
sbb
jbe
out
out
mov
inc
cmp
cmp
movsb
mov
mov
fildll
daa
imul
add
jb
rorb
into
push
stos
iret
add
mov
or
mov
pop
outsl
inc
push
subb
xlat
cmp
pop
add
cmpsl
imul
push
jecxz
lods
jl
pop
repnz
aas
mov
add
fsubl
movsb
test
out
mov
out
xchg
lds
lods
in
mov
inc
dec
jl
push
xchg
lea
ljmp
daa
cmp
std
cmpsb
jmp
dec
cwtl
adc
aas
in
cs
outsb
push
cmp
imulb
repnz
loopne
data16
jne
cmp
ret
xchg
scas
mov
xor
and
mov
push
popf
lods
sub
loope
sub
xor
mov
clc
dec
mov
push
jae
adc
gs
jae
das
lret
std
fs
icebp
or
pop
xor
and
testl
cwtl
fdivp
inc
out
pop
orw
push
sti
fsubrl
lds
repnz
adc
jp
xchg
je
ret
mov
jae
adc
loopne
lahf
stos
adc
sub
or
mov
ret
sub
call
in
aad
mov
enter
into
into
xchg
nop
jl
cwtl
cmp
fisubrs
xchg
ds
pop
inc
test
cli
cmp
lcall
in
aad
push
mov
dec
in
cmp
xchg
inc
sahf
jle
clc
cmp
ret
iret
gs
pop
in
cs
push
jno
dec
add
repnz
aas
or
or
lods
sub
push
mov
shrl
xchg
push
adc
stc
clc
test
or
divl
cmp
and
cmp
stos
add
mov
sub
xchg
arpl
or
push
xchg
mov
pop
fs
or
int
sbb
sbb
and
loopne
sti
mov
dec
int
push
dec
fs
imul
cmpxchg8b
lret
push
and
lahf
sbb
add
or
mov
int3
or
add
xor
popa
and
sbbb
daa
mov
cmp
mov
je
adc
fisubs
mov
push
cs
or
mov
push
dec
add
aam
mov
les
out
dec
mov
lock
pushf
push
shlb
mov
jbe
loope
pop
mov
and
cmp
xor
negl
sbb
es
push
inc
push
popa
cmp
inc
data16
sub
fdivrs
fcmovnb
in
adc
add
mov
es
push
jg
or
cmp
dec
out
add
mov
xchg
addb
xor
sahf
pop
int3
sub
cmpsl
jg
adc
and
pop
mov
fs
push
adc
xchg
and
stos
test
fcomps
mov
insl
pop
cmpsb
loop
pop
in
or
pop
cmp
cltd
lods
std
loop
mov
xchg
mov
ret
leave
es
outsl
push
lock
addps
rcll
jbe
mov
push
mov
mov
mov
or
mov
fwait
or
fimuls
aam
fldl
shrb
ds
inc
movsb
hlt
dec
fsubs
xor
insl
daa
stc
jno
jp
jecxz
outsb
std
sahf
sbb
fwait
mov
lods
inc
sub
adc
jnp
or
or
and
mov
orb
dec
fsub
ret
ss
sti
lock
cld
fisttps
push
pmulhw
pop
flds
fbld
sbb
pop
test
inc
jge
add
or
inc
add
out
and
mov
repnz
cmp
popa
dec
xchg
xlat
mov
dec
dec
inc
mov
and
push
xor
fcmovu
hlt
test
cwtl
pop
mov
inc
add
sarb
ret
in
pop
and
cmovbe
mov
dec
and
mov
inc
lods
jge
cmpsb
dec
loop
jmp
lds
aad
fisttps
mov
push
ret
outsb
jae
stos
enter
jecxz
inc
add
mov
je
rorb
loop
pop
lret
sub
jl
lahf
mov
lock
mov
inc
movsl
sub
xor
loopne
imul
mov
out
mov
adc
mov
or
in
dec
or
das
mov
fcomps
and
mov
adc
test
adc
xchg
lock
in
insl
sbb
sub
popf
jbe
adc
out
add
pop
pop
bound
in
in
fsubl
fst
imul
add
add
xor
cmp
nop
xchg
shl
enter
test
pop
cmpsl
or
jb
stc
or
cli
mov
shll
mov
pop
jb
dec
and
sbb
mov
mov
mov
sbb
mov
inc
mov
enter
cmc
fucomi
xor
push
pop
aas
arpl
call
cmc
push
hlt
loope
push
test
push
mov
inc
xor
push
mov
jns
add
arpl
pusha
movsl
jle
mov
loopne
ret
icebp
rcl
mov
or
or
std
add
jecxz
pop
cmp
cmp
push
or
hlt
sub
iret
xchg
mov
test
push
jns
mov
and
lock
loopne
je
jbe
pop
dec
sub
and
dec
xchg
lock
add
imul
cltd
jl
add
arpl
cmp
in
bound
add
dec
sub
pop
push
adc
and
jl
aaa
mov
jb
ffree
hlt
inc
and
jbe
add
mov
inc
pop
adc
inc
xchg
jg
std
sub
popa
outsb
cli
pop
cld
movsl
sbb
bound
stos
inc
aam
xchg
stos
or
jo
jne
scas
in
cmc
jns
and
or
sub
xchg
dec
xor
jle
pop
lods
std
adc
sti
adc
lret
aad
sbb
xor
stos
out
sbb
cmpsb
or
js
sbb
shr
fs
or
jl
sarb
loopne
add
das
pop
popaw
shrl
push
iret
inc
fidivl
mov
mov
dec
mov
in
ss
push
scas
xchg
jns
inc
movsb
repnz
cmpsb
push
cmp
inc
in
mov
push
icebp
cmpsl
mov
mov
inc
test
inc
rcrl
adc
and
adc
lods
out
pop
stc
or
shrl
fdivrl
xor
add
add
shl
outsb
repnz
jl
outsl
addl
dec
aaa
out
call
add
mov
inc
xlat
sub
inc
in
add
adc
fists
add
or
stc
imulb
xor
cmc
stc
inc
imul
idivb
dec
test
in
mov
loop
mov
mov
mov
cmc
push
shl
mov
in
cs
push
test
add
les
xchg
arpl
push
stos
scas
mov
dec
mov
sbbl
mov
adc
lock
std
stos
and
jne
dec
inc
cmp
pop
pop
int3
lret
hlt
fistps
push
shll
mov
pop
lret
icebp
push
inc
ds
aam
sbb
adc
jnp
mov
out
xchg
icebp
lods
sub
jae
js
adcb
pop
lret
xchg
test
and
getsec
dec
cmp
repz
icebp
fwait
cmp
pushf
xchg
lcall
xor
or
call
repnz
mov
andb
test
repz
mov
pop
sub
setns
push
shl
push
out
sub
loop
hlt
push
mov
fmul
cmp
lret
inc
mov
insl
outsb
pop
adc
mov
je
int3
jne
inc
xchg
das
pop
sub
cmp
dec
pop
mov
dec
fadds
pop
aas
out
pop
inc
pop
test
shrb
lret
fs
mov
aam
jae
int3
out
movsb
xchg
loop
adc
shll
ret
mov
mov
or
push
cmp
movsl
rcr
add
pop
xor
repz
lock
xorb
repz
mov
xchg
rcll
stos
xchg
sbb
insl
loope
push
loope
mov
pop
nop
adc
push
mov
movsl
sbb
iret
lds
inc
out
and
mov
mov
test
sub
xchg
jno
mov
loope
inc
dec
movb
mov
pushf
inc
pop
dec
mov
sub
push
mov
int
mov
je
shlb
outsb
ss
cld
xchg
gs
out
pop
xchg
jno
lods
int3
lds
cmc
mov
fcomip
adc
cwtl
sub
ja
jno
outsb
pop
adc
xchg
and
or
fnsave
clc
repz
les
lret
mov
sti
fistl
ret
jbe
ficoms
mov
into
mov
nop
mov
imul
xchg
dec
int3
cmp
rcrl
adc
jbe
fsubrl
sbb
stos
or
lcall
cwtl
inc
xor
mulb
adc
mov
jns
mov
mov
xchg
jbe
test
jmp
nop
xor
mov
sbb
ljmp
jne
jae
mov
mov
mov
mov
mov
ret
sub
scas
cmc
inc
jno
jne
gs
xchg
add
jne
movsl
cltd
inc
dec
loopne
lds
rdmsr
sahf
jno
jg
cmp
fcompl
sbb
loopne
mov
rcrl
mov
mov
mov
xor
mov
jbe
idivl
dec
mov
popa
out
xchg
mov
adcb
jg
dec
and
pop
sbb
gs
or
or
mov
testb
and
ss
ret
call
mov
mov
in
test
sbb
mov
jl
xchg
lahf
push
test
cs
loopne
hlt
inc
sahf
sbb
enter
adc
fisttpll
and
inc
xchg
insb
popa
loope
or
iret
xchg
sahf
inc
rcrb
pop
xchg
lock
fcomps
or
sub
movsl
mov
inc
xchg
mov
insb
nop
lods
inc
stos
cs
sub
repz
arpl
add
aam
sbb
divl
outsb
push
inc
mov
jb
mov
and
movsb
in
cwtl
fucom
jae
ds
add
popa
out
test
inc
xrelease
and
sub
fwait
add
sbb
cmp
ds
and
push
mov
arpl
sub
sbb
lds
cmpsl
sub
addr16
leave
stos
xor
insb
pop
stos
jmp
dec
loopne
call
dec
pop
loopne
imull
xchg
lds
mov
scas
cld
mov
das
mov
fimuls
adc
pop
mov
sub
mov
in
mov
mov
fs
dec
mov
xchg
bound
jae
mov
lret
xchg
decl
dec
xchg
out
mov
sub
filds
or
xor
out
and
dec
out
test
adc
sub
inc
add
lret
push
mov
mov
aam
movsl
es
shr
cmc
sbb
lea
sbb
sbb
push
movsb
pop
mov
cmp
add
addl
in
popa
pminub
xchg
cmp
loope
push
in
or
mov
pop
inc
inc
xchg
inc
bound
out
cltd
outsb
inc
inc
cld
mov
ja
and
sub
negb
dec
xor
ljmp
push
dec
test
mov
jb
out
faddp
sbb
rolb
mov
add
sbb
inc
jle
push
cld
das
sbb
fdivr
call
mov
imul
stos
ret
cmpsb
push
jbe
shlb
insl
rcr
push
jge
and
sub
mov
sbb
js
xchg
xor
mov
aam
xor
aas
test
mov
jae
add
mov
or
mov
cmp
sti
gs
cli
out
bound
insb
push
xlat
inc
mov
fistps
dec
fs
cld
clc
cmp
mov
pop
sub
scas
adc
lock
sarb
xor
loope
movsb
mov
push
pusha
pop
nop
add
insb
xor
cmp
aam
in
fcmovnb
fimuls
mov
js
pop
sbb
jecxz
or
and
cmp
je
cs
stos
pop
gs
out
in
adc
mov
mov
jmp
add
mov
bound
rcr
or
xchg
xor
mov
aaa
and
xorl
cmpsl
ficoml
and
ficompl
push
and
test
sbb
jl
mov
jecxz
fwait
out
inc
incb
sub
adc
xchg
or
add
dec
insl
daa
inc
cmp
dec
cmp
pop
sub
mov
insl
sbb
in
push
jo
cmp
adc
jno
sbb
aad
xchg
mov
fcmovnbe
push
sahf
pop
aad
adc
loopne
dec
mulb
lea
or
cmp
es
ds
mov
pop
add
roll
fcmovbe
xchg
add
mov
mulb
test
pop
sbb
sub
pop
icebp
dec
pop
dec
sbb
clc
add
sub
mov
and
xchg
mov
xchg
cmp
push
aad
cld
and
xlat
mov
imull
imul
lods
jno
and
or
mov
cmpl
iret
jge
scas
aas
mov
or
subl
pop
cmp
dec
test
and
inc
std
mov
orl
sbb
mov
sahf
popf
pslld
adcl
in
xchg
xorl
repnz
out
jle
add
cmc
rolb
inc
fiadds
pusha
cmp
mov
inc
leave
insl
jns
or
ret
mov
pop
sub
and
jne
ljmp
subb
cwtl
andl
jbe
sbb
mov
ud2
dec
xchg
lods
sbb
in
loopne
add
push
pop
mov
icebp
sbb
aas
lods
inc
lcall
sti
inc
andb
pop
dec
cli
fwait
xchg
adc
inc
movsl
sbb
cmp
jb
ss
pop
shrl
aam
call
ss
sub
cmp
test
mov
scas
xor
out
lds
cmp
xchg
push
in
fwait
aam
jae
inc
pop
iret
mov
jp
jg
leave
push
in
cwtl
lret
mov
loopne
cli
jae
xchg
ja
jb
mov
dec
push
in
add
push
or
daa
sbb
pop
cmp
pop
xor
xor
stc
inc
sbb
fptan
or
hlt
iret
push
sbb
sar
ret
insb
nop
and
xchg
mov
arpl
bound
mov
xor
adc
jnp
xor
sbb
push
test
loopne
das
adc
mov
pop
mov
pop
dec
hlt
cs
mov
fsubrs
fisubrs
jb
add
cmpsb
test
test
out
fldenv
arpl
and
les
cmp
out
mov
xchg
cmp
push
sbb
push
mov
stos
ds
push
in
mov
push
jg
test
sub
add
das
push
daa
insb
jmp
cs
mov
cmp
out
cld
arpl
adc
xchg
push
mov
lods
push
sarl
dec
test
rcpps
jmp
adc
sti
xchg
aad
gs
negl
sub
add
pushf
pop
stc
jecxz
mov
xchg
daa
mov
mov
inc
xchg
fwait
jmp
test
push
pop
mov
sub
lret
inc
nop
pop
or
mov
xlat
push
mov
inc
cmp
mov
inc
outsl
aaa
orb
xchg
xor
push
mov
adc
sbb
movsl
cwtl
xchg
push
in
push
inc
clc
fdivl
mov
stos
leave
ficompl
inc
cmc
xor
inc
pop
setno
dec
fisubs
adc
cmc
or
cmp
sbb
outsl
inc
cmpsb
jae
lret
inc
and
mov
sbb
dec
jmp
loope
cwtl
sahf
int
das
cmp
enter
jno
xchg
jle
cs
insl
testl
testl
xchg
ret
aad
xchg
pop
xor
sbb
pushf
cmp
cmp
aaa
out
add
mov
das
lods
xchg
loope
cmp
xlat
fdivrs
mov
dec
mov
cs
lods
xor
repnz
pop
xchg
sti
mov
pop
arpl
movb
dec
mov
cld
pop
mov
and
xchg
jle
ret
aaa
mov
add
insb
push
loop
jg
jbe
add
and
jae
inc
lahf
jne
jne
out
fildll
add
mov
mov
mov
push
cmp
xchg
push
cmp
popa
test
lods
dec
adc
sbb
inc
les
mov
sub
insl
sbb
iret
push
or
inc
enter
sbb
mov
aad
es
cmc
and
inc
dec
push
mov
inc
fcmovb
xchg
scas
out
push
inc
push
lcall
mov
out
sbbl
push
in
movsb
gs
xchg
cmp
inc
pop
daa
ja
les
sbb
lahf
or
notb
cmp
mov
mov
lret
cs
in
push
sbb
lock
jmp
jo,pn
fcompl
and
xchg
test
sbb
pop
lahf
orb
push
add
sub
dec
int3
mov
xchg
popa
xchg
loopne
cmpsl
sbb
pop
out
mov
call
ret
repnz
xor
xchg
sti
xchg
div
imul
adc
add
ds
push
lods
mov
sbb
les
and
add
pause
mov
movsl
lea
mov
or
xchg
add
imul
push
jo
cs
lahf
dec
lds
les
xor
mov
jb
dec
lods
sbb
adc
fisubrl
xor
xor
insb
or
sub
adc
loop
lcall
push
lds
jg
jge
jecxz
imul
leave
out
rcl
push
call
mov
movsl
xchg
cltd
sub
lret
daa
out
sub
dec
movsb
jbe
xchg
fcmovu
repnz
outsb
and
sbb
imul
jmp
mov
xchg
test
mov
test
into
mov
and
std
aam
sbb
enter
rorb
in
lcall
push
fsts
push
dec
jmp
lock
lock
lods
fistpl
in
sbb
rolb
add
cmp
loope
pop
or
dec
cmp
outsl
pop
mov
and
adc
adc
adc
mov
fadd
mov
or
inc
stc
sub
mov
scas
imul
xchg
lea
sti
sub
mov
mov
scas
repz
xchg
push
inc
sub
xor
sub
mov
dec
arpl
xchg
lods
adc
testl
repz
pushf
pusha
fsubr
adc
lods
subl
push
idivb
mov
insb
lea
lods
push
orb
scas
pop
push
add
iret
mov
dec
sub
sbb
xchg
cmp
aam
fsubrl
lods
gs
dec
fs
pushf
imul
push
jcxz
cmp
dec
dec
addr16
fs
sahf
push
aad
stos
jns
mov
adc
insb
and
push
test
pop
jae
cmp
xchg
sbb
jp
jb
inc
aad
or
sbb
in
push
mov
daa
sti
or
push
mov
lods
shll
outsl
pop
push
dec
ljmp
xchg
inc
repz
jo
pushl
fucomi
in
inc
pop
push
dec
pop
xor
mov
hlt
lds
arpl
js
dec
je
bound
mov
xlat
cli
inc
sub
imul
cwtl
repz
sub
mov
ret
cli
mov
fucomip
jle
rclb
pop
dec
inc
or
test
aaa
mov
andl
lods
xor
add
adc
push
dec
jl
subb
in
lods
dec
xor
push
pop
aam
jmp
sbb
pop
aas
and
and
stos
sub
mov
andl
popf
and
push
and
or
sbb
xchg
sbb
mov
lahf
cld
cmp
frstor
add
aad
jecxz
sbbb
in
push
xchg
mov
sti
pop
out
sbb
fadds
sbb
pushf
mov
push
cmpsb
aas
jne
xchg
mov
mov
jo
push
jo
jecxz
scas
imul
out
xchg
mov
lcall
popf
adc
pop
dec
add
cltd
sub
pop
jo
cmp
shlb
fsubrl
mov
pop
scas
jp
out
shl
cmp
jns
movsb
mov
push
push
loopne
mov
mov
push
xchg
outsl
je
push
xchg
inc
add
mov
push
push
push
pop
and
inc
filds
movsl
cli
arpl
or
sahf
adc
mull
fbld
lds
push
dec
mov
xor
into
pusha
inc
push
pop
shl
cld
and
xor
pop
clc
add
jmp
fs
sti
lods
test
push
sti
dec
cltd
idivl
mov
hlt
mov
xchg
repnz
jae
adc
mov
popl
in
sub
mov
in
sub
icebp
push
xor
push
shrb
loopne
adc
insb
negb
loopne
test
cmp
mov
mov
mov
jg
aam
mov
fscale
mov
fisttps
mov
push
fnstsw
cmpsb
call
push
mov
out
lret
inc
dec
xor
sbb
pop
aaa
push
adc
mov
lret
jle
gs
adc
stos
loope
dec
jae
jecxz
test
call
test
xlat
push
int
cmp
outsb
sbb
shrl
or
lret
xchg
mov
ret
fcomps
xchg
or
mov
sbb
pop
xchg
sub
pusha
and
das
mov
shl
mov
daa
sbb
jmp
inc
adc
loope
cmpsb
sbb
lahf
pop
mov
or
imul
or
mov
xchg
fs
mov
xlat
pop
shr
mov
xchg
xor
aaa
xor
fnsave
xor
cmp
push
push
mov
in
sarl
add
and
movsb
jne
inc
out
pop
icebp
pop
movswl
fsubrs
xchg
or
addb
inc
int
lds
lret
push
stos
jmp
fs
scas
insb
dec
jp,pt
lahf
jg
jp
cld
mov
push
pop
mov
loope
jae
sub
mov
push
ljmp
outsl
inc
mov
mov
rol
dec
ds
movsl
and
ljmp
jno
pop
addr16
or
int3
sbb
xor
push
mov
mov
test
insl
cmpsb
bound
add
fadds
sub
add
in
lods
xbegin
ret
pushl
rcll
popw
pop
rcll
jnp
hlt
xchg
xor
mov
pop
sbb
cmpsl
clc
xchg
inc
xor
push
dec
adc
cmp
sahf
mov
jb
pusha
repnz
lcall
addb
cmc
xchg
mov
test
fimuls
mov
outsl
addr16
adcb
pop
ja
cmp
addr16
pop
mov
lock
pop
jl
stos
lods
sub
jns
cmc
in
xchg
mov
test
mov
out
and
test
ret
mov
ss
lods
lods
push
ja
testb
adc
lret
sbb
and
pop
push
xchg
rorl
js
mov
es
jae
js
mov
push
dec
clc
add
push
addr16
and
mov
inc
inc
adc
bound
mov
iret
cmp
stos
cmp
inc
rolb
sub
push
adc
nop
lcall
mov
cmp
call
mov
cmp
fstps
lcall
scas
mov
arpl
or
scas
dec
clc
pop
xor
pusha
adc
addl
aas
out
sbb
mov
ljmp
mov
or
mov
push
sub
jnp
inc
in
je
cs
jp
sub
test
shrb
imul
sub
or
xchg
pop
adc
xor
popf
test
pop
mov
cli
inc
inc
clc
in
push
cmp
mov
rcrb
or
rcrl
add
pusha
pusha
adc
dec
sub
adc
dec
push
xchg
mov
jno
das
xor
test
cli
cmp
jae
enter
sub
or
pop
add
into
enter
sbbb
gs
sub
pop
and
dec
sub
jecxz
mov
mov
pop
lret
mov
adc
mov
lahf
movsl
push
je
sub
aam
cmc
xor
jp
sub
mull
dec
addb
leave
push
mov
mov
insb
lds
xchg
lret
mov
idivb
sub
mov
out
fcmovnbe
ror
jno
repz
dec
mov
fwait
testl
movsl
mov
xchg
or
das
pop
pop
pushf
lods
stos
shlb
jmp
jecxz
insl
xchg
loope
or
mov
mov
movsb
cmp
mov
mov
stos
inc
sub
sub
loop
adc
xlat
jecxz
mov
rep
loope
mov
scas
mov
cmp
push
mov
inc
lds
cmp
and
fildl
fcmovnbe
out
pop
cs
and
stos
mov
xchg
sbb
aam
mov
loope
incb
fsubl
cwtl
add
inc
cmp
and
pusha
outsl
loop
dec
mov
jl
sti
icebp
out
pusha
mov
daa
lcall
cmpsb
mov
lret
das
pop
fcmovnb
push
inc
mov
sti
jb
add
sub
lods
test
in
jno
jns
dec
mov
les
mov
xchg
sbb
xchg
and
mov
xchg
jge
cmpsl
pusha
mov
sbb
in
imul
sti
xchg
mov
push
cs
inc
cmp
jmp
insb
popf
jae
ja
movsl
cwtl
dec
sarb
clc
rorb
cwtl
fmull
add
inc
sbb
js
lock
je
test
loopne
rorl
jb
rep
adc
cmp
ljmp
pop
inc
jno
xchg
insl
test
mov
fisubrl
dec
fimuls
in
je
sbb
adcl
fisttpl
push
jp
xchg
push
add
xor
xchg
hlt
inc
mov
add
ror
pushf
sbbl
mov
dec
jns
pop
jb
mov
enter
pop
sub
lret
loop
ljmp
iret
add
cmovnp
fcmovu
divb
adc
mov
testb
adc
jle
dec
test
and
cmc
and
std
push
cli
push
inc
mov
cmp
aam
ja
dec
mov
mov
roll
mov
xor
imul
lret
xchg
and
inc
out
xchg
outsb
pop
mov
cmp
sbb
fists
mov
mov
pop
push
xor
inc
jp
push
leave
int
fwait
icebp
test
cltd
push
jns
jbe
xchg
shll
fmuls
push
cmp
pop
sbb
stos
mov
xchg
sbb
aad
int
jecxz
insl
ret
arpl
fldenv
push
jmp
in
mov
lock
shlb
fistl
das
negl
sub
pop
in
xchg
adc
or
out
jb
mov
scas
sub
bnd
scas
into
xor
divb
into
repnz
nop
movsb
jle
enter
jecxz
lods
out
popf
and
std
xchg
lea
out
pop
push
push
mov
adc
cmpsb
pop
aam
ds
jb
cmp
loope
and
scas
xchg
std
lods
loope
imul
mov
xor
and
movsl
out
subl
dec
sbb
out
pop
movsl
sbbb
sbb
cwtl
jle
dec
inc
jb
pop
test
inc
es
xor
xor
sub
cmp
jp
cmc
add
aad
cmp
neg
adcl
push
orb
jmp
inc
adc
cltd
jecxz
je
cmp
cwtl
pusha
mov
sbb
imul
mov
sbb
xchg
add
lcall
je
mov
sarl
mov
mov
sub
das
in
cmpsl
in
xchg
push
or
sbb
cld
add
mov
mov
mov
xor
mov
cmpsl
ss
jns
mov
out
push
pop
lret
mov
mov
in
mov
mov
les
or
or
orb
lcall
jl
sbb
push
stos
stos
aam
and
pushf
or
daa
shr
jne
cmp
mov
mov
mov
dec
test
les
xlat
aam
jno
sarb
bound
mov
out
and
sbb
add
outsl
addl
pop
out
pushf
aas
mov
and
or
pop
loop
fs
dec
test
imul
jg
sbb
xchg
add
push
cld
adc
push
shlb
push
sub
int3
dec
cs
cltd
mov
xor
sti
adc
fbstp
xchg
nop
repz
in
jmp
jno
sbb
add
dec
pop
pop
and
pop
mov
lods
stos
dec
jecxz
mov
jg
fwait
lahf
dec
sbb
test
in
mov
push
sub
lret
fwait
push
clc
jmp
pop
mov
lea
fcmovnb
orb
bound
mov
jge
stc
jg
js
xchg
push
dec
inc
sub
pop
lahf
sub
std
outsl
mov
insl
pop
sbb
in
icebp
push
or
cli
enter
mov
add
out
loop
pop
pop
mov
fidivs
cmp
lock
adc
movsl
adc
xorb
fisubl
dec
js
dec
xchg
xchg
mov
sub
inc
mov
fisubrl
test
sub
mov
dec
int3
and
inc
jns
push
fsubl
rcrl
mov
subb
cmp
jle
iret
repnz
add
cld
aas
adc
cmpsl
rcl
sbb
jl
test
fiadds
inc
push
lea
sub
mov
aad
jmp
xor
adc
mov
jg
ljmp
das
push
inc
mov
or
mov
and
or
mov
sub
mov
mov
in
dec
xor
adc
mov
loope
xchg
fisubl
xor
insb
or
pop
xor
dec
mov
pop
jbe
dec
mov
test
push
mov
int
jb
mov
add
push
std
fwait
jl
test
jl
dec
and
mov
cld
pusha
lret
bound
inc
lock
jp,pt
add
sub
cmp
and
fimull
adc
fisttpll
pushf
scas
or
punpcklwd
or
add
stos
stos
lcall
cltd
repnz
es
movb
jne
adcb
out
mov
or
push
xchg
jnp
sbb
adc
pop
cld
in
sub
add
and
mov
xchg
adc
push
sbb
pop
mov
into
inc
outsl
leave
aaa
out
cmpsl
mov
stos
scas
dec
adc
sbb
cmpb
outsl
fld
lea
rcrl
adc
jecxz
test
push
fucomip
insb
pop
add
fnsave
pop
jb
notb
mov
adc
shlb
inc
repnz
cmpsb
fmull
jle
idiv
xor
push
scas
movsb
push
repnz
sbb
jmp
aam
dec
outsl
mov
pop
loope
in
enter
push
fidivl
xlat
scas
pop
pop
test
das
pop
insl
pop
stos
adc
mov
cltd
push
sbb
dec
scas
nop
pop
and
aas
popf
addr16
scas
adc
mov
dec
mov
out
sbb
movsl
push
pop
mov
sti
pop
or
and
mov
jno
cwtl
xlat
add
push
enter
xchg
out
arpl
movsb
mov
dec
lahf
leave
cmp
mov
cli
mov
andl
inc
ja
fadds
lods
popa
shlb
dec
mov
and
movsb
or
dec
dec
scas
in
cwtl
not
ljmp
fistpl
jbe
cli
mov
dec
mov
jno
xor
and
dec
sbbb
add
mov
std
jge
addr16
add
lods
mov
pop
add
add
lock
daa
and
pop
outsb
jge
or
lahf
cmp
and
mov
inc
sti
icebp
mov
push
arpl
outsb
mov
shr
mov
sub
xchg
fisubrs
fbstp
sub
sub
lret
icebp
stos
or
clc
aam
stos
cmp
or
call
mov
outsl
enter
jnp
or
scas
out
popa
cwtl
sbb
cmpsb
pop
lret
mov
mov
push
mov
int
pop
cmp
lods
xchg
sbb
cmp
mov
mov
mov
test
sub
xchg
test
adc
cmp
popf
jns
daa
sbb
mov
adc
push
mov
fistpll
ret
mov
fisubs
mov
add
int
mov
push
dec
xlat
add
sub
or
sbb
dec
mov
cmpsb
mov
adcl
call
adc
dec
push
hlt
xchg
lahf
jnp
test
adc
insl
insl
jbe
outsb
jno
and
in
inc
sub
fwait
cmp
push
sahf
iret
fistl
push
sbb
jmp
xor
xor
cmpsl
mov
scas
lcall
call
cmp
insb
jle
sub
in
jno
mov
or
fadds
xchg
push
push
adc
xchg
iret
jle
lock
sub
and
bswap
lahf
lock
subl
adc
mov
addr16
popf
inc
xchg
add
ljmp
mov
imul
hlt
and
xchg
roll
adc
lods
sbb
push
inc
cs
jnp
in
push
roll
aam
push
xchg
mov
xchg
loopne
xchg
mov
ret
push
out
scas
xor
enter
ficompl
mov
jge
push
mov
pop
add
xor
fnop
test
mov
push
cmp
sbb
insb
add
movsl
jg
cmp
jmp
ja
xchg
mov
jge
repz
les
aaa
xchg
sub
cmp
sbb
out
jle
xlat
ror
xor
sub
jg
es
jmp
in
fdivrs
jns
mov
push
lret
fidivrs
or
nop
jbe
cld
push
ljmp
and
data16
mov
mov
daa
ss
test
xor
sub
pop
lahf
xchg
int3
push
arpl
lret
les
xor
pop
stos
fs
dec
dec
cmp
mov
les
mov
outsl
adc
mov
mov
lahf
adc
push
adc
mov
adc
dec
sub
cmovl
pop
inc
into
into
mov
pop
cld
loopne
push
sti
ljmp
cs
push
les
ja
ja
xor
mov
cli
stos
in
xchg
js
xor
lods
in
pop
bts
mov
push
outsl
test
adc
mov
push
pop
ja
xor
movsb
pop
dec
xor
andl
arpl
sub
and
pushf
xchg
pop
ds
aad
repnz
xchg
inc
cmp
pop
cmp
ret
insl
js
aad
ret
ret
sub
cmp
cmp
sub
sub
add
loopne
lods
pop
jb
dec
pop
out
std
test
xor
push
test
dec
dec
ja
cmp
rcl
pop
xchg
or
fnstenv
lods
mov
in
push
inc
jnp
mov
mov
sbb
jecxz
jmp
sub
rcrl
jge
mov
movsl
mov
stos
dec
scas
loope
xlat
sbb
stos
aam
insb
shll
ja
mov
es
mov
mov
in
loop
sbb
or
into
push
mov
in
jnp
ja
cld
shlb
mov
ja
fs
fs
push
cwtl
mov
lret
mov
jmp
xlat
add
mov
xchg
rolb
push
pop
mov
or
lods
cmp
test
sub
stc
movsl
mulb
or
mov
repz
int3
jbe
push
insb
les
sti
sbb
lock
mov
jo
jle
es
stc
loop
rorb
cs
jnp
sub
repz
push
sub
xchg
loopne
xor
add
pop
mov
xor
push
xchg
jae
cmpb
insl
lahf
outsl
in
test
mov
in
stos
addr16
loopne
push
lds
mov
loope
ss
mov
pusha
jmp
xchg
lods
dec
aad
pop
das
adc
xchg
movsl
sub
push
loope
aaa
jle
or
pop
jmp
fsubrs
div
xchg
sub
xchg
nop
adc
outsb
mov
jecxz
pop
jae
roll
fdivs
mov
or
add
cmpb
push
cmpsl
jl
mov
mov
mov
jmp
es
stos
sahf
jmp
stos
jne
cwtl
icebp
xchg
mov
inc
xchg
in
sbb
shl
test
xor
add
push
inc
insl
imul
mov
and
ficompl
jnp
sbb
xor
fcmovbe
mov
jle
jbe
push
xor
test
xchg
out
dec
ret
inc
mov
repnz
stos
adc
imul
int3
fidivs
jle,pt
pop
es
inc
cmp
push
sub
mov
xchg
mov
test
dec
int3
xor
popf
mov
int
test
xor
push
or
mov
lea
mov
outsb
pop
loope
or
subb
mov
cmp
adc
fs
inc
mov
insl
dec
cmp
and
test
sub
sbb
loopne
add
xchg
daa
mov
jmp
test
test
loope
add
data16
iret
mov
pop
xchg
jecxz
les
lds
jmp
out
aas
xor
loop
arpl
aam
sbb
subb
enter
mov
les
ljmp
xchg
fadds
mov
mov
orps
add
pop
xchg
mov
enter
sbb
mov
xor
sbb
push
dec
sub
cmpsb
pop
push
push
jo
sbb
lock
push
pop
or
add
out
dec
dec
jnp
or
add
lea
inc
cli
pusha
incb
xor
xchg
lret
int3
xchg
loopne
jno
cmpsb
xchg
push
jno
insl
cld
push
mov
cmc
mov
test
std
mov
lods
push
js
sub
mov
push
dec
jge
test
lds
mov
cmp
sbb
sub
orl
push
fiadds
cmc
std
out
stos
mov
lds
xchg
hlt
decb
push
jnp
sbb
in
xor
lret
testl
mov
mov
lods
fsubrl
jne
in
and
fisubs
lahf
insl
divl
fstps
xchg
jecxz
sbb
loope
dec
push
jnp
lret
test
lahf
les
adc
insb
jg
mov
nop
in
inc
and
loope
orl
loop
add
in
pop
ss
cs
add
xor
in
mov
sbb
inc
adc
push
xor
add
sub
ss
hlt
fisubl
fisttpl
daa
xchg
add
popf
jns
lea
aas
mov
and
std
mov
add
loope
std
push
lahf
fwait
sub
ds
lods
in
popf
mov
sub
sbb
je
or
xchg
bound
addr16
push
push
pop
out
in
jns
in
jae
push
fdivl
dec
in
or
xchg
lods
popf
ret
or
cmp
aad
pop
sbb
pushf
add
and
movsb
enter
sti
mov
repnz
cmp
insb
and
mov
lret
decl
pop
xchg
xchg
in
pusha
lods
or
aad
mov
jge
jns
sbb
push
repz
mov
or
nop
movsl
jecxz
sub
stos
in
sbb
out
sahf
jge
out
pop
pop
test
lcall
ficomps
cmc
sub
pop
ja
lret
inc
or
inc
stos
xchg
clc
aam
dec
arpl
dec
das
pop
jle
ret
push
rorl
fidivs
lea
mov
pop
push
scas
sbb
lods
cs
test
stos
lds
lods
mov
sbb
sub
mov
roll
adc
movsb
outsl
inc
lcall
xlat
adc
cmp
cmp
or
popa
loopne
stc
ljmp
test
cs
fwait
and
pop
arpl
sub
xrelease
test
jae
or
leave
test
mov
push
rcrl
imul
dec
pop
nop
push
inc
int
lea
int
lret
daa
push
sbb
stc
outsl
sub
dec
hlt
or
mov
dec
cmpsl
push
push
pop
push
insb
in
jge
movsb
shlb
cltd
jae
dec
jmp
repz
sahf
pop
jp
loop
ficomps
repz
rdpmc
pusha
xchg
push
fimull
outsl
ja
add
dec
inc
jl
inc
rcrl
imul
cmpl
push
popf
xor
or
mov
movsl
popa
sub
and
jne
frstor
insb
jmp
popa
adc
xor
jg
lcall
test
bound
out
imul
and
repz
cmp
cltd
icebp
stos
pushf
int
push
es
lock
lods
pusha
bound
push
mov
test
mov
in
pop
in
add
add
lods
outsl
pop
push
call
mov
mov
inc
call
aaa
and
jecxz
repnz
push
call
add
rsm
in
cmp
pop
sbb
clc
popf
insb
repz
call
outsb
and
fsts
cs
imulb
test
in
fsubrs
jp
add
pop
push
call
push
les
bound
pop
popf
cmc
mov
mov
int
daa
ds
xchg
std
fidivl
jno
sbb
sub
movl
push
pop
mov
shlb
mov
push
lret
je
sub
jns
push
add
inc
mov
xor
in
jl
mov
hlt
add
jmp
aam
loop
mov
ds
pop
aas
or
add
iret
xor
dec
adc
stos
cmp
and
mov
mov
add
je
pop
popf
ja
repz
loope
jae
rolb
mov
sub
jbe
jne
lods
fistpl
cs
lds
or
cmp
mov
xor
xor
sub
or
sub
or
mov
add
clc
loope
ret
mov
dec
cmp
adcl
psubb
jl
fldl
stos
sub
fstl
mov
xor
add
ds
fildl
sbb
add
int3
test
clc
in
push
mov
cmovg
sbb
or
xor
sub
stos
xchg
adc
xlat
pop
mov
adc
add
lds
test
test
pop
mov
into
xchg
inc
lods
js
cmp
pop
faddl
stos
mov
inc
dec
adc
push
mov
mov
fisttps
arpl
loop
add
scas
das
ret
ljmp
ret
push
lea
into
fdivs
cli
test
jns
leave
adc
shlb
and
adc
mov
mov
xchg
cmc
pushf
out
mov
aas
dec
mov
popf
sti
aad
hlt
inc
aad
pop
inc
aad
and
add
jo
movsl
or
mov
test
mov
mov
push
cli
loop
cs
sub
mov
lods
cmp
push
setb
nop
mov
into
pop
dec
fs
inc
xchg
gs
xabort
sbb
iret
cwtl
cwtl
roll
addr16
cmp
adc
fidivs
vpmacsdd
xor
sbb
mov
sbb
cmp
in
sbb
xor
and
pop
mov
repz
fcoms
movsb
inc
imulb
dec
lea
xor
nop
lahf
leave
mov
pushf
adc
cbtw
xor
incl
pop
in
adc
or
sub
jecxz
cmp
dec
xor
lret
mov
cmpsw
loopne
jmp
and
or
stos
pop
in
pavgw
incb
popa
pushf
negl
aaa
add
in
mov
push
adc
mov
sub
mov
ret
in
movl
sub
mov
outsb
rcrl
mov
or
nop
xlat
loope
adc
adc
xchg
xor
push
sbb
xor
mov
pop
sub
or
test
test
in
dec
fsub
xchg
loope
or
mov
pushf
or
jnp
and
dec
testl
stos
xor
adc
cmp
scas
scas
inc
cmpsb
cs
loop
test
push
int3
leave
cmpsb
jbe
imul
add
add
inc
cmpl
xrelease
loope
mov
sbb
lahf
xor
push
dec
mov
mov
dec
int
mov
mov
insl
mov
testb
js
or
push
lcall
popf
jle
gs
push
dec
jp
mov
lcall
push
ret
nop
cmp
xchg
movsl
hlt
pop
jp
shrb
aad
test
xchg
ror
and
lods
sbb
in
into
int
nop
aad
inc
into
mov
out
cmp
pop
lret
dec
decl
ret
data16
bound
mov
add
loopne
movsl
cld
sub
xchg
popf
adc
xor
jno
aam
inc
test
sub
mov
inc
inc
mov
jecxz
fisubs
or
dec
ret
jecxz
xchg
mov
imull
in
adcl
and
fmuls
int
inc
insl
mov
inc
or
lea
and
sbb
in
jbe
lds
icebp
orb
outsb
mov
xor
roll
pop
sub
adc
in
dec
push
sbb
mov
cmpsl
popf
jecxz
aaa
sub
sub
xchg
mov
adc
xor
xchg
test
pop
into
pop
popa
pop
push
int3
shll
cli
xor
xchg
mov
sbb
jg
xchg
nop
dec
sub
push
fs
push
fxch
xchg
insl
pop
mov
push
push
xor
pop
scas
cmp
pop
add
sub
dec
sub
rcl
ret
mov
cmc
lods
sbb
mov
ret
mov
aad
dec
jo
pop
xor
fnstenv
pushf
ret
shrl
movsb
pop
test
mov
sahf
sub
fsubr
adc
dec
cwtl
gs
jns
cld
cmpsl
test
ret
mov
jbe
mov
xor
or
mov
pushf
cmpsb
jo
adc
gs
cmp
jge
adc
cli
rolb
test
mov
stos
mov
les
and
lea
fstp
lods
push
call
mov
pop
cli
out
sbb
and
lods
pop
out
int3
sub
adc
sub
sub
loope
jno
stos
lds
sub
mov
in
ret
adc
cmpsl
inc
add
addr16
add
jge
xchg
or
mov
lret
data16
ss
adc
push
shlb
jg
jbe
mov
or
imul
sbb
add
scas
dec
call
test
sbb
mov
in
movl
add
clc
insb
xchg
sub
int
test
stos
mov
gs
jle
int3
sbb
in
jl
in
sub
sbb
and
popf
push
fisubrl
mov
mov
orl
fdivs
jbe,pn
or
icebp
addr16
push
add
into
jmp
push
jge
out
lods
aas
jecxz
and
cmp
jne
push
movsb
xor
lds
mov
out
scas
shlb
sbb
out
sbb
das
pop
adc
adc
stc
scas
pop
pop
or
jno
shll
push
loope
push
sbb
pop
cltd
adc
mov
test
loopne
cltd
add
fists
xchg
inc
aaa
ljmp
scas
insb
int3
ja
movl
cmp
sub
or
aam
insb
xchg
or
into
fmull
aam
aas
inc
ss
jae
ljmp
lcall
sub
jns
or
jecxz
aad
mov
cmp
cmp
pop
inc
mov
mov
dec
lahf
adc
in
sub
dec
jmp
test
imul
addb
into
pop
ret
lahf
dec
fisubs
test
push
and
sub
popf
leave
das
scas
push
testb
mov
push
icebp
adc
inc
fadds
dec
out
testl
popf
mov
and
jl
vaddsd
push
ljmp
ja
sahf
and
jne
bound
ds
das
stc
stc
mov
dec
stc
cvttps2pi
not
cmp
mov
jae
and
pushf
jne
fsub
push
add
pusha
dec
fistps
dec
lcall
rorl
std
fsts
mov
inc
ret
popf
test
add
jb
sub
hlt
jmp
push
pop
fsubs
lret
in
add
add
jmp
mov
call
out
clc
hlt
or
popa
pop
xor
fmuls
adc
pop
or
cmp
outsl
out
push
pushf
rorl
imul
pop
mov
aaa
fldenv
xchg
cmpsb
jle
test
pop
loope
mov
sub
sub
xorl
and
arpl
stos
loopne
mov
push
pop
cmp
bound
mov
inc
mov
push
push
push
inc
pop
stos
lahf
and
cmp
test
pop
dec
ljmp
fucomip
repnz
push
stc
and
in
in
or
push
enter
sub
int
xorb
stos
movsb
add
mov
mov
mov
dec
sub
sub
mov
sbb
mov
cli
ret
lret
inc
sub
emms
sahf
call
loop
mov
adc
push
xchg
sub
cltd
xchg
aam
inc
cld
and
imul
shrb
in
dec
repnz
imul
sbb
sbb
shlb
push
scas
sbb
sbb
arpl
mov
mov
sbbl
daa
cs
aam
and
stos
clc
pop
es
out
out
push
jmp
inc
rolb
pop
xchg
inc
test
mov
jge
imul
pop
mov
cmp
mov
push
push
iret
popf
adc
sti
mov
inc
loope
aad
fwait
icebp
aaa
ds
xchg
imul
sbb
pop
pcmpgtd
sub
out
pop
into
cmc
imul
cmp
jbe
imul
mov
pop
mov
mov
mov
test
cmp
sub
out
test
mov
xchg
sbb
ja
pushf
test
pop
outsb
out
add
xchg
addr16
sbb
jmp
das
add
and
sbb
mov
sahf
imul
aas
ret
loope
clc
ss
aaa
ret
outsb
jnp
enter
hlt
xor
stos
cld
repnz
push
add
xchg
sbb
out
sahf
fwait
sbb
imul
adc
mov
mov
scas
lcall
ds
or
cmp
out
mov
push
jmp
inc
popf
mov
subb
fcmovnb
fwait
pop
pop
xor
mov
adc
pop
jae
push
jecxz
jno
mov
loope
aam
lcall
sub
popf
mull
pop
shl
std
cwtl
fisubrs
sahf
add
jns
das
cmp
fisttpll
repnz
pop
xchg
call
sahf
mov
cmp
aad
mov
mov
and
stos
or
ret
xor
out
sbb
mull
pop
jbe
mov
adc
mov
mov
cmp
jae
aaa
jl
enter
push
mov
or
mov
pop
lahf
sahf
jmp
and
push
dec
adc
lods
sub
test
mov
xchg
insb
dec
loopne
out
jl
add
inc
repnz
es
mov
leave
mov
mov
data16
icebp
in
mov
test
ret
addb
jne
push
xorl
inc
mov
adc
xchg
std
xchg
mov
jecxz
test
mov
adc
xor
aaa
xchg
mov
adc
adc
ret
mov
mov
xchg
pusha
pop
out
movsl
imul
imul
inc
jge
insl
sbb
flds
xchg
cmpb
xchg
into
jae
mov
inc
add
jnp
xchg
fsubrp
push
ret
and
arpl
mov
inc
arpl
das
test
orl
mov
mov
dec
push
push
mov
mov
adc
stos
divl
and
adc
mov
cmp
popf
aam
sub
dec
sbb
lock
push
jmp
pop
push
fbstp
jae
fbld
and
push
mov
nop
cmp
pop
xorl
lret
sbb
sub
lods
outsb
fldcw
out
mov
rcrb
imul
rcl
je
scas
jecxz
test
stos
push
mov
lock
nop
push
jbe
sbb
dec
add
jp
fistl
push
cmpsl
enter
pop
nop
aam
pusha
and
in
mov
adc
rorb
mov
adc
jo
sahf
push
dec
mov
faddl
pop
cmp
sub
pop
scas
sahf
insb
ret
out
sbb
inc
sbb
xor
das
push
pop
int3
in
hlt
into
sub
jmp
scas
mov
jnp
xor
sbb
push
data16
lea
pop
sbb
pop
loop
cwtl
mov
call
js
stos
dec
xchg
mov
in
jge
lock
jp
push
inc
pop
dec
pop
test
add
cmp
xlat
pusha
stos
movsl
adc
vmovups
outsl
lock
sbb
roll
js
and
dec
add
nop
xchg
sti
movsb
repnz
and
jle
inc
add
sbb
mov
mov
out
adc
xchg
pop
sbb
xlat
lahf
mov
jb
add
jl
push
cmp
in
cmpsb
in
cmp
sub
xor
fwait
cmc
cwtl
pop
ja
and
mov
xlat
mov
psrld
in
and
cli
dec
sahf
jg
aas
pushf
mov
int3
mov
and
sub
and
repz
adc
push
addr16
roll
test
jle
xchg
mov
pop
cmpsb
add
cli
sbb
dec
lret
dec
repz
fmul
inc
outsb
test
jns
sbb
or
xor
push
loope
xor
addr16
mov
inc
xchg
add
fs
sarb
clc
pop
xor
adc
in
adc
faddl
test
cld
sbb
jbe
clc
push
lahf
cmp
xor
in
add
xchg
or
jl
ret
cmp
sub
out
sahf
jecxz
fisttps
movsl
icebp
ja
cmpsl
mov
movsl
rep
sub
insl
cli
sbb
iret
add
dec
repz
inc
popf
insb
outsl
pop
jb
sub
dec
cmp
ret
pop
pusha
xchg
dec
mov
iret
xor
cmp
pop
push
mov
mov
mov
aas
cmp
fnsave
cmc
xchg
sarl
jp
mov
dec
gs
sbb
xor
or
sbb
cmpsl
inc
pop
mov
inc
clc
movsb
pop
fs
hlt
and
fcmovbe
cmp
xchg
pop
lret
out
jbe
lods
jg
out
xor
pop
xor
roll
out
mov
push
pop
addb
and
xchg
inc
or
push
pushf
or
or
in
adc
ret
stc
ficomps
stos
mov
nop
mov
daa
xchg
mov
cmc
gs
mov
and
enter
push
iret
jo
sbb
shlb
sbb
mov
sti
mov
push
in
fdivrs
ljmp
popf
and
hlt
ljmp
sarb
inc
insl
icebp
xchg
decb
aaa
or
es
dec
outsb
insl
call
negb
iret
mov
adc
mov
shll
jo
jg
adc
pushf
lcall
sbb
mov
lret
and
mov
cld
pop
outsl
ficompl
push
pop
inc
fidivl
lahf
and
sbb
push
test
jecxz
inc
dec
mov
jle
ds
adc
pop
push
jl
sbb
ljmp
jo
ds
int3
andb
inc
test
push
movsl
push
cmp
in
scas
nop
push
int3
psubw
cmp
lahf
call
xchg
pop
inc
outsb
into
and
jno
mov
xchg
pusha
lahf
jg
jle
jns
xor
mov
popa
mov
and
out
jge
fiadds
dec
pop
stos
xor
lahf
pop
mov
fdivrs
ja
or
or
mov
cmp
dec
dec
add
jle
outsl
sbb
adc
jo
sub
daa
mov
aad
jne
sbb
fnstsw
cmp
mov
imul
jne
gs
loop
ljmp
jbe
jns
pushf
gs
dec
ret
rcll
push
push
pushf
popf
inc
sbb
mov
lds
ja
out
lock
in
insl
scas
insb
leave
pop
mov
adc
push
scas
imul
imul
dec
fdivs
dec
out
in
inc
sbb
insl
fwait
sub
int
mov
pop
popa
pop
jne
ffreep
std
packssdw
fildll
mov
inc
cltd
mov
mov
adc
test
mov
sahf
cmp
dec
sahf
call
adc
lea
xor
mov
dec
stos
fsubl
sbb
push
nop
insb
popa
jae
mov
vpcmov
leave
or
leave
xor
mov
sub
ret
pop
xchg
xorb
inc
sbb
xchg
fcomp
inc
mov
int
pop
mov
repnz
std
fiadds
xchg
mov
pop
pusha
movsb
or
jg
mov
movsb
ret
filds
pop
inc
jecxz
lods
in
cld
pop
sub
or
mov
stos
filds
push
mov
mov
aam
dec
movsb
or
mov
lret
mov
and
mov
add
sub
cmp
fcom
or
mov
lahf
popa
mov
inc
inc
lcall
cmp
fstl
xchg
fldenv
xchg
pushf
lea
adc
jb
ja
lods
arpl
in
xchg
adc
mov
mov
shr
sbb
addr16
sub
xor
add
insl
lahf
out
loope
pop
mov
adc
shrb
lods
inc
push
dec
fldl
jp
jns
stc
mov
dec
rcr
sbb
sbb
xchg
jns
or
add
and
pop
jecxz
jb
lods
in
lea
xor
mov
jno
data16
mov
add
xorb
push
xchg
mov
adc
shrl
ja
sbb
jle
mov
sub
jne
mov
or
divl
lret
jecxz
mov
les
ret
movsb
jae
mov
sub
lret
and
je
cmp
pop
jae
xor
jg
cmp
xor
cld
loopne
inc
jno
jecxz
out
test
cli
sbb
jg
nop
xchg
icebp
ret
lret
jae
lahf
test
pop
fsub
ds
fs
cmp
shll
fcompl
adcl
xchg
adcl
in
pusha
shlb
pop
inc
jle
fidivrl
inc
das
dec
jge
sbb
div
mov
push
xor
sbb
xor
pop
xchg
rolb
popa
fidivrl
jno
add
les
mov
mov
sbb
sbb
into
pop
js
daa
push
cmp
leave
sbb
sbb
or
or
xlat
push
lcall
mov
andl
fdivrl
mov
loope
stc
addl
mov
ret
adc
std
mov
nop
xchg
jno
xchg
mov
lock
mov
sub
int3
scas
mov
aad
or
rcr
mov
ja
inc
fsubl
sti
inc
and
push
loop
insb
movl
jecxz
arpl
int3
add
inc
outsb
into
cmpb
jo
cmpsb
subb
sbb
sub
mov
pop
inc
push
jecxz
mov
sbb
ret
mov
xor
fwait
adc
cmp
mov
repnz
jp
or
mov
xchg
fidivrs
data16
inc
lahf
ret
subl
pop
loope
xchg
gs
mov
xlat
mov
femms
mov
cmp
jno
mov
push
into
adcl
adc
rol
sub
fimull
lahf
mov
sub
imul
stos
stos
sbb
adc
ljmp
je
xor
mov
sahf
push
jae
xor
cs
js
fwait
mov
cld
js
pop
jmp
out
cmp
cs
jge
imul
push
jne
inc
cmp
aaa
sbb
call
into
mov
stc
mov
mov
push
cmp
fimull
mov
mov
out
add
dec
or
push
mov
paddq
cmp
sti
mov
adc
imul
jae
mov
rorl
test
test
es
cmp
faddl
fisttpll
or
jb
adc
cmc
push
orb
cltd
pop
imul
and
leave
push
in
mov
out
test
push
push
dec
sbb
mov
stos
sbbl
or
sub
mov
mov
or
cmp
or
cltd
pop
jl
xchg
xchg
xor
lock
adc
push
int3
pop
jl
push
push
push
insb
add
popf
xchg
xchg
test
ja
enter
lahf
mov
in
data16
cmp
stos
jmp
movsb
inc
xchg
adc
jne
adc
jne
stos
popf
pop
xchg
and
movb
mov
jl
insb
add
popf
pop
ficompl
gs
sub
sahf
jb
movsb
sub
ds
sar
int3
testl
sbb
xchg
gs
fs
sbb
jp
mov
pop
icebp
hlt
fnstsw
vorps
dec
sub
fcmovnbe
jg
jo
iret
ds
mov
or
and
mov
pop
sarb
jle
lods
daa
int
jbe
mov
or
push
rcrb
ja
shrl
aam
cmp
pop
test
adc
sub
cld
aam
leave
loope
mov
hlt
pusha
add
imul
xor
cmp
adc
ret
cmpsb
mov
es
imul
pop
mov
and
cwtl
mov
pop
loopne
lahf
sbb
mov
pop
out
rolb
xchg
mov
push
test
imul
pop
mov
movl
cmp
dec
jbe
decb
dec
jns
push
cli
shll
aas
pop
and
std
and
mov
shll
or
out
pop
aas
and
ss
xor
mov
loopne
mov
cmp
push
rcll
sub
mov
dec
sub
mov
lock
and
push
push
inc
test
stos
xchg
nop
pop
fdivs
inc
into
addl
or
aam
adc
sbbb
sbb
ret
xor
push
lcall
or
push
jbe
sti
test
mov
gs
lock
jns
iret
aad
mov
fs
fidivl
loope
mov
leave
jp
xchg
jnp
inc
xor
sti
in
push
pop
je
push
adc
mov
jo
add
inc
or
in
out
stos
push
jmp
cld
iret
push
into
paddsb
and
push
mov
popa
daa
out
adc
pop
mov
out
add
or
jmp
inc
pop
xor
mov
sahf
sti
in
adc
mov
gs
addr16
lcall
xchg
ds
push
sub
imul
mov
mov
mov
fsubl
cmp
rcr
loop
ljmp
test
pop
out
jo
add
jmp
dec
xchg
and
xor
pop
bound
and
sti
dec
imul
sahf
cmpsl
insl
shll
sub
pop
ss
lahf
sbbl
dec
aad
bound
dec
pop
stos
adc
push
outsb
push
out
cmp
push
xor
or
pop
movsl
mov
call
and
out
jge
dec
adc
cwtl
or
sbb
out
mov
roll
repz
xlat
jge
pusha
icebp
xchg
cmpsl
stos
mov
jl
ret
sbb
rorb
sahf
and
mulb
jg
cmpb
inc
pop
pop
fistps
cmpb
dec
mov
adc
inc
sub
push
dec
jg
shrl
lods
arpl
cld
stos
inc
inc
in
sbb
sahf
inc
jno
clc
pusha
jo
sbb
pushf
addl
dec
mov
ds
mov
jb
fldcw
loopne
jno
pop
push
push
mov
inc
mov
and
jo
call
xchg
in
dec
cmpsb
test
mov
adc
adc
push
xor
push
shll
ljmp
shrb
aas
scas
jne
cmp
or
mov
arpl
enter
lahf
shl
and
dec
xchg
fisubrl
mov
sub
pop
repnz
pop
sti
fdivrs
adc
jp
jl
scas
shlb
out
push
pop
std
nop
push
ss
inc
xor
push
xchg
sub
push
adc
test
push
mov
fs
cmc
and
xchg
inc
loope
ljmp
subb
pop
sub
xchg
cmp
mov
jecxz
mov
loopne
iret
movsl
repz
fdivrl
jns
outsl
rorb
mov
pop
mov
add
mov
adcl
xchg
add
add
cmp
sbb
push
fldt
add
inc
xor
push
mov
push
cli
fisubrs
cld
scas
loopne
idiv
in
cmpsl
adc
cmpsb
int3
pop
in
insl
sub
mov
dec
mov
xor
mov
leave
push
dec
outsl
inc
ja
movsl
data16
stos
shrl
in
sbb
jecxz
sbb
cmp
sbb
xchg
push
lcall
imul
inc
cmpsb
xchg
mov
sub
sub
sbb
fsubrs
adc
sbb
idivb
mov
outsb
xchg
cmp
push
hlt
dec
cmpb
fcomi
sbb
add
push
jp
inc
cli
loope
scas
test
and
and
fiadds
jp
or
or
in
imul
fld1
arpl
ljmp
fisttpl
call
add
mov
stos
pop
ds
jnp
adc
vphaddbd
pop
jb
pop
add
cltd
clc
repz
jmp
test
pushf
outsb
imul
jmp
testl
popa
sub
mov
pop
jae
in
das
insl
cmp
jns
xor
jnp
imul
mov
pop
icebp
nop
lea
and
in
gs
sbb
daa
and
push
adc
mov
in
jg
shll
lock
les
jb
and
or
mov
imull
jno
inc
mov
jo
inc
aam
mov
mov
fdivs
jecxz
das
or
pop
out
cli
push
lods
cmovge
or
cmp
scas
mov
out
movsb
in
incl
mov
push
stc
jo
dec
or
std
aam
mov
lds
adc
xor
inc
ror
movsl
mov
cmc
cmp
sbb
adc
fsts
lds
xchg
cmp
sahf
adcb
aas
mov
repz
and
inc
mov
mov
popf
mov
cmp
mov
push
push
jp
ror
mov
out
sti
sbb
imul
xchg
incb
pop
adc
sbb
aam
das
mov
inc
cmp
loop
adc
ret
or
outsl
aas
jne
aam
aas
ret
mov
imull
andl
ror
jns
jnp
fs
arpl
or
mov
push
xor
inc
sahf
ret
add
or
add
xor
sub
nop
arpl
jg
jae
cmc
lea
rol
add
gs
ret
mov
fnsave
adc
jmp
mov
and
sahf
aas
sbb
add
call
lods
aad
mov
icebp
arpl
mov
int3
fsubs
and
cmp
and
in
out
add
iret
mov
cmc
out
lret
xchg
arpl
scas
cmp
arpl
inc
sbb
mov
addr16
clc
push
xchg
xor
add
movsl
cmp
push
mov
cmp
insl
call
pop
les
fcomi
push
das
add
xor
cmp
hlt
push
shrl
mov
sbb
pushf
pop
sbb
xchg
in
orb
inc
sbb
icebp
push
cwtl
xchg
xchg
xchg
ds
cmp
pop
in
lds
testl
cld
decl
pop
in
and
mov
mov
dec
pusha
jbe
pushf
cmpsl
cmpsb
add
and
pop
vpsubb
ds
ja
fldpi
sbb
cmp
shr
sti
jno
pop
sbb
int3
leave
inc
pop
pusha
repz
outsl
ja
sbb
and
js
leave
jg
xor
rol
mov
cmp
fsubrs
iret
stos
cmp
nop
mov
mov
push
in
mov
sbb
xchg
fsubs
push
icebp
xchg
lahf
jle
fistl
and
or
dec
dec
mov
mov
cli
dec
cli
jae
pop
lds
loope
sbb
mov
jle
icebp
test
ss
add
lret
shll
push
mov
pop
loop
shrb
pop
lds
mov
aas
adc
incl
ds
rep
inc
add
in
insl
addr16
fdivl
inc
fwait
xchg
mull
mov
es
jmp
xchg
push
pusha
lock
pop
jmp
pop
or
cmp
or
or
inc
xor
mov
dec
arpl
in
lret
rclb
in
int
and
dec
push
xor
sub
jle
repnz
imul
loop
xchg
in
and
fadds
stos
add
dec
cltd
jg
ljmp
cmp
jp
jmp
loope
sarb
ret
mov
fs
imul
loop
xchg
loope
and
cli
popa
inc
sub
clc
mov
mov
insl
test
add
int3
je
fs
add
out
stos
adc
jno
add
sub
xchg
movsl
fldenv
in
sarl
stc
in
mov
adc
imul
cmp
outsl
jmp
cmp
adc
mov
or
xor
mov
orl
insl
imul
das
adc
repz
test
lea
dec
test
ret
push
adc
inc
negl
pop
xchg
or
push
jnp
cmpsl
jae
inc
addr16
and
mov
jecxz
push
cmp
inc
ret
push
aas
movsl
popl
test
dec
lahf
and
sub
fildll
outsl
enter
xchg
push
add
cmp
push
push
or
cmp
cmp
pop
mov
out
push
jg
in
mov
rorl
xchg
mov
inc
lcall
jmp
sub
dec
lahf
pop
lds
adc
scas
cltd
in
cmp
push
add
xchg
jbe
xor
lret
lods
daa
mov
sub
mov
mov
ljmp
inc
push
inc
es
leave
mov
adc
mov
xchg
sbb
xchg
sti
adc
mov
mov
lahf
bnd
addr16
inc
push
adc
jns
in
inc
jne
jns
jg
dec
mov
lock
inc
sub
cmp
sub
adcl
cmp
scas
push
push
mov
mov
repnz
outsl
in
imul
jge
jnp
dec
mov
les
xchg
inc
insl
jle
and
pushf
jae
imul
lret
dec
iret
syscall
ficomps
ret
loopne
sub
mov
loopne
push
lahf
outsl
jg
sar
adc
sub
inc
push
pop
xor
add
sub
sbb
jge
mov
notw
imul
xchg
xchg
int3
rclb
mov
pop
out
mov
mov
push
subb
and
sbb
ljmp
outsb
sbb
jge
mov
imul
jl
lock
mov
add
movq
cwtl
insl
cmpb
lahf
jb
push
stos
jno
adc
pushf
in
jae,pt
inc
scas
dec
loope
or
ljmp
mov
shlb
cmp
sub
and
push
push
pop
sub
popf
jmp
rolb
das
jl
inc
cmpsb
mov
mov
sub
popa
popa
stos
imul
cmp
into
mov
mov
hlt
lret
lea
lret
outsl
and
fiadds
and
mov
dec
lods
xchg
loopne
mov
fnstsw
outsb
push
and
jns
mov
insb
dec
movsl
inc
ss
push
xor
jge
sub
cwtl
stos
pop
xchg
mov
mov
call
jns
sar
ja
mov
aaa
bound
ret
adc
clc
jge
and
adc
jb
enter
dec
mov
push
fsubs
fldcw
mov
xchg
loop
inc
and
jl
adc
mov
add
xor
arpl
mov
mov
jns
mov
mov
sbb
addr16
mov
or
sub
nop
ds
pop
push
sahf
shrb
add
mov
fidivl
sbb
out
mov
outsb
call
jbe
popf
add
rol
xchg
iret
daa
or
movsb
mov
std
outsb
rolb
pop
andb
and
cmp
in
cmp
fs
pop
in
xchg
pmulhw
lods
push
xchg
ret
jl
add
mov
fucomi
mov
movsl
add
scas
dec
push
movsb
mov
add
jo
repz
sahf
push
add
cmp
mov
and
or
popl
fsub
sub
fisttpl
loop
sub
in
and
and
mov
xchg
and
mov
sbb
stos
outsb
out
mov
push
jns
cwtl
push
int3
movsb
push
sahf
cmp
ja
mov
dec
dec
pusha
mov
jmp
sahf
adc
clc
add
idivb
sbb
out
jbe
jle
cmp
sbb
and
add
pop
pop
sbb
sub
shl
mov
daa
je
or
std
test
in
sub
mov
cmp
popl
imul
loope
cmpsl
push
pop
imul
inc
not
sbb
jbe
lcall
xchg
inc
dec
cmc
jp
cmc
sbbl
jmp
xchg
sub
stos
ja
add
mov
insl
dec
sub
mov
mov
rcr
movl
ret
jecxz
xor
mov
aam
adc
dec
mov
mov
mov
or
dec
cmp
shrl
int
lock
jb
cmp
jnp
aad
and
addl
adc
cmp
enter
xor
and
xchg
cmp
inc
jmp
pop
addl
in
cli
cmpsl
pop
inc
movsb
mov
roll
sub
in
mov
pop
fmull
pmaxsw
dec
and
fdivrl
xchg
lods
mov
xor
lock
ds
jo
sbb
xchg
fldcw
mov
fs
or
jno
cs
je
xchg
imul
fidivl
adc
xchg
mov
cmp
lret
cmp
ret
jns
xor
add
lcall
and
sarl
sub
fs
scas
int
in
sbb
gs
mov
pushf
inc
in
ljmp
jp
les
dec
xor
test
jne
jns
daa
xlat
sub
jmp
addr16
jecxz
js
inc
lcall
lret
mov
cmp
sub
shrb
int
pop
popa
xchg
inc
aas
cltd
mov
add
xor
leave
push
pop
sbb
cmp
push
in
cmp
mov
rolb
icebp
sbb
mov
inc
jle
cld
push
push
aam
jg
dec
xchg
jb
xor
imul
fnsave
jge
arpl
jge
xchg
stos
jp
imulb
cld
ljmp
orl
insb
faddp
pushl
jp
jo
push
or
repz
push
xor
and
ret
leave
or
mov
xor
cmp
mov
in
enter
mov
test
pop
fwait
push
xor
cltd
gs
lods
pop
imul
dec
or
icebp
sub
das
inc
dec
mov
daa
in
es
lcall
je
std
mov
icebp
fld
mov
das
divb
outsb
inc
nop
pop
leave
stc
cltd
add
adc
and
cld
or
mov
cwtl
adc
lcall
lret
add
push
pop
and
icebp
sbbl
cld
sbb
outsb
sub
cmp
push
es
mov
sbb
out
push
mov
test
pop
add
dec
leave
repnz
mov
cmpsb
call
outsl
divb
hlt
xor
or
pop
jmp
or
jbe
inc
or
sbb
addb
not
mov
test
lret
mov
push
mov
hlt
inc
and
loop
int3
cmp
sbb
addr16
movsl
mov
push
test
fcmovnb
popa
push
pop
dec
mov
and
xchg
sbb
scas
adc
aad
fistpl
addr16
mov
push
xlat
adc
in
cmpsl
mov
es
sbb
xlat
cmpsb
inc
add
faddl
in
imul
sti
sub
lods
push
arpl
arpl
scas
push
imul
pop
cmp
arpl
jp
sub
pushf
adc
lods
add
leave
lods
dec
or
cmp
dec
mov
int3
outsb
enter
push
jnp
popa
ljmp
inc
movsb
rcll
xchg
cmc
mov
push
xchg
jle
gs
les
or
mov
inc
push
divl
fistps
push
push
mov
mov
call
aam
mov
mov
mov
mov
dec
dec
insl
push
jl
add
cmp
mov
cmpsb
movsl
cmp
shll
and
ja
push
arpl
push
sarb
popa
rcl
ljmp
pop
cs
fsts
add
mov
and
sti
mov
fisubrs
aad
cmp
inc
bnd
movsl
add
sbb
xchg
push
rolb
mov
sbb
in
jne
push
adc
pop
mov
fimull
enter
fwait
inc
jl
mov
bt
xor
out
aaa
sub
jb
add
fiaddl
fsubs
pop
shr
push
sbb
push
adc
push
or
ljmp
inc
mov
pushf
out
lds
cmp
pop
ja
jg
jmp
cmpl
das
sbb
ficompl
jge
push
mov
xchg
insb
and
mov
in
adc
sub
cmc
jne
cli
and
xor
lret
xchg
int
sbb
cmp
fsubrs
aas
add
mov
or
jge
std
mov
ds
jo
mov
push
pushf
into
mov
xchg
int
mov
iret
cli
pushf
fs
cmp
popa
stos
insl
imul
aaa
pop
pop
lahf
add
outsl
lock
jnp
mov
repz
gs
pushf
ja
adc
arpl
xchg
jl
cs
mov
dec
xchg
sahf
inc
ljmp
push
or
dec
pop
imul
jo
inc
push
dec
adc
nop
shlb
nop
imul
inc
in
pop
enter
push
mov
push
test
das
or
shlb
pop
mov
mov
ret
data16
pop
sahf
push
out
arpl
mov
fiaddl
repz
xor
xor
aam
enter
ficoml
sub
movsb
loopne
xor
dec
fldcw
les
mov
sub
adc
and
stos
and
mov
icebp
sar
call
popf
adc
ss
push
adcl
rcl
or
sub
and
or
aam
addb
or
cwtl
fsubl
mov
and
aam
push
jle
or
and
jecxz
es
push
fildll
add
and
stos
xchg
or
adc
loope
insb
pop
int3
stc
es
shr
lcall
loop
int3
xchg
dec
daa
aaa
push
add
lret
stc
xchg
push
mov
test
xchg
sub
add
mov
and
xor
fistps
adcb
dec
or
sub
rcll
adc
push
xor
ja
aas
loop
jb
xlat
cmp
bound
mov
shl
or
inc
xchg
jl
in
pop
mov
sbb
push
xor
outsl
push
cs
sub
dec
adc
cld
and
mov
dec
test
sbb
push
stos
pop
repnz
in
mov
sub
movl
inc
mov
jg
cld
popa
pop
xlat
loope
test
inc
ljmp
jle
push
sub
push
insb
sbb
dec
jmp
cld
pop
sar
xchg
sub
test
jns
outsl
xchg
mov
imul
lods
dec
in
pop
add
lea
xchg
dec
push
xchg
test
dec
sahf
jae
sti
or
divb
and
outsb
iret
sbb
xor
adc
iret
push
outsl
push
sbb
lods
cwtl
push
nop
outsb
inc
ret
cmp
pushw
cmp
or
subb
lcall
enter
push
mov
jb
jl
sbb
in
andl
mov
mov
jge
jle
daa
imul
inc
hlt
mov
inc
sbb
lock
inc
lcall
dec
or
push
jmp
push
dec
pop
pop
cltd
inc
mov
dec
push
les
les
and
xor
inc
out
ret
pop
push
pop
cmp
pop
loop
inc
mov
pop
or
push
fildll
mov
pop
cmp
loope
loope
mov
shl
lock
les
ror
dec
and
popa
mov
fcmovbe
mov
addr16
mov
popf
sub
pop
sbb
sub
das
push
test
js
ds
sbb
repz
loop
cli
sub
in
rorl
mov
or
stc
cmc
and
cmc
testb
xchg
scas
repz
loop
pushf
pop
lcall
dec
xchg
mov
xchg
pop
and
ljmp
and
xchg
in
test
fxch
dec
lret
sub
and
inc
imul
inc
in
stos
xor
out
jb
jns
es
mov
or
mov
rclb
addr16
mov
out
or
push
and
push
push
push
cwtl
sbb
fwait
or
lea
cmp
cmp
inc
bound
jo
pop
imull
mov
xchg
movsl
sub
movsb
ficoms
add
push
mov
aas
mov
cmp
iret
enter
out
inc
push
push
adc
pop
jb
jle
imul
in
test
sbb
jge
jmp
xor
les
std
call
push
lock
out
cmp
in
mov
or
mov
add
js
sbb
ss
sti
pop
sbb
fdivrl
sti
xchg
callw
inc
aad
cmp
push
and
jmp
insl
and
mov
out
xor
push
cmp
mov
mov
mov
xor
pop
fildl
adc
dec
jnp
push
sub
mov
xor
adc
push
push
notl
cmp
add
ret
int3
ret
xor
js
in
adc
xchg
fistps
ss
stos
fcmovu
inc
scas
in
loope
cmp
divb
repz
pop
and
adc
into
fwait
data16
pop
push
insl
cmp
negl
mov
insl
pop
fiadds
loopne
adc
adc
shlb
push
pop
xchg
push
je
sub
test
xchg
jne
sub
insb
dec
jo
les
movsl
movsl
pop
mov
stos
das
shr
fiadds
jnp
fs
inc
les
mov
movsbl
sub
inc
insb
mov
pusha
outsb
xchg
cli
fsubrp
cmp
xchg
mov
pop
and
js
xor
lahf
or
sub
js
or
call
rolb
mov
xchg
sub
cmp
ja
dec
pop
push
faddl
insb
std
mov
mov
jge
xor
lret
xor
cmp
inc
cs
fsubs
cmp
sbb
call
or
lret
jg
fwait
add
dec
inc
pop
shll
inc
dec
ficompl
lods
add
shr
pop
dec
pop
mov
ret
push
aam
fsubl
push
add
dec
jmp
push
pop
cli
dec
mov
pop
push
push
scas
insl
sbbb
in
out
jbe
mov
negl
sahf
push
xor
fadd
shll
mov
dec
sub
je
out
sbb
mov
inc
popa
je
cltd
mov
mov
call
dec
cmp
les
aam
jo
and
imul
fcoml
mov
repz
sbbl
xor
jne
pop
push
jge
jg
mov
mov
test
push
jl
shll
outsb
ficoml
inc
je
cmp
lcall
fdivrp
xor
jg
aas
or
sahf
imul
xchg
or
inc
std
pop
nop
adc
lds
inc
cmpsb
xor
push
inc
xor
fcmovbe
ret
push
pop
cmc
xor
movsb
pop
pop
sbb
cmp
fisubrs
dec
leave
dec
push
mov
mov
outsb
jg
dec
mov
or
lock
lea
xchg
mov
stos
fs
push
cmp
sti
pop
in
ret
or
dec
cmpsl
stos
cmp
jg
or
ljmp
inc
pushl
pop
xor
shld
inc
mov
out
ljmp
xchg
xorl
clc
shll
inc
addr16
mov
btrl
mov
int
scas
dec
gs
imul
iret
pop
sti
call
test
xchg
mov
repz
mov
pop
pop
cltd
lahf
nop
jbe
lahf
and
sbb
cld
add
mov
xchg
icebp
fwait
or
loop
arpl
cmp
clc
cmp
pop
lock
mov
or
or
jecxz
or
or
leave
cmp
test
pushf
outsl
insl
cmp
js
push
rcrl
stc
adc
xlat
subb
les
pop
cltd
sbb
or
jno
imul
iret
adc
hlt
dec
test
xor
pop
cmpb
and
pop
test
inc
cltd
cmp
out
lods
pop
xor
mov
xlat
cld
fidivrl
mov
xor
incb
hlt
lods
gs
insb
xor
jle
test
es
in
jp
cmp
pop
lcall
pop
stos
sub
jb
ror
hlt
fsubs
cwtl
xor
out
sub
js
and
cmp
pop
mov
inc
das
gs
inc
dec
pop
data16
dec
lods
ret
mov
jl
mov
jb
inc
lea
sbb
xchg
jecxz
shll
insl
cmc
inc
mov
sahf
mov
mov
sbb
ficompl
mov
bnd
daa
sub
add
xchg
push
negb
sub
pop
jle
sbbb
ror
cwtl
mov
sti
cmp
jg
dec
xor
loope
cmp
lds
out
clc
hlt
fwait
aaa
inc
mov
ret
push
inc
imul
xlat
inc
push
jnp
ljmp
push
dec
xchg
fmul
mov
hlt
int3
mov
into
jns
mov
loope
sbb
int
xor
ds
sub
mov
mov
jp
outsb
cmp
repnz
and
sub
imul
dec
dec
loop
ret
push
stos
sbb
daa
lods
test
es
cmp
sbb
decb
sub
mov
pop
pop
rorb
cmp
adc
dec
popf
inc
cmp
mov
rclb
inc
xlat
arpl
push
cmp
into
imul
pop
mov
fiaddl
push
mov
cmp
pop
add
repnz
vunpckhpd
inc
push
sub
jecxz
icebp
or
in
mov
imul
daa
repnz
data16
pushl
inc
add
mov
divb
sahf
jo
test
pop
rcrb
jne
stos
mov
sub
rcll
insb
xchg
xorl
push
call
xchg
testb
cmp
pop
add
and
out
shrb
xchg
sbb
repnz
xchg
in
xor
push
jb
sti
ja
fwait
rcrb
mov
stos
rcrb
sub
add
je
jbe
repnz
mov
scas
ljmp
into
push
out
test
xchg
lret
test
sahf
jne
jmp
jns
cmova
dec
mov
mov
out
neg
bound
rcll
pop
lods
test
mov
dec
arpl
fstps
mov
shll
jbe
out
enter
rorl
dec
mov
sub
add
push
or
add
cmpsl
stos
daa
adc
mov
adc
mov
outsl
mov
es
xchg
fbstp
and
lock
xor
mov
jb
xor
pop
jge
dec
enterw
out
sub
cmp
fsts
iret
jp
sbb
push
rcrb
mov
mov
pop
xor
pop
movb
adc
xchg
adc
inc
cmp
les
lds
mov
fdivrl
add
sbb
mov
push
or
adc
or
out
jmp
fucomp
mov
mov
fwait
mov
xchg
aas
inc
fsts
aad
and
adc
jmp
jg
scas
lret
and
push
lods
ret
xor
pop
push
push
push
aam
and
push
inc
loop
or
dec
arpl
into
cmp
add
cmpsb
shl
js
xor
mov
lods
seta
xchg
push
sarl
subl
inc
cmp
fildl
jmp
divl
fisttpl
mov
adc
jge
stos
mov
cli
mov
aas
insl
mov
sub
stos
rorb
jb
jecxz
arpl
pusha
testl
add
push
popf
inc
cmpsl
cmp
in
outsl
insb
gs
test
popa
bound
or
sbb
adc
ret
imul
cli
xor
hlt
movsb
int
jbe
adc
fdivs
lret
xchg
and
add
dec
jo
xor
adc
data16
data16
adc
sub
push
jp
aam
jnp
cmp
add
aam
sbb
jge
sbb
xlat
arpl
dec
xchg
cmpsl
pusha
jle
lock
imul
add
outsl
popa
sti
in
or
aas
or
stos
dec
mov
sub
sub
inc
or
in
fstpt
jecxz
sarl
outsl
int3
push
inc
gs
lock
or
mov
je
or
and
hlt
xchg
outsl
mov
sbb
popa
test
fsubrs
pop
and
cmp
sbb
mov
stc
loopne
jp
pusha
mov
pushf
inc
xor
addb
incl
or
scas
stc
aad
pop
adc
sub
pop
lea
insl
cmp
es
push
movsl
xchg
fsubl
mov
sbb
mov
xor
adc
or
popf
pop
fistl
inc
faddp
jle
shr
add
into
push
push
sub
and
push
inc
xor
cs
push
push
scas
aam
push
mov
push
lahf
pop
fchs
cltd
cltd
xor
cmpsb
xor
arpl
jg
hlt
es
mov
sub
pop
push
pop
lea
mov
mul
fsubs
and
mov
dec
stc
push
in
inc
outsb
dec
jns
add
loope
nop
inc
sbb
sub
bound
or
leave
dec
mov
dec
outsl
cwtl
sub
stos
aam
sbb
fldl
inc
or
xor
fadds
dec
fistpl
mov
fists
mov
aas
loopne
out
int
adc
push
sbb
sub
push
add
mov
adc
fs
xor
fldt
xor
xor
and
loop
add
outsl
cmp
int
mov
xor
addl
or
mov
test
xchg
loope
sub
ja
movsl
pop
mov
test
sub
sbb
bound
jle
push
add
push
dec
push
repz
mov
push
out
push
in
in
in
xchg
lea
add
mov
jnp
mov
and
sbb
fcoms
sbb
movsb
mov
pop
ja
loope
sbb
add
push
dec
sub
pop
jge
packuswb
mov
push
out
pop
sub
cmp
cmp
inc
adc
sarb
cmp
cltd
xor
fwait
dec
dec
out
call
fucomp
adc
mov
fwait
pop
negl
sbb
xor
dec
xor
mov
jge
dec
sarb
adc
mov
sbb
add
sub
push
vucomisd
daa
xchg
arpl
add
sub
out
jo
dec
xchg
sbb
jecxz
jge
jmp
push
push
sbb
fistpl
js
daa
adc
and
int3
test
scas
adc
cmp
pop
jge
jp
push
inc
je
push
jno
sub
loop
or
scas
cmp
leave
out
sub
xchg
sbb
lods
push
mov
sub
filds
push
push
inc
pop
mov
xor
lret
leave
pop
mov
pop
std
dec
mov
imull
xlat
lret
popf
ret
mov
mov
mov
notb
or
mov
mov
jle
dec
cwtl
sub
and
jmp
adc
and
push
xchg
cmp
fistps
or
jg
jo
fstpl
bound
popa
dec
adc
aam
shlb
std
fwait
inc
push
idivb
popf
leave
fcoms
lret
add
adc
sub
pop
cld
mov
call
sub
scas
pop
or
xchg
cmpsl
addr16
enter
add
shll
add
les
adc
jl
xor
or
pop
dec
adc
jge
cs
sbb
scas
adc
mov
lret
dec
fisubl
sub
mov
jle
xchg
xchg
jbe
mov
lods
sub
or
lea
dec
pop
sbb
jb
push
lahf
mov
gs
mov
dec
adc
jle
push
js
call
or
sbb
mov
dec
or
mov
call
dec
shll
outsb
xor
adc
in
loope
mov
sbb
inc
or
sbb
in
inc
call
push
xlat
stos
push
test
mov
imul
xchg
pop
push
out
out
add
xor
mov
andb
fdivrp
stos
add
repz
iret
mov
sarb
mov
shll
jne
outsl
cmp
inc
in
ret
frstor
jge
xchg
dec
pop
shl
pop
ljmp
xchg
sbbl
nop
jmp
push
mov
scas
push
mov
test
ds
aad
std
adc
push
inc
outsl
lcall
jbe
stos
aas
jno
xor
and
and
pop
ja
and
xchg
flds
mov
sbb
push
mov
inc
fcompl
and
and
nop
rclb
jno
jnp
xor
fwait
imul
adc
lahf
sbb
cmp
pushf
sbb
or
cwtl
loope
clc
lcall
pop
xchg
pop
fisubrl
mov
ljmp
or
jge
pop
mov
sbb
bound
pushf
adc
lea
xor
xchg
cli
sub
cmp
outsb
pop
cmp
and
aad
cli
shl
addr16
aad
imul
cltd
dec
fildl
push
mov
out
xor
faddl
xor
push
sbb
or
or
cltd
xchg
testl
imul
out
adc
sbb
adc
andl
movsb
lods
adc
insl
shrl
iret
enter
out
sbb
mov
sbb
lds
ja
cwtl
loope
ret
sub
jmp
xchg
jge
cmp
mov
test
aas
iret
mov
jb
adc
rorb
dec
jg
jbe
pop
shlb
mov
and
xchg
inc
call
adc
js
cwtl
push
into
jmp
shlb
sbb
dec
jmp
fsub
dec
jnp
inc
pop
and
imul
xor
inc
vrcpss
push
sahf
jle
aam
mov
lods
lahf
shll
stc
repnz
and
push
loope
adc
inc
dec
clc
adc
callw
test
mov
sarb
lcall
mov
push
pop
sub
pop
stc
and
pop
push
add
sti
aas
mov
daa
xchg
sub
rolb
daa
shlb
lea
je
sbb
mov
inc
mov
movsb
xchg
lret
jl
enter
add
mov
repnz
push
bnd
mov
arpl
xor
movntps
stc
jge
popa
out
xor
arpl
sahf
fdivrs
sbb
pop
aas
addr16
pop
sbb
or
and
push
ds
sbb
nop
pop
adc
xor
test
cmp
push
cmp
fadds
pop
lock
cmpsl
adc
cmp
out
mov
pushf
mov
mov
sbb
stos
shrb
cld
fucomp
jae
pop
add
adc
or
data16
mov
or
movsb
dec
sahf
dec
aas
fbld
ror
rorb
addb
dec
popa
cmc
push
xorl
sbb
std
das
movsb
push
lret
fs
imulb
cmpsl
jp
pop
shll
add
push
push
mov
adc
xchg
mov
imul
aad
loope
test
pop
lock
iret
nop
or
inc
pop
or
ljmp
cmp
inc
add
push
jp
add
push
adc
imul
aaa
into
std
loopne
mov
outsl
cmp
and
sub
shll
and
sbb
jne
notb
add
and
or
mov
push
lcall
xchg
xor
mov
xor
inc
imul
pop
jl
mov
mov
xchg
icebp
push
mov
push
dec
or
mov
push
jae
jmp
pop
cmp
mov
cld
dec
mov
orb
jp
fstps
inc
cmpsl
in
repnz
mov
pusha
mov
inc
loop
and
mov
mov
push
loopne
loopne
mov
imulb
cmp
jnp
mov
sub
les
sub
and
icebp
or
adc
mov
xor
xchg
and
das
inc
fs
mov
or
push
mov
shlb
dec
pop
push
test
ja
and
xchg
push
lret
sub
inc
mov
popa
in
cmp
push
iret
mov
rclb
sub
clc
test
jae
shrl
and
dec
push
jbe
or
js
fcompl
je
pop
fldt
in
dec
mov
dec
mov
adc
mov
sub
jmp
sbb
push
stc
sub
aaa
xor
mov
movsl
scas
dec
lea
mov
mov
cmpl
daa
lock
test
pop
jge
push
sub
js
cmc
fiaddl
notb
xchg
iret
push
sub
push
mov
adc
mov
mov
test
sub
pop
sub
jge
das
mov
inc
pop
push
push
imul
mov
pop
add
cmp
iret
fstps
jmp
jmp
repz
dec
aam
cwtl
push
cmpsb
outsl
out
mov
xor
pushl
out
sbb
sbb
sub
jbe
inc
aas
push
das
pop
lahf
sbb
stos
mov
adc
cli
shlb
push
push
jp
adc
ficoml
xchg
cld
mov
sub
arpl
lret
jp
incl
les
mov
dec
out
jmp
imul
mov
testl
hlt
adc
mov
push
stos
add
inc
adc
fcmovnbe
mov
in
pop
enter
mov
mov
mov
dec
ja
popa
jmp
fnsave
jl
xchg
outsb
inc
xchg
fadd
or
int3
aam
pop
dec
cmp
in
fnsave
push
stos
push
dec
mov
js
mov
pop
mull
xchg
mov
cmp
adc
push
aas
pop
js
loopne
mov
dec
sbb
outsl
cltd
inc
cmp
xor
mov
and
jne
sahf
adc
js
arpl
orb
push
sbbb
fisttpl
lods
inc
or
mov
pop
dec
int3
sbb
sub
arpl
int
addr16
lods
inc
dec
out
jecxz
inc
pop
mov
mov
aaa
mov
out
call
xchg
dec
test
pop
mov
xchg
jl
outsl
jbe
lea
sub
enter
mov
and
testl
in
stos
shr
or
into
sahf
sub
mov
icebp
popf
pop
cltd
hlt
mov
outsb
lds
test
mov
or
jae
cmp
mov
pop
dec
rcl
push
data16
push
pop
imul
repnz
mov
xchg
adc
imul
scas
or
jp
movsb
pop
sub
mov
ret
inc
push
data16
insl
and
les
and
add
decl
sarb
loope
adc
loop
push
testl
sbb
enter
xor
int
xor
fidivrl
push
in
cmpsb
fiaddl
xor
pusha
and
cmc
das
xor
dec
cmp
dec
jb
lods
sbb
dec
icebp
lahf
fsubs
jg
pop
imul
inc
orl
jo
cmp
into
fisubrl
cmpl
lock
and
hlt
mov
xchg
lret
shrl
and
push
pop
sahf
js
fildll
pop
push
out
add
cs
xchg
dec
ljmp
dec
add
push
es
andb
fdivl
outsl
xchg
test
jg
mov
fsubrs
and
lods
dec
out
pop
jne
pop
divl
mov
push
push
mov
add
cmp
fs
cli
xor
inc
xchg
push
imul
push
jg
pop
pop
xchg
push
aaa
idivl
sub
data16
mov
into
push
xor
pop
pop
sbb
inc
xor
shlb
jnp
mov
jbe
jnp
sub
cmpsb
cltd
stos
or
test
fstp
pop
movsb
jecxz
leave
jae
pop
or
or
lds
lea
cli
jmp
shll
pop
sar
sar
or
out
je
adc
fld
rcrb
in
in
or
cmp
aas
popa
xor
pop
out
push
ret
jne
movsl
jge
mov
fldenv
jne
mov
add
aaa
lea
mov
lret
in
adc
dec
aaa
mov
stos
mov
je
out
ret
ficoml
pop
loope
sub
mov
out
cmp
mov
adc
push
and
jne
out
aad
lahf
fcomps
movsb
adc
dec
icebp
mov
push
sbb
sahf
insl
les
aaa
ja
shl
movsl
mov
and
leave
xchg
faddl
out
rolb
mov
adc
inc
mov
push
push
pop
aas
adc
mov
push
hlt
pop
cmp
push
mov
nop
mov
stos
dec
shlb
in
jo
sub
push
or
mov
and
add
clc
sbb
mov
imul
movsb
inc
add
test
pop
and
add
mov
dec
jg
stc
push
lock
inc
and
pop
inc
adc
jbe
movsb
cmp
xor
dec
inc
push
xchg
dec
jne
decb
mov
arpl
aaa
repnz
cmpsb
ds
nop
mov
nop
cmp
xor
xchg
cmpsl
mov
xchg
sbb
pop
imul
and
stos
jmp
shlb
push
insb
adc
xchg
lret
clc
test
icebp
pop
pop
je
movsb
mov
mov
mov
inc
lods
jp
and
nop
adc
mov
or
cmp
lock
jns
mov
sub
int
into
out
add
fsubrl
cwtl
ss
sbb
push
add
dec
and
std
cmp
lock
mov
iret
or
xchg
xorl
leave
shll
gs
or
fidivl
insl
cmp
pop
xchg
stc
push
add
divl
pop
orl
push
pop
sub
jge
xlat
add
pop
test
jne
fisubs
out
add
and
lret
mov
cltd
mov
cmp
out
or
int
mov
aaa
xor
sub
jns
test
lock
sub
adc
ljmp
xor
mov
xchg
fwait
aam
push
rorb
or
add
test
sub
push
subb
out
lahf
pop
push
inc
lahf
push
int3
mov
or
int
pop
or
test
pop
movsl
mov
ja
xor
xchg
fwait
add
push
gs
mov
inc
jg
shrl
mov
fcmovb
clc
xor
sbb
sub
shrl
cwtl
mov
ret
mov
xchg
arpl
push
jg
fxch
inc
pop
in
jge
push
and
and
mov
and
lret
cmp
test
or
push
into
call
or
mov
cmpsl
test
insl
lock
mov
inc
je
push
push
mov
in
pop
adc
mov
mov
insl
mov
stc
test
fidivs
push
pop
dec
adc
mov
test
lcall
mov
cmp
pop
mov
mov
jbe
std
jae
adc
test
ret
rolb
fwait
aam
cmpsl
enter
jns
adc
sti
lock
mov
jmp
dec
mov
add
pop
mov
and
shlb
mov
leave
jmp
rcr
cmpl
pop
fbld
jl
add
inc
fisttps
push
adc
scas
pop
sbb
mov
fcoml
and
ror
std
xchg
push
lods
popl
add
les
push
mov
push
inc
inc
popa
mov
sub
std
push
loope
insb
aad
jmp
inc
das
sbb
jmp
adc
scas
repz
inc
or
inc
push
jo
mov
jbe
nop
adc
ljmp
and
lods
inc
jnp
sub
sub
neg
hlt
adc
popa
cmp
inc
xor
mov
jp
cltd
add
js
lcallw
sbb
mov
sub
data16
mov
pop
js
idivb
pop
clc
std
jno
lahf
sbb
sar
or
xor
lea
jbe
push
pop
mov
jp
loopne
cld
loope
aad
lock
mov
faddl
jmp
popa
sbb
outsl
cmp
sbb
adc
cmp
cmp
fcmovne
pop
mov
push
icebp
push
sbb
push
push
cmp
popa
cmp
push
fwait
or
flds
xor
xor
pop
xchg
gs
pop
ds
sbb
insl
daa
aad
cli
decb
aaa
orl
push
sarb
mov
add
inc
push
adc
and
cmp
iret
and
jo
data16
xor
fstps
and
dec
mov
mov
and
mov
mov
sub
jg
mov
call
push
cwtl
jne
repz
or
mov
int3
and
push
cmp
push
pushf
add
jl
mov
add
ljmp
imul
cmpsl
or
hlt
cli
test
mov
stos
rolb
fwait
jne
inc
xor
jge
adc
inc
cmp
enter
pop
movsb
popf
shrl
fs
test
mov
and
andb
sub
movsb
pop
xchg
int3
adc
mov
popa
pop
imul
fwait
addr16
pop
sub
jl
fsubp
stos
imul
mov
lock
mov
or
in
popa
stos
mov
adc
xchg
mov
xor
cmp
arpl
ss
js
sar
mov
nop
cmp
jge
sub
pop
mov
loop
pop
ds
popa
pop
pop
xchg
adc
jle
ja
mov
mov
adcl
cmp
out
imul
pop
xchg
es
test
std
sbb
lods
sbb
xor
int3
add
popf
inc
hlt
insb
xchg
adc
loopne
bound
icebp
movsl
data16
and
xchg
daa
imul
loop
shrb
mov
rcl
pop
mov
daa
lock
stc
je
push
push
add
cmc
clc
jg
pop
fisubrs
arpl
adc
push
scas
pusha
pop
sbb
jb
xchg
cmpsl
inc
cmp
mov
xchg
inc
mov
in
clc
mov
mull
or
sahf
call
adc
pop
stos
push
cmp
test
jge
or
outsl
pop
or
dec
xchg
in
xor
nop
and
and
mov
adc
call
push
xchg
or
jnp
sub
test
out
leave
pop
xchg
dec
in
loopne
xchg
gs
push
cmp
lahf
add
outsl
mov
xchg
fwait
xchg
fimuls
pop
and
aad
and
sub
jl
cmp
addr16
repz
push
pop
xchg
xor
pop
popf
std
mov
mov
lea
pushf
fmulp
shrl
adc
test
and
inc
sub
xchg
cmp
add
aad
fidivs
add
das
enter
out
mov
stos
push
dec
dec
hlt
or
push
stc
std
inc
sbb
jp
ret
mov
fcmovnu
dec
sbb
fiaddl
out
jne
rorb
xchg
js
lea
push
mov
push
sbb
and
jbe
lds
sub
push
sub
fsubl
inc
cmc
fstpt
mov
repz
push
cmp
test
fildll
inc
xor
aaa
loop
xor
add
sub
inc
or
cli
lret
dec
cmc
jmp
clc
mov
iret
mov
and
adc
inc
sahf
dec
les
in
and
adc
add
jb
xchg
cmp
mov
push
leave
or
jne
push
jno
lcall
repz
out
or
mov
mov
in
jmp
jbe
mov
stos
fimuls
loopne
jle
test
test
jmp
dec
in
mov
sbb
cmp
imul
pop
mov
mov
pop
add
push
sbb
mov
jne
setl
push
aam
fidivrs
sbb
inc
push
sub
inc
imull
mov
notb
jle
std
jp
fsubr
cmpsb
jbe
inc
push
stos
and
inc
fsubrl
aaa
xchg
cs
cmovne
lahf
or
adc
mov
lds
scas
sbb
stos
mov
xchg
xor
or
cmp
or
loope
fcoml
xor
push
in
lods
movsb
lds
in
mov
jp
imul
mov
push
jp
inc
pop
push
xchg
dec
mov
mov
xor
push
aaa
add
and
pop
or
mov
cmc
outsl
xor
movsl
pop
iret
lcall
out
aad
dec
fistl
pop
dec
fdivr
mov
pop
insb
je
xchg
cli
je
pop
out
xor
xor
in
pusha
je
repnz
cmp
outsl
inc
cmpsb
xchg
repz
mov
ja
add
movsb
int3
ja
pop
push
popf
pop
stc
sbb
shlb
jle
sub
fadd
je
cld
inc
sbb
mov
mov
push
insb
mov
mov
adc
ljmp
push
sbb
push
jmp
lcall
repz
repz
push
or
push
dec
mov
pop
leave
sbb
xor
lods
sahf
aad
mov
dec
push
mov
push
rorl
jnp
inc
jle
pop
sbb
xor
loope
jne
xchg
and
mov
push
and
mov
sbb
lds
jecxz
mov
mov
stc
sub
movsb
aam
cmp
out
ss
rclb
jg
fdivl
jp
lret
jo
push
and
mov
pop
je
cmp
iret
dec
and
pop
stos
sub
pop
push
add
in
fcoms
add
jbe
jle
jae
out
fists
jmp
imul
ret
inc
outsb
mov
pop
add
and
mov
xchg
and
popf
xor
dec
add
pop
sbb
inc
aaa
cmc
jns
shl
setnp
fdivs
jo
dec
sub
dec
push
sub
nop
aaa
pop
jl
mov
cmp
call
sub
sub
fmul
or
add
and
int3
outsb
cmp
sbb
sub
adc
sbb
sub
dec
mov
leave
mov
fiadds
adc
cmp
dec
loop
xchg
movsb
pop
into
xor
and
inc
adc
or
sbb
aam
jl
outsb
jg
fiadds
daa
fisubl
cs
jb
addl
jge
lcall
aaa
out
dec
pushf
jle
lcall
addl
dec
pusha
adc
dec
cmpsl
lcall
xor
or
insl
mov
rcl
cmp
mov
pop
in
mov
leave
xor
aad
add
sub
mov
rorl
push
pop
sbb
fsubrs
pushf
hlt
pop
push
out
sub
fmuls
imul
daa
pop
rolb
fidivl
adc
jmp
mov
mov
jns
push
or
mov
ljmp
dec
neg
mov
sbb
pop
sub
mov
sub
adc
sub
mov
shl
xchg
pushl
inc
fcoms
leave
outsl
mov
hlt
enter
and
jb
fsub
jb
xchg
cmpsb
xor
mov
pop
aam
dec
insb
cli
adc
jmp
jge
lock
xor
fmulp
or
aam
pop
loop
push
push
les
lds
into
adc
mov
in
adc
cmp
and
push
repz
mov
mov
dec
jg
add
mov
psllq
xchg
ljmp
fsubrp
or
inc
cmp
lcall
adc
or
sahf
mov
inc
stc
test
mov
or
aaa
mov
mov
icebp
and
test
or
repnz
mov
sub
cmpsb
sbb
movsl
mov
fld1
or
aas
jae
or
sbb
int3
cs
mov
mov
pusha
jmp
mov
rorl
mov
subb
popa
mov
xor
aam
sbb
xor
mov
clc
aam
hlt
mov
insl
jmp
inc
mov
xchg
fisttpl
mov
insb
push
sarl
fldt
leave
loop,pn
add
js
push
lcall
data16
pop
mov
sub
adc
sub
or
pop
jns
sahf
aam
iret
adc
insb
in
inc
rorl
loop
mov
dec
test
int
or
and
inc
and
popf
xchg
lock
adc
mov
bound
incb
jnp
dec
les
push
jns
sti
inc
adc
das
push
xchg
push
idivb
push
mov
pop
test
mov
mov
sub
add
and
test
ss
mov
mov
add
pop
mov
pop
fcomps
sub
jg
movsl
mov
cld
js
mov
clc
sahf
xchg
or
and
or
mov
mov
dec
pop
fcoms
mov
fwait
aad
das
insl
pop
sub
mov
jno
sub
mov
push
in
arpl
shlb
es
sbb
adc
inc
inc
in
icebp
out
int3
mov
mov
leave
inc
mov
or
insb
lods
add
push
sub
jge
xchg
in
add
mov
sbb
sub
scas
js
fnstenv
mov
cwtl
jg
mov
mov
fidivrs
add
xor
sub
popa
rolb
push
cmpsl
xlat
xchg
xchg
jns
je
push
rcll
xchg
je
or
sbb
fs
xlat
in
aas
pop
jmp
xor
dec
scas
daa
jns
lcall
cmpl
int
insb
or
xchg
stos
pushf
jne
les
arpl
cmp
jle
mov
stos
cwtl
lock
aam
test
out
fists
cmc
lcall
pushf
mov
and
inc
aas
aad
mov
mov
adc
lds
imul
in
ljmp
int3
jnp
jp
lret
inc
dec
xchg
mov
and
and
pushf
lds
push
icebp
push
adc
push
xchg
int3
xorl
sti
jbe
in
dec
std
or
in
ja
add
fstl
sbb
or
enter
push
out
mov
fimull
adc
dec
push
out
lea
ss
aad
stos
add
pop
xlat
rolb
cmc
test
add
hlt
and
ss
nop
inc
lret
dec
aaa
jle
lods
inc
dec
loope
dec
mov
pop
and
lea
outsb
arpl
or
push
or
mov
sti
call
dec
in
test
or
pop
sbb
dec
dec
movsb
int
xchg
push
sbb
lds
xchg
enter
sbb
add
movsb
ret
mov
mov
fimuls
iret
xor
aam
ljmp
testb
dec
data16
lock
jg
popa
inc
addr16
mov
nop
add
rorb
ret
icebp
cld
mov
ds
xchg
leave
leave
out
push
int
jae
scas
xchg
mov
cmp
or
mov
push
out
arpl
icebp
fs
inc
sbb
mov
data16
loop
nop
lret
scas
andl
das
nop
cli
out
jecxz
iret
xor
dec
inc
fbstp
add
test
lea
out
mov
fistl
out
sbb
out
inc
jae
xchg
jne
inc
xchg
outsl
nop
pop
lret
imul
mov
cmp
add
mov
cmp
mov
or
jns
xor
jge
jbe
in
lret
lods
daa
mov
sbb
push
fnstsw
pop
adc
mov
negl
dec
dec
xchg
mov
mov
push
pop
mov
mov
cmpsb
or
nop
mov
popf
iret
aas
xchg
stos
add
outsb
sbb
in
and
ficoml
iret
or
mov
xchg
test
fs
pop
daa
xor
and
dec
mov
mov
pushf
popa
lret
scas
setae
pop
jmp
add
clc
and
cltd
xchg
push
fcom
jns
stos
xchg
aas
sbb
ja
jae
arpl
repz
aaa
cmpsl
addr16
mov
cs
or
pop
sub
shll
dec
mulb
pop
sarb
sub
incl
push
insb
gs
fldenv
push
sbb
jno
mov
mov
aas
xor
lahf
gs
jmp
xchg
leave
fisttps
mov
sub
dec
mov
popf
push
subb
negl
std
dec
enter
arpl
push
test
sub
sub
add
stc
push
out
std
sbb
or
mov
outsl
jge
or
dec
xchg
pop
out
jge
cmp
mov
add
jne
fwait
loopne
push
cmpsb
jns
fwait
or
xchg
mov
mov
sub
js
lea
adc
popa
sub
aad
hlt
sbb
add
or
dec
adc
pop
inc
sbb
sarb
nop
decl
movsl
scas
sbb
es
xor
pushf
sub
sbb
lock
mov
leave
mov
jae
in
push
mov
jge
sbb
into
enter
jecxz
scas
add
pop
push
dec
mov
shll
int3
ds
out
push
dec
add
xor
sub
repz
dec
hlt
mov
push
mov
add
xorl
enter
pusha
push
fdivrp
lods
xor
je
push
negb
dec
andl
sub
inc
addr16
cld
or
in
jmp
fucomp
js
divb
test
rcl
rcrb
pop
mov
scas
sub
shl
test
push
jmp
push
nop
icebp
fbld
inc
movsl
pushf
push
mov
sar
sbb
push
lods
mov
cld
xor
jmp
inc
das
scas
sub
inc
xchg
js
xchg
mov
jl
js
stos
inc
dec
push
jg
out
xchg
dec
xchg
jns
and
xchg
mov
mov
jnp
pop
test
push
cmp
push
and
mov
push
mov
adc
sbbl
pop
or
inc
rorl
out
dec
xor
push
adc
in
stos
xchg
add
sahf
loop
mov
sbb
dec
jg
xchg
sbb
mov
jae
cmp
ljmp
outsb
xor
mov
enter
xor
popa
sub
enter
fbstp
inc
push
mov
inc
push
fbstp
lcall
adc
arpl
jecxz
mov
mul
lahf
cmp
repz
int
out
pop
lock
pop
sbb
cmp
les
jp
nop
and
mov
mov
cmp
test
icebp
std
cltd
pop
mov
jmp
mov
lds
aaa
ss
insl
cmp
js
pop
movsb
pop
mov
outsl
mov
xchg
out
mov
cmpsl
out
into
sub
movsl
push
mov
mul
xchg
leave
pushf
arpl
cmp
or
add
mov
xchg
scas
inc
push
and
or
mov
add
mull
cld
fwait
dec
xor
fbld
ja
jl
push
mov
pop
in
push
adc
adc
stc
in
xor
jge
ds
inc
lea
push
mov
xor
ljmp
xor
out
lret
mov
or
popa
xchg
xchg
mov
and
push
cmp
clc
pop
roll
mov
mov
aad
cmc
xor
dec
adc
gs
out
cmp
mov
jp
je
scas
jnp
out
cmp
sub
cwtl
and
and
push
test
adc
pop
inc
inc
jg
fs
push
sbb
jno
sbb
mov
jle
adc
fucom
mov
aaa
int
ds
pop
rolb
repnz
pop
push
pop
fcoml
rcll
cmp
inc
sbb
and
mov
jo
cltd
imul
or
scas
adc
sarl
pop
imul
dec
jo
leave
adc
imul
bound
jl
dec
xchg
mov
xchg
jns
aad
test
cld
jae
mov
aaa
bound
aam
jge
aam
rolb
pop
sbb
push
lret
lea
mov
movsl
mov
inc
inc
or
add
dec
add
test
adc
gs
cs
enter
sub
sahf
xchg
or
ret
cmc
sbb
jmp
scas
or
sub
ljmp
mov
je
je
and
mov
gs
push
lea
mov
aad
lea
mov
lds
cmc
xor
xchg
xor
jnp
leave
xchg
mov
jge
cwtl
test
insb
inc
push
pop
insb
icebp
inc
xchg
pop
in
jno
pop
int3
jo
aad
pop
int
lahf
xor
testl
fistl
or
and
mov
jecxz
fnstenv
into
mov
sbb
pop
sbb
dec
pusha
pusha
repnz
xchg
ss
fmull
dec
push
dec
mov
fdivs
xchg
add
push
push
sub
mov
aas
mov
add
mov
or
or
test
jl
mov
aas
lret
int
lock
adc
test
fisttpll
push
lods
jo
sbb
xorl
cli
int
sbb
std
and
ja
add
clc
dec
sub
or
sub
inc
movsb
mov
repnz
lock
adc
outsl
jae
out
aad
mov
inc
lcall
xchg
fidivl
sub
in
nop
rclb
div
repnz
leave
mov
mov
mov
mov
test
popf
and
pop
push
xchg
adc
sbb
xor
mov
mov
mov
mov
out
jmp
add
leave
mov
and
popa
xor
inc
cmp
mov
rcr
aam
into
cltd
adc
ljmp
and
cmpsb
orl
jb
and
std
div
movsb
inc
sub
lahf
jge
jb
mov
cltd
mov
sbb
inc
xchg
test
ficoml
and
shll
cmpsb
push
pusha
jo
mov
loope
js
cltd
fistps
mov
lret
loope
inc
scas
mov
mov
cltd
mov
xor
scas
js
jp
pop
xor
fbld
mov
aaa
push
leave
xchg
fadds
nop
sub
sub
and
stos
pop
mov
pop
imul
sub
pop
push
xchg
push
xor
repnz
icebp
js
dec
ret
push
loope
pop
mov
pusha
pop
mov
fmull
sbb
shlb
cltd
add
jbe
xchg
mov
jmp
dec
loope
mov
stos
in
ficoml
in
cmp
ja
xor
outsb
or
mov
sub
xchg
stos
stos
cmpsb
xchg
xorl
pop
test
bound
int3
mov
xchg
push
mov
sbb
call
cmc
std
sahf
pop
mov
inc
stos
dec
repz
xchg
inc
jb
out
push
fnstenv
mulb
sbb
ja
pop
insl
inc
inc
inc
dec
sbb
bound
cmp
test
dec
test
push
adc
aam
sub
inc
sbb
insl
into
aad
rol
inc
ja
mov
or
xchg
mov
jp
jne
jno
dec
aas
test
mov
mov
dec
pop
xchg
lret
aad
mov
loopne
dec
test
pop
jle
int3
fildl
popf
dec
pop
cmp
or
cltd
je
cmp
pop
adc
daa
fildll
fs
jmp
cmp
dec
fisubrl
cmp
aam
inc
mov
cs
or
test
xor
adc
adc
mov
fbstp
mov
arpl
adc
out
roll
gs
mov
xchg
or
into
fcomps
xchg
or
sub
lret
outsl
imulb
and
popa
dec
mov
call
push
mov
outsl
stos
mov
and
jne
push
stos
cmpsb
push
leave
jo
scas
icebp
cmpl
testb
out
stos
sub
int
pop
adc
pop
scas
sti
syscall
and
xor
adc
andl
mov
sbb
inc
dec
sub
sbb
into
dec
cmpsl
int3
aad
std
dec
stos
cmpsb
add
rorb
cmp
and
inc
mov
adc
rolb
lahf
push
shl
xor
dec
imul
div
xor
mov
sti
movsb
or
fs
icebp
inc
mov
ljmp
mov
and
in
pushf
lds
inc
iret
add
pop
dec
push
sarl
sbb
push
dec
xor
push
aaa
movb
fistpll
arpl
xchg
cmpsb
ss
jae
xchg
lea
adc
fucom
cmc
jne
out
popf
dec
push
stos
cmc
fildl
shrl
pusha
adc
dec
xor
add
pop
dec
icebp
sbb
inc
dec
pop
and
sbb
push
addb
inc
or
mov
add
jl
popf
push
sub
in
cld
mov
je
js
sahf
inc
add
lock
xor
mov
lcall
pop
mov
rcll
xchg
hlt
sbb
fmuls
lods
loope
mov
mov
fdivs
xor
and
sbb
add
sbb
scas
pop
jns
cli
cwtl
fists
inc
dec
xor
mov
out
sarb
inc
dec
dec
adc
aas
in
neg
ret
scas
jnp
test
mov
rcrb
mov
xor
add
or
push
xorl
sti
pop
push
mov
je
lea
pop
mov
pushf
fmull
test
sahf
dec
test
mov
jne
ret
pop
pop
jp
pop
xchg
out
data16
push
les
xchg
mov
fcoms
mov
dec
xchg
insl
mov
iret
mov
sarl
push
push
dec
jmp
adc
testb
sub
ljmp
mov
je
cmp
sbb
inc
sbb
icebp
repnz
mov
xchg
pop
mov
test
sbb
movsb
jl
jbe
xchg
inc
pop
cmp
adc
bound
fdivp
push
pop
nop
inc
test
jb
xor
ja
stos
lret
lahf
scas
pop
inc
fsubrs
movsb
lods
test
xchg
push
sub
xchg
pop
and
sbb
ja
and
add
jo
xchg
mov
in
jno
mov
movsl
push
daa
add
mul
test
gs
or
jb
outsl
and
sbb
mov
clc
test
stos
fcoml
fdivrp
xor
sub
fldcw
inc
int
mov
adc
inc
xor
shll
in
pop
adc
push
mov
loopne
cwtl
fwait
mov
cmc
push
or
inc
sub
mov
cmp
push
xchg
push
xchg
pusha
xor
or
movd
mov
jmp
rorl
jo
adc
hlt
clc
cli
or
out
mov
cmpsl
fsubr
icebp
movsb
push
ror
inc
adc
xchg
shl
enter
ss
arpl
and
push
pop
xor
cwtl
fistpl
in
scas
mov
and
adc
dec
add
enter
outsb
xchg
jns
arpl
std
nop
cmpsb
dec
add
inc
jmp
add
xchg
jl
sbb
sahf
mov
js
mov
pop
aad
inc
dec
add
adc
push
loopne
pop
insb
divl
push
or
movsb
test
inc
pop
ret
test
inc
int
movsl
add
out
adc
lods
cmp
int
pop
sub
xchg
mov
adc
mov
lds
cmpsl
in
mov
outsl
sub
sbb
in
pop
stos
adc
test
into
mov
test
dec
ljmp
cmpsl
fistl
jmp
lret
fnop
scas
add
cld
lods
pop
rcll
add
mov
xchg
sti
adc
movsb
pop
aaa
out
xor
shrl
pushf
pop
adc
test
scas
rorb
nop
lret
test
push
subl
loope
xchg
jmp
decb
xchg
ja
scas
fsub
adc
stos
and
gs
xchg
cld
push
aam
mov
movsl
pop
fstpl
sub
lahf
cmpsl
xor
pop
movsl
jb
sbb
mov
cmpl
dec
stos
out
or
pop
sarb
es
push
xchg
inc
gs
lock
int3
jg
dec
add
mov
sub
in
stc
jle
test
xor
ds
sub
ljmp
rcl
xchg
int
pop
add
movsb
fnstcw
jb
aad
sbb
stos
leave
and
pop
mov
sbb
xchg
xchg
movsb
aad
std
sahf
sahf
ljmp
jge
pop
xchg
inc
fisttpl
rol
test
xchg
imul
call
cld
or
das
into
mov
cmpb
xchg
pop
sbb
scas
call
add
addr16
or
inc
leave
out
fisubl
call
je
enter
fs
push
in
adc
lcall
test
sbbb
in
adc
ljmp
fmull
xchg
repnz
xor
outsl
xor
inc
pop
or
lods
loope
mov
std
fildl
sbb
xor
mov
pop
mov
clc
add
jge
popf
sbb
cmp
push
ds
lea
inc
cmp
jbe
and
mov
movsb
xor
or
out
and
cwtl
pop
movsl
int
xlat
loopne
cwtl
sub
mov
leave
movsb
mov
sbb
aam
mov
cld
enter
jp
cld
jbe
int
dec
movsb
inc
add
fidivs
add
adc
push
repz
inc
and
mov
inc
rol
arpl
sbb
hlt
jg
movsb
add
adc
pop
mov
ss
jecxz
sub
gs
and
mov
jmp
inc
je
xchg
adc
mov
xchg
out
scas
ljmp
fisttps
sahf
and
jp
mov
xchg
faddp
cmp
out
push
rorl
mov
sbb
pop
movsb
gs
push
add
xor
mov
add
lods
jmp
jecxz
pop
ja
andb
lahf
imul
jno
or
inc
pop
mov
cmp
mov
cwtl
dec
sbb
push
hlt
adc
xchg
jge
cmp
cs
fsub
push
xchg
pop
adc
or
dec
pusha
arpl
test
inc
into
sub
ljmp
add
outsb
jbe
repz
pop
pop
and
dec
jle
in
movsl
jmp
ljmp
stc
sub
pop
push
ret
sahf
popf
mov
mov
popa
fnstenv
adc
mov
aaa
sarl
ja
and
sbb
jmp
and
cmp
stos
pop
rcrb
or
lret
xlat
mov
ljmp
pop
mov
jb
push
pop
sub
add
add
push
inc
sub
pop
fadd
and
or
mov
mov
jb
cmp
fistps
mov
sub
repz
out
push
cltd
add
jae
xchg
fmull
cli
lods
pop
mov
pop
pop
shlb
dec
fcom
loopne
mov
pop
insb
adc
or
xchg
adc
adc
mov
ss
pop
pushf
mov
pusha
pop
cmpsb
outsl
mov
shrb
js
or
and
std
pop
into
sub
jecxz
pop
enter
test
or
push
fadd
and
scas
mov
mov
aam
sub
popa
xchg
mov
mov
xchg
dec
hlt
push
aam
repz
roll
xchg
mov
sbb
enter
add
cld
popa
cmpsb
call
rorl
lods
dec
pop
jno
je
cltd
fiadds
callw
sub
jp
and
pop
in
adc
or
test
in
sub
xor
xchg
xabort
cwtl
mov
pop
inc
cmp
xor
leave
sbb
stos
inc
and
ljmp
ret
shl
nop
pop
addb
add
push
mov
fisttpll
les
inc
roll
add
les
rcll
add
jg,pn
ret
pop
pop
shll
push
cmpsb
jno
mov
lahf
sbb
push
jp
aas
lds
shll
mov
or
mov
sti
mov
jge
sbb
inc
sbb
imul
scas
fucomp
aas
xor
add
lods
ss
int
loopne
inc
push
repz
shll
sub
jae
jne
andl
mov
lret
lret
repnz
sti
out
jne
mul
sti
or
stos
mov
and
jo
jmp
cmpsb
xor
mov
lea
nop
sub
repnz
inc
xchg
outsb
pop
dec
and
hlt
adcl
bound
out
pop
outsl
ja
jnp
sbb
cmpsl
sbb
dec
enter
add
pop
daa
mov
mov
jl
ret
std
cmp
dec
sbb
push
mov
mov
push
cmp
xchg
iret
and
push
jle
sahf
jmp
cmp
test
imulb
mov
and
xor
inc
add
aad
push
test
mov
pop
cwtl
shrb
out
or
ret
rclb
in
xor
dec
mov
mov
ss
inc
out
cmp
adc
push
sti
push
sbb
nop
push
fsubrl
mov
jno
push
add
std
dec
aad
mov
or
mov
sbb
ss
movsb
pop
jno
in
sbb
aam
add
popa
xchg
insl
mov
xchg
in
inc
xor
stc
inc
fsubl
stos
inc
ret
rcl
adc
or
adc
mov
je
push
cmp
das
out
fisubs
scas
push
imul
out
and
mov
ret
aas
mov
movsb
lret
dec
and
dec
mov
dec
repnz
das
or
adc
ss
movsb
fidivrs
or
sub
xchg
pop
js
inc
xor
lods
pushf
and
lods
jp
xchg
xchg
imul
mov
gs
je
push
ja
and
adc
adc
adc
incl
xor
loop
or
xchg
dec
mov
or
pop
add
cltd
aam
jmp
mov
mov
add
mov
sbb
mov
clc
inc
adc
add
test
rcll
push
loop
mov
jns
xchg
shll
movlps
test
cld
cmp
lods
mov
push
dec
sub
dec
xor
jnp
push
adc
adc
push
mov
sub
push
or
mov
jecxz
jmp
add
xchg
inc
adcl
add
jmp
ss
lock
mov
mov
fdivrs
push
insl
nop
loope
xor
mov
inc
clc
xchg
adc
addr16
rolb
mov
xchg
pop
mov
push
fwait
ror
inc
mull
inc
add
jmp
out
sbb
mov
aas
imul
insb
xchg
inc
pop
or
jl
pushf
mov
push
sub
outsb
mov
mov
dec
js
fcmovbe
or
jo
xor
mov
mov
and
addl
fwait
or
cmp
mov
xchg
repz
pop
sbb
sbb
add
mov
xor
pop
lods
sub
loope
sub
outsl
cli
jbe
sub
movsl
xchg
mov
xchg
sbb
sub
movsb
xor
movsl
stos
and
jmp
sbb
and
push
adc
iret
daa
repz
cmc
fnstenv
inc
mov
leave
std
lahf
mov
imul
addr16
cmp
xchg
pop
jmp
mov
mov
hlt
dec
and
out
std
xchg
pop
or
mov
mov
in
loop
inc
pop
fcmovu
xchg
daa
or
in
int
repz
ret
repz
popf
mov
inc
jmp
pop
mov
or
stc
push
sti
pop
cmp
sub
inc
mov
loope
test
fidivrs
dec
clc
out
sub
outsl
xlat
add
inc
push
mov
js
push
push
nop
aaa
xchg
and
negb
xchg
jl
mov
jmp
cmp
add
cwtl
inc
sub
or
in
shll
mov
fs
push
imul
xchg
and
stc
dec
pop
das
sti
in
dec
cwtl
cmp
lds
cs
mov
pop
mov
fucomip
mov
jle
cmp
cs
mov
adc
std
mov
xchg
mov
lds
mov
xor
sub
mov
mov
sub
outsb
test
jmp
das
mov
jecxz
repz
mov
push
ss
adcb
xchg
mov
or
cltd
cmp
shl
pop
or
cmpsb
mov
xor
fstpt
cltd
loope
pushf
mov
mov
mov
adc
popa
add
cmp
pop
inc
subl
bound
dec
mov
cmp
inc
sub
mov
das
xor
fstl
mov
int3
mov
out
adc
pop
cmc
or
in
sub
dec
push
stc
pop
pop
hlt
lldt
lods
dec
jnp
hlt
int
fidivs
inc
and
fnstsw
js
cld
dec
adc
mov
xchg
mov
and
mov
mov
cmpsl
pushf
cmpsl
push
cmp
fisttps
dec
subl
sbb
repz
addr16
cmp
pop
inc
neg
pop
push
pusha
stos
shll
and
xchg
pop
call
mov
add
inc
adc
stc
lahf
or
push
enter
out
jmp
stos
scas
outsl
jge
aad
jge
call
dec
pop
push
pushf
iret
push
sbb
jnp
or
fsubrl
sti
out
xor
dec
add
and
push
addr16
les
sbb
cmp
flds
das
aas
out
cmp
xor
movsb
insl
loopne
adc
test
mov
xor
imul
mov
push
out
call
xchg
and
inc
loope
sti
repz
adc
sbbl
adc
lcall
inc
loopne
test
lret
cs
jne
or
sub
or
shlb
push
idivl
pop
mov
ja
icebp
idiv
push
jne
adc
jnp
jno
in
xchg
frstpm(287
jae
mov
xor
je
stc
mov
dec
pushf
lods
dec
test
outsl
pop
sbb
jmp
cmp
std
xor
repnz
scas
gs
andl
jecxz
push
mov
pushf
sbb
arpl
les
pop
mov
imul
popf
out
daa
jge
xchg
sahf
int3
push
sbb
loop
inc
mov
mov
jecxz
in
push
jmp
pop
mov
popf
mov
jmp
dec
leave
and
fs
adc
popa
cwtl
cmp
fucomp
push
in
pop
jle
xchg
call
dec
int3
jmp
cmp
or
fldcw
out
mov
cmpsb
scas
mov
cmp
push
xchg
inc
jp
cmp
mov
xor
and
pop
les
pushf
scas
adc
xchg
test
imul
lods
xchg
adc
inc
inc
xchg
bound
std
dec
and
or
mov
inc
pop
sbb
adcb
mov
sub
jns
add
adc
xor
lods
pop
push
ret
pop
aam
cmp
xchg
push
pop
outsb
cmp
or
call
add
out
ret
mov
dec
xchg
mov
jmp
xchg
fnstcw
lods
mov
cmpsl
rcrb
sub
push
js
xchg
in
ss
ja
jge
cs
aam
sub
imul
aam
loopne
cmp
sbb
xchg
xchg
loop
push
push
jge
movsb
cmp
bnd
xor
jb
ljmp
mov
and
jnp
lahf
aam
xchg
mov
test
sub
sbb
fcomps
dec
xchg
or
add
cmp
dec
jg
push
mov
notb
popf
cs
pop
dec
pop
cmp
repz
imul
test
jp
mov
insb
insl
mov
inc
mov
insb
pop
out
in
dec
lock
jno
push
fidivrs
mov
and
lcall
bound
push
push
sbb
mov
pop
fidivl
loop
popa
call
ret
stos
dec
push
mov
gs
into
pop
divb
add
jle
ja
mov
mov
das
sbb
push
xor
cpuid
andl
cmp
sbb
add
or
loope
push
mov
mov
iret
lcall
imul
mov
cs
push
mov
inc
cmc
out
data16
stc
pop
jne
fcompl
pop
push
jae
mov
cmp
xor
pop
inc
clc
cwtl
mov
xor
jns
loope
and
je
inc
or
sub
mov
xlat
popa
cmpl
or
jecxz
and
testl
pop
sub
cmp
call
popf
adcl
es
fbld
adc
dec
and
imul
xor
js
xor
stc
enter
inc
test
and
clc
pop
sub
dec
pop
push
fwait
jno
or
and
pop
test
ret
cmpsl
xchg
jmp
fimuls
xchg
adc
aad
xchg
push
js
push
popf
and
mov
sub
xchg
mov
fidivrl
rclb
fistpl
sbb
les
fnsave
push
pop
adc
and
sbbb
addr16
nop
dec
data16
pop
sub
cmc
jbe
ud1
ret
mov
or
out
sub
ds
sub
dec
pushf
cmp
xlat
dec
adc
inc
dec
lret
movsl
sbb
jo
mov
sub
pusha
addr16
cmpsl
stos
arpl
aas
dec
cwtl
stc
mov
pop
inc
pop
leave
push
ret
imul
and
sub
outsb
xchg
sub
and
sbb
jbe
ss
xor
push
xor
mov
push
adcl
arpl
aam
sub
pop
in
insb
mov
outsb
lea
mov
mov
push
scas
push
pop
push
mov
in
addr16
sbb
loopew
cmp
stos
xor
popf
lods
mov
dec
push
xchg
pusha
xor
fnstenv
cmc
xor
ficoml
ja
pop
mov
cli
into
and
cli
pop
push
imul
rol
sbb
or
and
inc
insl
mov
loop
and
xor
das
repnz
fs
fstl
xor
mov
popf
pop
daa
rorl
xchg
test
or
jg
sti
test
dec
inc
fldl
pop
push
sub
pushl
out
add
fildl
jb
dec
push
rol
xchg
mov
pop
mov
outsb
mov
add
xchg
loop
test
adc
iret
pop
scas
sub
pop
inc
repnz
adc
mov
pop
pop
pop
lret
mov
xchg
push
cmp
popf
stos
xor
mov
xor
xchg
xor
mov
aam
mov
icebp
jmp
inc
adcb
sub
jmp
subb
mov
pop
fnstenv
jnp
cmp
dec
mov
jnp
hlt
mov
xor
cmc
xchg
push
shrl
xor
cmp
sub
arpl
cltd
xchg
fwait
push
mov
test
push
js
jbe
push
lcall
je
cs
sub
and
push
in
ja
jecxz
sar
adc
cmp
mov
sub
stos
dec
inc
sahf
mov
xlat
push
stc
and
and
push
xor
cmpsb
dec
ljmp
push
mov
xchg
test
push
and
pop
test
hlt
sti
jl
sbb
xlat
mov
roll
lret
inc
gs
sub
lret
sub
push
mov
xchg
fnsave
cmc
jb
cmp
jae
pushf
sbb
nop
popf
xchg
pop
sub
dec
cld
xchg
flds
dec
es
outsl
mov
pop
cs
push
lods
fisttpl
ja
fcomps
xchg
leave
mov
sbb
mov
xchg
cmpsl
inc
mov
mov
or
adc
mov
lcall
mov
loop
out
cmpsl
dec
cmp
stos
shl
loop
jb
cmp
mov
mov
mov
cwtl
cmp
pop
cmpb
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
