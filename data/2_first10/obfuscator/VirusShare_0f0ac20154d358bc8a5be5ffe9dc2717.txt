add
or
adc
add
and
add
cmp
add
add
add
xor
add
rolb
addb
add
xor
add
jo
add
mov
add
xorb
orb
add
xor
orb
add
nop
xor
add
shlb
add
or
add
add
add
sbb
add
add
add
or
add
add
add
add
add
mov
adc
add
add
add
popf
outsb
cmp
add
add
add
add
add
add
add
or
add
add
add
add
add
loopne
add
pusha
push
adc
add
add
popf
outsb
cmp
add
add
add
add
orb
add
or
add
add
add
add
add
and
add
pusha
jl
add
bound
add
popf
outsb
cmp
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
addb
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
or
add
add
add
or
add
ficoms
add
add
or
add
add
add
add
add
rolb
add
add
or
add
add
add
add
add
call
loopne
add
add
or
add
add
add
add
add
adc
add
cld
loope
add
add
or
add
add
add
add
add
cmp
add
xor
adc
xor
add
or
add
add
add
add
add
pusha
add
add
add
add
or
add
add
add
add
add
mov
add
cwtl
in
add
add
or
add
add
add
add
add
mov
add
int3
out
add
add
or
add
rolb
add
push
add
fs
jo
add
xorb
sbb
add
add
add
sub
add
push
or
cmpb
add
add
add
loop
add
add
add
sub
add
push
aaa
add
jle
add
stos
aaa
add
loopne
add
adc
add
dec
cmp
xorb
add
pop
or
sbbb
add
test
add
rorb
sbbb
add
inc
cmp
andb
add
dec
or
add
sarb
add
or
add
push
cmp
sub
add
adc
add
cmp
add
pusha
push
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
sldt
js
add
mov
cmp
or
add
lock
sbb
add
inc
adc
subb
subb
adcb
add
mov
cmp
and
add
or
add
xor
add
pop
adc
andb
sbb
add
idivb
adc
add
clc
adc
cmpb
add
push
add
xchg
cmp
add
cwtl
adc
sub
add
sbb
add
push
add
jp
add
test
add
ret
orb
add
add
add
sub
add
pop
aas
add
jbe
add
lcall
cmpb
add
enter
adc
xor
add
sbb
add
mov
subb
add
add
aam
add
repnz
add
adc
orb
add
xor
add
pop
push
add
adcb
andb
add
rclb
add
clc
push
add
and
add
dec
pop
add
jo
add
cwtl
pop
add
rclb
andb
add
adc
add
cmp
add
pusha
sbb
sbbb
add
dec
inc
add
jbe
add
sahf
inc
add
rolb
subb
add
push
sbb
xorb
add
inc
add
jle
add
mov
sbb
add
add
in
inc
add
adc
subb
cmpb
add
fs
add
xchg
inc
add
enter
or
add
xor
add
pop
sbb
xorb
add
push
inc
add
test
adc
add
clc
sbb
cmpb
sbb
add
cli
inc
add
push
inc
add
ss
add
dec
inc
add
inc
add
test
cmpb
add
pusha
sbb
add
loopne
add
add
sbb
add
add
add
sub
add
push
push
add
js
add
mov
dec
add
rorb
lock
add
sbb
add
inc
pop
add
push
dec
add
inc
dec
add
pop
dec
add
xchg
orb
add
xor
add
pop
and
and
add
push
dec
add
and
adc
add
clc
and
adcb
andb
add
dec
and
adcb
cmpb
add
shlb
sub
add
or
adcb
add
cmp
add
pusha
and
andb
orb
add
xchg
dec
add
scas
dec
add
dec
add
fmuls
adcb
cmp
add
sbb
mov
dec
add
pop
dec
add
insb
dec
add
xchg
dec
add
scas
dec
add
into
dec
add
out
dec
add
or
add
sub
orb
add
xor
add
orb
andb
subb
add
dec
add
hlt
dec
add
push
dec
add
xor
xorb
orb
sbbb
add
jl
add
xchg
dec
add
mov
add
into
dec
add
out
dec
add
sbb
xorb
add
bound
addb
add
sub
add
push
sub
and
add
push
push
add
inc
push
add
push
push
add
jb
add
nop
push
add
mov
add
fcoms
adcb
add
and
and
add
or
add
or
add
add
add
add
add
js
add
add
adc
rolb
add
or
add
add
add
add
add
mov
jmp
add
or
add
add
add
add
add
enter
mov
adc
rolb
add
or
add
add
add
add
add
lock
add
add
or
add
add
add
add
add
sbb
add
push
out
adc
rolb
add
or
add
add
add
add
add
inc
or
add
adc
rolb
add
or
add
add
add
add
add
push
repnz
rolb
add
or
add
add
add
add
add
nop
or
add
hlt
adc
rolb
add
or
add
add
add
add
add
mov
notb
add
add
add
popf
outsb
cmp
add
add
add
add
add
add
or
add
add
add
add
popf
outsb
cmp
add
add
add
add
add
or
add
xor
adc
mov
add
add
popf
outsb
cmp
add
add
add
add
add
xor
add
aam
adc
aam
add
or
add
add
add
add
add
pop
or
add
add
add
popf
outsb
cmp
add
add
add
add
add
orb
add
sbb
add
add
or
add
add
add
add
add
test
add
push
add
add
popf
outsb
cmp
add
add
add
add
add
rorb
add
cmp
adc
test
add
or
add
add
add
add
add
clc
or
add
and
add
add
add
popf
outsb
cmp
add
add
add
add
add
and
add
add
or
add
add
add
add
add
dec
or
add
adc
fadds
add
or
add
add
add
add
add
jo
add
and
adc
xor
add
or
add
add
add
add
add
cwtl
or
add
add
add
add
popf
outsb
cmp
add
add
add
add
add
rorb
in
adc
sub
add
or
add
add
add
add
add
call
inc
adc
pop
sbb
add
popf
outsb
cmp
add
add
add
add
add
adc
adc
dec
sbb
add
popf
outsb
cmp
add
add
add
add
add
cmp
adc
nop
adc
add
popf
outsb
cmp
add
add
add
add
add
pusha
or
adc
dec
add
add
popf
outsb
cmp
add
add
add
add
add
mov
adc
cli
add
add
popf
outsb
cmp
add
add
add
add
add
mov
add
nop
mov
add
add
add
popf
outsb
cmp
add
add
add
add
add
add
or
adc
pop
add
add
popf
outsb
cmp
add
add
add
add
add
add
push
add
in
mov
add
add
popf
outsb
cmp
add
add
add
add
add
add
push
add
dec
adc
pop
add
add
popf
outsb
cmp
add
add
add
add
add
add
add
movsb
adc
pop
add
add
popf
outsb
cmp
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
mov
nop
adc
sub
add
or
add
add
add
add
add
enter
test
add
or
add
add
add
add
add
lock
add
mov
add
add
popf
outsb
cmp
add
add
add
add
add
add
sldt
hlt
mov
add
or
add
add
add
add
add
inc
sldt
sub
adc
cmp
add
or
add
add
add
add
add
push
mov
add
or
add
add
add
add
add
nop
sldt
pushf
movsb
adc
cmp
add
or
add
add
add
add
add
mov
movsl
adc
add
add
or
add
add
add
add
add
loopne
add
fsubs
add
or
add
add
add
add
add
or
add
adc
add
or
add
add
add
add
add
xor
add
adc
adc
cmp
add
or
add
add
add
add
add
pop
adc
add
add
add
add
popf
outsb
cmp
add
add
add
add
add
adcb
add
mov
add
add
add
popf
outsb
cmp
add
add
add
add
add
test
add
mov
add
add
popf
outsb
cmp
add
add
add
add
add
rclb
add
sub
add
or
add
add
add
add
add
clc
adc
add
adc
aam
add
or
add
add
add
add
add
and
add
dec
mov
add
or
add
add
add
add
add
dec
adc
add
add
or
add
add
add
add
add
jo
add
fadd
adc
mov
add
add
popf
outsb
cmp
add
add
add
add
add
cwtl
adc
add
add
or
add
add
add
add
add
rclb
add
adc
lock
add
popf
outsb
cmp
add
add
add
add
add
call
lds
add
add
popf
outsb
cmp
add
add
add
add
add
adc
add
mov
adc
sub
add
or
add
add
add
add
add
cmp
add
loopne
adc
call
add
add
popf
outsb
cmp
add
add
add
add
add
pusha
adc
add
fsts
add
add
add
popf
outsb
cmp
add
add
add
add
add
mov
add
jo
adc
test
add
or
add
add
add
add
add
mov
add
sbb
adc
dec
add
add
popf
outsb
cmp
add
add
add
add
add
fcoms
add
fs
adc
cli
add
add
popf
outsb
cmp
add
add
add
add
add
add
add
pusha
add
lret
add
popf
outsb
cmp
add
add
add
add
add
sub
add
sub
adc
clc
add
add
popf
outsb
cmp
add
add
add
add
add
push
adc
add
adc
clc
add
add
popf
outsb
cmp
add
add
add
add
add
js
add
sbb
adc
int3
sbb
add
popf
outsb
cmp
add
add
add
add
add
mov
push
adc
and
add
or
add
add
add
add
add
enter
or
adc
loopne
add
or
add
add
add
add
add
lock
add
sub
add
add
add
or
add
add
add
add
add
sbb
add
adc
mov
add
or
add
add
add
add
add
inc
adc
add
add
or
add
add
add
add
add
push
xor
jl
add
or
add
add
add
add
add
nop
adc
add
aaa
adc
enter
or
add
add
add
add
add
mov
cmp
add
add
or
add
add
add
add
add
loopne
add
sbb
add
add
or
add
add
add
add
add
or
adc
push
add
add
popf
outsb
cmp
add
add
add
add
add
xor
adc
cmp
add
or
add
add
add
add
add
pop
adc
adc
jl
add
or
add
add
add
add
add
adcb
add
push
add
or
add
add
add
add
add
test
add
fs
adc
hlt
pop
add
or
add
add
add
add
add
rclb
adc
mov
add
or
add
add
add
add
add
clc
adc
adc
inc
cmp
add
or
add
add
add
add
add
and
add
push
mov
add
or
add
popf
outsb
cmp
add
add
add
add
add
dec
push
add
and
adc
js
add
or
add
add
add
add
add
jo
add
pushf
adc
js
add
or
add
add
add
add
add
cwtl
push
add
adc
adc
rolb
add
or
add
add
add
add
add
rclb
add
rclb
cli
add
add
popf
outsb
cmp
add
add
add
add
add
call
aad
add
add
or
add
add
add
add
add
adc
add
inc
fcoms
mov
add
or
add
add
add
add
add
cmp
add
lock
call
add
add
popf
outsb
cmp
add
add
add
add
add
pusha
pop
add
fcomp
adc
int3
add
add
popf
outsb
cmp
add
add
add
add
add
mov
add
movsb
fcoml
mov
add
add
popf
outsb
cmp
add
add
add
add
add
mov
add
pop
cld
adc
stos
testb
or
add
add
add
add
add
fcoms
add
or
adc
add
popf
outsb
cmp
add
add
add
add
add
add
sbb
add
hlt
adc
add
popf
outsb
cmp
add
add
add
add
add
sub
add
test
adc
add
popf
outsb
cmp
add
add
add
add
add
push
sbb
add
or
add
add
add
popf
outsb
cmp
add
add
add
add
add
js
add
add
push
add
add
or
add
add
add
add
add
mov
movhps
mov
add
or
add
add
add
add
add
enter
cld
movhps
push
add
add
popf
outsb
cmp
add
add
add
add
add
lock
add
add
add
add
popf
outsb
cmp
add
add
add
add
add
sbb
add
and
push
add
or
add
popf
outsb
cmp
add
add
add
add
add
inc
sbb
add
push
add
add
add
popf
outsb
cmp
add
add
add
add
add
push
and
add
add
or
add
add
add
add
add
nop
sbb
add
push
add
add
or
add
add
add
add
add
mov
and
add
add
or
add
add
add
add
add
loopne
add
adc
push
add
add
add
popf
outsb
cmp
add
add
add
add
add
or
add
movsb
and
add
or
add
add
add
add
add
xor
add
shlb
push
add
add
add
popf
outsb
cmp
add
add
add
add
add
pop
sbb
add
add
or
add
add
add
add
add
sbbb
add
add
add
popf
outsb
cmp
add
add
add
add
add
test
add
and
push
add
add
or
add
add
add
add
add
rcrb
add
jo
push
add
add
add
popf
outsb
cmp
add
add
add
add
add
clc
sbb
add
add
add
add
popf
outsb
cmp
add
add
add
add
add
add
sbb
add
imul
mov
add
add
popf
outsb
cmp
add
add
add
add
add
add
add
test
push
add
add
add
popf
outsb
cmp
add
add
add
add
add
add
add
pusha
jne
add
add
add
popf
outsb
cmp
add
add
add
add
add
add
jp
add
add
add
popf
outsb
cmp
add
add
add
add
add
add
sbb
add
jle
add
add
add
popf
outsb
cmp
add
add
add
add
add
add
sbb
add
push
add
or
add
add
add
or
add
sbb
add
push
add
or
add
add
add
or
add
sbb
add
push
add
push
add
or
add
add
add
or
add
add
add
add
or
add
add
add
or
add
pushf
push
add
push
add
or
add
add
add
or
add
mov
add
or
add
add
add
or
add
sbb
add
push
add
push
add
or
add
add
add
or
add
sbb
push
add
push
add
or
add
add
add
or
add
sbb
push
add
push
add
or
add
add
add
or
add
add
lock
add
or
add
add
add
add
add
js
add
sbb
push
add
add
popf
outsb
cmp
add
add
add
add
add
mov
rcll
rolb
add
popf
outsb
cmp
add
add
add
add
add
enter
sub
push
add
add
or
add
add
add
add
add
lock
push
add
add
or
add
add
add
add
add
sbb
add
cld
into
push
add
add
or
add
add
add
add
add
inc
push
add
fs
add
add
or
add
add
add
add
add
push
fistl
add
add
or
add
add
add
add
add
nop
push
add
xor
push
add
add
or
add
add
add
add
add
mov
call
add
or
add
add
add
add
add
loopne
add
add
push
add
add
or
add
add
add
add
add
or
add
insb
cmc
push
add
add
or
add
add
add
add
add
xor
add
aam
push
add
add
or
add
add
add
add
add
pop
pop
add
cmp
pop
add
add
or
add
add
add
add
add
sbbb
add
add
or
add
add
add
add
add
test
add
sub
pop
add
add
or
add
add
add
add
add
rcrb
add
xchg
adc
add
add
or
add
add
add
add
add
clc
pop
add
cld
push
pop
add
add
or
add
add
add
add
add
and
add
fs
add
or
add
add
add
add
add
dec
and
add
and
add
add
or
add
add
add
add
add
jo
add
xor
pop
add
add
or
add
add
add
add
add
cwtl
and
add
add
or
add
add
add
add
add
shlb
add
pop
add
add
add
popf
outsb
cmp
add
add
add
add
add
call
cmp
add
add
or
add
add
add
add
add
adc
add
hlt
ds
add
add
or
add
add
add
add
add
cmp
add
pop
inc
pop
add
add
or
add
add
add
add
add
pusha
and
add
dec
pop
add
add
add
popf
outsb
cmp
add
add
add
add
add
mov
add
dec
dec
pop
add
add
add
popf
outsb
cmp
add
add
add
add
add
mov
add
aam
pop
add
add
or
add
add
add
add
add
fsubs
add
cmp
pop
add
add
or
add
add
add
add
add
add
add
movsb
pop
pop
add
add
or
add
add
add
add
add
sub
add
or
pop
add
add
or
add
add
add
add
add
push
and
add
add
add
add
popf
outsb
cmp
add
add
add
add
add
js
add
cld
imul
add
popf
outsb
cmp
add
add
add
add
add
mov
jo
add
add
or
add
add
add
add
add
enter
int3
jbe
add
add
or
add
add
add
add
add
lock
add
add
or
add
add
add
add
add
sbb
add
pushf
adcl
push
add
add
popf
outsb
cmp
add
add
add
add
add
inc
and
add
pop
add
add
or
add
add
add
add
add
push
nop
pop
add
add
add
popf
outsb
cmp
add
add
add
add
add
nop
and
add
xchg
pop
add
add
or
add
add
add
add
add
mov
cwtl
pop
add
add
or
add
add
add
add
add
loopne
add
les
add
or
add
add
add
add
add
or
add
add
or
add
add
add
add
add
xor
add
add
or
add
add
add
add
add
pop
and
add
add
or
add
add
add
add
add
andb
test
add
or
add
add
add
add
add
test
add
in
mov
add
or
add
add
add
add
add
shlb
add
add
add
or
add
add
add
add
add
clc
and
add
add
or
add
add
add
add
add
and
pop
add
add
or
add
add
add
add
add
dec
and
pop
add
add
or
add
add
add
add
add
jo
add
hlt
fsts
add
add
or
add
add
add
add
add
cwtl
and
pop
add
add
or
add
add
add
add
add
shlb
add
add
or
add
add
add
add
add
call
in
pop
add
add
add
popf
outsb
cmp
add
add
add
add
add
adc
add
mov
pop
add
add
or
add
add
add
add
add
cmp
add
sbb
pop
add
add
add
popf
outsb
cmp
add
add
add
add
add
pusha
add
movsb
notb
add
add
or
add
add
add
add
add
mov
add
or
pop
add
add
or
add
add
add
add
add
mov
add
je
sbb
push
add
add
popf
outsb
cmp
add
add
add
add
add
fsubs
add
fmull
sbb
push
add
add
popf
outsb
cmp
add
add
add
add
add
add
add
inc
adc
add
add
or
add
add
add
add
add
sub
add
lods
push
sbb
rorb
add
popf
outsb
cmp
add
add
add
add
add
push
daa
add
insb
pop
sbb
int3
push
add
or
add
add
add
add
add
js
add
cmp
sbb
jo
add
or
add
add
add
add
add
mov
daa
sbb
dec
add
add
or
add
add
add
add
add
enter
lock
add
add
or
add
add
add
add
add
lock
add
push
push
add
or
add
add
add
add
add
sbb
add
xor
sbb
mov
add
or
add
add
add
add
add
inc
sub
add
add
or
add
add
add
add
add
push
dec
sbb
cmp
add
or
add
add
add
add
add
nop
sub
add
add
or
add
add
add
add
add
mov
push
sbb
fadds
add
or
add
add
add
add
add
loopne
add
lock
sbb
nop
add
add
or
add
add
add
add
add
or
add
andb
insb
add
add
popf
outsb
cmp
add
add
add
add
add
xor
add
in
bound
add
add
or
add
add
add
add
add
pop
sub
add
sbb
push
add
add
or
add
add
add
add
add
subb
add
sbb
cmp
add
or
add
add
add
add
add
test
add
xchg
int
add
add
or
add
add
add
add
add
shrb
add
rcl
sbb
push
add
or
add
add
add
add
add
clc
sub
add
sbb
push
add
add
popf
outsb
cmp
add
add
add
add
add
and
add
pop
fstpl
add
add
add
popf
outsb
cmp
add
add
add
add
add
add
add
or
add
add
add
add
add
pusha
sub
add
aad
add
add
add
popf
outsb
cmp
add
add
add
add
add
add
add
or
add
add
add
add
add
mov
jmp
add
add
or
add
add
and
push
add
loopne
add
or
sbb
add
xor
sbb
add
pop
sub
and
add
subb
loop
add
test
add
shrb
and
add
clc
sub
and
add
and
add
dec
sub
add
jo
add
cwtl
sub
add
shrb
add
sub
add
adc
add
cmp
add
pusha
add
mov
add
mov
add
fsubrs
add
add
add
sub
add
push
das
add
js
add
mov
sldt
enter
testl
add
sbb
add
inc
xor
cmp
add
push
sldt
nop
xor
cmp
add
mov
sldt
loopne
add
or
add
xor
add
pop
xor
addb
add
or
add
add
add
add
add
clc
sub
add
sbb
inc
add
add
popf
outsb
cmp
add
add
add
add
add
and
add
add
add
popf
outsb
cmp
add
add
add
add
add
dec
sub
add
out
sbb
les
add
or
add
add
add
add
add
jo
add
hlt
out
sbb
sub
add
or
add
add
add
add
add
cwtl
sub
add
lock
rolb
add
or
add
add
add
add
add
shrb
lock
push
add
add
popf
outsb
cmp
add
add
add
add
add
add
sub
add
add
add
or
add
add
add
add
add
adc
sbb
fadds
add
or
add
add
add
add
add
cmp
sbb
pop
add
add
popf
outsb
cmp
add
add
add
add
add
add
add
test
sbb
sub
add
or
add
add
add
add
add
mov
sbb
pusha
add
add
popf
outsb
cmp
add
add
add
add
add
add
cld
sbb
nop
add
add
popf
outsb
cmp
add
add
add
add
add
add
sub
sbb
in
add
or
add
add
add
add
add
add
add
movsb
add
add
add
or
add
add
add
add
add
sub
add
cmp
sbb
cwtl
add
add
popf
outsb
cmp
add
add
add
add
add
add
add
rorb
sbb
rolb
add
or
add
add
add
add
add
js
add
mov
add
add
popf
outsb
cmp
add
add
add
add
add
add
adc
add
add
or
add
add
add
add
add
enter
dec
push
sbb
loopne
add
or
add
add
add
add
add
lock
sub
sbb
cwtl
add
add
popf
outsb
cmp
add
add
add
add
add
add
das
add
rcrb
add
add
or
add
add
add
add
add
inc
das
add
sbb
sbb
sbb
add
or
add
add
add
add
add
push
push
sbb
aam
add
or
add
add
add
add
add
nop
das
add
or
sbb
je
add
or
add
add
add
add
add
mov
and
add
add
add
popf
outsb
cmp
add
add
add
add
add
add
das
add
inc
and
add
add
or
add
add
add
add
add
or
add
nop
sbb
pushf
add
add
popf
outsb
cmp
add
add
add
add
add
add
xor
add
sbb
js
add
or
add
add
add
add
add
pop
xor
add
add
or
add
add
add
add
add
xorb
add
add
add
or
add
add
add
add
add
test
add
nop
xor
add
add
add
popf
outsb
cmp
add
add
add
add
add
add
xor
add
sbb
mov
add
add
popf
outsb
cmp
add
add
add
add
add
add
xor
add
sbb
int3
add
add
popf
outsb
cmp
add
add
add
add
add
add
xor
add
cmp
add
add
or
add
add
add
add
add
dec
xor
add
sbb
xor
add
or
add
add
add
add
add
jo
add
jo
sbb
adc
add
or
add
or
push
add
movsb
push
add
mov
xor
sbb
add
call
xor
addb
add
and
sub
add
adc
add
cmp
add
pusha
xor
orb
add
mov
add
fdivs
add
or
add
add
add
add
add
adc
add
test
adc
add
or
add
add
add
add
add
cmp
add
xchg
inc
sbb
xor
add
or
add
add
add
add
add
pusha
xor
add
dec
sbb
adc
add
popf
outsb
cmp
add
add
add
add
add
add
pusha
sbb
mov
add
add
popf
outsb
cmp
add
add
add
add
add
add
arpl
add
add
add
popf
outsb
cmp
add
add
add
add
add
add
xor
add
add
or
add
add
add
add
add
add
add
inc
stos
sbb
xchg
add
add
popf
outsb
cmp
add
add
add
add
add
add
xor
add
scas
sbb
add
add
or
add
add
add
add
add
push
xor
add
call
add
or
add
add
add
add
add
js
add
dec
sub
add
add
add
popf
outsb
cmp
add
add
add
add
add
add
das
and
lret
adc
add
popf
outsb
cmp
add
add
add
add
add
add
xor
add
inc
and
sbb
add
add
popf
outsb
cmp
add
add
add
add
add
add
xor
add
inc
and
and
add
or
add
add
pop
add
push
add
stc
jg
add
add
mov
jg
add
xor
cmp
add
lock
cmp
add
sbb
add
inc
xor
add
push
add
add
popf
outsb
cmp
add
add
add
add
add
add
add
sbb
and
adc
add
or
add
add
add
add
add
nop
xor
add
shll
add
add
or
add
add
add
add
add
mov
shll
add
add
or
add
add
add
add
add
loopne
add
pop
shll
add
add
or
add
add
add
add
add
or
and
adc
add
or
add
add
add
add
add
xor
and
adc
add
or
add
add
add
add
add
pop
xor
and
adc
add
or
add
add
add
add
add
xorb
add
add
or
add
add
add
adc
add
add
add
or
add
add
add
add
add
shlb
add
add
or
add
add
add
add
add
call
add
add
popf
outsb
cmp
add
add
add
add
add
add
add
shll
add
add
add
add
add
add
add
add
push
add
push
add
add
inc
add
add
add
push
add
push
add
dec
add
add
inc
add
inc
add
add
dec
add
add
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
adc
inc
add
add
inc
add
add
push
add
inc
add
push
add
add
adc
inc
add
add
inc
add
add
push
add
inc
add
inc
add
dec
add
dec
add
adc
inc
add
add
inc
add
add
push
add
inc
add
inc
add
dec
add
add
push
add
add
inc
add
dec
add
push
add
pop
add
push
add
inc
add
inc
add
push
add
inc
add
adc
add
inc
add
dec
add
push
add
pop
add
inc
add
add
inc
add
push
add
add
sbb
inc
add
add
inc
add
add
push
add
push
add
push
add
dec
add
add
push
add
inc
add
push
add
add
sbb
inc
add
add
inc
add
add
push
add
push
add
push
add
dec
add
add
push
add
push
add
inc
add
dec
add
add
dec
add
inc
add
dec
add
push
add
pop
add
dec
add
add
dec
add
dec
add
inc
add
add
inc
add
sbb
inc
add
add
inc
add
add
push
add
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
add
or
add
inc
add
dec
add
push
add
pop
add
add
adc
inc
add
add
inc
add
add
push
add
push
add
inc
add
dec
add
dec
add
adc
inc
add
add
inc
add
add
push
add
push
add
push
add
add
push
add
push
add
dec
add
inc
add
dec
add
push
add
pop
add
add
add
pop
add
dec
add
inc
add
push
add
inc
add
add
inc
add
add
push
add
push
add
push
add
add
dec
add
inc
add
add
dec
add
inc
add
dec
add
push
add
pop
add
add
add
pop
add
dec
add
dec
add
add
dec
add
inc
add
dec
add
push
add
pop
add
add
inc
add
inc
add
push
add
inc
add
push
add
add
dec
add
inc
add
dec
add
push
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
sbb
inc
add
add
inc
add
add
push
add
push
add
inc
add
dec
add
inc
add
pop
add
dec
add
inc
add
push
add
push
add
add
add
inc
add
push
add
add
add
inc
add
push
add
push
add
add
add
dec
add
inc
add
push
add
inc
add
dec
add
dec
add
add
push
add
dec
add
or
inc
add
dec
add
dec
add
add
add
add
add
inc
add
pop
add
push
add
add
dec
add
add
add
pop
add
inc
add
inc
add
dec
add
add
add
pop
add
add
add
add
add
add
pop
add
inc
add
push
add
add
add
pop
add
dec
add
push
add
add
add
pop
add
dec
add
inc
add
push
add
add
add
pop
add
add
push
add
add
add
pop
add
inc
add
push
add
add
add
pop
add
dec
add
push
add
add
add
pop
add
push
add
dec
add
or
inc
add
dec
add
push
add
inc
add
inc
add
dec
add
add
add
push
add
dec
add
inc
add
inc
add
push
add
add
adc
inc
add
inc
add
inc
add
add
pop
add
dec
add
inc
add
inc
add
pop
add
add
add
push
add
dec
add
inc
add
inc
add
inc
add
dec
add
add
push
add
inc
add
inc
add
inc
add
add
pop
add
push
add
inc
add
inc
add
push
add
inc
add
adc
inc
add
inc
add
inc
add
add
pop
add
inc
add
add
inc
add
push
add
add
sbb
inc
add
inc
add
inc
add
add
pop
add
inc
add
dec
add
add
inc
add
pop
add
push
add
add
dec
add
add
add
push
add
dec
add
inc
add
push
add
push
add
dec
add
add
push
add
push
add
inc
add
dec
add
add
add
push
add
dec
add
inc
add
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
inc
add
push
add
add
add
push
add
dec
add
inc
add
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
add
or
inc
add
inc
add
inc
add
add
pop
add
add
adc
inc
add
inc
add
inc
add
add
pop
add
add
pop
add
add
inc
add
add
add
push
add
dec
add
inc
add
push
add
push
add
add
push
add
adc
add
push
add
dec
add
inc
add
push
add
push
add
add
inc
add
add
dec
add
add
add
push
add
dec
add
inc
add
push
add
push
add
add
dec
add
inc
add
add
add
push
add
dec
add
inc
add
push
add
push
add
add
push
add
inc
add
push
add
add
push
add
dec
add
inc
add
push
add
inc
add
dec
add
inc
add
pop
add
inc
add
sbb
inc
add
inc
add
inc
add
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
sbb
inc
add
inc
add
inc
add
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
pop
add
adc
inc
add
dec
add
add
dec
add
dec
add
inc
add
push
add
inc
add
pop
add
dec
add
add
dec
add
push
add
dec
add
inc
add
pop
add
add
inc
add
add
inc
add
inc
add
push
add
dec
add
inc
add
push
add
inc
add
push
add
add
push
add
inc
add
dec
add
pop
add
dec
add
inc
add
inc
add
pop
add
add
inc
add
dec
add
pop
add
dec
add
inc
add
dec
add
push
add
add
inc
add
dec
add
pop
add
dec
add
inc
add
inc
add
pop
add
inc
add
push
add
add
adc
add
dec
add
pop
add
dec
add
dec
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
push
add
inc
add
push
add
add
inc
add
dec
add
pop
add
inc
add
push
add
push
add
dec
add
inc
add
add
inc
add
dec
add
pop
add
push
add
inc
add
inc
add
push
add
inc
add
adc
dec
add
inc
add
push
add
push
add
inc
add
dec
add
push
add
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
dec
add
add
inc
add
pop
add
push
add
add
dec
add
add
dec
add
pop
add
inc
add
dec
add
add
inc
add
pop
add
add
inc
add
adc
dec
add
inc
add
push
add
push
add
push
add
dec
add
add
push
add
add
adc
add
dec
add
pop
add
dec
add
add
dec
add
dec
add
inc
add
add
inc
add
sbb
dec
add
inc
add
push
add
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
add
or
dec
add
inc
add
push
add
push
add
inc
add
add
inc
add
dec
add
pop
add
add
pop
add
add
inc
add
add
inc
add
dec
add
pop
add
add
add
inc
add
add
add
inc
add
dec
add
pop
add
add
add
pop
add
dec
add
inc
add
push
add
add
inc
add
dec
add
pop
add
add
add
pop
add
add
push
add
add
inc
add
dec
add
pop
add
add
add
pop
add
dec
add
dec
add
add
inc
add
dec
add
pop
add
add
inc
add
inc
add
push
add
inc
add
push
add
add
dec
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
pop
add
inc
add
dec
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
pop
add
adc
dec
add
add
inc
add
dec
add
add
dec
add
inc
add
push
add
add
or
dec
add
dec
add
pop
add
dec
add
inc
add
inc
add
add
dec
add
inc
add
push
add
push
add
dec
add
add
push
add
add
push
add
push
add
inc
add
add
add
push
add
push
add
push
add
dec
add
dec
add
push
add
dec
add
dec
add
inc
add
push
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
push
add
push
add
push
add
dec
add
pop
add
push
add
add
dec
add
add
push
add
push
add
dec
add
pop
add
dec
add
inc
add
inc
add
pop
add
add
push
add
push
add
dec
add
pop
add
dec
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
pop
add
dec
add
dec
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
push
add
push
add
dec
add
pop
add
push
add
inc
add
inc
add
push
add
inc
add
adc
push
add
dec
add
add
dec
add
push
add
inc
add
dec
add
push
add
add
dec
add
add
push
add
push
add
dec
add
pop
add
inc
add
dec
add
add
inc
add
pop
add
push
add
add
dec
add
add
push
add
push
add
dec
add
pop
add
inc
add
dec
add
add
inc
add
pop
add
add
inc
add
pop
add
push
add
push
add
dec
add
pop
add
dec
add
add
dec
add
dec
add
inc
add
add
inc
add
sbb
push
add
dec
add
add
dec
add
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
add
or
push
add
dec
add
add
dec
add
push
add
inc
add
add
push
add
push
add
dec
add
pop
add
add
pop
add
add
inc
add
add
push
add
push
add
dec
add
pop
add
add
add
inc
add
add
push
add
dec
add
add
dec
add
push
add
push
add
add
inc
add
add
dec
add
add
push
add
push
add
dec
add
pop
add
add
add
pop
add
add
push
add
add
push
add
push
add
dec
add
pop
add
add
add
pop
add
dec
add
dec
add
add
push
add
push
add
dec
add
pop
add
add
inc
add
inc
add
push
add
inc
add
push
add
add
push
add
push
add
dec
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
sbb
push
add
dec
add
add
dec
add
push
add
inc
add
dec
add
inc
add
pop
add
dec
add
inc
add
push
add
push
add
add
pop
add
dec
add
dec
add
pop
add
inc
add
push
add
inc
add
adc
push
add
inc
add
inc
add
inc
add
pop
add
dec
add
inc
add
add
push
add
dec
add
add
pop
add
dec
add
dec
add
pop
add
push
add
dec
add
push
add
push
add
add
pop
add
dec
add
dec
add
pop
add
push
add
push
add
push
add
push
add
push
add
pop
add
dec
add
dec
add
pop
add
push
add
push
add
push
add
push
add
inc
add
pop
add
inc
add
add
pop
add
dec
add
dec
add
dec
add
inc
add
dec
add
push
add
push
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
inc
add
dec
add
inc
add
add
pop
add
dec
add
dec
add
dec
add
inc
add
add
inc
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
lldt
pop
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
or
push
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
dec
add
push
add
pop
add
dec
add
dec
add
dec
add
push
add
push
add
pop
add
push
add
inc
add
dec
add
dec
add
pop
add
inc
add
lldt
dec
add
add
dec
add
dec
add
inc
add
add
push
add
adc
push
add
add
add
inc
add
push
add
dec
add
dec
add
add
lldt
add
dec
add
push
add
dec
add
inc
add
push
add
add
or
push
add
push
add
inc
add
push
add
add
or
push
add
push
add
inc
add
inc
add
dec
add
dec
add
push
add
add
dec
add
dec
add
inc
add
inc
add
dec
add
push
add
add
add
dec
add
dec
add
inc
add
dec
add
push
add
add
pop
add
push
add
push
add
inc
add
dec
add
push
add
dec
add
or
push
add
push
add
inc
add
dec
add
dec
add
dec
add
or
add
dec
add
dec
add
push
add
push
add
add
push
add
add
dec
add
add
dec
add
inc
add
inc
add
pop
add
add
add
dec
add
add
dec
add
inc
add
inc
add
pop
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
inc
add
add
add
dec
add
add
dec
add
inc
add
or
add
dec
add
add
add
push
add
dec
add
adc
push
add
push
add
inc
add
dec
add
dec
add
push
add
inc
add
dec
add
dec
add
dec
add
adc
push
add
push
add
inc
add
dec
add
dec
add
push
add
dec
add
push
add
add
pop
add
add
add
dec
add
add
inc
add
dec
add
add
add
dec
add
add
inc
add
dec
add
inc
add
add
adc
push
add
push
add
inc
add
push
add
inc
add
dec
add
push
add
push
add
or
push
add
push
add
inc
add
inc
add
inc
add
dec
add
add
add
dec
add
add
push
add
inc
add
dec
add
dec
add
dec
add
or
push
add
push
add
inc
add
add
add
add
dec
add
dec
add
add
add
dec
add
adc
push
add
push
add
inc
add
dec
add
add
dec
add
dec
add
dec
add
adc
push
add
push
add
inc
add
dec
add
add
pop
add
inc
add
dec
add
dec
add
dec
add
or
push
add
push
add
inc
add
push
add
or
push
add
push
add
inc
add
dec
add
push
add
dec
add
lldt
add
dec
add
dec
add
inc
add
inc
add
push
add
add
push
add
add
dec
add
dec
add
inc
add
push
add
dec
add
dec
add
add
add
dec
add
dec
add
push
add
add
inc
add
add
or
push
add
push
add
dec
add
push
add
add
pop
add
push
add
push
add
dec
add
push
add
add
inc
add
or
push
add
push
add
dec
add
dec
add
dec
add
dec
add
or
push
add
push
add
dec
add
push
add
inc
add
add
add
add
dec
add
inc
add
inc
add
push
add
or
push
add
push
add
dec
add
dec
add
adc
push
add
push
add
dec
add
push
add
inc
add
inc
add
add
dec
add
inc
add
add
add
dec
add
push
add
push
add
push
add
dec
add
dec
add
add
add
dec
add
push
add
inc
add
push
add
inc
add
push
add
add
add
dec
add
inc
add
inc
add
dec
add
push
add
dec
add
add
add
dec
add
inc
add
inc
add
add
add
dec
add
inc
add
push
add
dec
add
inc
add
add
dec
add
inc
add
add
dec
add
dec
add
push
add
dec
add
dec
add
lldt
add
dec
add
push
add
inc
add
inc
add
push
add
inc
add
lldt
add
dec
add
inc
add
add
inc
add
push
add
add
push
add
add
dec
add
inc
add
add
inc
add
dec
add
push
add
add
dec
add
inc
add
dec
add
add
inc
add
lldt
add
dec
add
dec
add
add
dec
add
dec
add
inc
add
add
add
dec
add
dec
add
dec
add
dec
add
push
add
dec
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
dec
add
inc
add
add
add
add
dec
add
push
add
push
add
push
add
inc
add
push
add
add
dec
add
push
add
dec
add
inc
add
push
add
inc
add
add
add
dec
add
add
inc
add
dec
add
add
dec
add
add
add
dec
add
add
dec
add
dec
add
dec
add
inc
add
push
add
push
add
push
add
push
add
push
add
add
inc
add
or
push
add
push
add
push
add
dec
add
add
push
add
push
add
push
add
push
add
inc
add
dec
add
inc
add
or
push
add
push
add
push
add
inc
add
push
add
inc
add
or
push
add
push
add
push
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
push
add
add
dec
add
add
dec
add
pop
add
pop
add
dec
add
inc
add
inc
add
pop
add
add
dec
add
pop
add
pop
add
dec
add
inc
add
dec
add
push
add
add
dec
add
pop
add
pop
add
dec
add
inc
add
inc
add
pop
add
inc
add
push
add
add
adc
push
add
dec
add
push
add
push
add
dec
add
push
add
push
add
inc
add
push
add
add
dec
add
pop
add
pop
add
inc
add
add
inc
add
push
add
add
push
add
dec
add
pop
add
pop
add
inc
add
dec
add
add
inc
add
pop
add
push
add
add
dec
add
add
pop
add
pop
add
inc
add
dec
add
add
inc
add
pop
add
add
inc
add
adc
push
add
dec
add
push
add
push
add
push
add
dec
add
add
push
add
add
adc
add
pop
add
pop
add
dec
add
add
dec
add
dec
add
inc
add
add
inc
add
sbb
push
add
dec
add
push
add
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
add
or
push
add
dec
add
push
add
push
add
inc
add
add
dec
add
pop
add
pop
add
add
pop
add
add
inc
add
add
dec
add
pop
add
pop
add
add
add
inc
add
add
add
dec
add
pop
add
pop
add
add
add
pop
add
dec
add
inc
add
push
add
add
dec
add
pop
add
pop
add
add
add
pop
add
add
push
add
add
dec
add
pop
add
pop
add
add
add
pop
add
dec
add
dec
add
add
dec
add
pop
add
pop
add
add
inc
add
inc
add
push
add
inc
add
push
add
add
pop
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
pop
add
dec
add
pop
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
pop
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
add
inc
add
inc
add
push
add
inc
add
push
add
pop
add
add
dec
add
inc
add
push
add
add
dec
add
push
add
push
add
push
add
dec
add
dec
add
push
add
inc
add
add
push
add
inc
add
push
add
or
push
add
add
dec
add
inc
add
inc
add
add
or
push
add
inc
add
dec
add
dec
add
dec
add
add
add
push
add
inc
add
dec
add
dec
add
add
push
add
lldt
add
push
add
push
add
push
add
add
inc
add
add
push
add
add
inc
add
dec
add
push
add
push
add
dec
add
pop
add
push
add
dec
add
add
push
add
push
add
inc
add
dec
add
add
inc
add
push
add
or
push
add
push
add
add
inc
add
push
add
adc
push
add
inc
add
dec
add
dec
add
pop
add
inc
add
inc
add
push
add
push
add
push
add
add
inc
add
dec
add
inc
add
dec
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
lret
add
add
add
add
add
xor
xor
inc
add
add
add
push
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
fcomps
pop
dec
movsb
pop
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
fcomps
push
dec
int
push
pop
add
jbe
xchg
push
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
add
and
add
add
push
add
outsl
add
add
je
dec
add
insl
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
test
add
add
add
and
add
add
sbb
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cli
cli
cli
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
add
cli
cli
cli
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
add
incl
add
add
incl
add
add
mov
add
add
jno
add
add
into
add
add
add
pushl
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
inc
add
pusha
add
nop
add
lcall
add
pusha
add
lds
add
add
popa
add
pop
add
incl
add
add
pushl
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
std
add
mov
add
add
add
add
incl
add
add
sub
add
add
incl
add
add
pushl
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
or
add
add
incl
add
add
shll
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
sub
add
scas
add
incl
add
add
repz
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
filds
add
xor
add
add
incl
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incb
add
add
mov
add
add
add
incl
add
add
cmp
add
add
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
loopne
add
add
incl
add
add
incl
add
add
xchg
add
push
add
push
add
testl
jg
add
add
add
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
in
add
add
std
add
mov
add
add
jle
add
add
incl
add
add
dec
add
push
add
out
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
and
add
add
lods
add
mov
add
add
jae
add
add
incl
add
add
incb
add
add
bound
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
in
add
incb
add
add
add
add
add
add
add
add
incl
add
add
incl
add
add
pop
add
mov
mov
add
add
cli
cli
add
incl
add
add
in
add
lret
loop
add
add
xchg
add
movsl
add
jecxz
add
add
add
xor
add
add
add
add
cli
add
jmp
add
add
incl
add
add
xchg
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
faddl
add
add
mov
add
add
add
das
add
cmpsb
add
nop
add
pop
pop
add
add
add
add
mov
add
add
incb
add
add
add
add
add
mov
mov
add
add
cli
cli
add
incl
add
add
stc
add
mov
add
add
add
add
add
add
add
add
add
add
xchg
add
sub
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
add
add
incl
add
add
push
add
pop
add
add
add
pop
add
adc
add
mov
add
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
add
mov
add
add
incl
add
add
popf
add
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
add
enter
add
incl
add
add
aam
add
add
and
add
mov
add
add
inc
add
jb
add
add
add
add
mov
add
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
xchg
add
or
add
add
faddl
add
add
incl
add
add
incl
add
add
incl
add
add
test
add
add
pop
add
addb
xchg
add
add
add
add
add
add
mov
add
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
dec
add
addl
incl
add
add
incl
add
add
incl
add
add
incl
add
add
fildl
add
add
stos
add
jle
add
add
add
add
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incb
add
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
pushl
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
out
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
mov
mov
add
mov
add
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
add
rolb
add
add
add
add
int3
fstl
jl
jecxz
cmc
fwait
in
jbe
ljmp
jge
fs
aad
repz
scas
seto
ficoml
or
mov
insb
inc
cmp
dec
leave
ljmp
mov
rorb
pop
idivl
jae
ret
movsb
int
mov
adc
inc
dec
dec
pop
mov
dec
cmpsb
pop
ljmp
shr
ja
jne
xchg
stos
xchg
pop
jo
int
sub
jno
fisubrs
mov
out
xchg
mov
jnp
loope
push
mov
dec
addl
stos
cmp
sbbl
mov
pusha
xchg
cmpsb
sbb
and
and
shl
movsl
mov
and
cmc
xchg
or
lcall
aam
pop
push
loopne
xchg
pop
mov
mov
aad
mov
test
xchg
lods
cs
sbb
sbb
xor
fisubrl
iret
xchg
inc
jae
cmc
repz
add
sub
sahf
sbb
push
lcall
sbb
jae
and
sub
mov
sub
imul
cmpsb
orb
and
add
and
lahf
cli
xchg
es
or
and
xchg
mov
or
cmpl
pusha
add
adc
xchg
aam
xchg
add
pushf
jp
call
xor
imul
das
sbb
sti
fnstenv
mov
cmp
sbb
mov
outsl
enter
cmp
fbld
fld
push
sti
mov
mov
mov
mov
inc
gs
jne
std
outsl
das
cld
inc
xchg
mov
lcall
filds
and
xchg
pop
dec
iret
inc
ret
add
add
inc
adc
cmp
mov
out
imul
je
jcxz
out
iret
out
cmpb
ss
lds
ret
inc
lahf
hlt
pusha
push
push
add
ljmp
mov
and
cli
leave
mov
adc
mov
std
test
loopne
xchg
cs
testb
test
push
add
xor
sbb
or
insl
in
push
mov
or
dec
mov
in
sti
aas
pop
adc
dec
adc
sub
pop
sbb
pop
iret
inc
out
or
fbstp
and
push
enter
add
in
jle
adc
fsubrs
aaa
jl
mov
dec
les
mov
inc
mov
lahf
and
inc
insb
aas
mov
inc
sbb
fstpl
call
cli
rclb
loopne
es
dec
push
pop
js
xor
test
ret
add
xor
push
in
mov
sub
rcrl
pop
jle
adc
xor
push
les
xchg
iret
shlb
sub
test
and
jbe
nop
ret
sub
insl
lods
push
mov
mov
ret
cmp
mov
add
lar
dec
loop
fcmovu
nop
inc
testl
aas
adc
jg
fisubs
push
ret
outsl
ss
insl
push
push
mov
push
cmpsl
call
inc
aas
lds
dec
pop
add
repnz
cmpsb
sub
or
adc
je
inc
imul
push
pop
xchg
xor
cmpb
add
ja
cmp
data16
cltd
adc
rcrl
fstpt
adc
add
push
ret
sbb
repz
push
sbb
pushf
lcall
sub
mov
hlt
mov
gs
mov
mov
mov
mov
xchg
sbb
inc
je
rcll
lds
add
and
rcrl
daa
int
into
sbb
subb
lret
and
and
cli
jmp
mov
push
pusha
aas
add
scas
inc
jnp
xchg
sbb
xchg
das
icebp
xchg
incl
mov
adc
fidivs
jnp
icebp
dec
or
and
mov
dec
sub
xchg
arpl
push
xor
mov
jge
adc
mov
mov
fcomi
mov
push
repnz
xchg
mov
daa
push
mov
mov
lock
into
push
push
and
addr16
pop
xlat
sub
jp
push
mov
add
mov
les
pushf
pushf
les
orl
and
mov
imul
mov
shrl
hlt
sti
cmpl
mov
push
ret
xchg
fisubs
dec
cld
fisubrl
jle
inc
inc
dec
outsb
mov
cmpsl
or
and
fstps
enter
cmp
sbb
sub
fildll
xor
fwait
jecxz
fistl
xchg
aas
test
rcrl
pop
dec
mov
stos
loop
sbb
insl
popf
mov
mov
movsl
sub
rcrb
dec
enter
loopne
or
dec
mov
and
lret
push
push
mov
jl
fwait
xor
mov
subb
call
repz
xchg
imul
nop
ret
lods
xchg
bound
push
xchg
jg
xlat
adc
mul
jo
in
dec
aad
pop
jg
data16
push
jae
push
pop
int3
les
call
jns
xor
push
sub
push
xor
scas
stos
iret
in
jns
push
incb
lock
fbld
repz
xlat
rcrl
push
pop
pop
push
rcrb
or
cs
pop
out
dec
ds
mov
movsl
jns
adc
ss
cmp
fists
ljmp
mov
sti
mov
fbld
jl
outsl
jo
push
adc
jnp
fwait
adc
jecxz
push
mov
addr16
lea
ret
pop
mov
mov
mov
mov
pop
pop
rolb
pop
sbb
lea
pop
hlt
jno
jmp
and
mov
inc
jns
stos
add
ds
nop
pop
pop
negl
inc
jp
cwtl
xchg
jo
popl
xor
adc
jmp
outsl
outsb
mov
and
xor
push
stc
lea
sarb
ret
popa
adc
jno
fcmovb
lds
xchg
adc
out
cmp
in
rcll
pop
repnz
sub
push
xor
repnz
sarb
and
mov
imul
nop
daa
push
imul
pop
or
stos
jle
leave
add
add
mov
pushf
xchg
sbb
pop
xchg
dec
outsl
xor
xlat
jle
sbb
adcl
cltd
sbbb
or
sub
and
push
cmp
out
lds
or
and
cmp
mov
add
xor
clc
mov
test
add
mov
cs
xchg
add
adc
pop
jb
push
popa
orl
and
popf
inc
test
pop
push
popf
stc
jl
push
out
out
dec
mov
mov
test
das
lods
cwtl
enter
std
aaa
push
das
ja
mov
push
test
cld
mov
lock
aas
movsl
inc
inc
mov
xor
sbb
or
int
cli
adc
xchg
jb
cld
dec
sub
jbe
pop
and
xchg
inc
sar
pop
jmp
jg
xor
mov
pop
cmpl
popa
sti
inc
aad
out
add
jo
icebp
sbb
js
popf
mov
adc
pop
inc
decb
rorl
cli
mov
push
in
daa
cmpsl
and
fnsave
or
mov
inc
sahf
xor
or
xor
lret
sub
and
dec
xchg
scas
iret
pop
fsubl
sub
mov
sbb
sbb
andb
adc
mov
adc
pop
outsl
and
mov
jbe
rolb
sahf
rcr
outsb
lock
pop
mov
mov
or
jno
fistps
into
mov
repnz
ret
pusha
gs
ja
add
pop
adc
in
inc
xchg
mov
orb
mov
mov
mov
fdivp
aam
add
out
xor
jl
leave
in
push
xor
orb
dec
push
out
std
loope
mov
xchg
cmp
jl
sarl
mov
ja
mov
mov
je
mov
hlt
hlt
clc
pushf
test
sub
sbb
fwait
aam
stos
insb
and
and
sti
jb
push
mov
jnp
xor
test
popf
in
repz
push
and
add
in
jo
ffree
int
subb
xor
test
adc
pop
enter
test
jle
ss
es
inc
in
and
loope
fwait
sbb
pushf
iret
mov
stc
pshufw
and
and
repnz
shlb
sti
or
cmp
jl
pushf
or
fstl
pop
xor
and
pop
shrb
mov
lea
cld
int
xchg
jge
movsl
imul
in
rcrb
mov
cmc
pushf
dec
fistl
mov
sbb
push
orb
xchg
fsubs
fbstp
push
mov
sar
das
pop
mov
xchg
cld
jae
shlb
inc
iret
add
cmpsb
loope
sahf
je
push
pop
aaa
pop
aam
loope
in
xchg
xor
jb
pop
loope
mov
jbe
rcll
add
std
fildll
xor
fisttpl
outsl
jg
cwtl
lods
stos
hlt
fsubl
xchg
pop
and
adc
mov
xchg
les
push
jne
iret
lret
int3
add
jg
xor
sbb
mov
mov
mov
and
frndint
scas
loopne
pusha
movsl
les
mov
jo
das
repnz
adc
dec
jno
adc
sub
sbb
xchg
xor
inc
jno
jo
or
divl
inc
add
jo
pop
lods
mov
xor
xchg
rclb
add
addr16
gs
mov
push
xlat
dec
sub
mov
ss
les
ds
fwait
mov
fdivr
xchg
push
and
vunpcklps
lods
pop
pop
add
movsl
jle
xor
in
fstl
sbb
add
or
insl
sbb
or
dec
push
fstp
jmp
rolb
dec
aad
cmp
jmp
dec
sti
mov
mov
insb
jp
pop
and
fs
fisubl
int
call
aaa
ret
add
inc
out
cmpsb
push
std
dec
adc
out
popa
repnz
jne
mov
xor
insl
add
inc
rcl
sbb
outsb
fsubl
ds
and
fnsave
lods
and
adc
shl
pop
and
or
lret
xchg
pop
sahf
mov
cwtl
and
ret
in
xor
cwtl
pop
or
push
xor
dec
cmp
outsl
push
push
mov
scas
xchg
das
fnstcw
loope
in
push
mov
mov
aam
or
or
fld
xchg
adc
scas
xchg
sbb
mov
scas
fiaddl
add
or
sbb
test
mov
call
repz
insl
test
push
cli
adcl
add
cmp
icebp
leave
mov
xchg
push
xor
xchg
and
mov
imull
rclb
test
add
lea
pop
push
test
and
hlt
js
xchg
push
jg
push
insb
out
int
inc
lret
jle
repz
mov
movsl
mov
aas
inc
or
inc
testb
ljmp
fcmovne
in
outsb
add
push
jg
shl
inc
add
fisubrs
xor
xor
test
xchg
nop
xor
cmp
push
testl
push
std
int3
inc
add
push
sbb
ds
or
stos
lret
mov
scas
xchg
movsb
je
or
lahf
inc
filds
mov
fisttpl
fisubl
sti
mov
repz
sub
test
sahf
jbe
dec
lcall
and
adc
cmpl
cmp
lret
fnstenv
popl
icebp
fsubrl
pop
adcb
repz
mov
xchg
or
lods
test
nop
js
mov
cmp
popa
out
jl
pmulhw
rclb
inc
sahf
push
stos
insl
inc
and
dec
jg
push
dec
daa
inc
test
mov
loopne
je
pop
outsb
jge
ljmp
lock
les
pusha
xchg
loopne
pop
std
es
mov
fidivrs
or
lea
push
xchg
sub
pop
ficomps
cmp
js
imul
cmp
dec
jne
pop
push
jbe
popa
mov
sahf
and
scas
jl
cmp
js
or
pop
aam
jae
inc
cltd
ljmp
and
or
dec
fimuls
and
mov
dec
jno
push
push
in
lods
jmp
sbb
aas
lds
jae
movsl
divl
jae
popa
cmpl
lahf
das
add
or
adc
cmp
out
cmp
sub
pushf
push
jp
pop
push
pop
inc
jns
push
into
out
jecxz
inc
mov
cmp
xchg
push
inc
xor
pop
push
mov
mov
xorb
cmp
add
test
pop
dec
mov
mov
nop
repnz
pop
pop
push
cmc
mov
cmp
cld
popa
push
or
dec
mov
lods
outsl
add
mov
xchg
call
lahf
jge
jb
mov
add
cli
loop
mov
mov
dec
loopne
push
in
enter
nop
pushf
or
int
pop
xchg
xchg
jecxz
mov
inc
mov
push
fiaddl
sbb
imul
add
xchg
xchg
imul
sbb
in
pop
cs
arpl
jae
sbbl
pop
xchg
pop
jno
dec
xlat
ja
rorb
push
xor
pop
aam
int3
mov
push
mov
insl
dec
imul
or
inc
xchg
notb
repnz
push
icebp
jg
cld
inc
notb
jns
std
shrb
dec
xchg
mov
jecxz
test
sub
ss
push
stos
test
push
lahf
sub
ficompl
pop
add
jge
fsubrl
sbb
xchg
jbe
int3
cli
add
mov
sbb
aaa
sub
jle
push
pushl
xor
mov
rcl
adc
loop
mov
ret
mov
lret
xlat
push
fdivrl
daa
xor
add
mov
pop
ret
in
int
mov
lods
rol
inc
subl
test
js
cmpsb
out
jmp
pusha
xchg
addr16
push
fcmovnb
sar
subps
pop
mov
test
test
xchg
lcall
jg
add
loopne
mov
aad
nop
neg
jge
lock
sbb
pop
fisubrl
cmpl
cmp
pop
imul
jge
mov
cmp
das
pop
add
mov
scas
pop
jmp
cmp
sbb
loopne
int
call
outsl
push
jb
lods
sub
mov
test
sti
es
mov
xchg
cmp
pop
push
pop
push
test
push
inc
mov
mov
jbe
inc
movsb
cmpsl
loop
adc
adc
mov
adc
adc
jge
shll
movsb
lcall
adc
push
pusha
pop
test
xor
xor
es
mov
fadd
pop
or
mov
inc
lods
or
es
mov
loopne
sub
lock
adc
addr16
jge
mov
jp
ret
sbb
inc
addr16
push
pop
mov
rcrb
jp
cmp
addr16
loopne
bnd
xchg
fwait
ja
je
jo
icebp
es
adc
sbb
ja
mov
pop
mov
ljmp
cwtl
xchg
and
outsb
shrb
pop
jns
xchg
and
jl
outsl
pop
xlat
and
icebp
cmp
inc
xchg
push
dec
daa
mov
push
inc
mov
scas
out
jnp
sar
jge,pt
jmp
mov
xchg
icebp
scas
ja
mov
je
mov
adc
jae
sub
cld
push
mov
scas
inc
fstpl
jle
aaa
xor
outsl
cmpsb
icebp
arpl
add
iret
mov
cmp
xchg
pusha
xchg
push
hlt
scas
sub
aad
dec
jo
popf
imul
mov
adc
mov
and
lds
push
fisubl
add
outsl
and
fidivs
jae
out
ret
xor
jb
mov
jl
loopne
roll
fadds
cli
scas
xlat
xorb
fstpl
popa
dec
addr16
nop
in
fisttpll
ljmp
stos
cld
add
cmp
iret
dec
mov
push
dec
cli
adc
mov
pop
push
roll
jno
call
mov
iret
or
push
pop
mov
addr16
add
ja
jnp
imul
nop
sub
pop
pop
rcl
and
cmp
cmp
in
daa
clc
fistpl
pop
or
aad
pop
and
jo
test
mov
loope
fcoml
pop
mov
hlt
pop
mov
mov
xlat
cmp
sbb
andb
push
call
call
pop
mov
xchg
cmc
mov
jno
mov
fstpt
pop
mov
jecxz
pop
xchg
insl
push
xchg
loop
mov
aam
les
loopne
or
lahf
pushl
adc
aam
pop
int
push
jae
mov
push
jge
jge
dec
mov
adc
iret
sub
lds
loope
les
lahf
call
js
js
pushf
jg
pop
mov
push
sub
daa
xchg
sarb
xlat
and
aaa
add
insl
sbb
adc
and
push
jecxz
jno
mov
rclb
ljmp
and
paddsb
call
inc
adc
shrb
das
xchg
movsl
icebp
adc
fbld
maxps
push
jno
divl
enter
into
imul
lds
sbb
ljmp
ss
int
or
imul
psubusw
mov
test
lock
rorl
je
xor
push
or
cmp
push
gs
sbbl
shlb
sub
mov
pop
add
pop
dec
jbe
js
adc
jnp
mov
pop
push
test
movsl
adc
adc
pop
push
jbe
outsl
loop
pop
daa
inc
jbe
outsb
aad
test
mov
cmp
push
sti
push
push
dec
inc
mov
fwait
shl
sbb
or
mov
mov
andb
lret
lret
gs
ljmp
aam
movb
lods
adc
insb
cmp
mov
xor
ret
push
je
mov
out
cmpb
into
sbb
and
ret
loop
mov
imul
add
jo
imul
xor
imul
fisubrl
push
mov
sub
jns
push
pop
sbb
add
fdiv
inc
shlb
mov
loopne
push
push
or
and
adc
push
sarb
mov
lret
enter
icebp
inc
stos
inc
sub
rcrl
mov
in
sub
inc
push
sub
loope
push
add
arpl
add
sub
out
sub
lods
lahf
mov
sub
and
loop
mov
popl
xor
icebp
mov
cld
push
movsb
lds
hlt
aas
ljmp
rcrb
lcall
mov
mov
mov
adc
dec
fistps
cmp
daa
dec
repnz
fldcw
jne
subl
adc
cmpl
dec
xlat
lds
and
lock
mov
xor
jnp
xchg
cmp
lret
ja
xchg
fidivrl
cwtl
push
insb
subb
std
divb
movl
cmp
imul
mov
push
push
jmp
pop
lea
ss
imul
sbb
jl
or
inc
call
addr16
adc
sbb
insb
iret
pop
xchg
adc
or
jbe
fcomi
mov
popf
jg
inc
lret
xor
inc
mov
lahf
mov
jp
push
loope
enter
xchg
addb
iret
arpl
jge
push
aad
adc
push
fwait
cli
into
cld
and
pop
mov
pop
cli
sub
mov
sub
and
paddd
nop
mov
cmc
lret
or
popa
jae
inc
pop
arpl
dec
lods
stc
sbb
imul
mov
xchg
pop
mov
loopne
into
xor
adc
jb
inc
scas
sub
cmpl
xor
mov
aam
adc
adc
mov
sub
into
lcall
popa
lock
sti
shl
in
add
sub
sti
jmp
fs
mov
cmp
imul
repnz
popa
sbb
dec
mov
inc
adc
in
xchg
cmp
push
xor
subb
or
nop
mov
aad
and
dec
fdiv
xor
js
mulb
aad
loopne
data16
incl
stos
clc
cmc
cmp
inc
repz
lahf
adc
mov
mov
or
sahf
andb
movsb
sub
sbb
icebp
xor
and
xlat
push
and
cmc
popa
jecxz
jmp
out
mov
inc
xchg
std
leave
sarb
lods
sub
cmc
movsl
xchg
ss
jl
mov
push
sbb
fstl
mov
js
lea
inc
pop
jmp
jmp
cmpsb
test
add
inc
sbb
mov
cmp
lock
cmpsl
pop
js
out
add
std
mov
dec
mov
xchg
lods
ret
inc
pop
stos
pop
or
push
sub
pop
lret
nop
mov
or
popa
ror
movsl
dec
rorb
xchg
dec
lcall
xor
xchg
adc
out
int
mov
or
aad
enter
mov
mov
clc
push
xchg
insb
sbb
test
mov
xchg
adc
std
enter
cmc
das
mov
bound
add
xchg
mov
clc
cs
sbb
mov
orb
push
push
dec
sub
ds
mov
sub
test
xchg
hlt
pop
and
daa
insb
sbb
xor
insb
sbb
pusha
inc
fwait
sub
fstl
mov
pop
test
mov
mov
or
xor
adc
imul
mov
loope
std
sbb
inc
insb
dec
mov
xchg
scas
lret
leave
scas
leave
sub
cli
and
or
clc
xchg
adc
addr16
aam
jb
sub
mov
out
xchg
cwtl
dec
frstor
mov
ljmp
ja
sbb
je
sarl
repnz
cli
cmpb
mov
das
cmp
stos
push
xor
lds
cmpsb
loop
lcall
xlat
lret
pushf
or
pop
jns
xchg
xor
mov
ret
and
addl
sarl
push
pop
or
daa
sahf
sub
lret
fdivl
sbb
pop
xlat
andl
xorb
mov
lret
out
lret
data16
pop
into
inc
sub
sbb
sti
mov
pushf
push
es
mov
ret
or
push
lods
imul
repz
fucom
inc
dec
scas
and
pop
mov
scas
stc
js
cmp
cli
mov
popa
iret
mov
cmp
fisubrs
lea
mov
adc
pop
rcr
pop
mov
cmpsb
fdivr
mov
imul
push
mov
sbb
xor
mov
push
mov
out
fstpl
mov
js
jbe
jns
inc
loop
xchg
sbb
enter
dec
mov
mov
add
push
jns
repz
pop
add
negl
adc
jmp
add
and
imul
pop
lea
movsb
dec
ror
xor
imull
cmp
les
lods
ss
ds
jno
pop
mov
iret
push
mov
shlb
ja
xor
in
outsb
mov
lods
mov
sbb
js
icebp
inc
rcll
inc
sbb
add
xchg
ja
lods
fs
out
shlb
movsb
sbb
daa
push
into
cmc
cmp
fs
sbb
sub
push
and
fistpll
sub
ret
jbe
shll
pop
out
push
pop
sub
dec
inc
mov
push
js
mov
sbb
mov
sar
rorb
je
push
adc
cmpb
es
mov
aam
daa
out
xor
pop
std
bnd
or
in
cmpsl
push
pop
or
and
sbb
or
aam
stos
arpl
in
iret
mull
pop
fisttpll
fisubl
rcr
jo
nop
pop
test
cmp
adcb
je
in
adc
das
scas
lods
inc
dec
call
cmp
std
cmp
xchg
in
ja
fstpt
das
test
fwait
enter
idivl
cmpsl
adc
mov
outsl
std
push
xchg
xchg
fsubs
inc
icebp
ds
or
jecxz
out
mov
sbb
fdivrs
bound
imul
int
dec
daa
fwait
test
jo
fildll
dec
sbbb
pop
xor
lcall
nop
mov
out
shl
and
pusha
ret
into
rcrb
add
loope
arpl
arpl
stos
mov
inc
out
scas
pushf
lods
pop
and
mov
sahf
mov
mov
test
pop
mov
pop
insb
mov
or
xor
ljmp
pop
xchg
outsb
lea
adc
sahf
sbb
bound
pop
push
mov
mov
cwtl
addl
test
rcr
mov
int3
mov
repz
inc
fmull
push
xchg
mov
lods
push
mov
add
psubq
in
divb
sbb
cmp
les
cmp
shll
dec
sub
ljmp
mov
adc
shrb
push
adc
inc
sti
cmpsl
repz
in
xor
mov
adc
cmp
fistps
repnz
in
rcr
inc
lret
or
mov
insb
xor
cmp
scas
jne
fnstenv
or
or
or
cs
cmp
fbld
in
test
mov
into
cwtl
fidivrs
add
push
cmp
pop
push
adc
mov
cmp
dec
loopne
xor
js
mov
testl
imul
sbb
nop
inc
in
inc
in
add
stos
xchg
lret
mov
arpl
inc
push
aas
xor
int3
outsl
pop
xor
push
mov
pop
xor
aad
mov
bound
inc
xchg
cwtl
mov
in
ud2
xor
or
bound
outsl
inc
lret
icebp
aas
fimull
pop
lahf
jecxz
outsb
or
and
shr
mov
push
fs
push
out
out
std
into
or
sub
int3
push
fldl
mov
stc
lea
adc
mov
mov
mov
mov
and
sub
inc
cmp
sbb
adc
popf
test
sahf
cmp
mov
adc
mov
in
mov
into
push
gs
sub
stc
or
jmp
add
sti
inc
std
movsl
push
call
pop
aam
lret
test
jns
xlat
adc
insb
adc
repz
xchg
or
repz
mov
inc
mov
push
cltd
fldl
add
fwait
mov
int3
lret
fidivrl
or
xchg
push
xor
sti
cmc
popf
data16
lcall
sar
rcrl
cmp
xor
adc
adc
sahf
xor
jmp
adcb
mov
mov
dec
lock
push
pmaxsw
xchg
fstl
jne
scas
mov
dec
nop
cld
mov
ds
roll
sub
jae
enter
out
sub
mov
push
xchg
stc
popa
mov
int3
test
repz
or
dec
daa
lahf
rcll
hlt
pusha
gs
dec
xor
jle
test
inc
addr16
jno
orb
in
out
cld
adc
gs
cmc
iret
push
jo
cmp
je
icebp
xchg
jo
lret
add
inc
out
enter
jne
imul
stos
jl
dec
clc
pop
inc
iret
pop
pushf
mov
dec
dec
xchg
mov
add
nop
fstps
cmp
fs
aaa
cmp
stos
stos
ds
pop
push
inc
add
push
filds
hlt
sbbl
idivb
xor
out
faddl
inc
inc
sub
jnp
outsl
rorl
mov
mov
inc
ret
fs
xchg
cltd
lock
push
xchg
shrb
inc
jnp
ja
pop
in
mov
cli
out
mov
clc
jg
xor
dec
and
stos
sti
mov
cmp
sbb
clc
and
stc
gs
adc
and
xchg
pushf
jae
pop
jmp
inc
leave
lahf
xlat
pop
cmpb
push
pop
out
and
push
pop
inc
xor
cmc
out
test
add
roll
jp
mov
sub
ss
adc
pop
pop
push
mov
jg
sahf
es
lcall
push
arpl
sbb
mov
jbe
insb
pushf
dec
and
adc
mov
push
mov
fcomp
stos
inc
mov
cmp
fidivrl
nop
inc
mov
ret
mov
cmp
stos
add
aaa
bound
aam
push
test
inc
push
cmp
jecxz
or
iret
add
cmp
jp
cmpsb
and
insb
cmp
shrl
mov
rcll
rorb
data16
test
inc
dec
ret
cmp
push
repz
jecxz
imul
add
mov
ja
push
dec
xchg
cwtl
push
dec
push
and
aam
aas
push
dec
pop
call
aam
xor
dec
xchg
sub
push
movsw
inc
adc
sub
mov
jp
jmp
xchg
or
mov
dec
xor
sbb
fwait
repnz
clc
xor
incb
ljmp
inc
xor
fcompl
iret
adc
push
cmp
dec
dec
add
mov
or
mov
incb
or
inc
leave
pop
xlat
cmpsl
aas
lods
popf
jle
sub
test
jp
mov
inc
daa
das
mov
mov
fsubs
adc
shlb
adc
fstl
jne
xlat
cmp
mov
js
add
decb
call
int
jbe
dec
or
and
fiadds
outsl
and
mov
cmc
popf
mov
jno
mov
test
ljmp
es
imul
cmp
jns
dec
loop
test
inc
adc
mov
pop
in
repz
jno
push
fnstcw
lahf
pop
cmp
mov
mov
xchg
mov
xchg
xor
enter
push
es
push
lock
mov
inc
inc
sub
xchg
xchg
orb
mov
and
jge
outsl
lahf
mov
into
roll
mov
subb
xchg
and
adc
push
push
into
sub
cmp
adc
rcr
jns
xchg
jmp
test
jle
sbb
adc
push
or
loopne
xchg
repnz
or
test
adc
mul
cmp
push
aaa
dec
loop
test
add
push
dec
ja
jle
pop
iret
push
jp
mov
cmp
cmp
call
or
xchg
push
dec
dec
test
shll
fsub
sub
popf
sub
dec
mov
nop
xchg
dec
call
out
jno
dec
lea
jg
outsb
cmpsb
pop
rol
mov
cs
cmpsl
fdivrs
jns
and
adc
sbb
xchg
cmpsb
push
cmp
mov
cs
xor
mov
and
xchg
test
pop
stos
loop
ds
sub
subb
sbb
cltd
and
es
push
fcoms
and
mov
pop
movsb
dec
cwtl
test
add
pusha
jnp
imul
pop
sub
mov
inc
sub
scas
pop
stos
idivb
daa
push
adc
jge
pop
rcll
ret
adc
movsb
or
enter
icebp
stos
int3
and
sub
jmp
fucom
add
add
shl
push
lds
push
iret
jg
push
sub
push
lock
and
adc
fnstsw
jnp
sti
mov
lods
or
or
popa
insl
mov
pushf
push
mov
dec
xor
sarb
inc
fistpll
and
rclb
inc
es
into
leave
mov
pop
mov
fwait
fwait
lcall
and
ffree
mov
push
or
mov
pop
xchg
mov
mov
inc
push
pop
lcall
in
aad
ret
dec
mov
pusha
mov
and
scas
vpor
incb
pop
push
aaa
or
icebp
dec
fists
stos
and
stos
sbb
xchg
add
ss
mov
mov
lahf
daa
add
leave
test
inc
cmpsb
aaa
pop
inc
xchg
cwtl
xchg
and
push
push
stos
mov
adc
fcmovnbe
jmp
dec
fnstsw
inc
mov
sar
hlt
push
pop
in
cld
cmpsl
nop
in
out
fnstsw
xchg
popf
fwait
pusha
jae
jns
jecxz
xchg
xchg
filds
jnp
push
mov
push
imul
or
mov
orb
leave
dec
in
test
xchg
jno
inc
xchg
mov
pop
sub
xchg
mov
ja
rolb
int
ja
add
hlt
in
test
popf
cmp
dec
sbb
adc
adc
cwtl
ret
pop
shlb
iret
jp
inc
mov
push
jecxz
out
lods
outsb
add
mov
data16
scas
mov
push
sub
in
add
fsubrs
imul
adc
xlat
sbb
lret
push
sub
lock
xchg
imul
insl
cli
loop
jbe
mov
mov
add
call
andl
mov
mov
and
push
imul
cmp
out
and
push
in
pop
or
mov
fcomps
in
stos
lds
loop
or
sbb
inc
mov
and
lea
pop
aam
push
cmpl
js
mov
jle
ds
push
jmp
sub
stos
popf
push
sbb
adc
inc
shll
mov
jns
inc
nop
daa
cmc
outsl
cmp
fucomi
orl
inc
add
cs
adc
adc
outsl
jns
and
or
cmp
popa
sbb
cmpb
shll
cmpsb
jle
xor
movsb
stos
push
roll
inc
ret
loop
notl
and
xchg
pop
ja
lods
fs
into
or
outsl
mov
in
in
sbb
xor
mov
mov
mov
and
movsl
in
jns
jo
addr16
sub
dec
dec
pop
xor
inc
in
pop
mov
sbb
mov
aaa
into
aaa
movsb
jno
mov
push
sbb
jge
adc
mov
dec
mov
xabort
mov
mov
in
inc
jno
mov
lds
or
jns
sub
jecxz
mov
push
leavew
cmp
testl
mov
jge
js
jno
daa
loope
jnp
sub
cwtl
lcall
test
jmp
nop
cmp
mov
inc
mov
js
es
dec
out
sbb
xor
jae
fadds
or
mov
xchg
or
ss
rcll
lcall
jne
cwtl
add
out
and
jno
insl
cmp
cmp
mov
scas
sbb
jmp
stos
adc
lret
into
push
fmuls
fcoms
adc
jmp
add
xlat
cld
test
mov
bound
mov
inc
insb
and
testl
test
xor
dec
rorb
movb
and
xchg
and
outsl
xor
outsl
lcall
mov
mov
sbb
fisubrl
jl
inc
popf
push
mov
sbb
mov
sbb
add
insl
pushf
cwtl
xor
sbb
and
pushl
and
and
test
sub
loop
pushf
mov
das
mov
adcb
fcomi
mov
icebp
cltd
mov
push
jbe
daa
adc
iret
orb
pop
add
ret
and
cmpsl
into
aad
lods
push
fisttps
mov
pop
inc
mov
pop
iret
sub
and
pop
jmp
sti
lods
sbb
sub
adc
jmp
xlat
jp
add
insl
mov
or
mov
pop
xchg
add
push
lea
mov
lret
push
pushf
in
inc
push
dec
pop
sahf
pop
adc
loop
cltd
mov
add
jp
adc
mov
es
push
lods
sahf
xchg
out
jbe
pushf
sbb
sub
inc
xchg
je
mov
sub
test
cmpsl
sbb
lods
cmp
sub
aaa
cmp
push
roll
rcrb
sub
repz
insb
das
loop
jmp
stos
sbb
push
test
lret
pop
mov
xchg
inc
int
sbb
rcll
decl
xlat
iret
cli
cmpsl
aam
mov
mov
movsl
push
dec
jo
or
xchg
cmp
push
cli
sbb
and
xor
xor
mov
add
movsl
push
and
mov
pop
push
adc
inc
fiaddl
mov
dec
repz
xchg
pop
jno
inc
rorl
pop
push
repnz
fnstsw
push
insl
xchg
and
dec
shll
jle
outsb
ds
imul
xorb
aad
mov
xorl
in
sub
cmpsb
mov
inc
testl
xchg
mov
dec
pop
add
aas
fs
jg
lods
cmp
rolb
testl
mov
loope
jmp
xor
xchg
xorl
pop
lret
jecxz
test
jmp
add
mov
adc
movb
shrb
mov
inc
test
ds
dec
cmp
mov
dec
pop
adc
xchg
jbe
clc
adc
addr16
dec
pushf
or
test
and
scas
mov
scas
fcmovnbe
ja
inc
ljmp
mov
push
adc
pop
into
sbb
mov
jnp
repnz
fisubs
movsb
repnz
inc
inc
fs
sbb
mov
xchg
jb
lcall
push
pop
push
add
sbb
fistl
pop
pushf
pop
push
cmc
add
sbb
dec
push
into
cmp
into
inc
jns
movsb
xor
in
les
adc
xor
dec
push
fwait
push
aad
xchg
dec
inc
dec
jecxz
frstor
aaa
aad
push
inc
jmp
test
cmp
dec
aaa
or
into
cltd
nop
sub
shrb
push
or
lock
scas
mov
scas
int3
cmpsl
dec
out
inc
clc
xlat
and
pop
jle
out
std
mov
xchg
fidivs
inc
xor
mov
movsl
mov
add
jne
mov
stos
or
ret
cmpsl
popf
iret
xchg
xchg
lret
test
and
insl
jae
mov
aaa
insl
cli
xchg
pop
add
or
or
pusha
push
jnp
xchg
or
mov
fdivs
cmp
divl
out
pop
jnp
out
adc
fs
bnd
or
dec
test
sbb
lahf
nop
and
scas
inc
movb
movsl
movsl
mov
add
or
push
mov
mov
insb
cmpsl
and
lea
jnp
test
pop
stos
adc
mov
popf
mov
enter
int3
cmp
mov
jae
leave
jns
arpl
mov
out
stc
mov
or
push
cmp
out
in
les
mov
test
lret
jns
cmp
scas
push
mov
repnz
xchg
mov
imul
addr16
xchg
in
mov
xlat
loop
movsb
adc
jle
dec
int3
mov
sbb
sub
pop
testb
fwait
cs
pop
inc
mov
lock
xorl
mov
add
call
scas
inc
or
outsb
imul
scas
loop
popa
push
dec
in
insl
or
jge
pop
int3
mov
mov
jl
pop
mov
scas
add
mov
jp
dec
dec
ret
sahf
push
jo
add
dec
mov
cltd
rcrb
add
push
add
jb
push
sbb
mov
mov
sbb
dec
add
or
push
out
ret
mov
test
adc
xchg
cmc
lods
or
dec
push
stc
and
xchg
xor
test
ret
pop
xor
add
fmuls
lahf
xlat
push
outsl
arpl
js
mov
js
icebp
xchg
dec
xor
clc
push
imul
cmp
mov
pop
and
shlb
push
ss
dec
cmp
push
and
xchg
push
enter
iret
out
jae
xchg
xchg
mov
loop
add
mov
cmpsl
fistps
xchg
mov
mov
add
sbb
es
out
mov
in
leave
mov
lock
into
or
popa
xchg
adc
sbb
out
mov
add
adc
xor
push
dec
sbb
mov
nop
stos
insb
mov
inc
dec
inc
mov
enter
outsb
shrl
adc
and
inc
leave
mov
cli
pop
and
pop
add
sub
jb
mov
push
js
cwtl
comiss
cmp
and
shrd
or
pop
cld
dec
dec
xlat
pop
shrb
push
mov
loop
and
leave
push
int3
stc
filds
dec
cmp
dec
sub
ret
add
shrl
mov
xchg
mov
and
pop
cltd
xor
jae
and
jp
hlt
aaa
leave
mov
cltd
lds
mov
or
test
or
pop
lret
test
int3
cmp
sub
mov
mov
add
push
das
fmuls
jnp
ja
bound
arpl
cs
jg
mov
sbb
mov
cltd
or
sti
cmp
lahf
jae
jnp
fldt
lcall
movsl
mulb
repnz
cmp
int
pop
adc
pop
xor
aad
pop
out
mov
cmp
mov
pop
sbb
jg
cmpsl
push
mov
call
scas
aam
sbb
sbb
xor
ret
scas
nop
mov
xchg
inc
inc
add
mov
sub
fisubrs
sbb
daa
add
xor
pop
jp
xor
adc
add
pop
cmp
mov
out
orl
cmp
xchg
mov
pop
jg
lret
sub
sbb
cmp
repnz
mov
and
sbb
pop
stos
xor
out
mov
inc
adc
out
mov
push
pop
jae
fsts
cmp
mov
xchg
dec
sahf
pusha
mov
inc
movsl
xchg
imul
sbb
imul
sbb
ja
push
fcoms
xor
imulb
sbb
imul
xchg
into
jae
push
pop
dec
xchg
das
fldl
outsl
mov
lods
lea
xchg
jmp
loopne
mov
and
mov
push
dec
add
mov
clc
je
push
and
mov
movsb
cwtl
je
cwtl
mov
call
pop
push
mov
mov
shll
mov
lods
shrl
mov
xchg
ja
outsl
jnp
inc
jo
mov
xor
sub
cmpsl
cmp
pushl
sbb
mov
fcomps
xchg
loope
sarl
imulb
jecxz
xor
cli
pop
pop
pop
inc
sarb
std
mov
or
mov
sahf
test
adc
jo
jb
andb
pop
stos
psllw
mov
xchg
sbb
imul
cld
mov
ja
xchg
jp
or
je
fisubrl
jne
push
insl
stc
xor
leave
ja
mov
fcmovb
test
mov
test
shlb
or
inc
jb
dec
lcall
outsb
sub
cmp
mov
aas
and
mov
mov
mov
imul
dec
imul
cli
testl
lret
mov
push
jnp,pt
push
inc
mov
pop
sub
mov
jnp
lds
add
add
call
fstpt
cltd
jae
inc
je
mov
ss
ja
dec
pusha
jmp
cmpsl
dec
xor
ljmp
push
mov
loopne
xor
das
adc
cs
jp
mov
out
mov
pop
push
lret
mov
mov
aas
mov
shr
pusha
daa
inc
inc
sub
push
sbb
mov
sbb
jo
ss
pushf
push
cmp
add
test
inc
xlat
jb
push
mov
clc
xchg
mov
js
mov
scas
pop
rcll
push
push
iret
stos
xchg
or
sarb
pop
mov
pop
movsl
jns
fisubrl
jl
adc
push
out
aad
cs
add
lods
mov
hlt
mov
lods
push
push
mov
test
cmpsb
jmp
cmp
in
fs
out
xchg
test
push
mov
pop
pop
stos
stos
pop
sub
xchg
dec
ficoms
dec
push
mov
and
test
out
mov
jg
xlat
addr16
cs
pop
mov
inc
rorb
jo
jo
or
pusha
inc
mov
add
ljmp
movsl
or
xchg
lods
repz
ds
or
out
sub
fcompl
sbb
sti
ljmp
jecxz
outsl
xor
xchg
test
call
mov
jno
aas
push
lcall
sbb
dec
jg
add
es
dec
aas
mov
lcall
push
addr16
sub
and
outsb
mov
aaa
cmp
es
cmc
adc
bound
popa
or
or
jg
sbb
dec
les
outsl
dec
add
test
pop
rcrl
aad
iret
sub
icebp
repnz
fcmovb
sbb
push
sub
sub
inc
fidivrl
dec
ljmp
pop
inc
repnz
ja
jb
jno
in
aam
pop
xorb
leave
add
pop
jo
add
imul
loope
scas
jne
xchg
in
xor
dec
inc
inc
sub
not
dec
cmp
jmp
outsl
push
adc
pop
rcrb
lock
hlt
cwtl
xchg
repz
dec
inc
inc
and
mov
or
or
mov
out
insb
test
pop
push
shlb
xchg
jge
push
stos
or
dec
es
int
and
adc
je
subb
outsl
cmp
push
loope
into
in
pop
sbb
sbb
pop
mov
xchg
inc
adc
push
cltd
movsl
and
inc
in
mov
inc
pop
add
lret
cs
ftst
js
pop
jb
mov
lahf
push
shr
mov
out
jge
inc
aad
mov
mov
cli
inc
movsl
push
sahf
push
inc
cmp
or
rolb
or
das
xchg
in
cltd
outsb
push
mov
cld
inc
pop
xor
push
stos
in
mov
insb
xchg
imul
scas
adc
or
daa
mov
fwait
outsb
ds
icebp
shll
add
mov
adc
je
test
push
push
outsl
mov
rcrb
jbe
cmp
int
mov
mov
mov
out
sub
lods
loope
cmp
cmp
add
pop
shrb
out
and
cmp
push
dec
mov
xor
add
es
loope
mov
pop
repnz
out
addb
fiadds
int
push
mov
in
jbe
test
pop
out
xlat
cmpsb
mov
dec
rcll
repz
pop
mov
push
push
pop
dec
idiv
push
add
pop
cmp
cld
filds
sbb
mov
daa
insl
pop
jge
xchg
adc
out
lods
fadds
sub
cwtl
push
mov
cmc
inc
daa
addl
cmp
pop
xchg
fldt
mov
insb
out
jbe
pop
test
pop
and
mov
ss
fwait
inc
cwtl
stos
cmp
jl
inc
addr16
sbb
jmp
in
insb
xor
mov
inc
mov
mov
dec
dec
movsl
mov
mov
scas
mov
fs
aam
sbb
call
movsl
dec
loope
pop
dec
hlt
inc
pop
cld
test
mov
inc
mov
jns
mov
testl
out
push
fucomp
test
lcall
mov
or
jae
pop
xor
lds
imul
test
aam
sbb
andb
cmp
mov
hlt
imul
pushf
jp
jae
push
or
mov
sub
adc
mov
out
and
lcall
subb
xchg
in
mov
mov
mov
rcll
call
mov
jmp
pop
pop
inc
mov
fdivl
out
xor
mov
sahf
xor
cli
icebp
fs
mov
je
cmp
imul
pushw
jle
pop
popf
mov
or
sub
fbld
arpl
imul
and
out
lds
sub
es
xchg
lods
movsl
jmp
dec
loop
lock
cmpsb
add
call
or
int
dec
add
inc
push
and
xchg
cmp
xor
fwait
xchg
movsb
insb
push
repz
fwait
add
and
into
shlb
insb
mov
lret
das
push
outsl
movsb
or
pusha
int3
jb
fwait
std
daa
and
push
mov
clc
repnz
xchg
inc
addr16
mov
xor
icebp
popa
mov
pop
mov
xchg
sub
cmp
insb
inc
lock
fstpt
mov
jae
aas
or
movsb
imul
mov
orb
data16
dec
xchg
jge
or
sbb
inc
lcall
test
pushf
or
std
rep
mov
js
cmp
iret
jp,pn
insl
dec
and
loopne
xchg
push
dec
xchg
mov
ficoms
icebp
mov
or
divl
or
sahf
mov
aam
add
insl
inc
mov
jns
cli
push
aam
aam
loop
enter
adc
ret
popa
lock
aaa
or
push
and
cmpsb
jnp
cs
push
xor
jmp
mov
adc
mov
xlat
mov
cs
ljmp
add
sub
fnstsw
push
xchg
je
je
ja
imul
push
xchg
rcr
and
xchg
cmp
vmulsd
push
mov
xchg
pop
aam
cltd
mov
jmp
sbb
push
pop
fstps
jns
mov
gs
cld
push
push
pop
lret
aaa
jo
rorb
push
and
dec
mov
hlt
adc
test
mov
addr16
push
pop
out
cmpsb
addl
shll
lea
in
mov
test
dec
or
mov
xchg
in
xor
sbb
adc
mov
mov
add
movsl
movsl
sti
les
pop
mov
js
rolb
shrb
scas
or
xor
test
loope
jae
cmp
je
dec
dec
outsb
lods
test
out
adc
add
mov
mov
sbb
stc
fs
jmp
fsubp
rcl
adc
shlb
push
and
xchg
sub
aas
out
cmc
rolb
sti
mov
ret
push
hlt
cmp
lock
cmpsl
leave
imul
dec
cs
jo
int
dec
jp
cmp
pop
fsubrs
test
sub
mov
push
xchg
jmp
addr16
enter
xor
cmpl
lret
test
aas
push
lock
in
lahf
sbbl
mov
push
push
int
jbe
cli
mov
shll
xor
xchg
nop
std
dec
dec
mov
loope
mov
push
push
enter
push
fisttpll
aam
js
loope
stos
push
cmp
mov
fs
xor
cmpsb
pop
iret
jne
aam
mov
pop
mov
adc
jno
gs
loope
adc
cmp
pop
mov
xor
jae
data16
aaa
jle
lret
test
iret
xchg
lock
sti
es
xor
and
out
push
pop
mov
std
jl
es
add
sahf
adc
mov
jmp
sbb
out
repz
xchg
seto
dec
outsl
enter
js
push
insl
cmp
notb
lods
popa
cmp
inc
pop
rolb
mov
xor
punpcklbw
or
and
sbb
pop
popa
xor
xchg
xchg
scas
rorl
pop
sbb
outsb
fmull
mov
adc
push
adc
pop
jbe
pop
mov
adc
into
gs
es
outsb
pop
ss
push
insb
cmp
dec
rol
clc
mov
cld
pop
rolb
mov
in
mov
loopne
cltd
stc
call
insl
jg
xchg
add
push
fyl2xp1
stos
std
cmp
aam
in
adc
loopne
push
out
pop
or
aam
out
sti
sbb
mov
adc
xchg
rcrb
sub
inc
adc
jmp
mov
and
cmp
fisttps
test
mov
add
or
adc
mov
aam
pop
sbb
lret
shll
fsub
ret
int
jle
xorb
push
mov
cmp
clc
in
pushf
mov
addb
cmpb
out
inc
inc
add
es
psubw
mov
cmp
popa
out
shlb
and
aam
pop
movsb
in
iret
jo
in
pop
mov
sub
insl
shr
iret
testb
addr16
in
or
push
movsb
aad
or
mov
jge
aaa
mov
mov
jmp
mov
xchg
or
in
insl
jns
adcb
add
inc
notl
js
xor
in
js
inc
scas
movl
leave
mov
xchg
pushl
addl
fdivrs
loope
mov
arpl
xorl
xchg
sub
mov
inc
pop
cmpl
mov
or
mov
js
mov
adcb
arpl
scas
repnz
sti
dec
add
fbstp
fdivr
xchg
mov
push
pop
xchg
mov
mov
aas
inc
pop
cmp
lahf
sbb
mov
ss
movsb
cs
fcmovnb
fcoml
fstpl
mov
lea
push
jl
lcall
scas
add
test
lcall
adcl
add
xchg
mov
repz
mov
aam
pop
mov
push
loop
pop
jl
sub
js
out
mov
fisttpll
pop
enter
faddl
push
cmc
mov
sub
sub
scas
movsb
jno
mov
add
mov
sub
nop
push
adc
std
or
shr
ljmp
in
mov
mov
xor
mov
xchg
xor
mov
push
call
mov
cwtl
ret
and
mov
lret
pop
push
cmp
aaa
cmc
mov
out
cmp
and
out
aaa
lret
mov
imul
sbb
push
gs
cwtl
and
mov
xchg
push
sbb
js
sahf
xor
add
pusha
lret
fbld
out
cmp
mov
adc
mov
sub
movsl
xchg
aas
mov
mov
or
imull
mov
arpl
hlt
sub
ja
imul
xchg
push
jl
sbb
cld
inc
or
sbb
dec
divb
pop
pop
fs
mov
lock
aas
notl
cmpb
add
and
xchg
push
aad
fld
fisttpl
movsb
cmpsb
fisubrl
fsub
aaa
jnp
jo
dec
sub
fs
into
aaa
test
mov
shrl
js
jno
rolb
lods
pop
out
fs
ja
gs
sub
pop
iret
jle
lods
or
lods
mov
pop
rcrb
dec
adc
in
add
mov
mov
dec
and
pop
aas
das
popa
xor
pop
aam
loop
insb
test
mov
xchg
sahf
bound
adc
lods
or
mov
pop
fldt
stos
test
dec
rcl
mov
pop
and
pop
xchg
rcll
int
ss
nop
ret
lds
cmp
push
cli
pop
ss
movsb
cmp
js
dec
xor
sbb
lds
in
idivb
inc
gs
xor
ret
jb
cltd
xor
test
mov
dec
fcmovne
xchg
cmpsl
in
xchg
add
movsl
adc
push
xchg
mov
std
cmpsl
sub
addl
mov
add
cmpsl
push
outsl
add
cltd
dec
aas
in
mov
fisttpll
das
mov
jmp
dec
sbb
mov
fildll
jecxz
in
pop
fcmovu
mov
shll
xor
subb
cmp
jmp
mov
out
jnp
adc
adc
dec
je
sub
in
or
out
push
leave
stc
lidtl
lcall
jbe
stc
or
xchg
push
jb
icebp
loopne
or
adc
jno
jns
sbb
ret
push
xchg
xlat
bound
pop
cmp
and
and
cwtl
inc
lods
adc
imul
inc
loopne
xchg
xchg
stos
cs
insb
push
adc
pop
mov
mov
dec
icebp
push
lea
xchg
inc
fnstcw
pop
jb
cld
sbb
loope
leave
xchg
pushf
dec
xchg
test
mov
call
dec
aas
dec
push
or
sbb
inc
sbb
pop
xor
scas
mov
dec
cld
repz
dec
sub
sub
mov
mov
pop
jbe
stc
mov
ljmp
sarb
mov
fs
push
sarl
ret
sub
std
mov
rcll
pop
cmp
test
mov
test
jns
xor
out
scas
mov
mov
and
pusha
into
icebp
addr16
mov
movsl
xor
test
push
cmp
cs
in
into
outsb
dec
jp
lods
or
pop
jnp
loopne
ror
out
dec
add
inc
push
test
sub
repnz
pop
push
das
dec
arpl
in
test
test
repnz
mov
pop
movsl
test
pop
hlt
xchg
dec
xchg
jbe
popf
jecxz
inc
mov
dec
add
add
imul
loope
stc
scas
loopne
adc
mov
into
push
xor
cli
add
enter
orl
cmp
mov
ss
jnp
push
sub
add
mov
ljmp
adc
inc
cmp
gs
leave
push
dec
and
je
sbb
or
lods
sub
arpl
push
aaa
gs
mov
xchg
push
stos
jp
inc
cwtd
jns
loop
insl
adc
jl
push
jl
roll
stos
lods
mov
pop
hlt
shll
mov
push
mov
cmpsb
push
ret
mov
sbb
mov
jae
mov
mov
pop
sldt
and
xor
or
push
outsb
jle
jmp
insl
mov
push
test
xchg
dec
in
je
rclb
adc
push
jecxz
or
fs
mov
mov
push
fwait
sub
subl
inc
insl
cld
sub
mov
mov
inc
call
add
aas
addr16
test
ja
shll
lret
hlt
mov
fnstcw
jnp
pusha
iret
aad
lds
fldt
sub
mov
ret
mov
dec
clc
pop
bndldx
testl
stc
movsl
popa
and
jne
or
jmp
inc
stos
testb
repnz
inc
xchg
add
andb
add
pop
in
dec
lret
xor
pop
bnd
pause
out
mov
hlt
pop
das
aam
dec
clc
jl
cmpsl
sbb
and
fwait
inc
imul
pop
or
add
aad
and
movsb
or
jp
scas
lret
xor
pop
ljmp
jo
outsl
sahf
and
les
jl
ja
xchg
popf
mov
test
fiaddl
jbe
stos
test
add
arpl
mov
int3
imul
sbb
adc
bound
and
aas
inc
cmp
cmp
jmp
scas
dec
jecxz
cmp
dec
sarb
cli
inc
dec
jnp
xor
test
ds
stc
mov
inc
test
and
cwtl
stos
pop
mov
dec
inc
mov
push
out
add
lea
mov
popf
js
inc
push
mov
scas
adc
or
out
push
cld
mov
das
scas
xchg
sbb
sti
mov
stos
fildll
call
jecxz
testl
mov
inc
sub
fimuls
dec
in
mov
push
and
loope
cmp
shll
and
js
je
and
push
fwait
push
and
jmp
sbb
stc
or
or
sbb
mov
mov
mov
mov
xor
push
push
clc
xchg
aas
fst
ja
sub
scas
and
int3
gs
into
pop
add
out
mov
notl
aaa
xchg
js
hlt
push
sub
in
test
and
inc
arpl
stos
xor
mov
push
jns
popa
idivl
mov
or
cmpsl
cltd
inc
or
inc
push
adc
in
mov
test
and
jne
int3
inc
clc
hlt
add
movsl
jbe
out
push
stc
and
add
push
jl
popaw
movsl
xchg
and
add
xchg
sar
mov
cmp
or
add
xchg
aad
cmp
cmp
mov
fs
mov
xchg
into
addl
jge
sahf
icebp
loop
lock
fs
push
cmpsl
lret
test
or
add
jl
push
xchg
fimull
lea
push
push
mov
cmpsl
sahf
idivl
add
jo
push
sbb
nop
xlat
mov
or
repz
addl
dec
cmc
into
dec
int
mov
add
jbe
cmp
jb
mov
mov
sbb
repz
and
and
mov
and
sbb
es
std
xor
mov
sbb
subl
lock
dec
ja
into
pop
and
or
sbb
adc
jecxz
lahf
in
xor
xor
add
addb
ljmp
jbe
fs
arpl
test
flds
test
inc
cmpsl
movsb
mov
dec
rorl
push
cmp
xor
jge
sub
mov
leave
cld
cmp
mov
push
mov
push
lret
pushf
push
adc
adc
enter
dec
test
cmp
fcoms
lret
sub
pop
pusha
ljmp
negl
push
ret
adc
ja
test
xchg
dec
jg
add
repnz
rolb
call
pushf
mov
dec
icebp
push
stos
mov
dec
inc
ficomps
inc
and
jno
add
and
lock
popf
mov
xor
ret
inc
gs
or
push
fistl
pop
inc
pop
xor
jmp
add
sub
xor
lret
aas
push
cld
in
ret
sti
add
jbe
inc
or
mov
scas
xchg
movsl
sbb
lcall
and
nop
daa
cs
cmc
inc
pop
in
jge
jne
jno
mov
pop
pop
push
sbb
lret
adc
and
and
sub
leave
loope
inc
pop
xor
arpl
or
pop
mov
in
xor
push
pcmpeqd
mov
int
decl
faddl
pop
adc
push
mov
adc
aam
or
enter
adc
test
lea
or
in
sub
cmp
pushf
mov
mov
or
xchg
ja
and
add
inc
movsb
stos
popa
cltd
in
stc
jno
jg
cwtl
xchg
insl
test
popf
hlt
jmp
jne
jecxz
inc
fldt
cmp
add
cmp
fdivrs
add
aad
fiadds
arpl
or
test
inc
or
cmp
adc
add
xor
mov
push
lock
lcall
divb
inc
sbb
mov
outsl
pop
out
dec
cmpsb
mov
inc
dec
leave
adc
ja
mov
mov
dec
add
dec
xchg
test
xchg
test
outsl
mov
fiadds
push
insl
outsl
in
icebp
xchg
mov
shlb
das
sbb
dec
repnz
loopne
and
orl
nopl
jns
jecxz
clc
hlt
in
sbb
push
ss
inc
pop
outsl
inc
cli
gs
pop
sbb
cmpsl
int
jmp
mov
and
out
push
cmpsb
push
add
jns
dec
push
xchg
push
jne
mov
cmp
pop
test
xlat
or
scas
imul
clc
fwait
jae
mov
cmpsb
in
adc
pop
push
push
test
cmp
scas
jns
and
mov
aad
int
xor
jmp
sub
or
push
add
adcb
xor
adc
inc
aam
into
les
ret
mov
xchg
pop
rcrl
stos
pop
cmpsl
ds
out
popa
paddd
cmpsl
sub
cli
xchg
jae
std
mov
push
outsb
xor
pop
lea
push
aam
xor
pushf
xor
add
ljmp
movl
xchg
jno
roll
jo
mov
push
cld
ret
js
adc
xchg
jae
xchg
test
iret
add
cs
mov
and
int3
out
jno
inc
and
int
mov
push
pop
fmulp
movb
mov
xor
or
dec
aaa
and
nop
mov
cmp
and
jl
xchg
pop
pop
sub
shrb
dec
out
jne
dec
mov
lret
pop
repnz
jbe
sub
push
mov
jp
shrl
or
mov
sub
shrl
jbe
sarl
sbb
cld
xchg
and
lret
mov
jne
in
or
repnz
mov
sub
jb
sbb
pop
xchg
jnp
push
cs
lea
sti
add
push
test
andps
movsl
in
movl
cltd
inc
inc
xor
sbb
inc
andl
and
mov
addr16
aas
adc
xor
les
mov
push
jecxz
dec
aas
mov
nop
call
push
movl
rorb
dec
mov
ror
sbb
cmc
or
jno
es
lcall
push
sahf
pop
mov
mov
sbb
test
addb
push
imul
add
jmp
popa
push
adc
je
out
insl
or
adc
sub
leave
mov
mov
dec
push
sbbl
sbbl
bound
or
outsb
leave
movb
adc
mov
das
jecxz
out
scas
je
lea
daa
cmpsb
mov
ja
jno
xor
dec
add
adc
and
jns
mov
shlb
mov
scas
adc
xchg
dec
inc
dec
xchg
push
leave
xchg
aas
jle
fwait
mov
scas
nop
ljmp
fwait
xchg
pusha
loop
inc
int3
push
inc
aad
lret
leave
ljmp
out
pop
leave
mov
jg
test
adc
dec
cmp
sub
jg,pn
xchg
xor
or
lods
or
pop
mov
cmpsl
adc
pop
or
inc
fdivs
pop
aad
test
xor
inc
stos
gs
outsb
in
cltd
add
sbb
jecxz
mov
mov
das
pop
icebp
pop
xchg
add
and
cmp
mov
adc
inc
mov
test
mov
pop
cmc
cmpsl
test
enter
cmc
xchg
cs
nop
lds
adc
cwtl
or
or
aam
push
xchg
xor
xor
or
mul
aam
bound
cld
xor
xchg
lcall
jne
in
or
pop
loop
push
pusha
jnp
sbb
aam
jmp
sbb
fs
js
add
push
and
pusha
insb
push
adc
loope
xor
mov
inc
and
in
push
aam
mov
add
bound
out
leave
es
or
xchg
mov
outsl
fs
dec
lcall
popl
stos
mov
repz
ret
fadds
mov
jo
push
das
push
mov
and
fwait
in
imul
add
lret
xchg
jg
pop
or
mov
inc
push
xor
sbb
cmp
jecxz
mov
lock
pop
cwtl
or
testb
stos
ljmp
stos
jge
mov
mov
call
add
xor
icebp
shrl
jp
cltd
in
idivb
mov
xchg
loope
jo
imul
mov
popf
pusha
scas
pop
mov
sub
push
cld
loop
int
or
lahf
sub
rep
lret
movsb
repz
mull
sub
ret
mov
cli
iret
addr16
sbb
test
fucom
enter
cmp
sbb
push
mov
inc
enter
in
adc
jne
sub
cmp
cmp
mov
out
and
xor
lcall
aas
pop
jns
sbb
cmp
addr16
sub
push
push
dec
dec
pop
lods
push
fldcw
mov
jl
dec
pusha
mov
mov
out
bswap
jno
rclb
es
mov
pop
adc
fcomps
xor
scas
popa
enter
mov
ljmp
pop
xor
adc
repnz
nop
test
adc
rcrl
gs
cmc
jmp
mov
cmc
and
push
out
xor
arpl
loopne
mov
imul
sub
sub
jnp
fisubrs
mov
push
je
pusha
std
test
lds
punpckhdq
inc
divl
xchg
xchg
sti
push
fchs
cwtl
push
shlb
dec
pop
cmp
jbe,pn
cmpb
lahf
sti
stc
in
inc
shrb
loop
push
mov
or
inc
and
cmc
dec
add
mov
sub
stc
fmull
push
jns
addr16
shl
icebp
mulb
fisttps
rclb
pop
sbb
test
mov
aaa
push
int3
cmpsl
jmp
aas
test
sub
lcall
fildl
popa
mov
jp
add
dec
loopne
subb
shl
add
push
sub
orl
inc
sub
outsb
and
cmpsl
insb
stc
loope
add
xchg
aam
mov
add
cmp
inc
mov
mov
mov
pusha
xchg
jge
leave
loope
js
cmp
stos
cli
pop
cli
lods
pop
repnz
nop
repnz
int3
jge
call
pop
rcl
xchg
mov
pop
nop
cmp
repnz
jb
jns
jmp
mov
dec
cmpb
push
xor
hlt
xor
roll
arpl
inc
push
clc
jg
aad
std
xchg
cltd
mov
add
lea
inc
ljmp
jle
lock
mov
out
aad
sub
stos
mov
sbb
mov
repz
mov
lods
mov
repz
jle
add
jle
inc
fndisi(8087
or
bound
sti
shlb
pop
pop
or
jns
fucomp
jb
dec
sbb
jl
xchg
loop
add
lret
mov
mov
mov
test
push
aaa
add
mov
push
cs
dec
test
dec
or
add
dec
addl
dec
jne
cmp
loope
jns
scas
fildll
inc
shr
mov
push
clc
stos
inc
notb
or
cmp
test
sahf
jmp
movsb
lods
outsl
test
inc
out
add
push
xchg
repz
lcall
movsb
or
jle
push
cmpsb
sub
fmulp
lods
adc
stc
imul
mov
in
out
dec
push
loopne
cmp
or
mov
pushf
mov
jb
sub
test
jp
pop
cmpsl
mov
mull
in
ss
fldcw
mov
ss
pop
sbb
lods
ret
shr
pop
ja
shrb
testb
add
lahf
aad
mov
test
out
lds
je
loope
mov
dec
fs
and
les
insb
adc
push
in
clc
cmpl
push
cltd
popa
pusha
or
cmpl
sarl
jo
imul
aaa
jle
inc
sub
sbb
call
and
jnp
jo
mov
ljmp
lods
gs
xchg
int3
inc
jp
rorb
sarl
pop
fs
and
sti
fs
call
je
xchg
jns
mov
lcall
xchg
call
mov
cwtl
lds
je
popa
lea
push
xlat
or
scas
sbb
aas
lock
imul
jno
lahf
sub
xchg
ljmp
cmp
repnz
and
mov
scas
pop
fwait
dec
lahf
in
push
mov
adc
std
test
mov
jno
or
xchg
sub
xor
push
inc
ja
mov
mov
test
adc
xchg
jae
loop
add
and
mov
mov
mov
mov
cmp
fbld
out
or
jbe
cs
shlb
add
adcl
adc
arpl
and
enter
adc
clc
mov
fucomp
in
addb
ds
lods
insl
or
sub
das
mov
pop
xor
sbb
xchg
sbb
hlt
mov
xchg
mov
ss
push
out
movsb
jbe
mov
add
add
xor
push
pop
daa
xchg
xchg
int
ror
jp
and
jbe
je
leave
xchg
or
fstpt
fisttps
jmp
fs
dec
call
lock
push
add
popa
mov
adc
adc
xchg
push
mov
out
popf
sbb
hlt
inc
enter
imul
and
in
aad
daa
in
mov
mov
cmp
adc
dec
jmp
js
dec
rorb
xchg
sub
aam
int
movsb
sub
pop
stos
loopne
xor
pop
sbb
xor
shll
daa
loop
push
jp
mov
lret
push
mov
dec
cmp
mov
xchg
lcall
ror
les
inc
xchg
push
fnstenv
jo
ljmp
sub
pusha
xchg
adcb
pushf
in
push
and
test
pop
mov
out
sbbl
adc
rorb
pop
leave
xchg
ret
or
out
mov
jl
mov
ja
movsb
xor
call
iret
stc
jecxz
pop
adc
scas
dec
inc
cmpsl
jne
pusha
call
lea
ret
leave
std
pop
mov
arpl
push
shlb
and
cmp
gs
and
inc
mov
lahf
and
or
leave
pop
out
fidivrl
mov
push
jge
add
daa
push
sub
and
mov
jmp
xor
jp
or
push
adc
sub
or
leave
js
lds
mov
insl
xor
int
rolb
fsts
inc
mov
pop
aas
int
mov
mov
push
loope
xchg
out
or
push
mov
loop
jo
mov
xchg
sbb
ret
jecxz
clc
dec
add
sub
insb
mov
adc
inc
cld
out
add
std
xchg
adc
mov
push
xchg
in
sub
enter
mov
lahf
mov
stos
cmc
mov
mov
inc
rol
adc
mov
subb
jne
sub
or
pop
cmpsb
ljmp
mov
sarb
pop
neg
lahf
adc
lock
nop
inc
lcall
mov
push
xor
cmp
push
and
add
cmpsb
cmpsl
pop
dec
push
pop
bound
js
out
cmp
shrb
nop
xchg
mov
xor
imul
inc
jno
mov
jmp
aas
fisttpll
pop
xchg
aam
inc
sarl
or
insl
mov
dec
ds
les
dec
xchg
jge
dec
add
adc
out
int3
je
jecxz
mov
enter
movsl
iret
mov
add
out
repnz
jo
and
pop
add
sbb
pop
push
sub
sbb
push
repz
fldcw
and
fnstenv
fldt
in
outsb
cld
cmpsl
pushf
ret
xor
std
add
cld
jl
mov
enter
push
out
lahf
pushf
cmp
xlat
call
xor
inc
mov
sahf
pop
repnz
daa
mov
lret
shll
inc
and
pop
sbb
nop
out
mov
sub
andl
pop
mov
sar
inc
test
inc
lods
clc
xor
push
push
fildl
mov
fimull
scas
icebp
aam
dec
and
loope
jb
mov
loope
lock
mov
inc
js,pt
adc
xor
mov
out
lcall
ljmp
dec
dec
mov
or
cmp
sbb
not
or
push
or
pushf
andl
sahf
or
cmp
subl
stos
rorl
and
cwtl
jns
iret
cmp
out
sahf
sarb
xchg
mov
xlat
loope
jmp
test
ficompl
iret
sbb
adc
cwtl
push
mov
or
cwtl
lock
stos
mov
adcl
sbb
rcl
xor
hlt
xlat
push
mov
nop
cmp
imul
xchg
push
fildll
pop
xlat
mov
pop
addr16
lds
stos
xor
xchg
movsl
sahf
mov
jne
outsl
push
fildl
xchg
stos
cmpsl
es
jmp
mov
adc
xchg
jns
sub
shrb
mov
imul
dec
in
sub
je
mov
dec
dec
mov
out
mov
add
mov
mov
insl
mov
or
fisubrs
imul
outsl
aas
repz
out
ds
fildll
cmp
push
jae
cmp
jne
sahf
push
inc
call
jns
dec
add
and
popf
ss
lea
mov
cli
and
or
adc
test
arpl
pop
mov
jb
loop
aaa
or
movaps
mov
pop
sbb
push
inc
and
stos
jb
fmuls
push
adc
push
data16
sub
dec
jmp
lods
fistpll
in
xchg
out
in
mov
dec
sbb
stc
ds
test
iret
mov
mov
ja
insb
cmp
add
sbb
cmp
mov
xlat
dec
and
inc
add
call
sub
ds
mov
pop
mov
pop
jmp
mov
push
push
addl
sahf
and
push
scas
cmpsb
add
xchg
cmp
or
cmc
mov
imul
lret
push
xchg
adc
push
xchg
mov
imul
mov
push
je
hlt
sarl
outsl
loope
ds
jge
les
add
out
rolb
scas
push
fmull
nop
mov
stos
test
push
inc
mov
cltd
jge
aaa
jle
jmp
ja
iret
outsb
adc
push
pop
mov
lods
xchg
inc
adc
xchg
shll
adc
dec
into
scas
sbb
test
xor
out
test
jecxz
aad
insb
xchg
jne
test
or
icebp
add
sbb
enter
mov
xorb
rcll
push
sub
or
add
fsts
push
mov
ret
nop
push
sbb
mov
jno
mov
dec
dec
test
mov
aam
iret
jns
movsb
fucomi
xlat
push
fnsave
push
mov
pusha
or
mov
divl
mov
jge
lock
cmc
add
adc
lea
test
rolb
aad
mov
dec
ljmp
jne
and
pop
pop
sub
outsl
sti
cmp
jbe
scas
xchg
ljmp
mov
sar
jge
adc
data16
out
lock
lret
repnz
es
cmp
jmp
xor
je
imul
sahf
fsubrl
movb
cmc
jmp
cmp
add
xor
mov
xchg
jle
pop
cmp
inc
cmc
mov
xchg
jmp
je
sbb
sub
imul
sbb
dec
sbb
and
cmp
dec
aam
mov
mov
xor
pop
xchg
or
imul
push
cmp
mov
jecxz
sub
rclb
popa
adc
stc
mov
lret
out
test
loopne
pop
cmp
daa
pop
fs
jo
xor
test
or
cltd
xchg
fdivrp
dec
cmp
scas
inc
pop
in
mov
xchg
aas
enter
imul
mov
test
pop
sbb
push
and
sbb
add
xchg
fidivrs
insb
nop
xor
add
repz
xchg
xchg
xchg
xlat
add
cltd
pop
sub
adc
mov
xor
or
test
jns
adc
fbld
jp
pop
hlt
mov
and
mov
jmp
fwait
clc
divps
fwait
rcr
sub
adc
addr16
lcall
mov
cmp
or
mov
cmp
sub
mov
shl
jno
ja
lahf
aas
fs
mov
xor
mov
test
sub
xchg
maxps
dec
pop
cmp
gs
xchg
out
incl
imul
stc
xor
rcrl
sub
shlb
cmpsl
jge
dec
xor
shr
fnstcw
sbb
lods
cwtl
call
lahf
addr16
fidivrl
es
sbb
sub
lods
cmpsl
js
xorb
fsubs
lock
movsb
ficompl
rorl
sub
outsb
and
fwait
push
push
dec
or
in
out
lods
fs
fcomps
mov
fwait
and
xchg
add
adc
mov
fwait
andl
push
outsb
pusha
add
fadds
dec
int3
cmpsb
jae
sbb
lcall
into
pop
sub
adc
dec
cld
inc
les
daa
add
fstpt
ljmp
scas
fdivs
cmp
movsb
mov
lcall
in
jl
repz
adc
jecxz
xchg
test
stos
jb
cs
pop
les
xor
aam
mov
stos
sub
mov
mov
outsl
mov
mov
mov
cmp
sub
jbe
pop
pop
inc
cmp
ret
xchg
xchg
mov
stc
fsubs
or
hlt
or
adc
inc
sbb
push
jecxz
add
push
dec
sub
pop
dec
aas
cmc
jne
cmp
xchg
and
shll
out
or
mov
cmp
es
subl
adc
repnz
popa
std
les
sbb
xchg
cmpl
gs
push
inc
mov
adc
sti
jl
daa
addl
cmp
mov
cwtl
icebp
cs
cmp
push
test
sub
push
call
lods
xor
ja
movsb
or
aad
inc
stos
jmp
ret
xor
loop
push
dec
adc
inc
cmpsl
mov
jecxz
sbb
cmp
xor
sub
pushf
fsubr
rclb
xchg
adc
mov
sub
add
mov
repnz
mov
ficoms
lret
cmp
mov
mov
pusha
dec
mov
fs
daa
lods
andl
pop
andl
cltd
mov
push
xchg
notl
jmp
pop
mov
imulb
mov
iret
lock
loope
mov
dec
and
std
test
push
dec
aad
xchg
popa
ds
das
aas
inc
insb
repnz
ret
pop
shrb
push
leave
out
pop
mov
sbb
shrb
jmp
loop
loope
sbb
mov
es
jae
out
or
mov
push
mov
or
xchg
adcb
jge
fwait
js
xor
jmp
dec
add
add
cmp
stc
adc
jge
es
dec
adc
ljmp
mov
xor
int
sub
lods
push
add
mov
mov
ret
push
divl
push
cs
sub
jo
shll
xor
sub
lods
xchg
jg
notb
setns
or
loope
cmp
fidivs
in
adc
inc
sbb
rol
outsl
push
into
aaa
lret
enter
jo
push
out
mov
popa
inc
push
rorl
xchg
mov
out
pop
dec
cli
mul
nop
loope
sbb
mov
or
adc
or
xchg
push
loopne
int
jnp
stc
movsl
lret
iret
sub
ret
pop
in
gs
jnp
mov
xor
jne
fsubr
xor
sti
test
fisttps
cmp
or
test
dec
arpl
js
add
pushf
xchg
lret
orl
inc
cmpsb
aas
scas
lock
in
call
ss
mov
sub
inc
push
ja
xchg
add
xor
repz
loop
pop
fisttpl
xor
pop
andl
and
inc
mov
fbstp
and
pop
cmp
mov
and
aaa
cwtl
and
sub
imul
xchg
push
lods
outsl
mov
pop
jne
ss
aam
mov
inc
popf
loopne
inc
jae
icebp
push
sub
lret
sarl
sbb
pop
test
xor
cwtl
idivb
iret
push
xchg
push
data16
cmp
xor
andl
cmp
repnz
pop
and
pop
xchg
jg
stos
mov
test
lcall
les
pop
lock
jg
cld
sbb
insb
or
mov
pop
nop
dec
stc
idiv
fwait
loope
push
xchg
stc
sbbb
xor
loope
jmp
lret
inc
iret
xor
mov
xor
dec
sbbl
mov
les
movsb
dec
dec
push
mov
push
or
fdivl
dec
int3
test
arpl
int
shrl
js
rcrb
rcll
mov
push
lea
popf
stos
aas
test
flds
cmp
mov
push
and
nop
mov
pop
sahf
xchg
mov
pop
mov
pop
xor
call
fwait
rol
xchg
and
mov
ret
mov
sub
hlt
jbe
and
dec
subb
jns
add
push
pop
in
loopne
mov
and
test
dec
leave
mov
gs
popf
mov
cs
movsl
mov
fs
pop
or
or
sub
adc
mov
mov
mov
dec
mov
adc
test
jnp
adc
das
lcall
push
jo
xchg
insl
jl
loope
xlat
sub
or
ds
xor
pop
cmpsl
loopne
in
or
sti
out
cmc
ljmp
mov
sub
test
out
adc
lret
adc
jp
cmp
movsl
sahf
test
imulb
push
lret
mov
scas
dec
mov
sbb
call
dec
xchg
pop
mov
mov
outsb
sub
or
cmp
clc
nopl
in
adc
pusha
mov
push
xor
jbe
xchg
loope
loope
loop
je
xor
sub
aas
jl
scas
mov
jle
xchg
enter
xchg
cmpsb
jg
cmp
or
cwtl
mov
push
jmp
stos
outsl
ss
cmc
sbb
xchg
adc
ja
xor
jnp
mov
jg
andl
or
cmp
sub
sub
add
stc
sbb
loope
jnp
sbb
push
sarl
dec
xor
fimull
sub
in
or
fbld
push
sbb
outsl
cmpsb
add
out
dec
push
jb
lods
les
insl
jge
add
lods
mov
jno
out
mov
jns
ljmp
push
push
and
outsb
cmc
adc
xchg
gs
std
adc
cs
je
xchg
sti
sbb
into
data16
lahf
daa
in
test
stc
sahf
sbb
sub
sbb
scas
mov
and
repnz
sub
sahf
add
pusha
repz
mov
dec
lcall
cmpsl
jmp
negl
mov
mov
repnz
call
pop
mov
add
add
push
mov
addr16
xor
in
xchg
inc
push
cmp
arpl
adc
ficoml
add
jne
jbe
sbb
testb
fisubs
mov
scas
cmc
imul
pop
and
neg
and
sub
stos
sbb
xor
mov
pop
jae
jmp
movsb
xor
mov
cs
rcrb
sub
push
jecxz
popa
push
push
fcomp
call
add
xlat
xor
popa
stos
add
add
adc
jae
pop
out
aaa
or
push
sti
push
pop
cltd
in
enter
sti
outsb
mov
pop
stos
jae
outsb
mov
sbb
mov
inc
and
sbbl
rol
cmpsl
sub
adc
cmpsb
ja
fistpll
mov
cmc
xor
xchg
ret
mov
test
out
in
aad
movsb
insl
xchg
add
cs
push
ja
lods
sbb
sub
test
lret
imul
in
ret
ljmp
push
inc
push
arpl
in
xchg
in
push
dec
cmpsl
push
test
xchg
sahf
int3
inc
fidivs
repnz
xor
push
pop
sahf
int3
aas
pop
stos
scas
mov
sbb
in
sbb
repz
lods
lcall
fsts
push
mov
sub
push
dec
push
sahf
mov
dec
mov
dec
xchg
inc
stos
repnz
movsb
loopne
imull
out
fldl
insl
sbb
push
cmp
loop
pop
dec
push
cltd
dec
fnsave
std
mov
movsb
jne
jmp
cmp
lock
dec
pop
mov
aam
jnp
or
mov
mov
dec
repnz
sbbl
jmp
sti
mov
mull
jmp
dec
jnp
imul
xlat
mov
or
cmc
jbe
in
mov
jbe
gs
fidivl
xor
cmp
call
sbb
dec
js
sub
pop
jle
xchg
ficoms
and
clc
xlat
jecxz
movsl
dec
sub
scas
movsl
jecxz
mov
cmpsb
inc
sbb
hlt
mov
push
rcrl
ljmp
add
adc
cli
jecxz
psllq
sahf
lret
jo
aam
adc
pop
leave
imul
das
jno
outsb
inc
jno
mov
out
fdivrl
cmc
stos
pop
sbb
in
xchg
jmp
sub
popl
cmp
cmp
arpl
js
mov
notb
xor
push
sahf
sbb
xchg
jo
repnz
push
scas
div
pop
insb
inc
test
fildl
and
cmpsb
push
shl
pop
xlat
xlat
enter
cmpsw
pop
jb
sbb
mov
aaa
pop
lds
and
ror
pop
scas
xchg
mov
ja
sarl
add
fmuls
jno
dec
or
jg
push
pop
fdivrl
add
mov
rcr
xchg
movsb
loop
fwait
mov
repz
jmp
loop
pusha
rcr
fildl
add
xor
mov
stc
jmp
out
ret
jmp
or
add
mov
pop
sarb
adc
push
cmpsl
push
stc
ret
jecxz
push
jl
inc
cmp
dec
push
xor
lods
xchg
jne
xchg
shll
mov
aaa
ret
cmp
push
cltd
fs
bound
mov
rcrb
add
xor
add
mov
xchg
cmp
addl
adc
cmp
lods
fadds
adcl
push
add
add
test
std
sbbb
outsl
mov
adc
ljmp
test
fcompl
add
out
aas
ret
cmp
xchg
ljmp
loopne
sub
sub
popa
lds
xchg
inc
mov
mov
and
in
repz
clc
adc
pop
aad
dec
sbb
and
push
je
or
inc
xor
cmpsb
lcall
outsl
clc
and
leave
or
push
in
mov
imul
xchg
jp
rcrb
xor
xor
push
dec
cmp
inc
jg
adc
fwait
jae
push
aas
push
test
mov
inc
in
cmp
sub
sub
fwait
or
pop
mov
adc
inc
inc
cmpsb
das
insl
fldenv
mov
or
in
mov
xor
fcoms
fbld
aaa
fmuls
lret
lods
addr16
in
inc
pusha
pop
out
lret
xchg
mov
jmp
xor
cmc
cmp
xlat
lods
mov
pop
push
popa
repnz
dec
mov
sti
and
mov
test
in
push
scas
fdivrs
push
jecxz
cmp
adc
out
lret
addr16
lahf
xchg
pop
pop
or
mov
add
lahf
and
sub
das
test
fst
sbb
mov
dec
in
xor
out
int3
cwtl
test
loopne
cld
fwait
add
dec
mov
or
in
xlat
mov
adc
push
cmp
lcall
cmp
inc
outsl
stc
add
pop
out
jae
xchg
mov
mov
mov
pop
jmp
fiaddl
inc
pop
cltd
iret
out
repz
out
mov
arpl
es
add
cmc
xchg
add
cmp
sbb
dec
loop
push
lds
pop
addr16
or
fsts
subb
pop
xchg
movsl
das
push
loop
loop
push
fldcw
pop
nop
mov
inc
adc
mov
xor
loope
or
rolb
dec
ret
cmpsb
mov
mov
or
sti
or
lock
lret
pushf
dec
fadd
xchg
pusha
jle
or
ss
cld
mov
and
insl
repnz
test
cmc
fadd
sti
test
sbb
repnz
ljmp
aad
push
and
out
mov
and
data16
sahf
mov
enter
cmp
sub
cld
sub
nop
rcrb
xchg
xor
into
and
mov
inc
mov
invd
test
mov
push
cmp
push
cmc
jmp
popa
je
cltd
mov
add
jg
or
push
les
iret
out
and
out
hlt
lret
xchg
aad
fidivrl
fnsave
int3
movsb
in
mov
sbb
lret
test
repnz
lcall
mov
shll
jae
add
out
enter
incb
inc
jmp
cli
sahf
mov
js
in
nop
mov
xor
cmp
insb
std
add
inc
cmpsl
push
push
pop
mov
sub
lahf
pushf
je
mov
or
mov
dec
sub
dec
stos
dec
out
push
sbb
icebp
fwait
jno
sarb
pop
mov
les
dec
gs
xchg
stos
mov
mov
mov
mov
inc
addr16
jmp
jbe
jne
aad
xor
fdivr
ret
inc
movsl
or
xor
cmp
xchg
pop
das
lods
cwtl
lock
test
ja
iret
loope
into
sbb
loop
fcompl
cld
enter
popl
adc
push
cmp
mov
sbb
pop
pop
insb
mov
and
sbbb
inc
scas
stc
scas
movsb
inc
popa
add
loop
push
cmovge
fsubrp
es
jno
fxch
aam
cmp
es
push
pop
imul
mov
loope
sub
and
into
or
add
jo
test
adc
insb
dec
inc
jg
lret
repnz
ficompl
jl
push
jp
out
sub
adc
mov
inc
mov
in
das
into
xlat
jg
dec
in
inc
mov
sar
dec
push
int3
inc
fwait
jecxz
mov
or
lret
mov
pushf
pop
outsb
push
jle
inc
cmp
int
xchg
popa
dec
mov
cmpsb
mov
add
and
xor
pop
rorl
call
stos
sub
lahf
jae
mov
out
lods
pop
ss
mov
cli
orl
or
mov
push
and
andl
out
add
in
popa
push
adc
lods
inc
pop
cmp
fadd
repz
pop
dec
je
pop
pop
loope
jg
call
pop
fstps
pop
mov
aas
hlt
mov
jnp
mov
inc
aam
stos
sub
and
xchg
movsb
sbb
xchg
push
mov
neg
fwait
imul
push
jg
pop
cmp
jge
nop
mov
add
push
mov
stc
mov
cltd
xchg
cli
loopne
sub
out
fdivl
cmpsb
sahf
xor
in
dec
mov
imul
rorb
push
add
inc
jo
les
fnstsw
jmp
mull
lahf
or
sahf
outsl
sahf
cmpsl
sbb
loop
lea
loopne,pt
mov
push
xor
lcall
sbb
xchg
mov
jnp
insl
inc
aas
cwtl
or
and
mov
or
mov
mov
dec
ficompl
outsb
mov
das
in
ljmp
sbb
sub
js
mov
adc
hlt
jle
add
orb
push
xlat
jnp
aaa
into
lock
mov
push
lock
aaa
cmpsb
repnz
push
scas
pop
cli
std
xchg
mov
shrl
push
and
insl
mov
popf
shlb
pop
mov
mov
and
rorl
ficoml
imul
rcr
xchg
cltd
xorb
fisubs
dec
mov
or
cmp
aam
pop
cmc
or
ljmp
bound
fucomi
setb
jecxz
ret
pop
clc
movsl
push
aad
adc
ret
leave
call
imul
dec
cmc
or
jecxz
xor
fs
sbb
pop
push
in
stc
enter
xlat
jnp
js
aam
or
sbb
inc
ja
inc
push
mov
lret
jb
ss
xor
xor
pop
jae
add
and
mov
ljmp
lahf
xor
je
add
adc
add
cmp
xchg
cmp
mov
cmp
lds
jecxz
adc
cmp
int
xchg
in
jl
aam
icebp
dec
int3
loopne
aam
push
nop
adc
sbbb
xor
xchg
imul
fs
repnz
jo
jae,pt
int
mov
xlat
xchg
sbb
lcall
sub
and
and
ja
imul
out
popf
int
stos
fiaddl
aas
pop
out
ficoml
rorb
into
rol
xchg
xchg
repnz
push
aam
jb
jno
adc
mov
cld
shr
mov
das
in
movsb
aam
popa
aas
mov
push
cld
inc
data16
in
push
sahf
les
adcb
cld
xchg
addr16
adc
push
jmp
scas
mov
int3
xchg
test
mov
push
fisubs
rcl
cltd
mov
inc
addr16
cltd
add
pop
aas
sbb
mulb
pop
lods
icebp
cwtl
pop
sbb
pushf
leave
jae
movsb
subl
test
sbb
sub
dec
cmc
and
mov
mov
in
hlt
fnsave
and
les
sbb
repz
mov
cli
hlt
aas
add
mov
repnz
xchg
inc
dec
and
mov
enter
int
mov
test
aaa
sbb
pop
hlt
add
mov
sbb
lret
ss
bound
in
idivb
int3
push
sbb
fwait
xor
into
iret
xorl
mov
fdivrp
mov
pusha
lret
pop
dec
mov
cmc
xlat
test
jnp
ds
in
pop
popf
add
mov
and
js
inc
inc
cmp
pop
xor
aad
aas
gs
pop
clc
jb
mov
notb
mov
jmp
int
push
push
xchg
pop
je
jo
loope
jmp
or
pusha
xor
push
verr
or
mov
imul
xchg
push
in
aaa
fisttpl
push
popa
cmpsb
pop
pop
aad
adc
inc
je
stos
jns
in
and
jns
stc
jo
and
pop
mov
iret
shrl
movb
out
int3
imul
sbb
aam
ds
clc
jp
hlt
mov
jnp
bound
lret
hlt
jl
cmpsl
fcoml
dec
es
incl
aad
es
dec
negb
dec
cmp
scas
das
mov
lds
jae
jb
fnsave
dec
or
jge
push
loopne
jl
sub
fiaddl
push
aam
scas
inc
mov
call
repnz
push
jno
sbb
mov
das
repnz
push
mov
sar
fdivl
push
insl
insb
cmp
or
add
iret
arpl
loopne
inc
mov
pop
fcoml
xchg
add
jae
inc
data16
popf
leave
inc
adcl
jecxz
sub
push
rolb
cmp
mov
cmp
jne
lcallw
mov
xor
jo
cmp
inc
ret
mov
jmp
jle
xchg
out
push
lea
lds
mov
inc
jno
dec
icebp
xlat
inc
inc
jnp
mov
xchg
adc
into
sub
rorl
xchg
adc
adc
push
out
cltd
out
aam
cmp
mov
push
mov
adc
lcall
les
mov
js
mov
in
xlat
pop
popf
rcll
fsub
test
push
adc
jge
arpl
aaa
test
adc
dec
test
arpl
push
and
sbb
sbb
sti
gs
nop
sbb
mov
scas
std
hlt
shll
rcr
mov
xchg
les
enter
daa
cmp
push
rcrl
xor
push
inc
lea
mov
jno
adc
lea
fldl
lcall
and
les
or
je
outsl
shr
fwait
pusha
inc
pushf
adc
xchg
test
dec
jb
mov
sub
push
idivb
testl
std
adc
stos
fists
jne
or
adc
scas
std
cmp
ds
cmpsl
lea
add
jns
push
out
push
inc
pop
addr16
sbb
adc
jle
mov
sub
push
lahf
scas
sbb
call
pop
adc
push
push
dec
test
push
jg
push
dec
sti
mov
fnstsw
xchg
jbe
xor
int3
cld
test
dec
adc
sbb
loope
negb
lret
inc
adc
jae
rcrb
aas
sub
jp
inc
popf
or
aas
xchg
mov
lea
mov
and
jl
lds
movsl
mov
pop
sub
fucom
xor
loope
mov
imul
pop
jge
loope
in
addr16
mov
and
cmp
xor
inc
mov
adc
jp
mov
mov
pop
push
mov
xchg
mov
inc
push
add
sub
fdivs
mov
mov
xlat
cmp
inc
enter
mov
pop
jle
dec
int
mov
cmp
fs
jae
sbb
test
orl
push
mov
and
ja
inc
js
push
gs
notb
cmp
mov
out
add
addr16
movsl
lods
faddl
nop
sub
sahf
and
sub
outsl
ret
insl
repnz
ds
and
jo
inc
gs
or
stos
insl
jbe
add
pop
dec
in
push
push
ret
xchg
jae
push
xchg
adc
jp
test
and
nop
sub
mov
adc
jno
nop
les
mov
into
dec
cmp
xchg
adcb
dec
inc
lahf
clc
stos
or
lock
and
cltd
push
xor
push
std
cmpb
xor
xchg
dec
sub
mov
call
mov
xor
xor
cld
push
cmp
pop
jmp
stos
adc
mov
jle
xor
loop
movsb
jp
dec
inc
andl
negb
daa
xchg
addr16
mov
push
pop
ja
lods
xor
lahf
push
popa
cmp
sub
cli
das
fsubr
lods
in
mov
mov
inc
adc
mov
dec
pop
inc
jecxz
mov
mov
mov
bound
pop
fldl
mov
mov
adc
mov
in
incb
pop
cmp
fcmovu
scas
cmp
mov
hlt
xor
repnz
or
hlt
mov
push
cmp
adc
add
xchg
sti
jbe
jno
dec
mov
popa
cmp
mov
cmpsl
jecxz
popf
fdiv
xchg
stos
cmpsb
jge
std
mov
outsl
push
addr16
lcall
xchg
fs
push
add
mov
xor
lods
cmp
test
repnz
jl
push
pop
push
push
clc
je
xchg
pop
or
scas
xorl
push
adc
xchg
jb
add
inc
daa
lret
in
enter
and
rcrl
lcall
movsb
clc
cmp
test
fstps
imul
popf
inc
out
xlat
das
out
stos
mov
shlb
and
leave
xlat
sub
loop
xchg
lock
and
mov
das
sti
mov
pop
cmc
adc
add
add
lahf
dec
out
sbb
insl
add
or
push
sarl
in
add
out
fidivrl
mov
inc
daa
mov
jle
fidivrs
ret
or
call
int
mov
lahf
ja
imul
ret
or
int3
lret
andl
inc
pop
fidivrs
fisttpll
bound
pop
sub
daa
negb
sbb
jae
mov
iret
incb
test
cmc
outsl
dec
pop
mov
inc
call
test
jae
xor
xchg
inc
mov
dec
mov
sub
push
ss
sub
inc
rolb
inc
fcomps
or
shll
out
dec
out
in
nop
push
insb
mov
iret
push
or
fdivrl
data16
popa
xor
and
xor
sbb
or
or
inc
add
clc
jl
pop
dec
push
dec
enter
inc
pop
ljmp
sub
insl
sbb
mov
fidivrl
or
test
shlb
or
jg
dec
fmul
and
push
cmp
arpl
mov
jae
sbb
xor
mov
xchg
out
xchg
lahf
ficompl
test
jo
add
xchg
jecxz
stc
mov
ret
cwtl
pop
xchg
ret
adc
les
pop
test
sbb
xchg
dec
fs
fsubr
in
mov
cmp
or
xor
and
and
xchg
push
cltd
mov
test
pop
ss
inc
xlat
jno
out
mov
inc
xchg
jns
mov
push
cmp
xorb
out
imul
test
adc
or
fdivrl
out
sub
int
insb
les
shlb
pop
push
loope
cmc
stos
add
xor
jl
xor
loop
scas
add
adc
xchg
xor
xchg
push
push
idiv
stc
addr16
out
dec
push
inc
in
cmp
outsb
adcb
and
hlt
loopne
xchg
xor
mov
and
adc
fdivs
adcl
mov
imul
dec
add
xchg
add
dec
mov
popf
lahf
cmp
ret
in
shld
rcr
fwait
test
inc
pop
rcrb
xor
out
jg
inc
jle
shrl
dec
shrl
imul
bound
or
add
push
inc
push
pop
fcoms
test
jecxz
inc
mov
frstor
sbb
int3
pushf
dec
cmc
out
loope
es
testb
sbb
jl
mov
cmp
and
mov
in
fcos
arpl
inc
jne
adc
and
xor
push
insb
jecxz
jecxz
sub
mov
or
pushf
divl
sub
iret
repz
inc
inc
stos
das
add
sub
and
xchg
pop
push
pushf
std
shl
pop
out
or
cmp
sahf
shr
xor
lea
arpl
dec
insb
xor
fisubs
jl
or
push
mov
jge
add
jne
inc
cmp
icebp
cmc
pop
sub
inc
add
movsl
pop
push
pop
aad
fnstenv
in
cmp
das
in
outsl
mov
testb
xchg
test
mov
lahf
ljmp
clc
insb
pop
test
mov
ret
test
aaa
jbe
adc
data16
and
dec
inc
jne
test
sub
mov
gs
push
sub
and
mov
and
movsb
mov
mov
or
xor
popa
subl
inc
aas
push
out
and
xchg
mov
mov
fisttpll
adc
in
adc
cmp
mov
fildl
fisubrs
mov
orb
cltd
sbb
push
fwait
rorl
mov
icebp
jne
push
pop
jge
inc
mov
mov
xchg
mov
es
cltd
pushl
ja
test
push
pop
fsubrl
repnz
fsubr
pop
daa
mov
adc
lock
orb
repnz
test
fucomp
cmp
and
inc
mov
sub
jo
jns
cmp
inc
and
frstor
add
nop
into
cmp
ret
cmp
loop
pop
mov
sub
mov
testb
and
sbb
mov
and
stos
push
lret
arpl
cmp
adc
pop
sbb
mov
cli
out
or
adc
testl
pop
dec
repnz
js
std
xchg
movsl
push
test
fsubrl
popa
mov
je
ds
movsb
xchg
movsl
dec
jnp
icebp
inc
dec
sub
je
inc
jl
fsubs
mov
mov
push
add
int
jmp
dec
mov
in
je
iret
call
enter
pop
xchg
jae
xlat
mov
add
sub
push
pop
push
in
lret
sbbb
mov
dec
shl
xchg
jge
or
fdivs
sbb
inc
mov
mov
xchg
testb
jg
xchg
aaa
mov
and
sub
leave
int
out
mov
sar
cmp
cmp
cmp
mov
lods
call
adc
jge
insl
dec
repnz
js
mov
xor
imul
add
push
fisubrs
push
dec
mov
pop
dec
mov
pop
inc
jp
loop
inc
stos
out
lods
sbb
ret
pusha
or
xchg
push
sub
setle
mov
lret
in
jg
sub
inc
icebp
cmp
add
jmp
pop
cmpsl
mov
popf
xchg
fprem1
repz
xchg
outsb
in
xchg
andl
cmc
push
leave
lret
cmc
das
cmp
sahf
sbb
rcrb
push
setbe
repz
in
cmpsl
inc
std
dec
or
xlat
test
mov
and
pusha
popf
rorl
xchg
add
mov
lock
imul
push
jnp
pop
in
pop
push
scas
sbb
xchg
xor
sti
or
mov
pop
pushf
shlb
loope
dec
push
mov
lds
in
adc
sub
test
fnstcw
push
and
jge
roll
adc
lods
jno
fildll
inc
jmp
jbe
cmp
hlt
sub
xlat
push
imul
mov
int
mov
adc
lret
ss
mov
xor
mov
jnp
inc
nop
ja
dec
sbb
mov
xor
pop
loope
sub
test
dec
inc
mov
adc
imul
loope
mov
cli
cmp
insb
cmp
pop
mov
or
xchg
inc
mov
jmp
pop
outsl
pop
mov
jle
mov
movsb
insl
push
mov
ret
inc
dec
dec
inc
push
xchg
repz
jbe
mov
sbb
sbb
mov
mov
push
pop
add
dec
je
sbb
call
test
sbb
and
ljmp
inc
out
jbe
or
xchg
sti
xchg
js
mov
push
cmpsl
push
inc
pop
js
cwtl
adc
repnz
fnstcw
or
adc
jnp
js
jne
sbb
into
fnstenv
lahf
jmp
push
mov
xor
push
inc
mov
mov
mov
add
mov
jne
loopne
xchg
mov
dec
fiaddl
jg
out
adcl
in
jnp
xchg
outsl
aas
xor
dec
rorb
mov
out
roll
fwait
mov
cmp
or
xchg
lods
jmp
xor
dec
jg
les
in
sbb
jo
js
je
cmpsb
inc
mov
cmpsl
test
sti
pop
sbb
jp
inc
push
repz
jns
call
leave
mov
adc
repnz
jge
mov
stos
mov
push
pop
fsubrl
or
shrl
mov
mov
pop
mov
xchg
imul
jp
jmp
stos
push
mov
cmp
cmp
orb
pusha
inc
es
test
out
mov
dec
fwait
bound
mov
jp
add
jne
adc
jmp
in
mov
pushl
setge
gs
xchg
std
jae
sub
movsl
push
lods
mov
roll
mov
cmp
cmc
fstpl
cld
lds
xchg
jns
push
xchg
enter
sub
rolb
rorl
jb
mov
sbb
inc
stos
mov
adc
sub
cmpsb
mov
xor
pop
test
xchg
mov
ret
mov
jno
movsl
repnz
pop
and
cmp
std
pop
jp
aad
mov
pop
decb
or
pop
ficoms
pushf
inc
lret
sub
std
mov
jno
into
push
jns
mov
adc
mov
dec
ret
cwtl
push
xchg
cmp
insl
shrb
or
push
sub
dec
sub
scas
sbb
ja
ss
inc
inc
push
xchg
jnp
mov
mov
adc
scas
sub
inc
ret
cmp
sub
js
sbbl
mov
call
push
sub
out
adc
leave
pop
push
cmp
shl
and
dec
jnp
clc
push
shll
std
icebp
aaa
out
mov
fdivp
mov
sub
pop
sub
scas
sti
xchg
mov
inc
and
loop
xchg
cwtl
lahf
adc
mov
out
out
js
or
add
call
mov
xchg
inc
dec
pop
paddsw
fwait
ret
gs
insb
jge
push
mov
push
adc
push
gs
mov
cmpsl
cmp
test
mov
xor
push
jp
popa
ret
cwtl
mov
mov
inc
out
cld
mov
movsb
test
push
pop
adc
or
aad
ret
push
and
mov
in
mov
push
push
dec
xchg
in
cmp
loope
negl
mov
rol
mov
gs
stc
pop
pop
inc
mov
insb
addr16
sti
loop
pusha
add
in
cmp
movsl
adc
mov
popa
sub
mov
inc
lds
and
add
test
jno
push
stos
xor
scas
jbe
xchg
les
xchg
adc
cmp
inc
sub
dec
outsl
outsl
in
rorb
pop
enter
scas
push
xchg
rcrb
pop
roll
cmpsb
push
jecxz
cmc
in
loop
cmp
and
test
stos
sahf
xor
cmp
jns
mov
cmp
repnz
push
xchg
mov
dec
jp
stos
jecxz
in
test
add
pop
stc
imul
add
inc
push
mov
les
pop
ficoml
or
outsb
arpl
xchg
jne
cmp
sbb
imul
ret
out
inc
mov
xchg
xor
xor
xor
pusha
sbb
pop
fs
shrb
sahf
sbb
lret
inc
shll
hlt
inc
mov
xorb
pop
lods
push
sbb
push
push
cwtl
mov
in
cmp
and
stc
test
hlt
aad
mov
loope
nop
in
out
mov
fidivrs
aaa
jns
addr16
out
iret
mov
ficomps
push
out
jne
mov
ja
and
in
cli
out
pop
insb
fildll
insl
dec
adc
dec
and
repnz
lret
repnz
xchg
scas
mov
jnp
cmp
xor
dec
xor
nop
das
mov
sub
dec
and
or
fs
js
jb
mov
data16
test
test
test
imul
sub
push
push
add
adc
jns
dec
xchg
mov
mov
test
repnz
lret
sarl
mov
mov
ds
sub
or
inc
arpl
xor
pop
inc
aas
or
mov
xor
cmp
xchg
aas
mov
adc
and
mov
imul
test
popa
mov
sahf
and
cld
scas
inc
or
xor
hlt
push
and
je
cmpsl
sub
sbb
add
gs
add
jbe
lods
je
mov
outsl
cmp
pop
pop
jecxz
push
repnz
push
leave
nop
rclb
out
jo
daa
es
cmp
and
sub
push
or
stos
sub
insb
popf
out
mov
das
aad
fcmovnbe
mov
mov
push
inc
mov
outsb
cmpsb
sub
jecxz
test
xchg
shlb
cli
punpckhwd
xor
jl
stos
les
mov
cmpsl
insl
aas
fmul
mov
jns
fidivrl
push
rolb
mov
and
xchg
pop
jb
sbb
jae
orb
data16
pop
rorl
sub
inc
cmp
xchg
mov
in
subb
movsb
adc
mov
jg
or
xchg
mov
xchg
notb
adc
sub
add
mov
dec
cmp
mov
inc
bound
push
mov
cli
add
imul
ret
out
mov
bound
pop
xor
sbb
mov
jb
jecxz
scas
mov
scas
rcr
inc
out
daa
shl
loop
lcall
fwait
test
enter
addr16
xchg
pop
cwtl
into
pop
xor
push
mov
push
outsl
je
repz
lret
aam
jg
hlt
scas
xchg
jmp
popa
push
lcall
mov
pop
adc
or
je
xor
cmp
cmp
aas
fstpt
cmp
sub
enter
sub
sub
pusha
sub
jne
add
outsl
inc
rorl
xchg
lret
pop
js
in
sbb
pushw
add
adc
xchg
scas
push
int
cmp
fcompl
mov
mov
addb
push
mov
cmp
fisubrl
daa
pushf
in
data16
in
dec
into
fsubl
les
shlb
inc
lods
ficompl
mov
repz
shrb
test
ds
mov
inc
jle
decl
push
mov
mov
into
shlb
aad
fmull
imul
insl
push
xchg
and
xchg
add
cmp
or
push
jo
dec
inc
jo
cmp
push
in
data16
jae
stos
adc
movsb
xchg
pop
fnstcw
in
test
mov
adc
dec
inc
ja
mov
jo
xchg
aam
pop
push
jmp
xchg
and
iret
xlat
insb
popa
inc
dec
mov
int
xchg
xchg
repnz
stc
adc
inc
mov
in
stos
xchg
mov
addr16
sahf
lea
lock
mov
dec
sahf
daa
fldcw
loope
scas
cmp
ret
push
mov
xchg
insl
push
in
and
leave
das
movb
iret
lcall
pop
xlat
or
mov
leave
jle
mov
iret
dec
push
cwtl
jns
ret
add
pushl
call
mov
out
cmpsb
mov
pop
or
popf
test
stc
fldcw
jb
xor
ja
or
push
jl
add
mov
hlt
fs
cmc
test
dec
or
push
out
in
insb
fimull
ljmp
cmp
mov
add
xchg
icebp
mov
ss
cmpsl
mov
rorl
addr16
fisttps
mov
out
dec
push
stos
sbb
mov
cmpsb
push
add
xchg
imul
insl
cwtl
mov
aam
lods
loopne
adc
jmp
xchg
ja
call
push
mov
add
mov
insb
mov
ds
xchg
jns
int3
sbb
push
and
lods
je
arpl
nop
insl
ss
push
test
fsubs
aaa
sub
xchg
test
adc
push
fsts
cmp
lcall
sub
push
cld
xor
lret
movsb
int
push
xchg
icebp
mov
inc
hlt
push
lret
adc
cmpsl
aas
stc
shrb
lret
sbb
rcll
out
cmp
test
cmp
data16
inc
in
divb
popa
clc
test
daa
jl
inc
mov
push
pop
dec
int
mov
cmp
jae
shr
push
jae
adc
inc
shrl
jns
mov
insb
aas
push
jmp
in
xchg
sub
leave
stos
int
mov
lea
pop
shll
ss
rclb
cmc
xchg
cmp
repz
stos
je
test
add
mov
aad
sub
push
cwtl
push
in
mov
xlat
and
daa
mov
xor
sbb
mov
daa
jo
cwtl
mov
arpl
js
out
push
push
std
cmp
lret
xchg
xchg
orl
add
ljmp
fsincos
repnz
pop
xchg
lds
in
mov
inc
xor
shrl
fnstcw
int3
mov
add
dec
lret
gs
jge
mov
shr
lds
addr16
sbb
mov
mov
faddp
cld
mov
aaa
andb
xor
lods
outsl
rorb
jg
lret
xor
cmpsl
mul
imul
into
dec
sbbb
sbb
int
stc
xchg
int3
jmp
repz
std
in
jge
lcall
cltd
testb
loope
jo
out
imul
test
xchg
mov
fidivrs
push
dec
in
leave
rcl
repz
add
cli
mov
push
repz
sbb
jbe
subl
add
and
pop
clc
xchg
div
in
sub
gs
lods
in
dec
sti
out
fiaddl
and
leave
mov
jne
add
mov
out
incl
inc
mov
stos
dec
pop
mov
xor
mov
add
jae
mov
sbb
adcl
add
xchg
cmp
mov
sbb
jg
pop
test
sti
inc
push
stc
push
sub
sbb
jecxz
push
add
mov
jbe
stc
pop
cmpsl
sti
dec
in
push
jl
push
mov
jo
xorl
out
fiaddl
in
js
pop
push
pop
mov
xor
insl
sar
inc
fnstenv
movsl
sarl
addl
rcrb
scas
xchg
jns
fidivl
daa
sub
scas
scas
mov
jnp
cltd
lock
insb
jb
sbb
add
sub
add
ja
push
mov
mov
js
out
adc
clc
mov
push
mov
out
insb
orl
ret
rol
in
mov
ret
adcl
mov
mov
test
andb
sbb
xchg
xor
out
rorb
out
push
popf
pop
sub
inc
ds
insl
in
dec
popa
mov
sub
xor
sub
mov
push
jg
loop
fcompl
loopne
pop
push
sbb
inc
xchg
dec
test
dec
adc
adc
mov
aas
stc
pop
pop
aad
dec
arpl
xchg
cmpsl
push
les
ret
stos
inc
nop
aas
les
pop
inc
mov
mov
out
pop
testb
ljmpw
adc
push
pusha
scas
adc
inc
aaa
ja
adc
xor
enter
push
loopne
test
js
or
pop
in
xchg
in
xor
adc
rcrb
adc
je
lcall
add
lock
out
cmp
mov
xchg
xor
out
andb
xchg
je
movsl
lcall
mov
call
inc
ficomps
insb
mov
cmp
shll
push
cmp
xor
mov
test
sub
or
mov
lcall
cmp
das
out
fdivl
push
or
jo
sub
mov
cmp
pushf
sbb
mov
mov
inc
fcom
orb
popa
jnp,pn
pushl
xor
pop
sbb
xor
data16
clc
iret
dec
fdivr
jae
inc
push
xor
mov
pushf
aaa
sub
dec
cmp
lcall
adc
hlt
je
push
jmp
cmc
ds
lret
mov
test
inc
adc
std
shl
jnp
push
in
fs
mov
std
scas
push
adc
pop
imul
insb
xchg
out
sbb
imul
xor
inc
clc
insb
cmp
dec
push
push
pushf
mov
iret
jle
xorl
cmp
jno
lds
lods
cmp
popa
mov
xor
push
add
mov
cli
sub
cmp
xchg
cltd
andb
insb
sbb
rcrl
sarb
xchg
fisttpl
shr
push
test
stos
cltd
inc
dec
popf
ficomps
fisttpll
stos
rorl
outsb
mov
sub
lret
xor
cmp
dec
xchg
sbb
push
mov
mov
in
in
scas
mov
testl
mov
sub
lea
mov
jae
pushf
push
je
sub
fs
lods
adc
insl
xchg
loop
in
dec
mov
push
mov
roll
enter
mov
scas
enter
jmp
jb
scas
push
imul
pop
out
dec
or
sub
clc
xor
add
jp
push
push
rcrl
xchg
les
inc
lcall
push
pusha
jmp
imul
cwtl
sub
or
movsb
inc
inc
cli
mov
cmp
in
add
fists
cmp
nop
add
movsl
lock
xor
push
mov
inc
xchg
xor
outsb
popf
or
jp
jmp
int3
push
and
aad
xor
or
jecxz
addr16
aas
adc
and
int3
jecxz
mov
jle
and
pushf
out
js
fsub
add
sub
fbstp
and
into
notb
pop
test
adc
imull
push
dec
cmpb
cmp
mov
push
push
arpl
cld
mov
jle
add
jg
aaa
sub
dec
mov
flds
cmp
cltd
inc
jle
add
ficompl
push
out
and
int3
loopne
push
insl
dec
jg
or
jp
arpl
sbb
xor
push
sbb
cmpsb
push
in
jbe
mov
push
call
pushf
xorl
jae
adc
cltd
decl
lods
adc
bound
sub
int
fcomps
xor
sti
insl
mov
pop
jnp
add
mov
inc
test
lds
cmp
repz
push
or
adc
push
pop
mov
or
test
sbb
cmpsl
pop
hlt
mov
xchg
fidivl
mov
adc
pop
mov
push
xchg
dec
push
dec
movb
jns
dec
iret
idiv
jb
cmpsb
xor
sahf
adc
inc
adc
int3
mov
fimuls
dec
ret
call
shrl
sbb
dec
or
pop
cltd
pop
lods
dec
mov
addb
fs
fisubs
subb
xchg
xchg
cs
mov
int
push
xchg
xchg
sahf
cmc
pop
jns
fwait
cltd
xchg
popa
dec
mov
shl
mov
cli
jo
cmp
sbb
mov
rclb
pop
ja
push
sbb
insb
add
rolb
jbe
in
mov
and
lods
sbb
sub
andl
and
sub
jne
repnz
add
push
mov
fnsave
mov
jmp
mov
adc
dec
jl
jns
jnp
inc
je
scas
xor
stos
divl
roll
mov
xchg
inc
adc
inc
aad
dec
mov
sbb
fnstenv
xor
leave
pop
inc
inc
pop
test
int3
inc
scas
jbe
lock
ss
stos
fs
les
add
in
cmp
fs
negl
insl
sbb
iret
mov
mov
int3
adc
sbb
jno
rcrl
cmp
lods
mov
ds
es
adc
movb
fwait
scas
xlat
xchg
out
loop
sub
jo
leave
pop
into
sarb
inc
mov
js
inc
sub
aaa
sbb
jle
mov
push
or
dec
push
push
xor
data16
cmp
das
rcll
lret
lock
dec
pop
add
mov
subl
and
loopne
xchg
test
xor
and
cmp
int
lahf
flds
push
idivb
push
mov
ljmp
test
aas
xchg
lods
and
es
ret
sbb
clc
sbb
mov
cmpsb
fndisi(8087
js
cmpsl
sbb
dec
cmp
aad
fdivl
inc
test
enter
shlb
mov
jnp
lods
push
lret
pusha
sbb
iret
rolb
or
xchg
repz
mov
iret
ljmp
jae
mov
stos
es
cmp
push
xchg
add
cmp
sti
dec
push
add
jl
add
addb
loop
sub
outsl
lret
add
cld
pop
dec
jle
scas
add
cld
scas
test
inc
sbb
es
jg
mov
push
scas
in
adc
inc
fdivs
xchg
in
lock
ret
push
sti
fidivrs
xor
or
adc
aaa
ss
daa
xor
cmp
or
pop
orl
scas
jg
dec
add
xor
fs
inc
adc
xchg
mov
daa
add
adc
sub
adc
addr16
sub
jnp
jno
push
int
dec
pop
xchg
in
addr16
mov
sub
cltd
inc
mov
ret
xlat
mov
cmpsb
jmp
push
stos
dec
shll
xchg
aaa
pop
bnd
jp
xor
adc
push
mov
addr16
mov
dec
cmp
in
rcrl
adc
push
cltd
call
daa
outsl
push
and
adc
inc
sti
mov
push
add
ja
pop
pop
cmpsl
push
flds
sbb
sub
ret
jg
dec
xchg
shl
mov
mov
xchg
or
fsubr
push
sahf
push
inc
mov
mov
or
inc
sub
repnz
and
cmp
test
cmpsl
jbe
hlt
ret
mov
sub
mov
pop
int
mov
jno
stos
or
inc
mov
inc
scas
lods
add
dec
ds
or
pop
jg
pop
in
mov
sarb
cmp
lcall
xor
jne
xchg
daa
inc
jle
out
cwtl
adc
fldcw
popl
pushl
jge
or
mov
fcomi
inc
jmp
mov
mov
push
call
ljmp
mov
adc
hlt
mov
xor
cmc
adc
fistpl
adc
mov
xor
and
fidivs
push
popa
adc
push
mov
daa
rolb
sar
sbb
pop
jbe
inc
mov
mov
pop
lock
xchg
je
sarb
xor
outsl
jo
jecxz
rcll
in
sbb
and
div
into
mov
ja
out
adc
push
negb
cwtl
stc
xchg
cmp
loop
out
clc
xchg
fwait
and
jo
orl
cmp
ja
push
push
sub
jne
adc
sarl
pop
sbb
lret
scas
sub
insl
jle
inc
lret
sub
outsb
cs
insb
dec
push
mov
stos
inc
push
cmp
and
repnz
sbb
es
push
mov
xor
mov
inc
mov
inc
ja
in
popa
bound
mov
xchg
call
cmc
mov
adc
pop
dec
xchg
ret
jl
jmp
dec
xor
or
sbb
cltd
mov
xacquire
mov
call
mov
repz
sub
inc
and
pop
xor
loopne
jp
cmpsb
sbb
pop
xlat
cmp
pop
scas
push
scas
cmc
cmpsl
add
fstpt
repnz
xchg
int
cld
incb
leave
pushf
out
add
jo
push
or
pop
mov
sub
out
popf
add
test
dec
or
sub
mov
cld
push
sub
xor
stc
mov
int
fmul
in
adc
loop
fisubrl
andb
int
aaa
mov
xchg
push
jge
xchg
in
lods
lahf
jae
lret
xchg
or
stos
pop
inc
mov
sti
fistl
loop
sbbb
or
push
aas
cs
bound
repz
nop
mov
push
sbb
dec
push
imul
mov
mov
lods
adc
or
push
in
jne
out
pop
xorps
idivl
rorl
push
adc
cmp
push
loope
jmp
adc
popl
jg
rclb
push
fnclex
arpl
sahf
add
popf
xchg
aam
ljmp
mov
cmp
gs
mov
mov
lahf
and
xchg
push
addb
loop
insl
lock
jmp
cmp
xchg
insl
sbb
cmp
xchg
paddusw
dec
mov
push
repnz
jecxz
rorb
xor
push
mov
inc
xchg
fs
mov
push
ljmp
adc
popa
sbb
out
sti
mov
xchg
xchg
fmul
into
push
or
inc
mov
mov
jnp
jno
jne
mov
cmp
sbb
rcr
add
jmp
or
ret
pop
test
movsb
imul
mov
add
or
lahf
xchg
push
lret
loopne
pop
outsb
xchg
xchg
and
mov
inc
and
cmp
pop
mov
pushf
lods
out
mov
scas
movl
xchg
mov
push
imul
adc
mov
das
cld
xchg
xor
repnz
lods
jae
inc
orb
jnp
ss
out
movsl
int3
popa
or
clc
mov
das
mov
and
shr
pop
xchg
or
inc
aad
addr16
mov
lds
sahf
mull
sub
dec
xchg
jle
fcompl
in
sbb
dec
lods
adc
mov
aas
mov
notb
out
je
out
mov
lret
rclb
cmp
and
xchg
xor
push
fists
iret
pop
lret
jo
xchg
mov
adc
mov
iret
mov
std
sub
xchg
mov
inc
insl
xchg
hlt
sub
pop
out
push
mov
xchg
sbb
scas
stos
add
pop
xchg
imul
cmp
push
mov
imul
or
movsb
and
sbb
aaa
hlt
xlat
and
xchg
sub
pusha
lahf
in
inc
mov
aas
push
bound
sbb
pop
inc
cltd
out
cmp
add
mov
aad
cmp
xchg
inc
stos
mov
sbb
cmp
fcmovnb
mov
out
lcall
je
enter
cli
push
dec
fucompp
xchg
jecxz
xchg
lahf
or
jne
stc
pusha
sti
pop
in
repz
adc
mov
popf
clc
enter
push
cltd
lods
out
inc
push
push
push
pop
sbb
frstor
out
jl
mov
addr16
mov
xor
dec
pop
outsl
loope
jo
test
lret
adc
lahf
jo
mov
mov
pop
inc
adc
mov
xchg
mov
fisubrl
outsl
xchg
fucomi
dec
sub
cwtl
mov
cmp
lods
lods
loopne
xchg
imul
out
fcomps
fwait
or
aaa
pop
ljmp
pop
jno
loope
jae
repnz
pop
es
repnz
sahf
adc
ret
outsl
jno
movsl
cwtl
and
hlt
xor
ds
pop
cmp
outsb
stc
pusha
mov
test
xchg
popa
push
mov
data16
cmpsb
and
cmp
sub
push
fnstcw
mov
mov
fsub
sbb
in
outsb
mov
xchg
ret
xor
sbb
dec
jle
inc
xor
and
jmp
sbb
xor
push
add
rol
shl
xor
dec
jl
clc
adc
das
mov
xor
xchg
fcomps
mov
cli
aaa
push
sub
cmp
xor
and
cmp
sbbb
cmp
or
ret
adc
cmpsb
into
push
pop
sahf
pop
pop
es
or
dec
sahf
iret
clc
jp
jg
movsl
addb
and
and
cmp
jae
ljmp
jmp
loopne
dec
and
mov
cmp
xlat
jle
inc
xchg
mov
repz
pop
xor
cltd
add
jp
cmpsl
fstl
mov
popf
shl
pop
scas
xor
inc
mov
cmpsb
cs
dec
cmp
loopne
mov
xchg
ds
dec
dec
je
and
nop
and
in
inc
push
sti
or
jle
sbb
sbb
out
leave
xor
mov
sub
stos
incb
dec
fisttps
test
repz
jae
mov
call
in
cmp
mov
jne
dec
enter
or
and
add
aad
inc
imul
cmc
sarl
ja
shl
shl
pop
mov
fsubr
adc
lret
push
mov
aas
or
inc
fucom
cmp
fimuls
adc
xor
or
dec
dec
sbb
pusha
adc
sub
fstl
push
ljmp
insl
in
inc
adc
jbe
hlt
jns
inc
test
stos
outsl
imul
test
push
rcll
lock
sbb
ret
dec
dec
pop
adc
cli
enter
sbb
push
mov
fs
es
fadd
mov
jne
xlat
jae
je
push
jae
jnp
fwait
xchg
ja
or
mov
es
fcompl
push
je
enter
int3
and
pusha
mov
jg
and
cmpsb
inc
jno
fbld
mov
je
add
mov
test
cmp
lock
test
jbe
call
pmullw
stc
dec
icebp
out
or
jns
insl
or
addl
cwtl
jns
mov
mov
inc
fwait
test
lahf
icebp
daa
repz
scas
pop
testb
xorb
sbb
out
cwtl
mov
iret
mov
push
ja
xchg
cltd
data16
fdiv
jg
jmp
xor
add
mov
fs
fs
xchg
rclb
stc
mov
shl
mov
adc
push
mov
jmp
jb
jl
and
pop
sahf
push
inc
dec
cli
jbe
lods
mov
pop
xorl
js
adc
pop
lods
dec
loop
nop
or
inc
pop
jecxz
cli
cmpsl
lea
inc
cmc
adc
mov
mov
mov
push
push
rcrl
orl
cld
pop
adc
mov
testl
popa
repz
pop
ror
jb
aas
push
fcoms
sahf
testl
addb
popa
enter
aaa
or
jl
aam
out
cmc
test
rorl
xchg
das
fisttpl
clc
mov
jg
mov
dec
stos
movsl
gs
iret
push
add
inc
roll
out
shlb
mov
sub
and
xor
or
mov
xor
add
or
jl
stos
sti
insb
lcall
adc
mov
sets
sub
lods
mov
dec
inc
les
repz
lcall
cmp
lea
pop
push
push
sbb
out
repnz
in
mov
pop
and
adc
cltd
lret
cmpsl
sarl
push
adc
clc
ret
jl
and
pushl
cmpsb
adc
and
and
lods
outsl
cmc
xor
and
cmc
sahf
cld
fiaddl
jns
pop
push
jge
fidivrs
fwait
push
sbb
shl
testl
add
xor
cwtl
test
testb
sub
movlps
fisubl
jnp
mov
jae
je
daa
inc
xchg
inc
cltd
scas
in
add
fidivl
test
or
mov
fidivrl
jae
jmp
pop
mov
or
cwtl
xchg
fcoms
popf
imul
fcompl
insl
mov
xor
js
xchg
mov
pushf
daa
pop
cld
cmp
in
push
adcl
push
in
xchg
mov
cmc
hlt
stos
pushw
push
lea
dec
out
mov
mov
xchg
sbb
push
leave
mov
sub
fstps
xchg
dec
xor
jbe
xor
add
js
inc
sub
lcall
xor
imul
data16
fisubrs
xlat
sub
out
push
push
sbb
push
dec
js
cmpl
fsubr
jmp
mov
xor
fucomip
cmp
mov
and
xchg
pop
add
mov
jb
adc
addr16
sbb
dec
stos
popa
push
push
in
jle
jecxz
mov
iret
test
push
add
xchg
sbb
xchg
repnz
or
cltd
repnz
sti
sar
push
cli
pop
dec
cmp
and
cmp
pop
xor
xchg
inc
addb
inc
sbb
aas
cmp
xlat
push
inc
lret
jle
rorl
mov
inc
aam
xchg
lret
mov
sub
jno
stc
rcl
cmpsb
inc
sub
loop
rcll
xchg
dec
bound
call
jg
add
fcompl
mov
mov
jmp
and
call
fistpll
into
rolb
ret
sahf
pop
or
xchg
pop
les
dec
xor
pop
movl
loop
ret
outsl
in
adcb
and
or
xor
pop
int
xchg
pop
pop
mov
sbb
dec
xor
pop
sub
push
mov
mov
pop
cld
add
imul
int3
stos
popf
and
lcall
data16
add
or
jp
sbb
sub
pop
inc
les
dec
cmp
nop
push
ret
cmpsb
testb
or
push
sub
shr
jg
lock
lcall
mov
mov
pop
stos
fildl
pop
clc
sub
jmp
scas
cmpsl
outsb
lock
popa
dec
movsl
add
pop
pop
sub
pop
daa
push
mov
or
xchg
int
in
outsb
std
or
lea
mov
sbb
mov
or
and
mov
out
pusha
in
daa
xchg
and
jne
je
rorl
in
or
daa
or
mov
cmp
inc
mov
inc
jg
and
fdivl
push
fcomps
int3
sub
and
push
flds
inc
in
clc
out
push
mov
arpl
bound
lds
mov
dec
jle
push
push
cmpsl
inc
add
jg
add
pop
cs
enter
jg
pop
sbb
data16
and
mov
popf
sar
int3
inc
mov
cltd
and
pop
xchg
or
pop
push
pop
into
and
and
sbb
cltd
imul
adc
sahf
jmp
daa
mov
xor
adc
mov
mov
fstpt
jmp
push
loopne
popa
insb
inc
jne
das
and
movsl
lds
add
imull
dec
cmp
dec
pop
cltd
dec
into
and
mov
xlat
mov
cmp
or
bound
jp
movsl
jle
adc
scas
xchg
mov
cli
and
sti
loop
xchg
cmpsl
daa
adc
and
cmpsb
int3
inc
loopne
pop
cli
out
xor
adc
inc
lock
push
call
jns
out
inc
cmp
shl
fnstenv
cmp
cmp
xor
repnz
sbb
xchg
inc
mov
fsubrl
lods
xchg
inc
cmc
imul
xchg
mov
lock
adc
bound
mov
xor
and
xor
dec
das
push
test
xchg
and
fs
test
sbb
mov
arpl
jae
dec
cmpsb
roll
inc
mov
adc
fsubp
mov
movsb
dec
jge
push
insb
test
or
mov
dec
sub
sbb
dec
xor
lods
mov
mov
loopne
insb
xchg
popa
jo
xchg
outsl
ss
cltd
lods
push
mov
ljmp
sub
les
mov
pop
loop
test
push
outsl
push
cmp
movsw
jns
les
nop
mov
pop
sti
popf
jbe
mov
movsl
pop
and
stos
fisttps
into
int3
pop
hlt
ja
shr
sub
fwait
orl
add
scas
outsl
xlat
je
adc
andl
xor
xchg
repnz
hlt
mov
xor
adc
lahf
fdivl
push
scas
movsl
or
movl
jp
push
aas
popa
aaa
adcl
push
and
fimuls
std
xor
fadds
or
add
bound
mov
sbb
jp
mov
ss
ftst
jl
xchg
inc
xor
in
push
mov
push
jl
es
inc
out
and
aas
jnp
mov
push
add
loope
push
pop
and
mov
jmp
iret
adc
call
inc
inc
jbe
inc
pop
fs
push
mov
push
in
cwtl
push
jle
dec
xchg
sub
sub
jno
and
or
repnz
xor
mov
enter
add
in
repnz
test
fs
mov
pop
ljmp
mov
movsl
and
push
mov
mov
sbb
xchg
int
jl
and
lods
or
push
inc
mov
in
mov
addr16
mov
xchg
xchg
xor
hlt
outsb
std
xor
sub
jl
inc
popa
cmp
xor
ss
in
fdivrl
divb
inc
out
ja
fidivl
sub
adc
mov
adc
ja
lea
push
fwait
lahf
std
cld
ficoms
adcb
pop
shlb
out
scas
jo
sub
push
mov
test
sbb
sub
add
jg
dec
jmp
pop
repnz
aas
pop
orb
loopne
dec
mov
loope
xchg
dec
dec
mov
loope
push
push
push
sub
bound
push
or
jge
jns
fcompl
pop
out
xlat
add
fs
lods
adc
add
pop
xchg
mov
iret
loop
jecxz
movsb
lea
scas
out
fsts
orl
add
int
out
and
mov
icebp
and
arpl
repz
jae
fistl
mov
ret
sbb
shlb
cmp
sahf
cmp
add
lods
inc
cld
add
and
aam
popf
sarl
fisubrs
jo
ljmp
xchg
sub
xor
lea
cs
mov
pop
pop
enter
in
pop
popf
cmp
and
movsb
cmpsl
sbb
mov
jmp
inc
scas
das
push
sub
stos
movsb
aam
loop
pop
jg
scas
and
stos
jno
xor
sub
lods
xor
or
cli
inc
jne
xor
mov
jae,pt
fdivs
testl
ja
xchg
scas
aas
cltd
inc
pushf
cmpsb
and
test
jg
mov
andl
sbb
lcall
push
ss
in
dec
xor
arpl
nop
sub
int
pop
push
fwait
push
inc
lahf
xor
push
or
xor
jbe
add
jmp
push
loop
or
sub
lods
jbe
jns
mov
jns
rcl
xor
mov
cmp
ljmp
js
mov
ffreep
cmp
mov
ja
adc
or
pop
xor
pop
push
out
out
mov
xchg
push
mov
push
mov
push
popa
into
xchg
and
bound
out
sub
mov
fidivrl
add
js
mov
sub
mov
sbb
jb
clc
fs
sub
pop
or
arpl
dec
xchg
mov
or
test
xchg
cltd
add
pop
cmp
test
fcmovbe
hlt
rcr
jl
into
adcl
nop
push
push
movl
dec
fistl
ret
js
call
cmp
jno
and
pop
pushf
jmp
xchg
dec
xorps
lcall
movsl
adc
mov
xor
into
dec
inc
popf
xor
xchg
subl
mov
pop
xor
orl
mov
std
mov
and
shrb
fdivs
das
aas
fdivs
xor
cltd
mov
mov
mov
cmpsl
mov
pop
movsb
dec
pop
mov
inc
stos
sub
dec
inc
call
test
or
lahf
mov
imul
sub
adc
xor
test
push
sbb
fistpl
test
adc
dec
pop
in
cld
add
pop
xor
loop
std
test
jmp
xor
add
and
and
xor
pop
fisubrs
add
xchg
jns
pop
ret
add
mov
icebp
leave
push
sub
andl
pop
aad
decl
cli
push
orl
jns
xchg
gs
xchg
out
mov
xchg
add
repnz
sahf
push
inc
sbb
insl
push
xchg
jb
scas
push
out
vmwrite
inc
xor
push
add
dec
add
jg
add
hlt
out
test
cli
inc
daa
add
orb
mov
dec
mov
sub
stc
mov
call
popf
pusha
cwtl
jnp
movsl
lcall
mov
jb
cmp
stos
movsb
jle
sbb
xor
fdiv
insl
mov
push
adc
popa
bound
or
mov
out
lret
loope
adc
ficoms
outsl
jp
lods
mov
sub
push
xchg
dec
and
sbb
pop
cmc
stos
adc
pop
pusha
sahf
cwtl
lahf
xor
xchg
jno
xor
mov
gs
iret
loope
insl
out
movsb
rclb
loopne
and
mov
dec
sbb
notb
jnp
sub
inc
sub
pop
call
sahf
mov
out
mov
sti
std
imull
rclb
mov
in
or
mov
mov
shrl
and
mov
pusha
cs
jle
pop
daa
sub
in
mov
dec
js
inc
lock
stc
lahf
add
or
rolb
push
orb
in
inc
sti
icebp
aam
mov
jecxz
jno
test
jg
cmpsl
rcll
lcall
iret
mov
push
dec
and
sub
pop
cmp
mov
bound
pop
bound
jno
in
insl
ja
and
hlt
jae
cld
push
xor
or
movsb
gs
cmpl
pusha
in
pop
adc
out
push
inc
sbb
loope
push
call
xor
cmp
pop
mov
scas
pop
or
jle
jle
mov
pop
pop
jbe
cmp
xchg
popf
adc
cwtl
jmp
mov
and
mov
inc
mov
movsb
in
xchg
aam
out
dec
pop
mov
sub
jne
or
ret
mov
mov
sbb
jg
outsb
push
sbb
ror
lods
xor
mov
push
stos
dec
lods
hlt
cmp
sub
mov
add
jmp
int3
stos
loop
adc
lods
ja
popl
xchg
test
fdivs
jae
xorl
xchg
xor
cmp
lcall
out
mov
mov
cli
nop
dec
jnp
push
mov
mov
mov
icebp
xor
mov
cli
adc
jl
xchg
xchg
jecxz
data16
repz
push
daa
leave
ffreep
push
push
in
mov
sub
sbb
sbbl
adc
lea
movsl
and
loopne
mov
or
mov
mov
fs
andl
imul
jge
gs
lahf
pop
roll
pop
ficomps
inc
jns
push
jnp
addl
dec
into
call
shl
mov
lret
out
or
out
in
mov
xor
sbb
notb
mov
xchg
pop
cmpsb
ret
inc
inc
cld
loope
shr
mov
jnp
xor
push
inc
push
imul
push
aas
push
cmp
add
push
and
repz
xchg
xor
sbb
mov
jmp
stos
mov
cmp
int
xchg
test
push
fwait
dec
inc
outsl
push
mov
leave
or
dec
hlt
mov
mov
add
aam
cmc
mov
aad
jb
es
mov
mov
jbe
test
pop
test
out
in
pop
ja
push
movsb
mov
sti
and
in
enter
xor
jmp
iret
sub
and
push
sahf
mov
rcrl
sub
push
aad
sub
mov
xor
mov
test
xchg
test
fsubrs
cmpsb
cmc
or
out
jb
mov
negl
push
daa
jp
sti
inc
std
adc
jg
push
cwtl
mov
lds
mov
xchg
sbb
aas
sti
out
in
in
cmp
into
or
arpl
xor
xor
ret
inc
lahf
mov
test
cmp
dec
dec
push
loop
dec
loop
stos
in
ja
pop
insl
call
loope
mov
test
test
xchg
add
fdivs
push
in
lods
sahf
mov
outsl
mov
orl
dec
push
sbb
les
push
add
dec
mov
fnstcw
mov
jl
jbe
jne
add
adc
leave
loop
push
fwait
dec
shrb
scas
fwait
mov
jne
xchg
mov
mov
ror
xchg
and
mov
and
adc
adc
xchg
jecxz
mov
test
adc
jae
insb
add
pop
xchg
push
daa
inc
ljmp
mov
jecxz
cmpsb
mov
gs
ret
jl
cmp
fldt
push
mov
mov
loop
fs
ds
pop
or
scas
aaa
pop
mov
push
ja
call
dec
stos
incb
push
pop
in
aas
fldt
sub
rcrb
push
into
sub
mov
jno
notl
fidivs
and
ljmp
je
call
push
scas
test
loope
aas
adc
scas
jp
pop
xor
lea
push
and
add
bound
loop
sub
iret
xor
ficomps
adc
mov
inc
xchg
and
fwait
hlt
mov
mov
xchg
rorl
mov
movsb
pop
xchg
jle
lods
mov
cmp
sbb
push
pop
jmp
mov
stc
jg
shl
pop
adc
lcall
mov
js
idivb
push
sbb
jmp
shrb
mov
xchg
inc
push
pop
push
sub
and
fcomip
sbb
push
sub
pop
fcomps
iret
xchg
ds
ret
lds
xor
ja
add
std
fwait
mov
mov
jge
xchg
lahf
push
mov
xchg
mov
hlt
test
movups
adc
push
push
and
pusha
ds
jl
mov
das
push
push
stos
lahf
jg
subl
lea
push
jle
sbb
or
inc
sarl
sbb
cmpsl
enter
mov
xchg
aam
outsl
in
das
add
pop
xchg
jp
inc
lods
rep
cwtl
pop
cmpsl
test
mov
out
push
push
ljmp
nop
jl
cmp
xchg
xchg
loope
jmp
or
lahf
cmc
out
mov
scas
xor
pop
mov
sti
mov
nop
jge
jb
mov
cmp
subl
pop
mov
and
mov
outsb
insb
cwtl
jb
jb
in
dec
push
cmpsb
cmp
cmc
mov
or
out
add
push
and
adc
stos
jno
sbb
pop
pop
mov
aas
outsl
inc
inc
xor
cli
enter
dec
jl
lock
or
cs
rolb
and
rcrl
or
adc
loopne
xor
jg
mov
adc
nop
outsb
mov
pop
pop
stc
dec
cmp
inc
mov
push
inc
mov
cmpsl
loope
adc
or
clc
je
stos
movsw
push
idiv
mov
stos
push
xchg
insb
jb
cmp
pop
sub
xchg
andl
mov
sldt
push
xor
shlb
jne
movsb
jo
movsb
int
sbb
imul
ss
cmpsb
cmp
push
add
add
aas
aas
inc
mov
stos
aam
aas
mov
stc
push
ljmp
aam
xchg
ret
nop
inc
popf
push
or
push
fisttps
or
loopne
push
pop
shlb
lcall
sbb
and
add
int3
mov
push
pusha
int3
in
in
roll
mov
js
jg
mov
jge
icebp
inc
cmpsb
pop
int3
add
insb
mov
xchg
add
push
push
push
mov
and
stc
cmp
xchg
dec
addr16
repz
push
data16
dec
jg
shlb
sub
xor
push
lcall
inc
ficomps
adc
lea
jl
test
sbb
ret
dec
lds
jb
test
xor
ds
insl
fnstenv
fistpl
es
dec
mov
sbb
adc
clc
jae
les
xchg
lahf
or
fldenv
adc
js
bound
mov
adc
into
fldcw
sub
push
insl
pushf
insb
loop
mov
loopne
cmp
jge
stos
dec
fs
fs
sub
cs
push
add
xchg
xlat
outsb
sub
lods
pushf
repnz
insb
pusha
popa
and
fwait
pop
lret
jae
jle
imul
lea
std
fwait
sbb
mov
add
cld
movsl
mov
push
jle
lahf
mov
mov
dec
mov
mov
aaa
xlat
lock
xchg
addb
lcall
inc
test
jg
imul
dec
imul
dec
rcrl
or
inc
cli
popa
cwtl
or
ds
mov
fistpl
out
lret
and
xchg
sbb
mov
pop
iret
adc
add
test
mov
mov
imul
or
sahf
ss
ret
mov
mov
ss
cmp
jo
jle
pop
iret
mov
stc
sub
sub
ficompl
adc
rcr
sbb
mov
das
mov
cmp
xchg
push
xor
jo
call
sbb
push
xor
cltd
clc
xchg
adc
mov
aad
fsubs
fsubrs
jl
cmc
xor
loopne
inc
push
movb
insb
call
in
lods
add
pop
inc
mov
fisttpl
xchg
sbb
dec
fisubs
dec
inc
mov
jle
call
adc
xor
inc
push
mov
lcall
or
and
outsl
jbe
fs
or
pop
sbb
adc
notb
mov
ja
out
jmp
push
flds
mov
jnp
inc
mov
cmp
sti
push
pop
lahf
and
mov
int3
or
pop
push
and
fucomi
mov
dec
cwtl
mov
repnz
mov
movsb
jo
test
mov
ss
xchg
xchg
ret
jmp
call
enter
popf
testl
dec
adc
out
jle
xchg
adc
js
data16
rcll
shll
test
sbb
mov
neg
mov
adc
jecxz
ljmp
mov
mov
fmull
nop
pushl
loope
push
cmp
push
cmpxchg8b
push
mov
add
in
test
and
mov
fcom
xchg
dec
xchg
pop
dec
fsubrs
add
mov
out
rcl
popf
or
movsb
inc
sbb
xor
cld
pop
xchg
xchg
lret
inc
add
lods
movsl
roll
loope
out
lds
dec
jbe
mov
mov
or
into
mov
icebp
jg
sti
leave
xchg
cli
or
int
jmp
cli
inc
leave
cmp
into
xchg
dec
imul
mov
sub
ret
in
sbb
mov
rolb
movsl
outsl
xchg
pop
cmpsl
cmpsl
ficoms
jne
aam
sub
cwtl
je
mov
call
mov
xchg
leave
pusha
fmul
ss
sub
test
test
push
sti
jno
scas
into
or
adc
fwait
out
insb
push
inc
jno
aaa
pop
xchg
or
out
rorb
jb
cmc
inc
cld
orl
aas
mov
cmp
aam
daa
arpl
into
add
mov
dec
bswap
inc
cmp
enter
mov
mov
shlb
addr16
add
nop
push
int3
cld
out
sarb
iret
ret
jle
lods
shl
xchg
xor
test
xchg
mov
sub
aam
outsb
and
cmp
pop
or
mov
push
mov
shl
mov
push
inc
sbb
xchg
inc
mov
mov
loop
cli
fsubr
aam
lea
repz
outsb
cmp
icebp
data16
pop
jno
or
pop
cmpsb
out
pop
cmpsl
pop
inc
push
jecxz
dec
xor
lcall
xor
push
inc
lret
mov
sbb
mov
imul
and
jbe
jl
jp
mov
cwtl
fdivp
aas
sbb
add
pop
xchg
jo
inc
call
inc
sbbl
inc
ljmp
cmp
out
pop
pop
jmp
addl
cmp
add
xor
pop
or
mov
sub
and
inc
sub
dec
sqrtps
cld
jb
mov
jmp
out
adc
push
mov
lods
mov
cmpsl
mov
add
aaa
xchg
aad
pop
sbb
xor
pop
jae
xchg
push
aaa
ds
mov
hlt
stos
pop
jne
lea
add
xchg
outsl
sarb
sub
sub
sbb
dec
xor
mov
outsb
lds
sub
cmp
fcoml
xor
out
adc
aad
mov
push
ret
pop
mov
xorb
out
push
mov
daa
fimull
outsb
inc
add
or
inc
mov
inc
stos
pop
mov
iret
mov
fdiv
fdivl
stos
out
xor
and
imul
cmp
pop
in
int
or
sub
mov
ret
cld
fisttpll
stos
fldenv
pop
scas
call
inc
mov
rclb
js
inc
mov
mov
cmpsl
fcomi
jbe
pop
pop
movsb
aas
mov
or
lea
pop
push
adc
std
push
dec
cmpsl
cwtl
lret
das
and
push
sbb
mov
out
in
push
cmpsb
sub
fldenv
scas
ljmp
pop
cwtl
push
sahf
xchg
les
js
or
fdivl
out
in
inc
cmp
loop
aad
clc
repz
push
enter
inc
jl
dec
xor
cli
mov
mov
push
mov
loop
and
xor
pop
scas
xchg
inc
ja
ljmp
sti
xlat
movsb
jns
divb
cmp
mov
scas
mov
jo
jmp
out
push
nop
mov
jecxz
jmp
jb
ss
cmp
push
adc
or
and
das
cmp
test
adcl
aam
shll
lret
jge
ja
iret
pop
and
push
arpl
in
adcb
add
fsub
mov
sbb
pop
or
mov
push
sbb
bound
sbb
pop
bnd
test
xchg
movsb
mov
cmp
das
xor
pushf
rorb
sub
fisttps
or
fiaddl
mov
adc
pop
push
pop
or
gs
hlt
mov
mov
xchg
or
and
ss
lds
fadds
xchg
jo
or
mov
lret
fmuls
ss
sbb
mov
jg
push
sbb
ss
shr
cli
mov
sbb
xlat
push
jmp
adc
iret
xchg
std
lds
xor
insl
mov
mov
mov
mov
out
jecxz
jo
aaa
test
push
dec
sar
inc
push
in
jmp
scas
sbb
adc
or
lahf
pop
lods
imul
mov
ds
stos
or
mov
outsb
addl
hlt
in
ficompl
rcll
jns
js
in
out
jne
out
js
test
inc
inc
shrb
or
mov
clc
jne
mov
lret
rcl
shll
sub
cmp
out
sbb
xchg
insb
cmpsb
pop
shlb
inc
pop
fs
xor
fidivrl
in
mov
mov
mov
loope
or
mov
mov
xor
imul
aam
shll
je
pop
push
arpl
leave
mov
mov
daa
les
xchg
mov
mov
jecxz
dec
cld
repz
notl
repz
xor
and
hlt
cltd
xlat
inc
xchg
add
out
out
and
inc
scas
push
mov
lret
rclb
inc
out
xlat
test
mov
fdivrl
dec
push
inc
inc
xchg
cltd
xor
mov
inc
test
scas
das
frstor
sbb
adc
in
jbe
and
lods
stc
popf
scas
push
cmp
aaa
cmp
mov
ret
inc
mov
mov
pop
lret
inc
and
sbb
ret
repnz
subl
mov
movsl
pusha
push
popf
sarb
adc
popa
sbb
jno
sub
ret
fadds
arpl
xchg
mov
movsl
pusha
or
js
jmp
pop
mov
mov
pop
sbb
push
mov
adc
ss
lcall
dec
sbb
sbb
jo
jb
aad
mov
iret
pop
call
and
shlb
mov
mov
sti
and
dec
mov
bound
lea
cs
adc
int3
mov
dec
xchg
inc
jg
pop
mov
push
leave
cmp
xor
rcr
in
inc
lock
sbb
dec
jl
iret
xchg
mov
jno
scas
xchg
pusha
inc
mov
xor
movsl
orl
sarl
dec
sub
fisttpll
outsb
pop
add
adc
sbb
dec
cmp
push
mov
bound
mov
jl
addr16
jno
loope
orl
xchg
pop
shrl
iret
jge
jl
imul
jmp
sub
addb
add
mov
xorb
push
rorb
push
nop
xor
inc
cwtl
mov
mov
pop
mov
cmpsl
dec
push
hlt
push
in
mov
push
fs
xacquire
in
push
cmp
shrl
xchg
inc
push
loope
mov
push
mov
insl
mov
pop
adc
sub
ljmp
test
sbb
cld
fdivrs
lea
shrl
lret
or
into
mov
addb
push
sbb
repz
push
dec
jge
repz
push
pop
in
sbb
repnz
xlat
mov
push
in
rcr
lret
xchg
push
hlt
leave
ljmp
fdivrp
pop
fcmovu
sarb
jns
sahf
add
add
dec
sub
adc
sub
fisubl
fwait
jae
jge
pusha
pop
icebp
adc
sbb
scas
scas
notb
stos
in
sbb
daa
mov
movsb
push
inc
shl
adc
dec
push
sbb
pusha
push
cltd
add
test
bound
lock
mov
adc
push
inc
lret
insb
mov
ss
mov
mov
cmp
scas
inc
adc
imul
or
enter
ret
jbe
lahf
mov
or
inc
mov
inc
popa
fwait
sbb
test
movsb
cltd
int3
addl
icebp
and
pop
dec
dec
pop
les
dec
jge
sbb
stos
and
push
sub
push
rdseed
jl
es
cmp
push
shll
add
enter
push
lret
addr16
fsin
aaa
or
lods
push
cmp
call
inc
filds
imul
lds
adc
ljmp
movl
aaa
push
xchg
mov
or
jb
jns
cmp
scas
daa
out
fs
je
mov
pusha
loopne
mov
repz
bsf
pop
adc
mov
js
rcrl
je
dec
fnstsw
ror
mov
push
xchg
int3
out
mov
xchg
jg
xlat
or
jg
adc
popf
pusha
ret
xchg
xchg
repnz
push
inc
mov
in
jge
dec
fcomps
mov
ss
stos
out
cmpsb
fisttpll
stc
mov
xor
js
inc
xor
or
std
pop
lahf
cwtl
sub
negl
into
xchg
mov
test
sub
inc
xchg
push
cmp
add
sarl
cmp
or
pop
jo
sub
cmp
xor
popa
sbb
pop
int3
jg
stc
fsubs
mov
dec
dec
mov
jns
push
fs
fisubrs
or
idiv
ljmp
dec
xchg
stc
mov
cltd
ret
inc
sbb
jecxz
imul
aam
mov
mov
push
jecxz
pusha
rep
sbb
mov
inc
jno
loopne
repnz
push
pop
sbb
xchg
test
sbb
and
jle
out
mov
xchg
int
sub
sbb
inc
push
inc
fnstenv
fstpt
stos
mov
push
pusha
mov
cmpsb
subl
xor
mov
cmpb
and
cltd
aam
push
push
dec
in
mov
cmp
sti
arpl
inc
push
and
inc
sub
inc
test
sub
mov
mov
cli
sbb
sbbb
jle
mov
xchg
mov
lea
mov
add
scas
push
imul
loope
in
push
jecxz
pop
cltd
cmp
xchg
fstpl
movsl
out
xchg
add
stos
xchg
in
les
popa
loope
arpl
shl
stc
testb
fidivrl
dec
movsl
push
dec
icebp
jbe
push
mov
jecxz
scas
pop
push
inc
mov
call
and
and
ret
lods
cwtl
pop
mov
mov
mov
mov
mov
mov
insb
lret
inc
mov
loopne
out
sbb
add
dec
mov
out
jp
cwtl
pop
ret
cmp
mov
jecxz
lret
aas
or
xor
add
push
std
push
mov
sbb
inc
icebp
jns
jge
or
push
es
pop
cmp
fcoml
jns
stos
jns
pop
pushf
pop
sbb
push
adcb
ret
mov
iret
push
adc
add
cltd
cwtl
loope
aas
out
shr
mov
test
push
mov
gs
push
rcl
cmp
repnz
sub
add
js
aad
xchg
stos
push
xchg
jg
mov
push
jae
clc
xchg
pushf
inc
sarl
div
scas
pop
mov
inc
int
call
arpl
fwait
mov
mov
pop
je
jnp
adc
or
std
outsb
loopne
xor
pop
mov
int3
loope
jmp
xor
clc
dec
daa
sbb
xchg
fimull
cltd
int3
mov
pushf
incb
popf
insl
sub
xor
out
cld
test
jl
rcl
sub
in
sahf
daa
adc
jb
sahf
in
sbb
xor
push
push
mov
movsl
mov
shlb
cmp
vmwrite
lds
ja
aas
insl
je
scas
push
xchg
sbb
rcrb
dec
add
into
jl
add
loopne
cmpsl
cmp
mov
insb
lret
mov
xor
subb
or
cwtl
push
push
pusha
scas
lret
fldt
ror
icebp
cmc
pop
daa
mov
pusha
mov
inc
or
mov
dec
jne
xchg
scas
jbe
cmp
cmp
fists
or
je
arpl
sub
xchg
push
fmul
and
cmp
and
add
jge
inc
sbb
repz
icebp
mov
sbb
outsb
mov
cld
jne
add
cld
repnz
subl
push
adc
cs
lods
fsubr
cltd
shl
outsb
bound
inc
mov
mov
loopne
or
hlt
cli
je
sub
incl
cmp
xchg
cmp
movsl
mov
ss
lcall
adc
mov
ds
inc
ret
and
jo
aaa
fwait
cmp
loop
sahf
repz
leave
sub
popa
js
mov
dec
pop
jbe
rol
fistpll
pop
scas
shrb
mov
sbb
mov
sub
pop
scas
adc
fimull
mov
push
loope
addr16
test
loop
sar
out
inc
lea
call
stos
popl
movsl
push
jle
nop
cmpsl
movsb
imul
mov
lds
test
inc
test
int3
cmovno
sar
outsl
push
sub
push
in
ljmp
sbb
dec
fwait
sub
into
lret
mov
es
shlb
es
or
mov
lahf
fisttps
mov
cli
std
inc
aas
add
cmpsb
add
cmp
aas
dec
pop
push
shrb
insl
jle
fmull
call
jp
xchg
sub
mov
add
in
loop
dec
inc
push
mov
cmp
cli
push
cmp
push
adc
fcoms
lcall
dec
and
into
push
xchg
imul
push
call
arpl
and
enter
fwait
ret
mov
mov
adc
iret
push
sub
sbb
dec
outsl
or
xlat
cmpsl
leave
lods
mov
mov
xor
push
and
xor
cmp
ret
icebp
pushf
addr16
dec
out
add
repnz
mov
insl
pop
pop
mov
xchg
stc
cs
cmpsb
inc
push
in
dec
add
cs
dec
cmp
les
adc
dec
pop
in
daa
stos
xchg
testb
xor
xor
fdivp
sbb
push
mov
xchg
pop
mov
pop
lret
dec
out
outsb
add
imul
sub
dec
adcl
or
aaa
hlt
push
jae
jb
je
mov
adc
sub
pushf
sbbl
sbbl
fwait
xchg
cmp
mov
icebp
aad
jno
addr16
cli
aaa
bound
adc
das
add
insl
sub
fiaddl
mov
sbb
add
dec
or
es
and
and
test
dec
jb
push
aam
xchg
mov
sti
cltd
sub
test
addl
lea
dec
push
lret
pop
sub
dec
inc
and
jae
fiaddl
fs
into
mov
popa
stos
lret
aaa
dec
and
loopne
cmpb
dec
test
xorl
push
cs
dec
push
or
push
adc
push
das
hlt
das
decb
frstor
push
repz
sbb
push
loopne
int
jbe
and
rolb
in
cwtl
pop
or
ja
push
lods
repz
int3
mov
xchg
cmpl
add
xor
ret
rclb
test
inc
push
mov
popa
outsl
repnz
jnp
push
xor
stos
cmp
xor
hlt
push
add
jae
mov
push
jecxz
aad
hlt
lods
loopne
lods
clc
in
cmpsl
les
sbb
mov
inc
gs
xchg
xchg
addr16
je
jp
jg
popf
test
cmpxchg
push
cmpb
data16
ds
ss
lods
daa
test
adc
jno
mov
push
cld
bound
jns
mov
jmp
stc
rclb
inc
fisttpl
fs
add
in
cmpsl
es
dec
inc
stos
arpl
enter
xchg
pop
sub
sbbl
and
sub
push
je
xor
adc
test
pushf
fbld
mov
cs
movsb
mov
rclb
in
push
movsb
inc
js
jecxz
cmc
mov
jp
mov
lea
std
push
scas
inc
fs
push
stos
mov
add
lods
and
inc
aas
mov
xchg
addr16
pop
dec
push
rorl
lret
mov
adc
or
out
mov
pop
lods
sbb
jbe
xchg
mov
cmp
insb
mov
mov
es
in
fsubrl
lods
lret
pop
and
lds
pop
rcrb
idivb
ret
mov
movsl
or
or
mov
and
cltd
mov
es
inc
jp
rolb
add
daa
jle
jb
pop
mov
pushf
jae
negl
sub
leave
cmp
mov
sub
dec
adc
arpl
arpl
xchg
rorl
push
cld
in
test
movsl
addl
mov
cmp
mov
data16
shrb
jbe
pop
mov
cmc
sarb
shll
mov
mov
jmp
orl
test
jbe
imul
jne
test
insl
cmp
aaa
or
jmp
sbbb
outsb
mov
popf
xor
pop
jmp
inc
pushf
inc
lods
cmp
and
shl
lods
lods
cmpsb
jb
cltd
push
shrb
inc
stos
pop
dec
push
fnsave
fcmovb
sub
and
and
shlb
insb
adc
cmp
ja
shll
inc
and
jbe
xchg
cld
lret
ja
jle
add
xchg
adc
loop
jnp
cmpsl
and
mov
sbb
iret
dec
dec
jns
movsl
test
adc
aas
cmp
jg
jo
and
or
or
pop
add
mov
xchg
in
fs
dec
and
movsl
aad
pop
inc
iretw
aas
fisubs
mov
adc
xchg
sub
les
xchg
jge
inc
adc
mov
pop
mov
xchg
les
inc
inc
mov
push
lods
push
cld
faddl
adc
sbb
push
lds
fdiv
aaa
jmp
pop
inc
mov
in
sbb
test
pusha
mov
ds
jo
mov
jp
fildll
xchg
inc
sub
subl
pop
negb
jb
fdivrs
in
jns
mov
mov
xchg
loop
addr16
iret
push
pusha
setl
or
gs
orb
mov
scas
push
ljmp
mov
adc
jl
andl
sti
mov
mov
dec
in
and
pop
idiv
pop
lcall
lahf
popa
shll
imulb
jo
test
frstor
into
ret
inc
dec
js
and
cmp
dec
stos
fcmovne
jne
int
xor
push
test
stos
decb
mov
push
push
lret
mov
mov
gs
cli
cmp
xchg
inc
push
pop
repz
cltd
pushl
mov
xchg
dec
orl
mov
rep
loopne
stc
mov
sub
xchg
cwtl
xchg
mov
enter
stc
inc
stos
movsl
lret
push
pusha
shl
bound
pop
push
sub
push
pushf
pusha
sbb
jecxz
or
das
add
lock
in
push
loope
add
aam
or
ja
ret
mov
shrb
xor
pop
sub
or
clc
in
dec
ljmp
xchg
push
outsb
or
mov
es
add
lds
shrl
data16
add
jg
jl
sbb
cmpsl
jmp
pop
mov
in
push
std
xor
jp
std
rcrb
fistl
jge
insb
and
rcrl
cs
cld
mov
and
gs
testl
xor
cmp
lea
mov
jno
push
ret
mov
xor
push
pop
pop
je
movsl
cld
push
sahf
sub
clc
shrb
push
or
clc
push
jnp
mov
lahf
adc
inc
loop
loope
xchg
xchg
rclb
push
imul
cmp
mov
out
dec
mov
loopne
cmp
adc
jmp
xor
inc
xor
cld
mov
cmovp
sub
mov
icebp
jmp
lret
mov
lods
dec
adc
dec
shlb
shrb
ret
shll
js
scas
cmp
xor
push
and
iret
sbb
aas
fisubrs
test
imul
sti
test
dec
jecxz
xchg
xchg
jbe
int
jecxz
sub
lcall
add
add
dec
cmc
aas
repz
jno
xor
sti
mov
dec
fisttpl
mov
jecxz
mov
icebp
lahf
mov
in
shlb
mov
into
pop
fs
daa
sbb
lods
mov
mov
cmp
cmp
jecxz
xchg
pop
fs
nop
add
loop
xor
dec
sub
pop
mov
adc
mov
mov
mov
inc
pop
xor
lds
add
xor
mov
test
adc
in
jne
pop
es
xor
sub
pop
push
jne
ret
insl
push
popf
pop
sbb
cmp
adc
orb
push
cs
cs
scas
sbb
sub
mov
pop
and
push
pop
xor
sbb
xor
loopne
int
scas
clc
mov
sbb
aam
je
push
inc
test
inc
insl
mov
test
push
sbb
lea
mov
dec
push
iret
aaa
pop
push
jns
mov
inc
inc
in
mov
arpl
sub
sub
mov
jo
push
add
popa
add
mov
into
icebp
inc
fdivp
mov
jl
jle
inc
adc
shl
push
lcall
adc
iret
movsl
ljmp
je
int3
gs
daa
test
outsb
pop
jno
daa
dec
and
fcoms
and
rcrb
jl
loopne
mov
std
fmulp
mulb
pxor
mov
sbb
lahf
pop
push
fwait
mov
inc
data16
add
lock
bound
ljmp
dec
lods
inc
out
push
loop
mov
shlb
mov
adc
jo
pop
fiaddl
adc
test
arpl
leave
pusha
fs
sub
rolb
push
sub
jle
out
aad
xchg
or
lds
mov
mov
jg
mulb
jo
xor
cmp
in
xor
xor
fcoms
loope
mov
stc
std
add
cltd
xchg
in
jle
push
inc
mov
aaa
push
and
outsl
sbb
mov
push
dec
push
and
mov
xor
hlt
xor
movsb
sub
cmpsl
movsl
push
pop
fsubrs
pop
xor
imul
sbb
cwtl
mov
cmp
fwait
push
adc
jo
sub
je
js
in
pushf
mov
sbb
push
aad
and
and
arpl
mov
rorb
push
cli
sahf
dec
inc
das
addr16
roll
insb
mov
mov
add
xor
dec
jo
mov
test
orl
enter
jecxz
inc
sub
xor
fucom
xor
sub
mov
adc
pop
sbb
in
jp
into
lock
aaa
faddl
in
adc
aad
mov
lock
subl
push
aas
cmp
push
xchg
pop
cli
in
cmp
aam
int3
inc
mov
sbb
js
mov
adc
pushf
mov
dec
mov
in
xor
sub
cmp
mov
addb
dec
jae
jge
or
repz
int3
iret
mov
xor
adcl
push
add
inc
fsubrs
mov
jns
dec
cltd
cmp
mov
cmc
push
jp
pop
or
outsl
out
and
and
add
imul
or
push
pop
xlat
pop
xchg
pop
mov
out
add
out
ja
or
scas
mov
clc
mov
jns
mov
add
xchg
add
mov
xor
push
cld
jns
test
sub
pop
addb
inc
sub
out
xor
scas
lret
pusha
das
es
sarl
and
shlb
add
pop
les
jnp
inc
fstps
jg
mov
sbb
std
mov
inc
push
adc
xchg
xchg
in
mov
xchg
mov
sti
cwtl
iret
mov
mov
loopne
fisttps
fimull
xchg
repnz
daa
fimull
fdivrl
js
hlt
adc
push
xchg
jmp
mov
mov
xchg
pusha
in
jmp
ds
adc
and
adc
mov
sbb
sahf
push
ficompl
repnz
adc
pop
lahf
adc
sahf
mov
cmp
inc
push
out
cli
mov
orb
mov
mov
sahf
faddl
sub
cmp
dec
mov
inc
test
repnz
stc
jp
lret
leave
sub
inc
push
call
hlt
or
and
repz
js
mov
aam
push
rcrb
pop
cli
rcrb
dec
mov
test
inc
xchg
fs
xchg
push
inc
inc
jl
cs
sub
pop
lahf
ret
sbb
std
inc
data16
bound
or
xrelease
jp
mov
or
and
mov
lret
ljmp
cwtl
movsl
jp
cltd
enter
sbb
scas
ret
mov
outsb
xor
enter
jno
jnp
outsl
iret
insb
js
cmpsb
jg
jg
xor
cmp
pushf
fs
mov
mov
incl
adc
mov
or
cli
xor
lcall
aaa
pop
mov
ret
ljmp
pop
sbb
lahf
outsb
push
js
movsb
icebp
stos
and
movsl
loop
bt
mov
out
sar
mov
xor
lods
or
cltd
xchg
ljmp
hlt
xchg
scas
xchg
pop
cmp
out
jl
jl
dec
add
or
imul
ret
outsb
fsubrl
mov
out
arpl
js
push
and
inc
ds
les
mov
or
jns
std
fiadds
add
push
inc
std
in
stc
xchg
mov
inc
dec
les
roll
adc
sti
je
jns
andl
pop
pop
stos
inc
dec
in
das
xchg
int
stc
outsl
cmpsb
aas
mov
dec
xchg
cltd
jmp
jns
push
movb
data16
inc
push
xchg
movsl
hlt
repz
push
add
test
mov
sub
add
xchg
adcb
inc
fimuls
aam
rcrl
fdivl
imul
test
out
ds
inc
hlt
fwait
pop
fstpl
dec
popf
adc
movl
push
jg
mov
lret
pop
push
addb
addb
dec
repnz
adc
cmc
mov
test
cmp
fldcw
xchg
pusha
sbb
shll
subb
pop
push
or
adc
push
je
std
cmp
aas
push
repnz
jl
movsl
inc
add
mov
inc
and
sub
test
loopne
cmp
xor
repz
cmp
mov
xor
push
test
lahf
pop
aad
adc
and
jno
jge
adc
mov
pop
jbe
cmp
mov
adc
cmovg
cmp
mov
stc
pop
cwtl
scas
pusha
cmp
pushf
in
dec
out
ret
push
and
rorl
add
test
insb
sub
jp
loope
mov
pop
in
inc
sbb
lea
lret
std
adc
xchg
fldt
cltd
outsb
xchg
jnp
push
gs
enter
icebp
imul
dec
adc
lea
mov
lret
xor
rclb
das
popf
push
dec
mov
jno
lret
bound
mov
pop
out
lods
hlt
adc
mov
int3
push
ret
out
inc
out
addb
daa
loop
ljmp
idivb
xchg
xchg
jae
mov
subl
jb
les
fnstsw
mov
lea
dec
pop
jnp
pop
dec
cmp
jns
sbbl
loop
fldl
pop
mov
dec
cmp
lock
jnp
movsl
test
or
cltd
cmc
add
jns
int3
push
cwtl
fdivr
mov
arpl
lds
insl
in
lods
xchg
repnz
mov
add
dec
jg
jns
sbbb
adc
mov
test
fnstenv
int3
lds
aas
in
bound
pushf
xlat
aas
push
or
xchg
and
sbbb
jle
or
sub
test
xor
fwait
outsl
add
movsb
or
insb
outsl
out
nop
cmp
mov
and
aaa
std
sbb
aas
and
dec
imulb
mov
or
addr16
in
test
fiadds
scas
test
shll
sub
pop
leave
or
or
push
shrl
dec
aam
hlt
into
cli
in
push
test
adc
fldcw
jb
add
mov
sbb
lock
and
movsb
mov
or
test
inc
fwait
cs
mov
les
cmpsb
cwtl
xchg
push
aas
jns
sbb
rclb
fisttpl
cmp
mov
testl
aas
adcb
std
xchg
imul
mov
shll
cmp
mov
sbb
in
loopne
add
rcll
daa
test
push
pushf
dec
xchg
inc
and
pop
ftst
sub
and
xlat
popl
add
push
cmpsl
xchg
add
xchg
bound
cmp
pushf
sahf
scas
inc
cwtl
sub
fs
loop
outsb
xchg
adc
pop
pop
loop
inc
inc
nop
mov
adc
xchg
push
cmp
cld
aad
cmp
sbb
sub
xor
xor
das
dec
jmp
push
mov
lods
cwtl
push
sub
mov
adc
and
xor
shr
adc
mov
subl
je
shrl
stos
mov
sbb
pop
orl
xchg
jle
inc
lcall
mov
push
imul
into
pop
xchg
mov
test
mov
cli
cltd
xor
dec
fmul
in
shrl
jno
dec
fs
mov
push
mov
sub
pop
int
fnstenv
ljmp
jecxz
dec
push
push
lea
in
add
pop
call
sub
mov
mov
movsl
adc
sar
test
aad
loope
stos
ficompl
dec
shr
xor
lcall
adc
test
adc
int3
mov
dec
push
jle
pop
mov
cmp
push
and
push
ret
dec
pop
mov
jbe
xorb
pop
cld
xchg
jmp
inc
or
out
mov
xchg
std
icebp
daa
inc
enter
out
mov
je
mov
dec
mov
add
lods
outsl
and
sub
adc
popa
lret
add
rcl
xchg
inc
mov
dec
stc
push
out
pop
and
fnstcw
mov
adc
inc
xor
xchg
and
cmp
xchg
sbb
add
sahf
adc
cmp
cs
gs
leave
mov
and
xchg
sub
es
inc
adc
int3
out
push
cwtl
lcall
cli
pop
mov
xorl
xchg
jp
loopne
test
xlat
test
enter
xchg
insl
mov
dec
lret
lds
adc
popa
aaa
cs
mov
sub
mov
cmpsl
cmpsl
shll
mov
call
fiadds
pop
adc
mov
pop
arpl
xor
popf
inc
adc
pop
mov
dec
fidivrl
mov
jle
lcall
inc
jle
xchg
rcrl
cmp
into
repnz
push
jb
xchg
movsl
cmp
sub
cli
ljmp
push
cmpsl
pop
cs
ljmp
cmp
loope
ja
dec
xchg
sub
xchg
xor
filds
adcb
movb
push
aaa
xchg
call
pusha
mov
and
push
repz
mov
sti
imul
sub
pop
shll
in
push
dec
jo
fs
mov
icebp
lds
in
xor
testb
mov
lds
cltd
in
jle
xchg
leave
cmp
mov
sbb
pop
lea
movsl
and
insl
push
mov
aad
loope
aad
mov
xchg
pop
cltd
mov
out
mov
repnz
xor
mov
mov
push
cmp
inc
out
js
or
xchg
push
inc
ljmp
ss
imul
xchg
and
lahf
neg
lea
ss
stos
cs
mov
enter
in
cmp
jb
dec
es
leave
push
sarl
pop
nop
sub
jns
test
pop
push
pop
pop
mov
mov
sbb
ror
add
aam
adc
cmp
and
mov
cltd
xor
stos
cmp
mov
jp
rclb
out
dec
add
or
mov
js
inc
lods
xchg
nop
test
cmp
jbe
add
xor
push
test
cmp
stos
ret
mov
lret
jae
push
push
mov
mov
ds
iret
cmpsb
xor
mov
jmp
test
subb
jg
movsb
push
mov
or
cltd
lods
add
lods
or
xor
pop
stos
test
pushl
mov
push
sbb
push
test
into
mov
pop
cmpsl
repz
cli
movsb
xor
add
lret
dec
push
ficomps
lods
fwait
dec
cmp
aas
std
adc
ficoms
adc
push
pop
adc
pop
arpl
adc
in
sbb
mov
ret
lds
fs
or
je
mov
ja
jle
mov
add
int
dec
mov
cmpsl
cmpsb
jecxz
rorb
mov
repnz
adc
push
push
sti
aam
cli
jle
pop
mov
cmp
icebp
sti
mov
imul
cmpsl
inc
fstl
mov
sarb
pusha
mov
pushf
sahf
es
xor
pop
sbb
fiaddl
repz
test
push
or
jne
pop
lods
mov
adc
mov
cld
sub
mov
mov
inc
push
inc
addr16
addl
divl
xor
rcl
imul
jbe
add
cmp
xor
pop
cltd
pop
mov
lock
movsb
lret
pop
adcb
ja
in
pop
xlat
repnz
mov
push
rcl
dec
adc
pusha
es
divl
add
js
adc
cld
ljmp
xchg
xchg
orl
enter
sahf
hlt
dec
cmpsb
in
stos
adc
lods
jmp
les
aas
cmp
adc
mov
push
sbb
inc
push
mov
das
out
inc
in
loope
or
jns
mov
aaa
aaa
cmp
jg
and
aas
stos
bound
ljmp
push
push
push
jae
pop
xchg
insl
mov
cltd
sub
ret
jae
jbe
sbb
fwait
fwait
ja
sub
and
push
jns
lods
mov
mov
std
sub
jnp
jmp
movsl
arpl
inc
push
sbb
xor
xchg
mov
lret
xchg
inc
sahf
icebp
cld
mov
test
rcll
cmp
jae
mov
shlb
or
and
jmp
neg
cmp
sub
iret
cmp
stos
movsb
mov
stos
fdivr
out
lods
push
bound
xchg
loopne
lods
fdivs
dec
pop
into
mov
rcr
into
push
xchg
push
call
xchg
cmc
jnp
cmp
pop
clc
sub
aaa
mov
out
jae,pt
out
aas
xor
orl
pop
aaa
pop
sahf
sbb
roll
sbb
inc
push
xor
lea
jl,pn
sarl
es
or
jge
or
pop
or
test
cmpsb
sub
les
outsb
xor
pop
lods
jne
pop
xor
xor
pop
xchg
stos
rolb
dec
mov
pop
xchg
mov
mov
adc
imul
adc
rclb
arpl
pushf
push
dec
push
iret
add
js
fadd
sub
pop
arpl
mov
out
pop
repz
cld
mov
lret
and
bound
cmp
or
adc
mov
into
outsb
fwait
pop
subb
and
pop
xchg
and
filds
repz
adc
and
pop
loope
xor
lock
pop
fisttpll
ljmp
inc
mov
popl
imul
pop
pop
mov
mov
jecxz
mov
sub
out
sbb
in
push
lods
dec
leave
lea
ds
sbb
inc
fwait
int3
and
or
aam
mov
sbb
fprem
cld
add
cmc
out
dec
mov
cmp
jo
std
jnp,pt
push
clc
test
sbb
dec
aaa
bound
dec
movsl
and
xor
repz
in
cmpsl
pop
jmp
pop
push
fiadds
mov
jg
jmp
ljmp
and
lea
sbb
inc
ret
fidivrl
xor
adc
lahf
mov
movsb
lds
push
sub
fs
loope
and
pushf
dec
iret
inc
call
jne
and
test
aam
cs
mov
imul
xchg
je
cmp
pop
decl
add
icebp
cld
imul
test
mov
jns
sbb
inc
cmp
test
inc
ret
dec
mov
scas
sbb
sbb
rorl
push
push
fisubrl
mov
imul
filds
pop
xchg
dec
insl
dec
pcmpgtb
xor
divl
roll
sub
dec
mov
jno
xor
dec
lock
out
adc
inc
mov
xchg
sbb
dec
int
loope
dec
and
add
mov
in
scas
adc
inc
xabort
or
sahf
aas
mov
mov
fisubs
sbb
mov
dec
popf
loop
mov
xor
sbb
lds
add
lcall
xchg
dec
xor
and
jne
das
cmp
push
sub
push
sub
push
push
xchg
push
test
cmpsl
cmp
daa
jb
add
add
bound
dec
pop
sti
adc
push
jae
cmp
icebp
push
mov
out
jg
scas
push
dec
sbb
xor
push
jle
xchg
sub
repz
nop
add
mov
pop
shrb
pop
jmp
pop
fwait
jae
add
cmpsl
ret
outsl
or
frstor
lods
pop
xor
dec
jbe
sub
sbb
mov
push
cwtl
dec
mov
leave
jne
sub
mov
fwait
lahf
adc
mov
ret
pop
aaa
cltd
and
out
sarb
push
addb
jnp
pop
jmp
imul
xor
pushl
sti
test
cmpsl
scas
rolb
jae
dec
inc
out
mov
ret
and
xchg
mov
andb
out
jecxz
scas
mov
jecxz
subb
fs
mov
hlt
imul
repz
fs
add
popf
mov
adc
xchg
test
stc
call
cli
sbb
shr
pop
dec
sbb
mov
notl
xchg
add
leave
cmp
fs
sub
or
popf
test
xchg
out
xchg
xchg
stos
cwtl
rolb
adc
sti
aam
stc
movsl
cmc
nop
hlt
lret
xchg
aaa
into
cmp
mov
dec
in
fwait
mov
in
sbb
xlat
sub
pop
pop
imul
loop
dec
pop
pushl
inc
push
cmpsb
scas
cmp
pop
mov
add
int
imul
jge
xchg
rorl
mov
push
rcr
lods
call
adc
and
sub
fldt
sbb
cmp
lret
dec
fdivr
and
adc
pop
pop
mov
call
outsb
call
ret
std
jbe
mull
mov
faddl
imulb
push
dec
fsubrs
push
xor
pop
out
bound
repnz
mov
pop
roll
sbb
or
mov
shll
mov
and
push
test
nop
je
xor
aaa
xor
jae
cmpsl
push
or
add
jecxz
js
xchg
sub
mov
movsl
inc
lret
je
test
mov
iret
dec
dec
subb
leave
jne
mov
cmpb
xlat
jne
mov
arpl
cltd
cmp
pushf
lret
pop
sbb
rcrb
cs
fisttpl
push
mov
out
sub
cmp
xchg
fsub
into
mov
sbb
loop
adc
insb
addr16
das
push
aaa
jl
adc
push
orl
dec
cltd
xor
jecxz
sti
or
sbb
push
pop
lcall
mov
or
flds
push
das
jecxz
pop
cmp
icebp
fs
lret
aad
notl
xor
sti
das
add
inc
mov
lret
add
add
or
imul
in
es
out
or
stos
sub
push
push
adc
dec
mov
xor
push
aaa
sbb
test
sub
or
notl
mov
cmpsb
mov
push
cwtl
repnz
lea
pop
cli
add
in
stos
adc
mov
or
lcall
leave
addr16
clc
or
cmp
lret
and
pop
aaa
dec
rcr
lret
prefetchnta
pop
sub
sbb
mov
sub
rclb
push
mov
sti
test
push
cmp
cmp
loope
cmp
rorb
loope
sub
loope
push
iret
in
pop
mov
test
or
sahf
stc
xorb
lods
test
repz
lahf
adc
imul
mov
insb
mov
cmp
es
mov
mov
mov
ds
daa
push
jno
loope
inc
daa
add
outsb
jae
scas
inc
cwtl
subl
push
imul
pop
lods
xor
fwait
jmp
cmp
inc
ljmp
sti
test
pop
mov
cmp
lds
and
xchg
xchg
inc
xchg
xchg
jns
jp
jmp
cmp
cmc
out
out
mov
stc
adc
add
pop
pushf
mov
rol
gs
enter
cmp
rorl
adcb
jb
sbb
sub
push
xchg
cltd
push
mov
dec
xchg
jmp
pop
mov
cltd
mov
inc
repnz
les
flds
xor
xor
mov
shlb
inc
mov
xor
decb
mov
leave
popa
rcrl
cli
cld
idivl
and
xchg
or
mov
jb
nop
test
sbb
fimuls
sub
icebp
cmp
pop
into
mov
inc
push
xorb
inc
ds
ffreep
out
jmp
xor
jae
jmp
or
pop
xor
cmp
inc
add
mov
loop
pop
xor
xchg
or
lds
aaa
stos
test
add
xor
negl
scas
lret
jnp
aas
shl
add
fistpll
jmp
lcall
push
and
lock
mov
sbb
imul
inc
or
or
andl
push
push
outsl
jl
cs
or
nop
fisubrs
adc
jo
arpl
mov
adc
adc
jmp
cs
mov
insb
cmpsl
inc
add
ror
faddl
pop
das
or
mov
xchg
clc
xor
ret
out
hlt
pop
fsub
mov
mov
or
sbbl
mov
push
mov
mov
sbb
fsubr
test
or
inc
push
ja
xor
mov
push
lock
mov
movsl
inc
out
inc
inc
lea
fisttpl
fbstp
test
cs
mov
ds
loopne
fisubrs
sbb
pop
stc
cmp
jo
mov
jnp
jge
rclb
ds
add
pop
decl
inc
stos
pusha
push
cmc
rol
repz
lea
fimuls
add
lods
push
stos
inc
test
push
imul
inc
adc
in
push
jne
jns
add
or
dec
jnp
add
adc
xchg
jl
xchg
out
push
lahf
arpl
aaa
push
jmp
mov
add
ret
xchg
dec
idivl
pop
sbb
inc
jbe
inc
fcoms
push
mov
sub
mov
icebp
and
mov
imul
les
cmp
cmp
or
cs
rcll
js,pn
insl
out
cmp
xor
imulb
pop
add
dec
mov
mul
jbe
loop
mov
dec
dec
movsb
shlb
xchg
xchg
jae
mov
ljmp
stos
and
push
push
cmp
fildl
jp
inc
dec
xchg
hlt
jmp
subb
popa
or
pop
mov
xchg
sub
fiadds
dec
stos
mov
push
fwait
adc
pop
xchg
pop
sbb
mov
push
xchg
imul
aad
lods
imul
sbb
mov
test
les
int
imul
add
lods
mov
push
or
sbb
xchg
xchg
aaa
movsb
xchg
push
jl
add
fdiv
and
fsubr
scas
ljmp
lea
dec
popa
push
pop
idivb
ret
ret
mov
in
xor
mov
jbe
das
add
and
and
insl
sbb
inc
fdivrl
and
jmp
aaa
in
ja
sbb
push
movsb
dec
xchg
sub
add
fdivl
rorb
xchg
loope
js
xor
out
addl
rorl
pop
jo
out
mov
cmp
outsb
add
mov
xchg
pop
popl
ret
fs
add
jae
in
out
jp
sbb
mov
push
dec
push
cmpsl
mov
sub
mov
inc
mov
je
gs
rcll
xchg
jne
mov
mov
add
test
or
jecxz
mov
mov
dec
fwait
pop
les
cltd
adc
data16
cmp
or
repnz
pusha
popf
scas
shl
pop
mov
adc
and
loope
aas
pop
repnz
sbb
ja
pop
pop
dec
cmpsb
jmp
test
lret
mov
shlb
aas
movsb
fisubrs
mov
lods
aas
out
lea
popa
and
and
scas
shll
in
addb
je
lret
addr16
repz
inc
int
add
cmp
xchg
iret
repnz
movsl
push
movsl
fistps
daa
les
xchg
or
test
js
mov
aad
push
lcall
pcmpeqw
adc
in
xor
mov
dec
mov
adc
jne
inc
stos
movsb
mov
mov
ret
sbb
mul
je
in
jnp
ret
imul
fsubrs
fwait
dec
pushl
jge
or
push
mov
mov
mov
or
push
popa
push
xor
stos
aaa
je
sub
jo
out
cmp
xchg
lods
lcall
or
mov
add
sti
shll
push
pop
aas
jnp
popa
jae
leave
int
test
xor
insb
dec
jg
shll
cmp
push
or
divb
out
sbb
mov
sbb
test
and
mov
sub
les
out
xor
or
test
je
fcomip
sbb
push
or
ja
mov
push
fcoms
aad
sub
ficoms
xchg
dec
loopne
adc
std
xchg
fisubs
fdiv
imul
xchg
mov
pop
push
mov
or
mov
push
int3
scas
das
cmp
faddl
out
or
fldcw
or
enter
pop
or
lret
jge
mov
cmp
pop
sub
sti
mov
orl
ljmp
xchg
repnz
aad
ja
negb
jecxz
cmpsl
in
loope
mov
lcall
jno
movhps
jmp
popf
dec
inc
les
lods
push
xchg
sub
add
push
push
dec
hlt
and
aas
je
pop
cmpsl
pop
push
cwtl
stc
in
fwait
inc
pop
cltd
sbb
mov
imul
lret
cmp
adc
and
and
inc
out
xor
std
cmpsb
pop
mov
dec
jg
std
lret
ret
outsl
push
cwtl
ret
cmpsb
jne
cvtpi2ps
sub
mul
movsl
jecxz
dec
and
aaa
or
es
loopne
jnp
pop
sbb
stos
cli
icebp
icebp
mov
mov
or
push
scas
mov
shlb
lods
into
jle
pop
mov
pop
mov
es
lock
push
cmc
outsb
jnp
xor
push
fldenv
int3
inc
ja
inc
aas
push
adcl
loope
jo
mov
imul
int
add
das
test
xor
enter
xchg
mov
push
jns
fildl
cli
jbe
test
fdivr
mov
popa
jle
dec
fdivr
aad
pop
jmp
fldt
gs
mov
leave
nop
pop
sbb
fdivrs
xchg
xchg
cwtl
fcmovne
hlt
push
call
xchg
dec
or
adc
jo
or
inc
fcomps
cmpsb
enter
push
das
jp
imul
push
sti
jnp
xlat
cmp
mov
mov
mov
sub
adc
adc
cmc
scas
scas
rolb
xor
insl
xchg
imul
mov
mov
xor
mov
xchg
sbb
xor
das
in
mov
ror
cmp
sbb
sbb
loope
mov
add
push
mov
mov
in
xchg
or
in
or
jbe
rcrl
cmpsl
mov
dec
jo
aaa
sbb
rcl
jl
loop
xchg
inc
xchg
sbb
mov
cmp
inc
dec
sbb
lahf
leave
idivl
or
adc
call
popf
dec
sub
aaa
int3
sbbl
dec
adc
xchg
lcall
push
sbb
outsb
push
or
loopne
mov
cmp
and
mov
sub
cs
imul
ja
mov
mov
xchg
inc
daa
add
inc
call
jle
add
push
jecxz
pop
aas
std
push
add
mov
add
es
fisubrl
sub
int
aas
add
xchg
imul
pusha
pop
sub
imul
xchg
cmpsl
sub
sbb
outsb
repnz
jb
inc
cltd
fsubs
into
movsb
cmp
add
mov
jbe
sbb
leave
cmp
in
fnstcw
cmp
insb
dec
push
or
cli
pop
fldt
jno
mov
sub
pop
mov
push
lds
push
fisubl
lea
hlt
in
pop
popf
pop
mov
test
xchg
daa
pop
int
nop
xor
push
mov
popf
jmp
outsb
shll
mov
jns
sub
rol
jb
xchg
push
lods
and
adc
sub
cld
mov
mov
adc
sahf
lret
adc
inc
pushf
mov
insb
out
icebp
push
sti
out
cmp
mov
add
cmc
and
xchg
jmp
inc
fcmove
and
adc
mov
lcall
dec
inc
adc
pushf
bound
dec
xlat
xor
jb
mov
orb
push
aad
cmpsl
cli
cmp
shll
shrl
pop
and
sti
jo
push
fs
loop
inc
and
in
mov
add
push
movsb
movsb
notb
inc
add
das
fwait
dec
les
nop
adc
imul
lods
fidivl
sub
aad
mov
fistps
lds
pushf
xchg
test
sub
dec
mov
sbb
lock
jge
nop
cmpsl
or
das
pop
out
movsb
xor
xor
dec
fmuls
or
push
sub
xor
out
loopne
jp
sub
push
adc
out
mov
dec
sbb
iret
ret
aaa
mov
lods
xchg
inc
dec
inc
cwtl
and
fildll
cmp
dec
icebp
movsl
pop
mov
arpl
jmp
mov
push
pop
xchg
aaa
jbe
popf
add
shll
xchg
fbstp
mov
xchg
xor
dec
movsl
lock
sbb
stos
cwtl
xchg
mov
stos
xor
scas
loope
and
out
fildll
push
sbb
add
or
arpl
lea
xchg
popa
sarb
mov
dec
adc
mov
scas
cmp
jmp
cld
or
cli
out
das
icebp
lock
inc
repnz
and
push
mov
mov
addl
icebp
xor
ja
xlat
je
aam
xchg
fs
cmp
js
ja
xchg
lods
lahf
aad
cltd
and
inc
xchg
jecxz
popl
mov
aaa
adc
xchg
insb
add
mov
or
and
pop
push
xlat
pusha
lret
daa
scas
dec
lea
or
mov
mov
sti
and
jno
sub
in
xchg
ret
jg
cltd
js
mov
inc
popf
xor
pop
leave
repnz
cmpsl
imul
adc
mov
inc
pop
dec
leave
ljmp
dec
or
rclb
adc
sbb
add
pushf
push
or
cmp
mov
pop
sub
repnz
mov
mov
les
popf
es
bound
adc
pusha
ljmp
int3
xlat
in
pop
lcall
dec
lcall
fiaddl
nop
int3
aas
repnz
push
push
cltd
xor
and
dec
lods
add
add
mov
icebp
insl
in
dec
push
add
mov
in
roll
jmp
sbb
loop
test
fsub
testl
cs
sub
popa
cmc
push
ds
lds
xchg
out
push
or
push
mov
dec
adc
xchg
adc
mov
insb
data16
mov
cmpsb
in
addr16
dec
cmp
cld
adc
inc
push
loope
adc
test
push
fistps
cltd
rcr
push
mov
cmpb
cmpsl
in
dec
jne
scas
push
scas
fiaddl
and
pushl
inc
loop
sbb
push
test
mov
xchg
cmp
push
pop
pop
mov
jno
test
xchg
cmp
popa
out
pop
cmc
jnp
minps
push
xor
pusha
cmc
push
cs
inc
scas
cmp
std
jecxz
mov
repnz
xor
shrl
repz
xchg
das
jp
jnp
sbb
fyl2xp1
js
jno
xchg
ljmp
and
stos
ret
add
mov
mov
loop
fcmovnu
sbb
in
mov
push
pop
rol
std
outsb
lds
outsl
mov
call
cmpsl
pop
jbe
add
clc
out
pop
cwtl
pop
movsl
ret
mov
sub
xor
sbb
stos
bound
sbb
xchg
out
jge
icebp
insb
push
ret
faddp
mov
push
mov
fcomip
and
jp
pop
aas
data16
loop
jge
mov
rcr
faddl
stos
mov
mov
cmp
fwait
lahf
sub
movsb
xchg
rclb
gs
xor
loopne
daa
sbb
dec
rcrl
out
mov
leave
cld
cmp
dec
icebp
psrld
flds
jno
or
jle
rolb
fidivrs
in
cmp
les
jg
fists
xor
mov
push
nop
movsb
sbb
movsb
cmc
sub
lds
rcll
pop
mov
in
cltd
ja
cmp
cmpsb
fstl
decb
sbb
inc
dec
or
jns
popa
je
xchg
pop
sub
dec
int3
add
bound
push
xchg
mov
push
push
xor
fdivs
cmp
push
pop
lock
test
ljmp
popa
lods
mull
test
ljmp
mov
cmp
adc
test
inc
sbb
pop
je
sbb
mov
into
out
sub
les
scas
and
sub
out
addr16
xchg
sub
mov
fidivs
push
test
fwait
movl
lret
pop
and
leave
ss
in
icebp
cmp
rcl
adc
ja
xor
adc
mov
push
xor
pop
cld
sub
popf
or
scas
mov
popa
rclb
xor
aaa
addb
jl
dec
addl
movsl
dec
stos
cmp
mov
mov
fldt
gs
mov
xchg
push
fsubr
imul
ds
mov
jne
lret
mov
pop
aas
ljmp
xchg
ds
lods
xor
js
in
inc
xor
pop
jno
adc
out
or
sub
xchg
mov
out
cwtl
add
mov
jno
fdiv
std
leave
adc
pop
scas
incl
out
stos
arpl
add
int3
push
and
add
iret
xor
inc
hlt
adc
and
adc
dec
cmp
rcrb
inc
push
bound
lret
xchg
push
xlat
mov
push
stos
jno
jmp
imull
mov
xchg
and
sub
cmp
movsb
call
sub
mov
cltd
mov
cli
inc
dec
mov
cmp
stos
xor
test
mov
notb
xor
adcb
out
into
in
inc
divl
cmp
rcr
jge
lea
sub
and
nop
xchg
out
or
pushf
lret
or
dec
xlat
imul
sti
inc
push
sbb
in
test
jl
int
or
or
adc
lock
mov
cmp
or
pop
in
adc
sbb
jbe
std
call
dec
push
jle
lretw
jmp
add
or
and
arpl
or
es
cltd
fidivrs
fcompl
cmpsl
and
mov
pop
stos
cs
outsl
mov
sub
fwait
jae
dec
ss
adc
ret
add
fcoms
mov
sub
xlat
outsl
mov
xor
fisubl
mov
aam
and
cld
lods
mov
and
out
dec
mov
add
or
fsubrp
adc
lods
pop
adc
cs
jns
rorl
lock
jno
and
ja
adc
pop
sub
cmp
lods
xor
fwait
loopne
mov
inc
mov
lods
ljmp
gs
xor
jge
std
lcall
repz
adc
mov
cs
test
push
mov
je
pop
leave
adc
test
dec
pop
cmp
loop
mov
ljmp
mov
xchg
ja
insb
xor
int
push
outsl
or
test
das
lcall
out
dec
imul
rolb
js
incb
push
jge
in
sarb
mov
lahf
adc
movl
pusha
jae
xchg
dec
add
stc
mov
aam
xchg
scas
icebp
jb
xlat
or
sbb
pop
cmp
push
aaa
adc
jae
mov
dec
push
ret
pushf
loopne
outsb
movsb
jno
mov
out
aas
sub
mov
sbb
loop
lock
add
mov
test
cmp
loope
sbb
cld
cltd
ss
movsb
imulb
arpl
out
mov
xchg
lea
cmp
cmp
jp
mov
dec
loopne
or
mov
and
jmp
shlb
stos
mov
add
adc
fdivl
clc
sbb
inc
jo
mov
div
jmp
dec
pop
dec
outsb
pushf
or
aaa
dec
sub
shlb
scas
or
daa
inc
out
call
clc
roll
inc
sbbl
jg
sub
sbb
mov
fidivl
pop
push
xchg
out
fidivs
leave
xorl
cmp
test
or
jo
xor
push
cmp
cmp
push
and
add
lock
adc
inc
cs
adc
imul
mov
mov
xchg
std
repnz
bound
cmp
mov
jle
mov
aam
int
sbbl
jnp
jmp
cmp
lcall
das
mov
dec
lea
rcrl
push
xlat
pop
sub
ds
outsl
stos
pop
mov
lea
mov
or
roll
adc
fsub
xorl
loop
mov
imul
sahf
xchg
xlat
jl
fwait
mov
dec
cmp
movsl
loop
popa
pop
cmpsl
mov
inc
into
loop
mov
adc
rorb
shlb
xor
push
aaa
cmpsb
mov
fnstcw
mov
sbb
or
mov
jecxz
xchg
sbb
icebp
roll
loop
lock
jmp
in
mov
sub
push
imul
cmp
lds
into
mov
dec
push
add
loopne
and
or
adc
or
jno
push
imul
or
mov
xchg
mov
decb
and
push
pushf
lret
inc
dec
push
pop
rcll
sbb
leave
scas
sub
and
xchg
ss
adc
xchg
fcmovne
push
push
es
mov
fbstp
jb
mov
popf
rcrb
xchg
popl
and
sbb
aaa
xchg
xor
sbb
lahf
xor
and
lea
push
xchg
xchg
lahf
cs
push
fwait
scas
and
scas
jo
mov
mov
pop
jl
cld
sahf
xor
adc
pop
lcall
sti
mov
ror
std
xchg
dec
jmp
inc
rcr
adc
aas
sbb
pop
pop
mov
aaa
fnsave
das
inc
fwait
cwtl
jl
mov
pushf
adc
adc
jae
mov
sub
testl
jle
sub
push
mov
scas
inc
fistpl
out
rcr
jmp
mov
mov
xorl
loope
enter
xchg
popf
cld
mov
cmp
nop
push
mov
orb
fnstsw
lret
lea
sar
mov
mov
and
cmp
addl
mov
imul
push
xchg
pop
lods
adc
rolb
das
cmpsb
mov
pop
xchg
js
scas
fmull
and
dec
dec
jmp
inc
les
inc
and
std
sbb
sbb
add
testl
mov
adc
rcrb
add
inc
inc
into
cmpsl
mov
dec
add
mov
xor
addr16
in
mull
inc
fidivrs
inc
mov
lods
lret
push
add
dec
aam
jbe
pop
in
jg
adc
sbb
mov
fcmovbe
inc
or
inc
std
mov
or
push
xchg
in
xchg
lock
sbb
xor
test
das
sbb
xor
add
out
int3
cs
xor
jl
mov
cli
mov
nop
mov
push
int
shll
aaa
cwtl
xor
stos
jne
mov
js
lret
and
add
adc
jbe
out
cwtl
lock
jb
push
outsl
aam
push
ja
and
mov
lds
outsl
lock
or
dec
fistpll
test
cmp
xor
add
pop
push
sti
out
add
pusha
jle
rcr
adc
std
aas
scas
push
push
xor
mov
lahf
sub
inc
and
sub
push
cmp
into
lea
dec
mov
fstl
sub
test
xor
fnstcw
aad
mov
punpckhbw
repnz
pop
inc
sub
mov
mov
pop
test
out
dec
leave
pop
shll
loop
mov
xor
outsb
lret
fmul
cmpsb
aam
cmp
ss
ficompl
or
and
xchg
pop
push
add
push
rorl
and
aad
loopne
lods
mov
pop
sub
les
and
scas
push
es
pop
int3
out
arpl
scas
xchg
dec
dec
mov
push
fwait
pop
aad
enter
int3
jb
mov
xchg
in
scas
cli
cmp
mov
int3
dec
pop
or
call
xchg
or
fs
sub
adc
fdivrl
jge
std
cmp
mov
sbb
and
insb
mov
int
xchg
in
aad
lret
pop
into
jnp
ret
jns
push
dec
lock
jl
pop
dec
mov
ret
scas
loope
cwtl
mov
ljmp
rolb
sbb
lret
cmp
xor
testl
ror
pop
shll
lahf
dec
dec
imul
mov
rcl
test
push
stc
mov
scas
xor
cmp
or
pop
lock
movsl
xor
cld
dec
subl
xchg
nop
add
xor
aaa
adc
fsts
fld1
out
adc
and
dec
sbbl
aas
std
stos
push
ja
out
shll
leave
fisttps
arpl
push
mov
aas
mov
add
clc
testb
in
fimull
cmp
cmpsl
repnz
push
dec
inc
xor
imul
add
iret
leave
pop
cwtl
inc
repz
mov
rep
int
sub
lret
xchg
lcall
scas
cmpsl
jo
pop
mov
js
inc
sub
inc
fmul
je
xor
push
mov
inc
mov
and
jge
sub
jl
mov
ds
jbe
int
aad
add
aas
xor
addr16
xchg
cmpl
push
lods
push
test
adc
push
addr16
cmp
pop
pop
stos
loop
loop
cmp
xor
gs
xchg
sub
inc
xchg
repnz
dec
idivl
das
sub
pop
adc
mov
ficompl
mov
mov
imul
dec
ret
dec
adc
xorb
aas
add
arpl
gs
scas
out
std
iret
jnp
orb
cmpsl
push
out
push
jecxz
aam
cmc
dec
pop
mov
movsb
js
gs
mov
call
or
push
icebp
mov
aad
insl
enter
mov
push
imul
scas
scas
mul
lds
enter
aam
das
insl
xchg
pop
scas
loope
xchg
add
sub
cmp
fdivrl
pusha
jnp
fildl
fdiv
pushf
fnstcw
dec
dec
sbb
add
in
add
or
inc
mov
out
lret
mov
das
pop
mov
out
loop
inc
imul
sbb
xchg
jmp
inc
and
or
ljmp
or
stos
xchg
insb
subb
xchg
outsb
inc
and
aas
mov
iret
cmpl
and
xchg
lcall
das
push
loopne
push
inc
cli
iret
push
adc
jno
inc
adc
jnp
xor
mov
iret
mov
push
add
stos
dec
mov
lret
inc
vmovlps
adc
push
shrb
fsubrl
push
int3
jmp
cli
pop
pop
lahf
pop
out
push
repnz
push
ss
mov
mov
mov
xchg
test
jnp
daa
orl
xor
jmp
fwait
int3
popf
mov
pop
nop
mov
push
scas
aad
mov
in
sarl
fbstp
pop
mov
inc
dec
push
mov
movsl
rcl
push
fildl
rcl
add
ret
dec
push
es
je
in
dec
cmp
pop
js
lret
mov
cmpsb
jmp
push
inc
sub
add
lret
das
add
out
fs
and
push
inc
in
aad
adc
add
hlt
dec
pop
ret
push
nop
xor
adc
test
decb
and
mov
pushf
xchg
inc
sub
adc
ficoms
imul
mov
push
xchg
pop
nop
inc
mov
cmp
rcr
pop
ja
into
mov
push
pop
jns
out
in
pop
cs
insb
arpl
xchg
mov
add
mov
pop
addr16
jae
bound
data16
lods
pop
xor
adc
call
push
cmp
pop
cmp
pop
mov
nop
iret
cmpb
pop
pop
sbb
jnp
xor
xlat
stc
loopne
rcrb
mov
clc
mov
cwtl
push
in
andl
js
icebp
and
push
fisubs
inc
movsl
dec
push
in
icebp
lret
and
adc
test
dec
dec
inc
and
mov
ret
imul
mov
lds
roll
dec
mov
movsb
test
inc
and
repnz
aam
cmp
outsl
out
fidivrs
adc
neg
into
adcl
loopne
cmpsl
negb
sbb
sbb
adc
sbb
xchg
or
push
sub
jbe
cvtps2pi
test
fiadds
out
dec
rcll
mov
scas
push
scas
dec
jnp
int
outsl
mov
pop
test
xlat
push
cmc
xlat
pop
pop
clc
cmpsb
aad
push
ljmp
hlt
into
enter
jecxz
dec
int
test
lcall
pushf
ret
rcrl
sbb
mov
pop
jae
lcall
ds
test
popf
fstps
xlat
adc
cwtl
adc
aad
mov
les
mov
push
push
sbb
xchg
xor
les
movsb
ret
sbb
pop
jo
rcrl
cs
scas
push
loope
inc
push
inc
or
mov
mov
pop
in
inc
mov
or
gs
adc
push
hlt
fdivr
add
lods
fcmovne
mov
xchg
xchg
cmp
mov
inc
xor
aas
xchg
push
out
loope
popf
cmp
sbbl
test
sub
iret
add
subl
jg
addl
jmp
pop
jg
lods
popf
gs
push
jmp
sub
ss
xor
shrb
push
push
jecxz
rcrl
loope
mov
and
and
mov
jg
sahf
out
jo
push
adcl
lock
dec
into
sbb
ret
test
adc
cs
lea
lods
jo
adc
push
addl
movsl
data16
inc
js
jb
das
pop
loopne
xor
in
das
xchg
addr16
addb
sub
sub
out
lock
cmp
adc
and
lret
xor
lahf
lea
and
mov
xchg
sub
pushfw
or
mov
inc
jno
dec
movsb
scas
cmp
ret
dec
and
dec
and
xor
addb
rclb
adc
jge
orb
pop
lahf
lret
mov
xor
push
push
inc
add
pop
inc
xchg
ficoms
addl
dec
adc
repnz
jge
stc
cmp
and
pop
into
adc
push
xor
push
fcomi
test
rolb
jp
lret
cmc
call
mov
pusha
inc
ja
add
scas
inc
les
dec
add
push
sahf
mov
int
scas
mov
or
rep
push
out
ljmp
inc
or
and
mov
dec
pop
mov
jo
lret
repz
dec
pop
and
xor
pop
clc
leave
imul
push
leave
jg
testl
mov
mov
fwait
pop
cltd
rcrb
out
and
jmp
inc
or
test
pop
xor
fs
add
addr16
div
mov
push
cmpsb
das
mov
mov
mov
addr16
movsl
cmp
insl
loop
adc
push
js
mov
xchg
bt
pop
xor
les
test
cmp
outsl
add
movsb
enter
mov
xchg
fsts
pop
mov
sbb
mov
dec
movsb
lahf
rclb
mov
sbb
adc
or
dec
inc
pop
nop
dec
pop
xchg
mov
test
pop
aam
add
dec
push
pop
dec
test
aam
dec
adc
iret
jno
add
jp
rcr
jmp
lret
inc
pop
leave
fnstsw
movsb
or
cmp
push
pusha
fcom
jmp
mov
push
pop
cmp
ret
inc
enter
outsl
jbe
shll
imul
fistpll
cld
cwtl
push
sub
sarb
lret
icebp
repnz
xor
xor
mov
jno
call
lds
xchg
fs
roll
sub
mov
sarl
movsb
adcb
mov
xchg
mov
xchg
push
std
es
mov
mov
sub
push
xor
dec
mov
mov
test
gs
bound
add
lock
push
xchg
jno
data16
es
cmc
out
mov
lahf
sbb
mov
lods
les
sub
sub
ds
sub
lods
or
add
shrb
inc
add
sbb
or
aad
fs
mov
add
sub
lret
and
in
ds
and
rol
movl
push
jo
addr16
sbb
jge
mov
add
lret
inc
pop
xchg
int3
out
mov
mov
aas
in
jecxz
frstor
sub
cmpsb
jae
daa
out
mov
mov
incl
test
add
inc
sahf
xchg
adc
push
je
aaa
pop
mov
mov
in
mov
add
in
ja
cmpsb
lods
push
ret
js
lret
dec
scas
fwait
push
push
or
adc
dec
pusha
add
mov
inc
fldt
int
adc
mov
std
mov
outsb
jo
cs
pop
pusha
xchg
or
adc
inc
orb
pop
sbb
ficoml
rolb
mov
add
sub
pop
lock
loop
loop
loop
sbb
or
aaa
and
andb
aam
push
out
cmpl
sbb
nop
push
ror
data16
sub
dec
into
dec
dec
inc
outsl
or
mov
nop
push
sub
sub
gs
sub
shrl
pop
xor
fildl
add
mov
lcall
sahf
adc
not
mov
dec
insb
sub
call
in
push
xchg
mov
popa
out
lahf
stc
daa
es
xchg
pop
imul
dec
sbb
mov
dec
or
and
lods
movb
aaa
inc
pop
das
dec
mov
leave
mov
xor
push
loop
out
stos
mov
ret
sub
cmpsl
cmp
push
shr
out
cwtl
outsb
cmp
xor
ret
cli
jmp
mov
sbbl
lcall
mov
xchg
test
scas
jle
fs
and
mov
mov
cmp
stos
imul
ss
out
pop
ret
imul
sbb
decb
pop
imul
dec
pop
xor
mov
mov
rcrb
dec
inc
push
mov
test
enter
inc
hlt
out
in
mov
pop
fdivrs
addr16
xchg
and
xlat
sbb
jne
in
or
test
adc
test
cmp
add
pop
in
pusha
jmp
jmp
or
shll
rcrb
pop
mov
adc
dec
in
pop
test
subb
mov
add
fcom
dec
inc
ret
je
pop
imulb
pop
mov
in
mov
jne
and
inc
inc
sahf
sub
maxps
mov
jp
adc
mov
cld
xor
sub
roll
jmp
mov
xor
push
aam
fidivrl
fcmovnb
and
inc
mov
pop
out
xor
pop
add
cli
addl
dec
mov
repnz
aam
pop
out
push
or
xchg
fwait
adc
add
mov
ljmp
stc
cmpsl
es
sbb
xor
fdivp
ror
jno
lock
aas
xchg
mov
fistpll
adc
sub
lock
mov
mov
imul
aaa
call
cmp
inc
cmpsb
stos
fdivs
mov
adcb
enter
scas
mov
cltd
test
rcll
mov
scas
or
dec
in
dec
pop
push
lcall
jge
mov
in
jmp
adc
pop
sbb
mov
rcrl
es
cli
push
ret
mov
jl
inc
mov
adc
and
pop
xchg
stc
fbld
fistps
repz
enter
push
int3
mov
scas
nop
or
adc
sarb
or
sbb
adc
ficomps
lods
cmpsl
and
xor
pusha
dec
push
fbld
sub
call
xchg
sub
fmull
xchg
mov
es
push
jb
xchg
ja
mov
or
faddl
mov
lods
adc
imul
mov
scas
cmp
das
push
mov
pop
insb
adc
sar
or
leave
test
fadd
sub
ss
adc
ljmp
stos
fisttpll
cmpsl
mov
mov
push
int
mov
dec
nop
rcr
push
out
ja
jb
xlat
test
test
mov
dec
ret
mov
in
in
pop
mov
into
sti
in
and
jmp
add
jle
sbb
push
xlat
inc
or
shll
es
pop
iret
pusha
add
and
cmp
test
loope
pop
cmc
cwtl
sbb
sbb
or
adc
dec
notb
push
adc
sub
adc
cmp
inc
inc
aas
xchg
cmpsl
inc
add
loope
je
shll
lock
or
stos
jmp
cwtl
lcall
shll
dec
pusha
rcrb
inc
mov
and
pop
jl
push
fdivs
fdivl
loope
arpl
or
sub
or
ss
fistl
test
subb
inc
and
mov
cmp
daa
out
push
cmp
xchg
fcmovnu
mov
sbb
out
inc
ret
xchg
fs
lahf
cmp
scas
xor
pop
sbb
dec
mov
mulb
rolb
insb
gs
push
sub
ror
call
lea
icebp
push
mov
ret
iret
cmpsl
mov
xchg
and
mov
push
jnp
insl
in
mov
add
jno
enter
push
daa
popf
enter
outsb
loop
mov
fists
pusha
sub
add
cltd
push
jbe
or
aas
lcall
lods
adc
dec
loopne
pop
sbbb
adc
in
push
aas
enter
xor
or
xor
js
inc
mov
dec
loop
arpl
daa
sti
pop
xor
repz
jp
subl
aad
cmp
cltd
out
lret
cltd
addr16
scas
cmp
adc
je
cli
std
aad
roll
mov
aam
scas
pop
outsb
mov
add
mov
int
xor
adc
movb
add
mov
loope
pop
icebp
xchg
adc
inc
or
xchg
jno
add
rcll
pop
fmull
data16
pop
pop
push
push
mov
in
iret
mov
shl
aam
dec
rorl
fstpt
pop
cmp
jp
fcomp
outsl
cmc
hlt
and
lods
popf
push
ja
or
sbb
jne
dec
pop
xchg
bound
in
addr16
fidivrs
inc
sbb
js
andb
or
mov
mov
leave
xlat
jg
and
shll
lcall
faddp
push
fstl
aam
xchg
mov
sub
mov
mov
fwait
cs
out
mov
dec
cs
mov
scas
xor
inc
mov
push
add
cmpsl
fildl
pop
loop
dec
bound
sub
sar
mov
push
sbb
repz
fidivl
push
stc
mov
jb
add
mov
xchg
mov
ret
sti
sti
pop
lock
out
movsl
adc
xchg
in
std
ja
pop
sti
out
jb,pt
ja
arpl
movsb
int
cld
push
stos
jb
in
fnsave
pop
pushf
in
test
mov
push
push
outsl
loope
push
inc
pop
stos
cmp
mov
loop
movsl
imul
inc
bound
sub
outsb
lods
in
mov
imul
push
or
or
cltd
in
pop
dec
fcmovb
dec
jno
scas
push
mov
mov
out
repz
sbb
xor
and
fwait
pop
inc
mov
ljmp
sbb
iret
roll
xor
ss
addl
push
mov
mov
fwait
aad
out
ljmp
dec
fwait
in
popf
mov
inc
xchg
push
cs
data16
push
cmp
les
int3
or
cmp
in
xor
test
sbb
aas
or
sub
pop
mov
rcrl
js
movsb
ret
push
out
jae
push
pop
inc
sbb
mov
xchg
cmp
rcrb
push
add
push
mov
inc
mov
shrb
xor
xor
cmpsl
dec
xchg
imul
pop
pop
call
fucomi
out
or
cs
cwtl
lods
arpl
jmp
test
popf
jb
mov
not
add
mov
clc
fcomps
test
mov
pushf
push
mov
mov
lret
sbb
xchg
test
inc
cmp
cmp
cmpl
cld
mov
loop
mov
into
and
dec
clc
and
test
stc
mov
ja
cmp
daa
movsl
cmp
or
dec
jp
pop
in
shlb
inc
or
add
loope
ja
sti
icebp
iret
dec
call
sahf
outsb
loope
outsl
inc
adcb
ficomps
adc
mov
sarl
hlt
negl
pushf
push
jb
lcall
jb
or
ss
jne
mov
push
lahf
jl
xor
or
sub
loope
insb
jmp
outsl
jp
adc
xchg
sbb
mov
inc
push
or
push
aaa
xchg
adc
pop
mov
adc
add
in
xchg
xor
push
xchg
int
ret
popa
jp
out
xchg
enter
and
mov
cmp
push
push
cmp
popf
cmp
imul
pop
daa
leave
inc
push
leave
adc
mov
jnp
mov
rol
stos
dec
mov
cmp
cmp
adc
aad
sub
jmp
sbb
add
xchg
lods
mov
cmp
sub
xchg
cmp
push
inc
push
fnstcw
mov
cmp
adc
mov
insl
cmp
shl
xchg
sar
lea
fbstp
sbb
call
loopne
arpl
sbb
push
push
stos
push
adc
and
push
cld
das
scas
mov
in
outsb
in
scas
dec
bound
push
out
cld
add
outsb
inc
pop
mov
add
lret
add
sbb
aad
stc
mov
int
lret
sbb
je
ljmp
outsb
cmp
insl
outsb
ret
xchg
cmp
clc
je
gs
cli
in
xor
jnp
jne
xor
lds
or
shll
or
bound
jbe
scas
mov
add
jns
stos
std
adc
push
xchg
adc
fldenv
cmpl
mov
pop
sti
or
jmp
dec
jle
adc
int3
mov
mov
test
mov
or
mov
cmp
xchg
sub
and
inc
out
bound
mov
sub
out
jmp
push
in
dec
das
xchg
pushf
movsl
mov
in
fstp
test
imul
cmp
jo
outsl
jno
xchg
cmp
or
mov
repz
shrl
out
mov
test
loopne
in
enter
mov
sbb
fsts
lea
std
add
aad
adc
xchg
popa
ficoml
mov
insl
lret
dec
insb
mov
and
dec
dec
xor
mov
jge
dec
jp
jb
je
decl
repz
lret
xchg
cltd
xor
cli
clc
dec
lcall
push
fs
lock
sbb
ret
or
andb
add
imul
lcall
inc
test
data16
sbbb
xchg
fcmovnb
jle
insl
pop
rcll
adc
dec
cli
out
and
xor
push
xor
test
pop
inc
push
jge
jnp
mov
sub
mov
adc
or
rcrb
pop
sbb
or
clc
pusha
dec
and
dec
insl
rep
ficompl
mov
std
sbb
aam
in
lret
adc
in
sahf
mov
pop
enter
gs
pop
pop
cmp
mov
test
dec
push
add
xor
cmp
add
rcrb
push
push
pop
pushf
les
cmp
cs
and
rclb
repz
dec
into
call
dec
shll
adc
sub
mov
xchg
jp
scas
or
pop
fwait
lods
fbld
pop
in
pop
sub
mov
push
xlat
dec
fmull
cmpsl
adc
imul
xchg
or
xchg
mov
shll
movsl
dec
add
xor
arpl
pop
shlb
mov
mov
stc
dec
stos
sbb
or
mov
rcll
push
sub
or
sbb
push
jle
ficompl
xor
repnz
mov
fldt
push
pop
pop
mov
cltd
mov
leave
sarl
inc
test
fstl
jnp
xchg
pop
ds
repnz
jae
dec
movsl
sbb
addr16
fldcw
mov
jle
sbb
lret
push
cmp
mov
cltd
pop
mov
mov
mov
cmp
das
jo
fnstcw
lret
movl
insl
jne
fisubrl
xchg
fwait
aad
into
adc
gs
or
adc
mov
xlat
add
pop
cmp
push
inc
xor
push
movsl
ret
sbb
push
sbb
xchg
cmpsb
ljmp
sub
dec
ss
xor
in
out
dec
and
push
outsb
add
push
mov
jge
arpl
sbb
or
mov
movsb
add
repnz
or
pop
xor
sub
or
jmp
inc
enter
aaa
or
mov
xchg
loop
push
mov
sub
das
or
mov
mov
inc
sub
mov
rclb
scas
into
shll
mov
scas
add
cmp
in
and
or
dec
xor
cmp
sarl
sub
mov
daa
lahf
pop
sub
mov
scas
mov
xchg
cwtl
mov
dec
clc
cs
cs
sbb
mov
dec
lock
mov
test
or
fisubl
into
loop
add
in
dec
call
sbb
into
sbb
fcomps
and
pop
addl
or
std
dec
clc
fs
add
scas
mov
stos
and
pop
loope
cld
outsl
mov
and
stos
scas
sub
cli
xor
popf
fs
mov
aas
jb
rcr
out
daa
sbb
jns
call
mov
std
out
or
add
push
cmp
adc
jmp
mov
cmp
mov
xor
or
dec
into
cmp
push
xor
dec
insl
ds
mov
ja
imul
sub
mov
sub
dec
fistl
adc
jb
pop
push
cwtl
jbe
or
fcoms
ss
push
xchg
or
movsb
sbb
icebp
jmp
lods
mov
pop
testl
rorl
xor
xchg
jno
pop
jl
sbb
stos
hlt
dec
daa
test
pusha
in
cmp
push
les
xchg
ja
sub
ret
pop
mov
xor
mov
es
pop
repz
sbb
pop
popa
shlb
test
imul
mov
pop
cwtl
insb
sbb
lds
sarl
push
ret
rol
jae
add
je
hlt
xor
mov
xor
jno
es
testl
mov
insb
popa
jno
popf
mov
inc
decb
xchg
mov
rcrb
mov
sbb
or
int
cmp
mov
enter
int3
sub
inc
or
dec
movsl
mov
push
dec
ja
test
aad
add
mulb
iret
clc
sbb
dec
lahf
or
cmp
insl
jmp
jo
imul
dec
xchg
dec
pop
insb
push
xor
insb
les
psraw
pushf
inc
inc
jp
cli
mov
loope
push
cmp
popf
addr16
adc
adc
pop
lcall
push
movsb
lds
mov
aas
xchg
pop
pop
cmpsb
mov
les
gs
pop
ja
push
bound
xchg
divb
pop
std
jae
inc
dec
cmp
popa
pop
lea
arpl
mov
xor
testb
jl
fcomps
sub
add
jb
popf
add
xchg
or
es
jecxz
xchg
stc
jmp
cmc
mov
mov
sahf
pop
les
mov
pop
sahf
mov
inc
push
dec
aad
inc
mov
aaa
mov
xchg
dec
cwtl
ja
jge
push
inc
inc
cmp
shll
fiaddl
mov
cs
adc
mov
pop
lds
lods
cmp
dec
mov
lea
icebp
mov
xor
je
pop
cmp
jl
ret
out
mov
fistl
push
adc
or
fimuls
nop
and
and
cmpsb
xor
push
gs
or
sbb
mov
jne
adc
mov
sahf
dec
mov
adc
test
insl
icebp
les
into
jmp
xor
mov
shlb
mov
test
gs
nop
rcrl
mov
out
xchg
jg
pop
sub
cmp
inc
mov
aaa
pop
outsl
je
rorb
cmp
push
adc
mov
pop
andb
push
outsl
sbb
mov
dec
mov
add
add
xlat
sbb
je
imul
inc
cli
pop
aam
xchg
mov
add
jmp
repnz
dec
xor
rclb
push
iret
das
mov
outsl
mov
xor
insb
dec
mov
mov
js
sbbb
inc
addr16
jae
popf
mov
pusha
mov
gs
lcall
popa
shlb
rcrl
lahf
imul
outsl
cmpsl
cltd
adc
fwait
cmp
xlat
loop
in
testl
addl
fsubr
or
aaa
fsubrp
adc
iret
ds
fldl
sub
icebp
mov
out
jmp
dec
xor
xor
cmp
movsb
dec
add
popa
je
jmp
lcall
dec
sqrtps
icebp
pop
arpl
ja
fmuls
jns
push
outsl
cmpsl
stc
pusha
fdivl
fldl
pushf
mov
push
movsl
mov
push
mov
and
xchg
scas
sub
test
iret
dec
mov
pop
scas
icebp
dec
sub
out
fstps
notb
sub
cltd
rcl
rolb
dec
into
push
cmp
int
push
sahf
pushf
cmp
or
push
mov
sub
jge
cmp
mov
int3
mov
or
lock
xchg
dec
hlt
xchg
shll
out
movsl
scas
lods
ljmp
je
je
movsb
mov
enter
dec
dec
mov
lcall
insl
scas
rcr
sbb
dec
jle
gs
xchg
lock
fmulp
xor
cmp
push
into
inc
mov
jnp
push
mov
imull
dec
fdivs
int3
add
push
nop
loopne
and
mov
xor
pusha
insb
dec
repz
ljmp
sbb
mov
push
inc
push
fs
loop
mov
arpl
jnp
push
pop
movsl
cmp
xchg
inc
loope
dec
inc
aaa
lea
and
adc
fstpl
aad
out
pop
and
popf
sub
push
add
push
lock
fcoms
clc
lock
adc
mov
movsb
dec
xchg
push
out
add
outsb
push
mov
mov
dec
dec
test
xchg
add
push
jno
bound
and
notl
lret
dec
adc
lahf
pop
imull
push
fldl
movsb
dec
sub
in
mov
pop
fstp
mov
and
sub
cmp
hlt
add
add
pop
ret
cmp
mov
ljmp
xchg
cmp
fs
push
ss
mov
mov
or
call
sbb
jne
jecxz
repz
mov
lret
out
stc
fistps
sub
pusha
sbb
mov
xchg
loop
in
test
les
xor
or
ret
insl
bound
ss
insl
lods
insb
leave
loope
xchg
pop
inc
mov
mov
add
sti
mov
push
arpl
pop
sub
cmpl
mov
hlt
aam
mov
jae
outsl
mov
leave
add
dec
ljmp
cmp
push
enter
jle
or
leave
insl
aad
stos
sbb
inc
pop
cli
pusha
insb
mov
xchg
pusha
xor
icebp
jmp
pop
ficoml
mov
pusha
lods
xchg
insb
dec
das
imul
adc
sub
out
adc
xchg
andb
incb
in
icebp
cltd
jo
xchg
mov
inc
loopne
dec
cmc
mov
in
je
xchg
out
dec
aad
fcmovnbe
push
and
pop
inc
std
or
cs
pushf
and
sbb
mov
xor
jle
fwait
jnp
subl
cmp
cwtl
mov
jae
inc
mov
push
insl
push
fcomps
mov
sbb
xrstors
out
and
pop
push
daa
in
adc
xchg
jnp
into
les
push
cmp
outsl
out
mov
mov
test
lods
jns
shrl
imul
or
cmp
outsl
jp
out
pop
fildll
lret
jb
or
xchg
mov
mov
cld
inc
scas
add
test
out
jne
mov
fstpl
add
mov
je
dec
aam
cmp
sub
sub
sarb
pop
test
push
jmp
imul
cmpsl
out
push
jecxz
in
lret
and
mov
je
lret
es
hlt
subb
movl
jae
shrl
push
in
cli
gs
mov
aad
sub
addl
aaa
inc
dec
lock
xor
push
js
pop
clc
cmp
jbe
enter
lock
and
xor
clc
jle
lods
jp
sahf
into
iret
push
push
sar
sti
sahf
mov
lds
push
sbb
bound
mov
int3
cmp
cmp
mov
dec
pushf
lock
xchg
insb
ljmp
daa
movsl
mov
pop
cli
add
int
xchg
jg
aam
das
dec
cmp
scas
std
adc
xchg
hlt
out
mov
jge
gs
adc
adc
push
div
add
adc
shlb
jb
jns
mov
jp
xchg
push
je
mov
data16
lods
adc
fcom
fwait
lods
in
inc
inc
xorb
pushf
push
test
and
push
add
icebp
xor
jne
or
push
iret
repnz
leave
sarb
lock
ret
cmp
mov
sbb
mov
test
enter
pusha
push
xor
rcrl
xchg
xor
cld
dec
inc
sub
xchg
leave
rclb
rolb
and
or
pop
rcrb
ja
adc
push
movsl
pop
movsl
lods
and
push
mov
aam
sub
xchg
fwait
ljmp
outsl
in
aam
inc
cmp
out
pushf
add
scas
aam
sbb
push
xchg
rcrb
scas
cmpsb
mov
divb
xor
mov
nop
aas
pop
mov
push
mov
decb
and
pop
inc
sub
movsb
dec
mov
xchg
mov
adc
jb
and
xchg
xchg
rcr
sub
stc
sahf
fidivs
xchg
inc
out
push
jge
out
test
jg
lret
cmp
ja
movsb
or
push
hlt
ljmp
push
movsb
and
xchg
sub
lock
mov
cltd
dec
outsl
aad
jl
in
lahf
add
mov
scas
addr16
stos
push
adc
sbb
sub
aam
outsl
les
mov
add
aaa
mov
jle
test
lcall
inc
loopne
lds
jle
dec
stos
sub
pop
pop
cmpsl
push
pop
mov
pop
ss
mov
adc
imul
stos
arpl
sbb
add
pop
cmpsb
mov
test
mov
push
imul
add
mov
dec
scas
loop
sbb
sarb
aam
cld
cmp
popf
pop
test
dec
adcb
add
push
push
sub
jmp
and
cmp
call
xor
gs
push
add
test
insl
xchg
cmc
xlat
pop
mov
popa
mov
leave
adc
push
in
rolb
or
aad
repz
push
std
cs
out
shl
out
mov
ljmp
pop
outsl
adc
jg
adc
mov
hlt
lcall
xchg
cmp
lds
jo
jg
add
pop
pop
bound
popf
push
enter
sbb
lods
leave
mov
mov
add
addr16
pop
ljmp
sub
pop
cli
iret
fnstsw
cmc
inc
sbb
stos
xchg
inc
xor
lret
lahf
push
sub
sbb
jmp
sbb
adc
adc
add
inc
notb
imul
insb
jmp
jl
jbe
inc
ja
inc
mov
into
xor
pop
xchg
and
outsl
lock
bound
rcl
repnz
add
inc
in
aam
aaa
lea
lret
push
xchg
orb
fdivrp
out
mov
testl
iret
jg
pop
pop
adc
sub
cmp
push
test
dec
in
sub
ret
lods
sub
inc
test
add
xchg
xchg
sub
push
jne
push
push
jmp
mov
lods
in
popa
mov
pop
or
mov
or
insl
jg
xlat
lahf
mov
test
bound
cmc
test
jne
mov
jnp
xor
xchg
cmpsl
sub
push
add
cmp
shlb
adc
pop
es
or
adc
mov
fwait
push
sub
add
xchg
inc
cmpsl
add
cmpsb
sub
cwtl
mov
imul
rolb
push
sbb
or
xor
add
rcr
cmpsb
notl
insl
push
push
jle
arpl
sbb
jle
adc
xor
jecxz
pop
fwait
xor
jb
adc
jle
mov
jnp
cmp
aad
test
xchg
xchg
mov
xor
cli
dec
mov
jge
lock
data16
and
stos
int3
jns
jb
jbe
lcall
aaa
mov
cs
jmp
iret
mov
push
mov
mov
mov
sub
jg
mov
mov
adc
pop
leave
and
adc
lods
outsb
test
aam
lret
cmp
pushf
movsl
xor
mov
daa
clc
ljmp
push
arpl
pop
add
popf
and
fs
mov
scas
cwtl
inc
out
adc
pop
loope
lods
fdivl
stc
pop
mov
mov
mov
sbb
xchg
add
sub
push
xor
jecxz
sbb
shlb
std
mov
rcr
lret
adc
sub
shll
pop
mov
add
shll
inc
in
and
fcmovbe
jae
mov
add
sbb
hlt
dec
xchg
sbb
mov
stc
and
mov
adc
cmp
mov
cmp
ljmp
push
into
test
repz
das
cmpsl
xchg
gs
lret
xchg
mov
add
mov
daa
jae
add
enter
or
cmpsb
sbb
inc
lods
imul
xchg
pop
int
data16
lahf
shlb
adc
xor
or
outsb
popf
es
and
pushf
popa
mov
pushf
jbe
sub
xchg
cmp
push
push
mov
cmpsb
xchg
inc
fwait
or
insb
enter
shll
push
pop
mov
in
sahf
xlat
imul
inc
dec
mov
or
mov
push
icebp
ds
pop
nop
or
sub
enter
push
mov
sbb
mov
add
mov
roll
dec
shl
inc
dec
lret
cmp
sar
pusha
dec
ret
adc
xchg
or
xor
call
pop
xor
and
jge
std
add
push
test
dec
or
dec
bound
leave
es
and
jb
or
dec
jno
dec
in
sub
stos
adc
insb
cmp
pop
cs
xchg
push
add
dec
dec
dec
push
jns
xor
lret
xchg
push
and
lcall
inc
mov
mov
cmp
inc
fcom
test
jp
mov
xor
pop
jge
push
xchg
xor
addr16
cmpsb
push
xor
mov
jle
in
arpl
fs
jne
dec
and
xchg
mov
in
ret
mov
je
xor
cmp
jbe
addr16
lret
pop
mov
enter
pusha
in
incl
inc
and
pop
imul
sub
push
cmp
ljmp
add
jecxz
inc
js
movsb
and
out
sarl
pop
inc
jp
enter
loope
xor
hlt
sub
aas
or
push
or
inc
push
fmulp
daa
cmp
mov
inc
pop
cmp
lock
dec
test
push
inc
je
or
and
rcll
inc
pusha
mov
sub
mov
test
push
repz
imul
arpl
sarl
mov
test
test
pop
adc
leave
scas
adcb
mov
mov
ja
pop
pop
mov
xor
and
ljmp
out
jno
xor
xor
ja
push
xchg
aam
adc
xor
jns
repz
aaa
adc
push
pop
xlat
gs
roll
inc
icebp
mov
mov
jle
shll
xor
push
jle
and
ror
xchg
and
and
mov
pop
adc
mov
pop
test
je
mov
cmp
cld
sub
ss
sub
sub
andb
jle
out
test
jp
lea
sbb
insl
sbb
pop
pop
cmp
add
stos
aaa
push
ret
mov
cmc
fs
loope
fucomp
pop
dec
xchg
nop
jb
mov
int3
xor
insb
dec
dec
mov
inc
pop
add
mov
fbstp
add
out
mov
aaa
push
dec
add
adc
divl
fnstenv
or
es
adc
out
rorl
pop
add
in
jae
sub
and
lret
dec
inc
xchg
mov
test
jl
xor
push
outsb
pushf
sbb
cmp
mov
push
bound
push
lcall
js
pop
test
test
lds
mov
push
push
pusha
enter
cwtl
adc
xchg
aas
or
fsubrs
ljmp
out
loope
xchg
fs
cmpsb
aas
fisttpl
mov
xlat
xchg
fs
pushw
popf
leave
aad
and
hlt
inc
jg
jmp
sub
adc
jo
sbb
cltd
in
imul
arpl
push
add
cld
and
mov
in
cld
ret
jge
lret
cmp
movsb
sbb
popf
mov
xchg
inc
jge
cs
dec
mov
xor
movhps
sbbb
sbb
ret
adc
sahf
cmp
test
movsl
mov
cmp
and
push
add
mov
xor
ret
inc
and
cmp
dec
xor
push
fs
or
xchg
int3
inc
shlb
xchg
stc
pop
out
mov
or
or
mov
inc
jo
push
test
sub
mov
into
inc
jne
rolb
and
mov
mov
and
pop
mov
mov
mov
fcmovne
fisttps
clc
xchg
mov
mov
mov
xchg
pop
jmp
inc
jl
icebp
ret
or
push
cmp
cmp
das
fidivrl
mov
push
xor
outsl
pop
das
inc
xchg
repnz
jb
cmovne
pop
pop
pop
in
mov
out
jecxz
jne
mov
icebp
add
loope
into
mov
cs
add
sahf
mov
les
stc
mov
and
ja
dec
std
in
and
lods
daa
dec
lock
push
sarl
cs
repz
out
jl
sti
icebp
pop
les
push
leave
xor
imul
shrb
push
pop
test
popa
mov
aas
adc
out
jecxz
sbb
mov
and
popf
jno
cli
jo
clc
jb
pop
stc
xchg
shrb
int
and
out
scas
inc
push
addr16
pop
adc
jne
mov
subb
ret
mov
mov
in
add
cmpsl
pop
jae
push
sub
mov
out
xchg
aam
or
sub
das
or
mov
adc
mov
adc
mov
fwait
lcall
fs
enter
lahf
notl
out
sub
sbb
cmpsb
xchg
and
jne
push
lret
and
testl
test
fisttpl
iret
inc
faddp
mov
cmpsl
fwait
mov
add
mov
aaa
push
fs
sbb
inc
xchg
lea
pop
aaa
jne
pop
add
xor
rcrl
xchg
dec
cmp
pop
push
lahf
mov
xchg
ret
stos
add
arpl
gs
or
add
xor
hlt
or
push
dec
roll
mov
loope
shl
xchg
xlat
icebp
pushf
jo
gs
push
stc
mov
jb
cmc
lcall
jp
xlat
push
adc
popa
push
mov
push
xor
aam
sbb
jmp
fcomps
inc
outsb
loopne
sub
jno
sub
ficompl
outsl
mov
lods
stos
loope
or
mov
add
mov
outsl
adc
adc
pop
mov
mov
jb
cmc
test
sbb
cmp
ret
pop
addr16
out
mov
sbb
sbb
adc
jp
dec
bnd
lahf
jmp
les
in
pop
pop
sbb
push
pop
scas
add
fsub
mov
clc
jne
jmp
and
push
insb
mov
dec
xor
sbb
jno
fwait
add
pop
aam
ljmp
jno
jbe
inc
mov
push
sti
and
mov
ret
adc
mov
repz
adc
in
imul
add
rcll
inc
push
and
adcl
dec
or
xchg
pop
nop
or
xchg
sahf
jne
stc
mov
pop
mov
adc
sbb
rol
lret
int
ret
pop
jns
lea
add
sbb
adc
mov
xchg
push
cmp
adc
lea
mov
pop
dec
mov
stos
mov
repnz
pop
jbe
mov
mov
or
dec
pop
pop
in
jp
pop
push
push
jo
fimuls
xchg
sub
sbb
sbb
push
test
lods
cmp
push
out
push
cltd
faddl
add
and
imul
push
and
bound
fcmovnbe
ds
fwait
stc
sti
fs
icebp
into
arpl
sub
dec
das
lds
or
clc
das
dec
fcomi
mov
mov
cmpsb
push
add
adc
or
out
add
xor
push
add
fildll
adc
add
xor
cmp
test
enter
ret
dec
dec
push
dec
scas
cli
jmp
xchg
outsb
inc
inc
add
pop
mov
std
leave
cmp
aas
dec
pop
cmp
or
hlt
mov
ds
or
cmp
push
inc
pop
ja
jns
dec
adcl
imul
pop
sub
or
or
inc
scas
push
test
xlat
cmovne
lahf
push
add
loopne
rol
bound
xchg
test
and
mulb
dec
pop
scas
popf
dec
mov
outsb
inc
jb
push
stos
mov
outsl
pushf
mov
ret
imul
imul
inc
je
test
int
int
sbb
outsb
notl
insl
mov
sbb
nop
and
adc
inc
xor
inc
or
int
xchg
inc
sbb
repnz
test
pop
pop
push
insl
and
sub
sub
incb
data16
and
repz
push
fbstp
sbb
aas
mov
loope
rorb
lock
lretw
cwtl
jno
xor
jle
dec
add
inc
adc
sbb
bound
cmp
or
pop
jle
notl
fiadds
bound
lret
lcall
jns
mov
sbb
fs
add
add
adcb
inc
push
hlt
bound
jne
out
mov
movb
rorl
out
imul
jmp
dec
mov
push
adcb
sar
mov
xor
loop
push
add
mov
loopne
mov
lods
lahf
lods
dec
in
js
pop
sub
ds
mov
lret
cwtl
inc
mov
daa
dec
dec
xchg
or
add
dec
cli
jb
cmp
sub
mov
mov
ja
iret
ret
and
push
lret
cmp
adc
push
or
add
pop
rep
call
mov
push
xchg
ror
aad
mov
and
scas
repz
jns
lea
push
adc
and
mov
adc
dec
ds
pop
call
aam
sbb
xchg
pusha
fists
lock
mov
or
fucomip
jns
clc
fcomp
mov
aam
enter
outsb
bound
push
and
jo
ret
xor
ret
inc
pop
sarb
mov
add
adc
jns
imul
fcmovnb
mov
iret
out
cmc
jnp
bound
push
pop
lret
dec
fldt
scas
stc
or
bound
mov
xor
dec
lret
daa
es
add
and
xchg
inc
cmp
aad
stos
stc
adc
mov
leave
sbb
cmp
xchg
xchg
inc
mov
xor
dec
cs
xchg
loope
xlat
dec
test
js
mov
inc
lretw
test
loop
jo
cmc
dec
fwait
mov
cmp
sahf
jne
int3
stos
xor
mov
dec
push
lret
pop
mov
jo
sbb
sbb
ds
mov
mov
or
scas
arpl
leave
outsb
arpl
call
int
xor
mov
int
cld
inc
ds
push
leave
sub
popf
cmpsb
lock
adc
movsb
adc
or
aam
jp
out
enter
dec
jns,pn
idivb
inc
push
rclb
adc
jbe
mov
xchg
jp
dec
xchg
mov
jns
cmpsb
or
add
gs
xchg
dec
adc
loop
jg
add
mov
or
jmp
pusha
out
mov
ret
cmpsb
sahf
pop
jg
mov
hlt
rclb
es
cmpb
push
push
inc
cmc
mov
fwait
and
movsl
fucomp
pop
aam
inc
xor
cmpb
stos
stos
and
clc
cmpsb
mov
pop
mov
out
imul
adc
insl
pop
push
mov
cli
cltd
mov
jmp
pop
int3
dec
int3
cs
sbb
retw
xchg
dec
pop
xor
add
pusha
orb
jo
mov
pop
pop
insb
xchg
in
jno
jmp
lods
and
hlt
dec
cmp
mov
xchg
incb
enter
std
out
mov
pop
jno
mov
jge
ficomps
leave
sub
in
or
push
aaa
loop
adc
adc
xor
jne
push
jg
xor
xchg
pushf
jns
out
fs
out
aad
jp
aad
xchg
repnz
insl
sub
jecxz
sbb
mov
pop
jp
fdivr
test
add
lea
repz
mov
cmc
daa
inc
mov
imul
push
movsl
mov
lds
outsl
add
inc
cmpl
mov
pushf
jl
ret
and
popa
inc
cmp
cmp
push
rcrb
adc
mov
mov
mov
or
js
cmp
pop
cli
flds
inc
je
in
adc
call
add
sub
addr16
sub
cmp
pushf
pop
xchg
mov
repz
adc
cmp
enter
mov
or
mov
jne
push
pushf
cltd
push
negb
xchg
mov
adc
fiadds
sbb
pop
xchg
inc
mov
or
sbb
shlb
mov
outsb
jmp
mov
dec
push
ret
movsl
jg
arpl
in
ss
add
and
cltd
filds
ror
aas
popa
stos
mov
fwait
push
push
fsincos
adc
cs
mov
push
xchg
movsl
mov
cs
jo
jmp
movsl
test
hlt
jno
lock
out
jge
sbb
shll
bound
leave
sbb
or
sti
lret
movsb
mov
and
pop
cld
shll
xchg
jecxz
bound
mov
mov
xchg
mov
and
mov
xor
xchg
dec
das
mov
ret
mov
loop
jmp
xchg
data16
pusha
adc
cmc
pusha
in
stc
out
mov
mov
sbb
popf
movsl
mov
pop
dec
add
subb
arpl
push
mov
jecxz
orl
or
mov
push
xchg
xor
jmp
and
cwtl
fsubrl
bound
pop
popf
xor
stc
pushf
into
and
xchg
dec
in
outsb
mov
test
mov
pushf
push
cmp
sti
dec
mov
clc
ror
and
push
and
mov
clc
in
lcall
mov
sub
fmull
lea
mov
lret
pusha
ret
test
mov
cld
imul
mov
inc
jmp
dec
add
sbb
pop
jo
nop
pop
push
arpl
sbb
cmp
orb
jmp
shrl
test
mov
xchg
jmp
xorb
xchg
pushf
pusha
shll
or
ret
xor
mov
iret
mov
flds
and
mov
mov
fstl
movsb
iret
stos
test
push
subl
loopew
xchg
xchg
out
imull
sbb
cmp
add
iret
pop
das
and
test
fimull
ret
jo
shll
test
cli
comiss
jmp
dec
sbb
adc
jecxz
mov
sbb
jge
dec
lret
notl
dec
jmp
mov
dec
mov
mov
adc
in
stos
aad
jl
cmp
fbld
mov
out
xchg
pushf
dec
fucomp
scas
popa
outsb
add
pop
sbb
test
test
repnz
pop
leave
sbb
hlt
jp
or
xor
popa
inc
jecxz
ds
imul
leave
adc
shlb
jl
adc
lcall
add
or
shlb
fistps
dec
xchg
js
ja
pop
and
fstl
xchg
xor
mov
xchg
adc
pop
or
insl
xchg
jo
lods
dec
pushf
jle
leave
mov
pop
into
shrb
enter
test
gs
push
sbb
push
out
mov
push
lds
nop
inc
hlt
or
lods
pop
cwtl
js
adc
repnz
jp
push
aaa
sbb
dec
mov
insl
mov
push
mov
leave
jecxz
rolb
cltd
or
xchg
push
and
pop
pusha
or
dec
jne
outsb
iret
mov
mov
data16
mov
xor
int
xor
pop
push
dec
ficomps
enter
mov
in
jge
std
into
rcr
pop
mov
push
sub
add
orb
movsl
mov
add
xor
push
jb
loopne
dec
mov
add
jne
pusha
ljmp
gs
movsb
fidivs
pop
push
aad
lea
sti
rol
mov
out
adc
mov
mov
divb
fwait
test
data16
sarl
out
sti
jno
cmp
in
out
and
mov
outsl
idivb
fldcw
jl
xchg
mov
scas
push
mov
jmp
into
or
or
xor
mov
push
jecxz,pt
mov
mov
push
rcll
scas
repz
push
cmp
xlat
cmp
es
hlt
cld
pop
rclb
in
dec
rolb
test
xchg
das
xchg
or
lods
popa
fcmovnu
xor
cmp
add
cli
push
lahf
outsb
cmp
mov
enter
sub
pop
pop
mov
push
ss
jns
mov
mov
sbb
ss
push
and
cld
jp
push
xor
xor
insb
mov
jns
repnz
adc
cmp
mov
insl
push
daa
bound
and
push
sub
aaa
movsb
aad
jmp
fs
ss
inc
clc
xchg
fs
sbb
adc
cmp
je,pn
mov
or
pop
add
je
add
sbb
add
xlat
sbb
xchg
popf
enter
addr16
mov
pop
stc
lret
jns
and
inc
fisttps
and
out
add
dec
xor
pop
int3
cmpsl
inc
mov
add
inc
adc
xchg
rcrl
lahf
ds
push
cmc
mov
std
jg
insb
mov
cmpsl
pop
cwtl
pop
das
adc
aaa
mov
cmpsl
xlat
stos
inc
imul
xor
repz
jle
push
enter
or
shrl
loope
fldl
mov
xchg
push
cmp
xchg
mov
xchg
lret
bound
dec
xchg
je
std
inc
daa
nop
mov
test
dec
int3
mov
pusha
mov
jp
test
xchg
cmp
movsb
push
mul
addr16
loopne
xor
push
or
mov
adc
inc
cmp
inc
jecxz
stc
shr
mov
lcallw
out
cmp
xchg
dec
fmulp
xor
cmp
ret
nop
xchg
nop
and
pop
jle
xchg
add
xorb
pop
mov
icebp
xchg
ja
mull
jae
adc
out
out
dec
cmp
jmp
and
and
and
inc
mov
out
push
inc
jp
cmp
mov
imul
dec
outsl
stc
std
push
push
adc
setnp
inc
jg
jecxz
in
push
fwait
in
pop
xor
jmp
cwtl
std
sbb
out
adc
cmpsl
test
inc
arpl
pop
cmp
scas
jp
cltd
testb
pop
xchg
mov
shrb
adc
adc
scas
sahf
lds
or
sahf
movsb
inc
push
mov
dec
cld
rcr
rcr
arpl
loopne
pop
repnz
dec
xor
add
or
inc
or
fiaddl
or
jne
pop
pushw
loope
es
pop
mov
sub
xchg
ja
leave
or
imull
xchg
sbb
shrl
and
xchg
adc
fcompl
push
out
mov
pop
jae
bnd
fistpll
mov
push
xchg
dec
sbb
add
mov
repnz
dec
jl
pop
inc
outsb
jmp
mov
lret
fldl
push
lods
xchg
adc
add
into
cmp
cmpsb
and
push
aaa
aaa
mov
inc
jbe
dec
lret
sub
xchg
sbb
lcall
or
mov
cs
or
inc
bound
dec
outsb
and
mov
xor
and
enter
adc
gs
lcall
inc
repnz
fwait
mov
stc
xchg
jbe
out
mov
fs
std
pop
and
cmp
aad
pop
sub
fists
dec
or
lea
out
dec
sbb
mov
mov
outsb
push
ljmp
fists
out
mov
insb
insl
inc
cmp
fs
lahf
jg
cmc
js
inc
ss
pop
jecxz
mov
mov
mov
xchg
sub
pop
jne
insl
hlt
pop
sbb
lock
cmp
adc
aaa
jmp
stos
add
sti
mov
push
popa
ret
xor
xor
lret
imul
inc
push
sub
mov
xor
push
mov
das
jno
adc
xchg
ss
ds
xchg
stc
or
sbb
jbe
in
notl
xorl
enter
jnp
push
ss
test
xchg
addb
mov
rcll
add
dec
fwait
clc
and
shrb
stos
test
repnz
mov
mov
lods
in
aam
or
loopne
or
icebp
add
xchg
adc
movsb
sub
xor
adc
xor
mov
push
sub
enter
push
mov
or
jb
nop
jge
pushf
icebp
jl
sbb
insl
imul
xchg
mov
inc
pop
js
out
insb
fiaddl
frstor
aam
call
xlat
xor
or
das
jecxz
test
fcomps
and
mov
fisubs
int
jmp
scas
in
jno
das
jns
jb
pusha
jle
addr16
inc
adc
pop
xor
and
sbb
stos
imul
insl
mov
cmpsb
repnz
cli
dec
ja
xlat
sbb
jmp
rolb
cmp
pop
mov
jo
aam
xchg
jmp
sub
sbb
aas
pop
int
je
mov
adc
inc
sub
sub
push
test
fcomps
gs
inc
aam
fistps
push
sub
loop
mov
pop
push
pop
inc
sbb
ror
mov
jg
cli
leave
xchg
pop
sbb
popa
div
add
dec
push
rcrb
pop
rcr
jecxz
movsl
push
loope
mov
fwait
loopne
sbb
js
push
add
inc
bound
ja
sbb
mov
cld
push
push
mov
inc
cmp
mov
icebp
je
mov
sub
mov
sub
popa
sbb
adc
or
out
sub
push
add
ffreep
outsl
mov
shrl
fidivs
mov
xchg
pop
movsl
or
dec
pop
in
loopne
jae
mov
adcb
xor
mull
mov
mov
ror
cmc
push
in
aad
sbb
xchg
inc
and
cwtl
sahf
mov
adc
cmp
cmpsl
sahf
incl
sbb
or
sbb
xchg
jnp
filds
lock
dec
les
jae
mov
mov
and
mulps
repnz
pop
adc
cmp
push
stos
and
jbe
fstpl
sub
push
mov
fsubr
mov
adc
sbb
push
das
icebp
lds
movsb
mov
cmp
mov
mov
lods
scas
imul
popf
ret
js
mov
imul
xor
cmpl
xor
orb
mov
push
mov
push
daa
repz
pop
xchg
out
sahf
test
push
mov
mov
std
pop
push
or
cmp
add
pop
js
jecxz
popf
addr16
push
ja
gs
imul
xchg
nop
and
dec
lea
int
test
cli
cmp
mov
jbe
push
or
cmp
imul
xchg
dec
inc
test
flds
outsl
mov
fninit
dec
andl
icebp
repnz
insl
insl
rcl
psrad
pop
mov
stos
pushf
push
fwait
cwtl
jnp
fwait
jo
into
lods
mov
xor
cmp
insl
mov
dec
add
sbb
test
ret
xor
pushf
cmpsl
es
ljmp
mov
dec
mov
sub
imul
mov
or
loop
pop
add
addl
xor
mov
pop
mov
jbe
test
fsubrl
pop
mov
jl
or
lods
test
mov
sub
inc
ja
push
ds
inc
je
pop
inc
mov
pop
sbb
or
dec
mov
ficoml
nop
or
jmp
pop
push
or
dec
outsb
lcall
push
or
mov
push
sbb
add
and
loope,pt
sub
xchg
mov
mov
adc
lcall
fdivrl
test
pushf
lods
js
sub
push
ror
xchg
mov
pop
pop
jae
mov
enter
cmp
jae
jb
lods
and
pusha
jbe
or
test
pusha
mov
ljmp
clc
mov
sti
iret
pop
cmp
jp
loop
out
popa
mov
cmp
fcoms
add
loopne
int
lret
dec
add
enter
adc
add
and
popf
mov
lret
es
test
lock
inc
inc
cmp
cmp
sub
or
hlt
test
sub
push
movsb
test
shl
lret
fldcw
ficoms
pop
mov
das
imul
insl
pop
rorl
adc
pop
sub
shrl
mov
fsubrs
in
ret
inc
inc
mov
jecxz
gs
addr16
or
jl
push
test
xchg
inc
mov
mov
and
insl
pop
stc
lods
mov
jbe
jle
mov
pop
pop
outsb
mov
imul
cmp
dec
sbb
rclb
sbb
pop
ror
movsl
sti
inc
dec
in
aas
mov
jmp
adc
sbb
push
xchg
jg
push
jge
jmp
scas
jle
xchg
pop
mov
sbb
add
pop
out
push
int3
popf
out
pop
sub
in
jbe
push
cmp
pop
stos
lods
pusha
mov
mov
cmp
stos
dec
push
addr16
bound
jae
pushl
pop
adc
aaa
inc
push
stos
push
jne
les
test
xchg
imul
lahf
cs
popf
sar
sbb
pop
xchg
icebp
mov
pop
mov
shrb
and
and
stos
icebp
out
es
int3
sub
xchg
mov
push
nop
jp
ret
test
addl
out
cmp
lock
cmp
outsb
scas
mov
lret
inc
pop
int3
shlb
push
pop
dec
jge
pusha
scas
jl
cwtl
dec
jns
push
loopne
mov
xchg
insl
dec
xor
mov
out
push
push
gs
or
add
add
xchg
jno
insb
iret
int
adc
dec
in
rorl
in
sbb
test
sub
and
adc
orb
popa
jl
pop
out
sti
jne
mov
loope
popa
jbe
pop
dec
push
in
shl
ja
das
test
jb
jbe
sbb
std
test
mov
jl
testb
inc
cs
shll
addr16
jecxz
pushf
and
push
xchg
push
pop
dec
out
dec
mov
sbb
popa
mulb
mov
insb
add
add
in
push
call
jo
jecxz
or
jecxz
xchg
xor
frstor
in
pop
mov
loope
out
dec
aaa
xor
sbb
ret
xchg
push
dec
mov
in
cmp
daa
mov
outsl
mov
call
cmpsl
sahf
bnd
lret
repz
jne
pop
sub
sub
jns
push
movsl
lret
mov
pop
ficoml
in
out
loop
adc
adcl
call
bnd
cmp
test
je
xor
inc
cli
cld
rolb
dec
inc
cmp
repnz
xchg
fstpl
out
mov
xchg
enter
lret
pop
adc
mov
fsubl
sub
or
jns
sub
add
inc
movsl
jnp
jle
mov
pop
push
push
push
and
jl
pop
icebp
mov
repz
push
ljmp
scas
jg
sub
mov
xchg
pop
daa
lret
and
insl
imull
pop
stos
popf
mov
pop
iret
mov
pop
out
scas
outsl
xor
daa
fs
add
daa
sub
jmp
mov
sub
jmp
cmpsb
or
cmp
insl
mulb
cld
jle
arpl
jnp
idivb
adc
mov
jp
out
pop
add
inc
imul
lret
insl
fsubl
cld
add
lods
dec
and
inc
inc
insb
cmp
jmp
hlt
aad
rorl
push
xchg
fs
pop
je
out
fcoml
xchg
mov
lea
out
mov
int3
mov
into
cmc
call
imul
and
loopne
xchg
mov
fs
or
in
inc
lcall
mov
icebp
sbb
sub
inc
mov
push
cld
push
pop
test
rcrl
ds
adc
pop
adc
xchg
ja
loope
mov
clc
aas
jns
cld
pop
mov
lret
lcall
outsb
xor
lret
mov
adc
mov
sbb
sub
inc
leavew
mov
lcall
add
test
sub
mov
inc
push
loop
arpl
in
or
int
dec
and
sub
push
pusha
mov
or
cs
cltd
out
jne
adc
push
pop
lahf
mov
into
pop
fldl
ret
sahf
mov
add
mov
leave
int3
mov
mov
push
xor
das
inc
in
jmp
gs
lret
addl
repnz
xchg
dec
jne
fldcw
inc
or
pop
mov
aas
xchg
push
adc
sbb
mov
fmul
xor
ljmp
xchg
js
xchg
mov
jbe
stos
shlb
xchg
stos
mov
xchg
or
inc
sarl
cmp
ret
lods
in
imul
mov
popf
fsubrl
pop
pop
adc
fisttpll
out
hlt
gs
jae
mov
pop
mov
js
jmp
push
jl
pop
xor
fdivrs
out
stos
or
inc
xchg
mov
enter
pop
movsl
jle
inc
sbb
scas
clc
jnp
mov
jne
jno
fdivr
cmp
cmp
mov
mov
out
or
pushf
stos
or
mov
adc
pop
es
and
in
shlb
repz
jne
fmuls
lcall
fcoms
mov
add
pushf
outsl
arpl
repnz
mov
iret
in
andl
popf
push
xor
das
or
jbe
mov
clc
add
shlb
or
hlt
push
or
pusha
stc
jmp
or
out
nop
xchg
xchg
dec
or
cmp
add
adc
popa
scas
pop
cmp
insb
out
jo
cmp
cwtl
sahf
fsubrl
mov
cmc
xor
jmp
or
cli
cmp
ja
insl
jb
xchg
ficoms
in
in
outsb
addb
push
xchg
je
mov
xchg
cmp
pop
jb
jne
cld
icebp
imulb
repnz
movsl
arpl
sbb
pop
push
sub
add
cmp
adc
xor
repz
cmc
jl
mov
or
jp
pop
mov
mov
mov
lods
cmp
scas
sti
fisubrs
mov
les
jnp
aam
mov
je
jp
lret
out
daa
popa
aad
mov
cmp
test
loop
add
aad
inc
lahf
aam
cmp
inc
pop
loope
stos
pop
enter
std
or
imul
cmp
das
cmp
ss
push
xchg
and
lods
mov
sbb
rol
xchg
ss
in
or
cmp
negl
and
push
bound
rcrl
mov
inc
jge
dec
sub
xchg
inc
mov
cmp
mov
pusha
fimuls
bound
adcb
dec
scas
cli
adc
jg
sarl
adc
mov
stc
pop
cli
iret
mov
mov
jle
inc
mov
int
out
cmp
das
test
shll
lahf
mov
fcomip
popf
popf
in
fidivrs
add
dec
cmp
lret
test
push
adc
test
lahf
das
rol
insl
pop
addb
rorl
out
iret
inc
cmp
jae
aam
shl
in
pushf
or
aas
imul
add
jle
or
cltd
jge
push
mov
sub
or
shll
aaa
sbb
add
xor
rorb
sub
cld
leave
outsb
fs
dec
cmp
lret
pusha
and
jno
int3
mov
pushf
jne
jbe
int3
push
cmp
push
addr16
jno
add
cmp
int
ljmp
out
sub
mov
lock
imul
les
mov
mov
xchg
in
insb
ret
dec
insl
test
mov
arpl
fcmovnu
add
xchg
xlat
popa
lods
mov
and
pop
sahf
xor
scas
adc
ss
or
lahf
jp
xor
dec
scas
push
sbb
repnz
movsl
fwait
cs
pop
adc
lret
stos
in
out
dec
push
fldcw
pop
adc
jmp
pop
mov
cmp
mov
adc
sahf
addr16
daa
cmp
fldcw
jmp
leave
pop
mov
or
rorb
jg
addr16
push
xor
or
dec
dec
dec
or
in
testl
lret
in
enter
testb
movsb
xchg
dec
incb
aam
lea
jp
mov
mov
loope
daa
shl
or
data16
mov
hlt
pop
dec
into
push
dec
cmpsb
pop
sbb
lods
rclb
stc
fmuls
xchg
shrb
jno
mov
xchg
adc
xchg
mov
movsl
std
mov
jno
mov
iret
lds
lods
xchg
repz
lods
dec
lret
sbb
push
and
add
jl
ret
pop
jmp
js
sbb
addr16
push
dec
cmp
cmp
dec
push
sahf
adc
jbe
mov
adc
sbb
push
push
jno
xor
inc
sub
sbb
xor
or
jae
add
pop
gs
daa
jge
imul
das
ss
sub
jae
fisttps
pop
mov
lahf
out
xor
clc
test
mov
xor
nop
mov
or
sarb
xchg
xchg
test
clc
mov
cli
add
and
inc
cld
dec
lock
sbb
inc
pop
bnd
ljmp
int3
icebp
and
pop
xchg
inc
iret
mov
out
fcmovu
add
imul
popa
out
push
jecxz
scas
cmp
jle
mov
in
jns
fsubl
shll
fbstp
cmp
push
jl
les
mov
pusha
movlps
aam
mov
jnp
les
sbb
inc
cmp
jne
in
and
inc
jmp
gs
pop
pusha
adc
mov
mov
push
jl
sbb
dec
ret
loop
aas
mov
ds
dec
sbb
sub
jnp
sbb
stos
orl
cmp
jb
jns
fnstcw
je
mov
imul
aam
xor
cmp
imul
into
call
jmp
pusha
dec
inc
inc
sub
loopne
dec
pop
incl
pop
gs
push
testb
jae
pop
enter
jg
mov
dec
xor
add
add
xor
mov
call
push
jne
gs
push
mov
mov
adc
adc
movl
daa
sti
scas
addr16
pop
daa
repnz
mov
cmp
inc
mov
add
mov
out
mov
imul
in
imul
dec
cs
sub
inc
push
jmp
jmp
mov
cmpsl
mov
pop
notb
cwtl
inc
out
in
push
aas
sbb
push
and
mov
sbb
push
xchg
inc
push
or
xchg
inc
mov
popf
pushl
sub
mov
and
ret
xchg
in
mov
push
mov
pusha
js
ljmp
push
scas
or
push
fsubr
stos
cld
stos
xchg
lahf
movsbl
jg
lcall
adc
movsb
std
and
lods
filds
cli
into
cltd
mov
xchg
adc
hlt
cmp
mov
mov
add
sbb
push
dec
jae
add
jl
loope
mov
enter
jne
xchg
inc
sahf
subb
adc
jmp
das
aad
cmp
test
xor
push
shlb
incl
and
mov
lods
frstor
aad
ret
add
js
cmp
mov
lahf
pop
repz
push
repz
push
jecxz
xor
jno
sub
je
xor
add
jmp
push
in
pushf
mov
or
repnz
and
sub
xchg
outsl
sub
lcall
dec
adc
jb
inc
inc
mov
lret
and
aad
pop
sahf
addr16
pop
lcall
mov
ljmp
sbb
rorl
out
cmp
test
push
sti
mov
sub
insb
dec
xchg
lods
xchg
push
outsb
hlt
push
inc
cmp
leave
sub
outsl
inc
add
mov
xchg
std
pop
xchg
idiv
mov
adc
push
xor
push
int
out
lods
adc
repz
sub
adc
dec
enter
push
sub
aad
sbb
push
jg
ja
pop
ljmp
push
scas
test
mov
es
cmpsb
mov
xor
cmp
xchg
sub
je
subb
addr16
je
jmp
mov
adc
repz
mov
mov
push
ss
or
pop
test
pop
xor
and
xor
ljmp
sub
int3
and
sub
into
sub
and
cli
cmpsl
mov
mov
pop
and
xchg
loope
mov
mov
dec
xchg
cmp
fistps
add
lret
outsb
movsl
fsubrl
insb
cwtl
xor
sub
movl
push
or
pop
mov
sbbl
icebp
jb
test
mov
test
cmc
sbb
fisttps
ds
lea
mov
mov
lds
cmp
aam
and
mov
inc
aam
imul
dec
mov
push
sbb
test
push
cmp
stc
dec
sarl
jmp
nop
mov
push
mov
cmp
aad
push
pop
xlat
es
cltd
pushf
inc
pop
movsl
sbb
adc
sub
inc
cmp
pop
dec
and
das
sub
mov
bound
mov
push
out
mov
jl
roll
cmp
push
scas
pushw
push
jmp
push
xlat
sub
out
and
jb
mov
dec
or
aam
std
movsb
jp
xchg
fldcw
mov
push
and
mov
adc
pop
jmp
lods
pop
scas
pop
ficomps
push
in
imul
fnstcw
call
push
ret
xor
ffreep
xchg
mov
stos
mov
cmpsb
je
shll
lods
ret
sarb
pop
dec
sub
dec
iret
jo
insb
jge
xor
sub
cmc
sub
add
dec
int
xchg
or
int
jecxz
push
frstor
xchg
popf
or
aaa
dec
inc
jne
aaa
cwtl
and
xor
mov
mov
outsb
repnz
scas
xor
adc
adc
mov
lds
clc
lods
or
in
mov
call
lahf
jnp
lahf
or
stc
fcoml
jb
out
push
add
in
faddp
push
jp
jne
pop
jno
dec
ljmp
fcmovbe
add
out
cmp
mov
aad
bound
push
out
inc
mov
loop
mov
and
push
mov
fadds
lock
mov
or
dec
mov
lret
pop
js
xor
shrl
and
mov
clc
jl
cmp
xchg
js
mov
ljmp
shr
push
and
mov
dec
je
sub
insb
push
fisubrl
cmpsl
sti
in
jmp
and
sub
cli
mov
push
adc
ret
lods
add
lahf
das
mov
mov
push
shr
mov
add
nop
dec
jmp
mov
inc
lret
inc
mov
popa
pop
push
or
pop
sbb
shll
lret
mov
mov
pop
int3
fs
dec
jecxz
fldenv
cli
cli
or
js
insl
scas
mov
mov
fsubl
mov
rcrl
cmp
std
jno
test
cmc
rorl
fnstenv
lret
xchg
inc
xor
xor
mov
jo
mov
lods
mov
cwtl
push
shll
and
push
cmpsl
xor
xlat
cld
fimull
mov
imul
mov
les
pop
fistl
daa
mov
xchg
pop
jle
hlt
add
dec
stos
loop
or
addb
stos
adc
inc
orb
iret
addr16
int3
mov
subl
add
cwtd
mov
out
test
and
adc
push
fcomps
inc
nop
fadds
lods
xchg
jmp
sub
xchg
push
stc
cmc
mov
jecxz
sarb
mov
lock
adc
mov
clc
mov
in
mov
fimuls
jl
mov
inc
mov
fcoms
pop
dec
add
push
bound
or
stos
inc
dec
call
ss
scas
loop
mov
pop
xor
add
push
push
mov
andb
outsb
sbb
push
lahf
sbb
cmp
enter
lret
addl
push
jge
shlb
test
add
dec
mov
push
sbb
adc
mov
mov
les
mov
sbb
cmp
inc
pop
lea
xchg
pop
mov
sub
out
push
mov
ror
fdiv
cld
dec
add
sub
or
jo
mov
jne
shlb
sbb
pop
enter
mov
or
in
push
xlat
insl
xchg
cmp
or
ds
fwait
xchg
mov
jmp
movb
hlt
mov
iret
cli
xchg
inc
fld
fs
xor
nop
pusha
dec
mov
cmp
fcmovnb
rcl
daa
xchg
sbb
mov
jnp
add
in
je
sbb
nop
into
imul
fcompl
dec
shlb
jnp
ds
add
jmp
pushf
xor
stc
cmp
inc
jo
insb
jp
out
scas
ficoms
pop
mov
outsl
push
movzbl
iret
icebp
cltd
push
ja
rdpmc
push
xor
cs
aas
add
das
pop
inc
iret
jge
fsts
xlat
mov
xlat
adc
jle
and
mov
sarb
rorb
ss
jae
fwait
sahf
fwait
push
fs
add
push
stos
scas
add
inc
mov
pop
push
jle
mov
repz
jne
adc
sarb
aam
pop
mov
dec
jo
xchg
leave
sub
and
call
jae
movsb
adc
jne
repz
js
test
mov
out
rcll
stc
cli
mov
pop
inc
add
xchg
push
enter
pop
enter
dec
and
push
adc
jg
cmp
xor
jge
aaa
fidivrs
mov
xor
dec
jg
rcl
movsl
pop
arpl
inc
xchg
negl
xor
lock
mov
shlb
ss
mov
mov
sub
test
shll
lret
push
sub
in
pop
adc
mov
popf
push
pop
adc
jbe
mov
push
xor
lcall
jmp
adc
pushf
add
mov
xchg
fs
ljmp
in
popf
adc
xor
int3
mov
inc
mov
pop
out
cmpsb
ret
cmpsb
rorb
ret
jb
loop
cmp
inc
xchg
test
pop
fisubrs
adc
icebp
cmp
push
and
jmp
cli
xlat
popa
in
sub
pop
cmp
daa
loop
jns
push
pop
lahf
mov
cli
and
mov
cmp
pop
mov
loop
xchg
mov
sarl
push
enter
jno
cmp
lods
xorb
pop
add
jle
scas
mov
into
sbb
mov
and
mov
lods
sahf
dec
movsl
push
fidivs
sarl
inc
jno
shlb
pop
repz
imul
pop
cwtl
ret
cmp
adc
scas
lock
mov
mov
cli
pop
std
cmp
lcall
dec
js
fs
dec
out
cld
enter
je
jnp
rcll
cmp
pusha
push
cmp
fs
jb
mov
add
cli
incl
xor
dec
bound
dec
enter
or
mov
shrb
jle
xlat
lods
push
mov
mov
jmp
sbb
inc
stc
dec
pop
out
xor
std
decb
push
push
cmp
or
push
or
cmp
inc
mov
aad
mov
cli
in
daa
in
xor
jo
dec
adc
adc
and
ss
lret
movsb
aaa
jns
add
push
adc
add
cmp
jo
mov
add
outsl
or
insl
insl
pusha
mov
ret
push
add
test
mov
sahf
lahf
into
add
fs
mov
popa
dec
cmpsl
fisubrs
dec
int3
and
jmp
mov
adc
or
clc
push
data16
inc
fstps
dec
outsb
out
push
jbe
icebp
jbe
mov
mov
orl
in
lcall
and
mov
push
lds
add
jns
add
mov
mov
bts
mov
push
dec
mov
enter
dec
stc
aas
fs
jmp
shlb
cmpsb
xchg
test
sub
les
mulb
xor
int
ss
xchg
aam
das
mov
sub
inc
add
and
hlt
out
jg
arpl
mov
mov
stos
pop
leave
and
repz
xchg
sub
nop
mov
insb
js
clc
test
xor
outsb
pop
or
pop
inc
lods
sub
bound
loop
xchg
test
cmp
pop
adc
mov
repz
bound
adc
fsubr
mov
xor
xor
ss
cmpsb
and
jecxz
pop
in
pop
cmc
neg
out
loope
mov
outsl
xchg
push
and
clc
out
adc
push
mov
pop
jne
mov
mov
jge
jo
mov
lea
push
mov
int3
mov
lock
ds
jmp
jmp
inc
fstpt
aaa
int3
out
mov
xor
ret
iret
dec
or
cmc
fdivrl
and
sub
adc
add
inc
roll
dec
push
nop
movsl
js
push
ret
fisubs
not
hlt
fwait
pop
dec
cmp
repnz
push
mov
in
fistps
int3
jmp
xlat
and
popf
push
push
outsb
ret
mov
or
jo
lock
pushf
xor
push
repz
clc
cmp
imul
xor
adcl
cmpsb
testl
popa
push
bound
cmpsb
pusha
xor
xchg
fcmovne
ret
xor
inc
pusha
inc
ficoml
dec
gs
add
loope
mov
insl
sub
fnclex
push
add
jmp
pop
cmp
aam
push
and
add
aas
xchg
mov
into
lds
aaa
push
inc
in
inc
or
idivl
mov
rep
nop
xor
stc
and
xchg
sub
push
xchg
std
xchg
add
pop
jle
lock
shll
add
and
cmp
mov
int
dec
bound
dec
int
mov
xor
xor
sbb
andl
inc
fldl
xchg
call
pop
mov
inc
testb
pop
or
test
dec
fistps
sub
add
imul
or
and
pop
mov
outsl
loope
xor
xchg
icebp
pusha
std
fists
mov
fistl
xchg
aaa
iret
js
inc
and
sub
push
mov
dec
pushf
dec
cmovb
cltd
sbb
sub
cmp
in
add
bound
xor
mov
mov
leave
cmpsb
adc
ss
fsubl
movsb
mov
mov
call
push
sahf
pop
loop
fnstsw
clc
pop
or
push
popa
test
icebp
in
sbb
jns
scas
cmp
xchg
ljmp
pop
mov
jecxz
mov
addb
repz
and
repnz
movsb
daa
cmp
insb
fs
dec
sbb
xchg
nop
arpl
ds
or
imul
jmp
lcall
inc
adc
shrl
fnstenv
fcmovu
out
sti
adc
add
out
inc
out
cmp
aad
xchg
je
fs
inc
js
sub
mov
sbb
int
adc
ror
pop
inc
rcr
divl
lahf
ljmp
mov
lods
and
xlat
cmp
jnp
adc
mov
stc
pop
ficomps
jmp
adc
mov
repnz
push
pop
jae
jp
pop
pop
lcall
inc
ficomps
jle
lcall
cmp
test
sub
inc
mov
pop
cs
icebp
iret
add
inc
sub
push
fdivrs
subl
inc
jp
push
and
cmp
mov
pop
push
test
sahf
loopne
mov
popf
aam
test
jmp
dec
in
in
dec
lcall
dec
inc
repnz
enter
je
es
inc
aaa
nop
popa
ljmp
mov
pusha
arpl
push
jns
sub
xor
cwtl
rorb
nop
out
call
loopne
out
leave
cmp
imul
jmp
je
in
or
gs
cmc
jno
ljmp
in
inc
adc
inc
pop
sub
and
mov
jae
popf
popa
sti
adc
in
xchg
push
dec
scas
adc
xorb
cmc
dec
push
cmp
cmp
inc
sbb
dec
test
sbb
dec
add
cld
lds
movsb
mov
and
sbb
je
mov
ljmp
sti
sub
or
mov
lahf
into
cmpsl
cltd
in
mov
cli
cmpsb
adc
sub
xchg
and
mov
ds
cltd
stos
jmp
jbe
or
lcall
rcrb
mov
negl
jmp
out
fucomp
enter
add
in
ficoms
adc
pushf
loop
sbbl
adcl
addr16
pop
inc
or
aad
mov
pop
mov
adc
andb
movl
dec
or
sbb
sbb
pop
loopne
and
repz
aam
xchg
stos
test
sub
das
sub
sbb
sub
xchg
or
pop
lahf
dec
rcll
pusha
mov
push
jnp
adc
lret
cmpb
rorl
jno
cli
cli
fisubrs
push
stos
mulb
sbbl
shll
es
adc
mov
scas
dec
stc
pop
shl
cmpsb
loop
mov
dec
je
movsb
mov
or
adc
idivb
sarb
jg
lret
out
jo
dec
mov
dec
jo
fwait
inc
fld
repz
in
push
repnz
jmp
cmp
divl
xor
push
push
mov
adc
mov
jg
inc
incb
push
jnp
xchg
dec
scas
test
xchg
aad
inc
mov
call
xchg
xor
cmp
std
push
jmp
pop
shl
pop
inc
nop
dec
movsl
cmp
xchg
popf
repz
sbb
repnz
jb
dec
ret
or
pop
cmp
outsl
call
out
sti
dec
xchg
lahf
mov
push
add
jmp
movsl
add
pop
add
add
lock
add
pop
out
arpl
xor
ja
jnp
mul
cmp
cmovs
leave
cmp
mov
mov
jb
lock
pop
cltd
in
mov
dec
push
sbb
call
mov
cmp
mov
fldl
dec
mov
lcall
sub
push
jmp
leave
ds
and
push
sarl
dec
sub
cmp
mov
push
mov
fidivrs
push
sbb
push
cltd
cmpsb
mov
push
pop
xchg
lret
jns
sbb
jnp
out
ds
imul
and
std
imul
and
push
add
adc
xor
cmp
jl
movsl
mov
adc
jb
add
cli
lcall
add
movsl
sbb
cmp
pop
cltd
xor
rcll
test
lcall
dec
les
setno
mov
shl
dec
mov
pop
mov
xchg
ret
mov
mov
push
add
or
stos
mov
lcall
rclb
push
pop
sub
jns
push
pop
cs
daa
jecxz
pop
repnz
add
sub
loop
or
mov
mov
jbe
int
cmp
pop
das
lea
cwtl
fs
and
repz
and
in
mov
rcrl
test
xchg
aaa
push
jmp
push
je
fdivrl
bound
popa
lods
cmp
jo
jle
lods
mov
mov
test
lods
cmc
popa
sbb
and
pop
std
inc
enter
lea
test
inc
jecxz
pop
jmp
ss
ret
or
xor
cmp
lods
jo
fmuls
scas
inc
cwtl
mov
dec
outsb
mov
dec
test
adc
dec
push
jno
xor
sbb
inc
sti
mov
xchg
test
cmp
cmp
and
pop
insb
mull
outsb
xor
adc
sbb
push
fdivrs
push
rorb
and
test
fwait
popa
dec
xlat
and
pop
cmp
dec
sbb
iret
sahf
jmp
adc
outsl
jle
rol
repz
xchg
inc
movsl
or
out
add
lret
jo
mov
mov
nop
loopne
shr
and
push
int
fiaddl
xchg
daa
cs
mov
dec
into
lcall
outsb
leave
repnz
mov
dec
clc
jmp
cmpsb
sbb
mov
outsl
jl
gs
test
or
scas
out
xchg
inc
mov
inc
xchg
mov
jmp
mov
mov
mov
popa
push
cmc
cmpsb
jecxz
pop
pusha
push
sbb
in
test
daa
rcrl
ljmp
xchg
and
and
jo
pop
mov
cwtl
sbb
pushf
popa
adc
jae
dec
insb
repnz
xchg
mov
or
inc
ror
xlat
sbb
mov
adc
repz
jbe
ret
test
adc
je
push
ret
imul
mov
push
jp
lahf
fisttpll
scas
cmpb
jbe
ret
movsl
inc
aad
mov
lret
test
popf
jp
daa
inc
adc
lret
daa
adc
adc
cmp
in
ret
sub
repnz
in
mov
inc
test
jmp
stos
jae
push
mov
adc
test
icebp
lea
jmp
cmpsb
xor
jbe
cmpsl
sub
mov
mov
adc
jb
jnp
xchg
aad
push
and
push
arpl
mov
mov
add
clc
aad
fadd
outsl
aaa
stos
push
je
sub
sarl
stos
data16
ror
pop
jno
sub
mov
mov
adc
aaa
or
insb
sub
aaa
pop
push
in
les
push
xor
mov
xor
rcrl
clc
xor
in
jns
and
rcll
jns
inc
xor
out
sar
sti
mov
pop
js
jecxz
aam
mov
mov
sub
loope
mov
inc
fsubrs
xor
xchg
test
jno
and
scas
xor
pop
sbb
out
fndisi(8087
stc
aad
xchg
js
cmp
insb
loopne
cmpsl
xor
subl
mov
inc
aam
cmp
mov
cmp
shll
fisubrl
push
xor
lahf
inc
mov
push
pop
dec
pop
pop
aas
mov
mov
out
mov
add
pop
sub
add
stos
mov
sub
scas
mov
or
pop
shrl
add
std
sub
fnsave
ljmp
clc
or
mov
mov
push
dec
inc
dec
mov
and
enter
jge
stc
jnp
mov
pushf
bound
push
out
dec
sbb
inc
mov
int
aam
sub
push
dec
and
fsts
cld
mov
add
incb
sbb
mov
and
loope
mov
rcrl
test
mov
mov
into
out
lods
add
mov
movsb
jbe
in
sahf
in
clc
fldenv
hlt
pop
and
daa
scas
leave
xchg
shlb
bound
pop
testl
fsubs
inc
jne
xor
fs
in
testb
out
test
pusha
lods
fnstcw
test
cmpsl
push
mov
cmp
out
push
mov
sbb
lret
stc
sub
mov
mov
xchg
xor
adc
outsb
sbb
out
sarl
adc
mov
push
jp
pop
dec
or
lcall
or
cs
add
iret
popf
dec
cmc
sbb
pusha
push
mov
sbb
push
push
mov
mov
int3
add
jo
sahf
xor
bound
adc
mov
lcall
add
data16
pop
fisubs
sbb
xlat
mov
mov
fwait
loope
inc
dec
cltd
testl
lea
arpl
aas
dec
pop
repnz
dec
ljmp
ss
jle
cli
mov
push
rcrb
pop
pop
xchg
pushl
into
dec
faddp
imul
vorpd
fnstsw
pushf
adc
call
cmp
adc
fnstcw
insb
xchg
rcll
arpl
cs
fnstsw
or
loop
cwtl
cmpsb
movsb
xchg
mov
shl
dec
aam
and
jne,pn
push
gs
push
mov
xchg
adc
mull
insb
in
fwait
or
jge
xlat
inc
pop
jne
fldenv
pop
movsl
push
in
bnd
xlat
iret
sbb
adc
pop
pop
cmpl
cmp
cld
mov
clc
cmc
cmp
jb
test
inc
or
test
imul
mov
scas
enter
lea
fsubrs
pop
mov
roll
inc
fisttps
fs
sub
sub
ret
lods
lcall
dec
and
int
lret
subb
pop
jns
jg
sub
or
pop
push
cmpsl
mov
out
add
out
mov
cli
pop
in
dec
test
lahf
cmp
or
aas
int
movsl
jge
jmp
mov
xchg
pop
push
and
mov
sahf
cs
mov
push
fsub
mov
jle
or
inc
inc
int3
int3
fwait
shll
inc
sahf
fildll
xchg
bnd
pop
mov
sbb
inc
push
arpl
ds
divl
dec
scas
leave
pushf
aaa
movsb
add
pop
sbb
sub
push
sbb
hlt
sbb
mov
and
es
or
or
dec
add
in
in
popf
rclb
pop
cmpsl
mov
int3
xchg
push
mov
in
push
jl
mov
jne,pt
test
or
inc
xor
cwtl
dec
jnp
leave
call
es
mov
push
das
xor
nop
popf
pop
loope
push
rolb
sbb
test
mov
xchg
jbe
in
lahf
inc
sub
fldl
ja
jmp
jmp
in
in
xchg
push
cmp
leave
mov
jmp
inc
inc
xchg
popa
cmpsl
mov
orl
cmpb
jmp
ss
bound
call
mov
cltd
or
sub
data16
mov
ss
lds
jno
pop
popa
push
dec
clts
outsl
jno
addr16
dec
sub
lret
mov
xchg
push
dec
mov
mov
and
fcmovb
mov
bound
fcoml
ds
pop
nop
data16
mov
pop
in
add
div
or
cmp
testb
std
cmc
movsb
jmp
leave
ja
or
and
loopne,pt
les
pop
dec
mov
daa
cli
cmp
fbstp
popa
and
cwtl
lods
mov
push
aaa
movsb
push
lock
sub
fwait
int3
test
dec
pusha
sub
cmp
in
cmp
cwtl
xchg
jne
inc
push
sahf
jp
test
sub
leave
int3
bound
std
add
pop
sbb
scas
sarb
neg
inc
add
aam
in
daa
xor
jge
add
mov
mov
mov
push
imul
or
inc
ret
and
pop
addr16
or
or
enter
outsl
fimuls
jns,pn
dec
jmp
xor
jecxz
pop
adc
pushf
movsb
js
or
arpl
movsl
cmpsb
jl
inc
fnstsw
and
dec
dec
sbb
sub
repnz
cmp
pop
jne
cmp
xchg
mov
and
test
dec
mov
movsb
pusha
leave
lret
or
lret
movsb
sbb
or
sub
imul
in
jae
movsb
adc
xchg
movsl
push
lret
xor
inc
jno
jne
lock
push
push
stos
test
nop
push
lahf
icebp
jle
adc
mov
int
mov
rol
adc
je
in
cld
je
cmp
loop
int
inc
sahf
xlat
sub
sub
push
jns
test
mov
or
cltd
out
lods
push
push
jge
jecxz
lock
mov
mov
push
or
daa
loop
cltd
sub
push
push
rcll
adc
add
push
dec
dec
mov
js
jbe
mov
lahf
es
push
adcb
adc
or
inc
mov
insb
js
mov
sbb
xlat
dec
cs
enter
add
add
or
pop
aam
ja
dec
add
insb
enter
xchg
xchg
xor
pop
mov
out
icebp
sub
rclb
and
movsb
aad
inc
mov
leave
sub
and
lock
cmc
inc
xchg
pushf
je
add
inc
cld
loope
and
inc
xor
adc
jns
push
and
jae
and
pop
cmc
in
jae
ja
mov
jae
jg
fnstenv
and
cld
pop
fnsave
int3
pop
mov
repnz
adc
dec
xchg
jae
mov
mul
dec
mov
addr16
in
sahf
test
sbb
sbb
fdivr
decb
push
push
scas
xlat
jle
dec
pushl
adc
popf
ret
xchg
call
movsl
or
imul
aaa
lret
movsl
aaa
sub
adc
bound
mov
jns
mov
cmp
dec
xchg
xchg
jae
test
xor
addr16
out
cmpl
or
fisubl
xor
jo
jb
fadds
push
or
sbb
je
jae
inc
dec
adc
scas
and
movl
popa
popa
sub
mov
mov
int3
aam
rcrl
fisttpll
push
xchg
test
jno
jo
lea
aaa
dec
cwtl
xor
enter
dec
push
rcll
xor
out
mov
sub
xor
in
and
and
mov
icebp
dec
outsb
mov
jecxz
ror
test
nop
int
jb
push
enter
mov
es
call
fs
cmc
out
inc
pusha
cmp
inc
lods
xor
in
aas
ljmp
cli
out
xchg
pop
in
cmp
push
mov
push
inc
dec
xor
and
mov
push
and
lods
outsl
xchg
inc
adc
mov
xor
mov
jae
add
pop
rclb
jns
push
mov
pop
mov
repnz
inc
push
rorl
push
inc
adc
sti
dec
outsb
subl
inc
test
xchg
ret
jno
rcl
mov
pop
inc
adc
mov
push
dec
jmp
pop
and
jne
push
and
addl
push
or
testb
in
rorb
xlat
lret
sub
xor
push
lods
or
add
fnsave
pop
jns
jbe
jle
faddp
mov
ja
jb
inc
pop
mov
mov
push
in
std
pushf
dec
pushf
ret
mov
jne
jns
xchg
es
cmp
inc
adc
cltd
jp
cli
xlat
mov
sub
and
pushf
jge
dec
mov
or
cmp
sub
addl
mov
cmc
mov
xor
cmpsl
cmpsb
cld
lret
jmp
les
jns
ret
daa
aam
scas
push
sub
cmp
add
lcall
or
imul
sti
mov
dec
or
push
loope
adc
pop
add
nop
inc
out
notb
shll
xchg
dec
inc
je
adc
loopne
jo
mov
int3
inc
loope
push
xchg
cmp
ss
mov
out
cmp
fists
adcl
mov
fstpl
lds
cmp
xor
cli
inc
jbe
scas
hlt
or
mov
int
dec
mov
sbb
add
in
jmp
dec
hlt
outsb
mov
stc
mov
jle
inc
xchg
adc
nop
cld
mov
in
dec
popf
and
add
cmp
int
cmpsb
mov
loopne
push
sub
loop
mov
jne
xchg
push
les
into
scas
mov
imul
pop
xchg
push
inc
ljmp
ret
aaa
ljmp
cmp
imull
mov
jae
dec
dec
jbe
pusha
pop
mov
xchg
push
dec
and
fistps
subb
out
pushf
ljmp
sbb
repz
pop
adc
jge
movsl
lea
orb
push
push
cmp
bound
scas
push
adc
sbb
mov
mov
mov
idiv
int
fisubs
xor
add
mov
jl
cmp
push
adc
movsb
mov
jg
inc
movl
dec
or
bound
adc
sub
sub
sub
jp
jmp
jg
mov
mov
cmp
mov
shll
aad
test
jp
loopne
jge
aaa
repz
lods
cld
mov
mov
mov
cmp
sbb
cmp
push
fiaddl
mov
add
inc
add
outsb
scas
rcrl
loop
adc
push
popa
test
insb
cmp
mov
push
add
ret
mov
std
inc
dec
cli
cmp
xchg
adc
mov
std
ljmp
dec
popf
insb
mov
mov
ficoml
mov
aas
enter
stos
roll
and
aam
jmp
push
sbb
lret
xor
icebp
ljmp
cmpsb
xor
mov
out
pusha
xor
insl
cmpsb
int
jle
cmp
test
xor
shl
shlb
cli
in
imul
je
dec
nop
adc
pushf
mov
scas
mov
push
push
sub
adc
inc
std
dec
mov
scas
mov
iret
mov
push
pop
gs
cmp
push
bound
sbb
mov
rcr
xchg
dec
call
mov
cltd
call
or
jae
jo
push
mov
xchg
call
xchg
push
aad
data16
dec
pop
pusha
outsb
inc
xor
adc
lret
sbb
in
dec
lock
mov
inc
imul
shr
mov
ljmp
cwtl
push
fidivl
in
dec
popf
or
bound
rolb
xor
mov
jl
xchg
cmpb
lcall
pop
xor
shlb
sub
enter
fcmove
icebp
push
cwtl
and
pop
movsb
out
inc
adc
aas
lds
push
add
clc
mov
jmp
orb
sub
mov
cmp
pop
jne
mov
jnp
cmp
xor
pushf
and
push
inc
pop
add
add
lods
or
iret
and
jl
int
pop
add
add
or
pop
push
insb
movsb
fadds
fisttps
lods
dec
mov
outsl
mov
jle
ret
mov
jno
xor
inc
sub
pop
enter
xor
bound
sbb
test
es
ret
iret
cld
pop
loope
fsubl
cmp
mov
push
xchg
mov
cmp
xchg
scas
pop
sbb
ss
nop
cmp
add
xchg
mov
or
mov
std
ss
into
test
aas
std
mov
sbb
dec
in
cmp
nop
imul
mov
das
faddp
jl
and
mov
daa
popf
inc
roll
xchg
leave
mov
rol
insl
jp
fdivp
jbe
add
and
xchg
xor
add
inc
mov
aad
push
stc
or
mov
jo
pop
dec
aaa
sarl
cmp
or
or
pop
xorl
xchg
lds
ds
enter
cwtl
dec
insb
ja
cli
lahf
aas
repz
pop
pop
aas
mov
repz
sub
xchg
push
test
jle
dec
call
sbb
adc
stos
adc
repz
dec
sbb
mov
jle
popa
push
mov
inc
jbe
clc
mov
dec
cli
xchg
lahf
aad
repz
cmpsl
jg
sub
xchg
mov
pusha
add
fisubrs
sub
xor
les
std
mov
in
mov
lea
push
and
pop
pop
sbb
sub
lock
jecxz
inc
shlb
xchg
outsl
lcall
xchg
xchg
sub
pop
icebp
mov
int3
repnz
flds
imul
test
mov
xlat
adc
icebp
pop
push
stos
es
sbb
shrb
lds
mov
fildl
mov
repnz
test
jge
xor
cltd
and
sub
mov
sub
jne
pop
mov
js
pop
sub
lahf
mov
dec
sub
dec
adc
add
aam
out
jnp
add
daa
scas
jne
and
in
add
pop
lret
jb
fbstp
mov
cltd
cmp
rep
push
loop
xor
cli
cmp
cmpsb
aas
inc
sbb
lea
ss
or
fldt
add
repnz
repnz
adc
inc
lcall
movsb
leave
pop
insb
arpl
test
mov
arpl
pop
dec
imul
sbb
push
pushf
add
inc
mov
pop
insb
mov
adc
sbb
shrb
xchg
mov
in
shlb
movsl
sbb
mov
cwtl
sahf
stc
popa
or
out
adc
aad
leave
xor
adc
sbb
sbb
pop
arpl
je
xchg
orl
sti
sub
aaa
lahf
sbb
fistps
stc
mov
mov
cs
insl
mov
or
cmp
inc
adc
pop
push
ja
cmp
decb
and
rcrl
mov
dec
notl
loope
out
sahf
je
pop
mov
rol
loope
js
push
jnp
and
cmp
adc
xor
jae
xor
jne
xchg
add
fidivl
lods
jne
repnz
addr16
cltd
xlat
push
mov
mov
stc
sahf
stos
jns
rcrl
mov
rcrl
sbb
push
sbb
arpl
aam
daa
sti
enter
hlt
popa
icebp
cmp
push
mul
in
hlt
lret
popa
mov
dec
lea
mov
cmp
push
xorl
outsl
in
add
or
inc
testb
aam
mov
jmp
xor
push
imul
jle
addl
pushf
sbb
xlat
stos
mov
notb
xchg
scas
add
or
mov
call
inc
arpl
jbe
inc
dec
or
and
push
lods
adc
jb
xchg
cmp
add
jno
and
mov
das
clc
cmpsl
movsl
or
bound
xchg
cmp
mov
add
es
sub
pop
mov
mov
pop
inc
sarb
push
xor
jbe
or
or
dec
leave
jle
push
mov
or
mov
mov
cmp
pop
lds
mov
pop
mov
clc
sbb
or
pop
push
rclb
xchg
das
adc
ret
sbb
orl
pushl
mov
popa
bound
inc
jmp
ja
jl
enter
jg
mov
icebp
add
nop
data16
mov
cltd
outsl
lahf
sub
pusha
roll
and
daa
or
sub
or
or
imul
std
bound
jo
in
inc
cmp
inc
adc
aas
insb
push
scas
loope
sbb
aas
fstpt
sbb
dec
xchg
dec
jle
into
mov
jo
lods
loopne
sbb
sbb
ret
arpl
xchg
dec
mov
pusha
mov
mov
cmp
ficoms
inc
push
mov
das
std
ja
jle
dec
jecxz
cmp
scas
or
xchg
fisttpll
lcall
mov
lret
cmpsb
mov
bound
out
inc
mov
jg
icebp
inc
sub
cwtl
gs
lret
push
les
cmpsb
jno
fwait
mov
jmp
sbbb
sbb
lods
loope
xlat
scas
shll
repz
sbb
cmp
and
pop
mov
sbb
cwtl
dec
lds
ret
add
ret
and
jbe
inc
jge
dec
aad
out
mov
mov
out
jae
mov
push
sahf
addl
popa
rcl
lahf
icebp
adc
mov
xchg
sbbb
rorb
cld
enter
and
cmpsb
push
lods
inc
fidivl
jle
mov
mov
jns
lret
imull
stos
out
stos
push
loop
jb
or
inc
mov
add
stc
adc
iret
dec
mov
sbb
jg
clc
cli
or
icebp
push
mov
je
cmc
jae
cmc
jmp
lods
mov
push
scas
fsubrl
push
clc
push
aad
aas
ret
aad
push
mov
add
pop
lds
mov
or
push
repz
je
dec
xchg
mov
in
test
or
int
dec
ret
dec
cmc
pop
lock
cmp
lret
lds
insl
and
in
sbb
push
sbbb
and
insl
or
scas
scas
outsb
push
adc
jbe
dec
testb
adc
pop
cmp
lcall
out
pop
fwait
push
inc
cmp
jge
pop
jp
gs
cmp
inc
ret
inc
out
lahf
call
roll
leave
adc
fstp
xlat
test
imul
adc
fmull
or
adc
lea
insb
hlt
cmp
cmp
dec
adc
sti
push
shlb
lahf
lret
jl
leave
push
in
jbe
cmp
popf
popf
jb
xchg
imul
xor
cmp
jne
loope
inc
subb
pushf
xor
hlt
xchg
js
mov
xor
insl
ret
cmp
xchg
sti
mov
cld
or
sbb
sbb
mov
xchg
rdtsc
cmp
adc
mov
outsl
and
gs
cmp
xchg
or
pushf
mov
mov
pushf
adc
insl
ds
inc
lret
hlt
punpcklbw
xchg
repnz
test
or
leave
out
cmpsl
mov
arpl
cmp
inc
aas
cld
xor
jmp
hlt
push
xchg
out
add
xor
loopne
aam
sbb
sti
ljmp
daa
pusha
and
jb
inc
lods
int3
scas
dec
sbb
stc
sbb
icebp
mov
and
movsb
sbb
or
mov
push
mov
sub
movsb
fstpt
pop
and
gs
or
lea
fnstenv
fildll
scas
inc
pop
xor
jno
dec
ret
lock
movsl
addl
and
cltd
cmc
arpl
lahf
jle
push
in
cmp
out
xchg
inc
xorl
dec
adc
movsb
test
push
filds
mov
sarb
ret
pop
or
cltd
popf
jne
push
inc
jle
sub
pop
adc
mov
dec
sub
fisttpl
test
push
pushf
dec
sub
lods
xor
mov
xchg
cmc
sub
aam
mov
test
inc
stos
dec
cmp
fldt
imul
mov
pop
lret
jns
xchg
dec
ret
mov
dec
mov
fadd
stos
and
add
aaa
add
outsb
fisttpl
or
jmp
dec
addl
addb
imul
sbb
and
and
dec
iret
test
sarb
adc
adc
dec
sub
jl
jne
jle
clc
mov
sbb
mov
cmp
cmpsb
decl
mov
repnz
pop
movsb
add
jp
add
cld
jae
or
fldl
lods
lret
rolb
lods
ret
inc
pop
pop
mov
push
inc
xchg
cmp
les
in
popf
mov
mov
into
shlb
aaa
cltd
mov
sbb
push
rclb
outsb
push
pop
pop
push
cltd
movsl
add
jo
movsl
pop
call
xchg
dec
je
lahf
jg
mov
add
xchg
push
icebp
inc
fwait
insb
jg
sub
jno
addr16
jb
iret
push
xor
cmp
int
and
lock
mov
xchg
clc
or
push
jmp
cwtl
xor
dec
jbe
ds
mov
jae
inc
rol
cmp
dec
add
inc
sbb
jo
out
mov
int
out
adc
cmpsb
xor
xchg
ss
jne
and
mov
fistps
aaa
subb
out
daa
test
and
jg
cmp
roll
and
mov
fldl
xchg
sbb
popa
cltd
or
mov
sub
cmpsl
lock
stc
andb
dec
call
pop
mov
movsb
xchg
lds
pop
cmp
push
lods
dec
sarl
push
ret
lods
ljmp
es
mov
iret
dec
xor
ljmp
pop
hlt
clc
clc
mov
push
cld
ljmp
sahf
aaa
inc
test
adc
and
out
andl
inc
sub
sarl
pop
push
stos
jge
decb
or
xor
sub
ficoml
cltd
lret
push
icebp
mov
jnp
adc
sub
xor
out
jg
xchg
dec
stos
testl
xor
std
xchg
lcall
xchg
sbb
mov
lret
pop
adcl
xlat
pop
ds
and
jnp,pt
mov
lds
shrb
lea
add
mov
outsl
mov
cmp
sti
insl
aas
push
daa
ds
add
repnz
add
adcl
inc
adcl
mov
jns
test
test
and
sbb
stos
sahf
sub
ss
imul
mov
in
or
jnp
pop
out
decl
in
arpl
pop
sub
and
push
je
test
xor
push
jle
xchg
imulb
cmpsb
roll
mov
loopne
out
sbb
fs
aad
sbb
rclb
pop
pop
pop
xchg
call
inc
inc
and
mov
daa
xchg
sahf
xor
pop
jl
clc
cmp
sub
or
pop
mov
popf
scas
jo
inc
sbb
mov
scas
shll
bound
and
dec
mov
cmp
adc
push
mov
or
dec
mov
xchg
movsl
mov
inc
inc
jl
or
mov
push
pop
outsl
adc
les
sbb
mov
or
cmp
and
sub
push
pop
lcall
adc
xor
adc
push
out
push
jns
mov
mov
xor
xor
fidivrs
es
add
gs
push
in
dec
xor
mov
mov
push
cmpsb
push
les
enter
rorb
sbb
out
pusha
fs
push
pop
fs
loopne
insl
iret
mov
sub
cmp
adc
icebp
mov
and
adc
jp
test
xchg
div
inc
call
ret
jnp
fdivrs
mov
jle
aaa
aas
outsb
mov
lds
icebp
add
add
mov
mov
loop
or
sar
cli
mov
inc
lcall
test
fimull
out
adc
push
xorb
mov
arpl
push
jg,pt
in
nop
push
in
mov
mov
dec
ret
mov
rolb
dec
push
mov
mov
lret
dec
pusha
xchg
cmc
fnstcw
inc
out
pop
sub
icebp
jmp
fwait
into
ljmp
pop
jg
and
sub
jle
aas
sub
jecxz
jmp
es
pushf
and
pop
cs
xchg
push
fwait
sub
dec
mov
cli
mov
stos
ret
popf
aaa
dec
add
iret
jo
mov
mov
test
xlat
mov
inc
push
push
sub
and
sub
fucomip
xor
cmpsb
mov
out
xchg
mov
imul
mov
jnp
push
movsl
cmc
inc
push
xchg
iret
or
pop
fiadds
and
ljmp
dec
imul
jp
les
out
adc
xchg
mov
movb
shlb
test
fmull
clc
jo
jbe
jo
movsb
pushf
rcr
rorb
jg
ss
flds
out
add
rolb
sub
lcall
push
roll
mov
dec
outsb
mov
ret
push
push
push
andb
sar
and
adc
or
push
loopne
mov
in
adc
jle
fistl
ljmp
mov
mov
lcall
test
mov
sarb
sbb
repnz
stc
test
lock
mov
sub
adc
and
mov
push
stos
xchg
test
mov
cmc
das
sbb
cmp
sub
nop
dec
mov
mov
push
push
or
out
pushf
push
insb
xchg
in
loopne
lret
in
add
arpl
inc
adc
pop
jecxz
outsl
insl
cmp
add
dec
rcll
mov
pop
cmp
movsl
sbb
pop
imul
mov
movsb
xor
xor
mov
outsl
out
inc
pop
lds
outsb
sbb
sub
shr
lahf
jae
fmuls
push
repnz
repnz
mov
cmp
out
mov
adc
cmp
fnstenv
mov
adc
or
dec
jl
dec
pop
dec
inc
xchg
or
cmpsb
add
fcmove
add
aam
mov
jnp
mov
sbb
in
xor
and
cmp
add
adc
dec
jbe
inc
les
adc
ja
jge
popf
popf
jno
xor
and
cmp
lds
fnstcw
gs
mov
into
popa
pop
div
pop
ja
xchg
repnz
inc
jg
inc
xor
je
stos
cmpsl
sub
insl
dec
or
and
fimull
and
inc
jp
push
lds
out
es
cwtl
mov
in
adc
in
add
leave
mov
and
jl
push
movsl
adc
neg
into
fsubs
adc
ss
sbb
mov
fcoml
sahf
mul
fmul
add
das
mov
add
mov
xorl
jecxz
or
fstpt
mov
xchg
inc
jnp
aas
aad
sahf
inc
xchg
arpl
dec
insl
jge
mov
mov
mov
mov
fsts
cmpsl
aas
int
push
imul
add
xchg
sbb
ss
rcrl
xchg
scas
int3
pop
dec
fstps
fscale
std
pop
leave
xor
add
xor
cmc
faddl
fnclex
std
sbb
sbb
ret
xchg
cltd
sti
or
or
fdivrl
jb
mov
movsl
inc
inc
scas
xor
push
jl
push
mov
mov
jp
fyl2xp1
ds
push
mov
test
pop
jmp
jo
idivb
pushf
roll
loopne
or
cmpsl
in
dec
push
daa
mov
push
les
ficoms
jge
sbb
aas
test
mull
push
and
jp
push
mov
push
fidivrl
loopne
data16
inc
mov
ljmp
rcl
subl
iret
addb
sub
stos
aad
adc
mov
inc
jno
or
pop
dec
fwait
xchg
popa
movsb
xchg
lods
hlt
mov
dec
das
jns
or
dec
mov
and
filds
sbb
sub
les
or
mov
enter
stos
xchg
pusha
kmovw
stc
shlb
xor
sub
jle
jmp
xorb
movsl
or
xchg
das
xor
call
xor
dec
mov
pusha
sbb
xor
hlt
nop
loope
loope
pop
out
sti
jbe
push
jmp
adc
repz
ljmp
adc
shrb
mov
and
xchg
inc
scas
hlt
mov
in
fldenv
in
inc
insl
mov
jo
or
mov
dec
lahf
fmull
sbb
ljmp
pop
pop
xor
lods
fcmovnb
lahf
adc
cmp
repnz
loope
fsubl
movsl
xor
mov
mov
sbb
dec
sahf
push
mov
mov
lods
movups
mov
xor
or
push
mov
stos
lret
jo
mov
add
jmp
rcrl
dec
jnp
in
mov
pushf
arpl
xchg
in
xor
push
bound
sbb
adcl
popa
pusha
sbb
and
nop
and
subb
xchg
enter
into
cli
out
cmp
loop
ret
or
mov
data16
ret
fnsave
mov
out
in
xchg
xlat
mov
mov
sub
and
pop
es
xor
push
xlat
fldenv
cmp
rorl
or
lret
inc
jae
aad
cmp
jmp
mov
dec
xor
dec
xchg
fcoml
jl
jmp
mov
inc
add
ljmp
inc
and
pusha
xor
loopne
push
or
js
cmp
and
mov
inc
xchg
pop
jge
jae
mov
dec
in
dec
dec
mov
cltd
push
pop
mov
mov
cmp
xor
movb
dec
scas
dec
sub
bound
leave
inc
xor
popf
add
cmpl
cld
inc
in
mov
out
imul
insl
jl
pushf
xor
loop
mov
mov
or
loopne
adc
inc
or
pop
mov
cmpsb
pusha
jne
repz
mov
ja
mov
out
aam
mov
cmp
cmp
mov
jge
or
xchg
jbe
lahf
push
sar
pop
cmp
pop
mov
stos
sbbl
push
jmp
pushf
ss
jo
and
mov
rcrl
loope
xor
pop
jmp
das
mov
push
and
xchg
and
mov
xor
inc
push
pop
pop
pop
mov
jecxz
push
pop
and
cmc
shr
aaa
shll
mov
addb
inc
jb
push
icebp
cs
mov
xor
sub
mov
test
das
or
ja
dec
cli
push
lret
insl
mov
sahf
and
in
leave
push
jecxz
xchg
xorl
mov
fnstcw
aas
fwait
jmp
scas
rclb
out
enter
push
jo
inc
inc
int
repz
xchg
ret
lods
pop
pop
fldenv
inc
or
jmp
outsl
sti
push
leave
ljmp
dec
push
cmp
bound
pop
cmp
push
call
sub
lret
sar
cmp
jmp
dec
data16
push
clc
xchg
add
loope
pusha
push
inc
data16
sbb
insl
push
addl
mov
scas
loop
mov
jno
xchg
add
rclb
sub
aam
or
rorl
inc
dec
mov
inc
outsb
jno
sub
aaa
sub
or
push
flds
ret
xchg
neg
aad
sub
lret
iret
mov
aad
add
pop
jmp
lret
sbb
cmpb
in
aas
rcll
insw
push
pop
cli
push
mov
pop
aad
push
stc
mov
rclb
xor
movsl
add
push
push
pop
shr
pop
sbb
arpl
pop
jp
push
jge
push
sahf
mov
xlat
adc
shl
or
and
and
dec
shl
in
loop
data16
cmp
inc
cld
and
inc
fs
add
movsb
cmp
into
lahf
lahf
mov
sbb
and
mov
scas
sbb
xor
xor
imul
xchg
setp
enter
adc
out
adc
pop
dec
cmc
inc
or
pop
fisubl
jg
gs
xor
mov
movsb
cld
add
lret
cltd
mov
pop
hlt
cld
mov
jne
xor
aaa
pusha
xor
leave
lret
adc
jne
test
mov
push
aaa
aas
aam
jp
int3
xor
loope
xor
and
je
xor
mov
sub
inc
xchg
dec
and
pop
pop
or
cmpsb
xchg
sbb
push
push
mov
dec
nop
gs
xor
scas
icebp
jle
inc
mov
imull
nop
adc
mov
pop
push
out
cld
and
sub
xlat
mov
pop
inc
push
pushf
icebp
imulb
popa
pushl
out
and
icebp
nop
or
rdmsr
sub
dec
pop
dec
mov
xchg
cld
jl
xor
fwait
sbb
lds
mov
gs
inc
jmp
fildll
mov
sbb
push
push
imul
or
xor
xchg
mov
or
ja
push
orb
shll
push
sub
stos
xchg
pop
add
int
adc
cmp
add
xchg
stc
cli
mov
and
push
mov
lods
loopne
inc
adc
aaa
mov
mov
inc
xchg
pop
sbb
jmp
loopne,pn
fdivrs
adc
mov
sbb
xor
je
adc
sub
mov
jne
loope
sub
push
arpl
mov
clc
nop
ss
jmp
dec
data16
ds
lods
dec
xchg
jg
cmp
or
adc
sbb
xchg
movsb
mov
add
mov
sbb
sub
dec
mov
out
dec
mov
mov
sub
loopne
push
push
cli
sub
push
scas
pop
std
icebp
xchg
mov
sub
push
xlat
push
aad
dec
push
je
movsl
ret
cmp
or
inc
push
mov
sub
adc
data16
fucomp
test
pop
mov
adc
test
sbb
daa
jle
mov
testb
xchg
fisttpll
xor
aaa
lahf
ss
out
insb
in
jl
les
pop
fiadds
sti
or
jp
lds
call
cs
dec
mov
arpl
cs
aaa
add
xor
jle
jno
sbb
je
mov
rcr
in
cwtl
test
xor
lock
lahf
xor
xor
pop
mov
cld
jns
outsb
inc
into
fldcw
jge
sbb
push
cs
stos
cmpsl
sbb
sbb
fsub
jns,pt
xchg
icebp
inc
jo
sub
loop
das
push
cmp
fwait
adc
sbb
into
ret
and
fcomp
fnstenv
push
int3
inc
out
mov
and
mov
lods
inc
daa
sbb
ret
repz
inc
adc
ret
sar
movsb
sbb
test
ret
aam
pop
je
jle
cmp
push
and
cli
and
pusha
xchg
mov
or
lods
leave
into
mov
data16
mov
movsb
test
push
lcall
jbe
cmpl
shll
lahf
popa
cmpl
jb
shll
jg
xchg
imul
insb
lock
pop
cltd
outsb
imul
inc
jae
adc
lret
sub
dec
or
popa
movsb
xor
and
jo
sbb
pop
lret
push
imul
out
push
xor
push
mov
and
mov
iret
pop
or
dec
and
push
sub
pop
xchg
and
outsb
leave
repz
mov
mov
call
xchg
or
sbb
jb
push
push
jp
inc
lods
dec
ss
mul
notl
imul
loop
popa
dec
jge
sub
pop
leave
mov
rcll
sub
popf
out
xchg
icebp
fidivl
mov
ret
cmp
das
fcoml
aas
das
pop
push
fnstcw
or
dec
dec
imul
jns
pop
mov
rcl
repz
cmc
test
imul
mov
inc
out
lods
mov
cmp
sub
mov
cmp
scas
fcoml
mov
inc
pop
xchg
dec
ds
in
or
ss
sub
xor
out
rolb
add
call
jne
gs
lret
sbb
std
outsb
cmc
lods
push
movsb
gs
divb
jb
out
es
fs
or
mov
cmc
adc
loope
sar
inc
scas
jb
sti
cmp
and
adc
pop
addr16
adc
fstl
inc
mov
jmp
aas
sbb
mov
inc
movsb
jnp
adc
shl
leave
cmpsb
mov
popf
subb
push
aam
adc
es
mov
aas
icebp
push
inc
mov
sti
scas
mov
push
pushf
add
cmp
loopne
sbb
sbb
es
add
and
out
popa
push
jo
and
out
outsl
imul
insb
mov
dec
sub
mov
push
aaa
pop
pop
stos
mov
push
jge
cmpsl
jnp
cwtl
or
adcb
sbb
gs
or
je
out
xor
push
or
imul
ret
and
fdivs
add
xchg
lea
xchg
inc
inc
lret
sbb
and
in
int
xor
and
mov
in
fistpll
rcl
jne
jno
and
pushl
divl
adc
shlb
fwait
inc
sub
mov
mov
mov
mov
lds
add
daa
sub
xchg
or
movsl
loope
fists
lret
mov
imul
pop
sub
std
sbb
mov
xorb
jo
or
jbe
in
out
inc
bound
or
stc
xlat
je
sbb
jb
in
push
imull
jl
jle
fwait
add
loop
das
xchg
sub
cmp
repz
jno
sub
sub
lahf
pop
fcompl
mov
xchg
test
out
aaa
dec
add
pushf
sbbb
adcl
es
mov
jns
pop
lods
stos
rol
xchg
inc
scas
xchg
jp
xchg
add
stc
mov
fcoml
push
mov
out
outsl
es
aam
leave
fmul
mov
mov
sub
mov
sti
push
mov
repnz
sub
aad
pop
sbb
xchg
mov
sub
sub
mov
js
adc
in
call
je
addb
outsb
dec
jle
ja
adc
out
imul
mov
mov
ds
incl
imul
iret
xchg
lods
sahf
mov
loopne
cltd
sbb
jne
mov
pop
stc
aam
xchg
fisttps
cltd
inc
dec
or
cmp
idivb
mov
ret
mov
jp
jmp
xlat
pop
pop
xchg
adc
daa
inc
in
aas
adc
xchg
es
xlat
imull
dec
or
cwtl
xor
lock
js
sbb
jne
out
shll
popa
dec
notl
xlat
adc
repz
xchg
out
pop
aas
adc
push
sbb
scas
dec
iret
cwtl
adc
rcr
nop
test
xchg
jns
test
in
fstl
pop
add
popf
pushf
sub
sub
and
test
push
rdmsr
mov
jb
fsubl
sub
add
insb
outsl
test
mov
out
pop
mov
jecxz
std
xchg
in
push
push
leave
xor
scas
jne
ret
out
xchg
sub
ja
sbb
jb
jp
daa
sub
cmp
lea
jg
mov
push
addr16
jo
rcll
add
sbb
scas
push
mov
and
mov
fnstcw
mov
cmp
stc
or
cld
cmp
mov
pop
mov
loopne
xchg
mov
inc
stos
scas
pop
je
jb
push
or
mov
push
and
jbe
inc
test
sub
movsl
call
aad
pop
sub
mov
icebp
data16
jp
nop
arpl
xlat
xchg
sub
cmp
scas
leave
hlt
mov
enter
dec
adc
mov
mov
push
sbb
gs
cmp
mov
mov
mov
loopne
push
inc
ffreep
xor
lea
and
xchg
dec
rol
and
xor
insl
xlat
in
pop
imul
jns
push
and
mov
push
popa
dec
or
loop
jne
loop
push
push
inc
icebp
sub
xor
and
int
mov
fistpl
and
enter
mov
stos
mov
sbb
out
jmp
icebp
clc
and
ret
dec
test
ja
mov
call
in
and
jo
add
rcr
outsl
push
popa
push
pop
sbb
cmp
xchg
nop
mov
and
xchg
ja
xor
cmpsb
stos
cmc
scas
nop
push
cwtl
xchg
xor
mulps
mov
push
aas
mov
push
push
xor
iret
mov
int
or
das
jno
mov
clc
sub
clc
repnz
in
mov
es
sahf
pop
test
push
xchg
jg
mov
addr16
lock
sarl
lods
movsb
lock
loopne
and
imul
cmc
and
and
mov
push
fmul
mov
arpl
jle
or
and
jns
pusha
out
cmp
mov
xchg
fistps
out
lods
leave
jo
pop
rorb
mov
stos
mov
mov
outsb
dec
cmpsl
jg
fcom
fisubs
jb
push
sub
loope
sbb
nop
add
jmp
and
xor
jns
push
mov
inc
push
subb
not
jp
loope
sbb
cwtl
add
mov
insb
imul
rclb
inc
addr16
xchg
sub
scas
jo
xor
jmp
clc
xlat
xchg
aad
je
cwtl
mov
fiadds
sbb
xor
jns
ljmp
sbb
jmp
sbb
popl
mov
scas
dec
lret
cmp
mov
int3
add
push
mov
pop
xor
and
loop
not
adc
into
ljmp
fwait
lods
or
cmc
je
xor
es
dec
mov
xchg
xor
fs
lock
dec
aad
hlt
cmp
push
and
cmp
cmp
xchg
adc
cltd
mov
bound
sub
pusha
mov
imul
lds
std
pop
jno
mov
mov
cmp
mov
stos
in
outsb
outsb
jo
stc
lock
pop
jl
fwait
je
mov
or
cwtl
cld
jb
andb
ss
push
sbb
movsl
mov
outsb
es
push
stos
frstor
sub
push
jo
fs
fnsave
cmpb
lret
dec
sbb
push
mov
loop
das
daa
popa
ja
dec
mov
addr16
das
sbb
pop
mov
mov
daa
test
add
clc
test
fsubs
fisubs
and
mov
push
mov
lret
mov
jg
fidivrs
mov
inc
push
les
repz
out
xchg
jbe
popf
ja
mov
loopne
dec
push
push
mov
mov
push
mov
mov
hlt
mov
iret
or
mov
cmp
insb
cmp
and
inc
mov
inc
inc
test
pop
pop
test
les
and
mov
dec
fcomi
addb
pop
sbb
mov
test
int
outsb
push
pushf
dec
or
popf
stc
leave
pusha
xchg
pop
loope
adc
insl
into
fldt
jbe
jne
jnp
sbb
dec
repz
sahf
or
xchg
stos
push
push
mov
in
lret
in
jae
ljmp
fsubl
lock
jle
mov
orb
rorb
sub
cltd
movsb
inc
add
stos
jl
pop
push
repz
cmc
shlb
fwait
or
sub
and
and
inc
dec
cmpsb
sbb
adc
cmc
mov
aas
fisubs
xchg
push
add
push
adc
mov
sub
push
xchg
cmpl
dec
dec
cmpsb
loop
push
add
mov
movsl
daa
fwait
sub
stos
lds
or
cmpsl
sti
mov
jmp
imul
adc
out
std
testl
inc
imul
xchg
pop
insb
sub
fucomip
inc
xchg
ds
add
jl
jo
lahf
sbb
mov
push
call
fisttps
mov
je
mov
inc
fcomp
push
or
testb
inc
dec
push
jmp
outsb
stos
fadd
push
in
mov
loopne
push
mov
pop
jp
shlb
xchg
mov
push
xor
subl
xor
scas
mov
jno
mov
xchg
adcb
arpl
cmpsl
and
xor
cmp
mov
mov
push
dec
addb
pop
std
test
dec
and
adc
push
fs
push
sti
adc
shlb
bound
xlat
adc
in
lods
xchg
mov
inc
popa
jmp
aad
inc
insl
subb
xcrypt-ofb
cmpsl
sub
xchg
xor
inc
mov
hlt
js
jbe
shlb
outsb
mov
or
push
dec
adc
and
mov
out
or
lds
pop
stos
xchg
enter
cs
sub
xchg
int3
dec
sahf
pop
push
add
push
jle
jge
or
outsb
pop
in
inc
or
fsts
in
jle
imul
movsl
and
xchg
adc
loope
verr
add
stos
push
imul
push
pushf
dec
fdiv
aaa
pop
insb
push
adc
adc
xlat
push
ret
cmpl
mov
and
out
mov
push
mov
call
inc
sahf
mov
in
pop
pop
xchg
push
rcl
into
loope
nop
mov
stc
js
cmp
movl
fcompl
out
push
pop
dec
mov
inc
fadds
xchg
or
adc
mov
xor
popf
push
lods
cmpb
aad
pop
into
movsl
lahf
fmull
hlt
xchg
int
test
mov
cmp
and
push
or
sub
jle
lods
mov
and
or
and
outsl
cld
sub
dec
repz
shrl
test
clc
enter
cmp
lods
loopne
mov
lods
mov
arpl
in
das
das
dec
loop
mov
out
xchg
dec
push
mov
aas
inc
dec
lods
int3
roll
pop
cwtl
xor
inc
fbstp
scas
mov
lock
and
jo
xor
popl
sar
cmp
sahf
out
icebp
lea
inc
sbb
pop
mov
pop
xor
outsl
pop
imul
sbb
dec
aas
lods
adc
push
nop
dec
xchg
scas
mov
inc
and
mov
loope
mov
mov
pop
jle
aas
fldenv
sarl
lds
leave
or
jp
jg
stc
shr
jge
adc
xchg
daa
adc
bound
dec
sub
xchg
jge
adc
cmpsb
jbe
xchg
insl
xor
or
movsl
dec
mov
data16
inc
xchg
sbb
loope
xchg
ret
push
outsb
cwtl
mov
in
mov
loope
shl
xchg
es
in
pop
inc
push
jecxz
sub
out
and
mov
outsb
out
gs
stos
iret
pop
mov
or
and
cwtl
cmp
daa
out
mov
orb
jbe
shll
sti
pop
jno
xor
rcrl
inc
outsl
loopne
mov
iret
insb
push
jb
pop
xchg
or
mov
cli
scas
add
jbe
jnp
pop
and
sahf
xchg
inc
mov
pop
fdiv
add
jo
adc
aas
lods
insl
out
and
xchg
jmp
or
push
push
jmp
je
repnz
stos
xchg
dec
arpl
pop
cmp
lahf
lret
scas
outsl
insb
inc
push
xchg
jae
push
rol
int3
mov
lock
scas
sbb
pop
or
and
xchg
push
mov
mov
jns
xchg
mov
in
loop
outsb
push
pusha
push
out
mov
cmpb
jl
sub
shll
jo
sahf
xor
push
fisubrs
sub
rclb
jnp
xchg
lock
mov
lret
push
fstps
enter
cmp
and
rcrl
mov
push
cmp
daa
cmp
jmp
sarl
outsl
mov
test
popf
pop
xchg
push
xchg
adc
mov
and
push
scas
or
addr16
pop
aam
sbb
nop
shrb
hlt
jo
or
lods
hlt
scas
xchg
jnp
mov
es
xor
enter
mov
ljmp
mov
cmpsb
add
frstor
pop
shll
adc
mov
js
pusha
jno
jl
push
pop
int
jb
sub
cmpsb
pop
pop
loope
ficompl
cld
inc
bnd
insl
bound
lahf
stos
insl
and
les
xchg
or
aam
das
cmp
jae
push
pop
andb
lcall
bswap
cld
loop
outsb
scas
bound
mov
sub
xchg
leave
sub
in
jg
int3
mov
rorl
push
pop
jg
cmp
mov
lock
cmc
adc
dec
shrl
imul
stos
add
stos
outsb
repnz
clc
sti
fwait
and
mov
and
jmp
fistpl
mov
lret
loopne
lcall
enter
or
imul
mov
jno
imul
jns
jmp
push
ficoms
inc
and
sub
pusha
xor
repnz
pushf
add
in
test
daa
outsl
mov
add
xchg
sti
daa
in
cmp
push
mov
sbb
notl
popa
lret
push
cmpsl
ljmp
cld
push
fs
sbb
cmpsb
enter
pop
in
push
addr16
dec
aad
repnz
xchg
cld
xchg
inc
out
cmp
fimull
jb
mov
loopne
inc
lods
add
or
in
or
aam
fcoms
addr16
pop
lcall
lods
cmp
mov
stc
movsl
xor
into
sahf
mov
mov
sub
stos
loopne
mov
mov
xlat
add
pushf
mov
xor
mov
push
outsl
cmp
ret
mov
addb
test
xor
enter
mov
jae
int
push
jmp
sbb
mov
insb
xchg
leave
out
fdivr
adc
fcmovu
cmp
cmp
scas
mov
adc
mov
push
jb
aad
arpl
ljmp
movsb
push
std
cmc
ds
stos
imul
inc
push
pop
loopne
lods
scas
adc
or
lods
mov
or
or
xlat
inc
outsl
roll
enter
jp
jbe
fwait
inc
mov
jne
jge
aaa
jne
fiaddl
xor
pop
or
mov
test
xchg
add
push
sub
loopne
js
fwait
test
xchg
add
pop
lret
cmpsl
les
aaa
insl
lret
xor
jb
shrl
into
mov
sub
pop
rcl
mov
mov
daa
aaa
pop
stos
jb
sub
out
or
daa
orb
or
xchg
fiadds
in
mov
iret
filds
mov
lods
cli
mov
xlat
fwait
push
mov
inc
inc
dec
enter
push
push
pusha
push
sbb
jo
and
clc
push
into
dec
jge
mov
dec
nop
jbe
adc
gs
cmp
push
add
lock
inc
mov
sbb
cld
adc
rclb
sbb
mov
lock
aaa
push
cmpsl
pand
ljmp
add
sbb
insb
popl
sbb
mov
cmp
cmp
pop
mov
ret
out
push
je
pop
mov
test
or
lock
test
adc
cmp
add
dec
test
lods
or
xor
into
shlb
inc
dec
rclb
mov
imul
mov
aaa
jb
mov
push
sub
xchg
fists
rcll
adcb
stc
or
adcb
sub
mov
cmp
xor
iret
xchg
adc
aad
push
aaa
pop
fbstp
pop
or
jno
cs
bound
popf
sbb
sub
in
push
dec
in
pop
push
xor
or
js
icebp
sti
bound
enter
mov
dec
imul
es
mov
in
fstpl
inc
test
cmc
in
addr16
es
pop
outsl
inc
push
pop
testl
leave
inc
add
maxps
in
sbbl
cmpsl
mov
inc
lods
push
std
pop
lret
popa
add
or
scas
xorl
or
jmp
mov
jp
mov
adc
rcll
outsb
cmp
push
mov
out
pop
push
jns
xor
push
push
repz
lret
pop
pop
fsubrl
jge
mov
hlt
stos
push
testb
and
mov
or
cld
pusha
test
jo
shlb
cld
movsl
cmpl
inc
mov
addr16
addr16
dec
adc
cmp
add
ljmp
push
pop
jg
jmp
mov
add
enter
mov
fwait
lock
xchg
aas
cmp
add
xchg
add
imul
adc
dec
fld1
mov
aam
das
movsb
mov
cmp
imul
push
cmp
lret
or
mov
aas
movsb
fsubr
mov
mov
jg
cmp
leave
mov
adc
pop
fstpl
test
insl
rcll
jo
pop
inc
js
dec
lods
out
xor
movsl
or
xchg
mov
jb
mov
xor
xchg
cmc
lock
mov
cltd
outsl
mov
add
nop
mov
enter
mov
xchg
xchg
dec
mov
inc
mov
mov
push
cmc
and
lock
popa
movsl
dec
cli
movsb
cmp
aad
cmp
lcall
das
call
mov
loopne
pop
add
mov
sbb
popa
int
inc
in
divl
xor
mov
in
popf
pop
cmpl
in
cmp
sbb
rcr
les
and
push
dec
adc
test
clc
jns
aaa
jae
xchg
icebp
mov
outsl
lret
adc
sub
clc
xchg
add
test
cmpl
mov
push
mov
sub
cmpsb
push
ja
dec
repnz
mov
cmp
jge
sbb
cmpsb
add
dec
pop
mov
push
adc
rorb
mov
or
outsb
in
inc
adc
cmp
sub
inc
jle
adc
cmpsb
jg
fsubp
in
inc
fcom
dec
icebp
jbe
adc
fcomps
stos
fidivrs
das
ds
push
inc
pushf
mov
icebp
push
mov
shr
je
outsb
mov
test
cli
fidivl
mov
jecxz
into
inc
and
jns
aas
mov
push
cmp
loop
out
push
ss
dec
mov
xorb
aaa
jecxz
cmp
push
ret
xor
xchg
insb
jmp
movsl
pop
bnd
aas
sbb
mov
call
sub
mov
dec
mov
frstor
rcr
cmp
or
pop
inc
cmpsb
jecxz
cmp
setae
push
fwait
adc
mov
mov
arpl
inc
and
and
movsl
cli
mov
push
iret
lods
mull
stc
pop
sbb
mov
pushl
sbb
cs
pop
stos
imul
dec
mov
pop
mov
xchg
mov
iret
cmp
decl
pop
pop
fldt
jb
aaa
pop
pop
mov
aad
insb
addl
cmp
out
adc
adc
shll
subl
push
mov
ds
mov
test
cmp
adc
and
and
inc
pushf
mov
inc
or
arpl
sti
test
cmp
adc
mov
rcll
mov
xchg
dec
xor
push
out
fisttpll
sub
mov
cltd
lret
flds
pusha
rclb
mov
mov
outsl
adc
call
subb
xchg
loope
sub
in
pop
test
mov
mov
aaa
rorb
leave
fldcw
ds
popa
jns
xchg
mov
mov
cli
dec
inc
adcl
cmp
mov
ljmp
addr16
add
std
lds
out
shlb
aad
es
sub
loope
adc
add
jg
ret
cmp
add
das
dec
xor
push
sub
mov
cltd
jne
lds
dec
xchg
lds
lock
or
push
mov
repnz
les
leave
dec
mov
xor
test
into
popf
mov
add
pop
iret
jne
divl
test
mov
insl
lea
adc
pop
test
mov
aas
sti
pop
xchg
cltd
or
scas
fldenv
inc
test
push
push
scas
mov
pop
test
add
arpl
daa
shrb
in
in
dec
fcoml
iret
pop
lods
decb
mov
cmp
or
lock
and
mov
mov
cli
adc
dec
ds
outsl
inc
mov
xchg
das
xor
dec
out
hlt
mov
jae
jnp
jbe
xlat
imul
nop
mov
add
loopne
dec
jle
pop
jmp
arpl
stos
cmp
js
cld
sbb
je
mov
in
gs
xor
inc
push
mov
push
sbb
jg
jmp
lea
insb
mov
lahf
fsubrp
outsb
dec
dec
push
stos
sbb
fmuls
xor
ffreep
cmp
sbb
cltd
and
loope
mov
push
rclb
fyl2xp1
mov
inc
pusha
fstpl
leave
mov
fisttpll
cltd
cmp
jnp
push
add
xor
stc
lods
test
loopne
xchg
adcb
cld
or
fsts
jmp
adc
nop
std
pop
push
outsb
dec
xchg
pop
std
inc
mov
int3
std
in
aaa
sbb
pop
pushf
pushf
call
insb
add
mov
fiadds
addr16
jecxz
mov
imul
adc
xchg
iret
cmp
jae
pusha
scas
or
xchg
dec
push
idivl
jge
fisttpl
cld
scas
adc
inc
adc
xor
imul
or
add
adc
inc
xchg
outsl
pop
popf
imulb
jns
pusha
mov
into
mov
ss
jnp
cmp
insl
sti
adc
jne
adc
pop
cli
mov
pop
mov
push
push
cmpsl
mov
fwait
or
push
cwtl
jge
popf
movsl
mov
xor
mov
pop
mov
cmp
xchg
popa
cmc
mov
sti
push
lcall
je
adc
xchg
iret
scas
mov
sub
dec
xchg
in
xor
cli
inc
icebp
mov
repz
and
pop
fldt
cmp
inc
daa
xor
addr16
mov
rclb
in
pop
cmp
jae
sub
es
dec
out
test
fstl
or
mul
pop
adcl
ret
dec
push
movsl
flds
lods
call
add
ss
ja
push
fisubs
gs
scas
mov
stos
inc
mov
dec
lds
adc
sbb
pusha
dec
pop
pushf
test
ljmp
dec
dec
mov
inc
jae
mov
imul
xor
fcomp
dec
adc
xchg
sub
int
test
repnz
pop
xchg
cmp
repnz
lcall
sub
mov
faddl
jno
push
mov
push
inc
stos
js
lret
lret
fdivs
mov
sbb
outsb
dec
lea
add
xor
sarb
mov
pop
push
out
fdivrp
out
pop
jle
roll
inc
dec
imul
and
frstor
addr16
ret
adc
and
pop
andb
sbb
int3
ret
ss
fbld
cmpsl
sub
cmp
ja
or
into
fcoml
mov
adc
sahf
push
push
adc
or
ss
fists
xchg
mov
adc
push
in
mov
scas
lret
pop
ja
mov
fimull
pop
or
xor
sbb
out
iret
push
mov
dec
lahf
enter
lock
adc
rolb
outsb
cmp
pop
push
mov
lahf
mov
jg
addr16
sub
mov
cmp
mov
mov
ret
jecxz
xchg
lock
leave
jle
xor
shlb
and
test
mov
cmp
jae
xchg
fistpl
pop
incb
add
cmp
add
pusha
dec
gs
push
xchg
cmp
add
arpl
mov
mov
jb
push
inc
test
add
jg
push
push
jecxz
and
jecxz
in
cmp
jns
and
or
out
out
xor
lock
cmp
mov
out
sub
adc
out
pop
mov
cmpsl
or
push
jno
inc
cmpsl
sti
inc
add
cmp
mov
dec
xchg
cmc
movsb
inc
mov
enter
mov
lock
stos
cld
jle
add
dec
pop
lcall
pop
push
mov
frndint
fistpll
shlb
lcall
aad
jno
mov
test
test
sti
jae
loop
pop
sub
adc
push
inc
hlt
adc
jne
push
lret
adc
mov
jb
mov
jns
mov
mov
ss
mov
xor
fidivrl
jno
mov
outsl
cmp
cmp
cmp
push
pop
push
in
cmpl
push
sub
mov
push
pushf
dec
inc
inc
fwait
in
test
lea
or
sbb
fldcw
cs
into
mov
sar
das
mov
dec
movsl
scas
sub
test
stc
vmovntps
fscale
jae
sbb
jo
pop
push
xchg
pop
mov
jecxz
cmp
xlat
int
sub
lret
jp
sbb
lahf
out
testl
ret
pop
add
mov
pop
pop
add
jmp
imul
or
repz
cmc
popf
jle
outsb
popa
test
inc
int3
adc
bound
add
fwait
jae
jns
push
cltd
pop
adc
clc
sbb
xchg
mov
out
adc
decb
xchg
stos
lcall
subb
in
sar
and
aad
fwait
ja
jge
dec
insl
dec
cmp
push
or
jecxz
subb
cmp
mov
iret
mov
rcll
mov
cltd
lods
push
shr
rorb
inc
mov
inc
sbb
sub
dec
mov
inc
rcl
inc
mov
mov
mov
aas
mov
xor
shrb
jns
and
ret
add
or
in
popl
mov
js
mov
fs
mov
ret
sub
pop
dec
shl
mov
ret
cmp
aas
int3
insl
scas
dec
ret
call
loop
pop
sub
mov
in
adc
nop
and
sbb
xor
lret
mov
notl
movsl
fldl
push
sbb
cmp
test
lahf
xor
mov
cmpsl
divb
push
xor
sbb
je
cmp
adc
int
xchg
add
pusha
adc
inc
aam
sub
pop
push
arpl
jnp
xchg
sbb
dec
movsl
and
mov
push
ret
push
xlat
mov
rol
sarb
loope
int
ja
jecxz
or
add
clc
sbb
add
lods
sbb
push
inc
cmp
push
nop
cmp
rsm
out
testl
inc
and
mov
or
lods
push
fcoms
movsl
add
pop
into
and
or
enter
or
push
push
orl
std
out
ljmp
hlt
lock
push
testb
xor
add
repz
jno
cmp
repz
mov
mov
in
mov
mov
push
cmc
mov
hlt
leave
mov
rcrl
cmpsb
mov
repnz
mov
adc
pop
sub
mov
stc
mov
adc
insl
jl
loope
cmpl
and
sahf
jmp
xor
lods
push
in
sahf
dec
lods
cmpsb
arpl
imul
test
cmp
dec
dec
add
bound
popf
jns
sub
jmp
mov
rolb
push
xchg
dec
adc
adc
adc
iret
or
or
iret
repz
cmpsl
fucomi
pop
out
loop
popa
sub
scas
lret
and
xchg
out
adc
jp
add
pop
loop
cmp
shll
sbb
push
add
sbb
mov
call
cmpl
mov
inc
cltd
ljmp
cmp
mov
sbb
lods
out
ss
dec
mov
scas
inc
sub
and
jle
xchg
addr16
leave
mov
and
fcompl
mov
inc
dec
negl
sbb
mov
mov
jbe
int3
into
adc
je
mov
ret
stos
lcall
jmp
mov
int
hlt
add
out
sub
jle
leave
xor
push
int
faddl
fldt
fcomip
sub
xor
xchg
loope
add
jp
sbb
xchg
lods
loope
leave
lahf
lcall
adc
adc
push
jb
and
cmc
cmpsb
mov
shll
fwait
adc
lahf
sbb
es
ljmp
lret
push
into
inc
fnstsw
pop
enter
ljmp
dec
dec
and
cmpsb
mov
int
mov
jb
jg
dec
cmpsb
mov
rcrb
aad
mov
ja
sbbl
xchg
loop
iret
cld
call
sahf
cmp
or
push
sub
clc
inc
jns
adc
imul
jl
jp
ret
cmp
sbb
fildll
mov
test
ljmp
sti
iret
jmp
mov
or
in
xchg
push
xchg
push
lods
cmp
add
xchg
xchg
jp
or
lahf
xlat
push
stos
test
insl
and
jge
xchg
add
mov
dec
movsl
sbbl
jg
pop
or
cmp
stc
ljmp
jae
push
mov
adc
mov
std
rcl
pop
sti
int3
push
cmpsl
dec
xchg
adc
dec
cwtl
adc
stc
add
inc
js
mov
mov
xchg
mov
in
cmp
cltd
stc
mov
cs
repz
xchg
mov
mov
xor
sub
rol
add
xor
adc
cmp
mov
inc
inc
sbb
shrb
xlat
lock
pop
sarb
out
test
hlt
and
insl
mov
imul
fbld
xor
fsubl
mov
lret
movsl
ja
popa
lds
sti
mov
adc
divb
xor
mov
test
mov
addl
fadds
aam
inc
push
xchg
lock
decb
aaa
fwait
loope
or
or
ret
in
test
pop
sbb
mov
xor
fstpl
in
inc
add
dec
fwait
mov
fs
jle
scas
scas
int3
in
bound
andl
xchg
imul
mov
push
dec
inc
lock
int
aas
insb
les
mov
movsb
sbb
pop
pop
dec
pop
push
or
sbb
aas
push
sub
cmpsl
push
popf
lahf
dec
jl
xor
adc
in
mov
aaa
ret
sti
jnp
cli
cmpsb
sbb
loopne
and
xor
and
add
icebp
daa
mov
stos
aas
sbb
mov
loopne
mov
mov
xor
shll
call
jecxz
scas
nop
cwtl
sub
xor
mov
jb
add
cs
test
lea
ja
mov
les
sub
cltd
push
sub
fistl
pushf
outsl
mov
push
push
clc
jge
sbb
push
popf
push
test
jp
out
out
pop
xor
js
mov
lds
and
gs
pusha
inc
out
or
mov
mov
and
orb
or
pop
shl
ret
loope
out
shrb
rcrb
repnz
clc
loopne
rorb
xorl
mov
jno
and
mov
mov
out
arpl
jp
ljmp
mov
popa
mov
adc
sarl
jp
aad
mov
cli
pop
stos
pop
or
xchg
mov
sub
sub
mov
test
stc
pusha
imul
ljmp
xor
jno
push
movsb
pushf
repz
jmp
mov
xor
out
xchg
push
fsubrl
cmp
mov
jae
pop
dec
cli
cmc
mov
hlt
mov
fwait
mov
mov
push
fisttpll
sbb
sub
stos
les
leave
fdivs
pop
or
push
dec
aam
popa
push
mov
pop
push
mov
push
and
pop
ja
sub
push
xchg
adc
cmp
and
sbb
shlb
sbb
int
jo
jg
add
leave
repz
in
cwtl
testb
dec
dec
stc
insb
bound
mov
mov
push
lods
lcall
xor
popf
or
jle
jp
rcrb
pop
rcrb
sbb
mov
orb
outsl
bound
imul
xchg
pop
pop
rcrb
dec
push
inc
push
xor
jp
subb
std
out
xchg
jb
lods
sub
andl
xor
pop
ret
callw
adc
jmp
ja
xor
dec
es
in
cmp
push
ds
in
and
testb
push
dec
jl
mov
nop
pop
push
xchg
sbb
sub
push
xor
ja
dec
push
in
inc
xor
sbb
sahf
or
shrb
or
jle
adc
sub
ljmp
jmp
add
je
pop
bound
or
inc
jge
mov
sbb
or
leave
outsb
xchg
popa
popa
push
cmp
inc
pop
mov
or
scas
pop
shrl
pop
sbb
cmpsb
jmp
fs
jmp
fmulp
imul
insl
insb
mov
shll
mov
cmp
inc
push
cli
push
ds
sbb
fs
addb
sbb
mov
jnp
daa
je
movsl
cmpsb
aas
sbb
and
mov
fistl
sbb
push
xor
mov
push
pop
adc
xchg
clc
nop
fwait
add
add
jmp
jecxz
xor
xchg
shr
xchg
cmp
and
mov
data16
movsl
call
subb
insl
loopne
add
mov
push
xlat
or
fwait
jne
int3
lea
cmp
mov
push
pusha
outsb
sub
pop
cmpl
mov
push
mov
pusha
mov
pop
lea
mov
cli
imul
cmp
pushf
lcall
xchg
sub
push
enter
cld
xchg
xlat
and
orl
pop
mov
ss
ja
popf
shl
addr16
push
xchg
adc
cs
mov
aaa
iret
adc
sub
cmc
cmpsl
ljmp
pusha
jno
xchg
movsb
mov
cmpsl
or
out
cmp
aaa
mov
dec
pop
or
out
movsl
mov
mov
aas
mov
jecxz
sti
jmp
fcmovnu
ljmp
dec
out
mov
icebp
mov
jns
pop
cltd
jo
cmp
popa
cltd
mov
ret
sub
loopne
sti
xorb
sub
aam
outsb
dec
jb
in
iret
push
mov
jl
call
add
mov
mov
mov
loope
rclb
shr
cld
sbb
or
cmp
loop
cli
push
mov
das
adc
and
xor
cmp
loope
loope
push
js
pop
hlt
mov
call
and
es
lock
push
roll
test
xchg
ljmp
add
cmpsb
mov
mov
or
inc
mov
mov
arpl
adc
and
jcxz
mov
or
xchg
push
xchg
outsb
push
pop
lea
outsb
sub
adc
push
dec
sets
aam
scas
ja
xor
xor
xor
sti
xchg
sbb
and
jns
lahf
sub
imul
sarl
jo
dec
sbb
popa
or
cmc
sub
push
lods
cmpsl
loope
jl
jb
mov
jnp
lahf
mov
sbb
lret
ret
xchg
mov
cmp
stc
and
hlt
mov
shll
shl
xchg
fucomip
jl
mov
sub
test
fldt
mul
inc
push
out
movsb
xchg
and
and
fsubp
push
pushf
sbb
lcall
pop
ss
sarb
push
out
mov
lret
and
sub
aam
mov
push
dec
push
jnp
sbb
loop
icebp
and
or
push
mov
clc
arpl
mov
popa
push
push
int3
popa
inc
cli
movsl
orb
mov
dec
cmp
lcall
or
xor
in
pusha
add
pop
sti
xchg
jmp
adc
sbb
mov
rcll
leave
sub
ss
frstor
adc
dec
arpl
das
mulb
int3
lods
in
outsl
cmp
outsl
sbb
dec
inc
arpl
adc
fmul
sbb
cmpsl
into
mov
pusha
mov
stc
sbb
adc
adc
fnstcw
inc
xchg
sub
mov
aaa
fnsave
int
mov
inc
cmp
mov
sahf
mov
inc
mov
xcrypt-cfb
cmpsl
jecxz
mov
clc
sti
rorl
mov
test
sub
hlt
stc
sbb
stc
cmp
in
arpl
inc
add
subb
jl
ljmp
sbb
fwait
popa
insb
test
iret
push
inc
cs
adc
lret
cld
gs
jp
stos
loope
in
cmc
dec
sbb
inc
fs
ss
fisubrl
sbb
push
mov
ja
cmpsl
pmulhuw
push
xor
insl
mov
sub
adc
mov
pop
loope
lods
inc
lods
sti
mov
pop
sti
dec
mov
sbb
pop
sbb
outsb
stos
fnstcw
stos
scas
add
out
addr16
adcb
cltd
rorb
lds
es
adc
push
mov
pop
std
enter
outsl
fisttpll
inc
icebp
xchg
bt
sbb
sbb
lret
hlt
stos
roll
push
jbe
cwtl
dec
cmp
mulb
sti
fimull
jl
jp
rorb
mov
xor
addr16
test
stc
mov
shll
insl
leave
aam
stos
xchg
mov
push
mov
mov
aad
daa
in
adc
jle
icebp
popa
movsb
and
les
addl
rcrl
stc
outsb
das
fmull
and
ljmp
in
mov
pop
mov
fnstcw
ljmp
cmpsl
sbb
add
movsl
repz
and
xchg
push
dec
icebp
sbb
shlb
popa
pop
cmp
fld1
inc
loopne
fmull
push
outsb
or
enter
inc
cmpsl
jnp
or
iret
adc
leave
sbb
xor
inc
jb
inc
or
lods
or
sbb
push
dec
fcoml
lcall
js
or
ss
cli
pushf
push
push
jae
push
push
loope
mov
mov
iret
mov
int3
addb
push
jmp
sahf
jmp
scas
mov
lock
jb
jmp
test
adc
enter
or
jecxz
or
fwait
mov
push
data16
fucomi
dec
leave
incb
popa
movsb
mov
mov
cmpsl
test
imul
ret
ret
xchg
out
dec
fmuls
je
and
add
sbb
jge
mov
sbb
add
insb
pop
dec
lret
popf
insl
cmp
outsl
xchg
mov
adc
mov
lock
mov
ret
cmp
pop
and
lock
aad
xchg
enter
push
xor
bound
stos
sbbl
pop
movl
mov
mov
aad
ret
lods
dec
mov
mov
dec
scas
sbb
pop
add
ret
inc
fadd
cmp
cmp
jl
inc
stos
jle
jl
add
push
xchg
imul
pop
jg
mov
mov
adc
inc
pushf
mov
mov
mov
dec
jmp
rcrb
mov
xor
add
ret
lahf
and
mov
stos
lock
fidivs
or
ficompl
mov
mov
mov
insb
outsb
jae
call
out
xchg
enter
in
cmc
xor
pop
loop
xchg
push
mov
mov
add
int3
xor
int3
mov
scas
imul
xorb
push
inc
cld
xchg
or
add
and
pushf
cmpsl
loop
sahf
es
icebp
sahf
mov
fistps
je
dec
adc
popf
ret
enter
je
fisttps
fiadds
push
repnz
dec
push
loope
shlb
ret
pushl
call
movsl
inc
mov
repz
push
or
or
sub
xor
mov
cmc
jmp
sub
adc
mov
adc
xchg
adcb
mov
xchg
icebp
inc
xor
add
adc
call
stc
or
dec
rcrl
or
cmp
xor
insb
bound
stc
out
rcll
stc
sub
clc
dec
jle
out
mov
test
or
sbb
xchg
testl
popf
leave
cltd
test
dec
and
aaa
fmuls
sub
dec
or
mov
test
jbe
ja
cmc
fs
mov
ja
push
int3
fsubrs
addr16
mov
push
mov
mov
jae
adcb
jnp
push
push
jbe
inc
mov
or
pop
xor
sbb
in
cmp
addr16
stos
cmpsb
pop
arpl
mov
mov
into
aam
cmpsl
rcll
xor
push
stc
fidivrl
aad
jae
mulb
in
xchg
lret
xor
pop
in
pusha
aaa
pop
outsb
and
testb
jp
cmp
out
addr16
jle
xchg
dec
adc
pop
mov
inc
sub
xchg
in
fs
or
mul
iret
sub
sbb
xchg
out
mov
xchg
sub
loopne
aaa
ljmp
or
addb
xorb
data16
insb
int
mov
fisttpl
or
subl
jnp
clc
mov
xor
adc
dec
scas
or
lret
add
std
push
mov
int
mov
daa
sub
adc
fists
xchg
mov
sub
lods
inc
pop
xchg
xor
mov
clc
mov
sbb
push
xchg
rcrl
adcl
push
insl
mov
jne
or
xchg
xor
hlt
or
cli
push
es
jne
sbb
dec
in
vmread
mov
shll
add
sbb
and
cmp
xchg
inc
ljmp
rclb
insl
out
mov
ja
ds
es
shlb
push
test
inc
ljmp
xor
daa
lcall
pusha
mov
inc
aad
pop
adc
pop
sbb
ret
cwtl
scas
jp
cld
push
sbb
ljmp
in
addl
mov
sbb
cmp
mov
xor
in
push
vpminsw
lods
cmpsb
pop
mov
jbe
mov
xchg
mov
xor
ja
outsl
and
bound
faddl
pushf
adc
je
sub
mov
paddw
jp
jo
xchg
ja
sbb
gs
push
stos
in
xchg
loope
mov
inc
enter
dec
pusha
imul
loop
rolb
pusha
lea
sbb
paddw
and
inc
in
aad
xor
dec
mov
xchg
repnz
adc
dec
cltd
enter
test
das
push
testl
mov
test
and
mov
jb
xchg
jge
cli
les
lret
push
rorl
aas
push
pop
mov
aad
lcall
out
int3
incb
ds
mov
mov
iret
stos
inc
mov
aam
push
frstor
or
aaa
out
iret
dec
leave
and
push
into
or
adc
pop
xor
cli
xchg
pop
push
shrb
mov
scas
mov
cmp
ret
xchg
ret
les
popa
ds
fadd
ds
ss
cwtl
add
jns
loop
lea
call
and
xlat
stos
mov
shll
adc
pop
iret
bound
pop
lret
jbe
adc
push
out
cld
sub
call
inc
jno
nop
cld
inc
insb
std
test
aam
fimuls
lock
push
setno
or
dec
cld
jb
adc
mov
sub
cmpsb
and
sub
lcall
lock
jne
xor
js
popa
sbb
sub
dec
loope
js
or
pop
in
jo
aad
notl
cltd
lahf
daa
dec
arpl
jne
or
lret
sarl
sub
stc
adc
jge
imul
pop
adc
dec
sub
push
mov
sub
jb
iret
adc
adc
repz
lahf
jne
popa
push
jne
jp
leave
rcr
test
loop
shll
icebp
mov
xor
cmc
cmp
xor
cmp
pop
xchg
aad
test
lea
mov
mov
mov
lea
push
push
clc
aaa
outsb
ficompl
push
mov
pop
repz
pop
int
jb
sti
dec
sub
push
xchg
pop
pop
add
jle
test
dec
sub
fsubs
pusha
nop
xor
lahf
push
sbb
mov
arpl
stos
stos
sub
das
lcall
jns
std
pop
call
lods
and
sti
lahf
je
add
push
call
xchg
mov
cmp
out
imul
movsb
or
stc
cs
jns
imul
lret
xor
cs
mov
or
das
mov
push
int3
addr16
mov
adc
push
mov
jmp
mov
movsl
add
push
inc
xchg
insl
xor
fnsave
sahf
cmp
loope
push
mov
imul
test
in
repz
lock
mov
sbb
je
xor
fidivs
mov
jp
push
inc
jmp
iret
cli
sbb
in
xchg
cmpl
clc
and
add
cmp
dec
jne
repnz
sbb
filds
rclb
and
int3
enter
pop
cs
jnp
arpl
mov
jmp
imulb
mov
cmp
mov
jg
outsl
jge
adc
scas
add
loopne
pop
dec
sbbl
bound
orb
sbb
shll
sub
push
mov
add
inc
mov
sub
pusha
movd
lret
call
cmp
add
dec
adcb
call
sub
jmp
lea
xor
movsb
xchg
push
jae
mov
jbe
imul
inc
pop
call
inc
insb
aas
lcall
movsb
in
scas
into
hlt
leave
inc
pop
outsb
data16
movsl
sarb
xchg
mov
adc
pop
incl
jmp
repz
sbb
jge
aam
pop
les
hlt
das
sbb
roll
mov
add
sbb
enter
sbb
sub
popa
xchg
dec
sbb
and
and
inc
and
mov
and
imul
dec
pop
xor
leave
pushf
lret
cwtl
movsb
xchg
pop
stos
hlt
adc
icebp
scas
xchg
cs
xchg
test
add
sahf
sub
pop
xchg
cli
cmp
pusha
fs
sbb
sub
lods
sbb
rcrl
xchg
popf
jl
ljmp
xor
mov
and
pop
add
jge
test
icebp
lcall
scas
mov
lods
sbb
stos
mov
loop
cmp
stos
aad
shrd
arpl
push
lret
sbb
test
inc
aam
loopne
mov
imul
in
adc
fimull
ret
lea
adc
imul
ja
inc
xchg
sahf
add
pop
stos
inc
mov
xor
lods
nop
xor
je
lds
xchg
fsub
pop
push
push
sub
xor
aam
sub
inc
cld
xor
hlt
or
sbbl
inc
pop
in
stos
mov
jge
out
test
inc
inc
pushf
data16
cmpb
lea
add
stos
xchg
leave
dec
jae
in
or
leave
lock
xor
mov
negb
or
movsb
pop
xchg
movl
pop
adc
aas
cs
loop
outsb
and
sete
adc
outsb
frstor
andl
dec
out
in
lds
pop
jne
jl
pusha
mov
aas
add
push
push
pushf
fstl
adc
add
dec
mov
xchg
rcrl
push
shrb
xor
mov
pop
dec
lock
push
sub
xchg
push
xlat
mov
ja
pushf
ret
andl
lock
or
stos
adc
mov
lea
sub
adc
rcrb
mov
sbb
pop
xchg
pop
add
inc
cmp
sbb
sub
push
lods
aaa
adc
mov
mov
sarb
inc
jnp
in
imul
or
imul
jp
inc
out
cmp
sbb
mov
imul
mov
scas
mov
into
add
lcall
xor
lds
das
xchg
out
movsb
fxch
arpl
repnz
xchg
int
subl
hlt
pop
xchg
push
cmpsb
mov
xor
or
pop
mov
inc
fwait
daa
stos
dec
or
fcmovb
add
add
data16
mov
test
xor
bnd
imul
gs
xchg
int3
adc
ljmp
jl
push
mov
and
and
test
pop
scas
pushf
jnp
add
sub
lcall
fcmove
into
insb
cmc
cmpsb
fs
jg
lods
push
fcompl
xor
daa
dec
popa
mov
jno
cmp
pop
arpl
and
jmp
xor
pusha
in
inc
std
sbb
adc
aam
or
lahf
es
add
jo
pusha
push
loopne
jno
dec
jnp
les
mov
sbb
mov
ret
xor
repnz
fdivs
es
cmp
jno
bound
pop
aam
or
pop
repnz
mov
mov
mov
adc
or
in
or
push
jnp
ror
and
push
les
test
or
lods
aad
aam
subl
xchg
cmp
lahf
repz
shrb
fdivrs
push
pop
mov
xchg
or
movsb
adc
dec
stos
es
jns
xchg
mov
aaa
adc
jns
xchg
add
sub
xlat
jp
addb
pop
jns
sbb
push
push
push
mov
xor
pop
and
mov
jp
fbld
leave
mov
mov
or
lods
pushf
movsl
ljmp
pop
scas
sbb
test
jp
cmp
cmpsb
mov
in
cmp
mov
cmc
into
mov
pop
in
sbbb
push
dec
cs
les
dec
mov
push
adc
adc
cmpsb
add
mov
fistps
roll
lods
js
out
arpl
push
adc
data16
push
loope
fimull
int
loop
pop
mov
push
mov
mov
mov
add
in
adc
and
jmp
lock
arpl
pop
xchg
xor
xchg
dec
jp
in
cwtl
stc
adcb
movsb
out
outsb
push
outsl
or
clc
jl
push
mov
outsl
xorl
adc
and
push
push
pop
lret
or
add
pop
mull
sub
add
lds
mov
addr16
xchg
aas
lods
inc
sub
lahf
mov
push
pop
rolb
in
mov
cmp
fdivr
mov
and
ret
inc
push
mov
xor
daa
sub
mov
jecxz
mov
mov
add
lea
cmp
or
gs
cmp
es
push
adc
subl
daa
sub
test
and
sbb
addr16
mov
adc
in
sbb
test
andl
push
pop
dec
jge
loope
loop
sub
rclb
and
xchg
mov
or
jecxz
sarl
pop
lods
mov
and
dec
mov
push
test
cmpsl
stc
sti
mov
inc
xchg
mov
js
rorb
mov
and
cmp
xchg
add
mov
xchg
pop
mov
push
movsl
aaa
movsb
xor
movsb
mov
xchg
test
addr16
add
imul
scas
rorb
cmp
xchg
jo
sti
cmpsl
sbb
push
jge
and
clc
push
std
ret
sahf
cmpsb
ljmp
fstpt
enter
xlat
insl
hlt
gs
and
and
dec
incb
pushf
sbb
push
adc
mov
les
xor
idivb
imul
int
cmp
mov
push
sbb
add
aam
add
cmp
jo
setno
outsl
shll
push
fldt
xlat
icebp
sbb
test
add
fldenv
pop
push
push
mov
mov
fiaddl
imul
jno
and
cwtl
xor
orl
sub
jle
outsb
imul
sub
ds
and
jno
jne
mov
arpl
dec
dec
out
ss
lahf
shll
push
pop
xor
push
add
fildl
nop
loop
sahf
adc
mov
dec
sbb
lcall
pusha
or
dec
andb
inc
or
fwait
fs
cmp
inc
mov
xchg
inc
inc
adcl
negb
andl
ror
mov
es
loopne
aas
pop
mov
call
inc
fmulp
lcall
inc
fnsave
adc
ret
idivb
jmp
ja
or
xor
mov
jno
fcomps
pop
rcll
lcall
sub
jge
aaa
sbb
repz
add
sub
out
jp
sub
xor
jae
sbb
pushf
inc
lock
push
lcall
faddp
icebp
sub
push
mov
mov
sahf
push
movsl
das
dec
out
sub
sub
push
divl
pusha
push
aam
and
ret
cltd
lahf
mov
lahf
daa
cmp
insb
test
mov
mov
xchg
jmp
fsubrl
xchg
aas
daa
pop
scas
mov
test
or
stos
push
popa
in
negl
shll
pop
jb
ljmp
in
mov
adc
mov
cld
jae
ret
jno
inc
mov
iret
jbe
xchg
mov
in
mov
adc
jno
aas
in
lods
fisttps
sbb
rcrl
movsb
fisttpll
sub
mull
dec
inc
sbb
out
ret
ss
sbb
cmp
lea
pop
sbb
or
and
cwtl
and
adc
xchg
lds
or
test
push
inc
jecxz
stos
ret
add
adc
fld
push
leave
xchg
fstpt
pusha
ljmp
fwait
daa
add
xchg
xchg
and
mov
or
xor
xor
outsl
popf
insb
stos
pop
mov
xor
xchg
test
rcrl
shlb
jnp
sti
or
pop
sbb
jno
mov
dec
in
imul
icebp
mov
push
sti
cmp
inc
dec
jae
sbb
stos
in
dec
jne
adc
cmpsb
imul
jg
push
ljmp
leave
lcall
hlt
scas
mov
seta
repz
xchg
sub
lock
add
inc
movsl
cmp
aas
ljmp
fdivrs
or
repz
and
inc
aas
lret
pop
movsb
add
xchg
jg
mov
testb
adc
cmc
push
pop
not
and
xor
xchg
sub
pop
dec
repz
push
or
xchg
dec
test
repz
jl
js
push
movsb
push
inc
mov
imul
pop
je
ret
arpl
inc
inc
mov
push
or
movsl
mov
outsl
repz
pop
mov
cmp
cmc
inc
push
lret
pop
mov
push
mov
inc
sub
pushf
in
jl
cmc
sbb
out
push
cmp
mov
fisubl
mov
int3
icebp
jl
test
outsb
sbb
mov
out
xor
pop
iret
mov
dec
jge
hlt
rol
cmp
repnz
sti
ljmp
push
sarb
push
or
icebp
hlt
lea
jo
inc
mov
jmp
iret
mov
dec
sahf
sub
addr16
fstl
outsb
aad
lret
push
adc
lea
cs
lock
data16
aas
mov
dec
frstor
gs
mov
jg
lods
push
int
push
cmp
in
mov
les
sub
jle
leave
add
in
pushf
push
jae
mov
or
ds
inc
std
xor
xchg
mov
cmovnp
mov
pop
scas
mov
loop
push
or
push
add
pop
repz
and
mov
ss
push
ret
rcrl
loopne
inc
cmpb
fs
ja
cmc
xchg
daa
jns
and
in
sbb
xchg
mov
loope
mov
cs
xor
push
mov
popf
or
stc
add
popf
or
mov
push
sub
cli
ret
cmp
xlat
rorb
add
xor
pop
dec
and
neg
cmpsb
ljmp
repnz
mov
jl
dec
mov
dec
in
mov
adc
inc
aam
or
pop
data16
cmp
inc
jmp
in
jp
mov
scas
fsubrl
dec
xor
mov
mov
add
pop
cmp
decl
into
mov
dec
add
repz
jnp
xchg
jg
sub
add
inc
fwait
ljmp
or
jns
sti
fsubs
lock
sbb
xchg
cmp
inc
fldcw
xchg
mov
adc
call
call
decl
push
popf
dec
in
leave
jno
xchg
movsl
cmp
jecxz
dec
push
outsb
es
repnz
push
dec
inc
shrb
cmp
fisubrs
pop
pop
scas
movsb
adc
xchg
movsl
sub
je
stos
mov
hlt
mov
cmp
inc
jg
push
cmp
or
push
scas
sbb
fnstsw
and
test
cmp
mov
fucomip
jo
fwait
push
dec
jne
inc
inc
cltd
loop
mov
mov
fisubrs
imul
dec
fwait
stos
xchg
lea
fs
lods
inc
xor
lea
jg
dec
dec
mov
gs
mov
jnp
fistps
fucomi
lcall
mov
mov
add
cmpsl
loope
cltd
cmpsb
cmp
or
or
scas
cltd
in
mov
dec
or
enter
adc
mov
cmpl
imul
cwtl
subb
xor
jp
cmpsb
fbstp
outsl
inc
sbb
bound
popf
cmp
xor
popf
pop
addb
ret
push
xor
push
sbb
ret
push
sahf
dec
sub
out
or
cmpsb
sti
outsb
sbb
adc
or
mov
mov
fsubr
in
push
fldenv
scas
sbb
pop
cs
dec
adc
jne
sbb
fistpll
or
shl
decb
mov
shlb
mov
mov
lds
inc
lock
loope
and
std
stos
subb
inc
sbb
mov
xchg
enter
jp
repnz
sub
pop
pop
inc
lahf
sub
lcall
iret
mov
xor
mov
or
mov
adc
cmp
cmpsb
add
ds
lods
out
test
jbe
jns
jbe
mov
in
inc
xchg
imul
sub
push
xchg
scas
cmp
add
and
inc
pop
and
and
scas
fdivrl
int
cli
roll
sub
dec
dec
lods
rcrl
inc
shlb
mov
in
nopl
push
test
xchg
sbb
inc
repz
pop
cmp
push
push
sub
mov
and
sub
jp
div
dec
test
lahf
sbb
add
xor
mov
ss
pop
push
adc
pop
adc
leave
xchg
pop
cmp
sbb
shrl
pop
idivb
mov
call
cs
imul
mov
cmp
jge
sbb
and
mov
or
mov
cmc
arpl
sub
lahf
mov
testl
mov
subb
push
dec
xchg
pop
fwait
dec
outsl
andl
add
pusha
in
xor
jl
test
popa
cmpsl
add
jle
insb
outsb
ror
jno
insl
out
add
xor
mov
sub
fldt
popa
loopne
testb
int3
cli
inc
hlt
call
cltd
in
mov
cmpsb
push
arpl
pop
loop
mov
ja
xchg
sub
mov
pop
sahf
lret
ret
loope
push
xchg
mov
sub
in
push
enter
lahf
mov
pop
mov
in
cmpsb
push
inc
inc
pop
mov
mov
pusha
mov
fisubs
inc
adc
mov
add
enter
pop
repz
loop
call
sbb
add
sarb
js
cwtl
loop
test
test
mov
cmp
push
js
adcb
rol
ds
into
push
rcrb
ss
outsl
adc
and
orb
sub
sahf
mov
fwait
nop
out
stos
adc
pop
fmul
scas
add
jno
push
xchg
add
fadds
pop
icebp
mov
mov
insl
out
lods
vmovsldup
movsb
aad
mov
inc
scas
and
fildll
int
adc
inc
scas
stos
lods
sbb
inc
ficomps
cld
out
push
das
inc
mov
insb
dec
adc
std
sub
scas
mov
push
aam
cmc
cltd
sbb
out
inc
lock
pop
repnz
mov
xchg
push
rcl
xchg
ja
fwait
sub
das
jle
nop
ret
sbb
gs
lods
adc
mov
mov
inc
push
jge
dec
imul
jb
mov
and
push
cmpsb
fistpl
std
and
icebp
add
inc
andl
lret
lods
pop
fprem1
les
jge
stos
std
cmp
cltd
mov
push
mov
mov
dec
pop
aam
or
cmp
es
aam
or
cld
sub
push
daa
or
xchg
xor
push
call
xor
xchg
std
dec
dec
mov
xor
fldl
mov
aam
ja
mov
lds
stos
pop
mov
fimull
imul
mov
iret
adc
push
or
xchg
outsb
sti
les
daa
test
jp
push
mov
adc
in
xchg
lcall
push
xor
mov
sub
sub
jne
inc
adc
cmp
jp
jp
cmpsl
shl
inc
add
dec
repnz
push
sbb
pop
adc
lea
rorl
pop
xlat
cmpsb
outsl
das
lods
cmp
dec
add
movsl
outsb
in
or
out
add
jl
ja
add
lahf
jb
pop
pop
outsb
pushf
mov
popf
cld
aas
dec
mov
push
jmp
push
mov
clc
xor
stc
popf
jmp
add
pop
dec
test
icebp
stc
mov
xor
pop
sbb
ljmp
dec
insl
mov
and
mov
insl
inc
arpl
cmp
mov
pop
push
inc
push
mov
xor
mov
and
pop
mov
js
sub
push
loopne
xchg
ficoml
insb
pop
push
pop
adc
shr
ds
mov
jmp
mov
mov
cmp
aam
das
fisubrs
push
sbb
lcall
fwait
jecxz
popa
sub
push
mov
test
out
sub
xchg
xchg
jo
test
or
pushf
lret
dec
gs
cld
push
jns
jb
or
std
cmp
jge
pushf
in
mov
cmp
mov
or
mov
bound
sbb
mov
shrl
das
jae
jp
cli
mov
call
adc
mov
mov
ret
jle
or
xchg
cmp
ja
inc
cld
gs
insl
scas
decb
andb
in
and
jmp
sub
aaa
and
fnstcw
mov
js
out
shll
push
push
cmp
inc
pushf
mov
pop
xlat
ja
sbb
mov
scas
mov
std
push
and
pop
push
push
cltd
xchg
cmp
popa
movsb
iret
xlat
les
cmp
inc
pop
dec
ja
decb
dec
jo
stos
mov
insb
test
cld
push
cmpsb
es
fadds
lret
fldenv
pop
xor
adc
adc
sahf
push
mov
test
stos
xor
sub
push
pop
hlt
test
sub
add
jge
jae
notb
xlat
mov
roll
xlat
dec
xor
fdivl
add
ljmp
in
lea
dec
cmpsl
jns
xor
mov
dec
loope
outsl
movsb
cmpsl
cwtl
mov
out
push
popa
scas
int
je
mov
ds
dec
sub
iret
lcall
cmp
mov
repz
pop
out
push
jp
lods
jge
dec
sbb
add
cld
mov
imul
xchg
jp
shlb
orb
cmpsb
test
xchg
sbb
cmp
sbb
push
jmp
rcrb
inc
mov
jo
sbb
sub
daa
int3
stc
cmp
or
push
ja
pop
test
xchg
jne
mov
pop
movsb
mov
xor
movsb
cmpsb
addr16
cmp
xchg
or
jns
jbe
adc
inc
sub
in
jae
and
mov
push
nop
rorl
out
aas
les
cmpsl
jns
sbb
push
cltd
in
add
out
pusha
sbb
xor
cmp
jno
int
ljmp
test
cmc
shlb
adcb
mov
mov
ret
test
adc
and
int
and
jmp
sar
mov
push
dec
mov
push
fildll
jl
jmp
xchg
in
xchg
xor
js
in
decl
inc
xor
ja
ret
xor
das
jnp
adc
jg
imul
cmp
cld
dec
subb
cli
mov
adcl
aaa
adc
jge
xlat
in
pop
dec
cs
imul
pop
cltd
adc
pop
pushf
mov
leave
call
repnz
dec
jae
xor
cld
rcrl
inc
xchg
and
jp
aas
adc
inc
jb
xchg
outsb
mov
nop
fadds
aas
add
sbb
sbb
cmp
push
test
xchg
iret
arpl
sub
cmp
xchg
ljmp
xchg
cmp
xor
inc
xchg
mov
pop
pop
cmp
xlat
loope
or
pop
and
xlat
data16
adc
add
in
icebp
cmp
sti
fsubs
mov
cmp
ds
inc
or
xor
dec
ret
jno
or
inc
mov
mov
in
xchg
jnp
dec
hlt
push
dec
xor
mov
rcl
push
xchg
call
es
das
adcl
or
ret
mov
ret
loope
push
icebp
fmull
addr16
jbe
inc
cmp
arpl
fnstcw
jb
add
mov
ficomps
bound
sub
jo
test
insl
cld
add
xlat
jno
cmp
scas
lods
adc
or
dec
fnstcw
and
pop
cmp
push
int
andb
mov
push
jmp
xchg
mov
or
inc
in
dec
cmc
jne
fidivs
or
xor
nop
xchg
pop
orb
js
js
mov
adc
mov
movq
cmp
jnp
outsb
std
xchg
cmp
pop
ret
hlt
pop
dec
stc
inc
aas
aaa
add
dec
roll
dec
rolb
xchg
xchg
mov
dec
or
mov
insl
pop
push
popa
jg
fstpt
and
and
int
push
and
xchg
sub
gs
pushf
xor
mov
cmp
cwtl
popf
jge
bound
pop
pop
fs
test
cli
mov
cmp
pushf
xor
movsb
or
dec
cs
sbb
push
and
insl
imul
rorl
call
fmul
jns
jmp
fsubp
psubsb
imul
popf
xlat
adc
and
jmp
and
movsb
and
icebp
aam
aaa
xchg
cli
xchg
push
and
inc
pop
sbb
mov
in
out
jecxz
std
pop
mov
lods
sti
seta
jbe
lahf
sbb
adc
sub
imul
divl
xchg
jg
shl
repz
faddp
fcompp
fildll
jb
ret
fimull
mov
jg
out
mov
fisttpll
roll
lods
and
icebp
mov
inc
in
push
addr16
pop
inc
xchg
out
push
data16
lahf
std
push
enter
mov
test
call
and
adc
push
pushf
add
adcb
cmp
add
outsb
mov
test
jle
sub
cwtl
fstpl
jmp
int3
sub
pop
addb
jns
push
adc
mov
push
sbb
sub
aam
dec
mov
xchg
rcll
and
jp
jmp
cs
push
jp
loopne
test
bound
jno
pop
shr
loop
mov
mov
inc
incb
add
mov
ss
movsb
cwtl
sbb
mov
mov
or
push
add
adc
leave
adc
ljmp
mov
test
repz
and
orb
sbb
push
insl
or
cmp
jmp
sub
aaa
jg
adc
xor
out
cmp
test
jnp
movsl
dec
push
cmp
test
inc
push
in
dec
std
out
sbb
popa
das
pop
loope
fidivrs
subb
mov
testb
scas
pop
push
or
std
shlb
add
sub
adc
outsl
xor
jle
dec
sub
in
repz
mov
jb
pop
cmp
les
outsb
cmp
movsl
cmp
clc
xor
push
fildll
or
in
and
shrl
ret
js
dec
dec
cli
dec
mov
mov
mov
sahf
hlt
mov
and
sub
dec
push
lcall
stos
rolb
enter
cmpsl
ja
sub
ret
sub
mov
mov
jbe
push
lcall
test
test
and
pushf
mov
inc
push
out
adc
les
mov
cmp
in
sbb
negb
and
adc
les
out
mov
nop
fwait
dec
pop
xor
fimuls
faddp
shll
xchg
insb
jl
cltd
hlt
sbb
adc
sbb
xor
mov
cmpsl
xchg
or
sub
push
add
add
dec
inc
in
sti
popa
add
loop
fs
bound
les
sbb
mov
std
sbb
mov
in
ret
inc
or
in
inc
insb
jmp
test
jl
orb
leave
or
cld
ja
inc
nop
cltd
bound
enter
shrl
fwait
jmp
out
add
mov
push
mov
mov
adc
push
sbb
jp
sbb
hlt
in
xchg
cmp
push
mov
loopne
aam
test
adc
sahf
hlt
out
lods
xchg
add
pop
movsb
stos
imul
dec
cmpsb
push
movsb
pop
test
dec
mov
idivl
mov
cmpsb
sbb
adc
xor
shll
sbb
js
stc
sahf
mov
and
adc
aam
cmc
out
outsl
push
push
and
dec
insb
aad
adc
mov
bound
cmp
pop
pop
outsl
ds
xor
adc
push
lcall
add
dec
arpl
popa
aad
cmpsb
in
out
das
scas
xchg
pop
xchg
outsb
adc
mov
mov
daa
lret
out
inc
fwait
loopne
imul
arpl
add
repz
sbb
xor
sbb
loope
push
xchg
mov
jns
mov
fwait
insl
cmp
push
aas
xor
fsubrl
lods
jmp
dec
aaa
jns
mov
sbb
sbb
or
and
fbstp
add
jge
loope
xor
movsb
pop
dec
mov
xlat
sbb
ret
insl
lds
test
fdivrl
dec
imul
xor
notb
mov
xor
sub
adc
test
dec
fwait
mov
insl
adc
cmp
xorb
and
pop
outsl
push
xchg
movsb
push
inc
fs
add
scas
add
inc
sub
fnstenv
ret
jbe
pop
gs
test
sbb
xchg
push
mov
cmpsb
dec
sbb
sbbl
rcrb
xor
neg
inc
and
or
imul
jge
movsl
pop
rclb
cmc
stos
pop
jge
mov
pop
gs
fwait
lcall
jle
push
adc
fstps
xor
popf
mulps
inc
test
jp
out
pop
scas
inc
cmp
mov
or
dec
jmp
fwait
adc
sub
sub
pop
xchg
loope
orl
dec
arpl
cmpsb
pop
inc
icebp
fsubs
in
out
outsl
pop
push
in
loopne
and
xchg
sbb
ror
or
jnp
mov
sub
push
xchg
lahf
frstor
repnz
fidivl
mov
mov
pop
xor
aas
lret
lahf
cmpl
cmp
add
ss
daa
fdivs
inc
sbb
cmp
and
pop
lret
push
or
pop
mov
sbb
lods
push
mov
dec
fdivrs
inc
shrl
xchg
hlt
es
mull
xor
jno
test
pusha
adc
arpl
pop
mov
stc
inc
imul
add
rclb
sbb
gs
lods
iret
fcmovu
in
xlat
popa
popf
adc
stc
pop
xchg
sub
ret
pop
es
inc
inc
shll
inc
sub
mov
sub
sti
loopne
fmul
inc
add
and
sub
push
mov
ret
shll
enter
mov
fsubl
and
lods
xchg
lock
sub
repz
cltd
sbb
pop
add
xchg
push
and
sbb
mov
mov
inc
or
inc
mov
jmp
je
push
mov
cmp
fucomp
jae
jae
mov
xchg
in
inc
stos
pop
inc
mov
in
sub
inc
or
es
les
cltd
hlt
popf
xor
jnp
adc
cmp
adc
lret
pop
out
fmull
aam
add
mov
jnp
arpl
pushf
fistl
mov
pop
adc
and
dec
gs
iret
and
in
pop
insl
mov
data16
sbb
xor
fnstenv
push
inc
mov
mov
lret
mov
sub
aas
pusha
andb
fsubs
or
sbb
xchg
sub
ret
mov
and
inc
shl
add
push
add
sti
mov
dec
xor
pop
xchg
dec
pushf
sbb
xchg
pop
cmp
and
sub
scas
xchg
adc
add
fisttpll
xlat
lcall
je
outsb
into
addr16
adc
cmpb
push
in
inc
mov
xchg
sub
mov
enter
scas
dec
mov
xorb
inc
xchg
inc
cmp
mov
pop
test
or
xchg
scas
mov
sti
sahf
arpl
jnp
mov
aam
in
sahf
imul
ret
fs
or
sbb
decb
stos
ficoms
sub
add
pop
cld
not
rclb
rol
lea
pop
rorl
and
sbb
push
fcom
add
movsb
movsl
add
test
cmp
xchg
das
daa
popf
push
mov
das
shrb
mov
pop
adc
sbb
push
mov
jbe
push
jle
push
xbegin
xchg
jp
not
in
outsb
ret
dec
outsl
mov
stos
push
and
add
cmpsb
xchg
pop
xor
jno
ror
pop
stos
test
pop
addr16
jb
jno
leave
sbb
mov
loope
mov
or
outsl
dec
stc
xchg
js
pop
sub
push
dec
call
loope
imulb
aaa
and
jb
push
in
and
push
aam
shlb
pop
and
mov
sarb
clc
jno
xor
dec
dec
push
push
inc
add
movsb
or
xchg
fucom
repz
or
jge
aaa
imul
insb
pop
cli
outsb
aam
lret
jb
js
ss
pop
mov
adc
fiadds
stos
or
lcall
mov
push
lods
jg
sbb
movsb
sbb
xor
jo
xchg
popfw
inc
lock
in
and
pop
imul
add
jbe
xor
mov
add
jns
sub
loop
add
out
mov
sbb
ret
jne
xchg
nop
das
xchg
add
sti
lock
push
filds
outsl
mov
lret
hlt
imul
mov
repz
repz
and
or
imul
in
sbb
jno
rolb
sub
xor
jg
andb
cmpl
sbb
jb
loopne
mov
xor
mov
out
mov
test
adc
push
sub
stos
xor
mov
cmp
sbb
push
xor
js
mov
loopne
int3
shrb
arpl
lcall
lods
fstl
inc
loope
lret
mov
cmpb
and
push
sub
cmp
or
ss
jno
enter
out
test
fstps
sti
movsl
dec
loopnew,pn
xor
inc
pop
jp
pop
movsl
jno
movsl
mov
out
sbb
aam
loope
clc
cli
fdivp
add
popf
out
rorl
aad
pop
add
xor
lds
add
out
mov
mov
insb
push
xor
add
push
push
roll
pop
stos
sub
jno
xor
inc
push
movsb
inc
xor
popa
mov
cltd
add
cmp
ror
push
sar
call
inc
pushf
or
std
jns
dec
mov
insl
in
or
nop
ss
or
or
mov
and
fwait
rcr
sub
sub
mov
or
push
pop
xlat
or
pop
aaa
adc
or
inc
mov
dec
aaa
shlb
jle
push
mov
push
jge
fidivrs
mov
fldcw
rcr
int3
ret
jecxz
and
mov
loope
mov
mov
stos
mul
and
fistpl
sbb
fnstenv
das
popf
sub
push
dec
xor
psubw
push
imul
push
stos
out
les
dec
test
loop
popa
jle
sti
or
lds
std
in
cmp
push
cmpsb
test
xchg
lret
jns
arpl
xchg
scas
es
in
roll
jne
sub
repz
stos
pop
cmpsl
inc
pop
iret
add
push
out
jb
xchg
fs
cli
in
scas
and
cmp
scas
add
sub
outsb
dec
adc
mov
testl
fwait
out
push
mov
sbb
rclb
dec
xor
addr16
mov
daa
or
cmp
adc
push
ret
jp
pushf
test
aam
cmp
push
add
mov
das
outsb
add
aad
jecxz
cmpsl
adc
adc
repnz
sbb
inc
or
adc
mov
jl
shrl
outsb
adc
sub
lods
pusha
jge
outsl
divb
cld
out
cli
jbe
add
inc
mov
inc
fyl2x
sub
mov
iret
test
stos
mov
and
sbb
push
psadbw
xor
lds
fs
adc
xchg
test
inc
or
mov
cmp
int3
aam
mov
mov
push
dec
or
jmp
cmp
popa
jnp
dec
xor
int3
sub
mov
mov
in
dec
mov
icebp
ss
sahf
sub
adc
push
mov
int3
mov
sti
scas
cmpsl
lock
rcll
adcb
xor
popf
push
jo
rcr
xchg
push
rcrb
pop
and
xor
push
ss
rcrb
inc
push
lahf
mov
std
cmp
loop
loopne
add
stos
call
push
filds
jp
lret
cmpsl
mov
divb
imul
mov
bound
adc
addl
or
pop
shll
jge
sub
pop
lods
push
clc
pop
sbb
cmp
sbb
push
stc
jo
cltd
xor
sub
shlb
dec
lret
and
cmp
xchg
addr16
inc
aad
lds
insb
xchg
cmc
sub
or
xchg
das
xor
xor
dec
in
mov
aas
pop
sbb
sbb
and
inc
in
mov
lcall
fbld
push
lea
inc
jnp
dec
test
js
inc
and
ss
shlb
mov
mov
mov
cwtl
rcrl
xchg
push
sub
lds
nop
daa
cmp
outsl
sbb
orl
inc
hlt
push
lahf
out
out
aad
inc
or
add
and
lret
gs
je
sbb
sub
lea
cmp
cli
bound
push
aam
in
push
sbb
mov
xlat
pop
jo
outsl
jns
cwtl
or
jl
arpl
outsb
xchg
lods
icebp
call
stos
sarl
repz
das
pop
jle
aad
addr16
xchg
jecxz
ds
push
out
pushf
popa
mov
subl
sbb
mov
sti
xor
jo
cmc
push
mov
xlat
mov
hlt
push
aaa
sub
fsubs
lock
std
sub
rorb
mov
fcmovb
push
out
cltd
mov
cmp
cmpsb
jmp
sub
loop
in
imul
mov
stc
movsl
or
pop
mov
int3
xor
lcall
and
mov
lcall
cs
lcall
ret
nop
jo
sub
out
mov
insb
mov
inc
aam
popa
add
js
pop
test
mov
inc
test
std
push
leave
push
or
and
in
loopne
stos
dec
xor
dec
dec
or
mov
add
mov
sbb
out
sub
cltd
push
mov
xor
pop
test
adc
add
ljmp
outsl
orb
stc
add
add
data16
frstor
and
inc
dec
mov
aas
xor
in
cmp
add
push
ja
jmp
jg
sbb
jae
mov
mov
fildl
push
pop
je
cld
add
mov
mov
movsb
mov
xchg
rorb
adc
sub
pop
cld
jmp
mov
cmp
stos
add
mov
test
xorb
push
sub
pushf
popf
add
je
adc
scas
push
int
lcallw
stc
mov
pop
mov
push
loope
mov
inc
pop
add
shlb
pop
shrl
int3
mov
lock
pushf
fdiv
mov
es
je
adc
pop
loopne
lods
shll
xchg
xchg
inc
xchg
mov
lods
or
xor
jmp
mov
inc
sbb
pop
mov
cwtl
dec
xor
fwait
sti
cmpsl
mov
and
inc
mov
push
push
pusha
movsl
leave
mov
push
push
cmp
adc
loopne
xchg
mov
out
repz
mov
mov
mov
jge
cmpsb
out
adcl
das
push
imul
and
ss
push
cli
pop
test
fisubrs
scas
in
cmp
and
lret
das
enter
into
insl
jge
int
jge
loopne
into
add
std
xor
fistpl
mov
lret
int3
lcall
and
test
mov
sbb
sub
mov
push
or
aam
cwtl
test
data16
test
ss
dec
fidivl
leave
lret
jle
loop
dec
jae
jecxz
mov
inc
jg
jo
push
or
std
jmp
add
and
cmp
mov
xchg
mov
or
and
into
jge
or
sahf
pop
inc
mov
pop
call
add
stos
and
sub
mov
inc
cmpsb
loop
jl
sub
imul
cmp
and
xorl
and
cmpsl
sub
xlat
mov
scas
mov
mov
mov
test
stos
fwait
into
mov
push
icebp
fwait
xor
adc
cmp
inc
mov
cwtl
sub
cmp
loope
push
hlt
fistl
mov
insb
xor
test
cmp
enter
xchg
dec
into
scas
xchg
add
sub
and
and
push
cmpsb
push
rep
xchg
mov
push
cmp
pop
cmp
push
in
cmc
cmp
adc
push
adc
pop
lret
pop
jp
and
ss
sbb
fwait
divl
pop
stc
es
jle
pop
mov
cmpsb
mov
and
jp
popf
ja
out
xchg
out
cs
in
dec
imul
enter
mov
movsb
sbb
push
mov
lret
mov
das
daa
enter
cmp
sub
mov
fistpll
sub
push
xchg
adc
inc
add
sbb
outsb
xorl
scas
pop
clc
and
data16
cmp
das
cmp
fsubrl
adc
mov
and
dec
lret
repnz
rclb
xchg
pop
sti
xor
push
movsb
mov
scas
cmovge
clc
jle
mov
push
dec
fcoms
dec
mov
clc
sub
inc
sbb
repnz
imul
push
pop
data16
movb
mov
inc
xchg
pop
and
les
adc
out
leave
rorl
cmpsb
mov
pop
sub
xchg
adc
aad
nop
jae
dec
lods
or
scas
mov
out
gs
push
lahf
ret
xchg
ss
add
outsl
mov
jge
adc
aas
mov
xchg
or
test
lock
mov
inc
insb
int
pusha
jecxz
or
xchg
cmp
shl
dec
or
cmpsl
icebp
pop
sub
divl
arpl
lret
mov
popf
cs
movsb
ljmp
divb
xchg
push
movsl
push
mov
push
jmp
mov
jb
stos
inc
pusha
ljmp
ss
out
sbb
repz
es
insl
pusha
imul
push
inc
adc
test
xor
xchg
mov
cli
in
sahf
icebp
push
movsb
std
into
mov
and
mov
fdivs
mov
push
ror
sahf
rcrl
inc
xchg
or
jp
cmp
cmp
insl
jno
test
xor
popa
fnstcw
pop
sub
cmpl
mov
nop
shll
cmp
cwtl
jp
fldenv
int3
add
stos
sbb
lret
inc
test
dec
fmulp
outsl
push
loop
fnsave
push
fnstcw
fwait
std
inc
xlat
lahf
push
mov
cmc
push
enter
popf
loopne
jne
mov
stos
punpckhdq
rclb
orl
dec
xchg
sbb
subl
mov
xchg
xchg
xor
negl
mov
in
repnz
outsb
into
outsl
je
inc
idiv
lret
jge
cwtl
xor
xchg
out
pusha
imul
ja
mov
movsb
adc
mov
pop
fwait
data16
cmp
cs
mov
jns
jmp
sbb
mov
cmp
shl
lds
dec
repnz
mov
popa
call
imul
inc
push
jge
push
mov
pop
add
lret
js
ss
mov
xor
adc
loop
cmp
js
sub
lret
loopne
push
sub
jnp
iret
mov
sub
jp
aaa
neg
subps
outsb
sub
fldenv
mov
shll
cmp
imul
movsb
adc
lock
loopne
sub
stc
jno
fbld
out
adc
mov
icebp
mov
ret
adc
mov
adc
rolb
xor
fwait
xchg
mov
jp
stos
loopne
xor
imul
test
sbb
mov
sub
cmpsl
cmp
sbb
xchg
popa
sbb
pop
xor
jecxz
mov
std
fs
sbb
xor
fadds
pop
data16
pop
clc
loope
cs
push
je
pop
cmc
and
pop
div
ret
cmp
xchg
mov
leave
xor
loopne
mov
outsl
stos
arpl
cli
xchg
add
xor
sbb
and
std
lea
mov
cli
ret
inc
data16
sbb
and
sbb
jnp
xor
test
and
lds
stc
adc
pusha
ds
int
xchg
mov
mov
sbbb
push
xchg
inc
in
movsl
jmp
and
andl
jns
rep
jnp
outsb
loopne
fsub
push
shrb
mov
xchg
mov
jecxz
out
addb
dec
cwtl
ds
sahf
in
cmpsl
ficoms
lcall
jb
sahf
not
sub
adc
or
shll
sahf
pusha
out
mov
rorb
test
or
sahf
insl
repz
xchg
mov
int3
adc
test
lods
scas
sbb
mov
fadd
out
jnp
pop
aas
cmpsb
sub
pop
cmpl
jge,pn
xchg
fisttps
nop
rolb
mov
cmp
push
fisubl
sbb
fcmovb
test
negl
repnz
cmp
lret
test
mov
out
or
mov
imul
test
adc
and
jmp
ss
lret
mov
addl
sbb
cmp
and
imul
adc
sbb
out
shl
xchg
shlb
push
mov
imul
mov
pop
push
adcb
dec
sub
sbb
dec
xlat
jnp
cltd
push
std
dec
push
scas
jns
das
jb
and
and
sub
pop
scas
add
or
jnp
out
pop
sbb
out
inc
and
push
or
into
inc
or
and
mov
xlat
cmp
bound
jle
cmp
stos
sbb
pop
or
mov
dec
aas
or
cmp
mov
cmp
insb
cltd
lret
fwait
mov
and
in
loopne
cmp
dec
or
les
mov
cli
popa
mov
aas
mov
lods
fwait
pop
gs
scas
fucomi
fcomps
jae
mov
inc
mov
imul
in
scas
and
xchg
dec
xacquire
loopne
sti
adc
rorb
cmp
shr
js
aaa
and
je
xchg
xchg
ljmp
scas
mov
pop
push
adc
inc
xchg
imul
mov
icebp
sbb
cmc
mov
cli
pop
scas
imul
jle
in
cld
jle
inc
ljmp
push
inc
sbb
cmp
test
xchg
cmp
mov
fistpll
es
fcmovb
pop
fiaddl
sub
cmpsl
jmp
xchg
loope
xchg
jnp
cmpsb
inc
xchg
mov
imul
lret
ret
mov
and
adc
jo
lret
push
push
cmp
pop
jecxz
add
shlb
sub
insl
push
xor
addr16
insb
outsb
jg
enter
dec
out
test
je
cmp
push
loop
and
pop
mov
jg
inc
push
lea
mov
xor
cltd
push
jnp
xchg
cmpl
jbe
movsl
dec
mov
lret
mov
insb
pop
jae
cld
or
or
inc
mov
sbb
movsb
fs
push
mov
push
mov
push
lods
sbb
sbb
fucomip
adc
outsb
xchg
adc
cmp
or
mov
add
sbb
fs
cmp
xchg
sub
adc
jl
mov
ficompl
dec
xchg
cmp
rorb
mov
lods
cmp
jmp
sbb
xor
sub
sub
mov
xchg
cmp
inc
into
push
cmp
xor
stc
fistpll
hlt
cmp
ds
dec
or
mov
outsb
push
js
or
mov
jle
test
mov
jb
cmp
ficomps
cwtl
push
or
xchg
mov
fadds
lcall
sub
and
lods
pop
ljmp
pop
mov
inc
inc
mov
aaa
push
mov
mov
addb
xchg
sahf
shll
xchg
fwait
int
mov
mov
mov
cmc
sbb
in
mov
out
mov
addl
loopne
cli
jge
mov
daa
cs
cmp
xor
test
pushl
xchg
icebp
lds
mov
cli
or
mov
mov
or
and
mov
dec
orl
xor
mov
enter
inc
mov
fidivrl
jnp
inc
xchg
mov
andb
rol
cmp
fldcw
xchg
cmp
xchg
paddsw
cld
mov
push
add
addb
inc
jge
mov
test
cmp
sub
push
lret
add
sbb
cmp
ret
sbb
cs
xchg
xchg
addr16
inc
repnz
xor
lret
mov
push
inc
stc
pop
mov
push
jge
pop
aam
sub
std
enter
jecxz
jb
dec
dec
sub
divl
popf
scas
push
xchg
call
rcrb
cmc
sbb
jp
out
push
cli
fdivs
mov
cmovg
out
and
in
sbb
cmp
aam
sbb
and
pusha
jge
pop
fwait
xchg
insl
pusha
inc
pop
sti
roll
fs
stos
pop
pusha
int3
pop
add
add
mov
in
pushf
in
push
sbb
int3
pop
mov
and
out
rcrl
mov
adc
xchg
adc
add
lods
adc
jb
pusha
faddp
lcall
jp
sub
mov
scas
les
popf
loope
mov
pop
cmp
aam
iret
fimull
jae
lods
lods
jo
mov
adcb
jmp
sbb
adc
xor
ficoml
mov
mov
ja
dec
out
arpl
mov
mov
adc
xchg
xchg
push
inc
fstl
pusha
aam
mov
inc
push
mov
add
sbb
loop
or
addr16
add
into
cmp
pop
leave
add
adc
xchg
daa
xor
ss
push
lea
cmpsb
jae
mov
inc
xlat
sub
fwait
enter
loope
fcompl
insl
mov
or
xor
fs
mov
sbb
call
or
jmp
or
jne
mov
jne
aaa
fiaddl
imul
stos
inc
xchg
push
popf
push
jg
orb
cmpsb
xor
shll
and
mov
push
add
inc
jg
js
pop
or
lcall
js
cs
mov
out
lods
outsl
adc
out
aam
rcll
mov
xlat
jnp
add
mov
xor
ljmp
arpl
subl
mov
pusha
mov
jge
arpl
ja
in
filds
xchg
call
mov
cmp
pop
cwtl
ret
mov
out
push
and
push
add
push
inc
aaa
xchg
dec
mov
xlat
lret
sub
in
or
xlat
das
rclb
mov
jmp
pushf
pop
in
or
pop
pop
cmp
adc
enter
mov
loopne
xchg
sbb
push
shll
cmpsb
jg
jae
ss
sbb
aam
xor
ret
ret
sbb
mov
call
lret
sbb
mov
push
cmpsb
js
xchg
les
dec
mov
adc
mov
dec
push
test
dec
mov
inc
dec
pop
shrb
fs
dec
adc
out
cmpsb
lea
stc
sbb
push
jae
adc
inc
xchg
lods
fld
xchg
cmpsl
rcrb
adc
dec
daa
in
sti
repz
sub
adc
pop
push
jbe
cmovae
jb
in
sahf
mov
repnz
and
inc
or
jb
or
stos
adc
mov
stos
ss
jle
dec
test
sbb
mov
or
mov
lock
mov
xchg
or
sahf
jmp
cld
inc
sub
xchg
aaa
test
and
sbb
mov
daa
xchg
mov
add
scas
sub
fistps
cmp
sbb
int
inc
repnz
mov
pop
arpl
testb
roll
or
add
js
mov
lcall
xor
inc
dec
or
aam
je
adc
sbb
cmp
outsl
xchg
pop
inc
js
or
dec
rol
test
fimull
and
pushf
push
stos
stos
out
movl
movsl
cwtl
js
pop
jno
lret
jo
pop
lret
inc
std
jns
arpl
outsl
and
jge
cmp
in
into
adc
es
ss
push
pop
sbb
movsl
push
std
sahf
cltd
and
test
xor
ret
aas
iret
in
or
jl
fdiv
and
shrl
loop
imul
lods
stos
and
mov
push
pop
jmp
jo
add
jno
adc
cmp
fisubrs
aad
lret
push
nop
outsl
mov
stc
in
ss
fisubrs
fwait
xchg
mov
not
daa
jg
jl
test
mov
rcll
cmp
fbld
out
js
jb
pop
or
in
ss
aad
mov
movsl
adc
std
nop
notb
sbb
aaa
ljmp
jbe
dec
sub
nop
adc
cld
sub
push
push
jbe
adc
xchg
shlb
xchg
outsl
push
loop
int
xchg
mov
cli
fidivrs
ds
xchg
sbb
das
mov
add
loop
adc
mov
jbe
cmpl
fisubrs
xchg
addr16
mov
ficoml
outsb
lahf
cmp
jg
xor
inc
clc
cld
out
cmpsl
aad
enter
jle
pop
cmp
imul
push
cmp
frstor
insb
inc
xor
dec
sahf
pop
pop
lahf
out
out
adc
fdivs
push
cwtl
aas
int3
xchg
mov
ja
jle
or
das
js
sbbb
jne
gs
pop
bound
mov
imul
in
scas
mov
sub
outsl
inc
fwait
push
stc
les
popa
test
push
push
xchg
jns
je
or
aaa
or
mov
pcmpgtb
mov
ljmp
or
roll
jmp
subb
hlt
in
cwtl
cmp
das
xchg
xor
dec
lds
hlt
sub
sbb
push
or
call
pusha
clc
shl
bound
fidivs
dec
test
push
mov
frstor
dec
add
dec
and
mov
adc
aam
jae
daa
movlps
lahf
loope
sbb
nop
cltd
fs
movsl
imul
pop
stos
in
in
pop
jl
jge
cmpsb
sbb
mov
rcl
icebp
pop
and
loopne
sub
pusha
js
lea
hlt
loope
adc
xchg
push
icebp
xor
mov
mov
and
mov
pop
daa
daa
jb
sbb
movsl
out
sbb
ss
enter
mov
scas
push
jg
std
cmp
sbb
icebp
ret
lds
out
jno
mov
and
and
icebp
pop
das
incl
mov
outsb
cmc
dec
inc
es
pop
inc
sbb
ljmp
ret
mov
out
aam
mov
rorl
adc
es
sbb
and
lret
push
scas
jecxz
mov
xlat
jno
mov
sbb
push
pop
xor
and
add
inc
loopne
movsb
adc
in
or
mov
pop
jg
xchg
jno
add
pushf
push
sub
push
addl
dec
xchg
dec
push
sub
fsubrl
dec
jg
mov
and
mov
adc
pop
int
sbb
movsb
mov
cmc
sbb
repz
push
or
jb
jecxz
pop
ret
shll
jns
aam
movsl
xor
std
push
inc
mov
fwait
pop
cmp
mov
ja
cwtl
sbb
push
mov
roll
inc
rcrl
xchg
cmp
jb
adc
roll
in
loopne
test
ss
clc
dec
push
fs
fwait
std
ss
push
xchg
lods
shr
divl
sti
lds
mov
fisubrs
cmp
and
pop
mov
mov
lea
xchg
cmpsb
push
js
in
dec
movsl
dec
out
adc
mov
mov
sbb
inc
pop
cs
lret
and
sub
push
dec
test
dec
jmp
pushf
sbb
popa
fldl
lret
loope
xor
sub
add
jae
jae
add
push
mov
or
mov
into
out
mov
lahf
adc
div
movntq
out
mov
cmpsb
or
ss
xchg
test
lret
or
xor
lahf
lds
mov
dec
gs
push
pushf
dec
leave
shrb
scas
mov
out
addb
std
mov
in
pop
dec
mov
cmp
cmp
stos
cmc
imul
movsb
iret
xchg
adc
xor
cmp
mov
xor
push
roll
inc
add
and
pusha
xor
adc
jl
mov
sbb
sbb
outsb
add
inc
ror
ss
jne
jae
sub
arpl
sub
xor
pop
xchg
cwtl
add
mov
inc
pop
mov
lret
cmpsl
cmpsb
push
pop
push
sub
inc
mov
loop
mov
das
ja
cmpsl
mov
pop
inc
add
repz
sub
pop
loopne
test
xor
adc
stc
in
test
repz
pusha
aas
or
push
dec
mov
fs
xor
sbb
jae
jne
subb
aaa
add
shl
mov
das
mov
dec
ficoml
push
sbb
enter
cmp
pop
adc
and
pop
sbb
xchg
jno
add
pop
pop
sub
icebp
arpl
cmp
inc
xlat
jecxz
lcall
daa
cmp
xchg
and
dec
push
in
lret
xchg
mov
lahf
add
test
mov
jecxz
xchg
push
sti
out
jge
inc
sbb
aam
aaa
shlb
push
push
or
insl
in
popa
inc
jbe
sub
pop
dec
es
out
mov
pop
mov
fs
push
imul
fists
xchg
leave
mov
hlt
pop
push
sti
push
ret
push
or
push
rcr
call
jle
ss
cli
pop
xor
test
fidivrl
dec
sub
dec
outsl
mov
cld
sbb
fmull
dec
push
adc
adc
popf
in
xor
pop
mov
xor
outsl
and
push
add
das
dec
xor
mov
rorb
imul
dec
rcrb
gs
jecxz
xor
fcompl
mov
scas
push
cli
je
hlt
cwtl
int3
and
xchg
pop
js
cmp
or
shlb
mov
and
xchg
inc
repz
or
shrb
push
cmp
xchg
mov
faddl
sub
movsb
ficomps
test
mov
cmp
mov
inc
add
xchg
outsb
test
fisttpll
inc
cmpsl
xchg
shl
push
push
lahf
ljmp
subb
add
cwtl
pop
mov
js
aas
aas
push
fld
xor
mov
or
push
cmp
sbb
xchg
push
inc
or
loop
cwtl
dec
popf
push
push
push
sub
add
hlt
rcrl
fs
cld
out
cs
push
dec
fwait
mov
iret
insl
outsl
out
jle
movsl
xchg
mov
stos
xor
mov
push
mov
fsub
inc
or
or
out
mov
gs
ja
sbb
int3
fidivs
adc
sbb
mov
es
add
dec
test
sub
mov
pop
aad
rcll
sti
dec
or
sub
je
in
jecxz
pop
xchg
inc
mov
arpl
adc
cmp
aam
inc
scas
lret
add
and
xchg
or
cmp
xchg
fldcw
mov
xor
int3
out
push
movsb
testb
xor
test
cmp
mov
popa
jge
push
gs
lods
lds
mov
out
sbb
or
jbe
sub
popf
cs
lcall
outsb
jnp
push
movsl
dec
enter
cmp
loop
dec
pop
and
ds
sbb
add
mov
addr16
movsl
inc
fdivl
jg
rcr
mov
cmp
xlat
pop
adc
sahf
or
mov
movsb
jecxz
inc
xchg
xlat
sub
bound
rorl
cmc
pop
and
movsl
cmp
pop
loop
push
call
addr16
mov
shrb
aaa
mov
jle
xlat
dec
xor
push
popa
sti
shlb
adc
dec
mov
and
test
sbb
lret
dec
jmp
mov
cwtl
enter
lods
imul
cld
lret
faddl
into
xchg
outsl
pop
xor
sbb
pusha
ljmp
push
loope
add
scas
mov
addr16
cmp
inc
xor
xchg
cmc
js
and
outsl
push
sbbl
inc
jp,pt
cmpsb
lret
xchg
mov
sarl
adc
outsl
sub
mov
mov
into
fwait
or
jnp
rcll
cli
xor
dec
mov
cs
cli
pop
data16
movsb
mov
popa
loop
mov
test
jge
sub
aas
cmc
aam
mov
cmc
cmp
cmpsl
sub
ljmp
fldenv
adc
aaa
and
std
aad
jns
sarl
out
insb
cld
push
pushf
aad
dec
mov
sbb
ja
fadds
clc
pop
mov
push
mov
arpl
mov
pop
sbbl
fwait
jno
mov
xor
or
leave
and
mov
and
mov
dec
movsb
mov
ficomps
xor
lret
or
mov
xor
sub
insb
stos
bound
mov
push
ror
insl
or
add
xchg
and
or
mov
popf
ds
push
shlb
in
dec
out
jp
add
adc
aaa
pop
mov
ret
rcrb
xchg
pusha
mov
and
inc
mov
add
inc
aas
push
stc
cltd
addr16
cmp
out
dec
pop
jp
addl
pusha
and
hlt
repnz
mov
or
addr16
loope
xchg
xchg
lods
leave
jp
leave
xchg
cmc
sub
mov
xchg
jge
dec
test
insb
leave
mov
adcb
test
or
lahf
inc
inc
dec
les
pop
lahf
mov
es
jns
data16
sbb
inc
add
mov
and
das
shlb
jecxz
cmpsl
mov
lods
or
add
dec
xchg
mov
jecxz
and
icebp
jae
xchg
gs
or
add
loope
dec
ljmp
push
xchg
adc
sar
sbb
daa
movsb
ret
aaa
dec
fidivrl
jno
adc
push
sbb
out
int
cmp
in
or
repnz
idivb
inc
outsl
insl
xchg
iret
sub
add
inc
ficoml
xchg
inc
xchg
iret
push
int3
mov
arpl
scas
ffreep
pusha
sti
pop
push
mov
repz
jns
imul
divl
mov
addr16
les
stos
nop
in
icebp
fnstsw
push
in
cmpsl
in
add
and
add
cld
or
push
dec
jmp
mov
lahf
jo
cli
out
repnz
mov
cs
lds
test
mov
pop
push
sbbb
data16
push
mov
ljmp
jl
cmp
test
pop
out
fldenv
pop
push
add
rorl
ret
movsb
pop
add
lret
lcall
fidivs
or
into
sub
dec
pop
andl
inc
inc
add
mov
pop
dec
lcall
push
addr16
lods
cmp
in
pusha
ret
sub
dec
leave
outsb
loopne
out
add
insb
pushf
sti
fildl
jbe
cmpsb
out
xor
jl
push
inc
xchg
jae
add
sub
subb
test
bound
push
daa
inc
mov
bound
fs
imul
fstpl
fdivrp
addr16
push
sbb
mov
aaa
shll
shlb
mov
mov
scas
sub
dec
jle
push
js
cmp
bound
pop
insl
mov
sub
jle
push
imul
in
rcrb
scas
je
dec
push
lods
or
addr16
xchg
sub
lret
imul
fldl
stc
cmpsl
jge
xor
sbb
mov
push
cwtl
les
ss
nop
mov
into
mov
ret
sarl
adc
jns
ret
xchg
js
inc
ja
movsl
push
shll
inc
mov
or
sub
shl
mov
mov
insl
je
and
xchg
jbe
pusha
sbb
sbb
push
sbb
mov
fimuls
adc
add
push
push
push
mov
and
pop
dec
mov
mov
jecxz
or
and
push
scas
ficompl
sbb
hlt
cs
push
inc
adc
in
xchg
or
loop
out
cmp
jl
or
pop
outsb
push
mov
out
mov
orb
scas
cmpsb
xor
xchg
cmp
adc
sub
lret
gs
movsl
push
sti
mov
movsl
adc
jmp
mov
xorl
or
mov
push
aam
loope
push
sbbb
and
mov
cld
mov
inc
push
es
xchg
cli
inc
jle
and
fidivl
inc
out
adc
ret
ja
and
xor
push
jo
jno
loope
es
daa
test
jmp
pop
scas
sub
mov
adc
xor
xorb
in
inc
or
out
sti
push
jo
jmp
clc
inc
push
test
lcall
xchg
mov
fimull
pop
cltd
popa
push
dec
sbb
dec
loop
add
push
mov
ja
shrb
and
or
dec
fiadds
mov
fdivs
mov
xlat
push
ficoms
jo
lea
mov
lods
jp
test
fnstsw
notl
and
loopne
adc
sbb
popf
rcrl
in
sbb
push
xor
rclb
and
mov
fwait
mov
mov
push
lods
mov
inc
xchg
enter
lods
adc
and
xor
lds
jg
stc
jb
sti
loopne
loope
fsubr
xchg
imull
cmpsl
pop
aam
mov
jb
push
sbb
ret
lret
es
mov
push
ds
cmp
xchg
and
or
jb
ret
stos
sub
xor
mov
add
in
movsl
mov
mov
sub
lds
sub
mov
in
pop
pop
in
arpl
mov
lods
ret
fbstp
xchg
inc
lock
and
jg
gs
into
into
fnstenv
push
in
adc
mov
leave
aaa
adc
in
das
int3
imul
mov
pop
sbb
inc
mov
adcb
push
push
dec
jp
les
dec
sbb
lock
xchg
mov
lea
add
xchg
daa
in
and
xchg
mov
xor
sub
dec
testl
out
push
test
aam
fcomps
je
and
movsb
mov
jmp
adc
push
daa
mov
sub
sub
ret
into
fs
loope
fs
and
jl
leave
stos
ret
stos
std
movsl
mov
mov
cmp
pop
push
mov
lcall
mov
sub
icebp
jns
neg
leave
fildl
jp
dec
addr16
sub
xchg
and
aas
inc
mov
push
xchg
cmp
into
outsb
fistpl
xchg
dec
xor
lret
insb
gs
dec
lret
dec
mov
cmp
jne
pop
mov
popa
pop
ljmp
mov
loope
call
scas
loope
cmpsl
movsl
sbb
rcrl
push
xchg
cmp
sbb
data16
push
mov
stc
pop
cld
loope
fs
xor
test
jbe
imul
ljmp
sahf
push
cmc
pop
cmp
pushl
adc
or
fcoml
push
les
inc
or
pop
dec
xor
jg,pt
jno
lcall
enter
sarl
imul
fnstcw
cmc
mov
out
bnd
and
fidivs
fsts
dec
je
test
push
add
adc
scas
es
es
cmp
xchg
orps
insb
out
jge
or
in
scas
xchg
jae
cmp
xlat
jnp
mov
aaa
ficomps
push
js
sub
mov
rcll
rcll
jge
cmpsb
lcall
mov
cld
pop
mov
aas
ret
xor
int3
pop
sub
mov
movsl
scas
sub
mov
xchg
imul
dec
hlt
dec
dec
test
mov
loopne
pushf
mov
lret
pop
shlb
ss
pop
xchg
arpl
xchg
adc
sbb
imul
mov
in
adc
mov
push
fidivl
pop
nop
pop
pop
dec
push
xchg
fistl
in
push
adc
sbb
adc
mov
jp
ret
cmp
fbld
negb
das
pop
push
jecxz
hlt
add
cmpsb
pop
jmp
bound
testb
lea
data16
push
ljmp
stos
stos
jb
pop
das
and
xor
jmp
cmc
in
cmp
adc
aaa
xchg
add
sbb
in
xchg
loop
xor
xor
lcall
in
mov
xor
add
fadds
int
in
scas
push
cs
push
xchg
lds
xchg
xchg
lods
mov
into
dec
dec
push
push
mov
inc
cli
stc
scas
imul
int3
shlb
lds
jecxz
sti
fs
or
mov
sbb
es
in
add
filds
test
jne
xchg
lcall
inc
in
push
mov
scas
pop
cltd
scas
dec
test
inc
mov
ss
test
xor
dec
rcr
ss
and
jo
pop
push
les
or
fimull
mov
xchg
adcl
mov
mov
and
cld
and
stos
cmp
movsb
outsb
cmc
lret
data16
mov
mov
out
mov
push
push
inc
insl
push
and
je
mov
xchg
xchg
test
xchg
dec
adc
stos
insl
mov
addl
mov
mul
cwtl
dec
lahf
test
push
lret
cmp
cmp
test
sbbb
push
out
sbb
imul
inc
pusha
cmovne
or
cmc
xchg
dec
aas
pusha
jno
jae
xchg
sub
mov
sbb
hlt
jae
push
out
mov
jl
mov
push
jbe
adc
mov
adc
imul
nop
xchg
inc
inc
sbb
jbe
xchg
dec
sub
pop
out
add
inc
xor
add
daa
les
decl
pop
not
repz
cwtl
inc
pop
pop
push
pusha
loopne
xor
xor
mov
mov
mov
mov
pop
test
loope
imul
call
inc
aad
imul
inc
inc
js
and
fsubrs
cmp
jns
pop
mov
cld
jp
pop
ljmp
jae
sbb
mov
nop
scas
push
mov
mov
out
cmpl
idivb
loopne,pn
orl
cmpsb
repnz
inc
addr16
and
mov
filds
sahf
pop
rcr
xchg
jle
in
push
mov
mov
jle
cmp
scas
mov
mov
or
lods
popa
pusha
aad
mov
dec
inc
mov
loope
jo
push
pushf
push
add
out
adc
sub
xor
rcll
cmpsb
out
jno
out
adc
sub
repnz
xor
lcall
inc
and
and
inc
repnz
jne
imul
in
ret
ret
xor
mov
repnz
sub
xchg
fdivl
inc
mov
pop
ret
dec
sbb
aam
mov
jle
clc
mov
xchg
cltd
mov
sub
xor
xchg
mov
lods
add
lret
mov
sbbb
into
pop
repnz
and
mov
sub
dec
xchg
jb
inc
inc
pop
popa
daa
cwtl
cmp
ja
push
negb
sahf
cmc
jns
dec
sbb
xor
aas
push
das
and
loop
lcall
push
int3
mov
cmp
mov
xchg
leave
out
jnp
push
iret
inc
aaa
mov
scas
out
inc
push
mov
jb
mov
lea
mov
and
jmp
xchg
data16
mov
pop
pop
nop
pushf
or
in
clc
jle
or
aas
push
ret
into
aas
insl
or
mov
mov
mov
and
push
mull
aaa
rolb
test
dec
xchg
xor
mov
aam
push
jae
mov
mov
loop
leave
xchg
ds
pop
hlt
jmp
mov
inc
arpl
int
xchg
fdivrl
adc
insb
pop
cmp
aaa
jp
sbb
or
add
push
or
sub
je
dec
mov
mov
mov
jno
ud0
pop
dec
loope
sbb
leave
inc
test
pushf
inc
sbb
push
fildl
in
ja
jmp
cmp
int3
xchg
jno
jecxz
into
repz
xchg
ja
icebp
loope
arpl
xchg
dec
cmp
movsb
es
and
inc
test
push
jmp
sub
push
outsb
ss
xor
mov
sub
lcall
dec
dec
pop
mov
xchg
fistl
or
mov
cwtl
andl
sbb
sub
addr16
xor
ss
jo
sbb
outsb
xchg
cmpl
push
xor
outsl
jbe
ds
subl
fisttpll
push
jmp
inc
scas
push
loope
bound
xchg
mov
fildl
push
adc
sbb
jp
xchg
mov
dec
pusha
adc
push
sahf
xchg
imul
lds
and
notb
jns
inc
mov
add
bound
stos
jg
adc
mov
repz
ljmp
into
xchg
cmpsl
mov
addr16
stos
inc
cmpsl
pop
sbb
push
repnz
xchg
popa
pop
xchg
fs
jns
insb
sub
xchg
enter
cmpsb
repz
xchg
jae
enter
adcl
scas
mov
clc
mov
test
nop
adc
sub
dec
dec
xor
stos
data16
cmpsl
xchg
push
xlat
popf
jb
cli
cltd
xor
out
icebp
cmpsl
insl
mov
push
ja
jg
out
xlat
shlb
mov
adc
outsl
inc
int
or
mov
inc
mov
jecxz
and
mov
lock
push
mov
xlat
pop
inc
clc
int
mov
pushl
aas
push
push
mov
jns
mov
cmp
jns
dec
cmp
add
or
lods
bound
cmpb
into
enter
pop
xchg
push
dec
cmp
xchg
ret
xchg
sub
imul
aaa
stc
sahf
cmp
shrb
mov
cmpsb
add
sub
add
cmp
bound
cmp
out
mov
add
sub
sahf
imul
lds
lods
push
movsb
or
lea
mov
lcall
xor
or
fnstcw
nop
int3
incb
push
or
sub
mov
pop
mov
dec
js
loopne
call
pop
mov
les
aas
arpl
incl
int
cmpl
add
loop
push
push
sub
fdivs
call
xor
data16
fmulp
adc
or
push
jb
mov
mov
xchg
cmc
out
jnp
lret
sti
mov
lods
ret
dec
imul
jne
mov
insl
scas
mov
xchg
mov
or
push
and
push
dec
jge
jns
jno
lahf
sbb
mov
inc
filds
mov
push
pop
sbb
pop
stc
pop
lds
aad
bound
lcall
nop
adc
sub
mov
pop
sub
icebp
jp
push
stos
das
push
mull
bnd
pop
and
fcomps
pop
mov
mov
addr16
push
sbb
dec
cltd
mov
movb
bound
inc
jb
xchg
test
lret
sbb
aam
pop
dec
add
jnp
cmp
mov
add
mov
subb
add
movsl
xlat
xor
ficomps
shl
ljmp
jo
call
cld
mov
xor
cmp
lret
in
ss
outsl
scas
mov
dec
jo
mov
test
ret
or
imull
loope
repnz
cmp
xor
jae
cmp
mov
cli
add
enter
pop
cwtl
push
dec
in
cmpsl
xchg
lea
pop
shrl
lock
lss
pushf
not
mov
pop
sbb
cmp
clc
sbb
inc
and
jne
ss
push
inc
adc
inc
jne
paddusw
mov
iret
int3
test
and
aad
xchg
dec
lahf
ljmp
cs
xchg
xchg
pop
es
add
insb
and
inc
inc
and
and
faddl
loopne
or
out
sbb
sub
inc
daa
mov
xchg
pop
cmpsb
dec
decb
mov
sub
outsb
adc
aas
aas
popf
inc
mov
mov
loopne
int
daa
pop
lods
sub
in
das
arpl
test
fists
mov
or
jb
xchg
adc
jmp
add
stos
adcl
cmpsb
rcr
shl
xchg
sti
imul
adc
movsb
sbb
mov
mov
ret
jb
mov
into
push
push
xchg
daa
sbb
jmp
inc
xor
test
jg
cmp
add
cbtw
fdivrl
mov
sbb
sub
mov
scas
outsl
scas
insb
sbb
adc
dec
push
push
add
bound
divl
push
loop
dec
ja
cmp
xchg
dec
test
and
jmp
sub
or
dec
lds
stos
mov
fsubl
fwait
sub
mov
push
xchg
mov
pop
aad
icebp
loope
pop
inc
iret
sbb
push
pop
aad
shlb
inc
or
mov
sbb
das
rolb
and
push
pop
test
cvtpi2ps
dec
pushf
cmp
nop
rolb
adc
lds
mov
mov
xchg
sbb
and
xchg
pusha
mov
and
sbb
cmp
jbe
pop
mov
xchg
das
push
call
out
cmpsl
xchg
mov
pushf
pop
shlb
mov
sub
rol
ds
lcall
imul
mov
stos
dec
mov
cmpl
mov
movsl
movsb
imul
sbb
pop
andl
jae
mov
inc
sub
lret
test
insb
test
xor
mov
cwtl
sbb
jecxz
repnz
sbb
inc
inc
dec
dec
xchg
jp
sub
sub
sub
mov
or
rcrl
test
jmp
btc
jp
jo
cwtl
cmp
stos
pop
push
popf
or
loop
and
pop
pop
pop
adc
push
hlt
jne
cmp
loope
dec
ljmp
iret
mov
push
dec
dec
mov
data16
and
sub
cmp
jl
in
cs
inc
pop
cwtl
xor
ret
cmp
mov
inc
repnz
sub
push
int
das
xorl
jle
ljmp
out
es
loope
imul
jae
sbb
or
addr16
cmp
aam
lock
lcall
sbb
fmulp
sar
fsubl
mov
pop
in
push
lret
push
push
scas
mov
jmp
sahf
test
mov
xchg
dec
adc
adc
ret
push
lret
adc
pop
std
daa
push
xor
imul
ret
cmp
pop
jnp
sbb
fwait
mov
and
pop
inc
or
jb
and
adc
out
sub
fistps
dec
jne
lock
mov
fwait
mov
dec
pop
or
mov
imul
cmp
ljmp
mov
jnp
xchg
push
dec
scas
scas
dec
jg
jl
adc
sti
mov
mov
xor
and
mov
sub
xchg
insw
or
rcll
add
rcl
adc
ja
movl
mov
test
insl
scas
add
lea
in
pop
dec
cmp
lret
es
inc
lds
inc
adc
mov
int3
mov
loop
cmpl
xchg
lods
jmp
pop
mov
int3
mov
js
enter
popl
pop
repnz
loope
insb
inc
jmp
jb
mov
scas
pop
scas
xor
stc
sub
mov
je
mov
orl
xchg
cmp
jo
sub
push
and
xchg
scas
push
sbb
add
xlat
mov
pop
pop
es
jnp
inc
in
xor
iretw
aam
jnp
mov
les
lods
and
cmpsb
pop
leave
adc
pop
dec
pop
xchg
mov
dec
sbb
mov
and
lods
popa
cmc
mov
aas
call
int3
aam
repnz
data16
jb
inc
ds
sub
lahf
outsl
mov
js
mov
push
jb
mov
push
mov
je
sti
or
dec
xchg
inc
mov
push
xchg
pop
add
mov
scas
pop
jle
sarb
lcall
xor
in
popa
ds
das
xchg
call
cmp
movsl
mov
cmp
inc
movsl
mov
and
outsl
push
add
aad
or
loopne
mov
sub
sahf
test
inc
jno
add
loop
adc
jge
lock
mov
loop
inc
pop
ljmp
fadds
in
repz
jp
mov
push
fsubs
dec
shll
arpl
ret
test
xchg
xchg
stos
enter
push
xchg
xor
in
out
dec
out
lods
adc
dec
mov
repz
in
addb
push
pop
nop
cmp
arpl
negb
insl
ja
cmp
add
dec
sub
inc
iret
loop
out
xchg
fnsave
add
or
and
xor
and
adc
cltd
call
dec
pop
mov
cmp
cmp
test
out
cwtl
dec
out
shll
push
mov
dec
aaa
mov
push
mov
and
push
out
scas
pop
cmp
mov
cs
in
pop
or
pop
pop
pop
call
push
out
sub
in
sub
push
push
cli
xchg
arpl
lods
outsb
lfs
mov
cmpsl
dec
inc
std
fcompl
ret
orb
mov
data16
push
push
out
inc
outsl
push
movsl
cmpsl
mov
jnp
arpl
cli
jmp
sti
fwait
into
dec
pop
jne
lcall
nop
jb
cmp
loopne
ljmp
lock
pusha
int3
jmp
and
mov
cld
sbb
xor
cmp
stos
and
or
loope
loopne
nop
sub
imul
inc
jmp
leave
lahf
arpl
add
jnp
push
aad
bound
movsb
lcall
dec
xchg
repz
daa
push
sub
ret
in
xor
scas
aad
xor
cmpsl
xchg
mov
pop
mov
mov
outsl
sbb
jbe
add
sub
sarb
dec
fnstenv
in
jmp
or
fld
mov
xchg
jbe
das
ret
and
jo
lods
dec
fldl
sbb
mov
aaa
jns
inc
mov
divb
fs
add
adc
xchg
popf
pop
mov
rclb
pop
mov
iret
push
loope
lahf
stc
test
pop
movl
mov
cmc
sub
lcall
ficoml
dec
cld
mov
push
shll
fwait
fwait
iret
dec
mov
jl
into
jae
icebp
dec
icebp
lret
pop
dec
fs
stc
sbb
lock
jle
into
lods
and
stos
cmp
nop
test
test
sub
xlat
push
and
xchg
mov
and
cld
push
inc
jns
jo
mov
mov
aam
fdivs
xor
sar
add
and
mov
and
inc
push
inc
cmp
xchg
mov
roll
negb
jnp
movsb
es
test
pop
jne
movsl
adc
bndldx
out
mov
or
fmul
imul
je
sahf
cmp
fidivrs
lds
cmp
and
mov
addl
jp
popa
mov
mov
inc
enter
mov
or
inc
and
xchg
out
mov
out
mov
mov
pop
mov
cmc
arpl
xchg
into
out
shrb
push
in
mov
mov
push
outsb
aas
push
leave
pop
sbb
aas
sbbb
pop
pop
sub
loope
mov
iret
lahf
mov
sarl
xchg
aam
sbb
push
js
frstor
jbe
xor
nop
mov
divb
in
jle
xchg
jno
pop
mov
lret
and
loope
ss
cmpsl
cmp
sub
xchg
mov
add
adc
cs
dec
lahf
es
push
in
cmp
mov
jp
js
jmp
mov
jg
cmp
fdivs
dec
scas
cmp
sub
shl
push
test
out
inc
jnp
mov
hlt
push
pop
bound
ret
xlat
dec
lcall
pop
xor
sahf
mov
add
lods
mov
inc
jge
lods
test
inc
pop
movsl
sub
aas
xchg
adc
loopne
cmp
push
mov
stc
lea
dec
xor
sub
rolb
test
call
lods
xchg
jb
sub
stos
jo
loopne
sti
sar
sub
push
push
cmp
clc
or
or
popf
fs
xchg
sub
outsl
pop
stc
adc
push
sbb
mov
and
jmp
adc
shr
sbb
xchg
notrack
cmp
mov
xchg
std
sbb
imul
dec
dec
adc
js
pop
xor
in
push
jmp
pop
cmp
cmp
dec
dec
push
sub
xchg
int
mov
cmp
lods
and
mov
iret
pushf
pop
cmp
xor
adc
mov
aas
lods
mov
lods
or
cld
sbb
lret
call
fwait
xor
aad
fsubrs
adc
add
mov
popa
popf
mov
mov
lret
dec
and
jl
clc
mov
sub
lret
lods
sahf
xor
arpl
pop
push
mov
test
cmpsl
cmp
mov
aad
cmc
sub
out
aaa
jg
aam
insl
aas
ja
bound
sbb
lea
xor
jbe
xchg
adc
xor
test
popa
in
fisttps
push
or
fidivrs
add
std
out
lods
cmp
ljmp
shlb
je
xchg
jb
xlat
das
mov
aam
mov
dec
xchg
sarb
adc
scas
sub
pushf
mov
and
sbb
dec
pop
in
or
pop
xchg
mov
call
nopl
iret
loop
or
push
jl
nop
data16
jge
insb
pusha
sub
shr
das
push
pop
out
cmp
lods
dec
cmp
inc
sbb
cmp
je
sti
xor
or
testb
jecxz
sahf
rclb
xor
test
mov
aam
jnp
sahf
inc
jo
jmp
mov
mov
fstps
push
or
dec
aad
mov
arpl
out
pop
lds
lods
jnp
add
sub
es
pop
mov
jbe
outsb
std
test
push
jmp
pop
test
mov
sti
xchg
stc
pop
sahf
cmpsb
xor
pavgb
sub
cmp
sbb
fiaddl
aas
sti
add
adc
pop
mov
andl
mov
xor
jno
enter
sahf
ret
mov
sbb
push
inc
fwait
sub
mov
fstpt
add
inc
fistpl
dec
aam
mov
dec
ljmp
and
mov
jne
jl
mov
test
ljmp
mov
jae
in
popf
std
sub
adc
fbstp
and
xor
imul
jns
fstpl
lock
addr16
roll
lahf
xchg
std
mov
or
or
lds
lods
xor
insl
punpckhbw
push
leave
ret
pop
xchg
inc
enter
jb
mov
xchg
es
in
mov
mov
and
mov
mov
xor
mov
push
mov
je
mov
cmpb
shll
frstor
daa
mov
shll
out
adc
mov
ljmp
cmp
or
cmp
dec
fistpl
pop
xor
movsb
lods
rcll
cmpsl
pop
push
mov
dec
mov
adc
mull
roll
mov
lock
dec
sub
mov
xor
jl
xchg
xchg
lds
cmp
push
daa
inc
mov
mov
out
add
out
mov
sub
stos
push
jl
cs
push
lock
test
push
sbb
jp
ret
jl
fmul
inc
jge
in
add
jae
pop
cmp
cld
loopne
test
loop
adc
mov
out
insb
adc
stos
push
pop
imul
sbb
pop
sbb
sar
lds
insl
shll
push
mov
mov
vcvtss2sd
and
and
add
xchg
test
push
lcall
dec
dec
stc
dec
stos
sahf
cli
outsb
sbb
js
adc
xor
mov
mov
jg
jb
or
hlt
dec
cwtl
hlt
sti
mov
les
mov
mov
cmpsl
sbbb
dec
add
sub
mov
xchg
fiadds
mov
adc
mov
mov
cmpsl
stos
xchg
fdivrs
inc
sbb
leave
loope
test
jge
adc
adc
fdiv
push
inc
popf
mov
jg
sub
mov
shl
lret
mov
xor
push
cld
jne
sub
fmuls
jns
or
divb
lret
pop
sbb
push
fildl
fstl
aad
jns
pop
xor
cmp
or
outsl
mov
inc
push
je
fld
dec
add
bound
jp
enter
in
test
adc
aad
divl
sbb
cltd
pushf
sti
sarb
push
mov
fs
pop
and
mov
cltd
fcmovb
test
icebp
jnp
dec
mov
push
sahf
pop
jno
inc
jle
sbb
icebp
das
fdivr
pop
shll
pop
pop
cmp
mov
xchg
add
mov
cltd
jne
push
push
mov
push
jecxz
adc
jle
stc
xchg
cltd
xchg
into
push
ficompl
cmp
pop
and
pop
add
push
das
mov
sub
repnz
ret
sub
into
ljmp
xchg
mov
in
xor
lds
add
aad
mov
out
and
lods
sub
dec
dec
push
loope
pop
xchg
adc
dec
lods
fdivrl
push
jecxz
pusha
fistl
into
adc
mov
jne
inc
idivl
dec
je
xor
inc
jle
in
cmpsb
jl
ljmp
notl
jns
mov
in
jp
call
pop
pusha
test
adc
bound
ret
mov
sbb
jae
mov
jno
add
inc
ss
xchg
jl
or
lret
outsb
popf
sarb
inc
pop
jbe
adc
pop
dec
jb
pop
daa
adc
and
sbb
repz
mov
arpl
push
push
je
jmp
mov
movsl
jmp
pop
into
xchg
test
or
pop
jbe
fisubs
loope
inc
frstor
xlat
shlb
mov
imul
lea
pushf
sbb
ljmp
sahf
fbstp
and
fcoml
in
jno
addl
jmp
xchg
jge
push
sub
pop
xlat
jg
add
and
mov
xor
mov
scas
inc
mov
and
aas
out
inc
cmp
inc
or
mov
lcall
inc
add
iret
std
sbb
pop
mov
jne
mov
or
js
into
mov
inc
imul
stc
jbe
ljmp
aas
mov
shlb
test
sbb
mov
neg
pop
push
in
test
lahf
rorb
push
mov
in
shl
leave
outsl
jnp
add
or
or
push
aas
mov
ss
lret
hlt
daa
push
jo
out
pop
push
fcoml
int
push
jle
adc
stc
rorl
sahf
sbb
sarl
in
jo
lcall
lock
cmp
leave
inc
mov
mov
push
pop
or
adc
dec
testb
dec
lret
lock
nop
fwait
push
movsb
loop
xor
inc
jp
repnz
pop
arpl
gs
mov
push
pop
setbe
mov
cld
test
out
mov
push
movsb
push
mov
xor
xor
push
push
jge
ss
push
mov
dec
in
adc
mov
gs
es
rclb
nop
dec
inc
xor
ret
test
xor
ja
inc
xchg
adc
dec
out
xor
sub
int
lret
dec
lds
jle
ds
jb
pop
aam
aas
sbb
aas
test
or
bound
xor
jnp
jno
out
adc
jne
and
int3
mov
pop
out
or
xchg
inc
imul
lods
sub
sub
in
aad
lods
adc
cwtl
nop
ficomps
js
push
std
xchg
mov
mov
sahf
aas
inc
mov
cmc
cmc
xor
incb
enter
stos
sbb
pop
mov
js
outsl
adc
fwait
cmp
sbb
fildll
cwtl
test
sub
ret
ret
jp
xchg
jl
dec
lds
inc
adc
pop
jmp
jae
jg
fstl
or
jle
cmp
xchg
ret
lret
das
pop
cli
movsb
icebp
jne
pop
aaa
pop
ficomps
insb
or
xor
loop
fldl
daa
mov
adc
loop
scas
aad
leave
cmp
xchg
mov
or
pop
rclb
inc
int3
jns
push
jnp
mov
add
cmpsb
push
out
fs
ficomps
lods
testl
in
insb
mov
sbb
pop
cmpsb
das
jmp
push
pop
push
push
lods
xchg
jnp
mov
outsb
mov
push
cmpsl
aam
imulb
mov
shll
inc
push
xor
imul
cmpsb
push
or
fisttpll
lcall
or
rcrb
jbe
mov
add
popa
push
loopne
popa
jg
xor
test
and
lods
xchg
add
cli
xor
fwait
mov
pop
lock
jo
jg
dec
and
xchg
push
cmpsb
xchg
cltd
les
mov
fisubrl
adc
jb
mov
sbb
jle
cmpsl
insb
or
lcall
add
jecxz
sub
cmp
imul
dec
jae
rep
inc
mov
mov
jb
and
add
in
in
lcall
out
jge
jns
jne
inc
pusha
xor
dec
movl
mov
rcr
popf
aaa
xchg
mov
fidivrl
and
mov
mov
pushf
pop
repnz
insb
push
pop
sub
inc
cwtl
gs
and
std
push
aam
fsts
dec
sub
inc
or
les
cmpl
pop
mov
pop
sbb
push
lods
mov
sbb
xor
and
xchg
cmp
imul
sbb
leave
ljmp
lds
insl
sub
cmp
lahf
push
and
lea
add
insb
sub
or
and
shll
sbb
push
mov
cmp
or
mov
xchg
negb
idivl
jmp
jne,pt
pop
add
dec
jbe
add
loope
add
dec
lcall
jg
iret
divl
xchg
push
sbb
int
into
rcl
aad
cmc
jnp
mov
inc
sahf
cmp
mov
stos
xor
ret
jmp
adc
mov
adc
mov
cmc
out
sbb
add
and
xchg
pop
mov
sub
mov
addb
jne
jmp
roll
negb
push
mov
cmp
icebp
rcl
push
mov
rolb
lcall
cmp
jl
cmpb
and
cmp
inc
pop
mov
call
mov
sub
cld
jb
push
jle
je
fwait
cmpsl
addr16
scas
in
sbb
jge
add
rcl
fmul
or
adc
sbb
push
mov
nop
inc
mov
aam
sub
outsl
imul
cmpl
pop
or
pop
inc
pop
and
cli
xchg
xchg
push
cmp
dec
and
jge,pt
jo
pop
xchg
les
xor
out
pop
push
adc
test
sub
insb
xor
cmc
int3
js
mov
inc
mov
mov
aad
cmpsl
lahf
stc
xlat
xlat
lock
xlat
xchg
stos
xor
xchg
xchg
lcall
es
mov
shrb
mov
pop
cld
in
out
mov
dec
mov
aad
jl
add
popf
testl
add
addr16
mov
xlat
fdivs
lds
ja
mov
jbe
push
cmc
bound
pop
sub
sub
sub
lods
xchg
jne
iret
cltd
test
cld
pop
pop
jbe
inc
jns
xchg
jmp
sbb
enter
in
xor
sbbl
cwtl
push
mov
cmp
in
jmp
cld
and
test
bound
push
int3
cltd
mov
fs
mov
insb
pminsw
clc
add
imul
add
push
daa
lret
test
mov
std
lock
pop
test
dec
into
loop
sbb
dec
dec
cmp
cmc
dec
mov
sbb
fmuls
xchg
cmp
push
mov
mov
push
icebp
jb
and
cmp
mov
int3
out
push
add
rcrl
add
xchg
and
hlt
jmp
andb
pop
lahf
fsubs
jecxz
push
scas
shll
cli
add
in
or
mov
pusha
dec
cwtl
ljmp
jg
out
add
sbb
sub
add
jp
pop
ret
adc
mov
fsts
fs
insb
pushf
fwait
cld
arpl
cltd
pushl
sub
and
xor
xor
push
cwtl
jp
loop
loopne
fadd
pop
out
pop
cmp
mov
mov
std
pop
cmp
testb
push
jnp
out
jb
adcb
stos
or
jl
lock
imul
xor
push
xor
fidivl
scas
cwtl
insl
ja
inc
mov
push
test
or
popf
js
push
insl
and
mov
jo
icebp
push
add
scas
mov
mov
mov
xorb
xor
mov
popf
ss
mov
push
inc
ret
push
std
jno
getsec
adc
in
pop
in
adc
fs
pop
xchg
pop
outsb
fldpi
xchg
jecxz
adc
fucom
cmp
inc
imul
insb
aam
out
sub
jge
dec
xor
in
and
ljmp
es
incl
fcoml
sti
and
xor
addr16
add
pop
xchg
iret
fstl
push
and
dec
mov
cmp
arpl
je
pop
fidivrl
inc
popf
xorl
insb
imul
xchg
dec
xchg
jecxz
sbb
pop
scas
clc
pop
sbb
inc
mov
js
rcl
aaa
dec
pop
xchg
packuswb
sahf
xor
cs
test
push
fwait
lret
repnz
fmull
cltd
pop
adc
movsl
push
aas
jns
nop
sbb
push
fs
mov
inc
pop
and
push
dec
adc
movsl
insb
es
xchg
inc
gs
dec
push
and
jo
out
xor
mov
ret
and
xor
subb
pop
jo
stc
aaa
dec
xor
push
or
dec
imul
ret
shrb
sub
push
xchg
ja
sahf
sub
inc
xchg
cmp
jle
mov
push
lcall
ret
push
rcrl
mov
push
jle
pop
popf
mov
cmp
clc
mov
pop
aam
and
sub
rolb
mov
sbb
sub
pop
flds
inc
mov
ror
xchg
cmp
int
negl
enter
fidivrs
mov
cmp
dec
xchg
les
or
adc
pop
adc
jb
push
add
das
lock
mov
iret
mov
iret
shlb
ret
dec
or
nop
and
fdivs
call
push
or
sbb
imul
rorl
rorb
pop
popa
movsb
pushf
bound
cmp
cld
ret
incb
adc
aas
scas
jns
pop
decb
dec
and
xchg
std
pop
into
subl
insb
call
sbb
lea
sbb
stos
aas
adc
and
sub
dec
pop
push
add
sahf
mov
xchg
jnp
ja
adc
mov
push
sti
fdivs
adc
lret
mov
sub
in
in
shl
push
jno
jmp
mov
jno
dec
aaa
xor
jg
pop
arpl
and
sub
imul
cmp
jge
out
pop
push
imul
test
test
xchg
aaa
and
sbb
cmpsl
mov
std
mov
in
filds
jae
popa
mov
jb
cwtl
jbe
mov
jl
int
push
mov
mov
push
mov
or
mov
out
nop
push
mov
fbld
add
jl
xor
in
int
sub
mov
pop
xor
imul
ret
sub
adc
jnp
test
and
adc
push
imul
mov
xchg
aas
push
pop
mov
dec
int3
insl
mov
cmp
mov
and
xchg
popa
jo
orl
out
xor
test
int
out
sbb
scas
jmp
cmp
inc
sub
dec
and
mov
ficoml
lock
ljmp
stos
cli
and
mov
popa
fisttpll
adc
daa
cwtl
dec
mov
data16
movsl
push
sub
hlt
sbb
xor
ret
jb
fildll
das
or
push
and
popf
sahf
int
subb
enter
out
sub
loopne
adc
pop
push
mov
pusha
sbb
jns
xchg
lods
lods
outsb
mov
cmpsb
aas
push
inc
push
sahf
or
test
xchg
mov
test
pop
cli
add
sub
jge
xor
scas
popa
add
into
push
cmp
test
mov
xchg
sbb
les
jns
in
and
xor
loopne
jne
ret
bound
lcall
mov
xchg
movsl
inc
jnp
cmp
cmp
ljmp
xchg
fcmovb
insb
popa
icebp
ret
xor
les
dec
mov
outsb
sub
mov
outsl
jno
scas
jmp
inc
stos
cmp
fs
daa
mov
mov
stos
or
inc
jno
xor
jecxz
in
xor
fwait
repz
xchg
insb
mov
mov
xchg
mov
pop
pop
bound
xchg
adc
jl
push
inc
push
mov
call
jae
push
jns
xor
mov
lods
inc
add
inc
pop
and
add
ret
stc
repnz
loope
ljmp
jmp
sub
dec
cmpsl
mov
push
popa
mov
nopl
jbe
aam
lret
mov
sbb
lds
aam
scas
inc
rolb
sbb
mov
push
decl
cmp
or
iret
daa
push
pushf
insl
aam
adc
pop
jmp
das
daa
insl
fwait
cmpsb
aam
cmp
sbb
mov
shll
jns
add
js
mov
sbbl
js,pn
ret
push
orb
adc
or
rclb
in
mov
mov
sbb
xor
testl
push
or
adc
jge
cmp
dec
inc
andl
xor
sbb
outsl
shl
xor
jb
xchg
push
jecxz
mov
xor
aaa
xchg
mov
mov
int3
iret
bound
xor
add
paddsw
cmc
pop
pop
mov
xchg
test
jne
cli
mov
cmpsb
testb
xorb
lock
inc
stos
dec
into
sahf
insb
adc
jle
jge
jns
xchg
popf
insb
cli
push
rorb
xchg
mov
mov
or
fisubs
xlat
pop
jnp
adc
movsl
imul
and
and
and
pop
jecxz
mov
push
mov
mov
xchg
xchg
into
or
out
nop
into
enter
testl
cwtl
and
pop
and
sbb
movsb
and
sar
jl
jbe
fsts
inc
add
push
push
mov
call
clc
aaa
push
push
inc
mov
sub
sub
mov
fisubrs
sub
subb
mov
cmc
call
pop
std
jbe
cmp
out
stos
xchg
mov
leave
call
repz
and
scas
outsl
and
mov
iret
pop
icebp
or
push
bnd
push
pusha
dec
sbb
and
lds
daa
loope
xor
or
push
jnp
js
jbe
sbb
ljmp
ds
jg
sub
aad
and
ret
je
mov
psubusw
xchg
int
xchg
push
xlat
mov
outsl
subb
push
dec
mov
and
jne
into
lds
mov
adcl
in
push
mov
aaa
jne
adc
icebp
repz
pop
sahf
ds
int
dec
sub
movl
push
rorb
fidivl
frstor
push
adc
mov
in
add
aas
push
mov
sbb
sti
xchg
test
push
cmpsb
xor
lea
aas
xor
sbb
lds
pop
mov
fldl
mov
add
pop
cmc
sub
mov
jbe
adc
push
push
pop
repnz
pop
xor
sub
cmpsl
cld
push
rorl
ret
test
or
push
jp
mov
xor
jle
test
pop
js
push
movsl
lea
dec
push
dec
stos
mov
in
mov
and
adc
repz
mov
push
fimull
or
push
mov
insb
inc
lcall
mov
cli
inc
push
popf
gs
mov
icebp
aaa
pop
loope
in
push
into
clc
jb
pop
lock
or
or
xchg
push
popa
shlb
movsl
loope
insl
cmp
lods
add
adc
or
fabs
dec
js
xlat
hlt
arpl
out
lcall
pop
hlt
jb
sub
das
movsl
lea
movsb
jle
rolb
sahf
pop
clc
fcoms
xchg
cmc
pop
das
lcall
ss
xor
xchg
add
fdiv
xor
mov
popf
movsl
jl
mov
push
xor
push
rcll
pushf
jno
outsb
cmp
pop
push
dec
ss
outsb
cmp
ja
or
xlat
data16
xor
mov
mov
shr
pop
dec
fwait
scas
dec
arpl
outsl
sub
pop
arpl
mov
mov
sub
cmc
add
jmp
push
push
xor
es
iret
inc
inc
push
out
push
push
cmp
and
xor
jnp
jp
push
mov
repnz
mov
push
mov
frstor
lods
cmp
add
cmp
std
aaa
lcall
xor
and
mov
in
jmp
lods
adc
pusha
into
mov
call
lock
cmp
jp
and
pop
mov
dec
in
sub
call
mov
shlb
add
mov
js
cmp
push
dec
dec
test
and
ja
push
sahf
xchg
mov
xlat
cli
js
outsb
push
out
cltd
nop
xchg
push
add
jmp
add
fiadds
cli
xchg
fnsave
cmp
add
jae
mov
mov
aam
ds
aad
pushf
jle
push
fs
pop
cmp
fiaddl
push
adc
pop
dec
add
lea
daa
mov
dec
dec
sbb
out
daa
dec
hlt
lods
popa
dec
in
mov
mov
cmp
jle
jbe
sub
jl
inc
out
jns
je
fisubrl
les
cld
fistl
xchg
addr16
decb
loop
outsb
mov
into
add
adc
add
mov
scas
enter
rclb
jmp
jmp
cmp
bound
push
mov
loopne
jne
inc
es
mov
mov
inc
test
cmc
cmp
and
push
add
jbe
filds
scas
insl
mov
push
test
and
ret
fs
xchg
push
cmp
out
cltd
xor
adc
inc
gs
es
out
shlb
or
push
mul
out
inc
xchg
shl
cmp
outsl
jmp
mov
pushf
mov
add
aaa
mov
inc
out
mov
mov
push
dec
adc
push
cltd
jmp
aad
mov
sbb
cltd
mov
das
lret
pop
dec
daa
inc
dec
adc
mov
in
ds
sbb
cmpsb
les
call
shlb
insb
movsb
pop
pushf
in
push
into
arpl
out
ret
adc
add
aas
mov
sbb
lods
arpl
and
xor
cmp
jp
xchg
in
into
sbb
add
pop
inc
sub
add
push
ss
es
into
faddl
repz
dec
call
mov
pop
mov
xchg
xchg
je
cs
icebp
sub
mov
mov
add
dec
cmp
in
sub
cltd
in
or
jmp
inc
jnp
mov
sub
pop
fstps
xchg
ret
iret
inc
add
sbb
sub
call
sbbl
int3
inc
lret
loop
add
aam
gs
jbe
jb
mov
les
jg
cltd
push
aaa
or
dec
mov
jle
or
jle
or
stc
xchg
dec
movsb
movsl
inc
test
mov
push
aaa
mov
push
loopne
mov
test
pop
or
lret
fadd
out
adc
and
xor
cwtl
inc
xor
nop
repnz
movsb
lret
pop
dec
cs
cs
mov
loop
scas
cmp
sbb
lods
popf
pusha
in
idiv
mov
mov
pop
hlt
fstl
sahf
adc
sbb
loopne
out
mov
out
xchg
cmp
add
mov
addb
ljmp
ret
dec
inc
ja
je
lock
lcall
sub
mov
push
fs
std
jle
call
mov
and
setae
adc
in
push
jecxz
and
push
call
jno
and
push
hlt
ss
xchg
xlat
das
inc
and
xor
movsb
or
jne
xor
dec
in
or
push
lea
mov
in
rorb
pop
cld
mov
cmp
fwait
dec
stc
sub
mov
iret
xor
std
adc
inc
fxch
and
or
pop
xor
dec
sub
mov
mov
jno
xor
out
adc
test
mov
repz
sub
lods
or
inc
mov
jl
aaa
dec
mov
int
pop
sbb
decb
lock
pusha
push
push
push
mov
pushf
xor
addr16
pop
jmp
shlb
sub
xchg
mov
pop
cs
sub
and
and
into
mov
xor
call
jg
xlat
in
ss
dec
imul
push
outsb
xchg
shl
push
out
cmp
mov
sub
adc
mov
lret
and
push
jg
push
rcr
xor
push
jl
cltd
xchg
jnp
ljmp
mov
xchg
pop
push
in
sub
clc
movsl
add
fcoml
dec
add
cmpsb
outsb
jg
or
mulb
aas
cmp
mov
and
aad
test
cld
test
aad
js
or
das
push
andl
mov
mov
std
popf
js
aam
pop
sti
add
js
pop
gs
xor
lret
xor
xchg
stos
mov
jmp
pop
pop
dec
mov
add
or
insb
sub
popa
and
cmp
test
mov
sub
insl
xor
pop
arpl
int3
scas
pop
push
dec
xchg
dec
test
push
mov
sbb
mov
lret
or
inc
cmpsb
lock
and
adc
adc
shl
in
adc
test
cmp
leave
notb
loopne
ljmp
dec
cmpsl
repz
scas
iret
popf
add
push
push
xchg
mov
flds
push
adc
fldcw
dec
stos
xor
push
testl
out
neg
add
mov
hlt
sub
ret
mov
mov
gs
cli
popa
movl
push
cltd
jnp
insb
int3
shrl
outsb
mov
dec
mov
push
mov
fwait
adc
mov
lret
mov
iret
xor
mov
out
cltd
nop
dec
jp
adc
ja
getsec
ljmp
sahf
mov
jnp
xor
scas
jl
xchg
push
leave
pop
lret
add
jmp
jbe
rolb
nop
xor
fistps
iret
test
inc
cmp
and
dec
fimuls
int3
mov
sbb
xchg
cmpsl
idivl
movsb
int
or
cs
sbb
daa
pop
and
fst
lcall
xor
add
mov
inc
xchg
test
fcomi
pusha
test
jmp
sub
cli
inc
lahf
leave
sub
test
push
repz
cmp
out
loope
fnsave
inc
aaa
push
or
call
pop
cli
aad
cmp
fwait
outsl
jl
iret
mov
mov
push
test
mov
dec
inc
ret
or
or
dec
xchg
mov
pop
pop
add
out
push
lcall
sbb
push
and
mov
test
out
ret
add
add
inc
dec
shr
shll
add
daa
mov
loope
frstor
enter
pop
bound
cwtl
mov
data16
xchg
in
inc
cld
int
int
mov
ljmp
or
divl
sahf
out
sbb
and
ds
push
movb
aam
or
mov
cmp
jecxz
push
add
es
in
imul
cmp
fs
add
rolb
addr16
cmc
and
in
cwtl
daa
fcomip
fcomip
pushf
mov
ret
pop
jmp
xor
ret
out
xlat
ds
cld
xlat
push
out
imul
call
cmp
pop
popa
pop
xor
loop
mov
pushf
add
mov
js
push
rcl
push
add
dec
sbb
adc
mov
mov
jp
cs
popf
jle
bound
decb
iret
and
pop
xchg
fsubrl
mov
shl
imul
lds
pop
mov
mov
mov
or
mov
or
imul
and
cmpsb
insl
notb
test
sub
jecxz
test
shl
xchg
out
mov
adc
shl
pop
inc
or
adcl
lcall
lea
sbb
lods
pop
xchg
addb
fidivrs
jae
jle
push
test
sub
add
popa
jmp
outsl
in
jno
inc
push
ja
cmp
popf
xchg
lods
and
mov
or
sahf
mov
aad
iret
test
pop
sbb
jnp
jg
mov
and
push
aas
sbb
rorb
xor
data16
lret
push
push
xchg
cmp
test
and
mov
out
adc
icebp
xor
and
mov
popa
xchg
ret
xor
test
xor
mov
mov
scas
inc
and
adc
repnz
cmpsb
pop
sbb
clc
sub
mov
dec
mov
mov
add
jbe
and
je
insb
xor
pop
shlb
enter
ja
cld
push
in
ds
in
hlt
mov
into
iretw
mov
insb
add
adc
nop
mov
call
mov
imul
cs
stc
push
cmp
jo
xchg
sarl
je
mov
mov
cmpsb
je
mov
inc
add
mov
arpl
mov
adc
and
cmpsb
out
cmp
outsb
insb
les
loope
lcall
or
or
leave
inc
or
in
sbb
dec
adc
or
addb
mov
xor
or
pop
insl
rcrl
jne
add
je
rcrl
je
mov
ret
dec
adc
lret
inc
pop
push
idivl
jg
aaa
dec
sti
lcall
cltd
ja
lods
imul
out
dec
movsb
nop
sahf
push
or
lret
cmp
and
es
sub
shrl
xchg
pop
cmp
fisttpll
sbb
mov
push
dec
jp
test
insl
cmpsb
mull
mov
sti
movsl
xor
ret
std
scas
stos
fdivs
out
sbb
mov
nop
mov
xchg
pop
fucomi
and
jbe
inc
das
push
test
adc
and
bound
mov
mull
rcrl
push
inc
inc
add
arpl
test
aaa
icebp
cmp
in
iret
jecxz
xchg
roll
or
dec
inc
fisttps
int
lds
fists
sub
cmpl
fcmovnb
inc
subb
sbb
leave
in
xchg
xor
jecxz
pop
lds
sbb
cmpsb
sbb
ret
mov
cwtl
or
out
add
je
popf
lahf
mov
mov
sbb
ss
loope
data16
inc
or
dec
push
je
repz
testb
orb
fidivrs
jl
popa
xor
movsb
repz
xchg
popa
push
outsb
test
loop
mov
fstpt
cmc
jl
mov
fnstcw
fs
jle
iret
mov
mov
or
adc
cmpsl
mov
sub
or
xchg
lahf
inc
cmc
push
pusha
mov
cltd
insb
cmc
mov
in
sbb
mov
xchg
pushf
mov
test
pop
cmc
adc
rclb
ficompl
call
adc
mov
pop
pop
push
insl
orb
xor
inc
mov
lret
push
mov
lods
outsl
xchg
insl
cs
mov
add
mov
cmp
dec
xchg
fs
or
xor
adc
sahf
lret
sarb
ss
add
pop
in
sub
repnz
add
mov
test
mov
xor
pop
cmp
and
nop
icebp
push
mov
mov
dec
shll
xchg
adc
rclb
daa
mov
cmc
inc
pushl
xor
pop
add
add
fcompl
les
fldcw
cmpsb
mov
jp
inc
jbe
mov
adc
jecxz
fstpt
cmp
pop
dec
dec
stc
sbb
gs
or
gs
push
jns,pn
ret
sub
add
bound
jmp
je
mov
sbbb
clc
lret
popa
or
or
mov
mov
cmpb
scas
inc
or
xor
add
mov
or
fdivs
inc
pop
adc
pop
mov
adc
lods
and
jbe
sbb
sub
adc
icebp
xor
sbb
rclb
push
adc
in
aad
jne
in
xor
xchg
pop
xlat
pop
xchg
pop
out
push
mov
add
fwait
imul
lock
idivl
adc
movsl
arpl
std
js
imul
sbbb
movsl
lret
jmp
and
in
pop
nop
out
and
out
test
repnz
push
adc
sub
sti
adc
mov
rcrl
inc
xchg
shl
les
xchg
ljmp
jecxz
repnz
mov
lods
mov
or
sti
loopne
push
jb
shr
sbb
out
adc
mov
in
or
pop
mov
mov
es
or
test
ss
std
jae
mov
sub
dec
mov
mov
fcomi
call
jecxz
dec
mov
dec
add
ja
pop
in
and
aad
and
stos
mov
test
push
out
xchg
outsl
stos
pop
sti
or
inc
test
pushf
add
or
test
lret
mov
movsl
out
jge
mov
das
dec
test
into
adc
fdivl
inc
out
sbb
ret
imul
movl
cmp
lret
mov
or
pop
loope
out
loope
andb
push
test
cmpsb
sbb
mov
and
scas
arpl
imul
sbb
and
shr
sbbb
pop
out
pop
sbb
mov
aas
popf
sti
jbe
mov
jns
es
xchg
push
xor
rclb
or
jnp
pop
pushf
popa
fildl
rclb
xchg
lret
aaa
pop
inc
jo
scas
xchg
jbe
xor
pop
stc
mov
mov
pop
and
addr16
mov
jl
cs
arpl
xor
lods
pop
dec
pop
jae
sub
les
and
outsl
or
cmpsb
fs
es
and
lock
mov
cmpsl
sub
dec
repnz
fcomp
push
xchg
iret
push
fisttpl
mov
add
push
lret
pop
pop
stc
push
call
add
test
scas
pop
lcall
cmp
jae
ljmp
cmp
add
or
lods
push
in
arpl
xchg
xchg
in
adc
dec
mov
movsb
adc
addl
cmp
pop
imul
mov
ret
fmulp
movsl
mov
out
push
jns
hlt
or
and
cmp
nop
adc
jnp
ret
mov
mov
adc
pop
popa
cld
xchg
enter
daa
mov
jmp
or
dec
inc
mov
shlb
pop
sahf
pop
popa
lcall
dec
mov
decb
adc
lcall
lock
jg
add
out
mov
pop
mov
daa
xchg
loop
inc
xchg
and
jnp
ljmp
out
daa
dec
push
outsl
jg
int
jnp
call
scas
adc
loope
stos
push
sub
cmp
pop
mov
mov
fucomi
jno
push
xchg
push
and
xchg
pop
ss
lahf
popa
iret
inc
jo
test
fwait
movsl
int3
sbb
add
jecxz
shlb
outsl
or
leave
and
insl
inc
push
mov
repz
cmp
mov
bound
sbb
mov
leave
mov
xchg
shl
cmc
sub
pop
in
mov
mov
cltd
rol
sub
xor
clc
cwtl
out
addr16
sub
cmpsb
clc
adc
mov
xor
out
adc
push
lods
repnz
or
stc
jno
in
sti
add
cli
outsb
loop
or
xor
pushf
adc
int3
outsb
mov
jmp
push
mov
or
pushf
add
mov
mov
mov
adc
push
aas
pop
dec
mov
jmp
xlat
push
sbb
dec
cmp
ja
sub
scas
lret
movsb
sub
xchg
and
add
cltd
mov
cmp
mov
sahf
mov
sub
pop
rol
jle
cmp
mov
push
lret
ss
cltd
jge
mov
mov
in
jns
mov
popf
pushf
pop
mul
mov
push
or
or
mov
sbb
push
popf
sub
cmpl
out
or
xchg
jp
leave
pop
xlat
inc
outsb
mov
sti
fistpll
pushf
iret
sarl
orl
in
out
sbb
xor
dec
fsubrp
jl
loop
imulb
repnz
test
stc
pushf
jnp
or
pushf
fldenv
push
adc
or
add
call
push
pusha
xchg
movsl
pop
andl
rcrb
pop
ljmp
mov
cltd
pop
sub
out
ds
xorb
data16
das
xorb
jno
pop
cli
mov
mov
sbb
adc
dec
sub
or
lock
lret
push
roll
xchg
or
and
pop
ret
cli
dec
popa
pop
mov
dec
push
shlb
adc
sahf
stos
inc
das
test
ljmp
fisttpll
inc
nop
les
fs
xchg
mov
mov
cmp
test
bound
cmpsl
pusha
movl
sub
gs
lock
sub
inc
mov
imul
or
push
nop
inc
repnz
inc
pop
rorb
cmp
popf
or
in
push
mov
out
xchg
xchg
pop
push
xor
aaa
repnz
adc
xor
sub
leave
fwait
jl
jbe
xor
pop
mov
imul
sbb
aas
std
std
adc
cmp
and
xchg
shl
xchg
push
sbb
pusha
pusha
pop
ja
and
scas
cmp
dec
int
stos
mov
pop
mov
inc
xlat
pop
jnp
and
or
sbb
std
lahf
push
rcrl
aad
lds
cltd
fdivr
aaa
xor
pop
int
push
push
pop
or
loopne
pop
mov
mov
add
jne
pop
int
pop
popa
fwait
outsb
loopne
inc
mov
es
fisttpl
iret
imul
and
out
popa
add
inc
xchg
sti
mov
std
lret
sahf
mov
int3
popf
or
aas
jp
fs
roll
mov
clts
add
push
push
mov
insb
cs
and
pop
out
fildll
add
cmpsb
jge
out
dec
add
jae
jns
aas
outsb
repnz
popa
sbb
sub
sub
orb
hlt
insl
mov
add
rolb
iret
cs
imull
shlb
icebp
mov
inc
subb
mov
jo
insb
jb
pop
dec
mov
push
leave
xchg
inc
xor
iret
mov
insl
ret
push
pop
push
imul
or
cmp
lods
std
in
push
xchg
repz
test
and
dec
inc
addl
ja
jle
rolb
xchg
in
add
ds
xor
pop
pop
jnp
cld
jge
mov
pop
xchg
fs
and
jns
fucomi
ja
cmp
mov
add
jg
push
outsl
loope
lods
inc
jg
lret
out
adc
cmpsl
stos
push
movsl
mov
pushf
dec
jbe
add
sub
sub
orl
mov
pop
cmc
lock
sti
lahf
pusha
and
jecxz
push
arpl
mov
out
mov
aaa
xlat
dec
leave
imul
lea
pop
inc
cltd
pop
test
js
sahf
in
loop
pop
sub
jb
into
jg
and
sub
icebp
mov
mov
popf
call
in
dec
push
push
lds
arpl
pop
movsb
mov
adc
inc
insl
mov
cmp
pushf
outsb
arpl
adc
js
rclb
xchg
out
push
subb
into
fs
xchg
nop
fisubrs
and
in
lret
stos
mov
enter
xchg
stos
xor
mov
mov
jg
cltd
jnp
sbb
cmpb
or
sbb
ljmp
cwtl
popa
arpl
push
in
add
scas
das
jge
add
mov
mov
pusha
std
jmp
add
sar
push
in
or
fmull
mov
add
dec
xchg
sub
dec
push
add
adc
adc
adc
cmpsb
daa
insb
xchg
mov
cmp
xor
pop
sbb
or
fdivrl
std
pop
jnp
adc
cmp
add
xor
mov
mov
mov
jae
inc
fsubrl
add
sub
mov
pushf
sbb
ds
js
ja
sbb
push
test
jle
jae
mov
and
sbb
xchg
lds
jle
adc
adc
cwtl
mov
mov
mov
adc
pop
or
stc
jle
or
in
ror
add
jae
mov
sbbl
pop
xchg
jo
mov
sti
test
mov
sti
xor
xchg
nop
pusha
in
dec
mov
insb
ljmp
mov
xchg
test
aaa
aaa
lcall
arpl
out
mov
pusha
js
sbb
add
jp
sbb
jnp
es
pop
mov
in
hlt
cmp
xor
mov
push
xchg
xchg
mov
insb
push
outsl
pop
push
stc
cld
mov
in
mov
out
fdivrp
in
mov
mov
hlt
icebp
add
cmp
push
sahf
mov
std
or
stc
sub
dec
fmull
and
in
sub
test
fiaddl
pop
repz
adc
ljmp
pop
leave
retw
mov
mov
pop
sbb
sub
and
fisubs
inc
repnz
xlat
push
std
pushf
sub
fidivrl
inc
jg
in
xor
mov
lods
dec
ss
repnz
mov
push
pop
jno
shrb
pop
inc
or
inc
fst
mov
push
fucom
or
mov
hlt
add
fnstsw
and
bound
rorl
push
or
bound
mov
nop
push
mov
call
data16
lret
cli
cltd
adc
lods
mov
pushf
and
xchg
orl
mov
cmp
test
imul
mov
bnd
xor
sbb
mov
push
pop
sbb
jns
dec
call
inc
jge
pop
call
sub
leave
hlt
loope
cli
jb
in
adc
imul
push
nopl
xchg
inc
mov
incb
mov
js
inc
or
mov
and
pushf
jo
adc
mov
ds
sub
push
xor
cs
lret
lcall
repnz
lcall
jno
jne
adc
pop
cwtl
mov
add
in
push
sbb
repz
ret
mov
shrl
pop
js
lahf
sub
dec
ljmp
push
or
out
repnz
test
in
sti
cltd
sbb
adc
mov
outsl
fwait
movl
aas
xor
mov
gs
mov
dec
hlt
lea
fwait
mov
sbb
jnp
cmp
sub
insl
or
dec
mov
test
nop
add
ja
xchg
rorl
stos
je
sub
xor
jbe
cld
sti
in
out
sub
pop
jo
pop
jge
in
cs
jnp
lahf
xorl
arpl
scas
pop
mov
and
xchg
outsb
jg
pop
inc
xchg
je
xchg
pop
or
mov
leave
loopne
push
xor
insl
mov
mov
sbb
aas
inc
mov
in
shrl
mov
or
call
add
push
cmpsb
stc
or
push
aad
sahf
pop
inc
jg
ss
xchg
push
add
fs
sbb
rorl
jo
xor
mov
in
cmp
mov
pop
iret
mov
imul
dec
xor
fld
pop
out
or
cmpsb
xchg
pop
aad
or
fsubs
pop
test
xor
hlt
push
pop
push
mov
inc
cwtl
pop
cmc
out
inc
or
stc
xor
hlt
xor
leave
pop
jo
aam
xor
fs
loop
add
les
add
push
mov
lock
jecxz
push
sub
mov
mov
lea
cmp
int3
jmp
or
sub
push
xchg
and
pop
inc
adc
cmp
sarb
pop
pop
inc
sbb
fisubrs
sub
sub
aas
mov
xchg
je
ljmp
iret
data16
out
jl
inc
xchg
sub
out
repz
pushf
fisttpl
lock
insl
adc
popf
add
push
movsl
cli
inc
test
cs
jo
or
push
jns
scas
mov
cmp
shrl
mov
aad
stos
sub
or
scas
ds
mov
inc
mov
xor
stc
addr16
repz
or
arpl
cmp
push
rorl
mov
jp
into
or
stos
pushf
pop
cmp
popf
sbb
xchg
adc
and
push
rclb
ficomps
sbb
imul
cmp
push
test
lds
pop
pushl
mov
and
mov
ljmp
push
sub
loope
xor
ljmp
fidivs
data16
inc
mov
sub
test
test
out
xchg
aaa
loopne
cmp
movsl
sub
pop
adc
add
xchg
cwtl
inc
cmp
cld
inc
push
sub
jb
xor
dec
insb
call
clc
jecxz
ds
xchg
mov
mov
insl
mov
out
or
pop
lcall
addr16
xchg
jecxz
int
inc
std
movsl
xchg
icebp
insl
push
lret
pop
rcl
pop
lods
dec
xor
mov
dec
pop
std
adc
and
cmp
cmovl
push
sar
in
sub
or
jmp
shrb
ss
or
pop
incl
insl
lea
adc
fsubrl
jno
add
mov
xor
pop
mov
mov
hlt
jae
dec
pop
push
push
ret
mov
mov
repz
insb
cmc
cli
test
popf
dec
shlb
cwtl
and
mov
pop
xchg
call
pop
mov
rorl
imul
mov
in
mov
mov
dec
jge
sbbb
xchg
jo
push
mov
imul
fcomip
mov
pop
out
fisubs
js
icebp
ljmp
jae
sub
rcll
call
sub
insb
inc
fisttpll
dec
es
nop
cmc
fidivrs
or
adc
aam
stc
aad
push
and
fsubrl
mov
adc
rcl
cmp
mov
mov
jnp
xchg
das
jle
adc
into
and
xchg
mov
test
ss
std
adc
jge
sti
std
add
test
in
push
push
push
outsb
aam
sti
or
dec
bound
push
add
push
xchg
mov
imul
or
pop
stc
in
mov
adc
mov
jno
cmp
sahf
gs
cmp
cmp
sub
mov
xor
adc
sbb
pop
leave
xor
cs
jae
loop
cld
ja
nop
insb
lret
je
in
jp
mull
fsub
mov
das
jle
push
lods
in
xor
or
iret
push
test
aaa
andb
loope
push
aam
notb
call
repnz
pop
mov
in
sub
inc
mov
outsl
mov
lods
xlat
cli
pop
andb
cli
add
and
std
jae
fwait
out
shlb
cmpsl
jecxz
repnz
pop
hlt
idiv
xor
mov
add
jne
or
mov
sarl
jne
push
pusha
mov
inc
push
sub
scas
xor
adc
jae
inc
ss
jo
add
cmp
dec
inc
push
addr16
rol
pusha
mov
ja
mov
cmp
pop
aad
sbb
and
sub
mov
out
jns
sar
pushl
je
jno
outsl
aaa
xor
out
in
test
jecxz
push
pop
jae
push
loop
cmp
and
push
ret
xor
js
loop
test
repnz
in
xchg
dec
mov
jl
movsb
sub
xchg
mov
cmp
addl
dec
and
out
dec
pop
xchg
sub
sub
or
mov
int
test
into
dec
mov
sarl
lock
mov
mov
int3
jg
sub
or
adc
ficoms
mov
dec
vzeroall
test
push
dec
daa
out
mov
test
pusha
stos
aaa
cmp
fiadds
sub
ja
fwait
jl
jbe
stos
cmp
add
pop
xchg
xor
repnz
push
adc
inc
push
ret
adc
mov
cs
sahf
insb
dec
mov
movsb
sbb
lea
rorl
mov
shll
lret
and
std
cmpsl
dec
dec
dec
add
dec
xchg
leave
loopne
add
xchg
stc
xor
cmp
jge
mov
fldcw
clc
mov
repnz
push
pushf
inc
std
lret
xchg
test
pop
adc
jnp
sbbl
xor
mov
imul
adc
inc
in
pusha
sbb
push
popf
popf
cmp
add
leave
mov
test
sbb
cld
addr16
jbe
jo
je
push
imul
orb
xchg
adc
insl
insl
stos
push
and
es
ljmp
shrl
jae
orw
sub
das
aam
inc
in
cmp
sti
sbb
testl
push
inc
xchg
mov
repnz
roll
pop
dec
jbe
inc
js
add
mov
out
sbb
adc
xor
mov
out
dec
test
jmp
xchg
iret
push
dec
fnsave
repz
sti
add
rcll
sahf
pop
cmc
call
jo
scas
cld
mov
call
or
jnp
pop
jmp
pop
insb
nop
push
xor
repz
sub
push
jae
jo
sbb
ficoml
lahf
dec
pop
add
xchg
dec
sbb
jne
cmp
or
ret
adc
inc
mov
inc
jb
test
pushl
or
mov
cwtl
mov
inc
stos
shl
add
jnp
inc
sbb
mov
dec
xchg
or
imul
cmp
bound
adc
mov
push
cltd
js
lretw
xor
mov
jbe
pop
imul
or
inc
int3
inc
nop
jmp
mov
ljmp
pop
jge
icebp
adc
mov
ret
mov
cli
bound
mov
dec
cltd
mov
mov
cli
jo
aam
jmp
out
inc
pusha
iret
push
pop
icebp
mov
rcl
icebp
fcoml
sbb
dec
mov
je
or
imul
sub
mov
push
pusha
xor
rcrl
and
pop
sbbl
adc
push
in
xor
inc
loope
pusha
mov
mov
std
pop
mov
inc
pusha
ret
test
xor
mov
das
je
and
shlb
stos
mov
insl
ret
xor
jecxz
test
fists
inc
adc
push
lahf
iret
mov
push
fisubs
arpl
push
xchg
js
and
cmpsb
jo
jecxz
stos
imull
pop
je
sbb
push
push
outsb
in
dec
es
xor
jbe
mov
das
sarl
outsb
push
sbb
fisttpll
into
loop
ret
js
es
mov
jns
call
jp
shlb
popa
scas
xchg
jns
std
push
mov
rcrb
ror
inc
or
dec
cmp
adc
xor
xchg
xor
pop
scas
aas
pop
aam
jp
out
jno
outsl
jecxz
lock
hlt
jo
std
fsubs
in
push
jne
cmp
dec
icebp
xchg
cmp
jo
dec
sti
jb
mul
sarb
jecxz
add
nop
pop
fidivrs
mov
lahf
lcall
and
ljmp
or
repnz
inc
add
mov
mov
repnz
lock
mov
mov
daa
pushf
into
into
xchg
es
bound
cmc
mov
mov
sahf
imul
pop
add
jns
mov
sti
das
or
les
inc
mov
int3
pop
push
ffreep
jne
mov
xor
out
xor
mov
xor
shrb
data16
cwtl
stos
mov
and
pop
in
and
sbb
enter
jne
mov
jp
mov
stos
inc
shr
jge
xchg
xchg
add
mov
jns
lds
adc
dec
in
rorb
add
and
aam
repnz
lock
loope
out
cmp
and
int
sub
mov
repz
popf
or
lock
mov
jmp
and
dec
adc
aaa
iret
cmp
pop
mov
sarl
xor
lds
mov
cmp
lahf
xchg
repnz
out
imul
sbb
outsb
add
jno
into
jl
inc
mov
outsb
das
test
jle
call
les
pushf
hlt
aam
sarl
mov
xchg
cmp
arpl
gs
bound
ficoms
dec
dec
dec
faddl
lods
movsl
mov
pushf
imul
pop
xchg
mov
shlb
jae
sub
pop
lds
or
jae
fwait
lock
mov
adc
ret
mov
std
or
aad
js
test
imull
test
test
mov
or
fs
adc
fwait
dec
pop
stos
adc
stc
sbb
out
xor
mov
adc
in
test
dec
ret
mov
xchg
push
cmp
xor
cmpsl
mov
sbb
call
adc
cld
mov
xor
push
and
lret
movsl
jg
insl
hlt
data16
pop
sbb
pop
mov
push
mov
out
sub
cwtl
mov
push
push
sub
mov
push
jecxz
enter
pop
in
pop
popa
call
addl
inc
jb
loopne
inc
adc
rcll
xchg
xchg
imul
xor
fcomp
aas
dec
imulb
pop
into
sti
cmp
int
cmpsb
rclb
xor
scas
xchg
lds
adc
movups
cmc
jb
xchg
hlt
adc
fmuls
pusha
push
lock
xchg
bound
ds
mov
inc
pop
ret
sbb
shlb
data16
test
gs
test
pop
outsl
jno
dec
xchg
jns
and
xchg
pop
fwait
xchg
add
sbb
aas
lcall
icebp
cmpb
mov
icebp
out
lret
push
std
jecxz
hlt
inc
sbb
xchg
inc
jae
shl
jns
xchg
arpl
stc
mov
adc
ret
jl
inc
pop
incl
mov
insl
imul
xor
dec
sbb
push
dec
mov
ss
sbbl
pop
mov
xchg
cltd
adc
test
daa
or
daa
adc
out
and
or
sub
dec
and
test
fs
dec
das
bound
adc
pushf
call
fdivs
dec
push
fucomp
ss
mov
mov
sub
mov
or
test
pop
xchg
xlat
xchg
push
fidivrs
sub
icebp
adc
mov
push
push
jl
out
ficompl
sahf
push
scas
flds
xor
mov
xchg
pop
inc
lcall
cs
pop
mov
adc
jmp
fldt
sbb
pushf
cmc
or
add
inc
mov
out
pop
js
repz
ljmp
movl
fsubr
push
cmp
cmp
hlt
fildl
flds
adc
push
dec
add
jnp
cmpl
stos
fisubrl
add
cmp
out
pop
std
cmp
jae
in
xor
testb
adc
push
lret
repz
aas
jno
sub
jbe
cmp
adcb
ret
hlt
fldcw
sti
lret
popa
mov
fdivl
dec
dec
adc
in
outsb
xor
mov
int
jge
ret
mov
popa
into
dec
xchg
test
jmp
cmp
imul
or
pop
fidivrs
pop
fldcw
call
test
jg
and
in
cmc
divb
xchg
xor
nop
jmp
repnz
or
movb
dec
sub
int3
icebp
cmc
xor
sub
fmuls
pop
pusha
aaa
fsubs
negb
in
jo
push
push
lcall
pop
out
xchg
mov
andb
into
andl
pop
xchg
push
sub
bound
cmc
pop
cmp
mov
std
insl
inc
jb
sbb
adc
jg
mov
jg
pop
inc
addr16
or
mov
sub
inc
xchg
mov
adc
out
loopne
add
data16
andl
sub
clc
fldenv
addl
add
int3
call
verw
int
jo
int3
out
dec
adc
sbb
mov
stc
mov
mov
pop
xor
out
scas
and
add
data16
add
adc
cmpsl
xchg
outsb
movsl
jmp
mov
aad
push
xchg
outsl
fwait
pop
test
fcmovne
movsb
inc
or
popa
mov
daa
or
jo
sahf
mov
or
add
adc
loopne
add
and
in
sbb
adc
pop
aaa
leave
js
test
sbb
and
jp
loopne
xor
xchg
dec
pushf
js
sbb
icebp
arpl
sub
repz
bound
mull
mov
fistpl
cld
xchg
test
sub
push
out
movsb
les
push
ljmp
mov
jecxz
fisubs
push
ret
mov
xor
rclb
out
incb
mov
push
fimuls
call
pop
inc
in
add
add
mov
leave
jbe
adc
in
dec
jae
mov
xchg
fmulp
out
out
out
shll
test
in
xor
xchg
adc
movsb
fists
push
push
add
sbb
jp
shrb
push
and
xor
and
adc
pop
loopne
enter
lahf
inc
rol
lcall
mov
fbld
aaa
sbbb
imul
lret
sub
cmp
xchg
add
sbb
cmp
xchg
pop
hlt
daa
popf
mov
mov
dec
jno
and
mov
mov
jle
les
loope
aad
sub
cwtl
cmp
push
jg
stos
xor
arpl
push
repnz
cmp
daa
lret
pushf
lahf
rolb
push
rolb
cs
mov
mov
out
inc
xchg
mov
mov
pushf
sub
imul
adc
and
inc
mov
insb
ss
scas
popf
into
inc
jnp
xchg
addr16
lahf
daa
stos
xchg
lods
mov
add
xor
stos
adc
mov
cs
test
mov
pop
and
mov
pop
xor
sub
or
testb
cmc
mov
dec
adc
imul
int3
gs
lods
fisttpl
stos
outsb
xchg
push
jg
or
loop
push
loop
mov
xchg
roll
mov
sbb
xor
mov
sub
sbb
out
jecxz
inc
mov
rep
pop
mov
rcl
stc
sbb
dec
pop
pop
xlat
mov
dec
inc
xor
jb
push
jnp
sbb
in
cld
cltd
mov
ret
mov
push
cs
xchg
test
out
mov
cli
fmuls
cmc
repnz
fs
mov
xchg
mov
or
icebp
in
xchg
icebp
push
ret
out
repz
mov
jne
aam
mov
pop
stos
xlat
push
mov
sarb
shrb
xchg
jle
add
inc
inc
push
jge
adc
xchg
cli
jo
ja
cmp
inc
and
out
out
popa
call
inc
pop
sbb
jno
enter
addr16
aad
jmp
leave
or
aas
bnd
insl
lods
jp
mov
cmp
hlt
fsubs
sub
or
nop
sub
scas
repz
mov
loop
adc
inc
stc
mov
sub
xchg
clc
adc
sub
aaa
dec
pop
jl
xchg
pop
mov
pop
jne
sub
xchg
mov
pop
bnd
sbbb
leave
jne
adc
mov
cmc
mov
js
outsl
mov
mov
addr16
sbb
ja
test
mov
mov
or
mov
lods
mov
ljmp
fsubr
fs
jae
cmp
mov
xchg
add
dec
ja
add
lea
rcr
mov
cmpl
xchg
lods
cmc
xchg
xlat
sub
add
push
lahf
out
das
fadd
sbb
dec
in
xchg
jl
fs
or
out
jg,pn
adcl
or
hlt
and
and
and
cli
pop
aam
push
dec
xchg
jo
jmp
stos
insl
ret
cmp
fdivrl
sub
addb
mov
push
outsl
mov
xchg
jb
sub
fsubl
int
lods
in
inc
cmp
jp
and
lahf
scas
mov
xchg
cmc
push
pop
pop
jg
sub
or
icebp
ds
dec
sarl
add
xor
and
insb
in
out
xchg
movsb
icebp
xorb
mov
cmpsb
xchg
aas
or
test
add
je
je
sbb
fisttpll
std
dec
lds
rorl
mov
push
data16
imul
int3
sahf
sbb
flds
leave
cmp
cmp
jne
outsb
jnp
add
push
bound
add
jne
nop
testl
data16
push
nop
and
or
out
inc
adc
shlb
cmp
push
fcoml
lods
out
inc
fwait
push
faddl
cltd
scas
push
aaa
pop
adc
and
add
outsl
push
push
out
pop
cld
inc
inc
xor
push
dec
push
pop
repz
mov
adc
std
xor
rorl
enter
push
dec
cmc
outsl
aas
pop
gs
jge
cmp
pop
notl
ljmp
outsl
lret
jns
add
push
imul
gs
movsb
dec
xchg
adc
push
jmp
and
aaa
in
imul
cmp
xchg
lret
xchg
dec
loop
test
fs
mov
ret
fwait
or
mov
je
lods
icebp
pusha
mov
jmp
sbb
clc
iret
xchg
shrb
popa
ret
outsb
je
aam
popf
scas
nop
jns
fcoml
movsb
pusha
pop
movsl
imull
push
ficompl
jns
jg
and
push
ja
call
fisubrl
xchg
fs
scas
stc
mov
gs
iret
test
sti
xchg
leave
xor
or
dec
add
adc
pop
push
pushf
gs
cmp
imul
jno
pop
sub
add
psllq
xchg
ds
ss
clc
scas
mov
pushf
leave
out
mov
jge
inc
movsl
ds
push
fmulp
test
and
nop
adc
iret
sub
insb
stos
dec
fiaddl
lea
in
sub
js
or
sbb
outsb
insl
movsb
les
jnp
xor
dec
int
cltd
inc
aad
sub
sbb
cli
pop
mov
inc
or
pop
repz
xor
enter
sbb
inc
fnstsw
jnp
loopne
rcrl
aas
sbb
loopne
test
or
das
or
fstpl
jle
mov
jg
negl
push
mov
stos
std
sub
xor
imul
movsb
icebp
xor
xchg
xor
and
out
std
dec
scas
xor
xchg
dec
mov
xchg
cmp
push
push
outsb
arpl
mov
xor
je
add
jl
insl
addr16
das
or
pop
mov
test
sub
fildl
mov
cmp
pop
jmp
dec
outsb
add
xchg
or
mov
xchg
push
pushf
mov
pop
enter
mov
and
fwait
js
or
in
xor
cwtl
xchg
push
fstl
in
dec
vmulps
pusha
arpl
roll
enter
faddl
inc
shl
dec
out
aaa
nop
rolb
inc
inc
or
scas
in
lcall
sbb
and
mov
mov
scas
aam
leave
xor
loop
inc
daa
data16
xor
les
fstpt
das
pushf
inc
jg
stos
ljmp
sbb
sahf
jl
push
int
lahf
lcall
test
cwtl
aad
rolb
xchg
clc
mov
ret
inc
or
in
loop
and
nop
or
fcom
xor
push
push
mov
inc
add
dec
xchg
mov
test
lds
cmp
mov
push
cmp
cmp
jle
inc
in
xchg
js
cltd
dec
aam
ljmp
jne
cltd
add
repnz
pop
popf
mov
mov
popa
not
push
pop
sbb
shrb
insb
sbb
pop
mov
fdivrp
sbb
rclb
adc
popa
xchg
shr
mov
add
in
or
jl
sarl
xlat
push
adc
rcrl
mov
in
inc
push
cmc
mov
adc
fcmovb
outsb
dec
pop
out
test
jle
and
jge
or
inc
or
mov
mov
add
std
call
out
inc
xchg
mov
jp
stos
add
xor
mov
insl
push
xor
mov
data16
push
cmp
fdivr
dec
divl
mov
arpl
pop
inc
mov
push
andb
insb
mov
or
inc
add
xchg
inc
xchg
insb
mov
pop
add
push
ficompl
cld
imul
movsb
push
out
insb
test
add
pusha
std
adc
mov
incl
or
mov
inc
leave
rcl
mov
mov
cmp
pop
ret
inc
adc
arpl
push
in
push
in
call
dec
xor
jne
inc
icebp
xchg
loopne
mov
sahf
push
shl
fimuls
daa
and
out
and
inc
arpl
mov
repnz
pushf
xor
data16
popf
sub
lds
repz
enter
jp
dec
push
lret
addr16
and
dec
iret
inc
out
xchg
pop
add
xchg
bound
and
arpl
xor
jecxz
out
mov
jnp
test
bound
xor
int3
lret
push
or
mov
imul
loop
xchg
push
lea
dec
je
inc
addl
gs
clc
pop
dec
cmp
loop
div
test
call
add
jno
mov
lcall
aaa
xchg
leave
cmp
inc
outsb
or
sbb
jno
fs
loope
sub
jge
and
inc
insb
aaa
mov
xrelease
pop
push
inc
cmpb
loop
push
sarl
sarb
aas
mov
in
pop
pop
xchg
mov
xor
mov
cli
inc
jne
jle
push
shlb
inc
pop
mov
jne
cmp
incb
inc
xor
fcomi
int
cmpsb
or
jg
mov
adc
loop
test
out
scas
jb
sbb
shrl
adc
es
arpl
cmpsl
mov
xchg
filds
jne
dec
pop
mov
pop
dec
scas
pop
cmpsb
mov
mov
sub
jne
push
out
xchg
mov
or
lods
or
shll
enter
imul
shl
dec
js
andl
outsl
imul
mov
push
mov
push
xor
sub
js
std
stos
sbb
dec
jb
ljmp
fisttpl
es
adc
std
pop
into
movsb
push
push
lcall
push
and
jne
lods
fstps
ss
xchg
or
popf
imulb
not
lret
mov
ds
push
loopne
mov
lods
and
mov
cmc
push
popf
stos
push
xlat
enter
inc
and
dec
jle
sbb
xor
int
jle
add
jb
xchg
mov
adc
mov
pop
pushf
vmread
into
xor
jb
mov
sbb
es
jo
arpl
jp
addr16
int3
sub
cmpsl
sub
or
xchg
mov
clc
cmp
test
cmpsl
fwait
xchg
in
sbb
aam
mov
push
pop
and
imul
cmp
mov
pusha
shlb
and
popf
mov
sbb
pop
xchg
or
cmpl
push
fs
dec
jo
mov
cmp
rclb
adc
arpl
dec
xorb
sahf
dec
lods
and
mulb
mov
repz
cmc
ds
inc
movsb
mov
stos
iret
sti
loope
stos
fiadds
inc
daa
lds
inc
mov
leave
lods
mov
and
repz
cmp
out
ror
sub
movsb
sbb
insl
jae
pavgw
data16
mov
pop
dec
lret
insl
int
add
mov
lcall
cmpsb
inc
aas
xor
sarb
push
cmp
aaa
xor
jns
and
dec
fildl
pop
jle
sub
aas
movsb
daa
popa
mov
cmp
dec
das
rolb
inc
add
and
xchg
push
inc
in
andb
fbld
sti
mov
push
mov
aas
mov
lock
jmp
push
mov
test
mov
inc
jle
sbb
or
push
cmp
mov
jne
into
adc
lods
sbb
cmp
xlat
rcl
add
push
mov
test
js,pn
xor
fbstp
iret
mov
push
jp
inc
test
dec
jbe
repz
xor
shll
popf
add
lock
bound
jecxz
dec
pop
xchg
mov
dec
inc
pop
jne
in
push
nop
xchg
mov
sbb
cld
dec
mov
pop
outsb
andb
xor
lcall
xchg
cwtl
sub
push
sub
shlb
pop
pop
add
leave
dec
test
add
and
mov
test
xor
into
fs
inc
or
mov
push
push
cmc
dec
arpl
adc
or
pop
sahf
aas
hlt
cmpsl
pushf
dec
xor
pop
rep
aad
ret
pop
or
pop
clc
arpl
adc
add
addb
push
cwtl
sbb
mov
incb
dec
mov
imul
les
loopne
insl
xchg
dec
sub
out
sbb
lret
cmp
jp
push
mov
ss
pop
cmpsl
fistpll
orb
inc
int3
loopne
in
dec
push
cltd
lock
inc
pop
scas
xor
ljmp
push
scas
cmp
movsl
lcall
pop
mov
xor
lahf
rcll
rclb
mov
add
mov
mov
icebp
movb
and
ret
cmp
sbb
lock
pop
loopne
in
leave
xor
jp
shr
jl
iret
in
das
fbstp
test
daa
mull
push
pop
ret
or
push
lods
ficompl
fldcw
mov
sub
loop
in
mov
stos
inc
fs
cmp
xchg
lahf
clc
inc
mov
pop
les
test
out
fs
stos
das
lahf
adc
cli
pop
mov
xor
iret
inc
push
stos
shll
sbb
cld
push
lock
push
data16
insb
xchg
test
insl
loop
flds
rolb
inc
adc
sub
or
dec
mov
je
mov
std
push
jbe
sbb
pop
les
fs
dec
neg
adc
leave
lods
aam
push
fs
ja
xor
jb
mov
out
cmp
mov
add
shlb
mov
movsb
push
add
adc
lcall
rcr
sub
push
xlat
out
pop
mov
lds
dec
mov
jbe
lds
lods
stc
std
or
pushf
mov
mov
pusha
fimuls
test
adc
sub
in
repz
adc
ja
out
lock
or
roll
insl
jg
fcmovnu
vmovhps
out
js
push
lret
loopne
daa
ffreep
push
or
pop
sahf
cmp
mov
mov
xor
adc
cwtl
fbld
pop
cmpsb
mov
enter
xchg
lea
xlat
dec
jbe
dec
or
fwait
data16
mov
je
sbb
daa
mov
out
aaa
insl
and
adc
mov
and
aas
adc
ljmp
dec
jbe
sbb
cld
sbb
fs
pop
and
fs
sbb
mov
pop
push
or
clc
sbb
out
ret
mov
nop
repz
daa
and
mov
mov
lods
sbbl
scas
xlat
cmp
or
mov
pop
xchg
xor
loopne
sbb
mov
sbb
out
xchg
in
add
ljmp
and
lds
cmp
xor
insl
aas
sbb
inc
xchg
xchg
ficoml
sahf
ret
pop
sub
out
sahf
popf
mov
adc
xor
and
out
xchg
call
mov
and
int
int3
mov
divb
jecxz
mov
mov
mov
loopne
adc
sbb
mov
stc
stos
pushf
mov
and
enter
and
mov
bound
mov
lret
ja
fbld
jp
inc
xor
dec
cld
or
mov
jmp
jg
imul
stos
lret
ja
dec
jecxz
outsb
mov
xor
push
in
jo
xchg
pop
jp
popf
lahf
push
stos
jns
nop
fidivrl
fstpt
test
movsb
xchg
adc
push
push
push
dec
mov
leave
mov
xor
mov
out
xchg
jnp
gs
mov
jae
xor
adc
cmpl
mov
xor
lret
push
cmpsb
xlat
arpl
or
into
movsb
dec
inc
pop
scas
mov
bound
ret
loopne
jne
out
cmp
cld
mov
out
imul
addr16
lahf
mov
int
sbb
xchg
cmp
outsl
and
inc
shlb
iret
popf
add
mov
cmpsl
adc
data16
lea
insl
imul
into
mov
jg
xor
std
movsb
sub
arpl
sub
cmp
mov
cmp
push
jno
mov
jno
es
and
cmpsb
fcomps
dec
out
jne
std
test
stos
mov
pop
sbb
cmp
jno
punpcklwd
mov
sub
dec
clc
xor
sub
xchg
in
push
cwtl
gs
mov
arpl
jmp
push
sub
cmpsl
mov
aaa
push
inc
adc
hlt
jp
subl
fimull
scas
push
mov
fisttps
lret
sbb
imul
or
mov
jle
push
mov
add
adc
pop
out
push
sbb
inc
test
cld
lret
pop
xchg
mov
test
inc
pop
int
nop
push
push
sbb
cwtl
fldl
or
ja
mov
push
icebp
mov
add
daa
jne
sub
add
cmc
adc
test
sbb
ret
popa
iret
push
push
push
sbb
aas
cli
jns
pop
sti
cwtl
jmp
xchg
or
shlb
popf
and
cmc
in
push
sbb
je
aam
loope
aaa
or
dec
inc
loop
aas
mov
out
stc
cmpsb
fsubp
mov
int
fsqrt
mov
push
mov
mov
or
loopne
mov
jo
mov
adc
fbld
lret
lret
lcall
jle
pop
mov
testl
aas
cmp
push
js
aas
test
sbbl
dec
inc
insl
jno
fs
mov
push
jbe
es
outsl
jp
mov
mov
add
vrsqrtps
jle
das
xchg
daa
or
iret
xchg
push
add
push
inc
inc
cmp
mov
clc
iret
pushw
xor
test
sub
test
mov
sbb
into
fldt
mov
cmp
hlt
fbstp
adc
sbb
and
addl
dec
mov
shr
out
sub
cvtdq2ps
mov
dec
jmp
mov
cmc
pop
mov
push
cmpsb
pop
mov
sbb
add
and
pusha
dec
pop
out
adc
add
mov
int3
stos
imul
das
jae
cmp
push
adc
mov
add
ss
mov
sbb
sub
push
sar
adc
jle
sbbb
pop
push
mov
inc
dec
or
mov
test
xchg
mov
test
test
notl
xchg
arpl
test
push
repz
cmp
xor
mov
xchg
sbb
jo
mov
dec
sbb
mov
add
mov
push
pop
xchg
dec
loop
sbb
mov
push
outsb
inc
jecxz
mov
xorl
jb
mov
mov
lds
xchg
xor
push
adcl
mov
jp
mov
loope
push
or
cmp
cltd
loope
jne
aam
xor
fcoml
push
shlb
sub
and
push
fs
xchg
push
xchg
hlt
sub
add
push
mov
iret
add
inc
mov
mov
sub
dec
movsl
push
jp
in
shl
sbb
mov
notb
adc
clc
mov
mov
inc
mov
xchg
mov
add
notl
cmp
call
jg
and
popa
pop
sbb
scas
cli
or
mov
aam
addr16
adc
and
gs
or
popf
cld
mov
mov
cmp
push
rcr
insb
mov
inc
xor
or
shl
push
les
add
mov
lahf
or
push
movsb
push
pop
into
stos
mov
pop
ljmp
lods
fld
mov
arpl
in
daa
adc
repz
mov
dec
addr16
iret
mov
pop
loopne
test
mov
sub
loope
push
jle
pop
and
dec
mov
repz
xchg
mov
mov
dec
push
mov
mov
in
xor
cmpb
mov
or
add
inc
mov
xlat
pop
mov
mov
xchg
stos
sbb
mov
push
xchg
das
add
cltd
fwait
out
mov
lea
mov
adc
or
aam
add
jno
mov
aam
push
xchg
mov
imul
sub
sub
aaa
cmc
push
leave
leave
cmpl
scas
pop
dec
lret
nop
inc
mov
jmp
in
outsl
sbb
fwait
ljmp
pop
inc
out
jmp
inc
rep
rcrl
lea
call
pop
and
dec
lock
jge
enter
mov
cmp
movsl
dec
ja
xchg
shll
jb
mov
jecxz
inc
jne
xchg
mov
pop
scas
repnz
stos
adc
fsts
push
mov
xchg
jge
mov
push
mov
dec
outsl
adc
inc
or
adc
mov
iret
xchg
lret
mov
mov
cmp
inc
xor
push
outsl
push
imull
inc
jle
mov
aad
push
movsb
arpl
xor
xor
sub
subb
lcall
xchg
add
sub
lods
and
or
mov
mov
xor
jo
inc
pusha
mov
mov
sahf
xchg
jle
icebp
xor
stc
push
cmc
lcall
mov
mov
inc
pop
and
add
fisttpl
fmuls
mov
movsl
in
out
repnz
add
or
loop
add
mov
nop
movsl
mov
les
cmp
clc
es
mov
dec
in
sahf
enter
jle
jge
es
das
out
or
mov
mov
inc
mov
xchg
out
repz
pop
xor
dec
lods
scas
mov
sbb
ds
cs
and
pusha
mov
xchg
insl
cli
mov
aaa
cli
add
push
inc
pop
xchg
dec
lret
xor
jno
shr
jb
pop
jle
inc
sbb
stos
leave
fistps
movsl
xor
sub
imul
sub
or
jg
sahf
add
push
ljmp
mov
imul
pop
jp
sub
or
mov
or
cmp
or
add
mov
sbb
daa
lret
les
test
jecxz
mov
mov
mov
fidivrl
js
jo
dec
adc
sbb
mov
xchg
push
cmp
jmp
xlat
dec
mov
pop
mov
sub
pop
cmp
xor
mov
push
or
mov
cmpsl
fdiv
test
ds
push
push
push
enter
or
push
xchg
mov
or
jge
sbbl
or
mov
mov
in
mov
lea
sub
mov
fwait
inc
lret
ja,pn
daa
stc
sbb
push
ljmp
loopne
pop
adc
aam
into
cmp
sbb
inc
mov
pop
add
dec
outsl
loop
fwait
jecxz
lock
mov
test
inc
into
dec
sbb
or
jle
arpl
add
sbb
dec
push
cmp
adc
jmp
jne
mov
jno
pop
mov
push
sahf
dec
in
push
push
push
pushf
jge
and
sub
inc
xchg
dec
push
shlb
push
push
icebp
lcall
mov
dec
dec
movsl
rclb
mov
stos
xchg
insl
idiv
out
rolb
xor
mov
cmp
fmuls
loop
inc
cmpsb
fwait
mov
xchg
mov
dec
lret
mov
and
lahf
xor
test
out
call
xchg
sbb
push
pop
xchg
sbbb
inc
cmp
mov
fiaddl
into
mov
push
adc
adc
in
dec
fucomp
mov
or
xor
dec
mov
pop
mov
test
ret
cmc
mov
mov
xchg
iret
inc
movsb
fwait
jle
outsl
pop
aas
add
cmp
stos
xchg
mov
dec
sbb
nop
lods
jge
fs
jmp
insl
jb
pop
and
sahf
faddl
mov
enter
mov
adc
lods
add
hlt
lret
jne
mov
and
mov
gs
mov
pushf
sbb
addb
pop
lahf
icebp
clc
test
pop
sub
or
push
sbb
mov
and
xor
jno
sub
outsl
add
mov
push
mov
lcall
and
outsl
and
aam
lret
push
cmp
and
adc
pop
mov
aad
mov
and
dec
icebp
shr
fsubrs
arpl
sarl
int
aas
xchg
xor
pop
push
cmp
or
in
sbb
and
pop
out
add
sbb
decb
je
or
movsb
loop
aad
or
jle
push
stos
test
shl
push
xor
daa
pop
fadds
pop
cmp
cli
mov
jbe
mov
and
loopne
jns
xchg
aaa
daa
sub
dec
scas
loope
sbb
lock
fwait
jp
xchg
xchg
mov
xor
icebp
enter
push
sti
aad
loop
aam
addr16
iret
lds
push
enter
jb
jg
mov
lcall
mov
mov
out
out
sbb
out
push
loopne
fldcw
fbstp
mov
negl
cmpsl
add
pop
xchg
mov
mov
mov
jmp
lods
lds
or
insl
shl
xor
inc
into
lcall
sahf
jg
jp
push
jecxz
or
popf
lods
mov
lods
add
dec
or
xor
fdivr
or
test
push
into
adc
enter
push
dec
inc
in
push
aas
cmp
mov
lods
lock
cs
xor
cld
mov
mov
lods
out
ljmp
inc
stos
mov
pop
popf
call
lock
mov
pop
cltd
gs
movsb
xor
mov
in
jne
xor
sbb
fdivl
imul
sub
push
std
ss
fsubl
push
cmp
nop
ret
sbb
in
inc
push
daa
mov
gs
cmpsb
shrb
test
mov
ret
test
jne
loopne
fs
testl
dec
add
xor
push
frstor
jle
addl
fstps
inc
jbe
ss
lds
rorb
inc
rsm
or
push
xorl
hlt
repnz
std
movl
aaa
shrl
mov
pop
mov
xchg
mov
aas
add
jns
insl
xchg
jbe
dec
insl
jno
xchg
out
push
jmp
pop
aad
imul
lahf
shl
pusha
fcoms
lock
push
ret
pop
pop
js
not
fwait
mov
xor
push
push
out
adc
push
jmp
sbb
adcb
pop
fisttpll
xor
jb
inc
mov
call
mov
psubusw
loop
rorl
jns
cmc
lahf
pushf
test
lret
into
insb
outsb
sub
mov
out
dec
or
xorb
movsl
arpl
and
testb
mov
cmp
inc
push
insl
cmpsl
xor
iret
clc
popa
push
lcall
orl
ret
inc
dec
dec
mov
shr
jge
hlt
sahf
cmp
jns
ljmp
and
inc
jle
cmp
lret
vdivps
test
shl
scas
push
mov
xchg
xchg
mov
mov
adc
jge
mov
cli
mov
pop
sub
push
pop
xchg
lret
push
push
sbb
push
ja
push
jae
mov
jl
inc
or
fbld
jo
mov
add
dec
mov
xchg
aad
sbb
jecxz
into
cmp
mov
in
sahf
add
jp
push
pop
cwtl
adc
stos
orl
cmp
jne
mov
inc
bound
dec
xchg
lds
cs
dec
jle
mov
xchg
and
leave
adc
andb
call
jnp
sub
lods
ja
xor
add
cs
inc
or
bt
jo
icebp
push
lahf
je
mov
cmp
jp
dec
mov
xchg
jbe
cmc
in
sub
cltd
pop
call
std
jbe
mov
leave
cmc
mov
or
sub
notl
inc
outsl
xlat
and
mov
sub
loop
in
mov
cmpsl
and
push
xchg
mov
cld
xchg
xchg
lods
dec
or
enter
push
daa
mov
call
fnstenv
jle
pop
stos
add
and
jne
int3
adc
cmp
add
xor
jo
cltd
gs
in
ret
outsb
sub
cwtl
mov
mov
pop
dec
into
push
xchg
aam
push
or
pop
cmc
cmp
loope
jl
push
adc
loopne
sbb
hlt
scas
adc
mov
fnstenv
sub
jb
dec
jnp
pop
andb
adc
fstps
daa
out
outsb
aaa
fmull
fwait
sub
test
mov
adc
fcmovnb
mov
pop
hlt
push
xchg
dec
pop
mov
push
xchg
and
sub
adc
cmp
inc
or
bound
mov
cltd
imul
and
xor
mov
popa
pusha
lcall
aad
andb
mov
daa
fnsave
xchg
push
cmc
sub
stos
inc
dec
inc
dec
jg
xchg
inc
aaa
imul
inc
xchg
fidivs
mov
dec
jne
pusha
stc
inc
in
fldcw
cmp
arpl
fsubrs
xchg
mov
mov
lret
test
outsl
icebp
cmpl
andl
xchg
outsb
sahf
jb
add
hlt
daa
mov
pop
add
adc
jbe
daa
ficomps
je
cmp
pop
lods
mov
mov
mov
lahf
test
mov
aad
cmp
jne
sub
pop
mov
lods
and
sub
test
or
adc
dec
add
or
loopne
lret
movsb
sbbl
insb
pop
jle
out
mov
and
cltd
ror
lahf
inc
add
jno
mov
aaa
pop
iret
out
pop
add
pop
lds
lret
sbb
hlt
mov
sbb
ficoml
sub
xchg
dec
ucomiss
mov
dec
cmp
add
add
jg
inc
jp
into
lahf
aaa
movsl
ret
jns
stc
cmc
sbb
pop
push
dec
dec
arpl
sbb
int
or
lods
fcmovnbe
xchg
and
jp
je
out
outsb
in
movsl
cmp
icebp
xchg
leave
dec
jb,pt
xor
icebp
loope
cwtl
jl
mov
sbb
cli
jge
data16
pop
sub
lret
fistl
inc
adc
out
pop
in
data16
fcompl
movsl
pop
ret
mov
pop
sbb
loop
sti
test
mov
jp
push
sbb
std
mov
pop
and
xchg
jl
fldt
and
pop
scas
push
loop
push
inc
xchg
push
fidivs
inc
insb
sub
sahf
sbb
lret
es
adcb
adc
fbstp
inc
popa
sub
je
js
pop
pop
pop
jl
scas
or
loop
push
sub
and
and
iret
pop
mov
int3
add
xor
push
icebp
aas
fcoml
pop
push
lods
sbb
nop
inc
scas
pop
sahf
shll
inc
push
mov
out
mov
jle
mov
inc
nop
dec
inc
sub
mov
dec
outsb
push
js
mov
inc
in
orb
xchg
pop
add
mov
testl
out
xchg
test
push
dec
nop
inc
mov
leave
sbb
enter
sub
iret
mov
imul
add
push
pushf
add
add
sub
jbe
xor
xchg
std
mov
cltd
sti
imul
lock
xchg
sbb
nop
jae
sbb
in
mov
or
cld
fstps
mov
mov
inc
fdivrl
aaa
pusha
push
jae
add
cmp
in
int
push
sbb
push
jbe
sub
lods
mov
pop
hlt
jp
arpl
scas
cld
data16
fdiv
stos
push
leave
test
mov
mov
loopne
sbb
inc
fwait
xor
sub
cli
cli
mov
jmp
lahf
and
cmp
jle
adcl
aad
popf
pop
out
jmp
fdivrs
sub
stc
lock
dec
stos
sub
inc
sti
and
int
add
notl
pop
bound
jg
aam
inc
clc
roll
sbbl
jg
adc
inc
in
lds
fadds
lock
sbb
sti
add
repnz
cli
push
cmp
sbb
jo
add
inc
pop
sbb
loop
popf
insb
adc
pop
mov
and
mov
cld
iret
aaa
jp
xlat
push
or
aaa
adc
sub
xor
mov
mov
xchg
xchg
cmp
popa
fsubrp
lret
jg
pop
adc
push
lods
or
mov
mov
mov
pop
jmp
pop
xlat
jle
outsb
jmp
xchg
cmp
jle
in
daa
fiadds
shlb
stos
fdivrl
mov
movsb
jne
popa
and
sub
cmpl
fnstsw
add
pop
iret
loop
mov
sbb
mov
test
inc
lahf
mov
xchg
add
add
lret
lret
popa
test
jne
std
cmp
stos
and
mov
loopne
mov
pop
lret
cmp
imul
mov
stc
xor
iret
repnz
iret
ja
jb
cmpsl
add
ljmp
push
mov
lret
jl
test
cmp
xchg
mov
push
daa
and
sub
inc
mov
mov
repz
cmp
cmc
adc
push
dec
out
lds
clc
mov
xchg
mov
and
adc
jb
mov
xor
sub
mov
xor
xor
pushl
jne
mov
pop
rolb
orb
ss
lcall
xchg
sbb
mov
lret
aam
imul
add
dec
rorl
and
aas
sub
mov
call
push
mov
jno
cmpsl
cld
fwait
es
sub
cmpsl
push
pop
daa
pushf
pop
test
add
lea
jecxz
fdivp
mov
jecxz
or
inc
push
incl
test
lahf
inc
hlt
movsl
imul
pop
mov
push
cld
cltd
dec
fimuls
loopne
mov
or
std
pushf
int
rcr
lods
cmp
lea
jge
push
out
inc
pop
daa
pop
and
sub
mov
shl
mov
cld
xchg
insl
sub
pushfw
sbb
xor
popf
add
sti
push
xchg
repz
mov
or
mov
test
adc
pop
orl
jmp
mov
xor
mov
ss
adc
pop
imul
jbe
lock
arpl
int
adc
mov
xlat
cwtl
int3
push
data16
in
adc
sbb
in
sub
add
jno
push
loop
stos
in
lahf
add
adc
imul
xor
fldenv
mov
sub
add
and
cmpsb
movsl
inc
xlat
stos
dec
in
lret
inc
dec
jno
ja
or
add
les
lret
outsb
xor
ja
mov
xchg
lds
add
out
imul
setbe
jmp
xchg
push
cmovnp
lods
outsb
in
sti
xor
pop
sub
mov
lcall
les
mov
leave
in
mov
pop
add
movsb
in
pop
jbe
pop
inc
negb
jge
mov
pop
fidivrs
xor
add
sub
fwait
mov
inc
sub
fstpt
test
sbb
fs
shll
loop
cltd
mov
inc
fnstenv
fs
xlat
xchg
or
es
fsubrl
aaa
or
fdivrl
mov
mov
stos
pop
jns
int3
push
out
mov
jne
push
aaa
out
repz
sub
popa
cmp
sahf
into
mov
imul
and
mov
dec
cltd
push
in
mov
mov
imul
decl
pop
popf
mov
scas
jbe
es
push
imul
push
mov
adc
adc
mov
xor
xchg
adc
or
pop
cld
and
xchg
das
cli
dec
mov
dec
std
lea
add
rcr
mov
into
std
sub
add
aaa
push
insl
shrb
add
xor
jg
xchg
lret
cmp
rol
sub
pop
sub
xor
frstor
int3
les
adc
ds
pushf
cld
push
repz
fistl
mov
and
dec
fsubl
aaa
inc
aam
mov
cli
dec
and
mov
sub
dec
inc
sub
insb
mov
mov
movsl
popf
cmpsb
stc
aas
lret
lea
dec
je
xchg
sbb
xchg
push
and
push
clc
shl
mov
mov
shl
inc
mov
mov
inc
sbb
pop
cmpl
pop
mov
iret
dec
add
mov
aaa
aaa
cmova
xlat
les
xchg
sbb
sbb
das
push
xchg
mov
push
xor
movsl
jge
adc
rorb
xorl
int
in
xchg
idivb
or
adc
bound
mov
xor
xchg
dec
inc
imul
jecxz
sub
loop
insb
add
out
mov
push
pushf
lret
test
jp
stos
les
mov
stos
or
jecxz
sub
leave
hlt
push
sbb
mov
dec
push
pushf
fwait
dec
push
jb
cmp
jmp
dec
push
xchg
and
or
push
cmp
jle
movsl
jo
mov
clc
mov
jle
xchg
jne
insb
jp
inc
sbb
sbb
adc
lock
sub
and
inc
arpl
jmp
jo
xchg
dec
sti
mov
fs
xlat
xchg
insl
push
dec
icebp
leave
dec
xchg
xchg
out
into
mov
mov
fimuls
test
cmp
fists
daa
pop
lcall
shll
ds
xor
mov
xor
fistpll
dec
xor
shlb
call
loopne
mov
sarl
pop
mov
or
adc
mov
ds
loope
mov
xor
inc
sbb
jns
or
out
fdivrl
sub
xchg
subb
or
dec
decl
or
out
es
rcll
jmp
push
cmp
or
imul
add
dec
dec
pop
or
mov
cwtl
rorl
pop
cmp
dec
imul
mov
mov
adc
test
mov
pop
jg
std
dec
test
stos
mov
jg
aaa
and
mov
stos
pop
pushf
in
pushf
or
xchg
jl
sbb
cmpsl
inc
gs
push
add
shlb
add
jmp
cmp
bound
jne
lds
or
and
aam
scas
lcall
pop
in
mov
dec
imul
inc
cmp
mov
fsub
mov
add
xor
dec
daa
ds
lods
loopne
dec
sub
jmp
gs
aad
and
inc
lock
mov
pop
jo
lock
or
or
mov
push
pop
sbb
ljmp
inc
js
aaa
andb
mov
add
xor
jae
xchg
cmc
mov
mov
je
push
jb
and
pop
stos
sub
je
xor
and
mov
or
sbb
imul
mov
jecxz
sub
movsl
ds
ss
push
mov
std
hlt
call
inc
dec
push
lods
jne
xchg
cmpb
aaa
paddusb
pop
push
popa
dec
test
shll
clc
jo
test
mov
xchg
xchg
sti
mov
rol
outsb
testl
and
mov
fiaddl
and
cmp
clc
inc
lcall
mov
mov
jns
dec
push
inc
mov
call
mov
enter
and
sbb
gs
daa
lock
daa
lods
rcrl
icebp
xor
inc
jmp
mov
mov
std
push
repnz
std
pop
rolb
into
andl
daa
insl
xor
inc
test
mov
imul
ret
xchg
std
push
mov
popa
lret
pop
ds
adc
test
jle
dec
cmpsb
sub
push
mov
call
in
jmp
pop
push
inc
jo
test
dec
std
xor
push
lock
cltd
or
mov
loope
test
cmpsb
cmp
cmc
movsl
dec
daa
mov
mov
dec
lods
lcall
pop
and
push
bound
fbld
sbb
hlt
repnz
push
lods
jle
test
inc
addr16
aas
fwait
sub
bound
push
mov
int3
adc
std
mov
push
xorl
mov
into
out
das
mov
fwait
push
push
in
out
mov
ds
mov
movl
and
cmp
dec
movb
add
pop
fwait
jne
pop
push
movsb
mov
adc
push
ficoml
mov
das
fidivl
sbb
or
test
cwtl
push
sbb
add
js
lret
lods
sub
ret
lods
idivl
jg
dec
fwait
stos
pop
leave
inc
daa
in
mov
adc
mov
mov
das
xor
outsb
adc
jge
and
bound
cmp
imul
iret
or
jbe
je
mov
int
sbb
pop
pop
nop
out
push
mov
daa
fcom
mov
add
in
movsb
adc
nop
mov
adc
xchg
jge
rcrb
and
add
scas
outsl
push
jmp
imul
lahf
xchg
mov
subb
shll
in
cmp
fmuls
aas
cmc
mov
mov
dec
push
das
dec
jl
push
outsb
or
cmc
repz
call
and
cmp
push
cmp
mov
mov
mov
mov
ljmp
sbb
lahf
cwtl
aas
aaa
ret
pusha
jl
popa
jle
hlt
cmc
fwait
mov
add
lods
fwait
dec
cmpsb
push
adc
lock
fisttpll
mov
int
push
js
xor
pop
push
ja
xchg
add
pop
shlb
and
testb
cmp
push
or
jg
xor
jle
cmp
mov
jecxz
rclb
shl
dec
out
stos
inc
and
cmpsl
xchg
mov
aas
test
xor
addr16
std
lcall
and
pushf
mov
cmp
adc
add
ret
ret
int
xor
roll
ss
sbb
sub
mov
outsb
call
cld
add
fs
lods
and
loope
cmpsl
dec
cmpb
test
shr
push
inc
dec
jecxz
cmp
jmp
mov
xor
fnstsw
insb
icebp
push
mov
jo
xchg
icebp
ja
mov
sub
jb
dec
mov
aaa
dec
mov
xchg
or
movsb
inc
and
xchg
leave
push
std
test
xor
int
test
sarb
jge
add
repnz
mov
push
xrelease
push
enter
movsl
cmp
loope
sub
pop
mov
mov
test
je
sbb
sahf
fldcw
loopne
pop
sbb
inc
xchg
xor
push
or
test
imul
std
dec
cltd
or
mov
ret
testb
xor
sarb
dec
ja
inc
mov
jecxz
jp
movsb
mov
inc
jnp
lahf
xor
leave
pop
push
in
test
sti
push
fs
or
movsb
fnstenv
fimull
bound
lahf
cmp
xchg
dec
and
xchg
loope
push
mov
xor
pop
sub
pusha
jge
mov
pop
out
jnp
pop
push
pop
mov
sbb
or
xchg
sub
sbb
push
pusha
xor
imul
add
pop
mov
fiaddl
sbb
mov
inc
sub
movsl
sub
movsl
addr16
rclb
dec
mov
inc
pop
dec
out
cs
test
test
aas
add
mov
mov
popa
stc
cmp
sti
fcomi
sti
std
dec
insl
mov
fisubl
nop
sarl
into
or
add
stc
arpl
inc
mov
lcall
fisubs
and
mov
inc
xor
filds
in
out
dec
jge
lods
fidivrl
stos
mov
add
adc
stc
inc
xorl
movsl
lea
push
leave
cmpsl
shll
lret
into
das
pop
movsb
daa
jae
cmp
push
mov
xlat
sub
pop
cwtl
pop
fcmovnb
sti
adc
lcall
push
rolb
repnz
mov
or
mov
sbb
and
jnp
pop
add
sysret
adc
xchg
lods
add
xchg
ret
cwtl
adc
loop
adc
fucom
push
das
or
lret
lea
mov
notl
adcb
sbb
jmp
jge
xchg
push
jmp
popa
loop
and
cmp
popf
xchg
pop
sub
pop
push
test
dec
xor
push
push
mov
jo
test
push
out
adc
cmpsb
cmp
lods
xor
mov
out
mov
xchg
out
dec
dec
lret
inc
outsl
add
outsb
mov
mov
arpl
stc
scas
add
in
outsl
lcall
add
movsb
xchg
repnz
push
sbb
aas
scas
and
test
adc
push
pushf
test
test
std
ret
mov
lds
rorb
scas
inc
les
andl
add
lret
pushf
arpl
gs
insl
repnz
adc
xchg
adc
repz
pop
fwait
imul
jne
cs
ds
aaa
push
test
sti
loope
cmpl
push
loope
inc
mov
xor
xor
enter
je
xchg
mov
and
inc
add
sbb
fldenv
mov
mov
sbb
adc
scas
mov
dec
les
push
sbb
mov
pop
mov
mov
cld
call
movsb
lret
ret
lret
outsl
filds
mov
xor
lret
fsubrl
adc
dec
sub
lret
sbb
out
dec
jo
mov
xchg
add
adc
outsl
cmp
cwtl
sbb
xor
inc
sbb
and
push
mov
dec
lds
xchg
pop
mov
mov
pop
aaa
xor
sbb
xchg
cmpsb
add
cwtl
jg
enter
or
cmp
lret
test
repz
test
mov
ss
lret
shll
rol
mov
cmp
repz
jge
push
adc
rolb
fdivs
push
inc
mov
test
mov
dec
add
aas
scas
mov
push
mov
xorb
inc
mov
mov
andb
xchg
mov
jmp
xorl
outsb
loopne
imul
cli
mov
xchg
jle
cmpsl
pop
fdivl
cmpsb
cmp
test
xor
lret
addr16
in
mov
jbe
cli
jne
mov
pop
jp
jg
outsl
out
fsts
mov
pushf
leave
icebp
jno
ds
pop
jno
inc
test
clc
push
mov
xchg
cmpsl
popf
orl
cltd
cmc
jb
and
insb
xchg
jo
into
xchg
jns
jns
cmp
loop
ret
out
jl
sbb
or
dec
add
jno
leave
pop
fwait
pop
push
and
ljmp
mov
dec
fs
ds
insb
sbb
outsb
xchg
fs
sar
test
adc
xchg
adc
mov
and
cmpl
inc
and
ret
push
pop
xchg
add
pop
leave
adc
and
mov
push
rclb
and
lods
push
ja
xchg
sub
out
jnp
jno
das
mov
cwtl
mov
adc
mov
jle
jecxz
push
je
mov
in
mov
in
rcr
decb
popf
inc
test
jno
jmp
lock
stos
xor
mov
sub
cmc
or
or
gs
jno
pop
jecxz
imul
push
mov
scas
xchg
mov
mov
les
call
xlat
sbb
gs
dec
fmuls
push
dec
loop
inc
test
clc
pusha
inc
sub
push
arpl
xchg
jbe
adc
je
pop
fwait
sub
loopne
and
sbb
imul
add
clc
imul
xchg
mov
subb
lahf
dec
mov
dec
insl
imul
stc
je
cwtl
jno
lock
das
and
lds
jl
pop
outsb
cmp
not
int3
pusha
cmp
pop
jbe
xlat
jecxz
or
mov
out
rol
push
sbb
sbb
in
aam
cmpsl
xchg
inc
xor
push
and
hlt
lret
dec
outsb
dec
xor
rep
mov
gs
push
xor
lahf
pop
ror
movsl
pop
inc
mov
fsubl
mov
dec
add
fcompl
dec
or
jp
dec
pop
push
shrb
lods
push
cli
arpl
add
push
xchg
mov
sub
push
pop
adcl
dec
push
imul
cmpsl
outsl
dec
fs
cmp
mov
ret
xor
xchg
adc
pop
cmc
mov
fisttps
test
aas
leave
das
add
jmp
imul
repz
mov
mov
inc
mov
sbb
xchg
ficoml
outsl
popf
insb
insb
push
out
daa
dec
das
dec
push
mov
add
push
inc
sub
push
and
mov
leave
sub
test
testb
jp
ss
out
aaa
popa
test
cs
cmp
cmp
pop
xchg
stos
stc
push
add
add
mov
clc
lods
arpl
mov
adc
inc
nop
stc
cltd
or
mov
and
pusha
jne
adc
sbb
xor
lock
pop
mov
les
rol
add
jp
pop
sub
ret
push
into
sub
adc
js
pushf
jne
xchg
cltd
imul
or
in
std
add
addr16
arpl
jne,pt
jo
and
push
cmp
mov
xchg
mov
test
lock
sub
pusha
or
sub
fisubrl
and
clc
hlt
pusha
lods
out
test
popa
cmpb
mov
test
push
cmc
or
test
pop
ret
add
inc
es
mul
into
push
jle
sub
inc
mov
sahf
lds
daa
pop
cwtl
xchg
push
adc
in
sub
out
adc
fs
pop
cmc
jp
lea
mov
cmp
adc
aad
popf
ja
push
jmp
ficompl
je
xor
addr16
loopne
or
out
sub
adc
mov
push
or
ss
pop
repz
fidivs
mov
das
inc
add
imul
fwait
push
enter
or
gs
inc
fcomip
imulb
xchg
lret
xlat
mov
loope
insb
and
xor
or
lds
gs
fnstsw
mov
xor
fstl
movsl
sbb
push
cmp
pop
xchg
bound
fldenv
stos
popf
jb
lret
and
pop
xor
sub
fisubl
push
cli
sahf
js
jbe
shr
inc
xchg
sub
mov
cmp
mov
pop
xor
iret
mov
stos
xchg
test
dec
xlat
jmp
mov
mov
jno
cwtl
in
add
repnz
hlt
cld
cmp
jmp
loopne
xlat
das
gs
lret
ret
int3
mov
and
pusha
loope
cs
aam
repnz
in
cmp
insl
cmp
ss
jo
loop
movsb
repz
cs
jnp
stos
mov
int
sbb
icebp
divb
clc
mov
fsubrl
jmp
imul
pop
xor
inc
adc
mov
cmp
push
add
stos
xor
das
aam
push
movsb
ss
sub
or
pop
add
jbe
push
subb
sub
stos
lret
sub
lods
xchg
dec
adc
add
adc
push
cmp
jg
int
imul
test
xchg
jle
rcll
fistps
rcll
mov
in
aam
or
ds
lcall
ljmp
and
jno
sti
stc
pop
adc
pop
ja
loop
mov
sbb
xor
or
dec
xchg
adc
out
dec
loope
mull
mov
inc
stos
int3
xor
fnsave
sahf
sahf
or
xchg
xor
inc
fidivs
cmp
mov
fistpll
ja
inc
mov
add
xchg
push
lret
fwait
jp
add
fisubl
push
cmp
and
pop
mov
imul
fldenv
cmp
xor
mov
stos
sti
mov
sub
cmpsb
lahf
add
add
or
lcall
mov
add
lcall
adc
subb
inc
xchg
fiadds
xchg
and
cmp
enter
pop
stos
dec
fucomip
loopne
jnp
out
aaa
imul
adc
in
jmp
mov
pop
add
sahf
or
mov
flds
jecxz
pop
sbb
dec
inc
jno
lock
jne
rcrl
pop
sbb
cwtl
xor
xchg
xchg
insl
fsubs
stc
push
movsb
dec
mov
arpl
lods
push
cmp
xchg
adc
cmp
rclb
inc
jb
mov
pop
pop
fldl2t
lods
mov
sub
mov
add
pusha
or
xorl
jnp
test
ret
movsb
hlt
cltd
mov
sysexit
dec
inc
int
cs
jmp
jnp
xor
xchg
fisttpl
iret
mov
and
lods
inc
or
jmp
mov
pop
aaa
adc
shll
mov
mov
stos
aas
mov
pop
mov
pop
push
fisubrl
mov
subl
pop
xchg
pop
and
std
mov
pop
dec
cltd
cwtl
dec
xor
inc
sbb
dec
xlat
ljmp
jg
jg
lods
adc
nop
push
mov
cmp
gs
or
jmp
mov
cmp
dec
and
lock
xchg
test
aaa
jle
and
jno
leave
sbb
ds
jle,pt
mov
js
jmp
test
xor
mov
pop
movsl
lret
les
popa
loope
or
fcompl
lds
scas
ds
jae
enter
mov
stos
jg
in
and
jno
lcall
xchg
jo
popa
add
insl
dec
xor
rcr
pop
vxorpd
nop
mov
and
test
pop
lds
jnp
fimull
lods
dec
push
or
fidivl
xchg
mov
fcmovb
add
jle
mov
test
in
xor
fdivp
aaa
add
xor
adc
dec
popf
sbb
jns
test
decl
and
decb
clc
lret
jl
pop
mov
xor
mov
xchg
decb
fists
fbld
dec
push
xlat
push
popf
dec
lcall
cmp
cmpsl
sub
dec
jns
or
jnp
xchg
test
lods
jae
xchg
cli
aaa
xor
push
scas
mov
lret
int
jp
jge
adc
mov
outsl
adc
sbb
xchg
ret
xchg
std
jle
adc
push
mov
jae
or
test
daa
daa
es
rorb
rorb
and
in
mov
adc
mov
outsl
setg
pop
mov
xchg
dec
idiv
ss
xor
pusha
lahf
jno
ja
and
jmp
les
push
add
cmp
into
in
imul
popf
pop
nop
movsl
pop
xchg
and
nop
or
aas
push
sarl
lret
cmc
imul
mov
xlat
nop
std
dec
rorb
negl
fmull
xlat
cmc
scas
std
out
rorl
nop
pop
int
repz
lret
lds
lret
sbbb
xchg
xchg
jmp
nop
mov
ret
and
sub
in
sbb
push
out
vmwrite
mov
mov
popf
subb
and
rcll
dec
out
push
mov
xchg
mov
outsl
arpl
aam
pop
pop
inc
pop
mov
daa
push
int3
ja
pop
xchg
leave
or
xchg
mov
fsubl
cmc
pusha
ret
push
mov
es
cmp
push
ds
mov
sub
xchg
sarb
nop
xor
adc
dec
jp
cmpsl
out
mov
xchg
sbb
mull
xorl
lods
je
arpl
sbb
mulb
mov
jns
sbb
dec
call
pop
test
mov
mov
sbb
sub
aad
or
mov
xor
dec
push
sub
fcomi
xchg
cli
repz
hlt
xchg
je
rcl
test
xchg
sbb
addr16
or
pop
sti
stc
jmp
pop
adc
insb
add
mov
call
ljmp
iret
rol
aad
inc
insl
or
jns
mov
fcmovnu
test
decl
in
call
out
je
xchg
jg
scas
cmp
mov
pop
inc
xchg
repz
cwtl
ja
aas
jg
xchg
jl
xor
inc
xchg
pop
hlt
add
mov
or
or
push
mov
pop
push
repz
popf
or
loope
jno
inc
xchg
xchg
fisubl
jnp
daa
fldl
jge
xchg
xchg
fs
and
std
pop
inc
fs
adc
adc
stc
loope
lock
xor
addb
add
mov
push
mov
into
push
add
clc
hlt
sahf
pop
mov
shlb
fs
addr16
jne
sbb
lahf
popa
dec
xchg
cmp
jl
int
iret
inc
sub
or
fsubrs
cwtl
pop
out
fldcw
or
mov
ret
fsubr
cmp
pop
shl
inc
adc
dec
jae
daa
push
mov
test
rcrb
add
insb
imul
fisubs
push
js
jmp
xor
ffreep
xor
sbb
xorb
jae
cli
js
push
mov
js
cld
lahf
divb
jp
mov
push
dec
daa
ds
sbb
dec
hlt
jns
and
mov
and
enter
lcall
adc
jp
out
xchg
pop
pushf
cwtl
push
repnz
lahf
mov
lea
popa
testb
out
and
pop
lods
or
xchg
xor
and
push
push
push
push
ds
inc
push
xor
add
mov
xchg
ljmp
push
dec
push
mov
rcrl
stos
addr16
sbb
arpl
jmp
push
lock
sbb
mov
xor
jl
int
movsl
sahf
not
sub
ret
sbb
pop
sbb
fsubl
jne
in
enter
or
or
push
jl
jle,pt
fiaddl
in
xlat
or
jmp
sub
push
mov
jne
cmp
in
mov
push
inc
imul
cs
movsb
push
nop
lret
sub
push
mov
or
bound
adc
mov
sbb
or
popf
adcb
cmp
pop
paddq
adc
mov
dec
insb
mov
jl
cld
add
js
popf
faddl
push
insb
jns
cmp
cli
cmpsb
lcall
or
add
dec
pop
cmc
cmp
jae
cmp
xor
divb
mov
movsb
out
push
fimuls
xchg
addl
pop
push
xchg
push
daa
cmp
sub
int
iret
pop
inc
xchg
sarb
int3
mov
addb
fstp
inc
fs
jne
mov
mov
mov
dec
data16
sbb
mov
std
adc
inc
mov
std
xor
pop
add
movsb
and
inc
inc
ds
cli
fiadds
flds
fmulp
dec
adc
divps
les
sbb
scas
icebp
test
fucomi
inc
inc
dec
mov
or
loop
mov
and
inc
stos
jl
movsb
loope
aam
repnz
mov
cwtl
xchg
adc
stos
xor
icebp
dec
sbb
cmc
repnz
add
sbb
push
cld
pop
push
add
jge
jno
cwtl
movsb
mov
xchg
inc
and
add
xor
movb
jo
xchg
pop
mov
dec
stc
test
cmpsl
add
push
jge
rcr
lods
and
push
aas
ss
cmp
mov
call
mov
jb
cmpsb
xchg
fnstcw
fstps
loopne
sub
gs
mov
sbb
in
lods
pop
rolb
test
or
mov
mov
call
cmc
mov
inc
aam
sbb
pop
inc
lods
push
pop
insb
ljmp
dec
mov
pop
cmpl
jl
add
fcomip
mul
ds
out
lods
cwtl
pop
sub
push
bound
dec
fbstp
jge
mov
data16
dec
std
into
xlat
xchg
mov
jne
int
mov
das
jge
xchg
arpl
outsl
push
into
adc
or
bound
xchg
dec
ror
adc
dec
add
jl
adc
pop
adc
xor
sbbl
mov
int3
pop
xchg
mov
push
add
jl
pop
rcl
pop
subb
jle
dec
xor
in
fdiv
jbe
adc
sbb
fisttps
dec
stos
and
mov
xchg
loop
cmp
subl
mov
inc
mov
lea
ss
addl
xor
mov
inc
dec
lods
xchg
inc
push
dec
push
xchg
imul
cmpsl
int
stc
xchg
mov
dec
xchg
adc
pop
xchg
pop
dec
jge
jg
negl
sub
jbe
xchg
sahf
xchg
fs
sub
fdivrs
sub
cmp
ret
aaa
loope
dec
sti
or
loope
pminsw
int
and
ror
adc
xorl
sub
dec
out
call
and
sbb
mov
dec
and
mov
jle
mov
push
jno
test
iret
jecxz
inc
mov
daa
dec
sahf
lock
test
add
cmp
scas
xchg
cmpsl
lock
mov
pop
std
jno
inc
push
lret
data16
xchg
xchg
loopne
dec
aaa
pop
test
es
daa
xchg
mov
ffree
pop
insl
into
jne
test
pushf
sbb
std
sbb
aas
dec
insb
cmp
gs
sub
adc
xchg
cmpsl
das
sti
mov
in
or
inc
push
idivl
daa
pop
mov
xor
jne
mov
sbb
pop
mov
push
and
insb
xchg
rcrb
jecxz
adc
aad
cmpsb
arpl
jg
pop
aam
lds
push
add
subl
jmp
pop
mov
imul
ret
or
sahf
xchg
adc
sbb
jns
xor
pop
int
test
pusha
cmpl
sub
xchg
dec
icebp
cli
sbb
xchg
out
xchg
ss
sti
push
push
and
xor
test
add
inc
push
push
out
lods
inc
sub
lock
stos
cmpsb
add
sbb
je
jg
jnp
imul
cwtl
in
pop
fidivs
xchg
imul
push
int3
imulb
test
dec
cmc
out
fs
mov
push
xor
jg
into
ret
xchg
and
jge
add
push
pop
leave
ret
dec
lret
lahf
int
faddl
add
fldl
or
insb
leave
imul
dec
sbb
xor
addb
or
jb
arpl
xor
popf
add
mov
adc
out
imul
pushl
push
mov
std
dec
fldt
sub
clc
insl
insl
mov
push
pop
clc
movsb
pop
mov
hlt
mov
es
pop
sub
cs
add
popf
xor
push
xor
enter
mov
pop
push
jns
cmp
xlat
jl
out
lds
xchg
lret
sub
dec
jl
std
dec
sbb
call
or
inc
lret
add
push
xchg
nop
sbb
data16
mov
xchg
mov
dec
imul
and
mov
jp
mov
and
or
cmp
or
push
xchg
addr16
dec
or
adc
jl
adc
push
mov
ficompl
cwtl
lock
mov
enter
dec
or
fiaddl
mov
sub
daa
push
sbb
add
sarl
or
loop
mov
lds
dec
pop
mov
pushf
fsubl
aad
into
pop
pop
stos
inc
pop
mov
ret
mov
fs
mov
mov
dec
dec
lret
adc
xchg
fmull
in
pop
nop
push
mov
shlb
sahf
imul
mov
jo
pusha
nop
adc
mov
ret
inc
sbb
pusha
sub
push
inc
fnsave
adc
add
and
imul
dec
stc
or
sbbl
aam
inc
loope
add
leave
or
mov
cmp
push
fwait
adc
jae
in
cmp
xchg
xchg
adc
jns
out
fwait
ss
loop
cmp
fdivrs
xchg
call
xor
adc
or
add
movq
mov
ds
lods
fiaddl
pusha
mov
inc
dec
mov
dec
fbstp
jb
xchg
cmp
ja
decb
mov
repz
fs
das
std
in
movsb
imul
clc
mov
sbb
or
ficoml
scas
adc
call
sub
popa
cs
dec
arpl
jnp
aam
push
stos
in
pop
mov
cmp
mov
xchg
jmp
js
inc
dec
stos
call
aaa
hlt
adc
jns
mov
repz
ss
push
dec
adc
cmpsl
pop
pop
xchg
mov
mov
sbb
pop
mov
dec
ret
in
xchg
mov
rolb
mov
push
mov
push
lret
jnp
mov
mov
fs
hlt
mov
pushf
dec
add
test
sub
cmpsb
in
push
imul
adc
pushfw
clc
mov
inc
sbb
lea
arpl
arpl
dec
sub
cmp
push
xor
imul
xor
push
test
add
cltd
testl
test
popf
push
movsb
ror
fimull
repz
lcall
cmc
inc
loope
cmp
sti
data16
fs
sub
jno
push
mov
jl
int3
ficomps
jnp
xor
sbb
and
cmp
xchg
push
fistl
xchg
fidivs
in
jg
dec
sbb
xchg
stos
cmpsb
and
add
push
mov
dec
cmc
ja
dec
fists
scas
cli
mov
pop
mov
cld
shll
mov
xchg
insb
fadds
mov
test
ljmp
inc
adc
xor
xor
xor
rclb
adc
mov
mov
pusha
mov
or
jl
sub
or
mov
or
je
loop
in
or
sahf
lods
pop
mov
xor
mov
test
adc
repz
push
jle
rcr
inc
pop
sbb
movsb
lods
lahf
push
inc
xchg
ja
sbb
sub
ljmp
mov
push
mov
stos
leave
xchg
in
mov
mov
pop
push
mov
outsb
adc
test
fnstenv
sbb
out
fiadds
popf
arpl
jle
out
movsl
and
fs
xchg
jl
cltd
xchg
adc
es
adc
out
jge
xchg
cmp
orb
into
dec
lret
pop
outsl
sbb
push
movsl
lret
xchg
mov
pop
fidivrl
push
add
push
mov
lods
adc
aam
pop
loope
push
pushf
and
fcmovnbe
repnz
push
jnp
lahf
lret
jb
seta
mov
pop
and
adc
add
subb
dec
lcall
add
lahf
loopne
mov
les
push
out
sub
out
mov
in
inc
adcl
stos
rorl
adc
daa
or
aam
jmp
xor
cmp
xor
and
dec
les
push
ljmp
mov
fisttps
in
ror
sub
cmc
je
movsl
sub
stos
sbb
imul
sbb
mov
add
add
gs
jb
loop
add
jb
pop
jno
or
aad
dec
pop
idivl
adc
divb
in
inc
xor
lods
sub
leave
shl
jge
loope
xchg
scas
sbb
fsubs
imul
sub
or
lods
icebp
out
jne
insl
outsb
jbe
in
mov
inc
pop
data16
mov
push
mov
dec
mov
jo
call
or
pop
mov
pop
or
repz
cwtl
fwait
imul
adc
pop
sub
andl
lret
xorb
insb
push
and
cmp
add
insl
xor
into
lahf
mov
push
addb
jmp
and
enter
clc
in
pop
sub
xor
call
xor
push
pop
cmp
mov
xchg
lds
call
mov
cmp
dec
and
sub
neg
pop
rclb
loop
stc
jp
iret
fcompl
inc
leave
mov
popf
inc
mov
pop
mov
jnp
mov
cmp
and
repz
add
in
and
push
data16
cmp
mov
hlt
repnz
mov
cwtl
dec
dec
in
test
insb
xchg
fdivl
xlat
mov
xchg
mov
lds
sbb
cwtl
rcll
scas
nop
int3
and
movsb
mov
test
sbb
test
testb
jle
mov
aad
sub
xor
rcrl
fwait
inc
fistpl
ss
lcall
push
mov
mov
dec
je
sarl
mov
cli
adc
lock
pop
addl
cwtl
mov
cmp
jge
in
xor
rorl
fcmovb
ja
jo
ret
ret
lcall
add
push
icebp
lret
pusha
jbe
sahf
inc
push
lods
mov
mov
repnz
jmp
popf
out
mov
dec
jmp
adc
je
xor
imul
jmp
mov
mov
mov
push
or
ficomps
xbegin
jmp
pop
es
jl
pop
jnp
or
push
inc
dec
sub
pop
sbbb
icebp
cmpsb
sub
xchg
and
int
mov
inc
inc
data16
outsb
and
imull
cwtl
add
sub
enter
sub
dec
sub
insb
ret
add
loopne
in
ds
push
ret
cltd
sub
fsubrl
sbb
pop
add
enter
push
add
xlat
sahf
push
mov
mov
int3
inc
lock
fidivrl
neg
xor
cs
mov
pop
daa
xchg
jecxz
cli
xchg
fmull
xor
lods
add
xor
gs
sub
inc
sbbb
jmp
shll
cwtl
jnp
push
or
or
scas
xor
fcoml
nop
and
push
test
and
nop
lahf
mov
je
mov
mov
inc
mov
stc
das
jno
or
push
pop
pop
xorl
hlt
fstpt
jnp
adcb
aam
ss
adc
ja
or
push
out
loopne
dec
xchg
imul
push
out
pop
mov
sbb
inc
add
and
xlat
int
cmc
mov
fistpll
and
add
js
insb
leave
push
xlat
or
hlt
je
not
mov
leave
enter
cmp
out
ljmp
pop
sbb
gs
lds
enter
inc
inc
and
aaa
mov
sbb
ror
les
adc
movsl
xchg
cmp
sbb
outsb
mov
call
aaa
adc
jae
stos
sti
out
sbb
xor
push
dec
insb
mov
push
xchg
mov
xchg
ja
cld
lret
jg
cld
les
sbb
loopne
mov
int
sbb
jns
adc
and
cs
in
shr
ret
call
cmpsl
das
push
inc
xor
movsl
sahf
and
and
jp
ss
mov
mov
insl
xchg
loop
mov
push
inc
mov
mov
jnp
fdivs
movsb
addr16
sub
fimuls
pop
sub
idivb
xor
sub
sub
ljmp
mov
inc
jns
mov
and
mov
xchg
and
fmull
push
sbb
mov
orl
cmpsb
jb
sar
xchg
neg
lds
push
int3
add
mov
xchg
push
mov
push
shrb
lcall
dec
push
out
sbb
out
xchg
nop
inc
push
scas
or
stos
mov
das
add
mov
push
out
xor
mov
loope
movsl
cli
pop
sti
add
xor
mov
ret
xor
popa
subl
sbb
push
scas
aaa
lock
inc
mov
arpl
mov
xchg
pop
outsl
dec
stos
push
popa
sub
movsb
andb
leave
mov
jg
pop
mov
addr16
mov
lock
ja
xor
lahf
iret
cmp
jecxz
mov
ret
out
rcl
roll
dec
sti
mov
xchg
rclb
shl
mov
mov
and
push
andb
lret
jae
xchg
rorb
ljmp
lret
negl
xchg
cmp
and
outsl
add
test
mov
shll
push
or
push
push
mov
xchg
out
loop
lret
test
ja
test
and
cmpsb
ja
adc
inc
jo
sbb
leave
cmpsb
rcl
repz
stos
cmp
push
outsb
lret
sbb
mov
lock
stos
lahf
and
pop
ss
mov
jnp
cmc
es
popa
push
aam
push
rorl
lret
jbe
std
cmp
fbstp
and
xor
xor
stos
jmp
adc
outsl
idivb
xchg
or
cli
sar
bound
lock
test
test
icebp
adc
jg
pusha
fsub
push
insl
jb
jne
lock
xchg
movsb
in
sbbb
inc
inc
cmpsl
mov
or
and
jne
je
dec
incb
pushf
aam
cmp
sub
cmpsl
aaa
test
xor
pop
loope
push
or
js
int
call
rclb
mov
cld
fiadds
mov
inc
sbb
hlt
lea
fstp
inc
fsubrl
fs
out
in
pop
jecxz
xchg
dec
adc
hlt
lods
mov
and
xor
sub
sbb
imul
outsl
adc
test
or
and
shrl
xchg
xlat
jno
dec
ret
aad
xchg
adc
pop
xchg
fstps
daa
jge,pn
mov
je
aaa
insl
mov
shl
pop
jae
mov
adcb
fldl
addl
popf
stos
icebp
jns
out
scas
out
divl
jno
aad
ljmp
test
and
hlt
out
mov
enter
movsb
inc
in
pop
enter
inc
xchg
pop
mov
or
cmp
mov
test
cmp
cs
sbb
cmpsb
mov
jl
or
dec
sub
hlt
lret
jmp
adc
leave
jbe
es
add
aaa
cmp
stos
inc
out
ja
adc
xor
sub
jno
mov
scas
into
xor
aaa
and
ds
mov
jns
imul
dec
sbb
mov
inc
lahf
push
xchg
arpl
push
repz
in
xchg
push
push
popf
cltd
push
arpl
xor
mov
sarl
jg
lods
rorl
sub
movsb
sbb
outsb
filds
fmuls
lds
xchg
mov
dec
data16
lret
fwait
jbe
cld
cmp
pop
mov
mov
xor
pextrw
jl
popf
sub
and
mov
out
push
mov
jno
popa
mov
push
cmc
mov
mov
dec
stos
adc
cs
incl
mov
mov
mov
cmp
mov
rclb
xlat
sarl
repnz
xor
mov
push
sub
loopne
dec
pop
mov
sub
or
or
xchg
ss
mov
data16
cmp
outsb
dec
jnp
je
les
and
movsb
dec
out
add
sahf
fcoms
push
sbb
ds
cltd
adc
ret
cltd
mov
or
xchg
jecxz
mov
dec
pop
fsubs
push
subb
hlt
int
push
repnz
les
imul
lds
sahf
test
xorb
adc
pop
rclb
out
cs
movsl
or
or
mov
and
movsl
sub
or
dec
cs
dec
mov
cltd
aam
mov
pop
ficoms
sub
fidivs
inc
dec
les
lahf
push
cmp
xchg
dec
enter
pop
and
jb
adc
sbb
mov
sbb
or
add
xchg
sub
xchg
loope
repnz
ljmp
mov
cmp
mov
xchg
movsb
mov
cmp
xor
or
je
mov
into
mov
aad
icebp
js
push
jno
pop
idivb
pusha
xor
or
cld
push
cltd
stos
in
mov
das
xor
fxch
and
adc
mov
inc
cmp
loope
sub
mov
pop
inc
adc
sub
ss
jo
jno
lahf
pop
mov
je
sbb
fbstp
inc
sahf
cmp
outsl
push
mov
in
in
addr16
lods
mov
ret
lcall
scas
and
push
adc
sub
cli
lods
js
ljmp
sbb
loopne
leave
aas
adc
cltd
adc
xchg
rol
mov
or
or
mov
mov
dec
loope
pusha
adc
push
lea
out
loopne
insb
cmpsl
flds
cs
icebp
imul
stc
push
cs
pop
popf
adc
ret
xor
cmp
mov
roll
ss
xchg
or
xor
test
cmp
out
mov
cmp
jl
stos
add
pop
lea
lods
push
jge
and
push
cs
jae
cmpsl
and
pop
leave
or
mov
pushf
jbe
test
push
mov
jno
sub
fldt
negl
ret
jnp
xchg
mov
sarl
jle
scas
fidivrl
rclb
inc
das
cmp
ljmp
mov
pop
cmp
fsubs
fidivrl
adc
in
inc
jle
xchg
jbe
push
push
xchg
xchg
or
and
test
shll
push
fnstenv
bound
cmp
pusha
mov
notb
int3
push
mov
inc
aas
test
dec
arpl
call
in
mov
dec
aaa
in
imul
mov
sbb
pop
test
mov
int
int
rcll
inc
fldl
pop
popf
xchg
mov
adc
sahf
lret
add
mov
pop
or
and
les
xorb
mov
and
or
pop
jns
setle
push
mov
imul
push
xchg
fs
cmp
or
xchg
dec
les
mov
pop
movsl
sub
dec
dec
mov
lea
mov
lock
mov
ds
sarb
scas
jne
xor
mov
xchg
les
mov
punpcklbw
mov
fxch
inc
cmp
add
mov
idivl
or
out
xchg
or
xchg
mov
ljmp
adc
dec
repz
inc
mov
jl
mov
stos
and
pusha
xor
add
mov
cmpb
xchg
std
mov
lods
or
in
mul
outsb
xlat
adc
xchg
popf
neg
and
push
fisubs
bound
and
xor
mov
adc
aad
jns
jecxz
dec
add
pop
cld
lret
ss
push
xorb
and
in
fildll
mov
mov
adc
hlt
outsl
cwtl
movsb
mov
lock
mov
rcll
js
xchg
mov
mov
mov
push
jno
and
aas
add
and
pop
movb
sarb
sbb
adc
rcrb
ficoms
push
pop
sub
jle
jne
xchg
xchg
outsl
js
popa
es
push
cwtl
jge
aam
mov
inc
lds
mov
dec
cmpsb
lods
rorb
hlt
lods
addl
dec
dec
mov
cmpb
mov
xchg
negl
mov
bnd
sbb
fndisi(8087
inc
adc
repz
mov
jae
in
adc
pop
popa
fisttpll
outsb
dec
adc
xchg
inc
add
lds
fcomip
int3
pop
and
leave
cs
popa
lahf
nop
push
sub
lret
lret
mov
push
push
ja
ss
add
mov
aas
xor
mov
xor
push
stc
pop
sbb
jg
xchg
fiadds
xor
ss
ja
cs
inc
adc
push
xor
cmc
ds
sbb
inc
cmp
insb
outsb
or
scas
aam
sar
xor
pop
mov
dec
add
in
dec
insl
pushf
lea
or
nop
add
adc
addl
movsb
lcall
adc
or
test
ja
inc
inc
fdivrl
clc
shlb
mov
pop
mov
or
jmp
js
cwtl
jp
mov
int
sbb
xor
popf
and
mov
cmp
adc
shrb
ret
testb
inc
dec
or
lods
push
scas
lds
mov
jmp
mov
cld
mov
sbb
shlb
or
shll
xor
ds
lea
push
push
pop
jne
mov
iret
fwait
out
outsb
rcll
mov
or
xlat
dec
les
shl
test
imul
bound
mov
mov
fcom
push
pusha
push
dec
inc
stc
movsl
rcrb
scas
pop
lahf
imul
push
rcll
call
add
xchg
das
hlt
sbb
dec
push
dec
sub
jne
cmp
inc
adc
cmovnp
adc
sub
push
pop
pop
imul
stc
nop
add
push
out
adc
out
hlt
mov
jmp
inc
arpl
mov
xor
int
adc
push
fs
jo
add
outsl
out
in
insb
dec
out
mov
mov
lcall
mov
cmc
popf
pop
jmp
pop
lock
out
in
out
dec
sbb
mov
fxch
stos
iret
jnp
and
lods
subb
outsl
push
mov
sti
inc
loope
aas
jmp
add
andb
loop
jb
pop
dec
mov
push
mov
test
pop
fisttps
dec
xor
sub
add
inc
outsl
xor
fcmovne
dec
popa
dec
scas
popa
and
mov
mov
mov
fcoms
sub
pop
int3
dec
enter
aas
mov
or
outsb
pop
cmp
lods
push
and
add
and
pop
inc
inc
add
mov
jl
in
int
daa
and
fdivr
imul
fisubl
or
push
dec
or
cmc
mov
push
fldcw
adc
xchg
ja
dec
pusha
mov
xchg
ja
jg
xor
mov
push
jg
mov
cld
pop
cmp
pushl
jne
xchg
xlat
push
cmp
repnz
mov
cmp
jae
es
or
testb
hlt
sub
cmp
xor
xchg
cmp
fwait
xor
sar
cmp
ficoml
xor
adc
fdivs
adc
dec
mov
imul
mov
jae
inc
cmp
pop
push
mov
arpl
or
shrb
leave
out
call
sub
out
inc
pop
xor
jno
dec
test
jnp
clc
jo
and
ret
cmp
sti
std
out
add
scas
cmp
out
push
push
das
xchg
out
and
push
clc
push
jns
inc
arpl
ret
mov
push
or
data16
inc
lahf
push
pop
mov
cwtl
sahf
in
dec
xchg
insb
cwtl
cmp
rcll
mov
push
cmc
test
sub
out
and
gs
jno
cmpsb
js
scas
icebp
lea
dec
xchg
in
xchg
xchg
lahf
sbb
xlat
xor
andb
shll
push
cwtl
cmpsl
insl
shlb
aam
jnp
push
sbb
sub
into
adc
mov
data16
shlb
sbb
hlt
scas
scas
or
je
fnstsw
mov
push
cmc
movaps
add
fistpl
lea
daa
stos
cmp
divb
cmp
add
jle
and
aam
adc
xor
ret
pop
and
pop
fldt
cmp
bound
dec
out
repz
pop
mov
mov
cmp
cmpb
xchg
mov
vminpd
cmp
ja
mov
fcmovu
cmp
movsb
mov
jg
inc
adc
sbb
pop
imul
repnz
sbb
jge
sub
mov
pop
mov
sahf
push
imul
imul
xchg
lea
mov
adc
push
inc
cmp
rolb
insl
inc
mov
cmp
inc
insb
push
inc
ret
or
iret
cmp
ljmp
add
test
xchg
out
inc
xor
jnp
jecxz
in
stc
xor
jmp
jns
in
pop
pusha
fdivrp
rcll
inc
pop
lods
or
arpl
cmp
xchg
in
xchg
mov
pop
jmp
imul
rep
popf
es
or
mov
test
or
loopne
loop
add
xchg
hlt
xlat
cmc
fs
cs
shll
mov
gs
dec
pop
pop
aam
into
ds
clc
pop
ret
sub
push
out
mov
pop
fildl
addl
sahf
xchg
pop
adc
jmp
pop
push
call
fcom
mov
mov
sti
icebp
daa
arpl
jnp
adcl
cwtl
xchg
xlat
inc
pop
ljmp
dec
lahf
fst
pop
cmp
subb
jne
cmpsb
call
cmpsb
into
iret
jl
int
mov
mov
cmc
add
mov
pop
loop
mov
cwtl
push
xor
pop
add
lcall
push
xchg
jae
out
pop
repnz
mov
inc
add
and
jne
pushf
cmpsl
mov
packsswb
dec
in
xchg
jns
xchg
push
add
dec
adc
repz
xor
jg
cmp
push
aad
test
xchg
movsl
xchg
cmpsb
jns
cs
mov
add
jp
mov
mov
jp
xor
nop
or
xchg
sub
jge
push
or
rep
cmp
add
mov
repnz
mov
xor
mov
xchg
fcompl
movsb
jle,pt
adc
cs
std
hlt
add
lahf
mov
jle
daa
xor
inc
test
stc
testl
jge
fisubl
xlat
cmp
inc
mov
repz
pop
int
xchg
jge
or
fwait
cmpsb
andb
dec
pop
out
xor
mov
xlat
jge
jae
xor
push
pop
into
pop
xor
lret
pop
mov
sti
and
pop
add
bound
mov
mov
xchg
adc
fidivs
mov
cs
ret
sbb
push
out
and
push
int
jg
pop
loope
adc
pop
cmp
xchg
pushf
arpl
and
call
pop
mov
push
stc
loopnew
mov
iret
cwtl
mov
testb
sub
movsl
lahf
jecxz
mov
xchg
or
fsubrs
add
mov
push
fsubl
xor
cld
jg
add
sub
xchg
mov
std
xchg
sbb
and
es
sbb
dec
fstps
inc
or
xor
pop
adc
cmp
hlt
push
nop
cmp
into
mov
sti
test
dec
push
push
push
mov
nop
sbb
call
test
cmp
xor
mov
inc
ss
shr
push
les
dec
pop
jo
rolb
js
imul
xchg
sti
inc
cmc
or
adc
test
dec
rcr
ret
xchg
ret
sub
dec
inc
xor
popf
sbb
lret
jg
push
mov
mov
fpatan
add
mov
outsl
sub
inc
dec
lock
cmpsb
stos
fisubl
jno
mov
push
lock
push
or
push
js
imul
loop
sub
inc
sbb
dec
sbb
xor
fidivrl
ficoml
sub
in
ss
mov
clc
in
or
pop
mov
and
cs
xlat
data16
cmp
js
loop
mov
sbb
jns
out
mov
notb
pop
dec
rolb
leave
push
mov
pop
pop
mov
and
jecxz
jle
xchg
push
push
and
lahf
sbb
in
push
sub
shlb
mov
or
lea
mov
rcll
mov
mov
push
push
in
ljmp
imul
adc
cli
fucomp
fistl
data16
lcall
inc
push
mov
das
and
mov
add
leave
enter
sub
push
outsb
mov
outsl
ljmp
push
and
cmp
xchg
lds
rorb
int
add
pop
push
mov
sarl
jae
ret
out
aaa
fldl2t
sbb
pop
push
sbb
addb
dec
sub
adc
pop
bound
add
xor
mov
sub
popf
xchg
cltd
cmp
xor
xlat
xor
shll
sub
rorl
cs
jl
ja,pn
dec
or
iret
out
mov
adc
lods
ficoms
jg
inc
xchg
mov
mov
pop
add
or
xchg
sbb
sub
imul
inc
aam
cmp
mov
adc
lret
jbe
lret
aaa
fiadds
loop
add
push
fwait
push
lock
sbb
fidivrl
pop
pop
xor
pop
mov
daa
arpl
out
jns
push
sbb
sub
sub
movsb
xchg
pusha
and
lret
mov
out
inc
test
pop
test
pop
mov
push
mov
mov
mov
inc
adc
data16
pop
daa
iret
mov
sub
movsb
push
int
xchg
sti
repnz
mov
dec
lock
push
sub
sar
xor
pop
cmp
sub
arpl
xor
addr16
jecxz
stos
inc
push
mov
lret
xor
jb
mov
jno
into
add
stos
and
mov
inc
xor
lret
in
stc
and
xchg
stos
test
jo
mov
inc
leave
sub
sbb
hlt
lcall
sbbb
rcl
loopne
fs
sbb
stc
add
call
int
sar
adc
sbb
stos
and
pop
imul
outsb
mov
inc
icebp
loop
jno
jo
xor
cld
cmp
cld
aad
xchg
and
je
cli
lret
mov
shrb
mov
ja
jbe
xlat
into
mov
rorb
out
rclb
pop
inc
hlt
test
cs
fcoml
adc
add
or
xor
dec
sbb
push
add
js
outsb
popf
adc
cmp
rcr
loopne
insb
into
jno
sarl
push
or
test
mov
out
mov
jb
pusha
popa
dec
xchg
xor
orb
in
pop
je
pop
xchg
pop
mov
dec
aad
out
fists
ret
in
jle
dec
cli
call
scas
mov
adc
popf
and
adc
out
push
lods
xchg
push
imul
call
je
sub
jg
push
lds
lods
rclb
mov
push
insb
ljmp
dec
clc
cmc
jl
xor
fucomp
mov
movsl
std
sahf
xor
sbb
shr
add
push
inc
mov
mov
or
loope
andl
sub
xchg
in
lock
aad
pop
mov
dec
mov
jns
mov
adc
js
cmpsl
jne
rol
sub
in
mov
test
addl
pop
leave
mov
inc
addr16
push
adc
pop
mov
jns
jge
nop
adc
pop
fbstp
loop
fwait
lret
bound
jmp
adc
scas
cwtl
pop
ja
insl
test
popf
mov
fldenv
ret
in
jg
shll
lea
ret
iret
push
fistpl
sub
jns
pop
movsl
lods
sbb
in
add
xorb
mov
loope
aad
out
stc
mov
scas
stc
xor
jae
lcall
outsl
xchg
fbstp
fwait
xchg
or
bswap
xchg
psubw
sbb
in
mov
fcoml
pop
push
sub
adc
or
mov
dec
mov
mov
xchg
mov
mov
cmp
in
insb
inc
je
lret
cmp
repz
pop
shlb
sub
push
les
gs
scas
fldl
add
int3
idiv
push
fidivl
cmp
xchg
sahf
notb
pop
mov
cltd
test
inc
dec
and
test
mulb
data16
fdivs
lock
add
pushf
stc
lret
sub
rcrl
out
mov
imul
psraw
push
and
test
jle
arpl
add
adc
xorb
fsubrl
xchg
sbb
test
xor
gs
idivb
push
dec
dec
mov
mov
push
rcrl
fidivs
scas
mov
in
je
push
out
cmc
loopne
enter
in
xchg
lcall
imul
pop
lods
stc
sub
jmp
mov
in
in
fisubrs
rcr
gs
ja
cltd
sbb
aam
inc
outsl
icebp
inc
pop
std
ljmp
mov
xchg
repnz
and
xor
xor
sub
sbb
repnz
aaa
aam
mov
push
push
or
push
xchg
leave
call
adc
inc
divl
inc
ret
in
and
clc
mov
jno
mul
or
out
adc
stc
add
push
int
pushf
jmp
xchg
sahf
sahf
sarb
and
int3
sub
xlat
fst
mov
adc
sbb
dec
jae
inc
dec
jecxz
dec
repz
icebp
mov
mov
inc
cli
nop
push
aaa
lods
mov
mov
pop
int
dec
mov
fiaddl
dec
inc
sbb
aam
or
jg
xlat
cmp
fisttpll
jne
sbb
sbb
push
sarb
xchg
xlat
push
rcrl
xor
loop
fisubrl
mov
push
stos
outsl
push
sti
sbb
fistps
andb
inc
or
or
adc
or
out
mov
inc
mov
xacquire
sarl
inc
and
mov
cltd
pop
inc
mov
push
rorl
jno
cs
jge
in
imul
hlt
sub
jo
inc
xor
aad
mov
cli
add
mov
add
aam
test
notl
mov
sbbb
push
lea
sbb
dec
adc
xor
fnstenv
xchg
cld
inc
in
movsb
push
imul
roll
or
movsb
sub
mov
add
jno
into
adc
imul
adc
dec
jmp
sahf
or
iret
xor
cmpsb
add
jns
pushf
lds
dec
fidivrs
daa
inc
mov
jge
movsl
xchg
popf
add
lds
jne
add
mov
mov
lcall
lea
jge
adc
js
jo
sub
mov
xor
cmp
xchg
mov
bound
mov
sbb
aas
xadd
imul
rcrl
dec
leave
fbstp
lock
ja
mov
mov
loop
test
jo
cmc
xchg
test
add
add
mov
cmc
cmpsb
mov
test
adc
nop
xor
test
cmc
dec
cmp
and
and
cs
fchs
pop
ret
mov
push
or
sbb
sbb
dec
js
scas
push
cmp
jl
mov
sub
mov
outsl
out
or
shrl
xchg
ds
lret
loopne
fcoml
lret
pop
sub
mov
bound
sub
inc
or
into
xor
lret
ret
daa
ja
add
daa
jmp
dec
cmp
push
sub
stos
pop
repnz
sub
test
or
dec
lcall
cmc
pusha
ror
scas
or
insl
xorl
sub
dec
cmp
push
pop
imul
push
stos
test
mov
int3
add
dec
shl
push
and
push
dec
mov
mov
subl
xorb
pushf
mov
lret
push
mov
and
xlat
push
cmp
jg
daa
dec
inc
pushf
pop
xchg
test
faddp
push
stos
xchg
call
aad
in
add
pop
lea
pop
mov
jns
arpl
lock
jno
enter
scas
xchg
stos
gs
in
daa
add
dec
sub
icebp
add
andl
or
and
mov
xchg
pushf
js
pushf
popf
mov
stos
dec
int
scas
inc
fdivl
inc
jecxz
test
cmp
sahf
cmp
insb
popf
push
pop
sbb
adc
repnz
or
jb
mov
xor
xor
dec
or
icebp
scas
scas
movsb
xor
out
testl
or
xor
je
jns
pop
inc
test
jmp
aam
jl
pop
sbb
movsb
push
mov
push
mov
sbb
dec
and
roll
xlat
adc
pop
pop
ror
mov
ret
dec
mov
cmp
and
test
fwait
lock
shrl
in
xor
adc
pop
aaa
mov
lods
mov
dec
cmpsl
push
xor
xchg
aad
stc
lcall
inc
lahf
stos
jbe
divb
sbb
cmp
fcomp
sti
rcrb
push
adc
mull
jno
iret
add
xchg
or
cmp
add
insb
clc
in
icebp
inc
sbb
xchg
sub
jnp
les
pop
dec
mov
std
xchg
dec
adc
jp
jmp
repnz
mov
inc
push
pop
call
cwtl
inc
in
xor
movsl
mov
loop
mov
add
stc
pop
sarl
inc
adc
add
push
ror
inc
outsl
subb
push
mov
notb
sub
movsl
pop
cld
dec
xchg
inc
ss
out
icebp
push
or
jno
lock
repnz
mov
testb
mov
mov
mov
imul
aaa
or
mul
js
sbb
pop
lret
enter
jbe
hlt
lret
cmc
push
mov
and
jle
push
insl
inc
jo
ljmp
and
shll
aaa
mov
jp
arpl
out
jb
jbe
sub
fstpt
repz
data16
fiaddl
dec
mov
mov
rcrl
mov
sub
jmp
stos
inc
test
mov
or
push
jbe
cs
inc
cs
pusha
repz
ficompl
dec
mov
enter
dec
inc
test
push
mov
jbe
test
jb
imulb
out
pop
jne
dec
fxch
lret
out
add
popl
xor
jo
jge
js
rcl
mov
test
jp
push
cmpsb
inc
mov
out
pop
xor
mov
out
and
shrb
push
push
pop
mov
insb
mov
sbb
xchg
mov
mov
sbb
push
aad
stos
push
jae
cmc
stos
lds
cmc
lcall
or
sub
xchg
in
mov
call
adc
cmc
xchg
xor
rcrb
sbbl
cmc
pop
and
les
ret
std
hlt
xchg
into
aas
xchg
cs
sbb
insl
pop
adc
mov
andl
ss
and
or
add
cwtl
rcrb
mov
ljmp
adc
mov
iret
adc
fldl
addl
test
lahf
sti
add
bound
clc
enter
sbb
sbb
shll
jge
push
sub
daa
ret
mov
mov
adc
jb
shll
pop
lret
sub
out
mov
in
loope
loop
call
clc
stos
mov
xor
jg
insl
leave
sbb
cltd
std
mov
xchg
xor
and
inc
jg
ret
and
xor
icebp
cs
jp
lea
jb
mov
xor
jns
jae
fcoms
push
in
rolb
mov
and
lods
push
aam
aaa
mov
mov
pop
push
dec
push
cwtl
push
test
fidivrl
dec
mov
jno
dec
iret
decb
fisttpll
adcb
sti
or
das
in
jecxz
pop
nop
clc
jo
data16
sbb
cltd
dec
jns
out
dec
jbe
cwtl
ret
movsb
sbb
push
ret
sbb
or
test
lock
or
in
ljmp
and
sbb
into
pop
push
mov
pop
and
xor
jns
cli
or
sahf
clc
pop
mov
add
cmpsl
mov
cmp
dec
into
sbb
repz
mov
sbb
test
test
fidivrl
ss
out
and
sub
push
inc
and
xchg
jae
mov
jecxz
adc
in
dec
loop
hlt
dec
movb
jno
sbb
aad
or
aad
inc
lods
je
hlt
mov
xchg
clc
mov
dec
cmp
push
popf
pusha
add
jo
mov
incl
inc
or
pop
or
ficoml
inc
sahf
popf
das
pop
pop
jb
mov
xchg
xchg
add
mov
addl
and
stc
ficomps
leave
loope
mov
push
cmpsl
push
stos
ljmp
int3
das
and
jle
and
add
add
or
cmp
xchg
aam
lds
sbb
jae
xchg
push
ds
or
and
lret
and
fisttpll
xchg
push
jmp
inc
xor
mov
push
and
fcomip
push
scas
inc
test
jge
add
and
test
push
mov
cmp
mov
in
lds
jge
fs
adc
nop
repnz
sub
fisttpl
fidivs
ss
push
pop
sub
push
stc
mov
repnz
in
fdivr
push
punpcklbw
scas
sbbb
push
lea
pop
das
cmp
icebp
jecxz
sbbb
pop
hlt
mov
and
xor
pop
push
and
sbb
aas
je
sub
rep
out
fstl
and
xchg
or
xchg
repz
imul
sub
movsb
in
mov
push
outsl
add
sub
push
cld
sub
nop
jne
jmp
pop
lods
cmp
xor
add
bound
clc
andb
cld
push
adc
insl
cs
mov
or
call
in
lods
mov
mov
jp
das
mov
and
outsl
mov
mov
test
out
popf
pop
mov
out
adc
mov
sbbl
sbb
push
cmp
les
test
frstor
pop
inc
inc
xor
pop
add
and
sbbb
insb
xchg
dec
or
outsb
inc
jp
outsl
fdivs
fdivrl
add
push
stos
mov
ljmp
adc
lcall
aas
fcompl
cs
pop
cmp
mov
fimuls
sbb
out
stos
pushf
add
call
adc
push
les
stos
push
mov
cltd
and
cmp
or
pop
sub
out
push
dec
shlb
scas
sarl
add
aaa
xlat
pop
add
ljmp
frstor
insb
inc
push
inc
mov
jns
lret
aad
je
mov
fdivs
and
enter
int
enter
add
and
xchg
mov
jp
iret
mov
xor
inc
pop
and
fldt
stc
mov
jecxz
jnp
dec
cmp
mov
out
xchg
xlat
sub
sbb
inc
movsb
ljmp
mov
mov
popf
jl
xor
push
aaa
fcompl
lcall
aaa
and
jo
call
jnp
repnz
jb
test
sub
ds
cld
xor
xor
insb
divb
mov
dec
mov
in
shlb
sbb
hlt
fsts
push
pushf
mov
jae
sbb
mov
add
mov
jb
aas
notl
mov
push
mov
jecxz
push
inc
test
add
ficompl
mov
int
in
jo
xchg
out
rcr
dec
or
xchg
sahf
into
cli
mov
xchg
pop
sub
adc
call
inc
pop
or
leave
xchg
pmaxsw
and
pop
inc
or
cwtl
mov
jo
sbb
add
flds
push
push
inc
mov
cmp
jp
arpl
sub
mov
xlat
push
movsb
out
jno
xchg
mov
mov
out
sbb
mov
lret
in
movsb
push
int3
fwait
int
mov
cmp
mov
fmuls
pop
xchg
in
mov
movsl
xchg
subl
dec
push
repz
inc
lods
push
in
ror
push
sbb
jno
out
mov
mov
sarb
adcl
rorl
jmp
repnz
imul
in
fwait
es
jo
sti
sub
or
jne
out
or
hlt
push
iret
inc
fcompl
addr16
xor
in
fldlg2
jle
push
in
push
ljmp
call
push
xor
daa
mov
popf
mov
hlt
cmpsb
repnz
mov
push
adc
mov
inc
sub
jb
not
mov
adc
lret
lret
jo
and
pop
xchg
jb
imul
leave
mov
je
xor
shrl
cmp
hlt
xor
inc
adc
push
or
or
pop
add
test
xchg
xchg
xchg
test
dec
and
xor
movsb
icebp
bound
xchg
enter
xor
push
push
push
mov
pop
dec
repnz
repz
cwtl
mov
or
or
jnp
push
test
mov
mov
sbb
daa
inc
jns
int3
inc
cmp
mov
lcall
test
jge
jge
dec
dec
adc
test
inc
test
mulb
lret
pop
pop
xchg
xor
inc
ret
out
or
mov
inc
cmp
inc
daa
scas
insl
pushl
jbe
sub
enter
mov
dec
jb
mov
xor
shll
les
add
popa
xor
mov
pop
mov
loopne
insb
xchg
pop
bound
xchg
adc
shrl
add
mov
mov
in
fst
sbb
xchg
sbb
push
shl
and
jne
cltd
pop
xchg
mov
aaa
push
dec
xchg
ror
in
jp
stos
lods
stc
lret
and
mov
lahf
in
enter
sub
sbb
xor
jp
es
and
jge
das
shlb
xlat
mov
leave
or
or
bnd
lahf
and
cmp
loop
sbb
push
cmpsb
push
test
push
fsubl
andl
inc
jae
xchg
ss
test
adc
mov
jl
sbb
pop
cmpsb
push
pushf
jae
xchg
pop
xchg
pop
leave
cmp
out
cmp
mov
ret
pop
mov
cmp
adc
sub
dec
push
sub
rcrl
adc
and
adc
sub
jp
out
sbb
mov
mov
lods
shll
fidivrl
scas
mov
arpl
stos
ljmp
mov
mov
lods
jp
or
inc
sbb
pop
xchg
or
jmp
add
ret
nop
lret
pop
out
in
clc
pop
cmpsl
sbb
cli
pop
aaa
jnp
or
mov
mul
mov
jno
xor
loop
imul
inc
xor
and
bound
and
sub
ljmp
aam
mov
mul
mov
push
inc
test
or
inc
xchg
call
push
adc
jge
fwait
mov
aad
imul
lret
cmp
jbe
or
push
mov
cld
mov
cs
adc
jbe
test
scas
test
addr16
cwtl
push
or
adc
mov
mov
rcr
inc
xchg
pop
jp
loope
iret
mov
jl
add
out
mov
sbb
imul
pusha
cmp
shll
mov
lcall
ret
cmpsl
mov
mov
lds
and
xchg
inc
loop
loopne
add
dec
cmp
pop
mov
scas
sub
inc
in
add
or
out
cmp
iret
jl
rclb
lret
mov
adc
xor
bound
fcmovne
test
push
sbb
inc
mov
jbe
pop
add
mov
cltd
out
lea
fs
adc
add
sub
xchg
sub
adc
mov
add
stos
and
jne
int
pop
pop
adc
pop
pop
push
in
rcll
mov
sbb
cld
add
mov
push
ret
inc
ficoml
pop
enter
ret
cmc
xor
popf
jge
jmp
sub
jo
fistl
push
xor
daa
xchg
icebp
test
and
out
mov
sub
mov
sarl
daa
pop
popa
xchg
fstpt
xchg
pop
sub
roll
xchg
cs
aad
fwait
insl
cmp
jg
stos
cmp
dec
sbb
sahf
test
mov
dec
popf
dec
push
pop
test
sbb
shrb
shlb
jno
xchg
sub
lds
nop
push
ja
daa
push
inc
popf
int3
sti
jae
jnp
push
push
int3
mov
push
mov
sub
ss
adc
cmp
ljmp
jge
sbb
popa
dec
inc
mov
mov
xchg
or
adc
mov
setg
push
test
jl
mov
pop
nop
jl
add
mov
test
jb
fstpl
xor
mov
mov
pop
repz
mov
jge
push
cmp
outsl
lcall
push
int3
push
sub
pop
in
sbb
cmp
jp
and
jnp,pt
int
sub
xchg
mov
in
inc
cmc
xchg
rolb
lret
outsb
jnp
mov
adc
call
int
mov
ficoms
mov
mull
rcrb
insl
cmp
lea
sub
cltd
pop
dec
pop
mov
movsb
daa
subb
stc
xor
dec
pop
test
fmulp
shl
fstps
sub
pop
and
repz
enter
mov
in
push
mov
sbb
and
xchg
nop
cmp
stc
pop
pop
sbb
jnp
xor
int3
test
or
adc
in
insb
fldl
lcall
cmp
hlt
lods
mov
cltd
imul
push
fdivl
stos
mov
pop
outsl
xor
push
dec
adc
xchg
icebp
in
pop
jecxz
scas
mov
mov
sub
shll
mov
add
dec
xor
add
fistpl
jge
imul
imul
add
pusha
decl
adc
xchg
dec
inc
fisubrl
add
jle
or
fiadds
hlt
xlat
outsb
idiv
pop
jecxz
jbe
jmp
mov
fdivs
mov
lret
imul
mov
mov
lods
testl
pop
fwait
imull
addb
jnp
mov
pop
add
add
sbb
nop
aam
int3
mov
sbb
shl
jg
add
cld
ret
outsl
sbb
or
std
cld
fcoml
xor
inc
fildl
lahf
ficomps
adc
aas
mov
out
add
bound
aaa
pop
xchg
fidivl
sbb
lret
mov
adc
movsl
fistpl
popf
cmpsl
icebp
mov
xor
cmp
xor
pop
setp
pushf
jmp
cmp
xor
sbb
call
and
sbb
inc
fs
mov
testl
push
fildll
sbb
or
pop
mov
jmp
jmp
mov
inc
ljmp
jne
xlat
and
push
arpl
adc
xchg
adc
idivb
bound
sbb
dec
sbb
sub
mov
add
jl
negl
shll
mov
pop
push
loop
mov
mov
adc
gs
xchg
jno
dec
pushf
arpl
nop
ljmp
mov
outsb
sahf
pop
and
pop
or
pop
test
dec
sub
adc
jo
and
pop
lods
mov
cmp
clc
jge
loopne
scas
mov
outsl
in
adc
push
ss
shrl
inc
cli
jno
jo
js
pop
cwtl
inc
or
aad
dec
xchg
lock
sbb
mov
cmp
out
fcmove
sbb
push
movsl
pusha
aas
jp
xchg
dec
mov
push
mov
std
mov
inc
sbb
fucomi
jecxz
jp
out
idivb
adc
addl
mulb
inc
jp
imul
inc
ret
jnp
arpl
das
cmp
add
ds
push
aam
add
add
cmc
insb
cmpsb
xchg
mov
out
leave
jp
or
inc
lahf
xor
bound
inc
movsl
sub
jl
mov
sbb
aam
stos
push
cltd
mov
popf
hlt
imul
mov
inc
jns
cmpl
and
arpl
out
mov
mov
pop
out
inc
bound
xchg
mov
inc
push
pop
cmpl
mov
sbb
fimull
mov
test
adc
cmpsl
push
test
cli
lcall
xor
adc
adc
adc
inc
pop
jae
gs
xchg
fwait
jnp
mov
cli
jecxz
add
adc
xor
mov
add
jp
mov
adc
pop
xor
nop/reserved
dec
movsl
dec
inc
das
inc
add
jno
fimull
push
cmc
push
and
movsb
in
ljmp
insb
adc
aad
stos
das
or
fcomp
xchg
jo
aad
mov
cmp
cli
mov
jo
xchg
lcall
leave
pusha
mov
lret
hlt
rcl
xor
jbe
cmpsl
int
sub
pop
mov
add
xor
or
call
mov
pop
adc
into
jg
les
push
jg
push
adcb
mov
dec
pusha
clc
cmp
sub
ss
adc
test
cmp
push
sahf
push
jl
mov
xchg
std
jg
mov
fsubr
lods
sbbl
lock
push
xchg
cmp
jbe
xor
loopne
cmp
add
mov
mov
add
and
shlb
es
popf
sub
divb
imul
gs
xchg
jmp
mov
out
xchg
sbb
cmc
add
lret
adc
aas
push
insl
add
xchg
subb
mov
inc
dec
cmp
or
sub
ds
jo
pop
jge
xor
inc
mov
dec
dec
push
adc
insl
jbe
popa
dec
subb
divb
xchg
sub
pop
add
sarl
jno
pop
fdivr
aaa
je
mov
cmc
or
lret
cmp
xor
outsl
pushf
inc
cmp
mov
xlat
fstpl
mov
sbb
inc
xlat
mov
push
aas
push
test
or
bound
xchg
sti
mov
mov
add
and
out
fstps
out
mov
iret
xor
movsl
fdivl
test
addr16
fsub
pushl
pop
mov
out
jo
mov
lcall
push
pop
aam
lds
and
mov
jmp
or
jle
lcall
loop
mov
enter
mov
aaa
mov
push
idivl
push
mov
xor
fbld
mov
xchg
jmp
and
fwait
mov
loopne
loop
mov
nop
sbb
inc
xor
ja
dec
iret
shl
mov
cmp
push
fwait
test
in
push
dec
in
jp
fidivrs
insb
sub
sbb
arpl
pushf
fs
pop
arpl
data16
ljmp
mov
mov
call
and
xor
lret
sub
jge
dec
ret
xor
pop
pcmpgtd
push
out
sbb
pop
call
fcomi
cld
rclb
sarl
dec
cld
xlat
ror
sub
sbb
cwtl
cwtl
add
call
cmp
scas
sahf
push
adc
lds
test
movsb
xor
jb
push
mov
push
popl
inc
cmp
xlat
xchg
movsl
sub
xchg
leave
dec
dec
xor
jno
ljmp
in
inc
andb
or
sub
adc
lea
mov
fst
push
jp
cs
jbe
add
pop
mov
mov
addr16
jecxz
adc
pop
repz
push
or
inc
mov
pusha
shll
inc
lock
mov
ljmp
add
aaa
int3
dec
xchg
jo
loopne
rolb
pop
mov
sbb
int
out
scas
cltd
sti
pop
xlat
jecxz
dec
mov
cld
xchg
cwtl
cltd
and
and
popa
shll
out
fwait
mov
in
pop
cmpsl
jb
das
mov
cmp
jno
push
xor
and
xchg
loopne
push
mov
movsl
pop
adc
cwtl
xlat
or
shll
mov
insl
sti
nop
pop
xchg
xor
mov
adc
xchg
adc
hlt
jbe
test
je
xor
subb
ss
xchg
fstp
or
sbb
stos
mov
lock
sub
inc
rcll
xor
gs
mov
push
nop
or
pop
enter
cmpl
fisttpll
arpl
loopne
mov
sarl
mov
stos
adc
imul
aas
mov
addr16
push
mov
out
dec
dec
mov
cltd
out
rorb
dec
dec
gs
mov
dec
lods
mov
adc
push
add
fdivs
push
jns
jne
mov
adc
in
xor
cmp
or
mov
pop
and
adc
shrb
pop
ret
xor
mov
sub
or
popf
mov
int
mov
cld
rcl
inc
add
arpl
fwait
push
mov
jp
dec
imul
mov
mov
cli
push
mov
stos
fdiv
jle
mov
inc
icebp
pop
lods
scas
inc
dec
cmp
xchg
stos
loopne
and
inc
mov
lods
fiaddl
imul
mov
mov
adc
lods
mov
popf
sub
sub
subl
push
inc
push
mov
lcall
ljmp
cmp
pop
sbb
and
roll
sbb
push
loop
inc
addr16
mov
ss
fwait
repnz
mov
dec
fstpt
xchg
jmp
fisubs
push
push
test
roll
adc
cmp
xchg
mov
mov
dec
push
pop
andl
cmp
cmp
imul
outsb
out
mov
dec
cmp
pop
xchg
test
daa
pop
outsl
jae
mov
sbb
push
jge
stc
cld
fs
int
fsubrl
dec
mov
xchg
fdivs
dec
lods
js
cli
mov
movsb
jnp
mov
insl
sbb
mov
lcall
jne
cwtl
xchg
int3
in
int3
push
push
je
sbb
cli
jno
mov
ffree
fistps
hlt
ret
cmp
mov
xchg
je
scas
cmp
push
jp
adc
fidivrs
mov
lahf
es
or
shll
and
adc
fwait
push
out
jp
push
xchg
xor
out
bnd
insb
inc
fnsave
and
push
fwait
stos
lods
scas
mov
mov
or
mov
icebp
out
stos
pop
cmp
aad
shlb
mov
mov
arpl
or
mov
jecxz
pop
lret
arpl
scas
out
sbb
jnp
movsl
fst
cmp
out
jle
xorl
ljmp
rorb
ss
sbb
popa
jno
jno
push
inc
or
les
je
nop
adc
cmc
sub
push
lea
decb
test
stos
pop
mov
stos
popa
or
clc
sahf
mov
out
mov
test
mov
mov
mov
je
adc
xor
mov
mov
scas
cmc
ljmp
jp
stos
rcr
fs
pop
push
jae
inc
cmp
mov
mov
xchg
xchg
cli
pop
cs
xchg
arpl
pop
push
cmp
xor
pop
adc
psubusb
lock
mov
std
push
sub
dec
in
pushf
scas
pop
jb
mov
hlt
lods
lock
sbb
mov
je
or
lods
mov
sub
pop
movsl
xchg
js
push
push
or
pop
in
testb
cmp
adc
xchg
mov
test
dec
enter
shll
xor
lods
and
jge
nop
dec
in
aam
pusha
jecxz
pop
popf
lret
ret
into
ret
lea
aas
ret
jae
push
or
in
mov
xor
mov
arpl
cmp
mov
shlb
push
inc
test
sbb
fstps
cld
lret
or
xchg
clc
jne
xchg
push
adc
vshufpd
push
mov
cmp
xor
pushf
mov
jae
insb
cs
sbb
xor
mov
fists
pop
jecxz
jge
icebp
ljmp
push
outsl
int3
adc
adc
add
jge
into
push
addr16
push
cmpsl
and
mov
ret
mov
pop
rcll
or
shrl
leave
add
dec
push
mov
pop
push
ret
mov
mov
andb
and
pop
jo
mov
lcall
lret
leave
jl
sbb
xor
mov
jp
addr16
lret
shrb
out
push
lods
addl
sub
mov
mov
dec
xchg
sbb
stos
xor
xor
push
jne
aaa
push
in
repz
mov
mov
push
inc
sub
mov
mov
push
add
add
cmp
mov
cmpsl
mov
xor
sub
xor
jns
push
pop
ss
or
cmp
inc
jecxz
or
inc
push
and
add
push
test
push
dec
pop
ror
jne
add
inc
add
jae
pop
sbb
call
and
loop
jo
lahf
jno
xor
cmpsb
inc
or
adc
cmp
ret
ljmp
popa
arpl
push
or
mov
test
insb
mov
xor
push
cmp
pop
pop
das
mov
mov
sub
ret
out
mov
jmp
push
idivb
push
mov
add
inc
sub
movsb
sub
nop
das
int
pop
cltd
sub
xor
push
in
shrl
lods
ret
or
push
shll
push
xchg
dec
mov
shl
push
jnp
jg
xchg
int3
xchg
jbe
outsl
and
ljmp
clc
leave
filds
pop
mov
mov
inc
push
sbb
add
mov
dec
fcmovu
xchg
adcb
mov
adc
sub
dec
cmp
cmp
pusha
pushf
ljmp
and
pop
pop
jns
ja
es
pusha
cltd
xchg
sub
and
sar
lods
in
mov
dec
mov
push
fsubl
adc
lea
sarb
push
xor
pop
push
or
add
and
data16
sbb
mov
lcall
pop
and
out
mov
and
data16
shrl
fucomp
inc
popa
pop
pusha
sub
dec
xorb
or
or
mov
ds
inc
mov
xor
aad
xchg
push
ret
inc
repnz
ljmp
mov
jne
and
js
cwtl
mov
rclb
adc
test
out
iret
lods
roll
insl
test
mov
mov
cmpsl
push
ror
fwait
push
mov
adc
int3
fxch
xchg
icebp
adc
mov
pop
xchg
arpl
jg
jne
arpl
xor
popa
and
jo
sbb
cmp
jb
pop
add
shll
jmp
or
and
loopne
sti
andb
pushf
fisubrs
or
add
out
mov
jecxz
sub
lods
lds
xchg
sub
lahf
xlat
mov
outsl
out
rclb
test
xchg
das
inc
or
insb
dec
aad
outsl
cld
lock
xor
xchg
pop
xchg
lahf
or
jp
aad
fmull
in
sub
pusha
pop
inc
cmp
push
xor
fmull
jbe
push
jmp
sbb
pusha
and
mov
push
test
testl
insl
hlt
mov
xor
mov
stos
jno
pop
dec
pop
add
loope
ds
mov
jmp
add
je
ds
sarb
xchg
inc
mov
out
mov
cmp
es
and
cmp
jmp
or
xor
xor
fwait
cld
les
movsb
sbb
loope
and
mov
and
arpl
imul
loop
stc
add
das
imul
fidivrs
mov
lret
das
sub
and
inc
push
repz
mov
loopne,pt
cmp
push
test
aad
adc
adc
aas
and
xchg
xchg
xor
mov
popa
push
rclb
nop
mov
add
jno
pop
mov
fcomps
fstpt
rclb
sub
sub
aad
inc
add
fldpi
fcmovnb
repz
test
sbb
scas
fwait
sti
xor
rcr
sbb
dec
jae
mov
fnstsw
cmpsb
mov
enter
lret
mov
jo
ret
add
nop
pop
add
mov
and
mov
in
in
lcall
sub
sahf
int
xchg
xchg
iret
mov
pop
mov
jb,pn
xor
repnz
rcl
inc
sbb
sub
fnsave
test
cmp
movsl
sbbl
incl
push
fnsave
iret
push
adc
or
cwtl
push
dec
movsb
push
jp
fsts
dec
movsl
sub
pop
push
push
xchg
loopne
add
outsl
aas
mov
sar
outsb
xchg
andb
and
pushf
xchg
adc
lahf
inc
push
sbb
repz
fsubrl
aam
push
inc
scas
pop
pop
pushf
lahf
xchg
inc
lret
xor
jno
gs
cmp
aas
inc
inc
push
mov
sub
mov
daa
and
dec
push
insb
mov
fs
in
xchg
jae
or
ja
inc
test
sbb
icebp
jmp
aam
test
adc
push
addr16
mov
sbb
pop
stc
dec
int3
push
je
and
dec
imul
je
ja
cmp
pop
in
or
sub
inc
add
push
hlt
jl
ret
mov
inc
shll
jne
stc
jecxz
mov
mov
xlat
push
cmp
gs
inc
in
inc
jle
js
and
inc
add
or
cli
fcomps
xor
cs
cltd
add
push
mov
and
lods
sti
lods
ss
loopne
hlt
into
fldl
adc
icebp
mov
lcall
popa
pop
and
addr16
and
cmpsl
inc
mov
mov
mov
pop
jns
mov
jo
pusha
pop
cmp
fildll
mov
push
and
mov
adc
dec
enter
xchg
fs
into
add
pusha
sbb
adc
nop
push
das
pop
lods
xchg
inc
or
push
jecxz
adc
mov
xlat
sbb
rcll
repz
aas
inc
adc
add
jmp
jp
xchg
pop
clc
in
xlat
into
mov
outsb
fiadds
aaa
inc
imul
sbb
lcall
adc
outsb
mov
cmp
sbb
aas
mov
js
bound
jne
rorl
ret
jo
sub
ljmp
imul
out
aaa
lahf
lods
sub
mov
and
ja
das
scas
add
cltd
cmc
fwait
inc
inc
cmp
cmp
sti
nop
orb
cmc
mov
xor
cmpsl
add
mov
dec
mov
imul
out
test
imul
mov
mov
cltd
xchg
ss
iret
inc
mov
arpl
icebp
andb
jbe
sbbb
enter
xor
mov
insb
or
shrl
enter
xor
clc
pop
cmc
call
shrl
loope
popf
dec
es
jle
nop
inc
dec
mov
pusha
ficoml
lock
sub
lods
fbstp
sub
and
push
cmp
xor
adc
xchg
sbb
mov
aaa
and
push
ficompl
std
cmc
fsubl
cmp
mov
int3
stos
add
dec
pusha
dec
jne
data16
sahf
pop
cwtl
pop
mov
or
xchg
mov
sti
out
xchg
shrl
imull
xor
outsl
data16
clc
push
sbb
jle
jmp
aad
mov
cltd
dec
push
sub
sar
cld
mov
cltd
movsl
jecxz
xor
aad
push
mov
inc
cs
shl
cmpsb
adc
or
inc
lods
clc
leave
cmp
pop
out
or
adcb
push
out
dec
fcmovb
mov
nop
cli
add
mov
mov
cwtl
dec
dec
in
mull
into
jnp
inc
clc
mov
xchg
or
stos
sub
icebp
push
jg
dec
shll
dec
mov
mov
push
sbb
xchg
decl
imul
popa
xor
or
pushf
ljmp
pop
or
mov
shlb
xchg
sbb
jg
xor
pop
inc
cmpsl
sub
test
jmp
ss
xor
xor
pop
add
jnp,pn
loopne
xor
mov
int
mov
lock
mov
dec
sub
in
movsb
jnp
mov
das
iret
sub
mov
cld
int3
mov
aad
test
xlat
mov
pushf
jecxz
outsb
pop
hlt
sub
lock
pop
cmp
dec
in
or
mov
repz
ds
stc
test
push
lds
shlb
insl
movsl
arpl
sbb
test
dec
insb
aaa
cwtl
sbb
call
inc
push
mov
cmp
ja
jns
cmp
jb
xchg
push
fs
adc
push
lret
mov
call
inc
xchg
cmp
push
punpckhwd
mov
cmpsl
sub
inc
in
in
mov
push
inc
es
out
lock
movsb
icebp
xchg
dec
jp
sahf
aad
mov
xchg
lret
orl
int
mov
pop
stos
mov
je
sahf
in
shrl
jb
inc
or
aad
jp
shlb
mov
cmp
negb
out
ret
push
not
sub
enter
movsl
adc
mov
push
push
notb
sar
or
iret
cwtl
lahf
mov
lahf
mov
mov
lds
test
mov
aaa
insl
movsb
ss
lds
push
out
not
js
fnsave
adc
rorl
jbe
outsl
in
push
sub
les
mov
notl
sbb
cmpl
bswap
test
loopne
int
aas
xchg
nop
gs
fs
xchg
lods
fbstp
andl
jne
sub
push
and
push
out
dec
mov
sbb
cmp
xor
xchg
js
mov
incl
push
scas
adc
out
pop
aam
or
mov
add
cld
scas
adc
out
adc
and
insb
call
pop
mov
addr16
inc
pop
cmp
fsubs
adc
data16
sub
int
call
mov
cmc
fldl
arpl
push
out
adc
lds
shll
gs
ret
mov
mov
dec
jbe
rcl
inc
inc
fdivrs
xchg
es
loopne
fistpl
popf
pushf
lret
aaa
in
fcoml
sbb
ret
scas
lahf
popf
jo
out
push
movsl
lea
das
out
jo
mov
xor
pop
lret
inc
sbb
pushl
mov
sub
inc
mov
sbb
mov
jmp
pop
mov
cmp
sbb
and
iret
fsubs
and
daa
lock
cmovle
push
sub
xor
cmpl
push
or
sbb
nop
sahf
and
cmc
cmpsb
out
mov
stos
add
icebp
shll
sbb
ljmp
jmp
push
sbb
xchg
js
inc
fimull
gs
or
inc
ds
or
call
pop
cltd
data16
jae
add
dec
mov
push
fisttpll
jmp
lea
inc
ss
dec
lock
fwait
sub
aad
aad
adc
sbb
pop
mov
mov
or
jge
adc
int3
dec
add
fadds
inc
mov
test
and
std
dec
fs
das
pop
and
fmuls
je
pop
bound
and
jmp
mov
loop
movsb
bound
cmp
inc
inc
scas
imul
in
cmp
ja
push
push
jae
pop
imul
sbb
cmp
rclb
dec
xor
jecxz
jns
dec
ret
lock
and
test
repnz
sbb
mov
and
xor
test
jp
jge
mov
into
bound
gs
pop
mov
out
sarb
mov
sub
incb
xlat
rcrl
pop
cmpsl
rorb
pop
add
push
out
outsb
xor
test
push
or
mov
xor
call
sarl
sub
ds
mov
adc
into
and
aas
lret
push
sub
loop
ds
scas
js
fsubrs
ja
xlat
shrb
inc
lcall
or
lea
int3
test
add
cltd
xchg
or
hlt
icebp
and
inc
jecxz
lods
push
mov
fdivrl
push
xchg
invlpg
arpl
sbb
dec
xor
setg
inc
jmp
jg
pop
sbb
rclb
movsl
mov
mov
outsl
xchg
loope
push
mov
scas
jecxz
test
jb
shll
mov
int3
ret
rcr
test
and
pop
and
ret
imul
xor
dec
add
rcr
mov
dec
inc
dec
imul
les
lcall
test
jl
pusha
leave
add
mov
adc
pop
call
stos
and
or
add
pushf
jge
jmp
inc
push
jo
xchg
cmc
jae
sub
inc
loope
jae
jne
jp
mov
imul
scas
pop
push
push
ds
mov
push
stos
idivl
push
inc
lcall
loope
stos
negl
mov
pop
cmc
sub
cwtl
es
outsb
cltd
pextrw
rcrb
shll
fisubrl
jecxz
fadds
or
jl
iret
ds
inc
popf
outsb
push
loopne
jle
bound
data16
sub
rclb
scas
add
out
scas
mov
xlat
inc
mov
mov
xor
mov
sbb
test
outsl
mov
rcrb
sub
mov
mov
popf
sbb
enter
pavgw
popa
popa
adc
xchg
and
and
repz
push
xchg
pop
or
shr
mov
xchg
sahf
adc
stos
pop
pusha
sub
iret
jecxz
lret
jns
lcall
mov
pop
rcrl
inc
mov
ret
out
mov
push
mov
in
pop
out
jne
xor
repnz
mov
scas
mov
and
mov
pop
aaa
cmp
xchg
xorl
js
loop
pop
pop
dec
push
daa
push
pop
int3
mov
fsubl
cmp
andb
cltd
add
xchg
loope
dec
rclb
mov
add
inc
mov
sti
mov
mov
pop
mov
adc
jecxz
jae
or
call
lret
loop
mov
fsubp
in
mov
cmp
mov
push
lods
dec
push
push
pop
push
mov
jle
ds
cmpsb
mov
xchg
shrb
push
jmp
popf
test
ja
mov
rcll
fiadds
mov
stos
inc
rorb
add
rcr
leave
dec
cmp
pop
mov
xor
add
sub
mov
or
inc
xchg
mov
es
ds
sahf
loope
loopne
in
push
inc
mov
dec
out
xorl
inc
xchg
in
sbb
cli
icebp
xchg
sub
mov
popf
les
jae
das
or
dec
jnp
xlat
xor
jno
mov
xchg
and
jae
rcrb
stos
inc
xchg
cmp
out
xlat
movsl
repz
xchg
mov
mulb
ret
mov
insb
jo
mov
mov
dec
xchg
adc
dec
mov
adc
call
addl
cmc
test
add
mov
push
sbb
jl
into
push
mov
push
and
mov
jno
mov
sub
sbb
push
lahf
cmpsb
enter
call
arpl
mov
movsl
push
add
movsb
imul
cli
stos
ret
adc
outsb
stc
cwtl
repz
incb
adc
pushf
andb
adc
dec
jno
out
mov
addr16
inc
xor
add
shlb
test
rcrb
xchg
and
arpl
imul
add
pop
mov
out
int3
jnp
lods
test
lcall
fnstenv
data16
loop
imul
imul
cld
ret
mov
jge
sub
jbe
cmp
int3
cmpsl
inc
inc
jp
add
faddl
xor
lods
mov
lods
dec
xchg
subl
test
xor
aam
ds
mov
jnp
mov
push
push
cmpsb
cmp
loop
inc
cs
jmp
sbb
pop
in
lret
inc
in
aas
aas
insb
cmp
lcall
pop
xchg
std
mov
lds
jmp
pop
cmp
mov
aaa
or
gs
pusha
icebp
xor
add
scas
enter
jecxz
push
jne
add
dec
push
aaa
aaa
jle
ja
in
addr16
xchg
mov
push
xchg
bnd
mov
xchg
ficomps
jp
mov
pusha
jbe
jno
push
lcall
dec
dec
lods
stos
mov
jb
daa
orl
fmull
cmp
jnp
test
mov
inc
pop
jns
xor
aad
push
lret
xchg
int
add
dec
aas
mov
jmp
out
mov
popa
jae
scas
das
pop
mov
push
movsl
adcb
pop
and
xor
xchg
mov
xor
xchg
cmc
xchg
clc
inc
jmp
je
sub
dec
cld
sub
test
push
lock
out
arpl
rolb
test
xchg
cmpsb
popf
arpl
xchg
fmull
sub
les
scas
addr16
dec
cmp
cmp
insl
dec
lea
lods
shr
pop
in
rcll
cltd
mov
ret
sub
dec
sbb
mov
clc
mov
xchg
pop
sbb
in
pop
xchg
adc
pusha
enter
xlat
gs
mov
fsubrs
test
dec
outsl
jae
cmp
cli
sahf
pop
adc
scas
mov
mov
push
idiv
in
mov
cvtdq2ps
mov
jle
xchg
ret
sub
xchg
lods
push
loopne
repz
loop
rorl
fcoms
jns
push
js
dec
loop
sbbb
mov
xlat
cmc
sub
sub
inc
and
in
jge
mov
push
dec
add
push
adc
cmp
cs
inc
inc
xchg
mov
mov
test
ja
push
inc
xchg
push
leave
lret
pop
xchg
sarb
movsl
mov
ret
stos
shlb
and
imul
sub
and
adcb
js
fadds
ja
or
test
mov
push
scas
loopne
and
mov
out
sub
fisttpl
dec
insb
dec
fcmovnu
adc
cmpsl
mov
adc
sub
and
aaa
mov
dec
push
pop
or
cmp
js
push
das
das
push
xchg
mov
mov
aas
jnp
in
lcall
push
lcall
pusha
pop
je
mov
mov
stos
test
movl
insb
pop
leave
je
scas
mov
in
mov
repz
pop
cmpsl
lret
xchg
ret
hlt
jne
sub
fwait
mov
mov
jle
push
pop
xor
mov
cmp
mov
aaa
out
leave
pop
and
jp
pop
aas
test
int3
cltd
popl
inc
push
pusha
cli
and
movsb
lahf
lods
push
push
mov
pop
xlat
ljmp
cmp
nop
scas
int3
mov
adcb
ret
sub
jecxz
add
jns
mov
gs
incl
push
mov
in
sti
mov
out
cmp
xchg
imul
cli
cli
xor
xor
sbbb
dec
fdivrs
jno
lcall
outsb
lods
lret
ds
popa
dec
in
mov
fwait
xchg
ja
cmc
aam
imul
xchg
lret
int
sub
sbb
jne
xor
and
das
outsl
out
mov
xchg
stc
dec
imul
xchg
push
and
dec
inc
repnz
imul
rol
xor
mov
stos
xor
enter
adc
push
pop
aam
mov
fistps
je
inc
mov
push
or
dec
inc
pop
mov
dec
jmp
mov
fcmovu
adc
sub
test
dec
ret
hlt
test
jo
mov
push
dec
in
dec
inc
and
popa
repz
dec
call
xor
leave
lods
cmp
orl
das
cmpsb
shlw
frstor
mov
cmpsl
pop
ds
sbb
js
pop
dec
lret
inc
lods
push
shrl
hlt
fbld
out
loop
adc
in
sarb
je
pop
lods
dec
aaa
mov
push
ss
arpl
pop
xlat
push
sbbl
or
jae
nop
mov
imull
movsl
and
mov
scas
pushf
notb
push
add
mov
dec
in
out
out
cmp
mov
jmp
cmp
jno
adc
jae
test
in
xchg
aad
aaa
add
adc
mov
dec
ret
cwtl
fisubrs
mov
xlat
cmp
push
xchg
push
mov
sub
push
mov
out
insl
das
inc
icebp
pop
aam
ret
push
enter
lds
call
fistps
mov
daa
hlt
jbe
fisubrl
mov
rcrb
aad
and
pop
sub
pop
mov
clc
notb
cmp
xor
into
mov
mov
mov
iret
addr16
bound
xor
dec
pop
int
inc
subb
mov
leave
lret
mov
inc
movsb
mov
and
out
ljmp
cwtl
pushf
adc
jbe
dec
lahf
xchg
pop
add
test
mov
inc
jmp
cli
lcall
cmc
mov
cli
mov
jecxz
arpl
and
mov
dec
xchg
mov
jecxz
cmp
fcmovne
push
inc
popl
gs
hlt
and
sbb
mov
sbb
daa
je
mov
mov
xchg
cmp
dec
inc
rcr
scas
push
aas
sbb
mov
inc
or
in
lock
mov
sub
push
sbb
mov
pusha
pop
bound
jle
mov
cltd
xchg
pop
mov
insl
add
popf
int
mov
pushf
sub
mov
popf
sub
and
jp
fs
ja
push
pusha
push
cld
mov
fs
bndstx
loop
mov
xor
roll
sub
cwtl
dec
and
pop
ds
cs
xchg
in
lcall
mov
aaa
insl
test
jnp
jnp
mov
push
call
push
xor
popf
mov
out
insl
push
lock
push
jle
and
out
gs
pop
clc
roll
imul
out
push
push
fldt
xor
jo
xchg
push
fwait
and
sahf
pop
push
ja
mov
push
xchg
lods
lock
scas
push
test
sub
imul
pop
or
xor
xor
loop
mov
mov
lods
cmp
mov
jp
adc
mov
pop
xchg
cmp
test
and
negb
inc
jae
test
lock
addr16
aaa
mov
shrb
movl
and
aad
add
pop
bound
popf
notl
lea
mov
gs
mov
add
ja
jb
test
jne
sti
in
inc
movl
dec
sub
push
bound
inc
sbb
mov
pop
jnp
cmc
rcll
mov
cmc
mov
jecxz
pop
mov
and
mov
mov
pop
addl
rolb
imul
or
adcl
pop
insb
cmp
mov
loop
imul
and
jns
inc
les
out
cwtl
fmull
jecxz
or
mov
push
loope
in
pop
and
and
leave
arpl
or
repz
sbb
fsubrl
stc
xlat
sar
inc
fwait
popf
repnz
xchg
iret
gs
repz
xchg
cli
dec
jmp
adc
leave
or
sbb
popa
xchg
mov
pop
adc
aam
cltd
mov
popa
mov
cmc
inc
push
cmp
and
push
sbb
cmp
out
push
clc
sahf
dec
iret
loop
mov
iret
xchg
and
cmp
ljmp
jge
inc
adc
dec
test
ret
fldt
jo
jmp
sbb
mov
add
mov
sub
pop
cmp
jle
imul
lods
mov
pop
jbe
xchg
in
or
adc
fwait
add
cli
test
into
fsub
jmp
lcall
das
dec
fs
jbe
and
push
dec
or
addb
daa
xchg
fs
cli
jnp
and
nop
ljmp
addr16
push
sbb
adc
or
mov
pop
jecxz
inc
repz
add
ror
adc
push
and
mov
lret
mov
xor
lcall
add
mov
stos
xchg
sahf
cmc
fcmovne
mov
ss
jbe
mov
int
mov
sti
pusha
sbb
sbb
pop
repz
push
ss
adc
adc
in
push
std
mov
lret
cli
xchg
jae
sbb
aad
inc
incl
pushl
jnp
mov
push
test
jb
sbb
mov
test
ret
stc
inc
push
jge
icebp
add
test
outsb
mov
into
xor
fmuls
movl
and
jecxz
or
inc
jp
xchg
push
push
cmp
pop
loop
fildl
adc
dec
mov
hlt
popf
lds
xor
sub
xor
sahf
jg
mov
lret
pop
jl
inc
adc
arpl
out
cmp
cwtl
mov
cmp
jecxz
sbb
int
popa
out
xor
and
pop
lea
adc
inc
mov
popf
jle
and
pop
ljmp
lret
leave
xor
sbb
mov
mov
pop
mov
jbe
daa
shll
mov
std
aad
rorl
fcomps
inc
cmpsb
lret
mov
test
movsl
int
mov
out
xlat
xchg
push
jge
sub
pop
iret
das
push
into
push
mov
bound
rorb
ss
dec
xchg
subb
mov
inc
sbb
call
sub
push
xchg
xchg
push
sbb
test
xor
jns
push
nop
mov
mov
push
call
mov
lcall
inc
xlat
sub
pop
or
pop
into
cmp
sarl
and
pop
push
test
jb
push
call
mov
fwait
mov
push
mov
rorl
stos
lahf
mov
mov
outsb
aaa
testl
sub
std
inc
es
pop
dec
push
xchg
pushf
jo
cwtl
leave
in
cmp
pop
outsl
xor
ds
fs
aas
mov
pop
and
cltd
dec
xor
xacquire
into
ds
cmp
mov
mov
mov
inc
mov
popf
or
es
pop
push
mov
sub
bound
fwait
shll
loop
push
add
shlb
cli
jnp
nop
imul
lcall
das
pushf
push
mov
lds
xor
popa
jg
aam
adc
adc
addb
or
and
xchg
dec
test
jge
mov
scas
mov
push
mov
dec
fdivrs
mov
pop
push
insb
push
movsb
inc
xor
push
sub
or
push
mov
movsb
inc
fadds
adc
popf
adc
mov
cmp
dec
in
not
xor
push
or
movsb
repz
sbb
sub
lock
or
hlt
mov
pop
cld
ljmp
sar
test
dec
mov
ret
jno
pop
sbb
pop
imul
lock
dec
es
ficomps
jbe
movsl
inc
jp
xchg
mov
das
sub
lods
shlb
push
push
ret
jmp
xchg
stos
xchg
in
pop
ret
pop
push
fcmovu
iret
cmc
in
push
adc
es
xor
pop
lret
jl
mov
push
jb
and
addl
lea
dec
mov
cmpsl
in
dec
test
sub
jb
sub
push
je
shrb
jge
iret
jno
in
jae
std
cld
ret
icebp
or
xchg
test
push
cs
ss
lret
lret
cmpsl
out
jbe
push
and
scas
dec
cmp
les
lea
sbb
sub
rolb
xor
sahf
leave
push
xor
dec
mov
rcl
pop
mov
xchg
pop
jl
sbbl
insb
loop
lcall
sti
js
or
jg
stos
mov
xchg
jecxz
or
in
xorb
sbb
fimull
xchg
lret
adc
sarb
cmp
mov
dec
mov
push
inc
movsb
cmpsb
sbbl
xor
mov
das
jl
inc
inc
pop
pop
stos
andl
sbb
in
testb
in
pop
lahf
sub
adc
dec
mov
xor
cwtl
push
or
push
xor
push
dec
jge
pop
cmp
xchg
movsb
xchg
xor
sub
inc
adc
inc
mov
test
push
rclb
leave
pop
or
dec
mov
js
add
jo
xchg
pop
xchg
and
mov
xchg
and
sub
leave
sub
mov
js
push
pop
adc
pop
adc
fmuls
mov
pop
sub
fmull
mov
enter
mov
jmp
jecxz
xor
rcrb
pop
push
mov
jbe
in
pop
dec
xchg
xchg
xor
outsl
roll
lods
popf
roll
mov
je
sbb
cmp
leave
sbb
out
lock
pop
ja
push
stc
cmpsl
cmp
dec
inc
outsl
mov
inc
mov
cmpsb
add
xor
addl
cli
push
mov
push
mov
popa
stc
in
dec
jp
jecxz
je
cmp
clc
push
jg
sub
dec
arpl
pop
pop
fiadds
xchg
push
inc
fbstp
pop
adc
jns
xchg
cs
xor
mov
mov
dec
lcall
or
pusha
lock
and
xor
inc
arpl
cli
dec
test
xor
and
int
out
test
jle
cmovne
and
stc
lock
xlat
into
or
add
repz
pop
xchg
sub
shr
mov
outsl
jle
adc
push
and
cmpsl
aas
sbb
adc
pop
lods
push
test
mov
sti
int3
push
lret
xchg
or
mov
mov
add
sbb
stc
fmul
xorl
insb
jge
push
mov
mov
pop
push
xor
das
cmpsb
notl
xchg
sarl
call
repnz
pusha
mov
mov
sub
loop
xor
int3
daa
cltd
sub
dec
std
jns
cmp
fnstcw
ss
lcall
dec
sti
xchg
flds
leave
test
inc
add
in
lcall
push
inc
jge
mov
jp
in
in
leave
push
jg
into
movsl
xchg
rorl
fildll
test
test
insl
sbb
shll
jecxz
ss
imul
adc
pop
sub
les
lods
pop
sub
and
aad
shlb
push
outsl
fldcw
inc
cwtl
mov
push
movsl
subps
cmpsb
mov
iret
adc
jge
outsb
aam
jns
push
aaa
push
jnp
inc
jns
sbb
pop
ja
fistps
inc
sub
lret
mov
pushf
adc
lret
jl
jge
jne
xchg
in
pop
push
adc
push
popa
movsl
insl
mov
cmp
hlt
call
pop
xchg
into
inc
mov
pop
xchg
addr16
mov
bound
jne
push
lds
mov
xchg
or
outsb
jbe
scas
cmp
mov
lcall
sub
xchg
and
scas
enter
sbb
lock
mov
push
stos
or
or
sub
mov
inc
mov
fistps
out
rorl
ss
es
ja
jne
fimull
movsb
scas
mov
jae
pop
dec
pop
stc
jmp
test
in
mov
sbb
adc
std
or
out
dec
cli
jo
mov
imul
add
mov
mov
lret
rol
mov
jno
push
dec
mov
xor
add
mov
cmpsb
and
lock
push
ret
addr16
sub
lret
and
adc
movsb
sahf
stos
mov
push
mov
add
movsb
xlat
ret
iret
rol
xor
dec
adc
cmp
fldcw
lods
dec
inc
jne
mov
xlat
das
dec
mov
ret
jnp
rcll
fnstcw
pop
sub
scas
sbb
push
jns
movsb
sub
scas
cwtl
ja
test
pushf
inc
sbb
and
sub
enter
mov
push
cmpb
xchg
out
pop
xor
add
out
jmp
test
jbe
icebp
dec
orb
adc
insb
and
fcomip
lret
inc
fstps
mov
imul
imul
mov
cmp
mov
lds
ret
or
divb
xchg
aaa
jl
inc
jbe
xor
or
push
cltd
test
insb
push
sub
in
push
ficompl
sub
sub
add
sbb
and
pop
xchg
jae
test
loopne
sub
call
nop
mov
mov
loopne
je
push
fisubrl
dec
lcall
insb
jmp
jns
mov
push
ja,pn
lcall
sbb
jnp
idivl
mov
das
outsl
or
out
sbb
loopne
std
xchg
push
push
loop
shrl
test
out
and
daa
dec
pop
jne
cld
xor
mov
inc
dec
jae
add
jl
jns
jne
pusha
or
adc
push
jl
fidivrl
movsl
mov
call
rcr
subb
jns
test
jo
mov
push
add
push
jbe
js
push
jne
jns
sbb
xchg
xor
sahf
pusha
xchg
jne
leave
lods
out
ds
call
orl
adc
dec
arpl
cs
xor
jns
pusha
cwtl
rcrb
push
stos
mov
lret
push
sub
and
imul
sub
mov
and
outsl
loop
ja
gs
ficoml
mov
mov
add
sbb
fldenv
pop
aas
sbb
aas
neg
push
pop
lret
jnp
insb
mov
nop
xor
imul
and
loopne
test
sbb
mov
adc
ljmp
jecxz
jo
sbb
aad
test
fs
push
xorb
aam
sub
mov
sub
inc
xor
cmp
fsubp
xchg
inc
inc
jno
pop
push
repz
jnp
sbb
push
ds
das
sub
daa
sbb
loopne
pop
jg
or
xchg
dec
popa
sbb
mov
enter
imul
sbb
enter
pop
ds
inc
mov
cli
xchg
or
insb
push
jp
xchg
rcr
les
in
lcall
sub
jge
add
add
das
cmpsl
nop
lods
rolb
call
pop
jp
dec
dec
xchg
adc
dec
sub
push
gs
sbb
mov
jmp
or
fiaddl
fs
lret
mov
lret
sub
cmp
mov
scas
rcr
stos
xor
xchg
and
lds
mov
leave
dec
shl
into
push
int
data16
pop
push
mov
jle
pop
data16
xchg
push
pop
imul
dec
push
cmc
inc
pop
leave
cwtl
lock
inc
mov
mov
daa
aam
cmc
mov
inc
or
jmp
dec
cmpsb
mov
in
ds
out
pop
or
mov
mov
bound
jecxz
sub
or
adc
fmuls
aad
insb
and
xchg
cltd
dec
push
fbstp
in
mov
and
outsb
jbe
shlb
insb
xor
inc
daa
fdivrp
pop
fisubrs
mov
popa
jne
dec
jns
push
lock
aam
push
adc
jnp
or
jle
add
and
cmp
xchg
push
dec
mov
or
xor
pop
xlat
sub
ss
dec
sub
stos
mov
xchg
ja
pusha
test
cmp
sub
adc
jb,pt
negb
test
hlt
adc
add
lock
orl
cmp
sbb
scas
negb
push
add
dec
inc
or
xchg
aas
add
sbb
insb
enter
push
lods
or
aaa
adc
and
sbb
jo
mov
movsb
or
mov
nop
xchg
cmp
and
std
in
sub
lods
repnz
jmp
out
insb
popf
adc
or
std
and
add
arpl
mov
xor
sahf
sub
int
pop
xchg
adc
test
mov
icebp
popa
aam
out
xchg
enter
or
scas
xchg
rcr
and
test
jmp
mov
enter
cmpsl
loop
and
add
cmp
sti
jne
xchg
clc
ljmp
mov
xor
in
add
pop
mov
pushf
loopne
dec
cmp
outsb
test
mov
xchg
xchg
pop
jmp
idivl
push
shl
push
mov
jae
les
mov
push
out
in
jne
fdivl
fnstcw
std
test
xchg
mov
scas
mov
push
pop
sub
and
sbb
xchg
push
sbb
dec
flds
insl
filds
outsl
push
and
xor
je
mov
inc
cs
outsl
mov
fisttpll
add
in
or
xchg
push
jns
icebp
push
push
jecxz
dec
mov
push
mov
push
test
test
add
xchg
leave
test
mov
fcomps
fisubrs
lock
out
enter
loop
or
xchg
jmp
mov
lods
out
lret
je
adcl
pop
jbe
cmpsb
aam
add
mov
fyl2x
mov
and
int
jge
insl
sub
sub
mov
ljmp
mov
push
test
movsl
dec
dec
or
jns
push
sarb
pop
sbb
aad
mov
cmp
jno
ss
jnp
inc
popf
lret
xchg
lea
lds
push
ret
mov
ja
sub
and
addl
sbb
orb
push
fisttpl
lds
mov
and
push
ret
pop
fs
jle
pop
sbb
scas
in
lret
test
scas
jae
jecxz
repnz
mov
test
jle
cmp
test
xchg
push
mov
enter
xchg
pushf
inc
mov
push
cld
negl
cmp
lcall
je
shr
jo
mov
repz
or
jb
lret
in
ret
mov
push
pop
inc
mov
jmp
jmp
xor
cltd
push
loopne
bound
and
gs
push
je
loope
fldl
test
adcl
fdivrs
fs
pop
inc
adc
gs
imul
fsts
cmp
mov
lds
add
lret
aas
cwtl
and
cmp
sub
repz
or
repz
inc
stc
sbb
leave
lods
arpl
and
stc
out
jle
mov
test
push
cwtl
fiadds
pushf
roll
leave
stc
lret
mov
test
ffreep
jg
dec
dec
cwtl
sbb
rclb
cs
mov
cmc
cwtl
lahf
pop
mov
mov
add
push
mov
and
pop
jmp
fbld
ret
inc
xor
push
mov
cmc
inc
out
xor
clc
je
push
mov
je
scas
xor
push
sbb
out
sbb
mov
jae
jle
ja
push
mov
xchg
mov
push
push
imul
inc
jne
scas
push
scas
push
dec
cli
cmc
dec
fxch
and
jnp
xor
push
xchg
test
addb
sub
out
sub
sbb
clc
bound
xor
jmp
in
sub
fnstcw
hlt
mov
sysexit
jbe
jecxz
sub
lds
js
jl
hlt
dec
dec
sbb
insb
mov
sbb
lret
imul
adc
popa
add
imul
out
push
or
mov
js
int3
mov
or
mov
pushf
push
mov
inc
jbe
scas
arpl
mov
cli
notb
adc
sub
mov
sub
xor
xchg
imul
xchg
xchg
push
jl
sbb
iret
mov
les
aas
push
rorl
xchg
rep
mov
cmpsb
ret
mov
cmp
jnp
roll
and
ljmp
push
in
cmpb
dec
into
pop
and
loop
mov
jp
sub
daa
sbb
pop
mov
push
or
dec
std
cmp
mov
adc
mov
mov
and
mov
negl
push
jmp
xor
mov
adc
and
push
inc
xor
ss
push
inc
or
jge
loopne
lcall
cmp
cmp
testb
out
mov
in
lds
ljmp
cmpsl
shlb
push
outsb
pop
sub
cli
lods
cmc
and
mov
mov
sub
ss
mov
xchg
mov
cld
shlb
loope
fbstp
les
cmpsl
arpl
call
add
xor
mov
mov
test
ja
or
shufps
xorb
loope
ss
shrl
xlat
xchg
xorb
outsl
insb
xchg
out
adc
adc
sub
xlat
fdivrl
fdivrp
and
cmp
xchg
xor
lods
sbb
lcall
mov
and
pop
leave
jbe
lods
add
les
mov
inc
pop
add
je
push
mov
mov
sbb
mov
sbb
mov
aad
mov
int
sahf
xchg
push
push
mov
cs
aam
mov
jbe
cld
and
push
mov
scas
out
jbe
out
add
popa
fisubrl
stos
jmp
lds
pop
xchg
arpl
mov
mov
mov
insl
dec
popa
lret
gs
in
test
aaa
add
jle
xchg
mov
test
mov
mov
stc
xor
jle
mov
loopne
jmp
ret
fwait
add
test
mov
and
jmp
sbb
inc
out
test
movsb
fs
loope
push
jae
sub
mov
or
test
lret
cli
jae
mov
aad
push
pop
test
repz
in
js
or
inc
addl
fs
into
ljmp
jp
inc
mov
xchg
or
cmp
scas
pushf
ret
sahf
adc
fimull
jl
hlt
mov
mov
xchg
cmp
mov
sbb
adc
and
sbb
or
mov
addr16
sub
xor
lock
fistpll
mov
push
es
nop
pop
add
jbe
jne
outsl
jno
pop
jp
mov
inc
iret
lahf
rcrl
lods
sub
mov
inc
ss
or
cwtl
mov
dec
stos
or
mov
cmp
in
push
dec
cmp
mov
jnp
clc
cmc
mov
ja
push
rcl
fwait
insb
scas
push
push
cmpsb
insb
lods
stc
sarb
xchg
hlt
adc
lea
mov
adc
cmp
dec
sbb
cmp
mov
adc
or
push
clc
mov
xor
pop
jb
dec
or
pop
cmp
jbe
xorb
ss
jno
fwait
mov
orl
dec
sbb
push
pop
aam
sti
int
pusha
aad
mov
ljmp
enter
decl
aad
aas
mov
and
xchg
sub
lea
mov
loop
and
ds
add
dec
mov
lds
xor
shll
mov
pop
dec
push
fmulp
insb
lcall
or
call
mov
dec
pop
imulb
dec
loopne
shl
scas
les
into
ret
or
pop
in
push
cmp
insb
mov
insl
test
push
popa
int
mov
push
xor
mov
roll
in
xor
fstpt
lcall
push
mov
fsts
popa
and
cltd
int3
test
pop
mov
and
lea
xor
push
out
inc
lret
cld
call
call
jae
pop
push
xor
call
jo
add
fucom
xchg
hlt
or
popf
sbb
push
mov
in
mov
sub
push
xchg
fmul
test
xor
inc
insl
lods
add
sub
sbb
scas
pop
dec
and
jno
inc
and
icebp
push
xchg
aad
dec
dec
mov
xchg
and
pop
out
insl
adc
stos
xchg
aaa
xchg
xor
mov
shrl
jge
shll
cltd
jg
push
test
test
xor
ss
incl
adc
es
push
mov
cmp
fidivs
das
add
lahf
cld
adc
jge
fstl
btsl
rorb
or
adc
xchg
test
aam
mov
divb
pop
or
jmp
jp
scas
xchg
adc
pushf
pop
xlat
cli
and
mov
and
xor
je
aam
in
js
push
push
scas
jno
push
cli
movsb
pop
cmp
xchg
sub
es
icebp
pop
and
jmp
adc
lods
jb
jmp
and
and
dec
sub
or
and
daa
dec
mov
add
pop
inc
sub
xor
mov
icebp
sbb
dec
stc
les
mov
into
adc
fsubs
mov
cltd
add
mov
insl
imul
mov
sbb
xchg
pop
fsubrl
xchg
ja
jmp
mov
mov
jno
das
xchg
hlt
mov
scas
adc
jp
xchg
pop
cmp
lahf
sub
jg
inc
inc
shll
repnz
cld
mov
cmc
xchg
mov
add
push
cmovl
rolb
out
test
xchg
xlat
test
fs
add
stc
test
mov
notl
out
outsb
xchg
popa
mov
pop
adc
out
lock
cmp
sub
jg
lods
pop
out
popl
enter
fs
push
push
mov
lds
mov
sahf
and
popf
add
jb
and
cld
add
loopne
jp
dec
push
insl
enter
ljmp
jae
pop
mov
mov
repnz
sbb
sti
je
cwtl
gs
dec
jne
hlt
nopl
add
push
pop
add
movsl
push
adc
jle
jg
and
fwait
sub
aaa
addb
fsub
mov
jecxz
push
or
sbb
push
pop
stos
push
push
or
fsts
push
fs
add
arpl
fyl2xp1
out
mov
div
repz
mov
or
std
mov
cs
fdivp
bswap
pop
addr16
pop
xor
test
shlb
push
in
shl
or
and
es
mov
addr16
sub
shll
jae
cltd
sbb
inc
cmp
jne
nop
das
popf
repz
xchg
push
mov
aad
stos
shrl
ds
aam
imul
jno
lock
cwtl
dec
pop
jo
or
xor
cltd
lret
xchg
mov
adc
sbb
mov
bound
fsubrl
loop
and
mov
sbb
in
sbb
mov
adc
pop
or
pushf
repnz
or
cmp
outsl
pop
or
push
jg
lret
addb
ret
dec
cwtl
adc
mov
lret
arpl
out
jnp
push
cmp
out
outsb
pop
sub
xor
mov
int
sbb
stos
and
cld
or
into
insb
imul
out
or
aaa
inc
std
daa
mov
rcrl
clc
jp
out
pop
add
fdivs
push
fldt
xor
pop
mov
out
xchg
mov
and
mov
cs
outsb
cmp
inc
cmp
sub
push
shr
lret
xchg
aas
pop
sbb
shlb
mov
xchg
add
cmp
xor
clc
xor
push
xchg
jmp
add
rclb
das
clc
or
repnz
jno
nop
dec
pop
xchg
push
call
inc
and
jbe
cmp
mov
adc
loop
cld
gs
add
out
jbe
call
jb
push
stos
mov
cmp
lret
xchg
out
inc
mov
fimuls
aam
sbb
xchg
sbb
in
es
mov
movsb
inc
push
jns
push
add
ds
inc
ret
fiadds
xlat
test
rcr
fcmovnbe
push
pop
or
sbb
ja
leave
adc
ja
inc
cmp
cmp
std
mov
fucomp
adc
inc
push
pop
out
jo
sbb
arpl
jg
dec
out
cmp
fimuls
ret
sbb
xlat
cwtl
mov
pop
cmp
pop
mov
addb
xor
push
test
lahf
xlat
cmp
push
xchg
gs
ss
jle
repz
gs
and
mov
es
xlat
cld
lea
cmpsl
inc
shl
mov
cmp
imull
cmp
xchg
jg
lret
or
int
scas
shl
push
or
clc
jb
pop
sbb
int3
pop
xchg
mov
mov
test
fwait
add
mov
outsl
sbb
enter
test
add
into
jns
mov
dec
movsb
push
xor
add
in
fdivl
test
mov
fldcw
insl
push
pop
nop
outsb
mov
mov
call
fidivl
test
gs
sub
and
mov
push
movsl
inc
jae
add
lods
jp
sti
insl
jecxz
xor
fwait
lcall
cmp
push
sbb
dec
fimull
mov
hlt
xchg
in
pop
sub
adc
dec
movsb
mov
and
mov
xchg
in
mov
cmpsb
sbb
xor
enter
scas
je
out
and
mov
scas
lea
inc
scas
jb
ret
mov
divl
sub
pop
int
adc
inc
sbbb
push
cld
inc
enter
test
sub
cmp
mov
lea
pop
push
lds
pop
push
sbb
pop
pop
jmp
enter
inc
pop
cmp
stos
les
mov
jns
das
les
fwait
int3
mov
sbb
insb
adc
rorl
testb
sub
pop
hlt
sarl
rcll
push
loopne
sti
jmp
loope
call
mov
inc
outsl
push
add
leave
insb
xor
xor
test
pop
mov
xor
sub
scas
or
cmp
xchg
push
dec
mov
inc
push
int3
adc
xchg
xchg
mov
fnstcw
jnp
inc
xchg
in
out
stos
cmp
sub
jo
xor
into
out
pop
ss
int3
dec
rorl
push
push
xchg
cmp
dec
cwtl
adc
sbb
add
daa
mov
mov
push
mov
xchg
mov
fxam
inc
mull
cmpsb
sub
into
ljmp
rorb
sar
adc
aas
xchg
aad
out
jp
sub
negl
in
das
les
jp
cmp
frstor
lea
sub
stos
rcrl
in
push
dec
pop
into
shr
cmp
add
mov
imull
jbe
push
add
mov
mov
sbb
fstl
or
pop
repz
sti
lock
push
clc
adc
call
push
lds
sub
jbe,pt
out
mov
dec
out
fs
vmread
jl
dec
mov
cwtl
leave
jl
mov
out
aad
int
int3
sub
or
and
jns
pop
rcl
cmpsb
das
dec
inc
inc
push
call
add
add
loop
jmp
fidivs
int
push
lret
push
fstpt
movsl
mov
push
lret
mov
mov
jp
push
std
in
movsb
out
pushf
xchg
lock
lret
mov
add
adc
fcmovne
push
pop
xor
add
or
ficoml
pop
sub
mov
test
push
cmp
das
jbe
or
and
mov
hlt
mov
fcomi
dec
loop
cmp
orl
or
dec
dec
and
jno
dec
xchg
cwtl
sarb
mov
in
shr
das
mov
jbe
cmp
or
insb
pop
push
jae
xchg
push
lods
lcall
xchg
and
js
fwait
out
jnp
in
jecxz
roll
sbbb
xchg
add
cmp
clc
pop
arpl
insl
mov
xor
iret
xchg
inc
shl
ss
arpl
sub
dec
repnz
pop
or
mov
lds
dec
xchg
push
push
xchg
mov
mov
adc
aas
test
xchg
cmpsl
cmp
dec
pop
lea
hlt
loop
mov
lcall
cmp
jae
xchg
sbb
hlt
insl
jecxz
mov
mov
pop
or
push
adcb
dec
fsubrs
mov
adc
xchg
pop
inc
fistps
dec
sub
xchg
movsl
pop
imulb
push
call
lret
das
in
and
adc
repz
icebp
mov
mov
sarb
pop
mov
js
push
insl
fwait
sub
mov
adc
mov
aaa
bound
ljmp
adc
jo
fadd
loopne
jle
fcoms
pop
dec
mov
es
xchg
mov
xor
dec
xlat
pop
out
cld
cmp
pushl
push
scas
sbb
sbb
xchg
ss
stos
and
divl
mov
xor
stos
jae
insl
and
and
fimuls
mov
lods
shlb
mov
fimuls
mov
mov
mov
mull
pop
out
jnp
out
mov
shll
mov
xlat
sbb
mov
int3
xchg
sub
pop
repz
mov
movb
mov
cli
sbb
jno
and
and
enter
roll
out
or
fidivrs
pop
pop
add
push
imul
mov
push
mov
jae
mov
hlt
and
inc
stos
push
and
rsm
sahf
ret
lahf
mov
es
dec
push
lret
mov
inc
rol
cmp
and
xchg
rclb
mov
and
mov
add
adcb
outsl
mov
cmp
mov
nop
mov
mov
xor
xor
mov
int
dec
jb
xchg
pop
je
sub
mov
mov
xor
xchg
cmp
mov
xchg
lea
add
pop
sti
out
sub
int
repz
in
shll
xor
mov
or
cmp
mov
inc
dec
mov
xchg
adc
push
mov
clc
cwtl
and
je
icebp
mov
int3
cld
das
mov
jecxz
test
sbb
mov
sub
xchg
fimull
cmp
loop
mov
sarl
data16
jecxz
shll
push
jae
jbe
imul
mov
out
hlt
and
inc
xchg
sbb
sub
jp
jb
xchg
push
sbb
and
xchg
mov
lds
dec
push
das
add
stos
sti
jb
push
in
arpl
popf
bound
push
aad
cs
mov
push
mov
fxch
repnz
shll
cs
xchg
js
jo
cmp
push
mov
sub
rep
daa
cmp
js
cmp
dec
push
inc
rcl
lret
mov
iret
mov
push
adc
lea
xor
mov
mov
psubusb
sbb
inc
xchg
adc
add
jb
fcomip
and
lock
xor
out
rolb
frstor
enter
pop
and
repnz
gs
mov
pop
lds
jmp
stc
push
sbb
sbb
stos
jbe
das
mov
loope
lret
jbe
or
inc
rclb
dec
ja
push
addb
into
mov
mov
stc
fcmove
sub
sub
jnp
dec
cmp
es
dec
std
mov
jne
inc
adc
push
sub
loopne
mov
cmpsl
subb
pop
cmp
xchg
repz
insb
and
push
in
shll
hlt
jle
into
dec
adc
pop
push
pop
popf
mov
mov
jbe
sub
inc
out
jne
inc
pop
sbb
mov
xchg
packuswb
xor
sbb
stos
mov
push
lods
inc
jg
jp
aad
pop
imul
in
or
dec
iret
jne
std
roll
test
test
lahf
pop
cmp
std
xchg
pusha
push
xchg
jo
jl
je
or
push
jmp
mov
negl
adc
and
out
push
or
adc
inc
call
mov
pop
addr16
mov
outsb
mov
repnz
jo
xchg
clc
mov
mov
daa
testl
lock
call
mov
xchg
adc
or
jl
ljmp
mov
jmp
andl
mov
and
loopne
ds
and
inc
and
push
pop
jbe
jbe
cmpl
movsb
cltd
or
and
into
shl
mov
stos
push
dec
pop
fmuls
or
add
add
mov
pop
pop
push
leave
stos
cld
lds
das
fsub
aaa
pop
loop
or
dec
in
lcall
mulb
out
push
outsb
push
ljmp
ret
xchg
mov
xchg
push
pop
dec
inc
xchg
or
out
mov
int
push
lahf
adc
stos
jle
cmp
jmp
clc
mov
cmp
mov
mov
nop
mov
outsb
lock
mov
mov
test
mov
sub
bnd
ret
sarl
xchg
ja
data16
mov
and
mov
std
stos
pop
or
or
int
and
push
and
jo
in
add
in
pop
mov
repz
inc
inc
out
lcall
test
lcall
sbb
jno
dec
adc
aam
out
inc
cmc
and
sbb
add
push
loop
pop
andb
lock
inc
push
xchg
mov
xor
xor
mov
push
inc
imul
push
andb
and
repz
ret
fadds
sub
xchg
and
mov
out
insb
pop
xor
sbb
mov
or
add
sbb
in
inc
mov
xchg
or
inc
cli
xor
cmp
loope
push
daa
into
lds
cmp
leave
jnp
jl
xchg
sbb
xchg
xchg
data16
fwait
mov
mov
jnp
jns
andl
jb
fneni(8087
add
fstpl
cmp
jge
mov
int3
pushf
mov
fcomip
test
jbe
adc
nop
push
int3
push
call
sub
mov
in
arpl
mov
adc
les
pop
aaa
pop
fstpl
mov
xor
lea
add
xchg
ss
insb
and
mov
cs
sarb
ret
pop
fmuls
dec
mulb
pop
shlb
por
add
fsubrs
xabort
rorl
test
sbb
stos
lock
sti
in
mov
jo
in
cmc
leave
in
shr
stc
cld
xchg
mov
push
cmp
fiadds
xor
bound
and
insb
xchg
xchg
fcomps
cwtl
push
add
push
dec
stos
sar
inc
scas
lock
add
stos
xor
mov
push
cli
jne
lahf
daa
stos
clc
cmp
jns
repz
pop
mov
mov
dec
mov
pop
push
movsb
loopne
lds
rcr
daa
in
jno
int
adc
jmp
mov
pop
cmpsb
pop
pop
fwait
popw
je
push
or
xor
les
fidivrl
dec
or
clc
in
ret
movsb
ljmp
inc
jo,pt
fiaddl
in
into
pop
loopne
jb
inc
scas
arpl
cmc
adc
sbb
rorl
imul
jge
mov
sti
pushf
inc
push
daa
imul
jne
cmp
cmp
and
push
xorl
cmp
in
dec
sti
ds
stos
call
xchg
stos
test
dec
dec
mov
test
call
and
jne
xor
insb
ret
clc
pop
icebp
push
wbinvd
xor
or
add
pop
or
fst
xor
leave
push
cmp
and
cld
sarb
mov
in
ss
adc
dec
out
jns
mov
push
sub
push
fldt
xor
dec
pop
mov
fpatan
rorb
adc
mov
inc
sub
cld
pusha
jmp
cmc
stos
stos
loopne
test
fistl
pusha
lods
cmp
orb
xor
or
sub
rorb
sti
sub
jmp
loopne
fiadds
xor
mov
adc
stos
loopne
push
and
fwait
push
jns
mov
je
cmpsb
out
sar
arpl
sbb
test
pop
add
mov
daa
mov
lcall
hlt
sub
mov
loop
push
wbinvd
sub
lea
jb
jecxz
or
loop
push
scas
or
aaa
inc
or
insl
or
mov
gs
stc
adc
gs
imul
mov
jg
testl
cmc
repnz
mov
pop
mov
dec
sub
xor
mov
sbb
add
pop
inc
cmpsl
bound
mov
adc
sub
daa
sub
adc
clc
jns
cmpsl
mov
sbb
mov
inc
gs
pop
divl
out
jno
lahf
fisttps
and
push
mov
lods
repz
jmp
xchg
scas
pop
push
scas
fld
mov
and
fsubl
inc
jno
pop
dec
enter
and
mov
sub
push
xchg
add
adc
mov
div
fwait
int3
dec
es
cld
loop
jnp
push
mov
sbb
adc
lahf
mov
and
in
pop
sub
aam
loop
sub
ss
js
mov
add
data16
into
decb
loop
sub
es
dec
xor
sbb
out
faddl
or
sti
pop
ds
pop
daa
fildll
xchg
movb
mov
pop
enter
shrb
lret
enter
insb
mov
push
cmc
aaa
jecxz
scas
xchg
aam
cmp
pop
add
adc
in
xchg
jmp
adc
imulb
cmp
and
push
pop
ja
mov
jno
loopne
movsb
push
testl
popl
rclb
loope
in
pop
inc
mov
push
aaa
leave
jp
ds
sub
mov
push
stos
jns
and
mov
das
lds
jne
testb
stos
xchg
mov
scas
pop
cmp
fsts
dec
es
adc
xchg
dec
and
call
out
stos
cs
out
and
cli
sub
add
dec
jbe
jle
push
fstp
mov
bound
adc
aas
insb
and
lret
andl
shl
jnp
xor
xchg
decb
push
cs
loopne
sbb
inc
cmp
sti
push
or
and
fnsave
ret
lods
push
sub
imul
mov
aam
xor
movsb
jl
clc
incl
iret
push
dec
sub
pop
xchg
xchg
or
jl
mov
inc
ja
jmp
cmc
push
fimuls
dec
inc
adc
jnp
mov
add
mov
aas
rclb
rcrl
bound
push
xchg
neg
cmp
mov
lret
stos
sbb
int3
sub
add
loop
push
movsl
pop
jns
jnp
cld
inc
xorl
inc
mov
inc
and
mov
sub
sbb
add
mov
dec
scas
daa
cs
and
mov
insb
in
neg
jecxz
les
addr16
repnz
in
fstpt
rclb
xchg
dec
js
mov
mov
and
fimull
leave
and
sti
lahf
into
mov
addb
mov
jmp
mov
imul
cltd
and
ss
dec
mov
push
cld
pop
sti
xor
mov
xor
or
in
push
sub
cld
aaa
cmp
fwait
inc
repnz
add
imul
lret
mov
jae
sarl
or
sub
mov
clc
mov
daa
je
mov
sub
data16
or
fmuls
cwtl
adc
cli
sub
xor
fdivrp
test
jmp
cs
xchg
push
call
dec
mov
and
jl
sub
dec
push
pop
gs
mov
mov
jg
mov
jl
aad
sti
insl
mov
gs
sti
aad
cmp
sahf
test
add
incb
jle
adc
out
cmpsl
lock
adc
aas
xor
xchg
sarl
pop
and
push
dec
pop
mov
dec
mov
shl
orb
and
sub
mov
xchg
cmpsb
jno
inc
mov
adc
cld
int
cs
xchg
push
dec
cs
sub
sbb
fucom
ds
aas
jge
cmp
cltd
leave
push
mov
push
fists
int3
push
or
mov
xchg
cmp
dec
test
mov
mov
xor
iret
adc
ja
loope
add
push
lahf
dec
add
aaa
cld
out
jecxz
dec
jbe
pushf
incb
pop
shrl
cwtl
imul
mov
jmp
sar
or
sub
push
mov
xor
fsubrl
push
mov
cmp
pop
lods
and
xchg
mov
jno
xor
sub
mov
mov
or
pop
mov
inc
fnstcw
jae
sub
xchg
ds
jnp
arpl
push
frstor
nop
scas
mov
sub
int
loope
ror
cmp
jg
jge
jns
negl
outsb
cmp
pop
rcll
sub
xchg
and
aaa
push
lock
stos
outsl
jmp
dec
imul
fidivs
dec
add
pop
pop
test
dec
arpl
pop
mov
mov
data16
xchg
mov
mov
in
insb
shll
cltd
das
rorl
mov
xorb
das
clc
shlb
jge
push
fs
push
and
push
loop
jno
addb
sub
push
dec
fimull
dec
nop
mov
test
pop
push
andb
repz
aaa
into
or
mov
jo
push
cmp
test
inc
push
xchg
js
mov
and
jp
adc
movsb
mov
mov
sbb
test
jl
mov
and
es
fwait
push
and
repz
arpl
pop
xchg
mov
dec
or
sbb
loopne
pusha
mov
pop
and
jl
sbb
xor
inc
adc
adcl
aas
inc
leave
adc
or
push
pop
xor
loop
xor
or
xor
fcomip
push
orl
and
mov
data16
loope
stc
mov
add
or
mulb
rorb
cmp
add
loop
cmp
push
arpl
xchg
mov
add
int
fwait
push
mov
pushf
sub
dec
and
movsl
and
push
dec
lods
ss
jmp
mov
add
testb
aam
sbb
ret
mov
stos
and
cltd
sbb
mov
push
push
lahf
cmc
sub
xor
xor
cltd
lock
fs
xchg
sbb
imul
aaa
test
test
and
getsec
into
out
std
cli
mov
test
mov
xor
mov
out
mov
out
repz
pop
sbb
pop
mov
pop
or
andl
mov
adc
mov
lret
push
push
push
pop
mov
aaa
sub
les
cmp
data16
xabort
out
jae
sbb
dec
push
aad
xchg
and
push
fdivrp
inc
pop
call
sti
xchg
dec
negb
int
pop
push
mov
xor
xchg
mov
cmp
cmpsl
stos
insl
popa
push
into
iret
push
adc
stc
pushf
movsb
add
stos
jmp
xchg
test
in
icebp
leave
pop
jg
adc
dec
call
add
sbb
add
inc
add
es
iret
jbe
sbb
punpckhwd
push
adc
insb
stos
cmpsl
mov
adc
shrb
cmpsb
or
shll
adc
sbb
call
bound
cmc
cmp
mov
push
push
icebp
cmp
ljmp
pop
adc
adc
movsl
bound
addr16
rclb
ret
lret
jge
ret
inc
addr16
mov
imul
mov
dec
mov
out
xchg
pop
fmuls
push
jne
and
push
lret
adc
push
jnp
jnp
outsl
clc
aas
push
xor
mov
xor
and
test
shll
rolb
aaa
xor
inc
bound
mov
test
pop
fistps
adc
inc
dec
shr
mov
ljmp
mov
add
sbb
test
or
lret
loope
mov
pusha
aaa
xchg
and
shr
ja
xor
movsb
xchg
xchg
pop
int
aam
xor
rcll
aas
add
aam
or
inc
pop
fisubrl
bound
vpmulhw
sarl
ljmp
push
imul
mov
loope
push
les
mov
cmpsb
imul
lcall
or
mov
popl
es
pop
xchg
sub
pusha
in
mov
ja
inc
test
dec
jae
js
cmpsl
flds
cwtl
test
inc
testl
mov
add
inc
or
jae
cmp
sarl
cli
call
cmp
jmp
mov
xorl
loopne
and
xchg
popa
popf
mov
cs
push
repz
call
push
fs
out
jl
dec
and
sbb
imul
aad
inc
stc
in
mov
mov
in
add
into
jge
mov
addb
cmpb
sub
movsb
mov
xor
or
push
mov
lock
dec
mov
mov
mov
fcmovb
aas
xor
ret
leave
sub
pop
jnp
in
jg
test
add
jbe
or
mov
push
push
push
in
lcall
mov
test
mov
or
adc
rclb
int3
je
or
jecxz
mov
div
pop
adc
push
sub
std
movsb
xchg
lods
pop
bound
enter
pop
sti
aas
js
leave
mov
scas
pop
dec
subb
pop
jo
pusha
inc
enter
insl
mov
out
and
sub
in
sbb
adcl
push
mov
stos
xor
repz
sub
fcmovnb
xor
dec
xchg
lea
into
repnz
and
dec
mov
push
xlat
imul
test
xchg
dec
pop
jbe
scas
lret
rol
push
adc
in
enter
push
mov
lret
in
in
pop
repnz
inc
dec
jns
rcr
xor
ljmp
nop
push
mov
cli
push
push
push
std
fsubrl
fwait
es
inc
push
push
xlat
mov
daa
jle
aam
rclb
je
push
fadds
lcall
outsb
scas
lock
mov
dec
xchg
inc
or
lret
dec
adc
pop
cmp
testl
pop
mov
mov
stos
cmpsb
rorl
jle
and
inc
popa
mov
in
and
mov
lock
mov
xchg
push
push
mov
out
push
pop
add
mov
pop
pusha
popa
xchg
arpl
jge
and
loope
xor
fwait
push
loop
test
stos
fistpl
into
mov
lock
pusha
mov
add
xchg
ljmp
sarl
adc
nop
aaa
outsb
push
mov
out
mov
jo
orb
pusha
sbb
push
mov
hlt
pop
les
iret
stos
jle
mov
lret
push
mov
test
mov
jb
sbb
sti
dec
stc
out
xor
fcoms
mov
std
sub
cmp
push
add
mov
push
out
fs
pop
ret
mov
sbb
mov
mov
inc
mov
push
or
scas
add
mov
mov
cmpl
add
out
lods
icebp
out
shll
outsb
inc
mov
shrl
cltd
dec
cmp
push
push
cli
adc
or
lret
cmpsb
or
cmp
or
std
cmp
or
daa
mov
cs
pop
mov
decl
pop
cmpsb
loop
sbb
adc
push
cmpsb
ljmp
cmp
and
pop
mov
aam
cli
jg
testl
xor
dec
dec
push
int
xchg
in
sti
or
adc
pop
inc
lcall
jb
sub
pop
sti
outsl
subl
jb
mov
push
mov
sahf
dec
lcall
inc
inc
xchg
mov
pushl
clc
adc
xor
sub
sub
loope
fcmove
fs
mov
add
nop
je
daa
pop
leave
sbb
lea
jmp
lea
mov
dec
insl
roll
test
sbbb
imul
icebp
ss
push
cli
movsl
inc
aaa
dec
push
jg
icebp
loop
out
repz
jp
adc
imul
cmpsl
mov
and
xor
imul
dec
dec
daa
nop
arpl
aaa
push
pop
xor
iret
adc
enter
ja
jp
fwait
das
xor
and
cli
push
and
out
adcb
mov
mov
dec
adc
inc
xchg
ret
fndisi(8087
jae
mov
cmp
mov
cli
xchg
subb
add
jle
testl
pop
cmp
cmc
mov
adc
test
mov
adc
mov
sub
cld
dec
xor
cwtl
mov
mov
test
movsl
dec
jle
and
pop
jle
test
leave
insl
je
ja
xor
mov
pop
cmp
jp
sbbl
cs
push
jle
xchg
lods
dec
rolb
clc
lods
mov
dec
in
cltd
adc
add
pop
sbb
push
or
and
cs
hlt
stos
jle
jnp
sub
jbe
std
aad
xor
out
movsb
hlt
jecxz
or
cmpsl
cmp
or
or
and
lods
out
dec
jg
cmc
inc
fstps
adc
fcomps
sub
in
pop
sub
test
sahf
jp
xor
test
data16
bound
cltd
xchg
lret
mov
montmul
cmpsb
ret
in
pop
sbb
push
lds
mov
movsl
adc
fbstp
fs
loop
push
bound
jmp
mov
and
filds
mov
ljmp
adc
aas
sub
xchg
mov
jae
pop
jno
dec
inc
adc
xchg
xor
int
dec
dec
pop
ljmp
sidtl
cmp
or
sbb
cmp
dec
xor
inc
insb
cmp
ret
lahf
call
bound
test
push
xchg
outsl
nop
in
ret
shlb
div
ljmp
xchg
in
in
gs
mov
subl
mov
lods
rcrl
mov
jno
push
lods
cs
push
jbe
lods
mov
lret
sub
sbb
cld
xchg
pop
push
cmp
shlb
cmpsl
mov
aad
inc
pop
nop
out
ja
sub
ret
mov
pop
loop
mov
sub
jp
push
fistpl
xchg
inc
fsts
cmp
pop
ss
imul
and
das
cmp
rol
push
fstpt
xchg
adc
xchg
outsl
out
repnz
pop
popf
lds
fists
imul
sbb
or
rcl
test
dec
xchg
mov
out
lods
adcb
gs
and
xchg
xor
les
aas
outsl
das
js
iret
pop
cmp
leave
js
push
int3
leave
mov
mov
dec
cmp
adc
jmp
aad
pop
dec
test
jo
mov
fiaddl
iret
inc
xor
dec
mov
cwtl
jno
pop
in
fildll
in
int
popa
std
fidivs
xchg
data16
movsl
lods
sub
add
shll
loope
sbb
pop
jo
sub
adc
and
jbe
lods
push
pop
comiss
clc
aaa
sahf
mov
in
xor
mov
stos
outsb
ds
sub
dec
subb
daa
outsb
adc
test
into
fnstsw
cmp
jo
xchg
mov
mov
call
in
lahf
adc
fs
mov
push
mov
xor
sahf
fcompl
pop
fstps
incl
cmp
lahf
notb
lret
push
lahf
sub
jbe
adc
lahf
mov
fs
adc
and
decb
mov
call
clc
and
xchg
jb
fsts
jl
fistl
iret
add
add
rcrl
jnp
scas
out
inc
pop
mov
test
xor
scas
push
outsl
sub
outsb
sub
xor
cmc
xor
mov
ja
inc
dec
or
jp
push
adc
or
pop
cmpsb
push
aas
fcomps
das
mov
shlb
fdivl
cwtl
sub
sahf
jns
and
push
or
loopne
push
pop
arpl
mov
inc
or
and
jecxz
mov
mov
pop
call
xlat
mov
in
jge
fbld
xchg
xor
ret
push
xor
mov
inc
and
push
push
add
sub
push
lock
add
movsb
mov
mov
pop
lock
fnstcw
mov
aam
pop
ljmp
aad
xchg
jo
rcrb
mov
or
js
adc
cld
push
jb
mov
sub
cld
push
in
push
xchg
aas
es
insl
sbb
push
sti
jle
in
sbb
mov
add
xor
lds
dec
sub
push
imul
add
inc
lock
sbbl
xchg
jae
fimuls
daa
fucomp
pop
insb
popf
fdivs
pop
enter
pushf
jnp
xchg
repz
gs
jle
mov
push
jp
aam
call
xor
cmp
xchg
orb
aad
popa
mov
xchg
mov
dec
cmp
xor
out
inc
aad
ss
mov
int
sbb
or
xchg
clc
mov
imul
mov
ja
popf
arpl
push
sbb
stc
call
jg
xchg
gs
add
mov
jnp
jle
loope
pop
xor
in
out
pushl
add
loop
xchg
jp
or
cli
jo
xchg
mov
pop
cld
jecxz
mov
push
mov
call
enter
cltd
int
bswap
out
mov
andnps
fildll
cli
outsl
xchg
dec
jbe
add
cmp
and
mov
sbbb
cmp
cmp
mov
and
lock
sbb
popa
dec
in
out
mov
stos
lock
or
add
stos
sub
enter
inc
lret
hlt
hlt
jbe
fs
inc
or
andl
fdivs
fistpl
lock
loop
lods
dec
and
pushf
inc
push
push
ret
or
sbb
cltd
test
push
dec
and
mov
mov
cmc
or
shrl
ret
dec
movsl
lahf
into
repnz
pop
test
hlt
sbb
rcll
push
test
cwtl
nop
fnstenv
andl
dec
lods
insb
pop
repnz
cltd
sbbl
push
insb
lret
orl
adc
pop
jnp
and
addl
iret
push
jno,pt
adc
cmp
mov
fcoml
cmp
and
lret
shll
mov
mov
pusha
adc
fs
clc
test
ja
jg
mov
ljmp
pop
mull
inc
fnstcw
sti
fcmovu
clc
mov
mov
jae
or
int3
lods
insb
call
scas
ret
mov
pop
push
dec
pushf
mov
xchg
pop
sub
push
fldt
jnp
mov
fisubrs
call
xchg
mov
aam
inc
dec
subl
mov
pop
jb
sub
notl
hlt
daa
in
add
inc
nop
pop
sbbb
pop
pop
pop
mov
ret
push
xchg
fwait
clc
int
es
adc
shr
xchg
mov
jecxz
insl
xor
test
or
xchg
in
mov
adc
or
fists
outsl
mov
adc
in
mov
cltd
adc
sbb
sti
push
leave
mov
or
pop
lahf
test
shll
call
aas
icebp
jns
xor
add
xor
mov
mov
inc
cmp
test
add
hlt
pushf
or
push
pop
sbb
popa
out
out
inc
inc
gs
inc
xorb
push
loope
pop
fs
pop
mov
mov
xor
iret
mov
lcall
pop
ret
sbb
pushf
xchg
lcall
ja
ror
add
xor
mov
adc
cli
repz
repz
loop
add
sub
push
mov
lahf
hlt
jo
sub
push
push
adc
jmp
lret
jno
aad
ja
add
mov
mov
out
pusha
out
add
call
stos
mov
les
mov
and
mov
pop
jmp
push
add
cld
lods
gs
or
add
jle
enter
icebp
js
ds
mov
pop
sub
push
les
test
scas
cmc
mov
fucomp
push
cmp
xor
and
push
mov
xor
call
jns
and
xor
mov
sbb
xchg
cld
sbb
push
insb
rorl
inc
inc
mov
xorl
sbb
inc
push
jge
pop
sarb
out
mov
cmpsl
xor
iret
cmp
leave
das
mov
ds
loopne
or
mov
mov
mov
lahf
insb
lahf
fdivl
inc
push
pushf
jp
pop
cmp
ljmp
inc
xchg
pushf
cmp
inc
sub
pushf
pusha
scas
cmpsb
nop
ss
fsubs
mov
mov
xchg
popa
push
dec
cltd
inc
leave
jbe
and
in
in
push
iret
stos
cmp
push
cmp
xchg
es
lock
xor
and
fmuls
mul
aam
out
mov
add
cwtl
jb
inc
mov
ret
jne
leave
cmp
sbb
loop
nop
lahf
data16
mov
push
in
scas
and
push
out
das
lds
xor
mov
shlb
fildll
lret
push
lds
das
mov
test
das
in
popf
repnz
daa
xlat
sbb
push
cmpsb
jle
adc
dec
cmp
mov
add
push
push
out
cmc
mov
in
arpl
jbe
lahf
nop
les
sub
pusha
sbb
sub
sti
pop
fildll
and
push
mov
fdivrs
push
and
add
adc
imul
pop
mov
testb
pop
int3
cmpl
inc
out
mov
fstl
xor
sbb
int
aad
cli
dec
in
arpl
repnz
jo
das
stos
jne
int
cmp
mov
loopne
leave
xor
adc
xor
rclb
pop
es
cli
fs
iret
iret
clc
ret
popf
movsl
mov
lahf
pop
sarb
cmp
sbb
popa
lcall
sub
xchg
loop
lahf
fisubs
mov
dec
mov
jmp
sub
cmp
stos
add
ffreep
fs
mov
and
cmp
insb
dec
push
daa
out
pop
jae
push
loope
loopne
dec
lds
out
addr16
fistpl
lods
into
fisubrs
iret
mov
push
out
cld
adcb
mov
bound
or
push
lods
add
aas
into
in
fldl
add
pop
add
push
jno
std
js
dec
pusha
sub
adc
addr16
inc
js
outsl
pushf
stc
fdivl
mov
cmp
adc
cmp
daa
stc
mov
or
mov
mov
idivl
inc
sbb
int3
cli
sub
adc
add
pop
leave
sbb
pop
popf
aad
mov
xor
test
sbb
adc
mov
and
das
cmp
les
dec
int
imul
test
stos
add
insb
or
inc
adc
pop
inc
bound
inc
or
push
fisttpl
adc
xchg
jbe
mov
cmp
mov
sbb
cmp
sbb
sbb
pushf
outsl
aaa
jmp
jmp
push
add
or
stos
inc
sbb
pop
pop
adcl
cmp
insb
mov
cltd
repnz
mov
int
jecxz
cmc
sbb
mov
popa
xchg
adcl
inc
sbb
push
test
add
xchg
pop
outsl
mov
cmpsl
push
xor
aas
insb
mov
pop
cmc
outsb
das
inc
adc
jecxz
xchg
movsl
xor
loop
adc
add
jg
cmpsb
mov
fcoms
sub
lea
jecxz
mov
xorb
stc
cmp
enter
aaa
add
repnz
ljmp
lret
daa
jl
adc
push
fwait
loop
adc
and
sub
out
xchg
jbe
mov
dec
mov
negl
push
cwtl
test
sti
mov
inc
adc
adc
push
test
scas
dec
cmp
add
mov
mov
enter
int
incl
je
rcrb
cld
bound
ljmp
test
out
cmp
stos
imul
aas
out
mov
xchg
and
pop
cli
bound
js
aas
sti
lods
mov
push
adc
cld
push
lret
mov
adc
mov
shlb
arpl
lock
dec
jecxz
in
add
dec
mov
push
and
aam
test
inc
repnz
mov
jp
loope
test
adc
inc
cmp
and
jge
orl
sub
add
cmpsl
addb
xlat
orl
aam
pop
pushf
out
lds
pop
dec
pop
int3
mov
fmuls
daa
lahf
xchg
jbe
and
mov
dec
in
xor
pop
lahf
pushf
lea
xchg
out
add
mov
pop
mov
pop
mov
sarb
jg
cmp
popf
cmovae
adc
dec
sahf
jecxz
xchg
sti
decb
lahf
cmp
enter
cs
aas
xor
cwtl
mov
and
mov
push
sub
sub
push
loop
div
xor
les
jnp
cwtl
or
pusha
es
mov
mov
or
ja
push
lret
sbb
ds
stos
adc
lahf
outsb
imul
push
movsb
popa
inc
mov
and
jns
shrl
cmp
add
inc
sub
movsb
in
xchg
mov
sbb
fists
inc
je
jb
gs
stos
inc
out
sahf
pop
sub
sahf
sub
rcrl
icebp
mov
cmp
mov
inc
cmc
call
pop
mov
inc
test
mov
pusha
xor
and
outsl
insb
sbb
repz
mov
inc
mov
clc
addl
xchg
incb
xchg
add
inc
mov
inc
mov
lea
std
test
pop
pop
jg
outsb
dec
out
sbb
cld
and
out
arpl
lahf
je,pt
push
push
cmp
stc
imul
pop
or
test
icebp
mov
push
stos
push
js
and
sti
mov
push
jae
xchg
or
insl
outsb
sub
push
push
arpl
dec
mov
sbb
sub
pusha
mov
push
fsts
insl
test
test
ja
stos
cltd
xor
dec
dec
xor
in
and
out
sbb
sarl
add
or
push
cmp
jecxz
mov
mov
das
fisubs
fsub
xchg
xchg
mov
sub
stos
sbb
leave
cmpsb
rcrl
insb
pop
insb
cld
fdivp
cmp
and
pop
or
mov
ljmp
into
aam
or
leave
jb
lret
pop
sbb
add
outsl
pop
stos
sbb
jo
dec
jnp
jge
rcl
repz
cmc
insl
xor
nop
stos
dec
push
lock
dec
test
push
push
fdivrl
sbb
dec
arpl
cmp
or
xor
push
inc
mov
test
inc
lret
lock
inc
mov
adc
dec
std
adc
cwtl
push
jg
cmp
mov
popa
mov
pop
push
xchg
mov
repz
aaa
inc
push
mov
mov
out
and
popa
cmc
xlat
xor
and
jbe
or
push
outsb
fists
mov
lret
je
pop
mov
sbb
insl
daa
mov
out
mov
aam
jo
mov
or
rcrl
rorb
cmc
dec
rcrb
cmpsl
jnp
leave
arpl
mov
dec
shll
and
sub
cmp
mov
les
push
pop
sbb
fisubs
cmp
push
fidivl
pushl
push
xor
mov
cmpb
sub
jp
pusha
lea
adc
mov
insb
daa
xlat
push
xchg
sbb
ja
xchg
push
fsubl
inc
ret
sub
js
lock
push
jg
and
pop
mov
xchg
push
mov
dec
shrb
pop
sub
or
sub
cmpsl
cwtl
xlat
jb
inc
outsb
test
mov
jno
shr
cmc
jge
push
rcrb
fcoms
push
inc
mov
mov
or
mov
int3
dec
fsubr
mov
std
aad
jecxz
dec
js
in
lds
jb
test
out
mov
lods
push
repnz
rolb
into
sarb
dec
inc
pusha
jle
movsl
xor
or
push
jno
movsb
shl
mov
and
pop
dec
pusha
in
jp
pop
sti
fmuls
imul
mov
inc
movsb
and
inc
int
rcl
les
and
jae
mov
mov
mov
into
sbb
jge
loope
fmull
cmpsl
cmp
ret
daa
out
stc
sub
int
sbb
xlat
sub
and
lret
push
fdecstp
pop
sub
shlb
cmp
inc
aam
mov
lods
xchg
xor
dec
sbb
in
mov
test
dec
sub
adc
dec
add
push
pop
call
imul
inc
lret
jae
sub
xor
rclb
pushf
cmpsl
test
mov
inc
insb
adc
in
iret
int3
pop
ret
inc
cmp
xchg
mov
fnsave
fsubl
arpl
lods
xchg
xor
cltd
xor
push
inc
push
je
stos
fwait
test
dec
imul
mov
stos
inc
loop
push
pusha
pop
and
mov
sub
adc
lods
xor
subl
cwtl
mov
sti
inc
and
bound
and
sbbb
mov
in
pop
outsb
mov
adc
insb
jmp
mov
dec
in
rclb
movl
in
sub
add
nop
dec
inc
jae
xchg
movsb
enter
pop
add
into
add
jno
push
push
push
ret
cmp
jnp
sbb
sub
lahf
pop
and
rcll
lret
sub
cwtl
fcmovbe
push
mov
mov
or
cmc
imull
dec
mov
xchg
loop
or
mov
hlt
jg
jns
nop
mov
ds
xchg
loopne
lock
xor
mov
jnp
dec
imul
in
mov
popw
lret
pop
jecxz
sbb
sub
sarb
jb
mov
xchg
ja
stc
mov
into
xchg
std
mov
add
push
insb
dec
cmp
adc
push
stos
stc
jno
xchg
jecxz
mov
out
push
jl
xchg
fldcw
shll
push
repz
in
and
popa
iret
mov
js
mov
mov
add
or
mov
push
push
and
pop
sub
aam
add
popa
in
enter
jo
push
lea
xor
pop
shlb
cmp
repz
inc
inc
dec
outsl
dec
cmc
repz
lret
ljmp
hlt
pop
pop
jp
mov
sbb
bound
ja
negl
insl
push
arpl
ljmp
repnz
xchg
fsubrl
test
sub
sub
and
mov
dec
lcall
lcall
mov
cwtl
push
push
jnp
jmp
fldcw
adc
mov
daa
push
inc
out
mov
jmp
mov
dec
push
ds
inc
mov
insb
adc
and
stos
imul
cmpsb
fnstenv
inc
andb
sub
cwtl
lret
cmc
test
aad
mov
xor
fisttpll
out
push
movsl
repz
fdivrs
cmp
sub
out
rcr
and
enter
test
call
or
ret
inc
add
stc
mov
fdivl
xor
rcrl
mov
inc
cmp
movsb
push
fisubrs
mov
fsub
pop
hlt
pop
cmp
or
scas
loop
mov
cmp
mov
pop
cli
test
mov
sbb
popa
cwtl
pop
fmuls
push
in
mov
cmpsb
xor
jo
mov
jmp
ss
inc
incl
aas
cmc
mov
popa
lret
cmp
inc
xchg
cld
scas
pop
jg
popa
or
xchg
mov
adc
adc
push
or
cmp
xchg
dec
andl
movsl
js
or
dec
std
dec
pop
adc
add
xchg
add
pop
in
popa
and
sbb
fadd
ljmp
insb
loope
bound
push
xchg
shlb
mov
orb
bnd
lahf
icebp
js
bswap
sti
jno
pop
mov
imul
fcomps
aad
xchg
xchg
fwait
iret
or
mov
pushw
les
mov
outsb
pop
mov
outsl
cmp
pop
or
cltd
shlb
push
fnstcw
cli
lods
pop
dec
flds
inc
test
dec
sub
loopne
jmp
test
iret
xchg
and
cmpsb
jg
add
jno
cs
iret
cmpsb
bound
jl
sbb
or
xor
ja
xchg
mov
addr16
dec
sub
pop
pushf
and
mov
test
fisttpll
push
lret
jle
xor
sub
popf
lods
xchg
addl
int
xorb
sub
pop
fdivrl
pop
xchg
jbe
mov
aaa
jmp
adc
push
pusha
dec
and
aaa
and
jb
and
xor
sarb
add
jbe,pt
adc
push
je
ljmp
and
sub
jge
adc
pop
inc
cmp
add
inc
lret
movsl
jo
lret
mov
test
sub
or
lods
sbb
dec
sub
sub
or
jo
ret
leave
pop
mov
jle
sub
movsl
movl
movsl
sbb
mov
jge
pop
ljmp
pop
add
enter
imul
push
lods
loope
cld
and
jg
rcrl
mov
mov
lock
mov
jl
fiadds
lods
and
iret
push
arpl
sub
adc
lods
sarl
lea
ds
push
and
cmp
mov
loope
cmp
std
imul
xchg
in
fs
and
inc
lds
push
jns
mov
sbb
xchg
icebp
ds
xchg
mov
data16
and
pop
mov
pop
sarb
loopne
adc
popa
push
dec
imul
and
and
fxch
dec
mov
dec
rcrl
and
in
fsubrl
cmp
jle
mov
add
and
cmp
jno
mov
icebp
es
cli
pusha
push
popf
inc
adc
icebp
and
out
push
stos
pop
gs
inc
dec
dec
dec
mov
mov
insl
cmp
push
test
xchg
dec
int3
sub
jb
dec
subb
and
inc
inc
push
outsb
clc
and
sbbl
mov
into
dec
jo
mov
cmpsb
stc
into
push
js
or
call
mov
xchg
push
mov
mov
sbb
lret
push
mov
rorl
cmp
xor
loop
int3
mov
jg
scas
insb
mov
jge
mov
test
sbb
out
mov
add
and
lcall
pop
movsl
leave
cmp
or
mov
int
and
mov
call
jmp
jl
iret
enter
mov
jge
mov
push
dec
xlat
cmp
adcb
outsl
cld
in
inc
mov
movsb
push
sahf
adc
mov
in
js
mov
fwait
mov
adc
add
mov
shr
lret
repz
push
add
arpl
mov
test
xor
stos
push
xor
fwait
in
jg
mov
inc
lcall
lock
test
inc
or
mov
or
sub
enter
xor
fbstp
fmuls
in
push
iret
add
sbb
sbb
rolb
inc
mov
xchg
xor
add
push
and
jecxz
dec
mov
aaa
mov
fstl
nop
mov
movsl
push
adc
popf
aaa
dec
mov
das
loope
cmpb
jb
adc
fimuls
js
mov
add
and
sbb
int
or
push
adc
sub
cmp
test
call
sti
adcb
mov
and
mov
cwtl
xlat
and
sbb
sahf
mov
js
sahf
jno
inc
mov
mov
pushf
fisttps
cmp
mov
outsl
test
repnz
mov
mov
scas
cmpsl
mov
xlat
pop
sti
sahf
mov
repz
or
jo
dec
repnz
pop
rcrb
fisubs
xor
popf
sub
mov
cmc
or
inc
leave
inc
mov
jge
fstpt
cld
imul
pop
adc
sbb
test
fidivrs
jmp
xchg
push
loop
add
sbb
pop
imul
add
cmp
fadd
sarl
jl
sbbb
cwtl
rcrl
pop
add
adc
dec
dec
call
cmp
pop
mov
sub
js
cli
inc
in
xchg
int
adc
lret
scas
inc
jge
and
mov
or
testb
sbb
push
cli
ja
lahf
icebp
pop
push
outsl
push
mov
loope
outsl
mov
and
icebp
mov
mov
sub
mov
pop
dec
pop
mov
cli
lahf
std
jecxz
cs
sbb
sub
adc
xchg
in
adc
push
xchg
int3
xor
push
scas
add
ds
xor
cmp
cmp
push
xlat
cmp
mov
push
icebp
ficompl
out
xchg
fwait
cmc
inc
xchg
inc
lret
adc
stos
stc
xchg
mov
outsb
enter
xchg
mov
pop
les
ficompl
or
mov
dec
cmp
mov
cmp
sbb
and
out
in
lds
cmp
icebp
in
adc
and
nop
fsubrp
mov
js
push
adc
aam
popf
jecxz
imul
add
xor
sbb
mov
imul
lret
andb
fdivrs
xchg
aad
test
or
int3
out
mov
jl
mov
popa
inc
mov
je
hlt
adcl
xor
stos
cmp
or
mov
jg
imul
call
dec
jmp
or
stos
add
sub
xchg
mov
pop
jle
dec
in
xor
mov
pop
xchg
enter
fwait
add
mov
cmp
ret
mov
insl
frstor
sub
icebp
and
add
imul
mov
out
sub
xor
rcrl
sub
xchg
or
push
sub
xor
jbe
add
push
subl
loope
mov
xchg
in
xor
loopne
cmp
cltd
lret
pop
ja
int
std
dec
std
xchg
insb
aad
scas
ret
xor
xchg
aas
stc
nop
xchg
icebp
test
mov
xor
fcomps
dec
xor
cmp
lcall
aam
or
fnsave
xchg
lods
ljmp
mov
cmp
xchg
inc
sub
enter
xchg
add
sbb
pop
cld
and
xchg
icebp
inc
jp
inc
jno
outsb
enter
and
jecxz
jmp
std
cs
xchg
jb
push
cmp
outsb
mov
stc
insl
int3
insb
jb
xchg
jbe
cmp
jnp
jb
sub
pop
mov
mov
test
push
xor
in
cmp
fwait
sbb
mov
repz
fstenv
mov
mov
dec
dec
ljmp
or
out
pusha
fst
sahf
lcall
loop
aaa
aas
out
jns
mov
call
adc
pop
pushf
movsl
kmovw
mov
loop
mov
fdivrs
je
arpl
xor
test
mov
adc
in
or
mov
lea
hlt
push
mov
inc
mov
add
mov
xor
fs
jmp
and
xor
or
adc
roll
mov
or
mov
pop
inc
out
mov
sbb
icebp
push
mov
jge
jp
cs
and
mov
jle
lods
push
popf
imul
push
scas
inc
jle
outsb
and
imul
jbe
xchg
sub
mov
loopne
push
ret
cmp
shr
and
and
or
cmp
enter
bnd
inc
jecxz
stos
sbb
leave
pusha
aam
cmp
and
cmpsl
faddl
cmc
jmp
cmp
bnd
cmovns
xchg
push
sarb
mov
push
int3
shrb
data16
ljmp
clc
mov
outsb
pop
dec
repnz
lock
sbb
repz
jno
add
jge
adc
lret
movsl
push
pop
add
imul
fsqrt
push
popf
ret
jge
or
inc
mov
repnz
rdmsr
imul
pop
inc
mov
xor
popf
sbb
stc
popf
inc
fimuls
cmpsb
inc
pop
movsl
sub
add
mov
dec
mov
pop
out
fstps
jl
dec
fadd
mov
imull
jnp
push
repz
sahf
lock
inc
sub
loopne
pop
insb
stos
mov
pop
cmc
xlat
push
orps
xchg
push
pop
adc
adc
fisubrl
into
les
lea
mov
inc
or
dec
push
sbb
fidivl
arpl
mov
jge
enter
and
push
ret
enter
pop
addr16
push
addr16
sti
test
lods
in
hlt
cmp
push
test
jecxz
mov
push
sti
cmp
test
stos
jge
sub
sahf
xor
jg
jns
and
sbb
int
push
lods
mov
fbstp
iret
mov
outsb
mov
std
pusha
cmc
ret
outsl
loop
stc
mov
aad
push
xchg
sbb
arpl
cwtl
cmpsb
pusha
dec
pmaxsw
dec
cmc
mov
repz
loopne
sbb
int
jl
pusha
adc
xchg
xor
jg
out
rol
pop
stc
or
sbb
cmpsl
popf
xor
cli
inc
cmc
out
fdivl
shl
xchg
mov
pop
or
dec
pop
shll
lds
fcoml
aas
pusha
sub
fisubrs
dec
mov
or
jne
fisttpl
out
mov
sbb
mov
ss
rolb
lret
pop
push
leave
lods
jns
dec
mov
pop
mov
jg
mov
pop
pop
sbb
or
adc
mov
ljmp
outsb
out
push
mov
in
or
sarb
pop
sbb
stc
jno
pop
push
rclb
insb
push
mov
in
mov
jg
pop
lock
scas
pop
xor
dec
cmp
mov
stos
hlt
nop
add
test
stos
mov
xor
or
in
or
insl
pop
and
pop
inc
jnp
outsl
rorb
mov
lods
pushf
mov
mov
roll
in
cmp
jecxz
loop
pop
ds
mov
sti
xor
out
rcrb
loope
mov
and
jo
cmpsl
insl
mov
and
mov
lahf
push
or
imul
ret
push
sahf
clc
mov
insl
in
jmp
cmpsl
outsb
sbb
test
or
jae
popf
xor
or
push
outsb
mov
sub
shll
sbb
dec
jecxz
popf
int3
and
xchg
add
dec
push
mov
sti
add
xor
jp
xchg
jp
out
or
lds
out
pushf
loopne
add
dec
inc
xor
adc
sbb
push
cmp
and
testb
js
les
mov
movsb
loope
mov
cmpb
pop
or
rep
mov
push
insl
push
pushf
fsub
mov
scas
gs
xchg
lret
sbb
gs
mov
jne
orb
mov
das
iret
dec
mov
ljmp
rcrl
jecxz
lods
mov
inc
mov
xchg
lods
jp
xchg
stos
popf
dec
add
xchg
in
inc
pop
add
test
not
cmc
ds
mov
jmp
rcr
ljmp
sti
out
dec
jg
dec
jae
mov
push
mov
push
sbb
mov
push
sub
sahf
in
out
add
push
fdiv
stc
and
or
movb
je
dec
or
arpl
jno
mov
pop
mov
ja
arpl
repz
lcall
icebp
data16
psllq
in
sub
add
xorb
stc
xor
and
les
dec
xor
sub
or
dec
mov
shlb
inc
push
mov
push
dec
movsl
xchg
mov
xchg
mov
outsl
push
cmp
repz
pop
mov
xor
sub
mov
sahf
es
adc
ja
mov
js
add
sti
sti
add
cmp
push
add
and
push
test
jge
mov
add
insl
sbb
dec
cmp
xor
aad
mov
xor
push
and
cltd
test
fimull
imul
jecxz
xchg
out
outsb
cmp
jb
sbb
push
fnstsw
mov
movsl
push
jl
sahf
out
dec
mov
int3
add
out
cmp
sti
mov
es
adc
mov
rcrb
add
ret
xor
jle
sbb
or
push
cmp
sub
mov
or
fnstenv
lret
leave
into
mov
push
or
sub
xor
mov
dec
jmp
mov
sbbl
fadds
sbb
arpl
lahf
cmc
mov
push
in
cmp
negb
xchg
xchg
adc
cmp
jbe
push
or
mov
and
xchg
xlat
lret
loope
jnp
lds
lock
test
clc
shll
or
inc
pop
mov
sub
jmp
rcrl
or
gs
ret
rcrb
inc
mov
pop
inc
xlat
movb
xor
inc
xchg
imulb
jnp
add
test
mov
lock
inc
loopne
sti
sub
js
xor
outsl
pusha
orl
rorb
rolb
pop
xor
shrl
add
or
je
icebp
loop
sbbb
movsb
outsl
loop
jns
add
notl
sub
or
mov
jge
inc
xchg
pop
in
scas
push
add
lcall
lds
adc
aaa
movb
shl
sub
enter
fcmovbe
add
aas
iret
mov
pop
xor
mov
cmp
jmp
mov
add
sub
sti
adc
mov
repz
cmpb
add
jp
mov
test
lret
ror
adc
or
cltd
sahf
js
pop
push
sub
pop
adc
inc
cmp
in
adc
sbb
adc
jns
movsl
dec
bound
nop
std
or
inc
iret
out
mov
nopl
add
fdivrs
call
and
pop
addr16
pop
adc
lcall
stos
test
mov
xor
andps
lahf
movsb
lahf
stc
sbb
lcall
adc
hlt
xlat
ret
hlt
xor
mov
lret
test
adc
dec
mov
mov
sbb
xchg
mov
fcmovbe
mov
ja
aad
cmp
push
adc
inc
jne
pop
mov
mov
enter
lahf
test
outsl
pop
std
xchg
xor
mov
mov
xor
or
and
cmp
cmp
inc
lea
les
orb
in
jge
ret
insl
xor
leave
dec
std
jae
aam
insb
dec
pop
sub
mov
pop
pop
cmp
test
jno
adc
xchg
jno
cmc
adc
dec
lcall
movsb
jge
outsl
push
ljmp
inc
mov
cltd
rorl
je
call
repnz
mov
mov
mov
xchg
iret
arpl
insl
jle
mov
les
cmc
pop
lret
or
dec
shrb
pop
mov
push
add
cmp
fistpl
shlb
cmp
or
sbb
pop
test
sbb
js
inc
rcr
pushf
rcrl
jnp
cli
add
xchg
mov
bound
dec
adc
arpl
adc
pop
and
dec
xor
mov
cmp
or
or
xor
out
shll
add
fimull
hlt
push
ret
and
clc
arpl
jge
gs
push
aad
popa
shll
sub
popa
lock
call
sbb
sub
out
stos
add
mov
and
sbb
push
aad
jo
incl
cwtl
pop
xchg
and
push
fs
cmp
inc
and
pusha
aaa
stos
mov
add
push
mov
mov
fldenv
aaa
push
sbb
inc
inc
fiaddl
dec
in
push
cmpsl
mov
testl
dec
testb
pop
jo
xor
clc
jae
cmp
xchg
add
fisubrl
add
xchg
mov
adc
lea
and
lcall
aam
mov
mov
push
jb
rorl
es
push
lea
cli
push
sub
push
inc
xorl
lods
and
out
inc
lcall
cmpsb
or
xchg
inc
mov
mov
jmp
xor
sbb
cmpsl
xor
dec
aam
out
cmp
sub
inc
frstor
sahf
and
mov
mov
and
gs
loop
aad
jns
lret
push
inc
push
addr16
and
inc
ja
es
loopne
aad
push
adcb
ljmp
je
mov
fisubrs
pop
jae
cmp
sub
fwait
inc
repnz
popa
loopne
and
mov
mov
call
out
sub
icebp
sbb
cmp
xchg
adc
pop
sub
xlat
cmp
jl
js
jae
cmp
mov
or
jg
dec
or
xor
mov
sub
cwtl
mov
int
fimull
sub
pushf
fprem
dec
inc
negb
jns
lahf
ja
and
jge
cmp
add
lods
xorb
or
das
adc
cltd
test
movsl
mov
pop
int
loope
jp
fstpl
mov
mov
sbb
xor
cmp
mov
or
lea
inc
adc
filds
pop
divl
xor
inc
roll
push
and
out
inc
cmp
sbb
cltd
out
inc
clc
push
pop
push
dec
arpl
loope
popa
jp
sbb
xor
mov
test
and
pop
xchg
dec
fldl
addr16
push
ja
cs
daa
fildll
test
outsb
push
jno
mov
pop
hlt
pop
mov
iret
sbb
pop
repnz
pop
add
xchg
gs
movsl
not
cmp
mov
pop
je
aas
pop
addl
cwtl
push
fcompl
add
or
aas
lock
aaa
sub
mov
vmread
lret
mov
lcall
inc
push
and
in
inc
icebp
out
mov
scas
fcompl
in
test
and
adc
or
mov
push
mov
add
cmc
xor
mov
fsubrl
fidivrs
sub
add
out
cmc
shll
lods
es
dec
daa
aas
test
fildl
jl
jns
insb
xor
cmpsb
data16
jge
dec
jae
mov
dec
pop
dec
xchg
mov
add
cmp
mov
mov
sub
jb
bound
dec
int3
test
sub
push
cmpsl
insb
gs
adc
xor
pop
repz
stc
push
ret
mov
pop
xor
cli
testl
es
push
push
add
outsb
mov
loopne
jae
bound
inc
mov
push
pushf
aaa
lea
fsubrl
push
testb
sbb
daa
push
cs
push
das
inc
fsubs
xorl
sbb
sbb
dec
inc
inc
or
push
popa
popa
js
cmp
int3
sbb
addr16
xchg
mov
xlat
pop
sub
mov
adc
xchg
lcall
fstl
scas
ds
mov
shrl
dec
adc
adc
aas
test
pop
popf
gs
ss
subl
xchg
ret
pop
xlat
mov
scas
je
scas
jecxz
mov
sub
jmp
loopne
outsb
push
xchg
fildl
fs
inc
shr
mov
inc
mov
cmpsb
shrb
xor
movsl
fsubl
pop
lret
out
leave
mov
pop
fiaddl
mov
pop
xchg
in
stos
pop
out
xchg
pushl
adc
dec
sub
sbb
mov
add
mov
dec
cmp
mov
shlb
stc
popl
jns
test
adc
mov
popf
fbstp
inc
cmc
push
jl
nop
rorl
shll
aad
push
dec
add
ja
jg
xor
mov
dec
stos
push
adc
jmp
lahf
das
inc
popf
scas
movsb
xor
mov
das
mov
xchg
push
popl
ja
push
or
sbb
xchg
pop
and
es
jo
jmp
sbb
cltd
cltd
inc
cld
iret
push
test
mov
or
les
pop
pop
insb
mov
pop
scas
xchg
aam
test
js
jmp
pop
jo
add
mov
pop
stos
jmp
shl
and
bound
inc
mov
inc
seto
arpl
loop
lea
gs
mov
dec
mulb
sub
inc
daa
jmp
mov
add
jge
jle
aas
sub
lods
leave
jl
jb
and
lahf
lcall
in
push
sub
or
jge
sbb
adc
push
clc
fs
xor
cmp
sbb
rcrb
sub
pop
xor
outsb
je
add
pop
pop
mov
pop
cld
mov
jmp
outsl
push
movl
fcoms
xchg
mov
sub
scas
test
shll
mov
inc
cmp
pop
stos
inc
dec
lret
cld
das
or
mov
aaa
cld
movsl
cmp
sarb
dec
add
jmp
pop
jp
popl
xor
lods
loopne
or
pop
test
fnsave
sarb
enter
push
leave
shlb
lcall
gs
dec
into
push
jmp
sbb
push
mov
ret
inc
shrl
aas
inc
jbe
jp
sahf
mov
out
cmp
xchg
adc
cmc
mov
lahf
ss
shlb
ss
sbb
in
add
sbb
dec
sbb
repnz
mov
out
rclb
shlb
cs
js
cmp
call
inc
pop
mov
inc
push
ret
adc
add
mov
call
stos
cmp
adc
pusha
mov
mov
mov
push
dec
mov
outsb
adc
daa
mov
adc
int
into
dec
jbe
test
sbb
daa
pusha
push
pmaxub
aad
jecxz
push
or
mov
es
sub
mov
jecxz
lcall
frndint
xor
lods
inc
adc
sbb
adc
lret
mov
repnz
xor
mov
sbb
pop
aas
int3
add
cs
outsl
jecxz
or
pop
dec
pop
push
scas
fmull
cwtl
push
cltd
fisubrl
mov
aaa
fldt
mov
test
pusha
rcrb
outsb
inc
pop
adc
addr16
dec
push
jg
test
sbb
out
xchg
mov
xchg
repz
dec
dec
and
hlt
cmp
test
cltd
in
jnp
adc
cmp
shl
outsl
mov
js
inc
jno
mov
fists
ljmp
clc
aad
fimull
push
arpl
jne
gs
jnp
lea
mov
and
ds
pop
lcall
cs
push
icebp
and
or
ffreep
mov
mull
in
rol
in
jp
and
mov
in
decb
in
sbb
xchg
les
mov
sub
jmp
sbb
lock
or
push
loop
sti
pop
je
add
sahf
imul
test
sub
iret
fwait
mov
cmpsl
repnz
push
xchg
sqrtps
pushf
xor
test
scas
and
fwait
jbe
jg
out
pop
jge
mov
stos
jae
and
sub
outsb
les
mov
bound
add
test
sti
inc
sti
pop
iret
mov
lods
aas
dec
cmpsb
aad
pop
mov
xchg
and
ljmp
add
jg
sub
inc
and
lds
fs
mov
jns
pop
nop
nop
or
outsb
adc
xchg
fimull
lods
stos
popf
add
dec
pop
adc
lcall
adc
push
push
xchg
sbbb
bound
fdivl
imul
xchg
lea
aaa
rolb
xchg
mov
fists
pushf
mov
aad
pushf
loopne
cmovge
and
fnsave
rcrb
push
or
fs
ret
fcoml
adc
cmc
test
jbe
in
push
inc
or
inc
lods
jge
adc
sub
xchg
adc
stc
mov
in
movsl
test
inc
rcr
leave
push
gs
ljmp
pop
add
aas
enter
jne
cmc
loope
sub
lret
jnp
add
in
add
cmp
cmc
sub
addr16
xchg
fnstcw
pop
fnstenv
mov
mov
sbb
xchg
rorb
jbe
cmp
mov
push
push
xor
dec
cmc
add
xchg
inc
mov
stc
je
jno
push
mov
pop
lea
stc
ret
insl
aad
test
fimuls
shrb
and
and
in
insb
cmpsl
jge
cmp
popa
xor
add
cmpsl
xchg
mov
nop
cld
in
or
stos
adc
sarb
and
pop
jmp
out
pop
mov
cmp
push
ret
movsl
jb
push
pop
add
pusha
scas
mov
mov
xor
cmc
bound
outsl
push
sub
pop
insb
mov
jp
mov
fnsave
leave
std
cmc
test
loopne
fwait
xrelease
notb
repnz
and
std
insb
sbbl
push
sbb
push
jp
pop
lods
insb
lea
inc
mov
sti
sub
mov
pop
push
inc
sub
negb
bnd
mov
xor
or
js
data16
mov
mov
test
mov
sub
ret
jno
iret
dec
clc
inc
and
fs
cmp
popa
out
push
das
aaa
mov
cmp
fisttpl
enter
icebp
add
ss
es
das
sbb
ljmp
sub
push
cmc
cltd
mov
popf
je
mov
push
lret
cmp
add
test
sbb
call
data16
add
int
mov
es
push
callw
fwait
mov
inc
xchg
repz
fisubrl
cmp
aam
pop
and
dec
or
adc
mov
jg
data16
mov
gs
and
xor
aam
pop
jno
sub
push
inc
repz
mov
out
adc
loopne
int
jmp
mov
stc
mov
push
sar
loope
and
jg
lcall
gs
iret
cmp
test
cmp
inc
inc
ror
xor
orb
lret
std
cmp
loopne
sbb
add
mov
shlb
outsb
xchg
mov
push
or
bnd
aaa
movsl
and
clc
adc
xlat
or
scas
add
xchg
push
mov
mov
fsubrs
mov
pop
scas
imul
jns
mov
sbb
dec
ljmp
pushf
and
loop
xor
mov
call
out
mov
push
into
scas
and
inc
cmp
not
daa
jb
xor
cld
push
aad
or
pop
movsl
xor
stc
daa
sbb
ds
cli
das
xchg
sub
popf
std
and
xor
and
mov
js
loope
notb
js
mov
xor
ljmp
insb
in
mov
push
out
ret
adc
push
jbe
pop
sub
sbbb
ds
cmp
push
or
in
movsl
mov
push
in
fdivr
cmpsl
mov
shll
mov
arpl
bound
pop
inc
data16
sub
sarb
inc
pop
repz
and
jns
dec
bound
sub
adc
popa
stos
gs
xchg
jbe
jp
icebp
movsb
push
or
add
jg
daa
sbb
add
sub
aad
push
fdivrs
andb
push
call
sti
ret
add
cmpsl
loopne
mov
repnz
pop
pop
ret
clc
dec
dec
bound
lods
add
cmp
rcrb
aam
popa
addr16
cmp
pop
mov
mov
mov
pop
push
cwtl
or
jp
pop
je
jl
or
pop
test
jbe
iretw
into
ss
inc
mov
xor
push
mov
in
pusha
icebp
std
inc
or
imul
jl
xor
popf
ret
mov
inc
test
daa
sbb
dec
aam
mov
daa
scas
mov
mov
or
addb
aam
cld
fcomps
movsb
dec
pop
scas
jge
out
push
icebp
cld
xor
mov
xchg
dec
xchg
pop
mov
sub
cmp
lcall
dec
test
aad
mov
cmpsb
xchg
mov
rolb
cwtl
adc
sbb
mul
int3
repz
add
les
and
cmp
movsl
pop
jo
and
mull
dec
sbb
in
cli
ss
xchg
push
mov
out
mov
clc
add
and
cld
gs
stos
int3
pop
repz
gs
xchg
std
lock
pop
sahf
mov
icebp
jecxz
cmp
scas
dec
pop
movsb
lds
sarb
daa
ficoml
push
mov
js
push
data16
ljmp
jbe
imul
adc
enter
fisubrl
shrb
or
jno
jmp
sbb
pop
push
sub
push
lods
dec
inc
ljmp
inc
cmp
daa
popf
mov
insb
sbb
jns
mov
mov
add
inc
jae
mov
loopne
cltd
fs
dec
popa
out
and
dec
out
sub
jp
pop
data16
add
aam
mov
lods
in
cmp
or
lret
stos
sub
movsb
ja
inc
leave
push
data16
stos
ror
addr16
popa
dec
or
in
out
icebp
ret
lods
pop
divl
or
xchg
loop
addr16
jle
cli
sbb
je
sbb
test
mov
lcall
loopne
push
adc
ret
xor
push
ds
push
mov
mov
roll
in
push
or
inc
clc
inc
mov
rcrl
cmp
xchg
mov
mov
pop
xor
aad
pop
test
rolb
leave
xchg
cmpsl
out
jg
mov
xlat
pop
fs
je
orb
insl
mov
les
mov
lret
loopne
in
pushl
aas
dec
cmp
cmpsl
shrb
jp
xchg
add
enter
cld
das
frstor
ficoml
cmp
fwait
lahf
ret
adc
cmp
or
roll
adc
enter
frstor
test
bnd
push
sub
movsb
popa
fildl
jge
or
push
add
inc
arpl
sbb
inc
call
sbb
and
xchg
insb
pop
jns
sub
arpl
lods
bound
lock
inc
jle
cltd
loope
iret
mov
push
leave
iret
and
insb
and
ret
cmpsl
mov
pop
mov
xor
nop
jno
jbe
push
data16
adc
xor
movsb
dec
sahf
cmpl
movsb
mov
lock
xchg
and
imul
jae
nop
jnp
ret
insb
test
out
sub
add
jne
and
mov
mov
pop
sahf
push
aas
mov
inc
and
into
out
sti
jnp
mov
addb
in
jl
int
fwait
mov
jnp
push
in
bound
pop
push
add
imul
push
int
fwait
xchg
or
lahf
push
jo
cmp
andl
orb
movsb
shll
fstpt
adc
rorb
jns
daa
ja
std
aas
gs
cmpsb
int3
roll
fsubrl
icebp
and
ret
xchg
and
push
pop
lea
and
inc
sub
inc
iret
xchg
test
and
jnp
push
sbb
push
push
and
inc
pop
lahf
fs
repz
shll
adc
dec
jle
xchg
pop
imul
out
jb
xchg
push
dec
les
lahf
jo
fprem1
pop
push
loope
js
cli
insl
pushf
mov
pop
cmp
rolb
call
xor
fs
js
mov
pop
cmp
call
leave
add
and
cmp
stos
pop
mov
pop
insb
call
outsb
mov
int
cmp
cmpsl
leave
int3
lret
jae
jle
popf
lds
sub
int3
mov
jb
mov
scas
push
jnp
loop
outsb
ljmp
movsb
pusha
pop
push
cmp
push
inc
add
or
out
mov
lcall
xchg
rcll
mov
xor
xchg
mov
cmc
inc
cmp
shll
xchg
mov
idiv
xlat
mov
test
and
andb
into
adc
xor
jbe
cmp
cmpsl
mov
ret
lods
sbb
dec
xchg
push
push
mov
xchg
xor
fwait
icebp
test
addr16
in
pop
stc
xor
xor
sarl
rorl
jle
jg
imulb
outsb
jnp
mov
adc
xor
pusha
sahf
loope
shll
jmp
pop
mov
mov
gs
mov
popf
in
xor
and
scas
in
mov
test
div
xor
sbb
sbbl
scas
push
sub
jl
xchg
fsubr
in
in
repnz
outsl
out
iret
fimull
jmp
fstp
pushf
and
out
in
push
sti
push
sarl
negb
mov
jnp
xchg
pushl
jg
nop
push
mov
enter
sbb
add
pop
hlt
push
aam
push
scas
add
enter
test
sbb
push
jg
jp
mov
hlt
xor
mov
lcall
loope
cld
xchg
add
dec
imul
fs
pop
xchg
lea
pusha
lock
push
mov
mov
outsb
inc
scas
dec
cld
dec
ficomps
int
adc
xchg
or
push
cwtl
rcrl
cmp
test
and
xor
call
jne
sbbb
mov
rol
aaa
and
mov
aaa
dec
sbbl
or
cmpsb
xchg
cltd
mov
or
das
shlb
jno
fwait
xchg
addb
jne
xor
test
into
fdivl
add
xor
inc
mov
fmull
adc
call
aas
vmwrite
xor
lret
jl
je
xor
adcb
test
mov
mov
bnd
aaa
into
push
ret
jmp
ftst
clc
add
dec
sub
xor
sbb
push
pop
loope
jbe
dec
cmc
bound
ss
mov
add
mov
sub
mov
test
xchg
lods
and
data16
sub
repz
dec
push
dec
clc
loopne
jmp
out
adc
es
jecxz
cmc
jp
mulb
testl
xchg
test
mov
fldcw
fsub
xlat
dec
push
icebp
adc
cmp
ljmp
lods
adc
or
add
push
sahf
test
ror
lret
lods
repnz
nop
sub
in
or
push
jb
flds
rol
scas
mov
adc
insb
imul
pop
mov
mov
pop
mov
nop
les
dec
ja
cmp
out
cwtl
pop
jg
int
mov
popa
cmp
imul
push
add
push
mov
call
cltd
call
inc
push
imul
in
dec
xchg
pop
pusha
cltd
pop
in
imul
xor
lods
sub
jo
dec
jmp
ds
inc
pop
loop
add
push
lret
lods
inc
test
push
jmp
xchg
cs
xchg
out
cmpsl
test
aad
cmp
movsb
adc
jmp
mov
sbb
add
popf
mov
dec
pop
mov
adc
mov
ds
in
aaa
gs
mov
lock
push
fisubl
jno
cmc
mov
push
cs
outsb
jmp
das
pop
stc
popa
repz
sbb
fstpt
inc
add
xor
fst
mov
outsw
jnp
data16
xchg
mov
lret
std
jno
pop
stc
loope
negb
or
or
push
outsb
jbe
fldt
xor
adc
jb
push
dec
xor
xchg
cltd
jno
dec
ss
sbb
cmp
pop
jp
dec
cwtl
xchg
push
dec
call
push
out
test
adc
hlt
xchg
jnp
mov
push
repz
jbe
sub
mov
sub
in
test
fcomi
adc
push
pop
or
arpl
lret
decb
fldl
and
in
addl
insl
push
push
ljmp
add
jne
xchg
aad
arpl
mov
test
mov
or
and
dec
fisttpll
push
xor
pop
push
and
sbb
lret
and
push
or
jne
fisubl
pop
cmp
pop
orl
sbb
or
shrl
imull
loope
fisubrs
dec
pop
mov
bound
lock
insb
icebp
add
inc
jmp
gs
jnp
mov
lods
jp
mov
nop
lods
cmpsb
insb
jle
push
jne
adc
ljmp
mov
jne
das
call
pop
in
pop
push
jg
imul
mov
cs
cmp
push
pop
lea
sahf
int
xor
xchg
jb
or
dec
add
lea
je
out
fnstcw
orb
cmc
aaa
or
cmovs
or
loop
repz
adc
std
orb
or
rcr
xor
lods
jl
nop
nop
or
repnz
aam
sahf
sbb
xor
xor
xlat
enter
pusha
pop
mov
test
jne
cmp
movsl
or
out
add
ficomps
shrl
and
jns
and
push
mov
sbb
std
stos
mov
arpl
sarb
mov
loope
aad
adc
adc
pop
cmp
ja
push
into
mov
or
push
out
in
sbb
imul
mov
std
rcrl
or
jbe
and
das
cmp
cli
pushf
cmc
jle
fwait
movsb
jmp
cld
and
fwait
inc
adc
cltd
mov
push
es
repz
insl
mov
push
xlat
push
jo
arpl
cmc
xchg
sbb
and
mov
test
sbb
testl
aad
or
repz
jae
jg
mov
jb
pop
iret
into
jmp
sub
aam
pop
mov
lahf
movb
vpmulhw
mov
mov
xor
mov
scas
cltd
aam
jl
sbb
cwtl
shll
mov
adc
lods
jbe
fsubrs
mov
testb
setg
dec
ss
into
cmpsl
into
or
and
lret
dec
out
inc
xlat
movsb
adc
xchg
cld
je
mov
insl
xor
push
sub
fadds
sti
out
mov
push
shr
lods
ret
mov
xlat
mov
adc
and
jge
pusha
aad
lods
and
icebp
dec
xchg
popf
repnz
clc
inc
dec
repnz
add
call
subl
push
or
out
jl
add
mov
xchg
xchg
test
pop
cmp
imul
mov
loopne
mov
mov
adc
sub
dec
or
setns
lods
mov
xor
pushf
fmull
rcll
enter
stos
push
dec
dec
mov
stos
fimull
jns
in
loope
adc
daa
sbb
aaa
dec
out
mov
xchg
insb
stos
nop
jae
lock
adc
iret
mov
lods
call
in
out
andl
movsl
mov
jo
sarl
dec
cmc
insb
hlt
and
mov
scas
ret
iret
outsl
adc
dec
dec
lcall
adc
push
and
adc
sub
pop
mov
lcall
mov
mov
testl
in
sub
mov
sub
out
and
push
adc
nop
movsb
sbbl
and
mov
imul
fwait
bound
lock
push
xor
out
jge
mov
sbb
les
pop
sbb
lret
xchg
test
sbb
ficompl
cmpsb
jg
in
cli
arpl
mov
stos
sub
stc
cmp
cmp
xchg
jb
cmpsb
and
jecxz
push
test
lds
lea
test
outsl
adc
aam
push
js
out
or
mov
mov
adc
test
stc
dec
push
xchg
add
pop
inc
pop
fdivl
xor
inc
stos
push
gs
lods
imul
and
and
lock
mov
mov
sbb
push
scas
cmp
test
jo
lea
outsl
es
push
inc
call
dec
pop
in
popa
ret
ljmp
push
or
cmc
xlat
js
xchg
mov
or
es
sahf
pop
push
xchg
hlt
sbb
pop
test
out
pusha
stos
repz
aam
outsl
enter
icebp
pusha
or
int
sbb
add
sub
ret
jo
mov
or
bound
and
imul
mov
aas
or
lods
decb
and
ds
sbb
or
js
cld
pusha
std
int
ror
or
movsb
xlat
jmp
pop
cs
insl
mov
sub
mov
xchg
aaa
sarl
add
mov
dec
cmc
mov
loopne
mov
sti
ss
in
lcall
out
cmp
dec
stc
dec
inc
jno
adc
jo
jp
jns
xor
sbb
fstps
mov
popf
roll
and
dec
loop,pt
cmp
sbb
insb
push
pop
fs
mov
repnz
adc
mov
ljmp
sub
outsl
push
push
mov
lcall
jne
adc
sbb
adc
loope
lods
cli
xor
loopne
sub
inc
lret
les
mov
cmp
jp
ret
test
lods
or
dec
inc
mov
dec
add
sbb
sarb
sbb
mov
das
push
pop
xor
mov
inc
rorb
shlb
jle
dec
jb
in
jl
mov
fs
icebp
jae
jp
nop
iret
sahf
inc
add
scas
ror
mov
mov
add
iret
sbb
mov
shr
loop
test
lea
push
mov
sti
cmpsl
jle
ljmp
xorb
adc
inc
int3
xchg
aas
mov
or
pop
cltd
push
int
pop
inc
adc
push
pop
fists
and
fstl
daa
mov
sbb
pop
jo
stc
icebp
or
sbb
icebp
or
lods
sub
inc
cmp
rorl
inc
incb
repz
lret
inc
stos
es
mov
repnz
loop
mov
outsb
dec
or
jne
mov
sub
pushf
pop
jo
lahf
ret
cld
mov
jo
cmp
sub
ret
xchg
mov
stos
enterw
inc
inc
and
pop
cmpsb
rcll
mov
rcll
xlat
inc
stc
ficoml
pusha
push
sahf
stc
pushf
andl
cmp
fstpl
and
mov
or
xor
dec
sub
mov
mov
loope
jnp
lods
push
sbbb
xor
daa
jo
dec
iret
sub
mov
lcall
repz
leave
mov
mov
mov
and
ret
scas
sub
xor
jae
lret
cld
fldcw
cmp
sub
test
sbb
jae
imul
pop
insl
shrl
lret
data16
push
es
inc
or
dec
pop
shlb
adc
jecxz
loope
sub
jno
mov
aam
adc
icebp
into
or
lret
dec
ljmp
mov
sbb
mov
divb
mov
dec
insb
fsubrs
fstps
xor
cmp
rcll
test
icebp
dec
in
mov
pop
lahf
cmp
mov
lds
lcall
jne
fs
dec
xchg
sub
mov
inc
jmp
stc
outsl
mov
jae
fs
lcall
sub
sahf
push
movsb
gs
arpl
add
imul
loop
aaa
add
xor
inc
sub
mov
dec
adc
aas
sarb
sbb
outsb
imul
dec
mov
data16
dec
sti
jns
xchg
jecxz
push
jbe
pop
add
dec
add
adc
stos
shl
in
xchg
or
jnp
fisubrl
and
pushf
insl
add
add
mov
fstpl
cmp
jmp
inc
sub
xchg
in
sub
gs
sub
pop
imul
xor
inc
jb
movsl
out
mov
inc
fcmovnbe
or
inc
in
das
mov
aaa
icebp
daa
jns
sti
push
sub
jbe
cmovo
js
test
daa
fwait
sbb
and
push
inc
jno
lock
mov
adc
js
mov
pop
push
inc
lds
inc
out
in
icebp
arpl
sub
lods
cwtl
jp
inc
in
xchg
sub
or
aad
hlt
out
shr
fs
mov
mov
and
push
dec
xor
xchg
clc
inc
jno
idivl
jg
jle
cli
test
mov
xlat
pop
mov
loopne
frstor
mov
mov
dec
ss
std
lahf
add
outsb
and
cmp
pop
add
aas
roll
and
jb
sbb
iret
xor
cltd
dec
sub
stc
and
stc
or
rcrb
jle
cmp
nop
notb
leave
leave
mov
test
push
lods
adc
ret
and
je
dec
pop
mov
xchg
inc
dec
adc
fisubl
scas
js
ss
mov
out
psubd
add
lahf
fcompl
jns
sub
repz
add
stc
xor
push
pop
add
jle
jge
out
in
ret
es
push
push
fwait
inc
mov
dec
stos
and
and
les
enter
mov
jb
inc
imull
jae
jbe
or
sub
mov
fidivl
cli
mov
push
test
dec
cmpl
pop
sbb
rorb
clc
lods
pop
movsb
nop
fwait
push
or
jne
movsl
cmpsb
mov
xchg
mov
push
inc
or
cld
mov
daa
pop
insb
mov
xchg
push
jae
cltd
andl
stos
inc
push
add
cs
ss
inc
mov
mov
sub
ja
mov
sub
shrb
leave
aam
inc
mov
pop
fstpt
lods
and
inc
mov
push
icebp
cmp
fwait
testl
pop
imul
xor
dec
push
leave
pop
ja
adc
dec
xchg
or
jg
and
pop
pop
ficomps
cmpsb
pushf
ret
cmpsb
iret
pop
aam
sahf
sub
movsb
test
dec
das
add
ret
push
adc
pop
xchg
adc
xchg
sahf
inc
push
inc
pop
or
add
pop
jle
or
bound
pop
std
cmp
stos
xchg
ss
hlt
jbe
cmp
dec
sub
popf
jg
std
pop
lods
nop
or
push
xchg
pop
cmp
loopne
leave
cli
sarb
push
sbb
repnz
stos
pop
cmp
push
adc
loop
pop
push
ret
mov
loopne
ss
mov
xor
or
xchg
push
and
adc
fdivs
lock
aad
mov
scas
cmp
int
lahf
bound
mov
fxam
cmp
sub
xchg
test
push
push
dec
inc
inc
addl
mov
movsb
pop
jg
sub
mov
movsl
fcmovb
mov
in
mov
mov
lahf
mov
pop
push
jl
dec
dec
jno
add
sub
ret
dec
push
adc
xlat
pop
or
movsb
or
std
dec
jns
stc
xor
loopne
inc
cltd
mov
jo,pn
fdiv
jne
dec
aas
xchg
dec
add
push
fdivrs
call
jo
push
mov
and
repnz
lds
cmp
out
scas
sti
lods
lds
bound
xor
mov
and
pop
push
hlt
pop
rcr
cld
or
jns
sub
movsb
dec
dec
xchg
push
icebp
jl
sub
insl
test
insl
mov
sub
fnstsw
sbb
icebp
sbb
inc
sbbl
mov
mov
pushf
xor
stos
es
xchg
sub
push
div
gs
cmpsl
stos
jecxz
mov
jle
mov
sbb
jg
adc
push
push
mov
mov
jle
inc
push
push
pop
cmp
leave
rcrb
push
jne
xlat
or
sbb
rorb
dec
insb
push
cmp
mov
pop
sub
push
or
cmp
shl
movsb
cwtl
xor
inc
shrl
add
pop
mov
jmp
cmp
xchg
or
mov
lods
or
push
ret
arpl
pop
pop
push
into
dec
or
mov
mov
in
sub
cwtl
cmp
pop
fidivrs
mov
mov
and
mov
lret
fisubl
fsubr
aaa
fdivrs
enter
adc
add
mov
lock
or
mov
pop
out
in
mov
jp
roll
scas
imul
adc
or
push
fsubl
pop
jb
mov
sahf
in
aad
cmp
leave
push
cli
mov
fdivl
xchg
or
add
or
insl
pop
pop
jns
cmpsl
dec
test
xchg
popa
inc
jmp
adcb
fwait
pop
xchg
mov
jg
mov
cmp
sub
or
scas
pushf
pusha
mov
dec
fdivrs
adc
loop
dec
mov
lods
aas
shll
jle
sub
pushf
inc
mov
push
sbb
jg
popa
loopne
jbe
out
fistpl
clc
or
dec
jg
pop
sbb
push
decb
stc
mov
enter
sub
imul
sub
arpl
sti
push
lea
popf
aas
or
insl
enter
test
stos
in
xor
sarl
mov
or
jo
lcall
jle
iret
fstl
punpcklbw
push
inc
jg
pushf
ret
ds
cwtl
hlt
mov
mov
xchg
mov
xlat
out
out
push
inc
jp
jl
dec
sahf
mov
push
pop
xchg
and
pop
push
js
sub
lret
and
test
add
sti
in
jle
inc
stc
sbb
insb
sub
sub
negl
xchg
popf
sarb
mov
xlat
cmpsb
mov
rolb
rol
pop
cmp
jp
sub
cmp
dec
fdiv
aaa
leave
pop
inc
jmp
insb
adcb
ljmp
adc
pop
fs
in
mov
test
out
sti
fisubl
pop
push
nop
ror
addr16
mov
cmpsl
push
lods
clc
jp
mov
and
mov
nop
call
mov
mov
test
adc
or
xchg
dec
and
imul
adcl
adcl
mov
imull
mov
mov
js
mov
cs
stc
mov
push
jbe
mov
adc
cs
xchg
xchg
stc
ret
lds
clc
pop
xchg
bound
loop
add
sub
pushf
gs
mov
fnstenv
lret
jp
test
pushl
iret
cmova
or
jnp
pop
outsb
gs
test
mov
push
and
sbb
in
jbe
dec
cmc
jb
mov
pushf
push
mov
sbb
inc
xchg
fwait
rcrb
pop
or
loopne
jmp
inc
aad
int
and
test
ret
call
sub
imul
enter
xor
and
call
mov
cltd
push
pop
hlt
sub
add
aaa
das
sbb
push
popa
pop
and
rol
sbb
sbb
decb
push
mov
sbb
jae
adc
xchg
sbb
push
arpl
add
push
les
fists
push
sub
xchg
and
xchg
inc
sub
std
xor
mov
xor
nop
enter
add
dec
mov
mov
adc
cmpsl
mov
push
jnp
jno
adc
adc
adc
dec
aad
jnp
xchg
cli
mov
test
mov
mov
xlat
or
das
pop
aad
adc
inc
ja
xchg
shrb
out
sti
shlb
shrl
out
mov
in
ljmp
jmp
jns
push
mov
mov
jne
frstor
loopne
xchg
jmp
gs
movsb
inc
xor
sbb
ja
pop
sahf
xor
fstl
jno
test
mov
adc
adc
mov
lcall
adc
sub
adc
mov
popf
stos
addr16
les
jmp
mov
mov
out
lods
xor
mov
add
jbe
lret
mov
mov
leave
jne
xchg
repz
fs
sarl
mov
insb
in
iret
push
fsubl
lret
repnz
insl
ror
add
and
stc
pop
cmpsl
arpl
pop
stos
sub
test
push
je
cmp
push
or
mov
rcl
inc
xchg
pop
or
xchg
mov
inc
cli
adc
cmp
mov
jo
add
test
mov
test
push
pop
fcmovb
test
mov
fiaddl
lcall
ret
mov
inc
ja
cld
frstor
mov
popa
dec
xchg
cmp
xchg
xchg
sbb
jo
xchg
xchg
dec
mov
inc
jo
lds
mov
test
adc
lock
mov
call
negl
add
ljmp
push
xlat
ficompl
or
imul
xchg
outsl
dec
inc
rorl
mov
xchg
mov
pushf
add
in
dec
lods
cmp
sub
outsl
les
xchg
mov
pop
sbb
les
out
jbe
jp
fdiv
cmp
dec
push
sub
adc
and
and
lcall
mov
lcall
lret
mov
mov
stos
hlt
rcll
pop
mov
test
lret
rcl
out
addr16
je
xchg
sti
xchg
mov
cmp
dec
xor
imul
jb
jge
lcall
pushf
les
jecxz
pop
je
pop
test
in
popa
sbb
sbbl
pop
pop
test
aam
and
push
jg
pop
insl
mov
je
cmp
fsubr
inc
or
fcmovne
add
mov
bound
dec
mov
jns
popf
or
xchg
sti
push
fs
dec
push
inc
jbe
rol
mov
js
fs
loope
rcl
sbb
lods
sbb
cmp
mov
push
shr
mov
mov
cld
call
mov
push
mov
ja
lea
das
in
mov
adc
push
test
mov
add
pop
inc
dec
pusha
jnp
add
mov
call
in
mov
not
popf
testl
sti
in
fcmove
mov
addr16
mov
adc
push
shlb
mov
es
movsb
fisubl
sti
lret
adc
add
push
mov
xchg
fidivl
loope
mov
jmp
pop
popa
fimull
or
loope
inc
popf
sbb
or
out
les
mov
push
pop
stc
sbb
mov
loope
ret
fs
or
or
jmp
jecxz
repnz
stos
dec
in
jge
pop
push
inc
and
imul
add
out
sub
inc
fisubl
shll
fs
push
loop
adc
push
out
loop
dec
fidivrl
jb
call
je
jo
aad
stc
xor
adc
cmp
lock
in
sbb
xchg
in
imul
pop
jge
jb
pushw
aas
stc
xor
fisttps
xchg
insb
cli
sti
mov
and
sahf
popf
out
push
sbb
xchg
andl
orl
fmuls
cwtl
insl
or
mov
lahf
push
jbe
inc
ss
mov
andb
xchg
dec
ja
sbb
movsb
stos
push
bnd
cmp
mov
dec
imul
or
jae
pop
mov
xor
daa
ss
or
or
push
pusha
fs
and
cmp
stc
out
pushf
stos
jnp
mov
pushf
pop
rorb
add
sbb
or
push
or
push
or
icebp
sti
iret
test
mov
lret
loop
sbb
mov
pop
and
lods
push
push
xchg
jmp
data16
ljmp
xchg
and
pop
stc
pop
or
dec
sbb
lea
push
mov
or
inc
sbb
mov
shl
std
and
ds
xor
push
mov
xchg
sbb
sub
cmpsl
das
aad
ds
outsl
mov
in
inc
or
testb
mov
lea
in
ljmp
push
aad
rorb
fcmovb
addl
scas
popf
bound
mov
jmp
pop
jl
enter
inc
pop
shll
xlat
push
push
dec
lock
mov
push
call
push
scas
xchg
xor
testl
daa
xchg
mov
xchg
rorl
subb
shll
iret
loop
mov
lcall
cmc
cld
mov
xor
ds
cwtl
into
jge
push
sbb
sub
test
stos
mov
shrl
cmp
pop
xor
mov
push
leave
testb
fsubp
test
jmp
mov
cmpsl
and
pop
jmp
ljmp
je
cli
les
mov
or
in
mov
lea
push
clc
pop
mov
mov
aad
sahf
in
pop
and
test
fmul
cmp
pop
push
in
cmp
pop
inc
xchg
xchg
sub
arpl
pushf
fimuls
loop
mov
lcall
adc
inc
bound
sbb
test
in
and
dec
mov
js
clc
or
in
sub
pop
shll
inc
cmpsb
jno
pop
cld
mov
or
in
push
adc
popa
mov
dec
lcall
mov
cli
add
add
sub
in
sub
or
add
push
aad
add
cld
sub
sbb
fcmovnbe
mov
push
adc
pusha
cmp
les
clc
adc
aad
les
xor
cmp
mov
lahf
xchg
fimull
aas
sti
mov
mov
adc
mov
mov
aad
mov
pop
adc
ljmp
or
push
inc
xchg
inc
mov
add
stos
cmp
lret
nop
and
xlat
repnz
dec
xchg
push
xchg
xor
xor
dec
sub
jp
inc
js
pushf
xchg
mov
xor
ret
xor
mov
adc
mov
sbb
repz
jo
ss
call
or
mov
aad
js
outsb
xchg
aam
mov
scas
dec
fnstenv
adc
rolb
mov
inc
loop
adc
sbb
or
int
sub
sbb
xor
mov
mov
es
test
jg
aam
add
ljmp
cmp
adc
fsubrp
add
jnp
xor
sbb
mov
fildl
jb
pusha
push
cmp
into
scas
lock
ret
lock
push
enter
inc
mov
mov
outsl
dec
andl
mov
aam
dec
or
inc
leave
and
push
push
xor
cmp
popa
jp
adc
jne
enter
push
lea
daa
push
inc
sub
mov
and
mov
jae
mov
lock
xorl
cld
add
pop
lahf
popa
mov
aam
adc
int3
push
pop
or
pop
frstor
js
mov
mov
add
add
mov
sti
iret
add
pop
pop
imul
mov
mov
xchg
push
inc
aam
jno
pop
xor
dec
mov
popl
inc
lock
rorb
pop
lock
xchg
loop
push
iret
nop
insl
lds
pusha
sub
rcr
repz
inc
outsb
xchg
or
movsb
aad
mulb
leave
add
imul
xchg
arpl
jns
jp
test
sbb
testb
imul
dec
cmp
mov
mov
push
jp
push
fiadds
xchg
jge
sarl
sbb
and
mull
fldenv
and
mov
shll
lcall
sbbb
lds
jb
or
inc
outsb
rolb
jge
es
add
out
cs
and
loope
cld
lds
or
gs
leave
xchg
out
daa
dec
shrb
mov
in
jnp
jae
ficoms
mov
and
xor
sub
repnz
mov
leave
cmp
scas
out
ja
arpl
push
sahf
xor
pop
inc
cmp
fisubrs
and
out
and
xor
pop
iret
push
add
pop
sub
sub
jle
cmp
push
mov
xor
ret
xchg
jmp
pop
adc
pop
xchg
jl
xchg
push
or
movb
les
xchg
push
mov
inc
sbb
cmpsb
add
shlw
cmpsl
in
jge
mov
xor
in
jns
sbb
addr16
jmp
cmp
sub
aam
ja
pop
vmovd
pop
hlt
xor
daa
enter
jle
push
out
dec
push
in
jmp
add
inc
ret
data16
movsl
mov
push
pop
add
loop
dec
push
xchg
mov
mov
ret
cmc
inc
cs
and
nop
and
mov
imul
jne
insl
aad
xlat
pop
sbbl
loop
aad
push
sbb
movsl
ljmp
test
fsubrl
jnp
aam
push
inc
sub
sbb
cmp
mov
adc
in
xchg
cmp
inc
pop
jmp
insl
adc
xlat
mov
repnz
cmp
mov
inc
push
pop
inc
shll
push
sbb
or
es
lret
cmp
stos
dec
inc
das
shl
mov
mov
sub
cld
mov
cli
mov
sbb
push
mov
pop
sbbl
xchg
mov
aad
movsb
or
addl
sub
shll
outsl
jns
out
inc
xchg
pop
in
xor
test
mov
cmp
fdivs
in
pop
push
jle
mov
dec
gs
imul
notl
js
dec
movsl
ret
cmp
icebp
jecxz
or
add
mov
out
out
in
cmp
fdivr
fwait
push
pop
negl
xchg
mov
push
push
test
test
stc
sub
cltd
push
out
add
mov
mov
gs
push
cmp
lret
push
add
cmp
cmp
xlat
jmp
mov
pop
push
sbb
ret
lahf
sahf
xchg
mov
jmp
movsb
vpbroadcastd
movb
mov
test
jae
lahf
aas
sbb
dec
and
cs
les
fwait
pop
xchg
push
or
in
dec
jo
loope
add
jp
mov
add
dec
std
not
push
dec
scas
push
cmp
mov
push
hlt
pop
pop
test
mov
insw
pop
mov
xor
adc
fcoms
jno
enter
jno
and
and
faddl
cmpsb
mov
loop
jecxz
imul
rclb
jo
cli
test
fadds
xor
adc
push
push
lds
arpl
test
fsubl
ja
mov
xor
xor
sbb
out
fcmovnb
aam
inc
jo
sub
loopne
in
jb
scas
lahf
dec
pop
mov
xchg
stc
adc
and
xor
pop
cmp
sahf
jmp
cmp
movsb
popa
xchg
mov
subl
notb
xchg
mov
ficoms
and
adc
or
hlt
hlt
int3
ret
mov
jnp
adc
cmpsb
jae
mov
cmc
pop
xor
int3
sbb
add
pop
push
ficompl
cmpsb
cli
jns
das
xor
jb
add
sbb
xchg
pop
imul
jb
lods
repz
arpl
cs
shll
cli
cli
add
mov
inc
push
cmpsb
push
fwait
mov
xor
clc
mov
aaa
mov
scas
xchg
push
or
sbb
jmp
mov
mov
mov
andl
cmp
movb
sub
jnp
adc
lahf
xor
sub
jmp
pop
roll
lock
lods
mov
sbb
sbb
mov
repz
xchg
mov
in
movsl
lods
push
pop
pusha
cmpsb
inc
or
mov
out
mov
lahf
mov
cmp
jp
jle
enter
mov
insl
rcl
push
ds
jae
jge
fsubs
mov
or
decl
mov
cs
imul
sbb
enter
idivl
decb
jae
push
pop
rcll
test
lcall
or
inc
pushf
je
imul
xchg
mov
in
divl
cwtl
lcall
add
int
push
xchg
dec
sbb
stc
xor
or
stos
dec
loopne
xchg
mov
add
cmpxchg
pop
push
sbb
sub
xchg
push
push
outsb
cmpsl
push
imul
pop
sub
add
sahf
lds
pop
push
or
dec
lcall
imul
enter
movsl
aam
aas
in
ret
add
pushf
movsb
out
push
shlb
mov
push
loopne
sahf
cltd
fwait
out
es
pop
int
add
into
sub
cwtl
addr16
in
ja
fsubl
popa
dec
mov
mov
sahf
or
cmpsb
pop
xor
xor
loope
xchg
cmp
arpl
xchg
inc
dec
lods
dec
sub
jnp
testl
or
xor
inc
push
cmc
adc
adc
test
and
sahf
cmp
push
push
int
and
ljmp
popf
lret
jge
out
mov
mov
ljmp
call
and
popa
stos
jno
cmc
or
mov
add
iret
push
mov
xor
pop
lock
sub
sub
xchg
fidivl
cli
dec
push
test
mov
leave
and
decb
pushf
mov
or
xchg
mov
dec
out
jo
add
dec
iret
xlat
enter
outsl
inc
subl
insb
pop
and
test
push
daa
aaa
jg
push
mov
adc
jnp
cmp
jmp
cld
xor
or
rcl
dec
in
repnz
popf
iret
fistl
sbb
dec
lahf
cmp
mov
movsb
jle
lcall
mov
fwait
lret
inc
sub
ss
adc
popa
sbb
insb
pushf
scas
dec
and
mov
xchg
inc
xor
mov
ret
jecxz
push
adc
ds
aad
xlat
dec
aam
push
push
ret
jmp
add
fdivrs
mov
fdivrl
and
rcrb
stos
mov
sti
sbb
cltd
cmp
inc
dec
test
mov
mov
jl
stc
mov
and
mov
mov
sub
mov
dec
mov
cmp
mov
loop
test
loop
and
pop
or
or
loopne
mov
sub
es
pop
fisttps
push
fstpl
mov
scas
add
mov
sbb
xchg
out
repz
mov
test
adc
addr16
mov
inc
mov
loopne
ja
mov
and
sbb
push
pop
jae
push
repz
adc
decl
push
push
pop
inc
jno
in
ds
fbld
push
sbb
sbb
adc
adc
into
icebp
inc
ret
add
lods
sbb
ret
push
and
or
pop
jo
mov
das
into
js
push
jno
fs
insb
pop
jnp
out
inc
outsb
ret
sub
add
xchg
adc
in
ljmp
iret
cmp
fwait
dec
incb
pop
and
rep
aam
inc
in
loopne
inc
iret
add
mov
adc
or
ljmp
inc
lcall
sbb
dec
xchg
mov
push
mov
pusha
dec
pop
jbe
les
into
popf
orb
mov
add
subl
xchg
insb
mov
outsl
insb
iret
add
xlat
cmp
and
add
mov
std
push
mov
hlt
imul
jae
lds
fs
dec
xchg
aaa
add
or
push
and
mov
adc
xchg
jbe
addr16
dec
lret
loop
scas
add
cmpsb
out
xor
and
fists
push
or
xchg
nop
mov
rcrl
adc
lret
cmpb
cwtl
notl
xor
sub
add
dec
pop
ja
inc
add
add
jns
mov
jbe
test
into
in
repnz
dec
mov
test
cwtl
mov
lds
dec
jno
hlt
inc
movsl
in
pop
stos
leave
es
and
sub
xchg
js
jnp
in
inc
jnp
push
lcall
stos
sub
dec
scas
cld
sarl
bound
loope
ss
xor
mov
jp
push
not
xor
inc
adc
mov
loope
sub
mov
jge
jo
sub
push
jge
insl
lock
je
out
and
outsb
or
mov
add
inc
xlat
shll
ret
fisubrs
sub
fisttpl
testb
ficompl
adc
mov
xchg
add
rcrl
dec
jo
shl
sub
adc
lahf
daa
mov
punpckhbw
in
lret
sbb
rolb
in
inc
mov
jmp
cmp
ret
js
xor
jecxz
das
cmpsl
test
data16
mov
xchg
sarl
mov
sbb
inc
test
fs
adc
add
in
inc
mov
sbb
cli
xlat
ja
mov
mov
clc
or
js
lods
cltd
cmp
dec
dec
leave
cmp
jle
or
insb
xchg
sub
xor
jle
aam
xor
adc
xchg
aas
dec
lods
imul
nop
sbb
lods
dec
cmp
fwait
mov
mov
pop
popfw
repz
lock
jmp
and
or
icebp
inc
push
mov
comiss
xor
pop
mov
jp
and
xor
mov
bound
out
xor
push
cs
cli
xchg
xor
stc
ss
popa
test
aam
push
and
popf
cltd
pop
jo
rcrl
pop
pusha
ss
cmp
push
cli
insl
pop
xchg
cld
pop
inc
imul
or
jae
pop
adc
pop
movsl
and
fidivl
push
add
cltd
in
push
enter
mov
dec
add
inc
movsl
imul
test
xchg
fisttpl
push
cmc
pop
push
inc
outsb
add
fildl
inc
sbb
les
jo
lock
sub
das
mov
jae
loope
lcall
enter
ret
add
mov
mov
or
jnp
call
shlb
test
adc
cwtl
nop
mov
push
sbb
xchg
cwtl
push
adc
xor
adc
decl
mov
mov
push
imul
or
jno
pop
dec
mov
movsl
pop
sahf
mov
in
inc
xchg
cmc
addb
jno
xchg
dec
mov
push
add
xlat
xchg
daa
cld
and
inc
ficoml
xchg
cmp
dec
movsb
inc
sub
stc
inc
fstps
icebp
call
in
xchg
fmul
lods
sbb
mov
adc
leave
or
loope
rorb
clc
pop
add
mov
adc
sbb
cmc
imul
cmp
daa
adc
sahf
js
cmp
outsl
sti
pop
add
adc
popf
xchg
stos
xor
inc
sbb
sub
or
mov
xchg
stos
ja
add
hlt
sub
inc
std
popf
fincstp
or
dec
into
div
loop
std
pushl
push
loope
cwtl
fstl
in
lea
cmovae
testl
dec
pop
adc
push
subl
rorb
mov
jle
test
stos
inc
das
ret
inc
insl
loopne
inc
fimull
dec
add
das
cwtl
add
sti
mov
fnstsw
shlb
xchg
pop
xchg
jbe
movsl
or
testl
scas
out
add
int
or
ja
out
jmp
adc
jns
lock
cmc
pusha
lcall
xchg
xlat
aad
movsb
sub
stos
or
xchg
divb
cmc
int3
jl
ljmp
test
comiss
test
loop
testb
inc
sahf
pop
shlb
sub
fidivrs
dec
flds
idiv
xchg
xor
subl
cmc
shll
sbb
movsl
out
adc
scas
push
dec
xor
das
jno
xor
sub
dec
inc
inc
push
outsl
push
shrb
imul
or
lock
and
or
xor
fisubrs
pop
or
fs
inc
lock
add
mov
out
dec
ss
test
sahf
dec
cld
adc
divl
sub
push
lahf
adc
setg
pop
mov
add
and
movsl
or
iret
ja
dec
xorl
cwtl
pop
mov
or
push
je
mov
jnp
jne
xchg
jb
orb
mov
xchg
movsb
ja
shll
inc
aas
loope
mov
fists
test
out
add
xor
mov
mov
and
loope
cmpl
shrb
movsl
xchg
arpl
push
cmp
sub
outsl
fstl
mov
and
cmpsb
imull
iret
jb
inc
adc
cmp
mov
lahf
enter
cwtl
outsl
outsb
jnp
das
fcoml
out
xchg
std
cld
jle
adc
jbe
sub
call
inc
lret
mov
adc
add
add
test
stos
mov
js
js
push
mov
pop
sub
bound
add
dec
push
mov
pop
push
cwtl
ljmp
movsl
outsb
dec
shll
add
push
push
les
cltd
jmp
fs
or
lods
lods
jle
mov
xchg
xchg
adc
in
subb
push
jne
popf
xorb
sarb
dec
dec
cmpsb
mov
sub
addl
adc
push
mov
jle
mov
dec
gs
mov
int3
scas
out
dec
dec
das
insl
aaa
rcll
cmp
test
inc
inc
ljmp
dec
dec
stos
out
add
out
mov
lret
pusha
push
out
mov
out
or
xchg
insb
mov
addb
ja
ljmp
jecxz
sub
sahf
in
insb
lcall
repnz
jle
cli
add
test
jg
and
sbb
mov
dec
dec
popf
jg
sub
ja
mov
pop
sbb
inc
cmpsb
pop
aad
in
int3
orb
outsb
ror
sub
jbe
push
sub
int
push
lea
mov
lods
mov
mov
mov
dec
mov
test
adc
mov
shl
fmull
cwtl
nop
push
push
or
xchg
ret
push
adc
pop
mov
adc
cmp
addl
in
cmpsb
pushf
or
lods
push
sahf
xchg
mov
es
inc
jnp
data16
push
aas
lods
hlt
mov
push
aas
outsl
testb
adc
nop
dec
arpl
xor
sahf
pop
ficomps
ret
dec
ret
lcall
pushf
xchg
out
lahf
jle
test
nop
jl
or
clc
rcrb
movd
test
xor
jo
dec
mov
fsubs
mov
mov
gs
jnp
add
int3
xor
testl
insl
jmp
jg
fdivrp
dec
loope
out
decb
test
xor
int
enter
outsb
rol
xor
decl
sarl
push
repz
in
daa
xor
cmp
shrl
std
mov
rep
fs
mov
push
adc
aad
sahf
sbb
cmp
pop
pusha
mov
fucom
ja
into
je
push
shl
jno
ss
add
popaw
mov
ds
cmp
sub
movsb
adc
xchg
sbb
cmp
xor
adc
sbb
pop
leave
out
and
add
dec
cli
sbb
inc
les
xchg
xchg
in
sbb
inc
shl
mov
inc
or
pop
rcrl
in
dec
mov
mov
pop
sbb
in
inc
pop
inc
lahf
sar
ret
sbb
jns
sahf
cmp
repz
cmp
shrb
in
in
sub
add
mov
mov
orl
scas
adc
and
out
adc
jg
loopne
leave
movsl
inc
mov
push
enter
mov
hlt
lods
mov
xchg
leave
xor
clc
orb
jge
loopne
je
sbb
scas
push
jbe
add
insb
cmpsb
xchg
fistl
into
and
and
clc
fwait
pop
xor
mov
inc
popa
imul
stos
xor
das
sbb
rcl
or
sahf
inc
arpl
mov
sub
and
incb
push
adc
jmp
lcall
push
nop
push
xlat
jle
mov
mov
adc
pop
dec
ljmp
jmp
sub
and
imul
pushf
pop
cwtl
mov
fistps
in
adc
lock
pushf
loope
push
jle
lahf
mov
stc
idiv
mov
lret
les
push
push
mov
xchg
lcall
xlat
mov
popa
and
adc
mov
push
push
jecxz
jmp
js
jmp
cmp
push
adc
sub
call
sbb
jecxz
dec
cmp
mov
clc
lds
sbb
cmpl
pusha
sub
pop
xchg
push
cmp
in
adc
push
cltd
test
sub
xchg
jl
fsubrp
sbb
add
adc
out
sbb
push
out
xchg
mov
ret
jp
shll
mov
pushf
gs
xchg
mov
and
das
in
rcl
rcrb
popa
xchg
dec
adc
cmpsb
lret
cli
xor
mov
cmp
lcall
jo
xchg
mov
push
xor
and
pop
aad
fiadds
and
imul
sub
mov
dec
int
xchg
std
xor
push
lret
pop
in
clc
add
jnp
xchg
into
pop
fsubrl
test
arpl
fildll
add
dec
mov
lock
push
loope
pop
mov
aam
lock
pop
out
jg
ss
adc
or
mov
imul
mov
or
push
mov
sub
shl
iret
or
stos
bound
or
rcrb
jl
test
idivb
sbb
mov
pop
jbe
cmp
jmp
mov
popa
daa
pop
jmp
icebp
out
mov
pop
inc
lahf
loop
mov
lret
out
xchg
mov
pop
add
js
jns
cmpsl
lret
sbb
adcl
int
mov
std
lret
inc
dec
xlat
cmp
push
push
pusha
mov
negl
or
adc
out
stos
mov
xsaves
cmp
outsl
jp
push
in
pop
or
repnz
cmc
or
sub
jno
jno
pop
or
es
inc
cmp
insl
and
push
dec
iret
adc
dec
scas
addr16
sub
sbb
pop
inc
pushf
add
add
and
ret
cmc
cmpb
jle
add
lods
pop
ret
out
push
ret
mov
pop
jae
and
enter
sub
int
push
scas
xchg
xchg
loop
jg
dec
dec
dec
sbb
mulb
addr16
lods
outsb
and
test
push
sbb
cs
cltd
or
push
out
push
mov
shrl
dec
xor
stc
pop
sub
sbb
inc
xor
mov
and
bound
nop
inc
popf
mov
or
xor
add
sub
adc
sbb
push
mov
inc
popa
scas
lods
adc
push
mov
lds
insb
mov
insb
fsub
and
adc
jecxz
clc
fimuls
cmc
mov
nop
push
xchg
mov
inc
xor
push
aas
mov
mov
inc
and
jg
popa
inc
and
cltd
cwtl
inc
mov
push
fistpl
aaa
pop
in
jmp
or
in
addb
jbe
repnz
cmovno
push
loopne
jno
shlb
jle
sahf
repnz
cmp
jle
xchg
sbb
shll
divb
pusha
sbb
pop
add
outsb
das
movsl
leave
lcall
aad
sarl
popa
pop
push
mov
punpckhdq
xchg
fnsave
loop
dec
sub
lret
into
dec
jno
outsb
pop
pop
bound
or
push
test
andb
or
mov
pop
stos
xor
je
mov
int
xor
or
stos
sbb
aas
sbb
pop
dec
out
daa
add
jle
dec
int3
xor
mov
pop
cmc
sub
mov
dec
sarb
pop
sarl
incb
shrl
sbb
dec
push
aaa
ljmp
ss
sti
lds
mov
cs
outsl
test
rolb
mov
icebp
dec
mov
jmp
dec
jbe
popa
mov
in
enter
mov
iret
mov
add
mov
inc
dec
add
push
xor
mov
mov
push
lret
jge
sbb
sub
push
mov
clc
or
aam
fbld
xor
iret
test
fdivr
jns
push
mov
xor
bound
into
loop
dec
cmp
negb
repz
adc
adc
mov
sub
adc
xor
aaa
test
lock
sub
pushf
jno
push
push
popf
pusha
adc
sahf
nop
scas
mov
fsts
mov
and
adc
mov
stos
cmpsl
loopne
add
mov
movsl
je
sbb
adc
js
popf
xchg
mov
loop
outsl
mov
ja
std
sbb
scas
dec
add
and
push
sub
jb
push
push
dec
pop
or
add
lret
sti
outsb
push
adc
popa
pop
out
test
and
dec
inc
out
xor
imul
cld
push
jb
mov
xchg
scas
das
test
leave
xchg
adc
and
inc
mov
lods
add
out
imul
dec
or
ds
jbe
nop
movsb
dec
sub
or
mov
inc
lcall
push
out
loopne
cli
fs
push
jns
pusha
repnz
push
add
pop
sbb
dec
sub
push
jnp
adc
sub
cld
mov
mov
ja
xchg
inc
mov
add
jge
or
cmp
adcl
pop
mov
inc
movsb
and
stc
lods
in
test
clc
cmc
adc
lret
iret
dec
mov
shlb
xor
incb
cmpsb
push
in
add
jmp
loopne
pusha
iret
dec
mov
jmp
mov
adc
push
sub
in
add
fildl
leave
mov
add
into
outsl
push
adc
mov
jecxz
pop
fldt
imul
push
lock
xor
mov
shll
xor
and
cli
orb
mov
in
sub
shlb
xor
or
loope
sbb
inc
jle
jl
mov
clc
mulb
add
cmp
insl
ss
aaa
ljmp
rclb
divb
sbb
mov
or
in
divb
sbb
testl
xchg
push
ds
in
mov
add
lds
push
nop
icebp
mov
add
xchg
scas
mov
inc
int
cmpsb
ret
inc
or
push
mov
adc
js
frstor
fbld
fistl
call
icebp
sub
cmp
daa
ret
xchg
or
xchg
es
sbb
aas
rclb
jb
gs
lods
xchg
xchg
lret
movsl
stc
sub
cmp
aad
sub
cmp
sub
cmp
jecxz
test
repz
cmp
sub
aad
aaa
inc
iret
push
rcrb
mov
add
notl
jo
out
mull
stos
mov
sahf
int
je
dec
out
cli
inc
push
push
and
imul
imul
lcall
adc
je
dec
push
into
ret
lock
sbb
dec
mov
shrl
mov
cmp
bound
gs
lods
xor
clc
imul
jae
xor
imul
mov
je
jnp
cmp
cmp
pop
mov
sub
popf
iret
testl
int3
jl
push
jo
pushf
pop
shrl
xchg
adc
nop
push
sub
jp
xchg
aas
pop
jle
mov
xchg
fadds
bound
cli
popa
jns
lret
lret
in
xchg
test
mov
pop
push
xor
sub
leave
inc
scas
in
push
outsl
pop
jno
rep
mov
lcall
lahf
imul
rol
jmp
jnp
adc
and
movsb
push
push
and
scas
mov
dec
lcall
outsl
in
test
es
xor
sbb
mov
imul
cmp
fbld
xchg
inc
cmp
clc
xchg
dec
lea
shl
out
mov
aas
and
add
jmp
push
mov
pop
scas
cli
xor
xlat
push
enter
bnd
aam
popa
mov
nop
fstps
inc
push
das
push
inc
add
lret
sbbb
inc
jo
repz
cld
adc
ja
loopne
clc
mov
imul
push
out
fdivs
int
cmp
ljmp
subb
das
aaa
sbb
or
xor
sbb
dec
jb
xchg
shrl
movsb
imul
loop
pop
pop
loopew
fwait
add
aaa
xchg
aaa
sub
test
ds
daa
or
icebp
jmp
sbb
xadd
adc
in
mov
insl
add
fdivp
test
popf
xchg
movsl
inc
mov
incl
lods
cwtl
or
adc
arpl
stc
clc
adc
cmp
dec
stc
mov
sbb
xchg
fwait
lea
test
push
cmpsb
imul
lods
aaa
add
mov
icebp
jmp
sbb
mov
push
iret
adc
lcall
xchg
lds
je
push
fldcw
jnp
xchg
test
cmc
insb
xor
pop
mov
or
add
add
das
out
add
jo
dec
jecxz
movsl
insl
cmp
mov
jmp
cmp
push
sub
adc
iret
imul
cmp
sbb
and
lcall
dec
into
mov
repnz
in
gs
daa
and
cli
sar
add
stos
adc
mov
nop
lcall
cmc
and
lcall
int
jne
mov
aaa
jae
push
fs
in
repz
push
xor
add
out
inc
fsubrs
xchg
lcallw
rcll
ljmp
inc
fiaddl
movsl
insl
and
sbbl
mov
mov
and
or
stos
scas
push
lret
sahf
push
imull
sbbb
loop
call
mov
mov
cmp
xor
sarl
stc
cmp
pop
mov
cmpb
gs
cs
ss
sub
inc
inc
setg
sbb
out
xchg
push
push
rdtsc
js
add
jns
push
pop
fsubl
cmp
mov
cld
adc
mov
adc
mov
xor
fdivrs
inc
lret
fisubl
mov
push
jmp
fwait
push
cmp
fildll
xchg
gs
int
in
mov
pop
lret
jge
pushf
je
divb
fwait
mov
hlt
fldl
adc
xlat
insb
out
push
stos
mov
pop
adc
xchg
cld
movsl
in
cmp
xchg
imul
adc
das
imul
cmp
jp
aad
ror
dec
fcoms
xor
pop
mov
popa
mov
fimull
mov
rolb
mov
cmpl
pop
fisttps
sbb
jnp
fst
push
rorl
xor
sbb
jno
xchg
sbbb
gs
sbb
dec
mov
ficompl
nop
inc
mov
push
push
mov
das
inc
push
or
pop
xchg
push
xor
imul
fnstcw
lcall
xor
xor
enter
int
mov
int
jbe
imul
xor
xchg
mov
dec
inc
pop
insb
fisubl
cli
divl
icebp
mov
pop
inc
cmp
fimull
imul
lea
cmc
mov
rclb
aad
inc
push
enter
out
adc
mov
cltd
stos
or
pop
pop
inc
pop
mov
test
mov
add
gs
rol
pop
add
inc
xchg
jae
dec
xor
sahf
mov
mov
outsb
pushf
push
adc
or
lods
mov
data16
mov
pop
add
jae
test
mov
xchg
cwtl
inc
shlb
mov
mov
iret
enter
inc
jmp
lods
and
dec
loope
mov
mov
test
enter
dec
loop
in
rolb
push
adc
inc
es
stos
inc
sti
dec
stos
out
sbb
jmp
jne
aas
call
add
cmp
icebp
loope
jb
mov
cmc
outsb
hlt
mov
xlat
sub
pop
pop
push
cmp
sub
sbb
movsb
pop
mov
push
mov
popf
test
mov
and
mov
fimuls
into
xchg
push
add
js
cs
mov
fidivrl
sti
pop
push
and
jb
push
inc
adc
fucomp
popl
pop
mov
xor
push
stc
cli
lcall
pop
pop
outsl
push
adc
loopne
repnz
dec
test
lahf
xor
fnstsw
mov
or
xor
mov
adc
cmp
mulb
jo
mov
and
repnz
std
mov
mov
stc
andl
inc
in
test
aad
sbb
gs
cmpsb
mov
imul
adc
or
sub
inc
cmpb
adc
mov
fsubs
int
sub
cld
lret
shrl
out
xor
testb
repz
daa
scas
jno
sbb
sti
mov
cld
ficomps
push
nop
test
and
fisttpl
and
cli
popf
sbb
xchg
and
pop
xchg
xor
lods
and
mov
clc
lds
push
cmp
les
mov
mov
sahf
cmpb
mov
aam
jbe
outsl
dec
test
fwait
mov
inc
ljmp
jo
mov
mov
jns
jmp
and
jns
fdiv
cmp
rcll
test
inc
test
test
in
and
cmp
mov
pop
pop
jo
jecxz
stc
out
jge
data16
leave
xor
xor
enter
popf
jmp
pop
repnz
jg
add
push
mov
call
scas
cmp
ficompl
movsb
mov
add
cmp
icebp
adc
push
jns
mov
lods
mov
loope
call
cmp
cmp
jmp
pop
iret
sti
out
daa
push
loopne
call
and
xchg
adc
cmp
jbe
jbe
xor
out
mov
sarb
dec
adc
ret
popl
subl
jecxz
lcall
jo
mov
mov
pop
push
xor
mov
out
dec
in
add
fs
jbe
and
push
pop
lahf
addb
inc
rol
jbe
mov
push
adc
negl
data16
imul
stc
sbb
add
pop
xchg
lahf
cmp
cmp
leave
mov
sbb
sbb
sbbb
add
pop
sbb
pop
out
mov
sbbl
push
fistpll
mov
add
add
into
inc
rolb
sub
out
insb
lea
mov
sbb
popa
imul
outsb
test
adc
add
daa
js
fisttpl
aas
jmp
dec
or
mov
popa
orb
pop
std
notl
cmp
leave
les
out
add
lods
ja
rcrl
push
rclb
adc
sbb
sbb
add
xchg
call
add
lock
adc
loopne
xchg
or
jl
je
clc
inc
mov
mov
xor
xchg
ret
cmp
out
das
in
in
jmp
subl
fsubrl
inc
ret
push
adc
xor
mov
call
cs
test
imul
push
cltd
jae
mov
repz
dec
outsb
sbb
mov
imul
shlb
daa
push
pusha
push
shlb
in
mov
jne
or
iret
sub
xchg
pop
sub
mov
push
jb
les
xor
sbb
mov
es
mov
fcmovu
sbb
inc
add
js
cmp
mov
inc
cmp
push
and
push
inc
adc
add
int3
fwait
cmpsb
dec
mov
and
imul
repz
mov
xchg
jl
pop
pop
loopne
cmp
je
mov
enter
or
call
mov
inc
pop
or
add
sub
das
stos
jp
dec
sub
jmp
lea
stos
mov
unpcklps
loop
push
outsb
push
mov
or
mov
push
clc
movsb
push
pop
pop
in
sbb
cmpsl
mov
xchg
xlat
sarl
jge
sbb
cmpb
fistps
pop
mov
cmp
and
jg
arpl
stc
out
daa
imul
je
cltd
popa
popa
jle
rcl
fidivl
pop
mov
lds
push
xchg
loop
imul
push
xchg
jbe
dec
rorb
adc
call
inc
lods
repnz
mov
lods
insb
icebp
and
rcll
es
leave
movsb
adc
mov
fxch
sub
push
mov
jle
adc
scas
scas
or
into
addb
push
or
aas
std
sbb
cmp
aam
out
call
fwait
or
jb
stos
minps
push
mov
inc
cs
je
std
into
jae
in
js
adc
out
int3
jne
ss
je
ljmp
imul
in
sub
shl
bound
clc
ja
std
dec
data16
hlt
sahf
mov
jle
loop
xor
xor
sarl
lret
or
mul
aas
mov
mov
mov
sbb
test
or
adc
mov
mov
xchg
gs
and
inc
clc
sete
jmp
pop
leave
push
xchg
inc
lds
sbb
into
pop
jg
cmp
xchg
inc
cmp
add
xchg
jmp
push
rorl
enter
hlt
addr16
test
shlb
mov
movsl
cli
mov
adc
call
dec
test
popf
adc
pop
jae
pop
push
clc
enter
mov
nop
fdivr
stos
lock
pop
das
adcb
ja
sbb
mov
lret
lahf
inc
xchg
roll
fldenv
mov
xchg
jae
aad
call
aas
jecxz
lret
mov
sbb
adc
lock
xor
std
inc
out
loope
jmp
inc
pop
mov
mov
pusha
sbb
push
xlat
xchg
leave
out
mov
push
xor
jne
adc
or
sbb
fucomip
out
in
int3
loope
lods
movsl
push
mov
or
stc
call
or
ja
inc
imul
icebp
xor
cld
int
popa
xchg
lods
add
sarb
cmp
jmp
addr16
pop
or
xchg
sub
sub
mov
push
in
jmp
cmp
gs
ljmp
mov
and
dec
jp
scas
js
adc
ret
and
add
mov
mov
xchg
ljmp
pop
xor
mov
sub
jae
xchg
push
into
sub
pop
aam
adcb
or
jno
dec
lods
xchg
cmp
mov
sbb
test
inc
lcall
cli
leave
jo
dec
mov
sbb
popf
sub
aaa
push
imul
adc
push
inc
loopne
scas
xor
inc
xor
or
movsb
nop
xchg
out
pop
jg
nop
lds
mov
jns
loope
mov
xor
add
xchg
mov
mov
divb
out
jecxz
mov
or
insb
cli
stc
arpl
sub
fwait
xor
mov
das
xor
push
shll
je
pop
aad
arpl
xor
lea
mov
jecxz,pt
cmp
insl
mov
cmp
aam
cmc
imul
adc
mov
mov
jecxz
sub
leave
dec
clc
or
loop
ljmp
dec
and
shrb
rcll
es
sub
push
add
add
fs
push
mov
insl
lcall
clc
inc
outsl
scas
add
shlb
out
out
or
js
call
xchg
adc
ja
adc
bound
imul
pushf
and
addr16
lret
loop
jp
xchg
adc
sub
push
in
icebp
icebp
scas
jg
int3
loop
push
add
dec
repnz
aas
add
mov
cli
xchg
mov
scas
ljmp
loop
jno
push
jle
fwait
push
pusha
cmc
aas
sahf
aaa
sti
push
test
ja
pop
imul
inc
arpl
mov
push
scas
mov
std
inc
scas
ja
daa
popf
out
mov
repnz
and
xchg
inc
jns
lods
ljmp
mov
fwait
adc
lret
mov
lock
mov
add
jns
pop
inc
sbb
jmp
mov
dec
xchg
xor
pop
in
fadd
rep
or
cltd
inc
rorl
pop
or
adc
bound
jecxz
sbb
pop
or
movsb
sub
dec
fcomps
into
lret
lds
mov
scas
mov
in
push
push
jno
fsub
int3
test
fwait
mov
cmpsl
cmp
xor
jo
pop
js
repz
xor
xor
pop
sahf
in
mov
mov
cmp
nop
clc
inc
mov
repnz
push
sub
add
sarl
push
lcall
lea
cmp
adc
adc
add
stos
mov
lcall
ds
xor
push
iret
sbb
les
dec
lret
jnp
or
jmp
pop
lcall
sub
xor
arpl
xchg
test
adc
jmp
cli
jae
xor
ljmp
pop
sahf
mov
mov
in
lret
or
loop
jmp
nop
das
shl
fcoms
push
mov
nop
sbb
mov
fldt
adc
cmp
sti
movsl
and
add
mov
pushf
bound
in
xlat
das
movsb
push
adc
sub
pop
jle
mov
arpl
push
and
pushf
push
sbb
cld
cmpsb
outsl
popf
dec
mov
pushl
push
sub
jle
pop
adc
icebp
add
pop
sti
cli
sub
mov
rcll
adc
push
scas
jg
test
pop
pusha
push
dec
icebp
jb
push
inc
mov
into
and
pop
dec
dec
ficoms
sahf
loopne
pusha
fsts
mov
lahf
sub
in
or
push
cmpsb
and
mov
mov
in
push
dec
pop
mov
lods
shrl
mov
rclb
push
call
leave
push
pop
dec
mov
sbb
jnp
movsl
xor
sbb
sbb
addb
jnp
xor
lret
xchg
mov
mov
popf
loop
fwait
arpl
inc
cmp
shrb
or
in
sub
pop
outsb
cmp
push
in
fisttpll
xchg
adc
cmpsb
jo
inc
push
pusha
mov
inc
fxch
pop
add
and
nop
or
gs
mov
adc
jae
cmpl
xchg
jbe
sub
mov
sub
je
loopne
jae
inc
and
mov
std
dec
xchg
adc
std
mov
dec
lock
aad
in
adc
xchg
xchg
jb
mov
int
jno
mov
or
and
jecxz
or
aaa
loope
clc
pop
inc
stos
divl
mov
ja
test
test
test
clc
or
js
sub
and
stos
clc
sub
cwtl
rcll
pop
decl
loopne
jge
and
jl
aam
mov
enter
sub
xchg
adc
or
dec
sbb
push
mov
fwait
cmp
pop
iret
jl
pusha
inc
xor
jns
push
je
scas
push
ret
adc
int
jge
xor
shl
imul
cmp
cmp
stos
push
imul
icebp
into
and
lcall
inc
enter
push
xchg
sar
cmp
icebp
aaa
xor
les
jecxz
cmp
movsb
movsl
xor
mov
data16
add
adc
leave
les
mov
inc
mov
mov
ret
xchg
lret
inc
jno
imul
cld
adc
fidivrl
jnp
sbb
inc
cmpsl
jmp
movsb
inc
rolb
shll
push
pusha
sbb
clc
push
lcall
sbb
xchg
ret
xor
sub
sub
test
pop
outsl
insl
xchg
out
jb
ret
pop
push
outsl
aad
cmp
pop
test
jecxz
push
lea
jge
vcvtdq2ps
loopne
adcl
sar
cltd
arpl
or
iret
push
add
imul
testb
sbb
shr
call
push
lds
mov
xchg
sbb
movsl
mov
js
lds
xchg
mov
int3
dec
fidivrl
fistpll
outsl
push
push
cld
or
pop
cmp
sbb
jae
divb
and
cmp
dec
and
ljmp
sbb
xchg
mull
push
jecxz
add
pop
sbb
clc
cli
inc
dec
cmpb
inc
div
fidivl
inc
rolb
out
pop
or
jb
shll
insb
push
ja
fbld
int3
in
sti
sbb
in
lods
xor
je
das
xchg
lcall
lock
mov
enter
jle
mov
scas
nop
fwait
pop
jno
add
pop
lahf
mov
movsl
jns
fnclex
push
aaa
sub
stc
or
jae
gs
mov
sti
xchg
push
lcall
mov
cmpsb
xchg
cwtl
jne
test
mov
sahf
sub
testb
xchg
xchg
repz
sub
dec
xor
das
mov
mov
in
ja
adc
sbb
popa
jge
loop
fs
and
frstor
pop
in
xor
push
pushf
outsl
dec
cmp
mov
xchg
lahf
sbb
outsb
ud0
mov
cmpsl
add
test
enter
jmp
dec
shll
sbb
movl
fwait
repz
fwait
push
mov
filds
jb
pop
test
lods
imul
insb
outsl
sub
js
in
xor
xchg
roll
jne
aas
leave
lods
test
arpl
jmp
pop
sbb
iret
jp
mov
jmp
add
mov
xchg
or
xchg
fstps
pop
shl
into
sbbb
enter
das
fsub
push
and
icebp
pop
addb
and
sti
push
sub
jns
mov
imul
cwtl
add
insl
cld
or
pop
adc
adc
ss
mov
pushf
xchg
fldt
jne
lods
mov
dec
imull
std
sbb
icebp
cli
inc
pop
sub
cmp
mov
xchg
or
adc
sbb
andb
xchg
push
lret
pop
insb
mov
daa
je
loope
adc
sub
pop
sbb
enter
std
in
and
inc
or
fnsave
adc
add
sbb
xchg
clc
or
add
mov
add
mov
int3
dec
dec
dec
inc
adc
sub
shrb
and
insb
stos
cmp
repnz
push
cld
fcoml
xor
xor
xorb
inc
fidivrs
cmp
fmul
outsl
je
loope
sbb
add
insl
cmp
or
pop
jge
in
test
pop
pop
add
dec
pop
movsl
dec
jecxz
stos
adc
sbb
push
leave
inc
add
lahf
adc
xor
scas
xchg
jae
lock
test
sub
xor
iret
rol
push
rcrb
into
sub
fs
jmp
stos
lcall
xchg
cli
or
int
rcl
gs
push
push
mov
cmc
cmc
lods
and
popa
sbb
repnz
idiv
xchg
cmc
das
pop
xor
push
inc
clc
cmp
in
dec
xchg
mov
lds
decl
inc
dec
xor
or
xor
xor
add
inc
test
int3
nop
outsb
inc
outsl
shr
or
iret
dec
aad
bt
imul
xchg
ss
rcrb
movb
lea
fs
or
popa
add
and
fists
inc
jbe
and
inc
mov
dec
cmp
push
in
outsl
xchg
dec
fisttpll
mov
xlat
dec
shrb
jo
mov
stos
pop
jp
jnp
inc
mov
mov
sti
pushf
jno
lret
inc
pop
pop
addl
sbb
sbb
jg
cmp
inc
push
adc
or
rcr
push
insb
adc
push
xor
ljmp
pop
ds
mov
push
push
cmp
mov
daa
lea
mov
enter
fstps
and
pop
sbb
jmp
inc
dec
sub
lds
add
lea
mov
adcl
cli
mov
mov
repz
pushf
ljmp
dec
dec
sub
inc
ret
cmp
ffree
daa
cltd
inc
ja
sub
js
jle
mov
push
add
mul
lahf
aad
dec
push
bound
inc
xchg
out
call
cld
ja
jp
jl
mov
divl
mov
adc
xor
leave
movsl
mov
or
data16
dec
push
leave
scas
mov
mov
xor
sbb
pop
jmp
or
outsl
and
andb
pop
loope
add
sbb
push
adc
xchg
dec
or
and
jae
orb
sar
xchg
nop
stos
sbb
sub
xor
add
mov
pop
cli
cmc
pop
mov
cmc
outsb
loop
cmpsl
pop
pop
xchg
sbb
sti
inc
add
rcll
ljmp
sub
xorb
stc
jmp
lcall
scas
imul
addr16
jmp
mov
dec
mov
out
sub
cmp
xor
adc
dec
inc
sub
push
dec
out
dec
lock
fcoml
mov
mov
and
popf
test
sti
dec
xchg
adc
or
adc
push
jo
test
int3
js
andb
jb
adc
push
mov
mov
mov
push
call
push
sahf
xor
scas
jo
jnp
ret
and
sahf
cli
mov
pusha
jp
pop
xchg
popa
dec
hlt
xor
repz
stc
jne
fsubs
adc
outsl
inc
mov
mov
fistpl
cmp
xchg
gs
inc
xchg
xchg
push
leave
in
pusha
xchg
rcrl
fldcw
lea
xchg
mov
xchg
jns
data16
fstpt
lcall
fbld
push
out
or
nop
ja
ret
pop
fiadds
divb
ljmp
jbe
in
shlb
mov
mov
pop
lds
ljmp
fwait
imulb
push
loopne
ljmp
add
adc
push
dec
out
loopne
add
push
mov
and
orl
stc
push
sub
ds
bound
loop
nop
sub
mov
inc
mov
test
out
mov
sbb
out
and
mov
push
in
sti
int
mov
or
sbb
mov
in
scas
in
mov
dec
pop
enter
add
repz
or
fnstenv
fcmovnb
or
mov
ret
mov
out
cmpsl
stos
push
test
cltd
jbe
sub
xor
cmp
sub
fidivrs
jbe
int
add
jl
cmp
jae
ja
sub
or
dec
test
mov
aas
add
and
dec
jnp
jp
fimull
nop
mov
or
jns
mov
popf
clc
scas
cmp
adc
das
and
xchg
inc
cmp
clc
pop
push
loope
add
cld
stos
shll
lret
fcmovbe
int
or
sub
and
pop
sbb
mov
icebp
rcrl
ret
sub
cmp
dec
fucom
insb
aam
or
adc
test
arpl
sbb
mov
dec
xchg
data16
out
jmp
push
daa
mov
xchg
jno
test
mov
mov
int
mov
stos
mov
sub
sbbb
sbb
sub
sub
dec
dec
mov
mov
cmp
in
ret
data16
pop
sahf
mov
aad
mov
mov
jmp
inc
lret
nop
jo
sbb
imul
out
push
inc
sub
rcrb
int3
jb
add
lahf
roll
pop
les
cs
ret
jle
inc
mov
in
mov
mov
jg
clc
push
mov
push
adc
inc
inc
fcmovnbe
sbb
push
adc
sub
iret
inc
clc
out
ljmp
mov
nop
xchg
xor
gs
jp
xor
sub
lahf
inc
xchg
jle
in
out
jmp
repz
inc
jecxz
push
mov
into
fiadds
mov
fisttps
cmp
lahf
int
lret
out
mov
mov
js
pop
dec
mov
xchg
imul
mov
xchg
push
pop
pushf
jp
imul
jno
rorb
loop
sbb
sbb
int3
add
cmp
and
mov
rcll
test
out
dec
and
push
fdivr
xor
add
ret
dec
iret
shll
mov
sbbl
inc
test
addr16
mov
lret
or
outsl
dec
lea
xor
out
mov
xchg
fdivr
or
icebp
jl
pop
or
outsl
inc
rcrl
stos
jle
fadds
lret
scas
push
add
iret
sbb
push
adc
out
out
sub
fstps
cmp
mov
mov
xor
add
jb
mov
mov
mov
movnti
rcll
xchg
popf
stos
sub
mov
and
sub
xchg
setbe
fiaddl
bound
xchg
inc
faddl
test
mov
sub
xchg
xor
fldl
adc
dec
or
mov
jge
sbb
inc
mov
sub
jecxz,pt
int
fdivl
inc
pop
in
sahf
inc
jle
hlt
inc
data16
int3
sbb
and
pop
xor
and
cmp
inc
push
pop
popf
aam
mov
inc
adc
push
or
fmuls
xor
test
jo
ret
inc
int3
cmpsb
or
sbb
rcrl
addr16
das
or
cmpsb
xor
cwtl
add
lds
add
dec
adc
pusha
pushw
int3
sahf
stos
cmpsb
roll
jbe
xor
inc
jne
mov
xchg
jno
addl
xchg
sarl
or
lea
add
mov
mov
fsubp
test
subb
cmp
sub
jnp
jle
xor
xchg
xor
sub
push
cmp
pop
adc
inc
inc
mov
lock
adc
ja
xchg
clc
int
mov
sti
push
movsl
push
push
enter
cmp
mov
cmc
mov
insb
iret
xchg
in
xorb
sub
mov
pop
fstpt
add
jb
mov
push
pusha
mov
lret
and
jle
cmpsl
lcall
cmp
or
dec
add
popl
inc
push
js
popf
pushf
test
iret
mov
addr16
out
mov
add
or
sub
cs
mov
aad
decb
mov
inc
subb
cmp
cmp
adc
jg
jg
mov
mov
jnp
inc
mov
mov
add
mov
sub
inc
xlat
es
outsb
pop
das
ret
mov
test
xlat
mov
push
and
and
fs
xchg
ljmp
push
pop
mov
stc
cld
mov
push
repz
xor
sahf
inc
scas
lret
fsts
xlat
das
pop
rcrl
mov
iret
fs
ds
aam
inc
or
dec
inc
pushf
adc
lods
inc
sub
out
nop
xor
sbb
cmp
loope
or
add
popf
jmp
pop
jno
adc
mov
mov
and
lods
push
sahf
jb
or
jo
mov
jo
adc
test
in
outsl
call
loope
lea
xchg
jge
xchg
jl
in
inc
xchg
loope
loopne
xlat
sbb
jg
sbb
inc
test
das
mov
dec
test
pop
cmpsl
imul
lcall
mov
or
gs
sahf
out
inc
inc
mov
inc
mov
pushf
pop
clc
inc
arpl
arpl
pop
mov
cmp
dec
adc
not
dec
push
lret
iret
mov
jle
or
shll
pop
rolb
push
or
cld
jle
imul
shlb
adc
add
mov
adc
inc
scas
dec
aaa
ds
xor
cmp
mov
fdivl
test
fists
push
xor
int3
and
popw
test
xor
ret
lcall
jge
mov
mov
push
mov
stos
pop
cvtdq2ps
rcll
outsb
aas
dec
outsb
rcl
sub
jb
or
std
sub
inc
pmaxsw
aad
xor
inc
scas
xor
add
pop
lods
push
inc
pop
out
imul
out
adc
mov
pop
lret
add
nop
scas
cmp
sar
pop
add
test
rclb
sub
add
jp
test
aam
pop
mov
dec
mov
lcall
cmp
mov
ficoml
sub
inc
addb
or
rorl
scas
xor
scas
and
fdivrl
into
cmpb
and
inc
or
pop
xor
mov
lock
push
mov
inc
mov
mov
jae
hlt
mov
mov
sub
js
int
pop
in
push
shll
ret
flds
jle
xor
in
shrl
je
pop
negb
js
cmp
nop
repnz
imul
cltd
fldt
sbb
xor
bound
push
shl
jg
dec
dec
gs
push
xchg
mov
cmp
and
push
xchg
xor
cmp
pop
je,pn
push
add
jg
add
inc
inc
or
out
cmp
lds
std
std
insl
xchg
mov
mov
lcall
leave
ret
sbb
dec
dec
aas
add
frstor
add
xchg
adc
in
inc
int
rcl
jno
mov
sahf
inc
cmp
das
aam
lds
sub
xchg
ret
xor
mov
clc
mov
mov
adc
aad
cmp
xchg
fwait
rclb
dec
rol
inc
pop
bound
and
mov
fisubl
sub
adc
inc
or
idivb
jg
inc
lds
mov
imul
lods
add
add
in
sub
sub
jo
movsl
mov
xchg
pop
add
pop
loop,pt
lods
decl
clc
dec
mov
iret
mov
daa
cwtl
into
jg
js
dec
sbb
repz
cmp
xor
cmp
test
ds
xchg
sub
cld
mov
or
push
testb
dec
js
mov
outsb
imul
aad
inc
inc
gs
sub
adc
mov
xchg
in
mov
test
xchg
std
push
jp
mov
mov
push
insl
mov
xchg
push
cmpsb
mov
push
xchg
jno
mov
and
repnz
fisubrs
gs
inc
ret
and
divl
mov
add
sbb
inc
dec
push
sbb
inc
mov
or
jae
mov
push
push
xchg
ja
mov
mov
pusha
xorl
adc
dec
insb
mov
leavew
lock
mov
mov
cmp
cwtl
push
dec
scas
pushf
mov
jge
dec
dec
dec
and
repz
fstpl
mov
and
jb
test
cmpsb
ret
xchg
jns
sub
int
mov
sbb
and
sub
je
pop
add
cmp
xchg
sub
sbb
sub
movsl
jbe
pop
xchg
jns
inc
adc
lret
aas
idivl
repnz
xor
int3
mov
push
push
roll
mov
gs
cmpsl
test
fidivl
cld
jp
jp
push
stos
mov
inc
fldcw
enter
mov
shrb
sbb
test
xor
flds
out
lds
pushf
and
das
addr16
fs
clc
sbb
jg
cltd
decb
pop
mov
mov
xchg
pop
mov
int3
or
and
xchg
aaa
mov
outsl
push
lock
nop
lahf
fisttpl
ret
adc
fucomp
std
lods
out
test
mov
scas
mov
or
into
nop
add
lds
leave
je
ss
outsl
cmp
jl
inc
or
jnp
jbe
mov
cmp
adc
andl
or
lea
and
push
insl
std
insl
add
repnz
fbld
sub
cmp
aam
xchg
sbb
push
xchg
int3
inc
fcom
ret
jns
xor
sbbl
add
ds
sahf
mov
bound
add
popa
cwtl
loope
fstpl
es
push
in
xor
inc
adc
fwait
scas
cld
lock
sub
cli
or
jmp
roll
cmc
pop
adc
negl
mov
mov
mov
and
stos
sahf
push
in
inc
mov
mov
fdivs
jecxz
ret
jg
out
stos
movsb
nop
fldcw
or
and
lret
movsb
inc
outsl
jg
stc
lods
std
dec
icebp
or
pushf
add
stos
les
pop
jae
push
out
inc
cli
and
repnz
xchg
test
pop
push
sub
loopne
cs
cmpsb
dec
test
dec
cmp
andb
jl
repnz
pop
imul
lods
mov
xor
popf
ss
dec
add
xchg
loop
jae
aam
lahf
lock
cmpsb
movsl
lcall
fdivrp
and
mov
sti
xrelease
xchg
xchg
cmp
push
dec
dec
ret
testl
cli
insb
xchg
out
rcrb
outsl
pop
jo
sbbb
das
or
xor
or
cmpsl
jne
mov
cmp
and
jo
jbe
out
or
bound
adc
xchg
es
xor
sub
movsb
outsb
repnz
jmp
push
insl
lcall
bnd
fsubs
cmc
dec
jg
pushf
scas
jnp
add
rorb
push
inc
or
xlat
das
int
sbb
jmp
aaa
jno
clc
repnz
cld
movsb
loop
lods
out
adc
stos
or
test
xor
fdivrl
bound
mov
and
lahf
into
orb
cwtl
push
jmp
or
inc
pop
push
loopne
fwait
lret
mov
or
aas
inc
js
insl
push
mov
cmp
mov
adc
movsb
sub
and
ss
fstpl
cmp
push
mov
add
mov
cmp
stc
repz
jmp
push
jb
nop
std
and
pop
gs
jg
aad
sub
xchg
mov
xor
sti
adc
sbb
in
pop
gs
add
insb
insb
push
cltd
stos
cli
fwait
mov
or
stos
xor
in
or
outsb
std
les
or
push
faddl
cmp
scas
loop
out
cli
test
mov
inc
dec
rcll
xor
ds
call
adc
mov
out
sub
pop
int
xchg
dec
inc
in
mov
jns
pushl
rorl
fidivs
jae
sub
lret
arpl
pop
xchg
mov
fucom
idivl
daa
sar
and
divl
cmp
pop
aad
ror
jo
dec
testb
lcall
test
sti
into
lcall
pop
dec
or
aaa
adc
mov
cwtl
out
out
cmpsl
orb
enter
fildll
pop
cli
stc
clc
or
cmp
pop
pop
daa
nop
pop
pop
out
incb
jecxz
dec
mov
xchg
push
pop
clc
movsl
dec
sbb
int3
lahf
mov
sub
cld
or
dec
test
pop
mov
xorl
mov
inc
mov
pop
mov
sahf
mov
mov
rep
addr16
jmp
lret
repnz
jbe
jecxz
xor
adc
pop
cmp
push
push
mov
in
push
mov
pusha
lret
jge
testl
adc
xor
sbb
pop
int
mov
shrl
aas
mov
push
test
inc
push
jmp
xchg
les
sti
cmp
fwait
shlb
cmp
xchg
push
and
or
mov
stos
lret
or
push
pop
push
push
pop
push
movsl
xchg
and
insb
in
inc
jecxz
adc
lea
rolb
lret
xor
lock
imul
xlat
aam
jno
add
lds
inc
movsl
int3
dec
and
jae
aad
mov
dec
xchg
pusha
mov
lahf
test
outsl
push
pop
in
mov
dec
dec
mov
test
leave
cmc
adc
add
add
dec
mov
sbb
ret
mov
arpl
fabs
ss
or
out
sbb
mov
rorl
mov
jge
add
jg
push
dec
fs
in
adc
mul
mov
mov
dec
fdivrs
fisubl
arpl
sub
fwait
mov
jl
inc
adc
inc
adc
mov
xor
mov
xor
dec
mov
scas
mov
js
je
mov
sbb
bound
dec
out
mov
orl
xlat
add
jle
pop
or
scas
sbb
cmpsl
insl
xlat
dec
cld
ss
mov
jae
mov
cmp
loope
push
movsb
cmpsb
iret
fldl
movsb
xchg
test
mov
cmp
add
jge
cmp
test
cwtl
pop
jnp
inc
fcoms
mov
mov
clc
icebp
inc
push
in
push
pushf
outsl
gs
and
xor
xor
imul
adc
andl
enter
inc
in
add
jp
sbb
xchg
push
xchg
adc
inc
push
add
lcall
sub
mov
xchg
add
or
fcompl
loop
inc
and
sub
lea
fbld
push
mov
jmp
push
les
add
popa
leave
jecxz
scas
mov
stos
or
sub
and
and
or
add
stos
lods
push
leave
push
and
pop
mov
xor
push
pop
mov
dec
sbb
jb
jb
or
movsb
inc
push
or
js
stos
movsl
outsl
ds
push
ljmp
mov
xor
test
adc
test
test
cmpl
hlt
cmp
and
jae
adc
sahf
aas
adc
inc
lcall
mov
ja
sbb
pushf
sbb
addr16
sub
jmp
daa
fstl
fistps
push
lods
push
pop
mov
sub
je
mov
call
jge
in
cmc
mov
sbb
add
sub
mov
jnp
sub
dec
sbb
jge
pop
popa
cmp
aas
fadd
jle
xchg
inc
push
cmpsl
idivb
idiv
jg
sbb
aad
ficoms
pusha
nop
imul
dec
repnz
stos
jl
and
cmpsb
test
ds
mov
dec
and
push
mov
fs
dec
jbe
adc
or
pop
xchg
add
dec
stos
mov
gs
pop
jp
rorb
out
lds
sbb
adc
xor
cwtl
mov
jmp
pop
sub
sub
push
xchg
push
dec
add
imul
jb
mov
je
loopne
xchg
mov
lcall
xchg
mov
dec
hlt
popa
push
cmp
fsubr
xor
lea
cmp
adc
and
xchg
fmul
fwait
xor
jl
mov
dec
mov
stc
sub
je
aas
mov
ret
test
add
clc
add
xor
sub
push
push
cmpsl
dec
pop
aas
flds
out
jne
jp
xchg
rcll
pop
mov
xchg
or
add
ret
pusha
push
pop
ja
aam
dec
insb
lcall
popfw
push
mov
mov
or
cltd
es
jecxz
xor
mov
aad
lahf
add
sub
outsl
ret
ja
pop
push
and
sub
mov
jmp
orl
mov
mov
fdivrl
lret
xchg
xor
add
cmp
adcl
mov
xchg
jnp
add
add
inc
cmc
ljmp
mov
ret
xor
sub
aam
mov
or
je
push
enter
pop
dec
and
pusha
aad
mov
das
popf
icebp
ret
shlb
popa
push
pop
mov
xchg
out
dec
je
push
lret
dec
push
cld
js
mov
mov
sar
jg
insb
xor
sbb
mov
pop
fnstenv
inc
mov
das
gs
scas
cmp
sar
aad
push
ljmp
cmp
stc
ds
out
pop
std
stos
clc
sbb
mov
frstor
and
popf
inc
test
in
sub
mov
in
sub
icebp
mov
pop
scas
loop
mov
jle
push
jno
lods
sub
inc
test
ja
icebp
icebp
or
adc
push
aad
fdivrl
mov
icebp
addr16
jge
clc
js
cmc
mov
fwait
adc
push
mov
call
sub
dec
aaa
cmp
pop
out
jns
aam
loopne
inc
ficoml
mov
sub
mov
js
shlb
or
hlt
and
mov
stos
sahf
fisttpll
add
lods
push
adc
out
test
pusha
popa
or
inc
xlat
shr
pop
xchg
fs
shlb
push
shl
sti
push
adc
outsl
adc
mov
ret
cwtl
mov
cli
lods
mov
mov
test
je
jnp
add
test
push
repz
leave
and
in
mov
xchg
lds
push
jmp
cmp
xchg
lods
push
popa
jmp
fimull
jne,pt
and
sbb
sub
inc
add
insl
shl
xchg
cmpsl
pop
push
sub
js
cltd
push
lret
cmp
stos
mov
cmp
lods
or
cmpb
ljmp
test
push
and
loop
jp
rolb
inc
call
jge
fs
pop
inc
ja
and
mov
mov
jp
fisttpll
adc
or
test
add
loopne
mov
movsb
and
dec
shlb
repnz
push
adc
std
xor
mov
stc
sarb
call
adc
rorb
mov
and
loopew
lret
sbb
sub
mov
fmulp
or
cli
rorb
dec
jecxz
fadds
add
mov
mov
pop
aaa
ljmp
lods
outsb
mov
lahf
mov
fadds
lods
adc
sub
es
icebp
adc
cmp
sahf
test
and
push
pusha
int
aaa
cli
aas
jle
das
xor
fdivl
out
mov
lods
in
jns
sbb
cmpsb
inc
jbe
cld
clc
std
fsts
nop
rorb
or
ljmp
push
leave
sub
insl
mov
xor
sti
xchg
cmp
flds
or
mov
and
mov
or
je
fwait
je
dec
add
outsl
fidivrs
fsts
and
jno
jb
or
inc
mov
in
test
inc
xchg
out
incl
xor
mov
arpl
mov
mov
inc
mov
lahf
inc
jae
cmpb
stos
push
outsl
or
pusha
pop
xchg
int
negl
aas
dec
sub
repz
mov
in
andl
pop
or
cs
lret
mov
inc
pop
sbb
jp
jl
push
jmp
cmp
rcrl
imul
or
mov
inc
stos
xchg
push
sbb
add
xlat
pop
dec
inc
cmp
sbb
cs
xor
adc
mov
popf
mov
and
mov
push
das
fwait
out
push
inc
adc
mov
leave
inc
xchg
and
jp
aam
push
hlt
out
mov
vmwrite
das
addr16
and
mov
shrl
out
and
xor
xor
jns
cltd
imul
lcall
add
enter
cmp
or
fwait
dec
sbb
inc
or
nop
inc
sbb
add
ret
stc
aaa
mov
jmp
xchg
icebp
adc
jne
cmpsl
jne
cmp
adc
pop
adc
pop
dec
cwtl
outsb
dec
sbb
adc
ret
pop
pop
cmp
in
jg
das
mov
cmpsb
sub
mov
and
xor
jp
jnp
or
sbb
shrl
xchg
adcl
mov
mov
ja
pop
cmp
sub
lcall
insl
push
sarb
fwait
xor
pop
jl
pop
jge
fwait
push
pop
jmp
mov
adc
and
jle
test
icebp
call
clc
decl
mov
sarl
and
into
jbe
test
imul
jnp
loopne
nop
add
or
dec
lcall
sub
jnp
fimull
xchg
pop
lret
or
stos
push
mov
fmuls
push
add
fistpl
mov
mov
xor
push
mov
data16
sbb
push
cmp
addr16
roll
mov
dec
dec
cmp
popf
fsubrp
in
scas
outsl
cmp
in
out
sbb
mov
cmp
and
loopne
test
outsb
shrb
stos
andb
dec
icebp
add
repnz
cmp
mov
pop
adc
les
dec
js
mov
in
fnstcw
movsl
pop
mov
mov
adcl
and
sar
sub
xchg
jle
sub
fsubs
fs
adc
imul
jle
loopne
out
xor
icebp
movsb
in
cmpsb
shr
or
push
jle
fs
or
mov
mov
and
inc
sub
cmovnp
arpl
sbb
mov
aad
testb
int
pusha
push
adc
fucomip
and
inc
rcrl
loope
mov
int3
xchg
sbb
mov
lds
sahf
sahf
out
push
lds
dec
nop
sbb
dec
pop
rolb
and
fwait
mov
inc
rorb
lods
cmpsb
repz
jg
jae
fs
jmp
xchg
js
mov
mov
pmaddwd
and
mov
imul
shrb
mov
sub
xchg
xor
mov
cmpsl
ret
stos
push
cmp
outsb
add
dec
add
mov
push
or
inc
addb
icebp
lock
jecxz
ja
mov
lods
scas
filds
lcall
cmpsb
xor
mov
push
mov
dec
inc
out
push
push
add
dec
cmp
xor
push
outsl
dec
mov
push
fdivrl
xchg
int3
and
adc
cmp
xchg
adc
aas
dec
cmpsb
jno
mov
adc
mull
imul
lock
inc
mov
mov
je
sarl
pop
sbb
in
xchg
xor
cld
into
adc
inc
lahf
xchg
jns
xchg
xor
nop
ss
xchg
shrb
sbb
lods
ja
outsb
adc
xchg
cmp
clc
cmp
int
imul
rol
out
xorb
scas
stos
daa
pop
pusha
aaa
add
cs
data16
pand
stos
lret
rorl
das
sbb
ss
mov
push
pop
popa
in
dec
mov
and
dec
mov
lret
mov
jbe
out
mov
out
ljmp
adc
mov
mov
mov
dec
outsb
pusha
pushf
loopne
cmpsb
inc
lods
popa
stos
inc
pop
aaa
shlb
inc
test
outsl
cmp
lds
push
mov
sub
rcrl
mov
sbb
or
iret
adcl
inc
sbb
and
jb
push
mov
push
inc
jmp
dec
roll
js
cld
mov
aas
enter
and
xchg
in
jge
out
cmp
xor
stos
les
scas
jp
lcall
push
jns
out
mov
test
out
inc
adc
xchg
dec
cld
inc
jns
inc
es
jmp
popa
dec
jecxz
dec
cld
fdivr
lds
shl
sarl
sub
cmpsb
xor
sub
xor
in
pushf
mov
iret
popf
cwtl
ficompl
xor
cmp
aam
insb
loop
pop
add
mov
cmp
and
xchg
or
pop
daa
dec
xchg
orb
daa
jl
inc
adc
push
fbstp
mov
mov
push
xor
jg
add
mov
dec
aas
xor
xor
or
xchg
xor
adc
lahf
mov
pop
and
std
sub
nop
push
push
mov
sbb
mov
shll
pop
or
icebp
adc
in
xchg
mov
ja
mov
sub
fldt
pop
sbb
and
jns
push
jnp
jecxz,pn
push
xor
test
xchg
add
add
outsb
lret
inc
mov
jno
mov
xchg
sub
sub
jmp
sbb
sub
add
pusha
test
es
inc
mov
cwtl
mov
lods
sbb
cwtl
bswap
add
mov
inc
inc
popa
test
fwait
or
mov
mov
test
test
xlat
scas
ds
push
cmp
imulb
or
jge
and
dec
mov
in
push
xor
ret
stos
call
add
pushf
or
cmpsb
push
rcll
xchg
iret
pop
inc
decb
inc
lock
pop
jnp
dec
movsl
test
arpl
cmpsb
repz
rclb
rcll
pop
add
jmp
mov
negl
in
pusha
xor
mov
mov
mov
jnp
jns
lahf
scas
mov
fs
lock
inc
pop
or
jns
xor
pop
test
icebp
and
mull
adc
addr16
xchg
mov
in
xchg
pop
loop
scas
cli
and
es
roll
lods
cltd
rcll
cwtl
ret
cmpsb
pop
out
dec
loop
xchg
cmp
pop
test
jb
push
xchg
adc
imul
stos
dec
pop
je
loop
loopne
and
jbe
jno
call
out
and
hlt
pop
je
movsb
add
enter
pop
pop
into
fbld
fisubs
adc
clc
enter
sbb
testl
mov
js
icebp
in
inc
addr16
ret
mov
xchg
cmp
lahf
sub
xchg
addr16
mov
push
stos
jno
pop
ret
and
mov
fdivl
cltd
mov
test
out
pop
dec
lods
adc
fdivrl
push
jmp
pop
lcall
aas
loopne
pushf
loop,pn
mov
mov
and
push
inc
mov
jo
scas
packsswb
cmp
inc
out
sbb
ja
int3
movsb
dec
mov
xchg
xchg
filds
jecxz
mov
jnp
push
inc
and
cmp
and
insb
addr16
xor
arpl
faddl
inc
pusha
lock
popa
call
inc
xchg
mov
mov
add
rorb
jmp
jg
inc
or
push
xchg
xchg
xor
cmp
insb
addr16
stc
test
cmpsl
adc
push
clc
mov
out
mov
jle
push
pop
pop
xchg
or
ficoms
pop
cmp
push
loop
push
adc
xchg
and
jle
push
xlat
inc
fwait
push
mov
xor
out
sub
mov
inc
ja
adc
bound
int3
fidivrs
push
mov
andl
xchg
cli
repnz
inc
mov
mov
scas
and
shrb
rcll
or
pop
dec
aam
mov
movsl
les
jnp
in
pop
mov
jnp
lahf
or
data16
push
sahf
ret
pop
addb
or
mov
icebp
shll
ljmp
lahf
stos
clc
outsl
sbb
mov
mulb
mov
arpl
jne
mov
cmp
pop
sarb
sbbl
mov
mull
add
xchg
cwtl
cld
rolb
push
aas
xor
sbb
sub
outsb
sub
in
pop
frstor
xchg
arpl
js
or
outsl
sti
nop
outsl
out
fidivl
xorb
mov
and
arpl
pop
pop
xor
or
push
aad
pop
xor
fidivs
pop
test
or
mov
and
mov
jae
and
pop
mov
jl
jg
fs
mov
xchg
aaa
cmp
mov
loop
xlat
cld
xchg
push
shlb
push
shrb
lahf
pop
mov
mov
sahf
jno
inc
cwtl
je
cmp
roll
mov
pop
jb
jne
cmp
ds
cmp
outsl
pop
lcall
jg
lock
out
sbb
cmpsb
repz
pop
dec
or
sub
and
mov
xchg
xor
mov
repnz
mov
xchg
iret
leave
mov
pusha
mov
pop
mov
inc
cld
es
imul
jmp
pop
hlt
repz
push
push
ret
test
repz
mov
mov
push
xchg
outsl
or
or
cltd
or
cmp
jge
pop
stc
std
es
test
adc
lahf
and
adcb
mov
test
mov
jmp
out
call
add
mov
inc
push
ficomps
fsts
xchg
out
cmp
jg
stc
arpl
sub
jmp
fisttpll
repnz
in
rorl
scas
xchg
cmpsl
push
mov
pop
lret
inc
pop
aas
jne,pn
jg
sahf
mov
das
test
add
push
or
cld
call
sbb
sbb
leave
fnstsw
jmp
jno
pop
sub
xchg
cmpsb
cmp
clc
sub
pop
jmp
mov
icebp
cld
popf
and
in
fs
dec
mov
or
pop
cs
xchg
dec
aam
and
sub
jmp
push
mov
xchg
popf
ret
adc
pop
adcl
insb
cmp
adc
sub
es
movsb
inc
inc
add
dec
pop
fdiv
mov
jmp
xor
js
push
xchg
icebp
cmp
xor
sti
xchg
out
lds
out
ss
lsl
add
sbb
enter
movsl
stc
scas
or
sub
and
push
dec
xchg
pushf
push
mov
cmp
mov
cltd
negl
push
ror
mov
add
and
add
jmp
and
faddl
in
fbld
mov
xchg
mov
fwait
imul
add
sbb
mov
jg
test
imul
mov
xor
adc
mov
cmp
jae
jecxz
mov
hlt
mov
push
hlt
or
cld
in
int3
jp
cmpsb
fadds
aam
ficompl
outsl
inc
cld
jb
mov
cmp
xor
push
rcrl
lret
mov
mov
push
xchg
lods
adc
lcall
inc
xlat
adc
pop
pushf
aas
cmp
ljmp
mov
mov
push
enter
xor
movsl
scas
sbb
mov
cmp
mov
outsl
push
mov
xchg
push
js
jge
test
out
xchg
or
and
and
mov
repz
int
and
xchg
xchg
mull
jo
sub
fadds
adc
jp
mov
es
push
cmp
dec
adc
or
adc
dec
sub
xchg
xchg
adc
mov
mov
mov
das
cmp
movsl
cmp
mov
mov
and
in
adcb
adc
andl
cltd
dec
outsb
jmp
cmpsl
fidivrs
mov
popa
pop
jge
xor
jle
mov
in
fnstenv
int3
leave
mov
sbb
iret
mov
mov
fnstsw
test
adc
outsl
lahf
dec
sbb
pop
into
jbe
push
ss
mov
xor
js
xor
test
xor
add
out
lea
mov
jno
fildl
dec
cmc
rcrb
xchg
loope
orl
imul
xor
xchg
filds
adc
sub
pop
sub
push
test
xor
adc
stos
repnz
xchg
jne
push
push
sbb
cmp
inc
or
ret
mov
jae
es
push
jle
inc
inc
mov
add
pop
std
xchg
shr
inc
and
imul
inc
imul
push
push
sub
out
pop
push
and
leave
mov
leave
mov
or
lods
inc
lcall
adc
jns
mov
negb
inc
xor
mov
push
popf
sbb
dec
fimull
mov
shl
sub
push
stos
jnp
add
inc
cmp
cmp
add
push
push
pop
les
loop
pop
xchg
mov
clc
in
add
icebp
jg
imul
addr16
psubsb
movsb
xchg
lock
xor
xor
xchg
sbb
mov
adc
lret
pop
inc
jns
enter
jne
or
mov
mov
into
pop
lea
sub
test
scas
test
dec
mov
sub
movsl
xor
neg
outsb
push
ja
call
mov
mov
dec
lret
movsl
dec
push
cmp
loopne
sub
mov
nop
push
ret
sbb
xchg
mulb
pop
jmp
pop
mov
sbb
or
add
lcall
add
popf
mov
insl
lods
test
push
aas
mov
xor
jns
mov
pop
test
rcrl
dec
adc
daa
sbb
adc
add
outsb
push
mov
ja
negl
xchg
mov
jp
cmp
test
ljmp
insb
stos
push
ret
adcb
sahf
cmp
lds
jb
inc
pop
push
xchg
in
cmp
imul
cmp
pop
mov
jnp
adc
stos
dec
je
add
jg
inc
test
xchg
cli
mov
sbb
les
aad
push
icebp
push
jge
xchg
sbb
in
xchg
mov
mov
in
out
sub
shlb
or
lds
cltd
aam
mov
mov
xchg
gs
xchg
mov
ret
iret
jne
rorl
dec
int3
or
outsl
push
dec
imul
ror
fimuls
mov
xor
fdivr
push
pop
mov
lret
add
subb
dec
jno
lds
stos
jnp
push
mull
fcomps
adc
xchg
add
jo
testl
sub
repz
or
jb
lods
ror
and
scas
or
pusha
outsl
into
ds
les
fcomps
add
mov
xchg
jo
pop
add
sub
pop
adc
cltd
ja
and
movsl
out
out
cmc
iret
mov
mov
sbb
fidivrs
scas
jne
cwtl
dec
jge
jmp
mov
sbb
mov
adc
insl
loop
std
aam
in
or
js
gs
or
jno
dec
sbb
movsl
stos
insb
movsl
inc
jbe
adc
daa
testb
mov
cmp
iret
repnz
jmp
add
lods
stos
mov
mov
sbb
mov
mov
dec
adc
fsubs
popf
jecxz,pn
and
sbb
pusha
popf
xchg
out
in
inc
push
fs
jns
sub
sbb
shll
sbb
ljmp
jns
mov
add
push
ja
pop
lods
dec
sbb
stos
adc
insb
jge
repz
jecxz
gs
arpl
push
xor
cld
enter
push
fcompl
movsl
popa
aaa
cmp
lea
shrl
jo
enter
jo
cmp
adc
popa
xchg
xlat
sbb
scas
dec
jle
cmp
mov
push
adc
mov
dec
or
sub
xchg
rorb
out
push
es
shlb
andl
jbe
in
outsb
cmp
pop
popf
xor
jecxz
jge
jae
lret
adc
adc
cs
push
cmp
mov
push
fidivs
out
leave
sub
in
lods
lret
in
dec
mov
lods
add
aad
adc
popa
cmp
cwtl
sub
xor
pusha
jmp
jmp
push
lds
ss
orb
add
imul
sub
je
sahf
jl
test
pushf
ja
pusha
cmpsb
mov
or
cmp
xorb
nop
aad
push
cwtl
add
lret
mov
pop
stos
shl
add
jle
jl
insb
inc
cltd
inc
pop
add
sbb
int3
inc
and
inc
push
std
xchg
add
mov
mov
cmp
loop
sub
dec
xor
pop
dec
push
lahf
imul
fs
mov
adc
dec
inc
dec
imul
sti
push
adc
fidivrl
aas
movsl
lock
insl
xchg
push
adc
pop
jo
jb
inc
int
outsb
push
test
pusha
jmp
jle
pop
jbe
xchg
int3
scas
clc
shl
movsb
data16
xchg
xchg
dec
dec
testb
or
aad
lods
repz
fidivl
in
jns
pop
xor
mov
cmc
sub
lcall
pop
lahf
jl
add
cmp
mov
mov
cmc
out
jno
sbb
addb
adc
push
jmp
test
andl
cltd
sub
jp
xchg
push
fcmovu
sbb
or
cmp
xor
inc
push
jmp
xor
test
pop
and
inc
lahf
push
cmpl
push
call
jge
mov
stos
test
out
enter
test
cld
mov
inc
stos
vpslld
xchg
and
enter
and
sub
cmp
mov
or
add
aaa
lods
addl
mov
and
pop
stos
push
mov
cvtps2pd
xchg
cmp
mov
jbe
lea
sbb
hlt
je
mov
in
xor
cmc
jmp
push
cmp
jmp
call
inc
popl
orb
cs
stos
fistpll
and
outsb
cmpsb
test
mov
dec
inc
add
jne
inc
xlat
inc
push
cmp
adc
ret
add
mov
lods
adc
repz
pop
arpl
mov
sbb
sbb
push
cltd
push
mov
fcmove
mov
cmp
fists
lahf
enter
inc
and
in
push
xchg
sub
add
imul
dec
jbe
ffree
sub
cltd
jg
lods
add
ret
sahf
xchg
movsl
push
pop
or
dec
push
cli
loopne
xor
lret
cs
mov
xor
filds
out
inc
call
jg
jo
or
test
pop
mov
xchg
pop
push
xchg
jge
inc
das
ss
out
sahf
cs
dec
cmp
and
xlat
lods
in
in
imul
or
cs
test
loop
cmc
andb
faddl
jo
lock
jl
inc
push
inc
cmp
mov
and
adc
cmp
jno
aaa
add
sbb
insl
mov
out
sbb
pop
push
in
insb
outsb
and
xchg
jmp
dec
push
mov
ljmp
call
call
xor
sub
jo
fisttps
iret
dec
mov
mov
mov
jno
dec
xchg
sbb
cmpsb
push
cmc
sub
push
inc
mov
or
rol
das
push
cli
stc
mov
xchg
flds
sbb
insb
sbb
push
dec
inc
push
push
mov
adc
and
icebp
mov
orb
test
mov
hlt
testl
icebp
pop
pushf
xchg
push
mov
xchg
inc
icebp
sub
inc
mov
mov
rcrb
repz
sbb
and
out
insb
xor
inc
add
adc
das
mov
adc
arpl
iret
ror
or
cld
pop
add
jbe
mov
ss
push
jl
daa
push
ret
adc
iret
aad
outsb
push
sbb
cwtl
outsb
mov
call
xorl
cmp
jne
jno
fimull
daa
inc
cwtl
loop
subl
and
in
addb
sbb
cli
jmp
out
insl
push
adc
push
push
inc
fdivl
shlb
add
test
and
mov
fldl2t
jp
cmp
adc
rorb
aaa
int
pop
testl
out
and
or
mov
sbb
xor
sbb
and
adc
movsl
ds
loopne
mov
fnsave
sbb
les
and
jnp
dec
out
pop
jns
mulb
mov
sub
add
mov
mov
jnp
ret
jle
scas
shlb
imul
adc
movsb
into
fimuls
sbb
push
push
test
xchg
ret
jbe
out
mov
and
pop
frstor
gs
push
sahf
xchg
or
pushf
ss
fstpt
mov
mov
adc
xchg
int3
call
cmp
in
jmp
mov
pop
mov
jns
adc
dec
test
test
adc
arpl
mov
adc
mov
lret
mov
std
aas
insl
and
in
fs
dec
pop
sbb
jecxz
pushf
inc
sub
push
dec
jbe
inc
les
xlat
lcall
xor
in
adc
mov
lret
sbb
lret
or
xor
out
xor
divb
test
out
and
or
jo
insl
xchg
sub
xchg
cmpsb
cmp
es
aam
mov
clc
lea
xor
sbb
hlt
in
cmpsb
add
sub
mov
nop
leave
test
xor
xorb
lea
mov
sbb
cltd
ficoms
mov
xor
jmp
test
sub
pop
pop
xchg
hlt
call
inc
ret
std
xchg
adc
das
lea
mov
pusha
add
addr16
out
fs
add
mov
loopne
mov
cltd
test
and
in
mov
cmp
sub
push
cltd
mov
rorb
not
repnz
and
xchg
jge
adcl
insb
sub
or
push
sub
sub
imul
add
fisubs
ficoms
xchg
mov
mov
add
pop
xor
dec
outsb
sub
dec
mov
mov
loopne
sbb
or
lahf
imul
clc
mov
shlb
push
add
aam
add
jnp
mov
in
loope
pop
loopne
leave
bound
cmp
cmp
in
js
lcall
lods
adc
push
pop
push
pop
ss
loope
and
imul
dec
leave
sbb
push
pop
cmp
mov
insb
dec
jmp
arpl
popf
fcmovb
push
pusha
dec
pop
jno
inc
cmpsl
incl
mov
adc
clc
cltd
dec
xchg
jmp
dec
and
mov
pop
lcall
jbe
enter
lods
dec
sub
std
or
adc
mov
or
xchg
out
xlat
lds
pushf
pop
ret
jb
pop
lock
arpl
fldcw
xchg
pop
push
sub
std
pop
xlat
sub
call
cmp
popfw
jp
ljmp
loopne
or
mov
in
push
dec
in
sbb
mov
sbb
or
sub
daa
add
mov
mov
push
add
adc
lds
andl
test
cmp
rclb
or
dec
ss
sahf
fnsave
mov
mov
mov
jecxz
inc
scas
jp
mov
dec
cwtl
fildl
xchg
pushf
dec
push
inc
pop
adc
pop
mov
and
pop
sub
lods
add
leave
repnz
jecxz
mov
sub
mov
mov
add
mov
push
xchg
cwtl
push
xchg
mov
pop
in
xor
mov
pop
lcall
cmp
dec
shlb
ret
mov
fsubrp
lock
mov
pop
push
and
dec
inc
mov
cmpsb
rorl
dec
sti
int3
push
jl
int3
push
jmp
out
or
jg
xchg
std
xor
call
stos
rcrl
xchg
sbb
push
xor
mov
jp
dec
sub
lret
xlat
xchg
xchg
in
sarl
jne
push
rorb
add
jmp
cmpsb
cld
mov
arpl
xchg
ljmp
mov
out
cmpsb
ja
lods
cli
xchg
dec
xor
test
lret
sbb
int3
shrl
gs
sahf
outsb
mov
sqrtps
in
add
shll
in
pop
sbb
lea
mov
popf
jnp
mov
xor
add
xor
mov
push
leave
adcb
lahf
inc
dec
or
jmp
xchg
adc
fidivrs
or
inc
cmp
rorb
je
incl
lods
out
or
or
sbb
push
or
mov
sbb
cmp
addr16
lock
rcr
shll
xorl
sub
adc
mov
div
je
push
pop
mov
inc
fsubr
arpl
mov
je
pop
inc
call
cltd
push
imul
cltd
jge
out
in
push
push
jb
adc
ljmp
cli
into
outsb
jmp
dec
imul
lret
add
mov
sbb
sbb
lock
scas
ljmp
nop
xor
jns
dec
cwtl
inc
add
sub
cmp
loop
xor
dec
inc
xchg
rcrl
mov
mov
mov
or
in
mov
std
cltd
push
xchg
cmpsb
lock
fdivrl
mov
sbb
mov
xor
stos
add
jno
inc
xchg
pop
call
dec
enter
push
fadd
xor
stos
paddd
cli
ljmp
mov
adc
loopne
push
dec
inc
mov
and
jae
push
sarb
jnp
mov
jae
sti
test
out
fisttpl
cwtl
stos
insl
lret
xchg
jecxz
rcr
imul
std
in
ret
pop
adc
out
add
inc
test
roll
xchg
push
lods
jns
dec
adc
inc
enter
ja
aas
test
insl
pop
mov
push
out
notb
push
iret
push
aam
sbb
repz
in
inc
mov
xchg
mov
sbb
aas
cmp
rorb
scas
pslld
fidivl
negb
sub
shrb
jne
les
mov
mov
lahf
add
mov
andl
scas
loop
cltd
mov
xchg
movsl
xchg
leave
fs
ds
xchg
and
xchg
stos
mov
push
in
fistpl
enter
sti
lds
push
jnp
sub
adc
scas
pop
pop
xor
or
sti
add
dec
adc
loope
jecxz
fdivrl
ja
aas
insb
dec
incb
icebp
cmp
or
lret
sbb
mov
or
ja
xchg
push
scas
push
in
mov
and
out
lds
pop
fmuls
outsl
and
mov
daa
decb
adc
inc
pop
scas
sub
insl
sti
cltd
stos
push
sub
xor
add
sar
movsb
xchg
or
dec
mov
in
aaa
mov
mull
pop
loop
idiv
mov
lcall
xchg
negb
sbb
mov
push
adc
mov
cmp
punpckhbw
mov
push
mov
sbb
imul
xchg
add
rcl
sub
mov
out
notb
push
les
aas
nop
mov
loope
sbbl
lock
loop
imul
push
fsubl
pop
adc
arpl
mov
in
iret
push
fsubr
sbb
les
in
mov
test
leave
fstp
shl
pusha
lea
icebp
insb
sbb
sbb
dec
mov
aas
lds
in
xchg
and
jl
fucom
adc
ja
je
inc
and
xor
fnstenv
push
imulb
and
mov
ljmp
push
int3
push
sbb
scas
mov
into
xor
push
push
jmp
lods
cmpsb
lea
mov
sbb
push
or
cmpsl
mov
je
and
ret
and
mov
push
fimuls
fcomps
mov
inc
or
into
ds
decb
stc
jae
push
clc
imul
push
push
stc
rcll
shll
in
mov
mov
jbe
lcall
mov
xchg
aaa
loop
dec
or
sub
int3
popf
test
notl
js
cmp
mov
or
jg
out
mov
push
js
xor
ljmp
loop
and
lods
jbe
jecxz
je,pn
fs
or
rep
cli
mov
in
jl
jl
cmp
les
mov
jge
add
cmc
clc
sbb
test
fildll
je
mov
xor
cmp
in
mov
mov
aas
jge
clc
xchg
mov
cmpsl
push
jnp
jecxz
rorb
pop
xchg
mov
cmpsb
dec
xor
sti
push
sbb
orb
cmp
jnp
xchg
xchg
aas
loopne
dec
xchg
push
xor
cmp
test
mov
xchg
push
jno
stc
cmp
les
ficomps
mov
add
dec
outsl
idivb
loopne
adc
sub
stos
lods
dec
std
mov
mov
repnz
jno
std
jbe
sub
outsl
test
adcl
in
push
sarb
sub
sbb
xchg
xchg
fs
push
subl
ljmp
xchg
dec
scas
dec
push
pushf
and
add
lods
dec
lret
adc
call
sbb
cltd
dec
adc
lock
xlat
jnp
loopne
push
pop
pop
repz
sub
jmp
cs
es
mov
xor
repnz
dec
pop
ret
add
cmpsb
outsl
insl
pusha
cli
sbb
dec
or
andps
aaa
xchg
aad
jmp
pop
daa
pop
xchg
push
lods
je
scas
mov
xor
jnp
mov
and
lret
call
jns
mov
inc
xchg
iret
cmp
arpl
xchg
and
or
fists
jno
inc
mov
mov
cwtl
aaa
push
jb
pop
or
or
xchg
cmpb
mov
inc
mov
movups
push
sub
dec
xor
jle
sub
jp
addr16
hlt
mov
mov
jns
jmp
xchg
cmpsl
or
andb
cmpsl
and
insb
xor
mov
bound
adc
pop
mov
dec
add
popf
adc
je
add
pop
mov
notl
mov
dec
xor
mov
out
mov
insb
or
es
gs
or
adc
sahf
call
ds
pop
dec
les
pop
cmc
push
jmp
mov
xchg
add
outsl
xor
cmpsb
jae
in
ss
push
out
inc
add
adc
imul
sbb
lock
popa
and
add
enter
loope
sti
sbb
and
pushf
nop
inc
cmp
mov
aaa
xchg
data16
push
lret
into
push
stos
dec
sbb
adc
push
mov
ja
in
adc
icebp
popf
aam
sahf
roll
test
xor
xchg
mov
js
add
test
xchg
ds
mov
insb
shrl
ja
pop
imulb
es
sti
loopne
lret
ss
scas
add
loopne
cli
pop
sahf
mov
cmp
les
pusha
pop
mov
bound
mov
lcall
je
mov
jmp
mov
iret
dec
jo
std
imul
ja
inc
fiadds
in
daa
sbb
lods
pop
sbb
inc
outsb
loope
fstpt
in
mov
pop
cmp
mov
pop
mov
test
sbb
nop
mov
loopne
cmp
call
xor
ja
sub
sub
std
int3
push
adc
mov
push
add
inc
nop
test
vprotd
rorl
cmp
loop
out
ret
mov
push
jmp
push
add
dec
jecxz
sahf
mov
jmp
sahf
add
frstor
xchg
xchg
cmpb
push
or
push
xor
jo
subl
mov
leave
mov
and
mov
psllq
out
pop
jae
in
sbb
xchg
or
pop
repnz
push
fcoml
mull
ds
pusha
in
repnz
adc
cmpsl
inc
inc
push
fimuls
out
dec
sti
jp
pop
ret
fwait
mov
movsl
call
or
mov
cld
fnstcw
ret
sub
test
cmpsb
js
mov
rolb
cli
enter
into
cmp
or
sub
lea
idivl
cld
test
jge
jno
shrl
pop
or
push
jecxz
and
push
and
sub
xchg
add
jle
insl
jecxz
pusha
and
cli
aad
lods
aas
mov
xor
xor
dec
xchg
inc
into
or
cld
test
test
scas
lret
loop
stc
popf
jnp
addb
mov
mov
rolb
dec
and
gs
mov
xchg
jmp
pop
mov
cmpsb
pop
jbe
lcall
fwait
ret
xor
jns
ss
jno
sarl
loop
mov
popl
pop
in
mov
mov
or
jb
mov
mov
lea
xchg
ljmp
xchg
adc
sub
subl
jge
jbe
orl
int3
lods
sub
mull
inc
les
inc
insb
imul
mov
vpcmpeqw
xor
sti
or
pusha
mov
imul
out
insb
sbb
pop
mov
lcall
jo
inc
mov
push
and
add
jg
dec
push
popa
jo
rcl
inc
xchg
mov
loopew
mov
shll
fcmovnu
fneni(8087
push
jecxz
daa
push
fstps
dec
mov
xchg
je
inc
ds
mov
and
dec
and
shr
stos
aas
jmp
mov
clc
sbb
adc
or
cmp
test
sub
dec
adc
loop
out
leave
sub
insb
inc
sub
ficompl
out
in
xlat
in
xchg
aas
dec
or
pop
and
fs
and
movsb
add
mov
inc
addr16
and
sub
mov
rolb
jb
icebp
or
stc
cmp
fldl
arpl
mov
mov
push
mov
test
mov
or
mov
ds
out
adc
int3
cld
test
mov
adc
dec
dec
es
loope
jo
sbb
adc
leave
ficomps
fnsave
scas
jo
jmp
add
out
pop
jne
push
jo
nop
in
data16
xchg
add
add
mov
jb
xchg
in
push
rorl
add
sti
sub
fs
pop
push
dec
dec
xor
in
in
inc
outsl
outsl
sbb
or
fildll
scas
test
xor
fisubs
or
rclb
xchg
mov
xor
js
jp
mov
inc
mov
ret
push
inc
les
xchg
pop
xchg
cmp
adc
pop
xlat
mov
leave
push
xor
pop
dec
int
shlb
notb
scas
mov
add
ret
bound
bound
gs
not
scas
xor
xchg
xchg
loope
push
adc
std
enter
or
movsl
push
mov
push
jle
pushf
cmp
xchg
jnp
ret
cmc
mov
sti
push
stos
xor
mov
mov
jmp
outsb
bnd
sbbb
das
pop
adc
xchg
imul
insb
mov
dec
pop
cmpb
inc
mov
mov
lret
adc
jg
dec
roll
mov
lds
push
enter
push
std
mov
jecxz
and
or
mov
adc
sbb
in
repnz
pop
jnp
test
inc
dec
aad
mov
xchg
out
xor
pop
xchg
mov
sub
mov
pop
mov
fbstp
iret
sbb
jne
inc
les
fucomp
and
popf
sub
inc
jl
inc
fwait
sub
clc
mov
insb
scas
sbb
jl
fists
push
sbb
fwait
loop
and
add
popf
xor
sub
xor
mov
push
stos
ja
packsswb
mov
mov
and
and
test
flds
or
mov
and
mov
roll
ljmp
lahf
xor
jp
adc
loop
std
cwtl
mov
test
stos
jle
shrb
pop
fisttps
movsl
inc
push
pop
repz
dec
gs
mov
sbb
gs
imul
cmp
adc
pop
sbb
aam
ljmp
or
lahf
jle
stos
pop
add
arpl
mov
jnp
mov
pop
fs
arpl
das
sub
jo
fs
push
std
scas
das
lea
jns
add
shr
movsl
stos
imul
cs
das
roll
lods
pop
test
and
xchg
and
pop
aad
jp
insb
push
add
repnz
sti
jnp
out
pusha
js
scas
cmp
mov
popa
addr16
lds
jno
jae
pop
dec
out
les
movsb
sbb
lcall
movsl
call
sbb
xchg
add
or
xchg
or
aaa
lret
mov
or
pop
scas
popf
xchg
cmp
outsl
in
enter
popf
insl
pushf
push
fs
leave
add
mov
cmpsb
cmp
fstl
popa
insl
test
loope
scas
dec
jno
cmpb
dec
xchg
ret
mov
or
insb
push
mov
mov
xchg
adc
mov
nop
aaa
fstpl
add
in
sub
inc
int3
outsb
out
shrb
test
xchg
sbb
xchg
les
gs
aas
out
or
movsl
call
add
push
lock
cltd
mov
xchg
rol
adcl
repz
mull
leave
lcall
and
stc
push
ds
out
out
loop
pop
test
in
ret
mov
outsl
arpl
adc
pop
adc
add
in
add
pop
and
adc
call
push
ja
shll
cmpsb
std
aas
scas
xor
sbb
sbb
jne
and
out
repnz
lock
in
iret
sub
out
sub
or
adc
sub
jo
mov
xchg
push
fisubrl
mov
sbb
div
sub
sbb
and
decl
push
push
loope
fsubrs
pop
mov
push
mov
out
and
mov
sub
dec
xchg
orl
cs
das
mov
xchg
enter
adc
stos
fwait
or
test
xlat
xor
cld
lods
add
cmp
and
js
imul
mov
mov
subb
mov
cltd
ret
cmovle
push
popf
inc
js
mov
mov
divl
ss
fs
insb
fs
lods
add
pop
mov
outsl
cmp
mov
xor
enter
daa
mov
mov
dec
and
and
pop
cmp
shrb
or
mov
push
sub
mov
movsb
out
xchg
add
lods
mov
jns
jg
jne
mov
jmp
mov
xor
shlb
jecxz
fiadds
call
popf
mov
xor
pop
adc
negb
pop
imul
int
pop
out
sub
dec
and
adc
mov
sbb
lcall
dec
in
jns
flds
nop
je
sub
sar
and
outsb
pop
pushl
shl
test
xor
test
je
sub
rolb
pop
popa
push
push
push
adc
mov
movsb
decb
clc
jnp
mov
sbb
pop
mov
jmp
mov
add
mov
pop
mov
mov
aas
dec
dec
insl
dec
adc
int
mov
cld
mov
pop
out
xor
cmc
mov
sbb
mov
loopne
cwtl
adc
imul
sahf
push
pop
fcoms
xchg
lret
cld
loopne
xor
aam
iret
dec
mov
cmp
dec
adc
jb
repnz
xlat
call
dec
outsb
mov
lods
addr16
decl
pop
outsb
dec
dec
rcr
sub
daa
mov
xchg
xor
pop
stos
and
mov
cld
es
cmp
push
add
mov
daa
adc
addl
addr16
repnz
cmp
mov
mov
in
scas
xchg
popa
pop
arpl
out
add
bound
insl
lret
dec
ss
hlt
ljmp
xchg
out
inc
mov
lods
pop
add
xlat
jno
xchg
les
bound
push
imul
test
iret
iret
dec
in
scas
adc
dec
add
pop
movsb
push
jno
inc
in
mov
mov
add
pop
add
lret
mov
jne
mov
sbb
mov
mov
dec
jbe
cwtl
and
pop
add
sti
pop
mov
in
add
pop
and
mov
cmpsb
inc
inc
fwait
sub
inc
pop
mov
inc
mov
shll
cli
test
mov
or
dec
push
jecxz
add
mov
dec
out
mov
dec
bound
cmp
mov
test
xchg
iret
mov
aad
xchg
stos
xchg
pop
pop
stos
rorb
push
outsb
jge
int
cmpl
or
mov
add
std
lea
inc
push
dec
cs
sbb
enter
ror
mov
fdivp
arpl
pusha
xchg
pop
jle
loopne
addr16
out
test
jg
mov
testb
out
sub
fs
jmp
mov
int
rcll
and
shlb
ficoms
push
cs
testl
fadds
inc
icebp
cmp
and
inc
pop
fdivs
lahf
ss
mov
mov
mov
cmc
sbb
mov
js
rorb
test
sub
gs
icebp
sub
fiaddl
mov
xchg
sbb
cltd
mov
push
js
fucom
jmp
mov
xlat
jge
loopne
jns
xor
push
ds
add
clc
jmp
mov
gs
sub
jno
cmp
pop
test
mov
sub
jb
or
xor
std
xlat
in
mov
shrl
pop
mov
ja
arpl
mov
es
icebp
push
mov
addr16
push
ret
xor
lods
in
or
fs
test
sarb
mov
sahf
out
andl
outsl
sahf
aas
sbb
add
mov
cs
jle
gs
sbb
jl
arpl
xor
cs
pop
cmp
dec
xor
sahf
rcl
lock
jl
jnp
dec
add
call
dec
and
adc
insb
faddl
or
fwait
mov
lock
cli
aas
into
popf
dec
sti
adc
dec
pop
jecxz
test
movsb
push
cmpsl
fdivs
or
iret
dec
inc
les
sbb
test
add
andl
into
js
mov
jle
ss
stc
clc
aad
inc
mov
or
pop
xor
ljmp
xchg
stos
cmp
pop
or
inc
adc
fsubrs
xor
adc
mov
fisttpll
and
dec
std
adc
mov
fsubl
ret
fnstcw
cmp
daa
pop
mov
loop
std
cmp
jo
fnstsw
aas
imul
rorl
mov
out
lods
icebp
jo,pn
sub
call
push
int3
sbb
outsb
mov
xchg
mov
add
cmp
or
rol
cmp
dec
les
xchg
fisttpl
out
mov
mov
cmp
scas
inc
adc
mov
inc
or
xor
stos
bound
adc
sub
test
dec
jle
js
dec
aas
mov
maxps
loope
mov
mov
mov
rolb
xchg
xlat
idivl
push
jno
enter
es
and
pop
mov
add
in
fdivl
aaa
cmp
ds
push
hlt
notb
aas
dec
sahf
push
push
ret
jecxz
mov
inc
pop
stos
inc
xor
sbb
mov
cltd
iret
mov
lret
sbb
pop
mov
adc
xor
inc
jg
cmpb
mov
inc
push
lahf
sub
cld
jo
cmp
jb
imul
add
js
loope
add
jge
stc
dec
mov
lock
mov
xor
movd
bound
mov
mov
int
test
xchg
pop
shlb
sbb
inc
insb
push
in
mov
mov
jb
sti
sbb
in
and
loopne
xlat
arpl
je
add
mov
enter
or
sbb
popf
xor
dec
fimuls
pop
xchg
fstpt
loopne
adc
adc
das
pushf
sti
cwtl
inc
ficoml
je
sbb
cmc
sahf
mov
aad
cmpsl
xor
add
lahf
call
mov
sbbb
inc
jns
dec
mov
jno
push
xor
cmp
push
arpl
shlb
fisttpll
cltd
cmp
adc
fildl
pop
push
call
jmp
popa
or
sub
bound
xchg
jno
aaa
ja
mov
out
stos
outsb
jo
rorb
xor
push
sbb
data16
xchg
movsl
add
jo
jne
outsb
xor
enter
out
sub
les
fistpl
xor
mov
cmp
or
std
mov
adc
cli
mov
push
push
mov
fs
dec
mull
push
addr16
lods
push
insb
cmp
push
mov
xlat
sub
sub
or
dec
cmp
ds
std
dec
mov
and
jbe
in
mov
xchg
push
shlb
jecxz
xchg
or
adc
push
mov
cmp
outsb
jg
les
mov
jl
ret
cwtl
insb
dec
inc
and
orl
jmp
jge
cmp
push
sub
fidivl
in
orl
dec
push
loope
fwait
sbb
add
mov
xchg
dec
imul
pop
and
or
inc
pop
fdivrs
dec
push
mov
in
pop
jp
pop
and
or
bound
je
mov
fisubs
or
es
cmpb
mov
mov
int
or
popa
daa
pop
mov
fcom
out
xchg
adc
shr
ret
push
aas
sbb
in
mov
xor
fcmovbe
inc
sub
xor
subl
fwait
and
mov
cmp
jo
and
cmp
lret
sub
lret
cltd
rcr
mov
or
inc
sti
repz
jge
movsl
push
or
int3
shll
push
cltd
addr16
stos
aam
loope
lods
ret
xor
inc
shl
int3
sbb
test
mov
xchg
xchg
cmp
sbb
pop
lret
ljmp
xor
loopne
lret
mov
xor
aas
pop
ret
pop
add
or
push
js
shrl
pop
daa
sbb
xlat
sub
mov
xchg
lcall
aas
jae
sti
mov
fisttpll
outsl
lds
lods
mov
xorb
mov
loopne
jge
sti
lods
out
xchg
sub
icebp
mov
pop
cmpsl
or
fiadds
mov
rolb
sbb
out
cli
add
dec
scas
insl
add
pop
xlat
xchg
int
lds
lods
shll
popf
shr
lock
sub
imul
and
fsubrs
int3
sub
arpl
and
add
pop
inc
sbb
paddb
cmc
jecxz
test
or
push
jno,pt
sub
rcl
jmp
sar
outsb
mov
int
jne
leave
mov
add
mov
sarl
xor
sti
push
sub
or
xlat
inc
and
xorb
cmp
sbb
pop
repz
inc
mov
push
loop
mov
xor
sub
mov
aas
mov
flds
jmp
pop
lds
inc
dec
fisubl
push
push
push
dec
fnsave
jno
add
ja
dec
inc
cmp
add
inc
shrb
mov
out
xchg
jae
and
aad
mov
sub
fsubrp
push
sub
mov
ja
inc
mov
xor
push
push
data16
shld
add
cmp
icebp
or
jge
insl
mov
xchg
inc
push
or
test
push
pop
dec
mov
je
mov
or
repnz
mov
jno
aaa
inc
sub
std
add
aaa
sti
pop
arpl
xor
sub
or
pop
ret
mov
loope
pop
sub
hlt
jno
push
mov
mov
ficomps
adc
xchg
sub
adc
daa
push
lock
mov
dec
sbb
add
roll
aas
sub
jb
es
push
iret
fistps
sbb
jmp
or
test
in
adc
push
jno
pop
jle
mov
xchg
or
xchg
adc
out
jp
mov
jecxz
icebp
add
mov
outsb
xchg
nop
push
push
lds
decb
ja
pop
jle
imul
xlat
ds
pop
outsb
sbb
xor
loop
jg
adc
cltd
cmp
xchg
imul
insl
add
xor
jbe
outsl
aaa
pop
loop
xor
clc
lcall
xor
je
in
lock
sbb
sysexit
jb
sahf
inc
mov
jle
test
push
inc
mov
stos
xchg
aaa
outsl
fwait
ja
nop
adc
int
fsubl
insb
push
les
insl
jl
in
inc
test
arpl
jbe
gs
out
xor
jns
ret
push
inc
mov
mov
popf
jle
mov
jae
dec
jae
jl
insl
and
cmp
mov
lds
iret
add
jp
jnp
inc
xchg
sbb
mov
or
cltd
mov
fstl
sub
leave
ss
add
int3
pop
shrl
mov
cmc
xchg
bound
pop
les
mov
outsb
fistpll
rcrb
in
cmpsl
imul
push
hlt
pop
inc
mov
movsb
cmp
out
mov
mov
add
testb
jb
lret
addr16
mov
movsb
mov
or
sbb
ja
imul
jp
das
sub
jge
sub
inc
push
and
loopne
sub
leave
std
mov
nop
lcall
or
outsb
aam
mov
sahf
sub
arpl
test
jmp
cmp
repz
fdiv
filds
dec
push
or
dec
cwtl
or
jl
add
dec
pop
sub
xor
jae
jnp
sub
mov
fs
mov
outsb
xchg
jle
stos
ja
fcomi
insl
js
sahf
enter
stos
mov
xor
mov
inc
sub
xchg
iret
or
testl
dec
dec
test
negl
int3
jl
ja
xchg
push
jno
sub
les
mov
int
and
mov
jne
cmc
aaa
cmpsl
pop
scas
sbb
add
xor
les
jmp
clc
sbb
imul
mov
adc
dec
jge
outsb
inc
push
je
iret
dec
loope
cld
daa
add
bound
or
sbb
or
in
ret
test
jb
in
xchg
pop
fnsave
insl
push
and
out
mov
es
out
data16
mov
aas
sbb
push
jo
or
jns
fbstp
inc
stos
mov
in
jmp
mov
fcomps
pop
sbb
popa
mov
inc
stos
mov
add
movsb
dec
sub
mov
std
cmp
mov
push
push
repnz
xchg
iret
fcompl
sub
mov
jbe
into
arpl
out
insl
cmp
mul
push
jle
xor
xlat
mov
add
lcall
push
cmp
inc
popf
jl
scas
ds
push
push
xchg
push
stos
fstpt
cld
sbb
push
jns
mov
stos
jns
outsb
addps
imull
pop
fildll
repz
jo
dec
fwait
and
es
and
sbb
cmpl
data16
jecxz
ja
xchg
adc
xchg
int
rep
jmp
hlt
ljmp
jle
and
sbb
mov
out
lock
sub
je
cmp
iret
push
push
or
mov
cmpsb
push
leave
stos
xchg
flds
inc
adc
popa
mov
notl
mov
iret
dec
scas
out
cmpl
mov
sahf
cli
push
sbb
jl
dec
and
add
shll
jl
test
push
movsl
psubq
popf
pop
popf
popf
loope
mov
sub
mov
cmovs
ret
jns
adc
pop
dec
cld
push
mov
in
add
out
push
jmp
cld
test
push
test
add
add
bound
cmp
rorl
in
jl
add
jmp
sahf
push
add
adc
add
jp
lcall
pusha
inc
pop
xchg
in
xchg
aad
ds
andl
ret
outsl
stos
dec
jge
popf
scas
pusha
test
or
fidivrl
push
dec
repz
jne
das
cmp
pusha
test
stc
inc
fildl
inc
push
rclb
imul
data16
aad
aam
cmpsl
inc
in
sub
daa
mov
aam
xchg
cwtl
aaa
sbb
emms
sbb
xchg
ljmp
imul
or
arpl
and
aad
inc
push
hlt
mov
jecxz
and
int3
push
jns
dec
mov
out
pop
and
sub
jbe
or
lcall
and
js
mov
bound
cmc
xchg
call
jbe
dec
insb
aam
std
inc
hlt
inc
imul
dec
inc
jecxz
jbe
stos
sub
jl
lods
jbe
inc
push
jg
jne
sbb
cmp
pop
xlat
dec
pcmpeqw
pop
cmp
int3
cmpsl
loope
mov
push
mov
js
leave
cmp
jne
pop
clc
js
or
test
mov
test
stos
inc
rolb
cs
xchg
and
cmp
pop
push
fldl
push
lret
or
ljmp
and
xor
dec
hlt
loopne
addr16
mov
cmc
push
sub
or
mov
pop
loop
popf
cmc
xchg
cld
xchg
cmp
insl
outsl
xchg
pop
fidivl
pop
inc
loopne
jnp
adc
jg
sub
jp
fisubrl
rcrb
pop
pop
inc
lea
lock
xor
nop
push
iret
jl
add
pop
enter
xchg
pop
jp
bound
dec
andps
pusha
nop
aam
int3
mov
in
sub
out
and
js
or
jbe
inc
xchg
and
cmp
mov
in
icebp
fwait
leave
inc
iret
aas
mov
xor
lods
in
sub
sahf
push
dec
lret
cwtl
cmp
or
dec
inc
jmp
adc
mov
mov
dec
jecxz
mov
fisubrl
xlat
sub
mov
fcmovu
mov
ret
mov
dec
pop
and
lods
mov
call
aas
dec
xchg
ror
data16
mov
mov
fdivrs
sbb
pusha
sub
lcall
scas
adcl
shll
push
stc
sbb
adc
xchg
into
add
je
aaa
mov
into
mov
mov
lcall
cmpl
jmp
sbb
fdivr
hlt
in
cmp
adc
gs
mov
push
xchg
loop
xchg
push
or
push
add
push
lock
xor
add
sub
rol
jne
adc
mov
jo
gs
xchg
or
mov
cmpsl
xor
pop
jb
int3
pop
js
pop
push
and
add
xor
repz
inc
dec
addr16
push
jne
sbb
shlb
fwait
sub
xchg
icebp
mov
sets
sbb
pop
cmp
mov
adc
std
aad
jae
mov
pop
sub
cmp
or
and
pop
add
in
out
mov
dec
add
jb
jmp
fisttps
mov
xor
outsl
pop
fisubs
pop
cmp
jno
lahf
cwtl
jbe
push
jp
icebp
mov
push
into
in
in
iret
or
sti
adc
cmpl
xor
pusha
xchg
and
sbb
dec
outsl
push
mov
mov
and
fcmovbe
jne
fmulp
lods
jmp
jbe
clc
adc
mov
test
popa
pop
sub
xorb
cmp
or
push
push
sahf
mov
jge
jge
inc
loopne
outsl
fcomps
mov
jbe
fldt
push
mov
pop
scas
outsb
dec
add
xlat
or
pop
or
imul
mov
insb
hlt
insb
ljmp
loope
insl
out
movsb
push
push
daa
sahf
dec
sahf
nop
dec
pusha
js
cmp
lods
dec
pop
inc
pushf
imul
dec
aam
sbb
cld
cmp
add
mov
pop
adc
or
push
pusha
xor
imul
shll
mov
cli
cmp
movsl
into
in
adcl
fdivr
in
inc
ret
outsl
insl
sub
xchg
mov
xchg
repz
ljmp
aam
test
xchg
jo
push
movsl
repz
sbb
lret
lock
sub
scas
stos
cltd
ljmp
rcrb
popf
sarl
test
xchg
mov
movsl
adc
arpl
lcall
repnz
jno
test
jbe
pop
lret
jne
and
lea
add
sub
fidivrs
fidivrl
add
loope
lods
scas
sti
jbe
rcll
jmp
mov
es
sbb
add
lea
test
cmp
pop
sub
xlat
addr16
rorl
lret
ja
add
mov
enter
call
shrl
lock
dec
int
stos
jno
loop
and
and
xor
outsl
pop
or
shlb
and
adc
sub
sbb
icebp
in
and
jecxz
rcll
lock
nop
lds
cwtl
scas
or
pop
jmp
aam
mov
xchg
je
das
jmp
inc
cmpl
addr16
movsb
ljmp
mov
sti
mov
push
xchg
stc
sbb
mull
lret
mov
hlt
push
push
jecxz
sub
mov
or
out
pop
jb
mov
lock
xchg
jecxz,pt
ljmp
mov
cmp
pop
xchg
pop
inc
sub
xor
movsb
loop
jns
ljmp
push
popa
cld
or
cs
repnz
lcall
scas
clc
xchg
ja
add
fisttpl
xchg
mov
push
jmp
fidivs
sbb
loope
adc
out
int3
mov
roll
inc
sti
push
movsb
cmp
mov
or
dec
lock
lds
enter
cmp
mov
lahf
xchg
mov
cmp
mov
xchg
out
cmc
mov
adc
or
xchg
leave
outsl
xor
cld
lea
ret
repz
adc
lcall
cli
push
push
lods
mov
xchg
cwtl
lea
je
out
sbb
sbb
jb
mov
mov
mov
xchg
nop
es
adc
jecxz
xor
cmp
leave
dec
aaa
sahf
sub
sub
inc
lret
sbb
jp,pt
arpl
ret
es
iret
incb
jle
lds
sub
lea
leave
ret
jg
dec
or
das
pop
sbb
dec
sar
enter
push
dec
mov
imul
xor
pop
xor
iret
repnz
test
pop
sub
test
test
xor
in
lock
mov
ffreep
sbb
rorl
or
sub
jge
shlb
fstpt
ficomps
mov
mov
sbb
dec
cli
push
out
mov
mov
pop
cmp
or
xchg
bound
bnd
arpl
adc
addb
enter
out
js
scas
push
and
jbe
sub
add
out
inc
xchg
cmpsl
sub
dec
in
and
gs
subl
push
ljmp
add
mov
xchg
mov
iret
addr16
fildl
cmpb
push
adc
ja
mov
push
hlt
dec
xlat
lds
pop
adc
sbb
mov
bound
mov
jae
lahf
add
int
jge
popf
pushf
fwait
das
push
int3
inc
test
repz
testl
std
push
xor
xor
xchg
insl
aaa
icebp
pop
repnz
xchg
cli
jl
fadds
sbb
adc
or
out
mov
sub
and
jae
push
sbb
push
sbb
inc
mov
inc
insb
mov
es
xor
jbe
and
js
insb
lret
mov
mov
rcr
mov
xchg
mov
cltd
mov
test
inc
test
xchg
adc
out
test
lds
in
mov
cld
sarl
in
jb
mov
pop
push
push
sbb
inc
ror
cmp
lea
mov
unpcklps
sbb
out
xor
add
pop
das
fidivs
and
mov
test
call
sub
xlat
add
mov
mov
arpl
jl
sbb
xor
jmp
add
arpl
js
loop
outsl
mov
repnz
aaa
cmp
pop
cmp
inc
incb
cld
add
out
add
sbb
and
dec
pop
cmp
jno
or
aam
or
lods
repnz
or
mov
repnz
outsb
push
test
je
or
ja
xchg
mov
outsl
sti
sub
mov
xor
call
out
nop
or
jecxz
mov
stos
dec
push
imulb
mov
add
fidivl
out
adc
roll
sub
push
mov
pop
mov
imul
sub
push
sbb
loope
inc
mov
icebp
sub
rorl
rdpmc
or
in
movsl
test
pop
dec
pop
push
mov
inc
rorb
sbb
or
sub
addr16
fildl
or
inc
jle
mov
ficoml
shl
push
lock
jp
xor
fs
jno
addr16
pop
addb
cmp
ficomps
fstpt
lcall
or
mov
sbb
inc
cli
aam
jecxz
xchg
mov
movsb
mov
leave
jo
addr16
push
pushf
in
and
xor
jne
add
scas
inc
cwtl
je
js
xor
xor
clc
mov
mov
lea
movsl
nop
stos
push
fisubl
aas
inc
sub
push
std
ja
out
push
sub
jmp
adc
jg
sbb
aad
enter
leave
cmp
stos
bound
lea
cmpsl
clc
xchg
jp
jp
mov
les
rol
loop
out
dec
cmpsb
mov
cmp
fdivp
mov
jb
xchg
loope
push
aaa
and
xchg
mov
jae
in
test
out
jne
gs
dec
xchg
and
fldpi
jmp
fiaddl
lret
adc
shrb
inc
push
inc
xchg
cmp
les
push
add
cmc
push
dec
and
dec
out
pop
cld
sbb
and
xchg
fidivl
pop
aas
loop
or
das
out
test
inc
insl
shll
pop
mov
lcall
repnz
xchg
cmpsl
cltd
push
repz
push
popa
sub
xor
andl
cmp
out
shr
cmp
loop
stos
movsb
add
lret
fcom
push
xchg
and
pop
rcrl
test
ffreep
mov
xchg
mov
inc
lret
adc
rcll
pusha
dec
in
xlat
push
not
imul
in
out
inc
mov
and
or
jge
mov
xchg
jae
inc
sub
clc
push
mov
cli
out
out
and
pop
push
dec
jmp
dec
test
lret
lock
pop
sub
popf
clc
jecxz
cmp
pop
cmpsb
pusha
and
lcall
add
testl
sbb
push
out
ret
add
adc
inc
jnp
xorps
pop
mov
push
dec
cld
arpl
push
std
adc
cmp
data16
and
imul
orb
rcrl
dec
cmc
mov
aad
push
jne
shll
dec
movsl
sti
jecxz
ret
xor
push
pop
mov
mov
mov
mov
es
mov
hlt
mov
clc
pop
cmp
ds
stos
mov
lcall
mov
ror
ss
aam
and
add
in
push
ret
dec
pop
daa
inc
dec
pusha
sahf
adc
das
pop
sbb
dec
icebp
mov
pop
xchg
and
fldl
pop
out
jo
mov
sbb
inc
adc
mov
call
cmp
ja
pop
mov
cmc
sbb
cld
imulb
cmpsb
fsubr
cmp
pop
repnz
mov
lahf
jo
ss
inc
pop
mov
dec
or
outsl
jo
fstl
sub
xor
sarl
mov
sub
out
push
xchg
jo
push
jecxz
out
or
test
nop
repz
shrb
sbb
idivl
popa
push
faddl
jmp
pop
je
addr16
fstl
ds
sub
or
jl
lods
out
xchg
std
sub
mov
jmp
inc
test
dec
mov
mov
jp
sub
fwait
popf
imul
in
insb
push
fdivs
xchg
and
scas
push
mov
pushl
add
loopne
push
sub
xchg
jle
fisubrs
xor
inc
in
inc
cmp
movsb
out
lss
daa
sub
or
dec
mov
insl
mov
sbb
ficompl
addb
mov
cli
xchg
dec
adc
enter
je
and
ljmp
aam
cld
add
push
pop
push
aad
add
je
int
xchg
xchg
inc
add
loope
rcrl
xchg
loope
test
addr16
push
mov
popf
loopne
add
ret
pop
push
in
data16
adc
js
xchg
jne
jnp
out
jecxz
and
adc
jb
dec
xchg
mov
out
fistps
push
xor
push
inc
mov
sbb
mov
sub
out
insb
hlt
aas
fstpl
jl
inc
clc
pop
xor
jbe
clc
mov
mov
dec
cmp
mov
es
jecxz
mov
outsb
sbb
mull
mov
daa
loop
mov
xor
pop
lods
mov
cmc
cmp
in
inc
inc
push
pushf
pop
in
sbb
lret
cmp
js
fmull
adc
xchg
subl
mov
clc
mov
mov
popf
sub
mov
pop
mov
sub
and
dec
cltd
sub
pusha
xchg
test
mov
es
xchg
mov
lcall
out
dec
inc
shld
jp
adc
inc
or
aaa
jle
push
or
mov
pop
adc
mov
mov
shl
push
xlat
pop
push
pusha
jb
sub
leave
bound
lea
imul
jae
lret
or
pusha
xchg
inc
push
rcrb
rorb
sub
adc
dec
push
push
push
aad
adc
mov
xchg
bound
cmpsb
add
mov
mov
lcall
lret
adc
sub
ficoms
test
xchg
into
incl
stc
sub
mov
pusha
sbb
push
mov
inc
and
add
jbe
pop
and
aam
xor
mov
sti
pextrw
inc
ret
mov
push
cld
cli
adc
mov
test
test
push
push
frndint
stos
shlb
sub
mov
mov
loopne
aam
insl
mov
push
dec
push
arpl
xor
adc
loop
out
loopne
arpl
outsl
cli
jno
dec
fstpl
mov
ds
ds
dec
sub
mov
shlb
or
hlt
fnstenv
mov
stc
js
and
adc
lods
fimuls
jo
cmp
pop
sbb
hlt
test
sbbb
clc
icebp
lret
aaa
sub
adc
jae
jbe
jp
xor
push
mov
push
mov
cltd
push
cmp
jmp
shlb
fldt
insl
fistpl
mov
flds
mov
pop
sahf
push
popf
js
std
jno
faddl
inc
cmp
out
test
cmp
pop
repnz
mov
dec
mov
pop
cmc
xchg
bound
and
pop
mov
movsl
fwait
cld
fsubl
push
jmp
xchg
mov
bnd
jp
mov
ss
roll
mov
lea
mov
repz
mov
iretw
rcr
ss
lahf
dec
jno
popa
repnz
push
into
or
mov
sbb
inc
xchg
scas
insb
in
movsb
mov
jg
jg
push
icebp
shll
push
aas
lret
cmpb
sbb
add
mov
inc
mov
sbb
xor
jp
adc
loope
aas
and
push
iret
pop
imul
mov
push
xchg
movsl
inc
out
repz
js
mov
sub
pop
mov
out
int
and
add
adc
and
sub
jg
dec
out
dec
add
cltd
shlb
cmp
jo
sahf
lods
loop
jo
sub
mov
fcomi
loop
or
xor
push
aad
pop
sarl
ljmp
nop
cmp
mov
jle
xchg
out
cmp
mov
pop
inc
or
and
or
adc
std
jbe
pop
pop
jno
xchg
cmpsl
cmp
inc
test
inc
dec
xchg
pop
jecxz
jg
dec
je
mov
push
outsb
push
adc
and
jae
pop
out
inc
jb
popf
aas
xchg
push
shl
sar
sub
lea
lahf
cld
mov
cmc
dec
jnp
dec
mov
fcompl
xor
cmp
adc
jnp
stos
mov
add
cld
or
cmp
stc
xor
mov
ljmp
fwait
dec
inc
or
call
adc
xor
push
pop
xchg
pop
sbb
xchg
jb
mov
fwait
addr16
lahf
xchg
or
jle
mov
sbb
or
lea
ret
in
fisubrs
insl
mov
or
int
cld
jns
lds
ret
loopne
enter
hlt
dec
loope
or
cmp
into
dec
addl
aaa
cwtl
mov
lods
out
xchg
xchg
jecxz
lods
scas
add
push
repz
jne
enter
sbb
add
push
nop
dec
in
sub
or
lods
cmp
nop
cltd
jae,pn
xor
cmp
sbb
xchg
fwait
mov
insb
out
ret
mov
mov
movsb
fdivl
repz
outsb
sbbl
jnp
mov
mov
lea
scas
xchg
dec
pop
cltd
pop
push
sbb
and
jno
jmp
fstl
cmc
sbb
fxch
add
lahf
ret
ret
out
sbbb
cmp
cli
xchg
dec
xchg
roll
adc
in
mov
iret
mov
in
in
repz
mov
inc
lret
daa
adc
mov
xor
lods
dec
js
ret
cmp
test
into
scas
lret
push
dec
inc
fmull
mov
movsb
jne
lcall
out
jecxz
inc
jle
add
or
dec
jnp
jbe
mov
and
push
push
mov
mov
sbb
popa
mov
call
pop
popa
push
pop
jns
jae
mov
sub
push
mov
clc
in
push
inc
out
push
popa
rcrb
add
adc
es
jns
popf
inc
xchg
ret
cmp
leave
add
mov
mov
movsb
add
aas
cli
jno
andl
ret
mov
push
int
ret
mov
loopne
outsb
loop
mov
in
ja
ror
sbb
mov
pop
insl
inc
sbb
loope
rcrb
pop
push
sahf
pop
xchg
js
or
jl
ja
cmpsb
subb
out
cmp
adc
dec
arpl
stc
push
insb
fwait
or
aad
adc
stos
fstpt
or
mov
stos
notl
fs
xor
sub
in
je
and
gs
mov
mov
lods
xor
add
lods
xchg
loopne
jge
test
mov
sbb
inc
call
jo
jle
ret
sbb
cmp
inc
adc
pop
shll
or
stc
and
cmp
das
or
aaa
push
roll
lock
loope
pop
pushw
xchg
lret
enter
lret
insl
sbb
call
add
cmp
or
pop
lods
lret
negb
inc
repz
cmc
daa
jne
adc
das
movsb
shrb
or
mov
gs
xor
pop
push
dec
push
and
dec
into
scas
inc
push
mov
adc
push
ror
dec
test
enter
sbb
pop
pop
negl
pusha
scas
sub
mov
cmp
cmp
inc
fistpll
dec
adc
add
cmp
cmc
jb
mov
int3
inc
jmp
cmp
add
shlb
rcl
inc
push
jp
mov
shll
dec
into
outsl
jo
cmp
jle
hlt
push
cmp
mov
dec
icebp
in
xchg
pop
fstpt
xchg
xchg
inc
sub
mov
mov
mov
ss
in
mov
scas
mov
ds
ljmp
clc
inc
out
jecxz
fistl
repz
xchg
leave
les
out
pop
xor
push
imul
jnp
std
cmpb
fnstsw
xchg
dec
or
xchg
xor
lret
xchg
and
pop
push
clc
jbe
mull
aad
pop
xor
shl
clc
pop
imul
or
cmp
xchg
int3
mov
xchg
dec
js
mov
sbb
pop
sub
mov
adc
mov
xlat
ret
pop
mov
and
aam
pop
jno
jecxz
or
add
sub
xlat
jl
ljmp
mov
stos
sub
mov
fsubrs
mov
pop
dec
xchg
push
xor
inc
and
js
mov
shrb
aad
push
loope
and
imul
dec
scas
inc
mov
xchg
or
push
mov
fs
xchg
sub
pop
loopne
xor
into
je
lods
outsb
in
jecxz
sbb
jle
lock
fsub
inc
hlt
lahf
vpunpckhqdq
rcrl
and
push
rorl
dec
aaa
jns
and
mov
mull
mov
test
pop
in
ret
cmp
xor
out
ret
sbb
pusha
and
add
cmp
xlat
dec
mov
das
mov
pop
mov
cmp
mov
jl
popf
test
bound
jl
call
inc
push
xchg
shr
fs
xor
fst
imul
xchg
push
out
inc
insb
xchg
cmp
ret
xchg
pop
lods
pop
dec
test
and
stos
cmp
sub
add
push
lds
jae
lret
mov
cli
gs
jno
mov
mov
or
xor
add
xorl
out
popf
cwtl
jbe
push
inc
cwtl
sbbl
incb
lea
sub
and
testl
mov
fmul
sar
xchg
aaa
lods
push
bound
push
out
mov
mov
add
dec
test
and
stos
fadds
js
cs
pop
into
aas
push
mov
pop
mov
lahf
mov
jbe
out
mov
out
and
mov
push
sbb
movsb
sub
test
sbb
les
push
sub
dec
out
cmpsl
adc
add
loop
mov
call
icebp
negb
cld
dec
movsb
ret
jge
in
stos
and
shld
in
popa
pop
cmp
insb
adc
into
push
ret
mov
jle
lods
mov
add
insl
mov
sub
outsb
scas
cmp
out
incb
and
aad
sahf
enter
adc
hlt
jl
out
popa
push
mov
les
fildl
mov
add
add
cwtl
dec
dec
fildll
mov
out
add
mov
out
and
pop
mov
out
fwait
pop
nop
add
mov
arpl
and
insb
out
lret
sub
push
xor
xor
enter
push
sub
push
mov
jns
sub
and
adc
jecxz
insb
dec
or
xor
cmp
mov
cwtl
xchg
pop
les
and
xchg
orl
clc
mov
in
std
add
xor
pushl
jo
push
js
or
int3
mov
in
test
pop
fbstp
les
int3
xor
ljmp
iret
insb
sbb
xchg
adc
inc
adc
dec
lret
sub
stos
aas
cltd
mov
sarb
push
adcb
add
pop
dec
cli
imul
jmp
sbb
mov
shrb
fcmovbe
loop
mov
jl
mov
sarl
jge
cmc
push
addr16
cmc
das
call
mov
subl
mov
and
add
dec
insb
cmpsb
push
jg
sbb
jl
jecxz
jge
stc
mov
sub
jo
insl
add
fimuls
cmp
je
jno
pop
dec
cmpsb
sbb
mov
cmp
js
and
lret
xchg
mov
pop
mov
push
mov
xor
repz
mov
pushf
push
mov
cmp
std
pushf
jnp
stos
in
xor
sbbl
dec
sti
ss
decb
out
fdivrs
sbb
sti
shll
mov
lcall
sarb
xor
mov
mov
in
mov
daa
inc
mov
mov
xchg
add
push
jp
insb
pop
pop
and
adc
or
nop
dec
push
mov
pop
or
cmpsb
xor
sbb
cmpsl
jecxz
cvttps2pi
adc
pop
xchg
cmpsb
or
dec
gs
inc
lock
mov
mov
aad
push
sar
cmp
lcall
inc
cs
or
xchg
in
mov
sub
xor
mov
push
arpl
rorl
mov
push
push
mov
jle
jmp
psrlw
cltd
pop
add
popa
adc
xor
js
in
push
push
xchg
iret
jne
es
mov
xlat
jmp
int3
pop
sti
imul
jle
push
sub
pcmpeqw
int
and
and
add
loope
sub
in
and
cld
fs
xor
adc
stos
xor
mov
jg
sti
add
scas
jmp
jge
insb
sbb
sbb
cmp
sahf
push
adc
push
inc
pop
dec
pop
popf
fnstcw
pop
mov
mov
jns
cmp
mov
cli
cmp
jle
in
in
rolb
ret
inc
jnp
mov
push
pop
inc
out
cmp
pop
scas
inc
pop
sarb
inc
cwtl
leave
xchg
out
sub
dec
and
mov
in
ja
rclb
std
lds
xchg
insl
das
fwait
sub
imul
mov
xor
mov
pop
or
jmp
push
add
sub
or
fcomp
outsl
icebp
jo
fldl
mov
outsl
inc
insb
jmp
push
ja
push
sub
and
adc
pushf
dec
mov
add
les
and
xor
xor
xchg
bound
mov
push
mov
jecxz
test
js
arpl
jne
push
mov
push
lret
lret
adc
arpl
cltd
pushf
jne
das
mov
aaa
jns
inc
std
lahf
cmp
aam
mov
xchg
jle
mov
pop
sbb
fmull
jmp
or
pop
icebp
test
pop
lods
mov
jmp
push
adc
adc
or
push
add
out
fstp
mov
in
inc
lock
mov
jo
push
and
hlt
out
push
rorb
sbb
inc
cmp
dec
lods
stos
shrl
pop
xchg
cmpsb
fidivs
push
into
rcr
add
xchg
test
leave
or
scas
cli
lcall
lcall
dec
in
ret
inc
mov
aaa
xor
aaa
ror
std
jmp
sbb
fldt
aam
mov
stos
mov
out
lcall
push
cld
add
shl
jbe
xchg
jmp
mov
cs
cmp
clc
xchg
pop
test
mov
cmc
rcrb
cmpsl
das
push
mov
fldcw
lods
pop
adc
es
pop
shl
pushf
test
jbe
xor
sub
dec
pop
add
daa
xlat
mov
xor
enter
mov
inc
push
mov
enter
leave
lret
xchg
mov
mov
stc
inc
xchg
push
shll
xchg
add
aam
aaa
cmp
xchg
scas
cmp
cmp
movsb
mov
inc
shrd
add
test
sahf
aaa
xchg
jle
sub
jno
add
mov
shlb
nop
mov
jbe
outsl
mov
out
xchg
fcomp
cld
int
cli
sarb
and
les
pop
sub
dec
mov
incl
pop
and
daa
mov
push
out
pop
push
repnz
mov
jbe
adc
test
xor
jae
dec
inc
and
cmp
fsubrs
adc
jne
mov
sbb
out
leave
xchg
cwtl
mov
mov
mov
mov
dec
in
jns
pop
insl
lock
push
mov
mov
rolb
lods
dec
add
mov
sub
xchg
sbb
inc
xor
jo
xchg
inc
insb
add
rcrb
outsl
ret
ret
repz
stos
pop
cs
lret
lock
lahf
es
call
jae
mov
pop
ja
mov
stc
icebp
sahf
pusha
in
add
mov
outsl
jae
int3
addl
sbb
cmp
nop
je
sub
sub
sahf
fs
push
je
xor
sbbl
pop
scas
mov
mov
dec
mov
and
clc
pop
jne
inc
cmc
scas
mov
add
cs
rorb
or
jns
add
add
enter
mov
out
push
jmp
jae
clc
mov
jne
int
fptan
pop
in
jecxz
xchg
cmp
repz
push
mov
repz
ds
fildll
inc
sti
push
adc
dec
in
outsb
repnz
pop
loopne
add
enter
fidivs
mov
push
out
pusha
mov
enter
popa
and
lret
pop
lods
or
shlb
dec
daa
movsl
mov
push
cmp
cmp
out
cmp
fcmovne
mov
js
push
and
stos
mov
fcoms
jmp
adc
rcrl
pop
pop
shrb
mov
clc
xchg
cmp
dec
cmpsl
ds
push
push
jmp
xchg
push
lret
dec
mov
aam
outsl
push
pop
push
decb
xchg
adc
fwait
dec
jne
adc
xor
test
jl
stc
jae
test
mov
xchg
popa
ss
mov
jne
out
mov
js
inc
sbb
or
xor
mov
test
jge
call
stos
into
mov
push
mov
mov
adc
or
imul
push
sbb
and
sub
aam
outsl
scas
pop
out
pop
aaa
adc
dec
out
cld
pushf
out
fs
lret
or
push
cmp
loop
add
cmp
jecxz
movsl
movsb
jnp
cmp
popa
clc
notl
in
inc
insl
aad
dec
xor
mov
xor
repz
jmp
mov
inc
cmp
mov
andb
bound
rclb
scas
xchg
jg
iret
aaa
or
sub
lock
xchg
idivl
call
je
push
mov
mov
sbb
aas
test
push
into
rclb
xor
lahf
aaa
jg
iret
mov
aaa
jp
rolb
adc
mov
cli
mov
aam
and
add
outsb
fisubs
adc
sub
shlb
or
push
mov
cmp
rcrl
or
iret
dec
je
rolb
arpl
outsb
jno
sbb
pop
cmp
jb
sbb
push
addr16
or
lret
push
into
mov
jmp
cmp
push
mov
push
iret
inc
mov
mov
sahf
shrb
inc
and
inc
daa
cmpsl
inc
mov
rorl
pushf
mul
xchg
ja
cwtl
sub
mov
jbe
cmp
push
fs
push
psubq
lock
pop
xchg
jne
add
rcll
lods
cs
cmp
fsubrl
shrb
mov
mov
mov
jns
stos
xor
test
aam
inc
pushf
out
clc
or
ja
mov
addr16
jo
addr16
das
mov
fsubl
dec
xor
outsb
xchg
imul
scas
xchg
icebp
out
ja
adc
pop
xlat
jno
inc
loopne
pop
pop
adc
pusha
movsl
sub
in
sub
and
adc
inc
xchg
orl
lock
push
xchg
pmaxub
movsl
gs
int3
insb
mov
jno
loope
movsl
aad
inc
gs
rcrb
inc
fucomi
xchg
es
jge
cli
mov
rclb
int
pusha
rorl
and
add
sub
sbb
mov
fisubrs
inc
das
sahf
rcrl
fs
pop
inc
pop
sub
xchg
xor
stc
dec
daa
mov
ss
pop
mov
fidivrs
ljmp
add
xor
ljmp
push
jae
xadd
std
xchg
mov
or
or
pop
mov
jbe
pop
sahf
xchg
mov
mov
arpl
adc
jo
and
sbb
pop
sbb
sbb
fiaddl
mov
decb
dec
and
xchg
ret
pop
in
scas
stos
adc
cmp
inc
cmp
dec
test
nop
shlb
sbb
dec
add
daa
and
scas
xor
insb
add
mov
in
and
fldt
sub
mov
pop
cld
mov
and
push
jge
int
jle
xor
mov
outsb
cld
add
jbe
cltd
jno
loop
sbb
or
subb
repnz
pop
cmpsb
cld
xor
sbb
out
dec
pop
xchg
mov
sub
dec
and
arpl
in
mov
std
rorb
das
xor
pushf
shrl
pop
movsb
cmpsb
sub
fimull
cmc
xchg
mov
fsubl
scas
fidivl
jne
lock
jecxz
mov
xchg
orl
frstor
sub
jnp
aad
pop
pop
sbb
lea
add
test
imul
sub
xchg
push
jne
popa
dec
sahf
pop
xchg
xchg
dec
lock
loop
cli
mov
test
inc
fistps
inc
pop
daa
dec
lock
int3
add
std
pop
loopne
mov
cmp
pop
mov
dec
lahf
mov
hlt
dec
inc
mov
std
inc
cmp
and
into
cmp
pop
jo
mov
mov
fisttps
aad
mov
aad
jl
std
jns
js
sbb
clc
sbb
mov
in
sbb
fnstenv
outsb
or
adc
stos
pop
cmpsb
or
sbb
pop
xchg
rorl
inc
jg
ja
adc
cmp
ret
shll
sbb
mov
or
test
call
mov
push
lcall
or
jmp
aaa
push
incl
fisubrs
cmp
xchg
shll
sahf
addr16
dec
fisttpl
cmc
adc
mov
into
inc
in
mov
push
mov
jns,pn
mov
pushf
push
stc
mov
adc
imul
mov
and
mov
xor
sahf
xlat
push
call
lock
push
jnp
jmp
out
testb
in
jb
aad
sti
push
pop
push
fnsave
rcrl
imul
pop
out
lahf
jp
jecxz
cltd
push
fisttpl
arpl
insb
xor
mov
add
mov
int3
popa
or
dec
mov
stos
sbb
push
xor
mov
test
leave
repnz
sbb
movsl
outsb
into
iret
push
cmc
push
mov
addr16
xchg
xchg
nop
ljmp
jns
ret
push
mov
outsb
rcl
lcall
add
test
xchg
xor
inc
xchg
das
jmp
add
sbb
cmp
clc
sbb
lcall
cmp
outsb
sbb
in
and
cli
fdivs
mov
push
xchg
pop
addr16
and
dec
mov
cmp
insb
add
rorl
fwait
add
repz
scas
xchg
inc
stos
ds
les
into
mov
bound
mov
and
cli
jne
push
inc
xor
in
and
jecxz
outsl
mov
mov
mov
cmc
imul
ss
mov
test
loope
mov
cmp
push
push
out
xchg
daa
imull
int
fldl
inc
lods
jnp
lea
sub
mov
aas
call
mov
xorl
mov
push
inc
mov
movsl
leave
mov
mov
popa
jns
orl
mov
je
hlt
xorl
xor
popl
adc
pop
mov
adcb
xor
xchg
lea
scas
mov
xchg
pop
jns
ret
sbb
adc
push
push
fnsave
push
std
cmp
outsl
inc
mov
rolb
fistpl
fdivp
dec
pusha
mov
mov
dec
jns
mov
mov
jne,pt
int3
das
insl
aas
inc
shrl
cmp
daa
cld
jne
inc
jno
sub
jnp
xor
icebp
daa
aaa
inc
push
mov
dec
testb
inc
cld
pop
push
lods
repnz
ret
dec
pop
push
in
pop
stos
fiaddl
xlat
cmpsl
or
loop
push
and
ljmp
stos
mov
dec
sub
sahf
xor
sub
notl
lods
out
std
cmpsb
or
mov
inc
inc
mov
sti
sub
jne
mov
insb
adc
enter
clc
aam
pop
add
imul
scas
icebp
sub
jecxz
cmp
loopne
int
cmpsb
adc
mov
js
add
cmp
mov
push
jno
add
or
sub
repnz
and
std
in
push
jnp
mov
inc
loop
lret
jmp
ret
mov
fcoml
push
jecxz
dec
lcall
jne
mov
popa
pop
and
and
mov
loope
int3
xchg
mov
and
and
hlt
pop
xchg
mov
jno
adc
std
push
rcrb
cmp
cmpsl
stc
sbb
std
adcb
cwtl
pop
std
pop
icebp
push
inc
sbb
jecxz
xchg
jl
jecxz
mov
in
test
xor
dec
or
xchg
mov
fcompl
ss
xchg
dec
or
mov
push
mov
pushf
pop
push
jne
add
or
gs
repz
sbb
out
stos
por
rcrl
inc
fwait
cmp
dec
inc
dec
stc
movsb
jne
icebp
add
adc
imul
push
pop
leave
push
and
shll
or
dec
cmpsb
xchg
mov
or
jo
inc
paddq
jmp
sti
js
inc
frstor
out
int3
lcall
shlb
mov
inc
nop
push
adc
pop
jne
jp
pusha
xchg
jnp
in
fnstenv
stos
es
pop
es
mov
xchg
popa
aam
lock
int
adc
pop
call
insl
arpl
call
sti
xlat
push
mov
ljmp
jne
mov
xor
jg
aaa
xor
mov
push
sti
shl
xlat
inc
popf
mov
xor
xor
mov
push
out
dec
inc
push
icebp
loop
mov
sahf
jne
lcall
mov
int
fstpt
mov
or
pmulhuw
mov
and
sub
fxam
pop
xchg
dec
nop
or
cvtdq2ps
mov
int3
mov
or
mov
mov
popa
cmp
mov
cli
lds
lock
sbb
sbb
es
or
sbb
adc
std
hlt
mov
popf
ficompl
lret
cmp
cmpsl
test
shrb
fs
pop
movsl
lcall
test
fs
outsl
shl
into
ret
dec
sbb
dec
jne
xchg
mov
int3
in
std
lock
push
aas
out
jmp
ret
fisttpl
sub
lret
push
imul
addr16
cmp
push
int3
cmp
mov
or
xchg
cmp
push
dec
ret
test
test
jmp
inc
ret
lods
les
xchg
xchg
sbb
arpl
das
mov
out
pop
mov
les
inc
mov
int3
jo
cmpsl
ds
adc
mov
fs
push
loopne
xcrypt-ofb
cmpsl
sub
push
dec
or
lret
sub
sub
in
pop
or
mov
add
jne
mov
stc
out
mov
xchg
cltd
in
frndint
or
vpaddsb
imul
push
out
or
or
gs
sub
hlt
xchg
pop
mov
leave
and
pop
inc
out
fmul
push
adc
fistpll
pop
lock
adc
and
mov
enter
shll
repz
xor
mov
scas
or
pop
imul
rorl
data16
dec
cld
adc
mov
mov
pop
aas
shlb
mov
xor
imul
test
dec
je
ljmp
cs
ss
jmp
jb
and
stos
adc
add
adc
mov
sbb
out
mov
pop
pop
in
jo
cmpsl
mov
pop
add
lock
pusha
mov
shll
cld
outsb
adc
shlb
jo
mov
scas
inc
push
std
les
popf
dec
sbb
popf
data16
sarb
popf
clc
jnp
sbb
pop
loope
shll
xchg
cltd
cmp
mov
rcrb
mov
stos
dec
into
and
call
jns
dec
test
cmp
insl
das
leave
cltd
fwait
imul
cmp
xlat
test
adc
push
pushf
jo
movsb
jmp
inc
pop
add
jnp
cmpsl
mov
xlat
rorb
aad
out
lods
xor
cmc
mov
mull
xchg
in
cmp
in
test
aam
les
cmp
sbb
mov
jecxz
xchg
or
out
std
sarl
jno
movsl
cmp
push
mov
push
rorb
pop
adc
mov
pop
lahf
loopne
icebp
inc
cs
jecxz
aad
jmp
pop
mov
mov
push
fidivs
out
and
jg
cmpsl
stos
int3
hlt
lret
fstpt
fdivr
scas
outsl
stos
jmp
fwait
xchg
lahf
add
pop
insb
popa
ljmp
push
add
repz
mov
aaa
ret
scas
ret
ss
sbb
push
pop
push
add
push
fisubrs
mull
negb
cmc
dec
cmp
jbe
pop
fbstp
data16
std
pushf
lods
cmp
in
clc
cmpsb
rcll
fimuls
call
mull
xchg
in
and
pop
push
mov
mov
cltd
mov
add
sti
fdivrl
sbb
xor
inc
pop
cmp
sarb
cmpb
mov
imul
incb
hlt
pop
popf
test
pop
pop
mov
cmc
dec
mov
lods
into
xor
test
out
stos
dec
pop
pop
add
fwait
mov
xor
cs
push
gs
xlat
cmc
mov
mov
ret
add
adc
hlt
pop
into
in
sub
push
outsb
dec
dec
sub
push
and
lds
out
dec
jl
cwtl
loopne
icebp
push
test
inc
aad
pop
sub
push
or
mov
xlat
jl
lahf
movsl
mov
sbb
test
and
fucom
ja
inc
jge
jns
les
and
lcall
mov
push
mov
fwait
mov
mov
jae
xchg
stos
lret
stos
xlat
adc
addl
adc
push
xchg
rcrb
lods
adc
lcall
sbb
iret
lods
repz
popf
xor
fwait
cs
lcall
xor
add
lods
lea
push
pop
cmpsl
sbb
xor
mov
and
push
clc
jmp
sub
popf
push
mov
stos
xor
xchg
jne
xor
dec
push
popa
mov
and
push
mov
or
dec
in
mov
push
dec
pop
ljmp
pushf
fsubrl
dec
or
shr
mov
jne
lcall
and
dec
adc
mov
and
adc
mov
pop
insb
scas
inc
in
push
push
push
ss
out
test
dec
add
or
aam
xchg
xchg
adc
sub
adc
xchg
lret
loopne
out
int
xchg
push
cmc
jns
xlat
jae
jmp
out
or
push
ja
clc
sbb
addr16
sub
or
pushl
out
push
rcll
nop
les
add
iret
popf
out
dec
push
mov
stos
push
mov
cli
mov
test
out
in
jp
ds
push
jp
xor
xchg
mov
and
adc
xor
dec
mov
mov
shlb
mov
jae
and
pop
mul
or
imulb
and
jbe
and
push
in
lock
jl
adc
xchg
hlt
subb
jbe
in
repnz
out
mov
inc
sahf
cmpsl
popf
and
movb
clc
cwtl
imul
stc
mov
jb
jle
cld
rcll
mov
xorb
mov
add
inc
mov
push
pop
fdivs
push
and
outsb
or
mov
mov
xor
add
jmp
lock
sub
mov
mov
push
loope
adc
aam
inc
mov
adc
sahf
adc
xor
mov
cmp
fs
push
mov
add
dec
lods
loop
repnz
ss
mov
or
call
popa
adc
aam
data16
pop
jp
mov
jmp
ds
xor
adcl
mov
jae
sub
stc
add
jmp
cmp
shll
or
add
aad
pushf
fistpl
mov
xchg
movsl
cmp
pop
pop
push
addb
sbb
mov
lret
lods
pop
cmp
and
add
dec
add
inc
sti
cmp
lods
rolb
xor
and
push
sbb
daa
gs
shr
negb
dec
push
push
pop
and
inc
mov
enter
mov
fxch
sbb
subl
mov
cmp
cmp
outsb
xchg
fdivp
in
movsl
jl
xor
test
aad
pop
adc
jb
cld
fwait
mov
xor
mov
ret
ljmp
adc
xchg
sbb
insb
mov
fcompl
lret
add
sub
lret
jne
scas
ja
jnp
mov
js
mov
daa
jl
or
scas
sbb
sti
jne
clc
movsb
out
lds
test
or
xchg
loopne
out
fisubs
adc
xchg
jno
push
and
mov
test
bound
adc
sub
jl
lahf
sbb
inc
fldcw
lcall
fs
imul
or
xchg
movsb
mov
push
jno
fists
and
lods
es
jecxz
sbb
cwtl
xchg
mov
dec
cmpsb
lahf
stos
xchg
aas
lock
clc
dec
loop
sbb
cmc
popf
sub
in
in
xchg
mov
inc
jne
shrl
pop
sub
stos
cwtl
test
stos
in
mov
loope
sub
mov
je
mov
mov
inc
adc
fsubrl
dec
sub
out
in
cld
xlat
fwait
mov
aas
sub
mov
movsl
roll
cmp
push
fidivl
dec
sub
fcoms
sbb
stc
subb
sub
das
xchg
push
sbb
inc
mov
push
add
cmp
jle
lret
mov
xor
pop
mov
adc
or
in
push
push
das
sub
mov
jg
mov
loope
test
repnz
enter
mov
cmpsb
insl
lds
cmc
mov
in
in
xor
cmpsb
ror
cwtl
dec
icebp
pusha
lock
jle
or
xor
shl
inc
outsb
mov
inc
in
and
fists
jl
bound
pop
out
fcoml
lods
in
or
xchg
inc
mov
dec
nop
andl
inc
xchg
mov
pop
lret
ja,pn
in
mov
adc
ret
dec
sahf
shrl
pop
imul
push
and
jmp
insb
cmp
adc
dec
push
or
into
into
lea
push
movsb
in
test
mov
jne
and
test
ljmp
jae
sar
sar
pushf
mov
jb
mov
aaa
out
neg
js
jg
push
push
pop
sub
jmp
and
pop
jb
gs
sbb
add
cld
js
xchg
jne
movsb
cmc
add
jle
aad
jmp
mov
ret
sub
pop
fcomp
ds
int
jl
mov
push
fsubl
jg
ror
cs
push
pop
imul
jb
mov
pop
and
jecxz
in
add
mov
mov
ja
imul
fcoml
popf
lcall
insb
mov
fdivrl
popf
mov
fadds
mov
jns
fcoms
icebp
fisttps
mov
enter
rcr
cmpsb
lock
cmp
out
pop
fcomi
imul
lret
xchg
xchg
add
aas
pop
jmp
dec
arpl
add
into
xchg
fs
or
or
cmp
xchg
in
jl
mov
sbb
jp
cmpsl
mov
xchg
adc
pushf
jne
mov
mov
adc
cmc
mov
repz
cmp
aaa
enter
aam
loopne
push
gs
lcall
and
fsubs
insl
mov
sbb
movsb
jno
fildl
xchg
aas
mov
cld
out
divb
cmp
sub
xchg
insb
clc
cmp
jp
push
mov
dec
xorl
scas
lods
pop
arpl
nop
ja
inc
icebp
xor
test
jle
mov
mov
jle
or
xor
jnp
popf
sub
and
cmp
mov
push
ljmp
push
stc
aad
gs
out
sti
ret
or
push
hlt
lret
or
cmp
psllw
push
and
push
pop
jp
jg
pop
rcrb
xor
pop
sub
push
push
scas
fadds
xor
xor
adc
jne
pop
dec
in
insb
mov
xor
jne
push
out
mov
dec
xchg
cmc
in
cs
inc
pusha
rorb
cmp
pop
mov
mov
and
gs
and
lcall
ds
lds
lds
mov
cvtps2dq
roll
inc
mov
lret
inc
adc
daa
cld
mov
mov
add
in
scas
jns
lret
adc
sub
mov
fldcw
mov
push
imul
jb
sbb
jae
movsl
dec
cltd
mov
ss
mov
fwait
out
and
add
xchg
or
dec
js
dec
inc
lds
andb
inc
out
add
cld
out
mov
loop
xor
fstpl
test
sub
sbb
stc
xlat
jle
shl
les
lods
fmuls
jg
add
mov
pop
sbb
out
fucomi
lea
push
dec
mov
fs
idivl
inc
jecxz
xchg
int
or
xchg
xor
imul
adc
test
ss
fidivrs
sbb
cwtl
xlat
and
movsl
loop
sar
in
pop
adc
ljmp
repz
mov
adcb
sub
movsl
mov
mov
bound
mov
leave
xor
jge
int
jb
scas
cmp
lds
orb
inc
pusha
gs
ficomps
inc
xchg
xchg
cld
mov
outsl
test
jl
add
and
lds
movsb
in
jae
sub
mov
js
popa
pop
incb
mov
pop
aas
addr16
addr16
in
mov
ja
addb
or
xchg
test
xor
enter
rolb
shl
xchg
in
or
stos
jp
push
pop
cwtl
fcom
and
adc
out
sti
sub
leave
ret
jns
mov
lret
push
add
jne
enter
jmp
add
push
push
xor
lcall
xlat
or
push
fdivrp
enter
je
out
into
inc
push
jo
xchg
test
popa
cmpsb
sbb
ljmp
gs
mov
es
loopne
mov
and
pop
mov
mulb
cmpsb
push
pop
outsl
pop
popf
pop
jae
cmp
push
sbb
sub
push
notb
adc
pusha
fistpll
ret
adc
and
lret
jae
ja
dec
inc
out
mov
xchg
pushf
rorl
jnp
aaa
faddl
clc
icebp
popf
inc
jl
xchg
lods
popa
ss
shl
out
rorl
movsb
mov
stc
xor
xor
pop
pop
mov
dec
add
fcmovbe
sub
in
test
pop
jmp
ljmp
mov
xor
out
xor
cwtl
inc
sbb
xor
clc
pop
popf
lds
dec
es
shll
pop
and
fs
xchg
in
leave
inc
fcomps
cmp
and
sbbl
mov
pushf
cmp
mov
aam
xchg
dec
out
lcall
cmp
les
inc
pop
jge
rcrl
loope
jge,pt
xor
pop
push
sbb
mov
out
movsb
mov
push
xchg
lgs
mov
adc
xor
in
mov
lret
lahf
jb
jmp
stc
sub
loope
pop
dec
push
mov
lds
dec
jmp
insl
xchg
in
into
inc
into
std
cmp
inc
out
data16
adc
inc
xor
inc
loope
and
push
das
xchg
fdivr
and
adc
int3
enter
cwtl
add
jge
mov
fdiv
sbb
int3
in
aam
add
addr16
inc
xor
mov
pusha
hlt
push
enter
in
push
add
insl
dec
out
out
mov
xchg
xchg
mov
jle
xor
loopne
das
pusha
push
out
mov
in
data16
pop
imul
xchg
pusha
cld
ja
mov
stc
cmp
out
mov
push
adc
shll
add
mov
cli
cwtl
mov
mov
add
mov
arpl
iret
adc
aad
mov
adc
cld
xor
xor
mov
aaa
sub
call
sbb
in
dec
or
and
or
sub
sbb
sub
and
xor
js
loopne
push
fadd
js
movb
cmp
lahf
mov
mov
popa
jns
nop
mov
adcl
arpl
in
xlat
ljmp
out
jnp
inc
incl
sub
mov
lea
and
jle
ret
shlb
ret
push
jne
xchg
inc
fistl
daa
mov
stos
imul
mov
int3
fdivrl
sub
sbb
xlat
les
pusha
repz
inc
push
dec
mov
mov
mov
repnz
nop
dec
int
loopne
push
pop
rolb
sub
nop
lods
sbb
inc
out
int
in
or
je
inc
fstpl
and
add
pop
dec
cmpsb
jbe
lods
pop
lret
push
pop
mov
xchg
push
xchg
loopne
fidivs
xchg
cmpsb
outsl
bound
and
push
lret
stos
scas
inc
push
mov
nop
aad
mov
and
stos
sbb
cmp
lock
and
fistl
test
stos
push
xor
xorl
sbb
inc
jbe
mov
es
xor
psubb
pop
loopne
loopne
pop
testl
jo
inc
jae
test
ret
lock
jns
jno
fcmovb
push
movsl
popf
popa
es
mov
mov
mov
shlb
lahf
imul
mov
rcrl
push
xor
xlat
shlb
adc
or
sub
add
imul
pusha
movsl
mov
inc
xlat
sub
or
and
inc
leave
orl
pop
mov
out
imul
bound
jp
int
es
mov
popf
leave
sbb
inc
jle
pop
lock
xor
jo
jno
lods
mov
mov
mov
lcall
adc
fstpl
outsb
je
cmpsb
ret
cwtl
mov
pop
popf
or
fiaddl
pop
or
xchg
movsl
dec
adc
ljmp
mov
sbb
sbb
pop
outsb
or
sbb
mov
cmpb
sbb
jle
enter
mov
pop
cmpl
push
adc
or
subb
xlat
into
fs
test
adcb
xor
push
aad
sub
cltd
dec
sbb
mov
add
jecxz
and
addr16
es
fnstcw
jnp
jns
mov
pop
xchg
pop
sti
sbb
arpl
outsl
gs
or
push
stc
dec
mov
inc
mov
push
sbb
sbb
xor
pop
pop
ds
dec
lock
mov
movsb
pop
mov
cwtl
mov
add
unpckhps
jmp
ret
fwait
push
push
mov
mov
sbb
int3
push
adc
xor
jecxz
and
mov
rclb
xor
loop
sub
loopne
sbb
push
scas
fcompl
xor
popf
mov
xlat
notl
cmp
aas
hlt
dec
fstps
ja
hlt
loopne
adc
pop
ds
test
inc
push
addr16
subl
xchg
imul
jne
xchg
popf
fwait
push
js
inc
fsub
mov
cmp
fdivrl
jge
cld
lds
add
rorl
or
lcall
cmp
aad
loopne
fidivrs
mov
sbb
xchg
aas
repnz
insb
ror
inc
popa
clc
popf
sbb
mov
jb
sub
jge
scas
jmp
cmp
fistl
jbe
xchg
enter
and
std
pop
sub
cld
shlb
dec
mov
ret
push
cmp
add
jmp
imul
dec
lret
mov
loop
push
jae
lds
mov
dec
mov
push
jo
pop
and
enter
test
popf
ret
jae
jo
add
dec
out
or
add
rcl
iret
lcall
inc
sahf
add
or
lods
jg
scas
out
leave
mov
cwtl
aas
repz
sub
insl
pop
mov
int3
enter
cmp
pop
and
ja
scas
js
ss
cmp
inc
xor
jae
cmpsb
arpl
dec
xor
fadds
sbb
notb
outsb
sahf
outsb
xchg
movsl
add
push
push
add
ja
bound
push
pushf
push
in
inc
lret
jne
inc
and
popl
pop
cli
jae
rcl
ja
jl
mov
add
and
stos
sbb
inc
inc
xor
mov
aaa
mov
lods
pop
scas
fdivrp
in
cmp
clc
dec
xchg
int
inc
inc
push
and
aas
push
or
addr16
fcmovnu
lahf
mov
xor
ja
inc
bnd
adcb
cwtl
insl
push
mov
add
dec
aaa
nop
dec
repnz
je
adc
xor
mov
sub
push
rorl
outsl
mov
lcall
call
test
xchg
jb
lods
in
incb
test
ds
pop
pop
jo
jae
outsb
pop
cwtl
add
test
sub
cltd
jae
aad
mov
out
je
mov
cmp
jb
scas
rorl
pop
repz
mov
sub
lds
or
iret
movsl
das
or
dec
jl
jne
jo
sbb
scas
int
pop
jge
push
and
sahf
pop
or
addr16
pop
mov
xlat
pop
mov
iret
stc
mov
js
iret
mov
mov
fs
rdtsc
inc
loope
or
in
stos
jo
jmp
cmc
subb
mov
mov
cmp
mov
sbb
jl
nop
loope
repz
stc
pop
xlat
inc
mov
pop
test
xchg
add
loope
pushf
mov
lods
xor
pop
loopne
cld
cld
out
pop
mov
or
test
add
add
mov
dec
cmpsl
fsub
fadds
or
mov
fistps
pushf
mov
cmc
inc
rcrb
and
subb
loopne
stos
push
pushf
orb
insl
push
pusha
test
dec
in
inc
call
add
not
lret
cmpsl
cmp
rolb
js
adc
xchg
lds
push
ss
movsl
mov
mov
add
lret
nop
ja
sbb
add
adc
jae
ss
mov
mov
adc
dec
dec
mov
imul
ljmp
jl
repnz
stos
jp
add
dec
test
cs
push
mov
mov
arpl
mov
out
inc
test
aaa
fs
pop
iret
lock
or
mov
enter
imul
xor
je
loope
or
bound
and
imul
jne
fsubp
sub
xchg
adc
stc
push
in
outsb
xor
xchg
dec
or
inc
push
clc
push
jg
idivb
inc
xchg
mov
orb
rcr
dec
jmp
add
mov
out
push
fcompl
enter
out
sbb
loop
add
repz
cwtl
scas
loope
inc
push
dec
mov
sub
cmp
mov
mov
dec
fsub
fs
outsl
xchg
ljmp
xchg
sti
sub
in
jae
and
inc
test
dec
es
dec
push
imul
jge
into
mov
imul
mov
inc
imul
es
ja
inc
imul
fidivl
sbb
sub
push
nop
mov
inc
and
hlt
jp
mov
lods
adc
lret
fwait
mov
sub
xchg
xchg
imul
lods
sbb
mov
fwait
test
jg
cmp
lret
je
orl
mov
aas
and
jne
jp
mov
scas
test
fsubrl
jmp
bound
mov
mov
add
icebp
add
xor
sub
pop
sub
inc
pop
jo
sbb
and
int3
mov
and
lea
push
sti
fadds
leave
add
sbb
mov
lods
xchg
imul
add
or
sub
sbbb
stos
cwtl
xor
in
or
xorb
jbe
adc
inc
bound
and
test
scas
push
in
xchg
notl
push
hlt
xor
test
aad
inc
sbb
cmpsl
out
mov
pushf
cmp
iret
jo
lcall
stc
xchg
dec
xchg
mov
push
dec
in
dec
jb
pop
push
sub
rcrb
adc
sbb
das
cmp
lds
sub
adc
pop
lock
xchg
push
mov
adc
sar
pusha
push
dec
dec
daa
fwait
outsl
in
lock
insl
add
xchg
imul
push
or
negl
imul
cltd
lret
xchg
aad
xchg
jle
dec
testl
stos
in
mov
inc
sahf
sub
cmpsb
mov
xor
mov
addr16
js
xchg
or
stos
or
ljmp
iret
gs
loop
mov
xchg
or
dec
xor
js
push
xlat
aas
sbb
push
stc
bound
cmpsb
dec
mov
add
loop
iret
cwtl
je
insb
imul
arpl
jl
js
jmp
insl
xchg
and
push
mov
addb
fstp
or
pop
adc
popa
xchg
and
aad
sub
push
xor
inc
aas
jmp
ret
cmp
dec
push
das
or
jno
leave
cltd
divb
push
sub
mov
arpl
add
add
push
or
jo
xchg
faddp
add
cmp
fxch
cmpsl
inc
xor
add
mov
mov
pop
or
sbb
sahf
data16
lret
enter
aas
popf
cmp
xor
sarb
xchg
cmpsb
test
pop
rcpps
in
inc
sub
scas
ret
test
jns
sub
rorl
pop
mov
xchg
xor
sbb
pop
call
push
ljmp
jne
add
in
fcompl
sbb
lret
jg
fucomip
adc
test
out
sub
stc
cmpsl
jecxz
cmp
test
push
je
push
andb
cmc
test
mov
ficompl
sahf
push
mov
jnp
mov
stc
mov
adc
mulb
hlt
imul
pushf
mov
dec
sahf
lret
bound
in
cwtl
dec
nop
adc
aad
pusha
mull
insb
sub
dec
xor
pop
pop
mov
fsubs
dec
mov
loope
add
dec
pmulhw
ret
mov
cmp
lcall
xchg
ret
test
leave
subl
adc
ja
jns
mov
mov
cmc
loope
mov
mov
push
mov
je
cwtl
leave
sarb
jp
cld
scas
das
test
mov
ljmp
aaa
ljmp
jp
nop
cmp
je
shlb
pop
mull
sub
or
cmp
mov
and
xor
cmpsl
mov
outsb
mov
insb
mov
push
xchg
fs
push
mov
adc
popf
push
imul
mov
das
insb
sti
lcall
sub
xchg
jg,pt
scas
idiv
cs
data16
popa
inc
shll
rcrl
int
dec
xchg
adc
fdivl
ds
or
cmp
sub
ror
stos
and
jbe
push
lea
js
bound
leave
cld
or
jg
outsb
cli
add
mov
ljmp
push
push
mov
add
jb
mov
inc
adc
stos
hlt
pop
and
out
mov
es
lock
pop
dec
push
idivl
and
rcrb
sub
aas
ljmp
movsb
std
pushf
xor
inc
in
mov
out
mov
test
fisubrl
lret
sbb
xchg
dec
sbb
aas
pop
mov
ret
pop
adc
movsl
std
and
repnz
or
xlat
lcall
imul
sub
cld
jb
sub
inc
xor
cmp
xor
aam
sub
and
add
sub
outsl
push
or
or
add
and
push
insb
adc
jmp
lea
das
jl
inc
mov
in
jne
in
cmp
ljmp
enter
xor
leave
cmp
xchg
mov
lret
shl
xchg
mov
stos
in
add
inc
pop
add
inc
pop
jge
push
sti
test
jae
fs
xor
xlat
xor
movb
or
orb
sub
jmp
pop
rolb
mov
xchg
sub
sub
push
aad
dec
push
and
lods
insl
lret
loope
repz
nop
cmc
and
dec
pmulhw
jnp
lcall
movaps
sahf
movsb
lea
xor
mov
jl
rcrl
xlat
inc
and
and
xchg
xchg
and
sub
lods
shlb
mov
xchg
test
cmc
mov
cmp
inc
push
pop
jmp
inc
scas
movsb
mov
incb
pop
cld
lahf
rcrl
and
test
mov
ljmp
mov
or
mov
test
adc
pop
cmpsl
aas
lret
pop
jno
rcrl
adc
out
sub
adcl
pop
shll
arpl
sub
sbb
flds
push
out
and
jl
pop
pusha
mov
and
pusha
imul
rorb
mov
hlt
out
pop
and
gs
mov
mov
cmp
dec
and
dec
outsl
push
cmp
mov
clc
enter
bound
mov
into
je
add
ds
adc
ja
push
push
cmp
js
fildll
sbb
fcmovnu
mov
lods
ljmp
mov
repnz
add
pushf
cmc
sbb
movsl
mov
jb
movl
aaa
xchg
shll
in
rcll
sbb
fistpl
jb
mov
sub
andb
push
rep
mov
int
cltd
into
ja
dec
aad
inc
jne
lcall
dec
fs
repnz
jnp
aaa
push
or
aam
mov
lcall
lods
faddl
lcall
mov
add
pop
mov
addr16
lods
jns
int3
jno
shll
icebp
inc
out
jae
pop
adc
xor
jb
inc
jmp
and
mov
push
dec
int
xor
jmp
nop
xor
cmp
or
inc
lods
cmp
fldt
xor
ljmp
sub
lcall
push
fisttps
repnz
add
lahf
push
jecxz
daa
jg
inc
sbb
sahf
push
or
or
push
icebp
jns
mull
es
mov
pop
and
and
outsb
cmp
movsl
inc
push
ljmp
cmpsl
or
xchg
imul
jg
mov
aaa
insl
dec
sub
sub
lock
sbb
fildl
dec
mov
and
lds
fucomi
sti
mov
add
mov
rorb
filds
ljmp
jae
sub
dec
push
fisubl
lret
xlat
and
mov
mov
mov
adc
add
lret
jp
dec
outsl
pop
loopne
scas
xchg
add
lds
and
std
xor
sbb
xor
rcrb
mov
jb
shll
insl
iret
xor
lds
jb
mov
outsl
repnz
hlt
pushf
rclb
pop
jnp
sub
ja
add
cwtl
icebp
xchg
sti
stc
clc
and
repnz
mov
in
xchg
pop
dec
test
add
stc
popa
sahf
add
fsubrs
aaa
add
gs
jmp
rcll
test
lahf
aaa
xor
mov
repz
cmp
cmpsb
cmpl
aas
lea
pop
ljmp
subb
mov
sbb
mov
arpl
push
jge
sub
or
push
adc
dec
out
fmul
das
ret
mov
mov
mov
pop
popf
test
in
cmpsb
mov
lea
sti
lods
xchg
test
stc
and
jo
inc
movsb
push
inc
cld
mov
jle
aas
std
loop
pop
lea
xchg
rorb
fdivr
xchg
scas
cmp
fwait
push
add
pushf
cmc
lods
mov
inc
jb
and
test
insb
cmpsb
xor
mov
loopne
sub
in
test
xchg
mov
mov
push
in
outsb
add
lret
push
jbe
jmp
dec
sub
cmp
ret
test
mov
ja
loope
enter
push
jle
test
lahf
ret
mov
mov
cwtl
popa
sbbb
test
sar
ds
pop
outsb
push
in
fsubrs
int
mov
adc
mov
xchg
dec
mov
outsl
inc
imul
lods
incl
pop
cmp
add
and
xor
bound
pop
sub
xchg
add
outsl
call
fwait
mov
push
ja
fisttps
fcompl
sti
cmp
xor
test
xor
xor
push
adc
mov
inc
xchg
mov
xor
das
mov
xchg
adc
loop
pushf
pop
jecxz
mov
inc
xor
push
fucom
jg
jb
incl
unpcklps
data16
int
mov
xor
push
xor
lret
jmp
lahf
out
fdivrl
mov
or
and
lret
add
enter
cmp
out
inc
icebp
cmc
fcompl
loopne
pop
int
lea
js
xchg
andl
jp
xchg
js
or
cmp
adc
lahf
int3
mov
sub
fwait
scas
aaa
xchg
cmp
lock
mov
loope
test
push
jnp
jo
dec
adc
xor
insb
loopne
xlat
and
sbb
mov
fldcw
lock
push
dec
sbb
lods
inc
fdivl
mov
sbb
pop
xor
fmull
push
shlb
fidivs
inc
out
popa
inc
or
xchg
scas
pop
lcall
jecxz
fistps
cwtl
lret
mov
icebp
into
sbb
xorb
sub
xchg
sub
das
nop
rcrl
adc
cmp
stc
cmp
dec
jnp
dec
int3
push
insb
rorl
in
pop
jge
insl
outsb
push
mov
sbb
shrl
adc
jmp
dec
mov
out
xor
cmp
inc
pop
mov
mov
xchg
xorb
mulb
and
xchg
cmpsl
sub
gs
or
scas
push
xchg
adc
sub
mov
and
jae
and
adc
sbb
test
dec
lret
insb
xlat
adc
pusha
shll
xor
test
sbb
inc
push
push
ljmp
in
mov
repnz
ret
dec
cltd
in
xor
cmpsl
adc
pop
loop
and
or
sub
xchg
aaa
xor
pushf
cmc
dec
xchg
jmp
das
fs
insl
fildl
cmpsl
pop
rcl
mov
call
xchg
or
jge
cltd
sbb
scas
mov
ss
sbb
cmovp
push
pop
mov
or
push
jp
add
mov
in
bound
dec
sbb
mov
sub
jecxz
jle
adc
pop
fidivrs
dec
packssdw
dec
ja
adc
jnp
scas
mov
xor
mov
jp
cmp
adc
lret
mov
lahf
mov
xor
pop
cmp
inc
dec
rcl
mov
xchg
xor
xor
mov
cmp
addr16
jle
pushf
lea
std
clc
add
dec
addr16
push
fcmovu
xchg
sub
cmp
lods
mov
incl
in
jo
cmp
mov
mov
sub
lahf
push
mov
sbb
test
mov
pop
imul
out
push
les
inc
cmp
aaa
lcall
rorl
aam
data16
pop
lea
aad
or
push
pop
pop
jns
xchg
jg
into
jecxz
in
popf
aaa
insl
jbe
mov
fimuls
push
xor
push
mov
jle
cs
pop
imul
xor
je
mov
xlat
adc
ss
jne
lock
mov
jl
sbb
push
cld
push
lock
mov
lret
sbb
in
into
pop
mov
stos
mov
movsl
gs
test
xor
scas
sub
shll
mov
inc
dec
lods
out
iret
loope
addr16
xor
js
sbb
xchg
pusha
adc
xchg
add
jg
movsb
mov
test
or
mov
test
jb
nop
fucom
ret
mov
or
test
pop
sub
cmp
adc
scas
movsb
lcall
stc
cmpsb
rcll
or
mov
outsl
or
dec
lcall
fcoml
andl
ja
cmp
pop
loope
orb
adc
or
andb
push
adc
xchg
orb
popf
sub
jne
and
pop
jbe
or
jnp
divl
popa
arpl
jg
and
and
fcmovnbe
in
push
cmp
insb
add
pop
aad
mov
mov
pusha
sbb
or
or
dec
xlat
adc
mov
data16
mov
push
mov
jne
aaa
sbb
repnz
jnp
leave
jg
movl
icebp
mov
xchg
shlb
jmp
adc
sub
mov
inc
mov
cmp
push
mov
mov
xlat
stos
dec
loopne
push
nop
cmpsl
into
mov
sbb
cmpsb
xchg
sbb
xor
repnz
mov
in
push
lcall
and
or
xor
dec
jnp
cmp
mov
mov
sti
inc
sahf
mov
leave
mov
ljmp
add
push
push
clc
sub
call
enter
mov
xor
sub
std
jbe
loope
jge
lcall
loop
cmp
pop
push
mov
sbbl
mov
lods
sbb
call
pop
sbb
pop
mov
fdivrp
mov
xor
test
xor
in
mov
outsl
bound
and
xchg
test
push
clc
fldcw
sbb
jae
push
dec
sub
insb
insl
or
xchg
icebp
cmpl
mov
stc
push
mov
jae
xchg
dec
mov
sbb
xchg
pop
loop
add
jne
fdivs
cmpsb
and
mov
mov
push
mov
dec
ret
push
jnp
dec
outsl
repnz
mov
imul
add
cwtl
repz
add
test
sub
add
imul
cs
pop
inc
xchg
lea
mov
inc
out
push
pushf
aaa
outsb
es
ss
mov
add
outsl
enter
fnstenv
push
lret
fwait
nop
xor
cmp
sub
adc
aas
cltd
jne
ds
sub
sub
daa
mov
fstl
xchg
shl
pop
add
adc
jnp
rorb
sbb
pop
lods
fsub
gs
rorb
mov
rol
and
cmp
cmc
mov
into
xchg
push
test
xor
mov
stc
or
add
icebp
and
clc
sub
or
add
push
and
leave
fisubrl
or
mov
out
mov
lds
xchg
test
pushf
cmp
xor
popf
jns
negl
dec
mov
in
negl
iret
hlt
xchg
jae
add
sub
movsb
jbe
jae
mov
sbb
outsb
stc
add
lock
inc
jne
push
daa
push
dec
lcall
push
sbb
pushl
cwtl
scas
leave
and
fucomi
out
fucomi
jmp
ss
xor
in
inc
fidivs
xchg
in
cmp
lret
popf
aad
xlat
push
outsl
cmc
or
fninit
lahf
stc
sahf
add
je
in
insb
fcmovu
lahf
test
test
adcl
xchg
movsb
cli
mov
js
jle
mov
sbb
in
aad
sub
pop
flds
sub
das
pop
xchg
aaa
xchg
adc
arpl
das
jne
mov
mov
popf
pop
in
xchg
cs
fs
dec
loopne
jge
push
clc
push
and
xchg
cmp
adcb
pop
test
mov
and
sub
and
jp
imul
in
mulb
jmp
sti
sub
stos
pop
xchg
out
cmpsb
insl
mov
inc
add
mov
dec
es
mov
lods
xchg
sub
enter
scas
mov
or
movsl
push
mov
clc
or
dec
xchg
or
add
push
rolb
lret
mov
fcoms
dec
in
mov
mov
test
xor
push
enter
lret
jae
fcos
lcall
mov
mov
test
sahf
mov
loope
push
jne
cmp
out
push
push
add
and
icebp
aaa
or
cmp
ficoml
leave
pusha
jo
mov
loop
stc
pushf
neg
pushf
imul
cli
iret
sub
iret
cmp
mov
sub
imul
jne
mov
xchg
cmp
mov
mov
sbb
and
insw
xchg
fidivl
xchg
mov
daa
push
pop
fs
inc
pop
push
notl
popf
outsb
movsb
xchg
xor
mov
cmp
add
or
xchg
nop
cmc
sub
gs
out
jp
xchg
call
xor
lea
lahf
inc
call
and
adcl
rol
lock
sub
nop
add
stos
mov
rcll
mov
jg
orb
xor
xor
clc
out
mov
pop
mov
out
orl
in
mov
lock
pop
sbb
mov
cmp
xchg
fiadds
push
xor
dec
add
mov
inc
jl
mov
xor
add
push
cmp
cwtl
or
push
xchg
cmpsb
and
adc
and
pop
inc
ret
mov
ret
in
ja
arpl
adc
je
icebp
out
into
push
ja
or
rcrb
xchg
mov
xor
rclb
int
jmp
call
sub
shlb
pusha
xor
add
xchg
xor
xchg
loop
rcrl
inc
pop
sti
jo
push
iret
sub
cwtl
cmpsl
out
fnstenv
mov
out
pop
mov
push
pop
inc
ja
push
xor
lahf
xor
test
adc
inc
pop
rcl
push
fists
mov
xor
jb
shrb
call
mov
mov
inc
xor
out
inc
lahf
insb
pop
shrl
ss
or
push
int
pop
outsl
iret
cli
ljmp
xchg
inc
inc
loope
mov
out
ljmp
inc
inc
lahf
ret
std
inc
popa
data16
and
je
out
scas
mov
out
int
or
mov
and
in
mov
pop
or
push
push
mov
or
jle
push
movsb
dec
xorl
fs
add
dec
pop
cltd
push
fwait
jl
shl
jnp
pop
lds
fsubl
mov
pop
in
clc
ret
test
dec
sub
dec
out
mov
shll
les
push
sarl
adc
adc
pop
sbb
cmp
jo
loopne
inc
out
scas
lcall
std
les
inc
movsl
mov
sbb
jb
out
outsb
add
repnz
pusha
lahf
xchg
in
mov
push
ret
mov
jmp
pop
roll
sub
sti
test
not
sbb
xor
mov
in
adc
repz
roll
pop
inc
push
movsl
dec
repz
jne
ret
mov
mov
xor
dec
mov
and
or
aam
pop
or
lret
loop
or
dec
push
loopne
test
mov
dec
push
push
mov
pop
push
inc
xor
push
xchg
inc
mov
enter
push
or
dec
xor
inc
icebp
ret
jmp
outsl
in
bound
lret
gs
sub
idivl
cli
xor
sub
hlt
gs
xchg
lds
jecxz
enter
mov
movsl
lods
sbb
jae
negl
pop
push
mov
lods
in
addb
rclb
pop
and
fnstcw
push
add
sbb
pop
int
insl
mov
and
shlb
iret
and
mov
mov
std
push
stc
loop
pop
adcl
mov
sub
mov
sbb
inc
cmp
xchg
mov
bound
rcrb
lcall
mov
pop
mov
or
scas
mov
inc
popa
lcall
mov
xchg
into
add
pop
inc
push
cs
mov
cmp
xchg
imul
xchg
repz
sti
in
sbb
jno
xchg
aad
enter
ret
sbb
cltd
pusha
cwtl
lret
jae
and
adcb
mov
aas
push
outsb
push
xor
arpl
cmpsl
or
fs
mov
inc
dec
clc
lods
sub
mov
repz
push
jo
imul
rcr
xor
scas
xchg
lea
mov
xchg
aad
in
pop
xchg
dec
dec
push
or
jns
jecxz,pt
jnp
addr16
or
and
cmpsb
or
int3
or
dec
xor
jmp
xlat
cmp
jns
add
push
jecxz
sahf
fldcw
xchg
inc
pop
cmpsl
mov
and
adc
fcmovu
bound
xor
add
andb
jne
fs
mov
jbe
xorl
in
push
ljmp
repnz
xchg
in
xchg
mov
sub
loopne
push
add
dec
add
stc
lcall
bound
cmpsl
add
addr16
dec
nop
inc
pop
mov
sub
test
or
fcmovnbe
cmp
sbb
pop
outsl
mov
or
xlat
push
inc
add
ss
pop
mov
jo
dec
sub
insb
ficoms
mov
ljmp
adc
pop
addl
mov
setge
leave
and
imull
lret
lds
pop
jmp
cmpl
lcall
rcrl
mov
inc
int3
mov
rcrb
inc
dec
cmp
xchg
pop
or
cli
cs
bound
cmpsb
out
in
dec
repz
inc
pop
rcr
adc
scas
inc
sub
mov
xor
cmp
or
fistpll
dec
push
je
push
cs
adcl
xchg
test
jns
mov
add
jmp
pop
ret
xorb
xchg
fstps
adc
mov
dec
repz
and
xor
fisubrl
outsl
push
gs
xlat
mov
mov
jp
fistps
cld
cmp
mov
movsl
int3
cmc
mov
xor
cmp
push
das
ret
mov
mov
push
mov
lret
pushl
push
int3
pushf
mov
lret
sub
lahf
aas
out
ret
pop
das
add
filds
call
pop
mov
int
sub
inc
sub
imulb
pop
and
push
mov
cmp
pusha
mov
jp
jae
dec
arpl
call
or
lea
xlat
sbb
jecxz
lock
and
incb
outsl
pop
out
pop
fstpt
push
lock
mov
inc
jb
sub
sbb
xchg
jg
insl
mov
jno
insl
enter
pop
mov
repnz
imul
pop
xchg
movsb
xchg
imul
jmp
stos
sub
aad
sbb
int
mov
and
jno
xchg
into
adc
loope
pusha
jmp
cmp
pop
loope,pn
jbe
mov
leave
jno
in
iret
in
xchg
lcall
mul
es
mov
add
pop
cmc
or
mov
ljmp
push
lea
stc
mov
dec
xor
mov
outsb
ret
push
insl
int3
add
addl
mov
in
xor
shll
fwait
mov
push
add
mov
std
fchs
pop
lea
push
jge
jl
test
inc
shrb
shrb
dec
inc
lcall
xchg
int
stos
jecxz
jne
or
push
nop
pushf
clc
or
fmul
into
jmp
cmp
push
xlat
rorl
dec
pop
int3
outsl
jne
out
or
jecxz
jl
jmp
idiv
fsubl
fsubl
jmp
jne
push
inc
sub
xchg
sti
inc
push
inc
jae
push
outsl
mov
add
scas
notb
cmc
test
dec
je
popa
sub
into
scas
fldt
and
mov
mov
inc
repz
adc
loopne
sahf
mov
pop
int3
adc
mov
dec
jnp
mov
test
jmp
xchg
pop
sbb
cli
aaa
cmc
mov
jae
fsub
je
shlb
ja
addr16
je
insb
pop
adc
mov
std
jg
mov
scas
cld
test
repz
aad
lock
fnstsw
aam
cmpl
push
sub
addl
movsb
jp
mov
dec
jae
push
and
cmpsl
test
stos
sbb
adc
dec
push
test
pop
fstps
push
loop
iret
leave
lcall
add
cmp
add
xor
mov
es
xchg
inc
mov
iret
inc
imul
ja
lret
das
ret
out
or
dec
sub
in
addr16
push
test
in
ret
jl
jae
ret
mov
fiadds
call
jnp
mov
lret
out
cli
xor
inc
je
mov
pusha
imul
repnz
inc
or
adc
mov
test
fiaddl
adc
inc
mov
icebp
aad
lock
and
xor
jge
stos
push
pushf
repnz
and
inc
fmull
pop
mov
dec
jns
iret
enter
mov
clc
cltd
xchg
lods
xor
sub
clc
repz
bound
jecxz
sub
neg
inc
cmpl
lods
mov
xor
pop
aad
push
add
push
push
insb
inc
mov
test
mov
cli
add
mov
mov
shrl
xor
adc
push
popf
xor
lods
cmp
sub
jecxz
jb
ljmp
inc
cli
pop
into
stc
out
frstor
pusha
in
push
mov
push
xor
and
mov
xor
cmpsb
xor
pop
jmp
in
std
outsl
mov
xor
push
addl
pop
jo
stos
sti
call
cmpsb
mov
jp
fiaddl
xchg
das
ret
adc
or
fwait
mov
clc
xlat
cwtl
xor
adc
or
mov
jbe
test
popf
add
mov
dec
insb
jle
dec
mov
xchg
xor
push
cmp
push
jmp
bound
ljmp
and
imull
arpl
ss
xchg
inc
loope
mov
rorl
add
push
ds
jecxz
data16
gs
or
jle
aaa
std
cmc
jle
loop
stos
or
sub
adc
ss
mov
outsb
dec
shlb
jl
neg
mov
cwtl
sti
push
xchg
inc
inc
lret
fldenv
cs
push
ja
cmp
dec
sbbb
lds
aam
inc
hlt
adc
xchg
clc
aad
add
mov
cli
and
aam
aaa
lret
pop
mov
xor
lock
cltd
push
cmpsl
adc
int3
int
nopl
xor
push
cltd
cmp
push
xor
jb
push
sub
inc
and
or
outsl
neg
mov
pop
bound
sbb
dec
scas
xchg
xchg
adc
jp
mov
mov
adc
xor
add
roll
push
sub
dec
repz
or
sub
sbb
clc
jle
cwtl
push
add
insb
cmc
push
sub
add
sub
push
jo
pop
cmpsl
jecxz
pushf
outsl
mov
dec
fsubrp
scas
mov
dec
cmpsl
sar
adc
and
outsb
dec
das
repz
push
js
sbb
sti
mov
shll
int3
clc
jae
fmul
jns
lods
pop
insl
sub
aaa
popf
pop
dec
pop
ljmp
aaa
dec
or
jne
in
fadd
cmp
jns
xchg
or
add
pop
cmp
dec
movsl
xorl
cmp
mov
cmp
and
ss
and
push
push
mov
inc
mov
jo
out
mov
fistl
daa
enter
xlat
pop
or
stos
mov
mov
adc
and
popf
sub
ds
push
shrb
mov
xchg
in
and
jge
sti
stos
repnz
sbb
cmp
imul
jae
push
fwait
mov
mov
mov
nop
mov
fcoms
outsb
sahf
inc
sbb
out
add
lea
negb
jp
inc
push
mov
sbb
adc
popa
push
cmpsl
dec
dec
test
lds
pop
loop
lret
lds
fs
push
xor
adc
cmpps
clc
leave
jno
ja
rcrb
jle
mov
cmp
insl
and
or
add
push
adc
push
push
jbe
dec
add
outsl
cmp
dec
out
jnp
mov
clc
lea
test
mov
pop
test
mov
jnp
pop
jb
mov
adc
sub
mov
ja
mov
test
inc
ja
jmp
push
aaa
jb
loopne
inc
lret
andl
pop
mov
test
sub
or
adc
pop
rorl
cmp
sub
pop
dec
stc
add
pushf
imul
ret
jns
stos
into
mov
jne
femms
jle
shrl
ds
lcall
xchg
scas
data16
mov
push
fstps
test
pop
es
and
cli
push
cmpsb
inc
outsb
jge
mov
imul
adc
repz
lods
repnz
jg
scas
out
adc
stos
push
ss
lock
lcall
mov
inc
das
sub
int3
cmp
cmp
mov
pop
popa
lret
repz
inc
daa
pop
mov
inc
mov
dec
daa
jg
xor
jno
jb
mov
in
idivb
loope
mov
sbb
dec
adc
cmp
xchg
popa
mov
jo
inc
jnp
testb
jecxz
mov
push
movl
test
or
loopne
mov
mov
mov
and
cmp
stc
ljmp
mov
out
xor
mov
mov
xor
cmpsl
fldcw
roll
push
popf
cmpsl
or
push
pop
shlb
dec
inc
js
sbb
rclb
aas
lods
jecxz
aam
pop
mov
js
fdivrs
cmp
dec
pushf
cmp
lock
sub
lds
sbb
sbb
inc
fcomps
sub
xchg
icebp
hlt
xchg
xor
hlt
cmp
pop
aad
xchg
push
jne
hlt
jg
push
cli
mov
dec
inc
sbb
es
add
aam
scas
mov
lcall
sbb
cmc
outsb
xchg
mov
ja
mov
inc
movsb
mul
mov
aas
sbb
testl
add
inc
sub
mov
push
mov
xor
stos
mov
sub
decb
sub
icebp
add
mov
xchg
sub
fiaddl
jb
arpl
lods
setno
into
dec
movsb
dec
pop
mov
push
sub
push
ret
ljmp
dec
call
enter
mov
inc
mov
or
mov
dec
add
dec
sti
mov
mov
sbb
add
lea
xchg
movsl
xor
pop
xor
mov
jmp
js
lcall
jp
ljmp
popa
aaa
sub
and
dec
dec
push
dec
in
dec
in
push
shrl
sbb
add
fildll
mov
and
jns
stos
fstpl
das
jns
sbb
jnp
leave
jns
lcall
sbb
stos
inc
clc
xor
test
call
xchg
mov
cmovb
jae
inc
or
sbb
mov
call
ja
out
dec
push
orl
outsl
push
jl
push
pop
and
pop
imul
sub
call
andl
stc
cltd
cmp
lcall
fsubp
scas
dec
or
push
test
popa
adc
aad
jnp
stc
cld
mov
fmull
repz
xchg
jecxz
push
ss
mov
push
xchg
lret
xor
pop
fwait
sbb
xchg
leave
cltd
dec
push
lods
mov
pop
sahf
add
pop
ss
rcll
jo
xchg
or
adc
clc
icebp
push
xchg
pop
mov
movsl
cmp
sub
add
sahf
push
dec
mov
add
jbe
daa
adc
fwait
jle
aam
imul
add
aad
push
xchg
mov
sub
cs
sbb
mov
jbe
je
aas
and
and
dec
sbb
xchg
cmp
lahf
xchg
ljmp
dec
ret
fdivp
mov
cmp
xchg
jbe
and
test
fs
rorb
fisubs
pop
dec
sbb
lods
mov
xorl
inc
lretw
pop
fdivrs
pushf
notb
call
mov
and
dec
test
mov
cmp
jno
sub
sub
gs
and
cli
les
ret
jae
inc
jmp
cmp
test
xchg
fucomip
pusha
mov
cmp
jmp
movsl
sbb
push
cli
lds
lds
xchg
orb
mov
sub
push
push
pop
idivb
or
add
pop
insb
aaa
les
arpl
test
xchg
xor
loop
rcll
xor
aas
jae
mov
mov
loope
lret
cld
pushf
enter
pushw
jg
cs
jae
xor
ret
sbb
xor
inc
mov
ret
outsl
cs
push
dec
std
xor
pop
add
dec
xchg
xchg
daa
or
cmp
clts
enter
repz
nop
fldenv
lods
sub
pop
out
xchg
sub
aas
pushf
js
and
add
push
mov
mov
cs
mov
or
jns
and
sbb
push
pop
mov
es
ss
xchg
sub
lock
es
push
mov
mov
insl
test
movsl
pop
dec
sub
stos
pop
mov
sbb
hlt
movsl
inc
in
or
inc
adc
or
cli
jmp
and
mov
decb
mov
xchg
and
xor
and
pushf
add
rclb
stos
sub
cmp
call
and
vmread
ja
hlt
inc
stos
mov
push
inc
rcrl
test
fdivl
xchg
mov
xor
int3
jno
mov
cmpsb
push
fstpt
shlb
jo
shrl
shlb
push
out
stos
dec
mov
test
subb
dec
mov
cli
adc
mov
inc
jg
fiadds
insl
xchg
push
out
ret
lret
mull
or
fnsave
sub
dec
and
ds
sarl
mov
or
nop
data16
lahf
mov
imul
and
pushf
pop
fcmovnu
xor
hlt
mov
ret
aas
push
xor
je
mov
push
adc
addr16
adc
and
mov
in
adc
icebp
dec
test
dec
pop
inc
cmp
shll
jl
sbb
mov
idivb
mov
pop
pop
in
jnp
enter
scas
rcrb
jp
or
stos
and
jecxz
and
int
jle
mov
fcoml
fidivl
jmp
or
imul
pop
out
pop
adc
ret
shlb
fldenv
or
nop
pushf
fptan
mov
outsl
ja
imul
dec
and
iret
out
jne
dec
xchg
mov
and
outsl
inc
add
or
and
jp
sarl
cmpsb
or
mov
pop
xlat
inc
aaa
bound
adc
adc
push
mov
push
cmp
push
int
mov
imul
jl
mov
movsb
fimull
fistl
loopne
mov
push
cld
push
dec
mov
test
repnz
cs
push
adc
pushf
dec
inc
push
inc
popf
fistps
xlat
iret
popa
dec
lret
in
xchg
cmpsl
jne
and
in
and
cmpsl
adc
xor
rcr
cs
daa
jmp
and
std
dec
cmp
and
mov
cld
sbb
sbb
jg
scas
inc
or
mov
loop
pmuludq
mov
pop
jmp
pop
scas
cld
mov
add
sub
inc
or
lods
outsb
shll
clc
adc
das
mov
outsb
jbe
sbb
mov
rcrl
ficompl
cltd
add
adc
xchg
add
xor
jl
adc
das
dec
mov
dec
je
jne
mov
iret
mov
sbbl
notb
adc
sbb
std
inc
das
shlb
sbb
loope
into
mov
mov
mov
ss
jp
pusha
jmp
adc
fldenv
aam
inc
imul
insl
push
push
movsb
xlat
pop
or
xchg
add
ss
or
push
lcall
sahf
xchg
xchg
add
std
imul
int3
mov
loop
xor
mov
sub
xchg
fstp
xor
adc
add
jae
mov
in
imulb
push
mov
mov
push
gs
movsl
psadbw
fcomps
movntps
add
pop
cli
dec
in
dec
cld
dec
daa
mov
push
dec
xor
sti
mov
lods
cmp
mov
xchg
dec
sub
xor
leave
mov
lock
test
mulb
cmpsl
xchg
cmp
xchg
ljmp
mov
inc
fstpl
xor
ss
or
fmuls
int
adc
jecxz
push
and
cld
ds
int
mov
or
aas
inc
divl
dec
sti
jbe
mov
sbb
sbb
mov
hlt
fwait
mov
cli
pop
push
hlt
mov
test
jnp
enter
fs
cld
hlt
mov
jecxz
inc
mov
or
out
adc
cmc
mov
mov
jne,pn
pop
push
jb
sbb
leave
jnp
xor
push
dec
sahf
sub
jp
push
aam
push
pusha
push
fisubrs
enter
sar
mov
inc
cmp
rol
mov
ljmp
jb
mov
orb
xor
or
inc
sbb
in
dec
mov
jns
test
ret
outsb
push
andb
dec
jno
sarl
xchg
call
mov
push
dec
sbb
lcall
lcall
add
test
and
xor
ret
pop
pop
inc
jp
je
rcrl
cmp
inc
push
hlt
pop
push
jnp
xor
into
mov
orb
test
sbb
adc
sub
sahf
xchg
dec
repnz
loopne
stos
add
andb
cmp
enter
adc
divl
or
adcl
xchg
mov
fsubrs
jecxz
mov
stos
push
or
lcall
rcrb
sub
enter
mov
xor
dec
or
adc
inc
mov
lea
sti
sbb
push
daa
cwtl
xchg
arpl
call
ja
scas
int3
jne
adc
mov
push
pusha
mov
aas
jmp
mov
cmp
push
xchg
nop
pop
and
hlt
jmp
shrl
jbe
das
dec
pop
add
inc
cwtl
sub
test
loopne
popa
mov
movsb
and
push
jne
jae
pop
mov
or
mov
sbb
cmp
loope
mov
cmpsl
dec
stos
xor
push
or
sbb
repnz
pop
cli
scas
out
rcll
adc
push
into
xchg
sti
jl
push
xchg
loop
ja
imul
jl
movd
jne
xchg
pop
push
add
std
sti
push
subb
dec
cltd
or
add
rcr
jmp
pop
sbbl
jmp
in
mov
popf
cwtl
dec
das
push
xchg
sarb
adc
insb
mov
cmc
insl
cmpsb
icebp
sbb
mov
xor
out
push
mov
dec
jo
cmp
mov
lcall
pop
shll
fistpl
push
add
xchg
leave
jg
jge
pop
cs
imul
ficoml
jle
and
sbb
ds
push
ret
ret
xchg
loope
adc
mov
jns
sub
jns
push
sahf
push
push
pop
cmp
push
and
mov
cmp
mov
fbld
lock
jge
push
inc
loop
int3
push
push
mov
pop
dec
push
mov
out
and
dec
mov
fiaddl
inc
mulb
test
aad
shll
xor
mov
stos
add
dec
nop
mov
jns
sbb
icebp
fildl
movsl
or
loopne
jae
inc
insl
or
pop
add
push
js
rorl
push
or
loopne
mov
mov
ljmp
dec
mov
dec
jbe
pushf
insb
mov
cmp
imul
push
cmc
adc
rol
test
jbe
push
pop
push
sbb
aam
ret
sub
in
fwait
lods
test
ror
sub
and
adc
in
xor
mov
lahf
jl
jno
cmp
rclb
cwtl
mov
mov
in
loopne
daa
stos
adc
cmp
and
pop
test
cmpsb
pop
in
cwtl
hlt
pop
jno
add
dec
fadds
ret
and
push
pushl
mov
mov
or
icebp
pop
popf
cmc
stos
cmp
pop
sub
ret
mov
dec
or
dec
inc
cmp
jp
push
adc
ret
jecxz
mov
pop
pop
into
mov
pop
lods
add
stos
stc
xchg
data16
ret
jg
mov
adc
cs
mov
xchg
mov
pop
mov
push
xchg
add
dec
add
dec
mov
inc
pop
mov
sbbl
xchg
sub
ljmp
lock
xor
add
fdivrs
xchg
dec
lods
or
ljmp
mov
xchg
inc
cmp
pop
and
pop
fxch
lret
inc
dec
sti
stc
sub
pop
fnstenv
cs
cmpsb
bound
dec
fisttpll
scas
scas
add
mov
aam
call
mov
lret
orps
push
jle
jp
das
cmp
dec
ljmp
stos
jno
in
mov
sbb
or
mulb
mov
cmp
or
dec
adc
pop
adc
push
lcall
inc
dec
xchg
jmp
pop
mov
xchg
out
in
shlb
mov
popf
lods
pop
jns
rcl
fbstp
sbb
out
jg
hlt
lock
in
mov
icebp
lret
subb
add
cmp
ds
push
stos
data16
push
xlat
add
inc
mov
pusha
dec
enter
js
sub
sbb
mov
add
mov
adc
jae
push
xor
dec
mov
jg
mov
jecxz
jle
out
imulb
mov
sti
jge
lods
jmp
xchg
cld
ret
data16
pop
pop
std
cmp
jge
sti
add
pop
in
pop
jl
cmp
xchg
sub
dec
lcall
adc
ss
movsb
cbtw
xor
cmp
add
dec
cmc
and
repz
lds
out
lahf
dec
push
ds
les
xchg
cmp
adc
or
pusha
jo
push
sbb
test
sbb
sahf
push
mov
ja
test
subb
inc
hlt
mov
gs
repnz
mov
xorb
pusha
ljmp
ja
push
sub
test
mov
lds
inc
xor
int3
sahf
shll
ds
loopne
mov
hlt
jmp
jno
sub
xchg
cmpsb
mov
aas
pop
imul
daa
es
popf
daa
mov
pop
sahf
cld
push
push
rorb
adc
sub
fs
xor
insb
inc
add
mov
ret
adc
xlat
mov
and
jns
dec
xor
jg
mov
mov
and
jle
loop
sbb
jmp
inc
js
popf
and
jno
mov
add
dec
nop
mov
mov
pop
test
je
inc
sub
dec
fisubrl
repz
and
fnsave
pop
mov
cmp
mov
ja
ret
adc
mov
mov
out
pop
xor
mov
mov
pop
pop
lock
lods
cmp
add
mov
ljmp
dec
sbb
and
call
mov
fcomps
enter
xor
cmp
mov
or
in
push
js
fwait
mov
repz
or
pop
in
mov
mov
mov
sar
and
jns
push
clc
rclb
mov
aaa
xchg
xorl
dec
mov
loopne
pushf
test
in
cmp
mov
lods
repnz
or
mov
push
jp
popf
or
lds
fsubl
jbe
leave
fcoms
xchg
pop
lock
jno
insb
popa
in
mov
and
or
fnstsw
repnz
inc
sub
cwtl
mov
adcb
xchg
outsl
call
call
lret
and
jbe
adc
in
sub
fdivs
stos
mov
jecxz
mov
sahf
mov
adc
adc
push
inc
fildll
fildll
sarl
jae
ja
pushf
andl
movsb
dec
mov
or
je
mov
int
rcrb
and
dec
inc
fdiv
mov
outsb
mov
cs
aas
jno
pop
pop
rolb
xchg
mov
shlb
bound
and
push
sub
cli
dec
adc
enter
int3
test
push
idivb
outsl
push
int3
jno
in
adc
lods
pop
loopne
mov
inc
sub
fnstenv
xchg
cwtl
adc
repnz
std
aam
movsl
or
pop
scas
aaa
mov
xorb
mov
cld
andl
bound
jmp
loope
mov
push
ror
mov
nop
push
jp
mov
dec
dec
call
cmp
icebp
cmp
sbb
mov
inc
icebp
je
mov
int
pop
fldt
push
mov
insb
imul
pop
mov
lret
hlt
push
mov
test
add
into
mov
pop
popf
outsb
pop
lret
add
jae
fwait
sbb
imul
xor
pop
out
push
sub
adc
imul
dec
cs
stos
sub
outsl
dec
and
sub
popa
out
outsl
ficoml
pop
xchg
pop
jno
shl
pop
dec
xlat
stc
cmp
outsl
test
xlat
sub
xorb
jae
dec
cltd
xchg
xchg
insb
push
jnp
mov
or
jle
push
fistpll
sarl
mov
push
lock
inc
lods
in
mov
iret
fdivrs
mov
mov
add
jl
mov
loop
in
scas
mov
mov
adc
leave
outsl
cmpsb
sbb
mov
outsl
mov
add
rclb
mov
cmc
push
mov
pushf
cmp
aad
mov
mov
aas
stos
imul
into
daa
pop
sub
mov
imul
outsb
sbb
jb
adc
pop
or
push
fcompl
data16
std
lret
push
shrb
xor
add
movsb
aad
aas
sub
cwtl
stc
mov
ret
xchg
ds
jno
sbb
mov
ss
mov
daa
loope
loope
fxch
out
lock
xorl
inc
enter
pop
push
push
mov
xchg
sbb
pop
cwtl
jmp
inc
movsb
sub
and
inc
lds
cltd
add
pop
mov
jp
mov
push
inc
jo
mov
add
cmp
inc
sahf
mov
mov
int3
xchg
mov
sarb
aas
sbb
stos
jp
hlt
nop
arpl
test
leave
xchg
in
int
ljmp
fwait
xchg
aad
das
stos
jns
into
mov
adc
popl
popw
sbb
mov
or
pop
outsb
mov
enter
mov
mov
pop
push
insl
mov
daa
cmp
js
lea
data16
cmp
movsb
sub
inc
xor
pop
push
dec
pushf
jnp
inc
push
adc
mov
dec
xchg
scas
out
les
daa
andb
inc
lahf
dec
je
out
inc
xchg
fucomp
mov
es
inc
call
xor
pop
add
xchg
pop
sbb
movsl
aad
sahf
cmc
push
mov
inc
sub
nop
cmp
mov
xlat
incl
jo
sbb
push
add
cmp
hlt
mov
test
es
mov
push
pusha
or
xchg
fldenv
inc
mov
inc
push
cwtl
cmp
test
fwait
xor
fwait
mov
fucomi
lcall
mov
mov
movsb
mov
ret
mov
insb
mov
mov
outsl
sarb
mov
mov
lret
xor
ds
inc
add
mov
adc
mov
add
or
pop
xor
negl
sbb
inc
mov
das
cmp
bound
mov
enter
mov
leave
ljmp
lret
adc
pusha
insl
push
mov
push
pop
mov
add
mov
pushf
pop
pop
jne
aas
popa
jge
or
inc
ljmp
and
outsl
outsl
sub
loop
pushf
arpl
adc
addr16
jmp
push
repz
ja
outsl
adc
jl
lock
sbb
sub
sarl
xor
ss
dec
and
adc
mov
xchg
jle
add
lods
mov
push
adc
mov
imulb
adcl
xchg
mov
dec
jmp
or
cmc
out
jle
xchg
mov
jmp
pop
sbb
mov
jae
mov
mov
cmp
jecxz
mov
push
scas
int
test
jmp
xchg
add
inc
push
dec
pop
pop
cmp
into
insl
push
fmull
rol
shl
fst
push
jnp
jns
mov
shll
push
inc
ss
in
adc
xchg
or
jle
test
arpl
cvtdq2ps
add
inc
lods
out
rcrl
into
jnp
xlat
sub
repz
das
adc
inc
mov
mov
in
and
adc
xor
rolb
dec
mov
mov
loop
negl
imul
mov
push
in
xchg
int
insl
or
and
xchg
mov
jb
mov
insl
dec
or
sahf
jbe
pop
lea
inc
rorl
or
lahf
dec
scas
popl
in
xor
imul
data16
fsubl
dec
cmp
sbb
pop
js
or
sub
cwtl
dec
jge
jnp
push
fwait
roll
mov
or
pop
movsb
push
fimuls
sbb
lock
inc
idiv
movsl
sbb
sub
psubd
movsb
scas
roll
fwait
test
sahf
add
xchg
adc
adc
and
mov
and
enter
nop
xchg
sbb
dec
sub
push
mulb
loopne
pop
pop
int
mov
shl
fcoml
xor
clc
scas
fsubrs
sbb
je
movsl
cmpsb
ljmp
sbb
inc
sbb
psubusb
mov
push
add
popf
in
xchg
sub
les
test
sub
icebp
mov
cli
pop
or
outsl
sbb
sbb
mov
adcb
cli
mov
push
fsubrs
xchg
dec
mov
inc
shlb
outsl
pop
pop
pushf
mov
cmp
gs
ret
int3
mov
in
je
and
xchg
aam
push
adc
stos
push
ss
hlt
dec
push
push
idivl
add
or
jp
xor
outsl
lret
xor
bound
mov
adc
bound
enter
sub
dec
cld
adc
jae
pop
je
xor
aam
cmp
jbe
iret
add
xor
and
cmpsl
jns
arpl
aad
dec
xchg
clc
and
shl
adc
into
divb
jnp
fldt
stos
lods
in
dec
hlt
mov
shlb
mov
andl
mov
sbb
shrb
inc
adc
xchg
mov
das
xor
loope
sarl
jecxz
add
lcall
xor
adc
cmpsl
xor
lock
lods
jmp
jno
pop
mov
sbbb
mov
cmp
mov
aad
push
test
out
pop
ret
fisttps
cmp
and
hlt
jp
mov
das
dec
stos
or
mov
cmc
adc
lahf
push
mov
inc
sti
lcall
movsl
jns
fisttpll
push
and
cmp
cmp
push
jb
add
fisttpl
sub
nop
and
cld
mov
fwait
aam
insl
repz
xor
cmp
add
inc
push
daa
push
lods
movsl
nop
mov
sub
icebp
arpl
mov
xor
adc
or
xor
xchg
fbstp
mov
mov
sbb
jl
inc
sbb
jmp
dec
fs
fisubrs
add
mov
dec
jge
push
mov
and
sub
jp
mov
pop
mov
test
mov
loop
xchg
and
das
test
inc
movsl
mov
daa
dec
outsl
cmp
pop
outsb
pop
inc
sub
jmp
repz
pop
repnz
cmpsb
mov
popa
test
dec
dec
or
mov
xchg
cmpsb
jecxz
rorl
jle
push
cmp
hlt
negb
das
and
xchg
inc
or
mov
push
jge
das
sub
mov
sub
lods
dec
rol
sbbb
dec
mov
mov
push
in
aas
inc
lahf
les
fmul
add
dec
sahf
mov
push
xchg
fwait
cmp
js
dec
aad
addb
pop
inc
pop
inc
outsb
sbb
ds
out
and
dec
mov
pusha
pop
xchg
fnstcw
cmpsl
lock
bswap
ret
cld
fmul
pop
inc
insl
aam
loopne
int3
inc
mov
xor
int3
mov
jle
xor
xor
add
loop
mov
pop
push
pop
cltd
xchg
mov
and
ret
lea
push
ret
cltd
mov
push
stos
mov
sar
stos
sbb
xor
mov
push
dec
xchg
jmp
lret
cmpsb
sarb
cmp
lret
shr
sti
mov
cld
repz
mov
jmp
dec
pop
ret
sub
sbb
and
and
hlt
pusha
lahf
dec
and
aas
loopne
pop
in
pop
push
add
test
xchg
jecxz
mov
adc
iret
ret
sti
xchg
aad
mov
pop
insb
jmp
xor
inc
sbb
xchg
call
insl
push
adc
mov
mov
pop
mov
and
movsl
fadd
mov
inc
push
cmp
fists
in
aas
in
lock
out
hlt
jne
xchg
rol
mov
insb
lock
and
push
xchg
mov
aaa
and
test
jecxz
leave
sub
jmp
mov
jg,pt
or
inc
adc
sub
addr16
sbb
nop
push
mov
cld
popa
fnstcw
inc
mov
mov
fisubl
enter
mov
insb
mov
sti
data16
aam
mov
add
pop
lahf
jnp
adc
cld
push
std
add
out
pop
dec
addb
shrb
imul
sub
pushf
and
ljmp
mov
test
shlb
popf
cmp
fnsave
in
out
ret
aas
cltd
rcr
pop
pop
insb
jmp
sti
dec
gs
cltd
xlat
or
sbb
daa
push
in
adc
xlat
insb
xchg
faddl
push
mov
sahf
adc
jbe
mov
ss
mov
cmc
mov
pushf
lcall
and
lret
stos
insl
test
jg
pop
sbb
sbb
fbstp
fs
shll
int3
and
sti
mov
popf
lods
icebp
imul
insl
mov
lock
sub
fisubrs
ret
rcll
outsb
jnp
jl
ror
xor
cmp
pop
mov
add
mov
movsb
xor
jae
mov
fdivp
inc
in
fwait
push
adc
mov
subl
inc
pop
test
test
push
cli
push
push
dec
shrl
nop
mov
or
lahf
mov
in
mov
lret
mov
push
dec
ror
movsb
mov
and
aad
pop
rclb
das
xor
sbb
xchg
repnz
xchg
pop
icebp
out
test
cmp
fisttpl
fidivl
jle
jle
rep
stc
rcrb
data16
das
mov
or
popa
loope
push
mov
icebp
icebp
shll
cs
xor
xchg
aas
fimull
imul
int3
loop
jnp
into
xor
decl
mov
outsl
mov
mov
xor
xor
loopne
sbb
xor
test
popa
mov
loopne
ret
mov
out
mov
loop
xlat
push
xor
cmp
imul
or
xlat
out
in
fadds
xor
and
jmp
shl
aad
lods
mov
cmp
xchg
inc
pushf
sub
xchg
lahf
adc
cmp
std
cmc
lock
test
push
pop
push
aad
in
cmp
pop
sbb
jno
dec
mov
mov
test
cmp
aam
add
test
xor
dec
push
lahf
pusha
adc
pop
dec
in
lret
cmpsl
ljmp
mov
repnz
mov
into
inc
mov
stos
dec
sub
cmp
jecxz
fldl
repz
jl
inc
in
mov
hlt
xor
lock
out
loope
shrl
jae
mov
push
xchg
bound
push
jle
pusha
rcrl
mov
test
jl
jb
ss
pushf
xchg
clc
or
mov
lret
mov
and
inc
sub
jne
dec
and
rolb
xchg
add
les
jb
daa
fidivl
mov
cs
xor
jl
icebp
in
push
std
sub
jae
rcrl
cmpsb
push
or
mov
dec
shl
je
xchg
jmp
and
adc
mov
ss
stos
xchg
mov
sbb
out
arpl
xchg
mov
mov
fs
adc
xor
jl
xchg
rolb
les
dec
pop
lds
fiadds
dec
lods
cmp
das
sub
lock
sub
xchg
lcall
daa
lods
xorb
hlt
subb
lock
jns
sub
imull
and
jno
fstps
je
cli
and
pop
xor
xor
test
and
pop
xor
inc
push
mov
test
jge
sub
sbb
push
dec
push
inc
cmc
or
movsl
sti
mov
repz
cld
or
mov
popf
adcl
int
std
inc
test
and
and
adcl
pop
les
xorl
inc
imul
lods
xchg
mov
mov
cmpsb
xchg
incl
scas
xchg
popa
or
in
dec
adc
jecxz
or
dec
xchg
xchg
push
lods
sbb
xchg
cmp
xchg
push
mov
xor
cmp
inc
inc
jmp
hlt
xchg
cmpsl
vmwrite
daa
add
or
xchg
dec
jb
pushf
or
lods
out
mov
mov
outsb
sbb
ljmp
sub
pop
loope
fmull
mov
cmp
jl
js
dec
and
fcoml
lcall
pusha
pop
outsl
int3
iret
lret
mov
xor
pop
add
out
nop
mov
sarl
xor
sub
mov
xor
mov
cmc
cmp
movsl
cmp
xchg
lea
lahf
fsubrl
fnstenv
xor
jp
mov
mov
push
push
jle
jle
fsubr
fld
sti
mov
jo
ss
aas
dec
mov
je
lret
insb
int
out
xchg
dec
sbb
jnp
sarl
jo
fistpl
mov
arpl
sbb
jg
mov
mov
inc
out
xor
decl
inc
inc
xlat
int
push
sbb
xor
enter
mov
push
push
scas
push
and
and
sbb
inc
lret
jecxz
arpl
inc
imul
lret
int3
mov
sub
insb
int
sahf
enter
sbb
inc
sub
xchg
or
fiadds
xchg
aaa
lds
dec
and
or
jns
cs
and
mov
pop
hlt
call
xchg
adc
sub
jnp
icebp
push
jns,pt
addb
inc
aas
das
pop
fcomps
loope
push
inc
mov
repz
dec
xchg
cmp
inc
repz
test
insb
adc
daa
sub
cs
fldcw
lret
pop
in
stos
dec
pop
aas
sub
xor
in
dec
mov
shlb
dec
cli
clc
or
adc
sbb
stc
test
or
push
jle
jle
arpl
mov
push
mov
mov
aad
and
shll
mov
push
pushf
mov
inc
jbe
cltd
repnz
sub
negl
lret
push
inc
rclb
data16
pop
adc
loope
dec
cltd
lahf
jae
xlat
gs
sub
aam
jae
repnz
fldl
mov
cli
cmp
or
mov
xchg
pop
popf
inc
test
adc
dec
pop
sahf
mov
and
call
lahf
sub
sub
pop
ffreep
and
jnp
clc
iret
inc
cld
scas
popf
loop
out
dec
jge
push
or
dec
pop
pop
in
jne
std
in
lcall
aad
inc
mov
push
cmc
xchg
and
out
cmpsl
and
arpl
push
ds
addr16
or
inc
push
pushf
daa
inc
out
sbb
les
sbb
stos
sub
push
bound
push
pop
pop
jae
lahf
mov
lods
mov
jo
lods
pop
inc
loope
int
push
scas
xchg
xchg
lcall
negl
cmp
aaa
xchg
test
xchg
iret
js
loope
into
lcall
pop
adc
push
adc
aaa
fs
sbb
test
sub
fsubl
cmp
ror
testb
fcoms
lds
dec
cmp
xor
adc
sbb
jmp
sub
mov
test
inc
aam
xor
aad
mov
enter
lea
mov
out
add
mov
movsb
xchg
shlb
popf
aaa
frstor
les
out
inc
aas
ss
mov
nop
movsb
sub
jg
outsb
or
and
icebp
dec
jae
xchg
outsl
inc
mov
sarl
test
into
into
inc
rclb
jo
or
inc
test
fisttpl
mov
out
or
jg
push
aaa
aas
std
ja
out
psrlq
inc
pop
or
in
cmpsb
mov
mov
or
sarb
push
stos
xchg
push
sub
and
push
jecxz
or
shll
ret
scas
dec
clc
pop
in
test
mov
mov
jg
lds
stos
rcrl
sbb
xchg
adc
out
shrb
mov
dec
inc
outsb
mov
scas
insl
sub
faddp
in
hlt
mov
imul
add
stc
pop
mov
imul
adc
lods
push
stos
loop
jmp
mov
mov
jecxz
cltd
jae
cmp
inc
gs
cmpsl
mov
push
popf
mov
jno
pop
je
push
push
pop
adc
jle
testb
mov
or
inc
ficoms
scas
sub
loopne
dec
int3
jae
add
lret
call
in
xchg
shl
gs
fcmovnb
in
jl
aam
loopne
in
xchg
jecxz
cmp
add
repz
push
pop
in
mov
inc
adc
jg
dec
pop
rcll
mov
add
stc
mov
sub
push
or
shr
xlat
cmp
testb
mov
push
add
arpl
mov
xchg
sub
mov
inc
dec
adc
in
out
aaa
popl
jmp
inc
outsb
push
dec
insl
hlt
mov
imul
fcomi
ljmp
cmp
jbe
sub
and
inc
xor
xchg
add
lea
arpl
popa
mov
xor
add
and
dec
mov
ret
out
scas
xchg
data16
fistpll
add
mov
bound
mov
cwtl
xchg
add
jecxz
cwtl
or
outsl
cwtl
popa
insb
mov
sub
sbb
cmp
sub
inc
pop
mov
jnp
das
cmp
push
jo
les
inc
cmpsb
xor
push
into
aam
jmp
mov
jecxz
mov
pop
aas
aam
dec
inc
es
outsl
jae
mov
call
xlat
fsubp
orb
stc
cli
test
call
in
sub
xor
mov
mov
mov
pop
xchg
sti
dec
push
data16
mov
inc
mov
mov
test
jne
push
js
mov
test
std
roll
sbb
and
shlb
fisttps
xchg
and
dec
inc
stos
lret
xchg
fdivs
movsl
pop
push
fnstsw
repz
rol
xchg
pop
or
movsl
mov
popf
sbb
cs
addr16
imul
xor
out
sti
pop
push
ret
testb
mov
xor
cmp
push
cld
leave
test
xor
cld
mov
in
dec
add
test
adc
enter
scas
dec
out
pop
pop
lret
ljmp
pushf
stos
dec
xchg
imul
pop
add
add
nop
add
loope
inc
sbb
pop
adc
inc
div
fs
repz
jae
jg
enter
repz
call
sbb
cmp
out
xorb
fcompl
mov
testl
jp,pt
xlat
dec
pushf
pop
mul
movb
lods
aam
movsl
pop
mov
aaa
add
ja
shrl
inc
mov
daa
test
dec
out
adc
lods
aam
into
push
xor
mov
mov
dec
fucom
jbe
pop
and
ret
dec
out
movsl
fs
outsb
fmulp
ds
push
mov
mov
push
fildl
pop
cmp
sbb
mov
add
sbb
and
add
sahf
pop
xchg
jnp
cltd
xor
inc
std
xor
aaa
flds
movsl
call
sbb
fistpll
fsubs
sub
or
dec
jmp
movsb
push
lods
jge
mov
ja
mov
daa
dec
or
mov
lods
pop
inc
je
stos
stos
cmp
popf
pushf
scas
dec
sub
cmp
sar
js
mov
dec
out
aad
add
insl
or
push
and
lds
or
rorl
sbb
xor
std
hlt
sub
outsl
out
mov
fistps
xchg
mov
cld
fdivl
negl
xchg
ds
ret
mov
into
dec
and
dec
dec
sahf
gs
push
mov
js
shr
std
ret
jno
pusha
scas
push
stos
dec
push
and
dec
movsb
mov
pusha
mov
mov
gs
pop
sbbl
inc
sub
add
test
jne,pt
pop
fdivrs
mov
mov
sbb
adc
cli
adc
ja
mov
shlb
push
rcl
sub
lds
push
inc
jno,pt
filds
scas
inc
ss
ret
mov
in
push
fdivl
push
sbb
incl
test
add
out
insb
push
adc
imul
pop
cltd
fwait
inc
push
adc
inc
sub
aaa
sbbl
lahf
sbb
jne,pt
pop
movsl
and
xchg
ja
and
mov
mov
cmp
inc
mov
ficoms
jae
and
mov
les
cli
push
sti
shll
test
adc
xchg
stos
cli
loope
mov
jb
xchg
arpl
jle
mov
push
xchg
mov
sub
cmp
in
pop
xchg
mulb
cmp
sub
pop
lods
cmp
cmpsb
aaa
cmp
inc
mov
xor
sbb
mov
and
rorl
mov
dec
ror
daa
cmpb
push
inc
ret
push
ffree
push
popf
test
dec
dec
aaa
xchg
push
inc
fwait
ror
les
rclb
addr16
sti
xor
lock
loope
popa
enter
push
ret
rorb
not
repz
mov
sub
sti
test
data16
and
mov
lds
adc
push
dec
sbb
cmpsb
enter
add
fcoms
rclb
ret
icebp
test
loopne
mov
into
test
sbb
xor
mov
cld
sub
cmovs
push
ss
cmp
sbb
jg
test
movsl
jae
pop
cmp
push
fildl
rclb
jge
sbb
mov
loope
fimull
inc
xchg
cmp
sbb
lahf
js
add
or
inc
pop
pop
ja
pop
pop
pop
rol
out
pop
data16
rcl
mov
scas
jecxz
xchg
cmp
subl
fstl
rorb
jl
jg
int
add
cmp
lds
out
pop
popf
fs
sbb
imul
pushf
scas
fildll
cltd
add
jp
push
aaa
insl
sbb
mov
xchg
pop
lret
xor
das
clc
stc
adc
sbb
shlb
jns
xchg
mull
jno
scas
add
xchg
cmp
cmpsl
ss
repnz
ret
jb
cmp
dec
adc
sub
xchg
mov
cmpsb
add
out
pop
and
ja
xlat
xlat
scas
mov
cld
insb
jb
mov
jle
add
pop
je
add
or
xchg
xor
outsb
mov
xchg
mov
jae
dec
pop
shlb
loope
push
nop
xchg
mov
xor
repz
xchg
mov
stos
inc
add
icebp
fcompl
imul
jecxz
mov
lret
loope
mov
iret
subb
push
dec
imul
mov
jmp
mov
in
inc
mov
aad
adc
jbe
dec
pop
mov
imul
or
fimull
xchg
ljmp
ficompl
dec
push
inc
arpl
popf
loop
stos
mov
addr16
sbb
push
add
inc
movntq
out
test
pop
mov
out
in
inc
mov
fnstenv
add
ss
add
mov
push
pop
mov
xor
ds
jmp
addr16
test
pop
jecxz
sub
and
jns
loope
repz
lret
ds
xchg
inc
pusha
por
mov
add
xor
cwtl
sub
clc
and
fdivl
lods
push
into
movsl
jae
rcll
pushf
div
arpl
mov
mov
adc
in
xchg
mov
clc
mov
pop
adc
lahf
fiadds
sub
js
push
into
jae
fdiv
pop
xorl
jmp
xchg
clc
xchg
lcall
jecxz
push
pop
popa
mov
in
in
cmc
data16
and
fidivs
xchg
push
imul
push
adc
pop
mov
dec
in
xchg
xor
or
cmc
jecxz
push
cwtl
sti
mov
in
mov
das
cmpl
push
imul
sbb
jnp
cmp
das
adcl
out
mov
pop
out
add
jbe
cltd
stos
pusha
cs
stos
ret
nop
mov
xchg
movsb
pop
inc
xchg
pop
pop
push
push
stos
xchg
nop
mov
bound
ds
and
mov
test
push
adc
adc
xchg
out
jge
pusha
push
dec
fbstp
xchg
mov
insl
js
mov
icebp
ljmp
mull
xor
sbb
xchg
jge
test
imul
repz
movsb
lcall
and
lahf
or
fwait
and
pushf
inc
push
std
js
popf
sbb
and
xor
rorb
shl
adc
popa
sarl
lods
mov
mov
cmpsb
jge
or
add
dec
pop
push
enter
gs
mov
enter
cmp
dec
jmp
or
cmpsb
stos
rorl
push
xor
faddl
daa
fmuls
jno
xchg
adc
add
mov
add
mov
xchg
or
arpl
mov
pop
xchg
mov
fcoml
push
push
mull
test
jae
stc
jnp
mov
leave
and
ret
xchg
mov
insl
cmp
adc
cmpsb
mov
imul
xlat
fdivrs
mov
lret
mov
xchg
add
jb
mov
jecxz
fbld
aam
dec
mov
pop
nop
mov
test
adc
and
sbb
loopne
push
adc
lahf
adc
pop
rolb
cmp
ret
fsubr
xchg
jge
jg
test
into
xchg
ror
in
mov
iret
mov
addl
pushf
xor
xchg
cmp
mov
xchg
sbbb
mov
fisubrl
mov
pop
aas
adc
inc
jne
add
fbld
ds
jg
arpl
popa
in
in
lds
jle
addr16
sub
nop
adc
push
xor
gs
and
das
cwtl
les
add
add
sub
or
inc
iret
add
dec
pop
aas
pop
cmpsb
insl
or
jae
push
fmuls
ss
lret
decl
or
fcmovbe
mov
les
sbb
mov
sbb
decl
inc
dec
sbb
pop
pop
lret
push
push
addr16
mov
rolb
jp
insl
adc
ret
pop
jmp
cmp
adc
lea
inc
rep
lods
loopne
stc
mov
ljmp
mov
sbb
nop
icebp
mov
sub
xor
nop
sub
in
jl
lock
fadds
cltd
sub
call
shrl
rorb
push
sbb
and
xchg
popf
dec
or
add
dec
add
cmpsl
jp
aas
arpl
push
adc
movsb
mov
lods
adc
xchg
out
inc
les
daa
aad
cmp
jne
repz
idiv
in
xor
fs
adc
pop
test
mov
jnp
xchg
push
sub
shrb
jne
loopne
mov
xchg
popa
cmp
jmp
repz
pushf
pop
dec
pop
add
push
imul
xor
jns
dec
pop
repnz
fcoms
push
bound
cwtl
dec
lahf
sbb
int
mov
push
sbb
cld
clc
dec
lock
jo
pop
add
fcompl
mov
add
adc
pusha
mov
data16
in
adc
mov
mov
fidivrs
mov
mov
jecxz
cmp
xchg
ljmp
ret
sub
push
dec
inc
fdiv
fisttpl
in
int
jg
lods
pop
pop
jno
mov
das
in
rorb
push
inc
or
inc
imul
movsl
jge
and
adc
xchg
inc
push
es
lret
mov
jg
clc
pusha
add
sub
xlat
mov
fists
fnstenv
xor
cltd
shll
or
or
adc
mov
cmpsl
add
outsl
addr16
call
push
lahf
shlb
inc
incb
push
pop
scas
mov
add
cmp
adc
out
cmpsb
cwtl
imul
cmc
mov
rolb
jg
jno
pop
ljmp
jp
ffreep
sub
cmpsb
xchg
hlt
inc
pop
xchg
jb
push
stos
movsb
enter
lret
lock
sbb
aas
idiv
xor
xchg
sti
fidivrs
cmp
subl
shl
les
mov
arpl
pop
adc
xor
sbbl
mov
mov
out
dec
out
push
push
fistl
sbb
adc
xchg
and
hlt
push
inc
push
out
loopne
xchg
les
adc
in
imul
out
adc
adc
test
push
inc
aam
jb
dec
les
ret
mov
add
ror
icebp
test
call
lret
cli
jge
xchg
es
jno
daa
push
stc
insl
hlt
jecxz
scas
not
es
fwait
mov
lret
jo
mov
imull
cltd
sub
enter
add
inc
pop
sbb
ret
imul
cmp
inc
popa
mov
cmp
les
jp
or
or
or
leave
test
mov
or
or
jl
mov
sub
loopne
pop
fs
pop
jg
xor
mov
push
inc
sub
into
mov
lods
or
push
dec
jb
int
mov
xor
imul
push
cld
out
mov
leave
call
push
fdivrl
das
test
mov
pop
addr16
xor
js
xchg
jg
stos
test
sbb
loope
sbb
shrb
cmp
subb
das
xor
and
lahf
mulb
shlb
inc
jg
mov
inc
dec
lods
sub
cmp
lods
jge
and
movsl
scas
incb
adc
xchg
jle
mov
in
mov
push
fmul
and
cwtl
cmpsl
jmp
add
and
arpl
fldl
xchg
add
imul
call
mov
add
stc
std
dec
in
jae
jecxz
mov
insl
add
fadds
testl
add
xchg
inc
divb
inc
adc
in
mov
sub
repz
cmp
cmc
add
pop
lock
lods
dec
mov
sahf
jne
cmp
test
cwtl
test
icebp
cltd
and
aas
imul
jl
dec
das
pop
lretw
inc
mov
sbb
fs
andl
das
sub
push
in
jmp
pop
mov
arpl
fwait
or
andl
cmp
call
pushf
pop
push
pop
push
jecxz
mov
push
dec
shlb
add
jns
shll
pop
stc
push
aam
mov
cwtl
mov
inc
das
cmpsb
mov
pop
leave
mov
pop
cs
notl
dec
cmc
jbe
addr16
nop
ret
out
mov
pop
out
clc
mov
into
mov
mov
cmpsb
xchg
dec
mov
inc
cld
addb
outsb
repnz
sbb
pusha
inc
call
pushl
aaa
mov
rol
mov
movsl
sub
cmp
cmp
push
je
push
pop
xchg
lds
push
sti
ljmp
add
mov
rcrb
cmp
arpl
ja
loope
cmp
xchg
ja
adc
movsb
mov
mov
add
xchg
es
add
ret
jmp
inc
mov
sub
push
xchg
loopne
insl
fidivl
and
xchg
push
nop
test
adc
cmpsl
sub
daa
rcrl
xor
in
out
pop
sahf
call
js
ret
jge
jl
andl
sbb
xor
lods
xor
xor
bound
and
jp
cmc
fnstsw
push
pop
add
push
mov
xbegin
iret
adc
jp
adc
pop
sarb
out
xchg
add
mov
mov
mov
test
pop
cwtl
pop
xchg
lret
insl
nop
mov
adc
or
cmpsb
xchg
lret
sbb
lds
mov
inc
divl
and
mov
or
stc
test
mov
adc
in
sahf
sub
or
nop
movsb
leave
pop
pop
aam
add
jae
xlat
add
pop
cmp
icebp
fisttpll
in
inc
adc
jg
jbe
dec
push
stc
repnz
jmp
pop
or
out
sub
loopne
lret
or
pop
sub
shrl
jecxz
or
in
ret
arpl
ss
xchg
cmpsb
push
mov
sbb
jmp
rol
lods
mov
sbb
xor
into
js
xchg
push
popa
jnp
pop
loope
scas
fwait
stos
adc
stc
mov
push
sbb
adc
or
scas
push
or
sub
ret
mov
dec
out
mov
jno
lcallw
hlt
loope
leave
outsb
pushf
mov
shrb
ds
das
lcall
test
mov
add
push
pop
mov
mov
push
dec
repz
sbb
movsb
mov
inc
sahf
and
in
mov
loope
insl
outsb
mov
jg
inc
fdiv
xor
jecxz
sub
aaa
clc
lock
pop
mov
dec
in
mov
aad
mov
cmp
pop
cmp
in
inc
out
xchg
and
add
out
popf
inc
push
outsl
dec
cli
xchg
sbbb
cli
bound
xchg
mov
scas
dec
mov
es
out
not
ret
mov
jno
cwtl
and
lsl
enter
inc
sub
dec
int
pop
lock
push
test
or
mov
adc
mov
ss
xchg
movsbl
jg
sbb
lds
and
nop
dec
sbb
out
inc
mov
jbe
dec
mov
daa
je
lods
les
in
xor
mov
out
in
xchg
add
shrb
popa
inc
incl
mov
push
jmp
inc
aad
popa
jmp
arpl
mov
sbb
xor
dec
aas
dec
mov
out
ss
lret
dec
xchg
sbb
jae
push
insb
fildl
das
mov
cmp
outsl
pop
clc
mov
xlat
push
sbb
cld
fs
pop
sarl
push
push
mov
pop
sub
pusha
lea
cltd
stos
adc
add
in
inc
push
movsb
lods
test
inc
ds
jo
fnsave
add
mov
sahf
lret
cli
icebp
pop
aaa
inc
ss
jp
jbe
xchg
inc
mov
mov
fldcw
dec
sbb
imul
rorl
mov
mov
adc
stos
add
dec
pushf
ror
pop
mov
cli
xlat
pmuludq
xor
xor
mov
popa
pop
and
push
sti
mov
lods
mov
mov
add
add
and
xchg
xor
and
jmp
jae
mov
jo
loopne
es
mov
mull
sbb
imul
push
orb
and
shrl
jo
cmpsb
push
adc
adc
push
movsb
push
mov
shlb
addr16
inc
jmp
jl
mov
aas
jp
push
sbb
ja
xchg
sbb
mov
sbb
ljmp
dec
pop
adc
loopne
cmp
int3
aam
mov
mov
inc
sub
dec
shl
sbb
jns
int
andl
sub
repz
lods
jecxz
push
add
cld
inc
out
repnz
mov
jmp
bound
xchg
div
sahf
inc
outsb
mov
sub
dec
aas
cmp
ds
mov
pusha
repz
lcall
mov
push
cmp
and
addl
cmp
ljmp
mov
int3
push
out
out
push
adc
jecxz
stos
cld
push
rolb
jmp
dec
hlt
aad
cmc
push
stos
sub
lret
pushf
test
xchg
fnstcw
leave
jp
mov
push
sbb
hlt
sub
mov
mov
add
insl
cmp
add
fwait
mov
mov
mov
mov
sbb
mov
int3
mov
inc
adc
adc
fcmovne
testl
out
mov
add
stos
mov
out
xchg
es
ficompl
cmc
cmpb
cmc
xorb
xlat
mov
movsb
xlat
jno
inc
mov
sub
or
es
mov
movb
loop
jae
les
dec
std
arpl
pop
adc
repz
inc
add
pusha
iret
cwtl
imul
imul
sbb
mov
cmp
mov
loope
dec
sbb
pop
cmp
jns
iret
mov
mov
mov
daa
mov
and
lds
cli
out
cmp
mov
push
std
mov
imul
xchg
mov
pop
mov
jo
inc
jns
sbb
or
stos
pusha
mov
or
clc
pop
add
inc
stc
mov
mov
and
inc
jne
test
sbb
jp
push
aas
push
mov
in
dec
repnz
fwait
lods
stos
call
adc
mov
jo
adcb
into
mov
outsb
mov
les
sub
dec
jl
mulb
lea
mov
arpl
stos
orb
pushf
dec
psubd
repnz
or
dec
cli
mov
rcl
inc
mov
mov
fucom
loope
int3
jno
movl
inc
imul
cmp
jl
and
stos
loopne
mov
push
sbb
sbb
inc
and
stos
movsl
sub
sub
scas
xor
jne
xor
mov
pop
inc
jge
pop
jne
jns
sbb
jo
lahf
popf
mov
inc
mov
xchg
addb
mov
mov
out
fwait
sbb
jp
xchg
adc
dec
mov
adc
nop
and
mov
ret
mov
outsb
mov
push
inc
dec
je
in
lret
fists
pusha
ss
in
or
xor
inc
out
mov
pop
into
xor
pop
push
aad
incl
fisttps
sbb
clc
movsl
rcll
dec
xor
mov
mov
xchg
mov
and
out
lea
mov
xor
insl
mov
fimull
mov
in
push
cmp
sbb
fadds
sub
jp
outsb
mov
nop
cmpb
xchg
mov
shrb
and
cmp
adc
xor
and
outsl
and
test
adc
test
mov
jecxz
loop
add
cli
jno
repnz
sti
fucom
arpl
in
ljmp
cltd
jp
outsl
inc
bound
dec
mov
mov
pop
bound
sub
lea
dec
lret
les
ds
or
addb
gs
mov
lret
push
sub
hlt
cmc
dec
scas
repz
push
push
imul
movsl
xchg
in
daa
fs
sub
push
gs
cmp
ret
xchg
add
xor
inc
xchg
js
flds
cmpsl
pop
lods
aam
jmp
and
sbb
jecxz
mov
ljmp
test
and
mov
cltd
invd
cli
mov
cld
and
loop
mov
aam
mov
mov
push
decl
leave
fbstp
arpl
sbb
fidivl
xchg
icebp
jp
mov
rorl
int
ret
jb
aam
ds
stc
ret
out
cmp
xor
jns
mov
xor
sub
popa
sub
xchg
xchg
mov
jl
jmp
inc
jns
stos
cltd
lds
add
mov
call
fwait
xchg
idivl
pop
pop
fmulp
push
jns
sub
pop
xor
dec
adc
or
mov
pop
or
and
in
push
pop
mov
clc
call
mov
outsb
mov
mov
loop
mov
adc
jmp
inc
push
add
mov
xor
cmp
fcos
xchg
mov
or
cmp
and
aad
xchg
jbe
test
push
adcl
adc
test
push
in
push
sub
pushf
adc
and
mov
pop
subb
sbb
xorb
pushw
adc
add
jmp
bound
xchg
loop
int
lret
sbb
jo
mul
rcr
ljmp
xor
mov
push
lahf
pop
in
xchg
sub
push
divl
dec
mov
ret
es
inc
scas
mov
pusha
mov
rolb
mov
cld
inc
xor
pushf
mov
cmp
dec
test
cmp
mov
lahf
mov
daa
hlt
cltd
jb
in
roll
out
and
or
mov
xchg
jbe
jno
jns
sbb
cmp
pop
jge
daa
das
pop
mov
mov
aad
pop
imul
mov
push
push
and
or
aas
inc
cli
lock
imul
orb
sub
lods
fwait
movsl
dec
sub
stos
xchg
sarl
loopne
cltd
sbb
mov
out
adc
jle
inc
in
and
nop
jno
daa
xchg
cmp
popf
sub
cld
cmpsb
stc
jo
cmp
in
mov
sti
dec
pop
and
test
xchg
in
jae
in
mov
cld
sbb
sti
incb
dec
or
pushl
out
sbb
cmp
call
mov
pop
data16
mov
add
mov
fisubrs
fwait
mov
ljmp
popa
fisttps
adc
dec
mov
enter
fisttpl
inc
bound
push
pop
clc
cmp
mov
inc
out
aad
sub
sbbl
leave
cmp
and
inc
pop
xchg
imul
std
mov
aas
clc
dec
dec
insb
lock
scas
mov
inc
jbe
outsb
adc
push
xor
push
cmp
or
cmp
pop
mov
or
sbb
add
and
cli
inc
outsl
mov
iret
shrl
add
push
pusha
sbb
fimull
or
insb
push
mov
adc
ljmp
pop
fcomi
adc
cmpsb
aaa
mov
lcall
int
imul
xchg
arpl
mov
mov
pusha
stos
and
adcl
dec
cli
jp
jb
xchg
inc
sub
dec
cmp
jno
out
int
inc
mov
mov
outsb
xchg
dec
in
insl
sti
loope
shll
adc
cmp
xor
jle
mov
mov
cmp
xchg
test
add
push
loope
cli
fldt
dec
jp
pop
push
stos
pop
push
shlb
lds
cmp
lock
inc
jl
stos
cmp
fsubrs
lret
lods
aam
or
les
fnstsw
and
ss
inc
sub
mov
mov
xchg
sbb
jp
push
pushf
imul
aas
punpckhbw
addr16
ret
mov
fs
aam
shll
push
inc
push
push
test
add
fs
mov
ret
stos
test
outsb
inc
test
daa
ret
xchg
xchg
dec
pop
adc
mov
fcomi
add
jo
dec
mov
inc
mov
jge
inc
sbb
movsb
loop,pn
into
mov
and
addr16
mov
ret
fsubs
gs
pop
xorl
negl
dec
dec
adc
test
ret
push
push
push
in
mov
inc
xchg
pusha
stos
mov
lock
add
push
push
int3
shlb
test
inc
jmp
ret
pop
mov
mov
sbb
or
stos
fiadds
std
fisttpll
int3
jo
test
aad
or
xchg
jmp
cmpsl
mov
das
negb
add
xor
into
fdivs
or
rcrb
jmp
movsl
mov
adc
mov
dec
pop
popf
pushf
adc
xchg
xchg
and
adc
sbb
push
stos
lret
push
cmpsl
and
xacquire
outsb
cmc
xor
and
cmpsb
dec
and
sbbl
fdivrl
dec
mov
popf
dec
and
jecxz
jnp
sbb
ljmp
cmp
shll
sbb
pusha
mov
out
adc
iret
bound
jne
push
dec
sbb
xor
pop
xor
sbb
rorl
ret
mov
icebp
lret
repnz
sbb
push
mov
sbb
popf
cld
xchg
xchg
js
or
sub
dec
add
into
adc
xchg
ss
nop
ljmp
icebp
imul
jb
andl
mov
inc
nop
es
loopne
rcl
fstpt
bound
test
sarl
pop
add
mov
mov
jnp
pop
push
and
out
dec
leave
ds
dec
out
scas
dec
loopne
xor
cltd
sub
mov
mov
dec
int3
inc
mov
das
fists
push
xor
push
sti
jns
out
movsb
cli
and
out
lcall
repnz
test
dec
push
cmp
ret
loop
nop
and
and
pushf
sbb
adc
inc
aaa
lock
mov
pop
gs
push
ret
pop
fstpl
xor
gs
outsb
mov
add
cs
mov
push
inc
iret
jb
sub
cmc
cs
fldt
daa
popf
push
pop
add
push
dec
pop
push
inc
xchg
jb
and
and
add
jg
adc
add
and
clc
icebp
add
jl
imul
fnstenv
sbb
and
gs
scas
sub
xor
fisttps
and
icebp
pop
lds
mov
dec
inc
pop
popa
push
mov
cmpsb
pop
mov
sbb
ljmp
xor
mov
adc
adc
mov
addr16
sbb
lret
clc
aam
lahf
pop
sub
or
inc
sar
idivb
add
xchg
xchg
imul
loope
mov
pusha
outsb
push
pop
push
or
cwtl
insb
sbb
pop
les
xchg
add
xor
xlat
jns
sub
xor
stos
sub
imul
mov
push
icebp
aam
sbbb
add
add
and
jnp
in
mov
mov
inc
push
insl
insb
pop
jecxz
negl
rol
add
push
inc
frstor
push
rcrl
and
jnp
inc
cld
mov
adc
xor
rorb
mov
and
jns
dec
sbb
nop
stos
push
adc
cli
outsl
movsb
xor
pop
mul
out
stc
pop
negl
pop
push
mov
fiadds
sbb
or
add
test
out
aas
imul
sbb
add
cmp
xchg
gs
leave
lods
sub
push
decl
cwtl
and
and
pop
out
fistl
dec
ret
cmp
xchg
int
dec
daa
or
and
out
fidivrs
hlt
mov
push
dec
mov
lret
addr16
stos
cltd
aam
enter
iret
pop
sbb
test
js
in
pusha
call
mov
dec
add
inc
movsl
dec
decb
and
ljmp
pop
xchg
fwait
add
jg
jbe
lahf
scas
push
popf
scas
fidivrs
std
mov
xchg
cli
pand
int
es
lcall
push
jo
lgs
rcr
and
jle
aas
xchg
in
popf
sub
test
push
fnsave
pusha
xor
xchg
add
fnsave
xchg
stos
jl
inc
inc
or
lret
jne
add
mov
pusha
pop
mov
add
pop
lods
inc
mov
loopne
fwait
popa
mov
sti
or
dec
or
adc
scas
add
sub
xchg
ret
add
sbb
addb
xlat
xor
es
out
jg
fs
and
lea
adc
inc
push
inc
cmp
pop
imul
subb
es
sbb
mov
jecxz
cmp
adc
push
mov
flds
lea
bound
pop
popa
jge
xchg
jp
lock
mov
jmp
and
mov
add
ljmp
aas
aam
cmp
rclb
das
inc
mov
lea
idivb
popf
outsb
push
fmull
outsl
sbb
pop
mov
cltd
hlt
out
push
imul
popa
mov
test
jp
push
insb
aaa
xchg
ret
pusha
popf
popf
add
pop
call
out
stc
add
lds
clc
mov
sbb
outsl
xrelease
out
pushf
out
cmpsl
rolb
xor
jg
ss
into
jg
fildll
add
pop
cmp
lods
nop
xor
negb
outsl
sub
scas
jbe
mov
hlt
jmp
sbb
movsb
incb
js
mov
xchg
dec
incb
or
dec
jmp
mov
pop
ljmp
push
jp
jle
mov
cmpsl
adc
imul
sbb
push
dec
mov
es
lock
pop
cs
xchg
stc
pusha
in
mov
sub
lsl
inc
lock
inc
push
shlb
out
sbb
xor
dec
push
mov
filds
mov
sti
rcrl
test
mov
inc
ja
scas
stos
sbb
jmp
jo
cmp
pop
imul
in
push
mov
fwait
or
insl
jns
and
sbb
dec
rcll
xchg
das
repz
mov
jne
add
sub
or
xor
negl
das
jb
xor
jbe
push
cmc
scas
fdivs
jecxz
mov
dec
mov
pop
and
mov
in
ret
mov
mov
xchg
push
adc
cmp
xlat
and
aad
fwait
and
shlb
aas
lds
xchg
jbe
rorb
push
jle
bound
popf
jnp
fidivrl
push
mov
or
es
or
lahf
inc
sbb
push
movsl
mov
cmp
xor
jg
mov
xchg
out
bt
push
dec
rclb
xchg
xchg
mov
jnp
pop
push
cmp
mov
xlat
dec
jle
jl
pop
lcall
push
fmulp
out
mov
scas
in
cmp
iret
outsl
rclb
push
dec
test
xchg
adc
outsl
sar
xor
ss
push
add
push
jb
addr16
out
mov
jb
xchg
mov
out
mov
add
adc
lret
adc
lea
cwtl
dec
xchg
jmp
xlat
xor
nop
and
icebp
jbe
cmpsb
ficompl
or
sti
pop
jne
adc
mov
dec
sbb
jmp
inc
mov
insl
iret
pop
add
decl
cmp
dec
mov
jl
rorl
add
pop
add
sbb
xchg
nop
sahf
jge
lock
clc
stos
jne
sbb
inc
jnp
pop
ret
movsb
jle,pt
fisttpll
ret
mov
jmp
sahf
lds
xlat
stc
push
and
xor
and
negb
jae
popl
mov
lods
mov
push
test
mov
scas
sahf
rcrb
sub
push
lods
aaa
dec
inc
inc
sarb
jmp
mov
movsb
and
cmp
jmp
and
cmc
test
daa
inc
pop
mov
mov
pop
xor
negb
dec
pushw
or
lcall
lcall
ds
movsl
out
xor
dec
aad
ret
push
push
stc
sub
jne
jge
xchg
clc
xor
mov
repnz
repz
scas
fisttpll
xchg
lea
roll
xlat
push
cmp
sbb
mov
sarb
xchg
dec
add
lahf
cmp
pop
stc
push
jbe
in
adc
push
lahf
outsl
pop
lret
outsl
cld
cmp
mov
dec
xchg
lret
inc
mov
leave
out
dec
lods
adc
dec
cltd
cmp
test
lock
push
sbb
adcl
loopne
xchg
pop
inc
insb
sbb
dec
sbb
cld
movsb
adc
ja
or
loope
js
outsl
mov
dec
push
iret
mov
xchg
jg
std
scas
in
sub
cmpb
jle
vmovaps
cltd
mov
or
inc
sub
sub
test
jnp
arpl
std
and
xor
sahf
mov
in
call
add
out
cmp
push
xchg
andb
pop
gs
and
mov
movsb
rorl
cwtl
fdivl
push
fildll
outsb
cmpsl
fwait
xchg
adc
aad
movsl
cmp
dec
add
dec
inc
add
or
mov
lods
lret
scas
scas
pusha
test
push
push
arpl
push
sbb
test
pop
ljmp
clc
xchg
jne
mov
xchg
in
cmp
js
aad
mov
add
shr
pusha
repnz
inc
in
data16
xor
subb
shl
xor
mov
dec
sbb
or
mov
xor
aad
ljmp
orb
aaa
cmp
dec
push
das
rcrl
xchg
jl
daa
mov
mov
test
test
into
adc
pusha
pop
jl
in
imul
or
outsl
jo
jg
adc
pop
mov
clc
push
data16
gs
sub
gs
push
aas
aaa
and
addb
jns
adc
dec
scas
xlat
xor
ret
xor
cmp
nop
mov
ret
adc
gs
pop
mov
bt
ljmp
sub
test
xlat
out
arpl
add
or
mov
dec
enter
xchg
jb
mov
mov
mov
pushf
lds
cmc
das
mov
pushf
popf
mov
lds
repz
dec
xlat
sti
test
sarl
sbb
hlt
pusha
popa
or
inc
outsb
mov
pop
add
xlat
repnz
fiaddl
xchg
jae
cs
push
insb
movsb
pop
imul
pop
lods
pop
mov
xchg
mov
cmp
pop
xchg
adc
call
push
jp
xor
test
mull
mov
test
shlb
hlt
stos
or
loope
pop
pop
xor
adc
test
jb
push
stos
mov
lds
je
mov
aaa
push
inc
jnp
movsl
lahf
or
iret
ds
xor
or
sub
movsb
adc
pop
aas
and
negb
scas
fbstp
das
andb
fidivs
sbb
or
dec
jmp
pushf
notl
push
jb
mov
aam
ret
enter
lds
punpcklwd
mov
cmpsb
dec
fldenv
arpl
lret
jb
fidivrs
mov
rcll
pop
clc
mov
movsb
fsubrl
inc
adcb
push
push
mov
jb
xchg
push
test
pop
lcall
sub
sbb
mov
xor
out
scas
add
dec
adc
test
sub
adcl
xchg
push
data16
mov
push
add
adc
or
sub
sub
sahf
jg
jb
mov
pusha
scas
sub
xchg
lea
dec
lret
jl
inc
and
imul
jae
and
shlb
push
jns
insb
je
notl
addb
imul
into
mov
sbb
loop
lods
mov
stos
out
cmpsb
adc
orb
mov
dec
cltd
and
xlat
inc
dec
pop
pusha
shlb
xor
movsl
dec
out
int3
call
sub
inc
test
out
or
jl
imul
xchg
mov
push
aaa
sbb
shlb
mov
cmpsb
push
lods
pop
xchg
xchg
iret
and
fs
test
ret
fisttpll
and
mov
and
outsb
pop
inc
ss
jge
mov
adc
loop
sub
leave
mov
stos
fisubrs
jns
stc
popf
inc
cld
pop
rcrb
in
jmp
pop
pop
sub
loop
aam
out
mov
fistps
testb
inc
mov
push
int
rcrl
push
sarl
ljmp
mov
sbb
mov
mov
int3
std
inc
ffree
int
mov
jmp
sbb
sbb
push
popa
hlt
test
add
and
scas
jo
mov
cli
pop
cmp
out
dec
push
stos
inc
and
test
in
jp
test
xchg
cltd
xchg
imulb
adc
jp
dec
add
adc
addr16
inc
adc
mov
jp
or
outsl
fsub
out
jo
lcall
push
add
aas
fs
xchg
cmp
js
mov
stos
rclb
push
popa
imul
add
arpl
test
push
fisubl
adc
push
sub
inc
or
inc
push
or
movsl
adc
es
push
flds
rclb
out
and
mov
cmpb
sbb
data16
dec
mul
stc
sub
pop
jo
and
les
xchg
testb
and
push
xor
loop
dec
lock
arpl
cmp
shrl
dec
push
nop
imul
shlb
xchg
xor
imul
adc
mov
mov
mov
test
adc
and
xchg
or
dec
aas
scas
les
add
jno
adc
rorl
sub
addr16
push
xor
lods
xor
outsb
cwtl
ds
stos
scas
dec
xchg
cmp
in
ret
dec
sub
push
iret
je
js
in
and
and
or
into
das
shll
add
sbb
jl
repnz
in
pop
pop
arpl
stos
sub
iret
cmp
dec
inc
lcall
dec
daa
jb
xor
mov
push
push
cmp
das
sbb
in
lock
sbb
test
and
mov
xor
mull
cli
inc
scas
dec
std
icebp
insb
lret
lds
in
stos
pop
lcall
js
mov
push
sub
mov
pop
je
int
push
pushf
cmp
or
push
mov
ds
sbb
mov
jno
sub
lods
cld
push
jbe
inc
popa
sub
sti
out
sbb
shll
repz
frstor
or
sahf
pop
sub
pusha
jp
inc
sub
jno
cmc
xchg
test
mov
and
popa
out
shll
xorb
xor
dec
adc
cmp
roll
aaa
jnp
andb
nop
cmpl
rol
xor
adc
mov
sub
mov
push
mov
js
and
rcrb
sub
jmp
loopne
pop
into
fistps
inc
out
fdivl
xor
jno
test
jo
pop
jp
lret
dec
leave
pusha
xor
xchg
dec
arpl
jecxz
out
cmp
mov
mov
movsl
loop
mov
stc
dec
xor
sbb
les
jecxz
or
cmp
dec
pusha
arpl
vunpckhps
cs
insb
add
push
add
test
mov
push
hlt
add
pusha
mov
test
sti
push
negb
les
cmpsl
mov
xchg
mov
aaa
outsl
iret
mov
sbb
fstpl
paddusw
dec
xchg
addb
movsl
mov
movsl
push
xchg
cmp
inc
adc
aaa
pop
test
push
pop
gs
dec
movsb
mov
comiss
or
enter
pushf
cli
ret
icebp
rcll
xlat
jns
mov
lret
dec
fs
popa
inc
jl
mov
inc
jne
pop
rcl
mov
pop
fs
inc
sti
adc
fdivrs
outsl
sub
jne
cld
shrb
mov
mov
pop
ljmp
sub
pop
in
cmc
xchg
pop
push
sbb
mov
jle
aad
push
aam
iret
cmp
fstpl
inc
mov
fs
jb
enter
ljmp
into
into
dec
mov
xor
mov
fidivl
dec
in
add
jo
mov
sbb
xchg
lds
sahf
jae
xchg
addr16
shlb
daa
inc
aas
push
cld
xchg
mov
cli
das
sub
jecxz
sub
fdivrs
fisubrl
loopne
add
cmp
inc
or
aas
test
inc
xchg
mov
add
xor
stos
imul
call
dec
xchg
sahf
dec
ficomps
push
or
xor
fadds
js
mov
pop
jnp
lods
mov
ret
imul
jae
mov
push
xor
pop
cmp
jb
incl
pop
lds
call
fdecstp
scas
jg
lret
fisubrl
sarl
ss
mov
mov
enter
push
das
iret
push
mov
je
ja
jle
inc
and
daa
subl
dec
and
movsl
xchg
fdivrl
cmp
xor
mov
xchg
cmpb
frstpm(287
js
insb
mov
pop
xor
pop
mov
add
inc
mov
push
sbb
insl
dec
jb
jle
int
out
cmp
xchg
mov
arpl
mov
cmp
jge
repz
in
push
push
daa
cmp
pop
inc
out
jge
adc
outsl
ljmp
pop
jle
test
cmp
mov
dec
movsb
das
inc
inc
frstor
cmp
push
pop
push
insb
scas
enter
mov
scas
push
addr16
or
test
mov
adc
scas
fwait
sbb
push
mov
dec
sub
or
out
lods
fs
inc
cwtl
scas
scas
negb
sahf
hlt
add
sbbb
repnz
dec
sbb
pop
fdivl
sar
popa
shlb
mov
out
mov
cld
xorl
jecxz
push
mov
sbbb
out
xchg
nop
adc
mov
xor
fmuls
push
lret
xchg
cwtl
repnz
adcl
add
addl
push
add
les
insb
ja
in
in
xchg
push
out
add
cmp
jg
in
push
mov
push
xor
cmp
outsl
inc
std
mov
dec
add
pop
push
ljmp
int3
out
into
lods
and
push
dec
cmp
in
and
jl
xlat
icebp
xor
add
lahf
xchg
mov
mov
lds
xchg
jg
test
in
and
mov
cwtl
mov
lahf
pop
add
adc
cmpsb
mov
addr16
cmpsb
stos
sbb
xor
aad
cli
jp
int
stos
sti
pop
je
and
scas
imul
ret
cmp
aaa
lcall
mov
leave
lahf
in
inc
lock
stos
lods
push
out
gs
and
dec
inc
adc
out
sub
jns
pop
sysenter
jmp
and
jno
pop
fmull
gs
mov
repz
fucom
mov
insl
dec
ret
cwtl
mov
stos
lcall
jnp
gs
notb
mov
add
lcall
mov
mov
and
cld
in
pop
pop
hlt
in
cmpsb
pop
stos
dec
mov
sbb
mov
sub
mov
outsb
mov
std
jnp
mov
call
jmp
mov
cmp
push
daa
adc
sar
loopne
dec
cmpsb
leave
jb
lret
xlat
and
cmp
push
mov
les
mov
push
into
stos
loopne
sbb
xchg
sbb
pop
pushaw
adc
repnz
popf
out
fwait
add
ja
dec
clc
shl
hlt
gs
subl
or
dec
sbb
lret
cs
xchg
int3
out
and
je
out
mov
push
jp
cmp
ret
adc
out
in
in
push
add
cmp
je
push
cmp
or
add
lods
data16
jl
cli
clc
lods
aaa
arpl
divb
in
adc
test
fldt
push
push
add
adc
es
lahf
sbb
or
jecxz
inc
xchg
pusha
push
lret
aaa
clc
lock
outsl
mov
shl
cltd
lods
mov
sub
mov
mov
ror
aaa
pusha
dec
popa
stos
test
rolb
lret
sar
push
les
push
push
jbe
aam
pop
or
ja
jmp
divb
or
or
pop
movsl
sahf
orl
nop
mov
inc
int3
cs
outsb
mov
jns
xor
push
clc
lea
cmpb
loopne
loop
std
mov
jbe
ss
shrl
pop
jae
cwtl
out
sbb
xchg
lret
insl
xor
nop
fwait
xchg
ret
xor
call
test
xor
lock
shll
movl
aas
adc
mov
aam
je
jle
adc
inc
mov
inc
mov
shrl
mov
and
ss
adc
push
xorl
jg
stc
pushf
jno
in
sbb
call
cld
lret
mov
adc
mov
push
mov
fisttpl
lret
jg
fnsave
sbb
push
or
lds
and
aam
out
stos
mov
mov
inc
jp
cmp
pop
mov
xchg
negl
inc
push
mov
sub
xchg
lock
or
push
and
push
sbb
push
test
and
cwtl
pop
push
inc
push
sbb
int
jbe
cmp
ret
loopne
int3
in
mov
mov
rclb
jecxz
cmp
sub
jg
loopne
les
cmpsb
stc
ljmp
lcall
sbb
mov
ljmp
nop
jecxz
jbe
pusha
dec
and
cld
cs
push
aam
cmp
cli
mov
dec
fists
fldcw
xchg
je
cmpsb
testl
cmp
adc
mov
test
scas
data16
out
push
pop
xchg
mov
mov
je
mov
push
pop
inc
xchg
sbb
rorb
ljmp
lods
add
push
lock
jb
or
fdivp
pop
mov
add
jg
scas
lret
lea
lea
mov
pushf
dec
pop
xor
jbe
jmp
mov
xchg
imul
clc
sbbl
stos
and
mov
dec
mov
push
sub
mov
repnz
jbe
imul
sub
or
sbb
cs
dec
xor
sub
mov
add
jmp
add
xchg
add
test
pop
mov
iret
ds
fiadds
arpl
fs
aaa
iret
lret
in
xor
test
icebp
loop
faddl
loop
out
nop
cmp
mov
insb
jnp
inc
test
mov
js
les
shlb
test
aam
or
jge
mov
adc
loop
mov
mov
scas
push
jp
faddp
call
arpl
ja
fucomp
jne
push
roll
or
pop
cmp
aaa
jmp
xor
sbb
sub
or
cwtl
repz
ljmp
jae
sbb
jbe
cmp
mov
pop
and
std
test
and
pop
nop
jp
inc
adc
ljmp
fimuls
inc
fucomi
paddd
mov
call
inc
sbb
dec
call
cwtl
std
test
adc
mov
push
js
sarb
hlt
and
aam
adcl
movsl
test
sub
out
sub
pusha
mov
lock
pop
in
sub
jge
adc
mov
inc
cmpsb
adc
sar
stos
aas
xor
fistps
int3
push
sbb
negl
ja
push
jp
add
mov
addr16
inc
mov
les
jl
inc
gs
sbb
pop
or
pop
mov
lret
sbb
lods
jl
push
test
loope
mulb
mov
imul
shrb
mov
mov
add
inc
pop
dec
mov
leave
iret
jns
mov
mov
sahf
add
sahf
in
das
sbb
or
add
xor
adc
in
rcll
pop
mov
cmpsl
xchg
mov
cmp
cmpsl
and
inc
inc
mov
outsl
inc
inc
and
lods
and
dec
dec
mov
and
mov
movsb
in
sbb
imul
mov
xchg
push
das
dec
fsts
mov
rolb
lret
mov
or
cs
inc
int3
movsl
jnp
mov
leave
sub
je
nop
push
jmp
in
imul
cmpsl
inc
andb
add
pop
or
jecxz
add
jl
cli
sbb
int3
gs
lods
movsl
jb
sbb
push
sub
mov
adc
ss
cltd
cmp
cmc
sbb
or
cmp
push
and
popf
gs
in
mov
inc
mov
subb
cmpsb
cmp
pushf
push
mov
mov
xor
jp
iret
xor
jo
dec
mov
mov
scas
push
sahf
xchg
push
xor
pop
mov
pop
ds
push
movsb
pop
mov
xor
lds
mov
jns
cs
jae
cmpl
jae
orl
and
inc
or
fidivrl
insb
and
mov
clc
push
sub
rorl
jge
push
cli
jl
add
jp
sub
cmpsb
push
test
push
cli
pop
ficoml
rclb
outsb
cld
icebp
and
adc
popa
push
mov
je
sub
and
aas
xchg
mov
pusha
dec
pusha
sarl
and
sub
lret
pop
cmp
cmpsl
jp
in
jnp
mov
mov
jle
jp
aas
incb
arpl
mov
out
les
xchg
jno
fisttps
ret
mov
inc
and
xchg
in
mov
cmpsl
push
jle
dec
leave
decb
fstpl
je
in
repnz
sub
sub
movsl
lahf
push
jmp
fisubrs
lcall
dec
cmp
lods
cwtl
pusha
ficoms
out
cwtl
sbb
fidivrs
inc
add
sub
cmp
adc
inc
out
out
stos
add
js
jbe
xchg
lahf
add
xchg
je
es
adcb
aas
mov
cs
iret
sub
pop
cwtl
sub
aad
or
push
pop
adc
lahf
sub
ds
sub
mov
jno
popf
jecxz
cs
ss
add
pop
mov
sbb
sbb
and
mov
mov
adc
test
orl
jne
jno
or
pop
out
rol
lret
cwtl
and
sbb
popa
cmp
stos
mov
in
test
mov
out
addl
mov
xlat
std
pop
leave
ja
bound
scas
sub
jl
dec
repz
cmp
inc
aas
push
adc
jne
xchg
mov
iret
cmp
sbb
jg
push
and
sub
cmp
lahf
test
daa
mov
mov
jae
insl
sub
xchg
in
or
xchg
insl
jbe
mov
xchg
add
dec
pop
cmp
sub
push
cltd
lds
ds
out
inc
sbb
pop
or
mov
adc
inc
fdivrl
rorl
cmp
push
test
push
cmp
in
addl
dec
aas
icebp
mov
dec
lret
mov
sbb
push
scas
push
xchg
cmp
xorb
xchg
insb
push
imul
aaa
das
xor
sbbl
adc
or
dec
or
stos
cmc
js
ret
jecxz
dec
lcall
xchg
andl
xor
push
mov
dec
fs
arpl
testb
jnp
lret
mov
add
stos
int3
inc
sub
cs
cmp
pop
cmp
pop
jge
pop
ds
jo
pop
lret
cmpsb
rclb
popa
jnp
gs
or
mov
xchg
mov
or
out
sahf
rclb
pop
andb
mov
rclb
daa
adc
jnp
mov
mov
xor
shl
ret
lcall
les
mov
leave
icebp
xchg
mov
lcall
cli
test
imul
dec
inc
push
fsubrs
call
mov
xor
add
dec
xchg
call
sbb
andl
sub
dec
mov
cmpsb
out
into
aam
ja
les
lahf
clc
mov
out
xchg
mov
push
lcall
ficoms
xor
cmp
jbe
jecxz
or
pop
push
mov
shll
popf
lret
inc
add
mov
and
add
adc
push
sti
into
jecxz
mov
aad
sub
mov
sub
inc
das
pop
add
and
subb
xchg
sub
popa
out
popf
pop
sub
mov
cmp
xor
fisttpll
addb
sub
insl
iret
jl
loop
xor
push
mov
rcr
push
push
loope
pop
lcall
xlat
mov
test
mov
leave
movsb
add
imul
daa
push
lds
mov
mov
add
fdivrl
cmp
movsl
xlat
jge
cmpsl
xadd
dec
aaa
mov
push
ret
cmpsl
xor
mov
adc
popf
add
push
repz
jnp
cwtl
pop
dec
jge
pop
bound
dec
and
dec
pushl
sarl
sub
pop
bound
mov
arpl
push
mov
imul
inc
push
jno
cmp
es
mov
or
sub
jb
js
xchg
add
lahf
imul
jecxz
cmp
push
scas
jo
mov
decl
mov
and
xchg
mov
cmpsb
rorl
mov
movsl
jo
dec
add
lahf
movsb
dec
sbb
xlat
xchg
mov
test
cs
repnz
or
mov
lea
inc
inc
pushf
and
dec
mov
sbb
out
pop
adc
mov
frstor
and
repnz
xchg
jl
push
je
leave
mov
push
dec
aam
lea
add
sub
cwtl
pop
push
dec
push
icebp
pop
cld
aaa
push
xlat
sub
push
orb
cli
pop
scas
outsb
jne
cli
sbb
sub
gs
in
add
cld
cmp
xor
stc
dec
inc
and
and
and
inc
add
sub
pop
inc
fwait
cwtl
xchg
or
movsl
movl
addps
adc
in
clc
adc
inc
push
inc
inc
lock
lcall
xor
xor
int3
dec
xlat
or
lret
aaa
sbb
icebp
fnsave
inc
lods
xor
shlb
add
sub
mulb
push
movsl
mov
test
lcall
xchg
fcomi
outsb
sahf
pop
outsl
jnp
vpcmpgtb
adc
push
and
imull
adc
aas
mov
ds
jb
mov
fs
add
sbb
add
add
cli
xlat
add
setb
mov
inc
jl
and
pop
rol
popa
pop
cmp
shll
push
and
dec
insb
test
scas
rolb
lods
pop
test
out
sub
or
movsl
sbb
int
or
mov
fisttpl
sbb
and
jb
mov
jae
mov
lea
xchg
xor
rorb
outsl
pop
scas
pusha
inc
adc
shll
fiaddl
fnstsw
movl
out
mov
add
dec
xor
stos
add
inc
fmull
in
sbbl
pop
mov
pop
test
push
mov
sub
xor
and
inc
mov
and
stos
stos
das
mov
test
shll
mov
adc
test
stos
jmp
ss
sbb
ret
movsl
imul
push
xchg
mov
dec
jl
aas
xchg
dec
fimuls
xor
pop
stos
adc
adc
xchg
jo
xor
outsl
mov
pop
ret
sub
mov
ss
popf
mov
out
sbb
cwtl
pop
les
add
loop
add
cmpsb
jmp
jb
out
lahf
dec
test
ret
loopne
dec
fisubrs
mov
popf
in
xor
pop
push
or
adcb
adc
popa
or
fildll
cmp
jne
es
or
les
fwait
jae
add
jnp
out
or
push
jb
ja
xlat
shrb
sub
xchg
into
dec
popf
jle
mov
mov
js
jl
call
adc
and
into
daa
test
and
dec
or
mov
mov
sahf
nop
out
xor
std
movsb
dec
pop
call
aas
cmp
cmpsb
and
adc
cmc
add
cmp
sbb
mov
inc
fcmovu
xlat
fistps
lock
fs
test
fstpt
loop
cmp
or
fisubs
inc
pop
mov
int
lea
add
mov
xchg
xor
es
loope
mov
sahf
sub
mov
inc
mov
push
sub
inc
mov
inc
gs
lods
inc
push
imul
addb
mov
lods
adc
dec
sti
and
xor
stc
in
cmpsl
mov
cmp
pop
sub
sar
xchg
mov
push
or
jno
add
mov
xor
add
in
sahf
lret
and
call
int3
aad
je
clc
outsl
add
add
mov
sub
push
mov
fcmove
mov
outsl
jnp
out
push
xlat
mov
out
cmp
fucomi
push
je
mov
pop
fwait
mov
in
testb
fimull
jge
mul
dec
pop
mov
lcall
inc
pop
sub
sbb
scas
cmp
mov
mov
or
push
sub
and
rolb
in
sbb
out
sar
shrl
mov
cvttps2pi
and
sbb
lret
pop
sub
jg
push
add
push
aas
jmp
in
xchg
stos
pop
add
xchg
js
mov
into
sub
lods
stos
push
push
stc
sbb
cmp
add
clc
arpl
fcompl
cmp
ljmp
std
in
lods
mov
sbb
xchg
aaa
cli
sbb
sub
push
pop
je
in
nop
jbe
stos
push
sbb
lods
in
mov
icebp
cmp
js
pop
lods
adc
popf
mov
jbe
pop
dec
jae
lcall
push
dec
add
or
add
jno
add
dec
mov
lea
and
and
xchg
inc
and
cmp
leave
mov
adc
mov
and
cmp
xchg
mov
sbb
out
and
and
xor
add
dec
xor
in
jbe
stos
imul
jae
inc
push
icebp
xor
sbb
leave
test
xchg
jae
xor
sbb
int3
mull
inc
add
cwtl
inc
xor
and
mov
dec
cmp
and
ds
push
push
rolb
addr16
sbb
mov
movsb
xchg
out
adcb
not
mov
jns
daa
loop
in
cmpsb
and
sarb
xchg
add
jecxz
and
xchg
jns
cmpb
adc
nop
sub
and
pop
jecxz
pop
out
xor
jns
xor
in
lods
sahf
jmp
outsl
scas
loopne
mov
inc
outsl
rcl
insb
pop
or
lods
cmpl
sbb
mov
sbb
outsl
addr16
mov
push
mov
orl
outsl
aas
cmp
outsb
jmp
push
jecxz
jns
push
mov
fcoms
les
add
jl
cmp
das
jmp
call
lock
mov
fwait
adc
pop
xchg
push
mov
sti
xchg
rorb
test
xchg
popa
outsb
xchg
insl
leave
dec
and
bound
insb
cmp
mov
imul
roll
push
mulb
jbe
cmp
mov
rorb
or
adc
and
call
cmpsb
stc
jecxz
dec
xor
lcall
cmp
call
push
or
push
pop
out
add
fdivrp
sub
aad
int3
or
jg
cmc
sbb
das
sbb
in
adc
cmpsl
add
fdiv
shlb
lahf
js
xchg
dec
jle
dec
sti
push
icebp
arpl
pop
dec
pop
jns
fisttpl
adc
loope
sbb
loop
push
hlt
sub
fwait
add
es
addb
cli
fs
mov
jmp
add
jle
shrb
sbb
test
xor
fcomps
ror
xor
ljmp
xchg
mov
mov
jae
dec
xor
jb
jno
mov
inc
inc
lret
xchg
cmpb
jl
inc
push
pop
ja
and
sahf
sbb
xor
push
mov
push
mov
jb
in
jnp
fisttpll
push
es
pop
mov
mov
out
and
in
push
mov
in
jne
outsb
out
sub
jno
inc
lretw
push
push
fidivs
push
jmp
cmc
pop
adc
sbb
mov
jno
mov
inc
lcall
mov
sahf
arpl
xchg
fldenv
pop
adc
xor
jo
subl
adc
rorb
and
jae
adc
jnp
inc
jmp
xchg
adc
fildll
jge
test
cmpsb
cmp
xchg
or
pop
mov
mov
or
xchg
insl
insl
mov
loop
dec
push
out
inc
sbb
scas
xor
imul
mov
pusha
les
xorl
sarb
data16
out
add
add
cmpsl
or
mov
sbb
int
jmp
adc
ja
aaa
jnp
dec
xor
pop
dec
add
addb
jecxz
mov
dec
xor
cli
stos
push
frstor
testl
jmp
aad
pop
inc
roll
outsb
sub
push
and
inc
jo
push
add
jmp
test
sbb
cmpsb
push
push
cmp
adc
push
insb
cmp
dec
sub
std
push
sbb
fisttpll
pushf
faddl
fnsave
adc
loop
pusha
insb
and
sahf
push
imul
push
mov
into
addr16
mov
hlt
mov
shr
iret
stos
and
fnstenv
jecxz
lcall
leave
mov
inc
and
fisubrs
rcrb
jo
fs
xor
push
lret
ret
imul
pushf
jo
and
add
push
push
xlat
sub
leave
leave
stos
mov
dec
cmc
push
sub
or
jns
mov
xor
push
xorl
cmp
xchg
call
je
gs
aaa
cs
aad
push
popa
jno
cs
mov
lods
sbbl
rcll
add
xor
test
nop
fucomp
pop
push
sti
xchg
testb
jmp
aad
dec
test
xchg
je
rorb
xchg
sub
xchg
aaa
sub
adc
dec
and
and
pop
pop
sub
xlat
std
negl
or
push
add
jb
push
aam
cmp
push
fisubrs
insl
cltd
lcall
mov
cmp
cmpsl
jl
adc
addr16
lods
dec
or
mov
push
test
xchg
ds
fiadds
out
pop
fcompl
imul
sub
push
int
add
pop
jl
aas
sarl
push
push
and
sbb
data16
mov
dec
mov
fwait
jle
out
sarl
mov
mov
cmp
arpl
push
or
xchg
aaa
les
pushf
jge
frstor
sub
mov
sub
ljmp
mov
mov
mov
xchg
lds
push
pop
sub
mov
stos
rclb
repz
cmc
out
cmpsl
mov
mov
arpl
mov
xor
cwtl
mov
push
fnsave
add
mov
add
mov
shrl
int3
and
sbb
cmpsl
mov
dec
dec
ret
xchg
add
inc
push
cmp
stos
cld
jl
mov
dec
scas
add
jo
and
popf
push
jno
inc
sahf
sbb
pop
pop
test
push
popa
insl
addr16
xlat
sti
push
lahf
pop
push
daa
inc
add
add
pop
jne
sarb
mov
out
call
aaa
aaa
xchg
dec
mov
imul
or
sbb
sub
cmp
ljmp
test
daa
idivl
ljmp
gs
enter
dec
fwait
mov
lds
out
dec
jle
push
daa
xchg
mov
mov
popf
xchg
test
fidivrs
outsl
fsubs
push
mov
fwait
repnz
add
shr
shld
and
fs
icebp
add
decl
inc
xor
inc
test
adc
cmp
addr16
jmp
mov
push
xor
insb
mov
or
inc
dec
mov
mov
push
cwtl
mov
mov
bound
js
cmp
push
cmpsb
and
stos
dec
inc
std
shll
sti
push
mov
xorl
adc
push
mov
adc
aad
outsb
mov
imul
mov
pop
push
inc
movsb
imul
mov
pop
test
jmp
cmpb
jb
push
in
inc
jae
stos
or
sbb
jne
mov
or
sbb
dec
cmp
into
dec
repz
lock
addr16
in
push
cs
jne
jb
lret
push
mov
add
cmc
in
sbb
mov
popf
mov
movsl
outsb
pop
jns
jbe
in
int
scas
xchg
xchg
test
in
cli
mov
aas
xchg
pop
data16
out
xor
mov
int
cwtl
test
fnstenv
xchg
xor
mov
arpl
arpl
xor
subb
or
dec
lret
xlat
push
pop
mov
aad
lods
out
cmp
push
scas
adc
sub
jno
inc
loop
sub
mov
rol
test
mov
and
je
and
mov
pop
pop
xchg
mov
dec
add
mov
sarl
test
add
inc
mov
and
xchg
pop
sbb
mov
xchg
es
test
jne
dec
jb
add
int
ja
cltd
adc
sub
lret
inc
xlat
inc
push
or
ret
xchg
mov
lea
xor
cs
popf
cwtl
jl
iret
pop
or
pusha
movsl
pop
mov
mov
dec
or
ljmp
add
jo
jl
push
pop
mov
rorl
dec
in
rcrl
xor
test
push
jmp
and
sbb
jno
and
sti
inc
cmp
movsb
jl
stos
jae
imul
std
inc
test
sbb
cld
ficompl
icebp
repz
es
in
pop
repz
push
adc
gs
mov
repz
mul
aam
insb
or
sub
push
push
int3
loopne
mov
mov
xchg
sub
stos
cmp
sbb
mov
ret
enter
mov
mov
sbbb
fcmovb
sub
outsl
pusha
dec
ret
jecxz
cmpsl
push
add
push
xchg
int
movsl
cmpsl
push
int3
out
and
jne
ljmp
insb
shll
and
jg
lock
cld
mov
aad
mov
push
subb
rorb
sbb
in
mov
mov
repz
leave
push
and
sub
xor
ss
jnp,pt
jecxz
stc
jl
aas
and
or
sar
ror
xchg
pusha
xchg
cmp
add
outsb
or
push
lds
sub
fwait
outsl
cmpb
add
in
test
adc
and
sahf
movl
subb
jmp
mov
mov
add
scas
in
ja
xlat
push
loopne
xlat
jge
pop
fistpl
xchg
sub
mov
pop
pop
call
add
mov
rcl
outsb
cmp
dec
push
xor
flds
jno
ret
rclb
jp
pushf
cmpsl
pusha
xor
cmp
inc
xchg
xchg
int3
into
inc
adc
test
adc
sbb
and
push
inc
cld
dec
lcall
test
lea
dec
sbb
push
mov
cmp
bound
push
adc
or
imul
jg
loop
icebp
leave
push
loop
and
jns
jg
fpatan
jle
dec
test
xor
ret
loop
ljmp
popa
popf
sbb
je
push
aam
cmp
cmp
aas
adc
mov
stos
popa
sbb
mov
adc
adc
jb
mov
mov
nop
dec
mov
jmp
lods
mov
outsl
add
add
mov
push
ret
dec
imul
into
sub
inc
shll
jl
js
test
xchg
xlat
sub
pop
cmp
rclb
mov
lret
push
and
repz
insb
mov
mov
dec
sub
mull
mov
ret
mov
adc
cmp
ja
movups
ja
add
leave
inc
mov
std
and
add
push
jae
stc
fwait
sub
xchg
sarb
push
mov
inc
fldt
inc
pop
cmp
je
mov
lret
jecxz
scas
lock
adc
insl
out
fcmovbe
mov
int3
xor
int
dec
shrl
sub
int
cmp
fldcw
push
dec
cmc
out
movsb
mov
cli
daa
sub
lea
mov
out
cmpsl
mov
in
shlb
ja
add
jbe
test
fldt
push
mov
push
outsl
shll
into
jo
cmp
pop
es
xchg
bound
inc
sub
cld
stc
js
icebp
jae
cmp
popa
lcall
lods
addr16
das
or
int3
xor
and
sahf
mov
pop
jge
lods
cmp
dec
or
cwtl
dec
loop
aaa
add
mov
out
sbb
xchg
fsubrs
cltd
arpl
jnp
jle
xchg
sbb
xor
adc
add
push
js
ret
nop
or
mov
push
in
xor
outsl
sarb
xchg
fcmove
pop
sub
loope
xchg
sub
in
aam
aad
pop
push
das
xchg
mov
mov
jg
test
jne
out
movsl
add
lret
add
inc
call
push
xchg
sbb
jmp
inc
sub
push
mov
rol
test
mov
jbe
pop
add
lods
push
push
adc
push
pop
adcb
pop
push
loopne
and
and
idivb
xor
mov
mov
mov
mov
fisubrs
cmc
push
hlt
cmp
insl
repz
jae
ret
lock
mov
mov
insb
ret
pop
dec
insb
adc
or
shll
mov
fisubrl
push
adc
lea
push
flds
xor
inc
sub
mov
scas
aas
jo
inc
mov
fidivl
imul
scas
and
or
adc
xorl
xor
imul
mov
add
mov
outsl
hlt
xchg
ret
pop
test
cmpsb
cltd
and
fnstsw
test
mov
xor
jge
push
push
xchg
pusha
scas
xlat
jns
in
es
andl
add
lods
out
ljmp
test
xchg
adc
mov
ja
cmpsb
sbb
into
sahf
loopne
pop
loopne
xor
cmpsl
popf
adc
pop
daa
and
data16
sbb
mov
mov
mov
mov
cmp
pop
cmp
add
jle
ja
fs
cld
scas
sbb
aam
ret
or
int3
fucom
xchg
and
call
cmc
xchg
mov
lods
dec
mov
xchg
dec
xchg
jns
mov
dec
sub
xchg
repnz
fwait
mov
pop
setns
loop
sub
sub
sub
mov
mov
mov
mov
mov
jbe
mov
icebp
cmp
daa
rcl
sub
inc
mov
add
dec
or
mov
sub
lock
xchg
and
add
popf
jns
mov
cmpsb
incl
test
int3
lahf
adc
data16
and
pop
mov
int3
es
arpl
sbbb
inc
xor
nop
lds
and
xchg
and
mov
dec
test
mov
cmp
cmpsb
inc
mov
push
mov
int3
adc
dec
lock
and
mov
jge
insb
into
push
repz
sub
js
rcl
xchg
je
rcrl
add
ficomps
jecxz
inc
ss
dec
xchg
scas
pop
data16
or
adc
xor
jne
xor
pop
pop
jo
shlb
mov
push
lods
jp
xor
sarb
push
or
fisttps
ljmp
push
xchg
jae
std
fbld
fisttpl
mov
mov
andb
mov
mov
cltd
lods
int3
scas
je
icebp
out
and
nop
cmp
jb
mov
push
aam
imul
mov
sub
xor
mov
mov
cmp
mov
lea
and
cmp
shll
push
jno
pop
jnp
fisttpll
jecxz
xlat
int3
add
sbb
xor
push
cwtl
mov
mov
sub
fdivp
dec
mov
xchg
cmp
add
mov
lock
cmpsb
or
cmp
orb
or
ja
sub
lods
and
cmpl
sub
fildll
mov
sbb
in
cmp
loopne
push
dec
inc
push
xchg
mov
jbe
mov
cmp
adc
rclb
dec
mov
add
insl
and
lds
cmp
leave
dec
add
ljmp
push
test
leave
sahf
pop
clc
xchg
push
out
in
push
lock
xlat
enter
xor
adc
ljmp
mov
lret
pop
mov
stos
lods
mov
ja
sbb
lea
push
mov
loope
push
xchg
repz
pop
out
push
lcall
stos
and
js
and
xchg
jg
fsub
stc
push
mov
lods
aas
into
or
jle
mov
cmpsl
adc
mov
sub
hlt
xchg
cmp
pop
lock
out
mov
mov
pop
dec
fucomi
repnz
les
xchg
in
adc
jge
aaa
push
pop
mov
mov
divl
push
jo
and
stos
jb
mov
dec
lds
cmc
push
in
and
and
leave
pop
popf
jb
stos
and
das
clc
hlt
or
test
xchg
out
stc
fnstcw
stc
pop
cmp
or
movsl
jp
push
adc
stc
cmp
arpl
pop
out
dec
stc
repnz
daa
pop
outsb
shll
int3
sbb
push
sub
stos
xchg
and
jnp
push
lock
push
fcomps
sbb
dec
lea
cmp
mov
imul
xchg
xor
leave
xchg
xor
mov
push
cmp
inc
mov
inc
cld
add
inc
cmp
lahf
pop
lret
dec
mov
lods
pop
push
test
rcrb
into
add
mov
xor
mov
clc
jecxz
push
jnp
inc
pop
hlt
aaa
jb
data16
mov
jmp
out
popa
cli
jge
cltd
mov
sbb
jo
xlat
lock
aas
add
xchg
ljmp
or
notb
je,pn
inc
fimuls
mov
mov
pop
sub
insb
cmp
inc
mov
outsb
jno
pusha
fwait
push
pop
mov
stc
cltd
push
jb
testl
lret
in
inc
and
add
int3
xchg
xor
gs
sub
je
imul
or
das
sahf
pop
inc
lock
nop
sub
pop
mov
mov
push
into
push
sbb
adc
mov
jne
pop
imul
push
jbe
mov
into
jno
cwtl
cli
ds
loopne
mov
fnsave
orb
pop
in
lahf
imul
pop
scas
fisubrs
jmp
sbb
cmc
jae
lret
js
push
rcl
sar
test
push
cld
outsb
iret
xor
test
mov
cwtl
and
xchg
cmpsb
pusha
cmpl
push
mov
cmp
shrb
mov
and
test
into
pop
pop
outsb
add
insb
sti
bnd
cmp
js
pop
jns
popa
insb
cmp
dec
into
stos
pushf
pop
sbb
or
xor
xor
call
pop
cmp
pop
pop
mov
cmp
or
pop
stc
cmp
push
fidivrs
inc
mov
movsl
dec
aas
sbb
sbb
xor
cmpsl
sbb
push
es
mov
movsl
xchg
jmp
mov
mov
and
out
repz
xchg
add
mov
push
cmp
cwtl
shr
lret
jns
test
inc
scas
cmp
mov
test
push
adc
pushf
jg
xchg
pinsrw
outsl
in
push
or
int
jbe
rcrl
gs
sti
outsb
cmp
push
adc
mov
fadd
push
scas
cmp
mov
jecxz
mov
and
pushf
dec
mov
pop
pop
xchg
xor
movsl
testb
lds
cmp
sbb
fsub
and
popa
xchg
mov
fldenv
ss
push
and
cmp
xchg
in
adc
dec
adc
fs
pop
sbb
scas
xor
add
ret
xor
nop
push
mov
or
jge
or
faddl
shll
jae
pop
clc
adc
mov
mov
or
out
and
pop
jg
sbbb
jb
mov
cli
in
sbb
adc
dec
inc
pop
test
or
cmp
cmp
leave
add
imul
movsl
cmp
stos
imul
and
mov
fwait
pop
iret
fsub
sbb
sub
xor
push
sub
loop
aam
int3
das
loop
mov
mov
int3
pusha
fdivrp
aad
lret
mov
ret
lret
ds
mov
arpl
adc
pop
push
or
inc
jmp
cmpsl
ljmp
popa
sub
faddl
dec
dec
ljmp
push
mov
xchg
xchg
cwtl
push
xor
dec
out
aas
xchg
sahf
nop
test
xchg
sti
fsubl
xchg
aaa
sarb
aas
xor
test
loopne
adc
in
aad
jns
cld
icebp
in
cmp
mov
and
jnp
pop
insl
jns
xor
hlt
imul
mov
popa
pop
fisubrs
enter
mov
std
push
xor
adc
inc
fiaddl
jne
or
jb
or
adc
loop
pop
push
mov
iret
lock
mov
jle
inc
pop
and
lcall
call
sarb
push
pop
clc
dec
outsb
and
xor
test
push
test
cli
and
popa
fs
mov
rorl
repz
push
cld
in
xchg
ds
jmp
mov
dec
ss
and
pop
fisubrs
in
out
lahf
mov
sbb
jg
jb
mov
stos
push
adc
repnz
dec
inc
inc
dec
imulb
push
jo
cltd
popa
sbb
adc
dec
fbld
adc
mov
clc
pop
push
sub
pop
jae
leave
adc
rcl
imul
rol
aaa
xorl
into
push
cmpsl
bound
aas
fwait
push
jg
fdivrp
push
fiadds
jmp
or
lcall
in
shlb
add
test
pushf
sub
mov
sbb
xor
push
adc
push
push
movsb
jae
movsl
xchg
in
int3
out
incl
imul
mov
je
negb
sahf
sub
mov
pop
push
dec
pop
scas
das
shl
sbb
lods
mov
jno
push
jb
aad
jae
fcomps
dec
scas
adc
dec
fiadds
movsl
icebp
js
data16
adc
jnp
cmpb
lcall
sub
push
push
and
sbb
adc
mov
nop
jecxz
mov
inc
popf
jno
icebp
jp
in
pop
and
sub
loop
xor
iret
mov
out
loope
cwtl
pop
jmp
addl
pop
or
imul
addl
subl
in
inc
sbb
adc
push
push
pop
or
aad
test
push
cmp
rclb
out
or
or
pop
jae
movsl
mov
mov
cmpsl
xchg
cli
add
es
lods
jns
jp
xchg
xlat
mul
or
mov
ret
and
pop
pop
daa
mov
inc
imul
bound
addl
push
sbb
decl
stos
orl
lahf
jae
sbb
or
out
shll
test
pop
aaa
mov
loope
arpl
stc
fdivrs
lock
jo
lret
or
jnp
push
jno
repz
es
push
sbb
adc
mov
stos
pop
xor
dec
xchg
sub
jecxz
lds
xchg
or
mov
ret
lcall
pop
lods
sbb
es
dec
sahf
fisubl
dec
inc
rclb
mov
ljmp
mov
repz
repnz
inc
adc
mov
jbe
int
mov
bound
outsb
dec
mov
pop
push
pop
mov
iret
inc
inc
cwtl
or
cmp
inc
data16
mov
xor
dec
xor
fcmovb
push
insl
mov
xchg
iret
inc
pop
roll
jb
push
sub
loope
mov
stos
dec
or
inc
iret
jno
aam
push
cld
popf
sbb
and
adc
adc
mov
lahf
mov
fsubrp
xor
sub
pop
pusha
push
or
rorb
inc
fcoml
mov
mov
shl
outsl
movsl
icebp
shl
ljmp
sahf
or
andl
sub
xchg
pop
mov
comiss
sub
push
or
xchg
test
rolb
and
xor
add
cmpsb
jmp
popa
inc
es
or
mov
add
jnp
mov
cmp
andb
fistps
mov
xchg
jp
lret
xchg
rol
sub
push
add
pusha
push
repz
mov
jp
mov
inc
cmp
xchg
pop
cmp
cmpsb
mov
xchg
push
fnstenv
in
mov
sbb
push
int3
out
add
frstor
add
adc
in
shrb
popf
cmp
inc
rol
into
pop
sarb
pop
mov
inc
and
out
or
outsl
cmp
aaa
xchg
xor
inc
dec
insl
mov
and
pusha
dec
out
shrd
or
inc
inc
mov
mov
jge
add
mov
scas
xchg
addr16
mov
std
mov
or
mov
or
or
lods
es
mov
rclb
cld
xchg
popa
jmp
fstpt
sahf
or
pop
fcomip
jecxz
xor
push
std
rcll
jae
inc
shlb
cmp
mov
mov
outsl
les
push
pop
imul
in
scas
jbe
repnz
push
mov
sbb
std
or
shlb
add
mov
jg
xchg
rcl
test
jno
add
mov
in
cmp
mov
or
ret
sub
inc
lods
lahf
push
out
ja
and
mov
aad
mov
cmp
jmp
jne
jae
in
lahf
aaa
mov
enter
cld
out
fidivrl
push
mov
into
push
or
mov
das
dec
xor
inc
push
mov
mov
sbb
xchg
fadd
mov
jmp
daa
inc
clc
pushf
sahf
cmp
push
rcr
pop
cmc
dec
fisubl
fistps
movsl
clc
jnp
andb
push
pop
outsl
push
jno
push
push
cmp
adc
out
test
push
cmp
or
and
ljmp
xchg
loop
sub
xor
mov
hlt
adc
and
mov
mov
mov
ja
iret
push
lds
mov
mov
dec
xchg
cmc
jb
imul
nop
mov
popa
mov
and
push
xor
inc
jo
mov
sub
add
hlt
aad
sarb
mov
pop
or
inc
imul
mov
cli
iret
test
sub
mov
pop
popf
lea
les
cld
ljmp
pop
pop
mov
hlt
roll
sub
stc
pop
cmp
arpl
aaa
lods
jp
sub
adc
ds
test
adcl
inc
mov
push
push
inc
push
inc
mov
adc
das
xchg
lock
jmp
sbb
in
imul
sbb
mov
jns
ret
pop
or
mov
add
mov
adc
lock
dec
or
test
xor
dec
in
hlt
pop
pop
mov
in
scas
mov
jns
ja
cmp
xlat
fistl
and
test
sbb
lret
jg
imul
xor
ret
fnstcw
rorl
test
aad
mov
adc
xchg
push
lcall
clc
xor
iret
inc
cmp
inc
repz
in
xor
out
stos
dec
mov
leave
js
popf
mov
roll
cltd
xor
pop
or
or
mov
fists
xchg
push
adc
mov
scas
pop
enter
pop
sub
jge
mov
hlt
push
shrl
and
mov
cmp
flds
push
shl
and
fidivrs
icebp
or
fsubrl
mov
mov
fcmovu
cmpsb
dec
into
xchg
iret
lret
pop
pop
loopne
xchg
lock
xchg
mov
sub
stos
and
icebp
pop
pop
icebp
mov
mov
out
shll
or
mov
repz
int3
add
ret
dec
testl
mov
es
inc
or
lds
aad
mov
es
mov
xchg
pushf
or
push
or
in
cmp
xor
test
in
jbe
pop
mov
jno
sahf
popf
fimull
mov
push
sbb
mov
out
jbe
fwait
mov
sub
arpl
stos
inc
push
mov
fcoms
pop
xchg
popf
nop
xor
dec
sbb
imul
enter
mov
lret
fdivrs
leave
and
jl
sti
xchg
adc
mov
push
dec
movsb
lret
ret
fdivl
jle
jo
xor
xor
cmp
jbe,pn
xor
imul
adc
fidivs
subl
mov
push
mov
pop
push
lods
push
mov
or
push
mov
subb
push
jne
in
add
js
lahf
xchg
adc
jnp
lret
aas
cmp
mov
and
arpl
lock
inc
lods
add
mov
or
sbb
xchg
cmpsl
jae
pop
das
adc
adc
ret
fstpl
and
in
add
add
cmpsb
or
jns
test
mov
mov
mov
push
jmp
popa
arpl
les
bound
outsl
loopne
jns
ljmp
clc
jle
push
mov
loopne
imul
inc
test
or
or
push
push
push
test
mov
ret
daa
rclb
clc
in
mov
ret
nop
or
ret
xchg
ss
mov
pop
daa
loop
fildl
pop
or
push
loop
push
push
int3
xchg
fwait
jne
popf
out
mov
xor
jecxz
lods
popf
and
add
or
adc
mov
fnstenv
cmpsl
mov
push
pop
inc
sbb
mov
lret
xor
push
andl
lds
xchg
mov
mov
stos
std
test
shll
movsb
arpl
add
mov
rcrl
adc
lods
in
pop
jno
mov
mov
xor
dec
rcrl
mov
ror
add
jg
xor
mov
add
dec
mov
js
popf
scas
call
lds
loope
icebp
loopne
pop
cmp
clc
insb
shll
scas
fwait
push
ds
dec
xchg
stc
xchg
pop
fdivrs
test
adc
push
js
add
ret
sub
mov
movsl
push
xchg
inc
xor
mov
add
mov
dec
scas
filds
sbb
inc
mov
cmpsl
lods
popf
jae
push
add
out
sub
out
sbb
cmp
cmp
sub
fisttpl
inc
xor
fsubrp
or
fnstcw
jl
out
fs
pushf
jo
push
and
or
add
neg
movsl
mov
cmp
cmpsl
insb
jbe
add
pop
cli
mov
pop
mov
fsubl
enter
adc
push
test
cmp
cmp
mov
jno
aas
dec
lods
lock
ss
or
cmp
adc
lret
repnz
adc
ljmp
out
xorb
fisttps
dec
push
fildll
add
inc
mov
je
adc
notl
andb
pop
cld
sub
pop
iret
push
cmp
fnsave
loop
xlat
lahf
mov
cmp
scas
jecxz
subb
not
int3
movsb
push
dec
dec
mov
setno
fiadds
pop
dec
cmp
pusha
jecxz
enter
jp
fildl
jo
mov
sub
stos
mov
and
jo
xor
mov
or
or
cmp
gs
lret
cli
or
fidivl
outsl
stc
mov
and
jae
fsts
dec
out
std
jg
nop
out
mov
push
lods
cmp
push
xchg
push
out
mov
addr16
xchg
aaa
mov
dec
les
push
popf
pop
inc
and
addr16
pushf
mov
dec
inc
jmp
xchg
or
pop
adc
inc
pop
divl
inc
lcall
fcmovne
jb
mov
push
jb
inc
add
js
inc
add
mov
stc
loop
int3
fs
repnz
orb
ss
xlat
fbstp
lods
clc
jecxz
xor
push
and
fcoms
adc
xchg
jbe
jbe
shrb
xchg
in
out
inc
jle
push
arpl
pop
jge
repz
adc
pusha
adc
outsb
incl
cs
adc
push
out
push
dec
lcall
or
in
test
rclb
divl
scas
imul
mov
push
test
ficoml
ljmp
jne
out
test
mov
xchg
out
jne
adc
add
cmp
imul
xor
loopne
mov
out
and
shll
dec
mov
pop
xchg
mul
js
adc
or
or
sahf
out
push
dec
popa
inc
inc
jae
arpl
push
mov
mov
sarl
mov
and
jl
xchg
xor
loopne
sub
aad
cmp
test
sbb
dec
fs
mov
cmp
not
addl
lds
inc
ja
mov
push
shrl
hlt
cmp
xchg
xor
inc
mov
sbb
pop
bound
aas
in
notb
lds
jmp
and
pusha
xlat
rcrb
fnstenv
xor
mov
fmulp
mov
xchg
cs
stos
loope
xchg
pop
cmpsb
les
dec
mov
out
cmp
and
push
pusha
pop
shlb
testl
aas
stc
jl
ret
pop
aam
or
mov
in
popa
int3
jmpw
xchg
mov
sub
ss
ds
movsl
inc
scas
rclb
cmp
adc
out
insb
movsl
mov
sbb
inc
jae
aas
jnp
sbb
jmp
dec
jl
fiaddl
ja
dec
fisubs
pop
cmp
lds
lods
or
jl
imul
push
adc
int3
ret
pop
push
ja
out
pop
xchg
push
jge
mov
fildll
aad
xor
aas
pop
imul
out
scas
add
xor
addr16
fnsave
adc
sub
out
jnp
out
push
imul
lods
adc
mov
lcall
pop
or
jl
notb
loopne
in
sub
dec
push
add
jno
or
xchg
inc
stc
jge
sbb
push
dec
xchg
add
add
sti
popa
lret
lret
stos
pop
clc
and
sbb
dec
rorl
out
in
loopne
cwtl
pop
jg
or
xlat
lahf
push
mov
mov
mov
imul
iret
leave
pushf
inc
fdivl
cmp
fadd
jmp
and
stc
shl
cmpsl
decb
xchg
std
sub
lds
test
or
lods
mov
add
push
mov
cmp
jecxz
mov
mov
mov
lret
cmp
stc
or
xor
fwait
scas
pop
and
test
jbe
cwtl
mov
pusha
and
xchg
sahf
sub
nop
sbb
imul
hlt
sti
jl
lds
adc
mov
bound
ret
xor
jecxz
pop
sub
mov
push
add
sbb
fldpi
ret
pushf
pop
add
out
add
inc
sbb
pop
cli
pop
fwait
pop
mov
inc
lock
and
or
lcall
fimuls
shll
inc
mov
push
mov
out
push
push
inc
mov
mov
arpl
push
scas
gs
cmp
and
shlb
jl
mov
push
fistpll
and
xchg
fidivl
and
mov
rcrb
cmp
imul
pop
cmp
sbb
bound
mov
sub
or
pop
das
jns
pop
adc
ja
inc
jecxz
fisubrs
xor
xchg
jmp
mov
or
and
mov
add
popa
popf
sti
push
mov
mov
cmp
call
ljmp
test
cmp
sbb
adc
movsb
fidivrl
mov
dec
fs
out
in
leave
cmp
push
loop
lods
das
insl
das
xlat
pop
adc
js
shl
sarl
mov
repz
mov
idiv
mov
and
sbb
fisubrl
push
popf
sub
xchg
ds
in
loopne
mov
mov
lods
pushf
jbe
test
ljmp
imul
jg
movsl
clc
and
daa
mov
add
rcr
adc
inc
rcll
or
xchg
jl
aas
bound
push
les
jno
sti
lcall
or
lds
push
and
in
xor
dec
xor
in
jmp
xchg
and
push
adc
int
shlb
cmp
push
imul
lcall
xor
orl
mov
push
adc
sub
xchg
loopne
sbb
outsb
stc
popa
shl
mov
mov
js
mov
push
std
insb
jno
stc
pop
pop
sub
shll
or
shlb
lahf
push
and
movsb
popa
nop
add
xor
shrb
into
bound
pusha
jns
movsb
adc
testb
jl
cmp
dec
mov
jg
xor
push
popa
enter
test
gs
lds
lcall
aad
xor
xchg
fmul
xchg
or
ja
adc
insl
xchg
cmpl
dec
cmpsl
and
sahf
sbb
outsb
data16
or
pop
inc
jo
add
sub
daa
popf
push
jp
test
fcoml
or
mov
dec
movsb
sbb
sub
roll
pusha
enter
lret
icebp
sub
pop
xchg
sbb
cmp
jp
std
in
mov
sub
leave
add
jae
repz
inc
cmp
jp
jl
lcall
cmp
shrb
mov
les
sub
sub
add
and
mov
addr16
mov
leave
adc
shl
aaa
repz
popa
lret
cmp
movsb
lods
cmp
xor
ret
js
push
xchg
xor
imul
cmp
mov
dec
jo
lret
dec
fmull
movsb
sub
fwait
andl
and
mov
lds
je
mov
fists
inc
push
inc
ljmp
or
jbe
sarl
xchg
nop
push
into
cmp
xchg
aaa
push
sub
scas
add
pop
pop
and
fstp
dec
adc
mov
repnz
adc
xor
pop
test
jae
xchg
popf
aaa
cmc
dec
mov
inc
xor
clc
inc
nop
adc
fists
jne
sbb
cmp
and
sub
xchg
sub
enter
and
fsubl
push
sub
sahf
icebp
cld
gs
xor
xchg
repnz
lock
in
pop
cmp
cmp
pusha
push
jnp
in
iret
and
stos
push
insb
ja
mov
jb
leave
cmc
add
xchg
out
xchg
into
aam
sbb
lar
movsb
push
mov
test
mov
sbb
jmp
push
das
cmp
or
out
mov
inc
int3
pop
aas
pop
or
push
sbb
jne
jb
fisubrl
imul
pusha
cmp
cmp
pop
movsl
jo
lahf
aad
sbb
lods
filds
push
and
sbb
push
jns
mov
add
adc
loope
int
test
and
or
push
push
movsl
sbbb
mov
mov
xchg
jns
mov
shlb
stc
aas
xchg
mov
jns
adc
sbb
ljmp
cmpsb
xchg
pop
or
inc
ds
cmp
inc
ss
xchg
pusha
mov
ret
mov
lret
mov
sbb
aas
adc
adc
out
lcall
repz
push
jge
dec
iret
inc
loopne
mull
popa
insb
add
loope
arpl
clc
mov
mov
leave
sub
idivb
sub
mov
inc
push
cmp
jnp
loope
xchg
mov
cmp
arpl
mov
sbb
inc
sahf
shlb
loop
push
flds
xor
xor
mov
filds
pop
mov
pop
mov
sub
inc
arpl
push
mov
call
inc
lock
ret
mov
lock
cmp
in
movl
xor
fwait
or
cli
add
fimull
mov
dec
cmp
sbb
dec
ljmp
insl
aam
sahf
push
out
and
mov
mov
test
sub
sub
jnp
stos
xchg
push
mov
in
push
jae
and
sub
xor
dec
cmc
xor
and
sahf
int
cmp
adc
jp
sbb
and
jp
push
add
daa
fs
stos
negb
xor
sub
inc
test
movsb
lret
push
dec
mov
sub
adc
fstps
and
ss
xchg
imul
lock
mov
pop
xor
sbb
lahf
data16
jae
dec
mov
pushf
out
fimull
pop
push
jle
pop
subl
cmpsl
stos
xor
pop
aaa
stos
out
lock
or
mov
push
orb
data16
js
fisubrl
mov
mov
mov
adc
movsl
lcall
pop
fcomps
mov
and
rclb
pop
pop
xor
dec
jge
ja
cmpsl
mull
bound
test
push
adc
repnz
sub
xchg
mov
dec
inc
pop
mov
mov
aad
ret
adc
sub
xchg
inc
pusha
mov
or
adc
call
dec
mov
sbb
aaa
pop
xor
xor
fsubrl
sbb
insl
mov
mov
lcall
scas
push
fwait
push
enter
add
out
popf
push
xorl
test
pop
mov
in
adc
mov
sbb
scas
adc
jbe
and
aad
xchg
das
sbb
adc
aad
mov
ss
outsb
jle
mov
xor
pop
xlat
pop
sub
cmpsb
or
fistpll
xchg
pop
push
mov
push
add
pop
mov
cwtl
mov
pop
and
cwtl
cmp
sbb
sub
add
repnz
push
iret
cmp
fs
loope
jmp
or
and
push
sbb
jmp
cli
push
lahf
xor
arpl
in
movsb
pop
mov
mov
jmp
pop
xor
mov
adc
push
mov
icebp
dec
push
insl
icebp
mov
lret
adc
stos
int3
fdivr
fisttpl
js
into
outsl
sub
inc
jns
cld
shrl
divb
ret
push
add
leave
push
dec
sub
shlb
out
shrl
mov
shrl
xor
cmpsb
rcrl
mov
and
testb
mov
in
fdivl
xchg
arpl
lea
pop
popa
popf
pop
add
loopne
lods
adc
inc
fwait
cmp
pop
hlt
jbe
rcr
pop
mov
cs
mov
pop
inc
js
stos
arpl
xchg
mov
repnz
or
push
mov
cli
mull
xor
inc
and
and
repnz
pop
mov
imul
cltd
and
xchg
dec
int
pop
test
add
fnstcw
fisttps
push
sub
aas
movsb
scas
cwtl
inc
dec
fdivrl
push
out
and
mov
dec
lock
and
cmp
fcompl
pop
mov
int3
xchg
xor
sarb
xchg
inc
push
jmp
rclb
sti
imul
out
xchg
xchg
xor
je
cwtl
mov
and
mov
or
arpl
test
mov
repz
or
push
int
dec
mov
lods
jg
inc
adc
mov
inc
jbe
cmp
lea
sbb
sahf
lahf
cld
mov
in
cmp
add
mov
inc
inc
cli
dec
les
inc
imul
lret
iret
sbb
fdivr
fistpll
sar
in
pop
jbe
mov
jns
and
jns
insb
push
out
push
inc
mov
and
mov
inc
pop
sub
jmp
aas
rcr
inc
out
jmp
shl
inc
inc
dec
xor
ss
pushw
sahf
xchg
daa
mov
sbb
sbb
push
adc
mov
or
cmp
mov
out
pop
aad
push
test
cmp
push
jnp
shlb
repnz
frstor
xchg
fnsave
into
push
out
in
inc
sar
mov
cmp
icebp
adc
mov
arpl
dec
pop
dec
aam
je
cmp
lods
xor
aaa
xor
in
add
push
arpl
or
scas
outsl
jnp
pop
imull
adc
mov
movsl
outsb
popa
jne
or
push
cmpsb
mov
mov
cwtl
shll
and
adc
outsb
inc
xchg
xor
mov
imul
aas
xchg
popf
or
arpl
es
ljmp
fs
stos
in
and
jae
push
jnp
mov
jg
mov
cmp
mov
lock
test
out
jp
sub
rcr
ja
adc
or
lods
cmpsb
nop
sub
or
into
cli
insb
or
jne
mov
filds
outsb
mov
test
and
push
lcall
push
nop
mov
cmpsl
or
inc
into
addl
nop
sahf
sti
or
iret
xor
adc
push
lea
scas
leave
aas
into
insb
cmp
mov
sbb
iret
xor
fstpt
popa
lock
pop
inc
inc
jg
stc
test
dec
dec
std
mov
aaa
ret
clc
ss
out
ds
mov
cmc
sbb
xor
cmp
rcll
test
ljmp
add
test
pop
loope
pop
aam
into
cmp
cwtl
scas
dec
sbb
mov
adc
aaa
aam
rcl
push
sahf
sbb
mov
bound
push
loope
xor
pop
inc
inc
mov
popa
xor
fidivrl
popa
push
rcrl
mov
scas
fnstsw
pop
dec
divl
mov
push
jbe
adc
jne
sahf
insb
les
sbb
into
add
push
data16
xor
dec
stos
test
mov
jno
stos
aaa
icebp
sarb
mov
dec
mov
xor
or
sub
mov
inc
mov
dec
out
push
out
clc
and
push
out
add
hlt
adc
sub
cmp
out
mov
cmp
xor
xchg
insl
pop
mov
pop
jnp
mov
add
push
mov
push
inc
xchg
cmp
je
movsl
imul
mov
fwait
pop
pop
sti
in
lods
daa
mov
std
cmpsl
push
test
sbb
es
push
cmp
xor
mov
dec
jno
push
lret
cmp
ret
inc
add
in
and
std
gs
fisttpl
xor
sub
nop
cld
lods
mov
lret
leave
dec
in
repz
cmp
adc
bound
jmp
push
jns
jle
fs
mov
lahf
fucom
adc
mov
in
lret
cmp
jno
or
mov
jne
jbe
mov
xor
push
sbb
sub
jns
inc
xor
nop
jb
push
xchg
mov
and
mov
lock
daa
rcrb
stos
scas
pop
cs
inc
jecxz
inc
jmp
dec
cmp
and
or
int
sahf
mov
cli
test
ret
sarb
add
scas
jns
scas
addr16
pop
arpl
inc
push
mov
xchg
stos
mov
lahf
dec
sbb
inc
sbb
xor
mov
cs
add
popa
aaa
out
adc
call
fidivrl
dec
mov
inc
push
dec
dec
and
cmp
outsl
scas
cmp
add
iret
fsubl
fistpll
test
stc
je
data16
pop
xchg
dec
stos
jmp
int3
jp
je
bound
lods
mov
ss
jmp
jmp
and
leave
outsl
dec
dec
sub
mov
mov
push
fwait
inc
mov
scas
mov
jae
sbb
jo
into
jle
rorb
sbb
inc
lods
fadds
pop
mov
mov
cmp
in
cmp
mov
xchg
fwait
outsl
mov
inc
jp
in
add
lret
data16
pop
mov
xchg
jg
nop
scas
fnsave
daa
inc
pop
pop
xchg
mov
mov
les
jmp
shll
jmp
cmpsb
mov
or
mov
movl
or
pop
xchg
inc
jnp
and
jb
jo
sub
divl
addl
test
pop
push
nop
mov
xchg
xor
add
js
lds
aaa
clc
cmc
add
stc
outsl
out
dec
les
push
cwtl
subl
loope
mov
jmp
push
lcall
lret
push
xor
mov
xchg
or
ret
sub
xor
sub
fnstenv
lea
aas
mov
add
dec
or
mov
sahf
test
rorl
and
sub
lock
pop
hlt
push
jg
pop
sub
out
dec
add
arpl
cmc
out
push
out
and
xchg
jno
addr16
in
lret
scas
cmpsb
mov
push
push
push
pop
mov
xchg
cmp
jne
mov
lahf
scas
mov
popa
inc
cmpsb
push
je
mov
jg
shlb
arpl
mov
dec
shrl
adc
dec
hlt
ljmp
mov
repz
xchg
lds
out
lahf
xchg
cmp
fistpl
mov
cs
cmp
imul
hlt
adc
and
pop
cwtl
call
aaa
push
cvtpi2ps
and
lret
jmp
shl
lret
out
out
lds
cs
popa
repnz
mov
cli
and
inc
mov
cmp
lds
les
mov
nop
mov
ret
jle
dec
mov
xchg
stos
out
dec
add
lret
clc
vpbroadcastd
push
mov
sbb
loop
jne
xchg
inc
or
add
fsubp
push
movsb
sub
pop
loop
lds
mov
mov
test
popf
pop
out
das
jg
lock
and
das
jp
jge
cltd
or
sub
test
pop
cmp
and
push
ss
xor
scas
cmp
xchg
rcrb
mov
add
std
outsl
ja
mov
jno
jp
dec
ljmp
add
xor
repz
cltd
cltd
mov
adcb
adc
addr16
push
rolb
cltd
adc
fucom
sub
pop
mov
cmp
hlt
sbb
pop
mov
ret
lods
inc
cwtl
sbb
mov
and
sub
imul
enter
sbb
inc
push
das
sbb
jbe
cmp
dec
adc
insl
or
out
xor
loopne
pop
inc
mov
mov
push
sub
jecxz
add
jae
loop
jno
adc
mov
outsb
dec
pushf
imul
cmp
cmp
mov
add
xor
iret
add
popf
adc
lock
sub
arpl
or
pop
mov
and
sbb
cwtl
add
mov
mov
adc
xchg
and
jp
and
ljmp
int
or
jecxz
xchg
cmp
inc
or
insl
lea
int3
nopl
ja
mov
mov
test
loopne
lea
pop
ret
es
mov
adc
push
xor
inc
xchg
out
aaa
aam
or
lea
inc
flds
dec
rolb
push
or
mov
xor
mov
mov
push
fcmove
xor
adcl
negb
dec
aaa
dec
adc
imul
cwtl
pop
popf
lods
cmp
inc
in
pushf
sub
sbb
pop
xor
out
add
stos
iret
mov
mov
jmp
inc
es
pop
fs
mov
or
cmp
cld
mov
iret
cmpsb
or
inc
push
mov
or
popf
dec
xchg
and
push
cmp
gs
adcb
test
adcb
push
mov
aam
or
lret
sbb
pop
push
out
sti
shlb
inc
and
mov
cwtl
out
movsl
push
call
andb
imul
out
mov
ds
imul
xchg
xor
icebp
jg
inc
inc
cmp
fdiv
popf
out
out
test
ret
dec
push
sub
test
divl
mov
popf
add
xor
ja
jae
cld
mov
vcvtpd2ps
sub
ds
jbe
mov
insb
repz
push
mov
loope
mov
mov
arpl
gs
dec
dec
jle
rorl
leave
lods
push
lcall
adc
xor
mov
outsl
into
add
or
ds
push
mov
leave
jbe
scas
inc
adc
je
dec
inc
gs
push
adc
aaa
cltd
and
push
push
push
push
sub
add
fmulp
mov
add
adc
push
ror
xchg
icebp
je
outsl
xchg
xchg
test
sbb
scas
and
jns
hlt
mov
add
mov
dec
sbb
aas
adc
jbe
jo
dec
push
adc
popf
cmpsl
movsb
or
and
xchg
jmp
dec
mov
pop
jo
orl
mov
in
das
mov
lods
jg
ret
sbb
into
mov
push
xor
stos
lock
jl
push
or
jg
push
test
mov
clc
cmp
fadds
add
lahf
xchg
pop
add
aas
ret
cwtl
push
mov
lds
fcmovnb
fucomp
ljmp
mov
mov
lds
push
push
push
loope
pusha
sub
mov
popf
int
inc
cltd
xchg
or
push
pop
pop
add
out
into
sar
inc
cmp
mov
pop
dec
xor
sti
scas
fisttpll
jbe
push
lock
lock
pushw
mov
inc
mov
nop
push
into
test
pop
mov
pusha
cmp
bound
arpl
loope
pop
bound
aaa
sbb
pop
je
mov
jns
into
das
push
mov
push
xor
mov
lock
shlb
dec
sub
jo
sbb
xchg
aaa
sub
loopne
jne
icebp
data16
jg
pop
sbb
dec
xor
stos
test
das
mov
sbb
loope
lods
leave
fsubp
inc
mov
in
fistps
pop
addr16
addr16
js
aad
jb
mov
loope
jo
pop
popa
lcall
cmc
cmpsl
mov
sbb
cld
dec
jg
addb
outsb
and
imulb
sti
popa
fdivl
cli
das
sahf
pop
jl
mov
inc
mov
fs
hlt
shlb
add
or
add
sahf
mov
jmp
dec
jae
pop
fiaddl
adc
inc
das
pop
mov
ljmp
call
movsl
mov
pop
mov
inc
lahf
cwtl
outsb
fbstp
ret
sub
ljmp
inc
push
add
insl
inc
jl
pusha
xchg
add
fwait
pop
adc
notl
sub
cld
outsl
clc
sbb
aam
mov
cmp
ljmp
and
lret
mov
xor
pop
scas
add
and
scas
push
insl
and
mov
stos
xor
in
sub
aas
and
idivb
stos
fisubrl
lret
dec
jg
dec
les
je
cmp
push
int
sub
mov
pusha
call
mov
or
clc
mov
lret
out
repnz
mov
xor
test
and
jmp
dec
xor
loope
cmp
inc
jbe
fmull
test
imul
sub
xchg
push
pop
sub
lods
cmp
fptan
imul
add
fiaddl
adc
jbe
mov
push
aaa
add
mov
daa
push
or
push
xor
sub
xchg
jp
jns
pop
push
fs
dec
lret
and
scas
lret
clc
mov
je
arpl
adc
inc
repz
jg
lds
cmp
scas
std
dec
cmpsl
jecxz
js
cmp
orl
call
xor
inc
insb
loop
imul
or
loop
vpsubsb
adc
std
dec
cmc
fsubrs
mov
lcall
inc
jmp
push
xor
jg
adc
dec
in
and
xor
cltd
mov
arpl
dec
int
mov
and
and
push
mov
sbb
test
sbb
fsubrs
sti
cwtl
les
imul
sarl
shlb
les
icebp
enter
sbb
aad
adc
leave
inc
cltd
gs
push
mov
xor
jbe
ret
pop
mov
mov
push
jo
jmp
scas
mov
xchg
insl
not
orl
mov
mov
jbe
jp
mov
stc
adc
test
movsl
mov
jecxz
clc
subb
jne
inc
xorl
mov
std
setnp
out
jb
scas
adc
push
imul
stc
int
dec
rep
popf
test
stos
ja
sbb
jecxz
and
fimull
xchg
ss
mov
pandn
mov
sbb
xor
movl
je
stc
mov
xor
popa
outsb
lods
pop
jp
mov
lock
popf
aad
cmp
addl
push
jae
mov
inc
fs
mov
insb
or
mov
fistps
ret
enter
ficoml
xchg
iret
in
lods
sbb
mov
mov
sub
stc
jno
aaa
daa
mov
aad
pop
sysenter
jg
js
loop
mov
aas
lods
mov
arpl
rorl
or
test
or
add
and
scas
add
xchg
or
ret
or
repz
jp
jmp
ljmp
out
add
fwait
dec
cmpsb
pushf
shlb
jo
xchg
js
out
ret
daa
sbb
inc
jnp
jns
mov
movb
lcall
jmp
leave
mov
in
imul
ret
dec
cmpb
jbe
test
jge
pushf
jae
adc
xor
and
out
loope
mov
xorb
loop
test
push
or
jmp
push
xor
xor
fstl
push
push
xor
test
imul
mov
or
push
iret
sbb
push
gs
clc
mov
pop
loopne
cmp
ret
mov
add
sbb
sub
js
das
jns
jbe
into
pop
jp
mov
cmc
sahf
adc
or
insl
xchg
test
lahf
sbb
popa
push
mov
loope
ficomps
xchg
push
je
rol
inc
scas
dec
inc
pop
repz
adc
and
mov
xchg
hlt
sbb
je
in
sti
mov
pop
addb
jbe
or
es
mov
jl
mov
push
add
adc
inc
mov
push
nop
lret
jle
adc
sbb
lods
inc
gs
mov
loopne
arpl
add
jge
movsb
loope
bnd
add
pop
xchg
popa
mov
push
add
pushw
jecxz
mov
loopne
pop
or
mov
in
push
fprem
sbb
call
jge
mov
push
negl
jns
dec
fwait
lahf
adc
pop
in
pop
sub
les
sbb
out
ds
push
addr16
jbe
sub
push
iret
test
dec
pop
int3
scas
sub
sbb
cwtl
popa
fs
je
inc
loop
push
and
mov
fcoms
cmp
mov
lods
je
cltd
xor
inc
xor
je
imulb
sbb
arpl
imul
out
loopne
sub
mov
xchg
add
aad
sub
push
scas
pop
int3
sub
out
push
jp
mov
mov
cwtl
adc
imul
lods
mov
out
fucomip
mov
xchg
cmp
iret
sahf
aam
pop
test
xchg
adc
sub
push
fnstenv
nop
orb
data16
jo
push
insb
mov
cmc
pop
das
or
int
imul
shrl
in
mov
subl
aaa
xor
xchg
les
xor
jge
loopne
mov
mov
inc
mov
sbb
push
sub
aad
mov
pushf
inc
sub
sub
push
inc
ds
fldt
mov
sbb
mov
nop
arpl
cmp
das
sbb
repnz
jp
or
mov
in
call
push
jg
adc
cmpsl
scas
mov
iret
mov
mov
dec
stos
dec
movsl
xchg
cmp
adc
mov
push
pusha
push
cmp
aad
stos
in
loope
xchg
jne
sar
dec
notb
aas
push
shr
sbb
fstpt
dec
loop
mov
pminub
push
jp
movsl
mov
out
sub
mov
gs
cmp
dec
clc
and
and
sbb
jmp
pop
leave
push
push
cmp
leave
or
mov
and
aad
cmp
adc
pop
pop
sbb
shlb
xchg
and
jo
and
push
gs
xchg
add
fnsave
imul
mov
addr16
data16
ljmp
les
test
sub
sub
test
push
imul
mov
scas
std
out
mov
push
decl
mov
cwtl
and
ficompl
cmpsb
addr16
xor
insb
leave
aad
lock
test
loop
jbe
xchg
mov
inc
xchg
adc
rorl
push
sub
test
jb
jo
xchg
or
rcll
ja
dec
add
mov
inc
jecxz
mov
mov
adc
cli
cltd
fistpl
xor
jbe
cmp
stos
add
xchg
mull
pop
inc
lods
mov
xchg
and
mov
ja
and
outsb
push
ret
dec
push
mov
and
xchg
mov
nop
icebp
fidivrs
add
pop
add
sbb
mov
icebp
xchg
stos
sbb
fbld
repz
push
test
test
dec
in
push
mul
sbb
jg
cltd
mov
jmp
adc
jbe
sub
call
lods
and
xor
test
add
sub
mov
in
out
std
pop
fstpt
pop
jne
xchg
mov
bswap
cmp
fildl
push
xlat
push
sbb
js
cli
pop
and
pushf
sbb
jmp
push
and
out
mov
arpl
add
aam
imul
xchg
test
xchg
xor
xacquire
jl
aad
pop
cmpb
sarl
cmp
int3
inc
cs
or
xchg
sub
clc
lods
pop
in
inc
fwait
sub
add
gs
in
sti
add
mov
jne
fcomi
add
inc
xor
std
mov
push
xor
jmp
or
pop
pop
scas
mov
sub
and
in
and
ds
mov
lods
stos
cmpsl
jno
xchg
jnp
lret
sub
aam
aaa
or
dec
int
pop
out
not
mov
xor
in
pop
mov
push
lret
mov
inc
and
sub
push
imul
inc
loop
gs
jno
addr16
dec
loop
xlat
inc
fldl
test
scas
call
sbb
add
push
adc
xor
shl
mov
shll
jle
je
jnp
decb
adc
icebp
insl
and
push
gs
inc
dec
test
cmp
and
mov
scas
sub
sbb
adcl
lea
outsb
or
sub
sbb
movsl
and
leave
add
inc
push
scas
jnp
push
cmp
sbb
mov
push
adc
aaa
test
pop
xchg
lea
gs
insb
andb
xchg
or
mov
bound
xchg
pop
inc
and
testb
mov
pop
out
pop
sbb
xchg
adc
mov
out
movb
mov
scas
in
mov
mov
jecxz
jg
add
pop
fisubs
das
xor
and
pop
sub
mov
mov
shll
mov
add
inc
push
push
xchg
ljmp
push
mov
jbe
bound
mov
xor
cmp
mov
mov
add
jb
jnp
jno
fstps
test
cld
call
or
adc
aam
stos
mov
jo
popl
cmp
fcoml
dec
gs
xchg
ljmp
xchg
add
cmpsl
loope
insb
loop
and
xchg
ret
in
sub
pushf
fsubs
jo
jl
in
mov
inc
lods
dec
addr16
push
call
xlat
adc
mov
test
orl
xor
mov
cmpsl
aam
mov
imul
fwait
add
dec
push
or
stos
inc
out
jae
sbb
out
imul
scas
jmp
mov
mov
sbbb
jp
inc
cmp
aas
std
pop
push
push
or
inc
sahf
aam
mov
in
cmpsb
ja
or
sbb
mov
jb
push
or
in
jg
mov
jecxz
xorl
mov
shlb
push
dec
scas
jmp
adc
cmpsl
dec
clc
decl
push
sahf
pop
lods
sti
into
lds
pop
out
hlt
dec
imul
cwtl
sahf
xchg
cmp
gs
shufps
popa
inc
mov
in
inc
je
stos
xlat
or
stos
push
jmp
pop
popa
add
mov
fdivrl
imul
pop
jbe
and
push
test
xor
movsb
mov
cmp
lahf
mov
je
pop
or
nop
xchg
repnz
xor
and
shll
sub
fcmovb
in
inc
xchg
test
cmpsl
xchg
sbb
je
push
ja
pop
incb
subb
jl
inc
lahf
cmp
pop
jae
fbld
in
sbb
jo
mov
arpl
mov
xchg
adc
sub
and
les
in
leave
dec
leave
stos
xchg
cmp
adc
ret
mov
mov
testl
cmp
pop
sub
push
xchg
add
inc
xchg
cli
inc
and
or
sarl
inc
mov
clc
dec
dec
shr
imul
mov
cltd
adc
xlat
push
fimull
jno
pop
adc
into
sbb
sub
sbb
pop
push
clc
in
daa
fwait
loope
outsb
out
fsubr
mov
push
mov
lea
jb
int3
pop
pop
mov
cmpsb
xchg
test
sahf
subb
push
push
xchg
fucomip
lret
xchg
cmpsb
dec
jno
push
aaa
dec
clc
mov
test
xchg
cmp
lock
shll
xor
lods
aas
fstpt
mov
lret
sbb
popa
adc
popf
rol
pop
and
push
shl
test
arpl
xor
sbb
xchg
xor
xchg
xchg
jae
jg
push
dec
mov
sbb
stc
mov
dec
ror
jl
js
mov
std
ljmp
cltd
fsubrl
pop
or
sub
cmp
int3
adc
mov
adc
mov
push
xchg
rorl
mov
test
out
add
daa
jg
xchg
daa
in
jl
std
cs
push
lret
sahf
pop
ja
call
ja
inc
adc
mov
pushf
fs
push
cli
dec
pop
stc
pushf
pop
bound
in
mov
pop
sti
aam
sub
fcomps
mov
sub
lods
aas
mov
push
arpl
sbb
fsubl
jmp
ljmp
xor
lea
fbld
iret
adc
push
test
xor
shr
push
movsw
test
aas
cld
outsb
in
insl
repz
pop
add
bound
int3
fcoml
dec
jo
addr16
sub
stos
dec
mov
icebp
insb
cmp
lcall
jle
jns
fs
adc
cmp
loope
adc
add
repz
lahf
mov
icebp
add
adc
dec
lock
mov
push
js
js
fldt
cld
popf
notb
das
sbb
cli
adc
outsl
and
cmp
mov
das
int3
incl
out
push
jns
mov
xchg
mov
jns
xor
cmp
insl
xchg
rol
jecxz
aad
mov
lret
xchg
or
sbb
inc
aad
xor
fsts
mov
mov
pop
sbb
mov
sub
xchg
and
and
faddp
pushf
fadds
out
push
mov
shll
loopne
testl
into
inc
stc
sub
push
sbb
cld
sub
cmc
ja
cmc
les
sti
subb
sub
dec
pushf
sbb
in
and
cs
out
jb
sbbl
xchg
dec
push
mov
mov
sbb
cltd
bound
dec
mov
push
push
mov
mov
push
mov
repnz
lcall
pop
or
sub
mov
pop
in
cmp
pop
cli
cmpsb
stc
lods
lock
inc
mov
xlat
xchg
int3
imul
adc
jle
inc
push
mov
jmp
enter
addr16
lret
call
das
inc
push
icebp
movsb
iret
out
jno
pop
mov
ja
cld
pop
and
ss
cmp
add
pop
cmp
stc
scas
inc
jo
jp
pushf
int3
push
sub
lods
adc
mov
popl
subb
jle
fdivrl
jo
inc
rorb
mov
cwtl
inc
js
cmp
ret
push
xor
sbb
xor
dec
rclb
in
scas
lods
test
push
inc
enter
pop
or
mov
aas
arpl
addl
mov
push
imul
stos
adc
pop
incl
inc
cmp
test
dec
jb
cli
jmp
scas
xchg
into
mov
push
pop
sub
adc
jecxz
movsb
popa
dec
loop
inc
sub
sbb
mov
fistl
fists
jle
xor
sub
dec
out
stos
negb
cld
addb
adc
lods
dec
xchg
or
sbb
mov
dec
sbb
adc
sub
gs
sahf
mov
insl
sar
xchg
pushf
push
pop
mov
rclb
push
xchg
aaa
or
insb
inc
dec
int
loop
mov
pop
xchg
mull
inc
pop
je
xor
addr16
mov
fwait
push
cltd
call
int
addb
xor
sub
mov
insb
cmp
dec
lods
jo
sbb
sbb
lods
pop
jg
mov
xor
mov
sahf
call
sub
cltd
daa
das
push
mov
fnsave
imul
mov
int3
leave
push
sub
jae
test
insb
popf
mull
adc
call
jb
es
movsl
lcall
cmpsl
ficoml
int3
add
pop
lahf
mov
adc
jl
lock
dec
nop
sahf
cli
and
clc
insb
push
inc
push
dec
xchg
pop
lods
orb
into
inc
movsb
sub
pop
cli
push
sub
pop
aas
imull
icebp
ss
dec
cld
mov
mov
lcall
sub
or
push
xchg
lods
inc
inc
add
mov
mov
jnp
cmpsb
cmp
shll
cltd
xchg
repz
fbstp
xor
lea
data16
mov
adc
int3
xchg
sub
pop
je
push
pop
mov
fs
xchg
push
inc
fcmovnbe
inc
mov
sub
addr16
pop
adc
sti
rolb
sub
dec
add
cmp
inc
add
scas
adc
jno
ljmp
popa
sbbl
add
xor
adc
call
pop
jp
mov
scas
stc
leave
jnp
call
push
test
sbb
and
fsts
scas
addl
mov
push
lcall
movsl
push
xchg
jne
mov
shlb
imul
pop
es
pop
aad
xchg
lcall
cwtl
add
mov
imul
movsb
aaa
cs
pusha
sbb
mov
add
sub
jge
add
inc
aas
popf
lea
orb
add
mov
scas
jmp
adc
adc
sub
insl
pushl
imul
push
pop
cmc
and
popf
je
sbb
dec
or
out
mov
push
mov
scas
xchg
pop
jo
xchg
shll
push
adc
xor
hlt
repz
add
xor
jae
jnp
rclb
push
push
int
fs
and
cmp
mov
mov
mov
mov
add
rorl
enter
call
mov
mov
sub
jb
inc
fiaddl
cld
cli
rolb
and
int3
sub
inc
icebp
mov
bound
dec
pop
push
out
out
pop
cvtps2pd
insl
enter
repnz
dec
cli
xor
cmp
cmc
arpl
xor
push
sub
in
mov
and
xrelease
mov
xchg
adc
mov
clc
rcrb
scas
dec
out
scas
and
mov
repnz
aaa
sub
ljmp
fcmovu
or
nop
pop
enter
dec
jle
add
sbb
inc
enter
inc
and
sti
rcr
cmp
adc
test
cwtl
js
push
sbb
pusha
adc
jns
sbb
adc
xor
cwtl
outsl
dec
js
cmp
int
add
rorb
jmp
in
and
dec
mov
dec
xchg
xor
pop
ds
imull
lahf
and
fstl
push
push
push
movd
jne
sub
aad
pop
push
push
stos
negb
xor
jecxz
es
inc
inc
xchg
mov
std
dec
aam
push
jmp
inc
cmp
shll
mov
sub
and
jecxz
sbb
out
aad
mov
popf
cmpsb
and
ret
shrb
adc
cmc
sub
aas
add
cmp
and
mov
push
pop
sbb
notl
incb
bound
inc
mov
sahf
out
and
mov
fs
imul
push
sub
jnp
adc
dec
pop
jmp
jl
dec
dec
cli
xchg
jnp
adc
repz
lret
inc
outsb
enter
mov
dec
jae
inc
mulb
pop
mov
mov
add
inc
inc
xchg
push
sahf
sti
adcb
push
dec
insl
mov
fbstp
sub
call
inc
cmpsb
pcmpeqw
mov
test
std
sub
lds
sarb
dec
arpl
push
or
and
test
nop
lret
bound
pop
mov
jl
movsl
mov
push
xchg
mov
jle
push
stos
adc
add
movsb
sub
add
sti
loopne
cmp
test
arpl
jo
gs
push
push
cmp
out
stos
loope
dec
inc
pop
mov
push
xor
pop
mov
out
jno,pn
pop
adc
pop
inc
mov
adc
movsl
arpl
sti
sub
mov
jb
xor
scas
xchg
xor
pop
jecxz
inc
jbe
sbb
aas
test
outsl
push
mov
mov
or
fisubs
and
sbb
cmp
adc
test
adc
jecxz
mov
mov
mov
out
lahf
xor
test
ja
lods
sub
in
and
and
add
icebp
cmp
jl
pop
rcl
xchg
inc
push
ss
adc
dec
inc
cmc
xor
xchg
call
cmp
add
mov
dec
fnstenv
jae
insb
adc
add
jmp
and
or
jns
xorl
jmp
mov
dec
sbb
mov
jnp
cmc
mov
sti
jbe
mov
dec
sub
inc
xorb
fldenv
pop
fcmovnu
push
imul
inc
xchg
mov
cmp
push
add
pop
mov
fnsave
movsb
iret
pop
in
lahf
pop
bound
inc
or
mov
rol
push
jge
adc
mov
push
jbe
mov
mov
cmpsb
sbb
sbb
call
lods
sub
sbb
mov
js
movsb
js
mov
sub
mov
rol
call
pusha
or
cmp
or
pusha
jge
xchg
inc
jecxz
in
shlb
scas
gs
imul
sbb
imul
jo
adc
xchg
out
cmp
dec
xor
jne
sub
push
mov
dec
jae
adc
sarl
imul
arpl
inc
dec
or
xor
inc
sub
mov
push
jns
cmp
sub
pop
mov
xsave
iret
xor
jne
push
mov
push
mov
pop
int
roll
mov
mov
xor
sbb
dec
cmovb
cmpsb
mov
xchg
rcrb
loop
jle
and
outsb
sbb
inc
push
adc
cmpsl
hlt
cmp
xchg
ss
lahf
xchg
lock
jbe
push
stos
ret
xchg
stc
dec
cmp
in
mov
xchg
cmc
mov
pop
dec
jge
xchg
pop
ret
xchg
push
aad
cmp
xchg
or
add
add
jecxz,pn
mov
testl
cwtl
std
aam
jp
sbb
fcomps
test
adc
inc
repz
or
fisubl
xorl
fdivrl
fists
aam
push
xor
cmp
mov
sbb
mov
movsb
vminss
arpl
mov
stc
xor
enter
and
or
adc
xchg
sbb
in
repz
jne
inc
in
iret
sub
and
je
je
notb
and
xlat
mov
ja
dec
cmp
shlb
or
mov
add
lcall
mov
jb
mov
xchg
and
add
lods
je
nop
pushf
sbb
adc
xchg
or
loop
test
out
jb
xchg
xchg
sub
outsb
jecxz
inc
in
xorb
inc
pop
adcb
les
mov
cmp
stos
cmp
jae
int
cmp
push
iret
push
fistpll
cmp
lret
sub
xchg
jo
lods
push
add
icebp
out
jle
inc
imul
xchg
enter
loop
push
mov
cs
push
scas
pop
call
cli
out
sar
xchg
add
adc
and
push
mov
lods
sbb
cld
into
mov
imul
cld
xor
pop
xor
scas
insl
xor
jbe
cmp
cmpsl
dec
dec
jmp
sub
test
outsb
mov
mov
imul
sbb
dec
addr16
mov
fisubs
pop
dec
int
outsb
leave
popa
sub
adc
lahf
sub
in
xchg
stos
inc
sbb
push
jns
and
stc
and
mov
test
or
mov
lods
out
fsts
inc
sbbb
mov
inc
stc
movsb
push
dec
js
int
outsl
je
nop
lock
xor
mov
add
sbb
pop
fisttpl
xchg
push
mov
outsl
inc
repz
aas
push
shl
fsubr
loope
and
dec
adc
daa
imul
das
sub
mov
xor
mov
scas
pop
jae
je
test
jl
imull
or
inc
mov
incl
iret
cwtl
push
imul
les
add
or
push
mov
test
cmpsb
cwtl
push
lret
es
adc
clc
add
popa
mov
arpl
movsb
cmp
mov
xchg
std
adc
push
je
enter
xchg
jle
mov
pop
popa
sahf
insb
std
stos
aaa
sub
mov
pop
dec
rcr
es
xor
cmp
dec
mov
subb
adcb
cltd
jl
jnp
sbb
fsubr
or
fnstcw
push
adc
or
das
outsb
out
pop
dec
insl
loopew
and
push
shr
mov
and
int3
ds
add
dec
or
mulb
cltd
cli
dec
pop
test
lock
je
jb
inc
or
loopne
lcall
insb
sub
xchg
cli
dec
je
sbb
aas
or
wbinvd
pop
xchg
sar
call
and
cli
imul
adc
cmpsb
cwtl
loope
into
xchg
repnz
int
inc
scas
mov
sbb
sub
push
pop
cltd
test
outsl
dec
inc
in
push
negl
popl
sbb
jge
jbe
mov
and
movsb
in
mov
movsb
jge
or
lock
fimuls
test
mov
fs
jp
inc
jo
daa
arpl
xchg
xor
cmpsl
negl
jle
scas
jl
dec
lods
mov
sbb
std
arpl
mov
sbb
jg
sete
fnstsw
mov
xchg
rcl
add
pop
mov
fbld
sbb
dec
inc
inc
sbb
jecxz
jae
daa
xor
dec
mov
insb
ljmp
ficoms
loopne
jg
jge
dec
cmp
mov
cmp
sub
mov
clc
ret
xor
push
cs
lods
inc
jbe
adc
mov
scas
mov
cltd
xor
cmp
xor
xorl
stos
shlb
mov
inc
rcrl
in
imul
xor
inc
jmp
dec
pop
add
add
subb
mov
aaa
js
sub
push
lds
pushf
push
stos
aaa
les
adcb
xchg
negl
push
xor
fistl
mov
imul
fdivl
and
clc
dec
je
pop
shlb
in
sbbl
pop
inc
xchg
cmp
mov
test
cmp
inc
pop
jns
push
jge
inc
jecxz
or
imul
leave
sahf
and
xor
fcompl
pop
stos
inc
push
in
ljmp
mov
jnp
cmp
adc
pop
xchg
pop
sbb
pop
jecxz
sbb
es
call
lods
sub
add
pop
insl
jmp
test
mov
stc
insb
mov
mov
jg
fsubrs
stc
add
xchg
dec
decl
xchg
adc
jp
mov
imul
cltd
fisttpl
push
or
jne
cwtl
fisubrl
mov
sub
sbb
sbb
std
cltd
or
test
mov
cmp
push
sub
fwait
dec
mov
fucomi
rorb
out
pop
or
popl
stos
aam
jo
push
pop
into
lds
sbb
xchg
inc
in
dec
adc
pusha
test
inc
push
xlat
push
cmp
ja
mov
xchg
pop
in
sbbb
jne
or
iret
mov
cmp
sub
pop
cmpsb
sub
subb
lret
fmuls
or
add
aas
in
scas
push
adc
sub
mulb
xchg
out
dec
jmp
in
es
push
lods
dec
xor
test
push
or
dec
out
inc
add
inc
iret
pop
push
lods
sub
aas
dec
add
pop
cmp
pop
mov
in
mov
aas
mov
test
inc
or
mov
xchg
adc
rorb
cmpsl
lods
mov
repnz
insb
cmp
mov
mov
and
lods
sbb
aas
mov
inc
ret
push
js
adc
lock
enter
mov
mov
aam
dec
cli
enter
xor
or
cmp
mov
daa
sbb
push
fnstsw
sbb
cmpb
xor
or
std
pop
scas
icebp
popa
jg
rcrb
shrl
test
dec
sub
add
push
jg
insl
loopne
in
sbb
pop
iret
cs
or
stc
mov
cli
into
jbe
pop
push
lret
xor
push
fwait
cmpb
call
adc
cmpsl
rorb
cmp
xor
mov
sbb
mov
pop
or
ljmp
pop
add
je
sub
jl
movl
jnp
and
ss
inc
adc
int
push
inc
sub
sbb
sub
cmp
jl
cmp
lds
inc
add
sti
stos
popa
sub
dec
loope
cmp
stos
insb
cmp
fdivrl
sbb
xor
mov
shll
fwait
in
xor
mov
mov
shrb
pop
mov
jns
push
addr16
rolb
or
pop
inc
and
outsb
lret
jne
mov
jp
aad
leave
lret
cmpb
adc
mov
xchg
inc
daa
add
sub
xchg
sub
sarl
in
sbbb
inc
imul
fadds
into
pop
pop
cmp
pop
fildll
and
push
lcall
cmpsl
icebp
cmpsl
sub
pop
mov
xlat
cmpsl
fstpl
mov
xchg
adc
shrb
pop
jg
insb
inc
pop
mov
xor
outsb
loope
aad
jo
jb
fstp
test
sbb
dec
jle
xchg
arpl
loope
xlat
test
sbb
cmp
aas
cmpsl
mov
mov
inc
mov
adc
ret
mov
pop
push
aad
jnp
and
test
sub
pushf
xor
and
lret
jnp
inc
inc
xchg
pop
sub
push
dec
inc
movsb
or
xchg
or
adcl
push
aad
sub
and
fldcw
stc
ljmp
iret
xor
mov
jge
cmc
aaa
insb
ret
enter
jp
in
and
cmp
jno
cld
and
mov
mov
xor
pop
mov
test
inc
int3
aas
mov
mov
add
xchg
test
call
lea
sbb
xor
pop
es
push
mov
mov
das
xor
mov
das
xor
cmp
sub
jmp
cmp
ss
cmp
xchg
lods
xchg
mov
push
jle
jg
test
sahf
fwait
adc
ja
test
stc
aas
xchg
movsl
test
imul
in
outsl
jne
in
insb
dec
imul
or
mov
pop
mov
and
xor
movsb
mov
push
scas
sbb
inc
jmp
mov
cs
sbb
mov
fists
and
iret
aam
xchg
xor
push
dec
mov
outsl
aaa
sub
cld
fmuls
pushf
fsubrl
mov
popa
push
sti
lahf
inc
je
lock
sbb
js
fisttps
or
and
mov
pop
sbb
lcall
xor
outsb
xor
outsl
movsb
shrb
sub
jg
xchg
xchg
add
jge
adc
inc
arpl
aad
pop
mov
int
push
cmp
rolb
jo
daa
add
or
mov
dec
das
push
mov
pop
bound
je
ds
rclb
adc
xchg
jge
cmp
mov
xchg
pop
icebp
mov
pushf
arpl
orb
scas
cmp
test
mov
test
sub
jge
cmp
inc
cmpl
dec
dec
mov
testl
mov
jg
cwtl
lods
adc
int3
mov
mov
pop
ss
sub
sbb
jp
dec
mov
sbb
in
stos
imul
lods
inc
mov
dec
jmp
cwtl
jno
sub
xor
adc
cmp
sbb
movsl
flds
stos
or
sar
pop
dec
mov
inc
xchg
pop
mov
dec
gs
push
cmpsb
cmpsl
and
cli
xchg
shll
scas
int3
xor
pop
cmp
sub
mov
orb
popa
pop
test
ret
addr16
clc
shl
bound
jne,pt
je
and
mov
hlt
cmpb
xorb
mov
mov
dec
ret
or
fdivl
movsl
dec
push
push
ljmp
sbb
ss
sti
pop
sbb
xchg
popa
sbb
pop
dec
cli
fildl
jnp
mov
pushf
call
xchg
aaa
push
xor
in
ffreep
cmp
jge
cld
adc
adc
inc
loopne
loope
mov
lock
ficompl
test
mov
lret
lret
xchg
adc
dec
aaa
in
sbb
jmp
movsl
and
and
xor
cs
or
jnp
movsb
int3
push
lcall
sbbb
sub
test
jo
push
cmp
aam
cmp
sbb
orl
frstor
mov
jb
negb
lret
int
ret
les
scas
jecxz
jno
out
push
adc
inc
pop
cmp
jp
loop
adc
inc
cmpb
push
iret
movsl
dec
lret
movsb
dec
cmp
adc
jne
fwait
fs
in
insl
fsubl
mov
sarb
jle
fimuls
mov
pusha
pop
sbb
sbb
fldcw
popa
sbb
adc
xchg
stc
push
outsb
movsl
movsb
push
lea
xlat
mov
outsb
es
mov
aas
inc
ljmp
rolb
enter
lods
dec
loop
cmp
xor
inc
fimuls
loopne
push
arpl
les
inc
dec
mull
push
cld
jge
stc
mov
mov
test
jge
ret
scas
mov
lds
sbb
add
inc
jae
test
inc
mov
out
push
push
in
mov
clc
out
icebp
mov
pop
dec
xor
jbe
dec
xor
jno
dec
sub
sbb
sub
aam
test
mov
das
repz
loop
std
add
call
shlb
xchg
jmp
lret
or
inc
adcl
adc
clc
pop
in
push
or
imul
dec
pop
cltd
sbb
add
inc
ret
jg
mov
pusha
pushf
jecxz
repnz
fdivr
mov
insl
cmp
push
rcll
repz
xchg
fldenv
pop
sub
loopne
cmp
hlt
push
scas
hlt
xor
fucomp
daa
nop
int3
xchg
mov
adc
fists
mov
addb
pop
ss
dec
ljmp
push
adc
in
icebp
push
push
loop
xchg
je
outsl
pop
cmpsb
pushf
sub
mov
fcoms
mov
mov
jnp
jo
sti
das
xor
mov
popf
lret
push
lret
ljmp
in
in
inc
fisttpll
sub
cmp
fidivrl
lcall
sub
inc
adc
pop
adc
dec
ret
cmpsb
fstpl
add
negb
sbb
mov
pop
xor
add
in
in
dec
inc
xchg
aad
js,pn
pop
jge
out
cmp
inc
sbb
inc
sbb
mov
scas
out
out
dec
push
mov
fs
bound
xchg
femms
test
gs
push
adcl
xchg
into
div
cltd
loopne
jp
or
xchg
cs
stos
mov
sbb
repnz
cmp
xor
sbb
mov
cmp
adc
mov
pop
xor
dec
imul
push
ds
ret
cmp
ret
fistps
sarl
and
outsb
fsubp
cld
dec
push
push
stos
rcr
sub
scas
shrb
out
pop
jno
mov
dec
test
insl
and
cwtl
and
in
nop
inc
xorl
inc
adc
outsb
adc
inc
and
ja
push
das
pop
xchg
mov
mov
loop
sbb
xchg
shl
movsb
ret
inc
push
mov
mov
pusha
mov
push
and
fldenv
or
mov
lock
mov
int3
and
xchg
fisttpl
subl
sub
jo
inc
pop
xor
pop
lods
fistl
jne
adc
scas
lock
dec
mov
pop
insb
pop
cmp
add
fsubp
aas
dec
mov
cmp
mov
out
nop
loopne
pop
xchg
mov
sub
lea
cmp
insl
fadds
cmpsl
fcmovnu
std
cmp
xor
dec
jle
mov
data16
fs
cmp
js
mov
dec
stc
jge
or
jg
and
pop
sbbb
add
repz
inc
aaa
xlat
pop
sbb
andb
nop
push
mov
in
lcall
jle
pop
mov
inc
mov
push
xchg
sub
popf
and
mov
mov
mov
or
xor
and
js
sbb
push
mov
xor
or
mov
xor
jo
imul
mov
push
xor
in
repz
rorl
dec
inc
dec
jge
or
iret
push
repz
mov
cmp
aam
sub
pop
mov
imulb
bound
je
mov
or
repz
mov
dec
push
cs
xchg
dec
xchg
outsb
adc
faddp
and
lret
aad
fs
xor
xor
notb
pop
mov
in
mov
ret
xchg
int
push
mov
sub
inc
and
pop
dec
inc
cwtl
jecxz
je
mov
cld
xchg
dec
push
fcmovb
das
loop
or
in
mov
rolb
push
jnp
ja
mov
stos
ficoml
iret
cmp
fcmovne
mov
fisubs
fcmovu
fisttps
and
push
dec
jnp
xlat
sub
popa
insb
mov
ja
xor
and
mov
and
int
push
jnp
lret
push
sbb
add
les
fwait
and
fldl2e
jb
lcall
xor
pop
push
lock
sbb
push
ds
iret
add
adc
or
bound
pop
add
mov
xor
jle
negl
pusha
sbb
mov
xchg
inc
call
leave
dec
dec
insl
mov
jecxz
inc
scas
dec
cmpsl
pop
adc
adc
pop
cmp
fisubl
mov
mov
in
mov
lea
shl
mov
sahf
push
pop
and
adcb
mov
adc
rol
jl
mov
loop
mov
subb
dec
clc
mov
fsts
enter
jb
pop
jmp
leave
out
ss
fwait
mov
lret
leave
mov
jle
or
jne
pusha
cmp
sbb
gs
xchg
add
lcall
outsl
call
cli
sbb
mov
xor
in
mov
pop
out
sbb
cmp
mov
cmpsl
cltd
pop
jae
mov
cmp
call
mov
test
mov
xor
fcmovu
cwtl
imul
stc
push
push
cmp
leave
test
sub
mov
push
jno
fstps
ss
shrl
push
lahf
and
pop
pop
das
ja
push
les
aad
rcrl
shll
xor
xor
loopne
icebp
ret
lods
mov
cmp
cmc
adc
dec
push
xor
xor
fldt
jg
sub
fstpl
les
cmp
push
hlt
sbb
call
jge
mov
sarb
cmc
cmp
jbe
or
cmp
movsl
les
or
xchg
sbb
mov
adc
pop
into
inc
pushf
mov
push
in
sub
pop
int
lret
pop
and
btc
out
out
mov
andl
pushf
rcll
pop
mov
xor
aad
sarl
rolb
test
or
jl
jns
aas
psrld
jg
ret
push
lret
les
imul
aam
sahf
cmpsb
add
dec
and
add
mov
dec
mov
jle
jmp
shll
sbb
mov
push
sbb
fnstsw
sbb
cmpsb
ret
nop
outsl
iret
mov
popf
mov
aaa
xor
pop
and
mov
popa
cmp
enter
adc
stc
loope
push
sarl
data16
lret
sub
mov
or
or
and
mov
and
cmp
jp
fisttps
out
outsb
cli
jp,pt
add
imul
push
cld
clc
inc
das
push
cmp
ret
adc
xchg
mov
in
sbb
pop
ljmp
mov
xchg
adc
and
movsl
lahf
mov
fiaddl
pushf
mov
cmp
js
repnz
xchg
dec
jge
pop
cmpl
imul
loopne
stos
push
imul
pop
mov
mov
jnp
loopne
xor
insl
or
xor
and
and
aad
idiv
in
dec
ret
test
xor
adc
fidivs
cmp
rorb
jns
or
inc
dec
or
push
fcmovbe
rcll
xchg
sbb
fnstsw
lods
xchg
outsl
or
cltd
sbb
enter
mov
and
cmp
repnz
pop
adc
pop
or
mov
leave
mov
xchg
or
jle
das
fcmovbe
gs
fisubrs
aas
xchg
add
xchg
shlb
jno
pop
ficoml
push
repnz
test
insb
cmp
aaa
fcomps
movsl
in
add
dec
pop
xor
cmpb
and
xchg
sti
out
cmp
cmpsb
add
ret
rolb
adcl
cltd
push
sar
in
xchg
jns
sub
xlat
xor
imul
inc
or
pop
insl
pop
rcr
jecxz
mov
loopne
lret
rclb
insb
sbb
stos
sbb
shll
movsl
pusha
mov
js
movsl
pop
fidivl
out
mov
inc
daa
mov
shlb
int3
sbb
pop
adc
int3
repz
xchg
jmp
inc
rcll
dec
lahf
mov
rol
xchg
outsl
bound
je
test
xlat
or
negb
sarb
imul
or
ja
cli
jnp
iret
dec
mov
test
sahf
xorb
lcall
and
or
scas
jmp
xor
push
sarl
repz
pop
sub
mov
and
scas
inc
cmp
mov
add
jmp
inc
jecxz
jmp
jb
rep
xor
dec
mov
ret
enter
test
fucom
push
jnp
leave
enter
scas
mov
les
daa
push
mov
idivb
push
stc
mov
in
cmp
pop
enter
cmp
or
imul
cltd
cmp
enter
popa
add
mov
movsl
dec
outsw
shrl
xor
addr16
lock
lahf
mov
add
cmp
mov
or
push
jne
in
ds
adc
gs
xchg
gs
push
mov
rorl
and
mov
jge
xchg
dec
arpl
outsb
test
dec
pop
jo
sub
mov
enter
mov
mov
dec
xor
or
sub
mov
inc
lea
dec
pop
stos
icebp
xlat
dec
push
mov
dec
adcl
dec
inc
lods
adc
push
cmp
mov
cli
decl
adc
mov
pop
push
pusha
inc
mov
push
out
pop
out
bnd
js
dec
push
dec
cli
sbb
xor
test
scas
stos
push
scas
jne
xchg
jne
and
cmc
mov
mov
loopne
out
mov
fwait
jno
leave
les
lret
sahf
pop
lret
cmpsl
shr
js
ljmp
push
sbb
call
or
push
push
mov
or
imul
mov
xchg
subl
add
movsl
cmp
jae
scas
sub
pop
ds
mov
jle
aas
jge
test
jl
push
mov
rorb
xchg
xchg
sbb
sbb
out
xorb
xchg
nop
testl
lret
push
imul
imul
test
std
faddl
clc
mov
int3
cwtl
add
or
jo
nop
popa
scas
mov
jnp
inc
jle
mov
adc
faddp
nop
sub
dec
ret
and
push
jbe
daa
lahf
dec
sub
adc
pop
fstps
ljmp
lret
cmpsl
sbb
js
xchg
mov
mov
inc
scas
or
movsb
rolb
xchg
loop
mov
ret
xchg
ret
cmc
xlat
dec
inc
push
pop
aas
push
cmp
int
push
pop
push
outsb
stc
shlb
movsb
jl
inc
adc
fisubs
aas
je
es
ds
xor
adc
fs
vmovdqu
pop
jbe
push
push
mov
rclb
ja
or
stos
ljmp
and
pop
add
fistps
mov
inc
fisubrs
cmp
cmp
outsb
out
sub
jns
add
pop
adc
sar
sahf
push
into
fcmovbe
imul
and
leave
push
adc
mov
mov
loop
pop
cli
sub
test
jg
std
mov
lret
push
repz
ds
mov
bound
jge
cmp
lock
mov
lcall
je
sub
iret
and
sti
pop
in
lods
scas
inc
jg
cmp
add
lret
xchg
pop
mov
push
sbb
jecxz
pop
mov
js
inc
stos
sub
sbb
out
xor
cs
outsb
mov
lahf
cmp
movsl
lahf
push
ss
mov
mov
adc
data16
lds
pop
stos
test
sub
aaa
pop
idivl
pushf
mov
cmc
add
jbe
and
incl
add
push
notb
pop
sahf
inc
sets
mov
push
dec
cmp
jns
or
push
repz
test
push
cmp
xor
movsl
adc
jmp
stos
adc
pusha
jo
ljmp
mov
mov
and
lcall
mov
adc
lret
ja
jmp
fisubl
push
out
mov
sbb
ret
hlt
jnp
cmp
adc
repnz
scas
push
gs
xchg
mov
popa
dec
lea
pop
or
xor
fbstp
mov
or
dec
dec
jo
loopne
jbe,pt
xchg
cmpsb
mov
cmp
insb
sbb
enter
jbe
addb
xchg
out
push
das
outsl
mov
dec
fidivs
int
fsubrs
mov
popf
cwtl
divb
rcl
mov
cli
push
mov
sub
mov
mov
xor
dec
xchg
xchg
andb
stos
pop
test
lret
test
mov
push
xchg
pop
popf
adc
and
mov
xchg
mov
fimuls
js
pop
dec
add
cmp
pushf
clc
sub
jne
js
js
mov
aam
xor
jae
adc
pop
lds
mov
hlt
shlb
mov
ret
sub
sub
lahf
stos
ds
loope
les
xlat
dec
fsubl
push
mov
in
sub
arpl
shll
xchg
and
sub
fistpl
xchg
jns
jae
leave
pop
in
sarl
loopne
xor
repnz
es
jno
sbbb
push
or
mov
sti
jb
push
insl
jmp
in
xchg
jl
or
push
jae
pop
sub
dec
notb
cmpb
push
repz
mov
jmp
sub
sbb
sub
or
popf
fisttps
test
jmp
lds
jp
mov
pop
adc
jl
mov
jecxz
subb
sub
ds
jbe
cmp
aas
push
cmc
les
mov
dec
filds
popa
dec
or
push
sbb
xchg
inc
es
mov
repz
mov
and
mov
leave
orb
std
mov
lds
fiaddl
mov
jle
pop
pop
mov
dec
outsl
leave
sbb
pop
dec
and
inc
mulb
sbb
jbe
cmpsl
negb
nop
xor
in
pop
outsl
xchg
inc
mov
pop
dec
or
lea
in
push
nop
sbb
dec
jl
mov
jp
andl
sub
pop
pusha
mov
repnz
cld
jne
in
cmp
lret
ss
nopl
xor
das
js
and
inc
cmpsl
repz
adc
lret
jns
push
enter
xor
iret
xor
popf
ds
push
mov
mov
sahf
stos
int3
sti
arpl
pop
inc
in
in
push
leave
sbb
ret
push
filds
int3
ss
les
inc
or
xchg
pop
push
jns
out
xchg
cmpsl
test
sbb
shll
dec
lods
loop
inc
sahf
stos
fisubs
mov
stos
mov
repnz
shlb
test
lds
popf
mov
xchg
cmp
xchg
loopne
in
pop
sti
push
mov
into
or
in
push
imul
cmp
fimuls
jmp
inc
push
push
and
jmp
pop
std
cmp
mov
adc
sahf
in
cld
dec
cmpsl
int
xchg
in
lds
and
pushf
inc
dec
push
adc
pusha
jl
fs
ret
cld
sbb
rcl
adc
xchg
aas
scas
pusha
cmc
add
inc
xchg
fs
jle
dec
sub
and
aam
ret
add
xabort
or
adc
testb
mov
andb
inc
aam
jae
cld
push
cmp
xchg
cwtl
ljmp
inc
and
jb
les
pop
add
loopne
add
in
shlb
das
and
adc
fxch
fndisi(8087
cmp
inc
mov
xor
xchg
sarl
fs
xchg
ja
xchg
ror
outsb
inc
daa
xchg
dec
in
xchg
jl
sbbb
jno
jmp
test
addr16
inc
in
xlat
popa
ret
adc
int3
lock
fcmovu
jbe
aad
sub
adc
push
sub
fld
or
xchg
push
or
dec
xchg
aad
mov
icebp
frstor
movsl
movsb
jae
inc
setne
and
out
push
mov
mov
clc
push
out
call
std
mov
ljmp
pop
mov
mov
mov
jae
adc
aas
adc
or
es
and
movsb
sti
add
ja
repz
incb
lcall
push
ja
loope
pop
aam
stc
cwtl
push
das
out
arpl
sbb
inc
mov
sbb
sti
icebp
push
pop
imulb
lods
ja
shlb
lret
pop
add
xchg
out
out
or
mov
rorb
pop
in
pusha
sub
outsb
ds
fstpl
sub
push
scas
mov
jnp
sub
xchg
stc
or
dec
arpl
pushf
dec
test
pushf
and
mov
pop
dec
es
imul
cmp
lods
in
ficoml
clc
frstor
imul
dec
popf
cli
dec
push
int
addb
cmpsb
mov
bound
bswap
dec
mov
aaa
dec
in
mov
test
jmp
outsl
mov
mov
sbb
sti
es
mov
mov
mov
or
popf
pop
cld
xor
mov
jo
std
repnz
jecxz
add
mov
pushf
fs
insb
icebp
adc
dec
inc
xchg
cmp
or
das
cmp
pop
les
xchg
mov
repz
not
pop
adc
push
jbe
sbb
xchg
or
cmp
mov
mov
inc
ficompl
notb
in
cltd
ljmp
mov
in
fcomp
jbe
xor
xor
cmp
clc
pop
dec
push
xchg
std
in
mov
push
or
cmc
add
dec
pop
mov
cwtl
sub
inc
lcall
cmp
pop
cmp
xchg
cmp
jnp
jae
xor
outsb
mov
sbb
sub
cmp
addr16
cmp
arpl
sub
js
cmp
inc
add
mov
lahf
xchg
scas
aad
and
mov
dec
faddp
and
mov
pop
int3
and
scas
sarb
in
out
inc
enter
test
imulb
or
f2xm1
std
rorb
lret
add
and
insb
inc
cltd
lahf
adc
jecxz
negb
xor
mov
mov
aaa
insb
aam
std
sbb
push
adc
pop
imul
ss
push
push
cs
enter
dec
dec
ss
mov
pop
mov
fs
sbb
push
xor
ss
mov
jle
mov
xor
add
test
lods
imul
jl
mov
pop
lods
push
out
push
dec
imul
inc
push
dec
mov
daa
out
sub
mov
out
add
mov
mov
jp
out
cltd
cmpsb
and
sti
stos
pop
ja
xchg
jmp
pop
dec
push
test
out
mov
push
sub
jmp
pusha
outsl
addr16
jle
jmp
leave
cmc
or
cmpsl
or
or
sub
adc
cmp
or
enter
jmp
leave
das
into
pop
test
or
fadds
ror
fildl
cmc
dec
jmp
mov
jbe
jmp
and
sbb
mul
dec
push
jmp
int3
mov
movsb
jmp
push
adc
cmc
jb
mov
das
pop
mov
mov
pop
lret
push
je
addr16
push
sbb
addr16
push
out
into
add
sub
fxch
push
lcall
sarl
iret
lea
add
push
push
mov
jae
and
xor
cmp
lret
mov
aam
and
out
sbb
cmp
pop
xadd
sbb
int
pop
jae
dec
addr16
inc
pop
in
adc
push
adc
lods
mov
lods
shrb
sub
add
pusha
adc
aas
jnp
ja
jbe
lock
enter
xchg
arpl
fdiv
dec
cltd
out
ljmp
scas
xor
push
push
enter
inc
mov
pop
lahf
addr16
mov
mov
sub
push
push
lods
inc
ljmp
cs
loop
pop
imul
xor
jecxz
sbb
mov
int
gs
fldt
scas
rclb
cmc
ss
lea
jne
arpl
into
fsubl
out
push
xchg
inc
jl
pop
movsb
and
rcl
call
and
and
cld
and
sbb
jne
dec
jb
aam
push
lcall
lret
fdivrs
das
std
pop
inc
clc
mov
icebp
pop
in
icebp
inc
ret
andl
mov
push
enter
sbbb
mov
out
mov
lcall
adc
int
xchg
mov
into
cli
or
outsl
cs
cli
in
mov
das
and
push
into
xchg
pop
outsl
std
xor
adc
xor
data16
jnp
sub
push
xchg
add
ret
and
inc
inc
movb
lahf
mov
mov
mov
add
scas
stc
fdiv
adc
pop
inc
adc
cmpsl
call
mov
dec
addr16
jle
xor
cmp
inc
xlat
popa
lods
jg
loopne
idivb
sbb
out
mov
insl
xchg
jmp
sub
inc
mov
or
stos
adc
or
xor
dec
adc
cmp
mov
add
ljmp
sahf
cmpsl
or
inc
es
and
pop
mov
rcr
sub
mov
xor
sbb
cmpl
fimuls
les
cmp
loop
pop
xchg
out
push
jecxz
or
aam
aas
mov
and
cs
sub
push
cmp
cmp
das
pop
ret
add
fnstenv
or
jp
scas
jne
sub
imul
imul
sbb
mov
cmp
stos
push
xor
push
lret
sub
loop
sub
les
inc
lds
sbb
lcall
arpl
mov
mov
jge
mov
mov
dec
adc
adc
inc
xor
in
dec
mov
shlb
in
cmp
out
mov
jp
stc
inc
ds
pop
movsl
outsb
call
fs
add
xchg
push
test
ret
xor
dec
dec
sahf
mov
movsl
lds
movsb
or
mov
movsb
lret
lds
pop
in
mov
fxch
push
mov
push
lret
ret
repnz
test
aad
pushf
cltd
and
insl
outsl
inc
mov
divb
sub
negl
divl
pushf
inc
in
out
push
push
call
jge
jb
mov
fidivrs
out
xchg
adc
pop
dec
insl
mov
ror
jns
inc
sbb
jmp
push
or
mov
xchg
and
test
gs
out
mov
out
add
cli
push
lods
pushf
pop
xchg
cld
mov
sti
into
mov
xor
out
in
pop
mov
sti
push
addr16
cs
mov
jecxz
cmp
xor
movsb
and
in
xor
ret
test
test
sahf
add
ss
enter
scas
cmp
mov
and
das
hlt
sbb
pop
xor
lock
inc
decb
pop
cmpsl
or
jo
scas
in
fnstenv
push
mov
loop
xor
fcomp
dec
sbb
shrb
dec
mov
dec
loopne
lcall
sahf
pop
jge
sbb
aas
mov
je
dec
add
stos
repz
movnti
fsubl
popl
fiadds
iret
mov
out
fcoml
xor
dec
outsb
jb
dec
jns
enter
call
cmp
dec
fincstp
push
sahf
mov
lahf
test
add
clc
inc
inc
xchg
cmp
ret
mov
mov
mov
xchg
fstpl
icebp
lods
sbb
ret
insl
inc
outsb
sbb
pop
lock
scas
movsl
mov
in
xchg
into
mov
cli
arpl
push
shll
popa
dec
push
shr
rolb
lahf
clc
cmpsb
xor
dec
pop
xor
cmpsb
jnp
inc
push
movsb
xchg
mov
jge
mov
inc
shl
out
or
cmpsl
dec
stos
or
mov
popf
adc
mov
popf
les
sbb
out
test
cld
sbb
es
insl
add
or
push
es
mov
sti
lods
mov
test
push
jge
insb
out
push
add
jb
lock
or
cmp
push
imull
je
sub
inc
inc
pushf
xor
jns
xor
into
mov
xchg
outsb
and
lods
cmpsb
nop/reserved
push
popf
inc
and
mov
out
mov
mov
or
jno
gs
sbb
mov
and
or
sub
fisttpl
mov
js
jl
add
lret
andb
sub
popf
mov
jae
push
out
pusha
mov
shlb
adc
stos
clc
pop
cltd
fchs
ljmp
rorl
shlb
into
push
in
dec
and
mov
loopne
icebp
in
sub
andb
nop
in
sahf
add
mov
push
int
call
leave
mov
pop
cmp
mov
aad
incl
xchg
xchg
push
data16
jge
or
inc
pop
addr16
repnz
pop
dec
dec
cmpxchg8b
daa
loopne
flds
pop
mov
addb
divl
jno
cmp
push
popf
dec
mov
test
dec
stos
push
jae
dec
loop
cmpl
xchg
mov
dec
cmpsb
lahf
dec
shl
fldl
or
in
mov
jecxz
in
icebp
mov
jb
xor
dec
mov
outsb
ret
inc
fbld
adc
push
cld
outsl
insb
inc
scas
jno
std
movsl
xchg
out
xchg
jbe
adc
jne
ja
inc
push
mov
mov
in
shrb
in
aas
inc
sti
adcl
fidivrs
int
mov
mov
adc
push
movsl
lock
dec
mov
rclb
xor
insl
dec
mov
out
xchg
xor
dec
fucom
xchg
mov
cmpsb
push
mov
mov
in
int
ljmp
rorb
pop
out
jbe
mov
sub
add
imulb
mov
insl
pusha
xchg
push
adc
add
sub
aad
adc
hlt
lods
mov
movlps
call
and
leave
repz
inc
addr16
inc
and
push
pop
xchg
fsubrs
mov
jae
fmulp
imul
fptan
leave
or
bound
dec
jne
jno
loop
int3
sub
push
cs
sarl
adc
xor
jno
jge
imul
popl
lea
fwait
jae
sbb
sbbb
lret
popa
rcrl
inc
jmp
les
leave
rcrl
add
inc
call
dec
imul
loope
dec
popl
imul
dec
and
jne
fdivrl
loopne
test
nop
xchg
ds
xor
adc
lret
ffreep
hlt
mov
and
dec
loope
mov
sub
xor
pop
leave
cmpsb
movsb
and
mov
les
sub
xchg
xchg
or
outsb
mov
pop
add
addb
mov
or
aam
adc
je
popa
sbb
fnstenv
rcrl
mov
jp
outsl
mull
mov
sub
rcrl
lea
jb
popa
fcoml
mov
sti
out
adc
stc
dec
hlt
out
cmpsb
jae
incl
jno
shrl
dec
push
cwtl
dec
fs
out
mov
and
and
loop
cmpsl
pop
xor
or
ljmp
dec
pop
sarb
dec
adc
outsb
push
add
aad
cmp
mov
mov
pop
lea
adc
cmp
sub
xchg
hlt
mov
popf
jne
push
or
push
xchg
shlb
je
mov
sahf
and
push
inc
popf
lods
push
ret
inc
addr16
lcall
fldl
movsb
mov
xchg
add
inc
and
or
and
pop
xchg
mov
rorb
fmull
sub
mov
cmp
pop
mov
pop
mov
and
enter
fdivrs
mov
insb
xor
xchg
cmp
out
in
pop
or
lret
into
mov
fsin
xor
leave
sbb
mov
jmp
repnz
outsl
rcr
sub
mov
je
add
adc
inc
add
ds
sbb
pop
test
shrb
sbb
mov
insl
inc
testl
icebp
or
fisubrl
daa
fisubrl
sbb
loope
adc
imul
leave
fsubrs
mov
jl
and
dec
movsb
loopne
and
cmp
jo
mov
scas
lods
sub
or
popa
fldcw
jmp
shr
push
sbb
dec
movsb
mov
dec
addl
push
inc
cmc
adc
pop
sarb
fcmovb
inc
scas
call
loopne
jmp
cmp
js
fadds
sbb
xchg
mov
mov
mov
jae
and
xchg
xchg
fldenv
icebp
pushf
inc
xchg
dec
mov
mov
ja
popf
lret
aaa
xchg
sub
je
dec
mov
shrl
lods
pushf
cli
je
movsb
mov
lock
or
cmp
aam
xchg
cmp
enter
dec
fidivrs
pop
push
xor
clc
je
lock
stc
stos
aas
std
pushw
es
or
push
cmp
lcall
loope
push
int3
ja
loopne
xchg
ds
mov
shrb
mov
mov
je
ljmp
cwtl
push
test
xchg
lea
cli
xchg
shrl
mov
aas
call
hlt
mov
ret
sahf
fbstp
push
jmp
mov
in
add
in
jg
gs
xchg
setns
in
inc
push
inc
adc
scas
idivl
rorb
sub
add
ret
scas
and
jbe
push
inc
dec
ret
inc
fwait
and
js
xchg
mov
ss
rorb
sub
push
ffree
push
mov
scas
add
pusha
test
cmp
jle
ss
sub
inc
icebp
inc
push
test
mov
icebp
rorb
fs
sub
mov
imul
ror
out
adc
and
enter
dec
leave
in
jne
pop
test
jecxz
jnp
repnz
test
in
dec
push
push
lock
push
decb
lods
cmp
inc
or
dec
inc
cmp
arpl
popa
mov
mov
xchg
pop
stc
sub
cltd
lock
rclb
add
mov
mov
push
clc
mov
dec
push
arpl
fistpl
out
dec
inc
cmpsl
jmp
mov
pop
mov
pop
push
out
out
push
adc
pop
enter
adc
clc
sub
mov
jge
ljmp
pop
push
stc
movsb
sub
mov
repz
push
call
lods
jbe
gs
mov
lock
jo
sbb
pop
imul
lods
jbe
imul
mov
or
cmp
std
inc
testb
mov
xlat
je
mov
adc
les
dec
push
fnstenv
js
mov
mov
xor
inc
inc
xor
out
pop
subl
fdivr
add
pop
iret
mov
lahf
cmp
ficoms
pop
das
push
pop
fsts
mov
mov
xor
in
popa
jno
popf
or
jo
xor
sbb
shll
mov
fldenv
mov
pop
aaa
enter
push
xchg
mov
and
adc
sub
dec
push
and
movl
lret
or
mov
sti
mov
fildll
fidivrs
and
ret
pushf
add
sbb
push
lea
in
shlb
stos
insb
sbb
or
lahf
shrl
insl
cld
icebp
inc
fsubrl
jae
out
fndisi(8087
rcrl
inc
fsub
mov
and
test
xor
repz
and
add
rcrl
add
xor
pop
mov
mov
pop
lock
sahf
mov
sbb
dec
repz
add
inc
cmp
shrl
xor
push
dec
xor
aam
jbe
decl
jns
sbb
lcall
dec
xor
divl
and
pushf
jmp
or
fs
dec
adc
mov
insl
add
fwait
test
push
aam
inc
cli
aad
mov
xchg
ljmp
dec
ss
adc
movsb
lock
adc
in
inc
pop
jae
scas
cmp
pop
imul
xchg
dec
fwait
int
je
fists
aad
shll
les
mov
mov
jno
out
inc
clc
mov
and
sahf
sbb
mov
popf
lea
clc
bound
push
ret
or
out
push
stc
jbe
subb
rcrl
add
fdivs
repz
faddl
inc
jmp
mov
sbb
lcall
ja
outsl
sar
out
movl
jo
shr
pop
aaa
mov
mov
cmpsb
mov
aas
test
insl
cmp
sub
notl
xor
mov
data16
repnz
jb
out
pop
sbb
adc
mov
arpl
jb
inc
sub
push
lret
xor
push
ret
mov
mov
jae
xchg
xor
test
jecxz
orb
pusha
xchg
pop
loop
push
cs
js
mov
jle
jnp
loopne
cwtl
ss
push
ds
jno
sahf
inc
incb
mov
mov
inc
outsl
lcall
pop
xor
out
push
icebp
popa
jle
in
out
rclb
mov
iret
sahf
popa
push
mov
cld
fistpll
dec
pop
icebp
inc
popf
mov
out
push
out
jne
ret
gs
mov
push
aam
in
out
mov
adc
jne
lret
mov
add
push
sub
mov
push
inc
mov
push
or
fdivl
and
pop
lods
daa
push
ret
daa
icebp
mov
in
adc
hlt
adc
ds
sub
inc
sub
bound
push
ds
add
adc
mov
pop
gs
int
test
add
dec
and
mov
adc
push
push
aaa
arpl
repnz
repz
inc
push
cwtl
xor
push
lods
sahf
adc
jno
sarb
jnp
xchg
imul
jne
cmp
imul
adc
adc
loopne
jle
xor
jle
jnp
adc
shlb
mov
xchg
movsl
dec
add
mov
divb
leave
cwtl
jae
mov
push
test
xor
das
dec
rcrb
xchg
mov
js
pop
xchg
mov
adc
xor
jl
push
mov
jnp
mov
xchg
pop
addr16
ds
or
loop
jno
and
xchg
clc
jae
movsl
xor
negl
in
push
imul
leave
or
fstp
fnstenv
xor
lods
dec
sbb
cs
jno
shll
inc
subb
iret
mov
pop
loope
andb
cmpsb
in
xor
sub
dec
loopne
mov
sbb
dec
movsl
mov
sub
cmp
insb
add
mov
icebp
fsubrs
sar
mov
or
jae
xor
filds
pop
repnz
cmp
js
out
push
mov
or
std
pop
mov
inc
andl
push
inc
cmp
sbbl
add
sbb
add
sub
pusha
jmp
ret
and
cmp
loopne
sti
fiaddl
hlt
cmc
mov
nop
sub
loopne
movsb
rorb
cld
js
hlt
xchg
sbb
xor
fnstcw
lret
inc
stos
mov
pop
arpl
sub
repz
data16
xchg
call
sbb
in
andl
jp
sub
sti
mov
pushf
pop
push
les
notb
cmp
gs
adc
adc
add
add
jo
inc
xor
stos
add
inc
mov
jb
jl
push
je
xchg
fists
mov
adc
mov
repnz
ret
mov
int
sbb
cmpsl
jnp
adc
scas
sbb
cmp
jne
imul
mov
sti
icebp
test
rol
xor
push
stc
popa
mov
sbb
cmp
mov
xlat
shll
aas
std
rclb
das
les
pusha
hlt
cld
xchg
fadd
pop
xlat
les
inc
outsl
mov
cwtl
jg
ret
mov
xchg
xor
in
das
cwtl
divb
jp
add
jle
aad
push
xor
mov
addr16
xchg
scas
or
inc
cmp
xor
push
fdivs
jne
int3
rep
jle
push
cmpsb
push
fwait
sub
mov
mov
add
xorl
notl
xchg
jno
rol
push
jb
stos
imul
dec
adc
ljmp
push
dec
jle
sarl
xor
mov
test
ja
cltd
mov
push
xchg
ret
mov
arpl
ss
or
call
sub
or
mov
xchg
in
es
les
pop
cmp
js
push
aam
mov
xor
std
mov
pop
pop
jae
xor
in
jo
das
fsubs
in
push
jp
push
dec
sbb
push
pushf
iret
mov
sub
inc
mov
cmp
rorb
adc
cmpsb
fmulp
cmp
outsb
add
xchg
loopne
les
push
xchg
andb
lods
decb
push
or
add
dec
xlat
mov
out
ret
push
cld
lret
mov
jge
sub
cmp
cmp
daa
imull
out
pop
jbe
lock
repz
adc
fs
or
sub
in
xchg
jp
pop
das
mov
inc
lods
mov
fsubp
aaa
jge
mov
mov
lahf
data16
rolb
pop
mov
iret
sbb
addr16
pushl
dec
aas
xchg
pop
addr16
xor
push
test
or
push
movsb
push
sub
iret
pop
loopne
mov
and
jo
jne
fsubrs
pop
push
jmp
mov
mov
orl
xchg
lcall
jae
iret
fstpt
xor
shl
xchg
sbbb
lahf
loop
or
add
jp
cmc
jmp
mov
sti
scas
push
inc
sub
outsb
mov
jg
in
sbb
pop
pop
lcall
pop
out
leave
in
jno
dec
lcall
lock
jle
stc
add
jmp
xchg
test
aas
loopne
cmpsb
in
insb
out
or
xchg
lods
jne
out
insl
sub
out
add
inc
dec
inc
lds
std
cmp
add
xor
adc
test
xor
addb
cmp
andl
mov
jecxz
pop
out
mov
push
fidivrs
xchg
cltd
movsb
and
js
ds
jae
std
lods
cmp
sbb
popf
orl
push
mov
adcb
fidivl
leave
pop
or
mov
pop
jnp
add
dec
or
outsl
xor
mov
shrl
pop
repz
test
xchg
in
jmp
xchg
inc
pop
fs
push
inc
repnz
lahf
test
icebp
pop
jmp
pop
insl
cmc
cmpsl
inc
fnstcw
shll
mov
push
dec
fildll
mov
cmc
mov
fcomi
xchg
mov
out
lret
mov
mov
mov
mov
jbe
and
in
scas
add
lcall
enter
push
add
ret
in
aad
in
sbb
adc
test
or
stos
inc
cmp
push
mov
push
xchg
aad
dec
stos
mov
nop
push
sbb
or
xor
adc
add
dec
sbb
lds
outsl
jg
inc
cmp
or
fwait
xor
cs
arpl
popa
or
sub
negl
sub
dec
pop
popf
xchg
aaa
idivb
cld
hlt
sbb
pushl
cmp
xor
movsb
lock
add
pop
dec
fstl
sub
out
aam
inc
fidivs
mov
stc
jmp
or
inc
jecxz
lcall
jge
xchg
mov
ljmp
dec
int3
cmp
xor
jno
or
xchg
sub
repz
setg
iret
sub
mov
imul
ja
inc
mov
push
mov
cmp
in
pop
flds
fs
xchg
popf
or
xchg
daa
push
mov
push
and
jae
mov
add
popa
rol
bound
mov
jb
mov
sbb
iret
push
add
or
pop
movsl
rcr
sarb
jmp
jne
mov
sub
andl
jb
mov
inc
test
int3
bnd
imul
or
pop
mov
fisubrl
push
sbb
fidivrl
fstps
je
xor
mov
inc
pop
popa
sbbl
insb
adc
mov
sti
roll
push
jle
mov
mov
das
pop
pop
cmp
lcall
or
push
lods
stos
push
dec
jge
pop
xlat
call
xlat
stos
arpl
mov
adc
add
add
mov
mov
mov
sub
mov
xor
xor
push
js
cmp
inc
cmp
jae
push
inc
mov
sub
and
out
adc
sbb
outsb
popf
sti
lea
jmp
cwtl
imul
pop
cmp
ljmp
adc
unpckhps
dec
lcall
je
jg
insb
xor
sub
bnd
lret
adc
mov
sahf
gs
mov
push
jb
aad
inc
in
int3
mov
rolb
lret
cld
outsb
rcrb
or
enter
lret
or
cmpsl
icebp
inc
js
pop
leave
mov
arpl
nop
enter
movsb
or
mov
outsl
mov
out
mov
fcoms
es
dec
lods
jb
mov
add
jbe
adc
rcrl
pop
test
testl
and
out
mov
outsl
pop
inc
scas
test
int3
js
xchg
fs
popfw
push
sub
out
lret
test
call
xchg
cli
lret
xchg
icebp
insl
hlt
and
inc
cltd
loopne
mov
or
add
sbb
test
pause
das
cmp
enter
fldcw
push
jg,pt
or
sbb
je
sbb
jno
addr16
pop
shlb
mov
sub
pop
jb
sub
xor
and
mov
cwtl
mov
in
mov
sahf
push
push
daa
aad
add
call
mov
pop
xor
lds
subb
lahf
and
sub
or
fs
lret
lock
imull
xchg
test
mov
push
movsl
int3
mov
push
movsb
int
stc
sub
shl
xchg
mov
lret
push
xlat
inc
mov
mov
xchg
call
jno
xchg
xchg
sub
dec
jg
xor
mov
test
push
inc
sub
jbe
test
dec
movsb
xchg
aam
test
rorb
lret
into
jl
pushf
ljmp
mov
leave
rclb
lahf
fwait
out
lret
fidivl
repz
sub
or
mov
adc
add
mov
adc
addb
mov
test
jnp
push
rcrl
sbb
cmpsl
xchg
jno
mov
lahf
xor
mov
inc
ds
outsl
inc
push
bound
gs
adc
js
xor
add
aam
movsl
aad
push
out
and
rorl
mov
repnz
sub
jge
movsb
cmpb
arpl
push
pop
enter
or
imul
into
mov
inc
add
add
mov
and
push
sbb
movsl
out
stos
pop
inc
push
sub
das
das
push
sub
dec
pop
imul
cmpsb
orl
dec
mov
ret
test
jmp
push
into
sbb
dec
in
sub
adc
xchg
push
push
and
les
cmc
mov
push
test
out
lock
sub
mov
sub
fidivs
les
add
sti
insl
pop
lods
fwait
mov
and
loopne
nop
das
xor
inc
pop
xchg
lea
je
flds
jl
sub
test
not
mov
sbb
sub
push
cs
enter
ljmp
jo
rcrl
inc
jl
cmp
cli
xchg
call
lahf
test
push
pfrcp
fsubrs
sub
inc
leave
jno
xchg
enter
push
inc
pop
or
push
or
pop
or
fidivrl
push
cmp
fstpt
jno
nop
into
fsubrp
out
mov
cmp
cmc
dec
dec
xchg
sub
cwtl
gs
mov
bound
cmpsl
test
ljmp
pop
jge
mov
orl
repz
cmp
fwait
inc
lea
pause
stos
cmc
jb
mov
dec
dec
mov
dec
adc
loop
negl
clc
mov
jno
jo
in
outsl
dec
inc
dec
bound
pop
sub
mov
fs
sub
mov
adc
xchg
sub
dec
pusha
aam
ljmp
mov
pop
cmpsb
pop
test
dec
in
mov
test
inc
sti
add
imul
or
popa
das
arpl
dec
dec
push
fcomip
fsubl
xchg
lea
cld
add
cmp
lahf
aad
rol
jno
dec
add
push
cmp
lds
inc
shrb
jbe
add
push
mov
cmpsl
test
jp
mov
test
and
cmp
mov
jle
mull
mov
inc
mov
rcll
adc
and
and
test
inc
daa
mov
xor
xor
sbb
aas
push
sbb
cmp
popl
cmc
pop
pop
inc
jecxz
adc
xchg
push
xor
add
jge
mov
dec
inc
nop
and
jae
in
add
inc
sbb
sub
test
in
sar
mov
cwtl
std
fstpt
pop
daa
in
mov
adc
arpl
dec
jecxz
hlt
adc
pop
or
jb
sub
xchg
pop
or
int3
mov
add
cmp
xor
subb
dec
in
mov
in
xchg
mov
jmp
out
adc
sbb
mov
dec
jae
add
jno
loopne
add
xlat
jne
dec
add
jno
inc
mov
jmp
movsl
inc
ret
push
imul
add
or
mov
stos
je
dec
sub
mov
push
sbb
insl
cmpsb
cmp
push
sahf
sub
outsl
pop
mov
insb
data16
mov
adc
and
cmp
into
lcall
orb
pusha
jecxz
pop
jno
add
mov
mov
dec
lret
movsb
xchg
or
push
add
int
mov
mov
sbb
dec
dec
inc
jmp
jge
pop
jmp
nop
je
jp
repz
adc
popf
sahf
cmp
add
out
mov
adc
jae
dec
jge
mov
std
inc
inc
mov
mov
test
fwait
sub
pusha
data16
insb
fsts
push
insb
testl
mov
pop
lcall
subb
push
xchg
pop
leave
shl
insb
fisubl
push
sbb
popf
inc
subl
je
idivl
in
test
mov
rcll
cld
sbb
mov
insb
add
gs
mov
insl
or
sub
adc
cmpl
ficomps
stc
loopne
mov
cmp
lret
cmp
push
xchg
arpl
lods
bound
or
adc
xor
mov
sarb
test
push
pop
xchg
cmpsb
out
jo
insl
fwait
inc
ret
and
pop
xchg
cmpl
mov
iret
add
adc
sub
add
inc
push
or
jb
or
add
mull
ret
pop
xchg
cli
rol
cmp
loop
add
xor
popa
push
or
sub
mov
xlat
shll
sub
inc
ljmp
inc
inc
les
in
dec
pop
fnstcw
test
adc
xor
outsb
inc
sub
xchg
jmp
cmp
aad
inc
daa
cmp
sar
divl
mov
pop
mov
jp
mov
cmpsb
insl
imul
leave
mov
shrb
xlat
adc
cmp
out
push
fcmove
out
data16
add
mov
jo
or
movsb
cmp
dec
jmp
or
sub
movl
mov
fcoms
nop
pushf
push
ja
in
scas
nop
in
mov
imul
fiadds
mov
cmc
loopne
jecxz
fs
lcall
inc
jns
lcall
mov
sbb
test
pop
jno
inc
outsl
lahf
mov
xchg
das
pop
repnz
cli
mov
cld
out
mov
call
aam
mov
xor
inc
mov
dec
ljmp
add
sbb
xchg
push
push
std
in
insb
inc
insl
out
xchg
fst
mov
lret
subl
aas
cmpsl
sub
xchg
clc
into
dec
cld
dec
sti
push
jno
pop
dec
inc
xchg
sub
pop
jae
push
fists
pop
loop
add
add
push
xchg
lods
and
inc
mov
leave
push
push
push
je
inc
sub
mov
lea
inc
ljmp
xchg
lds
fnstsw
imul
jno
mov
test
or
pop
or
loop
pop
push
cmc
outsb
mov
jmp
sub
lock
cmp
fsubrs
sti
mov
test
jbe
cmpb
push
ret
fistl
xor
adc
fists
cwtl
jge
xchg
jne
mov
cmp
aaa
mov
push
jb
repnz
clc
mov
adc
ret
jno
mov
jle
adc
adc
fisubrs
xchg
movsl
jne
add
adc
mov
sub
lock
fistpl
lea
xchg
pop
pop
es
out
pop
icebp
fldenv
adc
inc
test
and
enterw
dec
add
ret
cmpsb
movsl
daa
lret
fs
pop
push
fwait
stos
sti
jge
xchg
xor
jno
shl
ss
adc
cmp
inc
mov
jae
cmp
push
pop
in
sbb
iret
popf
in
in
arpl
fiadds
push
dec
jp
sarb
mov
in
int3
inc
push
xlat
outsl
xchg
inc
push
add
xchg
xor
icebp
mov
add
sarl
cli
mov
ljmp
or
jo
sbb
cwtl
mov
into
xchg
or
icebp
dec
push
orb
test
mov
inc
nop
pop
xchg
mov
addr16
jge
cli
out
adc
sub
jae
push
mov
dec
jle
xchg
test
mov
rorb
imul
push
cmp
jecxz
inc
pop
cld
loope
out
mov
or
sbb
fisttps
adc
add
loope
mov
aaa
insb
inc
ret
or
lret
ja
adc
or
lret
inc
ja
mov
sub
sbb
mov
cld
mov
out
xchg
push
cmc
push
arpl
push
and
lret
std
jp
sbb
adc
pop
into
mov
pop
mov
lcall
out
incl
icebp
fs
adc
jp
test
sbb
mov
rclb
out
dec
mov
test
bound
jne
cmp
mov
aam
les
or
call
out
dec
and
mov
aam
imul
aaa
xor
pop
cwtl
enter
loopne
dec
imul
mov
push
pop
lock
xor
or
dec
les
cmc
add
sbb
xchg
cwtl
sarl
cmp
iret
hlt
scas
clc
mov
xorl
arpl
push
or
lret
pusha
addb
shlb
or
lret
fs
enter
aas
xlat
movsb
mov
push
je
jp
mov
mov
inc
jo
ja
int3
and
sti
jne
pushf
pusha
adc
sbb
cmp
out
hlt
stc
sub
ja
loopne
shll
int
outsb
sbb
hlt
dec
lahf
xor
mov
imul
cmp
sub
mov
and
push
adc
scas
jecxz
out
icebp
sbb
or
sbb
mov
adc
lahf
jbe
mov
push
cmpb
or
mov
nop
jae
js
push
loope
and
shlb
or
pop
jno
xchg
pop
in
sti
loop
pop
lods
stos
mov
mov
push
fcmovbe
fcoml
dec
movsb
xor
mov
std
mov
mov
dec
addr16
lock
jae
bound
jo
jae
cmp
bswap
clc
cmp
pop
pop
mov
pop
adc
sub
insb
xchg
mov
ret
xor
aam
sub
add
and
inc
imul
pop
bound
xor
mov
lock
cmp
out
sub
pop
mov
out
fcmove
sbb
lods
add
and
dec
fld1
mov
loop
add
lds
dec
cli
push
pop
enter
neg
lock
push
shll
push
insb
jl
cmpsl
cmp
cmp
sbb
roll
arpl
in
push
or
ror
mov
movsl
clc
aas
add
jbe
jmp
jge
pop
sub
int
in
and
pop
sbb
outsl
cmc
shrl
cmc
add
or
lods
hlt
xchg
mov
push
shrb
sbb
or
jo
lcall
hlt
fmul
push
dec
out
pop
je
mov
cwtl
int3
push
mov
mov
push
repnz
xor
pop
inc
push
adc
sub
pop
push
ja
outsb
sbb
repnz
and
stc
repz
xchg
jne
int3
sti
addb
mov
push
mov
mov
dec
outsb
sbb
mov
adc
cmp
xor
push
sbb
in
pop
cmp
cmp
xchg
shrb
pop
repnz
shlb
test
mov
adcl
xchg
es
jg
iret
or
stc
stos
mov
mov
jae
cld
add
jle
jb
xchg
mov
test
jge
mov
cmc
inc
cmp
xchg
test
dec
mov
mov
insb
mov
cmpb
add
ret
jno
lods
lahf
loop
ret
jmp
rcl
or
cli
pop
or
cmp
jae
int3
fldcw
lods
add
gs
test
leave
jecxz
js
lahf
push
adc
push
xor
adc
in
push
add
inc
push
das
sbb
rcrb
ficomps
dec
mov
ja
pop
cltd
adcl
xchg
jl
into
push
pushf
or
add
push
sub
sti
dec
lods
repnz
dec
add
in
fnstenv
lret
jns
xor
xchg
cmp
lock
outsl
out
adc
aas
ret
push
cmpb
mov
dec
subl
xchg
adc
sbbl
sbb
jp
imul
cmp
stos
inc
mov
arpl
lods
jno
mulb
popf
aas
dec
or
aaa
sbb
into
push
lock
cmp
out
imul
and
push
add
lmsw
or
xorb
shll
aaa
inc
cld
clc
dec
stos
push
pop
das
xlat
lods
lahf
nop
mov
xor
scas
dec
lds
cmp
je
pop
or
shlb
inc
adc
decl
xor
push
outsl
imul
jnp
sti
dec
xchg
inc
in
sub
push
mov
mov
fidivl
xor
fcomp
insl
rcrb
pop
cld
test
push
cmp
adc
inc
xlat
in
pop
or
push
jl
jns
push
xlat
adc
or
and
push
ss
inc
mov
insl
hlt
insb
aaa
out
jl
xchg
or
and
dec
sub
fmull
ja
aam
mov
mov
and
xor
xor
rcll
idiv
sarb
adc
xor
stc
movsl
xchg
mov
add
cmp
jae
inc
mov
dec
int3
cmp
popf
mov
sahf
push
jnp
inc
sub
inc
sub
jecxz
jecxz
pop
loop
mov
push
rcl
cltd
jo
adc
cmpsb
adc
pop
cmp
xor
int
sbb
pop
xlat
pop
out
mov
xchg
jo
sbb
test
jp
int3
xchg
add
icebp
shr
lods
jb
loopne
nop
cmc
mov
pusha
inc
testb
cwtl
das
test
out
lahf
cmp
sahf
je
xchg
push
push
sahf
cmpsb
loop
xchg
jns
sahf
cmp
adc
or
mov
dec
cmp
test
jae
xchg
xor
push
test
inc
notl
pop
xchg
es
and
sub
xor
mov
cmpsb
aas
jle
dec
pushf
pushf
paddw
fcomps
scas
jg
cli
loope
loop
jg
test
xlat
js
cwtl
and
dec
fnstcw
loopne
mov
and
pushf
xchg
mov
sub
push
outsb
fsubs
push
cs
adc
xchg
and
push
mov
stos
clc
cmpl
stc
ret
loope
call
cmp
sar
cltd
inc
xchg
push
mov
loope
pop
fiaddl
cmc
xor
fcmove
inc
js
mov
js
scas
and
push
loopne
shlb
into
bound
addr16
cmp
push
push
in
out
add
fwait
xchg
in
adc
inc
lret
xchg
pop
movsl
push
fsubl
repz
enter
mov
push
jns
or
imul
lahf
jo
dec
pushf
xchg
stos
aad
mov
mov
adc
jp
subb
or
insb
pop
gs
dec
and
jo
outsb
das
jo
sbb
jecxz
dec
lcall
xor
xchg
pop
cltd
ret
lock
dec
mov
nop
mov
ds
dec
jp
stos
les
call
xor
out
xchg
bound
or
add
inc
and
mov
loopne
xchg
cmpsl
cmp
aam
xchg
outsb
mov
leave
insl
dec
cmp
cmp
gs
xchg
movsl
in
xor
test
sub
jecxz
mov
adc
or
pop
repz
test
popa
jmp
stc
xlat
xchg
fisubs
int3
mov
jbe
shlb
test
test
cld
inc
sub
lahf
hlt
lods
ljmp
mov
loope
or
jne
es
jge
jp
jbe
inc
aas
stos
cli
cmp
fnstcw
mov
and
rol
and
pop
mov
mov
rorb
insw
lds
std
jnp
dec
push
push
out
sahf
test
js
jns
adc
fistl
fidivrl
inc
loopne
adc
insl
sbb
push
jp
fcoml
push
popf
adc
and
cmpsb
jb
mov
inc
ljmp
pop
adc
sbb
sub
ss
sbb
pop
mov
ret
mov
lds
sahf
fcoms
icebp
stc
in
push
jnp
es
imul
aam
push
cmp
sahf
mov
lods
push
sbb
jb
jbe
add
push
cmp
or
jne
sarb
fmull
xchg
mov
dec
or
inc
shll
and
sti
mov
push
dec
jae
adc
pop
or
push
or
mov
adc
je
cld
mov
sub
pop
jne
mov
xchg
xor
inc
subl
mov
dec
scas
mov
pop
cmp
add
xchg
mov
mov
mov
mov
inc
push
jb
xor
int
mov
in
adc
ljmp
jo
fistl
clc
movsb
mov
lea
movsl
cmp
int3
xchg
popa
mov
repz
test
daa
cmp
or
stos
pop
insl
test
sbb
rcl
fisubl
fucomip
pop
jnp
stos
jo
outsl
jp
ja
gs
push
in
ret
ffree
ret
mov
dec
xchg
and
andl
cmp
sub
dec
xchg
iret
dec
inc
sub
pop
pop
and
orb
cmp
lods
dec
and
in
sahf
inc
add
cmpl
dec
call
xor
in
pop
imul
popa
adc
cltd
outsl
in
dec
push
mov
adc
fwait
popa
stos
popa
dec
cmp
test
push
cmp
adc
in
cmpb
mov
add
dec
sbb
test
in
cmp
xor
xchg
or
pop
cs
ds
push
nop
sub
sub
xchg
aad
out
loop
push
inc
or
outsl
insb
fldpi
push
push
jbe
sub
roll
bound
push
shrb
mov
es
fs
stos
lods
adc
and
push
data16
dec
mov
jmp
ret
mov
push
xorl
sub
or
insb
adc
das
and
jno
push
or
inc
dec
or
jae
adc
pop
and
or
adc
cmp
repnz
add
adc
jns
lret
xor
notl
jecxz
scas
lds
dec
addl
xlat
xlat
stos
popa
and
into
mov
std
in
stc
loop
imul
sub
push
mov
jmp
dec
movsl
mov
sub
mov
stos
std
scas
ds
lods
call
xchg
mov
ss
movq
inc
das
das
xchg
test
cmp
lods
in
call
xlat
jmp
js
es
cmp
in
insb
or
mov
mov
outsl
mov
pop
dec
xchg
xor
push
lret
and
xchg
jecxz
les
fstpl
ja
and
outsl
int3
stos
addb
mov
repnz
adc
push
jb
daa
ja
or
int3
mov
xchg
xchg
mov
idivl
push
adc
aas
inc
stc
jne
sub
sbb
jl
je
cmp
insl
and
sbb
std
and
or
fmull
outsl
jnp
sbb
loop
or
inc
add
je
add
stos
jle
mov
ficoml
or
int3
mov
mov
in
inc
pop
or
inc
xor
jae
int
jo
or
or
and
mov
jge
mov
dec
inc
sbb
jle
call
addl
and
or
push
mov
movl
test
push
repnz
sub
repnz
and
add
dec
out
pop
sbb
cld
mov
pop
fnstsw
xor
cmc
push
or
mov
add
in
mov
cltd
imulb
bound
rclb
xchg
stos
pusha
push
aas
iret
xor
jg
jmp
mov
sbb
fs
and
sbb
out
xchg
hlt
jmp
jp
push
out
repnz
xor
out
pop
mov
arpl
sahf
scas
mov
jno
test
mov
mov
insb
jmp
jp
rcl
fildll
mov
or
jmp
icebp
sbb
and
in
pusha
inc
sub
loopne
mov
repz
push
jg
xor
xchg
fcompl
sarl
push
lds
pop
xlat
and
es
repnz
out
data16
es
lcall
stos
add
xchg
jbe
ss
loope
idivb
into
xchg
fstps
sub
sbb
add
adc
das
mov
mov
sub
fmull
test
inc
shr
je
mov
ja
pop
push
push
cmpl
mov
pop
fstps
ja
notb
sbb
je
mov
xchg
push
rcll
mov
mov
mov
mov
jle
ss
and
and
sti
iret
jle
mov
daa
xchg
lret
fdivl
dec
sub
push
xor
and
xor
ror
mov
cmp
cmp
stos
jle
cmp
call
repnz
cwtl
ret
mov
sahf
in
cmp
daa
sub
sti
jae
push
pop
nop
mov
sub
dec
rcrl
pop
cwtl
insb
jnp
jb
ja
bound
mov
xchg
iret
dec
add
cmp
xor
xor
fiadds
fidivrl
mov
aam
adc
hlt
push
stos
clc
pop
mov
inc
or
pop
mov
jecxz
xchg
push
leave
adc
inc
int3
xchg
mov
push
and
cmp
sahf
cltd
sbb
add
fbld
shlb
jge
fsubl
push
sbb
jmp
push
or
arpl
divb
or
fdivrs
lret
cli
adc
cmp
dec
les
jae
cmp
or
ljmp
push
pop
out
shrb
test
addr16
clc
shrb
pop
imul
rcrb
mov
jno
sbb
mov
push
or
mov
xchg
cli
dec
popa
adc
test
lcall
stos
fidivrl
mov
add
push
movsl
stos
mov
push
inc
xor
sub
pop
mov
mov
in
shrl
movsb
das
das
test
push
xor
xor
xchg
jp
insl
dec
mov
dec
add
mov
stos
sub
mov
push
imulb
lea
pop
cmpsl
das
je
adc
and
jb
add
popf
popa
daa
int
push
jecxz
inc
inc
dec
je
push
add
jb
into
and
nop/reserved
push
push
xlat
loope
mov
jo
popa
in
mov
mov
pop
repnz
aad
sub
out
inc
inc
call
je
imul
jo
addr16
movsb
xchg
mov
call
adc
adc
lret
mov
call
jl
push
mov
push
mov
je
sbb
sbb
loope
inc
xchg
jp
xor
rolb
popf
ja
cmc
sub
sub
sub
pushl
loope
mov
jge
cmp
push
lods
cmp
push
sbb
int
mov
pop
xchg
adc
andl
push
push
cli
or
mov
mov
cmp
xor
test
xor
movsb
hlt
mov
pop
push
mov
and
je
stos
mov
mov
cld
push
ret
movsl
scas
dec
inc
out
notl
jno
pop
cmp
xchg
or
mov
imul
and
push
pop
jbe
sbb
mov
jo
mov
push
mov
jae
mov
mov
push
stos
pusha
scas
mov
mov
sbb
lods
jle
out
jo
sub
push
jae
mov
and
popf
das
jae
and
movsb
add
ret
shrb
pop
jp
cld
cmp
cwtl
or
fwait
lret
pop
mov
shrl
xor
xchg
sub
outsb
xor
div
mov
out
mov
dec
cld
arpl
stos
mov
push
leave
lods
sti
scas
jb
push
dec
and
pusha
mov
sbbl
xchg
or
dec
outsl
xchg
stc
or
mov
dec
std
sbb
aaa
and
sub
inc
pop
scas
xchg
pop
mov
int3
aas
mov
cli
das
cs
ds
ret
lahf
pop
gs
mov
lcall
xchg
mov
cmp
in
call
insl
mul
inc
movsl
add
lods
push
dec
cli
rclb
and
rolb
insl
cmp
les
rcrb
cmpsb
jmp
es
add
mov
test
sbb
cltd
lret
cmp
inc
xchg
or
mov
pop
rcll
sahf
mov
lds
mov
das
pop
addl
adc
mov
repnz
push
add
popa
enter
test
cmpsl
jmp
or
cmp
xchg
into
dec
jo
das
repz
fadds
leave
cmp
xchg
mov
jae
push
adc
adc
clc
push
into
cli
adc
sbb
jae
cli
xor
leave
movsl
cli
push
cmp
inc
ret
mov
fsts
pop
incb
enter
mov
jo
lods
into
add
imul
jge
lahf
push
mov
insl
cmp
cs
ds
repz
adc
inc
dec
movsb
cmp
stos
jle
iret
xchg
inc
data16
popf
add
data16
sbb
outsl
sub
add
add
aas
aad
out
stos
or
imul
push
mov
mov
cs
insb
sub
pop
stc
ds
hlt
jne
js
adc
dec
mov
rolb
xor
mov
insb
mov
mov
inc
bound
and
imul
arpl
lds
daa
dec
mov
js
jl
push
stc
xor
cmpsl
jno
mov
inc
cltd
scas
lods
fsts
pushf
repnz
test
and
jecxz
push
js
push
dec
inc
inc
pushl
scas
add
hlt
xchg
cltd
pop
int
rorl
lds
pop
or
fs
jbe
addr16
ljmp
fdivr
xor
inc
scas
jns
fidivl
jecxz
adc
jecxz
imul
pop
mov
ror
mov
dec
jns
dec
adc
stc
rcrb
insl
out
lcall
fcompl
xchg
add
inc
push
xor
sbb
push
mov
icebp
inc
inc
mov
mov
mov
cmc
dec
push
sbb
and
lds
mov
sub
mov
mov
xor
lea
fsubl
fstps
faddl
ja
leave
xchg
lods
and
std
loopne
std
sub
inc
out
dec
leave
sbb
cmp
cmp
mov
lret
push
jae
push
loopne
pop
nop
lds
cmp
push
rolb
adc
jmp
sub
xor
ret
mov
mov
lret
push
sbb
fisttpl
nop
sbb
movsb
lock
xor
fwait
xor
dec
test
int3
dec
lahf
std
cmp
loopne
xchg
inc
sbb
rol
inc
test
fstps
mov
cmp
es
addr16
popf
stc
notb
add
je
cmp
jl
into
dec
cmpsb
cli
ja
lahf
popa
pop
sbb
test
push
testl
cmc
fs
mov
imul
cli
inc
xchg
mov
mov
call
std
cmp
mov
orl
or
push
sbb
cli
pop
int3
xchg
xor
inc
jmp
jbe
lock
mov
mov
out
push
in
jae
dec
jmp
sbb
adc
sub
jae
movsl
mov
inc
sti
in
dec
mov
jns
pop
mov
jle
push
pushf
sti
cli
loopne
insl
das
in
push
bound
dec
pop
movsb
lods
pop
and
sub
mov
or
sar
mov
jb
adc
aas
ja
xchg
ds
testl
cmp
les
cs
mov
popa
call
sub
sbb
jmp
mov
sub
xor
push
jnp
les
sti
jg
fs
pop
enter
add
push
cmp
mov
cli
popa
addr16
aas
scas
pop
cmpl
push
mov
sbb
jle
mov
mull
mov
fisubrs
dec
test
mov
mov
and
sti
sub
pop
out
dec
inc
std
pop
mov
inc
ja
shr
mov
jl
bound
mov
call
imull
shlb
mov
cli
scas
jle
push
sub
push
dec
pop
xor
mov
and
add
xchg
sbb
adc
xlat
mov
repz
jb
rcr
pop
pushf
lods
mov
push
and
cmp
inc
cmp
fcmovb
xlat
xor
push
jb
loop
shll
adc
add
mov
dec
xor
pop
pusha
inc
jns
aam
pushf
adc
lret
add
cltd
pop
jle
insb
mov
pop
mov
and
inc
mov
jae,pt
push
sahf
ljmp
aad
inc
mov
sar
or
cli
sub
mov
pop
fldl
pop
out
adc
pop
in
fisubrl
sub
xchg
stc
dec
mov
out
push
cmpsl
mov
add
test
nop
cmp
and
mov
cltd
jl
jmp
shl
inc
and
imul
adcb
or
lahf
cwtl
mov
sub
lret
clc
icebp
xor
push
or
dec
dec
mov
sub
or
sub
dec
sub
jge
and
dec
sbb
inc
sbb
cld
pop
and
insb
jno
fbstp
dec
into
dec
sbb
xor
test
fldenv
roll
cmp
gs
xor
pop
pop
pushf
inc
pusha
mov
outsl
push
aaa
je
nop
lds
and
inc
push
jge
and
inc
pop
push
jl
aaa
mulb
js
mov
add
inc
mov
dec
and
lea
adc
mov
mov
das
adc
xor
dec
inc
mov
imul
adc
pop
lods
mov
push
or
cmc
out
jl
jl
add
jle
push
sub
addr16
mov
dec
pushf
out
clc
sbb
dec
aad
xchg
into
adc
inc
out
imul
mov
pop
orl
insb
push
ss
mov
out
movsl
jne
dec
sbb
sbb
sbb
push
dec
ret
fisubs
adc
xorl
sarb
xor
fcomp
aad
mov
mov
jg
sbb
push
lahf
jmp
add
mov
movsb
lahf
mov
adc
lods
fcoms
lods
data16
idivl
cmp
mov
sub
out
lcall
adc
mov
cltd
dec
test
in
test
test
inc
dec
dec
xor
fmulp
xor
out
out
out
dec
orl
nop
addl
imul
add
loope
test
jl
jg
and
loop
jmp
shll
imul
xor
inc
sti
bound
les
cmpl
mulb
cld
pop
dec
cmc
orb
pusha
sub
jmp
ljmp
imul
jo
xor
or
jne
in
mov
jle
js
push
adc
sarb
lahf
leave
sub
stc
or
enter
sub
pop
push
mov
pop
jae
sarb
dec
in
out
lea
sbb
or
int3
cmp
push
addr16
fmull
cmp
mov
dec
lret
cs
scas
ja
pop
dec
out
jp
jb
sub
fdivl
int3
mov
lcall
push
push
xchg
jne
jmp
pop
inc
or
xchg
cmp
mov
cmpsb
clc
rcll
movsl
repnz
inc
fs
stos
repz
and
xor
mov
imul
jle
arpl
stos
in
lret
adc
adc
pop
inc
std
loopne
ljmp
sbb
js
in
add
dec
je
mov
rcrb
leave
jbe
rclb
mov
into
lea
pop
pop
lods
add
shll
pop
lea
movsb
mov
push
dec
xchg
cmpsl
ror
jno
jmp
mov
cli
sbb
ror
mov
aam
insb
jg
pop
mov
xor
movsb
inc
xchg
push
leave
ljmp
mov
hlt
shll
mov
sub
in
fwait
pop
mov
ljmp
sub
dec
ret
pop
pop
pop
testl
call
add
push
sub
sbb
test
dec
pop
repz
andb
or
mov
outsl
inc
add
dec
dec
rcl
xchg
cmp
push
mov
lahf
sub
mov
adc
inc
and
ds
xchg
jo
dec
xor
in
mov
in
xor
pop
mov
xchg
das
pusha
push
or
call
and
inc
nop
xchg
xchg
aaa
inc
ret
lea
imul
add
cmpsl
xchg
test
out
jmp
loopne
push
inc
inc
mov
in
mov
cmp
into
imul
jno
dec
sub
test
iret
sub
fucom
shr
mov
inc
inc
test
sbb
sbb
int
pop
jne
mov
or
sbb
repnz
dec
jno
in
inc
mov
insl
xchg
pop
outsb
sti
cmpsl
sbb
mov
or
lret
fnsave
xor
mov
loop
cld
mov
sarl
aam
and
cmp
es
mov
push
add
add
dec
movsl
pop
iret
xor
into
lock
and
sbb
xor
in
std
xchg
or
mov
aad
iret
shrl
loope
movsl
cmp
or
lahf
ffree
mov
sbb
lret
dec
test
out
mov
xor
aas
jmp
test
pop
cmp
lret
aas
dec
jbe
imul
les
arpl
push
mov
xchg
and
push
or
cld
in
mov
imul
out
sbbl
sub
nop
cmp
ret
and
mov
sub
popf
lock
cmp
jg
movsb
cli
jecxz
adc
mov
xchg
jbe
push
fadd
push
xchg
sub
pop
lods
ficomps
out
and
adc
lock
shl
aam
cs
sub
cmc
pop
mov
mov
hlt
dec
adc
dec
ljmp
pop
jmp
xor
mov
pop
mov
test
sub
jge
stos
notl
sbb
cmpsb
cwtl
xor
push
icebp
mov
sub
jb
push
lods
neg
push
xchg
pop
lret
pop
out
xchg
jl
sbb
push
jg
fistpll
pop
mov
inc
cltd
int
or
xor
mov
xchg
in
les
sub
in
mov
and
loop
imul
nop
cmp
ljmp
repnz
mov
jno
lret
ljmp
inc
leave
mov
cli
sub
stos
and
lahf
pop
push
rcrl
repz
fsubrl
int
outsb
mov
or
pop
arpl
insl
fidivrs
int3
push
ds
pop
or
notl
cmp
add
xor
inc
xchg
in
es
lcall
dec
mov
push
out
mov
push
mov
cltd
and
mov
cwtl
jnp
inc
xor
shrb
stos
pop
imul
and
jne
and
cmp
jnp
addl
lcall
pop
push
inc
test
jmp
leave
ret
addr16
xchg
jmp
aad
ret
ret
xor
add
std
cld
negl
lods
inc
enter
stc
add
mov
xor
and
jge
push
shlb
jo
out
jnp
cld
mov
fbstp
sub
out
jle
dec
pop
xchg
and
push
xor
mov
ret
pop
int
test
fwait
nop
lcall
mov
jl
sbb
adc
jne
negb
ret
dec
movsb
loopne
sti
push
shl
or
mov
jmp
pushf
jb
pop
cltd
sbb
out
push
lret
lcall
adc
popa
out
jl
jecxz
and
sbb
fs
pop
scas
mov
sbb
popf
inc
push
nop
dec
negl
leave
leave
lds
jmp
xchg
ret
sbb
add
and
imul
ja
movsl
push
int
jmp
mov
pop
iret
xor
adcb
cli
inc
pop
pop
shl
movsl
sarb
add
xor
sahf
adc
aaa
or
jno
dec
andl
inc
sub
mov
fcomp
jb
mov
inc
jmp
loope
mov
mov
arpl
in
dec
adc
scas
popl
repnz
lds
pop
stos
adc
xchg
lcall
sub
jmp
push
psraw
or
int
xchg
jg
push
mov
movsl
jge
cwtl
add
mov
rorb
mov
loopne
pushf
sbb
loop
push
hlt
sti
inc
lods
lods
add
and
jno
loopne
out
sti
stc
scas
push
and
aam
xchg
mov
out
dec
das
or
inc
movsb
xchg
push
adc
outsl
cmpsb
sbb
out
scas
in
xchg
jle
and
sub
cmpsb
popa
bound
lcall
in
pop
add
mov
in
pop
adc
ret
ret
jmp
cmpsb
fistpll
hlt
xchg
cmp
xor
lock
mov
add
mov
sbb
movsl
adc
cld
xchg
loop
jb
mov
ja
lods
sarl
daa
inc
out
mov
arpl
push
aas
mov
inc
lods
push
sahf
jl
inc
mov
icebp
mov
cli
dec
in
sbb
xor
andb
and
rorl
arpl
inc
outsb
push
xchg
repnz
adc
mov
sti
xor
sbb
pop
loope
hlt
pop
imulb
out
cmpsb
icebp
push
cmc
pop
push
dec
aam
adc
in
fsub
cmpsb
mov
mov
xor
mov
ret
loopne
pop
mov
into
jnp
xchg
js
ljmp
inc
jg
or
adc
push
push
outsb
leave
out
ja
mov
je
lock
addr16
fisubrl
movsl
mov
daa
ljmp
dec
into
pop
xchg
jns
fstpt
or
xor
mov
cmp
mov
out
aas
and
insl
lea
in
js
inc
jno
xchg
loop
push
cmpsb
ljmp
sarl
pop
push
xor
pop
sub
jns
add
xchg
pusha
lock
imul
outsl
mov
fdivrs
and
cmp
and
icebp
mov
fcom
ja
sbb
push
sti
xlat
push
popa
push
jle
shl
loop
mov
push
das
sbb
mov
ret
cmp
dec
mov
mov
movsb
xlat
xor
jne
bound
mov
and
orl
xor
push
arpl
mov
movsb
push
stc
and
mov
push
je
xchg
cmp
sarl
in
fs
clc
inc
lea
stc
imul
adcb
pop
push
xchg
mov
inc
push
sub
test
loope
inc
and
push
fld
fisubl
lods
outsl
dec
test
push
sti
sarl
cmp
adc
ja
xor
jno
push
les
les
mov
push
cmc
or
popf
inc
js
popf
loop
test
mov
sub
movsl
mov
cmpb
add
mov
xor
in
stos
pop
pop
scas
cs
mov
sbb
xor
jae
cmp
xchg
pop
push
add
aas
pop
add
push
scas
aam
mov
call
mov
jp
cld
fs
xchg
lret
icebp
cli
ja
imul
rol
mov
jmp
push
jnp
ljmp
and
dec
and
xchg
stc
lods
aam
std
xlat
xchg
movsl
mov
repnz
mov
mov
aam
inc
adc
cs
mov
fld
ret
xchg
and
cwtl
sti
sbb
fldl
mov
sbb
mov
int3
pop
addr16
or
outsb
add
xchg
cli
mov
insb
push
lods
stos
xchg
into
cwtl
cmp
push
pop
inc
xor
mov
mov
add
cmp
sahf
sarb
incl
mov
mov
movsb
mov
out
and
mov
mov
jl
mov
in
je
imul
loop
gs
add
into
enter
inc
sub
pop
push
rclb
roll
sbb
jge
jbe
shll
xlat
lods
ds
idiv
jnp
hlt
ret
and
call
inc
je
pop
sub
decb
jmp
add
cmpsb
sbb
ljmp
mov
outsb
mov
ror
imul
mov
mov
movsl
cltd
cltd
sti
or
sub
add
xor
mov
sub
rorl
xchg
xchg
cld
sti
mov
rclb
sahf
mov
pusha
xlat
xor
in
stos
js
xor
std
cmp
add
sahf
inc
sti
mov
repz
int3
mov
loope
les
sbb
adc
outsl
push
lcall
aad
fsts
push
ds
outsb
loop
xchg
inc
jg
movsl
cmp
mov
mov
pop
or
pushf
cmp
jno
or
clc
inc
push
cmp
cmp
adc
or
mov
dec
lods
pop
ljmp
push
push
das
test
inc
std
mov
jmp
mov
sbb
jns
xor
insl
adc
cwtl
mov
sbb
push
mov
je
push
fchs
je
rcrl
inc
push
inc
in
add
repnz
cltd
inc
inc
les
out
data16
call
js
mov
fisttps
aaa
ja
fxch
int3
pop
test
hlt
cli
out
lahf
call
jo
or
or
loop
hlt
dec
xor
xchg
in
insb
stc
sub
pop
inc
repnz
pop
add
ja
daa
pop
mov
mov
fists
sub
imul
movsl
push
inc
ret
cmp
out
push
leave
mov
xchg
jns
mov
pop
fldl
ljmp
inc
dec
orb
jecxz
cmp
and
sub
mov
stos
mov
xor
in
and
test
sub
xlat
rorl
fwait
push
out
testl
dec
lcall
fistps
lahf
xchg
cmc
ljmp
jbe
aam
dec
loopne
sbb
shlb
dec
enter
add
mov
repz
fnstenv
divb
and
imul
cwtl
pop
loop
enter
jl
jmp
fimull
mov
mov
ds
sub
cmpl
cmp
and
jle
leave
insb
fisttpll
xchg
jge
pop
sahf
mov
mov
in
arpl
call
cwtl
mov
loope
rcrl
je
mov
iret
mov
adc
mov
ds
out
addr16
mov
mov
sarl
pop
testl
dec
xlat
andl
fwait
cmp
jmp
out
inc
pop
lea
repnz
cs
leave
aas
add
dec
mov
add
jg
les
sub
dec
mov
jnp
add
xchg
sub
leave
cmp
pusha
jmp
testl
xchg
outsb
out
add
xchg
not
fst
adc
mov
xchg
dec
fisubl
jge
sahf
fisubs
sbb
xor
jne
test
fnstenv
mov
fcomip
jmp
sub
fdivrs
mov
push
dec
push
sub
fmuls
test
repz
add
ss
add
insb
pop
dec
ds
pop
negl
lods
and
fneni(8087
inc
lret
or
rcll
mov
jne
aas
mov
pop
add
dec
push
test
or
inc
shll
pop
sar
mov
out
bound
jle
push
testb
jp
sbb
push
int3
hlt
pop
cmc
cmpsb
stos
push
mov
scas
inc
xlat
imul
int3
in
test
xor
lcall
sbb
add
outsl
test
out
xor
mov
cltd
iret
pop
ficoml
xor
cltd
push
pop
inc
push
aad
sti
and
pop
addr16
out
lock
adc
sub
lahf
jb
jnp
and
cwtl
stos
sarb
inc
mov
sub
fisubs
nop
bound
rorl
mov
sbb
cmpsl
and
sbb
cmp
lret
cmp
pop
inc
and
jb
psubusw
pushf
jge
xlat
fsub
pop
fldt
jne
or
mov
jns
mov
dec
jnp
xchg
jae
fldt
lds
loop
xor
aas
add
mov
cli
and
arpl
pop
cmp
and
sti
push
and
inc
rcrl
or
jno
inc
mov
adc
or
fwait
dec
out
push
or
and
mov
dec
and
pushw
fadd
sbb
push
rcrb
mov
lcall
insb
mov
dec
jne
outsb
cmp
std
xchg
movsb
rcr
inc
mov
pop
aad
mov
pusha
pop
out
sbb
popa
rcrl
jno
sub
cmp
aaa
mov
stos
call
das
lret
sub
jns
mov
inc
cs
jge
or
ja
popa
adc
cmp
adc
xor
sbb
jb
insl
test
stos
insl
push
xor
cmp
fs
nop
out
sub
gs
or
pop
out
mov
mov
test
popf
adc
pop
mov
mov
xlat
dec
out
popf
mov
xchg
sbb
psllq
pushf
jg
aad
push
iret
sbb
aad
lods
mov
lds
sbb
sahf
stc
js
repnz
jns
stos
stos
xor
out
adc
dec
rcrb
or
and
sub
mov
sbb
xchg
pop
and
mov
insl
ljmp
repz
adc
push
pop
sbb
cltd
mov
adc
test
mov
pushf
divps
stos
xor
adc
jb
ja
ss
dec
sbb
mov
or
lret
push
push
data16
rclb
call
pop
scas
xor
mov
or
xor
push
out
out
push
xor
insl
jmp
push
fistpll
cmp
les
aad
dec
out
xor
pusha
push
mov
stos
iret
shrl
aad
test
fs
and
push
out
stos
xor
int3
cltd
in
inc
and
daa
clc
pop
xor
inc
fcomp
repz
iret
hlt
shl
mov
bound
rclb
mov
movsb
mov
mov
out
popa
add
pop
lock
fisttpll
sbb
and
popf
rcrl
mov
hlt
mov
lret
mov
push
test
push
mov
pop
notb
fnstsw
xchg
mov
rcrl
sbb
sub
mov
cmpsl
dec
jg
lea
cmp
jp
pop
clc
fstps
mov
fidivrs
inc
pop
push
iret
mov
sub
sub
popl
test
xchg
mov
js
jl
dec
jo
loopne
push
daa
stc
sub
mov
sub
sbb
inc
dec
rclb
cmpsl
ficomps
int
push
insl
xchg
jge
jmp
mov
adc
andb
inc
mov
scas
push
les
pop
mov
xchg
std
cmp
into
jno
push
je
push
mov
fisttpl
dec
push
or
xlat
call
dec
loope
pop
lahf
call
inc
or
outsb
add
incl
xchg
mov
add
or
xchg
dec
out
xor
lret
sub
adc
mov
mulb
cld
ds
cmp
bound
or
xlat
enter
push
in
int
push
test
mov
in
loop
mov
adcl
mov
shrl
jmp
and
pop
test
out
mov
xchg
std
pop
push
cmc
push
jb
xadd
pop
imul
xchg
jl
clc
fiadds
inc
xorl
sbb
cmpb
cmp
and
ss
fildll
xor
sub
jp
adc
sbb
inc
out
xchg
lcall
call
jns
push
sbb
fldl
aas
sti
leave
adc
pop
js
add
icebp
test
dec
dec
mov
in
mov
dec
stos
sub
cwtl
dec
jae
push
in
sahf
repnz
jno
and
jl
add
lds
and
stos
ss
lods
lahf
adc
push
add
loopne
sahf
enter
insl
mov
nop
fcoms
adc
cmp
lock
sbb
push
mov
ficomps
icebp
mov
pop
test
ret
nop
sub
adc
xor
lea
push
mov
dec
lret
cmp
cld
jmp
leave
dec
fwait
adc
inc
xor
add
rol
and
cmp
mov
rorl
lds
dec
push
pop
int
cmp
inc
into
pop
pop
push
lock
jle
shl
int3
shrb
xchg
in
inc
xor
cmpsb
pop
add
fisttps
mov
or
pop
cmpb
scas
in
mov
inc
es
mov
aam
fisubl
or
fsubrs
or
mov
fwait
inc
and
sysret
jno
loopne
popf
and
sub
push
sub
in
or
ror
cmp
inc
std
dec
xor
pop
sub
ror
imul
sub
xchg
pop
jae
aaa
xchg
shll
pop
mov
xor
xchg
sub
ljmp
ljmp
xchg
js
aaa
scas
clc
xor
out
cmp
pop
push
stc
sub
or
add
rcll
push
mov
popa
sbbb
popa
in
mov
mov
and
data16
dec
sbb
jb
fisubrs
cwtl
lds
pushf
mov
xchg
pop
fadds
jae
outsb
loope
lds
sub
ret
popa
mov
sti
test
cmpb
xchg
push
jge
shll
mov
xor
ja
adc
push
dec
xchg
imul
push
popa
xor
in
and
fidivs
push
loopne
hlt
das
push
inc
mov
in
dec
pop
mov
and
sbb
outsl
lock
sub
iret
lock
insb
push
cli
aas
xor
mov
shlb
push
mov
iret
pop
adc
sbb
jne
add
cli
out
inc
imul
into
mov
xchg
addb
mov
lret
psrad
rolb
inc
aam
or
sbb
and
mov
sub
mov
jp
sbb
mov
imul
rcr
dec
adc
inc
mov
and
test
or
out
and
fisttps
test
test
cs
cld
and
inc
pop
inc
jo
inc
sbb
jbe
adcb
outsl
mov
cmp
andl
sub
mov
adc
subb
xchg
jbe
insl
rcrl
xor
jno
and
jl
cmp
and
adc
mov
mov
adc
sbb
push
xor
aad
pop
scas
std
je
and
mov
lock
aas
popa
or
fsubrs
icebp
add
leave
outsl
jp
add
xchg
subb
mov
pop
mov
jns
mov
sbb
hlt
mov
or
dec
pusha
pop
iret
mov
ss
push
mov
ds
sahf
xchg
cmp
ret
outsl
pop
dec
andb
dec
cmpsl
mov
pop
loop
jns
or
add
adc
cmp
xchg
mov
dec
push
adc
mov
mov
arpl
ljmp
lret
add
outsb
mov
test
xchg
and
mov
pop
aam
or
in
lret
push
pushf
out
and
cld
xor
xor
and
lods
add
jle
push
daa
test
rorb
int3
mov
inc
pop
add
mov
call
cli
stc
xchg
rolb
lea
or
int3
cltd
lcall
shlb
cld
xchg
and
inc
in
push
ret
sub
outsb
out
enter
xchg
mov
ds
push
cmp
xchg
loopne
cmpl
popf
ljmp
jns
sub
test
mov
fildll
popl
addr16
push
sbb
call
aam
lds
sarb
mov
jo
lea
xor
lods
mov
es
imul
pop
imul
xchg
pop
out
lds
out
outsl
cmp
mov
inc
out
repnz
mov
mov
dec
cwtl
cmpb
adc
out
outsl
sti
pop
or
push
push
hlt
pop
shll
nop
and
adc
fwait
xchg
cmp
xchg
sub
or
push
and
mov
shrb
fcom
dec
xor
out
sti
out
enter
xor
cmpsl
popa
mov
add
add
arpl
add
pop
je
call
cwtl
int
mov
pusha
test
sub
in
cwtl
mov
dec
stc
js
jge
dec
lret
or
mov
add
push
fnstsw
out
aas
sti
inc
xor
pop
adc
js
stos
rorb
xchg
or
jmp
mov
sub
cmp
jo
scas
out
mov
mov
push
xchg
xor
dec
negb
inc
xchg
dec
mov
mov
mov
rcrl
aad
outsb
sbb
enter
push
jmp
xchg
jle
gs
cmp
dec
imul
insb
mov
and
fsub
xchg
aas
shll
leave
imul
sub
cwtl
stos
cmp
sarb
enter
mov
cmpsl
xor
pop
cmp
sbb
hlt
lea
xchg
ljmp
lods
adc
cld
addl
dec
or
loope
xor
push
pusha
or
sbb
mov
cmp
daa
enter
dec
pop
int
repnz
lret
lret
cmpsl
sahf
push
pop
and
or
adc
xor
dec
ja
jge
imul
fisubrs
dec
and
and
aas
inc
dec
xlat
mov
or
cld
movsb
push
xor
add
dec
insl
mov
sbb
cmp
scas
push
mov
pop
out
cmp
pop
mov
push
mov
dec
cwtl
cmp
stc
test
imul
pop
mov
das
add
fcoms
mov
in
xor
int
cli
pextrw
cmpsl
mov
push
add
mov
xor
pop
sub
sbb
lret
mov
ljmp
fadd
cmp
loopne
push
sub
gs
push
fiaddl
nop
mov
add
jno
in
sub
ljmp
bound
pop
jge
icebp
mov
sub
and
mov
pop
fisubs
pop
pop
push
cmc
add
inc
jmp
push
mov
xor
push
fld
mov
ds
call
inc
mov
xchg
and
scas
dec
fwait
pop
lret
add
subl
mov
ja
outsl
pop
addr16
inc
xchg
mov
sub
mov
inc
ja
aaa
jb
repnz
jno
cmpsl
and
adc
fdivrs
mov
lahf
cmp
xchg
add
mov
sub
and
fdivl
or
mov
xorb
insl
cli
xchg
push
inc
sub
testl
jbe
cmpb
les
cld
mov
mov
test
xchg
data16
loope
cmpsl
and
adc
xchg
mov
pop
pusha
adc
stos
aam
aaa
jmp
in
push
pop
lock
aam
sub
and
loope
push
stos
sub
inc
lret
xor
sub
push
popf
fistps
lahf
ds
out
fst
or
mov
mov
outsl
clc
into
push
ja
leave
movsb
jl
sbb
inc
xchg
mov
cmp
mov
push
or
pop
push
jmp
pusha
rcrl
and
jne
cmp
inc
mov
cwtl
das
cmp
fdivr
imul
imul
ds
adc
pop
add
mov
mov
lea
mov
iret
mov
mov
std
and
pop
cld
sbbl
xchg
jb
shll
adc
add
mov
mov
sbb
scas
xchg
jnp
fistl
lea
ud2
movsl
aas
mov
sbb
cmp
jecxz
mov
sub
aam
mov
loopne
ret
notl
dec
jns
jae
les
mov
andb
outsl
mov
aad
testl
mov
fidivl
push
xchg
inc
call
jmp
jne
jns
xchg
sub
sbbl
aad
mov
adc
ds
lock
and
mov
adc
xor
stos
stc
jo
pop
cmpsl
mov
pop
aam
inc
imul
mov
leave
mov
cld
mov
xchg
mov
adc
mov
xor
jbe
lds
pushf
mov
mov
adc
fists
into
scas
out
push
arpl
aad
sbbb
int
stos
fisttps
jle
jb
mov
push
mov
xor
mov
xor
imul
sub
and
inc
mov
out
outsl
and
jmp
fcmovnb
int
sbb
add
jbe
pand
outsb
lods
pushf
push
decl
subb
and
rorl
test
scas
clc
adc
mov
mov
gs
dec
into
lret
repnz
mov
or
sbb
mov
push
sbb
jmp
pushf
scas
out
add
aaa
xchg
xchg
push
jno
mov
fwait
dec
loope
pop
imul
fmulp
sub
imul
adc
and
shll
mov
xor
dec
jbe
je
sub
enter
mov
mov
mov
jnp
lea
fimuls
jle
and
lock
stc
rclb
mov
and
pop
dec
jecxz
xor
mov
aad
and
adc
je
test
and
push
push
out
push
insb
sbb
int3
mov
ret
inc
mov
push
mov
mov
mov
dec
mov
jg
movsl
push
add
mov
fldl
lret
repnz
dec
and
cmp
mov
arpl
lret
or
ljmp
add
sarb
test
rcrl
and
mov
call
xchg
mov
rcrl
sarl
test
mov
shl
insb
lock
das
pop
loop
popa
out
divl
or
xor
sbb
xchg
pop
push
or
mov
pushl
mov
insb
insl
in
inc
cmp
and
arpl
jbe
or
jns
mov
loopne
leave
xchg
shll
jae
in
or
dec
sub
stos
subl
lret
stos
lds
and
or
rorl
sub
jne
xor
rcr
or
cmp
addr16
int
roll
idivb
lret
imul
xchg
gs
mov
loop
add
dec
movb
addr16
les
out
call
stc
repz
scas
push
xlat
fwait
adc
dec
test
mov
int3
mov
push
mov
sahf
add
sbb
xchg
outsb
and
mov
sbb
mov
fsts
cmc
loopne
sub
and
in
sbb
pop
fadds
dec
pop
xlat
add
mov
push
add
faddl
or
pop
inc
push
fwait
scas
pop
inc
pop
out
mov
lcall
loopne
adc
jbe
xor
fnstcw
fs
push
push
push
xchg
jns
icebp
popf
and
loop
jmp
mov
push
in
aaa
xor
popa
adc
ss
dec
sti
inc
shll
xor
jae
cmc
loopne
test
cmpb
jle
push
movsl
loope
xchg
push
out
cmp
jp
jo
icebp
xchg
xorb
stos
nop
sbb
cmp
fdivs
pop
in
dec
lds
std
sysenter
daa
aad
data16
repnz
ret
ja
or
ja
popf
jo
fsts
mov
mov
xchg
jo
stos
sbb
cmpl
scas
clc
dec
cmpsl
dec
lret
jmp
jnp
dec
push
and
decb
icebp
xchg
pop
pop
lods
push
push
insb
jmp
out
nop
in
pop
into
shl
xchg
loope
and
cmc
xchg
cltd
out
rcrl
and
xlat
adc
sahf
sti
fidivl
fdivs
and
inc
and
mov
fnstsw
pop
sbb
dec
push
xor
les
adc
push
sub
out
push
shrb
repnz
pop
mov
out
adc
inc
call
adc
push
inc
pop
jae
arpl
xchg
mov
add
xchg
insl
adc
lods
pop
jbe
hlt
push
adc
sub
xor
sbb
dec
sub
mov
inc
push
fwait
lret
into
push
jb
mov
pop
rcr
jp
cmc
je
xor
inc
add
enter
shll
mov
es
sti
sahf
xchg
mov
dec
ror
inc
repnz
pop
jle
cmp
insb
int3
xor
insb
ret
jo
cmp
xchg
ljmp
jb
jge
mov
mov
cmc
repnz
daa
in
es
ja
sbb
cmpb
inc
out
lock
and
push
imull
mov
mov
jp
insb
repz
ljmp
adc
jp
cmp
jmp
adc
sahf
sbb
jnp
rorb
xor
xor
imull
mov
push
bnd
or
test
lea
push
test
mov
jge
dec
aad
movsb
push
shrb
jp
jnp
and
or
jle
sub
in
mov
xchg
sub
lea
xabort
and
gs
push
jl
dec
mov
push
gs
jae
mov
jg
pop
fcomi
xor
lret
sahf
pop
pop
ffreep
dec
outsl
insb
enter
test
idivl
data16
cwtl
adc
sbb
mov
repz
std
out
push
pop
push
ret
cmp
out
inc
mov
jae
std
pop
in
gs
leave
mov
mov
jg
mov
rcrb
in
repnz
pop
mov
mov
ret
rclb
pop
fcompl
call
cmp
das
xchg
cmp
mov
ss
sbb
std
int3
ja
or
cmp
shll
movsb
lcall
in
popa
push
push
or
add
ret
sbb
push
call
and
cmpsl
pop
cltd
mov
xor
mov
lret
adcl
je
mov
pusha
mov
sbb
sbb
mov
xchg
nop
add
mov
or
in
rolb
das
mov
add
jo
xchg
addb
sbb
mov
jecxz
fwait
rclb
xchg
fdivl
pop
jmp
outsb
xchg
cltd
mov
jnp
jno
mov
mov
jbe
lret
repnz
loope
mov
mov
das
out
mov
pushf
movsl
call
outsl
fsubl
enter
fdivl
xor
or
popf
mov
incb
popa
insb
fwait
mov
out
js
jae
dec
aaa
dec
loopne
js
shll
dec
fbld
and
aad
fsubs
inc
stos
mov
xchg
mov
jl
ficomps
push
add
arpl
std
push
filds
clc
mov
mov
cmpsb
int
loop
and
cmpsl
ret
inc
lcall
cmp
push
pop
ljmp
mov
push
mov
dec
imul
adc
fisubs
cmpsb
mov
add
dec
imul
add
lahf
stc
pop
push
bound
sahf
or
imul
leave
inc
or
jl
fcoml
cwtl
stos
notb
xchg
mov
mov
clc
ret
xor
mulb
shl
mov
jae
rolb
popf
push
sub
jp
or
movsl
jge
lods
mov
dec
dec
jle
sub
dec
push
loope
mov
and
push
cltd
xchg
xchg
out
test
movsb
cmp
dec
or
int
cwtl
adc
inc
add
or
mov
lcall
mov
repnz
jno
add
pop
shll
and
inc
dec
loope
out
mov
dec
hlt
sub
sub
mov
push
outsl
addb
push
and
lds
mov
mov
lock
and
rolb
clc
jbe
jp
fstpl
inc
xchg
mov
adc
lods
mov
xchg
jo
mov
sti
or
je
test
outsb
xchg
xchg
ret
mov
jge
lret
pop
lahf
or
mov
subl
xchg
inc
in
cmpsl
mov
add
aam
dec
jecxz
mov
add
add
jbe
mov
movsb
aaa
imul
inc
loope
out
dec
pop
leave
jo
cmp
and
pop
xchg
sbb
sti
cmp
inc
lods
icebp
cmp
lods
cmc
dec
mov
pop
scas
stos
lea
lea
adc
jmp
fstpl
push
lods
or
ss
mov
push
jb
rcr
insb
lods
add
and
dec
pop
and
and
jns
or
pop
mov
mov
std
xchg
fisttpl
jnp
scas
jecxz
inc
lods
inc
movsl
add
mov
push
aam
mov
lds
lods
sub
mov
sub
inc
decl
and
gs
adc
movsl
xchg
gs
shll
dec
into
es
inc
cmpl
fldl
inc
nop
cmp
push
andl
jl
out
movb
fldenv
fwait
sbb
cmpsb
xor
xor
sbb
adc
or
jns
mov
loopne
xor
add
test
lcall
fimull
lahf
xlat
pop
or
pop
mov
in
adc
mov
pop
jae
js
fwait
and
decb
jge
jl
push
lret
sbb
push
lods
in
filds
pop
leave
mov
mov
int3
in
fnsave
adc
mov
aam
inc
dec
mov
push
cmp
fcomp
mov
mov
jne
jmp
ja
lods
xor
je
orb
test
dec
ds
and
repz
add
andb
add
fsubl
test
into
das
lahf
ja
push
pop
fistl
enter
inc
mov
loope
lret
xlat
cmp
sbb
adcb
push
dec
ret
fsub
jl
or
scas
testb
jge
das
pop
push
cmp
jns
push
jno
fcomi
bound
test
jne
fwait
sub
mov
xchg
aas
jbe
adc
hlt
clc
repnz
xchg
test
push
popf
ret
xor
jnp
mov
cmp
fwait
xchg
cmp
ja
and
mov
mov
push
xchg
inc
fistpll
popf
push
popa
cltd
icebp
aas
call
or
into
cmpsl
xchg
pop
xchg
cmp
fldt
mov
lods
shl
fisubrs
pop
and
hlt
shlb
std
ja
cmp
repz
cmp
adc
in
push
cs
mov
testl
ds
adc
div
push
mov
jg
mov
adcb
movsl
incl
vandps
aas
rolb
and
mov
jecxz
mov
in
and
std
aam
dec
icebp
and
rcrl
stos
cmpb
pop
cmp
ljmp
aas
lret
inc
ljmp
dec
das
jle
pop
jle
ret
rcrl
in
mov
je
pop
mov
mov
rcl
dec
leave
adcl
fidivrl
imul
xchg
xor
js
popa
sub
mov
dec
fs
push
and
mov
cmpsb
jne
jl
movsl
lea
jns
push
add
repz
cmp
mov
lock
add
outsb
fcmovnbe
pop
lods
es
lds
loope
add
lods
or
xchg
adc
push
ljmp
addr16
in
sub
roll
cli
scas
sbb
inc
pop
clc
lods
mov
fdivrl
push
jp
adc
mov
movsl
add
pushf
jmp
addl
int3
sbb
testb
loope
inc
push
cmp
inc
loope
imul
mov
scas
jae
push
mov
sub
jle
or
xor
hlt
jle
sarb
outsl
and
xor
pop
jo
push
sti
mov
rorl
and
aas
inc
rcrb
hlt
int3
xor
sub
sbb
aam
mov
sub
and
and
outsl
cltd
jo,pt
js
sahf
xor
sbb
mov
fwait
xchg
and
js
dec
fs
das
shrl
pop
mov
dec
movsw
js
gs
inc
mov
cld
cmp
aaa
dec
mov
icebp
pop
xchg
repz
pop
and
sti
jns
add
xor
jle
aas
adc
pop
fldenv
jns
adc
stos
cmp
ret
lcall
in
push
push
inc
push
stc
decb
jnp
fadds
pusha
lret
fwait
mov
loop
into
xor
or
mov
cmp
adc
pop
jno
jnp
cmp
adc
sub
stc
and
inc
push
pop
mov
sbb
loope
sub
jno
jns
inc
xchg
xor
cld
pop
ss
cmp
push
lret
mov
mov
lods
jl
fs
dec
insl
cld
imul
pop
cld
rclb
mul
cmp
out
jl
or
sub
icebp
dec
mov
lret
jae
lods
into
xchg
negb
mov
lcall
aas
push
pusha
jae
mov
mov
add
fistl
jns
adc
es
fstps
rcll
xchg
push
int
or
inc
imul
int3
and
loope
adc
rorl
fxch
lahf
push
faddl
lea
jno
repz
lea
ljmp
inc
js
loopne
jne
sub
push
cmp
jb
aam
lret
fwait
mov
sbb
push
int3
push
inc
fcmovnbe
mov
mov
je
movsl
gs
js
out
mov
inc
or
jne
es
mov
fstps
fisubrl
lcall
int3
pop
sahf
daa
sub
push
bound
sahf
push
ret
rcrl
xorb
adc
hlt
movsb
stos
mov
add
mov
sub
lock
les
jmp
sbb
stos
insl
mov
push
in
sub
enter
int3
inc
mov
lods
mov
and
rcrl
scas
pop
loop
jecxz
cwtl
out
pop
das
dec
pop
pop
adc
pop
pop
xchg
in
sbb
jns
push
stc
fs
add
xchg
pop
inc
or
arpl
jns
mov
xchg
inc
mov
lock
in
xchg
xchg
inc
mov
sub
mov
or
and
rclb
in
sarb
xor
pop
jns,pt
sbb
sbb
add
int3
sti
and
or
xorl
pop
out
mov
test
aaa
push
mov
mov
xchg
lods
in
inc
mov
cld
and
ret
mov
daa
pop
lock
iret
pop
cmp
xor
push
outsl
sub
xor
push
pusha
mov
push
test
test
dec
nop
bound
inc
test
sbb
pop
add
test
inc
rcrb
mov
psubsb
movsb
lcall
pop
mov
adc
xlat
orl
inc
nop
push
mov
lds
adc
xchg
and
push
mov
rorb
mov
leave
push
pop
mov
push
lds
adc
fnstsw
andb
pop
pop
js
fsubr
xchg
aaa
cltd
out
mov
pusha
icebp
cmp
jno
pop
out
fildll
in
dec
mov
jnp
leave
sub
sub
mov
dec
sbb
fwait
lea
mov
mov
comiss
push
scas
or
mov
or
xchg
das
cs
jno
fdivs
push
inc
mov
nop
inc
mov
out
fistpll
xor
insl
xor
sbb
xchg
lahf
and
add
jno
icebp
xor
mov
outsb
or
stc
dec
shrl
imul
inc
mov
fisttps
adc
jbe
push
fildl
sti
movsb
lcall
or
stos
cmpsl
cwtl
jbe
lahf
mov
inc
test
push
test
add
test
lret
je
or
jecxz
sbb
sbb
mov
sub
sub
lods
sbb
bound
nop
test
iret
cltd
pop
fsts
repz
in
cmp
mov
imul
jecxz
data16
int
jle
adc
and
popa
outsb
mov
cmp
sbbl
popa
jno
mov
into
mov
sub
inc
repz
pop
sti
in
shll
xchg
aaa
mov
ja
or
insl
mov
dec
ret
or
xchg
sti
lods
push
pop
stos
mov
xchg
mov
xor
cmp
jno
rorl
jge
inc
dec
jp
dec
mov
lret
ss
mov
inc
add
lea
mov
out
shlb
es
jno
idiv
adc
cmp
xchg
mov
lea
jo
mull
or
mov
push
push
outsb
mov
mov
dec
mov
sbb
test
or
loop
lcall
es
sbb
loopne
xor
nop
push
cs
mov
cs
mov
push
mov
ss
or
rcr
into
outsl
push
and
or
cmpsl
gs
xchg
xor
jl
cwtl
mov
gs
mov
adc
add
xchg
sbb
testb
jmp
jno
lds
inc
pusha
sbb
jnp
sbb
jns
shrl
test
sbb
and
mov
xchg
jg
out
adc
out
shlb
test
inc
cmp
shlb
popf
mov
mov
inc
cmp
sti
ja
push
imul
sub
les
cwtl
notb
jb
addr16
ljmp
jnp
xchg
pop
mov
lock
sbb
dec
push
inc
push
jo
aam
push
testl
mov
adc
cs
mov
cmpsl
add
loope
push
imul
mov
push
sbb
inc
ljmp
insl
mov
cwtl
movsb
lods
mov
or
pop
rcr
out
ficomps
dec
lret
or
js
and
and
lret
lret
push
dec
in
lcall
jge
nop
pop
insl
int
cld
stos
shll
add
inc
lods
movsl
dec
add
lea
outsl
inc
inc
ljmp
or
jp
je
dec
jb,pn
cmp
in
cs
jae
adc
xchg
mov
inc
cmpsb
in
fildl
cwtl
jle
pushf
inc
mov
mov
in
idivb
or
or
cs
out
lods
insb
cmp
testl
jge
mov
add
aaa
inc
pushf
pop
inc
cmp
xlat
jl
dec
push
pop
out
ss
shlb
mov
xchg
push
mov
adc
jnp
fidivrs
mov
push
ss
or
in
push
mov
jmp
rclb
mov
jg
je
pop
mov
mov
dec
xchg
hlt
lret
bound
mov
sub
add
mov
jb
scas
dec
fstpt
cmp
and
adc
jg
pop
ss
jo
dec
cmp
addr16
pop
cmp
or
ja
inc
mov
and
icebp
loope
ja
outsl
pop
shrb
ret
adc
inc
jp
sbb
lea
mov
inc
or
pop
sub
pushf
test
or
out
movsl
inc
iret
inc
arpl
cmpb
cld
movsb
xor
dec
fcom
mov
jno
movb
int
and
fwait
or
and
xor
scas
mov
sahf
pop
xchg
cmpsl
cltd
jmp
add
add
mov
or
add
mov
arpl
jns
andb
mov
inc
cmc
shll
and
lods
movsl
jmp
and
cmp
stos
popa
mov
push
outsb
xor
mov
call
das
aad
mov
mov
rorl
push
fimull
sub
sbb
cltd
push
jmp
or
inc
xchg
dec
dec
out
push
xor
test
lock
out
xchg
inc
icebp
mov
stc
inc
das
fbstp
xchg
pop
outsl
decb
mov
movl
jb
in
xor
xchg
jle
int
cmpb
cld
ds
test
push
je
insb
out
fsubl
lret
insb
jbe
out
pop
add
fwait
enter
loopne
inc
jo
xchg
pop
push
mov
cmp
or
loopne
adc
mov
cmpsb
aas
in
mov
mov
adc
insl
shll
xor
sarl
xor
push
sarb
push
or
arpl
sub
mov
movsl
in
out
aas
pop
nop
dec
hlt
or
push
lahf
pop
pop
mov
jmp
scas
or
sahf
adcb
rcrb
push
aaa
ss
aaa
rclb
sub
xchg
mov
jmp
xor
dec
mov
aaa
cmc
and
or
rcrl
and
jne
or
lods
jle
jb
inc
and
lds
sub
stos
faddl
cmp
mov
mov
and
bound
lret
vaddss
cmc
ja
movsl
andl
test
push
in
pop
aaa
sub
jge
jge
sub
fcoml
add
leave
mov
outsl
lahf
je
cmp
insb
sete
popa
mov
or
out
jbe
jge
sti
dec
iret
aaa
sahf
int
cmc
out
sti
out
mov
mov
sbbb
sbb
hlt
sbb
push
mov
mov
or
out
jb
test
pusha
jmp
mov
mov
adc
hlt
push
pop
dec
mov
push
or
cs
out
mov
mov
push
cs
fstpl
popf
addr16
xlat
call
fldenv
jle
stc
mov
mov
pop
stc
or
rcll
fisttps
lret
notb
jnp
or
adc
cmp
xor
cs
inc
aas
dec
and
xchg
fstl
into
mov
jae
je
out
stos
notl
pop
cs
divl
push
adc
mov
ret
or
and
out
push
inc
sub
mov
imul
xorb
jno
push
clc
add
mov
xorl
pusha
jbe
frstor
test
or
popf
xchg
and
cltd
rorl
xor
mov
loope
repnz
jae
push
jp
aaa
into
in
cmp
cmp
mov
jae
push
outsl
adc
and
adc
or
stc
fidivrs
push
push
xchg
stc
inc
inc
shll
add
outsb
sub
and
in
xor
call
mov
sub
xchg
add
aam
rcl
outsb
pop
sbb
jae
stos
stos
sub
push
xchg
out
sbbb
in
jge
push
mov
or
outsb
dec
lock
xchg
mov
pop
mull
sbb
into
jae
xchg
and
inc
iret
leave
negl
int
js
mov
cld
push
lods
or
icebp
xchg
inc
or
xor
mov
out
lcall
inc
mov
pop
add
sbb
mov
add
mov
into
inc
clc
in
mov
daa
and
dec
xchg
xor
cwtl
lock
std
or
das
insb
sbb
hlt
lods
ds
dec
cmp
add
cmc
inc
movsb
test
dec
mov
mov
adc
gs
shrl
and
adc
xchg
dec
stos
and
mov
jbe
pop
cmp
shl
sbb
pusha
in
loop
or
and
mov
sahf
dec
sub
movsl
and
push
or
sub
fcomi
xchg
mov
adc
mov
bound
mov
movsl
sub
fnstcw
das
mov
mov
ljmp
lods
scas
repnz
fisttps
int3
pusha
dec
lcall
lods
add
sti
lret
cmp
ds
mov
dec
inc
mov
or
sti
test
push
sbb
ret
gs
shll
and
or
loop
inc
fidivl
adcb
shlb
pop
mov
xchg
fisubl
aam
shlb
repnz
cmpsb
ret
divb
sbb
ss
loopne
in
jnp
mov
dec
pop
test
dec
dec
int
xor
xorl
sub
lahf
inc
dec
leave
sub
cwtl
xchg
mov
mov
pop
mov
fnop
cmp
aas
lcall
jno
push
aaa
and
test
pop
jne
or
rcrb
lret
xor
push
jbe
jo
add
movsb
pop
adc
lods
jb
fnstcw
sbbl
pop
pop
add
inc
xchg
repz
test
imull
in
es
adc
scas
leave
cmc
test
mov
imul
popa
jo
push
adc
mov
lret
pop
fwait
dec
cwtl
ret
push
inc
in
inc
sub
dec
scas
scas
xchg
in
flds
outsb
jp
adc
add
sub
inc
adc
movsl
in
jecxz
sti
lods
bound
push
sbb
cmp
sub
rorl
mov
incl
cmpsb
xor
pop
test
mov
mov
pop
push
mov
aad
mov
jle
loopne
stos
iret
adc
xor
cmc
sbb
xchg
rcrl
jmp
in
mov
sbb
pop
outsl
adc
add
dec
cli
jns
cmp
and
jns
arpl
cld
jbe
sub
cmp
scas
bound
xchg
jmp
scas
lds
lods
mov
arpl
in
hlt
and
sbb
ret
xor
jnp
lods
cs
in
jge
mov
pop
mov
sub
test
sti
test
mov
mov
fwait
jb
ret
jl
mov
adc
jae
mov
add
xor
pop
xor
inc
inc
outsb
xor
mov
fdivs
incb
pop
add
add
popa
xor
push
lods
sub
cmp
mov
ds
jle
stos
insl
scas
sbb
lret
sbb
orb
mov
adc
fwait
std
stc
and
adc
pop
push
imul
mov
xchg
hlt
adc
sahf
dec
mov
dec
clc
ja
or
in
bound
rorl
iret
pop
scas
xchg
lcall
je
loopne
xlat
ret
bound
pop
dec
sub
imulb
inc
jb
in
pop
lret
addr16
out
and
scas
jg
aam
or
repz
mov
pop
loop
sarb
gs
mov
and
sub
int3
dec
les
mov
mov
mov
jmp
push
loopne
pop
insl
test
loopne
jne
clc
test
mov
mov
rclb
mov
cli
lods
call
adc
jbe
and
pop
pop
ds
dec
shlb
jne
mov
adc
pop
cmpsb
xor
jecxz
dec
adc
pop
add
cltd
push
iret
ss
pop
mov
push
pushf
orl
xchg
or
cmpsb
aad
ds
push
jns
add
enter
pop
ret
pop
push
xor
daa
cli
mov
add
or
inc
imul
sub
enter
jbe
and
jb
int3
ja
inc
rorb
and
divb
add
jno
int3
xor
sbb
call
cmpsb
sahf
outsb
out
aad
ds
je
dec
sbb
ja
xor
push
jns
mov
or
lock
jmp
int3
sahf
sbb
pop
sti
outsb
popf
fldt
and
jl
call
sti
andl
scas
aaa
mov
xchg
xor
sub
inc
mov
ret
into
aaa
dec
adc
lock
and
xor
loope
rcll
xor
or
dec
ret
hlt
adc
insl
mov
sbb
rorl
xor
popa
push
mov
popf
fwait
mov
aam
push
mov
push
jno
push
sbb
xchg
and
fmull
sahf
fmuls
loopne
aaa
lahf
mov
rorl
inc
sub
push
adc
in
pop
scas
fnstenv
dec
push
push
into
je
stos
out
pop
xorb
test
pop
shrb
or
pop
inc
xchg
dec
out
in
rcl
add
or
xor
test
scas
testl
pop
cmp
push
sbb
push
shll
lret
sbb
out
cwtl
insb
mov
out
mov
pop
shlb
push
or
aad
loope
xchg
jp
cmp
adc
jecxz
adc
inc
pop
jns
roll
and
repnz
ss
mov
movsb
mov
into
cmpsl
int3
mov
dec
xchg
sbbl
dec
inc
dec
xor
adc
btsl
repz
dec
push
js
sbb
inc
sub
inc
pop
add
jmp
adc
jecxz
jl
xor
ret
repnz
ficomps
mov
insb
nop
add
leave
shl
loopne
mov
xchg
sub
sub
ret
mov
sub
pop
rorl
inc
ret
sub
xor
sub
imul
loop,pt
pushf
inc
inc
dec
dec
loopne
scas
dec
ja
subb
mov
or
loop
sbb
adc
out
cmp
test
aaa
dec
popa
mov
loop
xchg
movl
call
jnp
pop
jne
xchg
ret
out
addr16
int3
or
mov
mov
and
dec
repnz
push
bsr
cmp
loope
add
notb
sbb
insl
inc
sbb
sahf
test
fisubs
pop
mov
out
insb
aad
adc
xorb
cmp
gs
fimuls
pop
bound
test
jmp
int
xchg
mov
sub
cltd
pop
into
out
iret
aad
imul
add
jae
and
adc
jns
pop
fdivrs
pop
std
mov
ljmp
arpl
bound
xor
lcall
dec
add
jb
xor
push
inc
outsb
add
lret
mov
mov
sbb
mov
xor
call
daa
mov
test
pop
pop
movsl
or
leave
and
scas
jp
xor
adc
leave
mov
je
imul
cwtl
popa
repz
sti
fisttps
fidivrs
adc
sbb
outsl
dec
cld
cmp
sub
jo
jno
xor
in
sbb
inc
in
mov
and
and
stos
sarl
mov
dec
orl
shlb
dec
andl
outsb
enter
enter
js
mov
sub
dec
xor
mov
jbe
sub
aaa
loop
dec
dec
mov
ret
jg
adcb
loopne
inc
xchg
popf
mov
xor
xor
inc
aas
jns
dec
sahf
xchg
fldt
inc
es
push
pushf
movsl
outsl
dec
mov
in
popf
divb
sbb
aad
jl
xor
pop
or
ja
arpl
insb
cwtl
test
push
or
insb
fnstsw
dec
and
cli
inc
jmp
out
jo
dec
jecxz
mov
js
sbb
add
lcall
jbe
fs
roll
movsl
imul
insl
fimull
cmp
in
hlt
ret
xchg
push
cs
dec
and
leave
loope
out
enter
pop
sti
adc
out
les
xor
mov
xchg
jg
pusha
jbe
je
sub
icebp
mov
fiaddl
jmp
mov
xchg
sub
mov
ljmp
mov
push
je
sub
adc
test
or
adc
shl
push
test
push
mov
outsl
sub
jns
scas
cs
xor
fwait
call
scas
fmuls
xchg
cltd
inc
mov
add
xchg
push
adc
push
int3
xchg
repnz
inc
ja
xchg
rcl
loop
outsl
aam
pusha
lcall
arpl
adc
imul
push
push
push
addr16
and
inc
push
mov
cmp
sbb
addb
push
loope
insl
repz
out
or
xchg
int
repz
aaa
cld
mov
fucompp
inc
cmpsl
sbb
push
xchg
inc
and
or
mov
mov
jb
ljmp
cld
cmp
pop
adc
inc
je
sbb
inc
add
ss
mov
mov
rclb
jno
dec
enter
jnp
fwait
mov
test
inc
sub
jmp
lret
imul
mov
repz
mov
cmp
mov
fnstenv
fldl
in
pusha
jb
lahf
push
inc
or
dec
sbb
shrb
and
mov
xor
xlat
ss
aas
mov
cmp
xor
fcomps
dec
addr16
aas
sub
fmull
dec
cmp
int3
jg
aas
sti
adc
fsubs
leave
sbb
pusha
sbb
mov
push
adc
sbb
repz
movsb
xchg
daa
mov
dec
lcall
pop
out
iret
fcmovnbe
add
xor
and
or
test
inc
loop
loopne
shll
lods
add
xchg
jmp
xchg
mulb
loop
ljmp
sti
pop
scas
xchg
lods
push
test
popf
inc
lods
cli
jmp
std
shlb
mov
idiv
xchg
out
les
push
out
mov
xor
fsubr
xchg
push
test
cmp
and
xchg
mov
or
leave
and
fdivl
sbb
in
mov
xor
aad
xor
and
call
jle
in
sub
dec
xchg
xor
into
jae
xchg
sahf
mov
and
jb
xor
negl
imul
pop
add
cli
xor
mov
push
push
pushl
push
pop
add
xor
int
jmp
test
pop
dec
sbbl
pop
ljmp
js
mov
nop
jns
adc
cmpsl
adc
xor
mov
das
cmp
sub
jmp
adc
sub
lea
lods
pusha
fwait
xor
adc
xor
imul
adc
add
fildll
loop
into
repnz
push
bound
add
or
pop
lods
inc
jp
sub
sub
jo
mov
out
insl
and
insl
mov
std
repnz
es
lods
les
je
frstor
mov
lock
inc
jecxz
sahf
xchg
aam
mov
lods
mov
test
xorl
inc
adc
push
rorl
sahf
or
push
push
aaa
push
pop
clc
or
mov
mov
pop
stos
dec
sti
out
adcl
mov
jo
adc
in
jl
jle
mov
and
and
pop
xor
sub
mov
pop
cmc
cmpsb
or
aas
sbb
xchg
inc
jbe
jns
mov
xchg
lods
adc
out
into
xor
or
ret
leave
or
fdivrs
and
faddl
cmp
inc
xchg
test
scas
xor
leave
inc
fcoml
push
imul
into
pop
inc
fwait
mov
daa
repz
daa
repz
and
dec
push
into
adc
inc
repz
jne
jns
loope
jnp
lods
xchg
cmp
push
xchg
pop
sub
out
lods
popf
and
js
or
dec
test
mov
into
add
mov
pop
cli
lods
dec
mov
mov
mov
xorb
pop
rorl
pop
pushf
repz
mov
add
mov
add
shl
add
mov
and
ds
push
insl
push
pop
sbb
jp
jbe
sbb
mov
mov
push
repz
out
sti
filds
ds
dec
fstpt
std
and
lock
orb
out
sarl
add
adc
ja
cmp
pop
dec
add
lret
pop
rorb
adc
ljmp
lods
and
sub
sbb
scas
sti
xor
mov
sbb
pop
enter
je
lcall
and
lea
imul
mov
mov
xchg
jbe
or
icebp
andl
sub
fwait
adc
ss
lds
fisttpll
repnz
sub
movl
adc
jl
push
cmc
sub
aad
movsl
in
popa
dec
les
push
mov
jns
adc
mov
ret
int
ja
shr
movsl
inc
push
push
aas
and
psubusw
push
inc
and
or
push
pcmpgtw
and
jae
cltd
fstps
add
mov
sbb
cli
jbe
aas
lods
stos
lret
sbb
fwait
jae
ljmp
dec
xchg
lea
js
xor
sbb
outsl
mov
xchg
cmc
mov
pop
repnz
sbb
enter
addr16
inc
cltd
daa
jp
test
cmpsl
aaa
sbb
fwait
pop
sub
inc
aaa
cmp
push
mov
mov
xor
int
movsl
adc
loope
daa
int
adc
out
xchg
push
nop
cli
add
data16
sbb
cld
addb
repnz
in
pusha
fdiv
rcr
sbb
add
shrl
inc
dec
pop
xchg
sbb
cwtl
icebp
sub
cmp
cmpb
fsubl
lahf
sarl
divl
pop
das
cwtl
add
fdivs
jge
inc
xchg
mov
sbb
jo
add
sbb
push
push
pop
rcrl
dec
mov
push
cmc
dec
inc
pop
mov
inc
add
hlt
cmp
dec
imul
jle
lahf
mov
pop
sti
cmp
test
sub
orb
ret
stos
std
lret
add
lods
push
stc
inc
inc
and
lds
in
or
inc
cli
inc
lds
sub
jg
cli
sahf
or
and
push
sub
dec
ds
mov
xlat
push
cmpsb
pop
push
sub
cmpsl
scas
sub
mov
add
mov
mov
cwtl
dec
jb
pushf
insb
mov
push
push
and
push
mov
and
add
loopne
daa
inc
or
pusha
mov
jmp
dec
pop
stos
mov
insl
pop
fldcw
test
inc
sbb
sbbb
scas
scas
jbe
push
cmc
fcompl
xchg
fisubrs
shlb
sbb
orl
test
out
mov
repz
in
ret
jns
jl
mov
sub
sbb
adc
jnp
add
pop
sub
xor
push
stos
outsl
dec
jno
mov
push
inc
mov
jb
mov
daa
xchg
loope
fsubs
dec
jl
xor
outsl
jmp
andb
pop
and
movsb
pusha
inc
push
inc
adc
shll
xchg
cmp
mov
call
jl
add
movl
cltd
jl
push
mov
into
dec
push
jle
cmp
adc
push
aas
xor
sahf
inc
lcall
sbb
mov
jb
loopne
xor
jl
clc
cmpsl
or
and
bound
adc
mov
adc
dec
adc
lock
je
add
jmp
in
inc
jp
int3
jg
fists
adc
lea
xchg
fcmovb
call
jae
in
and
add
mov
sub
mov
and
scas
call
sbb
lret
pop
outsb
testl
push
push
lret
inc
push
pushf
pushf
sarb
jl
jp
lret
std
fwait
lret
inc
dec
lock
stos
or
sbb
adc
or
mov
mov
add
jl
push
scas
mov
push
xor
sub
cmp
inc
push
test
jl
std
repnz
insl
call
int3
pop
sub
add
dec
notl
and
pushf
popf
and
fistpll
sbb
in
jae
or
adcb
punpckhbw
mov
mov
test
jae
out
jp
or
push
repnz
sbb
jle
scas
jmp
cmp
out
pop
xchg
xchg
iret
cmp
xor
cmp
inc
mov
jp
xchg
rcl
fisubl
in
lods
repnz
icebp
dec
push
xor
loope
sbb
mov
jge
xchg
cmp
nop
mov
mov
leave
xchg
or
pop
sti
xchg
push
cmpb
pop
inc
pop
popa
jno
or
shrb
in
adc
dec
inc
sub
call
imul
imul
xchg
sub
lahf
or
push
sarb
cs
and
addr16
pop
cmpsb
into
movsb
scas
ds
jb
sbb
fildl
mov
xchg
xchg
cmc
leavew
rcrl
adc
sub
orl
addb
nop
xor
jmp
or
mov
loop
jnp
addl
add
mov
lcall
dec
loop
jl
popl
nop
mov
cmpsl
sub
sub
and
cli
dec
xchg
sbbb
out
subb
dec
clc
cmpsb
add
pushf
mov
lahf
out
repz
cmp
add
lods
mov
call
push
mov
arpl
mov
jbe
aad
inc
xor
inc
fsts
outsl
jns
adc
dec
cmp
jle
das
push
sar
pop
mov
ret
dec
data16
test
into
xlat
cmc
push
xchg
inc
pusha
add
fdivrp
rolb
or
test
les
arpl
fcom
push
mov
pop
cwtl
jl
jns
inc
xchg
outsl
inc
movsb
fs
jecxz
je
scas
fcomps
pop
cmp
scas
sub
adc
movsl
imul
std
xchg
lret
rcrl
pop
xchg
je
test
sahf
in
test
and
mov
sub
pop
push
sbb
sub
enter
xchg
adc
mov
mulb
xor
inc
imul
and
imul
inc
les
mov
loopne
sub
mov
movsl
xor
push
adc
ret
clc
push
mov
push
out
mov
lret
cltd
or
fcompl
daa
cmpsl
sub
inc
fstp
and
into
dec
imul
mov
outsl
les
loop
push
add
outsl
jns
arpl
mov
xor
cmp
repz
notl
jg
and
mov
and
js
ss
adc
idivl
mov
ljmp
add
fucomip
xor
test
xchg
inc
pop
aas
cmc
sub
mov
lods
xor
inc
mov
fwait
rcr
test
call
ss
fisubs
push
sbb
shlb
jg
xor
rclw
repz
rcrl
jmp
mov
int3
mov
int
dec
dec
and
jl
cmp
lret
fst
scas
mov
shr
repnz
fistpl
push
cmpsb
int3
js
dec
rcr
xchg
pop
mov
stc
push
jo
ficompl
out
dec
pop
popa
negl
fisubl
pop
jp
xor
pop
out
pop
mov
push
add
popa
enter
lds
out
insl
lcall
inc
fs
insl
push
jns
pop
xchg
lss
inc
imul
in
or
shrl
xchg
pop
mov
popf
fs
sbb
push
test
cmpsl
dec
adcb
fwait
xlat
add
scas
lret
xchg
dec
dec
gs
imul
cwtl
loopne
xor
pop
fsubl
dec
fsubs
pop
imul
pop
out
scas
lds
mov
test
push
and
jno
jmp
sarl
stos
rcrl
xchg
or
cltd
arpl
xor
outsl
sub
sbbb
jp
dec
sbb
adc
pop
mov
js
test
mov
push
inc
inc
test
mov
sub
aaa
popf
fidivrs
subl
dec
or
mov
cmc
jno
jne
lret
das
mov
enter
aam
mov
cli
jae
sub
and
add
fisttpll
xor
gs
sub
fcoml
imul
sub
leave
daa
nop
ret
and
pop
jno
daa
and
jg
stos
out
insb
dec
ds
xchg
jnp
xor
ffree
test
pop
ret
xorb
mov
aam
or
inc
mov
inc
inc
pop
mov
dec
mov
mov
loopne
out
ret
mov
or
pop
std
or
inc
aaa
sub
cmpsl
xchg
ds
outsb
pop
hlt
dec
in
push
dec
xchg
dec
clc
sbb
popa
xor
in
dec
add
test
insb
adc
or
call
lret
cs
inc
push
or
ret
jns
dec
in
lea
sub
jns
js
mov
loope
mov
mov
add
sahf
adcb
sti
mov
jle
push
shrl
daa
daa
call
pop
dec
dec
or
xchg
lds
mov
pusha
push
pop
push
push
xor
dec
sub
jp,pt
push
cmpsl
push
sub
aaa
adc
push
or
outsb
int
cs
data16
cmp
movsb
arpl
gs
or
sbb
bound
push
sub
cmp
orl
movsl
sub
in
sahf
stc
xchg
sbb
xchg
movsb
and
fcmovu
sbb
push
out
pop
loope
cmp
mov
cmc
sub
adc
sbb
fisttpl
cld
dec
and
lahf
xchg
sahf
mov
mov
pop
xlat
or
repnz
pop
push
mov
dec
ljmp
aam
ljmp
addr16
mov
sub
jnp
mov
xor
or
add
movsl
jae
js
cltd
mov
inc
add
scas
sub
loopne
pop
stos
cmp
imul
pop
pushf
loop
xlat
leave
ret
fwait
mov
add
jle
jl
lods
shlb
sbb
int3
iret
add
inc
mov
test
jns
xor
jne
stos
adc
inc
pusha
mov
jns
in
mov
ss
sbb
sub
daa
divl
aaa
pushf
mov
hlt
pop
jae,pn
cld
sub
out
mov
jecxz
test
or
jg
and
mov
sub
rolb
pop
inc
mov
pop
out
pop
pop
dec
jne
mov
adcl
xchg
inc
mov
negl
aas
addr16
mov
push
push
jo
sbb
xor
pop
or
cli
inc
sub
out
dec
mov
push
into
sarl
fsubr
mov
je
loop
push
dec
sub
ret
ficomps
jno
cwtl
imul
daa
into
es
inc
jg
dec
jns
cli
js
sub
repz
add
cmpsb
lcall
mov
orl
int3
sub
clc
scas
pop
lcall
push
fdiv
lods
or
aad
and
in
call
and
push
mov
in
fwait
nop
popf
js
adc
lret
push
xchg
cltd
jmp
fcmovne
xchg
pushf
fsubrl
outsb
mov
stos
mov
sub
out
and
aad
stos
outsl
dec
dec
ljmp
pop
mov
arpl
movsb
daa
imul
and
adc
movsb
add
mov
dec
popf
sbb
sbb
add
cli
out
pop
dec
xchg
mov
lds
xchg
cs
jnp
les
ja
cmc
fwait
sub
lcall
jge
adc
aaa
hlt
xchg
or
xchg
adc
cmp
insl
and
filds
cmp
inc
rcrl
test
fld1
jnp
cmpsl
mov
into
aam
js
testb
out
loope
test
movsb
fimuls
push
lods
cmc
in
imul
js
pop
and
enter
sbb
aam
orb
outsb
popa
subb
and
mov
inc
aad
push
adc
inc
sub
inc
push
popa
mov
push
mov
fbld
mov
and
inc
popf
adc
sbb
loop
lret
cld
jp
ss
or
mov
or
sahf
adc
and
jb
fiaddl
pop
jg
sub
mov
push
sub
sbb
test
lea
mov
pmulhw
and
mov
pop
in
ret
std
or
shll
mov
pop
into
xor
std
hlt
inc
adc
pop
fistl
dec
imul
mov
fmull
inc
cmp
mov
inc
mov
je
sbb
add
mov
push
lret
in
lds
rcll
loop
lods
into
inc
in
adc
leave
jecxz
mov
loopne
cmp
adc
sub
push
rol
mov
mov
js
pop
pusha
add
andl
subl
fwait
adc
stos
cmpsb
push
jns
pop
arpl
dec
mov
lret
adc
jl
movsl
mov
adc
xchg
pop
cmp
pop
stos
inc
or
ja
out
mov
pop
lahf
dec
fnstenv
sbb
in
in
stos
outsl
inc
dec
xor
ficoml
ficoms
xchg
inc
inc
hlt
pop
mull
pop
arpl
jnp
xor
aas
xor
daa
popf
imul
mov
dec
xchg
ficomps
ret
stos
gs
test
fs
enter
xor
jg
add
inc
test
push
addr16
mov
sub
xchg
loope
and
adc
mov
jbe
sbb
hlt
out
fsts
ja
xchg
adc
mov
jl
pop
repnz
mov
jnp
xor
and
and
sbb
ljmp
pop
dec
inc
push
jmp
sub
scas
push
int
mov
out
outsb
xchg
data16
ret
xchg
ror
nop
sbb
pushw
daa
es
out
lods
mov
adc
stos
mov
mov
maskmovq
notl
sbb
mov
push
incl
cwtl
test
pop
outsl
jp
or
popa
cmpsl
mov
push
mov
std
jno
push
imull
jb
xchg
dec
jo
or
or
xlat
jecxz
loopne
out
sub
jae
mov
pop
or
in
addr16
movsl
aaa
in
adc
add
imul
enter
lds
xchg
adc
lds
pop
add
mov
mov
xor
pop
cmp
lea
rorb
and
sub
arpl
sbb
loop
jae
sub
cmp
enter
jnp
arpl
xchg
pop
jmp
mov
andb
xchg
into
xor
jnp
xor
ljmp
inc
sub
pop
pusha
mov
pusha
popf
sbb
je
cwtl
pushl
rcll
xchg
add
mov
test
pop
lahf
push
cli
pop
cs
pusha
outsb
mov
cmp
mov
xor
lea
sbb
dec
jmp
out
mov
cmp
push
push
mov
adc
inc
ja
ss
or
fdivl
inc
cmpsl
or
push
sbb
lock
mov
mov
mov
in
mov
push
lods
mov
sahf
push
inc
psrlq
in
ret
aam
jle
push
jmp
jle
xchg
push
in
ljmp
adc
fwait
daa
sbb
cwtl
in
das
shlb
out
fwait
mov
std
fwait
cwtl
or
jb
mov
loop
inc
fimull
xor
jo
imul
or
jmp
inc
cwtl
fildl
inc
aad
push
mov
cmc
in
add
lcall
lcall
ja
cwtl
pop
inc
xor
cmp
hlt
xor
aam
xor
pop
aas
cwtl
test
add
and
cltd
xchg
jg
sahf
add
movsl
sbb
shr
movsl
and
push
mov
idiv
xchg
cld
loopne
cmp
adc
aam
loope
xchg
das
and
jnp
or
jno
bound
xor
mov
lcall
addl
movsl
leave
pop
shlb
cmp
xchg
pushf
clc
mov
scas
pop
pushf
xor
das
jle
add
es
sub
jp
test
not
jl
sahf
mov
loopne
test
xchg
ficompl
mov
out
push
dec
cs
int3
jge
in
mov
in
adc
xor
xor
fdiv
cltd
cmp
cwtl
sub
test
inc
cmpb
xchg
xor
in
ficompl
sub
into
test
pop
inc
rolb
adc
in
out
cltd
mov
cmc
push
les
cmc
add
sbb
fistps
ljmp
sti
ss
mov
mov
test
xchg
pop
aam
cwtl
jae
xor
test
inc
cmc
mov
out
xor
dec
push
lods
mov
sbb
ret
pop
fisttps
rcr
popa
dec
mov
imul
std
mov
adc
and
jmp
xchg
push
pushl
test
gs
xchg
mov
push
cmpsb
inc
jmp
stos
mov
sti
in
lret
fdivs
inc
fs
sbb
mov
jl
roll
loop
mov
pop
outsl
sahf
add
imulb
xor
sub
int
and
xor
or
xor
cld
ret
jbe
inc
outsb
pop
sub
fadd
divb
mov
shll
push
mov
daa
sbb
mov
stos
mov
test
add
sub
das
insl
push
les
stc
adc
les
mov
test
push
into
inc
xlat
hlt
loop
les
jae
cmp
mov
or
dec
pusha
sub
xor
arpl
push
sbb
jecxz
rcrl
or
repz
int
xchg
and
cmp
pusha
dec
das
movsb
inc
mov
inc
arpl
lahf
imul
imul
pop
adc
add
mov
fidivrs
mov
ret
outsb
fucomi
jg
inc
imul
mov
push
cld
dec
ss
hlt
enter
xor
add
and
mov
sub
push
je
movsl
add
pop
adc
or
ss
mov
mov
cmp
sbb
xor
clc
ret
dec
adc
jno
sbb
sar
or
fidivrl
lea
fidivrl
mov
test
jl
mov
cmp
cmpsl
leave
lods
cmpsl
ss
movsl
jecxz
inc
in
mov
stc
popf
test
add
fbld
fmulp
stos
dec
mov
pushf
bound
in
aaa
and
add
mov
js
or
mov
pop
mov
dec
mov
add
xor
or
imul
or
mov
sub
loop
sbb
mov
fwait
xchg
ss
adc
inc
xchg
xchg
call
and
pop
jl
lret
fstpt
cli
lcall
inc
inc
sbb
popa
mov
sbb
inc
mov
jg
xchg
rorl
and
jmp
cld
mov
or
in
adc
stc
cld
cld
shl
inc
sbb
pop
adc
roll
sbb
out
push
mov
add
xchg
lret
in
sbb
sti
xchg
mov
adc
add
jae
js
push
xchg
fs
xor
aaa
mov
repz
push
jno
out
idivb
mov
lea
sbbl
shlb
imul
imul
inc
push
jne
pop
dec
xchg
adc
sbb
xor
adc
dec
je
ret
bound
aad
pop
lea
inc
call
mov
inc
sbb
xchg
roll
or
sbb
pop
mov
cltd
outsl
pop
mov
loopne
pop
lods
jnp
call
mov
pusha
fildl
mov
mov
cmp
fs
cs
fdivrl
test
inc
mov
jmp
cmp
cmp
add
iret
mov
mov
test
or
cwtl
push
add
sub
mov
cmp
or
int3
xor
adc
in
bound
loop
sbb
sahf
lret
mov
sahf
dec
imul
sbb
mov
fwait
ja
inc
in
iret
sbb
push
jbe
test
nop
add
adc
push
push
dec
pop
xor
push
fisubs
nop
xchg
cmc
into
pop
lcall
mov
jne
stos
addr16
int3
cmp
pop
xchg
aas
add
cmp
sbb
xor
push
jmp
addr16
adc
or
inc
les
lods
pslld
mov
xchg
push
mov
xor
dec
lcall
sarl
sbb
mov
sbb
adc
cmpb
int
fbld
pop
outsb
sub
int3
and
idiv
cwtl
sbb
xor
inc
sahf
iret
enter
frstor
xchg
aaa
dec
inc
pop
mov
in
sbbl
ljmp
cwtl
sbbb
jnp
jmp
lahf
outsb
into
jg
fcmovbe
in
loop
mov
in
and
sub
push
xorl
orb
inc
mov
shlb
into
dec
pop
xchg
pop
int3
ds
arpl
jge
mov
dec
and
fidivs
scas
and
cmpsl
jp
cld
xor
mov
lahf
and
xchg
sub
in
mov
mov
mov
sti
xchg
in
mov
cmp
inc
leave
pop
aad
pop
test
add
adcb
fists
jnp
lret
mov
jns
mov
xchg
pop
adc
iret
clc
xor
jl
xchg
mov
divb
sbb
sahf
mov
mov
dec
cmc
pop
in
or
xor
mov
das
cmp
loope
jnp
test
sub
mov
enter
ror
pop
out
push
and
bswap
popf
loopne
xor
loope
mov
inc
in
or
repz
jg
lcall
test
inc
and
xor
add
jnp
icebp
insb
pop
stc
cwtl
les
pop
in
sub
pop
jne
adc
or
adc
aaa
jo
sbb
or
mov
repnz
test
cmpsl
daa
cli
pop
adcl
test
adc
inc
mov
mov
fisubrs
jle
xchg
stos
dec
loop
and
pop
out
sub
mov
dec
cmp
mov
jle
lock
test
scas
movsl
loop
movsb
addr16
cmp
rclb
mov
mov
or
add
popf
out
sub
pusha
or
in
shlb
dec
add
adc
cld
mov
mov
imulb
les
and
push
sub
mov
xchg
mov
loope
pop
xor
and
mull
cmp
and
cmpsb
out
popa
test
push
inc
or
hlt
fdivrs
pop
push
xchg
lea
iret
xchg
mov
inc
pop
sbb
repnz
fildl
scas
mov
sub
cwtl
pop
je
mov
pushf
ret
sbb
js
jbe,pt
mov
in
shr
call
popf
mov
dec
jecxz
xor
mov
test
cltd
jns
das
cld
push
adc
pop
pusha
push
jge
xchg
cmpsb
mov
fmul
imul
ja
cmpsl
and
xor
xchg
imul
dec
dec
mov
push
fmul
mov
cmpsl
add
cli
btc
dec
lock
or
cmp
xchg
push
mov
mov
repz
xor
jae
jge
xor
das
cld
shll
sti
sahf
outsl
mov
mov
inc
notb
shrl
dec
iret
shll
mov
mulb
repz
ret
icebp
jle
mov
lcall
cmp
push
xor
leave
xchg
mov
xchg
stc
das
js
push
xor
dec
push
loopne
pushf
mov
mov
ljmp
cmp
roll
fadd
test
adc
sub
pop
mov
xchg
cmpsl
into
loopnew
adc
dec
ljmp
out
dec
or
lds
lds
gs
mov
mov
ss
aam
jg
push
mov
rcrb
pop
loopne
mov
adcl
stos
cmp
jp
pushf
movsb
pop
sbb
push
mov
pop
or
pop
popa
stos
test
js
push
pop
ret
push
test
bound
push
mov
jnp
sub
sarl
in
ljmp
inc
data16
mulb
inc
cli
fstl
test
scas
cmp
sbb
mov
cmpl
xchg
divps
shl
jmp
mov
push
xchg
push
pop
push
adc
mov
mov
stos
jecxz
in
or
repz
mov
xor
adc
cmpsb
dec
cmc
scas
neg
xchg
mov
and
pop
pop
out
arpl
cmp
add
dec
push
sub
dec
jno
jne
mov
add
gs
movsb
js
pushf
stos
ds
ret
mov
inc
push
push
hlt
xchg
out
clc
xor
jno
push
xchg
incl
ljmp
xor
mov
mov
and
lods
mov
sbb
dec
push
cmp
sahf
mov
scas
and
and
or
scas
cmp
inc
not
dec
insl
insl
lea
add
popa
mov
sbb
inc
pop
lea
dec
fmuls
or
inc
and
rcrb
cmc
cmc
push
push
lock
cmp
sub
mov
jno
push
hlt
data16
loopne
lock
leave
mov
push
pop
fwait
nop
scas
fistpll
aaa
mov
pop
cmc
loop
pushf
dec
lods
test
pop
jge
or
shlb
jb
insl
rol
pop
add
cmp
sub
mov
jae
push
mov
inc
push
sub
jecxz
or
ficomps
inc
rclb
xchg
sub
ss
cwtl
mov
dec
in
mov
push
pop
push
sbb
xchg
rcl
mov
ror
lods
lods
stos
orb
adc
pop
pop
and
xchg
dec
sub
es
popa
mov
scas
xor
push
and
les
test
push
lds
dec
cmp
inc
mov
ret
shl
lret
fisubrl
cmp
sub
xchg
aas
ficoml
sub
aad
inc
scas
nop
jp
stos
mov
add
dec
mov
jp
lahf
cltd
scas
xchg
xchg
sub
daa
lcall
jnp
pop
and
popa
mov
dec
fildll
std
inc
dec
or
jnp
daa
or
jae
test
sbb
xchg
jo
pushf
sbb
loop
xchg
mov
pop
mov
sbb
or
loopne
cli
add
dec
jne
lcall
insb
jg
mov
or
mov
push
stos
pop
cmp
push
add
ret
sub
in
push
jp
ss
enter
rcr
int
mov
fisttpll
repz
pop
clc
xchg
sbb
xlat
icebp
jg
dec
add
xchg
push
test
mov
mov
aas
gs
sahf
xor
push
sbb
cmpsb
mov
lahf
test
mov
mov
test
dec
jmp
test
in
mov
lods
mov
xor
jp
dec
sbb
inc
cwtl
xchg
jmp
push
ret
lcall
mov
sub
mov
push
jo,pt
fwait
int
jl
and
fldenv
push
iret
jb
cmp
addr16
setg
mov
popa
pop
adc
movsl
mov
pop
or
push
cmc
js
stos
rcr
mov
mov
ja
ja
pop
cmp
lods
shll
imul
and
and
nop
std
push
mov
loope
sub
insl
cmpsl
lahf
mov
into
sti
not
out
insl
insb
mov
cld
mov
xchg
inc
mov
mov
rorl
out
mov
cli
pop
xchg
jo
push
jle
push
and
adc
in
mov
fiaddl
sub
xorb
repz
stos
aam
lds
or
andb
ret
pop
rol
outsb
inc
mov
cmp
in
orb
inc
add
cmp
aaa
int
gs
add
lret
sub
mov
push
scas
ljmp
lods
pop
xor
cmp
insb
inc
and
pop
push
xor
aaa
out
rcrb
sub
rcr
dec
dec
vpshad
icebp
mov
stc
icebp
ds
nop
cmp
xchg
pop
into
mov
fwait
add
xchg
insb
paddq
pop
and
cmp
stos
neg
or
fidivrs
pop
and
int3
out
outsl
adc
adc
and
pop
icebp
clc
lcall
add
xchg
xor
push
mov
inc
adc
jo
repnz
mov
fstpt
mov
sub
xor
negl
addr16
das
jnp
call
xchg
adc
jo
push
lret
repnz
dec
mov
enter
dec
scas
xor
test
es
mov
sbb
mov
leave
shll
mov
sahf
sub
pusha
fimull
lock
sbb
pop
test
out
mov
insl
pop
loopne
sub
outsl
in
cmpsb
jecxz
cwtl
jl
pusha
push
dec
pop
push
inc
adc
or
push
sti
pop
mov
les
pop
iret
in
lds
popf
insl
jns
ds
push
or
and
push
mov
imul
jnp
jmp
movsb
shlb
jae
adc
xor
cmp
cmpl
fmul
mov
adc
cld
and
psllw
pop
shll
sti
jb
inc
ds
pop
add
ljmp
push
cmpsb
lods
notl
cltd
inc
pop
es
outsb
pop
mov
sti
fcoml
and
mov
lahf
pop
xchg
xor
cltd
int
jnp
and
gs
mov
jne
mov
aad
movsl
pop
xchg
rcrb
jge,pn
mov
and
ljmp
mov
xlat
cmp
jg
fcmovnb
mov
inc
insl
test
or
jae
or
xlat
cmpb
jb
inc
sbb
test
fs
hlt
mov
pandn
std
cmp
push
js
insb
pop
pusha
sbb
xor
push
push
mov
and
aas
sbb
jle
rorl
jae
ja,pn
cli
cld
push
pop
rolb
enter
addl
xor
movsb
jp
das
xchg
xchg
inc
cmpsb
or
mov
test
lcall
imul
inc
xchg
lock
mov
xor
ljmp
ds
lret
les
mov
js
test
das
push
fdivrp
push
dec
xor
addr16
je
int3
pop
jmp
mov
inc
stos
add
cli
xchg
mov
cltd
or
imul
lahf
mov
adc
mov
push
aaa
cmp
pop
dec
les
dec
jecxz
cs
pop
insb
jle
in
or
imul
inc
pop
loopne
sbb
outsb
mov
mov
lret
jae
mov
dec
or
cwtl
mov
jo
xchg
imul
shrd
fldenv
or
repz
addb
cmp
jl
lods
jl
imul
addr16
fsts
test
pop
and
pop
xor
push
pop
out
lds
in
mov
push
jecxz
mov
loopne
jg
imul
ss
rcll
notb
sbb
test
jns
push
pushf
pop
iret
inc
add
daa
mov
mov
sbb
enter
and
xor
inc
sub
js
mov
adc
dec
and
fs
inc
stos
adc
or
dec
adc
sbb
cwtl
sahf
enter
mov
sbb
shll
sbb
movsb
sub
mov
stos
push
inc
jmp
repz
lahf
jno
cltd
pop
sub
jb
xchg
fmul
daa
sbb
popa
dec
dec
rcrl
or
test
lcall
sub
dec
pushw
das
lds
fs
aaa
hlt
jl
and
les
into
clc
iret
ficompl
enter
in
in
loope
testl
xor
mov
lds
jae
fstpl
mov
bnd
inc
mov
dec
mov
xchg
movsb
imul
jb
sub
fstl
lock
ret
imul
pusha
test
mov
subb
pop
sbb
cmp
xchg
dec
dec
mov
ljmp
fstpl
sub
push
sbb
cmpsb
sbb
mov
pop
int3
icebp
cmpsl
cs
mov
cmpsl
ja
xor
shlb
mov
sub
pop
push
add
cmp
shl
loop
ret
negb
icebp
dec
andl
scas
dec
sbb
stos
iret
push
daa
xchg
and
lds
stos
push
call
cmp
jle
jno
xchg
jns
jne
aam
repz
popf
sbb
xchg
clc
pop
mov
cmp
pop
xor
das
lret
nop
xor
je
in
scas
xchg
jae
or
pop
or
jo
cmc
sbb
into
fwait
or
mov
or
loop
sub
insl
xchg
shrl
lock
adc
mov
xor
cmp
dec
rolb
mov
imul
das
aam
xlat
push
or
pop
pop
mov
out
dec
pop
dec
mov
ret
rclb
sub
and
sarb
pop
adcl
ret
sti
xchg
ret
xor
lcall
repnz
mov
dec
add
lods
pop
push
rorl
lret
jo
mov
outsb
outsb
cmp
cmc
cmpsb
adc
aad
addr16
gs
cmpl
mov
adc
pop
test
and
dec
lods
and
daa
push
dec
ja
xor
cmp
jno
fmull
xchg
inc
cmpsl
dec
icebp
fs
push
xchg
xrstors
mov
xor
je
cmp
inc
je
inc
jns
mov
pop
fsubs
mov
pop
ljmp
imul
shll
add
in
dec
jmp
xchg
imul
scas
inc
push
icebp
ja
out
dec
ja
repz
fiaddl
dec
xchg
mov
gs
pop
jmp
test
xchg
call
ret
xor
shrb
fidivrs
ficompl
pusha
data16
and
cmp
lods
ljmp
cmpsl
adc
insl
pop
das
jno
aad
test
dec
pusha
push
pop
inc
sub
jnp
in
or
fistpl
xchg
loop
adc
mov
adc
fbstp
hlt
mov
sub
inc
pop
push
xchg
icebp
aaa
out
insb
out
adc
cmpsb
sti
adc
out
mov
rcrb
dec
mov
dec
arpl
out
shl
dec
mov
mov
divb
or
mov
aaa
stc
repnz
sub
outsb
test
mov
js
nop
or
inc
stc
adc
cli
nop
stos
adc
push
shl
imull
ret
jle
cwtl
es
jo
mov
andl
and
xchg
aad
sbb
inc
ds
fcoms
lcall
mov
sti
rcll
test
jmp
loope
fsubrs
or
sar
call
cmpb
lds
sub
enter
xchg
leave
mov
cs
xor
cmpsb
ficompl
stc
stos
pop
fmulp
adc
inc
push
bound
jbe
hlt
into
pop
loop
pop
bound
mov
cld
and
dec
xchg
sbb
jge
xchg
pop
std
mov
fwait
add
jmp
mov
jmp
repnz
push
nop
scas
mov
out
sbb
out
or
cmp
mov
mov
ljmp
pop
ss
mov
in
cli
test
out
mov
movsb
add
in
divb
cmp
sub
mov
xchg
ficompl
mov
push
push
leave
and
leave
aas
dec
addl
or
xchg
arpl
arpl
sub
sub
lret
enter
into
pop
adc
repnz
icebp
pop
pop
dec
out
mov
ret
cmpsb
cmpsl
and
lods
outsl
sub
xlat
push
mov
add
push
mov
push
out
sbb
jne
jae
out
fcmovbe
or
aas
mov
call
out
js
daa
std
out
pop
orb
imul
lock
push
punpcklwd
dec
push
int3
pushl
jbe
cltd
jae
or
mov
jge
adc
mov
mov
mov
sub
call
mov
dec
sub
mov
lods
jp
ljmp
xchg
jns
sub
das
pop
cltd
mov
push
and
scas
add
and
loopne
js
adc
lock
add
js
dec
mov
mov
mov
push
mov
sub
cwtl
nop
sbb
xchg
fists
xchg
adc
arpl
adc
add
pop
push
add
sub
pop
popa
pop
je
cmpsb
loope
and
inc
xchg
test
pusha
pop
mov
or
imul
sub
sub
jbe
notl
sbb
mov
es
test
mov
jmp
leave
pop
mov
cmpb
add
sub
mov
dec
icebp
mov
outsl
add
in
mov
jecxz
pop
sahf
mull
inc
mov
mov
add
mov
sti
xchg
push
xor
repnz
arpl
iret
xchg
inc
pushf
jp
test
outsl
out
cmp
cmpsb
mov
pushf
sub
sahf
adc
push
scas
push
add
add
inc
xchg
push
enter
jno
divb
xor
scas
insb
cli
jns
pop
add
cmpb
jle
insl
testb
pop
fidivrs
add
cmpsb
pop
outsw
push
aas
and
cs
push
dec
or
pop
jg
es
pop
or
pop
sar
adc
lret
out
addr16
lock
fsts
mov
dec
dec
push
jecxz
dec
js
notb
scas
mov
adc
pop
mov
mov
sahf
sbb
or
mov
and
cmpsb
add
xor
xor
loope
fwait
cli
push
outsb
cltd
jnp
and
xchg
in
sbb
dec
je
aad
xchg
xchg
xchg
adc
dec
fmuls
pop
xchg
or
pop
xchg
movsl
mov
push
add
sti
repz
cwtl
test
mov
ret
mov
mov
sti
testl
mov
xchg
imul
lret
dec
xchg
fstpt
aas
in
dec
lret
add
add
xor
cmpsb
dec
test
iret
rcrl
outsl
jnp
test
and
std
jae
mov
dec
push
lock
out
cmp
mov
push
pop
mov
mov
pop
jae
sbb
loope
ret
lock
insl
stos
add
lret
shlb
leave
mov
rcrl
jnp
fisubl
in
ss
lock
mov
jmp
mov
push
inc
jo
jp
sub
push
adc
sbb
outsb
mov
jl
push
aas
in
lret
mov
shll
sbb
fimuls
out
pop
je
mov
movsl
imul
scas
repnz
nop
int
sti
inc
ja
sti
cmp
dec
mov
push
push
mov
inc
in
lret
ljmp
sbb
je
test
cmc
enter
lcall
pushf
inc
cmp
xchg
lahf
sbb
or
sbb
int3
add
cli
jnp
les
sub
test
cmp
xor
or
mov
xchg
cmp
div
xor
gs
mov
les
inc
push
inc
pop
cltd
orl
mov
ret
cmp
jp
add
mov
psllq
push
jns
out
pop
dec
bound
decl
jmp
ret
aaa
mov
aam
mov
icebp
dec
popf
mov
mov
add
push
outsb
jge
icebp
sbb
jp
push
add
push
jne
jae,pt
mov
lods
je
cmpsb
cld
leave
sarb
scas
dec
pop
inc
push
mov
aam
outsb
fldt
jnp
pop
mov
mov
in
out
aaa
call
xchg
cmc
mov
cwtl
pop
ds
sub
ljmp
scas
mov
push
repz
int
and
roll
dec
imul
sbb
add
mov
negl
push
shlb
mov
inc
pop
push
std
sbb
pop
push
lods
into
loop
daa
daa
sub
lds
ss
push
jecxz
or
sti
xchg
xchg
inc
jae
add
dec
xchg
sarb
andl
stos
jns
xchg
fsubr
call
push
clc
fistpll
push
popa
adc
xor
add
pushf
inc
pop
mov
add
lcall
pushf
shll
push
sbb
inc
xchg
icebp
andb
or
push
mov
sub
insl
scas
inc
je
loop
jae
dec
jle
dec
add
mov
xor
andb
scas
or
shl
or
rcrl
sbb
mov
cmc
mov
mov
inc
cld
sub
outsb
ffreep
popf
sarl
insb
test
mov
iret
popa
div
lds
aaa
sub
push
cmp
inc
imul
fcomi
test
hlt
xchg
sub
dec
je
xor
push
xor
cmp
dec
stos
lods
scas
push
pop
lds
add
lea
bswap
or
jo
nop
daa
aaa
in
mov
sbb
test
cmp
jne
push
std
and
sahf
jle
mov
mov
cli
push
icebp
push
ffreep
xor
out
das
xchg
add
pop
and
push
inc
notl
fsubrs
adc
jl
pop
lds
insl
andl
xchg
cli
pop
sub
cmp
sub
adcl
hlt
xchg
icebp
jae
jmp
adc
dec
stos
xchg
sbb
or
push
adc
rorb
xor
jb
push
adc
mov
pop
out
stos
dec
std
rcl
sbb
out
xchg
mov
xchg
in
xchg
in
mov
jnp
sub
inc
nop
push
hlt
mov
mov
cmpsb
test
int
mov
cmp
in
sub
mov
xchg
add
push
in
stc
pushf
xor
mov
inc
ss
les
mov
aaa
inc
sahf
sub
ljmp
xchg
dec
pop
push
or
stos
inc
out
dec
outsl
es
lret
fsubrs
inc
fsubr
sub
jb
mov
xchg
sbb
mov
fnstenv
sub
lcall
cmp
cmc
and
sub
jg
mov
loop
mov
rcrb
mov
dec
daa
cli
and
mov
xchg
pop
inc
ljmp
cs
jnp
xor
sahf
adc
jno
jnp
outsl
xchg
mov
ret
push
stos
adc
dec
aas
das
dec
loope
sbb
dec
imul
out
loopne
xor
negl
imul
cmp
inc
xchg
imul
lock
adc
in
cmc
inc
mov
inc
inc
popa
fcmovbe
test
lock
clc
imul
test
jbe
xor
pushf
xlat
mov
xchg
add
movsb
test
and
clc
je
pop
popa
inc
push
jb
inc
inc
fucomp
loope
repnz
outsb
xchg
lea
test
aam
pop
movsb
pop
std
push
dec
stos
jae
cmp
inc
imul
push
mov
push
inc
inc
fistpll
pop
push
inc
fisubs
sbb
jle
and
icebp
call
push
lahf
add
sub
pop
aaa
xchg
add
scas
pop
xchg
fdivrs
in
push
add
or
cmp
push
clc
jp
xor
cwtl
and
push
sti
inc
xchg
rolb
push
xchg
shrl
ljmp
std
add
fsubr
sbb
decb
sbb
or
int3
loope
push
push
inc
outsb
loope
bound
test
stos
into
lods
std
sbb
pushf
add
sbb
int3
add
rcl
jecxz
test
pushl
inc
dec
push
rclb
mov
popf
jnp
jne
es
mov
lea
push
mov
pop
stc
out
movsb
jae
pop
mov
lea
sti
sbb
adc
mov
inc
cmp
notl
dec
shlb
and
lods
imul
mov
rclb
mov
ss
jns
xor
lea
mov
cs
stos
popf
icebp
sbb
mov
xlat
sub
inc
cmp
test
shl
ljmp
add
inc
inc
or
mov
ds
repnz
loopne
std
dec
jae
jbe
sub
mov
incb
in
xchg
paddq
cmp
imul
out
pop
repnz
cltd
pop
lret
jge
in
push
divb
stc
inc
mov
enter
enter
cltd
jmp
test
pop
in
xlat
stos
sub
aas
stos
mov
pop
adc
scas
repz
dec
pushf
pop
dec
nop
cmpsl
mov
sbb
leave
in
jp
jb
jmp
in
adc
pushf
scas
push
cmp
jb
add
mov
cltd
sbb
fistpll
jno
sahf
fiaddl
jbe
mov
pop
cmpl
mov
fmull
aas
mov
bound
lret
popa
iret
sub
jno
popa
xchg
dec
lods
ret
mov
test
push
popa
fsubl
cmp
jl
push
mov
add
daa
mov
mul
mov
cld
subl
or
push
push
adcl
pop
loopne
dec
sub
mov
xor
arpl
push
inc
ja
fwait
mov
bound
leave
hlt
inc
xchg
add
dec
cwtl
in
les
fucomi
fnstenv
in
jno
pop
dec
clc
frstor
pop
lret
lods
or
lods
jae
out
add
push
jo
pop
cmpsb
aam
lods
xor
cltd
sub
jns
push
inc
xchg
xchg
ret
and
sahf
orb
scas
xchg
mov
fsts
mov
out
pushf
jne
mov
xchg
int
xorb
std
mov
bound
fs
or
cmpsb
out
loope
popa
inc
jo
and
call
lea
ss
data16
pop
push
cmp
mov
sub
sbb
or
adc
mov
or
mov
lcall
shll
bound
cmp
out
sbb
and
cmp
mov
xchg
lds
lock
lahf
cmp
out
adc
pop
jmp
inc
hlt
pop
or
test
rolb
loopne
mov
popf
pop
popl
shrb
push
imul
xchg
movsl
or
dec
cmpsb
test
cmp
cltd
add
int3
in
addr16
sbb
add
sbb
cmc
add
hlt
pop
ss
and
jo
shrl
iret
shll
and
mov
and
cmpsb
sbb
mov
addl
daa
jmp
inc
pop
fcmove
fmuls
in
mov
pop
push
adc
out
shlb
in
filds
adc
enter
xchg
sbb
mov
push
hlt
imull
mov
mov
push
out
in
push
cmc
mov
ficoms
jo
data16
pop
mov
imul
pop
push
mov
fildll
lcall
jnp
into
mov
cld
pop
xchg
in
testb
mov
mov
test
jb
cwtl
pop
enter
inc
push
daa
sti
insl
sbb
pusha
das
lock
cs
push
sarb
mov
cs
cmp
mov
faddl
cs
or
pop
dec
push
mov
roll
lahf
jg,pn
xor
mov
cltd
loopne
pop
ret
data16
pushf
xor
push
test
test
int3
jne
push
ret
dec
shl
push
imull
jbe
stc
mov
test
iret
mov
into
stc
int3
test
jns
push
pop
mov
lods
mov
mov
hlt
lods
xor
lret
mov
enter
lahf
xchg
sbb
addr16
test
sub
mov
jno
imul
mov
xor
ss
pop
je
icebp
push
sbb
scas
out
mov
loop
push
sbb
pop
ret
lcall
int
mov
mov
mov
pop
cvttps2pi
or
and
stos
cwtl
and
stos
inc
dec
inc
pop
jno
xor
outsl
push
arpl
hlt
cmp
cmpsl
add
cmp
mov
jno
sub
das
js
push
sub
mov
leave
mov
jle
fsubl
js
xorl
cltd
pop
sub
cmp
add
std
inc
test
movsb
jge
pop
pop
mov
sub
fmul
jnp
ret
mov
loope
push
scas
ret
addl
pop
xchg
test
sub
dec
cmp
adc
push
jecxz
mov
pop
jns
adc
insl
or
dec
movsl
jp
cmpl
cmp
fstpt
sti
push
pop
cltd
sub
rorb
lods
sarl
icebp
jnp
sbb
push
syscall
jbe
or
test
inc
mov
add
cmpsb
ficomps
test
pop
add
dec
pop
adc
sbb
dec
sahf
std
cmp
insb
jg
pop
ja
addr16
ja
push
in
inc
imul
mov
lret
mov
xchg
nop
iret
push
adc
es
out
bound
sbb
mov
cmp
mov
mov
pop
insb
jnp
loop
inc
std
pop
movsl
test
das
out
mov
cmp
jo
adc
adcl
sarl
mov
dec
add
adc
int3
scas
lods
mov
mov
pop
jmp
in
sub
js
xor
enter
xchg
pusha
mov
sub
repz
or
sub
stc
mov
imul
jae
test
sbb
cmpsb
jno
jnp
mov
add
jb
std
sub
pushf
aas
add
mov
lds
xor
adc
cwtl
testb
lret
ret
test
bound
insl
test
push
lret
and
lea
xchg
jecxz
and
jge
je
ljmp
adc
cltd
rcll
shr
sarl
sub
je
push
cmp
jg
test
cmp
inc
and
or
mov
lahf
in
call
sbb
sahf
mov
mov
mov
das
cmpb
adc
outsl
sarl
test
xchg
mov
and
cmp
sarl
dec
fmull
dec
cmp
xchg
inc
push
cmp
push
add
xchg
in
stos
inc
lret
jmp
cmp
ret
adc
inc
lods
sbb
pop
add
sbb
aam
sub
filds
pop
cmp
loopne
dec
inc
loopne
lret
mov
aad
mov
cwtl
pop
scas
pushf
lods
sti
mov
not
mov
mov
enter
shrl
dec
sub
xchg
scas
push
push
ret
loopne
xor
jnp
and
data16
pop
pop
shrb
push
test
je
mov
mov
mov
ds
aad
dec
sub
xorl
xor
mov
dec
mov
popl
bound
mov
daa
test
shll
notb
add
scas
test
adc
push
popf
mov
int
mov
push
sbb
rcrl
lods
pop
inc
and
mov
fsubrl
xorb
add
mov
hlt
cld
xor
sbb
cltd
xchg
cmp
jle
cli
mov
ret
ss
aam
and
cmp
mov
mov
sbb
out
out
int
cli
fcompl
addr16
je
jne
cwtl
cmp
add
sahf
jne
push
inc
dec
fsubrs
in
jns
push
mov
inc
add
cld
and
xor
dec
enter
je
push
pop
push
les
and
dec
loopne
push
int
xor
mov
out
aaa
das
gs
leave
loopne
pop
cltd
jae
mov
repnz
pop
pop
sub
ja
xchg
mov
mov
push
lahf
addr16
dec
jp
pop
lods
into
inc
rep
mov
xchg
mov
xor
fisubl
insb
scas
jno
mov
ja
mov
out
cmc
cmc
out
imul
lahf
scas
sub
xchg
sub
xchg
inc
cli
ret
lods
cmp
cs
lcall
cmp
pop
sub
jmp
add
loop
mov
std
imul
imulb
mov
out
push
lret
jns
mov
test
dec
and
fwait
xchg
adc
dec
xchg
inc
push
sbb
fdivrl
lock
je
jcxz
mov
repz
and
lock
jle
data16
jl
pop
xchg
ljmp
out
sub
mull
jbe
sub
add
dec
jle
scas
push
mov
hlt
lock
ss
pop
je
cmp
fmuls
shrb
in
call
jb
mov
jne
mov
andb
insl
lret
insb
xchg
add
gs
sbb
gs
xchg
in
sbb
mov
lret
aaa
jmp
xchg
idivl
hlt
jge
lahf
lock
sub
and
movsb
mov
aad
mov
mov
test
jae
cs
inc
add
cmc
mov
adc
pop
clc
sub
loop
hlt
dec
cmpsl
fldt
dec
call
and
mov
xlat
xchg
or
andb
add
push
ret
adc
loope
xchg
fstl
int
adc
or
push
mov
movsb
sbb
stos
in
in
pop
sbb
add
mov
ret
sbb
repz
push
sbb
pop
lcall
xor
adc
pusha
pusha
enter
fiadds
jecxz
sub
mov
insl
push
jb
leave
inc
xchg
inc
jp,pn
in
add
out
pop
ja
test
mov
stos
jb
outsl
mov
xor
push
xchg
rorb
xor
sub
dec
dec
insl
out
data16
cmp
out
sub
testb
jo
and
imul
mov
imul
xchg
add
push
nop
xchg
fs
inc
lret
mov
cld
ja
sbb
xchg
out
sbbb
xor
adc
ja
sarb
adcl
addr16
add
jp
xor
push
push
xchg
and
xchg
mov
xchg
leave
or
jle
lahf
cmp
in
pop
movsl
outsb
movsb
dec
dec
pushf
mov
cmc
xchg
lret
or
or
xlat
call
clc
sub
repz
mov
outsl
inc
or
cmp
push
insl
mov
lea
nop
pop
xor
sub
nop
enter
fstps
lock
and
je
jb
mov
sahf
call
stos
add
popf
lcall
rcrb
xchg
push
mov
jg
push
mov
mov
mov
sti
pop
cmp
jne,pn
fstpt
cmpl
arpl
sub
fnsave
xchg
cwtl
add
cmovs
ds
int3
roll
pusha
cld
or
lds
cmp
mov
test
stc
jns
adc
xor
mov
stos
out
orl
dec
push
jmp
xor
das
out
aam
mov
sbb
lods
jecxz
push
or
lret
xchg
aad
pop
cmp
jle
xor
in
aam
fcomi
inc
jg
sub
push
addr16
cli
and
adc
filds
push
stc
push
jae
mov
sti
jl
mov
push
ds
xlat
popa
cmc
notl
pushf
cmp
fs
adc
adc
mov
add
mov
pushf
pop
ja
adc
clc
push
imul
xor
std
sub
cmpsb
pop
lods
daa
in
dec
jecxz
addl
lret
adc
rcrb
mov
sub
and
mov
push
add
imul
add
outsb
testl
inc
push
cmp
data16
adc
add
ds
loope
lods
dec
adc
sub
bound
mov
adc
dec
popfw
xor
mov
xchg
out
fimuls
cmp
xchg
sbb
xorb
fistl
mov
scas
dec
ds
push
loop
xlat
ret
mov
dec
and
xor
mov
sbb
mov
repz
loope
out
cli
or
inc
mov
lods
and
add
fmull
mov
push
popa
clc
adc
mov
sarl
push
push
andl
xchg
out
and
or
test
cmp
lret
cmp
or
adc
stos
xor
push
push
mov
cmp
scas
and
bound
or
negl
cmc
jne
sbb
adc
out
sbb
xchg
aas
mov
aad
hlt
insl
pusha
xchg
pop
imul
rcl
arpl
sub
dec
and
xchg
int3
vcvtps2pd
stos
mov
xor
pop
out
xchg
dec
bound
aam
out
cmc
or
sbb
cmpsl
stos
dec
stos
dec
xorl
loope
mov
inc
daa
dec
or
mov
inc
adc
xchg
in
iret
pop
jl
mov
pop
pop
xchg
jecxz
lret
cli
dec
lock
xchg
adc
mov
lahf
into
jno
movsb
and
cltd
aaa
jno
jl
dec
movsb
sbb
mov
xchg
or
cmp
std
mov
shll
in
mov
jb
sub
outsl
mov
ret
cmp
xor
inc
mov
pop
lds
xchg
ljmp
les
mov
mov
push
cmp
pop
negl
xchg
mov
loop
ja
mov
cmp
int
sub
inc
mov
mov
or
ljmp
jo
andl
sub
or
pop
test
dec
sub
dec
sbb
xor
idivl
push
ficoms
in
xchg
fwait
sbb
repnz
mov
dec
aaa
mov
fisttpl
xchg
out
fidivs
pop
in
repz
inc
leave
sub
inc
cltd
and
sbb
pop
imul
loop
cli
pop
pop
leave
int3
test
pop
jg
movsb
fidivrs
add
dec
push
or
int
jbe
jo
adc
and
lock
ficoml
mov
mov
sbb
hlt
push
mov
std
mov
cmp
in
je
and
orl
shll
stos
jmp
shll
addb
test
sbb
rcll
xor
jnp
pop
cltd
insb
or
mov
xchg
jae
mov
xor
adc
int3
pop
sbb
addr16
and
pushf
mov
test
fyl2xp1
jb
rcr
testl
mov
iret
stc
punpckldq
arpl
fdiv
stos
jmp
xorl
push
push
xchg
shlb
dec
cmp
ja
push
nop
sub
in
jns
xchg
push
xchg
aam
jbe
mul
mov
sbb
out
in
out
push
mov
stc
push
jo
push
adc
jne
jle
ljmp
std
mov
inc
jmp
out
and
mov
mov
mov
inc
outsb
pop
pop
loopne
ds
cltd
dec
fcomp
sbb
dec
in
arpl
push
out
push
xchg
movb
das
push
push
mov
and
add
xchg
sub
dec
push
test
aam
mov
xlat
stos
adc
xor
mov
aas
inc
adc
lret
in
mov
or
jno
iret
mov
addl
and
test
fwait
in
aam
insb
adcl
sbb
jg
cmp
cli
mov
scas
aaa
sbb
insl
jne
shrb
cmp
das
out
push
lods
sarl
lock
jecxz
sti
push
mov
loope
movsb
pop
jb
ret
jb
xor
lret
jmp
out
outsl
jns
clc
out
sub
mov
jmp
divb
cltd
mov
sub
push
inc
cmp
bound
xorl
out
testl
inc
test
out
add
add
lock
adc
pop
dec
mul
sub
mov
jmp
sbb
imul
mov
stos
in
iret
ret
addl
mov
movsl
adc
aam
push
movsb
imul
inc
push
loop
push
inc
in
mov
popa
sub
jnp
sarl
and
je
pushf
cmp
cmp
shll
jb
lods
out
pop
cwtl
inc
mov
pop
add
cmpsb
clc
int
inc
iret
and
shrl
test
xlat
pop
out
pmulhw
mov
cmp
and
mov
adc
sbb
xor
sti
mov
sub
test
mov
inc
mov
jle
aas
or
jl
jp
and
fisttpl
dec
dec
lret
push
or
popa
cld
xor
ja
mov
sub
adc
push
xor
stc
xchg
pop
les
ret
adc
popa
inc
daa
adc
sub
data16
mov
jmp
arpl
xchg
push
mov
inc
push
xor
mov
sub
push
push
adc
pop
ret
and
push
les
pop
jbe
ret
pop
push
test
pop
ficompl
and
sahf
ljmp
pop
fadds
jo
dec
out
xchg
iret
fwait
xchg
xchg
pop
mov
cmc
push
pop
jne
xor
std
mov
and
andb
jmp
sbb
sub
add
fstps
sub
cld
loop
xor
mov
push
cmp
xchg
jae
sub
test
arpl
in
mov
psllq
xchg
jl
mov
sub
stc
gs
add
or
push
pop
bound
xor
add
aad
adc
movl
xor
and
mov
sub
popf
and
jo
out
adc
ljmp
int
insb
sarb
dec
dec
callw
ljmp
aad
adc
sub
loope
sbb
fsubs
daa
push
test
mov
mov
aad
sbb
sbb
gs
jo
aas
lods
idiv
mov
and
cmp
dec
nop
mov
mov
outsl
imul
jns
or
test
divb
xchg
in
sarl
nop
pop
sbb
mov
sbb
aaa
jp
cld
xor
es
push
cmc
xor
sub
cwtl
add
mov
xor
mov
ret
sbb
cwtl
ret
imul
mov
fisttps
mov
mov
shlb
ficoml
ss
add
movsl
ljmp
jle
les
push
push
js
imul
jge
fs
cli
stos
ja
mov
lea
xchg
xor
cmp
mov
popa
les
jl
jp
out
rcr
sbb
adc
mov
std
lods
mov
lea
or
add
sbb
imul
dec
ja
out
sub
lods
push
sti
js
je
bound
push
pop
add
lods
test
or
nop
mov
movsb
adc
dec
xlat
cmp
jno
push
call
repnz
fistl
push
sub
cwtl
ja
clc
data16
add
xchg
mov
out
lea
cmp
pop
mov
cwtl
mov
or
mov
ja
adc
adc
mov
outsb
sbb
xchg
mov
shl
push
push
add
push
pop
das
mov
pushf
xor
push
sbb
jle,pn
imul
fwait
mov
xchg
ret
jle
movsb
xor
mov
std
in
nop
dec
sahf
xchg
arpl
cld
push
in
notb
inc
mov
push
divl
inc
pop
cmpsb
jne
jne
and
lods
sub
mov
push
jno
cs
mov
pushl
ret
mov
fmul
lret
push
inc
dec
jmp
pop
js
adc
stc
lds
test
mov
jge
pusha
sbb
mov
pushf
notb
and
decl
xor
enter
mov
mov
pop
push
test
ljmp
test
outsl
test
jnp
aaa
fldl
test
pushf
and
pop
lret
mov
js
pop
imul
and
lea
adc
jb
and
in
test
xor
pop
add
pop
jae
inc
lcall
push
cmp
mov
insl
aad
jmp
fisubrs
aad
les
mov
dec
mov
and
mov
ret
fnstenv
jg
jb
aad
or
lcall
popa
jae
pop
ds
mov
fnstcw
and
repz
fld
jbe
mov
jb
push
les
scas
js
sbb
or
shll
aaa
xchg
add
pop
int3
mov
filds
pusha
stos
lret
and
and
xor
test
insb
fsubl
sub
inc
and
cld
sbb
imul
repz
imul
pushf
push
dec
lea
hlt
aaa
loop
enter
enter
sub
es
loope
pop
ret
hlt
nop
lods
pop
mov
iret
scas
cmp
sub
adc
shll
scas
sbb
jmp
sub
lock
pusha
outsb
mov
jge
dec
loope
add
xor
es
push
adc
cmc
adc
test
inc
cmc
outsb
jmp
add
xchg
test
into
shr
mov
or
inc
cwtl
pop
stos
test
cld
dec
ja
cmp
mov
movsl
js
fdivl
or
jle
or
js
mov
out
fdivrp
sub
cmp
sbb
mov
repz
fdivrl
jp
rolb
xor
imull
mov
pop
out
push
pop
adc
ljmp
sbb
mov
xchg
pop
std
pop
pop
cwtl
add
std
inc
or
add
popl
jnp
xorb
sub
mov
and
dec
adc
insb
push
loop
in
jp
sub
lds
jmp
xchg
fcom
stc
into
mov
and
pop
add
popf
and
jnp
daa
shll
outsl
loope
pop
push
insl
movsl
test
lock
xchg
bound
and
mov
pop
mov
xchg
mov
orl
jo
js
iret
out
outsl
jbe
sbb
and
and
fldt
dec
lea
fldt
jg
pusha
adc
add
sbb
add
mov
sub
or
test
dec
in
xor
lcall
jmp
scas
dec
sub
cltd
xchg
push
push
mov
push
push
test
mov
xor
jb
insb
xchg
lret
mov
jnp
in
ret
xor
cli
xor
in
clc
sbb
xchg
add
xor
addb
arpl
mov
loop
les
inc
test
mov
sti
fstpt
push
int
jecxz
das
loopne
outsl
push
jo
xor
int3
sub
push
push
mov
repnz
lret
push
push
and
mov
or
lds
or
mov
mov
jle
sarb
and
std
mov
je
xor
inc
pusha
loop
mov
fnstcw
pop
jbe
fcmovne
xor
jmp
adc
and
sahf
add
mov
out
sbb
push
iret
aam
adc
ds
bound
mov
int
mov
out
fsubr
cmp
mov
cmpsl
int
aaa
jnp
push
mov
push
scas
lcall
pop
inc
lret
arpl
das
divl
fimuls
mov
xchg
mov
fsub
cld
mov
fisubl
pop
movsl
jecxz
gs
enter
push
jnp
ss
das
and
cmp
mov
je
subb
jmp
adc
jne
test
adc
add
and
jmp
pop
xchg
decb
jno
loop
inc
loope
sub
mov
arpl
enter
lock
xlat
into
pop
into
push
xor
sbb
pop
cmp
xlat
arpl
cmp
sbb
jb
sub
repz
jae
pop
xor
jb
mov
fistl
dec
out
add
cmp
add
push
or
fdivrl
dec
and
pushf
xor
sub
loop
js
mov
fisttpll
filds
int3
aas
lret
out
iret
mov
xchg
xchg
fnstenv
mov
pop
adc
and
inc
jle
xchg
repnz
sbb
mov
icebp
add
pushf
pop
inc
loope
add
cmp
sub
sbb
and
mov
lods
push
stos
insb
sbbl
push
lret
int3
ret
call
and
xchg
pusha
fwait
xchg
inc
ror
std
xchg
lret
lds
loop
nop
mov
int
or
push
xor
push
adc
inc
cmp
or
mov
mov
in
mov
add
fs
in
cmpb
fcompl
jl
push
ret
stc
ret
mov
mov
inc
sbb
loope
daa
pop
and
sub
ret
xchg
push
and
mov
pusha
nop
mov
or
pop
xchg
test
adc
fidivrl
add
mull
loope,pt
jecxz
repnz
ja
add
sub
outsl
movsb
push
out
add
add
sub
jae
lds
dec
jmp
cwtl
rolb
jne
fistpl
popl
cmp
xchg
movsb
push
mov
inc
test
inc
xchg
daa
cmp
fcmovne
imull
imul
repz
ret
sbb
and
es
std
scas
lret
push
jmp
les
or
xchg
stc
insl
in
out
mov
sub
stos
iret
aad
mov
or
test
loope
jbe
cmp
push
cmc
mov
push
mov
dec
mulb
xchg
and
lahf
ljmp
lods
xor
out
inc
test
lock
incl
push
jb
in
ret
mov
or
es
movsb
pop
fs
mov
jne
ljmp
cs
fdivs
sbb
jns
lahf
aam
loope
pop
fld
jns
xchg
clc
ds
pop
mov
daa
cld
inc
sbb
xchg
in
xchg
repnz
adc
pop
ss
gs
imul
sti
out
movsl
xorb
out
vpmacsdql
push
shlb
sbb
and
mov
jbe
dec
jmp
sub
jge
outsb
insl
int3
js
jl
loope
adc
adc
ret
jecxz
repnz
shll
enter
jmp
dec
in
and
dec
xchg
repnz
lods
movb
lret
jg
test
fstl
dec
xor
cld
lret
int
push
sti
sbb
pop
inc
aam
aam
je
mov
jno
mov
popa
lds
and
jmp
or
aaa
mov
jg
into
bndldx
stc
xchg
outsl
adc
icebp
mov
rorb
notb
jp
add
dec
cmp
xchg
jno
rorl
out
mov
movsl
andb
dec
leave
movsl
lret
out
xor
lret
dec
movsl
sub
cmp
push
push
mov
add
jle
cmp
loop
sub
xchg
add
jbe
imul
jl
cltd
or
jae
xchg
sbb
adc
jnp
cs
mov
jge
sub
jbe
jno
mov
dec
adc
xor
lret
mov
out
jbe
in
xor
pop
mov
jo
push
in
rorb
adc
mov
imul
xchg
dec
jmp
push
cs
push
scas
in
or
pop
push
sete
cwtl
jo
jne
lcall
push
pushf
clc
xor
lods
in
mov
lods
out
push
add
mov
dec
push
icebp
cmp
xchg
and
and
lret
mov
push
mov
adc
cs
call
adc
xchg
xor
dec
fdiv
cld
push
cltd
mov
cmp
mov
push
movsl
inc
xor
outsb
pop
popl
data16
idivl
pop
mov
pop
mov
cmp
out
adc
xor
std
scas
loope
mov
dec
mov
outsb
mov
xchg
mov
les
push
cld
add
inc
mov
mov
push
xchg
fimuls
fmuls
dec
clc
jge
cmp
push
les
jg
in
mov
pop
xchg
jmp
pop
sub
xor
push
fnsave
push
aaa
mov
cmp
cmp
insl
inc
in
jb
gs
lock
ss
push
sbb
mov
sub
add
pop
add
jno
inc
out
lods
addl
and
mov
scas
fsubr
rcrb
xchg
lea
xchg
mov
sub
jns
inc
mov
push
jb
dec
bound
push
das
pop
je
jg
xlat
pusha
adc
xor
or
popf
shll
fs
in
push
ja
pushf
sub
sahf
sbb
aas
adc
addl
setp
inc
fcoms
fwait
xchg
test
fs
cmc
aad
fnstcw
and
adc
xchg
out
popa
inc
out
mov
cld
lea
pop
sbb
mov
cmp
dec
jg
inc
mov
sbb
outsb
jg
fs
pop
inc
or
inc
cli
xchg
push
les
test
add
mov
insb
scas
call
cmp
ret
ret
cmpsb
das
sti
xor
std
and
adcl
test
les
in
dec
pop
pushf
jle
xchg
cmpb
cmp
je
jo
std
mov
push
loope
push
pusha
sbb
incb
sub
stos
ja
sbb
and
mov
cli
dec
outsl
in
sub
and
mov
xchg
shlb
mov
loope
test
add
push
das
push
pushf
or
sti
push
adc
in
fdivrl
push
outsl
or
sbb
mov
xchg
movsl
inc
cmp
and
sahf
pop
stos
insl
dec
insb
mov
sti
into
lea
fldt
push
and
mov
mov
lds
inc
push
xchg
out
icebp
icebp
mov
loopne
push
pushl
jns
sub
mov
fdivrs
push
xor
push
jle
test
lcall
adc
pop
fcmove
cltd
cmpsb
dec
push
mov
mov
xorl
shll
push
dec
push
fs
in
les
icebp
dec
and
mov
incl
jle
mov
lret
fs
sub
sub
mov
jg
cs
jle
mov
cli
mov
orl
cli
imul
nop
clc
inc
cmp
repnz
sub
pushf
les
xor
out
arpl
movsb
jb
cmp
in
adc
arpl
icebp
mov
or
inc
js
and
inc
cmc
inc
loopne
inc
inc
jns
rclb
pop
shr
push
and
mov
sub
in
adc
and
jb
scas
stc
je
pop
js
dec
fidivrs
je
test
cmpsb
das
cmpsb
inc
jns
fisttps
mov
mov
in
push
mov
pop
sbb
mov
popa
or
int
and
inc
inc
mov
pop
data16
cmc
dec
lret
mov
adc
pusha
mov
jnp
pop
xor
cmpsb
adc
pushf
ja
mov
jns
push
adc
cmp
aad
mov
cmp
push
jne
dec
pop
sbb
xchg
pushl
iret
push
cltd
fstpl
mov
cltd
bound
adc
sbb
cmpsb
mov
mov
orl
ss
aaa
xor
xor
getsec
mov
popf
cld
add
adc
adc
mov
fwait
jp
add
push
nop
testl
out
fwait
xorb
ljmp
leave
fnsave
movdqu
aad
xor
in
push
lea
fs
pop
add
cld
pop
inc
dec
jle
adc
cmpsb
pop
lods
jbe
mov
stc
fcompl
sahf
xchg
push
add
add
es
cmc
icebp
jle
fimull
dec
les
aaa
and
cmp
xchg
lods
xchg
xor
mov
jno
fdivrl
mov
jnp
xor
out
pushf
jge
outsb
cmp
and
or
cmp
outsl
outsl
mov
cmp
cmpsl
scas
fucomip
and
adc
inc
add
rorb
outsl
inc
xor
lret
jo
daa
or
pop
pop
dec
jnp
adc
cs
sahf
int3
pop
les
xchg
stos
lods
push
jge
or
push
xchg
scas
inc
iret
pushf
xlat
rolb
loop
dec
lcall
cld
sbbl
push
rorl
lret
gs
cmp
mov
cmp
lods
push
xchg
and
inc
inc
pop
repnz
pop
imul
into
add
cltd
xor
aad
outsb
arpl
pop
ficoms
ljmp
push
jecxz
mov
call
mov
mov
cmp
cmp
mov
inc
dec
push
fisubs
and
and
jnp
icebp
in
sti
ret
jno
mov
fsubl
xchg
mov
adc
test
test
inc
rclb
mov
aad
sub
les
adc
sti
scas
movb
dec
and
sti
imul
xor
in
into
fstpt
or
jecxz
cmp
movsb
cltd
test
push
pushf
mov
jns
in
push
dec
pop
dec
arpl
push
lea
stos
push
or
sbb
pop
adc
mov
adc
jne
stc
xchg
sarb
outsb
xchg
dec
lret
sub
xchg
cld
es
jle
popf
bound
out
cmpsl
rol
dec
data16
jle
sbb
adc
dec
push
dec
and
dec
mov
test
jno
add
test
imul
cmp
out
std
je
dec
pusha
inc
lret
jo
jecxz
mov
add
cmp
mov
xor
xor
pop
cmp
inc
pop
xlat
xchg
or
xor
ljmp
push
mov
cs
lock
ljmp
push
jo
andb
inc
rcll
pop
push
aam
andl
jmp
mov
xor
pop
fsubrp
mov
pop
sub
xchg
pusha
int3
jmp
int
loopne
and
push
sti
out
and
sbb
xor
outsl
gs
xchg
out
mov
mov
sbb
cmp
cmp
and
adc
ljmp
push
mov
xchg
xchg
pushf
mov
test
js
neg
clc
int3
push
dec
and
push
inc
jge
push
mov
out
clc
fcom
dec
cli
addr16
popf
jb
cmp
jecxz
nop
mov
iret
cwtl
stos
push
sub
cmc
cs
inc
repz
xchg
xchg
and
push
mov
jl
cmp
andb
push
enter
test
fnstenv
xchg
aaa
rcrl
add
mov
mov
popa
aas
or
add
bound
mov
pop
mov
add
adc
jp
nop
dec
loopne
testb
les
mov
jnp
clc
adc
add
pop
std
jne
dec
cmc
inc
shlb
cmp
daa
xlat
push
mov
mov
mov
stc
sahf
jo
cmc
sub
scas
ljmp
pop
adc
sbb
ss
jne
xchg
insl
and
inc
pusha
rcll
fldt
addr16
sahf
aam
shll
std
loope
jno
pusha
xchg
mov
mov
mov
pop
jnp
xchg
mov
in
ss
stos
mov
pop
scas
fmulp
xchg
mov
sbb
lds
push
dec
sbb
mov
and
add
or
jns
test
outsl
xchg
addr16
test
fwait
jle
lds
lods
dec
mov
pop
fwait
stos
sbb
push
mov
jle
pop
arpl
mov
test
outsl
je
subb
mov
bound
ljmp
dec
shlb
fidivrs
test
in
aad
xchg
loop
shl
mov
bound
in
int
sbb
inc
mov
xorb
pop
mov
cmp
fs
lahf
scas
push
outsl
cmp
in
aas
pop
fwait
adc
test
xorl
addb
cltd
mov
testb
leave
push
mov
out
or
fwait
mov
adc
mov
loopne
inc
xchg
cmpsb
jns
xorl
inc
cmpsl
mov
sbb
in
push
xchg
and
push
fimuls
outsl
inc
ljmp
xor
mov
push
pushf
xchg
loope
imul
push
mov
les
add
fidivrl
pop
int
jbe
and
sub
jp
dec
cmp
imul
adc
out
jge
das
sub
rorb
sub
and
js
in
std
dec
inc
ss
int3
lcall
adc
xchg
ja
clc
mov
sbb
lock
outsl
push
jecxz
pop
jecxz
into
leave
lahf
stc
sarb
leave
xor
nop
xor
jle
sub
dec
jg
and
xchg
lds
mov
or
shrl
loope
sub
mov
scas
mov
pop
mov
sti
or
roll
adc
push
fisubl
call
stc
inc
inc
dec
xchg
mov
scas
sub
enter
lds
ljmp
fs
jle
cmp
pop
sbb
jns
and
xchg
insb
into
xchg
lahf
xor
mov
mov
adc
lods
pop
sbb
fwait
lret
add
sti
sub
sub
mov
and
mov
sbb
rorl
lret
push
xchg
mov
cmp
ret
push
xchg
test
jne
rcr
push
or
cli
frstor
mov
test
mov
fisttpl
jns
aad
inc
ret
mov
jo
scas
filds
addps
popa
mov
pushf
insl
jg
icebp
out
push
mov
fwait
push
fwait
xchg
fnstenv
sub
ss
iret
xchg
call
aad
dec
cmp
cmp
popf
in
daa
popa
inc
scas
mov
xchg
push
repnz
xor
enter
xchg
sbb
mov
mov
cmp
pop
xchg
movsb
sti
fsts
dec
cmp
test
inc
or
scas
push
loopne
test
sub
mov
push
fwait
scas
mov
dec
xor
mov
cmc
adc
or
aam
xor
pop
dec
sbb
mov
fisttpl
mov
mov
outsl
sbbl
push
dec
out
pop
sti
jmp
iret
es
xchg
sbb
jno
mov
dec
adc
leave
fldcw
push
jg
xor
pusha
adc
mov
xlat
arpl
inc
pusha
lcall
les
setle
mov
add
push
pop
orl
inc
leave
or
xor
das
and
fwait
cmc
cmp
popf
push
subb
jmp
mov
cmp
cmpb
aaa
enter
add
lahf
xor
les
xchg
and
sbb
or
int
arpl
loopne
dec
fwait
dec
rcrb
dec
idivl
repz
imul
sbb
xchg
sub
popa
shlb
mov
xchg
xchg
cli
fs
dec
aas
adc
push
daa
or
scas
mov
movl
cld
call
pop
inc
mov
ds
insb
cld
outsb
or
adc
inc
cmp
lcall
lods
dec
stos
inc
jbe
arpl
testl
outsl
jecxz
adc
adcl
hlt
repz
js
fadds
lahf
pop
call
add
es
rolb
fcomps
lods
fs
fdiv
jg
les
jnp
push
mov
push
iret
jmp
fistps
std
cld
jge
mov
cld
fbld
cmp
into
push
cs
jns
lock
popf
push
in
jb
jnp
jbe
cltd
in
loope,pn
inc
jle
lcall
fdivrs
in
mov
adc
stc
sbb
pusha
mov
push
add
clc
cmp
arpl
mov
loope
fwait
add
aas
jge
pop
and
jb
lahf
push
mov
add
aam
mov
aad
decb
lds
in
xchg
adc
hlt
dec
lahf
sub
test
scas
add
pop
lcall
mov
leave
lods
int3
popl
sbb
push
push
jp
sub
aam
inc
or
fadds
hlt
cmc
sti
mov
loopew
insl
test
dec
icebp
xor
mov
stos
mov
xchg
sbb
cmp
cld
mov
push
cmp
movl
mov
dec
sbb
pop
test
xor
hlt
mov
lcall
fcoms
inc
cmp
and
push
mov
ss
inc
dec
adc
xorb
fisttpl
out
and
xchg
lret
mov
or
mov
xorb
dec
aaa
xchg
aam
mov
xorb
cmp
cmpsl
cld
out
sub
jns
frstor
and
enter
roll
mov
cmp
inc
aaa
leave
aaa
jmp
fsubl
cmp
adc
dec
in
adc
repz
popa
sub
sbb
xchg
lcall
popa
add
mov
jmp
ret
lea
jae
arpl
xor
cli
sbb
push
icebp
shll
jne
insl
mov
clc
loope
jl
stc
xor
mov
jne
push
clc
enter
mov
or
push
jge
mov
aam
mov
inc
gs
sub
mulps
jecxz
mov
jnp
cmpsb
fs
push
mov
movsl
aam
and
and
inc
dec
int
out
sbb
and
xor
sbb
add
mov
jle
mov
imul
out
dec
cmp
adc
xor
lahf
inc
addr16
sbb
pusha
adc
jns
dec
inc
cmp
hlt
inc
push
cld
cmpsl
sub
aad
jbe
mov
sti
lret
push
ret
ljmp
das
test
sbb
ret
movsl
mov
rolb
dec
outsl
cmpsl
lret
ja
roll
lods
ja
adcl
pushf
cmc
loop
or
lcall
rcll
outsl
xor
mov
xchg
mov
sbb
mov
and
dec
rcl
test
loopne
cli
rcrl
jne
xchg
rorl
cmp
lds
scas
push
sti
sub
movsb
adc
mov
repz
pop
pop
loope
mov
das
inc
loop
pop
cmp
jb
xor
inc
dec
daa
int3
jae
jno
dec
pusha
or
pop
mov
lds
leave
cli
mov
dec
es
pop
jge
scas
pop
push
xor
jb
sbbb
cmp
pop
out
cmp
pop
inc
xchg
add
aad
push
jns
test
ret
loopne,pt
shl
or
mov
pop
jne
inc
mov
test
cmp
scas
stos
or
add
mov
sub
dec
inc
ret
jge
pop
jae
xchg
sarl
pop
insl
divl
pop
dec
ljmp
jno
and
lods
ret
mov
andl
push
in
cltd
pop
fwait
cmp
jnp
insl
lret
jp
xchg
clc
imul
mov
xchg
pop
popa
fists
das
pop
xor
lock
mov
outsb
cmp
aaa
iret
push
movsl
mov
in
stos
xor
aaa
mov
cld
mov
data16
stos
dec
fmull
and
jg
push
imul
es
mov
adc
mov
cmc
popa
or
or
and
inc
jecxz
mov
fdivr
repz
in
jge
inc
push
push
inc
incl
out
mov
sub
es
jne
lahf
jmp
xchg
fstpt
xchg
jmp
adc
vmulpd
xchg
insl
test
mov
xor
pop
notl
stos
xchg
inc
in
cmpb
mov
addl
stos
xor
xchg
mov
adc
push
cmc
lds
and
fucomi
jns
ss
and
pop
stos
pop
cmp
sarb
pop
lods
es
enter
rcl
xchg
fcomp
sbb
sarb
movsl
dec
push
rorb
lods
loopne
push
and
dec
add
mov
insl
hlt
pusha
addr16
aad
test
iret
mov
lahf
roll
cwtl
outsb
adc
pop
and
cmp
adc
xchg
lock
scas
cmp
pop
leave
in
sbb
mov
add
xchg
das
popa
std
ja
or
or
or
mov
fsubl
icebp
jg
arpl
outsl
rclb
das
fdivrs
movsl
ret
pop
lds
int
add
out
mov
cwtl
jmp
push
mov
addl
hlt
cmpl
mov
rorb
stos
cmpsl
lods
sbb
mov
sti
jmp
cmp
addr16
shll
sahf
in
sub
inc
pushf
rorl
xchg
dec
jo
adc
or
cmc
popa
add
xor
and
or
pop
xor
sbb
mov
lea
mov
sbb
bound
test
incl
pop
lcall
cmp
jle
sub
dec
mov
push
ret
jb
mov
test
pop
imul
lret
add
sub
fdivrl
sti
push
jae
push
xor
or
les
cmp
sbb
xor
shrb
pop
lret
sbb
loop
test
andl
ljmp
fwait
clc
push
mulb
mov
jp
xchg
push
lods
xor
arpl
pop
pop
sbb
cmp
mov
sbb
sub
shll
cmp
jg
out
pop
imul
jns
pop
arpl
fimull
mov
cmp
fsubrs
pop
rcl
out
cmp
mov
push
outsb
push
clc
adc
shrb
jnp
mov
aad
dec
push
ja
jne
fdivrs
push
adc
loope
scas
pop
stc
inc
xchg
push
out
fs
mov
fldt
cmpsl
push
lods
cs
cmpsb
test
push
pop
insl
outsl
daa
push
mov
pop
das
dec
mov
arpl
inc
mov
in
cmp
cmp
xor
ret
les
or
sub
inc
push
inc
sub
int
jbe
jge
push
or
and
cli
dec
mov
or
push
lret
xchg
lock
js
ficomps
mov
pop
pushf
jae
testb
xchg
mov
scas
or
and
mov
add
pop
nop
and
mov
jb
or
mov
repnz
xor
pop
lock
sbb
std
dec
inc
repz
rorb
jb
push
xor
xor
sub
pop
adc
inc
clc
mov
mov
mov
push
stc
ljmp
cmp
in
adc
push
mov
push
xor
lahf
incb
or
sarb
add
fcomip
sahf
mov
out
push
cmp
pop
jb
xchg
mov
ret
fbstp
or
outsl
add
mov
sbb
push
mov
push
test
pop
cmpsl
fwait
scas
mov
xchg
testb
lret
lahf
adc
jbe
sub
dec
pushf
add
sbb
mov
seto
jle
pop
loop
nop
addr16
fsub
cs
push
xor
ss
fsubr
mov
dec
xchg
dec
imul
aas
mov
jnp
call
pop
adc
xlat
adc
test
and
pop
add
into
stos
inc
out
push
adc
lds
cmp
jo
clc
mov
data16
push
jmp
add
inc
int
test
mov
and
fimuls
jbe
push
sub
jmp
je
pop
subl
cmp
adc
iret
inc
das
mov
pop
jle
aas
lahf
sbbl
in
pop
loopne
pop
push
sbb
daa
sahf
mov
fwait
lods
hlt
push
jp
mov
fidivrs
inc
sbb
clc
xchg
js
les
push
sub
insb
cltd
leave
xchg
cmp
cmp
daa
daa
mov
jnp
test
jg
mov
aas
ds
lods
mov
xor
cmpsl
cmp
dec
mov
in
mov
loop
aad
enter
enter
pop
lods
cmp
or
test
push
jo
or
fsubl
push
stc
inc
fld
pop
clc
jno
jb
mov
aam
cli
loopne
push
ror
add
pop
jge
cld
push
fisubs
jl
sbb
sbb
insb
sarb
mov
arpl
movsb
ljmp
aam
xor
mov
xchg
test
inc
sbb
push
jmp
pushf
into
outsb
xchg
xor
xlat
mov
outsb
lods
fcmovbe
es
aam
scas
sti
and
pop
insb
push
imulb
int
into
addr16
mov
arpl
add
cmp
pop
filds
fistps
out
dec
sbb
je
add
scas
cmp
fdivs
inc
jecxz
or
sahf
stc
nop
push
mov
pushf
dec
push
faddl
add
daa
push
mov
bound
mov
imul
adc
cmp
repz
imul
pushf
iret
mov
les
dec
pushf
roll
add
push
push
iret
sub
rcll
jp
xor
imul
in
cmp
out
push
rol
xor
aad
cmpb
dec
ret
out
pop
jne
xchg
aad
testb
jle
lret
xchg
and
sbb
pop
inc
xlat
lods
dec
jno
mov
fs
and
ror
mov
sbb
adc
mov
mov
or
jmp
fimuls
insl
pop
shll
cli
inc
jb
pop
fmuls
test
in
pop
cmc
orl
inc
ret
inc
fucomp
sti
lret
cld
hlt
pop
ljmp
subb
adc
jg
dec
dec
mov
gs
or
mov
in
pop
jle
sub
aad
cmpsl
sbb
dec
mov
loopne
push
xchg
scas
lea
and
psrlq
or
mov
stc
pop
bound
movsl
nop
into
sbb
sub
jb
cltd
arpl
call
dec
cmp
cmpsb
fldenv
xor
push
out
aas
test
and
imul
pop
push
sub
add
aaa
or
mov
fstps
in
push
stc
roll
pop
mov
xor
mov
jp
incb
shrl
sahf
sub
pushf
ret
adc
imul
pusha
push
jnp
xor
add
jmp
xchg
in
call
fnstcw
xchg
mov
aam
mov
es
jae
pop
cmp
push
jmp
mov
lods
pop
out
add
lock
sbb
ss
in
dec
fldcw
lds
mov
or
inc
arpl
sbb
sub
jecxz
fldt
inc
and
adc
xor
fs
mov
xchg
mov
test
xchg
in
leave
inc
mov
mov
push
jmp
lds
xor
je
ret
rol
xor
mov
push
out
pop
add
jg
movsb
insl
pusha
loop
pushf
xchg
cmp
pop
imull
lret
jae
ja
dec
cld
call
stos
test
leave
cmpsb
leave
jmp
mov
xor
in
mov
lock
in
mov
daa
xchg
push
out
fisubrs
mov
cmp
sti
cmp
pop
mov
jno
inc
xchg
test
inc
adc
rcl
stos
mov
push
fcomp
pop
and
push
enter
fwait
add
movsb
xchg
pusha
decb
push
cld
cmp
gs
sbb
pop
or
insb
out
test
push
lcall
test
fstps
lods
push
repz
adc
roll
xor
addb
pusha
jo
sub
or
sarb
or
test
cmp
adc
mov
mov
loope
repz
cmpb
int3
xor
stos
and
imul
cmp
into
gs
xor
xlat
inc
lahf
mov
mov
lret
jae
xchg
jb
fwait
or
rcrb
dec
enter
or
pusha
adcb
repnz
out
call
lea
repz
jo
outsl
push
sti
add
and
add
cmpsb
les
insl
cli
int3
push
pop
andb
insb
test
lock
or
xor
mov
test
sete
sbb
lcall
adc
lea
loop
add
or
mov
mov
fwait
xor
mov
fucomi
imul
xorb
jmp
push
jle
ret
mov
mov
push
jg
adc
mov
in
ret
fldcw
mov
cmpsl
lock
cmpsl
leave
sarl
lods
add
mov
xor
sub
mov
mov
mov
cmp
cmp
fadds
dec
inc
test
repz
adc
push
leave
ds
push
ja
bound
and
ret
mov
call
testl
inc
push
test
dec
daa
stc
sahf
pop
insb
jne
repz
pushf
pushf
gs
mov
lret
mov
mov
pop
sbb
sbb
pop
repz
subl
sub
out
jmp
xchg
cmc
ljmp
mov
loope
addb
mov
dec
mov
in
push
addr16
out
mov
cmpsl
lcall
cs
fsubs
mov
push
in
or
add
mov
sbb
xchg
aaa
movsl
stc
pop
pop
sbb
push
pop
mov
add
repz
sub
add
dec
cmp
add
aas
mov
sub
leave
ja
nop
mov
mov
fldenv
cli
xor
and
ret
dec
fcmovb
pusha
adc
mov
pusha
or
add
push
dec
mov
notb
add
push
sbbl
mov
lahf
jae
pop
mov
push
push
mul
lfs
dec
scas
push
stos
xor
faddl
push
faddl
fsubrp
ja
push
mov
jecxz
cmp
push
stos
cmp
add
icebp
rclb
jne
inc
je
aaa
aaa
push
call
add
pop
inc
iret
loop
add
push
mov
push
mov
cmp
pop
adc
aaa
push
dec
icebp
loopne
xchg
bswap
add
sbb
add
arpl
jl
push
or
mov
xchg
jne
mov
or
loope
inc
xchg
mov
mov
clc
test
insl
jns
mov
mov
dec
sbb
popa
shlb
mov
dec
lea
lock
inc
mov
xlat
mov
push
sub
test
loopne
inc
loopne
jbe
add
fcmovnu
jnp
roll
sub
add
mov
push
push
data16
sub
cmp
inc
cmp
test
outsb
leave
jnp
sub
mov
dec
mov
and
fstpt
jbe
iret
pop
dec
stc
jecxz
mov
outsb
lods
jl
out
in
into
jo
in
enter
pop
stc
lods
icebp
adc
les
je
inc
lahf
sbb
push
jle
lret
call
jns
xchg
inc
decb
and
sub
add
popf
data16
push
out
xor
and
and
je
jbe
inc
mov
les
shlb
adc
xor
push
shll
xlat
jp
jge
andb
pop
mov
cwtl
fisubs
adc
mov
jg
aas
mov
stos
adc
mov
pop
stc
inc
jg
std
xchg
icebp
add
aad
ss
jg
ljmp
pshufw
push
wrmsr
les
ucomiss
pop
add
sbb
inc
aam
mov
icebp
add
jb
adc
pop
adc
mov
mov
je
fidivl
lods
inc
add
outsl
les
xor
xchg
mov
sbb
and
out
and
pop
hlt
mov
jg
push
ror
adc
xor
jb
popf
out
push
adc
mov
int3
aam
push
cltd
std
ds
dec
fs
sub
push
adc
and
xor
pusha
pop
mov
int3
xchg
xor
add
je
stos
cs
xchg
mov
xor
mov
pop
hlt
xchg
sbb
push
jae
jnp
jle
enter
lret
adc
push
je
sub
leave
and
mov
aam
in
push
sarl
loop
jb
leave
enter
push
inc
das
rcl
pop
cwtl
jge
shlb
cmp
lahf
sarb
ja
out
sbb
mov
cli
mov
leave
loop
cli
sub
push
test
ds
and
mov
mov
push
jle
xor
outsl
xor
push
push
cmp
inc
xchg
mov
rorb
jne
mov
cmpsl
cwtl
add
jl
jnp
cmp
xor
jmp
dec
and
mov
sub
sahf
inc
rcrb
dec
jne
nop
fadds
dec
adc
xor
cmp
push
dec
test
mov
inc
mov
aaa
xor
pop
adcb
add
repz
fwait
ret
int
or
add
fidivs
cmp
mov
xchg
lods
sbb
hlt
lea
mov
jb
xor
xchg
cmpsl
sbb
add
mov
pop
stc
in
or
jno
mov
xchg
shl
inc
jnp
inc
fstpl
jns
adc
inc
mov
cmp
xchg
mov
roll
jp
and
add
arpl
jnp
aas
push
jge
int
aas
xor
fidivrl
jg
fmull
inc
xchg
mull
jno
pop
loope
pop
mov
mov
mov
pop
sti
mov
inc
mov
inc
ret
sbb
js
shl
out
das
push
iret
test
jge
hlt
cltd
inc
dec
mov
fdivl
fcoml
ret
aaa
rolb
pop
insb
mov
mov
in
sbb
adc
daa
aam
mov
ror
adc
dec
sub
mov
jecxz
pop
pop
pop
xorb
icebp
and
mov
mov
dec
mov
dec
dec
pop
adc
fwait
and
fs
sub
ret
push
dec
mov
das
popf
loope
mov
fwait
or
repz
adc
scas
adc
mov
or
mov
mov
pushf
push
xor
jge
or
and
jns
ror
pusha
push
pop
aaa
imul
jo
xchg
adc
mov
shll
stos
mov
cmc
inc
mov
call
popa
subb
fcmove
ds
out
imul
imul
sbbb
mul
jp
xor
out
mov
movzwl
sbb
bound
sbb
lahf
jge
fs
je
addr16
aad
pop
jns
and
mov
ds
lods
fwait
lods
je
xor
ljmp
jbe
push
repz
mov
movsb
shlb
movsl
pop
repnz
jecxz
xchg
mov
jb
dec
add
lea
jns
inc
test
outsb
popf
iret
aaa
dec
mov
sbb
pop
addr16
enter
ret
int
and
in
jge
and
in
add
push
pop
and
adc
mov
inc
push
out
push
mov
jg
daa
xchg
aaa
movsl
cltd
add
sub
repz
mov
mov
shll
inc
addr16
ds
cmp
int3
add
bound
dec
cwtl
pop
data16
inc
xor
sbb
jns
mov
dec
rcl
shll
sbbb
rcrl
xchg
fldcw
lahf
rclb
cld
adc
inc
scas
sub
pop
rcl
push
pop
clc
mov
shl
lcall
arpl
lcall
jecxz
js
xor
cld
mov
mov
cmp
inc
xor
dec
data16
movsb
repz
xor
stos
mov
jl
lret
popa
jno
pushf
pusha
aad
jns
js
jle
push
es
aam
cli
cs
stos
sbb
mov
addr16
insl
sahf
xor
icebp
das
jmp
lret
fisubs
jnp
orl
aaa
cmp
scas
sub
nop
jmp
aad
adcb
mov
lcall
mov
and
aam
rol
fwait
xchg
cmp
mov
mov
cmpsb
push
cmp
fcomps
add
cmp
mov
loope
outsl
xchg
clc
inc
js
repz
add
jp
pop
lret
jecxz
ljmp
add
push
cmp
jne
xor
lahf
loop
dec
lcall
shll
mov
cmp
loope
pop
mov
cli
nop
int
leave
jne
jae
xlat
pop
xor
mov
sbb
mov
loop
xchg
insl
test
shll
jecxz
ret
mov
out
faddl
cmp
xor
imul
nop
fldl
sub
test
jle
data16
push
cmp
push
xchg
lret
add
push
sti
cli
les
pop
ficoms
mov
xorl
inc
xor
std
inc
clc
xchg
daa
cmpsb
fildll
mov
mov
dec
push
cs
cmp
xchg
lods
mov
fadds
pop
loope
lods
adc
outsl
xchg
pushf
fadds
jns
xlat
clc
rcrb
les
shrb
rcrb
in
inc
inc
test
cmp
cmp
ret
jecxz
push
lods
sub
dec
mov
test
add
cmp
les
shlb
mov
aad
stos
popl
sub
outsl
popa
mov
jae
xchg
fwait
pop
jbe
mov
hlt
mov
imul
imul
jo
dec
sbb
jb
xor
push
add
mov
sub
xor
pop
ret
dec
negb
sbb
scas
popf
mov
sbb
jg
int
shl
and
cmp
mov
jge
fisubrs
push
mov
imul
sbbb
sub
add
aaa
imul
mov
fildll
daa
sbb
icebp
mov
fisttps
or
mov
pop
test
or
hlt
and
push
jae
jo
push
mov
push
add
out
repz
arpl
pop
stc
xchg
or
adc
cltd
xchg
fwait
mov
xchg
decl
add
mov
jp
or
cmc
mov
xlat
es
fsubl
test
mov
xchg
cmp
pop
addl
out
ficompl
rol
adc
scas
out
aad
adc
mov
loope
sbb
mov
aas
jne
xchg
inc
movsb
mov
dec
push
dec
js
dec
int3
loopne
mov
ror
or
pop
pop
pop
jmp
push
sub
leave
adc
rolb
sbb
lcall
and
add
mov
scas
xchg
xchg
mov
adc
int
daa
xchg
pushf
jne
mul
out
pop
popa
sti
popa
fstp
lds
std
push
icebp
out
xchg
popf
sbb
push
or
ds
mov
iret
mov
mov
dec
sbb
mov
mov
mov
and
addr16
cmp
xor
mov
pop
dec
mov
jnp
pop
stos
jecxz
mov
scas
push
sahf
cmp
ret
sub
xchg
dec
jb
sbb
and
mov
ficompl
add
xor
les
jle
adc
inc
sub
or
sub
movsb
mov
xor
mov
sahf
xor
orb
and
mov
fsubl
adc
lods
xchg
sub
daa
fisubs
outsl
mov
data16
cli
orb
mov
jge
in
rclb
data16
cmp
aad
rcrb
xor
jle
inc
dec
xchg
xlat
in
out
push
fldcw
and
lods
or
cmp
fcompp
sbb
cmp
sbb
xor
nop
jnp
daa
into
sbb
negl
cwtl
sbb
pavgw
xor
or
outsb
loopne
push
jae
icebp
dec
or
xchg
push
out
inc
iret
mov
fisttpl
test
inc
mov
fildl
jno
jno
push
int
sbb
jbe
addr16
lret
loopne
leave
mov
sbb
sahf
test
or
cs
pushf
pop
push
cmp
xor
and
sbb
ret
push
lods
pop
mov
xlat
inc
pop
into
sti
mov
push
cmp
insb
push
pop
dec
dec
dec
stos
repz
nop
add
std
rclb
outsb
out
in
outsb
jns
adc
dec
mov
adc
xor
pop
adc
inc
sub
lret
lret
push
inc
jbe
xchg
add
add
andl
loopne
js
inc
inc
dec
loop
or
pop
push
mov
out
enter
ret
pushl
lret
and
cmpsl
aam
xchg
jbe
shrb
dec
jnp
mov
loop
ret
xchg
ret
sub
adc
int3
mov
jo
pcmpgtb
push
adc
mov
jbe
fstpt
or
and
mov
dec
xchg
inc
push
pop
nop
fcomip
andl
scas
inc
daa
in
testl
or
out
cvttps2pi
loopne
std
fbstp
cmc
adc
call
fs
loop
mov
mov
orl
cmp
sarl
cmpsb
push
lcall
mov
bound
sbb
or
jae
shl
andb
nop
push
imul
ss
ljmp
int3
add
roll
fists
fcoms
or
in
hlt
shlb
pop
lcall
fsts
in
jno
fldl
jo
and
add
mov
pop
xchg
mov
inc
addb
dec
add
mov
xor
movl
out
jnp
in
fwait
push
fildll
das
xchg
ja
xchg
mov
lcall
fs
ljmp
sub
push
decl
popa
sub
outsb
push
scas
mov
sbb
aas
mov
rol
jmp
test
sahf
adc
inc
pop
sbb
mov
aas
shr
lock
push
cli
std
inc
inc
dec
add
jne
sub
enter
jp
add
mov
arpl
loope
loop
test
inc
adc
xchg
es
enter
sub
sti
movsb
ret
pop
aad
xor
or
add
mov
cmpsl
xor
sub
add
mov
push
and
or
jmp
mov
iret
mov
cmpsb
jmp
cmp
jl
push
cwtl
cmpsb
stos
lea
test
pop
sub
jmp
mov
push
lods
adc
mov
xchg
push
outsl
inc
mov
pmuludq
imull
fwait
xor
jo
cwtl
scas
sbb
hlt
push
push
stc
lods
pop
add
fildl
jno
leave
jg
mov
or
stos
decl
pop
imul
push
jae
adc
cli
push
mov
mov
aam
aas
mov
mov
les
in
sub
mov
movsl
shll
dec
btr
je
mov
sbb
lea
xor
int3
sbb
sbb
cli
jp
shrl
test
mov
cmp
cmp
sub
push
rclb
fisttps
mov
pusha
dec
push
or
or
jecxz
mov
cltd
xchg
stos
push
loop
add
roll
jmp
push
pop
in
outsb
in
dec
aas
add
lods
xlat
not
outsb
dec
in
je
or
or
fdivrs
incl
xlat
mov
and
setb
push
imul
push
pop
testb
mov
cmp
mov
push
sub
shrb
fsubl
cmpsl
dec
push
out
adc
inc
enter
jge
rcrl
data16
xchg
mov
add
movsl
xchg
popf
add
insl
out
in
sub
jmp
and
fwait
sbb
inc
and
jg
jae
jle
push
adc
mov
sub
or
cmpsb
mov
mov
shll
sahf
ds
pusha
test
inc
sub
xchg
adc
or
mov
jge
movsl
push
jo
loop
stos
mov
or
ljmp
mov
xor
cltd
mov
cwtl
adc
mov
rorb
in
add
repz
es
add
les
xchg
aaa
jmp
ds
jnp
fcompl
pop
dec
leave
mov
test
nop
push
jnp
sbb
rol
sub
inc
in
pusha
cmc
aam
inc
out
jb
rclb
jns
pop
cmpsb
sub
lahf
cmpsl
test
xor
or
sahf
movsb
adc
pop
decl
add
xor
inc
push
inc
pop
rcrb
mov
ds
es
mov
movsl
into
mov
and
aaa
mov
add
pop
push
stc
int
xchg
xor
scas
out
jae
inc
mov
jmp
xor
jbe
cmpsl
cmp
or
lret
out
out
cld
adc
fildll
arpl
cs
xchg
enter
into
imul
pop
add
pop
xor
xchg
mov
adc
sbbl
mov
or
gs
fsubrs
cmp
je
lock
gs
mov
pop
call
shrb
dec
xor
inc
dec
add
rcrl
hlt
aaa
lock
mov
mov
fwait
bound
mov
add
pop
les
add
out
mov
xchg
xor
jae
call
inc
cmp
adc
xchg
loop
xchg
sub
das
jno
ja
test
fs
in
jecxz
popf
ljmp
scas
or
dec
pop
xchg
nop
rcrl
mov
cmc
pop
xor
add
ret
or
inc
jge
dec
loopne
outsb
add
push
or
push
or
data16
pop
icebp
data16
or
das
mov
xchg
ret
jge
jecxz
shrb
adc
xchg
les
pop
xchg
fimull
xchg
xchg
pop
arpl
orl
add
scas
pop
out
scas
sbb
js
fiaddl
inc
into
loop
rorb
pop
je
fwait
pop
pminub
loop
mov
adc
cmpsb
test
ret
add
fmull
mov
fstpt
adc
shrb
lods
rcll
das
enter
or
push
add
push
push
dec
shr
ss
or
ljmp
sbb
pop
add
not
and
les
popa
xchg
daa
mov
ljmp
pop
cmpsl
mov
shrl
xchg
lods
imul
xchg
ja
aam
sbb
jbe
repnz
movsl
in
inc
jle
add
movsl
movsb
pop
pop
xor
call
mov
aam
ret
dec
fwait
sub
jecxz
mov
into
xor
in
jecxz
je
xchg
ljmp
lcall
sbb
xchg
xchg
push
xchg
in
lods
and
xchg
cmp
inc
sbb
xchg
inc
cmc
sub
inc
in
xchg
push
test
in
stos
add
adc
add
jno
and
mov
pushf
mov
jl
mov
fldl
aaa
mov
movsb
sub
and
dec
in
fstps
jp
mov
sbb
xor
mulb
imul
iret
filds
shll
xor
repz
sub
fldcw
lods
or
insl
push
sub
pop
cmp
mov
dec
cmc
nop
inc
inc
mov
std
push
aam
fsubrs
cs
mov
jne
pop
xchg
mov
cmpsb
and
adc
sbb
mov
inc
sbb
mov
enter
loop
out
or
test
pop
fwait
lcall
fsubrp
into
aad
nop
dec
and
test
mov
testb
and
jge
mov
aad
nop
push
lahf
adc
call
out
lea
and
or
shrl
mov
ja
test
test
push
xchg
and
push
cmp
xchg
loope
out
testb
xor
jecxz
scas
popf
push
int
lods
scas
movsl
inc
push
and
scas
aam
push
push
lcall
push
or
push
aas
pop
fistl
fs
pop
adc
movsb
and
adc
mov
push
push
jno
sub
jbe
test
lret
test
mov
xchg
lret
mov
cs
xchg
xor
cmpsb
loop
icebp
mov
jae
notl
sub
adc
call
js
lock
cltd
and
popf
ja
fldt
divl
add
popf
sub
adc
icebp
repnz
pop
add
faddl
dec
les
je
jo
jg
mov
stc
or
mov
push
or
enter
sub
xchg
sbb
jecxz
ljmp
push
data16
loope
pop
mov
push
adc
cmp
insl
fstps
sbb
mov
add
movsb
xchg
int3
fstps
pop
inc
push
inc
or
stos
jle
out
fisttpl
lahf
push
out
pop
int
loopne
mov
xor
inc
add
jns
ret
pop
pop
pop
int3
add
into
test
fldenv
lods
push
mov
pop
test
cwtl
push
jbe
sub
movsl
stos
repz
inc
lock
fldl
cmp
mov
popa
add
xchg
pop
shrb
in
mov
push
mov
pop
repnz
out
test
mov
push
fs
fnstsw
adc
xchg
dec
sub
or
cmp
fwait
int
sbbl
and
and
push
fists
daa
fiaddl
int3
xor
pop
js
cmc
jne
xor
xchg
gs
hlt
ja
xchg
pop
js
movl
xor
je
adc
cmp
adc
push
mov
sahf
inc
mov
xor
or
les
and
mov
dec
inc
mov
push
insb
cmp
ret
shlb
dec
cmp
or
arpl
add
arpl
in
inc
icebp
movsb
lock
fnstenv
in
scas
pop
aam
cld
adc
xor
sarl
fmull
mov
push
jo
mov
fcmove
xchg
lahf
cltd
sub
pop
loope
je
fstpt
repz
lss
pop
dec
mov
fs
movsl
mov
pop
insl
and
push
push
inc
pop
fldenv
dec
mov
pop
jno
ljmp
pop
aad
inc
jne
mov
adc
out
push
dec
cmp
sbb
pop
imul
imul
daa
push
sbb
push
fidivs
cmp
pop
cmp
adc
movsb
lret
or
mov
iret
rolb
fdivs
and
jmp
inc
into
fnstcw
mov
popa
inc
sbb
cmc
add
sub
lds
cld
push
popa
inc
shlb
lret
je
ja
incl
pop
or
cltd
lods
push
cmpsl
into
cs
add
mov
fidivl
xchg
rcll
imul
loope
xor
mov
mov
shr
push
sub
adc
sub
outsl
push
in
out
pop
cmp
cmpsl
sub
int3
sahf
push
jp
cmc
test
scas
daa
xchg
sub
movl
lock
aaa
outsb
push
xchg
cltd
mov
jns
jmp
jae
insb
scas
mov
sub
xchg
or
lret
sub
and
fdivr
insb
or
aas
mov
loopne
lock
fidivl
add
jne
sti
movsl
push
mov
sbb
mov
fidivrl
cmp
lds
lods
xchg
js
push
xchg
jno
fcoms
mov
xorb
mov
sub
sub
icebp
dec
test
arpl
fdivrs
adc
xchg
dec
jl
mov
jo
fldl
push
or
out
out
dec
lea
aaa
xchg
xorl
dec
jmp
add
fnstenv
push
pop
add
repz
fisttpll
push
cmp
mov
cli
mov
into
or
add
les
sbb
arpl
call
and
pop
loopne
std
aas
lods
sub
sub
out
enter
ds
fildl
mov
sub
xlat
inc
dec
enter
add
sub
divb
mov
pop
loope
fcmovnbe
frstor
mov
xchg
imul
jbe
stos
jg
and
mov
mov
in
lds
pop
stos
fcmovu
mov
xor
nop
lret
sub
xlat
or
xchg
lods
mov
mov
js
sti
orl
cltd
in
lock
cli
fistps
test
inc
cwtl
repnz
pop
xor
add
bnd
std
add
jg
jl
adc
sbb
jmp
push
ja
mov
sbb
jp
shll
adc
sahf
pop
pop
pop
std
test
jg
mov
pop
or
xchg
push
pop
xor
sarl
cmp
in
push
sti
cmp
adc
jae
mov
pop
xor
xor
js
out
jb
lock
ret
pop
mov
inc
jge
ljmp
mov
and
mov
lcall
mov
fmuls
jne
loopne
and
or
mov
push
cmp
mov
out
jne
jge
pop
add
ret
pop
push
repnz
sub
lock
dec
sbb
cwtl
pop
adcb
push
jbe
mov
pop
scas
aad
mov
or
mov
outsl
jl
pop
sbb
mov
mov
push
xchg
and
xchg
xchg
sub
bound
jno
inc
rcr
mov
mov
out
jb
mov
ljmp
js
and
negl
ja
xchg
jp
inc
fisubrs
lods
xor
ljmp
and
insb
fsts
aas
mov
jg
iret
aas
mov
jge
test
sub
push
adc
rorb
pop
mov
mov
sub
xlat
sahf
sbb
jmp
les
add
ljmp
dec
andb
add
mov
pop
ret
jmp
and
mov
xor
sub
ds
push
mov
mov
sub
xor
sub
dec
mov
add
cmc
dec
lret
aas
jne
daa
adc
aas
pop
shll
inc
inc
fcomps
out
inc
inc
xchg
icebp
mov
adc
pop
stc
fsubl
jb
sti
arpl
je
je
sub
pushf
es
mov
test
sarl
sub
cmpsl
es
lcall
sbb
sti
cltd
clc
pop
inc
dec
fcoms
jno
and
out
jmp
jmp
popa
push
xor
cmpsb
push
dec
idivb
inc
cmp
out
xlat
sahf
out
jns
fs
ja
pop
pop
aaa
mov
jecxz
ljmp
sub
mov
or
or
dec
mov
lret
xor
repz
outsl
es
shlb
ja
inc
std
adc
mov
fwait
insl
sub
xchg
incl
repz
lcall
jl
pop
fcompl
inc
movsb
jae
inc
jg
in
lret
frstor
out
fists
pop
cmpsl
mov
jle
cwtl
incl
push
push
dec
loope
lcall
lods
inc
loopne
rcl
jne
lret
mov
xchg
js
bound
cli
xor
or
add
lea
mov
xchg
jl
outsl
fldl
sub
adc
push
jecxz
push
in
xchg
mov
fstpl
cmpps
mov
ds
sahf
popf
pop
adc
arpl
es
shrl
movsl
sbb
dec
add
jne
lahf
int
sbb
push
cvtps2pi
pop
outsb
mov
adc
insb
mov
lods
fcomps
test
sarl
aaa
cld
cmp
std
imull
lods
mov
in
adc
fldenv
adc
clc
inc
inc
or
imul
mov
gs
jp
xchg
ds
cmp
mov
std
push
lret
rcrb
dec
sbb
pop
scas
orl
sub
insb
test
push
out
jp
xchg
sbb
popa
in
cld
decb
ljmp
pop
inc
add
fdivrl
pop
lcall
enter
sub
mov
test
clc
aam
fsubrs
mov
jg
ja
cmpsb
loopne
mov
lcall
pusha
inc
mov
loopne
adc
and
jno
jo
mov
xchg
call
mov
daa
and
sub
scas
inc
or
dec
movsl
and
hlt
dec
fdiv
loop
cld
and
adc
scas
pop
pop
outsl
mov
adc
mov
pop
loop
jbe
xchg
or
das
in
mov
je
mov
pop
push
mov
insl
je
inc
clc
aad
xchg
cmp
shr
sar
or
fisubrl
in
mov
push
pop
and
inc
loope
dec
stos
roll
add
movsb
push
or
add
xchg
insl
xor
call
xchg
pop
sub
mov
aad
aad
push
imul
fs
and
insl
into
mov
pop
daa
jae
movsb
mov
fsubl
ficoms
movsl
popf
add
stos
push
cmpb
call
pop
ret
sbb
in
xor
sub
inc
sub
or
inc
jb
jb
ljmp
aaa
xchg
bound
pop
jmp
lret
adc
test
mov
pop
add
ret
pop
mov
dec
stos
scas
fs
loope
popf
ja
aaa
mov
repz
and
out
mov
fstp
data16
push
subb
mov
scas
xor
les
and
addr16
push
pop
inc
test
stos
ja
stos
push
jg
jb
pop
adc
fsub
mov
add
push
test
adc
mov
push
inc
xchg
adc
mov
sub
jne
mov
cmpsb
and
inc
xchg
adc
add
scas
mov
push
push
sbb
inc
dec
mov
lcall
sbb
lahf
and
test
lds
out
arpl
and
and
add
cmp
push
jo
and
jl
or
inc
mov
andb
inc
or
je
push
cmp
xchg
mov
xlat
std
cmovnp
adc
repz
pop
adc
cs
js
xorl
sbb
jbe
ret
dec
sub
mov
cmp
xor
int
in
mov
push
inc
push
pusha
lcall
inc
pop
xchg
mov
and
push
xchg
sub
je
bound
subb
aaa
sub
sub
aaa
sbbl
push
cmpsl
adc
in
dec
mov
addr16
dec
or
or
sub
test
into
aaa
add
xchg
xchg
ss
jb
je
in
push
or
xor
or
lahf
rcl
cmp
pop
mov
icebp
push
call
fisttpl
shll
xchg
dec
push
int3
stos
mov
aas
clc
outsl
mov
mov
ss
lods
int3
cltd
jae
jge
jp
fisubl
lea
mov
ja
cmpb
arpl
adc
loopne
sub
bound
push
fiadds
lret
cld
dec
jnp
jb
sub
mov
push
jl
fisubs
inc
sbb
inc
push
cmpsb
lods
leave
jle
push
or
jo
jp
nop
jp
test
cmpsb
lods
inc
jno
sahf
loope
adc
lods
loopne
xor
sti
pop
stc
sbb
xchg
stc
cmpsb
jo
cltd
lods
loopne
mov
mov
sbb
rcr
inc
xor
sbb
cwtl
shll
bound
in
aad
aad
mov
aad
push
add
jp
mov
pop
out
and
mov
add
push
dec
mov
dec
rorb
popf
dec
dec
pusha
test
dec
jmp
sbb
rcrb
jmp
shl
add
rcrb
sbb
ljmp
cmpsb
mov
movsb
cmp
sbb
or
add
mov
fmul
mov
sub
mov
pop
scas
pop
lcall
add
mov
mov
movsl
cmpsl
popf
loop
lds
lods
out
mov
add
popa
and
xlat
cmp
pushf
jne
push
push
xlat
sub
inc
sub
sti
loop
jle
fsubrl
xchg
cmp
xor
xchg
jbe
fcomi
lahf
lret
dec
icebp
pop
mov
cld
dec
jmp
pop
jne
ja
jl
das
in
push
xchg
sub
incb
fisubrs
repz
adc
mov
sub
xor
test
adc
push
daa
sbb
xor
je
filds
or
jecxz
fmuls
test
and
clc
ret
cmp
in
mov
in
in
cmpsl
aad
push
xchg
incb
mov
inc
xchg
in
jge
xchg
insb
in
rorl
mov
mov
pop
jo
xchg
pop
push
xchg
inc
cmpsl
fistpll
and
testb
mov
notl
js
cmp
pop
pop
push
leave
and
fldl
shrb
dec
cwtl
adc
ds
pushf
dec
dec
std
add
out
pminsw
test
sub
aam
dec
jle
fdivrp
loope
adc
cltd
popa
push
mov
cmp
xor
xor
pop
jg
cmpsl
fadd
hlt
nop
push
xor
pop
pop
pop
je
xlat
fwait
aas
inc
int
and
or
fs
gs
stos
pop
stc
in
mov
sbb
call
test
cmp
push
lret
jg
sahf
cmc
xchg
push
ljmp
leave
aad
ja
xchg
lahf
or
lock
mov
push
int3
pop
mov
cld
enter
pop
in
cmp
movsb
sub
jns
and
clc
es
add
lret
mov
inc
cmp
movsl
addr16
add
btr
popa
sub
or
or
outsl
and
insl
cmp
test
cmp
xor
hlt
jnp
call
inc
xchg
testb
mov
and
negl
xor
or
cmp
xor
and
in
mov
xchg
in
push
jp
ret
dec
cltd
sub
cmp
pop
inc
les
dec
mov
fsts
inc
push
stos
mov
leave
jmp
push
fbld
dec
stc
cmpsb
or
ss
aad
and
mov
xor
pusha
adc
sub
and
inc
lret
mov
dec
shrl
dec
imul
fs
inc
cmp
or
pop
push
xchg
shrl
adc
inc
jp
cwtl
pop
test
mov
pop
out
pop
mov
xchg
into
aaa
pop
ljmp
mov
icebp
sbb
stos
push
int3
cmp
sbb
or
scas
xor
push
xor
push
inc
mov
shl
and
repnz
mov
dec
sub
out
pop
repnz
dec
mov
js
cmc
insb
and
in
cmp
xor
loopne
push
in
sbb
sahf
js
xchg
xchg
ja
or
insl
add
xchg
dec
jle
mov
lock
mov
cwtl
loopne
aad
sbbb
ljmp
xor
jg
leave
push
mov
xor
mov
jmp
xchg
mov
mov
xchg
pop
cmp
fldt
lds
mov
cwtl
adc
jp
push
call
mov
xchg
or
mov
test
add
push
push
jno
loop
mov
mov
in
xchg
sbb
aaa
mov
dec
addr16
movsb
xor
in
popf
dec
and
dec
mov
imul
rorl
int
int
call
shrb
out
incl
bound
xor
cltd
xchg
xor
aam
or
fstpl
dec
es
jne
inc
and
sub
xchg
ficomps
and
in
hlt
jg
push
les
sub
jo
dec
dec
sub
notb
sub
xchg
jl
dec
push
data16
sbb
inc
push
push
stc
or
movsb
mov
adc
adc
leave
pushf
mov
adc
leave
adc
fs
mov
cmpsl
add
push
lcall
shrb
dec
push
xchg
mov
int
jp
sbb
and
aaa
dec
hlt
xor
rorl
inc
aas
daa
repz
pushf
cmp
ret
sub
pop
cmp
cmpsb
incb
xchg
cmpsb
outsl
lret
sahf
push
shlb
jb
pop
fmuls
cmp
push
fidivl
or
addb
fists
jno
and
and
xchg
out
lret
sbb
push
and
sbb
arpl
cmovl
add
sbb
std
test
jo
in
pop
jb
icebp
sbb
inc
test
push
ret
mov
sub
enter
into
out
push
fisttpll
jge
out
add
dec
jae
dec
out
fmull
xor
cld
xlat
les
inc
out
fiaddl
jo
add
std
pop
push
dec
mov
add
mov
mov
cmp
mov
mov
sub
sub
jne
outsb
inc
xchg
inc
push
rclb
test
std
fsubl
loopne
mull
mov
inc
sbb
push
das
adc
loopne
arpl
popaw
fidivs
in
sub
mov
dec
mov
mov
jnp
jp
sbb
push
dec
movsl
clc
cmp
pop
pop
aas
add
pop
pushf
xor
xchg
adc
mov
js
rolb
mov
gs
push
sbbl
mov
xchg
and
adc
mov
loop
mov
js
fwait
cmpsl
fdivl
fs
enter
jmp
pushf
insb
pop
jmp
jg
or
shll
lea
jo
mov
adc
sti
push
push
cmp
aad
push
jno
inc
es
movsl
loope
mov
je
xor
xchg
fbstp
scas
pusha
fcmovb
jae
add
cmp
fidivrl
movsb
mov
es
lods
sarl
push
ret
stc
into
mov
loope
mov
push
sub
imul
lods
fidivrl
in
leave
popf
push
ficompl
mov
pop
ret
xchg
xchg
push
push
push
fdivrl
push
in
sub
or
inc
pop
or
test
fiadds
les
push
pop
adcb
ficomps
andl
or
push
inc
cmp
inc
in
fildll
pop
sbb
xor
ficoml
add
stc
mov
xor
fisubrs
mov
lcall
icebp
fcomi
cmp
fisttpl
std
mov
mov
into
and
push
pusha
lea
mov
das
sahf
sbb
or
lcall
loop
fwait
sub
scas
sub
fcoml
push
or
sub
xchg
mov
jmp
dec
lods
dec
or
xchg
imul
popf
movsl
repz
fwait
rcr
dec
add
push
mov
sbb
push
jno
in
cwtl
das
inc
or
jbe
cmp
mov
or
movsb
imul
je
adc
cwtl
sub
idivb
push
dec
inc
hlt
mov
ret
sarl
mov
clc
int3
mov
movsl
in
addr16
cmp
out
xchg
and
and
xlat
insb
cmp
stos
mov
mov
or
inc
int3
ficoms
test
imul
addr16
push
bound
sub
es
negb
mov
fcoml
cmpl
jge
rclb
lret
mov
out
and
jle
sub
xlat
add
push
or
add
mov
in
mov
inc
pop
popf
jecxz
cmp
in
inc
cmp
mov
lea
cld
cmc
popf
les
inc
fstpt
fisubrl
je
loopne
push
xchg
pop
shll
aam
mov
mov
jns
or
mov
add
mov
lods
and
push
pop
lahf
xchg
xor
leave
push
inc
andl
and
add
fisubl
push
sub
sbb
pop
cmpsl
jecxz
mov
movsb
push
nop
jae
sbb
std
push
or
cltd
loopne
jns
or
lret
push
cwtl
sub
lock
fwait
daa
xor
push
push
aaa
fistps
mov
repnz
sub
lea
sub
mov
loopne
and
push
sbb
int
inc
sub
test
xorb
inc
sub
loop
pop
fdivrs
dec
lahf
push
lcall
dec
popf
lods
inc
pop
pop
sub
into
mov
hlt
or
mov
ficoms
cmp
shlb
cltd
cmc
mov
scas
mov
mov
hlt
sbb
jecxz
repnz
xchg
hlt
mov
sub
sub
jge
imul
test
orb
ror
sahf
dec
sub
into
idivl
pop
cs
xor
ret
dec
decb
cld
loopne
push
rcrl
jg
push
pop
repz
dec
add
icebp
add
movsb
out
arpl
xchg
mov
nop
adc
xchg
cmp
in
mov
sti
int
test
in
and
add
sbb
xor
mov
hlt
out
cmp
mov
loop
mov
shlb
shll
ret
mov
shlb
loopw
and
sbb
jge
jb
hlt
mov
mov
stos
int3
sbb
rolb
test
andb
sub
add
std
jmp
xor
or
aam
mov
sarb
push
jl
insl
sarl
inc
jecxz
into
leave
mov
js
cli
and
adc
imul
or
jmp
movsb
in
push
daa
jle
mov
mov
push
and
cmc
sub
test
push
aas
or
dec
std
rcrl
mov
movsl
scas
sahf
pop
cltd
jmp
mov
lea
out
lcall
pop
cmp
rorb
es
pop
xlat
jp
ds
or
fxch
int3
test
lods
pop
mov
adc
sub
mov
sub
push
cmp
xchg
jge
cltd
push
push
imul
push
fadd
pop
xor
adc
hlt
xor
mov
sbb
mov
push
mov
and
hlt
push
jmp
or
or
add
adc
test
push
scas
shll
push
aaa
ds
add
jo
jl
cmp
xlat
insl
mov
pop
mov
ficoms
cmp
ss
add
gs
scas
xchg
fadd
scas
mov
lock
adc
mov
das
adc
imul
sarl
fnop
sub
sbb
leave
daa
mov
popa
fstpl
stc
mov
sub
push
xlat
mov
mov
sti
shr
ficoml
cli
xor
repz
or
call
mov
push
mov
mov
adc
shll
out
adcb
and
sbb
lret
mov
add
pop
adc
imul
xchg
push
push
call
mov
int
bound
fidivrs
cmc
outsl
mov
jno
xchg
add
aaa
ss
or
jbe
xor
add
out
jmp
aad
add
xor
xor
je
sub
and
fldl
in
sbb
adc
or
call
test
pop
out
daa
cli
arpl
sbb
fs
dec
cld
push
sbb
mov
scas
xchg
inc
popw
lock
push
loop
es
les
nop
xchg
lret
cmp
pop
lods
pop
movsb
fs
or
jbe
fadds
jbe
in
bound
popf
and
and
popa
mov
or
cmp
sti
jne
mov
mov
cmpsb
mov
add
add
ss
push
push
or
mov
fnsave
aaa
cmc
jmp
cmc
or
mov
rcr
jmp
notb
mov
mov
cld
xor
iret
xchg
icebp
enter
loop
int3
mov
pop
and
cmc
cltd
mov
xor
loope
xchg
mov
push
xchg
jg
cmp
or
sti
push
sbb
dec
pop
into
xor
pop
fs
lods
lahf
mov
outsb
movsb
imul
dec
lea
lret
mov
pop
pop
mov
les
fstpl
sub
mov
neg
dec
and
les
inc
jno
negl
ljmp
faddl
into
lcall
cmc
adc
lcall
inc
rcl
mov
lods
ss
or
in
and
push
daa
mov
jmp
adc
jge
xchg
int
inc
out
ret
movsb
dec
push
push
push
push
inc
lret
push
mov
enter
pop
dec
leave
inc
arpl
jp
mov
pop
sub
mov
rclb
push
dec
repnz
or
mov
rcl
lret
adcl
mov
inc
jae
scas
sbb
mov
push
daa
loope
xor
mov
dec
pop
sbb
push
movb
pop
mov
or
adc
lahf
inc
out
mov
shl
jbe
xor
ret
faddl
pushf
dec
dec
mov
dec
and
pop
sar
lods
in
mov
mov
repnz
jns
jmp
fisubrs
add
lods
pop
pop
outsb
push
xchg
pusha
and
fiaddl
xor
xor
loopne
cmpsl
fcomps
ja
add
movsb
sbb
sbb
adc
lahf
mov
cmp
inc
pusha
adc
std
mov
fisubs
data16
push
fstps
jmp
inc
sub
mov
ret
and
std
inc
mov
inc
push
inc
fmull
cmp
sbb
daa
xchg
lock
cmpb
mov
fstl
add
ds
adc
push
cmp
xchg
ret
xor
mov
inc
cli
sub
sbb
std
and
push
pop
inc
jp
jo
repz
jle
push
dec
pusha
arpl
inc
out
test
outsb
mov
mov
xor
and
pop
loope
adc
jg
hlt
jb
mov
dec
lret
adc
negl
xorl
mov
outsb
dec
pushf
cwtl
pop
test
lcall
es
jl
sub
push
and
pop
stos
fcomps
andl
sti
insl
mov
mov
or
or
jmp
std
in
inc
mov
inc
dec
mov
repz
mov
lahf
sub
ss
leave
jg
out
sub
lds
xchg
pop
add
scas
xlat
pop
mov
mov
mov
xlat
in
jle
loopne
mov
das
roll
mov
add
cmpl
push
ss
std
outsb
fidivl
outsl
frstor
ss
mov
sub
push
negb
jecxz
imul
adc
cmp
xor
mov
pop
adc
sub
leave
inc
xchg
sub
data16
loopne
cmpsb
fs
add
xchg
data16
sub
lret
stos
or
cmp
mov
inc
repnz
push
dec
pop
push
dec
mov
sub
jbe
roll
addr16
cmpsl
pop
push
cltd
cmp
or
pop
inc
jmp
std
enter
lret
stos
ds
shlb
xchg
out
sbb
mov
sti
cmp
cmpsb
push
cmp
testl
lods
icebp
ret
fists
mov
xchg
sbb
jne
mov
mov
pop
lret
lea
loopne
jmp
sub
xchg
sub
and
imul
pop
xor
in
mov
ffree
pop
std
insb
dec
loope
js
aaa
mov
loopne,pt
add
scas
icebp
lds
scas
push
jmp
inc
ljmp
cli
into
cli
inc
push
xchg
scas
popa
insl
cmp
sahf
mov
movsb
je
enter
arpl
pusha
sbb
cmpsb
push
iret
or
and
lcall
stos
inc
jle
sub
xchg
jo
out
push
push
sub
popl
add
dec
pusha
mov
stc
inc
filds
div
pusha
sub
xchg
jno
repz
or
loopne
pushf
sub
clc
mov
outsb
hlt
or
inc
loope
hlt
stos
out
sub
dec
jp
daa
icebp
sbb
out
mov
stc
xchg
out
sbb
xchg
push
cmc
insl
pushl
or
mov
lcall
dec
andb
fadds
xchg
mov
stos
dec
out
and
shll
mov
and
daa
ds
add
adc
xchg
jl
cld
push
out
xchg
shll
int3
cmpsl
cmp
push
push
loope
jmp
push
enter
dec
mov
std
jl
dec
or
in
jecxz
shrb
jl
sbb
scas
ja
ljmp
je
fs
aaa
xchg
ds
leave
xlat
xchg
and
and
dec
jle
mov
mov
jle
pop
outsb
icebp
arpl
mov
ja
jmp
shrl
push
nop
and
bound
sti
mov
dec
sahf
pop
outsb
xchg
loop
addr16
mov
jne
outsl
cmp
cwtl
addr16
cld
mov
leave
and
std
xchg
cmp
sbb
mov
or
mov
dec
fstps
mov
mov
std
fists
fdivrl
rolb
sbb
shrb
lock
bound
push
sbb
xchg
out
pop
sbb
stc
xchg
das
ret
and
sbb
and
mov
out
push
fwait
pcmpgtd
push
into
add
cmpsl
mov
int3
push
push
sub
sub
cmp
pop
xchg
push
loope
xlat
mov
sahf
in
lretw
in
stos
repz
mov
ja
mov
sbb
pop
cmp
in
test
fcoms
in
cli
out
inc
imul
jb
xor
adc
fucomip
iret
loope
xchg
jecxz
dec
icebp
fmul
pop
mov
mov
add
mov
insl
insb
inc
out
lods
outsb
lea
xor
jbe
sbb
add
xchg
xchg
push
sub
loope
dec
movsl
pop
dec
adc
fstps
out
sti
push
cli
pop
in
movsb
ret
cmp
out
push
add
mov
stc
mov
mov
push
add
cli
nop
and
divb
mov
mov
push
or
push
push
push
adc
ds
movsl
fimull
outsb
out
pop
adc
cs
repnz
bndstx
xchg
mov
push
loop
je
dec
push
test
jnp
mov
js
xor
lock
sub
cmp
xchg
enter
mov
fdivl
sub
push
scas
mov
or
std
pusha
dec
or
and
aaa
sub
xchg
hlt
insb
mov
lods
cli
xor
xchg
push
jecxz
leave
xchg
jecxz
fdiv
adc
lea
in
add
lahf
sbb
das
roll
lcall
sub
inc
sti
jmp
xchg
roll
mov
call
dec
sub
aam
aaa
adc
dec
mov
insl
cmpsb
cmp
push
xchg
push
aad
sahf
fstpl
jge
xchg
mov
jge
pop
in
xor
xchg
add
clc
mov
rclb
add
divl
loope
neg
ret
in
jp
mov
adc
mov
add
sbb
test
push
popa
mov
push
dec
cmpsl
and
xchg
xchg
sti
test
sbb
or
and
add
das
sbb
test
inc
xchg
dec
std
insb
jno
lret
lcall
call
hlt
inc
lds
lods
adc
das
jne
dec
mov
in
ljmp
add
cmc
push
sub
cmp
pop
push
aad
aam
cmc
std
out
fs
pop
push
push
mov
icebp
hlt
add
outsb
pop
imul
jmp
inc
int3
mov
and
dec
push
jb
inc
mov
out
xor
je
sub
in
pop
jg
lock
cmp
cmpsb
and
std
hlt
aas
and
cmp
or
clc
jg
pop
jb
repz
or
fs
shl
arpl
xchg
cmp
in
pop
push
leave
divl
es
fsubs
test
mov
adc
mov
nop
cltd
fiaddl
sub
jb
popf
dec
ret
or
pop
cmpl
dec
loopne
inc
cmp
push
mov
loope
std
add
jnp
dec
adcb
stos
loop
fwait
les
pop
cmc
loopne
cs
dec
sbb
inc
frstor
clc
movsb
mov
js
orl
inc
push
mov
jb
xchg
add
xchg
pop
lods
shlb
out
jb
scas
ficoms
in
and
jno
cmp
iret
imul
rol
ds
fistps
mov
xchg
or
xchg
dec
mov
bound
dec
dec
mov
daa
or
mov
push
cltd
adc
add
jne
mov
mov
push
aad
cmc
pop
loope
jg
in
ficoml
fs
out
xchg
outsl
cmp
sarl
mov
les
enter
sbb
inc
dec
mov
inc
iret
enter
adc
cmp
cmpsl
or
add
xchg
mov
xor
mov
pop
inc
pop
out
jp
stos
sbb
and
add
ja
aad
data16
dec
popf
adc
mov
jle
popa
nop
cwtl
xor
outsb
xor
aad
adc
enter
sbb
inc
stos
sbb
out
arpl
roll
lret
psllw
inc
cmp
int3
jnp
fsubl
xchg
aad
cmp
inc
cwtl
add
movl
inc
out
add
pop
jae
lock
push
add
out
movsb
sub
inc
lock
mov
dec
out
fdivr
faddl
mov
cmp
mov
or
xchg
test
lahf
push
and
or
scas
cmp
mov
dec
pop
sbb
and
lea
arpl
adc
push
aam
push
push
addr16
inc
out
test
in
pop
call
xchg
leave
fdivrp
out
incb
icebp
pop
mov
leave
push
rol
sbb
cmpsb
mov
ja
ja
jge
mov
mov
ss
es
sbb
aas
xor
mov
lahf
aaa
mov
cmp
int
mov
xchg
shl
xchg
popa
icebp
add
and
mov
jae
mov
cmpsb
pop
es
inc
imul
jle
shlb
rcll
push
sbb
sub
mov
imul
cmp
adc
loope
dec
or
or
jbe,pt
ror
mov
and
rcr
sub
jnp
repnz
lcall
movsb
rcrl
movsb
sbb
adc
sbb
fstpl
rolb
jmp
xchg
shl
xchg
cld
and
xchg
lret
pop
mov
inc
inc
push
sbb
sbb
dec
popf
xor
fwait
jmp
xor
in
inc
shll
mov
cmp
test
das
jnp
push
aam
aam
iret
test
pop
mov
mov
bound
push
icebp
xorl
inc
xchg
sarb
sbb
outsl
fisttps
or
lods
sbb
push
ror
push
cmp
and
dec
pop
fwait
insb
jge
hlt
dec
test
lods
mov
movl
jns
mov
fwait
popa
jl
adc
inc
jl
fdivs
inc
pop
xor
pop
xchg
push
sbb
cmpsb
mov
imul
pop
aad
mov
mov
rolb
fcoms
in
hlt
jmp
mov
shrb
xor
or
mov
and
test
xchg
rcl
sbb
lds
push
es
sbbb
je
je
sbb
sub
pop
pop
ja
xchg
das
shll
and
cmp
lea
jmp
push
push
in
mov
and
mov
and
dec
jbe
dec
pop
int3
push
mov
cmpb
sahf
sbb
je
sbb
mov
mov
xor
mov
and
jecxz
jb
ss
xchg
pop
sbb
cmpsb
jp
xchg
adcb
and
mov
push
inc
das
rolb
data16
in
mov
xchg
dec
xchg
fsub
test
rcll
out
push
xor
xor
ljmp
or
scas
adc
sub
mov
mov
push
mov
xchg
sbb
movsb
push
cs
std
loop
mov
mov
fstl
cmp
loop
jne
jmp
dec
push
shll
mov
mov
add
stos
lea
and
mov
inc
mul
sub
lods
push
out
adc
xor
adc
hlt
jecxz
loopne
or
popa
push
sub
mov
lds
loop
sbb
out
scas
std
aaa
push
fs
hlt
cmpsl
ror
sahf
scas
fimull
lahf
in
mov
fwait
rcl
lcall
add
leave
jg
dec
shlb
sbb
out
sar
sbb
pop
leave
cmpsb
fld
mov
imul
ret
aam
dec
cltd
das
hlt
ficoml
jg
cmp
in
lret
xchg
and
inc
push
ss
pop
popf
and
lret
int3
lahf
mov
mov
pop
cmpsb
xchg
or
mov
js
lods
jo
test
jmp
push
push
mov
or
sbb
imul
jg
and
pop
movl
mov
daa
mov
mov
lret
jbe
fwait
movsb
and
pop
and
and
jae
mov
jle
add
into
repnz
aaa
aas
and
shl
jle
mov
enter
loope
mov
jmp
out
push
call
lods
sub
fxam
pop
stos
shl
popf
xor
add
xor
fnstenv
mov
addr16
inc
shrl
sahf
mov
test
mov
jbe
pushf
divl
out
sub
cwtl
ret
fprem
jg
cmp
mov
mov
cld
adc
lods
loopne
shl
lods
xlat
cltd
loopne
outsb
xor
push
sbb
jmp
jge
jae
orl
xor
gs
in
scas
repnz
dec
ljmp
inc
ja
mov
mov
jo
sbb
out
adc
adc
imul
loop
pop
daa
adc
aas
sub
add
es
jg
cmpsl
loop
dec
fiaddl
inc
std
mov
jg
cmp
mov
push
jmp
sbb
nop
mov
pop
mov
add
or
test
pop
pop
mov
or
dec
mov
out
adc
sbbb
mov
xlat
stc
js
xchg
loope
pop
mov
sub
pop
lds
push
jp
mov
sti
addl
rclb
dec
ja
and
adc
jae
cmpsb
bound
ss
iret
lcall
sbb
mov
mov
clc
sub
mov
test
lcall
sti
rolb
xchg
roll
mov
les
adc
fadds
sbb
mov
and
xchg
sub
inc
jmp
sbb
shl
xchg
or
xchg
jp
fwait
ljmp
insb
add
fwait
and
xchg
jmp
ds
and
push
popf
fwait
cmp
addr16
xor
nop
add
cmp
test
push
daa
jl
jnp
out
xor
lcall
dec
cli
jmp
aad
sbb
lock
call
popa
fisttps
sarb
xchg
stc
cmp
xchg
mov
test
aam
cmp
mov
or
scas
pop
out
push
enter
mov
stc
jns
shll
repz
in
push
jne
rcr
mov
adc
mov
mov
dec
jbe
xchg
jne
mov
sahf
outsb
idivb
mov
xlat
xor
jmp
jge
jmp
mov
mov
stc
cmp
aad
out
stc
cmp
sbb
pusha
push
pop
int
sti
mov
adc
popl
inc
dec
xchg
loop
fsubr
popf
xchg
lods
dec
out
add
imul
int
lock
pop
adc
insl
dec
xchg
and
pop
or
mov
aam
sub
dec
jbe
or
sti
dec
lods
cmp
xlat
lds
stos
addr16
in
and
xchg
push
popf
xchg
mov
sahf
and
xchg
insb
push
cmc
fisubrl
fmull
in
das
cmc
lgs
push
mov
and
ret
pop
ficomps
and
clc
popf
cmp
add
push
call
mov
pop
mov
jp
jmp
sub
cmp
loop
and
test
mov
pop
and
fiadds
clc
scas
jbe,pt
stos
stc
cmp
pop
xor
inc
mov
in
inc
lock
sahf
mov
or
outsl
jae
daa
cmp
or
xchg
sbb
ret
fildll
in
jp
fs
or
mov
push
out
mov
adc
xchg
aaa
enter
fisubs
std
xor
cltd
imul
adc
je
xor
xor
scas
clc
jae
mov
fistpl
adc
push
or
mov
les
nop
jns
mov
adc
loopne
cmpsb
shr
inc
or
jb
cmpb
loop
push
add
dec
fisubrl
cmc
lea
xor
sahf
pop
loope
into
mov
push
lahf
pop
dec
cs
adc
mov
mov
inc
add
fmull
rclb
insb
enter
gs
popf
scas
mov
leave
faddl
call
mov
dec
scas
addl
nop
xchg
sahf
mov
into
rorl
sub
icebp
inc
inc
pop
dec
jbe
mov
es
pop
inc
inc
dec
mov
add
mov
xor
add
push
rcrl
fcoms
outsl
fmul
pop
sub
jmp
outsb
dec
dec
adc
jo
mov
or
popl
iret
xor
adc
adc
iret
adc
aad
cwtl
pop
cmc
sahf
sbb
pop
inc
xchg
jle
loop
pop
in
roll
into
sub
xchg
pusha
das
add
repz
mov
mov
imul
xchg
pushf
jae
xor
mov
out
cld
mov
mov
mov
xchg
sub
sarb
push
imul
iret
lret
out
pusha
pop
sub
mov
push
int
ljmp
sub
rorb
inc
es
sbb
aaa
scas
push
out
mov
lahf
incb
lret
aaa
clc
adc
mov
jno
mov
addr16
mov
mov
into
cltd
mov
dec
xlat
jl
mov
cmpsl
mov
push
fstpl
sbb
xor
mov
and
mov
imul
lahf
imul
and
pop
in
loop
push
or
cmp
movsb
enter
push
sub
push
mov
push
push
pushl
mov
test
mov
jno
mov
popa
add
test
movsl
loop
in
dec
test
push
stos
xchg
sub
imul
or
xchg
lods
icebp
in
sub
mov
lds
or
clc
xlat
aam
fcmove
in
mov
pop
jbe
inc
jnp
adc
sub
sbb
cld
xchg
push
leave
pushf
push
mov
dec
jb
fisubrl
aas
iret
or
aaa
icebp
arpl
adc
mov
add
dec
pop
aam
int3
fisubs
pop
outsb
es
arpl
cld
xlat
sub
fcoms
mov
into
scas
lret
cmp
ret
mov
std
xchg
insb
addr16
push
popa
andl
out
jo
cmp
mov
push
cmc
mov
pop
cmpsb
out
inc
loope
mov
movsl
scas
inc
lret
divb
lret
add
push
inc
aas
pop
stc
add
mov
xchg
mov
hlt
jbe
xchg
xchg
leave
pop
decb
enter
cwtl
pop
bound
sbb
pop
jb
add
jbe
push
enter
mov
testb
imul
ud2
dec
mov
es
out
test
xchg
sbb
mov
hlt
cmpsb
int3
lds
cmp
ja
cmpsb
adc
cmp
jb
inc
cld
data16
lods
ljmp
cmp
xchg
fisttpl
lret
jecxz
popf
mov
xchg
inc
pop
ret
cmpsl
add
xor
icebp
frstor
xchg
mov
outsl
jne
mov
fcmovnbe
dec
mov
roll
out
int3
or
add
outsl
je
mov
add
out
sub
insw
in
ss
int
scas
sti
xor
push
sti
shrb
push
pop
pop
enter
cmpsl
jb
nop
xchg
aam
sub
mov
je
gs
lock
mov
push
inc
or
lahf
int3
aad
sub
ds
dec
in
insb
sub
mov
add
js
jmp
jbe
mov
lods
sub
mov
test
movsl
xchg
arpl
pushf
fs
pop
rorb
add
pop
jg
cli
iret
sbb
fs
sub
pop
add
mov
imul
loop
cmp
lods
hlt
cmpl
add
mov
dec
ret
ds
mov
mov
icebp
insb
jl
test
mov
inc
mov
mov
pop
cli
fisttpl
push
adc
push
xchg
pop
mov
mov
add
int3
test
scas
hlt
adc
cmp
js
subl
rcrb
sub
dec
dec
inc
jmp
popf
inc
jne
mov
data16
mov
lcall
lds
inc
jl
add
push
pop
cltd
ret
lods
in
push
sbb
push
addr16
mov
loope
je
movsl
push
fmuls
sar
into
jno
push
cmp
mov
mov
fcoms
mov
lahf
sahf
mov
sub
insb
push
cmp
sbb
setne
xchg
repz
mov
pop
jns
mov
push
mov
movsl
cmp
inc
mov
jnp
mov
stos
nop
mov
loopne
sbb
jno
cmpb
out
mov
ss
cmc
rorb
xchg
mov
aas
mov
mov
js
loopne
js
sbb
mov
lods
packsswb
cmc
lods
jns
std
sahf
movsl
add
xchg
or
or
mov
dec
pusha
fnsave
xlat
jnp
arpl
jbe
or
inc
fidivl
shll
jne
fisubrs
or
iret
xlat
xchg
mov
mov
daa
testb
nop
js
cmp
cmp
lret
clc
in
popa
loopne
inc
addb
push
call
sarl
addr16
loop
pop
int
out
rcrb
sbb
sbb
lods
xor
fsubs
cs
call
push
fdivs
mov
add
call
jge
gs
xlat
mov
fwait
pushf
sub
pop
push
rorb
cmpsb
lds
ja
cmpl
ret
aas
call
insb
xor
xchg
mov
cmpsl
mov
aaa
xchg
adc
jecxz
int3
scas
out
adc
jns
ret
cmp
cmp
mov
mov
lret
mov
call
rcrb
enter
out
xchg
stos
mov
test
lods
cli
xor
out
xchg
cmc
test
jb
inc
jb
push
xchg
sub
dec
cs
sub
adc
es
mov
loop
cmpsb
inc
pop
in
std
jnp
pop
or
mov
shr
sub
jo
mov
daa
out
data16
mov
loopne
sub
xchg
sbbl
dec
inc
out
iret
sbb
sahf
fwait
xchg
dec
jmp
pop
lock
ds
mov
sub
cld
xchg
mov
jge
lock
data16
insb
cld
adc
and
jns
out
jge
mov
pushf
lea
pop
xchg
mov
je
cmpsb
leave
out
mov
add
cmpsb
add
mov
jle
push
push
or
js
jbe
stos
or
pop
arpl
loop
movb
stos
push
mov
pop
pop
cmp
push
mov
adc
xor
aad
mov
test
inc
lods
das
clc
pop
and
mov
shlb
pop
pop
cltd
aam
mov
loope
shll
sar
inc
mov
xlat
push
outsl
add
test
test
scas
in
sub
mov
dec
ljmp
stos
xor
dec
pop
xlat
jb
mov
into
jbe
imul
mov
insb
sbb
movsb
out
cs
mov
clc
jmp
test
jnp
loop
jge
ja
stc
xlat
push
out
sbb
dec
xchg
jecxz
lds
jbe,pt
cmp
stos
std
push
dec
loop
xchg
out
les
add
cmp
pop
mov
push
imul
div
dec
adc
jo
hlt
mov
or
jno
xchg
add
xor
ds
sbb
data16
imulb
roll
shrl
int3
lahf
rorl
cmp
les
xor
pop
mov
push
pushf
iret
sbb
add
mov
adc
mov
pop
cmp
loope
out
aad
enter
cmp
loope
fidivs
repz
sbb
xchg
int
dec
xchg
in
xor
das
mov
push
cmp
fsubrs
and
cmp
rclb
inc
subl
sub
add
push
adc
cltd
dec
in
test
stc
sub
mov
or
xor
mov
push
pop
sbb
pop
xchg
ds
shll
cmp
fbstp
sbb
scas
cmp
mov
xor
adc
push
popf
icebp
sub
in
mov
hlt
xchg
ret
test
mov
inc
dec
js
push
mov
push
mov
xor
int3
aas
rol
in
scas
pop
inc
ret
push
in
arpl
mov
xchg
lret
mov
mov
enter
cs
xchg
test
push
lods
das
adc
jbe
lret
loope
movsl
idivl
fcomps
pop
std
or
movsb
mov
xchg
mov
sub
nop
mov
int
or
sbb
cmpl
idivb
fistpl
gs
lret
ljmp
ret
sub
push
enter
mov
pop
cmp
inc
gs
sub
mov
fsts
adc
cwtl
xchg
pop
cli
insl
cmp
xlat
xor
mov
pop
in
jns
xor
sti
push
pop
mov
push
adc
sbb
cmp
add
dec
sub
pushf
xchg
inc
or
loopne
leave
add
ss
sub
jno
inc
jne
cmp
or
je
out
outsb
jecxz
stos
push
add
mov
repnz
dec
or
adc
test
fidivs
cmc
loop
jmp
pop
xchg
insl
out
add
jbe
mov
aaa
and
negl
and
dec
cmpsl
xchg
dec
push
mov
scas
push
rorb
insb
cmpsl
dec
push
adc
dec
push
sahf
cmpsb
int3
lods
jp
out
mov
sub
lea
pop
sbb
lods
mov
cmp
xor
loop
ja
cmp
mov
in
xchg
inc
mov
lods
loopne
mov
lds
out
mov
jp
lahf
add
adc
mov
in
push
sub
ljmp
mov
loopne
pop
pop
dec
enter
das
sub
iret
pusha
xchg
cmp
push
adcb
pusha
mov
idivb
enter
cmp
add
ficompl
cmp
or
out
add
inc
ds
inc
pop
mov
popf
outsb
and
int
rol
mov
xchg
mov
xor
mov
pop
es
dec
inc
or
push
loope
out
add
sub
adc
shr
loope
add
pop
pusha
push
cmovle
pushf
mov
scas
in
xor
xchg
or
movsb
rcll
add
xchg
dec
loop
cmp
ja
je
xlat
xchg
stos
adc
mov
inc
mov
loop
mov
aaa
bound
inc
aas
xor
sar
jmp
xor
or
test
rcrb
add
les
cli
mov
mov
imul
inc
divb
inc
movb
fidivl
mov
aam
sbb
adc
enter
sub
mov
lret
mov
idivl
mov
es
or
roll
cmpsb
ffree
stos
lods
mov
pusha
out
adc
js
pop
jae
xchg
xchg
add
xchg
rcll
push
dec
mov
sbb
outsl
and
and
or
xlat
das
pushf
ret
xlat
pop
jle
lret
gs
sti
xor
stos
pusha
lods
js
jg
push
out
mov
into
mov
jmp
inc
dec
in
out
and
mov
fidivs
dec
dec
scas
dec
jl
xchg
imul
cli
rcll
aad
pushf
aad
out
sbbb
fs
bound
lods
sub
lods
sti
xor
movsl
sbb
fcmovnbe
push
sub
jb
je
push
xchg
test
jle
mov
es
aad
xor
push
pop
test
mov
pop
aas
xor
hlt
fisubrl
fidivrl
mov
mov
xchg
pop
fidivrs
hlt
adc
mov
movsl
or
sub
ret
ss
mov
jne
xor
xchg
idiv
and
out
jge
xor
inc
fwait
pusha
pop
adc
ljmp
push
andl
or
pop
ret
push
and
mov
xor
shll
rcl
mov
sbb
pop
mov
into
push
cmpsb
or
sub
inc
push
jl
test
sti
out
cmp
ja
jecxz
push
lahf
and
pushf
sub
fwait
mov
or
mov
lods
nop
icebp
xor
adc
sti
add
mov
leave
xchg
icebp
pop
mov
lods
mov
gs
ret
cmc
mov
or
xor
lods
adc
or
insl
cmp
jnp
or
pop
out
aad
dec
jno
scas
bndldx
lock
lods
jo
into
pop
inc
ret
decb
and
dec
mov
push
add
dec
sbb
push
cmp
insl
mov
jmp
mov
pop
mov
lods
mov
dec
data16
sub
dec
mov
inc
stc
sub
xchg
stos
add
fstpl
ss
stc
sub
add
jmp
repz
pop
jno
dec
sbb
pushf
in
sbb
scas
or
push
bnd
mov
fwait
not
mov
push
or
xchg
jecxz
and
and
lods
std
outsb
stos
pop
mov
pusha
mov
jnp
sub
or
jge
or
neg
xchg
insb
or
or
movsl
out
xor
stc
fsubrl
xchg
je
mov
inc
add
pusha
mov
ss
ret
stc
inc
xor
push
bound
repnz
loop
call
mov
pop
popf
push
nop
outsl
pop
js
lea
stc
dec
into
adc
cld
xchg
mov
and
lcall
stos
test
out
dec
adc
out
push
cmp
or
jae
pop
mov
insb
cmp
and
mov
rcl
lea
inc
js
adcb
out
cld
add
test
sbb
inc
push
outsb
lods
imul
in
jno
xchg
es
test
or
lods
imull
sbbb
inc
loop
aad
inc
in
fidivl
xchg
fstpt
adc
push
mov
pop
gs
xchg
pop
mov
mov
mov
push
push
nop
inc
movsl
add
cld
cmpsl
jg
lods
push
inc
sbb
push
fwait
xlat
mov
cmc
aad
gs
mov
out
outsb
mov
pop
add
pop
gs
adc
mov
dec
ret
fisttpll
xchg
call
jge
daa
test
sarb
or
nop
stos
rcrb
in
stos
jbe
mov
xor
es
add
call
pop
andnps
icebp
in
add
push
cwtl
cmc
loop
mov
pushf
outsl
icebp
das
popf
xor
and
movl
pop
and
cmpsl
xchg
sarb
push
jno
leave
sbb
add
xor
cwtl
or
push
mov
xchg
mov
add
dec
gs
lock
inc
ds
std
out
add
sub
shl
xchg
mov
fistpl
pop
jmp
scas
cmpsl
inc
out
xchg
adc
js,pn
int
lcall
mov
sub
fildl
jg
xor
sbb
pop
or
aaa
and
mov
pop
les
add
dec
xchg
add
js
inc
mov
or
mov
cwtl
and
push
pop
stos
jg
jmp
xor
mov
scas
and
and
mov
adc
pop
popf
insb
jg
mov
xchg
mov
adc
adc
testl
xchg
xlat
mov
daa
rorl
mov
js
mov
cmp
cmc
mov
cmp
mov
dec
xchg
or
ret
pop
popf
sub
lods
int
mov
out
sti
outsb
add
outsb
bound
fldl
jns
ret
lret
xchg
mov
ss
fbld
and
into
adc
mov
ds
push
mov
cmp
bound
stos
cmp
cmp
dec
mov
dec
sbb
js
movsb
sub
ss
imul
add
cli
lock
cmp
or
cmc
mov
and
test
lret
das
sbb
mov
mov
xor
mov
pop
mov
das
pop
cmpsl
dec
sub
inc
rorl
shlb
push
sbb
jb
dec
in
sbb
lds
push
dec
xor
in
xchg
sti
icebp
nop
xchg
sbb
clc
aas
mov
cwtl
sub
into
or
jo
std
cmp
shlb
pop
mov
jne
cmp
sbb
pop
iret
fiaddl
inc
sti
popl
and
cmp
inc
sub
insl
orb
testl
test
pop
test
pop
pushf
or
mov
xor
jmp
or
mov
fwait
cmpsl
loopne
arpl
out
dec
push
es
scas
lods
cmp
adc
jo
int
stos
movsb
push
add
test
enter
mov
fadd
out
mov
mov
jp
mov
sbb
push
pop
push
mov
and
frstor
pushf
test
rorb
lods
add
push
in
adc
adc
test
cmc
movsl
pop
ds
add
pusha
mov
xchg
jbe
cmc
add
mov
and
push
aad
jnp
jmp
mov
std
loop
mov
push
xchg
out
repnz
mov
dec
imul
into
int3
mov
loop
dec
sbb
sarb
pushf
pop
sbb
sub
add
je
xor
add
cmpsb
js
lahf
push
pop
cli
mov
fbstp
inc
mov
dec
inc
push
or
xlat
lea
jae
incl
xor
rorl
mov
enter
sub
stos
dec
pop
in
push
push
lds
or
sti
xor
lret
loopne
xor
mov
and
push
jbe
scas
mov
adc
leave
sub
add
mov
xchg
sbb
mov
add
add
dec
faddp
jle
dec
or
push
rcrb
addr16
jg
insb
xor
pop
movsb
sub
pop
in
fcompl
pushf
pop
push
sbb
sub
mov
adc
stos
pop
insb
bound
push
ror
cmc
fmuls
scas
push
or
inc
cmp
inc
sub
inc
ljmp
sub
scas
xchg
jb
pop
fs
push
sub
xchg
sub
push
in
dec
dec
mov
mov
ljmp
jl
sub
pop
jns
sarb
sbb
scas
jp
pop
inc
repnz
push
push
mov
hlt
stc
jnp
stc
popa
outsl
fwait
adc
pop
cmp
into
fstl
pop
and
idivl
sub
sbb
fucomip
push
mov
dec
dec
jecxz
stc
cli
sbbb
ds
pop
xchg
lods
inc
shll
adc
xchg
and
test
fldenv
pushf
sbb
push
jmp
xchg
xchg
int3
ljmp
sub
test
inc
dec
fs
push
fildl
add
cmc
out
leave
add
cwtl
popf
mov
add
dec
ljmp
jo
test
in
imul
xchg
ret
xchg
mov
into
mov
in
inc
pop
std
dec
int
addr16
jae
in
pop
arpl
popa
pop
add
cmp
scas
fwait
pop
rcll
mov
dec
fsubs
add
ja,pt
mov
cmc
ljmp
sub
jbe
enter
lret
fld
or
and
mov
arpl
xor
das
lcall
ret
outsl
sbb
out
iret
lock
leave
adc
stos
js
mov
jo
mov
xchg
addb
in
cmp
pusha
iret
test
fdivrs
mov
jnp
lods
sbb
lret
jno
pop
in
iret
pop
pop
stos
data16
subl
lret
pop
mov
movsb
push
jo
jbe
call
idivb
js
pop
cmpsb
inc
xchg
push
mov
or
add
lcall
cmp
or
cmpsl
lahf
mov
pop
jno
mov
adcb
jmp
jno
jg
in
ja
jl
pusha
stos
inc
test
lahf
ss
idivb
or
sub
sub
test
cmpsl
cmp
and
cmp
or
repnz
test
cmpsl
je
jo
out
ret
movsb
shr
mov
fcomps
popa
fistpll
cwtl
push
cmp
les
xchg
lcall
lea
sbb
push
out
idivl
xlat
test
cmp
imul
ror
repz
ds
loop
or
mov
stos
mov
xor
incb
out
jecxz
pop
fidivl
cmp
cmp
mov
or
push
into
sbb
or
fsts
jne
loopne
jg
enter
into
aas
in
lret
out
subb
push
ds
jns
xchg
ljmp
inc
and
and
loop
sub
sub
aas
leave
or
popf
loopne
and
popa
xchg
orl
pop
lods
inc
pop
xor
dec
in
pop
sbb
insb
shll
dec
xor
scas
mov
add
jl
mov
xchg
dec
pop
sti
xor
std
icebp
andnps
repz
xchg
aam
push
mov
mov
sbb
cltd
nop
imul
push
stc
int3
cmp
push
lods
or
xchg
out
dec
sub
gs
jle
imul
dec
into
mov
enter
loope
clc
cmp
pop
dec
mov
mov
pop
lods
xchg
fstpt
cwtl
std
mov
shrl
js
imul
sbb
xchg
jae
sbbl
aaa
fs
sahf
clc
lods
ds
add
enter
mov
mov
ror
push
in
and
popf
push
scas
or
int
xchg
push
xlat
ljmp
mov
mov
pop
cmp
rolb
or
ljmp
push
je
leave
jg
xchg
dec
adc
je
and
andb
cmp
push
rorb
addl
sub
push
and
fiaddl
dec
lret
inc
pop
loope
or
test
in
daa
scas
movsw
leave
jb
jo
lea
cltd
push
sub
mov
cltd
push
and
adcb
dec
in
and
cmp
push
and
inc
loopne
in
and
sub
aaa
sub
xor
cmp
adc
call
xlat
xchg
sti
imul
adcl
ret
and
xchg
push
stos
int3
lds
xor
setae
fs
loop
jg
push
shr
sahf
adc
mov
dec
scas
je
dec
addr16
mov
mov
fs
ret
xchg
cmp
jae
imul
out
sbb
call
mov
les
jne
std
shlb
dec
add
imul
fdivr
cs
mov
jle
jp
pusha
dec
xor
rcll
shl
std
or
dec
push
das
xchg
fdiv
call
cmp
pop
sub
push
rclb
adc
sbb
push
jne
repz
out
out
aad
sbb
adc
pop
enter
in
and
mov
sub
fnstcw
and
shll
mov
js
adc
adc
out
push
mov
adc
push
lods
shrl
or
mov
mov
dec
sbb
jle
in
dec
or
push
out
imul
jp
pushf
cmp
imul
ja
adc
cmp
xchg
inc
out
mov
sub
jb
je
aas
fcomps
xor
xor
inc
sahf
out
mov
out
add
mov
shlb
or
cmp
jbe
xor
cmp
xchg
or
push
addl
stos
mov
inc
dec
mov
aad
jbe
adc
xchg
add
mov
addr16
xchg
mov
xchg
mov
add
or
xchg
insb
std
adc
inc
pop
aas
xchg
pop
dec
xor
outsb
xchg
xor
jo
into
out
negb
les
dec
addl
ja
or
test
mov
popf
shrl
decl
add
xchg
imul
sahf
ret
in
icebp
jmp
add
cli
pop
mov
pop
pop
repz
jmp
std
mov
cs
shl
in
leave
fnstenv
sbb
scas
sub
fisttps
ffreep
lea
lcall
repnz
jnp
jle
mov
lods
xlat
jp
push
cli
nop
jne
add
enter
pop
sub
pop
movsb
mov
jbe
lds
loope
andl
xchg
push
in
js
push
sub
push
in
cmp
inc
push
mov
loope
sub
add
pop
jne
adc
out
sub
push
in
mov
insl
mov
cmp
lldt
adc
fidivrs
jno
adc
and
out
add
iret
ja
xchg
add
fmulp
outsl
sub
jb
adc
outsb
rcl
ds
ljmp
fldt
test
movsl
xchg
mov
ja
push
fsubr
pop
sbb
das
push
inc
filds
and
cmp
in
xor
xor
push
adc
fbld
xor
xor
dec
sbb
cwtl
cmp
push
pushf
addr16
ficoml
jb
icebp
test
leave
and
cmp
xor
in
insb
repz
mov
jnp
sbb
jg
fbstp
mov
aaa
xlat
adc
shrl
mov
sbb
lods
decl
mov
adc
arpl
pop
push
out
mov
std
mull
shll
stos
and
out
lret
sbb
call
pop
dec
xchg
jnp
popa
add
xor
sbb
in
xchg
lahf
pop
ja
pop
mulb
cmp
sbb
ret
bound
ja
mov
cmp
cmpsb
sub
sbb
out
adc
test
lret
pop
movsl
dec
pop
sbb
pop
loopne
lds
cmpb
mov
adc
mov
mov
into
cmpb
dec
clc
ljmp
roll
mov
fnstsw
test
or
mov
jmp
rcll
sbb
mov
movsb
jb
repz
orb
cmp
lahf
lock
cmp
inc
add
sbb
data16
xchg
add
js
mov
pop
jnp
cmpsl
cmpsb
push
mov
in
xlat
jne
pop
xor
into
cmp
fstps
inc
outsb
jmp
cmpsl
push
push
fcmove
outsb
xlat
xor
jecxz
push
lcall
pop
jg
mov
bound
and
sub
stc
adc
popf
xor
sub
mov
and
cld
lret
or
sub
in
mov
push
pop
insb
lock
inc
aaa
xchg
loop
dec
xchg
xchg
dec
mov
movsb
pusha
push
cli
pop
add
iret
mov
lret
xor
call
rcll
and
aas
rcl
sub
mov
xor
inc
in
cs
outsb
ljmp
fcomps
jns
mov
pusha
mov
xlat
test
adc
nop
in
aaa
xlat
cld
dec
and
xchg
jle
jmp
es
orb
lret
lahf
lods
jae
pop
subb
mov
push
mov
xor
and
push
cwtl
mov
mov
jb
lcall
insb
or
fs
ds
enter
add
inc
mov
push
jge
and
ds
jns,pt
int
fs
sub
push
dec
xor
dec
jmp
cltd
repnz
mov
bound
sub
dec
adc
subb
sub
out
inc
mov
into
jne
adc
pop
enter
fmuls
sbb
jae
mov
ds
lahf
pop
mov
mov
iret
cmc
mov
sbb
and
int3
xchg
inc
adc
ljmp
gs
cmp
adc
push
push
andb
ret
mov
push
push
je
stc
or
pop
test
push
or
mov
jmp
adc
cmpb
jno
cmpsb
popf
adc
cmp
enter
js
das
inc
inc
xor
mov
aam
cmpxchg
sub
out
mov
pop
mov
rorb
sarb
inc
ja
pop
mov
adc
scas
adc
or
mov
pop
fimuls
dec
jmp
and
pop
xor
insl
sarl
lea
or
repz
xor
jae
pop
fadds
popf
mov
mov
in
imul
mov
fmul
fdivr
xchg
cmp
mov
pop
mov
insb
lods
add
js
jns
push
insb
or
mov
std
int3
xchg
aad
xor
insl
sub
adc
mov
std
xchg
sub
ficomps
addr16
jns
es
in
int3
imul
or
cmpsb
test
int
inc
decb
ficompl
jb
movsl
mov
imul
inc
popa
or
into
std
test
sub
out
push
mov
mov
add
fmuls
pmulhuw
or
iret
mov
test
dec
inc
jmp
hlt
mov
add
cmp
nop
rorb
pusha
or
in
and
xchg
sahf
mov
mov
scas
xchg
cwtl
mov
and
dec
mov
jp
pop
ss
test
rolb
vcvtps2pd
push
nop
cld
cltd
cmp
mov
mov
dec
fwait
enter
jbe
ret
push
enter
test
jnp
sub
mov
and
shlb
push
cwtl
xchg
mov
jo
xorl
pop
dec
dec
lret
mov
sub
mov
in
test
cmpsb
arpl
dec
push
int
pop
mov
and
inc
pusha
dec
fs
gs
addr16
inc
nop
nop
das
imul
out
xchg
jo
push
adc
fildll
cmc
mov
stos
mov
enter
rorl
lock
je
hlt
mov
adc
xchg
add
jne
fwait
jno
bound
test
pop
int3
pusha
loopne
mov
sarl
add
ss
dec
push
add
xchg
jbe
cmp
adc
push
fwait
pop
das
jo
mov
pop
push
mov
dec
mov
pop
mov
and
mov
stos
rorb
in
push
xchg
fisubrl
es
hlt
mov
roll
jne
shlb
mov
xchg
daa
inc
or
push
mov
mov
dec
out
in
dec
ret
cs
cltd
scas
imul
cwtl
cld
int3
nopl
sub
mov
xchg
ja
inc
lgs
mov
int3
add
mov
pop
cs
mov
mov
xor
out
test
incl
sub
xchg
xor
daa
push
sbb
mov
or
cmp
push
add
pop
mov
call
shll
jb
and
loope
jl
in
fwait
jg
cwtl
jecxz
xorl
pop
std
bound
sub
add
test
push
repnz
jb
int3
leave
shlb
fs
fmuls
pandn
fcompl
sub
cli
sbb
cli
orl
xchg
mov
les
insb
adc
adc
xchg
enter
cli
mov
inc
dec
in
xor
inc
pop
ds
cmpsl
rorb
lret
push
xor
or
shlb
in
je
movsb
push
shll
dec
pop
adc
das
lods
aas
push
out
sbb
ja
sti
cmpsb
pop
mov
add
ja
adc
or
hlt
sbb
cmp
fisttpl
in
push
test
cld
xor
popf
adc
or
cs
lods
mov
cwtl
inc
int
jnp
xchg
mov
shll
and
mov
lds
pop
cmp
mov
adc
lods
in
rcll
lcall
jne
shl
fcompl
xchg
pop
adc
lret
test
sub
sub
pop
adc
sbb
and
mov
adc
sbb
xor
mov
mov
ja
out
jle
scas
int
push
ljmp
hlt
jae
les
sbb
aad
je
dec
mov
lods
roll
dec
popl
lcall
jnp
inc
pop
outsl
push
sbb
dec
push
cmp
cmc
push
sbb
nop
mov
or
xor
mov
push
cwtl
fildll
xchg
test
mov
pop
ret
xchg
out
inc
aam
and
lret
negb
push
js
insl
pop
cli
xchg
inc
fdivrp
xor
pop
and
je
and
nop
mov
sbb
int
fmulp
das
clc
mov
and
test
jge
xor
sub
dec
push
std
inc
repz
js
mov
sbb
mov
push
shlb
je
xchg
adc
wbinvd
movl
lret
test
hlt
sbb
jae
jg
xor
fistps
mov
adc
out
mov
mov
cmp
loopne
fstpl
jmp
bound
xor
nop
fs
repnz
mov
xchg
add
out
pop
or
adc
scas
add
mov
push
mov
inc
sub
mov
mov
pop
ret
dec
test
in
test
rolb
push
adcb
test
xor
mov
push
adc
or
xchg
mov
bound
fsts
ds
dec
int
mov
xor
mov
jmp
push
add
push
jge
jmp
jne
loop
popa
mov
stc
push
adc
xchg
lcall
insb
ja
jns
iret
cmpsl
mov
dec
cmp
scas
int3
in
fistpll
xor
add
and
sbb
cmpsl
lods
xchg
mov
or
or
imul
pop
outsb
negb
push
xchg
test
mov
cmp
subl
lods
inc
add
arpl
pop
cmp
dec
dec
and
mov
popa
addb
lods
lret
sbb
andb
lds
xchg
imul
inc
mov
mov
adcl
insl
pop
es
push
cwtl
lea
jl
dec
mov
push
js
jbe
fbstp
dec
jae
repz
dec
ljmp
rorb
push
rol
sbb
fwait
test
ljmp
add
repnz
inc
dec
or
jae
std
adc
call
insb
xor
mull
inc
in
fs
mov
or
dec
test
inc
mov
fistpll
ja
cltd
fisubrs
rclb
les
testl
xchg
shl
jne
mull
mull
shl
shr
test
test
jno
dec
push
lds
add
test
das
cs
cmp
cmp
xchg
jle
mov
insl
pop
or
inc
shr
push
ds
in
xchg
sahf
lea
cmpsl
mov
dec
mul
cmp
loop
cs
test
sub
cmp
xorl
adc
mov
movl
xor
mov
jg
ret
dec
jbe
xchg
xchg
and
add
and
les
adc
mov
roll
mov
xchg
cmpsl
icebp
mov
mov
sahf
sub
mov
enter
push
xchg
cmpsb
mov
outsl
in
js
xlat
jp
dec
aad
mov
jp
outsl
and
push
test
aaa
mov
sub
mov
movsb
rcr
push
adcb
or
sub
xor
fisubrl
cmpb
xchg
mov
jmp
stc
cmp
popf
je
mov
mov
out
xor
adc
fbld
mov
fstpt
stos
clc
in
sub
and
call
cwtl
cmp
lods
and
push
cli
push
es
imul
testb
cmc
and
jno
cmp
sub
test
add
pop
aam
mov
xor
sub
stos
icebp
cmp
inc
jmp
mov
leave
test
pop
out
es
jnp
or
jbe
pop
mov
frstor
push
rcrb
dec
add
sbb
sub
addr16
andb
out
sub
loope
ret
and
mul
jl
add
andb
outsl
push
dec
gs
insl
movsb
jl
mov
add
out
cmp
leave
xchg
lods
pop
xor
xchg
add
outsb
scas
push
sbb
sarb
and
pop
add
xchg
test
push
xor
or
mov
lret
ret
push
pop
mov
adcl
lcall
push
dec
mov
inc
and
and
ja
push
dec
in
pusha
movsb
push
mov
mov
lods
xor
or
adc
xchg
push
add
push
sub
sahf
outsl
mov
adcb
mov
and
clc
jecxz
and
mov
ja
in
mov
dec
scas
cltd
cmpsl
out
pop
ljmp
adc
lods
xchg
inc
lret
stc
idiv
aas
or
addr16
test
cld
inc
lcall
cmpsl
sbb
bound
mov
cmc
or
pop
lcall
xchg
lods
data16
ret
testl
sub
pop
cmpsl
les
das
dec
mov
jle
mov
inc
scas
movsb
sbb
push
push
cwtl
repz
call
inc
es
fsubrl
xchg
mov
push
mov
in
jne
sub
sub
int
mov
add
mov
mov
xlat
xor
hlt
inc
daa
sbb
lahf
cmpl
cld
nop
add
aad
repnz
jg
cmp
or
cmp
sbb
mov
push
loop
xor
jo
fdiv
iret
jne
lods
add
push
dec
dec
and
xchg
bound
add
int
xor
aaa
push
rorl
sbb
sub
pop
and
fs
das
ljmp
inc
lock
fcoml
cmp
cltd
ficomps
js
dec
sbb
aaa
cmp
fmuls
scas
lds
add
sbb
mov
push
fisttps
push
cmp
outsl
in
mov
mov
or
dec
and
sub
ret
gs
movsl
movsl
xchg
subl
cmp
xchg
mov
cmp
es
movsl
sub
daa
enter
popf
and
outsl
addr16
jno
xchg
sarb
push
das
test
mov
ffreep
xor
jge
scas
lret
inc
xor
pop
movsb
daa
pop
enter
sub
lret
and
mov
lret
xor
insl
pushf
fdivrs
es
mov
pop
mov
fnsave
adc
ds
and
je
jle
add
cwtl
pop
shl
or
dec
sbb
inc
add
sahf
add
or
pop
adc
xchg
xor
test
push
imul
mov
imul
cwtl
data16
mov
popf
pop
mov
out
push
imul
inc
and
out
fisubrs
les
lods
in
cltd
aad
stos
adc
lcall
fidivrl
push
mov
jmp
imul
jne
test
scas
mov
mov
jp
popf
or
cmp
sbb
scas
jb
sub
mov
fidivrl
iret
lcall
inc
dec
in
jecxz
jns
sahf
or
lret
push
leave
mov
loopne
mov
mov
mov
mov
mov
ret
or
jno
mov
hlt
lock
pop
movq
into
push
dec
mov
inc
out
jb
mov
xchg
dec
pop
mov
in
dec
movsb
cmp
mov
shl
cli
out
xor
js
ds
fidivrl
std
daa
xchg
fst
xor
lret
insb
xor
clc
mov
push
repnz
pushf
xor
sbb
push
fstp
test
enter
lds
dec
adc
pop
in
aad
push
cli
scas
orl
and
mov
pop
mov
cmp
daa
jle
rol
insl
ss
mov
outsb
push
push
adc
int3
and
mov
fs
daa
add
mov
push
clc
inc
or
and
mov
push
add
dec
int
stc
add
ja
adc
and
imul
xchg
cmpsb
dec
mov
inc
clc
insl
sbb
lds
jns
arpl
loop
test
adc
jae
lcall
das
push
insl
idivb
and
xchg
mov
jae
sahf
xor
sarl
or
mov
adc
mov
push
mov
jo
cmp
sub
xchg
adc
jo
jnp
adc
jp
loop
jp
xor
ljmp
outsb
xor
mov
test
push
loopne
movsb
fadds
lods
pop
xchg
jb
loop
xor
aas
jbe
ja
cmpsb
data16
mov
pop
adc
or
xchg
test
mov
xor
jae
ret
push
push
movsb
pop
inc
xor
mov
dec
push
dec
sbb
out
pop
adc
or
or
ficoml
ljmp
sbb
push
addb
fmull
adc
daa
aam
movsl
jne
scas
inc
test
pop
push
xor
push
mov
inc
loopne
jmp
nop
or
pop
sub
push
mov
stos
dec
mov
fcomps
daa
or
push
push
int3
mov
pushf
push
scas
test
sbb
stos
pop
cld
push
aad
je
xor
ret
add
lret
sub
mov
aaa
shlb
xchg
setp
nop
jne
andl
rcrb
jns
pop
int3
mov
mov
push
cmp
jmp
inc
cmp
mov
jb
popf
shll
xchg
cltd
mov
aaa
int
mov
add
bound
inc
adc
outsb
movb
mov
pop
and
pop
pop
imul
mov
xlat
stc
out
into
xor
fimuls
pop
pop
jne
scas
xchg
les
jnp
push
dec
imul
sub
icebp
stc
xchg
jnp,pt
lea
jbe
pop
xchg
std
iret
sub
les
fnstcw
push
xor
xchg
add
cld
int
jno
xor
add
xchg
fistl
shlb
inc
mov
pop
add
or
subb
and
push
in
adc
mov
inc
in
inc
fwait
push
mov
or
in
lods
jp
ret
adc
xlat
xchg
xchg
test
push
cmp
mov
nop
fcmovu
fbld
xchg
movsl
ret
mov
aas
rcrl
shlb
in
jecxz
jg
popl
loop
add
outsb
adc
push
hlt
and
clc
xchg
in
mov
or
xchg
bound
lret
js
shrb
ss
pop
push
lahf
stc
mov
daa
adc
shlb
out
mov
mov
imul
inc
mov
pop
fwait
mov
lcall
aaa
sahf
nop
pop
ljmp
mov
cwtl
inc
mov
aad
mov
inc
xlat
divb
inc
push
cmc
inc
adc
imul
cs
into
sbb
incb
out
pop
jno
adc
sbb
rorl
push
arpl
in
dec
stos
lcall
xor
in
jbe
jbe
stc
jne
call
xor
pusha
sti
pop
add
fisubl
jae
icebp
push
push
sub
pop
into
nop
mov
jnp
pop
xchg
adc
cltd
jg
sub
mov
xchg
pop
mov
movsl
sub
and
xchg
addr16
jne
jbe
add
jne
sahf
ds
mov
xchg
adc
mov
inc
sbb
outsb
lds
test
push
pop
and
cli
out
push
sahf
mov
sub
popf
or
in
stos
inc
adc
mov
adc
std
fsubl
cmp
adc
scas
inc
sbb
sbbb
sbb
loop
cmpsb
add
add
aas
imulb
les
cld
dec
es
aam
or
lock
dec
pushf
leave
sahf
outsl
xor
insl
jno
pusha
add
adc
jo
jb
insb
cmpsl
add
dec
xchg
adc
clc
jge
dec
pop
or
cmc
xchg
cmc
mov
mov
fs
movl
in
add
sub
and
and
sub
not
adc
jge
pusha
mov
fistpl
adc
and
pushf
push
xchg
pop
fimuls
adc
cli
lret
sub
movsl
mov
ljmp
insl
cwtl
mov
adc
insl
add
lock
popf
xchg
cwtl
xchg
out
test
add
jne
leave
inc
push
jmp
fdivrl
lret
clc
xor
aaa
xor
ja
movsl
decb
sbb
sbb
cmp
or
pop
bound
jg
icebp
dec
jl
popa
jmp
push
pop
inc
fbstp
test
sub
xchg
cmp
xchg
cmp
stos
add
xor
jb
stc
push
sbb
das
add
push
and
inc
jge
or
add
loopne
je
loope
mov
jno
mov
adc
xchg
jnp
pop
push
cmpsl
or
stos
fsubrl
pop
fstpt
sbb
mov
inc
xor
in
lahf
xchg
jecxz
pop
add
or
xlat
rorl
xor
mov
mov
jns
mov
mov
call
jne
cltd
jno
out
gs
inc
fxch
clc
pcmpeqb
push
dec
dec
fs
jge
cmpb
decl
mul
mov
stc
xor
mov
pop
push
ss
cmc
inc
fwait
ret
cmp
fistps
lods
fcom
or
pop
cmp
push
lret
mov
je
adc
pop
mov
and
and
dec
mov
arpl
xchg
xchg
imul
mov
lock
xor
pop
subl
scas
xor
pop
add
cmp
inc
push
mov
mov
push
mov
fsts
repnz
xchg
jae
outsb
imul
ret
fs
or
or
or
pusha
lret
inc
dec
sbb
jns
sbb
fstpt
dec
mov
dec
inc
clc
mov
pusha
xor
imul
and
dec
mov
add
fistl
cltd
rcl
mov
jmp
sti
mov
into
mov
in
pop
inc
stos
or
jns
mov
test
xorb
mov
mov
sbb
cmp
or
push
shlb
xchg
sub
in
subb
xchg
shlb
fildll
lea
sub
imul
clc
or
js
push
in
xchg
cmp
mov
inc
inc
cmp
mov
adc
out
es
mov
or
mov
mov
xchg
shr
mov
gs
rolb
jmp
inc
cwtl
in
jl
mov
xor
andl
ret
jmp
mov
jmp
mov
mov
mov
scas
xchg
aas
pop
or
cmpsl
add
push
mov
incb
testb
mov
out
add
jae
push
cld
inc
dec
mov
pop
fdivp
push
push
mov
mov
inc
jmp
aad
loope
jnp
std
cmpsb
pop
outsl
shlb
sarl
fstl
rorb
or
and
je
inc
lcall
std
popf
push
int
imul
mov
outsl
pop
cmp
pop
xor
adc
fwait
pushf
addr16
ja
in
add
cld
dec
cmp
aam
in
jmp
insb
adc
jp
dec
lea
sbb
ret
cmp
cmp
mov
aam
or
cld
out
scas
add
inc
out
outsl
xchg
addr16
and
iret
in
xchg
push
lret
fstpl
mov
lods
fidivl
mov
mov
test
sahf
inc
or
adc
or
sarl
cltd
pop
out
push
shrb
cmp
push
push
dec
jo
add
cmp
hlt
ljmp
sub
setnp
outsb
popf
gs
dec
jns
and
sbb
cmp
pop
andl
sbbl
mov
sbb
and
outsl
mov
inc
test
stos
pop
fs
pmaddwd
xor
xchg
mull
vmovapd
sub
loope
jecxz
push
std
pushl
gs
mov
loop
push
xor
addr16
jl
mov
xchg
call
lock
pushf
sub
lahf
dec
sbb
cmp
insb
or
lods
loopne
stos
notb
ficompl
out
sub
xchg
movnti
xchg
out
and
mov
mov
jbe
stos
andl
pop
stos
sbb
movsb
sti
dec
xchg
shl
ds
dec
nop
pop
and
ja
adc
sub
andb
fisubl
sub
mov
sub
jmp
lcall
rol
mov
aas
sbb
cvtps2pi
sub
dec
loopne
movsb
aaa
enter
inc
xchg
mov
or
in
pop
jl
cmpsl
sbbl
cld
jp
or
sub
adc
jecxz
push
fistps
scas
jp
dec
push
repnz
mov
xchg
and
loop
sbb
and
iret
mov
xor
scas
cmpsl
xchg
popa
mov
xchg
aas
lret
je
mov
jb
imul
pusha
pushf
fldl
insb
mov
into
fisubrs
jg
lock
loop
ss
jb
push
inc
and
lods
ret
fsubrl
mov
ret
mov
scas
dec
mov
sbb
int
jl
cld
pop
mov
testb
jo
jmp
leave
imul
adc
push
dec
cs
mov
loop
cmpsb
adc
and
push
out
aad
dec
and
popf
push
or
inc
cmp
sub
das
mov
imul
pusha
push
aad
dec
xchg
fstl
aad
add
into
je
xchg
mov
push
pop
shrl
jne
lds
inc
addb
cli
push
jne
loopne
loopne
adc
sub
mov
jb
jns
mov
xor
mov
sbb
push
data16
sub
sbb
xchg
push
and
out
sbb
sti
xchg
push
ret
je
jnp
xor
das
cmovs
and
jnp
into
xchg
stos
fstpt
push
dec
xor
rolb
iret
scas
idiv
add
test
int
dec
xchg
in
sbb
into
sub
dec
xor
cmc
sbb
pushf
mov
pop
cmp
pop
into
orl
and
scas
ljmp
pop
mov
js
jno
and
ja
mov
mov
lods
push
xchg
lds
stc
sub
aas
mov
lods
inc
mov
loop
pusha
jb
push
jle
sub
jmp
loope
in
int3
stc
ja
lret
divb
lock
lea
into
and
ja
xchg
popf
mov
fwait
sbb
pop
xchg
imul
add
loope
inc
mov
divl
rep
mov
jb
add
or
iret
pushf
into
cmpsl
ljmp
sahf
jae
push
add
aas
xchg
loop
outsl
out
jns
pop
pop
xor
and
ret
xor
insb
adc
pop
dec
test
outsb
js
mov
loop
mov
popf
ja
aaa
mov
sbb
loopne
stos
dec
xor
jne
inc
pusha
scas
add
cmpsb
ss
nop
pusha
mov
shll
leave
jle
lahf
jle
sti
mov
mov
and
mov
add
jmp
or
xchg
or
outsl
std
sbb
pop
xchg
addr16
add
inc
pushf
xchg
push
mov
pop
popa
adc
xchg
add
dec
and
imul
jmp
aaa
stos
sub
add
mov
xor
sub
leave
int
lret
das
mov
adc
negb
cld
mov
sarb
jmp
mov
mov
sbb
add
imul
lahf
sbb
adc
add
sarl
xchg
pop
daa
push
cld
pop
shl
pop
add
adc
mov
push
jb
xchg
push
ret
out
test
xchg
push
test
or
dec
rclb
out
sub
or
inc
out
push
fwait
xchg
sahf
jne
pop
scas
or
lea
pop
mov
mov
jmp
push
scas
loop
imul
and
sarb
jno
jo
and
shll
dec
mov
fstl
mov
lds
jbe
or
lock
push
mov
xchg
and
mov
xor
aad
addr16
lods
shl
mov
pop
sarl
pushf
sbb
std
scas
insl
inc
push
addr16
sar
lret
stos
mov
pushf
cs
pushf
scas
sbb
fs
dec
iret
mov
ja
mov
jb
mov
mov
mov
int3
or
dec
scas
int
cmp
dec
jno
sbb
mov
jnp
mov
push
mov
mov
or
mov
lods
sub
mov
inc
and
mov
call
xchg
lods
das
mov
mov
jecxz
mov
xor
mov
push
jge
xor
jmp
arpl
sahf
push
dec
or
int
push
imul
call
imul
mov
sbb
outsl
imul
fisttps
test
jmp
mov
ds
cmp
insl
fisttpll
vzeroall
stc
dec
cld
inc
int
stos
jp
jne
loope
ret
or
les
pop
pop
cmpsl
test
xor
sbb
cmpl
sbb
cmp
pusha
insl
pop
jecxz
addr16
pusha
lea
gs
fisubl
data16
cli
sub
xor
xchg
dec
mov
pop
iret
cmp
lea
push
mov
mov
sub
repnz
xchg
cmp
jns
sbb
stos
jns
std
pop
xor
iret
iret
cmp
xor
fs
stc
popf
push
enter
scas
cmp
call
roll
mov
call
cmp
mov
or
jge
push
fidivl
push
jne
pop
insb
fildll
popf
xchg
and
enter
push
mov
test
mov
xor
cli
inc
sti
cmp
xchg
jecxz
leave
and
dec
adc
mov
push
dec
or
jo
cld
iret
xchg
mov
jl
sahf
ljmp
and
aam
out
push
and
popf
add
cmp
loopne
cmpsb
xchg
pop
mov
aaa
gs
add
popl
or
daa
jl
dec
nop
in
and
nop
cld
out
xor
jl
js
inc
pop
cmp
data16
clc
sub
add
nop
pop
sub
mov
movhps
inc
mov
loope
add
or
fwait
popf
push
adc
pop
stc
push
and
xchg
in
test
lods
ret
in
and
mov
xchg
mov
inc
mov
fcomps
pop
test
mov
cmp
movsb
lret
mov
adc
lea
not
pop
jae
add
faddl
lds
in
sbb
cmp
aaa
mov
pop
sub
lock
mov
icebp
adc
dec
xor
rolb
in
stos
push
cmp
xor
popf
xchg
fisubs
lea
adcl
pusha
jb
les
sahf
out
jb
adc
pop
andl
icebp
in
out
imul
hlt
push
push
sub
clc
dec
jmp
cmc
das
lock
mov
mov
fsubp
int
aas
lret
jl
jb
imull
jle
xchg
add
inc
orb
sbb
pusha
jp
mov
dec
pop
mov
jo
push
xchg
jno
push
incb
mov
mov
adc
jmp
mov
pusha
mov
in
pop
repnz
out
push
iret
cmp
and
cltd
fildll
loop
push
hlt
xor
push
or
inc
inc
add
cld
ds
jl
cmpsl
cld
pop
in
cltd
jae
cmp
push
sub
aaa
repz
std
jne
lret
dec
adc
bound
out
fcom
test
iret
cmp
sahf
sub
fdivrs
mov
jmp
pushf
pop
dec
push
ret
jmp
out
dec
inc
mov
jmp
add
cmpsb
lea
dec
push
add
mov
bound
aad
in
stos
out
jge
mov
outsb
lcall
sub
stc
xor
adc
notb
mov
mov
xor
xor
arpl
call
dec
inc
testl
and
jns
cmp
loop
aad
sti
pop
aas
into
inc
outsl
call
inc
mov
cltd
push
mov
lds
aad
jbe
or
leave
in
xor
out
add
jo
jg
mov
push
popa
hlt
mov
push
inc
adc
jbe
pop
stos
fstpt
addr16
jbe
lock
out
push
repnz
lock
pop
jmp
orl
or
stc
mov
loopne
fdiv
cmc
add
mov
int3
ret
add
or
xor
xorl
pop
loope
into
xor
dec
hlt
fisubrl
out
jmp
xchg
pop
xchg
push
and
test
mov
ljmp
out
mov
pop
xchg
pop
fistpll
icebp
outsb
pop
outsl
dec
and
fwait
push
pop
dec
stos
push
inc
dec
nopl
test
xor
jns
xchg
loope
movaps
out
out
loope
jb
jecxz
push
rcl
xchg
test
xchg
pushf
xadd
add
int
push
push
dec
dec
aaa
orl
mov
push
bound
test
les
jbe
or
imull
movsb
jbe
mov
inc
jge
pushf
lea
inc
sbb
jae
sub
jmp
repnz
lahf
movsl
jle
insb
mov
cmpsb
stc
cs
push
xchg
xchg
push
mov
push
dec
xor
cmc
ret
or
add
notl
insl
push
and
int
jb
bound
fdivrl
lea
lahf
xchg
negb
lods
adc
pop
jmp
mov
dec
push
mov
cmp
sarb
jmp
sub
dec
sbb
incl
out
adc
ret
mov
sbb
pop
or
xor
jg
sbb
cs
cmp
cmp
or
jb
jmp
out
fcoms
test
sahf
pop
stos
add
adc
jecxz
and
enter
pop
jmp
in
mov
mov
lea
out
js
psrld
ljmp
popa
sti
mov
orl
mov
or
jno
xorb
mov
inc
rcll
enter
mov
inc
adc
jno
push
rcr
stc
je
loop
int3
inc
fistpl
call
push
or
cld
xchg
into
and
fs
int3
sbb
and
cmc
lds
push
clc
jg
dec
js
je
jbe
int3
jae
xchg
dec
popf
clc
and
mul
testl
jbe
mov
adc
fnstcw
adc
add
call
add
incb
icebp
test
negb
scas
lea
in
push
out
rcll
dec
iret
aam
adc
lods
sub
add
ss
push
and
and
push
xchg
push
cmp
aaa
inc
jne
mov
push
add
js
and
push
xor
sbb
mov
outsb
pop
inc
clc
inc
pop
inc
sub
mov
ficoml
lods
test
jae
frstpm(287
fdivr
mov
daa
mov
jbe
cmp
mov
inc
add
sbb
mov
cwtl
push
subl
sub
loop
ret
cmpsl
adc
out
xor
inc
lret
pop
sub
and
cmpsl
cmp
xlat
std
mov
ret
out
lcall
insl
cmp
loop
into
adc
fcoms
leave
mov
sarl
in
mov
adc
data16
sbb
xor
sub
cltd
clc
xor
cwtl
out
pop
jl
xchg
icebp
sti
in
jno
shrl
js
addr16
in
mov
and
pop
aas
js
lret
fsubrs
jae
mov
dec
rcl
outsb
pusha
sbb
adc
pusha
jg
xor
inc
jno
fldenv
mov
cmp
out
cmpsb
rcll
ficoms
int3
shlb
add
cld
mov
mov
push
inc
mov
lahf
push
mov
dec
xor
mov
adc
dec
mov
cmp
sub
icebp
jle
or
dec
adc
cmpsl
inc
lahf
pop
xchg
inc
inc
lock
sub
jne
adc
dec
pushf
popa
cli
add
repnz
pop
sbb
or
add
inc
jge
in
mov
pop
arpl
aas
sahf
lock
push
jns
pop
adc
jg
mov
and
cmpsb
lahf
in
jns
faddp
shll
jne
les
roll
scas
lea
cmpb
aad
sarb
bound
adc
mov
notb
cmpsb
cmp
ret
jno
out
mov
les
pop
mov
push
pop
lock
fnstcw
mov
sti
cmpsb
and
sub
adc
test
push
jmp
jmp
es
out
mov
je
and
jle
cwtl
cmp
test
pop
mov
xchg
gs
hlt
into
int
xchg
mov
mov
pop
je
mov
or
sub
ljmp
popf
and
or
ja
hlt
cltd
sbb
movsb
inc
or
fildll
andl
dec
lea
mov
mov
xchg
mov
push
xor
lahf
sbb
jp
shlb
inc
xchg
xor
lret
sub
mov
xchg
or
mov
xor
mov
outsb
mov
or
push
subb
push
dec
jecxz
aam
and
jp
cmp
push
testl
repz
out
and
sbb
xor
jns
xor
cmpsb
and
xchg
dec
xor
cs
adc
and
xchg
push
dec
out
pop
test
jmp
ficomps
or
test
subl
push
mov
sub
ficompl
arpl
clc
adc
mov
inc
pop
pop
repz
push
push
cmp
xor
xor
cmp
fildll
cmp
dec
pop
pop
push
add
leave
rorb
adc
nop
popf
outsl
fldt
mov
dec
test
test
adc
in
dec
test
mov
jnp
sbb
add
inc
jno
pop
jmp
das
inc
and
add
push
ret
mov
push
loop
popa
xor
mov
fucomip
outsb
pop
fildll
shl
push
inc
xchg
xchg
addr16
out
inc
int
rcrb
lock
loopne
stos
subb
xor
xlat
enter
es
mov
push
add
and
enter
aas
inc
inc
lcall
addr16
inc
push
in
sbb
test
cmp
mov
jmp
andb
or
jle
bound
ja
cwtl
xlat
jl
js
pop
mov
push
sbb
add
dec
cmpsb
sbb
and
xor
jg
adc
dec
add
dec
dec
jne
rcrl
push
test
lods
and
sub
xchg
mov
cmpsb
enter
scas
ja
repz
test
fwait
out
mov
movsl
outsl
push
inc
in
pop
pop
cmp
push
sbb
mov
or
xor
dec
loop
rcl
scas
cltd
cwtl
sub
and
pushf
mov
jg
jecxz
fmull
sbbb
mov
cmpsl
ds
fdiv
push
cmp
push
cmp
pop
imul
int3
imul
jns
push
dec
push
imul
inc
pop
sub
test
scas
jecxz
xchg
xor
jmp
push
cmp
inc
sbb
jg
mov
or
xor
xor
adc
mov
sarb
pop
inc
and
pop
sub
mov
dec
and
dec
gs
test
push
xchg
cmp
sub
mov
sahf
mov
or
or
loope
movsb
inc
cmp
fcmovne
pop
mov
loopne
jnp
or
xor
or
pop
sti
mov
repnz
ss
lret
push
sbb
imul
push
adc
cmp
push
adc
cltd
jle
fdivs
aaa
cmpsb
sbb
sbb
jae
sti
ljmp
push
les
cmp
push
stos
adc
dec
lods
mov
jne
xor
outsl
adc
rorb
pop
ljmp
stos
mov
test
dec
mov
sub
jnp
scas
xlat
addr16
pushf
adc
movsb
divl
jp
in
repnz
rorb
lea
mov
and
push
cmpsb
sub
pop
jecxz
out
dec
pop
dec
cmp
xor
int3
std
fidivrl
inc
stc
or
inc
js
push
jne
psllw
loopne
jmp
inc
shr
iret
push
stos
das
jg
push
in
xor
dec
xchg
sub
fldl
and
fnstsw
and
cwtl
nop
repz
push
cmpsl
xchg
pop
and
push
cmp
jbe
ss
clc
mov
push
ja
dec
jl
and
xchg
adc
push
adc
movsl
insl
jecxz
cmp
test
pusha
scas
das
aaa
push
mov
lods
shrl
arpl
shr
jg
dec
push
inc
add
je
jp
movsb
jns
cmpsb
and
stc
sub
adc
mov
cmpsb
adc
jns
mov
sub
andl
lret
mov
pop
enter
or
movsl
loope
fdivrs
inc
inc
adc
daa
cmp
adc
xorb
dec
pop
stos
sub
xor
fnstcw
pusha
dec
iret
cmp
out
pop
inc
sbb
insl
bound
sub
int
into
xor
mov
incl
lret
rcll
xchg
inc
jg
mov
test
lea
mov
or
data16
pop
jecxz
jae
incl
out
or
xchg
ljmp
cmpsl
xor
pop
mov
xchg
es
insb
pop
push
jp
mov
adc
shl
xor
cltd
es
out
jns
into
xchg
xchg
dec
mov
stos
dec
adc
ss
ret
xchg
repz
movb
arpl
cli
xlat
test
out
sub
roll
loop
adc
inc
jo
test
roll
pop
xor
int3
mov
push
and
mov
push
mov
jle
aam
hlt
lahf
adc
cmp
ffree
sbb
test
popf
shll
adc
adc
inc
movsb
bswap
sub
in
cmp
incl
aam
jg
rcr
add
adc
aad
js
adc
jns
push
dec
cltd
sbb
ret
clc
rcrb
imul
inc
dec
or
adc
iret
sub
push
jge
xchg
in
pop
in
sbb
je
stos
popf
in
pop
inc
rcrb
lds
cmp
inc
jge
lahf
sbb
pop
dec
divl
les
xor
push
jno
stc
fildl
test
or
inc
mov
rcrb
adc
lahf
arpl
adc
push
test
lds
cmp
cmc
les
std
mov
push
daa
out
arpl
stos
pop
pop
mov
jns
dec
xor
insl
popa
test
dec
sub
sbb
mov
dec
testb
sbb
mov
pop
sub
test
seto
or
daa
push
movswl
imul
pop
lret
or
adcb
xchg
hlt
adc
jne
push
loopne
and
and
inc
mov
mov
gs
or
sub
or
xchg
jmp
lods
mov
adc
pop
fistl
addr16
mov
ret
fnstsw
loope
xor
mov
mov
pop
sbb
aad
xor
add
adc
jnp
pop
cmp
movsb
inc
pushf
loop
fwait
cmp
out
cmp
sub
mov
pop
pop
shrb
cwtl
pushf
dec
out
aad
and
lret
imul
lock
cmp
lock
outsb
jne
call
cmp
stc
mov
fcompl
xor
ret
into
or
cmpsl
cmp
repnz
xlat
xchg
inc
push
adc
in
repz
jbe
jecxz
sti
sub
dec
dec
mov
cli
pop
xor
sbb
testb
mov
xor
icebp
mov
pop
and
mov
dec
cmp
dec
adc
dec
xchg
push
in
dec
jns
ss
shrb
mov
push
imul
adc
aas
pop
mov
repnz
repnz
orb
rolb
push
cld
aad
mov
xchg
sbb
sbb
mov
sub
stos
push
test
lock
out
js
stos
pop
addr16
sti
imul
xor
js
in
adc
dec
daa
repnz
frstor
adc
mull
add
sub
jmp
out
ds
out
xor
das
ds
xchg
clc
movsb
lods
mov
popa
push
push
pop
orb
lods
outsl
dec
mull
bound
shll
fwait
push
sbbl
xor
mov
out
xchg
mov
push
out
les
ss
mov
adc
dec
mov
lods
call
cmp
sub
imul
lret
jne
push
mov
negb
punpcklbw
mov
push
fldenv
bound
cmpsb
ds
leave
inc
pop
mov
and
int3
dec
cld
add
movhlps
cli
jge
dec
dec
and
xchg
sub
sbbb
enter
or
jne
loopne
pop
jae
subb
push
xor
adc
mov
dec
xchg
lret
sbb
mov
sahf
nop
test
xor
xchg
dec
sub
aam
lahf
out
sub
mov
xor
es
add
fwait
push
lods
or
movsl
inc
mov
mov
dec
loope
sub
int
mov
adc
push
lahf
push
lds
mov
fwait
std
jne
jb
jmp
inc
sbb
mov
and
or
cmp
and
out
sti
enter
mov
test
rcrl
dec
adc
add
mov
inc
das
xor
push
mov
sub
lea
aaa
fwait
rorl
mov
cmp
ljmp
adc
mov
push
and
and
call
fnsave
es
lret
jnp
or
xchg
fs
xor
jns
mov
ja
xchg
shl
dec
push
xchg
mov
pop
dec
vmwrite
dec
or
push
xchg
adc
xchg
lea
pop
and
mov
inc
loop
mov
outsl
fildll
cmc
bound
leave
lods
nop
pop
cld
or
mov
insb
shr
mul
ss
xchg
ret
call
mov
adc
lcall
stos
ret
adc
rorb
loopne
stc
push
push
sub
and
iret
xor
movsl
inc
bound
jbe
iret
cld
jmp
std
cld
mov
std
mov
vprotd
leave
cs
adc
cmp
sbb
js
push
xchg
cmp
outsb
xchg
push
inc
into
pop
ljmp
pop
in
cmp
fnsave
mov
pop
movsl
lret
and
jnp
cmp
pop
test
push
dec
leave
add
cmpsb
std
f2xm1
jecxz
pushf
repnz
vandps
mov
jo
dec
shrl
loop
ret
int3
and
mov
inc
test
xchg
pop
jno
mov
nop
cltd
shll
xor
inc
lret
cli
jp
and
sbb
adc
jbe
push
adc
mov
or
pop
xor
rcrb
call
push
add
mov
jge
cmp
jnp
pop
cmpsb
test
decb
and
sub
sbb
push
mov
jo
xlat
outsb
jns
into
mov
add
xchg
inc
hlt
mov
pop
cmc
adc
sub
loop
out
adc
or
adc
lcall
lock
sub
leave
add
adc
mov
jo
xchg
jae
subl
jno
jae
outsl
pop
mov
inc
xchg
sub
dec
aam
aam
decb
sub
inc
dec
sub
mov
sbb
lret
xchg
push
adc
mov
mov
mov
int
cs
enter
fistpl
call
dec
pop
pop
scas
xor
in
es
aam
aad
or
adc
rorl
or
xchg
mov
repnz
and
cmp
repnz
pop
jle
sbb
jne
fstpl
cltd
adc
jp
xchg
jns
mov
int
inc
ret
sub
cmp
popf
call
xrelease
add
mov
imul
xor
xor
sarb
jle
adc
ret
pop
clc
pop
aam
and
negb
outsl
test
cli
aas
adc
repz
test
xchg
mov
sub
mov
sbb
test
xchg
add
jl
lds
jnp
push
cmpsb
sbb
mov
scas
lret
cmp
mov
jecxz
lahf
out
pushf
pop
cmp
pusha
int3
imul
daa
add
call
js
adc
sti
loop
mov
ss
into
xor
stos
fdivrl
sub
inc
push
stc
in
mov
jmp
dec
fs
lea
fimull
adc
decl
in
addl
or
enter
pushf
std
aad
lds
or
pop
cmpsl
jns
mov
inc
inc
sub
pop
out
and
call
adc
mov
mov
leave
or
mov
scas
and
fldt
insl
icebp
dec
add
lret
mov
andl
das
hlt
fistps
mov
push
push
adc
ret
add
je
pop
insl
cmpsl
sbb
dec
mov
movsl
ds
outsb
pop
adcl
adc
int
in
jl
mov
sbb
mov
loop
mov
jecxz
in
loop
adc
orl
cltd
cmp
mov
mov
dec
sbb
shlb
out
mov
roll
mov
cmp
pop
mov
xor
dec
jl
jne
aas
ss
xchg
arpl
jbe
jmp
shll
xchg
dec
xlat
leave
jnp
lret
dec
ljmp
pop
cmp
nop
inc
and
cltd
js
in
dec
push
mov
cmp
lret
scas
ficoms
popa
jg
xchg
mov
adc
dec
jne
sbb
and
sbb
dec
arpl
xchg
pop
aad
xchg
cmc
and
mov
mov
jne
xchg
in
cmpsb
push
shl
inc
in
fcmovu
push
sbb
inc
cwtl
cmp
and
popf
adc
jns
or
jbe
cltd
sahf
pop
inc
adcb
mov
mov
push
cwtl
adc
mov
scas
inc
mov
nop
or
mov
test
into
pop
push
aam
xor
cld
les
scas
out
ja
push
ficoms
mov
mov
push
jp
dec
mov
mov
cmpl
test
pushw
mov
rcll
int
and
in
dec
mov
roll
sbb
repnz
sbb
out
insb
xchg
jae
adc
add
lods
adc
jle
dec
sbb
cld
aam
sbb
ja
leave
dec
and
mov
push
lret
cwtl
je
add
into
jl
mov
mov
rcr
jg
sbb
subl
cli
es
sbb
insb
enter
mov
cs
add
push
outsl
sahf
incl
pop
xor
stos
ss
call
sar
out
inc
adc
mov
or
mov
fsts
pop
clc
sti
and
mov
scas
cmp
xor
shr
or
xor
adc
xor
cmp
enter
in
iret
arpl
xchg
push
insb
jnp
mov
cmp
mov
addr16
push
xor
pop
pop
mov
ss
sbb
xor
je,pn
ret
fwait
adc
mov
mov
cs
test
push
out
mov
xchg
lods
lock
mov
test
jae
sbb
mov
nop
add
inc
lahf
repz
scas
add
es
fnstsw
jg
clc
mov
mov
cltd
xlat
addr16
out
aam
pop
fsubrs
ret
dec
fwait
jg
adc
test
fsubrs
push
or
fidivs
push
jg
int3
fldl
cmp
mov
xchg
sub
sbb
aas
mov
rorb
adc
outsb
in
xchg
mov
clc
xchg
sub
xor
or
mov
xchg
cmp
pop
fidivrl
jne
and
jnp
ffree
sub
popf
and
dec
clc
cld
ret
dec
xchg
push
add
aam
leave
mov
shll
jns
mov
xor
xor
jecxz
adc
movl
ret
pop
push
or
test
cmc
clc
cs
aaa
mov
jecxz
inc
sbb
fs
jg
push
pop
orl
lock
aam
push
sub
dec
inc
xor
dec
iret
sub
jb
push
loop
push
leave
and
movl
jae
outsw
clc
in
inc
mov
xchg
sbb
nop
or
sub
stos
push
dec
mov
mov
test
es
xor
out
loope
fcoml
xchg
adc
shlb
out
pop
movsl
xchg
shlb
adc
sbb
stos
xchg
jns
cmp
lcall
push
adc
push
clc
or
cli
imul
adc
stos
xor
scas
in
mov
popf
lahf
cld
dec
out
jp
xchg
mov
sub
ljmp
cltd
and
fistpl
jns
inc
aam
lock
xchg
mov
xchg
fwait
mov
xor
int3
and
in
mov
aaa
mov
loop
inc
xor
lcall
xchg
xchg
lock
gs
push
xchg
addr16
insb
repnz
mov
lret
xchg
sub
rcll
ret
hlt
mov
add
or
scas
mov
ss
aaa
or
es
mov
xchg
pusha
les
pushf
dec
dec
pop
dec
jecxz
dec
jb
popl
or
je
mov
cmc
icebp
data16
stc
push
iret
mov
cmp
js
out
add
idivl
mov
stc
push
insl
into
ret
mov
mov
add
adc
inc
mov
fildll
jl
sarb
pop
leave
test
push
mov
and
test
mov
dec
repz
inc
or
repnz
push
lahf
mov
inc
jle
dec
divl
push
clc
dec
add
inc
ror
lea
jns
and
jge
mov
lahf
sti
add
lods
cltd
faddl
jge
push
popa
pop
mov
xchg
test
in
aaa
in
aas
fdivs
rclb
cltd
push
sbb
jbe
js
dec
push
mov
cs
aas
cmp
dec
sub
int3
fs
or
xchg
push
pop
mov
andl
insb
outsl
mov
cmp
faddl
filds
test
out
sub
test
in
mov
jmp
mov
idiv
dec
movsb
jecxz
mov
lret
or
pusha
mov
fbstp
out
ret
add
add
dec
pop
outsb
sti
xor
adc
jns
jg
or
shlb
outsl
loop
nop
iret
sbb
insl
jb
in
adc
imul
pushf
mov
cmp
fisttpl
adc
lret
mov
jle
mov
cmp
scas
fwait
push
mov
adc
add
sub
cmc
inc
push
ror
clc
add
out
xchg
push
inc
scas
mov
lret
movq
in
cmpb
inc
cmp
aas
fwait
inc
out
sahf
xchg
xor
push
inc
dec
add
push
push
in
pop
sti
add
or
push
mov
fs
repnz
or
cld
or
push
pop
adc
sbb
pop
sub
int3
es
pop
jbe
mov
push
mov
in
push
popa
sti
sub
das
cmpsl
loope
je
outsb
sbb
ret
fmuls
pop
rcll
jg
je
inc
inc
mov
pusha
icebp
mov
xor
cmp
mov
test
inc
or
mul
in
daa
jns
or
loop
xchg
loop
cmpsb
adc
inc
ja
bound
lret
push
les
push
subl
inc
or
pop
jl
imul
lret
add
subl
lret
add
out
and
xor
outsl
data16
mov
stos
movlhps
std
iret
sub
push
lret
in
and
cmp
inc
ja
repnz
aas
xchg
push
add
mov
push
jns
or
loop
mov
shl
xchg
xchg
cmc
pop
mov
out
clc
push
inc
fstl
jg
jmp
add
aas
push
pop
jno
popf
jle
push
scas
test
popa
imul
stos
sbb
je
aad
imul
cmp
das
inc
dec
in
pop
ss
out
add
inc
sub
in
pusha
mov
push
idivb
or
loope
out
shr
lock
inc
inc
mov
out
in
push
dec
aas
rorl
cmpsl
cmp
ljmp
out
ss
sahf
cmpsl
lahf
lods
iret
push
mov
cli
fnsave
sub
in
jmp
push
icebp
jo
mov
roll
and
dec
sahf
nop
addr16
mov
jb
add
test
lret
idiv
dec
int
test
in
enter
push
cmp
rclb
push
lahf
jno
outsl
pop
or
xor
jmp
jl
jns
popf
mov
loop
xchg
stc
cmp
lds
mov
popf
fbstp
enter
arpl
adc
inc
fwait
adc
adc
test
inc
popa
cld
or
das
pop
and
cs
mov
popa
dec
jb
scas
aas
dec
sbb
ja
jo
test
and
lods
pop
insb
dec
js
cli
push
sbb
and
nop
push
mov
jbe
in
lahf
pop
pop
xor
std
adc
mov
push
or
pop
sbb
je
mov
pop
notb
jne
xchg
in
dec
fs
and
xor
adc
cld
or
std
enter
mov
xlat
xchg
adc
pop
jl
inc
jle
pop
daa
bound
mov
push
inc
pop
mov
mov
cwtl
mov
hlt
movsl
mov
lret
lds
fwait
ret
add
and
fcomi
out
inc
comiss
outsl
out
outsl
xchg
push
cmpsl
test
mov
sub
pusha
mov
xlat
imul
ds
dec
jge
dec
and
jnp
pop
fnstsw
mov
add
add
jbe
pop
imul
jl
cmp
in
jnp
pop
orb
dec
dec
sub
dec
or
push
aas
pop
inc
fldl
sub
sub
out
inc
lret
andl
iret
sub
and
call
imul
int
pop
mov
adc
test
iret
rclb
scas
stc
xor
dec
cmp
popa
mov
and
in
push
push
rcll
mov
js
lret
loopne
adc
sub
or
inc
shrl
inc
mov
repnz
scas
mov
dec
dec
dec
call
or
dec
pop
mov
in
and
xchg
inc
test
jge
push
xor
mov
mov
addr16
rorb
lods
dec
arpl
mov
and
insb
insl
in
imull
mov
pop
jae
in
mov
jle
rcll
xor
cmp
dec
mov
push
std
jno
mov
in
repnz
mov
int3
sub
or
mov
xchg
addr16
jb
arpl
or
xchg
jmp
jae
imul
clc
and
mov
push
cld
mov
test
movsb
xchg
xchg
sbb
lea
jle
rcl
xor
in
hlt
lret
in
in
movsb
les
icebp
pusha
push
mov
fildll
jb,pt
ja
mov
in
mov
mov
addl
adc
xchg
ds
arpl
or
fcmovnbe
add
scas
addr16
daa
rol
outsb
jg
test
push
xchg
mov
test
aaa
negb
in
and
arpl
rcrl
xlat
sub
push
push
cmp
sbb
or
inc
dec
ja
cs
cmpb
xchg
icebp
cmp
mov
repnz
aad
mov
push
sub
sbb
stc
fs
clc
cs
ds
adc
mov
movsl
and
jl
mov
cwtl
or
mov
mov
adc
fidivrs
std
push
gs
jmp
add
jno
loope
bound
push
dec
and
pop
int3
mov
inc
out
mov
aad
push
mov
icebp
xchg
into
inc
popl
sbb
fsubs
lret
ljmp
ret
seta
xor
ret
or
cmpsl
in
push
jno
and
ret
out
mov
dec
insl
dec
shrb
xor
je
leave
mov
clc
cmp
pop
lret
movsb
hlt
cmp
repnz
clc
and
aas
pop
fldt
xor
mov
jg
outsl
or
shrl
enter
inc
out
mov
add
lds
xchg
xor
mov
fwait
mov
nop
and
rep
repz
mov
test
xchg
lea
push
inc
sti
xchg
mov
xchg
and
sbb
movsl
cmc
shlb
sbb
push
sub
mov
lock
stc
xchg
adc
sub
mov
mov
sub
arpl
cmpsl
lret
sbb
dec
stc
xor
pop
jns
inc
mov
int
push
jmp
xchg
ret
adc
bnd
out
add
lods
in
pushf
mov
mov
add
out
out
jo
std
in
outsl
js
dec
addb
adc
orl
push
sahf
jecxz
lcall
mov
push
fdivs
hlt
jnp
fistpl
add
cmp
or
push
call
inc
loop
add
fs
xor
out
cli
insl
add
push
jmp
repnz
xchg
jns
xchg
jae
fdivrs
mov
ficoms
inc
cs
jb
xchg
nop
cmpsb
incb
ds
mov
jl
pop
ret
lods
outsl
pop
cmpsl
and
int
lds
push
mov
aas
or
mov
inc
imul
call
shrd
adc
shr
add
jmp
cltd
dec
xor
sbb
bnd
pop
icebp
aaa
repnz
mov
rcr
add
mov
xchg
mov
mov
lods
mov
mov
mov
pop
xchg
mov
cmp
lret
dec
fcomps
or
xchg
ljmp
fs
rcll
sbb
jp
stc
mov
lahf
daa
orl
call
push
sahf
pop
fcompl
push
hlt
ja
mov
aaa
push
jo
rolb
cltd
setge
adc
lods
sbb
mov
mov
mov
push
xor
stos
mov
lcall
test
daa
jbe
ss
adc
mov
push
xlat
sbb
lret
push
imul
out
mov
push
cmc
cmpsb
pop
push
dec
pop
fcmove
out
adc
rcll
mov
lret
fsubs
sub
push
xor
mov
ja
pop
dec
sti
xor
xor
or
fwait
sbb
lcall
cmp
dec
test
pop
jbe
push
sub
xchg
loopne
jb
fsts
es
je
add
cmpps
idiv
stos
or
fs
jmp
xor
adc
sub
mov
mov
clc
mov
inc
sub
and
mov
jae
cmpsb
xchg
int3
test
nop
push
frstor
jno
pop
lods
mov
stos
fisubrl
nop
sahf
insl
jae
pop
jp
mov
mov
aam
jo
push
outsb
push
pop
jge
in
outsw
out
les
push
rcr
dec
xchg
xchg
mov
insb
add
aas
ljmp
rolb
push
fbld
sahf
vmovd
or
add
jbe
and
divl
add
mov
xchg
xchg
fadds
adc
in
inc
cli
adc
push
test
or
sar
or
mov
pop
ljmp
rclb
adc
mov
bound
cli
add
out
inc
sbb
into
scas
push
in
addr16
test
addr16
cmp
repnz
call
enter
hlt
pop
fdivl
mov
or
call
adc
lcall
dec
push
mov
jecxz
int3
aam
fistps
push
adc
mulb
aaa
add
aad
das
mov
mov
lods
xlat
movsb
mov
mov
sub
pop
xor
mov
jg
hlt
mov
fadd
sub
into
fists
aas
aam
mov
fs
xchg
sub
mov
push
push
push
lods
jmp
jg,pt
das
pop
repz
movsb
and
jge
daa
mov
or
jb
push
adc
sub
aas
je
into
repz
lods
shll
lea
inc
lret
cmpsb
xor
mov
add
xlat
inc
sub
and
xchg
jmp
mov
dec
sbb
inc
add
xchg
add
in
cwtl
sahf
pop
mov
pop
cmp
aam
mov
sbb
out
xlat
fdivr
movsl
and
pop
mov
mov
jno
xchg
lds
fldt
mov
add
push
xchg
sbb
lcall
ds
loopne
jmp
add
cmc
mov
mov
ja
lods
jmp
sub
scas
imul
shl
jge
clc
fistl
mov
xor
mov
icebp
push
pop
daa
andb
pop
pop
pop
bound
xchg
andl
in
in
jb
incb
sub
lret
je
fmull
push
shll
adc
adc
aaa
xchg
sub
pop
fwait
mov
inc
cmp
lds
jne
les
cmp
pop
and
xchg
pushf
mov
mov
in
outsl
xor
mov
or
ret
mov
sbb
out
loopne
jne
cmpsl
mov
andb
js
push
call
mov
pop
insb
mov
loope
push
pop
int
lods
cld
fmulp
test
out
ret
cmp
xor
imul
push
in
mov
andl
add
pop
adc
xchg
jle
aam
aas
or
jle
dec
and
xchg
mov
mov
sub
add
push
mov
nop
cmpsl
rcr
mov
fcmove
jecxz
popf
bound
subl
data16
push
jne
mov
loopne
add
in
fsubrl
in
in
sub
subl
mov
xchg
jno
mov
or
sbb
out
xlat
aam
pop
insl
add
xor
sbb
out
cli
jo
jecxz
dec
pop
add
dec
cmp
mov
sub
pop
adc
pop
stos
cmc
in
jmp
sahf
cmp
iret
sahf
popf
add
xchg
lret
pop
lcall
das
aaa
pop
dec
push
clc
std
in
andl
adc
sub
movb
pushf
mov
aaa
add
add
add
jmp
xorb
mov
sub
cmpsb
enter
in
sub
sub
cmp
sub
or
imul
mov
xor
iret
andb
test
out
push
int
xor
cli
mov
stos
inc
loope
fldl
js
iret
xchg
movsl
mov
mov
das
cmp
sbb
xchg
insb
inc
jmp
imulb
pop
cmp
mov
mov
dec
xchg
ljmp
jmp
iret
insl
fadds
je
rclb
xor
inc
xchg
inc
dec
mov
leave
sbb
pusha
xchg
mov
xorb
mov
movsb
lods
jg
push
mov
sub
in
ficomps
jmp
mov
fwait
xchg
add
xchg
sub
stos
sbb
fnstsw
dec
jle
mov
shl
mov
or
iret
xor
pop
test
xchg
mov
fdivs
cmp
mov
push
inc
pop
fisubl
scas
jae
push
loope
jmp
std
inc
lcall
mov
lret
mov
jmp
insb
xor
push
mulb
shrb
out
mov
dec
sbb
xor
dec
pop
jmp
sbb
ret
adc
dec
xchg
mov
movsb
and
push
or
mov
int3
mov
inc
or
jg
stc
add
in
jbe
mov
in
bound
ret
lea
in
jns
pop
mov
pop
mov
sbb
mov
lahf
insb
out
push
jmp
aad
add
adc
fs
mov
mov
clc
mov
mov
inc
test
pop
jae
pop
jnp
push
lds
lods
or
rol
mov
lods
int
rcl
xchg
sahf
inc
into
adc
jno
cmp
lcall
call
mov
ds
in
jle
adc
sarb
fs
repz
in
fisttpll
jmp
pop
sbb
ror
notb
cli
arpl
pop
ljmp
lret
xor
xchg
mov
lcall
jns
aam
ds
and
jecxz,pt
mov
xchg
es
push
xchg
out
aaa
xchg
xchg
mov
repnz
movsb
jecxz
test
sub
mov
pop
loope
and
xchg
mov
mov
lret
fldt
daa
xor
mov
les
lods
dec
jns
jmp
orb
xor
stc
test
mov
loopne
aaa
xor
push
gs
xor
xor
test
dec
sub
mov
sahf
jb
sbb
insb
sub
into
filds
push
cltd
ret
dec
pop
popa
sub
dec
pop
jg
and
cwtl
xor
add
add
xor
test
push
outsl
popf
idivl
js
std
adc
xor
out
lock
sbb
popa
fsub
int
add
loop
xchg
fcmove
jle
adc
ja
mov
or
xchg
arpl
mov
das
lahf
dec
xchg
sbb
push
pop
enter
and
scas
aam
gs
std
in
and
push
cmpsb
cmp
mov
cli
in
repz
push
jae
or
inc
pop
gs
cmp
std
lcall
dec
ja
sbbb
lahf
jecxz
into
sub
mov
gs
cmp
mov
jle
or
cltd
movsl
push
aam
sub
repnz
ret
rorb
scas
mov
imul
jge
inc
movsl
ja
jge
mov
mov
mov
jnp
and
sbb
push
push
jo
fdivl
sub
jno
out
push
sbb
adc
mov
pop
test
dec
sti
mov
push
xchg
mov
adc
xor
out
push
cmp
popf
out
enter
ret
dec
inc
iret
cmpsl
loope
inc
shrl
pop
mov
mov
mov
adc
dec
push
int
movsl
push
fldl2e
sub
inc
insb
push
inc
rolb
cmpsb
mov
stos
cli
sub
out
in
aaa
inc
mov
and
es
mov
fisubs
into
outsb
mov
or
or
test
popf
cli
stos
sbb
ret
aas
or
sub
sbb
dec
mov
mov
push
or
dec
xor
fs
mov
push
mov
inc
pop
xchg
cltd
sbb
imul
inc
in
cli
popa
jnp
push
popa
jns
xor
cmpsb
mov
out
ret
mov
orb
vmaxsd
cmp
push
js
and
jp
lds
cmp
sub
andb
cmp
aad
in
cmp
fnstcw
int3
iret
xor
clc
dec
loopne
ret
mov
mov
mov
pushf
rol
xchg
jl
aas
pop
popf
add
test
mov
sbb
in
push
mov
scas
inc
out
mov
notb
std
out
cwtl
inc
or
fucomip
fwait
xchg
ja
cmc
gs
lahf
adc
mov
dec
mov
dec
push
test
loop
in
push
aaa
ljmp
roll
lock
mov
jbe
jns
fistl
iret
jl
mov
lock
inc
cmpsb
inc
or
iret
or
pop
es
ja
out
leave
cmpsl
mov
push
outsl
fwait
add
pop
mov
cltd
xchg
sbb
ja
pop
jns
fcoml
cmpsl
mov
sti
adc
add
xor
out
inc
leave
ss
push
movsl
push
popa
aad
int
dec
cld
adc
mov
sbb
shrb
adc
je
sub
jge
lahf
xchg
sub
inc
ds
stc
and
jg
call
and
lods
sub
fs
jge
arpl
cmp
fldl
jo
inc
dec
and
push
jp
mov
inc
push
out
cli
ja
sub
jbe
js
pusha
sbb
dec
xchg
outsb
lret
lock
iret
push
pop
imul
xchg
adc
sub
mov
stc
push
loopne
sub
je
lock
cmp
mov
inc
test
cli
dec
cmpsb
mov
push
jge
and
xchg
sub
and
cmp
rorb
push
mov
adc
xor
mov
je
push
mov
cld
inc
andl
iret
ja
adc
popf
fwait
jge
jl
jg
out
stos
pop
test
rorb
jle
sbb
mov
sub
dec
rcl
shlb
shr
mov
aam
ret
lock
pop
push
inc
xlat
push
mov
popa
jbe
stos
fistpll
mov
iret
rcrl
cmc
das
push
pushf
out
and
jmp
sub
repnz
orl
int3
mov
outsb
xlat
pushf
sbb
push
lods
jb
repz
bnd
imul
push
loope
xchg
inc
sub
lock
xchg
pop
insb
fcoml
test
orb
mov
adc
stos
cwtl
std
int
icebp
and
icebp
inc
gs
fucomp
hlt
add
cmp
idivl
push
cmp
data16
call
jp
rcll
bound
sbb
daa
test
arpl
ljmp
push
hlt
mov
inc
xchg
or
mov
push
xchg
push
sbb
int3
pop
mov
addr16
cmc
inc
push
xor
and
sub
push
repz
push
or
and
es
hlt
inc
std
popa
loopne
push
push
mov
loopne
mov
fwait
xchg
mov
jns
subb
inc
pushf
fisubs
mov
dec
or
push
pusha
cmp
xchg
cwtl
leave
cmc
mov
cs
dec
test
xchg
pop
icebp
adc
mov
mov
jno
out
push
pop
jl
test
adc
hlt
addr16
push
xor
inc
add
xlat
ret
push
sub
nop
mov
pop
nop
mov
fistl
adc
fidivl
pop
mov
les
test
xor
daa
lock
addr16
loopne
sbb
xor
leave
jns
inc
ret
add
test
stos
sbb
mov
lea
cmpsl
pop
dec
fdivr
lret
xchg
js
jne
jp
je
addb
jbe
into
cmp
xchg
sbb
pop
cmp
sti
lcall
jge
add
jb
pushf
pop
inc
pop
in
sti
mov
sub
arpl
ljmp
sbb
out
imul
xchg
or
xchg
xlat
sub
in
sbb
das
jns
sbbl
xchg
mov
sbbb
nop
add
adc
or
cltd
sbb
jp
aam
ds
das
pop
pop
data16
and
push
dec
jmp
jb
fnstcw
push
ret
in
scas
mov
gs
xor
and
mov
inc
fwait
push
dec
push
adcb
sub
and
mov
xchg
daa
add
stos
cli
mov
mov
xlat
add
shr
dec
lret
xor
push
and
cwtl
shll
mov
jg
pop
icebp
out
jmp
lds
xchg
pop
xchg
pop
mov
jnp
test
loope
test
xchg
fs
push
fldenv
push
and
jno
push
je
sarb
lret
mov
adc
test
mov
outsl
fsts
or
sub
xchg
es
fildl
imul
mov
push
jl
or
dec
sti
into
outsb
movsl
or
xor
sti
mov
les
into
add
mov
ret
fistpl
in
bound
pop
mov
push
adc
mov
add
cmp
lret
adc
stc
cmc
pop
int
flds
and
adc
inc
lods
sbb
popa
mov
testb
sbb
mov
mov
inc
adc
push
shrl
mov
icebp
icebp
out
enter
fcoms
push
push
sbb
dec
jle
stos
add
data16
cmc
insl
pop
inc
movsb
into
addb
sbb
iret
xchg
jne
in
gs
jecxz
notb
test
jbe
or
mov
sbb
insl
lcall
add
push
or
push
ljmp
jmp
sub
mov
sub
les
sarl
pop
sbbb
outsl
xor
xchg
xorl
fidivrs
push
nop
cmp
jle
rcl
test
ja
inc
adc
or
or
and
xor
or
cmp
cmpsl
inc
dec
inc
cmp
adcl
ja
push
inc
lods
stos
inc
mov
movsl
adc
mov
pusha
mov
rorl
push
filds
loopne
ljmp
fimuls
mov
dec
xchg
icebp
roll
push
push
outsl
inc
xchg
dec
and
fwait
cmp
scas
aam
mov
pushf
test
push
aad
aaa
icebp
popf
adc
adc
pusha
jbe
fimull
cmp
mov
mov
popf
dec
push
pop
cwtl
or
inc
cmc
push
push
mov
cmc
jbe
arpl
cmp
adc
js
cmpsl
dec
push
inc
sub
stos
push
roll
ds
leave
scas
mov
loopne
imul
push
mov
cwtl
scas
push
xor
dec
push
shlb
mov
push
xor
pop
adc
push
out
add
jp
jo
movsb
mov
push
push
lods
lret
dec
cli
xchg
lock
fwait
cs
cmc
mov
push
outsl
popa
pop
movsb
xchg
loopne
xor
lahf
js
sub
sub
lcall
ds
pop
push
stc
jb
inc
add
int3
mov
aaa
gs
cli
ljmp
xchg
push
pop
push
shll
xchg
sbbl
pop
lret
in
stos
repnz
mov
enter
cmpsl
cmp
dec
test
mull
andl
test
std
cmp
in
mov
ljmp
mov
cmpsl
adc
jno
aas
popl
jbe
rorl
mov
xor
aam
addr16
and
cltd
sbb
sub
stc
adc
mov
les
fcmovbe
iret
jp
aam
push
sbb
subb
jge
stc
sbb
testb
sbb
sahf
add
pop
xor
push
jbe
clc
jbe
out
adc
sbb
mov
stos
jp
arpl
popa
ja
mov
pop
sbb
js
not
lods
xrelease
xlat
sub
insl
sbb
and
aas
push
loopne
out
mov
add
stos
sti
adcl
xchg
fwait
pop
mov
mov
sub
fnstsw
push
cmc
inc
in
adc
mov
rcr
and
aaa
sub
scas
bound
inc
loop
jb
popa
xor
sahf
cmp
xchg
cmp
es
pop
and
inc
mov
rcr
insb
inc
jle
mov
push
out
mov
imul
cwtl
scas
fwait
adcl
enter
or
repz
inc
push
push
push
fs
or
jl
push
dec
test
xchg
dec
loope
jle
sub
jl
test
sbbl
imul
pusha
addr16
mov
shll
ljmp
fildll
outsb
mov
sbbl
and
ret
test
xchg
fs
mov
pop
xor
daa
adc
mov
jne
jne
dec
mov
mov
movsl
es
lret
adc
repnz
xor
loopne
pop
nop
jne
inc
outsl
stc
push
dec
jns
mov
push
pushf
aas
pushf
inc
or
into
dec
aam
nop
push
repnz
pop
jecxz
dec
rcll
adc
sti
in
push
iret
sbb
int3
xchg
arpl
xlat
iret
into
xchg
mov
movsl
scas
cmpsl
rclb
jge
dec
sbb
sbb
jmp
push
inc
ret
add
push
push
dec
dec
xchg
xlat
add
les
daa
sub
ret
pop
cs
jbe
lods
xchg
ret
add
subl
cltd
inc
jnp
mov
sbb
outsl
push
mov
push
movsl
data16
pop
in
adc
inc
cmp
mov
dec
nop
dec
pop
shrl
adc
push
mov
stos
popa
insl
and
cmc
enter
aam
imul
mov
es
cmpsb
jp
mov
jnp
insb
or
inc
add
enter
pop
mov
sbb
call
inc
in
das
inc
mov
xchg
xor
add
inc
ret
insb
cwtl
xchg
mov
mov
lea
sub
je
scas
test
stos
les
mov
jmp
jno
lahf
enter
xchg
shlb
mov
xor
insl
sbbl
mov
inc
test
mov
test
cli
dec
stos
in
loop
pop
dec
jecxz
fmulp
outsl
outsl
inc
in
cmp
aad
sub
xchg
arpl
ja
into
lret
bound
cwtl
sub
arpl
dec
fprem1
mov
call
sub
nop
jle
jne
push
lods
ret
xchg
idivb
mov
popa
mov
and
insl
jmp
cmc
out
xchg
push
pop
cmp
inc
inc
sub
push
aam
dec
out
pushf
sbb
ret
mov
inc
es
xor
add
push
pop
gs
stos
xchg
add
push
cli
icebp
fistpll
and
gs
xchg
mov
lcall
cli
cmp
mov
and
mov
jl
popf
fisttpl
sbb
cmp
pop
cmp
sbb
jb
in
dec
aaa
std
lahf
or
jns
xor
xchg
addr16
pop
mov
xchg
in
cli
stc
adc
fsubp
cmpsl
mov
loopne
cmpsl
ficoms
push
in
ja
dec
pop
cltd
rcrb
imul
jns
les
jg
or
lods
and
cmp
out
adc
dec
dec
jns
and
cmp
mov
rcll
pop
imul
les
mov
icebp
push
dec
xor
popa
jle
jae
mov
push
aaa
or
adc
and
mov
sti
lret
test
xor
mov
rcl
stos
in
sub
jbe
cmp
daa
xchg
daa
cmpsb
fbstp
divl
mov
sbbb
or
cmp
xor
push
sbb
adc
jnp
int
mov
notb
fadds
pop
int
rcr
add
sbb
xor
dec
xchg
call
cmpsl
nop
fisubl
pop
cwtl
sub
xchg
mov
mov
sub
iret
dec
inc
test
jbe
cmp
mov
xor
add
xchg
xchg
popf
cmp
and
je
and
popf
ret
shlb
fnstcw
mov
cmp
or
in
add
sbb
lret
imul
add
lret
push
addr16
mov
mov
mov
add
popf
xchg
lea
out
popa
sti
jbe
les
or
dec
stc
repnz
decl
insb
mov
fs
sbb
cmp
clc
out
lret
and
pop
leave
inc
es
mov
or
cltd
call
js
popf
lods
mov
sub
jecxz
mov
jge
cvtdq2ps
cld
push
stc
stos
stc
ss
dec
dec
lods
pop
rcl
sbb
push
jle
outsw
addr16
mov
imul
repz
xor
cwtl
cli
rclb
lahf
xchg
sbb
push
sub
nop
push
cmp
cmp
fcoms
cld
in
pop
push
mov
out
out
jb
int
mov
or
divl
in
fsts
push
imul
jg
sub
adc
jnp
add
daa
jmp
sbb
add
jp
fstps
dec
mov
jl
popf
sbb
bound
dec
icebp
js
cwtl
hlt
std
sbb
push
pushf
int3
fsubrp
bound
mov
push
push
test
std
mov
loop
xchg
push
iret
xor
pop
or
ret
ja,pt
or
inc
inc
sub
movsb
pop
inc
pop
imul
scas
inc
pop
shll
ret
mov
scas
push
negb
mov
aad
cs
jae
jns
fistpll
std
xor
mov
roll
jns
cmp
outsl
es
ss
cmpsb
xchg
inc
xchg
jl
mov
clc
hlt
sub
xchg
ss
repz
shlb
cmp
movsl
pop
les
jnp
pop
add
incl
scas
pop
andl
lods
gs
rsqrtps
lea
leave
and
sbb
in
in
cli
dec
cmp
popf
or
call
les
xor
or
add
or
leave
sahf
pop
imul
icebp
jo
cmp
cmp
in
lret
popa
cld
and
or
fcoms
test
mov
sti
aam
sub
sub
nop
jecxz
inc
lret
lcall
xchg
fwait
mov
sysret
rcll
sar
std
shll
xlat
cmpsb
ja
icebp
lret
or
mov
adc
repnz
mov
jae
gs
insb
je
cmp
sub
int3
dec
in
popf
cld
sbb
mov
insl
inc
pushf
mov
pop
popa
inc
nop
inc
outsb
insb
jbe
jmp
rcll
daa
cli
and
mov
cs
insb
loopne
leave
xchg
das
daa
xchg
test
cmp
xchg
lret
jp
bnd
in
pusha
dec
pop
adc
mov
jb
imul
xchg
inc
xlat
pop
xchg
ret
xor
jo
scas
mov
fcoms
inc
into
movsb
in
and
icebp
int
mov
and
mov
xchg
lret
inc
lcall
dec
mov
sbb
jns
add
push
fists
addr16
aad
int3
movsb
add
jl
lods
outsb
sti
sbb
push
jno
iret
ljmp
and
adc
imul
cs
gs
lret
push
dec
out
and
push
push
sub
notl
sbb
fwait
out
and
orb
ret
pop
push
test
cmp
add
sbb
sarl
xchg
clc
xchg
inc
or
aad
jbe
pusha
sbb
outsl
sbb
jbe
inc
enter
pop
nop
stos
jp
dec
repz
mov
lods
lret
pmullw
test
sbb
cmp
dec
mov
sbb
notl
sbb
sub
fld
insb
adc
push
xor
xor
adc
pop
dec
sbb
test
jbe
cmp
pop
xor
push
ds
gs
aad
adc
push
sub
inc
pop
adc
test
mov
inc
mov
push
int
pop
sbb
fmul
xor
mov
dec
pop
sub
stos
cwtl
or
xor
test
push
fiaddl
cmp
push
mov
jle
dec
sub
sbb
sub
cwtl
mov
inc
aas
movsl
add
sub
sarl
addl
movsb
stos
cli
mov
inc
mov
mov
add
test
sub
ds
sbb
testl
fisubrs
in
ljmp
jbe
das
mov
idivl
in
sub
mov
xchg
adc
jecxz
cmp
and
sbb
aam
cld
cwtl
adc
mov
jecxz
lock
lret
sub
rol
and
adc
movsl
outsb
sbbl
inc
pop
cmp
cmp
push
outsb
mov
jb
outsl
shl
and
and
je
mov
fs
fbstp
adc
mov
cmpb
push
jg
loope
je
fiaddl
jns
inc
mov
jno
stos
mov
enter
pop
jbe
popa
and
push
jae
mov
arpl
or
loopne
imul
and
ds
ljmp
iret
cmp
test
sbb
inc
add
popf
cmpsl
stos
xchg
fmulp
loope
push
and
jmp
sub
push
seto
sub
sbb
sti
dec
sbb
fstpl
mov
xchg
fisttps
repz
xchg
out
in
mov
adc
xchg
pop
mov
dec
inc
jne
jp
cmp
push
adcl
sbb
in
imul
pushf
lcall
lods
mov
dec
aaa
aam
mov
push
lods
pop
es
mov
fldt
call
loopne
jl
xchg
push
dec
sti
sbb
jne
xor
rcll
and
fiaddl
jno
and
dec
mov
sti
in
mov
pop
pop
mov
arpl
aam
lcall
jg
mov
aas
pop
xchg
insl
dec
clc
xchg
in
pusha
sub
dec
rol
jbe
sub
fmull
fisubrs
add
cs
cltd
jo
daa
or
rcrb
dec
in
out
cmp
sahf
mov
das
xor
es
adc
xchg
stc
add
mov
movsb
jo
xchg
in
test
xor
dec
and
aas
mov
rcll
cmp
in
rcr
cwtl
dec
pop
mov
mov
cmp
pushf
mov
mov
push
jg
dec
lwpval
fwait
out
nop
push
mov
imul
push
push
out
fwait
push
outsb
stos
mov
push
dec
movsl
adc
push
xchg
out
jecxz
subb
pop
or
andl
jne
push
clc
loope
repnz
notb
orb
into
fnstenv
popf
sub
inc
mov
push
pop
call
std
jb
xor
sub
js
testl
xlat
jle
shll
fnstcw
iret
shlb
dec
cmpsb
dec
xor
push
push
roll
add
mov
adc
jo
je
lcall
mov
or
enter
pushf
pop
in
pop
mov
jne
in
sbb
xchg
in
mul
mov
dec
nop
xlat
call
xor
pop
jns
aaa
icebp
jge
movsl
lods
sahf
mov
push
pop
xchg
loop
push
push
pop
scas
jns
js
mov
out
int3
push
jg
push
aam
mov
filds
jmp
jne
lcall
leave
inc
sahf
mov
call
xchg
push
cmp
and
cmpsl
fwait
mov
xor
adc
ror
cmpsl
cmp
and
shrl
dec
popa
sbb
into
mov
lds
sub
adc
pop
rcr
or
in
popa
and
out
cld
subb
stos
hlt
sub
or
mov
sub
cs
mov
push
ret
xchg
lcall
jnp
mov
enter
sub
inc
mov
jp
jno
mov
fimuls
jmp
fiadds
dec
cmp
mov
pushf
mov
ja
pop
jl
aad
pop
addr16
xor
xlat
scas
cmp
mov
pop
pop
cmp
jb
movsb
adc
dec
and
xor
sbb
inc
xchg
push
inc
xchg
xor
inc
aam
test
mov
int
iret
adc
pop
sbb
bnd
and
cvtps2pi
enter
jl
xor
enter
jg
mov
insl
aad
cmpsl
in
pushf
sbb
out
jp
jmp
cli
arpl
and
inc
imul
nop
aas
and
mov
xor
jae
lcall
leave
leave
pop
int3
pop
aaa
cmp
xchg
bound
ficoml
lret
mov
cltd
dec
pop
aam
push
scas
mov
or
clc
les
cmc
sub
call
out
dec
pop
push
or
dec
mov
lea
pushf
mov
mov
xchg
jmp
dec
fidivrs
mov
lea
add
or
ds
or
ficompl
dec
pusha
stc
or
int
mov
test
std
jecxz
mov
mov
cmp
push
and
mov
xor
or
in
stos
inc
add
pop
add
push
das
dec
loop
iret
in
jne
push
xchg
mov
inc
test
leave
fldcw
pmullw
setge
ss
mov
and
xchg
sarb
sarb
pop
mov
sbb
lods
fisttps
pop
or
rol
pushf
test
and
push
ret
mov
jns
pop
mov
cmpsb
mov
mov
push
adc
aad
loope
lods
xchg
or
mov
dec
adc
mov
push
push
lods
outsl
vpmacsdqh
sbb
push
js
test
push
mov
es
cli
adc
pop
push
movsl
flds
mov
int3
stc
outsb
ret
hlt
stos
in
jno
cmpsb
mov
loop
dec
pop
lock
arpl
orb
popf
cmp
outsl
lret
fdivl
fistl
mov
test
das
in
pop
pop
xchg
push
ja
insb
pop
xor
fistpll
movsb
inc
addr16
outsb
push
pop
dec
xlat
ljmp
fnstcw
xor
clc
cmp
repnz
lret
add
inc
sahf
pextrw
pop
fst
arpl
inc
sbb
push
xchg
int3
divps
fdivrp
xchg
jbe
cwtl
lahf
ja
xor
push
outsb
ret
jnp
mov
mov
jle
push
mov
and
fistpll
out
notl
mov
fisttpll
nop
mov
push
jmp
daa
cld
ror
cmp
rolb
rcrb
test
inc
jbe
pusha
adc
inc
loopne
loopne
inc
sbb
ljmp
and
rclb
in
fdivs
dec
or
add
andl
cmp
sbb
pop
pop
lea
xchg
int
int3
xor
cmc
cmp
and
es
mov
rcll
cld
sub
loope
push
cmpsl
xchg
sub
lds
cmp
cld
or
mov
std
ljmp
fwait
and
movsw
aas
arpl
xor
or
fcom
pop
mov
jno
push
dec
or
cmp
outsl
in
xorb
and
iret
mov
mov
addb
adc
fistps
mov
xchg
jle
xchg
aas
push
jge
sbb
jle
popf
int3
jge
pop
push
call
mov
cmpsb
push
sub
or
xchg
sbb
pop
addr16
mov
sbb
mov
xor
jno
call
sub
xor
inc
lret
sub
add
ja
clc
pop
aad
mov
hlt
scas
ret
sub
cld
leave
popa
dec
outsl
inc
pop
pushf
push
ret
xchg
jnp
mov
jbe
and
into
cmpsl
mov
pop
cli
dec
fstps
xchg
mov
ds
xchg
pop
lock
sbbb
aad
fistl
imull
fisttpll
xor
push
xor
dec
add
xchg
imul
xchg
repz
add
pop
mov
sti
test
sbb
mov
fwait
leave
addl
mov
push
fimuls
lds
sarl
cwtl
xor
in
jmp
imul
jle
push
fsubl
adc
adc
jae
mull
vmovapd
cmpsl
lods
and
add
aas
adc
leave
dec
sub
cmpsl
push
xchg
sbb
sub
push
pop
mov
push
xchg
adcb
pusha
mov
dec
sbb
mov
jmp
push
adc
xor
test
testl
das
in
outsl
or
insb
xor
sbb
out
mov
scas
rcrb
sbb
xchg
lods
bound
imul
or
movsb
out
fdivs
jnp
js
je
push
dec
cmp
pop
jge
push
cmp
sbb
mov
shlb
test
les
mov
in
lods
cmc
inc
in
adc
mov
xlat
out
inc
cmp
fstps
fldl2t
mov
mov
ss
jmp
adc
mov
mov
jno
add
xchg
jbe
xchg
cmp
cmp
push
add
sbb
sbb
dec
mov
jae
leave
dec
jmp
dec
mov
ret
fisttpl
inc
out
dec
pop
clc
sbb
stos
xor
pop
xor
idivl
jnp
popa
push
add
insb
int
adc
iret
add
arpl
mov
call
lea
les
shll
jbe
add
inc
or
sbb
test
pusha
jne
jl
fstpt
xchg
dec
shlb
dec
data16
nop
loope
pushl
cmp
sahf
das
push
jns
into
inc
cmp
jnp
adc
add
mov
pop
mov
lret
pop
out
ss
sbb
xorl
or
in
pop
xor
mov
sbb
and
add
add
adc
cs
adc
jbe
lea
add
xor
fwait
jg
xor
inc
inc
mov
std
je
xor
mov
pop
shll
stc
das
add
and
pop
addb
arpl
out
lcall
pop
fcmovnu
imul
or
lret
mov
or
es
std
push
ficoms
mov
shl
into
xlat
jle
mov
gs
rcrl
pop
adc
mov
add
mov
inc
and
and
xor
or
cmp
adc
outsl
and
cmp
loop
sbb
jnp
xchg
or
dec
xor
sub
add
jp
sub
repz
imul
outsl
mov
mov
mov
mov
in
xchg
pop
repnz
sarb
sub
or
and
aad
mov
ret
scas
mov
or
jnp
out
xchg
mov
je
addl
push
adc
push
cmpsb
adc
jecxz
sub
shrl
les
cmp
push
mov
leave
push
rorb
mov
fidivrl
dec
in
mov
inc
adcl
js
das
outsl
cmp
insb
xlat
jecxz
aad
push
sbb
pushf
jnp
xchg
scas
lcall
scas
cmp
out
fdivrl
test
pop
sbb
and
arpl
rolb
cltd
jecxz
repz
mov
mov
push
push
test
das
std
add
loop
mov
in
ja
pusha
jbe
fsubrs
sbb
sahf
iret
mov
mov
mov
notb
jge
mov
imul
in
cltd
arpl
jbe
pop
mov
xor
mov
xchg
stc
adc
xchg
les
mov
mov
mov
cs
xor
mov
or
mov
inc
les
jg
cmc
mov
fstpt
or
decb
jns
inc
mov
stos
mov
dec
jae
sbb
jp
icebp
imulb
lret
sbb
sub
cli
sub
es
xchg
mov
dec
enter
or
inc
stos
ret
mov
push
flds
jb
adc
out
hlt
cmp
pop
cmp
push
shlb
push
ficoml
aam
andnps
mov
or
ss
data16
xor
iret
adc
mov
push
mov
dec
xchg
sbb
mov
adc
aad
jecxz
fdivrl
shlb
orb
push
or
mov
or
lret
aaa
in
push
cmp
hlt
lock
fnsave
cwtl
cmp
ret
or
sarl
sbb
jge
or
xor
and
inc
push
sub
nop
pop
ja
mov
xchg
jg
ficoms
inc
or
daa
pop
mov
sub
sbb
dec
cmp
mov
cmp
inc
sbb
mov
test
push
and
push
or
lcall
std
push
sete
lret
in
adc
scas
jne
xchg
pop
dec
iret
fidivrs
xchg
ljmp
mov
or
push
add
imul
mov
pusha
inc
mov
sub
jns
es
xor
xchg
cwtl
jno
das
xor
xchg
imul
popf
aad
outsl
xor
cmp
sarb
xor
jl
add
fwait
out
rolb
xchg
sti
pop
jge
sub
jbe
imul
push
movswl
adc
push
push
push
gs
stos
sahf
and
cmp
out
fstps
aad
adc
jecxz
xchg
sub
sub
pop
pop
loope
pop
cltd
test
dec
daa
and
test
sbb
ficoms
xchg
mulb
push
rcl
repz
in
les
sub
cs
stos
scas
movsl
inc
pop
mov
dec
mov
push
mov
and
hlt
movsl
xchg
jne
out
adc
mov
stos
ficoml
loop
movsb
insb
xor
inc
movups
ss
or
adcb
ss
dec
fstps
sub
push
jmp
dec
pusha
or
in
inc
movsb
scas
aam
mov
lahf
rclb
test
into
sbb
inc
dec
sbb
loopne
sub
dec
repz
mov
dec
nop
xchg
sub
sub
cmp
mov
pop
mov
popf
pusha
xor
fisttpll
lods
adc
insl
sbbb
gs
rcr
cld
in
xchg
mov
insl
inc
mov
loop
or
mulb
xchg
adc
add
mov
pop
out
jnp
xchg
pop
test
add
bt
insb
data16
arpl
xor
stos
dec
sub
sub
dec
sarl
xchg
fldenv
fsubp
mov
lea
test
mov
loopne
lret
push
fcmovb
lret
imul
jle
rorl
je
lret
dec
insb
das
dec
mov
and
dec
bound
xor
sub
test
into
cli
inc
frstor
sbb
push
cs
sbb
sbbl
pop
xchg
jmp
mov
sub
mov
fbstp
mov
push
mov
sahf
pop
fs
pop
sbb
jecxz
loopne
mov
adc
mov
popf
ret
xchg
in
leave
aam
call
cmp
mov
addr16
push
addr16
mov
icebp
adc
jecxz
push
jae
pop
inc
sub
addr16
or
test
cmp
mov
fadds
xlat
movsl
stc
enter
mov
les
sbb
or
mov
pop
aaa
pop
enter
jns
fmuls
imul
jg
xor
es
xchg
andb
xor
sub
fsubs
jae
fwait
aam
repnz
jno
mov
movsb
enter
cmc
sbb
push
xchg
dec
push
mov
mov
in
inc
mov
xlat
rorb
and
out
add
fsubrs
xlat
testb
ljmp
ss
add
leave
xchg
pop
jnp
ljmp
mov
dec
stos
mov
aaa
push
ret
add
or
inc
jbe
ret
leave
bound
out
mov
addr16
adc
sti
mov
add
adc
jnp
and
fldl
mov
lock
sbb
sub
aas
pop
mov
ret
xlat
aad
pop
enter
aas
daa
xchg
sbb
clc
js
ss
pop
push
out
es
sahf
xchg
sbb
into
and
inc
sbb
xor
imul
aam
ffree
movl
pop
jge
adc
loopne
mov
les
rorl
push
or
mov
push
dec
rclb
repz
sbb
xor
inc
lret
mov
xchg
popf
xchg
lods
push
bound
jge
sub
push
fs
pop
pop
mov
inc
loope
hlt
fnsave
aam
mov
push
sti
mov
test
mov
rorb
int
mull
push
das
sub
dec
es
push
hlt
outsb
test
pop
popa
fdivrp
cli
leave
shl
fnstcw
push
lock
fcompl
adc
mov
dec
mov
inc
addb
fsubs
push
leave
test
js
push
push
insl
shrl
xor
dec
lahf
test
sub
cmp
fsts
psllw
out
sahf
fsts
pop
stos
cmpsl
mov
add
arpl
and
mov
inc
adc
mov
add
mov
cmc
imul
ret
sub
sub
shrl
dec
ja
aas
xchg
cmc
ja
push
cld
cmp
std
push
cs
outsb
fstps
add
sti
jmp
xor
xchg
fdivrs
imul
lods
insl
jne
shlb
mov
add
mov
push
jne
inc
cmp
push
mov
or
xchg
or
test
sub
mov
mov
test
or
add
xchg
into
stc
dec
pop
pop
ljmp
jp
into
in
gs
inc
inc
mov
imul
xor
ret
xchg
jle
cltd
stos
out
xchg
fcoms
mov
pop
mov
imulb
ja
iret
nop
or
cltd
fsubr
mov
test
int
test
fucomi
inc
fsub
orl
icebp
mov
or
mov
xor
inc
mov
loop
enter
call
mov
idivb
scas
mov
dec
sub
and
lea
jmp
cld
ja
std
cli
fsubl
cmp
aaa
ja
xorb
inc
xor
mov
xor
dec
movsl
out
insl
pop
jg
lahf
in
mov
and
jno
scas
pop
mov
lahf
cmpsl
jl
and
rol
mov
jg
out
push
dec
mov
fbld
leave
mov
pushl
push
icebp
push
pushw
jp
push
mov
jle
negl
or
pop
scas
jle
inc
mov
adc
rcll
add
xchg
dec
adc
insl
sbb
push
lods
dec
xchg
mulb
daa
jae
adc
cmp
inc
mov
out
loop
sub
mov
jb
xor
or
repz
mov
mov
imul
pushf
mov
mov
fstl
pop
xchg
and
mov
pop
xor
sub
call
lock
nop
cmp
repz
das
adc
loope
cmp
movsl
adcl
mov
jp
xor
mov
pop
or
xor
xchg
movsl
fldt
dec
les
test
xor
popf
into
fisubs
xlat
xor
xchg
dec
hlt
jne
inc
lret
mov
push
scas
inc
xorb
adc
adc
pop
add
push
mov
loope
inc
movsl
icebp
outsb
ficomps
pop
jae
mov
pop
jne
imul
inc
xor
adc
push
pop
sub
sub
inc
cmc
fistpl
outsl
add
push
movsl
movsb
sbbl
pusha
push
xor
lret
out
sub
or
jp
and
add
outsl
scas
or
push
adc
mov
loop
push
dec
out
repnz
pop
mov
hlt
fadds
adc
push
inc
inc
rorb
leave
sbb
sti
pop
inc
sub
mov
adc
shrb
jmp
lock
add
push
mov
dec
in
or
lea
loopne
sbbl
mov
jns
pop
or
inc
outsb
popa
dec
push
or
lea
mov
ret
jg
and
dec
xor
insb
inc
cmp
clc
scas
enter
mov
out
sbb
xorl
or
or
fildl
adc
xor
mov
lret
dec
adcb
push
jmp
dec
inc
xchg
push
or
xor
lock
push
call
addb
insb
or
inc
outsl
arpl
fldenv
pop
popf
sub
cli
aaa
cwtl
popa
js
scas
jb
nop
xor
ds
out
das
ljmp
pop
das
push
fbld
inc
sar
fsubrl
mov
mov
jne
les
xchg
testl
xor
sub
jnp
cmp
icebp
sub
xchg
push
aaa
mov
mov
int3
idiv
fsubrs
or
jns
faddl
inc
sbb
imul
push
mov
inc
xorb
dec
xchg
sub
dec
adc
mov
movsl
mov
addb
js
aas
jae
adc
mov
jl
dec
mov
lret
imul
push
ret
mov
out
test
rorl
jbe
xor
jecxz
bound
and
test
addl
pushf
or
adc
inc
lea
add
mov
pop
mov
jmp
dec
pop
xor
dec
popf
loopne
inc
or
push
ljmp
hlt
mov
xor
ja
mov
add
nop
sbb
push
rcr
in
loop
xchg
popa
movd
mov
sarb
rcl
nop
repz
mov
mov
dec
xchg
sbbl
add
cmpsl
pop
mov
inc
imul
xor
nop
xor
rcr
gs
outsl
mov
movsl
xchg
enter
xchg
lds
mov
aas
xchg
fwait
lods
mov
es
subb
and
cs
arpl
mov
jb
ljmp
sahf
cwtl
popw
dec
sahf
xor
stc
stos
nop
stc
cmp
adc
stos
push
jnp
and
in
adc
sbb
leave
xor
pushl
mov
pop
js
adc
adc
dec
add
mov
out
mov
or
dec
pop
pop
push
leave
and
sbb
out
insb
push
add
outsb
ret
jge
mov
fcoms
xchg
pop
adc
adc
dec
mov
or
and
cmpb
shlb
adc
lea
hlt
cmpsl
pop
sub
aaa
mov
insb
testb
xchg
jecxz
inc
ret
je
gs
scas
lods
cmp
mov
lds
cwtl
loop
lock
or
jbe
stos
mov
xor
lea
xor
cmp
mov
sub
inc
cmpsb
sahf
cmp
int3
movsl
movsb
add
and
jp
imul
dec
data16
les
out
jo
or
aad
mov
cmp
cli
fcoml
inc
xchg
push
incl
inc
add
sub
jp
in
jnp
pop
adc
cmp
lock
in
sbbb
fs
or
inc
call
adc
sbb
adc
or
shl
hlt
mov
cmc
dec
mov
test
sub
xchg
lahf
nop
cmc
popf
fwait
int
jmp
xor
hlt
cwtl
sbb
mov
sahf
and
and
pop
xchg
adc
imul
inc
int3
ss
dec
jmp
lock
sarb
loope
aam
jecxz
in
mov
das
sbb
sbb
and
hlt
mov
mov
sub
lock
ret
dec
mov
sub
cld
mov
fsubl
or
shll
out
inc
mov
inc
std
stos
sub
adc
fimuls
mov
cld
add
leave
jle
or
testb
stos
mov
out
mov
sti
das
loop
dec
shl
pop
pushf
xlat
mov
adc
sbb
cmp
sub
rolb
movsb
pop
xchg
fdivs
pop
or
ds
adc
hlt
lds
lock
rep
fcomps
and
insl
fs
clc
inc
outsl
inc
cwtl
das
imul
xchg
pop
ret
jecxz
fadd
jp
dec
cwtl
nop
cltd
mov
and
inc
mov
sbb
lahf
mov
mov
xchg
fisttpll
mov
mov
notl
mov
jl
sarb
inc
lcall
lret
fwait
xchg
std
jbe
shlb
rolb
sbb
mov
into
pop
sbb
dec
mov
push
repz
int
ret
sub
jl
add
dec
mov
pop
push
and
idivl
cmp
sbb
adc
ja
push
push
mov
cld
or
and
ds
repnz
lret
cmp
roll
mov
cmpsb
jnp
sbb
xor
lahf
test
test
sarb
ds
jbe
xchg
jg
sub
push
adc
movsb
xchg
test
mov
add
xchg
les
inc
ret
mov
xor
in
cwtl
test
jmp
dec
mov
mov
popf
xchg
fwait
ljmp
aad
dec
sti
pushf
mov
cmp
jl
test
lcall
rorl
in
aad
stos
cmp
or
aaa
in
or
in
lock
je
push
gs
cs
sub
add
or
sbb
sub
int3
in
mov
push
xchg
push
xor
loope
lret
add
rcll
call
pushf
mov
cmpb
cmp
and
push
or
div
sub
je
cmpsb
mov
xor
adc
aad
icebp
sbb
scas
jmp
mov
xchg
gs
mov
jae
mov
aam
aam
push
or
pop
push
lret
shll
jnp
outsl
stos
push
fadd
fldcw
mov
push
pusha
xor
and
insb
das
rolb
mov
jecxz
out
xor
repnz
sub
lahf
dec
inc
decb
lcall
pop
insb
das
shl
outsl
xor
lret
dec
sub
or
test
insl
mov
fs
adc
das
pop
imul
ficompl
es
xchg
fnstenv
adcl
and
clc
push
pushf
push
daa
push
and
loopne
jecxz
and
outsb
fmull
add
or
ret
std
ret
adc
inc
ss
cld
adc
sbb
les
or
mov
dec
inc
fdivrl
inc
loope
mov
or
lods
mulb
sbb
sbb
in
mull
nop
cmc
clc
je
aas
pop
test
fimuls
mov
sub
ds
inc
insb
mov
add
add
mov
hlt
mov
imul
adc
mov
or
and
outsl
jge
cwtl
xor
or
mov
lret
or
std
loop
or
mov
ljmp
cmpsb
adc
push
pop
popf
fnsave
or
in
clc
cmp
or
mov
les
subl
xor
sbb
inc
lock
out
xchg
and
or
cmp
scas
movsb
nopl
add
repz
xlat
xchg
cmp
fsub
scas
cmp
sbb
das
dec
pop
cmpsl
sub
cmp
cmp
cmp
mov
add
sbb
stc
mov
test
inc
lds
xor
jne
testl
and
cmpsb
jae
cmp
cltd
dec
cmpl
lods
and
xchg
adcb
pop
popf
lods
inc
cs
loop
jle
shl
jp
mov
fdivl
fcmove
out
lret
dec
push
rorb
or
push
jg
add
lret
test
cwtl
rcr
inc
jl
notb
push
xor
addl
push
fsubs
adc
jl
sbbl
insb
push
cmpl
insb
lret
push
and
inc
xchg
push
push
mov
out
ljmp
jno
mov
push
inc
push
and
xor
cltd
push
ljmp
loopne
dec
pop
sahf
add
jo
xor
xor
out
fidivl
jp
test
lahf
xchg
pop
icebp
cmp
cmp
gs
fcoml
inc
jge
test
push
add
xchg
pushf
pop
in
leave
out
outsb
mov
xchg
pop
mov
pop
mov
lods
aam
cmp
rcrl
push
lcall
inc
and
in
rcrb
cmc
mov
xchg
mov
inc
xchg
stos
and
incl
xchg
sahf
jnp
mov
inc
movsb
cmp
and
cs
inc
scas
jmp
sub
ret
rcrl
addr16
arpl
insb
cmpsl
lret
clc
aaa
movsl
cmc
inc
dec
push
fdivrl
cwtl
cmp
popf
mov
jmp
insb
pushf
movsl
lods
cs
ja
std
pusha
repz
js
lret
stos
pop
and
mov
testb
lcall
xchg
adc
sub
dec
fstpt
mov
js
xchg
and
cmp
pop
sbbb
mov
cmp
and
cmpsb
lock
imulb
cmpsb
test
sub
dec
pusha
gs
adc
dec
pushf
ss
mov
sub
mov
aas
jg
test
repz
lods
adc
insb
push
inc
push
cld
int3
fstp
mov
xor
xchg
xor
and
mov
xor
pushf
mov
push
sbb
cmp
push
pop
sar
insl
inc
imul
add
outsb
push
mov
wrmsr
cmp
mov
call
test
or
in
gs
fsubrl
or
lcall
or
stc
and
push
shrb
in
sbb
test
inc
data16
dec
pushf
aaa
es
adc
mov
iret
mov
dec
cli
push
xlat
xchg
lock
sub
mov
loopne
inc
sbb
mov
xchg
lcall
les
cmp
dec
rorl
mov
adc
xchg
mov
lret
rolb
push
mov
pop
xor
push
inc
jecxz
push
hlt
mov
gs
int
mov
pop
push
addl
sbb
ss
sub
cmp
lea
inc
pop
test
xchg
popf
xor
fldt
cmc
xchg
fists
and
xchg
cwtl
out
pop
fmuls
andb
mov
inc
push
lods
ss
int
cmp
or
mov
xchg
pop
jmp
int3
ss
push
imull
popa
cwtl
xor
out
fsubrl
pop
cmp
mov
fwait
xor
xchg
add
adc
lds
in
int3
add
leave
aas
mov
push
push
jp
cmpb
fildll
insl
mov
mov
mov
mov
imul
loope
and
punpckhwd
inc
hlt
cwtl
test
lods
incb
jbe
add
arpl
outsl
mov
in
movsl
mov
lea
fwait
lret
gs
rcrl
sti
dec
cmp
cmc
iret
xchg
call
cmp
sbb
mov
mov
lret
in
ret
add
insb
jg
dec
scas
das
adc
xchg
jae
int3
js
daa
jle
stc
adc
xorl
pop
into
outsl
int
or
test
mov
addr16
inc
jl
movlps
mov
sbb
je
mov
stc
mov
mov
mov
lock
xchg
adc
sub
dec
jg
jmp
loop
mov
sbb
in
xlat
mov
lea
lret
into
mov
xchg
dec
push
jno
and
sbb
insl
add
jmp
cmpsb
fsubrp
push
cld
adc
adc
ds
mov
lock
ja
loope
dec
jge
cmp
push
mov
notb
sub
push
outsb
add
ret
xor
iret
add
jbe
test
loope
das
pop
clc
popa
pop
cmpsl
push
addr16
stc
and
adc
pop
call
bound
adc
push
js
push
mov
xor
pop
std
push
add
inc
dec
mov
roll
shrl
sbb
imul
pop
add
out
push
xchg
and
lcall
mov
jg
mov
sbb
pop
aad
xchg
sub
adc
into
dec
mov
popf
jb
int3
inc
or
dec
sahf
pusha
lret
pushf
mov
xchg
pop
loopne
loop
mov
arpl
mov
inc
clc
je
pushf
mov
clc
in
jmp
iret
dec
out
jp
es
dec
out
out
roll
inc
imul
addb
push
add
iret
lahf
push
xor
dec
xor
jp
adc
sub
push
sti
push
cli
mov
jl
push
jmp
cmp
mov
mov
lods
jbe
mov
or
test
pop
sbb
ds
jns
fwait
mov
std
fwait
negl
mov
fadds
jne
ds
sub
cmp
xchg
insb
cmp
arpl
inc
cmp
in
push
sub
xor
lods
out
pop
adc
sub
sbb
imul
xor
push
sbb
adc
inc
jmp
aam
mov
ljmp
mov
in
repnz
xchg
mov
inc
or
fildl
cmp
pusha
mov
jo
rorl
out
mov
sub
cmp
ja
gs
pop
xchg
loope
push
jno
xchg
mov
and
jmp
aad
lock
repnz
popf
jae
popf
jno
inc
rcr
lahf
aaa
push
jbe
add
cmp
ret
adc
fbld
push
cmp
mov
dec
sub
lret
psubq
mov
mov
pop
pop
push
inc
mov
shll
insl
mov
xchg
inc
ss
pusha
pop
and
shlb
xchg
cmp
xchg
sti
xlat
das
out
xor
mov
jg
xchg
pop
fs
sbb
dec
mov
cmp
add
push
or
inc
sbb
data16
lods
add
jns
mov
imul
push
pop
fcomps
push
jmp
sub
and
push
mov
lahf
fwait
mov
jmp
jecxz
lret
test
test
dec
xor
inc
sub
sbbl
daa
push
inc
sbb
or
jns
not
push
test
push
mov
pop
mov
imul
lods
loopne
xchg
lret
push
addb
loope
xchg
and
fmul
fstl
pop
lcall
ror
cmp
cmp
xor
jge
inc
xlat
andb
ficoml
fdivr
sbb
cmp
dec
xchg
imul
pop
cmp
les
jle
adc
insl
inc
mov
sub
mov
test
outsl
out
daa
sbb
bound
stos
xor
pop
mov
mov
sub
in
ljmp
sub
fisttpl
cmpsb
or
cs
push
addr16
inc
and
fs
dec
fwait
sub
and
xor
jb
fdivrl
or
stos
shrl
or
shrl
fbstp
sub
in
std
push
jmp
js
stc
inc
pushf
in
jns
dec
leave
lea
xor
adc
pop
cmp
sbb
push
rclb
roll
outsl
les
sysenter
stos
cs
xchg
xchg
jg
bound
insb
adc
dec
adc
mov
xchg
mov
fistl
ja
test
cld
jp
xor
clc
pushaw
test
sub
adc
jno
push
jl
mov
pusha
dec
push
push
and
mov
jl
mov
int3
cmp
xor
arpl
push
mov
add
xchg
xor
test
lock
xor
jecxz
test
pop
or
or
and
pop
out
xor
enter
xor
mov
jmp
pop
movsb
push
dec
dec
inc
push
inc
push
cmp
in
dec
mov
sub
repz
das
jge
data16
mov
mov
and
xor
cs
subb
jp
mov
jne
cmpb
rorb
adc
push
or
cmp
jl
fwait
cltd
add
mov
fildl
mov
inc
and
int
sub
ja
adc
sub
adc
xchg
jp
call
inc
cmpsb
push
dec
sbb
sub
mov
insl
mov
lods
add
hlt
cltd
dec
cli
mov
scas
mov
push
push
in
sbb
sub
dec
js
add
fadd
xchg
pop
das
mov
pop
add
hlt
cli
ljmp
dec
push
or
inc
cltd
push
pop
lcall
jecxz
push
adc
xor
or
test
notb
fsubrl
fnstsw
xchg
nop
outsb
pop
dec
mov
out
subb
sbb
ja
test
aas
add
lcall
inc
inc
adc
and
add
jns
jle
fstpt
fdivrl
fidivl
pop
int
xchg
loopne
lods
pop
sbb
sbb
add
cmpsl
jecxz
mov
js
mov
xchg
cmp
in
pushl
mov
dec
and
xor
add
fdivl
xor
adc
and
lahf
inc
cmpsl
pop
clc
mov
mov
lahf
jnp
cwtl
pusha
xchg
sub
jp
ss
imul
mov
sub
and
push
pop
lahf
in
movsb
mov
push
std
xlat
stos
fistps
dec
mov
fldenv
dec
sub
stc
pop
arpl
mov
adc
stc
xchg
negl
das
jl
mov
call
call
jp
lret
les
add
clc
pop
lret
jne
insb
dec
xor
les
sbb
ljmp
xor
loopne
dec
inc
into
sub
mov
jb
jne
dec
add
inc
sub
mov
loope
sub
pop
cli
lahf
into
daa
pusha
cmp
aam
inc
scas
stos
sahf
dec
addr16
loope
mov
dec
jb
lods
adcb
mov
xlat
outsb
cmpl
popa
push
aaa
or
sub
mov
or
cli
hlt
push
in
leave
stos
mov
ret
test
sarl
stos
dec
jb
shll
divb
notb
dec
and
inc
out
add
out
test
cmp
pop
mov
repz
or
jne
xchg
leave
insb
add
inc
or
leave
fsubl
out
test
fildll
sub
imull
dec
cmpsl
mov
js,pn
imul
push
clc
negb
sub
jle
cmp
rol
inc
pop
mov
adc
fwait
sub
cmp
cwtl
adc
cmpsb
adc
xchg
lds
test
mov
rcrl
out
das
xor
loope
jg
aam
imul
shr
pop
scas
mov
sbb
imul
es
mov
outsb
jo
dec
pop
popf
test
and
outsb
push
ss
xchg
push
sbb
dec
mov
or
xor
fsubp
pop
out
aas
inc
daa
stos
imul
pop
scas
mov
js
add
jnp
inc
push
inc
sbbb
and
push
jg
mov
popa
js
dec
popa
fstpt
insl
in
das
leave
or
aam
jbe
mov
pop
aad
lds
sbb
pop
test
mov
andl
adc
mov
mov
lret
mov
xor
dec
out
ljmp
xor
pop
pop
or
das
mov
dec
cmp
ss
or
jb
pop
mov
pop
inc
adc
fimuls
sub
testl
mov
stc
sub
ficoml
xchg
popf
outsl
inc
mov
jp
mov
push
dec
pusha
pop
fadds
sbb
mov
or
in
shrb
test
mov
add
cmp
jge
stos
icebp
xor
call
mov
sbb
pop
shrb
dec
jnp
sub
loope
sti
dec
push
out
fs
cmc
dec
mov
xor
push
and
mov
movsl
inc
inc
adc
xchg
jl
test
roll
cld
jmp
or
nop
fcoml
xor
popf
or
dec
fld
cmpsb
test
xor
invd
dec
cmc
loopne
cmpsb
xor
push
gs
orb
xchg
jno
mov
dec
jns
inc
xchg
xor
pusha
icebp
jge
fyl2x
inc
xlat
rolb
pop
leave
in
fcoms
inc
out
dec
cld
clc
arpl
pop
xchg
add
and
jg
adc
sbb
push
testl
pop
in
sub
and
inc
adc
or
adcl
xor
mov
fldt
movsl
ljmp
imul
jecxz
push
movsb
cmpsb
mov
scas
cmpsb
jae
xchg
jmp
out
pop
cmp
jecxz
loopne
push
fnstsw
cmp
add
movsb
loop
test
add
gs
icebp
sub
aam
pop
ss
add
js
xor
mov
lahf
push
push
lcall
mov
or
out
mov
ss
xor
shll
adc
jl
insl
push
mov
enter
icebp
or
pusha
mov
dec
xor
lds
pop
test
std
xchg
pop
out
and
mov
imul
out
orl
sbb
cli
outsb
jbe
mov
mov
jg
in
insb
push
pop
jbe
pop
out
xchg
mov
int
outsl
cmpsb
pop
arpl
bound
loopne
sbb
fcomip
jecxz
fwait
pop
push
sbb
xchg
sbbb
leave
lock
push
test
pop
add
sub
dec
add
lea
lock
mov
or
into
dec
in
les
shll
xchg
daa
xchg
xchg
stos
pop
or
mov
orb
adc
mov
adc
fwait
add
jle
cmp
sbb
das
push
ds
scas
testl
pop
and
mov
and
cmp
dec
inc
not
dec
outsb
cmp
or
adc
add
xor
in
pop
rorb
sub
sbb
push
xchg
pop
jne
fisubrl
movsl
and
or
adc
call
lahf
pop
mov
push
jae
jno
cmpsb
add
mov
out
pop
dec
push
push
pop
cmp
xor
cmp
add
aas
sbb
pop
in
cmp
ret
enter
cmp
fwait
cli
out
mov
cltd
out
ficomps
jge
cmp
and
sbb
mov
jg
or
sub
scas
aad
insl
push
insb
out
ja
mov
dec
movsl
xchg
pop
and
cwtl
test
and
clc
aam
jmp
loopnew
jmp
out
xor
adc
daa
xor
sahf
dec
adc
ds
cmpl
movsb
out
mov
push
imulb
sub
and
add
mov
nop
popa
fsubrl
fdivrp
add
fcmovnu
and
cltd
mov
mov
xchg
inc
and
rcr
frstor
mov
int
aas
arpl
in
push
mov
dec
inc
and
cmp
mov
test
pop
jmp
leave
or
arpl
jp
xchg
mov
fstl
xchg
push
fwait
mov
xchg
mov
xchg
cmp
pop
test
aas
cmpsb
or
sbb
jns
filds
stos
pop
icebp
pop
sub
jecxz
pop
pop
adc
pop
dec
inc
test
sbbb
jecxz
rcrb
pop
sbb
add
mov
int
sarl
cmc
loope
stc
ss
add
inc
pop
mov
pop
mov
data16
sub
add
popf
aaa
lcall
jmp
mov
jmp
std
aaa
mov
lock
lods
sub
rcrl
push
rolb
mov
mov
add
stos
in
in
fsts
ljmp
into
stc
and
xchg
add
fdivrs
cwtl
pushl
fmull
pushf
xor
and
mov
jns
cmp
push
lcall
scas
repnz
test
fisttpll
add
jo
jmp
push
or
mov
and
xchg
jnp
gs
lock
lret
adc
xchg
lock
push
scas
stos
test
outsl
pop
mov
cmp
rclb
ds
dec
test
lret
or
lret
in
cmp
adc
inc
push
fdivrl
add
and
fiaddl
popa
push
xchg
imul
push
es
xchg
inc
cmpsl
xchg
enter
jecxz
nop
cmpb
int
das
aaa
add
lret
mov
loope
sbb
cmp
dec
jbe
gs
inc
jl
out
mov
xchg
mov
push
ret
adc
cmp
aas
push
xchg
aaa
sbb
or
jb
adc
push
popf
jnp
sub
jb
fs
aam
push
ja
dec
xor
lds
jge,pn
mov
test
test
nop
lods
pop
pop
mov
les
gs
popa
arpl
or
push
cltd
pop
jmp
nop
cmpsb
sub
cltd
test
pop
es
mov
inc
lds
sbb
mov
and
mov
lods
gs
cmp
mov
xchg
cmova
fs
xchg
ljmp
icebp
pop
popf
lret
pop
push
sub
sbb
push
lock
mov
int
xchg
insb
xlat
or
cli
mov
ret
movb
xchg
adc
sbb
jl
xor
xor
xor
or
inc
nop
cmp
sahf
sub
leave
movsb
sahf
fldt
push
jp
pop
subl
lret
repnz
idivb
and
ja
mov
sbb
rolb
cltd
or
ljmp
in
adc
inc
sbb
cmp
and
sbb
push
mov
mov
dec
ss
lods
mov
jbe
cltd
cmp
test
outsl
sub
ror
adc
jmp
sbb
inc
jno
adc
cmp
add
testl
mov
leave
adc
fidivl
sub
arpl
pop
dec
stc
repnz
jnp
loop
pop
movsb
jae
inc
pop
jb
mov
loop
inc
mov
mov
adc
adc
pop
or
inc
inc
lods
jmp
outsb
fstps
std
fdivrs
es
and
pop
enter
cmp
xor
xor
cmpl
sub
ljmp
cltd
imul
jmp
inc
mov
imul
ljmp
es
push
mov
xchg
stc
and
jle
jmp
pop
lret
sub
mov
shll
add
mov
mov
stos
fs
mov
out
sub
les
repnz
or
push
xchg
pushf
cmc
gs
pop
cmp
mov
cltd
imul
mov
popf
ffreep
ds
mov
ljmp
in
dec
cmp
scas
das
adc
add
sti
adc
push
add
or
cmpsl
mov
aas
inc
push
outsb
aas
and
int
sar
dec
or
dec
insb
lea
push
stos
test
jp
data16
cmp
popf
ret
jae
sub
lods
jns
or
mov
sbb
idivb
lock
adc
add
in
push
insl
iret
push
sbb
mov
outsb
xor
imul
adc
repnz
bound
jl
ja,pn
adc
mov
enter
fbld
and
inc
sub
fnstenv
pop
sbb
and
dec
outsl
adc
ss
pusha
ret
xorb
sbb
mov
sbb
add
incb
xchg
jl
test
xorl
jnp
push
sbb
xor
lods
frstor
lock
pop
sahf
scas
mov
testb
inc
pop
mov
outsl
and
pushf
pop
pushf
ja
mov
nop
mov
clc
mov
sti
sbb
xchg
push
mov
sbb
lods
mov
sbb
xlat
mov
enter
popf
nop
ja
in
loopne
jle
movb
mov
jmp
mov
mov
push
cmp
mov
test
xchg
mov
adc
mov
int3
xlat
push
push
testl
cmp
or
cmp
and
push
add
sahf
cmp
inc
mov
push
lret
adc
lods
mov
adc
adc
leave
jge
adc
ss
out
jmp
dec
inc
push
lret
pop
sub
and
cs
sti
in
add
pop
out
cli
mov
push
mov
push
push
push
mov
shrl
xchg
lret
or
out
sbb
jl
fcoms
iret
std
notl
mov
lret
ss
shl
das
xor
push
jb
mov
inc
call
jle
fsubrs
cli
arpl
dec
lods
push
jns
loope
jbe
emms
repz
test
addb
outsb
cmp
addr16
int
xor
fcmovnbe
xor
sti
sub
lock
psllq
ret
test
jbe
jne
jecxz
mov
cmp
adc
faddp
repnz
out
mov
mov
push
mov
push
loope
xchg
add
mov
jle
decl
outsl
jp
aam
inc
xchg
mov
pop
xchg
or
mov
insb
in
repz
cwtl
outsl
push
mov
sbb
and
addl
dec
es
js
pop
jmp
hlt
adc
jae
mov
xor
jmp
int3
mov
pop
pusha
rorb
fists
lock
mov
adc
push
bnd
mov
fldenv
dec
movsl
lcall
add
push
fcom
xchg
inc
js
push
mov
inc
inc
jp
add
sbb
push
mov
xlat
push
cmpsl
shr
mov
sbb
stos
xlat
adc
mov
mov
test
shrl
fs
daa
in
or
es
ret
iret
cmp
jne
add
je
adc
sub
bound
mov
push
aad
mov
mov
test
faddl
fwait
jmp
cmpsl
jnp
or
jae
in
jecxz
loop
inc
fldl
jns
in
mov
stos
xchg
push
in
faddl
adcl
jns
cld
adc
in
hlt
jg
fisubl
dec
push
pop
and
add
gs
and
cmc
lods
sti
add
mov
cmp
lods
cmp
outsl
je
sbb
lods
mov
ja
ljmp
fst
ds
bound
sbb
nop
adc
inc
mov
mov
pop
push
cmpsl
xchg
cmpsl
pop
ds
icebp
fmull
or
ja
sbb
jle
dec
xchg
adc
ret
loope
inc
repnz
pop
xchg
lds
sub
cmp
scas
add
int3
sbb
xor
cmp
cld
stos
lcall
jne
test
adc
test
lcall
jmp
sub
and
aaa
jns
mov
std
push
test
scas
pop
aaa
push
call
dec
adc
push
xchg
outsl
mov
inc
idivb
in
imul
rol
stc
out
inc
pop
loopne
stos
push
stos
decl
arpl
rcll
in
lret
in
out
adc
insl
mov
push
jp
fnstcw
popf
xchg
cwtl
mov
inc
out
into
mov
sub
mov
push
inc
push
test
sbbl
pop
sub
xchg
dec
pop
mov
cmc
cs
push
jne
int
dec
and
and
into
push
adc
cmp
icebp
mov
inc
shll
jno
add
in
in
inc
adc
shrb
int3
in
sbb
mov
insb
pop
out
jg
vunpcklps
adc
into
stos
sbb
dec
aas
jno
pop
sub
iret
lock
mov
shlb
mulb
shlb
mov
arpl
in
pop
hlt
shrb
mov
dec
rorl
divl
or
mov
mov
and
xchg
pop
and
xor
or
in
adc
sbb
pop
mov
scas
test
mov
cmp
cmp
lock
cmc
cmp
insb
leave
ljmp
enter
add
aam
std
dec
dec
out
mov
and
cmp
sbb
ja
mov
sbb
mov
xchg
cwtl
jno
es
das
andb
lods
dec
rol
outsl
push
lahf
daa
xchg
pop
mov
mov
insl
movb
jmp
and
out
shrb
cmp
mov
dec
add
pop
lahf
sahf
and
xchg
push
push
mov
jle
mov
inc
rcrl
icebp
push
sti
sbb
inc
push
lock
ds
or
jg
sbb
dec
mov
inc
and
sbbb
sub
jge
inc
decb
push
dec
mov
test
mov
rcl
push
scas
notl
cwtl
test
sbb
mov
sbb
enter
pop
sbb
push
fwait
dec
dec
cmpb
jecxz
int
mov
aad
inc
pop
js
and
icebp
pop
outsb
add
jae
mov
mov
sbb
loopne
inc
dec
jp
lret
std
mov
jge
sub
mov
aaa
pop
or
xchg
dec
into
arpl
add
out
mov
ret
push
sbb
out
mov
sar
push
push
cwtl
push
jecxz
fistl
mov
nop
call
push
aad
cmp
push
test
imul
pop
add
je
jnp
rclb
andl
cmc
repz
xlat
sub
mov
leave
jnp
imul
xor
sub
scas
mov
mov
fwait
dec
outsb
sbb
sbb
aaa
cmp
arpl
fldcw
xor
out
xor
cmp
or
xchg
jb
insb
rcrl
dec
inc
pop
outsl
stos
and
sub
jbe
sub
aam
cmp
mov
fs
mov
xchg
lock
dec
pop
nop
xor
mov
pop
pop
add
pop
xchg
std
pop
adc
iret
xor
or
mov
mov
mov
add
xor
fldl
inc
inc
push
or
ret
and
and
jp
mov
and
add
aam
pop
jl
and
jge
test
xchg
mov
jg
mov
icebp
testb
pop
lahf
enter
sub
call
mov
jmp
dec
mov
sub
shlb
enter
jp
in
sbb
and
clc
ret
hlt
mov
xchg
popf
ret
add
xor
lahf
sub
fldcw
jns
je
fcomps
aam
add
sarl
sub
in
call
mov
xchg
cltd
xor
mov
sub
adc
or
sbb
push
cs
test
jns
or
push
push
pop
push
ljmp
mov
and
lahf
jg
inc
addr16
mov
lds
xor
js
add
mov
insb
sbb
aad
add
sbb
movsb
stos
popf
int3
and
mov
sub
hlt
adc
jns
add
lret
popf
xlat
jnp
test
inc
hlt
mov
inc
adc
xchg
shlb
mov
sti
jle
cld
cmpb
pop
add
xor
cmpsl
popf
mov
arpl
push
fisubrs
mov
pop
sbb
adc
sbb
pop
push
cli
insb
lahf
fs
loope
fcoml
andl
jl
xchg
popa
int3
dec
shrl
mov
ret
pushf
test
sbb
pop
inc
outsb
xchg
roll
in
push
xor
test
gs
lods
inc
and
xchg
add
fsubp
dec
push
out
xchg
repz
sub
sub
fmul
ljmp
mov
pop
data16
fisubs
mov
or
lret
inc
add
mov
insl
clc
jge
mov
in
sub
mov
lret
xor
rcrl
jle
faddl
mov
popl
adc
cmp
mov
dec
scas
xchg
inc
push
dec
jmp
ljmp
add
cmp
mov
popa
mov
lret
mov
mov
push
jle
xor
add
int
xor
daa
sub
mov
out
mov
xchg
adc
mov
lock
fs
xor
movsb
shl
fadd
xchg
js
xor
call
xchg
mov
and
mov
rorl
and
pop
sahf
add
sahf
subb
adc
pop
adcb
cmp
cmp
lret
add
pusha
push
int3
xchg
jne
mov
es
dec
dec
aas
lcall
sbb
adc
jne
xor
lcall
stos
lods
xor
ljmp
ror
xchg
orl
in
push
push
mov
mov
fisubl
adc
pop
mov
adc
ret
jg
fcomip
stc
out
pop
loop
add
out
xchg
testl
loop
mov
inc
icebp
and
mov
or
je
das
fs
je
adc
repz
imul
mov
inc
out
sub
mov
bound
decb
rolb
add
lock
orb
insl
inc
dec
stos
jno
repnz
cmc
and
push
lahf
mov
lea
gs
out
cmp
xchg
and
addr16
xor
mov
test
cmp
mov
in
int3
cmp
ds
popa
mov
popf
add
cltd
xor
jne
test
outsl
xchg
std
lahf
fcomps
xchg
inc
xor
jge
imul
std
mov
inc
dec
pop
cmpl
pop
jbe
dec
aas
lds
in
pop
mov
pop
daa
lods
fisubl
stc
and
dec
out
mov
repnz
jge
out
ljmp
add
xor
dec
test
pop
imul
cltd
sub
add
out
addr16
sbb
mov
mov
jo
orb
cltd
pushf
testb
mov
inc
inc
push
out
push
aad
fadds
cmpsb
pop
leave
xchg
jmp
lds
pop
in
std
mov
mov
jl
sub
jge
lods
mov
xor
jmp
adc
mov
stos
negb
out
ljmp
ficompl
inc
outsb
outsb
out
test
and
jmp
pop
adc
sub
lea
jmp
sbb
xchg
and
adc
jns
test
mov
lcall
xrelease
cmp
dec
xor
dec
mov
in
fsubrs
outsl
test
mov
lret
movsl
pop
mov
xor
test
test
xlat
adc
jl
jecxz
xchg
push
jle
in
xchg
xchg
adc
add
hlt
jno
lret
cmp
mov
in
xor
sbb
push
imul
rcrl
repz
dec
xchg
dec
sbb
push
aam
sbb
test
sub
adcb
or
sbb
pop
mov
int3
mov
sahf
outsl
addl
sahf
xor
hlt
cs
cmp
pop
dec
push
and
lea
dec
cmp
addl
mov
mov
loopne
fdiv
xor
fsincos
mov
outsb
fdivr
xchg
sbb
mov
popa
test
jecxz
adc
jnp
out
test
mov
es
fildll
add
shl
or
jl
enter
pop
repnz
add
mov
ljmp
cmp
xlat
mov
incl
mov
andb
cmp
in
xor
loopne
pop
xorl
movsb
xchg
push
dec
adc
xchg
fcoms
arpl
xlat
xor
inc
add
cmpsb
loopne
loop
ret
pop
sarl
popf
inc
addb
pushf
mov
loopne
and
mov
xor
jnp
jge
and
incb
add
ja
push
xrelease
ja
pop
movsl
in
fdivr
ss
sbb
cmp
add
and
mov
es
out
fstpl
sbb
inc
adc
out
inc
enter
mov
std
or
fwait
sbb
test
mov
and
jno
jo
outsl
sub
mov
insb
es
lahf
popa
mov
gs
lods
lret
sub
jle
xchg
jecxz
pop
push
xor
xchg
out
fildl
cltd
ds
jg
idiv
adc
jbe
daa
loop
in
fwait
cmp
cs
lahf
aas
icebp
jno
mov
inc
push
xor
and
mov
sbb
jp
cwtl
jne
loope
sub
aam
pushf
sub
cmp
cmp
imul
inc
or
mov
fmull
test
mov
int
cmp
sbb
fstpl
sub
adc
je
mov
mov
aam
mov
mov
push
mov
push
xchg
pop
lret
push
pop
sti
dec
mov
fstpt
cmp
mov
push
mov
das
aam
leave
push
mov
jg
in
aam
cmp
mov
das
jle
int3
mov
mov
add
arpl
mov
xor
pop
scas
xchg
mov
dec
imul
mov
pusha
pushf
pop
push
mov
mov
dec
pop
jl
or
jecxz
fisubrs
mov
notb
xor
jge
pop
das
pop
push
call
faddl
xchg
lds
in
std
inc
int3
jp
cmpsb
and
sbbb
scas
or
or
hlt
inc
xor
scas
pop
int
stc
add
rol
lods
inc
hlt
aad
push
adc
cmpsb
adc
fstpt
mov
xchg
mov
rcrl
sbb
mov
pop
mov
dec
xor
out
in
add
lret
cmp
dec
fcomp
test
xor
shlb
popf
shl
and
aaa
lcall
push
and
mov
dec
cmpsl
stos
dec
orl
adc
or
cmpsl
xor
incb
mov
decb
sub
pushf
mov
stos
mov
dec
mov
push
push
insl
lods
cwtl
mov
test
leave
pop
call
rcr
stos
dec
cmp
mov
and
xor
out
mov
push
gs
lock
xor
cltd
push
imul
js,pt
js
ficoms
cltd
mov
sub
popf
popa
popf
or
xchg
push
loop
dec
cs
mov
rolb
push
test
nop
outsl
sbb
and
lock
movsl
ficoms
negl
mov
dec
jbe
push
rorb
pop
jbe
mov
push
in
aam
jle
cmc
mov
ret
dec
push
ficoms
loope
xchg
jecxz
pop
jg
iret
or
sbb
xchg
cmp
lock
xor
mov
pusha
and
nop
and
wbinvd
test
push
push
dec
stos
xchg
adc
add
stc
xchg
inc
neg
shl
pop
fisttpl
lock
sti
cld
push
add
dec
int3
dec
hlt
pop
clc
test
les
fwait
test
lods
lods
out
lea
mov
call
or
jge
inc
jae
icebp
inc
clc
cmpsl
nop
scas
sbb
fldt
imul
pop
mov
imul
es
mov
add
sub
jae
dec
subl
out
cwtl
inc
pop
pop
inc
mov
in
adc
push
dec
jmp
and
enter
xor
mov
push
sbb
clc
mov
mov
xor
push
pop
add
cmc
stos
pop
je
lock
and
push
mov
dec
ss
and
mov
pop
hlt
inc
and
mov
loope
rcrb
loope
cmp
pop
fcmove
lret
sbb
outsl
int3
loopne
mov
sbb
shll
xchg
jnp
and
push
ja
and
lret
mulb
dec
or
sarb
jecxz
je
dec
jge
xchg
mov
lahf
jg
movsb
in
add
xor
fadd
push
out
or
aam
mov
fwait
lahf
pusha
pop
inc
cs
divl
jecxz
sub
or
xchg
das
or
lret
insl
jns
stos
lock
jmp
xlat
dec
inc
pushf
in
cmp
mov
or
ss
lods
loopne
dec
jno
orb
dec
mov
push
or
and
sub
inc
add
pop
inc
shl
stc
adc
stc
adc
push
and
mov
in
cmpsl
iret
mov
int3
mov
ljmp
jb
mov
push
enter
mov
mov
push
dec
pushf
shlb
pop
jmp
cwtl
xorl
nop
pop
jge
pop
jns
daa
mov
xor
cmp
adc
mov
sahf
adc
xor
aam
call
cmp
icebp
xlat
ret
dec
xchg
jno
mov
push
insl
fs
jae
pop
bound
mov
push
out
cmp
xor
ds
push
cmp
inc
push
add
aad
data16
mov
or
jne
adc
jb
and
test
enter
pop
pop
mov
icebp
add
ja
mov
repnz
outsl
cmpl
pushf
in
mov
lods
cltd
jmp
sub
addr16
push
daa
xchg
jbe
sbb
push
jecxz
shll
add
push
push
cltd
ds
mov
xchg
jne
in
ja
and
inc
insl
test
scas
pushf
daa
add
subb
jns
jbe
mov
or
push
add
cmpsl
dec
dec
cld
cld
pop
and
sub
test
dec
icebp
mov
adcb
xchg
xchg
cmp
jmp
pushf
icebp
pop
cmp
ret
mov
in
cwtl
or
push
idivl
sarl
push
adc
add
mov
fcomi
ret
popf
das
xlat
gs
push
sahf
inc
dec
std
sbb
fcmovnu
ret
scas
outsb
mov
loopne
cmpsb
push
dec
sbbl
aas
cli
mov
dec
call
jp
xor
adc
cwtl
adc
cmp
ja
ftst
lret
jno
out
cmc
jns
or
jbe
add
push
ret
int3
mov
aaa
cs
fcmove
dec
and
sahf
ret
leave
add
jbe
jecxz
cmp
lret
icebp
mov
mov
mov
dec
dec
jbe
adc
or
add
or
in
cmpsl
xchg
add
adc
add
mov
outsl
scas
call
rclb
sub
inc
mov
lahf
cmpsl
fisubl
je
jns
pop
push
mov
rorb
popf
lods
data16
push
mov
push
pop
mov
sub
mov
lret
jle
pop
mov
shll
push
in
pop
mov
cmc
jecxz
std
repnz
imul
jne
pop
cmc
cmp
addl
sub
pop
jle
into
aaa
data16
fdivs
insl
cmpsb
icebp
rcr
sub
into
xchg
aas
push
sub
mov
mov
xchg
ret
mov
push
mov
mov
ficompl
ret
fwait
lods
inc
mov
pusha
sahf
hlt
hlt
lods
push
mov
loope
xor
pushf
mov
mov
xlat
jo
xlat
push
mov
pop
sbb
mov
mov
outsb
aad
je
ret
fs
mov
push
scas
push
push
lods
pop
cld
inc
xchg
mov
fstps
fildl
call
mov
mov
stc
rcll
outsb
push
insl
test
pop
fisubrl
outsb
mov
jle
aaa
clc
mov
cmp
cmp
jmp
cli
aas
sub
adc
dec
xchg
inc
lds
aad
lahf
mov
push
adc
jmp
pop
lahf
lahf
in
and
lahf
insl
cmpsl
mov
pop
gs
push
or
cli
inc
or
mov
mov
mov
popa
in
mov
adc
xor
cld
mov
inc
jmp
int3
mov
aas
inc
shl
lret
xor
fstl
push
shlb
xchg
cmp
sahf
iret
cmp
xlat
lahf
pop
int
dec
loopne
int3
ret
clc
inc
outsl
lock
loop
les
lcall
movl
aam
mov
dec
pushl
pop
fisttps
arpl
lret
fnsave
mov
sub
rorb
fmull
cmpsb
ja
popf
jnp
adc
cs
and
ret
roll
rorb
mov
outsb
mov
test
pop
scas
adc
in
cmp
scas
mov
test
cli
cmp
dec
mov
pop
insb
mov
pop
jmp
sysret
push
cmp
pop
jno
or
in
jmp
jmp
pop
test
ja
xor
hlt
pusha
xlat
into
pop
in
xorl
adc
sub
inc
clc
shll
in
out
jo
dec
scas
dec
pop
xor
lock
dec
sbb
mov
or
ret
mov
std
sub
jp
dec
add
push
push
lock
sahf
sub
or
cmc
adc
xor
xor
and
cmp
pop
lretw
loope
jp
fstpl
stos
fimull
test
push
xor
test
rcrl
sbb
dec
shr
jnp
pushf
bound
sub
mov
xor
xor
mov
mov
popf
xor
lcall
dec
xchg
or
test
outsl
in
cltd
dec
bound
mov
sub
or
xchg
sub
sbb
stos
addl
jge
je
hlt
into
ret
roll
pop
push
inc
testl
push
jg
xor
dec
push
movsb
xor
ret
sbb
push
ds
sbb
loope
and
addb
push
sbb
iret
sub
mov
xor
imull
popf
push
xor
mov
jp
mov
hlt
or
jmp
filds
adc
dec
mov
lahf
xorl
mov
fnstsw
add
pop
xchg
add
xchg
push
aad
mov
iret
scas
push
pop
push
dec
popf
or
xchg
xor
lea
mov
cmp
arpl
stos
into
data16
dec
nop
jmp
ds
lret
insl
jl
and
inc
mov
add
lock
mov
call
adc
ret
jmp
pop
xchg
mov
daa
aaa
add
push
int3
aad
xor
cmp
nop
xchg
gs
jp
push
insb
notb
popf
mov
leave
mov
jmp
mov
test
mov
subb
ja
mov
mov
jg
or
mov
jg
cmp
aam
mov
arpl
cmpsb
sbb
sub
push
cld
div
fimull
sbb
movsl
nop
xor
test
mov
sub
lret
jnp
lods
or
cli
cwtl
nop
sbb
sahf
push
lds
fisubrs
mov
xor
scas
aas
loope
adc
push
mov
inc
bound
sbb
mov
out
pop
push
xor
scas
xchg
pop
mov
fwait
mov
lss
lahf
aam
pop
add
push
jns
movsb
xchg
adc
movsl
xchg
enter
bound
jns
xor
rol
adc
pop
cmp
lock
pop
cmpsb
in
jmp
or
inc
movsb
outsl
lds
jae
push
das
pop
int
push
js
xor
mov
xor
or
aad
fisubs
cmp
jp
imul
jb
pushf
mov
push
into
cmpsb
test
arpl
sahf
sahf
iret
ss
arpl
lea
mov
repnz
sub
inc
inc
shll
dec
mov
jp
inc
mov
and
jp
pop
add
shlb
xlat
fdivr
and
mov
jnp
ret
push
js
mov
sub
lret
movsb
pop
jb
ror
push
jae
add
dec
inc
cmpsl
lcall
dec
pop
loope
cltd
sub
in
pop
and
icebp
testb
pop
aas
jb
sbb
mov
jmp
xor
mov
jae
insl
cmp
fimull
notl
lds
xor
push
mov
or
outsb
test
in
adc
xor
out
sbb
imul
call
into
xor
loop
jge
ss
orb
push
mov
orb
dec
in
mov
arpl
inc
cmp
lcall
or
dec
jg
aas
int
jnp
cs
mov
hlt
jnp
mov
cmp
xor
mov
dec
mov
inc
xchg
jp
and
mov
cs
pop
out
into
dec
cmp
pushf
mov
lret
lods
sbb
xor
jne
sbb
add
fwait
daa
loope
cs
lods
adc
xor
out
xchg
push
push
int3
rorb
lahf
sub
mov
gs
push
out
movsb
aaa
add
pop
stc
adc
notb
xchg
xor
adc
cmp
or
out
out
sbb
cmp
xor
cmp
stos
adc
subb
clc
adc
mov
mov
lods
xor
mov
add
pusha
inc
xor
outsl
insb
xchg
mov
fnstsw
xchg
adc
sbb
fcom
and
push
scas
mov
out
outsb
mov
jb
fstps
inc
cmc
cmpsl
aas
jmp
jp
cwtl
lahf
pop
push
subl
jle
adc
fldcw
loope
fstpt
pop
sbb
dec
data16
jb
lahf
mov
sub
mov
jge
or
loope
scas
pop
xchg
inc
push
stos
int3
cmp
xchg
test
leave
dec
dec
pop
fwait
dec
add
push
mov
popf
add
int
ret
jmp
xor
shr
icebp
inc
in
ret
sub
xchg
sub
mov
inc
jbe
sub
aas
mov
pop
xor
and
fs
or
mov
mov
mov
js
push
scas
cmp
ds
into
test
int
jne
add
and
xchg
push
jl
mov
cmp
cmp
out
add
inc
scas
pop
adcb
stos
mov
mov
dec
cli
cmpb
fisubrs
adc
cmc
sbb
inc
out
pushf
leave
or
in
test
add
push
pop
pop
inc
pop
push
xchg
pop
lods
test
jecxz
int
insl
jecxz
mov
inc
jno
or
mov
dec
repnz
pop
divb
inc
popf
cmp
mov
mov
or
or
and
loopne
out
mov
or
adc
clc
test
push
xchg
aaa
outsl
mov
xchg
js
jecxz
pop
repz
movsl
jae
adc
aaa
add
xchg
xor
jbe
jnp
add
mov
xchg
outsb
fwait
or
jl
int
mov
adc
adc
out
adc
mov
cld
out
and
sub
dec
sub
and
pop
jge
ja
xchg
inc
pop
lret
mov
pop
or
test
dec
stos
insl
adc
mov
lock
push
push
dec
pop
scas
push
inc
in
or
mov
fwait
std
popa
imulb
rcl
push
out
in
repz
push
or
inc
dec
sub
and
mov
test
jp
movsb
test
orb
popf
filds
into
lahf
inc
push
sarb
pop
subl
nop
cmp
mov
sbb
repz
mov
and
je
xchg
pop
jecxz,pt
jp
jp
insb
mov
inc
nop
jge
mov
lods
jg
rcrl
xchg
popf
rcrb
rol
and
ja
mov
movsb
pop
adc
adc
mov
pop
pushf
ret
imul
sbb
pop
inc
cli
aad
jg
repnz
and
and
sbb
es
cmp
movsb
testb
addb
adc
scas
xor
inc
dec
int3
adc
xor
into
mov
andb
iret
sbb
imul
mov
scas
sahf
lds
push
lret
test
lock
outsl
subb
imul
and
std
jge
aam
mov
xchg
push
adc
les
sbb
aam
clc
lods
mov
inc
lds
add
or
xchg
cltd
mov
add
cmpsb
pop
jns
cwtl
clc
ss
add
stc
scas
test
lcall
jb
cmp
pop
mov
add
adc
aas
mov
in
push
mov
push
fsubs
adc
sub
mov
nop
stos
pusha
push
sub
mov
inc
sbb
lret
mov
testb
jmp
mov
pop
mov
mov
lock
sbb
mov
out
sub
pop
or
cmpsl
les
test
sbb
xchg
sbb
insl
aam
sahf
mov
in
push
out
dec
mov
es
xchg
sbb
imul
fisttps
aaa
test
sub
jl
mov
out
imul
adc
dec
fnstsw
xchg
gs
rol
dec
loope
outsb
mov
pop
pusha
xor
push
pop
bnd
mov
inc
dec
aas
es
push
sarb
mov
aaa
ss
push
je
lret
mov
fsubs
outsl
xor
push
push
int3
subb
push
or
cmp
sub
xor
out
or
bound
jg
into
or
jne
fisubrs
push
jmp
les
push
mov
shlb
mov
xchg
inc
xor
cmp
inc
xchg
ljmp
enter
lret
sbb
cmpsb
das
mov
pand
sbb
pop
ret
sbb
jne
xchg
aaa
in
cli
push
jbe
push
push
ds
jmp
das
cli
xchg
outsb
xchg
or
cltd
or
jo
add
cwtd
cwtl
xchg
sub
orb
pusha
jp
and
inc
mov
lahf
int
stc
xchg
imulb
inc
push
push
mov
lods
stos
bound
jbe
mov
xor
js
movsl
fld
jns
mov
ficoml
test
std
inc
lock
adc
iret
adc
cld
jl
mov
lahf
test
sbb
jno
inc
xor
and
jle
outsb
lea
dec
jno
dec
sbb
pop
mov
js
lret
cmp
ss
mov
mov
jg,pn
dec
or
push
movsl
bound
pop
or
push
fiadds
scas
rcrb
jb
xchg
out
mov
testl
xchg
xor
xchg
mov
popl
roll
addb
xor
adc
lods
das
fcmovbe
out
mov
sbb
mov
movsl
xor
pusha
pop
sbb
xchg
out
leave
test
fwait
sub
cltd
mov
jl
pop
xchg
call
xlat
sbb
je
sub
rclb
rcrl
sarb
jp
inc
out
mov
jns
sub
mov
inc
jb
int3
pop
or
xchg
jg
mov
xchg
cmp
ret
fnsave
jmp
mov
pop
push
inc
cs
push
mov
jp
dec
rcl
xchg
fisubs
ja
push
cmc
popf
push
fmull
or
mov
pushf
scas
shrl
into
fsubrp
and
insl
mov
aam
fs
dec
or
inc
dec
add
les
cs
bound
rcr
out
push
or
scas
pop
lds
test
jle
add
jge
out
adcb
push
dec
jnp
bound
lock
jge
loope
jle
fwait
mov
or
lock
ss
popf
ret
dec
jmp
cmpsb
iret
inc
xchg
lret
mov
in
outsb
outsb
or
cs
addl
outsb
or
mov
mov
cmp
cmp
popl
push
lea
mov
pushl
stc
and
or
push
in
out
cmpsb
pop
aas
out
mov
rolb
testl
insb
cwtl
cmp
sarb
lds
mov
mov
jecxz
fildl
out
shrl
mov
sbb
xchg
into
dec
sub
lret
ljmp
sbb
xlat
cmp
mov
iret
loopne
mov
lret
pop
repz
dec
inc
test
mov
in
pusha
aas
or
add
mov
mov
popl
or
xor
insl
add
pop
lahf
mov
or
sub
std
mov
inc
mov
xor
cmp
sbb
into
andb
mov
or
adc
jbe
or
adc
sahf
push
dec
push
test
shrl
gs
inc
data16
popf
jmp
dec
jns
pop
idiv
ss
int
les
jns
subb
cmp
sub
inc
aad
mov
cltd
jns
addr16
icebp
and
ss
lahf
pop
push
std
sbb
mov
loope
xor
iret
push
scas
or
pop
xchg
pop
pop
ja
std
push
inc
lahf
dec
leave
lods
divb
std
fwait
jne
js
les
sbb
mov
aas
mov
mov
dec
pop
dec
mov
out
sbb
pop
sub
add
or
iret
push
adc
lret
stc
mov
jne
arpl
mov
out
or
push
lods
sbb
out
std
pop
inc
mov
popa
dec
std
subl
movsl
fs
jno
repz
repz
pop
popf
lret
lret
jl
xchg
pop
mov
pop
add
xor
push
push
pop
addr16
push
call
stc
ret
jp
xchg
push
jbe
mov
cmc
fnstenv
out
xor
or
mov
xchg
popa
aam
into
ficoml
xor
sti
sbb
in
jns
jmp
add
js
pop
fcmovne
popf
das
pop
out
push
add
xchg
flds
sub
jns
and
mov
out
mov
ss
sub
sbb
lods
push
mov
sub
cmp
pop
mov
repz
sub
lods
and
or
lock
lret
ds
cmp
into
cmp
mov
adc
sub
arpl
and
outsb
pop
popf
rcrl
cmp
dec
loopne
ds
fsts
sub
inc
xchg
sbb
outsl
leave
in
sbb
fldcw
mov
andb
mov
dec
adc
pop
dec
inc
mov
stos
xlat
mov
ljmp
iret
jl
daa
push
mov
push
sub
lods
movsl
cmpsb
dec
icebp
xchg
cmp
inc
jecxz
cmp
push
push
jb
sbbl
aad
fs
in
fsub
ljmp
push
fcompl
mov
jg
add
es
pop
inc
mov
and
imul
xor
fiadds
xor
int3
dec
push
rcr
push
fcomp
push
les
xchg
sbb
jg
xchg
es
insl
xor
arpl
cmc
loop
cltd
xor
mov
adc
push
and
cmp
decb
pop
outsb
stc
fbld
movsb
and
jno
loopne
or
enter
mov
inc
mov
jg
add
and
adc
inc
stc
stos
cli
rolb
cs
mov
sahf
out
loopne
adc
adcb
std
gs
xchg
hlt
nop
popf
dec
out
into
and
jle
or
daa
xlat
pop
or
clc
inc
jns
es
sarb
testl
mov
insb
xchg
fsts
shlb
mov
cmc
jmp
movsl
pop
popa
sub
data16
push
push
enter
mov
jmp
outsl
and
mov
shlb
aaa
mov
mov
mov
cmpsl
mov
cli
scas
push
insb
or
push
leave
pusha
pop
xchg
mov
push
cmp
mov
xlat
test
les
loope
dec
loopne
adc
jle
outsb
xchg
adc
xchg
dec
je
push
lods
sbb
sahf
mov
les
js
add
pop
xlat
dec
sbb
repz
stos
jb
push
cli
xchg
mov
xor
data16
or
lcall
stc
int
rclb
xor
jg
stc
ja
push
cltd
rcr
push
sbb
cmp
ja
adc
hlt
xchg
xchg
punpcklbw
fcompl
fstpt
mov
int3
and
jg
lahf
pusha
adc
adc
and
leave
xor
push
mov
in
or
mov
adc
inc
scas
lock
ret
int
sub
call
push
inc
adc
test
push
bound
jmp
sub
pop
jns
mov
fidivl
icebp
test
dec
dec
xchg
cmpb
ror
mov
rorb
jge
mov
and
cli
xlat
std
andb
ret
adc
xor
ja
loop
adc
lret
mov
push
and
mov
xchg
subb
sub
pop
pusha
cmc
ja
inc
inc
push
rolb
mov
pop
add
mov
jge
xor
dec
sub
adc
xlat
or
pushf
loop
stos
outsb
aad
in
mov
add
push
xlat
int
adc
adc
and
adc
fistps
xlat
je
pop
xchg
pop
push
fsub
sub
fistps
addr16
lret
mov
add
fwait
xor
fwait
xor
mov
movsb
add
aam
jmp
sbb
push
jnp
ret
mov
pop
inc
fldcw
adc
lea
insb
mov
dec
pop
add
cs
pop
or
fbld
sbb
sbbb
fidivrs
test
and
int3
jbe
repz
aam
shlb
jbe
or
fwait
outsb
les
cmp
push
push
sub
insb
push
pop
into
mov
notb
pop
movsb
pop
mov
xchg
inc
outsl
adc
and
mov
pop
movsl
sbb
call
push
fwait
scas
out
mov
xor
cmpsl
and
pop
and
mov
out
sub
adc
push
mov
xchg
cltd
sub
stos
rorl
inc
pop
or
in
mov
xor
push
fnsave
xor
push
dec
idivb
sbb
imul
es
sti
sub
fldenv
mov
ficomps
pop
ror
cmp
mov
ss
pop
push
movsl
lret
repz
xor
test
push
jo
iret
out
xchg
imul
imulb
inc
nop
in
movups
mov
imul
outsl
jmp
mov
cmpsb
add
xchg
xchg
cs
enter
mov
and
shlb
xchg
rcrl
idivb
cmpsl
mov
jne
mov
daa
les
pop
ret
mov
adc
dec
mov
mov
out
add
jmp
cli
mov
inc
inc
dec
or
int
xor
mov
inc
jne
push
push
fstpl
lds
xchg
inc
outsb
fmull
xchg
cmp
mov
cmpsl
repz
or
dec
cmp
pop
bound
dec
rcrl
arpl
cmp
orb
lds
jg
mov
pop
cld
lretw
sti
fcomps
sub
add
jg
shll
pop
jle
cmc
pop
jp
mov
orb
lret
or
cmp
cmp
std
loop
fcompl
fsubp
jg
mov
js
loope
in
ror
rcrb
xor
jbe
cld
cmp
and
test
subl
xor
mov
xchg
sti
sbb
dec
push
out
mov
div
out
mov
cmp
in
sub
and
std
sub
sbb
outsl
pop
add
dec
sti
xor
addr16
xchg
sbb
lock
lcall
jecxz
fs
aas
loop
xchg
shll
jecxz
int
jb
in
inc
jnp
cmc
adc
mov
push
dec
fisubl
push
pop
pop
xor
xor
dec
adc
mov
into
fmul
es
xor
int
hlt
inc
xor
mov
in
ret
mov
push
jno
sub
stos
inc
and
jecxz
mov
sub
sub
ja
mov
push
sbb
cmc
xor
jmp
hlt
mov
mov
lret
fistpll
insb
in
test
js
jo
ss
aas
xchg
sub
and
jns
push
sar
outsb
jecxz
jnp
sub
das
xchg
in
cli
mov
ficomps
les
or
sbb
mov
mov
stc
ja
js
push
inc
bound
fmul
popf
shlb
shll
push
aaa
loop
cmp
sub
repnz
popa
pop
mov
or
shl
aaa
test
dec
sbb
rcll
lods
xchg
out
into
xchg
nop
stos
outsl
mov
lcall
in
add
in
push
lods
xchg
jno
fidivl
stos
jl
jl
sub
repz
push
shrl
shlb
fcoms
fistpll
inc
out
scas
and
outsl
and
mov
cmp
das
pcmpeqw
aaa
je
andb
jne
dec
faddl
js
ficoml
xchg
push
xor
sub
add
xchg
xbegin
xchg
xchg
repnz
xchg
and
cmp
push
es
std
out
inc
push
dec
cmp
jbe
jno
pop
ffree
push
outsb
adc
lods
and
ret
popf
push
sub
push
cmp
xchg
jmp
mov
mov
cmp
lock
jmp
insl
mov
fstpt
pop
lds
add
mov
insb
stos
imull
lret
xor
outsl
xchg
sbb
push
dec
adc
in
jl
inc
sbb
loope
add
stos
aaa
ds
jne
fwait
push
or
add
xor
shl
je
jge
push
push
enter
ja
inc
es
leave
lahf
aam
js
and
push
rcrb
rcl
das
mov
jp
lret
xor
loop
pusha
push
mov
loope
test
dec
roll
mov
insb
dec
mov
repnz
and
lods
enter
gs
loope
cmpsl
sti
mov
xchg
data16
mov
out
and
cltd
adc
loop
cmp
stc
xchg
sarb
push
push
jnp
push
out
add
insb
pop
mov
mov
fisttps
pop
test
push
iret
push
push
xchg
imulb
icebp
nop
int
test
push
mov
outsl
cmp
mov
dec
mov
jno
pusha
push
mov
lret
movsl
or
push
inc
add
and
and
and
test
push
jmp
sbb
lret
nop
ss
jns
movsb
xchg
ret
adc
scas
mov
cmc
pop
mov
adc
add
ljmp
js
loopne
mull
fwait
mov
push
gs
ss
in
daa
pushf
jmp
push
sahf
xlat
xor
push
xor
push
scas
out
or
cli
fiadds
das
js
push
or
sub
pop
sbb
shrb
mov
clc
jecxz
out
pop
sub
mov
gs
and
imul
jbe
cmpsl
ret
pop
dec
sbb
ret
cmp
push
jno
cmpsl
sbb
mov
imul
mov
mov
add
loopne
cwtl
xchg
lds
rol
fwait
popf
and
sub
cmp
hlt
cwtl
out
arpl
xor
clc
pop
into
or
or
pop
in
and
add
xchg
add
push
and
mov
add
push
icebp
jno
or
mov
ror
inc
lds
pop
gs
adc
push
stc
mov
das
push
daa
pop
push
sbb
aas
in
into
jge
inc
pop
sub
add
inc
xchg
js
cmp
push
mov
mov
ret
xor
adc
push
les
add
push
pushf
outsb
scas
aaa
cmp
mov
ret
cld
sub
cltd
testl
xchg
or
jae
push
ljmp
jbe
sbb
adc
xor
pop
mov
daa
repnz
ret
or
sub
jb
mov
push
inc
loop
test
jp
or
ss
lret
ret
dec
push
fsub
add
cmp
xchg
scas
ljmp
jl
dec
dec
cmp
mov
add
xor
je
inc
xor
dec
mov
mov
inc
or
fistpll
out
push
push
pop
les
sub
punpcklwd
adcl
jge
adc
xor
lds
mov
jb
mov
test
clc
int3
cmp
je
push
mov
pop
cld
enter
in
inc
bound
xchg
flds
out
dec
sub
mov
stc
mov
mov
imul
test
push
xchg
subl
mov
cmp
and
sub
out
ljmp
xor
rcrb
hlt
add
pop
imul
pusha
jbe
sub
cmpsl
addr16
fdivrs
add
inc
lea
push
xor
xchg
mov
xor
inc
mov
repnz
inc
sbb
push
cmp
out
test
aam
lret
loope
in
adc
mov
aas
cwtl
stc
gs
sahf
dec
cmp
jmp
cs
lods
inc
enter
lret
outsb
push
cmp
xchg
shl
dec
lcall
mov
in
addr16
mov
pop
inc
push
or
jmp
daa
ret
fisttpll
aam
cltd
in
cmp
jge
ja
lret
xchg
xorl
pop
sbb
push
mov
lret
in
sbb
fmul
sahf
push
push
loopne
jl
nop
ret
sub
add
pop
adc
jne
outsb
test
insl
mov
ficompl
add
sbb
push
push
push
xor
mov
in
add
enter
push
xor
mov
cli
inc
pop
fadd
add
or
jmp
inc
leave
mov
dec
lahf
movl
xor
mov
std
inc
xchg
xor
pop
pop
sbb
fidivl
sahf
sub
lcall
in
xor
push
jns
std
and
inc
pop
int
fcomps
test
in
leave
mov
nop
out
inc
push
jge
sub
loope
xor
jno
pop
movsl
or
cmpsl
jl
gs
pop
push
inc
sub
inc
pusha
dec
imul
xor
mov
jnp
or
mov
inc
mov
test
in
fstps
das
push
shll
or
push
aas
fwait
push
push
data16
mov
loopne
aam
jbe
jbe
dec
pop
jns
jg
pop
mov
adc
jno
and
fsub
jbe
cltd
pushf
push
das
movsb
lds
movsl
and
sarl
mov
mov
stc
adc
dec
xchg
cmpsl
ret
enter
jmp
xchg
cmpsl
push
iret
lret
sub
dec
aas
into
jle
cmp
add
add
mov
lods
popa
dec
adc
lods
pop
sbb
repnz
inc
std
lds
xchg
cmpsb
lcall
int
or
or
outsb
sub
sbb
inc
mov
jecxz
xchg
ret
inc
or
push
fnstenv
std
ficomps
pop
lret
inc
stos
std
jge
das
inc
je
lods
ret
fldt
movsb
xor
mov
lds
adc
pushf
fisttpl
sbb
fs
mov
adc
cmp
ljmp
shrb
lock
push
jae
add
cld
inc
sbb
jbe
mov
scas
xchg
and
ret
mov
push
add
mov
xchg
test
sub
pop
fistpll
mov
dec
cmp
mov
icebp
and
test
int3
je
scas
test
lahf
fistpl
and
cld
inc
ret
jl
lods
jecxz
jmp
stc
mov
push
out
movsb
test
jmp
ret
push
negl
push
and
andb
stos
or
popf
mov
int
sbbl
cmp
and
out
mov
jns
xor
sbb
add
xchg
push
xor
inc
push
movb
int3
bnd
push
mov
subb
mov
cmc
es
ds
test
xchg
cmc
adc
inc
std
inc
mov
sbb
subl
add
sbb
adc
dec
or
lods
leave
push
jle
loop
fstps
push
and
mov
push
loop
pop
xchg
cmc
ja
adc
mov
bound
inc
daa
shl
mov
push
and
jns
mov
ss
cmp
mov
inc
ljmp
pushl
in
jl
xchg
pop
popa
add
sbb
das
fimuls
pop
lods
out
mov
sub
jge
cmp
xor
xor
push
ret
lcall
pop
stos
dec
add
fstpl
dec
adc
int
xor
mov
ljmp
es
or
hlt
mov
outsl
adc
xor
imul
cmc
sti
mov
inc
xchg
stc
test
push
adc
push
add
dec
pop
mov
xchg
cmp
xchg
lret
test
and
xor
or
leave
inc
fdivl
int3
test
and
fsub
push
fcoml
imul
push
daa
adc
enterw
ja
jns
mov
sti
ret
mov
sbb
aad
call
mov
cmp
in
and
adc
inc
mov
xor
dec
pop
mov
inc
cwtl
scas
int3
subl
call
jle
push
subb
cmpsb
ss
loop
mov
pop
add
clc
fwait
xchg
sahf
mov
mov
cmp
push
mov
in
int
les
xchg
das
adc
mov
cmp
ljmp
dec
push
test
cmp
pop
and
add
mov
push
mov
aam
xchg
mov
lods
jmp
push
add
js
cmp
or
sti
mov
lds
dec
pusha
and
std
test
pop
aaa
jl
enter
fsubrl
lds
pop
mov
inc
jnp
repz
mov
pop
dec
inc
mov
xor
mov
xor
testb
inc
sub
inc
hlt
scas
and
fistpll
cmp
data16
idivl
dec
addr16
jbe
fwait
cmpsl
and
fsubrl
mov
inc
icebp
popa
sbb
mov
and
jg
sub
and
add
and
mov
mov
adc
or
jmp
push
rcrb
adc
push
rcll
inc
fsub
fsubrp
cli
scas
insb
mov
pop
scas
sbb
in
dec
xor
jg
inc
xchg
push
mov
imul
or
jp
aad
mov
aaa
mov
loop
ret
call
dec
addr16
scas
int3
stc
fnstsw
pop
lods
xchg
loope
adc
xor
int3
xor
adc
push
sub
lods
hlt
mov
pop
mov
jg
or
out
aaa
insb
mov
jbe
pop
mov
dec
jle
je
outsb
xor
repz
fiaddl
roll
jmp
mov
pop
mov
imul
scas
dec
mov
mov
outsl
push
addl
cmp
xchg
loop
outsl
cmp
or
push
cs
insl
jle
iret
sarl
scas
and
inc
arpl
loop
mov
and
pop
xchg
in
rep
fbstp
stos
push
popa
sub
scas
pop
cmc
sub
lds
pop
push
add
icebp
test
dec
aas
jno
inc
jbe
imul
ret
js
movd
scas
sbb
adc
cmp
insl
in
mov
inc
cmc
xchg
js
xchg
push
mov
or
xlat
sbb
xor
or
fsts
xchg
dec
pop
mov
sarb
and
sub
xchg
jo
and
inc
jecxz
cmp
lcall
xchg
aaa
cmpb
jp
cmpsl
bound
cmp
push
sbb
sbb
jae
lods
push
cmovno
jl
xor
std
insb
in
adc
popf
pushf
or
sub
push
jmp
cmpsb
lcall
aaa
rcl
push
inc
mov
dec
push
inc
push
inc
sub
push
mov
lcall
sbb
je
fs
aad
or
xor
xchg
xor
cltd
jno
lret
fidivrs
fidivs
and
xor
adc
adc
mov
test
add
fistpl
xor
cs
jns
rorb
aas
into
adc
jns
or
daa
mov
pop
fnstenv
and
shll
cld
xchg
mov
fdivl
repz
mov
cmp
aas
pop
pushf
js
rcll
icebp
cwtl
clc
mov
jbe
add
sbb
fdivl
or
mov
aas
inc
test
inc
add
mov
daa
xchg
hlt
pop
jns
and
lods
out
mov
sbb
sub
lahf
scas
ja
ficomps
std
into
in
in
pop
test
or
out
mov
scas
sbbl
popf
fistpl
jle
aas
mov
jbe
lret
mov
test
and
mov
pop
and
mov
imul
mov
and
popa
jge
push
mull
repz
std
stc
js
or
jns
in
and
insb
test
and
mov
icebp
adc
aaa
loop
dec
std
cmp
pop
adc
js
mov
fstps
mulb
test
mov
fbstp
jg
in
pusha
movsb
pop
rcll
mov
stos
sub
adc
ret
lods
and
fwait
inc
fwait
jmp
or
push
int3
mov
pop
sub
loop
outsb
mov
imul
aam
ds
inc
xor
mov
xor
imul
xchg
decl
xchg
dec
stc
adc
rclb
icebp
cmc
or
xchg
not
das
cmp
imul
and
flds
xchg
stos
and
mov
mov
jns
in
jae
sahf
orb
jne
cli
data16
mov
sub
cmp
lods
cs
push
jne
loopne
shr
push
aam
and
dec
jbe
lea
push
mov
insl
inc
cmp
sbb
sub
rcrb
push
jns
arpl
xor
mov
jne
dec
cmp
jp,pt
out
lods
addr16
lds
sahf
lods
sub
pusha
ja
imul
inc
cmp
inc
scas
imul
pop
rorl
mov
movsl
mov
or
lcall
mov
int
loop
push
test
mov
cwtl
packssdw
mov
mov
in
sub
pushf
inc
pop
dec
or
pop
icebp
xor
clc
aaa
test
sub
outsb
mov
xor
jl
in
add
fisttpl
dec
ljmp
pop
cmp
pop
push
mov
arpl
jp
adc
or
gs
scas
sub
std
cmc
data16
lcall
cmpsb
jo
shll
aas
out
std
mov
fstpt
inc
xchg
mov
aam
cmpsl
repnz
test
fdivrs
stos
jo
mov
sub
xchg
or
daa
mov
push
mov
push
and
mov
or
sub
push
cwtl
mulb
pop
shl
fldl
mov
sub
xor
in
popf
dec
in
push
in
sbb
testb
inc
or
fs
stos
cmp
push
imul
lods
jne
pusha
mov
sub
or
sub
push
inc
lcall
mov
xor
cmpsl
mov
addb
lea
movsb
inc
insb
shlb
loope
mov
lret
loopne
mull
sbb
and
jmp
dec
gs
adc
adc
pop
lcall
rcrl
mov
rcrb
iret
jne
pop
push
adcb
imul
dec
arpl
loope
sbb
pop
or
dec
push
push
cwtl
push
fstps
sbb
fscale
in
jp
incb
mov
cmc
pop
xchg
hlt
sbb
enter
nop
dec
bound
in
subl
leave
push
pop
mov
in
mov
mov
xorb
xor
adc
jmp
dec
cmp
fcmovnu
loop
sbbl
xchg
add
test
pop
in
ljmp
rorb
cmp
loop
xchg
lds
cmpl
mov
push
add
fsubs
int
movsb
sub
dec
sub
push
pop
arpl
xor
mov
mov
push
mov
mov
in
and
xchg
ret
jae
js
outsb
fidivs
adc
lret
int3
dec
push
scas
daa
mov
pop
jge
push
dec
sbb
inc
cwtl
push
or
jnp
cmp
aam
sahf
in
push
or
je
filds
cmp
fcmovnbe
add
xchg
nop
dec
jg
xchg
test
push
sbb
and
fimull
shll
fdivrl
fisttpl
in
jnp
push
mov
in
das
mov
icebp
icebp
add
mov
bound
push
ret
popa
jge
jb
outsl
cmp
repz
nop
jecxz
pusha
out
adcl
fistpl
ret
fwait
cli
or
aam
push
jle
jbe
mov
jge
cmp
jne
je
arpl
jb
xor
mov
ret
popf
jecxz
fildl
repnz
dec
jge
mov
daa
insb
xor
pop
xor
call
cmp
mov
ljmp
sbb
xorl
cmp
das
popa
lahf
sub
ja
lods
jecxz
aad
xchg
adc
ret
add
xlat
in
fnstcw
add
sbb
adc
cld
rorb
xlat
add
sbb
cmp
inc
adc
add
inc
push
rcrb
cmp
or
cmp
mull
mov
stc
repz
add
insl
stc
imul
jge
jno
popf
xor
dec
inc
out
or
out
popfw
scas
adc
xchg
add
fs
popf
cld
cmp
fistpl
inc
nop
test
int
or
jp
daa
es
sbb
mov
stos
outsb
aas
and
cmp
or
jmp
test
pushf
xlat
and
cmp
xchg
lret
in
enter
adc
lcall
dec
xchg
icebp
testl
scas
mov
cmp
jmp
mov
sahf
xchg
push
jp
ret
fistpl
outsb
outsl
mov
dec
jl
jno
insb
inc
adc
int
popf
test
mov
mov
loopne
sub
aas
lret
movsb
loopne
lds
orps
or
cmpsl
inc
or
js
jo
jmp
scas
push
push
xchg
out
xchg
insl
movsb
pop
jmp
cmpsb
test
pop
push
add
data16
mov
jno
add
pop
jmp
cs
sbb
push
fwait
into
xor
push
mov
cld
adc
jge
dec
push
inc
jge
sahf
cmp
ja
ja
int
push
mov
sub
into
fsubrs
inc
xchg
icebp
iret
mov
iret
test
mov
hlt
fwait
mov
aam
pop
xor
cs
shlb
jnp
mov
sarb
int3
jo
fisttpl
test
arpl
ror
jge
adc
js
mov
xchg
mov
sbb
pop
mov
enter
out
dec
sub
pop
mov
sub
mov
stos
scas
and
push
fdivl
add
sarb
insl
or
dec
cmpsb
jno
mov
and
stc
repz
inc
imul
testb
and
push
dec
dec
adc
jns
mov
mov
mov
mov
dec
out
lds
loope
sub
mov
pop
or
xor
pop
js
sbb
xchg
pop
add
jnp
out
ljmp
pushf
cmp
mov
mov
push
dec
popa
outsl
stos
sarb
dec
in
mov
pop
int3
mov
lods
or
and
sub
push
test
int
jnp
and
or
fisubrs
clc
mov
nop
and
outsl
imul
pop
and
dec
push
fldenv
xchg
mov
sti
pop
or
inc
sub
cli
mov
push
aas
mov
mov
push
pushf
test
jmp
lods
push
repz
in
imul
rcl
enter
pop
sbb
fldt
pop
sbb
pop
pop
loop
mov
adc
loope
icebp
mov
mov
cltd
or
fidivs
rcll
clc
sahf
stos
mov
icebp
fucomp
or
sbb
lret
inc
popa
mov
push
jg
jp
daa
jecxz
xor
cmp
xchg
cs
fcoml
addb
and
jl
lret
inc
push
push
popa
sub
loop
sbb
xchg
cmp
mov
rorl
mov
mov
mov
pop
or
mov
cwtl
mov
aaa
out
sbb
cmpsb
xchg
gs
test
jmp
daa
inc
ds
cltd
test
popa
or
mov
adc
popf
lcall
or
mov
push
test
push
push
mov
inc
sbb
add
lock
int3
sahf
outsb
movsb
adc
pop
mov
notb
xor
jnp
ss
pop
xchg
mov
cld
push
jb
push
rcl
rorb
movsb
cmp
imul
pop
inc
test
imulb
sbb
test
and
pushf
mov
cmp
ljmp
add
mov
push
sub
inc
xor
inc
fsub
ret
push
add
rcrb
mov
mov
xchg
fdivrs
mov
fcom
in
stos
nop
sbb
adc
movsl
loopne
add
lods
fisttps
xchg
in
cmp
popf
jne
out
mov
push
cmp
inc
or
mov
sarl
sub
push
stos
insb
jns
xchg
jbe
pop
jbe
mov
and
push
ds
push
test
push
addb
movsb
cld
inc
add
push
loop
sbb
mov
cwtl
push
into
pop
jmp
dec
mov
pop
int
cltd
or
pusha
dec
ret
ret
push
sub
repz
in
into
fs
cld
enter
js
mov
fisttps
lcall
fldcw
pop
pushf
mov
pand
aaa
and
xchg
mov
mov
les
fisubrs
push
mov
or
add
jo
sub
pop
push
data16
jecxz
push
aaa
mov
sbb
pop
jecxz
cmp
cld
sub
adc
into
xor
icebp
mov
sbb
sub
fxch
cmp
cmp
jnp
ds
pop
mov
les
pop
in
pop
cmp
sahf
xor
into
mov
mov
mov
addb
orb
lahf
inc
out
cltd
adc
fisttps
call
nop
and
push
xchg
ficompl
jo
cmp
xor
in
ffreep
jg
pop
adc
ret
mov
inc
push
pusha
jnp
rolb
scas
insb
mov
push
fcoms
dec
loop
sbb
aas
push
test
jo
insl
push
ja
lret
xor
fisttps
jae
faddl
dec
mov
fdivs
and
fcmove
aaa
jno
pop
test
mov
mov
nop
xchg
mov
incb
fsts
test
add
fsubr
pusha
loopne
xchg
stos
enter
mov
icebp
xlat
mov
mull
push
subl
dec
xor
push
jl
stos
lods
lods
and
gs
test
xor
fidivrl
idivl
pop
push
aam
ss
adc
pop
xchg
ret
sbb
cltd
sbb
fisubrl
dec
daa
mov
xchg
add
or
dec
dec
pushf
mov
ret
xor
mov
jge
mov
insl
cmp
add
push
mov
daa
fxch
cmp
xchg
aaa
xor
pop
mov
mov
fsts
js
orb
int3
loop
mov
xor
mov
push
cmp
enter
sbb
in
arpl
pop
ja
jae
dec
inc
daa
test
decb
jmp
movb
pop
arpl
cmpsl
cmp
pop
stos
ficoml
in
ljmp
jb
dec
or
ret
inc
in
dec
ja
and
jp
and
shrb
les
mov
jbe
cmpsl
fsubrs
stc
fcompl
shll
xor
mov
dec
call
shll
push
mov
rcll
pop
xor
fimuls
lahf
mov
dec
xchg
cmp
mov
jmp
dec
xor
movsl
jne
jae
sbb
mov
out
mov
sub
add
fcmovnu
mov
shrb
loopne
std
mov
jo
cmpsl
xchg
pusha
out
jmp
mov
jo
xchg
jg
mov
loopne
add
repz
iret
dec
daa
cmp
cmp
sub
push
test
xchg
cs
xor
fistps
pop
push
add
mov
jg
mov
btr
mov
mov
sti
or
sbb
mov
test
in
inc
rcr
inc
xchg
mov
or
sarb
mov
stos
cmpsl
mov
fisubs
or
nop
psraw
in
test
sahf
or
xor
sti
shr
aaa
add
popf
push
outsb
dec
push
inc
add
arpl
jecxz
inc
xchg
stc
add
popf
ss
xchg
inc
inc
jnp
mov
adc
mov
push
fmul
cld
lret
xchg
and
popf
shlb
das
sahf
mov
mov
push
adc
pushf
sub
orb
out
mov
jb
in
lods
lret
dec
sbb
stos
push
shrl
es
cltd
aam
inc
push
push
adc
test
mov
adc
cld
sub
jmp
pop
jge
add
fs
popa
xor
mov
out
push
fcom
add
rcl
out
pop
call
nop
addr16
lret
shrb
rcrl
jo
ljmp
jnp
ljmp
dec
mov
cmp
lods
addr16
fisubrs
xlat
inc
mov
lcall
in
nop
rorl
imul
pop
lock
mov
stc
fsubl
push
mov
mov
push
cmpsl
mov
ficompl
jp
lret
cmp
iret
push
gs
test
or
sti
xchg
mov
call
mov
test
mov
jl
mov
dec
jae
cltd
jno
inc
enter
lret
mov
push
leave
jbe
add
or
inc
adc
mov
iret
sti
xor
mov
imul
rcr
clc
pop
outsl
cmc
adc
sbb
and
test
loope
jmp
cltd
pop
xor
adc
add
mov
scas
mov
jg
lock
int
mov
rcrl
loop
ds
adc
add
mov
hlt
in
call
ret
or
mov
leave
stos
xor
ja
cmp
dec
dec
mov
in
fildll
xchg
pop
ja
rcll
inc
jo
mov
and
into
sbb
pop
out
in
xor
into
outsl
inc
fsubl
mov
mov
test
inc
xchg
popf
ss
stc
push
lcall
inc
push
adc
xchg
inc
inc
mov
lds
sbb
xor
push
xchg
out
testl
dec
mov
xor
jmp
mov
scas
outsl
sbbl
enter
jo
xlat
lcall
sub
jg
dec
out
lret
movsb
jmp
test
xchg
lea
xor
clc
aaa
pop
dec
mov
in
dec
pop
mov
jmp
pop
pop
adc
xchg
or
sbb
jae
push
shrb
xchg
das
ja
fisubrl
dec
and
shll
test
int3
test
xlat
insl
push
inc
stc
clc
mov
pop
cmc
xchg
cmc
out
add
lcall
repnz
sbb
jp
jp
mov
stos
iret
inc
mov
add
arpl
push
push
and
mov
pop
push
sbb
rcl
xor
jnp
jmp
mov
jne
jno
sbb
push
in
and
mov
jne,pn
out
fdivs
in
mov
iret
xchg
pop
push
push
add
adc
scas
pop
sbb
or
jg
xor
cmp
outsl
mov
fidivs
rcl
dec
div
cmp
sub
ljmp
rol
mov
fsubl
pushf
ja
pop
mov
cmpsl
or
rolb
jae
lock
push
es
lods
in
out
in
jnp
fcmovbe
loop
adc
fwait
push
xor
jo
add
mov
cmp
jbe
mov
ja
mov
jbe
cmp
inc
dec
and
mov
sti
fsubrs
cwtl
iret
push
xchg
pop
mov
push
xlat
fsub
cmc
sbb
cwtl
add
fidivrs
sbb
scas
test
out
stc
cmp
xor
addr16
and
or
mov
push
lcall
stos
test
fldln2
mov
fidivrl
jp
fidivrl
nop
int3
stos
mov
and
mov
pop
push
jae
mov
xchg
mov
pop
fldl2t
mov
shlb
outsb
add
mov
out
mov
cmp
xchg
ret
mov
in
pusha
icebp
mov
sbb
arpl
mov
or
sub
nop
fstps
pop
mov
xchg
jecxz
pop
movsb
popf
lcall
mov
lods
dec
push
pop
stc
daa
xchg
inc
dec
int3
in
jne
cmp
int
scas
xor
xchg
pop
and
dec
mov
ret
push
sbb
sub
cmc
xor
lds
sub
sarl
outsb
popf
stos
sub
xchg
sub
scas
sarl
add
rol
push
cld
gs
mov
lods
das
rorl
xchg
fiadds
sbb
ret
scas
xchg
mov
mov
mov
add
sub
js
pop
xchg
xchg
or
shl
hlt
lret
jge
pop
jp
inc
pop
cli
sub
pop
stos
jns
push
jns
xchg
sahf
ljmp
aad
or
fstpl
aaa
cmpsl
cwtl
jge
xor
imul
rolb
iret
imul
push
jns
ljmp
push
push
jmp
pop
mov
xchg
xchg
inc
scas
ror
int
sbb
lahf
out
aad
dec
test
int
push
jg
sub
into
setno
pop
jno
out
or
push
popa
testl
cli
xor
or
int
lret
aam
fisttps
jnp
test
int3
sub
lret
iret
pop
ret
adc
push
sbb
sbb
adc
std
xchg
insb
pop
sbb
pop
adc
lds
ret
outsl
mov
out
out
xor
jne
or
addl
inc
sti
ljmp
iret
mov
int3
mov
sbb
rcll
aaa
lcall
sti
dec
stos
jl
setne
xor
es
push
fwait
sbb
adc
loope
xchg
call
imul
in
mov
jbe
push
adc
rorb
aas
inc
cld
dec
arpl
jnp
cmc
lds
shrb
or
sub
cmp
add
jge
push
add
sti
inc
mov
cmpsl
shll
outsb
leave
and
mov
int3
mov
pushl
in
add
out
xchg
or
int3
test
and
add
lods
xchg
lahf
or
fcmovnu
popf
adc
es
clc
sub
mov
or
mov
scas
adc
push
test
insb
mov
cmc
add
js
cmpl
push
xor
insl
pop
pop
jae
rcrl
pop
push
mov
rorb
popf
testb
cli
add
sbb
push
xchg
lock
fwait
pushf
arpl
xchg
cld
mov
enter
push
cwtl
pop
mov
int3
ret
jae
insl
inc
icebp
loopne
lret
in
lds
std
sbb
scas
xchg
push
and
add
std
xor
xchg
xor
add
mov
push
shll
push
mov
add
xchg
clc
pop
gs
out
incl
test
lahf
jmp
mov
sbb
aaa
push
aas
jns
jle
js
mov
sub
push
or
int
and
or
or
adc
dec
pushf
sbb
shrl
stos
mov
test
mov
test
sti
lret
das
inc
cmc
cld
loopne
mov
xor
xchg
shrl
es
movsl
aad
dec
pushf
inc
mov
and
je
cwtl
fs
cmp
fdivl
stos
push
mov
rcl
inc
ja
sub
cmp
gs
loopne
aaa
jne
mov
or
pop
psubusw
lret
mov
lret
loopne
jmp
fistpll
mov
add
in
cmp
fucomip
jb
mulb
or
add
dec
or
pop
cs
jns
addr16
movsb
aaa
test
xor
or
add
das
cld
shrb
jl
loop
adc
xchg
js
fnstsw
pop
pop
lret
testl
lea
fisttpll
fs
popa
inc
sarl
int3
push
mov
popf
mov
dec
xor
stc
mov
add
cmp
dec
jl
cmp
push
sub
push
lock
ficoml
ljmp
push
orb
cmp
sub
xchg
fmull
jnp
mov
cs
sbb
bound
mov
cltd
adc
negl
mov
push
ljmp
mov
push
inc
loopne
mov
push
add
aas
pop
adc
jle
lock
mov
mov
bound
out
inc
dec
mov
sbb
xlat
dec
jne
jge
icebp
leave
cmp
adc
mov
dec
xlat
jl
sahf
xor
mov
adc
adc
and
divl
adc
pop
popa
xchg
faddl
aad
add
ja
les
push
bswap
mov
pop
test
loopne
and
mov
ficoml
dec
mov
xlat
mov
aam
xor
test
add
sbb
daa
enter
mov
push
scas
push
jno
add
cld
push
out
addr16
xchg
mov
pop
outsb
ja
adc
cmp
mov
gs
inc
fidivrl
cmp
fdivl
push
in
jns
mov
push
test
arpl
stos
jae
add
adc
cmp
das
and
cmp
lret
movsb
or
dec
add
mov
les
test
call
lods
ss
jge
hlt
mov
or
aad
into
jmp
and
mov
insb
fadd
int
adc
add
xor
test
push
enter
in
cmp
dec
data16
mov
xor
clc
decb
and
xlat
xchg
and
pop
mov
xchg
fmull
and
dec
fstpt
add
push
pop
or
dec
pop
aam
mov
jns
fwait
nop
xchg
xor
std
cmpsb
cwtl
jbe
cmp
lcallw
xor
or
jge
lock
xchg
out
add
adc
stc
ret
sbb
add
rcll
sahf
sub
mov
fs
push
aad
ss
sub
pop
cld
inc
out
out
lods
pushf
imul
fisttpl
xchg
xor
push
sbb
cmpsb
scas
js
cmp
inc
push
push
add
std
adcl
xor
xchg
mov
jbe
sbb
dec
pop
jmp
aas
fsubrl
sbb
dec
test
adc
loope
popa
pop
shll
lea
mov
sti
add
mov
inc
in
jmp
push
sub
jmp
inc
xor
divb
add
outsb
and
test
push
add
out
push
pusha
mov
adc
neg
xor
push
int3
das
jecxz
daa
imull
repz
and
xor
dec
divl
hlt
mov
stc
std
int
lcall
mov
lcall
in
dec
sub
mov
jge
jmp
dec
pop
stos
pop
lahf
in
ret
mov
frstor
enter
fwait
and
dec
leave
nop
mov
pop
int
add
mov
push
movsl
pop
out
sub
and
cld
scas
pop
les
addr16
mov
cmp
mov
cmp
dec
mov
and
scas
cmp
pop
cmp
and
filds
and
lret
inc
cmp
push
push
mov
sbb
jns
push
fidivs
inc
and
data16
mov
rolb
or
mov
xchg
sbb
std
rcll
in
aas
loope
lods
out
sbb
mov
loopne
sub
add
inc
movsl
cmp
iret
and
push
ficompl
loope
sub
sarl
cmpsl
int
add
outsl
jo
adc
sti
outsb
and
or
inc
cmp
mov
xchg
fists
pop
and
push
push
movsb
sti
ret
push
ljmp
xor
inc
das
mov
cmp
bnd
mov
push
shll
out
std
shl
mov
lret
mov
arpl
data16
jp
sub
popf
dec
fistpll
fdivs
loopne
pop
pop
pop
subl
je
pusha
jecxz
and
push
inc
mov
jbe
dec
or
pop
mov
pop
push
adc
lock
lret
addl
aam
add
jb
push
and
cmp
jne
adc
add
add
out
notb
pop
dec
fcomi
xchg
sub
enter
popf
clc
ret
out
ficomps
dec
dec
sub
dec
dec
mov
frstor
std
mov
shrb
lret
in
jp
movsb
int
bound
hlt
cmp
call
std
lret
xor
jg
jns
mov
sub
negb
jmp
lret
adc
jnp
inc
xchg
mov
insl
test
test
movsb
mov
movsl
jmp
xchg
aaa
insl
addr16
xor
daa
xrelease
mov
lock
push
sub
aam
mov
push
mov
test
fwait
std
call
sti
mov
and
pop
push
mov
inc
shlb
and
pop
pushf
cmp
inc
int
sbb
dec
add
pop
mov
js
sahf
mov
fnstcw
fcmovnu
mov
sti
jecxz
in
lods
sti
pushf
xor
outsl
xlat
fwait
sbb
xor
lods
push
jmp
fmulp
icebp
gs
mov
or
mul
in
mov
sarb
sub
hlt
push
dec
das
xchg
push
xor
lret
nop
dec
pop
xchg
pop
jge
mov
mov
inc
inc
xchg
popa
aas
sub
daa
and
add
sub
inc
fists
xchg
sbb
roll
lods
xchg
hlt
jmp
rorb
add
faddl
sbb
and
test
negb
dec
xor
cmp
pop
pop
mov
cmpsl
jo
into
ss
xchg
es
or
inc
mov
ror
aas
daa
sub
xlat
insl
add
jno
gs
inc
xor
jnp
or
test
dec
mov
pusha
dec
jmp
push
inc
mov
pop
sbb
pop
gs
testb
jo
icebp
pusha
out
mov
shlb
push
subb
xchg
xchg
sbb
imul
mov
imul
mov
scas
loopne
pop
mov
in
inc
cwtl
movsl
inc
popl
xlat
or
dec
push
movsl
mov
insb
mov
pop
fldt
aad
into
jne
inc
mov
lods
jo
addr16
es
popf
divb
add
pop
out
jmp
sbb
je
mov
stos
and
cmpsl
fs
push
pop
mov
test
sub
data16
pop
shrl
or
jl
andl
lret
repz
js
jnp
std
addl
insb
push
dec
popa
add
jmp
add
adc
jae
jne
mov
xchg
jecxz
ja
out
jns
hlt
jno
imul
add
add
movsl
pop
mov
jge
adc
mov
push
push
out
sub
jl
js
lahf
pop
out
cmp
add
dec
xor
std
pop
loopne
fnstsw
and
cmp
nop
add
into
daa
lret
push
xor
shlb
mov
lds
xlat
dec
mov
ret
ret
pop
sbb
imul
outsb
cltd
lods
adcl
cmpsl
cwtl
ret
in
jmp
or
jmp
stos
xchg
fucomi
icebp
test
push
enter
ds
xor
enter
cmp
add
cli
in
rcll
andl
stos
into
xchg
leave
fsincos
xor
or
mov
xchg
inc
sti
inc
insb
mov
leave
fs
das
mov
aas
cmp
cmpsb
imul
or
or
in
lret
xchg
lods
or
sahf
sub
lahf
es
inc
in
mov
adc
pop
adc
lds
sub
repz
dec
mov
fstpl
out
out
inc
stos
cltd
add
jp
pusha
sbb
test
mov
add
das
mov
nop
xchg
stos
movsl
xor
jnp
lahf
iret
and
dec
adc
mov
push
fisubrs
jae
push
repnz
mov
jns
fisttpll
inc
mov
inc
push
data16
pushf
nop
shrb
dec
data16
cmp
lret
bound
enter
xchg
mov
push
dec
test
mov
xchg
pop
aas
in
sahf
and
test
push
mov
or
xlat
xor
scas
rorb
popa
xchg
fnsave
pop
or
xchg
addr16
and
popf
movb
push
add
flds
es
add
xchg
cs
mov
mov
test
cmp
pop
lods
movsl
movsl
popf
sub
ljmp
add
add
cmc
ret
cli
leave
xchg
cli
imul
mov
repnz
jne
dec
cs
dec
hlt
xor
mov
pop
mov
add
sahf
or
bound
rcl
outsb
mov
leave
ja
cltd
mov
mov
cmp
mov
or
mov
add
loope
xchg
mov
cld
cs
fsubrl
sti
mov
ret
js
add
popa
mov
dec
fiaddl
and
jecxz
shrb
inc
add
pop
mov
dec
or
mov
cmp
lcall
mov
pusha
inc
push
test
pop
rcll
mov
ud0
mov
shll
jno
and
sbb
pop
adc
imul
mov
lods
mov
inc
xlat
adc
push
rcrl
fistl
fbld
sbb
stos
add
jnp
cmc
pop
and
int
adc
mov
scas
cs
jp
xor
dec
and
ja
nop
or
push
mov
mov
mov
notl
pop
insb
ds
in
faddl
mov
dec
xlat
mov
jecxz
notl
mov
ljmp
std
testb
scas
inc
dec
cmp
lea
lds
cmp
mov
xchg
and
fwait
mov
popa
mov
adc
int
lcall
jb
sub
adc
mov
icebp
dec
out
mov
pushf
in
mov
and
iret
ret
pop
dec
jno
or
stos
incb
aaa
andl
ret
and
add
fisttps
lcall
test
outsb
ret
fwait
cwtl
enter
stos
mov
pushf
add
jno
sbb
gs
dec
fsubrs
bound
repz
adc
pop
addr16
push
mov
push
pop
fcompl
push
cmpsl
in
ret
xchg
and
je
dec
mov
push
add
lret
mov
xchg
repnz
push
pop
lds
fisubs
add
sbbl
das
mov
xchg
loopne
pop
test
xor
dec
addr16
out
je
xor
pushf
push
jmp
inc
ds
mov
sub
add
cmp
notl
dec
movsb
movsl
imul
mov
mov
adc
xor
sbb
aam
sahf
lret
jmp
cmp
jo
xchg
test
push
add
mov
outsl
push
sbb
pushl
test
rcrl
sub
push
sbb
loope
call
rol
in
lock
xchg
and
push
hlt
pop
mov
shl
subl
pop
call
das
int3
sub
sub
mov
sub
ds
shrl
fwait
sub
mov
jbe
push
jno
push
paddw
lods
decl
ret
jb
icebp
lods
pop
orl
inc
negb
sbb
cmpsb
in
fnstsw
mov
add
icebp
adc
mov
pop
push
stc
imulb
out
mov
repz
mov
es
pop
fidivrl
sbb
mov
xchg
stos
loope
mov
repz
cltd
add
push
xor
movsb
adc
aas
mov
jbe
jo
stos
dec
cmpsl
nop
es
pushf
or
enter
xchg
rol
cmp
sahf
cld
ljmp
dec
sbb
lods
mov
jmp
mov
pop
fsubl
xchg
rorb
jecxz
lock
out
adc
xchg
icebp
mov
cmp
mov
arpl
inc
cmc
sbb
lcall
aas
push
push
rclb
outsb
mov
xchg
div
aaa
sti
sub
jne
ret
test
stc
or
xchg
and
loope
bnd
orl
mov
and
sbb
add
xchg
dec
hlt
ljmp
xor
and
ss
cmpsl
pop
cmp
ds
or
xchg
loop
inc
jle
inc
ret
jne
lods
adc
rcrb
daa
bound
lea
mov
gs
out
push
ret
xor
jmp
lret
scas
push
inc
jle
xchg
mov
xor
cmpsl
sbb
jecxz
pop
xor
jae
jae
push
aaa
fs
add
cmp
sbb
loope
cmp
xorb
push
sbb
push
pop
mov
in
mov
adc
adc
sub
loopne
cwtl
xchg
jae
cmp
in
imul
push
push
stc
sub
shll
es
outsl
adc
push
pop
ljmp
mov
daa
outsl
cmp
dec
sub
mov
mov
sub
arpl
out
xorl
jp
ljmp
and
adc
adc
sbb
and
push
pop
or
sub
data16
repnz
iret
xchg
shl
push
mov
push
sbb
pop
decl
test
hlt
lret
xchg
sub
mov
dec
movsb
mov
rol
dec
js
cmc
in
sti
imul
mov
sbb
fadds
mov
push
fistpll
imul
xchg
jns
pop
stos
aaa
ljmp
iret
insl
arpl
xor
add
xor
loopne
or
jmp
mov
xor
dec
jno
mov
jmp
sbb
inc
jbe
into
and
mov
inc
insl
dec
mov
popa
jns
xchg
xchg
push
sbb
frstor
jmp
mov
jl
mov
jo
fmuls
sub
mov
push
adc
out
jmp
cmp
call
xchg
outsl
add
stc
out
push
add
cmc
imul
mov
enter
push
out
in
cmp
mov
dec
cmp
jmp
jnp
and
outsb
pusha
fwait
xchg
notb
in
add
inc
lret
mov
cmp
out
int3
mov
dec
pop
add
lds
andw
in
mov
aas
in
and
pop
pop
outsb
mov
push
pop
mov
fldl
push
xchg
sbb
loop
jl
mov
xor
add
jle
xor
dec
xorb
sysenter
dec
rorl
mov
pop
adc
pushf
pop
pop
xchg
cmp
xor
stos
dec
or
fldl
mov
leave
in
jp
mov
add
outsl
sub
bound
cltd
jg
lods
adc
add
jns
dec
adc
ja
lods
aas
xor
xchg
jge
gs
fdivl
int3
shlb
push
sbb
xchg
and
inc
cli
jnp
jb
fidivl
push
call
in
in
div
dec
cmpsl
xlat
stc
adc
pop
adc
jecxz
daa
jbe
pop
or
jge
push
flds
adc
push
les
jecxz
jae
xchg
popf
or
stos
enter
incl
add
gs
pop
dec
jecxz
sub
je
mov
data16
pop
add
push
push
int
mov
cmpsb
sub
sub
loop
mov
adc
inc
xor
leave
flds
add
sbbl
leave
and
xor
cmp
jmp
sti
js
sbb
or
idivl
adc
adc
inc
ret
or
sbb
sbb
xchg
mov
xchg
push
ds
add
cli
cs
inc
iret
rorl
xlat
lds
inc
repz
fcompl
mov
pop
fcoml
xchg
aam
dec
idivw
dec
ficoms
pop
sarl
fsubs
addr16
or
dec
inc
scas
sahf
sub
xchg
pop
mov
lret
sbb
xchg
dec
shlb
out
loop
inc
or
push
out
and
mov
adc
mov
push
mov
mov
aas
fcmovne
or
and
ljmp
or
jge
std
daa
lock
aam
dec
dec
mov
mov
incl
in
test
divl
nop
xchg
xor
arpl
pop
mov
pop
push
bound
ljmp
inc
xor
gs
jmp
xor
mov
cmp
lods
lds
sbb
aad
aad
pop
pop
xchg
push
cli
jg
daa
push
outsl
mov
mov
orb
cmp
test
jmp
push
pop
pop
adcl
mov
int
iret
jno
mov
insb
jns
ret
cmovno
jb
push
xchg
test
fwait
push
lock
inc
stos
push
xor
mov
and
stos
fdivr
adc
pop
and
loop
into
leave
mov
xchg
dec
sarl
xor
shll
pop
jo
repz
mov
push
notb
fcoms
inc
mov
stos
mov
cmp
cli
xchg
inc
aam
jo
xchg
cmp
adc
subb
jno
adc
xor
loop
enter
icebp
pop
aam
jbe
addr16
dec
testl
js
aam
lock
std
fnstsw
adc
push
jg
mov
mov
pop
xlat
daa
adc
out
out
decl
imul
xor
lcall
mov
cmpsb
cmp
xor
test
icebp
pushf
or
cwtl
add
dec
dec
xchg
icebp
xor
out
inc
das
aam
out
jg
inc
cmp
sbbl
pop
mov
mov
pop
inc
ds
adc
loopne
dec
fists
jp
xor
jb
adc
movl
inc
lahf
fisttps
out
cs
xchg
lret
mov
mov
add
xchg
movsb
movsb
dec
daa
mov
inc
insl
inc
in
leave
gs
and
jp
adc
hlt
mov
std
cwtl
loopne
push
aad
cmpsb
outsb
pop
dec
xchg
pmulhw
cld
out
mov
adc
xchg
in
pushf
xor
cmpb
inc
pop
pop
aaa
insb
adc
pop
rclb
les
insb
xor
or
pop
shll
mov
mov
ljmp
inc
inc
ss
inc
mov
jmp
out
jbe
out
jg
cmp
rcrb
repz
cmp
cmp
fs
push
stc
xchg
pop
lods
cmp
xchg
fiadds
fbstp
movl
jge
in
ss
add
in
imulb
lds
scas
addr16
dec
repz
xchg
clc
sub
cmp
or
lea
out
and
fbstp
and
push
or
jg
and
xchg
out
xchg
cltd
cmpsl
lret
int3
or
clc
pop
pop
test
mov
xchg
jp
popf
pop
pop
add
inc
xor
movsl
xor
pop
or
andl
pop
lea
push
cmp
pop
cmc
mov
cli
in
inc
push
or
pop
add
scas
scas
sahf
push
daa
push
pop
enter
sahf
mov
leave
pop
stc
mov
adc
inc
pushf
js
mov
fadds
mov
jmp
scas
outsl
ss
into
adc
fisttps
mov
sbb
ss
mov
insb
pop
or
fwait
push
aaa
rclb
dec
mov
insb
mov
dec
shrl
in
in
mov
movsl
ja
enter
and
jle
daa
push
insl
push
cld
jb
add
or
mov
jne
dec
scas
bound
add
shrl
test
xor
dec
inc
push
pop
je
xor
inc
jno
inc
add
mov
mov
clc
mov
rorb
sub
test
sarl
stos
and
cmp
test
ffree
out
ficompl
leave
mov
mov
mov
jg
jle
shll
sbb
mov
insl
dec
adc
clc
xchg
mov
cmp
adc
cmp
negb
stc
mov
jb
jg
and
dec
sbb
pushf
das
add
xor
xor
cmc
into
and
rcl
push
lods
jle
pop
and
ljmp
sarb
loopne
xchg
mov
cmp
fcmovnb
mov
xor
inc
nop
or
mov
xchg
jmp
loope
orl
or
xor
int3
mov
xchg
mov
mov
xchg
inc
jge
or
jno
inc
jp
dec
push
lcall
scas
outsl
xor
fstl
pop
fucomi
inc
jle
mov
and
or
ror
test
mov
add
into
or
jmp
mov
lock
xor
push
inc
pop
pop
ror
xchg
and
mov
in
pop
cmp
aaa
push
test
push
shll
mov
test
adc
divb
testb
jbe
adc
shrl
jp
pop
iret
aam
into
push
cld
mov
or
ficoms
lds
cmovae
or
push
dec
xchg
or
or
icebp
push
cmp
scas
adc
call
push
cwtl
dec
inc
rclb
lret
imul
lret
dec
inc
add
xchg
push
mov
fnstcw
jae
xchg
and
cwtl
cmp
push
outsb
or
push
testl
cmpb
mov
hlt
jno
outsl
in
push
mov
jne
out
and
inc
mov
stos
push
shld
jmp
sub
mov
adcb
test
jmp
repnz
mov
fisubl
dec
mov
les
test
xchg
sub
addr16
jnp
dec
sub
out
iret
xlat
cwtl
hlt
sbb
std
stc
add
mov
aam
xor
mov
out
mov
dec
sub
or
push
sub
or
into
dec
out
roll
mov
arpl
or
pop
add
daa
frstor
mov
cmp
push
mov
test
adc
xchg
dec
sbb
inc
in
in
mov
aaa
incl
scas
sahf
fldenv
xor
mov
mov
hlt
add
pop
xchg
fisttps
sbb
xchg
not
ja
cli
jp
cmpsl
mov
lahf
es
movsl
jnp
data16
push
out
jnp
xchg
rcll
cmc
pop
mov
xchg
int3
add
gs
out
pop
dec
mov
xor
mov
mov
lods
test
out
popa
cltd
or
lret
cmp
xchg
sbb
cmp
rcrl
dec
adc
push
adc
lea
xor
or
ror
sbb
test
nop
mov
sub
stos
bound
sbb
pop
rclb
repnz
add
loope
xchg
mov
sti
cmc
push
xor
dec
dec
test
mov
adc
adc
mov
dec
es
adcb
pop
mov
inc
shlb
sbb
fwait
push
and
fcoml
dec
sbb
mov
leave
pop
xchg
lods
test
mov
fsubl
adcl
inc
pop
jo
aam
jmp
adc
pusha
test
cmp
cmp
out
jne
icebp
jmp
mov
pop
or
popa
mov
jle
fcom
insl
and
pop
mov
add
jg
pop
sahf
fiadds
inc
enter
mov
addl
mov
aaa
inc
inc
sbb
mov
ss
out
lret
jge
sbb
fsubl
in
dec
lods
mov
mov
hlt
jns
xchg
xor
add
inc
sbb
mov
pop
pop
mov
outsl
xchg
cmc
jnp
and
mov
mov
hlt
js
mov
sbb
ficoml
test
out
push
fildl
shrb
mov
ljmp
fidivrl
sbb
popa
enter
cmc
xor
inc
inc
mov
test
pop
dec
mov
test
sti
cmpsl
xchg
outsb
pop
sub
popf
dec
out
popa
rorl
aad
mov
or
push
lahf
bound
cmp
out
dec
notb
int3
int
test
push
inc
lea
test
sbb
mov
mov
aas
inc
dec
sub
push
xchg
imull
stos
sbb
lock
in
push
shrb
xchg
add
push
push
fs
mov
push
push
and
mov
xor
out
push
xorl
push
and
xor
mov
loope
push
push
mov
sub
lcall
push
push
pop
vaddss
lcall
fcmovnb
mov
fildll
cltd
pop
cmp
je
inc
dec
mov
rorl
cmp
and
dec
fdivrl
inc
out
insl
scas
aaa
ret
pop
mov
int3
pushf
fidivrl
mov
xchg
fmuls
test
sbbl
pop
pop
mov
push
xchg
mov
mov
mov
mov
sbb
add
mov
xor
jmp
out
enter
in
add
or
daa
out
clc
or
or
jne
add
pop
jl
xor
dec
sbb
stos
mov
cmpsb
xchg
inc
stos
mov
push
cmpsb
push
stos
xchg
pop
sbb
cli
sbb
push
cmp
xor
stos
jecxz
loope
sub
aaa
fidivs
cmp
dec
dec
jg
xor
and
pop
jbe
fadd
daa
add
imul
dec
cmc
je
xor
inc
dec
jno
imul
jge
and
fsubrl
fsubs
jnp
fidivrl
adc
inc
pop
push
xchg
arpl
mov
stc
push
push
xor
outsl
lret
cld
cmpsl
mov
mov
sbb
and
push
shrb
or
mov
xchg
sub
aad
ret
add
cwtl
xchg
stc
sbb
outsb
and
in
mov
pop
test
sub
mov
cmpsb
sbb
jp
imul
aaa
scas
aad
inc
xchg
sarb
ja
sub
scas
xor
dec
mov
pop
mov
ret
jno
pop
and
outsl
and
sub
or
std
mov
test
push
sahf
es
jnp
jecxz
xor
inc
xor
add
xchg
sub
or
jo
dec
add
sub
mov
sub
sub
subb
inc
hlt
xlat
xchg
adc
lahf
addr16
stos
ljmp
shl
pop
adcl
sub
daa
inc
ret
insl
xor
mov
lret
mov
stos
push
pop
and
adc
or
sbb
add
bound
fisttps
sbbb
mov
imul
mov
jae
arpl
sub
and
in
inc
roll
sub
sub
lahf
rcrb
dec
sbb
push
pop
sti
cmp
lret
xchg
repnz
sarl
test
inc
jecxz
jp
jno
imul
push
lea
mov
cmc
movsb
pop
pop
retw
sbb
jl
arpl
and
lahf
sbb
fucomip
rcl
lret
xchg
dec
pop
test
incl
fiadds
adc
pop
cmp
js
aad
push
and
out
shrb
lds
xchg
xor
out
pop
push
js
xchg
sbb
mov
mov
xor
out
jb
jp
push
std
out
xchg
xor
int3
bnd
js
adc
and
mov
mov
add
ror
loopne
rorb
sub
inc
xchg
push
push
or
push
jecxz
xor
push
nop
out
pop
mov
mov
jmp
cwtl
push
sti
gs
adc
repnz
add
cmp
test
cs
or
push
inc
ja
cli
fidivl
jae
or
pop
and
xor
sbb
push
mov
xchg
ljmp
shld
sbb
popf
out
mov
je
cmp
negb
jl
shlb
inc
andb
dec
sbb
or
mov
mov
xor
cmc
jae
movsb
sub
in
inc
stos
lea
push
push
mov
fisttpll
fildll
test
imul
call
jl
fdiv
adc
inc
jns
pop
mov
inc
xor
out
add
xchg
adc
pop
xchg
in
lock
nop
pusha
sbb
add
mov
mov
pop
lcall
imul
aad
into
and
dec
ljmp
jge
sub
jbe
sub
dec
movsl
mov
jp
in
jge
mov
mov
xor
or
or
ja
nop
sub
cmpb
or
fistpll
rolb
mov
inc
dec
in
sub
enter
or
scas
or
add
mov
dec
sti
data16
movsb
insb
inc
sub
push
out
pop
arpl
mov
outsl
lds
pop
adc
push
adc
pop
jmp
daa
jmp
ds
add
mov
jae
lahf
enter
and
mov
push
cltd
aaa
shl
or
mov
mov
mov
aam
mov
int3
cmp
stc
pop
std
lret
mov
sub
fidivs
and
ja
stc
jge
hlt
imul
xchg
pop
aas
test
out
mov
lea
adc
stc
dec
iret
jge
xchg
and
inc
cmpsb
and
cmp
inc
dec
divb
jbe
add
or
mov
push
pop
fxch
stos
add
jl
mov
add
lahf
movsl
repz
sub
inc
mov
pushf
add
fxch
lret
ss
daa
into
cmpsb
dec
xchg
xchg
sub
inc
subb
or
aam
int3
scas
mov
cs
dec
cmpsb
sbb
sbb
leave
ds
or
popf
pop
jl
mov
call
push
fs
jo
pop
push
imul
cmp
bound
lea
lock
push
inc
les
dec
jae
and
jno
sahf
lods
fcoml
xor
mov
xchg
sbb
push
and
pop
push
pop
jmp
mov
and
in
cs
rorl
outsb
sbb
rorl
out
repz
iret
pop
sub
aaa
mov
arpl
lret
jle
dec
xsave
cmc
in
mov
xor
in
xchg
imul
cmpsb
push
dec
mov
sub
repz
es
sbb
jb,pt
hlt
mov
cmp
or
cltd
lret
imul
shll
imul
pop
jno
mov
push
out
insl
mov
mov
adc
sti
jp
icebp
pop
cmp
fwait
loop
mov
jmp
mov
jg
xchg
cmp
sbb
fs
imul
lods
fcomps
cmp
pop
inc
jnp
out
scas
aaa
add
jne
daa
nop
jl
repz
clc
push
cmp
sbb
enter
cmp
test
inc
outsl
cmp
push
mov
aaa
lahf
cwtl
sarb
es
pop
adc
sbb
dec
adcl
popf
add
cmp
fs
pop
sbb
mov
sub
scas
mov
cmp
push
aaa
adc
jecxz
jns
adc
cli
int3
push
lahf
xchg
dec
jne
cmp
mov
adc
je
cld
bound
or
dec
push
mov
std
jl
cwtl
iret
xchg
mov
ror
fists
mov
imul
push
jecxz
mov
dec
xchg
cmc
jecxz
pusha
subl
dec
ds
cmp
jbe
xor
cs
push
aam
sub
mov
imul
pushf
add
icebp
mov
inc
pop
pop
jmp
jl
cli
je
adc
adc
mov
cmc
outsl
scas
fs
or
jne
insl
xor
mov
hlt
insl
or
jae
mov
sub
jmp
and
cmp
adc
pop
lods
out
or
ds
dec
loop
dec
mov
repnz
adc
enter
cmp
and
hlt
loope
movsl
add
add
testb
leave
sub
cmp
je
mov
clc
dec
arpl
je
in
mov
sbb
nop
pushf
je
out
in
and
lods
cmp
rclb
into
xor
call
fcompl
scas
cmc
sub
jl
pop
fs
mov
push
std
lret
outsb
push
scas
ret
adc
xchg
xchg
clc
mov
pusha
xchg
sarb
aad
aad
mov
mov
mov
cltd
mov
jp
inc
pop
mov
movsb
xorb
into
mov
data16
xchg
imul
nop
cmpsb
bswap
pusha
xor
shrl
mov
pushf
pop
adc
mov
xchg
dec
pop
les
lret
leave
movsl
pop
fistpll
rclb
dec
icebp
xor
dec
test
mov
int
mov
pop
ss
adc
outsl
pop
dec
das
popf
pop
pop
cmp
sub
add
mov
push
mov
mov
xchg
hlt
sahf
add
mov
fmuls
mov
ds
adc
jecxz
pop
loope
xchg
fwait
mov
xor
outsl
fidivs
sub
sub
fldenv
and
test
sbb
push
dec
ss
lcall
loop
sub
jecxz
or
adc
adc
sbb
lret
sub
adc
jp
sti
add
sub
into
pop
scas
inc
and
jno
pop
lock
imul
mov
mov
cli
sub
cmp
in
cmp
fdivs
shrw
movsb
jg
inc
pop
inc
cmp
sub
mov
lahf
lahf
pop
jmp
shr
lods
mov
jno
and
pop
inc
lock
in
testb
dec
push
mov
mov
sub
push
push
test
and
out
adc
dec
push
pop
xchg
jmp
sub
push
push
pop
mov
fwait
jae
sub
and
and
lock
push
mov
push
or
hlt
jp
cmp
pop
cmp
cmpl
inc
xor
push
or
rcrb
mov
cmp
ljmp
mov
push
les
push
pop
jns
xchg
cmpsl
jnp
mov
test
sub
in
or
mov
arpl
and
mov
out
xor
mov
xchg
loop
push
jb
shlb
jge
jns
aam
mov
imul
push
data16
or
pop
jns
loop
sbb
pop
cmp
hlt
cmpsb
ret
sahf
fisttpl
lret
cmp
xchg
out
and
sbb
jge
dec
xor
repnz
jae
jl
inc
pop
mov
add
mov
adc
add
mov
add
sub
clc
es
test
jbe
sti
iret
mov
fcoml
rcrl
es
into
mov
mov
shll
or
mov
lods
jp
cmpsb
xchg
out
imul
leave
jmp
aaa
popl
xor
lds
das
adc
popf
xchg
test
xchg
sbb
ret
lods
pushf
jo
pop
pop
icebp
push
and
inc
pop
cmp
popa
dec
scas
sbb
lahf
movsl
xor
mov
pop
cmpsl
ds
mov
or
jp
incl
mov
outsb
mov
mov
mov
sub
sbb
in
icebp
xor
and
lahf
ljmp
push
dec
into
js
dec
call
inc
mov
loopne
out
ja
adc
jl
xor
int
iret
and
fcmovne
clc
shll
shll
ljmp
push
xlat
ret
mov
pop
sub
or
repnz
push
pop
in
filds
mov
jge
xor
xchg
pop
add
rcrb
call
inc
cmpsl
sbb
dec
sbb
sbb
mov
lcall
adc
enter
lea
les
faddl
ljmp
add
mov
ja
push
mov
mulb
mov
cmc
dec
into
cmp
push
test
mov
or
fst
jae
int3
jbe
gs
and
push
fldpi
inc
dec
mov
add
or
es
dec
nop
xor
push
mov
test
adc
dec
sub
mov
int
jl
dec
ss
jo
out
pop
test
lcall
out
mov
ja
pop
xchg
xor
sbb
or
pop
fldenv
push
xor
arpl
fiaddl
inc
shll
sbb
xor
add
fs
outsb
inc
movsb
mov
jg
insl
roll
cltd
mov
in
jns
xor
inc
jle
jecxz
aam
pop
jae
lret
ljmp
xor
js
xchg
pop
cmpsb
stc
adc
lahf
in
adc
lret
rorb
in
in
xchg
and
mov
push
mov
sub
mov
ds
popl
xchg
sub
adc
iret
loopne
and
lods
enter
push
repz
cmp
outsb
mov
sub
dec
jnp
or
push
inc
movsl
or
fwait
fwait
and
testl
jno
mov
sub
adc
pop
lret
lods
cmp
imul
gs
jne
pop
pminsw
xor
add
lods
das
jg
cmp
lahf
mov
and
call
fs
mov
dec
dec
sti
ficomps
push
scas
out
cmp
cmp
cmp
movsb
jl
stc
inc
jp
push
insb
push
mov
jne
aaa
cmc
adc
xchg
pop
dec
lods
sahf
or
sub
stc
mov
loope
fldl
mov
pusha
or
stos
mov
push
xor
movsb
or
and
xor
aad
leave
mov
pop
lods
xlat
pop
nop
mov
sahf
in
cmp
filds
xor
lds
aaa
int3
pop
xchg
push
xchg
in
cmp
in
dec
cmp
test
pusha
sub
sub
pop
xchg
and
pop
scas
pop
push
adc
mov
mov
hlt
call
xor
mov
xchg
pop
xchg
dec
movsl
std
sbb
add
lock
rorl
out
psubq
sub
ljmp
jo
popf
xor
inc
mov
rcll
sti
sbb
mov
jl
sbb
cld
dec
cli
test
add
arpl
faddl
adc
jge
dec
pop
dec
ja
stc
das
pop
ss
xor
mov
mov
fwait
add
pop
stos
fs
out
out
imul
mov
outsl
jnp
xlat
push
dec
fisubrl
sub
iret
mov
jo
mov
xchg
mov
dec
popf
fildll
pop
sbb
cmpsb
in
sbb
jl
sub
xor
rep
sub
fucomip
jle
push
scas
dec
ja
divl
sbb
in
test
jae
pop
add
leave
cmp
jne
adc
cmp
ja
or
shlb
lea
fwait
lret
xor
jmp
add
shll
mov
inc
add
inc
fisttpll
mov
dec
push
out
cmc
clc
push
arpl
mov
ret
sub
test
add
inc
jo
in
mov
xchg
add
mov
cld
vmovss
adc
mov
xchg
testb
inc
call
xchg
pop
enter
xchg
sbb
adc
cltd
push
mov
hlt
stos
push
push
pop
into
cmpsb
sbb
fdivl
mov
stc
nop
xor
xchg
pusha
jg
jno
add
pop
ljmp
push
push
decb
push
cmovl
dec
test
dec
cmpsl
xor
mov
lock
fsts
arpl
and
arpl
inc
or
neg
sbb
loope
shrb
pushf
push
sarl
repz
fwait
mov
lods
jecxz
fmuls
cvtps2pd
icebp
loop
les
jle
xchg
pop
xchg
mov
or
push
cmp
jmp
enter
add
lods
jmp
mov
insl
pushf
popa
add
jl
stos
jl
push
scas
pop
punpckhwd
pop
sbb
xchg
rcl
lods
sbb
mov
sbb
sbb
lcall
shll
jne
pop
cltd
sbb
js
pop
les
les
mov
pusha
mov
sub
test
mov
xchg
dec
int
movsl
clc
enter
fisubrl
xchg
cmp
sbb
sbb
and
add
dec
inc
adc
pop
popf
add
shlb
shll
sbb
jo
sub
and
xchg
xchg
mov
push
cld
notb
adc
pushf
ror
sbb
mov
mov
insl
std
bswap
aaa
cli
loope
fidivs
scas
mov
xchg
cmp
jae
imul
dec
stc
jno
jbe
scas
divl
ljmp
enter
ret
mov
out
sbb
mov
cmp
pusha
gs
orb
mov
rcll
daa
movsl
fcomi
js
sbb
mov
or
push
dec
pushf
shl
add
arpl
push
test
cltd
mov
xor
aad
dec
mov
test
xchg
das
es
ss
inc
mov
nop
jecxz
int
mov
sbb
xor
and
ret
pop
xchg
lods
mov
pop
shrb
dec
jne
inc
inc
lods
ret
inc
cmovnp
pop
sahf
insb
pop
sarl
xor
xlat
inc
xor
mov
ja
decb
or
sub
add
sbb
sbb
mov
loop
cmp
push
adc
inc
xor
clc
dec
dec
mov
push
cli
mov
fadds
jle
cmp
pop
mov
popa
cmpb
into
sbb
scas
cmp
cmp
xchg
jns
imul
push
imul
ja
push
loope
stos
mov
in
scas
fidivs
push
add
cmpsb
ljmp
lret
sbb
pop
f2xm1
fldenv
push
dec
pop
setg
inc
or
clc
adc
xchg
popf
and
inc
test
sbb
les
leave
xor
jnp
aam
xchg
jecxz
mov
cld
pop
inc
mov
shll
cmp
cmp
mov
xchg
je
adc
test
cli
xchg
xlat
adc
xchg
lcall
mov
in
nop
mov
sti
dec
mov
daa
or
pop
out
sar
push
or
subl
inc
jne
jb
pop
lcall
popa
hlt
push
bound
or
imul
lret
loope
cmp
xchg
cmp
sti
cmp
mov
fadds
or
mov
adc
and
pop
pop
lret
stos
xlat
inc
pushf
jb
xchg
sub
nop
dec
dec
test
fidivrs
jg
cmp
push
push
daa
or
xchg
sbb
mov
cmp
out
lret
ret
rcrl
push
in
sbb
adc
pop
mov
mov
xchg
xchg
xchg
idiv
mov
and
pop
out
loopne
sarl
mov
loop
jns
cmp
push
mov
cwtl
mov
int3
ror
sbb
insb
jae
int
mov
mov
jno
mov
inc
dec
in
js
test
jp
jno
fldlg2
lahf
test
pop
out
or
add
movsb
fcompl
ja
iret
aam
add
scas
jae
sub
mov
testb
push
ret
mov
jne
xchg
dec
fwait
scas
mov
sbb
cld
stc
aam
mov
aad
add
sahf
xor
and
mov
inc
mov
xlat
adc
mov
addr16
roll
test
mov
inc
xor
lock
cs
f2xm1
outsb
inc
mov
lods
jge
sbb
jmp
jo
pop
in
add
mov
mov
subb
inc
mov
cmp
es
lahf
add
inc
inc
jb
cmp
push
aam
xchg
incl
int
mov
jge
test
iret
xchg
negl
mov
and
jns
xor
insl
cltd
mov
cmp
push
xor
cmp
add
pop
cmp
in
or
cmpsb
ror
jb
nop
xchg
stos
int
jg
test
add
mov
mov
jecxz
mov
enter
mov
xchg
stc
sbb
stos
in
enter
mov
outsl
imul
outsb
jnp
pop
pop
cmpsl
jge
clc
int
pop
into
inc
repnz
lahf
cmpsb
cmp
dec
push
mov
adc
ljmp
xor
cmp
mov
mov
and
cmc
ret
in
adc
lods
aaa
sub
js
mov
pop
nop
cmpsb
xlat
mov
sarb
add
fnstcw
jl
mov
pop
cmp
ja
andb
cmp
cmp
pop
shrb
pop
lock
cmpsl
iret
divb
aam
stos
dec
out
push
dec
faddl
ds
or
jl
and
mov
shll
ficomps
or
dec
shrb
daa
fprem
adc
jmp
testb
lahf
or
out
or
insb
sbb
ljmp
push
xchg
sub
ret
sub
xor
lea
adc
xchg
sbb
push
lret
sbb
mov
mov
lods
xor
inc
inc
xchg
stos
adc
inc
sub
inc
mov
dec
cmp
cmp
dec
jmp
adc
mov
or
push
xchg
pop
dec
push
test
adc
or
scas
imul
adc
mov
sub
xor
inc
stc
call
inc
jns
mov
loopne
jg
cli
push
aam
adc
pop
push
call
stos
mov
adc
mov
jne
xor
mov
in
cmp
jbe
inc
sub
cmc
mov
pop
lcall
sub
js
mov
outsb
xchg
push
int3
adc
mov
inc
pop
mov
xor
out
pop
push
mov
lret
or
xchg
lret
cmp
mov
incb
mov
mov
divb
dec
hlt
inc
push
movsl
jae
xchg
addr16
insb
int
push
or
int
je
xchg
xchg
add
mov
jmp
jl
mov
xor
sub
ljmp
or
push
scas
jmp
stc
ret
mov
fcmovbe
add
push
sub
leave
mov
out
push
jecxz
test
movsb
daa
mov
xchg
sbb
xor
rorl
or
lds
sub
push
jnp
push
mov
incb
xor
or
push
pop
sub
jb
pop
jne
inc
pop
mov
out
xchg
jmp
ss
aam
in
and
pop
xchg
movsb
divl
or
fcomip
adc
jae
cs
je
mov
cmpsb
lds
push
ret
iret
cmp
icebp
lret
mov
mov
repz
sbb
andl
ret
dec
sbb
into
cmpsb
jns
stc
mov
int
mov
adc
push
inc
arpl
inc
inc
push
or
and
jne
scas
pop
xlat
outsl
adc
push
or
sbb
popf
pop
push
jo
repz
fcmovb
add
mov
xor
inc
cmpsb
movsl
test
iret
popa
fildll
mov
cmp
xor
dec
fldl2t
and
imul
adc
lcall
test
sbb
stc
inc
jmp
sbb
pop
xchg
loopne
mov
das
sub
pop
addr16
insb
jne
jae
sahf
inc
pop
mov
cld
push
inc
loope
in
daa
mov
mov
sbb
push
movsb
js
add
out
int3
mov
add
pop
mov
cmp
or
ror
push
mov
sbb
mov
add
call
ficoml
mov
adc
jne
imul
jl
and
cmp
dec
mov
insl
es
cmp
adc
bnd
jmp
mov
pop
ljmp
adc
jecxz
cltd
inc
leave
js
jl
xchg
cltd
cli
mov
and
cli
stos
cmp
pop
xchg
mov
inc
fwait
pop
sti
stos
and
add
push
push
jp
ror
aas
pop
mov
mov
or
loop
cli
pop
iret
push
mov
xchg
lret
and
sbb
add
inc
push
or
xor
add
push
stos
decl
in
mov
pop
psubsw
test
fcompl
mov
fiaddl
imul
hlt
cld
aas
dec
sub
pop
push
cmp
rcrb
dec
sub
ficoms
push
das
sbb
push
das
leave
lods
dec
leave
cmp
int
jno
add
mov
mov
gs
jns
push
out
mov
xor
xchg
shrb
add
mov
cltd
xor
bnd
sub
jecxz
out
imul
popa
xor
jge
out
jecxz
cmpsb
push
cltd
outsb
js
push
mov
cmp
mov
xor
std
or
add
jecxz
aas
scas
sahf
jp
push
test
nop
aad
outsl
aaa
mov
xchg
ret
pusha
jecxz
out
dec
xchg
mov
scas
inc
mov
pop
out
dec
outsl
inc
call
or
or
sub
mov
mov
stos
xchg
imul
adc
es
shlb
push
cli
loop
shll
not
jns
xor
mov
mov
dec
xlat
pop
stos
loop
push
je
or
pop
adc
test
lock
dec
pop
int
cmpsb
jbe
sbb
enter
in
sub
popa
arpl
jecxz
lods
test
and
pop
push
pop
push
pop
add
fstps
jmp
inc
mov
xchg
sbb
cmpsb
mov
aas
out
xchg
pop
jo
into
fcomps
xchg
jbe
xor
divl
test
insb
lret
lahf
fmull
int3
lods
jl
pop
and
in
or
shll
cmp
and
mov
leave
sbb
pop
daa
inc
add
hlt
sahf
jns
jns
icebp
lcall
mov
xchg
je
jo
stc
xchg
ret
ret
mov
scas
jle
or
dec
in
jbe
stos
add
pop
fwait
mov
or
jp
xor
fsub
les
popa
addr16
lret
mov
mov
cmpsb
pop
push
fs
lds
pop
stc
push
bound
xchg
pop
ljmp
out
sahf
jmp
pop
aam
mov
fstpt
sub
xor
jnp
sbb
jno
xchg
je
mov
fldl
fs
stos
sahf
sub
sahf
inc
sti
mov
icebp
clc
aaa
icebp
dec
cmc
sbb
jo
inc
lods
jne
subl
pop
in
dec
test
fldenv
sbb
sti
repz
ss
into
into
lret
jae
repz
cltd
jp
inc
jge
fimuls
cmp
push
xchg
cmp
out
push
in
std
xor
push
lods
xchg
dec
add
xor
into
adc
es
mov
and
rclb
jecxz
in
pop
loope
int3
jle
mov
movsb
cmp
mov
sub
filds
dec
inc
dec
sbbb
test
sbb
pop
rcll
push
xchg
scas
sti
leave
fdivl
cmpsb
inc
cmc
xchg
xchg
imul
pop
out
gs
pop
mov
in
cmp
add
movsb
ljmp
sets
push
mov
pop
pop
adc
and
xor
push
mov
imul
mov
and
in
adcb
mov
or
repnz
dec
jo
xchg
sti
sub
inc
pusha
pop
in
sub
lods
mov
xor
add
pop
adc
mov
mov
cld
out
and
push
test
imul
adc
das
jle
je
roll
cmp
std
push
clc
sarl
xchg
xchg
jg
gs
xlat
hlt
outsl
loopne
bswap
mov
sub
pop
aas
cmp
mov
in
adc
add
out
scas
ds
add
das
je
lea
sahf
lret
dec
cltd
jmp
sub
inc
cmpsb
xor
dec
shll
fimuls
xlat
pavgw
fwait
into
pop
rcr
dec
inc
jle
aaa
pushf
lret
ror
dec
or
mov
aad
aam
jmp
out
push
jno
sbb
in
pop
int3
fsubl
mov
ret
lods
mov
outsl
popl
xchg
jo
je
mov
enter
jo
sbb
jmp
cmp
and
xor
push
out
mov
xor
push
xchg
jmp
sbb
cld
push
dec
addl
das
repz
or
les
sarb
mov
dec
inc
call
mov
in
xchg
imul
or
sub
dec
out
push
inc
xchg
test
pop
inc
push
test
xchg
minps
mov
xchg
js
bound
xchg
xor
mov
xor
push
loope
xchg
sbb
das
mov
sub
add
repz
push
aad
rcrl
cmp
lahf
push
push
or
pop
inc
mov
sub
push
pop
push
sti
gs
fs
es
rclb
ljmp
cmp
sahf
inc
sbb
lahf
outsl
or
negl
or
in
xchg
sahf
test
call
iret
xor
dec
nopl
pop
jno
dec
aad
add
leave
cmp
jg
insl
dec
mov
push
repnz
outsb
mov
sahf
loope
je
lds
or
sub
fisubrs
in
shl
mov
xchg
push
incb
adc
inc
sbb
pop
fwait
push
cmp
or
pop
mov
hlt
push
imul
fucom
fbld
orb
cmpb
xor
ljmp
movsl
fwait
xchg
mov
gs
xchg
mov
cwtl
push
mov
jg
stos
adc
pop
or
out
data16
ret
pop
sub
dec
jmp
imul
jnp
loopne
cmp
cmp
or
cmp
fs
mov
pop
mov
inc
rolb
pushl
int3
in
fldl
cmp
adcb
sbb
lods
cld
lock
cli
xchg
or
scas
aam
cmc
sub
mov
fldl
sub
andl
mov
mov
lods
popl
xlat
jnp
les
clc
add
push
cs
mov
insl
pushl
mov
sahf
sub
mov
faddl
stc
stos
xchg
inc
mov
test
push
mov
or
xor
mov
daa
pop
dec
adc
fdivl
xchg
inc
sbb
dec
mov
loope
cmp
push
xor
frstor
xchg
pop
sub
or
mov
test
jne
dec
loopne
into
jns
mov
outsb
mov
mov
cmp
pop
sub
add
jne,pt
cmc
fwait
add
jbe
sbb
mov
daa
js
popf
jge
jno
mov
movsl
or
or
jne
fdivrl
sti
jmp
loop
jl
or
in
out
ja
into
es
outsb
cli
cmp
rcll
stos
cmp
popa
lds
ret
push
filds
push
adc
jecxz
dec
or
push
mov
pop
shll
and
andb
fadd
nop
adc
movsl
stos
xchg
and
in
mov
dec
test
push
inc
xor
mov
xchg
pushf
mov
inc
add
sub
adc
cld
mov
loopne
xchg
jns
lea
cmp
stos
mov
jmp
cmpb
or
scas
out
inc
minps
fcomps
jns
dec
jne
inc
adc
lock
insl
insb
shrb
adc
outsl
sub
mov
punpckhwd
inc
and
sahf
insl
jb
mov
jl
mov
xlat
mov
cmp
mov
and
mov
jp
add
daa
mov
or
cwtl
or
cmp
int
test
dec
inc
jmp
xor
lahf
push
aad
xchg
pop
xor
add
cli
fsubp
iret
in
mov
xchg
push
mov
mov
sbb
or
sbb
mov
mov
sub
push
xchg
mov
inc
or
mov
lea
fdivp
mov
stos
pop
adc
sub
lret
repz
jnp
xor
aas
into
sub
jmp
scas
xor
shl
dec
xor
xchg
ret
adc
or
or
add
jb
daa
cli
mov
jnp
movsb
xor
pop
leave
fiaddl
cltd
adc
cmp
gs
add
cmp
sbb
movsl
adc
sbb
andl
xor
cmp
inc
inc
mov
mov
mov
xlat
mov
cld
popf
jns
add
int
out
cmp
fdivl
jne
mov
adc
mov
pop
dec
shlb
test
ret
fs
xchg
cmc
mov
adc
scas
sub
adc
inc
lret
mov
xor
inc
sbb
jge
fwait
arpl
mov
aas
repz
mov
push
ja
dec
rcl
js
js
fmull
enter
daa
or
movsb
out
jnp
cmp
insb
xchg
pop
cmp
into
fwait
pop
into
sub
dec
mov
dec
out
mov
jae
and
mov
adc
and
movsb
xchg
pop
test
std
in
cmp
ljmp
mov
xchg
les
or
pop
ffreep
jle
in
loopne
dec
insl
add
repnz
mov
lea
daa
test
lret
xor
mov
lock
jne
lea
out
mov
adcl
dec
jo
arpl
loop
push
jg
sahf
jmp
adc
fs
mov
jge
pop
ds
int
pushl
add
cmpsl
cmp
in
xor
add
out
sahf
fucomp
xor
add
sbb
dec
push
popf
jp
daa
dec
call
es
inc
jecxz
out
push
ficompl
pop
dec
pop
movb
cwtl
ret
gs
sbb
push
ds
scas
jl
xor
xchg
or
jo
adc
mov
jb
mov
gs
add
cs
push
cmp
sbb
pop
xor
push
ljmp
iret
xchg
sub
subps
sub
enter
cmp
aad
shlb
popa
enter
mov
scas
inc
xchg
pop
sbb
xor
jmp
data16
push
int
clc
xchg
sahf
xlat
sti
out
dec
lahf
int
rcrl
and
and
cmp
ljmp
mov
mov
iret
xor
rcl
sub
jge
xchg
lods
mov
ljmp
movsb
repnz
dec
popa
add
dec
sbb
aam
mov
or
or
push
push
dec
sbb
cwtl
insb
xchg
adc
sub
sti
jnp
adc
sbb
enter
adc
rorl
jmp
push
mov
push
je
sahf
pop
add
fsub
push
xor
jmp
addr16
test
push
push
lret
push
jg
and
outsl
push
out
mov
je
push
mov
repz
mov
loop
fcompl
inc
outsb
idivb
fldl
pop
loopne
mov
jbe
rcrl
rol
daa
dec
mov
cmpl
and
mov
jl
mov
aam
and
jo
jle
xor
rcl
sbb
mov
mov
std
sahf
addr16
push
adc
add
mov
mov
rcrb
push
push
push
clc
xor
loop
je
ja
aad
ss
adc
lods
jns
push
push
pop
push
push
into
rcrb
jnp
fcmovnb
inc
and
jbe
fwait
sahf
cmp
movsl
cltd
dec
fsubrl
add
js
subb
push
mov
cmc
lods
shll
in
lahf
and
rorb
lods
xchg
aad
xor
int
test
lret
cmc
or
and
dec
jmp
sub
inc
cmp
shr
jns
lock
pushf
loop
xchg
sarl
and
bound
pop
xchg
push
inc
clc
lahf
push
dec
mov
in
cmp
jecxz
jecxz
add
mov
outsb
and
es
mov
rcr
mov
xor
jo
mov
adc
in
push
push
jle
jg
sbb
test
mov
lods
cmp
into
ret
xor
mov
cmpsl
les
cmpsb
cmp
insb
sub
pop
jg,pn
fcmovnbe
mov
mov
inc
stos
push
insb
pop
jle
jg
jge
push
jmp
lea
adc
insb
insb
pop
cli
aad
sar
jp
into
popl
jp
inc
repnz
sub
xchg
adcb
leave
test
xlat
imull
mov
cmp
insb
je
insl
mov
imul
adcl
add
sbb
sub
arpl
mov
add
jmp
daa
mov
sub
xchg
jle
adc
jp
jge
mov
enter
xchg
lret
aad
out
xor
pop
dec
xchg
decb
int
aas
and
jnp
ffree
jmp
inc
push
dec
ss
xor
xor
ja
xchg
adc
cwtl
fsubrp
fsts
dec
daa
daa
incl
mov
ja
jecxz
pslld
shll
sbb
xor
pop
test
or
adc
push
fimull
mov
mull
pop
inc
push
jnp
icebp
stc
dec
insl
xor
ja
inc
sahf
push
push
repz
add
inc
add
xor
movsl
jge
popa
lcall
cmp
inc
mov
jne
aas
scas
push
mov
ljmp
cmp
insb
mov
mov
cli
loopne
movsb
loopne
push
inc
ret
or
mov
lock
repz
lds
loope
mov
sub
imul
cld
pop
dec
fidivs
je
std
loopne
fwait
cmpsb
and
test
mov
push
mov
dec
sub
adc
jmp
or
fistpll
mov
xor
fs
sbb
cmp
xor
cs
orl
dec
lret
iret
clc
das
add
pop
push
or
xchg
inc
sub
aad
out
pushf
js
je
std
dec
sbb
hlt
inc
jle
sbb
inc
jg
mov
mov
ja
inc
divl
adc
lds
sbb
mov
popf
cmp
lret
xchg
jb
leave
pop
idivl
in
mov
xor
sbb
ds
mov
push
mov
es
pop
dec
or
pop
sbb
hlt
pop
out
fsts
fisttpll
inc
cwtl
adc
pusha
and
scas
mov
cmc
mov
mov
push
mov
cmp
sbb
cmp
pop
fstpt
sub
jo
adc
cmc
inc
push
cli
gs
jle
pop
cmp
xchg
shrb
sub
stos
shrb
repz
popf
insl
pop
aas
faddl
mov
je
ret
call
mov
stc
popa
dec
nop
fs
dec
sbb
sub
pop
ljmp
hlt
xchg
loop
push
or
pop
std
jo
jnp
inc
jno
add
js
mov
push
popa
mov
lahf
out
sarl
xchg
xchg
mov
adc
pop
xor
je
ret
dec
and
and
or
movsl
pop
adc
pop
cmp
icebp
mov
loopne
jl
sahf
mov
lock
fs
movsl
pushf
cmp
aas
test
fwait
test
add
mov
outsb
ja
and
jp
sub
xor
adc
out
pop
adc
xchg
loope
and
jmp
imul
in
outsl
jg
and
push
cli
sbb
lahf
mov
fdivrs
mov
cmp
scas
repnz
mov
scas
sbb
sub
enter
sbb
jecxz
test
mov
sbb
addb
cmp
or
lahf
inc
insl
pop
andl
out
jne
sarl
subl
lock
jle
sbb
xchg
mov
sub
push
std
or
jecxz
cmc
das
xchg
bound
sahf
std
pushf
xchg
loope
mov
lret
sbb
and
mov
mov
jl
rcrb
loopne
in
shrl
mov
enter
movsb
dec
fucomi
aad
xor
adc
pop
and
sbb
dec
and
aam
movb
dec
test
lods
push
js
lds
je
jmp
outsl
dec
mov
push
push
aad
cmp
pop
ss
cmp
sti
or
sub
xchg
push
xchg
out
inc
xor
cwtl
rclb
sub
cltd
insb
mov
xchg
lret
test
mov
test
scas
xor
js
mov
mov
jecxz
das
add
mov
lds
or
aam
imul
and
cmpsb
addr16
aad
cs
fcompl
int3
das
or
jns
mov
xchg
fs
rcll
push
stc
mov
push
popa
mov
sub
lcall
fwait
mov
fidivs
pusha
and
push
test
pusha
push
push
cs
popf
lret
psrad
mull
leave
es
dec
add
xchg
rol
push
jge
cmp
cltd
mov
xchg
pushf
ret
sar
push
sahf
cmp
outsb
and
stos
add
fwait
js
xchg
inc
ljmp
cmpl
iret
out
ret
out
aas
pop
addb
mov
pop
jne
push
pop
orb
or
cmp
inc
je
repnz
xchg
lea
sub
cmp
mov
dec
aaa
lock
ret
mov
xchg
in
sbb
mov
xor
lret
xor
jmp
js
lods
push
mov
sub
xor
mov
pop
inc
test
roll
call
push
call
dec
ja
in
movsl
and
mov
iret
jnp
fisttpll
and
xchg
ljmp
std
mov
cmovns
adc
jge
test
cmp
lds
mov
ss
mov
sahf
ret
out
aam
dec
mov
fwait
test
pushf
jecxz
dec
xchg
outsb
shl
xchg
jne
push
les
mov
loope
loopne
hlt
inc
jnp
divl
dec
into
add
out
hlt
mov
pushf
adc
std
sti
xchg
aam
inc
push
sub
fistl
ljmp
dec
pop
mov
test
add
sbb
sub
jge
test
xor
insl
push
les
pop
jp
rclb
in
cmp
subb
stos
gs
scas
mov
int3
add
sti
sahf
stos
mov
pop
jg
ss
loop
or
xchg
lcall
push
daa
lock
mov
out
popa
push
aas
lahf
adc
push
fsubrl
jnp
xchg
dec
cmp
arpl
sbb
out
lret
test
jnp
out
mov
dec
idiv
test
adc
sub
xchg
and
pop
in
loope
es
jl
inc
cmpsb
icebp
mov
addb
pop
jmp
mov
xchg
mov
int
mov
mov
add
cli
sub
mov
sbb
sbb
jge
pop
xor
cmpsl
repz
insl
bound
ja
jno
adc
pop
aad
ret
xchg
push
fsubs
fisubrl
out
mov
push
pop
jae
push
sbbl
xor
adc
inc
mov
sbb
sbb
into
stc
jle
int
mov
jnp
adc
add
xchg
push
jnp
es
add
orb
push
pop
rcll
sbb
aad
lds
jmp
cmp
mov
js
sub
cmpsb
ret
iret
push
sub
push
cmp
sbb
fcmovne
fcoml
insl
mov
loopne
std
xchg
sub
mov
mov
mov
cltd
nop
mov
int
out
and
xchg
fistps
or
lret
sbb
imul
pusha
or
jae
sub
mov
xchg
push
cmp
repz
ret
and
and
add
xor
mov
les
repz
es
push
xchg
fsubrp
mov
insb
scas
or
arpl
or
scas
jns
pushf
into
pop
sbb
jne
shlb
scas
mov
mov
push
imul
push
fdiv
adc
pop
lcall
into
add
mov
push
rcll
add
data16
lock
fs
jg
add
xorl
dec
jge
out
xor
pop
cmp
aas
rclb
inc
fmul
aaa
loop
pop
mov
mov
les
iret
sbb
sub
out
jg
mov
inc
cmpsl
outsl
in
fwait
jg
das
xor
mov
mov
pop
jmp
shlb
dec
pop
sti
out
adc
aas
sub
popf
inc
cld
enter
push
popf
adc
outsb
ljmp
xor
ret
mov
xor
jl
mov
in
testb
bt
pop
movsb
push
sub
cmp
mov
fmuls
jne
fbld
adc
jle
or
bnd
xchg
dec
mov
inc
lea
out
outsb
ret
gs
mov
push
push
mov
cmp
inc
jnp
in
lock
cwtl
inc
jmp
je
adc
mov
sbb
mov
sbb
xchg
pop
cmpsb
aam
xor
lock
inc
sbb
jo
addl
cwtl
push
sub
sbb
push
je
lods
mov
jle
cld
icebp
or
sbb
lahf
aam
repz
push
xor
cmc
ret
shrb
or
int3
outsl
scas
adc
push
ds
mov
dec
pop
xchg
lods
xlat
arpl
cltd
je
imul
inc
dec
lods
and
sbb
dec
cmp
cmp
and
int
xchg
push
iret
inc
pop
xlat
fdiv
ss
mov
push
xchg
sbb
xchg
out
and
scas
mov
loopne
mov
mov
sub
dec
pushf
adc
mov
outsb
lods
into
pop
loop
testl
jns
sbb
xor
inc
in
pop
jp
sbb
mov
mov
repz
cmpb
in
dec
test
mov
push
fldt
mov
pop
jg
add
fldl
sbb
jns
mov
cmp
fstl
scas
mov
out
mov
xor
cmp
xorl
test
xor
jg
mov
movsl
push
movsl
or
xor
lds
stc
mov
mov
aam
lods
jne
gs
loop
pop
mov
adc
idivb
loop
jne
dec
mov
andb
dec
mov
or
xchg
out
sub
bnd
push
xor
xchg
push
movsl
mov
sahf
jge
cwtl
mov
inc
xor
lret
cld
ds
push
mov
cltd
cmp
xor
leave
mov
dec
aas
sub
pop
and
or
popf
test
adc
ljmp
dec
lea
jecxz
jns
xor
push
fbstp
add
mov
sub
jmp
outsb
mov
sub
xor
fmulp
rorb
test
imul
jns
in
sbb
push
das
sub
sbb
jo
pop
and
cmc
or
in
adcl
and
mov
lods
or
jb
in
cmp
ret
lods
pop
add
ror
in
jo
arpl
sarb
lods
xchg
sub
sbb
rorb
or
sub
sub
jbe
xor
sub
sarb
push
xchg
mov
or
pop
mov
stos
cli
inc
rorb
adc
inc
push
mov
add
and
sub
xchg
cwtl
xchg
adc
les
enter
shl
jle
daa
xor
fistpl
pop
das
cmpsb
mov
mov
cmpb
pop
cmp
pushf
jp
lods
scas
or
js
ret
pop
cs
or
jbe
popf
fmul
jns
sahf
mov
push
js
or
sbb
cmpsl
adcb
sti
xor
in
jnp
xchg
cwtl
xor
lods
lahf
mov
enter
repz
mov
pop
jo
add
sub
mov
test
loope
jae
ja
pop
inc
sub
mov
add
cld
jns
daa
ljmp
inc
cmp
out
xchg
mov
outsb
cmp
sub
mov
addr16
sub
movsb
ljmp
mov
repz
push
in
mov
jns
dec
jg
jae
cwtl
jno
outsl
mov
inc
pop
lret
sub
jo
sbb
jo
mov
in
stos
dec
mov
lahf
test
roll
mov
or
rcll
movsl
sbb
sbbb
add
dec
pop
cmpsl
push
aas
and
inc
stos
jne
cld
inc
leave
push
addb
dec
xchg
mov
and
dec
stos
ds
pop
out
rolb
push
adc
xlat
adc
imul
lods
movsb
mov
dec
xchg
iret
dec
mov
ja
adc
popf
cld
mov
in
push
xchg
and
cmpsl
push
adc
or
cmp
outsl
repnz
and
fwait
cmp
mov
stos
je
sub
push
shlb
lods
pop
push
add
xlat
and
pop
testb
sub
lea
fnstcw
scas
inc
dec
out
movsb
push
push
aas
out
and
jnp
call
dec
push
insb
inc
cmp
inc
or
aaa
jecxz
loopne
and
into
out
sbb
fiadds
jnp
pop
mov
lret
rolb
jo
insl
push
movsb
push
push
or
jle
sbbl
mov
mov
ljmp
ret
mov
cmpsb
lods
cmpl
cmc
lahf
jb
test
out
aas
cmp
jl
lcall
pop
popf
inc
repnz
aaa
sbb
sbb
sahf
stc
pushl
orl
addr16
mov
stos
pusha
lcall
add
pop
and
lahf
sbb
xchg
xchg
out
push
jns
jge
sub
iret
mov
ficompl
and
cmp
xchg
hlt
xchg
sub
stos
lds
lcall
std
insl
lret
mov
call
enter
pop
push
and
xchg
movsb
aaa
cltd
sub
movsb
jle
add
push
dec
sbb
lock
add
in
or
jbe
xor
imul
push
jns
fwait
pop
cmp
faddl
or
cltd
rolb
push
call
cmp
pop
push
mov
pop
sbb
xchg
out
add
mov
and
mov
fldcw
jo
loop
clc
sub
test
push
dec
repz
xchg
mov
adc
sahf
sub
out
adc
ret
inc
pop
mov
mov
fs
scas
jae
std
mov
adc
push
popf
testl
ljmp
ficoms
cmpsb
idivb
push
ljmp
and
or
rorl
das
stos
jg
xchg
test
xchg
adc
int3
mov
push
mov
mov
leave
stc
cmp
test
mov
add
out
mov
sub
out
adc
dec
and
sbb
fnsave
sbb
adc
sahf
dec
loope
adc
testb
cmp
dec
lds
addb
add
push
xor
cltd
add
stos
ficompl
mov
outsb
sbb
inc
push
mov
mov
mov
mov
dec
inc
jo
out
ret
leave
les
pop
sub
stos
mov
dec
adcl
shrb
xchg
cld
mov
mov
dec
out
lar
adc
lret
push
fnstsw
xchg
loope
sub
jecxz
xlat
mov
leave
or
sbb
cmp
push
push
adc
in
pop
leave
cwtl
adc
pop
cmp
subb
jle
imul
mov
inc
aas
mov
sub
pop
pushf
xchg
fiaddl
xchg
add
jp
or
mov
sbb
and
xor
cltd
sub
cmpsb
outsb
in
nop
mov
lcall
dec
dec
ss
lahf
push
jb
loopne
ljmp
cld
dec
mov
mov
movsb
or
jle
sti
pushf
dec
adc
aaa
pop
pop
xchg
es
mov
shlb
out
push
dec
lea
loope
cmp
sbb
mov
or
mov
push
int3
mov
mov
subl
xchg
icebp
loopne
jo
gs
mov
fldenv
hlt
add
aad
xchg
xor
xor
lea
enter
mov
push
aas
icebp
das
mov
imul
push
xchg
jg
jnp
and
mov
jb
popf
cli
lcall
and
cltd
mov
test
pmulhuw
insb
add
cli
pop
into
sbb
or
jnp
xor
mov
jmp
inc
pop
mov
cmp
test
lret
adc
jne
cmp
push
sahf
icebp
in
fmul
xchg
sub
mov
adc
loopne
jbe
xchg
repz
movsl
imul
test
and
push
test
decl
jbe
sub
sub
xor
push
add
cli
sti
push
testb
pusha
sbb
stos
mov
in
push
push
aam
xor
mov
insl
cmpsb
out
cwtl
leave
sub
xchg
testb
out
fcompl
inc
fs
mov
sub
adc
ret
add
out
inc
lea
mov
push
push
push
push
ret
rcll
fsubrs
sub
jb
gs
push
or
adc
pop
in
cli
mov
das
lods
xchg
mov
aad
mov
push
adc
roll
push
enter
push
movsl
mov
call
jns
in
mov
in
bound
sbbb
cmc
jle
pop
loope
pop
xchg
jg
in
xchg
jne
cmpsl
sub
dec
test
std
jne,pn
mov
xchg
push
lock
cli
push
subb
pop
es
scas
testl
mov
daa
and
cmp
cli
cld
aam
mov
xchg
mov
lcall
push
cmp
xchg
push
out
shll
ret
scas
and
ss
fwait
mov
mov
cmpsb
push
cwtl
cmpsb
cwtl
aas
fdivrs
movsb
mov
add
cmp
es
pop
insl
pop
imul
xchg
add
add
or
je
nop
push
sbbb
push
xchg
cmp
ja
leave
hlt
lock
pop
aad
aad
jge
into
stos
pushf
xchg
wrmsr
mov
js
into
mov
pop
aad
mov
insb
inc
hlt
xchg
jg
or
call
jb
shlb
scas
push
cmp
scas
out
dec
dec
inc
push
mov
jns
std
mov
insb
fs
mov
xlat
cmpsb
mov
sub
das
mov
add
fiaddl
popf
daa
add
xchg
out
and
fnstsw
imul
cmpsb
pop
inc
xchg
bound
mov
data16
push
jae
rep
icebp
xchg
jecxz
cld
addl
cmpsl
push
pop
test
inc
push
mov
jnp
fs
xchg
jo
cmp
and
xor
mov
or
adc
inc
push
ljmp
jno
mov
inc
test
loope
pop
repnz
mov
aaa
lock
pop
out
cmpsl
cmc
add
pop
nop
or
pop
mov
pushf
inc
sahf
cmp
xor
scas
and
push
jmp
es
cld
inc
pop
jg
push
into
pop
shr
insb
mov
mov
mov
loop
pop
movsb
and
imul
iret
aad
shl
sub
cmp
xchg
in
dec
and
push
mov
mov
and
xchg
xor
mov
jo
pop
es
push
pop
xor
xchg
popf
les
shl
xchg
add
sbbl
mov
push
or
xchg
lock
add
or
out
cmp
mov
clc
scas
push
rcpps
and
pop
sarb
inc
xchg
sti
mov
mov
inc
add
push
aad
and
call
fwait
mov
hlt
imul
jmp
hlt
test
inc
inc
pop
xor
cmc
lods
pop
fldl
sbb
pop
push
ljmp
cltd
mov
mov
or
js
popf
pushf
add
pop
mov
ss
jl
add
lds
repz
or
insb
jmp
je
xchg
sbbl
xor
xor
xchg
cli
subb
xor
lret
outsl
cltd
rol
popa
cmp
push
push
clc
push
and
push
test
sbb
test
scas
es
je
mov
push
arpl
xchg
outsb
into
rcrl
data16
fdivs
movsb
enter
xchg
push
adc
loopne
out
cld
cmp
out
cli
outsb
pop
fnstcw
ljmp
cli
jne
xchg
aam
loope
jne
sbb
cli
cltd
sbb
sbbb
push
sub
and
inc
or
jmp
push
sbb
daa
into
push
rclb
orb
pop
pop
cmpsb
clc
push
mov
jns
fwait
ja
adc
add
and
es
push
mov
sub
in
shrl
xorb
push
dec
or
aam
adc
jl
adc
push
mov
mov
je
push
and
adc
in
xor
pop
mov
mov
jae
xchg
xchg
pop
inc
xchg
icebp
dec
inc
sahf
rcll
push
sbb
addr16
cmc
or
pinsrw
loope
into
add
or
xchg
cs
or
push
dec
cmp
jmp
outsb
inc
sbb
fcomi
rcrl
iret
mov
outsb
pop
adc
push
jnp
push
xor
cmpsb
lods
inc
mov
aas
data16
or
inc
pop
repnz
out
rorl
or
lret
aas
bound
lcall
inc
push
push
xor
and
decb
pop
pop
xchg
or
push
repz
mov
sbb
pusha
popf
scas
vcvtpd2dqx
add
iret
popf
pop
inc
pop
sub
sbb
icebp
xor
push
mov
lock
jge
outsl
ret
incb
add
xchg
add
inc
call
add
lods
sub
jp
xor
push
shl
aas
scas
cmpsl
pop
pop
or
std
xor
shl
sbb
xor
movsb
das
pop
mov
ds
ljmp
lcall
pop
mov
or
sbb
fidivrs
addr16
cmp
movsl
jbe
out
dec
xor
adc
dec
insb
pop
xor
pop
inc
das
pop
cltd
jg
enter
jmp
pusha
loop
mov
cmc
cmc
jmp
xchg
jle
dec
xchg
cmp
scas
nop
js
cwtl
jnp
jmp
lock
mov
movsl
or
push
fcoml
stc
inc
xchg
mov
loop
movsl
lret
loop
in
and
or
mov
incl
iret
xchg
call
push
adc
adcb
cmp
sub
lock
pusha
xchg
rcr
stos
sub
xchg
out
xchg
imul
jae
sahf
js,pn
mov
mov
pop
lds
push
push
rclb
jg
push
lret
cmp
adc
loope
sbb
roll
aas
iret
pop
js
pop
ss
mov
push
adc
sbb
push
rorl
ja
lods
mov
xchg
stos
fnsave
js,pn
test
insb
jae
imul
xchg
cli
adc
mov
sti
fidivrs
in
test
push
mov
in
fimull
jmp
cmpsl
ret
sbb
jp
and
ds
movsl
fdivl
add
mov
mov
inc
mov
mov
lahf
mov
adc
outsl
rorb
repz
mov
popf
push
sub
mov
mov
movb
das
movsl
xlat
dec
lret
mov
pop
sbb
mov
or
add
ficoml
bound
sub
xor
ljmp
push
cmp
sbb
orb
add
lock
push
sbb
aaa
jl
jbe
lods
pop
sbb
mov
or
in
cltd
leave
dec
mov
mov
daa
imul
jmp
push
sti
pop
shll
dec
fdivrl
insb
mov
pop
mov
aam
mov
push
inc
imul
mov
addr16
lods
rorl
mov
jmp
test
mov
hlt
stos
jae
pop
push
outsl
shll
sub
push
and
stos
icebp
pop
and
mov
jnp
in
lods
loopne
adc
dec
cs
jg
mov
push
cmc
pop
mov
inc
nop
fdivs
mov
mov
lods
sub
pop
mov
nop
and
inc
pop
mov
out
xor
inc
ficoml
les
lret
xor
jnp
cs
repnz
cmp
jno
add
mov
dec
push
lods
cmp
roll
out
insl
add
inc
call
dec
popa
sbb
mov
test
inc
pop
xchg
sbb
clc
rcrb
inc
pop
xor
inc
jp
push
test
movsb
inc
jg
loopne
gs
mov
ljmp
pop
es
xchg
xor
push
jb
pop
pop
jge
pop
jne
sbb
xor
xlat
xor
push
dec
inc
adc
lret
cwtl
test
out
mov
stos
push
and
pop
inc
rorb
pop
cld
mov
iret
cmp
inc
fimull
mov
xor
cs
ds
xor
pop
inc
mov
mov
test
fnstenv
popf
push
xor
jmp
insl
negb
push
repz
sbb
nop
bound
test
add
jne
gs
pop
or
fwait
outsb
sbb
jb
jbe
ret
call
je
in
mov
mov
pop
popf
cmp
jns
mov
xchg
lods
sbb
std
and
add
pop
nop
pop
pop
mov
cwtl
lcall
ss
stc
popf
stos
xchg
cmp
addr16
das
shll
shr
mov
mov
mov
adc
jne
mov
aas
fdivrs
loope
or
insl
inc
pusha
sbb
pop
ljmp
test
mov
push
cmc
mov
pavgb
push
cmp
cmp
adc
andb
push
lods
in
pop
dec
mov
mov
xor
frndint
mov
mov
xchg
inc
pop
fdivr
sahf
and
sti
pop
jnp
iret
movsb
lahf
jae
mov
xchg
xlat
mov
pop
fcoml
push
xor
popf
pop
dec
int
shlb
lcall
test
push
sbb
movsl
xor
sbb
icebp
ds
pop
cld
dec
add
xchg
cmpsb
jns
loope
mov
mov
ss
inc
and
ss
pushf
push
movsl
adc
adc
pop
leave
push
call
sub
test
aam
lret
inc
add
pop
mov
adc
lret
push
scas
aad
add
nop
aaa
sbb
shll
add
inc
addr16
mov
addr16
cmpsl
xchg
adc
pop
js
mov
xor
dec
push
popa
sbb
jnp
jb
xor
ss
mull
or
mov
outsb
sub
imul
bound
mov
inc
and
sbbb
cmc
sub
jmp
addr16
push
and
rclb
adc
fmuls
pusha
or
sub
outsl
rolb
int
lahf
mov
out
sub
rcrb
lcall
aam
cmp
daa
mov
fidivl
or
lret
enter
imul
push
xor
cmp
dec
xor
cli
inc
das
sbb
in
frstor
push
sbb
mov
mov
xchg
or
fs
sub
call
xchg
mov
cmpsl
dec
test
lcall
pop
cmpl
addr16
test
stos
outsl
add
loopne
jle
mov
je
pop
adc
adc
mov
jo
into
out
shrb
lds
cmpsb
test
in
pop
and
or
imul
xchg
icebp
push
sbb
jmp
cmc
adc
and
in
hlt
pop
out
movsb
test
sub
in
jle
insb
mov
jl
pop
add
movsb
add
pop
mov
xchg
adc
aaa
scas
jnp
sbb
mov
rcll
les
clc
cmp
aaa
mov
rclb
mov
daa
jae
sub
and
push
pop
pop
xchg
mov
fmuls
jns
iret
xor
ficoms
popl
test
int
jbe
nop
add
lret
and
add
xchg
pop
pop
mov
insb
in
pop
lret
movsl
dec
xor
push
outsb
cmpsb
or
xchg
xchg
cmp
call
xor
int3
sub
std
cwtl
jp
push
sub
sbb
push
and
ja
inc
cmp
fsub
and
dec
mov
cmp
pushf
sbb
push
in
pop
aaa
pop
in
xchg
and
or
fs
mov
cli
stos
mov
lock
sbb
lods
xor
add
clc
lret
shl
push
mov
sub
daa
adc
mov
hlt
das
mov
clc
sbb
je
pop
cmp
arpl
dec
mov
add
subb
popf
out
movsb
pop
mov
mov
jl
push
xor
scas
sbb
clc
das
jecxz
add
mov
lret
notb
inc
and
sbb
mov
jb
jns
and
xor
mov
sbb
mov
mov
ret
sbb
and
dec
pop
and
subb
add
push
gs
ljmp
scas
mov
pop
push
cmp
inc
fidivrs
aaa
push
mov
jg
fsts
subl
pop
inc
pop
rcrb
scas
lret
adcl
xor
lret
inc
mov
or
or
dec
and
xor
xchg
mov
jbe
add
sbb
and
dec
pop
loopne
int3
mov
imul
fistps
push
or
lahf
fnstsw
in
jle
fs
sub
lcall
test
daa
sbb
push
bound
cltd
pop
push
ret
sbb
inc
add
in
test
adc
jno
mov
mov
fs
and
subl
sub
call
popf
xchg
pusha
pop
outsb
es
push
jge
or
ljmp
jle
aas
je
movsb
sub
cmpsl
enter
scas
mov
stc
mov
xchg
test
iret
jbe
test
mov
adcl
shll
push
insb
push
sbb
or
jmp
in
inc
outsb
push
test
jno
push
mov
inc
or
jmp
inc
lret
in
insl
lcall
mull
push
sub
sti
and
xchg
push
mov
out
repnz
cmc
or
fcmovnb
test
das
and
jo
cwtl
cmp
montmul
cmpsb
ret
js
sub
fbstp
fnsave
xlat
mov
iret
leave
xlat
adc
ss
pop
imul
and
scas
enter
je
fisubrs
xor
or
and
gs
mov
test
sub
imul
scas
jle
push
cvtpi2ps
loope
jb
popf
outsl
mov
shlb
and
jnp
ljmp
and
dec
push
scas
mov
arpl
jb
pop
aad
cwtl
mov
xor
dec
lcall
xchg
lds
mov
bound
mov
add
cmp
icebp
xor
push
dec
fdivrs
xchg
hlt
fcoms
push
dec
addr16
in
call
pop
and
imul
xchg
pop
fcmovne
ljmp
clc
lds
push
sbb
cmp
daa
pop
pop
fldt
sbb
lret
mov
lea
aam
mov
lcall
xchg
pushf
outsl
outsb
ljmp
cltd
mov
pop
inc
repnz
xchg
mov
pop
xor
outsl
movsb
pop
es
cltd
fstpt
outsb
fs
cs
das
test
or
adc
xchg
xchg
mov
dec
push
imul
sub
sub
ss
iret
mov
dec
jne
idivb
xor
mov
jle
xor
inc
add
movsb
fisubl
or
scas
jge
and
xchg
cmp
test
pop
test
jb
jae
xor
outsb
and
mov
scas
aas
jmp
sbb
pushf
and
adc
aaa
lock
xor
or
xor
and
push
jno
sbb
pop
adc
dec
shrl
ljmp
mov
xchg
jmp
cli
or
or
iret
push
pop
jp
push
rcr
add
cmp
lds
pop
jmp
in
stos
and
in
je
jno
cmp
loope
loop
fnstcw
cmp
out
repnz
xor
inc
test
mov
pushf
xchg
or
mov
cmp
ss
hlt
enter
jle
push
insb
shll
lcall
mov
imul
xlat
adc
jp
sbb
dec
repnz
idivb
ficoms
cmp
adc
inc
test
cwtl
mov
and
ljmp
pusha
mov
add
rcrb
mov
cld
clc
and
into
loope
lods
je
push
insb
ficoml
lcall
pop
std
or
pop
mov
mov
pop
arpl
repz
add
outsb
lds
dec
cmp
lods
xlat
cld
fadds
loope
addb
and
je
shll
jns
xchg
aam
dec
ret
or
insl
adc
pushf
push
and
stos
mov
xchg
inc
cmp
pop
ja
lahf
ljmp
lea
int
clc
sub
hlt
stos
and
aas
ja
cmp
mov
sub
sahf
dec
pop
imul
cwtl
psubd
push
scas
sbb
ljmp
mov
mov
sbb
jae
mov
or
push
inc
push
ret
inc
dec
mov
lods
push
add
aas
mov
sbb
inc
in
icebp
add
pop
mov
mov
push
inc
mov
testl
mov
mov
mov
mov
pop
mov
jo
jno
xor
jmp
filds
popa
mov
pop
adc
mov
xor
out
sbb
mov
shrb
mov
sub
aas
jmp
imul
in
lock
daa
fscale
push
xchg
inc
xor
cmp
or
cmp
mov
xor
movsb
inc
or
ret
out
scas
cmpb
dec
das
repz
xor
scas
inc
andl
test
popf
xchg
xchg
mov
pushf
mov
pop
or
push
and
adc
jae
add
mov
mov
or
dec
es
adc
mov
addl
fs
add
int
mov
jge
fs
fdiv
out
push
sbb
lock
repnz
out
and
push
dec
push
fsubrl
sub
hlt
mov
movsb
push
loope
popf
les
sub
int3
inc
loope
adc
jns
call
push
dec
xchg
mov
sub
rorb
cmp
xchg
push
add
mov
push
jb
sbb
xchg
sbb
mov
pop
daa
lods
jg
pop
mov
xchg
and
pop
mov
repnz
pop
ljmp
test
out
addr16
xor
sbb
loope
and
or
test
sub
push
xchg
jg
inc
xchg
in
ficomps
mov
nop
lret
arpl
or
mov
aad
dec
ss
add
es
lods
sub
push
inc
sti
cmpsl
fstl
jae
cli
ret
imulb
js
or
hlt
fucom
or
push
jge
ror
xor
add
jge
in
rolb
stos
inc
sub
pop
ret
in
mov
push
in
sbb
jns
mov
pop
imul
mov
adc
adc
sub
pop
pusha
add
fnstsw
mov
adc
xchg
mov
inc
inc
push
adc
lahf
test
lods
or
xchg
loopne
adcb
imul
cmpsb
and
xor
ljmp
icebp
xor
incb
jp
inc
and
fsub
xchg
mov
cmp
iret
cli
jmp
loope
lret
push
stos
pop
outsb
arpl
icebp
and
test
fisttps
mov
inc
inc
inc
sbb
fdivrs
add
ret
pop
jecxz
dec
xor
pop
rcll
call
fcmovbe
inc
movsb
lcall
sti
jl
sbb
mov
sub
imul
aas
jg
sarl
ja
test
fldenv
pop
pop
clc
insb
movl
dec
sub
sub
jo
mov
pop
in
add
mov
cld
adc
lret
shrb
fnstcw
mov
pop
in
stos
outsb
cmp
scas
aaa
sbb
daa
sarb
sub
pop
pop
setns
test
and
gs
addr16
repz
push
imul
xor
arpl
cmpl
xchg
mov
jg
ds
lock
pop
pop
cwtl
aaa
out
repz
shll
and
and
lock
adc
loop
and
leave
insl
jecxz
xchg
in
je
leave
cmp
clc
pop
xchg
mov
dec
pushf
cmp
lods
or
lds
cmp
mov
push
int3
stos
or
cltd
push
lods
call
fs
fwait
inc
or
push
fwait
push
imul
mov
lds
adc
leave
rclb
mov
orl
les
clc
xor
and
js
cs
pop
hlt
es
out
test
mov
enter
add
addr16
or
out
repnz
dec
mov
loope
jl
push
fdivl
sub
adc
pop
mov
or
rol
fs
int
dec
mov
xchg
out
jo
les
scas
outsb
call
sahf
xor
rcrw
mov
pop
shll
push
cmp
or
aad
push
out
pusha
mov
flds
adc
sub
jns
in
lods
fnstenv
mov
filds
repnz
cmp
or
mov
xchg
clc
jae
ja
insb
add
mov
push
movsl
sbb
add
popa
stos
mov
cmpsb
mov
pushf
pushf
adc
jecxz
inc
lods
inc
sbb
lods
add
in
cmc
lahf
inc
mov
fsubs
stos
clc
inc
arpl
jbe
mov
nop
repz
clc
sbb
add
leave
repnz
int
js
mov
rclb
orb
je
dec
xchg
mov
lret
jmp
and
pushf
xchg
xchg
dec
jae
cli
adc
sub
cmpsl
test
mov
out
inc
fisttpll
stos
xor
mov
and
cmpsb
aam
sub
in
js
pop
cmp
out
rcrb
push
icebp
fdivl
adc
hlt
push
jle
mov
mov
out
imul
lahf
sbb
push
lcall
xchg
lea
jl
inc
js
mov
add
lock
mov
imul
pop
notb
cld
jo
xchg
into
mov
popf
testb
fs
mov
or
je
mov
outsb
xchg
mov
dec
clc
xor
mov
or
add
cmp
jnp
fdivl
repz
adc
in
imul
and
sbb
and
loop
notb
ljmp
pop
xchg
xor
sub
inc
lcall
add
popa
movsl
push
or
cwtl
mov
sahf
addr16
push
lods
jb
or
insl
add
fldcw
imul
leave
lret
jo
and
popa
dec
aaa
mov
adc
sbbb
mov
imul
jb
lock
push
mov
inc
or
pop
daa
cs
push
mov
pop
xchg
jae
push
inc
or
popa
or
into
pop
xrelease
jge
mov
outsl
cltd
sub
push
mov
add
push
cmc
pop
in
add
fwait
imul
add
inc
push
pop
je
hlt
sahf
lcall
or
xchg
vphaddudq
adc
iret
adc
sarb
mov
addr16
ljmp
mov
mov
idivl
ja
mov
daa
inc
fwait
sti
insb
sub
dec
sub
test
frstor
mov
adc
sbb
popa
dec
jle
and
sti
sub
mov
mov
fimull
ljmp
push
cmc
mov
pop
jns
and
sub
push
shl
scas
sub
testb
popa
push
int3
and
pop
sar
add
nop
bswap
popf
jns
mov
test
mul
stos
add
mov
sub
mov
mov
and
xor
pop
leave
xchg
ds
rclb
lahf
jecxz
jecxz
lods
sbb
inc
in
jmp
ret
imul
incb
sbb
sub
jp
mov
fcmovne
pop
push
scas
test
ljmp
sahf
in
fidivl
loope
pop
cmp
les
dec
nop
xor
sbb
inc
inc
pop
sub
mov
lea
int3
rcrl
or
repnz
mov
in
or
cmp
mov
add
pop
sbb
ljmp
push
and
add
pop
es
int3
mov
adc
test
jb
jno
mov
outsl
mov
or
adc
xchg
jg
das
push
ds
sbb
xchg
imul
stc
adc
sub
lret
orl
mov
cmp
frstor
jge
pop
mov
inc
rorb
shlb
cmp
or
icebp
jae
rclb
dec
mov
sbb
and
push
aaa
aas
add
cmpsl
hlt
inc
jmp
and
adc
in
sub
add
sub
loope
ja
cmp
push
pop
dec
es
sahf
add
dec
push
or
jg
ret
bound
es
mov
xchg
mov
gs
mov
out
cwtl
jb
leave
pop
add
sbb
test
and
add
rclb
int3
ljmp
xchg
jmp
mov
imul
rcrl
ficoml
lea
jb
mov
jge
sub
cmpsl
jnp
sbb
aad
pop
popa
mov
imul
push
fldt
adc
adc
lods
out
jecxz
lret
add
jle
dec
adc
das
mov
sub
orb
fisttpll
out
scas
xor
cmp
mov
xchg
adc
mov
loopne
aam
insb
shrb
sub
iret
mov
mov
scas
pop
pushf
or
pop
jne
jmp
insl
push
add
repz
push
adc
inc
xor
lds
cmp
pop
int
adcb
pop
xchg
stos
xor
in
or
lret
out
sarl
pushf
pop
push
xor
mov
mov
cmp
leave
fiaddl
xlat
or
jmp
mov
mov
jg
sarl
and
movsb
mov
mov
pop
stc
and
sub
test
push
adc
iret
mov
iret
and
pop
jge
inc
sti
mov
xchg
aas
pop
xchg
loopne
mov
out
mov
jns
mov
dec
mov
je
in
dec
cmpsb
xlat
and
lods
fnstcw
faddp
adc
shll
sti
rorb
pop
popf
inc
cld
dec
inc
dec
push
pop
sbb
inc
sbb
xchg
adc
test
jns
add
ja
dec
mov
mov
xchg
adc
mov
lock
jecxz
jle
sbb
insl
add
push
pop
movsl
push
push
lods
jmp
xchg
mov
test
dec
ret
xchg
fcmovu
into
sbb
mov
cmpsl
scas
sbb
inc
in
cltd
xchg
jecxz
test
add
jcxz
cmpsl
inc
fildll
mov
jge
adc
xor
movsb
das
leave
movsl
xor
in
mov
mov
jo
add
or
add
sbb
cmpl
mov
out
lcall
sahf
and
cmpsb
adc
xchg
jg
movsb
insb
cli
cmp
xor
add
ret
loop
repnz
inc
add
xchg
pop
xchg
dec
sbb
xchg
xor
mov
lcall
jge
inc
cmpsb
nop
rcr
andl
jecxz
jbe
stos
fwait
hlt
push
cmp
or
in
hlt
jge
xor
jo
jl
mov
les
sbb
or
add
push
xchg
getsec
das
das
xor
cmp
stc
pop
lahf
in
dec
aad
arpl
lds
or
push
adc
jno
loop
imul
testb
mov
in
cmpsb
mov
ss
pop
push
clc
inc
stos
push
hlt
pusha
enter
push
mov
add
lods
or
stc
mov
sahf
sbb
xorl
sbb
cmp
rorb
pop
mov
push
xlat
sub
adc
pop
insl
iret
add
or
std
fnstsw
into
bound
mov
int3
scas
push
pop
popa
jb
stos
cli
mov
xor
sbb
fwait
jmp
jmp
stos
jp
mov
loope
adc
lret
pop
xor
pushf
add
repz
sahf
lea
pusha
movntps
xchg
pop
jmp
testl
jle
cmc
mov
andb
mov
xorb
and
jle
hlt
xor
lahf
push
iret
add
gs
enter
sbb
xchg
jbe
jg
mov
rorl
test
bound
push
mov
pop
mov
test
jmp
sbb
sahf
cwtl
outsl
or
xchg
fistps
jo
idivb
inc
out
test
xchg
movsb
xchg
stos
lods
loop
fwait
clc
dec
inc
and
loope
pusha
mov
xor
mov
pop
mov
inc
jmp
mov
dec
out
mov
xlat
jecxz
inc
cmp
nop
popf
mov
cs
je
sub
mov
mov
rorl
fisubrs
pavgw
aad
mov
xchg
loopne
dec
add
dec
cmovge
add
jecxz
adc
pop
lcall
jge
jle
and
sub
push
mov
or
xor
cmc
mov
fildll
xor
out
and
dec
repz
out
btr
push
cld
and
insl
adcb
out
inc
lds
imul
test
inc
pop
mov
inc
xchg
addr16
data16
dec
lods
outsb
lods
cld
pop
cli
jnp
push
dec
shll
push
add
or
sarb
test
adc
aas
aaa
aad
xor
sub
add
arpl
lcall
sbb
and
sti
test
and
sub
ja
cmpsl
push
add
mov
ljmp
mov
adc
pop
rcr
rolb
pop
test
sub
add
pop
stos
ljmp
push
jle
fbstp
xchg
add
out
push
ret
adc
dec
fnsave
cmp
jb
gs
push
adc
mov
sub
decb
push
xor
sti
shlb
out
xchg
jbe
enter
lods
int3
pop
dec
test
scas
dec
test
and
dec
jecxz
repz
es
mov
mov
jae
inc
adc
mov
arpl
mov
inc
and
nop
or
aam
outsb
inc
movsb
jns
stos
pop
dec
and
cld
es
cmp
ljmp
xchg
pop
nop
bound
jmp
out
mov
lock
ds
orb
test
push
lock
lds
es
lds
es
or
mov
mov
cli
test
mov
insl
incb
pop
sub
mov
cmpb
push
loope
lret
jne
sub
sbb
mov
push
jecxz
xchg
jne
add
xchg
or
mov
or
pop
mov
cmp
mov
inc
inc
enter
or
movl
pusha
push
aam
imul
fcmovne
fs
or
jo
in
dec
mov
stc
jmp
call
neg
sahf
push
fsts
nop
or
orb
jl
out
aam
fldenv
add
rcrb
xchg
fisttpll
test
and
out
xchg
std
sbb
cmpsl
dec
sahf
push
imul
cli
shll
add
je
push
rcrl
and
loope
push
xchg
mov
rsqrtps
pop
movsb
aam
push
jb
fcompl
call
adc
pop
fstpl
dec
dec
mov
cmp
insb
jb
mov
sbb
sbb
pop
es
les
sub
shlb
insl
pop
cld
push
lock
pop
fwait
repz
push
mov
jb
rol
shld
push
push
sub
push
inc
mov
test
cmpsb
add
mov
addr16
adc
xor
orb
mov
jo
cmc
insl
jno
out
cmp
test
in
addr16
lds
scas
icebp
scas
outsl
jns
fisubs
sub
fwait
xlat
pop
mov
popf
xor
jle
je
push
int3
stos
dec
dec
mov
lods
adc
sahf
dec
adc
jp
mov
pushl
push
jmp
pop
mov
lods
pop
repz
incb
jp
sbb
rcll
shlb
cmpsb
jecxz
inc
das
lods
aad
in
xchg
ss
cli
mov
int3
inc
xor
sub
scas
and
or
scas
pop
pop
xchg
ljmp
inc
jnp
fstps
or
inc
sbb
push
mov
incl
dec
loopne
xchg
push
sub
add
fcmovb
cmpsl
movsl
add
lret
test
jg
mov
popf
xorb
leave
pop
nop
rorb
in
repnz
jecxz
xchg
pop
mov
ret
lods
push
and
inc
jnp
clc
fsubrs
dec
cmpsl
mov
insl
sbb
xchg
mov
stc
in
ret
fisubrl
add
mov
push
bound
xchg
and
push
add
sbb
or
jno
cmp
imul
les
cli
cmp
sub
movsb
xchg
dec
dec
xchg
xor
leave
xor
or
mov
das
inc
dec
sub
fwait
inc
out
pop
push
mov
cld
or
lret
xor
clc
in
daa
adc
sahf
shrb
sub
ficomps
dec
mov
pop
int
mov
jg
mov
andb
rolb
fists
sbb
stos
push
xchg
mov
xchg
push
popl
fstps
xor
mov
cltd
lret
sbb
cmp
scas
out
dec
and
test
loop
jle
dec
lcall
jmp
add
fwait
push
ja
out
dec
inc
cmpsb
arpl
xor
scas
push
addl
add
vpmovsxbw
stos
cmp
lahf
cld
xchg
scas
sbb
mul
sbb
mov
ds
lsl
xchg
or
inc
and
push
push
nop
mov
or
push
outsl
sub
test
mov
mov
je
loopne
push
push
xchg
cmpl
or
mov
sbb
xchg
les
lock
adc
cmp
dec
push
mov
scas
or
lods
je
cmp
push
mov
and
jae
leave
insb
mov
bswap
add
push
mov
dec
mov
mov
lahf
arpl
inc
jo
mov
add
cli
dec
inc
sub
mov
push
repz
aaa
or
xchg
repz
jnp
xor
js
mov
inc
addr16
pushf
inc
or
and
sub
jge
mov
xchg
inc
lahf
mov
js
loopne
pop
add
or
enter
scas
sbb
mov
mov
nop
in
faddl
and
push
rolb
clc
lret
aad
into
jl
mov
cmpsb
sbb
xchg
std
popa
sbb
imul
xor
scas
mov
mov
or
adc
popf
mov
xchg
je
dec
nop
dec
dec
mov
push
sbb
push
cmp
xchg
jae
jnp
sbb
mov
lods
stos
lea
outsb
ja
cmp
sbb
sbb
fwait
cmp
mov
hlt
xor
sub
mov
inc
xor
jbe
adc
jb
and
add
mov
mov
lret
xchg
stos
test
jno
push
test
push
push
inc
jl
out
fisttpll
push
dec
cs
dec
ss
mov
push
cltd
fiadds
sbb
leave
idivl
push
or
sub
mov
push
mov
adc
inc
idivb
push
xchg
gs
vpaddusw
dec
dec
fs
mov
rcrb
push
incb
lods
ret
mov
xchg
into
push
sbb
jb
data16
sbb
push
lcall
jmp
in
and
in
jge
cmp
sbb
fisubs
stc
push
cltd
sub
inc
push
add
mov
mov
or
jb
sub
out
pop
pop
jle
pop
adc
ljmp
dec
xchg
push
mov
int3
icebp
stos
lods
or
sahf
cmp
mov
sub
test
jle
adc
call
mov
fnstsw
pop
repnz
inc
push
call
pusha
jb
aaa
add
std
push
loope
jg
xchg
mov
sbb
in
daa
pop
jo
mov
outsl
imul
dec
mov
push
faddl
fisubrl
jns
shll
xchg
and
popa
stc
adc
pop
ljmp
sbb
lock
mov
ficoms
mov
rcrb
add
icebp
cs
push
or
insl
ret
mov
xor
int
inc
std
ret
mov
movl
arpl
pusha
es
sbb
fistpl
in
inc
sbb
xchg
int3
xchg
push
cmp
mov
sbb
inc
push
adc
cli
fidivl
pop
fldl
push
inc
and
mov
cmp
inc
cmpsl
gs
into
imul
mov
dec
pop
ret
mov
ja
data16
pop
insl
lds
cmp
jne
push
outsb
push
push
mov
sbb
pop
out
lods
jecxz
or
jb
and
inc
mov
xchg
jecxz
xor
lahf
or
daa
test
mov
inc
mov
adc
sub
adc
shrl
mov
jg
sub
or
jnp
repz
cmp
loop
push
lods
pop
dec
pop
sti
out
lods
jecxz
xor
cmpsl
fnstsw
cvtpi2ps
cs
test
dec
jo
lock
pop
adc
insb
xchg
dec
ds
mov
movsl
gs
in
out
xchg
mov
nop
mov
cmp
popf
mov
dec
xchg
test
push
sbb
or
paddsb
insl
jecxz
sbb
mov
sbb
adc
add
outsl
jne
mov
pop
cmc
shlb
or
mov
adc
aad
and
icebp
jo
lds
jle
imul
mov
iret
xor
es
add
sub
xchg
sbb
ja
int
int
je
shl
or
xlat
std
subb
int3
inc
lret
sub
outsb
out
jns
fidivs
pop
mov
jno
movsb
inc
and
pushf
dec
outsb
js
xor
js
mov
inc
dec
pop
pop
inc
addr16
or
jge
scas
cmp
sbb
test
mov
js
arpl
sub
xchg
imul
cs
jbe
hlt
and
movsl
ss
or
mov
push
xchg
inc
xchg
insl
into
daa
adc
fstl
call
call
cmp
aas
or
pusha
arpl
lcall
dec
cmc
outsl
mull
rol
pop
sti
lods
mov
jmp
es
or
jge
addr16
loope
push
in
cmp
stos
mov
jg
mov
cwtl
add
aad
mov
pop
mov
jns
stc
mov
jns
xor
xor
mov
mov
xchg
pop
dec
into
sbb
jg
js
lds
jb
pop
mov
and
rolb
add
popf
clc
arpl
fs
xlat
mov
in
add
or
leave
stc
insl
jae
push
andl
lret
loopne
jle
adc
popf
jbe
inc
inc
push
sbb
ret
popa
aad
cld
push
fsubr
jecxz
test
das
sub
lods
inc
add
mov
jno
dec
aas
cmpsb
sbb
pushl
shrl
sub
mov
mov
jp
cmc
inc
or
adc
aas
cwtl
jge
cmpsl
mov
add
and
xchg
imul
pushf
jns
pop
aaa
dec
sti
sub
pop
sub
pmaxsw
or
sbbb
pop
inc
jmp
mov
mov
sub
cwtl
inc
dec
movups
add
or
dec
dec
mov
fcoms
cmp
mov
add
mov
sub
fs
mov
popa
pop
enter
xor
cmpsl
xchg
xchg
pop
popa
jmp
pop
int3
loop
xor
mov
insl
sahf
mov
nop
jb
add
mov
dec
or
clc
jnp
xor
mov
ret
test
pop
cmp
iret
xchg
cmp
mov
cmc
add
dec
add
push
lods
aaa
sbb
notl
xor
push
xchg
in
sarl
sub
mov
jbe
fmull
negb
cwtl
push
jp
scas
testl
xor
ret
mov
loop
or
or
aas
aaa
jo
jae
mov
xchg
add
dec
in
xlat
daa
inc
lods
and
loop
pusha
loopne
jo
and
scas
jns
movsb
addr16
mov
ret
scas
pushf
push
jno
jmp
dec
je
cmp
pop
dec
fiaddl
mov
jl
push
jo
std
mov
pop
call
testl
or
call
and
xor
add
pop
sbb
mov
sub
cmp
and
lds
xchg
cwtl
cs
leave
scas
pusha
inc
xor
add
sar
push
in
xlat
je
mov
clc
dec
pop
or
xor
inc
mov
push
out
inc
ret
mov
out
lock
add
adc
pop
repnz
shlb
in
stos
ljmp
mov
arpl
sub
lahf
cmc
mov
inc
sub
cli
cli
ss
cltd
and
mov
inc
lcall
in
push
nop
xchg
repz
adc
mov
jb
js
jecxz
popa
imul
leave
ljmp
ljmp
loope
dec
pop
push
testl
adc
fiaddl
shrb
jmp
add
sbb
pop
pop
addr16
xor
std
pcmpgtw
repz
push
adc
xor
add
cmp
push
notb
mov
inc
in
das
mov
mov
add
into
sbb
aad
cmp
stos
xor
push
jbe
fisubl
inc
pop
push
xchg
ds
shlb
pop
adc
mov
and
dec
mov
in
loopne
sub
ret
test
dec
mov
loopne
in
icebp
or
es
add
cltd
fwait
dec
xor
push
xlat
sbb
mov
adc
into
pusha
add
filds
in
or
mov
dec
mov
jecxz
sahf
data16
test
test
test
sbb
shlb
inc
loope
mov
pop
mov
jmp
scas
push
iret
pop
leave
xor
jb
das
bndldx
pop
dec
pop
enter
mov
pop
adcb
dec
push
hlt
jecxz
ss
fistpll
loope
cld
pop
jno
fsubr
pop
out
lea
inc
jl
stc
sti
inc
xchg
cmc
mov
pop
adc
xchg
sbb
cmp
xor
mov
test
popf
xchg
xchg
pop
push
xchg
mov
adc
aad
inc
mov
adc
xchg
mov
xchg
cmp
fcmovnbe
inc
das
mov
push
inc
inc
mov
lret
pop
notb
aas
mov
inc
dec
int
pusha
repnz
xchg
adc
push
cli
mov
popf
push
mov
and
mov
push
pop
jnp
pause
jno
in
adc
test
daa
int3
mov
mov
fwait
jge
mov
loopne
sub
or
sub
es
movsl
imul
pop
add
pop
fwait
sar
out
fcom
mov
xchg
push
addr16
pop
pop
pop
out
in
in
add
pop
aam
outsl
adc
pop
dec
lret
mov
in
push
xor
roll
lahf
mov
out
cli
das
pop
dec
faddl
iret
jle
cmpsb
add
jp
int
jg
inc
cmp
adc
idiv
outsb
sub
or
inc
bswap
mov
cwtl
and
sbb
jno
or
mov
cmpl
push
and
hlt
dec
push
scas
iret
pop
sbb
dec
icebp
mov
iret
popf
aad
outsb
add
lea
leave
rcl
or
lcall
stos
fsub
xor
loope
fcoms
daa
sti
sahf
ja
inc
mov
mov
fwait
pushw
movsb
popf
ja
insb
mov
mov
sahf
adcb
fisttps
jg
mov
push
fstps
pop
cltd
ds
pop
movsb
dec
cmp
push
out
jmp
xchg
fisubrs
add
hlt
adc
mov
out
xlat
sub
xchg
mov
adc
test
mov
repz
rcll
gs
call
dec
push
sub
sbb
ret
test
add
push
jno
or
mov
rolb
xchg
mov
scas
data16
mov
jg
pop
fisubs
mov
mov
rclb
enter
cmp
mov
pop
je
cmpsl
in
mov
jge
inc
inc
add
xchg
out
ret
mov
loop
fstl
insl
mov
jp
cmp
out
lret
fstl
add
addr16
int3
xchg
movaps
dec
ret
inc
add
and
xchg
movsb
cltd
jno
adc
sbb
sub
out
les
mov
sbb
adc
or
loope
push
std
cltd
movsb
negl
sbb
jecxz
and
add
rcrl
imul
test
out
add
cmc
std
stos
dec
lret
not
xchg
sbb
test
pop
je
jl
push
sbb
inc
inc
dec
sub
in
out
pop
xchg
jle
inc
fidivrl
mov
jmp
cmp
lret
add
add
mov
mov
inc
repnz
ficomps
push
sbb
mov
dec
xor
xor
daa
les
subl
fiaddl
mov
pop
in
fadds
add
mov
lock
push
mov
fiadds
insb
dec
push
gs
es
fxam
pop
out
xchg
pop
cltd
test
movsb
pop
in
je
insl
pusha
inc
enter
insb
inc
pop
ljmp
dec
repz
push
push
fsubrl
mov
ficoms
jno
adc
je
dec
daa
aas
adc
sub
test
insl
xor
pop
xchg
fidivs
and
scas
negb
loope
pusha
movsl
icebp
push
lret
popa
outsl
and
shrb
mov
push
jle
and
out
mov
jbe
mov
mov
aaa
mov
xor
ja
xor
inc
mov
mov
sbb
mov
cltd
push
mov
sbb
jae
jne
inc
fwait
int
js
lea
cltd
shrl
scas
add
mov
adc
inc
shll
movsl
sarl
iret
and
in
lret
push
cli
push
stc
pop
xchg
or
cmp
jle
negl
outsl
mov
enter
in
cltd
mov
push
inc
and
ja
push
sbb
out
mull
mov
or
mov
or
xchg
sbb
mov
loope
and
and
bound
jb
push
push
leave
jmp
dec
repz
ret
pop
outsb
sub
xlat
push
dec
xorl
in
mov
mov
or
gs
inc
fsubrp
pop
pop
xchg
ljmp
and
inc
dec
mov
xchg
cmp
mov
mov
adc
push
jmp
xchg
mov
or
out
cli
fistl
sub
in
mov
mov
push
mov
cltd
mov
or
xchg
imul
pop
int3
aaa
sub
dec
fistpll
cmp
nop
and
pop
adc
add
ficoml
sbb
dec
xchg
cmp
rorl
inc
into
sti
push
pusha
nop
movsl
js
mov
sbb
outsl
sbb
in
inc
mov
push
ds
lock
push
ss
or
xor
adc
jbe
aad
dec
sub
mov
pop
push
inc
dec
push
fisubl
cmpsb
dec
lahf
fildll
out
sub
mov
cs
nop
xchg
fsubr
imul
orb
jl
inc
or
and
push
out
mov
fbld
add
fiadds
pop
imulb
add
loop
mov
dec
fwait
and
imul
scas
hlt
dec
jno
pop
out
fidivl
xor
ret
rorl
rcpps
jl
fildll
or
clc
lea
mov
das
push
dec
pop
xchg
arpl
dec
out
setb
fdiv
mov
mov
subl
notl
pop
popa
nop
aam
cmpsb
cmc
mov
in
lret
sub
lods
xchg
movsb
insb
ret
pop
push
mov
jle
fcmovne
out
fistps
cmp
aaa
mov
pop
jmp
cmpsl
and
mov
dec
dec
fistpl
cmp
shl
or
xor
push
cmc
incb
inc
loopne
cmp
mov
aad
into
addl
es
pop
jl
mov
xor
iret
and
mov
push
gs
mov
or
mov
lahf
gs
jb
or
popa
gs
jnp
mov
inc
sbb
add
xchg
pop
icebp
pop
rclb
call
sbb
insl
mov
mov
pop
mov
in
je
add
ret
sbbb
cmp
sub
jns
ret
divl
pop
cmpsb
jge
mov
jmp
sbb
clc
js
xchg
mov
out
add
xchg
or
std
sub
test
push
mov
sub
cwtl
sbb
jecxz
xorl
inc
or
xlat
inc
enter
or
int3
nop
stos
xchg
filds
loopne
xchg
xchg
popa
sub
xor
lahf
sbb
xchg
xchg
sahf
pop
test
lcall
sbb
xchg
mov
int3
pop
push
jmp
pop
fwait
jbe
fwait
inc
mov
lret
push
int
rolb
int
jecxz
and
nop
sbb
fimuls
inc
pop
imul
nop
cmc
xor
outsb
mov
and
add
push
leave
test
add
in
add
lret
repnz
iret
sbb
in
outsb
jp
adc
dec
xor
lcall
ret
mov
fadds
mov
fucomip
or
adc
sub
mov
sbb
sar
leave
mov
nop
rorl
fbld
xor
lods
lcall
std
rsqrtps
add
mov
aas
push
mov
add
test
loopne
dec
lret
popf
pop
or
jmp
cmpsl
popa
shlb
inc
shlb
pop
loop
push
cmp
bound
jp
mov
xor
pop
cli
jbe
lods
fwait
test
xchg
mov
mov
pop
js
testl
sbb
push
idiv
insl
ljmp
hlt
xchg
cltd
or
add
jbe
scas
and
xchg
int3
ljmp
push
gs
cmp
mov
sub
stc
inc
rolb
lods
inc
enter
pop
push
pop
jl
mov
jnp
jecxz
adc
mov
std
mov
push
adc
and
inc
xchg
out
xchg
int
or
push
push
icebp
les
jb
xchg
sub
ret
loope
pusha
push
ret
push
insb
cmc
orb
fiaddl
mov
sbb
stos
stos
fwait
mov
inc
movsl
inc
xchg
dec
iret
xchg
cmp
imul
fwait
inc
dec
push
or
test
aaa
pop
xchg
fimull
mov
cmp
push
pop
sbb
add
sahf
push
mov
mov
lock
inc
es
gs
sbbl
xchg
iret
js
ja
cwtl
out
jo
pop
pop
sub
scas
mov
xlat
mov
add
notb
add
repz
sub
lods
dec
or
pop
and
daa
rol
shlb
gs
jne
cld
shrb
mov
bound
xor
push
shrb
les
test
in
inc
insb
mov
ja
aas
xchg
aad
add
push
cmp
test
jne
jg
fbld
or
aaa
stos
addb
dec
loop
in
lret
cltd
mov
sahf
clc
jle
sbb
mov
and
inc
fsubl
insl
or
push
or
loope
or
iret
mov
ffree
imul
rcll
or
xchg
push
pushl
cld
loope
cmp
dec
out
popa
stc
imul
mov
into
lret
and
fisttps
inc
or
sbb
icebp
mov
adc
sub
enter
cmp
sub
lods
xor
adc
out
inc
subb
cmp
cmp
mov
js
test
and
lahf
test
aas
jne
inc
inc
mov
dec
and
insl
jns
jne
sbb
sbb
das
mov
lods
mov
lods
adc
sbbb
and
rorb
in
int3
sub
pop
jns
aaa
into
scas
mov
xchg
and
mov
mov
sub
test
inc
mov
lahf
out
fidivrs
add
jp
lret
cli
std
jno
cli
stc
aam
add
fxch
push
mov
adc
sbb
andb
xchg
xchg
ss
inc
jne
or
pop
repnz
mov
sbb
fimuls
jmp
mov
gs
out
movb
inc
stos
push
or
dec
sub
mov
xchg
ljmp
mov
cs
cli
ljmp
mov
inc
in
or
int
das
rorb
dec
sbb
ljmp
inc
mov
fidivs
sub
leave
sub
mov
lcall
js
sub
xchg
dec
mov
and
leave
or
aaa
shl
mov
jno
pop
sti
clc
xchg
mov
pop
sbb
push
hlt
xchg
xchg
fs
xchg
jne
movsl
movsl
pop
jecxz
imul
cmpsl
test
fmul
das
xchg
cmc
jl
sub
jns
xor
xchg
push
std
int
jns
ds
pop
in
xchg
pop
and
ds
adc
push
inc
call
mov
fwait
xchg
enter
out
pop
pop
call
mov
data16
and
add
aas
sbb
ret
insb
lcall
cmp
jle
push
sub
sbb
push
push
cmpsl
push
icebp
cmp
push
adc
mov
iret
adc
lahf
sbb
jge
xchg
cmp
sub
mov
jl
pop
adc
aaa
pop
pop
ja
iret
inc
xor
sbb
pop
inc
dec
dec
icebp
aaa
rclb
jno
bound
sbb
mov
idivl
addb
jns
mov
xlat
out
ds
push
adc
shrl
mov
outsb
imul
es
adc
flds
fs
adc
push
sbb
lea
arpl
push
xor
cmpsl
cmpsl
fs
sti
cmp
xor
bound
stos
add
test
incl
inc
and
mov
icebp
push
and
idiv
sbb
mov
xor
lods
mov
xchg
mov
xchg
scas
repz
mov
dec
adc
test
mov
xor
pop
add
sbb
lret
sub
wbinvd
cwtl
mov
mov
pusha
pop
xchg
sbb
push
sti
push
mov
loopne
add
inc
sub
je
pop
xchg
mov
adc
sub
cmp
les
icebp
ss
push
xor
in
shrl
addr16
xchg
add
jle
mov
into
or
inc
cmc
movsl
and
clc
xor
xor
cmpsb
sub
inc
lods
pusha
sub
xor
dec
rclb
adc
and
jne
lahf
mov
in
jmp
imulb
mov
gs
mov
or
mov
inc
test
stos
sahf
cmp
xor
mov
mov
fldz
enter
mov
ja
jmp
loop
jno
ss
sbb
in
mov
fildl
cmp
sub
les
mov
repnz
shll
out
popf
insl
popf
adc
dec
mov
orl
adc
inc
mov
lods
mov
inc
faddl
xchg
mov
cmp
fwait
pop
jecxz
jp
leave
jo
pop
push
inc
shll
xchg
push
mov
and
js
sbb
pop
shll
xor
into
sti
jge
pushl
mov
aad
data16
dec
in
push
jnp
mov
out
addb
dec
jne
arpl
movsb
inc
cmp
gs
ljmp
movsb
push
je
ljmp
sbb
push
out
icebp
jns
inc
lret
cmp
inc
jp
adc
inc
iret
lcall
pop
mov
mov
iret
out
mov
ficomps
jmp
icebp
imul
cmp
adc
adc
ljmp
in
xor
inc
cmp
push
sub
xor
aad
sbb
jb
fstpt
or
push
je
cmp
shlb
mov
adc
xchg
jecxz
xor
decl
jge
jbe
div
jmp
push
xchg
cwtl
lahf
insl
or
cmp
or
imul
cs
cmp
lds
mov
frstor
and
in
push
sub
mov
loope
mov
xor
lret
faddl
fiadds
and
add
test
mov
add
push
inc
out
das
pushf
pop
xchg
lods
mov
mov
xchg
sbb
jne
in
loop
fwait
cwtl
into
xchg
adc
cmp
aas
pop
push
push
in
lret
in
inc
mov
and
stc
repnz
cmp
xor
shl
or
dec
adc
mov
into
or
xor
icebp
sbb
data16
in
dec
add
je
jp
sub
cs
cmpsb
jp
xchg
stos
arpl
cmp
mov
in
sahf
mov
xor
stos
shl
xchg
cmc
aas
loope
lods
sahf
adc
cmpsl
sti
xor
data16
lds
push
gs
lret
repnz
pop
test
inc
sub
mov
hlt
xor
xorl
leave
enter
xchg
and
in
test
leave
or
scas
rcr
popf
mov
or
dec
fistpll
dec
movsb
lcall
es
and
xchg
arpl
dec
dec
push
dec
xchg
mov
mov
daa
das
mov
dec
push
insb
cmc
lea
mov
orb
pop
sti
xor
mov
icebp
into
in
inc
shll
xor
ds
lcall
into
fisubrs
sbb
andb
adc
je
in
and
dec
outsb
insb
sar
mov
push
mov
fs
mov
sahf
paddw
mov
outsl
mov
addr16
adc
fwait
push
ja
roll
daa
andl
xchg
loop
push
scas
ja
test
shll
icebp
pop
js
push
push
hlt
push
jbe
cli
lock
dec
movsl
iret
mov
fidivl
leave
mov
mov
xchg
jo
int3
call
insb
aas
dec
adc
jle,pt
enter
dec
pop
cmp
mov
loope
xor
xchg
and
pop
cmp
sub
out
imul
push
xor
lea
stos
sbb
inc
test
gs
out
add
jnp
push
movsb
mov
shr
jbe
out
mov
pop
mov
ds
enter
add
sub
data16
cmpsb
ja
fdiv
shlb
jg
or
pop
movd
fidivl
pop
pop
push
lds
ja
repnz
lods
adc
inc
xchg
testl
mov
lods
cmc
ret
xchg
mov
lcall
mov
mov
xchg
pop
xor
and
mov
sbb
mov
hlt
outsl
cmp
lock
fwait
xchg
call
popa
mov
adc
int
cs
fistps
aaa
je
push
int3
inc
sbb
pop
inc
pusha
dec
inc
adc
addr16
pop
dec
stc
push
xor
dec
pop
mov
push
pop
out
add
aad
fnstcw
jmp
xchg
pushf
outsl
xor
ljmp
cmp
fucomi
mov
or
jbe
sub
inc
and
jg
ud2
mov
jle
xor
addr16
fldt
push
xchg
mov
jmp
dec
adc
sbb
pusha
xor
pop
shrl
aas
cmp
mov
clc
pop
xor
push
inc
fnstsw
hlt
xchg
fldl
xchg
insb
sbb
cmp
lods
mov
push
lea
test
mov
mov
lds
shrl
call
sbb
dec
scas
fnsave
fdivrs
mov
mov
or
idivl
je
aas
ret
aam
jecxz
mov
and
lret
mov
cmpsb
and
mov
outsb
jo
inc
mov
int3
fs
push
call
mov
mov
dec
push
sub
idivb
mov
loopne
xchg
push
adc
ror
cwtl
jg
jno
mov
mov
lea
sbb
push
les
fidivl
lds
lret
or
shll
mov
cwtl
dec
rcr
inc
xchg
lret
shll
dec
xor
cmp
inc
mov
jb
mov
out
cli
jb
repnz
in
jle
out
ror
xchg
shlb
sbb
into
out
mov
adc
mov
mov
xlat
out
nop
sub
stc
loop
xchg
insb
sysenter
mov
jecxz
lock
rcr
sbb
xor
lock
push
jae
push
test
jecxz
pop
inc
add
and
nop
inc
jp
add
push
cltd
jmp
cmpsb
cmpsl
dec
cmpsl
les
dec
subb
movsb
jg
xor
cltd
jno
xor
jmp
sub
mov
pusha
clc
xor
sbb
aad
xchg
xorb
insl
and
mov
push
mull
sbb
dec
pop
or
cmp
sbb
mov
test
arpl
ret
arpl
fists
dec
orl
bound
xlat
adc
aaa
add
inc
or
inc
sbb
and
pop
sbb
push
adc
bnd
sarb
adc
adc
shlb
mulb
fists
fucom
xchg
das
sub
jmp
repz
mov
cwtl
adc
fldenv
mov
lea
scas
push
rclb
adc
popa
clc
dec
xor
imulb
data16
and
mov
jg
test
xchg
pop
lahf
jbe
loope
cmp
pushf
cmpsb
dec
mov
movsb
adc
cwtl
fisttps
sbb
daa
jl
add
sub
scas
mov
adc
mov
into
mov
push
mov
outsl
xchg
inc
je
popf
dec
cltd
dec
jb
fsubr
push
inc
mov
mov
std
aad
and
std
pmaxub
popf
out
jns
pop
inc
fadd
ss
pop
sub
xor
insl
cmpl
rcrl
sub
shl
xor
fisubl
clc
test
outsb
xor
stos
outsl
xor
pop
sub
testl
mov
inc
lock
insb
mov
ja
cmc
pop
push
lahf
sbb
repnz
pop
mov
loope
aaa
leave
fs
mov
and
pop
xchg
pop
call
mov
xor
repz
sbb
mov
pop
cmc
mov
int3
outsb
mov
adc
push
pop
cmpsl
jmp
clc
es
enter
nop
insl
or
dec
enter
sub
hlt
out
sbb
lock
imul
xor
insb
mov
in
dec
add
inc
popa
mov
mov
test
jg
enter
ret
sbb
lea
lea
xchg
push
js
out
lds
imul
fidivl
push
insl
pop
sbb
xchg
sub
push
xor
repz
fisttps
mov
mov
fwait
add
mov
sub
cmp
loope
mov
pop
mov
ss
lahf
enter
xlat
ja
out
addr16
lods
pop
gs
test
or
shll
in
mov
or
sub
mov
xchg
pusha
test
cmc
or
sbb
and
cli
inc
or
jo
xchg
dec
insl
pop
lsl
test
inc
jle
es
mov
dec
xor
mov
scas
mov
push
data16
sub
mov
pop
mov
push
test
add
pusha
mov
sahf
pop
jo
arpl
mov
pop
push
rcrl
xchg
inc
pop
push
mov
mov
mov
in
sub
stc
inc
pop
mov
in
dec
add
and
cmp
lock
orb
imul
loope
push
outsb
mov
fst
or
and
test
adc
jae
cmp
movsl
mov
ret
sbb
sub
icebp
jl
adc
stos
in
pop
sub
inc
loope
mov
sub
xchg
mov
aaa
mov
jnp
cmpsb
inc
mov
xchg
out
dec
ret
les
xchg
and
jecxz
xorb
xchg
test
jl
out
testb
out
imul
xorb
fadds
pushw
mov
mov
out
sbb
cmp
push
enter
je
push
scas
xor
push
ss
cmpb
cli
inc
mov
dec
outsl
into
and
inc
mov
mov
jb
xorb
inc
sbb
xor
and
cmp
dec
jmp
sbb
das
xor
ret
push
bound
or
and
mov
pop
mov
fadds
in
or
push
imul
icebp
out
in
sub
lret
pushf
les
lret
and
xchg
adc
outsb
icebp
pop
and
mov
cmp
pop
mov
fisubrs
mov
or
rcrb
insl
subb
xor
mov
add
xorb
inc
add
mov
mov
pop
sahf
sub
je
scas
sbb
push
sub
test
cmp
fdivrs
rclb
xchg
xchg
test
inc
movsb
add
aaa
jne
mov
push
popf
outsb
das
fadd
mov
and
ret
mov
adc
mov
mov
inc
mov
ljmp
push
orb
adc
fisttps
push
pop
pop
lret
outsl
je
les
jp
ja
jo
in
mov
pop
jno
mov
pop
lcall
inc
cmpsl
scas
pop
test
int3
insl
ss
mov
sub
mov
mov
in
dec
mov
jl
addl
jge
cwtl
bound
fistpl
hlt
dec
loope
xor
arpl
mov
sub
adc
cmp
bound
out
shlb
sahf
fwait
push
dec
inc
jbe
and
sbb
mov
pop
adc
rorl
fisubs
adc
xchg
mov
or
cs
ss
inc
mov
stc
push
add
stos
and
aaa
jge
loopne
jo
jne
or
icebp
and
jg
push
adc
lret
add
imul
out
imul
fstl
push
sub
movsb
xchg
lods
sbb
pop
cmp
imul
lcall
xchg
in
sbb
mov
sbb
adc
adc
mov
cltd
test
dec
icebp
sbb
data16
adc
xchg
sti
add
mov
lahf
pop
fs
divl
nop
sub
mov
popa
sub
aad
bound
or
ret
mov
mov
pop
outsb
clc
dec
mov
es
bound
lock
dec
inc
xchg
out
or
sti
fsubrl
outsb
pop
pop
inc
insb
adc
fistl
scas
mov
js
enter
mov
aaa
and
cmc
fsubs
cmp
pop
jo
pusha
sbb
lea
or
clc
push
add
sahf
nop
lock
out
in
inc
and
mov
jno
negb
jp
push
mov
jnp
fnsave
xchg
test
mov
loopne
adc
nop
lea
and
loopne
gs
loopne
rolb
imul
jg
test
rcll
in
and
xor
push
push
jl
js
cld
pusha
mov
sub
loop
and
pop
pop
adcb
popa
cmpl
lahf
jge
shrl
fcompl
mov
xchg
rorb
cmp
adc
mov
jae
repz
mov
js
bound
jno
lahf
test
inc
shll
cmp
clc
shrb
jp
negl
clc
sahf
in
pop
roll
push
and
lcall
and
mov
mov
xchg
adc
mov
int3
mov
mov
icebp
mov
jl
and
push
les
orb
sar
daa
ja
lock
xchg
rcll
pop
push
jne
in
xchg
mov
xchg
outsl
push
daa
lret
inc
mov
cmp
lret
xchg
in
pop
jb
out
lahf
cmp
adc
push
pusha
je
dec
insb
and
mov
cmp
mov
mov
xor
push
testb
push
inc
push
in
shrb
ss
mov
aaa
out
mov
xchg
insl
inc
nop
mov
push
sub
cwtl
xor
mov
mov
cmp
fnstsw
shlb
xchg
ror
jns
and
add
fildll
lret
cmp
and
or
leave
mov
iret
mov
xchg
outsl
arpl
bound
das
xor
push
mov
mov
adc
xlat
sub
cli
jmp
stos
add
ss
push
and
test
xor
mov
sub
cld
cmpsl
jae
pop
dec
pop
js
sti
jae
das
fucomp
cmp
fsincos
add
and
std
sub
cs
adc
pop
or
lea
js
loope
int
insl
jb
mov
lahf
and
mov
fidivs
out
mov
xchg
sub
test
test
pushf
xchg
mov
sub
cwtl
jb
les
xor
int3
daa
mov
xchg
sahf
dec
das
dec
push
sbb
popa
out
xor
inc
popa
jg
or
hlt
arpl
out
and
test
sbb
xchg
call
push
dec
out
fstpt
or
push
into
xlat
jbe
jmp
xchg
adc
mov
sub
int
or
or
fisttpll
es
je
lds
lock
xchg
mov
fdivrp
sbb
sbb
xchg
pop
and
call
shll
xor
xchg
fildll
cmc
sbb
adc
lret
fldl
ret
les
mov
mul
int
cwtl
cmp
arpl
scas
pop
jne
pop
cmp
xor
mov
dec
inc
push
or
add
test
mov
and
xchg
lcall
idivb
and
mov
lea
fadds
pop
pop
sbb
add
mov
nop
jno
and
jle
out
add
lahf
mov
sar
mov
addr16
sub
ret
iret
mov
cmp
notb
sarl
mov
dec
xor
xor
sbb
xlat
mov
or
ljmp
mov
movsb
dec
or
mov
aad
in
or
insl
xchg
inc
loope
movsb
push
addl
mov
mov
cmp
pop
notl
inc
es
mov
outsb
jmp
mov
test
pop
repz
xchg
or
lods
xchg
inc
repnz
test
push
pop
and
dec
hlt
mov
test
movsb
mov
lea
and
lahf
hlt
mov
mov
xchg
iret
rcll
fstpt
pop
pop
in
lock
xor
sti
mov
mov
add
xchg
shrl
mov
dec
inc
xor
dec
hlt
jae
cld
or
in
cmp
xchg
jb
pop
out
aam
mov
sarl
xlat
push
add
loop
mov
add
xor
xchg
mov
dec
mov
add
daa
adc
xor
and
cmpsb
adc
mov
push
negb
or
idivb
lret
and
xchg
hlt
push
shrb
sub
jge
sbbl
sbb
daa
dec
pop
mov
sub
xlat
jecxz
es
push
jg
adc
movsb
mov
jle
popa
mov
pop
fs
and
mov
icebp
lds
daa
inc
nop
jle
ret
inc
aam
out
into
inc
jno
mov
lret
dec
xchg
inc
mov
and
cltd
pop
sub
push
popa
ret
inc
push
mov
add
inc
dec
mov
pop
cmp
mov
jmp
pop
pop
xor
aaa
stc
movsl
and
sbb
div
movsb
call
push
dec
sbb
loop
mov
scas
xor
jo
idivb
inc
sbb
pop
cwtl
ficompl
mov
cs
cwtl
pushl
std
fmuls
jecxz
push
mov
push
icebp
pop
dec
idivl
fstpl
ja
scas
shl
jne
insb
divl
std
cmp
es
adc
pusha
adc
fnstenv
lret
cmp
adc
sub
xchg
inc
and
jp
lret
ret
and
sbb
sub
xchg
pop
mov
loop
fdivs
pop
mov
ret
xor
mov
dec
lcall
loop
inc
and
subb
or
cmpsl
mov
push
jmp
mov
fnstenv
lock
or
sti
mov
mov
iret
push
sbb
scas
jne
mov
adc
movsl
aas
xor
into
mov
in
je
nop
mov
mov
popf
enter
loopne
mov
dec
movsb
xchg
imul
push
mov
les
gs
sbb
int
cld
xor
add
ss
pop
and
out
inc
push
cli
sub
test
cmp
js
lea
popa
in
fwait
nop
sbb
test
pop
cmp
mov
or
hlt
lods
sbb
jge
es
fmull
mull
std
cmp
mov
outsl
negl
clc
ret
stos
push
add
dec
shrb
sub
out
hlt
fidivl
mov
pop
in
cmpsl
pop
das
add
repnz
cli
fwait
arpl
jl
ja
cmp
lret
push
mov
pop
mov
gs
mov
push
xchg
mov
in
in
stos
add
mov
xor
pop
iret
push
inc
pop
jp
je
sbb
cltd
push
loop
jp
push
sub
scas
arpl
aad
dec
xor
cmp
jno
adc
dec
test
ret
ljmp
in
mov
sub
in
inc
mov
je
ret
xor
out
jnp
mov
loop
fcom
test
ds
mov
data16
mov
out
inc
aaa
in
icebp
pop
shll
sti
inc
push
push
sbb
pop
sub
imul
mov
cmp
mov
mov
popf
mov
jmp
ss
ret
nop
pop
lret
int3
roll
mov
xlat
push
sub
push
inc
sbb
mov
and
mov
mov
bound
jl
pusha
sub
bound
das
out
or
jg
sub
ds
pop
repz
and
insl
adc
rolb
hlt
movsb
sbbb
sbb
js
fmuls
cmpl
fists
mov
stos
mov
mov
rorl
push
jo
int
fiadds
dec
jmp
ja
js
icebp
fadd
lock
dec
xor
push
jl
imull
dec
movsb
pop
and
push
pop
xor
roll
mov
pop
inc
jmp
rorl
repz
stos
mov
jp
inc
andl
jecxz
popf
adc
insl
xor
mov
shll
out
pop
jp
xchg
sub
xor
pop
insb
iret
pop
pop
addr16
out
outsb
std
jb
cmpl
in
ss
jo
stos
in
mov
or
pop
and
out
out
sub
and
mov
xchg
sbb
test
xor
in
sub
arpl
add
or
sub
adc
test
jo
jnp
lahf
mov
push
jb
loope
pop
mov
jg
sti
movlps
fcomps
mov
int
xor
pop
push
push
mov
cmp
add
mov
cli
jbe
mov
roll
stos
movsl
std
mov
bound
in
daa
test
mov
outsl
cmp
stc
add
push
push
add
mov
sub
mov
call
je
jp
icebp
push
into
lock
js
sbb
addr16
sub
lcall
jne
test
loope
les
subb
xchg
dec
xchg
stos
std
sbb
adc
push
out
sti
add
call
sub
pushf
mov
dec
imul
subb
leave
add
jno
sub
xlat
idivb
enter
bnd
stos
mov
add
xor
xchg
xor
push
jae
test
cmp
xor
aas
xchg
ss
pop
jnp
movsl
scas
xchg
mov
add
rcll
push
mov
mov
cmp
bound
pusha
popf
adc
aam
dec
jno
or
lcall
loopne
add
mov
aad
addr16
lods
push
ret
popa
fs
fsub
inc
jp
shrl
dec
rorb
rclb
xchg
or
ret
inc
mov
push
repnz
inc
pop
jae
mov
jns
push
pop
enter
hlt
jge
scas
js
movsl
mov
jne
iret
cmp
lahf
aaa
leave
into
mov
xor
les
mov
out
cmp
jne
stc
in
int3
cld
xchg
in
mov
adc
inc
xchg
aas
push
aaa
fucom
or
vpmacssdql
test
sti
pop
dec
dec
adc
clc
pop
jge
data16
and
rolb
or
sahf
mov
lods
in
mov
movsb
cli
ja
inc
sbbb
loop
xchg
dec
into
mov
ret
idivw
cmp
inc
adc
out
mov
jno
pop
movsb
mov
ret
fiadds
xor
xchg
in
mov
xchg
xchg
add
addl
negl
xor
rolb
or
inc
sti
fcompl
push
dec
lods
sub
out
jae
jbe
mov
les
add
jl
add
lret
rcl
int
cmpsb
dec
push
dec
icebp
stc
xchg
and
cmp
movsl
sub
test
sub
les
jb
sbb
cmp
sbbb
fisubs
loop
cwtl
aam
leave
mov
repnz
xor
jge
inc
push
std
sti
xchg
mov
push
movsl
fsubs
jg
and
jne
push
js
call
test
out
sub
dec
sbb
pop
in
cli
ret
lock
fs
mov
or
xor
ret
repnz
mov
jo
jmp
jle
cmp
xlat
xor
push
mov
nop
inc
bound
dec
pop
sbb
dec
jbe
loop
fmull
fwait
jne
pop
push
cld
push
insb
jne
faddl
pop
daa
ss
lock
les
and
lods
mov
lock
push
mov
or
jle
sbb
cmc
jg
aas
fidivs
leave
arpl
inc
dec
push
add
push
jns
dec
ds
inc
shl
sub
inc
xchg
mov
icebp
mov
xchg
shll
fdivrl
jb
push
cmp
jecxz
loop
lret
mov
pop
mov
mov
sub
cli
filds
jle
jle
pop
or
mov
loopne
movsl
mov
mov
es
add
or
cld
je
inc
jne
icebp
out
ficoms
test
orb
dec
in
jg
jns
jle
xor
mov
daa
pop
inc
xor
das
sbb
mov
shrb
add
fldt
cltd
ret
inc
pop
and
and
xor
aad
add
addr16
in
lcall
loopne
lret
xor
in
dec
jbe
push
push
sbb
sub
inc
lock
flds
notl
push
add
dec
fcmovne
push
sbb
cld
xchg
lahf
addr16
jae
mov
ss
shrb
mov
sub
sbb
mov
add
xchg
inc
shll
or
xchg
jge
ljmp
mov
div
sub
inc
xlat
enter
sbb
mov
xchg
nop
mov
pop
sbb
scas
sahf
xchg
add
sbbl
aad
int
push
lret
ret
jg
mov
inc
shr
ss
push
pop
dec
sub
in
ds
dec
add
jb
pop
loopne
leave
mov
sub
push
out
loope
outsb
sbb
add
or
rcrl
popf
fucomp
or
xor
in
test
lahf
insb
cld
sbb
aad
xor
scas
arpl
xchg
lea
mov
sti
ret
jle
cld
das
sub
xchg
lock
int
jl,pn
imul
adc
iret
enter
adc
mulb
pop
jp
mov
push
subl
or
jae
cli
sbb
xlat
sbb
mov
inc
std
push
push
dec
inc
jmp
mov
or
cs
jle
mov
rcr
jl
stc
mov
sub
cmp
fsubrl
es
mov
mov
punpckhwd
mov
adc
push
dec
fisttpl
xchg
inc
pop
inc
sub
out
mov
cmp
inc
stos
dec
mov
insl
test
mov
popf
ret
cmp
insb
dec
pusha
xor
dec
shrb
stos
adc
arpl
enter
pop
test
inc
data16
jp
add
paddq
adc
adc
stc
inc
std
fstl
pxor
dec
jmp
loopne
xor
dec
rclb
loope
push
lret
push
out
int
dec
jg
jo
repnz
hlt
mov
add
rcrb
hlt
and
in
mov
insl
ja
inc
pop
jns
ficomps
xlat
push
rol
xor
insl
xor
fimuls
add
xchg
xor
lock
xchg
fmuls
mov
rolb
lahf
loopne
xchg
push
mov
imul
out
scas
fnstsw
in
mov
lods
call
mov
jnp
or
scas
push
sti
mov
mov
xor
lahf
push
and
or
lea
mov
cmp
test
mov
rorb
cmpsl
out
out
nop
sbb
cwtl
shr
icebp
push
shll
pop
sbb
lods
xchg
xchg
pop
or
icebp
inc
or
sub
pushl
sbb
push
imul
or
lea
insb
push
cltd
aam
dec
xchg
xchg
jecxz
inc
push
cmp
call
push
es
jb
js
fprem1
pop
outsb
xchg
jns
cmp
inc
sahf
jg
insl
inc
movsl
xchg
data16
pop
jno
or
push
or
fisubs
out
mov
push
mov
sbb
mov
notl
pop
sub
popa
jbe
xlat
push
addl
push
or
lcall
testl
in
push
mov
jg
push
aaa
test
pop
jb
sbb
or
bound
cmp
cmp
mov
pop
dec
pop
stos
shll
std
lock
ret
es
icebp
imul
cltd
dec
aaa
cmc
insb
jge
je
iret
hlt
cmp
add
js
inc
roll
imul
adc
xor
lods
mov
mov
fcoms
repnz
adc
mov
fsubrp
push
sbb
daa
in
mov
jne
lods
inc
and
ljmp
repnz
mov
mov
popa
aas
cmc
cmpb
enter
stc
out
mov
enter
lret
pop
adc
jbe
pop
mov
pop
pop
into
fnstsw
sti
mov
shl
daa
ret
fiaddl
mov
out
mov
or
push
lods
dec
shr
repnz
cmp
push
and
popf
push
xor
mov
movsl
dec
cmp
cmp
cli
add
mov
std
pop
testb
xchg
pushf
sbb
or
fcmovnb
bound
pop
sub
add
pop
sbbl
mov
dec
inc
enter
pop
and
mov
sbb
push
fisubrs
jae
bound
movl
pop
cmc
pop
cmp
sti
xlat
fwait
or
jge
sar
jl
and
lods
cmpsl
decl
cmpsb
aas
bound
add
inc
rcll
cmp
pusha
xor
inc
xchg
div
fs
int
adc
xchg
std
loope
outsl
mov
aad
or
lret
push
pusha
mov
and
xchg
outsb
lret
pop
or
call
outsl
mov
mov
cld
pop
jb
ret
dec
cmp
sub
mov
xchg
rorb
cmp
lds
pusha
shll
clc
ja
dec
fcmovnbe
pop
idiv
dec
inc
xchg
adc
pushf
mov
iret
lods
push
insl
test
mov
jns
xor
ja
xor
or
xor
jge
push
std
imul
rcl
lea
mov
or
fwait
mov
push
push
or
fistpl
int
pop
in
mov
shl
push
imul
pop
adc
jnp
dec
lock
ss
push
inc
enter
sub
mov
flds
xor
daa
shrb
rcrl
or
mov
inc
aad
sub
test
in
mov
test
jge
push
adc
movsl
in
aas
ficomps
fmul
xor
addr16
nop
fnsave
loop
dec
cmpb
xor
idiv
pop
lahf
loop
cld
jecxz
dec
sbb
ljmp
and
in
insb
cmp
cmp
sub
and
inc
jbe
leave
mov
mov
adcb
add
xchg
mov
xchg
stos
addr16
leave
rorl
mov
or
cmp
xor
ret
and
push
stc
cld
xchg
mov
ss
jnp
lods
jae
ljmp
dec
aam
nop
fcmovb
popf
jo
mov
sub
andb
pop
cltd
imul
xchg
fsubr
push
mov
jns
lret
scas
pop
icebp
orb
dec
out
clc
mov
pop
call
xor
das
inc
dec
dec
cmpsb
push
jae
mov
gs
pop
adc
pop
sbb
ficompl
loope,pt
nop
and
call
scas
mov
adc
push
jno
mov
sbb
pop
std
daa
fists
mov
mov
sahf
sahf
xchg
lods
dec
out
mov
sbb
dec
rcrl
mov
pop
in
fwait
orb
dec
in
pop
cmp
jmp
incb
jno
inc
out
pop
push
test
pusha
cmc
popa
daa
daa
sbb
jnp
xchg
or
sbb
sbb
sti
mov
dec
sbb
pop
inc
insb
rolb
inc
in
cld
adc
jmp
icebp
or
leave
inc
mov
leave
mov
movsl
fildl
out
pop
popa
add
daa
incb
int3
or
sub
mov
push
movsb
xchg
inc
int
cmc
mov
cld
adc
adc
cltd
push
popf
xchg
cwtl
or
xchg
loop
or
fwait
stos
mov
push
pop
pushf
add
pop
into
or
and
test
mov
in
sti
std
push
fmull
push
mov
sub
or
push
cltd
pusha
cmp
cmp
stc
add
imul
nop
xchg
mov
xchg
or
mov
xor
cmp
subl
shrb
dec
iret
aam
push
and
aam
mov
nop
loopne
push
xchg
frstor
fadds
pop
mov
pusha
mull
push
lret
xor
inc
outsb
adc
call
cld
mov
jmp
movsb
mov
dec
pop
jg
xchg
ds
xor
pop
cltd
mov
imul
mov
test
pop
lea
lret
lds
lahf
adc
push
ljmp
add
xchg
cld
dec
lret
fimull
and
nop
dec
insl
sub
ds
nop
adc
hlt
adc
push
sub
jnp
insb
gs
or
xlat
mov
add
frstor
pop
mov
lahf
dec
or
xchg
mov
inc
pusha
sbb
icebp
pop
xor
into
fcomip
ds
jle
jbe
adc
inc
outsb
inc
inc
int3
mov
loope
addl
sbb
pusha
in
mov
xor
or
mov
inc
add
inc
ficomps
fwait
xchg
test
jo
pop
repnz
repz
xor
std
add
push
dec
fcoml
les
mov
and
pop
sbb
mov
iret
push
mov
fidivl
dec
sub
mov
mulb
xlat
jno
ret
sbb
dec
movl
repnz
mov
cltd
push
pop
inc
sahf
add
ss
mov
push
in
ret
dec
dec
mov
out
data16
scas
cmp
dec
data16
out
inc
sti
sub
mov
add
sub
and
cld
lock
jmp
cmpsl
push
fisttps
into
cwtl
cwtl
xchg
pop
jae
out
outsl
rorb
pop
mov
rcl
mov
lods
cmp
jl
aaa
lea
jb
mov
cmp
push
fdivrs
dec
sbb
imul
sbb
cmpsl
add
outsb
jb
mov
xchg
scas
pop
add
out
inc
mov
in
sub
push
jge
push
cmc
rcrb
pop
cli
out
xor
sub
stos
jo
mov
mov
ret
test
rcrl
dec
jmp
push
push
andl
inc
shrb
test
aas
xor
bound
test
adc
cli
mov
mov
pop
loopne
pushl
in
or
fdivs
ljmp
or
jl
add
add
mov
jge
dec
dec
sbb
mov
push
jmp
cmp
and
or
inc
arpl
mov
jne
shr
jnp
mov
test
push
ss
add
add
subb
or
jb
mov
lock
xorl
adc
aad
push
inc
stc
mov
jge
mov
adc
pop
inc
adc
or
mov
xor
inc
jecxz
outsb
xor
rclb
icebp
fnsave
ret
imul
or
dec
mov
out
jae
je
mov
jp
fs
cmpsl
push
mov
repz
dec
les
fiaddl
jecxz
mov
add
ret
sbb
cmp
jecxz
pop
xor
xchg
leave
or
dec
mov
jecxz
leave
rcrl
loop
add
pop
mov
mov
push
jg
push
adc
jle
sub
ror
into
sub
popf
lock
sub
shll
aaa
xor
push
adc
ss
and
and
out
out
aas
lahf
shlb
ret
or
pop
or
lds
test
cmc
inc
enter
sahf
jle
inc
movsl
xor
mov
cmp
fsts
cwtl
fcoms
add
and
call
ljmp
adc
aaa
sub
addl
out
mov
sarb
rorb
push
leave
push
dec
pop
dec
lds
dec
loopne
imul
movsb
pop
mov
mov
jbe
jo
xchg
add
movb
lock
mov
adc
imulb
mov
and
or
jne
call
popa
mov
mov
or
test
push
sbb
pop
nop
pop
sbb
cmp
icebp
jg
push
ss
push
mov
add
adcb
sub
sbb
dec
mov
int
movhps
mov
fiaddl
andl
sbb
mov
cmp
xor
prefetch
sub
divb
push
dec
and
bound
lcall
push
push
lcall
push
and
test
sbb
shr
or
mov
xorb
add
jmp
add
mov
add
add
jmp
divb
addb
pop
int
jbe
jge
mov
sahf
inc
fs
sahf
cli
push
and
fwait
xor
loope
in
imul
xchg
sahf
aas
add
dec
out
movb
xchg
jecxz
cmpsb
or
repnz
mov
jnp
push
pop
xor
adcl
sbb
flds
cli
jns
and
xorl
push
cmp
mov
mov
jmp
rol
dec
fisubrl
xchg
xor
pusha
rcrb
xchg
jl
dec
inc
imul
sub
pop
cwtl
scas
jg
ficoms
sbb
jb
push
jne
daa
mov
sbb
or
scas
orb
xor
fs
add
sbb
leave
fidivs
or
pushf
mov
js
and
hlt
mov
or
jno
movsl
mov
call
aam
enter
jle
lahf
out
movsl
data16
mov
mov
mov
push
mov
lcall
push
cmpsl
fbld
xchg
lcall
stc
mov
mov
int
ss
ds
dec
inc
repnz
les
mov
imul
adc
loop
xchg
mov
enter
aaa
imul
cmc
fldt
cmp
repz
push
lds
rcrb
fbstp
out
and
jnp
pop
xorb
rcrb
enter
jo
lods
loopne
imul
or
mov
inc
jl
sub
cltd
or
or
nop
jg
mov
inc
inc
lds
test
adc
mov
and
mov
xor
mov
jns
int3
fistl
jnp
cmp
mov
cltd
nop
enter
jecxz
popf
cmp
mov
xchg
dec
cmp
jb
mov
adc
xchg
ss
stos
mov
arpl
jnp
xor
mov
sub
push
lods
mov
cmp
test
lret
or
jmp
inc
mov
push
test
dec
nop
jae
add
ja
rcr
ljmp
and
lcall
aaa
fs
ljmp
aaa
rolb
lods
jmp
popa
imulb
pop
sti
mov
xor
pop
jbe
jnp
cld
push
mov
nop
inc
cltd
scas
pop
jno
push
pop
popa
outsl
cmp
sarb
jecxz
jae
push
adc
push
mov
aas
sbb
sub
pop
aaa
stos
in
xchg
sbb
aam
pushf
inc
arpl
psrlw
xor
subb
jg
lock
jle
push
cs
mov
lods
cmp
scas
xor
or
mov
pusha
mov
aaa
sbb
rolb
movsb
sbb
or
or
scas
mov
aaa
sub
hlt
mov
push
pop
adc
subl
jl
lods
mov
das
ret
stos
insb
cmp
es
cwtl
lcall
fldl
dec
mov
add
mov
fst
mov
insl
outsb
pop
loopne
hlt
inc
mov
or
mov
call
pop
gs
pop
out
pop
xor
xchg
sub
lret
push
sub
jo
push
dec
repnz
outsl
out
std
push
arpl
rcrb
inc
adc
rcll
cli
mov
mov
jg
push
pop
adc
cmp
jge
jnp
loopne
sahf
in
rep
inc
lods
nop
test
insb
aad
mov
movsb
add
testb
push
addl
xor
movsl
jle
stos
out
iret
movsl
popf
sbb
inc
lock
cmp
sbb
jp
pop
clc
sbb
push
add
insl
jge
fcoml
imul
cmp
add
ljmp
pop
or
xchg
pop
popf
push
xchg
inc
in
mov
pop
nop
int
and
lea
lcall
mov
aad
das
scas
push
dec
bound
cmp
push
lds
notl
sub
sub
jb
dec
into
fsub
stos
divb
decb
xchg
jp
or
pop
add
sti
sub
test
mov
mov
mov
mulb
dec
stc
push
add
mov
mov
sub
and
loop
call
or
or
clc
leave
sbb
ss
rcl
lock
mov
jo
adc
es
inc
out
mov
pusha
mov
pop
psraw
mov
and
insl
js
sub
cwtl
push
jb
es
stos
mov
push
outsb
inc
cmp
sbb
dec
add
and
je
je
mov
xchg
popa
js
imul
out
aad
rcr
adc
inc
lds
sbb
jns
xor
sub
jne
in
outsb
push
jle
mov
andb
out
xor
outsl
enter
mov
xchg
add
je
test
sub
imull
iret
lret
dec
mov
xchg
push
arpl
insl
and
testb
pop
aam
fcmovnu
fisttpll
outsl
jl
fcoml
arpl
cwtl
add
or
lea
inc
dec
pushl
movsl
push
fnsave
adc
stos
sbb
fs
and
add
mov
jbe
cmp
xor
sub
out
pop
ret
imul
divl
lahf
adc
and
jmp
mov
add
bound
jecxz
and
or
jnp
add
and
sub
or
aaa
andl
outsl
ljmp
xchg
jno
push
imul
dec
xchg
test
xchg
scas
jl
outsb
push
repnz
dec
cmp
push
call
lock
cwtl
shl
push
cmp
stos
lret
lds
ret
outsb
or
in
icebp
and
push
pusha
or
cwtl
lods
mov
fdivp
dec
out
aas
sub
dec
inc
loope
push
jne
dec
movsb
mov
jecxz
mov
pop
movsl
lock
or
loope
push
lods
testl
fnstsw
pop
cltd
jp
movw
cmp
mov
lahf
dec
add
das
cmp
shlb
pop
mov
jae
out
cwtl
scas
xor
cs
and
adc
movsb
xor
pop
scas
iret
fistpll
xchg
fdivp
pop
xchg
mov
cmc
adcl
add
jno
mov
fiaddl
std
dec
out
jne
mov
sbb
add
jb
dec
push
jmp
inc
push
in
pop
xchg
out
in
sbb
adc
fwait
xor
mov
add
daa
xor
fisttps
cmc
in
or
aam
cmc
sbb
pushf
adc
stos
xchg
mov
test
mov
mov
daa
mov
pop
rol
xlat
cmp
daa
mov
lock
pop
adc
cmp
mov
jl
xchg
lret
in
lods
lds
scas
jno
mov
cltd
cwtl
leave
in
xchg
sub
cmpsb
addr16
in
cmp
and
cmp
mov
jae
das
popa
sar
jmp
or
push
sub
xchg
dec
popa
bound
outsb
mov
xor
inc
pusha
add
clc
ljmp
fcmovnbe
jb
test
inc
cmp
cmp
dec
stos
mov
jnp
jb
push
movsb
jl
xchg
data16
add
xchg
inc
sbb
sbb
in
push
lods
inc
out
into
adc
jmp
cmp
mov
ds
pop
iret
sub
and
adc
inc
adc
xchg
lret
mov
jne
into
stos
ja
sarb
insb
pusha
pop
pop
js
cmp
mov
sub
loope
jns
sbbb
in
inc
cmc
mov
out
add
jge
scas
cli
mov
test
fldl
outsb
mov
loopne
cmp
mov
int3
cmp
mov
pushf
imull
xor
jne
stos
cmp
jnp
mov
daa
xchg
dec
js
mov
fists
pop
mov
adc
dec
int3
adc
pop
aad
add
movsb
pusha
xchg
iret
mov
shrb
push
jl
roll
pop
fwait
mov
mov
idivl
jp
jno
decb
pop
xchg
roll
leave
loopne
adc
add
addr16
ret
sahf
test
push
cmp
lcall
loope
sub
addb
cld
xor
std
xchg
push
sahf
xchg
pop
rorl
xchg
outsl
bound
xchg
push
jecxz
and
test
cmp
dec
shr
fcmovnu
stos
dec
push
xor
sahf
xchg
hlt
lahf
inc
pop
jp,pt
mov
xor
gs
loop
sub
testl
pop
ja
xlat
xor
aam
jge
sarb
mov
shll
idivl
xor
jecxz
mov
je
scas
pusha
mov
test
adcl
sti
mov
bound
jge
in
fbstp
leave
mov
insb
xorl
adc
cld
fldt
gs
mov
movsl
sub
jno
jmp
shlb
aad
enter
mov
and
iret
aam
movsl
xor
ljmp
aad
test
cmp
std
jl
cmp
negb
push
movsl
fiadds
sub
jnp
mov
fs
mov
clc
gs
and
jg
xor
call
aad
xlat
add
push
xchg
xchg
mov
mov
xchg
fsubr
push
jg
xor
lds
inc
sbb
into
fdivl
or
mov
ss
pop
ljmp
loopne
lret
pop
pop
push
mov
in
sbb
in
adc
jmp
outsb
les
and
jns
xlat
dec
ret
iret
xor
insl
jne
jb
or
les
loope
addr16
or
out
sbb
js
data16
dec
cmp
add
adc
into
push
mov
aas
sbb
push
inc
into
mov
dec
add
imul
cmp
jg
ds
or
outsl
xor
jg
mov
pop
add
inc
fsubrl
ds
negl
fisubrl
add
mov
mov
push
pop
pop
cmp
mov
mov
mov
inc
iret
dec
jmp
test
sub
out
mov
and
sbb
sub
sahf
enter
adc
adc
push
and
rcl
push
cwtl
mov
jae
icebp
pop
mov
and
ret
out
inc
mov
testl
dec
sbb
shrl
sub
repz
and
mov
ss
sub
jmp
popa
mov
sub
lea
imul
and
jle
inc
movsb
cmc
mov
pop
test
xchg
pushf
std
aaa
mov
pop
lods
push
in
andl
mov
leave
in
mov
movsl
xchg
mov
adc
jg
mov
nop
inc
inc
sub
pop
mov
daa
adc
inc
icebp
movsl
jae
mov
add
bnd
in
xchg
jnp
dec
mov
ljmp
mov
or
mov
lret
popa
jp
test
loope
xchg
js
pop
imull
and
insl
push
sbb
sub
mov
mov
dec
dec
enter
lds
pop
cld
or
xlat
mov
cli
adc
lret
les
add
pop
mov
aaa
jecxz
pop
and
jbe
lret
scas
cmp
mov
mov
ja
ret
daa
jge
jmp
push
xchg
adc
in
popa
cmp
pop
insl
lahf
or
fbstp
push
mov
roll
call
adc
jae
sbb
lret
aaa
call
sbb
sub
cmp
mov
lret
push
mov
sub
mov
lret
xlat
pop
movsl
or
cmp
stos
jns
or
push
rolb
aam
sbb
and
test
xchg
data16
push
sti
xor
sub
in
push
pop
insb
ret
sub
ljmp
or
sahf
or
stos
je
xor
sti
lahf
jl
movsl
rorl
adc
outsl
gs
loop
jae
cmc
or
lock
mov
mov
aad
sub
push
inc
mov
scas
popf
cmp
jp
call
ja
pop
ljmp
cmc
sarb
movsb
mov
jae
cwtl
mov
push
mov
push
and
and
xor
push
aam
mov
scas
pop
decl
dec
out
push
jg
cmp
lret
mov
pop
mov
jl
mov
mov
les
dec
xchg
xchg
icebp
sbb
jno
popf
xchg
jecxz
fcomip
adc
into
inc
jp
lds
add
cmp
jb
movsb
insl
lds
cmp
in
inc
adc
sub
add
les
adc
shrl
jno
fs
and
xchg
xchg
jmp
test
sub
xchg
mov
repnz
int
insl
mov
mov
mov
mov
jae
mov
push
push
sub
call
jno
sbb
outsb
iret
insb
adcl
rcrl
scas
out
icebp
movsb
add
lock
out
xor
cltd
mov
out
rolb
fucomi
fisttpl
xchg
cmp
pop
push
fistpl
sub
roll
adc
loop
add
push
cltd
aas
fs
xchg
repnz
in
les
jge
addb
hlt
stc
int3
clc
and
in
push
pop
in
or
mov
ficompl
mov
ds
pop
mov
dec
adc
jecxz
das
lods
aas
test
pop
mov
adc
mov
or
sbb
hlt
rcrl
cmp
xchg
mov
test
mov
and
pop
xchg
loop
popa
push
rorl
mov
addr16
nop
mov
stos
inc
sbb
push
lods
inc
push
xchg
sbb
and
or
mov
jne
mov
or
push
push
mov
arpl
jns
push
sub
pop
bound
mov
xor
bound
mov
out
shrl
jbe
push
sub
jmp
dec
push
shrb
mov
scas
xor
or
gs
cmpl
lds
fs
int
les
xchg
dec
in
subb
cmpsb
and
data16
aaa
in
xchg
inc
push
jge
add
xchg
pop
sub
or
je
xor
sbb
add
inc
cs
cmp
push
cmc
cs
lea
xchg
pop
push
int
add
mov
shlb
frstor
aam
adc
xchg
mov
fucomp
add
jne
imul
mov
sti
mov
js
loope
mov
jnp
pop
int
test
mov
sub
sub
cmp
jp
add
sub
cmpsl
fisubrs
mov
rorl
jecxz
add
lret
lret
mov
mov
pop
sbb
test
mov
mov
out
mov
stos
mov
cltd
jno
inc
out
add
js
mov
dec
cltd
push
sub
out
or
bound
ja
and
push
test
addb
mov
pop
stos
addl
jno
popa
mov
jg
sbb
cmpsl
fnstcw
jge
push
insb
jno
dec
das
fistpll
mov
cmp
aas
test
outsb
mov
pop
push
stos
dec
pop
int
mov
je
lds
lods
jmp
cli
mov
jnp
pop
jne
das
push
cmpb
push
insl
mov
pop
adc
les
mov
mov
or
sub
insl
arpl
iret
out
sbb
enter
dec
movsl
mov
push
stc
inc
les
sub
call
xchg
pop
out
cmp
sarl
add
adc
xchg
int
lods
sbb
out
cmc
fcompl
pop
nop
add
adc
jno
sbb
push
sbb
orb
lods
or
aaa
into
lods
pop
sbb
pop
jecxz
mov
data16
movsl
mov
sub
loopne
je
mov
leave
pop
push
and
or
or
cmp
xchg
test
mov
es
xor
into
scas
popf
add
push
cltd
test
arpl
xor
push
mov
push
rclb
out
xchg
enter
scas
pop
mov
adc
insb
add
fstl
mov
cltd
arpl
pop
adc
cld
mov
sbbl
fcom
stc
cmp
jl
push
stc
xchg
out
lea
push
sbb
xchg
test
dec
add
repz
dec
stc
jns
or
add
ret
sahf
add
lds
mov
push
sbb
test
push
movsb
das
data16
in
add
ficompl
or
or
push
cmpsb
push
mov
push
lahf
pop
ret
in
xor
add
outsb
call
lcall
sub
arpl
test
sub
pop
rcl
pushf
mov
fnsave
push
jmp
adc
sub
rcrl
outsb
fistpl
jecxz
mov
mov
mov
mov
cmp
aam
out
inc
mov
rcl
cmc
repz
notb
popf
dec
jnp
fdivrl
shll
cmp
mov
push
xchg
dec
sbb
mov
inc
xor
mov
pop
hlt
sub
iret
xchg
pop
fidivrs
push
jle
pop
std
mov
push
or
lods
lods
lret
mov
xchg
out
aas
mov
mov
sbb
cmp
in
cltd
mov
stc
in
outsl
loope
add
out
cmpsb
adc
inc
sub
add
push
mov
popa
push
sub
das
dec
sbb
cmp
ds
mov
lcall
daa
add
js
js
stos
jl
pop
mov
out
and
cmp
popa
push
imul
add
loopne
sahf
pop
dec
push
imul
dec
sub
lcall
rolb
insl
mov
in
sbb
xchg
xchg
adc
pop
mov
push
pop
cltd
fdivrl
pop
clc
adc
mov
add
cmp
cmp
gs
iret
inc
mov
iret
sub
xor
insl
or
push
xchg
lret
cmp
popa
dec
addr16
sub
popa
cmp
xor
push
jbe
inc
mov
ss
test
and
jmp
mov
sahf
cmpsl
mov
fdivs
lea
fldt
mov
push
clc
adc
dec
xchg
push
mov
add
lock
ss
jo
pop
xchg
popa
cmp
add
mov
xchg
add
mov
sub
jge
push
push
lods
addr16
rcrl
mov
xor
ljmp
mov
ficoms
pushf
jb
adc
push
adc
mov
enter
cmp
cltd
lcall
cmp
ja
test
mulps
dec
je
leave
inc
jne
lods
fisubrl
mov
add
fsubrl
and
fisubl
sub
pop
add
in
pop
lret
iret
mov
sti
mov
lahf
sbb
inc
pop
scas
pushf
jbe
iret
adc
cmp
fdivrs
dec
movsl
xorl
adc
loop
pop
inc
subl
xor
or
js
adc
js
mov
hlt
gs
fcmovne
sbb
test
rorb
fisubs
daa
jmp
pop
sar
scas
xlat
sti
mov
dec
sub
cli
test
pop
std
push
mov
mov
pop
ret
test
sub
shrb
movsb
cmpl
ret
pop
xor
add
pop
adc
mov
lret
lods
repnz
add
addr16
out
xor
insl
cli
inc
enter
and
xchg
fistpll
pop
xchg
jns
fwait
add
ja
test
push
dec
lahf
pop
xor
aas
push
lds
push
add
mov
push
xor
outsb
repnz
repnz
and
cmp
daa
jge
fdivr
pop
mov
xchg
mov
call
ds
push
sbb
and
jg
xchg
mov
jecxz
add
adcl
std
or
pop
xchg
test
jae
sti
inc
pushl
and
scas
addr16
xchg
es
inc
inc
push
pushf
push
nop
inc
fidivl
push
push
xchg
jl
pop
adc
cs
fidivrl
push
jge
ds
lock
inc
mov
cwtl
pop
call
mov
pop
int3
int
dec
pop
das
aas
xchg
add
fiaddl
aas
jg
lahf
push
into
push
je
dec
repz
push
add
sbb
add
std
xor
mov
ss
xchg
jmp
jne
movsb
lret
and
enter
and
mov
push
xor
and
ljmp
fcom
arpl
dec
mov
jb
sbb
cld
add
andl
fs
inc
stos
pop
dec
mov
les
and
shrl
or
jge
and
mov
std
stos
stos
cld
xchg
push
sahf
mov
repnz
shl
cmp
mov
adc
in
fiadds
xlat
sub
lock
jp
cwtl
adc
out
enter
pop
pusha
jle
sbb
inc
xor
push
mov
icebp
pop
das
in
xchg
lret
or
jne
out
pop
sbb
scas
jge
movzbl
test
fs
dec
mov
sbb
aas
push
je
fwait
nop
or
ret
in
repnz
cs
fistpll
movl
aad
aaa
adc
mov
dec
outsb
pop
push
cvtps2pi
enter
int
push
jge
xchg
test
hlt
jecxz
and
dec
int
aam
mov
cmp
movsl
jo
dec
pop
xor
inc
add
cltd
lret
cmp
call
mov
loop
cmp
sbb
addr16
xlat
insb
les
jl
fstl
fs
imul
bnd
int
add
sbb
dec
add
sarl
or
xor
filds
push
pop
cli
or
jae
adc
pop
out
insb
ret
bound
or
mov
je
and
adc
es
inc
jmp
inc
or
das
add
cmpsl
jle
cli
leave
push
cmpsb
out
lcall
mov
ds
hlt
inc
xchg
mov
mov
inc
xor
jb
xchg
jge
loopne
add
jl,pn
test
imul
push
cmpsb
pusha
cmp
fmul
cmpsb
push
jne
push
clc
les
inc
ret
int
mov
test
jg
fcomps
mov
pop
adc
dec
mov
xor
jbe
stc
inc
xchg
mov
push
ja
xchg
push
pop
in
mov
sub
ja
out
mov
clc
mov
jne
test
push
xchg
ds
aas
fidivl
cmp
incl
add
jg
andl
add
push
andb
iret
mov
lret
insl
jecxz
pushf
mov
pop
or
mov
jo
dec
or
outsl
mov
and
int
add
dec
jae
mov
sbb
fwait
sti
jmp
loope
pop
mov
fistpl
scas
mov
mov
test
sub
jge
jb
xor
pcmpeqw
and
inc
test
fwait
push
lret
aaa
dec
mov
or
sbb
into
test
sar
andl
shll
mov
xchg
add
stc
out
or
xchg
xchg
test
lcall
or
loopne
imul
insl
adc
xor
jb
cmp
xor
sub
rcrl
fists
mov
push
cltd
unpcklps
popf
daa
push
or
lds
sbb
jmp
shl
in
ficoms
xlat
mov
sub
pusha
nop
mov
mov
fsubrl
jecxz
jmp
inc
in
jb
enter
jecxz
inc
dec
sub
or
xchg
stos
sub
arpl
and
mov
loop
lds
add
lea
adc
or
and
orb
aam
test
lods
arpl
push
push
mov
ret
outsb
sub
pop
fsub
cmpsb
lret
jns
or
xor
jp
lock
scas
fucomi
mov
fcmovnbe
aam
inc
data16
incb
rorl
dec
xor
xor
jbe
mov
mov
sar
mov
jbe
stos
adc
jne
rclb
cld
icebp
jno
mov
jns
push
popa
push
pushf
jmp
gs
mov
inc
xchg
xchg
mov
outsl
adc
sbb
in
jbe
xchg
push
pop
mov
and
xchg
mov
popf
lret
rcll
in
mov
mov
movsb
pop
push
in
add
out
int
lea
jo
icebp
inc
ss
les
into
adc
popf
fmuls
push
movsb
and
pop
sbb
fmull
fcompl
js
imul
jns
rolb
jle
dec
xor
sub
sahf
cmpsb
jne
mov
in
jno
mov
and
pop
dec
movsb
cmp
mov
mov
mov
or
add
and
mov
popa
pop
nop
adc
cmc
jl
xchg
xchg
fs
cli
sub
loope
mov
add
pop
pop
mov
test
xlat
sbbl
xchg
sub
imul
negb
jno
adc
pop
mov
push
lods
pop
es
xlat
ret
fidivl
jb
and
ret
dec
xchg
shlb
in
mov
pop
xlat
sbb
mov
push
daa
pop
sbb
cmovg
jb
mov
rdtsc
add
lret
or
je
pushf
fnstenv
fsubrl
aad
mov
mov
out
pop
mov
nop
arpl
dec
dec
scas
ljmp
jg
repz
lock
sbb
insl
mov
mov
push
push
test
ja
xor
push
or
sarb
imul
jge
pop
es
fldenv
test
and
lcall
inc
ret
add
jmp
sbb
push
push
add
cs
rcrb
jg
xchg
lret
push
pop
pop
push
pusha
xchg
pop
imul
add
pop
push
push
dec
mov
sub
es
xor
enter
int3
push
loop
pop
jno
flds
addr16
add
imul
push
add
ss
mov
shrl
repz
jp
xchg
inc
sub
jl
stos
push
mov
int3
out
fsubrs
nop
add
inc
idivb
jo
inc
jmp
in
adc
shl
or
imul
mov
push
mov
mov
adc
fidivrl
dec
mov
popf
cmc
mov
fldt
iret
cmp
imul
mov
pusha
clc
mov
scas
sbb
inc
or
lods
fisubl
scas
dec
test
arpl
movb
out
mov
adc
fstpt
dec
cs
sbb
scas
rcll
dec
sbb
and
dec
mov
dec
aam
sahf
pop
sub
jo
mov
push
cld
out
dec
iret
bound
outsl
dec
repnz
xchg
aaa
sahf
dec
cmpsl
in
or
mov
loopne
mov
mov
push
or
in
mov
ja
dec
mov
xchg
mov
fsubrs
mov
fmuls
mov
cmp
sbb
int3
gs
inc
rol
push
and
sbb
sub
cmp
out
adcb
jge
inc
adc
pop
ds
push
pop
test
lahf
jge
cmp
sahf
int
mov
push
adc
pop
std
jge
dec
mov
mov
and
jle
in
jmp
jmp
sarl
pushf
add
cli
pusha
hlt
jnp
adc
jg
mov
inc
cmp
iret
mov
cs
lods
jne
mov
push
mov
pusha
fucomi
add
adc
divl
jb
xchg
ror
loopne
and
stos
xchg
mov
test
mov
ljmp
out
pcmpgtw
pushf
movsb
dec
adc
push
cmovge
or
js
inc
lcall
mov
in
insl
imul
sub
and
loope
pop
test
and
sbb
xchg
arpl
jae
pop
push
cmpsb
push
cli
or
scas
add
ljmp
sbb
into
aas
popf
cmpsl
jne
xor
sbb
sub
insl
movb
add
cmp
sub
loop
sarl
das
lcall
cmpsb
cmpsb
lcall
xchg
mov
sub
je
ret
xor
adc
xchg
or
dec
pop
test
insb
pushl
aam
arpl
jno
testb
cmpsb
std
mov
bswap
add
sbb
pop
rcrb
mov
fsin
ds
sbb
cmpsl
cmp
xlat
cltd
sti
insl
push
aam
xchg
cmpsb
xchg
lea
cltd
subb
mov
inc
aaa
sub
incl
in
les
insl
dec
incl
sub
mov
roll
gs
cmpb
clc
cltd
add
inc
jp
test
mov
idivl
inc
stc
nop
mov
popf
xor
cltd
push
cwtl
sbb
jmp
andl
mov
mov
xchg
sahf
push
sbb
fidivl
mov
iret
cmp
and
test
inc
out
leave
push
cmc
sub
decl
out
push
add
xchg
push
jg
sahf
insl
movsb
stos
cmovb
and
cltd
decb
push
push
cmpsl
jns
pop
jge
and
jns
cwtl
xor
je
ljmp
xchg
out
push
insl
movsb
xchg
out
sub
push
cmp
movsb
mov
jne
or
sub
jecxz
fmull
hlt
loop
jl
lret
aaa
sbb
and
xor
imul
addr16
mov
xlat
push
mov
repz
jmp
sarl
sub
pop
mov
cmp
loop
mov
mov
push
mov
jns
inc
adc
xor
repz
lods
xchg
in
adc
cli
sub
jl
xchg
leave
fldt
push
jl
or
lds
insl
xchg
lahf
push
mov
jbe
ss
mov
mov
hlt
cld
xor
mov
out
mov
add
mull
scas
xor
pop
adc
pop
mov
dec
insb
lods
out
fldt
mov
and
lea
sarl
cmp
popa
int3
xchg
jecxz
adc
push
in
popa
push
pusha
sbb
cwtl
fsubp
sbb
aaa
inc
cwtl
dec
mov
cli
mov
sbb
enter
mov
pop
cmp
and
cmp
fptan
xchg
out
pop
xchg
std
mov
and
inc
mov
shll
imul
mov
addr16
pop
aaa
jae
incl
cmp
leave
clc
xor
push
movsl
jecxz
xchg
shll
scas
in
pop
mov
mov
int
mov
gs
xor
pop
mov
mov
das
loope
leave
sbbb
add
add
int3
push
xor
fistpll
adc
jb
sbb
lods
or
mov
mov
mov
push
or
pop
pop
ret
xor
ficoml
mov
add
hlt
cmc
es
jp
ds
cmp
jge
pop
cmp
popf
rcll
mov
out
or
mov
adc
mov
cld
mov
lods
pop
movsb
ret
xchg
add
push
ljmp
iret
cli
mov
mov
test
jg
out
mov
jmp
pop
xor
daa
jb
cltd
cmp
pusha
imul
mov
arpl
jmp
xchg
mov
dec
imul
out
movl
out
test
mov
scas
add
repz
sub
ret
jge
outsb
or
cmp
int
pop
pop
xor
inc
xchg
mov
xchg
mov
roll
cmp
xchg
hlt
lcall
pop
xchg
adc
xchg
xchg
add
icebp
lds
daa
add
add
ja
inc
sub
lret
popf
jae
inc
xchg
into
or
out
test
cltd
inc
mov
dec
int
cltd
push
or
fbld
mov
dec
xor
in
add
jp
push
sbb
shr
pop
loope
shll
inc
push
mov
fs
sub
push
mov
jge
neg
ljmp
gs
cmpb
fcompp
pusha
stos
dec
add
jae
daa
ss
decb
hlt
sbb
sub
pop
mov
or
or
pushf
adc
dec
in
xor
roll
pop
push
mov
cwtl
ret
adc
mov
xchg
jecxz
mov
shlb
imul
mov
lea
and
cld
mov
sbb
std
or
mov
pusha
pop
jbe
ds
push
cmpsb
jbe
aam
loop
vpsllq
ret
out
jns
sbb
sub
stos
jb
lock
jle
or
mov
arpl
lret
imul
leave
xchg
pop
repz
shrd
mov
mov
mov
fsubl
out
stos
push
test
add
movb
adc
in
push
aam
in
iret
cld
rcr
lods
push
cmc
cmpl
dec
adcl
cs
push
push
pop
fstpl
mov
hlt
jl
sti
mov
mov
inc
fldenv
cmp
cmpsl
sub
mulb
out
sbb
data16
xorb
inc
fidivs
aas
or
inc
xor
push
pop
adc
mov
aam
lods
sbb
lods
inc
subb
or
test
aam
mov
fnstenv
and
mov
lods
jae
xchg
xlat
orb
fldt
or
iret
ja
push
icebp
fcoml
jbe
adc
ret
jns
mov
xchg
mov
inc
push
dec
sahf
movsl
xchg
xchg
cmp
aam
jno
mov
cmp
push
jns
adc
mov
pushf
dec
mov
push
in
enter
cltd
lcall
jecxz
fwait
push
sub
mov
loopne
insb
dec
jo
xor
xchg
lock
lcall
add
xchg
mov
mov
lods
int
gs
je
icebp
je
repnz
xor
xchg
je
add
lahf
pop
pop
pop
outsb
test
dec
cs
mov
push
push
lret
mov
xorb
je
dec
aas
sub
and
jnp
dec
sub
jge
mov
loop
adc
jmp
enter
jbe
popf
pop
lods
dec
push
add
arpl
mov
std
jne
and
mov
cmp
sub
inc
mov
je
push
add
or
clc
rcr
xchg
adc
cltd
dec
pop
fcoml
jbe
pop
mov
sarl
arpl
mov
cmc
mov
xor
dec
insb
cmp
push
dec
popf
mov
in
enter
jbe
add
jecxz
add
stos
call
ret
pushf
cmp
mov
aaa
aad
sub
mov
leave
leave
lods
rolb
into
in
nop
pusha
or
inc
jo
jge
push
lods
dec
xor
push
repz
add
push
enter
push
inc
push
mov
mov
enter
lock
push
mov
imul
xor
leave
push
insb
repz
jnp
push
lds
mov
dec
je
pop
and
rcr
lods
xchg
out
data16
shr
mov
push
ds
push
push
movsl
cli
ja
cltd
mov
int3
ss
sbb
push
cmp
pushf
repnz
mov
ljmp
or
add
jo
out
dec
or
xchg
test
clc
mov
scas
repnz
xchg
addr16
mov
ljmp
xor
stos
dec
test
pop
cs
cli
mov
fcmovnbe
inc
fisttps
dec
lret
loopne
and
push
push
cmpsl
jns
mov
iret
movsb
testl
xchg
jns
inc
out
int
mov
lods
mov
and
bound
out
mov
cmpsb
ljmp
or
sbb
mov
dec
push
std
mov
roll
and
push
jp
sbb
into
cmp
je
gs
pop
pusha
icebp
jge
mov
popa
inc
mov
pop
ss
mov
aam
push
pop
mov
mull
cmp
in
or
lea
hlt
jmp
je
mov
into
out
xchg
and
mov
data16
adc
xchg
dec
xor
mov
mov
push
aaa
fcomp
lcall
jns
adc
test
sbb
clc
inc
fnstsw
icebp
das
jno
or
das
sbb
fstpt
fstpl
shll
adc
lock
scas
repz
pusha
js
inc
call
adc
sub
mov
jl
test
loopne
mov
std
dec
adc
xchg
popf
dec
adc
xor
push
std
ss
cld
xchg
loop
mov
test
lods
cmp
std
ss
cmpsb
add
mov
lea
inc
fs
add
pop
or
sahf
xchg
das
push
jne
mov
cli
push
test
pop
and
pop
sbb
lcall
cmp
cmpsl
in
out
inc
shrl
fcomps
mov
fstpt
jnp
stc
movsb
loopne
stos
mov
int3
stos
popf
addr16
cmp
pop
insb
je
aam
mov
lods
jmp
xor
sub
push
xor
adc
push
xchg
cld
lret
ljmp
or
fnstenv
dec
xor
pop
fs
sub
popf
mov
jmp
ss
ret
daa
push
mov
add
or
scas
and
cmp
cmp
addl
add
or
out
mov
dec
shld
jmp
jno
dec
sbb
sbb
repnz
jnp
mov
adc
rolb
push
scas
add
ja
shll
push
call
fxch
mov
pop
cld
scas
jmp
pop
fimuls
loope
inc
pop
loope
inc
lret
hlt
cmp
xchg
xor
pop
mov
movsl
add
fwait
or
outsl
push
cmpsb
dec
mov
outsb
xlat
test
repnz
loopne
mulb
insl
in
dec
xchg
cld
dec
jns
xchg
jb
push
inc
lea
cmp
mov
ljmp
sarl
push
add
into
aas
lods
lahf
popf
les
jmp
aaa
jle
out
push
test
adc
flds
or
gs
lods
pop
popa
negb
dec
mov
mov
adc
bound
stos
ror
pop
push
mov
mov
xchg
or
xchg
cmc
daa
xor
out
and
pop
daa
xlat
jae
mov
push
or
mov
inc
aad
cmp
and
scas
jge
dec
pmullw
mov
shl
rcr
inc
dec
add
or
js
rcrb
cli
push
mov
xchg
fwait
or
mov
enter
psllq
out
dec
xchg
mov
stos
stc
inc
push
or
add
adc
shl
add
sbb
addr16
sahf
lock
test
xchg
ljmp
and
pop
add
insl
xchg
or
cwtl
test
cli
mov
fmul
pop
push
push
lret
push
test
in
test
movsb
scas
and
ret
inc
jo
inc
iret
loopne
or
lods
test
mul
mov
sub
out
dec
popf
shrl
aam
or
mov
mov
jno
in
cli
mov
cmpsb
leave
movsb
jle
push
sub
frstor
mov
hlt
loopne
cld
mov
inc
cmp
inc
push
jp
mov
jg
test
imul
push
inc
mov
adc
out
xchg
push
and
push
cmp
add
bound
in
loop
out
mov
fdivs
sub
jmp
ds
test
mov
fwait
rcll
cld
pop
dec
dec
push
imul
sub
ss
adc
sub
subl
jae
mov
push
xlat
int
mov
inc
xchg
sub
popa
mov
cwtl
push
push
dec
jo
and
js
sbb
xorl
sub
xorb
adc
add
bound
inc
pop
insb
int
adcl
mov
xchg
in
sbb
mov
lcall
mov
push
ja
pop
mov
pop
fs
inc
jle
push
jp
das
xchg
xchg
sub
jbe
das
rcll
cmc
ja
xlat
mov
pop
in
inc
je
sbb
in
add
cs
cmp
pop
and
iret
daa
fcompl
or
jnp
call
push
cli
push
scas
out
ljmp
push
idivb
out
popa
sub
je
incb
or
cmp
push
sbb
mov
push
jmp
test
addb
sahf
sbb
xchg
mov
test
and
dec
lods
outsl
sbb
push
out
xor
bnd
sub
ret
imull
xchg
ljmp
sbbl
cmpsb
add
sbb
pop
jg
aad
xor
mov
dec
mov
andb
fisttpll
adc
mov
imul
mov
sahf
rorb
lret
arpl
das
call
sbb
outsl
das
popa
cmp
and
pop
in
sbb
sbb
in
jne
pushf
adc
stos
jns
add
ds
mov
or
add
shl
pop
inc
inc
ljmp
in
ret
cmp
xchg
jb
orl
lahf
pop
adc
std
mov
inc
mov
mov
mov
mov
jmp
dec
mov
fmulp
xchg
addr16
xor
and
shrb
pushf
sahf
test
push
inc
ss
and
rcr
cli
in
dec
or
inc
insb
imul
jecxz
jp
add
adcb
es
rcll
jg
mov
sub
mov
lock
es
cmp
mov
mov
test
mov
scas
mov
test
dec
subb
cmc
dec
stos
lcall
pop
test
mov
sbb
inc
mov
mov
or
aaa
test
cmp
enter
stc
cmp
out
imul
lret
push
adc
mov
cli
cmp
xor
in
push
xor
push
adc
pop
idiv
mov
test
dec
adc
or
sbb
pop
xor
xor
pop
icebp
push
inc
in
add
std
dec
cmovbe
pop
jnp
dec
shrb
popf
dec
out
xlat
fcompp
sbb
mov
add
xadd
push
imul
cmp
lret
and
dec
cmp
insb
outsb
jp
jle
adc
cmp
aad
pop
push
xor
popa
les
insb
mov
mov
sub
mov
jae
pushf
pop
repnz
xor
mov
ljmp
into
test
icebp
in
jecxz
lods
jecxz
aad
xor
mov
cwtl
xor
sbb
fnstenv
push
ljmp
push
sahf
test
jl
imull
rolb
mov
inc
in
pop
lods
insl
dec
xor
hlt
addr16
es
xchg
push
push
in
xchg
sub
xchg
pushf
or
andl
sub
push
int
xor
xlat
ror
sub
jbe
jle
js
std
jbe
inc
lods
push
add
in
pop
ret
mov
pop
stos
fisubl
mov
mov
cmpsl
aas
pop
cmp
xchg
or
lods
xchg
fisttpl
mov
in
in
mov
or
or
pusha
jge
fdivrp
jno
and
cmp
xchg
repz
or
les
xorl
inc
test
push
push
pop
mov
inc
out
sbb
ja
test
sub
ljmp
mov
sbb
loop
jns
sub
xchg
cmp
daa
lds
enter
sub
inc
sbb
xor
lds
loope
sbb
ljmp
pushf
mov
inc
xchg
jne
inc
jno
test
push
mov
xchg
inc
rclb
lods
cmc
mov
mov
fs
int
pop
mov
pop
xchg
sub
dec
mov
push
rorb
stos
or
les
insb
std
push
arpl
sbb
mov
jmp
add
pop
mov
xor
pop
popf
dec
je
xor
sub
mov
add
xor
mov
and
sbb
add
fisttps
int
add
xor
dec
pushf
push
faddl
inc
and
inc
push
js
mov
iret
popa
adc
clc
adc
iret
les
call
loop
jl
mov
lret
outsl
or
xchg
xor
sub
cmc
cld
iret
fnstsw
sub
fmull
out
xor
or
movsl
push
mov
repz
not
es
dec
jo
addr16
aas
jne
push
push
mov
push
clc
sub
jae
xchg
arpl
pop
jg
or
xor
cmpsb
mov
add
int3
xchg
mov
fidivrs
xor
mov
mov
lcall
leave
int
sbb
and
ja
push
stos
cld
push
mov
leave
aam
sbb
int
enter
mov
add
stc
fwait
jp
sub
fwait
and
mov
pop
mov
inc
xchg
lock
emms
mov
pop
mov
shll
mov
push
push
mov
imul
xchg
mov
les
jno
mov
lods
sub
cmp
xchg
repnz
shlb
ljmp
subb
icebp
stos
push
cmpsl
mov
dec
fcmovnb
adc
push
push
dec
faddl
test
lods
jge
push
cmp
add
push
inc
rcrb
sub
dec
sbb
fstps
iret
xor
jne
movsl
hlt
dec
in
movsb
adc
or
in
iret
in
out
cs
cmp
ror
lds
sbb
mov
mov
mov
out
inc
or
inc
mov
cld
stos
into
jnp
jge
clc
test
cmc
jp
push
sub
xor
fdivrl
cs
aaa
jne
jno
cmp
shl
adc
push
les
lds
or
mov
lahf
aad
shr
popf
cmp
jns
xchg
enter
mov
xchg
cmc
dec
mov
orl
push
clc
jmp
and
rcll
jo
out
xchg
pcmpgtd
sbb
in
in
lret
mov
push
mov
sub
mov
xor
call
jbe
add
inc
cmp
cmp
repnz
into
insb
xchg
test
sbb
xor
mov
xlat
ds
jmp
mov
fnsave
mov
pop
cltd
lea
jg
xchg
add
push
loop
outsl
test
inc
ret
add
in
test
adc
mov
flds
cltd
mov
rol
fsub
sti
jecxz
pop
sub
mov
push
divl
inc
cmp
xchg
mov
int3
int3
fisubl
pop
loop
repz
clc
xchg
push
mov
in
fisttpl
xor
leave
cli
pop
fwait
cltd
dec
sub
mov
add
pop
or
lea
adc
push
stc
mov
fcoms
and
ja
and
jnp
shr
popa
xor
sub
pop
call
int3
xchg
std
xorb
and
sbb
dec
xlat
lds
out
outsl
inc
push
pop
js
xchg
sbb
enter
pop
push
lahf
adc
addr16
lea
inc
xchg
push
jmp
and
cli
push
fstps
jbe
mov
fists
lock
ffreep
fcoml
or
popa
sahf
fwait
lock
fistpl
decb
sbb
clc
xor
test
sbbl
add
orb
lds
loope
or
xchg
rcrl
je
lods
in
imul
push
adc
push
or
add
hlt
cmp
pop
daa
out
inc
cmc
sub
cmpsb
out
fs
imul
xor
push
shl
dec
mov
push
nop
mov
dec
and
xorb
aam
clc
aaa
ljmp
ret
in
jle
imulb
rcll
jb
sub
cmc
mov
jmp
add
fdivrs
popa
std
mov
sbbb
add
daa
jo
rcll
jle
aam
popa
xlat
jecxz
mov
rcrl
jmp
fsubr
pop
mov
movsb
out
adc
inc
jle
mov
inc
out
addl
bound
adc
jmp
mov
dec
add
xchg
add
inc
lahf
cmp
call
popf
gs
arpl
clc
jbe
cmp
pop
lds
rcll
imul
test
and
and
nop
pop
ret
int3
arpl
fcompl
pop
leave
int
and
repz
sbb
test
xchg
jg
jmp
adc
mov
stos
jge
and
jle
sbb
pushf
sub
ds
adc
popf
jnp
cmc
jno
nop
icebp
arpl
pop
incb
push
pop
outsl
divb
or
ss
xchg
fs
xchg
test
fisttpll
jno
imul
stos
pop
sub
hlt
sbb
enter
pop
decb
rol
fisttpl
push
cmp
out
push
xchg
pushf
push
push
inc
test
fbstp
lahf
and
ss
stos
mov
jmp
or
das
mov
test
das
aam
xchg
fnstenv
mov
enter
pop
cmp
mov
jmp
xchg
jp
cmp
mov
lock
adc
popa
jecxz
lods
xlat
jnp
inc
test
sbb
mov
push
push
xor
dec
lock
pop
aad
cwtl
mov
sub
fcomps
imul
mov
pop
push
scas
cld
xchg
lret
lods
xor
sub
sbb
mov
pop
jae
pop
dec
imul
pop
or
cmp
cmpl
inc
mov
ljmp
cmp
stc
test
std
mov
lock
mov
ds
roll
adc
stos
or
mov
fimuls
popa
shl
mov
insl
std
lret
fs
jl
fs
repz
cmp
stos
pop
sbb
push
xchg
call
mov
push
jno
cmp
scas
fcompl
fdivrl
addr16
rorb
or
ss
out
ret
mov
sahf
xlat
fisttps
dec
jb
ret
gs
icebp
sub
call
std
or
add
insb
repz
fcompl
stos
mov
xor
insl
cld
adc
xchg
inc
xor
inc
ret
add
movsb
jbe
xchg
scas
je
cs
mov
sbb
lock
push
int
or
jmp
shl
lret
sub
add
fidivrl
sbb
out
cwtl
cmpsl
cmp
lock
out
or
les
call
inc
xor
lret
stos
hlt
sub
sbb
mov
adc
popf
gs
repnz
push
mov
jle
aaa
pop
and
xor
mov
pop
xchg
jl
fildll
repz
mov
and
jge
fcoms
mov
rolb
ljmp
aad
ja
jae
aam
scas
pushf
pop
jmp
sub
mov
aas
cmp
sub
push
push
mov
repnz
fdivrl
cmp
int
or
outsl
pop
mov
mov
lods
es
je
das
and
xlat
sbb
test
int
fadds
sub
push
in
pop
ret
and
push
sub
push
mov
gs
jle
jno
bound
aad
jg
cmp
jg
out
sub
cwtl
call
je
in
pop
rcrb
mov
pop
fisubrl
iret
daa
xchg
mov
sahf
sub
cmpsl
loopne
into
mov
and
pop
fsts
mov
add
cs
sarb
insl
sub
xlat
lock
call
hlt
mov
push
cmp
push
inc
std
aad
ja
int
lret
scas
in
rcrb
inc
sub
pusha
leave
mov
cmp
test
xchg
decb
adc
cld
jge
cmpsb
movsb
out
xor
push
jo
cmp
fsub
dec
mov
add
popa
daa
shl
rep
mov
icebp
aas
sub
test
insb
mov
xlat
js
daa
mov
nop
popf
lods
sbb
and
xchg
hlt
jp
sub
ss
or
jo
outsb
mov
dec
adc
and
pusha
inc
repz
roll
dec
lods
outsb
ljmp
out
jle
fnstenv
add
int
mov
lock
xchg
movsb
add
gs
out
repz
insl
test
lcall
mov
es
adc
mov
sbb
dec
ljmp
rcrl
cwtl
push
sbb
inc
js
rolb
sahf
out
pop
dec
mov
xchg
mov
push
cwtl
dec
push
repz
and
push
push
jns
std
dec
mov
mov
sbb
inc
mov
xchg
pop
rolb
notl
xchg
cld
dec
mov
pop
loope
jg
data16
dec
mov
jae
push
pop
push
rcr
out
call
out
lahf
jo
fildl
dec
int
inc
inc
sti
mov
lcall
lods
sub
sub
inc
stc
add
pushf
inc
push
push
and
loope
inc
add
dec
xlat
adc
outsb
mov
fs
or
fwait
decb
xor
in
push
xor
mov
cmpsl
test
cmp
jmp
pop
push
loop
addr16
out
cmp
shlb
push
add
cmp
pop
push
fbld
mov
jo
in
push
xchg
test
xchg
jecxz
dec
test
std
cs
les
mov
pop
fists
rorl
imul
jmp
sti
mov
or
xchg
mov
sbb
test
pop
imul
addr16
and
cmp
cmp
cmpsb
inc
mov
xchg
xchg
push
and
in
nop
iret
out
lret
in
clc
enter
and
ja
insl
fsincos
inc
mov
inc
fidivrs
bound
mov
pusha
fldpi
pop
stc
scas
jecxz
aas
sub
jbe
pusha
mov
scas
mov
inc
bound
sbb
int
shlb
mov
int
inc
jmp
out
mov
and
cmp
gs
ret
lods
hlt
push
lahf
sbb
inc
outsb
mov
icebp
shlb
jae
fistps
add
and
roll
in
push
push
int
out
jge
dec
fimuls
insl
popa
out
test
push
lods
cmp
sub
or
inc
adc
lcall
pusha
cwtl
fidivrl
xchg
aas
aam
push
aas
add
mov
sti
ds
idiv
adc
jb
sbbl
ret
ss
dec
xor
outsb
inc
scas
push
adc
xor
negb
push
jge
adc
jle
mov
sub
lret
rorb
xchg
or
das
push
cmp
mov
mov
fadds
and
vmwrite
sub
fdiv
cmp
sbb
push
sbb
rolb
stos
dec
leave
repz
sub
add
orps
jge
inc
sub
dec
cmpsl
loope
add
stos
xor
mov
out
rolb
insl
movsb
or
sbb
sahf
lahf
nop
push
clc
cmp
jecxz
inc
cltd
inc
jl
dec
iret
push
icebp
loop
sbb
xchg
add
loop
pop
mov
adc
das
bound
adc
popf
adc
enter
or
pop
ss
popa
push
int
jne
cs
adc
fs
jle
adc
out
arpl
inc
loop
xor
inc
pop
pop
add
or
jo
xchg
adc
loop
xor
fndisi(8087
ficompl
mov
not
mov
pop
sbb
sub
mov
lods
jmp
out
inc
push
xlat
and
stos
pop
and
lods
sub
fists
mov
dec
subl
pop
call
icebp
mov
xchg
rcr
push
aad
and
xorl
test
aam
pop
xor
stos
shll
mov
fadd
hlt
dec
pop
leave
popf
test
das
pop
cwtl
xchg
jns
mov
leave
xchg
iret
jg
wbinvd
outsb
and
xchg
xchg
mov
leave
jae
movsb
xchg
dec
call
inc
add
and
jae
enter
jbe
xlat
daa
sahf
sbb
cmp
ds
shll
push
roll
aas
call
lock
lods
mov
out
adc
xor
sarb
ds
pop
sarb
outsl
lea
fdivrp
sub
shrb
idiv
stos
out
adc
in
jmp
int
or
sbb
adc
or
jb
fs
dec
jne
dec
adc
lds
jae
push
xor
jae
cmpsl
sub
pop
mov
enter
jp
and
loop
adc
test
fdivs
pop
iret
and
outsb
das
sub
push
cmp
dec
dec
addr16
pop
in
push
xchg
out
push
mov
mov
push
incl
rcl
fists
insl
pusha
push
sub
rcll
out
mov
mov
inc
lds
loopne
xchg
ror
sbb
cld
push
add
mov
bound
push
movsl
sbb
bound
dec
das
sbb
mov
pop
aas
cld
ljmp
sub
stc
lret
jne
mov
aam
enter
cwtl
dec
mov
cwtl
mov
lcall
movsb
cli
inc
fsubs
jg
aaa
dec
push
cmpsl
cld
mov
lock
pop
jp
lods
add
imul
nop
xchg
sarl
sti
das
ja
add
sbb
ffree
je
jae
imul
inc
lahf
aas
adc
stos
inc
mov
int3
xor
push
pushf
inc
sti
xchg
inc
repnz
sbb
rorl
ljmp
test
mov
push
xchg
jle
xchg
xchg
mov
mov
cmp
xor
inc
std
sub
jp
cwtl
xchg
lods
lcall
sbb
test
sub
mov
inc
mov
jne
mov
stos
rcrl
out
mov
loopne
aaa
mov
pop
push
sarl
pop
out
cmp
dec
dec
fcmovbe
aam
lret
and
rclb
scas
movl
out
mov
rcr
sbb
pop
les
jg
xchg
inc
push
add
push
fwait
cs
fdivs
int
push
popf
and
iret
loop
popf
add
scas
ret
mov
es
jmp
fs
sbb
cmp
inc
adc
mov
sbb
cmp
ficomps
xchg
sbb
xchg
imul
pop
and
pop
or
repz
xor
sbb
lock
leave
jecxz
jb
push
inc
xchg
imul
test
pop
icebp
xorb
testl
mov
adc
mov
lahf
push
sbb
dec
mov
jecxz
mov
dec
and
fsubrp
xchg
sbb
int3
cmpsl
jl
mov
adc
or
mov
xor
dec
ss
bound
pop
std
fwait
mov
cltd
js
not
and
dec
mov
jp
cmc
mov
sub
stos
aad
push
push
scas
dec
dec
mov
adc
pop
sub
inc
rcl
or
inc
popf
pop
daa
out
icebp
cmp
inc
fdivp
aas
lds
add
mov
jns
or
mov
in
ret
shll
out
inc
mov
aas
test
scas
bound
fwait
lret
push
xchg
inc
sub
fs
cmpsb
leave
mov
or
lret
push
adc
xchg
pop
pop
jge
xchg
icebp
js
xchg
dec
xor
mov
mov
lods
push
mov
iret
mov
mov
pop
jp
test
int
data16
add
dec
dec
xor
les
mov
stc
loopne
jmp
dec
fdivrp
push
mov
pushf
mov
ds
mov
repnz
xchg
leave
dec
mov
pop
jle
sarb
fcompl
sti
arpl
sub
xchg
in
sbb
dec
cli
add
sbb
cmp
push
cmp
push
fnstcw
std
rcrl
or
lods
fs
fidivrs
and
mov
xchg
add
out
sbb
mov
push
pop
testb
rorl
push
add
testl
mov
pop
fldln2
mov
add
push
repz
mov
jmp
in
orb
cmp
mov
in
in
fistpll
push
sbb
ja
in
adc
test
repz
add
aad
sub
pop
sbb
xor
pop
push
mov
aam
repnz
js
pusha
pop
int
mov
idiv
xchg
adc
jbe
xlat
popl
shll
push
or
fbld
nop
clc
mov
bound
xor
jge
mov
fwait
addr16
test
mov
cmp
inc
xchg
test
ret
mov
iret
push
push
mov
ja
pushf
jne
aam
cmp
push
fnstsw
and
movsb
aam
pop
bound
xchg
aam
pop
jnp
mov
cmp
cmpsb
mov
pushf
scas
aam
sub
es
mov
add
ret
out
arpl
in
cmpsb
xchg
pop
shrl
jne
icebp
movb
cwtl
push
jae
cs
mov
rcl
daa
test
cmpsb
adc
sbb
sbb
mov
mov
out
idivl
cmp
pop
cmp
xchg
mov
add
fdiv
fld
je
sahf
mov
leave
cmp
or
or
das
xor
repnz
mov
xor
aas
pop
outsl
pop
jmp
cmp
add
in
dec
sahf
call
es
sar
cmp
sub
cltd
lods
aad
mov
addr16
popa
jns
dec
adc
sbb
in
repnz
fsubrs
xchg
js
mov
xor
arpl
add
icebp
add
ret
addr16
cmp
jnp
jnp
mov
lcall
push
mov
mov
mov
out
add
testl
out
pop
push
push
cltd
lret
pop
sbb
inc
adc
sub
sub
fstp
ljmp
out
mov
push
idiv
shll
or
pushf
mov
fmul
mov
mov
inc
testb
push
mov
sub
jo
adc
xchg
or
movsl
imul
lret
jl
ljmp
sub
xor
push
jge
out
ss
xchg
mov
push
inc
cmp
adc
mov
or
lock
mov
add
ret
je
imul
rorb
cmc
adc
mov
shll
push
pop
xchg
rorb
adc
sub
out
lcall
adc
mov
test
movsb
es
mov
sub
mov
adc
ja
mov
xchg
pop
cmpsl
adc
cld
sarb
repnz
add
add
hlt
sub
das
pop
pushw
test
jo
push
mov
lock
pop
sarb
rcrl
pushf
lods
xchg
std
jnp
test
sub
popf
cmp
les
mov
mov
pop
pop
adc
mov
dec
arpl
mov
ja
cld
mov
call
add
and
fildl
imul
lcall
mov
hlt
pop
mov
out
xor
mov
xchg
inc
movsb
adc
cwtl
outsl
into
jae
add
scas
adc
aam
jp
data16
pop
sub
mov
push
mov
adc
fidivrs
imul
inc
inc
nop
int
das
ret
xchg
shlb
cli
or
ja
test
push
xchg
loopne
out
cmp
sub
mov
scas
das
scas
jmp
and
outsl
mov
pusha
sbb
push
jmp
addr16
mov
xor
xor
ret
and
add
mov
sbbl
jg
mov
movsl
daa
pop
cmc
adc
pop
fmull
mov
lods
mov
xor
sub
or
mov
mov
push
push
xor
and
insl
lahf
xchg
and
ret
lock
testl
jbe
or
cmp
lds
dec
push
ja
js
pop
cmpsb
outsb
dec
ds
xor
jns
push
into
xchg
movsl
sahf
mov
xchg
fsubr
mov
xorl
push
jb
dec
aaa
lahf
pusha
outsl
sbb
ret
insb
ja
pop
push
lcall
enter
and
gs
pop
aas
leave
popa
adc
in
sbb
outsb
fsts
and
sub
jecxz
mov
imul
adc
std
roll
cld
xchg
pop
lahf
pop
daa
sub
popf
pop
sbb
sub
pushf
mov
adc
scas
or
mov
mov
mov
shl
std
rorb
mov
dec
lods
push
xchg
std
mov
fisubrl
scas
ret
adcb
xchg
pop
clc
pop
int3
out
insl
lods
xchg
int3
pop
mov
mov
cmp
add
pop
mov
mov
pop
cmpsb
sbb
pop
in
loope
gs
loopne
leave
mov
push
jbe
je
sub
cmpl
mov
sub
cltd
int
xchg
mov
lcall
add
mov
pop
sahf
arpl
dec
imul
lcall
and
pop
mov
jge
pop
or
cmp
dec
lock
insl
stc
idiv
xchg
aad
popa
push
push
mov
cli
stos
jge
pop
fwait
cmp
sbb
inc
or
imul
xor
and
neg
shl
in
push
fbld
mov
mov
fistps
std
call
mov
jle
mov
nop
or
std
jge
lods
scas
mov
cmp
orb
clc
cltd
out
aaa
and
add
or
inc
xlat
out
in
scas
cli
add
cmp
sub
fwait
pusha
inc
mov
imul
scas
lret
fnop
push
enter
repz
rorb
fisttpl
icebp
xchg
sahf
movsb
aam
add
cmc
popf
into
lea
push
lret
mov
adc
xchg
push
dec
call
adc
jae
adc
outsb
push
test
cmp
pop
jae
xor
aad
les
sbb
aam
push
sbb
jo
aaa
mov
clc
xor
outsb
cwtl
push
mov
bound
push
mov
mov
sub
lret
les
and
arpl
sub
rcrb
rorl
divb
fcoml
pop
jp
or
cltd
mov
jge
or
xor
adc
xor
sub
jnp
jmp
lock
mov
cmpsb
sbb
out
jnp
and
shll
mov
orl
jmp
jno
jnp
adc
push
fisttps
pop
jg
push
mov
sbb
jns
jg
popf
lahf
mov
add
sbb
xor
jno
sub
xor
fnstsw
dec
or
andb
pop
add
cld
test
sub
mov
scas
pop
notb
pop
xlat
push
pushf
jl
int
mov
rcl
arpl
mov
sub
std
ss
pusha
jb
test
fwait
xchg
lahf
cmp
xor
add
imul
call
cmp
notb
jl
pop
lret
stos
cltd
mov
subl
pop
mov
mov
enter
lock
sub
pop
pop
rcrl
add
das
push
pop
rorb
mov
sub
outsl
in
xchg
adc
lahf
in
mov
jge
cmp
cmpsb
lds
fdivrp
pop
pop
pushf
adc
xchg
mov
cmp
xorb
cmp
xor
mov
movsl
cli
adc
xor
pop
fnsave
loope
cs
push
inc
xor
cmpsl
mov
fldt
sub
push
fstpt
out
lahf
mov
arpl
test
mov
jle
push
lds
adc
cli
stc
ja
mov
mov
stos
sbb
xchg
aad
aad
outsb
mov
in
mov
stos
pop
cmp
push
call
dec
ficomps
rclb
pop
jmp
add
ljmp
jle
pop
adc
pop
cltd
ja
fcmovne
ja
nop
jmp
enter
fnstcw
sbb
dec
jne
lahf
movsb
dec
xchg
shl
stos
negl
mov
pop
mov
mov
in
into
pop
or
out
cltd
and
test
repnz
hlt
adc
repz
pop
xchg
loope
xchg
cmp
popf
inc
insl
sarb
ljmp
aam
cmp
xor
call
fisubs
repz
adc
xchg
jo
xor
mov
xor
sbb
sbb
xor
das
adcb
push
dec
push
rol
scas
roll
rcll
pop
adc
in
lods
repz
add
mov
in
sub
insl
add
shrl
sbb
pop
jb
sbb
fs
xchg
sbb
adc
cmp
pop
stos
inc
sbb
jecxz
inc
pusha
xchg
mov
xor
loop
add
fbstp
sub
in
aam
cmpb
not
push
lret
pop
fabs
dec
mov
add
ds
push
mov
lcall
dec
pop
imul
out
cmp
cmpsl
xchg
jge
lret
jno
jne
mov
xlat
sahf
movsb
jne
aaa
cmpsb
lods
notl
pop
mov
xchg
ret
pushf
les
xchg
test
loopne
xor
lret
in
xchg
pop
pop
ret
movsl
ja
xchg
cli
loope
sbb
push
les
xchg
pop
movsb
mov
out
cmp
bound
adc
shr
cmp
mov
mov
addr16
push
repnz
insl
andb
aad
clc
pop
adc
aas
mov
and
aam
das
pop
mov
dec
fucomp
jb
dec
sti
xchg
scas
jno
je
xchg
int3
inc
repnz
test
xor
lret
sahf
push
into
cmp
xchg
push
lds
cmp
xchg
ljmp
jae
pusha
dec
xchg
std
lcall
or
mov
inc
test
cltd
xchg
addr16
lock
cmc
inc
dec
and
loop
es
adc
mov
imul
insb
jne
enter
cmp
push
or
data16
sbb
sub
jbe
mov
pop
pop
jecxz
jg
jno
mov
push
int3
jnp
xlat
sub
sbb
pop
jl
movsl
movsl
rorb
xor
jbe
cmp
lret
out
adc
into
mov
pusha
dec
ds
notb
rorl
clc
outsb
es
xor
dec
pop
stos
cld
nop
pop
pop
jge
movsb
inc
add
mov
mov
pop
out
xor
jae
pop
ret
mov
mov
mov
leave
cmpsb
hlt
ljmp
iret
sbb
jne
lds
jp
ds
lods
cmc
insl
push
shr
pop
repnz
add
hlt
cmc
and
pop
scas
or
sub
iret
cmc
jnp
cs
cmpb
inc
and
pop
sahf
subl
mov
mov
int3
out
cs
out
lret
sbb
das
dec
dec
aam
cmc
mov
iret
xchg
cld
shlb
and
cmp
ret
fadds
mov
xchg
sbb
sub
insl
adc
repnz
ret
mov
xchg
sahf
xor
addr16
je
ror
sub
mov
xchg
push
lahf
mov
inc
jmp
ss
out
outsb
mov
dec
inc
jle
sub
jg
ljmp
loopne
push
cld
jbe
imul
ja
xchg
and
movsl
mov
push
lods
mov
ss
xor
jb
xchg
add
mov
sub
cld
popf
add
push
mov
pop
sbb
push
sub
cmp
repz
cmp
xor
bound
test
pop
push
jp
cli
push
fwait
add
inc
push
mov
rcrb
imul
insb
xor
repnz
pop
cmp
stos
je
sub
sbb
push
unpcklps
int3
outsb
cmp
add
addr16
fistps
sub
cmp
push
inc
bound
xor
cmp
cmp
mov
push
or
inc
jg
ja
sarb
sub
sbb
or
sub
cmp
push
pop
mov
and
push
push
or
test
gs
jne
aam
scas
cli
xor
inc
pop
adc
add
test
outsb
movsl
push
push
dec
or
inc
jl
jmp
cmpsb
add
dec
jle
jb
sub
fildll
je
jmp
out
daa
insl
sub
pop
repz
push
mov
and
pop
lods
sub
inc
pop
int
fstpt
out
pop
cli
jbe
orb
cwtl
fcoml
dec
adcb
push
mov
stos
fstl
jno
insb
fcomps
jae
dec
mov
mov
test
mov
cmpsb
out
jno
into
adc
pushf
popf
les
lods
adc
mov
aas
mov
or
adc
js
cwtl
negb
lret
dec
or
push
int
mov
cmp
dec
repz
push
pop
icebp
jbe
call
jle
repz
loopne
xchg
dec
and
cmp
jg
mov
push
or
in
jns
jnp
jns
xchg
std
inc
repnz
lock
lea
xchg
inc
jp
pop
inc
rolb
and
std
xchg
push
dec
inc
dec
in
add
inc
mov
nop
rcrl
aam
fdivrp
pusha
lods
adc
mov
movsl
xchg
ljmp
lods
movnti
mov
inc
cmp
mov
push
push
xchg
xchg
cmp
popa
mov
test
test
jns
or
cld
xchg
and
mov
call
and
fwait
dec
cmp
in
out
movsl
sti
daa
sbb
or
push
ljmp
popa
mov
pop
mov
fucom
add
mov
fistpl
jp
mov
pop
dec
fadds
in
popf
shll
test
ret
cwtl
push
xchg
dec
cmp
ret
lods
out
mov
lds
sbb
aaa
inc
out
push
orb
insl
push
or
push
mov
mov
push
call
pop
push
mov
bound
std
int3
adc
mov
mov
pop
daa
cmp
aas
xor
dec
or
cli
add
mov
data16
fwait
cld
inc
inc
sbb
pop
cmp
lret
or
jne
ret
mov
mov
adc
movsb
mov
sub
mov
roll
add
hlt
cmpsb
or
push
add
lret
in
inc
ret
push
dec
mov
push
push
and
lock
push
outsl
rcrb
ja
out
mov
cmp
idivb
imul
ds
xor
shl
mov
cli
hlt
xchg
ljmp
les
iret
mov
ret
mov
push
jge
leave
sub
repnz
xor
or
mov
cwtl
int3
push
adc
cli
inc
mov
xchg
cs
sbb
mov
jl
cmp
cmp
lods
add
cmp
xor
dec
aas
dec
add
insb
xor
mov
repz
movb
inc
clc
mov
jg
sbb
add
sub
in
rolb
mov
ret
mov
rorl
push
test
in
xor
test
push
mulb
fwait
sub
xchg
and
sbb
add
and
lret
cmpsl
loopne
loopne
pop
or
sbb
xchg
test
mov
call
test
ja
fists
cmc
fldcw
mov
ret
fwait
sbb
ret
test
xor
push
dec
mov
adc
cmp
incb
xchg
sbb
bound
xlat
pop
pop
cwtl
adc
addl
inc
dec
add
or
scas
std
sbb
mov
mov
out
jge
in
lcall
lea
loope
in
push
push
and
inc
mov
ja
push
out
sbb
jecxz
cmp
mov
inc
ss
xor
sbb
jne
sti
iret
jno
jne
nop
adc
xor
sarb
lods
push
adc
sub
insb
jg
inc
mov
push
mov
in
in
call
jecxz
out
push
or
jbe
dec
xor
fisubs
lahf
out
aad
mov
rorb
fidivl
push
sbb
jp
jl
adc
xchg
or
xor
gs
xchg
out
jae
lcall
cmc
pop
mov
bnd
xor
jo
mov
push
arpl
loop
pop
push
lahf
call
imul
jns
aam
push
mov
imul
add
inc
cs
mov
adc
dec
movsb
nop
inc
icebp
outsl
sbb
sbb
int3
and
insl
call
movl
leave
xchg
sub
cmp
xor
pop
and
push
sbbl
lcall
xchg
mov
icebp
or
xchg
mov
rcr
mov
out
adc
add
es
decl
into
sub
lcall
sbb
sub
xchg
cmpsb
dec
mov
xchg
icebp
shr
mov
ret
sub
outsb
push
loopne
fstl
testl
adc
add
dec
mov
add
mov
int
popf
lea
jmp
xchg
mov
xor
int
jae
js
mov
stc
aas
in
stos
mov
mov
inc
adc
nop
cs
cli
fwait
test
mov
cmp
dec
xchg
fs
ret
aam
testl
fisubrl
std
fimull
mov
sti
out
lea
scas
jno
sub
xchg
pop
mov
push
push
push
shl
iret
std
sbb
divb
call
out
add
cmp
rol
ret
mulb
mov
or
les
aas
out
mov
push
adc
or
xor
ret
repz
bound
out
and
pop
xor
jne
mov
pop
push
cld
push
daa
stos
xchg
dec
dec
ds
mov
push
sub
push
int3
jge
jmp
xorb
mov
or
xor
aam
aam
imul
push
das
inc
xchg
inc
cli
repz
jo
out
jo
xchg
shll
int3
pop
jb
mov
pop
imul
fucomip
lcall
push
jnp
in
repz
dec
mov
add
pushf
mov
lcall
pop
or
aad
push
cwtl
test
mov
les
xchg
add
rcrl
adcl
xchg
push
jp
in
stos
int3
ret
lods
xchg
stos
pop
dec
popa
nop
push
cli
and
and
pop
adc
gs
jp
je
je,pt
test
or
pop
jb
sahf
out
cs
fldt
adc
mov
sub
adc
enter
sahf
and
push
xchg
jle
pop
xchg
out
popa
push
int
lahf
int
loop
sbb
or
mov
jmp
mov
pusha
inc
mov
insb
pop
push
sub
sti
push
adc
inc
daa
gs
lds
and
push
and
sub
add
sub
pop
sub
sub
mov
cmp
mov
sti
ret
iret
inc
mov
push
ss
xchg
and
push
lods
stc
or
inc
outsl
sahf
test
adc
xor
cmp
sub
sbb
fldcw
loopne
scas
loopne
sarb
inc
xlat
jmp
xchg
and
jmp
xor
ror
sahf
sub
jge,pn
fcoml
cs
fisttpll
out
adc
les
out
ljmp
dec
pop
lods
ds
and
in
dec
adc
dec
data16
outsl
jmp
xchg
push
pushf
sbb
in
cli
jl
ss
mov
pop
sub
cmp
mov
inc
movsb
push
inc
outsl
lods
out
insb
outsl
push
add
add
shll
lods
push
xchg
bound
fisttpl
xchg
xchg
xor
repz
push
or
pushf
cmp
push
push
pop
sub
push
ret
mov
daa
jg
xchg
lods
fnstsw
test
or
pop
movsl
sub
xchg
xor
insb
and
pop
mov
and
push
ss
js
lret
mov
data16
mov
add
popa
cmpsl
mov
mov
imul
inc
xor
daa
iret
push
lods
jno
mov
aam
sti
movsb
xchg
orb
mov
and
es
pusha
daa
pop
xchg
lret
mov
mov
ljmp
mov
adc
rclb
sbb
mov
mov
push
loope
sbb
dec
stc
icebp
jecxz
fcoml
rcll
mov
jb
in
outsb
ja
aad
repz
int
test
adcb
movsb
cli
dec
add
mov
and
test
add
xchg
push
jb
pop
cmp
xor
push
jmp
iret
push
or
push
mov
xchg
cmp
and
push
xor
push
adcb
mov
cmc
int
jle
lret
mov
mov
cmp
addr16
jnp
mov
mov
mov
out
sub
xchg
icebp
jb
fcom
mov
adc
mov
cmpsb
jns
or
pop
fs
outsl
dec
int
jne
or
inc
sbb
jle
out
jl
hlt
mov
sbb
divl
mov
lods
aaa
cmp
in
or
ljmp
mov
sahf
subb
in
clc
sbb
adc
mov
or
push
adc
push
and
shlb
mov
pop
xchg
push
pop
jecxz
ret
dec
scas
in
xchg
mov
int
inc
js
pop
shrb
aaa
andb
add
pushf
cmp
xor
popa
pop
push
or
aas
stos
push
xor
mov
loope
or
add
clc
mov
sbb
imul
repz
dec
sbb
ucomiss
push
shlb
clc
xor
cmp
dec
fisubrl
dec
and
in
or
popf
nop
movsb
cmp
aaa
mov
les
xchg
loopne
mov
jae
inc
lahf
cmc
inc
out
rdmsr
cmpsb
sub
xchg
push
dec
bound
jle
jg
xchg
adc
popf
xor
fstpt
imul
aaa
call
dec
je
jbe
ljmp
jmp
pop
sbb
jmp
loopne
pusha
sbb
sub
test
pop
imul
loopne
cwtl
aam
vmread
sbb
daa
push
fstps
inc
das
sbb
inc
push
jle
mov
shll
jno
jmp
mov
in
adc
pop
add
into
out
pop
subb
in
or
push
cld
lret
mov
fsubr
adc
in
cmpsb
movsb
mov
sbb
or
pushf
lret
lret
leave
cltd
adc
xchg
jae
or
xchg
sub
cli
pop
xchg
mov
bound
mov
jbe
jns
xor
add
cli
inc
lods
and
je
pop
sub
rorl
mov
aam
test
sub
mov
and
jne
inc
adc
shll
mov
aas
cmp
sbb
inc
sbb
mov
xchg
cwtl
mov
cmc
sub
inc
ror
loop
popf
lret
dec
jl,pt
bound
into
repz
mov
pop
push
add
mov
jb
push
inc
repz
cmpsb
aad
into
cltd
mov
addr16
and
iret
std
xchg
inc
pop
push
and
jns
dec
fwait
push
xlat
lret
div
inc
inc
imul
cmpsl
es
cs
pushf
sub
add
and
push
cmpsb
imul
fsubrs
pop
xchg
and
stc
negb
shll
frstor
scas
xlat
nop
sub
lock
fadd
mov
ss
sarb
jp
push
inc
mov
jnp
loopne
sbbl
add
rcll
adc
popa
inc
mov
in
jno
add
inc
sub
movsb
add
fs
xchg
add
cmpsl
xchg
lods
pop
push
subb
cmp
cmp
cmpsb
sub
pop
mov
in
cwtl
pop
xor
dec
out
and
cs
into
jns
mov
jle
push
scas
mov
and
addb
adc
pusha
sbbb
pop
dec
mov
jle
lcall
and
cmp
dec
pop
mov
inc
ffree
in
popf
aam
ds
loope
in
cmp
sub
stc
addb
xor
ds
xor
shl
cltd
mov
pop
mov
loop
std
fisubrs
xor
jmp
out
rclb
lret
jns
adc
sub
push
ja
pusha
push
fdecstp
push
cmpsb
notl
mov
sub
insb
adc
pop
call
mov
gs
dec
xor
shl
repz
negb
jecxz
arpl
jnp
and
fs
movsl
movsb
inc
mov
ffree
clc
xchg
jno
das
mov
dec
les
mov
test
pop
rcrl
inc
jmp
inc
pop
sub
xlat
roll
bound
int
adc
push
shrl
pop
add
mov
lods
mov
fistl
sbb
dec
ret
push
addr16
cmpsl
push
fmuls
mov
mov
std
fimull
push
js
in
mov
int
ljmp
mov
faddp
ja
std
in
adcb
lret
inc
adc
test
push
mov
cs
in
sub
cwtl
fs
jno
inc
lret
xchg
jns
int3
push
adc
dec
clc
hlt
je
xor
cmp
nop
push
faddl
loop
ror
fiaddl
dec
dec
imul
cmp
mov
bound
mov
inc
pop
test
icebp
mov
add
mov
cmp
sti
psubb
cwtl
cmp
je
or
out
cli
mov
js
adc
xor
stos
fisubl
je
movsl
mov
dec
rorl
mov
sub
xchg
and
push
in
inc
push
mov
cmp
test
popa
jp
or
sbb
insb
mov
ds
jle
clc
sbbb
dec
jmp
enter
jne
int
push
mov
mov
and
lret
sub
outsl
ret
xchg
mov
mov
sub
push
sahf
mov
in
in
push
xor
cli
subb
push
mov
mov
into
ja
in
jle
adc
inc
mov
jl
jae
jno
xchg
or
add
push
push
es
pop
push
add
out
jbe
xchg
sar
xchg
add
mov
cmpsb
dec
insb
push
arpl
add
sar
ja
add
fisttpl
push
sbb
adcl
cmp
stos
push
shrl
mov
or
test
pushf
cmp
sbb
mov
mov
inc
mov
sub
dec
out
mov
into
pop
ret
stos
xorl
loopne
cmp
xor
shl
pop
ja
mov
aad
push
clc
scas
jae
xchg
repnz
mov
or
insl
repnz
push
and
cmp
mov
loope
lock
mov
lahf
cmpb
pushf
push
xchg
xchg
push
mov
pop
repnz
std
sub
mov
and
fsub
xchg
xor
add
xlat
adc
divl
mov
lods
out
icebp
stc
and
inc
mov
popf
adc
cmp
aaa
das
jmp
fcmovne
cwtl
dec
sbb
pushl
mov
jbe
mov
inc
push
outsl
cmp
sub
ljmp
fisttpl
test
push
cmp
mov
ror
movsl
hlt
dec
clc
jnp
lods
orl
sbb
int
xchg
movsb
or
dec
in
int
int3
add
jnp
sbb
pop
jecxz
push
mov
aam
sahf
loopne
sub
stos
cli
lods
xor
test
testl
jo
insl
icebp
sub
lea
scas
lock
jp
test
cmp
jl
add
ljmp
xchg
push
dec
lock
pop
fildl
fs
add
inc
cmp
sbb
cld
loop
rolb
insb
mov
mov
fdivrs
arpl
popa
movsb
add
mov
cltd
cmp
test
mov
sahf
ss
jge
lds
dec
rcl
outsb
add
sbb
fisttpll
sbb
int
jle
loopne
stos
or
jp
movsb
loopne
testb
out
sub
stc
or
ja
shrl
mov
fwait
pusha
outsb
mov
jno
ss
mov
cwtl
dec
lret
fimuls
dec
xor
dec
and
or
jne
jno
es
stos
notb
imul
add
or
sbb
enter
inc
xor
imul
inc
push
ja
and
dec
cwtl
or
sbb
pop
mov
jbe
jne
jno
cmp
and
test
cs
inc
inc
xchg
pop
data16
loope
inc
fs
rcrb
mov
sbb
in
push
or
dec
hlt
or
xchg
or
fnstenv
or
fwait
push
pop
xchg
insl
lods
jmp
mov
dec
sbb
mov
adcb
cltd
dec
push
loope
jno
xchg
out
outsb
add
mov
jmp
or
hlt
dec
fld
je
subl
icebp
xor
imul
fldl2t
mov
clc
adc
xor
mov
pop
jns
and
xchg
push
mov
rorb
mov
jne
adc
lcall
jne
nop
mov
icebp
pop
test
bound
movsl
orl
mov
cltd
sub
loope
adc
push
mov
mov
pop
test
and
jnp
mov
xorl
mov
cli
rcrb
pushf
inc
into
adc
adc
adc
push
adc
cmp
mov
imul
stos
jg
pop
jae
loop
out
jbe
pop
lahf
xlat
jmp
clc
out
clc
fsubrp
pop
mov
pop
out
lods
jbe
mov
loop,pn
imul
xchg
ljmp
lods
mov
mov
mov
or
popa
es
pop
mov
mov
xchg
mov
mov
mov
lret
mov
outsb
mov
pop
xor
pushf
sub
push
dec
sbb
fwait
jmp
mov
or
xchg
sbb
mov
sti
mov
movsb
jle
cmp
xchg
add
mov
inc
add
lret
cwtl
jl
adc
xchg
dec
pop
xchg
repnz
jp
mov
lds
mov
ret
jg
adcb
inc
adc
lods
andl
gs
int
mov
stos
nop
fadds
ja
mov
mov
out
aam
lods
rclb
les
dec
ljmp
les
iret
in
push
fstpt
cmp
insl
pushf
jne
fcmovbe
jo
insl
das
dec
mov
lret
inc
xchg
xchg
call
push
std
rcll
mov
push
mov
push
push
mov
arpl
adc
adc
add
rorb
nop
out
push
sub
inc
jne
dec
mov
inc
test
clc
dec
pop
push
mov
fimull
push
xchg
xor
adc
and
jmp
xlat
cmp
je
inc
es
inc
int
sub
fwait
cmp
sub
je
jmp
inc
rcl
mov
or
lds
and
adc
dec
fistps
iret
xchg
sbb
mov
dec
cmp
mov
mov
ficompl
dec
sbb
in
cwtl
pop
dec
aas
mov
mov
out
inc
movsl
mov
aas
jne
test
fsts
xchg
call
adc
out
adc
shlb
add
stos
mov
jle
xchg
cmp
int
hlt
shrl
and
mov
pop
je
test
movsb
lahf
fistpll
mov
rorl
repnz
jecxz
jb
out
popa
aam
dec
in
mov
add
jb
andb
fs
xor
out
out
sbb
xchg
or
jp
sbb
adc
add
pop
leave
pop
push
push
push
fnstsw
in
or
mov
mov
mov
push
loopne
dec
lret
out
in
pop
push
scas
push
inc
mov
repz
int
into
sbb
jmp
gs
or
aam
and
jge
or
add
aas
dec
dec
push
xlat
bound
pushf
daa
or
mov
xchg
loope
imul
sub
lods
pop
mov
dec
push
imul
test
add
dec
mov
rorb
sti
push
out
fsubrs
and
aam
xchg
mov
stos
lock
aad
fstpl
cmp
imul
jbe
mov
shll
hlt
fcoml
pop
inc
mov
mov
shrb
jo
sbb
daa
ss
lret
mov
dec
aad
es
out
orl
jnp
and
and
lock
mov
movsb
in
push
fldl
inc
fisttpl
push
mov
andb
xor
imul
js
sbb
loope,pt
out
jo
adc
sarb
pop
aaa
xchg
sub
cwtl
push
loop
sar
mov
loop
jp
inc
fiaddl
outsb
dec
pop
cmp
inc
fisubs
xorb
shlb
cmp
clc
in
mov
pop
mov
push
out
inc
das
nop
inc
adc
or
leave
rorb
mov
dec
or
inc
mov
pop
pop
and
or
hlt
pop
ret
jmp
pop
mov
lea
out
rcr
stos
xchg
push
fwait
cmc
mov
shll
lahf
fidivrs
mov
xchg
sbb
outsl
push
movsl
lods
std
andb
lea
clc
orb
and
ljmp
push
push
lret
mov
xor
mov
adc
jns
adc
mov
jle
push
test
cmpsl
xor
nop
add
dec
cmp
sbb
out
loopne
xor
sub
mov
in
push
insb
repnz
add
dec
xchg
sbb
idiv
aas
mov
pushf
add
mov
lahf
sahf
dec
int
cmp
push
data16
jecxz
jmp
popf
mov
adc
mov
mov
dec
pop
aas
loop
or
popa
out
mov
movsb
mulb
xor
les
mov
pusha
jne
lcall
js
push
push
aas
scas
nop
mov
jge
xchg
arpl
or
xchg
iret
in
and
test
xorl
int
mov
std
lods
out
scas
xchg
das
push
sahf
ja
xchg
repnz
adc
addr16
lock
sbb
push
shl
pop
jge
mov
mov
bound
lods
cmpsb
mov
mov
mov
mov
xor
inc
data16
jge
add
push
jecxz
sub
lds
xchg
sub
mov
pop
lret
clc
daa
lds
nop
stos
push
xchg
jle
jbe
outsl
movsb
gs
movl
js
push
out
test
jge
ret
inc
cmpsl
inc
mov
mov
roll
pushl
xchg
outsb
test
or
sub
mov
pop
loope
or
inc
ds
push
in
lods
std
je
cmp
pop
insb
fstps
cmc
push
and
in
js
es
cmp
mov
xchg
dec
push
ljmp
outsl
ss
xchg
jae
inc
xor
dec
ret
inc
sub
inc
add
mov
push
inc
cld
pop
mov
and
mov
mov
icebp
sti
xor
mov
scas
mov
shlb
push
add
add
insl
andl
test
dec
mov
testb
xchg
or
sub
aam
fdivrl
pop
repz
sarb
out
mov
movb
loopne
test
jno
dec
and
leave
sub
and
xor
movsl
mov
jae
fcoml
push
sbb
stos
movsl
shl
xor
push
sarb
cld
clc
push
fnsave
inc
inc
test
mov
cmp
ret
pop
dec
shl
aas
push
ret
mov
pushf
sub
jnp
jmp
cmpsb
xor
iret
clc
fnstenv
mov
xchg
sti
iret
sbb
addb
push
stos
push
stc
mov
scas
inc
arpl
xor
fstps
push
sbb
mov
jb
insb
test
je
sti
fidivrl
icebp
xor
sbb
idivb
cmp
sub
ljmp
gs
ss
xor
jecxz
lods
ds
aam
sub
fsubrs
insb
cmpl
std
mov
jge
bound
xor
pop
add
test
out
imul
daa
jns
inc
xchg
iret
xchg
push
hlt
sti
ds
dec
andl
jmp
pop
sarl
mov
ret
bound
xor
pop
gs
xchg
popf
clc
arpl
or
testl
mov
xchg
and
in
cwtl
leave
xchg
sbb
mov
mov
ret
repz
hlt
pop
jae
jp
mov
lods
sub
ss
icebp
cwtl
je
insb
xchg
xor
out
popa
gs
mulb
inc
sbb
adc
lds
sub
dec
xchg
ljmp
out
int
push
xor
inc
jns
jmp
rcll
mov
push
outsb
ret
xchg
jb
repnz
cmp
into
adc
repnz
sarb
pop
call
sbb
lea
rcrb
or
repz
fdiv
pop
mov
xchg
push
arpl
jne
repz
in
fimull
call
ljmp
sub
out
cli
outsb
xchg
sbb
jno
xor
pop
inc
sbb
mov
inc
mov
lods
add
pop
jle
imul
test
xlat
fcmovbe
fstl
mov
mov
repnz
in
dec
dec
stc
push
cmp
outsb
loop
and
popa
xchg
aaa
loope
fsubs
addr16
in
hlt
ja
push
fnstcw
or
pop
stos
aam
enter
sbb
lcall
int
jge
push
jo
leave
xchg
xlat
fstpt
js
jmp
push
xor
sub
pushf
nop
imul
xlat
rorb
test
int3
add
bound
aas
int3
enter
fwait
std
ret
dec
popf
xchg
xchg
add
cmp
test
xchg
les
add
lods
dec
fs
fsubrp
in
pop
aad
sbb
jno
lods
and
push
out
fcmovu
mov
or
dec
mov
repz
insb
jae
cmp
cltd
jp
sub
pop
mov
ret
scas
or
arpl
xor
das
xchg
xchg
sar
daa
mov
sbbl
jp
roll
push
adc
adc
sbb
sahf
inc
out
cmpsl
push
cmp
mov
xor
sub
lods
popa
popf
fistpll
mov
mov
test
shlb
arpl
cmp
scas
cmp
jg
push
icebp
fsub
jbe
pop
mov
popa
test
jo
and
imul
sub
sarl
adc
rcll
add
add
cmp
sti
pop
fists
in
pop
pop
popf
les
fidivrl
movb
pop
into
xlat
ror
push
inc
pop
aad
adc
adc
jmp
bound
mov
push
out
ja
mov
pop
jne
cld
pop
out
push
push
cld
les
fimull
and
fildll
sub
scas
cmp
fists
int3
mov
jns
imul
cmp
push
or
cli
rcrb
es
and
test
inc
sbb
jp
in
mov
jb
push
cmp
mov
jmp
jg
stos
movsb
mov
mov
shll
stc
es
repz
mov
int3
clc
mov
push
inc
pop
imul
xchg
push
xchg
clc
and
into
mov
jno
mov
sbb
mov
mov
nop
outsb
add
push
and
mov
mov
hlt
addb
mov
and
faddl
and
sub
addr16
xchg
pop
outsb
loopne
ss
das
shrl
ficompl
inc
pop
std
mov
mov
scas
add
sbb
sbb
sahf
lcall
sbb
enter
push
dec
adc
rcll
mov
std
je
mov
fdiv
jo
push
leave
mov
gs
mov
jge
loope
or
gs
push
jbe
test
xchg
mov
push
mov
test
std
lods
push
and
pushf
movsl
jl
add
jecxz
pop
ficoms
movsl
lods
clc
jle
sbb
pop
lret
push
xor
jne
cmpl
jl
cmp
scas
test
pop
dec
mov
cmc
jl
in
test
cmc
arpl
lods
xchg
mov
js
sti
loop
lret
stos
es
pand
ret
insb
xor
mov
call
mov
mov
out
rorl
test
lret
lods
das
dec
sahf
stos
lds
add
int3
dec
xchg
in
pop
dec
jnp
sub
mov
shrl
lods
enter
adc
scas
push
popf
lret
push
flds
enter
sbb
lahf
or
cmp
sub
inc
mov
mov
dec
cs
cmc
test
fwait
inc
nop
dec
xchg
cmp
mov
pop
sahf
js
pop
rcr
jno
out
shrb
pusha
into
ja
lcall
lea
and
es
fcmovne
lret
mov
xchg
cmp
test
add
or
xchg
ds
and
and
xchg
ljmp
std
xchg
nop
xlat
loop
push
cmp
or
insl
repnz
fwait
mov
jg
push
icebp
mov
mov
aaa
add
xchg
ds
pushf
pop
call
jecxz
xor
sti
lret
test
out
xor
adc
out
jmp
cs
pop
jnp
mov
push
pop
pop
insl
movsb
scas
lcall
cmp
jp
imul
push
shrl
fs
fists
ljmp
add
jecxz
jecxz
sub
mov
nop
add
insb
fwait
repz
leave
pop
stc
sub
jmp
cltd
fsts
lcall
ds
jmp
push
stos
pop
or
ds
cmp
lods
test
fmuls
push
int3
fimull
sbb
or
push
jnp
es
and
das
and
mov
mov
mov
xchg
cmp
pop
es
inc
out
adc
dec
cmp
js
lds
rorl
xchg
pop
out
call
or
pop
mov
cmp
lret
and
inc
jecxz
push
mov
mov
add
xchg
mov
dec
mov
pop
xor
or
mov
mov
jbe
jbe
or
mov
arpl
popf
ficomps
inc
pop
push
pop
add
das
fldt
mov
insl
rorl
cmpl
inc
pop
dec
es
xor
sub
je
cmpsb
bound
jl
in
sub
mov
in
lret
das
imul
imul
and
cli
push
in
sbb
and
in
xchg
sbb
sub
or
ret
movsl
add
pop
clc
pop
cmp
xchg
testl
jecxz
into
or
push
mov
mov
shrb
out
pop
imul
pop
lock
ret
push
pop
scas
daa
fimull
jb
pushf
or
mov
data16
aam
enter
mov
jp
and
adc
out
cwtl
in
scas
jb
xchg
jl
sub
jb
or
mov
jle
fcoml
out
aaa
test
cli
fldt
or
and
pop
pop
xchg
push
sbb
or
or
enter
cmpsb
imul
or
std
inc
mov
addr16
cmp
sbb
ljmp
out
cmc
xchg
mov
jmp
xor
mov
sub
xlat
pop
pushf
cmp
mov
mov
pop
out
inc
mov
fs
scas
push
fbstp
mov
or
rolb
and
pop
stc
test
inc
adc
js
push
test
add
push
add
dec
pusha
mov
cmp
dec
adc
aas
mov
dec
xor
pop
insb
mov
dec
lds
xlat
cld
imul
jg
sub
insl
mov
aam
pop
xor
sbbb
lods
inc
fs
pinsrw
jnp
test
sbb
push
jg
outsl
dec
mov
popf
cmpsl
std
pop
sbbb
and
nop
push
sti
mov
and
lret
cmpsb
out
cmp
adc
enter
imul
mov
or
push
lea
jnp
addb
aas
fstl
dec
call
xchg
scas
cli
push
sti
or
notb
shlw
orl
popf
jg
addr16
mov
inc
jle
mov
cwtl
push
add
insl
mov
cmp
shll
lcall
enter
ret
fsubrl
sub
mov
popf
mov
ss
cmp
sub
cmp
dec
loope
jne
push
loope
cwtl
mov
out
cli
rcr
fs
fsubs
xor
data16
or
jns
xor
push
pop
mov
or
jns
mov
mov
add
xlat
push
sahf
pop
arpl
lods
loop
lret
ficoms
test
fadds
pop
divb
mov
call
sub
pushf
jmp
adc
xor
pop
jp
mov
daa
pop
test
cltd
aad
push
gs
das
lods
pop
adc
and
out
push
shl
sub
rol
lods
lods
testl
mov
dec
sub
cmpsb
mov
out
jno
aas
mov
push
mov
pop
or
adc
adc
mov
cmpsl
stos
arpl
and
xor
jae
ret
jbe
mov
xlat
sub
inc
shlb
enter
or
mov
shll
lods
jo,pn
adc
data16
add
enter
jne
and
lea
ljmp
mov
or
pop
fmuls
cmp
dec
inc
fcomp
int3
iret
lahf
inc
das
xchg
in
cwtl
insb
mov
dec
mov
jl
sub
add
sbb
out
push
bound
int
mov
sub
xchg
add
mov
insb
jo
sub
xorl
je
and
sbb
pop
loope
push
sahf
mov
mov
mov
or
and
sbb
cmp
sub
xor
pop
xchg
push
jl
loop
jmp
xchg
push
icebp
cwtl
test
mov
imul
stc
bound
mov
inc
stos
dec
sbb
out
aas
dec
mov
je
ds
jnp
loope
fcom
ds
in
and
lcall
test
lock
andb
inc
repnz
jmp
mov
push
icebp
cmovo
inc
push
loopne
iret
mov
lea
sbbl
inc
aam
pop
fists
mov
add
aas
mov
push
retw
fdivrl
enter
in
xchg
enter
cmp
push
xchg
addr16
ds
cmp
push
add
mov
sub
and
pop
incl
mov
sbb
loop
mov
mov
sbb
loop
sub
ret
sbb
add
mov
sbb
je
sub
in
add
hlt
cmc
aam
or
lret
daa
int
xchg
push
or
lret
rcrb
ljmp
js
cmp
xchg
mov
mov
fs
mov
pop
add
test
adc
adc
mov
mov
mov
and
shr
cmpsl
in
dec
aam
lods
dec
cmp
psadbw
into
hlt
jns
movb
roll
xchg
push
sub
ss
inc
lea
stos
cs
or
push
inc
cmp
xor
mov
cmp
xor
sbb
cmp
inc
jge
lods
mov
fsubrp
test
insb
int3
jbe
jbe
mov
iret
mov
mov
add
or
addr16
addr16
jcxz
das
mov
cmp
mov
mov
jmp
aaa
cli
sub
mov
sti
mov
cmp
adc
int
add
xchg
call
repz
shll
sbb
mov
lea
addr16
movsb
aad
cmpsb
idivl
aam
and
xor
movsbl
fldt
add
pop
pop
xchg
mov
add
push
popf
das
lret
outsl
lcall
daa
or
adc
incl
clc
repz
jne
in
and
mov
xchg
inc
add
rclb
xor
bound
adc
arpl
pusha
into
dec
loop
test
popf
mov
sub
filds
mov
aas
fldt
imul
jnp
addb
adc
lret
mov
ror
adc
pop
xor
decb
idivb
mov
mov
mov
iret
inc
and
loopne
mov
inc
sub
sbb
or
dec
leave
and
je
ja
mov
imul
mov
sbb
xchg
call
pop
adc
out
and
dec
outsb
insb
mov
mov
and
test
imul
push
jns
add
sarl
lcall
fidivrs
popa
andl
and
int
mov
clc
mov
inc
fwait
lods
push
fadd
push
add
mov
xlat
fidivrs
jbe
bound
fcmovnb
jne
jnp
pop
ja
int3
nop
sub
xchg
enter
push
rolb
or
xchg
pop
inc
inc
das
enter
fidivrs
sub
pop
out
mov
andl
sbbb
pop
jo
rorl
fucomi
aad
into
push
sbb
cmp
sbb
pop
outsb
pushf
repz
mov
loope
dec
xchg
les
pop
mov
pop
xchg
xor
xor
cld
call
pop
aas
ret
jno
xchg
add
sub
sbb
or
inc
lea
inc
daa
mov
call
loope
and
inc
add
andb
jb
push
mov
fiadds
cltd
icebp
aaa
jecxz
decl
sub
push
stos
cwtl
lea
mov
xchg
xor
daa
mov
loopne
mov
or
mov
mov
push
jnp
cmp
and
jbe
add
xchg
out
je
mulb
sbb
xor
cmp
addr16
jp
inc
mov
mov
mov
adc
xor
aaa
sub
lret
bound
push
cli
adcl
data16
ret
loope
and
sbb
mov
add
pop
cmp
jb
mov
cs
cmp
call
loop
or
push
fwait
inc
lret
dec
mov
xchg
sub
jp
test
xor
cmp
daa
adc
xlat
testl
dec
enter
les
fiaddl
insb
fimuls
inc
xchg
inc
adc
imul
ljmp
hlt
mov
or
cltd
fdivs
lahf
insl
xchg
aad
sub
popa
inc
negb
cmpb
or
dec
dec
fstl
dec
orl
dec
add
insb
push
sub
cld
push
test
inc
nop
dec
cli
cmc
cli
dec
push
idivb
push
ss
inc
pop
idivl
loop
dec
gs
arpl
fidivrs
jno
aam
iret
cmpsl
jns
adc
xlat
fistpl
mov
stc
out
les
or
jb
cmp
or
push
jg
cli
shrd
sarb
filds
lods
mov
roll
lods
mov
push
cmc
inc
cmp
sub
mov
push
jo
ret
pop
dec
out
js
dec
test
ffree
sbb
sbb
clc
adc
cmp
lret
fiaddl
dec
bts
mov
jne
cltd
mov
daa
sbbl
jecxz
pop
mov
ucomiss
or
sbb
xchg
jmp
jo
sbb
leave
imul
xor
std
nop
xlat
test
push
ja
jge
addr16
lods
cmp
aaa
imul
mov
inc
fidivs
add
arpl
inc
aas
sbb
push
mov
xlat
out
add
lods
xlat
and
inc
mov
pop
xchg
mov
out
adc
jns
add
jp
filds
mov
mov
mov
inc
loop
push
arpl
lret
popf
lahf
je,pt
adc
mov
sbb
adc
jmp
ret
push
ret
call
cmp
jns
inc
jno
in
xchg
sub
shl
mov
sahf
stos
add
scas
out
xchg
fmul
es
bound
roll
and
bsr
cmp
cmp
adc
pop
fmul
sbb
stos
sbb
mov
or
push
xchg
inc
adc
in
enter
or
fbld
cmp
mov
out
lret
ljmp
cmp
mov
cmpsl
dec
push
jg
fwait
jecxz
mov
lds
mov
sub
test
push
pop
pop
jge
iret
mov
mov
push
dec
dec
iret
in
cmp
inc
jo
add
push
dec
push
scas
pop
mov
sub
inc
aad
subb
out
xchg
repnz
and
sbb
mov
and
jbe
mov
clc
repnz
in
int
xlat
inc
pop
mov
jg
in
xor
mov
or
cmpsb
test
inc
mov
pop
cmc
adc
xchg
xchg
or
mov
push
mov
sub
sbb
pop
sarb
nop
dec
cmp
or
inc
add
shrl
fs
push
add
fs
jno
stos
ja
jnp
in
sbb
cmp
push
lods
and
pusha
sbb
xchg
jno
jns
ret
sub
sub
mov
leave
addr16
jne
das
sarb
daa
mov
pop
mov
jecxz
test
pop
in
push
ja
pop
gs
iret
mov
rorl
iret
and
rclb
jge
xchg
imul
fdivrl
in
add
orb
xor
mov
out
inc
pop
jp
add
jmp
movsl
imul
push
adc
mov
dec
mov
adc
add
add
loop
mov
daa
sbb
mov
in
cmc
adc
xchg
dec
out
ja
mov
idivl
ret
ss
push
mov
int3
or
jge
mov
xor
movsl
xlat
sahf
push
mov
lahf
lsl
jno
les
push
xor
mov
cwtl
or
adc
cmpsl
mov
push
lds
adc
pop
mov
xor
les
sbb
je
mov
sbb
cmp
imul
jmp
mov
dec
inc
mov
or
push
cmpsl
add
pop
push
and
loop
pop
das
shl
test
lret
add
mov
jg
jg
lods
push
or
xor
push
outsb
cmc
sarl
and
stc
repnz
movsl
mov
iret
sub
leave
or
sbb
push
jmp
cltd
or
dec
cmp
inc
lret
lcall
fdivr
inc
push
nop
jp
lea
mov
popf
sahf
sbb
and
pop
xor
icebp
sub
sbb
adc
out
or
adc
scas
mov
ret
loope
mulb
push
add
pop
fstp
insl
dec
push
sbb
pop
jl
insl
and
bound
adc
and
push
xor
bound
imul
xchg
xor
imul
lea
inc
hlt
push
or
jb
jns
lods
add
out
popf
pop
mov
push
std
repnz
mov
lret
lret
vmread
aam
xchg
sbb
jbe
dec
or
fisttpl
enter
xorb
lods
cmpsb
xchg
cmp
cmp
outsb
repz
cli
fcomps
xchg
cltd
in
mov
xchg
loopne
fs
hlt
or
mov
push
notl
or
xchg
sub
inc
dec
test
ret
repz
std
mov
dec
jbe
push
arpl
or
dec
movsl
jmp
shrl
jno
fmul
adc
mov
out
dec
out
xor
dec
xor
cltd
add
mov
popa
enter
hlt
fstps
lahf
mov
xchg
loopne
out
push
or
jmp
push
mov
pushf
pusha
fisttps
mov
adc
mov
mov
aas
lcall
mov
sub
or
in
hlt
jle
rcl
in
lret
jae
ja
sahf
shrl
lock
sub
or
rcrl
push
pop
add
call
add
dec
pop
sub
outsb
repnz
sbb
mov
xchg
repnz
push
adc
dec
pushf
xchg
dec
aas
xchg
pop
stos
ss
fildl
out
repnz
mov
shl
outsl
icebp
repnz
aad
jecxz
mov
xor
xchg
mov
ja
test
mov
jle
roll
mov
xchg
cli
cmpb
jae
daa
dec
mov
mov
test
mov
xchg
pop
addb
in
les
loope
mov
pop
fsts
fwait
or
inc
push
xchg
jecxz
data16
mov
popa
popl
sub
jg
mov
lret
mov
pop
mov
das
orb
loop
cli
pop
aad
inc
popf
test
fisubrs
push
shll
push
pop
push
popf
sbb
in
pop
cwtl
daa
jg
shlb
and
in
nop
pushf
aaa
jmp
xor
enter
sub
pop
lock
inc
xlat
push
push
xchg
fisttps
inc
in
push
sub
mov
cmp
lods
push
mov
mov
mov
and
call
push
sbb
and
cld
adc
mov
call
or
mov
movsl
mov
pop
pop
pop
rcll
test
cmc
xchg
xchg
fsubrs
test
mov
pop
cmc
mov
push
movsl
flds
jp
xchg
sub
lret
lods
ljmp
and
fsubrl
and
adc
nop
jmp
pop
inc
xchg
and
mov
xlat
or
adc
mulb
ret
call
sub
cld
push
xor
adc
push
clc
lret
xorl
enter
ljmp
les
xchg
mov
mov
mov
sbb
hlt
daa
or
dec
mov
fwait
insl
cmp
sub
xor
mov
fisttpl
xor
sub
ljmp
stos
test
icebp
dec
fwait
push
scas
mov
and
subl
pop
leave
icebp
stos
cmp
aam
mov
repz
xor
jp
insl
sub
scas
ds
add
cmc
push
jmp
in
jg
jnp
mulb
out
pop
and
mov
dec
push
mov
jns
dec
hlt
sub
mov
gs
xor
jb
sbb
xor
xchg
xor
out
lret
test
sub
insb
mov
mov
divl
cmp
and
lods
jp
fldcw
sub
fldl
inc
mov
jae,pt
mov
sbb
stos
jle
sub
xchg
scas
aaa
xchg
or
jmp
shl
negb
xchg
ficomps
cmp
mov
stos
in
rcrl
addl
int3
mov
cwtl
pusha
xchg
push
test
mov
test
dec
loope
cmpsb
sbb
dec
fistpll
push
xchg
scas
jns
lret
sbb
mov
jae
mov
push
in
pop
or
scas
mov
and
cli
mov
sub
pop
fbld
fcompl
push
cmp
mov
scas
lret
pop
push
imul
imul
test
sbb
in
push
mov
inc
mov
jne,pn
push
cmp
ljmp
or
pop
jo
push
mov
imul
insb
dec
adc
pop
xchg
repz
lret
gs
repnz
cmp
test
popf
push
add
and
add
or
sbb
add
jbe
ss
pop
xchg
mov
ss
in
cltd
and
sub
jg
lret
xor
je
dec
and
inc
push
mov
adc
jmp
push
outsb
push
ss
xchg
adc
xchg
jl
mov
inc
jmp
sub
dec
push
sbb
push
inc
sub
lret
iret
xchg
pop
cs
out
shlb
hlt
dec
and
mov
sbb
imul
mov
enter
mov
mov
out
sub
aaa
and
ja
push
fsubrl
and
scas
andb
js
popf
fxch
adc
pop
das
mov
xchg
inc
xchg
lock
stos
dec
pop
in
insl
sub
int3
les
or
sub
stos
mov
jge
xor
xor
xchg
sbb
or
cli
or
jns
jmp
jmp
les
test
lahf
mov
xor
sub
fs
ret
bound
sahf
push
movsl
jl
outsb
shll
outsl
pop
cltd
xor
xor
fdivrl
and
dec
pop
aaa
sbb
cmp
lock
lahf
jns
les
mov
fidivrs
xor
mov
inc
lret
dec
aaa
lea
push
aas
mov
pop
cli
sbb
fdivs
cmp
or
xlat
adc
jmp
inc
cmp
lcall
in
or
inc
test
push
repnz
addl
jp
sar
fmuls
and
fdivl
shrl
xor
dec
scas
flds
jb,pn
sub
push
xchg
xchg
clc
repnz
cmc
bound
xor
es
mov
cmp
fsubrl
out
inc
pop
arpl
add
mov
sbb
inc
ds
in
mov
pop
mov
aaa
jnp
push
pop
call
xchg
jecxz
inc
mov
jno
dec
or
leave
sub
lods
adc
outsl
shrl
push
pop
adc
lods
stc
cmp
sub
loop
jg
stos
sbb
jno
sbb
pop
lahf
pop
out
fisttps
pushf
ljmp
shlb
sbb
jl
lcall
pop
fistl
or
mov
xchg
lods
mov
in
fwait
ss
addr16
ss
xchg
cmpsl
mov
movl
int3
pop
mov
jae
fadd
add
aas
iret
and
xlat
mov
dec
ljmp
addl
mov
sar
xlat
add
adc
add
or
sbb
movsb
mov
mov
adc
mov
enter
cmp
fdiv
and
popa
loopne
test
mov
mov
es
stc
push
lods
loope
xor
fnstcw
pop
mov
iret
pop
fwait
cli
or
push
push
mov
shlb
jg
lret
jge
jecxz
call
mov
pop
mov
repnz
cltd
dec
test
sbb
push
mov
aad
push
add
je
setle
mov
out
dec
inc
stc
pop
xchg
in
mov
ror
arpl
xchg
in
stos
test
fmuls
xor
jno
test
or
inc
jae
pop
cmp
test
and
icebp
dec
push
sbb
mov
fstl
aas
or
gs
scas
pop
push
pop
jbe
xchg
ds
in
xor
scas
adc
dec
xchg
ret
arpl
mov
ds
add
test
pop
aam
mov
pcmpgtb
hlt
das
hlt
shll
push
fistpl
dec
mov
sbb
faddl
mov
int
sub
xchg
mov
mov
mov
dec
dec
mov
xchg
jae
inc
jns
and
cmp
aad
and
ja
imul
rcrl
push
aas
mov
dec
mov
daa
cwtl
adc
pushf
sub
xor
fldenv
in
mov
pop
cmc
cltd
adc
out
adc
aas
sub
fcomip
jg
adc
xchg
sti
cs
into
add
mov
ficoms
mov
pop
das
xchg
push
insb
loop
adc
adc
iret
jge
cmpsl
out
lahf
dec
mov
or
inc
mov
aad
repnz
or
dec
cmp
out
jb
popf
out
xlat
jp
add
out
rcrl
rcr
js
cmp
out
test
stos
cmp
mov
mov
int
insl
push
sbb
xor
xchg
cmpsl
leave
mov
jo
stos
mov
mov
subb
lret
loope
pushf
je
sub
pop
adc
test
fwait
imul
xchg
mov
jp
cli
imull
push
push
insl
sbb
in
fnstsw
pop
cltd
test
and
mov
popf
mov
and
push
or
scas
enter
loopne
rcl
cmp
fadds
add
rclb
mov
sbb
test
jo
add
leave
leave
fs
dec
dec
out
xchg
inc
dec
aam
into
adc
xor
jb
mov
xchg
adc
popf
dec
in
or
pop
imul
lret
movsb
daa
push
lods
and
mov
ja
cltd
in
pop
shll
or
push
xchg
or
cli
jge
lds
cmpsb
jle
mov
push
imul
imul
mov
int
ja
jo
dec
mov
mov
test
cmp
dec
dec
frstor
push
test
or
pop
stc
mov
lret
stc
imul
mov
push
xor
dec
adc
adc
ds
or
and
jb
xor
ja
push
sarb
xchg
cmp
mov
push
popa
mov
xor
pop
push
adc
adc
les
in
pop
push
mov
out
ja
ljmp
push
leave
imul
lods
dec
push
mov
sub
scas
nop
xchg
xchg
jg
rorb
fisttpl
std
out
ret
inc
cmpsb
sbb
xchg
outsl
shr
or
pop
inc
adc
test
fsubl
cmp
into
jb
loop
mov
and
push
pop
dec
sub
pushf
push
cmp
jo
in
push
pop
inc
insl
cmpsl
sub
sub
xor
fisubl
jnp
push
lods
cli
adc
sub
ljmp
ss
mov
xchg
and
push
or
xchg
daa
nop
push
fidivl
test
mov
sti
scas
push
inc
sub
imul
int3
jae
repz
push
ret
pop
sub
sub
out
mov
ss
aas
jl
stos
rcrl
or
mov
aad
fsubrs
shr
cmpsl
or
dec
add
outsl
fnsave
pop
lahf
jb
jmp
out
je
aam
sub
dec
aad
iret
jle
add
or
int
lahf
dec
sub
fldt
dec
mov
xchg
int3
adc
loopne
add
stos
fildll
out
aas
and
fisttpll
arpl
pop
aaa
xchg
inc
push
jae
iret
aas
dec
mov
cmp
push
pop
add
jmp
xor
jnp
push
mov
fwait
adc
pop
shll
jge
mov
stos
pop
imul
cli
dec
arpl
ret
cmc
subb
cld
gs
mov
sub
hlt
sar
cvtpi2ps
and
pop
mov
xor
xor
stos
xor
inc
jno
xchg
inc
push
mov
lock
push
jnp
sbb
cmp
add
jno
fisubrs
add
je
xchg
enter
xchg
lret
adc
push
test
in
push
adc
push
mov
cld
rcll
and
enter
cli
push
test
sub
negl
sub
outsl
ret
and
mov
cmp
and
pop
mov
push
mov
test
das
test
lock
popa
daa
sbb
in
popf
imul
cs
sub
add
gs
shll
int3
fwait
add
or
mov
dec
sahf
ret
mov
mov
push
sub
jmp
sar
xor
rorl
and
jns
test
push
mov
lahf
mov
mov
movsb
add
mov
mov
inc
sub
fnstenv
push
fs
in
inc
mov
xor
jnp
pop
xchg
addr16
mov
add
insb
mov
jnp
es
adc
sub
xor
stos
pop
iret
jg
dec
inc
or
push
pop
lret
lret
aam
add
ja
dec
adc
jecxz
into
pusha
pop
jno
mov
cmp
inc
loopne
cmp
pop
in
sarl
test
push
mov
mov
mov
pop
inc
inc
shll
xor
mov
or
iret
dec
sub
cmpsl
data16
hlt
sub
inc
out
movsb
dec
mov
out
out
insl
lcall
sbb
cmp
sub
inc
push
out
outsb
fwait
add
pop
popa
repnz
xor
add
and
xchg
addr16
pop
adc
test
sbbb
inc
xchg
aam
inc
push
cmp
into
and
ljmp
sbb
shll
or
outsl
roll
push
out
push
mov
xchg
mov
jb
test
cmp
add
rorb
or
out
mov
push
sub
jbe
dec
clc
es
filds
xchg
ljmp
add
dec
push
lods
insb
cmp
stc
cmp
cmpsb
jne
mov
arpl
adc
inc
out
mov
aaa
movb
in
sbb
fldt
push
fcmovne
jbe
pusha
cld
stos
in
mov
testl
pop
in
sub
mov
rcrl
cmp
jb
cmp
mov
pop
xor
mov
mov
mov
icebp
lahf
js
dec
outsb
sub
mov
mov
divb
insl
sub
xchg
out
lea
pusha
mov
xchg
mov
mov
sub
jnp
lock
mov
sbb
lahf
pop
int3
aaa
in
sub
fdivrl
jae
es
loopne
ss
bound
mov
mov
repnz
in
cvtdq2ps
xchg
push
mov
sti
mov
decl
xchg
daa
aas
iret
aam
loopne
add
and
pop
imul
js
aaa
inc
out
push
or
add
mov
jnp
test
push
rorb
add
mov
lods
push
sub
lahf
fidivs
imul
mov
out
pop
rorb
mov
jae
or
shrl
mov
mov
jl
stc
sbb
sub
mov
cli
incl
xchg
adc
dec
faddl
jle
into
lods
loope
mov
into
mov
outsl
cmp
pop
mov
pop
pop
pop
inc
scas
dec
cmp
fwait
push
inc
or
sti
dec
adc
mov
xchg
rclb
mov
lret
sub
int
sar
addr16
cmc
and
arpl
add
jp
out
sahf
dec
lahf
popa
punpckhdq
xor
ljmp
dec
stos
sbb
bound
mov
inc
mov
sub
mov
sub
push
mov
or
xchg
ss
les
test
cmp
subl
mov
xchg
loope
ja
adcl
sbbl
inc
mov
jns
adc
rorb
xor
lret
ret
sub
lds
xchg
and
xchg
dec
sub
fcom
jnp
popa
sbb
lret
mov
jl
in
imul
push
mov
xchg
aaa
sub
jp
fdivrl
mov
mov
mov
pop
or
xor
lahf
mov
inc
sub
inc
pop
es
ljmp
and
gs
sub
daa
popa
jmp
add
add
jp
je
icebp
pusha
dec
and
xor
mov
cmc
sub
push
das
cmpsl
scas
popf
ret
repz
dec
fcompl
or
loope
xchg
pop
and
sbb
jnp
jecxz
nop
lock
mov
ds
add
aam
push
or
lods
ljmp
cmp
adc
adc
ja
inc
inc
and
mov
adc
clc
scas
sarl
clc
mov
aas
jmp
pushf
sub
adc
xchg
enter
fprem
dec
xchg
sub
dec
repnz
imul
subl
or
aad
cmpsl
adc
arpl
push
repz
xchg
xor
sub
out
icebp
aad
sysexit
aaa
sarb
pop
pop
fdivrs
imul
xchg
push
addr16
xchg
call
aam
cld
clc
cmp
popl
pop
sbb
leave
test
dec
push
xor
xchg
pop
xchg
inc
subl
dec
addr16
xlat
fdivl
jne
das
jg
sarl
int
fisttpl
dec
mov
and
mov
gs
xor
jae
push
mov
lods
and
or
mov
std
xor
mov
pop
mov
movsb
pop
jecxz
xorb
cmp
pop
js
mov
enter
cmp
or
sbbb
aas
xchg
dec
pop
jnp
loope
and
pop
repz
mov
and
jmp
ja
sub
jp
lea
xchg
cmp
loopne
stos
fldenv
cmp
xchg
incl
imul
cmpsb
mov
sarb
mov
aad
and
and
fcoml
jecxz
mov
inc
xor
ficompl
mov
xor
sar
inc
sahf
in
and
push
dec
cmp
cli
shll
and
call
adc
mov
jg
xchg
dec
mov
add
inc
es
nop
leave
mov
shrl
add
mov
add
dec
jp
cld
add
sbb
movsl
jne
dec
mov
movsb
leave
xchg
roll
sbb
test
clc
imul
out
push
mov
push
sbb
push
mov
mov
jle
loope
pusha
adc
sub
adc
pushf
pop
or
add
jl
cmp
jns
fwait
push
sub
pop
dec
sahf
shll
lahf
fistpll
inc
mov
lret
ja
call
lock
sbb
loop
test
sub
xchg
and
loop
add
notb
xchg
mov
mov
andb
fcmove
fwait
sub
jno
mov
jle
push
dec
daa
pop
jne
das
in
daa
jb
sbb
nop
or
mov
jl
mov
int3
test
mov
inc
inc
addr16
xchg
ret
or
pop
repnz
rorb
out
inc
jno
fiaddl
mov
jbe
aaa
nop
mov
adc
arpl
xchg
jl
mov
loopne
nop
stos
imul
add
xchg
fcoml
fcmovne
addb
movsl
ret
cmp
out
mov
int
mov
fsubrs
xchg
std
fisttpl
fisubl
mov
pop
push
cmpb
pop
mov
mov
sub
dec
and
cmpb
das
cld
add
xor
dec
jbe
push
or
cmp
mov
mov
lock
in
ja
mov
cmp
nop
push
ret
pop
test
or
adc
in
repnz
fmul
rcrb
mov
sahf
mov
xchg
push
into
push
mov
push
movsb
pop
cmpsb
icebp
mov
pop
xchg
adc
dec
in
xor
rcrb
jge
dec
cmp
mov
mov
fwait
insb
sub
mov
lock
cmp
sarb
sbb
and
xchg
lea
les
xchg
repnz
sbbb
stos
mov
in
cmovno
xchg
pop
sub
ja
mov
popl
and
jne
xor
in
cmpsl
add
pop
push
cmp
test
popf
mov
xor
fwait
repnz
inc
and
jbe
push
scas
pop
pop
sbb
shrl
mov
dec
mov
xor
jle
rorb
mov
test
in
in
pop
or
push
insl
lea
adc
idivl
psrld
xchg
jns
ret
mov
subb
push
sub
sub
out
dec
mov
mov
cmp
mov
shl
imull
mov
movl
addr16
arpl
gs
jno
fldcw
pop
daa
push
fimuls
sub
sub
and
cmp
cmp
sarl
mov
ficomps
inc
je
mov
addl
iret
sub
in
vucomiss
cmp
cmp
shll
jbe
lret
mov
pop
ret
stos
stos
sbb
xor
adc
inc
imul
xor
adc
into
ficoml
jnp
lcall
shl
cmpsl
popa
aaa
rorl
xchg
jle
repz
jg
in
ljmp
mov
stos
mov
push
sub
sbb
pop
jnp
cld
push
jae
sub
dec
mov
xor
push
cmp
jge
cmp
rcrl
and
xor
xchg
jp
popa
cmp
sbb
add
inc
rcll
popf
pop
push
lock
cwtl
daa
xchg
loopne
add
push
or
jbe
add
pop
mov
mov
mov
dec
cmp
dec
pop
sbb
add
sub
jns
jg
dec
dec
psrlq
imul
cwtl
inc
inc
sub
cmp
das
adc
jb
add
out
int
test
pop
negb
xchg
sub
add
test
pop
dec
push
pop
xor
ret
push
jns
into
jg
add
push
fstpt
les
add
repnz
xchg
test
enter
push
jne,pt
aam
cld
das
jns
xchg
repnz
jl
call
jg
pop
dec
fldenv
push
jbe
mov
movntps
dec
je
into
cmpsb
pop
add
mov
and
movsb
push
fdivr
cmpsb
icebp
fdiv
or
adc
xchg
arpl
mov
fcmovnbe
dec
mov
lahf
jecxz
adc
lock
aam
sbb
mov
mov
pushf
lds
jnp
pop
fnstsw
jnp
mov
sbb
mov
sbb
enter
mov
xor
in
inc
jmp
sub
sub
scas
sbb
or
mov
mov
mov
pop
and
std
xchg
xchg
xchg
sub
out
lcall
sarb
cmp
xchg
push
push
testl
sbb
mov
inc
lcall
sahf
mov
fwait
pop
sub
jb
dec
mov
jno
add
push
add
lret
inc
inc
sub
roll
fldpi
int3
cmp
mov
insb
insb
cmp
bound
daa
fistpl
cwtl
mov
popf
push
gs
lret
and
xor
loopne
sbb
mov
mov
inc
lds
scas
mov
fbstp
mov
daa
xchg
jge
cmp
cwtl
push
mov
pop
shl
jns
jge
jo
std
mov
add
sbb
mov
clc
mov
push
jnp
cmp
cmpsb
push
add
jg
jle
mov
pop
sbb
xlat
aam
push
aaa
or
dec
push
push
andb
push
inc
jo
cmp
rcrl
sbb
pop
inc
xor
mov
mov
icebp
mov
dec
mov
sub
sub
xor
xchg
adc
stos
or
add
fwait
hlt
shll
add
cmp
mov
js
jmp
push
out
testb
sbb
add
lea
xlat
xlat
mov
test
leave
inc
mov
insl
jle
mov
int3
insl
dec
call
sahf
pop
adc
and
outsl
inc
shrb
jns
rol
daa
rcll
mov
fwait
loopne
sub
aas
aad
inc
enter
or
cmp
lods
mov
lods
xor
or
pop
imul
icebp
lds
in
sub
jae
xchg
inc
decl
inc
stos
test
xchg
jmp
jb
insl
sbb
push
push
test
sub
push
xor
jno
mov
jns
sub
xchg
mov
and
hlt
out
dec
xor
cltd
adc
sub
ljmp
jg
cs
jle
inc
gs
sahf
arpl
aas
scas
push
cmpsb
imul
fwait
arpl
pop
pop
bound
test
inc
mov
repnz
jae
subb
imul
cmp
out
push
negl
cmp
add
mov
mov
pop
movsb
pusha
or
outsb
cmc
mov
std
lds
mov
bound
jge
push
dec
add
inc
sub
clc
iret
xchg
and
test
mov
jo
pop
ret
scas
sub
js
add
shrl
xor
outsl
mov
push
cs
xchg
or
cwtl
or
daa
std
pusha
aas
mov
push
sbb
add
cmp
add
gs
frstor
aas
inc
inc
fists
outsl
pop
xor
addb
in
mov
mov
test
das
xor
sub
inc
subb
test
xchg
stc
repnz
cmp
enter
add
rol
pop
mov
sub
sar
and
std
test
adc
dec
pop
add
add
push
pop
mov
in
pop
or
orb
inc
dec
repz
pop
test
clc
sar
out
mov
push
out
shll
mov
and
mov
mov
mov
cmp
pop
fidivrl
or
fcoml
arpl
in
iret
movb
cmc
jnp
dec
mov
call
and
ss
lahf
or
sbb
pop
icebp
imul
idivb
nop
adc
sbb
pop
fisubrl
pop
enter
mov
adc
pusha
cmpb
sbb
push
lds
fsubs
cli
push
into
sub
jne
pop
mov
inc
xor
jns
mov
xor
imul
adc
jb
cmp
jg
adc
enter
ret
sahf
sbb
stos
mov
inc
lods
ret
push
iret
mov
xor
aad
sarb
cmpsl
int3
xor
movsb
imul
orb
push
lds
insb
pop
lock
out
push
push
lods
xlat
ljmp
sbb
push
jmp
lds
aad
out
push
mov
mov
fs
jecxz
mov
or
movsl
mov
fstl
ss
sbb
dec
sub
xchg
int
sbb
or
mov
push
das
fldenv
cmp
aam
outsl
xchg
hlt
shlb
hlt
add
xchg
jbe
ss
pop
adc
out
call
pop
aam
ret
dec
jne
les
pop
pop
jmp
push
negl
shll
dec
and
je
mov
mov
mov
xchg
cmp
pop
scas
fmuls
mov
int
jmp
dec
lods
outsl
shl
jl
call
push
imul
adc
sahf
insb
push
nop
inc
push
sbb
add
push
push
pop
icebp
pop
mov
dec
cmc
pop
xchg
fs
or
cli
jge
mov
popa
sbb
jnp
mov
repz
out
mov
adc
ss
mov
clc
xchg
test
insb
mov
mov
sbb
sbb
stc
pop
scas
lret
dec
out
cltd
sti
sbb
sti
inc
sbbl
in
out
test
stc
mov
push
mov
loope
nop
in
push
in
add
roll
out
mov
and
loopne
mov
lcall
or
movsb
sahf
fstl
cld
push
in
jp
xorb
sbb
roll
push
inc
iret
aas
mov
stos
movsb
out
mov
sbb
shlb
dec
push
pushf
or
xchg
jns
cwtl
cld
cmp
and
ljmp
dec
xchg
inc
ds
mov
pop
adc
test
cld
idivb
in
pop
inc
flds
add
xor
not
ja
sbb
cmp
mov
pusha
repnz
stos
dec
lds
jge
enter
test
out
lock
or
adc
pop
mov
adc
je
lods
push
stos
aas
inc
lds
xchg
std
popf
inc
cld
xor
and
ret
aad
or
lods
out
mov
pop
cld
dec
enter
sar
mov
mov
scas
jmp
and
ret
cmc
mov
mov
jno
pusha
xor
lods
in
or
stos
xchg
outsl
cmpsl
sub
push
lret
imul
enter
aaa
xchg
and
jl
inc
roll
cmpsl
cli
push
hlt
cmp
mov
add
imul
cmp
or
stos
mov
sub
lds
mov
xor
xchg
sti
mov
in
xchg
jns
lahf
cli
pusha
jo
in
icebp
fisttps
sub
ret
je
orb
addr16
shl
jae
cmc
sbb
rcll
xchg
cli
cmpsl
gs
mov
mov
sti
cmp
aas
lahf
aad
mov
sarl
mov
pop
cmc
clc
sub
mov
or
cli
sub
cmp
lods
sti
cs
adcl
ljmp
imul
mov
in
pop
adc
out
fistpl
push
pop
out
shrb
jbe
pmaxsw
and
notl
sbb
ja
out
mov
xor
test
fld
add
cmpb
dec
mov
mov
push
into
cmp
cmc
adcb
mov
mov
cld
push
jge
jmp
pop
outsl
int
add
mov
ret
shll
mov
jnp
push
hlt
inc
daa
dec
sbb
pop
add
fsubrl
inc
and
pop
mov
and
mov
add
shll
xor
outsb
mov
adc
insb
mov
push
pop
nop
or
sbb
mov
cmp
daa
jnp
cmp
add
or
pushf
sti
jns
faddl
push
push
inc
push
sub
lret
cmp
enter
lock
aas
xchg
and
lock
sarb
fwait
jp
push
shl
ret
test
inc
jle
mov
xchg
mov
outsl
cmc
pop
cwtl
or
fcmovb
cmpsb
dec
or
push
add
rorl
out
js
inc
in
loopne
sti
sub
dec
push
cmp
movsb
add
add
mov
mov
out
loop
sti
sub
mov
add
pop
in
xchg
pop
sbb
mov
test
mov
and
xor
xchg
xchg
mov
mov
fwait
mov
rcrb
mov
add
sarl
scas
dec
jp
pop
inc
loope
add
imul
fld
es
pop
dec
jp
out
ss
add
jae
mov
pop
lock
inc
shll
mov
xchg
mov
ds
jp
sub
mov
cltd
or
xchg
stos
test
xchg
adc
adc
sbb
jno
stc
pop
iret
aaa
fisttpll
dec
pop
mov
ficoms
je
les
mov
ja
out
mov
hlt
scas
shll
pop
cwtl
das
adc
in
arpl
push
jecxz
ja
int
cmp
sub
mov
imul
adc
push
mov
sahf
lret
fcoml
rol
gs
int
in
sbb
push
cmc
xchg
sub
adc
sahf
mov
clc
jae
push
jl
imul
inc
out
push
jecxz
cwtl
lods
and
sbb
mov
mov
shlb
negb
popa
rolb
mov
lods
adc
xchg
lds
cwtl
dec
and
add
mov
mov
stos
lret
push
movsb
cmp
jmp
loopne
jmp
dec
xor
fstpt
or
cli
sbb
add
dec
mov
mov
xor
adc
mov
cmp
dec
mov
or
xor
dec
fnstsw
mov
push
or
pop
scas
addr16
pusha
dec
sub
cld
cmp
adc
out
jne
repz
jecxz
pop
pop
push
sahf
sub
enter
lock
push
mov
jno
cmp
mov
mov
ds
pop
stos
cmp
adc
xor
cltd
sub
mov
out
mov
push
test
push
aad
xor
call
push
cltd
dec
repnz
daa
dec
punpckldq
dec
inc
pop
aas
out
xchg
mov
vsqrtps
int
jg
push
test
fdivrs
push
mov
arpl
out
in
js
sbb
outsb
mov
shrb
ja
dec
cltd
sub
mov
mov
push
push
pushf
faddl
mov
push
or
dec
sti
mov
adc
lret
xabort
add
and
enter
sub
sub
sbb
cli
xchg
fiaddl
mov
test
pop
lock
dec
in
stos
inc
and
out
pop
movb
push
and
and
mov
not
pop
in
and
jb
lock
movsb
and
jle
cltd
jmp
daa
stc
dec
dec
add
out
push
in
adc
add
sub
gs
sbb
cmpsb
mov
clc
lds
jbe
xchg
test
and
sub
ret
push
adc
ret
jl
sub
dec
jne
sub
and
fnstcw
inc
fdivrl
cmp
and
jbe
and
lods
into
pop
test
jmp
clc
lret
addb
leave
clc
sahf
dec
mov
cmovp
adc
cmp
cmp
pop
stos
lret
xor
cltd
and
ljmp
xor
sub
scas
mov
ja
sub
push
ja
jbe
push
mov
pop
rol
mov
mov
sbb
sub
out
sub
daa
push
adc
negb
mov
aaa
or
xor
imul
mov
sti
xorl
mov
add
std
and
jge
gs
ret
pop
pop
leave
sbb
stc
sahf
and
xchg
lcall
adc
pop
ret
in
cmp
icebp
inc
mov
pop
sbb
xor
pop
push
mov
ss
lods
inc
xchg
subl
imul
call
shll
jbe
inc
mov
mov
push
je
loop
adc
mov
loopne
mov
test
or
jbe
enter
icebp
test
int3
sub
popa
xchg
pop
shl
jp
cwtl
push
pop
sub
sahf
inc
xchg
adc
mov
push
add
xlat
xchg
repz
int3
and
inc
scas
jge
subb
outsl
inc
sbb
xchg
add
push
aaa
ret
cmc
pusha
inc
insb
or
insl
addr16
loop
mov
add
in
out
inc
sbb
fwait
loop
in
and
imul
in
in
inc
sbb
xchg
ja
mov
sarl
push
pop
mov
jg
loope
dec
mov
ret
mov
fildl
addl
sbb
mov
xor
jns
pop
hlt
and
popf
cmp
push
push
mov
sbb
sbb
stc
mov
leave
pop
roll
lods
cmp
stos
xchg
movsl
enter
push
cmp
gs
push
or
adc
bound
gs
repnz
lds
ds
test
pusha
shlb
in
fimuls
in
lds
aas
xor
xor
cmpsl
mov
jp
adc
push
sub
cs
mov
fucomp
cmp
mov
sub
mov
inc
dec
xchg
xor
cmpb
jbe
or
push
push
mov
cmpsb
inc
and
jns
in
cmpsl
repz
jge
icebp
lret
mov
pop
mov
xchg
inc
lea
pop
sbb
lret
lcall
notb
lods
test
or
cwtl
and
adc
loope
pop
cld
or
mov
repnz
pop
int3
cmp
fwait
jb
sub
inc
inc
cli
fstps
add
or
mov
hlt
pop
lret
adc
ds
mov
adc
sub
lahf
js
dec
mov
mov
push
in
push
movsb
jnp
xchg
mov
sbb
cmpsb
rorb
xchg
xor
sub
xor
and
ret
xor
dec
scas
jo
mov
mov
push
pop
mov
dec
adc
out
ds
jle
in
or
push
mov
ss
aas
out
xor
fidivrs
or
rcll
rol
leave
and
push
xlat
testb
ds
movsb
bound
mov
stc
push
sahf
and
mov
jo
xor
stos
data16
xchg
mov
cwtl
aas
mov
clc
adc
sbb
xorb
mov
popf
or
sar
mov
cmc
xchg
or
sbb
xchg
xor
scas
aam
xchg
pcmpgtw
xor
in
mov
aaa
je
adc
out
push
jns
pop
stc
mov
inc
cmp
jle
push
adc
loop
call
mov
mov
ljmp
sbb
js
outsb
scas
aas
jo
cwtl
adc
pop
popa
cmpsl
pop
cmp
bound
adc
cltd
dec
iret
add
fwait
loopne
jg
dec
mov
lret
pop
cmc
pop
sub
bnd
jge
ret
les
pop
mov
out
adc
pop
popa
jge
push
xor
loop
mov
ja
repnz
dec
sar
ja
mov
cltd
add
sub
jnp
out
test
lcall
pop
xchg
mov
adc
loop
cld
lahf
rclb
lock
insl
daa
cmpsb
mov
cmp
push
inc
mov
mov
mov
sub
xor
rorl
jecxz
push
ja
test
sti
sbbl
cltd
xor
xchg
repnz
pop
cmp
mov
jne
inc
cwtl
xchg
push
mov
push
test
dec
stc
in
or
pushf
pop
push
decb
cmc
mov
icebp
xor
rorl
mov
push
mov
dec
roll
mull
cld
sahf
jbe,pn
aaa
push
test
cmp
inc
or
fsubs
mov
fildl
fldt
add
insl
xor
xchg
movsb
jl
pop
pushf
cmp
rcll
repnz
inc
into
shll
mov
sbb
mov
imul
repnz
outsb
cmp
jns
and
add
sbb
repnz
xor
ficomps
adc
das
adc
shrb
sub
adc
loopne
arpl
pop
into
xchg
int
and
sbb
mov
imul
jmp
iret
mov
mov
fsubrl
lods
js
stos
stos
movsb
push
xor
mov
sub
nop
push
sbb
push
mov
insb
mov
inc
add
pop
jne
fld
add
leave
jae
dec
xchg
enter
ds
clc
lea
mov
pop
loopne
movb
mov
out
and
in
arpl
jbe
dec
mov
jb
mov
pop
pop
lahf
xchg
addr16
sbb
filds
adc
lods
lret
adc
lods
nop
push
lods
and
cmpsb
or
inc
sbb
je
xchg
je
decb
ss
movsl
cwtl
loope
lret
inc
sbb
mov
xchg
movsl
mov
adc
push
in
dec
inc
aas
mov
cli
or
sahf
pusha
pushf
sahf
xchg
dec
cmc
arpl
cs
adcb
xchg
xor
ds
jno
push
imull
xchg
test
mov
xchg
clc
std
push
ud2
mov
dec
repnz
iret
jmp
or
xor
or
sbbb
sahf
adc
scas
hlt
mov
and
pusha
pop
stc
jo
adc
xchg
das
iret
repz
icebp
xor
inc
push
clc
lock
push
inc
sub
pop
sub
push
or
sub
iret
aad
pop
mov
adc
rclb
cmp
mov
dec
fdivl
jbe
mov
xchg
jbe
mov
and
outsl
fcoml
into
adc
jns
xor
add
push
xlat
sbb
mov
pop
icebp
outsb
adc
inc
aaa
mov
push
and
xlat
es
imul
push
and
jl
aaa
pop
jl,pn
testl
repnz
add
mov
icebp
mov
pusha
jle
test
rcrb
sbb
in
jl
mov
push
or
cwtl
add
jbe,pn
adc
lcall
testb
mov
inc
insb
sub
xor
notl
mov
test
pop
xorl
pushf
in
aas
jge
xor
sub
sub
dec
sub
pop
std
jl
bound
imul
aad
test
sbb
xchg
xchg
jno
and
rcll
inc
in
stos
std
fcmovb
call
mov
sub
add
pop
dec
pop
int3
pop
popa
xor
adcl
cwtl
pushf
stos
xor
jmp
popa
or
lods
mov
inc
cli
and
mov
dec
push
pop
xorl
mov
in
xor
enter
pop
sbb
add
nop
sbb
shr
frstor
and
cmp
sahf
repz
mov
pusha
mov
ljmp
js
or
mov
in
and
insb
or
cmp
jns
inc
mov
sti
xchg
ret
clc
test
mov
or
pop
xchg
sbb
mov
mov
test
lods
mov
adc
add
movsl
xor
sub
test
mov
lret
pusha
xchg
inc
hlt
int3
mov
or
sbb
jne
push
aad
gs
cmp
mov
data16
adc
cmpsl
mov
das
fistpl
jnp
in
jnp
out
inc
out
repnz
sarl
jnp
jp
daa
sbb
ds
rcr
and
mov
sbb
lods
test
dec
mov
mov
cmp
dec
test
rcrl
adc
bound
daa
ljmp
outsb
rorb
in
push
shll
mov
jb
jp
into
mov
jl
cmovno
push
mov
jl
xchg
add
ja
loopne
inc
pop
push
push
roll
xor
out
mov
into
mov
add
sub
imul
ss
lea
cmovnp
enter
push
pop
push
daa
mov
pop
xlat
mov
ljmp
xor
push
loope
movsb
cltd
cmpsb
loope
and
shr
rclb
push
mov
popf
dec
out
sub
popa
push
imul
jmp
mov
adc
cwtl
mov
sub
jg
add
cli
jp
call
outsl
in
xchg
mov
out
test
pushf
xor
mov
pop
fs
jg
ds
push
xchg
add
xor
in
adcl
sbb
lock
sbb
sub
int
scas
cmp
mov
imul
mov
fisttpl
push
outsl
sbb
xor
lods
insl
stos
mov
push
or
inc
jne
lcall
inc
pandn
or
cmp
out
xor
shl
cmp
sbb
pop
sbb
dec
scas
lret
inc
adc
sub
mov
clc
jg
push
jmp
or
cs
mov
push
fstl
xchg
inc
adc
sub
loop
and
push
or
push
outsl
push
jb
sbb
xor
mov
inc
pop
fsts
nop
lds
dec
shrb
xor
mov
sbb
test
push
lock
stos
popf
sub
loop
dec
dec
pop
aaa
lret
add
jg
adc
pop
pop
xchg
loopne
push
int
shll
mov
dec
leave
pop
les
in
pop
xchg
push
mov
push
mov
push
and
les
pop
ret
clc
add
jl
push
pop
notb
pusha
loope
inc
cwtl
ss
or
xor
add
nop
inc
test
daa
sbb
popa
dec
inc
cli
xchg
orl
pusha
add
sub
rorb
jp
pop
xchg
xor
pop
mov
lret
add
or
orb
pop
add
mov
push
jmp
sub
mov
xor
adc
jbe
pop
nop
push
cld
xor
iret
les
add
inc
jnp
add
jmp
dec
in
ljmp
fs
lods
mov
movsb
adc
or
std
fnstcw
mov
inc
sbb
popf
or
add
push
outsb
add
jle
pop
sub
push
and
cltd
ljmp
pop
cmp
test
jp
fildll
pop
sub
push
pop
dec
mov
add
or
ja
sarl
mov
lahf
or
pop
push
xor
aas
jae
fbstp
pusha
repz
sub
aas
imul
fs
mov
mov
out
add
in
std
pop
cmovl
jbe
out
sbb
push
ret
mov
cltd
xchg
sahf
mov
das
fcmovu
xor
jns
jb
mov
sbb
jl
push
xchg
mov
xor
sbb
mov
jp
mull
xor
dec
stos
or
lods
popf
addr16
in
sub
mov
xchg
pop
sbb
loop
push
ss
add
pop
jle
ljmp
leave
pop
insl
sbb
arpl
cmpsb
xchg
and
mov
sahf
incl
xchg
and
mov
arpl
jmp
and
mov
xchg
xchg
cmc
cmc
xchg
les
aam
ds
vmaskmovdqu
adc
cwtl
ds
cmpsl
subl
push
mov
sub
out
mov
add
int
sbb
add
mov
add
inc
or
fdiv
xchg
clc
sub
ds
push
mov
mov
push
ja,pt
fwait
adc
call
js
xchg
mov
lods
pop
leave
lock
xchg
mov
mov
ljmp
xchg
int3
sbb
pop
sbb
push
stos
test
fidivrs
cmpsb
xchg
dec
pop
dec
cmp
inc
mov
imul
xchg
and
or
push
push
inc
fidivs
push
in
xchg
sbb
xchg
icebp
add
adc
pop
imul
mov
movsl
jl
outsl
mov
jle
adcl
dec
push
or
out
push
mov
push
jbe
and
popa
sub
js
inc
push
adc
imul
roll
add
int
push
arpl
mov
pop
cmp
inc
repz
mov
js
int3
outsl
fnstenv
cld
jae
push
scas
addr16
in
test
dec
mov
stc
cmc
cltd
ficompl
xchg
pop
push
cmp
loope
scas
lods
mov
xchg
cmp
pop
mov
orb
jne
xchg
push
pusha
ss
outsb
push
lods
sub
imul
ja
xchg
mov
movsl
mov
fimull
and
ret
shrb
fs
sub
sub
sbb
jecxz
inc
cmp
imul
sti
push
or
add
lahf
leave
lret
pop
add
sub
push
adc
lds
clc
and
xchg
icebp
pop
cs
jb
pop
int
cli
mov
mov
xlat
lret
insl
pop
jl
popa
add
mov
ret
dec
xchg
sbb
push
pop
sbb
pop
jmp
sub
dec
sbb
jae
xchg
je
cmp
pusha
fiaddl
or
inc
push
sbb
lret
mov
xchg
imull
pop
xchg
pop
es
mov
cmpsb
mov
cmp
std
rcrb
mov
inc
cmp
int
xchg
push
adc
fsubrl
sbb
lahf
in
mov
add
leavew
mov
movsl
dec
push
loopne
jne
mov
adc
stos
int
jecxz
sub
mov
sub
jb
push
cmpsl
lods
push
push
shl
ficompl
insl
or
xchg
push
repnz
cmpsl
les
mov
or
push
add
lods
cmpsb
ret
cmp
cmp
scas
mov
fdivs
fistpll
popa
cmp
xchg
pop
ljmp
adc
or
jmp
inc
mov
mov
js,pn
test
xor
jmp
ss
aaa
or
test
dec
and
insl
mov
cmpsl
add
push
mov
or
enter
lret
add
sub
jbe
aaa
loopne
fwait
sub
lret
aaa
jle
add
mull
out
mov
inc
add
and
in
inc
into
out
je
movl
xor
lea
mov
lods
leave
dec
push
and
arpl
inc
cmpsb
xchg
icebp
insl
sub
cmp
and
outsb
lods
mov
pop
mov
pop
sub
mov
pop
cmp
jo
das
scas
into
rol
xchg
jmp
popf
xchg
jne
pop
test
pushf
jp
push
and
jle
bound
cmp
daa
push
mov
mov
cmp
ret
jecxz
sbb
push
sbb
and
push
stos
mov
push
in
lods
xor
jecxz
sti
jb
jb
dec
pushl
xchg
and
cmp
inc
int
push
sbb
aad
outsb
je
hlt
adc
fwait
arpl
inc
js
frstor
push
and
int3
out
mov
add
xor
loope
std
adc
std
jo
push
out
jae
inc
stos
loopne
pop
pushf
pushf
cmc
xor
pop
sub
cmp
inc
cmpsl
cmpb
xlat
aad
xor
ret
mov
add
mov
bound
out
cmp
in
fidivrs
in
cmp
pop
pop
and
rcrl
pop
push
xchg
inc
push
aam
push
popf
iret
repz
lods
pushl
xchg
add
xchg
add
and
pusha
inc
mov
push
addl
add
popa
xchg
std
mov
pop
outsb
jmp
sahf
testl
das
cmc
cmpsl
ds
adc
jmp
inc
or
shr
sbb
clc
scas
icebp
cmp
and
arpl
cmpsl
sbb
orb
cmp
rorl
push
pop
pushf
in
pop
mov
lcall
inc
pop
add
jns
jo,pn
pop
inc
jl
inc
arpl
jae
cmp
popf
les
push
mov
xchg
or
inc
jmp
into
jb
or
bound
movsl
popf
shufps
je
ss
out
aad
xchg
int
in
int3
or
loope
rorl
mov
into
out
add
adc
dec
adc
or
mov
pop
adc
fistps
sub
sbb
xchg
lret
pushf
in
jmp
jge
sbb
pop
sti
xchg
push
mov
or
push
loop
inc
jl
inc
dec
xchg
jbe
fnstsw
inc
xor
fadds
andl
sub
cmpsl
pop
push
xor
push
aam
mov
divb
cld
fisttpll
int3
mov
clc
bound
xchg
add
adc
outsb
cmp
xchg
mov
adc
std
mov
fdivrl
mov
inc
mov
lock
scas
dec
jge
loopne
adc
push
mov
aaa
xor
lock
add
xor
mov
adc
pusha
add
pop
pop
xor
push
std
jnp
call
int
repnz
mov
mov
aam
rcr
fucomip
iret
test
in
push
shrb
pop
push
pop
xchg
mov
xchg
pop
xchg
adc
xchg
mov
lods
cld
aaa
jbe
pop
ss
inc
sbb
imull
movsb
pushf
adc
lds
push
fistpl
push
dec
addl
sub
dec
push
add
int3
xchg
frstor
scas
pop
dec
add
mov
jnp
jno
lock
jmp
int3
jge
mov
mov
mov
jmp
sar
sbb
cmc
hlt
or
out
jecxz
pop
xchg
mov
test
ja
lret
sbb
pop
mov
xor
mov
xchg
mov
dec
mov
mov
loopne
mov
clc
xor
arpl
das
inc
insb
add
mov
out
mov
fldenv
ret
mov
out
push
push
pushf
lods
adc
out
xchg
lahf
jge
in
or
pusha
sub
mov
outsb
mov
push
clc
cmpsl
dec
lods
cltd
pushf
mov
sub
adc
test
inc
push
lahf
mov
inc
mov
jg
adc
mov
pop
jae
sub
pop
das
cwtl
mov
es
daa
jmp
add
jnp
in
bswap
cwtl
add
out
pushf
mov
pop
sub
mov
mov
jb
sub
test
mov
add
call
test
lcall
es
mov
imul
popa
adc
idivb
cli
aam
or
add
xchg
pop
rorl
cmp
mov
xchg
bound
mov
pop
dec
out
and
mov
cmp
inc
lahf
sub
movsl
or
dec
push
out
mov
xorb
inc
pop
lret
loopne
daa
daa
push
les
xor
xchg
push
outsl
push
mov
or
ficomps
pop
outsl
lock
cld
scas
mov
leave
leave
outsl
pushf
xlat
loop
jb
add
adc
mov
pop
cmp
sub
cmp
lret
cld
dec
cwtl
loope
mov
leave
push
push
fcompp
pop
or
sbb
cltd
fmuls
and
add
test
xchg
ljmp
scas
dec
mov
lds
scas
bound
hlt
data16
les
mov
mov
inc
cmpsl
ds
movb
or
loop
mov
xchg
push
and
fs
pop
xor
insl
or
fcmovnu
loopne
pop
jbe
and
sbb
inc
add
pop
lods
arpl
adc
xor
inc
cmp
cmp
sbb
mov
sbb
jne
cld
jle
nop
cld
stos
cmp
in
daa
sub
cmpps
int
mov
jp
push
je
lock
cmc
loopne
int
cmpsl
jbe
inc
inc
and
test
int3
xor
jne
lock
xchg
lds
call
mov
ret
test
lret
mov
scas
enter
pushf
cwtl
jno
in
xchg
pop
mov
xchg
popa
push
out
xor
push
or
adc
nop
inc
loope
in
inc
xchg
aaa
popa
inc
cmp
push
sahf
mov
lea
div
add
cld
int
out
scas
test
add
sbbl
push
out
inc
cs
in
test
aaa
xchg
adc
adc
sarb
or
push
aaa
enter
ss
push
mov
mov
or
cmp
loope
call
insl
xor
inc
xlat
push
cmp
mov
adc
jno
mov
rclb
mov
fiaddl
int3
scas
test
mov
push
and
and
out
mov
aas
xchg
pop
cmp
adc
popa
test
mov
xchg
pop
xchg
mul
aad
dec
push
std
jge
popfw
ret
jge
jne
and
xlat
push
std
mov
adcl
mov
aaa
dec
mov
lret
and
rcrl
push
mov
push
mov
out
cli
lret
je
ljmp
jb
inc
mov
cld
jmp
dec
lahf
pop
or
inc
inc
imulb
mov
pop
inc
dec
js
in
insl
and
call
or
aam
sbb
xor
jmp
into
ljmp
inc
dec
arpl
insb
insb
add
ljmp
in
bound
sti
jbe
mov
insl
and
cmp
add
iret
lods
iret
popf
mov
iret
mov
cmp
or
jbe
or
jnp
addb
cwtl
jmp
jmp
add
mov
rcr
mov
icebp
mov
cmp
mov
ficoms
xchg
bound
jae
out
push
shrb
or
addr16
xchg
imul
sbb
jae
scas
test
arpl
mov
mov
xchg
out
aas
mov
jge
pop
cmpsb
loop
sahf
or
imull
pop
sarl
hlt
sti
pop
loope
pushf
aad
lcall
nop
lods
repnz
sub
cwtl
or
cmp
cmpsl
adcl
lcall
popf
xchg
js
shlb
addr16
into
jno
ss
or
sti
xchg
rol
push
mov
aas
repnz
insb
dec
jo
aas
stc
lret
pop
xchg
and
jnp
push
in
pop
dec
movsb
sahf
mov
mov
xchg
xchg
ret
fdivl
loope
ja
clc
jge
fnsetpm(287
jge
iret
popf
dec
inc
inc
dec
cs
outsb
jo
ret
fadd
dec
inc
arpl
loopne
sub
lds
lods
and
mov
icebp
stos
mov
cmp
sub
jge
or
xchg
cmc
bound
ret
enter
sbb
gs
cmp
loopne
sub
test
sahf
push
jno
push
int
loop
jbe
jno
jp
loop
cmp
pop
inc
insl
out
cmpb
ja
mov
movsb
xchg
rolb
imul
int3
nop
je
sub
sbb
mov
push
mov
jecxz
movsb
bound
inc
outsb
ja
test
mov
mov
in
loope
sub
adc
adc
pop
outsl
out
jmp
jge
jp
test
xchg
xor
mov
adc
sahf
stos
das
jmp
lea
jb
shrl
jo
xchg
sbb
stos
insl
repnz
in
jge
mov
mov
bound
sbb
inc
stos
popf
jp
mov
lds
mov
leave
bound
ret
enter
dec
les
test
ljmp
adc
inc
pop
jmp
mov
push
fistl
xchg
cli
fisttpll
loopne
ljmp
rorb
adc
iret
xor
sub
jo
dec
in
jb
push
jle
adc
cmp
or
or
into
aam
push
aam
pop
push
sbb
lods
out
rorl
add
loope
psllw
or
pop
mov
or
pop
int
mov
xor
cli
xchg
imul
cmp
xor
or
inc
sbbb
rorl
push
sub
in
movsl
dec
push
inc
fisttpll
cmp
mov
dec
data16
imul
int3
mov
imul
repnz
pop
fnstsw
sbb
je
adc
out
sub
arpl
loop
movsb
fs
mov
and
test
mov
mov
mov
or
cmp
mov
aad
pop
in
jbe
fwait
adc
outsb
xchg
movsb
mov
mov
sbb
in
jl
out
movsb
int
inc
stos
orl
clc
sub
and
inc
sarl
mov
cli
leave
fcomps
repnz
int
xchg
pop
int3
cmc
loop
inc
clc
pop
dec
sub
ss
jp
push
jecxz
iret
sar
ficomps
cmp
mov
inc
xchg
vsqrtps
xchg
lret
mov
mov
push
ret
subl
test
enter
out
ja
iret
icebp
and
sub
rolb
shl
mov
dec
xor
out
roll
xchg
clc
cmpsb
and
mov
pushf
out
xchg
jbe
dec
inc
mov
and
mov
pop
mov
or
out
mov
sbb
inc
aas
aaa
xor
arpl
sahf
clc
bound
inc
lock
std
int
mov
mov
mov
stos
ss
adc
movsl
mov
cmp
loopne
cld
insb
popa
jae
inc
sub
xor
enter
test
lds
add
cmpsb
cld
movsb
stos
dec
or
jo
xor
lods
inc
fnsave
sub
adc
add
inc
scas
sbb
sahf
mov
push
push
add
or
fs
ret
in
pop
pop
jbe
add
mov
add
jbe
fnstsw
mov
push
fsubrl
mov
or
fmull
xchg
sbb
das
jno
test
pop
int3
or
cmp
push
repnz
add
push
pop
bound
ret
sbb
push
xor
iret
push
daa
lods
mov
adc
pop
cwtl
aaa
out
mov
mov
outsb
xlat
sbb
push
add
pop
mov
push
pop
pop
xchg
sbbb
fstps
ret
call
sub
pop
popa
inc
scas
stos
inc
push
mov
pop
cltd
pop
lea
mov
cwtl
scas
bnd
push
jp
jno
xor
cli
pop
mov
mov
pop
jge
popa
dec
pop
setge
fnstcw
ds
mov
fyl2x
in
cmp
fs
push
inc
sahf
lret
and
dec
rcll
mov
add
cltd
xor
mov
inc
in
pusha
sub
mov
mov
pop
adc
icebp
subl
jns
dec
pop
fidivl
out
sbb
gs
bound
icebp
leave
xchg
arpl
mov
mov
jmp
push
jg
pop
popa
cmp
pop
and
xor
and
jne
jno
in
jne
fisttpll
jmp
xchg
add
fcoml
xor
sub
xchg
cld
int
das
add
in
xor
pop
dec
hlt
and
push
jbe
xchg
loop
inc
fldt
scas
outsb
iret
test
jno
mov
test
popa
fstpl
out
imulb
mov
jmp
mov
inc
jnp
dec
cli
mov
xor
push
push
jnp
jl
ljmp
push
jl
jne
xchg
jo
ss
pop
push
cli
pop
dec
jbe
jecxz
lods
popf
jg
daa
lret
lcall
mov
cltd
mov
lods
loopne
lds
ds
push
sarl
jle
mov
enter
pop
int3
dec
jecxz
sbb
sbb
add
xor
dec
mov
jbe
mov
or
fiadds
or
lret
or
adc
add
repz
leave
mov
fistps
mov
mov
push
cld
movsl
andb
iret
lods
cmc
xor
lret
testb
cmc
push
cli
xor
test
fsubr
dec
mov
jo
mov
jno
iret
adc
popf
leave
mov
mov
cli
mov
cltd
mov
out
sbb
inc
ret
mov
mov
mov
scas
pop
cmp
divb
int
rorl
iret
pop
lock
jecxz
fxch
push
jo
and
xor
adc
push
adc
sbb
fs
mov
ret
lods
mov
out
das
pop
pminub
adc
xor
jmp
cmpsl
jbe
inc
scas
cwtl
push
shlb
fnstenv
daa
push
sub
add
test
xchg
aad
stos
inc
mov
pop
hlt
out
pop
cmp
imul
inc
and
inc
insl
in
outsb
sub
push
jmp
incb
cmp
fwait
fwait
ret
mov
insl
ret
popf
mov
ret
arpl
sub
inc
pop
dec
adc
xchg
stc
je
loope
sti
jbe
scas
fimuls
test
mov
or
ret
jnp
inc
es
cmc
test
sbb
popa
add
jp
ficompl
mov
pop
pop
fwait
xor
cld
pop
sbb
pop
movswl
pop
imull
leave
rcrl
sbb
popl
pop
outsl
jmp
lods
xchg
in
adc
inc
imul
ficoml
mov
loopne
xor
mov
ret
jnp
in
add
ret
adc
mov
int
inc
popa
add
orb
add
cltd
adc
cmp
xlat
mov
insb
lds
pop
xor
rcl
out
insl
loop
xchg
cwtl
add
aas
jmp
jae
fdivrs
ja
sub
test
ss
mov
addb
ret
sarl
or
movsl
addb
xor
xchg
push
fsubrs
dec
je
fwait
lods
push
mov
iret
adc
add
pop
add
ljmp
lret
mov
imul
lret
insb
fdivl
mov
lock
sahf
jl
sbb
cmp
and
fldt
xchg
fisubrs
xchg
mov
jmp
jno
sbb
dec
xchg
xchg
mov
pop
mov
stc
lds
aam
rcr
sti
mov
xchg
mov
xchg
jge
inc
pop
cmpsl
das
sub
jne
jb
dec
mov
stos
jb
push
repz
and
cltd
xchg
iret
mov
add
scas
xchg
cwtl
cli
or
mov
subl
dec
or
rorb
push
fucomi
inc
lea
jp
loopne
cmpsl
idivb
test
jns
mov
cmpsb
xchg
sbb
pusha
mov
xchg
sar
sahf
fistpll
lock
pop
xor
cwtl
or
popf
outsb
cld
add
aam
mov
inc
pop
ljmp
jl
xor
clc
pop
pop
cmp
insb
fiaddl
sahf
or
mov
enter
lea
in
shl
mull
idivb
cmp
test
xor
rcrl
lcall
push
out
std
sbb
sbb
xchg
cli
std
mov
sub
rorb
jne
and
fcmovb
add
shrb
mov
rcl
imull
add
and
lock
jbe
sti
cmpsl
sub
mov
in
cmp
lret
ljmp
add
shrb
or
mov
out
jbe
jne
fcmovne
es
movsl
add
add
orl
push
sbb
push
dec
test
daa
push
dec
or
sbb
jo
fistpll
cwtl
inc
cwtl
aam
outsl
xchg
jno
in
add
inc
add
daa
push
sbb
xchg
and
and
push
ret
xchg
add
mov
es
rol
mov
lcall
fisubrl
cwtl
es
pop
jae
dec
and
in
mov
add
cmpsb
bnd
in
or
lods
push
add
outsb
popa
mov
imul
inc
outsl
xor
push
adc
int3
or
daa
mov
aas
xchg
push
cmc
pop
mov
mov
dec
mov
jge
loopne
test
addr16
pop
mov
mov
xchg
scas
dec
push
sub
aas
imul
push
test
or
mov
loope
es
add
xchg
lret
sahf
setle
out
pop
lods
sti
mov
jae
inc
repnz
mov
push
dec
inc
lret
add
inc
js
repnz
cmp
pop
mov
movsl
push
repnz
adcb
in
push
push
testl
push
dec
fistpll
in
test
fistpl
xchg
mull
xchg
fcmovnu
movsl
outsl
xchg
mov
adc
les
cmpsb
rcl
push
mov
bound
into
call
pop
lahf
sahf
das
mov
mov
sbb
fstps
out
jno
pop
dec
or
adc
jnp
or
je
cmpsb
insl
jg
adc
stos
addr16
stc
scas
jae
dec
das
ret
xor
mov
mov
mov
sub
out
add
cmpsl
test
dec
pop
mov
and
xlat
mov
inc
push
fwait
mov
cmpsl
cmpsb
or
popa
insl
int
pushw
pusha
ja
shrb
fs
mov
sub
leave
inc
add
xchg
xchg
cmp
dec
test
movsb
push
popa
sti
test
push
insb
iret
pushf
pop
sub
hlt
sahf
and
imul
sub
js
and
push
test
rorl
sahf
mov
mov
mov
outsl
inc
sub
sbb
aad
xor
rorl
adc
pop
loop
push
xchg
mov
ficomps
ret
aaa
icebp
daa
call
das
iret
pop
lds
iret
arpl
dec
push
dec
cltd
ficoml
movsb
cmpsl
jp
and
divl
sub
roll
dec
test
stc
jg
mov
sti
jo
dec
xchg
cmp
xchg
sti
je
sub
test
xchg
loope
fs
out
popf
dec
add
cltd
push
xchg
push
push
dec
stos
and
jns
flds
push
shrb
repnz
add
push
inc
jl
cmc
xor
or
daa
pop
ret
push
mov
dec
mov
fcomi
je
ja
stc
js
fildll
push
addl
sub
jbe
fwait
mov
int3
mov
pop
jge
mov
stc
mov
jg
hlt
fcom
int3
add
pop
dec
dec
aaa
xlat
ret
or
sub
and
push
das
lret
xor
fbstp
pop
sbbb
mov
cmp
and
iret
pop
and
sbb
xor
lahf
jne
cmp
popa
mov
gs
xchg
pop
xor
push
test
add
and
cmpsb
add
gs
mov
dec
pop
out
jb
jnp
add
cmp
jg
mov
or
adc
subb
mov
mov
xchg
shrb
pop
in
ret
push
pop
mov
insb
sub
sbbb
sub
stc
ja
sbb
mov
xor
outsb
ja
std
cmpsl
pop
and
fdivp
cld
jg
or
sbb
sbb
xchg
daa
popa
jle
fisubrl
fs
pop
sub
mov
pop
push
mov
mov
xchg
push
aaa
stos
shrb
cs
push
icebp
fld
bound
pop
fcomip
push
scas
jo
mov
js
push
mov
cmovge
pop
inc
jae
mov
jae
cwtl
mov
push
aad
insl
arpl
sub
mov
inc
jl
outsb
neg
clc
mov
scas
push
adc
pop
jg
pop
pop
mov
jge
clc
cmp
dec
and
ror
sbb
xlat
hlt
xchg
jmp
xchg
and
xchg
icebp
adc
jg
or
mov
add
lock
push
rcrl
cmp
nop
aas
adc
neg
sub
mov
or
adc
jg
mov
mov
mov
add
outsl
cmpb
or
orps
bound
or
jmp
nop
mov
movsb
mov
sub
dec
push
pop
xchg
fs
pop
cltd
jp
dec
or
cmpsl
fisubl
add
add
imul
mov
aad
shll
das
push
les
fwait
mov
in
in
and
outsl
mov
test
inc
push
pop
pop
cmp
adc
imul
lcall
outsl
ss
or
frstor
iret
scas
into
or
mov
inc
icebp
in
push
mov
xorb
loop
fcomip
mov
int3
das
adc
mov
jmp
adc
in
je
test
cmp
cmpb
imul
xchg
lods
leave
pop
fsubs
and
icebp
xchg
or
stc
clc
add
in
repnz
xor
lcall
nop
sbb
ret
mov
mov
dec
ja
flds
arpl
lods
xchg
loop
dec
cmp
mov
add
push
pushf
jecxz
pop
mov
int3
and
sbb
jmp
xchg
or
or
ss
xor
rorb
ljmp
fsubr
stc
jl
add
push
sbb
mov
mov
ss
xchg
fistpll
fistpll
pop
dec
xor
cmc
jmp
mov
jl
pusha
xchg
adc
loopne
jle
mov
out
jge
or
or
sahf
mov
stos
int
aam
fisubrs
mov
sub
ficoms
add
std
and
xchg
movsl
inc
lret
scas
in
sub
icebp
dec
sbb
sub
mov
push
lret
jp
and
sahf
push
imul
sahf
idivb
sbb
sahf
lock
cmp
mov
scas
mov
jp
sarl
jne
lret
fbld
or
or
inc
js
dec
popa
push
clc
into
xchg
test
aam
ret
mov
lret
xor
inc
mov
insb
imul
or
add
mov
inc
push
jecxz
pop
xchg
jl
out
in
clc
push
mov
or
cmp
mov
test
pop
mov
push
push
lahf
cmp
roll
mulb
pop
popf
js
push
repz
jle
inc
sbb
pushf
and
xchg
test
mov
pop
xor
mov
cld
and
adc
pusha
lea
push
jb
adc
in
mov
iret
sub
push
popa
jae
fildl
or
sbb
sbb
ret
add
push
inc
lcall
cmp
popf
clc
or
cltd
mov
stos
sub
dec
xor
sbb
jb
cltd
push
ljmp
addb
lret
adc
sahf
mov
inc
scas
pop
push
cmpsb
jmp
jmp
mov
jne
dec
mov
sbb
arpl
cmp
dec
movsb
cmpsl
pop
xor
xor
cs
jmp
xor
cmp
shl
sbb
out
lret
jno
lcall
sub
adc
imul
loope
sbbb
and
xor
xchg
cltd
xchg
fs
loop
push
mov
movsb
adc
push
adc
push
adc
cwtl
ss
fwait
add
clc
jb
pusha
fcmovnbe
and
mov
stos
add
add
ficoms
idivl
lret
jp
mov
and
daa
mulb
repz
std
dec
out
mov
sub
jne
adc
xchg
xchg
mov
or
xchg
enter
mov
push
sbb
pop
xlat
adc
loope
bound
pop
iret
jmp
cmp
or
and
fldl
idivl
insb
ficoms
inc
sbb
dec
fwait
jbe
lahf
or
mov
aad
jnp
ror
ss
test
mov
icebp
push
fadds
out
loopne
inc
inc
sub
sbb
scas
or
mov
sub
jo
adc
jne
out
mov
pop
push
mov
clc
fs
jne
sbb
call
pop
and
cmp
mov
in
fsts
inc
idivl
testl
adc
enter
js
fmuls
push
dec
mov
mov
dec
popf
add
inc
xor
arpl
inc
stos
imul
adc
popa
ret
ret
les
test
push
imul
test
lock
dec
adc
cmpsl
dec
rclb
out
es
cld
cmp
lea
pop
push
jo
pop
jno
push
das
cmp
and
fwait
aaa
mov
jl
or
mov
push
adc
jb
jb
faddl
rorb
cmc
push
scas
inc
in
out
push
cmpsb
or
adc
cmovg
jb
jmp
xorb
jle
jg
mov
jbe
add
mov
mov
mov
lods
imul
sub
test
push
stos
pop
cmp
cli
std
ja
je
call
push
or
xchg
rcl
inc
cwtl
add
sahf
fcomps
nop
inc
add
fisttpll
hlt
fdivp
je
outsl
sbb
cmpsl
call
mov
aam
add
and
adcl
in
test
adc
adc
mov
mov
test
loope
loopne
out
push
xchg
push
push
sbb
pop
aas
in
sbb
jg
lret
xchg
out
das
sub
add
scas
xor
mov
fldenv
jmp
cmpsb
outsb
sbb
mov
sub
test
inc
and
lcall
jmp
shll
nop
es
jb
jns
call
jo
push
insb
jno
dec
xor
cmc
ja
fsubrl
jns
cmp
fistl
xchg
not
push
adc
adc
in
cli
insb
loop
pop
mov
xchg
lods
mov
push
mov
jbe
fists
out
inc
mov
push
js
jl
pushf
push
jle
fldcw
sbb
in
imul
movsb
cmp
incb
lock
fld1
push
mov
pop
push
pushw
inc
fistps
dec
jb
and
aad
xchg
inc
mov
imul
test
add
pop
pop
loopne
xor
cwtl
neg
mov
sahf
ds
push
movsb
mov
sbb
adc
xchg
mov
fwait
cmp
inc
mov
or
push
adc
sub
stc
pop
sbb
das
js
mov
or
push
pop
sbb
adc
add
in
pop
sub
test
push
and
dec
dec
mov
and
mov
loop
mov
jle
sbbl
jo
jnp
pop
lods
mov
push
fiaddl
or
sub
ja
xchg
bnd
stos
cld
scas
sub
jnp
shlb
pop
inc
stos
add
mov
iret
mov
stc
adc
jg
adc
add
jnp
push
aas
ja
cli
subb
sbb
mov
ror
rclb
add
das
push
sub
loope
js
ja
scas
je
fnstcw
jg
repnz
and
pop
jle
and
movsl
sbb
sub
ss
daa
mov
int
lock
jo
mov
xchg
subl
sbb
sub
sub
aam
adc
andl
pop
ja
inc
pop
jnp
mov
popa
scas
iret
sbb
and
jp
mov
cmc
imul
or
mov
ja
stc
decl
xchg
xchg
pusha
xor
dec
mov
out
out
mov
jbe
and
cld
in
aas
scas
hlt
scas
cmp
sub
mov
insb
cmpsb
xchg
fdivs
lea
sub
xor
insl
or
push
mov
fwait
and
sti
fldenv
pusha
sbb
pop
ljmp
rclb
das
addr16
fbld
fnstsw
ja
fcmovnu
imul
sub
sti
add
inc
or
out
pop
or
mov
divl
int3
mov
stc
add
rorb
push
pop
and
xlat
mov
cld
jnp
lds
nop
shlb
xor
lret
jge
adc
adc
xchg
ja
cmpl
or
mov
aas
dec
push
jns
aam
nop
out
nop
aam
dec
xlat
push
lret
sub
push
lcall
dec
clc
push
cmp
mov
inc
pop
push
in
cli
add
jae
cmp
js
cmp
nop
lock
sub
mov
loope
out
int
ds
dec
cld
sub
sbb
dec
pop
test
xorb
sbb
movsbl
pop
js
int3
xchg
sub
mov
pop
in
mov
cmp
dec
std
mov
aas
hlt
int
sbb
mov
cwtl
push
in
insb
inc
pop
pop
pop
mov
mov
sbb
mov
push
add
or
cli
je
movl
jns
out
push
add
and
cmpl
xchg
dec
xor
push
add
dec
inc
mov
push
xchg
mov
stc
sub
mov
jl
inc
inc
frstor
ja
pop
dec
pop
pop
rcl
mov
mov
add
dec
push
sti
jp
jne
bound
fadd
repz
push
loop
mov
aad
lods
int
aad
sub
lds
jbe
or
and
lods
outsl
pusha
clc
jmp
imul
lcall
icebp
repz
lods
jge
sarl
addr16
xlat
push
pop
push
les
push
jp
int
sub
jl
mov
jg
pushf
inc
push
jne
out
dec
out
pop
mov
mov
xlat
pop
pushf
pop
testl
mov
std
cwtl
sbb
adc
int
data16
add
and
lods
mov
xchg
int
stos
ljmp
mov
data16
movsl
pop
xchg
inc
fdivrs
imul
out
dec
jle
or
loop
xor
jge
rcll
inc
push
or
add
inc
out
pop
xor
aaa
clc
mov
pop
pushf
mov
adc
cmpb
and
xor
sbb
push
shll
xchg
sbb
jp
push
decl
jmp
jg
and
cwtl
and
sahf
pop
test
inc
dec
in
dec
xor
fistl
sbb
adc
xor
xlat
cmp
lret
psubw
mov
or
push
addr16
and
xlat
aam
and
mov
rolb
xor
and
out
inc
pop
lahf
jae
cmp
ja
movb
sbb
outsl
popf
mov
leave
xor
pop
inc
adcl
push
jmp
stc
jecxz
cmpsl
add
push
cmp
mov
popf
jmp
in
or
xchg
sbb
jae
jecxz
jno
out
jl
roll
xchg
iret
lods
mov
push
lods
mov
sahf
adc
icebp
push
lds
ja
roll
jmp
mov
flds
adc
out
dec
adc
and
pop
cwtl
xlat
cmc
inc
mov
fdiv
nop
loope
sbb
xchg
mov
xchg
adc
dec
sti
aam
fisttpl
loope
jno
into
mov
sub
test
call
dec
fistps
pop
push
cli
and
and
dec
adc
sbb
inc
inc
or
pop
pop
inc
push
sbb
jnp
sbb
mov
add
pop
lock
jecxz
jb
add
xor
sub
cmp
jae
cmp
aam
push
mov
or
ds
popf
push
fs
fdivrl
and
ss
sub
hlt
test
fists
test
adc
es
test
or
repz
cmp
imul
push
jg
jno
dec
sbb
push
mov
imul
mov
cmpsl
xchg
or
mov
fisttpll
push
fwait
pop
mov
iret
in
sub
notb
int
fidivrs
adc
js
into
test
std
insl
and
push
and
jo
arpl
fstpl
xor
out
jae
stos
loopne
add
lret
push
lods
pop
jae
ficompl
xor
push
loopne
jecxz
pop
dec
pusha
fdivrl
jge
out
lock
lea
cmp
lds
nop
orb
jle
test
iret
jb
adc
pushf
mov
jbe
repz
jle
or
cmc
cli
fildll
aad
xlat
ror
sub
ror
bnd
sahf
sub
mov
xchg
mov
mov
mov
inc
xor
pop
lret
stc
fwait
jo
push
push
stos
sub
cmp
inc
inc
fiadds
lods
fstpl
cmpsl
adc
pop
lods
xlat
imul
pop
imul
es
pop
pop
mov
out
sub
add
mov
xchg
pop
pushf
jbe
cmp
xchg
cmp
mov
arpl
adc
sbbb
and
nop
xchg
sbb
inc
call
shr
divb
jle
mov
mov
daa
mov
hlt
dec
xlat
pop
daa
lods
and
ljmp
cmp
mov
inc
cltd
inc
fs
fcoms
xor
cld
fstpt
jl
outsl
add
sub
jp
stos
test
inc
mov
jp
inc
movsb
test
mov
adc
pop
or
mov
dec
push
dec
dec
pop
add
mov
enter
nop
mov
jae
adc
sub
je
in
out
adc
insl
cmp
lret
cmpb
adc
movhlps
and
aam
das
gs
into
and
out
dec
icebp
jne
stc
or
outsl
dec
out
xor
cmp
outsl
pop
sub
lock
inc
inc
inc
cld
mov
pop
loopne
lret
fimull
mov
mov
ret
push
add
test
xor
xchg
sub
sub
insb
aas
dec
cmpl
xchg
inc
fldt
ret
push
cmp
insb
jecxz
ljmp
out
jecxz
cmp
cmpsl
fsub
jg
stos
stos
sti
sbb
mov
shlb
xor
push
cli
pop
jmp
mov
daa
mov
add
mov
push
jge
out
pop
pop
push
mov
mov
movb
or
inc
add
or
es
mov
or
iret
test
repz
pop
lods
cli
inc
and
xlat
imul
ljmp
fdivp
jb
cmp
jmp
jg
jle
data16
and
pop
subl
mov
fcomi
cmp
lea
ret
sub
or
xchg
das
outsl
fcoml
xrelease
lods
jne
int3
mov
xchg
mov
adc
cltd
inc
das
jnp
push
or
adc
stos
movsb
jb
cmp
or
cmp
and
rcll
cwtl
cmpsl
sti
rclb
xchg
mov
sub
fcomps
rolb
pop
add
pop
loop
out
jecxz
enter
adc
vpunpcklqdq
dec
sbb
cmpsb
mov
push
test
into
mov
push
xchg
fwait
dec
fimuls
outsl
mov
mov
inc
scas
pop
call
push
xor
pop
mull
outsb
xor
xchg
das
jae
les
mov
sti
pop
fildl
jecxz
in
in
scas
imul
cli
mov
push
pminub
xchg
addb
mov
in
push
xor
add
or
lock
fiaddl
xor
dec
sbbl
test
int
inc
scas
adc
lods
mov
and
sub
add
in
out
xor
mov
xor
pop
cmpl
sbb
sahf
leave
pop
adc
mov
mov
cs
loopne
mov
xchg
adc
sub
cmp
cmp
test
sbb
pushf
pusha
lock
lret
test
inc
nop
mov
adc
aaa
mov
scas
mov
xchg
inc
mov
pop
lods
vcvtsi2sdl
icebp
popa
arpl
fdivrl
dec
inc
fwait
push
ror
mov
mov
mov
or
cmp
les
stos
or
and
test
cmp
int
mov
pop
xchg
out
popa
addr16
mov
es
mov
add
movsl
jle
arpl
lcall
adc
push
sub
cli
loope
cltd
stc
mov
push
push
mov
int3
sub
jmp
push
mov
repz
cmp
hlt
ret
jae
jmp
fwait
cmp
repnz
ret
fs
mov
icebp
add
cli
daa
inc
inc
sub
jp
sbb
aam
mov
mov
or
jge
or
es
and
arpl
sbb
daa
lods
push
xchg
loope
jns
insb
and
ss
xchg
inc
xchg
jle
pop
lcall
add
imul
mov
sbb
sub
pop
mov
lret
jmp
pop
fildll
jnp
aas
mov
int3
and
mov
cltd
data16
jge
pop
aad
dec
fisubl
mov
bound
jp
mov
cmp
enter
lea
aad
js
and
int
inc
enter
push
sbb
movsl
aas
push
arpl
adc
movsb
outsl
ja
ja
mov
inc
loope
fnsave
cmp
or
lret
int
xchg
outsb
scas
ret
in
adc
mov
pop
inc
aas
jg
mov
lock
dec
fildl
adc
adc
out
jo
jle
xor
adc
add
shr
cmp
enter
sar
or
pusha
call
imul
jecxz
xchg
mov
dec
mov
jg
out
jmp
ret
xor
dec
cmp
lea
ds
sub
shl
sbb
xchg
out
repnz
es
arpl
into
into
mov
xor
add
sub
inc
or
mov
jge
xchg
loope
push
mov
stc
popa
push
add
xor
add
in
out
xchg
dec
pop
outsl
sbb
xor
mov
sub
cmp
das
add
jbe
xor
cmc
xchg
dec
jl
inc
pop
bound
bound
cmp
leave
ret
add
sahf
pop
sbb
js
xchg
inc
pop
or
aam
fdiv
sbb
sar
sbb
add
ss
mov
and
addb
jg
loop
out
sti
push
shl
sarl
cmp
scas
ror
lods
movsb
pop
sub
dec
mov
jnp
and
push
mov
cmp
mov
stos
pop
repnz
fdiv
cmp
insb
and
mov
and
mov
mov
and
xor
xchg
adc
jno
pop
xor
sub
fstpl
xchg
cwtl
xlat
popa
cwtl
test
push
xchg
xchg
rol
popf
lds
xlat
push
push
or
add
jno
pusha
jle
inc
popa
out
inc
push
xchg
lret
mov
rorb
push
sahf
jecxz
mov
jg
or
xor
mov
add
pop
aas
movl
sbb
les
cmpsb
push
mov
xor
mov
mov
stos
movsb
push
add
rolb
pop
aad
test
mov
mov
adc
mov
sub
dec
inc
jle
cltd
cwtl
mov
mov
and
inc
sub
int
ljmp
or
subb
inc
addr16
cmc
cmp
add
lods
cmpsl
mov
int3
add
push
mov
out
ds
aam
arpl
div
gs
jmp
push
mov
inc
popf
leave
pop
mov
dec
fldt
xchg
daa
int3
xchg
ja
scas
insb
or
push
test
mov
dec
or
jno
hlt
fwait
out
call
rorl
scas
xor
jo
adc
leave
pop
pushf
inc
addr16
fisubrs
push
lds
pushf
movsl
leave
scas
ds
push
pushl
call
xor
negl
negl
mov
dec
mov
lods
stc
dec
mov
cmp
xor
sahf
adc
std
push
loop
inc
movsl
push
push
mov
push
in
flds
xchg
lock
jbe
clc
mov
daa
mov
pusha
cmpsb
dec
jmp
iret
pop
daa
movsl
inc
test
arpl
mov
in
jb
sub
adc
vcvttss2si
dec
pop
pop
pushf
xchg
and
or
xchg
sub
jmp
stos
and
mov
outsb
inc
and
aam
les
pop
xor
popa
fmull
sub
xchg
daa
push
cmc
push
int
mov
in
inc
sbb
and
aaa
mov
rolb
adc
mov
ret
cmpsb
push
sbb
aad
fdivrl
sub
lret
xor
dec
mov
push
mov
rcll
rclb
lahf
xor
dec
test
cmp
imul
incb
pop
xor
jne
aaa
mov
fistl
xlat
aad
stos
dec
push
add
sbb
add
leave
es
adc
sbb
ss
xchg
push
inc
scas
add
cmpsl
popa
mov
fnstenv
movsl
fwait
jmp
insl
fs
mov
imul
loope
pop
call
or
bound
dec
mov
push
pop
mov
xchg
push
jg
push
mov
ret
ret
into
sbb
push
data16
iret
push
push
adc
mov
cld
daa
sub
shlb
xchg
shlb
pop
sbbb
rcll
mov
movsb
aaa
mov
sbbb
out
jle
fs
lea
daa
enter
xchg
push
pop
add
mov
inc
enter
fisubl
mov
jno
dec
xchg
jae
seto
xor
aad
add
mov
popf
push
shlb
pusha
xchg
mov
or
and
notl
mov
add
mov
adc
int3
adc
pop
and
mov
leave
mov
into
sub
daa
fdivrs
dec
das
add
mov
sub
mov
xchg
inc
xor
in
cwtl
dec
add
js
adc
mov
xor
fdivl
or
pusha
xchg
prefetchw
push
lcall
or
out
lock
test
or
ljmp
in
jbe
sub
popa
sub
sarb
mov
fdivrs
cmc
mov
stos
sbb
js
mov
mulb
or
dec
push
adc
xchg
leave
fdivrp
sub
jb,pn
fidivl
es
ljmp
adc
in
sbb
test
divl
mov
in
mov
mov
push
or
stc
sahf
cmpl
mov
fwait
sarb
into
loopne
push
call
pop
in
and
mov
sbb
mov
add
repnz
dec
out
push
xor
dec
pop
lock
imull
sub
mov
lea
nop
xchg
loopne
lret
loopne
imul
pop
aas
or
orb
stc
rol
pop
cli
nop
roll
fidivs
lods
repz
int3
sahf
jmp
imull
add
pop
loop
ds
cmpsl
push
outsl
movsl
push
nop
push
or
test
sbb
mul
ret
cltd
mov
mov
ljmp
mov
add
push
jp
jns
mov
fnstcw
jmp
bound
outsl
xor
in
mov
into
and
adc
pushf
inc
stc
jg
sbb
loop
jae
cmpsl
push
cmpsb
mul
addps
sahf
add
pop
fcoml
cmp
xor
icebp
dec
ds
push
or
mov
push
xlat
mov
out
lret
dec
call
movsb
cmpsb
inc
xchg
inc
mov
stc
sets
sub
push
sub
add
xchg
scas
mov
add
pusha
je
inc
dec
scas
and
jge
movl
and
cmpsl
sbb
push
jns
push
outsl
jge
in
push
mov
sbb
fs
jg
inc
mov
popa
and
lock
mov
pop
or
mov
fidivl
das
mov
and
add
cmp
int3
mov
inc
rolb
xlat
xor
mov
addr16
pop
out
jmp
rcr
out
cli
shll
mov
pusha
sbb
push
or
test
add
out
mov
adc
shr
xlat
icebp
push
dec
xchg
lods
pop
push
icebp
and
call
lea
mov
shl
or
pop
sbb
mov
dec
das
gs
lods
xor
lahf
lcall
shlb
add
mov
subl
cltd
mul
jnp
cli
fucomip
aam
mov
int3
ret
jecxz
sub
rcrl
adc
cltd
dec
pop
sbb
bound
ds
pop
push
shlb
pop
notl
cmp
and
nopl
test
or
mov
adc
xchg
adc
push
mov
sbb
and
imull
push
ret
movsl
icebp
mov
inc
add
add
cmp
inc
inc
divb
shll
repz
iret
add
test
jbe
cmp
push
aad
es
pop
xchg
out
out
dec
cmpsb
sub
ljmp
sub
enter
rcrb
popf
andl
loopne
mov
dec
pushf
cli
mov
jbe
insl
mov
mov
idivl
pop
subb
test
push
ret
mov
jg
icebp
insl
loope
push
and
or
jge
gs
mov
movsl
inc
mov
and
les
in
mov
je
jae
sbb
jo
dec
fmul
jle
fldl
or
and
or
mov
ljmp
sub
mov
movsl
add
push
mov
cmp
pop
add
jl
ljmp
mov
add
adc
and
out
mov
dec
aad
repz
and
dec
pop
divb
rcll
jp
push
out
movl
push
fwait
add
jge
cli
inc
jmp
fs
js
jns
mov
in
mov
bnd
mov
adc
mov
and
fcmovb
and
dec
push
in
les
test
dec
sti
aam
fiadds
icebp
push
mov
sub
dec
inc
sub
jno
cmc
ljmp
ret
mov
aaa
pop
cmp
lcall
dec
adc
xchg
imul
inc
mov
jo
or
sbb
in
insl
movsb
sbb
cwtl
xchg
inc
addr16
sub
jo
jmp
lcall
in
pop
or
adc
cmpsb
repz
lods
lds
or
xchg
repnz
dec
rcrb
out
mov
rcl
xor
adc
add
fisubs
cmp
arpl
jmp
pusha
mov
xchg
push
push
adcb
xchg
stc
movsl
sbb
fisttpl
hlt
mov
mov
adc
push
mov
fadd
lret
icebp
dec
jae
outsl
jmp
pop
and
jnp
dec
fs
xchg
hlt
testl
inc
sbb
mov
sub
sbb
xor
loopne
pop
bswap
push
test
jns
cli
jecxz
push
fidivrl
lock
inc
cltd
pop
imul
xchg
fwait
stos
call
icebp
jno
or
add
pop
clc
in
mov
xchg
bound
in
push
mov
jecxz
push
mov
out
pushf
movsl
pushl
arpl
mov
ss
push
lret
push
push
aam
je
push
ds
pop
js
xor
outsl
stc
lock
xlat
cltd
call
jbe
test
loopne
into
jnp
mul
cmp
int3
and
sbb
cli
pop
icebp
mov
push
jmp
sub
pusha
or
cmp
sbb
aas
iret
dec
add
jg
stos
push
add
fildl
fcmovnbe
pop
jno
outsb
lcall
cmc
mov
xchg
dec
aad
pop
cmp
cmp
lods
enter
lock
mov
fucomi
cmpsb
js
fwait
jb
sub
add
lea
in
dec
pop
sub
pop
ljmp
dec
mov
jbe
inc
leave
or
daa
imul
mov
push
mov
cmpsl
pop
add
movsl
add
cli
xorb
pop
pop
push
stc
mov
popf
push
push
lret
outsl
xor
adc
add
sarl
inc
dec
mov
test
sub
in
jecxz
dec
push
add
xor
testl
cmpsb
xor
xor
push
cmp
imul
jl
sub
out
insl
daa
add
xor
movsl
inc
int
pop
mov
sarl
push
cwtl
pop
or
repz
imul
push
aad
shrb
pop
xchg
xor
sub
in
cs
or
jmp
clc
arpl
jmp
loopne
nop
inc
es
sbb
testl
jecxz
cli
cs
jmp
sub
sbb
popf
dec
mov
add
leave
scas
or
arpl
test
fwait
inc
mov
ds
xchg
dec
mov
push
cmpsl
push
mulb
push
fdivrs
push
test
mov
adc
dec
ret
xchg
loopne
xchg
test
test
in
cs
or
mov
add
or
btc
cmpsl
and
out
mov
sbb
adc
sub
shl
xor
cmp
and
lea
mov
mov
mov
pusha
loopne
and
xor
add
adc
lea
leave
imul
dec
cmp
lock
gs
fcmove
nop
push
sub
pop
arpl
aad
and
sbb
jl
in
add
dec
inc
das
cmp
mov
adc
and
push
sbb
sbb
arpl
pop
daa
dec
scas
aam
in
xlat
scas
xchg
push
mov
jle
cmp
pusha
out
pop
out
push
inc
push
xchg
fisubl
cmc
pushf
or
sbb
enter
adc
mov
jae
call
call
mov
cmp
push
mov
push
push
mov
sti
fldenv
pop
sub
test
xchg
sbb
adc
cmpsb
push
xlat
outsb
xchg
jo
repnz
xchg
jecxz
mov
mov
scas
stc
in
pop
cmp
and
repz
imul
mov
or
outsb
sub
add
daa
sub
cmpb
enter
xor
bound
cmc
push
sub
and
shlb
hlt
ss
xchg
cmp
sbb
xor
insl
popl
test
scas
in
dec
mov
jmp
mov
and
jg
mov
or
pop
rcrb
jbe
loopne
cli
clc
dec
fcmovnbe
inc
data16
sbb
mov
jmp
dec
ret
push
xor
xchg
mov
loop
icebp
mov
jmp
and
in
fs
imul
in
mov
in
je
cmp
nop
push
hlt
pop
push
test
push
or
push
add
decl
inc
pusha
out
ds
mov
test
push
jle
mov
xor
jns
scas
pusha
add
insl
sub
inc
xchg
pop
mov
rolb
loop
dec
call
mov
and
scas
movb
lds
add
push
xorb
smsw
in
xchg
dec
gs
test
les
jno
mov
pop
nop
sub
jbe
call
sti
adc
sbb
push
and
popf
xchg
xorl
leave
out
xchg
xchg
les
push
ss
push
mov
orl
lds
popa
mov
mov
stc
fxch
mov
xchg
out
add
mov
repnz
jns
aaa
dec
mov
aas
xor
lods
lret
mov
sub
neg
pop
cmp
xor
xchg
pop
xchg
fwait
jb
pop
pop
lret
outsl
push
push
or
sbb
mov
rcll
mov
repz
popf
jge
or
inc
mov
or
in
mov
repz
mov
daa
inc
jo
add
dec
sub
lock
xchg
dec
and
push
cs
cmp
inc
movsl
das
xor
sub
lret
mov
loope
push
sbb
jns
fcmovnb
loope
lods
movsl
cwtl
jmp
dec
or
xor
push
dec
scas
cmp
and
outsl
outsb
fwait
inc
cmp
das
push
adc
addr16
push
aad
in
jg
pop
ja
push
lret
push
sub
into
imul
fwait
sub
push
or
mov
stos
test
cmp
popl
xor
mov
scas
cs
pop
inc
je
push
lods
xor
roll
adc
mov
xchg
ss
pushf
xor
push
hlt
aad
jne
and
lods
mov
ds
pop
ljmp
mov
out
cmp
mov
outsl
cmp
fdivl
outsl
inc
imul
movsl
pop
mov
dec
inc
popf
pop
cld
inc
adc
lahf
fldcw
lret
adc
mov
xor
dec
shrl
sbb
dec
aaa
test
cwtl
je
sbb
or
dec
mul
imul
fdivl
xor
sbb
dec
ror
sahf
scas
flds
nop
pop
sub
push
ljmp
and
stc
inc
addr16
stos
lods
mov
int
pop
add
fcmovnu
sub
je
loope
adc
mov
sub
mov
jmp
imul
fiaddl
xor
inc
cmpsl
xchg
push
jo
jb
mov
cmc
push
fnsave
dec
jns
mov
xor
dec
mov
dec
sub
jecxz
shr
dec
xor
mov
mov
adc
push
mov
mov
in
push
adc
ja
ja
xchg
jl
sub
aam
cmc
dec
fisttpll
dec
insb
push
ret
push
loop
lea
dec
out
imul
jns
repnz
inc
inc
sbb
jl
and
adc
cmp
test
fldl
and
es
ja
jno
mov
xor
and
push
xor
outsb
sar
mov
pop
push
adc
add
push
mov
addl
shrb
enter
push
mov
push
mov
xor
cmp
adc
cmc
lret
adc
or
sub
dec
test
mov
jae
push
and
out
xchg
xchg
mul
xor
ljmp
call
call
inc
lahf
cmp
lods
push
sbb
arpl
test
sub
sbb
lcall
ret
dec
sub
xchg
adc
hlt
inc
in
aam
sti
fistl
popf
sbb
enter
add
jmp
xor
orb
sbb
sti
xor
adc
mov
jp
repnz
pop
xchg
cmpsl
jmp
or
pushf
mov
pop
rolb
cmp
out
jo
outsb
loopne
aam
imul
sub
mov
jo
mov
jbe
push
movsb
mov
sbb
hlt
lret
sbb
pop
sbb
and
mov
test
xor
push
dec
js
pop
decb
xchg
dec
xchg
xor
lret
mov
imul
mov
sub
adc
mov
xor
fisttpll
movsl
hlt
into
outsl
mov
lods
jp
sbb
jb
movsl
insl
cmp
mov
stc
sbb
sahf
mov
sbbb
sub
int3
pusha
imul
push
jecxz
sbb
iret
add
lret
push
ret
les
insl
inc
mov
mov
movsl
cmp
cmp
sub
push
jo
xchg
push
adc
mov
pushl
adc
push
and
in
ficoml
mov
mov
dec
cs
ret
lods
call
jno
xor
mov
jle
nop
dec
push
in
in
mov
mov
jns
call
and
sarb
aam
adc
and
les
aas
mov
push
gs
aaa
stos
sub
faddl
jmp
lahf
push
out
push
and
jnp
pop
fdivs
int3
lcall
xchg
mov
cmp
add
fwait
jno
lds
shrb
notl
call
pop
out
dec
nop
mov
push
ds
bound
pop
mov
test
add
jo
in
cmc
std
movsl
or
jmp
inc
ss
pop
mov
mov
cmp
mov
psubusb
cmp
test
ljmp
movsb
mov
push
and
imul
rcrb
in
inc
mov
test
cwtl
xor
adc
dec
test
pop
pop
and
int3
in
jmp
add
ds
cmp
cld
stc
popa
add
pop
mov
inc
addl
leave
inc
cmpsb
adc
sub
js
pop
faddp
sub
jp
bound
clc
js
std
xor
js
int3
or
jecxz
popf
in
dec
jg
or
inc
adc
inc
scas
dec
cwtl
loope
add
icebp
fwait
pop
lock
xor
sbb
mull
ficoms
and
lret
and
loop
and
notb
shl
jb
arpl
xor
sbb
mov
mov
push
add
pop
mov
sub
jo
or
inc
stc
mov
and
jbe
mov
fwait
loopne
cs
cld
test
imul
sbb
test
mov
mov
sub
push
insl
das
sub
iret
fiadds
xor
mov
or
out
pop
ja
nop
mov
sub
xchg
lods
rcrl
mov
inc
mov
clc
cmpsb
adc
or
mov
cmp
sub
aaa
sbb
jns
loop
call
filds
cmp
out
sbb
cli
xchg
inc
call
xchg
movsl
jmp
mov
fcomps
xchg
popa
adc
jp
push
shl
js
xchg
jb
aad
icebp
daa
push
fwait
inc
sbb
iret
inc
test
fisttps
bound
hlt
mov
add
dec
cli
or
jg
jecxz
mov
stc
pop
cmp
dec
sub
outsl
faddp
jg
mov
sbb
fldcw
js
and
ss
xchg
cmp
sub
xchg
push
aas
outsb
push
and
mov
gs
insl
int3
pushf
mov
fdivl
push
adc
and
js
mov
popf
xor
enter
aaa
mov
lret
xor
push
mov
adc
cs
std
dec
xchg
xchg
rcrl
das
xorb
loope
or
cmp
dec
test
jo
dec
popf
push
jno
xchg
aas
cmpsl
fstl
outsb
decl
xor
lea
js
aad
in
xlat
jne
test
dec
jmp
inc
xor
jle
and
mov
dec
jle
and
mov
js
mov
jno
movsb
rcll
mov
xchg
pushf
pop
cli
jle
xchg
push
hlt
imul
pop
xchg
xchg
jae
inc
or
in
ret
testl
mov
adc
inc
ljmp
lahf
xchg
mov
inc
xchg
jmp
cmc
push
sbb
mov
jnp
cmp
adcl
fs
mov
push
adc
xchg
dec
test
hlt
push
dec
adc
jecxz
leave
xor
je
mov
push
adc
adcb
movsb
xchg
ror
push
add
xor
sbb
nop
mov
dec
out
testl
mov
flds
mov
pop
jbe
xchg
mov
out
xorb
addb
xlat
add
or
mov
and
outsl
data16
leave
add
adc
jecxz
in
orl
mov
jne
xchg
pop
and
jnp
test
jp
mov
mov
test
jae
mov
pop
imul
add
pop
sarb
test
mov
lds
es
sbbl
insb
nop
mov
mov
into
mov
or
adc
or
scas
lds
in
ret
xor
movsb
push
add
or
jnp
jb
jbe
push
jae
mov
into
push
lock
enter
repnz
fildl
dec
aaa
cmp
shll
dec
jp
mov
test
shrl
sbb
lret
add
insl
inc
cmp
push
mov
cmpsb
push
cs
lcall
mov
add
ffreep
out
xchg
or
cmp
jo
popa
pop
dec
jecxz
addl
xlat
pop
jae
out
xchg
add
fwait
dec
add
mov
add
fidivl
bound
test
adc
jbe
subb
mov
loopne
jo
js
add
jne
adc
jns
movsl
in
cmp
iret
clc
pop
mov
inc
xchg
int
mov
daa
jl
in
jo
gs
xor
jb
xchg
ja
sbb
xchg
mov
hlt
ret
mov
ret
test
push
fs
dec
xchg
ficompl
outsl
or
adc
xchg
pop
jmp
xchg
js
pushf
lods
and
out
ss
shlb
fstps
cmp
mov
cs
leave
mov
mov
xchg
add
sbb
or
cmp
jmp
jb
inc
std
movsl
sti
outsb
sbb
cli
fldcw
sub
sub
mov
fdiv
jns
and
nop
dec
pop
xor
push
dec
mov
jb
cmpsb
and
cmp
fsubrp
sub
rclb
push
ljmp
ret
insl
in
mov
in
in
push
divl
add
imul
movl
dec
xchg
mov
mov
orb
ljmp
mov
xchg
adc
push
cwtl
or
and
outsb
insl
bound
lret
iret
mov
xchg
call
jnp
add
pop
aas
sub
fadd
mov
add
test
mov
test
push
sahf
push
cmp
pop
flds
mov
xor
movsl
mov
sarb
imul
addr16
out
inc
push
add
arpl
mov
or
arpl
int
jg
mov
shl
adc
cs
push
dec
adc
or
aas
std
lds
rcrb
mov
add
add
pop
inc
jae
insl
mov
std
dec
fcomps
jno
cmp
inc
pop
push
andb
fimuls
jnp
lock
jb
jl
push
xchg
push
mov
or
adc
adc
jae
fldl2e
cltd
jg
aam
xchg
addl
or
imul
repz
sub
shl
ret
dec
jnp
xchg
stc
lcall
sub
dec
ret
and
lods
and
pop
cmpsb
xlat
xchg
fcoml
push
adc
adc
pop
sub
lret
fldl2t
adc
adc
pop
popa
cmp
jae
shlb
jo
jecxz
sub
rcll
mov
mov
insl
fsts
test
mov
popf
repnz
pop
xor
mov
mov
add
xchg
pop
rol
or
out
sub
loope
fnstsw
mov
xor
sahf
clc
les
arpl
lods
fld
les
add
add
jg
outsl
dec
clc
out
jno
movsl
mov
xor
xor
ss
sbb
popf
test
sbb
push
and
jmp
push
int
orps
test
add
sub
push
ret
fimull
pusha
xchg
dec
mul
das
push
testl
cmc
jb
and
mov
testb
pop
mov
mov
cmp
insl
fildll
push
mov
xor
cmc
pop
mov
jmp
hlt
in
xchg
or
cmp
cld
int3
inc
es
sub
lret
in
in
and
or
lret
pop
rcrb
aam
les
jbe
mov
xchg
and
jb
ret
mov
and
sub
xor
sahf
cli
in
sbb
pushf
push
das
xchg
mov
mov
sbb
pop
mov
loopne
andb
push
notl
push
aad
into
pop
jae
in
cmp
jnp
push
das
sahf
ss
jnp
lea
xor
mov
and
inc
push
mov
push
ds
xor
pusha
pop
jmp
pushf
and
jecxz
jg
stos
xchg
cmpsb
repnz
movsb
xor
fnclex
push
push
mov
jo
push
stos
mov
sti
or
cwtl
mov
jo
sysexit
xor
mov
sub
loopne
movsb
mov
ljmp
into
sbb
pop
stos
and
xor
inc
sub
pop
sbb
push
pop
test
push
ret
stos
jecxz
ss
xor
push
scas
sub
mov
rol
lock
inc
xlat
jb
and
mov
xchg
inc
ret
js
fucom
dec
fbstp
mov
scas
push
popf
shrb
mov
or
pop
xchg
insb
rcrl
ja
and
cmp
test
pop
repz
and
in
cwtl
mov
push
lods
mov
xor
pop
dec
ljmp
fwait
mov
int3
jno,pt
push
sub
fs
jecxz
xchg
jmp
xor
imul
mov
leave
mov
xchg
pop
pushf
imul
xor
sbb
roll
outsl
mov
and
push
push
pop
or
fsubr
dec
jl
push
mov
insb
and
stos
cwtl
sub
pop
lea
inc
mov
mov
and
into
out
mov
stos
jmp
int
jo
rorl
cli
shlb
out
popl
push
fbld
mov
sbb
sub
adc
rcll
sbb
push
pushf
and
fdivrl
ss
ds
das
and
xchg
and
test
lea
scas
movsl
pop
subb
jns
dec
push
adc
inc
iret
mov
mov
rorb
lret
repnz
and
movsl
lea
xor
je
lcall
ret
cmp
mov
daa
repz
out
addr16
shlb
test
fsub
outsl
in
xchg
sbb
popf
mov
das
or
inc
adc
sub
jp
sbb
insl
outsl
stos
data16
jb
sub
inc
mov
adc
ss
fcoml
push
xchg
testl
mov
xor
outsl
outsb
lods
xchg
pop
test
lcall
or
sahf
inc
sbb
mov
inc
cmp
sub
test
loopne
add
cltd
aas
dec
popf
scas
in
xchg
mov
xchg
js
xchg
cltd
negl
add
test
pop
mov
sbb
dec
mov
in
filds
mov
dec
dec
and
ds
cmp
push
and
jp
dec
pusha
in
push
scas
mov
jbe
jl
decl
addr16
into
adc
xchg
push
fdivrs
jp
mov
das
cld
mov
cmpsl
xchg
mov
imul
fnstenv
mov
out
dec
mov
aad
iret
and
pop
nop
loop
and
xchg
push
jg
push
lea
mov
icebp
jg
pop
pxor
push
sahf
xor
and
cmp
icebp
int
clc
push
aam
frstor
xchg
ljmp
ret
repnz
cli
fstps
dec
idivb
inc
push
shll
mov
mov
outsb
dec
cmpsl
xor
fidivrs
mulb
hlt
dec
mov
arpl
in
dec
test
emms
aas
aam
mov
mov
mov
jg
lods
fstps
aaa
and
mov
leave
aam
jb
xor
and
iret
mov
jo
xchg
adc
cs
stc
pop
or
insb
popf
and
fists
xchg
push
mov
or
loop
push
bound
addr16
and
shll
push
fdivrl
aaa
and
sbb
scas
es
scas
das
outsl
fmull
inc
adc
fildll
jns
sub
sub
cmp
mov
enter
insb
fiadds
push
jmp
inc
std
xchg
into
pop
jnp
cmc
ret
push
mov
fwait
pop
push
add
out
mov
inc
arpl
mov
cmp
sbb
jne
ffreep
sahf
in
sbb
hlt
cmp
addl
cmp
insb
mov
push
inc
int
imul
pop
adc
mov
xchg
pop
sub
or
mov
cld
enter
ds
xorb
sub
fmull
out
lret
movb
jns
out
mov
aam
je
push
ja
ljmp
add
das
sub
jle
pop
les
out
shlb
out
xor
inc
lods
insb
xchg
sub
in
insb
stos
ss
pop
movsb
fnsave
mov
das
shll
xor
mov
adc
adc
ja
jne
stos
int3
xchg
ret
sub
das
clc
shr
pushf
mov
lock
mov
bnd
xchg
add
add
jns
pop
repnz
add
fdivrl
mov
or
js
inc
pusha
add
add
jg
mov
lods
aam
mov
test
push
repnz
jl
inc
xor
pop
jle
sbb
xchg
pop
nop
mov
stos
sahf
arpl
cwtl
popl
push
mov
jp
xlat
lds
dec
fwait
push
cmp
rcl
jg
popa
mov
or
and
setb
fdivl
or
push
test
addr16
inc
movl
adc
dec
pop
dec
mov
xchg
jg
push
mov
rcr
or
xchg
nop
stos
call
add
js
mov
adc
push
mov
cltd
sahf
nop
push
mov
jmp
int
cmp
or
inc
xor
cmp
push
and
insb
mov
pop
add
add
test
ds
sbb
jns
mov
mov
jnp
sbb
ljmp
lea
mov
cmc
jns
mov
sub
test
and
pop
sub
mov
dec
mov
add
fwait
adcl
shlw
mov
xor
bound
inc
mov
movsb
push
out
fs
pop
aam
gs
scas
push
into
js
adc
jne
mov
cmp
roll
cmp
cmp
push
push
aam
mov
xchg
xchg
mov
add
adc
repnz
and
js
dec
in
cld
decb
jnp
stc
xchg
cli
inc
mov
insb
aas
adc
xchg
push
inc
xchg
mov
adc
cmovbe
pop
ljmp
test
fs
inc
cli
movsb
popa
pop
lock
ret
ret
mov
test
pop
xor
inc
jns
mov
std
mov
jecxz
mov
jno
xchg
xor
daa
lcall
dec
mov
orl
pop
push
jle
mov
out
aas
imul
lods
fs
dec
gs
scas
dec
lcall
add
gs
shlb
daa
daa
mov
icebp
iret
lea
lods
mov
xor
mov
iret
inc
xchg
mov
mov
lods
push
dec
popa
sbb
bound
xchg
pop
je
sbb
push
lahf
add
outsl
es
stos
or
pushl
scas
inc
push
lahf
dec
mov
sbb
add
fsubs
out
add
cmp
dec
in
inc
test
arpl
gs
and
daa
pop
arpl
fwait
movsl
push
sbbl
xor
es
mov
mov
mov
mov
jnp
cwtl
das
mov
mov
in
sub
xor
es
or
inc
rol
jb
or
pusha
xchg
ficompl
xchg
mov
push
mov
into
xchg
push
les
dec
mov
mov
fs
cld
pop
aas
cmpsb
mov
cld
xor
imul
push
mov
xlat
mov
scas
movsb
sti
movsl
scas
mov
xor
test
sti
mov
sbb
fisubrl
rolb
mov
rcrl
mov
pop
pop
jmp
cmpsb
pop
inc
add
push
add
adc
sbb
pop
cwtl
sbb
imul
leave
gs
pop
call
jmp
jno
lock
loope
jo
clc
jl
jmp
cmp
pop
mov
in
aas
lret
mov
out
daa
out
inc
mov
rorb
loopne
rorb
or
ds
fnstsw
or
xchg
inc
mov
frstor
arpl
lret
or
xchg
data16
or
dec
xor
js
and
lcall
enter
test
insb
push
xor
jmp
cmc
fnstcw
test
ret
inc
pushl
jo
test
jmp
je
insb
fimuls
jg
mov
and
loope
dec
ljmp
outsb
outsb
addl
push
pop
jno
or
xor
lret
ficoml
fwait
adc
incb
xor
jb
xchg
push
or
xor
inc
lock
adc
dec
push
jno
js
pop
adc
outsb
arpl
scas
and
fdivr
int
pop
inc
lds
mov
add
aad
push
loope
daa
push
dec
shrl
xor
jmp
mov
ss
mov
xchg
mov
adc
testl
jne,pn
adc
sbb
fwait
mov
or
test
fnstcw
inc
nop
mov
dec
icebp
fadds
fiadds
or
pop
inc
or
scas
in
inc
imul
inc
addb
test
call
push
dec
add
loopne
lahf
ds
mov
cmp
or
sahf
cmp
scas
push
fstps
sarl
negb
cwtl
inc
push
fistps
jno
pop
fnstenv
enter
fisttps
insb
in
pop
sbb
minps
bound
in
sub
aam
mov
push
shrb
jle
popa
xchg
js
mov
inc
adc
xorl
data16
add
lods
test
push
adc
push
jg
mov
hlt
ljmp
es
cmpsb
pop
mov
add
loopne
xor
movsb
adc
outsl
lods
ljmp
test
inc
cli
cmp
xchg
fcoms
dec
negb
mov
inc
shrl
add
sbbb
xchg
pop
xor
testb
lahf
mov
in
xor
xor
add
fdivl
leave
icebp
pop
xchg
imul
cmp
and
cmpl
rclb
cltd
sub
mov
push
gs
mov
les
jno
rcll
iret
push
stos
sbb
cmpsl
mov
mov
sahf
add
sub
in
jecxz
mov
mov
dec
cld
ret
mov
fcom
mov
inc
sub
or
sbb
xchg
movsl
rcr
aaa
mov
popl
jp
out
out
inc
add
jge
adc
in
xor
imul
push
ds
movsl
leave
fwait
fs
cwtl
and
or
cmp
mov
xchg
mov
sahf
imul
adc
rorl
mov
xchg
fucomp
mov
push
push
xchg
mov
mov
or
add
pop
leave
jle
inc
repz
out
outsl
lock
inc
sti
imulb
cmp
add
hlt
ljmp
insl
jne
jecxz
out
push
out
add
mov
mov
icebp
je
pushf
out
sub
cmpsl
outsb
push
and
mov
add
shlb
pop
adc
stc
ret
and
pusha
or
cmc
xchg
push
push
cmp
inc
lret
xchg
mov
insl
imul
iret
add
in
fnstenv
dec
sbb
mov
pop
and
cld
xchg
add
mov
cmp
ret
xchg
sub
xor
xchg
pushf
adc
fisubrs
push
cmp
mov
jle
xchg
cmp
movsb
jmp
ficompl
std
mov
xor
out
scas
sbb
ljmp
push
js
push
cmpsb
xchg
add
out
xor
push
lcall
xor
mov
pop
jmp
daa
loop
jnp
outsb
add
cmc
mov
cmpsb
imul
mov
inc
clc
cmpsl
sub
mov
add
cmpsl
sbb
inc
mov
sbb
xchg
call
inc
sub
popa
sub
std
test
sub
cmp
cmp
enter
push
mov
lods
clc
int
adc
sub
xchg
sahf
test
mov
adc
les
into
scas
rcll
inc
incl
repz
iret
and
lock
mov
les
inc
and
cmpsb
mov
sub
sub
xor
pop
imul
mov
dec
inc
popf
out
push
inc
fnstcw
push
out
rolb
mov
xor
xor
int
push
aad
jbe
jp
pop
mov
mov
in
in
ficomps
mov
cmpsl
jno
pushf
jmp
imul
cmc
ja
cmp
or
out
ds
mov
pop
sbb
sbb
inc
sbb
sub
sub
mov
cs
les
mov
outsl
adc
clc
push
mov
xor
lahf
ja
mov
dec
lods
lret
fisubl
and
mov
arpl
mov
or
pop
inc
es
and
mov
icebp
jne
std
inc
jbe
xor
out
arpl
nop
mov
ljmp
push
in
int
lret
cmpsb
xchg
sbb
push
xor
sbb
lods
ficoms
in
cli
fs
xor
fisttps
jecxz
pop
cmovbe
cmovg
cmp
ret
push
ficomps
jo
sbb
js
fcomip
cmp
es
or
gs
adc
jle
gs
mov
inc
outsl
push
outsb
roll
aam
test
ret
pop
sbb
add
mov
jb
movsb
xchg
aam
mov
inc
dec
adc
mov
popa
adc
jl
mov
add
fmull
stos
sub
or
mov
push
and
mov
push
mov
jno
sti
es
jcxz
int3
xchg
dec
cli
dec
jl
cmp
cmpsl
pop
in
roll
mov
cmp
sbb
push
aam
in
sbb
cmpsl
aad
bound
in
data16
add
mov
popf
push
cmp
add
jns
inc
mov
xchg
xchg
push
stos
jne
loopne
mov
jbe
aam
into
icebp
sar
stos
dec
cltd
data16
push
or
sar
dec
or
push
add
cmpsb
add
mov
jbe,pt
dec
mov
push
cld
addb
add
push
xchg
dec
rcll
stc
push
out
mov
inc
jae
ljmp
int3
xor
mov
out
xchg
xor
cli
or
lahf
loope
int
outsb
jo
icebp
mov
lock
dec
push
and
jp
lret
mov
lea
clc
lcall
dec
outsl
or
and
fiaddl
cmp
mov
push
mov
dec
jge
push
aaa
and
cmp
out
push
dec
cmp
dec
inc
aas
xor
data16
shll
dec
cmp
sti
mov
mov
and
stos
stos
and
inc
lods
dec
int
lcall
in
mov
or
js
mov
ja
push
cmp
jbe
add
mov
shlb
scas
dec
cs
ds
xor
test
pusha
or
gs
cmp
sbb
sbb
cwtl
imul
popa
xorl
add
int
repz
test
rorl
fabs
mov
rorl
jle
jge
jnp
jno
stos
xor
mov
das
xchg
xchg
pop
aam
sub
lods
das
mulb
add
push
sub
int3
ret
pusha
jecxz
shlb
and
inc
push
mov
dec
loop
jns
in
mov
dec
ljmp
dec
imul
mov
lea
pop
pop
movsb
adc
psubd
xchg
jnp
add
pop
jbe,pt
cld
shlb
mov
rol
sti
inc
in
and
pop
mov
int3
mov
sub
sahf
in
inc
dec
push
iret
test
dec
loop
subl
or
mov
rcr
xor
xchg
xor
pushf
mov
call
repz
scas
push
push
movsl
mov
or
bound
imul
sub
cmp
sub
fcmovu
pushf
shr
cwtl
out
cmp
pop
mov
mov
jnp
pop
jne
adc
pop
cwtl
xchg
mov
iret
fsub
data16
negb
daa
ja
mov
fsts
sub
mull
iret
mov
scas
ud1
fldenv
jae
fidivrs
dec
sub
fisubs
sbb
push
insl
adc
lock
dec
iret
inc
mov
inc
add
dec
sub
mov
loop
mov
cwtl
insb
adc
shll
pop
sbb
shrb
add
xchg
mov
mov
lods
xchg
adc
or
lods
cmp
or
mov
ficoml
pop
fildl
add
and
ljmp
xchg
sbb
repz
insb
call
mov
and
cli
mov
fsubl
adc
in
mov
nop
inc
sarl
push
xor
cmc
lock
bound
jb
lcall
cwtl
mov
jno
cs
cmp
shrb
scas
push
lds
mov
xchg
xchg
sbb
or
dec
es
mov
inc
xor
dec
cmp
mov
sub
sub
inc
fdivr
daa
xchg
es
je
mov
rcrb
jecxz
fldenv
pusha
add
lods
scas
xchg
lret
movsb
aad
mov
mov
push
push
mov
push
cmp
mov
mov
adc
and
push
loop
repz
mov
ljmp
jno
incb
jb
loop
lods
inc
mov
outsb
jb
mov
cmp
dec
mov
idiv
stos
scas
xchg
stos
dec
lds
sub
insl
jge
rcrl
dec
pop
xorb
aad
je
adc
movsb
mov
lret
je
xchg
sub
or
mov
xchg
into
xchg
das
shlb
sbb
mov
pop
lret
mov
fisttps
cmp
jmp
push
fld
cltd
jnp
stos
aaa
in
push
push
add
stos
stos
dec
loop
sarb
std
cmp
xchg
jo
xchg
inc
idivl
add
mov
push
or
movd
das
pop
test
aaa
push
fmuls
lds
mov
lcall
ljmp
jns
add
lret
cwtl
rcrb
ja
xor
inc
push
jne
mov
xor
movb
add
mov
or
test
imul
in
sub
jb
cmpsl
jmp
out
cld
xchg
ds
inc
mov
fidivrl
insb
or
in
dec
inc
jno
ljmp
sahf
fildl
xlat
sbb
movsb
fbld
insb
push
mov
rorl
jne
cmpsl
sbb
sti
adc
xchg
and
out
sub
mov
popa
or
arpl
imul
sarl
adc
xchg
arpl
stos
or
fdivr
std
sbb
cmpb
and
mov
or
cltd
cmovno
cmp
fwait
insb
xchg
cmp
mov
push
xchg
out
mov
sbbl
sub
mov
push
loop
xor
pop
out
insl
test
cltd
mov
lret
add
jne
scas
mov
cmp
mov
xchg
or
xlat
loop
aad
sub
arpl
lea
pop
push
push
xchg
in
push
icebp
pop
lods
js
cmp
shll
inc
push
mov
scas
aaa
andl
scas
pop
loope
xlat
les
sbb
popa
sbb
sbb
bound
sbb
out
add
jmp
imul
add
fcmove
cmpsb
cmpsl
in
fmuls
push
adc
mov
ljmp
sub
jns
jmp
mov
sti
aad
mov
jp
add
pop
add
push
mov
adc
aam
mov
lret
ljmp
es
push
sbb
sub
lret
stos
xchg
sbb
push
adc
int3
lret
test
cli
sbb
test
adc
ss
push
sbb
insl
scas
ds
mov
std
jge
inc
mov
cmc
add
lret
mov
mov
or
xor
add
lcall
xor
out
cmc
mov
xchg
jg
push
sti
inc
and
jp
add
lock
loope
cwtl
mov
aas
mov
or
and
adc
fabs
jbe
jecxz
ljmp
jp
cli
pushf
fdivrs
stc
xchg
cli
stc
sub
mov
dec
cwtl
inc
push
and
cltd
jnp
test
cmpb
test
addr16
loopne
sbb
mov
and
loop
mov
push
mov
inc
sahf
jno
das
inc
mov
mov
dec
push
mov
mov
mov
fchs
dec
cmpsl
pop
adc
xchg
inc
popf
imul
push
xchg
adcb
sub
fdivl
or
test
rorl
fistpl
xchg
hlt
cmp
lods
test
xorl
pop
adc
loope
inc
pop
hlt
fsubs
add
fucom
or
pop
sbb
sub
add
xor
jge
mov
daa
icebp
sahf
xchg
subl
hlt
sub
pop
int3
lods
test
push
cmc
pop
xor
test
adc
je
cld
mov
xchg
push
mov
dec
dec
into
jp
mov
loopne
enter
stos
addb
imul
mov
push
add
mov
rcrl
decb
and
xchg
mov
cld
fstl
sub
ja
movsb
ret
aam
adc
mov
xor
pushf
icebp
pop
lcall
inc
idiv
imul
mov
jp
insl
jecxz
in
sbb
cmp
push
lcall
negb
ljmp
push
inc
mov
sub
cmpl
jle
push
sbb
dec
cld
push
xchg
jle
inc
orb
in
sarb
push
nop
xchg
rclb
sahf
pop
push
loope
push
out
adc
xchg
in
push
loop
push
sbb
push
sbb
into
pop
imul
out
sbb
shld
xchg
jns
cs
xorb
vpshaw
add
mov
jae
mov
adc
mov
and
ja
pop
dec
scas
dec
push
inc
lods
cmp
or
pop
rorl
sub
movsl
jo
xchg
jmp
jle
push
imul
pop
mov
xchg
daa
pop
mov
pop
mov
jns
imul
inc
inc
out
xchg
xchg
lds
mov
movsb
add
imul
in
xchg
mov
ret
push
sub
inc
cs
mov
mov
dec
mov
jo
mov
jecxz
mov
addr16
ljmp
pop
pop
mov
push
rolb
mov
aad
test
insl
data16
sub
jbe
ret
sbb
pop
out
shrb
aad
dec
insb
pop
adc
push
fbstp
push
push
sub
or
test
jp
jp
adc
jle
and
sbb
xor
jecxz
cmp
arpl
clc
movsl
aam
dec
push
xor
in
or
sbb
rclb
aad
out
or
addr16
movsb
inc
and
enter
add
cs
sbb
das
mov
xchg
sub
ss
sub
mov
xchg
pop
jb
push
dec
aas
sbb
fs
mov
lret
xchg
xor
and
sahf
jo
popf
mov
push
jp
pop
daa
pop
aaa
or
lret
popf
jae
inc
xor
dec
popf
popa
dec
push
mov
fs
orb
lea
lcall
push
sbb
push
pop
push
push
jns
dec
and
pop
in
xor
add
mov
insl
sbb
xor
das
sahf
xchg
or
jp
repnz
cmovno
ds
push
jno
xor
enter
mov
push
ja,pn
pop
pop
loop
jae
pusha
sbb
or
je
mov
andb
push
lahf
in
out
inc
xchg
in
dec
mov
bound
je
xchg
jge
xlat
incb
mov
and
sbb
pop
inc
testb
jl
sub
repz
dec
je
inc
inc
adc
xchg
jne
popf
pop
mov
mov
inc
xchg
cmp
lock
sub
sub
psrad
xchg
stc
jge
sbb
xchg
out
add
or
sbb
push
mov
std
rcll
popa
outsb
jne
cld
adc
mov
inc
cmpsb
mov
pop
pop
jo
xchg
jno
fadd
add
out
shrl
xchg
cltd
dec
cmpsl
lahf
mov
dec
xchg
or
dec
divl
inc
or
and
lds
mov
cmp
notl
jns
push
subb
or
xor
dec
loop
stos
ljmp
sbb
sub
jecxz
mov
rcrl
lcall
jg
shrb
loop
rorb
dec
and
push
sbb
push
mov
xchg
not
push
inc
std
lahf
lds
shlb
inc
dec
mov
dec
inc
xchg
fsub
dec
mov
mov
sbb
push
clc
ds
sub
pop
inc
mov
xchg
jle
lcall
adc
or
es
mov
nop
icebp
shll
inc
shll
xor
ret
xor
lahf
lods
daa
mov
or
fdivrs
sub
mov
fldcw
push
dec
out
xchg
repnz
mov
js
aaa
dec
adc
inc
mov
iret
xlat
adc
in
out
icebp
sub
xchg
jl
sub
into
mov
clc
jb
leave
mov
add
enter
scas
or
inc
and
rolb
mov
dec
xlat
xchg
fcoms
dec
clc
jge
outsl
stos
push
or
or
inc
xchg
sbb
adc
pop
loope
mov
loop
fimuls
sbb
push
mov
outsl
jp
xchg
test
rcll
loopne
movsb
int3
data16
xor
in
or
and
incl
dec
ss
out
lods
test
dec
in
sbbl
test
dec
mov
or
ret
jne
punpckhbw
sbb
pushf
inc
imul
jbe
push
pop
or
xchg
pop
ret
sahf
aam
in
add
in
add
jnp
pop
bound
xor
xor
pusha
out
mov
adc
test
xor
std
insb
out
cmpl
push
pop
cmp
cmp
rclb
jp
test
jg
scas
out
mov
mov
sti
mov
xor
mov
add
mov
mov
push
jo
mov
dec
bsf
sub
xchg
xchg
sub
cmp
stc
sub
mov
fiaddl
es
mov
mov
pop
ja
xchg
xorl
dec
insl
mov
shl
or
nop
push
outsb
cmp
fldl
fiaddl
out
mov
inc
xorb
arpl
inc
fisubl
insb
xchg
and
outsb
sahf
push
mov
mov
out
lds
or
cmpsb
cwtl
loopne
sub
push
mov
test
mov
mov
lds
jmp
mov
rcrb
popf
jecxz
int
jno
cmpsl
lock
add
sub
cli
outsl
das
out
pop
sub
add
lock
xor
pushf
out
nop
cld
aas
mov
or
dec
scas
ss
push
call
mov
jecxz
dec
iret
fwait
mov
dec
dec
xchg
scas
inc
sub
repz
shr
mov
adc
mov
js
jge
mov
add
sub
lods
mov
inc
sub
and
sahf
ss
fcompl
mov
pushf
jl
clc
test
decl
lods
jbe
and
mov
mov
xchg
fcoms
repnz
ss
rcl
xchg
repz
out
xchg
int
jb
dec
mov
pop
sar
jle
inc
push
mov
testl
mov
cltd
aam
inc
and
cmp
jp
sahf
insb
stos
inc
jge
cli
outsb
adc
adc
pop
mov
mov
mov
not
jo
and
ret
test
xchg
cwtl
cmpsb
aad
call
fwait
stc
lea
test
sbb
xor
inc
and
stos
gs
dec
inc
popa
insb
test
sub
mov
lret
test
ljmp
cs
xchg
fcompp
js
scas
outsl
in
add
mov
into
mov
cmc
into
dec
mov
lods
sub
fwait
cwtl
stos
pop
not
pop
mov
dec
fwait
mov
cwtd
insl
jo
dec
fildl
pop
sub
lcall
in
pushf
testb
xchg
inc
cwtd
mov
add
sub
sahf
adc
ret
rcrl
cmp
aam
cltd
mov
dec
aam
push
stc
sbb
imulb
ds
pop
xchg
push
nop
mov
cltd
sti
mov
shrl
xor
dec
ja
cwtl
rorb
fmull
testb
aaa
jns
fidivrs
adc
call
add
cld
mov
rcll
dec
fsubrs
js
popa
repnz
repnz
mov
and
lret
gs
lea
xor
daa
mov
ds
lds
test
leave
test
mov
sub
cmp
cwtl
fistpl
inc
int
add
mov
movsl
mov
cs
neg
lea
stos
mov
jmp
ljmp
ret
call
lcall
mov
cwtl
nop
inc
ja
adc
jb
cmp
jbe
idiv
outsb
dec
clc
sub
movntq
out
cmp
cwtl
mov
jno,pn
jl
call
aas
idivl
test
mov
cli
lret
aad
lods
jno
xchg
scas
test
or
xlat
bound
cld
jnp
out
sbb
mov
lea
mov
mov
and
jb
sub
jb
repz
xchg
repz
push
int3
shll
pop
outsb
xchg
mov
xchg
scas
pop
out
stos
stos
push
andb
mov
cmp
fiaddl
adc
nop
inc
push
fbld
fbld
and
negl
lods
mov
test
mov
dec
imul
sbb
pop
sub
inc
dec
shr
cwtl
pop
mov
xchg
cwtl
xorb
xchg
push
sbb
push
jmp
cmc
stos
xor
adc
cmovge
jecxz
push
jge
mov
jne
xchg
arpl
mov
adc
mov
sub
mov
or
fbld
pop
xor
adc
test
out
or
and
dec
jns
rorl
in
aam
mov
stc
dec
pop
pop
or
push
xor
xlat
ret
jo
mov
or
icebp
clc
dec
sbb
mov
dec
imul
jge
aad
or
pushf
inc
sbb
mov
xchg
dec
arpl
aas
add
in
cs
cmp
or
dec
sbb
mov
das
xor
push
loop
ljmp
pop
add
fnsave
inc
xor
push
jmp
repz
pop
in
gs
or
inc
stos
push
cmp
dec
pop
inc
dec
stos
lahf
push
sahf
jno
ja
decb
pop
cmp
xchg
xchg
xor
jae
loope
stos
mov
pop
dec
jno
mov
dec
int
decb
aam
cmp
cmp
clc
mov
rorl
ja
add
iret
imulb
cmp
repz
lea
pushf
push
and
dec
push
cltd
adc
pop
cmp
mov
push
dec
sbb
adc
sub
stos
pop
shll
stos
sub
out
sbb
jb
mov
inc
repz
in
ja
pop
out
mov
sbb
mulb
and
adc
cmpsl
adc
in
fsts
flds
enter
cmpsl
in
loope
xor
outsb
pop
pushf
xor
cmp
adc
lret
pop
jle
push
das
lret
or
push
and
mov
inc
addr16
repz
or
sahf
push
data16
xor
cmpsb
lea
sbb
adc
inc
cmp
in
cld
jge
or
dec
out
cmpsl
mov
das
cmp
nop
mov
cmp
sahf
repnz
pop
imul
add
mov
push
out
adcl
nop
xchg
sahf
mov
sbb
into
and
clc
popf
mov
jge
xor
mov
in
sbb
ljmp
lods
inc
hlt
adc
int3
xor
in
js
sub
lret
xchg
shll
test
in
or
std
dec
push
dec
imul
mov
clc
dec
pop
mov
pop
adc
cmp
outsl
pop
cmp
mov
ljmp
ljmp
fdivrs
popf
cmpsl
xor
xlat
test
std
and
mov
ljmp
sti
imul
lret
push
mov
insb
jge
cmpb
out
je
stos
into
cmp
xor
mov
mov
add
dec
leave
ja
mov
and
inc
and
mov
mov
lock
push
pusha
rclb
mov
cmp
jmp
cmp
xchg
jnp
aad
lcall
mov
ror
pop
or
icebp
jge
stos
push
xchg
loope
lods
add
bound
mov
xor
loopne
cltd
insb
dec
sub
mov
das
jle
sbb
mov
ss
push
fisubl
in
clc
in
loop
dec
jae
push
pusha
daa
mov
cmp
fwait
in
inc
lock
pop
aaa
leave
jne
xor
cmpsl
sub
insl
push
fwait
jns
test
test
mov
ss
mov
mov
mov
out
or
xchg
inc
push
cmp
in
sub
inc
mov
popf
jbe
les
sahf
mov
test
lahf
outsl
and
xchg
test
rcrb
clc
sbb
or
data16
lods
ret
jno
lahf
lahf
addb
mov
aam
repz
mov
cli
cmp
mov
push
dec
jne
pop
pop
sarl
jb
enter
mov
aad
xchg
xor
add
pop
popw
cmp
lahf
adc
outsb
stos
inc
lods
mov
mov
pop
fsubs
pop
inc
add
in
mov
repz
xchg
adc
fists
pop
cmp
out
mov
sbb
xchg
dec
xor
jge
cli
enter
stc
pop
sti
or
xchg
xchg
cwtl
xchg
mov
dec
inc
lret
mov
sbb
loopne
clc
mov
xor
repz
cmpl
movsb
and
mov
dec
lods
aad
mov
lds
xlat
push
mov
or
mov
mov
into
data16
push
shll
out
movsb
and
scas
sbbl
clc
das
loop
and
scas
sbb
or
shl
lods
cmp
in
daa
inc
cld
cli
pop
xchg
add
mov
dec
push
popf
pop
insl
inc
andb
inc
je
inc
in
lahf
cmp
push
popf
nop
mov
inc
rolb
jo
mov
add
add
jge
sub
pushf
test
repnz
lret
andl
loop
or
mull
xchg
jmp
lahf
mov
or
hlt
das
mov
insl
xchg
inc
pop
and
cmp
push
inc
mov
mov
mov
inc
mov
cmpsl
mov
adc
fidivl
pop
adc
lahf
ja,pt
jmp
jmp
jno
mov
mov
xchg
insb
les
inc
loopne
mov
int
arpl
mov
jo
xor
mov
jbe
lcall
inc
pop
leave
pop
dec
push
push
pop
jb
jo
movsl
in
popf
pop
push
fwait
adc
aam
sub
mov
xor
data16
and
xor
cmp
adc
jbe
or
fsubrs
mov
mov
in
or
pop
hlt
sbb
xor
mov
inc
xlat
push
repz
pop
sub
sbb
addr16
mov
lods
sarl
jge
mov
or
sbb
fnstcw
mov
push
fsubrs
mov
lret
cli
sbb
test
clc
lods
mov
xchg
jmp
fst
das
and
xchg
loope
pop
cli
lahf
jmp
daa
and
test
add
mov
fistpl
dec
adc
sbb
shrb
cli
and
imul
mov
stos
mov
mov
mov
push
inc
das
hlt
push
adc
cmpsl
insb
cmp
lds
dec
push
adc
int3
pop
in
pop
lock
iret
shlb
push
imul
add
and
ret
push
sti
xchg
icebp
mov
push
popf
movsb
mulb
cmp
popa
add
gs
in
inc
mov
jae
mov
sahf
push
fistpll
push
lods
sub
xchg
data16
xor
arpl
cmp
cmpsl
mov
or
test
or
jle
fs
adc
jne
mov
push
mov
xchg
mov
pop
test
gs
xchg
add
pop
mov
jae
add
sti
sub
pop
mov
add
push
clc
stos
loop
ss
gs
jl
xlat
push
imul
xchg
fiaddl
pop
or
mov
mov
lahf
cmc
stos
mov
adc
jns
xchg
sbb
lds
shrb
test
je
in
ret
icebp
cli
mov
cmp
cmp
fnstcw
imul
iret
add
mov
stos
fsubl
lock
out
inc
out
std
and
test
adc
cld
lret
inc
sub
add
mov
adc
stc
mov
fists
jns
jle
add
je
roll
xorb
cmc
ljmp
int3
jb
arpl
jl
loopne
pop
cwtl
sub
sahf
fistpl
jle
cmp
pop
pop
push
add
stos
mov
mov
or
loope
adc
pop
rcr
mov
push
push
and
push
rcr
xchg
adc
and
mov
adc
fsubs
je
mov
mov
xchg
xchg
shll
jge
dec
les
loop
inc
add
or
pop
ljmp
test
loope
pop
testb
imul
into
outsb
inc
loope
adc
push
push
xchg
dec
jbe
call
adc
ret
adc
jo
es
stos
pop
in
sub
mov
xchg
or
sbb
loop
das
mov
xchg
mov
inc
sub
add
fcomps
imul
xor
cmp
mov
cmc
lahf
pop
inc
scas
add
jle
pop
js
cmovg
mov
xor
sbb
jle
add
pusha
sahf
popa
fimull
push
sbb
sub
insb
ss
jmp
jge
insl
cmpsb
cmc
xchg
jne
add
xchg
and
sbbl
das
sbb
pop
scas
push
cmp
sahf
pop
mov
dec
dec
iret
inc
jb
cmp
jnp
int3
inc
iret
jecxz
push
cmp
arpl
test
sub
testl
cltd
ja
lods
jl
addr16
cmp
inc
mov
movntq
in
aad
incb
movsl
imul
xchg
push
mov
sub
ficoms
add
mov
jge
mov
inc
push
inc
or
cmp
in
cmpsb
xlat
adc
insb
jns
sub
js
inc
dec
scas
jle
call
ss
xchg
loopne
mov
mov
sbb
mov
das
punpckhwd
dec
gs
cmc
lret
cmpsl
xchg
scas
lahf
arpl
roll
sti
fsubrs
sbb
cmpsl
js
clc
cmpb
mov
xlat
and
loope
mov
lods
ja
jns
sub
xchg
inc
nop
sbb
lret
test
pushf
rorl
mov
lea
out
push
cs
sub
scas
sub
aaa
out
std
sub
xchg
jl
aas
lds
add
xchg
test
push
jecxz
cmp
sbb
jmp
sbb
pop
mov
xchg
and
xchg
in
ja
mov
sbb
pop
push
add
dec
stc
call
ds
insl
and
test
inc
jne
jle
scas
push
xchg
pop
cwtl
jnp
sub
clc
fidivrl
jnp
adc
shll
cmp
je
popa
fisttpll
cmpsb
cmpl
js
jmp
mov
xor
or
mov
icebp
rolb
loope
scas
cmpsb
fistl
dec
dec
mov
mov
jns
aas
fstpl
sarl
in
adc
jle
jne
cmp
jns
jge
and
in
mov
adc
inc
outsb
ret
rcrl
mov
push
jae
mov
and
mov
data16
into
std
lods
mov
mov
xchg
js
out
jmp
xor
pop
dec
cld
xchg
mov
xchg
psraw
arpl
add
jne
mov
movsb
pop
dec
std
stos
ss
and
and
aas
inc
imul
mov
lods
shlb
int3
in
repnz
xor
sarb
jo
mov
pop
pop
and
jb
pusha
aaa
ret
repz
sub
mov
sbb
push
push
mov
stc
mov
daa
shlb
mov
notb
and
push
pushf
cmp
or
lock
sbb
jb
push
enter
sahf
insb
xor
popa
adc
ret
and
pop
mov
dec
dec
fldcw
add
mov
fisubrs
and
rcrl
je
stos
dec
lods
outsl
add
test
in
testb
sbb
pop
dec
cmc
adc
pop
xchg
adc
mov
fst
pop
mov
add
in
and
mov
pop
jl
test
jns
dec
sub
inc
daa
jl
repz
inc
add
push
inc
insb
mov
mov
fsubr
sub
ror
inc
xor
ret
sbb
push
nop
jecxz
mov
int
mov
mov
jp
dec
int
shlb
leave
dec
out
mov
pushf
cmp
push
sbb
imul
xchg
into
and
jl
dec
jge
mov
popf
clc
mov
sbb
hlt
fbld
cmp
mov
pop
and
push
stos
sbb
addb
mov
sub
mov
push
and
mov
outsl
xor
xorl
insb
mov
aam
dec
dec
sbb
inc
cmp
mov
sub
pop
cmp
xlat
fucomi
jne
cmp
dec
sbb
push
lret
lcall
addr16
icebp
pop
rcr
mov
mov
sti
push
xchg
or
dec
push
xlat
jo
dec
rorl
js
push
and
negl
pop
xor
xchg
fdecstp
outsb
xchg
frndint
movb
sub
jge
ds
xor
push
fnstenv
jae
push
mov
sbb
dec
add
test
xorl
or
jl
cmp
sub
test
adc
jne
lods
xlat
lds
push
or
cbtw
push
push
push
adc
mov
fisubs
lahf
in
xor
mov
ret
ss
jge
jg
outsb
jl
inc
das
aam
pop
mov
in
push
stos
and
or
aam
sub
lret
mov
jle
les
or
push
xchg
mulb
mov
in
data16
rclb
add
cmp
movsl
mov
in
mov
dec
dec
daa
xlat
add
test
vmovd
pop
add
test
lcall
shlb
add
cltd
pop
mov
aaa
scas
lods
sbb
popf
data16
jg
pop
mov
xchg
fcoms
cmpsb
outsb
insb
imul
enter
dec
lock
ds
mov
insl
adcb
stos
pop
or
fiaddl
jo
fisttpll
pop
jl
jle
stos
xor
jno
in
outsl
in
and
out
cmpsl
mov
sbb
xchg
into
sub
in
leave
inc
ja
push
sbb
ret
outsb
dec
cld
arpl
jae
mov
pop
sub
mov
xchg
enter
cmp
inc
andl
fisubl
popf
dec
inc
adc
cwtl
in
push
in
xchg
dec
les
add
or
je
dec
push
insl
out
lretw
push
pushf
jno
adc
jae
icebp
sbb
outsb
in
loopne
dec
pop
pop
out
pop
dec
pop
mov
dec
push
jno
sub
jno
and
loopne
push
dec
sbb
add
xlat
jae
cmp
pusha
outsb
xchg
pop
mov
push
sarl
ret
push
lahf
lea
dec
inc
pop
das
cli
lods
mov
pop
jns
xor
mov
enter
xchg
ljmp
jae
loopne
insb
mov
adc
dec
mov
cmp
push
stos
push
jle
push
jnp
mov
sbb
mov
adc
jg
aam
in
out
roll
or
js
pop
hlt
cmpsb
inc
inc
inc
dec
sbb
xorl
mov
cmp
out
dec
jecxz
pop
push
imull
adc
lahf
je
clc
dec
repnz
xor
xchg
out
jno
test
shrl
shlb
xor
pop
jg
stc
int
out
xchg
pop
mov
cmp
arpl
lret
cmp
dec
mov
sub
outsl
dec
test
into
mov
or
sub
cmc
addl
pushf
int3
lock
add
pop
enter
inc
or
jl
inc
adc
push
pop
rolb
push
xchg
test
adc
mov
add
push
std
scas
sub
pop
xchg
and
fs
fcompl
insl
inc
cld
push
cmpb
test
push
mov
lret
pushf
aad
in
stos
sub
or
test
es
aas
mov
insl
push
je
pop
mov
adc
sti
ret
neg
and
movntps
inc
cmp
xor
bound
mov
adc
scas
ljmp
daa
or
xchg
jae
xchg
mov
xor
test
xor
aas
mov
and
fidivrs
out
jnp
push
mov
push
add
shll
dec
add
lcall
and
xchg
mov
sbb
mov
lea
fwait
pop
stos
jns
sbb
fldl
pop
mov
inc
mov
mov
fmul
out
jnp
mov
pop
ret
fldcw
pop
lret
pop
loope
fnstenv
imul
xchg
test
pop
inc
fldl
mov
stos
inc
or
bnd
test
or
jl
xchg
push
sbb
int3
sbb
es
arpl
test
out
repnz
mov
xor
loope
cmp
fbstp
cld
lock
loop
lret
popa
fsts
lea
movsb
leave
sbb
pop
mov
mov
mov
inc
cmp
mov
mov
xor
into
mov
cmp
xchg
or
les
jl
test
jge
das
outsl
pusha
mov
ret
jmp
in
es
cwtl
and
aas
loope
push
lea
jnp
aad
xor
push
cmp
gs
mov
jo
ja
cltd
pop
adc
sub
xchg
cmp
lcall
dec
or
and
push
inc
mov
out
sub
add
enter
divl
push
fmull
push
cld
adc
mov
inc
and
insl
adc
jo
ja
jge
rcll
divb
mov
int3
mov
pop
subb
dec
push
fisubl
paddsw
push
call
add
call
xchg
and
fistps
inc
fildl
popf
mov
repz
stos
inc
imul
xchg
jns
jge
and
dec
fsubp
mov
sbb
pop
cmpsl
mov
icebp
push
sub
sub
repnz
in
nop
shrb
adc
xor
je
cmpsb
outsl
mov
adc
push
test
mov
stos
push
adc
adc
xor
and
hlt
int3
dec
stos
or
mov
aad
mov
loop
int3
lret
jg
jnp
sub
and
aad
rorl
movsb
std
out
mov
sbb
rclb
inc
inc
sub
dec
jne
push
fdivl
fidivs
mov
les
push
insl
sbb
scas
adc
xor
imul
mov
jl
dec
and
mov
xchg
mov
cmp
ret
or
repz
fstps
push
ja
lock
pop
mov
and
mov
and
pushf
arpl
ret
xchg
aad
ljmp
nop
fs
adc
pop
cmp
push
stc
or
adcl
pop
push
mov
in
std
addl
fistpll
or
xor
pop
popf
fnstsw
es
jecxz
sub
xor
ss
pop
sbb
push
xorl
test
jmp
mov
movsl
inc
mov
ret
inc
jle
test
mov
iret
mov
xlat
outsb
fidivs
out
jp
movsb
xchg
push
scas
inc
idiv
or
and
imul
dec
push
fs
adc
in
jno
mov
jns
sbb
adc
jecxz
adc
mov
js
test
or
out
mov
shrb
mov
lods
test
add
lods
jnp
pop
ljmp
cmp
dec
add
jb
ja
jb
test
clc
insb
mov
test
sbb
pop
lcall
jno
push
push
sti
push
xchg
jno
xchg
cld
mov
sub
insb
and
push
mov
ss
inc
mov
outsl
es
inc
xor
mov
in
dec
sub
pop
cmpl
pop
stos
out
add
loop
ja
repnz
out
add
mov
shrb
loopne
bound
sahf
mov
ret
sub
dec
outsl
xor
fimuls
xor
mov
push
inc
sub
into
dec
clc
push
inc
addr16
xor
inc
fwait
push
pop
stc
rcll
leave
in
mov
cmp
bound
jmp
outsl
nop
js
pop
fimuls
cld
push
sub
mov
xlat
lcall
push
jmp
and
loopne
xlat
sti
sarb
ja
push
mov
push
daa
add
add
and
or
xchg
sub
mov
add
lahf
daa
addr16
jecxz
cld
test
cmp
imul
and
cmp
jecxz
push
sub
sbbl
xchg
cmpsl
out
sbb
out
mov
daa
daa
jge
xchg
iret
fldl
mov
xchg
cmp
add
gs
test
sbb
jbe
repnz
test
inc
incl
testl
xor
xchg
sbb
rcrb
roll
out
cwtl
addr16
outsb
pop
cs
lea
mov
or
repnz
jno
sub
fs
enter
mov
shll
mov
push
bound
jno
push
movsb
sbb
lret
icebp
ret
pop
ror
inc
orl
cmc
idivl
mov
mov
iret
sahf
and
sbb
test
push
cmpb
fwait
pusha
dec
jmp
push
push
and
ss
sub
mov
mov
popa
adcl
test
sbb
sbb
xor
mov
dec
push
shlb
pop
xor
lods
scas
dec
mov
mov
mov
ja
mov
sbb
and
lcall
test
repz
xorb
add
mov
cli
pop
stos
movsl
inc
mov
mov
sahf
call
cmpsl
xor
outsl
pop
xlat
pop
cs
in
bnd
fisubs
out
lods
mov
loopne
aad
fisubs
and
scas
mov
dec
into
mov
or
mov
mov
sbb
inc
pop
cltd
adc
add
lret
add
jb
repz
xchg
repz
xchg
push
gs
fcomps
movsl
add
push
loop
xor
xor
push
test
lahf
aad
mov
sbb
cmc
add
mov
sbb
fsubrp
xchg
push
stos
stos
push
inc
xchg
push
loop
xor
mov
outsb
cmp
cmpsl
adc
adc
jno
hlt
add
lds
mov
jmp
ret
ffree
sbb
mov
sti
xchg
sbb
xchg
sahf
push
ljmp
sarb
jnp
cmp
mov
sub
cmp
lahf
jne
or
outsl
and
popf
movb
test
inc
es
es
decl
sub
ljmp
jl
or
jo
nop
and
stc
inc
scas
jns
js
orb
xchg
aaa
and
pop
mov
imul
mov
mov
fsubrl
icebp
mov
cltd
pop
and
clc
or
push
leave
je
mov
das
je
lods
cmp
or
mov
mov
lea
scas
or
out
adc
xor
iret
insb
pushl
sub
mov
mov
add
mov
jns
jecxz
dec
sub
mov
loope
outsl
inc
push
dec
insb
or
pop
jo
xor
aam
fwait
xchg
mov
lret
jno
outsb
sub
pop
and
inc
mov
cld
mov
stos
mov
es
ret
rorl
sub
ficompl
xchg
ror
xchg
pop
sub
pop
push
shlb
mov
mov
cmp
shrl
pop
cmpl
je
js
jecxz
or
cmp
sbb
or
enter
cli
fcomp
loopne
jmp
pop
addl
lret
int3
inc
xchg
mov
popl
mov
in
pop
or
xchg
push
pushf
mov
push
adc
push
push
outsb
mov
mov
dec
sbb
cmp
or
test
mov
push
fwait
clc
test
cmp
add
push
inc
orl
xor
adc
pop
ret
ret
push
fmuls
xchg
aad
scas
repz
ljmp
push
fsubr
jb
add
xchg
rorb
xor
fadd
test
idiv
add
xchg
cmpsl
or
pop
cmp
or
mov
fucom
clc
call
repz
push
icebp
mov
sub
cmpl
imul
jns
sub
dec
adc
mov
shrl
jge
add
or
popf
push
mov
sub
lea
shrl
xor
xor
xchg
adc
pop
clc
xchg
jge
lret
xchg
cwtl
xchg
jae
das
lock
leave
xor
adc
dec
fimull
and
jl
dec
testb
jg
cmp
sbb
xchg
rorb
daa
inc
sti
pop
cmpsb
sahf
cmp
frstor
and
imul
or
adc
sbb
enter
icebp
pusha
mov
clflush
mov
loope
mov
sbb
int3
sub
mov
shl
aad
push
jge
test
add
mov
fldcw
mov
les
jmp
insl
and
mov
mov
mov
and
push
repz
test
aas
mov
or
xchg
cmc
rcl
stos
cmp
shrl
jo
adc
outsb
inc
insb
loope
popa
cmp
and
pusha
inc
out
or
mov
inc
jne
das
push
sbb
rolb
inc
dec
movsl
pop
adcl
jle
mov
jno
pop
mov
cmp
subb
ja
test
les
mov
lods
mov
leave
das
in
mov
jns
adc
pop
fdivrl
add
xor
cmp
xchg
rorb
neg
adc
push
in
sbb
mov
fldenv
mov
lods
imul
rorl
pop
adc
mov
xor
adc
pop
xchg
scas
jmp
aaa
pop
cmp
adc
in
adc
jmp
movsb
ja
xchg
aaa
sbb
cltd
inc
add
lods
cmpsb
rcrb
xor
out
repz
adc
scas
in
cltd
or
mov
imul
jnp
lods
xchg
xor
movsb
lcall
gs
inc
das
mov
or
loop
mov
push
push
mov
loop
and
int3
arpl
push
imul
inc
sbb
jl
outsl
out
mov
xchg
add
pop
scas
sub
jl
inc
rolb
sub
and
scas
xor
sub
ret
pop
pop
repnz
inc
xlat
push
leave
jmp
pop
mov
cmpsl
sub
sti
jo
xchg
jecxz
jmp
pop
mov
push
in
jnp
and
testb
test
nop
mov
push
rcr
pop
test
in
xor
cmp
test
pop
cmpsb
cmp
xor
sub
js
or
ljmp
push
push
in
sub
scas
sub
imul
ss
jne
adc
jp
into
insb
mov
sub
hlt
js
push
daa
jmp
push
jo
lods
mov
sbb
fs
inc
cmpsl
mov
jecxz
pushf
shl
aad
jmp
push
pop
push
push
mov
sub
aad
push
sbb
aaa
mov
shr
in
fbstp
pop
nop
mov
mov
xchg
punpckhbw
je
inc
xchg
inc
std
shlb
add
adc
push
inc
push
fwait
pop
push
jge
in
sbb
adc
std
push
push
dec
ret
or
and
jecxz
loop
jge
mov
inc
loopne
into
in
adc
pop
push
inc
aaa
in
sar
ja
ja
pop
daa
cli
lock
push
xchg
mov
int
mov
pop
pop
push
dec
jle
pop
add
xchg
scas
gs
in
add
sbb
jp
popa
das
jae
pop
mov
inc
add
jne
jne
add
fs
jmp
lods
jg
adc
test
stos
add
xor
stos
imul
mov
push
sub
fcmovu
pusha
xchg
xchg
mov
jp
call
xchg
pop
mov
xchg
xor
sub
mov
imul
dec
cmp
aaa
mov
js
rol
fsubs
inc
int
inc
push
cmc
xchg
lods
mov
fsts
jle
or
sub
cmp
cltd
mov
inc
adc
aas
repnz
imul
jo
mov
fisubl
sti
and
add
decl
ss
jns
sbb
add
movsl
adc
sti
mov
in
mov
aaa
push
outsb
std
daa
lret
test
mov
mov
and
frstor
xor
test
inc
andb
cmp
mov
gs
xor
imul
out
shl
adc
push
mov
repz
out
lods
jae
push
mov
mov
add
movsl
fisttpll
mov
mov
inc
stos
sbb
cltd
sbb
sbb
jne
mov
bswap
cmpsl
ss
mov
xor
xor
add
jae
mov
push
and
aam
notl
sahf
insl
loopne
enter
ficompl
pop
ret
push
xchg
sub
mov
roll
or
fadd
es
add
cli
or
inc
enter
mov
sub
cmp
xchg
cmpsl
and
sub
sbb
mov
outsl
xor
sub
inc
inc
filds
mov
mov
mov
sbb
orl
and
imul
in
cmp
mov
or
dec
and
lock
lods
pop
xor
xchg
xchg
mov
jmp
sahf
pop
and
mov
or
adcb
int
mov
pop
lret
add
out
aaa
dec
fisttpll
push
lcall
push
arpl
cmp
adc
out
movsl
sahf
lcall
adc
pushf
dec
std
mov
inc
cmpsl
flds
mov
lds
xchg
xor
jp
or
fcom
in
loop
repnz
and
repz
pushf
repz
xor
jle
sbb
inc
jle
push
jbe
dec
sub
addr16
cmp
loopne
out
pop
mov
xchg
adc
in
loope
aam
cld
icebp
push
stos
aam
ja
jecxz
mov
cmp
subl
push
aam
xchg
lret
iret
xchg
xsave
fsubp
jno
fistps
lea
inc
xchg
and
sbb
xor
es
xorb
fisubl
pop
dec
push
cmp
out
sbbl
pop
pop
push
jmp
mov
stos
ja
in
mov
pop
rol
xchg
sbb
add
pop
adc
arpl
and
imul
int3
cmp
ljmp
rclb
jecxz
xor
dec
jae
jns
jp
insb
jg
or
mov
jmp
dec
add
sti
and
daa
pop
or
inc
hlt
shld
mov
mov
push
dec
mov
nop
in
fadd
dec
adcb
pop
dec
cmp
fsub
aam
xor
jno
mov
adc
leave
sub
ljmp
pop
xorb
shll
or
repnz
lahf
xorb
push
shl
mov
inc
push
pusha
sub
cmc
mov
cmp
jmp
fwait
jl
mov
xchg
xor
ret
xor
cmc
dec
pop
adc
inc
test
xchg
sbb
inc
jnp
push
in
mov
add
adc
dec
sbb
push
loop
stos
arpl
jne
ret
jb
popf
push
fmuls
adc
divb
jae
lods
jae
ss
ret
pop
pop
hlt
pop
test
cli
jb
mov
pushf
jno
mov
in
mov
fists
fwait
pop
mov
jb
pop
test
adc
and
push
mov
in
xchg
mov
push
outsl
xchg
out
into
inc
mov
ja
je
out
xchg
pop
push
aas
or
jmp
cmp
hlt
add
fwait
iret
cmpsb
jno
add
ljmp
pop
out
xrelease
leave
das
cld
cmp
and
jl
in
sbb
sub
jge
push
icebp
ret
push
insl
int3
outsb
push
popa
fidivl
rcrb
sbb
repz
pop
inc
jne
mov
not
mov
xchg
gs
int3
movsl
fwait
mov
jo
sarl
call
xchg
movsb
enter
testb
cs
out
loop
dec
cmp
push
pop
push
push
ljmp
rolb
mov
ret
data16
xor
daa
addr16
push
and
xchg
cmp
and
pop
push
mov
bnd
xchg
inc
pop
inc
xor
nop
mov
ljmp
dec
pop
outsl
adc
pop
test
popa
mov
fwait
jae
adc
es
mov
and
xor
mov
jbe
cmpsb
cmp
sahf
cli
js
mov
mov
mov
das
cmp
dec
inc
jne
cmp
pop
test
les
mov
rcrl
outsl
mov
sub
sbb
out
std
mov
and
lock
mov
data16
in
mov
test
cltd
fisttpl
leave
pop
movsb
and
push
push
pop
mov
mov
xor
aam
jge
inc
insb
aas
mulb
jp
ljmp
and
sub
call
stos
mov
dec
subb
and
jmp
jg
sarl
lret
and
inc
stc
push
scas
xchg
imul
lock
adc
fldcw
inc
pop
movsl
push
add
sub
adc
nop
out
mov
push
loop
adc
jo
incl
xchg
iret
popf
roll
test
mov
cmp
loopne
das
sub
cwtl
insl
cmp
fcos
pop
shlb
sub
imulb
xor
test
push
gs
cli
xchg
or
dec
scas
test
fs
mov
lock
sbb
push
loopne
inc
test
xor
mov
cmp
mov
mov
movsl
xchg
dec
hlt
adc
push
lret
movsl
hlt
xor
pop
stos
jle
sub
nopl
or
sqrtps
cli
movsb
xlat
xchg
cwtl
push
test
push
push
je
xlat
mov
pop
dec
xchg
pop
sub
stos
or
pusha
add
insb
push
or
mov
or
mov
cmp
push
add
pusha
orb
in
sbb
imul
jnp
mov
scas
nop
jnp
pop
mov
xchg
fldpi
nop
hlt
into
out
lds
push
xchg
inc
addl
xor
stos
popf
testb
pop
aas
xor
pop
xor
inc
xor
sub
add
fnstcw
outsb
fdivr
or
cwtl
mov
lahf
in
and
dec
clc
aam
add
pop
lds
mov
jge
es
dec
sbb
movsl
imul
rcr
loop,pt
mov
and
in
mov
mov
aas
test
push
jg
aaa
aam
mov
test
in
mov
cmp
daa
or
arpl
dec
xchg
addr16
push
hlt
mov
pop
add
fsubrl
int
js
cmp
mov
mov
pop
shl
jge
outsl
adc
jns
sub
mov
mov
pop
leave
or
mov
daa
inc
out
adc
stos
in
inc
addr16
bound
aaa
xchg
ja
or
xchg
test
loope
insl
nop
icebp
les
mov
mov
jp
add
mov
lret
and
test
mov
and
jb
mov
enter
sbb
repz
pushw
stos
shl
cmp
out
fidivl
popa
clc
and
andb
dec
pop
cwtl
lea
fldcw
rolb
out
add
or
add
or
jb
sbb
sti
jns
fsubr
pop
pop
cmp
and
jae
call
or
fistps
subl
pop
std
addb
jno
sub
mov
ja
movsl
jae
add
loop
adc
inc
cmp
inc
imul
or
fisttps
rorl
in
aad
mov
and
lret
cli
and
pop
mov
fdivs
inc
sbb
jno
mov
mov
inc
cmc
push
scas
fdivr
cmp
jl
dec
push
inc
ficompl
imul
shlb
cltd
cwtl
pop
faddl
sbb
sahf
cmp
xchg
aam
or
adc
push
movsl
outsb
ljmp
inc
pop
inc
cmpsb
iret
mov
mov
mov
subl
or
dec
jbe
and
ljmp
das
adc
loop
xchg
cmp
xchg
ret
mov
add
mov
dec
sbb
pop
pop
not
fildl
mov
mov
in
popa
cwtl
sar
hlt
sbb
bound
imul
ljmp
xchg
mov
push
mov
icebp
push
es
into
pop
stos
in
mov
xor
repz
std
fsubr
adc
sub
lret
mov
data16
pushf
sarl
add
clc
js
jg
add
ret
repnz
loope
jl
push
inc
test
aad
loope
push
cmp
cltd
pop
sbb
stc
mov
mov
adc
xchg
jecxz
sub
mov
repnz
cmp
lods
pop
push
orl
sub
mov
mov
or
int
les
out
pop
push
adc
int3
in
addb
cli
cltd
jp
push
xor
mov
inc
sarl
dec
clc
scas
sbb
dec
int3
cmpsb
rolb
iret
sub
cmp
mov
jae
int
pop
jnp
jg
repz
add
adc
lret
fs
int
jle
inc
imul
sub
and
fidivrl
cltd
pop
pop
test
ja
pop
repz
notb
clc
insb
mov
adc
pop
add
rcrb
xor
fisubrs
jnp
imul
pop
inc
add
push
mov
stc
push
jmp
jle
scas
xchg
mov
fnsave
xchg
scas
adc
ss
icebp
dec
dec
dec
push
pop
inc
popa
data16
dec
mov
jnp
or
push
add
sub
xchg
mov
int3
mov
enter
enter
icebp
fwait
out
ret
in
jge
mov
js
sub
push
push
aad
xchg
cltd
push
mov
pop
jp
jl
out
hlt
jns
pusha
in
in
and
add
or
rcll
popf
enter
repz
cmpsb
add
ret
pop
cwtl
scas
mov
sub
inc
outsl
aam
and
adc
dec
addb
out
scas
orb
sbb
add
dec
push
aaa
push
xor
and
scas
lret
mov
popf
cld
add
xorl
cmp
cmp
mov
je
mov
insb
sub
test
icebp
les
mov
jecxz
and
mov
cmpsb
and
push
ret
xchg
mov
xor
mov
push
ret
nop
rcl
in
cld
add
in
clc
jg
sub
xchg
jp
and
lcall
xor
aas
mov
mov
mov
mov
jae
lods
pushf
lods
out
lods
xorb
sar
clc
push
inc
pop
dec
int
fld
jns
popa
push
jns
xor
jbe
loopne
add
rorl
xchg
popa
test
push
jno
jp
test
jp
decb
subb
jle
iret
aad
lods
jbe
xchg
dec
mov
inc
mov
sbb
hlt
push
and
lahf
fstpt
insb
iret
rcll
cmpsb
pop
and
data16
dec
lcall
dec
leave
jbe
push
xor
adc
mov
jo
jne
sbb
enter
pop
xor
in
daa
pop
cs
jg
mov
pop
imul
jns
lds
lds
push
in
cmp
sti
jmp
or
xor
push
xchg
aas
fidivl
enter
inc
fbstp
push
leave
and
jp
ffree
jnp
push
xlat
pop
xor
push
push
xchg
stos
mov
imul
mov
shrl
push
lods
add
out
out
bnd
sub
push
pop
mov
push
mov
adc
shrl
xchg
sub
leave
cmp
xchg
mov
mov
add
test
pop
data16
mov
lea
xlat
jne
jne
jl
jb
sub
push
add
xchg
jmp
adc
daa
imul
ret
sbb
jnp
mov
iret
and
push
shll
mov
jno
cwtl
or
movsb
lock
mov
mov
insb
push
loop
movntq
call
in
sbb
dec
lock
cmp
add
repz
push
or
xchg
adc
xchg
and
gs
ljmp
adc
sbb
mov
cmp
adc
stos
xchg
mov
sbb
jp
jbe
test
ret
sub
sbb
jge
les
or
and
and
ds
xor
mov
sub
sub
mov
and
xchg
mov
xchg
pusha
mov
lahf
xchg
testb
pop
das
fstpt
jb
pushf
rorb
test
inc
xchg
or
cmc
cmp
adc
popa
aaa
and
mov
fmull
xchg
xor
jp
movsl
into
int
sbb
test
das
xlat
adcl
jp
mul
jmp
inc
mov
stos
rorl
movsl
xchg
sbb
dec
lahf
xchg
std
mov
mov
ret
pop
xchg
leave
popa
jmp
into
leave
ja
mov
jl
mov
mov
and
loop
dec
std
mov
cwtl
cmc
mull
jmp
sahf
xchg
push
xchg
test
lods
subb
addr16
stos
in
xchg
jb
outsl
int
lods
cmp
adc
lcall
sbb
sbb
fisubl
add
adc
jmp
sub
ret
gs
fdivl
fdivrp
add
lcall
cmp
add
lcall
push
and
pushf
outsb
test
jl
push
cld
sub
pop
arpl
dec
repnz
or
inc
mov
pop
bswap
test
les
aas
les
stos
cmpsl
nop
adc
pop
cmpsb
sbb
aam
ss
push
lret
push
xchg
pop
stos
mov
push
or
mov
int3
lret
stc
rorb
ret
addl
jmp
and
loopne
xor
test
rcrl
imul
add
xchg
push
push
lcall
lcall
pop
xlat
popl
insl
cmp
ret
and
shll
or
dec
and
sbbl
mov
adc
nop
xchg
dec
add
mov
cmp
mov
mov
xchg
aaa
and
andl
add
test
mov
xchg
add
popa
pusha
jns
xchg
xchg
fldcw
js
sbb
arpl
push
pop
jb
mov
es
xor
fldt
jb
xchg
pop
adc
sub
xchg
cmp
dec
imul
scas
jmp
sarl
movsl
mov
jns
cld
or
loopne
add
or
xchg
mov
jmp
or
jg
or
imul
mov
pop
pop
inc
repz
inc
popa
or
sub
inc
xor
xor
mov
mov
aad
fcomi
stc
add
push
call
push
or
cli
inc
xor
pop
dec
inc
or
mov
sti
pop
cmc
jp
mov
stos
sub
xchg
inc
mov
cmp
loop
xchg
movsl
rorl
loopne
in
add
adc
cmp
cmp
insb
mov
aas
mov
and
imul
icebp
and
outsl
js
arpl
cmp
xchg
push
and
pop
scas
cwtl
jg
loope
pop
mov
add
notl
int3
lahf
dec
movsb
sub
lret
mov
mov
repz
and
and
jb
adc
mov
mov
mov
out
cli
mov
push
push
inc
aad
out
add
pop
adc
or
jns
mov
cmc
add
lret
movsl
mov
fs
mov
out
repnz
adc
or
adc
imul
scas
pop
xchg
mov
and
movsb
push
insb
pop
xorl
cmp
mov
mov
rcrl
add
push
xor
fldenv
adc
jne
jmp
daa
jle
mov
pushf
push
push
mov
mov
out
mov
jns
je
je
mov
dec
add
loope
xor
ljmp
out
jmp
mov
fidivrs
stos
adc
ret
add
aaa
imul
and
and
in
cltd
sub
les
faddl
test
pop
adc
cmpsl
add
fimuls
adc
xchg
jo
mov
lret
and
into
fnstsw
scas
xor
cltd
or
loopne
push
mov
sub
dec
cmpsl
arpl
cmpsb
loope
fbstp
mov
out
mov
insb
or
stc
nop
xchg
adc
test
cmp
aas
or
jne
testl
nop
jbe
cmp
jns
ja
nop
or
testl
outsl
mov
sti
dec
and
add
pop
xor
popa
test
add
popf
mov
sbb
decl
in
push
jl
cltd
xchg
mov
gs
in
jmp
pop
lret
mov
xchg
jl
sub
pop
adc
jo
push
or
pop
stos
ss
xlat
jp
pop
cmp
inc
pop
mov
push
lcall
shll
test
xlat
and
xchg
cmp
pop
mov
jbe
and
mov
adc
add
dec
scas
and
pushl
out
ja
cmp
in
lea
lahf
stc
pop
repz
das
mov
rorb
adc
stc
ret
push
mov
mov
inc
inc
adc
insl
aas
pop
and
push
push
mov
add
shlb
repnz
clc
inc
inc
fcoms
mov
dec
adc
int3
sub
fadds
fwait
jle
rolb
mov
movsl
fstpl
push
sbbl
ficoms
mov
icebp
dec
insb
jl
jl
or
and
js
rcr
inc
loopne
movsl
es
outsl
movsb
popf
or
jp
in
push
mov
aaa
lods
aaa
xchg
fsubl
xor
bound
mov
pushf
jl
sub
sbb
inc
pop
push
inc
ja
mov
mov
pop
cmp
aaa
imul
lret
push
idivl
test
mov
inc
xlat
mov
mov
dec
lea
sbbl
sub
pop
sub
int
fisttps
jp
fdivs
pushf
stos
ja
scas
push
ds
push
pop
mov
sub
fld
std
clc
mov
jg,pt
lods
fs
jp
outsb
adc
jne
dec
and
jbe
or
movsl
lds
aas
mov
lea
scas
push
push
in
stos
sbb
sbbb
mov
inc
popf
bound
and
adc
pop
and
rcr
mov
fnstcw
adc
out
int
fbstp
outsb
or
push
cmp
and
add
cmp
mov
jmp
imul
loope
out
call
dec
inc
xlat
inc
mov
aam
push
xchg
hlt
repnz
jne
mov
repz
add
lock
int
pop
cmc
into
jae
inc
mov
ds
jmp
jbe
ret
fisttpl
jb
mov
sbb
test
and
sbb
cmp
insb
loope
scas
imul
leave
pushf
adc
lret
sbb
or
sbb
inc
and
ficoms
movsl
pop
mov
scas
aas
aam
mov
add
addr16
mov
dec
dec
leave
ja
jns
mov
jge
fidivrl
sbbb
fisubs
std
leave
fisubrl
mov
mov
cmp
out
mov
aas
inc
fmuls
loope
es
loopne
adc
js
ret
mov
mov
and
sbb
insb
mov
cmp
xchg
stos
scas
inc
pop
sub
fwait
aaa
outsb
aas
adc
push
jb
out
jmp
aas
cwtl
push
mov
xlat
popa
rcr
jmp
bound
sbb
xor
mov
cltd
xor
lock
pop
movsl
push
xor
or
xchg
das
inc
xchg
pcmpeqd
inc
cmp
in
sbb
mov
inc
jle
xchg
mul
push
ja
jp
cltd
or
loop
bound
loopne
jne
xor
lods
ss
dec
mov
or
leave
shlb
cld
mov
ror
inc
and
mov
imul
jbe
mov
shlb
and
test
and
test
jo
xchg
xchg
xor
and
mov
int
in
xchg
and
adc
cmpsb
mov
pusha
inc
or
adc
cmpsb
rcrl
negb
aad
push
push
or
fstps
and
andl
push
xchg
mov
mov
mov
ss
jl
sub
int
sbb
cmp
mov
mov
adc
xor
xor
insb
push
imull
mov
std
inc
dec
push
xchg
inc
gs
jnp
adc
push
outsl
out
daa
pop
jecxz
pop
mov
sub
or
dec
sbb
ficoml
xchg
pop
mov
pop
xchg
cmpsb
sbb
xor
sub
shlb
push
mov
stc
lock
dec
imul
adc
and
push
int
shr
fwait
or
dec
leave
cmc
push
xchg
mov
pop
hlt
or
push
sub
mov
jo
jb
dec
das
xchg
xchg
leave
push
ds
xor
ss
inc
roll
pop
mov
call
inc
or
ss
ja
cmp
aad
mov
ficomps
repnz
pop
sub
sbb
dec
add
push
fbstp
insb
lods
mov
dec
iret
out
in
icebp
jecxz
mov
xchg
test
fsubrl
push
mov
cmp
repnz
inc
mov
inc
cltd
cltd
push
jnp
adc
jge
ljmp
cltd
cmp
ret
bound
sub
nop
or
pop
cltd
jo
xchg
sub
push
call
inc
or
cli
jge
cmpsl
ret
xchg
test
push
jbe
xchg
dec
clc
adc
or
mov
push
loopne
cltd
mov
pop
push
mov
sbb
xchg
jmp
push
push
cmpl
lds
jae
iret
xlat
xchg
mov
push
jg
cmpsl
or
les
push
es
xchg
dec
xchg
repnz
adc
push
cmp
imul
sub
mov
mov
cmp
add
dec
out
ds
sub
lahf
dec
ds
mov
es
push
mov
push
cmp
push
cld
aad
daa
xchg
jmp
cmp
and
jp
push
inc
jmp
jg
lock
cmpsl
xor
xchg
jle
mov
call
shl
sub
push
bound
jle
sub
xor
sub
inc
sbbb
sub
imul
movsl
xlat
dec
arpl
iret
mov
xor
sbb
aad
sub
adc
pop
insl
fwait
cltd
roll
jle
xchg
add
mov
data16
repz
inc
jmp
push
ss
test
dec
xchg
cmp
shlb
sbb
xor
lea
xlat
in
pop
icebp
add
rcll
iret
sub
push
aas
sbb
std
in
nop
test
sub
das
dec
push
xchg
mov
stos
inc
mov
scas
lahf
dec
call
cltd
mov
push
add
cmp
stos
sub
pop
dec
movsb
mov
sub
xor
jnp
pusha
dec
jg
ja
nop
jmp
inc
mov
aas
insb
test
sbb
loop
aam
repz
cmpsb
mov
mov
mull
or
arpl
imul
xchg
je
aaa
pop
mov
gs
sub
mov
mov
jnp
das
mov
notl
pop
int
movsb
jae
les
jae
scas
ss
mov
jne
mov
aam
jo
push
cmp
fs
enter
dec
pop
mov
stos
stos
add
lds
mov
xchg
repz
in
cmpsl
and
arpl
jecxz
mov
popa
mov
adc
sahf
fildl
out
or
cmp
cwtl
cwtl
push
stos
inc
xor
ss
push
xchg
xor
or
imul
js
push
cmpsl
insb
sbb
and
push
push
sahf
or
or
xor
or
je
int
inc
int3
lock
fistpl
pop
int3
mov
pop
jne
mov
repz
inc
adc
popa
adc
sahf
movsl
cmp
lcall
sbb
int
jmp
inc
push
fiaddl
js
in
mov
hlt
push
clc
xlat
fisubrl
sub
sbb
sbb
scas
movsb
mov
and
pushl
pusha
loopne
jl
sub
xor
ret
jb
mov
lret
jno
aam
cltd
or
cmc
in
ss
mov
and
shlb
insb
mov
test
cmpsl
iret
and
pop
ss
jg
fucomp
push
or
iret
shlb
push
std
cmp
cmp
xchg
loop
pushf
sbb
ds
push
in
or
push
push
cltd
lock
sbb
xlat
cmp
call
jbe
and
xlat
xor
outsl
sar
stos
push
jns
cmpsb
call
inc
and
add
mov
jo
push
movsb
movsb
loope
lods
mov
pop
xchg
lahf
stc
jbe
sub
loop
int3
int3
sub
push
out
xor
xchg
pop
jp
test
leave
pop
adcb
outsl
repnz
dec
add
sti
pusha
arpl
hlt
jg
dec
cltd
test
test
and
stos
aad
stc
stc
mov
sbb
and
fs
xchg
mov
xchg
mov
mov
in
aad
inc
jnp
call
out
push
jg
repnz
stos
cmp
jbe
mov
push
neg
iret
adc
xchg
and
test
inc
sub
cltd
aad
push
out
mov
nop
mov
xchg
jmp
push
add
cmp
pop
xchg
dec
std
and
dec
xor
cmp
sbb
sbb
arpl
in
jl
xor
pusha
pop
jno
xchg
cwtl
sbb
sub
or
and
mov
icebp
mov
ffreep
pop
mov
add
cwtl
sbb
jmp
stos
mov
dec
push
cli
in
mov
je
adc
xor
xor
outsb
jmp
out
fiaddl
shr
push
or
fidivrl
cltd
and
rcll
jno
in
mov
dec
mov
nop
fmul
fsubrl
fiaddl
jmp
or
push
hlt
imul
add
pushf
inc
fs
mov
jle
stos
sbb
push
xchg
mov
adc
jge
push
add
mov
repz
aas
call
or
lea
jne
stos
xchg
in
jmp
cmp
daa
push
xchg
pop
add
dec
stos
scas
jp
mov
push
sub
cmp
shl
outsl
fsubr
xor
and
pushf
jp
pushf
xchg
inc
push
or
sub
xor
inc
pop
jmp
mov
push
inc
add
insb
lds
jg
scas
arpl
aad
or
je
dec
adc
jb
rcrb
add
incl
sub
pop
testb
sub
mov
mov
ds
push
xchg
mov
jae
bound
sbb
aam
movsl
int
mov
test
xor
or
push
and
jge
fstps
cmp
pop
mov
rol
mov
xor
xchg
icebp
jmp
sub
xchg
test
jae,pt
push
dec
cmp
inc
lds
gs
or
popa
sub
lods
cld
test
or
and
cmpsl
rcr
in
aas
mov
pop
mov
out
imul
fsts
jmp
dec
loope
adc
mov
jecxz
outsb
roll
or
and
pop
mov
jg
lods
inc
gs
dec
scas
jnp
mov
sbb
outsl
cmp
rcrb
ss
push
adcl
add
leave
mov
or
mov
inc
lea
mov
jecxz
pop
iret
les
mov
jp
xchg
sub
cmp
cmpb
mov
adc
leave
lock
loopne
fmulp
mov
int
mov
jp
and
mov
ret
ror
sub
dec
mov
ss
testl
inc
outsb
lds
cwtl
push
push
lahf
pop
cs
jo
insb
sti
push
frstor
sub
mov
sbb
mov
xlat
or
jmp
xchg
sbb
push
mov
jns
pop
jae
cltd
xchg
cmpsb
add
ss
inc
or
leave
cld
ja
lds
pop
pop
out
mov
ja,pn
fldt
dec
leave
mov
shrb
sbb
sbb
stos
push
dec
dec
aam
pmaddwd
dec
int3
cs
sbb
in
scas
cwtl
pop
mov
cmp
movsl
outsl
push
loop
and
xchg
pmuludq
xchg
cmp
rolb
imul
cmp
rclb
imul
inc
pusha
or
out
jmp
aam
aaa
jae
addr16
inc
lods
lret
and
xchg
jle
mov
add
and
add
ret
mov
mov
cmpsl
mov
adc
sbb
mov
je
stos
jg
insb
pop
test
add
cwtl
mov
popf
imul
inc
outsb
bound
dec
jecxz
add
pop
pop
mov
aad
xor
add
or
or
sub
sbb
inc
popa
ret
sbb
push
loope
iret
pop
ficoms
pop
nopl
push
nop
and
orb
jmp
cmpb
ret
roll
pop
xor
jnp
addr16
or
inc
xchg
repz
in
mov
mov
dec
fmull
push
call
cltd
mov
jo
fdivl
call
pusha
test
cld
lret
cld
jno
aam
jmp
jmp
repnz
jp
xchg
pop
in
movsl
cmp
mov
push
lea
inc
push
out
mov
add
lahf
clc
hlt
popa
incb
push
sbb
mov
adc
cmp
int
aad
cld
and
shlb
inc
sub
outsb
outsb
mov
and
xchg
jbe
inc
sub
cmpsl
inc
js
add
shll
xor
xchg
inc
loope
jl
pop
nop
add
fiaddl
pop
dec
pop
dec
lahf
out
pusha
mov
cmc
adc
push
sub
cs
push
pop
pushf
jnp
shlb
imul
mov
mov
lea
xchg
int3
mov
sbbb
cltd
dec
push
mov
inc
outsb
pop
adc
out
std
push
lds
adc
add
jmp
pop
pusha
and
cmc
inc
dec
shlb
lods
jp
jbe
and
push
jge
xor
bound
imul
sahf
jnp
movsb
lods
mov
inc
xchg
repnz
or
pusha
jae
inc
push
rcl
mov
push
inc
pop
xchg
pop
mov
dec
loope
rorl
mov
loopne
mov
and
lahf
fwait
or
sub
xor
out
dec
pop
mov
pop
arpl
aas
lret
rorl
xor
mov
sub
loope
adc
xor
ljmp
inc
push
mov
aam
adc
movsb
loop
and
inc
pop
cmp
pop
jmp
aad
cltd
mov
aam
mov
iret
sub
pop
mov
add
std
jmp
das
sbb
fidivrs
cmp
mov
or
out
xor
test
add
push
js
push
add
enter
sahf
mov
imul
je
mov
fwait
pop
jp
shrb
js
mov
cmc
ljmp
pop
mov
test
bound
int
xchg
sbb
ss
xchg
in
or
hlt
lcall
andb
add
pop
add
xor
out
fistl
mov
jge
into
or
or
ds
xor
xlat
push
inc
shlb
shrl
dec
xor
xchg
mov
push
or
filds
xchg
xchg
mov
stc
adc
aaa
shlb
fiaddl
lock
lods
jmp
sbb
inc
or
outsl
and
in
add
fs
sarb
cmp
imulb
sahf
test
rcrl
mov
jmp
cli
clc
rorb
subl
push
aad
lea
dec
pushl
mov
cmp
add
cmp
lret
incb
inc
mov
lock
call
add
dec
in
dec
in
in
jno
ja
sub
or
insb
xlat
ds
sub
lods
cmp
fimuls
inc
test
subb
dec
je
jle
pop
inc
cli
mov
ljmp
inc
mov
dec
push
cmpsb
aas
inc
jo
aad
lods
nop
sub
int3
push
cmp
test
xchg
idivb
sub
cmp
adc
xchg
jbe
in
ror
nop
stos
movsb
lods
and
or
cwtl
rolb
and
mov
and
sub
imul
xlat
hlt
mov
loope
lods
ljmp
xchg
lret
scas
and
and
fsubrs
cltd
pop
dec
shrb
xchg
and
sbb
es
xor
xchg
loope
dec
ret
or
icebp
jns
movsl
sbb
and
add
pop
pop
imul
dec
lret
arpl
inc
xor
out
outsb
mov
mov
std
dec
rorb
xchg
jnp
mov
add
dec
or
jl
mov
dec
jmp
mov
stc
js
or
or
xor
cmpl
jns
mov
out
dec
nop
adc
or
orb
inc
mov
mov
ljmp
mov
in
fsts
cmc
jge
cmpsl
xor
mov
mov
sub
push
sub
cltd
lods
daa
inc
ljmp
or
sub
jp
shrl
mov
inc
aam
or
loop
mov
inc
mov
lock
stos
jae
ret
mov
out
pop
cmp
icebp
pop
repnz
jp
push
pop
sub
test
xchg
xorl
push
daa
jmp
sbb
jno
jne
popa
movsl
xor
int3
push
aad
pop
mov
bound
int3
enter
mov
mov
scas
pusha
xchg
pop
in
sahf
insl
cs
lahf
lods
add
pop
xchg
mov
ljmp
cmp
push
test
lock
cmpsb
sarb
jbe
mov
cmp
in
xor
pushf
pusha
imul
bound
sub
and
xchg
popf
mov
cmp
stos
arpl
xor
jbe
pop
gs
pop
frstor
cmp
sahf
shll
shr
mov
pop
dec
insl
fcom
inc
pop
cmp
jg
int3
push
mov
call
cs
iret
add
cmpsl
mov
dec
test
call
pop
faddl
sub
jmp
mov
cmpsb
cmc
inc
or
xor
mov
aas
pop
shlb
popa
jb
sbb
dec
addr16
lret
lcall
mov
jle
mov
cmpsl
cmp
and
lods
dec
clc
mov
lods
in
mov
jmp
out
sbb
test
repz
sbb
aam
pop
inc
out
push
pop
jmp
lret
jno
clc
xor
ljmp
jae
shrl
daa
push
shr
cmp
dec
xchg
jg
sub
sahf
inc
push
rcrb
popf
stc
mov
cmc
subl
push
fwait
loope
outsb
fistl
lret
push
or
pop
sbb
sub
add
jmp
add
out
div
cmp
cwtl
and
test
iretw
imul
pop
fwait
andb
mov
mov
popa
add
cmp
aaa
insl
mov
ja
push
pop
xchg
fisubs
adc
jmp
or
dec
jns
icebp
adc
xchg
pop
leave
or
lret
inc
xchg
push
sbb
adc
arpl
hlt
pop
or
or
cmpsb
das
ljmp
push
push
test
xor
insl
dec
mov
es
adc
shll
xchg
inc
sbb
aad
mov
dec
test
jae
pop
lods
dec
pushf
mov
das
enter
push
jnp
ds
sub
and
xchg
outsb
jno
mov
outsb
or
fcomps
jg
and
shrb
cltd
aaa
shlb
nop
fldcw
repnz
fsubl
xor
mov
aam
in
shr
jno
lea
inc
testl
ss
mov
mov
pop
mov
les
mov
add
sub
pushf
sub
out
add
xorl
repz
lods
adc
push
sti
adc
pop
inc
lods
ja
pop
adc
xor
out
jmp
cmp
jno
pop
push
int3
dec
aas
decl
mov
aam
daa
repz
movsl
iret
pop
mov
fmuls
jp
adc
add
pop
pop
popa
sbb
lds
cmp
pop
xor
jl
pop
xchg
fstps
lret
lods
mov
jg
lods
fnstcw
mov
inc
fists
jle
js
mov
inc
scas
faddl
sahf
sbb
mov
movsl
push
pop
pop
dec
jecxz
imul
rorb
jb
mulb
lds
subb
cmpsl
sbb
mov
pop
js
cmp
lock
test
bound
mov
and
jne
xchg
lods
mov
nop
inc
insb
lods
popf
in
mov
fld1
lods
xchg
dec
cmpl
sarl
cmp
mov
inc
outsl
push
rorb
mov
aas
sub
fnstenv
inc
fiadds
cltd
jg
inc
mov
pop
mov
ret
sub
adc
xor
fisttpll
fs
lock
cmpl
mov
inc
out
sub
mov
lods
mov
into
lds
aaa
adc
push
popf
fldcw
xchg
shl
fwait
push
fidivrs
dec
mov
sub
pop
push
ds
xchg
jmp
mov
inc
pop
dec
inc
jge
add
nop
fcomip
out
pop
push
xchg
mov
mov
insl
mov
popa
and
jo
aam
dec
loopne
sbb
mov
dec
pop
pusha
cs
push
popa
outsb
mov
insl
dec
push
fbstp
jg
out
pop
hlt
out
mov
cmc
jl
popa
es
pop
subb
mov
add
rorb
bound
add
int
jl
mov
push
jb
mov
mov
cmpsb
jo
ret
or
cli
mov
jbe
ret
lahf
outsb
mov
iret
in
pop
pop
repz
std
insl
repz
aaa
lahf
mov
lret
inc
pop
push
jbe
addr16
cltd
sar
cmpsb
int
scas
add
sahf
xor
test
fisubrl
jae
xchg
sub
push
jge
dec
sahf
pop
sub
cmp
rcrl
movsb
mov
and
jmp
testl
lds
push
test
shlb
dec
testl
cld
adc
push
xchg
jo
add
gs
rorb
sbb
push
ja
btc
or
jecxz
stos
push
lret
das
xchg
sbb
and
sub
sub
data16
mov
pop
stc
stos
cmc
dec
push
xorl
out
cmpl
dec
movsl
push
sub
lea
scas
mov
jnp
xor
scas
hlt
scas
leave
js
nop
mov
adc
mov
fisttps
xchg
xor
loop
stc
mov
dec
adc
rcrl
fildll
jecxz
lods
mov
js
mov
or
cwtl
movsb
xor
fwait
push
pop
addr16
nop
mov
fisttps
add
push
arpl
sub
hlt
inc
cmp
inc
ljmp
pop
imul
std
je
sti
nop
or
enter
mov
sub
mov
pushf
dec
js,pt
xchg
data16
xchg
cwtl
shrb
and
dec
push
loope
jp
insb
iret
sbb
test
nop
and
add
xchg
fidivrs
mov
mov
pop
data16
sbb
movsl
dec
adc
negl
fsubrl
mov
jne
les
or
insb
fadd
imul
pop
mov
inc
aad
shlb
adc
pop
popf
sub
enter
and
adc
les
scas
pop
lods
das
jno
push
cmp
xchg
imul
sbb
imul
lds
dec
lods
fwait
and
fimull
pop
sarb
push
mov
sbb
mov
cwtl
mov
sbb
lret
dec
push
mov
data16
addr16
pop
hlt
test
mov
stos
or
sbb
cs
jmp
lret
les
ret
lods
or
sti
xorl
mov
clc
pop
enter
std
frstor
stos
push
inc
fidivs
stc
test
popf
iret
cmp
cmp
stos
inc
jns
inc
jecxz
adc
std
daa
gs
mov
loop
fs
add
mov
jne
test
loope
push
xchg
aaa
repnz
dec
notb
mov
push
jne
pusha
out
pop
mov
bound
or
lods
js
mov
mov
ret
mov
mov
std
ds
push
jl
inc
inc
sub
rorb
mov
in
cmpsb
push
loopne
into
and
icebp
rol
xchg
idivl
insb
or
xor
adc
xor
jae
inc
psraw
lret
add
fidivs
xlat
xor
sbb
pop
xor
lcall
xchg
xchg
and
push
push
out
add
je
add
jmp
sbb
cwtl
mov
sub
fstl
imul
dec
lock
pop
jno
mov
fiadds
nop
xchg
pop
loope
inc
lret
cmc
in
and
mov
pop
jo
andb
dec
outsl
fbld
cmp
roll
push
mov
cmp
out
inc
int
or
scas
cs
in
adc
mov
mov
mov
jl
mov
cwtl
ret
jle
test
test
addl
jmp
mov
cmp
inc
jge
mov
xorw
dec
jne
sub
in
sbb
insb
sahf
adcl
roll
cld
cmp
dec
jge
jmp
daa
or
add
in
jle
mov
and
enter
pop
mov
xor
add
pop
jne
mov
jmp
fs
and
shrb
outsb
pop
pop
and
push
sub
xchg
hlt
stos
sarl
ficompl
hlt
lret
sbb
lods
fs
dec
test
js,pt
loope
mov
mov
mov
cltd
loop
add
cmp
xchg
xor
add
xlat
inc
enter
push
insl
mov
icebp
pop
icebp
ds
mov
dec
cwtl
mov
fmul
das
inc
sahf
mov
jmp
repz
rolb
iret
xchg
sbb
imul
cmp
xchg
out
mov
popa
fs
outsb
stos
or
jne
aaa
mov
in
fbstp
mov
sarb
stos
cmpb
cmp
jns
nop
sub
mov
scas
nop
mov
out
les
or
ret
mov
out
cmpsl
popa
test
or
push
aam
in
mov
cli
imul
ds
jb
cmpsb
pusha
fimull
mov
or
movb
jae
in
nop
adcl
dec
lods
xchg
shl
gs
cmp
bound
popa
jne
stc
mov
pop
and
fs
test
and
fdivrl
mov
mov
push
adc
cmp
dec
sub
push
lret
mov
jb
imul
cmp
add
sub
out
in
mov
imul
gs
loopne
xor
negl
jmp
fbld
lods
push
sarl
fld
sti
push
addr16
mov
xorb
mov
test
jp
in
lds
cltd
add
test
sub
mov
addr16
lcall
repz
xchg
mov
loope
add
xchg
aam
sbb
inc
stos
push
and
xor
gs
adc
adc
push
orb
xchg
push
es
popa
xor
ds
ret
jmp
adc
rcll
adc
arpl
pop
xor
scas
push
pop
dec
data16
out
out
mov
sub
fbld
cmp
add
loopne
sbb
xchg
bound
mov
je
inc
int
adc
and
fsts
jbe
or
stos
jecxz
add
pop
hlt
ret
ljmp
lods
outsb
in
xchg
mov
movb
popa
sub
mov
dec
push
dec
sub
inc
out
pushf
lret
dec
cmp
jecxz
fcmovnu
or
add
jno
mov
jmp
ret
es
in
pop
repnz
inc
popa
loopne
pop
xchg
lahf
repz
repnz
push
gs
test
mov
pop
negb
cmp
fcoml
daa
jle
ljmp
sub
jp
mov
pop
push
gs
outsl
js
and
test
cmp
jne
test
or
jg
in
jl
xor
cmc
xchg
mov
cmp
cmp
push
sbb
lret
jge
pop
cmp
dec
aas
xchg
and
es
imull
jecxz
push
inc
or
ds
scas
mov
out
movsl
sahf
sub
adc
sbb
mov
movsb
cwtl
push
jle
cs
cmp
sbb
je
cli
add
lea
xchg
fimuls
cmpsl
cmpsb
sbb
push
adc
loop
mov
cmp
andb
push
jecxz
push
jg
loope
cmp
cmp
mov
enter
sub
add
shl
jle
xorl
popa
or
rcr
mov
adc
mov
loope
cmpsl
shlb
mov
cld
mov
fsubr
loope
in
mov
cmpsb
xchg
movsl
in
xchg
cmpb
push
lods
sub
in
and
stos
or
cs
sub
xorb
pop
pop
js
stos
xchg
mov
ja
sub
push
xchg
jmp
push
dec
sahf
and
fstl
xlat
or
cmp
dec
sbb
mov
and
jnp,pt
dec
dec
jne
movsb
or
adc
mov
adc
out
inc
insl
push
pop
xor
xchg
add
in
cmp
arpl
imul
jb
adcl
hlt
repz
pop
sub
fidivrs
pusha
aad
push
out
xor
or
mov
mov
xor
mov
mov
pop
sarb
xor
adc
pop
addb
jns
add
int3
mov
rcrb
mov
mov
cmp
bound
mov
xor
rcrb
sti
cld
stos
cltd
adc
lret
sbb
dec
sub
ret
inc
fs
sub
push
in
adc
push
adc
jnp
push
into
cmp
repnz
mov
cmp
sub
mov
jno
push
or
aas
adc
xor
ror
sub
filds
bound
rolb
in
cmovne
in
fcomps
scas
sub
push
adc
pusha
outsb
or
ljmp
mov
xchg
lret
lret
sarb
and
lods
mov
leave
bnd
adc
or
outsb
fs
call
xchg
mov
jo
cmp
mov
xor
pop
out
mov
jne
and
dec
aas
cmc
popf
and
xchg
push
add
cmpb
adc
xor
rorl
and
ret
jnp
cs
pusha
or
dec
insb
jo
pop
fidivs
xor
fldt
xor
inc
dec
cltd
and
mov
adc
imul
mov
adc
shrb
mov
jl
mov
popf
outsl
mov
add
xorb
jecxz
sub
and
sbb
jno
mov
inc
xchg
sbb
xor
fnsave
sbb
inc
lret
mov
or
popf
clc
filds
insl
es
enter
insb
fisubrl
adc
push
jo
out
push
dec
xchg
out
lods
cmp
mov
inc
aad
adc
in
dec
movsb
leave
sbb
stos
jne
cld
jmp
nop
and
or
mov
mov
repz
movsl
loop
shr
stc
jmp
lret
xor
inc
es
dec
pushl
enter
sub
push
push
adc
lcall
push
loopne
adc
ficomps
mov
popf
sbb
sbb
icebp
ss
fnstenv
movsb
and
ror
adc
pop
mov
cmc
fdiv
js
add
sub
inc
pop
jo
jp
mov
les
or
ljmp
mov
scas
sti
xchg
mov
iret
push
push
sbb
mov
mov
or
nop
sub
in
into
push
xor
sbb
rcrl
outsl
jecxz
decl
inc
or
or
or
push
mov
inc
push
out
mov
jl
in
sar
lods
subl
leave
xchg
arpl
pop
add
call
inc
cmpsl
cmp
int
jecxz
sbb
aam
sbb
add
pushf
and
sarl
fnstenv
mov
xor
xor
mov
js
mov
mov
test
pop
cmp
inc
jecxz
outsb
mov
scas
loope
mov
movsb
cli
int
scas
aam
fdivr
jns
sub
mov
inc
in
jo
mov
pop
sub
lds
arpl
xor
mov
pop
fldenv
fwait
lahf
pushf
out
dec
lock
sbbb
sar
lods
pop
lods
xlat
push
jne
or
ficompl
dec
xor
cmp
inc
inc
dec
stos
cld
leave
mov
adc
xorl
or
loope
or
mov
mov
out
out
dec
sbb
xlat
xor
mov
xor
cmp
push
sub
jns
lea
cmp
xchg
arpl
fisubrs
fwait
and
cld
add
popa
pop
aad
mov
cltd
mov
sbb
jp
sbb
lods
cmp
mov
jp
add
cmp
pop
imul
or
jmp
and
mov
xchg
iret
add
call
mov
enter
lcall
cmp
mov
sbb
out
mov
shlb
cmpsl
jbe
sub
jb
mov
or
stc
add
cmp
mov
xor
leave
cmp
out
add
das
jne
sbb
sub
dec
addr16
ljmp
or
cwtl
sarb
jo
sub
pop
sahf
leave
jle
je
dec
shrl
sub
dec
dec
sbb
cmp
pop
and
mov
adc
sub
lret
nop
loop
xchg
mov
lock
decb
xor
sub
xor
dec
fwait
idiv
fcoms
movsl
loope
out
sbb
adc
mov
or
jne
push
call
fwait
add
adc
sbb
push
sub
and
push
xchg
roll
rclb
adc
out
outsl
mov
cs
sub
adcl
fsubr
out
mov
jp
jne
xlat
jo
fildll
mov
add
xchg
cmp
std
movsb
jns
cmp
adc
cmpsb
xchg
int
jns
cli
dec
sbb
insb
jl
sub
xchg
popa
mov
dec
repz
pop
stos
dec
and
mov
ljmp
jle
pushf
cwtl
sub
inc
jl
insl
lds
dec
jl
das
daa
clc
xor
push
sti
xchg
push
mov
xor
inc
loope
jmp
or
inc
lock
cmp
or
insl
push
xor
insb
mov
mov
ds
test
ja
testb
xchg
inc
repnz
jb
adc
push
cmp
pop
jno
pushl
mov
push
aaa
push
in
mov
or
ds
testb
push
xor
push
dec
insb
xchg
jb
cmp
data16
sbb
sub
das
inc
bound
add
sbb
pop
add
in
nop
xlat
or
add
lret
loopne
cs
icebp
filds
lds
hlt
cltd
push
push
mov
rcl
insl
mov
es
push
in
inc
pop
dec
cmc
arpl
jg
rol
loope
mov
loop
cmpsb
fldcw
leave
sub
fisubl
test
pop
lods
inc
test
mov
lods
inc
sbb
xchg
repnz
cmpsb
cmpsb
mov
sbb
jmp
pop
mov
xchg
cli
pop
into
int
js
mov
cmpsb
ljmp
pop
and
push
jg
or
push
adc
push
sbb
in
mov
add
fdivrs
sarb
stc
cli
loopne
rol
cs
mov
out
scas
inc
inc
clc
and
adc
shll
xor
shrl
sahf
sti
pop
dec
mov
mov
jne
adc
sbb
dec
jmp
dec
xor
cmpsb
push
xorl
mov
xchg
lret
push
test
imulb
in
jns
fwait
jecxz
sbb
dec
or
pop
xchg
movsb
iret
sbb
dec
fnstsw
dec
mov
arpl
xor
in
pop
add
dec
mov
pusha
gs
dec
stos
sub
loop
sbb
je
int
stos
out
add
mov
pop
cmpsl
mov
xor
pushf
in
jnp
pop
dec
xchg
les
enter
scas
inc
ja
pop
xor
pop
and
bnd
lds
bound
xor
pop
cwtl
mov
gs
das
insb
jno
dec
lds
setno
cwtl
sbb
xchg
xor
popf
inc
mov
mov
inc
pop
mov
lock
daa
cmc
std
lock
sub
loope
std
mov
pop
jge
xchg
pop
jle
call
and
mov
mov
in
sub
sub
and
sahf
imul
lret
push
and
loopne
push
dec
push
mov
iret
and
cmp
xor
in
fsubr
sbb
inc
add
push
into
lock
mov
pop
insl
arpl
add
pop
cmpsl
aam
lea
sbb
mov
dec
sub
jg
sarl
pop
mov
jge
adc
pop
add
leave
imul
clc
jmp
fisubl
sub
dec
mov
adc
mov
out
int3
aad
or
shrb
scas
into
movsb
add
add
pop
daa
cmp
movsl
enter
movsb
sbb
das
ficoml
add
call
xchg
and
fwait
cmp
and
xchg
xlat
addr16
int3
cmp
test
xchg
xor
cmp
jg
sub
mov
xlat
mov
mov
insb
ds
cmp
jl
int
xchg
ljmp
rorl
mov
in
and
sub
adc
push
cmp
pop
gs
pop
cld
push
dec
imul
mov
pop
out
adc
cmp
stos
jne
fcoml
dec
sbb
and
jnp
repnz
out
and
out
jp
and
fwait
mov
les
popa
dec
addb
es
jge
fsubs
loopne
mov
add
leave
add
mov
test
enter
add
dec
mov
push
jae
inc
adc
dec
xor
jmp
cwtl
fwait
nop
jecxz
mov
push
outsb
fildl
inc
repnz
cmp
push
or
adc
cmp
push
test
cltd
lods
arpl
inc
mov
sarb
adc
stc
cltd
cmpsb
fldt
mov
mov
or
mov
or
out
rcrl
sub
cltd
test
clc
shr
je
jo
mov
mov
jmp
mov
test
ficomps
dec
and
call
imul
insb
xchg
out
pop
std
scas
mov
jp
fs
inc
gs
push
lret
pop
daa
jp
faddl
popa
cmp
cwtl
std
pop
cmp
mov
and
pop
test
loopne
lods
sub
mov
lea
imul
push
out
fsubl
sbb
add
out
test
and
test
pushf
cmp
fdivp
xor
add
adc
adcb
cmpsb
lods
inc
jnp
popa
pop
push
jae
leave
mov
jnp
outsb
insl
xchg
inc
or
xchg
leave
popf
ljmp
mov
cmp
sahf
sbbl
ret
pop
xchg
push
sbb
mov
mov
pop
mov
xchg
daa
pusha
les
dec
ret
mov
dec
cli
or
cmpsb
sbb
leave
loop
dec
imul
pop
fpatan
push
mov
jbe
fidivl
movsl
insl
test
jae
fcomip
sub
push
pop
hlt
sarl
xor
push
in
dec
jp
mov
adc
rcll
insb
jmp
add
cmc
cmp
push
sti
adc
sub
test
jg
and
mov
inc
imul
cld
push
fucomp
push
or
add
dec
push
sub
mov
xor
adc
cmp
add
dec
lods
inc
add
pop
adc
leave
stos
jo
sub
and
sarl
imul
xlat
fwait
loop
and
or
and
aaa
sub
push
lods
jo
cli
mov
ljmp
mov
mov
mov
sub
xor
shll
add
fwait
push
out
adc
mov
fcoml
inc
clc
or
sbb
divl
push
push
mov
mov
out
xchg
push
pop
ss
sub
gs
js
xchg
fimull
or
mov
out
popf
mov
ficoms
repnz
mov
sub
sbb
and
xor
cld
jp
ja
or
adc
mov
iret
adc
xchg
pop
lahf
lcall
inc
orl
in
sub
out
leave
ret
into
mov
sub
gs
and
repz
popa
push
fidivrl
fwait
and
mov
mov
mov
stc
mov
push
cmp
mov
xchg
push
jbe
adc
jno
addr16
mov
aas
mov
out
movsb
push
adc
push
jno
sbb
mov
movb
pop
test
pop
sbb
mov
adc
sub
test
xchg
mov
xorl
fisubrs
iret
cmpsl
jl
mov
cmc
aad
jp
ja
in
and
leave
fwait
push
sbb
adc
xchg
in
and
cltd
inc
cltd
adc
fdivl
iret
sbb
addr16
jmp
sbb
or
int3
out
outsl
mov
mov
pminub
or
adc
pusha
adc
dec
rorb
fidivrl
sbb
sbb
dec
cs
sub
cmp
rcrb
jnp
out
pop
into
xchg
push
cmp
or
jle
icebp
nop
xchg
int
or
pop
ror
in
inc
sbb
pop
sbb
dec
jno
lret
cmp
hlt
test
jb
imul
shlb
add
push
fstps
cmp
popa
mov
xchg
cmc
dec
gs
pop
scas
pop
ret
sub
cmp
ja
xor
daa
xorl
adc
cmp
xchg
xor
mov
sbb
sti
popf
mov
dec
into
rorb
sub
dec
adc
das
gs
cmc
pop
mov
cmp
pop
js
xchg
outsb
mov
fmuls
xchg
pop
decb
arpl
pushf
mov
xor
das
pop
sbb
fs
xchg
fwait
pop
xor
aaa
mov
xchg
or
movsl
les
mov
push
add
into
in
mov
ja
clc
in
mov
xorb
add
inc
test
mov
jns
mov
cmp
xchg
shlb
lods
in
adc
xor
cmp
out
jp
inc
nop
mov
mov
dec
add
push
jbe
add
mov
mov
mov
mov
js
into
out
jns
sbb
in
je
and
mov
dec
stos
ret
test
sti
sub
dec
out
fildl
push
push
dec
or
mov
jbe
xorl
int3
lods
pop
subb
popf
test
or
jmp
xchg
ja
mov
or
adc
mov
mov
lahf
or
push
fnstcw
adc
xor
pusha
sub
push
fs
into
mov
jb
xor
gs
ja
push
fnstenv
fistpl
mov
jo
mov
mov
xchg
iret
ret
gs
loope
or
test
sarb
shll
cmpsb
push
jecxz
cmp
into
sub
lods
mov
lods
ret
jle
sbb
stos
cmpsb
mov
mov
adc
sti
pop
pop
mov
cmpsb
or
pushf
pop
mov
sub
mov
inc
jle
dec
cli
pop
adc
hlt
lds
fcompp
lds
and
mov
arpl
es
iret
pushf
dec
push
outsl
ret
cmp
test
gs
int3
dec
and
call
or
out
push
xchg
fdivs
out
jb
inc
in
sbb
hlt
lahf
xor
pusha
clc
xor
faddl
cltd
push
sbb
mov
arpl
lret
test
sbb
add
mov
and
xorb
mov
fmuls
iret
mov
and
and
aad
push
cmp
in
cs
sub
test
cmpl
movsl
jno
ja
adc
stc
sub
sbb
adc
imulb
dec
lret
mov
test
out
bound
dec
jne
inc
xor
and
out
movsb
das
inc
addr16
xchg
arpl
out
xor
adc
push
inc
jb
mov
adc
in
cltd
ret
out
xchg
xchg
push
sbb
xchg
cmc
out
out
cmp
int
jl
pop
dec
cmp
pop
std
scas
mov
out
cmp
aad
mov
imul
pop
jecxz
push
lds
adc
in
lret
sub
int3
pop
iret
sbb
cmc
ret
sbb
not
push
loopne
pop
sub
out
ljmp
push
jmp
sub
cltd
fcom
mov
bound
jb
jp
fistpll
lock
and
es
push
stc
lret
js
cmpsb
xchg
test
daa
sbb
add
sbb
shlb
sti
aaa
es
and
ficompl
mov
mov
clc
mov
hlt
mov
xchg
dec
aad
mov
repnz
insl
mov
add
test
je
jne
js
or
ljmp
mov
cld
out
mov
mov
xchg
cld
ret
pusha
gs
cmpl
xor
mov
mov
rorl
pop
stc
xchg
or
jns
push
add
cld
inc
fnstcw
sub
push
cmpsb
dec
and
sub
push
sub
andb
sti
xorl
lahf
push
ret
mov
add
lcall
imul
sub
clc
lahf
sub
sub
sub
neg
imul
dec
out
cmp
mov
cs
inc
inc
xchg
cmp
pop
ret
xor
sub
and
sbb
jbe
outsl
mov
xor
addl
lahf
lcall
lods
les
cld
dec
rcrl
mov
dec
pop
addr16
mov
push
mov
lea
sbb
les
or
mov
scas
pusha
test
cmc
lods
inc
gs
aad
mov
sbb
adc
xor
and
inc
pop
mov
sbb
lds
mov
jnp
fidivl
jno
xor
xchg
xchg
sub
inc
lods
ret
inc
cmp
fcoml
jns
xchg
bound
movsl
movsb
xchg
inc
push
fsubrl
lods
xchg
bound
pop
mov
inc
les
andl
inc
mov
sub
pop
lea
out
cmpsl
inc
mov
shll
or
xor
fadds
pop
dec
push
dec
std
cwtl
fcoms
subb
fsts
mulb
scas
pop
leave
fistpll
in
out
jbe
lcall
pop
lds
in
jne
out
bound
arpl
xlat
rorl
aaa
repz
pop
sub
jno
jle
add
repnz
inc
jecxz
mov
cmpsb
mov
inc
stc
loop
push
inc
lahf
loopne
pop
xchg
mov
lea
fldt
pop
xchg
xor
push
cld
adcb
jmp
pop
jg
scas
syscall
mov
adc
xor
lret
sbb
fisttpll
int3
js
leave
in
sahf
xchg
jp
subb
pop
mov
sub
mov
mov
notl
fcomps
sbb
int3
push
sub
pop
jbe
jb
mov
or
faddl
ret
xchg
fdivrl
lds
cli
sub
pop
mov
and
jge
jo
fldenv
sbb
sbb
add
mov
cmp
shll
fwait
test
or
jl
fbld
jle
rcr
mov
or
jae
movsl
inc
test
inc
aas
sti
dec
aaa
add
mov
mov
clc
inc
fs
or
mov
orb
push
cmp
inc
outsb
mov
dec
and
mov
bound
push
jae
mov
dec
call
mov
inc
sub
test
in
jne
dec
es
int3
push
mov
inc
roll
jbe
inc
mov
es
fdivrs
scas
test
cmp
sub
cmpsb
xchg
adc
mov
sbb
dec
inc
fisttpl
jae
jl
cmpsb
ret
into
sbb
ret
xchg
jmp
int
push
test
js
inc
xchg
or
jns
fwait
imul
cmp
fidivl
lcall
cmp
or
mov
cmp
clc
xchg
xor
sub
aam
jmp
cld
add
lock
fisubrl
in
inc
xor
ds
movsl
pop
xchg
cmp
dec
inc
mov
fdivrl
cld
fildl
addr16
into
jp
jl
fcoml
call
mov
lret
pop
daa
or
dec
shrb
rolb
sahf
mov
in
in
je
jg
jnp
jno
or
sbb
pop
and
aam
scas
pop
lcall
lods
cld
jmp
jle
xchg
jl
les
call
test
inc
jg
sub
iret
jg
insb
test
sub
outsb
test
cmp
test
imul
scas
pusha
mov
aam
lcall
jmp
inc
dec
or
mov
fs
iret
in
jg
bound
test
lahf
and
imul
xor
aad
mov
mov
and
dec
and
pop
call
cmp
mov
jo
mov
mov
movsb
clc
cmpsb
push
xor
pop
sbb
xlat
ds
lods
dec
fwait
or
iret
jecxz
push
fmull
rorb
push
mov
sbb
hlt
pop
and
scas
stc
popf
mov
or
dec
notl
dec
aam
xchg
shlb
inc
repnz
cmp
mov
inc
mov
push
adc
mov
or
fs
lcall
fwait
mov
mov
cmp
or
sbb
lds
out
mov
mov
sti
js
fs
imul
mov
out
adc
ret
jnp
mov
inc
add
or
insb
sub
adc
xchg
inc
pop
dec
cli
orb
sahf
lcall
shrd
out
mov
repz
and
roll
cmp
xchg
sbb
lea
scas
xchg
test
push
jns
and
pop
stc
sbb
test
ror
sti
rcl
popf
shll
push
mov
or
jno
fnstsw
or
xor
roll
xor
rcll
scas
or
inc
wrmsr
inc
adc
out
sbb
fists
push
lea
dec
mov
bound
dec
mov
sahf
repnz
and
insb
lods
and
in
push
sub
and
sarl
je
into
xor
xchg
out
mov
movsl
or
shl
ljmp
popf
aaa
popf
std
sub
jle
and
test
cli
add
mov
into
lahf
pop
inc
lods
sub
orl
sub
mov
jg
pop
movsb
xchg
outsl
in
cmc
push
cmpl
iret
xor
cmp
leave
and
lea
fisttps
leave
loopne
cmp
icebp
inc
add
adc
cmp
ficoml
pop
cmp
jp
dec
or
fsubs
loope
aad
inc
test
iret
test
jbe
adc
or
inc
scas
imul
xchg
test
clc
mov
mov
mov
push
clc
sub
aad
pop
or
and
xor
insw
int3
push
add
and
mov
dec
pusha
dec
pop
fwait
inc
iret
jl
adc
out
inc
sbb
push
ret
xchg
movsl
outsb
sti
xchg
test
aad
stc
mov
dec
sbb
mov
mov
shrl
arpl
cmp
aam
mov
lret
je
pop
mov
mov
jbe
lds
xchg
sbb
or
push
adc
sub
xchg
push
icebp
sub
or
sbbb
xchg
cmp
mov
jb
pop
dec
shlb
testb
movsl
push
push
xor
jbe
insl
movsb
lock
loope
lahf
mov
or
inc
ss
in
add
inc
lea
repz
jmp
add
fs
and
mov
std
cmovge
push
mov
xchg
sbb
cs
sbb
cmpsl
mov
test
lock
minps
cvtps2pi
pop
jb
pop
xchg
xor
movsl
sbb
jbe
scas
jmp
jns
incl
outsb
and
iret
outsl
sahf
inc
loop
in
sarb
sarb
push
ja
iret
jecxz
test
add
in
roll
ret
push
jnp
sbb
fnstsw
and
out
mov
frstor
call
xchg
loop
fdivl
sahf
lea
and
cmp
xor
xor
call
int
adcb
sub
out
pop
inc
adc
out
test
xor
aad
aaa
outsb
outsb
inc
mov
xchg
adc
out
add
lods
sbb
xchg
push
dec
pop
sub
and
rcrl
push
insl
mov
push
inc
insb
xchg
jl
dec
cwtl
mov
nop
xchg
inc
fldl
scas
loopne
and
xchg
jmp
lods
push
fiaddl
mov
test
push
mov
mov
add
pop
inc
push
adc
cmp
sbb
adc
mov
push
and
mov
xchg
in
or
icebp
inc
test
addl
add
mov
fisubl
mov
addr16
in
jg
stos
loope
add
mov
xchg
je
rcll
cs
xchg
jecxz
je
pop
leave
test
std
out
mov
mov
pop
or
sbb
mov
xor
pop
xor
out
add
adc
test
sahf
jb
lcall
cmp
cmc
cmp
cld
loope
adc
adc
xor
rcr
mov
sbb
test
rclb
std
call
mov
movsl
and
shll
clc
movsl
jne
pop
setne
enter
sbb
lret
adc
dec
cmp
sti
testb
jnp
outsl
gs
icebp
ljmp
fs
and
jae
sub
jbe
andb
pop
std
add
jne
bswap
xchg
pop
dec
pop
adc
loop
hlt
mov
in
inc
lods
nop
enter
cmp
aaa
or
insl
xor
dec
je
stos
inc
or
les
and
mov
pop
movsl
add
repz
pusha
mov
and
xor
stos
aam
test
pushl
xor
sbb
cmp
jo
mov
inc
fwait
mov
aas
cmp
data16
bound
mov
inc
jmp
bound
lret
cs
dec
addb
cmp
mov
mov
pop
inc
ret
popf
aam
mov
clc
outsb
pop
outsb
testl
ficoml
xchg
sti
adcl
scas
xchg
adc
or
pop
movb
jge
loop
xlat
sub
mov
pop
cmpsb
cmp
mov
or
aaa
mov
xchg
xor
hlt
inc
orb
xchg
jb
inc
pop
mov
sub
mov
fdivl
or
addr16
adc
sbb
movsb
outsl
or
sub
movsl
dec
arpl
mov
inc
cmp
test
cld
mov
pop
out
cmpsb
ficomps
dec
dec
je
pusha
hlt
dec
out
loope
jg
movsl
lods
icebp
sub
mov
notl
nop
insl
lret
mov
mov
xor
stos
popa
pushf
popfw
int
sub
sar
xor
daa
fucomip
in
jne
adc
es
fwait
add
out
mov
push
lea
sub
mov
cmp
stos
xor
sbb
xchg
test
fcomp
mov
imul
fstl
pop
dec
int3
loop
popf
or
xor
jle
push
ficompl
negb
in
gs
xchg
mov
cmpsb
xchg
lea
pop
fdivrs
mov
jbe
xchg
hlt
popf
xlat
push
dec
ss
pop
sbb
mov
movsl
add
inc
add
cmpsl
inc
pusha
jecxz
insb
enter
xor
add
sahf
data16
push
divb
sti
jge
lret
test
in
and
sti
mov
test
call
stos
sbb
mov
jbe
cmpsl
ljmp
add
pop
fildll
cld
in
js
cmp
shll
sbb
mov
push
outsl
lahf
shrb
nop
cmp
fdivrp
jbe
lret
std
sahf
push
mov
cltd
adc
sbb
xchg
xor
sbb
xchg
jge
ja
shlb
lret
bound
bound
lret
data16
aas
mov
gs
mov
cmp
cwtl
addr16
jmp
aaa
jp
push
leave
ljmp
xor
ljmp
cmpsb
sbb
nop
aad
jmp
andb
dec
pusha
and
loopne
cwtl
in
cwtl
xlat
daa
mov
mov
repz
cs
mov
add
test
decl
add
or
mov
int
or
outsb
cmp
mov
add
shl
sub
add
cmp
xor
jge
mov
ds
push
aas
mov
ss
inc
test
adc
testb
icebp
ret
movsl
xchg
pop
sbb
rorb
xchg
sub
stc
ja
push
shll
xchg
addl
or
clc
mov
cmpsl
adc
daa
inc
test
and
cmp
imul
jmp
sti
pushf
mov
dec
repnz
mov
imul
cmp
fcoml
imul
jne
bound
cmp
les
shl
mov
ret
or
xor
loop
pusha
sbb
jo
cwtl
push
iret
addr16
or
popf
imul
sub
mov
outsl
ljmp
aas
add
aaa
push
adc
sbb
pop
outsl
sbb
pop
cmp
mov
fsubr
mov
or
pop
das
pop
fiadds
arpl
fsubl
jns
and
mov
lret
push
xor
cwtd
leave
or
mov
mov
xchg
or
dec
dec
enter
pop
repz
or
add
xor
pop
dec
mov
lcall
push
je
sbbl
divl
xchg
pop
bound
xor
movsb
test
pop
movsl
mov
push
xchg
pxor
fnstsw
mov
stos
jne
pop
pop
pushl
xlat
mov
sbb
jno
loopne
sbb
jge
ficoms
and
jo
jp
inc
mov
das
fiaddl
ror
jg
pop
pop
lods
setns
pop
cs
jl
add
dec
lcall
or
cld
mov
pusha
jne
pushf
les
test
lock
push
popf
mov
dec
ja
xchg
lods
cmp
add
into
dec
mov
jb
push
jl
fldenv
and
out
loopne
lods
or
jl
daa
xor
pop
jns
sarl
pushf
push
fcmovb
andl
pop
add
pop
insl
popf
movsb
jp
sbb
sbb
orb
fs
inc
sti
lods
stos
pop
cltd
pop
pop
fnstcw
stos
ljmp
push
xchg
xor
mov
dec
cwtl
lahf
shll
stos
sti
aam
inc
dec
aad
fstpl
sti
roll
in
lahf
imul
les
inc
push
scas
loop
lea
popa
inc
mov
sbb
movsb
ljmp
stos
mov
push
mov
inc
arpl
fcompl
iret
and
mov
fistpll
in
inc
inc
das
das
mov
lods
push
int
xchg
mov
andb
pop
js
xchg
push
push
subb
mov
push
lret
mov
ss
cld
jnp
faddl
jne
nop
rcl
ds
mov
cmp
popf
and
dec
xor
push
std
mov
mov
pop
and
mov
xchg
adc
xor
js
es
push
xor
or
push
cmp
push
pop
mov
int
mov
popa
cmc
pop
xchg
mov
call
cwtl
mov
incb
mov
lods
jns
into
push
cmp
adc
in
mov
mov
das
cmpsb
loopne
push
sahf
adc
lea
xchg
push
scas
mov
add
jb
or
jmp
xor
shlb
jle
rclb
in
rolb
xchg
loopne
lret
mov
cmp
aam
inc
fs
imul
divb
jno
xlat
inc
push
out
ficoms
sub
cmp
sbb
push
xchg
cli
jae
cmp
sub
sub
mov
jns
push
popa
add
lahf
loope
mov
pop
mov
inc
push
push
pop
test
dec
pop
dec
es
fs
adc
movsb
repz
push
adc
add
mov
nop
lcall
sbb
es
subl
ror
xchg
negl
mov
mov
ror
xor
pop
jg
scas
pop
sbb
push
test
mov
mov
mov
xor
scas
shrl
mov
inc
dec
in
cwtl
xor
push
or
dec
inc
inc
out
ljmp
push
push
mov
nop
fldt
pop
mov
repnz
cmpsl
lock
mov
stos
icebp
jp
shrb
dec
jb
jp
jns
mov
push
fldcw
jecxz
aam
cltd
xor
andl
loope
popf
arpl
cmc
movsb
int
lds
lret
sub
pop
roll
sub
or
xchg
cli
xchg
es
pop
cmp
push
data16
jp
xchg
sahf
popa
shl
int3
gs
add
mov
fmull
jecxz
cltd
mov
mov
mov
out
sub
iret
rcl
cmp
adc
aas
mov
insb
jmp
push
mov
jbe
push
add
sahf
sti
pop
add
push
ret
es
add
pop
inc
xchg
mov
jb
lcall
lret
outsl
jge
sub
xor
add
fdivrs
hlt
mov
ja
mov
lcall
sbb
popa
sahf
les
pop
cmp
gs
jno
pop
aad
ja
ret
mov
add
push
divl
dec
mov
arpl
mov
mov
sub
jle
sbb
xchg
lret
mov
xor
jmp
stos
adc
mov
sarb
call
mov
ror
les
idivl
sub
enterw
test
in
popa
jno
in
loopne
sarl
lret
xchg
std
fsubrp
jmp
dec
push
sub
push
or
sbb
pop
adc
and
in
test
adc
mov
loop
inc
fisubs
sahf
push
lods
or
ret
xchg
mov
out
mov
dec
in
jno
or
jne
fidivl
fistl
rorb
and
cli
out
jp
loopne
cs
scas
std
and
mov
sub
mov
sbb
sub
in
or
adc
cmpsb
mov
pop
jo
daa
loopne
cmp
mov
inc
fstpl
fwait
test
mov
push
test
out
fistps
bound
ret
push
xchg
jp
pusha
mov
test
aam
pop
inc
mov
mov
dec
fistpll
adc
mov
lock
pop
and
jge
dec
inc
daa
aad
testl
in
movsb
pop
dec
xchg
mov
jp
and
pop
and
push
rcll
jne
inc
ljmp
sbb
lock
fiadds
pop
and
repnz
mov
mov
adc
rorb
into
mov
mov
mov
ret
mov
xor
ret
adc
mov
cmp
loop
cs
outsb
ja
cmp
es
inc
cmp
je
jp
loopne
fstl
jne
sub
mov
pushf
inc
ds
leave
mov
movsl
jmp
jge
or
insl
iret
adc
add
add
xchg
inc
dec
pop
push
out
cmp
testl
sbb
xchg
xor
scas
aad
fwait
inc
add
sbb
pop
mov
ret
scas
fistl
stc
mov
jle
sub
cmp
pop
dec
jns
adc
into
popf
and
xor
xlat
jne
iret
xchg
loope
jne
push
ljmp
adc
push
xchg
frstor
jmp
mov
stc
jecxz
add
push
add
imul
push
in
cmpsb
add
xor
pop
push
pop
jbe
mov
inc
mov
sub
lds
and
add
mov
dec
xor
es
xchg
pop
mov
xor
les
sarl
shrb
test
imul
pop
clc
enter
inc
inc
lret
fdivrl
test
mov
repnz
jo
mov
add
or
mov
mov
test
dec
fmull
mov
imul
cwtl
or
inc
ret
dec
or
xchg
das
push
lock
bound
hlt
and
arpl
lea
int
xlat
inc
repz
stos
std
cmp
inc
lea
dec
bound
fcmovu
jecxz
mov
dec
inc
sarl
sbb
pop
jae
add
mov
enter
ljmp
and
shr
shll
adc
cmp
shlb
pop
inc
mov
insb
push
pusha
push
fisubs
sti
mov
adc
dec
cmc
pop
push
test
test
push
loopne
lahf
mov
outsb
loope
xchg
pop
pushf
mov
rcrb
adc
cmp
out
imull
dec
in
test
inc
cmp
enter
pusha
pop
test
inc
sbb
mov
sbb
ret
faddl
divb
inc
adc
mov
adc
mov
add
in
push
inc
movsl
rcll
sub
pop
cmp
out
jae
cmp
mov
mov
mov
addb
adc
adc
inc
data16
push
in
push
or
fnsave
push
pop
or
and
ljmp
in
aad
sub
adc
aam
aas
dec
lahf
and
mov
xchg
lods
ficoms
inc
rorb
rcrb
mov
inc
jnp
mov
inc
insl
sarl
gs
adc
mov
ljmp
movb
adc
mov
out
sbb
je
fdiv
and
cmc
pushl
or
jnp
add
push
arpl
cmp
push
fbstp
ds
mov
test
inc
adc
pushf
xchg
mov
pop
mov
sbb
inc
dec
mov
mov
fiaddl
or
xlat
jecxz
adc
mov
lods
mov
jnp
lret
jecxz
xor
fcomps
add
loopne
xchg
mov
jmp
mov
pop
pop
pop
out
rcrb
and
xor
mov
add
push
ror
lea
mov
fmulp
adc
rclb
sti
sbb
xchg
sahf
sub
enter
add
pop
scas
andl
fnsetpm(287
xorl
pop
imulb
push
jne
cmp
mov
fstpt
into
xor
jl
dec
dec
pop
dec
sub
and
out
dec
lock
test
mov
push
mov
jae
mov
dec
xor
icebp
idivl
stc
push
pop
push
inc
out
push
cwtl
add
enter
mov
ds
cmpsl
adc
aam
or
fs
push
nop
xor
ret
adc
jge
int3
push
pushf
inc
xor
movsb
push
add
nop
pop
xlat
rclb
inc
inc
push
adc
cmp
pop
fstps
and
or
dec
mov
fdivs
clc
mov
test
lock
xor
dec
xor
xchg
ss
sti
push
adc
adc
or
sbbl
jae
inc
imul
pushf
dec
xor
addr16
jge
das
stos
pop
mov
cltd
add
sub
xor
dec
cmpb
arpl
push
mov
dec
xchg
ds
xor
push
xor
jbe
jl
xor
pop
lds
adc
jg
ljmp
faddl
jg
outsb
call
dec
xchg
xchg
cwtl
shll
mov
cmp
push
cmp
addr16
shlb
rorl
clc
out
push
mov
ret
pop
cltd
pop
stos
pop
mov
xlat
out
loopne
pop
rol
clc
jl
push
sub
cwtl
sti
in
dec
movsl
cmp
insl
test
fwait
pop
aaa
push
rcrb
lods
dec
xchg
mov
adc
cld
das
clc
out
lds
imul
mov
testb
xchg
popw
mov
mov
xchg
push
sarb
lret
pop
jp
out
enter
loop
divb
push
lret
jp
xchg
or
dec
push
cmp
call
dec
mov
aam
sub
and
lahf
hlt
in
hlt
jmp
and
in
test
lahf
or
out
dec
fmulp
idivl
ljmp
scas
xorl
mov
inc
daa
fiaddl
shrb
mov
les
xor
jmp
mov
mov
sbb
xor
dec
push
orl
lods
lods
mov
cmp
shrl
mov
jg
cmp
mov
sbb
push
movsb
xor
mov
rclb
push
push
pop
push
in
movsb
sahf
out
popa
cmpsl
mov
mov
mov
insb
dec
jmp
adc
mov
lcall
cmpsl
jno
movsb
pop
xchg
xchg
adc
dec
or
ss
fsts
xchg
mov
push
mov
idivl
mov
adc
or
xor
xchg
jns
push
sub
xchg
sbb
mov
cltd
dec
xor
cmp
addr16
rol
dec
fldenv
xchg
ljmp
dec
cmp
xor
add
adc
pusha
push
pextrw
daa
or
add
jge
out
ret
push
psrlw
and
mov
jge
sti
mov
xchg
int
int
aas
je
inc
stc
outsl
mov
xor
leave
leave
lret
cmp
mov
or
sbb
outsl
mov
push
in
push
out
cmp
das
call
scas
xchg
mov
sbbb
das
insl
dec
rcll
fidivrl
loop
cs
sub
jp
mov
sbb
mov
adc
ljmp
test
sarl
xor
imul
and
fwait
repz
pop
mov
jp
lcall
popf
xor
push
sbb
cli
mov
dec
clc
push
into
and
push
pop
das
inc
cmp
movsb
iret
dec
movsl
push
sbb
clc
xchg
cmpsb
sbb
out
push
xor
fsubrl
icebp
jno
jmp
adc
sbb
pop
fprem
cltd
sbb
shlb
fdivrp
sbb
outsl
fisttpll
pop
sbb
sahf
stc
mov
fadds
fsubl
add
xchg
pop
lods
mov
ret
paddsb
std
jno
cli
xor
idivl
lock
inc
jo
and
data16
data16
iret
lcall
dec
cli
sbb
dec
mov
imul
add
mov
arpl
xchg
fidivrl
mov
cmp
popa
ja
xchg
inc
jle
pop
dec
cmp
xchg
cltd
sahf
dec
scas
lock
hlt
dec
subl
loop
jle
dec
je
addr16
stos
fists
out
imull
add
mov
and
cmc
test
nop
mov
test
dec
fdivs
mov
mov
dec
and
testl
std
add
jecxz
and
clc
and
mov
pop
imul
push
ja
cmp
fsubr
adc
dec
or
and
daa
mov
xor
aas
dec
dec
in
pusha
nop
cli
in
push
push
push
inc
jle
push
cltd
sbb
rolb
adc
out
scas
mov
jle
test
ficoml
lock
mov
add
dec
mov
pop
mov
aad
lret
stc
addl
mov
insl
inc
mov
add
adc
jle
aaa
dec
incb
aam
xor
rorb
jmp
jmp
or
or
xor
fnstsw
cmc
sub
fists
js
loope
jae
inc
xchg
mov
daa
jg
cmp
addr16
pop
mov
lcall
jns
cltd
mov
and
fmul
lret
mulb
adc
stos
adc
jne
loopne
cmpsb
jmp
mov
mov
int
push
mov
and
bound
mov
sub
aaa
adc
test
jbe
push
push
jne
and
mov
ret
lcall
xor
out
xor
mov
outsl
sar
add
aas
inc
lahf
cmp
cmpsl
in
stos
push
push
mov
mov
inc
inc
data16
sahf
lret
xchg
aam
seto
shlb
sbb
xor
fistps
loop
mov
sbb
jno
jg
mov
xor
call
fisttpll
sub
sbb
adc
sub
xchg
sti
jmp
mov
cmp
dec
insb
xchg
into
jle
test
cmpsl
push
cmpsl
mov
and
mov
cli
adcb
or
js
outsl
xor
mov
fisubl
pop
xor
stos
popa
jo
arpl
pop
sub
jbe
cmp
xchg
dec
sub
sbb
cmpsb
mov
loop
adcb
ret
dec
lock
and
ja
lcall
jno
int3
jmp
mov
sub
dec
jl
xor
push
xchg
push
dec
pop
sub
or
gs
mov
inc
inc
add
push
adc
fs
movsb
jl
in
lret
in
jecxz
cltd
fnstenv
xor
pop
adc
push
jecxz
mov
idivl
jae
out
cmp
and
push
inc
mov
jne
fistpl
stc
or
mov
stos
push
jge
push
sbb
ds
repz
jae
icebp
stc
fwait
mov
popf
jmp
daa
arpl
inc
cwtl
push
or
mov
out
adc
jl
addps
lods
lds
mov
jnp
sub
adc
inc
les
adc
ja
das
out
xlat
mov
cmpsb
fistps
add
stos
lods
lds
sahf
xor
fwait
pop
lock
push
das
dec
aam
jae
adc
pop
jbe
fwait
pop
cmp
mov
and
push
add
pushl
push
scas
mov
xchg
sbb
sbb
push
cmp
cwtl
inc
push
int
repnz
and
mov
dec
int3
or
jb
mov
in
fwait
in
inc
xchg
sub
jecxz
pop
push
sti
movsb
test
push
inc
push
or
add
and
bnd
data16
sbb
ret
adc
push
pop
sahf
xchg
cmp
push
jnp
push
stos
mov
test
xchg
xchg
loope
andl
bound
out
packuswb
mov
lahf
fsubs
pop
ret
add
ficompl
flds
cmp
adc
push
and
mov
pop
xor
sub
and
jp,pt
lock
movsl
mov
jg
nop
bswap
or
sub
data16
testb
stos
ret
flds
shlb
notb
xor
mov
scas
daa
fistps
inc
mov
jp
rcl
jbe
jecxz
inc
push
stos
fisubrs
xchg
mov
dec
arpl
inc
mov
mov
hlt
ret
lock
cltd
cmpsb
stos
jmp
out
movsl
push
xchg
shrb
jge
cmpsb
add
movsb
mov
add
mov
dec
xchg
pop
mov
iret
test
fstps
and
jmp
inc
int
cltd
mov
shrb
and
mov
jns
jno
xchg
test
jl
lea
call
popl
mov
dec
repz
xor
enter
in
inc
jg
cmpsb
dec
idivl
push
nop
mov
fmull
jo
xchg
scas
pushf
cmp
mov
enter
icebp
jnp
sbbl
ds
xor
test
push
sti
add
cmp
or
sbb
dec
sbb
mov
fdivrl
or
push
xlat
mov
xchg
cmp
mov
jb
pop
jge
mov
imul
push
push
jmp
rolb
pusha
jle
inc
add
pop
fsts
cmp
call
lahf
arpl
rorl
and
sahf
cmp
out
loopne
pop
and
mov
and
out
pop
xchg
scas
popa
xor
cs
sarb
idivb
fidivl
mov
jge
dec
jo
mov
ret
scas
sub
mov
nop
push
or
loopne
mov
cs
mov
mov
stos
jle
adc
out
stc
lahf
out
add
xor
push
push
sbb
add
pop
or
dec
icebp
bound
cmp
inc
dec
mov
out
adc
dec
push
jb
xchg
or
int3
aad
jo
fcompl
orb
divl
mov
clc
mov
imul
and
or
daa
mov
mov
fidivrs
dec
fucomi
icebp
movsl
xlat
push
pushf
mov
mov
ja
pop
mov
push
lahf
mov
lods
into
addb
dec
getsec
shll
int3
xchg
cmp
shr
aad
xchg
popf
or
aad
icebp
sbbl
cmp
push
lcall
out
andb
repnz
addr16
clc
incl
repnz
jae
cmp
cltd
adc
push
xchg
out
jmp
rolb
aad
out
jbe
cmpsb
jb
and
mov
cmpsb
lods
es
push
pop
sarl
lret
lahf
and
subl
test
sbb
repnz
roll
xchg
in
sbb
inc
fstps
push
fmuls
movl
cmp
xor
cld
daa
cli
push
push
int
push
call
push
aad
pop
jl
jo
lahf
out
jg
arpl
inc
jnp
lcall
fcomps
in
add
roll
daa
in
add
cltd
mov
push
stos
mov
sahf
xlat
pop
aam
xchg
mov
pop
neg
add
rcr
and
cmove
popf
popf
movsb
cltd
xor
jo
push
mov
pop
jbe
movsb
or
insl
push
into
out
and
or
std
sub
adc
mov
adc
shrl
daa
xor
and
lods
push
add
or
sub
cltd
adc
xor
je
mov
push
icebp
jg
sti
inc
fisubs
mov
push
add
test
xchg
out
out
mov
sub
daa
loope
jg
iret
push
fidivrl
or
dec
or
mov
hlt
mov
pop
cwtl
cmpl
jge
or
mov
pop
mov
hlt
pushf
sub
xor
daa
je,pn
dec
es
js
mov
pop
inc
pop
or
rcr
pop
jl
int
sbb
sbb
filds
inc
daa
mov
pop
mov
fisubl
push
cli
add
or
mov
sub
scas
leave
out
mov
mov
fsubrs
inc
dec
pop
lcall
movsl
or
in
add
pop
jecxz
sub
sbb
ret
xchg
push
mov
mov
pop
inc
dec
mov
and
repnz
inc
push
cmpsb
subl
mov
jg
stos
ss
divl
or
pop
xchg
sub
call
icebp
in
adc
jns
jae
icebp
inc
mov
gs
jecxz
leave
pushf
jbe
cmpsl
data16
xor
inc
dec
cmp
les
out
cmpl
in
imul
hlt
fsts
jg
addb
mov
pop
rcr
push
mov
lcall
sub
mov
cmpsb
ss
jne
and
sti
mov
pop
outsl
int3
orl
enter
inc
push
sub
int
movsl
scas
mov
add
insl
sub
pop
mov
and
sub
movsb
fisubrl
addr16
cmp
push
ret
mov
call
mov
push
mov
cmp
and
stos
and
stc
cmpsb
jbe
roll
xchg
cmp
repz
adc
cmpsl
mov
jmp
imul
mov
in
popf
jno
xor
mov
cli
mov
scas
je
test
jmp
pushl
sub
sti
in
xor
orb
mov
mov
scas
stc
xor
pusha
push
cmp
mov
xor
repz
xchg
icebp
adcl
popf
roll
fisubs
stc
fnstcw
test
pop
stc
jmp
lret
cmc
out
jo
movsb
xchg
adc
into
test
inc
push
idivb
jb
dec
daa
cltd
or
xchg
mov
jo
fbstp
pop
pop
into
adc
aas
mov
add
popa
seta
xorb
inc
call
mov
pop
pusha
rolb
imul
hlt
jnp
imul
jbe
mov
pop
cmp
movsb
pop
inc
int3
add
lods
fidivs
push
xchg
cmp
loop
pop
jo
repz
fisubrs
xchg
int3
ret
sbb
dec
scas
lret
push
das
pop
cltd
add
mov
andb
inc
fnstcw
int3
dec
and
push
shll
lea
push
inc
stc
push
rol
inc
in
add
xor
addr16
jbe
orl
cmpsb
xchg
cs
jnp
add
sbb
loopne
jle
stos
or
repnz
js
xchg
dec
test
es
adc
jae
jecxz
ret
rcll
jo
rcrb
call
xor
mov
push
data16
shr
test
out
adc
mov
and
roll
imul
and
adc
xor
lds
adc
ret
unpckhps
clc
add
xor
int3
enter
popf
stos
adc
adc
clc
pop
sahf
or
pusha
pop
sub
movsb
orb
push
jle
das
cli
jns
nop
fs
push
test
repnz
pushf
lret
insb
out
pop
cmp
jns
test
incl
dec
push
shll
in
lock
cmp
cmp
or
pop
and
xchg
fs
cmp
fldenv
mov
push
xor
nop
in
daa
xchg
pushf
ss
lahf
rclb
dec
pop
std
adc
pop
xor
add
add
shlb
xchg
xchg
lcall
fsubrs
pop
dec
mov
xchg
jecxz
icebp
ficomps
inc
jne
outsb
fs
pop
xchg
xchg
sub
dec
ljmp
les
pop
push
pop
xor
and
cmpb
sub
add
sbb
mov
mov
daa
pushf
xchg
cmp
push
outsb
mov
push
popf
mov
mov
push
jns
mov
mov
cmp
popa
leave
push
leave
sub
dec
xchg
lea
or
sub
iret
clc
and
xor
xchg
adc
and
cmp
xor
test
jp
call
add
popf
sbb
int
sbb
aad
jb
stos
outsl
pop
cmp
or
pop
xor
xor
cmp
mov
dec
outsb
arpl
shll
or
pushf
int
push
rorl
outsl
test
pop
xchg
sub
sub
adc
add
mov
adc
icebp
pop
ja
pop
ljmp
push
into
test
push
les
ljmp
push
or
inc
sbbb
das
shll
lret
addr16
data16
daa
or
fstl
cmp
ja
arpl
aas
cvtps2pi
cltd
sub
jp
insb
fs
sub
jmp
dec
push
cs
aas
push
test
mov
sbb
fwait
add
xor
sub
into
daa
aam
push
test
pop
fs
adc
add
sbb
cmp
pop
mov
ds
mov
in
jp
ja
mov
adc
imul
movl
in
shll
inc
or
mov
add
arpl
lret
scas
mov
or
pop
test
fs
faddl
mov
je
inc
inc
insl
prefetchw
jge
mov
dec
scas
xor
push
cmc
adc
and
andl
jecxz
inc
ds
mov
sub
stos
jbe
testb
fadd
scas
scas
divl
mov
movsb
mov
test
xor
push
sbb
xor
mov
jbe
sub
pop
sahf
adc
arpl
xchg
daa
pop
mov
daa
jecxz,pn
popl
fildl
stc
dec
sub
pop
imul
adc
fnsave
jbe
mov
int
lea
out
push
outsl
cs
fs
data16
sbb
mov
add
and
mov
stc
and
cmp
xchg
aam
adc
out
sbb
or
jb
pop
push
push
rcr
daa
sbb
stc
cmpsl
sbb
imul
sub
push
pop
jbe
out
pop
into
mov
std
daa
cltd
push
inc
push
mov
add
push
ja
in
mov
pop
push
popf
std
cmpsb
push
fiaddl
data16
rorb
js
or
lods
adc
inc
jae
and
aam
rorb
jnp
test
shll
mov
ds
adc
dec
cli
add
cmp
bound
mov
sahf
inc
adc
loope
cli
cs
mov
lcall
dec
dec
xchg
kandnb
cs
jbe
cmp
pusha
shrl
xchg
mov
dec
incl
push
movsb
inc
inc
stos
adc
inc
sub
in
loop
fsubs
push
sub
hlt
lcall
jns
fs
dec
imul
rcll
fwait
mov
jge
sub
xchg
enter
test
push
lahf
iret
sub
loop
mov
ja
inc
or
xchg
jle
jp
dec
mov
popa
in
push
mov
and
popa
mov
push
adc
loope
insl
repnz
jne
pop
cltd
scas
mov
cmp
int3
add
jb
mov
add
popa
addr16
or
adcl
pop
cmc
mov
out
lds
push
push
adc
loope
inc
pop
pop
in
mov
jne
test
jg
dec
push
ljmp
fmuls
xor
out
shlb
mov
adc
jae
ja
aad
sub
movsl
fidivrl
pop
in
scas
cmp
shrl
test
jge
cld
stc
cltd
lret
je
jb
push
mov
ljmp
bound
fs
nopl
dec
and
jmp
mov
daa
push
out
scas
imul
mov
lret
lcall
xor
sub
sbb
mov
xchg
pop
cmp
loopne
arpl
insb
lods
inc
jmp
xchg
cmp
das
mov
and
and
jp
jge
test
pop
xor
inc
in
lods
jle
sbb
das
fisttpll
out
lea
cli
adc
test
ss
nop
mov
mov
xchg
nop
mov
or
inc
and
pusha
ja
inc
cmpsb
lea
mov
std
push
mov
push
mov
cmpsl
lods
push
in
mov
out
mov
or
das
or
jmp
push
int
pop
inc
push
les
push
add
sbb
and
mov
lahf
push
jecxz
inc
pop
dec
das
lds
in
fildll
rcrb
mov
pop
call
inc
inc
leave
mov
and
insl
sahf
repnz
dec
push
imul
clc
push
ljmp
mov
cmp
sti
sub
add
jne
aaa
je
arpl
outsb
stos
lahf
repnz
push
insb
jo
imul
ficoms
sub
or
out
cmp
notl
mov
cwtl
mov
xchg
jecxz
in
ficoml
out
test
sbb
push
mov
jne
lods
adcl
sbb
shll
sub
dec
cltd
pop
repnz
jg
ret
dec
test
mov
xchg
mov
jecxz
mov
jg
mov
imul
mov
xchg
pop
shlb
lahf
sbb
out
aaa
sbb
pushf
cli
inc
mov
subl
das
ja
mov
adc
adc
xchg
mov
pop
pop
out
lret
test
fcoml
fwait
dec
lock
mov
jg
sbbl
or
outsb
xrelease
movsl
fs
adc
call
push
lods
and
insb
outsb
push
jnp
je
jae
andb
hlt
cmpsl
push
or
stos
negb
aam
pop
outsb
mov
popf
or
loope
inc
jmp
add
or
in
jle
lock
mov
out
inc
mov
mov
sahf
inc
test
or
mov
std
fwait
loope
add
rolb
jge
in
xchg
mov
dec
mov
sub
popf
shll
mov
arpl
es
aam
add
inc
mov
leave
lret
ret
cwtl
fnstcw
je
push
imul
push
mov
push
clc
mov
fcmove
mov
xor
popf
sbb
js
cmc
dec
fdivrl
int
add
xchg
mov
inc
fsubrs
xor
sbbb
xchg
xlat
mov
lock
jl
lods
sbb
cmp
jl
xchg
rol
test
add
jge
or
and
mov
in
jns
jl
testb
cmp
adc
es
scas
xor
lcall
sbb
ljmp
decl
and
jbe
push
call
xor
aad
call
mov
dec
outsl
mov
es
inc
fisttps
data16
jo
sbb
popa
and
imul
mov
bound
mov
sub
mov
jnp
jmp
lret
push
push
incb
push
add
in
movsl
add
xchg
dec
mov
push
dec
stos
inc
pop
jnp
aaa
and
xchg
adc
add
stos
xchg
cli
mov
cltd
lock
add
jp
jmp
inc
dec
std
adc
mov
fldcw
int3
push
jno
push
jg
sahf
and
push
push
mov
int
cmp
std
ret
cmp
test
leave
add
sbb
cmpsb
jmp
pop
dec
add
neg
add
out
and
and
nop
sbb
cmpsl
movb
sbb
xchg
aas
mov
xlat
dec
imul
inc
add
inc
dec
cli
push
and
fcmovnb
out
cmp
or
fcmovne
nop
cmp
sbb
scas
sbb
out
in
stos
lock
out
mov
shlb
inc
xlat
enter
call
loope
and
mov
cld
gs
aaa
jns,pn
fsubs
jmp
cmc
rolb
adc
repz
xor
pushf
cmpsl
sub
dec
push
stc
xor
ret
imul
add
out
decb
pop
fnstsw
dec
int
repz
cmpsb
cmp
jmp
mov
or
mov
xchg
adc
and
js
push
mov
lds
jo
cmp
pushf
stos
xchg
stos
in
push
sbb
and
or
xor
mov
push
loop
mov
stos
mov
repz
pop
pushf
sbb
push
stos
test
loope
cli
ret
sub
cltd
push
cltd
fldcw
ret
inc
nop
ss
icebp
and
lcall
mov
inc
cli
cwtl
push
sub
mov
fwait
or
cmp
popa
lea
rol
fucomi
fisttps
jae
xlat
push
out
sub
scas
inc
jo
mov
xchg
leave
in
and
scas
cli
or
sbb
ds
out
xor
mov
ljmp
iret
sbb
ret
or
dec
inc
je
sbb
ss
stos
loope
int
xor
movsl
js
jne
insb
out
mov
sbb
fwait
xor
dec
cmpsb
jmp
push
pop
adc
xchg
popf
sub
mov
xlat
mov
sahf
cltd
inc
push
decl
dec
repz
pop
hlt
sub
dec
pop
mov
cmpsb
movsb
pop
lcall
imul
mov
push
scas
cltd
iret
fwait
push
shr
lods
fldt
sub
test
lret
and
inc
sbb
daa
and
sbb
jnp
pop
popa
stos
push
add
shll
push
insb
dec
test
fwait
mov
stos
cltd
dec
movsl
jne
jnp
sahf
mov
lahf
lea
mov
xchg
adc
in
dec
cwtl
sbb
ds
add
xchg
out
icebp
lods
out
test
xchg
or
clc
daa
cmp
fildll
clc
mov
shlb
pop
insl
aad
adc
stos
cmp
lcall
xchg
ret
icebp
mov
jb
iret
dec
lahf
jmp
fmuls
push
adc
mov
push
push
add
cmp
repz
mov
adc
dec
mov
shl
and
call
sti
jle
jl
or
xor
stos
daa
inc
mov
dec
push
fsubp
add
int
fdivrl
mov
insb
lds
jbe
in
icebp
divb
inc
dec
mov
mov
add
std
outsb
pusha
adc
sub
jb
aas
cmpsl
push
push
out
iret
sbb
push
sbb
iret
in
shll
mov
shrb
aad
xor
adc
inc
lret
mov
jl
popf
jbe
jp
movd
mov
stos
jno
cmp
push
out
jge
div
arpl
and
sbb
cmp
insb
rorl
fcoms
adc
or
or
pop
mov
stc
aaa
scas
adc
loop
int
stos
out
fisubrs
pop
add
stc
sub
aam
aad
mull
cmp
out
stos
mov
push
xchg
fs
xchg
mov
cltd
mov
pop
xchg
mov
jecxz
mov
inc
andl
jge
lea
fmuls
mov
and
cltd
rclb
adc
in
enter
pushf
insb
mov
push
into
outsb
add
js
enter
fwait
jae
sbb
aas
repnz
jnp
fs
push
push
cmpsl
sahf
sbb
addr16
jbe
sub
cwtd
sbb
cmp
cmpsb
test
xchg
ss
repz
push
push
add
dec
fbstp
cmp
and
xchg
lahf
push
jo
in
pop
sbb
int
lret
cld
cmp
push
pop
jns
mov
rcrb
and
ljmp
enter
push
inc
adc
ret
pop
jae
and
popf
cmpsb
lret
pushf
movsb
xchg
test
rcrl
mov
mov
dec
sub
std
ret
fistl
xchg
repz
arpl
jae
pop
lret
lret
loop
or
push
enter
fimuls
mov
sbb
loop
in
mov
sbb
mov
test
fs
ret
cli
insb
out
jle
push
pusha
jns
push
hlt
js
nop
fmull
sub
lret
push
xor
xor
jmp
pop
adc
jl
fwait
xor
lods
jno
shl
push
add
decl
jmp
pop
mov
stos
aad
mov
pop
shl
in
ss
sbb
inc
mov
add
pop
and
or
dec
sbb
nop
add
sub
and
pop
inc
sbb
rolb
sub
xchg
lret
in
outsb
mov
icebp
jnp
adc
cmp
dec
dec
rclb
pop
lea
xchg
insl
cmpsb
jg
repz
mov
sahf
xor
xor
outsb
ja
nop
mov
stos
adc
sbb
in
jl
fcmovbe
ret
add
push
pushf
int
inc
adc
add
std
lods
mov
test
sbb
in
push
subl
push
inc
scas
cmp
stos
jae
dec
test
fisttpl
jbe
xchg
clc
loopne
or
dec
and
roll
sbb
icebp
push
fbld
xor
sub
cmpsl
in
jbe
jl
pop
xchg
adc
mov
scas
loopne
mov
faddl
jge
mov
sahf
xchg
fdivl
cmp
lods
jne
dec
push
mov
lahf
shrl
scas
nop
jecxz
incl
push
cmp
in
das
data16
push
test
add
cmpsb
lahf
lea
ret
lret
addl
jns
insl
enter
or
es
insl
xchg
lock
jg
incl
xchg
leave
xchg
mov
iret
test
mov
shl
push
and
mov
jp
push
fnstcw
in
inc
xlat
jmp
xchg
fists
and
fstpt
inc
xchg
cmp
fwait
sub
jae
mov
dec
xor
jns
mov
fdivs
cmp
enter
mov
pop
and
fidivl
bound
xchg
dec
inc
sahf
fnsave
and
jl
mov
and
and
ss
test
fidivrl
pop
jge
fnsave
cld
test
jp
xchg
push
ds
or
jle
push
xchg
adc
and
xor
sbb
push
les
mov
fs
loope
in
stos
and
mov
pop
leave
andl
insl
scas
push
mov
aaa
sub
daa
mov
jo
mov
repnz
pop
aaa
dec
jae
lahf
scas
or
rol
xchg
add
ljmp
in
hlt
das
out
popa
adc
aam
inc
push
add
adc
jge
dec
pop
cli
cmp
out
xor
inc
mov
lock
hlt
jl
test
hlt
jae
jecxz
and
mov
mov
dec
mov
or
sub
sbb
std
mov
mov
cmp
mov
rorl
pusha
aad
incb
frstor
xchg
push
lea
loop
jns
pop
bound
ds
pop
inc
pushf
jle
lret
pusha
inc
movsl
mov
push
dec
mov
test
insb
sub
mov
cli
ret
mov
sub
js
flds
xchg
nop
xchg
imul
mov
mov
pop
sub
or
adc
or
sbb
adc
sub
bound
lahf
es
sub
leave
dec
sub
xor
sti
push
mov
inc
add
leave
or
or
push
imul
mov
lock
and
cmp
dec
pop
xchg
cmp
popf
dec
mov
pop
mov
sbb
fst
insl
push
sub
rcrb
in
aam
sub
xor
bound
fdiv
addl
xchg
mov
leave
sub
gs
pusha
pop
sbb
test
xor
shll
jmp
sub
xchg
ja
mov
dec
es
and
jmp
testb
pop
inc
enter
xchg
inc
repnz
cmp
mov
icebp
es
mov
xchg
adc
into
out
call
xchg
xchg
std
jmp
scas
adc
xchg
cmp
jecxz
jae
sub
clc
pop
pop
push
jnp
push
jmp
dec
mov
jo
jns
jnp
jg
int
cmp
jmp
fistpl
nop
jecxz
lods
cmp
sarb
scas
pop
jns
jns
leave
gs
inc
push
xchg
aad
fisubs
mov
in
std
sbb
xchg
mov
jge
stos
mov
xchg
nop
aam
push
pushf
addr16
das
mov
mov
nopl
scas
push
xchg
inc
mov
xchg
cmpsl
push
push
mov
sub
inc
fisttpl
stos
sbb
cmc
dec
sbb
add
ret
dec
and
mov
addr16
mov
subb
leave
lret
push
aas
pop
cmp
stc
push
mov
inc
jecxz
inc
jb
and
sub
test
jecxz
and
mov
and
xchg
push
jnp
test
dec
push
es
addb
loop
les
push
xor
mov
add
clc
push
dec
bound
mov
mov
xchg
push
push
fsubl
xor
and
outsb
xor
lret
into
js
mov
mov
jnp
in
pop
lret
jl
cltd
sub
popa
jecxz
fimuls
adc
adcb
sbb
in
fdivr
sbb
mov
into
jle
pushf
dec
aam
mov
ret
movsl
or
and
outsl
incl
in
das
dec
and
xchg
and
shll
cmp
bound
cmc
jl
pop
dec
sarl
dec
and
clc
les
insl
jecxz
inc
dec
sbb
lods
mov
sbbl
sti
sub
jp
lret
jne
dec
or
std
mov
push
mov
mov
xchg
pop
sbb
cmc
push
call
nop
pop
cmpsl
xlat
inc
pavgw
repz
fucomi
stos
mov
fnstsw
hlt
pop
enter
cltd
pop
lock
mov
mov
mul
mov
push
cmp
jns
mov
add
bound
in
scas
mov
xchg
mov
shll
sub
xchg
sub
cltd
cli
pop
fiadds
xor
arpl
cmp
cmp
int3
jns
adc
inc
mov
adc
add
sub
pop
mov
mov
mov
inc
inc
add
jno
or
adc
mov
shll
fs
out
or
cmp
call
sub
push
movsb
ror
jno
xlat
dec
xor
dec
push
jle
sti
mov
mov
and
rorl
shl
add
adc
mov
pop
int
jne
orl
sbb
cmpsb
sub
cmpsb
push
add
cmpsl
repz
imul
testb
and
cmpl
mov
jnp
jl
ret
mov
jne
cmp
and
jmp
fcomi
loop
pusha
xchg
xchg
outsb
mov
inc
inc
mov
xlat
cmpsb
add
jne
gs
fldl
xor
icebp
add
xorb
add
add
pop
jbe
jnp
mov
dec
in
sub
sub
ljmp
fwait
xor
fisttps
leave
mov
sub
jecxz
imul
scas
arpl
mov
sub
inc
into
cmc
loope
and
lret
xchg
sti
dec
mov
xchg
repnz
sbb
sub
loope
out
les
xlat
adc
outsb
xchg
inc
int3
sub
mov
pop
xlat
xor
ja
loope
jmp
mov
dec
movsb
jo
gs
push
jne
sub
cli
idivl
nop
sbb
jge
jle
lret
aas
aad
icebp
popf
out
stos
fwait
ret
mov
xchg
out
hlt
add
test
inc
xchg
jbe
jae
or
sbb
push
push
rorb
or
repnz
pop
push
xchg
in
test
addr16
shll
mov
iret
out
ret
dec
lock
inc
nop
stos
sahf
ljmp
push
add
dec
fsub
lret
xchg
cmp
jl
xor
int
not
dec
jmp
cmp
cltd
frstor
adc
ja
imul
aas
aam
in
inc
leave
bound
inc
out
xor
or
or
insw
inc
les
fcompl
cmpb
cmp
dec
cmp
sti
fstpt
test
pop
into
adc
cmp
cmp
add
adc
addr16
inc
xor
lret
into
sub
pop
scas
sub
daa
pop
and
push
xchg
inc
rol
push
stc
insl
pusha
adc
sub
int
push
in
test
fdivrs
arpl
mov
xor
jo
aad
mov
xchg
add
ja
in
mov
cmc
out
mov
in
cmpsl
je
mov
sub
dec
in
jbe
adc
cmp
pusha
sbb
out
and
dec
in
add
out
pop
lock
add
xor
or
inc
and
int
jno
in
sub
addr16
sti
fcompl
adc
mov
mov
jae
sbb
test
dec
push
cmp
push
sar
or
sub
and
pop
xchg
pop
ret
cmp
pop
mov
aas
andl
sbbl
fsubl
fwait
jg
pushf
flds
in
mov
fwait
outsb
mov
js
sbb
jg
pushf
push
nop
lahf
jmp
dec
ret
or
pusha
jg
fisubrl
fs
mov
push
mov
test
mov
push
das
mov
bound
movsl
sub
pop
xor
neg
cwtl
sbbl
lcall
mov
pop
inc
fstl
ret
iret
mov
jne
dec
loopne
push
incb
or
movsb
test
rcrl
cmp
lahf
je
outsb
stc
popf
push
imul
inc
xorb
or
jns
cli
cmc
iret
fcmovu
push
ss
mov
enter
out
lcall
dec
xchg
push
nop
add
or
mov
enter
movsb
test
bound
mov
push
xor
or
inc
and
jl
dec
cmpsb
cmpsb
and
cmp
adc
mov
cld
mov
loope
inc
out
jp
fisubl
and
jo
mov
nop
xchg
xchg
cwtl
cs
testl
mov
jbe
jle
jle
aad
pop
pop
add
mov
mov
nop
insl
sub
ds
mov
xchg
dec
mov
fwait
add
push
pop
mov
mov
add
and
es
push
shlb
lcall
mov
popf
and
dec
push
mov
mov
and
cmc
in
aam
mov
in
and
and
in
in
and
inc
pop
es
jno
push
mov
fists
inc
adc
mov
sbb
or
add
psubusw
dec
in
shl
js
xchg
or
cmpsl
sub
cmpb
jl
pop
sub
out
mov
jle
jg
cltd
pop
leavew
movsl
mov
aam
cmp
xlat
mov
dec
add
mov
movsb
or
jb
scas
imul
mov
push
mov
mov
jno
cltd
rcrl
xchg
inc
in
cmp
dec
or
xchg
sub
in
or
add
daa
sbb
imul
std
dec
loopne
shll
sbb
ljmp
fcoms
mov
cld
ret
int3
out
ljmp
nop
loop
popa
jae
jecxz
std
test
loopne
fs
pushf
pop
lret
jno
stos
outsb
jo
shl
std
test
fcmovne
mov
push
pusha
cmp
insb
mov
outsb
fnstcw
nop
jle
ds
mov
out
test
jmp
test
data16
cmp
test
jae
out
lock
int3
les
and
fmulp
push
ljmp
pop
pushf
nop
int3
cmp
push
or
xchg
inc
cli
mov
and
stc
bound
arpl
into
pop
mov
mul
jge
adc
mov
xor
jae
imul
repz
xor
jg
ret
in
inc
sub
adc
sub
mov
push
das
aam
jg,pn
inc
mov
int3
push
cmp
shl
jp
fwait
jp
push
inc
fucomip
test
scas
push
sub
out
xchg
sub
loopne
add
fsubl
clc
int
sbb
xchg
cmp
xchg
ljmp
mov
cs
xchg
jnp
je
adc
loop
sbb
sahf
sub
nop
jne
xor
testl
pop
outsb
or
dec
mov
aaa
pop
shll
lock
jge
lea
jecxz
aas
sti
cs
push
int
call
dec
sub
mov
fimull
gs
iret
fmull
mov
cltd
adc
sbb
fwait
mov
test
inc
jne
sub
into
cld
mov
insb
sub
dec
shrl
ja
stos
fs
mov
adc
les
adc
mov
enter
test
mov
es
xchg
pop
sub
cmc
scas
pop
cmp
pushf
imul
push
xor
fmull
xchg
mov
les
mov
cli
movsl
fstpt
andl
lea
mov
mov
ss
mov
push
push
pop
ret
jl
fmuls
neg
cmc
cmp
push
push
mov
iret
cmpsb
aad
adc
add
popa
aam
nop
pop
pushl
mov
or
jns
adc
cltd
rorb
xchg
out
mov
ds
push
mov
push
dec
cmpsl
cltd
test
test
rol
ret
jbe
mov
cmp
push
sbb
push
ljmp
in
sbb
or
and
cmp
lock
mov
add
enter
or
icebp
xchg
push
add
in
pop
xor
fiadds
lret
mov
mov
pop
out
mov
dec
cmp
icebp
jg
adc
arpl
push
pop
repnz
inc
mov
fadds
jns
div
add
adc
xchg
das
and
add
or
mov
xchg
mov
subl
sbb
inc
out
lods
add
mov
dec
mov
adc
lcall
cmp
add
sub
testb
pop
arpl
cltd
cmp
xchg
rorl
mov
xor
and
xchg
dec
add
dec
icebp
insl
fldt
or
push
jle
imulb
andb
xchg
mov
shll
out
ret
sbb
cwtl
aad
ss
out
jne
rcrl
lahf
lods
dec
fs
push
mov
push
or
test
dec
adcb
or
mov
outsb
pop
sahf
fcomp
test
aas
lret
mov
js
or
sbb
cmpsb
xor
push
jle
jmp
pop
mov
dec
lret
mov
imul
xchg
add
push
and
cmpsb
push
push
aas
sbb
pop
add
jns
repz
test
inc
fs
pop
gs
mov
dec
mov
inc
mov
jnp
push
dec
jo
mov
movsl
jge
sub
add
pop
mov
fwait
mov
jge
shll
leave
dec
dec
pop
mul
cli
dec
sub
xor
jno
add
or
les
stos
lret
in
mov
andb
jae
jle
mov
dec
fstl
pusha
shll
lret
sbb
and
fs
das
mulb
fbld
loopne
and
sbb
jb
and
in
addr16
sub
and
inc
mov
test
jo
leave
cmpl
mov
sub
cmp
pop
pushf
aaa
xchg
stos
jo
popl
push
sahf
mov
add
push
mov
dec
fsubs
fnsave
jns
jge
mov
jae
fisubrl
ja,pn
add
jo
jbe
fbld
outsl
jno
leave
dec
and
insb
jecxz,pt
leave
inc
test
loop
scas
mov
xchg
and
mov
iret
xchg
lret
lock
sbb
arpl
or
lea
sub
in
jns
lret
mov
inc
bound
jg
pop
xor
mov
loop
nop
fsubrl
xchg
sbb
andl
ss
cltd
dec
cld
out
fstps
mov
sub
movsl
ret
roll
and
adc
jns
lock
or
or
mov
movsb
out
int
sub
test
mov
leave
out
repz
and
sub
out
push
mov
ds
insb
outsb
xorl
adcl
adc
in
test
icebp
int3
or
ljmp
pusha
test
inc
xchg
in
ljmp
stos
sbb
les
cmc
stos
dec
movsb
and
sub
hlt
sub
repnz
imul
ds
jns
adc
in
insl
fdivrs
xor
fwait
xchg
es
stos
leave
fadd
out
jp
ja
pop
lahf
aas
ds
lret
imul
iret
test
int
lock
imul
or
jne
inc
imul
sti
cmp
popf
int
push
mov
fistps
push
push
cmp
rcrl
faddp
push
mov
movsb
test
lock
sbb
pop
mov
ljmp
mov
mov
cli
shlb
rcrl
std
xlat
add
push
outsl
out
ret
in
xor
aaa
pop
or
or
pop
cltd
sbb
shlb
xchg
pop
loop
or
jb
sub
cli
loopne
cld
push
lods
lods
fwait
jge,pn
and
fs
and
inc
adc
fstps
lods
cmp
or
iret
sbb
and
out
test
aad
push
push
stos
bound
dec
andb
pop
inc
in
out
xchg
movsb
call
addr16
loopne
loop
sub
jge
mov
pop
ja
mov
mov
jmp
aaa
xchg
pop
hlt
lods
sarb
lret
jb
daa
adc
jmp
adc
xchg
and
xor
or
call
or
jmp
xor
mov
jmp
and
xor
aas
mov
aas
lods
mov
jecxz
sbb
pop
sahf
out
sbb
sbb
in
adc
jae
leave
out
shll
ds
xor
test
dec
push
sbb
lods
test
jno
inc
push
xadd
jl
add
ja
xchg
rcrl
jne
out
sbb
xorb
add
test
loope
js
mov
addr16
cltd
shl
pop
sbb
shlb
xor
xchg
adc
xlat
out
add
and
test
pop
out
cmp
xchg
or
sbb
loope
insl
mov
test
pop
cmp
dec
jp
divl
and
dec
test
sbb
xchg
mov
cwtl
adc
and
shl
leave
mov
icebp
icebp
repz
insb
popa
and
pop
mov
jb
lds
aas
mov
or
lods
jecxz
aaa
xorl
pop
bound
mov
lret
pop
dec
inc
jb
test
and
inc
sub
push
push
push
xor
and
hlt
test
mov
inc
mov
flds
push
sub
jo
insb
mov
jl
dec
inc
xor
in
and
in
in
mov
pop
clc
loop
icebp
lea
insl
repz
insl
test
rolb
add
cltd
jae
mov
push
pop
fwait
or
mov
mov
cmpsl
pop
jno,pn
mov
xchg
push
adc
int
and
cmpl
and
and
xchg
sub
mov
lcall
stc
fstpt
ficoms
push
popf
in
sub
mov
cli
out
imul
lret
mov
mov
mov
arpl
nop
inc
aaa
xor
mov
mov
xchg
inc
jns
fisttps
lods
clc
and
aas
and
int3
outsl
xor
dec
int
inc
xchg
pop
nop
push
mov
inc
jg
or
sbb
das
inc
add
std
leave
jge
mov
push
movsb
add
push
sbb
in
ds
test
aas
enter
mov
inc
push
sbb
xchg
adc
test
decl
adc
jae
lods
je
adc
xchg
dec
jmp
jp
push
in
pop
xchg
mov
or
add
cmp
shrb
pop
add
sbb
dec
call
lret
cmp
mov
add
sub
call
mov
mov
sub
pop
mov
cmp
shr
pop
out
inc
adc
cld
cmpsl
jae
cli
push
fsubrs
mov
int3
popa
pop
cmc
adc
mov
sub
pop
mov
lods
dec
mov
dec
push
add
mov
cmpsl
int3
adc
sbb
repz
push
add
sub
sub
xchg
sti
imul
das
sbb
aad
jns
pop
lahf
fwait
mov
sub
adc
xor
lret
insl
lods
mov
sub
lret
or
add
mov
dec
and
mov
xchg
out
inc
std
rolb
sbb
pop
jmp
jl
inc
lcall
stos
jp
sub
sti
imul
xchg
push
mov
je
lcall
aam
xor
jno
pop
ja
lret
test
cli
xor
fcmovnu
mov
pop
jmp
out
loop
into
pushf
cmp
cmpsl
mov
js
lds
xchg
cmp
lds
push
in
cmc
jecxz
adc
fldt
mov
xor
pusha
outsb
repz
out
push
xlat
in
je
mov
inc
sbb
push
stc
test
enter
inc
fimuls
sub
sub
std
sbb
ljmp
shrb
daa
jecxz
adc
jle
clc
cltd
ret
out
dec
inc
mov
or
jo
push
mov
mov
mov
repz
addr16
shlb
cmp
jbe
inc
adc
dec
subl
shl
repnz
mov
push
ds
std
sbb
adc
push
loop
lds
fcompl
or
cmp
mov
add
add
push
inc
pop
imul
movsl
push
adcl
mov
push
jle
jl
push
dec
jb
fwait
inc
add
sub
and
out
dec
call
dec
repnz
lods
out
test
mov
or
sub
push
dec
and
cmp
jmp
out
add
sub
fidivrs
aaa
and
insl
mov
jmp
mov
pushw
clc
mov
mov
adc
or
cmpsb
data16
cmp
sub
daa
int
push
in
push
mov
jo
lods
enter
in
mov
inc
xchg
pop
ret
scas
hlt
sbb
sarl
hlt
je
mov
xchg
xchg
int3
push
arpl
rcrl
pop
loop
cmc
sub
popf
pop
and
cmp
push
push
dec
nop
xor
dec
pop
and
das
xchg
jmp
push
sub
dec
fdivs
iret
in
sub
aad
xchg
push
push
lock
out
push
or
add
lcall
jp
es
dec
sbbl
xor
loop
fs
adc
mov
xchg
iret
test
aad
mov
vpshaq
bound
lds
stos
dec
lcall
pushf
pop
imul
imul
adc
mov
xor
and
push
pop
ret
sbb
and
adc
sbbb
cmpsl
sbb
and
pop
cld
xlat
cmp
pop
lret
leave
xchg
fmul
je
inc
mov
adc
ja
xor
fistpll
call
add
sub
and
and
dec
and
daa
mov
lods
cltd
pop
pusha
push
pop
jns
adc
movsl
jno
lods
jecxz
inc
jecxz
lods
mov
inc
sbbb
into
insb
jmp
push
mov
test
outsb
clc
xor
lcall
cmpsb
mov
lods
scas
cmpsb
mov
sub
pop
repz
enter
cli
addr16
jmp
ds
push
popf
stos
out
xorb
push
push
arpl
xchg
mov
push
aad
push
jbe
fdivrl
imul
roll
popf
add
and
repz
loop
xor
ret
lret
cld
sbb
jbe
cmp
iret
adc
xchg
loopne,pt
mov
xchg
mov
adc
and
dec
pop
sti
sbbb
movsb
inc
mov
arpl
test
ja
xlat
aaa
cmp
js
add
in
stc
dec
and
dec
imul
lods
subb
gs
nop
je
in
dec
test
pop
cmp
sbbb
mov
or
filds
test
addr16
out
movsb
adcb
decb
add
dec
outsl
inc
repz
mov
cmp
dec
leave
stc
add
shrl
push
push
or
shlb
iret
dec
pop
clc
mov
push
mov
addr16
shll
sbb
jo
add
xor
lods
outsb
xchg
rep
lretw
loopne
lret
fisubrl
mov
std
lods
int
xor
mov
stos
or
outsb
mov
mov
in
xor
movsb
in
inc
loope
sbb
stos
push
mov
inc
scas
or
cltd
shll
add
arpl
inc
cmpsl
dec
cs
push
inc
inc
insl
sbb
loopne
mov
inc
mov
cmp
icebp
ds
sti
lods
sbb
push
sbb
add
repz
xor
mov
adc
lret
fxtract
gs
inc
inc
ds
shll
or
cwtl
test
pop
aaa
mov
and
cmpsl
pop
inc
mov
add
sub
mov
divl
jb
push
mov
inc
mov
out
jmp
add
add
and
push
sbb
dec
mov
cmp
xchg
cmpsb
xchg
lds
push
and
lock
leave
mov
pop
inc
add
add
lret
inc
add
adc
roll
sahf
shr
pop
xchg
add
push
cs
lock
mov
inc
fistpl
mov
cmp
adc
fists
in
lea
scas
add
inc
xchg
out
and
repnz
pop
xchg
xchg
pop
push
ja
mov
mov
cmp
imul
aad
pop
xchg
add
inc
adc
daa
lods
and
pop
in
std
sbb
and
mov
loopne
mov
je
dec
ja
addl
jle
js
or
sbb
jmp
inc
push
lods
out
and
xchg
mov
dec
outsl
xchg
aad
jbe
repnz
cmp
aas
aad
jl
in
aam
out
inc
lods
xchg
xor
add
adc
int3
mov
jbe
and
dec
cmpsb
mov
ljmp
test
or
pop
cmc
fisubrs
bound
mov
into
mov
sbbb
cmp
add
loope
pusha
mov
rol
sub
push
gs
xor
inc
mov
jl
mov
inc
call
cltd
movb
mov
pop
xor
inc
aad
lahf
pop
mov
movsb
mov
xor
ja
xlat
in
orb
mov
mov
test
sbb
or
divb
xchg
mov
mov
dec
test
dec
push
mov
or
dec
add
dec
sub
arpl
xor
xor
xchg
js
or
ja
ljmp
cltd
or
push
lods
sub
imul
jg
das
into
mov
mov
ss
inc
fisttpl
leave
mov
mov
lahf
sti
sub
and
scas
ja
aam
add
dec
divb
pop
gs
outsl
fisubl
lret
out
dec
negl
mov
test
add
push
out
adc
cmp
and
push
jno
and
mov
jp
mov
fimull
bound
cltd
int
mov
idivl
sti
ret
ss
out
cmc
stc
int
shr
aas
aam
sahf
sbb
pop
fs
loope
mov
xor
sarb
mov
jecxz
jle
mov
fwait
shl
andl
in
and
fstps
shll
imull
pusha
mov
add
mov
push
sbbl
pop
add
aaa
adc
inc
sub
lock
test
into
pop
and
aad
cmp
je
xchg
neg
roll
dec
mov
add
cli
mov
inc
inc
push
sar
ret
sub
mov
inc
movsb
push
mov
mov
inc
add
ds
movsb
unpckhps
ja
pop
and
xchg
flds
or
sbb
aam
push
rclb
cli
mov
dec
adc
nop
repnz
test
push
leave
jne
lret
add
jge
xchg
outsl
sahf
and
inc
xchg
push
pop
stos
pop
xchg
mov
adc
mov
lret
inc
gs
and
pop
mov
xchg
add
mov
pushf
xchg
vcomiss
popa
aad
inc
push
int3
andb
mov
dec
push
cmp
inc
dec
rcll
loope
sbb
aam
add
pusha
add
std
es
pop
xchg
loopne
push
jns
xlat
test
enter
pop
jns
shll
dec
hlt
sbb
imul
lock
sti
vdivpd
jg
push
mov
hlt
adc
mov
cmp
les
jbe
ret
inc
cmc
push
dec
mov
es
cmp
int3
les
repz
loop
fistl
xor
mov
sbb
xrelease
or
push
fwait
imul
push
and
movsb
pop
pop
mov
stos
into
push
jo
jmp
test
mov
das
push
pusha
sbb
adc
icebp
sbb
add
and
test
sbb
lret
jno
scas
movsl
aad
scas
fwait
and
fstl
lods
sbb
or
or
dec
xlat
pushf
aad
fisttps
imul
dec
xchg
adc
popf
mov
pop
jg
jno
lahf
jl
sahf
cmp
mov
test
jne
gs
mov
xor
pop
push
out
xchg
push
xchg
xchg
push
and
fmull
pusha
popf
mov
das
xor
lcall
test
loope
ret
ljmp
leave
sub
inc
adc
sub
add
or
aad
lods
lret
lods
push
mov
test
pop
cli
sub
popf
cli
icebp
mov
or
daa
cwtl
or
arpl
mov
adc
push
pop
ljmp
jmp
es
cltd
out
stc
lock
icebp
push
nop
stc
dec
test
xchg
mov
adc
inc
pop
sub
lds
insb
imul
xchg
imul
and
dec
out
push
mov
scas
cmp
mov
mov
add
loope
icebp
mov
cs
adc
nop
inc
jecxz
mov
sti
push
pop
add
out
fs
dec
lds
or
lcall
mov
loopne
jno
roll
mov
jg
dec
push
mov
and
and
mov
stos
and
mov
cmpsl
jb
rorl
js
addr16
sbb
out
sub
dec
xchg
ds
insl
adc
mov
sbbl
hlt
jbe
repz
loopne
pop
filds
or
xchg
cmp
sub
shrb
scas
mov
jg
pop
test
xchg
push
sbb
dec
outsb
lods
jmp
add
std
mov
mov
inc
pop
jne
sub
vpsubsb
pop
push
pop
daa
lcall
sub
mov
push
cmp
leave
inc
inc
imul
in
push
xchg
pop
aas
xchg
cmp
push
ret
mov
mov
lcall
rorb
loope
mov
sbb
int3
repnz
fs
and
sbb
dec
xchg
shlb
aam
in
int
sahf
das
arpl
push
shl
cmp
shld
outsb
adc
in
andl
rcll
insb
adc
inc
jmp
mov
aad
adc
or
inc
stc
imul
mov
dec
xor
scas
jg
dec
sbb
imul
rorb
inc
stos
sub
movsl
aas
leave
xor
adc
mov
pop
sub
jmp
or
jp
xchg
inc
int
ftst
lea
push
stc
sub
scas
push
ret
xor
lcall
pop
push
dec
cmpsb
xchg
xor
subb
bnd
jb
and
loopne
pop
add
loope
stos
mov
stc
dec
rcr
xchg
orl
js
filds
js
insl
dec
aam
jo
sahf
pop
insb
sbb
loope
out
repz
sbb
cmp
out
mov
sbb
cmp
pusha
imul
nop
push
mov
dec
insl
sub
imul
call
adc
je
mov
enter
jnp
mov
outsl
lret
add
push
sbb
js
mov
xorl
iret
int3
scas
sahf
push
cmp
shrl
mov
nop
sub
sarl
cmp
das
hlt
mov
adcl
shrb
pushf
push
fiaddl
dec
aaa
js
inc
or
fiadds
lret
or
mov
xor
bound
sub
popl
test
pushf
jle
add
movsl
mov
and
sbb
jl
test
cli
mov
xor
fwait
or
enter
mov
xchg
nop
fstpl
jnp
fnstenv
cmp
push
lods
cmc
cltd
or
shrl
pusha
out
ja
lahf
rolb
stc
loop
into
push
notb
dec
dec
xchg
int
cmp
sub
imul
or
dec
mov
jle
rcrb
cmp
jmp
xchg
push
je
in
jg
jbe
shll
adc
xor
add
xchg
andl
rol
es
jg
fwait
scas
insl
mov
ja
aaa
addl
mov
pop
in
int3
bound
xchg
test
sbb
repz
sub
push
sahf
enter
fsubl
loop
fxch
inc
push
push
inc
xchg
xor
xor
call
dec
or
dec
cmpsl
in
push
mov
inc
popf
int
cmp
pop
in
mov
mov
pop
or
lret
in
jmp
insl
mov
cmp
lret
jecxz
aam
inc
dec
xor
mov
jo
and
jle
nop
mov
call
cmp
xlat
jae
xchg
mov
gs
dec
inc
push
lods
mov
es
stos
or
jne
or
jg
mov
aaa
rcll
in
repnz
add
inc
push
inc
and
mov
and
add
imull
test
ror
dec
mov
lret
call
lods
stos
sub
loop
cmpl
and
jecxz
pop
cld
mov
cmpsb
test
test
jno
int
fstps
pop
mov
stc
push
clc
mov
push
jb
jmp
inc
jg
and
jns
mov
adc
and
inc
push
inc
push
mov
shll
aad
cmp
je
dec
movsb
sub
insl
iret
int3
and
shll
cmp
scas
jg
test
adc
outsl
mov
dec
xor
inc
sbb
dec
add
pop
lea
bound
out
cli
xlat
pop
lret
sub
xor
sub
pushf
or
test
scas
or
dec
xchg
inc
and
mov
insl
push
pop
sub
idiv
repnz
mov
outsb
lods
jo
ret
fsubs
pop
repnz
into
pushf
cli
je
int
jle
mov
push
fwait
js
xor
xchg
cwtl
cmc
test
ds
lods
jl
dec
or
cmpsb
cmp
frstor
xchg
loop
iret
xor
jo
inc
or
imul
std
popl
test
or
lods
call
outsl
mov
and
call
jl
call
dec
push
add
icebp
les
cmpsl
mov
hlt
sbbb
mov
adc
sarb
xchg
jmp
mov
pop
xor
push
leave
pop
or
add
pop
arpl
fisubrs
add
pushl
mov
mov
insb
cmp
pmulhuw
imul
fsts
inc
test
fidivrs
mov
sbb
repnz
xor
icebp
sbb
push
mov
sub
mov
pop
mov
fdivrp
pop
fwait
imul
mov
pop
std
fdivr
aaa
rcr
add
push
dec
jmp
push
pop
das
pop
dec
mov
outsl
adc
and
mov
inc
cli
iret
jecxz
push
movsl
arpl
clc
aam
or
stc
adc
lods
arpl
sbbl
popl
bnd
sbb
push
mov
xchg
loop
in
addl
cmc
leave
push
mov
push
shlb
lods
in
jbe
into
mov
pop
xor
xchg
ficoms
and
dec
sub
pop
jge
xor
cld
cmpsl
fnstcw
mov
movsb
cmp
xchg
mov
out
push
or
adc
shr
clc
sub
addr16
cmc
pop
lock
and
sub
cld
in
adc
push
dec
mov
rolb
aaa
mov
in
cmp
sub
lods
dec
jb
or
mov
insl
mov
dec
jnp
je
xchg
outsl
fdivrl
rorl
es
mov
lds
sti
dec
adc
jb
and
or
sbb
addr16
mov
jae
mov
fcoml
xor
scas
lock
cmpsl
aad
and
rclb
addr16
arpl
xor
push
mov
xchg
jmp
adc
scas
xchg
push
sub
lods
movsb
popa
fistps
mov
push
jge
outsb
fwait
adc
pusha
mov
xor
adc
das
das
mov
les
clc
out
jnp
xchg
dec
es
test
lods
addr16
ljmp
clc
sbb
pushf
jnp
sub
xchg
outsb
jno
pop
movsb
cli
sha256msg2
adc
shrl
cmpsb
xor
push
sub
out
repz
adc
out
faddl
adc
aas
inc
dec
mov
cmp
push
or
lcall
push
dec
sbb
mov
push
jnp
xchg
fsubrl
push
js
lods
fimull
sbb
xchg
dec
xchg
je
and
sbb
leave
jb
xor
roll
andl
jns
iret
adc
cmp
sahf
sti
pop
rcll
sti
scas
fs
aaa
int3
outsb
pop
sahf
pusha
mov
mov
aam
testb
inc
push
ljmp
sub
add
sub
hlt
cld
js
pushf
insb
jae
dec
test
jmp
xchg
xchg
jbe
iret
xchg
add
out
call
int
cmpsb
ret
idivl
pop
add
in
jb
pop
pop
push
adc
or
hlt
les
lds
xadd
test
inc
dec
nop
mov
fldcw
lock
mov
stos
lret
inc
pop
jge
imul
inc
mov
inc
mov
mov
jo
sahf
fs
xor
orb
fisttpll
xchg
scas
jae
popa
push
cmp
add
and
push
nop
and
loopne
jno
mov
or
lods
clc
mov
xchg
outsb
test
scas
lcall
mov
dec
inc
dec
lock
ds
nop
or
repnz
lds
and
and
push
fadds
ja
imul
fidivl
mov
jno
jge
and
nop
loope
cmpsl
fmul
dec
pop
cmp
pop
loop
sti
cmp
sub
aad
mov
mov
cmpb
ficoms
adc
clc
cmp
adc
addl
fisttpll
push
out
dec
inc
mov
mov
lock
aad
jmp
xchg
jbe
iret
xlat
aam
imul
mov
clc
aam
es
je
xchg
mov
jnp
mov
rcrl
inc
out
imul
es
clc
dec
hlt
mov
mov
fcom
ret
jmp
jp
mov
push
add
loop
add
pop
mov
cmp
jo
or
mov
gs
sbb
aam
repnz
data16
cmpsl
pop
sbb
dec
xor
adc
pusha
xor
pop
lds
dec
outsb
pop
stc
lcall
aam
popa
jbe
addb
in
or
adc
dec
insb
shr
lret
loope
scas
pushf
or
pop
jne
add
aam
or
in
clc
adc
mov
push
or
lahf
int
xchg
pop
cmp
and
sbb
mov
and
inc
in
icebp
and
je
rcr
push
xchg
and
mov
inc
adc
lret
pop
rclb
add
mov
popf
movsb
mov
sti
sub
fdivrl
adc
and
mov
ret
icebp
pop
jp
dec
inc
cmc
rcrl
aam
jbe
cmc
pop
lods
jl
and
pop
mov
pop
xchg
fstp
mov
or
xchg
fildl
rsm
and
cmp
adc
bound
hlt
pushf
add
pop
shll
lds
jmp
lret
imull
imulb
xchg
out
xlat
out
adc
inc
shl
icebp
inc
sbb
outsl
je
das
jno
out
addb
pushl
xchg
and
aaa
cmp
mov
sub
xor
out
les
push
loop
push
xor
cli
xchg
clc
jl
test
ljmp
loop
inc
pop
jmp
sarl
inc
xchg
jg
mov
mov
jnp
adc
test
sbb
popf
inc
inc
faddl
dec
inc
push
fstpt
insl
pop
add
sbb
xchg
cld
pop
clc
mov
inc
sub
lahf
pop
push
test
pop
imul
sbb
js
rcll
movsb
sub
je
add
sti
push
xor
fstpt
jo
hlt
iret
push
daa
cmpsb
data16
dec
xor
fdiv
enter
out
dec
insb
inc
push
cmpsb
shl
jmp
push
mov
pop
mov
insb
xlat
and
mov
dec
and
inc
jg
je
pop
ficoms
mov
jnp
lret
xchg
or
inc
xor
call
testl
mov
fwait
test
les
imul
inc
mov
mov
call
cli
push
xor
test
jmp
jb
cmp
in
mov
and
sub
xor
mov
cmp
push
pop
jo
mov
adc
mov
lock
in
cmc
in
xlat
jbe
mov
and
iret
invd
xor
in
inc
rol
lea
cmp
inc
push
mov
test
jne
inc
xchg
xchg
decl
or
and
xor
out
pop
cli
cs
enter
adc
dec
stc
pushf
sbb
fcmovnb
insb
cmp
mov
cmpsl
inc
insb
xor
push
xor
pusha
dec
test
fbstp
pop
lds
cs
pop
out
cli
jnp
pop
popa
jno
add
stos
adc
movb
sbb
jp
mov
in
sbb
aas
xchg
xor
mov
decl
sbb
adc
test
xchg
ret
push
or
pop
sub
gs
in
cmc
push
std
jmp
push
mov
iret
decb
mov
sbb
cmpsl
xchg
stos
mov
sub
inc
cs
push
ss
test
pop
mov
add
xor
cld
jbe
push
movsb
aam
lea
je
loop
or
ror
jg
mov
mov
inc
scas
aam
mov
mov
movsb
ja
cmp
lret
mov
ret
pop
sbb
sbb
out
xor
mov
inc
jmp
call
push
add
mov
pop
mov
add
es
dec
mov
jo
xlat
push
movsl
movsl
call
jg
and
cmp
lods
mov
dec
jmp
or
int
or
push
adc
add
mov
sbb
loopne
and
psubusb
lret
test
shll
add
pop
dec
sub
dec
xorl
nop
pop
jb
ret
rcrl
push
dec
int3
sub
dec
xlat
leave
fnstcw
clc
loope
sbb
arpl
and
sarb
mov
daa
out
popa
mov
mov
adc
rcl
jnp
sti
and
mov
stos
sub
push
ret
hlt
ffreep
test
ss
xchg
sub
cmp
push
push
mov
outsb
sahf
cmp
lret
test
or
addr16
mov
push
sbb
pop
mov
fldl2e
std
mov
fstpl
add
out
adc
mov
das
bound
imul
ja
sarb
in
in
adc
jae
dec
rorl
adc
add
adc
or
mov
stc
sbb
or
les
sahf
xchg
pop
push
sahf
push
rorl
push
sahf
pop
pop
push
pop
int
in
fisubs
jg
xchg
push
xor
mov
push
sub
jbe
add
inc
stos
aas
mov
inc
fisubrl
cmp
inc
xor
ror
fsubrs
popf
arpl
adc
pop
dec
inc
sti
and
nop
call
sub
mov
xchg
iret
cli
hlt
and
enter
cmpsb
dec
inc
stc
mov
xor
push
ds
mov
adc
cmp
loopne
ret
out
push
push
or
add
and
decl
pop
mov
lret
clc
fs
push
leave
mov
hlt
insb
push
addr16
adc
or
pop
adc
stos
in
rcr
inc
sahf
and
std
ret
divb
mov
push
fldl
leave
cmovp
add
test
add
outsb
add
andl
ret
add
in
mov
lret
push
mov
aas
cld
test
dec
orl
pop
push
jne
pop
mov
adc
pusha
mov
inc
gs
pop
xor
push
pop
jb
lods
dec
sahf
das
cmpsb
mov
jg
and
push
enter
sahf
cltd
jnp
adc
movsl
push
add
cmc
enter
xchg
inc
mov
fstpl
mov
test
mov
cmc
pop
jo
push
inc
xchg
subl
jne
or
sahf
fdivrp
cld
cld
enter
add
sahf
lds
jbe
cmp
jbe
mov
and
xor
shl
stc
push
push
shlb
cmp
adc
enter
pop
adc
fildll
adc
cmc
fdivrs
std
fwait
add
mov
cmp
test
scas
loop
xlat
sbb
shl
push
inc
das
cwtl
repnz
pusha
push
push
testl
push
inc
jae
or
xchg
fsubs
fstl
andb
xor
aaa
and
stc
pop
fs
or
inc
lods
jb
add
pop
and
aas
push
call
in
xlat
je
sub
dec
pushf
inc
and
dec
inc
push
out
lock
push
cmp
sbb
and
cwtl
xchg
mov
dec
pop
test
dec
fs
dec
pop
out
mov
mov
push
add
clc
sub
sbbb
cmpsl
test
insl
loop
xchg
sub
mov
adc
in
xor
cld
test
sub
iret
mov
lock
jg
xchg
and
inc
jge
fld1
stos
fidivs
rcll
out
inc
test
nop
sbb
test
outsl
mov
jp
pushf
push
push
shr
mov
xor
mov
xchg
dec
movsl
insl
clc
or
pop
rorl
add
add
hlt
fs
and
cmp
lods
lret
push
sbb
divb
xor
mov
cwtl
push
aad
test
orl
lss
mov
lods
lea
in
dec
cmp
das
push
adc
push
pop
sub
pushf
jp
push
sub
ret
imul
hlt
js
arpl
cs
push
pop
cli
hlt
pop
pushf
dec
loopne
outsb
dec
jg
push
sub
lret
test
pushf
jl
loope
fs
nop
jb
ds
jo
cmc
cmpsl
dec
or
inc
pop
lret
fisubrl
js
pop
scas
sub
mov
rcrb
mov
icebp
pop
jle
dec
dec
pop
jmp
mov
ffreep
enter
jae
adc
pop
stc
dec
jg
inc
insl
or
negb
movsb
inc
push
inc
push
cmpsb
mov
lods
aad
cmp
pop
jo
sbb
fcoml
cmpsb
lahf
rorb
add
sahf
jecxz
jo
cmpsl
and
rsm
mov
aam
mov
das
fstps
sbb
xchg
scas
std
push
xchg
cmpsl
pop
mov
xchg
jmp
or
mov
ja
lea
orb
stos
arpl
int
scas
cmpl
in
std
insb
fmuls
arpl
xchg
mov
cld
repz
ljmp
popl
jl
xchg
xchg
pop
xchg
movsb
shlb
js
lods
add
jl
xor
mulb
xor
outsl
dec
push
or
push
sub
mov
iret
pop
mov
push
push
pushf
arpl
cmpsl
pop
jecxz
outsl
fwait
jb
mov
insl
dec
rolb
mov
pop
rcr
data16
rcr
add
scas
xlat
sbb
cmpsb
fldt
adc
and
xchg
push
pop
xor
pop
xchg
jnp
movsb
and
xor
cmpsl
sbb
mov
shrb
notl
icebp
scas
adc
dec
fnstenv
outsb
jg
sbb
push
divb
or
and
fisubs
test
shll
pop
clc
into
pop
loope
sbb
stos
pusha
cmc
mov
mov
push
lods
test
fbld
fdivrs
or
gs
andb
lret
jle
mov
shrb
and
jns
mov
jne
aad
xor
rcrl
test
sbb
push
inc
pop
push
inc
jl
into
fucomp
imul
dec
test
sbb
pop
dec
in
dec
mov
sub
rcll
and
test
mov
movsl
nop
cmp
sahf
mov
and
xor
test
xor
mov
fisubs
xlat
add
add
out
push
mov
mov
and
call
sahf
test
jb
out
repz
push
mov
gs
mov
mov
pop
xchg
pop
xchg
jge
fsubp
mov
push
jg
xchg
sbb
ljmp
stos
jle
loope
jg
ja
pop
xor
out
outsb
pushf
push
xor
movsb
lods
aas
adcl
mov
jae
rcll
stos
call
add
push
pusha
sti
mov
lods
pop
add
cmp
mov
std
insb
adc
test
js
in
mov
jle
icebp
rolb
adc
mov
bound
xchg
mov
js
out
jbe
in
sbb
pusha
add
sub
pusha
bound
sub
cmp
ja
add
jl
fisubrs
sbb
mov
push
sahf
sub
xor
jmp
add
cbtw
pop
cmp
mov
push
dec
pop
dec
rcr
out
ret
in
jnp
or
adc
mov
cmp
loopne
loop
testb
mov
sbb
mov
push
xchg
cmp
inc
cmp
cwtl
test
ficoms
push
xor
xorb
fsubp
xlat
js
mov
mov
negb
in
mov
fisubrs
popa
jmp
sbb
jl
mov
push
mov
push
cmp
sar
push
andb
mov
fwait
mov
or
js
repnz
cmpsb
push
pusha
pop
loopne
add
pop
xor
lods
mov
sub
xchg
addr16
add
mov
cmp
outsb
mov
nop
test
in
pop
arpl
xchg
push
mov
or
jne
das
arpl
outsb
sub
xchg
push
pop
aas
xchg
std
pop
lcall
test
fsubrp
in
dec
sbb
aad
out
clc
inc
lods
xor
and
stos
arpl
dec
pop
xchg
insb
enter
add
mov
jns
loopne
adc
repz
push
inc
inc
pop
or
mov
jp
stos
and
or
jb
inc
loopne
ja
jmp
scas
lods
push
loope
push
lds
mov
push
jbe
outsl
imul
das
mov
push
jnp
adc
jp
loop
xor
jmp
xchg
lea
xchg
loope
aas
cmpsb
push
call
das
jmp
mov
shl
es
pop
test
xor
loopne
cmp
push
in
sbbb
dec
adc
adc
mov
fdiv
dec
add
adc
mov
cwtl
aam
cs
mov
lahf
aaa
jmp
or
xchg
in
push
scas
pop
sti
js
adc
inc
orl
movsb
xor
aas
adc
sbb
lret
ret
cmp
jns
or
mov
xor
mov
outsb
add
adc
es
sbb
and
mov
rolb
ret
xchg
in
addr16
adc
aas
and
cmp
sub
push
jnp
loopne
nop
mov
push
rcrl
rcrl
mov
nop
repnz
mov
pop
movswl
fsubr
out
shll
hlt
mov
add
pop
pop
jle
or
aad
jae
dec
cmc
sbb
out
add
and
push
mov
and
or
or
jge
int
rorl
or
pop
inc
push
adc
xchg
stos
cld
sub
mov
insl
shll
xor
inc
repz
es
aas
add
leave
jns
clc
xchg
push
outsb
push
xchg
push
jno
sbb
mov
cwtl
cmp
das
jbe
aas
push
femms
lods
pop
ss
xchg
sbb
push
or
xchg
push
cmp
scas
out
mov
push
sti
push
inc
adc
add
insl
push
insb
int3
test
dec
js
shrb
loope
sbb
bswap
in
inc
lret
and
test
inc
call
aas
sub
lock
stos
in
aaa
roll
add
repnz
dec
cs
dec
pop
daa
loop,pt
int
in
adc
dec
sarl
sub
xor
repz
dec
sbb
and
iret
pusha
hlt
jo
outsl
xrelease
mov
stc
out
imul
clc
lret
inc
stc
pop
sbb
dec
lahf
mov
inc
or
dec
mov
push
mov
mov
add
pop
sti
lds
xlat
inc
xchg
rcr
mov
lods
add
mov
les
lahf
int3
les
shrb
dec
rolb
pop
xchg
sahf
test
fsub
jbe
mov
jl
pushf
mov
mov
lock
mov
ljmp
cmp
rcll
push
push
movsb
dec
jb
imul
or
ret
push
sub
pop
xchg
insb
mov
fdivs
hlt
loop
jecxz
pop
xchg
cmp
mov
ret
leave
test
in
xor
insb
sub
mov
xor
ret
push
sub
sub
je
push
xchg
jb
and
cs
mov
adc
dec
cmp
push
loopne
cmp
flds
ror
pop
adc
push
test
xchg
cld
adc
xchg
mov
and
fcmovnu
inc
add
cmp
arpl
push
das
inc
xor
or
pop
mov
pop
and
pushf
xlat
pushf
shlb
and
add
and
and
loopne
popa
pushf
lds
push
es
mov
inc
ror
fcomps
xchg
push
or
xchg
push
dec
cmp
push
movsb
int3
push
jmp
movsl
sub
ljmp
cmp
inc
xor
inc
aad
jae
push
cmpsl
icebp
mov
stos
out
outsl
inc
lahf
sbb
out
dec
mov
jmp
sarb
cmp
fadd
mov
in
xchg
nop
les
push
out
sahf
mov
mov
addr16
pop
insl
xor
das
cld
xchg
int
pop
xor
mov
or
stos
outsl
jmp
dec
xor
and
mov
int
jno
in
js
or
clc
sahf
xor
stc
xor
xchg
and
das
cmp
int
lret
mov
inc
adc
mov
fldlg2
test
mov
aaa
fcmovne
es
gs
xor
sarl
add
xchg
inc
cmp
insl
cmpsb
pop
mov
add
push
loope
icebp
xchg
jg
add
xchg
fmul
fisttpll
add
mov
cmpb
jp
mov
out
scas
xor
jno
shll
scas
sbb
adc
out
inc
cmp
fs
leave
mov
sbb
mov
lcall
mov
adc
xchg
inc
xchg
lcall
ss
js
cmpsb
mov
les
push
hlt
pusha
gs
xchg
popf
xchg
das
pop
xchg
dec
enter
cs
lcall
cli
popa
sub
jo
popf
xor
call
enter
or
lcall
sbb
sbb
andb
xchg
popf
test
add
sbb
pop
xor
leave
mov
cmpsb
cmp
jmp
iret
mov
cwtl
ljmp
adc
insl
shr
pop
scas
jae
loopne
inc
sub
leave
or
xor
lret
scas
out
dec
adc
fwait
loope
jp
and
mov
hlt
jne
inc
aad
nop
mov
in
xchg
movsb
xchg
stos
fisttpll
jae
xor
sub
push
hlt
cmp
and
sub
push
dec
insl
loop
ss
mov
sub
inc
shrb
leave
push
sbb
adc
outsb
pop
xchg
cmc
push
add
popa
push
imull
xor
lret
mov
push
jmp
negl
es
add
mov
ds
push
hlt
mov
xor
mov
lret
cmp
pop
mov
imul
popa
leave
jno
mov
aad
shlb
sub
dec
idivl
pop
pop
cmp
inc
ret
mov
lock
lea
adc
add
daa
mov
gs
lds
inc
ds
or
or
or
mov
add
les
das
xor
mov
or
xor
mov
pop
imul
xor
sbb
sbb
inc
and
push
movl
imul
outsb
popa
pushf
std
lret
into
ljmp
in
fcomip
ficoms
jl
xor
iret
inc
sub
jno
ret
pusha
or
test
in
inc
adc
pop
xor
loop
push
gs
jmp
nop
mov
jno
cmpsl
sub
aam
fdivl
sti
mov
inc
jl
and
jp
loopne
jmp
movsb
mov
push
dec
lret
pop
push
loope
divb
fldenv
push
hlt
movsl
int3
das
icebp
das
sbb
in
scas
inc
mov
add
mov
xchg
or
arpl
cmpsb
push
pop
lcall
jae
mov
outsl
cltd
mov
push
pop
jmp
cmpsl
hlt
jle
push
sbb
inc
inc
mov
push
int3
push
jecxz
adc
add
test
mov
mov
jle
and
test
and
in
inc
bound
sub
inc
pusha
cs
jb
xor
aad
mov
mov
cmp
cmp
mov
test
es
or
dec
sbb
mov
push
pop
add
fldt
fidivrl
mov
out
cmp
js
faddl
sbb
xchg
jb
mov
inc
sbb
lock
push
cmp
aaa
iret
pop
cmc
dec
addr16
cltd
movsl
cmp
in
js
jge
outsl
xor
xchg
push
lock
push
cli
jl
cmp
jge
insl
js
cwtl
add
std
adc
mov
cmp
subb
stos
shlb
es
daa
loopne
mov
lock
push
add
pop
xchg
pop
out
or
jno
lods
dec
and
jo
adc
pusha
andb
rcrb
jecxz
xchg
sbb
inc
sbb
add
push
add
lds
ss
roll
js
xchg
in
pop
ror
push
inc
cmp
repz
cmc
or
test
dec
test
rcrl
sub
xchg
jno
iret
mov
fisubs
scas
push
mov
mov
aaa
lds
popa
push
inc
ds
insb
stc
dec
xchg
lret
fs
daa
xor
or
fs
jg
ljmp
repnz
dec
sub
jo
test
inc
mov
mov
dec
in
add
or
rcrl
movsb
cmpsl
scas
mov
xchg
fnstcw
mov
aad
aas
dec
dec
adc
out
jnp
cld
sub
xor
inc
hlt
inc
mov
or
scas
sub
iret
shll
in
and
cld
xchg
ficoml
mov
fdivrl
lea
dec
daa
or
psrlw
inc
sbbl
sub
addr16
and
sti
jae
mov
lret
addr16
mov
jnp
dec
push
mov
out
sub
cmpsl
out
dec
add
pop
rcll
fiaddl
dec
mov
pop
sub
sbb
mov
push
push
outsb
fnstenv
cmp
push
and
jmp
fucom
and
imul
imul
xchg
incb
fcmovnb
loopne
push
or
xor
jne
std
test
iret
pop
sub
sahf
add
mov
cs
mov
outsb
mov
lcall
divl
movsb
jb
jb
pop
idivb
mov
dec
sbb
call
fwait
pop
out
xchg
push
fadds
push
sbb
imul
push
jecxz
mov
stos
mov
sarl
push
rolb
dec
in
jno
dec
int3
es
imul
and
insl
add
mov
cmp
xor
jnp
pmovmskb
pop
inc
sbb
repnz
mov
cmp
mov
push
cld
add
xchg
cltd
int3
out
sbb
pop
or
aas
in
cli
dec
mov
dec
xchg
mov
scas
loope
and
mov
add
mov
shlb
out
std
sub
mov
sahf
jmp
ds
repz
xlat
jnp
iret
rol
shlb
inc
pop
jmp
and
clc
xchg
adc
aaa
xor
pop
cmp
nopl
dec
fadds
ja
mov
pop
data16
fidivs
in
xchg
add
movsl
pop
jne
in
dec
mov
loop
inc
in
or
adc
roll
in
xchg
outsb
pop
jmp
and
in
inc
adcl
test
test
add
in
push
add
xchg
mov
push
popa
xor
pop
jp
jne
mov
int
cmpsl
sub
adc
jns
mov
nop
xchg
xor
mov
push
sub
inc
aam
imul
daa
xchg
daa
fcmove
pop
aaa
scas
sub
dec
pop
pusha
mov
or
inc
pop
adc
jecxz
js
jmp
mov
cmp
hlt
mov
test
inc
ljmp
jp
out
push
enter
sti
aad
adc
jns
inc
divb
jb
leave
repnz
out
adc
mov
add
dec
jb
sbb
fs
cwtl
add
sbb
dec
insl
mov
daa
lret
mov
xor
jno
stos
fiaddl
popa
incb
push
sbb
icebp
mov
adc
sbb
lret
scas
and
adc
movsb
lds
stos
xlat
pusha
mov
cmpsl
mov
sbbl
and
jbe
xchg
test
ret
cli
in
out
mov
dec
xor
jno
sbb
pop
in
jge
jb
das
or
out
lret
sti
add
jmp
notl
cmpl
jbe
lret
or
and
xchg
imulb
in
jp
std
gs
sub
jecxz
out
les
xchg
sub
jb
inc
dec
or
scas
fisubrl
mov
lods
xchg
popa
dec
ljmp
enter
int3
or
or
insb
arpl
cli
call
in
xchg
cmp
das
test
movsb
out
je
inc
dec
and
dec
scas
inc
or
jmp
aaa
push
add
mull
das
jmp
jns
jb
push
inc
xchg
mov
push
stc
movsl
fdiv
movntps
fdivs
jb
aad
mov
popa
iret
dec
dec
je
sub
xor
sbb
leave
add
mov
xchg
call
sahf
in
pop
in
and
ja
push
notb
fs
imul
xchg
scas
lods
fwait
xor
pop
je
pusha
xchg
pop
loop
pop
sti
pop
rcll
and
xchg
int3
mov
push
mov
stos
mov
cmp
jns
loopne
inc
inc
lods
idivb
sub
and
xor
pushl
jl
inc
fwait
dec
mov
cmp
mov
jbe
add
push
adc
addb
sbb
pusha
in
std
dec
outsb
and
xlat
inc
fisubl
std
stos
pop
cmp
push
lds
jecxz
mov
rolb
cltd
rclb
scas
sbb
xchg
dec
xchg
repz
and
pop
cmp
xor
lret
inc
shlb
jmp
jne
aas
ret
jne
test
shll
into
std
lods
popa
inc
add
ret
jg
add
mov
jecxz
test
jg
js
pop
aas
cld
loope,pt
xchg
test
cmp
int
test
lods
xchg
dec
sbb
add
das
pop
fimull
jmp
imul
scas
lea
cmpsb
mov
xchg
push
movsb
xor
add
sbb
jp
cmovbe
jmp
mov
sbb
and
rol
add
stos
adc
dec
into
lods
dec
inc
add
rol
mov
lret
pop
stc
xor
add
adc
cmp
xchg
adcb
pusha
push
adc
jecxz
into
pop
lret
pop
mov
rcrl
ja
aam
imul
aaa
push
xchg
jne
sub
test
movsb
ljmp
fneni(8087
shlb
mov
lea
jge
outsb
pusha
test
lock
push
mov
xor
push
jno
sahf
test
lret
push
jbe
ror
outsl
ds
fidivrl
sub
enter
loopne
out
fs
mov
jo
add
mov
jnp
mov
repnz
cs
inc
into
jo
shlb
mov
jmp
jg
sbb
int
mov
mov
push
cld
mov
mov
rcrb
push
test
ret
mov
pop
mov
fists
add
pop
fs
mov
push
sub
lea
inc
call
ljmp
fsub
mov
cld
jno
shl
rol
je
aas
cmpsb
and
movsl
rclb
jge
test
aad
popf
stos
jmp
idivb
fnstsw
pop
adc
mov
push
inc
mov
in
cmp
jle
xchg
xor
mov
addr16
or
pop
in
push
bound
push
add
icebp
insl
xchg
cltd
stos
inc
cmp
inc
cmp
popa
xchg
mov
adc
xchg
dec
lea
mov
xchg
out
pusha
lods
out
cmp
add
mov
dec
adc
add
sbb
or
push
xchg
sub
and
sub
mov
xchg
add
sbb
jl
sahf
adc
cmp
outsl
add
insl
push
mov
inc
sub
dec
ret
shlb
insb
mov
negb
mov
mov
pop
mov
orl
test
notl
lods
stos
sbb
or
aam
xor
aas
mov
push
jae
popf
push
push
sub
js
loope
push
test
lahf
or
jo
daa
inc
dec
jnp
jmp
fldenv
movaps
xchg
inc
inc
sub
fsubr
bound
lods
mov
insl
or
and
lods
push
add
xor
mov
or
xchg
fwait
lods
ja
orb
or
aas
lret
sbb
jns
scas
arpl
in
imul
aad
aam
inc
xorb
lock
rcrl
jno
in
out
movsb
bound
or
mov
xchg
mov
bound
jbe
aad
test
xor
int
mov
cmovne
dec
icebp
popa
cli
pop
sub
jle
imul
pop
mov
out
mov
jno
push
fildll
xor
aas
mov
mov
xchg
jo
stos
sub
mov
in
jmp
mov
pop
pop
pxor
or
das
cltd
mov
jno
push
adc
shrl
mov
lret
out
adc
sub
shll
mov
push
add
cwtl
arpl
arpl
nop
cs
add
or
in
sbb
jns
mov
mov
movsw
repnz
jmp
rcll
xor
insb
mov
jno
and
popa
dec
xor
shlb
sub
dec
rcrb
fs
push
stos
mov
aad
lock
outsl
mov
jns
jns
rorl
sbb
je
xchg
movsb
in
fucomp
fcmovnu
andb
push
xor
rorb
push
xchg
xor
call
push
cmp
outsl
frstor
ja
mov
adc
imul
push
in
pop
xlat
add
xor
inc
cmpl
aad
mov
loop
pop
xor
mov
push
stos
and
icebp
jae
loope
fidivrs
mov
sbb
xchg
in
push
add
cmp
andb
sarl
mov
shlb
testl
repnz
out
add
lret
mov
notb
or
cmc
sbb
and
shlb
xor
lods
in
hlt
fucomip
adc
cld
adc
mov
arpl
dec
test
lock
push
jmp
ds
add
sti
add
dec
pusha
xchg
cld
inc
mov
out
cld
inc
cmp
or
push
xchg
push
fsub
lret
mov
loop
pop
out
xchg
scas
gs
ret
xchg
push
imul
cld
lods
pusha
loop
mov
jae
mov
add
jb
rorl
push
mov
repnz
dec
sbb
dec
dec
cltd
mov
xchg
mov
scas
fcom
push
int
sbb
jb
jmp
jne
jg
fcmovnb
hlt
aaa
lds
jae
lret
shr
jae
sub
mov
jb
ficompl
inc
decb
pop
insb
xorl
testb
inc
cmpsl
mov
push
rorb
inc
cmp
mov
dec
lds
or
sahf
xchg
in
out
push
xchg
pop
jecxz
sbb
into
lds
or
cmc
frstor
popf
mul
hlt
cmp
add
and
xchg
inc
pusha
adc
jnp
popf
mov
into
subb
inc
mov
cmp
inc
leave
ljmp
pushf
notl
mov
gs
fidivl
clc
fwait
scas
fsubp
cmpsl
std
pop
leave
adcb
mov
std
xchg
cli
push
xor
imul
push
jnp
fimull
ficompl
lds
ficoml
push
icebp
dec
icebp
cmp
mov
pop
ret
inc
mov
mov
aam
dec
push
int3
pop
mov
into
imul
aad
movsb
fisubrl
cli
cmp
addl
xor
subl
call
inc
dec
ljmp
jns
pop
mov
jg
divl
pop
scas
jns
andl
cs
fsubrl
dec
jmp
xchg
push
ud1
pop
arpl
mov
ljmp
sub
incb
add
push
sub
negb
mov
sub
pop
adcl
pop
enter
les
jns
popf
sub
xchg
scas
jae
mov
loope
repz
out
xor
sbb
data16
dec
dec
mov
mov
movsb
sub
cmpsb
dec
jmp
jns
inc
out
pop
inc
and
jl
add
pop
xor
push
xor
dec
fistl
and
ret
inc
nop
mov
xor
outsl
pop
mov
dec
psubusb
je
mov
int3
mov
out
xor
mov
xor
add
sub
inc
and
mov
xchg
shrl
or
or
or
fisttpll
pop
push
lods
hlt
insl
sub
sti
pop
inc
xchg
jl
in
inc
add
push
add
ss
shrb
sub
stc
pop
mov
sbb
sbb
lock
cmpsb
mov
dec
push
icebp
sub
cmpsl
das
movups
aaa
xchg
lcall
xor
rclb
xchg
ja
aad
fidivrl
cmp
lret
lret
movsl
test
ljmp
mov
pop
dec
jl
xchg
mov
adc
mov
cmpsb
dec
repz
imul
bound
lds
add
inc
xor
sti
jo
mov
push
mov
and
pop
jle
fists
mov
pusha
mov
pop
pop
and
in
fcmovnu
push
sub
fimull
push
int
jb
cli
push
mov
popf
jb
in
cmp
aam
std
pop
out
imul
orl
mov
ja
cwtl
sub
cli
mov
mov
mov
adc
adcb
sub
test
inc
pop
insl
dec
out
aas
mov
ficomps
insb
xchg
pop
pop
popl
out
push
lahf
mov
jno
sub
adc
ret
je
outsl
cmp
call
test
jp
int
jle
cmp
add
fcmovnbe
adc
mov
inc
pop
mov
adc
sbb
insb
push
cltd
cmc
jae
sub
jns
aas
int
fstl
lret
push
mov
imul
lock
shr
outsl
xchg
push
or
inc
mov
pop
push
xchg
mov
cmp
iret
jge
push
adc
pop
sti
push
and
sbb
jp
std
mov
repz
aam
adc
insb
insb
xchg
stos
jle
icebp
sti
js
add
push
aas
sbb
and
movsb
sub
and
idivl
and
mov
xorb
sti
ja
jp
mov
cltd
pop
push
push
xchg
test
enter
sbbl
add
stc
pop
shr
repz
call
cmp
add
or
int3
sbb
int
cmp
sub
mov
push
inc
and
cltd
mov
push
je
cmp
add
cs
cmpsb
cmpsb
pop
mov
or
or
dec
sahf
pop
sbbl
push
xchg
imul
popa
lret
out
xor
data16
inc
or
dec
mov
sub
ja
push
xchg
inc
jbe
jb
add
ja
inc
andl
xchg
mov
out
mov
shrl
imul
test
mov
push
fwait
xor
rcl
xor
dec
xchg
scas
shrb
stos
pop
es
std
xchg
shr
inc
push
xor
movsl
pushf
mov
dec
dec
xchg
aam
test
cmp
scas
clc
stos
sub
inc
out
cmp
pop
test
cmp
add
testb
mov
rol
scas
adcb
add
cmp
push
xchg
or
iret
lret
push
cmpsl
sahf
addb
divl
in
jmp
nop
repz
mov
je
fs
xchg
arpl
outsb
push
lcall
das
adc
xchg
inc
jbe
stc
rcll
imul
jns
push
xor
stc
and
aam
xchg
cli
pop
push
add
mov
fldl
xchg
mov
imul
cmp
cmp
pop
rcr
cmpsl
outsb
bound
or
insl
pop
scas
insb
into
cmp
cmc
das
pushf
cmp
xor
mov
xlat
ror
cmpl
jl
pop
xor
sub
pusha
addr16
pop
sti
mov
jb
shlb
ss
mov
push
scas
lods
subb
cs
cmp
sub
inc
popf
adc
and
or
test
fldt
out
xchg
pop
nop
xchg
repz
jo
fistpll
loopne
jo
dec
inc
dec
mov
or
xchg
movsb
or
pop
sub
int
or
outsb
pop
push
shll
iret
lds
adc
fisubrs
outsb
xor
mov
push
dec
inc
daa
add
repnz
out
dec
aaa
in
or
lea
imul
cmp
cmp
inc
fwait
das
and
stos
dec
and
in
and
push
push
jle,pt
jle
jae
lcall
pop
test
sbb
or
push
divb
test
sbb
cwtl
mov
mov
mov
addr16
popf
daa
and
out
stc
shl
add
sti
inc
cmc
mov
lock
adc
mov
inc
insb
inc
mov
mov
xchg
pop
subb
xor
add
or
clc
nop
jmp
jmp
loope
and
xchg
js
dec
stc
or
sahf
mov
pop
dec
xchg
adc
fdivrp
or
inc
mov
inc
and
ds
iret
dec
loop
xchg
or
push
cmp
outsl
cld
push
std
loopne
xor
mov
mov
cmpsb
pop
std
popf
jns
stos
out
add
push
mov
movq
out
cli
or
mov
xor
jg
or
aas
aaa
adc
scas
jp
pop
jne
retw
sbb
pusha
add
mov
dec
testl
test
dec
pusha
popa
sub
repz
inc
cmovp
in
mov
pop
sbb
mov
arpl
push
jmp
stos
lret
pop
sub
rcrb
inc
movsl
xchg
push
and
xor
in
mov
les
aas
mov
mov
push
lea
mul
sub
test
sbb
ja
push
leave
fmuls
xor
pusha
aam
and
loopne
mov
das
inc
pushf
les
jae
mov
jno
adc
cs
adc
sbb
and
test
mov
add
lahf
cmpsl
sbbb
aam
inc
sub
sbb
sub
cmp
jne
dec
jb
clc
push
jecxz
lret
stos
inc
das
push
adc
push
mov
cltd
addr16
mov
and
mov
addr16
jle
ret
jl
aaa
add
fnsave
in
lahf
sub
and
sub
cltd
mov
jno
cs
fdivrs
add
sahf
push
push
pushf
hlt
add
inc
iret
and
lock
jae
mov
jbe
jo
xor
loopne
gs
xor
jg
dec
int3
test
cmp
pop
jecxz
and
inc
mov
mov
xor
jle
or
lahf
push
lds
mov
loop
fidivrl
xchg
addb
inc
add
pop
repnz
xchg
mov
clc
int3
and
mov
sbb
jge
mov
dec
mov
dec
push
icebp
leave
stos
adc
insb
int
cli
int3
lea
mov
iret
lahf
lds
or
out
aaa
test
dec
lcall
jmp
je
mov
insb
leave
pop
xor
xchg
shll
jne
pop
cwtl
sbb
or
jnp
into
and
mov
or
lds
cmp
push
aaa
shlb
mov
mov
sbb
stos
mov
into
sbbb
pop
dec
push
sub
pop
test
sti
nop
fwait
pop
repz
lods
jg
mov
outsb
inc
in
test
sub
mov
std
cwtl
push
mov
rcrl
test
add
and
gs
xchg
lock
pop
dec
push
push
fnstenv
xchg
xchg
addl
mov
xor
sahf
mov
cmp
xchg
lock
jge
inc
insl
scas
inc
lods
and
ret
mov
outsl
inc
push
shlb
add
jecxz
iret
cmpl
pop
cmp
nop
popa
and
imul
or
xor
lods
jge
sub
pop
andb
add
mov
push
loop
popl
cmp
jp
xchg
std
aam
add
idiv
push
sbb
loope
loop
pop
lock
fsubrl
and
out
into
jnp
adc
mov
pop
mov
push
xor
jp
dec
das
inc
js
jnp
sub
mov
mov
jge
out
lret
cmc
enter
sbb
rcr
cwtl
or
imul
icebp
xor
daa
mov
add
testb
xchg
cld
dec
lcall
bnd
cmpsl
jl
sbb
in
dec
mov
shlb
cwtd
pop
cmpb
dec
addb
arpl
xor
dec
cld
es
iret
cmpsl
into
push
fcmovu
addr16
bound
rorl
ss
xchg
shlb
push
push
pushf
pop
add
dec
call
fildll
pop
inc
sbb
jmp
mov
xchg
xor
testb
mov
popl
out
xchg
jb
aas
mov
adc
fdivs
insl
pop
pop
cmpl
insb
nop
loop
lods
push
mov
shlb
push
or
cmpsb
sbb
into
add
sbb
jae
mov
outsl
adc
and
jg
icebp
or
inc
and
cltd
jmp
dec
push
or
or
and
out
cmpsl
mov
xchg
jb
xor
enter
sbb
aaa
pop
push
das
int3
mov
int3
sub
pop
leave
mov
add
push
insb
push
mov
jg
sub
addb
jb
scas
push
and
push
cmp
out
dec
insl
pmulhuw
subl
pop
scas
sbb
jmp
ret
sub
sahf
xor
outsb
sahf
cmc
sub
rol
pop
imul
ret
push
pop
pusha
loope
in
sbb
pop
xchg
sbb
or
adc
adc
xchg
add
jmp
pop
inc
gs
jo
fidivrl
movsl
cmp
fcmovnu
push
cmpsl
dec
ss
xchg
fsubs
inc
movsb
icebp
xchg
xchg
mov
adc
ljmp
push
sbb
shr
arpl
in
inc
iret
sbb
icebp
mov
fdivl
pop
nop
xchg
stos
icebp
mov
xchg
xchg
add
and
sbb
andl
js
shl
push
daa
dec
in
out
jg
aaa
mov
ljmp
int3
movsl
dec
ds
dec
or
mov
mov
sub
inc
dec
xchg
pop
xchg
or
aaa
lret
out
aam
std
jmp
test
xchg
or
pop
int3
andl
mov
aam
sub
filds
sub
adc
mov
in
popa
lock
inc
xor
data16
mull
in
push
out
nop
in
pop
jb
mov
push
inc
xor
dec
sbb
test
sbb
dec
xor
mov
int
cmp
rcrl
das
aam
add
push
push
les
rclb
icebp
push
mov
cmpsl
push
cmp
inc
cltd
iret
push
jo
mov
aad
add
dec
adc
js
js
inc
sub
out
mov
pop
sub
mov
lret
ja
inc
mov
aam
mov
lock
inc
dec
out
out
add
inc
es
adc
inc
inc
shlb
mov
gs
sbb
or
aad
xchg
pop
ret
xchg
ret
mov
add
push
and
pop
cltd
mov
ret
std
lret
loope
fwait
pop
addr16
push
in
sbb
and
pop
adc
out
lods
sub
xor
insb
or
pop
adc
into
inc
lcall
cvtpi2ps
sub
mov
jnp
or
xchg
mov
or
xchg
icebp
adc
jo
xchg
lcall
jge
dec
inc
jle
mov
scas
shl
pop
or
add
sub
ja
mov
leave
inc
push
cmpsb
or
pop
or
mov
les
imul
inc
xor
fldt
ljmp
cli
loopne
sahf
jecxz
cmp
lock
clc
pop
cmp
cmpsl
mov
mov
clc
pop
adc
xor
cmpsb
adc
push
xor
mov
je
jg
jg
std
dec
lcall
bswap
inc
sub
faddl
ret
jb
pop
cmp
mov
in
notb
lock
jne
lock
movsl
jecxz
aam
push
pop
fisttpll
leave
mov
lcall
sub
loope
mov
lds
ljmp
jmp
add
popa
imulb
mov
div
add
outsl
imul
mov
fbstp
adc
sub
fiadds
popa
ljmp
rcr
or
add
movsb
mov
out
in
lret
pop
sub
mov
roll
aad
jle
xchg
adc
or
adc
add
in
ret
dec
push
aaa
jle
call
jg
ret
std
imul
ss
jns
out
xor
cmpsl
or
dec
int3
lahf
sub
adc
cld
insl
sbb
mul
cmpsl
test
inc
push
xlat
stos
mov
jge
sbb
rorb
dec
mov
mov
inc
jecxz
je
outsl
insb
shlb
mov
lods
jge
stos
jne
rorl
cmp
push
lock
or
pop
jg
testl
repnz
xor
cmpsl
add
sbb
dec
xor
lret
mov
fucomip
js
cltd
mov
popa
lods
jmp
xchg
sub
mov
gs
add
fcoml
push
movb
rclb
mov
lret
arpl
and
pop
jmp
mov
cmpsl
notb
pop
in
and
repnz
fwait
imul
inc
fisttpll
xchg
xor
addr16
sbb
outsl
mov
xor
out
push
pop
add
adc
int3
inc
mov
xor
movl
xor
jnp
push
ja
or
outsb
inc
ja
popf
add
stos
int3
mov
sbb
pop
dec
xor
mov
or
lcall
sub
mov
push
lret
xchg
xor
adc
fisttpll
lret
frstor
lahf
mov
bound
ljmp
xor
in
stc
cmc
jno
mov
push
lret
cmp
cmp
popf
push
out
dec
dec
rolb
cmp
xor
mov
ret
rorb
hlt
nop
fdiv
or
gs
jle
decl
mov
lock
cs
jg
cmp
mov
push
rclb
andb
jle
cmc
sbb
and
sub
sti
cmpsb
mov
dec
bound
lds
jo
pop
loope
cmp
dec
inc
cmp
xchg
jg
aaa
aad
mov
pop
mov
mov
xchg
fisttps
adc
aaa
xchg
stos
sarl
inc
mov
push
pop
mov
mov
es
sti
lods
adc
xor
out
dec
jb
sbb
and
jmp
and
rcrl
mov
lods
inc
out
xchg
push
push
pop
ficoms
call
stos
push
jl
addl
enter
int3
sub
mov
sbb
ds
fdivs
add
mov
mov
adc
rclb
push
adc
pop
push
jge
mov
dec
jmp
lret
test
mov
xor
sub
test
xchg
push
jmp
sub
insl
ret
xchg
imulb
gs
jb
out
jno
test
and
outsb
lcall
jle
jl
push
inc
out
xchg
mul
cmpsl
ret
push
lods
into
inc
or
mov
sub
scas
sub
rolb
mov
lds
xchg
bswap
lret
and
repnz
and
andpd
ja
out
lahf
lret
fnstsw
jle
push
scas
inc
mov
inc
cmp
xchg
je
cli
and
or
lods
loope
mov
scas
add
fs
mov
lods
out
clc
sub
lds
xor
loopne
xchg
dec
shlb
ss
fadds
pop
movsb
push
mov
xchg
call
pushf
add
fcmovnu
popa
cltd
lds
mov
je
push
pop
and
mov
shlb
sbb
nop
icebp
stos
cld
movsb
mov
fwait
sub
mov
push
mov
cmp
xchg
ret
scas
mov
iret
fcoms
jne
mov
inc
in
sbb
xor
imul
imul
inc
lock
movsl
push
js
mov
stos
mov
jns
push
jle
inc
lods
addb
sub
jo
sbb
icebp
inc
sub
sub
sbb
jg,pn
cmp
inc
sub
cmpsb
sbb
adc
pop
mov
xchg
inc
decl
add
movsb
pop
adc
lcall
mov
ret
pop
jb
push
mov
pop
jbe
fcoms
push
ret
push
adc
imul
outsl
fsubrl
adc
int3
je
cli
mov
add
pop
scas
dec
cmp
sbb
loope
push
loopne
push
popf
imul
fdivrs
popf
or
and
and
mov
jmp
aad
shlb
sub
sbb
cmp
inc
enter
sbb
sarb
arpl
inc
cs
inc
rolb
jbe
xchg
dec
jns
adc
adc
mov
outsb
stos
imul
mov
movsb
inc
mov
xchg
sbb
popf
mov
jl
pop
push
and
mov
and
sahf
mov
or
ds
in
add
test
scas
jae
push
xor
enter
outsl
mov
js
mov
sub
out
test
pop
out
push
loop
lcall
out
pop
addr16
clc
mov
mov
mov
push
add
push
js
xchg
xor
outsb
pop
pop
dec
jp
sbb
out
xchg
rcrb
aad
fmull
arpl
push
call
fdivrp
enter
stos
mov
lods
or
mov
sbb
divl
push
mov
lods
gs
inc
mov
xor
cmp
add
ja
xlat
cli
push
sub
mov
sub
xchg
fwait
inc
jnp
add
mov
icebp
push
dec
xchg
dec
sbb
mov
cmp
jns
subb
fcomi
movsl
inc
mov
mov
out
adc
or
cmpsb
gs
aad
loope
enter
inc
jmp
mov
push
jl
jle
cwtl
mov
jne
and
mov
or
adc
xchg
jno
pop
and
pop
mov
add
mov
add
pop
cmpl
mov
sub
dec
nop
cmp
add
in
jns
data16
pop
sub
addr16
mov
hlt
xor
es
adc
mov
scas
sub
mov
sbb
shlb
mov
loopne
and
mov
cld
fnstenv
pop
cmp
stc
aad
cltd
jl
cmc
add
int3
xchg
xchg
or
outsl
call
xor
inc
mov
pop
out
mov
ss
rorl
je
lods
cwtl
and
ljmp
out
adc
sbb
loope
mov
jmp
sti
stos
rorb
rclb
bound
add
xchg
cmc
jo
cmp
ds
add
mov
jge
fmuls
mov
fst
ret
mov
gs
mov
add
xor
je
loopne
ficoms
cld
xrelease
or
rclb
sahf
cs
cmp
jne
push
push
mov
jae
test
out
cmp
fldenv
xor
sub
and
mov
add
inc
mov
or
pop
rcll
inc
mov
insl
add
xorb
flds
inc
movsb
xchg
push
sbb
cmc
add
dec
ss
ljmp
mov
ret
sbb
cmp
popf
or
aaa
mov
inc
cmc
mov
ljmp
ds
outsb
inc
pop
pop
popf
lock
jno
jle
or
insl
scas
loop
sbb
xor
cs
call
aas
xor
pop
insl
sub
movsb
popa
pop
and
push
dec
push
xchg
add
and
and
cmp
aad
sub
sti
ficoml
lock
ss
sbbl
push
fcmove
dec
mov
jae
dec
mov
jnp
jge
aas
fsubr
inc
jbe
xchg
inc
cli
popa
dec
test
and
pusha
fdivrs
ffree
sbbl
in
ret
es
fs
lock
fldln2
jae
pop
xchg
stc
jns
addr16
lock
jne
imulb
fists
mov
inc
and
rorb
cmc
enter
cltd
outsl
cmp
xchg
jb
mov
adc
lods
mov
pop
mov
mov
sarb
rclb
lcall
adc
and
pop
add
adc
xor
mov
movb
jae
mov
dec
inc
movsl
out
jmp
adc
shr
sub
mov
enter
gs
xor
lret
mov
js
dec
clc
sbb
rcl
mov
mov
sti
add
sub
mov
jge
icebp
test
mov
mov
aas
nop
sub
xchg
mov
int3
jge
cmp
fstps
adc
sub
dec
repnz
test
das
mov
filds
bound
and
ficoms
lock
and
fildl
sbb
jae
test
sub
mov
dec
scas
push
lret
or
into
mov
sbb
repz
and
test
sub
sbb
cmp
movsl
loope
push
jp
and
jbe
stc
idiv
shrb
sti
add
cmp
je
lret
in
lea
lods
pusha
cmpsb
adc
cmp
rcrl
add
mov
lds
mov
lret
mov
popf
repz
jle
das
xor
adc
add
or
push
pushf
dec
nop
cmc
adc
and
cmc
push
jo
xchg
shlb
jb
ja
repz
push
icebp
mov
sbb
mov
sbbl
cmc
test
mul
icebp
mov
scas
int
jge
inc
mov
in
pop
mov
std
adc
pop
push
jne
dec
xchg
pop
adc
mov
sbb
and
sub
jns
mov
std
das
push
test
mov
lds
or
ret
js
sub
sti
mov
pop
push
addr16
pop
mov
into
cmp
cmp
repnz
mov
mov
outsb
mov
mov
cmpsb
out
insb
xchg
call
mov
pop
dec
insb
xchg
mov
xchg
jge
push
aas
push
data16
rcll
rcll
inc
sub
rcl
fs
pop
or
mov
daa
sbb
lea
inc
mov
xchg
pop
out
movl
add
dec
inc
mov
or
rcrb
sahf
gs
fmull
cli
sahf
cli
std
rclb
adc
fildl
andb
push
push
negl
popf
aas
push
mov
xchg
lods
pop
or
arpl
dec
repnz
xchg
mov
xor
mov
push
ret
gs
std
aas
pop
inc
fwait
andb
mov
pop
dec
and
jnp
jno
inc
sub
mov
jl
movsb
cmc
adc
mov
cli
ret
add
int
rcll
ljmp
jae
cmp
out
ret
in
outsb
cmpl
in
cld
int3
subl
cmp
pop
out
mov
lret
ds
rcrl
sarb
sbb
shlb
loop
add
leave
int
xor
ret
xor
adc
mov
push
scas
cmp
out
popa
insl
pop
cli
iret
roll
inc
push
clc
xor
jp
adc
adcb
loope
or
cmp
fst
das
in
lahf
or
mov
out
jmp
mov
jbe
sbb
rcll
mov
in
jne
adc
popa
pop
mov
repnz
aas
push
xchg
ljmp
sbb
lahf
cmpsb
lds
ljmp
imul
adc
out
rol
or
test
mov
lahf
daa
xchg
add
dec
ljmp
lea
jp
int
pop
sbb
xchg
or
or
cmc
shlb
xchg
or
imul
sub
pop
daa
push
sub
jo
xor
aad
inc
leave
sahf
mov
test
lcall
rcll
pop
int
lret
in
movsl
incb
xor
mov
sbbb
and
stc
lret
inc
mov
test
je
je
jecxz
xchg
mov
or
adc
enter
int
flds
xor
sub
mov
shl
xor
or
mov
mov
mov
sbb
iret
sub
xchg
gs
pop
mov
xor
lahf
and
dec
mov
push
mov
xor
inc
dec
inc
jne
xor
leave
lcall
mov
out
inc
repnz
mov
pop
add
in
inc
out
cmp
mov
mov
repz
pop
aam
add
add
js
mov
jecxz
fisubl
dec
push
int3
loope
push
pop
daa
pop
dec
and
sbb
loop
sub
repz
pop
inc
enter
pop
fs
das
fmul
jno
and
leave
pushf
imul
test
test
jg
frstor
movsb
inc
cli
cltd
mov
dec
notb
out
scas
and
jo
cmc
and
jae
jbe
movsl
xchg
push
mov
xchg
daa
arpl
clts
scas
pop
popf
jne
pop
into
mov
lcall
int
push
mov
mov
xchg
rcrb
cmp
pop
mov
sub
sbb
lcall
inc
ret
xchg
adc
fiadds
pop
js
aam
lahf
push
ficomps
sbb
les
add
mov
sub
nop
mov
mov
mov
or
mov
call
jecxz
aaa
xor
ret
mov
sbb
lahf
jl
or
idivl
push
mov
repz
sti
sub
jb
xlat
xchg
lcall
cmp
ficomps
adc
xlat
addl
sbb
pop
jmp
enter
pusha
and
std
ret
or
jl
xchg
in
jmp
push
cwtl
jbe
xor
ret
in
fsubl
xchg
dec
xorb
dec
es
out
int3
xchg
cmp
cmp
bound
sub
pop
or
test
mov
mov
or
sbb
dec
jb
arpl
mov
pop
aam
fstpt
sbb
insb
imul
cmpsb
enter
push
clc
iret
pushf
ficoms
pop
mov
jge
dec
jns
in
and
cmpb
loope
mov
and
mov
sahf
lret
cld
cmpsl
loope
sbb
inc
xor
ret
cmp
enter
div
adc
rcl
aam
push
in
and
cmp
lds
jmp
xadd
xor
mov
sbb
adc
sub
stos
sbb
aas
in
test
jo
out
outsl
pop
and
lea
push
jge
iret
cmp
in
lret
jp
bound
arpl
test
lahf
sbb
rcrl
xchg
loope
pop
push
inc
mov
int3
cmp
mov
in
push
mov
push
mov
into
xchg
or
rcr
outsb
imul
mov
stos
bound
push
out
lcall
mov
mov
and
xchg
test
cmc
push
sbb
cmp
roll
popa
sbb
dec
cmp
fnstcw
in
sub
andl
add
inc
arpl
inc
lret
push
sbbl
pop
add
cmp
adc
pop
jg
and
jae
aaa
jecxz
xchg
fiadds
inc
dec
aam
ret
loope
mov
cmp
mov
test
inc
sbb
lods
mov
ret
sub
push
jg
mov
test
movsl
gs
xor
cld
aas
jbe
test
push
test
and
daa
lods
mov
sbb
scas
pop
pop
jns
incb
imull
negl
out
dec
cmpsl
adc
in
push
push
popf
insb
xchg
test
inc
push
ret
mov
out
mov
inc
pop
imul
push
push
sbb
insw
jae
aad
cli
std
cmp
rorl
aad
mov
test
xchg
int
pushf
cmpsb
sub
call
sbb
lea
loopne
jmp
fwait
je
lock
push
adc
inc
dec
sub
add
jo
js
xchg
adc
ljmp
cmpb
inc
add
in
lahf
in
or
sbb
insb
push
and
xor
mov
pop
shlb
shll
pop
mov
les
sarl
leave
repnz
in
divl
mov
mov
mov
mov
pop
mov
in
fbstp
bound
mov
inc
pop
std
inc
xor
add
dec
enter
mov
lods
mov
xchg
jne
add
loopne
pop
pushf
ds
mov
rclb
mov
jg
push
das
or
ljmp
pop
fcoms
or
shrl
call
dec
ss
fildl
cltd
loope
insl
inc
xchg
mov
push
sbb
ds
cmpsl
or
cmpsb
push
repnz
fwait
std
iret
in
add
nop
xor
cmp
ss
bound
dec
xor
sbb
cmp
ss
popf
stc
scas
rol
mov
daa
mov
dec
xor
pop
add
pop
mov
xor
jbe
popf
xchg
sub
inc
jb
out
fucom
push
sbb
dec
sbb
xor
fwait
daa
or
xchg
sub
cld
pushf
int
mov
loopne
or
movl
or
jecxz
fs
and
and
mov
pop
mov
mov
sbb
or
sub
addr16
and
pushf
sbb
mov
sub
inc
push
jae
stos
pushf
stos
cmpsb
jg
xlat
fldl
loope
and
mov
shrl
lea
std
xchg
cmp
mov
aas
xchg
sub
sbb
lds
out
mov
push
enter
pop
enter
jb
shrl
lea
or
test
bound
cmp
xchg
movsb
mov
cld
xchg
cmp
loope
jbe
xlat
jge
mov
popa
lret
add
inc
dec
adc
add
push
cmpsl
lock
lret
shl
mov
outsb
mov
mov
jg
xchg
cmp
add
xor
xor
and
movsb
dec
and
inc
fdivrs
lret
cmpsl
out
sbb
jae
outsb
leave
pop
or
and
fcmovbe
cwtl
fucomi
das
jle
jns
scas
dec
mov
dec
sub
test
mov
sub
mov
test
push
push
test
jo
push
push
pmaxub
fistl
fdivl
jo
int3
mov
pop
mov
mov
cltd
pop
lods
xlat
cmpsl
movsl
push
adc
addr16
jmp
xchg
mov
and
sub
test
cmc
lahf
cltd
aas
outsb
faddp
xor
or
aad
push
arpl
add
cli
mov
pop
push
mov
adc
mov
or
mov
mov
add
mov
imul
in
xchg
test
cmpsb
push
aad
xchg
dec
push
lods
repnz
fcompl
mov
jg
das
and
mov
inc
or
test
outsl
lds
movsl
sub
sahf
test
rol
scas
mov
sub
ss
cmpl
adc
xor
add
stos
mov
addr16
mov
mov
lock
or
in
xor
lods
push
cmp
and
dec
popa
repz
sbb
push
jg
stc
mov
dec
shlb
xor
jecxz
mov
add
shr
inc
movntq
nop
movsl
imul
push
push
jg
push
mov
mov
mov
lea
xor
shll
inc
dec
inc
test
push
push
xchg
flds
lods
shlb
clc
scas
loop
sahf
ds
stos
pop
mov
inc
jmp
fstps
jmp
xor
xchg
pusha
scas
fmull
jp
int3
outsl
or
or
and
jnp
loope
xor
add
vphsubbw
sub
mov
jbe
iret
out
xchg
loop
outsb
sahf
sub
popf
inc
loop
mov
test
mov
loope
decb
daa
mov
and
adc
and
jmp
jge
aaa
movl
or
or
rcrl
cmc
fsubr
mov
sub
sub
loope
mov
add
leave
stos
lret
popf
dec
je
scas
in
inc
lret
fcoml
mov
xor
inc
iret
mov
add
pop
dec
mov
push
dec
mov
out
subb
test
outsb
test
pop
pop
hlt
push
ret
mov
clc
push
fldcw
ss
lods
or
mov
mov
push
sbb
dec
push
adc
sbbb
in
mov
test
ficoml
test
sub
cmp
adc
mov
loop
or
gs
in
sub
jns
rolb
add
lahf
sbb
xchg
inc
sti
aaa
mov
xchg
jle
ret
sub
dec
xchg
rcl
sbb
dec
leave
inc
aad
arpl
popf
cmp
xor
lods
xor
mov
out
inc
in
sub
adcl
outsb
mov
add
pusha
jl
xorl
dec
cmp
mov
rcll
sub
outsb
shlb
popa
xor
fstps
xchg
sub
cmc
arpl
popaw
mov
xchg
add
shlb
in
mov
sbb
imul
sub
insl
into
test
clc
int
loop
shll
loope
xchg
push
fnstcw
pop
fcompl
xlat
mov
jae
leave
push
cmpsl
dec
pop
ret
and
jo
jns
and
or
popf
push
xor
mov
dec
in
and
test
sub
sub
jo
ja
js
sbb
test
shlb
mov
mov
lahf
js
inc
aad
xchg
negb
stos
test
inc
jmp
inc
lock
xor
dec
pop
xlat
cwtl
fcompl
int3
xchg
xchg
nop
loop
xor
mov
or
dec
mov
cmpsl
jle
sti
flds
mov
pushf
aas
jecxz
jbe
aas
sbb
jecxz
out
aaa
loope
add
shrl
bswap
dec
fnsave
aam
test
pushf
mov
mov
add
push
mov
cmp
iret
cmp
cmpxchg
mov
jmp
pop
pop
sub
mov
push
adc
je
mov
xchg
pop
dec
jns
add
std
imul
adc
testl
hlt
or
mov
bnd
mov
jg
mov
add
mov
mov
lods
imull
inc
xchg
push
push
pop
push
pop
mov
ret
idivl
daa
outsl
aam
pop
xchg
fwait
mov
cmpl
outsb
xchg
dec
jmp
mov
sbb
pop
dec
hlt
mov
fwait
mov
arpl
movl
lahf
mov
xor
adc
mov
dec
ss
cmc
xor
pop
in
inc
add
dec
push
jno
lcall
adc
orb
or
mov
mov
pop
pop
es
push
dec
mov
jno
mov
loope
inc
adc
pop
cmp
push
xor
ljmp
dec
shll
pop
cli
adc
mov
mov
mov
dec
sbb
sbb
push
adc
sahf
sbb
or
add
or
popf
daa
das
iret
lahf
fistl
cmc
adc
int
sarb
inc
es
pushf
sbb
mov
mov
pop
or
cmp
and
mov
sub
bound
jne
arpl
mov
in
inc
mov
addr16
cmp
jmp
out
dec
push
jecxz
xchg
cmp
inc
jno
push
push
mov
and
inc
mov
cmp
cli
out
mov
negb
loopne
inc
pop
jno
popf
nop
sahf
xchg
clc
nop
adc
xchg
arpl
mov
or
xor
adc
fistpl
in
sti
mov
adc
mov
fdivl
pop
and
mov
icebp
jnp
add
jnp
call
stc
push
sub
xlat
fcompl
ficomps
push
in
stos
adc
imul
std
cwtl
fstpl
or
punpckhbw
movl
push
icebp
or
xor
xor
outsl
push
push
add
jne
sarb
cmc
repz
jg
and
pop
pop
movb
or
mov
pop
or
fs
test
mov
jge
pmaxub
add
inc
xchg
push
rcrb
cmp
xchg
je
std
or
inc
sbb
insb
mov
pop
xchg
jg
mov
pop
rorb
push
fwait
mov
movsb
jo
adc
xor
movsb
ret
es
cmp
ds
lds
push
aaa
mov
add
out
bound
mov
sahf
inc
sub
dec
cmpxchg
in
ja
lret
mov
jg
insb
les
cmpsl
pop
inc
mov
dec
ds
test
or
sbb
stc
cld
test
inc
jmp
outsl
mov
pushf
out
pop
sub
sub
lret
and
call
mov
and
filds
in
and
in
scas
xor
mov
push
lret
pop
out
in
inc
test
dec
and
pop
gs
push
push
sub
insb
mov
mov
movsb
jne
cltd
data16
inc
adc
mov
mov
xor
jno
dec
jg
mov
pop
ss
stc
lock
inc
in
addr16
decb
adc
sub
inc
xchg
add
jo
adc
jne
mov
insb
sub
mov
jb
jecxz
ja
popf
lods
push
pop
ret
fbstp
into
das
pop
stc
aam
insb
fwait
jno
in
cmpsl
xchg
loope
mov
xchg
adc
fs
out
scas
pop
push
add
leave
scas
arpl
adc
pusha
push
xchg
frstpm(287
scas
mov
sbb
lcall
test
xor
movsb
ret
jne
out
enter
adc
daa
lock
test
push
shll
aaa
jne
data16
mov
push
lcall
lret
jne
int3
subb
jnp
xchg
stos
repnz
orb
mov
rorb
mov
inc
leave
mov
aad
or
icebp
xchg
xacquire
pop
ficoml
adc
cmp
cmc
sub
adc
mov
add
push
mov
leave
cmc
push
xchg
cmp
push
fcmovnu
rcrb
mov
ud0
scas
and
fldl2e
xor
and
or
movsl
sub
mov
repnz
mov
adc
movsb
xor
sbb
mov
shl
lret
or
stc
push
cld
stc
pop
stos
movsl
sahf
sub
cltd
add
or
push
or
adc
and
cmpsl
pushf
sbb
add
popa
lcall
movsb
pop
mov
jbe
and
lret
push
xor
push
jno
jl
sub
mov
ret
and
pop
cli
out
cld
push
inc
mov
push
sbb
xor
mov
mov
or
bound
popa
pushf
shr
jecxz
cwtl
enter
test
mov
dec
push
dec
int
cmp
and
negl
sub
int3
or
out
lds
ret
sub
mov
adc
rorb
push
mov
xchg
mov
jmp
hlt
pushf
cld
mov
sub
test
inc
dec
out
jp
pop
outsb
cmp
pusha
sub
cmp
loopne
jnp
jg
mov
jbe
jae
lret
sahf
jmp
pusha
cmp
lret
jl
hlt
fimuls
pushl
dec
pop
and
mov
jbe
test
stos
dec
sbb
sar
ret
mov
cltd
or
je
stos
loopne
in
sbbl
fdivp
out
jbe
xchg
in
sub
mov
ficoms
scas
or
mov
jp
pop
jecxz
in
ja
mov
sub
out
ljmp
xchg
insl
push
or
fs
insl
and
adc
movsl
lock
cltd
pop
and
cmpsb
dec
dec
loop
mov
int
and
stc
movsl
ror
sbb
xchg
add
aad
jp
pop
leave
in
aas
fsincos
mov
fnsave
enter
push
jns
jl
sbb
scas
nop
add
sub
xlat
les
push
push
mov
pop
or
mov
pushf
arpl
dec
aaa
pop
loope
fiadds
pushf
mulb
nop
cmc
add
daa
pusha
mov
decb
in
pop
mov
jp
cs
push
jecxz
arpl
mov
jbe
mov
hlt
movsl
cmp
jmp
out
stos
xchg
mov
sti
inc
cmp
jbe
iret
or
add
push
xor
cmp
imul
xor
pop
inc
loope
rolb
mov
cmpsl
adc
mov
cmp
dec
jne
shlb
stos
out
adc
cltd
cmpsb
push
dec
xor
lcall
pop
add
dec
mulb
repnz
xchg
enter
pop
mov
dec
or
gs
jmp
aaa
cmp
movsl
sub
lods
dec
push
mov
repz
sbb
jl
push
add
js
xchg
movsl
sbb
repnz
or
jno
add
or
in
movsb
mov
pop
mov
nop
dec
icebp
jae
stc
add
jge
sub
scas
mov
rcrl
pushf
imul
mov
mov
loopne
jp
call
mul
in
xchg
xlat
stos
mov
sar
insb
iret
mov
push
notl
pop
or
fimull
ret
jmp
and
mov
mov
mov
insl
jae
outsl
ret
daa
adc
jo
adc
stc
popf
xchg
ljmp
stos
test
add
cmp
std
lods
xchg
sub
ljmp
sub
cmp
or
or
adc
cmp
adc
popa
ret
hlt
fmuls
test
popa
ret
fstpl
nop
adc
mov
mov
das
mov
rcr
lds
sar
inc
decb
adc
add
repz
jp
fists
mov
cmp
insl
jp
mov
out
dec
inc
jb
in
addl
inc
lods
cmp
lock
or
fadds
test
sarb
push
out
sub
inc
outsb
test
cmp
mov
sbb
xor
push
add
mov
sbb
fs
fs
das
cmpsl
pop
mov
add
xlat
mov
dec
dec
mov
push
inc
ds
stos
rcrl
fnstcw
mov
push
ja
inc
testl
sbb
mov
dec
jne
sbb
dec
movsl
leave
xchg
push
push
sub
cmp
add
or
xchg
jbe
sbb
push
xlat
xchg
in
and
stos
jmp
insl
or
out
xor
shrb
ret
jne
xchg
dec
xor
mov
adc
daa
pop
mov
shl
sub
pop
push
push
bound
fnstsw
or
icebp
and
out
int3
and
enter
icebp
daa
ja
inc
pop
xchg
pop
inc
cld
loopne
xchg
in
xchg
mov
pop
adc
mov
adc
cmp
push
mov
mov
adc
push
mov
imul
sub
les
jo
sbb
enter
bound
cmpsb
jno
mov
xchg
and
push
addr16
imul
aam
push
adc
xor
xor
aam
out
loopne
mov
fsincos
inc
es
add
cmpsl
mov
sbb
xor
dec
dec
dec
or
iret
jo
pusha
or
and
cwtl
into
addl
jmp
sbb
pop
call
cs
jmp
mov
sbb
cli
jg
scas
test
xchg
jne
inc
pop
pop
fdiv
xchg
popa
fisttpl
jmp
mov
mov
bound
xchg
pop
xchg
or
addl
aam
iret
add
fisubs
add
pop
inc
andl
loop
mov
xchg
repz
lcall
daa
cmp
mov
loopne
mov
sbb
push
daa
mov
jno
mov
hlt
jl
and
jg
cmp
js
arpl
jge
or
fwait
mov
les
gs
int
push
cmp
pop
scas
xor
test
jbe
inc
pop
jecxz
xchg
sub
adcb
sub
jg
scas
sbb
ret
inc
les
lock
loope
test
das
outsl
mov
ret
std
je
outsb
push
je
decb
lret
or
in
adc
xchg
xor
pop
aam
jne
mov
jl
pushf
xchg
dec
pop
mov
dec
std
lods
and
imul
cmp
mov
lds
test
or
or
mov
sub
in
lods
xchg
jno
xchg
push
mov
out
dec
push
cmp
fnsave
xor
sub
cmpsl
addr16
sbb
push
mov
push
int3
cmp
mov
cltd
loop
test
aam
pxor
and
cmc
scas
xchg
sub
jno
add
mov
orb
mov
mov
adc
add
fscale
and
ja
sbb
je
cmp
sbbl
adc
adc
jg
xchg
mov
rolb
jmp
push
mov
cmp
add
sub
mov
mov
lea
lea
and
shr
add
xor
mov
cld
movsl
fiaddl
fidivrl
inc
testb
jmp
mov
sub
cmc
insb
push
mov
or
fbstp
es
pavgb
jmp
in
repz
dec
cmp
xor
inc
mov
lods
mov
adc
jns
fisttps
cmpsb
jg
cmp
xchg
aas
test
fsubrl
jnp
sub
repnz
and
out
jne
stos
and
dec
loop
mov
cmp
add
jp
bound
add
mov
adc
xchg
mov
test
jno
addb
insl
add
out
jl
jae
out
ja
dec
js
stc
and
adc
jg
or
xor
lods
fwait
call
xchg
jl
movsl
stos
lret
in
jmp
push
and
hlt
idiv
int3
cli
rol
xchg
es
into
sub
stos
mov
pop
lcall
dec
and
jmp
leave
dec
add
xchg
dec
addr16
pushf
lds
fs
or
lret
rorb
fcompl
je
sbb
popf
lea
dec
aam
outsb
xchg
call
add
inc
lds
in
inc
imulb
mov
push
fucomip
mov
and
and
sahf
fdivl
dec
mov
dec
xchg
hlt
xor
inc
dec
and
mov
jne
fbld
outsb
sbb
push
iret
mov
add
test
ds
daa
mov
mov
and
inc
push
mov
xchg
mov
lea
das
out
adc
mov
inc
rcrb
lahf
js
fnsave
aam
mov
mov
rcrl
jl
daa
sahf
frstor
adc
addb
adcl
scas
stos
fmuls
push
js
orl
std
cmp
jo
xchg
jb
out
jecxz
add
push
jno
mov
jb
pop
test
insb
sbbb
nop
lcall
adc
inc
add
int
push
mov
int
jecxz
sarb
cmpb
push
cmp
sub
sub
fdivs
or
addr16
outsb
add
push
sub
scas
xlat
lcall
out
push
js
adc
adc
neg
test
outsl
pop
xlat
jl
dec
sub
push
int3
icebp
insb
loopne
cmp
jg
in
iret
clc
sbb
push
jo
iret
cmp
fidivl
ret
push
mov
out
xorb
fsubrs
lds
adc
cmpsl
xor
push
test
aam
mov
jnp
mov
xchg
and
sub
push
xor
sbb
mov
jmp
and
in
insl
push
push
flds
ja
cld
loopne
ljmp
mov
lock
bound
fadds
aas
lret
stc
push
inc
pop
add
xor
mov
dec
mov
mov
jle
push
mov
adc
or
xorb
cmp
mov
inc
sti
sbb
push
loopne
cld
xor
push
mov
int3
out
aaa
cli
or
push
add
push
pop
sbb
roll
pop
mov
jmp
ja
movsb
xchg
mov
popf
pop
adc
adc
test
pushf
jns
enter
aaa
inc
daa
subb
daa
hlt
fdivr
xor
sbb
movsb
pusha
sbb
push
sar
iret
popa
push
xchg
leave
mov
mov
call
inc
push
jnp
jecxz
push
ret
pop
mov
es
mov
daa
inc
aas
dec
cmp
cld
jne
xchg
enter
stc
ss
pop
mov
jmp
jbe
jb
test
data16
jl
jg
jns
stc
andb
and
lcall
mov
pusha
hlt
out
les
inc
arpl
out
push
cmpsb
lds
xlat
and
fcomps
mov
or
mov
dec
mov
cmp
enter
mov
pop
pushf
repz
int
aas
aad
sti
repz
mov
movsl
xor
cmp
fnstcw
fadds
pop
fxch
test
or
cmc
mov
shlb
mov
popf
aaa
mov
lret
repnz
add
pop
xor
aaa
test
mov
out
dec
add
aam
xor
rclb
aad
push
mov
xor
out
in
or
fcomps
push
and
mov
inc
jp
loop
mov
leave
and
or
sbb
sub
and
rcpps
insb
ret
fdivrs
call
sbb
cmp
iret
les
pop
out
jno
add
sbb
jo
pushl
add
push
and
insl
jnp
jle
cmp
jbe
adc
inc
aaa
xor
mov
jecxz
out
xchg
push
jae
xchg
ficoms
imull
jbe
mov
cmp
lods
mov
shll
lret
jmp
stc
adc
lds
sbb
xor
repnz
iret
loopne
jae
leave
jne
insb
out
dec
jg
dec
cltd
add
lods
cmp
mov
cmpsl
aaa
cmpsl
fildl
aad
add
mov
fmuls
arpl
nop
lods
nop
pop
fs
jb
or
inc
pop
dec
pusha
les
jmp
add
adc
repz
dec
fdivrl
in
or
clc
fistps
test
push
and
mov
or
fstl
adc
xor
ja
push
out
xchg
xor
hlt
lock
or
or
jno
jmp
cmp
fwait
lods
xchg
cld
jae
js
xor
sub
cltd
push
xor
lods
sub
sbbl
adc
xchg
in
adc
jp
nop
ss
xlat
dec
cwtl
inc
in
fistl
fcomps
push
icebp
es
andb
pop
pusha
aas
mov
leave
ja
xor
cmp
sbb
hlt
outsb
cmp
mov
and
test
mov
and
jmp
mov
xchg
jns
add
inc
cmpsb
inc
fistl
test
add
cmp
and
xor
bound
outsb
inc
adc
pop
xchg
pop
inc
out
mov
pop
pop
popf
jb
mov
bound
mov
or
adc
sbb
js
andl
push
sti
arpl
xor
inc
out
xchg
cmp
je
mov
mov
clc
aam
in
or
mov
mov
mov
mov
fisttps
xchg
ret
cmp
cmpsb
or
lcall
pop
imul
fwait
push
and
js
mov
adcl
arpl
xor
fidivl
mov
into
sbb
inc
lahf
mov
xchg
jbe
movsb
adc
data16
lds
dec
imul
fisttpll
imul
in
cmp
clc
popf
lea
mov
aam
out
popf
data16
das
xchg
outsl
lahf
jecxz
ja
cmp
mov
dec
xor
jecxz
test
stos
xchg
sub
jns
out
ret
sub
aam
mov
sub
xor
in
sbb
push
pop
mov
adc
aas
mov
psubusb
xlat
adc
add
jns
popf
xor
mov
jbe
lods
in
sub
jge
mov
pop
loope
das
or
xor
mov
sbb
pop
push
ja
sarl
pop
pusha
mov
rorb
int3
test
and
aaa
imul
cmpsb
push
rolb
into
mov
jno
and
xchg
test
mov
and
jle
notb
xchg
lods
mov
xchg
cmp
mov
jge
mov
bound
cwtl
call
add
ja
adc
mov
or
cmc
ds
loopne
push
dec
hlt
ficoml
mov
js
in
add
cmp
daa
xchg
mov
jg
push
xchg
fcmovnb
xchg
lods
dec
insb
pop
out
mov
rorb
mov
dec
push
add
push
sub
mov
iret
nop
xor
rcr
mov
add
sbb
jmp
out
out
sti
or
xchg
outsl
cmp
jle
scas
cmp
sbb
xor
lahf
lds
push
ret
sub
jmp
cmp
mov
cmp
addr16
fsubl
lahf
rcr
cwtl
imul
mov
sbb
mov
pop
pop
dec
push
das
xor
scas
stos
push
jno
jae
stc
jb
mov
cmpsl
sahf
mov
xchg
add
mov
mov
pop
cmc
incl
test
jnp
ljmp
dec
pop
xor
xor
test
stc
cmc
daa
lahf
in
mov
pushf
jmp
js
xchg
push
invd
or
mov
enter
data16
test
ret
enter
sub
leave
mov
dec
add
mov
xor
addr16
fistpll
pextrw
xchg
xchg
pop
sub
sub
into
cmp
imul
jbe
rol
cli
pop
push
shr
addr16
insl
mov
sbb
cmpsb
repz
and
mov
sub
dec
jo
push
stc
test
repnz
add
mull
xchg
outsl
mov
ljmp
ret
ljmp
mov
aaa
ja
or
aam
insb
fildl
shl
push
je
clc
fidivs
push
jl
mov
xlat
mov
enter
cmp
dec
into
jge,pn
pop
mov
scas
jecxz
mov
cltd
int3
popf
fnstcw
dec
push
ljmp
inc
mov
mov
outsb
mov
mov
sub
mov
xor
push
jecxz
cltd
add
out
stc
popa
orl
into
stc
das
movsb
clc
scas
lock
push
xor
and
enter
push
jno
xor
enter
sub
jge
or
in
xor
ljmp
mov
ss
dec
loope
cmp
in
stc
dec
outsb
cmp
lods
sub
cmp
insb
jo
mov
test
sbb
test
mov
inc
les
das
xchg
sahf
mov
and
nop
enter
or
jne
int
test
sub
insb
sub
shrl
mov
xchg
add
outsl
je
jl
inc
pusha
dec
cmc
inc
shlb
out
push
sahf
out
int
mov
loopne
dec
cmp
daa
imul
lea
push
sub
imul
cwtl
sbbb
sub
mov
jo
sbb
jnp
jp
xchg
mov
popf
mov
sub
mov
loop
stc
jle
mov
fldenv
repz
les
xor
bound
mov
dec
jns
sbb
idivb
icebp
pop
mov
or
ret
iret
mov
sarl
adc
int
outsb
mov
adc
fimull
jl
xlat
jo
and
sarl
testl
push
or
inc
fiaddl
out
add
into
pop
adc
jnp
or
xor
push
push
adc
xchg
xchg
push
sbb
icebp
cmpsb
sti
adc
or
jecxz
icebp
insl
insb
aas
or
dec
jg
pop
scas
cmp
sub
andl
or
das
push
inc
push
push
mov
push
cmp
inc
xchg
cmc
les
sub
cmc
jl
cwtl
subl
gs
inc
adc
cltd
push
fsts
pop
add
fisubrl
lret
jbe
pop
add
repz
mov
shrl
stos
int
lahf
lock
mov
mov
adc
pop
mov
jg
cmp
jmp
in
push
les
sub
fcomps
mov
aaa
jge
stos
xchg
ror
sub
push
icebp
popa
dec
push
lds
sbb
sub
in
push
mov
pop
cmp
pop
xor
and
adc
jmp
mov
xchg
out
scas
mov
jne
sti
cmp
jp
pop
jl
fsts
mov
sbbl
sti
mov
sbb
pcmpeqb
hlt
inc
sub
pop
mov
lret
fdivr
push
inc
jle
jne
inc
aaa
dec
sbbb
jbe
dec
inc
pusha
lret
leave
jnp
in
xor
movsb
call
or
mov
iret
pop
enter
mov
dec
iret
mov
mov
lock
jmp
popf
dec
loope
jg
mov
int
jg
inc
xchg
pop
pop
data16
xor
pop
ss
ss
clc
pop
pop
xor
fs
test
popf
gs
inc
filds
push
push
jl
cmp
add
push
inc
or
lret
or
inc
add
push
dec
jns,pt
inc
add
mov
lds
into
and
popa
lret
loopne
ret
stos
mov
dec
jecxz
adc
adc
arpl
imul
repnz
in
out
lea
add
push
jno
lods
outsl
loopne
adc
scas
push
fucom
push
call
sub
inc
icebp
ds
xchg
mov
ss
test
xchg
lret
mov
sbb
sub
js
out
add
xor
mov
icebp
push
mov
dec
cmp
dec
sbb
mov
mov
jnp
xchg
stos
clc
dec
movsl
pop
aad
iret
push
or
fcompl
das
adc
lahf
xor
and
mov
maskmovq
mov
xor
push
mov
jmp
sub
ret
loope
fsubrl
pop
scas
push
add
sahf
cmp
loope
mov
push
xor
xor
push
scas
push
lret
jo
mov
dec
or
mov
cmp
roll
pop
js
sti
ficomps
insb
mov
movsl
mov
xchg
fcomps
mov
aas
pop
push
xchg
add
testb
mov
mov
subl
jns
aad
xchg
pusha
mov
out
out
jle
repz
outsb
xchg
mov
pop
repnz
lock
pop
js
fimull
fs
mov
jns
mov
fimull
mov
jne
mov
std
mov
and
rorl
xchg
jle
jle
lcall
and
arpl
insb
add
or
repz
insb
pushf
jge
push
xor
or
pop
jae
jbe
lahf
and
cmpl
fwait
push
push
call
aam
jle
cmpsb
gs
out
dec
mov
cmp
enter
mov
rorb
in
or
adc
pop
push
mov
dec
sub
mov
ljmp
mov
push
pop
pop
lods
in
enter
cltd
mov
dec
mov
add
popf
clc
repnz
dec
jbe
jmp
push
mov
mov
fcmovnu
push
jnp
mov
xchg
push
push
lock
lret
mov
icebp
int
jae,pt
mov
into
mov
xor
mov
xchg
dec
cmpsl
js
dec
xchg
pop
or
xor
jmp
xchg
inc
ficoml
aas
subb
push
in
cmp
stos
adc
aad
add
enter
mov
pop
shll
add
enter
test
mov
or
sbb
addr16
ljmp
sub
fisttpll
aam
shrb
sarb
jg
inc
std
cltd
mov
pop
cmp
and
sub
or
cmpsl
cli
lea
fldl
sbb
fnstsw
out
mov
cmp
sub
pop
in
out
sbb
lock
scas
test
mov
fldl
jbe
cmp
dec
rcrl
xchg
jbe
bound
into
mov
jae
sbb
sarl
xchg
sub
adc
addr16
cld
and
cmp
sbb
xchg
loopne
adc
push
cmp
mov
test
push
cli
in
mov
rorb
pop
xchg
stc
lret
pop
sbb
push
sbb
cmp
shrl
fsqrt
int3
stos
loope
repz
sahf
xchg
xchg
in
stos
enter
mov
mov
hlt
xlat
cmp
add
fimull
mov
pop
pushf
outsb
jae
sub
push
lods
mov
mov
cmp
fldcw
add
xchg
mov
adc
mov
lahf
jp
icebp
jecxz
lret
sahf
loopne
mov
xchg
fisttps
push
rcrb
mov
fidivl
cmp
xchg
pushf
sbb
add
push
dec
xchg
lret
pop
insl
aaa
mov
test
adc
push
xchg
cmp
push
xlat
adc
sbb
xor
ss
and
cltd
jae
ficompl
decb
xor
jge
sbb
jl
mov
rcrl
icebp
lds
cmp
lret
push
cmc
jge
icebp
rolb
aad
jg
cmc
aam
loope
out
xchg
lcall
mov
mov
sub
push
add
cmp
sub
inc
addr16
cmp
lret
loopne
adc
mov
and
mov
xchg
push
xor
jb
cmp
cli
lret
fisubrs
sub
imul
push
test
ljmp
xor
push
pop
cmpsl
mov
mov
push
test
mov
jp
mov
movsb
pop
mov
dec
mov
outsb
jle
jbe
and
sbb
out
cli
adc
shll
loop
mov
les
xlat
xchg
inc
sbb
mov
iret
loopne
push
mov
or
sub
movsb
cmc
insl
insl
dec
cwtl
popf
adc
test
lahf
lods
fwait
loop
fnstsw
sti
popa
xor
in
add
adcl
stos
stos
or
mov
dec
inc
out
hlt
dec
jp
lcall
sahf
mov
cmp
sub
jp
pop
leave
jmp
adcl
sar
repnz
lahf
jae
push
mov
xor
aam
std
xchg
std
dec
mov
imul
sbb
or
in
cmp
shlb
repnz
sbb
jge
rcrl
cmpsb
inc
js
rorl
cmp
xchg
lretw
leave
mov
jnp
mov
push
mov
outsb
icebp
mov
add
xchg
cmpsl
fists
ret
push
push
lret
mov
jecxz
sbb
sbb
jno
and
insb
xorl
fsubr
mov
out
adc
imull
jb
test
push
in
rolb
shll
sbb
cmp
rol
push
cwtl
push
pushf
mov
pop
inc
sub
cmp
push
lret
cmp
loope
lods
fdivr
push
and
push
dec
push
or
jecxz
ds
decl
cmpsb
lret
cmpsb
xlat
pop
movsb
ljmp
add
iret
jecxz
sarl
loop
xor
or
inc
mov
mov
mov
add
xchg
in
shrl
sbb
movsb
das
lods
imul
dec
pop
fnstcw
inc
and
sbb
cmpsl
cld
loopne
and
xor
icebp
cmpsl
and
repz
and
aaa
add
test
jne
and
shl
mov
jne
push
dec
daa
les
imul
sbb
hlt
mov
negl
repz
pop
sub
xchg
xchg
xlat
jecxz
add
lea
lds
mov
cmpsb
popf
push
inc
xchg
jmp
rorl
pop
jle
or
pop
mov
popf
jbe
xchg
das
das
push
jmp
mov
xor
repnz
push
lock
inc
test
fnsave
rorl
cmpsl
ds
mov
adc
testb
les
cmp
insl
xchg
dec
inc
cmp
int
sahf
lahf
mov
lds
xchg
leave
adc
inc
sbbl
mov
std
push
jl
int3
int
nop
add
lahf
dec
cmp
lret
fs
pop
fcmovnb
xor
aam
stc
xor
mov
xchg
xchg
or
imul
add
mov
sub
pop
inc
push
mov
lods
inc
cmp
push
stc
mov
lods
dec
push
jae
cld
mov
mov
insb
scas
test
inc
push
push
outsb
rol
inc
daa
incl
adc
jnp
int3
rorl
ret
inc
lcall
mov
lret
adc
sbb
xor
push
rorl
jo
push
pop
jns
fwait
or
or
jns
aas
pop
cltd
popl
fldt
mov
mov
xchg
pushf
imul
pop
sub
mov
les
or
pop
jne
sub
pop
sbb
aas
jecxz
or
test
jl
cmovnp
sti
sbb
call
push
jg
imul
insl
inc
lea
xchg
bound
sub
out
push
mov
mov
roll
mov
mov
cmpsl
sti
xlat
mov
cmp
mov
add
mov
sahf
daa
ret
lahf
cmp
jae
dec
mov
push
mov
popf
fiaddl
cmovb
repz
into
lret
aaa
mov
push
sbb
xor
lcall
stos
adc
fists
adc
lret
mov
sbb
lock
dec
inc
jno
jl
or
das
call
xchg
dec
in
lea
pop
shlb
mov
and
popf
dec
addr16
sbb
divb
push
adc
repnz
int
addr16
rorb
pop
inc
add
and
pop
xchg
mov
sub
sub
rclb
ljmp
pop
push
xor
data16
stos
xor
and
mov
dec
cmp
lods
cltd
jns
xchg
cmp
cld
adc
sbb
mov
ja
sahf
cmpsl
fsub
in
mov
add
fstl
fidivrl
imul
ret
pop
pushf
dec
xchg
cwtl
dec
stc
imul
in
inc
stc
push
cwtl
and
cltd
xchg
cmp
push
xor
sbb
ljmp
mov
loopne
pop
pop
ss
mov
outsl
jp
jne
push
aam
push
aas
jmp
push
popa
and
das
repz
jg
ja
sbb
sbb
pop
sub
mov
enter
fists
popa
lods
imulb
pop
sub
cld
mov
jecxz
mov
decl
cmp
insb
stc
jae
inc
sub
adc
push
stc
push
fimull
mov
mov
negl
mov
dec
sub
clc
xchg
subl
dec
addb
cwtl
out
xor
pusha
push
xor
mov
or
cmpsb
mulb
scas
lock
add
hlt
rorl
cmpsl
pushf
test
fs
clc
sub
stos
inc
lret
push
jmp
outsb
mov
push
push
bound
std
mov
inc
xchg
pop
or
fwait
push
repnz
stc
cmp
or
inc
fidivrl
test
adcb
pusha
and
mov
cwtl
sbb
lret
push
and
mov
fwait
lock
mov
cmp
xor
cs
lods
sub
es
pop
or
xchg
pop
push
shrl
mov
cli
xchg
jmp
call
test
mov
push
outsb
hlt
aam
test
andb
cwtl
lds
sqrtps
pop
mov
lahf
out
cwtl
push
scas
and
scas
mov
fs
mov
cmc
lods
sub
loop
imul
lcall
cmovs
mov
mov
xchg
push
dec
xor
lret
xchg
jns
popa
in
or
scas
push
sub
test
lods
dec
add
cmp
imul
das
imulb
mov
xchg
pop
test
lods
mov
js
es
sarb
adc
loopne
imul
pop
test
loop
ret
mov
cmp
mov
mov
incl
sub
ja
adc
mov
jae
outsl
adc
aaa
mov
mov
mov
mov
rolb
cltd
fmull
mov
sar
je
pushf
inc
js
sub
loope
idivl
fyl2x
xor
repz
xor
inc
lretw
imul
jl
or
je
fiadds
insb
mov
fldcw
cmp
lret
xor
int
enter
xor
mov
pop
scas
aam
push
aam
testl
rcll
out
push
out
xchg
xchg
cmpsb
ficoms
sahf
lcall
add
or
aaa
shrb
xor
dec
lcall
jmp
into
test
adc
cmp
jge
jmp
pop
cmp
test
lock
lahf
gs
daa
push
fs
mov
sbbb
jecxz
fwait
dec
fdivrl
stos
outsb
mov
movsl
sahf
xchg
mov
sti
pop
in
jne
cltd
rcrl
mov
sub
add
adc
pop
iret
push
dec
jmp
xchg
mov
repnz
jbe
push
in
push
cmp
or
outsl
es
pop
push
call
shlb
stos
cmp
js
pop
and
inc
push
fmuls
cmp
inc
mov
xchg
add
or
mov
aam
push
inc
sarb
test
mov
shrl
hlt
or
jae
pushf
or
repz
jbe
push
inc
scas
idiv
std
loop
arpl
stos
and
dec
daa
mov
xchg
ljmp
jmp
xchg
cmp
mov
mov
xchg
fistps
xchg
xor
mov
sar
int3
cmp
mov
sub
test
add
lods
xor
orl
or
xor
lods
rcrl
je,pn
outsl
and
test
cmp
sub
scas
mov
hlt
aad
jecxz
and
in
jmp
sbb
mov
push
push
inc
divb
addb
ja
xor
pop
ret
cli
xchg
test
shl
stc
inc
clc
jge
jnp
jge
bound
shl
inc
icebp
stos
les
fimuls
jecxz
jae
mov
sub
scas
aam
push
test
or
mov
call
mov
xor
jbe
ficomps
cmpsb
xchg
adc
adcl
loope
xchg
sub
jb
clc
bnd
addb
out
fs
adc
cmpsl
and
mov
repnz
push
ret
pop
sarb
and
dec
cmp
add
add
sub
stos
out
lds
fstpt
adc
and
roll
push
das
adcl
vcvtsi2ssl
mov
jmp
push
test
and
add
inc
dec
cmp
sub
jbe
pop
mov
jnp
dec
mov
mov
push
cs
mov
hlt
xchg
cmp
subb
lret
push
adc
dec
sarb
mov
xlat
mov
lock
out
add
mov
jae
xchg
and
pop
movsl
decb
cld
lods
loope
dec
lock
mov
rolb
imul
mov
jg
inc
pop
fxch
cmc
mov
neg
lock
jmp
mov
lahf
xchg
repnz
sub
insl
pop
xlat
test
notb
fucom
sub
psubsw
cld
dec
dec
xor
xor
mov
negb
lds
adc
lahf
xchg
fisttpl
imul
mov
or
add
pop
mov
add
in
pop
je
stos
mov
xchg
std
jae
jbe
stos
enter
or
mov
ljmp
sub
dec
sbb
adc
decb
dec
pop
dec
fbstp
addr16
fs
in
scas
loopne
fsubl
jno
push
mov
push
fwait
pop
xor
mov
int3
jecxz
ljmp
dec
and
jnp
aam
sub
iret
mov
push
or
pop
or
test
cmp
mov
pop
add
cli
loopne
lods
stc
lcall
cmc
mov
loop
loopne
cmpsb
insl
jg
int3
jmp
dec
push
xchg
aam
fwait
dec
cmp
jp
adc
in
pop
scas
push
push
and
jecxz
sub
or
rcrb
bound
pop
aaa
hlt
sahf
inc
icebp
in
cwtl
ret
cmp
xor
int3
add
jne
adc
add
and
mov
or
jmp
icebp
jo
clc
out
test
enter
xchg
mov
in
les
aas
pop
cld
subb
inc
pop
es
adc
cs
pop
loopne
das
shrl
jge
sub
nop
int
rol
xchg
xchg
inc
xor
lods
cltd
sub
enter
push
jae
jne
push
aam
mov
int3
push
add
test
das
outsl
push
pop
push
repz
xor
pop
mov
lcall
cmp
push
mov
cmp
jecxz
xor
mov
leave
outsb
popf
jl
dec
sbb
or
mov
insb
lock
rep
int
fdivrs
jge
add
inc
into
pop
test
and
scas
arpl
mov
bnd
mov
adc
add
or
sub
ds
fiadds
in
mov
lods
dec
pop
ret
lods
shll
jae
xchg
jecxz
pop
pop
pop
negl
pop
fcoms
fwait
xlat
ret
jne
out
adc
int
xchg
jbe
and
arpl
dec
and
sbb
add
movsb
mov
mov
daa
add
aam
cmp
in
das
popf
orl
push
icebp
inc
mov
scas
pause
int3
pop
mov
ret
hlt
fldcw
ret
or
lret
and
aad
push
jmp
dec
test
jne
sbb
cmp
push
inc
or
and
test
test
xchg
sub
mov
lods
mov
cmc
outsl
cmp
and
xchg
sub
adc
lret
mov
fmul
outsb
clc
mov
sbb
jo
aaa
loopne
or
gs
xchg
or
adc
sbb
push
mov
loop
rolb
xchg
fcoml
or
jbe
pop
push
popa
fstl
test
pop
cmpsl
mov
lods
jae
arpl
cmp
aad
imul
cld
loop
jge
clc
andl
movsl
adc
inc
lea
mov
loop
mov
mov
sbb
cli
aaa
inc
out
imul
shr
test
call
or
pop
mov
imul
and
fnstenv
or
rol
fwait
push
pop
push
mov
jo
test
dec
fimull
scas
mov
in
mov
inc
mov
popa
inc
pop
stc
sbb
jl
aas
enter
js
add
add
jl
add
jle
insl
or
outsb
sub
arpl
mull
fsubl
xchg
add
jae
mov
mov
pop
adc
test
xchg
add
xchg
enter
out
es
cmp
stc
or
pop
call
add
addr16
sub
jbe
insb
jno
xor
pop
adc
dec
repnz
les
in
loop
movlps
jb
fstl
add
popa
sbb
js
scas
push
jp
mov
imul
mov
rcll
leave
sub
ficompl
mov
les
jnp
adcl
imul
mov
jl
call
xchg
aam
mov
dec
xlat
test
das
xchg
mov
and
add
shlb
pusha
dec
imul
add
pop
cwtl
pop
adc
mov
stos
fcompl
roll
xchg
test
lret
pusha
sub
xor
ret
int3
xor
xchg
adc
iret
mov
push
call
sub
mov
fs
data16
mov
pop
adc
mov
aas
adc
adc
in
call
sub
ret
add
fisttpl
mov
ret
shrl
sub
xlat
nop
movlps
outsl
dec
movsl
sub
push
mov
jbe
mov
mov
sbb
inc
cmp
dec
dec
das
pop
test
xchg
dec
call
ficoms
and
pop
dec
lods
mov
rcrl
sbb
shrl
and
push
lea
mov
jne
stc
ret
xchg
sbb
sub
faddl
insb
test
jecxz
push
or
cmpl
mov
pop
je
push
jle
outsb
add
xorl
call
pop
inc
in
jae
fwait
cmpsl
fiaddl
aaa
fistps
mov
mov
push
add
add
out
xor
push
lcall
test
sub
add
dec
pop
mov
roll
push
rcrl
xor
mov
dec
inc
ja
movsb
cmpsb
mov
out
insl
jecxz
push
mov
push
int
cmp
dec
aaa
dec
push
fcmovu
loop
mov
jmp
and
cmc
lret
jbe
cmpsb
cmc
dec
sub
negb
xchg
mov
test
arpl
push
shlb
rcll
mov
stos
aaa
push
mov
add
sbb
inc
add
lahf
push
dec
xor
sbb
aas
dec
pop
inc
mov
lock
call
lock
mov
insb
movsb
cmpsb
sub
sbb
mov
xlat
outsb
dec
fdivrs
mov
fs
hlt
enter
sub
mov
mov
mov
add
pop
das
add
sbb
leave
ljmp
mov
sub
dec
add
clc
test
and
jo
das
lods
cltd
xor
mov
sub
cmp
ret
mov
pop
lret
test
lods
inc
cld
and
sub
add
and
shrl
cmp
and
add
push
pop
xor
mov
bswap
sahf
fbstp
lcall
cmc
jp
dec
fcomip
mov
jae
hlt
lret
push
int3
adc
pop
paddq
cld
insb
lret
mov
out
nop
push
nop
popf
mov
mov
les
stos
aas
xchg
jge
mov
aaa
les
popf
xchg
xchg
mov
adc
adcl
dec
bound
cmc
arpl
cwtl
xchg
pushf
aad
xlat
into
fsub
push
dec
loopne
arpl
or
dec
insb
outsb
out
data16
mov
loope
imul
fwait
xor
in
jo
in
leave
xchg
outsl
and
mov
pusha
in
xchg
xor
test
pop
outsb
movsl
test
pop
shrb
jle
dec
dec
xlat
jmp
dec
repnz
lahf
push
mov
incb
shll
addr16
push
mov
or
dec
outsl
cmp
ret
dec
mov
in
inc
sbb
mov
out
and
dec
shr
popf
mov
divb
in
in
inc
pop
dec
pop
lret
and
jbe
int
jecxz
loop
imul
xorl
adc
xchg
cli
push
ds
fcoml
or
jle
pop
adc
sahf
in
or
stc
jp
sub
sahf
int
ds
jno
jecxz
jp
or
lds
insl
inc
outsl
outsl
js,pt
push
xor
out
xor
stos
sbb
leave
sub
dec
roll
sahf
push
scas
rcrl
jb
loope
ror
pop
imul
cmpsb
clc
aas
cmp
xor
dec
jo
jge
aas
mov
sbb
lret
sahf
cmp
cmp
adc
cli
pop
mov
mov
or
dec
push
mov
jno
xor
add
adc
fcomps
imul
ljmp
pop
mov
cmc
scas
push
call
mov
lock
mov
xor
xchg
and
out
mov
test
aaa
lahf
push
scas
pop
mov
push
insl
scas
jbe
push
jmp
xor
mov
inc
mov
data16
bound
ljmp
js
in
xchg
fisubl
mov
mov
pusha
clc
cmc
cmpsl
pop
mov
daa
jne
mov
or
xchg
push
fisubl
sub
rolb
ret
test
fadds
std
decl
mov
call
pop
xor
shll
and
aas
lret
mov
xchg
cmc
out
mov
jae
and
pushf
xchg
mov
icebp
insl
ljmp
into
pop
add
faddp
xorb
ret
enter
add
jnp
cmpsb
hlt
push
or
stos
shlb
and
jmp
leave
roll
or
pop
push
mov
pop
cltd
orl
xor
cmp
shrb
in
xlat
mov
cmc
inc
jecxz
push
repnz
loopne
les
jns
mov
nop
in
mov
xor
jb
inc
arpl
mov
in
and
mov
add
addr16
repz
jl
mov
inc
xchg
mov
nop
test
push
and
cmp
adc
and
in
xchg
and
fcomi
and
shl
nop
sbb
push
pop
notl
arpl
xor
in
rorb
icebp
push
and
movsl
pushw
xchg
cs
add
cmp
cs
dec
cmpsb
push
push
inc
mov
push
jge
mov
popl
pop
pop
fs
adc
gs
cmp
cmp
mov
test
in
xchg
jge
test
jp
mov
idivl
mov
mov
lret
fwait
push
cmp
inc
in
outsl
fs
test
xor
in
stc
dec
rorl
out
in
rcll
test
shll
dec
les
mov
mov
or
dec
adc
cld
jmp
shrb
add
cmp
mov
push
aad
jecxz
fistpl
std
or
repz
mov
sarb
push
mov
negb
outsb
mov
sahf
movsb
into
rcll
pop
out
sbbb
lock
xchg
dec
int3
shl
mov
add
dec
test
shlb
cmc
lret
add
imul
push
filds
std
mov
loop
adc
pusha
add
push
daa
pop
inc
jbe
and
popf
jbe
movsb
test
or
fcoms
and
andl
sbb
or
jle
and
aam
inc
stos
fld
xchg
inc
mov
bound
push
jg
mov
sbb
clc
mov
xor
js
sub
sub
in
addr16
mov
les
in
aad
mov
mov
push
sbb
scas
pushf
fistpll
xchg
mov
call
hlt
mov
sbb
leave
insl
add
mov
ds
ret
push
pop
popf
rorl
xor
pop
js
xor
enter
or
mov
ret
dec
xchg
xchg
pop
inc
scas
and
clc
sahf
mov
cwtl
pop
inc
cmpsb
push
clc
in
add
lods
pop
aad
push
mov
out
movsl
xchg
stc
mov
push
loope
data16
cmpl
ss
and
mov
add
cmp
pop
data16
push
jo
addr16
test
int
jno
rclb
dec
inc
push
fbstp
jmp
adc
stc
notl
and
lahf
shrb
mov
repz
movsb
adc
js
je
add
adc
in
jns
mov
sub
lds
and
fdivrl
call
daa
roll
jle
in
icebp
inc
in
xor
andb
cwtl
mov
push
mov
xchg
das
xchg
mov
movsb
adc
insl
add
push
cmp
xor
xlat
movzbl
jno
int3
iret
movsb
in
loop
mov
aas
pop
dec
cltd
in
dec
arpl
andb
pusha
xor
push
xor
stos
ds
loopne
inc
pop
gs
mov
mov
pop
mov
mov
adc
stos
mov
aaa
orb
mov
daa
push
std
nop
rcl
shr
sahf
jmp
lea
pop
sub
xchg
and
jns
lret
ret
xchg
je
or
mov
jge
inc
lcall
add
mov
pop
cld
sbb
pop
hlt
mov
fidivrs
xchg
xchg
mov
pop
popa
cld
mov
inc
out
ret
rclb
adc
push
mov
xor
dec
dec
dec
pop
adc
and
dec
jmp
icebp
pop
popa
sub
inc
test
clc
mov
sbbb
mov
ror
add
sub
les
sbb
lret
push
cmpsb
mov
or
pop
orb
lods
jg
lock
add
test
and
add
lret
xchg
sbb
xchg
xor
fucomi
add
push
fstpl
and
sahf
leave
stos
and
stos
lods
mov
cli
xor
sub
in
cwtl
and
aam
in
adc
jmp
mov
repz
aaa
std
mov
or
sar
hlt
jp
shl
in
shr
adc
mov
sub
insl
ljmp
shr
xor
test
xlat
jmp
or
in
test
pop
xchg
adc
or
stos
loope
cmp
push
mov
jmp
fbld
test
lahf
movsl
push
scas
sti
adc
push
scas
cli
sbb
mov
jno
cmpsb
in
sbb
mov
inc
out
adc
mov
jg
xchg
cmc
les
movsl
data16
popa
shr
test
adc
int
mov
and
sti
loopne
stos
push
sbb
or
pop
cmpsb
mov
flds
iret
cmp
and
cmp
inc
cwtl
and
xchg
adc
xor
shr
fbstp
add
pushf
or
mov
inc
cli
or
in
adc
xchg
into
cmpsb
fisttpl
into
test
mov
jge
jmp
fnop
or
jle
xchg
mov
mov
loop
imul
fisubrl
xlat
jbe
push
pushf
pop
fidivs
lods
in
pop
and
pop
fcmove
jbe
shll
mov
mov
rclb
pop
lock
repnz
jne
push
sub
imul
push
mov
push
pop
add
pop
shr
iret
fnstsw
cmp
shll
sbb
jle
jg
es
push
pop
xchg
sub
jmp
loopne
ljmp
or
jnp
ret
fucomi
lods
in
fdiv
dec
cld
test
gs
push
add
inc
cltd
sbb
call
mov
sti
adc
ret
sub
mov
sub
filds
sub
add
cmp
push
jns
inc
xchg
adc
cmc
pop
iret
mov
jo
sbb
push
add
insb
lds
fnsave
stos
and
pmaddwd
adcl
jp
out
bound
outsl
adc
push
orb
ds
dec
sbb
pop
insb
pop
add
leave
cmpb
and
std
jae
outsb
shlb
cmp
pop
xor
repnz
push
add
gs
push
xchg
addr16
mov
cmpsb
test
lret
mov
push
roll
es
icebp
aaa
imul
xchg
inc
mov
scas
movsl
jbe
das
mov
mov
jecxz
mov
mov
ds
jo
mov
mov
je
ja
and
out
sbb
push
jbe
mov
std
pushf
or
lock
jae
jnp
fwait
mov
call
movsl
cmp
sub
cld
fiaddl
mov
fisubl
int3
lods
out
jo
dec
jo
push
sbb
push
jg
push
fucomip
jp
popa
lea
adc
popa
adc
aam
dec
scas
lahf
mov
pop
jno
stos
adc
mov
shlb
int3
adc
js
jbe
das
icebp
inc
movb
out
hlt
popa
test
jg
cmp
adc
outsl
je
cmp
stos
cmpsb
xchg
mov
mov
jae
pop
mov
pop
jnp
push
inc
ja
mov
js
cld
fcoms
push
jb
cmc
pop
subb
push
sbb
pop
jle
lds
and
pop
stos
lahf
sub
xor
ja
xchg
jle
mov
cmp
sbb
mov
xor
ljmp
xchg
movsl
cmp
dec
leave
xor
mov
dec
mov
jge
adc
out
pusha
popa
xor
push
add
lcall
sbb
inc
inc
leave
pop
xchg
jge
repnz
push
repnz
mov
imul
loop
ljmp
idivb
stc
jo
push
cwtl
ja
fwait
inc
mov
test
or
jae
push
mov
stos
xor
pop
les
or
jnp
pop
decb
cmp
aaa
xchg
rolb
and
jae
xchg
fstpl
adc
outsl
xchg
imul
pop
xchg
negb
dec
mov
xchg
int3
leave
icebp
fimull
pusha
xchg
pop
jmp
mov
mov
dec
sub
xchg
cmp
cmp
es
roll
popa
iret
cmp
fstpt
loope
xor
mov
mov
sub
loop
jmp
pop
fisttpl
je
xor
and
stos
sub
xlat
sub
pop
and
into
ficomps
pushf
nop
mov
repz
std
mov
adc
xor
loop
inc
pop
inc
scas
divb
or
in
sub
xor
cmp
push
pop
cwtl
leave
rclb
xchg
mov
stos
out
cmp
xor
cs
insl
cli
sub
or
mov
or
rcrl
mov
iret
cmp
inc
mov
mov
pop
sub
xor
cmp
aam
cwtl
ds
jne
lock
inc
fadds
loopne
adc
lcall
jbe
dec
pop
pop
adc
adcl
mov
inc
pop
jbe
push
cli
test
mov
xchg
xchg
inc
subl
push
pop
pusha
jno
push
add
and
push
and
lcall
fs
dec
mov
pop
xor
add
or
mov
pop
ds
mov
scas
xlat
js
xrelease
inc
ret
mov
shlb
faddp
mov
mov
into
mov
mov
dec
imull
jnp
js
scas
push
jge
xchg
lds
imul
xor
cmpsl
leave
les
push
sbb
pop
and
sbb
and
adc
add
xor
inc
lds
divb
test
inc
dec
mov
pop
les
repz
int
test
test
push
pop
lods
mov
test
push
jmp
pop
rclb
sbb
ljmp
sub
xor
mov
sbb
dec
add
dec
mov
sbb
rorl
cmp
ret
jge
pand
jb
sub
cmp
dec
sbbl
and
movsb
sub
aas
pop
xor
add
rolb
leave
sbb
mov
jne
into
adc
xor
jnp
dec
lea
xorb
nop
mov
leave
xchg
push
pop
in
xor
pop
or
or
into
mov
dec
mov
cmpsl
cmpb
cmp
jns
outsl
add
enter
sahf
mov
inc
mov
dec
or
dec
ljmp
xor
shlb
jge
cmp
fldenv
sbb
inc
dec
mov
mov
sub
sub
mov
jmp
sub
lret
mov
jbe
jmp
push
jg
shrl
clc
fucomp
das
inc
and
je
jnp
or
fwait
xor
mov
and
in
cld
pop
cmp
sbb
push
mov
dec
int3
cmc
testb
mov
clc
pop
inc
out
in
mov
insb
sbb
inc
sbb
ja
orl
jno
fstpt
add
pop
add
add
push
jb
push
lods
hlt
popa
in
xchg
and
cs
int3
out
movsl
dec
add
sub
jp
std
lahf
sbb
ficompl
jl
and
add
out
add
out
push
inc
sub
xor
fld
pop
pushl
or
cmpsb
popa
insb
lcall
pop
icebp
ss
test
loopne
ja
inc
push
and
and
inc
sub
xor
out
insl
adc
jnp
xlat
cmpsb
adc
pop
mov
stos
push
jecxz
orb
pusha
pop
mov
xchg
scas
loopne
and
adc
test
pop
mov
cmp
test
and
cmc
dec
xchg
or
or
adc
repnz
jo
dec
jne
pop
jmp
push
adc
sbb
dec
arpl
cmp
and
hlt
sbb
loope
stos
lret
adc
fistl
jp
xchg
mov
lahf
adc
xor
ret
mov
fs
pop
fwait
push
ljmp
adc
inc
cmp
mov
popf
bnd
pusha
dec
es
jecxz
outsl
mov
pop
dec
inc
sub
pop
mov
ror
xchg
inc
pop
adc
movlps
mov
sti
in
addr16
dec
xchg
mov
fnstcw
movsl
fadds
roll
jg
mov
xor
test
jl
scas
ja
adc
adc
mov
xlat
adc
in
adc
out
hlt
pop
aam
fiaddl
lret
mov
push
hlt
jo
mov
addr16
mov
cmp
popf
insl
mov
sub
mov
jo
call
mov
sub
xor
sbb
addr16
jmp
mov
xorb
nop
push
fwait
aaa
or
inc
aas
jne
pop
inc
sbb
mov
addr16
fidivrl
incl
jecxz
mov
or
lods
shl
pop
adc
mov
jb
inc
and
test
push
and
out
push
int
test
test
push
or
jne
je
movsb
pop
sub
jmp
pop
shrl
mov
lret
mov
fwait
mov
or
pop
sbb
addr16
xor
mov
inc
pusha
lcall
push
inc
je
mov
jbe
das
loop,pn
out
sub
pop
aad
int3
fisttps
dec
pop
inc
sub
add
cmp
fistps
cmp
sub
hlt
sbb
xchg
jae
adc
js
mov
lods
mov
stos
cmp
les
aas
ret
pop
or
inc
in
push
pop
aaa
mov
sub
and
inc
stc
pop
out
xor
test
ja
test
ret
fxch
cmpsl
lcall
or
xchg
stos
xchg
fildll
xlat
enter
outsb
xor
out
sbb
lret
nop/reserved
pop
in
mov
cmp
aam
xchg
sarb
jns
inc
repnz
ds
cs
call
ja
jecxz
push
jb
add
test
ficomps
mov
loopne
into
cwtl
fndisi(8087
jns
dec
mov
jb
les
push
dec
insb
and
fstps
xor
jle
and
sub
nop
xchg
jne
xor
scas
and
test
call
adc
sbb
lret
rcr
pop
arpl
repz
jno
or
mov
cmpsl
mov
fistpl
pop
ret
lret
mov
stc
pop
dec
test
in
dec
inc
xor
imul
mov
popa
setno
dec
int
loop
cmp
inc
sbb
sbb
mov
movsb
and
add
pop
aad
inc
jp
fst
aaa
lcall
cmp
out
or
jecxz
fisttps
fcomps
xchg
insl
jbe
mov
xchg
insb
inc
fadds
popf
push
xchg
xor
outsl
push
sbb
jge
add
add
push
shl
cmp
test
push
pusha
orl
fs
test
push
addr16
pop
loop
push
mov
sub
cld
pushf
pop
push
xchg
sub
dec
cmp
cld
jae
dec
jno
sub
enter
xchg
adc
insb
add
idivb
loop
int
data16
sbb
iret
test
sbb
mov
out
dec
daa
fadds
dec
jnp
pop
lock
enter
jecxz
lret
aad
or
in
sbb
and
sbb
aam
and
pop
mov
loopne
movsb
lods
inc
mov
gs
add
push
push
xchg
add
lahf
stos
sbb
and
lods
repz
enter
fcmovnb
mov
inc
movsl
sbbb
sbb
int
pushf
sub
je
je
mov
pop
push
test
inc
fnstcw
mov
fisttpl
test
cli
es
repz
mov
mov
push
daa
dec
arpl
data16
and
sar
fs
xchg
xchg
in
mov
mov
push
push
movsb
xchg
aam
xchg
or
repnz
xor
pop
cmpsl
mov
mov
cs
xchg
sub
sbb
xchg
mov
je
pop
adc
jmp
pop
enter
dec
ss
repz
jns
jns
sub
imul
mov
push
mov
sub
adc
movsb
dec
jns
lods
sub
js
inc
xchg
sbb
and
jb
repz
mov
insl
cwtl
dec
arpl
ret
xchg
and
lret
cli
pmuludq
cmpsb
mov
icebp
cltd
dec
data16
repnz
inc
shrb
push
inc
lea
cmp
mov
mov
dec
push
xlat
push
test
push
aam
or
lcall
icebp
push
sub
dec
mov
dec
cli
cwtl
add
cwtl
cld
sub
xchg
arpl
neg
and
dec
in
insb
dec
cwtl
pop
pusha
jo
popf
adc
das
sub
lods
mov
cmp
and
dec
cwtl
outsb
push
or
adc
lret
xchg
adc
add
pop
mul
sbb
sub
pop
inc
push
pop
mov
insb
pop
mulb
inc
xchg
je
cli
in
gs
sub
mov
es
xor
adc
sub
mov
pop
ja
shll
sbb
out
and
inc
out
ss
adc
shll
push
negl
add
add
jge
fistl
fisubl
pop
xchg
sub
daa
mov
outsl
jl
pop
mov
inc
adc
jo
sti
push
cmpsb
dec
sbb
fsubr
pop
inc
and
rcrl
push
in
bound
sarb
cwtl
inc
lahf
pop
xchg
lock
testb
xchg
jb
lret
std
in
xchg
inc
movsb
fstps
sbb
aam
pusha
cld
mov
hlt
cmp
daa
iret
inc
stos
dec
int
out
mov
shl
mov
pop
call
cmp
out
xor
mov
pop
cltd
les
sbb
std
outsb
xorb
aaa
and
mov
lret
ja
stos
aas
xchg
xorl
mov
roll
inc
mov
cmpsl
lret
and
xchg
imul
xchg
pushf
push
mov
aas
mov
divb
adc
dec
hlt
movsb
pop
test
xor
xor
std
push
test
fisubrs
lahf
lret
out
mov
in
jmp
cmpl
data16
icebp
insl
dec
sbb
add
mov
cltd
or
sti
xchg
xchg
sub
xor
fisubrl
mov
jmp
cli
mov
scas
cltd
ficomps
ja
enter
mov
fcoms
inc
gs
mov
pop
gs
xor
jl
addps
rcrb
lods
sub
fs
movsb
mov
add
add
or
pop
add
fsubrl
fs
and
stos
pop
fisttpl
in
sbb
jmp
cmp
lret
lret
movsl
popa
shll
insb
out
arpl
dec
cmp
add
jge
dec
outsb
add
stos
in
xchg
push
cs
rorl
xchg
mov
aam
shlb
clc
mov
aas
push
std
out
sub
dec
mov
jecxz
push
ret
fwait
or
mov
mov
jp
fs
or
cmp
and
in
jno
mov
xor
mov
stos
cmpsb
add
pop
sbb
rcrb
popf
mov
movb
and
mov
stos
inc
data16
mov
decb
and
dec
pop
lahf
push
or
add
jbe
jecxz
inc
cmpsl
int
fs
cmp
popl
dec
xchg
pop
jo
jb
sahf
add
xor
dec
jb
mov
adc
xchg
mov
push
pop
jo
ret
scas
fnstcw
stc
stos
sti
leave
xchg
cli
xchg
or
cmp
test
mov
pop
jno
into
jp
or
and
adcb
out
xlat
int3
lret
andb
ja
mov
ds
xchg
dec
test
adc
aam
inc
mov
jl
push
fadds
in
int
or
std
adc
cmp
xchg
sbb
mov
cmp
and
mov
dec
lret
in
mov
adc
test
test
enter
jns
lods
push
stos
dec
test
add
xor
inc
mov
dec
in
xchg
sub
int3
cmpsl
dec
and
mov
lods
ds
xor
call
enter
dec
test
push
lock
cs
rcrb
test
insb
jae
insb
ret
jae
rcrb
xor
jo
in
gs
sahf
out
jo
xor
popf
add
mov
das
sbb
add
gs
outsl
xlat
and
outsb
cltd
aaa
lock
and
cmc
movsl
mov
xchg
scas
pop
call
jle
jns
lcall
mov
pop
shll
mov
adc
or
add
and
mov
cmpsb
iret
adcb
ss
insl
pusha
cwtl
out
insb
jnp
lock
adc
mov
cmp
popf
icebp
in
lods
dec
adc
dec
stos
icebp
xor
pop
or
sbb
mov
fs
cmp
aad
push
rcrl
fnstenv
dec
test
mov
xor
cs
sar
cltd
cmpl
or
fucomp
or
jnp
cmp
test
mov
mov
lea
mov
xrelease
inc
movsl
xchg
in
andb
int
repnz
mov
pop
adc
mov
xor
sub
dec
inc
or
push
call
xor
sub
sub
pop
add
dec
push
xchg
rorl
outsb
rcl
lock
mov
scas
xchg
jns
pusha
call
sbb
sub
xlat
loope
movsl
js
xor
mov
jp
pop
insb
xchg
sbb
adc
adc
cli
push
cmp
or
ja
ret
sti
shr
mov
lods
das
dec
pop
shlb
call
pop
jns
scas
fsubs
lods
outsl
adc
shrb
arpl
cmp
sar
pop
or
cmp
sbb
sub
sbb
lret
inc
inc
mov
sub
repnz
out
xor
fimuls
adc
adc
lods
sti
out
jp
sbb
mov
jl
and
jle,pn
mov
std
mov
aaa
inc
scas
sub
or
repz
nop
xor
mov
movsb
cmp
jns
repnz
ret
push
xor
mov
push
rcr
aas
mov
push
mov
in
test
iret
dec
inc
ror
dec
in
mov
test
or
and
mov
push
rcl
movb
test
lds
add
das
ss
adc
aad
loopne
cltd
imul
mov
xor
xchg
xor
aad
mov
xor
inc
dec
cli
pop
pop
out
mov
setae
std
leave
mov
cli
outsl
xchg
push
dec
or
jno
adc
adc
inc
les
pop
inc
out
pop
aaa
das
and
add
xor
and
pop
dec
in
mov
ds
adc
ja
test
adc
mov
stc
sbb
add
pop
dec
jp
and
jg
mov
and
mov
inc
into
insl
ja
mov
loopne
jle
leave
test
inc
mov
cmp
adc
das
jns
bnd
and
fcoml
cld
out
xlat
jo
lock
out
fbstp
pop
insl
into
mov
lds
push
push
out
frstor
repnz
sub
sub
in
sub
cmp
dec
std
hlt
cmp
in
add
xchg
out
lahf
jns
aam
notl
in
fmull
pop
mov
mov
sub
dec
jne
dec
and
rcr
addr16
test
popa
adc
fidivrl
xchg
add
out
mov
ljmp
dec
mov
fisttpl
les
pop
jb
ror
pusha
les
mov
mov
ja
sub
faddl
xchg
filds
add
add
dec
out
or
cmp
sahf
test
mov
fildll
inc
shr
dec
inc
lds
imul
in
lcall
and
pop
cmpsb
xchg
xlat
outsb
xchg
lret
clc
inc
mov
addr16
ret
jecxz
pop
xchg
adc
leave
sbb
push
dec
cld
into
or
jne
shll
nop
adc
xorl
jne
fcoms
or
bound
das
mov
sub
cmp
or
xchg
dec
jge
lahf
stos
cltd
inc
cmp
adc
mov
call
push
in
stos
add
and
scas
jmp
fisttps
int3
push
out
lods
sbb
mov
pop
pop
dec
push
mov
jge
inc
pop
sub
pop
sbb
lds
ss
addr16
add
mov
lds
mov
mov
inc
pop
cld
data16
movsb
xchg
ss
insb
es
cltd
out
sub
pop
mov
cmp
adc
mov
mov
sbb
cld
adc
jp
push
fidivs
rolb
jmp
fs
jns
pop
sbb
jle
int
ljmp
fnstcw
pop
lret
xchg
jle
push
pop
mov
pop
jno
aas
dec
jecxz
cltd
adc
xor
push
cld
cmpsb
ret
push
mov
mov
aad
push
cmp
sahf
mov
inc
xchg
xchg
add
sbb
jg
aad
sub
in
xchg
mov
add
and
mov
subl
addr16
ret
xor
and
jb
push
aaa
xchg
sub
test
shll
popf
or
dec
mov
jle
hlt
cmp
jb
lock
adc
das
dec
push
inc
adc
jmp
into
cmpsl
pop
ret
or
sbb
hlt
add
mov
push
idivl
pop
out
fwait
dec
popa
clc
push
cmp
rorl
inc
jle
push
mov
sbb
xor
in
mov
sbb
inc
pop
jo
push
out
add
push
pop
ret
add
inc
push
cmp
fnsave
or
out
adc
xor
xchg
mov
mov
mov
stos
repz
into
mov
sub
subb
jns
dec
rolb
les
lret
roll
movsl
mov
jp
cltd
test
int3
andl
pop
adc
cmpsb
dec
xlat
mov
jne
ds
sbb
bound
out
push
scas
mov
out
sbb
int3
mov
sbb
nop
icebp
insl
lds
xchg
imul
push
fldl2t
pop
and
mov
loopne
xchg
and
mov
sbb
sahf
out
and
faddl
cmp
add
cltd
jne
mov
enter
pop
negl
lcall
jmp
and
repnz
xor
mul
out
ljmp
loopne
cld
inc
pop
dec
mov
cmp
stos
sbb
in
shl
xlat
xchg
mov
mov
push
adc
insb
jb
pop
insl
ret
mov
rol
testb
and
ds
in
add
mov
std
test
xchg
sbb
mov
fcmovnu
pop
aam
in
or
daa
or
xchg
loopne
ss
loope
push
mov
jnp
arpl
mov
xchg
push
popf
repnz
popf
sub
mov
xchg
fnstcw
stos
cli
and
shl
jecxz
shlb
xor
sub
ror
jmp
push
xlat
out
cmc
ror
pop
adc
in
cmp
scas
and
daa
and
dec
jecxz
ds
fnsave
imul
xor
stos
sub
hlt
mov
sub
jg
and
mov
jb
sub
inc
lock
in
pop
sbb
sub
inc
int3
mov
sti
jecxz
or
bound
popf
mov
mov
adc
or
mov
lret
ja
das
ret
mov
pop
mov
mov
xlat
das
xor
or
call
test
xchg
loope
fstpt
dec
dec
loopne
inc
xor
lods
lcall
xchg
sbb
shlb
testl
movsl
cmovg
mov
and
mov
inc
push
je
add
std
int
adc
ret
sbb
mov
movsl
sbb
pop
jne
cmp
jno
push
xor
shlb
jns
xor
lret
lret
pop
cmp
fbld
outsl
fisttpl
inc
ljmp
in
jmp
pushf
adc
repnz
mov
or
mov
adc
fbld
dec
lods
mov
aam
cmpsl
notb
loop
push
mov
inc
inc
int
sbb
sub
call
aaa
packssdw
mov
cmp
out
mov
fcmovne
pop
jg
xor
fdivrl
sbb
ror
cltd
sbb
ret
call
jns
xchg
and
outsl
jns
push
inc
cltd
jge
mov
sub
add
mov
add
or
mov
xchg
cmc
imul
mov
xchg
cmp
push
rep
out
mov
mov
mov
fwait
push
jl
sarl
out
ret
das
mov
pusha
pop
jg
sub
push
mov
arpl
fistpl
lods
mov
mov
jecxz
adcb
and
mov
add
jnp
stos
sub
inc
mov
inc
loope
inc
clc
rorl
cmp
cmpsl
cwtl
and
lcall
in
mov
jmp
xchg
lods
pop
insb
dec
out
lahf
push
lcall
packsswb
lahf
adc
xor
fstl
iret
push
xchg
rolb
add
dec
pop
inc
add
repz
mov
mov
dec
enter
mov
pop
test
std
push
ljmp
stc
sbb
bound
jge
nop
fdivs
loopne
xchg
jmp
xchg
lret
jge
sti
cltd
shrb
sbb
jmp
or
adc
ljmp
jo
popw
faddl
adc
loop
ds
inc
mov
cld
jne
inc
mov
aas
cmp
lods
inc
add
lods
or
xchg
movsl
mov
ret
outsl
pop
and
es
aam
fwait
les
pop
sub
inc
ds
sub
lret
xchg
add
sub
or
dec
mov
cmp
sbb
jmp
add
dec
and
pop
and
adc
pop
inc
stos
add
sub
cmc
jg
ss
mov
jno
add
inc
inc
mov
push
adc
scas
bound
pop
rcl
add
hlt
sub
cmp
ficompl
pop
mov
adc
mov
loope
mov
dec
xorl
cmp
push
movsl
iret
ret
mov
es
lock
xchg
jl
stc
scas
pusha
sbb
je
loopne
iret
iret
int3
dec
fisubs
mov
cli
push
jg
add
cmc
xchg
fisubrl
sub
pmaddwd
lret
mov
push
adc
xorb
sbb
out
jp
flds
mov
xor
fiadds
popl
inc
dec
cmp
sbb
jmp
push
test
jmp
lcall
out
out
lea
xchg
sub
js
gs
out
cmpsb
clc
rolb
sub
jno
or
ja
lods
xchg
or
pop
jae
push
mov
inc
imul
pop
divb
pop
mov
movsb
sub
shl
or
mov
clc
push
imul
mov
mov
mov
movsb
xchg
mov
push
adcb
sub
jl
int
and
scas
dec
mov
loope
enter
push
sub
jl
inc
xchg
test
jecxz
mov
cmp
test
push
fidivrl
out
add
into
negb
out
jbe
mov
bnd
mov
inc
mov
jge
mov
fisttps
xchg
les
jnp
add
movsl
hlt
movsl
jne
jnp
insl
mov
fwait
mov
adc
mov
push
clc
ds
jnp
ja
dec
inc
or
leave
xchg
dec
jecxz
adc
jle
inc
mov
popf
push
xchg
lds
aas
stos
hlt
mov
push
aad
sub
jae
fucom
cmp
in
xor
outsb
std
pop
jno
sub
push
decb
add
pop
into
ljmp
push
mov
adc
sbb
fildll
inc
cmpsl
xchg
or
stos
cwtl
in
cwtl
repz
rorl
adc
rclb
gs
mov
div
add
pop
mov
in
inc
push
pop
xchg
mov
leave
pop
mov
jno
sub
rolb
xchg
test
daa
insl
xchg
pop
in
popl
push
and
push
in
adc
sub
or
ja
xchg
cmp
aam
ja
and
addr16
xchg
lock
push
in
push
pop
cmpsb
imul
cmp
inc
pusha
out
pop
sbb
sbb
or
inc
aas
jne
adc
lock
mov
adc
cmpsb
xor
dec
shrl
sbb
enter
cmp
pop
dec
mov
icebp
leave
shlb
je
mov
xor
adc
sti
add
imul
imul
mov
mov
fnsave
add
iret
mov
sbb
cmp
add
xor
xchg
in
push
inc
xchg
mov
jae
jp
and
sub
pop
rcr
xchg
leave
test
scas
jecxz
lahf
push
loopne
jp
cmp
enter
adc
js
incb
xor
xchg
icebp
cs
mov
popf
stos
neg
sub
stos
movsb
divl
enter
data16
xor
sub
aaa
in
mov
subps
insb
pop
lods
outsl
aam
cmpsl
jbe
mov
xchg
stos
adc
pop
inc
push
mov
xlat
xor
inc
push
imul
enter
add
sbb
iret
mov
inc
cmpsl
mov
mov
xchg
dec
mov
mov
cmp
aas
sbb
jae
stos
pop
mov
cmp
or
jg
push
and
xchg
push
pop
cld
pop
test
cmp
mov
add
xchg
andl
mov
cmpsl
push
jo
push
add
lods
push
jp
mov
cmpsb
xor
daa
cmp
add
jmp
stos
add
ja
or
and
push
and
pushf
sub
jl
cmc
fst
xor
pop
push
repnz
lea
mov
int3
in
cmp
add
ja
jecxz
shll
inc
fmull
dec
sbb
cmc
mov
xchg
push
and
mov
cmpsl
xchg
stc
and
imul
imul
sub
xlat
or
mov
lock
pop
or
push
sbbl
sbb
int3
cld
div
adc
ss
xchg
jnp
stos
andl
pop
jns
push
pop
js
pop
sbb
mov
addb
test
int3
enter
scas
ja
out
test
jo
scas
aam
push
dec
sub
fcoml
insl
insl
ret
test
pop
mov
xlat
pop
repnz
aad
and
js
sub
pusha
or
mov
jnp
adc
arpl
js
sbb
jmp
dec
in
sbb
scas
mov
and
cld
fisttpl
jns
addl
push
test
pop
cmp
jl
ss
push
out
nop
imul
mov
dec
pop
mov
sbb
lock
ret
leave
adc
int
in
scas
jge
xchg
scas
mov
hlt
dec
mov
test
lods
insl
les
sub
mov
cltd
xchg
in
sbbl
adc
pop
jnp
das
bound
xor
decl
rorl
addl
pop
xorl
aam
mov
mov
je
cs
ds
xchg
or
fcmovu
popa
xchg
out
push
push
add
mov
popa
xchg
stos
sbbl
out
in
pushf
jno
adc
aaa
popf
sub
cmp
pushf
xchg
and
icebp
les
pop
mov
adc
outsl
aas
inc
cli
movsb
daa
cmp
imul
sbbb
jmp
lock
sbb
xchg
mov
test
jae
mov
int3
sbb
pop
push
data16
outsb
out
dec
push
loope
lret
pusha
sbb
or
bound
hlt
cwtl
in
add
or
jl
xor
outsl
lret
push
cmp
lret
dec
repnz
mov
sbb
imul
and
dec
lcall
inc
or
faddl
in
outsb
sub
js
xor
iret
add
nop
lea
cs
leave
insl
dec
inc
outsb
lret
cmp
imul
sbb
pop
inc
adc
inc
or
and
mov
test
add
sti
mov
movsl
mov
sub
and
mov
pop
pop
out
je
inc
sti
frstor
popf
jg
mov
adc
dec
inc
push
xor
shll
mov
dec
ss
mov
cmp
xor
sub
xor
adc
inc
dec
inc
or
or
xlat
jns
mov
pop
leave
sbb
pop
or
mov
cmp
xor
xchg
test
pop
adc
fs
lcall
jne
jae
fnstsw
jb
xchg
xor
pop
mov
cmp
jp
imul
mov
xor
pop
cmp
jg
cmpsb
sub
cmpsl
cmpsb
inc
adc
int3
rcrl
fsubl
fisttpl
sub
imul
inc
pusha
mov
and
push
mov
sbb
arpl
sbb
stos
jns
cs
mov
gs
jmp
ret
ljmp
adc
sbbb
lcall
inc
cmp
roll
mull
popa
outsl
adc
cmp
mov
xchg
insl
push
inc
inc
je
stos
push
call
cli
or
mov
pop
mov
jb
xor
mov
pop
pop
lods
inc
shlb
or
cmp
xor
sbb
lcall
adc
ja
shrb
adc
jge
daa
sub
sbb
lea
mov
les
sbb
jbe
scas
dec
pop
cmp
lods
clc
xchg
or
sub
dec
pop
push
pop
sbb
nop
dec
jb
pop
jb
std
push
cmpb
adc
mov
adc
outsl
mov
and
rcrl
or
shl
scas
push
push
cmpsl
std
adc
xor
or
rcll
shr
xchg
arpl
mov
push
mov
xchg
dec
xchg
mov
fisubrs
sti
or
mov
mov
mov
mov
push
cmp
icebp
push
xor
adc
lods
fcompl
xchg
repnz
iret
lock
fcmovbe
test
cmp
fisubl
je
repz
adc
xchg
inc
fwait
pop
lahf
xchg
and
sahf
push
or
gs
or
inc
mov
mov
test
or
fldt
xor
frstor
rorb
in
xor
push
in
test
out
mov
sbb
cs
fs
mov
cmp
xchg
insl
int3
and
jge
pop
pushf
arpl
lds
and
addl
cmp
jmp
mov
loopne
js
or
pusha
aas
mov
jl
pop
push
mov
pop
fdivrl
dec
out
loop
xor
sahf
stos
inc
mov
mov
jbe
mov
ljmp
lds
lds
pop
adc
test
in
xchg
inc
icebp
or
inc
pop
xor
add
fbstp
mov
roll
and
mov
lock
push
popa
mov
sub
inc
imull
or
push
cmc
mov
xchg
out
or
mov
xchg
xchg
cmc
shlb
mov
mov
xor
fsubr
xrelease
mov
mov
test
repz
sub
jge
ss
or
movsl
cmc
sbb
and
rcrb
outsb
mov
sbb
push
add
cmp
inc
xchg
mov
mov
mov
int3
mov
jae
clc
xchg
mov
jbe
pop
insl
fisubrl
jo
aad
pop
cli
xorl
dec
ret
xor
or
ficompl
leave
paddw
adc
arpl
pop
xchg
adcl
xor
orl
dec
insl
push
incl
icebp
rcll
outsl
shlb
xchg
inc
or
mov
mov
lock
add
scas
loope
iret
jbe
xchg
clc
lods
mov
sub
daa
sbb
jmp
aad
out
scas
mov
ds
sbb
or
xlat
repz
aad
dec
bound
jecxz
adc
arpl
mov
cmp
jns
cs
andb
ljmp
pop
mov
and
cmpsl
mov
test
mov
icebp
stos
inc
imul
mov
fnstenv
into
mov
aas
cltd
imul
in
js
popf
fldt
add
int3
mov
mov
stos
mov
sub
loop
stos
and
ss
inc
lret
aad
pop
loop
ds
adc
pop
fstp
jnp
sbb
out
mov
adc
roll
pop
or
cmp
add
fnstcw
and
jae
pop
jge
jo
int
sbb
sbb
cmp
push
cs
lods
fsts
inc
bound
sub
imul
jmp
xchg
sti
sub
push
xor
aad
push
cmp
and
add
jnp
sub
fsubl
pop
sarb
js
mov
inc
ss
aad
mov
dec
out
or
faddl
arpl
mov
inc
mov
sbb
outsl
out
mov
inc
in
xor
test
aaa
cld
mov
sbb
mov
cld
add
aam
fsubrp
xor
lea
arpl
jb
add
jl
out
lcall
sub
push
sbb
sahf
dec
out
jb
data16
xor
sub
xor
cmp
bound
sbb
jne
movsl
xchg
adc
mov
add
mov
and
ret
mov
add
and
fisttpl
mov
dec
testl
lods
insl
pop
jnp
pop
negb
adc
gs
jbe
sub
xchg
js
ja
pop
jb
mov
jmp
push
js
cmp
and
xor
mov
sbb
push
mov
mov
in
popa
or
xor
or
cmp
xor
adc
add
inc
fs
fildl
loopne
les
jns
rcll
pop
loop
lahf
or
jecxz
push
sbb
lahf
and
jge
sub
or
add
xor
or
mov
test
jle
in
repz
push
mov
test
mov
add
push
fwait
cli
loope
int
jb
mov
adc
mov
push
pop
mov
pop
test
lods
mov
cmp
cld
cltd
repz
cmc
into
xchg
sahf
imul
lods
inc
add
cmp
hlt
xor
leave
out
adc
jno
in
adc
test
jnp
jmp
fistps
xorb
fdivrl
int
movsl
and
mov
sub
sti
xorb
stos
add
movsb
gs
mov
aad
cs
je
push
jne
xlat
mov
sub
pop
pop
pop
mov
mov
rcrb
loopne
adc
lcall
frstor
cld
out
sti
int
xor
addb
mov
mov
cli
aad
cmc
sbb
jb
shll
jo
stos
hlt
and
sub
negb
in
shl
mov
xlat
ret
push
loop
arpl
mov
aam
fdivp
hlt
js
and
and
and
jg
cmp
sbb
push
es
icebp
jmp
in
sbb
xor
repnz
push
push
stos
dec
xchg
addr16
cwtl
inc
fildll
xchg
mov
cmp
rcrb
sub
cld
das
ret
mov
shlb
daa
adc
ret
fcom
lret
cwtl
sbb
movsl
out
add
adc
insl
jmp
scas
cli
and
and
mov
data16
aad
mov
pop
mov
fisttpl
jae
pop
iret
divl
test
enter
lods
push
dec
outsl
out
xor
loopne
mov
dec
or
jno
sbb
icebp
out
inc
dec
enter
dec
pop
int3
in
nop
jnp
cmp
fcmovnb
cmc
sbb
decl
loop
aam
jb
lods
pop
insb
loopne
sbb
xor
lea
push
imull
pop
in
sub
aas
mov
and
addr16
aam
xchg
xor
sub
cmp
cld
sub
sti
adc
es
inc
lock
or
sti
roll
cmc
outsb
sbb
popa
xorb
fisubs
mov
sub
mov
loope
aam
adc
push
hlt
mov
les
scas
mov
pop
pop
aas
jecxz
sub
repnz
jne
or
test
mov
xchg
inc
std
jle
pop
cmpl
stos
pusha
imul
cs
xchg
shlb
ja
jns
ret
sahf
mov
loopne
add
mov
or
sbb
call
adc
sbb
mov
jae
mov
shr
mov
push
insl
je
jecxz
ss
or
or
clc
jl
cmpsb
sbb
push
sbb
fdivrl
mov
dec
dec
xchg
shlb
sarl
sbb
arpl
lock
out
sub
rcll
add
xor
cmp
subb
movsb
aam
call
in
mov
aad
xchg
mov
in
jne
andb
lcall
mov
rol
pop
scas
mov
movsb
dec
inc
into
inc
sbb
ret
lea
jl
jb
mov
addr16
outsl
add
xor
in
test
inc
call
mov
fstpl
out
mov
jns
push
inc
fwait
add
addl
mov
movsb
sub
jae
or
mov
cmpsb
iret
imul
add
adc
outsb
jo
mov
jnp
lea
sbb
shl
hlt
push
mov
jg
pop
mov
pushf
add
inc
cmp
das
mov
imul
test
decl
sub
dec
adc
push
rcrl
ljmp
inc
mov
sbb
pop
daa
mov
sbb
mov
cltd
adc
pop
fstl
test
out
test
xchg
mov
popa
aas
into
dec
mov
push
aam
jmp
sub
xchg
stos
hlt
loop
out
and
scas
jnp
movsb
mov
pop
subb
ljmp
sbb
or
pushl
jle
addl
std
or
lret
xor
push
dec
sbb
rcrb
pushf
fistl
mov
int
popf
and
cld
fidivl
cmp
fwait
sti
adc
fistpl
pushf
xchg
pop
jbe
pop
sbb
or
lock
mov
inc
enter
sahf
mov
inc
mov
pop
cmp
mov
inc
decb
pop
sbb
movsb
add
nop
movsb
mov
aas
jg
pop
outsl
data16
dec
mov
cmp
enter
or
es
jo
arpl
and
dec
stos
enter
popf
sub
sub
dec
and
hlt
jp
jecxz
mov
mov
and
cmp
jbe
scas
xchg
loope
in
test
mov
stos
push
test
pop
adc
enter
add
cmpsb
jmp
imul
mov
loop
or
mov
inc
popf
and
jp
ficoml
lret
es
or
cmpsl
ss
xchg
mov
das
sub
mov
out
pop
jmp
and
es
aas
cmpl
pop
and
pushf
fstpt
gs
lret
xchg
mov
mov
adc
ss
sahf
int3
lds
sbb
adc
nop
inc
insl
rclb
test
pop
lret
inc
sub
jl
push
hlt
push
sahf
lret
out
xchg
cmp
insl
xchg
push
aad
and
and
sar
sbb
imul
ror
mov
es
cmc
repnz
dec
movsl
mov
add
push
xor
sarb
push
pushf
and
inc
in
or
jecxz
jmp
xor
js
popf
push
sahf
add
ds
ja
ss
lret
cli
in
in
and
lret
arpl
xor
aaa
dec
pop
ja
add
movsl
push
inc
cltd
jb
out
add
mov
lods
movsl
mov
push
jp
mov
push
inc
in
xchg
lahf
xchg
and
lea
adcl
aad
or
mov
mov
dec
mov
ficoml
mov
dec
ljmp
sub
shlb
sub
in
pop
mov
cmc
xor
jmp
mov
push
rcrl
pop
and
call
ljmp
sbbl
insl
mov
adc
lret
lret
scas
xchg
pop
sub
cmp
jne
xchg
imul
dec
jge
hlt
cwtl
and
repnz
xchg
xchg
ja
xchg
mov
into
popfw
push
insl
fwait
test
cld
out
pop
mov
xlat
js
xchg
rclb
ja
or
jl
ret
repnz
pop
movntps
xor
sbb
inc
mov
shrl
bound
shrl
sub
aad
dec
lds
aaa
imul
jae
clc
jae
in
mov
xchg
mov
fisubs
inc
and
xor
ljmp
sub
sub
loop
and
add
mov
out
push
xchg
popa
jnp
mov
or
xchg
cld
jg
jge
pop
pop
jge
cmc
test
sub
sub
int
ds
jmp
test
notl
jb
lock
sarb
sub
sarb
data16
jo
rol
fnsave
inc
arpl
or
hlt
xor
int
or
mov
mov
iret
mov
std
repnz
jmp
xor
xchg
in
mov
mov
rolb
or
dec
mov
jb
loopne
mov
loopne
scas
xor
sbb
hlt
rolb
push
scas
mov
mov
dec
and
hlt
nop
cld
out
cld
jmp
lock
int
js
enter
aam
jle
stos
lret
loop
adcb
lds
pop
and
les
dec
add
sbb
into
fdivrl
inc
cli
or
in
ret
xor
push
test
dec
xchg
test
inc
dec
leave
inc
pop
fdivr
das
adc
mov
cmpb
lret
ficompl
xor
outsl
imul
push
lret
xor
mov
sub
xchg
mov
mov
adc
dec
fldt
and
push
fldl
inc
sub
or
mov
jmp
cmp
call
pop
faddp
mov
lcall
mov
jg
jle
push
in
shll
xchg
and
movsl
mov
add
sti
xor
in
pop
xchg
roll
repnz
xchg
push
adc
out
push
js
push
xchg
push
in
mov
adc
mov
in
cmpsb
movsl
pushl
and
add
lcall
popf
jl
jmp
pop
shll
ds
jnp
int
punpckldq
lock
inc
pusha
negl
adc
xchg
adc
lock
sarb
pop
out
push
call
xchg
cltd
std
outsl
sub
fwait
test
add
into
xchg
clc
ds
inc
mov
ja
cmp
pop
imul
xor
test
cmp
pop
mov
mov
sbb
test
lahf
jns
sarb
jge
jae
gs
out
mov
jo
xchg
cmp
jg
xchg
pop
outsb
jmp
pop
adc
ret
inc
push
ds
sub
in
ljmp
mov
and
test
push
dec
daa
fwait
cltd
pop
dec
mulb
add
incb
pop
out
sahf
mov
aad
xchg
lret
test
jne
popf
sar
pop
dec
pop
push
icebp
ret
scas
pop
cmp
js
out
les
fisttpll
adc
mov
adcl
jb
jae
bound
xor
dec
jmp
clc
sarl
sti
mov
xchg
fistpl
adc
mov
fisubrl
in
and
and
or
aam
outsl
iret
xchg
fs
push
xchg
vorps
pop
xchg
ss
ret
mov
or
inc
imul
xchg
int
push
push
bound
sub
nop
sbb
xchg
into
sub
shll
ds
xchg
mov
xchg
push
push
inc
or
ljmp
dec
hlt
out
lods
sub
sub
jns
mov
cmp
push
rcll
mov
dec
mov
sti
fwait
jno
jmp
jbe
imul
add
cmpsb
call
out
dec
ljmp
rcr
dec
scas
out
in
sbb
nop
jp
vpsraw
shrl
out
xchg
mov
add
stos
fsubrs
push
inc
ljmp
fimull
lods
mov
mov
inc
xor
xchg
testb
push
in
testb
fs
jbe
cld
jge
movsl
call
mov
gs
mov
and
xor
std
loop
orl
popa
cmc
insb
cvtps2pi
jecxz
cmp
jp
scas
mov
sbb
adc
inc
rol
xlat
xchg
imul
mov
adc
inc
push
mov
add
push
ja
aaa
jb
movsb
cli
and
lret
fimull
outsl
movsl
cld
into
movsl
and
xor
mov
les
int3
cmc
jp
pop
mov
lods
ja
repz
out
xchg
mov
imul
xchg
ret
cmp
xchg
push
push
popa
xchg
hlt
mov
pop
mov
xor
xor
xchg
bound
daa
adc
jg
add
xchg
addl
or
xchg
je
xchg
mov
and
shll
ljmp
stos
jp
adc
pusha
outsl
mov
cmp
cmp
fsubrs
inc
mov
mov
mov
pop
movsl
daa
in
lcall
sbb
push
sub
adc
dec
shrb
mov
dec
cmp
fcomi
inc
aam
pushf
test
dec
add
pushf
lds
push
sub
pop
jge
jne
rorl
push
adc
lods
inc
push
jae
fsts
push
bound
popa
xor
push
push
sbb
insl
and
mov
test
pushf
adc
or
add
jl
das
cmp
test
lea
subps
or
ja
imul
clc
dec
das
cs
sub
in
sarb
push
and
data16
cld
mov
incl
xchg
call
test
mov
mov
fists
xor
sti
mov
lcall
pop
push
sbb
push
loop
lds
cwtl
push
or
enter
icebp
push
lods
popa
push
sub
jmp
xor
xor
sub
jecxz
sarl
pusha
jbe
mov
and
jnp
shrl
adcl
add
negl
loopne
popa
movsb
cmp
jmp
push
dec
sbb
add
daa
loopne
pop
daa
fs
xor
stos
xchg
mov
pop
push
in
flds
out
and
adc
sti
repz
adc
cwtl
les
xchg
mov
data16
mov
mov
or
and
fdivs
mov
and
adcb
incl
mov
pop
mov
xor
outsb
mov
in
shlb
xchg
sahf
inc
popf
adc
xor
mov
mov
scas
xchg
push
push
jns
je
out
cmp
out
xchg
jno
ret
dec
pop
fistps
lock
popf
jnp
mov
sub
push
in
inc
fldcw
add
imulb
or
inc
mov
sbbl
js
sub
fwait
or
cmp
sti
and
jge
mov
pusha
xor
push
insl
push
dec
xchg
lahf
mov
and
shlb
dec
es
inc
push
mull
std
and
push
pop
xchg
ret
cld
ds
out
sub
mov
mov
iret
xchg
fidivrl
inc
mov
and
xchg
or
arpl
dec
inc
jns
lods
jo
jnp
dec
xor
or
jge
mov
add
xchg
inc
and
mov
mov
jbe
fwait
dec
imul
sub
cmp
adc
aam
add
dec
sub
pop
das
outsb
mov
mov
fidivl
xor
cld
xchg
xchg
nop
jnp
mov
mov
je
and
push
pop
jno
jns
popa
add
call
xchg
add
lock
fisttps
int3
in
mov
das
fmuls
ds
cmp
cs
cld
inc
xchg
cmp
push
adc
leave
mov
pushf
inc
int
add
popa
jl
adc
push
or
add
in
in
push
jl
jl
addr16
and
movsl
scas
dec
lods
fsubr
lcall
stc
addl
cs
out
add
out
fdiv
pop
pushf
pop
inc
push
dec
mov
and
cmp
cmp
cmpb
or
out
mov
fistps
inc
loope
cmc
cmpsl
xor
sub
movsb
jmp
mov
jo
sub
das
jns
jno
insl
sub
sub
ficoms
add
jmp
daa
ret
pop
or
out
ljmp
lock
les
stos
insb
pop
nop
jmp
xchg
jp
mov
repnz
mov
add
sub
jo
scas
out
aaa
sub
std
lret
ja
lock
mov
imul
or
bound
stc
cmp
in
pop
inc
dec
push
fdiv
mov
call
sub
fsubs
sub
in
xor
cmp
lds
sbb
sub
aaa
dec
xor
aam
js
outsl
pop
and
notb
pop
pushf
pop
jmp
imul
fwait
mov
pop
push
add
pop
jnp
mov
sar
stos
pop
notb
test
cmp
out
inc
mov
jno
lret
cmovg
jmp
mov
mov
shll
sti
cltd
jnp
xor
push
cltd
jo
jge
enter
out
or
push
enter
int3
pop
pop
pop
sbb
fnstsw
test
nop
add
and
jbe
loop
push
cmp
lock
push
or
js
adc
pushf
cli
push
lock
scas
pusha
mov
jno
xchg
inc
sbb
xor
cmp
fisubs
adc
and
mov
mov
adc
mov
and
das
mov
mov
out
xchg
sbb
mov
call
fbstp
mov
int
mov
fwait
jl
sub
mov
and
lret
aad
in
xchg
ret
xlat
mov
xor
pop
lret
pop
xor
and
inc
xor
jnp
aaa
cld
cltd
cs
jae,pn
jb
rcrl
xchg
stos
rcrl
in
jg
push
in
faddp
inc
xor
std
call
mov
jnp
jnp
sbb
add
mov
mov
xlat
sbb
inc
in
insb
shrl
xchg
test
cld
or
repz
mov
out
mov
pop
ss
scas
adc
aad
lds
sbb
repz
sub
idivb
enter
or
ljmp
pop
pushf
sbb
mov
inc
cmp
jae
push
daa
pop
xor
push
call
cmp
cld
test
xchg
dec
imul
fadd
das
jp
push
loop
fsubs
xchg
lahf
insl
and
sbb
fidivs
lods
int
dec
mov
and
pop
outsl
and
or
mov
inc
aam
out
ret
push
in
dec
aas
nop
or
test
pop
movsb
pop
fwait
cmpsl
cwtl
hlt
lahf
mov
sub
or
mov
and
fcomi
out
lret
and
lcall
push
cmp
movsl
dec
pop
mov
ficoms
push
test
cmp
in
push
inc
jge
push
sbb
movsb
clc
push
das
ljmp
or
mov
daa
js
mov
in
rolb
in
sbb
mov
pop
scas
jmp
push
les
sti
cmp
push
push
sbb
test
sbb
fsubrl
mov
outsb
sub
sbb
cltd
fcmovbe
loop
inc
daa
pop
mov
or
dec
js
jne
adc
pusha
sub
jge
lahf
xor
and
fbld
pop
scas
frstor
sub
pop
in
push
and
dec
decl
faddl
jmp
lcall
sub
fisubs
jbe
out
sbb
sub
mov
push
push
jg
enter
jmp
add
pushf
test
inc
mov
enter
inc
sahf
shl
xlat
inc
movsl
lods
stc
push
scas
jp
outsb
pop
mov
lods
lret
and
lret
jb
fwait
cmp
in
mov
add
dec
shll
mov
insw
cmc
add
outsl
loope
cmc
push
xor
icebp
push
test
push
stos
cwtl
outsl
cmp
inc
repnz
mov
std
std
aaa
push
stos
into
cmp
mov
scas
jnp
mov
add
sub
jmp
adc
mov
sbb
pop
rcll
adc
popf
int
adc
sub
or
mov
add
in
fcmovb
mov
jns
movsb
push
xorb
sub
outsb
loopne
ss
adc
imul
fists
fidivrs
or
add
mov
lock
scas
roll
scas
add
add
lock
into
sub
lahf
pop
mov
mov
dec
jnp
mov
xchg
lock
dec
cltd
jno
inc
loop
btc
sbb
jg
ror
je
ficoms
sbb
and
sbb
dec
xorb
sbb
movsb
and
out
xchg
xchg
scas
stc
push
clc
adc
dec
and
dec
outsb
dec
or
and
ret
mov
out
jo
cmp
lock
repz
std
push
dec
jmp
add
adc
inc
push
popf
test
ficoms
dec
xlat
imul
sub
cmpsl
scas
inc
outsl
sbb
aam
cmp
lods
push
and
xchg
fcoml
add
nop
outsl
mov
jg
add
push
dec
cmc
pop
mov
push
adc
icebp
and
xor
cmp
leave
pop
sbb
jle
jne
push
adc
xor
scas
inc
push
adc
int
lods
fdivrl
inc
mov
lcall
mov
inc
push
loope
insl
mov
ljmp
add
das
inc
add
clc
jne
xchg
push
clc
adc
in
pushf
pop
add
add
cmc
out
inc
xchg
push
xchg
adc
mov
ret
stos
daa
jmp
shll
push
iret
xchg
jg
push
cltd
fs
add
shrl
cmp
mov
lcall
jle
add
pop
dec
fstl
ja
insl
movsl
test
lock
pop
add
test
adc
push
xchg
stc
push
cmp
out
and
sub
sarl
fucomp
inc
sbb
out
cmp
out
imul
xor
js
out
push
cmp
mov
mov
push
outsb
fistl
test
pop
rcr
xor
int
mov
inc
out
mov
dec
mov
shlb
imul
adc
dec
mov
aas
and
xchg
dec
or
loopne
sbb
out
mov
fisttpl
call
enter
pusha
mov
inc
outsl
add
repnz
push
or
stc
xlat
mov
lock
inc
clc
xchg
sbb
mov
jbe
rclb
dec
rcll
in
repnz
mov
mov
sbb
jge
cmc
mov
mov
pusha
xor
testb
jp
mov
in
add
mov
and
into
add
test
inc
push
sbb
jle
pop
cmpl
adc
mov
mov
popa
loopne
push
jp
iret
mov
mov
test
pop
sbb
cmp
data16
inc
pushf
movb
test
lret
repz
loopne
dec
mov
popa
cmp
sub
insb
popf
sub
test
jb
lea
lcall
daa
dec
pop
sbb
out
ror
scas
out
sbb
mov
hlt
out
test
fucomp
jecxz
jl
aam
outsl
pop
lea
inc
pusha
pop
scas
imul
or
cltd
sub
push
push
cltd
pop
lea
and
adc
xor
cmp
icebp
sub
push
rdpmc
mov
adc
xchg
arpl
in
ljmp
and
fcmovnbe
sbb
cwtl
mov
scas
push
in
pushf
and
xor
mov
pop
imul
test
insl
adc
inc
mov
mov
ret
enter
add
ret
adc
add
push
mov
lock
pop
jp
std
aad
orl
leave
mov
in
out
xchg
inc
adcb
popa
pop
pop
and
push
loope
adc
jae
adc
jne
das
hlt
inc
cmp
mov
xchg
cmp
scas
xchg
je
frstor
dec
adc
add
or
jb
inc
fcmovu
pop
inc
cmc
lret
fs
xor
push
jns
push
orb
pmaxsw
sbb
mov
mov
hlt
pop
mov
add
push
ret
int
rclb
inc
sahf
popf
in
lret
sbb
mov
xchg
arpl
jp
add
mov
push
dec
mov
bound
notl
loop
dec
nop
ja
mov
push
or
xor
ss
jnp
mov
xorl
cmp
pop
inc
js
pop
mov
or
data16
mov
cli
out
nop
pop
lcall
or
aaa
add
sbb
add
scas
or
xor
call
les
xor
inc
dec
xor
mov
pushf
or
xchg
inc
add
add
adc
mov
add
sub
inc
xchg
sbb
mov
lods
cmpsb
fisubl
test
mov
adc
leave
pop
cli
pop
data16
inc
xchg
test
in
cmc
sbb
adc
adc
shlb
mov
cmpsb
mov
ja
stos
ret
or
ret
xchg
aam
js
cli
pop
jnp
hlt
mov
or
cli
pushf
xor
xor
pusha
adc
push
fbstp
cltd
fimull
std
sarl
inc
add
je
imulb
push
arpl
es
test
rorl
xchg
movsb
in
push
ss
dec
stc
cmp
into
vandnps
pop
push
mov
clc
xchg
testl
not
ss
pop
fmull
imul
jmp
dec
inc
jge
jp
pop
movsl
push
cmpsb
pop
add
mov
push
jb
mov
push
cmp
fsub
lret
pop
repnz
mov
loopne
jp
sub
rolb
xlat
lret
or
fstpl
inc
out
inc
int
push
mov
xchg
inc
repnz
jge
push
ret
int
loope
adc
pop
iret
xchg
mov
stc
mov
jnp
aas
xor
xchg
jge
pop
fdivr
add
dec
insb
or
stos
outsb
dec
lret
sub
shl
jp
inc
pop
xor
lock
in
iret
clc
cmp
push
mov
insb
inc
push
clc
es
jmp
mov
mov
loope
mov
ljmp
mov
and
mov
dec
cmp
jb
push
call
andl
push
sub
pop
inc
xor
and
adc
jno
mov
push
adc
test
mov
mul
stos
cltd
popa
dec
fdivrs
iret
mov
pop
push
lea
and
jle
dec
int3
mov
push
test
js
jae
push
leave
mov
rorb
push
mov
es
sub
mov
loopne
nop
mov
pushw
test
jmp
push
jmp
iret
je
scas
mov
sub
adc
sub
adc
addr16
in
daa
jle
popf
mov
or
into
stos
pop
xor
es
mov
mov
inc
mov
ljmp
add
xchg
pop
add
stc
inc
mov
pop
dec
mov
and
push
mov
lock
sbb
or
mov
jo
xchg
add
cmpsl
call
pop
pop
inc
cmpsb
ds
or
mov
inc
jmp
lock
pop
sbb
in
jge
movsl
push
dec
cmp
sbb
xchg
mov
lock
stos
mov
push
fdivrl
add
in
sub
js
xlat
out
jnp
or
cmpsb
xor
outsb
daa
pop
gs
add
lods
mov
cmpb
inc
and
les
sub
xchg
nop
xor
loope
sub
addl
adc
aaa
outsb
das
push
lahf
mov
dec
iret
repnz
movsl
dec
xchg
pop
mov
jns
pusha
icebp
aad
sti
ja
test
cltd
sbb
add
push
int3
sbb
movsl
pushf
jo
fidivl
push
es
maskmovq
notl
or
dec
pop
xchg
mov
and
lret
mov
jbe
int
pusha
sub
xor
lret
push
cmp
push
loopne
mov
pop
inc
inc
push
shll
inc
add
into
outsl
cmpsb
and
or
outsb
add
in
fchs
cmp
dec
push
mov
cmpsl
pop
bswap
and
or
sub
pop
js
mov
jae
xchg
fcoml
push
adc
mov
data16
pushl
pop
rolb
iret
loopne
aaa
test
mov
orl
cltd
stos
push
shrb
pop
mov
aam
add
sbb
pop
sahf
or
dec
mov
sbb
test
pop
jne
xchg
add
mov
cmp
pop
flds
xor
cltd
sarb
xor
fucom
je
push
dec
jae
imul
js
sub
lods
fidivrl
into
sbb
das
cmpsl
out
pusha
cmp
ja
xor
lcall
mov
ficoml
push
movsl
xor
mov
pop
into
cltd
fwait
sub
fsubl
out
gs
divb
and
dec
inc
mov
sub
jbe
pushf
sbb
mov
stc
mov
push
mov
jo
xor
mov
mov
jb
leave
mov
mov
add
xor
mov
scas
sub
adc
addb
stos
inc
inc
sub
out
xor
cmc
mov
scas
icebp
xor
int
fsub
test
pop
mov
xchg
xor
mov
mov
ficoml
fists
das
rcrb
or
out
data16
repnz
sbb
jp
or
aas
dec
sbb
jno
call
out
lret
pop
pop
sbb
jg
in
lahf
test
xor
sub
in
jne
xchg
sbb
push
jns
cmp
sbb
les
push
movsb
sarl
ficompl
lret
adc
lea
push
jmp
icebp
push
nop
or
iret
pop
push
movsl
mov
pop
push
push
pop
vucomisd
inc
mov
rolb
in
mov
and
outsl
and
push
cmp
fcompl
orb
and
or
mov
pop
cs
inc
mov
test
xor
out
or
sti
cltd
sbb
lock
lea
out
and
pop
mov
subb
sbb
fcmovnb
sub
xchg
mov
mov
mov
push
xor
sbb
adc
add
mov
sbb
xorl
inc
jns
and
inc
xchg
shlb
lods
jge
rorl
or
adc
imul
sbb
lock
pushf
stos
mov
outsl
or
push
mov
inc
pop
adc
lea
mov
ljmp
lcall
sub
adcb
inc
outsl
xor
dec
fdivrs
int
mov
lds
dec
cmp
pop
push
cld
mov
cmp
pop
sbb
mov
test
mov
mov
push
fstp
jnp
adc
add
in
xor
and
push
fnstsw
mov
push
cmpsb
push
les
or
cld
mov
jno
inc
adc
dec
arpl
sub
or
mov
jmp
je
lods
shlb
cmp
test
scas
cltd
jecxz
push
inc
and
mov
jbe
adc
leave
ss
and
pop
inc
mov
adc
mov
adc
loopne
adc
xor
adc
arpl
cli
add
push
or
cmp
mov
test
rcrb
xchg
mov
cld
insb
push
push
sbb
shrb
ss
fsubs
stos
mov
rcrl
popa
jnp
push
mov
pusha
pop
inc
sbb
imul
xlat
mov
or
test
push
sub
cltd
adc
mov
js
inc
nop
inc
push
dec
in
or
inc
fwait
push
dec
test
dec
cltd
neg
cmp
cmp
inc
repnz
out
cmpb
adc
shrb
in
popa
jne
shlb
mov
cmpsb
mov
adc
scas
cmp
cmp
sbb
dec
int3
scas
jne
fcoml
sbb
imul
mov
jl
xor
or
mov
add
cwtl
adc
pusha
push
sbb
mov
leave
dec
mov
cmp
gs
and
ret
dec
xor
add
sub
pushl
pop
mov
scas
fsub
aam
sub
xchg
pop
cmp
aam
in
xlat
loope
rolb
xchg
jecxz
cmpsb
mov
cltd
addr16
scas
out
jecxz
sub
cmp
cmpsb
clc
pop
sub
in
cld
inc
cmp
dec
sub
adc
lahf
xchg
push
mov
out
jg
arpl
ret
leave
add
pop
add
mov
arpl
sbb
push
cltd
push
pop
pop
jb
xchg
mov
adc
inc
out
loope
and
sti
inc
sub
adc
mov
jb
popf
and
mov
fwait
imul
jo
cmp
jp
push
xchg
dec
test
xor
js
add
adc
adc
jns
idivl
jecxz
pop
xchg
xchg
sub
movsl
mov
xchg
imul
xor
gs
push
scas
popf
in
loopne
lea
inc
jb
fadds
inc
cmpsl
mov
lea
inc
ss
xor
cmpsb
enter
lds
jns
sbb
out
loope
test
inc
sarb
push
out
and
int
push
cmc
and
pop
mov
mov
mov
sub
dec
jl
out
jnp
cli
mov
call
aad
iret
mov
ja
pop
cltd
xchg
sub
xchg
je
jl
scas
les
sub
push
pusha
mov
in
add
sbb
jne
in
insb
sbb
mov
rolb
iret
jne
syscall
jmp
xchg
adc
icebp
inc
int
jge
jle
insl
cmc
sbb
xchg
rcl
mov
xor
cmpsl
push
clc
into
xor
mov
roll
mov
mov
sti
stos
mov
add
cmc
cmp
jnp
xchg
ja
ja
orl
fsubrs
mov
sbb
sbb
cld
lock
mov
inc
int3
push
cli
out
pop
fldcw
aad
jg
pop
hlt
stc
sbb
jmp
insl
pop
in
sub
fnstcw
mov
stos
ret
jmp
les
movl
ret
xchg
stos
imul
ja
outsl
xchg
pop
stc
jnp
loope
les
sti
cmp
pop
test
mov
xor
clc
movsb
mulb
ds
jo
dec
add
jecxz
das
popf
jno
xor
xlat
nop
sahf
add
sub
lcall
jns
adc
pop
fs
cmp
add
mov
mov
push
sbb
hlt
mov
imul
push
iret
lods
add
imull
jmp
stc
xchg
scas
xorb
dec
cmc
push
mov
mov
xor
sbb
xchg
push
jno
pusha
jb
fistpl
or
test
mov
cltd
out
xchg
sti
add
ret
mov
xchg
fwait
push
mov
add
pop
cs
hlt
sub
les
push
rcrb
les
pop
cld
add
pop
inc
fdivrl
push
leave
pop
xchg
push
ffree
stos
shll
lods
clc
cmc
sbb
or
dec
je
incl
divl
hlt
jg
sbb
daa
adc
out
call
ds
mov
inc
das
in
add
jl
sbb
loope
addr16
icebp
pop
mov
mov
fwait
out
sarb
mov
mov
int
jge
sbbl
mov
sub
addb
sbb
lcall
cld
test
adc
aam
test
cmp
mov
xlat
xchg
adc
lea
fidivrs
ret
jge
in
pop
push
sbb
mov
repnz
jno
stos
jle
dec
xor
mov
xchg
xlat
fmuls
out
adcb
sub
pop
test
ja
ficoms
pmulhuw
not
push
push
jl
inc
push
xchg
movsl
mov
movb
lds
pop
xchg
call
jecxz
cmc
out
leave
mov
mov
push
or
mov
push
ljmp
mov
add
add
aad
mov
lods
fsubrl
aam
inc
insl
ficoms
imul
mov
andb
shll
push
clc
test
adc
cld
es
cvttps2pi
int3
jp
imul
mov
mov
push
push
popf
insl
aad
sbb
add
call
adc
mov
imul
add
xchg
iret
add
icebp
icebp
sub
dec
inc
push
xchg
add
sub
mov
mov
stc
pop
sbb
mov
inc
pop
jae
sub
movsb
cltd
test
daa
scas
pop
mov
int3
daa
xor
jecxz
icebp
jge
xor
cmc
mov
je
mov
stos
mov
rolb
imul
mov
inc
cmp
sbb
push
push
js
jecxz
cmp
mov
outsb
enter
adc
out
or
sbb
or
inc
dec
push
hlt
andl
add
mov
cmp
enter
mov
ficomps
mov
mov
idivb
cmp
inc
gs
pop
fstl
fdivrl
ret
mov
mov
add
mov
sub
leave
xchg
dec
fsts
add
jp
xlat
rol
sub
push
mov
xlat
mov
enter
push
cmpsl
push
inc
mov
popf
outsl
jae
pop
pop
push
hlt
xor
mov
loop
cmp
negb
loope
mov
cld
stos
call
jae
xchg
roll
shlb
sub
in
fadd
xor
mov
jo
xorl
cmp
pop
mov
sub
push
dec
pop
xor
iret
mov
add
hlt
ljmp
shlb
es
fmull
inc
std
cmpsb
inc
xchg
inc
push
lods
out
lock
inc
cmc
mov
decb
adc
adc
jle
xor
push
xor
ja
mov
cmp
mov
insl
leave
leave
dec
testb
call
xor
push
push
clc
pop
inc
stc
sbb
mov
mov
incb
rcrl
sub
jno
subl
lret
cmp
push
outsb
mov
add
pop
ret
xchg
adc
pop
pop
xor
pop
addr16
jae
push
mov
mov
imul
push
or
lahf
testb
popa
jl
mov
xchg
data16
mov
jbe
repz
and
lahf
inc
cmp
mov
aam
jns
xor
scas
inc
loopne
or
in
mov
jl
aaa
cmp
inc
es
pop
jno
pop
add
prefetcht0
xchg
dec
lods
inc
jecxz
in
push
jg
adc
imulb
pop
lock
xchg
cmp
mov
mov
inc
adc
jbe
cmp
test
cltd
cltd
jae
loop
push
sub
cmovae
in
sbb
test
movl
pop
jl
jnp
push
xchg
lret
xor
fisttpl
pop
xor
add
add
mov
adc
mov
xchg
pop
xchg
mov
pop
dec
hlt
mov
pusha
push
mov
arpl
mov
inc
xchg
push
ljmp
and
mov
das
jno
jmp
shr
fidivs
and
add
jge
icebp
xlat
add
test
fistpl
adc
lcall
loope
or
jnp
xchg
imul
xchg
sub
aas
test
mov
pop
push
cld
in
aad
aam
into
stos
push
fldl
dec
ja
cs
ljmp
push
imul
cld
cmp
mov
in
repnz
cltd
pop
leave
out
cli
aaa
lahf
lcall
cmp
dec
push
xchg
jnp
sub
cmp
pop
cmp
daa
adc
mov
sbb
cli
movsb
lock
push
add
adc
hlt
xor
iret
movsb
repnz
int
jg
cltd
jo
movsl
scas
shll
ds
cli
sti
pushf
sub
lahf
sub
insl
push
mov
pop
loopne
add
mov
dec
mov
dec
out
rcrl
mov
stc
and
adc
fdivl
es
lea
push
and
mov
into
jg
inc
adc
arpl
mov
aad
cmp
jnp
adc
ss
fnsave
repz
pop
aam
es
lret
sbb
push
sbb
xchg
loopne
mov
gs
jg
ret
xchg
add
jno
rcrb
cmp
and
cmpsb
fwait
and
inc
xchg
js
jecxz
dec
repnz
cmpsb
outsb
loop
ljmp
lahf
fstpt
dec
push
scas
adc
sub
mov
mov
mov
loope
sub
sarl
lret
adc
add
xchg
mov
fidivl
shr
das
xchg
lahf
leave
mov
mov
pop
jl
pusha
movl
sbb
pop
xchg
mov
adc
adc
test
adc
ror
adc
jb
mov
test
hlt
sar
shlb
and
lcall
cwtl
add
loope
outsb
movsb
mov
stos
test
outsb
ds
pop
mov
shl
lahf
push
mov
mov
mov
insb
in
jl
jle
jmp
jp
lock
add
mov
hlt
dec
repz
clc
mov
ret
or
sarb
call
in
and
enter
scas
ret
out
loop
inc
popl
xchg
or
mov
cmc
pop
mov
sub
push
mov
push
shrl
push
repnz
sarb
inc
xor
fmull
xchg
rolb
xchg
pop
lods
lods
xor
adc
les
movsb
jl
inc
cwtl
pushf
xor
xchg
mov
pop
mov
dec
dec
flds
decl
ret
in
inc
cmp
in
ds
mov
sub
into
jnp
adc
mov
jns
xor
mov
scas
nop
std
dec
dec
test
push
pop
lods
dec
inc
cltd
sub
lahf
jecxz
aam
dec
out
dec
mulb
inc
add
mov
in
mov
decl
adc
roll
jecxz
jp
aaa
mov
mov
cmp
fistpll
enter
jne
xchg
push
push
adc
and
test
jl
sub
dec
das
vcvtsi2sdl
iret
popf
add
pop
cmp
fsubl
cltd
jmp
or
in
stc
inc
push
out
xchg
jge
aam
and
jnp
aas
mov
dec
mov
jg
dec
mov
push
mov
jo
fsts
sbb
lock
test
imul
lods
push
das
repnz
cwtl
test
fldcw
jl
mov
dec
jbe
cltd
pop
cmp
pop
lods
sbb
xchg
cmp
lcall
das
dec
pop
mov
cmpsl
or
pop
and
int3
inc
push
add
lcall
pop
jl
jl
lcall
lcall
lea
push
packsswb
aam
inc
mov
insb
pop
hlt
and
add
xor
daa
pop
or
inc
xchg
clc
dec
movsl
pop
pop
insl
lock
push
pop
loopne
add
loop
enter
add
outsl
adc
test
mov
and
aad
ja
mov
dec
jmp
divl
in
imul
mov
subb
adc
loopne
into
daa
adc
and
jp
ret
jbe
or
jp
ficompl
ret
into
das
dec
cmp
dec
dec
pop
push
cwtl
les
mov
sbb
lcall
andl
cmp
aam
test
int
add
bnd
add
test
in
sbb
aas
mov
mov
sub
cwtl
sub
or
jle
mov
or
mov
repz
jns
adc
dec
push
icebp
cmp
lcall
repnz
cmp
dec
mov
pop
mov
mov
push
lock
adcl
in
out
decb
in
leave
clc
sub
cmp
insb
int3
iret
and
mov
mov
or
jmp
rclb
xchg
jns
mov
pop
adc
leave
cwtl
xor
fsubr
stc
cwtl
or
adc
jge
hlt
and
clc
pusha
fisubs
out
repz
fistpl
jge,pt
mov
lcall
inc
ficomps
add
jp
adc
xor
stc
jmp
aam
and
in
cmpsb
cmp
out
adc
leave
jns
dec
mov
mov
pop
in
das
lods
test
and
in
push
repz
mov
mov
mov
push
mov
repnz
add
lock
cmp
xor
ds
pusha
mov
dec
repnz
enter
or
dec
pop
dec
pop
push
dec
jnp
mov
pop
xchg
xchg
lret
xchg
mov
adc
js
jns
lret
pop
test
addr16
insl
dec
notl
xchg
push
fnstsw
neg
dec
or
lret
ss
data16
icebp
mov
dec
adc
ret
mov
mov
jecxz
fadd
push
adc
xchg
ds
mov
sub
test
jp
cmpsb
cmp
aad
outsb
aaa
sub
mov
in
adc
call
xor
pop
mov
or
pop
bound
shl
sbbl
jns
xchg
or
push
adc
xchg
lret
loope
mov
jne
movsb
xchg
mov
mov
fwait
cmpsl
dec
test
outsb
lret
or
cmp
push
jg
and
sub
insl
fldenv
push
outsb
out
aam
add
es
dec
inc
orl
mov
fstpl
push
in
xlat
xor
mov
jne
cmc
xor
fcomps
inc
push
jns
adc
sbb
pop
jmp
xchg
cli
lret
je
push
pushf
cmpsb
mov
lock
std
loopnew
adc
mov
idivl
lcall
push
mov
mulb
sub
or
es
add
loopne
pop
rcrl
popf
shll
add
repnz
repnz
loopne
fwait
imul
xchg
jo
out
frstor
testl
adc
icebp
dec
addb
addr16
lret
mov
lret
xor
sahf
rcl
outsl
sub
inc
inc
jl
ss
addr16
sbb
pop
daa
pop
in
aam
divl
testl
push
jmp
loope
jl
push
or
cwtl
and
push
xlat
inc
in
lcall
sub
bswap
imul
pop
loope
and
movsl
lds
cld
jmp
jo
pop
adc
cmp
push
test
sbbb
add
push
adc
jp
shrb
test
pushf
dec
repnz
pop
ficoml
iret
lret
or
lret
and
pop
sarb
int3
lahf
pop
pop
jo
popa
mov
pop
mov
xchg
sti
dec
and
scas
fnstenv
xchg
shrl
das
fidivl
icebp
mov
test
nop
push
jbe
sbb
xorb
and
pavgb
test
nop
adc
xor
js
fidivrl
shrb
adc
cmp
sbb
sub
fmul
mov
test
cmp
xchg
ret
inc
sbb
xor
push
in
xchg
sub
iret
pop
xlat
sarb
add
pop
aad
xchg
pop
lret
cmp
inc
lods
ljmp
mov
mov
xor
inc
or
xchg
add
pushf
pop
xchg
xchg
clc
popa
test
push
cmpsb
inc
lret
mov
popf
lret
mov
clc
mov
movl
fwait
cmp
mov
dec
cmp
inc
mov
shr
sbb
cmp
adcb
cmc
push
imulb
sbb
shlb
stc
dec
or
rorb
cmpsb
mov
aam
and
lock
scas
dec
push
cltd
pop
sub
into
or
mov
lret
jbe
cmpsl
std
aas
sub
mov
mov
fcomps
ss
inc
push
punpcklbw
std
xchg
shr
mov
test
pop
fmul
jb
shr
shr
cmp
bound
in
outsl
pop
push
lds
js
sbb
fcmove
in
push
lods
rorb
cmp
jae
test
and
mull
test
push
or
add
test
pop
loope
adc
inc
jmp
dec
cmp
mov
mov
inc
add
adc
jge
cmp
or
rolb
sbb
or
cltd
ret
add
xor
gs
mov
dec
pop
fcomip
push
cli
push
sti
or
and
insl
loope
xchg
sub
sub
xchg
xchg
cmp
and
jnp
push
lds
sbb
and
daa
mov
sahf
imul
pop
mov
adc
mov
dec
ds
mov
jmp
mov
pushf
push
dec
jno
jnp
gs
mov
movb
cmp
lods
test
jmp
jle
fs
add
pop
xlat
data16
cld
add
xor
ss
daa
add
jne
in
lahf
cmp
adc
pusha
or
add
add
icebp
pushf
push
mov
out
arpl
aas
sub
inc
cmp
out
add
add
js
lods
mov
or
je
pop
aaa
in
sahf
jmp
loop
loope
outsl
and
clts
imul
xor
js
es
xchg
mov
mov
dec
add
popl
fs
add
loop
cmp
push
enter
mov
mov
xor
jp
out
jb
repnz
test
and
call
jno
rol
mov
sbb
pop
pop
cltd
out
dec
cmpsb
rclb
inc
mov
pop
inc
push
jno
mov
cmp
adc
adc
aas
dec
xor
mov
sub
mov
scas
push
imul
movsl
pop
mov
and
sbb
xor
addl
movsl
cmp
mov
push
lahf
aam
iret
pushf
insl
mov
sub
lret
into
inc
push
shlb
cmp
xchg
sti
aaa
call
mov
xchg
mov
in
test
jp
xchg
xlat
push
popa
imul
aaa
insb
lahf
movsl
mov
stos
pop
jae
jne
xchg
or
fnstsw
bound
add
sti
sub
lahf
movsb
mov
enter
mov
mov
stc
inc
adc
pcmpgtb
cmp
mov
pop
jle
jae
nop
adc
xor
insl
push
sbb
mov
push
stos
mov
sbb
cmp
aam
call
je
xor
cmp
jle
xchg
inc
flds
mov
fwait
leave
mov
insl
sbb
int3
es
adc
pop
scas
shrb
xchg
mov
outsl
jnp
xchg
dec
lahf
or
xor
inc
dec
enter
or
xchg
mov
sbbl
sbb
mov
xor
pop
mov
daa
jge
mov
dec
shrl
repz
or
xchg
subl
add
jo
xchg
sbb
cmp
mov
and
pop
and
mov
xchg
push
push
jo
shrb
aaa
jb
out
es
xchg
xchg
dec
cmp
lds
mov
push
dec
jmp
inc
adc
inc
jmp
out
aas
cmp
nop
fs
sub
popf
and
cmpl
add
inc
insb
xchg
jbe
lcall
pop
and
nop
lahf
dec
inc
fs
out
sub
mov
dec
aam
mov
or
popf
mov
pop
xor
in
jb
pop
bound
fadds
dec
cmpsb
lods
sbb
fwait
enter
jno
mov
push
enter
mov
movsl
mov
enter
out
pop
and
popa
scas
pop
lcall
jbe
cmp
add
repnz
xor
sbb
jl
aad
testl
sub
inc
test
dec
ljmp
sub
into
iret
jle
pop
jp
pushf
xchg
mov
pop
or
mov
std
xor
jl
lods
push
add
xchg
mov
sbb
pop
cld
pop
sub
xchg
dec
inc
nop
xchg
jb
inc
jne
mov
pop
push
lds
fcmovnbe
pop
mov
pop
mov
sbb
jecxz
pop
mov
mov
outsb
lret
cmp
or
fs
and
mov
push
sahf
jle
cmp
pop
mov
imul
adc
push
out
pop
jl
and
cmp
push
popf
xchg
cmc
out
jle
data16
scas
push
mov
jbe
lock
push
test
add
xor
popf
cli
jno
mov
lods
mov
mov
cmpsl
lods
cltd
shl
ret
pop
cwtl
sub
jmpw
aam
cltd
jbe
pop
andl
outsb
push
fidivrl
mov
xchg
dec
mov
stc
xor
adc
cmp
sarl
rcrl
testl
cltd
mov
into
or
or
and
mov
ja
xchg
out
fnstenv
cmp
pop
mov
shrl
sub
mov
mov
jle
mov
ret
mov
fcompl
cmp
ror
cs
js
les
out
nop
mov
add
jmp
mov
adc
cltd
mov
fs
cmc
mov
xchg
jg
sahf
mov
in
popf
add
inc
dec
or
enter
inc
jecxz
dec
jl
pop
pop
mov
dec
stc
mov
xchg
mov
mov
jo
sbb
and
insl
jle
imul
lods
xchg
stos
sbb
in
mov
mov
stos
adc
mov
xchg
push
pushf
ja
and
mov
aam
test
mov
cmc
cwtl
push
repnz
test
js
push
roll
lret
aad
test
out
push
movsl
mov
or
and
mov
cmp
inc
fdivs
or
shr
push
js
mov
mov
cmp
xchg
hlt
cmp
jns
scas
mov
jnp
test
sbb
cmp
ja
jmp
shl
xchg
push
mov
cld
jge
arpl
xor
sub
mov
arpl
jnp
sbb
add
jle
stc
stc
xchg
mov
sbb
dec
pop
cmp
xchg
inc
mov
scas
imul
js
xor
loope
sbb
dec
push
and
and
xor
and
adc
shll
popa
fstpl
pop
in
adc
push
add
sbb
xchg
inc
cmp
enter
or
cmpsb
xor
xor
jle
add
arpl
pop
filds
add
in
divb
mov
stos
repnz
and
negb
lahf
movsb
das
xor
adc
jge,pt
cmpsl
inc
pushf
jecxz
popf
fbstp
pop
ret
lods
pop
int3
repz
or
movsb
pop
inc
sub
add
mov
sbb
adc
and
xor
addb
popf
sahf
or
icebp
leave
and
pop
xchg
mov
push
push
lods
push
jb
sbb
mov
cltd
fcoms
jmp
xor
and
dec
fs
push
pusha
jge
and
sub
scas
pusha
call
mov
pop
xchg
xor
dec
jp
mov
adc
sub
pusha
xchg
mov
and
pop
cmpsl
xor
xchg
sub
jge
mov
pop
jle
in
inc
out
mov
fcoml
adc
ucomiss
in
ss
aad
cmp
mul
mov
mov
or
fs
mov
push
push
and
mov
cld
and
divl
dec
sbb
xchg
inc
ret
insb
push
leave
xor
mov
cmp
test
mov
aad
adc
subl
mov
sbb
outsb
add
aaa
rol
incl
je
popl
sub
sbb
xlat
lods
mov
leave
fcmovnu
pushl
adc
lods
push
out
leave
icebp
ljmp
fcmovb
add
pop
sbb
out
int
add
icebp
fwait
adc
scas
dec
nop
xchg
ja
or
and
jge
mov
in
pushf
xor
stc
popf
xchg
mov
xchg
push
scas
mov
cli
adc
hlt
mov
mov
cmpl
test
push
aaa
push
dec
jo
aad
cmpsl
popf
push
mov
mov
out
push
lret
adc
es
mov
sub
cmp
sbb
inc
xorl
cmpsb
mov
rolb
jge
xor
mov
xchg
push
xchg
cli
lret
int
js
sbb
sbb
mov
lcall
xchg
es
gs
mov
jbe
cmpsl
adc
cmp
push
jae
fildl
push
cld
pop
scas
mov
sub
fidivrs
cmp
add
xchg
mov
or
mov
aam
scas
ds
mov
out
inc
inc
mov
test
das
gs
test
jl
xchg
or
fisttpl
xchg
cs
mov
add
popa
adc
outsb
movsl
out
cmp
push
inc
mov
mov
scas
mov
cmp
cmp
jae
mov
add
sti
jbe
aas
push
dec
inc
push
filds
out
lret
das
mov
nop
call
scas
dec
loopne
fidivl
stos
mov
pop
mov
cmc
jmp
cli
add
jno
mov
jno
les
std
mov
outsb
pop
push
arpl
xchg
jle
jmp
mov
mov
adc
call
std
clc
and
mov
fs
fadd
lcall
dec
mov
js
lods
lret
xchg
mov
movsl
aam
add
push
inc
jecxz
or
push
insb
or
aad
sbb
inc
mov
pushw
cs
sti
jmp
sgdtl
movb
std
push
fisubl
inc
or
push
mov
sub
loopne
in
insb
push
je
fwait
sub
push
push
pop
sub
mul
jmp
sbbl
not
push
dec
sub
xchg
sub
and
loopne
in
ss
sahf
cmc
out
mov
push
xchg
push
cmc
in
add
adc
shl
fisubl
dec
test
loopne
or
push
loopne
xchg
out
jb
jno
add
mov
mov
mov
adcb
push
fisttpll
loop
xchg
and
shl
into
adc
dec
push
mov
jae
repz
cli
pop
pop
pushf
inc
ss
arpl
imul
pushf
cmp
movsb
xchg
fimull
stos
in
rol
jl
xlat
nop
adc
cwtl
cld
repnz
mov
adc
lahf
insl
dec
xor
inc
cmc
fildl
aam
pusha
mov
cmp
inc
mov
stos
xor
repnz
fdiv
pop
and
jno
xor
inc
imul
xor
jo
stos
iret
cmp
aas
jbe
ss
dec
popf
cmc
xor
int
xor
pop
push
daa
jmp
add
adc
and
lret
dec
fdivl
add
ds
lret
jb
inc
sarl
dec
mov
inc
pop
fistpl
lods
fnstsw
cmp
fsubl
arpl
xchg
or
stos
fistpl
fnstsw
adc
pop
ret
mov
xchg
push
ds
ja
pop
inc
push
xlat
xor
jae
imul
or
cwtl
scas
sub
mov
sarb
push
jl
xchg
stos
andl
sub
sbbl
or
xchg
std
test
cmp
xchg
imul
pop
mov
push
test
pop
pushw
mov
sahf
aas
scas
pop
inc
cmp
stos
sub
out
xor
sahf
cmp
es
add
dec
insb
arpl
sub
scas
outsl
dec
mov
mov
sub
and
jle
dec
dec
xor
js
popl
adc
push
sub
jmp
ret
shrl
jmp
inc
xchg
stos
out
jp
pop
push
clc
push
int
dec
leave
push
outsl
xchg
and
aam
mov
out
aaa
lds
inc
jl
test
jns
or
cmpsb
cmp
mov
xchg
mov
push
cltd
and
xchg
cmpsl
sbb
loopne
cmpsl
int3
mov
sub
lods
mov
sbb
loop
mov
mov
or
out
adc
xor
hlt
cmp
lock
push
pusha
lcall
xchg
jno
sub
pusha
jnp
fs
add
add
popa
mov
call
repz
divb
cmpsl
pushf
adc
mov
mov
pcmpgtw
mov
mov
mov
xor
dec
mov
mov
sub
or
xchg
loop
shll
outsl
add
xchg
addr16
fisubrl
push
push
bound
cmpsb
jbe
test
jle
mov
xor
call
test
in
ret
pop
call
aad
cmpsb
xchg
sbb
movsb
sub
jno
jmp
pusha
setns
ja
mov
xor
int3
pusha
and
js
lret
sub
loop
das
mov
jae
lret
or
imul
or
popf
push
mov
out
or
out
cmp
addb
rolb
fisubl
sahf
jns
mov
cli
testl
std
test
pop
inc
cs
mov
jg
cltd
int3
fstpt
loopne
adc
flds
mov
into
xor
dec
push
pandn
push
mov
jo
push
stos
rol
and
inc
sub
ret
and
sub
test
pop
pop
and
dec
xorb
fdivs
shl
sub
stc
xchg
pusha
stc
add
fdivrl
jl
adc
xchg
outsb
gs
and
aas
int3
dec
inc
jo
out
fdivs
pop
roll
xor
shll
popa
dec
imul
in
xchg
fadds
jp
xchg
movsl
fiadds
xchg
std
cmpl
cmp
or
scas
fidivrs
stc
add
or
pop
mov
stos
cmp
inc
pop
stos
out
jno
xchg
in
sub
or
into
pop
adc
clc
adc
out
lret
xor
jle
xchg
fisubrs
push
enter
push
outsl
dec
mov
imul
cmpsl
loopne
and
mov
xorb
lea
sub
jbe
xchg
adc
or
out
cld
fmul
mov
out
mov
mov
sbb
cmpsl
xlat
pushf
pop
lds
vmaxsd
lahf
out
xchg
jne
rcr
lods
pop
addl
cwtl
dec
lret
push
rclb
mov
cwtl
pop
dec
mov
leave
inc
inc
les
pop
inc
fisubl
push
shrl
sarb
lods
mov
out
pusha
stos
stos
sbb
lcall
sub
sub
lret
xchg
inc
ja
int3
and
out
lds
add
test
xor
aas
pushf
add
lret
enter
mov
loope
and
jns
inc
push
arpl
lods
dec
add
jl
insl
jo
out
sbbb
inc
clc
mov
fdivl
ror
sub
push
arpl
xchg
sbb
pop
jo
xor
or
fnstcw
dec
mov
jno
mov
mov
jecxz
xchg
xchg
xor
mov
rorl
sub
and
or
push
fmull
push
mov
enter
std
xor
or
jl
adc
mov
lea
adc
cltd
push
push
mov
cs
push
pop
or
fimull
in
hlt
adc
xor
adc
sbb
es
jg
pop
aam
xchg
inc
scas
pop
and
sbb
icebp
inc
jne
jmp
mov
sbb
mov
add
fidivl
fdivl
rorl
insb
stos
jb
and
popl
sub
stos
sahf
mov
dec
cmp
sbbb
sbb
push
stos
lods
dec
pop
dec
xor
mov
insb
mov
lret
fiadds
push
out
test
fstp
cmp
imulb
cmp
nop
mov
xor
out
ret
inc
xchg
stos
cs
cld
dec
call
test
dec
sbb
mov
push
sti
mov
xchg
push
push
mov
add
icebp
arpl
cltd
jge
stc
cli
leave
push
test
orl
mov
cmp
popl
and
jp
mov
out
in
pop
sbb
lret
or
jo
xchg
outsl
sub
repz
pop
mov
aaa
std
mov
xor
es
cwtl
cmp
decl
inc
mov
mov
mov
ja
xor
cmp
sbb
or
mov
gs
jo
shlb
mov
push
imul
xchg
notl
cmp
pop
sahf
cmpsl
lods
into
inc
fisttps
mov
daa
xchg
popa
dec
and
sbb
jl
lret
inc
in
add
mov
movsb
std
mov
test
mov
cmpsb
mov
fistpl
gs
push
lea
cmp
xchg
mov
mov
jno
adcl
mov
push
jbe
ljmp
xchg
popa
je
pop
lock
dec
das
and
xor
into
xchg
fiadds
jnp
cmp
pop
and
xor
rolb
int3
adc
es
pop
pop
mov
test
mov
sbb
pop
dec
lods
or
adc
out
mov
adc
pop
inc
lods
adc
movsl
popf
test
inc
cltd
es
rcrb
dec
out
inc
mov
sub
std
mov
lcall
push
jl
and
pop
cs
or
pop
fidivs
cmp
xor
push
jecxz
xor
inc
adc
les
pop
test
or
lahf
mov
fs
xchg
mov
clc
push
mov
out
adc
mov
and
std
mov
push
ja
cld
push
sub
pop
or
fistpl
add
cmp
sbb
mov
mov
sbb
sbb
push
inc
into
push
fstl
mov
adcl
out
insl
lods
jne
sbbl
testb
or
loope
stos
adc
loope
in
orl
or
repz
movzwl
inc
mov
and
sub
xor
les
nop
pop
cld
inc
or
pop
stos
shll
add
add
ljmp
inc
or
xchg
mov
test
sbb
test
iret
mov
clc
int3
xor
xchg
push
mov
mov
imul
pop
lahf
bndldx
in
test
push
fisttps
pushf
scas
ss
push
push
mov
sub
popf
in
das
add
pop
hlt
sub
fidivs
jg
xor
sarb
mov
loop
les
jnp
cld
dec
mov
add
shlb
sbb
repnz
stc
cmp
sub
lods
fsubrs
xchg
sbb
jle
or
dec
cmovs
and
fldcw
mov
xchg
mov
out
mov
jmp
and
sub
or
push
xor
ss
sub
sbb
mov
stos
and
pop
lret
movsb
cmp
inc
fs
pop
aam
arpl
imul
add
xchg
and
cmp
ljmp
push
mov
mov
mov
test
inc
rcr
xlat
mov
jmp
and
movsb
in
or
test
cld
data16
fisubl
test
scas
and
out
imul
add
addr16
cmpsb
adc
adcl
je
cltd
dec
pop
call
pop
xchg
jmp
cmp
out
movsl
cmp
rcll
xlat
gs
jne
stc
into
xor
sbb
arpl
xchg
fstps
lret
dec
cli
sub
push
push
jp
test
jae
mov
jb
lcall
lahf
xchg
mov
dec
dec
aam
repz
std
cs
in
jge
jnp
mov
fs
adc
sbb
dec
std
out
inc
rolb
sbb
mov
or
add
mov
xor
or
insl
test
xor
dec
cli
inc
lock
fadds
sbb
ret
cli
lahf
jp
clc
in
scas
outsb
or
repnz
les
movsl
ja
sbb
orb
cmpsb
inc
ja
insl
popa
or
adc
hlt
xchg
dec
mov
push
jno
je
mov
lds
mov
shll
mov
das
aam
jge
push
nop
mov
or
cmp
pop
xchg
add
adcl
jp
push
push
scas
mov
lret
or
nop
in
ljmp
rorb
sub
fxch
sbb
addr16
add
cmp
mov
test
in
insl
mov
dec
cs
xorl
pop
in
pop
jmp
inc
cs
mov
cmp
rcrl
addl
or
inc
adc
mov
ret
xchg
xchg
mov
mov
mov
inc
push
dec
pop
mov
push
jle
lahf
fst
push
pop
outsb
xchg
jae
aad
fisttps
movsl
ja
add
int3
movsl
add
clc
or
lcall
jl
call
repnz
jg
mov
sub
lret
mov
loope
and
adc
dec
repz
pusha
add
test
inc
cmpsb
lods
add
jae
mov
lahf
xchg
xchg
fsubrs
inc
lret
fdivr
jp
ficoms
mov
arpl
mov
paddd
sub
ret
call
cmp
andl
outsb
jmp
int
mov
xor
clc
mov
scas
pop
mov
mov
out
mov
jmp
fs
call
xor
adc
stos
or
les
pop
test
jno
insb
xor
inc
and
pop
repnz
pop
mov
sub
outsb
inc
fnsave
or
and
and
dec
imul
dec
inc
dec
mov
mov
ds
xchg
jge
lea
fmull
xchg
rcrl
fisubs
inc
cmp
pushf
sub
test
xor
in
jnp
cmp
dec
int
xchg
inc
push
cs
cwtl
lahf
adc
ficoms
sarl
or
out
push
subb
pop
gs
push
aad
jne
les
ret
pop
out
xchg
add
pop
add
out
fwait
gs
inc
ss
je
push
add
lea
test
repnz
ficoml
sub
push
sub
cld
aam
shlb
clc
sub
adc
std
stos
mov
xchg
inc
mov
mov
xchg
in
in
push
adc
inc
adc
or
or
mulb
mov
jns
push
addl
lret
mov
or
xor
subb
std
enter
push
stos
inc
mov
adcl
dec
lds
mov
adc
es
sbb
les
jb
out
scas
lock
pop
jne
push
add
dec
aaa
rorb
or
mov
add
add
js
rcll
leave
push
ret
and
mov
cmpsb
push
pop
inc
or
je
std
mov
or
lcall
fisttpll
imul
iret
sub
fstps
or
xchg
or
pop
int
fwait
test
les
dec
mov
fistpll
scas
jge
sub
cld
lods
and
dec
add
add
clc
xor
push
xchg
and
cmp
xchg
int3
enter
or
sbb
sub
es
dec
xchg
shl
dec
mov
push
push
out
notl
mov
push
cmp
imul
movsl
decb
stos
adc
mov
and
mov
rcll
fdivl
mov
inc
hlt
xchg
std
jns
pop
scas
daa
dec
icebp
inc
mov
push
mov
mov
add
xor
jnp
and
adc
xchg
lret
sub
adc
ret
les
jp
push
mov
adc
cmp
lret
lods
cmp
mov
nop
jns
nop
mov
loope
xor
mov
mov
inc
xchg
repz
dec
adc
stos
push
mov
inc
hlt
not
cmp
jne
lea
mov
in
adc
mov
xchg
sub
in
adc
pop
in
dec
xchg
ss
xchg
lods
mov
jg
xchg
outsb
add
js
js
pop
cmp
rorb
ret
inc
es
lods
bound
in
push
stos
add
and
stos
nop
shr
mov
jb
mov
cmpsb
and
add
inc
mov
cmpsl
inc
cwtl
in
sbb
lods
addr16
jle
dec
mov
push
xor
fwait
inc
add
and
xor
dec
lahf
xor
or
mov
fcompl
sahf
dec
mov
adc
sbb
sbb
stos
and
faddl
and
shlb
sarb
jl
inc
js
xchg
dec
inc
testb
js
inc
bound
jge
xchg
pop
sbb
mov
mov
shll
cltd
push
cmp
push
push
cmp
and
lret
jno
cmpsb
insl
sub
mov
jmp
fisubs
mov
pusha
mov
pushf
pusha
adc
out
aam
loope
jge
cld
je
les
arpl
icebp
and
mov
das
jp
pop
scas
adc
insb
or
ficomps
icebp
pop
pushf
push
add
daa
lods
popa
and
sub
ds
cwtl
or
inc
stc
cwtl
decb
push
or
mov
push
popa
add
sbb
mov
imul
in
int3
jns
push
std
test
repnz
imul
adcl
daa
popf
mov
pop
fmulp
cld
cmp
mov
fidivrs
ficoms
sbb
lret
pop
push
xor
idivb
sbb
fwait
icebp
mov
js
push
push
outsb
jae
mov
out
push
and
repnz
into
mov
push
pop
jg
jmp
lret
dec
neg
jmp
repnz
sub
int
and
push
sarb
lods
ja
xchg
sbb
loope
cmp
fidivs
jp
pop
or
add
xor
pushf
inc
xor
push
or
std
popa
sub
jg
pop
stos
xchg
stc
inc
jbe
dec
jle
test
pop
cli
jge
js
sbb
aaa
hlt
call
and
push
add
xchg
lods
das
dec
test
mov
push
lods
in
mov
test
std
leave
imul
iret
ret
enter
mov
in
dec
xchg
int
movsb
push
into
sub
loopne
xor
in
int
jge
out
int3
leave
cmp
repz
das
iret
sahf
idivb
adc
lahf
mov
xor
fs
fcoms
sub
and
mov
out
sub
mov
pop
call
push
inc
inc
inc
lret
mov
scas
pop
imul
pop
sbb
sub
cmp
add
mov
mov
push
adc
xor
insb
aam
cmp
push
add
jmp
dec
add
pop
aad
stc
and
mov
xchg
lods
cmpl
idivb
or
jns
rcrb
repz
sub
in
sub
and
outsb
div
iret
push
out
sub
cwtl
pushl
xchg
adc
push
pop
push
cmp
mov
cmpsl
fbstp
js
push
hlt
cmp
movsl
add
push
iret
aad
adc
jns
mov
lods
jmp
push
and
jecxz
shlb
mov
idivl
mov
push
push
call
mov
dec
jnp
cmc
sub
mov
not
sub
pop
inc
xlat
les
pushf
mov
mov
cmpsb
inc
ss
test
cld
repnz
mov
push
adc
sbbb
jns
aaa
in
in
retw
sub
add
adcl
mov
mov
insb
sbb
int3
xor
icebp
lods
and
inc
in
dec
out
jbe
inc
clc
push
jbe
mov
inc
ret
adc
test
out
pop
mov
sub
sahf
loop
inc
inc
push
mov
push
push
pop
mov
mov
xchg
add
xchg
imul
push
rorb
ljmp
fsts
ljmp
in
frstor
insb
push
cmc
ret
jbe
jge
inc
shl
cwtl
and
sbb
imul
mov
mov
adc
xor
scas
lods
iret
inc
pop
adc
aam
sbb
in
pop
jne
inc
mov
subb
mov
popf
xor
or
mov
dec
jno
lret
push
arpl
pusha
or
stos
pop
push
int
sbb
pop
sub
cmp
jg
je
cmc
inc
jb
mov
add
mov
ret
jno
jge
mov
mov
inc
xchg
adc
or
mov
mov
mov
xor
cmp
addl
dec
mov
xlat
add
out
and
push
mov
loope
and
clc
enter
lods
or
outsb
push
clc
xor
iret
adc
stos
mov
push
rclb
rcll
mov
and
adc
lods
inc
mov
popf
in
inc
jle
mov
mov
nop
aas
test
sub
xchg
lods
cmpsl
jo
jecxz
imul
adc
cwtl
jge
negb
or
cs
iret
inc
mov
call
push
cmp
sub
xor
cvtps2pi
mov
sub
inc
push
in
push
dec
mov
or
cmp
mov
push
dec
pop
or
fs
add
sbb
jle
jecxz
add
pop
ljmp
xchg
std
btc
outsl
xorb
dec
test
scas
xlat
pushf
int3
xchg
sbb
fisubrs
movsb
sub
dec
mov
adc
sbbl
push
sub
mov
sahf
in
rclb
push
leave
mov
aam
lock
mov
repnz
enter
xchg
mov
sbb
push
fiaddl
inc
int
jp
jg
xchg
mov
insl
jp
or
sbb
jecxz
lcall
nop
jmp
dec
adc
inc
mov
and
jp
inc
push
scas
add
lea
ja
jge
mov
hlt
push
sbb
les
popf
aam
scas
and
mov
xchg
push
mov
ret
cmp
stos
pop
ds
mov
sahf
sub
jne
lods
gs
pop
lods
or
adc
sbb
stc
jecxz
sbb
mov
test
or
and
sbb
dec
jbe
mov
insb
sbb
je
out
mov
daa
sub
daa
push
jbe
imul
iret
fcmovb
bound
inc
movsb
pusha
imul
push
icebp
test
enter
mov
imul
push
mov
repz
lahf
das
cmp
and
pop
mov
mov
test
fisttpl
xor
das
cmp
fndisi(8087
sbb
ja
push
xor
pop
fmuls
lcall
jb
jno
roll
mov
and
fadd
int3
inc
icebp
int3
mov
mov
jne
pop
lahf
push
ficomps
cli
cmp
and
orb
in
repz
mov
mov
mov
data16
push
int
in
jg
xchg
mov
out
dec
in
xchg
mov
inc
lret
or
xor
or
xchg
jnp
dec
dec
call
inc
pop
cwtl
mov
test
pop
fdivl
lods
jno
jns
sub
sub
roll
pop
nop
fimull
mov
in
push
js
sbb
jle
lret
clc
mov
sbb
pop
pushf
xor
jg
sbb
cld
push
dec
data16
pop
inc
test
cmp
adc
mov
push
jb
push
push
out
scas
aas
lds
rcr
dec
loop
cmp
gs
jns
sbb
jp
ja
lea
push
in
gs
dec
push
mov
fcmovnu
mov
cwtl
jmp
sub
cwtl
dec
mov
sbb
data16
xchg
or
int3
mov
jg
shlb
fsubl
out
xor
js
or
xchg
dec
adc
xchg
sarb
mov
jecxz
push
sbb
bound
mov
fistpll
sbb
bound
enter
cmp
push
test
mov
push
jecxz
idivl
push
xlat
pushf
and
imul
dec
lods
movsb
int
outsl
mov
aad
mov
push
jp
cli
lds
ss
cli
adc
rorl
mov
shrb
push
or
clc
iret
sub
out
xor
mov
test
scas
push
insl
js
shr
sahf
push
rcrb
mov
or
inc
out
inc
and
or
sub
or
nopl
pusha
push
imul
cmc
aas
cmp
dec
outsl
pushl
repz
mov
insl
jb
sbb
lret
jbe
push
inc
imul
add
icebp
test
call
mov
jmp
bound
jne
xor
mov
in
sbb
movsb
lahf
cmpsb
lret
pop
push
loopne
shll
sub
into
test
lds
xor
sub
cmp
js
and
ljmp
mov
adc
ret
je
cltd
push
push
mov
stos
xor
mov
je
cli
xorl
mov
cmpsb
or
push
push
inc
push
call
lods
dec
je
add
pop
push
jle
xor
push
adc
xchg
sbb
rcrl
inc
push
push
push
jl
and
inc
fcoml
mov
rcrb
data16
roll
test
por
faddp
mov
pop
cmp
popa
adc
je
test
mov
fiadds
cwtl
repz
pop
in
cmp
cwtl
adc
sbb
xchg
lcall
or
pop
arpl
pusha
cmp
insb
imul
sub
cs
pop
cltd
jmp
adc
shlb
aaa
loopne
scas
sub
dec
outsb
ret
outsl
adc
sub
rolb
inc
movsl
fnstsw
mov
std
sub
push
adc
push
sarl
lahf
push
pusha
xchg
loope
mov
outsb
mov
mov
mov
pop
lcall
mov
xchg
mov
pop
sarl
faddp
sub
xchg
pop
aad
cmc
stos
mov
xchg
sub
movsb
sarl
jnp
push
mov
sub
test
xchg
push
out
insb
iret
les
pop
inc
test
leave
sbb
push
mov
mov
sbb
fdivrs
dec
xchg
call
jno
loop
cli
fxrstor
add
out
jnp
shrb
aad
push
push
sub
aad
jmp
lods
lds
aaa
xor
mov
pop
ret
push
mov
gs
int3
roll
sub
mov
push
push
pop
loopne
or
sbb
lret
dec
cli
mov
or
fdivrp
pop
sbb
fld
xchg
ret
stc
mov
icebp
dec
and
ds
xor
mov
cmpb
rorb
pop
aas
sbb
jg
cmp
out
call
dec
int3
xchg
pop
fucom
and
and
xor
sub
gs
adc
and
xchg
lds
subb
adc
leave
inc
call
pop
xchg
cs
scas
xchg
adc
shlb
int
cmp
and
orb
mov
dec
xchg
bound
orl
out
sbb
xor
mov
and
xchg
or
xor
mov
xor
frstor
filds
lret
rclb
decb
and
and
push
cmp
daa
in
push
mov
insl
roll
push
fisubl
jmp
dec
adc
xor
mov
cld
idivl
repz
fcmovnbe
rorb
mov
sbb
pushl
dec
push
mov
mov
mov
inc
fiaddl
cmp
and
lahf
add
repz
arpl
loopne
sub
add
xorb
dec
xlat
inc
dec
adc
ja
dec
sahf
mov
mov
fwait
sub
inc
fnsave
jae
mov
scas
xlat
hlt
call
call
dec
cwtl
pushf
leave
leave
imul
fucomi
outsb
lea
std
push
clc
cld
mov
sub
push
jne
pop
loop
loop
repnz
stc
popf
and
hlt
or
into
cmp
rorl
jnp
test
add
fadds
xchg
xor
push
iret
repz
fs
inc
daa
sub
mov
das
aas
lods
jle
outsb
stos
js
inc
mov
xchg
mov
outsl
jmp
xchg
movsb
push
mov
scas
pusha
mov
mov
jmp
cmp
add
int3
jae
pop
cmp
repz
push
loopne
jb
in
push
xor
inc
xchg
sahf
and
pop
shll
xchg
mov
jnp
xchg
mov
jmp
push
inc
fwait
push
stos
lods
mov
mov
xor
mov
inc
inc
mov
std
inc
pop
out
movsl
nop
cli
outsb
cli
inc
sub
scas
out
cli
int3
leave
add
mov
test
stos
lods
push
cmp
addr16
jmp
adc
fs
scas
push
loopne
cmp
and
mov
cmp
mov
lret
dec
cli
repnz
in
inc
push
js
xchg
arpl
push
jge
or
iret
pop
add
andb
lods
aas
imull
push
cmc
mov
mov
popa
testb
pop
fimull
out
orb
mov
adc
jns
add
cld
arpl
ss
jo
mov
imul
lock
xor
test
jge
mov
mov
jne
cmp
pop
insl
fwait
call
aas
int3
sub
mov
repnz
cli
jo
daa
sbbl
stos
rclb
adc
sbb
stos
hlt
pushl
xor
and
jno
ja
ret
arpl
les
imul
mov
sbb
cmpb
inc
roll
testl
arpl
in
xchg
mov
or
push
loopne
jp
fisubs
rolb
mov
call
leave
stc
or
pop
and
push
jno
inc
push
dec
xchg
mov
fisttps
or
inc
dec
jns
data16
sub
loopne
push
adc
or
adc
mov
cmpsl
pop
push
popf
rcrb
dec
adc
icebp
pop
push
leave
shlb
dec
sub
add
loope
add
cli
push
fsubr
or
inc
outsb
or
pop
sbbb
xor
cmp
cmp
les
and
fldcw
pop
repz
mov
arpl
sbb
ficompl
test
adc
imul
pop
in
push
leave
fcmovnbe
cmp
cltd
or
xchg
sub
adc
inc
mov
mov
pop
lds
sub
sub
inc
pop
inc
dec
hlt
mov
jae
add
loopne
popa
int3
and
mov
stos
adc
clc
mov
out
pop
cmpsb
les
enter
jp
mov
dec
mov
push
dec
mov
hlt
leave
cwtl
mov
lods
mov
adc
fiaddl
push
data16
mov
push
idivl
xor
rclb
adc
mov
enter
xor
sbb
loopne
addb
pop
cs
cs
xchg
ds
jo
cmp
ds
cmp
jl
and
mov
mov
dec
jg
add
xlat
xchg
std
lock
pop
imul
in
addr16
addr16
pop
testb
sbb
jne
cmpsb
insl
out
sub
sbb
jg
je
notl
in
inc
fsubrp
and
cmp
xor
sbbl
clc
movl
leave
jg
aad
pop
into
adc
lods
adc
sub
push
insb
in
mov
pushl
cmp
mov
lcall
push
testb
jmp
clc
jno
lods
icebp
dec
ret
out
shl
pop
cwtl
xor
mov
out
adc
xchg
lods
sti
pop
imul
jp
insl
pop
sbb
mov
bound
sbb
mov
movsb
sub
mov
jb
fidivrl
sahf
and
dec
sbb
inc
out
imul
push
dec
add
stos
xor
jge
jmp
mov
test
or
pop
cmpsb
cmp
aam
aad
cmp
pop
push
out
lcall
out
movsl
std
jae
pop
jle
push
xchg
mov
stc
mov
in
mov
mov
push
pop
popf
insb
xlat
push
pusha
add
adc
sub
jle
jno
hlt
mov
or
test
aas
cmp
pop
xor
and
je
adc
lret
bound
lret
sbb
cmp
push
mov
lds
inc
mov
xlat
cmp
pop
add
jecxz
mov
mov
fidivs
and
lret
inc
fucomp
cmpsl
loopne
push
nop
push
add
add
push
mov
xor
xchg
jns
jns
lds
in
and
rcrl
push
js
repz
sahf
out
fcoms
jmp
cmp
mov
divl
add
add
push
jns
mov
cltd
repz
out
cmp
shl
mov
pop
out
xchg
cld
cmp
jbe
jne
inc
jns
mov
cmp
jbe
fadds
pop
out
bswap
cmp
push
push
outsl
movsb
pop
xor
lock
adc
mov
cmp
or
mov
xchg
xor
add
cli
xor
push
xor
or
jns
imul
jns
xchg
shll
adc
jo
addr16
jge
shufps
jnp
leave
clc
shlb
cmp
xchg
or
jmp
sti
mov
dec
sub
out
fucomip
mov
movsl
mov
mov
testb
sbb
or
pmaxsw
inc
sar
popf
and
cmp
mov
and
fwait
outsl
out
sbb
mov
pop
add
push
mov
andnps
and
in
bound
adc
sbb
insl
add
sub
dec
incb
xor
or
shl
add
into
test
inc
rcll
shlb
je
sbb
test
sbb
jmp
lods
test
out
loop
cwtl
jmp
sub
or
filds
sbb
xchg
cwtl
sbb
jmp
stc
imul
daa
es
xchg
xchg
push
push
mov
cmp
lret
or
xchg
push
cmc
sbb
pop
popa
and
pop
sub
fnstcw
imul
inc
test
test
inc
fs
mov
rolb
rorl
xchg
push
out
mov
cli
mov
repnz
push
push
incl
repz
sub
cmpsb
test
adc
mov
repz
mov
sub
xchg
push
repz
mov
or
jecxz
out
pop
mov
outsl
dec
push
loop
xor
inc
ret
in
in
mov
sub
inc
std
test
loop
out
xor
xchg
mov
dec
subb
sahf
lret
mov
inc
mov
xchg
inc
test
data16
jnp
lods
daa
jp
pop
mov
inc
adc
mov
cli
int
xchg
xchg
dec
inc
dec
enter
jmp
sbb
mov
mov
cwtl
xlat
push
stos
cmp
lahf
fnsave
xchg
jmp
sbb
cwtl
sbb
xchg
pop
mov
aam
test
lahf
mov
mov
ljmp
ljmp
push
outsl
dec
jo
cld
packssdw
loop
pop
xchg
in
inc
orl
xor
clc
inc
jl
ljmp
mov
and
cwtl
inc
subl
mov
popl
fcomi
and
mov
inc
arpl
fiadds
test
push
es
xor
test
xchg
or
cmc
ds
jne
mov
sub
jns
dec
add
int3
and
insb
out
mov
insb
cmpsw
mov
pop
push
aad
jno
or
xorb
jge
and
testb
mov
jecxz
mov
push
leave
lods
push
les
mov
adc
jbe
icebp
aam
fsubl
aaa
xor
mov
dec
push
imul
ret
jp
cmpsl
cmp
xchg
adc
fcmove
inc
fisubs
xor
jmp
imul
aam
lock
mov
stos
dec
xlat
adc
push
and
mov
or
xor
fldenv
or
loop
mov
in
push
test
sub
leave
lea
repnz
sub
pop
addr16
clc
cmc
into
loope
std
aaa
mov
adcl
pop
aad
scas
adc
nop
jo
xchg
orps
gs
add
mov
sbb
dec
leave
cmp
ss
lahf
popa
mov
mov
aam
dec
push
or
mov
pushf
push
jae
icebp
mov
lea
xor
lds
fbstp
dec
adc
je
shrl
inc
incb
mov
cli
pop
lret
inc
inc
nop
sbb
insb
mov
mov
in
mov
mov
mov
shl
test
jmp
loop
jno
fs
out
sar
cwtl
adc
adc
or
outsl
push
jge
and
jmp
sub
cld
popf
shrb
push
decl
cmpsb
and
orl
ljmp
pop
or
cmp
mov
add
inc
movsb
fcmovb
js
scas
loope
inc
inc
add
nop
mov
clc
mov
cmpsl
mov
dec
sbb
mov
or
dec
mov
cmpsb
xchg
push
dec
notb
add
test
bound
cs
mov
ljmp
in
scas
mov
movups
outsl
pop
sahf
jo
dec
xchg
fistpl
mov
dec
and
ljmp
fiaddl
stos
out
adc
push
push
aas
lods
pop
aaa
ja
jo
scas
cltd
ljmp
cmc
jmp
mov
push
cld
cmpsl
inc
pop
cmpsl
mov
leave
ss
icebp
sub
add
add
sbb
out
call
push
lds
push
sbb
jbe
js
and
xchg
clc
mov
out
sti
sub
imul
insb
out
stos
leave
into
dec
jae
stc
cmp
into
mov
popf
or
jmp
movsl
in
imul
popfw
sub
push
shrl
out
lret
mov
jp
dec
fcoml
hlt
and
pop
xor
pop
jnp
pop
lock
push
push
cli
cmp
and
sahf
mov
inc
sar
iret
aam
or
inc
add
hlt
inc
xlat
cmp
mov
mov
adc
test
add
sahf
lea
sbb
adc
repz
jg
std
xchg
fisubl
add
xchg
sub
mov
jl
rolb
sbb
fimull
jae
or
lahf
stos
xor
jmp
outsl
scas
sbb
repz
das
cmp
int
scas
sbb
jp
mov
aam
jo
xor
in
in
xchg
ljmp
je
lea
inc
subl
ja
inc
pushf
popf
shlb
cmpsl
mov
fiaddl
dec
mov
sbb
insb
jecxz
mov
outsb
mov
ds
or
nop
mov
xchg
dec
xor
pop
js
cmp
cmp
out
mov
movsb
pop
fcoml
mov
cltd
fsubr
mov
and
stos
sbb
imul
xchg
ljmp
push
jecxz
imul
sub
sub
jo
mov
lcall
je
sub
adc
xor
mov
iret
cmpsl
lods
pop
fbld
sbbb
push
jl
stc
loop
add
jne
mov
outsl
xor
movsl
mov
and
out
scas
in
or
xchg
lock
xor
inc
mov
and
add
mov
test
xchg
mov
outsb
fld
inc
gs
popa
lods
imulb
bound
adc
or
cwtl
xchg
pop
sbb
push
rcrl
das
and
jl
xchg
mov
cld
jns
or
adc
mov
stos
sub
call
pusha
xor
icebp
cmc
out
leave
mov
dec
pop
loope
scas
xchg
mov
hlt
mov
sbb
inc
push
scas
fdivrl
test
icebp
leave
inc
jnp
out
jno
testl
in
jnp
not
mov
pop
out
lds
push
rcrb
frstor
xor
imul
pop
ret
je
cli
clc
clc
stc
insl
ljmp
icebp
fdivr
sub
test
adc
xlat
push
loop
pop
cmpsl
das
cmp
mov
jge
mov
les
xor
sbb
push
out
imul
lock
fdivs
shll
add
movsb
aam
fdivl
imul
and
adc
mov
mov
cmp
imul
jg
push
fstpl
adc
sbb
pop
fs
xchg
xor
lds
jmp
arpl
pop
add
andl
add
add
sbb
ret
sbb
cmp
push
movsb
imul
adc
adc
mov
das
sub
inc
jmp
insb
push
cmpsl
shlb
mov
mov
in
sbb
ret
pop
stos
pop
jno
xchg
add
xchg
xchg
push
mov
ret
mov
ljmp
leave
mov
lds
fwait
aam
into
maxps
loope
jno
sub
jne
iret
cmpsl
aaa
enter
dec
popa
loope
out
push
dec
sub
std
sbb
add
test
inc
dec
cld
pop
jmp
push
add
push
movsl
pop
fdivrp
mov
inc
pop
lahf
pop
clc
adc
stos
in
mov
jge
sub
out
aaa
mov
adc
fistps
mov
push
out
in
dec
repnz
xchg
xchg
cmovle
subb
repnz
je
push
mov
cmp
dec
sarb
int3
lret
test
push
xor
pop
add
pop
xchg
in
sub
mov
pop
repnz
int3
insb
insb
int
pop
inc
in
jge
jl
xorl
sub
mov
cmc
es
inc
dec
fcoml
push
loope
rcrl
leave
adcb
cmc
out
gs
ss
adc
lds
daa
jae
ret
xlat
pop
imul
cmp
push
mov
xor
push
fcoml
fnstenv
adc
dec
and
out
and
jne
ss
arpl
mov
mov
in
jae
mov
arpl
aam
mov
mov
inc
outsl
cltd
stos
dec
outsb
enter
js
sbb
jmp
push
enter
repnz
das
ret
sub
pop
pushf
jle
jmp
inc
push
outsb
fsubl
enter
sbb
push
dec
mov
cmpsl
cwtl
daa
fstpt
shlb
push
ffreep
ljmp
insl
test
int
popa
jmp
xchg
jo
cmp
mov
mov
add
sbb
shrb
inc
rcl
aas
push
jp
and
es
mov
jl
mov
out
cmpsl
mov
mov
xor
shlb
cli
mov
or
int3
fstpl
bound
and
in
mov
push
xlat
enter
add
notl
mov
inc
cmp
xchg
arpl
pop
shrb
insb
xchg
aaa
adc
repnz
mov
push
ss
push
push
pop
adc
les
and
mov
addr16
mov
or
imul
or
add
shlb
dec
subb
data16
clc
stos
into
lea
or
and
in
lds
movl
jb
xor
outsb
test
int3
enter
fistl
push
mov
cmpsl
sbb
scas
hlt
dec
xchg
lea
push
jb
adc
outsl
mov
push
decl
testl
sub
cwtl
in
adc
in
lret
mov
or
pusha
and
adc
test
arpl
loope
or
mov
gs
addr16
repz
sub
iret
lret
orb
sahf
andl
ret
test
es
rorb
pop
sahf
jbe
push
mov
call
pop
nop
shll
fistpl
mov
enter
mov
popa
cmp
dec
dec
sbb
repnz
dec
mull
pusha
in
jp
mov
sbbb
pop
sub
dec
and
out
push
lods
out
aad
add
dec
roll
lret
xchg
rcll
dec
out
mov
ret
adc
daa
les
mov
mov
dec
xchg
jecxz
xor
fiaddl
fidivrl
xchg
shll
les
and
pop
shrl
outsl
inc
jl
sub
fs
jb
or
cmc
or
arpl
hlt
inc
int
insb
xchg
sbb
mov
sbb
int3
xor
or
jmp
pushf
stos
xor
xchg
dec
test
jmp
rcrl
mov
popa
enter
call
mov
int
cmpsb
pop
call
shl
pusha
fwait
jb
addl
repz
jns
shr
das
enter
cwtl
jg
xchg
push
jp
mov
std
jmp
inc
and
jmp
fsub
pop
xchg
mov
ret
outsl
xchg
scas
jp
cmp
dec
cmc
popa
pop
lret
je
js
cmc
lret
jo
xor
pusha
fsubrs
add
add
sti
mov
dec
or
inc
je
push
aas
ficoml
push
sbb
loop
mov
or
xor
fidivrl
and
cltd
out
dec
push
repz
mov
test
or
or
push
pusha
loopne
push
xor
push
lock
inc
hlt
pop
cmp
negb
aad
loopne
notb
mov
push
fiadds
push
int3
loope
mov
jge
jle
lods
pop
dec
daa
dec
sub
sbb
stc
lcall
cmpsl
clc
std
or
int
repz
dec
ficoms
shlb
loope
ret
dec
loopne
push
cmpb
pop
inc
test
test
loopne
xchg
out
xchg
push
lods
ja
icebp
xor
out
sub
bnd
sub
mov
outsl
pop
push
push
sub
test
lods
ja
mov
sub
fbstp
xchg
lret
push
dec
mov
rorb
icebp
popf
xchg
incl
pusha
outsl
bound
jecxz
jbe
inc
push
std
mov
sub
fidivrs
sbb
inc
xchg
jge
pop
jg
adc
insb
push
fldln2
popf
pop
xchg
stos
and
or
divl
inc
sub
dec
and
in
mov
lea
or
sahf
and
andl
aaa
xor
sbbl
adc
bound
ret
imul
sarl
jp
mov
dec
in
gs
fsub
pop
adc
dec
lock
xchg
jmp
cmp
xor
push
adcl
sbb
aam
outsb
push
lds
fucomip
xchg
inc
pop
xlat
shl
add
popf
push
ret
jl
jb
stos
nop
addr16
jne
jp
jg
addb
mov
insl
mov
imul
negl
add
and
out
cmc
jbe
mov
imul
paddd
das
mov
jge
cwtl
loope
scas
rorb
add
movl
xor
adc
lcall
add
cmc
xlat
mov
clc
out
adc
fimuls
cli
fcompl
mov
aam
ljmp
lock
add
scas
jecxz
es
lods
pop
dec
xchg
push
es
nop
jo
xor
and
xor
test
lret
aad
imul
sti
lock
das
in
subl
popa
fucomip
and
and
loopne
mov
mov
in
lcall
std
xor
mov
aad
push
mov
push
mov
lcall
mov
js
cmp
xchg
adc
stc
pop
sbb
test
cmpl
fchs
pop
inc
test
cmp
lcall
adc
cmc
fsubrp
push
ss
lods
pop
lods
std
rcl
or
scas
in
add
test
sbb
push
pop
iret
or
iret
popf
inc
push
cmp
mov
stos
scas
lods
xor
xor
xor
out
xchg
cwtl
and
xor
jmp
push
std
mov
sub
orb
or
enter
fwait
add
sbb
shll
lret
iret
mov
fdivrs
fdivs
repz
or
jbe
dec
pop
addr16
imul
movsl
sbb
and
push
xor
pop
mov
adc
push
sbbb
and
data16
decl
movsl
dec
sbb
mov
push
pushf
popf
push
inc
test
jl
inc
fistpl
sub
loope
jp
jl
mov
hlt
stos
ret
jo
sub
jmp
pop
lahf
add
fiaddl
mov
mov
mov
sbb
adc
in
fisttps
jno
jp
push
lcall
sbb
leave
sbb
xchg
leave
and
ja
mov
pop
adcl
or
cld
sbb
lret
mov
sub
ja
mov
jle
pusha
jmp
jmp
and
cmc
cli
xchg
fildll
rcrb
bswap
cmp
std
data16
aam
out
loopne
pop
insb
ret
enter
push
sbb
or
test
std
mov
rorb
sub
dec
lret
dec
enter
jp
aam
sbb
cmp
jae
jl
jno
xchg
push
or
sbb
jmp
xchg
lahf
mov
push
dec
cmpsb
or
call
aas
jecxz
rorb
push
mov
ss
sbb
popa
cltd
lods
ficompl
cmpsl
pop
loope
ja
sbb
jns
xlat
inc
and
fstpl
xchg
add
sub
les
fists
fdivrp
in
ret
int
and
pop
sub
cmpsl
mov
push
xchg
int3
jnp
or
pushw
ljmp
fiaddl
ljmp
push
fisttpll
fisttpl
adc
iret
js
int3
iret
inc
mov
xor
fstps
pop
or
out
aaa
fsubs
mov
movsl
frstor
mov
call
repz
jmp
push
leave
test
test
mov
test
repnz
imul
std
rcrb
push
mov
mov
mov
sbb
sbb
ss
xor
cmp
popa
jge
sbb
inc
push
or
aad
movsb
sub
push
mov
inc
or
outsb
mov
jle
je
push
mov
inc
lods
test
xchg
icebp
pop
outsb
adc
cwtl
ficompl
out
rcrb
pusha
pushl
les
mov
test
jb
sbb
cwtl
dec
dec
or
pop
xchg
movd
ljmp
push
int
xor
jbe
frstor
dec
sbb
xchg
shl
push
ficoms
mov
std
jg
fnstcw
sbb
clc
and
aam
in
inc
hlt
gs
int
aam
lock
sti
xchg
das
adc
xor
push
dec
insb
xchg
push
cltd
add
aaa
sbb
sub
inc
adc
fs
dec
mov
cmc
mov
mov
mov
lret
rcr
inc
daa
sub
adcl
mov
cmp
das
adc
add
xor
or
enter
xor
xchg
jb
xor
fsts
call
movsl
je
dec
inc
dec
xor
pop
mov
and
mov
xorl
pop
lcall
bnd
mov
shl
not
mov
movsl
xchg
lock
lcall
push
jmp
enter
int3
adc
jg
mov
fisubs
lahf
xchg
sbb
sub
les
fimull
push
mov
sahf
xchg
pop
hlt
lret
mov
cmp
or
lret
imul
js
mov
cs
add
inc
dec
and
adc
in
scas
js
inc
cs
in
out
cld
testl
fsubl
fwait
dec
xchg
popa
mov
and
adc
aam
jl
jge
or
ss
xlat
insl
pop
xor
iret
or
addr16
lods
mov
ret
lcall
nop
icebp
mov
sub
jbe
adc
loope
sub
daa
daa
std
out
push
loope
mov
arpl
sub
xchg
imulb
jmp
loopne
mov
cs
xchg
fwait
cmc
pop
mov
gs
sbb
bound
repz
pop
repz
dec
pop
or
je
xchg
push
jge
leave
xchg
or
xor
out
lret
lret
sarl
mov
insb
call
mov
xor
pop
sub
hlt
inc
xchg
fsubs
lds
xchg
pop
fsubr
pop
pop
pop
adc
lcall
cmp
dec
jg
push
jl
dec
adc
sbb
xchg
ds
jnp
add
or
lods
adc
pop
lret
insb
mov
setge
pop
fcompl
mov
cs
scas
inc
jg
mov
in
test
add
sub
movsl
daa
aas
je
and
xchg
xchg
scas
mov
dec
jmp
add
repz
out
fidivrs
mov
insb
enter
gs
fbstp
push
xor
movsl
inc
ljmp
rorl
movsl
iret
xlat
inc
fisttpl
data16
xchg
mov
inc
js
stos
cli
lret
mov
fcmovnbe
outsl
or
mov
into
xor
out
call
dec
insl
inc
iret
jno
sbb
bnd
andb
pushf
out
jmp
imul
div
cmp
push
xchg
dec
sbb
cmc
xchg
push
loopne
or
sarb
mov
push
push
push
xlat
fwait
mov
mov
inc
mov
movsl
out
cmc
bound
jecxz
sahf
ljmp
bound
into
pop
rclb
inc
addr16
fisttpl
clc
out
loope
adcb
lods
cmp
dec
push
rorl
sub
add
dec
and
outsl
sub
repnz
imul
sub
sahf
negb
sbb
mov
xor
mov
imul
pop
shr
imul
pusha
xchg
outsl
pusha
sbb
adc
sahf
sahf
adc
jle
xor
sub
jg
out
in
jl
or
inc
add
cmp
clc
xchg
int3
sub
push
in
adc
into
fildl
ret
inc
sahf
insl
cmc
imul
mov
sti
push
insl
es
lret
sbb
adc
push
push
add
icebp
xchg
pop
xchg
out
push
pop
add
stos
ficoms
out
jnp
fdivs
dec
insl
push
dec
jno
mov
das
xlat
dec
add
andb
sub
ret
add
push
mov
rcrl
cmc
xor
mov
mov
inc
repnz
jbe
or
pusha
inc
adc
xchg
test
sub
mov
sbb
xchg
adc
outsl
sti
jo
je
pop
sbbl
xchg
jae
mov
dec
jno
sahf
xchg
insl
sub
lds
jg
insb
jl
xchg
data16
sub
out
mov
adcl
inc
add
cmpsb
jne
xchg
add
lahf
aas
pop
lahf
add
push
adc
add
out
jbe
mov
fs
rcpps
lock
lods
lcall
add
dec
rcll
mov
aam
daa
cmpsb
gs
mov
fs
mov
mov
adc
push
stos
and
adc
loopne
xchg
repz
call
das
out
xor
fldenv
inc
repnz
outsb
sbb
cmpsb
inc
nop
lahf
andb
xor
scas
jo
push
sub
mov
jb
sub
ds
sub
inc
test
lcall
inc
cmp
mov
cmc
adc
jmp
xor
fs
sbb
das
xchg
add
adc
cltd
mov
fimuls
mov
mov
jo
xchg
les
lods
fidivrs
cld
stc
leave
jne
into
in
adc
aad
int
aas
addl
push
push
adc
xchg
loope
retw
mov
inc
lods
push
andl
movsb
and
push
push
pop
push
mov
mov
jp
fdiv
add
add
ror
jg
nop
mov
sub
push
inc
pop
call
xchg
jp
into
lods
and
mov
iret
js
jno
jo
cmp
mov
xchg
ficoms
pushl
fcoml
mov
jno
icebp
nop
shrl
mov
cmp
lcall
pop
lret
or
lea
repz
mov
std
push
xchg
mov
nop
sub
sub
push
mov
and
mov
inc
fsub
fstps
cmc
ret
fwait
gs
push
dec
in
xchg
xchg
add
mov
ret
jns
pushf
push
or
pusha
hlt
mov
jne
jecxz
sbb
das
jl
sti
cmp
js
inc
xor
push
cmp
cwtl
out
sti
andl
pop
fdivr
les
lret
jp
jno
cwtl
xor
test
push
mov
push
cs
jno
and
inc
lods
dec
lods
addr16
inc
in
adc
jg
mov
out
in
movsb
sub
addr16
push
mov
cmpsl
sub
jb
insb
mov
xchg
xor
fadds
rclb
sbb
cwtl
into
mov
aam
and
xlat
jle
out
movsl
test
icebp
adc
and
inc
pop
add
and
mov
dec
cli
xchg
ljmp
mov
out
jno
dec
jno
inc
loope
ja
in
repnz
jnp
mov
mov
sbb
xchg
push
imul
and
sbb
cwtl
sbb
out
es
xchg
jae
fcomps
xchg
mov
add
xchg
jne,pn
aad
test
sarl
pushf
mov
and
sbb
pop
decb
es
add
pop
fstpt
sub
lahf
js
mov
dec
call
lock
jb
add
call
aam
daa
sub
pop
push
jns
mov
mov
loopne
add
rcrl
mov
adc
das
jecxz
lret
daa
dec
outsl
push
push
scas
lret
xchg
arpl
jbe
std
pop
rorl
mov
imul
ret
cmp
push
js
iret
cld
fwait
leave
es
sbb
mov
nop
adc
push
movsb
or
gs
mov
jns
lock
les
pusha
fwait
push
fnstsw
sbb
sbb
iret
cs
dec
add
out
inc
and
popa
dec
xor
xchg
cwtl
outsb
loopne
mov
fs
fisubrs
cmp
bound
pop
dec
inc
adc
ljmp
out
ret
bnd
out
fs
shlb
cwtl
and
ficoms
xchg
push
cmpsb
cwtl
out
xor
sbbl
mov
mov
sub
and
icebp
jb
and
adc
mov
sbb
xor
out
mov
xchg
out
jb
data16
mov
inc
fwait
or
int
stos
icebp
cltd
xor
jns
dec
insb
sbb
dec
pusha
shlb
xchg
nop
or
add
addr16
push
push
das
loope
icebp
ljmp
popf
and
aam
test
rorl
icebp
les
cmpsl
mov
adc
mov
inc
test
adc
std
stos
adc
in
sbb
inc
pushf
mov
adc
notl
add
cmp
dec
scas
jge
rcll
ja
inc
stos
mov
scas
push
or
mov
std
je
add
xchg
pusha
loop
mov
stos
jb
cmpsl
mov
fsts
ds
popa
movsb
mov
push
sub
mov
dec
sbb
cmp
mov
shr
jbe
push
pop
xor
fsubrs
test
add
xchg
rcrb
sbb
mov
cli
mov
pop
mov
push
inc
test
xor
fmulp
and
std
adc
scas
out
aas
aaa
xchg
js
scas
push
out
bound
mov
bound
sub
sub
outsl
stc
sub
sub
sbb
adc
fnstenv
add
mov
mov
mov
dec
dec
and
daa
ret
es
das
mov
mov
push
loop
fdiv
outsl
packssdw
lods
xlat
pop
ret
mov
nop
test
pop
pop
sbb
jnp
jp
scas
movsb
inc
jge
test
add
dec
add
jb
push
or
mov
mov
js
popf
cmp
mov
cmpsl
out
xor
mov
mov
loopne
add
lret
sahf
movsl
out
sarb
dec
iret
mov
adc
pop
pop
push
and
xchg
vandps
gs
shr
xchg
mov
cs
addr16
xchg
fs
xchg
jmp
mov
jecxz
cltd
ret
pop
mov
dec
clc
or
inc
sbb
xchg
test
pop
int3
or
pop
ret
xchg
fidivl
in
es
push
mov
mov
out
js
xchg
in
and
sbb
jne
xchg
cld
jecxz
cwtl
push
cltd
mov
les
aas
push
add
aad
rorb
lods
cmp
inc
je
inc
in
pop
dec
mov
pop
aas
outsl
mov
orl
xorb
inc
movsl
je
mov
adc
adc
push
jge
mov
and
in
sub
cli
mov
jae
push
cmp
ljmp
ret
xor
xor
sbb
sub
mov
pop
cmp
dec
add
dec
fldt
sub
xchg
nop
xchg
mov
gs
in
lret
in
push
clc
pop
sbb
push
in
add
push
dec
sbb
outsb
imul
add
bound
add
mov
loop
lods
sub
and
dec
dec
ljmp
sub
push
sbb
ret
lcall
loopne
fmuls
out
add
mov
xchg
dec
adc
js
xchg
xor
xchg
shlb
std
test
adc
adc
adc
test
fbstp
mov
sbb
cmp
inc
cmp
jo
cmpsl
jb
scas
pop
mov
jno
jg
sti
xor
push
fstpt
lret
insb
nop
xchg
mov
pop
fisubs
and
inc
hlt
addb
fst
mov
cltd
cmc
test
push
mov
xchg
sub
fstps
push
and
jae
cwtl
addb
push
sub
jmp
jno
ret
stos
push
adc
je
sub
scas
out
repnz
inc
sarl
xlat
in
stos
mov
cli
decl
adcl
sub
mov
jl
filds
dec
jmp
adc
adc
mov
cmp
test
mov
jne
outsl
stc
dec
push
xchg
daa
fwait
fwait
jle
jae
clc
xchg
bound
sub
xchg
in
cmp
sub
aaa
mov
xor
xchg
jns
bound
insl
sahf
insb
jno
jne
loop
jns
popa
dec
adc
or
push
fimuls
mov
mov
mov
shlb
inc
push
sbb
ljmp
jno
arpl
and
or
in
adc
xchg
xchg
idivb
aas
ss
mov
cmp
test
jne
xor
add
jp
je
and
repnz
rorl
xor
and
in
add
add
sub
jp
scas
inc
mov
dec
les
jns
add
pop
inc
pop
jecxz
icebp
mov
push
popl
push
insb
mov
scas
mov
repz
lds
call
cmp
shll
pop
push
pushf
loope
and
adc
mov
xor
add
es
sbbl
jbe
stc
adc
pop
mov
xchg
shr
sub
pushf
das
stos
repnz
push
lods
cs
dec
jmp
jl
js
mov
leave
and
repz
mov
clc
mov
xor
push
imul
es
movsb
mov
pusha
cmp
add
int
xor
les
popf
xchg
es
mov
mov
jno
lret
mov
add
xor
xchg
cmpl
jmp
pop
dec
idivb
lea
mov
test
xchg
adc
out
mov
je
dec
sbb
hlt
stos
or
cwtl
clc
or
cmpsb
mov
pop
jne
add
adc
shll
xor
mov
cmp
adc
push
mov
xchg
jle
cltd
orl
daa
push
or
clc
scas
xchg
jno
mov
sti
or
add
xchg
fsts
push
sbb
jbe
cmp
aad
mov
in
jmp
hlt
and
mov
pop
push
jae
adcb
xchg
decb
and
mov
std
lret
and
push
ja
orl
popa
bound
fcom
std
lret
sub
sbb
xor
daa
pushf
mov
xchg
xchg
cli
fsubrs
mov
adc
adc
fdivrl
mov
into
loop
push
jne
in
call
mov
push
out
cmp
fsqrt
jns
ja
and
xchg
mov
and
popf
jecxz
int
ret
push
popa
out
inc
mov
pop
push
add
dec
pop
shl
sub
sbb
sbb
repnz
enter
cmpl
insb
test
or
pop
test
mov
decb
xchg
inc
jle
pop
iret
ret
mov
adc
xchg
fisubrl
nop
insw
push
dec
insb
xor
call
cltd
mov
dec
push
into
inc
iret
jae
jno
mov
sbb
stos
sbb
jne
add
stc
lods
iret
adc
movsb
jl
add
stc
in
movsb
pop
dec
push
out
outsl
rorb
mov
mov
ret
lret
out
and
or
rcl
sub
jae
movsl
sub
icebp
popf
aas
lret
dec
mov
xor
mov
jns
cmp
jp
fnstenv
lock
inc
mov
ficoml
pushf
sbb
mov
push
pop
fldenv
xor
scas
cmp
xor
inc
sti
mov
add
aaa
hlt
and
insl
push
dec
out
or
inc
aas
jmp
adc
xor
mov
sub
idivl
jbe
mov
imul
xor
push
addb
pop
lods
adc
inc
cmp
movsb
nop
add
cmpsl
sub
sub
mov
scas
ss
push
pushf
inc
add
pop
or
insl
rcrb
test
and
std
mov
or
pop
es
pop
movsl
push
lock
fsubrl
add
stos
push
stos
sub
lock
adc
dec
push
dec
mov
or
dec
mov
loop
nop
stos
add
jns
outsb
push
cmc
and
movsl
cmp
dec
test
pop
jno
cltd
inc
xchg
inc
mov
and
cmpl
xor
pop
std
das
scas
stos
popf
mov
subl
sub
xor
dec
mov
cld
call
jnp
shll
inc
lods
out
mov
mov
and
adc
arpl
jb
inc
data16
xor
sahf
adc
lods
movsl
ja
shl
mov
rcll
int
addr16
inc
push
cmpsb
or
aas
pop
dec
lods
ret
push
cmp
stos
add
sahf
jp
stc
jp
xchg
jne
fldenv
daa
loope
shlb
flds
inc
adc
popf
mov
out
xchg
fld
xchg
xor
pop
jnp
and
stc
jmp
je
loope
outsb
dec
jnp
jnp
sbb
in
jnp
cmp
xchg
popa
xchg
aaa
xchg
sarl
fisubl
cmpsl
inc
jae
sarb
dec
jae
gs
dec
pop
sbb
sub
jg
aaa
xchg
pop
xchg
xor
out
and
sbb
pop
jb
aaa
xchg
shl
aas
mov
lret
sub
sbb
or
pop
push
xchg
popf
pushf
test
rol
mov
aas
mov
ja
movnti
inc
mov
inc
mov
and
jns
xor
imul
in
pop
pop
sbb
in
push
jg
xchg
aas
or
addr16
insb
push
pop
adc
loope
and
lret
xor
sub
cltd
pop
call
mov
sbbb
and
dec
dec
jb
shll
leave
movl
mov
mov
lods
push
arpl
pop
pop
test
cmp
sub
pushf
loope
in
fbstp
cmp
jmp
dec
pop
xchg
lret
incl
xchg
xchg
faddl
ficoml
xor
sahf
or
dec
shrb
mov
cmpsb
dec
pop
add
scas
inc
clc
cli
xorl
popa
and
inc
push
sbb
sub
cmpsl
inc
and
jle
outsl
jge
leave
pop
addr16
inc
jge
and
or
add
pop
aaa
sub
push
sub
ljmp
into
xchg
xor
mov
fcmovbe
ret
jg
sti
add
rcrl
adc
xchg
cmp
jbe
outsb
jle
or
fwait
mov
out
mov
cmpb
or
int3
pop
cmpsl
shlb
mov
pushf
xrelease
scas
inc
xchg
out
mov
xor
cs
outsb
fstpl
or
and
les
ja
add
jnp
lret
add
ret
in
jp
dec
sbb
and
daa
push
push
mov
je
int3
mov
inc
xchg
insl
in
adc
sti
xor
adc
pushf
push
jg
dec
cmpsl
nop
fcomps
mov
cmp
mov
daa
into
adc
pop
out
insb
and
pop
dec
push
mov
mov
pop
lahf
xchg
or
mov
inc
outsl
cmpsl
xchg
inc
outsb
js
dec
jmp
mov
xchg
xchg
shrb
mov
lods
loope
sbb
dec
mov
and
push
or
push
lcall
bound
je
mov
xchg
int3
ficoml
popa
xchg
and
adcl
and
test
in
int3
xor
fwait
adc
sub
sbb
sbb
xor
mov
sbb
or
push
in
add
push
lds
add
ret
pop
nop
sbbb
inc
jne
cmp
mov
lret
imul
pop
lods
lock
dec
sub
sub
cmpsl
je,pt
sbb
repnz
adc
pusha
cmp
jne
push
and
int
mov
popf
mov
std
inc
test
sub
xchg
xlat
xor
xchg
pop
ret
xor
insb
adc
push
or
pop
hlt
cwtl
xor
push
sbb
mov
dec
gs
adc
pop
dec
popa
mov
push
and
cli
pusha
push
outsb
scas
pop
xor
popf
loop
movb
imul
dec
fnstsw
icebp
insb
test
jns
xor
push
push
mov
icebp
enter
mov
or
xor
insl
sbb
notl
xchg
rcrl
ret
out
into
fstp
int3
adcb
roll
mov
add
pop
jne
in
mov
pop
fsubl
jb
aam
sbb
subl
mov
add
pop
mov
xor
push
int
mov
and
lock
xor
pushf
mov
and
jnp
cmp
notb
es
fidivs
mov
dec
shlb
jp
adc
jl
pop
and
insl
pop
ror
jge
pop
dec
mov
lock
mov
dec
stos
mov
mov
in
sub
icebp
out
sub
lahf
lret
pop
rcrb
fwait
ja
pop
sub
scas
mov
adc
cltd
call
sahf
ss
sahf
icebp
icebp
adc
out
mov
dec
loopne
mov
rclb
xchg
les
mov
scas
mov
jmp
xor
into
mov
push
mov
int
pop
push
or
and
mov
mov
bound
sahf
aaa
icebp
in
dec
leave
mov
popw
dec
int
cli
jo
stc
push
pop
aas
and
shrb
cmp
sub
cmpsl
xor
stos
aam
lahf
adc
ja
lods
rclb
mov
jbe
lahf
cmp
fmull
lock
sbb
jb
es
sub
mov
mov
mov
popa
sub
je
mov
mov
ljmp
fcmove
mov
mov
bound
xchg
lcall
and
shrl
mov
movsb
paddd
xor
xor
pop
xor
xor
xchg
mov
add
sti
jne
in
pop
add
mov
cmp
imul
push
sbb
into
data16
int
sub
or
out
xor
sbb
push
stc
add
ret
dec
cli
insl
inc
notb
mov
xchg
jo
cmpsl
mov
les
and
inc
mov
cmp
cld
into
mov
dec
gs
mov
clc
fildll
mov
push
lahf
in
daa
test
pop
mulb
adc
add
pop
pop
lahf
aam
inc
lahf
lret
sbb
push
pusha
or
pop
das
inc
sbb
fwait
push
xor
neg
lahf
loope
icebp
pop
lret
sub
or
xchg
jo
int
jl
mov
ds
lcall
inc
inc
rcr
out
inc
pusha
pand
mov
incl
clc
and
ss
mov
cld
dec
mov
cwtl
pop
push
mov
dec
scas
call
pop
cmp
jno
xchg
movsl
pop
cmpl
xorb
mov
popa
insb
xor
xor
in
stos
rcrl
pop
mov
cmc
sbb
jmp
lds
xchg
gs
mov
inc
pop
dec
hlt
inc
in
mov
adc
pop
xor
pop
sub
stos
ljmp
and
flds
into
in
lahf
stc
push
mov
inc
gs
shll
iret
mov
test
cmp
sbb
test
popf
xchg
stc
jo
sub
push
or
clc
movsl
jp
mov
incb
out
sbb
mov
hlt
lea
iret
push
mov
out
add
orb
cmp
push
gs
push
dec
cmp
mov
pop
mov
aas
mov
sahf
imul
and
lret
divl
push
xor
and
bound
jg
mov
rcr
notrack
add
push
or
loope
xchg
iret
inc
mov
jp
add
call
repnz
testb
cmpsl
inc
jg
gs
jbe
mov
enter
xchg
jmp
mov
popf
jnp
test
enter
into
lret
adc
pop
sbb
xchg
in
or
gs
xor
jmp
dec
ljmp
mov
or
pusha
outsl
sti
and
aas
jmp
mov
sub
in
lods
push
popa
das
inc
xchg
ret
enter
es
insb
sub
orb
cwtl
iret
xchg
push
pop
outsb
push
scas
mov
dec
xor
fsubl
loope
mov
insl
js
jnp
add
je
daa
and
cmpsb
or
xchg
aad
adc
cmp
adc
popf
test
jmp
inc
sub
dec
mov
xor
sub
int3
sub
inc
stc
call
les
out
cmp
mov
sub
pop
xchg
lcall
mov
push
fwait
data16
imul
xor
into
stos
adc
mov
pop
pop
lds
decb
mov
imul
outsl
mov
inc
xor
sub
adc
ljmp
sbb
adc
push
cmc
lret
pop
scas
cmpsl
xchg
sbb
mov
aas
popf
rorl
push
fcom
mov
pop
jl
nop
movsb
fists
jnp
dec
mov
scas
xchg
sbb
hlt
and
mov
inc
sbb
push
enter
repz
outsl
icebp
subb
out
dec
pusha
imul
movsb
lcall
mov
shrb
shr
mov
cmp
push
cwtl
cmp
sub
push
mov
sahf
insl
test
test
mov
mov
outsl
dec
adc
in
add
mov
pop
pop
std
mov
mov
lahf
addb
imul
and
data16
int
test
push
sbb
in
shll
call
aam
ret
push
inc
incb
das
sub
shll
outsl
mov
ror
lock
and
cmp
lcall
scas
jecxz
pop
stc
pop
inc
mov
mov
push
ficoml
adc
pop
sub
sbb
inc
pop
imul
shl
xchg
push
push
out
mov
insl
ss
je
jae
jae
xchg
xlat
fidivrs
int3
movsb
in
loope
call
push
fwait
inc
fs
dec
test
xor
mov
push
lcall
cli
js
in
jne
mov
sub
xor
push
fucom
or
push
cli
movsl
movsb
or
mov
fadds
cmp
std
pop
mov
adc
mov
lods
adc
add
pop
dec
cmp
sti
adc
imul
cmp
or
or
js
xchg
std
xor
lcall
mov
out
and
outsb
cwtl
xor
rorb
pop
adcb
je
sub
std
in
mov
inc
push
into
sub
sbb
add
rclb
ljmp
js
jecxz
loop
jl
insb
fcomps
ljmp
jno
lods
rolb
ret
test
inc
lds
insl
jne
jne
adc
aaa
add
adc
xor
incb
lea
in
out
and
sbbl
cli
das
call
ret
push
dec
test
sti
pop
adc
inc
ret
fs
into
xor
pusha
sub
jbe
cmp
jbe
test
scas
loopne
mov
dec
rorl
aaa
cs
fmull
int3
jbe
mov
sub
mov
inc
xor
insb
mov
sbb
cmpsb
das
cwtl
hlt
aad
int3
outsb
pusha
push
stos
jbe
mov
daa
lahf
sub
iret
lret
fdivrp
cld
xchg
dec
js
xchg
add
loope
aad
mov
pop
in
pop
iret
mov
cmp
test
pop
push
xchg
mov
packssdw
mov
repz
pop
adc
ds
cmpsl
enter
les
repnz
sub
push
loop
popl
push
mov
leave
xchg
push
shrb
mov
mov
lea
aam
loopne
push
int3
int
or
hlt
ljmp
iret
push
sub
cwtl
pop
and
ss
ss
mov
jno
int3
jmp
dec
pop
aas
insb
lcall
es
mov
sub
sti
xchg
xorb
xor
aas
push
lds
push
mov
insb
mov
arpl
and
mov
pop
xor
lock
ret
xchg
out
aas
sbbb
mov
pop
imul
push
clc
enter
stos
fs
ss
mov
and
xchg
inc
lock
xchg
pop
mov
cwtl
xor
scas
push
pop
pop
sub
mov
les
push
aad
addb
adc
or
outsl
gs
dec
cmp
pushl
inc
pop
pop
push
xchg
into
pop
lea
or
sbb
movsl
gs
subb
jle
or
fsubrs
outsb
dec
add
push
push
addr16
jnp
in
xchg
add
or
mov
lret
sbb
test
sub
js
or
jle
mov
imul
and
out
iret
test
push
or
mov
orb
xchg
inc
pop
sub
dec
into
in
mov
mov
mov
jo
add
popf
pop
mov
cld
scas
xchg
pop
xchg
dec
jb
fs
cmp
jnp
jbe
dec
pop
inc
xchg
or
je
mov
pop
push
icebp
divb
int
in
jl
add
idivl
pop
jle
cmp
xchg
push
dec
add
lret
lahf
orb
xchg
out
cmpsb
cwtl
cmp
and
cmp
jmp
push
mov
xchg
sbb
sub
push
sbb
cmp
cli
fwait
in
pop
mov
mov
outsb
mov
jbe
pop
imull
cmp
inc
mov
std
xchg
imul
xor
cmpsl
in
xchg
mov
inc
jno
add
mov
jne
cltd
outsl
aad
adc
xchg
or
repnz
jae
cmp
lcallw
pop
or
and
xor
dec
cmp
add
jg
sub
iret
cwtl
and
jecxz
push
call
cmpsb
push
add
fs
popf
cmp
sub
add
dec
add
sub
xchg
jle
mov
and
add
lret
and
adc
das
inc
ss
cmc
xchg
jg
out
dec
scas
xlat
or
and
pushl
imulb
ss
xchg
ja
mov
loope
ds
jae,pt
in
adc
pusha
sbb
cld
mov
negl
fiaddl
cmp
add
adc
arpl
adc
ret
sbb
mov
call
mov
imul
jb
fcmovnb
and
ror
enter
inc
push
mov
jg
test
out
and
repz
mov
xor
clc
inc
jmp
pop
fcompl
lock
pop
movsb
cmp
jo
sahf
test
push
xchg
and
xlat
jbe
call
clc
sbb
cmpsb
pop
ds
jl
stc
shrl
cmp
jg
jno
or
xchg
pop
dec
aam
es
out
out
xor
jnp
push
xor
divb
or
xor
hlt
test
xchg
pop
into
sub
or
or
lret
mov
push
sub
jg
fdivr
addr16
std
jne
add
mov
fstpl
lods
adc
mov
add
push
fstps
hlt
dec
push
xchg
lds
ficomps
insl
mov
insl
push
xchg
push
lea
fstp
mov
movsl
rcrl
cmp
ret
in
xchg
clc
add
ds
std
jae
pusha
sbb
loope
sub
loope
faddl
lock
dec
xchg
cmp
jg
sti
ja
subb
and
adc
mov
and
push
shl
gs
ja
cmpsl
test
push
jmp
fwait
jno
out
rcrb
je
sub
es
xor
lods
mov
push
dec
lahf
add
pavgb
mov
lea
sti
insb
sbb
lcall
cmpsl
shll
xor
mov
je
jmp
pushl
iret
push
fisttps
jne
jbe
sbb
fsubl
mov
in
data16
loopne
mov
cmpl
inc
inc
jl
scas
mov
fs
test
rorl
decb
fisubs
andb
leave
sub
cltd
loope
jno
loope
pop
add
sbb
shlb
icebp
outsb
adc
and
iret
sub
inc
jnp
cmp
popf
ret
adc
or
sbb
rclb
rcrb
cmc
push
adc
jbe
test
test
xor
sahf
in
out
repnz
jb
ss
aas
stos
lahf
push
adc
out
xor
stos
ret
push
mov
adc
cld
test
shlb
xchg
sbb
push
dec
mov
push
lret
lret
movsl
sahf
sbb
mov
or
xchg
xlat
sbb
cmp
std
add
iret
jl
inc
out
xchg
les
dec
out
adc
sahf
add
inc
pop
mov
mov
iret
add
adc
pushf
in
aaa
in
mov
sbb
es
in
adc
adc
and
outsl
pop
shl
mov
push
mov
mov
pop
test
inc
jno
out
lea
and
shlb
add
mov
test
cmp
xor
out
cwtl
in
imul
fsub
push
scas
cmp
push
mull
sarl
jle
shrb
hlt
sbb
leave
leave
lahf
test
cmpsb
sub
xorl
in
outsl
pop
push
jl
xchg
pop
lret
jns
cmc
std
scas
insl
sbb
stc
leave
inc
arpl
loop
sub
pop
in
fcoms
cmc
push
push
arpl
jl
push
cmpsl
dec
lahf
dec
inc
scas
repz
mov
adc
dec
jmp
add
sbb
jbe
sahf
int
cmpsb
xlat
jg
and
and
in
xchg
add
jb
push
adc
pop
xchg
add
inc
fdiv
scas
cmp
xor
rorl
pop
out
insb
xlat
lods
iret
push
cmpsb
in
fdivp
xlat
mov
bnd
push
pop
iret
sub
push
std
imul
and
and
ss
andl
xor
fisubrs
js
sbb
call
xchg
mov
cld
push
xor
cmp
mov
mov
aam
fisttps
mov
add
cmp
sti
dec
add
pop
iret
ret
lea
imul
inc
jae
cmp
sbbl
pop
adc
test
outsl
ret
sbb
sbb
inc
into
pushf
xor
cmp
dec
leave
inc
sti
cwtl
nop
add
ret
icebp
test
mov
pushf
inc
mov
cltd
imul
cltd
mov
bswap
aaa
nop
js
test
adc
mov
sbb
dec
outsb
cmp
std
imul
daa
je
xchg
jl
call
js
push
imulb
out
cs
insb
inc
xchg
int
mov
sar
dec
inc
into
sbb
idivb
daa
mov
cmpsb
pop
loop
cmp
mov
mov
lods
popf
mov
sub
push
jne
fucomip
or
or
push
stos
inc
jle
js
sbb
xor
test
mov
hlt
nop
jne
xchg
das
test
add
ret
xchg
mov
mov
sbb
mov
stc
push
movsl
mov
sbb
jns
jg
jne
nop
pop
xor
sub
xchg
gs
nop
out
push
add
pop
jb
jge
negb
sahf
dec
cli
jecxz
ljmp
jns
shll
mov
hlt
mov
jg
adcb
popa
pop
push
dec
aam
dec
sbb
cmc
shl
lret
rcll
inc
jnp
cmp
mov
inc
and
jge
into
pusha
xor
push
mov
push
push
xchg
mov
iret
loopne
mov
insl
addr16
lds
insl
push
hlt
mov
popf
push
inc
mov
mov
jae
clc
jns
or
jno
dec
daa
mov
or
xor
pop
lods
int
lret
fxch
mov
repnz
insb
mov
lea
xchg
jl
jmp
lret
pop
fsubr
std
mov
dec
insl
arpl
jl
mov
cmp
popf
xchg
mov
sti
xchg
in
addr16
pop
call
mov
cltd
sbb
addr16
dec
dec
lea
clc
xchg
out
add
in
push
rcl
ds
lret
sub
insb
mov
out
movb
jbe
mov
cmc
sbb
and
xchg
test
sbb
mov
es
push
mov
cld
jmp
pop
enterw
enter
sub
jb
mov
stc
cmp
outsb
push
icebp
push
jp
stos
inc
daa
and
add
adc
sbb
rclb
push
jg
and
arpl
sahf
jmp
ret
data16
add
in
jbe
cmp
data16
sbb
test
insb
mov
or
notl
push
mov
sbb
subb
daa
cmp
in
push
cltd
in
inc
andl
push
adc
adc
pop
mov
mov
ror
data16
mov
or
outsb
mov
cwtl
xchg
lods
shll
xchg
adc
movsb
and
sub
mov
inc
imul
jnp
rol
add
in
pushf
xor
or
xor
xor
std
push
sub
push
mov
jne
xchg
mov
cmp
fmuls
pop
in
into
jmp
fdivr
pop
jge
in
mov
mov
lea
mov
and
testl
je
push
dec
cwtl
insl
inc
push
mov
out
cmp
sbb
xor
es
insb
inc
pop
dec
cli
add
xor
fmuls
pop
add
loop
andb
addb
sbb
mov
inc
xchg
dec
and
cmpsb
sub
stos
push
jle
sahf
test
out
lahf
xor
mov
int3
mov
in
sbb
sbb
aam
divb
bound
xor
adc
xchg
sub
sub
call
arpl
add
xchg
jmp
aam
lcall
scas
push
dec
ret
clc
daa
push
aaa
sbb
mov
push
iret
or
in
push
out
stos
outsb
xor
adc
mov
ficoml
push
xchg
mov
rorl
inc
lods
imul
ficompl
bnd
xor
jo
cmc
inc
shl
bound
rcll
sbb
or
out
adc
leave
nop
or
sbbb
cltd
push
test
jbe
and
mov
mov
adc
adc
push
nop
repz
sbb
mov
lret
push
cltd
add
scas
sbb
jge
mov
sub
pop
dec
int
inc
cmp
xor
push
int
sub
or
inc
mov
mov
std
mov
imul
mov
stc
jbe
and
dec
repnz
inc
mov
bound
cltd
cmp
sub
jle
push
inc
xchg
xchg
jnp
pop
adc
sbb
lods
lcall
xchg
or
mov
lds
cli
and
push
jg
dec
add
mov
aas
push
push
ret
fs
dec
notl
call
sbb
xor
add
sub
je
repz
es
adc
lea
rol
and
lds
jle
ss
xchg
insb
jne
out
pop
jbe
adc
mov
cmp
mov
lea
les
insl
outsb
bound
jmp
cmc
cmp
dec
pop
xchg
mov
pop
movsb
fsubs
jl
dec
in
sub
mov
mov
sbb
lods
xor
cmc
or
jl
ret
dec
and
push
fmuls
insb
pop
jnp
mov
xchg
aam
adc
divb
cmpl
cmp
pop
fldl
jb
pop
adc
pop
xchg
pop
push
sahf
xchg
aas
clc
mov
scas
stc
ret
adc
lods
xchg
push
xor
sbb
aam
fmuls
int3
nop
sub
and
lea
mov
das
push
push
rclb
pop
pop
movl
loope
sub
rcrb
dec
cli
arpl
push
jecxz
mov
cmp
cmpl
jns
fs
int
in
xor
stc
test
xchg
inc
fcoml
sbb
push
shrb
adc
js
jbe
jl
call
arpl
lds
push
pop
xabort
sti
xor
insb
and
fcomp
mov
and
xor
mov
out
mov
imul
push
jae
sbb
and
push
je
in
cmp
dec
addr16
cs
ljmp
ret
sbb
jbe
lods
sbb
loopne
xchg
xchg
std
ror
in
fstps
cmp
add
arpl
aaa
push
imul
test
adc
dec
add
mov
mov
jmp
inc
push
jae
adc
cld
adc
addb
dec
cmp
sub
jge
sub
lods
out
inc
and
sub
rcr
gs
sub
test
or
dec
cmpsl
imul
or
mov
inc
pop
push
fwait
and
scas
and
xor
and
mov
xor
lret
clc
daa
mov
pop
jae
ljmp
adc
cmpsb
aam
je
stos
shl
fdivrl
movsb
lods
dec
xor
or
push
addr16
cld
add
out
jns
in
shrb
addr16
mov
loope
sbb
je
push
adc
and
unpcklps
test
mov
or
outsl
lret
fcompl
das
int
call
pop
in
data16
es
add
lds
mov
dec
js
clc
inc
test
test
xchg
stos
push
mov
cmp
aaa
mov
add
jns
sti
xchg
push
stos
insl
jp
inc
imul
js
push
ss
nop
mov
in
pushf
sub
fsubl
mov
hlt
dec
jecxz
mov
dec
inc
mov
ss
iret
dec
xor
or
rdtsc
int
enter
pop
pop
jo
hlt
cmp
jb
lods
or
push
hlt
push
sub
out
xchg
push
or
mov
adc
insb
or
or
int
xchg
in
std
push
cmp
out
sub
lds
xchg
push
jp
pop
dec
xchg
cmp
and
adc
add
sub
fistl
mov
mov
xchg
push
fsubs
sub
out
das
jnp
lret
mov
jg
subb
fdivrs
and
notl
cmpsl
or
cmp
leave
pop
lods
lods
mov
iret
test
mov
mov
movsb
xor
jnp
and
mov
jle
adc
out
in
idiv
daa
lods
cmpsb
das
inc
jle
lock
fcoml
out
jbe
out
les
fucom
dec
cmp
dec
aas
push
pop
push
adc
mov
jmp
inc
shl
jmp
adc
loope
sbb
mov
hlt
cwtl
imul
subl
xchg
das
cwtl
jle
out
pop
jmp
mov
xchg
pop
adc
mov
ds
inc
and
xchg
pushf
cmpl
lcall
inc
enter
inc
rorb
idivb
sub
loopne
sar
cmpsb
jnp
mov
fldl
imul
mov
mov
mov
addb
test
dec
in
jl
mov
xchg
mov
sbb
into
out
sahf
shll
xchg
lret
sub
movl
call
mov
pop
shrl
sub
stos
mulb
lahf
add
and
adc
fdivrs
mov
or
cmp
push
sbb
ljmp
mov
stc
cmpsl
cmp
adc
xchg
scas
add
sbb
mov
dec
and
mov
mov
jo
cmp
int
xchg
scas
imul
lods
das
add
das
pop
or
push
xchg
add
dec
mov
jb
mov
hlt
and
mov
in
in
inc
das
movsl
arpl
test
repnz
adc
xchg
xchg
push
imul
fcoms
inc
scas
adcb
out
mov
jle
inc
and
paddd
loopne
shrb
stos
loope
mov
insb
pop
sub
inc
nop
inc
dec
sbb
mov
mov
and
insl
das
push
push
push
jmp
mov
out
xchg
mov
stc
in
or
push
push
lret
ret
nop
inc
jle
mov
or
imulb
or
or
mov
pop
out
mov
mov
xor
repz
pop
ljmp
aas
shrl
sbb
adc
cmp
jns
sub
int3
mov
add
cmpsb
mov
push
lret
sbb
jae
cmp
pop
xchg
push
popf
ret
movswl
jp
hlt
dec
mov
mov
xchg
in
sbb
sub
push
adc
xchg
mov
std
push
sub
pop
mov
stos
call
icebp
or
or
mov
and
sti
ljmp
loope
or
cmp
inc
mov
gs
into
sub
jecxz
imull
sub
mov
push
sbbl
mov
movsb
dec
icebp
jno
jmpw
xchg
and
fsubrp
mov
loop
rorb
cwtl
notb
idivl
repz
jne
rcll
aam
jbe
icebp
push
cltd
mulb
nop
pop
stos
add
sub
pushf
cmpsb
cmc
mov
sub
scas
push
js
je
mov
in
jmp
jne
call
loop
mov
ljmp
sahf
int3
xor
sbb
popa
ret
adc
inc
in
lea
fmul
out
mov
xor
or
fsubs
sub
add
xchg
popa
adc
insb
mov
sub
icebp
sub
inc
adc
stc
mov
and
addl
mov
xlat
lahf
pop
stos
mov
ret
adc
cmp
in
loope
pop
cmp
fld1
xor
shr
out
push
sbbb
push
iret
push
pusha
or
fsts
sub
sbb
mov
lret
mov
adc
jg
and
int
add
jmp
jg
sti
fistpll
jp
aad
push
flds
jb
aaa
fistps
mov
dec
inc
mov
cld
sbb
scas
insl
cmp
and
outsl
bound
shl
push
fiaddl
pop
push
arpl
xor
and
in
loop
outsl
addr16
push
mov
lds
flds
add
dec
jge
pop
clc
movsl
popa
pop
xor
jmp
push
lret
js
jb
xor
adc
inc
sub
pop
call
cmpsl
rolb
orb
mov
mov
jo
inc
ja
cmc
mov
int
mov
sbb
and
repz
xchg
stos
je
mov
add
dec
sti
mov
les
pop
add
jmp
les
insb
xor
adc
jecxz
add
push
mov
js
leave
mov
dec
and
sub
xchg
iret
sub
jno
pop
daa
xchg
push
add
sbb
mov
fsts
movsl
into
into
ja
mov
dec
fwait
clc
mov
es
mov
xor
xchg
shll
mov
enter
jne
lcall
mov
mov
and
pop
mov
add
inc
hlt
mov
adc
decb
hlt
fcompl
pusha
call
ret
aad
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
dec
add
dec
add
add
add
add
add
add
add
fisubrl
data16
