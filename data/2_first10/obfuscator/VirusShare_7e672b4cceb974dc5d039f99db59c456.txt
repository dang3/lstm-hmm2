add
or
add
add
push
add
addb
add
mov
add
rolb
add
adc
addb
add
push
add
orb
add
loopne
add
mov
add
adc
add
and
xchg
add
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
and
xchg
add
add
add
add
add
add
mov
add
insb
or
add
add
and
xchg
add
add
add
add
add
add
fadds
add
mov
add
add
xchg
add
add
add
add
add
add
add
add
aam
or
xor
add
and
xchg
add
add
add
add
add
add
sub
add
or
or
xor
add
and
xchg
add
add
add
add
add
add
push
add
add
or
xor
add
and
xchg
add
add
add
add
add
add
js
add
jo
or
xor
add
and
xchg
add
add
add
add
add
add
mov
adc
add
add
and
xchg
add
add
or
add
push
or
sbbb
add
inc
add
subb
push
or
adcb
add
mov
add
xorb
add
add
int3
or
sbbb
sbb
add
call
add
addb
add
and
xchg
add
add
add
add
add
add
xor
add
fcoms
add
add
add
xchg
add
add
add
add
add
add
pop
add
add
add
add
xchg
add
add
add
add
add
add
addb
add
add
and
xchg
add
add
add
add
add
add
test
add
pop
sbb
add
add
add
xchg
add
add
add
add
add
add
rolb
add
sub
or
rolb
add
and
xchg
add
add
add
add
add
add
clc
add
add
sbb
add
and
xchg
add
add
add
add
add
add
and
add
int3
pop
or
rolb
add
and
xchg
add
add
add
add
add
add
dec
add
add
add
and
xchg
add
add
add
add
add
add
jo
add
insb
and
add
add
add
xchg
add
add
add
add
add
add
cwtl
add
add
add
and
xchg
add
add
add
add
add
add
rolb
add
or
call
add
add
xchg
add
add
add
add
add
add
call
add
add
xchg
add
add
add
add
add
add
add
add
or
add
xchg
add
add
add
add
add
add
add
add
and
xchg
add
add
add
add
add
add
inc
add
add
add
and
xchg
add
add
add
sbb
jmp
add
add
dec
add
add
jo
add
cwtl
add
add
rolb
add
add
add
adc
add
cmp
add
pusha
push
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
pop
add
js
add
mov
sldt
enter
sti
sldt
lock
add
sbb
add
inc
or
cmp
add
push
sldt
nop
or
addb
add
mov
add
add
xchg
add
add
add
add
add
add
cmp
or
test
add
and
xchg
add
add
add
add
add
add
pusha
add
or
jo
add
and
xchg
add
add
add
add
add
add
mov
or
cld
add
add
xchg
add
add
add
add
add
add
mov
add
add
or
mov
add
and
xchg
add
add
add
add
add
add
fadds
or
dec
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
and
xchg
add
add
add
add
add
add
sub
add
sbb
or
pushf
add
add
xchg
add
add
add
add
add
add
push
push
add
mov
add
add
xchg
add
add
add
add
add
add
js
add
hlt
push
or
aam
add
and
xchg
add
add
add
add
add
add
mov
push
or
in
add
add
xchg
add
add
add
add
add
add
enter
mov
or
aam
add
and
xchg
add
add
add
add
add
add
lock
add
mov
add
add
add
xchg
add
add
add
add
add
add
sbb
add
jo
or
clc
add
add
xchg
add
add
add
add
add
add
inc
pop
add
push
add
add
xchg
add
add
add
add
add
add
push
pop
or
jl
add
and
xchg
add
add
add
add
add
add
nop
pop
add
or
or
pushf
add
add
xchg
add
add
add
add
add
add
mov
bound
add
add
add
xchg
add
add
add
add
add
add
loopne
add
test
add
add
add
xchg
add
add
add
add
add
add
or
add
mov
or
pusha
add
add
xchg
add
add
add
add
add
add
xor
add
adc
or
in
add
add
xchg
add
add
add
add
add
add
pop
or
add
insl
or
or
add
and
xchg
add
add
add
add
add
add
orb
add
or
rolb
add
and
xchg
add
add
add
add
add
add
test
add
fdivl
add
add
xchg
add
add
add
add
add
add
rorb
add
push
jbe
add
add
add
xchg
add
add
add
add
sbb
add
sub
add
inc
or
andb
sbbb
orb
add
and
xchg
add
add
add
add
add
add
sub
add
adc
or
adc
add
and
xchg
add
add
add
add
add
add
push
or
add
or
insb
add
add
and
xchg
add
add
add
add
add
add
js
add
nop
jle
add
xor
add
xchg
add
add
add
add
add
add
mov
mov
add
add
add
xchg
add
add
add
pop
add
jg
add
or
cmp
add
and
add
dec
or
cmp
add
jo
add
cwtl
or
cmp
add
rorb
cmp
add
call
add
add
xchg
add
add
add
add
add
add
adc
add
push
add
add
xchg
add
add
add
add
add
add
cmp
add
jl
or
adc
add
and
xchg
add
add
add
add
add
add
pusha
or
add
add
add
xchg
add
add
add
add
add
add
mov
add
movsb
fimuls
add
add
and
xchg
add
add
add
add
add
add
mov
add
mov
add
add
xchg
add
add
add
add
add
add
fmuls
add
int3
fimuls
add
add
and
xchg
add
add
add
add
add
add
add
add
loopne
or
adc
add
and
xchg
add
add
add
add
push
or
addb
add
and
xchg
add
add
add
add
add
add
inc
or
add
add
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
add
inc
add
inc
add
dec
add
inc
add
add
inc
add
dec
add
add
add
inc
add
dec
add
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
push
add
dec
add
push
add
inc
add
dec
add
add
add
push
add
xor
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
add
and
add
add
sbb
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
cmp
fs
cmpsb
cmpsb
mov
lea
push
aas
aas
adc
adc
add
push
push
mov
loope
loope
repnz
clc
clc
cmc
cmc
cmc
jmp
shll
xchg
aaa
aaa
add
sbb
jbe
mov
loopne
loopne
out
out
cmc
cmc
cmc
std
std
std
stc
stc
stc
xlat
xlat
xlat
movsb
movsb
movsb
inc
inc
inc
add
add
jno
mov
in
jmp
jmp
repz
sti
sti
fistps
sbb
push
push
or
rcl
loop
loop
loopne
loope
loope
jecxz
call
in
repz
sti
sti
std
std
std
pusha
pusha
pusha
add
and
cmpsl
lods
mov
in
in
jecxz
jecxz
jecxz
jecxz
jecxz
loop
loope
loope
loopne
jmp
jmp
cld
cld
jmp
loope
test
add
dec
sub
cmpsb
je
mov
cld
out
out
out
out
out
out
out
out
out
in
in
jecxz
loopne
loopne
out
out
jmp
ljmp
pusha
cmp
fdivrs
mov
sar
stc
stc
stc
ljmp
ljmp
call
in
loope
loope
fstp
cmc
cmc
cmc
in
out
lock
mov
insl
dec
or
orb
dec
sbb
push
repz
in
in
in
in
in
in
in
in
jmp
jmp
jmp
in
in
out
out
out
jmp
call
dec
adc
add
push
sbb
add
std
std
std
repz
out
out
out
out
out
jmp
jmp
jmp
loope
loope
jmp
dec
rcl
scas
jge
scas
dec
and
adc
add
add
cltd
sub
das
add
pop
in
jmp
cld
cld
cld
hlt
hlt
hlt
repnz
in
in
jmp
jmp
call
ljmp
scas
lods
mov
pop
cwtl
cmp
add
es
inc
add
call
sti
sti
sti
div
div
repnz
out
out
in
in
in
jmp
in
ljmp
test
pushf
push
fs
add
cmp
push
or
add
push
scas
mov
out
out
out
push
div
lock
in
in
ljmp
call
xchg
push
sub
sub
inc
popf
addr16
pushf
inc
push
sbb
mov
cmp
dec
add
add
aam
mov
in
in
in
clc
stc
stc
fucomip
out
out
div
div
icebp
icebp
lock
jmp
rcl
stos
jle
xchg
inc
add
and
addr16
push
dec
sbb
add
add
mov
stos
inc
add
add
pusha
add
out
cld
cld
aad
aad
mov
cltd
xchg
xchg
adcl
cltd
cltd
fstp
rcl
mov
xchg
mov
dec
pop
add
sbb
sub
xor
xor
add
add
shrb
mov
add
pop
add
arpl
shrl
mov
aad
cld
cld
cld
into
aam
mov
rcrb
test
mov
into
iret
mov
mov
jg
or
push
xor
sub
cmp
inc
or
add
add
ret
jne
push
mov
add
insb
pop
jae
fnstenv
mov
mov
clc
sti
jmp
call
pop
pop
mov
push
lock
pop
xchg
pusha
add
add
add
add
adc
or
pop
pop
xor
add
add
into
or
add
movsl
ret
stos
popf
jle
inc
aas
pushf
inc
mov
into
in
in
in
out
out
fwait
fwait
mov
std
out
repz
mov
imul
jne
add
add
sub
inc
sub
add
add
rorl
bound
mov
enter
mov
push
sub
xchg
pushf
xchg
mov
mov
mov
mov
inc
out
xchg
ljmp
addb
jp
xor
push
pusha
add
add
pushw
fwait
pop
or
add
lock
data16
cltd
inc
popf
inc
lods
mov
into
int3
arpl
aad
aad
in
repnz
cwtl
out
dec
repnz
aaa
cli
mov
notb
push
mov
add
push
je
and
or
sbb
sahf
pop
or
add
lock
fists
fidivrl
mov
jae
mov
mov
in
cmc
out
hlt
bnd
mov
jb
shll
push
pushl
cwtl
add
mov
mov
add
mov
add
add
insb
add
popw
xchg
push
add
add
cmc
hlt
mov
outsb
add
jnp
je
pop
inc
scas
pop
sub
dec
dec
mov
xchg
mov
mov
nop
dec
les
aam
fcompp
cmp
push
pushl
xchg
add
add
mov
or
add
jbe
add
imul
add
ljmp
jge
sahf
mov
sbb
sub
insb
dec
shll
aam
jbe
mov
jle
jp
out
jmp
xchg
dec
imul
inc
ljmp
mov
outsb
addl
ja
add
outsb
jo
dec
daa
add
add
clc
mov
and
mov
cmp
imul
xchg
test
call
jae
xchg
mov
sar
jmp
inc
dec
ljmp
mov
int
add
test
add
je
stos
data16
or
add
mov
lock
mov
das
leave
pop
inc
shll
faddl
in
cmpsl
mov
mov
rcrl
addr16
das
xor
cli
addb
jge
or
add
jnp
mov
jno
add
sti
rol
loope
and
inc
sub
jb
fimuls
repz
sti
iret
clc
shlb
js
test
int3
rorb
ss
push
rorl
jmp
add
add
cli
cli
int
fadds
int
sbb
xchg
call
int3
idivl
test
in
fdivrs
int
and
push
es
fstl
in
add
jae
aad
add
jg
push
adc
add
stc
enter
push
shll
xlat
jl
xlat
jge
fimuls
out
lods
loop
je
mov
jnp
int3
addr16
cmp
add
jns
out
or
mov
inc
sub
add
add
test
shrl
aam
xchg
fiaddl
in
sbb
pop
fildl
leave
popa
sbb
xor
repnz
and
mov
inc
cs
add
clc
lret
mov
shll
jnp
lret
fs
aad
push
lret
mov
aas
mov
pop
mov
mov
cmp
mov
add
icebp
mov
in
jmp
enter
jge
lds
fs
loopne
pop
lds
add
jmp
add
rolb
incl
add
incl
add
incb
add
cld
add
psubb
add
lock
pop
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
clc
add
pop
cld
add
paddd
add
incl
add
rolb
push
or
add
add
add
push
adc
add
add
pushf
jge
add
adc
add
add
add
add
add
add
add
add
add
loopne
add
adc
add
add
add
rorl
add
sbb
add
adc
push
jl
add
adc
jb
adc
cmpl
add
add
popf
jl
add
add
add
add
add
jl
add
add
add
jl
add
add
add
jl
add
add
add
jl
add
add
add
jge
add
add
add
jge
add
add
add
jge
add
add
add
adc
add
add
pop
jge
add
add
add
adc
add
add
cmpl
add
adc
mov
jp
add
adc
mov
jp
add
jnp
add
jp
add
jnp
add
jp
add
jnp
add
jp
add
jnp
add
jp
add
jnp
add
jp
add
jl
add
adc
push
jl
add
adc
sbb
push
jp
add
jl
add
adc
xor
adc
pusha
jp
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
push
push
dec
dec
dec
cs
dec
dec
add
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
dec
inc
dec
inc
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jb
popa
insb
imul
arpl
add
gs
je
push
imul
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
push
js
arpl
gs
add
add
je
popa
jbe
inc
imul
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
dec
adc
adc
sti
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
dec
add
and
les
add
pop
add
inc
add
rorl
add
push
adc
add
pop
and
xorl
daa
aad
or
mov
xchg
aad
xchg
es
adc
or
mov
push
lret
data16
imul
push
or
jge
or
int3
js,pn
mov
imul
pop
repz
outsb
or
xor
repz
stos
int3
push
jb
mov
je
fiaddl
inc
xchg
push
cmc
insl
repnz
std
mov
pop
inc
mov
stos
pop
and
imul
aam
push
fisubrs
pop
mov
cmp
push
rcl
out
nop
ja
stc
sbb
aad
in
add
jg
xchg
sub
fs
lea
add
mov
mov
sub
pop
inc
xchg
mov
jg
mov
xchg
lea
jns
xchg
xchg
mov
add
push
cltd
hlt
xchg
in
stos
and
divl
pop
mov
nop
pop
out
push
hlt
jae
fwait
xchg
sbb
rol
fidivs
inc
pop
fcomi
dec
xchg
cmp
and
fbstp
das
int
mov
fsubp
push
data16
leave
js
ja
andb
cmp
flds
fldenv
or
sbb
je
fmuls
lret
mov
pop
and
push
jo
icebp
inc
fldl
and
and
sarl
jbe
sti
adc
mov
jae
ja
test
mov
aad
jbe
test
fbstp
cltd
loope
mov
ds
fiaddl
add
ljmp
cmpsb
inc
sub
fs
xor
aam
cltd
jmp
inc
std
sub
add
mov
sarb
das
mov
pop
inc
xor
js
mov
sub
inc
add
scas
cltd
jae
popf
pusha
jl
je
lock
sahf
sahf
lock
aaa
sbb
lret
aam
sbb
pop
iret
data16
sub
xchg
sbb
call
popf
pushf
xchg
and
shll
pop
test
loope
int
xor
push
or
cli
xor
push
pop
pop
cld
lret
adc
lret
cmpsb
sbb
jp
call
inc
stos
ret
mov
or
cmp
push
jbe
and
ja
in
dec
add
and
cmpb
and
sub
jns
push
mov
test
lahf
pop
push
ss
or
mov
test
fwait
mov
pop
into
outsl
sbb
cvtdq2ps
mov
jge
test
js
test
lahf
fsubrl
and
xor
scas
hlt
mov
lods
mov
out
insb
xchg
xchg
lea
iret
mov
aaa
pop
repnz
aad
push
das
adcl
adc
out
scas
lods
scas
imul
add
adc
jg
add
pop
mov
jp
xchg
mov
jge
shl
mov
dec
movsl
cmp
adc
push
jo
jnp
sub
outsl
test
mov
in
outsl
loope
out
xor
fdivs
xor
popa
lds
in
scas
test
add
rclb
mov
js
push
sub
sub
vmovmskps
inc
mov
adc
ffreep
leave
mov
sahf
push
mov
or
imul
push
insb
adc
push
aam
mull
dec
ljmp
mov
xchg
lods
and
cmp
ja
std
pop
mov
push
or
xchg
jbe
mov
ja
repz
mov
jnp
loop
clc
pop
inc
xrelease
cli
flds
outsb
orl
dec
addr16
mov
test
dec
xor
adc
shlb
movsl
jg
insl
ret
jnp
dec
ss
jecxz
pop
loop
cmp
fcmovne
testl
js
push
and
jg
std
in
cs
jecxz
daa
rcpps
lcall
cmp
loopne
sbb
ds
jl
inc
iret
lret
sub
in
and
dec
fcmovbe
fs
stc
mov
lea
int
scas
xchg
insl
or
xchg
jg
adc
pusha
stc
int3
mov
bound
fdivs
and
ljmp
loope
dec
stos
into
pop
addr16
cmp
inc
stos
xchg
sbb
dec
iret
add
jbe
insb
jb
dec
lock
jp
ja
mov
cltd
roll
mov
clc
fadds
add
enter
adc
fiaddl
loop
ret
sarb
lcall
xchg
sahf
clc
fwait
xchg
mov
call
xchg
or
test
cmp
in
pop
into
xchg
je
shl
mov
mov
and
jb
js
out
sbb
popa
jmp
hlt
sbb
arpl
lcall
data16
xchg
mov
xor
mov
je
popa
xor
push
mov
fbld
mov
iret
sub
inc
adc
mov
repnz
rorl
jb
insl
ljmp
adc
shr
sub
pushf
pop
pop
dec
loope
dec
inc
incb
inc
stc
xchg
inc
outsb
call
out
add
mov
mov
mov
pop
das
sub
std
inc
or
aas
fnsave
sbb
popl
jge
fisubrl
mov
jecxz
je
sub
dec
loope
lcall
outsl
mov
pop
mov
xchg
iret
and
fcmove
movhps
pop
sub
xlat
shl
xchg
pushf
movl
mov
loop
and
or
hlt
sub
sbb
pop
sbb
mov
shll
cwtl
in
scas
xor
lcall
das
xchg
pusha
xchg
sbb
push
mov
dec
pop
mov
mov
jne
and
sub
das
roll
cltd
loope
lock
jge
lret
cld
jg
into
jbe
inc
push
mul
stc
dec
fcompl
loop
adc
test
mov
mov
push
xchg
sub
loop
notl
push
pushf
out
pop
jne
mov
cmp
mov
xchg
mov
inc
mov
popf
je
bound
pop
add
ss
mov
mov
sub
inc
cmpsb
jl
mov
mov
cmpsl
jb
xchg
cmp
jno
pop
jne
xchg
pushf
cmp
inc
sub
inc
mov
jo
xchg
xchg
test
and
sahf
dec
test
inc
ja
jl
or
dec
lret
pop
push
push
cli
mov
xor
sub
movsl
pop
shlb
or
cld
and
test
sti
nop
fwait
data16
fisubl
repz
arpl
inc
cld
mul
inc
or
sbb
stos
out
fisubl
ja
mov
fnstsw
lcall
sub
cmpsl
push
outsb
xchg
cmpsl
push
sub
mov
cmp
das
mov
xchg
push
outsb
cltd
jge
xchg
xchg
pop
shrb
or
add
fisubl
mov
sub
pop
push
lock
dec
cmp
loop,pt
and
roll
out
adc
rcrl
repz
push
push
add
push
xor
ss
insl
pop
loope
or
jbe
mov
fistps
push
lds
or
jmp
sub
inc
ret
iret
lret
mov
mov
aam
leave
sub
fmul
mov
xchg
add
mov
push
aam
shlb
test
frstor
fcmovne
add
jbe
cwtl
inc
or
mov
sbb
outsl
xor
pop
aam
movsl
xlat
mov
inc
ss
mov
addr16
fcoml
and
into
jno
add
pop
pop
ror
cltd
jle
imul
push
dec
rcl
ljmp
repnz
mov
and
sbb
pushf
das
jecxz
cltd
movsb
push
pop
int3
add
jbe
pusha
mov
mov
addr16
push
lea
addr16
aaa
add
dec
out
xchg
cmp
jnp
inc
ljmp
jns
jne
mov
ds
loope
js
mov
dec
imul
cli
scas
xchg
mov
int
roll
in
inc
out
fnstcw
incb
xchg
xlat
pop
orb
stos
mov
inc
test
xchg
repz
cmp
int
or
sahf
pop
or
bound
je
mov
psrad
xor
jbe
add
pop
jns
fcompl
jecxz
sub
imul
pop
dec
push
shll
push
pop
mov
ret
mov
mov
enter
jae
mov
clc
dec
mov
adc
sbb
fwait
fiaddl
aad
dec
mov
or
pop
testl
adc
lcall
test
ds
add
mov
adc
aaa
lret
cmp
mov
les
iret
jl
in
adc
test
pusha
into
jmp
popa
jl
rolb
xor
and
cli
sub
mov
xor
or
mov
enter
xor
mov
pop
sahf
inc
and
adc
sub
add
aam
xor
loop
fwait
xor
add
sbb
pop
fidivrl
add
lods
iret
shlb
repnz
sbb
sti
inc
adc
sub
xchg
cmp
stos
es
pop
andl
test
aas
movsl
out
sbb
dec
adc
jmp
pop
cmp
push
insb
xor
adc
adc
sbb
lock
sbb
mov
test
and
mov
movsl
pop
daa
shrb
insl
sbbl
cmp
rcr
js
fcmovu
in
sub
pop
inc
rorb
push
ljmp
mov
lods
cmc
leave
inc
cwtl
inc
push
stos
sbb
jo
jle
dec
push
pop
sbb
push
faddl
mulb
addl
or
adc
adc
xor
push
je
cmpsb
pushf
int3
pop
xchg
jmp
movb
and
pop
xchg
jle
mov
es
mov
mov
popa
pop
ja
mov
addb
and
pop
sub
jne
inc
ljmp
push
xor
sub
sub
push
aam
jecxz
ret
aaa
out
inc
and
xor
andb
cmp
cmpsl
lods
xlat
divl
lock
push
add
fistpl
xor
mov
add
sbb
dec
add
pop
int
mov
je
test
cmp
aam
lcall
stos
xor
cmp
adc
cmpsb
pop
mov
adc
pop
mov
mov
push
repnz
sbb
dec
mov
cmp
lea
cmp
cwtl
or
in
and
lods
pop
lea
jmp
popa
scas
stos
cmp
and
lods
ljmp
aad
adc
xchg
les
xchg
std
jne
cmpsb
lret
pop
aaa
stos
outsl
std
fs
cmp
xchg
xor
mov
mov
inc
mov
int3
add
mov
jge
mov
jmp
imul
inc
sbb
ds
and
xor
lcall
ss
nop
xor
pop
jbe
xor
add
mov
int3
pop
sti
mov
lods
cmpb
and
cmpl
or
cltd
dec
xor
in
ja
sbb
pop
inc
cli
aam
bound
rclb
into
inc
dec
cld
fdivs
fldcw
xchg
and
pop
xchg
mov
test
and
pop
add
int3
ret
repnz
daa
adc
cmp
iret
cmovo
fldl
or
imul
dec
and
dec
adcb
dec
and
loop
fwait
jnp
mov
aam
or
xchg
pushf
inc
push
aas
popa
orl
fdivl
or
subl
int
or
enter
gs
dec
ljmp
hlt
jbe
xor
add
adc
fldenv
jns
jae
mov
lods
jge
pop
and
xor
dec
push
push
test
outsl
icebp
or
jmp
mov
scas
out
sub
inc
inc
xchg
fiadds
jmp
mov
mov
lds
stos
lret
sub
test
ss
push
scas
push
jne
sbb
mov
in
or
fisttpl
addr16
pop
jg
push
rcll
mov
or
push
mov
ret
pushf
cmp
sbb
pop
mov
mov
call
and
rclb
dec
test
mov
pop
aas
xchg
ss
in
cmc
or
or
mov
cmp
cs
pop
arpl
jo
ret
ss
les
int
mov
adc
cld
adc
mov
push
and
ljmp
cwtl
jmp
shll
notb
mov
cld
adc
test
repnz
mov
shrb
sbb
lea
ret
test
loopne
push
mov
sub
dec
out
add
inc
sahf
sti
fadd
or
fistpll
call
repz
dec
lea
and
xor
je
in
in
xchg
clc
test
dec
adc
dec
in
lds
cmpsb
out
stos
mov
push
cmp
pop
lret
jb
aad
mov
insb
into
or
pop
cli
mov
mov
cmp
push
fiadds
mov
jno
clc
cwtl
clc
jge
popa
dec
insb
push
nop
dec
xchg
pushf
sub
in
lret
sti
and
scas
mov
in
loop
insb
pop
out
sub
mov
stos
icebp
sub
xor
and
jno
orb
cmp
js
mov
cmp
push
cmp
add
adc
add
jb
mov
add
mull
cmp
sbb
mov
pop
ss
call
mov
das
mov
call
mov
dec
call
hlt
sarb
rcr
adc
mov
mov
push
int3
sbb
cmp
push
aam
pop
out
in
lock
bound
out
mov
xchg
mov
dec
rcrl
popa
xchg
dec
or
xchg
push
push
push
movsl
cmc
xor
aas
repz
mov
popf
lcall
xchg
xchg
in
cmp
aas
cmp
inc
clc
imul
mov
pushl
mov
adc
pop
lea
and
cs
in
ret
icebp
cmp
int3
js
mov
sbb
push
js
sub
add
and
inc
test
and
mov
xor
sub
and
in
push
add
fcomi
mov
xchg
sub
xor
pop
jne
orb
dec
into
dec
test
loop
insl
cwtl
pop
inc
adc
pop
push
push
cld
sub
ret
and
push
mov
lods
pop
lret
arpl
stos
mov
leave
jbe
add
ss
jbe
mov
jecxz
jo
insl
addl
fsubl
and
and
pop
inc
cltd
inc
dec
jecxz
fnstsw
rcl
mov
std
data16
mov
movsl
and
cmp
mov
mov
jp
xchg
ja
sbb
in
loope
pop
lahf
cmp
mov
lods
scas
lds
shr
cmpl
push
shl
mov
out
or
inc
sbb
js
push
loop
jecxz
inc
gs
cmp
out
jnp
xlat
mov
jmp
dec
push
and
popa
inc
insb
push
dec
fsubl
add
mov
cmp
addb
popa
dec
pusha
nop
pop
decl
sbb
xlat
leave
inc
or
xchg
sbb
jb
sub
cltd
adc
mov
jecxz
xchg
add
imul
sub
negb
das
ret
xor
mov
and
sbb
js
test
lret
add
jne
mov
inc
insl
xchg
or
pop
xchg
jl
cmp
stc
and
outsl
inc
stos
xor
test
cld
push
sti
test
mov
popf
call
pop
cltd
cmp
div
dec
mov
cli
sbb
addl
pop
stc
and
jl
dec
rorb
xchg
sub
adc
call
and
addb
mov
push
fs
scas
ja
jp
icebp
push
push
xchg
or
and
lods
inc
pop
or
mov
rdtsc
push
add
sbb
or
cltd
mov
jb
loop
adc
add
int3
popa
movsl
and
cmp
inc
pop
mov
insl
insb
out
fs
movsl
aam
and
enter
cwtl
mov
shr
push
or
lcall
mov
pusha
lret
add
pop
nop
mov
arpl
hlt
adc
xchg
lods
enter
pop
fcomip
test
imul
mov
adc
jbe
les
push
mov
fnstsw
pop
rcll
aam
pushf
movsl
push
outsb
jns
pop
js
add
jmp
xchg
mov
add
aad
lcall
in
loope
sub
mov
test
aad
add
and
adc
sarb
pop
out
jg
inc
inc
clc
push
mov
push
mov
fcomps
adc
jge
je
leave
add
push
je
sbb
jns
jno
mov
and
sub
add
sahf
pop
int
fidivs
rcrb
dec
jo
js
xor
test
cmp
in
mov
cli
dec
ljmp
repz
xchg
hlt
stos
jo
jecxz
fsubr
mov
cmpsb
scas
je
push
and
mov
mov
pop
lock
leave
sbb
dec
adc
jbe
repz
inc
fldt
loopne
adc
lahf
out
aam
mov
pop
inc
mov
push
enter
xorl
cmpb
daa
pop
imul
out
popa
jb
pushf
or
scas
gs
add
inc
fs
xor
daa
rol
fldenv
movsl
mov
scas
mov
mov
push
jge
xchg
shlb
sub
sub
pop
repz
imull
push
or
inc
icebp
xlat
fstl
clc
loopne
movl
pop
adc
ss
aaa
in
shrb
test
repnz
cmp
shl
cwtl
push
in
fwait
sub
fwait
testl
daa
lret
insb
xor
fisttps
mov
movsl
test
mov
shlb
outsl
clc
data16
mov
push
xor
outsb
and
insb
sbb
sbb
in
adc
adc
cwtl
or
mov
push
and
lret
fisubl
sub
jp
js
cwtl
fnstenv
in
xchg
mov
insl
cmpsl
xlat
nop
fwait
enter
jl
adc
jne
shl
int
dec
shl
jl
cmpsb
cmp
and
fstpt
sub
jle
sub
push
push
outsb
sub
sub
xchg
and
mov
cmp
sub
xchg
outsl
movsb
jbe
testb
arpl
sti
sub
mov
lea
pop
adc
pcmpgtw
xor
insl
push
stos
xchg
pushf
ret
push
and
pause
shld
pop
adcl
or
cmp
cld
rolb
lret
lods
and
mov
in
roll
jg
rorl
ret
mov
mov
lret
mov
leave
int
daa
xchg
insb
outsl
adc
jno
sub
pop
pusha
cwtl
mov
vmaxpd
add
adc
push
testb
cmp
cmc
cwtl
inc
xchg
cs
pop
es
mov
mov
in
pop
xor
mov
jmp
stos
sbb
mov
sarl
push
loopne
mov
lea
hlt
pop
test
or
mov
pop
subl
cmpsl
pop
das
movsl
sbb
cwtl
int
ds
cmp
mov
jmp
jne
xchg
cmp
in
sub
and
adc
mov
mov
mov
inc
push
dec
push
repnz
popf
andb
and
or
xchg
in
adc
push
or
xlat
and
add
jo
cmpb
aam
lds
ja
push
mov
sub
add
bound
mov
sbb
ljmp
ja
fisubrl
xor
je
lahf
das
mov
out
sahf
into
inc
push
pop
jp
mov
iret
and
sub
cmp
inc
arpl
jl
outsl
jnp
mov
scas
loopne
rclb
mov
fwait
mov
cs
loop
add
inc
add
fsubs
mov
sbb
ficoml
cli
pop
xor
outsb
jl
dec
mov
in
rclb
insl
mov
out
sbb
cwtl
jp
adc
jg
lcall
aas
dec
clc
mov
fcomip
push
mov
lcall
cmpsl
mov
int3
insb
scas
out
cmp
push
push
add
mov
fs
cld
fsubp
jge
pop
in
arpl
imul
xchg
addl
or
dec
sbb
mov
call
dec
cmp
bound
ss
lahf
jne
das
jmp
fsubl
inc
loope
pop
jo
int
and
aaa
jp
pop
cwtl
cs
xor
and
lret
mov
xchg
lea
pop
in
rcr
mov
pop
mov
or
xchg
lods
xor
test
mov
lret
adc
add
out
mov
lret
push
mov
cltd
lods
data16
inc
xchg
hlt
xor
sub
lea
pop
sub
push
push
lret
dec
xor
mov
dec
mov
inc
dec
adc
lret
mov
icebp
outsb
sbb
pop
jge
inc
xor
sbb
push
adc
clc
and
stos
outsb
xchg
lock
imul
faddl
push
fdivp
in
dec
imul
sub
mov
pop
js
add
xor
sbb
bound
shll
adc
cmp
adc
cmp
enter
xor
xor
lods
adc
das
jae
mov
xchg
out
enter
push
pop
sbb
test
int3
sub
or
mov
popa
in
jecxz
movsb
daa
xchg
adcb
mov
and
mov
sbb
xor
pop
sub
test
adc
jne
cmpsl
cmp
sbb
leave
and
insl
ret
fisubl
lret
cmpxchg
loope
lahf
fs
int3
fldt
fucomi
aad
inc
dec
shlb
sarb
cmp
aas
js
inc
jmp
movsb
pop
xchg
sahf
or
jne
scas
push
arpl
push
mov
fimull
cmp
pop
mov
mov
mov
lahf
lcall
push
mov
pusha
or
xor
xchg
push
inc
add
gs
dec
xchg
dec
xlat
subb
inc
cltd
add
outsb
cmp
cmp
decl
cld
int
fs
xor
xlat
cwtl
cld
jns
ss
inc
mov
aam
jecxz
cmp
xor
clc
lods
lahf
in
xchg
sub
xchg
mov
dec
faddl
fwait
ja
add
pushf
sub
scas
jecxz
in
pop
dec
adc
sbb
shlb
faddp
add
cmp
xor
or
mov
lcall
in
cmp
push
lcall
rclb
aaa
test
xchg
inc
lret
mov
icebp
les
sbb
inc
jb
jg
mov
cmp
data16
adc
outsl
test
loope
mov
dec
adc
push
sub
and
stc
pop
adc
mov
lret
out
dec
jge
mov
loop
sbb
xor
scas
fistl
inc
push
sbb
cmp
das
dec
in
aas
movsb
mov
lret
insb
stos
test
jmp
out
xor
xchg
es
push
mov
fwait
andl
ret
jg
xor
icebp
or
adc
mov
lea
sub
pop
push
aam
push
push
or
out
shll
pop
mov
in
inc
sti
bound
dec
stc
pushf
out
fdivrs
mov
mov
test
lock
repz
inc
push
bsr
sbb
push
xchg
stos
mov
sahf
pop
pop
cmp
movsb
cmp
lock
bound
bound
test
rolb
fidivrl
sahf
aas
addr16
imul
fstpt
in
nop
cmp
push
jp
insb
mulb
mov
outsb
test
cwtl
mov
jno
lret
stos
clc
or
call
into
stos
cli
in
adc
sbb
xchg
push
insb
fnstcw
cwtl
out
test
jo
leave
jp
push
or
sub
sarl
xchg
hlt
dec
pop
lcall
mov
inc
mov
xor
push
outsl
fildl
bound
dec
push
loopne
insb
jo
adc
inc
test
xchg
ljmp
add
inc
mov
rclb
add
out
mov
int3
or
lcall
outsl
pop
stc
pop
pop
mov
into
and
adcb
pop
push
lock
pop
neg
pop
xor
sbb
sbb
movsb
pop
dec
cmp
and
and
inc
mull
hlt
add
ror
scas
inc
xchg
outsl
mov
repz
mov
sahf
popf
mov
shll
mov
lcall
push
mov
fcoml
dec
add
jge
lods
or
cs
lock
mov
pop
in
dec
in
or
hlt
add
daa
sbb
sahf
cwtl
sbb
add
push
test
in
stos
push
arpl
outsb
mov
fistpll
adc
push
inc
fsubr
dec
je
out
inc
mov
mov
aas
xchg
add
xor
icebp
sbb
aad
and
out
stos
nop
jg
xor
loope
dec
out
mov
insb
aad
pop
clc
sti
loop
addr16
aad
test
stos
test
push
sarl
mov
mov
and
popf
movsb
pop
add
out
jge
mov
fisttpl
add
push
push
lcall
fmuls
cli
mov
cmp
lds
inc
leave
out
in
sbb
mov
fwait
and
mov
mov
stc
bound
repnz
ds
jge
sti
ljmp
icebp
adc
loope
mov
add
and
fwait
push
xchg
js
daa
jge
push
fnstsw
repnz
push
popa
dec
pop
aam
stos
out
nop
push
jg
xor
jl
cmpsl
pop
movsb
cmp
adc
lret
ss
add
push
dec
jp
movsb
scas
push
mov
stos
pop
test
es
icebp
popf
daa
xchg
mov
mov
dec
mov
push
pop
cmp
daa
cmp
rclb
mov
aaa
cwtl
mov
fistl
cld
or
push
test
out
ss
add
and
and
jmp
cltd
andb
leave
push
adc
cmp
loop
mov
dec
dec
push
ds
mov
pop
mov
jmp
fldt
push
jnp
aad
dec
xchg
cmc
insb
mov
cwtl
nop
add
inc
sub
fdivrp
inc
pop
outsb
jge
stos
xor
dec
aaa
mov
loop
push
jns
icebp
push
imul
sbb
jge
inc
imul
std
add
sub
adc
xchg
xchg
and
test
sbb
lcall
clc
pop
mov
subb
add
cld
ret
addr16
in
test
jl
sbb
xchg
pushf
xor
inc
cmpsl
in
movsb
pushf
mov
cmp
or
pop
test
bound
cmp
fmul
shrl
mov
cld
scas
ret
mov
fwait
sbb
mov
sub
jnp
add
jmp
movsb
xchg
sahf
ficoms
xor
rcrb
bound
mov
out
xchg
and
lock
cmp
daa
pop
sarl
mov
scas
enter
xchg
sti
xchg
or
into
sbb
dec
aad
outsl
ret
pushf
push
xchg
inc
orl
lahf
xor
mov
inc
push
je
or
pop
repz
iret
outsl
into
mov
and
testl
out
test
inc
movsl
in
push
jmp
mov
jne
lods
pushf
push
and
pop
lds
mov
std
pop
sub
mov
pushf
xchg
out
push
icebp
fcoms
push
test
lahf
lods
add
outsb
ljmp
jg
adc
js
mov
test
fmulp
sarl
adc
popf
aam
pop
xchg
inc
xor
xchg
xor
int
lret
cmp
lret
jmp
pop
sub
jae
cltd
add
lods
inc
cli
mov
test
sti
mov
ja
or
mov
inc
adc
pop
aam
and
push
loopne
inc
pop
inc
inc
sbb
push
lock
jo
push
sbb
jbe
add
sub
out
repnz
scas
bsr
mov
sub
xchg
imull
add
or
add
xor
pop
xchg
xor
lahf
mov
and
sub
push
mov
push
dec
repz
cmp
mov
mov
scas
outsb
rcr
ds
loopne
or
mov
bnd
arpl
xor
ds
pusha
jno
loop
sub
sbb
popf
jl
fildll
dec
inc
je
inc
orl
mov
std
call
aad
add
cwtl
ficompl
jg
cmp
jo
bound
xor
aas
push
adc
xchg
loop
xchg
mov
test
sbb
push
in
cmp
push
shrb
jge
push
popa
xchg
push
xchg
jmp
cli
ds
jle,pt
mov
xor
and
shrb
inc
sub
scas
adc
cmp
inc
mov
sbb
ret
imul
xchg
mov
mov
sub
andl
roll
std
je
jecxz
inc
in
ret
mov
push
mov
fs
pop
arpl
lods
and
gs
jl
test
loopne
call
mov
pop
es
pop
mov
adc
xor
and
sub
and
stos
push
mov
inc
loop
dec
xchg
dec
or
xchg
mov
stos
jno
mov
popa
sub
xor
inc
push
out
sub
das
es
mov
inc
pushf
push
stc
test
xchg
pop
adc
mov
dec
int
ljmp
sbb
dec
sub
insb
int
daa
test
adc
lds
rcrb
out
mov
dec
mov
jge
js
sub
loop
shl
lods
jae
mov
rol
jecxz
mov
xchg
hlt
jl
or
iret
inc
xor
cmpsl
mov
dec
mov
xor
jne
pushf
movsb
jae
adc
iret
shlb
aad
jae
and
jle
sub
insb
flds
lcall
fisubrs
scas
sbb
test
add
ret
jbe
sub
aas
cmp
push
lock
or
pop
mov
inc
sti
pop
addb
cmp
ja
push
adc
or
mov
adc
stc
fidivrl
and
sti
jp
push
sbb
notl
sbb
and
mov
inc
pop
fisttps
lret
add
xor
or
std
or
or
sar
fsts
sub
xchg
and
test
stc
cmc
sub
setns
jo
mov
addr16
inc
jbe
cltd
adc
xorl
sahf
call
mov
mov
cmp
or
js
push
popf
popf
into
dec
ds
fdivrs
sbb
adc
fadds
xchg
rorl
xchg
clc
dec
bswap
stc
mov
std
sub
ret
lods
cmp
sub
icebp
cmp
push
sbb
lods
dec
movsb
jge
ss
lret
faddl
inc
jo
stos
cltd
sub
cmp
rorl
int3
repz
mov
in
sub
xchg
std
test
mov
inc
jle
cmc
lret
aaa
sub
int
out
pop
in
sub
fwait
mov
mov
mov
xchg
cld
dec
mov
movsl
test
popf
mov
mov
lret
mov
add
fwait
aas
sub
shll
pop
and
jbe
insl
jbe
loopne
je
sub
cltd
stos
inc
cld
fnsave
ret
and
dec
and
xchg
movsb
pop
test
add
cwtl
rorb
cmp
xlat
mov
cmp
cmpsl
or
or
sbb
sub
adc
xchg
gs
xor
outsl
imul
ficomps
lcall
shl
js
lods
loopne
lods
fwait
add
enter
mov
pop
mulb
iret
mov
xor
leave
push
lahf
in
mov
imul
pop
sti
push
stos
pop
xor
idiv
push
mov
mov
clc
jge
pop
sbb
cmpb
jbe
lret
call
mov
outsl
mov
test
into
add
gs
jo
adc
enter
orb
fisttpl
cltd
fsubr
pop
or
lahf
mov
xchg
enter
cld
inc
inc
dec
lock
inc
mov
mov
imul
aad
mov
lea
iret
push
mov
adc
int
sbb
mov
dec
scas
cltd
push
push
stc
iret
lock
cmpsb
jmp
pop
dec
mov
cmp
bound
sbb
push
loope
cld
testl
jne
jb
in
jge
sbb
lret
imul
sub
ret
adc
jmp
stos
sub
or
into
push
pop
movsb
clc
dec
sbb
mov
mov
lock
xchg
add
inc
ret
mov
sbb
iret
dec
jmp
rcrl
jns
xchg
xor
sub
mov
mov
sbb
add
stos
ss
pop
in
inc
mov
and
mov
mov
push
sbb
push
daa
jg
leave
mov
pop
push
in
addr16
cld
iret
mov
sbb
xchg
in
nop
or
jns
cmp
inc
sbb
dec
insl
aas
adc
mov
xor
out
jns
pop
or
cltd
pop
aad
mov
sti
pop
aam
fmuls
mov
sub
mov
loop
xchg
push
pop
or
shlb
cmp
inc
pushf
adc
sbb
fmuls
ficoms
sti
loop
mov
ja
bound
push
iret
outsl
andl
sbbl
pop
sbb
pop
jg
sbb
push
dec
mov
in
clc
call
jmp
and
les
sub
xor
bound
sbb
inc
aad
dec
push
sub
and
fisttpl
dec
repnz
fisubrs
pusha
out
iret
add
and
clc
mov
ror
ds
mov
mov
add
rclb
mov
test
mov
aad
lods
adc
or
push
sub
and
or
decb
ljmp
add
cli
scas
data16
fwait
jmp
sub
cmp
xchg
addr16
imulb
mov
movsl
push
adc
xor
mov
insb
dec
mov
test
les
pop
dec
sub
xchg
clc
sub
sbb
push
xchg
lock
clc
pop
push
aas
jb
pusha
push
ret
push
in
lcall
xor
cmp
ds
xchg
cmp
fdivl
xlat
mov
ret
roll
scas
pusha
stos
gs
pop
sub
push
fsubr
loop
lcall
cmp
lahf
inc
mov
jl
mov
aad
leave
hlt
jge
in
aam
sarb
mov
and
lahf
loop
int3
insb
and
pop
rcll
ror
lock
repnz
aad
sub
lret
lock
cmp
fcoml
push
or
inc
jg
add
sbbb
push
shll
aaa
xor
mov
int3
adc
xor
and
and
cs
cli
sahf
jno
jb
test
lea
lods
adc
jb
pushf
pushf
pop
cmp
out
lret
jmp
sahf
sub
xlat
xor
rclb
jb
push
hlt
add
xor
jecxz
push
mov
out
mov
aas
sub
mov
push
fdivl
xchg
inc
lods
fildl
insl
mov
mov
xchg
mov
call
add
add
xor
sub
popf
frstor
cmpb
or
add
pushf
pop
ds
jmp
dec
es
mov
xchg
push
sub
mov
or
inc
push
add
adc
xor
and
inc
inc
lods
mov
jnp
mov
or
ds
lods
add
clc
movsl
imul
pop
movsb
lret
adc
jnp
or
xor
mov
inc
dec
push
lea
fsubs
imul
ds
std
push
pop
in
int3
fcoml
mov
and
cmpsl
xor
cmp
push
repnz
cmp
scas
clc
add
mov
inc
pop
add
sahf
imul
js
mov
mov
inc
fmuls
xor
mov
icebp
mov
ja
dec
into
mov
mov
jg
fstps
xchg
push
or
mov
xlat
pop
ds
addl
pop
jae
sbb
pushf
movsb
sub
push
stos
loope
xchg
xor
xor
into
clc
bound
fs
xchg
ret
out
pop
mov
inc
mov
sti
adc
and
or
push
sub
jmp
jle
out
cmpsl
lock
cmp
sbb
incb
pop
and
sbb
adc
mov
cmp
or
xor
inc
mov
mov
imul
mov
fimull
push
add
fiadds
je
xor
dec
and
fnstenv
scas
add
pop
pushf
int
loopne
adc
inc
cmp
das
in
int3
lds
test
add
mov
cmp
pop
mov
mov
aad
xchg
outsb
pop
inc
gs
enter
xor
xor
out
fimull
ret
imul
aaa
test
inc
aaa
xorl
scas
push
rcr
leave
out
add
out
nop
je
xchg
repz
jecxz
sti
mov
pusha
mov
sti
ficoms
pop
ljmp
push
test
dec
jge
mov
pushf
les
push
lock
mov
andl
xor
dec
ds
lahf
clc
push
xor
mov
mov
lods
sbbl
out
sub
fwait
stos
jge
mov
ljmp
push
sub
enter
mov
lods
fstps
jg
movb
lahf
pop
dec
sti
lret
sbb
xor
add
pushf
aas
iret
and
shlb
lcall
lods
mov
jae
and
iret
inc
pushf
cmpsb
cmpsl
xchg
mov
addl
repnz
imul
add
add
popf
push
imul
cmp
or
lods
push
mov
jb
sub
xlat
cmpb
dec
mov
mov
test
stc
clc
pusha
movsl
stc
and
lods
xchg
pop
jne
xor
dec
and
dec
push
roll
jae
xchg
sub
lods
mov
and
xor
fistpll
inc
enter
fcmovbe
movsl
insb
mov
adc
push
les
inc
aaa
mov
nop
ret
sub
aaa
push
and
pop
fstpl
inc
xor
jg
sub
jecxz
push
cmp
xchg
in
mov
sti
push
add
out
inc
out
cmpsl
subl
stos
adc
neg
inc
mov
dec
fisttpl
pop
inc
xlat
xchg
pop
dec
xchg
dec
push
lods
jne
or
xor
pop
mov
loope
push
ss
mov
imul
mov
and
push
outsb
mov
push
push
pop
cli
and
and
xchg
shll
outsb
sbb
adc
sbb
pop
mov
cmpb
push
es
mov
movzwl
mulb
ds
sbb
sbbl
fcmove
aad
sub
es
out
jl
mov
push
inc
jo
jbe
cmp
stc
jbe
push
mov
adc
insb
dec
push
jg
popf
lods
cmp
jg
out
sahf
mov
scas
add
mov
jne
int3
push
fdivrl
ret
loope,pn
jns
fcoms
add
sbb
pop
xor
nop
pop
das
adcl
mov
add
inc
push
add
and
mov
xor
lods
push
icebp
sarb
push
lcall
add
inc
mov
pop
stos
pop
mov
mov
std
sbb
in
inc
bound
cmpsb
xor
lcall
mov
add
inc
imul
xchg
jb
mov
pop
into
mov
popf
testl
shrl
pop
xor
dec
jo,pn
je
cmc
and
mov
cmp
test
ljmp
jecxz
xor
add
add
cld
test
mov
stos
jl
cmp
ret
sub
adc
test
dec
mov
pop
lds
sti
add
mov
push
sti
pop
das
fcomp
nop
mov
fisubrl
push
push
adc
mov
lock
test
mov
fnstsw
loope
mov
aaa
pop
ds
iret
idiv
adc
idivl
add
stc
jp
ficoms
in
popf
push
add
imul
and
mov
xor
ja
mov
mov
inc
out
out
lret
pop
imul
cmpsl
imull
add
mov
incb
mov
cmp
sbb
adc
add
or
pop
dec
mov
inc
popa
inc
adc
fcmovnu
je
pavgw
xor
sahf
jb
ret
mov
jl
jns
les
add
xor
popf
ret
roll
aam
stos
cmpsb
push
jle
ret
or
iret
xor
mov
lds
mov
aam
sub
push
push
insb
sub
ss
shll
rcl
clc
adc
mov
dec
xor
cld
xlat
cmp
mov
fucomi
leave
pop
mov
jbe
push
adc
cmpsl
insl
sbb
adc
movsl
fdivr
jge
push
fldt
jb
setg
add
popa
inc
or
sbb
cld
mov
out
test
xor
mov
inc
xor
pop
mov
sbb
mov
sub
cmp
or
cld
adc
inc
mov
test
out
ss
mov
inc
cld
xlat
xchg
mov
sar
xorl
movsb
out
cmp
ds
jg
daa
pushf
out
lea
jbe
sub
add
dec
cmp
cltd
bound
dec
in
adc
mov
mov
ja
into
sub
xchg
stos
stc
mov
cld
or
sbb
push
stos
lret
mov
push
js
enter
loope
xchg
mov
notl
dec
pop
push
xchg
jo
aaa
in
mov
add
xchg
ljmp
add
subl
ficoms
decb
dec
xchg
and
into
mov
inc
cmp
mov
inc
aad
cltd
xchg
mov
mov
orb
stos
jne
jbe
inc
loop
insb
lahf
ds
mov
fwait
stos
mov
mov
mov
ljmp
xchg
insl
dec
aaa
lahf
call
add
sub
sti
out
in
pop
xchg
inc
mov
ret
push
daa
daa
fs
fwait
add
sub
cld
andb
push
repnz
and
ds
xchg
mov
rcr
adc
jecxz
in
outsb
inc
push
mov
ret
fisubrs
je
push
jmp
fidivs
ljmp
cmpsl
lock
pop
xchg
pushf
pop
out
mov
jmp
pop
fs
pop
ss
test
mov
sbb
sub
mov
js
ljmp
push
and
in
mov
std
lock
or
push
es
jne
sbb
pop
sbb
sbb
sbb
out
lods
mov
insb
mov
add
mov
cmc
mov
decb
jp
cmpsb
cmp
xchg
stc
ljmp
call
dec
mov
jbe
push
cmpsb
les
jno
dec
mov
popa
outsb
pushf
in
mov
push
icebp
jecxz
sub
in
cvtdq2ps
and
cli
push
mov
sbb
outsb
mov
pop
adc
aam
xchg
je
xor
xor
fisubl
andb
fwait
lds
loopne
daa
jl
test
mov
jmp
in
pop
xlat
movsl
pop
test
mov
sbb
xchg
cs
and
xor
jg
xlat
loope
loopne
cmp
in
lock
fsubrs
sahf
out
pop
mov
push
jo
mov
add
mov
xor
call
out
mov
xchg
std
add
imul
or
out
ja
cmp
movb
or
mov
inc
dec
lea
or
mov
jg
divl
jl
mov
and
addr16
mov
and
inc
enter
push
cmpsb
push
out
sbb
jg
mov
loop
xlat
and
jnp
push
mov
stc
mov
ret
cs
jbe
das
xchg
out
jb
cltd
adc
popf
aaa
movsb
adc
fmull
and
xchg
push
and
push
lds
xchg
rorb
adc
out
gs
fidivrl
inc
push
push
fcmovnbe
fnstsw
or
cli
int
cmp
ds
mov
xchg
or
sbb
or
sub
and
push
leave
mov
dec
push
iret
fsubr
xchg
jns
push
nop
enter
cld
rcll
dec
xchg
xchg
inc
or
loope
mov
icebp
test
mov
inc
xchg
pop
rcrb
push
mov
push
divl
push
pop
ret
adc
jns
loop
cmc
pop
push
aas
cmp
push
cld
add
mov
xor
xor
push
in
mov
lock
leave
lret
add
test
or
popa
ja
inc
xchg
pop
in
sub
xor
enter
pop
mov
xor
mov
int3
out
and
inc
mov
pusha
xor
int3
sbb
movsl
jecxz
sub
aas
mov
push
lods
sbbb
mov
pop
rsm
jb
addl
addr16
pop
xor
and
out
cmp
mov
or
decl
popf
mov
xchg
sbb
clc
lar
orl
add
imul
push
xchg
xor
and
js
movsl
addr16
js
or
pop
loopne
mov
sub
in
mov
fs
inc
fwait
hlt
dec
jp
sbb
mov
in
lods
ljmp
fadds
mov
xchg
les
or
jmp
xchg
fsubl
xor
les
mov
ret
and
test
nop
loope
push
mov
shrl
js
jp
mov
xchg
dec
loop
addr16
xchg
add
outsl
xor
add
lret
and
dec
or
pop
mov
mov
push
inc
loop
xor
dec
in
jl
xchg
mov
stos
rclb
sbb
mov
sbb
popa
out
lock
mov
jp
mov
jnp
jge
outsl
ljmp
xor
stc
jmp
in
out
xor
cmp
int3
scas
mov
aad
lods
add
icebp
mov
mov
jmp
or
sub
lds
mov
daa
sarb
inc
or
jp
lds
push
lahf
mov
ljmp
and
mov
dec
popa
inc
decl
add
mov
fidivrs
popf
cli
add
jnp
xorl
sub
imul
fsubs
push
iret
das
mull
push
out
mov
into
ljmp
mov
movsb
mov
push
in
hlt
sub
push
xchg
xchg
rcll
sti
stos
push
add
int3
ds
mov
jbe
xchg
lea
repnz
cmc
divl
lock
cwtl
aas
cmp
test
cmpsb
idivb
add
cmp
push
cmpsl
push
or
xor
mov
mov
push
notl
push
mov
cltd
nop
andb
adc
xchg
cmp
jg
cmp
adc
int3
pop
mov
push
xor
rclw
out
pop
iret
popf
or
shl
push
insl
lea
cmp
mov
stos
mov
xor
mov
lock
dec
mov
fnstcw
xchg
sbb
call
pop
cli
pusha
popa
test
mov
cmp
in
cmpsb
pop
scas
push
gs
jmp
cmp
ds
jge
fwait
pop
pop
add
idivb
mov
fwait
pusha
jp
push
jp
cli
jle
int
mov
add
cmp
in
shll
fistpl
cmp
in
lret
jecxz
jmp
push
dec
jnp
jne
fs
jb
and
lods
or
mov
lock
mov
les
mov
mov
push
jge
jo
add
out
sub
sbb
sahf
ret
add
xchg
xchg
outsl
xor
adc
cmp
sbb
lret
pop
push
filds
mov
ss
sub
sbb
xor
cmpsb
push
mov
lcall
mov
lret
cli
shrb
pop
in
xor
xor
outsl
in
negb
das
sub
cli
stos
sbb
mov
cs
fidivl
in
inc
enter
orb
push
push
in
inc
or
or
and
xlat
push
loope
xor
rolb
popa
cmp
sbb
pop
adcb
lret
sbb
int3
jge
xchg
push
js
dec
inc
outsb
lods
lds
xchg
push
mov
mov
pusha
int
or
xchg
sbb
scas
push
fwait
add
ss
push
sbb
mov
push
dec
pop
daa
sarl
jo
inc
cltd
cltd
gs
pop
or
inc
pusha
lret
jb
mov
mov
mov
cmpsl
aaa
mov
jmp
insl
addr16
std
icebp
movsl
mov
daa
push
mov
outsb
mov
add
sahf
fnsave
sbb
bound
shll
mov
movb
sub
cmp
in
push
pop
xchg
xchg
daa
cli
pop
test
pop
push
xor
pop
pop
fsubl
adc
dec
xorb
jae
xchg
fwait
push
and
push
fwait
stc
fisttpll
std
out
mov
jmp
insb
add
out
xor
nop
jg
int
pop
mov
mov
mov
or
pop
cmp
ljmp
xchg
pop
add
mov
mov
insl
push
mov
xor
pushfw
out
dec
push
movsl
inc
test
mov
sbb
pushf
ljmp
jl
xor
sub
xor
arpl
or
popf
xchg
shll
decb
adc
sbb
mov
dec
mov
mov
jbe
xchg
out
scas
xchg
inc
or
lock
fcomps
test
sbb
repnz
nop
sarb
mov
fisubrl
dec
ss
enter
test
pop
loopne
mov
lahf
filds
pop
fnstcw
call
sbb
insb
aad
or
lods
mov
in
scas
inc
int
jbe
test
push
mov
mov
cmp
scas
mov
pop
lds
sub
sub
loopne
adc
dec
cmp
jp
xor
popa
outsb
cmpsb
loopne
imul
gs
int
shl
pop
sub
lock
push
rorb
push
xchg
test
aad
mov
and
mov
dec
aad
sahf
cli
dec
cmp
ja
xchg
fidivrl
mov
popf
pop
mov
push
mov
jo
dec
je
mov
adc
das
in
sbb
jl
or
in
or
adc
xchg
lods
imul
rorl
test
xchg
jge
pop
sbbb
mov
push
dec
aam
sub
add
ljmp
adc
imul
pop
nop
xor
cs
js
cmp
xchg
sub
add
sarb
cmp
and
adc
dec
sbb
sti
hlt
dec
cmp
shrl
lods
xor
jecxz
mov
sub
cmp
out
lret
lcall
or
aam
push
in
repnz
dec
addr16
mov
pop
mull
repnz
jnp
aaa
aad
not
fists
push
and
add
sbb
inc
dec
dec
sub
mov
popf
mov
stos
cs
jns
nop
sub
add
add
sar
dec
in
into
and
xchg
jnp
mov
xor
pop
lret
or
mov
pop
dec
out
mov
outsl
enter
sub
out
xor
hlt
push
movsb
loopne
fistpl
popf
cmp
out
sbb
jge
ret
insb
pop
mov
stc
mov
inc
xchg
cmpsl
insb
ljmp
jle
inc
adc
xchg
mov
or
sub
sub
loope
pop
in
test
clc
sbb
faddl
mov
repz
clc
push
or
ret
xchg
mov
and
mov
in
in
xlat
sub
pop
mov
repnz
add
mov
xchg
inc
repz
lods
mov
ljmp
repnz
dec
adc
pusha
lcall
lock
gs
push
adc
notb
push
xchg
jg
mov
in
pop
dec
lret
paddd
mov
xor
cld
fldcw
mov
scas
jmp
int3
push
fprem1
shrl
sbb
faddl
shll
jae
insl
mov
insb
xor
test
and
mov
and
mov
dec
iret
cld
xor
pop
xor
xor
dec
jno
push
into
inc
gs
dec
mov
and
ret
test
dec
add
sub
inc
cmp
enter
xchg
pop
ss
push
adc
ffree
ljmp
nop
lret
jb
push
or
xor
jl
fisubrs
inc
sti
insl
dec
out
dec
add
jg
push
adc
mov
mov
mov
and
and
lock
insl
lods
icebp
lret
nop
lret
cltd
or
adc
push
test
or
divb
dec
fs
lret
and
out
adc
xor
fstpl
mov
xchg
mov
mov
out
or
mov
sub
fcompl
add
push
test
out
std
fdivrs
xor
jle
pop
inc
mov
adc
mov
fstl
insl
mov
push
pause
cmp
mov
adc
std
sbb
jl
jl
cmova
in
sti
cld
out
jg
aam
fistpl
fwait
dec
pop
jecxz
jno
daa
sub
fisttps
xlat
xlat
std
xor
inc
je
push
jl
mov
test
add
pop
jp
sbb
aas
mov
cmp
or
inc
cmp
fwait
push
daa
fcoms
push
rorl
push
sub
inc
mov
dec
test
xchg
rol
xchg
test
mov
sar
data16
jecxz
stc
jp
cli
out
leave
xor
movsb
push
test
inc
or
xchg
loopne
sub
inc
xor
movsl
fsubrs
inc
adc
push
int
ja
jge
and
repnz
push
negb
nop
mov
dec
xor
int
test
sub
cld
rclb
mov
or
cld
pop
adc
daa
jl
dec
pusha
out
fs
ret
pop
rolb
mov
pop
push
lcall
jmp
out
add
sbb
in
movsb
xchg
dec
cmpsl
and
jns
jp
jo
ds
movsl
cmpsb
in
in
loope
sarb
aas
sub
cmp
sahf
sub
lock
icebp
or
jbe
lcall
lahf
fwait
inc
xor
into
test
clc
and
cmc
fwait
jecxz
adc
movsl
sti
data16
jns
outsb
and
mov
popa
sarl
sarl
imul
icebp
out
fbld
outsl
jbe
and
mov
test
pusha
lods
repnz
add
lret
inc
loopne
push
xor
je
into
dec
leave
shlb
loopne
pop
mov
lea
and
xor
mov
loop
scas
and
sub
cltd
addl
cmpsb
jmp
popa
dec
mov
imul
mov
sarl
adc
mov
rclb
xchg
sub
faddl
jbe
dec
xor
or
inc
test
jo
outsl
test
and
xchg
insl
mov
adc
xor
fcomip
and
add
xchg
push
and
mov
rcrb
or
popf
dec
loope
daa
sbb
xchg
mov
adc
xchg
imul
mov
dec
jnp
push
mov
mov
lods
push
jb
mov
decl
test
test
fisubs
xor
bnd
fimuls
fldenv
pop
xchg
push
lea
and
push
sub
jne
dec
pop
or
lcall
pop
sbb
jo
ss
pushf
popa
sbb
or
aas
rcrl
adcl
bound
outsl
jnp
dec
pop
jmp
loope
sarl
into
cmc
mov
imul
dec
dec
push
sti
sub
dec
sub
ljmp
popa
pop
mov
sbb
push
out
fnsave
icebp
sti
pop
xor
or
add
cmp
mov
xchg
sti
push
test
out
xchg
sarb
pop
inc
clc
jbe
out
jmp
jl
daa
jge
or
push
out
xor
inc
add
pusha
dec
mov
iret
in
js
mov
ret
lds
fisubrl
xor
dec
data16
es
cmp
into
shlb
cmc
nop
movsb
push
in
popa
dec
into
add
and
mov
imul
jl
sub
mov
push
in
imul
pop
mov
push
sub
subl
fmuls
cwtl
mov
popf
jno
sbb
ret
add
hlt
mov
inc
push
daa
xchg
sub
fmuls
addr16
xor
fistps
lret
push
lret
mov
dec
xchg
ret
mov
cmc
sbb
sub
mov
xor
lods
xchg
push
divb
jecxz
push
pop
push
rcll
push
sbb
lods
adc
sub
aas
js
mov
mov
imul
lret
sub
and
out
push
fadds
cmp
mov
pop
iret
xorl
clc
fistps
sub
mov
stc
push
mov
dec
jecxz
push
lret
pop
fldcw
xor
fmull
addl
cltd
out
and
dec
xor
mov
push
mov
repnz
cld
mov
sub
leave
sti
jo
mov
les
mov
mov
jbe
push
pop
and
pushf
pushf
out
sub
push
int3
xor
shrb
jmp
pop
mov
lret
mov
cmp
div
lds
shr
push
push
jne
pop
leave
rcrb
push
sti
jle
repz
dec
or
adc
pop
test
in
pop
jl
adc
sub
std
push
push
jg
fstpl
mov
ljmp
cmpsb
and
pop
mov
or
das
imul
mov
inc
inc
ret
negb
clc
fxch
dec
daa
sti
add
mov
enter
or
mov
in
jns
push
cs
ds
popa
cmp
mov
dec
mov
into
cld
fstl
enter
push
cmp
loope
jecxz
xor
xchg
mov
push
stc
cmp
adc
pushf
jbe
lock
js
sbb
sarb
push
inc
test
adc
stc
add
mov
lds
leave
sub
cvttps2pi
and
inc
pop
sahf
movb
pushf
pop
xchg
mov
std
cmc
xor
adc
lret
push
nop
ds
and
aaa
cmp
cld
add
insl
or
sub
lahf
roll
in
test
fwait
pop
nop
repz
shll
add
and
mov
mov
jle
push
notb
mov
daa
bound
mov
adc
lahf
stc
xchg
in
pop
enter
loopne
test
mov
pop
dec
sub
inc
sub
jnp
add
fldl
sub
ljmp
outsl
jp
xchg
sub
or
aam
push
mov
xor
push
insb
shll
mov
cmp
popf
cmp
hlt
lock
arpl
or
pop
iret
enter
sub
call
in
out
call
pop
decl
inc
movsb
dec
daa
or
loopne
add
dec
inc
jnp
dec
cwtl
xchg
pop
xor
push
cld
add
arpl
mov
mov
inc
mov
mov
inc
pop
daa
inc
lahf
pop
and
and
lds
fisubrs
fstps
xchg
mov
sub
les
pop
stc
shlb
mov
mov
pop
add
insb
sub
cs
dec
repz
xchg
mov
cmp
mov
push
and
aas
movsl
and
jp
loope
dec
movsl
inc
sti
nop
jo
btr
jmp
hlt
outsb
repz
push
push
jl
popa
or
int3
js
or
jns
mov
lock
cltd
dec
mov
leave
out
mov
adc
aad
aam
and
mov
shl
ljmp
push
add
jns
mov
mov
int
inc
mov
fidivrl
lods
lds
insb
out
mov
mov
mov
jbe
in
xchg
fwait
sbb
mov
test
inc
lea
or
vcomisd
xchg
and
out
fidivrl
lods
or
xchg
xchg
pop
dec
cmpsl
xchg
sti
out
mov
xorb
dec
scas
inc
cmp
sub
dec
mov
pop
cmp
cmp
and
ret
sub
cmpsb
lock
pop
scas
jno
xchg
sub
add
jb
dec
js
into
add
cmp
sub
or
jg
ja
scas
mov
mov
mov
sub
mov
rclb
or
sub
jge
xor
push
adc
cmp
insl
dec
icebp
pop
dec
add
xor
pop
and
pop
leave
movsl
jle
jle
fs
sbb
jp
dec
hlt
xchg
mov
push
scas
pop
mov
pop
stos
adc
int
and
or
mov
rcll
inc
dec
and
int3
inc
xchg
jmp
sbb
notb
pop
das
mov
adc
les
add
mov
out
sbb
mov
inc
mov
or
push
in
test
in
jg
lahf
insl
xor
sbb
popa
push
iret
fmull
sub
push
pop
fcmovne
add
mov
sbbb
add
mov
pop
or
cmp
ja
call
iret
xchg
cmpsb
adc
xlat
mov
sub
sub
icebp
pop
jne
stos
mov
pop
lock
loope
cltd
mov
jge
cld
add
mov
test
mov
es
push
sub
inc
cmpsl
xchg
rcrl
dec
dec
adc
xchg
mov
shlb
dec
mov
mov
dec
lea
xor
in
mov
sbb
movl
repz
aas
in
lea
pop
out
gs
pop
add
or
or
jbe
lds
cmpsl
cltd
inc
fnstcw
shlb
aam
mov
stc
pop
rcrl
add
loopne
xchg
adc
cmp
xchg
repz
jno
jl
adc
push
jle
insl
inc
js
dec
fcomip
daa
xor
popf
in
out
out
mov
adc
xor
loope
mov
pop
in
nop
stos
sbb
out
jno
adc
and
add
aaa
mov
dec
push
or
sub
and
sub
jg
dec
inc
xchg
iret
ljmp
ljmp
sub
adc
or
or
sahf
sub
lahf
pop
adc
jmp
aaa
and
popf
gs
cwtl
mov
mov
xchg
push
jnp
sbb
inc
inc
lret
int
pop
sbb
pusha
lods
cmpsb
pusha
inc
ret
jl
dec
insb
xchg
lock
jg
xchg
or
inc
pop
iret
ljmp
mov
fbstp
sbb
loope
mov
mov
cmp
pop
fnstsw
inc
push
call
mov
lret
xor
or
addr16
mov
aaa
test
lret
xchg
mov
stc
jmp
je
cmp
insb
in
ljmp
mov
jecxz
adc
inc
jnp
lcall
mov
lret
pop
stos
xor
push
mov
jle
mov
loope
fisttps
or
jb
mov
insl
jg
xchg
mov
lock
js
xchg
adc
mov
ret
push
ja
fsts
xor
in
pop
lods
xchg
call
fisubrl
and
jge
mov
stc
mov
push
fldcw
daa
std
cmp
xrelease
daa
mov
outsl
jb
in
loop
sahf
insb
les
int
mov
dec
arpl
lret
push
in
sub
stos
cmp
mov
jae
jb
imul
pop
jl
movsb
push
sub
stc
pop
fdivs
sub
rcll
nop
loop
adc
pavgw
push
and
fimuls
jecxz
call
cmp
push
stos
xchg
fs
mov
out
and
mov
out
call
cmpsb
mov
and
ja
pusha
push
test
or
push
pop
push
add
lods
push
push
mov
push
inc
push
pop
js
call
jns
adcb
mov
adc
mov
in
inc
hlt
into
adc
call
ret
sarb
sbb
jnp
inc
mov
pop
jns
and
ss
dec
fisttpll
insl
cmp
push
mov
sub
movsl
pop
mov
subb
mov
jg
out
push
cmp
jmp
and
ja
push
pop
fwait
or
jmp
movsl
pop
sbb
adc
inc
pop
lret
adc
fcmovb
adc
pop
lock
loope
ficompl
add
popf
sub
inc
pop
xchg
jp
inc
cwtl
jmp
jecxz
xorl
xor
and
fsqrt
aad
call
mov
ffree
subl
xlat
inc
fwait
cs
push
pop
mov
fbld
in
mov
lcall
xchg
addb
add
movsb
mov
fbld
dec
jecxz
outsl
test
outsl
int3
push
mov
ret
mov
cmpsl
cmc
cld
std
adc
movsb
fimull
ja
lods
lea
or
inc
lods
jmp
jbe
aad
sub
jb
ja
mov
jmp
sbb
jmp
and
cmp
xchg
std
repz
push
cmp
imul
adc
rorl
or
xlat
fs
test
pop
inc
xchg
popa
sti
insb
mov
in
enter
popa
or
cwtl
xchg
push
jbe
rcll
loop
jne
mov
push
mov
mov
adc
insl
cmpsl
pop
mov
cmc
pop
push
test
xor
jecxz
adc
or
jge
or
dec
fsubs
test
mov
pop
aad
xchg
xor
mov
dec
int3
pop
in
insb
cmp
sub
mov
jb
loopne
xor
int3
inc
xchg
mov
or
or
sbb
sbb
push
or
sbbl
pushf
mov
nop
or
mov
and
pop
or
sub
adc
adc
push
movsl
jp
dec
mov
imul
mov
out
inc
push
xor
rorb
xchg
pop
sbb
mov
insb
cld
mov
mov
push
xchg
movsl
into
mov
sub
lds
packuswb
adc
push
or
push
outsb
neg
xlat
xor
sub
mov
cmp
hlt
push
std
fimuls
mov
cltd
movsw
push
or
gs
push
rcr
sub
dec
sbb
cltd
add
cmpsb
ljmp
stos
leave
push
ljmp
faddl
dec
cmp
fists
inc
rcrb
xor
insb
leave
sub
xchg
dec
scas
repnz
xor
test
fsubrl
fmull
mov
add
ret
ret
lret
aas
mov
loop
lret
scas
das
pop
loopne
gs
out
test
xor
lea
aad
fsubrs
es
fstps
rcl
jnp
push
and
jno
and
jp
das
in
mov
dec
outsl
mov
dec
lahf
aas
fs
faddl
scas
aas
sbb
adc
mov
xor
sub
fadd
mov
daa
rcrb
sahf
or
scas
aas
lea
fwait
adc
cmp
push
int3
hlt
cmp
pop
mov
es
push
cmp
addb
lods
leave
pop
sarl
dec
jnp
sub
jmp
std
dec
xor
cli
cld
jl
and
pop
scas
jle
mov
fnstsw
xlat
in
imul
inc
xchg
stc
cmp
mov
lahf
jmp
push
ja
scas
adc
sub
jbe
or
add
sahf
adc
inc
out
xor
mov
ja
sub
xlat
add
inc
mov
rorb
nop
xchg
mov
xor
sbb
mov
and
lcall
xchg
adc
adc
out
cwtl
pop
aas
or
in
ljmp
add
jno
adc
sbb
lcall
xchg
cwtl
push
and
add
ja
cmp
xchg
hlt
or
adc
dec
cld
cli
push
push
fcoml
out
mov
sbb
mov
jbe
lods
cmp
and
push
or
xchg
sti
gs
mov
clc
push
and
jmp
daa
out
ja
stos
xchg
xchg
outsb
scas
jge
push
inc
inc
push
push
leave
push
cmpl
shl
fisttpl
add
incb
movl
repnz
fsubl
and
pop
enter
add
mov
add
dec
lock
push
adc
in
repz
cmp
pop
mov
mov
lods
pop
pop
push
inc
loopne
in
jnp
mov
or
adc
dec
in
mov
in
rorb
jle
pop
pop
insb
bound
scas
inc
shll
mov
cmp
jo
aad
sbb
add
cmp
jo
xchg
into
testl
push
orl
pop
mov
into
mov
and
xchg
cmp
jmp
mov
inc
bnd
scas
cmp
cltd
xor
icebp
mov
ret
scas
stos
sbb
sarl
pop
xor
cmp
shlb
or
pushf
scas
lret
pop
cwtl
xor
test
mov
loope
das
push
movb
daa
sti
dec
rcrb
and
pop
mov
adc
dec
aam
sub
inc
mov
sub
popf
mov
cli
out
push
jle
inc
pop
adc
mov
in
jb
iret
insb
mov
sbbl
popf
lret
fcomps
xor
notl
jae
add
imul
mov
and
pop
lret
test
xchg
out
push
rcll
pop
dec
lahf
cmc
mov
ja
xchg
push
pop
jmp
add
movsl
pop
add
sbb
xchg
xor
mov
ficomps
out
enter
dec
mov
xchg
jbe
aad
xlat
xchg
nop
ret
in
add
push
mov
adc
jg
scas
or
pop
xor
sub
cmp
dec
inc
pop
pop
inc
and
mov
xor
mov
aad
push
push
scas
shlb
mov
cmpsb
test
push
in
stos
sub
jg
es
push
xchg
sbb
mov
sub
repz
mov
xlat
dec
sub
mov
push
xchg
nop
call
test
jmp
xor
stos
jmp
arpl
lahf
mov
mov
or
xor
out
sbb
sbb
mov
adc
pop
and
leave
les
movb
test
insb
mov
inc
mov
mov
xlat
inc
mov
add
adc
lret
add
arpl
int
inc
cmpsl
and
daa
cmp
out
dec
or
je
lods
jno
xor
fs
out
cwtl
popa
shll
movb
and
bound
pushf
xor
mov
das
imul
dec
jge
sub
shl
jno
dec
xor
push
fidivs
jne
cwtl
lret
cmp
data16
es
loopne
lock
subb
jae
std
test
push
mov
in
mov
nop
ror
xor
mov
cs
cmp
add
ljmp
jl
mov
pop
leave
sbb
imul
mov
jp
inc
insb
ds
jnp
xchg
cltd
outsl
add
lcall
mov
mov
push
stos
movsb
mov
int
call
mov
mov
pushf
mov
xchg
jae
mov
mov
cmp
adc
cs
repnz
xchg
mov
jno
jne
adc
int3
and
popa
hlt
repnz
outsl
sub
or
xchg
xchg
inc
je
and
leave
sub
mov
insl
scas
ret
fldenv
sbb
ja
test
mov
mov
fwait
or
mov
or
add
or
ret
push
cmp
sub
xchg
jbe
lock
dec
cmc
fsub
mov
inc
in
popf
adc
loopne
into
adc
sbb
or
int
push
out
mov
stos
xlat
pop
jmp
jae
fisttps
das
clc
push
xor
test
sar
arpl
add
imulb
sti
movsb
sub
jecxz
inc
xor
sbb
enter
gs
lods
add
xchg
inc
rcll
adc
sahf
pop
sub
jnp
adc
xchg
out
inc
push
xor
fnstenv
mov
aam
or
movsb
mov
pop
mov
jg
pop
lret
ret
xlat
ret
push
into
nop
pop
lret
mov
jns
int3
notl
push
fcoms
inc
pop
out
cmpb
jp
subb
mov
icebp
mov
lret
leave
clc
dec
fcom
adc
xor
xchg
xor
mov
int3
mov
mov
adc
imul
sbb
loope
cmp
ljmp
inc
in
repnz
jg
pop
rep
cmp
int3
push
cmp
inc
idiv
movsl
push
xchg
leave
push
xorb
push
shrl
out
imull
lods
call
pmaddwd
aad
xorb
movsl
push
or
dec
in
xchg
dec
nop
in
or
lea
les
ret
jmp
jge
dec
inc
sub
mov
cmp
das
lods
add
scas
jne
inc
xchg
stos
xchg
push
and
pop
mul
adc
xor
int3
sub
dec
mov
mov
pop
mov
pop
in
cmc
push
cmc
and
mov
es
mov
mov
inc
or
jnp
out
dec
xor
sarl
bound
fstpl
cmp
xchg
and
mov
popa
and
dec
dec
es
jg
lods
dec
lcall
sub
mov
repnz
xchg
aam
cmpsl
push
inc
sbb
lahf
jae
xchg
and
gs
into
pop
or
fs
xchg
sub
bound
adc
std
or
cwtl
mov
dec
jne
sbb
mov
insb
push
mov
add
insl
adc
cld
movsb
push
jle
mov
jns
ficoml
sbb
sub
mov
in
decl
cs
aam
or
mov
lcall
popa
ljmp
aaa
mov
rcll
cmp
aaa
pop
xor
mov
adc
test
fstl
aam
insb
push
xlat
test
mov
test
iret
mov
scas
lock
and
inc
pop
xor
and
in
lods
sbb
cmp
jp
cmc
and
popa
ss
out
pusha
cmp
in
dec
xor
hlt
jne
rclb
mov
push
pop
leave
pop
mov
sti
int3
cmpsl
das
and
sub
int
mov
fcom
scas
pusha
out
hlt
dec
pop
jge
cs
mov
add
mov
xor
pushf
mov
mov
xchg
scas
out
js
mov
mov
movsb
dec
mov
dec
jge
cltd
insb
dec
and
and
push
xchg
faddl
insb
lahf
repz
rclb
pop
test
test
add
shl
jle
popf
mov
data16
dec
ss
mov
jne
mov
inc
jle
or
loope
lcall
cltd
icebp
sub
pop
das
push
ds
insl
adc
pop
jmp
xchg
test
inc
aad
addr16
mov
jo
inc
adc
mov
pop
ja
xchg
loopne
decb
hlt
jle
dec
add
add
mov
bound
cwtl
fchs
cs
cltd
inc
push
mov
in
push
jmp
push
test
cwtl
nop
neg
in
icebp
push
sub
testl
sub
loopne
adc
insl
cmpsl
arpl
gs
outsb
stos
inc
movsl
jae
bound
sub
sub
dec
out
inc
test
aaa
loopne
cmp
jg
add
mov
out
nop
cs
out
and
mov
adc
hlt
mov
shll
and
movsl
repnz
ret
dec
sbb
or
ss
mov
fnsave
cmp
bound
sbb
mov
lea
negl
pushf
xchg
scas
insb
enter
inc
cmp
mov
into
dec
mov
or
xlat
jmp
or
pop
mov
xor
sar
out
mov
sti
aas
push
fiaddl
mov
imul
shr
rcrl
test
aas
icebp
insl
rcrl
xchg
scas
test
test
xlat
hlt
rcrl
xchg
sub
pop
pop
imul
out
stos
xchg
popfw
shll
cli
pop
add
popa
mov
rcl
jecxz
and
push
sbb
lcall
or
popf
fistl
mov
notb
mov
lds
cmc
dec
pop
jp
push
inc
scas
and
mov
dec
cmp
xchg
dec
adc
insb
ret
push
lahf
dec
and
addr16
inc
repnz
sub
lret
push
cmp
mov
stos
das
in
push
add
dec
add
into
mov
lock
add
mov
hlt
test
loopne
sahf
fbstp
mov
xor
test
mov
shll
arpl
push
lahf
add
loop
or
xchg
pop
xor
xlat
mov
or
into
cmp
pop
pop
inc
out
dec
jae
xlat
test
mov
sbb
add
dec
int
insl
incb
dec
es
adc
add
mov
cltd
aad
ret
mov
dec
popf
or
clc
lahf
or
inc
imul
mov
xor
lods
jmp
sbb
lret
repnz
loop
push
sub
dec
dec
sbb
jno
inc
pop
fwait
bound
xlat
or
stos
bound
lret
mov
dec
sbb
adc
sahf
cld
mov
dec
imul
and
cwtl
sbb
pushf
jg
imul
orb
mov
push
mov
fstpl
jmp
dec
cmpsb
push
adc
sarb
shrb
popa
jnp
test
fistpl
test
dec
jo
mov
and
lods
push
sub
mov
movsl
and
cs
push
add
mov
dec
sbb
clc
rcr
and
in
sbb
mov
ds
pop
sbb
mov
jne
mov
jecxz
or
xor
jmp
xor
mov
pop
inc
dec
fs
mov
xchg
leave
add
or
repz
nop
fldl2t
lahf
cmp
aam
pop
jmp
and
adc
or
push
push
jecxz
pop
xor
mov
xor
aad
sarl
push
mov
rcrb
mov
cwtl
gs
mov
loope
pop
sbb
ljmp
push
fiadds
adc
jns
mov
push
pop
ret
movsl
push
or
das
cmp
jp
pop
daa
pop
mov
arpl
pusha
ret
push
test
test
repz
lea
pop
mov
lock
sbbb
sub
or
or
jmp
pushf
xchg
mov
popf
rcrb
sti
arpl
incb
mov
cmp
pop
in
xchg
cmp
and
push
push
add
repz
mov
scas
sbb
rcll
mov
daa
popf
cmp
shlb
pop
ror
fsubrs
out
ds
subl
leave
inc
dec
xchg
or
cmp
xor
sbb
or
cld
push
cmp
push
sbb
push
xchg
inc
mov
nop
adc
dec
roll
pop
pushf
mov
dec
orb
cmp
das
jge
hlt
repnz
jo
lcall
mov
jb
or
sti
gs
adc
adc
aaa
add
inc
call
rcrb
mov
mov
repnz
push
or
dec
adc
xchg
std
or
push
out
mov
and
xlat
iret
sub
dec
mov
dec
cmc
ficoml
mov
call
cmp
shrl
ds
outsb
jno
aad
cmpsl
jg
push
push
xchg
out
jae
scas
ret
sti
loope
xchg
add
cwtl
cs
mov
addr16
sbb
orb
jnp
inc
test
sub
les
and
jae
sub
stos
and
adc
scas
push
cwtl
stc
xchg
addr16
mov
jno
inc
lahf
adc
insl
cltd
push
cli
sahf
into
repnz
loopne
ss
pop
xorb
adc
jg
xchg
push
dec
and
xor
mov
or
xbegin
lods
shll
mov
push
lock
das
and
xor
mov
inc
pushf
sbb
xchg
aam
mov
push
ds
repnz
jae
mov
push
pop
add
ja
icebp
add
out
ret
dec
jns
fimuls
add
pop
pop
push
loopne
into
pop
iret
pop
sub
push
cmp
and
add
shl
int
pop
sahf
mov
jnp
nop
data16
int
mov
ja
xchg
in
adc
cs
lret
clc
iret
mov
data16
xchg
inc
ror
cmpl
or
lds
lcall
sarb
mov
push
test
call
mov
xchg
idivb
add
fldenv
cmc
inc
scas
sbb
and
xor
add
cli
xor
sbb
shll
push
rcl
inc
clc
dec
std
fdivl
add
mov
xchg
adc
and
inc
sahf
xchg
or
es
push
xor
inc
pop
pop
mov
lock
adc
push
bound
in
repnz
addr16
sbb
mov
xor
les
call
fiaddl
sahf
test
movsl
test
dec
jbe
sub
mov
fwait
jae
test
push
outsb
xor
out
sbb
adc
mov
cmp
xor
push
cli
or
mov
negl
fwait
adc
in
cmp
ffree
and
int3
sbb
add
cwtl
mov
jecxz
setle
shl
adc
sbb
dec
mov
daa
dec
mov
or
in
outsb
or
adc
xor
mov
xor
addr16
mov
pop
dec
mov
mov
mov
adc
mov
call
in
fnstcw
addl
pop
xor
mov
jg
sti
hlt
xor
testl
rcrl
push
xchg
insl
cmp
insb
out
mov
int
mov
sahf
and
mov
xlat
ret
sbb
std
test
stc
std
shll
xor
daa
fstpt
shrb
mov
inc
loopne
lods
or
repz
xchg
add
or
out
orl
iret
pop
js
movsb
mov
stos
in
mov
fstp
mov
xchg
add
iret
and
xchg
pop
into
mov
clc
pop
stos
inc
push
pop
jnp
fldcw
push
mov
add
cs
ljmp
movsb
sahf
and
push
pushl
rolb
mov
mov
mov
mov
pop
push
dec
aad
mov
shrb
cmp
jae
and
xchg
jg
out
dec
jo
out
into
pop
sub
or
shrb
repnz
mov
xchg
imul
mov
popa
adc
push
push
mov
pop
cli
sbb
repnz
jb
mov
data16
mov
imul
adc
xor
or
rolb
dec
jmp
lret
mov
ud1
leave
add
pop
lcall
mov
push
scas
popf
stc
idivl
cmp
jle
inc
mov
jns
inc
or
rcrl
jae
or
jb
ficoml
pusha
lock
imul
sub
pushf
addr16
and
les
add
mov
nop
dec
inc
pushf
adc
sub
jmp
enter
push
stos
insb
pop
ret
sub
outsl
jmp
add
sbb
mov
negb
and
loopne
dec
lret
shll
sbb
inc
repz
jnp
sarb
jno
std
ret
in
push
jl
mov
mov
inc
jae
ret
xor
js
stc
xchg
ret
mov
adc
cmp
mov
jb
stc
sbb
sbb
das
push
fwait
xor
movsl
add
xor
sarl
jae
mov
xchg
cli
sub
xchg
sbb
hlt
mov
subb
pusha
adcb
mov
pop
arpl
sbb
push
test
push
sbb
test
push
add
add
cmp
xor
mov
sbb
scas
dec
fcomp
xchg
repnz
cltd
notl
add
cmp
pop
cs
out
inc
stos
xor
dec
fs
mov
mov
jmp
mov
push
push
adc
mov
sub
fsts
clc
jge
sub
aaa
inc
subl
shr
test
jns
into
add
mov
push
pop
xchg
push
xlat
cmpl
in
pop
lret
shlb
out
dec
mov
mov
push
outsb
mov
sbb
fadds
out
sbb
dec
inc
push
add
pop
cmp
dec
outsb
push
jo
push
jecxz
or
push
xchg
test
add
das
dec
adc
pop
out
testl
sbb
loop
mov
inc
push
test
nop
push
jb
pop
pop
push
xchg
mov
les
jg
fisttpll
test
mov
cltd
and
out
in
pop
jmp
lret
lcall
inc
mov
jnp
xor
or
push
int
test
sub
test
sub
push
mov
cmp
xorl
stos
push
push
leave
lret
in
cmpsb
adc
or
pop
call
jbe
xchg
push
add
test
sbb
adc
jae
add
test
dec
xor
pop
push
idivl
xor
add
nop
lret
imul
sahf
sarb
mov
and
push
movsb
test
enter
pop
add
cmpsb
into
test
adc
xor
js
mov
dec
push
sarl
mov
lock
dec
movsb
rcrl
mov
je
rcrb
jle
dec
xchg
adc
aam
xor
add
fistps
movsl
push
inc
test
and
outsl
lea
nop
mov
loop
sub
sub
inc
push
and
imul
push
pop
subl
test
lds
cld
jno
ret
movsb
xor
or
adc
adc
adc
faddp
in
mov
imul
mov
ja
inc
std
shr
push
insl
repz
push
adc
push
movsl
popf
mov
push
scas
jle
inc
cmp
std
hlt
into
push
push
mov
mov
out
sti
xor
push
lret
jle
inc
xor
add
or
lcall
incl
nop
loope
mov
pop
pop
mov
scas
lcall
das
add
ret
std
xchg
cmp
data16
and
jne
pushf
inc
jno
scas
out
divb
adc
pop
mov
add
pop
mov
dec
lds
inc
xchg
pop
cld
in
idivl
jo
ja
lcall
adc
and
mov
jo
test
insl
cmp
imull
out
push
addr16
icebp
negb
jge
adc
loopne
filds
sbb
and
out
cwtl
push
sbb
xor
bound
ljmp
lcall
sub
add
pop
adc
push
daa
in
mov
push
cmpsb
sub
jecxz
adcb
imul
sub
mov
idivl
mov
sub
dec
xor
adc
pop
es
mov
inc
repnz
das
sub
dec
mov
pop
pop
jae
stos
stos
movsl
or
std
fldt
loop
testb
ret
in
cld
and
filds
testl
cli
add
xor
mov
pop
inc
orl
add
ljmp
add
push
addl
popf
add
sub
pop
cmc
repnz
adc
mov
popa
decb
cmp
xor
dec
or
leave
xchg
shll
sbb
sti
mov
fnstenv
xlat
sti
jmp
xlat
or
ret
in
stos
cltd
lahf
imul
je
pop
push
xchg
std
cmpsb
push
push
ja
insl
dec
jae
pusha
sub
mov
xchg
cmc
setg
jbe
xor
or
sarb
sub
inc
push
lds
fs
nop
div
push
fmuls
fnstenv
inc
push
into
adc
mov
insb
or
jg
ds
dec
cltd
out
mov
push
push
jbe
loopne
mov
xchg
loope
ficompl
push
insl
pop
xchg
pop
mov
or
mov
mov
push
and
lret
repz
shlb
and
cmp
lahf
arpl
mov
int
adc
adc
mov
push
xchg
xchg
push
js
mov
fsubrs
bound
jno
push
jae
es
mov
or
jmp
mov
cmpsl
in
or
mov
jb
sbb
outsb
mov
iret
lds
add
pop
ss
adc
int
lea
or
push
mov
cld
mov
sbbb
call
scas
in
adc
xchg
dec
loopne
inc
push
xchg
cmpsb
sarb
lret
xchg
sbb
adc
std
rcl
sub
dec
mov
or
mov
adc
aam
mov
out
ljmp
movsb
addr16
mov
loop
inc
je
notb
mov
add
adc
movaps
aam
xchg
xchg
cwtl
xor
pop
add
shlb
jmp
xor
xchg
lret
in
sbb
les
xchg
add
dec
test
xor
sub
iret
dec
pop
bound
pop
testb
mov
jmp
xchg
hlt
ss
xor
in
data16
push
mov
loope
in
xor
pop
imul
filds
or
jmp
add
ret
sbb
and
int
lret
popf
lea
sub
pop
push
sub
or
add
sbb
mov
insb
jb
push
lods
sub
imul
filds
aaa
jae
mov
jl
jnp
dec
mov
movb
xchg
bound
inc
xchg
rol
popa
cmp
mov
incb
dec
mov
jno
pop
xor
lock
cmp
fcmovnb
xor
jb
movsl
insb
push
mov
cmp
or
mov
popa
mov
mov
cltd
cltd
int
jp
orb
push
fwait
int
bound
jb
mov
adc
outsb
xchg
cmp
mov
dec
ret
push
mov
scas
push
add
data16
in
fstp
sbb
cld
shll
popa
ds
push
fldenv
push
and
push
and
pop
jecxz
cwtl
int
clc
add
inc
movsl
fdivrs
int3
sbb
cmp
test
insb
std
sub
cmp
or
stos
pop
pop
dec
cld
sbb
jge
fcmove
outsb
cmp
pop
aad
sub
hlt
imul
mov
push
out
inc
scas
lcall
outsl
in
lods
movsb
scas
rolb
jae
cli
leave
aas
xor
popa
fimuls
sbb
pop
inc
in
insb
mov
xchg
cwtl
pop
pop
or
aad
imull
loope
js
addr16
shlb
push
add
mov
mov
jecxz
popa
repz
mov
rcrb
push
xor
icebp
loopne
mov
and
gs
or
mov
xchg
dec
js
into
mov
dec
ja
xchg
fmulp
mov
or
ds
dec
adc
cmpsb
sub
jbe
sbb
mov
idivl
jae
push
cmp
mov
loopne
cmp
add
leave
cmpsl
in
pop
stos
adc
test
jge
rorl
lret
dec
dec
mov
push
cmp
jl
int
out
enter
lods
mov
test
xchg
sbb
iret
sbb
rorl
mov
hlt
add
jno
pop
pushf
testl
jnp
jno
inc
cltd
loopne
shrb
jno
das
clc
sahf
mov
out
push
mov
lret
insb
mov
inc
pop
in
push
mov
xchg
stc
mov
lcall
insb
std
adc
jb
insb
mov
loop
or
mov
jle
loope
fwait
mov
lahf
popf
in
adc
aad
mov
mov
xchg
mov
xorl
cld
je
xor
insl
sub
xor
mov
clc
mov
out
xchg
push
adc
ljmp
mov
mov
cmp
cmp
nop
ja
cmp
add
test
cwtl
jg
in
cmp
mov
les
test
add
add
les
push
mov
dec
jns
enter
and
pop
or
fldenv
gs
outsb
enter
popf
sbb
shr
mov
pop
sub
rcrb
lea
sbb
testl
add
fiaddl
hlt
fwait
xlat
dec
add
push
in
add
popf
iret
push
inc
in
xchg
xchg
insb
adc
daa
cltd
js
cmc
mov
adc
and
jle
out
ljmp
jno
clc
sbbb
int
xor
push
shl
cmpb
aas
mov
test
int3
cmp
sbb
enter
mov
jg
ljmp
scas
mov
dec
in
adc
pop
sbbb
in
cmp
das
fcoms
dec
fldt
inc
dec
mov
mov
icebp
enter
movsb
push
test
outsb
mov
popf
aad
inc
xchg
jmp
fistpl
jne
aaa
mov
sahf
movsb
inc
sbb
xchg
sbb
mov
ret
test
mov
push
lods
scas
sbb
jp
fbstp
int3
add
mov
imul
pop
inc
out
sbb
cmp
lahf
xchg
loope
mov
mov
fstl
xchg
daa
xor
cmp
mov
push
scas
mov
add
aam
add
lahf
insb
cmpsl
dec
es
cmpsl
loop
out
sbb
mov
sbb
pop
pop
sub
cli
rclb
ljmp
rorl
mov
out
push
mov
push
or
mov
subb
jae
pop
dec
mov
shld
pop
fwait
iret
aam
sbbl
clc
aad
cmp
ret
bound
arpl
xlat
xchg
fisttpll
mov
test
cmc
cltd
leave
scas
out
push
jnp
subl
mull
mov
divl
fld1
jb
fsub
xchg
cmp
sub
fucomp
fidivrs
movsb
jecxz
add
aaa
push
dec
mov
xchg
ret
jp
mov
fs
jg
adc
xor
pusha
fcomip
sbb
shll
je
sbb
gs
movsl
sbb
mov
addr16
xchg
mov
adc
xchg
mov
pop
push
loop
iret
mov
ret
jns
popa
sub
fmull
sbb
pop
pop
mov
xlat
jne
in
xchg
nop
ljmp
mov
bound
inc
insl
mov
sahf
je
cli
sti
decb
ret
sbb
std
jl
std
cmp
and
inc
je
and
int3
push
clc
jo
lahf
stos
mov
adc
push
nop
pop
shrl
push
sub
cmpsb
jne
pop
out
fsubl
xor
push
push
or
pop
xchg
idivl
movsb
sarl
xor
mov
divl
leave
adc
int
popa
jae
xchg
cmpsb
cmp
stos
aam
test
cmp
daa
lea
pusha
out
sahf
out
mov
add
cmp
mov
out
mov
arpl
cmp
into
aad
jge
dec
push
adc
or
lock
dec
inc
cmc
jg
shlb
pop
outsb
dec
mov
rolb
jecxz
push
dec
cld
ret
jl
dec
into
pop
or
sahf
outsb
outsb
add
adc
adc
cli
jo
test
push
aad
rcrb
icebp
in
mov
rep
inc
cmp
lock
fldcw
and
push
cld
fbstp
mov
inc
adc
out
aad
mov
rcl
and
shrb
sbb
cmc
outsb
jns
dec
pop
addr16
arpl
dec
in
sti
subb
movsl
into
jge
rcrb
mov
mov
cmp
jae
dec
xor
mov
xor
loope
int3
add
int3
jnp
xor
cltd
mov
or
stos
or
fidivl
dec
test
jl
clc
dec
arpl
pop
jae
dec
or
inc
int3
or
out
and
pop
fidivrs
lret
arpl
adc
cmc
ret
inc
arpl
push
push
movsl
sub
pop
lock
fsubrs
in
es
aam
pop
cltd
pop
xchg
add
dec
dec
push
popa
gs
jae
or
icebp
xor
inc
pop
mov
lods
js
call
rolb
sbb
nop
and
push
jle
inc
imull
or
sub
aaa
pop
in
or
scas
daa
scas
push
addr16
sbb
test
ud0
lret
push
int3
and
jl
push
mov
call
insl
cmpsl
sbb
movsl
and
push
ficomps
or
in
aad
cmpsb
pop
lods
or
sbb
push
mov
pop
add
sahf
repnz
aaa
dec
sub
test
subl
adc
imul
xchg
out
adc
in
add
pushf
adc
and
push
mov
stos
scas
inc
mov
jae
aaa
scas
jae
inc
push
pop
arpl
adc
mov
or
xor
cmp
mov
jo
cmp
aaa
mov
xor
popa
pop
xchg
shll
fildl
dec
sbb
dec
xchg
adc
js
mov
xor
inc
or
aad
out
mov
hlt
adc
mov
mov
xlat
sbbl
inc
push
pop
push
fstps
jge
test
int3
mov
pop
popf
sub
xchg
stos
or
mov
jge
jge
roll
dec
cli
pop
loop
pusha
lea
mov
push
xchg
adc
ror
dec
repz
cmp
clc
mov
out
or
add
xor
mov
sbb
jmp
mov
pop
jmp
lret
mov
vphadddq
mov
pop
mov
lea
cmp
orb
xorl
int
out
int
cmp
fisubs
sub
jno
mov
sbb
or
movsl
loop
mov
aas
dec
jle
movsl
adc
cltd
push
jae
add
adc
mov
xchg
pop
push
mov
mov
xor
pop
inc
inc
push
xor
hlt
inc
or
push
xor
clc
jg
pop
mov
jnp
push
loope
dec
hlt
push
xor
ret
jmp
lds
int3
cmp
xchg
je
lea
push
fnstcw
jae
sub
ss
stos
int
cmp
push
add
pop
jnp
stos
test
sub
aam
lea
call
sbbb
lahf
rorl
jnp
mov
sub
aam
xchg
xor
in
add
mov
popf
ja
negb
adc
es
and
hlt
data16
add
shl
mov
add
repz
mov
rcrl
add
mov
mov
sahf
cld
add
jmp
enter
cmp
fiaddl
adc
shlb
int3
or
pop
xor
lock
mov
es
lret
ficoms
sub
in
fs
sbb
repz
ret
stos
popf
sbb
xchg
dec
dec
scas
pop
repz
ror
push
mov
mov
cld
cli
scas
push
inc
cmp
enter
xlat
pop
pop
mov
jo
pop
pop
xor
clc
loopne
push
or
adc
data16
jle
mov
insb
jo
sub
push
jo
jg
mov
fsubrs
mov
daa
arpl
push
push
dec
lret
sbb
inc
rolb
sbb
leave
fs
or
dec
shlb
or
pop
or
outsb
jg
fs
push
xor
or
sbb
movb
je
mov
cs
dec
push
call
push
cmp
rolb
push
or
jmp
jle
out
cmp
push
mov
adc
push
mov
test
add
sbb
or
sarl
or
pop
sbbb
aad
test
hlt
mov
mov
fsub
test
pop
sbb
sub
and
loope
adc
iret
sbb
pop
pop
out
aaa
inc
inc
cmp
jp
inc
sbb
ss
pushf
fcomps
xor
femms
xlat
loope
pop
and
aaa
pop
dec
dec
cmpsl
test
shr
sbb
sbb
sub
xchg
push
inc
out
dec
xor
jo
inc
dec
add
insl
daa
mov
pop
cwtl
outsl
inc
popf
dec
fcomi
sbb
mov
adc
inc
arpl
xor
shlb
xchg
fadd
xchg
imul
xlat
mov
push
xlat
sub
dec
jmp
enter
adc
push
mov
jle
cmpsb
pop
das
fdivp
test
xchg
jmp
mov
lea
sbb
lock
je
mull
mov
adcb
mov
sbb
jge
ret
rcrb
repz
mov
cmpsl
xlat
fsts
mov
out
sbb
mov
ja
jle
fistps
int
test
inc
push
out
lods
jp
adc
pop
stos
xchg
cli
sbb
sub
pushf
imul
dec
inc
pop
sbb
iret
lea
sub
sbb
push
stos
cwtl
xchg
nop
fsubs
xorb
add
push
je
out
in
int
imul
jb
cltd
aaa
mov
cmp
in
mov
icebp
sahf
or
stos
aas
pop
pop
fmuls
pop
scas
int3
or
das
ljmp
push
or
loop
xor
in
fld
add
xor
or
mov
testl
setno
mov
int
dec
sub
repz
add
fcompl
movsl
data16
jecxz
pop
scas
mov
aas
xchg
mov
je
fnsave
aam
ret
push
jg
cmp
xchg
lea
sahf
inc
loopne
gs
lds
add
repz
adc
fwait
test
out
sub
sahf
ficoms
fidivs
sbb
jmp
pop
xchg
fcom
inc
add
test
sbb
lret
arpl
cmp
ds
sub
inc
mov
mov
enter
icebp
scas
pop
test
xchg
jecxz
mov
mov
pop
push
arpl
leave
fcmovb
pusha
sub
cmp
lods
push
insb
mov
add
push
mov
mov
xor
add
dec
jecxz
cmp
push
scas
sbb
push
popf
sbb
adc
enter
sbb
push
jo
out
fnsave
xchg
xchg
out
lods
pop
push
sarl
das
xor
rol
and
shlb
add
enter
shl
loope
int
xor
xor
push
push
test
fidivrl
mov
in
ja
arpl
xchg
pushf
in
jae
nop
lret
leave
arpl
into
push
mov
ds
popa
mov
xchg
adc
test
inc
fwait
inc
inc
and
into
xor
adc
int3
ror
push
out
mov
jmp
inc
fstp
adc
mov
nop
dec
or
std
scas
out
xlat
ret
jo
push
je
pushf
or
ror
insl
jae
fcomps
sub
jmp
jbe
dec
data16
or
xor
and
imul
mov
pop
es
aaa
push
cltd
mov
sub
cmc
or
adc
pop
mov
fincstp
xor
pop
sbb
stos
jne
jp
push
sti
popf
testl
xchg
xchg
jmp
fucomi
jecxz
les
add
decl
xor
cli
push
mov
ret
sub
sbb
or
in
sub
pop
in
movsb
js
inc
push
lahf
cmp
call
mov
shrl
jmp
das
dec
dec
push
pushf
iret
pushf
mov
pop
jnp
or
ficoml
inc
mov
loopne
xchg
sub
es
jae
mov
push
sub
adc
aaa
popf
arpl
int
cmp
movl
out
lods
cmp
pop
sbbb
pop
and
or
outsl
int
out
outsl
mov
rcrb
popa
int3
test
and
inc
sub
mov
cmp
in
out
mov
inc
inc
xlat
scas
mov
mov
movsb
inc
push
cmpsl
cld
pop
cltd
loope
int3
push
jnp
xchg
fwait
inc
xchg
push
fmul
out
push
pushf
xchg
mov
cmc
mov
jmp
xor
fildll
bound
loope
clc
popf
inc
sub
fs
cmpsb
mov
mov
push
and
jo
inc
or
adc
sub
shll
js
xor
add
inc
test
mov
out
xor
out
mov
std
sub
testb
jbe
pop
popf
lret
inc
aas
addl
jg
push
inc
mov
mov
test
fsubr
mov
mov
sahf
jns
pop
xor
mov
cwtl
aam
dec
in
add
sub
mov
xchg
sbb
sbbb
inc
push
mov
loope
cmp
mov
in
xchg
fadds
aam
jbe
inc
orb
add
sub
iret
icebp
cmp
pop
addr16
mov
sahf
dec
push
mov
pop
addb
lret
dec
into
jg
adc
lock
insb
adc
movsb
lods
stos
dec
push
pop
sub
pop
xor
adc
out
in
lods
mov
in
lock
rcr
dec
movsl
add
shll
dec
mov
test
insl
mov
int3
bnd
cmpsl
in
ss
cmp
sbb
in
xor
ret
jne
sub
cmp
mov
rol
stc
lret
pushf
int
out
adc
es
imul
jnp
cld
daa
fwait
test
pop
loop
mov
push
outsl
mov
cmp
jge,pn
fs
out
aad
sbb
push
xchg
dec
hlt
cmpsb
mov
out
popf
inc
cli
xchg
std
jecxz
test
notl
and
xchg
cmp
sub
aas
and
lret
in
enter
dec
mov
jg
shrb
dec
mov
gs
fmul
or
jge
xchg
fstl
jbe
in
push
orb
imul
rcll
popf
mov
idiv
hlt
mov
movsl
lret
out
fs
inc
mov
inc
or
cwtl
jnp
pop
xchg
int
lret
jp
mov
mov
imul
push
aad
xchg
sahf
in
into
sti
mov
jle
mov
add
adc
aaa
cmpsb
pop
lahf
lret
in
adcl
dec
icebp
mov
adc
push
adc
push
sbb
fildl
mov
jo
jns
mov
repnz
mov
jmp
mov
mov
out
sarl
push
call
ret
jno
iret
ror
sub
ss
pop
insb
mov
push
in
inc
sbb
lods
jge
jle
pop
mov
xor
in
das
inc
mov
xor
inc
inc
jl
mov
scas
and
in
test
mov
dec
aad
add
nop
push
icebp
adc
and
clc
adc
mov
loope
add
stos
xchg
cli
jnp
inc
lods
and
cmp
sbb
push
push
sbb
repnz
jmp
mov
dec
jle
mov
shr
mov
mov
cltd
arpl
pop
cmp
push
jl
sbb
push
mov
adc
dec
in
imul
xor
movsb
leave
mov
add
add
mov
pop
rorl
and
ret
stos
testl
xchg
gs
jmp
lods
dec
stos
adc
sbb
hlt
iret
mov
push
jl
pop
filds
mov
pushf
pop
jae
arpl
imul
adc
kxnorw
xor
dec
gs
in
push
ds
mov
call
in
or
cmc
fistl
out
cmpsb
imul
pop
xchg
js
hlt
out
icebp
mov
lods
fucom
mov
push
mov
sub
rcrl
gs
test
jl
pusha
jnp
sub
lea
insb
daa
dec
xchg
mov
fsubp
mov
popa
jg
inc
ja
cld
cwtl
mov
cltd
lret
test
and
jb
std
or
fcomip
bswap
xor
repz
jo
sbb
pusha
adc
lret
push
rorl
sbb
and
test
or
mov
and
in
push
movsl
aad
push
or
iret
mov
movsl
dec
and
xchg
mov
test
lret
and
sahf
stc
lret
add
movsb
add
stos
pop
mov
mov
xchg
shrb
rcrl
mov
pop
xor
and
push
andb
clc
inc
ds
add
xor
sti
push
iret
divb
sbb
stos
loop
test
push
or
stc
xchg
lock
dec
pusha
stos
cmovns
mov
fnstenv
loope
xor
movsl
inc
jecxz
sti
stos
pusha
and
es
mov
hlt
iret
rol
push
fmull
push
mov
ror
jbe
jae
lcall
xchg
xchg
mov
cs
dec
sarl
fdivl
sub
lds
mov
sbbb
jo
mov
jbe
cmp
cli
rcrl
inc
mov
mov
sub
test
cld
inc
add
aam
push
dec
xchg
or
scas
hlt
cmp
rcr
imulb
scas
and
insl
aam
cmpsb
xor
pop
and
inc
mov
scas
xor
mov
shrl
push
adc
aam
in
and
lods
xchg
sub
pop
movsb
cmpsl
ret
gs
pop
lcall
std
and
adc
stc
subl
dec
call
out
call
data16
sarl
dec
jmp
sub
and
pop
mov
pop
cltd
arpl
mov
pop
xorb
lret
cli
xor
flds
or
es
arpl
xchg
addr16
out
push
adc
scas
mov
arpl
dec
shll
mov
aaa
cmp
or
mov
xchg
ret
fwait
outsb
stc
pop
xor
cmpsb
loope
scas
add
xchg
xchg
mov
pop
push
or
xor
adc
pop
jg
pop
mov
cmpsl
adc
xchg
int3
adc
dec
add
xor
dec
out
test
lock
fdivs
cmc
sbb
fisubl
dec
loopne
push
mov
add
aas
jo
dec
xor
pop
popf
ja
arpl
js
test
test
xchg
test
mov
les
shlb
xchg
push
or
jo
sahf
das
aad
mov
inc
popa
adc
mov
aam
mov
push
dec
aaa
fstpl
mov
jae
and
pop
repnz
xor
jae
ret
xor
aam
fnstenv
fimull
and
inc
dec
push
adc
leave
or
shl
notb
or
and
ret
fnstcw
into
sbb
insb
fidivrs
fstl
pop
fldl
push
loope
xor
or
xchg
in
jg
push
aam
int3
sahf
push
mov
or
stos
push
mov
aaa
mov
test
or
out
jbe
mov
mov
fadds
pop
jge
jg
cmp
push
vpsubusb
fldl
xor
inc
ret
push
mov
inc
out
xchg
jg
or
pop
xorb
dec
dec
js
js
repz
inc
or
adc
dec
adc
test
jl
out
cmp
rol
xchg
inc
lret
pop
hlt
adc
pop
add
test
pop
add
dec
repz
pop
add
add
ret
bound
test
and
mov
xor
stos
js
or
addr16
shlb
pop
rclb
add
negl
in
push
stos
popa
push
shl
int
pop
pop
in
push
lods
pushl
js
xlat
imul
xchg
js
adc
pop
fs
jne
cmp
push
xlat
adcb
in
fwait
push
lods
pop
pop
push
addb
jbe
pop
mov
adc
imul
add
lret
mov
mov
cld
mov
cmpsl
xchg
add
into
sub
aas
pop
stos
sbb
dec
adc
fsts
pop
inc
test
push
inc
cmpb
into
dec
xlat
ljmp
scas
mov
fsub
jae
outsl
mov
scas
std
sbb
mov
and
out
mov
fs
dec
out
adc
das
inc
xchg
gs
out
add
orb
xchg
cmp
iret
test
jge
movsl
pop
sbb
enter
loopne
and
pop
daa
movsb
and
xchg
dec
pop
add
and
addr16
int
xchg
pop
dec
pop
aad
js
or
mov
int3
dec
or
cmp
mov
inc
mov
push
movsl
sbb
lret
jo
jnp
lods
ret
jl
stc
outsb
lret
imul
mov
sbb
mov
test
mov
test
lods
ds
scas
lret
outsl
mov
or
mov
cmpl
mov
dec
shlb
cmc
mov
mov
add
sarl
ss
sarl
enter
jne
movsb
int3
scas
clc
pop
fisubl
into
pop
aaa
dec
int
jae
and
adc
es
adc
pop
out
add
icebp
ret
call
mov
or
in
adc
sub
xor
inc
clc
inc
lea
hlt
movsb
or
test
jbe
adc
fisttps
mov
aaa
add
cltd
roll
in
mov
cld
jl
aas
push
cmc
fidivl
mov
jg
jbe
push
addr16
mov
in
pop
xchg
mov
sbb
aam
movsl
mov
nop
add
jnp
mov
jge
rcr
movsl
jmp
data16
pop
adc
out
push
mov
leave
sbb
dec
int
jae
js
sub
jne
jl
add
xlat
cmp
jecxz
or
lea
adc
stos
lods
pusha
push
cmp
push
inc
rclb
sbb
dec
mov
mov
outsl
sti
dec
std
mov
lret
shl
mov
loopne
jno
loopne
in
ret
stos
aam
scas
mov
clc
ljmp
mov
or
fsin
pop
push
leave
xchg
dec
xor
cmp
xlat
das
mov
jle
jae
jb
mov
sahf
mov
arpl
pop
dec
in
dec
js
pop
movb
shrl
cmp
sbb
jne
std
shlb
mov
icebp
into
outsb
pop
jno
push
mov
and
ljmp
cmp
add
push
jecxz
mov
data16
ret
cmc
and
and
test
lock
dec
call
adc
out
cmc
negb
mov
leave
dec
mov
cmp
add
cmpsl
mov
inc
outsl
mov
mov
sahf
aam
fistps
imul
jp
out
int
je
cltd
cmp
push
fimull
in
loopne
and
aaa
rorb
out
jle
fsubs
adc
mov
inc
cld
test
xor
sub
leave
outsl
mov
xor
push
les
cmp
dec
ret
push
inc
ret
jge
mov
sbb
into
std
pop
sbb
stos
xchg
cmp
fnsave
out
lds
jecxz,pn
mov
sub
jae
es
std
cmp
in
jbe
sbb
aad
aaa
xor
jb
push
push
out
xchg
dec
pop
add
lcall
mov
lods
in
out
mov
sub
hlt
psllq
adcl
scas
in
adc
cmp
push
cmp
adc
xor
ja
pop
lret
jnp
mov
mov
sarb
and
sbb
lods
adc
sub
das
cmp
jl
push
xchg
mov
xor
mov
fcoml
xlat
xor
dec
mov
jne
inc
int
ljmp
adc
pop
and
or
outsb
pop
sahf
push
aas
dec
out
sbb
push
pop
int3
lret
ss
popf
xchg
xor
loop
cld
aam
adc
ss
sub
jne
sbb
sub
lret
leave
inc
fldcw
scas
stos
int3
sahf
mov
pop
sub
or
stos
mov
mov
jge
aad
add
xchg
xor
imul
xor
inc
int3
xchg
lahf
adcl
jp
or
shll
mov
test
xchg
mov
test
add
xchg
cmp
gs
mov
sbbb
mov
add
out
xchg
push
adc
xor
jmp
jge
cmpb
inc
arpl
xor
les
xchg
rorb
push
ja
addr16
leave
mov
add
lahf
or
pop
inc
int3
test
jne
stc
or
clc
and
stc
cmp
push
jecxz
into
je
mov
sub
and
add
gs
xorl
call
xchg
xchg
sahf
mov
fsubrs
and
fsubr
pop
in
jge
into
iret
push
or
and
outsl
popf
js
imul
or
adc
roll
jl
ret
psubusw
mov
outsb
cli
and
xchg
and
cwtl
imul
unpckhps
pop
jle
and
mov
and
mov
int3
xchg
stos
push
int
adc
pop
mov
ret
add
aaa
pop
rcll
cmp
cmp
jb
adc
jbe
loopne
pop
push
rol
data16
xchg
mov
mov
xor
push
inc
insb
jae
jmp
repz
dec
inc
or
or
hlt
cmp
xor
popf
push
in
insb
cmp
jge
dec
mov
add
sbb
fcompl
jecxz
xchg
imul
scas
and
je
sbbb
daa
clc
add
in
mov
push
insl
or
mov
psubusb
adc
in
cmp
sub
ret
jnp
push
cmp
mov
mov
stc
jns
dec
cltd
xchg
inc
adc
mov
mov
mov
adc
icebp
rolb
popa
popa
cmp
sub
cmp
scas
flds
xlat
inc
jno
mov
and
mov
stc
jecxz
pop
jne
mov
pop
jl
es
and
or
cmpsb
xchg
mov
out
xchg
jb
sbb
ficomps
cld
imul
jmp
mov
and
hlt
out
mov
ds
outsb
dec
test
out
push
xor
pushf
out
in
mov
jg
lret
stos
dec
lahf
orb
and
adc
xchg
cltd
xor
sbb
jbe
ja
add
cli
cmp
push
leave
push
pop
int
xchg
or
cwtl
mov
inc
dec
mov
mov
insl
dec
pop
aas
mov
push
cltd
inc
stc
fisttpl
aam
mov
sub
mov
cmp
sarl
sub
mov
mov
shlb
mov
mov
insl
test
xor
lods
xor
push
mov
sub
test
adc
jbe
imul
stos
fstl
lea
mov
sbb
dec
adc
lret
out
in
fadds
add
mov
lahf
xchg
sub
sub
cmp
sti
jecxz
lock
icebp
fistpll
jge
push
rolb
pop
dec
jmp
bound
jecxz,pt
loopne
mov
mov
popa
jnp
test
or
fcomps
cli
mov
pop
cmp
sbb
mov
pop
jnp
mov
mov
test
pop
es
mov
xor
sbb
fstps
add
or
ljmp
jns
dec
arpl
cmc
adc
ljmp
rcr
add
repz
xchg
or
movsb
repnz
push
cwtl
dec
aad
and
lahf
call
add
test
add
repz
test
add
mov
mov
insb
xor
lods
ds
sbb
dec
adc
test
sbb
and
mov
popa
adc
push
mov
xchg
or
jp
pop
or
mov
pop
jge
ret
test
sub
pop
sub
loope
pop
fdivl
mov
mov
inc
ret
adc
movsl
or
jg
pop
jno
xchg
sarb
js
and
test
and
imul
imulb
cmp
push
fld
push
push
lds
pop
mov
je
dec
sbb
mov
or
mov
mov
jle
mov
adc
rcll
jno
js
adc
lcall
fwait
les
jb
icebp
jbe
pop
jae
insl
iret
sbb
push
outsb
imul
mov
popf
sub
inc
cmp
xchg
icebp
pop
sbb
dec
cmpsb
adc
hlt
fbld
push
push
inc
jns
push
inc
sub
aaa
push
cli
fmuls
test
les
pop
into
arpl
or
or
psubb
cmpsl
mov
pusha
call
rcrl
sti
xor
adc
pop
mov
lock
mov
ficoml
js
outsl
xchg
out
xor
mov
popf
xchg
aad
mov
pop
data16
rep
xchg
je
mov
dec
sbb
movsl
pushf
push
incl
sub
and
insb
daa
int3
pop
jbe
std
jmp
and
outsb
movsl
sarl
push
and
mov
lods
cmpsb
pop
data16
xchg
sbb
daa
jbe
cmp
jae
lods
inc
mov
push
and
enter
jecxz
pop
cmpsl
addr16
add
inc
sahf
xchg
icebp
test
scas
ds
loopne
mov
xlat
int3
jo
dec
cmpsb
loop
jmp
pop
xchg
inc
cltd
in
bound
sub
xchg
push
jecxz
add
fistpl
push
and
jge
push
jo
jb
enter
test
in
dec
notb
mov
rcl
cmc
push
into
bound
test
in
sub
popf
mov
ret
data16
cli
leave
lds
daa
in
movb
push
and
sbb
and
es
aam
lods
pusha
dec
mov
out
and
pop
cli
shr
push
push
sub
aaa
je
jb
pop
pop
fwait
sub
jmp
mov
xchg
loope
into
xchg
pop
cmc
rolb
jmp
sub
stos
and
insl
stos
inc
and
and
mov
adc
inc
xor
adc
mov
mov
stos
jns
sub
fwait
clc
dec
push
jge
mov
pop
jl
repz
nop
and
popl
dec
js
adc
inc
xor
inc
fwait
jbe
sbb
mov
jnp
test
inc
and
xchg
cli
mov
outsl
clc
xor
adc
add
ds
cmpb
icebp
mov
sub
loop
test
jmp
rcr
push
stc
adc
mov
xchg
and
mov
mov
outsl
add
cli
push
push
mov
dec
inc
daa
mov
js
fwait
arpl
mov
push
daa
jb
mov
xlat
mov
adc
inc
fidivrl
mov
dec
fs
sub
xlat
arpl
or
negb
lods
ds
ds
and
push
stc
pop
fistpl
out
jnp
data16
push
mov
cmp
xchg
lea
inc
aad
push
jecxz
cs
cmpsl
or
ror
jo
xchg
fadd
rcl
inc
pop
dec
jbe
mov
loopne
dec
mov
dec
xchg
arpl
outsb
lea
outsl
insl
loope
push
jg
sbb
dec
mov
cld
sbb
or
out
lds
fcmovnbe
icebp
inc
loop
call
push
jmp
pusha
test
sbb
push
out
sbb
inc
roll
jge
leave
cmp
push
mov
cmpsl
cmp
fmulp
outsb
add
test
jns
mov
add
aad
adc
std
mov
es
sbb
pop
inc
rcrl
jg
fs
ljmp
movsl
test
mov
lcall
bound
adc
xchg
push
dec
mov
loopne
add
and
xor
sub
loop
scas
xlat
mov
cld
outsb
or
ljmp
or
fbld
dec
adc
xor
aaa
test
push
fmul
mov
adc
add
push
cmp
icebp
mov
repnz
mov
bts
and
jmp
sbb
cmp
mov
lds
sar
xlat
gs
lods
lds
out
xor
mov
push
into
pop
bound
xchg
pop
jmp
jecxz
test
cld
and
int3
cmpsl
insb
dec
cmpsl
cmpsl
mov
sti
mov
adc
movsl
adc
fidivrl
fistpl
mov
jge
xchg
inc
ficomps
daa
push
fwait
popf
mov
cmp
cli
dec
jl
and
push
ret
adc
adc
leave
stc
ljmp
imul
xchg
xor
pop
pop
pop
jno
out
xchg
mov
pop
pop
je
adc
pusha
daa
mov
pop
insb
xchg
adc
sub
cli
sbb
xchg
ljmp
outsb
btr
sub
xchg
hlt
or
pop
movb
push
cmp
popf
sbb
push
cmp
mov
idivb
out
out
jg
xchg
sbb
and
xlat
popf
outsb
inc
mov
and
dec
ficoms
cld
roll
fwait
movl
cmc
call
les
ror
mov
jbe
in
sbb
sti
mov
fs
inc
jno
popa
mov
sub
popf
push
test
sub
or
repz
push
add
test
inc
rcrb
popf
ret
jmp
push
call
in
add
imul
in
add
push
es
add
cmp
fs
loop
mov
imul
xchg
xor
mov
aad
sub
in
outsb
inc
pop
outsb
into
sub
sub
push
leave
es
push
add
hlt
or
or
or
add
scas
cmp
fs
pushf
test
xchg
xchg
and
adc
ss
dec
mov
pushf
in
dec
cmp
rorl
push
rolb
pop
adc
jecxz
dec
adc
cmpl
xchg
push
sbb
mov
sub
cmp
sub
xor
imul
push
flds
jae
xor
jp
lock
fstpl
mov
push
mov
stc
or
movb
pop
jg
inc
and
test
hlt
aam
pusha
mov
popf
sbb
add
jae
push
test
lcall
pop
xor
adc
mov
cmp
call
add
lock
sbb
fsub
jmp
jecxz
adc
mov
jge
stos
pop
not
mov
sbb
fiadds
cwtl
out
ja
shl
adc
aam
jb
cmp
loop
cwtl
repz
xchg
test
out
lahf
and
sbb
out
or
je
movsl
or
lock
lret
sbb
lahf
lret
mov
ror
or
lret
fldl
bound
repz
xchg
pop
mov
jo
xchg
adc
outsb
jle
dec
mov
dec
es
fwait
push
stc
imul
cmp
adc
fisttps
ljmp
xor
out
dec
fiadds
ljmp
shll
push
lea
jmp
jg
mov
pop
dec
imul
stos
cmp
int3
inc
hlt
sub
mov
dec
xor
jae
inc
sarl
xor
fsubs
push
lret
and
and
and
mov
push
hlt
stos
fmul
shll
shrb
test
and
sbb
lock
fs
jle
jo
sti
add
cwtl
cmp
enter
pop
shrl
adc
pushf
push
mov
repz
sbb
aad
test
scas
fidivl
xlat
push
shll
jae
xor
pop
inc
fists
xor
lods
and
fists
stc
fwait
xor
jle
cli
loopne
xchg
push
fbld
adc
push
sub
mov
dec
sbb
int
mov
sbb
jno
inc
push
ja
push
nop
lret
aad
subb
jg
lds
ja
iret
adc
mov
cwtl
xlat
into
mov
stos
lods
mov
loopne
addr16
outsl
cld
mov
arpl
dec
dec
push
sub
cmpsb
fsubrl
mov
loope
sub
nop
imul
jae
sub
jg
popa
mov
mov
fsubrl
jno
cwtl
fcmovu
or
insl
or
int3
jecxz
sahf
sbb
call
mov
scas
int
add
xor
add
popf
test
les
xchg
cmp
arpl
sub
aaa
pop
cmp
jnp
into
dec
cmp
mov
loopne
cmpl
insb
jne
or
and
testl
movsb
and
fucom
mov
xchg
inc
xchg
mov
adc
lret
pop
and
roll
subl
cmp
das
ret
lret
es
sub
out
cli
push
inc
incl
loope
fists
lods
repz
push
cmp
repz
movsl
incl
push
jecxz
push
jb
js
mov
iret
sbb
dec
movsb
xchg
cltd
fmull
in
xchg
jl
and
in
pop
icebp
decl
xchg
loope
in
xor
sub
pop
cmp
aam
push
cld
jmp
and
xchg
mov
nop
sbb
das
add
and
out
inc
gs
cmc
lock
and
ja
mov
mov
inc
pop
dec
out
sub
add
xor
out
pop
mov
and
xlat
sbb
jmp
pop
xor
sub
jo
pop
dec
mov
sbb
mov
cwtl
or
lea
cwtl
sub
mov
in
push
es
jp
std
add
test
or
mov
lahf
rcrb
in
add
pop
ret
push
inc
inc
out
mov
adc
inc
fnsave
scas
rcr
mov
je
xor
xchg
icebp
and
dec
js
in
aam
in
sarb
pop
add
fld
add
test
popf
pusha
sahf
sub
pop
and
add
shll
pop
xor
mov
mov
or
xchg
lret
pusha
test
lret
sub
and
adc
sarl
xor
mov
xchg
aas
popa
push
ret
sub
test
mov
jmp
pop
mov
arpl
test
sub
dec
movsb
inc
push
jae
cmp
mov
test
pop
sarb
test
int3
mov
push
inc
inc
int3
mov
dec
jo
and
leave
push
mov
call
sbb
cmpsl
push
mov
xchg
push
push
add
xor
fs
sub
scas
pop
inc
xor
sub
sub
mov
add
rcrl
loop
mov
jne
jns
pop
repz
sub
dec
or
adc
or
xor
pop
cmc
gs
dec
aad
insb
ss
cmp
fisttps
or
sbb
mov
inc
fmuls
jae
push
sbb
pop
mov
pop
lahf
dec
jecxz
in
and
push
shlb
and
imul
dec
cs
add
hlt
or
fisttps
lret
insl
xor
test
push
jno
bound
inc
mov
insl
cltd
sahf
jle
xor
addr16
xchg
xor
shlb
fsubs
dec
enter
in
int
and
pop
cmc
scas
movsl
movsl
and
das
or
test
inc
les
loop
aam
inc
jmp
adc
enter
jns
ret
push
roll
cld
add
js
repz
das
repz
and
out
inc
lods
outsb
dec
out
sbb
ret
pop
lea
int3
cmp
jae
and
in
decb
xchg
mov
call
xchg
lods
std
jge
inc
mov
je
xchg
xorl
mov
mov
faddl
mov
test
sbb
test
xchg
cld
out
cs
pushf
popa
ljmp
inc
cmp
cli
xor
mov
push
ljmp
popa
out
rolb
shrb
push
jns
insl
add
dec
and
pop
aas
pop
xlat
insl
sub
mov
and
lret
je
adc
and
mov
pop
stos
push
or
das
push
js
add
xor
pop
mov
mov
insb
fwait
stos
je
inc
or
imul
sbb
pop
clc
stc
jns
imul
and
loopne
adc
das
dec
outsb
jbe
fisubrl
sbb
in
ljmp
shll
jge
orb
arpl
cli
mov
sarl
xchg
adc
xchg
fists
rcl
sub
jp
pop
jne
mov
lret
movsl
fildl
adc
push
dec
pop
fwait
in
inc
pop
lahf
pusha
cmpb
jno
push
and
push
add
adc
dec
pop
lahf
dec
sub
mov
inc
pop
and
add
fwait
js
jne
xchg
testl
jge
mov
mov
push
lds
push
or
addr16
sbb
add
pop
add
adc
dec
and
nop
ds
in
ja
mov
stc
aas
and
rcrb
sbb
fldenv
mov
in
mov
xchg
bound
and
dec
outsl
inc
push
ss
pushf
lahf
ret
jns
add
jl
fisubrl
nop
sub
sbb
lods
dec
pop
cmp
or
sti
or
adc
test
aad
mov
daa
push
movsb
fnsave
sbb
push
xor
mov
push
scas
sub
jb
sub
push
in
out
adc
aad
nop
stc
movsb
bound
inc
lock
mov
aas
mov
add
mov
ret
cmp
push
and
xchg
jg
sub
or
jecxz
xor
mov
cmc
jmp
int3
pop
imul
xor
cld
adc
and
bound
imul
push
ss
cli
bound
and
pop
jns
pop
push
rcrl
inc
fldcw
adc
test
std
xchg
push
adc
mov
jmp
daa
jg
or
or
mov
bswap
and
lock
jmp
jns
sbb
movl
mov
adc
int
sbb
cmp
add
and
or
pop
and
mov
ja
mov
out
pushf
hlt
les
dec
xchg
mov
push
repz
pop
sub
imul
inc
rcrb
pop
xchg
mov
or
clc
sti
sbb
icebp
fwait
repz
xlat
movsl
or
adc
pop
cwtl
push
in
js
dec
cwtl
and
outsl
mov
scas
inc
call
aas
test
cmpsl
mov
xchg
pop
daa
mov
inc
mov
bound
ds
fnstsw
shlb
fld
adc
add
int3
cmpl
pop
das
xor
or
adc
push
xlat
aad
adc
sub
repnz
cmc
jp
shrl
and
adc
and
sub
test
sbb
sbb
mov
stos
push
xchg
mov
mov
test
inc
jns
cmp
repz
sub
push
pop
jbe
stc
pop
lcall
sbb
fcmovnb
xlat
stos
jmp
sbbb
add
jno
lods
inc
addr16
mov
scas
test
xchg
xlat
test
hlt
xor
adc
fldl
xor
mov
repnz
daa
mov
xor
adc
jmp
shlb
sbb
hlt
push
push
xchg
cmp
stos
mov
shlb
cmpb
mov
push
push
mov
call
shrb
rcrb
std
mov
outsb
ret
xor
pop
mov
aam
inc
dec
inc
xchg
lahf
fld1
in
dec
inc
cmp
inc
aas
adc
mov
or
sbbb
jne
xchg
in
cmp
and
lea
xchg
imul
pop
mov
and
xchg
addr16
popf
popa
je
out
scas
rcll
jo
add
xchg
sub
dec
bound
outsb
aad
ja
or
imul
or
ret
loope
cmpsb
push
imul
xor
dec
push
mov
xor
stos
mov
icebp
shll
fdivrp
dec
mov
sbb
rcll
test
dec
loop
push
out
adc
jmp
inc
cmpsb
icebp
xchg
lahf
push
xor
nop
cli
xor
lods
movsb
cli
scas
out
scas
in
pop
push
shlb
adc
sbb
dec
jle
and
mov
imul
lret
xor
push
push
xchg
sarl
sub
pop
repnz
xor
inc
mov
cmpsb
gs
add
sarl
movl
jb
push
xchg
sbb
test
and
cltd
dec
out
push
mov
pushw
pop
add
or
fcmovnbe
hlt
sbb
outsl
dec
xor
adc
lret
xor
cmp
add
mov
testb
mov
or
or
js
lahf
into
leave
ss
xchg
lock
fcoml
mov
out
lods
addr16
dec
xor
mov
je
mov
fdivl
out
xorb
dec
lds
hlt
jg
ljmpw
cmpsb
call
mov
pop
pop
mov
xchg
popa
pop
cmpsl
jl
jg
cmp
xor
es
adc
mov
rorl
call
xor
adc
jno
shrl
bound
xchg
loopne
scas
cmp
add
cmp
js
insb
movl
mov
test
inc
arpl
mov
rolb
sbb
mov
out
mov
ds
gs
lds
jl
cmc
dec
addr16
and
inc
pop
or
shlb
ja
iret
dec
mov
and
popf
dec
mov
sbb
sub
inc
lret
mov
lcall
mov
movsl
leave
jecxz
dec
hlt
in
repnz
and
loopne
sarl
inc
mov
ja
ficomps
cmp
popa
push
sbb
pop
cmp
fsubl
jle
into
mov
pop
pusha
adc
xchg
in
add
sbb
call
add
jle
addb
int
mov
mov
fstps
cmp
imul
sub
jne
fistps
inc
popa
xchg
cwtl
shl
push
and
fistpl
lods
push
mov
ret
outsl
push
jg
and
shrb
pop
sbb
xchg
adc
push
mov
mov
jo
sti
test
popa
push
push
call
mov
xor
lods
data16
inc
mov
pushf
cmp
icebp
mov
jp
lock
jno
movsl
mov
lods
arpl
in
sub
lahf
jl
jle
mov
pop
adc
xlat
jns
flds
jle
inc
adc
adc
mov
fwait
push
inc
rolb
xchg
mov
data16
cmp
pop
into
lret
add
pop
sbb
repnz
shl
mov
push
lods
sar
pop
pop
inc
test
inc
into
jno
xchg
add
inc
mov
jae
pop
xchg
aas
or
inc
and
pop
dec
jmp
lret
sub
testw
test
adc
out
cmp
pop
ret
lods
mov
mov
xor
je
enter
mov
cmc
aas
xlat
pop
sbb
cwtl
mov
sbb
push
cmp
add
loope
dec
test
cmc
add
fidivrs
fdivrs
add
dec
enter
pushf
cmp
or
sub
enter
mov
adc
inc
or
push
push
mov
dec
hlt
push
adc
sbb
shl
push
std
xchg
mov
dec
cmp
add
push
push
pop
in
xchg
pop
and
roll
adcl
clc
loop
lods
cmc
imulb
movsb
xchg
test
lcall
add
fstpl
daa
jns
aaa
mov
mov
sbb
mov
insl
aam
ret
test
loopne
stos
mov
sbb
clc
out
enter
sub
mov
shl
sbb
out
add
xlat
xchg
outsl
iret
xchg
inc
popa
xchg
sub
out
daa
repz
inc
repz
imull
fcoms
mov
aad
test
pop
or
or
das
les
add
mov
dec
cwtl
sub
rcll
inc
fidivs
in
ficoms
xor
mov
loop
and
stos
jne
add
lods
jmp
nop
mov
xorl
cmp
cmp
and
cmp
or
notl
pop
jbe
ror
imul
ds
sub
jno
outsl
aas
add
mov
sbb
or
jno
ds
fiadds
push
js
ja
dec
fnstenv
andb
sbb
pop
out
lea
jb
shlb
out
cmpsl
fs
ret
xchg
mov
data16
cmpl
sbb
std
out
dec
or
sub
int
idivl
out
mov
mov
xor
test
ja
mov
cmpsb
push
and
adc
cmp
jno
dec
and
cmp
mov
and
andb
mov
mov
fcoml
inc
cmp
sbb
xchg
sti
pushf
mov
int
pusha
sbb
testl
xchg
movsl
fidivl
out
sub
push
ret
shll
loop
movsl
out
jbe
mov
ret
mov
adc
cwtl
insl
xor
lock
leave
add
enter
inc
mov
movsb
or
push
lret
sub
push
int3
mov
sub
xchg
jno
mov
sarb
cmpsl
dec
or
dec
xchg
imul
aaa
mov
lcall
xchg
adc
icebp
ror
dec
mov
std
add
rcr
mov
daa
mov
shrb
inc
in
leave
or
loop
iret
dec
aaa
inc
push
mov
les
mov
mov
adc
xor
cmpsb
mov
jmp
jno
shl
imul
jl
cmp
stc
loope
xchg
dec
jb
sbb
mov
inc
and
stos
testl
add
mov
int
shll
and
mov
xor
dec
adc
cmp
lahf
or
cltd
popa
dec
fcomp
lea
dec
push
iret
sub
addr16
inc
add
cwtl
pusha
dec
aaa
jg
cmp
inc
stc
loope
mov
push
stc
xor
add
push
mov
scas
int
clc
sub
bound
cmc
pop
cmovb
pop
rorl
fbstp
xor
pop
mov
fbld
arpl
jp
ds
orb
ja
xchg
movsl
cmp
in
sub
adcl
movsl
sbb
aas
jecxz
dec
mov
jns
mov
and
sub
dec
adc
xchg
add
mov
ret
add
cmpsb
and
ja
fmuls
subl
pop
ficoml
push
add
pop
testb
ljmp
addr16
lods
mov
mov
ja
push
xchg
mov
sub
ret
mov
xchg
adc
sbb
lea
test
mov
fiadds
faddl
cmp
jmp
sub
scas
mov
push
push
cmp
sub
aas
into
rorb
mov
or
or
or
daa
mov
sbbl
out
call
js
push
cmpsl
mov
push
adcl
jns
cmpb
outsb
nop
and
cmc
adc
std
sahf
ljmp
fs
aaa
repz
fstpl
mov
xor
inc
mov
mov
xor
jnp
push
cwtl
inc
ja
xchg
cmp
movsl
lret
mov
outsl
movsl
into
sarl
stos
sbb
add
leave
cmc
ds
ja
cmp
or
test
xor
mov
push
pop
xchg
push
mov
int
inc
out
mov
mov
pop
sub
mov
jecxz
cmp
inc
jg
nop
test
int
mov
stos
nop
jge
mov
mov
dec
in
jnp
mov
mov
mov
pop
iret
das
lcall
mov
push
cli
insl
sub
scas
repz
cmpsl
jne
in
cli
in
fcomps
inc
movzwl
repnz
jns
jge
push
jecxz
fldln2
push
add
add
out
cmpsl
mov
std
fwait
adc
not
nop
jb
test
inc
mov
das
push
xchg
xchg
sub
fwait
out
xor
jnp
mov
sahf
in
dec
cmp
dec
das
lcall
fstps
movsl
test
es
lret
and
add
fistpll
mov
ja
int3
shrd
std
jle
lea
mov
sub
test
cmp
mov
sbb
stos
add
sarl
pop
loop
jle
push
jns
fcompl
test
nop
ja
mov
loopne
dec
adc
dec
or
xchg
pusha
pop
sub
add
stos
mov
gs
inc
push
test
mov
mov
push
loope
mov
ds
xor
mov
in
xchg
lea
xchg
lock
cmovo
and
push
and
dec
dec
in
jmp
mov
shll
call
mov
test
adc
pop
push
jle
aaa
dec
cs
push
jge
or
mov
loopne
cmp
cmp
scas
mov
stos
xchg
aam
dec
repnz
je
add
mul
loopne
arpl
cmp
int
mov
sub
fs
imul
test
xchg
lahf
inc
push
xchg
adc
lahf
adc
push
mov
lods
repnz
in
insb
adc
sub
cmpsl
lahf
mov
mov
adc
mov
aam
ja
xor
xchg
lcall
sbb
loop
cmpsb
rorb
jl
pop
out
or
jmp
push
shll
div
cmp
test
or
add
insb
in
push
jecxz
push
add
lock
mov
inc
adcb
mov
imul
andw
jbe
jne
push
sub
pop
push
push
pop
rcrl
test
enter
enter
and
push
popf
pushf
jbe
pop
cmp
sub
push
ja
sbb
sub
jg
cmp
mov
ljmp
rcl
sub
push
sahf
jl
or
and
popa
inc
push
adc
mov
cmp
cmc
inc
sbb
cmc
xchg
popa
pop
pop
jl
pop
aas
test
mov
cmpb
xor
jae
icebp
jl
das
sub
fisubl
loop
fisubrl
lret
cmpsl
jb
iret
fidivl
and
test
js
xor
fisubrl
xor
mov
adc
es
jp
jmp
scas
imul
jp
push
arpl
sbb
je
cmp
jnp
sub
push
adc
cmpsb
or
dec
fimull
dec
add
in
cltd
push
push
jae
inc
add
ret
mov
dec
pop
add
inc
dec
add
mov
add
mov
jnp
dec
loope
jnp
or
loop
mov
stos
xor
roll
mov
mov
mov
stos
pop
sub
sarl
notb
cmova
dec
aam
lea
xchg
es
cmpsl
inc
scas
nop
pusha
hlt
mov
sub
or
jbe
sti
mov
mov
sub
outsl
cmpsl
push
jo
sub
sub
or
and
mov
mov
test
jmp
push
dec
jb
outsl
cmp
movsb
push
shr
pop
aas
xchg
or
imul
outsb
sarl
lret
cs
fmull
pop
movsb
imul
dec
inc
jb
insb
mov
push
jae
fidivs
sbb
cwtl
icebp
js
and
inc
mov
lods
int3
daa
push
xor
in
test
jne
mov
lcall
cmp
popf
sub
xchg
or
cmp
mov
movsl
or
dec
push
ret
xchg
inc
mov
test
add
call
jecxz
adc
bound
movsb
mov
pop
mov
cld
jmp
scas
sbb
fcmove
pop
dec
imul
dec
jp
adc
imul
adc
xor
jmp
xor
clc
fcmovu
xor
xchg
pop
pop
lods
or
dec
mov
mov
cmp
dec
xchg
mov
push
or
mov
and
jns
mov
adc
jno
cwtl
pop
mov
jnp
jbe
scas
or
cmp
js
inc
test
and
mov
rcrl
mov
pop
popf
lods
fadd
hlt
insl
movsl
push
mov
mov
rclb
push
adcb
mov
lods
add
pop
in
iret
dec
imul
dec
lods
push
or
stc
and
dec
pop
add
lock
in
adc
mov
je
mov
mov
aaa
or
sbb
add
sub
aad
js
sub
decl
sbb
or
mov
ljmp
add
sub
pushf
sbb
outsb
push
push
lods
adc
gs
ja
repz
pop
repnz
mov
xchg
jmp
sbb
fidivl
jno
or
cmp
arpl
sbb
mov
pop
or
add
add
int3
xchg
idivb
pop
dec
ds
or
aam
inc
jbe
cmp
push
jmp
popf
adc
inc
fs
aaa
sbb
bound
call
test
stos
in
cmp
sbb
pop
out
and
sub
dec
test
outsl
mov
mov
mov
sub
sbb
push
ret
popf
leave
ffree
xchg
outsb
mov
aaa
sbb
outsb
inc
pushf
addr16
mov
and
dec
vfrczsd
sbb
js
push
sti
push
or
int
pop
mov
or
or
inc
xor
nop
std
inc
jbe
lcall
out
arpl
loope
adc
and
adc
mov
add
dec
sub
jbe
xor
ja
lds
in
sub
sbb
gs
shl
cs
shl
dec
lret
xchg
jns
xor
pusha
and
cli
fsubrs
push
add
push
loope
sbb
test
aam
insl
arpl
orl
inc
sub
fcompl
rcll
push
mov
and
mov
mov
in
scas
jo
jno
imul
mov
pop
sub
ret
or
jns
xchg
ret
test
xchg
cltd
out
aas
call
inc
dec
in
adc
jo
jns
pop
out
negl
adc
ss
sub
mov
decb
loopne
rolb
or
push
mov
cmc
inc
inc
nop
sub
cmp
pop
int
cmc
cli
add
mov
mov
jp
jecxz
ja
clc
js
jecxz,pn
or
mov
testb
pusha
addb
inc
jp
dec
fisubl
in
iret
jmp
inc
imul
cmpsb
xor
lret
sub
jle
cmpsb
popa
lea
lods
jno
jns
adc
push
adc
std
stos
xlat
fbld
cld
pop
adc
sub
inc
cs
out
mov
or
ds
out
dec
shrd
fldt
stos
jle
mov
inc
cmp
out
call
insl
ja
adc
dec
cmp
lods
xchg
sub
mov
gs
cmp
mov
imul
inc
hlt
pop
cmpsl
xchg
mov
pusha
pop
xchg
pop
repz
mov
fidivrs
idivb
mov
rolb
mov
sahf
cmc
and
sbb
repz
and
or
cmp
cmp
mov
jb
dec
clc
push
sbb
mov
push
push
push
push
stos
hlt
mov
addr16
xor
sbb
push
jle
cmp
in
mov
cli
call
add
aad
ljmp
pusha
cmp
enter
cmp
xor
push
mov
push
mov
mov
mov
jmp
pushf
arpl
sub
sbb
cmp
mov
mov
push
int3
mov
adc
ret
fsubl
fsubr
imul
in
xchg
addr16
js
add
lods
mov
or
repz
pop
pop
ret
or
lcall
rolb
or
push
inc
sbb
dec
imul
psubsb
jmp
jns
mov
in
out
roll
dec
shlb
adcb
mov
mov
mov
repnz
lahf
add
popl
jle
sub
xor
add
dec
or
xchg
jecxz
add
rcrb
pop
ja
cwtl
daa
repz
cmp
pop
add
shlb
jp
pop
lock
pop
inc
lock
jle
fldenv
cmp
insl
imul
out
xchg
jmp
xor
push
test
add
icebp
adc
pop
mov
jae
movsl
cmp
out
leave
pop
xchg
mov
mov
ror
prefetch
test
fbstp
or
cmp
jno
inc
mulb
cmp
es
rol
push
xor
xchg
cltd
adc
jecxz
mov
daa
add
or
out
adcl
sub
inc
cltd
lock
fwait
mov
adc
add
fstpl
lods
adc
xor
outsb
out
and
icebp
dec
inc
int3
jge
jle
inc
mov
orb
push
jle
imul
in
mov
scas
push
outsb
jnp
cmp
push
push
jnp
adc
dec
stos
ljmp
pop
xchg
loop
adc
mov
lods
cmp
mov
xlat
addr16
sub
sbbl
testl
arpl
adc
aas
push
mov
mov
xchg
lock
rorl
jp
bound
dec
pop
or
inc
or
cmp
pushf
mov
mov
punpcklbw
enter
dec
and
jnp
lret
push
or
xlat
cmp
push
jle
negb
out
lds
xchg
icebp
cmp
jns
imul
push
arpl
sti
adc
adc
test
xchg
cmp
jp
push
test
mov
adc
jnp
and
add
jnp
imul
sub
push
add
mov
nop
stc
xchg
adc
hlt
sub
rcl
gs
outsl
push
or
into
fs
sub
mov
ss
and
xor
pop
arpl
hlt
jbe
cmp
or
cmpsb
cmp
cmp
loope
fdivl
js
hlt
adc
dec
outsl
and
jb
loop
xor
outsl
push
mov
in
jle
nop
and
jl
and
out
enter
mov
mov
adc
iret
lcall
and
sarb
ds
dec
xchg
mov
fidivl
cli
jp
sahf
or
mov
rcrl
jp
icebp
push
cmp
lret
ljmp
lahf
sbb
sar
lock
mov
add
xchg
xchg
fwait
call
sub
push
cmpsl
lret
mov
addl
gs
xchg
sar
mov
pusha
mov
mov
lret
addr16
adc
lahf
push
addr16
push
mov
push
fmuls
lahf
inc
lock
pop
retw
dec
cwtl
data16
mov
sahf
cmp
outsl
sbb
es
lea
pop
loopew
mov
push
inc
jne
sbb
les
dec
pop
push
ret
dec
imul
cld
gs
std
bound
xchg
stos
clc
jmp
mov
add
pop
es
sbb
sahf
push
mov
mov
or
push
and
pop
dec
loope
aas
pop
pop
popa
js
cmpsl
orb
xchg
sub
sub
xlat
pop
lock
daa
mov
in
insb
adc
das
outsl
cmp
call
mov
inc
or
xlat
mov
push
test
fs
jl
sbbb
xchg
and
or
pop
push
pusha
pop
fs
int3
lods
xor
aas
push
adc
scas
jg,pn
pop
mov
sbb
in
or
data16
dec
aad
mov
and
push
add
daa
mov
out
fisubl
jmp
ljmp
xlat
fistpll
pushf
test
mov
add
dec
imul
loopne
mov
adc
stos
aam
or
fstps
cmp
mov
je
ret
scas
jecxz
test
xor
xor
mov
mov
sarl
pop
xor
jecxz
sub
jle
pop
xchg
jecxz
outsl
xchg
mov
push
mov
sahf
movsl
push
repz
or
scas
cmp
mov
jge
jle
movsb
fcmovne
mov
dec
sub
jne
lret
test
ds
sub
out
dec
or
popa
jno
bound
sub
out
mov
daa
mov
out
mov
fstps
add
mov
mov
sub
pop
jnp
cmpsb
outsl
lds
mov
enter
sub
jmp
sbb
test
pop
add
nop
or
jge
ret
out
pop
sahf
fsub
pushf
mov
jnp
loope
test
test
js
dec
es
lcall
jns
mov
mov
clc
lock
movsb
or
and
stc
mov
movsl
or
xor
cld
mov
xor
pop
sahf
mov
hlt
push
and
dec
int
fcoml
repnz
add
ds
ljmp
cmp
add
popf
ret
sub
adc
xor
stos
cmp
xor
daa
add
ret
inc
test
jns
jg
mov
test
xchg
push
sub
data16
pop
fdivr
call
out
call
ret
loope
loop
addl
sub
aam
dec
xor
inc
rcll
sti
test
inc
inc
pop
add
imul
int
jae
push
repz
jbe
jo
xor
sbb
mov
xchg
imul
lahf
add
sbb
lcall
mov
jmp
and
pop
js
pop
aad
mov
clc
pop
insl
adc
sub
lds
mov
lock
pop
sub
fsubl
shr
xor
dec
or
jmp
jmp
pusha
or
aaa
inc
clc
mov
outsl
es
mov
mov
xor
adc
mov
mov
lods
sub
outsb
mov
ds
and
xor
pop
je
sub
jo
cli
loopne
repnz
in
dec
push
mov
rcrl
les
mov
dec
dec
and
cmp
cmpsb
pop
pop
bound
es
xchg
jne
cmc
sub
mov
mov
add
imul
mov
jl
or
orb
pushf
push
sbb
dec
in
add
fs
call
lds
jnp
pop
mov
fidivrl
cld
inc
inc
inc
in
xor
addb
sub
pop
clc
cmp
in
ret
insb
push
dec
mov
push
mov
xchg
int3
cmp
xor
testb
test
cmp
or
lret
rorl
nop
mov
lods
outsb
xor
push
mov
mov
scas
loope
imul
punpckhwd
arpl
cmp
movsl
pop
nop
mov
sub
in
fs
pop
jo
xchg
mov
mov
mov
loope
jno
imul
movsb
mov
jp
mov
jnp
xlat
int3
jmp
xor
lcall
jge
add
jns
call
negb
jl
adc
inc
sub
add
sub
push
and
adc
mov
out
sti
ret
pusha
push
push
jp
adc
data16
sub
and
outsl
pop
jg
mov
push
lods
xchg
cli
ljmp
inc
adc
inc
call
xchg
inc
jo
push
cmpsl
mov
mov
rorb
ret
sub
mov
loopne
add
rcrl
sbb
cmc
or
jmp
andl
out
in
pop
push
stos
mov
inc
lock
int
popa
adc
push
decl
jno
push
dec
aad
jns
mov
xchg
adc
mulb
xor
test
lock
js
es
pop
dec
pusha
jg
test
repz
sbb
imul
icebp
lods
mov
xchg
pusha
jmp
adcl
mov
enter
or
jg
cltd
mov
out
jne
callw
mov
mov
jg
out
jae
fsts
add
or
bound
lret
fwait
mov
cs
iret
fs
mov
sub
mov
jo
xor
adc
and
mov
cmp
loopne
add
aaa
roll
scas
sbbb
sarl
loope
cmp
shrl
sub
fdivl
das
and
cmp
ljmp
dec
adc
add
add
mov
sti
fstpt
aaa
outsb
mov
ds
int3
cli
lcall
mov
fcomps
out
xchg
sbb
loopne
dec
sbbb
push
mov
and
mov
outsl
popa
jmp
jo
addr16
ss
out
add
popf
leave
xor
push
repnz
mov
call
sbb
leave
jmp
push
cmp
dec
or
mov
jecxz
jo
stc
xchg
rorb
sub
or
inc
cmc
cs
jb
xchg
fdivrs
daa
cmc
jecxz
fcmovnb
jns
or
daa
fisttpl
xor
xor
ja
les
out
jns
adc
mov
inc
pusha
int3
mov
cmp
fsubrl
rcr
test
mov
sub
cmp
cltd
inc
pop
pop
inc
std
and
lret
cmp
sub
cmp
out
mulb
clc
repnz
data16
hlt
dec
dec
in
push
mov
mov
ja
mov
inc
pop
cmp
xor
push
inc
iret
xchg
sbb
or
adcb
sti
fdivrs
lods
mov
nop
repnz
in
int3
pop
sub
xor
bound
popa
or
int3
adc
or
imul
sub
jmp
daa
sbb
fiaddl
lods
sub
rcrb
jno
mov
push
out
popf
fadds
in
push
cmpsl
mov
shrb
aaa
mov
xchg
push
cmp
sbb
gs
inc
mov
mov
js
and
cmpsb
xor
xchg
gs
repnz
mov
faddp
jne
mov
jb
mov
fwait
inc
jle
test
cmp
mov
and
enter
jecxz
arpl
movsl
js
mov
lcall
mov
xor
fcmovb
or
out
insl
ss
mov
add
ror
inc
push
and
rclb
dec
cmp
call
and
jle
int
int3
sub
xor
insb
jmp
add
mov
lods
fmulp
or
nop
push
dec
cli
add
into
aaa
push
push
sbb
lods
ffreep
adc
ss
js
daa
add
insb
icebp
mov
movsb
int
repnz
ljmp
pop
sbb
cmp
cmpsb
aad
xchg
outsb
loopne
and
enter
jns
fsubrs
call
scas
jge
sti
cmc
mov
jne
js
std
or
imul
jo
mov
xchg
sbb
or
ljmp
ror
dec
add
pop
lods
xor
sub
xor
shll
sub
mov
int
sub
mov
mov
jecxz
sub
mov
pop
jbe
jge
outsb
in
stos
mov
sub
sbb
and
mov
cmp
mov
fstpl
jo
imul
push
fcmovnbe
test
or
fisubrl
pop
pop
in
stos
mov
cwtl
xchg
dec
mov
arpl
add
fsubrs
aad
dec
xchg
dec
xor
dec
add
call
addr16
lcall
fs
mov
lock
inc
insl
pushl
out
les
rol
pop
dec
ds
mov
push
pop
xor
and
ds
push
mov
xchg
adc
mov
mov
lock
xchg
push
shl
mov
ficoml
lahf
jnp
jnp
push
mov
loope
hlt
test
cmp
and
pop
cs
and
test
xor
mov
adc
mov
sub
leave
sbb
cmp
and
and
fwait
or
xchg
inc
test
xlat
mov
icebp
xchg
jno
xor
mov
cld
das
mov
or
stos
nop
jne
pop
fs
push
inc
and
mov
test
jnp
fbld
mov
aam
xor
lahf
xor
ficomps
int3
pop
lods
stos
pop
xor
nop
cmc
adc
mov
mov
fisttps
adcb
mov
jne
sbb
push
test
cltd
and
les
xor
arpl
rorl
jae
int
test
lods
lock
add
scas
dec
cmp
popf
mov
or
hlt
jmp
lret
shrb
or
pop
sbb
shr
shll
ret
mov
cli
xlat
or
fst
mov
iret
lods
xchg
repnz
in
fcomps
fstpl
push
xorl
adc
xchg
ret
in
fldenv
sti
test
out
inc
addb
cmp
sbb
int
jmp
sub
mov
mov
xchg
out
ljmp
orl
inc
mov
dec
mov
fdivr
fnstenv
test
pop
int
imul
dec
fcmovbe
loope
mov
add
mov
xor
mov
fiadds
out
js
sbb
xchg
cli
or
xchg
test
jae
add
movsb
pop
inc
mov
stos
pop
mov
push
or
mov
and
ret
pop
jno
push
mov
lret
mov
outsb
mov
pop
scas
movsb
mov
xchg
mov
pop
mov
xchg
fwait
pushf
sbb
jbe
push
push
lahf
inc
xchg
repz
ret
and
jmp
in
jnp
mov
bound
cwtl
xchg
bswap
jge
aaa
add
and
mov
inc
cmpsl
mov
jmp
push
jecxz
jns
loop,pt
push
mov
mov
push
push
xchg
icebp
adc
lahf
cwtl
adc
pop
push
push
gs
sub
mov
xchg
and
outsl
sub
xchg
dec
test
pop
std
xchg
daa
and
sub
add
daa
repnz
and
sub
cmpsl
xchg
lods
xor
and
pop
mov
xlat
imul
roll
xchg
lahf
mov
sub
loopne
insb
adc
mov
test
dec
stos
or
and
arpl
inc
test
in
cs
out
enter
rorb
fcmove
mov
cmp
rcr
or
lcall
inc
cmpb
test
std
push
xor
dec
and
cmp
loope
ret
outsb
push
mov
into
sbb
negb
push
out
stc
dec
jnp
out
push
test
xchg
dec
mov
jge
and
loop
lods
dec
jp
add
and
es
ja
mov
and
xor
mov
xchg
xor
jmp
push
mov
add
fsubrl
ljmp
out
mov
out
xchg
ficoms
fwait
rolb
aas
into
ljmp
popf
xorl
sub
out
in
dec
addr16
repnz
popa
or
sahf
jae
pop
call
addr16
daa
mov
out
arpl
jle
fmull
xchg
aad
ljmp
jle
or
loop
out
into
add
rorl
xor
ljmp
inc
xchg
mov
dec
push
dec
lret
xchg
mov
or
outsb
cmp
jp
adc
test
lahf
inc
ss
cmc
aam
and
call
ja
mov
mov
movsb
inc
dec
jg
or
fists
mulb
movsb
ja
enter
inc
jns
xchg
pop
sbb
loop
push
outsl
dec
in
sbb
test
mov
lods
mov
mov
mov
mov
insl
dec
les
and
mov
mov
stos
test
lds
jne
sbb
ficomps
sbb
fists
dec
adc
jecxz
jmp
xor
out
arpl
popf
repnz
sub
dec
and
outsl
lods
cmpsl
push
cwtl
or
andb
mov
adc
sahf
dec
cmpsl
lret
mov
mov
or
repnz
hlt
push
push
add
test
push
push
inc
loop
movsb
in
rolb
ficompl
mov
rcrl
add
pusha
lods
mov
add
out
pop
lods
in
leave
xlat
adc
mov
popf
pop
sub
popf
xchg
adcl
das
in
in
jnp
mov
mov
push
cwtl
aaa
add
add
cmpsb
lds
gs
jae
pop
jmp
stos
clc
inc
cmpsl
or
mov
mov
jmp
sbb
subl
inc
repz
jl
sub
mov
sub
cmp
dec
lea
sbb
and
jo
repnz
repz
popf
jae
inc
filds
xchg
sbb
es
sarl
cmp
xor
and
push
pop
loope
hlt
mov
add
push
fisubrl
mov
push
push
mov
xchg
rclb
add
mov
mov
pop
pop
testl
into
fst
jp
dec
sub
jne
mov
lods
jmp
aam
sbb
xchg
or
inc
sub
mov
push
out
in
sarb
repz
xor
adc
mov
lea
push
loope
in
dec
sbb
stos
out
lea
dec
dec
jmp
movsl
sahf
sbb
into
adc
jno
jnp
mov
push
fmul
mov
sti
addr16
xchg
cmp
and
adc
jg
inc
mov
je
xchg
mov
stos
cld
test
mov
mov
cmpb
les
mov
test
sbb
mov
mov
fdivrl
push
dec
std
adc
push
daa
mov
das
loop
sub
outsb
or
outsl
ss
xor
and
je
push
data16
je
out
inc
jecxz
repnz
lea
sbbl
push
push
add
dec
repnz
adc
fldenv
lahf
jbe
out
inc
into
aaa
lods
inc
jecxz
test
cmpl
cmpsb
pop
cmp
dec
pop
fstpt
mov
insb
aam
xchg
ljmp
and
rclb
std
xchg
adc
pop
dec
aaa
pusha
popf
jle
mov
lret
inc
pop
push
lods
and
popf
mov
js
test
ja
cs
into
mov
pop
aam
and
rclb
push
shl
xlat
shlb
push
sbb
jno
push
adc
jl
mov
cmp
dec
mov
clc
xor
sbb
jecxz
test
gs
addr16
in
fists
arpl
cmpsl
xor
test
and
sub
adc
imul
inc
mov
dec
add
add
sti
push
daa
pop
mov
pop
push
cmc
je
mov
inc
daa
dec
filds
xchg
or
in
ret
dec
mov
cmp
adc
rol
sub
test
cli
int
sub
jecxz
push
daa
push
rclb
mov
push
cmp
sbb
cmc
fdivp
repz
test
dec
push
lea
lock
xchg
imul
out
fcomip
lcall
mov
adc
imul
int3
push
mov
lock
or
cmp
std
sub
in
add
sub
repnz
stc
xor
mov
or
test
or
cmc
repz
movsl
or
leave
call
mov
test
xor
cli
mov
cmp
pop
or
cmp
xchg
mov
in
sub
cmp
adc
int
sbb
rclb
push
dec
jl
cmp
bt
xor
jbe
ret
aam
xor
sbb
clc
out
xor
push
ss
or
xor
or
push
push
add
jnp
cs
or
mov
xchg
lret
cli
push
sbb
out
sub
shll
jmp
mov
push
enter
daa
fcmovnb
xchg
es
outsl
push
shlb
mov
mov
je
pushf
ficoms
shll
arpl
push
nop
adc
mov
sbb
and
stc
adc
fistpll
cmc
call
inc
sub
pop
popf
sbb
mov
data16
jmp
xchg
dec
sbb
pop
nop
pusha
mov
aad
into
xchg
lahf
faddl
mov
popa
cmp
ljmp
push
inc
cmc
pop
pop
push
mov
push
arpl
stos
insb
popf
add
sar
fsubr
or
xor
jbe
sub
in
sub
incb
pushf
pop
fidivl
mov
xor
cmp
jo
pusha
mov
sbb
push
adc
insb
in
sub
les
data16
loop
pushf
fcmovu
xlat
aad
in
cmp
mov
pop
lret
jl
mov
in
adc
mov
dec
js
xchg
inc
rorb
mov
sub
hlt
mov
or
push
icebp
and
adcl
sti
out
push
pop
adc
adcl
and
adc
mov
xchg
adc
jne
sahf
push
cmc
and
jmp
addr16
out
ja
pop
mov
stc
push
xchg
imul
pop
jo
xchg
cmp
in
inc
ja
mov
pusha
cmpsl
loope
loopne
jl
inc
sub
mov
lods
pop
fcomps
push
mov
xor
jo
jmp
bound
jecxz
xchg
cmp
pop
popf
gs
and
and
sahf
sbb
mov
xchg
adc
sbb
test
or
lods
cmp
inc
inc
or
icebp
cmp
xchg
cmp
mov
xor
testl
pop
test
div
and
sub
popa
idivb
test
jb
mov
inc
jl
jmp
pop
mov
and
or
ret
ds
lds
jg
mov
lea
fwait
sub
cwtl
ficoml
xchg
pusha
xorb
popf
out
shrl
cs
ret
xchg
dec
cli
mov
add
lcall
pop
fisubl
xor
xor
repz
cwtl
dec
sti
ret
test
outsb
loopne
mov
scas
repz
push
push
xchg
out
lahf
shll
or
lea
arpl
inc
outsb
pushf
fdivr
fdivs
jge
imul
inc
adc
xor
xchg
push
and
jmp
and
push
push
mov
mov
gs
add
pushf
push
enter
inc
int
cmp
lcall
imul
push
js
cld
movsb
mov
push
cs
or
jnp
push
mov
lahf
out
xchg
push
add
pop
lcall
outsb
into
out
adc
or
scas
cmp
repz
mov
or
mov
sbb
stc
iret
aas
ficomps
jno
scas
mov
not
bnd
leave
inc
adc
icebp
gs
and
outsl
jp
xchg
sbb
lock
pushl
inc
cmp
fsubp
jmp
sahf
scas
movsb
xor
push
jnp
add
outsl
xchg
inc
pop
mov
cmp
sub
insb
sahf
add
mov
xchg
sub
pop
mov
cmpsb
shrl
cmp
in
and
rcrl
mov
loopne
pop
mov
insb
sbb
out
movsb
daa
cmpsl
enter
orb
ret
cmp
fs
jge
ljmp
movsb
ljmp
adcl
mov
and
loop
xchg
testl
xchg
mov
loope
cmp
nop
popa
int3
cmpsl
int
xor
loope
popf
repnz
adc
lds
pusha
ret
adc
push
adc
test
mov
inc
insb
sub
icebp
ret
dec
dec
xor
jge
mov
cs
push
add
sub
mov
mov
mov
movsb
mov
dec
mov
out
mov
mov
rcr
inc
xchg
sub
lret
call
xor
xlat
mov
pusha
push
cmp
insb
fisubrs
and
cmp
xor
in
mov
or
ds
mov
fcoml
mov
outsl
xlat
decb
call
sbb
pop
cs
or
shll
xchg
push
sbb
shlb
pop
and
cmpl
dec
cmpsb
aam
ljmp
or
out
and
mov
imul
cmp
lret
mov
mov
mov
jl
mov
aad
cltd
mov
mov
outsb
in
imull
sbb
cmp
dec
xlat
sub
inc
jo
outsb
sub
aas
shll
jecxz
push
out
xchg
inc
loope
sbb
push
imul
and
cmp
cli
aaa
lods
sbb
pop
jl
aad
push
ret
mov
dec
xchg
test
or
lock
sub
fwait
out
and
insl
cmpsb
lcall
push
andb
sub
dec
rorl
mov
or
push
repz
add
fwait
adc
xchg
rclb
imul
push
fildl
cmp
mov
mov
jl
int3
push
xor
jne
and
imul
push
insb
inc
repnz
mov
fcoms
push
cmpl
loope
adc
fadds
dec
pop
adc
arpl
push
pop
jno
out
sbb
pop
and
dec
leave
iret
in
or
int
pop
out
or
popa
mov
rcrb
jecxz
add
adc
cmp
push
inc
add
xchg
or
pushf
arpl
and
push
stos
icebp
js
inc
mov
dec
and
and
mov
dec
xchg
aam
es
mov
in
inc
sbb
arpl
pop
mov
inc
into
into
xor
sub
sub
cmp
dec
jb
cmc
imul
stc
xchg
inc
jae
repnz
pop
cmp
inc
repz
lods
movsb
pop
out
lahf
aas
inc
lock
insb
imul
sahf
sub
and
insl
lods
cmp
inc
cmpsl
dec
pop
and
cmpsl
shrb
jg
add
inc
je
out
gs
mov
sub
mov
mov
cmpsl
sub
mov
inc
pop
loope
or
ss
mov
adc
cmc
fcompl
inc
xlat
push
or
imul
mov
xlat
lock
out
push
incb
gs
inc
jecxz
aad
icebp
xchg
mov
test
mov
jp
pop
sbb
dec
sub
cmp
frstor
mov
imul
mov
push
jne
or
mov
test
mov
in
insl
push
or
jae
cmp
push
fmuls
sbb
sub
pop
scas
or
mov
xchg
icebp
out
adc
loope
cmp
pushf
add
les
pop
fmull
popa
pop
rcrb
pop
push
cwtl
xlat
mov
cmp
rcrl
hlt
lds
dec
push
ret
mov
push
and
lea
out
cld
neg
stc
xor
stos
cmp
lret
cmp
lock
sarb
and
inc
mov
add
inc
loopne
sub
fcomps
stos
cltd
mov
jge
sbb
popf
adc
push
sbb
pushf
stos
add
ja
push
mov
mov
xchg
inc
adc
jle
outsb
xchg
inc
sbb
fnstsw
and
mov
cli
cmpsb
daa
cmp
cmp
adc
jmp
jmp
and
fistpl
jge
mov
pusha
cmpsb
int
jge
jp
fnstsw
add
jp
mov
jmp
xchg
fdivr
inc
or
in
test
mov
mov
enter
xor
and
sbb
test
jmp
movsb
sub
push
lret
pop
cmc
add
inc
imul
fcmovnu
incl
mov
test
fiaddl
fwait
jg
push
call
ja
mov
xor
push
lods
stos
sbb
outsb
mov
sub
push
xchg
dec
stos
iret
shlb
mov
push
cltd
jns
shr
dec
repz
or
pop
add
stc
mov
jg
scas
add
movsb
pop
mov
mov
in
sub
pop
outsl
cmpsb
adc
int3
dec
insb
fs
push
outsb
mov
dec
mov
bound
cmp
in
inc
pop
fidivs
lods
fsubrs
cmp
jnp
fs
or
push
inc
movb
ret
jecxz
pop
jmp
dec
mov
addr16
inc
adc
cmpsb
jb
idiv
and
stos
icebp
out
in
arpl
push
lds
jb
xchg
test
push
jl
faddp
sbb
ja
adc
daa
lods
sbb
ljmp
bound
outsb
adc
sbb
rol
cmp
and
and
push
in
push
nop
movsl
mov
mov
cmpsb
int
sub
icebp
push
js
xor
jge
popl
mov
repnz
les
adc
iret
cmp
push
xlat
lret
movsb
addr16
pusha
add
jmp
loop
std
rcll
aad
mov
pop
pop
lods
sub
sub
fdivl
add
jmp
dec
push
lods
xchg
or
cmpps
scas
repz
sub
mov
sti
push
call
aas
mov
inc
lret
dec
cmpb
inc
jge
sub
fstp
test
ljmp
nop
out
push
cli
or
test
jp
dec
mov
bound
pop
stos
stc
test
pushf
shll
lcall
dec
mov
dec
inc
ret
iret
xor
push
jbe
and
jecxz
cmpsl
rclb
test
test
int
dec
jecxz
push
xor
and
adc
int3
push
loopne
std
repz
ror
movsb
out
leave
stos
movsb
movsl
mov
pop
adc
int3
mov
adc
shll
and
inc
dec
sar
lea
nop
leave
cmp
push
das
outsb
rolb
in
enter
lahf
andl
shr
ret
insb
xor
into
sbb
mov
out
faddl
repnz
add
jb
sub
inc
add
aaa
je
push
int3
das
cmpsb
jnp
fidivl
xchg
xchg
stos
mov
sub
adc
mov
add
int3
ss
dec
js
cmp
pop
in
pop
stos
pop
ror
add
push
fistl
pushf
adc
xchg
in
or
in
push
cmp
fsubrl
push
pop
push
pop
movsb
sub
mov
insb
iret
popf
mov
adc
mov
fstpl
and
test
jge
mov
jmp
xchg
adc
or
cmp
xchg
jle
jbe
dec
mov
testl
movsb
jbe
leave
aas
sub
cmpsl
das
rorb
jne
or
dec
outsl
daa
test
cmp
mov
out
add
jo
ss
xchg
xchg
lods
or
xor
repnz
adc
add
pop
cmpsb
adc
dec
shlb
dec
loopne
leave
dec
inc
shrl
fdivl
push
mov
ljmp
add
lret
daa
fldt
pop
es
push
rcll
xchg
scas
push
jae
aas
loopne
aad
dec
pop
out
icebp
repnz
sbb
adc
adc
lods
mov
ror
mov
cmc
outsl
jbe
pop
sub
jns
ror
imul
test
outsl
pusha
cwtl
pop
pusha
les
mov
add
push
ret
push
xchg
push
out
cs
std
sbb
jnp
in
test
aam
and
adc
fs
aas
inc
enter
je
cmp
mov
inc
mov
pop
sbbl
push
sub
or
cltd
pushf
push
testl
mov
sub
push
pop
or
arpl
out
inc
add
and
stos
fs
adc
xor
push
push
add
clc
lods
adc
or
je
or
sbb
adcl
dec
mov
pushl
sbb
das
push
pop
cmp
dec
leave
push
inc
cltd
sbb
std
push
movsl
sbb
scas
popa
jo
arpl
pop
inc
enter
fdivs
push
and
loop
pusha
insb
test
and
mov
movsb
and
pop
dec
movsl
push
sub
xor
add
bound
nop
iret
mov
push
adc
in
cmp
or
jg
adc
aas
push
ror
sub
iret
mov
cmp
xor
je
gs
lock
in
andl
push
test
lods
scas
and
push
fsts
iret
sbb
sti
or
cmp
pop
add
push
add
jbe
addb
dec
dec
xor
cmp
mov
and
cmc
push
cmp
adc
imul
fsts
add
repnz
xchg
out
mov
les
push
repnz
mov
lock
test
in
mov
stos
pop
imull
test
lret
xchg
out
mov
mov
loopne
xor
int3
push
cmp
jo
add
orb
fisubrs
sub
lret
pop
sub
repnz
jg
or
pop
sub
push
hlt
cmpsl
ljmp
test
call
aad
test
add
xchg
popa
rcrb
mov
loopne
cmc
xor
adc
in
fdivrl
sub
inc
idivl
les
dec
popa
clc
ret
inc
int
lahf
mov
rclb
cmp
jns
xlat
les
outsl
cltd
enter
cmpsl
jle
mov
stos
outsl
outsb
xor
scas
ljmp
scas
sub
lcall
stc
sbb
sub
in
mov
jo
adcl
es
cltd
dec
xchg
mov
push
inc
sub
imul
pop
inc
ret
sbb
push
pop
xor
repnz
sub
insb
xchg
int
fsubr
mov
cmp
negl
cmp
inc
call
out
sbb
xchg
sbb
loop
jno
xchg
dec
mov
pusha
insl
les
pop
push
popa
or
ss
shrl
xlat
cmp
addl
nop
ret
jae
stos
pop
mov
mov
idivb
inc
cmp
cmp
rcl
fs
out
cmp
ret
mov
addr16
or
and
jb
sub
mov
popf
mov
outsb
inc
bound
sbb
roll
mov
lods
push
xorb
test
pop
lahf
test
cli
sahf
fiaddl
push
imul
add
stos
lahf
shll
fdiv
data16
mov
add
rorb
mov
fiadds
jo
xchg
cltd
push
pop
daa
pop
xchg
aad
insb
mov
in
jbe
xor
mov
mov
outsb
ja
mov
hlt
push
faddl
repnz
mov
adc
xchg
movsl
mov
dec
das
gs
cmp
jg
popa
inc
push
js
mov
push
sub
aas
add
into
xor
mov
mov
jo
decb
popa
pop
mov
adc
rcrb
ja
or
outsl
xlat
cli
out
dec
mov
and
push
ja
ljmp
roll
inc
js
hlt
mov
xlat
das
push
push
js
into
add
icebp
icebp
outsb
inc
and
out
mov
out
dec
push
iret
jae
mov
xor
jmp
test
lcall
push
jno
mov
and
fcmovnu
sbb
inc
mov
push
jp
and
lret
mov
push
into
mov
inc
jl
sahf
mov
push
lock
sbb
addr16
insl
mov
faddl
addr16
adc
push
lret
mov
xor
rclb
jle
add
xchg
push
adc
enter
lea
xchg
jnp
test
test
sbb
fsubs
sbb
inc
sbbb
lret
outsl
rorb
mov
outsl
push
push
push
into
dec
pushf
inc
mov
mov
div
in
mov
insl
cmp
stos
aad
jle
in
hlt
dec
imul
sarl
divb
push
adc
and
scas
test
add
inc
push
jg
aad
nop
mov
push
dec
jle
xchg
ja
jb
mov
mov
sub
loopne
lock
int3
inc
add
and
rcrb
aas
cmp
lds
adc
fldt
call
mov
sarl
adc
test
push
mov
into
or
pop
in
cmp
rol
cmpsb
lds
aas
xchg
ret
and
add
imul
mov
fcomps
xchg
sub
fstl
ja
lret
mov
js
and
mov
roll
sahf
daa
mov
inc
outsl
fistps
jb
xor
mov
fisttpl
and
push
nop
xchg
mov
rcll
je
xor
rorl
inc
lret
pop
insl
lea
jns
in
push
sbb
sub
pop
cmpsb
es
cmp
jmp
mov
adc
lock
fildll
insb
adc
lds
push
jnp
rcll
loope
daa
and
mov
inc
hlt
repz
pop
loop
push
rcl
subl
adc
lret
jmp
or
ss
int3
cli
jmp
adc
mov
dec
mov
and
jle
lods
ds
stos
int
lret
dec
ljmp
cli
pop
mov
push
sbb
ss
jl
insl
loope
sti
dec
sbb
pusha
les
mov
sub
or
sbb
and
negl
mov
or
outsl
mov
mov
icebp
outsb
sub
daa
cmpsb
les
ds
push
mov
dec
xor
pop
adcb
out
adc
imul
sub
sbb
adc
shr
icebp
push
js
je
pop
gs
in
mov
sub
push
outsb
push
sub
test
jns
xchg
loopne
enter
dec
rcrb
test
or
sbbb
cmpsb
cmp
mov
inc
jae
xchg
lds
repnz
sbb
sub
sbbl
xchg
push
sub
inc
in
popf
add
lock
mov
mov
sub
mov
inc
push
sub
xchg
repnz
sti
leave
popa
and
mov
aas
inc
jecxz
hlt
xor
inc
or
cmp
mov
push
pop
int3
int3
or
jb
stos
out
out
stc
cmp
mov
jge
ss
xchg
add
repz
pop
push
push
shrl
mov
cmp
dec
stc
mov
mov
dec
adc
lods
subb
push
call
lret
cltd
scas
lret
push
or
adc
mov
jle
fadds
mov
cwtl
xor
in
ret
repnz
fsub
clc
push
xor
add
shrl
cwtl
aas
out
xorb
cmp
mov
fs
jnp
and
movsl
int3
add
leave
mov
test
cmp
fld
cmp
push
dec
add
lcall
ljmp
cmpsl
jne
dec
das
mov
fwait
xor
mov
addl
mov
loop
fistl
xor
xchg
lods
imul
lret
loopne
test
mov
jecxz
push
mov
cwtl
int
and
jg
fdivrl
pop
sub
mov
pop
jl
int3
subb
pop
xor
cmc
sahf
ds
je
mov
mov
daa
lret
cmp
sbb
jnp
add
adc
mov
add
clc
mov
scas
pop
ja
popf
mov
leave
xchg
push
xchg
inc
cmp
lcall
mov
mov
out
mov
cs
lods
fldcw
repz
aaa
rcrl
test
rep
cmp
mov
decb
sbb
adc
cmpsl
add
xor
lea
fsubrl
xor
icebp
and
clc
cmc
cwtl
fdivs
rcll
and
jge
idiv
mov
bound
adc
mov
xchg
test
popa
shlb
mov
aaa
mov
repz
mov
xor
dec
inc
rolb
adc
rcll
jg
push
fisubs
out
and
int
insl
xchg
push
shrb
loope
loopne
add
jns
mov
out
arpl
int
sbb
testl
push
loope
mov
ret
inc
in
cmp
call
out
pop
xchg
inc
cmc
test
pop
sub
sub
ds
push
sbb
adc
mov
inc
mov
mov
push
jbe
pop
dec
movsl
cmp
adc
push
fsts
mov
xchg
push
mov
mov
int3
and
pop
xor
outsl
aaa
sbb
add
pop
int
sbb
fs
mov
arpl
fisubs
xor
cmp
mov
hlt
mov
mov
enter
adc
add
sbb
add
pusha
aaa
mov
dec
jns
inc
rcll
mov
push
sub
jg
jle
insl
notb
jle
push
fcomip
pop
or
sub
xlat
and
xchg
enter
mov
sti
cvtps2pi
xchg
outsb
std
or
stos
sarb
into
inc
xchg
jmp
inc
insb
pop
lods
or
fldl
mov
fdivrl
xlat
or
jecxz
jg
dec
sub
ss
scas
pop
imulb
add
bound
sub
cmp
or
mov
mov
hlt
fs
xchg
adc
mov
test
dec
stos
data16
insl
mov
dec
dec
mov
lods
stos
fstp
cltd
outsb
sub
mov
add
imul
outsb
cmp
mov
xchg
mov
fildl
or
inc
inc
lahf
cltd
inc
xchg
mov
cmpsb
inc
aad
arpl
push
push
fcoml
test
cmp
decb
lcall
jmp
pop
xchg
mov
stos
vmovupd
std
int
daa
aas
ljmp
pop
sub
imul
fbstp
xchg
cmp
loope
repnz
popf
mov
pop
call
mov
sbb
mov
repnz
arpl
pop
cmp
cmp
fwait
leave
inc
xchg
push
int
inc
inc
ja
push
mov
fnstcw
ljmp
mov
or
jno
test
jl
push
or
xor
sti
cmp
push
loopne
imul
fisubrl
or
add
xchg
add
andb
inc
movsl
fistpll
push
mov
inc
push
es
pop
dec
jle
mov
ds
popf
je
nop
dec
add
lahf
in
xor
movsl
shlb
xlat
jp
sbb
mov
and
push
add
scas
stc
sbb
rcrb
jmp
jg
insl
pop
xchg
mov
out
and
or
pop
adc
and
enterw
ljmp
jae
jmp
cmpsb
lea
mov
pop
loop
ret
out
mov
loope
daa
mov
popa
popa
mov
jo
mov
nop
lds
jno
and
mov
out
dec
test
cld
xor
inc
les
call
dec
cs
loopne
cmp
xchg
jbe
movsb
roll
shll
pop
lret
adcb
mov
or
mov
das
push
js
subb
adc
mov
repz
push
inc
test
cmpsl
scas
pop
ret
out
sarl
mov
ds
push
push
movsl
ja
aas
push
inc
cmpsb
adcb
lahf
mov
pop
add
pop
push
or
bnd
mov
xor
into
loope
testl
insb
mov
pop
mov
into
add
mov
out
pop
jo
sbb
repnz
sub
imul
jle
cwtl
mov
sbb
or
pop
loop
dec
ret
push
jbe
lods
faddl
inc
daa
sbb
repnz
mov
mov
sbbl
pop
lods
xlat
aaa
ss
fadds
xchg
rcll
dec
fs
add
jmp
push
jne
rcll
test
pusha
call
insb
icebp
fcmovnu
ja
mov
sar
add
arpl
inc
in
popf
push
clc
fidivrl
push
test
jns
add
jo
inc
ret
or
inc
fadd
rolb
dec
out
test
adc
insb
jle
inc
shlb
ret
sbb
cmp
popa
pop
jb
mov
push
mov
or
dec
mov
ret
ds
mov
dec
jbe
fcoms
mov
std
sub
push
ds
mov
inc
jl
adc
imul
loop
or
jmp
mov
addb
ds
push
cld
mov
adc
cmp
push
jle
xor
je
std
xlat
shr
sub
cmpsb
xchg
add
bound
add
std
jns
fdivl
repnz
or
xor
ja
aaa
mov
scas
sub
xchg
bound
aaa
in
mov
jnp
push
out
orl
mov
sbb
jnp
inc
pop
aaa
addr16
sub
aam
push
pusha
ss
or
inc
pop
inc
mov
or
dec
lret
pop
inc
inc
cwtl
out
mov
shlb
mov
dec
nop
jmp
push
ss
mov
jg
mov
jecxz
out
mov
mov
in
mov
pcmpgtb
andb
repnz
and
sub
fwait
test
imul
cmp
and
xor
das
mov
add
mov
ret
mov
repnz
test
dec
pop
add
jne
mov
jnp
clc
or
xor
pop
adc
sub
stos
jo
cmp
repz
movsl
or
int
mov
mov
ret
sub
lds
aad
mov
sub
push
mov
fidivrs
shrb
dec
mov
inc
subl
xchg
stc
imul
imul
js
cltd
imul
mov
xchg
cmp
push
aam
mov
mov
outsl
mov
adc
repz
mov
xlat
mov
sahf
push
enter
fwait
jo
sar
mov
iret
enter
aaa
ljmp
lds
mov
pop
les
inc
sub
push
sbb
int
sbb
jbe
or
mov
sbb
ror
aam
arpl
popl
scas
jge
mov
aaa
insb
pop
pop
sahf
cmp
cltd
push
clc
int
dec
ss
cmp
push
cmp
inc
call
hlt
jp
dec
les
cmp
jne
es
out
mov
icebp
clc
push
inc
fs
jae
push
ficomps
cmpsb
imul
test
scas
rcll
mov
lea
mov
mov
inc
hlt
push
xchg
or
jmp
mov
or
lcall
push
inc
dec
adc
mov
sbb
dec
bnd
clc
sub
lret
cmp
cmp
cld
xchg
xchg
jns
mov
mov
push
insb
mov
ss
les
aaa
mov
and
adc
ljmp
out
xor
jns
cli
mov
xchg
xor
imul
sbb
pop
mov
gs
hlt
cmpb
mov
sub
mov
cmpsb
shrb
push
cs
xor
inc
adc
mov
or
push
adc
fcmovne
push
in
data16
and
mov
xchg
hlt
fsubrs
mov
lds
add
jb
xchg
js
lret
xchg
ljmp
cs
add
mov
out
or
fimuls
mov
and
mov
dec
xchg
out
sub
push
pop
addb
push
cld
xlat
push
cmp
xchg
fisubrs
add
add
movsb
cmp
xchg
out
sub
adc
arpl
cltd
sbb
inc
inc
movsb
add
mov
jecxz
repz
int3
test
icebp
aam
int
cwtl
outsb
or
or
stos
sub
dec
cld
xchg
fcoms
lahf
iret
add
out
arpl
aam
ss
xabort
out
insb
or
mov
and
and
lea
aaa
sarl
rol
pop
add
dec
std
or
inc
cmp
mov
xchg
or
icebp
or
xlat
cmp
push
inc
push
cmp
push
adc
ret
outsl
inc
orb
sbb
mov
clc
movsl
hlt
cmpsb
shll
repnz
cwtl
pusha
aaa
dec
add
jnp
loope
push
and
pushf
negb
insl
mov
mov
xchg
sub
inc
daa
je
aad
add
xor
ret
sub
xchg
inc
push
addl
mov
cmp
mov
scas
rcl
cmp
add
loope
lret
jnp
sti
popf
clc
in
push
pop
data16
dec
movsl
decl
fdivrs
loope
cltd
mov
mov
sub
xchg
mov
xchg
stc
cs
lds
mov
push
pop
push
jno
sti
imulb
pop
sbb
arpl
push
push
xor
outsb
xchg
std
enter
mov
mov
push
jbe
xlat
cmp
subl
sbb
insb
pop
jle
or
lcall
pop
and
or
lods
inc
cmpsl
ret
and
sarl
iret
dec
pop
pop
xchg
and
loopne
mov
jg
movsl
inc
repz
out
cmp
push
xor
ds
jno
xchg
push
movsl
jmp
push
loop
aam
fwait
aad
mov
or
xor
dec
or
add
scas
inc
pop
xchg
adc
iret
int
add
test
mov
cltd
or
bound
subb
maxps
int3
push
and
xchg
sub
and
or
aad
lahf
add
das
fbld
cmpsl
cmp
push
mov
ss
and
adc
push
sub
push
add
clc
mov
inc
sbb
aam
movsl
sub
sbb
jp
mov
add
or
inc
lcall
mov
scas
out
les
xchg
add
shlb
test
xor
sahf
ret
inc
mov
mov
adc
mov
jne
sar
mov
add
jae
dec
sub
or
mov
fsubr
fistl
cmp
xor
and
and
or
sar
cltd
and
in
mov
mov
lret
sub
cmp
push
xchg
mov
sti
imul
mov
jns
and
mov
cmp
not
mov
or
pop
pop
pop
inc
mov
cwtl
mov
mov
fdivp
add
jb
xor
sahf
or
mov
jge
inc
xchg
xchg
sbb
bound
fimull
mov
jg
out
das
dec
fimuls
mov
iret
jge
cmc
jecxz
into
mov
popa
xor
or
ds
cs
je
test
and
pop
bound
mov
and
and
fistpl
pop
out
sub
xor
sbb
sbb
shrl
sbb
arpl
cld
xor
xor
fcomp
jg
mov
mov
ret
gs
sub
fnstenv
fcom
jo
aad
dec
xchg
mov
sbb
jb
nop
mov
mov
xchg
and
aad
mov
adc
repnz
add
xchg
sti
cmpsl
or
roll
and
in
jg
jo
mov
lahf
or
sbbl
adc
mov
mov
lods
test
or
xor
shrb
push
rol
rcr
jecxz
pop
and
jo
out
stos
pop
xor
cmp
xchg
mov
test
jne
cmp
pop
cltd
mov
adc
and
jge
xchg
dec
mov
loopne
movsl
and
push
push
jecxz
inc
stos
xor
jo
jne
mov
loopne
mov
inc
movsb
ret
xor
dec
inc
jbe
test
fwait
shll
mov
ds
out
pusha
ljmp
jns
pop
ss
or
lea
push
jp
push
lock
adc
lret
pop
bound
fstps
add
cmpsl
jns
sbb
mov
inc
fsts
dec
mulb
pop
ds
inc
inc
mov
sbb
push
sbb
fwait
enter
jbe,pt
lahf
pop
jle
shrl
push
lds
adc
mov
xchg
push
xlat
mov
jbe
jno
mov
std
sbb
mov
cmp
popa
outsl
cmpb
stos
lock
int
enter
mov
pop
lods
xchg
jl
xor
in
push
push
pusha
out
sarb
rol
dec
test
pop
rcll
sbb
imul
xchg
fbld
mov
mov
xor
xchg
cli
sbbb
mov
into
and
frstor
lcall
pop
sub
psubusb
sub
dec
rcll
mov
shl
loop
cmp
jno
or
test
test
fbld
subb
orb
xor
test
xor
sar
repz
jg
jecxz
stc
or
xchg
out
and
cmpb
mov
mov
outsb
push
iret
dec
push
jle
shrl
and
push
fimuls
xchg
mov
das
dec
and
lret
xor
lret
popf
xchg
mov
dec
sti
cmp
sub
fs
jmp
xchg
push
out
cmp
xor
cs
sbb
sbb
stc
ret
rolb
mov
cli
scas
test
ret
ficoms
inc
subl
stc
pop
adc
stos
push
cmp
int
movsb
fcmove
adc
mov
outsl
rorl
mov
nop
hlt
jns
lods
push
and
xor
mov
cmpsb
cltd
jmp
mov
cmp
sbb
sub
scas
dec
adc
add
jns
inc
fiaddl
daa
lret
mov
leave
stos
pop
popf
pop
popf
scas
add
orb
sbb
cli
xor
jl
insb
mov
arpl
adc
lahf
mov
lret
pop
stos
xor
jge
inc
xchg
or
sti
xchg
outsl
adc
test
ret
add
sub
jb
int
or
jmp
incl
jbe
inc
aaa
mov
test
mov
sbbl
cld
jecxz
mov
popf
or
lea
dec
or
mov
xchg
push
dec
adc
pusha
test
in
mov
in
fcmove
lea
mov
test
push
mov
add
and
loop
ret
xchg
inc
sub
sbbl
mov
mov
dec
neg
pop
ds
inc
or
and
pop
std
ficoml
and
push
addr16
clc
push
mov
jmp
inc
js
jbe
dec
mov
and
dec
adc
std
dec
push
cmp
xor
sti
hlt
ficoms
jmp
mov
orb
or
jle
mov
gs
pop
lds
ja
test
sub
in
movsl
ret
push
popa
and
mov
lods
stos
das
adc
dec
repz
jmp
nop
aam
cwtl
add
jg
aad
jo
adc
aaa
mov
mov
fstpt
sar
orl
adc
pop
daa
mov
pop
pop
xor
adcl
xchg
xchg
inc
cmpsl
scas
enter
stc
cmp
push
stos
fidivl
sub
mov
push
jbe
int3
lret
iret
pop
enter
push
or
adc
out
ret
leave
push
popf
les
cmpsl
lret
sbb
and
stc
pop
jmp
out
xor
jb
mov
and
pop
mov
add
fwait
mov
lret
cs
mov
sub
push
push
stos
sub
mov
xchg
je
mulb
bound
or
xchg
add
fisubl
iret
adc
mov
pop
inc
je
sbbb
es
fdivl
push
nop
dec
cmp
popa
mov
cmovbe
daa
inc
sahf
mov
roll
or
cmp
ljmp
fnstcw
iret
pusha
insl
mov
xor
or
popf
std
imul
cmp
cld
mov
dec
and
hlt
pop
and
sub
or
pop
popa
xchg
and
rol
psrad
mov
rcrb
or
and
pop
adc
rcrb
dec
mov
aam
mov
mov
test
jnp
jmp
mov
fsts
notl
and
mov
in
push
pop
loope
dec
mov
roll
xchg
rcrl
sbb
mov
push
aaa
inc
xchg
sub
mov
in
shll
add
imul
addb
mov
mov
pop
mov
xor
cli
jb
outsb
add
mov
xchg
ds
out
push
push
pop
push
lock
adc
xchg
cmp
jno
mov
mov
sahf
lahf
scas
fnstsw
cmp
xchg
add
pop
mov
dec
lods
sti
dec
daa
mov
adc
cld
jg
adc
xchg
dec
scas
test
mov
inc
jg
rorb
adc
mov
into
mov
and
and
fldenv
and
mov
out
leave
add
and
cmpsl
mov
enter
outsb
jae
xchg
lods
mov
dec
in
dec
push
and
mov
movl
out
roll
sub
sbb
add
push
pop
inc
pop
push
fs
xlat
inc
mov
xchg
mov
push
adc
in
inc
daa
dec
and
xchg
dec
scas
dec
cmp
or
add
cmp
pop
mov
fstl
xchg
insb
sbb
out
and
mov
sub
or
lock
push
push
or
rolb
push
out
sbb
adc
or
popa
data16
add
mov
enter
mov
add
adc
mov
test
cmp
mov
or
out
mov
xchg
push
enter
lret
mov
inc
fidivl
shrb
xchg
cmp
je
outsl
pandn
xchg
sbb
gs
cmp
mov
add
push
push
cld
mov
fwait
xorl
popa
cmp
jle
shll
int3
imul
add
fcomp
fldcw
sbb
fists
les
mov
sti
cmp
ja
aam
lock
sub
repz
mov
je
dec
pop
lods
imul
xchg
xor
in
cmp
cmp
inc
mov
dec
js
jo
daa
jl
repz
xchg
int3
inc
in
xor
ror
bound
divb
shrl
outsb
divb
fisttps
jg
ljmp
into
rclb
jg
push
pushf
jbe
stc
out
sbb
pop
mov
nop
jae
stos
pop
out
jg
loope
sbb
sbb
outsl
lock
mov
xchg
cwtl
push
test
dec
rcrl
cmp
and
leave
or
nop
dec
aad
loop
popf
js
shl
fs
pop
adc
or
or
jmp
dec
gs
sub
jle
push
dec
dec
add
popf
mov
pop
lock
shlb
xor
and
xchg
or
or
pop
mov
mov
call
scas
push
es
pop
dec
sbb
js
repnz
out
das
sti
mov
mov
int
movsl
test
ds
push
mov
int3
mov
inc
icebp
out
jbe
psubusw
mov
sub
add
sub
add
cmp
icebp
jnp
imul
lock
movsb
sub
xor
sbb
imul
sbbb
mov
xorb
loop
push
dec
mov
stc
fildl
mov
jmp
mov
or
mov
jae
aaa
aad
ss
xchg
pop
and
xor
xchg
sub
dec
movsb
arpl
mov
fldenv
xor
es
outsb
jmp
imul
xchg
push
in
mov
add
inc
dec
dec
mov
xchg
inc
outsb
and
sbb
leave
shll
dec
lret
and
inc
jns
data16
push
mov
add
xor
or
xor
loopne
shrb
xor
inc
iret
xor
dec
mov
mov
mov
adc
bound
ret
add
vpsraw
imull
mov
aad
pop
cli
push
jp
pusha
dec
incb
repz
cs
push
fmulp
imul
mov
xor
add
cmc
bnd
int
add
pop
test
xchg
cli
mov
inc
push
mov
inc
fdivrl
in
lahf
mov
in
imull
push
repz
in
cmp
mulb
push
adc
arpl
int
jl
cmp
rcr
inc
or
jecxz
mov
xor
dec
por
test
dec
dec
push
cwtl
popa
inc
mov
cmp
add
mov
sub
and
lret
ja
lea
movsb
out
cmp
movsb
daa
push
adc
cwtl
loope
fsub
pop
push
sbb
outsl
xor
rcl
aad
shlb
iret
add
lcall
push
ljmp
cmp
sbb
lcall
stc
daa
xor
push
icebp
add
das
repnz
sbb
fucomp
dec
xor
cmp
insb
subb
das
add
pop
push
cli
shll
test
pushf
mov
or
push
je
mov
dec
in
mov
pop
cli
xchg
daa
incl
push
add
mulb
repz
ret
sahf
das
xor
mov
adc
push
cmovno
dec
xchg
sbb
loope
jbe
cltd
pop
dec
inc
xor
sbb
or
mov
icebp
xchg
push
in
movsb
adc
xchg
mov
out
dec
mov
pop
inc
pop
dec
mov
jb
pop
jno
xchg
pop
push
jbe
int
mov
xor
sub
decl
and
pushl
lcall
mov
jb
stos
push
push
testb
fs
in
jb
fcomip
mov
add
icebp
inc
add
xor
cli
mov
int3
aam
popf
in
jg
mov
sub
xor
out
pusha
out
push
imul
pop
pop
cmc
ds
xor
inc
call
pop
outsb
mov
cwtl
push
or
mov
and
dec
push
add
or
in
pushf
daa
imul
adc
out
push
mov
mov
pop
into
mov
and
mov
add
inc
fs
lcall
outsl
mov
repz
push
xlat
xchg
div
or
pop
or
jge
fdivrs
push
lahf
mov
xchg
mov
mov
lods
mov
dec
sub
pop
fidivs
nop
cld
pop
sbb
cltd
repnz
lret
cmpsb
ds
shlb
cmp
shrb
or
ret
scas
pop
sbb
cld
int
fsub
sbb
lret
xchg
fucomi
cmp
jo
sub
pop
pop
mov
cmpsb
mov
jne
cltd
sub
push
lods
int3
push
pop
sub
add
jge
pop
push
or
cmpl
pop
pop
imul
cmc
into
lahf
outsl
es
insl
push
jmp
fbstp
and
xlat
fdivrl
fiaddl
cwtl
jo
cmp
mov
push
cmp
and
add
mov
cwtl
mov
mov
mov
inc
faddl
aam
fucom
cmp
scas
andb
jle
shl
test
idivl
mov
in
sbbb
mov
lods
insb
xor
add
dec
out
iret
xor
mov
xchg
push
clc
nop
cmpsl
rclb
cmc
ret
scas
fsubr
push
and
xchg
sar
mull
lret
xchg
dec
push
cmp
inc
push
adc
pop
push
bound
popf
mov
cs
arpl
inc
lods
xchg
inc
mov
cmpsb
enter
cld
push
test
je
xor
xchg
push
cmpsl
sub
xchg
fstpl
xchg
fnsave
push
jmp
push
int3
or
loopne
adc
sbb
in
sbb
or
insl
pmulhuw
leave
stos
and
pop
and
mov
test
jmp
lods
xor
lahf
push
push
je
or
xor
iret
loopne
cltd
pop
push
pop
xor
push
test
out
mov
std
xchg
sahf
adc
dec
push
jle
dec
cmp
test
clc
push
adc
outsb
fnstenv
test
lahf
jnp
fcmovnu
pop
dec
cmp
je
push
lods
and
scas
lock
lods
cmp
pop
aas
mov
popa
out
mov
xchg
jbe
jp
repnz
data16
movsl
cmp
sbb
xchg
jno
xor
cwtl
push
inc
lock
add
xchg
pushf
subl
nop
jge
sub
out
stc
dec
aaa
mov
inc
out
sahf
lea
pop
dec
repnz
jno
std
pop
aad
ret
xor
into
test
lea
xor
popf
int
push
movsl
dec
push
mov
imul
xchg
or
int3
data16
ljmp
sub
dec
idivl
mov
and
sub
push
pop
jb
jne
cmc
sub
repz
sub
clc
insb
sub
cli
ret
loopne
pop
cwtl
push
sar
jmp
int
std
mov
xchg
inc
loope
pop
data16
xor
incl
mov
fsubrp
sub
mov
lcall
xor
test
das
adc
hlt
and
test
pop
aam
mov
out
sahf
movsb
pusha
xchg
sub
lret
xor
jb
cli
push
aaa
shrl
sbb
dec
mov
cmp
pop
addl
mov
shl
xchg
je
sti
lcall
lods
pop
loope
jno
push
jle
je
dec
lahf
sub
xorb
pop
push
xchg
push
lea
inc
rcrb
dec
in
jg,pt
sbb
pop
fisubl
push
incl
cmp
adc
testb
dec
lcall
and
inc
addl
jg
in
aad
inc
rorb
orl
bound
pop
sti
pop
cld
mov
adc
bound
nop
sbb
pop
daa
sub
out
loopne
pushf
popf
insl
mov
dec
mov
fwait
gs
cmp
cmp
push
sub
loop
jmp
fwait
sub
adc
cld
lods
add
mov
push
jo
cltd
jge
xor
mov
mov
in
mov
jno
inc
mov
sahf
ss
shl
fisttpl
dec
sarb
add
roll
pushf
or
jp
push
pop
int3
notb
mov
rcll
cmp
push
xchg
jo
cs
shll
cmp
scas
ljmp
lods
jbe
sbb
xchg
jae
jmp
xchg
cmp
mov
and
pop
mov
mov
ss
in
or
nop
movl
add
and
sub
mov
out
imul
cmp
push
lret
sbb
jae
lods
dec
outsl
dec
push
enter
or
lahf
imul
rclb
movsl
mov
push
or
insb
jl
xlat
in
pop
fdivrl
xchg
movsl
cmpsb
lcall
mov
call
inc
cmp
sti
call
loope
js
movsb
ss
insl
add
inc
ret
mov
xchg
and
movsl
mov
add
jne
mov
sbb
cmp
add
push
push
xchg
sub
sbb
bound
jmp
into
clc
outsb
mov
pop
jp
or
js
inc
scas
ret
pop
cs
jb
mov
lods
inc
add
mov
cmpsl
stos
inc
cmc
push
lret
mov
dec
out
lods
mov
xchg
cmp
aas
stos
test
dec
push
dec
xchg
je
mov
adc
cltd
sbb
aas
test
loope
daa
inc
sub
hlt
fiadds
xor
pop
mov
pushf
xchg
push
addr16
cmp
adc
ds
lahf
shrl
mov
xchg
jmp
jns
fcomp
out
jg
shlb
dec
jo
les
lea
jl
xor
push
imul
test
test
lods
cwtl
inc
ljmp
xorb
mov
jns
dec
xor
add
scas
enter
cmp
jnp
in
fnstsw
mov
xchg
cmpsl
push
mov
mov
outsb
out
add
jns
sar
cmp
jae
push
jmp
insb
and
push
stos
xchg
pop
lahf
out
icebp
and
jb
lods
jge
and
fs
mov
cmc
js
cmp
fsubr
mov
pop
mov
or
jae
xchg
shrl
mov
shlb
cmpsb
xchg
in
sahf
sub
lahf
mov
js
or
mov
jl
mov
lahf
lock
test
out
test
push
pop
bound
rcr
jecxz
xchg
push
lds
mov
shl
cld
popa
mov
xor
mov
jno
out
scas
dec
fwait
or
in
cwtl
adc
iret
sbb
cli
sub
push
mov
jg
xchg
xchg
movd
mov
adc
movsb
xlat
adc
or
jp
pop
adc
mov
rcr
int
rcll
out
mov
scas
cvtps2pi
les
rorl
and
xor
and
insl
faddl
movsb
enter
adc
out
fcompl
push
std
lock
icebp
dec
adc
fwait
imul
imul
nop
and
and
pusha
cli
push
jecxz
dec
int
jae
movsl
es
jecxz
pop
ja
jecxz
out
or
stc
add
mov
jne
lahf
pop
je
xor
dec
xchg
out
sub
popf
inc
stc
rorb
cmp
xchg
lcall
pusha
std
fcompl
mov
mov
add
sbb
push
inc
mov
cwtl
and
repz
jbe
adc
jecxz
xchg
sbb
inc
mov
repnz
jp
rcrb
xchg
rcr
sub
push
adc
sub
add
sbb
xor
xor
into
lock
nop
cmp
jg
dec
mov
push
adcl
out
leave
xlat
cmp
mov
fidivs
idiv
cwtl
mov
popf
sbb
jecxz
add
dec
or
out
inc
stc
std
lahf
pusha
pop
sub
pusha
jbe
xor
lods
pushf
cwtl
add
sbb
inc
mov
out
stos
push
add
rcrl
pop
push
and
in
push
shl
sub
popf
add
in
dec
addr16
test
or
xchg
cli
dec
cmpb
inc
adcb
cmp
inc
int3
lcall
jo
jp
in
mov
add
pop
push
mov
mov
test
and
push
pusha
enter
shll
jno
es
mov
leave
sub
add
xor
or
das
adc
cmp
in
lock
cmp
xchg
and
and
mov
dec
xor
sub
cltd
push
fs
inc
arpl
scas
je
notb
xchg
jp
push
in
in
test
adc
out
sbb
int3
out
test
push
adc
sub
xor
sbb
push
mov
in
sub
mov
je
imul
in
adc
leave
jbe
and
push
sbb
cwtl
push
jbe
into
push
inc
mov
cmpb
lahf
sbb
sub
leave
fwait
lods
pop
pop
aad
inc
loope
into
lods
mov
and
and
hlt
sbb
rcrl
stos
adc
lahf
inc
aas
xchg
ret
xchg
mov
insb
adc
fistpl
push
in
in
in
imul
xchg
sub
dec
jge
adc
in
or
push
popa
or
jg
dec
add
mov
ljmp
xchg
and
push
push
pop
xor
test
sahf
xor
mov
mov
cli
xchg
orb
xchg
xchg
mov
cmp
adc
pop
imul
push
in
lods
arpl
mov
push
pushf
test
or
outsb
mov
and
imul
and
add
jae
idivb
fisttpll
inc
iret
fwait
jl
jno
jno
inc
mov
or
xchg
out
movsl
in
inc
mov
and
shll
fwait
aam
pop
push
testb
or
inc
pusha
push
pusha
iret
dec
hlt
cli
cs
or
ja
test
sbb
fmull
pusha
xor
xchg
aaa
ja
mov
inc
nop
dec
movsb
dec
fstpt
shr
dec
loope
push
cmp
mov
stos
pop
test
inc
mov
push
push
mov
adc
mov
pop
push
inc
iret
xchg
mov
ljmp
push
stos
jge
mov
push
ficoml
mov
jp
ret
mull
stos
sbb
mov
adc
jno
call
in
pop
leave
sbb
and
lret
ljmp
popa
inc
jnp
add
call
rolb
xchg
jl
iret
xchg
inc
iret
inc
ficompl
imul
adc
divb
mov
fdivrl
push
popf
orb
adc
push
das
xchg
gs
mov
lds
pop
sbb
pop
mull
lret
fs
pop
loop
insb
xchg
adc
mov
adc
jnp
addr16
in
test
out
pop
lods
push
loope
push
push
fsubrp
mov
jns
lods
imul
push
lods
jb
mov
xor
cmc
pop
dec
fstps
jge
inc
inc
push
and
cli
add
or
sub
push
icebp
mov
mov
pop
xor
insl
add
inc
cmpsb
imul
and
gs
add
je
ljmp
push
or
pop
or
fisubs
jmp
jmp
push
dec
mov
mov
icebp
popa
mov
loop
xchg
loop
aad
bswap
sub
cmp
adc
in
mov
out
push
cmpb
jnp
pop
stos
mov
push
sub
push
adc
aas
mov
inc
sbb
rcrl
shl
add
dec
dec
dec
adc
jae
jg
push
sbb
pop
xorl
adc
or
jno
cmp
ror
sbb
sub
sbb
push
popf
sub
call
loop
push
test
sbb
or
pop
xchg
ret
mov
stc
sahf
jg
sbb
loopne
or
cmc
dec
jne
pop
pop
test
pop
in
bswap
mov
fcoms
cmpsb
sbb
pop
mov
cmp
mov
mov
jbe
push
push
das
sub
repnz
lahf
js
push
int
es
jg
cs
bound
mov
ror
push
cmc
pop
shll
mov
pop
push
loope
or
inc
shlb
xor
xor
jmp
and
stos
cmp
inc
lods
lods
pop
rol
pop
mov
mov
and
push
rol
out
test
pop
jo
jle
int
lret
inc
jp
push
nop
mov
adc
mov
pushf
data16
dec
and
pop
pusha
add
pop
mov
adc
test
lock
out
faddl
movsb
scas
pop
jecxz
adc
loope
mov
sti
inc
and
sbb
sbb
dec
dec
mov
mov
shll
push
xchg
xchg
in
or
inc
lds
push
stos
push
cs
add
out
xor
hlt
divb
mov
and
lahf
mov
in
mov
xlat
jo
jns
sbb
inc
out
mov
or
inc
or
aas
repz
ret
pop
jg
dec
stos
inc
cmp
loopne
arpl
flds
and
test
and
jp
mov
aaa
jns
rcll
cs
repz
in
inc
jo
or
dec
jmp
xor
sub
shl
mov
cmp
inc
xchg
xchg
xor
shlb
test
cmp
fs
int3
xor
loop
int3
test
ss
sbb
inc
sbb
xchg
sub
rolb
and
push
out
and
xchg
lcall
mov
jge
and
add
cmp
mov
pop
sub
clc
adc
add
test
idivl
push
dec
subl
in
out
pusha
ficoml
ss
int
aam
mov
jp
sahf
add
xor
test
sub
xor
xchg
mov
mov
or
pop
inc
daa
fmuls
cli
jmp
sbb
inc
fistpl
ficoml
xchg
push
xchg
sbb
jg
rcll
lret
in
or
pop
sbb
dec
gs
xchg
into
dec
test
or
jo
sbb
lods
fimuls
rolb
ret
stc
inc
jns
lods
mov
clc
sti
cmove
ret
test
int3
pop
pop
add
push
aad
sbb
lahf
lods
faddl
fimuls
pushf
mov
mov
jecxz
fmul
pop
js
mov
add
xor
std
sbb
movsl
adc
mov
mov
dec
enter
and
lcall
outsb
cmpsl
out
enter
push
lret
aas
sub
push
fs
xor
xchg
cmp
test
lods
cwtl
jecxz
mov
dec
aam
pop
mov
fdivrs
inc
and
mov
test
pop
push
into
in
lds
mov
mov
lcall
cwtl
inc
sahf
or
and
mov
loope
push
mov
movsb
push
fwait
dec
adc
mov
or
out
push
pusha
add
dec
iret
lcall
je
xchg
lret
test
aam
jl
or
jae
test
cmp
je
mov
pop
imul
in
pop
push
jne
incb
adc
test
inc
dec
movsb
lods
jg
ja
loopne
or
sub
fs
mov
ficompl
push
es
xchg
insb
shrb
push
xor
dec
adc
je
leave
adc
lret
add
mov
call
mov
pushf
and
mov
sbb
frstor
pop
xor
mov
mov
ret
sbb
std
clc
movsb
add
rcl
push
and
adc
icebp
xchg
in
cmp
mov
mov
xor
adc
aam
dec
xlat
lds
lods
cmc
jnp
mov
xlat
mov
icebp
test
mov
lcall
addr16
cmp
push
aad
dec
movhps
arpl
loopne
jns
pop
push
pop
icebp
sub
sahf
pop
fadds
nop
and
lret
xchg
add
xchg
imul
xchg
sbb
subl
or
cmp
popl
xchg
in
test
xchg
mov
fs
jo
nop
inc
jl
push
and
fmull
ret
cmp
adc
aas
fstpl
or
movsb
push
pop
xchg
xchg
inc
bound
lcall
daa
cmp
adc
jno
push
push
shl
inc
xchg
xor
pop
rcr
addr16
sbb
icebp
mov
pop
dec
inc
cmpsb
pop
icebp
xchg
add
sti
and
dec
ror
jae
add
mov
aaa
decl
daa
jb
pop
xchg
sub
xlat
inc
or
icebp
push
js
sbb
fists
shrb
movsl
sub
adc
mov
mov
mov
jmp
data16
xor
in
mov
aad
sub
fiaddl
jne
insb
js
or
push
test
mov
inc
mov
mov
xchg
vunpcklps
jl
popl
loope
and
mov
test
insl
imul
xlat
mov
lods
push
subb
and
push
sbbl
rcrl
aad
in
push
add
aam
test
in
mov
dec
xchg
mov
adc
mov
ds
sbb
cmpsb
and
xchg
js
and
ss
xor
out
in
cltd
jecxz
add
dec
mov
iret
out
add
inc
mov
orl
sub
push
cmp
into
aas
or
insl
dec
imul
jge
testb
sbb
movsb
xor
or
pop
sarl
out
xorb
rolb
adc
push
dec
xchg
push
or
in
xor
pushf
ja
mov
test
pop
xchg
imul
push
in
xchg
les
out
decb
mov
jbe
loopne
lret
sahf
push
mov
jp
add
mov
xchg
mov
jnp
hlt
or
pop
dec
outsb
xor
or
ror
cmpsl
aam
lcall
iret
inc
pusha
loopne
and
mov
mov
mov
mov
dec
outsb
sub
add
jmp
sub
jbe
ret
flds
push
aas
mov
and
inc
imul
mov
pop
pop
cltd
mov
lret
pop
sahf
addr16
daa
shll
in
out
dec
in
mov
je
call
mov
lock
repnz
loop
fwait
jecxz
push
inc
shlb
sarb
imul
mov
in
or
test
mov
mov
sub
ljmp
xor
les
lahf
xor
stos
int3
stos
daa
in
mov
adc
inc
inc
sub
insl
sbb
xchg
add
xor
or
adc
lret
je
inc
xchg
icebp
int
mov
mov
xor
retw
pop
das
inc
add
sbb
pop
mov
mov
adc
insl
jnp
lock
addl
sub
sahf
xchg
adc
bound
out
xchg
add
pop
pop
icebp
xchg
fldcw
xor
ljmp
xor
dec
fisubrs
out
xchg
xor
clc
cli
ret
packssdw
sti
adc
loop
push
imul
mov
sahf
out
sub
jmp
mov
and
dec
rcrl
pop
int3
aas
jmp
stos
ds
jae
inc
xchg
std
stc
lret
lds
push
out
fimuls
sbb
mov
xor
arpl
pop
and
mov
push
ret
leave
mov
jge
mov
lods
aaa
dec
jno
add
out
jns
xor
icebp
sarl
int3
xor
jo
mov
jo
mov
xchg
lods
stos
test
and
jns
xor
push
push
and
daa
gs
dec
ja
mov
mov
cmp
jno
shl
inc
mov
call
nop
cmpsl
mul
repz
arpl
cmp
ret
mov
xor
inc
sbbl
lahf
mov
shr
and
push
mov
stos
xor
xchg
mov
lock
in
sub
in
in
idivb
cli
and
xor
imul
adc
jno
add
nop
jmp
mov
and
scas
popa
repz
scas
insl
idiv
lss
inc
xchg
outsl
mov
add
and
inc
add
and
lods
lret
sbb
fdivrl
mov
scas
pop
aas
cld
lods
sbb
cmpsb
xor
and
movsb
ror
mov
in
sbb
push
lcall
sahf
adc
adc
mov
call
lret
xorb
mov
pop
pop
cmp
push
dec
or
xlat
dec
std
ds
in
jle
lret
sbb
ljmp
or
mov
or
jno
push
mov
mov
arpl
nop
or
mov
cmp
sub
arpl
mov
mov
inc
inc
inc
add
xchg
sub
xchg
dec
insl
inc
loope
ret
mov
test
sub
sbb
pop
add
cmp
cltd
push
fcmovne
aad
gs
push
add
xchg
xor
fs
push
mov
mov
outsb
jno
mov
mov
xchg
jmp
gs
pop
je
sbb
scas
stc
cmpsl
mov
pop
aad
jp
xchg
ret
xor
jb
out
test
add
pop
cltd
std
std
call
push
jmp
cmp
int
jae
repz
hlt
or
pop
ret
ret
mov
xlat
push
insl
lods
cs
test
xchg
cvtpi2ps
add
sub
dec
xor
ds
scas
gs
orl
inc
and
xor
fs
int3
das
or
popa
icebp
xchg
mov
stos
dec
pop
iret
ret
cmc
incb
mov
xor
jle
xor
ds
shl
mov
pusha
pop
shr
fs
lahf
pop
vandnps
int
aad
pop
loop
leave
pushf
pop
movsb
sbb
into
fimull
push
push
xor
cltd
addl
sub
dec
mov
rolb
xor
js
jge
enter
call
mov
or
inc
aaa
dec
mov
jle
repnz
fwait
push
leave
int
pop
push
push
xor
jmp
daa
dec
mov
inc
jg
in
push
push
in
leave
jp
repnz
out
dec
cs
cmp
jg
test
icebp
push
ljmp
sub
xchg
sbb
inc
xor
cli
push
test
jmp
xchg
icebp
push
cld
jbe
pushf
sbb
cmp
repz
fistpl
and
loop
test
push
bound
sub
xchg
sbb
push
mov
popf
lret
mov
jns
push
mov
aam
inc
mov
jle
adc
aad
loope
pop
psrad
rcll
or
xor
call
dec
xor
mov
das
loopne
add
sti
lea
sbbl
cli
sbb
adc
loop
or
test
push
fwait
jmp
and
fisttpll
xor
cmc
sub
cs
cmp
jmp
outsl
jns
ljmp
fsubrl
lods
int3
je
stc
cmp
inc
roll
into
sbbl
adc
mov
stos
mov
add
dec
sahf
mov
push
movsl
aam
icebp
adc
je
sbb
pop
xchg
in
out
xor
lock
and
jle
mov
call
push
mov
cld
ss
pop
sub
out
jge
sbb
js
jae
push
outsl
sti
xchg
xchg
ds
jmp
inc
mov
daa
in
fildl
or
add
fmuls
mov
dec
push
xchg
shll
jb
sub
and
loope
pop
mov
scas
lods
push
ret
out
fsubrs
mov
cmp
xchg
add
call
sbb
push
mov
pop
cwtl
repnz
adc
cwtl
fisubrs
fbld
lret
cli
push
fadds
pusha
xchg
sub
jnp
adc
mov
mov
popl
mov
push
push
mov
push
add
add
aas
xchg
jnp
pop
rcll
adc
enter
test
fs
data16
xlat
int
xor
out
xor
inc
shrl
sub
ds
xor
leave
push
inc
mov
pop
imul
movsb
push
movsl
push
lods
pop
out
out
pusha
data16
int
fists
mov
dec
mov
shlb
push
xchg
jne
mov
pop
lret
fildll
mov
arpl
push
cmp
sbb
insl
popa
push
jno
cmp
popf
test
fmul
shll
and
dec
sbb
ficoms
int
push
xor
pop
into
ja
in
loopne
push
scas
les
stc
mov
loope
and
outsb
movsl
loopne
pushf
mov
sub
lahf
test
push
or
jns
add
bound
and
pop
mov
lea
in
pop
out
icebp
pushf
push
adc
xchg
out
scas
mov
adc
jne
lret
or
mov
push
lcall
or
pusha
pop
adc
dec
stos
dec
push
bound
and
lea
test
xchg
jle
fisttps
bound
gs
lock
jnp
push
inc
sbb
lods
stos
add
inc
xor
lahf
les
jbe
cmp
sarl
in
xchg
cmp
rolb
je
aad
sub
and
jmp
lret
mov
jecxz
sbb
orb
loopne
xchg
dec
jns
and
lret
xchg
out
sbb
and
outsl
pop
push
fnstenv
pop
push
sbb
add
xchg
mov
popa
dec
cmpl
xor
xchg
enter
sahf
mov
pop
fpatan
test
adc
hlt
and
in
mov
fadds
sub
xor
adc
sbb
lods
mov
ret
add
jno
dec
xor
xor
je
hlt
pop
lcall
pop
out
add
cmpsl
mov
stos
jbe
mov
mov
fisttpl
movb
popa
sbb
mov
movsb
push
push
lea
sbb
jo
pop
inc
mov
xchg
and
nop
mov
movsb
mov
test
and
and
cmpsl
sarb
jne
aam
push
cld
movsb
cmc
pop
xchg
out
xchg
movsl
in
fnsave
lods
fidivrl
push
ljmp
std
out
out
xorb
xchg
sub
push
scas
cmp
mov
lea
cmpsl
xor
movsb
mov
or
mov
out
std
fistpl
loopne
cmpsb
mov
cmpsl
lock
jo
push
mov
call
add
push
and
and
mov
fstpl
iret
sbb
inc
mov
cmp
ljmp
mov
cmp
ja
and
pop
cmpsl
aaa
pop
xor
iret
inc
pop
addr16
jge
or
ror
insl
add
jno
fwait
push
push
dec
pop
fisttpl
sub
dec
cmp
pop
bound
out
add
add
int
mov
jb
jnp
sbb
movsl
movsb
shll
jae
xor
movsb
fwait
add
xchg
mov
adc
popa
test
xor
lret
fs
add
stos
aas
lds
cltd
loopne
sub
insl
add
stos
out
sbb
sub
xchg
mov
fbstp
into
pop
adc
mov
dec
ds
and
pusha
fsubrp
fstpt
adc
les
cmp
sub
sub
or
sti
shlb
ltr
cmp
mov
ret
bswap
ss
push
push
pop
and
mov
ret
rclb
inc
leave
mov
inc
dec
imul
call
enter
jb
inc
jnp,pn
int3
fstpl
es
mov
mov
xchg
dec
out
mov
or
and
sub
nop
dec
dec
out
xchg
pop
leave
push
fcmovb
imul
jg
das
and
cltd
pop
push
xorb
rcrl
dec
mov
add
mov
jae
fwait
popf
sub
leave
xor
cmp
imul
ficompl
pop
and
fcompl
mov
pop
inc
mov
adc
loope
pusha
sub
out
jecxz
inc
xlat
xor
out
test
clc
rorb
divl
dec
dec
jne
cmp
in
data16
cmpsl
cmpl
fucomi
arpl
pusha
adc
cli
loopne
aam
pop
mov
int3
mov
jmp
or
adc
adc
adc
lods
int3
cmp
sub
dec
stc
lret
neg
add
scas
inc
movsb
call
ret
xor
sbb
xor
leave
xor
movsb
lea
es
mov
push
shll
popa
pushl
add
sbb
mov
sub
adc
cmc
outsb
lret
lods
mov
dec
test
jae
push
fmull
jo
and
xlat
xor
fadd
outsl
repz
lds
in
jl
popf
test
lcall
mov
test
or
xchg
cmp
nop
and
shl
sub
sub
sbb
or
fldl2e
int
cmpsl
cwtl
xchg
aam
insl
in
and
lret
inc
jg
test
jl
loopne
fs
in
ss
stos
cmp
es
or
loop
and
cli
push
stc
lret
nop
les
mov
es
sbb
les
push
dec
sahf
mov
ss
icebp
dec
fadds
fs
adc
fstps
mov
mov
in
jnp
lahf
mov
xor
imul
mov
imul
cmp
sub
popf
out
jmp
inc
jnp
xchg
xor
cmpsb
adc
lret
std
fnsave
or
test
or
movsb
rcrl
idivb
lods
int3
mov
xor
push
jecxz
inc
ficoms
xor
sbbl
mov
push
stos
sbb
xchg
push
ds
popf
add
into
push
mov
add
aad
mov
leave
dec
fs
dec
arpl
xor
and
mov
lods
cmp
mov
fstl
xchg
push
mov
fisubl
jp
push
push
xchg
sbb
adc
push
xor
shll
aam
xchg
enter
sahf
shlb
sub
pushf
mov
out
movsl
jmp
sarb
insl
sbb
sbb
and
adc
push
shlb
comiss
adc
mov
test
mov
xchg
pop
mov
enter
jge
cs
mov
pop
xchg
mov
mov
test
inc
lret
adc
jl
hlt
out
and
cld
neg
sub
popf
pop
pushf
push
cld
dec
jb
daa
loop
jle
fmull
dec
call
jle
stos
xorb
mov
into
int3
dec
jnp
mov
enter
repz
pop
xor
cs
sub
fnstenv
mov
rcr
popa
mov
lds
mov
cmpsl
or
and
shlb
pop
cmpb
xchg
or
jg
push
fnstenv
adc
incl
sbb
aas
or
test
scas
dec
out
inc
dec
pop
or
hlt
lea
fwait
iret
xchg
inc
inc
add
mov
insb
test
cmp
sbb
sub
xor
scas
pop
sub
sub
cmpsb
jg
or
and
xchg
iret
fnstenv
sub
push
out
push
xor
inc
clc
jns
movsb
test
push
mov
data16
hlt
lock
fnstenv
je
xlat
cmp
add
fsub
enter
repz
ret
or
add
enter
xchg
jle
xchg
pop
add
rcrb
inc
loope
data16
mov
mov
int3
push
mov
pop
xor
sbb
test
in
mov
pop
sbb
movsb
and
xor
negl
push
ljmp
mov
pop
mov
xor
inc
xchg
pop
jo
mov
daa
cmc
repnz
in
insb
mov
push
fcomip
outsl
test
xchg
call
iret
jo
jno
jno
jg
add
test
stos
xorb
call
jg
loopne
and
adc
test
fidivrs
hlt
push
jo
insb
lret
enter
xlat
shlb
and
in
les
je
or
ljmp
xchg
dec
loope
jl
pop
cmp
xchg
ficoml
push
jmp
test
mov
leave
push
sub
or
pop
imul
fldenv
divb
xlat
inc
or
mov
sub
icebp
loop,pt
add
adc
jbe
push
cmc
cltd
mov
jl
notl
lcall
xor
std
mov
std
fwait
dec
movsb
fnsave
push
test
and
test
mov
roll
shrb
or
jg
inc
jne
mov
pop
cs
lods
sub
push
push
add
inc
rcl
and
inc
xchg
in
pop
lods
jecxz
xchg
cmp
adc
fimuls
fimuls
sarb
fstpt
aas
push
aas
popf
jnp
mov
movsl
imul
icebp
arpl
cld
jno
add
mov
dec
or
popf
xchg
aam
pop
mov
lods
cli
pop
sub
jnp
lock
int
add
push
push
jno
in
iret
adc
jo
pop
inc
xchg
iret
xchg
mov
ss
sarl
mov
xlat
cmp
mov
dec
mov
pop
push
lcall
cmp
mov
imul
flds
inc
or
mov
dec
in
int
mov
adc
or
sbb
push
push
sbb
sarl
imul
push
ret
stos
pushf
dec
mov
mov
out
add
outsl
xor
mov
and
dec
jle
sarl
in
xchg
and
mov
cmpsl
lods
test
sbb
leave
es
jae
sbb
pop
in
nop
and
pop
mov
out
add
sub
insl
in
mov
jne
mov
aaa
mov
push
mov
sbb
fldl
push
cld
or
dec
add
std
rcll
mov
in
pusha
addl
push
sbb
fsts
pop
inc
icebp
jge
sub
cltd
dec
out
pop
cmp
xor
sbb
cmpsb
ja
xchg
dec
sbb
mov
leave
mov
mov
inc
out
adc
inc
xchg
test
addb
in
test
insl
ds
inc
loop
pop
cmp
outsl
aas
sbb
test
and
adc
lods
sar
xchg
fcoml
xchg
sub
xor
pop
fucom
cwtl
jno,pn
or
mov
pop
js
inc
cmp
xchg
call
aam
sub
leave
lea
in
sbb
int
outsb
pop
or
repz
lock
mov
sar
jns
adc
ficoml
lds
nop
jbe
pop
xchg
aaa
mov
adcb
mov
clc
add
fwait
scas
bound
mov
aam
ljmp
loopne
jecxz
arpl
loopne
pop
sbb
add
test
inc
ret
and
out
mov
test
out
sti
dec
pop
mov
cmp
mov
into
adc
mov
stc
mov
in
adc
sbb
lcall
leave
dec
fcomi
cmp
xor
cmp
aas
enter
js
inc
je
sbb
scas
jg
dec
jecxz
aaa
push
int3
jl
adc
pop
stos
ss
movsl
loope
sbb
hlt
rolb
cli
out
pop
mov
ja
mov
stos
jbe
sbb
fdivrl
sub
jge
repz
sub
mov
push
dec
xor
cltd
out
sbb
jbe
clc
mov
mov
cld
lcall
mov
inc
xchg
bound
add
cwtl
cwtl
dec
push
in
call
es
lods
inc
out
adc
aad
or
movl
lea
loope,pn
inc
xor
mov
adc
mov
data16
push
outsl
jl
add
push
xor
add
mov
loope
leave
aam
cmp
mov
jmp
leave
cwtl
inc
popf
insl
or
mov
mov
leave
xchg
jmp
mov
cmpsb
mov
jns
lods
dec
sti
adc
sbb
call
push
aad
mov
cmp
cli
inc
movsl
pop
inc
sbb
arpl
bound
mov
jg
subb
lds
sti
int
xchg
mov
test
fs
add
sub
push
hlt
ds
pushf
cmc
in
popf
ss
mov
aam
inc
mov
mov
divb
mov
jp
stc
enter
pop
mov
xor
mov
adc
xorb
or
cmc
cmpsl
cmp
sbb
inc
push
ljmp
scas
and
arpl
and
iret
push
push
jne
pop
jge
enter
push
mov
push
mov
subl
inc
fimuls
vcvtps2dq
lds
adcl
lea
sub
jbe
xchg
cmpsl
cmp
mov
les
sbbb
pop
pop
in
lea
rclb
sub
sub
in
cs
shll
jb
ficompl
pusha
mov
mov
dec
xor
or
mov
das
pop
jns
cmp
pop
push
popf
movsl
inc
cmp
imul
stc
adc
shll
fsubs
out
add
and
push
mov
or
daa
inc
jae
cltd
rcll
dec
pop
push
leave
ja
push
insl
xchg
test
popf
inc
or
sub
cmp
std
pop
rcrl
and
mov
hlt
mov
push
test
test
lret
std
mov
imul
test
dec
push
inc
bound
mov
test
jg
cmp
or
hlt
xor
jg
cli
ljmp
loope
aad
sbb
in
rcll
icebp
std
xchg
xor
sub
mov
testl
cld
xchg
jle
mov
lods
or
test
mov
movsb
fwait
popa
pop
push
xchg
jno
cmpsl
sti
mov
xchg
mov
sbbl
mov
leave
jg
fdivr
jge
clc
cmp
sub
mov
movsb
into
in
shrl
sbb
cld
in
inc
inc
sub
enter
ret
mov
lret
add
imul
fs
jl
lret
xor
inc
in
mov
rcrb
addr16
in
in
xchg
imul
push
push
loopne
push
addb
mov
fs
ja
mov
mov
cmp
das
sbb
in
adc
cmp
sti
fstp
cmp
mov
push
mov
dec
push
jmp
dec
sub
js
jo
mov
clc
jb
push
push
mov
inc
cmp
xchg
sbb
aad
filds
jno
xchg
mov
mov
bound
sub
hlt
scas
jmp
jp
es
fwait
inc
int3
or
imul
and
push
push
push
fisttpll
loope
push
fstpt
addl
sbbb
push
jno
xor
add
leave
pop
and
repnz
fsubs
jo
mov
push
iret
xchg
mov
inc
mov
xchg
and
nop
mov
mov
mov
pop
adc
div
inc
pop
mov
imul
mov
test
pop
add
negl
inc
out
adc
pop
xchg
ss
movsb
xor
hlt
cmp
cmpsl
cmpsl
aad
add
push
insl
scas
mov
aad
mov
fildl
sbb
movsl
ficomps
sbb
out
lods
mov
push
lret
test
call
cmp
pop
imul
push
sbb
sbb
faddl
jno
sbb
inc
jmp
dec
jle
maskmovq
idivl
xor
sbb
inc
cmp
pop
imul
jg
xchg
mov
xor
mov
shlb
test
xor
adc
jae
fistl
xchg
iret
ret
lcall
xor
pop
insl
adc
outsl
jbe
push
add
mov
ljmp
push
mov
or
sbb
into
sbb
push
sti
or
std
or
jne
push
sub
jno
push
cmp
pop
sub
testl
xlat
jmp
sbb
es
ja
scas
sbb
inc
pushf
mov
push
sbb
sub
sub
mov
push
pop
cmpsb
test
fwait
pop
mov
mov
mov
jecxz
movups
ja
pop
js
xchg
xor
mov
jo
pop
mov
mov
xchg
loopne
mov
jo
sub
lods
push
sbb
imulb
mov
jo
push
lahf
mov
adc
mov
mov
sub
xchg
sbb
dec
pushl
cmp
dec
jb
inc
cmp
jecxz
ja
mov
jge
xchg
out
lcall
mov
mov
sbb
mov
stos
rcl
sub
dec
adc
pop
test
jb
les
loop
stos
mov
xor
sarl
push
mov
outsl
mov
and
repnz
xchg
jge
in
jg
dec
out
mov
mov
nop
imul
bound
or
xchg
int
rcl
cmpsl
cmpsb
cmp
sbb
add
pop
adc
inc
push
jl
lcall
sub
je
jae
clc
mov
fstps
xor
push
in
fwait
jbe
aad
hlt
inc
xor
in
push
pop
test
dec
pop
mov
leave
sahf
fdivrl
push
stos
lods
mov
jecxz
test
cmp
cmc
repz
push
mov
mov
inc
aaa
leave
rcrb
test
pop
pop
mov
xchg
mov
sub
bound
int3
iret
inc
shlb
shl
push
mov
cltd
aaa
mov
sub
push
mov
je
arpl
adc
sub
fdivrs
repnz
mov
das
movsl
shlb
push
mov
inc
mov
dec
scas
and
pop
jnp
cwtl
inc
loope
add
call
xchg
lods
mov
ret
addw
mov
add
insb
addr16
xchg
dec
or
out
xor
jmp
out
mov
div
cli
pop
push
push
lret
push
arpl
inc
dec
mov
push
insb
scas
adc
mov
out
fbld
dec
adcl
leave
test
insw
ss
iret
or
mov
push
xchg
adc
ja
dec
inc
mov
mov
and
push
add
shr
or
adc
test
orb
mov
popa
int
ljmp
xor
pushf
sub
in
cld
pop
dec
jp
jp
je
adc
adc
dec
divb
ret
loope
rcrb
mov
ret
inc
push
scas
je
xchg
dec
dec
rcll
movsl
pop
mov
dec
mov
data16
lock
insl
int
jno
jae
push
push
jb
mov
dec
lret
fidivrl
xchg
das
and
leave
xchg
add
lds
mov
sti
add
and
imulb
or
xchg
push
adc
insb
mov
cmp
loope
das
imul
loop
mov
aas
cmp
dec
dec
xor
loopne
xchg
loop
mov
test
aas
mov
enter
scas
pusha
jle
or
cmpsb
mov
sbb
nop
aad
xor
mov
fdivr
fdivrl
and
fdivp
lds
rorb
shlb
push
dec
js
and
mov
rcll
xchg
insb
jns
xchg
and
xchg
jg
ficoms
xchg
cmpsl
cmc
or
ds
mov
cs
and
out
pmaxsw
in
mov
xchg
daa
rcrl
icebp
aas
movsl
cli
pop
iret
mov
mov
adc
fstpt
ret
and
popa
ljmp
and
mov
lea
lods
lea
stc
cmc
out
out
pop
sub
mov
movsb
adc
data16
in
xor
or
jle
adc
or
mov
int
ss
sbbl
fimuls
push
push
lcall
inc
int3
rcr
iret
add
push
jecxz
push
jo
test
lea
add
xchg
cmp
movsl
ds
cmp
fisubs
ret
aad
cmp
aad
pop
movsb
mov
scas
inc
je
push
insl
pop
inc
in
loope
or
inc
add
loopne
mov
movl
sbb
pusha
iret
pop
test
out
push
decb
pop
es
xchg
clc
cli
test
aam
jmp
mov
or
shl
inc
and
sub
xchg
mov
test
sbb
and
mov
add
icebp
push
mov
out
fmull
mov
ret
movb
mov
lcall
cmpsl
mov
test
mov
mov
sub
add
add
cmp
mulb
imul
out
sti
scas
pop
jle
xchg
decl
loope
call
xor
xchg
lock
cli
call
xorl
js
xor
xlat
fwait
and
test
dec
pop
lock
inc
out
add
addl
shl
aaa
push
pop
and
ret
xchg
les
mov
or
add
push
xchg
ret
ror
xchg
data16
mov
mov
add
sbb
outsl
and
jmp
loope
hlt
fsub
inc
mov
cltd
pushf
sbb
jbe
test
fwait
mov
out
ror
inc
jns
mov
jno
mov
mov
repz
or
ljmp
or
ja
mov
test
adc
fcmovne
xchg
scas
fldl
cmp
loope
je
and
and
inc
adcl
jge
enter
mov
push
test
leave
pop
xchg
in
mov
jb
mov
jg
movsl
jb
sub
repnz
loopne
mov
lods
jl
ljmp
xor
insb
xorl
xchg
lods
sub
fildll
xchg
outsb
jp
dec
fidivrs
adc
jmp
adc
push
xchg
cmp
or
mulb
in
push
adc
xchg
mov
fdivs
lods
movsb
lock
push
xchg
xor
inc
push
cmp
pop
jmp
mov
fcompl
ljmp
les
push
and
sub
aas
sbb
cmp
and
push
aas
out
xor
cmpsb
test
or
std
int
fcmovnbe
mov
in
jb
clc
bound
jne
jg
adc
test
sbb
pop
in
lahf
out
inc
addr16
idiv
push
fists
ljmp
add
fsub
mov
test
or
xor
push
movsl
mov
jecxz
sbb
mov
bound
hlt
inc
pop
xchg
rclb
pop
cli
cld
and
pop
aam
or
mov
adc
das
mov
pop
out
shrl
pop
imul
dec
jb
es
xchg
push
mov
aaa
in
daa
in
and
lret
fistpl
jl
add
lock
mov
push
add
out
jl
or
jbe
aas
jmp
fisubl
addr16
rol
test
push
sbb
xorb
xchg
aad
mov
pop
xor
and
pusha
mov
pop
test
jo
push
mov
sbb
jnp
lret
adc
adc
stos
testb
movsb
add
push
repnz
outsl
pop
push
push
dec
lcall
test
cmp
scas
dec
mov
mov
jb
pop
pop
scas
cmp
insl
push
movsb
mov
xor
insl
repnz
test
addr16
jae
aaa
ljmp
cmc
test
or
jecxz
adc
push
xchg
push
sbb
decl
jle
inc
aaa
ret
pop
scas
adc
pop
pusha
pop
adc
jle
out
outsb
adc
cmp
xor
or
and
push
inc
hlt
repnz
jmp
inc
lods
adc
mov
daa
jb
xchg
aaa
sahf
pusha
cwtl
pop
push
or
ja
mov
sub
insb
sbb
scas
iret
sub
inc
cld
cmp
jbe
and
cmpsl
outsb
mov
xor
push
jno
push
push
dec
leave
loop
sub
mov
sub
pop
bsr
ret
stos
mov
and
jg
jo
mov
xlat
xlat
test
inc
mulb
mov
aas
mov
cmp
and
xchg
xor
mov
dec
sub
mov
jecxz
out
mov
clc
jge
fsubr
mov
fisubl
sbb
stos
cmp
push
pop
out
sub
or
jno
mov
call
loop
inc
mov
fildll
pop
std
xor
fsubp
mov
cld
outsl
pusha
jae
shlb
leave
xor
xchg
inc
call
and
mov
cltd
clc
mov
movsl
adc
jbe
adc
shrb
aad
in
mov
rcr
outsl
mov
inc
dec
jmp
inc
push
shlb
and
sbb
test
xchg
dec
adc
fistpl
sarb
jmp
jb
add
in
pop
loop
jo
ret
inc
fs
adc
add
outsl
push
dec
jbe
xchg
or
sbb
add
shr
xor
inc
repz
lods
xchg
push
and
pop
out
cmp
mov
je
cmp
jo
sbb
jb
cmc
push
jnp
test
insb
xchg
fldt
pop
add
adcb
pushf
and
insl
rol
cmp
mov
add
and
push
movsb
iret
adcl
xchg
and
xchg
pop
popf
icebp
loopne
and
adc
stos
ja
sub
add
fwait
inc
inc
out
inc
out
xchg
pop
add
xchg
pop
jecxz
orb
dec
hlt
in
xchg
push
dec
mov
and
imul
test
jb
adc
xchg
pushf
int3
fwait
add
cltd
lock
lahf
jne
or
gs
jecxz
jo
xor
repnz
les
xchg
fsubs
jbe
in
push
sbb
neg
push
in
fstl
shlb
xor
sub
xlat
push
out
pop
adc
mov
in
fcmovnbe
jmp
jno
ljmp
mov
cmpsb
ja
sbb
or
negb
pop
lret
fs
movsb
loop
movsl
xchg
aaa
shrb
in
push
and
test
sub
mov
mov
imul
inc
sbb
push
mov
stos
push
outsb
mov
ja
sbb
pop
xchg
fs
jae
pop
mov
jl
aam
fistpll
sbb
mov
sar
inc
ftst
outsb
je
and
jg
xchg
sbb
imul
ds
mov
testb
cmpsl
addb
jno
les
xchg
cmpsb
mov
andb
pop
mov
fadd
imul
lods
cltd
inc
loopne
xchg
mov
xor
sti
xor
pop
inc
call
mov
add
inc
filds
addr16
subl
inc
repz
add
pusha
out
cmp
dec
out
cld
rcr
sahf
or
inc
mov
ja
inc
or
popf
testl
inc
jecxz
sarb
mov
mov
xor
xor
pop
adc
rolb
gs
dec
pop
inc
jg
scas
ss
loope
xchg
jmp
leave
mov
pop
hlt
insb
add
cwtl
xchg
and
loop
insb
fidivrl
inc
movsl
add
mov
pop
out
test
sub
shlb
stos
inc
ljmp
or
dec
test
xchg
and
mov
iret
or
xchg
jne
push
cmp
imul
adc
arpl
mov
aas
in
pop
inc
pop
repnz
js
fdivp
loop
pop
sub
inc
leave
in
dec
xor
push
pop
jle
je
pop
push
iret
cmc
add
jl
scas
jnp
sbb
mov
jne
push
aam
xchg
lods
jmp
adc
jp
lea
pusha
add
std
mov
jb
xor
dec
add
into
mov
push
inc
add
jb
outsb
arpl
repz
scas
push
int3
dec
ljmp
or
das
pop
test
jno
add
enter
sub
pop
leave
pop
lea
dec
jb
enter
arpl
or
stc
leave
repnz
cwtl
mov
cli
pushf
out
mov
jb
push
sbb
adc
pop
movsl
mov
je
fstps
or
outsb
movsl
dec
out
adc
pushf
xchg
cld
dec
test
mov
push
xchg
push
push
repnz
push
aam
sbb
inc
cmovbe
in
sbb
fidivrs
into
idivb
nop
push
xchg
dec
sbb
mov
cld
xor
mov
push
mov
pop
cmp
mov
pop
dec
or
mov
xor
inc
add
dec
mov
cmp
in
enter
pushf
roll
fistl
push
push
js
dec
inc
dec
shll
scas
mov
std
push
aas
sbb
jmp
push
enter
push
je
cmp
push
ret
cwtl
les
xor
imul
js
imul
mov
lock
ret
pop
popa
test
mov
add
xor
push
xchg
test
fnstsw
and
dec
push
gs
cmpsb
push
jne
or
shlb
xor
sub
mov
inc
mov
cmp
lea
ljmp
push
dec
cmp
fs
or
sub
push
mov
test
mov
popf
inc
aaa
jo
and
mov
xor
push
jno
or
iret
lods
xor
sahf
lea
cltd
shr
adc
repz
gs
nop
push
ret
mov
sbb
aam
push
insl
dec
pushf
imul
mov
adc
add
pusha
jns
mov
fimuls
mov
test
cld
inc
cmpb
adc
dec
movsl
les
push
hlt
rdmsr
rorb
inc
loopne
setnp
fadds
pop
fisttpl
subb
mov
mov
jnp
leave
xchg
shl
stos
sarb
xchg
bound
jae
sbb
sbb
push
jge
jne
inc
mov
pop
clc
dec
testb
mov
cmp
test
imul
jo
pop
ffree
test
add
sahf
xchg
ret
jno
mov
add
or
mov
scas
add
jns
fdivrl
inc
add
out
loope
neg
add
in
int
dec
fldenv
fcoms
scas
pusha
aad
iret
cmc
adc
popf
jbe
and
daa
inc
int3
mov
push
and
mov
icebp
and
xor
into
insb
in
daa
mov
xchg
sbb
jo
stos
stc
jbe
cmpsb
fcomps
cmpsb
dec
add
mov
lods
pop
inc
rclb
pop
sbb
loopne
shrb
sub
jns
and
fstl
adc
pop
lret
jp
push
les
or
cmp
mov
dec
lret
scas
iret
decl
aas
jmp
or
and
jns
push
call
stos
mov
adc
test
mov
lods
stc
es
ds
cmp
movsb
lods
push
cmp
sti
add
cmp
sub
jmp
adc
pushf
mov
xchg
inc
lods
fwait
pop
mov
push
inc
scas
mov
cmpsb
scas
js
sub
idiv
arpl
call
xor
xor
pop
mov
loop
push
mov
mov
mov
lods
dec
dec
inc
lea
das
in
push
mov
jnp
cmpsb
sub
aam
jp
jb
les
jl
cmpsl
mov
leave
je
fisubrs
sarl
xchg
and
jnp
mov
mov
xchg
pop
mov
sbbb
or
mov
pusha
xor
xor
lock
mov
mov
pop
cmpsl
push
ds
xor
iret
outsb
fisubs
and
js
cvtpi2ps
push
sub
imul
rol
xor
inc
xchg
jno
rorl
in
xchg
test
jnp
jmp
imul
cs
fucom
add
jl
repnz
aam
pop
sbb
call
stc
fidivs
js
into
xchg
xchg
mov
js
ror
sbb
mov
jecxz
push
divb
lret
arpl
mov
ja
fadds
les
mov
sahf
inc
cmc
push
out
cmp
inc
rcr
lock
push
cwtl
jp
xor
mov
movsl
cmpsb
daa
or
orb
or
push
clc
push
xchg
xor
in
dec
out
test
test
mov
cmpsb
sub
inc
dec
jae
iret
lea
sbb
sbbl
xchg
push
in
les
dec
loope
and
mov
sbb
mov
jmp
sub
sbb
mov
loop
mov
cmpsl
dec
pop
sarl
sbb
xlat
aaa
leave
ret
xor
int
roll
in
stos
mov
idivb
popf
ret
shll
jl
sahf
pop
das
int
fldenv
add
hlt
scas
push
xchg
adc
xor
push
out
notl
es
inc
xor
rcrb
ja
loope
mov
das
insl
xor
dec
cmp
push
scas
nop
add
aad
sub
lahf
jmp
pop
pop
insb
adcl
repnz
out
mov
mov
jne
xchg
repz
negb
add
xlat
arpl
dec
xor
and
mov
sbbl
xor
loopne
js
fnstenv
push
adc
cs
pop
pop
stc
outsl
subb
pop
xor
jp
ret
fwait
jne
hlt
lock
push
fsts
jae
inc
sub
pop
jp
inc
cmc
cmpsl
adc
xchg
in
arpl
sbb
cmc
xchg
sti
imul
shl
jb
rcrl
xor
jmp
sbb
fisttpll
jo
or
adc
xor
iret
cwtl
bound
inc
mov
jmp
push
xlat
clc
mov
dec
insb
data16
xchg
push
ret
shr
jge
shlb
jne
add
xchg
xchg
push
sub
jno
push
rorb
mov
dec
sti
jae
or
jge
xchg
xchg
cltd
xchg
hlt
mov
and
roll
into
nop
aam
enter
fidivrl
js
test
add
ds
aas
fdivl
adc
push
icebp
add
rclb
lds
jb
inc
imul
push
mov
cwtl
pop
daa
pusha
push
faddp
cmp
xchg
xor
pusha
sbb
out
int3
fistl
stc
mov
inc
bound
shlb
cltd
cmp
xchg
icebp
sub
mov
mov
divl
push
out
xor
addr16
test
in
lcall
rorb
popa
and
mov
mov
or
inc
in
jmp
sahf
xchg
jp
mov
lret
sti
push
orl
add
movsb
adc
bound
outsb
push
sahf
subb
inc
arpl
cwtl
inc
mov
out
in
jmp
mov
test
dec
xor
loope
enter
call
mov
and
imul
adc
mov
mov
movsb
incb
mov
pcmpgtw
mov
scas
fsubs
xchg
cmpsb
or
push
cmp
pop
xor
mov
addl
mov
push
push
bound
ds
xor
cli
or
popl
sub
inc
xorl
insl
xchg
push
mov
aaa
mov
sbb
inc
mov
pop
dec
or
xchg
mov
pop
aas
dec
sub
mov
cmp
in
and
fsubrs
xor
cmp
std
add
leave
jg
insb
add
cmp
mov
arpl
cs
movsl
jo
pop
hlt
jb
adc
lret
inc
cwtl
cmpb
mov
shl
outsb
xor
rcr
sub
pop
out
jns
pop
popa
cmp
and
aas
dec
push
es
bound
insl
push
push
mov
stos
lcall
sbb
add
pop
dec
mov
push
xchg
pop
jle
test
or
xchg
jae
popf
and
ja
mov
nop
mov
mov
adc
inc
cwtl
sub
push
xchg
mov
push
leave
je
inc
pusha
rcr
std
cmp
test
push
mov
xchg
lret
je
pop
xor
push
mov
add
push
mov
test
rcrb
jnp
sub
fisttps
lret
inc
cld
std
fs
rolb
mov
jge
aad
fmul
fsubl
pusha
repz
lea
in
xor
pop
adc
fwait
enter
shlb
popa
mov
adc
jmp
mov
mov
mov
dec
inc
fs
imul
inc
je
sti
inc
jmp
mov
aaa
xlat
cwtl
push
stos
in
inc
cmp
mov
bound
jmp
loop
jo
js
mov
push
cmp
daa
mov
dec
rcll
xchg
cwtl
dec
pop
push
jp
dec
xlat
in
sub
js
cmp
js
cmpsl
out
mov
pop
dec
out
cld
sbb
jae
idiv
test
dec
add
sbb
repz
dec
lea
xchg
bound
sbb
insb
mov
sahf
bound
and
lock
in
icebp
nop
sbb
mov
in
dec
jmp
add
push
rclw
shl
jmp
xchg
ret
lods
mov
inc
mov
test
lods
xchg
ret
sub
int3
push
cmp
and
cmc
xchg
inc
mov
pop
nop
subl
xchg
jp
aam
xor
xor
and
cmp
mov
mov
icebp
testl
cmpsl
jge
adc
add
loop
and
xor
cli
cmp
mov
aad
inc
jge
dec
fwait
insb
xchg
inc
push
push
adc
dec
in
shll
adc
push
push
and
mov
pushf
adc
je
push
das
loopne
xorb
stos
push
jb
outsb
push
gs
dec
push
sahf
rolb
pop
orl
mov
xor
and
jmp
loope
aad
xor
mov
mov
repz
mov
adc
je
insl
lahf
jmp
dec
or
test
add
mov
mov
mov
aam
add
fidivrs
and
jns
pop
sub
popa
add
cmpl
adc
sbb
call
repnz
leave
sub
adc
xchg
cmp
pushf
xor
push
xchg
jb
movsb
and
lahf
int3
bnd
fldt
adc
and
push
in
xchg
push
loop
leave
mov
aaa
jb
test
int
jne
push
imul
jnp
cld
aaa
cmp
fbstp
mov
mov
lret
repnz
cmp
mov
mov
divl
pop
adcl
or
out
inc
testl
jns
xchg
sarb
call
out
and
jecxz
popf
mov
inc
fcmovnb
mov
nop
fsubl
les
and
ljmp
jp
pop
lock
sbb
nop
xchg
mov
push
into
daa
in
push
fwait
and
subb
sbb
sub
jge
cmpsb
setle
or
inc
lods
xor
insb
rcrb
pop
ret
adc
xchg
sahf
pop
clc
adc
xchg
out
push
mov
sbb
rcl
out
push
sub
fildl
push
xlat
repnz
xchg
inc
aaa
inc
adc
push
mov
or
cltd
orb
lret
fildl
mov
int
adc
xchg
add
call
push
adc
mov
scas
or
lahf
jp
jo
ljmp
sahf
int3
pop
push
fmulp
iret
loop
adc
add
jb
or
xor
add
or
xlat
inc
movl
dec
push
adc
fldenv
cwtl
rorl
adc
xor
mov
pop
mov
jnp
daa
sub
pop
pop
jl
ds
sbb
xchg
cmc
mov
test
popf
adc
lock
pop
cld
imul
mov
adc
dec
imul
fs
aad
pop
jecxz
jge
lcall
jb
int3
shlb
mov
xor
insl
sar
pop
and
js
jl
leave
clc
and
mov
push
into
icebp
xchg
mov
inc
hlt
adc
cmpsb
push
xchg
push
mov
loop
test
jp
xchg
push
scas
inc
shrb
sar
jb
push
ja
pusha
das
add
inc
mov
jge
jbe
out
and
adc
loope
dec
notb
cmp
cld
mov
inc
test
and
les
mov
das
cmpsb
cmp
mov
xchg
test
push
add
pop
xor
fsubrl
or
sbb
test
out
add
cld
lret
add
lret
jb
adcl
lahf
adc
loope
dec
mov
adc
mov
pop
iret
jae
int3
mov
jo
lock
in
aad
sub
pop
int
icebp
repz
add
sub
xchg
mov
aaa
aas
cwtl
or
cltd
jp
pop
jae
das
sbb
inc
ret
add
out
mov
xchg
loope
testb
pusha
jmp
push
sub
repnz
stos
into
icebp
es
pop
mov
out
pop
aam
and
inc
or
orl
mov
mov
sub
push
mov
sbb
dec
pushf
add
mov
shl
sub
mov
jle
gs
dec
jb
lret
adc
or
int3
stos
in
add
mov
sub
add
jnp
fisttps
lea
xor
stos
call
out
jg
in
dec
cwtl
mov
sbb
test
test
push
and
xor
lahf
pushf
test
dec
out
and
cli
fdivrs
das
out
cmp
out
sub
sub
pop
lods
sbb
mov
inc
push
js
lahf
fs
jno
rcl
add
mov
arpl
jge
arpl
or
in
lahf
inc
pop
jecxz
fsubs
mov
add
jl
mov
adc
pop
das
mov
push
adc
and
ds
jbe
mov
xchg
rcrl
jg
xchg
lods
pop
in
mov
fistpl
test
and
sbb
inc
adc
fsubrl
xor
insb
xorb
adc
mov
and
cmp
pop
push
dec
adc
and
int
inc
push
inc
pusha
cmpsb
cmp
add
or
mov
sub
adc
inc
xor
inc
in
loopne
adc
std
loope
mov
mov
jp
dec
test
cmp
repz
sti
jmp
or
mov
sbb
in
adc
lods
sub
lods
mov
push
xchg
and
js
test
pop
dec
inc
pop
sub
sub
pop
push
lock
push
add
adc
adc
add
lods
lods
xchg
insl
mov
in
lea
cwtl
xchg
outsl
sarb
movsl
dec
xchg
mov
lahf
push
pop
pop
pop
or
jle
or
sub
xor
in
rorl
cltd
movsb
and
mov
rcl
or
sbb
add
pop
fisubl
fsubr
mov
subl
jge
mov
in
push
pop
mov
sub
sbb
mov
jbe
aaa
fisubl
jns
mov
sub
xchg
imul
cmpsl
push
std
inc
ja
out
mov
inc
into
aad
stc
iret
adc
inc
leave
add
lret
xchg
sbb
mov
mov
clc
cli
hlt
xchg
mov
xorl
xor
inc
shlb
dec
jg
imul
mov
insb
cli
pop
sub
ja
push
cld
filds
ret
push
fdivrl
mov
dec
adcl
push
pushf
mov
cmp
push
insl
add
mov
adc
lret
scas
mov
aad
repnz
ret
xchg
jle
dec
ds
xor
mov
into
ret
gs
xchg
test
outsl
arpl
fwait
adc
cld
pop
insb
lret
lods
jb
aad
xlat
lcall
add
inc
cmp
cmp
cmp
popa
sbb
sbb
jbe
lods
mov
dec
movw
and
arpl
adc
idivb
mov
xchg
ljmp
mov
lret
xchg
inc
repnz
inc
out
fwait
xchg
lods
stos
je
adc
mov
pop
lods
sbb
xor
lock
push
dec
inc
ljmp
out
xchg
mov
rolb
jge
mov
or
stos
mov
call
mov
cmp
xchg
leave
push
hlt
sbb
adc
inc
and
imul
addr16
daa
dec
mov
or
rorb
ds
divl
lcall
pop
and
test
aam
and
ss
dec
insb
jae
lods
adc
icebp
sbb
sti
sub
cmp
push
adc
or
add
stos
rcr
dec
sub
mov
jns
cmp
fsubrs
sbb
icebp
adc
pop
test
mov
push
ljmp
cmp
clc
mov
mov
jmp
stos
xchg
dec
push
dec
pop
dec
mov
repz
in
rcrl
enter
push
push
fsub
nop
ds
or
and
cmp
scas
mov
inc
pop
sub
mov
pop
std
dec
into
mov
lret
and
adc
mov
lret
cmp
dec
lods
xchg
out
sahf
mov
adc
dec
ds
mov
fsubrl
hlt
repz
cs
cmp
lret
aam
mov
xchg
jle
inc
inc
sbb
in
add
jp
sub
xchg
scas
ret
dec
and
push
pop
cwtl
inc
mov
testb
or
mov
cmpb
lods
test
sub
mov
enter
scas
daa
jo
in
repnz
sub
inc
add
or
and
cli
xor
sub
or
and
fsubrl
dec
mov
aas
pop
sub
pop
fsubrl
stc
sbb
or
sti
mov
or
daa
mov
dec
cwtl
rcll
push
div
lds
aaa
adc
test
ret
pop
xor
aas
aam
push
pop
fs
dec
sub
subb
pop
or
mov
fadd
xor
ror
sahf
into
aas
and
daa
adc
jg
fcompl
and
shl
hlt
cmp
jge
adc
mov
cltd
pusha
sbb
jae
lahf
shll
and
jbe
cmp
jmp
das
cmp
add
mov
xor
cld
inc
jo
lds
fs
jae
cmpsb
aad
mov
mov
or
cli
mov
aas
lret
mov
jle
mov
cmp
sub
adc
sahf
dec
mov
mov
test
sub
mov
mov
popf
sub
popa
lea
scas
sti
push
lret
mov
dec
aam
mov
outsl
stos
jbe
push
fnstcw
dec
or
mov
rcll
pushf
cmp
mull
xchg
stc
rcl
mov
pusha
jns
fsubrs
fcomip
add
inc
pushf
add
mov
scas
jg
jns
ficoms
inc
jbe
inc
inc
ret
bound
inc
inc
mov
ds
jl
mov
jno
add
jmp
and
mov
mov
fsubrl
mov
pop
pusha
xor
and
lahf
bound
mov
sub
out
rcr
push
jae
test
out
pusha
in
mov
lock
scas
cmp
iret
jbe
clc
bnd
cmc
mov
mov
in
popa
pop
andb
xor
lock
loop
dec
pop
sub
idivb
mov
cltd
pop
loopne
mov
es
jp
in
sbb
orl
xor
adc
mov
inc
pusha
xchg
mov
insl
and
mov
cmp
lods
stc
cmp
test
pop
add
shll
ret
lds
pop
test
idivl
mov
out
mov
shlb
imulb
inc
add
push
push
fildll
push
push
xchg
cmc
add
sbb
scas
ror
mov
jnp
inc
shrl
dec
in
push
push
fstps
cltd
inc
arpl
or
movsb
sbb
scas
push
inc
enter
int3
mov
aaa
and
push
xorb
add
fldl
into
mov
pop
idivl
mov
iret
dec
jecxz
in
mov
out
in
fstl
mov
ds
or
popf
test
pop
mov
jne
call
addr16
inc
dec
pop
mov
and
sarb
out
mulb
inc
out
adc
xor
sbb
cmpsl
fsts
xchg
and
xor
pop
dec
push
mov
add
mov
out
cld
push
push
outsl
fcomi
aaa
icebp
cmp
lock
jg
dec
mov
dec
lods
pop
mov
out
ficoml
jle
add
call
xchg
lods
in
int3
cs
sets
mov
push
outsl
sbbl
lret
sub
inc
cmp
sub
sub
loope
into
sbb
jp
bound
pushf
sahf
adc
cmp
lret
jae
add
xchg
adc
cli
es
pop
dec
sbb
ljmp
pushf
mov
les
jge
sbb
hlt
mov
add
rcrl
popf
leave
ja
mov
and
xor
ja
mov
lods
rcrl
pushf
nop
stos
add
icebp
sbbb
out
fidivs
lcall
fnstsw
jno
lret
inc
mov
mov
lock
cmpsb
mov
les
sbb
push
jbe
sub
in
rorb
dec
fmuls
cmp
sub
loopne
test
and
push
adc
sti
bnd
jp
jecxz
xor
cmpsl
dec
cli
movsl
lods
xor
lods
mov
inc
push
lods
dec
push
jge
test
out
hlt
mov
pop
inc
fs
adc
outsb
cmc
mov
or
icebp
cld
lods
adc
loop
pop
cmc
mov
xchg
pop
jmp
call
cmc
mov
loope
icebp
pop
push
add
sbb
outsl
cmp
into
hlt
xchg
in
mov
test
xchg
cmp
xchg
in
push
int
add
push
rorb
out
adc
inc
iret
cltd
insl
lods
pop
push
and
cmpxchg
dec
xor
pop
and
xchg
js
cmp
mov
jne
sub
insl
xor
xor
mov
sub
xchg
clc
inc
jge
clc
imul
adc
lds
inc
psubq
xor
shrb
sub
addr16
ret
adc
call
mov
jnp
sahf
pop
mov
imul
loop
lods
pusha
and
push
sub
pop
imul
push
je
xor
mov
lret
cmp
pop
ss
push
leave
mov
iret
sub
int3
cmpb
sbb
xchg
xor
bound
fs
sti
and
fs
mov
push
loop
xchg
fadds
subps
cmc
das
lock
jno
popl
rorb
jmp
icebp
push
push
cs
mov
aas
stos
jle
sub
push
enter
xchg
jne
inc
sbb
fstpt
push
sbb
sbb
mov
xor
mov
mov
cmpsb
xchg
test
mov
ds
jne
loope
or
pop
and
mov
rcr
dec
inc
repnz
and
lods
stc
dec
ficoms
jo
pop
mov
cmpsl
popa
hlt
mov
mov
arpl
repnz
or
cmpsb
inc
xor
pusha
adc
popa
add
add
jb
xchg
push
movb
sub
jge
shlb
push
xchg
scas
mov
push
cmpsl
pop
pop
movsb
aas
sub
xor
fisubrs
sub
cli
je
xor
xor
mov
sbb
int
in
or
or
xchg
lods
fstpt
xor
ret
test
add
push
pop
test
fadds
movsl
arpl
inc
lock
jmp
jae
mov
cmpsl
fdiv
xchg
dec
shll
fdivrs
fsubl
test
nop
mov
ja
mov
les
inc
inc
loop
sub
xchg
or
pop
push
push
and
scas
mov
mov
jns
cli
add
adc
in
pop
or
adc
mov
add
add
or
or
sbb
push
pushf
repz
dec
push
je
push
inc
pop
mov
movsb
int
ffreep
jg
movsl
adcl
flds
ffreep
xor
ljmp
imul
xchg
or
lock
fs
sarl
loope
pop
jo
mov
mov
and
aas
or
pop
dec
push
inc
popa
daa
dec
lock
mov
dec
rclb
int3
sarb
dec
push
push
cs
mov
sub
in
jbe
xor
xor
sub
movsl
xchg
sbb
out
push
pop
mov
jmp
mov
lret
outsb
imul
inc
sbbb
fucomi
arpl
insl
leave
movsl
test
lret
mov
mov
and
cmp
mov
das
or
es
test
sub
mov
jge
pop
and
xor
popa
sub
out
mov
cmp
inc
inc
mov
rcrl
inc
mov
and
cmp
mov
jecxz
or
cmp
sub
jns
add
dec
xorl
filds
mov
xchg
push
mov
orb
subb
fwait
sarb
push
std
int3
push
jp
dec
inc
mov
sub
push
jp
sub
in
imulb
ficoml
stos
andb
sbbb
es
mov
sub
or
in
jns
fnsave
out
add
add
mov
pop
inc
cmpsl
push
adc
xchg
lcall
enter
xor
lret
test
and
stos
sbb
aad
out
shlb
sbb
aad
cmp
pop
int
into
xor
loop
cmp
mov
stc
or
push
addr16
mov
mov
xchg
xchg
lcall
fxch
lods
fcmovu
or
icebp
pop
repz
add
and
sahf
outsl
push
ss
stos
loope
xor
sbb
test
iret
add
stos
xchg
cld
lods
ljmp
imulb
insb
push
adc
hlt
mov
mov
shlb
mov
fs
rcrb
in
dec
mov
into
lcall
fs
in
jmp
adc
xor
mov
mov
pop
xor
stc
movsb
and
std
dec
xchg
dec
enter
rorl
xor
mov
adc
pop
std
and
int3
xchg
in
cwtl
inc
ret
pop
mov
and
sub
pusha
fwait
in
lcall
push
sbb
cmp
sub
sahf
inc
and
dec
in
sahf
pop
pop
loopne
dec
mov
jno
sbb
aad
cmp
inc
mov
arpl
inc
cld
jp
mov
xchg
mov
dec
dec
arpl
shlb
addb
loope
add
repnz
push
data16
pop
adc
cmpsl
pop
fdivl
das
pop
sbb
cmp
rcrb
adc
lds
inc
cltd
fidivl
add
dec
pop
pop
sub
lahf
push
mov
cmp
dec
rorb
call
cmp
jmp
pop
sbb
xchg
daa
or
jne
xor
push
sbb
out
in
outsb
push
hlt
stos
rclb
xor
test
and
xchg
or
jno
adc
es
imul
jmp
dec
in
fnsave
gs
xchg
out
jo
aaa
xor
and
xlat
mov
xchg
mov
movsb
or
adc
and
mov
subl
les
daa
popf
leave
out
cmp
cmp
push
in
iret
lcall
ret
call
inc
fwait
push
arpl
add
inc
out
cmp
pop
test
js
xchg
loope
repnz
sub
and
aaa
or
jns
insl
in
sub
daa
fdivs
pushf
mov
mov
ret
xor
test
test
xor
dec
push
addr16
jp
das
cmpsb
xor
or
out
ret
loop
popa
scas
out
sti
sbb
arpl
mov
push
xor
xchg
scas
test
add
sbb
push
push
inc
jns
mov
pop
sbb
outsb
xor
or
and
jns,pt
enter
imull
cli
adc
pop
mov
dec
test
mov
mov
cmp
je
lea
neg
jae
in
cmp
xchg
adc
fidivs
insl
adc
jbe
and
cli
sbb
adc
bound
mov
push
and
pusha
inc
mov
push
popf
push
sub
stc
iret
je
xchg
mov
add
sub
cli
xchg
dec
jle
cmp
pop
xor
jmp
pop
insb
fistpll
sbb
outsl
adc
jo
xchg
aas
jb
test
mov
mov
mov
fldenv
repnz
jge
cmp
stc
cmp
push
leave
cmp
sub
popa
dec
arpl
fists
adc
mov
pop
cmc
or
jae
dec
ljmp
loop
pop
popf
int3
pop
pop
push
data16
push
jge
sbb
cmp
xor
pushf
add
xchg
push
fs
mov
in
into
sbb
add
das
arpl
push
jmp
mov
rcrb
pop
fisttpll
mov
push
addr16
push
dec
in
lods
arpl
mov
int3
push
mov
jb
out
mov
cmp
jo
jnp
mov
jbe
mov
pop
int3
push
sub
inc
sbb
mov
jns
jge
inc
das
insb
outsl
hlt
mov
cmc
cld
testb
subb
xor
inc
mov
mov
scas
lea
loopne
mov
imul
popf
mov
mov
out
sub
mov
imul
sub
filds
test
jno
xor
add
stc
push
mov
out
xchg
pop
ljmp
pop
cmpsb
jns
pop
jnp
adc
mov
xchg
xchg
mov
cmpsl
push
shlb
das
sahf
in
dec
jge
inc
adc
pop
test
pop
cmp
pop
pop
enter
in
xchg
cltd
lret
mov
pop
bound
jl
call
sub
or
xchg
xchg
mov
icebp
mov
jg
movsb
jb
add
add
mov
mov
xchg
ret
leave
mov
imul
push
add
fcoml
pop
sub
lret
repnz
sub
stos
xchg
sub
sahf
pop
mov
xlat
add
cmpsl
pop
iret
hlt
std
add
jno
lahf
or
fs
pop
pop
data16
adc
scas
xchg
mov
fdivrl
cmp
std
lret
lods
cs
repz
popf
xor
cmp
scas
xor
mov
fldl
repnz
call
cld
mov
cmp
cmp
ret
jb
mov
cmp
insb
and
cli
mov
test
mov
aaa
gs
push
mov
fidivrs
cmp
mov
sbb
into
xor
cwtl
fs
mov
and
sbb
scas
push
xor
xchg
add
in
lock
cltd
ret
imul
inc
je
pmuludq
mov
loopne
repnz
or
cmp
inc
dec
daa
push
les
sbbb
mov
in
inc
shlb
popa
xor
imul
sti
xchg
mull
push
roll
pop
cli
pop
gs
or
leave
cmp
mov
sbb
xor
test
jg
mulb
addr16
or
lea
pop
adc
jno
mov
push
cwtl
fmul
push
lret
stos
std
jp
pusha
push
inc
jl
and
cmpsl
xor
ds
pop
packsswb
sarb
pushf
jg
dec
andb
ret
das
fisubrl
testb
roll
inc
popa
or
aad
dec
repnz
ds
pop
jno
fidivl
cmp
mov
dec
loope
leave
jbe
movsb
push
scas
popa
cld
adc
iret
and
dec
mov
cltd
inc
dec
bnd
movsl
loopne
int3
or
ret
rcrl
push
in
cli
bound
jl
lods
push
movsb
cmc
movsl
lds
jge
mov
xchg
aas
das
cs
push
testl
jbe
loop
aad
je
pushf
out
mov
and
mov
cmc
jne
adc
push
inc
leave
fxch
inc
mov
or
js
cli
in
aaa
and
mov
das
fwait
dec
repz
popa
jo
inc
adc
cmp
sbbl
xchg
pop
lret
rcll
push
dec
mov
inc
xchg
jb
xor
inc
cmp
xchg
or
inc
sbb
daa
push
mov
mov
sbb
mov
push
inc
or
jl
jbe
lcall
cld
sbb
fs
fcmove
jp
sbb
repnz
pop
xchg
inc
and
push
cli
mov
fldt
mov
push
int
stos
cmpsb
fdivp
push
push
jmp
push
jecxz
lods
mov
cmp
xchg
or
mov
xor
add
imulb
loop
mov
sti
and
fcmovnbe
and
ret
sub
lods
fistpll
or
push
or
pop
dec
cmp
push
dec
mov
sbb
cld
jg
lods
sbb
dec
sbb
ret
inc
adc
out
or
xor
outsb
outsl
add
pop
pushl
push
push
adc
dec
sbb
xchg
mov
test
and
in
cmp
ret
xor
lods
ret
xlat
pushf
or
mov
testl
mov
pop
add
cmc
fs
inc
fs
sub
dec
cwtl
pop
fsts
pop
add
or
sbb
push
dec
ds
mov
push
movsl
into
fidivrs
adc
pop
ret
aaa
call
mov
icebp
cmp
and
les
adc
aaa
enter
ret
enter
sub
leave
push
adc
ficompl
int3
mov
mov
pop
add
sub
loopne
out
cmp
pop
mov
inc
loop
rcrl
ss
mov
jns
rcl
rorl
imul
push
xlat
adc
aas
pop
pop
push
addb
add
cmp
jbe
and
ds
xchg
xchg
sub
icebp
cltd
or
and
adc
mov
inc
jne
mov
inc
outsl
sbb
mov
jl
mov
out
lds
andl
icebp
mov
movsb
push
jno
sbb
mov
cli
xor
adc
out
jbe
xor
imul
aas
enter
adc
sub
or
adc
pop
sub
sub
out
and
mov
xchg
jge
xor
mov
xorl
sub
jae
sahf
dec
cmpsl
scas
add
mov
sahf
xor
sbb
mov
hlt
pop
loop
test
inc
dec
push
cli
sti
push
push
mov
cmp
xor
loopne
out
rolb
sub
xchg
push
in
jo
jge
xlat
insb
movsl
cmp
outsb
pop
das
negl
xchg
mov
loop
lcall
push
lds
clc
jmp
fs
xor
cmp
aas
pop
movsb
insb
jno
cmpsb
mov
movsl
xor
or
dec
test
sbb
shrb
rep
sti
mov
sub
jp
cmc
mov
sbb
pop
xchg
or
fwait
pushf
and
ret
jmp
and
andb
outsl
and
andb
popa
mov
push
pusha
push
jnp
adc
ret
imul
les
and
loope
call
lret
fmulp
dec
jo
jns
sbb
xchg
divb
aad
rclb
pop
adc
rcr
jno
cmovl
imull
in
sub
loope
cmc
xchg
jg
or
dec
std
push
shl
add
mov
ror
dec
out
and
dec
mov
dec
jmp
xchg
mov
mov
inc
iret
cli
shrl
mov
loopne
push
adc
push
lock
test
dec
cmp
dec
ret
xorl
push
hlt
sub
push
insb
es
sbb
or
aaa
jbe
cmp
inc
pop
xorb
mov
aad
or
or
insl
test
push
or
xor
les
jl
dec
sti
push
jo
xchg
test
add
cld
or
or
adc
clc
insl
call
push
mov
rcrl
inc
inc
sarl
adc
jb
in
loopne
lret
fs
pop
push
ja
mov
jns
shll
daa
lret
add
in
pop
inc
jne
ljmp
rol
pop
xchg
das
test
pop
add
stos
and
add
add
aaa
roll
cmp
clc
ret
call
or
push
aas
dec
out
and
and
jmp
out
dec
add
and
mov
or
test
mov
adc
inc
call
sbb
mov
mov
int
cmc
jae
fldt
jnp
mov
rcr
mov
adc
fstps
pop
push
cmp
shll
lea
lahf
cmp
adc
inc
lods
fs
inc
dec
test
imul
push
mov
jb
push
shl
mov
insl
xchg
push
jl
push
sub
cmp
xchg
in
insb
jo
sbb
movsl
sbb
pop
dec
and
inc
out
or
pop
cmpsl
fldenv
or
loop
pop
out
xor
pop
xor
pop
xor
js
fmuls
repz
addr16
scas
mov
dec
loope
and
adc
adcb
sbb
cmc
into
cmp
xor
rorb
loop
lea
lmsw
ret
ret
lods
mov
in
das
push
loopne
sti
mov
and
outsl
dec
fiadds
bnd
cmpb
mov
sub
and
cmp
or
xchg
and
lret
cmp
ja
inc
push
lcall
cmovno
lret
jmp
push
leave
std
cmc
or
sbb
add
lret
cwtl
lock
orb
js
adc
pop
and
pop
pop
rcrl
mov
xchg
daa
insb
cmp
dec
pop
enter
pop
add
in
and
rolb
pop
bound
mov
and
or
dec
les
pmaddwd
adc
cmp
int3
mov
in
mov
lock
jecxz
mov
or
push
lock
test
pop
stos
cmp
fincstp
ficomps
xor
push
mov
ffree
jp
pusha
lcall
shlb
xor
push
dec
loope
xlat
or
mov
idivl
push
xchg
movsl
into
sub
mov
xor
dec
pop
loop
shlb
push
xor
lea
in
popl
mov
inc
ret
xchg
adc
pushl
pop
in
mov
es
loop
push
inc
cld
test
mov
shll
fs
add
adc
outsb
sub
push
pusha
cmpsb
push
add
pop
in
fstl
negl
notb
push
sub
lock
nop
test
xchg
push
out
negl
sub
or
scas
es
inc
in
inc
cwtl
pop
mov
test
lahf
mov
insb
add
mov
push
arpl
cmp
je
jge
add
or
ja
mov
add
xchg
xchg
cmp
mov
inc
xchg
out
dec
sub
loope
jno
ds
js
mov
dec
sub
popf
inc
shl
sub
sbbl
mov
xchg
stos
xchg
lret
push
mov
ds
pop
pop
pop
push
dec
aas
dec
movl
push
addr16
and
or
push
push
lods
xchg
in
outsb
push
add
imull
fistl
xlat
fisttps
ret
dec
and
pushf
mov
add
push
rorb
iret
jp
shl
int3
cmpsl
aaa
mov
leave
or
out
mov
jp
xchg
mov
push
add
bound
jmp
std
mov
lea
inc
ds
les
imul
mov
xchg
popa
sub
cmp
adc
les
shr
adc
iret
icebp
add
cmpsb
jp
les
mov
test
mov
ficompl
call
lea
xlat
mov
sti
test
insb
fisttpll
out
sti
sub
jnp
xor
fsubrp
add
fsubs
ret
jo
inc
jae
jp
out
mov
enter
popl
push
fidivrl
mov
cmp
cld
xchg
cmp
xchg
dec
jnp
loope
xchg
out
xchg
add
repnz
fidivrs
test
leave
pop
sub
pop
lcall
adc
sbb
jp
adc
lahf
pop
stc
push
and
negb
xchg
push
pop
in
inc
rolb
and
loope
or
mov
out
mov
mov
dec
jl,pt
mov
mov
xchg
or
and
xor
icebp
pop
addr16
jp
shrb
sub
dec
mov
mov
out
mov
sbb
cmp
pop
repnz
lahf
js
xchg
ss
jne
mov
popa
ror
sbb
lods
popf
ja
add
sbb
fcmovbe
hlt
cmp
push
sub
shrl
jp
je
scas
add
push
jae
adc
aam
fnclex
jae
jb
inc
test
cmpb
xor
test
cld
mov
add
push
popf
aas
or
xchg
cmpsl
lret
xor
je
in
shl
dec
mov
ror
and
nop
lcall
das
daa
mov
cmpsl
repnz
or
rep
mov
dec
and
sub
xchg
lods
inc
mov
cmp
aas
jb
popf
in
and
lds
mov
inc
repnz
xchg
mov
in
sbb
in
pop
into
sbb
xor
cmpsb
dec
sbb
inc
out
push
jl
aam
sbb
pop
ds
push
push
aam
mov
sub
popa
xlat
push
aas
mov
push
popf
fimuls
cmc
out
xor
add
mov
sti
xchg
sub
jmp
nop
jns
or
cmp
std
push
cld
jg,pn
div
jecxz
inc
pushf
rcr
push
dec
aad
inc
xor
mov
inc
xchg
fcomi
shl
and
cmp
add
fidivl
pop
arpl
xor
mov
rcr
xchg
mov
lret
fidivl
test
pop
jl
fidivs
push
or
div
das
xchg
out
mov
mov
out
sub
pop
or
or
jge
ret
mov
pop
xor
mov
loope
lds
xor
push
mov
pop
int3
mov
shl
das
loope
bound
sbb
pop
fs
mov
mov
arpl
jmp
mov
fs
aas
inc
das
jg
jg
sbb
and
or
jl
or
adc
in
hlt
inc
adc
fmuls
out
hlt
es
push
in
fnstenv
loope
mov
fxch
cmp
push
movsl
pop
in
add
lahf
lods
inc
out
aaa
adc
push
dec
loop
adcb
sbb
add
cmpsb
es
ljmp
pusha
add
ljmp
mov
pop
int
and
cmp
in
or
inc
mov
cmp
add
in
into
lea
xor
xchg
push
out
jl
or
xor
fmull
mov
or
jns
imul
lret
sbb
bound
adc
or
leave
xor
lds
xor
mov
dec
jno
push
aas
loopne
nop
dec
inc
das
push
pop
xchg
dec
mov
or
mov
stos
push
dec
iret
ljmp
lods
mov
pushf
ljmp
add
icebp
fsubl
jae
imul
ja
inc
xor
loopne
mov
cld
mov
lea
out
in
jno
mov
inc
sbb
aaa
cmpsb
push
popl
sbb
ja
arpl
je
jae
xchg
clc
jns
test
jge
cmp
fisubrl
pusha
add
xlat
pop
fwait
push
fdivrs
xor
cmp
xchg
nop
call
lret
and
fs
push
fnstenv
sbb
cltd
arpl
mov
mov
jp
cmp
in
repz
pop
or
jne
sbb
sub
test
lahf
dec
sahf
aas
lret
cmpsb
mov
dec
int
repz
cli
out
lcall
outsl
test
test
sub
and
jle
xchg
outsl
sbb
xchg
mov
cs
out
es
push
leave
dec
mov
bnd
in
xchg
xor
insb
mov
and
cli
popa
scas
jg
sub
movsb
inc
in
jge
and
scas
aad
aas
shll
lods
jle
into
mov
inc
adc
cmpsb
movsb
jp
into
arpl
aam
and
mov
aam
sbb
pop
cmp
int3
pusha
pop
adcb
mov
adc
pop
cmpsl
push
jge
sbb
outsb
sub
aad
sbb
xchg
mov
aad
dec
push
mov
cmpsb
fisttpl
test
popf
mov
inc
or
in
xchg
push
push
and
rorl
stc
pop
rcl
call
mov
cmpsb
cmp
pop
out
mov
arpl
pop
pusha
and
sub
pop
movsl
dec
and
dec
clc
icebp
jp
mov
das
add
mov
cmp
jp
adc
ds
arpl
pop
out
mov
jnp
fdivrl
pop
add
push
jge
dec
negb
insb
xchg
inc
cmp
push
pop
icebp
shr
mov
ljmp
cmpsl
and
pop
mov
repz
arpl
jne
test
fldenv
inc
pushf
icebp
data16
inc
in
push
inc
mov
inc
sbb
sbb
arpl
or
inc
insl
pop
inc
add
insl
jbe
shl
inc
xor
test
pop
mov
pminub
ss
out
xlat
sahf
xor
icebp
mov
mov
xor
outsl
repnz
add
jg
dec
cmp
aad
lock
xor
push
lcall
sub
into
dec
pop
daa
movsl
lods
fistpl
mov
mov
repz
mov
cmpsl
add
in
add
loopne
pminub
sbbb
xchg
shrb
lds
mov
pushl
not
test
leave
call
inc
in
jnp
pop
mov
sbb
lcall
sub
jbe
stos
cmpb
sbb
mov
mov
out
and
ret
pop
ds
imul
mov
gs
dec
cld
sbb
movq
cld
mov
add
in
push
sbb
and
xchg
dec
push
and
add
insb
cltd
fists
mov
jb
data16
xorl
add
shll
sbb
lret
imull
and
or
stos
dec
jmp
int3
and
nop
scas
lret
and
jno
jg
or
add
mov
clc
les
and
jp
inc
mov
mov
popf
lock
xchg
cli
loopne
and
cmc
int
pop
mov
sbb
sub
cmc
loop
inc
icebp
xchg
or
or
test
xchg
repnz
sbb
mov
cmpsb
loop
push
les
mov
cmp
sub
or
jae
pop
out
mov
cli
xor
idivl
xor
pop
cmp
je
adc
stos
divl
cltd
jae
test
inc
mov
out
pushf
imul
outsl
movsb
out
cli
aaa
mov
lods
ljmp
xlat
sbb
inc
sahf
xchg
fldt
arpl
or
xchg
addr16
shufps
repz
ret
pusha
hlt
mov
sbb
out
mov
test
xchg
into
add
mov
sub
mov
sti
clc
jmp
adc
add
mov
test
loopne
enter
xor
add
sub
jecxz
pop
mov
les
lock
std
jecxz
cmpsl
dec
rorl
adc
fstpl
rol
push
aam
inc
pop
adc
popa
cld
mov
dec
stos
lahf
loope
cmpsb
movsb
cmpb
mov
cmp
pop
shlb
xchg
repnz
add
test
jne
pop
jno
adc
xor
sub
cmp
jo
push
push
lcall
ja
int3
lret
out
push
sub
loopne
and
bswap
outsl
xchg
push
pop
cmpsl
pop
adc
pusha
mov
movb
cmp
push
imul
add
je
jnp
or
dec
sub
ficoml
pop
sti
mov
mov
test
cmp
sbb
mov
mov
xchg
push
xor
add
xchg
scas
push
push
call
lods
jae
sbb
jne
xor
xor
repz
js
fldt
dec
sbb
loope
inc
out
pushf
out
push
inc
sub
xor
xor
imul
sbb
daa
fdivs
repz
mov
int3
adc
fsubrs
and
push
jb
add
imul
xor
sbb
std
aaa
dec
mov
call
push
xor
and
lret
xor
dec
adc
or
mov
add
loop
add
push
imul
outsb
les
fcomps
bound
and
std
lds
into
mov
push
dec
jbe
xchg
or
sbb
call
cmp
add
add
sub
adc
add
pop
das
icebp
cld
sar
shr
jle
lock
js
xchg
cwtl
imul
or
lret
cmpsb
test
push
inc
sbb
fstpt
lods
add
mov
fs
sarl
dec
enter
and
fs
push
pushf
adc
xchg
cli
xor
in
dec
mov
and
dec
and
push
inc
mov
mov
cld
adc
loop
push
mov
das
notl
push
jb
cmp
pushf
in
test
push
sahf
std
and
jge,pt
sub
mov
mov
sbb
push
push
pusha
xchg
mov
popa
testl
stos
xor
fs
movsb
mov
int
push
dec
ror
jl
xchg
mov
or
into
and
xchg
sbb
jle
fwait
sbb
out
mov
dec
jnp
mov
pop
cmpsl
adc
xor
push
xor
xchg
xor
sarl
xor
sub
mov
shll
dec
push
xchg
jbe
pop
xchg
mov
outsl
enter
adc
repz
hlt
pop
add
outsb
sub
mov
sub
xchg
addr16
push
jmp
xor
sbb
std
outsb
inc
or
inc
cmpl
in
inc
pop
mov
aaa
sub
data16
inc
mov
inc
fimull
sub
jne
cmp
jns
jns
nop
sbb
cltd
sbb
jp
call
mov
sti
inc
add
mov
xor
inc
iret
sbb
out
in
pop
cmpsl
xor
insl
xchg
xor
mov
fistpl
sub
outsb
enter
test
push
or
mov
jp
adc
lahf
loope
jo
mov
xchg
push
lods
or
stos
xchg
and
sbb
adcl
cwtl
ret
mov
and
cmpb
lahf
jmp
mov
sub
push
addb
out
inc
neg
jle
shlb
out
jecxz
jno
cs
adc
mov
sub
scas
sbb
sbb
mov
sub
xchg
mov
ja
test
push
adc
jno
pop
xchg
inc
add
lret
pop
jmp
or
adc
cmp
fdivrl
push
ror
sub
lcall
scas
dec
mov
add
mov
bound
inc
jecxz
and
popa
loope
pop
mov
in
test
movsb
loope
lds
js
jb
sub
xlat
enter
add
rcrb
fidivl
imul
mov
add
call
mov
jns
inc
data16
leave
inc
repnz
es
fsubrs
lock
sub
xchg
and
xor
fstpt
in
jb
xor
push
adc
jb
mov
hlt
leave
sbbb
nop
add
repnz
data16
sub
sub
mov
ljmp
mov
into
ret
flds
test
push
mov
cmp
cmpsb
leave
mov
pop
xor
adc
sbb
jb
jb
in
xor
jae
mov
nop
pop
in
xchg
test
lock
int3
insb
adc
jl
pop
fcomps
or
fistps
ss
lcall
sbb
lds
xor
arpl
mov
daa
push
in
sahf
lds
and
push
xor
ret
jle
jo
add
in
xor
loopne
ss
and
sti
fidivs
nop
inc
add
movsb
xchg
and
rcrl
inc
jecxz
in
loope
mov
jne
mov
xchg
push
jbe
sbb
cld
pop
jl
sti
jg
pop
lds
inc
push
lret
lea
lods
arpl
sbb
cmp
jne
dec
sub
cs
stos
add
fs
adc
lret
stos
sahf
lds
shll
jnp
mov
xchg
xchg
daa
ficomps
pop
jl
cmpsb
inc
pop
jae
cltd
sbb
lea
cmp
xchg
test
mov
mov
int
out
dec
repnz
stos
jo
outsb
or
pop
jb
adcl
ss
push
cmp
daa
rol
popa
adc
and
aas
xchg
push
enter
dec
and
mov
aaa
fwait
jae
loopne
mov
push
cli
inc
cmp
loope
icebp
mov
dec
test
adc
cmp
lock
mov
test
mov
pop
decl
pusha
dec
add
sub
mov
cs
or
add
xor
push
std
fildl
jae
aaa
subl
dec
inc
sub
repz
dec
cmpsl
mov
inc
imul
ljmp
test
stos
out
xchg
gs
das
fsubrp
cmp
add
dec
pop
sub
in
arpl
cmpb
cmp
cli
sub
outsb
sbb
int3
mov
sti
push
int
push
adc
stos
or
jmp
add
pop
xchg
jmp
jmp
arpl
dec
lock
sbb
or
lods
and
cld
int3
ret
rcrb
dec
bound
sarb
mov
xchg
lock
sub
loopne
cmp
dec
jb
push
out
sbbb
and
adc
cmp
mov
subl
lods
mov
aad
mov
test
jb
js
jnp
cmp
sbb
outsb
in
lods
fldcw
test
mov
stc
arpl
mov
scas
or
cmpsl
jecxz
xlat
sub
or
inc
sti
cmp
rcrb
lods
xchg
into
cld
mov
inc
cmp
and
mov
mov
inc
lahf
dec
adc
cwtl
inc
adc
cli
nop
into
inc
jle
test
ret
loopne
mov
cs
cld
adc
fisubrl
add
js
xor
fs
xchg
dec
xchg
push
sub
cmp
loopne
and
jno
pop
fsubs
push
pop
fbld
stos
xchg
mov
jbe
mov
mov
xor
test
ja
inc
ret
mov
cli
js
out
sbb
lret
pusha
pushl
stc
mov
push
and
ja
incb
ds
jae
xchg
popf
mov
cmp
scas
dec
aad
cmpl
loop
inc
pop
jge
scas
jae
ljmp
and
pop
das
lahf
push
or
lea
scas
lea
lret
jno
jbe
inc
bound
stos
les
jge
loop
xchg
rcl
icebp
mov
xchg
push
inc
xorb
ja
adc
cmp
jb
loopne
lcall
repnz
adc
imul
mov
aaa
lret
sub
out
inc
fcompl
jns
fucom
mov
sub
rcrb
sbb
inc
mov
lea
lods
rcrl
stos
mov
fldl
fisubs
sbb
pop
addb
jp
jne
and
daa
scas
in
lahf
push
add
sbb
cwtl
mov
lock
std
cmp
jnp
push
sbb
pusha
fisttpl
lcall
lods
xchg
incl
cmp
outsb
mov
in
pop
pop
add
sahf
mov
fdivp
sub
filds
sbbl
jge
mov
loopne
add
dec
xor
outsl
sub
pusha
cmpsb
adc
int3
push
add
jo
inc
ljmp
and
push
mov
out
pop
orb
aam
xor
repz
stc
lahf
push
out
fsubrs
sub
ret
cli
std
cmpsb
test
ret
pushf
stos
mov
xor
mov
mov
push
mov
js
shll
jg
lret
push
inc
push
xchg
ljmp
ss
sub
sbb
rol
xchg
dec
popf
mov
sbb
pop
xchg
mov
dec
scas
mov
imul
xchg
cmp
mov
stos
cmp
gs
mov
xor
jne
push
in
shlb
jmp
cld
outsl
ljmp
fld
nop
in
cltd
adc
sbb
loopne
int
lods
jle
int3
mov
mov
sub
push
push
je
aad
outsb
out
aas
enter
bound
data16
cwtl
pmaxsw
sub
sti
cltd
mov
mov
mov
stos
jmp
pop
in
mov
cmpl
mov
sbb
xchg
fimull
ret
pusha
push
or
add
or
lock
mov
sbb
xchg
ss
cmc
and
jmp
add
hlt
jo
xor
rorl
pusha
cmpsl
and
stc
lcall
mov
stc
mov
out
jae
pop
loop
mov
daa
or
das
xchg
cli
xchg
aam
popa
xor
or
sbb
fstl
or
mov
push
dec
xchg
loope
mov
ljmp
shrb
jno
test
subb
sbb
lods
nop
imul
rolb
out
ror
enter
jnp
push
sbb
jp
xchg
fldt
aam
pop
sub
out
mov
repz
push
mov
inc
inc
mov
lret
out
ret
lahf
pushf
mov
push
jae
scas
mov
out
sbb
push
orl
sub
push
clc
movsl
add
insl
dec
mov
rcrb
ss
testl
daa
fucomp
lods
fisttpll
sub
jge
int
and
lea
or
dec
adc
xor
add
or
mov
jb
pop
pop
fs
or
dec
mov
fcoms
stc
ficomps
xor
psrlq
jge
or
xchg
in
rcrb
mov
mov
mov
jmp
inc
adc
sub
mov
mov
and
cs
pop
aas
cmp
push
mov
or
push
jnp
mov
sub
or
aaa
push
push
in
or
mov
jmp
fstpt
or
data16
aaa
fsubrl
add
ss
sub
shrb
aad
insl
mov
aaa
and
inc
add
popf
mov
enter
push
pop
in
fidivrs
shl
lret
xchg
cmp
sub
adc
inc
adc
push
sbb
fs
out
cmp
dec
mov
test
adc
and
int3
adc
ja
and
xchg
inc
xor
push
adc
mov
jle
fxch
dec
adcl
mov
jmp
aas
sbb
dec
insl
and
cs
and
xor
lret
in
and
mov
bound
add
or
ss
cld
fwait
xor
adc
inc
xor
sbb
xchg
xchg
sbb
scas
into
and
jb
ljmp
aad
dec
and
xchg
push
inc
out
lods
or
and
push
fsts
sbb
int
dec
and
dec
mov
adc
cs
call
pop
lods
push
and
in
sbb
cmpsl
sub
in
test
lods
inc
pushf
adc
sbb
push
jmp
adc
cmp
and
inc
call
jns
mov
inc
push
push
pop
add
pop
add
addr16
loop
mov
inc
xor
out
mov
mov
bound
je
test
add
aad
cmp
sbb
push
cmp
orl
add
bound
iret
push
xchg
cmp
lret
outsb
adc
std
push
daa
xchg
daa
les
xor
popf
int3
lret
inc
ret
sub
sahf
adc
pushf
jecxz
xchg
push
mov
call
or
out
adc
cld
ljmp
out
adc
fmull
cli
stc
fisttpl
pop
lods
scas
out
stc
cmp
cltd
jo
and
jle
in
shll
mov
movsb
icebp
fbld
jmp
scas
ljmp
mov
cli
and
jecxz
test
or
adc
stc
stc
fwait
rclb
test
add
data16
mov
stos
faddl
xchg
fistpl
xchg
int3
push
sub
dec
adc
into
lock
adc
cmp
fimull
int
jae
aad
and
push
lea
xor
ss
stos
xchg
cld
or
decl
test
lret
mov
enter
push
cmp
rolb
test
dec
leave
fwait
data16
outsb
fsubs
inc
sahf
jae
test
lret
in
clc
les
sub
lods
cltd
fisubrl
pop
lods
imul
xchg
or
inc
and
jmp
xchg
lret
cmp
and
ss
inc
cmpsl
ret
or
inc
cmp
push
lea
or
jg
xlat
inc
shll
or
fnstsw
pop
prefetcht1
jmp
pop
mov
aas
pop
stos
adc
ficomps
and
bound
push
sti
mov
jg
cld
dec
cmp
repnz
adc
push
fistl
sub
fldl
or
pop
push
call
xchg
mov
xor
jmp
sti
mov
call
outsb
mov
push
dec
and
mov
fmull
cs
mov
ds
xor
imul
mov
add
aad
addr16
cmc
push
daa
aad
pop
cwtl
jl
xor
dec
jmp
je
adc
sbb
add
rorl
sub
and
out
jae
loopne
ret
jns
xchg
cmpxchg
add
test
or
popa
cmpsl
lcall
jb
xchg
mov
in
iret
jb
andl
int3
mov
imul
popa
mov
lcall
mov
pop
es
lcall
mov
stc
mov
push
or
adc
loop
nop
sub
xor
fs
cltd
scas
out
inc
fs
sahf
xlat
jno
mov
clc
inc
xchg
into
inc
out
dec
mov
jge
cmp
cltd
pusha
sbb
mov
loop
sahf
jmp
mov
jno
fnstsw
sub
ja
mov
les
out
jno
sub
sbb
ret
sbb
mov
in
mov
cwtl
sti
nop
xchg
adcl
push
xchg
ljmp
lcall
xchg
icebp
push
dec
ja
movsl
lahf
in
sbbb
mov
add
int3
push
xlat
mov
loopne
imul
movsb
add
push
mov
jmp
xor
mov
popf
dec
cmp
test
pop
sahf
in
pusha
sub
and
andb
inc
mov
add
jle
test
inc
xchg
dec
jecxz
xchg
rorb
lods
pusha
or
bound
cmc
daa
push
jbe
ds
dec
and
cmp
cli
sahf
pop
enter
inc
out
shll
lcall
add
outsl
jb
adc
add
xorl
mov
je
mov
add
cmp
jecxz
in
stos
sbb
and
jle
fisttpl
inc
xor
ficompl
ljmp
mov
inc
xchg
dec
push
mov
cmp
pop
xlat
dec
xor
gs
xor
fcomp
fcoml
xchg
clc
or
pop
das
jbe
mov
test
sbb
popf
jmp
sub
mov
pop
mov
out
inc
ds
add
adc
mov
fdivrs
or
dec
fisubs
mov
or
cmp
dec
and
rorb
or
inc
cmpsb
pushf
ss
mov
cmc
xchg
idiv
push
jb
mov
rcr
cmc
out
andb
mov
decl
out
je
and
shll
or
or
xchg
iret
jle
or
and
lods
gs
scas
jmp
insb
test
mov
out
sub
fmul
mov
cmp
fmull
or
packssdw
icebp
test
inc
jae
jmp
ficompl
cmpsl
sti
inc
mov
cmp
jge
mov
dec
dec
pop
sub
xchg
xor
sbb
cwtl
leave
pop
mov
sub
enter
fnstcw
negb
arpl
insb
mov
xor
outsb
push
outsl
rcrb
jmp
arpl
jb
jmp
jle
pop
push
arpl
ret
mov
iret
push
sub
fs
rolb
loop
push
cmp
insb
jnp
sub
xor
xor
xor
add
insb
dec
bound
adc
lahf
cmp
push
mov
jbe
into
icebp
xorb
push
add
imul
leave
outsl
test
test
lret
test
out
out
add
dec
mov
cmp
out
movsb
imul
cmc
mov
adc
pushf
int3
ret
lods
sahf
adc
bound
xor
aaa
jle
daa
lods
push
pushl
add
outsb
leave
mov
dec
or
sub
mov
sub
lret
insl
shr
dec
cld
aad
add
adc
sub
add
mov
jle
ds
mov
jo
ficompl
pop
aas
or
in
jmp
arpl
xor
xchg
in
pop
sbb
dec
xor
cltd
adc
cli
rorl
xchg
je
pop
in
adc
cltd
out
fs
pop
sbb
out
pushf
or
repz
enter
dec
mov
mov
inc
jno
pop
adc
pop
dec
xchg
fs
dec
rorb
dec
repnz
insl
pop
adc
cmpsl
mov
cwtl
repnz
jl
popf
push
popa
push
out
cmpsl
mov
pop
mov
lahf
orb
dec
daa
lret
rcl
fidivs
jo
stos
or
lods
lret
push
mov
dec
bnd
and
les
inc
inc
bound
es
mov
xchg
movntq
or
ficoml
pushf
outsl
lods
mov
mov
jle
pop
or
lds
lds
ret
cli
cmp
enter
push
pop
xchg
pop
jnp
in
call
jl
xlat
rcll
rclb
js
inc
push
sti
push
jbe
xor
loopne
orb
dec
dec
jge
and
add
push
xor
jb
clc
xor
push
adc
xorb
lea
fwait
mov
int3
lea
addr16
insl
cmp
inc
add
mov
or
mov
inc
cmpsb
cmp
cli
aad
sbb
sbb
push
notb
pop
js
pop
push
popa
dec
mov
imulb
pop
ds
shlb
lods
add
stc
ja
pop
xor
pop
ret
cmp
mov
fimuls
and
adc
mov
cmpsb
push
mov
or
rolb
iret
out
jle
mov
sbb
add
sub
lahf
daa
data16
sbb
into
fstps
lcall
push
mov
mov
sub
mov
pop
xchg
nop
loop
pop
scas
fnstcw
inc
pop
ret
mov
sub
cmp
sbb
call
sbb
pop
mov
dec
sti
jl
xchg
dec
cmp
cwtl
cwtl
sub
iret
repnz
lods
aaa
into
outsl
loope
add
mov
orl
jo
sbb
es
sarl
dec
sbb
nop
lds
sub
jns
xchg
into
or
push
out
add
cs
mov
fs
xchg
mov
mov
push
push
and
test
lods
stos
out
mov
filds
pop
push
ljmp
sub
or
gs
jbe
add
xchg
int
iret
dec
fucom
movsb
sbbl
aaa
push
je
pop
les
jmp
mov
fidivl
push
int
add
pushf
sub
ljmp
push
mov
adc
outsb
ljmp
loopne
mov
or
popf
dec
pop
mov
push
jecxz
movsl
test
jl
inc
add
add
adc
jns
adc
lcall
xchg
sbb
shl
or
fadd
inc
jnp
cmp
and
pop
rcl
movsl
mov
addb
pop
jg
fistl
je
aaa
sbb
add
mov
movsl
cs
jne
cmpsb
scas
or
out
xor
std
loopne
enter
movsb
jp
loopne
jo
push
inc
repz
cli
sti
jo
lock
lds
rorl
pop
lock
mov
gs
into
xchg
inc
test
fistpll
aad
int
mov
add
aam
mov
sub
push
mov
sub
xorb
mov
cwtl
sbb
fdivs
xor
jne
mov
add
out
pop
mov
add
fbstp
mov
cmpsb
pop
cli
sub
in
adc
nop
sub
and
mov
cli
mov
push
dec
pop
mov
in
jbe
xlat
add
cmp
mov
jno
push
ficoml
aam
rcrl
mov
inc
xchg
iret
mov
sub
rorb
adcb
ret
add
push
xchg
subb
dec
xlat
je
pop
loopne
pop
mov
ja
push
pusha
xor
jo
fmull
aaa
aaa
popa
cltd
mov
dec
push
adc
pop
dec
jl
xlat
pop
imul
xchg
mov
aaa
sub
xchg
int
adc
aam
ret
push
inc
pop
and
mul
mov
test
jecxz
push
out
aam
push
jbe
and
stc
fcomip
sahf
mov
dec
nop
pop
mov
mov
ficoml
mov
push
fnstenv
pop
push
inc
or
out
dec
pop
in
adc
jp
cmp
aad
cmpsl
scas
out
ss
inc
push
push
inc
dec
cwtl
inc
rorb
scas
inc
mov
jae
fstpt
ds
push
ret
dec
imul
lcall
repz
cld
mov
sbb
xadd
sbb
adc
jmp
repnz
push
or
movb
xlat
shrl
and
and
adc
cltd
sub
imul
xchg
dec
add
push
movsl
add
outsb
enter
push
cmp
cmpsl
lock
in
clc
jnp
and
cli
daa
add
test
and
nop
mov
fildl
pop
stos
repz
vaddps
mov
lret
or
sub
sti
scas
and
mov
out
lret
out
sahf
sub
mul
push
push
fucomi
mov
ss
jo
fisubs
je
negl
shrl
jl
xlat
adc
lcall
push
push
inc
adc
dec
pushf
imul
mov
cwtl
insl
mov
daa
push
popa
mov
adc
add
cmp
lea
fimull
xchg
popa
daa
std
into
adc
stos
mov
or
sahf
test
sbb
ljmp
mov
stos
andl
pop
shrl
mov
jmp
add
pusha
rcrb
inc
sti
inc
jnp
pop
subb
jle
call
int
xchg
add
cmp
lret
loopne
je
int
jb
mov
jne
icebp
mov
jo
push
adc
sbb
mov
iret
add
push
mov
aad
add
pop
ret
add
mov
fmul
or
and
inc
jb
insw
xchg
pop
mov
xchg
sub
addr16
mov
fisubrs
leave
popa
push
popf
fwait
js
arpl
dec
insb
sub
rcll
movups
dec
movsb
bound
push
cmpsb
movsb
enter
insl
cmpsl
cmp
xor
dec
ss
fbstp
fldl
repz
jae
ds
bound
fcomps
out
aam
rclb
xor
movl
nop
scas
test
adc
sbb
push
xchg
sub
enter
cwtl
dec
jecxz
push
aam
jp
cld
dec
leave
enter
loope
mov
shl
xchg
mov
dec
mov
mov
inc
pop
or
push
lock
mov
repz
dec
cwtl
popf
push
mov
xlat
int3
mov
sbb
add
lcallw
rcrl
dec
pushf
pop
daa
popa
outsl
add
cmp
test
mov
jg
and
cmove
cld
jl
and
push
scas
push
pop
inc
jne
loop
dec
leave
dec
mov
ret
and
hlt
into
push
sbb
add
add
jmp
inc
lea
xchg
addr16
xchg
or
mov
test
or
popa
mov
add
pop
jecxz
pop
enter
sub
and
lret
mov
mov
sub
and
loop
inc
fldt
idivb
inc
jbe
cmp
stos
clc
jmp
and
pop
push
popf
xchg
cmp
dec
pop
mov
jnp
xchg
and
test
fidivs
ret
lahf
mov
lcall
lods
sbb
xchg
push
fsubp
jmp
add
push
add
out
or
mov
add
and
sub
mov
mov
mov
cld
dec
xchg
popfw
mov
pusha
cmpsb
stos
jb
arpl
jno
rcll
int3
aad
lret
cs
subb
imul
gs
jns
aaa
daa
cld
cltd
pop
pop
xor
popa
mov
dec
add
arpl
dec
push
mov
pop
and
pminub
jbe
paddsb
sub
and
push
sub
sub
hlt
in
push
sbb
push
inc
mov
jns
jmp
jmp
sub
mov
dec
shlb
sbb
inc
xchg
subl
divb
into
pop
dec
jg
and
aad
pop
movsl
sbb
or
jle
jge
or
in
dec
jno
imul
faddl
addl
mov
and
xchg
and
jbe
xchg
iret
out
imul
inc
rol
adc
push
pop
fisubrl
mov
jae
pop
mov
jmp
cmp
int3
aad
and
xchg
sarb
add
mov
and
stos
jne
outsb
bound
mov
arpl
pop
pop
movsl
sub
movsb
jno
push
pop
mov
mov
inc
dec
sbb
dec
jle
leave
lret
jne
jb
sbb
in
and
mov
sub
test
daa
and
mov
add
pop
popf
adc
mov
adc
adc
xchg
mov
inc
je
out
nop
jg
inc
ja
stc
sbb
pop
xorb
push
into
repnz
scas
rcl
in
test
inc
stos
lods
push
je
sub
lods
push
adc
test
pop
leave
pop
push
mov
or
loope
mov
mov
jecxz
push
mov
push
fsubrp
or
adc
mov
arpl
jno
mov
jne
mov
fcom
add
dec
xlat
movsl
insl
fs
fadds
icebp
add
jbe
in
aaa
leave
cmpsl
or
and
out
or
cmpsl
mov
add
cmp
mov
jnp
jge
shll
outsl
adc
and
int3
stos
inc
jo
mov
pop
call
lret
sahf
sub
pop
jbe
cwtl
mov
inc
push
mov
sbb
stc
mov
ljmp
or
cwtl
jbe
fs
sub
insl
sub
into
jno
loopne
mov
repnz
jns
scas
stos
jle
repnz
stos
pop
repnz
movb
enter
shrb
push
xlat
push
jne
push
and
cmpsb
inc
popf
add
jne
mov
call
jb
loop
arpl
dec
insb
iret
hlt
or
cwtl
stos
ljmp
push
cwtl
test
pusha
and
sub
je
ret
pop
call
add
mov
inc
cld
clc
test
push
lea
mov
sbb
mov
das
icebp
mov
ja
fists
les
popf
rcll
mov
imull
lret
inc
push
push
add
sahf
aaa
pushf
push
jo
sub
inc
in
push
out
jle
mov
sti
push
adc
insb
mov
xor
pushf
add
mov
fs
push
push
cwtl
fmulp
lds
mov
inc
xor
jns
je
mov
xchg
in
add
data16
in
xorl
insl
test
xchg
xor
jo
jae
inc
xchg
inc
cmp
and
mov
fcom
jbe
sbb
adc
jno
aaa
fsubl
mov
sub
pop
and
out
dec
mov
loopne
outsl
jp
mov
dec
fdivrl
jnp
iret
fwait
pop
xchg
jbe
cmp
ja
cmpsl
jnp
sbb
flds
push
addr16
jle
pushf
adc
jle
jbe
ds
call
outsl
sub
cld
push
testl
gs
arpl
icebp
sti
xchg
sub
fcomps
lcall
das
pop
mov
cltd
xor
aas
sbb
jl
sub
dec
cmp
sbb
push
ss
hlt
xchg
and
pop
lock
cmp
cmp
icebp
jo
icebp
mov
lret
insl
test
inc
addr16
pop
aam
xchg
dec
lods
mov
in
mov
lea
dec
xchg
push
inc
jo
cltd
pop
mov
adc
push
ss
popf
push
pop
and
rorb
out
out
pop
loope
xchg
into
xor
clc
sbb
or
enter
or
fildll
pop
xor
scas
popf
ret
and
xchg
mov
add
mov
mov
mov
and
pop
add
mov
hlt
xor
mov
cmc
pop
cli
iret
pop
or
xchg
movsl
push
lret
aas
rclb
pusha
jge
adc
shll
or
adcb
mov
addr16
xor
push
mov
loopne
push
ds
lods
inc
inc
jl
xchg
icebp
jmp
in
add
or
lock
sbb
mov
cltd
fisubrs
idiv
xlat
popa
cmpl
call
cmp
mov
cld
sub
repz
fisubl
out
xchg
xchg
movsl
aaa
imul
pop
js
xchg
cmpsl
push
js
hlt
mov
mov
cmp
inc
icebp
cs
shrl
cmp
xor
dec
aas
shll
dec
dec
inc
xor
sti
jbe
mov
inc
or
sub
pop
mov
jnp
in
je
adc
add
inc
je
sub
pop
mull
cmp
push
cmp
sub
pop
loope
pop
js
xor
leave
mov
cld
loop
sahf
push
das
mov
lds
lahf
xor
mov
dec
push
int3
or
imul
pop
ror
mov
jmp
mov
lock
cmpsl
bound
add
push
add
loop
addb
imul
imul
add
push
jns
jns
loopne
add
or
xor
or
mov
push
add
sbb
jo
cmp
ja
arpl
in
adc
mov
std
and
repz
xor
cmpsb
movsl
insl
inc
jbe
popf
out
roll
ret
cld
dec
repz
push
inc
filds
fdivrl
sbb
and
outsb
pop
aad
ret
mov
popf
ret
fdivl
xchg
cltd
pop
out
sbb
fwait
or
or
loop
jle
mov
cmc
shlb
mov
mov
cmc
aas
fsubr
lret
ficoml
lds
mov
sti
xchg
test
mov
arpl
arpl
scas
push
aas
xor
jns
cmpsl
leave
arpl
add
push
mov
js
mov
or
cmp
sub
push
adc
repnz
mov
mov
dec
jo
inc
fistpl
xlat
mov
xchg
dec
push
push
adc
mov
punpcklbw
mov
pop
addr16
pop
mov
push
mov
jp
enter
int
push
or
xlat
dec
out
pop
fldl
pop
dec
into
jp
out
out
mov
mov
inc
sti
dec
nop
jnp
or
jae
inc
cmpb
sub
push
sbb
out
inc
dec
ljmp
mov
sbb
mov
out
shll
fcmovu
adc
fldt
cmp
mov
lods
and
mov
ds
inc
pop
pop
out
ss
adc
mov
jns
jno
dec
adcl
mov
cmp
mov
adc
test
jg
inc
mov
add
lcall
shl
int3
mov
ficompl
mov
aam
rorb
xchg
mov
jl
and
push
mov
jbe
push
dec
dec
ret
data16
movsl
push
mov
jl
mov
push
lret
in
in
test
aad
adc
sbb
add
adc
stos
add
test
ja
in
inc
scas
int
or
inc
shl
je
jne
in
push
les
repnz
ret
iret
jbe
push
jne
test
sbb
inc
jbe
jbe
and
ljmp
mov
sarb
imul
pop
sti
loop
hlt
test
psubw
cld
inc
lods
or
push
mov
mov
lds
repnz
jb
sbb
add
xlat
or
jno
jg
test
jg
xlat
rcrl
xor
aam
lahf
xor
pop
cmp
xchg
sahf
lods
xchg
fcoml
dec
hlt
xchg
mov
push
adc
cs
jg
push
pusha
pop
push
aam
pusha
and
in
negb
aaa
cltd
loopne
cmc
mov
out
jo
jmp
fdivs
jno
cmp
inc
lds
cli
nop
test
sbb
mov
and
stc
imul
andb
cwtl
cmp
xor
setb
lret
or
scas
aas
dec
lock
rol
add
sub
out
jg
outsl
add
jb
xor
pop
movsb
xchg
or
and
cmpsl
fiaddl
js
or
push
add
mov
into
and
jl
inc
inc
dec
sub
nop
mov
add
movsl
adc
add
mov
loopne
mov
adc
popa
and
sbb
shll
jno
mov
js
aad
cmp
add
mov
std
pop
mov
mov
int
in
bound
adc
xor
int3
xor
popf
inc
jo
imul
mov
xchg
popa
cmp
testb
or
mov
xlat
mov
mov
stos
sub
scas
pop
aam
arpl
dec
into
cmpsb
push
test
xorb
test
dec
test
inc
jmp
lcall
or
xchg
rolb
mulb
push
lea
push
es
inc
xor
adc
aaa
inc
jo
pop
loop
repz
mov
jp
arpl
arpl
adc
imul
es
inc
or
sahf
xchg
push
outsb
cmpsl
rorb
sbb
cltd
and
out
imul
xchg
ret
clc
cs
fcoms
xor
scas
cmp
mov
sbb
shr
mov
cmp
jne
xchg
pop
or
push
or
fadd
adc
adc
pop
pop
fimull
inc
and
sbb
sub
lret
cmp
push
aam
leave
imul
adc
and
sbb
dec
in
adc
xor
push
xchg
in
imul
mov
lahf
fcoml
lret
adc
push
adc
cld
iret
or
pop
jp
add
xor
cmc
pushf
xor
fisubrl
daa
popa
adc
inc
cmpsl
out
jl
int
sbb
out
jo
sub
xor
inc
xchg
xor
hlt
push
sahf
mov
movsl
jmp
int3
cmp
pusha
adc
idivb
xor
nop
cld
ljmp
dec
xor
mov
in
jp
pop
out
loope
cld
sbb
ret
sbb
movsb
sahf
mov
adc
cld
mov
sub
sbbb
mov
sbb
aaa
dec
add
in
xchg
and
xlat
pop
enter
pusha
imul
or
mov
jp
xchg
adc
dec
xor
xchg
arpl
js
adc
div
or
shll
mov
pushf
ja
andb
jne
mov
cmc
mov
lahf
adc
lret
rcr
stos
addb
dec
cmc
popa
leave
pop
fcompl
inc
xchg
dec
rolb
sahf
jle
add
cli
in
cmp
sbbl
or
xor
nop
jl
mov
or
push
lods
std
pop
cmp
repnz
lock
pop
aaa
addr16
mov
cmp
loope
adc
test
imul
fwait
cmp
mov
or
lock
pop
movsb
js
jae
jmp
pop
jp
iret
mulb
mov
mov
stos
fwait
xlat
dec
cmp
insl
pop
ret
dec
xorb
sbb
jb
outsl
out
pand
jmp
inc
mov
scas
mov
outsb
cld
and
cmc
test
aam
in
je
lods
push
dec
movsl
pop
jle
cmp
ffree
xchg
scas
mov
pop
subl
repnz
data16
sub
icebp
inc
lcall
iret
xor
lea
dec
add
outsl
sub
adcl
adc
dec
sbb
xor
mov
xor
push
fwait
out
fists
push
pop
mov
hlt
cltd
sub
xchg
pushf
xor
fs
dec
stos
aad
roll
fdivrs
fucomip
fists
das
mov
xchg
int
in
add
xlat
push
xchg
mov
std
imul
or
fwait
idivl
mov
popf
xor
pop
mov
in
pop
mov
mov
roll
mov
neg
push
rorb
cs
dec
sub
sbb
xchg
xchg
test
pop
mov
mov
jb
add
inc
jb
iret
or
in
je
in
inc
sbbb
into
shll
adc
dec
mov
sbb
shll
in
cmp
push
mov
test
ud1
sub
pop
push
push
inc
jecxz
cmp
mov
or
mov
loope
and
iret
mov
inc
add
pop
push
mov
adc
mov
mov
push
cli
add
pop
fcoml
dec
inc
cmp
fcmovnu
ret
sbb
cmc
mov
sti
sub
lcall
inc
sahf
call
les
mov
mov
pop
loope
sub
imul
int3
push
fdivrl
push
xchg
orl
jno
cli
add
mov
jbe
push
adc
popa
sti
mov
lahf
test
inc
add
pop
das
and
clc
inc
icebp
mov
scas
pop
lea
es
or
sti
xlat
jmp
imul
xlat
xchg
cli
xor
out
mov
push
push
testl
pop
mov
cwtl
pop
data16
sahf
or
rcll
in
jmp
xchg
test
xrstors
xchg
mov
push
dec
popa
or
mov
pxor
stos
je
mov
orl
ret
sbb
mov
out
sbb
in
mov
pop
mov
andl
aas
fs
mov
in
pop
push
mulb
xlat
aam
xchg
cmpsl
js
into
out
pop
ret
jno
or
mov
push
ret
pop
xchg
jbe
sti
fwait
stc
sbb
nop
imul
mov
add
mov
fstpl
sar
iret
int3
mov
mov
andl
jno
ret
loope
mov
aad
mov
xor
pop
inc
jns
andb
cli
orl
mov
aaa
aad
cld
lcall
rorl
movsl
xor
lret
dec
mov
jne
mov
xchg
pushl
ja
jecxz
popa
andb
mov
ss
int3
in
pop
js
sub
frstor
push
iret
hlt
and
arpl
or
sbb
inc
pop
nop
call
and
mov
and
test
dec
cwtl
push
leave
mov
out
sbb
xor
rorl
movsl
aas
inc
jl
arpl
inc
das
stos
adcb
add
jns
dec
sbb
shll
sbb
mov
mov
je
sahf
sub
fs
push
lcall
mov
adc
xchg
fldt
mov
push
mov
push
fucomip
mov
pop
mov
and
add
cmp
fisubs
and
sub
loopne
hlt
mov
adc
pop
cld
sub
aas
jb
push
stos
mov
fiaddl
std
push
xchg
xchg
mov
jno
adc
adc
pop
inc
out
and
loop
adc
addl
push
shrl
pop
adc
lock
sbb
xchg
stc
loope
jno
add
imul
add
mov
rclb
js
cs
and
sub
ret
or
mov
jecxz,pn
sbb
mov
add
jo
stos
sbb
imul
test
int
mov
push
push
mov
fnstenv
fmull
hlt
jo
xor
in
cmp
or
xchg
outsb
jg
mov
inc
and
cli
movsb
pop
data16
adc
cmp
xchg
inc
into
cld
jbe
clc
dec
adcb
adc
roll
adc
lret
out
je
adc
xor
ret
inc
out
test
leave
stos
fstpt
das
sbb
pop
cmp
imul
push
movsl
test
in
xor
push
cmp
les
aas
es
sti
jo
insl
mov
lods
fnstcw
cwtl
jne
iret
and
xchg
cmpsb
jecxz
or
xor
insb
pop
mov
adc
xrelease
stc
popa
jnp
test
hlt
ja
pop
iret
popa
or
pop
adc
stos
adc
or
sbb
data16
out
mov
and
mov
xor
sbb
and
add
shll
jp
cli
push
and
lea
lods
sub
sub
sub
cmp
dec
mov
xor
daa
cmpsl
xor
jno
and
mov
test
mov
mov
jo
lret
pop
repnz
xor
pop
mull
test
mov
in
icebp
movsl
xor
cmp
and
and
int
adc
push
push
cmc
xor
aaa
xchg
arpl
mov
stos
jne
mov
bound
out
adc
int3
cmpsl
fdivs
aaa
int
mov
and
mov
test
or
mull
pop
mov
repz
hlt
xchg
call
pop
mov
into
or
aam
adc
xchg
lods
sbb
aam
jno
stos
xor
mov
xchg
sub
out
jg
sbb
jge
mov
cmpsb
movsb
inc
test
jecxz
adc
loopne
adc
adc
xor
push
mov
aam
outsl
es
cmp
cmp
add
enter
push
mov
cmp
stos
ljmp
dec
push
xchg
dec
jl
sub
test
loope
cltd
mov
push
popa
addr16
shll
adc
pusha
add
shl
fsubr
cld
xor
into
jo
xchg
popf
imul
push
push
mov
repnz
in
mov
jb
dec
repz
pop
push
out
nop
clc
cmp
aaa
xor
xor
sbb
cmc
sbb
movsl
repnz
or
ss
pop
pop
inc
lret
jl
or
pop
sbb
nop
inc
out
push
mov
std
or
mov
sbb
pushf
mov
fisubrs
lret
jns
test
xor
mov
sti
les
pop
mov
ret
push
jl
and
and
inc
out
adc
dec
aad
outsl
jne
pop
lret
sbb
adc
cmp
ffreep
dec
pop
dec
push
fucomp
mov
xor
jae
lret
sub
stos
imul
xorb
dec
sub
sub
add
pop
lods
in
xor
out
push
fwait
sar
inc
mov
cltd
fmull
ret
jns
pop
and
fiaddl
and
lea
add
add
lods
sub
or
sub
sbb
arpl
and
xchg
cmp
jle
mov
mov
xchg
or
pop
movsl
sub
pop
fwait
adc
jmp
in
sub
xchg
lds
xor
sbb
addr16
out
movsl
mov
jae
mov
stos
pop
incb
dec
inc
mov
clc
add
xchg
jae
cld
jmp
sbb
push
xchg
loopne
inc
rorb
jge
scas
cmp
push
dec
inc
push
stos
adcl
insb
push
mov
push
fcomps
pop
mov
inc
ds
sbb
cli
push
or
in
movsl
hlt
shlb
inc
lret
fcoml
adc
add
negl
or
sbb
out
inc
jge
sub
idivl
and
inc
lds
jne
add
out
sub
push
push
mov
mov
repz
mov
cmp
lahf
lods
jecxz
pop
xor
test
xchg
pusha
fwait
inc
movsb
clc
pop
jnp
and
cmp
dec
lds
mov
mov
or
neg
out
cltd
loopne
xchg
std
aam
je
sbb
mov
pop
jecxz
lock
das
add
cmp
mov
lods
pusha
pop
les
movsb
shrb
cmpsl
shr
popa
xchg
mov
icebp
mov
or
inc
sbb
or
sbb
sbb
loop
jl
insb
dec
cmc
push
scas
jg
test
push
jno
pop
sbb
fildll
jmp
pop
in
adc
das
jnp
mov
mov
data16
push
and
xchg
jle
es
lret
add
lcall
mov
lahf
scas
inc
push
mov
in
fbld
in
mov
repnz
or
xor
icebp
or
mov
fld
imul
pop
inc
xchg
mov
inc
push
sub
imul
jne
dec
mov
inc
mov
mov
enter
adc
jae
adc
xor
mov
inc
loop
xchg
xor
mov
mov
das
data16
and
dec
sbb
jno
shlb
repnz
imulb
push
movl
sar
or
aas
dec
negb
add
xchg
sub
adcl
cwtl
in
xlat
jbe
adc
loope
icebp
aam
movsb
gs
lock
fsts
inc
cmpsb
pop
lock
inc
stos
aaa
push
dec
lods
cli
divb
lock
inc
lret
sbb
dec
movsb
aad
dec
scas
mov
test
lret
popl
sub
adc
push
mov
xchg
cmpsb
add
aam
adc
mov
faddl
xlat
stos
ljmp
mov
and
pop
int
jle
fisubl
mov
lahf
stos
mov
lock
sub
lods
inc
xor
xchg
mov
sbb
dec
ja
jmp
push
cmp
rcll
movsb
pusha
insb
sub
fsubr
stos
outsl
mov
mov
lret
push
xchg
xchg
das
dec
xor
inc
xor
jmp
sbb
cmp
leave
add
mov
cmp
pop
movsl
push
dec
movsb
dec
flds
sub
xchg
sub
in
push
pop
jle
fwait
cmp
stos
mov
adc
inc
fcompl
fs
enter
lods
or
push
add
and
mov
adc
fcomps
push
fiaddl
jg
sbb
popa
jb
not
push
adc
testb
push
pushw
pop
lcall
sub
mov
mov
jne
pushf
mov
fiaddl
and
iret
ret
rclb
lret
loop
repz
or
adc
sub
mov
shlb
popa
int
jbe
mov
inc
sub
mov
xchg
fstpt
sahf
cld
mov
les
insb
xor
mov
or
lds
gs
push
xor
adc
leave
inc
jge
lret
dec
mov
cmp
outsb
add
xchg
push
cmc
cmc
ficompl
inc
jne
shrl
push
jno
mov
popa
clc
xchg
fbld
jle
out
xchg
xor
fiaddl
add
cmc
mov
mov
jge
fsubrl
or
pushf
ss
dec
sbb
dec
mov
or
mov
xchg
rol
and
adc
lds
add
mov
lds
fwait
and
outsl
pop
sub
enter
xor
or
shrb
xor
cmp
jbe
cmp
popa
movsb
imul
pop
fimuls
sbb
cmp
pop
xor
push
imul
ss
and
push
inc
ljmp
roll
xor
cmp
fs
ret
addb
movsb
cmpsl
pop
fldl
inc
add
ja
mov
jbe
jns
xor
movsl
mov
push
push
jmp
mov
loop
mov
jl
mov
mov
dec
shrb
mov
mov
xor
pop
mov
jae
inc
es
aad
cmp
sub
push
sbb
sbb
mov
or
xchg
test
xchg
dec
add
fistpll
sbb
sahf
clc
imul
int3
mov
stc
frstor
aam
lahf
inc
cwtl
stc
pop
dec
jp
fstl
mov
mov
inc
mov
lcall
dec
dec
jo
inc
fistl
subb
push
sbb
dec
sub
ss
cmp
int3
jns
xor
cmp
jl
or
sub
mov
aam
pop
push
jns
rcll
lock
dec
dec
shl
push
std
adc
popa
inc
mov
sbbb
divps
jge
inc
inc
xchg
jle
stc
and
loop
dec
lock
jbe
popf
xchg
loop
das
cwtl
cmp
cld
mov
add
sbb
add
rolb
aaa
and
dec
in
dec
data16
fld
jmp
hlt
add
fcompl
jns
es
sub
lcall
xor
inc
aam
fwait
imul
sbb
scas
mov
push
ljmp
sbb
je
sub
sub
sub
cmpsb
adc
push
jns
gs
lds
imul
rorb
adc
dec
sbb
popl
popa
in
cmp
ret
stc
js
mov
xor
into
dec
leave
mov
push
out
and
and
dec
mov
and
hlt
lock
popf
mov
xchg
cmpsl
jnp
push
mov
and
ret
aaa
mov
push
aas
sbb
sub
dec
xchg
outsl
fidivs
sub
mov
aaa
dec
sbb
mov
decb
wrmsr
xor
cld
sbb
mov
js
lahf
es
cmp
xchg
pop
add
cld
xchg
leave
mov
and
sub
dec
lods
cmpsb
inc
and
add
mov
pop
push
pop
mov
cltd
adc
inc
jp
scas
add
sbb
or
adc
lret
stos
dec
das
ret
adc
inc
daa
inc
push
sbb
out
ljmp
mov
push
sbb
and
mov
sarb
adc
loopne
cmp
xor
push
test
mov
jl
ljmp
clc
mov
adcb
fucomip
test
scas
inc
dec
js
je
jl
leave
ret
mov
es
jbe
jp
imul
push
push
adc
pop
cmp
lret
xchg
mov
pop
xor
repnz
daa
and
jnp
xlat
mov
fldcw
fs
int
pushf
ficompl
lcall
mov
jnp
mov
xchg
into
movsl
adc
daa
lea
cltd
cmp
les
cltd
inc
mov
jne
dec
movsl
int3
movsb
mov
ret
push
pop
or
sub
xor
mov
icebp
sub
xchg
sahf
pop
dec
out
push
inc
stos
ja
pop
lcall
out
in
out
mov
insb
mov
xchg
lods
into
add
mov
mov
xor
int
das
cmp
sub
hlt
pop
sbb
adc
ljmp
shlb
in
scas
rorb
pop
cs
or
loope
or
push
je
mov
in
ffreep
scas
cmp
dec
loop
nop/reserved
mov
xchg
sub
lret
hlt
addb
xchg
cmp
popf
pop
adcb
idiv
xor
ljmp
and
shrb
push
mov
cmp
or
shlb
and
pop
jne
pop
pop
clc
push
sub
mov
fxch
fcmovnu
loop
lcall
xor
lods
fwait
arpl
in
adc
mov
aam
les
mov
ret
mov
imul
xchg
inc
cmpsb
xchg
int
xchg
push
mov
adc
jle
ljmp
xor
mov
imul
xor
mov
push
fwait
pop
lea
rcrl
mov
ret
hlt
mov
xor
into
lret
popf
sbb
inc
sub
ljmp
push
cld
push
leave
out
mov
jmp
mov
pusha
int
stos
rcrb
adc
mov
cmp
lahf
mov
xor
sti
sub
cmc
insb
pop
arpl
arpl
dec
ja
jmp
icebp
int3
inc
dec
pop
out
mov
sti
jecxz
pop
pop
inc
adc
out
repnz
xchg
repnz
jge
icebp
jecxz
js
mov
in
das
adc
cmpsb
jno
pcmpeqd
or
mov
jmp
mov
xor
pop
jne
and
xchg
jge
loop
cs
cmp
pop
sahf
inc
subl
out
mov
xor
ss
sub
sub
and
mov
or
out
subl
add
push
inc
add
stos
xor
xor
xor
dec
jae
inc
out
add
xchg
add
outsl
ficomps
mov
nop
push
clc
adc
cmp
and
lods
pop
in
mov
adcb
push
aad
repnz
push
lods
mov
push
in
pushf
jo
pop
in
je
pop
pop
push
pop
daa
dec
xchg
xchg
outsb
loopne,pn
cmpsl
push
shlb
mov
in
xlat
mov
or
jo
xor
dec
adc
in
sub
test
jb
xor
cmc
mov
mov
push
in
dec
addl
cmpsb
shr
mov
dec
mov
push
cld
lcall
cmp
cmp
mov
xor
bound
push
lock
cmp
inc
inc
inc
lds
clc
cld
insb
cs
xchg
imulb
in
adc
psllq
jp
into
and
inc
adc
mov
xchg
addr16
imul
test
call
pop
in
decl
cwtl
sbb
lods
xor
mov
push
daa
jmp
and
bound
cmc
shrl
pop
lods
inc
push
or
in
inc
push
cltd
insb
add
mov
sbb
lahf
nop
dec
jmp
mov
std
ja
sbb
movsl
push
gs
pop
cli
test
je
sub
jne
sti
jb
out
clc
dec
out
jnp
sbb
mov
adc
or
mov
out
adc
leave
ss
lcall
ret
lods
xlat
test
stc
lret
inc
mov
or
or
and
insb
xor
sbb
repz
pushaw
fdivr
lcall
mov
and
movsl
xchg
cmp
push
cli
shl
cltd
mov
mov
scas
repnz
push
push
addb
fdivrl
stos
pushf
ds
cs
cltd
daa
push
mov
mov
cmpsl
jp
cmp
scas
mov
cmc
ja
cmp
push
imul
icebp
sbb
outsl
daa
push
or
popf
xor
std
and
mov
sarb
lret
and
mov
lret
adc
sbb
pop
testl
mov
sub
mov
stc
xor
mov
mov
xchg
leave
sub
es
jno
mov
sti
mov
jbe
fsubr
dec
scas
push
scas
dec
push
dec
mov
addr16
int3
rclb
sbb
mov
movsl
aaa
movsb
xchg
xchg
mov
idivl
mov
xor
xor
xchg
jmp
ljmp
lcall
sbb
movsl
and
call
fisttpl
mov
mov
xorb
pop
loopne
fcoml
les
test
mov
xor
lret
push
xor
dec
cmp
hlt
shrb
xchg
push
subl
add
inc
xchg
mulb
cmp
push
test
pop
sub
xor
lret
sub
and
leave
xchg
jo
sub
pusha
push
and
aad
adc
ret
pop
inc
mov
push
imul
pusha
inc
mov
rol
imul
cmc
push
mov
add
ds
icebp
jmp
js
test
icebp
stos
mov
push
ss
xor
or
mov
cli
test
fnsave
mov
sbb
test
jae
or
aad
out
cmp
add
aas
mov
fstl
push
xchg
faddp
lea
test
jl
mov
mov
push
lods
ljmp
addr16
repnz
lcall
jge
fstps
mov
roll
movsl
jle
inc
and
clc
jae
sti
je
adc
mul
cmp
repz
es
add
dec
mov
add
sub
lret
aad
sbb
mov
mov
jle
popa
jp
cwtl
jmp
repz
out
leave
xchg
data16
inc
add
inc
sbb
fadd
idivb
mov
into
dec
lods
out
shlb
or
sub
dec
addr16
mov
jmp
and
sbb
adc
xchg
fldenv
and
mov
test
ja
pop
mov
mov
and
outsb
mov
lods
rcrb
shrl
aaa
cwtl
xchg
inc
or
dec
push
daa
lock
and
mov
push
in
and
repz
jecxz
popa
sti
mov
inc
popa
mov
es
ret
mov
cmp
mov
ja
gs
shr
mov
add
sti
pop
jo
push
into
mov
sbb
jl
mov
div
mov
fs
jecxz
pusha
or
pop
arpl
lock
incl
and
push
stos
lods
cld
lret
jo
cltd
xchg
and
mov
pop
xchg
cmp
or
sbb
jmp
inc
test
mov
dec
mov
cmpsb
call
rcr
xlat
jg
push
mov
rcrb
mov
jns
dec
and
xchg
pusha
ja
aam
or
vmovdqa
mov
outsb
mov
imul
cmpb
popa
js
cmp
nop
ds
jo
pop
fcompl
icebp
lahf
lods
xor
shlb
mov
pop
shrb
inc
movl
pusha
push
xor
adcl
enter
xchg
cmp
mov
pop
jle
hlt
movsb
dec
repz
mov
inc
pop
repnz
test
test
mov
add
sub
cltd
cmp
repz
mov
push
xor
sbb
mov
jo
add
adc
aas
push
clc
adc
ficoms
ja
popf
adc
mov
aaa
mov
push
les
fdivrl
leave
jmp
int
jae
outsb
in
clc
daa
add
jbe
and
test
out
popf
jp
mov
movsb
je
rolb
and
xchg
xor
lods
nop
xchg
push
jle
fwait
ja
rol
shrl
mov
fildl
adc
sub
js
sub
cmp
std
dec
inc
ja
iret
imul
enter
mov
or
pop
mov
xchg
addr16
orl
mov
movsl
ret
inc
mov
sub
jbe
push
pop
cmpsb
push
xchg
inc
or
int3
test
and
fildl
fmuls
jecxz
std
xor
xchg
les
adc
jb
push
test
push
sbb
and
mov
scas
aaa
rclb
testb
cld
dec
div
pop
in
rorl
sbb
out
jge
pop
negb
mov
jno
sbb
xor
ret
lret
stos
stos
cmp
xor
orb
add
or
lock
pop
les
xchg
push
and
int3
dec
jmp
jmp
cmp
popf
jb
mov
xchg
or
sbb
es
push
imul
scas
fiaddl
mov
xchg
inc
insl
and
lea
and
ffreep
outsb
cmp
sahf
lock
xchg
mov
pop
call
sub
jmp
out
fsubl
js
mov
mov
scas
add
mov
add
dec
rcrl
mov
adc
jno
jmp
xor
xchg
or
out
add
xchg
pop
pop
and
and
adc
lahf
mov
push
push
aas
xchg
add
testl
and
call
int3
mov
mov
ret
mov
iret
mov
sub
mov
or
dec
push
daa
cmp
lods
jo
call
pop
in
adc
outsl
out
ret
mov
enter
jmp
adc
lds
cwtl
movsb
scas
je
pop
lock
aaa
fidivrl
sub
scas
xchg
mov
fisubl
aas
fiadds
cmp
or
mov
xor
stos
ss
leave
daa
test
sub
mov
iret
test
sti
fs
clc
lds
mov
adc
lcall
dec
sub
jg
and
cmp
add
jnp
mov
loope
out
xchg
sbb
lock
into
mov
mov
fs
leave
pusha
shl
insl
xor
or
push
or
out
hlt
add
fxch
inc
ret
or
jae
add
sbb
call
in
std
adc
pop
jmp
mov
jnp
and
mov
mov
pop
cwtl
push
push
push
cmp
pop
inc
cwtl
test
jp
cmpsb
xor
mov
dec
test
fs
sbb
mov
jg
cmp
pop
movsb
xor
pop
cli
and
dec
into
or
inc
js
clc
xchg
mov
pop
xlat
andl
mov
lods
lds
mov
sbbb
es
and
rcrl
xchg
adc
int3
mov
ljmp
or
imul
sbb
mov
push
rol
mov
mov
arpl
leave
lock
dec
imul
cmp
popa
mov
xchg
or
das
fucomp
sub
inc
ds
lret
aad
sbb
sbb
cmp
mov
popf
sub
push
call
movsb
push
aas
lods
mov
testb
loope
sbb
icebp
imul
rol
xchg
jle
faddl
aam
out
mov
jbe
out
cwtl
lret
pop
xchg
push
aaa
insb
add
sbb
aad
dec
add
sbb
xor
jmp
mov
test
sbb
xchg
fwait
rorb
mov
addl
add
xchg
pop
and
xor
lcall
test
pop
fwait
std
sbb
jmp
call
cs
adc
adc
cld
push
js
mov
mov
lcall
pop
mov
or
xor
pop
dec
adc
xchg
add
cmpsb
aas
sbb
lds
inc
pusha
imul
icebp
loopne
push
xor
and
dec
decl
push
mov
mov
adc
jg
mov
bound
dec
idivb
push
cmp
adc
out
sbb
out
push
jns
les
adc
mov
loope
dec
cmpsl
out
insl
cmpb
inc
lret
lods
or
cmc
js
mov
pop
sbb
cmp
mov
pop
pusha
scas
mov
stos
xchg
push
movaps
rorb
push
testl
test
xor
ss
dec
inc
jge
and
jge
insb
shlb
mov
or
iret
sbb
dec
xchg
test
xchg
mov
popa
sbb
inc
aaa
xor
lods
xor
push
mov
into
sub
imul
or
mov
and
cmp
je
or
jno
push
cmpsb
jg
data16
loopne
das
mov
jae
fimuls
pusha
xchg
or
jp
add
push
mov
fnstcw
addb
jnp
lret
lock
ljmp
sbb
cmp
lea
pushf
ss
jmp
cmp
sub
mov
mov
xchg
or
hlt
pop
sbb
jl
fwait
sub
and
mov
mov
sahf
adc
aaa
fistpll
scas
mov
out
and
inc
mov
jmp
repnz
mov
jno
pop
fcoms
push
xor
pop
jb
dec
ja
xchg
or
movsl
mov
fwait
xchg
pop
ja
xor
pop
mov
sub
mov
xchg
push
sbb
js
dec
bnd
xchg
lock
dec
mov
inc
outsb
movsl
jmp
stc
add
jno
pushf
bnd
push
mov
and
jbe
jp
xor
dec
pushw
lret
ret
push
add
cmp
mov
pushl
push
jno
mov
jnp
lcall
dec
es
mov
les
rcl
and
dec
cmp
test
adc
xor
cltd
mov
mov
mov
or
sub
shlb
ss
test
test
mov
movsb
sbb
cmp
pop
sub
outsb
cmp
xor
subb
adc
jle
test
mov
in
fisubl
pusha
popa
roll
sub
outsb
xor
rcrl
into
ja
push
test
jecxz
sbb
icebp
adc
sahf
addr16
and
shl
push
sub
loopnew
push
xchg
loopne
or
test
lea
int
lahf
lods
push
aas
dec
xchg
les
dec
sbb
ljmp
out
mov
imul
adc
and
int
loope
bound
inc
ja
pop
mov
aas
les
push
xchg
dec
adc
and
leave
int3
xlat
addr16
mov
lahf
cmp
pop
and
jne
mov
cmp
not
rcrl
adc
mov
pop
fadd
mov
jl
pop
mov
ljmp
sbb
ret
rorb
jae
jbe
dec
pushf
adc
jl
or
mov
in
xlat
stc
lds
out
xor
xor
rol
jns
pop
je
in
cmp
push
push
mov
mov
jnp
daa
add
xor
subb
insl
mov
mov
test
add
pop
sbb
mov
pop
fwait
pop
in
cwtl
and
rcr
sub
add
ret
std
in
pusha
int
test
mov
lods
bound
clc
mov
mov
lahf
movb
rclb
ds
rorl
mov
or
daa
mov
xchg
push
xor
push
out
jl
cmp
fidivs
jecxz
enter
bound
gs
into
ret
aas
cld
or
in
xchg
mov
xor
sub
xor
xor
inc
pop
leave
or
insb
jns
std
call
fnstenv
mov
mov
and
aaa
movsb
and
dec
inc
xor
fisubrl
inc
and
rcrb
jno
sbb
or
dec
dec
mov
add
dec
and
xor
insb
std
sti
mov
jmp
jb
xor
cli
lcall
mov
lds
pop
mov
lds
and
dec
xchg
mov
sub
or
jns
imul
dec
ja
cmp
add
insb
cmp
sub
sub
push
mov
dec
ds
add
cmpsb
lret
in
inc
repnz
xor
xchg
pop
shll
clc
enter
jmp
icebp
inc
adc
xor
mov
stos
jp
pop
shl
das
mov
lods
jecxz
jb
loope
in
jb
out
pop
sbb
mov
mov
in
sysret
adc
mov
mov
jg
xor
jle
cld
jmp
or
daa
push
nop
out
jecxz
mov
mov
sar
sub
sub
mov
daa
shl
push
in
cmpsb
or
push
jmp
cmp
popa
je
test
adc
fimuls
das
xchg
pop
push
push
outsb
pop
xchg
ljmp
out
out
or
mov
push
push
mov
shr
outsb
jae
es
xor
ret
dec
inc
mov
enter
pop
outsb
sbbl
pop
ret
dec
daa
mull
adc
rcrb
mov
js
sub
leave
xor
pusha
dec
repz
inc
shl
in
pop
mov
or
sub
pushf
loop
bound
in
xor
sbb
add
in
pop
dec
add
stos
push
adcb
mov
outsb
add
call
das
and
out
fwait
pop
dec
sbb
adc
adc
das
jae
stos
mov
gs
in
sub
cmpsl
mov
inc
daa
xchg
das
loop
stos
mov
mov
js
inc
jbe
pop
fmul
mov
into
mov
lock
xlat
push
adc
push
mov
cwtl
sbb
addr16
test
leave
call
cwtl
cmpsl
dec
lret
out
aaa
scas
mov
jo
xchg
into
cmp
pop
dec
shrl
movsb
xor
sub
mov
add
mov
jb
or
dec
popa
mov
pusha
fdivr
sbbl
mov
or
mov
outsl
fs
mov
negl
pop
mov
test
jb
std
cmp
jecxz
cs
push
dec
ja
pop
fisubrl
test
mov
imul
add
pushf
pop
and
es
lret
sar
out
jge
jp
push
icebp
jne
pop
push
imul
xchg
cwtl
adc
insb
adc
sbb
adc
mov
or
jne
shlb
repnz
push
jo
mul
outsl
cmp
les
gs
fs
push
lahf
pop
pop
inc
dec
mov
pop
imul
icebp
mov
adc
pusha
dec
mov
out
xchg
dec
push
pop
pop
sahf
inc
lds
icebp
mov
xor
cmp
xor
outsb
lods
out
scas
lret
xor
fcomip
decb
aad
cmp
ss
lods
ret
test
sbb
push
mov
aas
ror
iret
movsb
insl
shrl
mov
mov
mov
inc
loope
xlat
js
pavgb
sbbl
jnp
cmp
xchg
imul
mov
fdivl
je
fcmovne
lea
push
sub
dec
jg
test
fildll
movsl
ja
dec
add
test
mov
or
rcr
dec
movsb
push
mull
adc
jns
jmp
xor
aaa
jle
ja
pop
outsb
ss
shl
sbb
mov
jmp
fcoml
mov
cld
mov
pop
mov
jle
pop
lcall
dec
inc
and
sbb
mov
mov
pop
and
mov
lods
pop
or
mov
mov
mov
mov
call
pop
popf
sbb
adc
enter
mov
cmpsb
jmp
sbb
out
push
xchg
adc
cmp
sub
rclb
jbe
pop
insl
jno
sbb
mov
xor
sti
sub
dec
xchg
add
outsl
or
in
sbb
cmp
gs
push
enter
jae
dec
mov
pop
fidivs
dec
or
stc
push
lret
mov
icebp
jnp
fsub
out
aas
scas
cmp
fwait
pop
bound
popf
test
shl
push
mov
sbb
fistpll
js
inc
add
jecxz
fs
clc
or
in
or
push
daa
orb
xor
mov
hlt
aad
cmpsb
sub
jbe
vpunpcklwd
mov
ror
fwait
push
lahf
js
loop
scas
dec
loopne
insl
lret
dec
out
dec
in
dec
cwtl
not
push
test
aad
xor
dec
sarl
mov
jnp
movsb
sub
shll
int3
mov
js
out
adc
mov
or
cmpsl
jecxz
stc
dec
scas
push
cmp
jecxz
pop
jge
lret
lret
icebp
fdivs
mov
daa
pop
jecxz
jl
rorb
sub
stos
rcll
roll
les
mov
scas
lea
jb
push
or
add
or
jb
mov
xchg
push
and
stos
incl
push
cmp
xchg
push
sahf
xchg
ljmp
xor
inc
dec
insb
mov
add
xor
incb
sub
repnz
repnz
imul
push
movb
sub
cmpsb
xchg
int
push
lods
fcmovbe
pop
mov
adc
xlat
mov
sub
insl
ss
fs
lds
aaa
loope
xor
jne
in
adc
imul
push
pushf
iret
inc
lock
push
push
into
adc
inc
cli
add
fisttps
or
daa
pop
in
jecxz
ja
mov
pop
cld
pop
pop
icebp
jno
rolb
add
and
pop
mov
sbb
mov
sbb
xor
movsl
sbb
mov
pop
lds
enter
jle
pop
aaa
cmpsb
mov
dec
loop
sarw
frstor
je
or
pop
jno
mov
add
adc
std
lods
nop
cmp
mov
cwtl
dec
mov
cld
add
and
pop
bound
mov
push
xor
and
xchg
mov
insb
adc
repz
jae
sahf
movsb
mov
cld
hlt
push
jns
dec
adc
mov
daa
daa
push
mov
dec
mov
int3
stos
addr16
xchg
pop
add
mov
in
std
mov
xchg
cltd
fucomip
scas
jmp
mov
lret
mov
jle
ljmp
sti
adc
add
xchg
fadds
lock
mov
jle
ret
cmp
bound
testl
in
xchg
cld
push
in
clc
pop
pop
mov
hlt
aam
ficomps
loope
rcr
stc
push
jmp
jnp
fidivrl
cmp
push
fadd
fmul
lcall
in
pop
push
faddl
and
pushf
inc
xchg
cmp
inc
loop
popa
aam
mov
rcrb
jecxz
lea
add
sub
enter
inc
fsubrl
dec
xlat
lods
sub
ljmp
fdivp
adc
arpl
mov
mov
adc
cwtl
xchg
test
fstpl
out
gs
dec
fstl
cwtl
sub
adc
xor
mov
in
stos
nop
icebp
push
movsl
movsb
xchg
repnz
adc
jecxz
sahf
cmp
add
mov
in
notb
lret
xor
es
inc
and
imul
dec
inc
or
cmpsb
out
lock
xor
cmpsl
fstps
sbb
or
sti
push
cwtl
xor
packuswb
fbstp
and
fdivs
stos
push
mov
subl
dec
push
mov
cmp
xchg
outsl
mov
adc
xchg
add
sub
xor
inc
adc
mov
lcall
movsl
mov
dec
jne
lahf
jb
movsl
inc
subb
roll
stc
movl
stc
and
sbb
cmp
std
push
jp
imul
out
jne
dec
dec
xchg
stos
sti
dec
scas
in
aas
and
comiss
aad
lock
roll
std
mov
aaa
dec
mov
mov
int
cmpsl
pop
loope
lret
pop
sbb
push
test
aam
cltd
mov
and
sbb
xchg
dec
push
push
or
xor
xchg
fcoms
inc
inc
sbbl
call
fwait
stos
loope
test
iret
test
lods
cmp
inc
or
hlt
xchg
pop
pusha
inc
in
mov
push
iret
jg
jae
pop
push
call
outsl
push
adc
mov
dec
and
dec
inc
dec
test
push
push
rcrl
loop
fisubrl
cwtl
dec
cmp
lock
adc
lods
shl
hlt
cmpsb
cmpsl
pop
daa
mov
mov
sbb
lret
push
mov
inc
add
cmp
pop
ss
arpl
sbb
and
lret
movsb
or
scas
pop
sbb
sbb
pop
mov
mov
push
xor
sub
int
jmp
cmp
mov
push
push
sbbb
popf
leave
stc
add
aad
aaa
dec
add
rolb
inc
rolb
pop
mov
sub
mov
jno
push
dec
jns
pop
cmp
sub
out
xchg
cltd
popf
test
jnp
xor
or
mov
les
in
xchg
dec
inc
stos
jb
rcr
xchg
js
xchg
inc
jno
mov
daa
sub
scas
pusha
pop
adc
mov
and
aas
pop
cmp
mov
loopne
sbb
mov
ljmp
std
inc
mov
lods
and
loopne
emms
movsb
dec
pop
pusha
gs
call
adc
adc
push
ds
sub
and
es
push
data16
iret
xchg
rclb
inc
les
or
ljmpw
inc
dec
cmp
rol
pop
repz
test
jnp
testl
push
pop
imul
das
addr16
cs
cmp
scas
lods
mov
movsl
jmp
pop
inc
iret
lods
ret
and
test
dec
fstl
dec
xchg
call
inc
popa
jbe
movl
or
jl
xor
jge
sbb
imul
sub
or
cwtl
out
cmpsb
arpl
pop
call
icebp
cld
pop
jo
jne
and
loopne
cmp
loop
cmp
mov
push
mov
mov
jecxz
jge
insl
jb
dec
cmp
loope
shlb
mov
loop
shrb
movsl
mov
fs
sbb
inc
lods
repnz
test
sbb
int3
push
ds
mov
xor
xor
xchg
cmpsb
mov
push
in
cmp
mov
data16
ret
sbb
inc
fwait
and
pop
cli
sbb
pop
inc
mov
cltd
lods
push
sub
jns
insb
in
cbtw
add
jmp
dec
xchg
mov
sarb
pop
ret
movsl
lahf
cmp
in
fucomip
and
and
add
jg
mov
mov
adc
mov
insb
mov
daa
ficomps
in
jp
movsb
push
dec
adc
sbb
sbb
xor
pushf
je
xchg
inc
inc
mov
cmp
dec
lret
loop
fmuls
dec
stos
inc
lods
pop
cmpsl
adc
fidivrs
push
flds
jmp
pop
mov
push
pusha
jbe
andb
pusha
push
in
add
cwtl
test
ljmp
cmp
or
push
pop
add
push
cmp
push
or
xor
sbbl
stos
jg
jge
mov
mov
testb
cs
call
out
adc
lret
xor
inc
xchg
sub
pushf
sbb
flds
lods
cmp
cmpsb
pop
stos
dec
jp
lret
cmpb
std
sub
loopne
call
cmpsb
test
enter
xchg
sbb
imull
scas
mov
pop
jnp
dec
adc
sub
xor
or
or
mov
xchg
in
rolb
sbb
mov
dec
fs
xchg
sbb
test
movsl
lret
mov
pop
xor
sbb
gs
xor
aas
frstor
loop
pop
and
mov
adc
notb
stos
repz
push
mov
adc
push
xchg
and
pop
mov
push
or
or
enter
push
jbe
addb
lret
xor
mov
push
cmpl
dec
shll
cmp
aam
xor
mov
faddp
xchg
adc
loopne
inc
cmp
pop
sti
jl
dec
push
in
and
cmpsl
xor
lcall
jno
mov
jae
pop
cmpb
xchg
dec
push
add
xchg
idivl
xchg
xlat
ds
in
aam
cmp
push
xchg
cmpsl
sub
xchg
xchg
jo
or
xchg
adc
fidivl
imul
into
jnp
lahf
sub
pop
and
rcr
std
cmp
mov
fs
dec
lahf
inc
out
dec
aaa
pop
fmulp
int
add
cmp
lods
imul
fwait
xchg
push
in
sub
dec
jl
adc
icebp
lods
sbb
xor
cmp
push
add
jne
mov
outsb
das
sub
push
jne
xlat
cmp
js
clc
or
mov
or
mov
fwait
mov
adc
mov
and
mov
dec
xor
mov
stc
or
stc
out
mov
jae
or
sub
and
ret
jmp
fists
out
add
imul
jmp
jnp
addr16
outsl
stos
mov
pusha
dec
xchg
mov
push
and
lret
call
adc
test
sub
frstor
icebp
mov
into
imul
out
cmp
dec
mov
xor
inc
inc
nopl
dec
xor
add
jg
and
add
push
scas
rcr
cltd
jmp
test
xchg
or
mov
lods
ret
fbld
sub
cmp
lea
inc
repnz
das
pop
jno
hlt
push
push
mov
cmp
xchg
sub
xchg
push
jns
fs
idivl
outsl
jns
inc
scas
ja
dec
cmpsl
pop
dec
cmp
sub
fildll
mov
xor
sub
xor
inc
inc
cmp
aam
js
pcmpeqb
ja
mov
mov
ret
dec
out
lcall
adc
or
sub
mov
add
sub
test
push
cmp
sbb
leave
adc
aaa
inc
movsl
pop
jbe
cmp
cmpl
adc
fwait
jp
loope
sbb
ret
orb
in
ja
stos
lea
jg
shlb
lock
outsb
pop
mov
sahf
push
rclb
daa
add
push
aam
jne
mov
inc
dec
or
cmp
lock
rorb
insb
cltd
sbb
ret
inc
js
dec
bound
mov
adc
mov
lods
cli
pop
mov
mov
inc
sub
adc
and
aas
sub
inc
insb
add
dec
lahf
jge
add
pushf
jmp
aad
mov
pop
stos
jo
mov
shlb
repz
add
mov
sbb
inc
int
mov
pop
adc
jge
call
aaa
cli
push
mov
out
ds
addb
inc
xor
inc
jge
and
adc
adc
sbb
xor
aam
push
mov
test
test
mov
insl
cmp
mov
sub
nop
int3
jno
je
push
out
into
push
sarb
cs
fldl
mov
push
mov
out
jbe
adc
jne
daa
ja
sbb
cmp
pop
mov
lods
pop
and
notl
and
dec
stos
xchg
fwait
push
ss
xchg
sub
xor
push
jbe
or
ret
scas
sbb
push
cmp
cmp
pop
ret
jp
ja
daa
outsl
decb
insl
cmp
mov
leave
xor
dec
insb
ss
lret
jb
arpl
scas
sub
mov
lock
sti
pusha
pop
je
insl
inc
adc
cmp
mov
pop
xor
test
cmp
add
clc
test
or
pop
inc
out
mov
or
popa
pop
ds
aam
push
pop
not
fadd
scas
sbb
cld
and
in
insl
inc
lods
pop
inc
sub
fsubl
into
cmpsl
xchg
push
mov
mov
es
cmp
das
adc
cmp
insb
inc
sbb
cmp
push
ret
inc
mov
xchg
and
scas
and
pop
addr16
iret
or
sub
cmp
outsl
es
xor
in
cmp
outsl
or
or
sbb
pushl
out
subl
rcll
xchg
inc
aam
int
bound
sbb
jne
test
out
fstpl
push
int3
cltd
scas
pop
sbb
mov
xor
dec
mov
stc
aas
pop
out
mov
out
sbb
sbb
xor
push
inc
xchg
shl
dec
addr16
faddl
in
mov
add
jg
orl
adc
aad
fbld
or
xor
sar
pop
lods
xor
in
add
ret
cmpsl
jnp
lcall
mov
jg
cmp
outsl
rclw
andl
sbb
add
sub
mov
adc
push
les
jnp
fcomps
cmp
jg
out
ret
inc
fdivs
pop
test
into
xchg
rorl
sbb
mov
aad
adc
test
stc
bound
in
xor
mov
lock
fs
cmpsl
aas
out
enter
ret
shl
fdivrp
xchg
push
rolb
inc
pusha
add
or
pop
ss
cmp
insl
stc
rcl
shrl
pop
jne
cmp
sub
mov
mov
loope
mov
push
testl
mov
and
push
pushf
push
sub
mov
aad
insb
dec
rol
mov
add
out
aad
stos
addr16
push
lcall
pushf
shlb
and
test
das
fimuls
lods
mov
xchg
clc
shrb
inc
cwtl
mov
hlt
out
fildl
inc
dec
sbb
push
shlb
test
sti
push
and
int3
jle
cli
xchg
lea
add
mov
or
jo
pushf
sbb
lret
je
push
xor
pop
imulb
mov
adc
inc
xor
lods
or
lods
fsts
std
iret
push
jns
ja
cld
sahf
or
stc
add
inc
mov
decb
xchg
xchg
out
mov
sbb
and
mov
jno
xchg
out
loop
xor
scas
and
leave
sbb
fcoms
adc
add
push
insb
jle
rcrl
fsubs
add
xchg
cmp
pusha
fs
fstps
xchg
adc
gs
xor
xchg
js
jmp
jmp
sahf
js
daa
ds
mov
ljmp
jno
inc
scas
into
cmc
adc
popl
imul
mov
push
jo
in
aaa
in
fucompp
insb
mov
xor
cmpsl
add
mov
adc
jg
xor
jb
sti
push
mov
lea
es
mov
inc
cltd
xchg
fdivrs
test
inc
inc
xchg
shrl
sbb
push
aad
xchg
test
pop
jecxz
rorb
jge
test
aaa
fldcw
ret
test
adc
mov
dec
test
insl
and
addr16
jecxz
and
xor
lret
pop
mov
aad
cld
jmp
jp
std
andl
xchg
xchg
or
cmp
loop
mov
jb
jg
push
mov
fs
push
mov
int
xchg
loop
sarl
mov
lret
loopne
jge
xchg
or
dec
popa
pop
fsts
repnz
in
test
loopne
cld
loop
push
int3
sub
sub
cld
sub
clc
adc
pop
sbb
mov
repz
les
fildll
pushf
rcrl
cmpsw
cmp
imul
mov
jae
iret
mov
lcall
nop
je
hlt
es
dec
sarb
cmp
cli
loop
outsl
push
jb
jno
xchg
imulb
insb
xor
lahf
pop
or
or
xor
or
mov
mov
xchg
daa
inc
pop
mov
mov
out
cmpsl
fst
cmc
pop
test
orl
imul
outsl
and
aad
pop
jo
sub
push
mov
and
stos
dec
sub
xor
push
sahf
sub
xor
inc
mov
jg
pop
aas
push
lcall
pop
test
inc
mov
pop
arpl
sbb
mov
xlat
scas
lret
xchg
and
mov
rcll
pop
fisttpl
sub
add
cli
dec
mov
push
loope
std
ret
cli
cmp
jns
aam
push
out
pop
stos
popf
or
push
cmp
pushf
fmuls
mov
cmp
cmp
int
imul
add
cmovne
aad
pop
xor
mov
xor
or
lret
cmc
ss
mov
lret
xchg
mov
pushf
arpl
sti
movsb
je
in
xchg
rep
test
xchg
dec
je
push
imul
loop
pop
xchg
into
and
mov
jp
loopne
js
jp
or
lds
lahf
mov
aam
add
mov
pop
mov
adc
je
int3
add
adc
stos
add
add
in
loopne
rcrl
jecxz
xor
and
add
sub
clc
cmc
add
push
sbb
adc
lds
add
out
xchg
mov
mov
pop
cmp
xchg
inc
cmp
and
sbb
sbb
cltd
sub
rorb
loopne
jnp
mov
dec
les
xchg
inc
dec
aad
and
mov
xchg
fwait
cmp
push
adc
mov
push
sbb
add
loop
sub
push
mov
jl
cmp
xlat
jl
sbb
leave
jno
scas
sub
xchg
pop
pop
paddsb
pop
mov
xor
sub
rorl
call
xchg
popa
jb
bound
xor
adc
and
insl
mov
jno
test
adcb
lahf
lods
jp
adc
lcall
lret
mov
mov
or
cltd
sbb
jbe
daa
jp
mov
dec
push
std
dec
xchg
dec
pop
xor
es
add
jecxz
les
cltd
aaa
jmp
test
dec
jle
stos
push
push
ffree
pop
mov
inc
or
arpl
jmp
add
pop
cmp
iret
sbb
stc
xchg
add
call
pop
sub
pusha
mov
cmpsl
lods
mov
cmp
mov
jae
lret
in
cs
icebp
scas
or
gs
and
fidivrs
arpl
dec
mov
sub
and
jno
mov
pop
stc
ret
cld
pop
int3
sti
mov
adc
mov
test
fcoml
out
mov
in
push
xchg
jg
lods
inc
sti
push
aam
loop
mov
cmp
cmpsl
lods
pop
cmc
pop
xor
mov
push
leave
inc
or
test
mov
adc
ja
mov
sbb
fucom
insl
lret
mov
push
push
mov
lds
das
push
jno
je
fmull
push
ret
mov
lock
in
outsl
jg
inc
mov
mov
or
push
pop
out
loop
or
loope
jg
inc
insl
mov
fnstenv
test
and
test
mov
out
insl
cwtl
shll
js
jbe
cs
xchg
out
push
xor
stc
mov
arpl
fsubp
add
subb
push
xchg
out
push
jmp
lret
mov
add
mov
cmp
xchg
lods
or
and
or
push
leave
stc
mov
or
cmp
fldl
xchg
aaa
mov
cmc
dec
and
je
pop
pop
push
push
jmp
or
jnp
adc
clc
jle
inc
or
clc
add
lcall
and
sub
pop
xchg
xor
mov
loope
lret
push
inc
or
stos
outsb
mov
dec
xlat
rcll
popf
into
xor
pop
fldcw
lds
xchg
sub
mov
mov
loop
call
xchg
mov
enter
ljmp
or
fcomps
test
ds
rcrl
dec
cmp
dec
and
in
sub
mov
mov
push
mov
pop
sub
or
arpl
jns
xchg
and
inc
sub
mov
dec
sbb
testl
mov
inc
das
daa
xchg
pop
sti
lea
out
xchg
sti
cwtl
js
sbb
movsb
push
xor
call
cwtl
add
fistps
ss
push
into
jnp
rclb
insl
push
loopne
int3
jmp
popl
fsubr
xchg
mov
not
pop
test
xor
scas
call
mov
or
pop
jp
sbb
cmpsb
ja
int
jecxz
inc
pop
mov
cwtl
mov
je
loop
jne
adc
aam
jecxz
cltd
or
pop
icebp
or
sahf
cmp
pop
cmp
std
lret
sti
fnstsw
dec
pusha
dec
xor
loope
dec
lret
fnstenv
jnp
addr16
outsb
dec
cmpsb
sub
loopne
imul
fildl
cmp
jae
pop
cmpsl
pop
xlat
jo
mov
mov
inc
sti
out
mov
shlb
hlt
rcll
mov
and
lret
dec
jne
mov
ds
mov
seto
adc
negl
dec
mov
jns
add
or
ret
cmpsl
iret
loope
cmp
sbb
das
jb
mov
dec
pop
lahf
cmp
adc
dec
push
sar
pop
xchg
xlat
push
in
pop
insl
ficoml
mov
add
cli
push
test
pop
mov
dec
or
xchg
mov
andl
in
loope
fsubr
xchg
inc
pop
xchg
imul
cmpsb
push
mov
andb
fists
bound
fwait
int3
push
cmpsb
adc
and
cmp
mov
enter
mov
out
outsb
fnstcw
xchg
outsl
mov
dec
insl
lret
mov
cmp
gs
xchg
xor
sbb
gs
out
sub
mov
fildll
sbb
and
pop
lods
mov
jb
das
add
test
ja
add
aad
mov
mov
inc
ljmp
inc
test
push
add
in
dec
ss
push
mov
xchg
test
pop
icebp
sub
add
rclb
aas
jb
pop
aam
cltd
ret
add
stos
adc
popf
xchg
pop
adc
rol
dec
out
dec
cli
mov
mov
pop
push
and
inc
iret
and
inc
inc
fsub
cmpsl
lret
push
mov
shlb
in
and
outsb
rcll
xlat
outsb
enter
sub
movsl
scas
pushf
imul
mov
fiaddl
mov
mov
js
outsb
loopne
rorl
fildll
mov
xchg
jecxz
xlat
or
push
push
ss
xor
ss
sbb
mov
or
scas
mov
shlb
mov
jne
jg
and
mov
mov
or
sbb
fists
scas
jmp
cmpsl
push
xor
mov
pop
jp
lock
xor
ljmp
outsb
mov
adcl
dec
mov
mov
in
adc
dec
mov
sti
and
lock
stos
outsl
mov
in
xchg
lods
xchg
mov
faddl
call
repnz
mov
push
cltd
cli
jmp
into
pop
loopne
lods
mov
ds
lods
arpl
xor
es
aas
repz
leave
and
mov
fsubp
push
sbb
inc
lahf
push
ret
pusha
fsubr
popa
mov
pop
lea
call
xchg
std
sar
add
pusha
pop
lret
test
fmul
inc
dec
in
subb
pop
mov
push
xlat
pop
xchg
gs
dec
xchg
mov
in
or
and
lea
mov
data16
out
addr16
neg
ja
dec
mov
lods
arpl
mov
xchg
pop
pop
stos
inc
push
daa
leave
dec
lahf
add
movsb
cmp
ja
je
leave
xchg
in
cmpsb
and
popa
clc
xchg
scas
dec
ljmp
jb
dec
pop
cmp
fcom
and
negl
cmpsl
or
lock
pop
xor
xor
xchg
inc
push
mov
pop
in
jae
js
jnp
adc
pop
jbe
mov
jmp
xlat
js
adc
fnstenvs
shl
fstl
int3
cli
xchg
notb
popf
mov
ret
dec
cwtl
and
and
push
pop
jo
mov
xchg
icebp
fwait
pop
je
fisubrl
cmp
push
in
int
xchg
out
out
ss
mov
adc
movsb
pop
sub
push
jmp
mov
mov
mov
adcb
pop
xlat
jb
sub
movsl
dec
sbb
push
pusha
add
and
push
lods
sarl
ret
adc
bound
xchg
sub
js
movups
repz
movw
xor
xor
ret
addb
mov
rcll
xor
data16
andl
decb
cmpsl
loop
jl
jb
push
aam
xchg
jnp
sarb
sub
push
mov
pop
jle
adc
dec
adc
dec
pop
cmc
pop
xchg
fwait
push
shlb
jns
cwtl
popf
sub
mov
inc
jecxz
add
popa
test
test
decb
lea
sti
out
icebp
shrl
mov
inc
incl
sbb
mov
gs
xchg
mov
iret
or
xchg
mov
sahf
dec
lret
fldl
and
lcall
adc
out
mov
cli
add
hlt
and
pop
mov
mov
adc
imul
mov
pop
idivl
xlat
in
notb
jmp
cltd
cmc
ja,pt
mov
jno
and
xchg
cmp
test
out
mov
mov
scas
push
aas
mov
push
jle
add
test
divps
jns
adc
repnz
xorl
subb
or
cmp
fidivl
int3
stos
fidivrl
in
inc
cld
insl
mov
adc
jmp
inc
pop
fistl
cmp
fiadds
inc
cmp
fists
mov
xchg
ljmp
xor
pop
cmp
clc
jmp
mov
and
sbb
mov
fisttpl
push
dec
dec
cli
mov
jb
lret
repnz
or
ret
fs
sti
xchg
sti
mov
mov
xchg
orps
sbb
test
mov
cltd
adc
insl
dec
mov
popf
jmp
bound
xor
pop
movlps
das
fnstenv
sub
lods
push
fidivl
sub
stos
mov
bswap
push
jns
aam
xchg
mov
sub
jne
aad
or
or
push
data16
scas
add
push
mov
xchg
sub
add
inc
fldpi
mov
outsl
dec
arpl
cmp
or
stos
cmc
and
andl
sbb
jae
subb
fstpt
cmpl
popa
cwtl
and
mov
push
mov
addr16
int3
imul
shlb
and
sbb
xchg
sub
mov
out
jno
sahf
inc
fstpt
dec
sahf
pop
test
inc
in
jmp
shll
cmc
jge
out
scas
movsl
frstor
or
xchg
cwtl
subl
addr16
fidivrs
enter
push
jo
ficoml
mov
mov
fsubs
jno
test
push
repz
dec
aad
pop
pop
enter
stos
push
insl
jmp
lea
int3
shll
cwtl
or
rcl
or
mov
lock
dec
shll
or
push
dec
dec
cmp
push
pop
xchg
jecxz
jnp
mov
fst
mov
js
sbb
push
mov
mov
test
pop
mov
ret
cmpl
push
pop
fisubrl
addl
lds
mov
leave
mov
rol
xor
dec
sbb
ret
pushf
and
adc
mov
rcrl
cmpsb
in
inc
xchg
jo
sbb
js
cli
cwtl
bsf
xor
mov
dec
adc
xor
push
lods
mov
pop
and
js
out
call
call
jl
xor
loopne
loopne
sbb
xor
inc
test
push
adc
xchg
xchg
push
enter
xor
push
cmc
xlat
clc
jge
or
js
ss
jo
adc
jmp
ficomps
orb
fucomi
dec
and
mov
add
loop
icebp
mov
xor
mov
fidivrl
hlt
stc
xchg
enter
ja
subb
ss
jae
gs
bound
push
stos
mov
or
arpl
stos
mov
das
pop
movsb
pusha
mov
clc
or
mov
push
fdivs
ds
into
pop
or
out
lea
mov
ret
push
jae
scas
gs
fwait
in
sbb
dec
push
ljmp
cld
fdivl
xchg
xchg
and
or
insl
and
in
xchg
mov
popf
or
shrl
sub
mov
xchg
mov
push
pushf
or
fld
push
sub
imul
out
cmpsl
outsl
mov
nop
mov
jg
add
pop
xor
mov
xor
or
or
fstp
iret
jo
add
loope
jbe
pop
jle
loope
jo
push
es
mov
xor
enter
sbb
fcomps
cmp
add
mov
cwtl
out
mov
movsb
call
lods
mov
mov
xchg
push
inc
stc
fisubs
inc
xchg
inc
loope
pusha
push
dec
or
arpl
adc
mov
cld
or
test
ja
and
cs
add
ss
jb
cld
lahf
divl
iret
es
xchg
dec
cli
js
fsubrl
mov
dec
shl
fwait
jp
aaa
pop
in
aam
sbb
aad
cmp
pop
daa
inc
dec
jge
ljmp
cli
fstpt
push
sbb
cld
mov
daa
xchg
mov
inc
xor
jo
mov
subb
pop
mov
mov
testb
jae
mov
push
shl
aaa
mov
std
fisttpll
xchg
jno
mov
hlt
mov
pop
in
jbe
push
lods
sbb
cmpsl
mov
js
adc
xchg
add
shl
addr16
mov
dec
cltd
lods
xor
sbb
mov
cmpsl
and
push
lahf
add
push
cli
sbb
mov
add
outsl
pop
pop
mulb
jno
ljmp
sbb
cld
pop
add
mov
sbb
std
fisttpl
fsubrl
cmpb
out
inc
gs
push
push
xchg
repz
int
add
jnp
jmp
mov
mov
test
sbb
pop
mov
hlt
pop
push
xchg
dec
dec
addr16
cmp
in
inc
insb
into
adc
adc
push
mov
sub
cli
fisubrl
xor
mov
cmp
roll
pop
or
push
cmp
dec
aas
sub
imul
scas
je
sub
insl
pop
out
js
data16
push
jmp
and
fdiv
sub
pop
not
test
outsb
sub
je
inc
testb
cltd
js
imul
jl
or
stc
orb
add
stos
jns
cld
dec
lods
addr16
inc
xchg
inc
in
or
xor
out
stos
mov
loop
and
lods
xchg
jb
xor
mov
cmp
mov
mov
jle
inc
dec
imul
mov
movsl
xchg
subb
das
scas
sbb
jbe
lods
cmp
adc
loop
subb
aaa
cmp
mov
aad
cltd
add
daa
add
dec
xor
xor
push
xor
jns
out
fildl
push
insb
inc
xor
lahf
mov
divl
in
fnstsw
mov
lds
std
int3
shll
jns
inc
cmp
fidivl
fcmovbe
add
lock
lods
sub
and
cs
or
test
gs
dec
cltd
scas
cmc
jp
fsubrl
adc
mov
movsl
xchg
sub
mov
loope
imul
mov
enter
sbb
std
dec
adc
movl
mov
pop
dec
inc
ret
mov
add
push
cmp
cmc
loopne
imull
mov
and
mov
inc
sbb
xchg
sub
mov
out
loopne
imul
addr16
xlat
popa
mov
mov
push
add
push
ja
arpl
in
dec
test
outsb
loop
pop
push
daa
and
xchg
cwtl
adc
in
xchg
inc
repnz
pop
jecxz
and
mov
scas
je
pushf
inc
xchg
ret
inc
fdiv
mov
jp
push
jmp
xchg
push
adcb
adc
int
outsb
dec
sub
ds
pop
mov
push
pop
and
mov
sbb
or
add
lret
mov
jne
jl
or
mov
adcb
or
ljmp
mov
dec
or
mov
xchg
xchg
inc
mov
xchg
mov
pop
mov
xchg
mov
stos
leave
in
pop
in
jo
pop
mov
shlb
addr16
fs
aas
or
mov
push
ror
mov
mov
adcl
xchg
pop
sbb
mov
mov
xor
mov
lods
xor
mov
push
movsl
xchg
xor
push
stc
cmpsl
jae
adc
into
xor
xor
sub
lahf
jb
and
imul
int3
add
pop
cld
jne
fdivl
inc
lock
leave
inc
dec
pop
dec
daa
jns
loope
sbb
xor
popf
push
pop
aas
test
sub
mov
je
orl
adc
jge
jecxz
fldl
inc
cmp
push
xchg
outsl
mov
sub
cs
pop
outsl
mov
pop
push
xor
scas
cli
shrb
sbb
mov
out
dec
cmp
mov
enter
cmc
sbb
sbb
mov
xorb
mov
pusha
pop
fstl
es
int3
lock
jb
repz
scas
push
push
jmp
insl
test
sahf
inc
adc
shr
pop
dec
mov
adc
push
jg
std
lods
mov
inc
and
nop
leave
mov
mov
les
xchg
add
inc
push
xorb
cmpsl
movsb
mov
arpl
ljmp
repz
ljmp
test
push
repz
push
inc
sub
shlb
pop
lock
cmp
shrb
stos
fwait
ja
xor
dec
pop
jo
dec
imul
and
mov
out
xchg
outsb
dec
xchg
cmp
lret
or
sub
mov
xchg
or
cmp
in
insl
and
and
lock
inc
test
lds
inc
inc
sub
mov
fcompl
xchg
cmpsb
push
repnz
lods
mov
in
mov
shr
add
dec
lcall
int3
cltd
sub
mov
ret
cld
cld
enter
pop
fisubs
js
jecxz
dec
loope
adc
lcall
push
fdivl
adc
pop
add
lahf
add
or
push
mov
add
add
xor
lahf
dec
push
lret
pop
scas
das
mov
xchg
loop
mov
or
pop
sbb
out
imul
and
mov
xor
aas
leave
lea
ljmp
pusha
inc
fcompl
in
dec
and
in
push
jge
loop
pushf
add
sub
push
mov
mov
sahf
mov
xchg
xchg
cmp
push
or
sarl
and
lods
imul
mov
repz
int
out
adc
sbb
inc
push
mov
ret
ljmp
lods
sbb
jb
inc
adc
nop
sbb
push
leave
pop
xor
add
mov
rcrb
pop
mov
pusha
leave
push
std
add
add
xor
jecxz
test
mov
imul
icebp
daa
mov
inc
shl
jge
cmp
xchg
xchg
xor
or
add
inc
cmc
inc
or
xor
xchg
mov
adc
icebp
cmc
mov
mov
add
lds
and
sub
mov
inc
daa
jns
dec
mov
fldenv
into
or
pop
mov
lock
outsl
pop
add
cmpsb
push
leave
out
mov
sahf
cmpsb
iret
xor
pop
es
js
outsl
or
cmp
aas
fs
out
iret
movl
pop
add
cwtl
ljmp
and
bound
ret
dec
dec
mov
push
pop
nop
sub
inc
insl
and
pop
or
sub
xchg
insb
and
insl
jecxz
decb
and
js
mov
pushf
mov
aad
jecxz
insl
mov
mov
mov
mov
rclb
sbb
xor
mov
mov
pop
test
shll
in
add
call
mov
std
pop
mov
aam
fldenv
push
loope
mov
xchg
in
lret
pop
jmp
xor
or
sub
stc
call
neg
scas
pop
rclb
loop
mov
and
popa
in
pop
fsubrs
mov
daa
jge
xchg
je
out
dec
out
ds
loopne
ja
push
cld
sbb
out
cmp
js
sbb
pop
ja
sbb
in
jmp
xor
push
in
das
test
fiaddl
xor
jne
inc
scas
jmp
pop
mov
fidivrs
pop
lock
test
push
cmpl
mov
sbb
cmp
cmp
repnz
cmc
mov
inc
mov
imul
fidivl
scas
dec
inc
ficompl
mov
fstl
xchg
push
sub
hlt
add
in
movsb
lret
and
nop
das
cld
addr16
and
aas
jge
pushf
les
push
push
movsl
adc
ror
int3
cmp
ja
shll
pop
mov
jmp
scas
in
fcmovb
test
jp
lahf
mov
mov
imull
mov
jge
out
or
sbb
shrb
adc
frstor
movsl
sub
xchg
jl
push
push
fmul
js
icebp
iret
pop
add
push
flds
push
mov
std
inc
loope
jno
mov
cli
mov
out
ficoml
pop
add
and
ds
je
inc
jp
mov
mov
bound
xchg
insl
add
and
pop
sbb
mov
jp
cld
xchg
ss
cmp
xor
mov
ds
hlt
mov
inc
daa
xchg
test
cwtl
lock
add
adcl
mov
push
inc
xchg
jne
add
push
movl
adc
xchg
in
pop
and
dec
mov
stos
pop
mov
cmc
mov
xlat
std
cmp
aaa
add
mov
and
adc
addr16
mov
fidivs
lret
xchg
les
mov
xor
sbb
hlt
sbb
mov
repnz
push
in
mov
stos
test
aaa
xchg
mov
push
cmp
test
inc
push
and
push
in
mov
xchg
adc
push
push
in
adc
and
and
fidivs
ffree
cmp
push
sbb
in
add
mov
repz
sub
gs
rol
sbb
aaa
leave
sbb
xor
and
sbb
in
push
addr16
decl
sub
inc
lcall
xor
leave
sarl
sub
int3
sub
xchg
dec
enter
int
loope
jns
rcrl
lahf
outsl
and
push
push
and
ret
cmp
cmpsl
mov
pusha
sahf
es
xchg
sahf
pushf
or
jecxz
inc
out
pop
ret
hlt
xchg
push
bswap
xchg
cmpsb
mov
popf
bound
mov
and
sahf
mov
ret
and
and
xor
pop
test
cmp
xor
adc
dec
icebp
std
mov
inc
pop
fldl
std
minps
mov
aam
xchg
lods
cmp
xlat
neg
push
inc
xor
das
xchg
addl
ret
lret
idivl
das
or
mov
pop
jnp
imul
lcall
pop
int3
cmpsl
ret
sahf
out
iret
mov
test
and
and
dec
push
mov
arpl
test
inc
lret
std
out
jne
jbe
xchg
sbb
mov
xor
mov
xchg
or
jnp
and
fwait
sub
xor
xchg
lds
xlat
inc
jg
addr16
jl
jns
icebp
cmp
adc
int
sub
mov
push
fnstenv
push
or
xchg
pop
cmp
or
cmp
pop
pop
jecxz
ror
imul
dec
cmpsb
cmc
dec
push
cmc
mov
std
xor
and
jg
mov
or
sub
xchg
stc
fcompl
inc
ss
inc
pop
bsr
rolb
test
inc
int
add
sub
loop
mov
lock
jecxz
mov
dec
aaa
mov
push
xor
or
mov
mov
ror
test
adc
rorb
data16
or
pop
mulb
cmpsb
and
dec
xor
inc
mov
outsl
push
sar
sub
cwtl
into
xlat
enter
jne
dec
mov
push
and
mov
subl
lahf
fs
xor
cmc
lret
xor
xlat
push
sub
xor
popf
xorb
adc
mov
xchg
or
mov
fsin
sub
leave
fbstp
mov
sarb
or
faddl
inc
push
call
and
inc
push
xchg
jle
cltd
lcall
fcomip
fisubrl
cld
lret
insb
sbb
sbb
push
popf
mov
xchg
cmpsl
mov
add
xchg
sbb
push
push
xor
xchg
dec
add
es
sahf
mov
dec
int3
cmp
or
and
daa
push
dec
lea
sarl
jecxz
pop
lods
repnz
dec
dec
iret
hlt
push
jne
cmp
mov
pop
imul
add
test
dec
cmp
dec
and
in
out
mov
mov
push
dec
cmp
mov
popf
loope
add
dec
lods
add
pop
ss
lea
sub
jno
add
loopne
jb
pop
mov
popf
xor
loopne
adc
clc
test
std
mov
cltd
dec
adcl
insb
test
data16
cmp
popa
cs
mov
in
or
dec
and
insl
xchg
push
sub
pop
out
insb
ds
leave
and
out
repnz
repnz
pop
push
jnp
cmp
xchg
mov
ret
xor
inc
aaa
dec
out
test
adc
and
lods
int3
cld
jmp
sbb
out
add
sub
jbe
cmpsl
pushf
scas
jl
leave
or
imul
jge
pop
xchg
xor
les
idivb
iret
jmp
shr
fnsave
pop
imul
movsl
in
adc
in
sbb
jnp
lods
call
pop
mov
or
mov
add
cmp
insb
pushf
fmull
or
gs
daa
add
inc
cmp
and
fs
add
mulb
mov
jecxz
adc
pop
hlt
rcrb
cmp
push
mov
scas
sti
sub
pop
fdivs
add
jne
mov
lahf
mov
cmp
jle
push
xorb
and
addb
cmc
in
xor
adc
out
jmp
xchg
xor
mov
out
bound
and
dec
adc
and
xchg
jp
dec
hlt
fs
scas
push
insl
iret
shl
pop
fistpl
stc
sub
stos
sub
and
out
sub
arpl
xchg
mov
outsb
call
xlat
or
and
cltd
add
jle
test
out
xchg
cmp
inc
add
adc
mov
mov
inc
sub
mov
mov
repz
jae
cmp
sarl
ljmp
push
inc
repnz
inc
cmpsl
sti
dec
test
mov
push
mov
cs
nop
gs
loope
jmp
or
sbb
mov
imul
adcb
and
lcall
in
push
mov
inc
mov
xor
pop
dec
lods
stc
sahf
jb
pop
mov
aam
jae
test
sub
xchg
in
aaa
outsb
mov
xchg
xchg
icebp
iret
jecxz
xchg
lea
mov
jecxz
or
sti
out
xor
cwtl
push
lret
pop
lods
push
and
xor
punpcklwd
dec
xchg
pop
xchg
mov
std
fwait
scas
lds
xor
fsubrl
ds
pop
sarb
pop
cmp
dec
pop
push
and
xor
push
mov
addr16
scas
negb
jb
inc
xchg
push
push
pop
xchg
xchg
mov
mov
addl
enter
ret
mov
adc
rep
ret
pop
ret
cmp
imul
mov
rcrb
jg
cmp
mov
addb
push
xchg
push
outsb
or
inc
push
rcrb
mov
pop
leave
shlb
icebp
lret
ficoml
and
xorb
adc
out
shll
stos
ljmp
enter
inc
mov
xchg
insl
xchg
in
dec
push
xchg
icebp
mov
pop
cmp
cmpsl
les
xchg
leave
and
add
lahf
mov
loope
ror
jbe
gs
ret
sbb
mov
ja
mov
add
mov
or
popa
dec
imul
popa
aaa
push
mov
cmp
imul
and
test
mov
sub
dec
or
addr16
shlb
dec
add
and
mov
jb
nop
clc
dec
xchg
scas
mov
pop
mov
ljmp
aaa
lea
call
out
cld
pop
pop
cli
iret
fs
rorl
pusha
es
sarb
mov
scas
pop
mov
pop
arpl
mov
mov
arpl
fisttpll
jge
xchg
es
hlt
push
push
std
mov
je
das
push
dec
popf
mov
stos
shr
adc
jo
add
cmpsl
sarl
mov
cwtl
xor
orb
mov
xor
stos
aad
repnz
and
mov
in
aad
sub
xor
loopne
out
loop
pop
out
insb
adc
mov
mov
insb
ss
mov
and
jne
repnz
cmp
incl
pop
sti
lods
pop
aas
out
out
test
aaa
pop
sbb
sbb
cs
stc
into
sbb
fidivl
leave
mov
imul
and
mov
mov
adc
adc
xor
dec
adc
in
test
sbb
mov
mov
jle
add
das
pushf
outsb
not
add
mov
xchg
iret
dec
inc
xor
les
out
pop
xchg
mov
mov
and
icebp
push
xchg
xor
xor
add
xor
loopne
add
mov
adc
jae
out
inc
test
test
inc
inc
xor
fldcw
or
pushf
push
out
cmpsl
call
pop
dec
mov
xchg
push
xor
jno
mov
push
ljmp
dec
xor
fistl
pop
int3
mov
ss
lcall
leave
ljmp
xchg
fmull
or
test
and
ja
xchg
adc
xchg
or
aam
sub
popf
ret
ljmp
xadd
lret
outsl
inc
and
mov
outsl
out
test
push
int
push
inc
lds
aaa
inc
jno
inc
mov
or
lcall
inc
jae
add
popa
inc
push
gs
rol
outsl
ret
xor
jge
xor
lods
inc
lods
movsb
repz
push
or
imul
mov
push
mov
jb
xor
push
icebp
push
popa
xor
sahf
test
lret
mov
repnz
fidivs
pop
popl
mov
inc
shrb
mov
push
jmp
fst
or
insl
fs
test
xchg
mov
push
inc
or
jno
das
pop
aad
push
shrb
xor
out
ss
sbb
pop
push
xor
xchg
into
fs
pushf
pop
fucomp
sbb
fnsave
fldcw
leave
push
add
add
cmp
insl
gs
dec
out
mov
push
mov
xor
xor
les
sub
xor
dec
sub
shlb
repnz
hlt
shlb
repz
adc
sub
push
inc
mov
daa
dec
es
mov
lock
outsl
les
call
jecxz
ljmp
outsl
pop
xchg
enter
push
icebp
xor
rorb
jg
sub
sbb
sbb
sub
clc
fcmovu
sbb
inc
aas
divl
jo
xchg
and
arpl
mov
sbb
push
push
add
pop
mov
call
test
jno
pop
stc
add
sahf
and
cmp
adc
pop
mov
scas
divb
push
ret
dec
mov
pop
sbbl
outsb
loop
xor
mov
and
dec
test
dec
lock
add
sub
arpl
packsswb
sub
cmp
xor
cmp
test
sub
cmp
xlat
insb
add
sub
adc
add
sbb
daa
shll
cmpsb
fmuls
outsb
in
fbstp
js
notb
aaa
fstpl
ja
gs
lret
xor
loop
fisttps
or
sub
mul
jo
loop
cmp
aam
fwait
in
adc
jl
mov
cmp
add
scas
cwtl
ror
sub
pusha
jnp
mov
sbb
pop
mov
mov
cli
movsl
xor
sub
inc
ret
cmpsb
jg
push
cmp
add
mov
sbb
inc
xchg
and
push
popa
loope
sub
xchg
pushf
repnz
stos
mov
mov
ret
adc
adc
div
adc
add
stc
out
dec
push
cmp
pusha
stos
insl
addr16
les
sbb
test
cmpsl
nop
popa
mov
dec
or
mov
xchg
shll
push
ja
lods
mov
dec
fldl
orl
es
xchg
dec
add
shrl
push
movsl
xor
ja
pop
out
in
dec
dec
mov
dec
adc
and
push
dec
push
repz
jno
std
stos
push
lcall
inc
or
pop
push
rcrl
cmpsl
js
mov
pop
in
pushf
mov
mov
popf
push
inc
icebp
add
sarl
mov
sbb
loope
es
mov
addr16
ja
lock
movsb
sahf
sarb
lfs
test
call
pop
xor
outsl
out
inc
mov
push
xchg
sub
test
sbb
jp
xchg
jns
sub
pop
mov
jmp
mov
pop
jo
or
mov
inc
pop
int
cld
push
sbb
adc
mov
call
mov
or
fldl
lods
js
inc
push
pop
mov
stos
je
cmp
nop
or
pop
jae
pop
dec
je
pop
jne
sbb
cltd
xor
sbb
and
fs
push
imul
xlat
inc
repz
scas
sub
adcl
dec
mov
push
imul
cmp
popa
mov
mov
adc
fld
arpl
xor
cmpsb
inc
xchg
xor
aad
dec
ljmp
mov
pop
jo
xchg
iret
icebp
or
or
out
cmpl
repnz
cmp
cmp
and
dec
lea
ret
mov
xor
inc
stos
imull
push
mov
stc
outsb
sub
add
inc
and
mov
mov
mov
fildl
shll
ljmp
push
add
push
js
lahf
lahf
xor
scas
pop
mov
aad
add
pop
add
data16
cmp
cs
cmp
clc
jbe
test
push
dec
jl
or
push
xchg
adc
popa
shl
jb
cmp
sbb
bound
or
in
inc
popf
nop
jne
ja
xor
mov
roll
mov
lahf
cmpsb
mov
pop
or
pop
inc
incb
int3
pop
lcall
xchg
jns
imul
inc
shr
loop
add
int3
add
mov
adc
jnp
daa
inc
or
jno
inc
add
push
xchg
push
push
lahf
jae
inc
mov
mov
jle
pop
mov
push
ret
push
aam
icebp
push
lods
testl
in
sub
cmpsb
jl
test
dec
cmpsl
shrl
mov
stos
idivb
pop
test
adc
mov
mov
cmp
inc
add
xor
lods
push
stc
push
insb
sti
fadd
int3
test
mov
pusha
pandn
push
or
jmp
out
mov
mov
dec
jne
divl
mov
arpl
dec
fs
push
cmc
fdivrs
pop
ss
nop
fmull
add
fdivrs
stos
aad
adcb
stos
ss
pop
fs
lods
cmp
mov
jmp
jp
mov
scas
sub
mov
pop
hlt
sbb
push
ss
les
pminsw
jno
jnp
stc
mov
mul
jnp
push
jae
iret
les
inc
push
ljmp
dec
int3
mov
inc
mov
fisubl
ss
movsl
ret
addr16
filds
pushf
insl
loope
adc
xorb
rorb
iret
sub
sub
mov
mov
movsl
in
lods
cmp
cmpsb
mov
iret
sbb
xor
jl
js
es
push
loopne
cmp
or
xchg
xorl
scas
jo
mov
lods
mov
mov
sub
inc
loopne
cmp
lret
xor
xlat
movsb
mov
aam
test
out
or
pop
mov
jl
pop
push
sbb
or
dec
lea
shlb
jnp
ret
mov
fst
scas
inc
sti
ror
call
or
dec
fldt
andl
addr16
dec
mov
push
loop
xor
dec
mov
scas
dec
mov
xchg
cmp
jle
xchg
add
pop
xor
outsb
in
sbb
mov
mov
pop
popl
pop
xchg
fcomps
mov
imul
xchg
aad
hlt
cwtl
sbb
add
mov
push
and
ficoml
call
aaa
les
push
push
in
dec
or
pusha
add
insl
or
jo
cmpsl
movl
dec
lods
repz
sbb
jnp
dec
rol
mov
cltd
cmp
enter
repnz
push
hlt
inc
or
js
xchg
jo
add
nop
imul
mov
sub
sahf
or
add
xchg
call
xchg
mov
dec
int3
add
gs
cmpsb
cmc
mov
lods
in
push
loope
pop
movsl
nop
inc
aad
aad
xchg
lcall
add
pop
or
mov
sub
out
rcr
cmp
aas
ja
lods
cmp
pop
enter
sbb
push
imul
sbb
mov
ljmp
fs
jo
loopne
enter
stc
repnz
dec
mov
es
and
mov
ror
lea
dec
shlb
cli
mov
sbb
sbb
mov
cltd
int
mov
mov
out
cmp
jecxz
dec
fisubrl
fsqrt
push
mov
negl
push
jg
pop
out
mov
cltd
mov
mov
pop
orl
adc
mov
mov
pop
push
lret
clc
movsb
xor
cs
dec
xor
insl
mov
ds
and
faddp
inc
outsl
jne
xor
ljmp
sub
push
imul
mov
adc
fwait
inc
mov
pop
push
or
loopne
dec
sbb
jnp
sbb
and
xchg
es
mov
jle
pop
js
jns
pop
xlat
xchg
fwait
mov
sti
imul
push
mov
pop
jecxz
mov
push
push
xchg
daa
sub
add
daa
pop
imul
or
mov
dec
inc
mov
repz
jmp
orl
mov
cmpsl
mov
pop
pop
dec
fimull
fcompl
push
imul
std
movntq
or
insb
xchg
dec
mov
hlt
repnz
add
or
out
ljmpw
jle
mov
clc
cltd
push
mov
cmp
jae
jns
pop
mov
ret
sbb
imul
xor
call
dec
test
repz
pop
xchg
test
icebp
mov
ds
arpl
sub
arpl
fs
cmp
jb
mov
mov
scas
dec
inc
jecxz
xor
arpl
fdivrs
in
icebp
add
mov
nop
mov
in
insl
hlt
mov
mov
int3
push
xor
ss
or
ja
cld
xor
or
sub
pop
fwait
loopne
xchg
push
jecxz
inc
xchg
sub
xchg
xor
xchg
jno
mov
push
fs
mov
lret
stos
xchg
or
fcoms
std
xchg
push
fsubrl
scas
leave
outsl
jo
mov
rcll
pusha
or
inc
cld
stos
mov
push
lcall
inc
test
add
sub
cli
lods
dec
dec
outsb
push
aam
ljmp
inc
cli
or
fdivp
xchg
sbb
or
lcall
push
arpl
imul
or
hlt
ret
sub
popf
fucompp
push
adc
sbb
mov
in
mov
add
stc
pop
mov
pop
shlb
sub
mov
push
aam
out
adc
iret
xchg
js
rcll
fcoms
adc
repz
mov
jp
sarl
mov
sub
cltd
push
mov
stos
mov
out
xchg
outsb
lods
aad
mov
pop
stos
std
adc
push
leave
pop
cld
xor
mov
dec
enter
dec
pusha
cmpsb
lock
in
cli
testb
imul
int
push
mov
cmp
jmp
insb
or
aam
inc
ja
rcrb
or
add
iret
sbb
je
je
clc
dec
rcrb
ret
pop
adc
out
push
pop
andl
dec
xchg
addb
shl
xorl
mov
push
mov
adc
add
mov
rcrb
push
xchg
enter
sub
stc
mov
stos
xchg
xorl
out
icebp
jno
push
imul
rolb
loop
jle
icebp
mov
push
inc
jge
xchg
pop
sub
cmp
aad
pop
add
jae
dec
or
mov
sahf
stc
and
shrb
fistl
and
clc
jo
xchg
jmp
orl
adc
ret
test
pop
cld
mov
xlat
sub
mov
cmc
loopne
repnz
xor
orb
into
ret
xchg
mov
mov
icebp
lods
mov
pop
adc
rorb
es
pop
je
push
sbb
dec
sub
jle
and
shr
enter
repnz
inc
jnp
sub
pop
imul
adc
jb
lahf
ret
inc
pop
das
inc
inc
pop
jo
sub
cmp
es
arpl
push
add
repz
add
arpl
xchg
push
out
in
pop
mov
push
ljmp
xlat
outsb
pop
arpl
add
icebp
addr16
sbb
and
shr
and
push
fmull
sbb
cmp
mov
cli
dec
jb
sub
mov
mov
push
in
movsb
cmc
push
add
lret
dec
pop
dec
dec
hlt
dec
sti
xchg
lahf
mov
push
outsl
dec
push
scas
cs
pop
out
xchg
add
jle
aam
call
dec
pop
jg
or
push
adc
and
mov
fdivl
pop
adc
cmpsl
incl
fstl
stc
mov
and
lret
popaw
fsubrl
ss
cmc
adc
pop
mov
inc
into
pop
add
xchg
fiadds
test
mov
cmp
xchg
cmpsl
cmp
adc
loop
cwtl
movsl
pop
ficoml
mov
sti
add
push
jmp
les
dec
cmp
mov
mov
add
xor
pop
add
fs
jle
xchg
leave
cld
subl
cmc
fs
popf
dec
inc
mov
lods
imul
jp
daa
cmp
jl
push
mov
jb
int
jne
mov
sbb
shll
mov
lahf
repnz
pushf
or
rcll
inc
ret
and
inc
push
lret
pop
out
xchg
or
rcr
lds
dec
dec
std
in
sub
cmp
and
rolb
inc
and
jecxz
addl
dec
add
out
cltd
cmp
and
nop
addr16
roll
aam
pop
pop
js
repz
std
shlb
ficompl
into
dec
popa
outsb
iret
lea
cld
pop
rorb
jae
test
loop
scas
push
pusha
mov
jg
int3
inc
xchg
xchg
mov
lret
imul
push
dec
out
lods
mov
negl
inc
std
call
push
repz
int3
add
and
xor
mov
inc
add
dec
cmp
mov
fstpt
loope
jnp
sbb
sbb
cmp
pop
icebp
pop
cli
shrb
arpl
xor
mov
sahf
cmp
push
xchg
dec
cli
test
in
inc
sbb
mov
mov
jbe
flds
sbb
out
cltd
clc
add
adc
jg
in
inc
aaa
call
xchg
sbb
rolb
sbb
inc
pop
rolb
ss
adc
outsb
inc
mov
mov
cmpsl
dec
xor
mov
mov
popf
and
loop
dec
in
loope
mov
dec
cmp
jbe
jnp
push
mov
pop
xchg
push
into
jbe
push
sub
pushf
jne
dec
mov
fisubs
pop
and
inc
ss
adc
stos
mov
pop
jmp
and
das
data16
mov
lods
pop
pop
or
sbb
imul
aas
in
sahf
or
std
jmp
lahf
mov
popf
into
in
pop
shrl
sbb
pop
dec
or
dec
sub
test
je
cmp
cmp
adc
icebp
stos
data16
mov
or
mov
push
inc
pop
and
pop
loopne
daa
insl
cmp
rcrb
popa
lret
mov
repz
sub
mov
dec
sbb
mov
jge
sub
shll
out
push
popa
jmp
sub
jecxz
jl
clc
mov
push
in
scas
mov
jne
jle
cld
hlt
popf
mov
or
es
xlat
loopne
out
sar
sbb
lcall
push
or
leave
fidivs
inc
subl
jnp
lahf
push
cmp
or
pop
sub
cmp
test
lret
jne
std
jmp
test
or
sub
pusha
or
enter
loope
jge
cwtl
add
push
lahf
cmpsl
mov
pop
in
insl
inc
out
mov
adc
ss
ret
sub
mov
icebp
pusha
adc
in
mov
sbb
mov
ljmp
xchg
or
fnsave
mov
sbb
clc
dec
rcll
xor
dec
push
inc
cmp
es
dec
mov
movsl
rorl
sbb
mov
mov
mov
dec
cmp
in
mov
std
push
adc
mov
xor
mov
cmpb
insl
idivl
mov
out
and
sbb
mov
cmc
mov
daa
mov
cmp
add
mov
sbb
and
jae
in
les
push
repnz
cmp
sbb
dec
addl
xor
pop
fimull
test
les
arpl
jecxz
and
cmp
jp
mov
fisubrs
enter
pop
mov
lea
orl
orb
leave
mov
xchg
sbb
inc
rorl
mov
add
jle
arpl
sub
es
xlat
xor
nop
rcrl
dec
fists
sub
push
mov
test
adc
or
dec
fdivl
inc
push
test
push
jns
jns
jns
sarb
cmp
pushf
cmp
rcr
jne
mov
mov
xor
sub
test
push
int3
jae
std
mov
std
xchg
jbe
jl
fpatan
pop
insl
in
jmp
mov
cmp
data16
loopne
dec
pop
testb
cmp
mov
xchg
and
andb
std
and
jns
jae
lods
test
mov
jne
fs
fs
mov
and
pop
ret
negl
das
xor
lahf
pop
lcall
adc
mov
psrlw
cmc
repnz
lcall
imul
adc
add
or
sub
pop
rcll
mov
pop
sub
inc
mov
movsb
mov
popf
inc
aad
in
out
pop
rolb
popf
mov
loop
ret
xchg
es
jb
subb
or
push
aas
imul
jl
shll
pop
or
xchg
jle
xor
rcl
mov
add
xor
lret
xor
inc
stos
idiv
mov
xchg
fimull
lock
insb
cmp
pop
add
ret
enter
cmp
jne
mov
clc
popa
jl
mov
jl
dec
jl
cwtl
dec
test
pop
mov
push
xchg
mov
xor
dec
mov
gs
inc
dec
in
push
add
mov
dec
xchg
mov
cwtl
leave
mov
mov
sub
leave
push
cmc
jle
sbb
or
sub
cmp
test
cmp
in
stos
sbb
inc
push
inc
xor
fisttpl
ljmp
popa
aaa
lods
lock
inc
cwtl
aad
or
lret
pop
pop
cmp
scas
scas
and
dec
adc
dec
je
mov
mov
outsl
adc
cld
xchg
mov
in
mov
cli
or
mov
sub
out
or
enter
movsb
outsb
stos
adc
in
insb
push
daa
push
mov
or
add
rcr
outsl
cli
jmp
lock
rcll
mov
scas
mov
adc
mov
add
push
dec
pop
push
insb
xor
push
cmc
repz
out
aas
sub
pop
inc
shrb
or
outsl
mov
movsb
push
pop
gs
fstp
xor
js,pn
add
mov
jp
jbe
cmpsl
sti
test
lock
cmpsb
cltd
mov
stos
mov
iret
lret
fwait
clc
cmp
mov
jg
xlat
add
repz
out
gs
fldenv
or
mov
pop
inc
ja
and
push
mov
push
mov
add
pop
jg
aaa
sbb
jae
push
cmp
enter
mov
fidivrs
pop
cmp
adc
sbb
test
add
outsb
test
xchg
mov
inc
push
ds
xchg
imul
xchg
movsb
dec
in
in
add
xor
pop
dec
xchg
iret
jp
sbb
adc
roll
mov
aas
rcrl
mov
push
add
sarb
out
sbb
cmc
jmp
movsb
arpl
pop
repz
xor
push
mov
cmovl
jmp
jmp
bound
mov
and
iret
xchg
addr16
mov
jecxz
in
xor
cwtl
push
cmpl
out
in
and
xchg
imull
sub
and
jne
push
xor
iret
leave
leave
sbb
cmp
mov
out
pop
popf
es
icebp
add
lods
xor
add
dec
stc
push
push
loope
dec
sarb
xor
orl
subb
and
scas
jge
jmp
jbe
repnz
sub
loopne
xchg
lret
sub
mov
mov
adc
ljmp
divl
in
in
cmpsl
shr
jbe
inc
cwtl
pop
je
sub
sub
out
push
cmp
jle
xor
ret
in
nop
push
mov
mov
lock
das
add
mov
scas
test
cli
cmc
fwait
inc
jge
and
jns
rclb
lods
pop
imul
xor
and
xchg
and
mov
adc
push
inc
rolw
jb
sbb
pop
sbbb
mov
push
sbb
mov
mov
push
sbb
dec
pop
push
and
sarl
xchg
or
cmp
cwtl
setae
flds
push
cmp
mov
adc
arpl
inc
loop
push
lret
subb
inc
xchg
xlat
pop
in
dec
xchg
sub
aad
rcl
sbb
xlat
xchg
into
mov
cmp
inc
adc
sub
lods
sub
enter
push
out
jae
mov
sub
adc
lret
jns
sbb
dec
ficoml
into
lock
and
push
fadds
je
stos
adc
in
scas
iret
add
hlt
sub
neg
pop
sbb
outsb
roll
adc
xor
mov
push
cmp
je
call
push
lea
push
add
add
andl
jnp
cs
outsb
push
jae
sbb
mov
sbb
pop
fstpl
sbb
sbb
stos
aam
jno
cmp
dec
dec
jne
pop
inc
sarb
call
ficompl
or
xchg
shl
xor
lds
push
dec
mov
cmp
cmp
sub
andl
dec
divl
xchg
andl
outsb
shll
stos
adc
mov
cs
push
je
fwait
into
mov
sbb
push
popa
fs
js
sbb
pushf
arpl
xor
add
pop
scas
cmc
add
lret
and
or
into
mov
in
inc
rcrb
mov
data16
pop
jg
daa
dec
push
inc
jg
cwtl
dec
jnp
aaa
mov
fwait
sbbl
adc
mov
jg
add
cmp
dec
sub
ret
cmp
fldenv
xlat
leave
lret
ja
stc
shl
fcmove
jle
jg
lods
push
cmpsb
aad
sub
sub
inc
movsb
nop
xchg
jns
sub
stos
sbb
data16
inc
adc
pop
icebp
lahf
dec
mov
mov
mov
push
jmp
dec
arpl
dec
push
xchg
into
loop
push
aad
lods
sub
jnp
sub
or
add
enter
and
mov
adc
subw
xchg
data16
ljmp
ret
ficoms
fsub
cmp
xchg
stc
rorb
jne
insb
leave
scas
and
rclb
movsb
stc
add
cmc
xchg
pop
xor
ss
cmp
jbe
jg
pop
and
insb
xchg
and
pop
add
inc
dec
xor
pop
lret
aam
add
push
and
loope
cmp
jnp
test
cs
loop
and
scas
xchg
mov
sbb
mov
fcomps
test
and
popa
andb
cmpsl
dec
jo
and
les
fildl
ja
divb
dec
mov
stos
loop
xor
aad
hlt
jnp
inc
jb
stos
xor
fwait
repnz
ret
fistpll
xor
inc
jp
add
mov
cmpsl
int
push
cmp
cld
aad
fwait
lods
or
push
push
aam
add
add
adcb
loopne
dec
lret
andb
pop
addl
lods
add
std
mov
push
xchg
mov
scas
pop
rol
notb
jbe
mov
fcmovnb
ret
int
jnp
in
test
ret
inc
aam
ret
mov
loop
enter
inc
movsb
bnd
or
sub
call
shrb
out
or
adc
jge
jge,pn
mov
adc
cmc
insb
push
jb
fisubrl
sbb
aam
mov
adc
xchg
outsl
and
pushf
inc
cmpsb
and
test
rcrb
add
ljmp
int3
mov
sbb
orb
movb
les
mov
and
add
push
addb
test
aas
jl
sarl
fucomi
jg
cli
std
xor
xor
bt
or
cmp
xlat
ds
sub
push
outsl
subl
push
in
dec
add
mov
rorl
lods
ret
xor
jl
in
mov
mov
pop
xchg
std
sbb
cmpsb
cmp
loop
adc
cmp
pop
lret
out
repz
in
test
ret
add
es
mov
and
pop
and
push
jge
dec
push
addr16
push
xor
in
add
jg
cwtl
fistl
add
inc
pop
dec
pop
lods
xlat
les
dec
popf
pop
dec
pop
jnp,pt
pop
mov
test
or
data16
and
ljmp
push
jbe
bound
adc
adc
inc
das
iret
imull
cmpsl
js
ficoms
mov
jmp
jo
inc
shrl
mov
push
inc
push
sub
mov
das
mov
std
mov
jmp
shlb
push
jp
and
dec
in
sub
push
or
lea
pop
es
andl
sub
ds
or
sub
sahf
xchg
insl
mov
sbb
lock
inc
xchg
mov
or
enter
push
arpl
cmpsl
cwtl
jns
cmp
test
sbb
icebp
sub
add
aam
sbb
cld
and
into
or
mov
icebp
loopne
jns
ds
shrb
xor
xor
sarb
xor
leave
nop
test
push
and
sbb
or
adc
jns
mov
lods
xor
push
fcoms
add
arpl
mov
and
jo
fs
mov
int3
mov
cwtl
outsb
xchg
and
add
aad
bound
jbe
repnz
adc
dec
test
lret
loopne
mov
cmc
icebp
sbb
insl
mov
dec
inc
pop
nop
add
cmp
loope
fistpl
add
cs
pop
jecxz
sbb
outsl
xchg
jg
hlt
out
fcom
sbb
ret
push
inc
rol
or
dec
fists
mov
jp
inc
sbb
mov
mov
jne
test
test
and
bswap
and
outsl
add
or
rolb
sbb
inc
pop
add
inc
not
repnz
mov
mov
sub
push
ret
repz
outsb
cwtl
jb
xor
jne
fs
add
push
ret
mov
lea
pop
out
std
xchg
dec
mov
test
shll
xchg
xchg
mov
mov
fisttpl
subb
and
dec
push
cmp
cmp
xchg
or
lock
pop
nop
pop
imull
outsl
fisttpl
cmp
lds
push
cmpsb
sahf
insl
mov
push
pop
mov
and
out
push
push
data16
test
clc
jl
test
std
imul
daa
out
addr16
cmp
das
testb
push
fwait
mov
adc
mov
xor
rorl
dec
push
lahf
jns
xchg
pushf
std
iret
scas
pop
sub
or
and
pop
add
jge
mov
dec
cmp
mov
negb
lcall
jbe
mov
and
jbe
mov
adc
xchg
cs
sub
mov
pusha
in
cmpb
pop
xchg
mov
xchg
xor
flds
imul
sbb
les
hlt
dec
sbb
mov
icebp
push
cmp
inc
pop
call
sbb
cld
xor
lods
sub
jo
jge
push
lds
inc
cmp
aad
push
mov
fstpt
sti
fwait
repz
mov
in
pusha
insl
jbe
mov
adc
icebp
arpl
sbb
sub
rcr
cmpb
adc
inc
jl
fs
mov
sbb
bound
dec
std
dec
jo
jle
shr
cmp
push
mov
xchg
dec
pop
popa
sbb
xchg
adc
lahf
sub
ss
stos
pop
cli
pshufw
out
pusha
fwait
sbb
or
adc
out
sbb
xchg
rclb
aas
xlat
mov
dec
mov
cltd
ja
lea
incb
and
inc
fsubl
fsubr
imul
and
bt
mov
mov
mov
mov
sbb
pop
adc
pop
mov
js
xor
and
push
ficompl
roll
std
leave
push
scas
je
shll
pop
cmp
lods
inc
jne
cmp
pop
add
lods
and
sbb
sub
lret
push
loop
sbb
int
push
pop
dec
aaa
sbb
dec
xor
cmp
shll
daa
in
add
pop
xchg
fidivrl
sbb
jns
loopne
test
jle
jl
loop
and
outsl
pop
dec
int3
mov
push
or
jbe
dec
push
scas
cmpsl
xchg
pop
cmpsl
add
sub
adc
add
lock
popf
add
xlat
pop
subb
repz
in
cmp
fcompl
cwtl
ljmp
mov
cmpsb
cwtl
sbb
inc
sbb
lea
push
outsl
inc
mov
mov
flds
jno
lds
adc
lds
shl
adc
aaa
int
mov
xor
ja
xor
jo
out
fnstsw
xchg
test
imul
jb
rorb
fdivs
icebp
fnstenv
scas
daa
mov
add
pop
loopne
or
nop
movl
scas
and
dec
sarb
mov
shlb
cltd
in
rcl
jne
lds
push
arpl
fnstenv
sub
mov
sub
jne
in
test
mov
inc
dec
stc
mov
push
push
push
std
jb
adc
jp
cs
pushf
in
push
inc
insl
or
jmp
clc
aad
lock
insl
jecxz
fs
pop
jmp
les
loopne
js
fs
rorb
jnp
dec
jae
imul
out
fnstcw
push
mov
jns
cld
mov
cmp
sbb
cmp
mov
sub
fmulp
xor
inc
jae
dec
push
and
mov
pop
push
jle
data16
jno
pop
hlt
mov
popf
ljmp
int
out
in
cmp
cwtl
mov
adcl
stc
stos
jecxz
sbb
jo
dec
inc
add
sahf
xlat
push
loop
inc
push
mov
push
stos
into
nop
js
or
xchg
subl
mov
lock
cs
cmp
sarb
dec
push
jl
std
mov
pop
push
inc
inc
js
xor
mov
lods
pushf
imul
jo
clc
mov
and
insb
or
adc
enter
and
cmp
std
movsb
imul
push
stc
fsubs
xchg
sub
aaa
sbb
scas
lods
pop
jne
test
pop
cs
pop
jb
cmp
dec
sub
pop
daa
hlt
decl
pop
mov
mov
fsubrl
ljmp
fs
fcompl
sub
inc
lahf
dec
shlb
aad
lea
movsl
push
sub
sbb
cltd
lds
dec
jle
rorb
movl
add
int3
stos
fnsave
sub
xchg
mov
xchg
mov
aam
std
js
loopne
xor
dec
adc
mov
push
push
movsb
lcall
pop
or
mov
aad
stos
lret
call
shlb
xchg
hlt
adcl
push
push
subl
popa
inc
jns
xchg
jge
pop
mov
cmp
iret
add
add
imul
loopne
lock
scas
push
push
adc
ret
dec
pushl
dec
push
mov
mov
pusha
fdivl
ljmp
xchg
leave
sub
data16
and
ror
ja
shll
dec
dec
dec
fcmovnb
out
adc
mov
adc
enter
rorb
mov
pop
inc
xchg
sub
out
insb
hlt
jo
andl
sahf
add
decb
dec
out
fstps
aas
aas
aad
and
jle
outsw
fxch
push
jb
mov
dec
pop
xchg
sbb
lret
mov
cmc
cmp
xchg
aaa
fsubl
adc
or
enter
enter
jl
and
cmpsl
clc
and
ret
aaa
outsb
pop
das
or
dec
popa
mov
mov
fsubl
mov
pop
lret
cmpsb
xchg
jmp
mov
outsl
roll
jg
adc
clc
xor
pop
cmp
xchg
jo
fdivs
int3
stos
test
inc
out
cmpl
dec
adc
outsl
test
cld
loopne
ret
cld
fs
popa
dec
sbb
cltd
cli
pop
ret
jmp
jo
mov
pop
mov
xlat
jmp
aas
out
sbbl
xor
sub
mov
mov
mov
jo
and
jne
bswap
inc
xchg
test
xchg
stos
mov
outsl
jl
orb
pop
push
fadds
gs
and
push
pop
sub
movsb
les
push
daa
adc
das
sbb
xor
xchg
int
fbld
pshufw
mov
sbb
mov
xchg
addr16
jmp
es
cli
cli
imul
lahf
das
test
adc
lods
fnstenv
popf
testl
and
test
shrb
rcrb
ljmp
add
push
ret
ljmp
adc
fmul
dec
cmp
leave
or
mov
shr
loope
loope
hlt
and
push
adc
pop
subl
pop
loope
out
rcrl
lret
stos
jp
movb
mov
or
orb
inc
loopne
pushf
pop
int
mov
xchg
inc
sahf
sub
test
shrl
sti
rol
jns
pop
jo
movsb
stos
jg
pop
imul
cmpsl
daa
int3
pop
ret
cs
xor
mov
sbbl
mov
mov
cld
cli
gs
cmp
je
dec
push
aam
jno
and
sahf
xchg
mov
xor
add
fists
or
fistpl
fs
inc
mov
int3
jmp
mov
cmpsb
stc
das
enter
jl
push
in
stos
in
push
mov
cmp
sub
stos
dec
mov
sbb
mov
dec
outsb
stc
jnp
cli
inc
fdiv
mov
dec
or
fldcw
loope
xor
leave
faddl
push
cmpb
pop
es
or
mov
xchg
or
jb
fdivrl
stc
dec
inc
mov
add
mov
ret
cmpl
pop
jne
cmp
xlat
ds
addr16
add
jb
stos
xor
jb
pop
mov
adc
mov
cmpsb
xor
jno
test
orl
fwait
push
dec
or
mov
add
inc
lea
imulb
imul
jecxz
test
inc
js
cmp
aas
lods
aaa
stc
adc
jg
orl
test
push
clc
adc
jnp
jle
std
pop
aad
negl
loope
iret
xor
and
std
or
fcmovnu
scas
cmp
daa
dec
xchg
dec
test
aad
mov
daa
popf
je
insb
enter
pop
gs
repnz
ret
sub
jnp
xchg
aas
cmp
pop
out
clc
aaa
test
add
into
rdmsr
add
in
bnd
cmp
push
mov
je
call
xcrypt-ctr
cmpsl
pop
aaa
ljmp
mov
inc
aam
stc
outsb
push
push
xor
sbb
jge
cmp
outsl
andb
dec
sub
mov
pop
mov
dec
andl
fldcw
and
jle
dec
pop
cld
rcl
push
fistpll
jnp
cmp
jg
mov
sbb
push
xor
pop
push
mov
clc
dec
loopne
or
mov
pop
into
dec
dec
xchg
adc
das
popf
data16
aaa
push
xchg
inc
push
imul
push
pop
movsl
fistl
jns
mov
xchg
movb
sbb
hlt
sub
popa
sahf
subb
cmpsl
push
xchg
clc
aam
or
loopne
xorb
sbb
add
shr
sub
not
das
bound
or
loope
jo
sahf
push
mov
call
push
int3
enter
in
adc
fcompl
mov
test
mull
out
imul
outsb
mov
pop
xor
and
dec
or
mov
push
lea
cmpl
jecxz
sti
and
push
sbb
push
xchg
xchg
int
xchg
mov
loopne
aaa
add
stos
clc
aas
mov
pushf
mov
push
cwtl
icebp
adc
dec
xor
lcall
imul
xor
into
dec
test
xchg
sub
xchg
negb
fs
mov
test
ret
jbe
adc
popf
lods
push
pop
xchg
jbe
cmc
popf
sahf
andb
fists
jle
push
mov
push
jne
xchg
es
stos
call
aad
in
lcall
cmc
jg
jne
js
push
pop
jmp
sub
mov
aaa
shr
mov
mov
daa
or
xchg
push
sahf
shrb
mov
adc
imul
pop
leave
adc
and
mov
outsl
call
insl
xor
mov
sub
mov
jp
adc
fiaddl
or
or
pusha
mov
xlat
movsb
pushf
loopne
push
xchg
lahf
inc
lcall
roll
scas
or
out
xor
sub
jmp
sbb
nop
lods
orb
xchg
insb
aas
lds
xor
movsl
xor
mov
pop
icebp
cltd
les
push
mov
jge
pop
movsb
mov
roll
in
bnd
cmp
mov
jecxz
sti
mov
pop
inc
loop
xor
xor
lahf
lea
bound
es
stc
jle
shr
icebp
dec
dec
lods
inc
lods
dec
xor
scas
fdivrs
sub
push
cmpsl
sub
mov
dec
xor
push
jb
bnd
sub
pop
jbe
lahf
add
loop
lock
push
push
lret
adc
push
jnp
dec
js
subl
sbb
out
jae
add
lods
in
inc
add
fldcw
insl
add
pop
or
push
push
xor
pop
cmp
cmp
sbb
push
lahf
je
test
and
sbb
ds
xlat
sub
jl
xor
dec
out
mov
xchg
mov
scas
dec
sub
jg
jl
and
xchg
xor
push
and
movsb
shr
xchg
mov
lock
adcl
inc
inc
and
pop
pop
mov
add
sbb
or
aam
test
push
cmc
sti
int
out
std
jl
roll
movsb
xchg
mov
jae
ljmp
test
xchg
pop
or
push
sti
out
clc
push
int
push
sbb
xor
jg
fidivrl
add
fcomip
push
mov
mov
es
aaa
sub
jp
sbb
mov
pop
sub
jmp
lret
adc
cmpl
mov
loopne
xor
push
enter
jecxz
sub
enter
mov
jne
out
je
sarb
sbb
pushf
xor
jnp
xor
iret
cli
pop
ja
add
xchg
add
jle
dec
pusha
mov
jg
mov
mov
pop
pop
mov
test
testb
jecxz
mov
aad
pop
pop
stos
xor
or
jle
fnstcw
lcall
mov
mov
jnp
hlt
or
cmp
enter
add
or
dec
and
push
push
mov
test
outsl
xor
pop
mov
jge
sti
push
roll
fnsave
shr
lret
xchg
mov
pop
mov
push
or
add
data16
sub
push
aad
int3
insb
add
xor
add
xlat
gs
pop
lret
outsb
dec
aaa
mov
pop
mov
pop
and
insl
insb
xlat
and
movl
ficomps
dec
int3
repz
push
cmp
mov
scas
pop
cwtl
jecxz
jns
adc
divb
daa
mov
rorl
jbe
leave
mov
jmp
int3
sub
pop
add
in
push
pop
dec
js
dec
dec
xchg
add
jmp
jnp
push
jle
dec
xchg
cmp
stos
outsb
and
mov
mov
iret
es
mov
pop
cmp
loope
mov
pop
mov
dec
xor
xor
xchg
lods
or
int
cmp
sub
stos
push
cmp
inc
addr16
test
pop
dec
ljmp
push
lea
js
jbe
push
mov
push
js
mov
push
bswap
mov
inc
xor
shrb
mov
lcall
inc
or
xchg
aas
movaps
lock
in
lahf
stos
lret
pop
push
test
les
das
push
add
arpl
leave
add
jle
add
jmp
fcoml
ja
xor
pop
pop
push
cltd
cmc
and
push
hlt
mov
push
ret
ja
stos
out
xchg
ja
stc
and
test
inc
ret
je
mov
xor
jae
fbstp
aas
pop
cmpsl
int
int3
push
xlat
inc
insl
rcr
shlb
je
cmpsb
mov
push
int
out
sub
push
adc
jbe
mov
daa
xor
repz
rcrb
mov
fstpt
rcll
or
cmp
popf
mov
pop
mov
loop
push
sbb
cwtl
out
jne
inc
jb
and
daa
in
outsl
push
stos
icebp
push
sub
fwait
pop
inc
dec
fldln2
out
push
push
cmpsb
adc
mov
adc
aad
fsubs
out
lods
call
pop
jnp
fwait
push
lods
stos
and
mov
push
jo
cmp
repz
inc
cwtl
lods
cs
out
xor
jle
clc
inc
stos
mov
out
in
mov
jns
orl
pusha
loop
xchg
mov
ljmp
or
inc
xlat
nop
iret
pop
dec
je
push
cmp
adc
jle
add
dec
mov
sub
adc
pusha
clc
and
dec
cmpsb
lea
push
in
jns
cmpsb
enter
xlat
pop
jle
mov
movsb
aad
ds
out
xor
xlat
call
jbe
sbb
out
sbb
scas
es
inc
push
loope
or
bound
shl
xchg
je
mov
sbb
push
or
sti
aad
jp
sub
in
stc
outsl
pop
dec
stc
sub
rclb
dec
adc
mov
cmp
lods
in
std
jmp
add
cmp
xchg
loopne
adc
dec
cmpsl
test
cmp
icebp
ret
mov
imul
pusha
and
mov
leave
test
xchg
imul
arpl
add
stos
mov
mov
lods
cmp
dec
or
lcall
inc
xor
gs
jbe
cmp
fstl
cmp
in
ja
add
pushf
shrb
jne
and
daa
frstpm(287
mov
out
add
test
dec
int3
mov
jg
in
out
out
sbb
jp
jae
inc
insb
push
pop
inc
mov
mov
push
push
testb
fsub
repnz
jne
lret
sbb
popa
cmp
or
mov
fists
dec
outsl
xor
shl
push
inc
sub
iret
or
add
mov
lds
xchg
jp
add
mov
jp
or
bound
sub
mov
mov
and
mov
ja
dec
and
mov
test
into
adc
mov
sub
cld
popa
xchg
cld
add
mov
loopne
xchg
xchg
sub
arpl
insl
xor
dec
dec
cmp
inc
jo
push
push
mov
aad
inc
xor
iret
jnp
sub
fcmovb
cmp
inc
js
fistpl
ja
or
jns
aad
aad
push
cmp
sti
mov
loop
lods
arpl
xchg
ficompl
pop
cmp
sbbb
orl
mov
add
dec
add
ljmp
fucomip
lods
and
arpl
push
ljmp
int
icebp
repnz
aas
jno
sub
cmp
push
mov
pop
mov
push
repnz
hlt
rcl
pop
or
jmp
call
aad
xchg
fwait
sub
test
ss
subl
jnp
insb
into
add
rclb
add
popa
push
xchg
sbb
adc
inc
rolb
cmp
ja
pop
jne
iret
sbb
std
pushf
mov
sbb
outsl
xlat
adc
orl
rcrl
sbb
and
icebp
daa
insl
push
jnp
sbb
add
in
insb
pop
cmp
and
jne
inc
hlt
pusha
cmp
fmuls
in
aam
xchg
xor
add
sar
jle
dec
sbb
and
je
mov
mov
pop
mov
adcl
into
loop
std
push
dec
das
es
insb
daa
cltd
jle
inc
into
shrb
cmpsb
sahf
loop
mov
insl
push
pop
nop
cmp
into
popl
ret
push
add
pop
or
xchg
jmp
xchg
add
frstors
jmp
pop
push
test
cmp
jp
in
mov
lret
cli
push
sbb
ja
push
lcall
mov
jns
stos
or
sub
sub
adcb
cwtl
inc
xchg
and
inc
fcoml
out
fisubs
das
adc
out
negl
loop
aaa
and
mov
or
adc
sahf
adc
sbb
clc
or
and
mov
cmp
imul
mov
ficompl
lock
int
inc
mov
dec
sti
or
add
dec
test
mov
jp
imul
scas
xchg
cmp
mov
and
pop
push
push
mov
sub
ret
in
pop
iret
xchg
add
and
push
jl
dec
outsb
iret
scas
xor
andb
andb
mov
es
xchg
stos
xchg
inc
jbe
jno
push
cmp
dec
icebp
insb
ficoms
stc
lret
cmc
jl
push
mov
popa
mov
lods
pusha
lods
xchg
xchg
aas
out
aad
mov
xor
adc
sub
pop
iret
faddl
fwait
or
daa
or
inc
xchg
mov
add
in
add
loop
aad
mov
cmp
add
fnstcw
fcoms
test
outsb
psrlw
in
dec
ret
mov
cld
mov
roll
fmull
sub
loop
cmpl
loop
call
ljmp
test
jne
mov
push
add
in
mov
cmp
call
nop
xor
mov
xor
jl
xchg
push
aaa
push
cmp
add
pushf
test
adc
scas
push
loope
fcompl
movsl
fstl
cmp
lahf
movsb
xor
or
xchg
loope
cltd
mov
out
xchg
or
xchg
cmp
test
out
adc
xchg
fmull
lea
lcall
adc
outsl
ficoml
or
dec
mov
pop
out
mov
loop
jns
imul
iret
jbe
aaa
fimull
push
jmp
push
out
xchg
sub
xchg
cmp
inc
xor
mov
out
outsb
lock
xor
add
fdivl
enter
jl
or
sti
jb
cmp
add
in
andl
cmp
jb
add
adc
mov
inc
inc
pop
sub
aad
fnstsw
dec
cmp
dec
xchg
ljmp
xor
adc
ss
dec
dec
dec
fiadds
iret
lret
push
xlat
test
jmp
pcmpeqd
aaa
cmp
xchg
roll
pop
xor
cmpsb
push
dec
sub
xor
scas
push
xchg
shl
xor
shlb
xor
push
lcall
xchg
xchg
stc
dec
nop
mov
ljmp
pop
adc
push
mov
mov
stos
mov
scas
push
out
and
stc
pop
pusha
xor
mov
cmpsl
mov
inc
pop
fcoms
nop
lods
pop
pop
xchg
jmp
rcrb
inc
push
icebp
insl
lds
and
popa
sbb
idivl
cmp
add
fadds
psubb
xor
loopne
insb
cmp
cmpsb
stc
mov
lods
dec
and
icebp
cmc
adc
push
clc
xor
hlt
jmp
incb
repnz
in
insl
outsb
mov
dec
das
scas
sbb
cmp
pop
push
insl
xchg
stos
xorl
or
aam
dec
fimuls
and
adc
xchg
imul
in
dec
mov
je
xchg
loope
mov
xchg
adc
mov
sub
pop
push
lods
pop
insb
mov
jno
fdivrl
js
movsb
cwtl
fcomps
inc
cli
aas
xchg
jmp
jb
sarl
aas
xchg
popf
in
insb
pop
pop
push
add
insb
aaa
mov
loopne
ds
in
xchg
movsb
xchg
cmp
stos
adcl
pop
jmp
dec
and
mov
in
xchg
nop
adc
mov
xchg
xchg
adc
push
xchg
in
jl
dec
jmp
cmpl
mov
dec
sbb
cmc
hlt
mov
out
je
or
and
es
sbb
andl
insl
cmp
stos
popf
icebp
sbb
sahf
test
dec
rorl
push
leave
sbbl
push
mov
add
jae
mov
mov
push
imul
rcrb
in
sub
leave
lahf
dec
lds
test
and
sbb
dec
in
mov
push
shll
loopne
ljmp
or
pop
sbbl
push
sbb
jmp
dec
xchg
or
ds
mov
shll
stos
stos
test
lock
lds
inc
mov
in
sbb
js
ret
push
jle
fiaddl
addr16
testl
cmc
dec
jge
xor
scas
sub
add
cmp
orb
fdivrl
cs
mov
data16
lea
jno
cmp
adc
lahf
xchg
pushf
pop
aas
dec
cmp
dec
daa
movsb
xor
repnz
add
push
lahf
cmc
mov
push
fwait
call
fadd
cwtl
pop
fwait
enter
inc
stos
or
add
pop
mov
stc
mov
decl
js
lods
out
jp
lods
clc
sub
sbb
ds
icebp
aas
movsl
insb
or
lret
pop
xor
push
adc
aad
adc
clc
lock
aad
inc
xor
test
lock
jns
enter
pop
loop
push
push
popf
xchg
pop
jge
pop
mov
jle
imul
lods
xor
cltd
mov
lcall
xor
enter
aaa
int
lcall
rcr
push
cmp
adc
test
aaa
ja
addr16
ret
sahf
sbb
fcom
and
mov
xchg
dec
adc
test
mov
fistps
movl
loope
xor
ret
add
jns
fwait
sub
cmp
cmp
adc
push
jg
jo
cmp
mov
hlt
addr16
push
adc
cmpsb
lods
cld
dec
mov
pusha
jge
fdivl
hlt
test
cmpb
or
nop
add
pop
jns
fwait
mov
in
lea
dec
inc
adc
mov
arpl
xchg
dec
add
sub
pop
inc
aas
pop
jno
es
cmp
stos
jmp
xchg
ret
sub
ss
xor
lea
dec
addr16
xchg
lock
or
adcl
ret
sbb
jae
inc
sbb
sbb
das
ja
and
push
fwait
ljmp
mov
mov
push
mov
jge
jns
movsb
inc
cs
sbb
es
lret
lahf
mov
imul
push
xchg
jnp
in
aam
add
sub
or
and
cmp
mov
cmc
lahf
popa
and
sbb
lret
add
inc
inc
mov
call
cli
repz
fsubrl
and
enter
pushf
jne
imul
ljmp
lods
insb
or
test
bound
sahf
xchg
add
mov
inc
adc
lret
ret
cld
fistpll
jnp
clc
lret
fidivs
adc
bound
push
cmp
sahf
movsb
xchg
stc
push
jecxz
pushf
out
outsb
xchg
jl
cmc
and
outsl
and
pop
fsubrl
mov
bound
arpl
push
push
cltd
mov
in
dec
loopne
push
jns
push
mov
imul
adc
and
inc
int
dec
inc
addl
enter
dec
sbb
xchg
push
lcall
add
loopne
fnstcw
icebp
mov
fdivl
inc
xchg
push
nop
test
dec
jp
inc
inc
stc
out
jecxz
sub
mov
or
xor
mov
pop
push
icebp
call
jge
mov
or
cmp
bound
jb
shrl
pop
mov
dec
sti
aaa
add
mov
or
ret
testb
inc
dec
lods
aad
scas
fistps
cmp
xchg
fs
ja
iret
shr
sbb
ds
sub
pop
scas
push
lea
mov
sarl
sti
lods
mov
lods
mov
cmp
int
sub
cmc
cmpsb
pop
cmc
mov
imul
mov
test
push
cmp
jo
jb
out
push
pop
fadd
fisubs
dec
add
mov
xchg
nop
fs
fisubrs
lcall
inc
loopne
nop
add
rolb
fcomps
pusha
mov
sub
jecxz
fstl
inc
push
cmc
daa
dec
jl
mov
mov
inc
sbb
jle
test
xor
pop
lcall
stc
es
daa
jb
stos
mov
push
or
mov
mov
arpl
cmpsl
int
fnstcw
push
pop
adc
xor
push
cmpsb
xor
or
or
xchg
sbb
push
adc
push
popa
ret
add
in
insl
popa
mov
leave
xor
mov
jmp
mov
mov
pop
insb
jnp
jns
cltd
xchg
sbb
xchg
adc
mov
jnp
icebp
sub
sahf
or
lahf
xchg
inc
ja
and
outsb
pushf
lret
or
xchg
cmp
stos
mov
popf
fidivrs
incl
test
sub
sbb
sub
aaa
lret
mov
xor
xchg
add
out
pop
in
repnz
lds
clc
jp
mov
scas
popf
scas
jnp
test
out
repnz
lds
mov
ficompl
mov
clc
pop
aad
outsb
dec
mov
mov
pop
ljmp
jecxz
ja
mov
mov
js
in
cmp
das
dec
mov
ja
in
into
pop
xor
test
mov
mov
jge
out
out
push
test
push
sub
cltd
fiaddl
lods
icebp
lods
jmp
jmp
fisttps
inc
mov
aas
dec
and
movsl
push
ds
icebp
loope
or
sub
mov
mov
call
adc
fs
or
in
ficomps
sub
mov
mov
sub
push
rcrl
jno
xchg
and
ret
sbb
ja
cld
test
arpl
push
xor
fstl
inc
out
loope
adc
xchg
data16
cmc
push
sbb
cmpsb
push
adc
test
test
mov
mov
xchg
std
mov
mov
adc
xor
xchg
push
mov
and
sti
or
sbb
sbb
cmp
out
std
sahf
cli
movsb
mov
ljmp
pop
mov
jno
ds
xor
testl
lods
xor
jb
test
push
mov
insl
xor
sbb
stos
sbb
dec
dec
cmp
jmp
int3
jne
xchg
in
cmp
and
fidivs
inc
cmpsb
testl
mov
mov
dec
and
mov
popa
mov
mov
inc
orl
jo
jno
inc
mulb
mov
or
mov
and
dec
ss
inc
push
addr16
mov
push
mov
dec
jmp
inc
mov
mov
loope
in
push
sub
popf
jge
fists
fxch
pop
push
testb
ds
test
addr16
and
or
mov
andb
loope
test
inc
das
mov
xor
pop
xchg
and
pusha
xchg
xchg
inc
xor
sub
add
sbb
adc
mov
pop
cld
mov
mov
adc
ds
iret
jne
divps
jo
inc
add
repnz
addr16
cmp
stos
xor
ljmp
cmpsl
sti
sbb
mov
shll
cmp
add
lahf
or
dec
inc
adc
dec
fs
ds
je
mov
daa
dec
push
pop
push
dec
push
out
lods
inc
add
sbb
inc
lods
faddl
mov
inc
sbb
enter
bnd
outsl
xchg
mov
push
adc
out
repz
push
aam
mov
pop
dec
movsb
jmp
jp
mov
pop
fwait
adc
jp
or
nop
leave
cli
out
mov
mov
loope
mov
test
mov
mov
xlat
aad
into
in
inc
dec
inc
cltd
push
out
add
jecxz
shll
push
fdiv
jle
pushf
add
test
int3
cmpsb
aad
jo
push
pop
add
or
stc
sub
xor
dec
jae
adc
scas
jno
cmpsb
shll
adc
repz
jnp
cltd
jno
push
add
shlb
lods
add
adc
test
mov
pop
fists
jg
xchg
cmc
je
cwtl
push
xchg
je
push
in
dec
and
push
sbb
mov
shl
aam
fdivl
cmc
daa
cld
inc
pop
pop
sbb
sti
xchg
sbb
jbe
pop
pop
lods
add
cli
fcomp
xchg
cmpsb
sbb
add
jno
lock
xor
jbe
mov
repnz
sub
jge
aas
mov
push
jns
test
bts
mov
xchg
popf
cmp
pop
xchg
jns
jge
fcmovnu
rclb
mov
xchg
inc
xor
test
sbb
push
cmpsb
mov
ds
ret
pop
pop
loop
jo
adc
mov
pop
scas
test
and
cmp
pop
or
test
mov
leave
sbb
test
loopne
stos
cs
in
je
jnp
loope
sbbl
aaa
icebp
icebp
shrl
test
jmp
jmp
mov
cmp
in
test
xor
jp
nop
push
movsl
pushf
mov
test
shlb
hlt
cltd
mov
mov
mov
xchg
int
add
pop
fidivrl
mov
mov
adc
mov
outsb
movb
pop
or
loope
inc
fidivs
in
fwait
sbb
sarb
and
and
xchg
adc
pop
or
sbb
pop
stos
inc
jne
or
pop
and
cmc
fwait
leave
mov
inc
subl
das
push
scas
iret
pop
shlb
xchg
xchg
call
jb
xchg
pop
pop
out
inc
adc
stc
dec
pop
testl
ret
insb
mov
mov
fnstenv
int3
pop
fidivl
adc
test
jg
inc
or
bound
jl
addr16
ja
fs
xor
insb
inc
mov
adc
cmpsb
lods
les
push
mov
mov
fs
push
dec
cmp
and
jne
mov
leave
stc
fldt
jns
add
cld
jbe
pushf
jae
cmc
int3
pop
pop
mov
or
adc
add
out
xor
lods
or
xchg
leave
cmp
fistpl
fidivrl
adc
gs
lahf
xchg
and
loopne
cmp
mov
mov
popf
outsb
or
test
and
xlat
mov
pop
dec
cmp
xchg
ret
jle
test
mov
xchg
cmc
mov
mov
mov
mov
cmp
addr16
pop
sbb
or
outsb
pop
testb
and
loopne
in
fdivrl
inc
pop
jno
stc
mov
add
cmp
push
dec
pop
icebp
out
enter
sub
subl
aaa
imul
orb
mov
push
outsb
mov
test
xchg
aam
repnz
incb
sub
hlt
jg
iret
cli
rorl
popa
push
sub
mov
fs
ljmp
popa
movsl
outsb
mov
xor
imul
jb
pop
jmp
cmp
fnsave
clc
jbe
pop
mov
or
inc
pop
push
rcrl
sti
sbb
push
imul
lret
ret
adc
ds
add
and
add
dec
xchg
enter
gs
test
pop
sbb
hlt
fnsave
idiv
lret
mov
pop
negb
scas
or
xor
adc
sub
loop
add
stc
xchg
call
rol
mov
push
cld
icebp
dec
pop
je
fstl
imul
mov
jo
imul
xchg
xchg
mov
movsl
insb
mov
pop
subb
dec
mov
lcall
or
and
adc
rorl
mov
in
cmp
movsb
mov
daa
jmp
and
and
push
movsb
xlat
fnstcw
or
mov
inc
adc
push
push
repnz
lcall
ret
push
fiaddl
mov
dec
int3
je
push
xchg
mov
mov
jnp
push
mov
data16
xor
push
icebp
and
push
nop
add
jp
dec
icebp
mov
sbb
cmp
rcll
cmc
add
aad
out
outsl
jg
dec
int3
sbb
icebp
mov
mov
rorb
push
inc
xchg
pop
sub
mov
gs
jle
push
sti
cltd
cmp
outsl
push
adc
dec
shrb
divps
inc
sti
mov
outsb
int
lea
push
sbb
xor
pusha
mov
imul
aam
sbb
ret
icebp
or
stos
mov
xor
or
sbb
lods
ss
in
dec
push
xchg
dec
rcll
aam
xchg
lods
or
ljmp
subb
xor
inc
fs
inc
out
mov
pop
in
xor
loope
or
xor
sarl
les
cmpsl
data16
int3
jno
shl
hlt
or
dec
mov
pop
ret
pop
and
sarl
mov
scas
es
cmp
int
insb
cmpl
lcall
cmc
loop
push
insl
inc
adcl
test
sub
outsb
in
adc
dec
add
fists
xor
lods
sub
pop
leave
rorl
xor
cmp
xchg
dec
pop
mov
out
jl
sbb
jmp
xchg
cli
pusha
test
inc
xor
xlat
lock
lock
mov
jbe
push
dec
mov
cmp
or
mov
pop
ljmp
sbb
push
mov
push
adc
arpl
xchg
dec
ja
cs
stc
xchg
scas
cmp
je
std
mov
out
mov
arpl
xlat
data16
aad
mov
cmc
xchg
imul
jp
les
add
iret
xor
mov
push
fisubrs
addr16
push
push
rolb
xor
lahf
mov
mov
xor
cmpb
xchg
xchg
push
aam
and
sub
mov
cmpsb
xchg
lods
ss
jne
mov
cmpsb
lret
mov
aas
jmp
test
xor
push
xchg
subb
inc
mov
loopne
or
sub
sub
clc
mov
outsb
stc
enter
into
ss
mov
mov
mov
add
pop
pop
mov
inc
sub
xor
frstor
sub
sub
inc
adc
leave
outsb
addr16
lock
lods
jae
inc
jg
xor
sub
icebp
mov
mov
add
mov
cld
js
push
repz
jae
sahf
in
aas
ss
mov
lods
sub
gs
fwait
jb
pop
mov
sub
sub
js
pop
loope
or
test
fwait
xor
mov
push
xor
sbb
pop
push
stos
and
imul
jb
bound
inc
cmp
and
or
push
pop
int
mov
mov
fcomi
aam
es
stos
jae
out
aaa
xchg
xor
lcall
pusha
mov
mov
and
enter
mov
in
faddp
jae
jmp
dec
dec
mov
ja
jmp
ficomps
cmp
xchg
mov
mov
mov
adc
jno
ret
mov
adc
mov
loop
vhsubpd
add
mov
stos
popf
lret
out
mov
and
push
inc
out
enter
mov
js
or
jl
add
mov
mov
or
dec
mov
sbb
scas
push
sub
add
movsl
jl
mov
push
xor
and
dec
lods
push
fxch
ja
shl
andb
lea
xcrypt-cfb
cmpsl
mov
faddp
rolb
jne
mov
xchg
dec
pop
fldl
adc
adc
dec
stc
adc
push
xor
xchg
ficoml
popa
out
mov
mov
popf
cwtl
mul
xor
dec
lcall
add
cmpsl
sub
mov
popa
xor
jae
or
jne
mov
movl
fwait
in
imul
pmullw
jg
adc
rorb
lcall
imul
je
fmull
xchg
or
imul
pop
in
xchg
adc
and
add
jns
lods
js
lret
out
imul
mov
push
loopne
lods
cmpsb
mov
stc
mov
dec
mov
inc
rcrb
rclb
addr16
cmp
mov
jno
sarb
and
jae
and
sub
hlt
call
jbe
xchg
cmpsl
rcrb
cli
cmp
clc
adc
push
xor
loopne
lods
xchg
jecxz
rorl
lods
push
inc
sbb
mov
push
push
or
xor
and
lret
enter
loope
push
icebp
inc
xchg
fmul
push
fadd
ret
lods
cmp
jne
jle
dec
inc
repnz
pop
mov
aam
mov
adc
and
lahf
ss
sahf
hlt
int3
xor
mov
mov
out
dec
popf
loop
mov
inc
and
repz
mov
jbe
jge
pop
sti
or
lods
xchg
fisubs
lahf
test
xchg
mov
mov
sbb
inc
mov
pop
mov
scas
stc
lcall
in
pop
mov
and
add
inc
cmp
lods
add
or
fbstp
out
js
pop
sbb
xchg
jg
test
jnp
cmp
xor
repz
push
push
dec
test
dec
iret
call
add
ss
adc
stc
int3
shrb
int
cmp
outsl
push
sbb
notl
rolb
or
adc
or
dec
ret
lret
jge
xor
aad
into
popf
and
adc
xor
mov
sbb
push
mov
add
xchg
sbb
cwtl
inc
or
push
mov
sbb
push
inc
stc
pop
jo
dec
arpl
popa
pop
xchg
dec
or
dec
scas
and
pushf
pop
or
pusha
stos
aaa
sub
inc
inc
sub
in
push
imul
and
mov
stos
sbb
add
dec
and
dec
jae
movb
cmpsb
jle
aaa
cmpsb
lock
gs
stos
fldcw
cltd
ficoml
push
mov
icebp
test
daa
jae
cmp
roll
push
sub
hlt
or
jo
inc
jge
aaa
mov
dec
in
mov
daa
jmp
out
outsb
push
loopne
ds
fsubr
jae
outsl
xor
mov
rcrb
pop
les
adc
push
push
dec
mov
dec
in
mov
mov
enter
aam
adc
pop
mov
xor
sub
sub
xor
fdivl
lret
mov
cltd
int3
rclb
push
shll
repnz
pop
test
scas
jns
and
leave
mov
cmp
les
lea
adc
adc
inc
mov
addb
rcrb
push
hlt
repnz
cs
and
inc
push
in
add
cmp
pusha
pop
mov
lods
data16
out
jb
sub
xchg
xor
and
je
stc
adc
push
std
push
pop
ss
add
mov
scas
sbb
pop
fs
xchg
adc
mov
jl
pusha
jp
mov
sarb
movsb
and
mov
sar
cmp
dec
inc
inc
push
mov
jge
jbe
fyl2xp1
push
push
sahf
das
or
int
xchg
outsb
inc
xchg
ret
push
push
scas
popa
add
jb
mov
cmp
push
jge
dec
test
aaa
adc
mov
push
cmpsb
sub
decl
add
add
mov
dec
mov
test
mov
mov
roll
arpl
mov
rclb
adc
mov
or
js
cmpsb
push
push
adc
cli
push
jnp
or
fisubrl
loope
pop
call
push
jae
xchg
xor
aad
push
sub
xchg
movsl
add
repz
push
xor
enter
dec
ret
mov
mov
jle
cmp
jle
inc
stc
sarl
dec
fcoml
xor
push
es
fisubs
add
cmpsb
int
roll
popa
cmp
repnz
mov
shll
or
clc
mov
test
subb
dec
aam
scas
dec
mov
xor
jmp
cmpb
mov
test
fdivrs
mov
xsave
dec
fidivrs
sbb
shrl
dec
data16
mov
mov
lahf
lds
sub
ficomps
std
add
fsubl
pop
adc
or
dec
stos
pop
loopne
cmpsb
mov
jo
adc
xchg
sub
in
inc
xchg
sti
pusha
dec
sbb
fwait
xor
mov
lcall
outsb
icebp
xor
popa
insb
cmpsb
jp
and
ficoml
pop
shll
pop
ficompl
xchg
lcall
das
mov
inc
ss
dec
mov
ds
cmp
imull
sahf
mov
mov
test
leave
inc
push
mov
popa
or
cmc
and
pushf
arpl
sbb
shll
push
arpl
xchg
or
notl
adc
mov
push
sbb
std
ljmp
std
jno
push
push
loopne
sub
adc
inc
pop
dec
ret
jns
js
test
jne
pop
lcall
push
clc
cld
clc
cmc
repz
cmp
xchg
jo
fbld
jno
mov
scas
or
inc
call
lods
je
push
inc
sbb
les
mov
push
push
mov
adc
inc
push
push
and
idivb
adc
cmovge
dec
or
insl
inc
out
cmp
xchg
fcoms
xchg
addb
das
xchg
adc
stc
mov
mov
or
push
shl
push
jecxz
or
sbb
ret
clc
sti
leave
int
cmp
and
sbb
fadds
mov
ds
cmc
imul
aaa
int
sub
jl
iret
xchg
xchg
xor
data16
or
jecxz
mov
adc
cmc
cmp
rolb
push
pop
mov
dec
inc
in
xchg
add
shll
repz
inc
enter
scas
or
mov
lret
push
insl
and
lods
repz
push
imul
dec
jnp
addl
loopne
lret
mov
lahf
pusha
mov
lahf
loop
add
stos
jnp
and
arpl
test
cmp
in
scas
repz
rclb
or
xchg
outsb
and
ret
jae
and
lea
or
cwtl
bound
test
adc
sar
daa
aas
adc
mov
and
inc
data16
xchg
flds
in
xchg
pop
daa
popa
je
adc
loopne
push
out
cmp
imul
jnp,pt
jmp
fbld
fs
clc
lods
xchg
int
dec
fsubrl
dec
data16
jl
mov
pop
lock
push
pop
cli
xchg
mov
push
or
das
cmp
bound
out
rol
fsubr
call
sbb
jnp
inc
scas
pop
mov
dec
sub
popa
mov
fstl
xor
mov
dec
cwtl
mov
insl
adc
sub
sub
repz
pop
xchg
sahf
xchg
pop
mov
sbb
test
jecxz
out
jp
add
shlb
scas
jg
inc
mov
test
popa
rclb
bts
inc
test
std
dec
mulps
fwait
mov
mov
lock
ds
jg
bound
clc
addl
fiadds
iret
and
out
std
dec
lods
sub
flds
lret
in
aad
je
fs
cmc
or
jge
inc
nop
jns
int3
lret
dec
adc
adcb
adc
sbb
mov
scas
out
mov
dec
pop
lea
dec
inc
movb
fidivl
pop
insb
pop
xchg
mov
pop
push
jl
add
pop
pop
ret
cltd
add
push
jo
in
dec
into
push
inc
adc
call
addr16
lock
orl
jle
pusha
dec
aam
jp
out
in
jnp
clc
call
flds
fistpll
std
les
cmpsb
imul
and
daa
and
mov
inc
rorb
jecxz
icebp
fdivs
mov
imul
push
movsl
sub
dec
push
iret
es
mov
sbb
xor
jp
loop
pusha
sbb
push
test
cmp
lcall
dec
mov
icebp
xlat
inc
aam
xchg
or
fwait
ds
push
mov
das
sub
testl
aam
jl
js
mov
loopne
sub
mov
cmpsb
cmc
sbb
cltd
jg
movl
or
push
sbb
push
pop
and
jp
aaa
inc
inc
daa
xor
pop
mov
dec
sbbl
in
mov
jo
stos
dec
xchg
mov
fmuls
lods
push
cmp
int
daa
mov
mov
lret
sbbl
cmp
mov
dec
xorb
stos
rorb
xor
cwtl
adc
inc
ss
adc
pop
push
outsb
fists
add
mov
dec
hlt
cmp
stc
or
rol
inc
lret
push
adc
pop
and
ljmp
pop
outsb
xchg
iret
pop
sbb
fldcw
sti
pop
negb
cmp
movsb
lea
dec
or
ret
frstor
fcmovb
in
out
imul
mov
popa
or
inc
mov
pop
inc
inc
push
pop
xor
insl
pusha
and
pop
jne
mov
call
or
clc
and
ret
xchg
cwtl
jae
jg
fsubs
mov
mov
outsb
sub
lahf
orb
stc
out
xchg
mov
jbe
fisttpl
push
ret
cli
mov
out
mov
sbb
ja
adc
cli
icebp
inc
or
sbb
fiaddl
adc
mov
pop
cltd
mov
xchg
sbb
cmp
add
push
insl
sbb
fstps
or
jmp
arpl
movsb
xchg
sub
xlat
cltd
xchg
fdivr
fildll
rep
mov
inc
shll
out
sbb
ljmp
jl
into
lea
sub
mov
push
add
repz
add
jno
jne
arpl
push
sbb
daa
lret
and
inc
aad
inc
cmp
fdivrp
xchg
fs
or
push
std
push
fsubs
jecxz
lds
add
sbb
xor
push
push
push
je
jae
ret
stos
push
es
mov
cmp
jecxz
or
call
icebp
mov
mov
test
mov
jg
pop
and
pusha
jg,pn
repz
jns
les
xor
mov
sub
int3
pushf
cmp
adc
js
ret
add
lock
inc
test
mov
pop
lock
dec
mov
mov
iret
fisttpll
in
and
test
shr
pop
add
fldt
je
xor
mov
test
aad
or
mov
loope
vmwrite
push
sti
adcl
aas
mov
sub
repnz
cs
mov
mov
adc
int3
lds
pop
inc
cmpsb
pushf
mov
outsl
nop
les
pushl
fdivs
popa
ret
push
outsb
inc
xor
inc
mov
or
pop
mov
pop
cmc
push
jbe
sbb
xchg
mov
je
lea
adc
adc
repnz
test
push
orl
xor
hlt
sarb
sbb
mov
xor
lcall
push
mov
push
imul
mov
movsb
add
cmp
mov
jb
es
je
jno
xchg
loopne
dec
out
mov
dec
into
pop
push
lock
arpl
jecxz
dec
pop
cltd
lock
int3
adc
lds
leave
repnz
jle
sahf
jbe
adc
xchg
in
sbbb
xchg
pop
pop
bound
stos
adc
jb
jb
add
pop
repnz
push
add
decb
mov
adc
bound
add
inc
sahf
loopne
test
push
mov
mov
into
rclb
xor
andl
cmpsb
fsubs
cs
cmp
clc
push
jp
fwait
enter
jecxz
fwait
cmc
adc
add
fld
les
push
sub
lock
jecxz
push
or
xchg
jne
push
jmp
insb
fnsave
jbe
xchg
push
insb
dec
xchg
jl
jg
lods
jecxz
xchg
outsb
aaa
hlt
pop
xor
mov
xchg
add
push
jne
outsl
xor
jmp
cltd
xchg
mov
pop
push
or
jb
or
mull
jmp
or
movsb
xor
jb
cmp
cmpsl
addr16
sub
and
and
xchg
sbb
loopne
inc
es
fwait
xchg
clc
jns
test
lock
and
aaa
mov
cli
xchg
out
inc
mov
jmp
lds
cmp
stc
repnz
jne
cmp
scas
mov
sbbl
sti
and
fisubrs
movsl
ret
lahf
mov
pop
pop
or
adc
ljmp
jns
fsubs
xor
inc
lds
inc
call
lret
out
cmpsl
jne
cmp
in
sub
xchg
popf
fbstp
inc
rolb
gs
stc
int3
add
mov
insb
loope
sbb
icebp
and
mov
fmuls
add
test
jne
into
push
push
ror
stos
jp
and
test
xlat
and
lea
jo
stos
je
lret
or
pop
pop
sbb
mov
and
inc
jmp
inc
mov
push
jmp
adc
sbb
lods
ja
pushf
xlat
and
test
pop
ds
jb
cmp
mov
mov
notb
ljmp
cmp
push
sub
mov
das
dec
cmpsb
std
xchg
aas
lret
inc
or
add
sub
mov
mov
and
mov
subl
and
test
pop
ss
and
or
add
cmp
xor
pop
lahf
push
inc
gs
das
jae
fs
mov
sub
and
aam
les
lock
cmpsl
push
nop
mov
fs
rcrl
adc
push
mov
fisttpll
adc
fdivl
pop
pusha
shll
jbe
fcomip
dec
mov
push
lret
cli
inc
push
iret
lahf
loope
pop
mov
imul
inc
xlat
dec
out
lret
sar
lock
repz
flds
pmaddwd
mov
imul
cmp
add
movsb
mov
add
pop
sub
mov
in
add
mov
into
repz
js
mov
int3
fdiv
add
flds
pop
dec
out
dec
jae
push
mov
test
cmpsb
cmp
loope
push
sub
push
jg
xchg
std
xchg
fmul
das
adc
bound
and
push
pop
mov
cmp
fcom
xchg
lahf
andl
mov
mov
rcr
push
mov
dec
adc
push
xchg
and
aad
test
outsb
je
jne
add
adc
sub
adc
pop
pop
nop
or
call
jp
mov
jmp
scas
ja
or
cmovo
movsl
enter
clc
mov
arpl
ja
push
scas
xchg
and
add
jae
inc
or
ljmp
test
xor
jl
lret
js
xchg
pop
mov
movsl
dec
pop
ss
add
movsb
das
iret
lock
inc
push
test
test
shr
jae
pop
dec
fwait
aas
mov
inc
xlat
sub
stos
lea
add
aad
faddp
jmp
inc
movsl
jbe
mov
aas
push
jbe
incb
scas
cmp
imul
mov
mov
mov
jecxz
cld
incl
ljmp
cltd
in
inc
add
in
iret
stos
in
or
inc
cmp
negb
out
aam
ret
xor
push
cmp
push
add
cmp
dec
xor
js
inc
mov
sub
xorl
in
xchg
sbb
in
jno
sbb
mov
fidivrl
flds
lcall
lret
loop
mov
movsl
add
and
mov
js
andb
jne
dec
stos
outsl
mov
push
jnp
lock
out
xchg
insl
mov
add
jmp
es
mov
les
push
std
hlt
lret
stos
mov
sbb
or
jns
mov
fildll
xchg
jnp
loope
cld
push
cmp
insl
stc
stc
dec
cltd
idivl
aad
cmp
call
and
mov
out
lahf
jmp
or
push
mov
mov
test
jp
and
push
decb
push
cmc
jb
and
pop
and
ljmp
xchg
mov
fcomi
mov
cmpsb
push
rorb
dec
add
stos
cmpsb
imul
cmp
pop
dec
dec
and
mov
mov
jnp
mov
inc
mov
repnz
out
imulb
mov
inc
add
ss
inc
mov
fsubrl
enter
inc
fwait
aad
jl
mov
adc
pop
test
inc
xchg
pop
jo
mov
push
jae
inc
cmp
aad
add
cmp
enter
xor
div
or
jb
mov
leave
pop
adc
out
cwtl
aaa
or
jge
xchg
and
xor
icebp
es
enter
test
mov
push
push
flds
cwtl
mov
and
adc
imul
loopne
jl
inc
jbe
or
add
js
outsb
aas
sbb
mov
out
outsb
mov
inc
ja
int
cmpsl
scas
icebp
pop
in
sub
fsts
jne
andb
imulb
out
xchg
xchg
sbb
and
int
out
lahf
sbb
mov
loop
fs
mov
mov
cmc
cli
mov
inc
xchg
xor
lds
lods
push
test
gs
movsl
fnstsw
pop
sub
pop
popf
dec
mov
clc
and
repnz
lods
punpckhdq
xor
lods
xor
adc
iret
xchg
ljmp
movsl
or
dec
ja,pt
stc
je
mov
jl
dec
xor
cs
mov
es
push
pop
out
bnd
into
insb
dec
frstor
rcll
mov
xchg
mov
mov
mov
test
dec
jle
inc
mov
cmp
out
jns
jp,pn
cmp
fwait
push
pop
shll
add
inc
sti
popa
inc
lock
cmpsb
sbb
and
shlb
fdivl
jle
or
xchg
jo,pn
notl
jmp
xor
jns
int3
push
push
add
sbb
mov
rorl
test
outsl
mov
mov
pop
cltd
ja
lock
xchg
jg
xor
fisubl
mov
inc
repz
adc
mov
ret
aaa
out
rclb
loopne
scas
mov
jl
mov
push
lds
adc
xor
dec
add
sub
aas
lods
movsb
lods
out
jle
pop
inc
adc
jmp
call
jp
movsb
icebp
int3
bound
push
cmpl
adc
shll
dec
shrl
dec
adc
add
dec
inc
mov
lcall
call
inc
cmpsl
inc
ret
jnp
mov
pop
test
rcll
dec
jmp
or
mov
add
xor
lcall
pop
arpl
clc
in
adc
inc
out
std
dec
pop
add
sub
mov
jo
mov
jge
add
test
xchg
loope
icebp
stc
ror
test
fnstcw
adc
testb
adc
fs
rclb
stos
pusha
or
jbe
arpl
mov
dec
out
or
dec
movsl
fsubrs
push
cltd
inc
dec
mov
arpl
or
jl
sub
jmp
loopne
and
neg
push
sub
inc
daa
incb
jns
enter
mov
lahf
pop
nop
and
or
cld
lock
and
pop
mov
xchg
push
or
and
fisubs
or
shll
dec
cmp
xlat
pop
push
shrb
lods
xchg
std
shl
jge
stos
insl
dec
out
adc
inc
int3
repnz
loop
jnp
sub
jns
mov
mov
bound
cmpsb
pop
inc
std
dec
add
add
cltd
ds
jns
stos
cmpsl
ficomps
dec
dec
push
sbb
int
ret
jb
shlb
mov
mov
mov
jmp
mov
mov
bound
sub
dec
pushl
xlat
xor
cmp
stc
mov
mov
pop
push
insl
test
mov
imul
push
inc
scas
int3
adc
cmp
lret
out
push
mov
mov
jo
sub
mov
and
and
fildll
psrad
cltd
cmp
lret
rcrb
mov
mov
jbe
punpckldq
rcll
add
add
jle
inc
push
inc
nop
mov
lcall
push
daa
and
sbb
or
mov
or
in
ret
test
cld
test
xor
sarl
mov
fdivp
or
jns
add
pop
sti
ret
add
jge
ja
js
cld
inc
add
xchg
addl
xor
movsb
sahf
cmp
lret
jecxz
mov
shll
dec
loop
aaa
push
xor
dec
push
jnp
fstpl
lock
fildll
and
adc
jo
ret
jb
movl
decl
testb
xchg
ret
insl
iret
aad
mov
xchg
push
cltd
inc
xlat
inc
pop
lea
arpl
fisubrl
aaa
xchg
test
ret
cltd
sub
xor
sub
cmp
out
and
ss
mov
jecxz
data16
ljmp
roll
push
das
sub
rcrb
arpl
lret
sbb
cmpsl
aas
jl
pop
outsl
push
out
aam
xchg
dec
in
push
and
mov
dec
aaa
or
or
hlt
inc
data16
xor
xchg
clc
repnz
jg
cmp
sub
lea
push
fdivr
adc
jp
dec
dec
in
add
jae
imul
iret
imul
dec
or
retw
adc
cltd
ljmp
imul
mov
cmp
call
push
lods
push
sbb
je
psubq
lcall
adc
mov
aas
jp
mov
insb
cmp
sub
js
push
ds
cmp
rolb
inc
push
mov
fwait
pop
dec
lret
jle
jb
mov
aam
sub
lea
out
mov
jecxz
cmp
mov
test
ret
ret
mov
movsb
je
and
lsl
cmpsb
and
sbb
xchg
bound
jne
arpl
sti
into
fisubrl
stc
or
sti
mov
pop
inc
insb
hlt
add
mov
adc
xor
sub
in
cmpsb
popa
jecxz
push
xchg
bound
mov
pop
inc
pop
lods
outsl
sahf
and
mov
jns
adcb
push
push
cmc
insb
out
xor
and
xchg
push
adc
mov
leave
cmp
imul
push
xchg
pop
lds
notb
jo
xchg
jecxz
subb
scas
sub
idivb
adc
in
add
pop
push
inc
push
xchg
enter
pop
fbld
addr16
cwtl
sahf
push
sub
xor
sub
fdivr
scas
cld
pop
in
adc
mov
sbb
into
or
dec
pop
shrl
repnz
push
mov
jbe
xchg
subl
iret
and
ficompl
movsb
mov
jnp
popa
sbb
je
pop
imul
push
add
sbb
cmp
push
or
dec
out
cmp
inc
sub
xor
add
sbb
pop
repnz
bound
adc
push
lock
dec
pop
shl
adc
cmp
jg
dec
icebp
add
pop
shr
cmp
std
cs
jl
or
xchg
push
jle
cld
imul
pop
movsb
and
xchg
inc
std
inc
xchg
sbb
stc
hlt
jnp
icebp
sub
dec
and
push
loop
push
mov
sbb
out
repz
clc
mov
mov
bound
xor
out
andb
pop
and
adc
fisttps
repz
mov
shll
mulb
pop
aaa
pop
movsl
fwait
jns
je
sbb
iret
decl
les
ret
dec
fadds
xor
sti
cltd
cmp
dec
ud0
pop
xchg
xchg
xor
les
sub
in
int
rol
lret
cli
jp
jo
jecxz
dec
push
std
and
lret
mov
xor
cmp
inc
loope
mov
repz
nop
mov
pop
cmp
mov
xlat
jmp
dec
in
xor
int3
pop
mov
push
pop
add
xchg
and
sub
mov
aad
hlt
arpl
fildll
push
fnstsw
push
idiv
sbb
or
rcl
gs
cvttps2pi
mov
xlat
or
sub
mov
mov
js
repz
outsb
mov
mov
and
test
sub
mov
lock
adc
jb
out
sbb
into
sti
push
ja
adcb
push
les
testl
mov
pop
psubw
mov
push
jge
and
jb
aad
inc
in
lahf
in
dec
in
test
dec
out
test
decl
insl
fistl
xchg
jae
xchg
aaa
leave
dec
dec
pop
jmp
xchg
jge
pop
shl
pop
insl
xchg
arpl
xchg
je
dec
lahf
test
mov
sub
sub
sbb
and
mov
xchg
add
repz
loopne
std
test
cmpsb
push
std
add
testl
and
push
mov
mov
ljmp
push
popf
fbld
stc
push
dec
adc
and
push
sti
push
push
push
stos
pop
dec
mov
cmp
mov
mov
jb
pop
dec
notb
aaa
add
mov
sub
push
inc
mov
jne
xchg
mov
subl
insb
xor
mov
add
and
fdivrp
orl
jne
lock
in
cld
inc
xchg
jmp
inc
xchg
xor
stos
aas
stos
adc
pop
lcall
add
cmp
fsubs
dec
adc
shll
dec
xchg
js
pop
dec
bound
not
mov
pop
bound
sti
add
lods
sbb
mov
clc
call
adc
xor
mov
sub
in
hlt
shlb
ret
stos
cmp
sub
cmpsb
dec
add
add
mov
sbb
push
call
call
and
xor
cwtl
sub
popf
repnz
shrl
in
mov
lcall
das
xchg
mov
mov
mov
or
inc
insl
ss
int
add
shlb
es
add
fcompl
xlat
imul
sbb
cmp
out
mov
inc
stos
repz
and
rcrl
jle
out
aas
mov
in
shrl
mov
push
filds
scas
in
pop
jecxz
jo
lret
aaa
jecxz
push
aam
mov
mov
jb
nop
xchg
sub
push
nop
push
daa
fdivrl
dec
and
stc
push
xor
push
lds
shrb
andb
xor
outsb
into
push
repz
sub
stc
aam
add
mov
mov
fistl
pushf
jns
inc
pushf
fst
mov
mov
stc
sub
add
sbb
and
push
sbb
and
sti
mov
mov
mov
stos
and
mov
fwait
loopne
inc
xacquire
cmp
int3
scas
add
leave
cwtl
jns
xchg
ficomps
xchg
aad
jo
and
jecxz
out
push
sub
in
xor
push
mov
stos
and
sbb
out
in
popf
aad
adc
xor
xchg
divl
xchg
pop
cltd
lods
jbe
cmp
jo
js
mov
cmp
pop
push
pcmpgtb
and
adc
push
pop
jnp
sbb
mov
cmc
adc
mov
sbb
and
push
loop
cmpsl
out
and
cmp
mov
and
js
ret
push
fildll
cmp
sbbb
imull
dec
int3
cmp
or
and
push
sarl
sub
in
sub
pushl
mov
out
outsb
cmp
jmp
repnz
ret
cmp
inc
ss
aas
mov
sbb
mov
pusha
pop
jp
mov
loopne
inc
mov
insl
jbe
mov
js
push
jo
ret
rcl
call
cli
xchg
mov
fmull
lea
bound
arpl
insb
or
iret
lret
lods
sub
pop
add
outsl
xbegin
jge
mov
aaa
fbstp
xchg
xchg
outsl
mov
add
cmpl
push
std
ss
jp
inc
mov
xlat
movhps
je
aaa
or
cltd
lahf
gs
sub
dec
mov
mov
iret
in
cmp
mov
jno
sub
mov
lcall
rol
aam
xor
lock
mov
lock
test
push
ljmp
mov
dec
popf
mov
in
or
in
push
lea
into
mov
mov
imul
fcmovbe
sub
lea
pop
outsl
fidivrs
sbb
add
out
leave
mov
icebp
sub
inc
adc
sbb
arpl
or
div
xor
and
adc
mov
out
fcomps
out
jl
jnp
jne
lods
xchg
xor
addr16
fildl
mov
cmpsl
mov
in
fs
and
xchg
xor
or
movsl
push
gs
gs
mov
imul
addr16
cmp
cmp
sub
or
dec
loop
push
and
testb
cld
pop
pop
jmp
out
pusha
int
call
dec
movb
cltd
repnz
pop
mov
sti
int
test
imul
xchg
pop
iret
and
jp
dec
movsl
lock
sub
out
cmp
inc
mov
add
mov
int3
lret
imul
test
fsubrs
adcb
jnp
testb
ret
test
ror
sbb
leave
shlb
pop
stos
lret
sbb
das
jbe
xor
push
mov
popf
or
int3
jecxz
sub
adc
imull
stos
jae
jge
sub
cmp
movsl
cmp
xor
cmp
pop
rclb
xor
cmp
adcl
lret
jp
xlat
cmp
mov
dec
cmc
je
mov
mov
mov
cli
cli
ret
insl
xor
mov
cmpsb
stos
or
jb
pusha
fld1
push
cmp
pusha
cmp
and
std
mov
aad
lret
pop
nop
mov
inc
scas
adc
pop
rclb
and
push
xor
mov
cwtl
enter
cld
pop
cmc
cmpsb
mov
adc
subb
mov
loope
jnp
xchg
inc
push
repz
sub
mov
andl
fdivs
cwtl
push
ss
push
mov
add
push
pop
sbb
pop
add
out
int
and
pusha
data16
jge
sub
and
cmp
fmull
or
xchg
shr
pop
jl
mov
scas
cmp
fwait
arpl
lea
mov
mov
cmp
insb
imul
es
and
inc
aas
jne
lock
jg
inc
and
out
int
jle
ljmp
add
lea
call
mov
ret
sbb
nop
data16
sub
test
fstl
iret
decb
mov
jecxz
lock
xor
mov
dec
xor
cmc
lock
fstpl
arpl
jae
jae
jno
pop
sbb
pop
xchg
cmp
adc
repz
cwtl
loopne
dec
pop
loopne
sbb
jne
dec
inc
outsl
sbb
movsb
sbbb
or
sbb
xchg
cmp
aaa
repnz
vucomiss
jne
push
xchg
popa
mov
jb
icebp
mov
clc
leave
cwtl
xchg
fisttpll
andb
scas
sub
xchg
sbb
rolb
fwait
iret
aam
cmp
scas
aas
cmp
jno
out
in
sub
pop
lea
cmp
xchg
sbb
xor
and
sbbb
out
and
jo
insl
jne
dec
addr16
dec
adc
pop
inc
aad
rcl
daa
cltd
add
dec
pop
repz
push
sub
cmp
mov
daa
add
mov
mov
les
xor
bound
push
repz
incb
lods
cmpsl
or
jge
pop
mov
jb
cli
arpl
add
and
test
push
cltd
in
push
outsl
cmp
sub
add
mov
popf
inc
into
clc
aaa
mov
nop
iret
stos
jne
int3
icebp
push
sbb
pop
inc
insb
or
lcall
repnz
jmp
push
xchg
xchg
and
subl
sti
mov
cmp
xchg
ret
push
sti
jp
adc
inc
jg
or
icebp
jae
jnp
sub
rcrb
cli
xor
push
lods
jnp
adc
jae
add
and
pop
push
jle
push
scas
cmp
lret
clc
inc
imul
addb
mov
mov
cmp
sti
cmp
rcll
dec
mov
jnp
inc
jge
inc
cwtl
test
pop
mov
push
jle
fsub
fdivrs
sahf
test
fadd
or
and
mov
cmp
dec
leave
cmpsb
jle
scas
jae
arpl
jg
and
lret
fistpl
jbe
aaa
mov
or
and
test
mov
inc
out
or
lods
push
mov
gs
push
inc
jle
adcb
test
sbb
cmp
jge
sub
faddl
sub
mov
rcrb
xchg
mov
dec
adc
decb
jae
sbb
enter
movsb
shrl
js
nop
and
mov
icebp
and
repnz
mov
repnz
lods
call
das
pop
jecxz
dec
lods
jnp
xorb
sbb
sub
and
lret
and
scas
jne
outsl
jmp
fucomi
mov
inc
inc
out
push
sub
xor
and
inc
push
out
inc
or
out
repnz
enter
test
mov
sub
daa
cmp
std
leave
ds
jo
iret
xorl
sub
add
pusha
es
jns
adc
sbb
cld
dec
into
xor
pop
jle
in
dec
push
lods
arpl
fidivrl
das
cmp
mov
mov
cmpsl
cmp
fsubrl
jmp
xchg
mov
push
pop
sub
mov
sub
adc
inc
mov
es
lds
add
in
repnz
mov
pusha
pop
ss
mov
cmpl
std
mov
andl
testl
addb
mov
mov
orb
xchg
add
pusha
adcb
movsb
dec
icebp
in
mov
xchg
pop
pop
jno
pop
out
push
mov
mov
loop
pop
or
adc
sti
xchg
inc
mov
lcall
aas
xchg
in
inc
in
dec
cli
mov
stos
movsb
xor
test
adcl
imul
das
xchg
dec
mov
dec
and
fwait
jl
arpl
dec
clc
jecxz
loopne
mov
pop
lock
add
mov
jo
lods
aas
not
mov
sbb
push
lcall
push
mov
add
push
cmp
sub
sbb
or
dec
dec
mov
orb
mov
or
int
lcall
ss
in
icebp
push
mov
lret
mov
in
pop
out
jle
ljmp
cmpl
js
mov
mov
lret
xor
add
mov
jge
mov
or
rcrb
cmp
cli
push
xor
out
add
mov
xor
sbb
jnp
jp
movsb
mov
pusha
mov
cmpsb
xchg
sbb
cmp
inc
xchg
gs
and
popa
xlat
or
mov
int3
push
das
leave
lds
pop
cmp
jp
and
push
stos
fwait
jo
mov
lret
fwait
push
adc
dec
jae
jmp
enter
mov
mov
adc
mov
mov
add
pusha
push
mov
xchg
sti
cmp
rcrl
leave
or
addr16
stc
ss
inc
pusha
xor
daa
cmp
mov
nop
pop
and
dec
inc
push
mov
insl
pusha
sbb
in
and
mov
xlat
loope
adc
cmc
pushf
cmp
ficoms
lahf
sub
in
xchg
jmp
iret
xchg
mov
cmp
dec
cmpb
xchg
in
icebp
cs
cltd
mov
test
xor
std
cmp
mov
mov
and
jp
ds
inc
cmc
xor
movsb
rolb
fdivrs
out
pop
fcmovu
xchg
mov
fbld
mov
sti
test
inc
mov
inc
movsl
in
push
imul
mov
adc
arpl
loope
and
cmpb
jle
es
sbb
filds
inc
movb
adc
je
outsl
jl
arpl
cmp
jbe
fstp
sbb
aad
and
popf
sub
xor
es
jns
jmp
shrl
test
pop
inc
or
mov
in
push
xchg
into
xchg
xchg
adc
stc
mov
je
or
sub
filds
mov
sahf
ret
testl
ss
daa
push
push
mov
in
push
cmp
and
mov
adc
gs
jl
inc
repz
xchg
ljmp
cld
sti
cmp
or
inc
jb
or
xchg
jecxz
mov
rorb
leave
aam
test
xor
ss
cmp
xchg
in
add
call
jle
jne
insl
imul
fcoms
or
insb
cmp
sub
jg
scas
icebp
mov
daa
scas
or
arpl
jns
ficomps
nop
rorl
mov
xchg
adc
jg
repnz
les
aas
inc
popa
daa
hlt
cld
in
mov
or
xchg
movsb
xchg
cwtl
or
sbb
inc
fldcw
outsl
and
sub
in
mov
add
xor
insb
call
add
imul
shrb
xchg
iret
pop
cwtl
pop
cltd
je
push
div
mov
push
in
xchg
fists
js
or
pushf
xchg
lcall
xchg
cs
add
mov
sbb
movsl
pop
ret
clc
mov
push
repz
sbb
jecxz
jnp
mov
adc
mov
ret
jge
inc
cli
push
or
lret
imul
pop
xor
lcall
mov
rcl
dec
push
shl
and
add
fisubs
adc
dec
xor
jge
dec
insl
adc
cs
sub
shll
divl
ret
imul
pop
stos
mov
dec
loopne
lea
inc
add
fidivl
xchg
jp
mov
or
loop
pop
dec
push
mov
sti
mov
scas
lahf
sbb
dec
xchg
fldenv
jbe
call
jecxz
mov
pop
cmp
cli
outsb
mov
test
lahf
xor
xor
xor
or
out
pop
jae
jb
lahf
mov
xchg
rcrb
add
pop
ret
xorb
fucom
pushf
and
pop
movb
outsb
orl
sbb
inc
or
inc
xchg
cmpsb
stc
xchg
in
cmpsb
movsl
fiaddl
xor
into
and
test
pushf
xorb
pushf
mov
push
or
in
xchg
xor
add
sbb
and
xor
cld
call
add
inc
mov
cs
adc
jbe
jg
inc
ljmp
or
stos
ss
xchg
xchg
addr16
in
mov
lret
add
and
ljmp
inc
das
pop
push
pop
jmp
push
loop
imul
xchg
aam
fistl
bound
lcall
out
or
xchg
adc
mov
pop
std
fwait
sti
push
in
sub
daa
xlat
and
insl
movsb
or
sbb
cwtl
ret
add
iret
xor
mov
lods
sbb
aas
js
adc
dec
stc
pop
add
arpl
adc
aas
sbbb
jp
lret
pop
xchg
je
psrlw
cmp
xchg
pusha
mov
jnp
repz
int3
sarl
test
aaa
pusha
cmp
xor
sub
test
add
mov
xchg
and
xor
insb
scas
int
and
addr16
in
hlt
cld
out
sbb
cmp
mov
cli
cmp
jno
and
mov
xchg
dec
shlb
scas
lret
xchg
mulb
rol
into
pop
push
movsl
mov
adcl
jle
dec
inc
push
les
pop
pop
lcall
mov
adc
fwait
sub
sti
sbb
inc
and
xor
ja
xchg
inc
or
jp
aas
dec
das
in
cmpsb
cmpsl
jmp
aas
iret
repnz
mov
cli
pushw
mov
push
loope
sbb
xchg
mov
int
addr16
lock
jp
ret
cmpb
int
mov
rcll
aas
jecxz
xor
xorb
rcll
sbb
fidivs
mov
xchg
jp
fs
sbb
mov
movsl
jbe
js
cmp
icebp
hlt
shll
jmp
cwtl
idivb
cmp
mov
mov
clc
faddl
jmp
dec
testl
mov
addl
aad
mov
cli
adc
fisttps
sub
and
push
cmc
dec
pop
aas
xor
jb
sub
cmp
lea
call
push
xchg
add
cld
fcmove
pop
xchg
lock
out
mov
jbe
add
aas
icebp
pop
xor
sub
add
jmp
push
and
fidivrs
loop
out
cli
filds
rcll
out
movsb
in
iret
idivb
je
test
sbb
popf
ljmp
or
aas
jnp
test
test
sahf
cwtl
pop
test
fstpl
or
add
pop
loopne
cld
cmp
fisubrs
dec
inc
sbb
dec
mov
ds
add
and
jl
push
xor
js
imul
int
dec
fcmovu
je
jo
jo
js
sub
xchg
jg
fucom
lods
sti
roll
cmp
test
push
lods
xchg
ret
cld
subl
aad
pop
shl
ret
mov
mov
cmp
cli
addr16
scas
fs
xchg
mov
movsl
jb
cmp
cs
out
push
jl
push
pop
aad
sbb
inc
bound
mov
fldl
cld
or
jno
call
or
cmp
sahf
orb
stos
jb
into
lcall
adcl
call
cmp
outsl
cmc
cs
mov
int
andl
pop
std
mov
sbb
loope
ret
fs
rcll
jo
int3
mov
insb
mov
sbb
aad
scas
lods
jg
xchg
cmpsb
pop
adc
repz
into
dec
adc
pusha
xchg
push
fidivrl
ds
in
xchg
jle
xor
fcompl
imul
dec
gs
movd
cmp
jle
mov
sub
pushf
lahf
mov
add
xchg
outsl
fs
jp
shl
es
and
sub
dec
test
in
and
mov
xlat
or
and
mov
fwait
xor
and
add
xor
in
mov
and
or
fsubl
rorl
pushf
into
inc
add
addr16
or
rcl
mov
mov
sbb
imul
or
and
fbld
inc
std
pop
lret
cltd
js
scas
es
jmp
imul
xor
imulb
jb
pop
les
pop
aad
xlat
push
cltd
mov
icebp
fidivs
xchg
mov
inc
loope
push
cli
inc
in
mov
mov
mov
add
cmpsb
pop
out
loopne
repz
popf
pusha
sub
int
mov
add
mov
jg
ja
nop
cwtl
adc
push
and
mov
pop
rcll
xor
loopne
add
lock
jge
add
lahf
and
sbb
push
xchg
lret
cmpl
mov
scas
mov
or
dec
pop
push
inc
push
notb
es
or
movsb
xchg
sti
inc
sti
inc
push
sti
pop
call
rcll
frstor
in
insb
jmp
push
ficoml
mov
cmp
jne
jnp
fists
xchg
pushf
je
popa
add
outsl
xor
adc
movsb
adcl
leave
jb
jns
mov
mov
clc
loopne
xor
insb
push
scas
sbb
pop
inc
in
adc
mov
inc
test
stos
fnsave
jbe
jg
sub
push
mov
int3
jns
aaa
and
loop
inc
push
test
cmp
mov
jb
jmp
mov
xchg
stc
jo
in
pop
add
jbe
popf
insl
mov
lcall
mov
adc
cmp
mov
jns
push
shlb
leave
mov
fnstsw
sub
and
std
pop
adcb
in
test
mov
in
dec
xor
or
outsl
daa
gs
in
jae
imul
or
test
xchg
iret
dec
jnp
mov
stos
pop
jecxz
push
add
mov
sbb
mov
or
push
rorb
cmc
inc
lds
and
popf
push
sbb
xchg
lret
cmp
jb
add
out
ret
mov
cli
xchg
xor
inc
ret
imul
xchg
shl
ja
std
pop
leave
daa
mov
shl
and
or
pop
lcall
inc
test
or
xchg
xor
inc
dec
or
mov
movsb
std
sbb
sbb
movnti
jo
out
mov
mov
jo
cmp
mov
daa
sahf
mov
sbb
jmp
jmp
add
lret
out
loopne
mov
jp
lcall
mov
push
mov
repnz
push
push
mov
test
test
lcall
jle
mov
adc
shrb
xchg
xor
sahf
push
std
lahf
popf
pushf
sti
sub
mov
outsl
fs
lods
cwtl
push
test
shll
jbe
xor
pop
repnz
xor
repz
cmp
adc
push
nop
shlb
scas
jmp
fisubs
xor
arpl
fstp
or
aaa
jmp
test
cmp
lcall
pop
jnp
inc
dec
add
aas
cmp
mov
rcrb
cmp
mov
call
into
xor
xchg
lret
fs
cmc
sub
sar
xchg
and
hlt
sbb
imul
cwtl
mov
std
pusha
shlb
lret
push
jle
lret
jb
push
jp
add
idiv
ss
scas
stos
add
rorl
jge
lcall
insb
adcb
cmp
mov
sub
popa
clc
int
lret
test
push
and
push
push
and
push
mov
jle
mov
push
imul
pop
or
mov
pop
dec
push
subb
sbb
mov
jno
xchg
add
rcll
rcr
pop
cli
inc
idiv
jae
repnz
test
add
push
sbb
jmp
pop
jo
jne
sti
sbb
jp
int
pop
stos
nop
mulb
inc
cld
imul
aam
mov
cmc
in
pop
mov
rcrl
push
lock
xchg
inc
jb
loop
pop
push
fsubs
dec
mov
jae
inc
pop
sbb
dec
fcmovnbe
int3
dec
add
popf
push
cmp
popa
mov
mov
int
insl
mov
aad
pop
sub
sub
cmpsl
ljmp
or
xor
add
mov
int
sub
popf
mov
cmp
imul
outsl
mov
adc
clc
or
sti
pop
mov
mov
mov
sbb
imul
test
dec
dec
mov
cmpsl
sbb
cmp
aas
xchg
and
out
mov
and
aad
push
jns
iret
andl
lods
add
shl
jg
out
jmp
fsubl
das
pushf
aaa
loopne
jg
cmp
sub
adc
jecxz,pt
add
xor
fs
and
add
inc
xor
mov
or
mov
mov
ja
adc
dec
mov
mov
push
mov
rorl
fidivl
xchg
xor
cmp
imul
push
mov
test
pop
mov
cli
lea
inc
mov
mov
icebp
fdivs
xor
in
insb
lea
movsl
je
divb
dec
mov
add
test
mov
out
jb
inc
sub
mov
inc
and
aam
lds
inc
xor
pop
aam
scas
js
out
sub
not
dec
push
sub
xor
iret
jno
clc
fidivrl
rol
sbb
cmp
dec
stos
das
mov
test
clc
divl
aad
push
xchg
jmp
pop
jmp
sub
gs
push
jl
or
pop
repnz
mov
cmp
xchg
sahf
xchg
aaa
xchg
mov
in
push
out
add
fbstp
ja
enter
repz
mov
jo
mov
cmpsb
mov
xor
pop
and
add
add
sub
xchg
push
lret
push
jl
sub
or
test
jecxz
add
jnp
push
popf
test
stos
pushf
push
jo
lahf
test
add
mov
sbb
loopne
dec
and
fstpt
fistps
xchg
pop
sti
push
repz
cmp
mov
cmpsb
mov
aam
cmp
sub
xor
xor
and
sbb
mov
lret
fistpll
loope
outsl
and
mov
pop
mov
fs
das
mov
sbb
push
aaa
jb
cmpsb
jmp
adc
ret
sahf
cli
or
add
notb
dec
aaa
mov
cmpsb
inc
popf
cmp
xlat
test
push
xlat
outsl
add
jb
sahf
and
ret
xchg
enter
imul
dec
push
cmp
push
sbb
hlt
enter
mov
dec
add
stos
push
daa
or
pop
xchg
pop
cmp
or
lds
mov
aad
sub
adc
mov
and
icebp
les
scas
mov
pop
sub
sar
out
popa
call
xchg
dec
aam
mov
out
xchg
popf
xor
push
mov
test
ljmp
or
dec
fcompl
xchg
jl
pushf
dec
rcrl
outsl
and
in
icebp
test
lahf
push
ds
cmp
sub
push
or
xor
es
dec
arpl
pusha
sbb
fldenv
jb
xor
imul
mov
inc
push
sbb
jo
mov
adc
es
daa
mov
or
daa
fcomip
add
mov
cmc
cmpl
mov
adc
outsl
mov
xor
daa
and
fcoms
cmc
push
cmp
scas
or
ret
arpl
push
mov
mov
scas
sub
cmc
lods
fadds
push
loopne
push
popa
pop
push
cmp
imul
xorb
jb
cli
mov
pop
inc
mov
push
or
jnp
out
jns
sbb
pop
pop
clc
or
cmpsl
out
lcall
xlat
cmp
or
sbb
jg
dec
movsl
fdivrl
fucomp
mov
push
leave
daa
push
je
jp
jp
adc
lcall
push
leave
mov
fwait
push
test
xor
sahf
cmpsb
mov
or
leave
jbe
scas
js
popa
mov
insb
mov
movsb
lret
inc
xlat
btc
pop
cmp
inc
adc
push
mov
lcall
push
lahf
shll
dec
jo
xchg
loop
mov
or
popa
lock
cmpsl
jmp
lcall
shlb
add
mov
les
into
cs
pop
adc
push
cli
inc
inc
adc
daa
xor
and
pop
jb
inc
or
rol
xchg
mov
xchg
sbb
or
sahf
xlat
test
jnp
and
mov
inc
mov
cmp
iret
roll
add
daa
xchg
mov
leave
sti
scas
movsl
fildll
daa
scas
push
insb
ffree
into
addr16
pop
pusha
idiv
outsb
rorb
sbb
mov
adc
jg
xor
rcrl
movb
ds
punpckhwd
in
rorl
push
mov
or
insb
leave
pop
cs
shlb
cmpsl
insl
outsl
cmp
jne
ljmp
out
push
push
inc
aam
xchg
push
test
std
repz
mov
cli
adc
jo
pop
sbb
popa
mov
and
or
aas
push
add
aas
imul
out
xor
mov
sub
test
xlat
or
pop
mov
dec
leave
lahf
in
ficoms
push
aas
insl
dec
push
ja
lahf
into
cmp
mov
add
push
jp
sahf
push
aaa
cltd
dec
insl
push
xrelease
test
inc
popa
push
stos
rcrb
movsb
test
sbb
xor
mov
mov
gs
movsl
test
xor
call
adc
cmp
lds
sbb
arpl
scas
cmp
es
mov
in
push
jb
lret
repz
adcb
xlat
xchg
aad
shld
sub
inc
add
cmc
faddp
xor
stos
jbe
daa
test
cmp
mov
ret
push
inc
mov
push
cmp
mov
sbb
test
push
insb
cmp
movsl
scas
pop
cltd
sub
shll
pop
or
pop
sti
cmp
cmp
cld
dec
push
movsl
test
mov
mov
pop
out
dec
jg
icebp
fildll
xchg
hlt
iret
negb
mov
fdivs
push
add
es
int3
xchg
sub
and
lds
sub
int
sahf
push
repz
xlat
mov
xor
repz
sub
xchg
push
push
dec
dec
inc
xchg
dec
in
and
ss
aad
push
aas
insl
add
xchg
xchg
jecxz
pushf
shlb
dec
loope
fwait
jmp
negl
add
pusha
imul
imul
add
jl
push
push
xor
repz
subb
sub
inc
xchg
jae
cmp
popf
shlb
dec
in
mov
lcall
cmpsl
inc
cmc
psubb
xor
fcmovu
push
xor
pop
inc
xchg
sbb
adc
ror
mov
test
sub
inc
sahf
pop
addb
pop
mov
sub
push
sub
sti
js
mov
sbb
lea
xor
add
jnp
push
adc
add
and
sub
pop
decl
in
jl
jbe
aam
dec
cltd
jmp
call
out
mov
mov
push
scas
bound
push
dec
mov
cmpsl
lcall
scas
xchg
ljmp
ss
sub
mov
jae
jo
push
dec
mov
dec
jne
cld
jp
decb
lock
loopne
mov
cmpsl
xlat
xchg
out
loop
repz
jecxz
inc
adc
add
imul
repz
rorb
inc
dec
leave
in
cld
push
enter
lods
outsb
add
es
or
or
scas
ficomps
icebp
leave
sub
add
addb
mov
sub
hlt
pop
mov
scas
nop
xchg
sbb
pop
cs
or
jne
nop
enter
pusha
pop
jg
push
cwtl
pop
dec
dec
in
cmc
push
je
into
aad
arpl
adc
outsb
jnp
mov
and
mov
adc
dec
dec
test
xlat
sub
ficompl
dec
cs
and
insl
or
lahf
bound
or
in
ret
xchg
dec
in
sbb
adc
or
push
mov
add
inc
mov
jbe
negl
xor
mov
into
adc
push
and
add
xchg
xchg
pop
in
ret
jge
ljmp
call
dec
ficoms
enter
hlt
xchg
jmp
shlb
aam
sbb
je
adc
ret
jo
xor
jle
mov
and
clc
mov
sbbb
mov
adc
aam
arpl
std
movsb
cltd
hlt
movsb
icebp
cld
sub
mov
imul
mov
jns
jmp
jmp
ret
mov
push
or
mov
cmp
mov
fucomi
out
push
pop
mov
mov
cs
fldl2e
fsubp
jp
inc
sub
xlat
movl
iret
int3
pop
lcall
mov
or
popa
dec
fs
out
xor
push
jb
pop
cmp
xorl
test
lock
popa
into
je
ret
in
icebp
rclb
insl
jecxz
mov
cmp
out
aas
mov
push
cwtl
pop
loope
cli
xchg
fsubrl
push
push
inc
push
push
cmpsl
fmuls
mov
sub
lds
imul
int
adcb
popf
push
rcrl
lcall
adc
push
aam
mov
cmp
adc
rcrl
lock
fiaddl
mov
imul
out
jae
les
jle
sub
in
lods
push
stos
dec
fildll
add
rorb
mov
mov
in
jns,pt
addb
ja
enter
in
dec
jl
mov
sbb
iret
lret
int3
iret
in
sub
stc
pushf
cmp
test
jne
sbb
cs
xchg
stos
or
out
mov
loopne
popa
test
aam
iret
rcrb
nop
loop
mov
test
sahf
stos
add
cli
sbb
rorl
out
and
jo
push
clc
pop
adc
sub
gs
jns
xor
aad
fwait
xchg
pop
addb
xor
outsb
push
dec
jmp
mov
mov
call
mov
in
insb
ret
sub
jo
xchg
ficoms
out
cmp
out
push
inc
out
lret
adc
xor
push
cltd
mov
cmp
and
subb
cmp
cmp
or
xchg
xchg
mov
sbbb
adc
jb
cmpsl
inc
clc
mov
push
pop
jbe
adc
test
daa
loope
js
xchg
cltd
popf
cmp
cltd
insb
adc
repz
fstpt
push
iret
xchg
sbb
adc
scas
jle
or
cmp
jbe
mov
bound
push
mov
bound
jae
xlat
inc
xchg
les
or
ja
aad
arpl
mov
mov
xor
sub
andb
adc
cltd
dec
jmp
cltd
out
mov
sub
in
dec
push
fs
fs
sbb
icebp
fs
cmp
loopne
outsb
xchg
out
dec
push
mov
aas
push
ljmp
mov
or
push
int3
mov
xchg
mulb
mov
aad
jno
mov
ficompl
mov
jp
mov
pushf
mov
loope
xchg
sub
data16
popa
shrb
mov
adc
fcoms
and
sbb
adc
and
lods
dec
mov
cmp
xchg
in
sbb
xchg
stc
sarb
in
adc
jecxz
lock
fwait
xchg
jp
jecxz
mov
inc
std
mov
out
jne
pop
dec
lea
cli
inc
jl
sbb
ret
pop
mov
mov
and
dec
hlt
stos
ds
daa
mov
dec
insl
and
aad
inc
adc
push
daa
or
adcl
fs
xchg
sub
jnp
xor
push
jbe
inc
je
ja
or
dec
sbb
pop
push
mov
and
outsl
addr16
out
adc
fsubs
mov
iret
mov
jno
test
or
pop
das
insb
cltd
mov
nop
inc
out
cli
push
jmp
lcall
mov
mov
sarb
push
sub
and
popf
scas
adc
adc
inc
dec
xchg
lock
adc
sub
clc
dec
out
add
insb
mov
lea
mov
inc
in
repz
pop
sbb
pop
xchg
les
in
loope
push
lods
pusha
data16
or
nop
out
or
stos
cmp
xchg
enter
pop
push
clc
outsb
and
cmp
push
out
jne
push
mov
int
xor
pop
dec
or
sti
cmpsl
xor
add
fisubl
add
dec
pop
sbb
rclb
mov
jns
in
dec
popa
call
cwtl
add
aas
and
lcall
cld
xor
sub
push
test
cmp
sbb
into
lds
das
leave
or
adc
movsb
sbb
popa
daa
or
sbb
adc
cmc
cwtl
icebp
adc
or
in
imul
stos
fstps
cmp
mov
idivb
scas
pop
mov
addl
mov
test
adc
shrl
cmpsb
mov
call
inc
or
adc
jb
push
push
fwait
xchg
sti
pop
jmp
add
sub
test
sbb
jbe
inc
cmp
push
and
stos
xor
aaa
mov
cmpsb
testb
cmp
push
lock
adc
insb
add
test
mov
movsl
cmpsb
mov
xchg
adc
xchg
hlt
sub
or
aad
push
adc
inc
xchg
shll
jae
mov
lret
mov
cmp
lock
xchg
dec
xchg
fs
jno
shrb
jle
inc
pop
pop
pop
popf
leave
fcos
nop
insl
aam
dec
add
sbbb
xor
cmp
jb
xchg
ja
mov
repnz
mov
adc
out
mov
clc
lock
xor
mov
aam
xor
xchg
std
cmc
jge
outsl
xchg
out
lock
sti
fcomp
xor
jne
xor
into
cmc
add
loopne
mov
add
adc
pop
mov
sub
push
das
out
out
outsl
js
cmp
push
scas
xor
xchg
mov
fcoms
mov
and
inc
ret
or
pop
mov
dec
pop
out
mov
shrl
jae
mov
ss
push
and
cmp
test
jge
clc
pushf
frstor
dec
lods
nop
cmp
les
pop
mov
movsb
fs
mov
icebp
pusha
add
cmpsb
lods
add
sbb
mov
mov
fmuls
ret
test
push
pusha
inc
jmp
cwtl
loope
mov
mov
xchg
cmp
mov
imul
dec
out
xor
ret
sbb
clc
mov
xor
in
push
lock
clc
cmp
fcoms
test
vrcpss
or
mov
add
mov
xor
test
lret
xchg
insl
arpl
cmp
mov
mov
inc
ret
icebp
xor
pop
xor
cs
or
xlat
mov
pop
or
mov
push
insb
add
scas
arpl
hlt
and
xchg
stos
ficompl
pop
mov
sub
mov
push
pushl
xchg
mov
je
iret
jns
or
call
test
insl
lods
xor
sbb
out
scas
mov
push
mov
xchg
fcmovu
notl
test
pop
cmpsb
into
dec
push
push
ljmp
sbb
out
scas
dec
pop
mov
pop
sub
repnz
fimuls
das
int
add
in
jp
mov
inc
push
stc
shrb
pop
into
inc
and
or
cmp
sbb
popf
imul
pop
inc
or
inc
jb
adc
inc
inc
fwait
push
mov
in
shll
jge
lods
aas
mov
xor
push
push
sti
add
enter
or
mov
mov
sahf
mov
fistps
scas
cmp
popf
cmp
popf
rorl
mov
ror
hlt
add
mov
mov
out
fwait
aaa
in
sub
and
iret
in
sarb
mov
xchg
das
ftst
scas
insl
pop
inc
push
popa
pop
daa
dec
inc
ret
in
es
xchg
stc
cmpsl
jmp
mov
fistps
lahf
jmp
fwait
aaa
mov
sub
scas
sub
cmp
and
pop
in
jbe
adc
loope
pop
sbb
loopne
loop
insl
test
arpl
xchg
add
cmp
sub
in
loop
cmp
shlb
inc
cli
imul
inc
xor
je
inc
pop
push
inc
aaa
mov
sub
jae
adc
push
fldl
sbb
xrelease
add
mov
mov
mov
push
notb
add
xchg
sub
add
jns
add
mov
notl
or
popa
push
push
out
aaa
pop
loopne
ljmp
sti
shll
or
es
sub
mov
outsl
lock
xor
movsl
fldenv
add
popf
out
push
sub
sub
push
rcrb
mov
ret
lods
jne
dec
xchg
pop
mov
mov
aas
sub
or
jbe
data16
std
ds
shlb
mov
jns
fistpl
add
xchg
ljmp
mov
lock
sbb
sbb
repnz
sahf
fs
arpl
push
mov
mov
in
int3
inc
or
js
scas
sub
stc
dec
and
fidivrs
push
loop
imull
lea
fwait
jle
sbb
leave
les
xchg
mov
add
int
cmp
cmp
rcr
cmc
dec
cmpsb
and
push
jge
lret
xchg
or
mov
into
or
shll
pmaxsw
es
in
lahf
mov
sarl
xorb
xchg
in
addr16
nop
ret
or
jbe
jb
xor
or
and
xchg
push
fisubrl
cmp
in
rcrl
pop
adc
add
fld
test
and
insb
shl
loop
jb
movb
jbe
cmp
inc
mov
xchg
mov
mov
adc
inc
call
or
and
icebp
mov
jl
mov
xchg
loopne
jne
sti
outsl
subl
subb
addb
adc
mov
push
xchg
das
icebp
stos
cmp
cmp
fucomp
dec
push
push
repz
jbe
adc
inc
in
jo,pn
or
sbb
cmp
iret
mov
jp
insl
shr
jg
cltd
fimull
imul
out
test
pop
add
dec
cmp
xor
mov
repz
pop
cltd
sbb
subl
dec
sub
push
or
xchg
dec
xlat
adc
xchg
xchg
sub
stos
sahf
divb
xor
pusha
mov
lds
adc
inc
pop
mov
push
cmp
ljmp
imull
leave
insb
in
push
sub
pop
push
add
jp
add
xchg
push
rorb
adc
mov
adc
add
shrb
pop
mov
xchg
pop
aam
or
sbb
out
cmpsl
scas
push
or
xor
jmp
into
mov
pop
xor
loope
sbb
sub
push
and
xchg
test
jmp
mov
jbe
aam
sub
and
mov
or
or
sbb
mov
xor
out
inc
rcrl
cmc
nop
scas
je
jl
jne
jae
outsl
or
stos
sti
into
fwait
jbe
stc
repz
ss
insl
out
jno
out
in
mov
rolb
pop
xchg
fcomi
jnp
ret
insb
mov
inc
lock
push
dec
mov
es
loope
xor
mov
pop
fcomps
mov
int
call
push
xor
movsb
daa
sub
pop
ret
pushf
fistpl
inc
dec
lods
das
stos
test
out
inc
jns
adc
orb
flds
packssdw
fdivl
sbb
sub
addb
inc
and
je
fidivrs
dec
lods
imul
js
or
xor
arpl
lret
ret
stos
dec
mov
mov
xorb
or
lods
inc
push
sbb
pop
push
insl
adc
cwtl
imul
and
insl
out
test
stc
es
aad
cltd
jecxz
pop
cmp
lahf
daa
jne
mov
stos
ja
jp
xor
int
xchg
jg
js
inc
das
jecxz
shrb
push
add
lcall
call
xchg
pop
mov
aad
fidivs
insb
sub
test
jmp
or
mov
out
jb
leave
loop
loop
and
sub
pop
sbb
cld
pop
fidivl
aaa
lcall
add
push
out
or
fdivl
movsl
cmpsb
movsb
adcb
shl
dec
and
mov
and
aam
dec
mov
lods
pop
loopw
xchg
stos
add
jnp
or
mov
mov
mov
xor
xorl
scas
mov
icebp
inc
mov
aas
movsb
mov
mov
mov
sub
int3
inc
out
rolb
enter
stos
sahf
in
jecxz
std
sub
std
imul
popa
bnd
dec
jb
gs
pop
adc
xchg
xor
push
imul
outsb
cmpsl
push
jle
sahf
leave
in
out
mov
sub
out
loop
and
jb
ja
sub
and
jg
pop
rolb
mov
add
loopne
cmp
or
cmp
add
jle
xlat
mov
and
gs
lret
xor
loop
int
xorl
aaa
add
xchg
popf
mov
stc
jmp
and
in
jnp
sbb
test
pop
push
or
sbb
mov
aad
shll
xor
jno
sahf
inc
mov
jns
add
jmp
out
xchg
js
ja
mov
jbe
sbb
lods
mov
mov
jle
sbb
mov
sbb
xchg
hlt
andl
leave
outsb
dec
push
pushf
fsubl
and
adc
stos
int
in
std
je
adc
sub
mov
stos
daa
mov
and
icebp
subb
fcomp
jo
inc
mov
repz
shl
popa
push
call
stc
dec
test
and
jle
adc
in
inc
mov
pushf
outsl
pop
mov
cmp
dec
cmp
xchg
pop
cmpsb
sub
in
clc
push
lods
jle
ss
or
push
out
in
cmp
mov
sub
arpl
xchg
push
mov
sub
outsl
and
inc
pop
fidivl
lods
popa
cmp
call
sub
push
nop
daa
cld
shll
gs
test
fwait
mov
dec
in
scas
fxam
loop
call
mov
orl
adc
xor
pusha
ja
popa
add
xchg
sub
xchg
cld
rorl
mov
pop
sti
sub
cmp
xchg
sbb
cmp
cmp
dec
mov
icebp
call
out
adc
adc
inc
push
pop
movsl
pop
cmp
xor
jbe
rol
pop
mov
push
pop
jns
data16
cs
jg
fists
xchg
test
inc
stc
add
jg
adc
cmc
addr16
nop
pop
es
sbb
loop
mov
ret
les
or
adc
jae
cmpsb
dec
adcb
cli
push
lds
into
leave
sub
mov
cmp
popa
xor
repnz
xchg
lods
xchg
and
pop
ret
mul
jmp
test
shlb
enter
aad
ficompl
mov
pop
addl
jne
pop
pop
scas
add
out
or
mov
dec
ss
lahf
or
pop
push
jle
xor
stc
add
stos
add
add
std
loopne
or
cmpsl
sbb
xchg
adc
push
sbb
adc
into
nop
cs
roll
mov
mov
inc
adc
and
hlt
mov
xchg
ja
push
cmp
out
imul
popf
mov
inc
dec
mov
movsb
mov
xchg
jp
repz
adc
push
jb
sahf
mov
out
push
and
popa
dec
lods
mov
mov
sub
dec
mov
daa
inc
aad
int3
jge
test
sub
into
cmp
aas
adc
mov
inc
jbe
cmp
les
dec
xchg
pop
mov
xchg
mov
gs
sbb
push
mov
jge
dec
adc
in
sub
fdivrs
mov
push
test
out
dec
push
pusha
sbb
test
cmpsl
push
popa
rcll
scas
sbb
cmp
imul
scas
adc
xchg
adc
popa
loop
push
push
in
fisttpll
push
jmp
cmpsb
xor
or
mov
cmp
and
cmpsb
test
mov
insb
ja
dec
mov
and
in
gs
adc
cmp
or
mov
jmp
inc
sbb
dec
xchg
add
popa
mov
mov
ss
out
subl
popf
adc
mov
jnp
adc
jg
mov
xchg
mov
arpl
iret
mov
mull
jb
scas
lods
rcrb
clc
xchg
jnp
sub
mov
mov
mov
sbb
push
popa
insl
sub
fwait
xchg
lods
lret
push
push
jecxz
cmp
xchg
addr16
mov
rcrb
jge
sub
jg
dec
std
mov
push
filds
mov
aas
pop
lret
xchg
sub
mov
jb
aad
bound
aaa
adc
test
cld
mov
dec
or
adc
or
cmp
int
out
xor
xor
int
push
jge
mov
pusha
xor
lock
pop
push
pop
sti
lret
shlb
pop
dec
int
push
or
fs
ret
pop
or
leave
pop
xlat
mov
push
iret
mov
sub
jbe
adc
movsl
cld
inc
or
nop
daa
pop
mov
das
inc
pxor
push
stos
mov
hlt
pinsrw
shlb
shr
cmp
mov
mov
imul
adc
push
popa
xlat
repnz
adc
pop
mov
insl
sub
test
into
sub
loop
jbe
in
sbb
adc
dec
rol
cmc
js
adc
hlt
out
jo
add
push
movsb
pop
scas
std
ja
lea
fidivrs
push
xor
pop
mov
into
mov
sbb
mov
and
lea
mov
or
dec
rcrl
sbb
jbe
push
lock
mov
cli
clc
inc
mov
ficompl
sbb
fistpll
stc
sub
cmp
pop
aam
fstpt
mov
xchg
std
mov
fcomps
stc
add
push
sbb
lahf
mov
push
pushw
mov
pop
aad
imul
or
inc
or
loop
push
out
push
lahf
repz
dec
test
out
push
push
adc
mov
mov
dec
mov
imulb
into
fcmovb
cmp
pop
outsb
fwait
jg
out
test
cmpsl
cmp
xor
data16
jb
add
cld
pop
cltd
das
nop
sbb
cmpsb
jno
and
rcr
dec
jae
jo
je
sbb
sub
bound
mov
aaa
cli
xchg
in
iret
fs
pop
or
ds
cmp
add
and
xchg
jo
xor
movsb
xchg
bndldx
scas
jb
scas
arpl
mov
jae
test
int3
xchg
add
fcoml
int
jp
dec
xor
dec
shrl
dec
pop
lret
sbb
fldcw
and
in
cmp
mov
cwtl
add
mov
adc
scas
pop
dec
adcl
popf
mov
nop
fwait
mov
in
decl
movsb
mov
ret
fisubrs
dec
mov
sub
scas
inc
ss
mov
adc
pop
aam
or
mull
add
pop
in
dec
pop
mov
ja
dec
lret
leave
and
and
adc
stos
jne
jmp
dec
repnz
ja
daa
add
xor
push
rcrb
mov
jge
jbe
push
xor
mov
add
popf
mov
or
jnp
call
jae
mov
adc
rolb
arpl
xchg
mov
jne
cmp
inc
shlb
jg
int3
push
lds
mov
sub
jnp
cmp
dec
enter
ljmp
stos
shrb
stos
sub
call
shr
test
fisubs
jae
jg
jl
xor
sub
push
xor
outsl
insl
xor
jb
pop
scas
mov
jns
pop
movsb
incb
mov
push
or
add
test
jmp
lret
shll
fmull
dec
mov
repz
pusha
rep
and
jnp
ss
push
insb
xor
cmpsl
in
jbe
xchg
leave
dec
jmp
mov
mov
jb
test
sub
mov
fwait
adc
divl
ror
xchg
dec
ds
cmp
pushf
aad
mov
jmp
cmpl
add
sub
lock
push
xchg
inc
popa
pop
pusha
push
cmp
in
icebp
push
sbb
jo
push
xchg
inc
fs
into
adc
xor
jns
sub
mov
aaa
jp
sbb
and
popf
jno
xchg
and
hlt
aas
incb
cltd
dec
and
xchg
fisttps
inc
or
int
jbe
dec
dec
lret
push
popaw
enter
pop
jo
sti
inc
popf
mov
push
jne
xor
mov
or
and
adc
in
inc
cmp
test
aaa
test
loope
std
push
aam
test
mov
cld
inc
mov
lea
es
shll
sarb
aam
icebp
adc
lods
push
dec
loopne
and
frstor
mov
pusha
xchg
popf
mov
mov
jl
fs
xorb
inc
push
mov
xor
mov
aam
out
insb
mov
xchg
lock
ja
lea
ja
xlat
enter
dec
adc
adc
movsb
ret
mov
pushf
ja
lods
fdivs
pop
cmp
sbb
inc
xor
int
xchg
jmp
mov
and
popa
xchg
adc
in
sbb
shll
adc
add
add
fcoml
inc
ret
rcrl
push
aaa
addr16
jns
add
loop
adc
nop
ss
shrb
pusha
pop
shrb
xor
mov
leave
push
dec
stos
lods
add
nop
or
sub
test
lds
xchg
test
lret
fcmovu
inc
int
push
scas
lods
jecxz
andb
lcall
rcrb
mov
xor
xor
lods
mov
push
and
mov
mov
leave
mov
mov
fcoml
pop
stos
cmp
out
inc
jb
xor
mov
pop
insl
popfw
clc
dec
outsl
mov
jb
mov
bound
jnp
xchg
leave
nop
jnp
aaa
rol
ljmp
leave
sti
pop
xchg
icebp
push
stos
sbb
les
lds
sahf
in
daa
lds
cmp
sbb
pop
mov
cmpsl
pop
push
mov
movsb
int
mov
ljmp
ljmp
nop
mov
mov
out
and
in
aaa
push
bound
mov
mov
jecxz
mov
mov
pop
xor
xchg
push
mov
xlat
jbe
aaa
stos
int3
or
popa
andb
leave
push
sub
cmp
pushl
xchg
cmpsl
add
xor
out
jge
std
daa
mov
adc
adc
push
insb
sbb
lcall
adc
inc
adc
sbb
es
js
push
adc
shlb
and
cmp
xchg
lock
add
lods
mov
adc
daa
mov
mov
cmpsl
or
negl
mov
mov
rcrl
shl
into
push
cli
incb
bound
mov
cmp
xchg
mov
jae
sub
mov
cmp
pop
jne
xchg
and
add
shrl
lock
jns
inc
dec
int
mov
inc
mov
repnz
or
push
sbb
mov
std
inc
dec
or
cmpsb
pop
adc
or
fdiv
shl
mov
lea
shll
mov
jp
into
jne
xchg
les
inc
adc
inc
mov
lret
push
cld
pop
subb
mov
fsts
and
xlat
addr16
test
cs
push
and
inc
aas
scas
pushf
xchg
push
jl
out
cmpsb
xor
pop
jp
sbb
xchg
sub
mov
and
in
outsb
sub
lods
sub
ss
ret
roll
adc
jo
mov
dec
mov
xchg
jge
pop
cld
and
mov
mov
std
in
stos
inc
jae
out
lret
outsb
add
mov
xor
mov
xor
adc
lea
fadds
jmp
mov
push
out
aaa
xor
fwait
dec
dec
xor
pop
or
call
xchg
mov
mov
jae
in
ror
jecxz
repz
repz
arpl
addr16
out
add
repnz
insl
test
xchg
push
mov
xchg
cli
insb
hlt
dec
cwtl
ja
lahf
js
mov
jns
adc
push
mov
sbb
pop
aam
aad
sahf
pusha
lcall
mov
aam
jns
mov
fldl
xchg
xlat
and
out
inc
popf
pushf
or
nop
push
sti
jle
adc
pop
into
aas
inc
enter
sbb
mov
jae
xchg
and
aam
jecxz
call
cwtl
xchg
push
test
mov
xorb
mov
leave
mov
mulb
adc
aas
and
pop
dec
insb
and
ret
jo
iret
mov
xchg
jo
ljmp
mov
jmp
mov
cmp
xor
cld
scas
add
das
mov
std
or
lods
sbb
pop
cmp
xchg
sti
xchg
cmp
imul
xorl
mov
push
std
aaa
call
mov
clc
mov
and
testl
cmpsb
dec
cli
pop
dec
aaa
mov
jnp
xchg
sub
push
mov
lock
inc
out
xchg
dec
mov
mov
inc
cmc
outsb
cmp
mov
in
loop
jne
xor
out
popf
insb
cld
or
test
xchg
out
or
mov
jo
cmp
popa
jbe
pop
or
jg
cwtl
xchg
repz
je
mov
insl
mov
je
lcall
test
lcall
dec
lret
and
and
jmp
jmp
aad
push
fisubs
jnp
and
or
int3
repz
repz
xchg
subb
ds
std
popa
or
sub
sub
sub
pop
sbb
cmpb
xchg
roll
or
scas
xor
outsb
cmp
je
mov
movsb
repnz
add
push
adc
int3
sub
pop
or
mov
lea
xchg
bound
xor
pop
cmp
xchg
jge
mov
hlt
stc
pop
dec
scas
and
mov
stos
cmp
mov
mov
jne
push
sti
xlat
shrl
stos
fisubs
jmp
mov
bound
cmp
aas
bound
pop
jae
ds
in
ficomps
lahf
cltd
sahf
jbe
das
shlb
mov
jbe
inc
es
sbb
xlat
inc
cmc
dec
ja
push
or
ja
imul
out
movsb
in
jmp
psubusb
push
mov
in
fstl
or
xor
movsl
pushf
dec
xchg
sub
arpl
pop
pop
dec
cmp
out
wbinvd
inc
add
sti
adc
mov
int
incb
and
dec
xor
dec
ret
pop
daa
loop
mov
orl
cmp
in
cmp
xor
cmp
ljmp
inc
rolb
pop
stc
pop
jmp
test
les
scas
in
jge
jbe
inc
jge
sbb
add
cltd
outsb
pop
mov
inc
out
enter
push
popa
mov
std
pop
mov
xchg
insb
and
fcmovb
inc
repnz
jne
mov
or
bound
roll
mov
inc
cmpsb
xchg
arpl
cmp
push
add
hlt
ljmp
ds
push
inc
loop
out
jmp
pop
push
cmpsb
add
cmpsl
pop
loop
cmp
js
xor
xlat
test
mov
int3
push
mov
pop
arpl
xor
xchg
mov
xchg
and
fistl
shrb
lret
aad
mov
insb
cmpsl
cld
dec
pop
aam
push
xor
das
flds
and
out
lock
incb
cmc
leave
repz
xor
aaa
scas
sbbb
mov
add
or
je
pop
rolb
inc
arpl
repz
int3
sbb
mov
pop
jl,pt
push
jmp
stc
std
pop
loop
sub
mov
addr16
or
lsl
cwtl
fidivrs
pop
js
pusha
adc
hlt
mov
xor
scas
jg
movsl
cltd
xlat
add
xor
xor
add
movsb
mov
cmp
stos
or
xor
cmp
sbb
or
out
mov
inc
pop
fstps
pusha
pop
jo
out
inc
sub
jp
sbb
jl
pop
test
mov
or
inc
dec
imul
shlb
into
out
dec
jnp
jno
push
add
movsb
aam
inc
jbe
push
and
jbe
push
lahf
mov
fstl
mov
mov
mov
pop
mov
adc
sahf
adc
mov
mov
shl
or
inc
aam
ja
push
inc
ficompl
inc
fs
xchg
jle
push
test
lret
sub
es
and
mov
jg
jno
or
mov
pop
lds
loopne
push
xorl
xchg
jg
jl
mov
dec
std
xor
add
dec
sub
push
push
cwtl
sub
xor
lock
call
sbb
jnp
jecxz
lds
jp
sbb
sbb
repnz
sub
cwtl
sbb
jb
add
adc
imul
outsl
std
add
mov
adc
xor
push
scas
ret
pop
mov
cmp
cld
aam
shlb
push
jle
or
int
xor
jns
lods
cltd
add
stos
cmpsb
call
repz
outsb
add
and
xchg
xchg
mov
or
add
cmpsb
xor
mov
movb
das
push
add
fwait
mov
gs
out
pop
mov
mov
and
pmulhuw
xchg
adc
aam
mov
ficoms
inc
sub
sbb
ds
stos
sarb
das
rcll
movsb
dec
test
inc
cwtl
sbb
aaa
sub
inc
push
sub
cmpsb
mov
arpl
cli
xor
es
sub
cwtl
dec
daa
out
mulw
outsl
cmp
adc
popf
inc
and
ss
lea
xor
hlt
xchg
add
mov
push
jle
imul
xor
add
jbe
inc
loop
mov
adc
sbb
imul
std
popl
sbb
addr16
outsl
sbb
dec
and
cmp
out
lods
mov
fwait
jp
jle
push
lods
adc
aaa
dec
xor
cwtl
push
add
lods
cmp
in
enter
adc
adc
pop
adc
mov
xor
or
pusha
lock
sbb
mov
or
imul
mov
mov
mov
rcrl
out
xchg
lcall
jmp
jnp
cs
out
dec
mov
dec
gs
sahf
mov
or
pop
adc
cmp
mov
lcall
bound
sub
sbb
xor
rorl
bound
fstps
shll
dec
sbb
push
add
cmp
clc
decl
fucomp
call
aaa
pushf
out
fidivs
sub
in
aaa
xor
dec
adc
push
incb
mov
popa
pop
mov
adc
out
mov
stos
inc
movsb
pop
xor
leave
add
mov
xchg
push
mov
push
push
xor
shlb
pop
test
in
cwtl
and
test
fisttps
inc
enter
test
xchg
mov
xchg
add
sbb
cld
es
int
pop
mov
sub
pop
jbe
mov
push
and
insb
fldenv
and
pop
test
ja
pop
sbb
scas
leave
pop
fcoms
cmp
jne
out
arpl
fldl
cld
jo
push
add
lock
out
arpl
dec
lock
inc
push
inc
xchg
pop
push
in
sub
fbld
cli
loope
push
testl
and
icebp
cltd
xor
add
test
xor
push
xor
push
icebp
lock
cwtl
and
xchg
mov
jle
inc
fwait
out
pushf
ja
sahf
push
clc
outsl
jbe
pop
mov
push
stos
jmp
pop
inc
es
xchg
aad
mov
add
xor
mov
cld
test
xor
gs
arpl
add
pop
lret
jp
sub
cmp
push
dec
xlat
cmp
dec
cli
sbb
cmpsl
jo
ss
sbbl
push
lret
int
mov
mov
lods
inc
out
out
sub
fwait
dec
mov
push
and
std
lock
cmp
jne
fistpl
in
mov
xchg
or
dec
and
push
and
fadds
adc
or
mov
adc
pop
je
into
sbb
pop
cmp
lods
jg
lods
aad
and
lret
push
mov
mov
mov
jo,pt
fidivrs
or
ret
inc
or
setp
test
dec
test
mov
and
fwait
mov
je
andl
lahf
cmpsl
jl
fsubrl
stos
int
mov
sub
sbb
pop
and
add
cs
add
lret
flds
xchg
dec
cmp
mov
inc
push
jle
movsl
lret
bound
mov
stos
daa
popf
mov
add
and
je
and
adc
pop
scas
mov
dec
mov
pushf
js
adc
dec
mulb
jb
aaa
push
aam
jns
mov
pop
flds
rorb
out
add
xchg
iret
sbb
sub
in
lods
shl
dec
imul
outsb
test
xchg
fincstp
nop
mov
sbb
fidivs
out
push
inc
movsb
daa
jb
or
adc
mov
cmpsb
in
jbe
xchg
lods
pop
inc
vfrczss
sub
loop
addb
je
mov
mov
mov
movsb
mov
insb
cmp
adc
aam
data16
in
push
and
adc
leave
aas
insb
mov
jecxz
js
inc
test
mov
mov
mov
sbb
ret
cli
mov
int3
mov
test
xchg
pop
push
sub
xor
frstor
cmpsl
cmovnp
cltd
imul
cmp
dec
pop
push
clc
ljmp
add
int
inc
aad
push
in
dec
scas
adcb
fistpll
mov
cld
std
notb
shlb
jecxz
test
int
and
and
or
and
pop
sub
mov
xor
or
bound
jbe
push
jns
out
test
adc
add
insl
add
idiv
add
ret
pop
mov
js
push
in
push
and
or
mov
xor
lock
lods
cmp
jle
dec
push
xor
es
sub
pushf
in
imul
nop
xchg
rcll
aad
setnp
jnp
mov
data16
hlt
ds
pop
cmpsb
mov
push
sub
out
hlt
pusha
sbbl
dec
lahf
clc
mov
out
ffreep
movl
iret
outsl
cwtl
mov
andb
lock
and
xlat
nop
pop
adc
lds
add
jecxz
jns
jge
cld
mov
divb
lock
mov
cmp
dec
out
adc
mov
sbb
or
jecxz
aas
mov
or
mov
or
stc
pop
dec
call
repnz
fucom
xlat
jge
mov
mov
sub
sar
out
cli
xor
xchg
mov
xor
push
push
ficoml
push
add
cmc
loope
mov
stc
cmp
fldl
nop
xlat
mov
testl
jl
push
inc
jae
push
fwait
ret
xchg
pop
clc
inc
xchg
or
xchg
push
es
mov
xchg
out
dec
cmp
jbe
mov
or
shl
adc
xor
lds
jecxz
sahf
mov
sub
in
rorb
inc
jae
jge
lock
jge
xchg
pop
decl
imul
inc
sub
test
add
add
les
fisubrs
test
cmp
push
cmp
addr16
push
pop
cmovle
stos
jns
lods
pusha
xor
stos
popf
mov
adc
jo
sub
ja
mov
lods
cmpsl
dec
sub
lock
out
and
xor
and
sub
xchg
in
mov
les
pcmpeqd
xlat
sbb
pop
mov
bound
ljmp
and
add
adc
pop
adc
testb
loop
data16
cwtl
mov
out
fsubrl
incl
enter
popf
add
shlb
je
mov
or
test
jle
sbb
or
inc
sub
push
mov
ljmp
ficomps
xor
sbb
stos
icebp
clc
aad
std
add
dec
popf
mov
mov
aam
lods
test
push
dec
adcb
mov
mov
cmp
jge,pn
add
aam
dec
mov
rcr
popf
cmp
inc
mov
loope
mov
jl
mov
or
adc
sub
mov
notb
stc
lret
aas
mov
clc
cmp
insb
sarb
mov
pop
lds
xor
out
and
sub
jg
and
cmp
psubq
add
dec
imul
dec
dec
cmp
and
adc
pushf
in
xor
shrb
cmp
scas
inc
out
push
data16
add
movsl
and
push
mov
mov
jmp
push
dec
in
repnz
adc
add
aam
arpl
inc
sub
pop
push
sahf
sti
sub
ret
xor
fwait
sub
clc
xchg
jne
cmpsb
dec
stc
cmp
imul
jae
mov
jbe
mov
mov
mov
cmp
push
inc
jbe
push
push
fdivl
lret
mov
push
push
adc
lods
xor
cmp
shr
adc
ja
adc
mov
jbe
push
pop
mov
dec
shl
je
movd
mov
fisubs
shlb
lock
push
outsb
pop
out
ds
lret
arpl
jle
ljmp
loop
scas
lods
pushf
xchg
push
ret
arpl
loop
outsb
ds
adc
or
and
mov
shl
mov
jae
xor
insl
add
outsb
int3
orb
or
gs
cwtl
pop
sub
mov
adc
xchg
add
mov
jl
ret
stos
sahf
stc
in
adc
outsl
adc
jl
imul
inc
mov
push
add
aam
fisubl
xor
cwtl
movsl
lea
xor
cmp
pop
cmpsb
jmp
push
movsb
sti
xor
xor
pop
sahf
enter
jo
jne
jmp
xlat
mov
pop
cmp
cmp
mov
push
mov
jnp
cltd
push
loopne
mov
xchg
jae
mov
outsl
push
fisttpl
cld
adc
sarb
xor
jp
cmp
or
fsubl
mov
std
sbb
mov
aas
ljmp
emms
add
xchg
mov
in
pusha
pusha
lock
aad
mov
lea
lret
jne
shlb
int
inc
and
inc
cmp
pop
cli
sbb
add
mov
xchg
leave
aaa
shll
inc
mul
in
mov
icebp
pop
jge
cmp
cmp
arpl
adc
pop
jae
xor
in
mov
cmc
scas
jle
fadds
pop
cmc
cmp
pop
out
insl
rcrb
call
mov
aas
push
cmpl
scas
jno
jg
mov
insl
mov
dec
idiv
and
fucomp
ret
jo
inc
or
cwtl
je
into
aas
pop
add
jns
push
fistpl
loope
arpl
cld
lock
jns
xchg
mov
add
mov
or
js
scas
ja
add
cwtl
push
in
cltd
in
sub
sbb
out
lcall
pop
lods
fiadds
mov
adc
pop
hlt
aam
mov
leave
mov
out
movsl
cmp
push
xchg
mov
cld
enter
test
xchg
lcall
and
and
adc
push
adc
jno,pn
mov
mov
data16
push
jnp
adcl
cmp
je
movsl
dec
loop
inc
jb
int
mov
cwtl
jg
mov
pop
xor
inc
std
push
vbroadcasti64x4
repnz
xor
lret
dec
mov
test
inc
cld
shrb
les
addr16
outsb
fildl
fcompl
mov
pop
sahf
ret
jl
adc
test
int
imul
pop
mov
inc
pop
jecxz
jae
movsl
jmp
push
xor
cmp
xor
call
pop
loope
dec
call
leave
cmp
inc
xor
inc
mov
or
aaa
jge
pop
aam
inc
dec
sbb
ret
insb
mov
lret
scas
das
imul
jns
xchg
outsb
mov
add
out
jns
mov
cmpsb
pop
add
in
sbb
in
xorb
jne
cmp
call
arpl
inc
mov
cld
orb
xchg
add
daa
leave
inc
jbe
addr16
pop
push
mov
icebp
sbbb
addr16
and
dec
pop
xor
inc
sub
pop
sub
pop
jge
push
pop
mov
lret
xor
aam
mov
mov
icebp
cmp
push
rcll
jmp
sbb
jnp
mov
js
in
rorb
hlt
outsl
sbb
xor
imul
pop
mov
mov
lea
test
jge
test
adc
lret
sbb
jg
lds
cmc
dec
int
lahf
add
ljmp
dec
rcll
cld
and
mov
jb
mov
pop
pusha
dec
sub
adc
inc
dec
adc
xchg
jae
pop
mov
insb
imul
imulb
xchg
gs
imulb
std
loop
add
das
scas
jae
mov
daa
rcrb
jl
or
insb
push
imul
ret
inc
roll
lock
mov
pop
repnz
jbe
outsb
cmpsb
pop
aam
mov
cmpsl
fwait
pop
dec
xor
inc
loopne
jp
push
pop
cmpsb
lea
imul
adc
xor
lcall
and
movl
push
jmp
and
pop
sub
inc
out
test
loop
fldt
inc
dec
dec
xor
jnp
inc
push
mov
xor
jmp
rcrl
stos
lcall
lods
inc
xchg
push
gs
xor
xor
pop
je
test
movsl
add
fmuls
or
dec
pusha
lods
std
dec
cmp
mov
in
and
loope
fs
mov
leave
mov
fcmovnb
out
in
repnz
cmp
xchg
pop
stos
pop
ret
scas
outsb
pop
add
mov
out
xchg
jle
int
add
lcall
push
xchg
mov
inc
dec
pop
ret
mov
rorl
mov
pop
out
adc
and
mov
or
add
fdivl
dec
lock
push
xor
mov
call
outsb
scas
xor
sub
pop
lea
aas
lock
js
leave
movl
dec
lcall
dec
mov
in
sbb
cs
sub
mov
pop
push
outsb
sub
add
adc
sbb
ret
in
and
push
add
adc
frstor
mov
sarl
addr16
jo
cmpsl
adc
pop
pop
jl
add
and
test
xchg
and
imul
loop
fadds
or
pop
xchg
pop
mov
repnz
xor
das
cmp
sub
xchg
insb
in
fstl
and
fcmovu
xor
pop
push
sub
or
shll
mov
jl
push
xor
cmp
and
dec
dec
subl
sub
fisubrl
fisubs
cs
aad
lock
jle
loope
push
outsl
rcrl
xor
xor
rol
jle
sub
xor
lods
and
imul
fidivs
test
lds
ja
scas
aas
fmull
test
repnz
pushf
pop
add
mov
js
jl
adcb
sti
psraw
or
gs
ffree
cs
mov
dec
add
lds
push
ja
les
push
sbb
nop
mov
jmp
mov
nop
addl
loopne
and
in
lahf
arpl
sub
pop
gs
fildll
hlt
sbb
and
jg
das
stos
dec
cltd
lock
dec
movsl
mov
add
push
jmp
int
repz
int
xchg
inc
mov
mov
std
ja
add
in
out
jg
pop
xchg
xor
pusha
cwtl
ja
adc
and
and
mov
outsb
sarb
xor
mov
sahf
aad
daa
leave
and
out
adc
jbe
hlt
pop
dec
fmuls
js
adc
xlat
dec
pop
xor
pop
in
mov
sbb
test
add
push
pop
pop
pop
push
or
mov
in
cmp
enter
adc
orl
lods
stos
test
insb
into
push
pop
dec
adc
xchg
bound
cmp
or
mov
stc
lods
or
jne
sub
jns
and
and
lret
and
dec
push
push
fstl
adc
or
xor
pop
test
jns
cli
and
mov
lods
or
and
adc
sbb
and
lock
cmp
sub
push
sub
shll
sbb
adc
xor
jge
cmpsb
loop
push
lods
dec
pop
aas
adc
sbb
xchg
pop
fldenv
nop
in
int3
xor
in
push
adc
xor
inc
outsl
js
and
fiaddl
mov
sar
fsubr
and
xlat
mov
pop
cld
push
iret
cmc
test
pop
jb
mov
mov
pop
lock
xchg
sub
xor
fdivrs
jno
out
fisttpl
pop
sub
stos
in
add
out
outsb
fwait
mov
aad
inc
shl
out
outsb
mov
test
pusha
jle
adc
add
mov
shll
jl
in
mov
das
jbe
xor
jle
ret
sub
add
les
and
pop
add
out
xchg
push
sub
fstl
repz
pushf
in
pop
repz
dec
inc
jae
je
push
push
sahf
push
or
adc
rcl
sbb
jb
cmp
mov
mov
movsb
out
aas
xchg
mov
push
mov
pop
pop
loop
stos
xor
scas
pop
adc
mov
push
jo
cld
jp
jnp
stc
insl
jmp
push
push
pop
sub
sbb
or
cmpsb
xor
aad
iret
dec
xor
mov
dec
pop
ljmp
push
clc
add
sub
lcall
mov
sub
stc
lods
sub
jge
hlt
cwtl
mov
sbb
aad
lret
mov
cmp
outsb
pop
pop
divl
sbb
outsl
shll
int3
cmp
mov
fisttps
call
add
shlb
and
fldenv
xor
inc
pop
movsl
push
nop
jecxz
inc
loope
jbe
loop
xchg
fs
mov
xor
stc
inc
shrl
or
sub
addr16
mov
int3
clc
inc
fadds
fs
cmp
popf
or
jl
fildl
dec
out
shll
mov
cmpl
scas
cld
and
mov
or
xor
add
in
or
dec
in
jg
mov
cs
lret
fnstcw
mov
repnz
jb
jge
ljmp
inc
push
lcall
or
les
loope
sbb
xchg
push
clc
and
jecxz
icebp
cmpb
or
dec
addr16
xor
pop
jne
jns
push
mov
xchg
nop
push
mov
clc
inc
insl
rorb
jmp
push
cli
push
scas
sbb
inc
cmp
stos
repnz
sub
test
add
mov
daa
gs
jl
call
mov
cmp
iret
xor
jmp
idivl
pop
sub
sbb
xchg
jne
xchg
mov
ret
cli
sub
insl
add
dec
iret
xor
pop
xchg
pop
cmp
push
lea
jno
mov
out
jne
call
outsb
enter
jle
sti
or
cltd
fcmovbe
cmp
ss
push
sti
add
fisttpll
enter
jbe
fidivrs
ja
xchg
in
dec
xlat
ja
idiv
or
adc
enter
mov
fwait
iret
pop
cmpsl
xor
jb
test
shll
adc
imul
andb
lret
mov
sbb
mov
pop
insl
jl
jno
es
xchg
xchg
vcmpss
xchg
idivb
les
test
or
pop
sub
aas
inc
in
add
push
xchg
add
cmp
xor
orb
pushf
lret
pop
insb
jo
mov
sbbl
inc
adc
inc
pop
dec
mov
mov
fs
lock
push
jnp
fdiv
fwait
insl
jg
xor
jl
add
dec
pushf
mov
mov
arpl
pop
cmpsl
and
test
aam
push
push
inc
pop
movsb
pop
cmp
shll
add
mov
xchg
stc
inc
aas
imul
mov
xchg
adc
sahf
in
xor
mov
insl
xchg
int
and
cmp
sbb
cmpsb
icebp
decl
pushf
iret
in
jnp
lods
inc
pextrw
js
adc
sub
lods
inc
lock
sub
sub
sbb
push
test
inc
pop
lods
push
mov
mov
test
leave
mov
insl
mov
and
fs
xchg
int3
dec
adc
cwtl
mov
adc
sub
mov
imul
mov
mov
mov
pop
repz
pop
sbb
or
or
dec
cmp
lcall
ja
add
inc
xchg
cli
fisttpll
aaa
dec
out
and
mov
mov
sub
jnp
ret
mov
sbb
fsubrl
push
imul
dec
jae
and
inc
mov
mov
es
popf
roll
push
mulps
insb
jg
sub
in
sub
push
fisttpll
cmp
xor
cltd
in
mov
lock
sbb
jbe
leave
lods
and
out
pop
jl
call
dec
arpl
pop
dec
repnz
in
fimull
loopne
rorb
pop
xchg
ljmp
sub
mov
add
mov
inc
dec
jns
mov
mov
lock
sti
lock
addr16
sbb
cs
mov
cmp
add
xchg
stc
lret
mov
mov
js
push
xor
enter
insb
repnz
lcall
stos
push
jns
rcr
mov
or
test
dec
adc
data16
xchg
sub
push
ds
call
sbb
out
in
mov
sbb
xor
adc
les
in
test
sti
dec
or
pop
je
fbstp
xor
cmp
mov
ret
loop
dec
and
or
lods
sbb
mov
popa
jns
stos
mov
adc
and
and
loopne
je
and
add
xor
mov
push
xlat
push
inc
xlat
popa
pop
and
adc
rolb
jo
jns
mov
cmc
nop
jnp
insl
icebp
push
mov
sbb
adc
jno
cmp
xor
lds
xor
mov
nop
inc
in
test
sub
push
dec
push
push
insb
xchg
or
sub
hlt
pop
xchg
adc
mov
scas
pop
add
jg
cmp
or
pop
sbb
and
rclb
pusha
cwtl
pop
aas
mov
mov
add
sbb
inc
iret
jge
movsb
jb
jne
mov
or
mov
cmpsl
or
testb
xchg
inc
xor
outsb
ret
addr16
into
or
and
cmp
mov
cmc
lret
mov
dec
ja
out
call
xchg
mov
ljmp
cmp
std
bound
xchg
in
push
mov
or
lahf
dec
xorl
fiadds
in
fildl
xorl
and
dec
xchg
add
cmp
add
shrb
jmp
call
sub
jbe
out
fistpll
std
stos
adc
jecxz
xchg
mov
mov
or
add
in
cmp
clc
inc
cs
lea
cmpsl
mov
fisubs
aam
in
adc
mov
loope
and
mov
and
push
bound
inc
fcoml
mov
and
gs
jmp
mov
pop
vdivss
jnp
scas
jb
mov
jle
jp
pop
fmulp
call
add
jns
shll
ret
jecxz
mov
hlt
xor
lahf
push
test
sub
cmp
jmp
ret
jnp
push
daa
jl
cmp
inc
rcr
je
xlat
pop
arpl
mov
cmpsb
int
adc
or
lods
es
xlat
in
push
pop
out
adc
xchg
pusha
sub
shl
jne
or
push
push
or
mov
mov
outsb
call
mov
mov
add
inc
jbe
push
cmpsl
inc
outsl
jg
or
xor
cmp
mov
hlt
js
lahf
jne
lea
out
inc
ja
jne
push
fucomip
and
pusha
jecxz
loopne
push
sub
fwait
inc
aaa
cli
xor
sbb
ja
cli
inc
and
call
adcb
push
push
leave
cmp
pop
imull
sub
mov
lahf
mov
lock
lcall
xchg
into
pop
cltd
mov
adc
push
mov
out
sub
xor
cld
cmpsb
mov
xor
lret
imul
in
push
fdivr
mov
icebp
fsubrp
adc
aas
daa
dec
shlb
jmp
add
inc
scas
mov
add
ds
pop
aam
add
fwait
in
adc
pop
ljmp
cmc
xlat
decl
movsb
adc
psubsw
add
mov
nop
pop
loopne
test
mov
and
mov
inc
data16
je
repnz
leave
jp
push
jno
in
test
test
js
lock
mov
lret
pop
dec
adc
stc
xchg
cmp
pop
mov
cmpsl
push
shl
push
or
test
dec
push
adc
arpl
adc
cmp
mov
pop
push
xchg
lea
pusha
stos
sahf
rcrb
cmpsb
movsl
push
sbb
negl
inc
scas
mov
cs
rorb
aas
dec
mov
add
fnstenv
cmpsl
fmull
adc
push
cmpsb
add
lret
loopne
loopne
xor
fdivl
mov
jnp
aad
inc
xor
stos
cltd
cmpsb
pop
lock
pushf
or
leave
outsl
in
lods
test
int
test
add
into
lods
fmuls
mov
stos
inc
test
neg
add
mov
pop
fsubrp
sbb
lcall
push
mov
fstpl
vpmaxsw
jae
out
ljmp
dec
fisttpl
xor
mulb
stos
insb
xchg
fs
add
add
jns
adc
jnp
je
jle
cmp
les
mov
insb
out
cmp
adc
orb
cmp
push
cld
push
push
jbe
mov
inc
sar
or
jnp
scas
divb
mov
stc
mov
cs
dec
mov
lahf
in
inc
in
jp
jmp
ds
cmp
std
inc
shl
mov
addr16
pop
xchg
inc
sub
in
je
mov
sub
icebp
inc
insb
adc
mov
sbb
pop
test
imul
pop
sbb
push
daa
subb
mov
sbb
arpl
push
mov
pop
dec
push
in
push
call
sbb
mov
jae
jmp
xchg
xor
test
negl
or
pushf
movsb
cld
or
cs
xchg
sbb
jb
xor
xor
sti
mov
pop
xchg
push
decl
ret
fstpl
mov
mov
test
fwait
cld
cmpps
inc
adcb
xor
cld
sub
cmp
in
push
mov
les
mov
sbb
inc
push
jno
mov
popf
in
mov
lods
repz
rorl
or
mov
lods
pop
adc
fistl
iret
fstpl
xchg
out
mov
cmpsl
imul
xor
pusha
pop
or
pop
sbb
hlt
stos
dec
mov
lds
bound
jns
rcrl
pop
fbld
das
hlt
fadds
test
cmp
mov
push
jo
pop
and
sbb
imul
popa
and
sub
rorb
adc
mov
cli
out
sbb
or
dec
call
pop
ds
movsb
mov
push
xor
enter
jmp
sbb
cmpsb
mov
int
shll
xchg
loop
shr
cmp
cmp
inc
push
mov
or
bound
cmp
pop
in
adc
sbb
mov
sub
sbb
or
fsts
mov
pop
cmpsb
into
repz
aaa
mov
mov
int
mov
mov
das
mov
lahf
cmpsl
int3
cmp
mov
jns
subb
inc
cmp
sti
movsl
test
lahf
add
les
arpl
sub
mov
movsl
and
fisubs
pushf
sbb
and
daa
shrl
es
lods
loope
mov
jb
outsl
cmpsb
jne
out
or
xor
popf
mov
dec
aad
fidivl
sbb
dec
pop
daa
ljmp
sub
xor
daa
testb
push
jle
cmp
xor
cmp
decl
fdivl
jle
imul
mov
lock
enter
sar
push
add
fcompl
xlat
dec
pop
dec
sar
mov
cwtl
jnp
xchg
lods
jge
cmp
scas
ret
daa
mov
in
pushf
jge
xchg
jg
mov
lock
mov
xlat
pusha
mov
xchg
and
lods
add
loop
stc
cmp
adc
in
sub
enter
add
cmp
push
int3
loop
nop
push
dec
outsl
sbb
mov
mov
mov
pusha
cmpsl
aaa
pop
xchg
pop
lcall
lcall
js
enter
adc
imul
cwtl
jmp
fwait
inc
or
mov
pop
add
cmp
idivb
xchg
add
dec
loopne
mov
and
cltd
adc
in
insl
inc
mov
cs
push
mov
cmp
popf
xor
cmc
inc
cwtl
and
jle
mov
adc
sbb
adc
xor
sahf
scas
push
adc
mov
stos
cmp
in
insb
xchg
mov
orb
aam
adc
in
je
out
notb
ds
inc
or
mov
int
xor
cmp
fnsave
sbb
shlb
xchg
scas
push
je
lret
xor
sub
adc
lcall
mov
cmp
cmpsb
dec
push
out
dec
mov
add
jle
pushf
es
jnp
mov
dec
pop
inc
nop
xor
mov
hlt
pop
push
aam
jge
mov
nop
xchg
mov
scas
or
daa
inc
xor
xchg
jae
call
lods
hlt
inc
jmp
dec
mov
pop
pusha
adc
enter
aaa
loop
test
lret
mov
imul
aaa
and
xchg
fs
cmc
mov
int
xchg
out
push
and
adc
mov
xor
and
int3
sbb
push
xor
stc
mov
dec
push
std
out
xchg
sahf
lahf
repnz
rcl
mov
daa
jo
mov
sub
push
jae
jae
mov
pop
in
inc
cmp
aaa
decl
daa
inc
sub
test
int
jne
jmp
jo
cmp
sbb
pop
jns
pop
or
mov
jp
cld
mov
jne
ds
or
pop
sub
sbb
mov
mov
in
into
and
and
clc
pushf
or
mov
push
push
sbb
push
add
jns
lods
mov
xor
lcall
xchg
mov
pusha
pop
jno,pn
mov
mov
and
xchg
stos
shrl
scas
insl
or
cmp
inc
xchg
fisttpl
push
sarb
push
mov
mov
cltd
test
lret
xor
mov
shll
arpl
lods
das
negl
clc
insl
shrb
cmpsb
fdivs
sub
lahf
loopne
xor
sahf
in
xor
das
dec
push
and
pop
stc
int3
inc
stc
imul
ret
and
insl
sbb
cld
outsl
ret
outsl
test
push
insl
aam
imulb
or
rcll
inc
sbb
repnz
fsubrl
or
sub
xchg
fcomps
subl
mov
xchg
loope
in
repz
call
cmp
xor
xor
into
cmc
sbb
rcl
push
arpl
pop
or
test
xchg
enter
std
adc
or
outsl
or
int
aad
dec
push
mov
and
jecxz
pop
pop
xchg
mov
xchg
mov
test
ret
arpl
mov
lret
jmp
mov
leave
out
imul
add
lea
mov
fsubrp
addr16
mov
cs
sbb
dec
mov
sbb
dec
mov
shrl
sahf
sub
pusha
mov
fcoms
in
sbb
add
sbb
push
push
adc
cmc
pop
sbbl
leave
int3
inc
mov
dec
push
mov
popf
in
insl
out
mov
mov
sub
push
fbld
lods
mov
jns
popa
fiadds
push
mov
mov
pop
xor
push
sbb
or
outsb
dec
and
or
xchg
push
cmp
xchg
cs
mov
jmp
out
mov
dec
cmp
cmp
jge
pop
sbb
mov
js
or
aaa
or
xor
cmp
push
xchg
out
push
je
xor
out
popl
adc
sti
shl
loop
sti
mov
inc
or
dec
jbe
mov
mov
popf
ja
je
pop
push
pushf
fstpl
out
and
add
add
pop
icebp
jae
bound
stc
fs
xchg
jne
cmp
and
iret
mov
xor
add
clc
popf
mov
shrl
aam
lock
stc
out
mov
out
sbb
stos
or
xchg
out
jmp
js
loope
and
xor
pop
mov
in
cmp
mov
jl
adc
fdiv
jge
int
cld
ds
xchg
push
xchg
lahf
leave
mov
aam
mov
into
fs
out
adc
decl
insl
insl
fldcw
dec
dec
push
inc
sti
fdivrs
cmp
aaa
xchg
cmp
jp
imul
cwtl
sub
push
jne
sbbb
leave
enter
adc
jo
add
push
outsl
outsb
push
mov
jbe
sub
and
ret
inc
cmp
or
into
inc
outsb
out
psraw
push
test
pop
mov
add
sub
int3
push
add
std
inc
imul
ja
jmp
stos
test
push
faddl
sub
mov
stos
add
orl
and
call
repnz
add
jg
shrl
pop
outsl
aas
pop
xor
js
lock
and
push
aad
ja
pusha
sub
mov
pusha
rcll
inc
in
inc
push
pop
mov
inc
imul
sarl
cmpsb
mov
pop
outsl
pop
inc
ds
out
xchg
push
sbb
test
das
or
xor
fcomps
test
xlat
in
mov
mov
push
mov
push
jnp
jg
addl
aam
repnz
jo
sub
pop
xchg
shlb
rcrb
ret
lea
inc
and
jno
imul
add
loop
xchg
rclb
out
cmp
lods
gs
adc
and
push
mov
in
xchg
ret
lcall
fnstcw
lret
inc
mov
insb
pushf
sbb
sub
sub
fninit
in
sahf
enter
fsts
into
jge
push
sbb
in
sbb
sub
pushf
icebp
cmp
stos
insb
mov
pop
imul
rcl
mov
stos
ja
and
jno
push
fbld
and
adc
les
inc
mov
xchg
pusha
outsl
xchg
add
aam
insl
stc
jmp
stos
sub
into
les
inc
sarl
rcr
les
cwtl
in
jmp
aaa
pop
cmpb
jle
mov
jge
nop
mov
repnz
dec
hlt
ficoms
jae
xor
mov
sub
jbe
lret
push
or
add
ret
xlat
cmp
aas
pop
fmuls
jbe
jmp
in
sti
lock
cmp
sbb
push
push
sub
repnz
mov
daa
xchg
movsl
std
mov
leave
lret
fdivl
ret
mov
loop
aaa
and
cmp
in
fyl2x
mov
pop
mov
jo
adc
push
sbb
das
xor
fisubrl
pop
je
push
push
xor
out
test
inc
jg
inc
xor
add
dec
jno
cwtl
mov
xchg
aaa
fimull
jle
lods
cmpsb
lret
jg
scas
in
mov
aam
icebp
and
cs
in
jp
lea
sbb
jno
add
mov
insl
dec
mov
movsl
mul
imul
xor
pop
add
sbb
lahf
mov
gs
call
pushf
jno
pop
push
movsl
jnp
pop
inc
mov
testb
mov
add
in
insl
xor
dec
lock
out
gs
xlat
mov
outsl
in
inc
pop
lahf
nop
out
lds
aam
jmp
push
enter
outsl
lcall
jno
icebp
sahf
pop
in
fwait
cmp
push
fcmovnb
movsl
adc
mov
fisubs
pop
mov
pusha
and
nop
xchg
mov
in
add
ret
and
subb
dec
rclb
inc
add
js
imul
imul
push
mov
xor
mov
xchg
cmp
sti
cmp
rcrl
mov
push
cmp
ljmp
das
popf
scas
sahf
cmp
adc
sub
inc
and
aas
push
cmp
xor
in
scas
in
hlt
xor
mov
repnz
inc
outsl
adc
cs
pop
testl
dec
out
or
fs
pop
pushf
add
add
ds
dec
testb
lret
inc
xor
jae
int3
out
inc
jmp
add
enter
xchg
xlat
fsts
insb
xchg
std
shl
jle
int3
jl
fwait
js
cltd
mov
push
sbb
mov
lcall
sub
jo
jge
mov
mov
dec
inc
add
jecxz
sub
cltd
aaa
add
sbb
movsl
movsl
mov
mov
and
movsl
push
jae
fisubl
dec
ret
test
gs
xor
dec
jne
add
push
ret
ljmp
sub
dec
aad
push
aam
fiaddl
jae
imul
insb
push
sub
cmp
xchg
pop
es
mov
mov
add
insl
iret
out
mov
jge
rcrb
call
fidivrl
lcall
cmp
mov
push
jb
xor
stc
jno
in
jl
hlt
jae
lods
lcallw
movsb
test
adc
es
mov
fstp
mov
cs
fldenv
daa
pop
pop
mov
popf
jbe
pop
sub
in
mov
cmc
fldcw
call
cld
xchg
jmp
shll
sub
inc
mov
insl
out
lret
lret
shlb
xchg
arpl
rcrl
and
in
cmpb
xchg
sbb
adc
ja
mov
mov
cmp
pushf
popf
stc
sbb
fmul
jno
push
and
aaa
in
mov
sub
aaa
popa
outsl
inc
out
cmpsb
jg
in
jns
sub
and
dec
pop
fisubrs
ret
xchg
lahf
pop
test
int
or
or
daa
sahf
mov
stos
dec
xor
cli
mov
mov
or
mov
pop
xorb
pop
sub
repnz
cmp
pop
cmp
inc
pop
ljmp
lahf
mov
divb
aas
or
jg
loopne
shll
pop
es
sbb
inc
testb
sub
out
pop
pop
inc
aas
fstps
add
cmpsb
scas
fld
pop
in
mov
outsb
mov
pop
push
mov
das
inc
fcomps
mov
adc
lret
jle
dec
das
enter
sub
mov
stc
xor
pop
das
inc
aaa
dec
es
mov
mov
addr16
adc
push
jge
sbb
es
daa
out
inc
dec
insl
xchg
jmp
dec
or
pop
es
jmp
icebp
out
cltd
and
or
xchg
data16
xchg
repnz
jo
push
ret
mov
jo
or
push
and
iret
mov
xor
mov
enter
jnp
mov
loope
mov
or
call
cmp
adc
sbb
rcrl
jg
scas
xchg
gs
data16
sbb
rclb
out
filds
cs
loopne
jo
dec
in
ss
lock
sub
std
add
fimuls
xorl
mov
aad
mov
int
lahf
imul
or
fnsave
loope
lret
or
mov
pop
std
icebp
cmpsb
or
xchg
mov
jns
jp
xor
mov
test
shl
sahf
xor
xor
mov
pop
mov
imul
jp
xchg
mov
fmull
or
mov
lock
dec
stos
jb
aad
pop
dec
int
mov
jns
mov
sbb
cmp
sbb
gs
aas
sahf
cmp
pop
push
push
jl
push
xor
aaa
into
and
lods
add
fldenv
xor
mov
xchg
mov
cwtl
leave
push
add
in
out
hlt
cli
clc
dec
mov
jmp
add
arpl
in
fldenv
xor
cmp
push
out
mov
mov
test
sahf
jp
dec
pop
stc
ss
test
fldenv
nop
movsl
pusha
imul
sbb
mov
aaa
in
push
clc
mov
cmpsb
jecxz
add
or
and
lcall
xchg
mov
imul
adc
adc
mov
fldt
std
mov
mov
cmp
ja
ret
add
insb
aam
addl
add
enter
cmp
xor
ljmp
jbe
popa
xor
pop
push
rol
mov
jns
inc
mov
rcrb
out
shl
pusha
data16
pop
xor
pop
dec
divb
mov
lcall
push
mov
sahf
adc
push
xor
enter
test
movb
outsb
push
in
inc
fnsave
mov
dec
push
repnz
jp
or
dec
lret
gs
cmp
mov
das
repz
add
es
cli
inc
fdivr
mov
pop
adc
sbb
aas
out
add
pop
bound
mov
f2xm1
fisubrs
fwait
loope
dec
sub
mov
hlt
inc
sub
push
pushf
fistpll
inc
xchg
dec
mov
jo
aam
int3
jnp
xchg
aam
jns
pop
lods
popa
xchg
into
nop
mov
xchg
sahf
push
out
je
insb
jl
outsl
mov
test
stos
movsb
lods
xchg
loope
dec
sbb
mov
imul
pop
icebp
xchg
xchg
in
mov
mov
adc
mov
ret
bound
dec
jle
jg
leave
push
xor
mov
fimuls
cmp
inc
mov
xchg
pop
movsl
jo
add
sbb
adc
jnp
or
or
jecxz
lock
xchg
icebp
test
mov
push
divb
lods
adc
cli
insb
test
out
cmp
xor
cmp
jecxz
clc
pop
je
sub
ficomps
add
lahf
addr16
loope
adc
cs
sub
repnz
cmpsl
jno
cltd
push
fisttps
lods
inc
cs
push
push
xchg
xlat
shll
push
sahf
inc
lds
les
pop
jae
clc
movsl
and
ss
sbb
fs
test
mov
sbb
je
fimull
sub
out
dec
or
repnz
jnp
loop
data16
pop
arpl
aam
jbe
es
mov
and
sbb
xchg
push
ja
int
jmp
adc
sbb
dec
lea
bound
push
imul
mov
mov
cld
ljmp
out
loope
dec
xor
or
pop
cmp
fmul
jns
imull
push
jecxz
lods
cmp
mov
daa
fsubs
addr16
in
stos
jg
out
fistps
bound
mov
mov
shlb
insb
mov
sbb
jecxz
push
jne
aaa
imul
cmp
repz
jg
and
inc
jg
sbb
xchg
mov
lods
ss
inc
fisubs
sbb
cmpsl
pop
loop
aad
stc
mov
ljmp
xchg
jge
ret
push
or
pusha
test
imul
mov
lods
out
push
add
lock
daa
clc
or
pop
scas
lods
fisubl
jmp
mov
js
ja
add
clc
or
pop
insb
div
sbb
jle
icebp
lock
int
mov
nop
mov
xor
push
loopne
push
movsb
mov
mov
bound
pop
ficompl
mov
test
xchg
inc
and
dec
icebp
sub
dec
stos
push
sub
push
push
mov
xor
ljmp
sbb
cmp
pop
and
stc
mov
xchg
cmpsl
xor
int3
mov
mov
sbb
add
mov
out
ss
or
inc
jl
and
inc
aam
jg
add
inc
mov
jl
dec
es
std
ljmp
mov
sbb
sub
loope
jmp
jle
xor
insl
sbb
adc
dec
pop
hlt
lahf
outsb
mov
in
mov
int3
insl
and
add
repnz
jp
lds
push
out
mov
xchg
push
dec
test
pop
ljmp
mov
notl
mov
cmp
insb
outsb
xchg
push
cltd
jl,pn
xor
mov
cmp
push
lods
sahf
or
mov
int3
das
fistpl
xchg
pushw
jg
pop
lea
stc
enter
xor
ds
jecxz
addl
lds
push
les
add
add
mov
lcall
cmp
cmc
out
cmp
cmc
cmp
js
xchg
pop
push
loopne
pop
mov
cmpsl
daa
ret
dec
negb
push
jb
data16
je
int3
je
sub
in
imul
pushw
scas
cmp
fwait
aaa
outsl
inc
inc
cmpsl
xchg
xchg
repz
cmpsb
jo
stc
out
ds
out
nop
and
dec
xchg
or
fwait
lret
loop
push
test
lahf
push
fstps
add
dec
inc
cli
icebp
and
insb
aas
mov
adc
nop
inc
push
mov
dec
pushl
mov
lods
scas
hlt
cmp
call
mov
push
test
or
fistps
xchg
inc
daa
cmp
and
cltd
jg
or
cmp
push
lcall
mov
andps
aaa
push
adcb
inc
inc
sti
ds
aam
or
shll
stc
mov
fstl
leave
pop
xchg
icebp
test
sbb
push
dec
mov
cmp
push
test
inc
jle
xchg
xlat
jge
fnstcw
mov
xchg
pop
and
int
sti
xor
sub
ds
dec
xlat
arpl
xchg
xchg
jge
arpl
dec
movsl
add
xchg
or
sub
cmp
sbb
push
pop
in
add
sub
or
ss
insb
das
pop
dec
pop
pop
lahf
loopne
pop
dec
in
dec
fisttpll
adc
xchg
mov
mov
xchg
jmp
and
js
stos
jbe
push
imul
sahf
push
sbb
and
pop
jns
xor
lahf
dec
imul
nop
xor
aam
pop
shr
or
mov
icebp
push
adc
roll
adc
add
mov
inc
dec
jle
ss
mov
dec
add
in
dec
repz
cli
dec
inc
pop
das
fsubs
dec
loop
cmp
loopne
out
lock
add
sbb
cmp
pop
adc
inc
call
and
and
inc
repz
cmp
push
popf
ja
sbbl
mov
cmp
repz
test
andl
xor
lods
xchg
sbb
int
cmc
cmpsb
push
or
mov
adc
adcl
out
dec
cmp
enter
lods
dec
mov
fisttpll
loopne
mov
push
jne
fs
shrl
push
movsb
dec
fistps
pop
insl
push
fidivl
negb
add
test
dec
inc
arpl
sbb
pop
sub
ss
jmp
push
fcmovnbe
push
sub
imul
je
repnz
test
lret
jecxz
sub
or
lret
movsl
mov
lods
sub
inc
arpl
sub
jp
lret
jmp
cmpl
push
in
sub
jno
and
out
cmc
adc
mov
xor
fiaddl
jmp
sub
outsb
push
lds
dec
subb
xor
repnz
fisttpll
test
fs
rclb
jnp
pop
add
add
mov
mov
cmpsl
add
pop
sarl
cld
push
push
test
scas
jl
rorb
adc
lods
push
ss
inc
cmp
sbbl
add
sarl
cmp
cmp
outsb
in
jae
inc
mov
lahf
fidivs
fists
inc
jb
lods
out
xchg
mov
cltd
mov
push
push
mov
jecxz
mov
jno
push
mov
xor
mov
push
aam
inc
add
or
iret
sub
fmul
popl
cmpsb
test
test
shr
mov
sbb
cmpsb
xor
mov
popa
scas
xchg
shll
mov
xchg
adc
fs
jmp
dec
movsb
insl
cmpsb
stos
arpl
insb
int
xor
xor
test
xlat
xor
addr16
xchg
or
and
lds
lods
inc
cwtl
aam
out
xchg
mov
adc
mov
dec
sub
mov
inc
decb
das
or
test
je
stos
mov
roll
xlat
movsb
roll
adc
adc
add
pop
shll
cmp
xlat
xor
or
imul
pop
sbb
jmp
pushf
ljmp
lds
les
cmp
or
cmp
rcr
pop
jp
lret
fsubrl
loopne
dec
aad
aas
adc
mov
das
add
add
nop
insb
xchg
fiadds
lds
jge
out
xor
push
mov
adc
add
je
cltd
dec
dec
in
or
xor
mov
test
filds
aam
jg
fisubrs
clc
mov
add
stos
mov
or
inc
sbb
jne
mov
jge
fidivrs
mov
mov
push
jmp
mov
popa
cmp
inc
add
inc
jmp
adc
aaa
mov
sti
mov
and
clc
outsb
jno
das
dec
mov
cmp
mov
inc
inc
dec
sarb
sbb
add
mov
mov
mov
dec
pop
repz
and
xchg
dec
inc
dec
inc
sbb
dec
jmp
lret
dec
sbb
fcmovne
sub
lds
push
jp
mov
add
xchg
cmp
push
loop
xor
cmp
lea
insl
ljmp
out
icebp
cmp
aas
mov
sub
cmp
cltd
fwait
mov
bound
popa
jnp
and
mov
test
inc
adc
push
cli
mov
outsl
fsubr
push
xchg
mov
or
outsb
lret
jp
sti
pop
or
jl
xchg
xchg
data16
and
ja
cmp
rcrl
test
loope
push
inc
jae
into
jl
jmp
push
int3
loop
mov
sub
push
lods
shll
dec
cmp
jl
fcomi
or
cmc
inc
out
jbe
lret
sub
mov
cmp
movsb
push
cmp
xchg
pushf
sub
lcall
test
lcall
fnstsw
lock
push
test
addb
cmp
lock
stos
inc
das
inc
pop
ret
out
cli
xchg
loop
xlat
push
add
hlt
jbe
cli
pop
in
ret
adc
cltd
add
popa
mov
jge
dec
cld
inc
xchg
pop
dec
jge
aad
mov
adc
cmp
cmpsl
mov
pusha
mov
clc
sub
mov
aaa
daa
mov
movsb
lcall
fisubrs
jo
sbb
xor
int
stos
fimull
gs
stos
mov
bound
xchg
jbe
jl
push
daa
ss
jecxz
push
lahf
mov
and
push
jae
dec
test
test
add
adc
int
jmp
fsubrl
push
cmp
loop
adc
mov
mov
dec
out
std
xor
rcll
pushf
jns
adc
arpl
cmp
iret
icebp
push
repz
inc
push
in
cwtl
out
shll
ja
outsl
adc
lcall
mov
sbb
push
mov
sbb
je
enter
add
mov
pop
cmp
incb
and
mov
adc
addl
imul
jle
repz
dec
xor
lods
push
adc
mov
xor
outsb
mov
mov
xchg
adc
sbb
test
test
xchg
out
inc
in
add
pushf
cmp
dec
jg
fsubl
cmc
sub
pop
nop
mov
insb
xchg
int3
mov
hlt
test
dec
dec
ret
xchg
insl
icebp
push
sti
icebp
pusha
sti
mov
cmc
sbb
push
dec
mov
psubsw
stc
sub
ja
imul
int
push
addl
fsubrl
shr
fimull
loopne
lcall
mov
bound
inc
sub
je
into
stos
pop
mov
adc
adc
and
cli
pop
jle
mov
xchg
mov
in
mov
push
cs
xor
add
js
scas
adc
jg
cwtl
lea
dec
outsb
ficompl
cmp
push
mov
fwait
mov
xor
mov
mov
push
push
jb
pop
xor
mov
pop
mov
jno
sbb
xchg
ret
jl
xchg
call
push
iret
js
repz
add
and
xor
xor
dec
gs
pop
hlt
pop
mov
pop
mov
mov
dec
dec
pop
loop
or
inc
inc
jmp
mov
ds
sub
xor
gs
add
push
fxch
jle
pop
and
mov
jmp
pushf
jne
lret
cmp
daa
rclb
inc
pusha
sbb
rcrl
lcall
sbb
std
mov
inc
mov
popa
je
jnp
sti
cmp
cmp
mov
jg
in
repz
jecxz
inc
nop
lods
and
call
popa
pushf
jne
dec
adc
jp
dec
mov
dec
add
imul
jle
mull
pop
out
or
lods
jle
pop
lods
push
sub
les
mov
jmp
cld
out
cltd
pop
addr16
xchg
mov
pop
cltd
repnz
shlb
jne
sub
dec
push
pop
cmp
mov
stos
and
sub
mov
mov
adc
leave
movsl
jp
or
test
and
xor
xor
push
sbb
and
out
cwtl
push
outsb
adc
inc
add
push
mov
in
or
shrl
sbb
movsl
mov
mov
dec
lock
iret
jo
xchg
xor
sbbl
pop
sub
jl
addr16
sbb
in
cmp
cmc
ret
dec
int3
dec
ret
fdiv
pop
mov
lds
mov
lret
push
adc
fs
test
push
or
dec
dec
mov
ret
data16
cmp
aad
add
xchg
fsubrs
cmpsb
outsb
orl
dec
stos
mov
shlb
adc
pop
dec
xor
mov
jbe
mov
mov
dec
cmp
adc
jae
mov
dec
arpl
xor
aaa
pop
lret
xor
xorl
fsubr
ja
xchg
sub
xor
shll
fstpl
leave
inc
pop
test
in
ret
test
cmp
mov
sbb
or
cvtps2pd
mov
push
inc
push
jb
jle
and
jmp
push
movsb
popf
call
mov
data16
repz
mov
aas
xchg
adc
sbb
outsb
std
pop
inc
fcomi
cmpsl
iret
pop
bound
in
stc
xor
fstp
mov
sub
movsb
mov
fmuls
xchg
xchg
sti
in
sbb
jecxz
or
adc
cmp
mov
jno
aad
mov
cmpb
stc
fldcw
mov
fisubs
pop
in
cs
mov
dec
add
clc
add
sahf
insl
or
xchg
imul
cmp
inc
aas
push
jl
push
jmp
fcmovnb
xchg
mov
pop
cmp
inc
and
mov
xor
int3
push
jmp
out
popa
sbb
dec
cmp
das
loopne
jae
mov
addl
inc
imul
in
dec
enter
lea
mov
push
pusha
mov
outsl
negl
in
or
popf
testw
jno
or
adc
push
push
movaps
mov
mov
jb
push
imul
xor
push
mov
cmpsb
adc
mov
jbe
xchg
xor
fs
cmpsb
mov
fidivl
sbb
fmulp
rcrb
fs
add
sbb
mov
mov
fstps
neg
mov
mov
mov
inc
fstpl
mov
lock
jne
out
add
mov
out
mov
out
pop
imul
shrl
cmp
push
sarb
aam
xor
pusha
jno
dec
std
sbb
jmp
xchg
mov
push
les
mov
out
in
movsb
movsb
dec
fiadds
add
push
add
or
hlt
mov
pop
jp
nop
sbb
push
inc
sbb
fisttpll
inc
pmulhw
mov
sbb
xchg
iret
mov
icebp
mov
std
pop
test
jg
dec
and
into
out
std
or
mov
into
fstpl
hlt
push
jmp
sub
das
movsl
mov
mov
xchg
or
pushf
in
shr
fs
ret
sbb
aaa
push
mov
xor
pop
cmpsl
dec
or
or
shlb
dec
sub
or
out
lods
decb
ds
nop
push
jne
dec
sub
idiv
xchg
adc
jae
lret
cs
negl
loopne
daa
add
mov
subb
jmp
clc
nop
outsb
test
imul
ja
xchg
cmp
jbe
lret
cmp
xlat
imul
sbb
mov
incl
jp
out
test
imul
sbb
jae
lret
jbe
sbb
cltd
or
sti
jae
sbb
inc
jbe
fsubrp
adc
shrb
and
adc
in
fwait
imul
aad
pop
pop
cmp
iret
add
call
mov
adc
aam
mov
arpl
pop
shr
fiadds
lods
jmp
sbb
outsl
jl
xor
jae
jp
mov
add
icebp
jns
roll
shrb
push
cmp
frstor
fmull
add
mov
jne
int3
loopne
inc
fwait
and
jmp
mov
mov
pop
xchg
or
sub
pop
insb
sub
fsubrp
dec
push
inc
pop
loopne
jb
jae
call
rcrb
adc
jo
cs
movsl
in
sahf
xchg
lcall
cwtl
hlt
bswap
mov
loop
pop
daa
popa
rcl
push
std
mov
ret
dec
dec
int
cmp
jmp
cmpb
outsb
or
adc
nop
mov
sbb
sti
insl
cmpsl
mov
nop
sbb
insl
setns
scas
arpl
aam
mov
sbb
js
clc
mov
pop
xchg
movsl
push
jg
xor
and
jb
pop
stc
xchg
mov
jmp
mov
and
sub
inc
push
push
mov
lock
sbb
mov
loop
add
ljmp
jnp
loop
lret
xor
ficompl
push
inc
mov
pop
pop
sbb
aam
and
pop
mov
cmp
in
leave
lods
push
xor
andl
pop
dec
pusha
fs
and
pop
inc
fadds
nop
lret
ficomps
in
xor
inc
rcrl
hlt
ds
sbb
dec
pop
sbb
push
inc
cwtl
xor
mov
outsb
jmp
fldt
push
das
popa
add
icebp
leave
ffree
push
insl
pusha
dec
push
mov
mov
jno
pop
sbb
in
gs
outsb
xchg
add
cli
out
lea
sbb
aad
mov
sub
dec
adc
sti
adc
out
mov
popf
push
pop
mov
test
push
in
loopne
orb
mov
xchg
clc
jecxz
lea
andl
std
rol
aam
movups
stc
push
incl
mov
iret
fbstp
xchg
bound
out
imul
test
push
out
sbb
loope
or
dec
adc
mov
or
xor
cmpb
cmc
sbb
stc
mov
es
movsb
mov
imull
leave
cmc
std
jne
dec
je
xchg
dec
fnsave
jle
dec
dec
mov
scas
cmp
lahf
adc
loop,pn
or
imul
dec
iret
gs
mov
icebp
repz
ljmp
mov
lret
xor
mov
movsb
lds
fstpt
xchg
movsl
fwait
insb
pop
lods
stos
test
fwait
dec
imull
test
mov
js
push
mov
sub
sub
sub
into
mov
pop
and
or
push
or
scas
xor
dec
loop
sub
pusha
inc
int
dec
jbe
in
cmpsb
test
xchg
pop
cwtl
jl
cmpsb
in
add
fldl
and
inc
sbb
outsb
stos
pop
mov
sub
lock
adc
inc
mov
mov
lcall
cs
sub
inc
pop
pop
popf
je
xlat
jecxz
out
repnz
dec
jle
andl
popa
in
jo
cltd
in
mov
cmp
ds
adc
cmc
fs
jg
xor
add
rcll
push
rorl
jbe
mov
fists
sub
jbe
leave
pop
add
mov
adc
cwtl
das
cli
adc
mov
mov
xor
pop
inc
loopne
out
outsl
adc
mov
xchg
mov
fnstsw
mov
lahf
ss
pushf
xchg
xlat
cmp
xor
mov
call
rcrb
mov
lds
xchg
imul
stc
aaa
shrb
cwtl
cmpsb
test
ja
jnp
add
rcll
push
push
sub
xor
test
pusha
add
jae
mov
pushl
add
dec
loope
adc
adc
push
arpl
jge
repz
push
xchg
xor
lock
inc
or
outsb
lods
mov
push
jmp
repz
sarl
iret
movsb
loopne
outsb
jle
scas
hlt
and
repnz
xchg
add
push
pop
adc
mov
imul
cmc
test
or
mov
imul
ds
xchg
roll
jnp
xor
push
fwait
sbb
or
xchg
rcrb
das
popa
add
stos
push
cld
shll
enter
xchg
jae
hlt
mov
or
xchg
cltd
mov
mov
pop
stos
outsb
xchg
dec
cmp
ret
ds
test
sbb
or
imull
or
int
pop
mov
mov
sbb
inc
ret
sahf
mov
in
repz
cmp
dec
or
out
cltd
mov
pop
lret
test
imull
mov
mov
and
jle
cmp
dec
insl
mov
mov
roll
fsubrl
cmpsl
push
xchg
add
loope
scas
out
test
es
pop
pop
cmp
mov
fdivs
loop
mov
and
mov
add
subl
jecxz
and
in
shll
mov
push
push
in
in
rclb
jl
hlt
fs
out
dec
mull
dec
or
push
call
mov
inc
inc
inc
bnd
add
cmp
jnp
into
push
or
aas
dec
push
push
cmc
push
push
cs
xchg
daa
fdivr
mov
hlt
cmc
movsl
mov
in
rcrb
jb
imul
xor
sub
add
daa
mov
add
xor
dec
insb
and
insl
stc
aas
test
mov
notl
repz
mov
or
in
dec
sub
sarb
inc
sbb
repz
pop
lret
mov
push
jmp
int
dec
gs
and
mov
pop
movsl
push
pop
xor
movsl
adcb
sarl
in
add
jg
mov
or
or
je
add
cmpsb
cmpsl
inc
icebp
addl
gs
xchg
mov
mov
inc
sbb
jmp
sbb
dec
push
fisubrs
and
add
data16
cs
push
fnsave
push
sub
out
push
add
out
xchg
pop
dec
pop
sti
pop
inc
in
jmp
dec
xchg
mov
jns
sbb
int
mov
les
xchg
ret
mov
into
jb
ret
xlat
add
dec
mov
cli
loop
push
addb
fiadds
push
inc
lcall
scas
jo
jb
sbb
out
dec
or
pop
xor
cmp
dec
push
int
cmp
xorl
sub
gs
mov
cmp
xchg
shl
dec
dec
lods
or
icebp
pop
out
dec
xchg
cmp
jne
sub
sbb
sbb
out
imul
in
iret
daa
xchg
push
test
movsbl
aad
mov
xorb
sahf
cmp
push
cwtl
xchg
fstps
fs
pop
xor
or
jge
pusha
xor
scas
adcl
sarb
movsl
sbb
or
mov
popf
lcall
xor
mov
mov
cltd
jecxz
scas
xchg
sbb
push
adc
aam
mov
popf
out
repz
js
inc
sub
mov
dec
sub
xchg
scas
sti
out
ljmp
and
bnd
stos
or
repnz
adc
movsl
add
fwait
lods
lock
cwtl
mov
lret
lahf
stos
jno
nop
inc
jmp
pop
shl
inc
mov
out
push
or
cmpsl
lods
sbb
xchg
gs
call
dec
or
mov
dec
test
cltd
xchg
mov
jge
pop
and
dec
xor
fbstp
arpl
push
xchg
add
mov
pop
sub
mov
xchg
test
out
mov
lahf
sub
aam
add
mov
push
int
push
xor
add
out
es
in
push
fsubr
xchg
repz
mov
fwait
jp
and
out
lahf
xchg
nop
jmp
xor
cltd
iret
jne
lods
repz
add
fisubrl
cmp
lods
and
sub
dec
icebp
pop
push
mov
mov
dec
jmp
pop
jae
data16
mov
sbb
iret
add
add
aaa
adc
outsl
pop
mov
frstor
inc
sbb
jge
imul
ja
rcrb
xor
lds
lea
fisubl
lock
push
les
mov
or
or
adc
xor
push
push
dec
mov
push
sbb
fiaddl
sbb
mov
push
adc
adc
sub
sbb
test
push
xor
fisttpll
sbb
mov
into
into
sub
addl
fisttpll
xor
pop
pop
xor
outsl
mov
aad
pop
push
in
jge
jo
in
mov
sbb
lret
cli
sti
ljmp
push
sub
adc
mov
adc
in
xchg
fcoms
cli
push
adc
rorb
ljmp
fsubp
aas
jns
jg
jb
stos
and
repz
movsb
push
dec
jbe
pop
mov
std
inc
adc
inc
push
adc
inc
mov
xchg
orl
movsl
xchg
dec
mov
popa
cmpsl
in
jecxz
pop
xor
push
dec
and
clc
data16
lds
scas
jmp
pop
jecxz
les
fidivs
add
jbe
mov
imul
das
sbb
cmp
or
add
sarb
fmulp
fidivrs
cmp
outsb
movsl
xorl
or
dec
push
loop
xor
outsl
ss
in
cwtl
leave
dec
dec
fs
sbb
inc
cmp
xor
xchg
xchg
jo
loope
sub
add
ds
std
sbb
jns
mov
and
out
jne
push
push
dec
sahf
push
cmpsl
fidivrs
popf
dec
mov
lea
sahf
imull
mov
fcompl
push
out
xchg
mov
xchg
cmc
daa
push
mov
in
xchg
mov
cwtl
aam
test
ret
push
xchg
stos
das
enter
popf
dec
es
fwait
loopne
pop
xor
mov
jle
adc
pop
push
insb
arpl
cmc
ret
or
add
mov
add
mov
pop
cmp
add
and
inc
cmp
jmp
lods
mov
scas
mov
lret
mov
jne
xchg
leavew
adc
test
stos
xchg
in
jmp
dec
movsl
mov
insb
jmp
daa
cmpsb
roll
adc
cmp
add
jae
aaa
push
lret
cmpsl
mov
mov
pop
inc
cmp
adc
jg
xor
and
ds
inc
push
push
sbb
lea
fsubs
mov
sbb
adc
mov
in
xor
dec
inc
mov
push
fwait
imul
test
or
jo
add
int3
imul
xor
jge
mov
xchg
scas
jo
jp
bts
mov
lcall
cld
mov
mov
in
inc
sub
xchg
ret
lret
pusha
in
cmp
in
push
dec
mov
insb
fiaddl
pusha
hlt
mov
in
xchg
pusha
sbb
dec
es
in
xor
push
test
outsl
cld
pop
icebp
cmpsb
mov
mov
loop
cmp
add
mov
xlat
xchg
lret
xor
ret
dec
jl
es
push
xor
or
add
or
sahf
lret
lret
adc
clc
cmpl
aas
daa
je
ljmp
test
sub
add
add
movsb
pop
je
jnp
negl
loope
jnp
pop
enter
mov
clc
mov
dec
pop
out
in
pop
loopne
enter
ret
jne
arpl
mov
and
fildll
adc
pop
mov
cltd
xor
or
loope
add
clc
pop
xor
ds
test
xlat
pop
lret
mov
lea
mov
iret
leave
inc
xchg
cmpsl
mov
inc
cmpsb
add
adc
mov
ret
xor
shr
inc
dec
loope
mov
or
and
pop
and
leave
subb
mov
adc
in
cld
iret
add
jecxz
lea
insl
dec
repnz
add
das
jns
into
call
cmp
jl
rcrl
test
movsb
push
add
jg
int3
xchg
inc
imul
pop
xchg
call
aad
arpl
iret
and
in
into
out
cli
cmp
hlt
jns
insl
pop
jbe
stos
xchg
pop
and
movsb
sbb
jb
call
mov
dec
dec
out
mov
imul
and
push
inc
lret
incl
ficoml
adc
adc
lods
test
fcoms
call
ljmp
fchs
dec
sub
sub
xor
pop
push
fbld
mov
cmp
or
aas
into
cmp
sub
add
push
xchg
push
jp
xchg
fistl
mov
or
xor
and
jl
cmp
faddl
ljmp
mov
fucomi
ret
fisubrl
sbb
add
fwait
lock
xchg
and
lcall
adc
loop
adc
cmc
jmp
jne
mov
lahf
mov
pusha
scas
cli
lcall
flds
lret
mov
mov
out
int3
sub
push
cld
lock
cmp
mov
int3
fmull
mov
sub
sub
scas
dec
cmp
lcall
mov
scas
ss
and
add
jecxz
fisttpll
cmpb
ds
lods
sub
sahf
mov
mov
lds
mov
repnz
mov
and
sub
push
pop
mov
popa
jnp
sub
push
popa
dec
out
xlat
rolb
movsl
pop
mov
sbb
dec
lcall
adc
pop
cld
mov
in
push
mov
lock
nop
mov
xchg
cmc
mov
xchg
push
test
outsl
xor
push
imul
mov
inc
cmp
lock
adc
push
das
cmp
add
imul
mov
mov
xor
loopne
insl
jl
mov
imul
jle
push
in
xlat
rdpmc
jb
mov
pop
sbb
outsl
mov
add
add
xor
push
cwtl
xor
stc
es
mov
or
ret
push
xchg
pop
mov
dec
xchg
psrlw
pop
stos
xlat
mov
xchg
cmp
jg
out
mov
lods
jecxz
aas
mov
fcmovnbe
push
ret
push
fwait
sub
enter
xor
in
ds
imulb
insb
test
je
cmp
lcall
xchg
in
jb
lods
rorl
aad
orb
movsb
outsb
jb
es
test
push
add
cmpsb
cmp
sbbb
jge
fdiv
pop
scas
fs
lea
cmpsb
out
jecxz
jecxz
or
ss
in
cli
dec
inc
xchg
push
jns
sbb
or
std
jg
adc
fnstsw
mov
jb
rorb
stos
push
mov
xor
add
lods
jge
clc
jne
add
aaa
inc
add
adc
mov
xchg
inc
ficomps
inc
and
pop
xor
mov
push
and
stc
and
test
repnz
inc
in
ficoml
movsb
sbb
test
ficoml
adc
enter
inc
inc
movl
insl
in
and
sahf
sbb
mov
movsl
or
adc
dec
pop
lock
test
aad
pop
mov
loopne
test
cmpsw
test
sbb
mov
inc
in
cwtl
bound
call
fcmove
dec
mov
insl
cmp
flds
xchg
int3
pusha
mov
mov
adc
ret
arpl
push
add
sub
adcl
or
outsb
nop
insb
push
je
mov
mov
push
in
loopne
insl
lcall
add
cmp
ret
jmp
test
sbbb
popf
icebp
aaa
aaa
push
xchg
sti
inc
mov
movsb
daa
push
int
and
jns
mov
das
cmp
lcall
sub
in
mov
test
pop
dec
adcl
out
inc
xchg
std
in
cmpsw
sbbl
pushf
arpl
push
jno
mov
or
cli
in
arpl
mov
cld
cmc
mov
fucomi
in
popa
notb
xchg
or
jg
add
out
ljmp
mov
jp
xchg
lock
jge
out
lods
push
xchg
xchg
fildll
xchg
pop
add
mov
dec
push
pushl
mov
dec
orl
fdivrl
insb
pop
shll
mov
scas
cli
ret
aad
sbb
add
pop
daa
fdivrs
popa
int
mov
rolb
dec
cmp
xchg
sbb
out
inc
mov
mov
in
dec
rorl
cmp
rcl
xchg
jl
adc
inc
cmp
ljmp
pop
inc
mov
mov
mov
sbb
mov
jle
mov
mov
adc
das
push
call
xchg
and
repz
mov
lods
mov
aaa
sbb
stc
bound
inc
outsl
adc
ja
call
lahf
jecxz
stos
dec
lock
mulb
lods
pop
push
mov
loope
push
cmpsb
ss
pop
cmpsl
dec
mov
adc
lock
out
repz
xchg
cmp
xchg
sub
pop
nop
aad
adc
dec
sti
sub
in
cs
xchg
int3
lahf
out
lcall
mov
jns
js
outsb
insb
idiv
insb
push
adc
cmc
bound
icebp
pop
mov
aaa
nop
xchg
call
aaa
shrb
bound
ja
lea
mov
js
popf
sbb
int3
lret
jle
movsl
and
jge
jmp
data16
lcall
mov
sbb
and
sub
xchg
xlat
fbld
popf
fst
mov
out
rolb
shl
xchg
ja
xor
sbb
les
inc
mov
repz
dec
inc
jo
jg
push
xchg
rcl
enter
int3
fdivs
jge
mov
xlat
fs
cmp
enter
sbb
movsl
jecxz
out
mov
pop
and
cmc
and
ja
js
pushf
in
out
fnsave
outsb
js
and
cmpsl
aas
inc
sarb
fs
into
sarb
adc
sti
fidivs
xlat
inc
inc
insb
or
movsb
adc
insb
cmp
lds
cmpsb
mov
ja
mov
movsl
pop
push
clc
jnp
nop
lock
sub
insl
jno,pt
and
jg
and
dec
push
sub
imul
mov
adc
push
pop
mov
sub
cmp
pop
xor
jnp
push
sbb
or
jns
movb
pushl
daa
cmpsb
lea
fucom
or
ret
mov
push
into
test
xchg
sub
nop
test
xchg
add
and
mov
push
mov
outsl
xchg
jle
mov
and
jp
xchg
or
shrl
mov
jl
fisttps
add
imul
cwtl
aad
in
adc
ljmp
jne
pop
mov
or
sub
mov
or
lock
jbe
sub
xor
dec
jno
pop
adc
xor
addr16
out
xchg
movsl
xchg
pusha
popa
testb
cmpsb
jno
icebp
sti
mov
das
mov
in
jae
mov
imul
stc
mov
mov
mov
push
mov
mov
and
cltd
push
add
add
adc
pop
pop
pop
xchg
pop
adc
into
mov
mov
or
out
mov
inc
jl
fcmovb
jge
fbstp
mov
inc
adc
gs
sahf
cli
data16
adc
sbb
jne
nop
jne
jp
mov
jo
cmp
cmp
int3
andl
mov
gs
sub
sub
mov
popa
pop
cli
sub
in
es
inc
push
int3
mov
and
jo
sub
sarl
testl
cmp
scas
cltd
cld
popa
adc
dec
push
pop
repnz
aam
int3
dec
js
clc
test
add
cmp
movsl
incb
popa
test
cmp
jno
in
arpl
dec
stos
xor
jmp
fldenv
mov
xor
push
mov
inc
rcll
jbe
std
ljmp
jp
xchg
lret
je
inc
fisubrl
xchg
mov
or
cs
jno
enter
int3
jo
clc
cmpsb
arpl
cli
push
inc
inc
loope
jbe
fisttpl
enter
aam
divb
addr16
scas
stc
dec
mov
ljmp
add
and
adc
arpl
inc
out
leave
xor
js
lea
sbb
test
add
xchg
pop
dec
test
jmp
lods
pop
jno
test
jbe
shrb
je
pop
movsb
das
xor
flds
add
adcl
popa
jo
fs
popa
lods
or
sarb
cmpsb
clc
mov
and
popf
mov
sub
push
fwait
es
cmp
and
mov
lcall
sub
xor
lcall
mov
xor
adc
push
add
mov
jecxz
xchg
insb
xor
sbb
es
cmp
mov
jge
add
imul
in
jns
dec
mov
cmp
das
pop
out
mov
or
bound
ficoms
rorl
xchg
hlt
xchg
imul
sub
aaa
xor
das
dec
lods
stc
jle
andl
xor
push
nop
outsb
imul
call
insb
test
jp,pn
inc
jg
pop
dec
pop
aaa
xchg
mov
mov
sbb
loope
or
push
shl
xchg
pop
mov
jb
xchg
in
fisubrl
jb
and
cmpsb
push
pop
cmp
aad
dec
jle
ljmp
out
mov
dec
mov
pop
dec
push
xchg
icebp
and
sbb
xchg
cltd
inc
in
jns
sub
ds
push
xor
push
xchg
sub
push
push
pop
cmp
lret
pop
jne
lds
insb
sub
fstpt
or
pop
shr
pusha
xchg
sbb
inc
dec
adc
sahf
inc
push
fisubs
and
dec
iret
test
in
mov
movsb
xor
ret
xchg
in
inc
stos
gs
mov
ja
adc
pop
mov
sbb
push
push
xchg
dec
mov
add
sarl
arpl
insl
xchg
fwait
push
jbe
inc
call
inc
std
mov
jb
xchg
sarl
stos
scas
cmpsb
pop
std
sub
xchg
movsb
iret
dec
mov
pop
repz
mov
call
or
pop
add
int3
mov
xchg
imul
and
repz
aaa
mov
inc
movsl
push
lock
mov
push
daa
outsb
test
in
fdivs
or
in
sub
inc
in
cmp
inc
dec
push
repz
ret
or
cmp
std
and
in
push
cmc
shrl
dec
cmp
and
lahf
rcrb
sbbb
mov
insl
push
call
jg
js
mov
aaa
mov
cmp
repnz
xchg
sub
mov
ficoml
lods
rclb
fwait
call
iret
sub
add
cvtdq2ps
ret
xchg
mov
jne
and
sbb
les
mov
insb
add
call
mov
or
ss
movzwl
add
xchg
les
mov
lcall
xor
xor
push
aad
xor
inc
jnp
lret
adc
in
mov
pop
xchg
mov
lods
sarb
cmp
sti
push
fidivs
xlat
push
xchg
push
sub
mov
or
sbb
sub
or
lds
dec
inc
xor
lods
add
popf
inc
sub
test
icebp
mov
pop
fildl
xor
pop
roll
dec
pushf
mov
add
lods
cmp
decb
push
pause
dec
fimull
push
jb
add
mov
ss
iret
shlb
jp
push
jp
sahf
imul
xchg
adc
xchg
out
sbb
sahf
jnp
push
lret
int
push
insb
in
lods
in
dec
movsb
in
rcr
sbb
xchg
mov
mov
mov
rcrl
dec
lock
pop
dec
or
js
mov
test
movsl
inc
push
push
lods
into
pop
repnz
inc
mov
loop
cmp
test
xchg
fstpt
cmp
jmp
inc
xorb
ds
xchg
pushf
xchg
jnp
push
movsb
jge
mov
fsubrl
mov
jecxz
xor
mov
add
pop
pop
jmp
test
lock
mov
iret
arpl
js
jecxz
pop
mov
ucomiss
ror
arpl
sub
outsb
stos
stc
add
je
out
or
push
mov
orl
dec
inc
xchg
sub
adcl
push
push
adc
and
inc
mov
fists
xor
xchg
mov
mov
pop
aam
push
std
sbb
fadd
es
inc
fwait
test
or
pop
xor
mov
cmpb
xor
mov
icebp
addr16
pop
loopne
cmp
sti
jp
repnz
in
jb
or
sub
adc
xchg
cmpsb
int
adc
sub
or
xchg
mov
in
aad
sahf
call
out
ficompl
test
out
int3
movsb
jo
pop
cli
movsb
fidivs
in
inc
sbb
popa
daa
xchg
xor
fists
repz
cltd
xchg
xlat
repz
das
aaa
push
jo
sub
dec
imul
popf
push
mov
cmp
xchg
mov
sub
pusha
xor
rcr
cmpsl
imul
pop
ret
push
sbbb
inc
fcomp
setl
xlat
adc
push
xor
out
out
xor
pop
arpl
aad
mov
outsl
aad
and
pop
dec
arpl
inc
xlat
inc
mov
mov
ret
outsl
mov
shrb
sub
jo
mov
dec
fwait
and
shll
xor
inc
add
adc
test
test
cmc
pop
roll
repnz
add
push
pop
popf
and
pusha
sub
inc
insb
sahf
xchg
repz
xor
and
cwtl
cld
cmpsl
daa
mov
iret
bound
pop
movsb
mov
and
push
cld
test
jnp
test
cmc
pop
test
mov
add
sub
jge
daa
vmwrite
push
mov
xchg
call
xchg
pop
jb
lds
or
sar
lret
push
push
fnsave
jle
mov
call
jns
pop
add
mov
xchg
lret
xchg
xchg
in
jle
sar
call
cmp
sub
popa
dec
jmp
jbe
sub
in
add
xchg
mov
je
daa
bound
out
scas
pusha
or
push
mov
mov
movsb
pop
jno
xlat
into
insb
sbb
add
test
cmp
mov
mov
sub
or
mov
pushf
adc
and
add
mov
adc
cmp
jno
cs
mov
int3
jae
mov
arpl
icebp
cmp
loopne
or
in
inc
jge
test
test
ret
mov
pop
sahf
add
push
insl
fistps
fistpl
cs
cmp
movsl
inc
dec
fsubrs
or
mov
adc
jae
push
lock
enter
jecxz
inc
mov
pop
inc
jne
ror
push
xchg
cmpsb
enter
pop
add
ss
ficoml
ljmp
movsl
pop
adc
xchg
sbb
les
int
pinsrw
aaa
lahf
adc
enter
cmc
call
fidivrl
adc
repz
cmovae
or
push
inc
and
divl
add
pop
scas
cmpsl
in
mov
repz
lret
lret
or
xor
add
pop
push
sti
xor
ret
xchg
ret
aaa
mov
test
cld
out
cmp
mov
js
cmp
dec
mov
jns
aam
sub
int3
ret
sbb
or
stos
push
int3
adc
loop
mov
rcl
and
les
xlat
push
sbb
test
mov
loope
xchg
arpl
dec
fisubrs
cmpsl
nop
in
jo
cmovp
lods
ja
and
dec
pop
mov
mov
hlt
gs
jbe
fsubr
adc
and
mov
scas
jns
ss
mov
cltd
xchg
iret
adc
popf
sahf
cmp
sub
add
pop
mov
movsl
push
je
repz
cmp
dec
loopne
mov
aas
push
xor
nop
stc
jp
push
lret
and
sbb
jge
in
xchg
in
xor
aas
js
loop
sub
cld
push
adc
ja
dec
dec
outsb
dec
fidivrl
sbb
fidivrs
or
lea
or
stc
and
rol
pop
sub
add
ss
mov
mov
bound
ss
adc
mov
rcll
or
mov
popf
pop
pop
push
push
add
rcrw
sbb
inc
shr
push
cmp
icebp
pushf
and
jg
push
rcll
fldt
pop
xchg
test
icebp
adc
dec
and
xor
xchg
and
mov
and
movsl
aam
es
repnz
in
pop
cmp
pop
lods
inc
and
in
pop
pop
xchg
xchg
bnd
shll
xchg
xor
lods
mov
xor
call
inc
sbb
adc
shrl
sbb
push
hlt
imul
les
int3
dec
out
in
dec
stos
or
mov
jnp
push
ret
pop
cmp
push
dec
jmp
in
jno
jns
je
jg
imul
mov
insb
mov
call
incl
scas
sbb
ret
mov
imul
popa
xor
rorb
push
add
and
push
jl
or
cmpsl
and
cmp
pushf
out
cmpsb
jb
or
mov
out
nop
int3
inc
push
and
dec
sbb
aas
pushf
xchg
fisubl
aaa
xchg
sti
mov
jl
in
mov
testb
ljmp
mov
nop
adc
incb
xor
push
outsl
and
sbb
pop
fs
jle
cmp
xchg
jne
fwait
xchg
add
insb
insl
dec
mov
mov
pusha
pop
addr16
insb
imul
sub
inc
inc
or
mov
loop
xor
loope
add
push
mov
xchg
xchg
xchg
mov
stos
jb
xchg
insb
sti
ret
mov
fbstp
cmp
sub
inc
aam
inc
rclb
movsl
pop
arpl
push
mov
out
rorb
lahf
xchg
jbe
jbe
je
fdivr
mov
inc
sub
jle
push
xchg
xor
je
cmp
mov
into
out
cmp
sbbb
jg
sbb
push
mov
dec
mov
sbb
ret
jp
add
data16
lcall
xchg
int
xchg
and
mov
clc
jne,pn
gs
xchg
and
pop
cmp
fsubp
in
mov
jmp
add
aaa
xor
jno
lods
xor
cmp
mov
test
aad
repz
and
pop
shlb
fs
inc
cltd
or
xlat
sub
xchg
and
add
adc
inc
scas
mov
jne
fdivrl
pushf
loope
jo
inc
pushf
insb
or
aam
jns
fidivrs
negl
js
shlb
hlt
xchg
adc
fadd
sbb
insl
cmp
test
xor
mov
pop
push
pusha
imul
sub
inc
sub
dec
adc
js
adc
fdivs
cltd
pop
loope
fnstenv
loop
sbb
fidivrs
loopne
imul
int3
int
cmp
push
xchg
lods
push
add
test
test
sbb
xor
sub
cmpsb
sub
mov
fbld
fcmovb
arpl
pushf
mov
xor
popa
pop
lret
xchg
or
and
sub
push
or
fs
pop
in
sbb
test
pusha
add
mov
fistl
mov
inc
sub
scas
xchg
push
cmc
out
shll
add
lods
cmp
mov
rcll
mov
in
int
insb
insl
sub
in
cmp
sub
dec
repnz
add
mov
cmp
mov
pusha
gs
rclb
pop
and
sbb
push
adc
bound
or
dec
fisttpll
lcall
mov
mov
pop
adc
fcomp
mov
data16
mov
insb
das
test
ja
imull
or
loope
dec
fdivrl
test
arpl
sbb
and
pop
subl
or
lock
xorb
shll
adc
sub
rclb
std
in
scas
cmp
mov
jp
mov
into
or
xor
ret
mov
rcr
and
test
aaa
mov
negb
pop
sbb
es
jecxz
push
aaa
sub
insb
jnp
jge
push
or
sbb
subb
xorb
mov
sbb
loopne
xchg
movsl
outsb
rcll
dec
mov
xor
cmpsl
cmc
jnp
mov
sbb
dec
lods
aad
test
pop
lahf
lahf
ja
cmp
jns
lea
push
mov
popa
loopne
push
loop
mov
in
xor
loope
mov
and
and
sarl
jp
inc
cltd
mov
sub
shlb
sub
aaa
mov
mov
mov
jle
xchg
adc
add
lock
mov
scas
movsb
fiaddl
add
fst
ret
lret
mov
movaps
divl
xchg
or
aaa
stos
inc
lret
jb
lahf
xor
cwtl
ret
xchg
jb
dec
jecxz
imul
cmp
mov
iret
outsl
popa
lea
incl
xlat
push
sti
inc
in
fcomp
lods
add
xor
pop
xchg
and
aaa
daa
inc
jg
imul
sbb
adc
inc
dec
arpl
adc
cld
inc
xor
imulb
mov
and
push
dec
lock
pop
ljmp
das
sbb
into
sub
jne
pop
jae
shr
rcr
out
mov
jl
mov
imul
or
or
nop
stc
das
dec
ss
inc
mov
data16
adc
dec
push
jmp
sbb
cmpsl
sti
loope
sub
or
les
out
scas
push
cmp
stos
mov
mov
mov
mov
inc
sarb
aad
sbb
or
jne
verw
cmc
dec
dec
js
insb
mov
icebp
lret
fildl
xlat
cli
mov
dec
inc
popf
pop
imul
lods
fwait
dec
fcompl
dec
add
test
push
movsl
ljmp
dec
push
in
lahf
xor
mov
lods
loope
pop
mov
sub
test
sbb
xchg
das
rolb
aaa
aaa
roll
adc
cs
into
int
and
jo
xchg
sbb
inc
addr16
xor
mov
sbb
je
lock
xchg
xchg
into
pop
mov
pop
and
iret
insl
cmp
cmpsl
xor
sub
pushf
jne
and
mov
ret
loopne
pop
xlat
seto
pop
xchg
aas
loopne
sub
pop
pop
mov
dec
xchg
xor
lea
arpl
bound
clc
cltd
xlat
jp
in
lcall
sbb
mov
sub
pop
leave
xchg
mov
es
sar
mov
jbe
pop
sub
inc
mov
mov
imul
dec
call
cs
mov
bound
inc
mov
ja
out
movb
filds
ja
lahf
mov
loope
sbb
push
cmpsl
lahf
xor
sbb
sbb
mov
jl
rorl
cmp
pop
pop
mov
push
fstpt
ficomps
data16
sbb
xchg
jg
std
or
adc
mov
mull
in
push
scas
xlat
xor
push
mov
mov
or
ds
inc
fiaddl
jo
jmp
sbb
pop
icebp
in
faddl
shrl
inc
cli
ret
add
push
movsl
lret
lret
lods
and
ja
sub
insl
fs
shlb
push
dec
mov
scas
cmp
cmp
jmp
push
addr16
mov
mov
inc
clc
push
mov
adc
adc
jle
outsl
orl
stos
add
xorl
rorb
cmpsb
or
orb
and
out
ljmp
fstpl
adc
sbb
mov
sub
xchg
call
lcall
stc
pop
mov
push
jmp
std
cmpsl
gs
adc
iret
inc
dec
dec
or
dec
adc
dec
call
icebp
idiv
ret
and
std
dec
sub
jb
shrl
imul
lret
jo
into
lcall
xchg
call
pop
aam
cli
sbb
add
xor
rcrb
outsl
or
test
dec
je
stc
std
jmp
sub
mov
in
bound
xor
roll
mov
pop
dec
and
cwtl
pop
or
jo
or
pusha
aas
add
dec
ss
cmp
aas
outsb
xchg
push
leave
inc
push
outsb
dec
xlat
mov
cli
stos
ljmp
loop
sti
sti
loope
push
xor
iret
adc
add
pop
and
repz
scas
sub
adc
cmp
add
mov
fisubs
or
push
jns
imul
cld
pop
and
shld
test
push
mov
dec
mov
dec
mov
xor
mov
inc
xchg
cmp
mov
mov
mov
jno
in
xchg
call
repz
mov
repz
mov
stc
aaa
and
mov
leave
sahf
cld
adcb
cmpsb
rclb
xchg
mov
fnsave
call
inc
sub
add
shlb
push
jbe
inc
jg
pop
call
faddl
xchg
pop
xchg
mov
ljmp
sub
mov
inc
mov
mov
sub
push
push
aas
adc
scas
jl
adc
adc
lods
imul
or
cmc
lea
add
pop
cmc
int
sbb
dec
sbb
inc
sbb
ret
xchg
jp
xor
sti
call
jecxz
mov
inc
inc
inc
mov
sub
lock
aaa
xchg
lock
sub
rcrb
xchg
cmc
fnstenv
pushf
lret
sahf
mov
mov
mov
pop
std
sbb
sahf
mov
insl
fldenv
std
push
sub
xchg
inc
imull
jge
push
rcll
sbb
mov
fisttps
loopne
mov
ljmp
mov
mov
or
jbe
or
fucomi
imul
inc
inc
test
addb
mov
call
xor
inc
lahf
testb
and
enter
mov
jg
inc
push
sbb
stos
lret
pop
dec
push
int3
sub
push
mov
jmp
mov
mov
push
or
cmc
test
cmp
inc
data16
out
fcoms
cmpsb
inc
jo
in
sbb
pop
mov
aas
jle
inc
cmp
jmp
cli
push
out
test
frstor
jae
stc
jle
jae
pop
lods
scas
sub
inc
nop
or
mov
jne
sub
push
add
pushl
ljmp
cli
test
sub
mov
test
lahf
fisttps
hlt
hlt
mov
push
bound
gs
dec
xchg
mov
jle
adc
mov
mov
cs
or
out
and
add
and
mov
scas
stc
sbb
sbb
hlt
daa
mov
mov
repnz
es
jmp
test
or
xorl
sub
pusha
ss
sbb
add
sahf
movsl
mov
andl
xorl
adc
xor
fcmovbe
jp
lock
cs
sub
pop
sbb
jg
fnstcw
idivb
or
out
lahf
and
dec
test
hlt
push
cmpsb
adc
and
inc
mov
popa
sbb
aad
dec
dec
fwait
dec
mov
fldenv
xchg
add
out
and
lret
xchg
sbb
xlat
add
push
pop
shll
aam
mov
in
mov
mov
test
sbb
adc
cwtl
mov
mov
adc
lea
insl
gs
add
out
dec
fwait
mov
mov
stos
mov
inc
icebp
mov
rorl
adc
in
push
cmp
mov
dec
jecxz
ljmp
loopne
push
inc
mov
ret
addb
cmpsb
clc
xor
cmpsb
sbb
cmp
xorb
xchg
or
inc
cmpb
jp
clc
jnp
dec
dec
cwtl
in
xchg
push
sub
test
adc
xor
adc
mov
daa
jae
jle
push
push
add
cmp
test
ror
mov
or
lock
add
inc
rcrl
cmp
fdivl
enter
mov
pop
jl
or
jecxz
lods
fstp
shlb
shr
lods
inc
sti
and
sub
cmp
dec
insl
popa
cltd
xchg
adc
push
fidivrl
push
cmpsb
pop
fisubrl
gs
mov
cs
clc
popf
inc
push
cltd
dec
sub
jno
lret
hlt
in
lret
push
pop
addr16
mov
shll
into
popa
movsl
aad
jle
fsubs
inc
inc
or
test
mov
jge
mov
jne
fsub
mov
xchg
adc
stos
imul
addl
mov
mov
insl
dec
mov
mov
dec
fsubs
mov
sub
in
imul
shlb
inc
adc
dec
dec
dec
inc
sub
rorl
sbb
jge
and
dec
mov
ja
stos
jg
and
jp
sub
push
and
add
imul
js
or
sub
mov
dec
lods
leave
pushf
mov
iret
loopne
cmp
mov
cmpsb
hlt
push
hlt
js
icebp
push
xchg
push
push
sbb
inc
out
bound
xor
sti
icebp
andb
dec
rol
fistps
icebp
or
cmp
jno
pushf
icebp
mov
sub
sarl
iret
movsl
dec
jo
rorb
dec
jmp
dec
pop
ljmp
icebp
movsl
out
and
sub
push
xchg
inc
notb
sbb
stos
adc
mov
and
pushf
adc
or
adc
cmp
jns
out
jne
in
xor
repz
mov
add
jno,pt
shll
nop
repnz
sbb
mov
repz
and
call
mov
pop
arpl
out
lds
cmp
divl
loop
leave
xor
clc
cmpsb
pop
mov
jbe
cld
int3
xchg
cmpb
out
push
jle
xchg
sarl
fcomi
repz
gs
inc
jecxz,pt
push
sti
insl
imull
fs
jmp
in
sbb
xor
das
inc
mov
lods
cmp
mov
and
cmp
mov
lods
mov
out
lcall
add
pop
filds
xor
mov
je
cmp
mov
cmc
add
mov
movsb
fnstenv
pusha
cli
leave
mov
paddd
xor
lret
xor
lods
int3
aaa
sbb
xchg
lret
mov
mov
aaa
cmpsl
mov
or
xchg
xor
push
mov
mov
fldcw
pop
add
outsb
fnstsw
pop
mov
pop
test
or
sahf
testb
add
test
jmp
xchg
sahf
push
and
filds
sub
fldt
adc
mov
lds
aaa
jne
cmpsb
and
xorb
add
push
jns
xor
inc
adc
and
xchg
test
push
sbb
insb
mov
sub
push
xlat
mov
mov
mov
push
imul
sbb
ror
out
aad
dec
fnstsw
rdpmc
add
push
or
sahf
stos
loop
rcr
dec
mov
rcr
popf
push
dec
aam
sub
sub
mov
xchg
les
mov
sarb
ja
into
sbb
orb
mov
aad
iret
add
push
xor
js
push
push
cs
mov
adc
movsb
scas
test
in
fisubs
xchg
mov
inc
popa
into
or
mov
movsb
and
js
cmpsl
xchg
insl
adc
subb
rol
add
jp
sar
add
aaa
mov
lret
adc
dec
popa
inc
push
mov
das
pop
pusha
pop
xchg
mov
xchg
cmpsl
mov
int3
or
mov
mov
mov
mov
in
sub
cmp
cwtl
scas
arpl
jns
cmp
cli
push
insb
xchg
mov
test
mov
iret
cltd
dec
int3
lahf
pop
js
mul
or
push
sbb
fnstcw
ja
push
mov
stos
inc
insb
pusha
arpl
sbb
jns
cmp
mov
lret
popf
lret
fcoml
mov
pop
xchg
cmp
mov
inc
dec
cmpsl
sub
inc
fimull
xchg
aad
mov
iret
cmp
push
aaa
sti
and
cmp
adc
lock
adc
lret
or
sub
addl
add
sar
cmp
push
sahf
push
test
not
jmp
xor
cmc
dec
aad
dec
popf
mov
sbb
push
icebp
hlt
sbb
lcall
stos
test
shlb
pop
pop
mov
xchg
and
scas
or
mov
or
inc
mov
mov
or
sbb
std
and
xchg
adc
ja
dec
adc
mov
adc
imul
shll
loope
lahf
and
and
ja
mov
pop
insb
xchg
shrl
cwtl
in
fisttpl
pop
negl
add
cs
gs
push
out
cmp
es
or
dec
mov
sub
shrl
push
gs
push
repnz
lret
jle
inc
cmp
xor
add
in
xor
jmp
cld
dec
mov
mov
gs
jmp
cltd
enter
mov
sbb
mov
mulb
inc
inc
stos
xlat
adc
jmp
mov
je
mov
inc
fmulp
imul
mov
mov
or
int
push
popa
jecxz
mov
insb
sbb
pop
stos
andl
ds
mov
cmp
xchg
mov
xchg
sbb
inc
arpl
gs
adc
sbb
mov
movsb
adc
out
movsb
stc
mov
mov
jno
mov
mov
std
in
pop
int
jbe
push
stc
xchg
or
jns
movsb
mov
jp
pop
inc
push
sbb
daa
push
push
jmp
inc
lea
jo
lahf
shrb
fildl
mov
shll
lds
ljmp
int3
xchg
adc
push
mov
xchg
outsb
sbb
cmp
stos
xchg
sub
scas
pop
adc
mov
mov
dec
lret
arpl
call
sbb
outsl
outsl
rcl
bound
sbb
xchg
cmc
mov
shll
adc
or
imul
cwtl
sub
pusha
insb
pop
dec
cmp
cld
xor
jb
ljmp
pop
pusha
mov
and
xor
ret
inc
lret
insb
icebp
xchg
dec
xor
mov
xchg
adc
push
aas
jl
and
or
pop
mov
adc
pop
xor
fistps
and
push
pop
pop
jbe
das
dec
jbe
cmp
scas
pop
lea
cmp
cld
ret
fldenv
cmp
push
and
push
or
mov
xlat
cmp
fwait
mov
stc
mov
xor
mov
xor
loop
jae
in
push
in
push
arpl
push
pop
push
xchg
fistl
pop
sbb
dec
int3
adc
sub
push
in
or
das
or
mov
cmpsl
pop
imul
outsl
lahf
lret
push
dec
mov
or
and
notl
nop
jle
ret
pusha
xor
lea
xor
adc
loope
dec
out
aam
lahf
repnz
push
scas
stc
jecxz
aam
les
mov
pop
mov
dec
jle
mov
movb
cmp
je
xchg
mov
ljmp
aam
push
nop
xlat
push
lock
dec
sbb
incl
pop
mov
mov
dec
in
push
mov
pop
imul
adc
or
mov
mov
test
arpl
jmp
pextrw
push
sub
mov
adc
xchg
pushf
loopne
dec
mov
cmpl
and
mov
test
push
xor
arpl
mov
add
data16
out
mov
repnz
int
cmp
dec
pop
or
pop
cmp
sub
cmc
mov
in
cmp
lds
ljmp
jmp
add
push
adc
adc
mov
jmp
xchg
pushf
add
jmp
rcrb
xor
popa
or
in
cmpsb
jo
and
notb
cmpsb
fsts
xchg
mov
aas
mov
push
mov
ficomps
sub
lret
pop
ret
add
cmpl
adc
lods
push
int
push
sbb
pop
cmp
mov
ljmp
mov
push
sbb
mov
mov
dec
pop
mov
dec
insb
std
js
lea
jae
jo
cs
mov
adc
je
mov
add
dec
orl
ret
lds
or
jb
scas
pop
mov
mov
lret
cwtl
lahf
fadds
mov
xchg
xor
int
push
jno
out
push
aad
arpl
lcall
mov
test
and
pop
lods
push
mov
or
into
icebp
dec
das
jmp
int3
in
pop
fsubl
mov
push
outsl
pushf
je
xchg
cmp
scas
hlt
sbb
jo
out
cmp
cmp
sbb
rolb
icebp
ss
pushf
out
dec
sub
jmp
xchg
xor
mov
in
stos
xlat
lods
fstps
imul
adcb
push
sub
sub
mov
or
lcall
adc
dec
lock
gs
sbb
dec
mov
clc
out
test
push
xor
adc
mov
or
je
or
sti
ret
cmpsl
divl
sub
std
dec
push
xor
ja
jns,pn
imul
loop
fldt
enter
aam
dec
xor
stos
or
xlat
xchg
divb
movsl
fucomp
push
inc
push
ja
jno
in
cmpsl
lods
jl
std
ja
xchg
fsubs
jp
out
push
stc
arpl
jg
jge
or
lods
mov
xchg
adc
mov
ret
arpl
hlt
push
icebp
pcmpeqd
pop
insb
pusha
xchg
mov
jmp
int
rol
stos
inc
hlt
xlat
pop
cmp
pop
sbb
xor
lods
or
mov
outsb
jge
data16
add
lods
cmp
mov
mov
icebp
xchg
shll
pop
test
shrl
adc
fistpl
push
aam
push
jb
clc
loop
add
lods
leave
out
jns
clc
iret
xchg
sub
lods
adc
pop
dec
in
fimull
xchg
in
enter
and
or
mov
mov
sub
push
icebp
fcoml
dec
and
push
push
out
lock
mov
scas
aam
and
repnz
scas
mov
jle
push
or
mov
movsb
cld
inc
lods
and
xchg
adc
sub
hlt
jle
movsb
push
sahf
and
pop
and
push
dec
out
js
into
push
lods
and
mov
dec
imul
std
lock
adc
push
pop
adc
adc
mov
or
push
sub
sub
dec
loopne
insb
adc
fwait
gs
jmp
mov
add
sarb
cmpsb
aas
fsubl
pop
cwtl
int3
jle
ss
xor
sub
inc
ja
xchg
dec
cmp
add
jle
pop
mov
cli
enter
xor
or
shlb
sbb
adc
sbb
jnp
decl
push
hlt
push
addl
push
sub
dec
test
in
pusha
decb
adc
pop
dec
xchg
xlat
dec
cs
xor
cltd
xor
pop
out
mov
jne
xor
popa
add
push
jle
pop
hlt
xchg
push
cltd
addr16
pop
pop
fldenv
fwait
ret
mov
das
dec
sbb
xchg
xor
pop
stos
jge
mov
or
inc
lcall
mov
jp
ficoml
jb
mov
roll
das
lods
rorb
xchg
popa
pop
icebp
outsl
shl
outsl
xchg
inc
and
rclb
enter
dec
aam
fcomps
or
inc
das
mov
adcl
adc
ja
jle
and
mov
out
pop
inc
fisubl
dec
mov
or
dec
pop
and
or
sti
pop
sbb
mov
xor
cmp
and
loop
inc
icebp
dec
xlat
outsl
mov
pop
mov
inc
paddusw
adc
xchg
negb
rcrb
out
pop
push
push
mov
test
push
mov
cmc
ja
mov
insl
stos
push
maxps
mov
fs
xchg
sbb
dec
jle
test
mov
jl
push
mov
jne
add
scas
fldt
test
pop
lds
cmpl
imul
movsb
mov
xchg
out
mov
mov
push
aam
mov
push
push
cmp
mov
das
push
pusha
inc
inc
cmp
push
mov
pop
add
aam
fldenv
sub
mov
sub
mov
movsb
cwtl
add
and
mov
xadd
subb
dec
and
loopne
push
rclb
dec
adc
mov
es
sbb
push
fadds
or
dec
data16
and
dec
loope
cwtl
add
sbb
push
sbb
into
xchg
out
inc
sbb
pop
imull
add
ljmp
sub
inc
xchg
add
add
dec
cmp
outsb
sti
mov
push
jl
cmp
arpl
sti
pop
mov
inc
mov
sub
dec
dec
out
xchg
push
mov
push
addr16
xchg
fmull
jb
pop
out
mov
jp
push
out
or
push
ret
mov
mov
leave
adc
mulb
jb
pop
ja
insb
dec
inc
out
in
inc
ljmp
jno
mov
adc
in
cs
mov
push
sub
push
adc
xchg
jno
cmp
xor
iret
mul
mov
fdivs
pop
sbb
sarb
jne
out
insb
add
mov
jb
fisttpl
or
mov
decb
lahf
leave
mov
push
loope,pt
repnz
push
xor
push
and
lahf
lahf
testb
inc
mov
push
js
mov
jno
dec
loope
enter
pop
clc
jmp
add
pop
or
pop
xchg
adcb
xchg
ljmp
sbb
cmpsb
mov
sub
cmp
int
jge
push
stc
ljmp
cmp
and
or
add
mov
fcomps
mov
mov
lcall
jbe
xor
pusha
jno
mov
jecxz
btc
pusha
xor
xorb
pop
repnz
gs
imul
gs
shll
fwait
push
pop
out
or
mov
shrl
mov
imul
out
inc
jecxz
xlat
shll
into
inc
enter
xor
aaa
xchg
test
out
pinsrw
test
jno
cld
mov
jnp
test
xchg
jae
cmp
fcompl
decl
pshufw
ficompl
js
jne
frstor
cmp
popf
lods
cmpsl
lea
dec
push
mov
js
std
push
cmp
mov
mov
push
sub
outsl
mov
jl
push
ss
shl
push
adc
data16
or
jno
shrl
dec
leave
mov
xor
push
rcrl
es
sbb
mov
lahf
mov
mov
or
mov
out
in
clc
push
out
popa
es
filds
popa
cmp
sub
xchg
inc
inc
jl
outsl
and
pop
aas
and
fstpt
add
lcall
inc
adc
adc
fdivs
cltd
lahf
mov
mov
jge
and
dec
in
sub
inc
arpl
pop
je
xchg
scas
mov
xor
push
pop
cmpsl
pop
mov
jno
fwait
pop
xchg
lahf
push
js
cmp
or
inc
xor
or
mov
pop
adc
mov
xchg
lds
mov
add
jb
inc
sbb
std
xchg
xchg
mov
notl
pop
mov
adc
lods
and
jne
lock
iret
mov
sarb
sbb
cwtl
mov
sahf
adc
mov
push
int
out
sbb
xchg
inc
jle
push
cmp
data16
negl
adc
cltd
andl
and
lahf
inc
add
push
adc
fcoml
xchg
cmpsb
shrb
loop,pn
cmp
or
fwait
aad
repnz
and
test
mov
push
scas
out
dec
in
sub
ljmp
pop
mov
das
mov
inc
add
into
in
cmc
dec
aad
popa
scas
leave
decb
mov
cmp
pop
inc
lods
cmp
cmp
push
hlt
fsubl
jl
push
xor
inc
jae
jmp
js
or
and
jb
loope
push
rorb
inc
mov
adc
xchg
mov
jecxz
aam
push
or
iret
add
ss
repz
mov
ljmp
sbb
ret
pop
or
jnp
mov
mov
fmuls
dec
add
loope,pt
iret
cmp
and
mov
push
decl
adc
and
in
jmp
loope
dec
adcb
adc
mov
enter
or
push
stos
or
and
push
dec
mov
cmp
insl
aam
cmp
push
xor
pop
inc
push
xchg
jns
jmp
and
and
jbe
xor
push
push
push
arpl
push
into
test
xor
pop
aam
dec
insb
inc
pusha
shll
add
sbb
mov
iret
rolb
mov
subb
in
lods
sub
aaa
cmp
dec
push
mov
add
test
pop
out
loop
mov
dec
and
or
test
sbb
jb
stos
lret
in
jo
push
mov
or
dec
or
mov
int3
popa
push
jae
sahf
dec
push
push
xor
js
imul
subl
lcall
test
cmp
mov
inc
mov
pop
aaa
jmp
jbe
cli
int
test
leave
and
jne
mov
inc
mov
inc
fmull
fnsave
clc
xchg
imul
xchg
inc
out
andb
adc
pop
xchg
test
das
stos
jg
hlt
jle
pop
loop
mov
and
js
or
mov
sub
cltd
or
mov
adc
lods
dec
and
mov
fmuls
lods
mov
outsl
jp
nop
adc
or
test
sbb
leave
stos
lods
xchg
or
mov
jbe
sub
xor
fldl
arpl
js
stc
adc
lods
push
sbb
add
and
add
push
jmp
pop
xor
dec
cmp
mov
mov
inc
pusha
jecxz
aas
stc
cmp
xchg
call
stc
xor
sub
push
sub
lods
ss
xor
inc
push
test
pop
cwtl
cs
sub
cmp
out
arpl
test
int
adc
sbb
or
rolb
xor
roll
or
sub
les
adc
int3
mov
mov
mov
inc
rclb
xlat
lds
imul
int
scas
faddl
add
jnp
aas
inc
sub
jl
aad
add
call
inc
and
in
nop
mov
ret
push
mov
mov
imul
js
shll
xchg
lods
scas
sbb
loopne
cmp
xor
and
test
out
mulb
imul
sub
push
mov
imul
call
sub
jle
mov
jge
outsl
mov
dec
por
cmpsl
fmulp
imul
mov
and
cmp
push
popa
bnd
or
shl
mov
scas
xor
add
data16
ret
mov
mov
sbb
pop
inc
sbb
push
clc
mov
rol
xor
dec
mov
out
xchg
mov
mov
fnclex
adc
cmp
das
fimuls
mov
pusha
adc
dec
mov
insl
mov
and
int3
lods
xchg
cmc
dec
fmuls
inc
in
ss
inc
and
push
and
cmpsb
addb
and
dec
cmp
ja
mov
jge
stc
aad
test
sbb
and
jg
and
cmp
pushf
jecxz
mov
sub
inc
cmp
lods
loopne
daa
sti
mov
sbb
dec
clc
out
mov
xchg
mov
mov
in
clc
inc
dec
out
mov
mov
inc
inc
insb
adc
xor
loop
icebp
inc
xchg
lods
jle
mov
mov
or
jbe
int3
rcll
pop
mov
out
lock
stos
hlt
pop
push
xchg
inc
jo
cmp
lret
push
xor
dec
ds
outsb
xor
or
jp
push
xchg
sub
cmp
ret
jnp
and
xchg
cwtl
adcb
mov
pop
imul
mov
push
adc
inc
jle
inc
repz
mov
or
aam
ficompl
hlt
call
push
sbb
fistpl
add
outsb
xchg
jne
cmp
out
arpl
xlat
cs
insl
adc
cmp
les
xchg
cmp
ret
inc
xor
and
cld
mov
out
movsb
pop
ret
mov
out
push
adc
cmp
or
cwtl
add
and
popf
repz
mov
std
adc
lods
pop
leave
and
inc
xlat
test
push
aas
mul
icebp
std
jle
sahf
dec
mov
pop
sub
dec
xchg
repz
loop
push
out
rcll
iret
jl
inc
call
lods
sub
dec
out
shlb
mov
push
pushf
rcr
loope
adc
or
or
push
dec
push
pop
xchg
les
scas
add
xchg
pop
push
inc
outsl
pop
iret
cmc
jbe
xchg
sbb
outsb
je
jbe
inc
mov
pusha
dec
cmp
mov
cltd
jmp
fnstcw
insl
sti
push
js
cld
inc
sbb
outsb
dec
adc
xor
inc
push
dec
out
test
sub
in
mov
leave
add
jp
cmp
sbb
or
pop
sarb
test
aaa
in
xchg
in
cmp
dec
outsb
iret
loope
bound
sub
add
mull
add
imul
lret
je
jl
add
xchg
movsb
sbbl
push
jmp
dec
cmpsl
repnz
and
jae
outsb
stos
lret
adc
dec
pop
mov
imul
arpl
inc
push
push
mov
out
jmp
push
popf
ret
dec
push
cmpsb
push
test
jg
ja
bound
or
fisttpll
jne
iret
add
jb
ficomps
notl
nop
lahf
fdiv
jle
inc
repnz
sub
out
pop
pusha
or
je
push
sbb
mov
imul
jno
mov
sub
test
ret
ret
jnp
xchg
jmp
mov
mov
adc
das
loope
jno
inc
stos
insb
inc
or
ja
dec
inc
or
sub
in
stos
and
stos
fdivl
dec
icebp
scas
into
xchg
xor
mov
call
push
cltd
pop
mov
enter
mov
cmpsl
xor
adc
jle
enter
lds
and
add
lds
out
fidivs
xor
arpl
imul
jae
pop
mov
cmp
mov
gs
ret
call
xchg
les
mov
and
movsl
fsubrl
jmp
ficoms
and
movsl
pop
frstor
movsb
jp
jg
adc
sbb
cmp
sub
jmp
dec
cmp
pop
push
push
dec
cmc
out
push
dec
push
xchg
mov
imul
out
push
adc
push
or
jge
aam
add
jns
sub
sbb
out
insb
mov
scas
aam
xchg
inc
ss
in
fnstenv
push
mov
cmpsl
xor
dec
popa
lods
xchg
pop
fs
bound
mov
leave
push
push
lods
cmpsb
leave
dec
es
mov
add
ffreep
aam
inc
jbe
lret
aaa
mov
dec
pushf
rcrb
mov
movsb
add
xchg
cltd
jb
test
lret
test
jne
and
hlt
arpl
popa
movsl
out
je
mov
fs
or
pop
mov
dec
sbb
pushfw
push
pop
lods
pop
pop
pop
or
mov
and
aad
push
mov
push
lcall
sub
dec
or
inc
push
add
cli
sbb
and
je
jp
loope
sti
dec
jp
and
push
mov
test
and
outsb
jne
jge
jae
xor
test
add
mov
mov
aam
lods
sub
mov
aad
ret
hlt
xor
jmp
roll
xor
sub
lcall
mov
test
sbb
pop
cltd
arpl
insb
stos
outsl
call
pop
mov
xchg
dec
arpl
mov
cmp
mov
cltd
jbe,pt
xchg
or
jnp
cmp
int
insl
fildl
xor
mov
lahf
fnsave
stos
sub
xlat
orb
xchg
fldenv
mov
pop
sarl
jp
and
add
nop
jns
jle
and
ficoml
cmp
cltd
pop
fildl
xchg
adc
fldenv
stos
icebp
das
loope
or
rcrw
jl
xchg
dec
push
pop
rorl
mov
dec
testb
shlb
add
inc
or
sub
jmp
mov
xchg
int3
or
inc
mov
ja
mov
push
mov
lods
popa
das
cs
xor
jae
jecxz
ja
lret
rclb
aam
test
testb
xor
lds
sbb
xchg
test
and
ja
fldt
sbb
inc
or
add
mov
xor
int
gs
rolb
mov
jmp
mov
and
int3
lea
cwtl
loopne
lock
jle
xchg
je
aas
push
fadds
xchg
adc
jg
arpl
aaa
scas
dec
loopne
pushf
jae
xor
inc
inc
test
sti
test
pop
fcmovnbe
jecxz
jo
dec
adc
sahf
cmp
lahf
pop
and
mov
dec
pop
inc
fadds
or
mov
ficomps
movsw
jnp
outsb
mov
pop
mov
aaa
mov
or
mov
pop
test
xchg
jmp
cmp
hlt
mov
pop
cs
rorb
push
xor
add
push
int
pop
aad
jecxz
cmp
test
jmp
mov
add
mov
xchg
lods
lcall
dec
cmp
jae
pop
sbb
sub
rolb
ja
dec
das
bnd
xchg
adc
out
je
enter
ret
js
into
sbb
call
pushf
sub
push
xchg
add
aas
jbe
sahf
add
bswap
jp
iret
sbb
addr16
rorb
pusha
fidivl
mov
pop
sbb
cmp
in
xchg
scas
shrb
pop
adc
cmpsl
xor
mov
ja
fs
adc
push
bound
clc
pop
filds
ret
dec
dec
jl
sub
and
inc
push
mov
add
xor
dec
inc
scas
movsl
xchg
cwtl
pop
fwait
jmp
daa
rcrb
xchg
pop
xor
mov
sahf
out
xchg
fsubrs
jge
ror
jns
xor
xor
in
mov
mov
leave
fisubrl
aaa
loop
lret
adc
movsb
inc
fstl
xchg
push
push
into
fmuls
dec
push
or
ret
imul
dec
push
pop
mov
add
lock
popf
dec
lds
push
mov
stc
inc
pop
shll
push
ss
stc
adc
fstpt
dec
aad
in
dec
mov
int
out
push
push
push
je
xchg
sbb
std
fstl
dec
bound
inc
rorb
and
andb
insb
ljmp
sarl
adc
pop
lret
mov
inc
push
into
cltd
mov
push
xchg
int3
and
fstps
enter
sub
fisttpl
pusha
ja
sbb
sbb
jnp
ret
sub
dec
lret
cmp
or
mov
ss
xchg
inc
ret
dec
iret
jo
ret
mov
mov
mov
mov
jmp
cmp
or
fdivs
lret
stos
aas
add
fisttpl
mov
adc
jge
xchg
jge
mov
iret
sub
out
xlat
test
leave
inc
in
arpl
mov
rorb
je
cmp
pop
push
in
popf
xchg
lahf
mov
xor
lock
jo
hlt
sbb
push
shlb
and
test
out
lds
mov
push
cli
or
sub
stos
sub
clc
mov
jb
stos
or
adc
jecxz
scas
jmp
repnz
jbe
cmpsl
mov
sbb
pushf
fwait
xor
int
repz
out
push
mov
adc
sbb
int
sarb
inc
mov
lods
or
jg
push
sbb
mov
adc
popa
scas
lret
aaa
jbe
mov
push
scas
xor
xchg
xchg
clc
clc
or
add
stos
enter
inc
pop
cmp
jle
les
addr16
adc
dec
pop
push
mov
pop
test
clc
jmp
mov
test
sub
and
mov
cmpsl
in
adc
mov
mov
sbbl
xchg
rol
xchg
mov
xchg
mov
js
jp
xchg
dec
or
mov
mov
lret
jne
aaa
xor
lea
mov
daa
xor
out
cmp
ds
and
lret
adc
movb
jle
cmpsb
lods
adc
cmp
sbb
into
mov
test
loop
add
mov
inc
scas
ljmp
jg
clc
testl
mov
inc
adc
jne
into
inc
cwtl
xor
pop
in
ds
ja
cwtl
mov
imul
mov
out
ja
loope
sti
pusha
iret
leave
xchg
dec
jne
push
movsl
cli
and
stos
shrb
and
sbb
aas
xor
jbe
sbb
sbb
pop
pop
pop
sbb
adc
lds
mov
out
or
mov
and
rorb
mov
out
add
sub
push
movsb
notb
aad
add
inc
inc
dec
xor
imull
xchg
pop
sub
stc
or
xor
les
pop
out
mov
fwait
dec
sbb
mov
out
mov
xor
inc
aaa
test
mov
imul
sbb
jo
mov
bound
jmp
fsts
aaa
inc
adc
lds
mov
mov
loope
faddl
in
lret
xchg
mov
cs
cltd
out
mov
push
dec
xchg
xchg
mov
sbb
sbb
insl
mov
xor
jg
out
xchg
jb
mov
jmp
add
sbb
daa
fwait
test
push
mov
xor
fwait
aaa
aad
lahf
jle
jns
or
dec
in
mov
and
aam
jns
inc
jb
nop
mov
cmpsb
adc
dec
out
sbb
and
and
mov
sub
inc
inc
adc
fistps
push
mov
cli
push
xchg
pushf
pop
cli
in
sbb
sbb
mov
dec
lods
fbld
cwtl
or
sbb
sub
fidivrl
das
fwait
std
pushaw
push
insb
stc
jo
ficompl
jle
jge
xchg
mov
stos
adc
mov
mov
jle
pusha
fldcw
je
sbb
addb
adc
rcll
push
imul
cld
mov
fdiv
std
pop
dec
lods
sub
aad
xchg
icebp
add
adc
pop
in
adc
lods
and
stc
mov
lret
shrl
adc
pop
jmp
push
mov
mov
or
fcomi
mov
call
in
jecxz
mov
mov
pop
adc
fmul
pop
cld
jnp
loop
aad
pusha
pop
adc
pop
push
loopne
xor
scas
movsl
fldt
psrlw
out
in
les
orl
mov
aaa
xchg
insl
push
pop
fstps
ret
enter
cmp
stos
pop
sbb
aam
insl
push
sbb
lds
clc
sbb
mov
add
insl
and
mov
pop
addr16
incl
cmp
mov
repnz
xor
jns
sti
lock
and
movsl
hlt
leave
pmuludq
popf
mov
roll
add
rcrl
ret
pop
fistpll
sbb
jns
divb
fsubl
push
es
lock
addb
in
lock
adc
ja
div
popf
dec
std
push
in
dec
fcmovnbe
movsb
mov
data16
xor
add
rcrb
aad
in
add
out
push
shll
sarb
call
das
sbb
pop
adc
enter
sbb
insb
adc
in
mov
sbb
scas
sub
mov
stos
leave
sahf
mov
pusha
add
xchg
xchg
xchg
lret
xchg
pop
adc
int
jbe
in
int
imul
push
repnz
jg
jp
and
or
in
fs
in
scas
lods
add
cmp
push
dec
add
outsl
and
add
outsl
ret
pop
xchg
push
xor
cmp
mov
sahf
pop
fptan
lret
inc
loop
add
adc
pop
jbe
jne
mov
leave
inc
push
jg
stc
inc
ja
and
out
je
leave
gs
mov
inc
push
pop
enter
jg
jnp
test
idiv
in
lock
push
push
ds
test
xchg
sbb
xor
jb
or
cmp
xchg
addr16
xor
xor
dec
out
std
mov
mov
loop
ds
fs
pop
fildll
stos
dec
int3
add
sbb
inc
fisttpll
scas
loope
cmp
lea
adc
rcl
loope
fcoml
sahf
or
int
jle
xlat
ljmp
xchg
sbb
xor
test
jl
cmc
sub
dec
pushf
push
mov
lock
out
xor
clc
xchg
addr16
mov
jmp
scas
scas
mov
mov
cmp
pop
adc
jecxz
pop
xchg
sub
aam
call
push
cmp
and
movsb
lods
call
xor
scas
into
bound
imul
mov
xchg
rcrl
cmp
insl
add
andb
movsb
cwtl
leave
insb
pop
inc
push
and
push
fwait
pop
leave
add
rorb
insb
cmpb
std
push
test
das
sti
pop
cmc
jge
shrl
ret
push
fimuls
dec
test
stos
pop
xchg
mov
xchg
sub
jmp
adc
popa
xchg
fidivl
pop
out
sbb
mov
repz
and
pop
out
out
pop
adc
and
or
in
cmc
adcb
mov
mov
sti
mov
mov
mov
lahf
mov
xor
cmp
or
xchg
mov
mov
xchg
hlt
or
leave
xchg
mov
rolb
mov
sarl
rorb
adc
lcall
mov
push
jno
cltd
sub
stc
mov
ds
push
popf
jns
xchg
jg
stos
cld
pop
cs
jge
inc
xchg
cltd
jno
xchg
xchg
and
jge
imul
lea
jnp
cmp
sub
or
xor
mov
imul
in
jmp
mov
in
cmpsb
lock
add
mov
in
inc
adc
dec
daa
out
int3
mov
cmp
push
fcom
jne
mov
push
and
mov
push
out
inc
nop
or
pop
pop
cli
mov
call
out
ja
pop
stos
and
lret
cmp
stc
repnz
mov
mov
cmp
jo
adc
cmc
orb
movsl
outsb
lods
xchg
fcos
push
xor
sub
xchg
loope
xchg
dec
test
rolb
mov
push
and
insl
in
mov
xor
or
andl
mov
inc
testb
pop
in
rcr
or
rcl
mov
jl
fmuls
fstpl
cli
push
int
inc
out
mov
or
stc
das
cmp
mov
cmpsb
inc
rcrl
add
outsl
filds
jecxz
xchg
cwtl
je
add
adc
loop
add
test
ret
iret
in
js
xchg
mov
cmpsb
lcall
inc
sahf
and
and
push
mov
sbb
cmp
mov
mov
test
add
cmp
aaa
pop
fcomip
leave
sub
dec
out
push
into
mov
inc
and
ja
mov
loope
imul
mov
clc
xchg
add
add
jnp
mul
sub
add
in
push
pinsrw
out
outsl
lea
ficoml
or
add
outsl
addb
mov
add
ds
pop
adc
subb
cmp
or
outsl
push
cmp
cmpsl
loope
fidivrl
mov
insl
mov
adc
out
jae
inc
xchg
cmp
adc
ret
xchg
push
inc
loope
cs
in
adc
stos
or
cmp
gs
sbb
mov
mov
push
cwtl
push
sbb
push
inc
mov
jecxz
pop
sahf
clc
lods
test
ret
into
ja
xchg
dec
push
mov
ljmp
sub
adc
sub
xor
mov
cmp
sub
adc
push
fdivrs
fdivrl
sub
lret
cmp
je
cmp
ja
and
sbb
rolb
pop
cmpsb
and
sub
dec
xor
sarb
movb
mov
repnz
adc
push
call
popf
mov
inc
enter
cld
rolb
and
mov
pushf
jge
popf
add
inc
mov
or
mov
inc
sbb
sbbl
mov
jno
jb
xchg
lods
mov
mov
mov
jg
roll
rcr
jbe
cmpsl
jecxz
cmp
xor
jg
rcr
push
add
mov
or
push
xchg
dec
jne
mov
int
inc
pusha
bound
stos
std
imul
scas
or
dec
inc
out
jnp
pop
xchg
xchg
addr16
cli
lcall
or
scas
add
fimuls
pop
fistl
adcl
movsl
adc
mull
and
out
xlat
xor
lcall
or
bound
sub
popl
mov
movsl
mov
aad
inc
mov
leave
clc
xor
pop
or
loopne
pusha
pop
or
xchg
pop
push
lret
adc
fdiv
lea
sbb
insb
sub
jecxz
sub
sbb
cld
fsubrp
fnstenv
lea
jns
jmp
dec
inc
movsb
inc
out
ret
nop
sahf
and
adc
add
jo
std
dec
ss
sub
ffree
iret
mov
dec
scas
fildl
xchg
xor
xchg
cwtl
ret
lret
out
jmp
pop
cmp
adc
sub
scas
sbb
mov
inc
push
mov
in
or
mov
add
insb
cmpsl
mov
sub
ja
adc
push
mov
sub
mov
mov
inc
mov
decb
int
adcl
stos
add
jmp
add
xchg
or
add
sti
jnp
in
push
mov
cmp
xor
int3
pop
jne
mov
sbb
loop
cmp
fldt
call
pop
xchg
arpl
stos
mov
es
fcoml
add
leave
stos
and
jge
sbb
arpl
das
xchg
sub
add
insb
out
movsb
pop
sub
movsb
or
cmpsb
mov
out
cld
loopne
cmp
test
test
pop
fisttpll
dec
xlat
sub
je
xchg
mov
sub
out
inc
roll
sub
cmpsl
inc
or
insb
mov
movsb
push
push
bound
inc
xor
negb
js
je
movsl
mov
and
mov
jg
ds
int
push
push
inc
adc
mov
mov
jle
pusha
popa
sub
push
sbb
test
jecxz
rcrb
pop
mov
add
flds
lds
push
icebp
sub
mov
sbb
push
cmp
pop
push
adc
test
dec
stos
orl
xor
outsb
aam
mov
jno
test
push
or
sbb
in
xchg
stos
int
popf
test
add
pusha
mov
out
pop
add
jmp
inc
adc
daa
xor
stc
test
roll
in
inc
fcomps
mov
fs
and
inc
movsb
push
stos
jnp
jae
pop
cli
fs
int
ljmp
xor
ja
jbe
cmp
imul
into
cwtl
or
and
sub
mov
cmpsl
movsl
in
cmp
pop
jae
icebp
mov
sbb
imul
lcall
es
hlt
dec
mov
push
xchg
inc
jp
std
pop
std
add
pushf
jl
xor
cmp
sbb
pop
jg
mov
inc
les
jb
movsl
sub
sbb
daa
pop
dec
inc
cmp
sbb
mov
pop
mov
fnstsw
sbb
xchg
mov
pop
pop
or
sub
jge
cs
aaa
xor
lods
pop
repnz
adc
lret
push
lcall
nop
cmp
mov
mov
rol
xlat
ss
pop
xlat
fiadds
sbb
jge
jecxz
addr16
sbb
pop
data16
jle
aad
push
sub
cmp
jns
in
rcl
leave
pop
aad
arpl
popa
xchg
adc
pop
pop
ret
fwait
pop
negl
pusha
ret
dec
cli
fisubrs
fs
inc
dec
inc
mov
xchg
js
insl
xor
gs
pop
lret
int3
cmpsl
roll
xlat
jae
mov
cmp
hlt
movsl
mov
add
pusha
push
mov
adc
mov
sub
sbb
and
sbb
loopne
in
mov
dec
pop
xorb
dec
into
lcall
lahf
jno
inc
dec
pop
rcr
int
xchg
fwait
lcall
lods
orl
popf
cmpsb
test
mov
repz
repnz
fnstcw
and
add
test
jmp
in
push
stos
call
jle
cmpsl
push
xchg
xor
pop
xor
mov
push
push
rcrl
cmpsb
add
inc
enter
inc
icebp
dec
data16
clc
rcl
xor
fwait
bound
stos
cmpsl
adc
xor
inc
iret
and
jecxz
or
icebp
and
jp
jp
lds
arpl
hlt
sahf
loop
arpl
data16
das
push
lods
std
fucomp
jne
movsb
popf
negl
mov
jae
pushf
or
mov
enter
inc
into
push
push
or
ljmp
mov
xor
js
mov
mov
and
lret
or
scas
dec
ret
popf
mov
sub
iret
dec
adc
pop
cmpsl
inc
rolb
sbb
dec
mov
mov
iret
xchg
dec
pop
or
out
test
call
ja
sub
sbb
inc
pop
ret
lods
mov
fistpl
mov
and
in
and
int3
push
pop
outsb
push
push
pop
jnp
ret
arpl
test
pop
cli
mov
insb
push
outsl
mov
clc
mov
jmp
cmp
daa
jg
cmp
aad
test
jnp
cmp
adc
ds
testb
dec
fbstp
rcr
add
les
fcmovnb
out
xor
std
push
gs
adc
in
pusha
add
imul
addr16
aaa
jecxz
jecxz
leave
mov
lods
adc
inc
adc
lcall
lahf
ret
dec
jge
inc
ljmp
leave
xchg
cli
sbb
out
or
out
mov
ret
int
popf
mov
inc
dec
pop
movsb
shl
add
pop
inc
or
test
xchg
in
lods
mov
mov
mov
cmc
popa
adc
push
xor
xchg
bound
hlt
jbe
inc
adc
ror
mov
jne
add
mov
icebp
bound
or
mov
xchg
mov
inc
lret
notb
das
dec
and
adc
adc
mov
and
push
mov
mov
imul
test
popf
mov
or
int
data16
jmp
xchg
jns
add
fidivl
and
rcrb
rcrb
dec
sbbl
fwait
xor
push
xchg
xchg
iret
dec
cmp
inc
jnp
insl
stos
jmp
pushf
or
mov
int3
insb
inc
push
mov
mov
arpl
jnp
out
adc
inc
pop
mov
bound
cmp
fmull
fbld
aaa
movsb
fs
xchg
xchg
popa
in
xor
lahf
ja
pop
adc
jmp
clc
roll
push
cmp
xchg
mov
or
pushf
cmpsl
cwtl
dec
xchg
pop
mov
pop
mov
dec
aas
mov
leave
mov
pop
jo
movsb
les
and
cmpsb
mov
data16
ret
pop
jmp
jno
out
sub
popf
and
lock
idivb
xlat
xchg
xlat
jecxz
ljmp
inc
push
fmulp
jmp
cmpsl
into
pop
idivl
sub
or
ret
test
push
out
fisttps
jb
cmc
repz
fists
xchg
std
cli
cmp
fs
mov
sub
inc
mov
ret
jl
push
and
mov
ja
fstl
mov
pushf
mov
call
sarl
std
lret
filds
mov
push
lods
jp
sub
push
mov
mov
pop
inc
xchg
dec
or
popf
icebp
fsubl
mov
pop
sub
xor
das
xchg
popa
aaa
cli
mov
jmp
data16
mov
leave
mov
repnz
mov
mov
mov
add
mov
int
arpl
insl
rcll
or
mov
or
cmp
or
inc
ret
in
inc
or
shl
cli
cmp
insl
test
sub
ret
adc
std
out
add
mov
cmpsl
mov
jl
jnp
and
cmpsl
inc
insb
mov
jmp
mov
ljmp
mov
enter
enter
dec
inc
movsl
push
repz
inc
daa
repnz
daa
lret
fistpl
sub
decb
ss
cmp
xor
in
es
nop
pop
cmpsb
adc
sbb
jg
pop
add
pop
frstor
outsb
push
xor
nop
inc
into
stos
in
lahf
aas
in
rorl
scas
ret
std
movsl
mov
sbb
outsl
fsubl
rclb
inc
ljmp
mov
test
pop
adc
push
scas
jb
dec
nop
pop
and
imul
push
add
adc
daa
and
mov
xor
dec
and
pop
out
add
pop
sbb
push
inc
ret
test
rolb
jnp
fdivrs
jecxz
sub
call
insl
scas
and
lea
shlb
scas
aam
fcomps
sbb
jns
sbb
mov
ret
jl
inc
cmp
and
inc
xchg
xor
imul
sbb
push
mov
ja
sbb
daa
test
mov
or
or
jno
mov
mov
push
and
sti
cltd
pop
data16
add
dec
xchg
sbb
sub
jl
and
mov
jge
pop
jp
lret
hlt
xchg
repz
push
loope
jmp
or
mov
pusha
xchg
xor
test
into
xchg
inc
jmp
incl
mov
loopne
sub
out
test
add
hlt
movsb
pusha
test
pop
mov
inc
mov
xor
aam
pop
call
lret
adc
mov
std
hlt
stc
arpl
xchg
xchg
fsubs
aad
xchg
lds
push
jg
repz
nopl
xchg
call
pop
aaa
shlb
cs
out
xorl
dec
popl
sbb
fs
cmp
push
mov
adc
mov
icebp
sbb
hlt
cmpsl
inc
imul
lahf
mov
adc
orl
pushf
inc
insl
cltd
and
scas
mov
cli
inc
pop
out
cli
ficompl
mov
loope,pt
dec
pop
aas
aaa
clc
fxtract
dec
pop
jne
mov
sub
sub
ret
adc
icebp
cmp
inc
mov
movsl
test
test
cli
movd
xor
push
test
fistl
pop
inc
xchg
sbb
sub
nop
in
stos
jge
scas
pop
insl
or
adc
clc
sbb
ret
add
fcmovu
or
sbb
test
or
cltd
cld
insl
or
cli
sbb
mov
sahf
dec
push
sahf
stos
int3
lahf
mov
xchg
pcmpeqw
int3
pop
mov
and
mov
push
dec
out
push
sbb
std
mov
mov
lahf
hlt
inc
and
sub
test
pop
imul
lds
or
mov
jmp
imul
rolb
es
mov
push
mov
or
dec
sti
push
jmp
in
sbb
mov
add
in
mov
mov
bound
in
sahf
in
mov
xchg
dec
add
adc
and
lret
sti
jnp
jmp
cltd
dec
xlat
jl
inc
je
insb
xor
push
cmp
and
test
in
mov
add
lcall
mov
test
mov
pop
jg
jecxz
test
lret
in
leave
js
mov
mov
lods
ds
jno
adc
rclb
push
ss
test
jne
sbb
ja
test
mov
mov
stc
nop
cld
mov
div
cmp
mov
jae
sbb
data16
cmp
xchg
jb
jg
sbb
inc
jbe
jb
jp
mov
outsl
jge
cmpsl
insl
sahf
std
inc
cli
sahf
add
pop
inc
jo
pop
xchg
fbstp
gs
and
orb
mov
sub
xor
xchg
bound
mov
fldcw
repnz
icebp
adc
xchg
data16
jmp
lea
dec
cmp
cmpsl
idivl
mov
dec
xor
push
fnstcw
pop
lods
jg
mov
xor
adc
ret
aas
add
add
and
outsl
jnp
fdivs
je
pop
leave
sti
sub
jmp
fldpi
mov
in
mov
fists
mov
rcrb
out
fadds
cmp
sti
xor
nop
add
inc
cmp
jno
lret
mov
dec
imul
sub
add
pop
js
imul
cmp
enter
push
aam
mov
xchg
push
and
pop
xchg
andl
fistps
aaa
movsb
jge
pop
cmp
out
pushf
sub
pop
rorb
pop
enter
jl
jbe
int3
jp
lret
pop
stos
jne
ja
lcall
out
push
enter
fsubr
test
adc
imul
addr16
out
adc
es
or
jecxz
adc
imul
add
pop
push
cli
push
mov
jbe
or
jmp
cmp
out
sub
ljmp
bound
dec
pop
push
movzwl
adc
push
jae
adc
mov
jne
or
mov
and
add
jg
dec
adc
cld
mov
movsb
push
call
and
mov
mov
inc
push
add
mov
mov
mov
push
push
push
testb
pop
sbb
mov
cli
dec
mov
daa
mov
lods
push
pop
xchg
xchg
or
mov
je
sbbl
push
mov
nop
insb
jg
add
xchg
sbb
sbbb
jmp
fmulp
xchg
cmc
sub
cmp
dec
dec
push
cmp
jmp
inc
xchg
push
scas
cmc
pop
test
pop
xchg
lods
addl
and
dec
or
fsubs
mov
mov
cmp
xorb
pop
jnp
cmp
xchg
xor
cmc
jns
fimuls
rcrl
dec
aas
dec
rorl
repz
add
out
mul
or
in
dec
or
sub
lea
loope
mov
dec
adc
inc
ret
dec
xor
lea
test
mov
divb
dec
mov
adc
jae
leave
int3
jl
add
mov
add
add
add
mov
mov
add
or
xchg
cmp
nop
fwait
shlb
lea
das
pushw
jge
rol
repnz
add
jge
int3
mov
mov
adc
add
pop
loop
jg
dec
add
fidivl
push
test
out
pushf
pop
lods
rclb
push
mov
sbb
lea
push
mov
outsb
insb
ljmp
jae
mov
sbb
xchg
sub
mov
bound
push
pop
lea
xchg
stos
hlt
ret
insb
out
test
out
and
dec
xor
add
push
adc
inc
xor
pop
mov
xor
fs
outsb
and
cld
pop
fmuls
jmp
in
dec
adc
push
mov
or
dec
push
gs
fidivl
pop
pop
fmull
xor
shlb
mov
xchg
cmp
clc
aad
insb
out
es
movsl
shlb
andl
push
mov
mov
jns
jmp
mov
and
pop
rcr
fisubrs
pop
xchg
adc
mov
je
pop
dec
add
cltd
loop
ja
int3
aad
lret
and
enter
movzbl
add
arpl
sahf
push
sahf
std
push
push
dec
jecxz
shll
push
cmp
int3
cmp
es
idivb
inc
jge
hlt
or
xor
call
loop
stos
and
adc
cmp
ficoms
add
jge
dec
insb
xchg
and
inc
and
mov
pop
dec
mov
push
stos
inc
and
js
test
and
xchg
jo
jmp
popf
rcl
clc
sti
loope
fwait
jmp
gs
clc
mov
pop
stos
not
int3
scas
xchg
lret
mov
add
jecxz
inc
push
cs
leave
cmpsl
in
xor
lods
test
sub
xchg
cli
adcb
xor
mov
jae
in
stos
ret
push
repz
pop
pushf
lock
mov
cmp
mov
aas
jne
xlat
pop
out
mov
out
fisttpll
inc
lods
test
jmp
rorl
repnz
call
pop
add
push
lahf
mov
ja
outsl
inc
lds
and
inc
adc
subb
jmp
push
test
pop
aam
or
dec
mov
fs
mov
sbbl
xor
ret
lret
int3
adc
inc
js
sbb
std
data16
xchg
test
addr16
loopne
pop
inc
sar
in
stos
lret
jne
popf
iret
dec
jecxz
push
das
das
das
lds
inc
mov
push
lcall
xchg
and
dec
xchg
dec
push
xchg
jl
popa
push
adc
rcl
mov
sahf
clc
cmp
and
aas
or
jb
xor
jmp
stc
sbb
mov
in
adc
sub
les
mov
xchg
into
popa
cmpsb
mov
or
sti
add
fidivl
pop
divb
fnstenv
pop
sbb
inc
pop
pop
loopne
popf
fwait
or
bound
mov
fiadds
add
add
add
mov
sbb
sub
out
in
mov
dec
mov
js
inc
xchg
sbb
rcll
pop
loope
js
mov
popa
lea
loop
pop
loop
jmp
cs
test
cmpsl
outsl
cwtl
mov
push
mov
pop
out
add
mov
sbb
ljmp
adc
icebp
setge
adc
xor
push
or
int
inc
sbbl
cmpl
mov
mov
jne
add
push
add
in
cmpsb
test
sbb
sti
jge
and
xchg
dec
mov
leave
inc
dec
scas
popf
mov
pop
hlt
adc
setge
cmpsb
or
stc
and
dec
sahf
lret
add
push
push
mov
mov
push
cs
mov
jnp
mov
popa
movb
stc
pop
and
es
cli
mov
cmp
mov
xchg
or
fistpl
add
inc
mov
fcmovne
pop
incb
aad
jo
cmc
xchg
fcomps
nop
insl
test
insb
movsb
sub
mov
cmp
xchg
jns
addl
nop
mov
fldt
andl
adc
nop
xor
add
js
icebp
mov
adc
in
and
mov
dec
aas
xor
mov
dec
out
imul
sbb
mov
divl
pop
cli
xchg
enter
sbb
popf
lret
fisubrs
add
dec
fdivr
test
xor
les
out
add
xor
std
mov
dec
cmp
mov
movaps
mov
add
xchg
into
jp
popa
mov
jbe
jns
push
dec
jbe
cmpsl
jnp
shlb
dec
cwtl
dec
icebp
cmpsb
push
sub
repnz
stc
mov
fsubrs
and
fwait
pop
enter
pop
pushf
dec
mov
push
mov
repz
cmp
cli
dec
pusha
jmp
add
lods
jae
mov
add
and
movsl
pop
enter
sbb
inc
sub
in
jmp
add
pop
dec
mov
sti
pusha
add
mov
test
dec
pop
movsl
inc
and
jne,pn
mov
push
and
or
test
push
lds
lock
and
dec
push
push
movsb
subb
in
roll
imul
or
adc
xchg
fisttpl
ja
addr16
or
scas
mov
mov
lahf
cmp
and
and
inc
and
add
xor
dec
movsb
jno
add
push
lcall
and
stos
pop
mov
jmp
sub
jmp
fmull
add
js
std
mov
ja
arpl
rorb
cmp
lret
ss
lock
dec
movsl
aad
xor
cmp
pop
repz
nop
or
xchg
dec
shrb
mov
add
jbe
pop
ror
jmp
cli
insl
dec
jne
notb
inc
dec
jmp
push
movsl
sahf
fmul
in
sbb
sub
sti
push
loope
dec
mov
xchg
adc
movsl
call
mov
insb
shrd
clc
xchg
ret
sub
in
lock
lcall
outsl
xchg
loop
nop
jno
cwtd
test
adc
pop
pop
sub
push
pop
xchg
or
lock
sub
xchg
mov
mov
syscall
imul
lods
push
add
icebp
sbbb
sbb
incl
push
dec
xchg
push
dec
repz
pop
jbe
pop
mov
mov
jo
or
dec
loopne
inc
in
pushw
pop
sbb
jle
xor
push
inc
es
xchg
sub
pusha
pop
in
sub
add
dec
sbb
div
pusha
scas
sub
jns
cmp
fucom
xchg
add
test
push
pop
dec
or
or
xchg
stc
sub
xchg
inc
popf
cmp
in
addr16
idivb
lret
les
dec
aas
data16
and
pop
pushf
mov
xchg
mov
cltd
lods
pop
loopne
pop
das
pushf
outsl
jb
dec
mov
push
jo
outsl
cmp
mov
mov
ret
in
pop
push
sub
movsl
mov
incl
cmp
loope
jg
out
mov
fwait
xor
push
sbb
fsubrl
ljmp
cltd
dec
das
aaa
gs
jle
cmp
cmpsb
pop
sub
mov
nop
test
loop
fmul
mov
ret
lock
lods
or
shll
add
popa
scas
xchg
sahf
mov
cmp
out
in
ja
pop
mov
fistpll
mov
sbb
js
ficoml
sub
das
test
mov
arpl
outsl
pop
push
insb
mov
add
jnp
xchg
xchg
push
inc
lret
jbe
jno,pn
mov
jle
out
jbe
adc
jo
inc
and
lret
jmp
mov
mov
xor
jl,pn
jge
cld
and
sbb
cmp
jmp
fidivrs
fs
pop
bsr
mov
push
add
mov
xor
mov
stos
mov
mov
nop
stos
insb
out
outsb
cs
sub
inc
mov
xchg
and
repz
insb
int3
daa
xacquire
mov
test
clc
fs
xchg
push
mov
stos
into
sahf
or
lods
pop
adc
lret
dec
cld
adc
pushf
js
lret
sbb
add
mov
push
clc
mov
add
fwait
push
mov
cmp
lds
push
inc
daa
mov
push
and
das
mov
jp
rcrb
leave
subb
add
outsb
sti
jo
xchg
or
je
inc
aad
into
jl
shl
jge
aas
add
add
xlat
pop
cmp
add
pusha
mov
jle
test
jo
sbb
push
in
jecxz
jno
jno
pop
loop
jo
mov
cmp
inc
cmc
pusha
push
mov
rolb
and
mov
push
mov
or
sub
std
xchg
dec
cmp
les
jge
inc
xor
sub
shl
cmc
xor
cmp
cmpsb
aad
mov
ja
dec
flds
aaa
jle
jo
andl
or
sbb
pusha
sti
sbb
fwait
es
imul
push
ficoms
and
mov
pop
into
cld
aas
int
xor
sub
loop
jge
xchg
lods
test
add
push
xchg
jge
and
daa
aad
jmp
jg
dec
scas
popf
and
cmp
mull
mov
push
fldcw
or
shlb
or
adc
pop
enter
sub
nop
data16
xchg
add
and
cmpsl
lret
dec
pop
jmp
or
jne
add
dec
loop
add
inc
dec
pop
sbb
sub
sub
jno
adc
clc
mov
out
push
fs
mov
lahf
sbb
in
add
add
mov
xchg
out
adc
jno
add
xchg
cmpsb
mov
adc
fnstcw
sbb
into
add
rclb
enter
loop
test
mov
inc
enter
out
inc
dec
mov
in
mov
push
push
shll
and
and
repnz
stc
cmpsb
push
cwtl
and
cwtl
pop
insl
fadds
roll
cmp
js
jnp
xchg
addl
mov
sub
fimull
int3
es
push
xchg
and
xchg
scas
addr16
xor
adc
cmp
adc
aam
aam
and
movsl
pop
call
movsb
fisttpll
xor
push
pop
mov
inc
lahf
js
repz
loope
xchg
mov
mov
shrl
mov
mov
shll
dec
push
test
dec
push
bound
adc
and
subb
mov
jg
xchg
and
test
lea
mov
bound
mov
mov
mov
push
and
subl
call
jmp
xchg
adc
in
lods
jmp
xchg
aad
addr16
stc
push
xchg
jecxz
ret
and
sahf
pop
and
push
add
stc
jbe
jecxz
xor
cmc
jb
aaa
or
inc
rclb
mov
sub
and
mov
cmp
hlt
xlat
adc
mov
out
xor
cs
xor
fdivr
out
mov
jb
test
insl
stos
mov
xlat
bswap
aad
dec
add
sbb
sbb
aaa
rdtsc
cmp
cmpsl
mov
test
add
addr16
jp
sub
xchg
mov
xchg
enter
test
jl
mov
pop
lods
ret
call
cmpb
jle
je
xor
inc
insb
divb
and
cs
fmuls
cmpsb
adc
xchg
sti
dec
je
inc
fidivrl
cmpsb
rolb
jo
divl
imul
pop
or
ret
push
test
out
push
add
icebp
subb
rcl
loop
je
cmp
into
repnz
ret
mov
mov
jp
add
push
in
rolb
and
mov
cmp
inc
adc
or
jo
sub
pop
cld
sub
je
aaa
outsl
mov
aam
mov
xor
je
in
cmp
repz
mov
mov
pop
rolb
fnstenv
outsl
sbb
mov
mov
add
jns
dec
dec
xchg
mov
in
dec
aam
ss
test
data16
add
data16
addl
cmpb
loopne
xchg
pop
jmp
out
pushf
nop
xor
pop
movsl
fcmovb
in
sbb
cmp
pop
or
sub
jl
fcoml
andl
movsb
xlat
sbb
int
cld
shll
push
cmp
repz
scas
out
cwtl
or
and
sbb
dec
push
mov
add
add
mov
mov
icebp
int
mov
mov
and
adc
adc
test
add
sbb
inc
icebp
mov
mov
and
rcrl
sti
imul
mov
mov
cmpsb
lods
pop
leave
sti
cld
jno
jge
dec
ss
insb
cmpsl
jns
sahf
or
clc
sahf
pop
insb
mov
outsb
dec
in
jne
sub
fsubl
xor
loop
inc
dec
dec
mov
mov
mov
push
fwait
xchg
add
push
pushf
xchg
decl
scas
repz
mov
lds
xchg
leave
jge
cmpsb
sbbl
push
jns
jns
pop
btc
pop
dec
adc
cmp
fwait
int3
jmp
arpl
cmp
sbb
and
pop
jle
mov
stos
or
enter
lahf
in
xor
cmp
loope
add
push
out
mov
jno
test
enter
pop
jnp
bound
out
adc
add
adc
leave
xor
push
sub
push
ret
jae
call
movsb
cmp
loopne
orl
addr16
lcall
xchg
lret
into
jbe
inc
mov
sub
sub
std
xchg
lods
lock
mov
popa
popa
imul
sub
clc
push
das
pop
enter
fistps
imulb
lret
add
cs
fsubrl
mov
jbe
clc
mov
fstl
xor
xchg
and
add
in
sub
jl
adc
enter
pushf
sbb
xchg
es
inc
cmp
movsb
sub
add
push
ret
rorb
daa
mov
pushf
pop
loopne
pushl
pop
jl
inc
pop
mov
into
jne
pop
imul
lock
mov
jnp
mov
xor
xor
out
inc
push
add
enter
dec
clc
jmp
xchg
xchg
adc
loope
adc
fptan
xchg
adc
dec
leave
jecxz
lahf
mov
data16
jmp
arpl
addr16
out
mov
stos
sbbl
test
lret
xor
test
popf
cmp
jp
data16
negl
addr16
std
in
fisttpll
push
lcall
fadd
ret
add
xor
cmpb
jg
cmc
mov
outsl
adc
xor
lret
mov
gs
pop
les
cmp
les
out
mov
ror
stos
addb
bound
xor
inc
in
add
dec
gs
mov
dec
sti
mov
xor
sub
push
loope
adcb
add
in
mov
mov
xor
dec
pop
mov
xor
ss
sar
or
and
or
ret
fldl
call
movsl
lahf
sbb
cs
scas
sub
imul
sbb
fidivs
push
cmpsb
jb
int3
adc
mov
jge
xor
loop
mov
dec
icebp
xor
shrl
mov
add
les
jnp
xorl
cmp
xchg
cmp
test
cld
and
mov
push
dec
daa
sbb
push
call
push
jl
sub
jo
jp
cmp
xorb
lea
jmp
and
dec
int3
inc
incb
inc
aad
cmpsb
pop
and
hlt
add
mov
mov
mov
mov
int3
jl
dec
sbb
mov
mulb
aaa
jbe
adc
hlt
jge
andl
popa
xchg
in
es
mov
stc
xor
mov
lods
sbb
cmpb
jg
aas
sbb
mov
pop
jmp
and
das
and
xchg
or
inc
sbb
lock
enter
call
insl
popf
jl
mov
cmp
cmp
sbb
lret
shlb
stc
mov
jne
mov
inc
cld
addb
out
inc
dec
aam
pop
movsb
lret
cmp
jns
cld
mov
mov
push
inc
xchg
add
lret
jmp
outsb
mov
push
aad
out
arpl
push
dec
sbb
sbbb
mov
or
fmuls
jp
stos
nop
sbb
outsl
pushf
push
outsb
repz
xor
aam
adc
test
outsl
push
mov
xchg
std
xor
xor
xor
add
mov
fisttpll
lcall
jns
jo
jns
scas
pop
lods
add
jae
loope
shll
fdivr
pop
jmp
jbe
pushf
xchg
pop
enter
cmc
daa
icebp
pop
add
mov
cmc
iret
cs
push
inc
mov
lock
push
or
cmp
out
mov
jbe
mov
xchg
std
adc
mov
lcall
and
fwait
sti
test
out
out
test
lahf
roll
pop
arpl
inc
mov
add
je
jno
sbb
and
dec
hlt
movsl
and
xchg
lea
gs
in
jle
xor
sub
fcomps
sub
popf
mov
lahf
ljmp
sbb
mov
imull
dec
movsl
mov
jg
add
scas
in
jp
pop
xchg
cli
jno
notb
mov
das
mov
arpl
cmpsl
lahf
cmp
sbb
mull
inc
inc
add
dec
scas
xchg
mov
gs
mov
ret
xor
ljmp
xchg
push
lods
mov
arpl
ja
push
pop
sbb
push
je
test
lret
mov
xchg
or
scas
pop
mov
insl
jns
jae
pop
pop
movsl
cmpsb
cmpsb
mov
jp
jne
jno
adc
xchg
xchg
sub
mov
jge
stos
inc
andl
cmc
inc
xchg
pop
das
mov
xchg
fildl
cmp
or
adc
repz
fdivr
iret
mov
jmp
repz
xlat
std
nop
inc
mov
inc
loope
jne
int3
xchg
cltd
jg
ret
jge
push
test
push
mov
pop
push
cli
rolb
sbb
pop
mov
xchg
fs
mov
mov
rclb
leave
cmpl
adc
aaa
sub
push
test
lock
or
lock
push
rorl
idivb
inc
test
pop
lret
add
xchg
icebp
int3
dec
in
push
mov
pop
dec
push
xadd
mov
fisubs
fnstsw
pop
test
push
sti
mov
and
icebp
xor
icebp
bound
xchg
sahf
mov
andb
jae
movsb
aas
cmp
pop
imul
or
and
xchg
ds
mov
loopne
leave
lcall
inc
jle
lahf
cmc
loope
cmpsb
lods
jbe
imul
xor
or
pop
test
lods
push
jecxz
hlt
push
decb
cmp
repz
pop
xlat
jb
pop
std
pop
pop
dec
pop
cmp
neg
les
adc
push
rcll
mov
dec
lods
inc
jns
addb
int3
pop
mov
push
dec
stc
xchg
ljmp
sbb
lret
lret
pop
or
jb
xchg
lods
inc
dec
lock
in
push
ja
cmpsl
or
mov
jae
sub
cmpsl
in
push
cmp
rcll
movq
inc
test
lods
jne
mov
jge
mov
rclb
push
jp
dec
daa
shlb
jp
mov
int
mov
dec
enter
adc
push
adc
jae
xlat
rcrl
in
xor
insl
or
addb
popa
ss
les
popa
lahf
dec
adc
pop
in
neg
dec
outsl
out
push
and
xor
xor
push
inc
push
sbb
jbe
stos
pop
lods
mov
pop
cs
mov
mov
test
aam
cltd
lods
add
jecxz
cmp
xchg
fs
fwait
jne
dec
pop
fsubs
jmp
push
jg
negb
xor
inc
cmp
in
stos
add
fsubp
je
lock
pusha
cmpl
pop
sbb
jbe
fcoms
cmpl
xor
push
or
loopne
adc
mov
xchg
pop
std
shrb
mov
out
in
pop
mov
aad
mov
icebp
aam
stos
mov
and
jg
addr16
imul
imul
dec
jl
aad
pop
or
cmpsb
stc
adc
xor
pop
jno
jmp
jmp
sbb
xor
xor
pop
dec
push
loope
and
inc
popf
es
sbbl
mov
add
sub
ret
inc
ja
xchg
mov
jno
push
pop
mov
mov
push
add
int3
lock
fmul
ss
js
pop
pop
jle
loope
pop
adc
xor
push
mov
loopne
rclb
popf
lea
push
sbb
lock
jnp
push
in
loop
push
das
sbb
jl
dec
xchg
jmp
fisubl
in
movsb
std
and
mov
dec
jo
jp
mov
jg
mov
xchg
mov
xor
mov
inc
addr16
jae
push
sub
fimull
ret
sbb
xor
pop
orb
lret
lcall
loop
popf
inc
leave
mov
in
or
jae
je
jno
inc
push
dec
push
decb
pusha
fists
idiv
jl
add
and
and
lahf
pusha
inc
xchg
xor
enter
push
divl
in
mov
mov
mov
aad
xor
mov
repnz
mov
jle
fs
ljmp
lods
in
mov
adc
lahf
sti
cmp
mov
jno
cmp
add
xlat
rol
push
rorl
rol
mov
push
cs
pop
cmpsl
sbb
adc
xor
mov
iret
mov
pop
iret
icebp
sub
jbe
xchg
jge
jl
and
mov
add
popaw
fstpt
pop
ret
negb
out
iret
arpl
dec
out
lds
in
pop
add
lcall
fs
cmp
andl
ja
adc
lock
push
or
fidivs
mov
fnstenv
cwtl
rclb
adc
data16
mov
notb
cli
xchg
mov
jle
imul
gs
aad
fstl
push
cwtl
add
lret
and
mulb
mov
ret
xchg
cmpsb
xlat
adc
push
push
movsb
sub
add
inc
jno
je
daa
imul
jne
icebp
lods
add
rorl
bndstx
add
lahf
mov
rcr
cltd
mov
insb
test
adc
cmp
shl
call
and
xchg
mov
jge
cmp
cmp
mov
or
xor
xor
das
adc
push
into
pop
xchg
sbb
fcompl
pusha
call
pushf
mov
xor
dec
int3
shr
and
push
xchg
or
jb
ja
shlb
lret
popf
pushl
insb
cmp
inc
inc
pavgw
pop
imul
lods
iret
inc
and
push
cld
push
sub
dec
das
addl
mov
push
bound
or
jno
xchg
cmc
lret
sbb
xlat
pop
ds
loop
pop
adc
sbb
jno
inc
out
mov
pop
mov
xchg
leave
ss
sub
mov
fwait
adc
jnp
hlt
mov
jae
cmp
and
pop
xor
imul
das
add
sub
mov
lcall
cmp
sbb
adc
add
jle
add
pop
jbe
push
imulb
int3
repz
cld
nop
cs
int3
popf
and
sbb
xchg
sub
mov
leave
push
cmp
dec
mov
insl
jp
js
inc
inc
or
push
test
inc
ss
jno
call
add
dec
scas
push
dec
xchg
movsb
mov
test
sub
xchg
inc
out
dec
movsl
jecxz
mov
repz
push
jl
xor
leave
sub
outsl
ja
lods
insl
scas
mul
adc
mov
jo
sub
insl
and
and
and
leave
cmp
in
push
popf
jg
pushl
pusha
inc
outsb
mov
sbb
or
sub
outsl
and
push
icebp
dec
fcoml
into
and
hlt
inc
int
or
and
std
jbe
jae
les
inc
jp
loop
pop
pop
jecxz
or
lret
adc
scas
ljmp
push
xor
sbb
jge
pop
xchg
sub
outsb
mov
or
adc
or
sub
jecxz
sub
cmpsl
scas
lahf
cwtl
enter
inc
fildl
sub
leave
fucomp
and
inc
xor
mov
int3
out
fs
or
out
pop
push
cmp
movsb
pop
int
cld
inc
mov
stos
lea
inc
in
jnp
push
adc
push
in
rol
pop
push
mov
pop
cmpsl
aad
cmp
ret
pop
pop
outsl
sub
xchg
or
fsts
addr16
test
ret
fistpll
xchg
jecxz
lcall
subl
mov
xchg
faddl
sub
outsl
mov
pop
mov
add
add
mov
sbb
push
pop
jecxz
shrb
add
dec
jno
cmp
shl
stos
ss
mov
mov
push
sbb
jl
jge
push
jns
loop
int3
or
test
ja
sub
push
in
sbb
jmp
mov
les
xchg
jp
pop
or
xor
add
or
jb
jno
cmp
icebp
xchg
jg
fcomps
lcall
test
popa
addl
hlt
into
dec
enter
adc
or
mov
ficoml
mov
outsl
aam
and
adc
or
in
jle
mov
ds
ljmp
insb
jne
jecxz
ja
popa
fs
stc
xor
arpl
pop
mov
cltd
nop
jns
popf
inc
ds
pop
movsl
jnp
into
mov
cli
jmp
mov
and
mov
leave
icebp
jmp
pop
in
dec
push
add
cmp
clc
test
add
popf
fdivrs
jge
lret
cmpsb
jno
test
xchg
xor
mov
mov
adc
adc
lock
xlat
addl
cmp
mov
int
push
es
std
pop
in
ficoml
adc
test
sub
mov
or
mov
daa
sar
out
or
cli
cwtl
pop
xchg
xor
sbb
or
mov
inc
sub
inc
xor
adc
js
pop
mov
lods
and
imul
inc
mov
arpl
push
and
and
push
inc
repnz
bound
cltd
jns,pn
js
adc
mov
inc
test
sbb
xchg
into
mov
lds
sbb
sar
sub
mov
lods
xor
scas
jb
dec
and
mov
push
lret
jecxz
adc
gs
and
mov
lahf
fsubr
sub
sub
sub
xlat
xchg
mov
lret
outsl
in
shl
into
pop
xor
adc
into
popf
jmp
rcrl
push
pop
in
mov
dec
add
jmp
cmp
mov
imul
xchg
jl
push
xchg
rcll
xchg
cmpsb
insb
shlb
sub
pushf
adc
jmp
addl
mov
dec
nop
jno
std
sbbb
add
jmp
dec
data16
cld
jb
or
xchg
or
cmpsb
lahf
cmp
cmp
xor
int3
push
jg
mov
cmovbe
inc
shll
sub
jo
pusha
add
inc
jb
fldl
out
lods
in
enter
mov
jle
jl
out
pop
push
push
push
scas
aad
lret
lahf
lock
les
sbbl
mov
cmp
fcmovnbe
ja
into
fwait
dec
js
std
es
cmpsb
push
sub
repz
fiaddl
and
test
lds
stc
add
push
daa
out
dec
jno
mov
popa
cmp
imul
call
rorl
jle
out
sbb
test
mov
jb
mov
ret
pop
out
xchg
mov
scas
jb
xchg
stos
and
jae
jl
adc
adc
scas
aad
mov
xchg
je
jbe
cmpb
jle
xchg
sbb
addb
pushf
loopne
enter
mov
and
fiaddl
inc
push
stc
and
sub
enter
sar
mov
out
jo
pop
mov
mov
mov
jle
mov
cmp
cli
xor
mov
and
lods
ss
cmc
jmp
int3
ss
xchg
mov
jb
cmpsw
mov
push
ja
fisubrl
mov
out
adc
xchg
xor
lahf
cmp
xchg
cwtl
or
shr
fwait
mov
shr
push
cmpl
outsl
sub
addr16
and
popf
loopne
pop
mov
jns
mov
xor
and
push
lods
or
jge
sbb
loopne
ja
aaa
jge
stos
sub
gs
in
pusha
mov
into
out
mov
add
xor
xchg
xor
enter
cmp
fisubs
movsl
and
pop
mov
cmp
push
orl
push
mov
mov
aaa
xchg
testl
lahf
shll
mov
imul
xor
stos
push
fistl
into
lret
cli
jecxz
addb
sub
xorb
rcr
repz
fisubrl
cmp
stos
std
add
inc
pop
cmp
pusha
jl
roll
fidivs
jg
push
std
shlb
syscall
pop
movsb
adc
ficompl
stc
sar
pop
mov
stos
loop
bound
jle
cmp
mov
mov
fsubs
inc
ds
sarb
aaa
jae
out
cmp
stc
insl
in
inc
test
push
mov
loopne
iret
xor
ss
ss
mov
daa
sbb
inc
inc
dec
xchg
out
pop
cmp
or
into
dec
adc
ret
jge
push
aam
mov
mov
adc
and
scas
add
ficoms
mov
loopne
pop
aam
aam
and
in
sbb
inc
in
inc
mov
inc
fwait
jp
ficompl
daa
xchg
add
push
aaa
dec
sahf
push
rorl
ljmp
fs
xor
push
and
pushl
lret
sbb
sbb
repz
push
neg
sbb
and
mov
test
mov
outsl
subl
in
or
mov
hlt
js
inc
cwtl
push
cwtl
out
in
movsb
sahf
test
add
jp
mov
adc
daa
pop
lock
jb
or
aaa
sbb
fstps
in
inc
in
test
or
inc
movsb
adc
les
cmp
cltd
fs
jge
cmpb
cmc
sbb
add
adc
nop
cmpsb
or
icebp
ljmp
es
cs
xlat
aaa
clc
cmp
mov
das
out
add
shrb
pop
fdivrl
or
pop
lods
lret
xchg
insb
sahf
into
sti
popf
adc
in
or
cmpsl
sahf
jns
iret
cmp
pop
mov
or
jle
fidivrl
fnstcw
loop
imul
jge
or
daa
fistps
pop
lret
xchg
push
imul
add
cmpsb
xor
fisubrs
xor
inc
inc
xor
neg
push
addl
push
fs
jmp
ror
rcl
mov
jecxz
sbb
nop
imulb
pop
mov
push
es
ds
sub
fsts
add
mov
mov
mov
mov
pushf
push
std
mov
add
xchg
jecxz
inc
shr
in
cmc
jg
push
aad
adcb
sub
add
cli
int3
outsb
lcall
shl
enter
faddl
sbb
js
fisubrl
imul
movsb
sbbl
mov
loopne
das
andb
shlb
popf
test
pop
idivb
xchg
mov
mov
scas
xchg
testb
test
adc
sub
mov
rcrl
gs
les
cwtl
or
inc
adc
bound
mov
mov
mov
and
sub
pop
sbb
and
xor
pop
push
stc
test
or
sbb
pop
push
push
lods
push
sbb
test
movsl
ja
jbe
into
out
out
fnstenv
xor
push
add
jae
mov
dec
mov
adc
mov
cmp
lahf
int3
mov
xchg
mov
xor
pop
sbb
xchg
scas
inc
cmp
xlat
xchg
xchg
adcl
fstps
adc
push
sbb
mov
mov
lds
xor
mov
inc
mov
sti
lret
dec
ljmp
fidivl
imul
ljmp
add
pop
xor
and
arpl
jns
jl
add
ss
dec
xor
orb
pusha
xchg
jp
mov
enter
insl
sub
or
xchg
xchg
pop
fcoms
inc
popa
jnp
xor
and
pop
mov
insl
fs
sub
or
jne
sub
imul
test
aaa
rclb
lret
xchg
je
in
in
out
pop
movsl
in
aas
lock
inc
lds
ja
xchg
push
mov
popf
fistps
push
push
dec
xor
inc
and
or
dec
mov
shl
addr16
or
push
jp
aaa
repnz
in
outsb
jbe
xchg
movsl
lret
setg
jb
add
mov
fstpl
and
js
push
inc
frstor
pop
out
fimuls
and
inc
fmul
loop
dec
adc
jnp
out
jae
outsl
and
lret
mov
icebp
sbb
out
imul
mov
scas
test
xchg
aad
jb
jecxz
cmpsl
out
jl
or
xchg
movsl
dec
insl
gs
das
outsl
repnz
addl
in
imul
cs
int3
push
xor
popa
ficoml
inc
adc
imul
insb
sbb
push
cltd
fld
xor
movsl
jmp
lds
push
add
add
push
jecxz
mov
fistpll
outsl
mov
lock
pushl
push
ds
xchg
jbe
jle
adc
fnstcw
xchg
aas
jl
popa
mov
lret
and
out
jle
inc
adc
int3
fisubs
add
imul
adc
arpl
mov
imul
pushf
and
and
jae
jae
test
mov
aam
and
pop
dec
push
add
cli
gs
jl
ds
sub
jae
fadds
adc
sti
jg,pn
xor
stc
mov
xchg
insl
cli
jae
in
and
dec
pop
popf
mov
mov
push
repz
es
and
mov
adc
sub
add
add
mov
scas
test
sub
push
xchg
outsl
jp
dec
aas
in
cmp
or
subl
ljmp
loop
jle
jno
sub
jo
shlb
adc
or
fcompl
or
cwtl
mov
fmuls
mov
ljmp
jmp
sti
pop
cmp
pop
ret
gs
addb
cmp
aaa
fsubrs
sub
dec
mov
push
or
rclb
jle
pop
addb
or
daa
jmp
test
ljmp
cmp
out
lret
aad
out
cld
jno
mov
ffreep
mov
es
dec
pop
xlat
push
xchg
mov
call
add
jge
push
xchg
das
cmc
jmp
push
push
stos
out
scas
mov
movsl
xchg
or
hlt
sub
popf
or
push
dec
iret
mov
popf
sub
outsb
les
mov
and
in
mov
ret
imul
leave
push
jg
push
in
jp
stos
jp
cmpsl
cmp
int3
inc
push
jo
stc
sub
lahf
add
ret
sub
xchg
pop
pusha
cmpsl
out
xor
jnp
sarb
test
jg
vmread
mov
das
mov
or
lea
push
sbb
jae
sub
call
outsb
jno
les
fsts
inc
and
roll
cmp
daa
in
cmp
mov
icebp
movaps
or
mov
ds
js
mov
push
mov
div
mov
jb
aam
xchg
and
jle
fwait
or
sti
fsts
inc
or
xor
pusha
xor
pop
les
loop
loopne
xor
push
into
lret
and
jns
mov
out
jl
jp
pusha
int
add
xchg
popf
cli
dec
sti
xchg
adc
test
add
out
lods
mov
sub
xor
mov
fiadds
lods
cwtl
pop
fimull
xchg
fs
neg
push
sbb
xor
add
popl
and
popa
js,pn
fidivl
xlat
xorl
jge
mov
or
dec
inc
push
mov
mov
mov
orb
iret
sti
lret
dec
pop
dec
sub
xchg
or
xchg
testl
or
std
push
dec
xchg
movsb
add
push
xchg
stos
xchg
cmc
sub
shll
add
pop
mov
rorb
int3
inc
sbb
in
mov
sbb
xchg
cld
mov
divl
mov
ljmp
and
xchg
jecxz
loope
daa
jecxz
or
jg
repnz
imul
add
fisubrs
xchg
add
jle
adc
jecxz
fildll
sahf
dec
or
das
pop
and
enter
outsl
subl
mov
dec
mov
std
cmpb
popa
inc
jl
mov
daa
in
shrb
jo
mov
cmp
cmpsb
rol
pop
jo
dec
xchg
jne
push
xchg
sbb
popa
popa
lahf
lcall
mov
dec
dec
push
das
mov
cmc
ret
js
fstl
sub
cmpsl
mov
pusha
gs
data16
les
stos
pop
xchg
add
push
es
lds
adc
in
jle
cmp
mov
or
pop
lret
fwait
xchg
mov
xchg
or
ss
pusha
and
push
mov
pop
inc
or
jno
cltd
lds
xchg
jmp
cmp
push
adc
lods
movsb
cmpsl
loopne
mov
pop
addl
js
mov
push
test
cmp
repnz
jnp
movsl
and
insl
push
jno
sbb
lods
dec
jno
into
mov
loop
enter
cmpsl
cwtl
xchg
andl
in
cmpsb
pop
dec
xchg
pop
mov
stos
gs
lds
andl
jae
repz
adcb
mov
fsubrl
pop
pcmpgtd
cmp
fs
and
fisttpll
jmp
lods
jle
scas
adc
mov
adc
inc
sbb
push
or
and
mov
out
jae
and
mov
loopne
fcomps
outsb
insb
fnstenv
pop
mov
ret
mulb
test
loope
scas
daa
lds
push
clc
ficomps
leave
dec
adc
sbb
scas
xor
movsb
dec
and
mov
hlt
in
aam
div
aaa
push
sub
cld
mov
jge
aaa
mov
cmp
adc
sbb
sbb
rol
push
in
mov
fildll
cmc
push
add
push
cli
add
adc
test
inc
and
call
ljmp
xor
cmpsl
mov
add
inc
jmp
cli
daa
scas
popf
xchg
movsb
fcmovnb
movsl
gs
lods
popa
mov
mov
cltd
cwtl
rol
inc
lret
pop
cmp
inc
in
mov
inc
sbb
push
aad
add
iret
mov
nop
jnp
test
iret
dec
xchg
jae
xor
cwtl
pop
repnz
leave
cmpsb
pushf
or
ljmp
pop
cmp
xchg
jmp
pop
mov
mov
add
dec
jno
jg
jnp
lods
lret
lcall
mov
lea
jae
or
pop
jl
and
push
jge
in
leave
dec
mov
mov
sti
cmpsb
stc
push
ss
aas
sbb
lret
shrl
aas
jmp
push
mov
xchg
mov
mov
cmpb
call
sub
fwait
scas
xor
push
push
mov
jmp
pop
push
xchg
dec
cmp
leave
bound
cmp
mov
into
dec
cmpsb
lret
insb
cwtl
repz
outsb
loopne
sbb
ds
pop
stos
hlt
addr16
fidivl
js,pt
movsb
xor
test
mov
push
mov
lret
subb
into
xorl
jo
es
dec
bswap
sbb
andb
shr
dec
mov
arpl
add
enter
mov
mov
lahf
pop
mov
stc
sub
pop
sub
sbb
cs
mov
jg
xchg
jnp
jne
pop
shlb
test
mov
pop
pop
mov
mov
inc
mov
shll
add
jnp
pop
loope
je
leave
push
aaa
adc
adc
mov
call
sbb
push
xor
aaa
mov
imul
add
jo
loopne
push
xor
dec
xchg
lahf
mov
cli
lods
xchg
fimull
sbb
jb
inc
push
mov
sahf
jns
add
loop
loop
sar
dec
sbb
lods
jp
push
mov
push
pushf
pop
and
shlb
jb
or
mov
push
je
out
rcl
push
push
cmp
aaa
xor
push
gs
clc
push
imul
mov
pop
mov
inc
cmp
jnp
imul
push
cs
je
cltd
mov
iret
dec
xor
stos
dec
scas
and
jl
inc
ja
jnp
addl
pop
xor
stos
mov
lods
test
cmp
outsb
cmp
repz
fwait
ret
ds
js
pop
jns
and
lret
dec
xor
js
loopne
stc
cmpsb
dec
jnp
push
ret
pop
ja
addl
mov
fdivl
movsb
cmp
arpl
mov
loope
add
push
into
pop
cmpb
in
pushf
pop
xor
xchg
fidivrl
adc
in
xchg
dec
sar
xor
jge
adc
inc
dec
lret
fistps
fwait
aaa
and
or
xorl
or
and
test
add
cli
fists
mov
call
or
cmpsb
jo
insl
movsl
inc
adcl
xor
pop
lahf
imul
cs
daa
movsl
mov
hlt
push
scas
dec
xor
aad
std
stos
fdivrs
inc
xchg
cmp
shll
insl
cmp
cmp
jmp
add
sbb
popa
jno
ds
popa
mov
push
and
xchg
sti
mov
cli
cmp
and
mov
and
loopne
push
cmp
testl
sbb
imul
mov
movl
xor
jo
inc
test
mov
mov
xchg
xchg
adc
pusha
out
sbbl
mov
ds
cmp
xchg
fsubl
fistps
dec
xor
and
dec
ret
push
dec
cmp
inc
jle
dec
sbb
sahf
cwtl
idivb
sub
cmc
add
add
test
repnz
xchg
and
das
repnz
jmp
dec
orl
fdivp
or
xchg
outsb
adc
das
shll
movsb
fmull
dec
xor
loop
test
cmp
js
push
inc
aas
mov
sar
sbb
xchg
mov
pushf
sbb
xlat
mov
int3
rclb
xor
cmc
push
or
cld
lock
jne
push
shlb
xchg
jmp
shlb
mov
and
cmp
das
and
movsw
cs
cld
mov
inc
pop
scas
aaa
xor
mov
fwait
hlt
loope
or
rolb
push
out
out
faddl
outsl
cltd
pop
and
jae
pop
mov
xor
psubusw
shll
lret
fildl
or
push
push
inc
adc
call
jp
sub
ss
fmull
adc
push
sbb
add
inc
cmp
push
xchg
das
leave
jg
sbb
aas
cltd
xlat
das
or
mov
test
ljmp
mov
scas
loopne
jns
lods
leave
aaa
outsb
jmp
xchg
dec
cmp
aad
sub
pop
enter
sarl
sbb
push
or
jbe
je
outsl
sbb
mov
lock
xchg
mov
ds
push
sti
mov
roll
popa
pop
test
movsl
call
or
adc
aam
mul
mov
gs
cmpsl
jg
mov
data16
mov
add
loopne
xorb
inc
lds
sub
clc
test
ja
pop
xor
mov
jg
lret
decl
adc
das
push
fidivs
dec
dec
lcall
jle
jmp
jp
dec
jmpw
xchg
mov
leave
rol
stos
shl
imul
je
mov
scas
push
inc
jae
iret
mov
call
adc
sti
and
add
xchg
iret
cmp
mov
sarl
pop
mov
fs
fimuls
dec
out
push
push
mov
mov
cltd
lods
mov
fnstenv
out
and
orb
inc
and
pop
test
xchg
mov
rcll
cld
and
mov
dec
jns
test
push
testb
dec
jo
dec
fidivs
and
std
adc
push
sub
test
jecxz
xlat
jae
or
adc
sbb
add
push
mov
fimuls
stos
jae
adc
dec
jl
scas
insb
dec
dec
adc
aam
ret
pop
lods
js
push
and
stos
inc
rol
pop
rclb
cmp
aad
mov
es
or
das
pop
je
lock
push
adc
cmp
lahf
push
xor
xor
insl
shrb
xor
xchg
mov
insl
dec
sbb
add
aad
mov
repz
call
sbb
jp
fistpl
or
aas
sbb
jge
packuswb
lcall
jb
mov
xor
ljmp
mov
out
ficompl
cmc
and
and
jle
rcl
sbb
loop
push
pusha
out
rorl
jne
fisttpl
adc
mov
push
cmp
nop
dec
rol
mov
fmul
fcomps
mov
gs
incb
fnstcw
jle
add
pop
sbb
xor
xchg
mov
adc
je
push
cmpsb
loope
pop
jecxz
dec
inc
dec
mov
divl
push
xor
sub
pop
je
add
mov
out
mov
pusha
addr16
rorl
cmp
int3
mov
jae
jne
push
je
sahf
out
and
sub
cli
push
push
aam
push
out
add
lret
aas
lret
or
insl
inc
loop
inc
sbb
jno
add
adc
add
dec
into
mov
icebp
cli
xchg
push
lods
pop
push
sub
jbe
jbe
repnz
xchg
sbb
fwait
cmpsl
pop
stc
adc
loope
jmp
sar
ds
sbb
adc
orb
push
mov
filds
add
xor
push
gs
sub
mov
mov
les
cli
sub
sub
sub
test
iret
sbb
pop
push
ljmp
push
inc
dec
pop
test
lock
stc
int3
cmpsl
mov
fcoms
cs
push
insb
mov
outsl
sbb
cmp
mov
cmp
xchg
stos
mov
xchg
les
test
hlt
cltd
sbb
add
add
pop
or
adc
push
cmp
or
jle
xor
imul
push
and
or
popf
sti
jp
repnz
add
dec
dec
cld
adc
addr16
jmp
inc
ffree
xchg
or
lods
addr16
mov
out
js
fstpt
cmp
inc
mov
outsl
dec
cmp
fisttps
bound
jg
insl
outsl
movsb
aaa
repz
fadds
or
xor
cmp
cmpsl
push
mov
adc
inc
mov
push
enter
dec
adc
pop
andb
fwait
or
dec
jnp
cltd
mov
gs
dec
data16
test
add
jbe
gs
andb
out
xchg
rolb
mov
into
daa
add
arpl
xchg
lods
ds
or
or
ret
jp
push
jb
xchg
mov
inc
xchg
test
shl
subl
popa
mov
fdivrp
test
pusha
iret
dec
pop
xchg
sarl
add
incb
push
ret
pop
bound
popa
mov
or
jb
or
jge
cmp
xchg
les
imul
mov
sti
pop
clc
mov
or
rorl
es
repnz
push
add
adc
into
jge
cmpsb
addb
push
adc
stos
mov
insb
int
pop
or
aaa
xchg
pop
mov
pop
dec
add
push
repz
dec
xor
mov
adc
xchg
call
dec
outsl
push
cs
and
movsl
dec
inc
push
fidivl
sbb
lods
cmpsb
insb
in
call
mov
push
mov
adc
addr16
cmp
mov
cmpsb
pop
sub
fisubs
stos
inc
ss
pop
scas
cmc
xor
popa
rcl
loope
jp
add
sub
inc
push
push
mov
shlb
fidivrl
push
jmp
in
add
adc
inc
jb
add
jne
movsl
add
aad
cmp
in
fiaddl
aad
loop
stc
and
sbb
scas
mov
outsb
lds
clc
dec
xchg
mov
lcall
in
mov
xchg
insb
jg
add
leave
pop
in
mov
test
jo
pop
aad
add
fucom
bound
aaa
mov
aaa
out
or
or
in
into
aaa
mov
cmp
testb
xor
lret
mov
inc
cmpsb
mov
ss
fldt
dec
in
ljmp
test
cltd
out
sub
xor
in
jecxz
push
loop
xchg
lcall
movsl
mov
test
add
and
jo
pop
mov
sbb
xchg
rorl
or
sub
mov
shlb
or
jae
or
enter
push
popa
cmp
loope
xlat
push
ja
les
inc
mov
faddp
sti
jecxz
cmp
push
jno
and
jne
mov
jl
out
test
xchg
jmp
mov
inc
mov
or
pop
insl
adc
cmp
xlat
mov
in
xor
cmp
mov
dec
insl
xchg
inc
loop
fbld
jo
leave
and
mov
inc
jp
mov
sbbl
jle
int3
push
or
cmp
ffree
leave
push
lods
or
jo
sti
push
add
aaa
jmp
pop
rclb
test
jne
hlt
cmpsl
ret
insb
push
add
cmp
fs
cmp
mov
dec
or
pop
fistps
mov
jl
outsb
movl
lret
mov
cmc
jmp
mov
mov
mov
jl
popa
iret
mov
jle
fsubrl
jmp
stos
negl
or
out
scas
jo
addr16
es
adc
cmp
mov
lret
jo
repnz
jecxz
in
cli
fidivl
adc
push
mov
sar
sub
sbb
jae
pop
add
and
lcall
cmp
inc
mov
out
mov
mov
lcall
fdivrl
cmp
or
sbb
fsubrl
pop
lods
aam
leave
popa
and
fidivrs
xchg
sbb
push
aad
imul
jecxz
and
xchg
popf
dec
push
inc
mov
in
arpl
push
popa
adc
mov
xchg
loopne
pop
mov
arpl
ljmp
add
mov
mov
subb
loope
sub
je
divl
js
addl
mov
pop
cmp
daa
dec
in
inc
pop
cmp
pop
fwait
xor
pop
sbb
adc
cwtl
popf
aas
adc
adc
pop
ret
jmp
pop
test
mov
pop
or
or
stos
ret
cmp
in
fnstsw
push
fdivrs
in
mov
gs
imul
lods
scas
sti
sbb
mov
xchg
sbb
fcoms
sbb
incb
xor
push
xor
push
adc
add
dec
sub
sub
inc
movsl
xlat
orl
jg
daa
loop
cmc
dec
cmp
adc
and
and
push
push
adc
iret
out
mov
lock
xchg
xchg
ss
and
pop
icebp
stos
xlat
repnz
out
xchg
fdivrs
and
xor
xchg
mov
jmp
idivb
das
std
mov
xor
jg
dec
xor
test
addr16
dec
je
sub
xchg
xchg
mov
mov
insl
mov
inc
push
lock
cmp
fdivrs
insb
out
stos
mov
mov
adc
fs
cli
or
subl
daa
stc
xchg
mov
popa
push
ljmp
adc
or
and
ds
fwait
nop
or
mov
mov
mov
aaa
mov
adc
cmp
mov
add
lret
es
aas
jne
mov
in
mov
cmp
ljmp
addr16
push
mov
repz
sti
and
and
mov
popa
ja
cmp
pop
loope
popf
xor
insl
pop
mov
inc
adc
adc
mov
pop
push
outsb
fucomip
jb
add
fs
in
fcmovne
imul
jnp
pop
adc
push
bound
jge
mov
lcall
xor
pop
inc
std
outsl
jnp
pop
sub
popa
sub
std
cld
lret
fisttps
pusha
fs
hlt
push
push
in
iret
out
mov
dec
aas
add
dec
mov
add
mov
jle
dec
test
int3
jge
imul
out
movsl
jae
out
cmp
pushf
xchg
jle
cmp
dec
sarb
ss
and
push
jmp
xor
xchg
fs
xchg
movl
mov
adc
pushl
inc
fisubrs
ja
subb
pusha
gs
cltd
jg
cmovno
xchg
movsl
dec
sub
mov
xor
or
fmuls
push
popf
test
das
das
xor
inc
xorb
test
cmp
out
fildll
inc
fstpt
lcall
jmp
loope
dec
cld
pop
mov
add
fdivrs
or
mov
pop
mov
divl
add
xor
in
out
and
pushf
jo
negl
and
inc
call
das
pop
lcall
out
sub
push
pop
cmp
loopne
fldcw
or
jne
stos
call
stos
sbb
arpl
pop
pushf
mov
rorw
jmp
add
addr16
xchg
dec
es
iret
popa
arpl
ror
jge
add
xchg
shll
xor
cmp
jg
xchg
xor
inc
into
jbe
fsubrs
dec
adc
sti
mov
les
shll
pop
inc
mov
pop
aaa
stc
out
lahf
dec
ror
daa
push
xchg
xor
sub
cmc
in
lods
and
xchg
inc
mov
jb
or
rep
push
adc
cmp
jg
cmpsl
sbb
movsb
pop
xor
push
in
push
into
sarb
push
inc
imul
or
iret
sbb
jo
mov
mov
jl
push
lret
stc
cmp
and
push
inc
imull
push
jae
xchg
inc
repnz
enter
push
xor
dec
fsubrs
leave
pop
sbb
adc
stc
sbb
cmp
in
int
insb
pop
ja
or
xchg
js
or
jno
loop
je
aas
inc
insb
jns
lahf
xor
idivb
pop
gs
test
arpl
mov
push
cli
push
jmp
jo
shl
jb
mov
pop
pop
int3
fadd
dec
dec
ret
and
in
sbb
mov
clc
mov
lods
push
and
push
aam
je
xchg
in
ljmp
enter
push
pop
pop
cmp
or
push
mov
jle
cli
repnz
lret
xchg
stc
cmc
test
jne
xchg
pop
movsl
sti
movsl
mov
mov
outsb
xor
cmpsl
sbb
movsl
repz
jg
sti
cmp
jo
pop
and
sbb
push
xlat
sub
lcall
fsts
iret
cmp
mov
movsb
inc
ja
fmuls
adc
xchg
iret
dec
dec
push
into
push
imul
push
sbb
add
mov
push
sti
and
jb
or
or
sarl
inc
mov
push
xor
cmp
push
or
dec
pop
xchg
push
ljmp
pop
je
cmp
jl
dec
mov
dec
rclb
jo
add
mov
mov
cmp
and
mov
insb
pop
and
subl
dec
pop
cmp
pop
jp
sbb
xor
mov
out
stc
test
push
stos
cld
mov
xchg
rorb
sbb
movb
push
fwait
shl
dec
jne
outsl
and
dec
adc
pop
dec
mov
mov
add
test
adc
push
sahf
ficompl
cmpsb
adc
lret
inc
or
js
addr16
cmp
xchg
or
dec
js
orb
inc
pop
data16
pop
test
mov
loope
movsl
jle
pop
push
cmp
dec
hlt
test
inc
pop
test
stos
mov
pop
out
push
mov
or
mov
cmp
inc
mov
and
shr
push
in
ss
inc
pushf
imul
jae
adc
das
sbb
jne
or
clc
jae
inc
xchg
imul
pop
je
cmp
pop
jg
imull
sub
pop
int
add
xchg
mov
xchg
inc
aam
or
cmc
inc
adc
adc
mov
fucomi
push
rcl
testb
testl
pop
aad
subps
jb
call
mov
faddl
xchg
ljmp
pop
mov
mov
mov
adc
xchg
lret
loopne
dec
je
or
jle
fucomp
aas
lods
cmc
lcall
cmpb
sbb
add
xchg
cmp
loop
shld
rcrb
fdivs
mov
jg
dec
pop
addr16
cltd
jmp
fwait
and
jne
stc
cmp
xchg
or
push
mov
lea
dec
mov
mov
push
dec
mov
xchg
cltd
sub
dec
movsl
or
pop
mov
xchg
add
push
sahf
mov
out
sub
loop
xchg
inc
nop
test
test
mov
or
xchg
mov
fsubp
xlat
ret
pop
cmc
lods
movsb
int
add
setge
loop
aad
or
dec
movsl
jp
in
and
inc
into
add
in
mov
cwtl
aam
aam
pop
xlat
call
cmpb
sub
push
gs
rclb
fs
push
adc
xchg
sub
je
lret
mov
popl
lcall
pop
adc
add
and
push
push
iret
cmp
mull
lahf
mov
push
in
push
add
je
push
xor
ds
sbb
xor
lret
jbe
pushf
jae
push
xor
fbld
repz
arpl
adc
enter
fs
mov
xchg
jg
nopl
and
xor
xchg
sbb
repz
sarb
or
xor
jne
mov
mov
xchg
mov
jge
push
ljmp
bound
ud1
or
cmpsb
mov
dec
jecxz
adc
pop
mov
mov
loope
fidivl
and
das
fisttpll
lret
ja
inc
cmp
out
mov
adc
imul
nop
or
mov
les
pop
push
repz
ret
aaa
imul
hlt
enter
mov
mov
inc
testb
or
pop
add
dec
stc
inc
sub
push
jmp
xchg
sub
xchg
jno
std
xchg
pop
outsb
jg
dec
outsl
and
cmp
adc
cmc
cmp
xchg
push
sarl
mov
or
add
lret
js
lcall
sti
popf
cmp
inc
sbb
lcall
mov
mov
and
loope
outsl
mov
fimull
in
sub
push
popf
xor
mov
pop
jbe
jecxz
inc
aam
mov
daa
xlat
jo
insb
sbb
es
sub
add
jno
push
call
pop
lcall
test
cmp
or
out
jmp
repnz
addr16
imul
js
dec
inc
inc
je
nop
dec
nop
pop
inc
mov
lock
cmp
pop
mov
xlat
mov
cmp
push
andl
pop
mov
sbb
imul
aad
mov
jecxz
sub
add
mov
neg
xchg
mov
xor
cwtl
add
je
iret
insl
addr16
pop
or
imul
popf
popa
popf
arpl
ja
add
dec
jo
xor
sbb
movsb
popa
cli
test
cmpsl
lret
cmp
xlat
cmp
xchg
leave
gs
subl
push
imull
or
cld
in
shll
scas
and
data16
adc
les
test
clc
adc
cmpsl
sbb
movsl
mov
cmp
lret
xlat
xchg
cmp
push
jle
fwait
or
mov
inc
imul
test
mov
dec
mov
adc
inc
jne
popf
leave
out
cwtl
pop
xchg
jbe
orb
mov
data16
cwtl
rcrl
outsb
push
dec
insl
cltd
aaa
imul
repnz
push
movsl
adc
int3
pusha
into
jl
cwtl
add
pop
fists
mov
out
fdivrs
sbb
aam
sub
mov
shl
add
sbb
push
pop
fcomip
movsl
test
int3
adc
sti
mov
pop
jns
pop
mov
cmp
outsb
and
or
hlt
or
sub
cmp
sarl
and
xchg
inc
mov
rcr
xchg
cmp
xchg
lds
aaa
mov
insb
add
and
rcr
jnp
sub
pushf
or
pop
mov
sub
xor
pop
inc
xchg
mov
loopne
xchg
lcall
mov
je
dec
fisubrl
dec
stos
xchg
andl
fwait
xchg
data16
out
insb
fnstsw
mov
mov
jmp
sahf
cmpsl
jno
lret
inc
in
push
and
mov
inc
xchg
cwtl
jle
sarb
pop
pusha
adc
ja
inc
xor
push
sahf
ss
aaa
leave
mov
js
aam
or
test
push
push
add
jecxz
movsl
repz
jnp
std
lods
enter
mov
xor
les
pop
ja
movsl
sub
mov
inc
int3
pusha
pop
mov
mov
cmpsb
movsl
repnz
pop
imul
hlt
adc
jecxz
stc
cmp
pushl
cmp
cmp
inc
ret
dec
pusha
dec
popa
mov
jbe
mov
clc
pop
inc
or
in
dec
sbb
add
imul
sarl
adcl
fstpt
mov
sbb
popf
xor
mov
lahf
mov
test
mov
mov
lods
js
jl
jecxz
jge
push
in
in
xor
in
push
fs
nop
push
adc
push
pop
adc
addr16
xor
insl
scas
xchg
fs
lods
es
shll
lahf
in
and
xorl
das
jb
lret
lcall
ja
decb
sbb
ficomps
pop
sbb
cld
mov
mov
mov
pushf
mov
ss
ja
xchg
mov
jp
mov
clc
cmp
add
push
out
sbb
jo
xlat
mov
mov
stos
jns
mov
hlt
jno
push
imul
mov
mov
jecxz
in
ret
pushf
add
int
xlat
les
add
nopl
jns
pop
clc
xor
gs
out
sti
pop
xor
jns
mov
add
fsubrl
das
dec
xor
daa
add
cs
sub
inc
pop
fdivrp
xor
sbb
vphaddubq
jmp
mov
jp
add
test
in
or
jge
push
sbb
ss
push
xor
sub
adc
and
ret
adc
or
inc
jae
clc
movsb
outsl
xchg
fnstenv
pop
fildll
push
daa
dec
add
lcall
notb
pop
data16
ja
pop
xor
dec
push
cwtl
cld
xchg
cmp
dec
jle
jmp
mov
mov
jb
mov
out
jb
in
stos
mov
push
and
sbb
jmp
std
adc
pop
push
mov
out
mov
dec
into
jmp
repz
jmp
lds
in
std
xor
jle
add
pop
stc
inc
adc
push
bound
dec
jbe
xlat
ret
mov
mov
outsb
mov
sti
leave
fdivr
movsl
or
lahf
mov
add
xor
daa
dec
push
cmp
xlat
out
data16
add
ja
inc
and
mov
inc
sub
iret
clc
cmpsb
xchg
pop
aaa
insb
cltd
and
dec
les
jne
divb
stos
cmovp
loope
fimuls
ljmp
mov
pusha
scas
jnp
push
xor
aam
adc
adc
shlb
xor
jge
lods
adc
pop
std
sbb
enter
pop
inc
shlb
fstl
lcall
cmpsb
mov
push
lds
ss
test
les
pop
out
xlat
shlb
clc
push
add
sbb
xchg
lods
and
cmp
push
pop
aas
js
pop
dec
aam
pop
pop
imul
add
cld
and
mov
lahf
out
dec
push
inc
xor
push
push
les
and
rcrb
out
xchg
iret
aas
pop
mov
cld
mov
mov
and
sbb
pop
and
divb
xlat
aas
stc
repz
gs
test
or
inc
sub
pop
mov
mov
xchg
out
xchg
push
dec
dec
std
cmp
push
sbb
mov
sub
cwtl
icebp
cmpsl
push
rorb
xchg
pop
sub
push
jl
push
mov
jmp
xchg
cmp
push
cmp
cmp
roll
push
in
in
outsl
lock
mov
push
ss
rcrl
shl
fnstcw
mov
movsl
inc
push
aaa
or
add
dec
fstps
es
fistl
push
scas
test
add
aam
shlb
mull
negb
rorl
gs
xchg
fiadds
pop
lret
enter
mov
stos
push
ret
and
ja
movsb
push
lcall
jnp
inc
dec
imul
mov
out
inc
nop
jbe
jmp
sbb
out
sub
jmp
ss
jmp
roll
test
add
cmp
fcoml
mov
push
adc
mov
jmp
in
sar
notl
das
and
xorl
fstp
call
and
sub
lahf
mov
add
cltd
pop
fwait
cltd
icebp
rorl
add
push
lret
jge
lds
hlt
sub
and
ja
dec
mov
and
sbb
jmp
pop
repnz
xchg
xchg
xchg
imul
lock
scas
jnp
xor
ret
xchg
dec
cmp
and
push
cmpsb
xor
in
cmp
sub
dec
aam
lcall
js
jae
cmc
or
pop
mov
das
add
xchg
out
lahf
xchg
dec
adc
fdivr
fidivs
pop
push
idivb
repnz
push
mov
lcall
pop
mov
add
in
jns
mov
jge
jno
mov
int3
call
out
cmp
jb
and
adc
adc
sbb
fcomps
dec
into
iret
jp
std
inc
cmp
loopne
aam
cmpsb
pop
jne
in
push
andb
adcb
aad
or
mov
sbb
xor
roll
subb
test
add
mov
mov
pop
fwait
sub
add
nop
inc
mov
add
mov
jae
add
addr16
sti
repz
adc
add
sbb
sbb
rcrb
sub
enter
jnp
fimuls
data16
or
flds
xlat
popf
xor
lock
and
cltd
negl
scas
mov
jno
imul
in
out
lock
int
fwait
pop
imul
push
jns
push
aaa
test
mov
xchg
lret
nop
inc
push
sub
pop
test
inc
ds
add
mov
out
call
xor
inc
adc
dec
pop
rcl
cmp
rol
cli
xor
lods
icebp
outsb
adc
enter
lea
sbb
jg
scas
sar
into
ljmp
jns
mov
jg
stos
xor
jnp
je
adcl
jbe
stos
sbb
repz
push
mov
dec
pop
mov
push
mov
sub
call
adcb
enter
pop
inc
nop
push
icebp
movsb
inc
or
ja
daa
mov
add
mov
adc
sbb
dec
jg
and
mov
lcall
xchg
adc
aas
mov
inc
in
sahf
mov
clc
fidivrs
es
loop
inc
jge
or
add
cs
js
out
js
inc
push
jp
xchg
repz
js
push
ljmp
mov
insb
rclb
testl
aam
mov
jbe
push
add
fwait
cwtl
or
lahf
xor
sbb
xor
lcall
dec
add
pop
daa
push
xor
pop
dec
cld
mov
leave
mov
lock
jnp
inc
sub
or
orl
sbb
xchg
iret
mov
mov
rolb
in
leave
aam
mov
pop
xor
mov
jns
arpl
les
sub
xor
es
cmp
movsl
icebp
cmp
shlb
push
inc
push
in
xchg
mov
movl
filds
push
ret
ficoml
push
adc
std
outsb
dec
loop
and
push
xchg
inc
sti
sbb
scas
aam
mov
in
xchg
mov
pop
sbb
jmp
es
xchg
push
add
xchg
pop
push
jmp
stc
lret
mov
int
aad
lods
inc
out
pop
mov
add
jmp
mov
pop
sub
xor
je
aam
xchg
iret
inc
sbb
mov
outsl
popf
add
sti
mov
cmp
sub
xchg
push
idivl
fdivl
lds
mov
mov
push
cmp
imul
outsl
or
lods
inc
loope
lret
sbb
xor
adc
jbe
sub
dec
rorb
push
pop
and
sbb
adc
ss
xor
inc
jb
enter
jge
or
inc
xchg
ss
out
mov
inc
stos
or
inc
nopl
adc
repnz
cs
lret
lods
jge
add
push
test
sti
in
fsub
fwait
test
into
sti
mov
shlb
test
subb
rcrl
pop
or
xchg
cmpsl
cs
cld
test
mov
out
jno
adc
pop
xlat
orl
xchg
outsb
add
inc
movsl
fistps
mov
sbbl
dec
or
sbb
jb
cmpsl
out
sbbb
sti
ds
stc
imul
popf
add
inc
lahf
dec
inc
pop
pop
sbb
push
xor
and
lcall
ret
push
xor
in
push
fisubs
jb
int
test
daa
repz
push
je
div
and
pusha
adc
jl
cmp
xchg
push
outsl
push
mov
dec
dec
jp
mov
push
pop
xchg
mov
mov
in
xor
in
and
ficoml
xchg
into
mov
mov
mov
pop
xchg
cmp
pop
cmp
and
hlt
sub
fstpt
jno
jo
divb
xchg
add
cmp
frstor
cli
rcrb
cmpl
arpl
pop
mov
mov
rorl
pop
js
jns
pop
scas
icebp
pop
rcl
fs
push
icebp
ds
mov
sbb
cmpsl
xor
mov
ss
into
fisttpll
adc
fisubrs
inc
mov
adc
sub
lds
test
xchg
lret
jb
inc
mov
std
jo
sti
xchg
push
gs
out
ja
test
push
pop
call
jae
cmpsl
and
jae
dec
std
mov
adc
or
incb
xchg
icebp
mov
sub
sbb
ljmp
or
or
sub
jl
gs
push
push
pop
add
imulb
aas
bnd
adc
push
add
add
stc
adc
mov
scas
xchg
mov
xor
pusha
lret
lret
add
and
mov
cmpsb
mov
dec
std
and
add
cmp
fiadds
outsl
fstpl
das
sbb
sub
pop
std
dec
popf
hlt
push
pop
sbb
call
lds
push
mov
cmp
pusha
lcall
mov
jg
xchg
out
pop
mov
or
jmp
sub
repnz
adc
inc
in
adc
mov
cs
test
sahf
push
inc
mov
bound
sub
mov
sahf
test
aam
ss
adc
enter
ret
out
sbb
push
insb
push
sbb
push
lret
mov
mov
jne
pop
pop
test
fs
out
pushl
out
ljmp
mov
dec
inc
xchg
scas
sub
mov
cmp
fstl
std
subb
aaa
call
mov
inc
push
mov
jnp
jne
loope
adc
enter
jl
popa
add
or
lcall
push
leave
mov
out
out
jo
fstl
and
fwait
xor
fidivrl
jge
out
clc
test
or
call
dec
jno
jge
lret
lahf
add
push
cmp
stc
int3
stos
imul
inc
js
frstor
scas
out
xchg
fmul
stc
jbe
xor
movsl
int
sbb
mov
enter
adc
mov
inc
test
cmpsl
mov
push
in
pop
xor
xor
jge
adc
in
dec
mov
scas
pop
mov
imul
fisubs
sub
and
add
lods
lret
adc
dec
addl
sbb
cmp
pop
negb
repnz
and
inc
sub
add
adc
mov
sbb
inc
sbb
inc
cli
idivl
dec
inc
repnz
arpl
jg
sub
dec
cld
dec
xchg
fwait
sub
sub
sub
pop
icebp
dec
add
push
lret
addr16
inc
cmp
and
int3
lds
jo
mov
cmpl
lea
jno
and
dec
pop
arpl
jae
xchg
and
sub
stos
push
mov
flds
jmp
sti
in
dec
xchg
sub
adc
into
jbe
les
sbb
gs
pusha
cld
add
ss
adc
test
in
les
rcrl
stos
pop
sti
dec
dec
cmp
into
lcall
dec
push
lods
sub
lret
adc
xchg
insb
aaa
shll
inc
pop
pop
add
jmp
subb
adc
ljmp
xchg
insb
push
repz
mov
test
add
test
jecxz
imul
and
sbb
sub
incb
out
mov
xchg
test
std
cmp
cltd
repnz
testl
xchg
mov
popf
jo
mov
or
stos
add
out
scas
lds
adc
gs
outsl
inc
ja
inc
imul
icebp
lea
xor
lods
jl
xor
cltd
pop
mov
mov
lds
test
test
pop
xlat
out
jne
adc
mov
mov
mov
lret
adcb
inc
cmp
push
inc
jge
dec
and
mov
clc
jge
addl
push
and
pop
aas
fmuls
pop
xchg
inc
test
es
test
cmp
fnstcw
mov
xchg
xor
cmp
or
sbb
sti
fs
sbb
inc
xor
xor
push
sbb
ret
ss
es
fcomi
clc
mov
popf
sub
pop
subb
inc
test
xor
add
push
jl
xor
int3
test
popa
fmul
jns
add
push
lods
aad
gs
push
fdivrs
xchg
mov
arpl
mov
xchg
xchg
shll
dec
rclb
jns
movsl
fidivs
mov
xor
pop
cmpsb
adcl
mov
ss
xchg
cli
or
bound
fcoml
cmp
pop
notb
ror
lock
mov
or
mov
add
or
popf
ds
dec
push
or
xchg
loop
push
addb
inc
icebp
fadds
subl
mov
sbb
faddl
decl
lcall
loop
gs
imul
inc
xor
inc
fcmovbe
scas
jb
into
add
mov
cmc
mov
loop
ds
outsl
pusha
xchg
pop
xor
mov
or
std
lea
xchg
nop
sbb
cwtl
mov
or
or
test
stos
and
push
jbe
mov
lret
lcall
mov
mov
cmp
jb
inc
sbb
fistpll
push
addr16
push
andl
test
sahf
popa
fiadds
rcl
cli
sbb
push
pop
and
mov
lret
jle
je
cmc
mov
test
jp
mov
in
jecxz
mov
xor
ror
clc
mov
xlat
jno
xchg
cmpsb
mov
jl
das
shlb
sub
iret
imul
ret
xchg
pop
out
push
notb
pushf
mov
lds
stos
adc
sarb
fldenv
sbb
mov
ret
sti
bound
push
mov
xchg
fadds
pop
mov
int
fs
push
cmp
jp
lcall
jmp
lods
js
inc
cmp
push
xchg
int3
adc
xchg
bnd
jae
fwait
mov
jo
ja
cmp
xchg
xchg
out
and
pop
jae
mov
mov
pop
adc
ficomps
loope
popa
pushf
xlat
xchg
sbb
add
scas
mov
jns
lock
jl
mov
inc
mov
pop
xor
pop
xor
out
fcmove
jne
push
ds
es
sub
mov
sahf
xor
loopne
pop
ret
inc
lods
xchg
and
add
xchg
cmp
push
mov
mov
pop
add
inc
sub
push
jp
in
lret
mov
cmp
jnp
hlt
repz
dec
andb
pop
ljmp
jle
pand
mov
cmp
and
add
pop
inc
imul
fwait
loop
jne
inc
xchg
push
movl
inc
xor
decb
cmpsl
or
cmp
out
sub
cmpsb
imul
jle
aas
xchg
adc
xor
jle
daa
setg
call
pop
or
cmc
fistps
js
inc
ret
jg
repnz
mov
mov
push
gs
test
adc
fidivs
jp
push
fldcw
xchg
movsb
mov
repz
mov
add
cmp
add
lock
push
sbb
push
jno
mov
pop
adc
lahf
adc
mov
sbb
push
jnp
xchg
mov
and
in
rcrb
mov
fildl
pop
data16
bound
insb
cmp
add
mov
mov
insl
outsb
adc
xlat
adc
mov
loopne
sbb
push
icebp
push
std
test
cmpsb
or
popf
add
push
negb
aam
shll
call
add
cmpl
sub
adc
into
sahf
stos
subl
in
and
adc
cmp
push
lahf
mov
inc
pop
subb
fdivrs
cmpsb
movsb
jne
sbb
mov
pop
or
cmp
sbb
sub
out
mov
cmp
lea
jae
test
adc
imul
push
fs
scas
push
inc
rol
jmp
ret
fmulp
fdiv
sbb
inc
ljmp
lcall
in
hlt
pushf
push
and
aad
movsb
sub
fwait
cmp
inc
ds
mov
loop
std
leave
push
dec
std
mov
call
imul
push
stos
scas
movsb
push
sub
das
mov
push
add
test
push
hlt
xor
icebp
out
insb
jb
lods
dec
push
repz
pop
shl
add
jb
sub
mov
fldt
push
decb
fadd
ds
testb
push
stos
gs
out
movsl
add
mov
mov
stos
jecxz
adc
mov
or
ds
fcmovu
mov
repz
out
dec
mov
xor
insb
ficomps
dec
cltd
mov
cli
fadd
test
dec
lods
and
fcomps
push
pop
out
pushf
mov
call
or
mov
jbe
or
lods
fs
clc
adc
push
dec
jg
push
jle
insl
ss
mov
test
das
mov
aaa
je
or
and
push
push
sub
aas
sub
bound
xor
rolb
paddb
sub
cmp
jne
popf
daa
mov
xlat
int3
push
in
push
cmp
repz
clc
nop
cwtl
adc
je
fdivl
dec
adc
add
incl
inc
enter
aas
popf
repz
push
push
lret
inc
add
pop
xchg
add
bound
jbe
into
in
cs
or
test
sbb
inc
shrl
sbb
xor
push
fildl
mov
bound
sbb
mov
jge
fcoml
adc
cld
imul
cmpsb
jne
scas
out
pop
pop
lock
push
pop
iret
add
ds
jmp
push
jno
lods
test
daa
sub
dec
dec
dec
mov
jmp
adc
mov
jbe
add
add
enter
les
add
mov
mov
mov
lock
dec
insl
testl
dec
mov
int3
adcb
outsl
test
in
and
push
jne
loopne
cmp
add
sub
icebp
sub
mov
lea
fs
xor
cmpb
sbb
subl
or
imul
mov
cwtl
xor
dec
test
or
sub
ret
scas
imul
mov
mov
scas
sarl
add
pusha
mov
or
xchg
sub
cmp
pop
idivb
and
push
xchg
fcomps
andl
fs
enter
aas
enter
outsl
sahf
pop
xchg
lcall
xchg
mov
and
stos
pop
mov
push
fidivrl
mov
in
out
iret
shll
sbb
lock
loop
add
sub
sbb
faddp
cmp
inc
test
in
gs
add
shll
mov
or
fidivrl
xchg
fdivrl
or
dec
cmpsb
mov
mov
xchg
fidivs
mov
add
pop
or
dec
insb
mov
or
mov
xchg
xchg
por
inc
iret
mov
and
and
mov
jmp
leave
lret
lcall
cmc
jb
jecxz
mov
popa
loopne
cmp
aad
or
dec
out
icebp
fiadds
mov
add
push
ud0
dec
subl
das
sub
adc
mov
pop
into
test
xchg
fwait
out
adc
enter
inc
sbb
xchg
outsb
mov
addb
jle
repz
call
fwait
aas
xorps
fistps
inc
fsubp
fdivp
sahf
cltd
mov
push
xor
leave
insb
xor
js
mov
xlat
xchg
aad
sti
xor
cmp
xchg
or
dec
testl
lret
std
add
mov
adc
ljmp
xchg
push
add
push
xchg
inc
mov
mov
xchg
aad
jnp
jae
cmc
mov
movsl
sbb
push
push
cltd
enter
pushl
inc
cmc
jns
jmp
stos
lods
daa
test
addb
mov
les
nop
lods
fstpl
in
jno
aam
negl
pop
jb
cmp
stc
ret
xchg
inc
dec
push
cwtl
cmp
fsubrl
jp
sub
orl
popa
es
movsb
lret
xor
data16
shll
test
push
and
jg
in
jo
ss
cmp
sub
cwtl
add
ss
pop
test
cmp
jnp
das
and
mov
lods
jp
sti
enter
lret
loop
jne
lcall
dec
movsb
jp
jnp
mov
popf
fisttpl
cmp
sbb
scas
bnd
fsubrl
lea
mov
sarb
test
aam
pushf
dec
xchg
xchg
lahf
mov
add
dec
pop
in
roll
mov
inc
sbb
fs
scas
mov
xchg
jl
and
aas
adc
pushl
mov
gs
shr
jecxz
lcall
dec
push
xchg
fisubrl
mov
popf
and
fstps
stos
int
sbb
xchg
mov
mov
stc
xchg
addr16
cmp
stc
lret
loopne
sbb
fsubrs
clc
xor
inc
xor
inc
push
ret
pop
dec
mov
jp
test
pop
int3
or
xchg
push
or
or
fistpll
aam
into
mov
popf
cmp
sub
lret
out
fdivl
mov
push
add
mov
shlb
cmp
addw
pop
mov
call
ret
push
mov
test
jb
jnp
jae
outsl
fstl
add
in
mov
mov
nop
jge
mov
repz
fwait
lcall
sbb
adc
and
mov
sti
jmp
sbb
xchg
out
cmp
das
out
test
pop
outsb
push
mov
testl
pusha
movsl
fidivl
mov
outsl
movsb
dec
stos
clc
sarl
dec
lods
xchg
or
rcr
cmp
repnz
pop
cmp
add
stc
daa
xor
or
call
xor
stc
xor
enter
push
push
cwtl
jnp
cli
sti
mov
push
gs
xchg
add
insl
out
dec
ss
imul
lea
fistl
in
xor
pushf
les
xor
insb
hlt
mov
lcall
fisubs
bswap
jge
jmp
mov
mov
jne
dec
or
out
stos
and
adc
test
into
ror
stos
jg
xor
mov
imul
inc
bound
adc
out
pop
fucomip
lret
dec
call
inc
pop
fdivp
inc
ljmp
pop
or
ljmp
nop
mov
dec
xchg
jecxz
js
ret
out
pop
dec
pop
jne
loop
lods
xchg
bndstx
add
movsb
lea
lahf
ret
jl
or
icebp
mov
in
bound
xchg
loop
mov
lret
jmp
mov
addr16
enter
pop
mov
and
lea
sbb
inc
call
adc
mov
mov
repz
aad
or
pushf
push
pand
inc
or
xchg
outsl
stos
stc
in
push
testl
dec
lock
cmp
divb
adc
xchg
out
adc
cmp
or
mov
pop
push
fsubr
jno
sahf
imul
shll
add
std
shlb
rcrl
fists
adc
mov
shlb
mov
xor
or
sbb
dec
js
clc
xor
add
and
cmpsl
loop
sahf
std
adc
movups
push
cmp
mov
ret
pop
mov
sbbl
cmp
jl
jnp
ret
pop
and
les
mov
cmpsb
nop
and
push
push
sti
lahf
cs
out
pop
push
cmp
mov
dec
or
inc
mov
push
popf
hlt
push
mov
mov
int
sub
in
mov
sub
sarl
loopne
cltd
mov
xchg
xor
jmp
shll
cmp
popa
push
addl
lret
shr
xchg
jl
mov
neg
fistpll
mov
icebp
aad
xor
pop
popl
and
xor
pop
or
adc
pusha
sti
jg
in
sub
ljmp
push
jle
les
sbb
jno
outsl
jb
out
ljmp
adc
xor
lods
sbb
inc
mov
notb
into
push
lock
add
or
iret
and
push
jb
shlb
cltd
adc
mov
ret
xchg
sub
sbb
push
mov
inc
std
leave
insb
mov
int
cmp
cmp
push
stos
popa
jmp
xlat
sbb
iret
pop
fiaddl
push
fsubrs
jno
adc
and
movsl
push
pop
packuswb
push
test
imul
or
jo
into
mov
push
jae
mov
or
js
xchg
out
mov
pop
outsl
mov
jmp
shll
and
sbb
cmp
repnz
iret
push
shlb
mov
mov
pushf
xchg
ds
xor
jbe
xchg
inc
pop
push
sbb
ja
int3
notl
add
leave
gs
stos
and
aam
enter
test
sbb
popa
dec
pushf
and
int3
lahf
jne
bswap
jae
test
sbbb
in
jge
adc
push
mov
adc
imul
add
outsb
add
sbb
enter
lock
jmp
dec
call
mov
nop
js
push
pop
inc
insb
and
sti
int
lea
mov
push
outsb
mov
movsl
jnp,pn
aam
negl
sbb
ds
stc
mov
sarl
xchg
mov
xorb
sbb
cmc
loope
mov
jle
stc
test
fwait
int
adc
mov
and
or
sub
insl
std
add
imul
mov
das
enter
adc
shll
sarb
and
push
div
fisubl
dec
stc
outsb
bound
adc
decb
mov
jns
lods
repnz
jo
in
nop
sbb
daa
lods
or
bound
ljmp
dec
std
ss
scas
cmp
rcr
xor
les
mov
leave
lock
add
cmp
data16
dec
popa
cmp
sarl
mov
jb
push
jno
ja
xchg
and
mov
mov
sbb
lret
movsl
loopne
pop
adc
and
fdivrl
aaa
lret
in
adc
cs
mov
push
push
jo
xchg
mov
std
sahf
bound
out
and
dec
cmpsb
inc
adc
jns
mov
adc
sub
xor
push
lcall
pushf
ret
fidivs
andl
iret
mov
inc
pop
sarl
mov
push
nop
leave
arpl
xchg
std
scas
xchg
insl
xchg
das
xor
xor
dec
or
es
pop
mov
sub
mov
jno
daa
push
aad
dec
inc
dec
xlat
jae
sub
into
mov
push
das
and
pop
ja
and
insb
scas
xor
cmp
add
bound
jne
shl
or
pop
es
sub
push
movsb
mov
lcall
mov
jo
xor
or
scas
push
inc
add
pop
push
popf
and
xchg
pop
cmpb
adc
leave
shrb
jmp
sub
add
xor
rorl
or
arpl
xchg
ficoms
repz
test
in
adc
je
fidivl
add
or
imul
sbb
je
test
add
jnp
push
leave
int3
fbstp
lods
std
orl
popa
fldl
mov
adc
adc
mov
ret
dec
or
jb
and
inc
sbb
add
das
mov
in
push
dec
jbe
adc
decb
test
js
mov
ljmp
dec
lcall
mov
js
lcall
iret
push
mov
fimuls
gs
movsl
dec
gs
jno
test
dec
popf
aam
or
mov
fstl
es
in
addl
in
push
xchg
movsl
cmc
mov
lret
out
dec
popf
cmp
loope
pop
inc
sub
arpl
out
es
xchg
int3
cwtl
adc
or
pushf
ss
test
push
stc
daa
pop
push
lods
sbb
jge
push
sbb
xchg
hlt
inc
dec
sti
repnz
lahf
inc
pushl
sub
xchg
inc
mov
jb
xchg
test
jnp
mov
in
and
mov
push
bound
inc
cmpb
cmpsl
and
jp
loopne
jmp
dec
mov
mov
std
outsb
mov
inc
cwtl
xor
mov
inc
and
xor
out
aad
imul
movsb
insb
and
mov
data16
mov
insb
je
cli
addr16
lea
cltd
cmpps
xchg
pop
add
fisttpl
jle
xlat
xchg
jae
adc
ljmp
cmc
push
pop
daa
es
inc
pop
xor
es
outsl
andb
xchg
jmp
adc
add
test
cltd
add
mov
mov
into
faddl
popf
into
or
mov
rol
sbb
sub
push
lcall
aas
fs
aam
and
fistpll
jbe
sahf
rolb
jae
scas
dec
in
ds
shl
mov
dec
aam
pop
ret
ljmp
mov
cmpsl
jb
mov
stos
movsl
cmpsl
xchg
add
movsb
cmp
dec
mov
sahf
es
pop
push
decl
aad
xor
cmp
pop
loopne
ja
mov
mov
nop
test
xchg
push
push
enter
out
les
clc
mov
mov
xchg
into
dec
push
pop
cmp
lods
fisubl
pop
loope
mov
inc
add
test
push
in
jne
mov
sbb
enter
mov
pop
cmpsb
jb
adc
fnstcw
jae
sahf
cmp
insb
xchg
pop
adc
xchg
test
outsb
adc
xchg
or
and
sub
rorl
adc
roll
add
mov
mov
push
pop
hlt
push
hlt
rorl
dec
les
push
test
or
sub
sbb
push
out
jge
adc
outsl
clc
push
push
pop
jnp
sub
int3
mov
aaa
dec
add
adc
adc
sarb
adc
xlat
and
mov
stos
pop
cmp
mov
mov
jns
add
add
pop
jno
xchg
cmp
mov
insl
pop
mov
xchg
mul
out
push
xchg
mov
xchg
negb
pop
push
add
mov
cli
and
and
xchg
push
addl
push
xlat
pop
push
fwait
popa
clc
xchg
dec
dec
mov
sbb
insb
add
add
adc
or
add
inc
ret
fildl
cmp
or
add
mov
test
mov
add
cld
jl
fisttpll
adc
cmc
push
call
sub
cmpsb
mov
mov
dec
pop
sbb
mov
inc
icebp
rcrl
push
jnp
enter
negb
std
mov
pushf
mov
cmpsb
or
xchg
jbe
in
and
or
pushf
push
test
lods
or
push
jecxz
or
pop
add
aad
pushf
outsb
jmp
mov
je
xchg
or
gs
outsl
gs
negl
clc
pop
push
outsb
leave
aad
roll
aas
adc
cmpsl
arpl
push
rsqrtps
xchg
shlb
mov
cmpsb
inc
inc
and
ret
rorl
sub
mov
popa
jnp
sbb
cmp
fisubrs
test
and
cld
and
bound
pop
test
insl
lret
les
sub
jmp
cmpsb
mov
adc
push
loope
mov
adc
fcmovnbe
add
push
inc
fnsave
out
roll
das
out
movsl
dec
xchg
in
add
std
popl
das
sarb
ret
xchg
sbb
or
pop
call
test
push
pop
bnd
shrl
int3
aas
mov
push
fisubl
shlb
mov
xchg
dec
xchg
add
xor
add
push
lea
mov
pop
mov
fiaddl
out
mov
jge
xchg
adcb
inc
xchg
xlat
std
pop
pop
jne
pop
pusha
int
mov
inc
fdivl
pop
movb
in
push
orl
test
push
push
out
stos
mov
add
jp
ds
jmp
mov
dec
push
out
jle
dec
jmp
fdivr
inc
cli
add
mov
sbb
shll
lods
roll
and
pop
insl
fidivrl
inc
lret
pop
adc
dec
mov
lock
dec
pop
hlt
and
pop
inc
ljmp
jecxz
loope
cmpsb
sar
scas
mov
in
pushf
inc
pushf
push
adc
clc
mov
ss
xchg
sahf
cmp
mov
xchg
adc
mov
f2xm1
xchg
or
cmpsl
mov
dec
movsb
xor
aaa
jp
cmpsb
or
lret
xlat
addr16
pop
mov
mov
test
inc
arpl
dec
jne
stos
xlat
cmp
push
fcmove
mov
push
push
jb
and
push
insb
sysret
cmpsl
adc
xchg
das
pushf
fldcw
inc
std
mov
pop
xchg
sbb
dec
push
push
into
shr
pop
lock
push
mov
ror
jb
xor
mov
shrl
jle
sbb
les
lret
cmp
dec
roll
pop
push
inc
test
inc
jg
inc
outsb
movsl
pusha
or
fsts
cmp
imul
out
push
push
add
subl
jnp
test
ja
negb
pop
repnz
jle
stc
sub
inc
add
fistps
pop
xchg
mov
fcmove
dec
adc
je
or
pushf
xchg
or
mov
jbe
lods
dec
inc
sarl
insb
cmp
orb
out
mov
ja
jmp
aam
pop
fnsave
test
adc
repz
movsb
add
pop
add
or
sbb
lcall
mov
pop
push
lcall
jp
mov
in
xor
mov
negl
lea
shlb
mov
les
or
pop
mov
cmp
iret
add
or
sbb
int3
pop
jge
push
adc
sbb
fldenv
mov
sbb
and
iret
in
popf
push
push
popf
mov
xchg
outsl
xchg
mov
mov
add
out
pop
mov
dec
xor
rorb
mov
jo
pop
out
adc
dec
fldln2
jno
mov
mov
lods
cmp
lcall
sbb
addr16
cmp
ljmp
jmp
js
stos
xor
xorl
popa
pop
jae
fs
sarb
js
jle
pushf
xor
xor
into
aas
xchg
push
dec
movsl
inc
mov
push
aad
mov
inc
lds
inc
incl
mov
mov
fdivrl
loopne
xor
mov
mov
mov
call
or
dec
outsl
js
xchg
pop
rorb
jg
or
test
sahf
push
pop
ret
andb
and
dec
inc
mov
dec
cli
scas
cmp
or
orb
insb
jns
outsl
lcall
call
std
sub
fisubl
andb
pop
mov
int3
push
add
pop
xor
inc
mov
ret
xchg
pushf
adc
jmp
add
cld
sbb
imul
jmp
xchg
jno
pop
jae
pop
iret
mov
adc
cmpsl
cmp
inc
add
js
sbb
mov
rclb
ret
push
mov
xchg
sbb
mov
ljmp
pop
jne
push
loope
push
jns
sbbb
mov
xchg
imul
and
jbe
and
ds
mov
lret
jge
or
mov
icebp
call
mov
push
add
sbb
es
add
mov
jmp
pushl
mov
push
mov
mov
sub
test
fs
cmp
pop
jl
inc
adc
scas
faddl
enter
je
mov
jae
mov
mov
or
and
lcall
in
push
jne
shlb
imul
inc
outsb
or
sahf
lea
cmp
lds
fisubs
mov
mov
mov
xor
mov
adc
cmp
loope
rcrl
adc
shrd
pop
inc
dec
xor
fiadds
jns
aam
xchg
mov
or
sbb
push
xchg
pop
sub
test
and
test
loope
add
mov
cmp
pop
and
push
jp
repnz
fsubs
roll
imul
jge
xor
hlt
push
in
or
xchg
or
stc
pop
jmp
rcr
dec
lret
mov
xor
lea
fucomip
xlat
ljmp
inc
mov
icebp
and
mov
xor
jecxz
sbb
std
repz
es
push
lret
add
jl
push
sbb
or
adc
sarb
rcrb
fmull
xor
in
shll
jge
test
xchg
cmc
pop
sub
jle
loop
mov
mov
mov
jge
pop
sbb
inc
xchg
mov
std
out
mov
gs
mov
push
test
cs
add
aad
xchg
add
sbb
movsb
inc
loope
mov
cmpb
mov
lcall
or
xor
mov
std
inc
xor
xchg
mov
adc
std
es
stc
xor
and
pop
mov
sub
daa
enter
and
popf
cld
std
sbbl
pop
sub
cwtl
sbb
jno
popa
mov
aad
inc
and
out
fadds
and
pop
add
sbb
fisttpl
loop
add
call
lock
xchg
stos
out
rcrl
xchg
ficompl
rcrb
mov
rsqrtps
mov
adc
decb
movl
or
sti
adc
xchg
imul
xchg
inc
movsl
stos
adc
push
push
mov
cltd
xchg
cmp
push
outsl
movsl
xchg
pop
mov
xor
dec
sbb
adc
pop
inc
cli
mov
fmulp
insb
lret
sahf
movl
incb
insb
lcall
jbe
mov
fidivrs
imul
out
and
mov
xorb
pop
push
cwtl
xchg
and
sbb
sub
out
push
xchg
add
insb
dec
adc
cld
repz
fisttpll
out
lock
ret
cmp
xchg
cs
and
or
push
arpl
out
scas
addb
cmp
inc
fs
decl
call
cmp
lock
sbb
dec
mov
pushf
out
stc
pop
jne
int
cmp
enter
ja
jp
or
jnp
into
sub
test
push
push
mov
in
mov
lret
movsb
dec
sbb
cmp
in
inc
pop
hlt
adc
inc
pop
out
and
nop
imul
stc
movswl
dec
call
icebp
pop
xchg
mov
and
inc
and
ret
scas
mov
popa
sbb
inc
es
inc
iret
pop
jne
xchg
push
xchg
sbb
ja
xchg
cmc
repz
cmpsl
popf
stos
pop
jno
dec
jne
sub
loopne
and
cwtl
movsb
cmp
cltd
pop
cwtl
std
cmpsb
jnp
add
jno
dec
push
push
sub
in
lods
sub
pop
xchg
adc
dec
cld
cld
hlt
movsl
xchg
mov
xchg
push
dec
test
loopne
sub
movq
jb
mov
xor
repnz
xor
pushf
fdivl
and
mov
lds
add
shr
and
push
int
sbb
dec
sub
in
daa
mov
cmp
push
adc
adc
mul
jge
lds
xchg
mov
fistpl
or
les
cmp
sbb
in
fstps
cli
and
cmp
cmpsl
popa
push
cld
lea
imul
lods
xor
adc
clc
cmpsb
out
inc
fdivp
or
mov
int3
outsb
test
les
pop
andb
xor
push
aas
mov
or
sub
sbb
xor
loop
adc
jg
gs
jl
cltd
divps
jecxz
js
inc
lret
or
les
ret
jbe
push
xor
repnz
or
cld
pop
out
push
loopne
xchg
addr16
in
lret
fwait
dec
sub
pop
mov
xchg
loop
sar
jb
mov
inc
fidivs
test
imul
out
sub
sti
adc
pop
cld
out
mov
leave
add
mov
mov
mov
xchg
jb
inc
fcoms
jo
push
idiv
cmp
add
popa
push
imulb
aaa
fisttpl
xlat
xor
sbb
xlat
xchg
movsl
cmp
out
sbb
xorb
sbb
lea
jmp
jmp
sbb
xchg
xorl
add
movsl
cld
clc
bound
inc
out
jb
ljmp
mov
sbb
out
or
mov
sbb
push
aaa
xchg
out
pop
in
aas
mov
and
lea
out
add
push
and
aam
lret
lea
pop
setbe
daa
jb
cmpsb
jg
sbb
pop
xor
dec
push
push
cmp
mov
add
sub
out
or
aas
or
push
xchg
lods
in
ja
popf
inc
add
inc
xlat
aam
cmp
daa
aam
ret
inc
filds
push
mov
insl
pop
mov
sbb
sub
test
icebp
or
push
stos
jmp
push
aaa
cmp
das
loope
xchg
inc
mov
dec
sub
out
in
or
and
inc
jbe
fsubp
add
je
fnstenv
mov
and
int
dec
mov
and
add
cmp
jg
xchg
push
lea
or
test
fcoml
inc
dec
imul
sahf
gs
cmp
mov
stos
mov
movsb
mov
lods
pop
mov
call
sub
xor
clc
cmp
xor
mov
in
pop
daa
aaa
sub
add
ret
cmp
popf
aad
xchg
add
repz
add
rorb
lock
call
mov
pop
iret
pop
scas
out
cmp
out
sub
dec
pop
xchg
or
icebp
ds
inc
out
aad
jle
jecxz
pop
xchg
mov
xor
sbb
pop
testl
or
int
icebp
pop
outsb
addr16
push
add
dec
jmp
dec
es
jbe
mov
or
popf
jmp
int3
fs
add
xchg
lret
in
inc
xchg
inc
pusha
sbb
test
aas
lds
in
dec
push
xchg
fwait
out
adc
inc
cs
jbe
cmp
call
out
lods
xchg
sarl
outsl
push
out
inc
test
xor
and
mov
mov
xor
mov
subb
fstps
mov
jecxz
or
shlb
mov
and
gs
jo
xchg
fs
adc
ljmp
rol
pushl
pusha
jg
out
inc
dec
mov
sbb
and
cmpl
shrb
icebp
das
mov
dec
adc
insb
cmpsl
or
sbb
xor
and
arpl
mov
fbld
add
dec
or
push
and
bound
jnp
and
scas
or
pop
dec
in
enter
js
xchg
das
popf
add
pop
das
mov
fwait
mov
fs
or
sbb
add
mov
sti
cmp
sbb
popa
mov
stos
and
jp
sbb
adc
repz
fcmovu
data16
in
stc
jmp
jb
sub
jbe
and
lret
pop
gs
pop
jmp
xchg
fmulp
dec
add
push
jg
iret
pop
out
mov
orl
icebp
lret
insb
icebp
cmp
sarl
stc
in
jl
xor
sti
mov
out
lahf
jne
in
dec
cld
or
jae
and
inc
iret
push
pop
insl
mov
sbb
sbbb
mov
sti
daa
loop
dec
and
push
out
mov
mov
repnz
insl
cmpb
leave
cmp
fsubrs
sub
and
lcall
mov
rorl
aaa
bound
mov
pop
push
xchg
push
in
mov
cld
and
aaa
mov
popf
repz
cwtl
or
call
hlt
xchg
je
xor
jmp
jns
sub
pop
xchg
inc
scas
lcall
add
xchg
sbb
or
push
lds
cmp
pop
mov
dec
mov
add
into
dec
sub
mov
cli
xor
cmp
add
in
in
es
cmp
xor
jae
aaa
imul
popf
pop
orl
adc
adc
mov
orb
ret
or
shll
subl
imul
rorl
scas
lahf
pusha
inc
aad
cwtl
mov
mov
inc
mov
cmp
test
mov
dec
iret
sub
loop
loop
ljmp
cmpsl
dec
jp
outsb
inc
enter
cld
adc
fwait
in
scas
push
dec
cmp
xchg
sbb
fidivrl
sbb
mov
or
test
push
rcl
fs
push
mov
roll
cmpl
das
es
xor
xchg
inc
lods
push
xchg
daa
add
in
je
into
mov
and
mov
mov
mov
cwtl
xchg
jns
pusha
mov
mov
push
mov
pop
cmpsb
mov
pushf
sub
inc
stos
mov
pop
push
xchg
lcall
scas
push
inc
mov
mov
sub
xchg
cwtl
and
ja
shrb
sbb
enter
das
in
push
mov
int3
inc
adc
inc
mov
cld
jp
and
mov
fidivrs
mov
sarb
mov
rcl
mov
dec
xchg
inc
and
inc
jl
scas
sti
sbb
or
inc
push
roll
mov
fildll
push
data16
or
jb
cs
jo
clc
mov
mov
xchg
adc
and
les
ds
jae
jp
popf
add
xor
rorl
out
nop
leave
mov
sub
pop
fldt
sbb
scas
and
in
arpl
fwait
hlt
sub
outsb
dec
in
scas
in
inc
mov
icebp
xor
fidivl
enter
mov
shrl
mov
mov
mov
or
enter
pop
jge
frstpm(287
test
mov
pop
mov
xor
adc
sub
dec
js
test
aaa
jae
not
movsl
bound
popf
xor
add
or
jle
lods
xlat
mov
or
and
xor
and
xor
fimull
adc
push
xor
repnz
rorl
jo
js
test
cmp
or
mov
add
pop
push
rcl
fdivrl
lcall
fisubl
fldl
jno
push
xchg
cmpb
divps
cmp
pop
inc
clc
and
test
jnp
aaa
and
cmp
adc
mov
adc
dec
std
aaa
fwait
jnp
xchg
sbb
or
loopne
fisubs
mov
jle
and
sub
clc
ja
sub
mov
cwtl
lds
xor
loopne
push
push
cmp
pop
dec
and
add
nop
sarb
mov
mov
fidivs
lds
rcr
xorl
jl
cli
psrad
and
fisubrs
cs
fildl
js
inc
movsl
stos
imul
rcrl
cmp
icebp
addr16
mulb
mov
ds
mov
jmp
sbb
ljmp
stc
testl
add
jbe
out
jle
xlat
in
into
cmp
cs
cmpsb
imul
daa
and
mov
out
xor
inc
enter
fisubrs
adc
arpl
dec
xchg
aam
mov
sahf
lcall
int
and
pusha
and
and
outsb
jb
nop
xchg
or
repnz
data16
push
jno
out
jge
les
frstor
mov
aam
lahf
jge
cmp
adcb
in
mov
lods
xchg
es
jl
aaa
jmp
add
shlb
jo
mov
pop
dec
insb
out
push
hlt
insl
je
pop
mov
sahf
shll
js
mov
andb
inc
inc
add
sti
and
mov
in
lock
in
lock
sbb
test
mov
addr16
test
imul
test
mov
cs
dec
outsb
lods
outsl
push
jnp
fistps
or
pop
inc
cmpsl
enter
mov
sbb
mov
adc
jb
mov
je
fistpl
mov
cwtl
pop
rcll
icebp
fsts
inc
inc
stc
pop
and
mov
jge
or
fcmovu
aam
pop
aad
es
dec
divb
inc
or
cld
pop
xchg
or
or
jl
ljmp
push
and
mov
add
sbb
mov
cld
call
add
lods
stos
push
das
xor
sbb
push
movsb
aam
add
pop
clc
push
stos
push
and
arpl
or
loopne
xchg
add
movl
push
and
add
mov
loopne
push
fistpll
aad
dec
lods
add
int3
nop
imull
jg
in
imul
lret
repnz
cmp
cmp
les
pop
add
xor
and
mov
and
mov
fwait
mov
outsl
xor
mov
mov
movsl
stos
in
jne
xchg
xchg
andb
xor
mov
das
push
popa
scas
mov
fnsave
mov
rcrb
jns
icebp
mov
push
mov
pop
sub
mov
xchg
sbb
fldcw
dec
pop
popa
add
sti
xchg
frstpm(287
pop
aam
into
iret
sub
pusha
pcmpgtw
push
insb
punpcklbw
out
cmp
das
adc
std
out
lret
pop
sub
fildll
mov
add
push
test
cmc
push
sbb
adc
loopne
xchg
xchg
mov
or
or
into
sub
andb
xchg
icebp
in
ss
repz
test
cld
mov
orl
les
push
xor
fimuls
mov
inc
jp
cmp
sub
mov
mov
ja
dec
xchg
xchg
pusha
outsl
jo
int
pop
inc
mov
xchg
dec
mov
decb
sbb
sub
fcomp
out
mov
pop
fwait
int
jb
rcl
dec
imulb
aas
jg
popa
cmp
mull
shlb
push
mov
mov
popa
sub
cmp
sub
mov
je
lods
shll
out
sub
push
cmp
adc
lret
pop
fwait
or
inc
insl
lods
jb
dec
cmp
cmp
mov
lock
and
fst
xor
rcll
bound
stc
cltd
inc
lret
ror
iret
int
cmp
xchg
xchg
imul
icebp
cmp
sbb
and
outsl
lods
iret
jo
je
push
and
les
gs
faddl
repnz
repz
xor
mov
outsb
mov
int
test
xor
js
idiv
cmp
test
mov
jge
test
movsb
ss
adc
push
sbb
fistps
or
repz
adc
lock
hlt
adc
out
and
fiaddl
out
jns
push
fucomi
cli
aaa
cld
add
adc
iret
sub
cmp
sub
mov
mov
jge
push
dec
cmp
add
xor
mov
mov
data16
imul
and
add
mov
aaa
mov
pop
mov
repz
aad
lret
fcmove
and
and
ljmp
add
es
mov
shl
cmp
loop
pop
jecxz
inc
ds
add
mov
and
mov
cltd
or
jb
sbb
bound
test
enter
pop
in
jae
jb
add
icebp
cs
cmp
imul
mov
pop
pusha
xor
ficompl
sarb
pop
add
les
fnsave
enter
aaa
cmpsb
and
mov
es
mov
fcomps
sahf
xchg
cltd
aaa
es
mov
adc
add
dec
jg
mov
jp
addr16
dec
mov
fstp
pop
sar
clc
mov
jecxz
popa
sar
jno,pt
or
imul
adc
mov
push
cltd
into
xor
and
bound
lods
das
add
dec
mov
xor
rcrl
inc
fldcw
add
pusha
imul
pop
adc
jae
jg
xor
pop
out
pop
pop
insb
xchg
add
mov
outsb
dec
pop
inc
xchg
das
inc
xor
adc
aas
fcmovbe
loopne
cmp
in
in
add
aas
loopne
cmc
cwtl
cmp
std
xor
or
je
pop
test
pop
inc
lods
xchg
fiadds
inc
mov
mov
decb
js
push
mov
jl
lods
cmp
pop
xchg
mov
out
test
pushl
mov
popf
cld
daa
loop
add
lcall
lret
xor
lahf
pop
jp
and
sti
mov
test
fcomps
out
and
jns
xor
push
test
lret
dec
sub
sbb
cmc
fimull
mov
ds
cmpsb
test
sbb
stos
nop
popf
das
inc
pushf
xchg
jl
negl
cwtl
mov
inc
inc
pop
loope
nop
push
mov
push
mov
sub
cltd
dec
sbb
push
fldt
or
mov
push
mov
test
sbb
add
aam
cmpsb
cmpb
mov
clc
xchg
mov
sbb
dec
in
pop
mov
dec
xchg
or
inc
mov
add
jno
ja
int3
iret
lods
test
je
push
pop
int3
push
dec
fdivrs
repz
cmp
sub
or
stc
add
xor
lods
or
push
dec
stc
jle
pop
gs
std
loope
jnp
call
cmpsb
push
add
jp
jno
xchg
mov
mov
testb
xchg
cmp
cmpsb
mov
pop
xor
lods
jle
nop
mov
or
loope
jb
movsb
cmc
enter
clc
orb
mov
xchg
pushf
es
cld
jbe
into
jb
out
addl
movsb
in
repnz
divb
hlt
icebp
pop
fdivrs
jo
mov
jns
xlat
pop
test
dec
add
insl
mov
shr
push
pop
sub
jl
nop
lods
adc
addb
mov
xchg
add
pop
lcall
lret
popa
jne
addb
mov
cmp
xor
out
fdivrp
daa
call
mov
fistl
aad
inc
loop
clc
mov
pop
js
je
cmc
loope
out
pop
or
fildll
insb
imul
icebp
adc
jg
pop
stos
inc
pop
and
subl
rcll
and
xorl
pop
in
aaa
or
roll
jp
scas
fs
fiaddl
jmp
add
fwait
xchg
xor
imul
loope
xchg
mov
popa
stos
push
enter
dec
inc
int3
lea
and
mov
test
inc
fisubl
jp
mov
lahf
cmp
out
out
pop
popf
sub
daa
aas
jns
and
into
xchg
call
mov
div
hlt
mov
xor
pop
mov
popf
lcall
in
outsl
stc
pusha
jae
mov
jbe
movsb
dec
and
adc
test
inc
stos
aad
mov
pop
gs
sub
adcl
dec
dec
jp
mov
dec
shlb
add
imul
sbb
in
jbe
out
test
jp
arpl
cld
dec
ja
test
or
xchg
push
rolb
ret
mov
mov
jno
faddl
mov
mov
jo
fistl
nop
addb
jno
and
cmp
fsubl
mov
sti
dec
inc
xorb
or
mov
in
or
sahf
push
loop
xchg
push
roll
idivb
sub
and
cltd
push
popa
cwtl
and
sub
nop
movsb
dec
fwait
aam
das
std
pop
lahf
pop
jb
push
enter
or
mov
shrl
aaa
aaa
test
xor
push
bnd
call
jl
push
xor
ss
shl
cmp
cs
lods
sub
xor
dec
call
adc
sbbl
add
mov
les
mov
fsubp
cmp
mov
js
mov
std
mov
pop
ja
hlt
push
xor
lea
jl
fstps
or
cmpl
cmp
cmpsb
lds
ljmp
shrb
movsb
imul
jb
in
jns
rolb
mov
sub
aaa
inc
addb
xor
or
jo
hlt
filds
mov
divb
jle
std
sti
add
in
ret
adc
jns
pop
mov
sahf
stc
push
lea
add
bound
popf
sub
cli
inc
icebp
push
adc
in
test
xor
sbb
fdivrl
sbb
adc
mov
iret
les
mov
inc
repnz
pushf
cltd
mov
leave
adc
movsb
push
jmp
mov
ror
sbb
adc
addr16
ret
mov
adc
ret
stos
inc
sbb
filds
lds
mov
mov
shll
jp
cmp
outsb
and
lahf
dec
pop
stos
push
enter
pop
inc
int
dec
or
ja
add
negb
add
loopne
fldl
pop
gs
push
data16
movsb
ja
adc
movsl
cmp
in
stc
and
cld
sbb
ret
lcall
sbb
popa
js
jg
sub
xchg
add
jp
inc
cmpsl
outsb
mov
adc
adc
ja
jno
mov
repz
mov
aaa
imul
adc
movsb
aaa
pop
gs
ffreep
fiadds
aaa
xor
adc
mov
add
pop
jl
cmp
cmpsl
cmpsb
lods
int3
pushf
fisubrs
fidivrl
test
jmp
scas
jmp
stos
cli
loopne
test
xor
push
sub
xchg
mov
mov
outsb
lret
pop
rorl
jb
data16
mov
cmp
js
sub
mov
push
bound
dec
sbb
ljmp
fimuls
out
pop
or
or
in
adc
jmp
lods
inc
adc
lods
inc
and
sub
ret
push
push
pop
adc
adc
jge
gs
decb
les
in
cmp
sti
and
jb
clc
stc
pop
xchg
add
dec
mov
in
mov
adc
mov
dec
jecxz
movsl
sarb
push
movb
cmp
adc
mov
adc
fldcw
test
fnstcw
adc
xor
dec
lods
sbb
inc
lahf
pop
addl
cmpsb
mov
shl
mov
dec
mov
dec
and
rcrb
jnp
xor
and
sub
xor
xchg
inc
push
imul
jle
call
lret
in
mov
jae
sbb
mov
inc
xor
cltd
gs
sbb
xchg
js
jb
inc
sbb
inc
cmc
xor
inc
idivb
push
test
xor
arpl
pop
frstpm(287
push
push
push
and
aam
daa
adc
jno
push
out
es
inc
xor
jae
sub
push
imul
inc
fnsave
iret
int
in
scas
andl
push
pop
add
mov
inc
das
jns
cmp
push
in
lret
arpl
lods
sbb
imul
imul
sarb
out
mov
je
and
or
cmp
dec
lret
fcmovb
dec
cld
daa
mov
out
or
push
and
dec
mov
mov
mov
stos
sub
inc
imul
cmc
fistpl
add
in
xlat
test
mov
ljmp
adc
shrl
outsb
cmpl
outsl
dec
bound
mov
jb
daa
fucomp
xor
cli
inc
jp
aaa
lcall
or
cwtl
outsl
ret
add
and
inc
adcl
andl
jge
loop
or
fsub
movsl
or
sti
jnp
lods
mov
xlat
insb
shll
iret
add
xlat
cmp
fbstp
lret
repz
gs
bound
gs
adc
xchg
lcall
cltd
pop
shlb
inc
mov
mov
cld
stos
dec
pop
pop
inc
pop
push
xchg
and
rolb
andl
jmp
cmp
sbb
jno
xor
adc
xor
fsubrl
and
addr16
pusha
into
imul
xchg
push
adc
push
push
mov
aad
xchg
mov
adc
ds
push
aaa
mov
mov
xor
lret
test
adc
mov
repnz
xor
or
pop
and
sub
sub
mov
inc
dec
sub
jecxz
dec
or
lea
fbstp
sbb
dec
lret
xchg
mov
andl
adcb
or
daa
stos
and
popf
sub
mov
or
xchg
inc
mov
pop
outsb
jbe
and
xchg
movsl
lahf
aaa
xchg
push
inc
mov
pop
push
jno
pusha
pop
dec
dec
in
sbb
in
or
sbb
jle
cmp
lods
js
xor
adc
sub
xchg
fucomp
enter
push
xchg
inc
aaa
lret
iret
mov
push
std
icebp
push
push
sbb
clc
sbb
clc
lods
icebp
aam
sub
pop
idiv
push
js
in
xchg
out
in
inc
sbb
mov
int
xchg
mov
flds
push
call
addl
and
cmp
jg
lahf
repz
add
sub
hlt
cmp
push
repnz
decb
int
in
clc
or
xchg
enter
fstp
fstps
pop
push
add
es
test
jmp
or
dec
dec
lret
mov
ljmp
xchg
sub
or
inc
and
adc
push
jae
mov
add
sub
and
inc
subb
andl
mov
add
or
ret
scas
or
std
cmp
int3
lds
mov
nop
mov
mov
xchg
inc
in
fsubrs
inc
repnz
cmp
mov
mov
nop
ret
push
sbb
cli
pop
jg
int3
mov
inc
shlb
cmp
iret
pop
or
fwait
adc
sbb
adc
in
andb
je
jb
mov
mov
jno
xor
ret
dec
sahf
enter
repz
clc
lret
mov
mov
insl
lods
jnp
aad
sub
xchg
pop
test
outsb
xchg
mov
dec
adc
loope
sbbb
jb
imul
movsl
pop
pop
lahf
jmp
push
shlb
cmp
pop
cmpb
and
mov
jle
in
rcl
dec
outsb
fsubp
mov
jae
std
inc
fildll
xor
adc
sbb
mov
push
loop
imul
test
pop
jmp
cmp
pop
jecxz
push
repz
and
icebp
js,pt
jnp
test
fmul
and
rcr
nop
push
scas
jbe
mov
xorb
add
mov
data16
mov
movsl
daa
xchg
je
shrb
in
inc
das
and
loope
repnz
mov
jbe
mov
fiadds
xchg
adc
mov
bound
test
repnz
lods
movsb
or
push
jbe
mov
inc
jne
mov
xor
xchg
int3
sbb
mov
push
pop
mov
adc
and
leave
dec
aaa
frstor
jecxz
adc
lds
mov
popl
mov
mov
repz
sub
sub
jecxz
js
jl
xchg
icebp
sahf
cld
mov
popa
sbb
or
sub
mov
jne
fstpl
mov
test
add
lods
adc
movsl
fildll
push
inc
sub
dec
jno
roll
cmp
fcomip
outsl
data16
push
aad
sub
mov
or
out
mov
push
dec
push
xchg
mov
pop
jg
arpl
lock
hlt
dec
test
jecxz
jl
es
rcrb
jg
cmp
ret
test
xor
mov
mov
sbb
mov
cmpsb
xor
fistpll
add
mov
data16
inc
sbb
or
dec
decb
fcompl
daa
aad
mov
xchg
adc
xor
cmc
xchg
into
ja
ffree
aad
jno
insb
iret
mov
push
push
insl
int3
pop
or
sbb
movsb
or
test
xchg
jb
xor
pop
test
lock
shlb
inc
add
xor
xor
cmp
xor
push
cmpsb
xchg
pop
sbb
notl
xorb
mov
inc
and
xchg
push
adc
movsl
inc
rcrl
push
iret
mov
mov
mov
xorl
sarb
mov
inc
mov
hlt
hlt
pusha
loopne
push
cmp
pushf
mov
imul
aad
add
in
cmp
xchg
add
cmpsl
xchg
cmp
bound
xor
addl
jl
cwtl
aad
and
and
loope
or
cld
das
out
adc
sbb
rorb
mov
bound
les
int
les
cmc
add
outsb
pusha
sub
mov
gs
cs
addr16
nop
cmp
cs
push
cmp
inc
cmc
dec
es
mov
xor
dec
add
sub
adc
pusha
fnsetpm(287
outsl
in
mov
xchg
js
sbbl
jnp
ss
mov
cmp
mov
sahf
test
pop
lcall
loope
cmc
xor
insb
mov
add
stos
xchg
xor
fmull
sarl
inc
adc
leave
add
and
out
xor
lahf
test
add
and
sbb
test
and
test
test
rcrb
test
jns
mov
pop
sbb
loopne
push
mov
xchg
inc
cmp
inc
lock
stc
in
dec
push
sub
int3
repnz
repz
sbb
lret
fld
fnstcw
xlat
and
jne
xchg
add
and
test
int
lods
sub
sbb
push
push
fsincos
sbb
sahf
test
mov
loopne
sub
addr16
sti
aaa
mov
xor
mov
dec
sbb
jae
rolb
xor
xchg
and
mov
stc
inc
push
lret
pop
mov
dec
push
and
sbb
mov
mov
lds
rorb
dec
xchg
dec
lods
dec
sbb
lods
or
xchg
xor
or
add
in
movsb
and
push
add
mov
mov
dec
cmpsb
sub
lret
outsl
rolb
test
jo
jl
add
mov
movsl
mov
inc
mov
cs
addr16
add
add
stc
xor
cmp
sbbl
out
sti
adc
sub
test
push
movsb
mov
outsl
xor
add
push
inc
inc
mov
push
adc
shll
stc
dec
aam
mov
push
jge
insb
xchg
dec
xchg
pop
sub
or
outsb
pop
mov
inc
addr16
fisubs
in
mov
nop
pop
add
mov
out
cmp
aad
fcmovbe
sahf
pushf
adc
fldenv
insl
sub
jmp
test
xchg
gs
pop
sbb
fiadds
stos
sbb
adc
or
icebp
push
lock
xchg
cmc
mov
mov
imul
js
add
out
mov
xchg
lods
jno
aas
jno
das
icebp
pop
mov
ret
js
mov
rorl
mov
outsb
sub
mov
pop
ja
mov
pop
sub
and
fisttps
pushf
sbb
push
or
mov
push
xchg
jns
mov
cmp
int3
sub
push
imul
push
das
push
pop
push
mov
insb
mov
mov
jl
sbb
jo
rclb
mov
sub
jno
jle
call
jo
add
lds
or
rcll
in
arpl
jl
dec
cmc
push
push
je
mov
push
inc
rolb
mov
xchg
sbb
push
adc
mov
jmp
xchg
push
test
ficoms
dec
cmp
iret
sbb
pop
iret
mov
xchg
inc
mov
stc
repz
dec
stos
frstor
jecxz
test
std
std
adc
xor
inc
lret
adc
ret
adc
stos
cmpl
aas
sbb
jp
test
mov
xlat
add
leave
pop
mov
insl
shl
mov
cmp
aas
imul
movsb
sbb
sarb
add
and
mov
out
outsl
gs
mov
lcall
ja
ja
adc
cld
leave
test
scas
rol
stos
hlt
push
sahf
jg
les
cmc
gs
jg
out
xor
fsubrl
stos
xor
and
aas
jle
cmp
leave
daa
pushf
and
pop
push
rcl
jge
fwait
aam
dec
add
xor
dec
mov
jbe
lea
push
insl
aaa
or
pop
call
fsubrp
xchg
add
and
cmpsl
xchg
lret
out
lock
aaa
cmp
cmp
xor
sub
imul
mov
popf
out
cmp
cwtl
sub
stc
lods
lock
or
mov
jg
mov
or
stos
aaa
scas
inc
in
inc
cmp
push
cmp
dec
jg
or
xor
in
sbb
mov
fiaddl
lods
rolb
mov
pop
push
cmp
mov
jle
hlt
shlb
jns
shlb
push
and
push
sbb
sub
push
cmpsl
cmpsb
fnstenv
aad
push
in
push
cmp
les
jge
jecxz
pop
std
dec
cmp
pop
out
scas
inc
sbb
pushf
mov
pop
clc
sub
jmp
int
inc
loopne
scas
jnp
lret
xor
mov
xchg
sahf
iret
sub
sahf
sub
push
jle
add
mov
lahf
ret
inc
aas
sub
sbb
cmpsb
jle
arpl
cld
cltd
inc
cs
repnz
mov
sub
cmpsb
outsb
dec
push
push
jns
jae
test
clc
mov
leave
addr16
outsl
andl
xor
adc
push
cmpsl
jns
int
xor
xchg
les
cli
xor
hlt
jno
addl
test
jnp
jne
sbb
insl
ret
cmp
or
addr16
add
ljmp
aad
jne
ret
jbe
adc
mov
data16
and
xchg
xor
sub
ficompl
mov
add
aas
out
push
mov
test
mov
gs
sub
jecxz
in
push
jnp
les
sti
mov
loopne
imul
pop
pusha
out
dec
push
test
fisubrl
push
fldt
fdivrs
fwait
ljmp
ret
jecxz
data16
sub
xchg
lock
dec
mov
aaa
out
in
fs
mov
add
gs
xlat
shrb
inc
or
mov
cmp
adcb
xor
scas
mov
cmpsb
decb
jg
loope
dec
lret
arpl
mov
sbb
sbb
fwait
or
mov
outsb
arpl
fs
sbb
lcall
jb
jo
mov
int
loopne
or
and
cltd
pop
mov
and
mov
adc
frstor
sub
icebp
xor
push
pop
fcmovb
enter
and
mov
adc
dec
push
jecxz
mov
insb
pop
adc
ret
xchg
dec
sahf
add
cs
sub
lcall
dec
test
test
out
sub
mov
clc
push
xchg
jno
sub
arpl
xorl
add
mov
mov
cmp
sub
rcll
bound
in
inc
testl
cwtl
or
rolb
adc
jae
insl
cmpsl
cmp
into
cmp
fs
fnstcw
inc
adc
mov
sbb
mov
mov
mov
or
dec
pop
fnstenv
and
mov
dec
aaa
dec
jo
sbb
aaa
add
cmp
inc
pop
xor
jns
fwait
inc
push
bound
in
mov
lods
cli
stos
cmp
psrad
mov
xor
fidivl
push
mov
and
fstpl
jl
or
pusha
gs
cmp
insl
repz
cs
pop
arpl
test
and
ret
mov
ret
or
mov
mov
and
cmp
xchg
cmc
rcll
imul
push
les
jl
pusha
popl
imul
sbb
mov
push
jge
mov
push
add
push
test
fstl
pop
mull
outsb
push
jo
sahf
jecxz
or
mull
push
mov
loop
jecxz
dec
sub
push
jae
aam
popf
mov
mov
add
pop
and
mov
out
dec
jle
les
repz
jb
cmpsb
test
cwtl
inc
and
mov
jge
fistps
or
jecxz
cmp
cmp
nop
pop
add
int3
insb
insl
adc
mov
push
stos
scas
cs
jb
mov
cs
push
adc
gs
hlt
into
lods
or
mov
enter
xchg
mov
mov
sahf
lods
loop
mov
mov
out
test
sub
add
sbb
jmp
stos
outsl
daa
mov
scas
aad
int3
mov
inc
mov
shrl
or
add
loope
ja
push
test
test
rcr
pop
push
fidivrl
xchg
cmp
ja
adc
dec
scas
negl
loope
cld
xor
or
dec
stos
mov
add
sbb
pop
dec
sbb
shr
outsb
ljmp
xchg
ret
adc
dec
pmulhw
in
inc
pop
ret
out
jle
out
imul
pop
fmuls
mov
hlt
jbe
jp
and
add
pop
cmp
push
out
hlt
push
sub
jge
cmp
inc
cmpsb
or
adcl
push
shll
out
xor
xor
inc
add
imul
jp
xchg
imul
int3
clc
pop
sub
movsb
sbb
xchg
xchg
sub
mov
xlat
cli
stos
jbe
daa
sbb
test
pop
push
jne
adc
mov
aad
movsl
push
outsb
pop
jecxz
mov
enter
bts
inc
imul
fisubrl
dec
push
test
mov
mov
push
icebp
imul
int
pop
stc
add
inc
inc
fisubrs
or
jbe
cmp
frstor
adc
scas
lret
fistpll
xor
xchg
pop
mov
bnd
lret
or
negb
lcall
dec
or
dec
cwtl
xchg
pop
or
sti
aaa
fsubp
leave
sti
sbbl
pop
xchg
cmpsl
pushl
inc
mov
ret
adc
jae
mov
lds
neg
mov
inc
int
jp
adc
into
aas
add
ret
mov
inc
mov
jmp
cmc
aaa
jnp
clc
sub
adc
and
xorb
add
lods
retw
hlt
mov
in
es
or
jmp
js
inc
sbb
xchg
stos
cmp
push
push
stos
popa
js
loope
adc
mov
pop
call
pusha
hlt
test
push
aad
lds
fimuls
jno
dec
lcall
push
clts
sbb
testb
fwait
jne
adc
xchg
sarl
cwtl
mov
inc
xor
mov
xchg
jge
lea
xchg
lds
dec
sahf
cmc
jl
or
sarb
jnp
pop
xor
inc
push
adc
xlat
shlb
into
push
sahf
adc
xchg
pop
mov
inc
inc
push
imul
pop
or
pop
sub
test
fcompl
cs
push
cmc
lods
das
and
adc
repnz
ja
fwait
arpl
sbb
sbbb
sbb
jae
dec
inc
or
popf
sub
rcr
lret
loope
mov
xor
fpatan
pop
xchg
jmp
pop
fnstenv
fsubr
ss
es
in
fsubs
push
cmp
rcrl
mov
dec
notb
fldl
dec
test
mov
imul
adc
sti
out
pop
sub
and
xchg
xlat
pop
mov
in
sahf
ja
jle
jbe
mov
and
out
into
repnz
pop
and
or
pop
ret
xchg
mov
fmul
iret
aaa
inc
pushf
and
sbb
bound
xchg
adc
or
addb
enter
xchg
inc
in
out
fxch
hlt
or
lock
loop
fbld
xchg
sbb
aaa
push
jns
mov
push
gs
shrl
sahf
xor
loop
cmp
loop
xchg
in
sbb
dec
pusha
pop
mov
inc
cs
out
push
ficompl
sahf
dec
xchg
adc
mov
pop
mov
enter
aas
test
adc
pop
ret
dec
sbb
cmp
clc
ljmp
lock
dec
shlb
mov
imul
mov
stos
mov
cwtl
xlat
rcl
nop
push
xor
ror
les
repnz
gs
pop
xor
xchg
xchg
gs
outsl
lea
add
pop
adc
loop
sub
andb
push
jge
jl
xchg
shll
fistps
mov
pop
out
ret
add
test
fidivrl
and
push
enter
addr16
loopne
add
sub
adc
mov
testb
pop
int
dec
daa
pop
mov
jp
imulb
inc
or
jne
fsts
jge
outsb
pop
mov
mov
je
adc
ja
ret
and
add
shll
jmp
and
jmp
pop
xchg
cwtl
jl
lahf
pusha
cmp
ds
dec
imul
aam
mov
popa
int
mov
scas
mov
add
mov
int
fimull
mov
jl
push
adcb
sbb
mov
pop
xchg
pop
int3
ret
dec
outsb
sbb
pop
or
xchg
call
in
xor
bound
pop
mov
push
les
or
jns
and
xchg
dec
or
mov
push
nop
xor
jo,pt
mov
mov
or
nop
imul
inc
xchg
int
or
call
sahf
imul
pushf
lods
insb
ds
add
cmp
push
aaa
and
icebp
cmc
push
xchg
sbb
inc
mov
enter
aam
lods
push
or
push
out
subb
jl
push
fwait
and
in
pop
nop
pop
adc
inc
sarb
sub
and
sbb
xor
pop
inc
rcrl
pop
inc
outsb
mulb
cmpsl
inc
int3
mov
mov
push
add
inc
mov
mov
xlat
add
cmc
mov
rcll
cli
outsb
pushf
cmpsl
add
pop
mov
xchg
cmp
pop
repnz
adc
js
push
push
fcomps
sbb
cmp
sub
xor
or
push
mov
icebp
push
dec
inc
int3
test
adc
lret
jb
mov
adc
aaa
andb
notl
mov
sub
orb
adc
hlt
push
sub
push
dec
jae
hlt
cli
jno
jbe
pop
imul
push
sub
mov
out
xchg
pop
inc
push
inc
bound
rcrl
inc
mov
es
mov
imul
mov
bnd
dec
leave
jg
xchg
mov
cmc
xchg
inc
lahf
js
add
out
in
setnp
cltd
adc
fwait
ret
js
popf
and
icebp
imul
fcomp
outsl
adc
push
imul
shrl
ds
outsb
adc
add
cmp
insb
jmp
inc
adc
pushf
scas
jmp
xor
outsb
mov
pop
fiadds
stc
jae
test
or
repnz
and
movsl
sbb
aad
mov
arpl
cmp
test
mov
lea
cwtl
pop
push
push
mov
pop
dec
mov
mov
pop
mov
xchg
mov
fnsave
rorb
xchg
mov
out
test
pop
cmp
jmp
jl
stos
mov
sahf
cmp
test
mov
arpl
pop
sbb
adc
adc
icebp
imul
aas
adc
lcall
jbe
sarl
inc
cs
dec
sbb
out
or
sub
hlt
dec
jecxz
fistps
test
testb
jo
pop
les
cmpsb
sbb
stos
xchg
scas
andb
cli
jge
xlat
jmp
push
add
sbb
add
inc
xor
dec
pop
rcrl
inc
push
adc
xchg
pop
xchg
insb
arpl
push
iret
icebp
repz
pop
and
adc
dec
pop
mov
add
push
icebp
shll
test
mov
sbb
mov
out
movsb
std
adc
add
add
and
sbb
test
ret
in
add
add
sbb
js
and
sarl
iret
dec
lret
ret
popf
gs
dec
inc
jecxz
mov
repz
cmpsb
adc
pop
in
xchg
cmpsl
mov
dec
xor
mov
push
jne
fisubrl
fiadds
into
call
or
sbb
adc
cld
inc
fsts
mov
xchg
push
pop
cs
fiaddl
jmp
test
jne
into
jge
daa
fs
cld
pop
sub
loop
jo
jnp
test
pop
xchg
in
mov
pop
mov
push
mov
lret
push
in
sub
bound
sub
mov
push
sub
les
add
movsl
nop
jo
inc
stos
mov
add
fcomps
popa
scas
push
or
mov
and
jecxz
repz
lret
or
and
and
int
aas
add
gs
jnp
push
lods
jo
mov
loop
sub
test
xchg
cmpsl
cmp
mov
mov
jecxz
out
lahf
adc
addr16
fidivrs
out
push
mov
jg
lret
fsubs
fidivrl
outsl
sub
lahf
mov
sbb
mov
adc
dec
sub
sbb
add
insb
xor
lcall
dec
out
pop
jo
xor
mov
mov
jmp
testl
daa
mov
push
sub
in
imul
push
rcrl
fsubrl
cli
inc
adc
xchg
lret
dec
sub
mov
lods
stc
fmull
ret
outsl
xchg
cmpsb
jl
mov
jmp
jge
and
cld
sub
sar
aam
adc
cld
jmp
or
aad
dec
fnstcw
fmull
mov
push
push
popa
bound
pop
dec
jmp
lret
int3
and
push
addr16
pop
inc
sbb
ljmp
in
adc
mov
jp
sub
int3
jns
sbb
int
andl
js
mov
divb
out
lcall
push
pop
dec
adc
rcr
push
pop
mov
jge
lods
xchg
ret
dec
jl
sub
lock
pop
pop
imul
mov
mov
test
mov
mov
scas
jno,pt
stos
xchg
iret
test
in
sub
scas
mov
mov
ficomps
ss
loopne
jmp
jb
or
lcall
in
leave
loop
rcl
jne
shlb
and
pop
jmp
loope
sbb
test
shll
out
mov
adc
sarl
imul
xchg
cmc
mov
popa
insl
cmp
pop
dec
icebp
xor
sbb
adcb
enter
aas
std
cltd
jno
sti
xchg
jbe
inc
mov
faddl
push
out
popf
and
pop
sbb
in
adc
jg
popa
inc
sub
out
lret
shll
or
dec
cmp
lock
push
jne
pop
cmp
pop
scas
repz
pop
mov
lock
repnz
xchg
pushf
xchg
pop
mov
scas
pop
cmp
jge
fisttps
xchg
pusha
outsb
cmp
sbb
inc
ss
sti
loopne
scas
stos
les
mov
lret
shlb
clc
in
loopne
cltd
xchg
ficompl
int3
leave
mov
fnstsw
inc
out
mov
cltd
lea
out
fmul
mov
popf
jbe
sub
adc
scas
push
pop
xor
sub
cmp
call
mov
sbb
mov
xchg
out
xor
ja
test
jle
add
cmp
sbb
mov
imul
pop
nop
int
addr16
fucomip
adc
sbb
inc
in
cmc
add
jmp
adc
ljmp
or
cs
addb
int
sbb
push
imull
push
cld
outsl
cmpl
aam
rcll
add
mov
out
nop
lret
cmpsl
lods
xor
imul
movsb
and
inc
mov
pop
hlt
xor
leave
popa
inc
lcall
xchg
jle
fwait
ja
jecxz
and
mov
push
push
stos
in
fisubrs
pop
sbb
push
inc
pusha
sub
add
leave
int3
push
stc
sbb
cmpsb
arpl
dec
mov
or
mov
mov
mov
sbb
mov
nop
cld
test
insb
imul
in
xchg
or
or
mov
xchg
mov
stc
mov
jmp
sbb
bound
imul
mov
or
es
hlt
add
pop
add
xor
mov
stos
test
adc
mov
dec
lock
call
pop
sub
pushf
in
jge
dec
mov
ficoms
mov
pop
xor
scas
es
ficoml
std
lret
ds
xor
adc
pop
loopne
push
push
or
pop
fldcw
lea
int3
cmc
sub
lret
sub
test
out
ds
mov
pop
lds
mov
xchg
and
mov
sbb
cmp
filds
jns
sahf
mov
push
adc
aam
loope
and
aad
jle
cmc
iret
jbe
outsl
adc
sarb
out
aas
test
into
lock
sub
out
outsl
shlb
aaa
int3
inc
dec
fildl
dec
mov
jmp
les
orl
lea
aaa
or
pop
lahf
cmp
in
int
and
leave
mov
sti
mov
jne
lods
mov
mov
aad
xchg
mov
jno
js
mov
pop
movnti
popf
jns
push
sub
xchg
adc
mov
frstor
stos
ret
fcompl
add
icebp
mov
jmp
call
mov
jo
outsl
pop
xlat
dec
addr16
inc
fsubl
adc
or
rorl
dec
subl
fstps
std
sbb
mov
insl
pusha
insl
and
sbb
popf
add
add
or
or
or
jb
test
mov
in
jg
sarb
pop
loope
adc
or
jle
push
test
inc
ficoms
bound
dec
sahf
xchg
int3
stos
lods
mov
bound
in
lock
into
sbb
stos
or
loopne
jae
mov
mov
mov
sbb
jecxz
fs
xchg
cmc
icebp
ror
sub
xchg
mov
pusha
dec
mov
push
pop
adcl
push
pop
subb
add
clc
repnz
inc
test
js
das
mov
mov
push
movsb
bnd
das
or
inc
imull
js
cmpsl
bound
inc
sub
sbb
mov
ljmp
clc
adc
pop
inc
inc
imul
mov
mov
jmp
pop
jge
mull
push
mov
push
jl
js
repz
mul
lods
leave
out
jae
addl
bound
negb
adc
loopne
sub
or
or
enter
ficoms
xor
push
push
mov
imul
leave
int3
mov
cmp
or
dec
xor
xchg
fs
jl
fldcw
test
push
mov
cmp
fmull
lcall
int
js
xlat
push
add
lods
and
pop
sbb
sbb
lcall
in
in
lods
ret
push
icebp
rcrb
and
les
ljmp
xchg
ret
test
jnp
jge
movsl
jmp
sub
cmp
jo
cmp
enter
mov
pop
roll
stos
les
push
cmp
cmp
out
mov
sub
mov
fs
pop
in
inc
loope
push
mov
mov
enter
cs
adc
js
cmp
call
ja
lret
xchg
mov
pop
fcomi
psubusb
dec
sub
cmp
lods
in
inc
xor
add
mov
and
inc
inc
xchg
mov
and
push
loop
pop
mov
mov
xor
push
mov
inc
xchg
sub
in
jge
lea
and
jae
fs
fldenv
push
imul
lcall
mov
sub
into
in
lahf
or
arpl
pusha
or
mov
psubsb
sub
fisubl
jbe
in
push
push
and
xor
add
pop
mov
sub
cltd
sahf
cs
out
jl
adc
push
mov
mov
mov
mov
pop
orl
imul
lret
in
outsb
nop
mov
mov
aam
xchg
pop
xor
mov
int3
mov
cmp
into
push
fdivl
fdivr
mov
sahf
sub
cmp
inc
adc
xchg
fcoml
imul
adc
jbe
fsubrs
arpl
sar
insb
ficomps
icebp
adc
out
movsb
orl
dec
pushf
push
cld
and
xchg
cli
sahf
sub
xchg
dec
jmp
xchg
ds
loope
insb
hlt
std
mov
sbb
movsl
das
push
cmpsb
and
adc
sbb
repnz
outsb
add
nop
gs
mov
gs
mov
into
aad
jnp
mov
jno
fbld
sarb
out
inc
jmp
in
xor
mov
jmp
sub
add
in
xchg
sti
adc
sub
and
stc
mov
xchg
pop
dec
test
dec
mov
jne
negb
push
shrl
jns
or
fidivs
pop
or
ljmp
push
jo
sub
dec
ds
sbb
and
das
mov
sbb
ret
pop
call
or
daa
xor
sahf
jp
loope
ret
pop
sbb
and
repz
test
rcll
fdivrs
lahf
mov
mov
sub
in
clc
sbb
push
ds
sti
push
outsl
fsubrl
dec
aad
jl
pop
xchg
jmp
pop
xchg
xor
mov
push
scas
pop
mov
je
test
push
out
cmpsb
aad
pushf
mov
jno
pop
jnp
scas
je
mov
test
xchg
outsl
sbb
repz
es
in
sar
inc
and
jnp
bound
sbb
lcall
sbb
jne
sbb
push
ja
lcall
nop
or
and
dec
test
xchg
loop
ret
mov
inc
lods
pusha
pop
in
orb
rclb
pop
imul
in
dec
cmp
jae
mov
lods
cwtl
and
xor
cmp
xor
lds
inc
xor
lret
xor
push
out
mov
leave
xor
add
fnsave
sti
sbb
mov
ss
jo
cltd
mov
and
enter
jecxz
clc
or
mov
lret
cmp
inc
loope,pn
jbe
cmp
ret
jbe
or
iret
lods
mov
loopne
cli
xchg
and
test
test
sbb
jg
cmp
and
repz
ret
imul
sub
cs
sub
or
cmpsb
jle
and
cmp
mov
or
push
jbe
push
enter
insb
enter
xor
outsl
cmp
mov
sbb
mov
insl
mov
push
mov
cmpsl
jne
outsl
clc
out
jnp
sub
and
inc
add
cmp
leave
punpckhwd
dec
divl
mov
loope
shlb
mov
aaa
insl
xchg
jg
cmpsb
clc
movsb
or
adc
arpl
mov
sub
shll
stos
fistps
aas
inc
lea
rorl
inc
or
xchg
mov
jg
rorl
popf
pop
push
cmp
mov
int3
mov
lods
mov
cmp
jmp
andps
lcall
addb
push
stc
insl
cmp
and
add
inc
sub
fnsave
test
adc
lea
pop
cmp
or
dec
cmp
fs
pop
mov
mov
pop
fs
insb
jp
test
jmp
jle
fisttpl
ds
insl
push
add
movsw
pop
xor
cld
lock
push
add
dec
jge
mov
and
mov
or
popa
and
mov
inc
clc
mov
loope
enter
test
lea
rcl
mov
dec
test
adc
popf
pushf
js
bound
and
dec
jo
shl
fidivrl
aad
das
or
pop
ds
je
cwtl
andb
xchg
jge
or
mov
movsl
out
add
jne
pop
cmpsl
mov
test
subb
sub
data16
jb
cmpsb
cmc
dec
push
add
xor
sahf
adc
add
inc
movsl
cld
roll
inc
stos
das
xor
xlat
cmp
xchg
or
xchg
and
mov
jmp
mov
adc
inc
adc
dec
test
mov
sbb
rcr
cmp
cmp
inc
sub
sub
faddl
data16
mov
sub
xchg
nop
int
dec
mov
cwtl
lahf
sbbb
data16
std
or
dec
mov
sub
dec
daa
stos
fs
mov
cmp
inc
fcomps
push
scas
addb
pusha
xchg
test
aas
lcall
mov
mov
dec
mov
loope
popf
and
sub
cmp
test
rol
mov
fists
shrb
icebp
jmp
mov
data16
idivl
or
pop
sbb
arpl
adc
sahf
dec
add
sub
sti
cmp
mov
das
cmp
dec
xchg
and
mov
lret
addr16
cmpsl
or
lds
xchg
mov
xor
test
push
or
das
pop
sub
int3
adc
stc
adcb
mov
xchg
int3
in
loope
xchg
dec
aad
cmovne
scas
or
enter
fwait
sub
mov
or
pusha
out
pop
sbb
fiaddl
in
adc
jno
xchg
add
in
leave
inc
sbb
into
sbb
dec
jle
in
outsb
mov
sbb
xchg
cmp
inc
xchg
out
mov
xor
add
call
lods
cmp
loope
jle
jnp
mov
mov
sub
fnstcw
xchg
ret
iret
lret
cmpsl
addl
loopne
push
lahf
add
out
xorl
ds
divb
fmuls
fmull
sbb
mov
mov
fwait
ss
xor
ret
xor
inc
and
pop
scas
add
jo
lods
xchg
xor
add
or
fdivl
mov
add
pop
sbb
daa
test
cmpb
jecxz
push
push
xor
inc
cmp
inc
sub
mov
mov
mov
add
xchg
dec
sub
add
data16
pushf
jle
jle
insl
lahf
ja
xchg
in
jbe
mov
inc
imul
cmp
shr
std
xchg
mov
mov
loop
div
insb
jmp
loop
or
mov
xor
rcl
push
and
cwtl
andl
mov
mov
inc
cltd
cmp
outsb
and
lods
loop,pn
mov
adc
scas
xchg
mov
insl
mov
popf
cld
cli
dec
ja
add
add
adc
ja
inc
fimuls
decb
in
pop
push
scas
addr16
mov
xchg
addl
push
shl
xor
in
sub
js
cmc
mov
jle
fistps
test
iret
repz
dec
xlat
clc
popa
inc
xchg
sbb
or
into
pop
xchg
fs
jnp
loope
pop
bndldx
jne
sar
je
jno
les
xlat
mov
call
outsb
xor
test
psrad
adc
sarl
cwtl
fs
push
mov
repz
jge
jmp
adc
out
adc
jbe
loop
pop
push
into
mov
lcall
jl
enter
mov
xchg
sbbb
xchg
sbb
xchg
sub
in
mov
xlat
jno
andb
dec
sbb
add
and
into
daa
mov
mov
pusha
sub
in
loop
mov
test
psubusb
push
in
rcll
in
insb
cmp
out
cmpsb
aaa
lock
test
add
push
mov
in
xor
jbe
xor
cmp
xor
mov
sbb
mov
sarb
and
pusha
or
xchg
mov
or
mov
int3
pop
pop
dec
pop
sbb
dec
xchg
add
aad
aaa
fs
or
outsb
mov
ss
inc
xchg
lcall
ljmp
xor
xor
push
fcompl
ss
lcall
stos
and
scas
out
sbb
xchg
movsl
les
pop
lock
cmpsb
out
jo
jae
or
rolb
add
pop
cmpsb
dec
jb
or
lahf
add
inc
cmc
lods
pop
das
fs
jo
xchg
jmp
loop
xlat
loop
push
imul
xchg
mov
mov
orl
or
aad
cld
jno
jne
add
jae
imull
lock
push
insb
sbb
in
xor
xchg
push
cli
cmp
movl
jmp
aas
or
scas
xchg
adcl
pop
sbb
out
sub
sbb
and
imul
out
bound
sbb
mov
addr16
jmp
jns
sbb
dec
inc
xlat
mov
insl
in
out
dec
and
ret
les
repz
and
inc
loop
dec
xchg
jle
in
sbb
loop
loope
mov
xchg
or
iret
stos
ret
bound
insb
jg
bound
loopne
or
push
js
shrb
cmp
incl
dec
in
imul
cltd
movsb
sub
or
sbb
popa
orb
mov
add
inc
bound
mov
lock
notl
xchg
sub
int
push
cmp
inc
pop
and
or
dec
xor
mov
fwait
sub
daa
test
les
fsubrl
fldl
scas
or
popa
xchg
dec
or
cmp
out
inc
std
sbb
repz
in
push
and
lds
dec
dec
mov
dec
mov
push
stc
adc
xor
inc
cmp
mov
aam
int
sahf
addr16
pop
xchg
ret
cli
mov
xor
repnz
es
inc
into
jmp
inc
pop
and
pushf
fimull
cmp
xor
xor
push
int
fidivs
pop
je
push
push
data16
xor
jnp
ret
daa
push
sbb
stos
and
popa
lods
mov
mov
inc
and
inc
cmp
loopne
shrl
sub
or
xchg
out
dec
out
adc
jmp
in
jp
sbb
insl
movsl
in
adc
push
pushf
int
xchg
ljmp
sub
repnz
test
repz
xor
sbb
or
and
pushl
xor
mov
mov
xor
std
mov
fcmovnu
cpuid
inc
jb
insl
scas
or
rol
mov
rcl
xchg
lods
fimull
lds
addb
lret
jns
rorb
jae
inc
inc
mov
dec
mov
or
cmp
push
test
clc
mov
insb
popf
mov
call
popa
xchg
mov
iret
fsubrp
sbb
cltd
enter
or
inc
scas
xchg
pshufw
push
call
hlt
popf
lods
lods
pushf
std
xor
dec
dec
dec
mov
jns
adc
fwait
dec
mov
inc
push
stc
mov
out
and
js
iret
lods
inc
mov
and
movsl
adc
out
gs
pop
scas
out
dec
mov
dec
push
mov
xor
movsl
movl
mulps
pop
into
ja
ss
int3
test
lahf
or
rol
cmp
push
in
jne
loope
daa
jno
notb
adc
push
lret
sahf
mov
mov
stc
lock
addb
cmc
ret
mov
incb
dec
jmp
mov
xchg
mov
lods
add
sbb
push
addr16
stc
aad
fs
lret
jge
and
stos
xchg
into
pusha
dec
mulb
iret
push
je
inc
xchg
lock
pop
and
sub
and
rcl
cmpsl
jno
sub
pop
cltd
or
pop
mov
add
dec
sbb
pop
pop
sbb
popf
iret
pop
lsl
lock
pop
adc
loop
or
js
cld
add
push
imul
pop
or
iret
inc
int3
xchg
loope
jmp
je
testb
and
les
push
mull
or
mov
cli
stos
or
nop
xlat
std
dec
and
cs
dec
dec
mov
pop
mov
loopne
jge
sti
and
scas
adc
cmc
mov
test
test
repz
jbe
sbb
enter
scas
std
jecxz
lret
mov
pop
and
rcll
mov
mov
sbb
jecxz,pt
out
dec
fs
ret
mov
adc
fmull
jno
push
dec
xchg
add
lret
pushf
or
cmp
push
in
lahf
stos
cmc
cmp
into
test
lock
loopne
sbb
cmp
mov
push
ja
lods
jmp
das
out
xchg
loop
add
arpl
pop
popf
loopne
push
dec
pop
fs
ret
lahf
shlb
fldenv
pop
sub
dec
lret
dec
jb
movsl
fwait
pop
or
outsb
in
ficoml
stos
std
push
push
sahf
adc
push
cs
popf
je
adc
add
dec
cltd
lea
rcll
cmovle
test
inc
ror
pop
dec
aaa
out
int3
inc
and
and
xchg
fisubrl
inc
je
jne
loope
stos
jnp
cmp
mov
ss
ret
lret
fcmove
cmpb
test
xchg
inc
xchg
jb
push
movsb
sarl
add
out
mov
xor
sub
fcoml
mov
das
iret
in
mov
popf
xor
push
mov
dec
mov
shlb
rcrl
mov
mov
xor
push
or
xchg
and
clc
cmpsl
sub
cmpps
in
nop
orb
out
hlt
inc
stc
add
push
adc
pusha
dec
repnz
js
lcall
lds
pop
cmpsl
sub
ljmp
stos
icebp
mov
ja
mov
lods
in
and
pusha
mov
daa
jp
xor
pusha
in
jp
les
adc
mov
jg
and
xchg
mov
sub
rorb
jle
pop
mov
lods
adc
push
inc
lods
dec
inc
mov
arpl
sbb
pop
cmp
nop
leave
cmp
pusha
nop
arpl
pop
mov
sti
cmp
jbe
push
mov
clc
lcall
int
jmp
hlt
sub
adc
test
lret
shll
xchg
cmp
lods
jmp
xchg
push
pop
or
aad
movsl
sbb
sti
mov
fwait
sub
add
pop
leave
or
mov
mov
inc
pop
lcall
popa
out
adc
mov
mov
push
xor
sub
push
xchg
xchg
ds
ret
sub
pusha
sub
data16
xor
add
jl
loop
xchg
mov
stc
cltd
inc
mov
imul
add
xchg
mov
call
loopne
mov
xchg
adc
xor
lock
ds
mov
mov
fs
lds
jb
mov
insb
rol
jno
sbb
cltd
adc
lods
pop
inc
ss
aas
lahf
repz
mov
pop
jmp
shrb
pop
fcmovne
dec
jne
pushf
adc
rolb
popa
mov
shll
jle
cmp
out
mov
sbb
or
sbb
mov
loope
test
jmp
shl
iret
dec
test
and
sbb
addr16
cwtl
sbb
jle
adcl
lret
push
arpl
push
xchg
faddl
sub
xchg
in
sub
dec
xor
addl
subb
inc
push
xor
int
arpl
push
sbb
into
les
ja
fdivrl
fwait
rorb
or
mov
stos
movsl
subl
jl
adc
cwtl
testl
movsb
mov
stos
pop
jge
rcrl
and
mov
arpl
aad
test
mov
cmp
jmp
mov
stos
out
das
dec
and
out
pop
aad
ja
pop
in
dec
or
pop
pop
pop
mov
data16
or
je
inc
pushf
test
cmp
test
or
fwait
adc
insb
xlat
mov
mov
ret
loope
int3
and
sbb
push
sub
sbb
push
push
jge
ja
mov
hlt
push
xchg
push
adc
das
or
pop
xchg
je
in
js
lods
in
enter
cmp
or
out
lock
test
ljmp
mov
addl
enter
insb
test
lods
sbb
jb
insb
adc
jnp
mov
das
ds
into
ret
xchg
adc
or
pop
rclb
stos
fisttpll
rclb
mov
fbstp
adc
movsb
push
dec
ret
add
cmp
lods
lock
xor
dec
cli
push
mov
mov
push
and
pop
imul
daa
pop
sbb
scas
dec
xchg
es
push
test
pop
lods
in
out
dec
stos
cmp
lret
add
mov
add
dec
mov
add
movsl
dec
out
mov
icebp
scas
loopne
pop
sti
inc
sbb
daa
add
cmpsl
scas
movsb
xor
lret
xor
repnz
in
or
or
add
imulb
shll
mov
shl
ret
movsl
dec
outsb
dec
sti
lods
inc
mov
enter
lret
xchg
dec
inc
scas
shl
icebp
test
mov
imul
or
enter
sahf
mov
gs
out
sahf
imul
hlt
push
imul
push
mov
out
movsb
mov
push
mov
ljmp
mov
pop
lds
subb
mov
div
mov
pop
cld
inc
fiadds
stos
jbe
xchg
inc
sbb
mov
lret
gs
pop
clc
pop
push
in
push
xorb
mov
sbb
dec
rclb
push
cli
nop
push
push
es
in
xchg
aad
jbe
cmp
ljmp
xor
rcrl
cmpsb
lahf
addr16
sub
mov
jmp
aas
mov
push
fiaddl
cld
xor
iret
ror
scas
sbb
jns
ds
out
test
movsb
and
inc
xor
push
or
lods
data16
dec
pop
mov
popa
stc
mov
or
mov
je
imul
imul
xchg
inc
ficoms
add
stos
imul
push
in
add
arpl
lcall
or
mov
dec
shlb
add
or
fsubrp
aas
sbb
es
push
stc
nop
ja
cmp
pop
dec
mov
jbe
cs
mov
das
cmp
dec
pop
pop
aam
xchg
ss
cli
aas
daa
mov
jecxz
add
push
lcall
jno
xchg
dec
xchg
mov
cmp
aam
outsb
dec
pusha
fs
inc
mov
cs
add
mov
fildl
sub
sbb
std
sbb
pop
push
mov
add
or
cmc
iret
enter
mov
jp
mov
jne
cld
add
enter
mov
test
add
add
dec
test
sbb
xor
adc
sbb
jo
dec
orl
dec
dec
push
imul
sbb
adc
dec
dec
and
adc
into
xchg
and
mov
cmpsb
cld
jne
test
stc
daa
cli
out
ss
xor
jmp
testl
inc
shr
cld
aas
sbb
daa
movsb
jge
std
xor
stc
sub
mov
add
dec
arpl
in
cmp
and
out
lret
cmp
push
out
push
push
int3
lods
inc
sbb
jb
xchg
outsl
dec
inc
shr
adc
add
sub
out
pop
mov
cld
pop
cmp
in
out
lret
dec
pop
icebp
nop
sbb
fucomi
aas
test
push
pushf
test
pop
inc
mov
jb
sbb
xlat
insl
fsubrl
push
fs
pop
or
pop
mov
subl
jp
or
gs
addr16
dec
xchg
repnz
add
dec
or
mov
mov
jg
mov
and
sbb
inc
addb
jle
clc
xchg
out
sbb
outsb
sarl
pop
aad
sbb
lahf
sbb
cmp
mov
jo
push
push
push
sub
xchg
mov
sti
and
hlt
movsl
push
in
and
adc
test
adc
call
dec
loopne
or
dec
jle
jae
aas
icebp
xchg
jp
xor
add
loope
sbb
or
pop
ja
push
jne
pusha
fmul
push
mov
xchg
icebp
ret
scas
mov
rorb
outsl
out
jmp
dec
and
inc
imul
mov
loop
clc
sbb
add
or
loope
addr16
xchg
jnp
or
adc
je
or
rol
sub
fs
int3
in
inc
add
xchg
stos
in
lock
add
iret
xchg
and
rol
or
movsb
cmp
aad
fs
dec
add
push
fs
shr
fldt
xchg
or
cmpsl
shrb
shl
ja
push
dec
fadds
lcall
ficompl
pop
mov
fidivs
xor
mov
jns
fldt
lods
cli
push
stos
lods
dec
jp
into
sbb
mov
jp
mov
adc
dec
lahf
shrb
jne
test
pop
add
lcall
mov
nop
inc
imul
pop
and
les
addr16
fwait
das
clc
inc
cwtl
movsb
movsb
test
xchg
outsb
in
push
inc
push
jbe
xchg
mov
jg
xor
mov
mov
shlb
xchg
in
jg
outsb
mov
adc
sbb
xchg
cwtl
dec
add
out
xor
jl
lcall
mov
enter
mov
lret
mov
xchg
xchg
pop
jo
sahf
sub
push
xchg
aad
mov
call
inc
sar
enter
lret
hlt
mov
jae
inc
mov
and
mov
imul
mov
sbb
imul
pusha
clc
pop
pop
add
mov
jl
sub
movl
mov
mov
inc
push
daa
aad
sti
push
add
jae
iret
lods
test
ret
repnz
xchg
repz
je
pop
jno
negl
push
iret
push
mov
icebp
lret
fmulp
adc
repnz
jg
cmp
mov
outsl
insl
adc
cmp
xchg
leave
jo
pop
and
addb
adc
addr16
xor
out
lods
push
notl
ds
mov
sub
addr16
fcmovnb
push
adc
pop
imul
mov
outsb
shr
out
hlt
mov
mov
mov
out
jbe
jge
inc
sbb
push
or
ret
mov
fstpt
mov
jge
dec
mov
in
mov
lods
mov
cli
shl
clc
inc
sti
lds
add
call
xchg
push
fcmovu
subl
jl
push
jecxz
jbe
jae
es
fmull
out
pop
cmp
add
arpl
jo
fsubrs
mov
add
cmpl
les
xchg
lea
and
aas
in
fldln2
inc
cmc
sub
data16
mov
cmp
mov
sahf
hlt
mov
push
sahf
adc
std
pusha
pop
ja
jo
push
lock
or
sub
cmp
or
ss
loopne
xchg
pop
pop
or
jae
add
inc
daa
fstpl
push
or
scas
cmp
leave
out
daa
add
mov
inc
nop
mov
lcall
xor
ret
mov
jne
xor
xor
addr16
cmp
mov
adc
test
or
and
in
pop
and
sti
or
lcall
inc
imul
pop
aad
out
int3
mov
ja
cmc
pop
fldt
mov
pusha
cmp
pusha
idivl
sahf
jecxz
and
xchg
xchg
lods
unpckhps
sub
push
inc
cmc
pusha
or
sbb
xor
in
xor
dec
push
fidivs
lcall
jae
adc
mov
loope
les
mov
jbe
punpckhwd
js
adc
aad
enter
mov
fdivrl
xor
add
leave
push
lods
push
popa
sub
jge
xor
pop
add
inc
inc
in
sti
pop
cmp
hlt
add
fcomip
or
insb
repz
aam
mov
in
mov
clc
outsb
test
sbb
pop
in
cmpl
jecxz
xchg
insl
outsb
shl
popa
adc
jno
bound
repz
rcll
pop
jmp
arpl
into
das
mov
mov
dec
pop
xchg
mov
xchg
cwtl
mov
movsl
outsb
jmp
jae
jo
dec
out
xlat
scas
sti
test
out
adc
jl
and
leave
adc
outsb
call
cwtl
lret
rcrl
sub
test
js
inc
es
mov
sub
cmp
inc
cmpsl
mov
sub
inc
leave
mov
mov
mov
sahf
pop
adc
clc
fs
aad
and
cmp
aam
mov
shlb
in
mov
add
orb
push
adc
les
inc
out
jge
xor
add
add
fnstsw
ret
decl
jae
jns
fidivs
mov
sbb
imul
mov
cld
push
dec
rorl
xchg
ja
inc
xor
sbb
test
in
jo
mov
movsl
pop
lret
push
lcall
mov
cmc
add
pop
stos
add
xor
adc
sbb
sti
outsl
fldl
jl
or
ss
dec
jo
sub
movsl
sarb
jnp
mov
jo
or
mov
mov
jnp
push
or
int
adc
mov
lds
mov
push
xor
fists
cmp
and
fwait
push
pushf
pop
push
mov
push
cmc
pop
lds
dec
clc
xor
mov
sub
pop
jne
int3
adc
loope
push
into
jae
in
pop
jle
sahf
jp
sbb
mov
jle
out
adc
addr16
lahf
xlat
xchg
or
std
sbb
xchg
pcmpgtw
idiv
dec
mov
add
xlat
aaa
mov
fisttpl
pop
mov
aaa
movsb
mov
add
movsb
pop
push
add
movsl
cwtl
adc
mov
push
cmp
insl
scas
push
xchg
cmp
lea
ja
pop
pop
sbb
shrl
leave
push
jle
pop
std
xchg
sarl
push
out
movsl
xor
popa
mov
sahf
nop
mov
call
sbb
cmp
test
xchg
daa
cmp
in
lods
xlat
aaa
stos
push
lods
and
std
cmpsl
pop
fcmove
std
push
imul
test
lcall
iret
push
ljmp
xor
test
adc
push
cld
inc
rcrl
xor
lods
xchg
scas
inc
xlat
cmc
mov
bound
cld
data16
push
call
ret
test
loope
iret
pop
aas
sub
les
aam
fsubrs
hlt
fiadds
mov
mov
lds
pop
enter
fistpl
mov
xor
mov
add
mov
into
and
fiadds
and
cmp
push
test
leave
add
mov
dec
popf
adc
sub
out
iret
dec
imul
outsb
cmpsb
jp,pn
inc
insl
adc
and
stos
sbb
mov
arpl
cmp
mov
pop
dec
ds
mov
stos
jbe
or
pop
sbb
xchg
das
xchg
pop
or
outsl
xor
xchg
push
push
lea
fsubrs
sbb
lods
xor
xchg
and
outsl
mov
jl
inc
repz
test
dec
and
or
dec
into
mov
fiadds
push
leave
mov
int
dec
lock
pop
fisubrl
test
adcb
cmp
insl
mov
or
pop
shr
pushf
xorl
pop
push
adc
fnsave
jns
or
or
popa
jmp
pop
ljmp
mov
cli
stc
ja
cli
insw
cmp
insl
mov
mov
pop
movsl
sbb
out
sbb
jle
sti
mov
mov
lahf
adc
pop
push
negb
dec
in
pop
sbb
test
repnz
cmp
sub
and
popa
aas
mov
imul
sbb
inc
cmp
xchg
popa
cmp
shrl
sarb
inc
push
inc
cmpsb
icebp
lret
adc
subb
add
mov
cwtl
push
icebp
movsb
pop
cmpsl
jmp
mov
pop
mov
leave
mov
mov
mov
ret
add
jmp
lcall
cmp
fistpll
and
je
mov
sti
adc
int3
push
push
daa
loop
outsl
pushf
pop
clc
dec
and
leave
xchg
stos
fstps
jmp
es
in
and
or
mov
xchg
add
add
push
sub
fsubs
loope
jp
sbb
and
adc
int
fimull
push
fdivrp
jne
mov
jno
aam
jle
ret
pop
repnz
and
cld
rol
cmp
push
xchg
sti
xchg
insb
scas
gs
mov
push
lahf
sbb
pop
sbb
mov
sbb
loopne
adc
imul
shr
mov
ret
push
lahf
and
jne
imul
fcompl
pop
push
add
xchg
orb
lods
lret
loop
adc
cmpsl
out
jbe
sub
xor
cltd
dec
movsl
pop
add
inc
dec
adc
out
jp
adc
xchg
pushf
cld
pop
xor
and
mov
and
es
push
rolb
es
imul
pop
pop
mov
cltd
popa
sub
pop
into
jge
mov
xor
add
fimuls
test
cmp
dec
dec
push
mov
inc
enter
bound
xchg
clc
pop
rcll
or
push
xor
add
adc
imul
jg
inc
ja
push
push
inc
fnstenv
out
or
jno
xor
xchg
lahf
mov
lock
add
push
stos
inc
mov
test
adc
xor
mov
mov
sbb
sub
sbb
bound
mov
xor
mov
push
clc
jns
adc
jge,pt
and
mov
dec
out
cmc
jmp
repz
les
movl
jne
jns
pop
adc
test
movsl
movsb
mov
push
or
add
push
lea
jmp
lsl
lock
shlb
dec
scas
imul
pop
xlat
loopne
inc
inc
xchg
jge
cli
mov
mov
addr16
ret
ja
mov
popf
cld
jge
xchg
insl
pop
xor
cmp
push
sub
sub
pop
mov
lock
out
push
nop
sbb
leave
and
mov
xchg
hlt
and
jo
or
enter
in
enter
popa
daa
push
nop
and
mov
cmp
xchg
jmp
or
mov
arpl
loop
outsl
mov
out
dec
insb
roll
fcmovb
mov
jmp
jno
push
push
mov
movsl
push
mov
sarb
lods
js
mov
movsb
pop
sbb
push
jl
add
popf
int
lds
lahf
aas
xchg
adc
jl
pop
push
sbb
popa
dec
cmp
jge
adc
mov
out
xchg
cmp
int3
cmp
adc
mov
mov
or
sarb
enter
xchg
pop
ss
xchg
mov
or
and
outsb
gs
bound
xor
fwait
sub
orb
es
enter
das
popa
mov
aam
cld
pop
and
lea
clc
test
iret
sar
mov
daa
fwait
test
jb
shll
ret
cmp
popf
rol
in
inc
mov
mov
bound
add
std
xor
and
push
sbb
dec
out
fistpll
xchg
cmpsb
jb
aad
xchg
imul
mov
femms
push
mov
mull
mov
xlat
push
fwait
hlt
add
xchg
add
dec
xor
adc
push
jle
ds
and
repnz
jge
shrb
data16
cmp
lret
mov
outsl
fwait
test
dec
test
mov
fcomi
jge
pop
add
clc
shrl
cmpsb
xchg
in
int3
cmp
mov
xchg
jns
rcl
test
std
mov
rorb
mov
sub
inc
dec
nop
rclb
inc
sub
jp
pop
inc
test
subl
xchg
insl
repz
fsts
fisubs
ljmp
mov
or
adc
xor
out
cmpsb
popa
mov
dec
jne
and
or
dec
sub
sub
rorb
mov
ss
or
xchg
cli
push
inc
or
and
xlat
xor
mov
popa
inc
cli
cmp
shrb
pop
mov
mov
scas
and
hlt
test
test
and
mov
clc
jo
loope
les
test
sti
or
xor
push
leave
test
inc
aaa
in
mov
lods
cmp
dec
mov
cmp
fs
popf
sbb
cs
nop
leave
jno
aaa
jp
inc
je
aam
mov
shl
mov
inc
loope
in
movl
popa
shrl
sub
in
add
lods
or
sbb
and
sub
cmp
sahf
daa
adc
hlt
mov
xor
into
shlb
lahf
mov
pushf
nop
pushf
mov
pop
inc
xor
rcll
lea
je
and
jl
shlb
xor
cmc
loope
fdivrl
scas
dec
adc
pop
sbb
popa
xor
fisttpll
dec
mov
les
sub
jmp
cmp
jl
lret
sbb
es
mov
fwait
jge
xchg
shll
lds
cmp
rclb
jb
adc
dec
cmp
movsl
dec
in
into
push
inc
into
clc
lods
xchg
mov
imul
stos
dec
push
sbb
cs
xlat
lcall
cmpsb
lock
xchg
out
call
pop
repnz
sarb
dec
sub
outsl
mov
out
mov
sub
fcoml
jne
cltd
push
ss
jno
cmp
pop
mov
int3
jne
push
xchg
jae
jecxz
sub
xchg
fistpll
jnp
ss
push
pop
fld
sbb
jg
gs
cmp
repz
mov
mov
sub
aam
fistpl
pop
sbb
pop
mov
mov
adc
outsl
notb
sub
jb
sub
mov
sbb
push
fsubrl
jecxz
add
add
xchg
mov
adcl
sbb
xor
inc
xchg
fistl
push
xchg
xor
in
data16
dec
dec
xor
out
ss
mov
mov
mov
push
stc
outsb
loopne
fs
pop
sarb
jb
xchg
jb
add
mov
add
pop
fimuls
mov
data16
mov
inc
mulps
jge
jb
adc
fucomp
sub
sbb
fmuls
pushf
sub
inc
xchg
loopne
imul
arpl
fcmovne
jg
rcrl
stos
insl
sbb
push
js
jno
js,pn
xlat
mov
push
ss
xchg
insb
jb
js
outsb
lret
insb
dec
pop
lods
pop
push
cld
and
lahf
ljmp
inc
jb
lea
ljmp
fnsave
cmc
push
and
ret
pop
adc
push
test
cmp
mov
and
sbb
add
mov
sahf
rclb
sti
lds
pop
cmp
lret
cmp
scas
lret
iret
scas
gs
cmp
out
shrl
push
js
ss
jp
fsqrt
xor
pop
sub
push
mov
js
cmp
xchg
inc
jge
subl
adc
xchg
out
out
bound
mov
sbb
jecxz
mov
pusha
mov
out
sub
stos
mov
js
fdivrs
mov
mov
imul
mov
es
js
push
dec
cmp
rcll
jle
fistl
mov
xor
imul
inc
and
notb
cmc
push
dec
push
popf
xchg
lret
pop
pop
push
shlb
jb
cmpsl
shll
push
push
add
cmpsl
and
test
push
test
dec
rcrb
imul
inc
cli
movb
popa
ficoms
pop
mov
and
inc
add
jno
fstpt
arpl
sbb
xchg
add
add
andb
push
or
add
jae
aad
lret
les
dec
and
dec
jg
mov
lahf
and
or
cli
data16
mov
pop
inc
xchg
jmp
out
jnp
insb
cmp
in
cmp
push
int3
adc
imul
addr16
push
pop
adc
fiadds
sub
pop
cld
and
and
xchg
in
cmpsl
lods
add
aam
movsl
aaa
cld
xorb
xchg
push
adc
jo
pop
test
fdivl
push
push
cmpb
jb
cwtl
xchg
lahf
or
jno
in
insl
xchg
sahf
mov
sub
cmp
xor
js
popf
mov
xchg
push
cmc
leave
sahf
add
ds
ljmp
ror
fcmovne
add
xchg
repnz
out
inc
sbb
cli
lds
mov
rolb
jo
fsubrl
insb
hlt
pop
pop
or
cwtl
and
dec
mov
xchg
dec
in
std
jg
or
icebp
in
fcompl
and
sub
pop
cltd
cmp
pop
adc
das
push
and
xor
push
mov
sahf
cli
or
cmc
push
push
dec
std
mov
xchg
push
shl
scas
push
adc
add
pop
icebp
and
jo
push
push
add
xchg
repz
xor
mov
adc
xchg
and
in
gs
jp
icebp
push
repnz
and
nop
lret
mov
cmp
lods
movl
sbb
push
xchg
aaa
xchg
jnp
lds
dec
outsl
cmc
mov
cmp
aad
aaa
inc
and
cltd
mov
incb
mov
xchg
pop
dec
dec
mov
mov
and
jl
lret
add
mov
testb
xor
mov
add
loope
fdivs
into
xor
jnp
lret
into
dec
outsl
mov
popf
or
mov
lret
sub
ja
pop
addl
xchg
sub
lret
in
sbb
cwtl
icebp
cwtl
and
jecxz
sbbb
mov
jecxz
xor
test
out
push
sahf
lret
clc
jae
pop
aas
add
aad
scas
jns
dec
scas
mov
mov
jmp
popl
sahf
data16
clc
xor
les
inc
cmp
inc
jle
test
popa
lods
sahf
pop
sbb
adc
hlt
mov
adc
in
mov
stos
data16
out
insb
and
lds
push
add
xor
sub
dec
push
xchg
repz
push
adcb
cmpsb
adc
adc
add
rcll
out
sti
pop
jb
iret
xor
mov
clc
fdivrp
repz
xor
jmp
dec
push
adc
stos
dec
mov
mov
jnp
ret
mov
lds
and
jnp
dec
inc
loop
imulb
jae
adcb
pop
gs
mov
aas
das
gs
stos
test
imul
push
mov
push
xor
bound
add
and
ret
inc
adc
out
adc
lahf
lea
pop
xor
mov
andb
fistpl
loop
or
outsb
xor
xlat
scas
jae
xor
inc
dec
mov
adc
jg
adc
and
push
mov
fucomi
lods
pushf
cs
ljmp
mov
inc
inc
aad
ret
adc
cltd
xchg
fcoml
mov
and
and
mov
ds
pop
xchg
mov
xor
js
cmp
popa
mov
fstl
and
jbe
sahf
hlt
xor
mov
xor
push
xchg
add
jne
mov
psllw
push
cltd
test
leave
add
sti
in
jbe
stos
inc
xchg
jle
pop
aas
int
mov
jge
xor
xor
xor
inc
lea
jnp
push
pusha
ja
push
out
shr
imul
sub
pshufw
ljmp
pop
je
jae
movsl
adc
outsl
xchg
dec
adcb
jno
cmpsb
cmp
lock
and
movb
jp
jp
add
mov
adc
jg
lds
cmp
cmp
cmpsl
cmc
xchg
ret
mov
js
cmp
mov
es
outsb
pop
scas
stos
or
ret
jecxz
test
push
jno
movsb
mov
aam
cltd
mov
dec
popf
repz
or
add
stos
in
add
mov
cwtl
int
lret
push
mov
ret
stos
pop
push
mov
mov
mov
in
or
pop
sub
add
mov
loopne
test
test
ret
cltd
data16
jp
ret
push
inc
and
sbb
mov
adc
adc
loope
pop
insb
leave
mov
mov
cmp
cmp
frstor
hlt
mov
pop
loop
cmp
sbb
jmp
sbb
xchg
jmp
mul
sub
jno
cs
stc
fcoms
or
lahf
mov
xor
insb
push
push
inc
in
fwait
cmp
dec
push
fsubrs
outsl
xor
inc
fstps
hlt
mov
push
inc
xchg
sti
inc
ja
jnp
and
push
dec
adc
jmp
inc
ret
fs
xchg
ret
xchg
push
sbb
mov
add
add
cwtl
fistps
add
mov
mov
movsb
push
insl
lock
xchg
outsb
jmp
sarl
fs
imul
orl
cmc
loopne
test
cli
mov
movsb
mov
test
enter
sbb
call
cltd
xor
add
sbb
add
dec
rorl
in
test
lret
popf
aad
or
and
add
cltd
push
adc
mov
push
popa
pop
sarl
or
cmc
lea
inc
sahf
imul
scas
mov
push
cs
rcr
cmp
inc
rcl
lea
or
push
call
dec
pushf
test
inc
out
push
pop
jne
je
mov
movsl
pop
lret
leave
rcl
inc
xor
mov
xlat
mov
fcoml
mov
sbb
ljmp
scas
mov
pcmpeqw
pop
inc
shl
movsl
sbb
add
jae
lret
stos
or
sarl
test
jns
popf
push
jne
dec
rclb
cmp
aam
mov
stos
xor
jns
mulb
daa
sbb
lock
insb
or
xchg
lahf
jne
outsl
icebp
xchg
movsl
push
icebp
daa
or
push
xor
mov
aas
and
mov
adc
insl
inc
fcoms
loopne
ja
or
sub
clc
loop
add
in
push
pushf
or
mov
popf
ds
push
mov
movsl
lcall
lods
mov
shl
cmpsl
add
cmp
mov
pop
mov
sub
jns
adc
sbb
stc
movsl
cmp
int
cli
loopne
xchg
ret
mov
pop
data16
addl
inc
jb
push
jno
ret
pop
or
jmp
subb
loopne
aaa
push
enter
xor
es
icebp
pop
gs
adc
in
inc
in
cmp
scas
add
add
xchg
imul
lcall
cmpsb
nop
lret
pusha
in
push
mov
xchg
cmp
mov
jmp
clc
adc
sar
or
fnstsw
xchg
dec
stos
loop
movb
inc
xchg
in
add
jae
insl
enter
jl
cmp
inc
mov
insl
sahf
pushf
xchg
in
cmp
mov
and
jb
fs
addr16
xchg
mov
cli
inc
lds
push
test
wrmsr
xor
js
testb
loopne
out
jnp
in
xchg
decl
jo
lods
stc
or
cmp
xor
jg
jne
mov
lret
test
inc
cli
push
jo
xor
dec
lods
lahf
cmp
xchg
inc
lcall
jbe
inc
fdivrl
jl
push
subb
pop
sub
jecxz
out
inc
shl
pop
cld
rolb
pop
enter
jle
mov
lock
cmp
mov
pop
push
icebp
nop
pop
xchg
loope
inc
push
sbb
or
std
xchg
aam
lods
les
dec
jge
repnz
pusha
ljmp
in
cmp
or
aaa
jle
lds
loopne
test
pop
rcrb
inc
sbb
inc
jp
mov
add
mov
jae
or
out
outsb
pop
sahf
dec
jmp
imul
mov
cld
addr16
dec
iret
xchg
push
xor
jg
ss
dec
adc
repnz
and
ffreep
popf
imul
subl
push
in
sbb
and
lea
or
ret
out
jnp
cmpsl
lahf
mov
pop
push
scas
dec
fsub
xor
jno
pop
add
nop
pop
mov
outsb
fnsave
push
pop
outsb
push
cmp
stc
das
jmp
ret
ja
add
lahf
mov
push
and
les
and
fwait
add
jge
imul
mov
divl
divb
stc
stc
lcall
in
cmpsb
or
addr16
sbbl
sbb
push
jb
fsubr
ret
push
push
daa
xchg
call
xchg
negl
out
cmp
outsb
lods
cmc
insb
loopne
and
stos
push
push
js
push
pop
sbb
fs
sarb
insb
jecxz
fldt
sbb
dec
inc
nop
or
xchg
sub
push
push
push
in
add
divb
loopne
cmp
sbb
sub
mov
aad
nop
in
push
dec
pop
jb
pop
out
push
xchg
push
fldcw
add
ds
sbb
xchg
or
pop
or
sub
push
daa
aaa
test
or
scas
pusha
inc
push
fildll
in
icebp
add
pop
pop
xchg
leave
rclb
scas
mov
loopne
stos
inc
cmpb
int
enter
ja
es
mov
xchg
jnp
lods
mov
in
push
dec
jg
dec
std
mov
lahf
imulb
mov
adc
mov
add
push
mov
stos
cltd
sub
in
dec
into
push
insl
lock
or
ret
orb
xchg
pop
in
adc
pop
sbb
andb
mov
add
cmp
jg
std
mov
push
sahf
jg
stos
and
sub
int3
lock
mov
dec
push
or
ret
sbb
or
movsb
dec
mov
out
fistl
int
leave
mov
pop
loope
ds
jb
push
push
ficoms
test
sub
push
and
ja
in
cmp
sbb
sbb
pop
fstps
repnz
or
fld
dec
sbbb
adc
push
movl
mov
and
push
add
bound
popa
imul
cmc
cmp
ret
iret
jnp
movsl
lahf
push
outsb
in
pushf
jnp
sbb
aad
ds
addr16
lcall
dec
xor
lret
pop
ja
mov
hlt
sbb
shrb
mov
mov
call
pop
mov
call
sbb
loopne
sbb
stc
xchg
push
addl
xchg
inc
jecxz
push
sbb
xorb
mov
pop
test
and
lock
dec
adc
lods
movsb
loopne
lods
pop
lods
add
mov
inc
mov
jmp
push
add
mov
cmp
aam
push
mov
imull
imul
cmpsb
ds
and
inc
imul
jns
jge
inc
insb
ret
inc
jns
out
std
cmpsl
into
mov
jge
imul
scas
jl
dec
mov
stc
inc
and
call
xchg
lods
dec
ret
or
sub
dec
mov
push
sti
imul
sub
insb
sub
daa
dec
pop
or
cli
subb
push
in
cmp
cli
insl
push
xor
xchg
dec
stc
xchg
fwait
xorb
notl
mov
insb
and
cld
cmp
jecxz
add
pop
dec
out
cmp
or
ss
add
and
jl
mov
into
lret
inc
jns
jae
jle
cmpsb
pop
flds
mov
subl
sub
ret
aaa
ljmp
sbb
iret
out
ljmp
adc
push
daa
pop
mov
gs
inc
lret
push
fidivs
mov
nop
push
call
lahf
push
pop
je
inc
iret
xor
out
xchg
pusha
sbb
adc
mov
cmp
mov
pop
mov
div
or
xchg
mov
dec
add
pop
in
mov
jp
dec
loopne
mov
int
jecxz
ja
pushf
jb
xchg
lcall
sbb
push
mov
add
insl
rclb
xchg
shl
add
mov
push
mov
push
dec
jo
out
leave
out
pop
inc
int3
pop
movsb
aas
punpckhbw
dec
inc
js
ret
cmpsb
jns
hlt
push
pop
call
mov
out
lds
sub
cmp
out
sub
mov
add
aam
ss
inc
adc
or
adc
aad
xchg
nop
or
xchg
sbb
rcrb
test
mov
dec
scas
loopne
jb
dec
fistps
cltd
enter
cld
pop
pop
outsb
push
inc
aam
hlt
nop
js
loope
cmp
cmp
lret
les
pop
pusha
inc
or
fsub
jge
xor
imull
or
cmc
les
cmc
mov
addr16
dec
repz
pop
pop
aas
adc
mov
mov
xchg
pop
sbb
enter
aad
push
sbb
sbb
fs
das
enter
ret
adc
pop
jmp
fmul
dec
mov
jbe
cmpsb
push
pop
lods
sbb
test
sbb
sub
and
stc
shl
mov
lret
andl
int
push
rol
sub
jb
mov
fcompl
out
mov
xchg
outsb
fisubrs
dec
add
push
jns
insb
push
mov
insb
outsb
dec
xchg
pop
dec
rorl
mov
sti
mov
pop
jo
fsubs
or
cmp
sub
push
out
push
in
pop
sub
push
sti
and
daa
aaa
bound
and
mov
lcall
insl
lods
jb
cs
add
iret
out
pop
pop
loopne
mov
push
lahf
mov
jne
stc
out
push
dec
sbb
pop
ja
movsl
js
movsb
int3
lahf
scas
es
lahf
mov
dec
inc
or
add
ljmp
push
ss
mov
cmpb
sub
mov
lcall
inc
xchg
or
cmp
inc
xchg
dec
cmp
gs
mov
lds
orb
jg
lods
leave
jns
sbb
xor
pop
in
bound
cltd
pop
push
jle
into
sahf
loopne
hlt
mov
mov
jno
insb
pop
popa
iret
clc
xchg
faddl
mov
fcmovne
out
nop
push
in
leave
sub
mov
pop
jge
mov
push
lret
xchg
or
jae
icebp
arpl
aam
sbb
cli
mov
pop
pusha
ss
mov
lock
cltd
imul
orl
incl
jae
xor
push
mov
or
shrl
push
cmpsb
mov
test
repnz
test
pushf
fndisi(8087
cmp
dec
scas
shl
loop
pop
test
fnsave
pop
fimuls
xor
mov
in
gs
std
lcall
rep
rol
mov
std
out
test
loop
cmpsb
xchg
mov
das
sbb
hlt
icebp
lcall
and
xchg
mov
cmp
int3
ljmp
adc
out
mov
popl
shl
mov
inc
shlb
xor
int3
push
xchg
mov
mov
ss
pushf
cmpsl
lods
orb
insl
fwait
add
and
es
in
outsl
mov
mov
pop
out
inc
bound
push
pop
xchg
xor
mov
sub
data16
push
lret
pop
sbb
mov
jmp
or
sub
push
mov
test
dec
rcl
aaa
jnp
dec
inc
add
cmpsl
nop
mov
add
xlat
sub
aas
push
fdivrl
dec
jo
cmp
jno
cmc
and
scas
mov
ret
sbbl
loope
pop
outsb
rol
dec
push
or
std
jmp
and
xlat
fildll
jp
sbb
andl
and
and
outsl
xchg
fsubl
fcmovu
pop
push
or
pop
dec
xlat
movsl
xor
fdivrl
clc
cmpsl
xchg
mov
int
xchg
inc
divl
leave
das
cmp
into
ret
addl
mov
fmuls
jg
nop
out
jge
lret
push
mov
jnp
cli
adc
fsubp
inc
test
nop
pusha
ja
nop
pusha
inc
out
sub
pop
int
push
inc
dec
adc
shlb
mov
pop
cs
inc
inc
push
das
jo
enter
leave
fmull
sbb
fmull
fistpl
in
imul
xor
push
repnz
jno
jmp
and
rcr
jmp
les
ror
dec
push
and
sarb
dec
in
add
outsb
push
dec
mov
cmpsl
cmc
dec
jo
cmc
cmp
lret
push
out
adc
pushf
fidivrl
or
iret
clc
adc
outsb
daa
or
mov
adc
repnz
ja
bnd
cs
xor
and
mov
jecxz
ret
inc
in
into
adc
pop
jle
sub
jecxz
in
push
mov
pop
jne
inc
loope
rorb
cmc
lret
shlb
lcall
in
sbb
rcll
adc
lcall
movzwl
sar
fbld
add
cltd
imul
xchg
xlat
mov
mov
adc
es
cmpsb
mov
xor
push
push
pop
and
xor
xor
jbe
mov
out
push
sbb
jl
dec
sbb
aad
sbb
outsb
jns
or
jecxz
ret
xchg
imul
je
mov
hlt
sub
cmp
xchg
mov
pop
int3
mov
cmp
cmp
daa
or
bound
ret
sub
cmp
add
and
inc
jns
pop
mov
push
adc
sub
xchg
inc
aad
jb
push
cmovl
push
and
mov
loopne
jae
iret
mov
in
outsb
lahf
popa
cltd
push
jle
out
dec
mov
rcll
push
cmp
jno
repz
rorb
jmp
mov
test
or
mov
nop
subb
jnp
sub
std
sahf
mov
lds
ljmp
adc
in
cmp
jo
sub
xchg
xchg
pop
and
enter
rclb
jbe
mov
js
pusha
aam
cmp
imul
add
call
test
push
add
push
inc
add
lcall
rclb
in
jbe
popf
out
dec
popa
adc
jmp
cmp
dec
in
dec
sbb
sbb
cwtl
adc
mov
and
xlat
sbb
push
jns
adc
lret
mov
jge
mov
push
inc
xor
stos
inc
repnz
xor
cmp
stos
insb
mov
mov
sbb
jmp
xchg
or
lods
xor
pmaddwd
adc
aaa
inc
sbb
fnstsw
mov
mov
add
pop
mov
rcr
lret
rclb
icebp
dec
icebp
pop
test
ret
out
aas
inc
jp
pushf
fldlg2
push
xor
daa
adc
or
aas
sarl
inc
pop
push
jbe
cmp
ja
iret
sub
pop
aaa
cmp
dec
dec
jecxz
jb,pn
mov
stc
lea
pusha
jo
mov
mov
ja
and
pop
negl
mov
or
in
fbstp
pop
insl
add
mov
movl
shll
mov
andb
cmp
shr
mov
inc
in
nop
sbb
into
jne
call
dec
data16
push
dec
pop
mov
cs
jno
aad
sub
cli
add
xor
in
test
int
dec
es
inc
cmpsl
test
outsl
fcomps
test
dec
and
sbb
inc
sti
or
adc
lret
popa
lret
and
das
mov
mov
jmp
xor
cmpsb
xchg
xchg
mov
ret
loop
lock
orl
and
adc
test
sub
jnp
mov
inc
fmul
movsb
cmp
loop
xchg
jns
mov
ror
pop
lock
ficoms
cmp
je
jbe
xorl
stc
ret
mov
adcl
inc
rcll
movsb
rolb
or
rorb
pop
insl
outsl
das
jge
imul
inc
inc
add
jb
or
adc
iret
xchg
or
fstl
jb
sarb
and
dec
sub
loopne
das
aad
push
imul
jnp
into
inc
call
inc
subl
stos
les
ss
sub
cmpsb
adc
cmp
out
data16
cmp
cmpsl
sub
repz
jmp
sarl
bound
mov
stos
or
cmpb
dec
shll
pop
cli
pusha
es
inc
xchg
lret
mov
frstor
pop
hlt
cli
xor
lret
push
lcall
and
fdivrl
lret
jns
ret
push
addr16
sbbb
inc
cmp
add
push
out
dec
jb
mov
es
xchg
jno
jne
in
movsb
int3
clc
xor
lcall
loop
mov
adc
pop
bound
cmpsl
inc
add
inc
mov
addb
cmp
or
mov
push
imul
sbb
lock
add
sub
sub
xchg
sbb
fisubrl
jle
bound
int3
test
in
pop
mov
push
inc
and
sbb
or
or
int3
movsl
push
popf
xor
pusha
addr16
aaa
adc
fs
vpcmpeqw
xlat
nop
aaa
mov
add
test
sub
adc
pop
mov
stos
push
in
mov
sti
jecxz
inc
pushf
push
xchg
push
pop
repnz
push
stc
loopne
scas
mov
sub
hlt
in
out
mov
roll
jns
sub
xchg
xor
mov
xchg
data16
pushf
movaps
cwtl
push
sbb
xchg
int
pop
cwtl
lcall
add
loop
dec
push
mov
push
shll
mov
xor
jp
push
test
loopne
imul
rcrl
jmp
mov
mov
pop
int
lret
out
or
data16
movswl
ret
sbb
mov
xor
lds
out
xlat
xor
xchg
pop
jo
inc
shlb
xchg
add
and
xchg
and
arpl
jno
mov
lock
je
in
mov
and
stos
adc
aaa
push
stos
lock
loope
daa
jp
rol
add
in
jno
into
adc
adc
xchg
fcmovnbe
insw
mov
mov
inc
or
mov
jecxz
dec
xor
icebp
xchg
pop
cmp
aad
mov
mov
ret
orl
mov
mov
jle
in
adc
lea
inc
fsubrs
jl
adcb
add
je
and
mov
repnz
adc
and
and
les
and
pop
mov
and
xchg
adc
stos
mov
enter
inc
or
push
iret
sub
jo
inc
and
mov
mov
in
ljmp
fdivs
mov
cwtl
jge
cwtl
sti
mov
and
adcb
dec
loope
push
lahf
leave
rcrb
pop
orb
adc
test
movb
out
adc
aas
ret
adc
iret
inc
mov
or
xor
movl
jg
in
cmp
out
push
xchg
sahf
popf
loope
je
xor
cli
inc
clc
push
cmp
cmp
and
es
sarb
dec
movsb
in
loopne
mov
scas
lahf
xchg
aad
nop
add
int
movsb
sub
push
mov
sti
inc
scas
dec
mov
loope
mov
jg
dec
je
aam
js
repz
in
mov
fwait
in
and
jge
icebp
test
lock
and
in
cltd
dec
fnstsw
or
xchg
es
push
pop
je
repnz
std
js
je
lods
ljmp
sub
insl
test
adc
sub
sbb
add
jmp
test
pop
push
xor
fimull
pop
aad
cs
sub
jne
sbb
or
int3
aaa
jno
in
scas
js
repnz
inc
inc
jle
test
dec
movsl
lds
pop
popf
add
sahf
ja
cs
aaa
arpl
scas
cmpsb
cs
pop
out
or
jnp
call
outsl
shlb
cld
xlat
daa
cli
hlt
jno
in
in
jne
mov
repnz
jbe
jp
clc
data16
fimull
adc
fcmovbe
ret
cltd
cli
ret
jae
stc
adc
fs
adc
ljmp
mov
pop
add
loope
xor
mov
call
shl
scas
jecxz
push
mov
mov
fadd
daa
dec
aaa
nop
push
pop
cli
iret
insl
loop
xchg
push
mov
rcrb
cli
sbb
xor
stc
cmp
in
mov
pop
cmpb
mov
sub
mov
jmp
or
add
jp
pop
sar
adc
pop
mov
cmpsl
scas
mov
hlt
insb
xlat
adc
or
scas
adc
sub
imul
stc
and
sbb
int3
and
fdivs
outsl
into
push
sahf
mov
bnd
in
jnp
sub
rorb
and
mov
sub
aaa
dec
mov
xchg
repnz
arpl
jecxz
popf
cmp
fistl
aad
out
sub
jp
sahf
out
rclb
pop
mov
adc
cmpsl
iret
add
ja
int3
inc
out
subl
push
enter
out
xlat
in
fucomp
xchg
lahf
push
popf
cmpsb
sarb
push
sub
cmc
mov
jg
in
imul
or
pop
sbb
loope
cmp
dec
movsb
test
stos
mov
and
movsb
jae
dec
adc
mov
pop
sbb
daa
push
shrl
incl
ja
std
mov
jb
mov
or
jmp
sti
sub
xchg
fidivl
addr16
jns
adcl
icebp
xchg
mov
xor
and
es
rcll
loope
inc
push
fisubs
mov
mov
cmp
jge
jnp
cmpsb
sti
and
iret
xor
stos
add
aas
jno
mov
popa
xor
mov
lcall
ds
cwtl
in
mov
sub
inc
push
mov
ljmp
sbb
idiv
or
push
mov
pop
mov
sub
cmp
lahf
and
sarb
outsl
je
sub
push
xchg
scas
ss
jg
mov
xchg
in
push
sti
fmul
mov
jg
jge
ret
adc
inc
and
xchg
cmpb
out
add
sub
mov
popf
push
pusha
xor
inc
dec
dec
ret
xor
mov
lea
sub
je
ret
mov
in
cmp
lods
std
aad
ljmp
test
popf
xlat
pop
daa
xor
out
mov
lahf
sahf
sub
ret
sbb
fwait
dec
fbld
sbb
cmp
add
ret
int3
jl
aad
lahf
shlb
jmp
arpl
ljmp
jb
aam
into
mov
ret
int
mov
pop
mov
push
movsb
arpl
lea
sub
cltd
pop
mov
mov
daa
cmp
add
lods
enter
pop
mov
sub
je
mov
mov
aaa
mov
and
cmc
mov
shll
int3
ss
inc
and
jae
sbb
inc
inc
push
add
dec
mov
mov
mov
jb
push
and
xor
lret
mov
pop
mov
jl
push
and
cmp
pop
ds
stos
sbb
mov
sysexit
mov
pop
dec
or
adc
or
sub
outsl
in
mov
jbe
inc
rorb
cmp
ss
jmp
loop
out
xor
insb
pop
rcl
rcll
adc
xor
shll
jge
cwtl
hlt
sti
cld
jecxz
or
std
jbe
iret
out
mov
xlat
sub
pop
pop
cltd
cmp
subl
out
push
std
cmpsb
rcll
dec
or
neg
fmull
sbb
sub
or
sbb
sub
sahf
outsl
and
adc
fistps
fwait
adc
jmp
or
sub
mov
insb
jmp
dec
cmp
outsl
lahf
sbb
rcll
out
fs
jmp
pop
ficomps
sbb
shrb
mov
fnstsw
pushf
int3
sbb
or
jne
xchg
mov
push
or
loopne
ja
cmp
out
jecxz
mov
sahf
mov
cs
nop
pop
sbbb
sbb
mov
adc
shrl
lds
xor
sti
jns
andl
jmp
in
decb
test
mov
insb
push
enter
add
xchg
fs
les
add
push
mov
xchg
dec
les
xchg
pop
mov
pop
lods
in
gs
jnp
call
test
outsl
mov
iret
test
ficoms
jno
inc
mov
mov
sub
cmpsb
outsb
mull
inc
add
das
imul
outsl
out
sub
push
mov
and
icebp
fsubrp
xchg
gs
inc
jne
gs
addr16
mov
aam
int3
scas
bound
int
xchg
test
js
and
adc
into
leave
shll
cmp
ds
cmpsl
cli
jmp
mov
dec
hlt
adc
dec
mov
into
pop
lods
adc
xchg
lds
inc
jbe
imulb
push
fsub
rcl
testb
adcb
mov
adc
cmp
addr16
sub
in
fldenv
pop
mov
or
xchg
xorl
leave
rclb
cld
cltd
lret
xor
data16
insb
ljmp
mov
pop
lock
xchg
jo
hlt
ss
jp
dec
mov
pushf
pop
mov
xor
int
popa
in
out
jae
mov
imul
pop
and
xor
out
out
pop
scas
sbb
cwtl
push
and
adc
and
sub
ss
punpckldq
adc
aaa
jmp
mov
sbb
cwtl
xchg
mov
add
xchg
mov
mov
popa
mov
sub
cmp
lods
add
fcompl
pop
inc
and
out
push
in
dec
rcr
mov
pop
testb
cwtl
push
inc
cmp
scas
lret
xchg
frstor
xor
sub
push
cmp
fmuls
addr16
pop
jecxz
jne
fprem
inc
mov
test
dec
push
dec
add
xchg
scas
jo
cmpsb
inc
push
gs
scas
and
fwait
das
add
mov
push
push
addr16
mov
adc
sbb
xchg
aas
out
adc
add
mov
jge
mov
mov
push
repz
int3
pop
data16
xchg
xlat
scas
ficompl
push
ja
mov
adc
sahf
lahf
dec
push
int
orl
ret
js
fwait
aaa
push
call
push
and
sarb
lcall
xorb
outsb
idivl
mov
mov
xchg
adc
or
pop
sti
popa
dec
fildll
lahf
xchg
or
sbb
rorb
xlat
clc
mov
cmp
dec
jge
pop
shll
cld
test
push
into
inc
pop
sub
jg
pop
push
mov
xchg
lret
aad
loop
test
mov
xchg
lahf
xchg
and
scas
jae
sbb
movsl
ret
cmp
aam
aas
and
arpl
pop
popa
iret
ljmp
subsd
andb
js
les
jge
repnz
pushl
inc
mov
rclb
xchg
in
sub
cmp
push
dec
or
repz
inc
in
imul
call
xlat
dec
add
or
pushf
shlb
mov
xchg
inc
dec
pop
pushf
lds
data16
jg
sbb
fdivrl
and
xchg
inc
notl
arpl
xchg
or
or
jno
lods
add
or
sbb
sub
stos
push
in
and
shlb
adc
jg
pop
xchg
out
sbb
push
dec
fs
call
leave
movsb
cmp
pop
or
pusha
ret
sub
push
inc
and
sahf
pusha
xor
or
push
jmp
cmp
xor
xchg
cmp
push
or
dec
inc
xlat
cmp
mov
adc
fcmovu
cmp
xor
js
inc
fistl
repz
pop
popf
pusha
sbb
movsl
ret
mov
sbb
push
repz
xlat
mov
out
imul
sub
lret
stos
decl
pop
sub
inc
xchg
std
or
loop
mov
jne
popf
add
fimull
push
test
jecxz
out
arpl
or
lcall
sub
jae
or
into
jae
xorb
sarl
lds
aaa
das
pop
dec
je
rolb
cmp
xchg
cmp
adcl
jno
mov
or
lret
addb
insb
fs
and
cmpsb
xchg
mov
lds
xor
adc
sub
andb
xchg
mov
jb
xor
lods
pop
mov
push
jl
push
rolb
cmp
add
das
xor
or
mov
xor
xlat
jle
add
add
pop
sub
outsl
mov
pop
sti
pop
or
mov
andl
sbb
xchg
lds
mov
dec
inc
mov
mov
verw
dec
int
dec
rcll
sbb
rolb
add
mov
fadds
fs
sub
mov
jb
test
fisttpl
sbb
out
call
pop
lcall
and
cmp
or
jle
cmp
dec
insl
sub
adc
dec
cld
orb
test
stos
insl
pop
xchg
mov
sub
cli
repnz
ja
adc
loope
mov
fdivp
mov
add
arpl
subl
repnz
adc
push
xor
fstpl
aam
cld
mov
inc
loop
mov
je
lret
cmpsb
js
out
inc
lods
sahf
sahf
outsl
jge
cltd
inc
ds
push
or
enter
insb
nop
inc
sti
push
out
rcll
ret
add
sbb
insl
outsb
mov
es
cmp
xchg
test
dec
outsl
xchg
out
add
mov
mov
mov
push
add
clc
aaa
decl
fsubrs
out
nop
loopne
scas
repnz
push
cli
xor
in
xor
mov
pop
scas
fstl
xchg
inc
fldcw
cltd
jecxz
dec
daa
add
cmpsl
cmpsb
loopne
data16
lret
pop
aas
enter
leave
mov
jb
dec
fucom
shl
out
fcomip
adc
mov
ficompl
repz
push
testl
stc
and
daa
shlb
and
in
add
sub
cmp
das
ret
lock
or
sub
lcall
das
rcl
jae
jg
xchg
pop
xchg
or
leave
cwtl
sbb
cmp
inc
inc
sbb
mov
cmp
xchg
frstor
mov
mov
fidivrs
jno
test
jg
dec
mov
out
and
rorb
stc
inc
cmp
cmpsl
cmp
and
xchg
movsb
cmpsl
test
sub
xchg
pop
dec
xor
or
mov
aam
adcb
mov
test
repnz
dec
aad
cwtl
push
xchg
mov
int3
imul
stos
push
mov
ret
mov
scas
ret
daa
jne
xchg
cmp
loopne
clc
out
test
mov
popf
inc
inc
dec
ss
fdivrl
cmp
mov
add
sbb
xor
dec
fisttps
dec
dec
imul
or
cltd
outsl
jp
bound
aaa
pop
aaa
push
sahf
jl
push
leave
fsubl
iret
adc
decl
mov
sub
dec
imul
lahf
lahf
adc
mov
cmpsl
enter
add
imul
cmpsl
int3
jge
arpl
xor
sub
in
dec
adc
scas
adc
daa
fidivrs
lahf
icebp
outsb
enter
adc
pop
shrl
mov
or
sti
xchg
mov
and
pop
std
ljmp
jge
faddl
add
xchg
aam
or
xchg
fs
and
mov
fwait
or
sbb
gs
cmp
jle
push
pop
adc
xchg
out
or
lods
cmc
add
cmp
cmp
xor
gs
stos
jp
adc
fincstp
dec
xchg
sub
dec
or
es
jo
add
dec
inc
jmp
and
push
mov
push
push
mov
scas
inc
das
fwait
xchg
icebp
cmpsl
cmpb
pop
xorl
int
or
sub
in
and
in
jnp
jnp
fcomps
call
iret
loop
push
mov
push
cld
out
lds
fwait
imull
lahf
lods
in
mov
xchg
cwtl
int
xchg
adc
lret
push
es
add
mov
dec
cmpsb
inc
data16
ret
adc
in
clc
inc
jbe
lcall
pushf
cmp
ss
mov
cltd
mov
cmp
mov
jnp
scas
cltd
fsubrs
mov
jnp
inc
cmc
pusha
inc
lock
add
xchg
outsl
cltd
adc
and
xchg
cli
fbstp
or
mov
and
inc
dec
adc
lock
mov
mov
pop
mov
stos
ficoml
dec
push
hlt
enter
lea
pop
inc
push
pop
aas
js
xchg
xorb
mov
int
in
push
mov
pop
pop
ljmp
mov
dec
ret
sub
les
mov
dec
mov
push
and
mov
push
mov
push
aad
jb
mov
lcall
stc
push
movsb
jns
dec
mov
push
enter
and
ds
push
insb
cmpsb
mov
ret
insl
push
cli
sub
nop
jle
rorb
sbb
cli
pop
dec
ljmp
mov
add
push
je
mov
cmp
mov
sbb
cmpsl
das
mov
inc
lret
add
insl
outsb
and
cli
inc
popa
imul
inc
pop
movsb
lcall
pop
insl
mov
mov
mov
jl
cmp
les
jbe
dec
cmp
out
lea
xchg
insb
mov
je
jbe
xchg
je
aam
xlat
cltd
xor
into
pop
loop
xchg
mov
mov
les
xor
and
push
dec
aaa
xor
scas
repnz
out
add
mov
andb
jecxz
jmp
or
xlat
hlt
sub
inc
icebp
loop
pushf
push
add
xchg
lcall
xchg
out
mov
aas
shrl
sbb
inc
dec
enter
sub
sbb
jbe
xchg
js
sbb
rcrl
mov
rcrb
jb
pusha
pop
or
icebp
aas
mov
aad
shr
sbb
jbe
jb
mov
pushl
mov
popl
sbb
call
xchg
pop
in
xchg
mov
mov
aam
mov
out
mov
push
insl
xlat
inc
andl
dec
pop
xchg
mov
aas
and
movsb
ret
nop
sti
fcoml
daa
lcall
icebp
jnp
add
inc
bound
mov
mov
push
inc
push
inc
cld
addr16
xor
sbb
mov
mov
iret
rcl
pop
push
roll
adc
js
add
mov
stos
sbb
jb
sti
jns
cmp
xchg
fmuls
mov
jge
sub
or
lret
sbb
jecxz
push
loop
pop
mov
jb
mov
push
xchg
sub
icebp
in
sbb
adc
mov
roll
add
cwtl
dec
mov
sbb
leave
mov
xor
int3
pop
push
push
and
ret
adc
loopne
out
push
aaa
add
mov
xor
adc
and
mov
test
les
cs
mov
pop
dec
inc
adc
jb
and
leave
stos
insl
mov
pop
adc
xorb
mov
pop
jge
push
in
pop
jno
mov
mov
xor
loope
pop
das
mov
aad
mov
push
lods
cwtl
push
popa
leave
jae
aad
nop
aas
cmp
dec
mov
sub
inc
cmc
fs
dec
ficompl
mov
adc
push
dec
jg
test
fwait
add
adc
push
jae
push
jecxz
lods
je
inc
push
fimull
mov
dec
int3
lcall
daa
sub
add
inc
pop
cmpb
movsb
jmp
insb
xchg
test
pop
xor
cmp
gs
add
rcrl
cmp
adc
push
cltd
push
xor
outsl
mov
cs
ljmp
sahf
inc
arpl
or
xchg
cwtl
repz
dec
cwtl
into
aaa
fisubrs
push
sahf
adcb
sub
jl
mov
cs
insb
into
cs
orb
lret
add
adc
cmp
mov
sbb
mov
addr16
lock
pop
push
ss
or
adc
daa
mov
jb
hlt
in
js
fwait
or
test
xchg
xchg
fists
fistps
mov
in
test
xor
mov
decb
sub
loop
fdivrl
je
sub
loope
int3
sub
stc
mov
cmpsl
aas
std
imul
mov
je
and
lea
test
ret
cltd
in
add
rorl
subb
jae
or
clc
insb
ret
lea
stc
cmp
pushf
dec
je
stc
xchg
int3
ret
in
mov
rcl
push
sub
xchg
and
pop
and
push
aad
orb
icebp
scas
aam
pop
fimull
or
outsb
jg
aam
pop
sub
inc
mov
fistl
xchg
mov
lret
add
stos
lret
pop
pushf
jecxz
mov
scas
push
cmp
fcomps
inc
popf
mov
cld
cmpsl
add
mov
int3
out
rorb
outsl
arpl
mov
adc
mov
and
mov
sti
aam
jae
or
cld
mov
stos
mov
sbb
fistpl
dec
inc
mov
xchg
faddl
push
inc
int
pushf
lcall
les
mov
stos
imul
fstpt
test
push
push
adc
loope
jecxz
rcrb
jae
sbb
fdiv
cmpb
sbb
js
adc
mov
sbb
cmpsb
mov
add
push
hlt
repnz
in
sti
loope
adcb
cld
push
cmpsl
adc
push
xor
jbe
add
dec
aaa
adc
int3
mov
scas
push
cli
lock
pusha
repnz
loopne
int3
jmp
mov
not
int3
mov
test
cmc
xlat
sub
lret
lret
cmp
pop
andb
clc
pop
dec
lds
lret
cli
jo
push
nop
and
into
jp
pop
xchg
pop
icebp
dec
aas
arpl
das
jnp
adc
pusha
js
add
jp
repz
mov
sub
inc
fidivrs
jmp
or
adc
jns
ret
xor
push
aam
mov
jl
test
negb
shrb
lods
xchg
push
mov
in
cwtl
fisubrs
mov
mov
es
aam
cld
pop
push
mov
sbb
dec
mov
jnp
inc
fdivs
out
pop
mov
adc
push
pop
mov
jg
in
mov
pop
or
fistpll
fwait
xchg
cld
stos
lahf
test
inc
mov
mov
fwait
or
cmp
idivb
mov
dec
mov
mov
lock
outsb
loope
xor
mov
call
jbe
aad
mov
push
mov
cld
cmpsl
int
xor
testb
inc
mov
fs
and
mov
js
dec
int
sbb
pop
sub
jmp
les
push
mov
jp
fsubs
add
test
daa
jl
add
fbstp
adc
xorl
mov
adc
sbb
xor
mov
push
or
pop
sbb
in
loop
push
jb
pop
mov
or
lret
cwtl
movsl
add
js
lock
int
sbb
call
loope
sub
in
movsl
add
push
adc
or
cmpsl
enter
mov
mov
mov
ljmp
ret
testl
lock
in
jne
dec
in
mov
and
insb
cmpsb
mov
repz
fldl
sbb
outsl
lea
mov
arpl
pop
mov
jmp
fmulp
jbe
jae
enter
cmpsl
cmp
mov
pop
lcall
xchg
lods
pop
js
dec
xchg
pop
jnp
cmp
ror
test
je
mov
pop
std
sbb
psrlq
jae
test
rorb
orb
fsubrp
cwtl
fwait
add
insl
rclb
inc
inc
pushf
lock
adcl
jl
shlb
arpl
push
pop
fiaddl
adc
je
jmp
and
cmp
rcrb
mov
leave
scas
iret
mov
test
sbb
popf
sub
lods
xchg
inc
push
sub
cmp
aas
xor
add
and
sarl
je
cmp
lahf
cmpsb
mov
mov
inc
jp
pop
outsl
add
adc
testb
in
pop
xchg
loop
addr16
jae
xor
mov
or
std
nop
ret
adc
pop
mov
or
push
mov
mov
xor
test
xchg
inc
movsl
xor
and
sub
outsb
xchg
and
imul
lods
push
jp
jle
push
jbe
lcall
push
icebp
jge
dec
hlt
imul
pop
cmp
jb
adc
aad
ret
xchg
icebp
add
add
int3
push
out
enter
cmp
inc
adc
push
cwtl
pop
mov
adc
jmp
jl
mov
jne
popa
int3
xchg
jb
out
jle
lahf
call
mov
lret
cwtl
sbb
add
and
in
out
aas
mov
lcall
das
lldt
pop
and
lret
inc
adc
in
rcrb
or
in
ret
xor
and
inc
pusha
test
std
jae
mov
jbe
jge
mov
aam
jns
pusha
xchg
cmp
push
jae
mov
data16
lcall
mov
dec
cmpsl
out
inc
pusha
int
std
push
jmp
xor
clc
into
hlt
pop
mov
inc
pop
ljmp
sub
ds
push
push
popf
push
xchg
pop
lock
fstps
imul
ljmp
loop
add
shlb
jmp
mov
and
movsl
push
iret
mov
mov
sbb
xchg
xorl
stc
sbb
pop
sub
adc
dec
es
stos
fstpl
fwait
and
xchg
loop
push
dec
aaa
dec
jp
into
dec
mov
sarl
jo
xchg
movsl
fsubl
lods
call
and
adc
shll
lds
push
mov
xchg
sbb
jo
push
sarl
mov
int
xchg
mov
push
outsb
add
mov
inc
cli
cs
es
pop
jbe
shl
and
adc
cwtl
mov
mov
xchg
bound
in
inc
loopne
es
fldl
or
cli
or
jle
pop
es
fnstcw
lods
sbb
push
jl
repz
or
and
jle
adc
cmpsl
addb
icebp
les
sbb
ss
mov
call
pop
push
cmp
jp
inc
jmp
jecxz
js
xor
addr16
jae
xlat
push
xchg
push
xchg
sbb
ljmp
add
jg
push
xor
pop
xchg
xchg
and
jnp
push
fstp
xor
clc
inc
divl
xchg
nop
mov
call
jb
sbb
and
jle
pusha
into
pop
sbb
iret
das
pop
and
and
pop
in
jbe
in
adc
push
jmp
insl
inc
outsl
inc
jne
sbb
lock
out
adc
bound
push
jb
testl
movsl
inc
test
outsl
rcrl
loope
rolb
push
add
notl
mov
push
mov
sbb
jg
leave
cmc
jo
ljmp
lock
push
sub
push
std
out
mov
mov
fldenv
imul
fstps
shrl
loop
cmp
jle
push
rol
push
fsubl
mov
pop
cmc
mov
call
mov
fs
dec
pop
push
movaps
hlt
or
jl
mov
pop
adc
adc
inc
clc
adc
adc
iret
nop
mov
stc
arpl
and
xchg
xor
gs
jg
push
push
push
aaa
inc
add
aam
dec
in
mov
push
dec
repz
push
rol
mov
mov
mov
scas
and
dec
mov
mov
xor
sbb
mov
pushf
fstpl
nop
adc
dec
jnp
jg
mov
mov
jns
add
mov
push
out
mov
cmp
popa
mov
adc
inc
xchg
mov
ror
incl
mov
push
pop
int3
hlt
cmp
or
in
scas
jle
fwait
loope
and
dec
dec
inc
mov
outsb
pop
aas
imul
fildll
add
xchg
in
xchg
pop
loope
sbb
push
xchg
lret
xor
adc
jbe
adc
xchg
pop
inc
test
mov
movsb
fnsave
fldenv
xorb
fcom
orb
push
div
dec
movsb
imul
mov
inc
jle
inc
mov
cmpsb
outsl
subl
inc
ja
insl
jno
sbb
mov
add
fldenv
ficomps
sbb
add
cld
xchg
test
mov
in
out
pop
lcall
aam
pop
aaa
mov
push
add
jae
add
mov
lcall
lds
shrl
sub
add
ljmp
xchg
pusha
pop
mov
xchg
data16
push
and
mov
cmp
xchg
xor
dec
mov
mov
scas
jp
cmp
or
jmp
pop
and
daa
adc
sbb
sub
mov
and
inc
and
test
insb
mov
lods
rorl
jo
adc
test
and
push
jl
push
push
mov
pushfw
cld
sbb
jmp
insl
inc
mov
pop
and
push
pop
dec
imulb
test
aam
and
jecxz
call
pop
inc
xor
lahf
mov
xchg
jnp
jle
divl
push
jno
pop
fisttpll
sbb
push
jno
outsb
jp
lods
pushf
sub
shrl
cmpl
mov
pop
xchg
mov
arpl
and
inc
negl
mov
and
lds
sub
loopne
mov
testb
dec
dec
sub
daa
mov
or
xor
cmp
pop
imul
loope
push
loopne
loopne
and
mov
jnp
fstpt
add
and
inc
popf
cmp
cmpsl
xor
lahf
sbb
lods
imul
mov
adc
lods
adc
sbb
shll
jno
push
inc
adc
andb
outsb
mov
mov
enter
inc
sub
test
pop
fisttps
movsl
mov
clc
stos
repz
leave
xchg
or
loope
jo
xchg
iret
dec
xor
mov
dec
jle
mov
add
fldt
loop
adc
xchg
adc
add
cmp
dec
sub
loopne
adc
and
mov
pop
sbb
and
cwtl
sub
lea
data16
hlt
int3
inc
xchg
loop
outsl
dec
inc
push
cmc
aas
stos
dec
xchg
lea
add
cs
ljmp
mov
adc
out
xchg
ljmp
lahf
ja
subl
insl
cmpl
xor
mov
cmc
pop
push
mov
mov
insl
push
test
mov
in
or
jle
mov
lods
repnz
icebp
xor
fistpll
add
pop
ja
xor
das
popf
and
pop
push
xchg
test
sti
loopne
lds
pop
sub
pop
into
inc
loopne
xor
adc
jo
cwtl
popa
mov
repnz
push
cmp
and
jg
sbb
cwtl
sbb
xchg
pop
sbb
std
push
sbb
les
lret
mov
lahf
fisttps
xchg
idiv
mov
lods
test
xor
dec
add
enter
mov
xlat
repz
ror
mov
into
and
fs
push
fcmovbe
jb
mov
sub
rcr
insl
or
movsb
gs
and
mov
hlt
icebp
xchg
mov
and
scas
mov
cwtl
fs
jmp
pop
mov
jne
mov
ds
stos
xor
repnz
cmp
leave
pop
inc
ss
push
stc
loop
xchg
insb
dec
cmp
add
sub
push
scas
jl
in
aad
cltd
pop
push
clc
push
daa
mov
sbb
das
ret
into
aaa
push
mov
mov
mov
mov
cmp
faddl
pushf
mov
cmp
mov
out
icebp
pop
les
fnsetpm(287
cmp
jmp
addr16
in
lods
dec
xor
add
jge
fsub
sbb
in
shl
int3
push
push
jmp
decw
sbb
std
push
mov
sbb
mov
lds
sub
dec
popa
lds
std
xor
movsl
movsl
loop
mov
mov
mov
hlt
mov
push
push
pop
sti
inc
adc
push
out
push
sbb
cmpsl
cltd
or
sub
inc
cmpsb
push
lods
lock
mov
lods
outsb
aaa
mov
push
inc
aas
decb
stos
adc
inc
sbb
fdivrl
push
ret
int3
mov
jmp
or
stos
push
sub
adc
mov
mov
outsl
test
inc
inc
pop
sub
ret
fcmovne
mov
gs
sub
xor
sbb
cltd
out
sbb
xchg
incb
pop
cmp
mov
leave
jmp
xchg
gs
cld
mov
in
jae
leave
pop
sub
stc
adc
cld
popf
sbb
in
xchg
es
pop
push
xchg
push
jb
jbe
cmpsb
sub
and
adc
xor
jp
or
fnsave
lcall
sub
cmp
into
mov
push
ds
cmpsb
aas
arpl
jle
ds
movsb
in
insl
inc
mov
fiaddl
pusha
push
pushf
cld
rclb
dec
dec
adcb
mov
cmpsl
ss
test
leave
rcr
inc
push
stos
cmpsl
or
outsb
ds
sbb
xlat
icebp
cltd
daa
adc
xchg
aaa
dec
rol
jmp
icebp
sub
sarb
pop
js
fldt
jnp
sbb
jg
sub
fbld
pop
cmpsb
cmp
push
lds
insl
repz
popa
jg
in
daa
jmp
stos
lahf
cmp
jl
push
movsl
jnp
xchg
cmpsb
adc
pop
popa
dec
cmpsb
inc
or
daa
push
lret
addl
popa
mov
xchg
shrb
push
xor
xchg
daa
mov
orl
dec
adc
dec
pop
ds
int3
pusha
cmc
push
and
push
sarb
inc
dec
jle
outsl
cmp
or
data16
rol
sbb
push
pop
mov
addr16
adc
xor
insl
push
mov
fiaddl
xor
jne
imul
mov
mov
mov
xchg
push
add
mov
es
xacquire
xchg
jno
js
imul
shrl
ds
xchg
pop
sbbl
outsl
outsb
cmp
rcl
out
ss
mov
ds
dec
pop
mov
fiaddl
das
inc
cmp
inc
inc
sbb
test
negl
xorb
and
adc
lcall
adc
push
sub
lcall
or
push
lods
lret
pop
shll
jb
jmp
push
jnp
and
notl
sbb
mov
cmc
movsb
shll
mov
sbb
fistps
imull
and
call
add
dec
rcr
int3
iret
icebp
mov
dec
and
hlt
mov
divl
cmpsb
shrb
dec
jmp
or
aam
pusha
sub
sub
xor
cli
ss
ss
cmp
pop
mov
push
popa
out
or
and
ds
in
lret
push
test
shrb
movsb
lods
cmova
xor
sub
jb
pop
cli
arpl
pushf
fisttpl
pop
das
jne
daa
mov
pop
cld
dec
mov
icebp
push
iret
lods
sbbl
cli
lret
ss
or
mov
add
pop
xchg
push
ret
mov
cmp
data16
inc
les
cmpsl
mov
push
sbbl
cmp
or
cmp
loopne
rcrb
outsb
mov
sbb
fsubp
or
push
into
inc
das
leave
mov
xor
sub
jle
lods
lods
mov
mov
xchg
nop
inc
in
daa
mov
jne
cwtl
mov
add
out
fs
mov
aam
out
adc
push
inc
mov
orb
pop
xor
pop
cmpsl
xchg
outsl
mov
and
cmp
jmp
pop
push
rorl
je
and
xchg
out
add
sahf
inc
xchg
fdivs
hlt
inc
sub
filds
std
adc
iret
test
adc
fcoml
aam
mov
jno
lcall
ret
inc
das
jmp
cmp
add
push
inc
pop
lret
push
sbb
cmpsb
call
outsl
xlat
les
cmp
les
fisttpll
ret
push
rclb
dec
mov
test
mov
xchg
fdivrp
xor
test
lock
or
sbb
xchg
hlt
cli
push
cmp
add
cld
repnz
rorl
add
pushf
movsb
xor
outsb
pop
push
adc
or
rolb
leave
mov
add
xor
xchg
lcall
pop
enter
adc
mov
cmp
push
movsl
adc
cmp
xchg
sbb
jb
inc
jmp
ret
ret
inc
insl
push
adc
scas
je
stos
dec
pop
test
sbb
xor
adc
push
into
dec
xchg
test
mov
int
cmp
divl
sub
rcrl
test
mov
add
dec
mov
mov
inc
dec
loope
je
cmpsb
jle
repnz
mov
mov
loopne
mov
pusha
inc
sahf
xor
outsl
ljmp
aad
or
jecxz
mov
xchg
mov
and
in
sbb
and
xlat
iret
pop
out
das
cmpl
and
movsl
xor
or
xor
out
or
loopne
rorb
shlb
jg
out
mov
mov
adc
jl
mov
sub
out
adc
xchg
xchg
mov
or
stos
adc
fnstsw
push
push
pop
jbe
hlt
cwtl
pushf
lds
vmovhpd
mov
test
fsubrl
lahf
fwait
lock
sbb
insb
neg
cmpsl
pop
xchg
cmpb
push
jne
ret
movsl
repnz
mov
test
cmp
test
cmpsb
loopne
mov
je
std
mov
sbb
sldt
sub
pop
mov
lahf
orl
bound
jbe
icebp
jae
scas
popa
mov
adc
outsb
and
mov
jb
fcom
mov
inc
mov
es
cli
subb
sbb
out
dec
mov
cmp
or
data16
roll
lcall
and
repnz
xlat
cmc
ret
cmp
sahf
and
and
int3
cmp
push
inc
pop
out
stc
test
xor
cwtl
or
iret
ja
cmpsb
loope
ljmp
lods
xchg
mov
cld
adc
jbe
pop
mov
lahf
pop
lock
dec
push
sub
mov
sbb
and
inc
call
pop
int
sub
jg
sbb
les
out
mov
test
data16
lds
lea
mov
mov
cmp
inc
mov
jns
jae
ja
mov
add
ret
xchg
push
jb
loope
push
mov
decl
repz
sti
je
dec
out
in
jbe
or
int
push
push
sub
xor
mov
fildl
je
mov
push
xchg
xchg
jge
and
pop
push
cmp
subb
inc
inc
repnz
ds
push
dec
cmpsl
ret
in
arpl
pop
fwait
stc
adcb
std
cmp
cmp
jp
jmp
popf
cmpsb
outsb
sarb
xlat
icebp
jp
mov
out
ja
adc
inc
push
neg
jl
and
jb
sbb
push
push
pop
repz
fstps
test
out
pop
xchg
lock
cmp
test
xor
dec
movsl
out
je
xor
xchg
ret
inc
cmp
in
jae
in
cmc
pop
cld
dec
mov
push
jge
cwtl
fistpll
mov
mov
js
push
sub
adc
push
pop
ja
js
call
mov
xchg
das
testb
sub
push
mov
nop
mov
test
or
lret
mov
mov
mov
or
daa
iret
xor
inc
dec
out
dec
int
or
xor
je
and
imul
lock
adc
dec
jge
in
lret
mov
xlat
cltd
xchg
sub
imul
push
xor
mov
and
xchg
adc
dec
daa
sbb
xchg
fwait
xchg
movsl
jmp
test
or
stc
dec
subb
ret
into
pop
sbb
xchg
mov
daa
mov
pop
data16
into
lock
inc
xor
mov
add
ljmp
xor
dec
xchg
pop
js
pop
incb
inc
dec
ds
jb
ds
aaa
lods
fiadds
sarl
or
iret
push
mov
int3
mov
call
cmp
repz
out
daa
xor
shll
adcl
dec
loop
jae
sbb
xor
fimull
inc
sub
jecxz
dec
aam
jb
ljmp
xor
jo
mov
popf
adc
and
add
dec
and
jp
popf
cmp
mov
xchg
out
pop
cmp
jle
mov
cmp
cmpsl
mov
fbstp
adc
call
mov
xchg
sti
xchg
in
fsubs
jecxz
add
add
jle
pop
fst
push
ret
jbe
into
push
outsl
mov
xchg
imul
pop
xor
fidivrs
and
sub
mov
adc
mov
cmp
push
sbb
into
sub
addb
les
and
arpl
jle
cmp
push
lahf
lods
inc
aad
adc
dec
push
or
adc
repz
frstor
xlat
xchg
lods
sub
lock
lods
and
sti
and
jge
scas
mov
popa
sti
sbb
add
ja
jo
clc
mov
lea
lahf
mov
sbb
pop
inc
js
cmp
les
stos
test
mov
inc
lahf
divb
inc
add
rcll
xchg
rcll
out
xor
cmpsl
add
adc
add
es
mov
outsl
cmp
insb
mov
sahf
cld
movsb
push
sbb
lahf
mov
imul
add
mov
inc
scas
pop
popf
adc
scas
jl
adc
mov
or
stc
shrb
inc
mov
ja
sbb
cwtd
les
inc
dec
sub
push
sbb
mov
aad
cmp
repz
push
push
sub
xor
xor
imul
enter
lahf
outsl
int3
icebp
outsl
movsl
push
sahf
xor
push
fucomip
jecxz
mov
or
jl
jno
clc
nop
fmuls
loop
push
cmp
or
inc
scas
aad
shl
fimuls
clc
xchg
sub
dec
sti
mull
test
and
jbe
pop
mov
add
out
mov
cmc
jae
cmp
cli
lret
pop
xor
or
test
fs
jmp
inc
pop
jo
jo
pop
push
loop
fsub
cmp
xlat
cli
mov
or
shl
in
mov
out
das
inc
sbb
sub
enter
and
loop
mov
faddl
clc
out
loope
fistps
mov
jne
in
mov
pop
pushf
push
das
mov
or
push
mov
xor
inc
or
imul
xchg
push
sub
lods
jae
es
test
mov
mov
pop
add
mull
cmpsb
or
mov
or
add
int3
lret
mov
and
ss
pop
test
adc
mov
inc
xor
stos
xor
mov
jmp
inc
pop
mov
pop
mov
adc
dec
repnz
hlt
sub
sbb
xor
adc
xor
sub
jbe
sbb
rcr
pop
cmpsl
xor
sub
jmp
mov
mov
adc
std
ret
mov
jae
xchg
adcl
pop
mov
dec
push
notl
test
pop
out
or
push
loopne
xchg
xor
jnp
in
xor
dec
lahf
and
stc
data16
add
sbb
das
les
int
into
movsl
cltd
mov
lods
scas
bound
arpl
into
xchg
dec
jecxz
inc
or
sti
shlb
cltd
mov
fidivs
adc
sub
jg
and
aaa
sbb
mov
sub
bound
rclb
cmpsb
pop
ret
mov
lcall
jae
test
or
lret
cwtl
push
aad
andb
imulb
loopne
aad
mov
sub
fs
inc
sarb
aam
fnstcw
pop
push
rorl
add
inc
inc
push
mov
call
cli
adc
add
fisubs
fstl
lret
xchg
pushf
and
cmp
ret
dec
in
lret
cmpsl
dec
xor
dec
push
lcall
inc
fmul
jl,pn
pop
inc
or
inc
mov
or
or
clc
fstpt
cmp
mov
add
movsb
xor
lret
sub
jbe
push
push
dec
jnp
mov
dec
fadds
in
and
repz
lds
or
movsl
pop
adc
adc
xor
pop
hlt
mov
jp
fsubp
lods
add
pop
outsl
hlt
shlb
jle
ret
nop
push
mov
in
stc
clc
xchg
sbb
cmpsl
pop
aam
pusha
push
in
aad
rcrl
imul
xchg
mov
stos
push
icebp
out
jmp
cmpsl
rcrl
add
jmp
jns
cmp
outsb
add
sub
aas
cmpsl
inc
push
fcomps
push
int
xchg
inc
push
push
inc
fsub
lock
jg
pop
out
jmp
jge
iret
mov
add
inc
mov
mov
mov
in
push
fmuls
hlt
cltd
mov
push
jg
mov
sbb
mov
fstl
jp
inc
sbb
lret
out
into
xchg
sub
roll
jg
jg
add
rcrb
sbb
pushf
cmp
push
incl
inc
movsl
jge
adc
test
test
sub
and
mov
popf
lahf
and
test
xchg
pop
cmp
mov
popa
mov
ja
pushf
jo
test
ficoml
daa
mov
in
adc
mov
pop
fisttps
inc
dec
out
roll
ljmp
movsb
clc
pop
ja
lea
mov
xchg
jb
int3
gs
add
mov
and
xlat
test
subl
mov
sbb
mov
fucomp
xor
int3
ja
xchg
xor
push
cmp
cmpsl
inc
neg
ror
push
xacquire
or
sub
sbb
cmpl
out
ficoml
rcl
push
dec
fdivrl
ret
sbb
dec
push
cmp
or
aad
jo
jo
mov
iret
out
mov
les
xchg
movsl
jae
aas
out
ljmp
lret
inc
jno
jle
mov
int3
jl
lcall
aaa
xor
insl
bound
mov
push
call
push
cmp
aam
mov
pop
mov
fwait
or
call
aad
aam
sub
std
aaa
xchg
jl
jp
test
xlat
std
pop
pop
mov
dec
dec
cmp
push
or
or
les
sahf
jb
mov
inc
insl
mov
dec
aam
sub
mov
add
fcmovu
in
enter
test
push
scas
out
mov
mov
xorl
dec
pop
fistps
stos
mov
lret
inc
mov
adc
fists
mov
lcall
xlat
loop
mov
xchg
mov
roll
mov
es
movsb
jae
std
ret
out
cs
mov
xchg
test
inc
or
xchg
lcall
add
jne
js
xchg
pop
lea
mov
aam
xchg
push
sbb
cmpsl
daa
addr16
xlat
mov
push
xor
in
clc
int
outsb
insl
or
mov
repnz
imul
cmc
dec
sub
cmpsb
repnz
adc
repnz
dec
int
dec
fcoml
mov
mov
popa
outsb
repz
test
daa
sub
cwtl
mov
lret
inc
cmpsl
shll
gs
adc
in
cmp
adc
inc
mov
mov
ljmp
stos
in
test
dec
xor
movsl
dec
pop
mov
call
pushf
lcall
out
fwait
pushf
jle
jbe
pop
jae
pushf
fldt
sub
sbb
outsl
fnstenv
mov
add
mov
movsl
ja
pop
mov
xor
or
adc
push
sub
xor
dec
popf
mov
sbb
test
and
fnsave
out
aad
jmp
fnstenv
lds
xchg
in
stos
lock
test
loop
xchg
cmp
repz
dec
xchg
sub
clc
xor
adc
mov
stc
jns
jo
rolb
push
ss
cs
nop
mov
aam
xor
push
gs
enter
lods
cmp
daa
xor
xor
xchg
pop
sarl
xchg
jle
and
cli
packssdw
inc
and
les
rol
ds
nop
or
inc
jae
les
mov
or
mov
pop
imul
xchg
mov
loopne
mov
loopne
test
pop
dec
inc
popa
cmp
xor
or
dec
mov
rep
inc
jg
andps
scas
les
test
das
movsb
scas
sbb
jbe
fs
and
adcl
popf
xchg
rol
mov
lret
dec
imul
pop
mov
inc
out
mov
push
roll
adc
in
jle
cltd
xchg
add
cmpsb
arpl
push
in
adc
jl
arpl
lret
cs
ret
pop
sahf
out
std
jns
test
testl
jne
push
or
pop
addr16
dec
mov
sbb
pop
jecxz
push
popa
push
xchg
mov
mov
jecxz
pop
push
sti
pop
add
push
cwtl
imul
movsl
std
jnp
sub
out
push
push
mov
addr16
fcmovb
push
in
movsb
in
int3
fcompl
mov
popf
adc
inc
fstl
aad
imulb
mov
mov
mov
imul
or
dec
jg
call
jmp
cmp
adc
lcall
nop
dec
cmp
sbb
or
rclb
push
sub
sahf
xor
lret
sub
pmullw
and
pop
popf
pusha
pop
jle
sahf
pop
lods
outsl
in
bound
add
pop
fwait
ljmp
xor
mov
aas
lret
or
mov
pop
loope
lods
push
xor
dec
mov
or
jo
mov
aas
popa
js
and
jmp
and
fnstenv
dec
pusha
inc
shll
xchg
push
fwait
dec
bound
push
jne
cmpsb
pop
lcall
stos
dec
sub
dec
and
pushf
pop
dec
xchg
ret
addb
fbld
loop
stos
filds
sub
sbb
lock
out
outsb
sarb
in
xor
add
jb
inc
mov
cltd
dec
mov
pop
andl
fmull
sarl
aas
jge
cltd
jbe
inc
push
add
and
ds
mov
dec
loope
mov
adc
lea
aas
jne
stos
into
sahf
mov
insl
mov
stc
add
adc
ret
mov
add
jno
fstp
xor
mov
in
dec
fnsave
or
pop
cld
jle
or
imul
mov
push
adc
out
es
ror
test
pusha
daa
push
std
ljmp
adc
xchg
mov
mov
js
add
or
xlat
mov
cmc
or
cmpsb
not
mov
cmp
fcomp
nop
or
dec
popa
cmp
pop
stc
jmp
sbb
pushf
push
mov
mov
mov
rorb
ds
insb
add
inc
int
xor
cwtl
int3
dec
mov
lahf
jo
xchg
and
sbbl
adc
jge
arpl
adc
jne
push
mov
clc
mov
pop
dec
mov
cld
and
jb
shll
push
dec
xchg
cli
jno
subb
int
xchg
mov
cld
mov
dec
sbb
les
push
mov
add
iret
dec
jge,pt
sbb
and
sub
xor
and
pop
imul
ja
rol
aaa
mov
sbbb
clc
adc
pushf
ds
mov
jbe
xchg
ret
call
ret
shl
mov
or
stos
mov
nop
repz
cmp
dec
add
aas
add
fidivrl
add
xor
mov
into
in
leave
test
out
in
gs
mov
mov
and
xchg
test
repnz
sbb
lds
jmp
adcl
and
stos
push
adc
mov
push
lret
shrl
mov
gs
xchg
xchg
inc
in
add
incl
xor
leave
repz
mov
jne
push
jno
sbb
xorb
insl
sbb
cmp
sti
in
or
adc
mov
stos
movsb
cltd
and
mov
add
sbb
shrb
in
movnti
fimuls
push
cmpsb
pop
mulb
dec
ja
add
rorl
inc
lods
mov
call
jno
stos
adc
push
dec
cltd
cmp
shr
imul
sahf
push
jo
call
jle
jmp
imul
jno
int
sbb
push
jb
pusha
repz
andl
outsb
jno
pushf
jae
call
in
or
daa
add
inc
sarl
imul
sbb
xchg
out
mov
inc
push
add
je
repz
adc
imul
pop
push
lcall
call
add
mov
stos
repnz
ror
je
les
ret
xchg
js
mov
xor
push
enter
fistpl
repnz
inc
mov
lea
mov
das
ret
or
fcompl
adc
push
add
ret
mov
dec
mov
shrb
test
outsl
xchg
cmp
shlb
fxam
popa
cmp
mov
arpl
pop
ljmp
jge
xchg
jle
dec
stos
inc
scas
or
xchg
in
push
ret
stc
ret
xchg
jae
ret
fwait
xor
ret
pop
cltd
dec
outsb
push
shll
mov
movsb
loop
jmp
cmp
insl
aad
sar
leave
lret
hlt
loop
or
int
xor
xchg
mov
fistps
push
sbbb
fildl
push
sbb
cmp
pusha
movsl
test
adc
imul
mov
and
in
xchg
xchg
fucomip
sub
stos
pop
lods
ljmp
aam
xor
std
lahf
xchg
cld
xor
pop
xchg
sbb
cmp
imulb
jns
jge
ds
test
lcall
xor
adc
jbe
jnp
dec
mov
addr16
test
ror
shrb
pop
xor
jle
cld
push
dec
fimuls
ret
push
sub
negb
mov
sub
adcl
mov
int
adc
mov
loope
ljmp
or
fcmovne
xor
push
outsl
sub
mov
nop
jecxz
inc
jo
imul
jnp
movsl
adc
adc
inc
pop
ja
mov
inc
mov
incl
push
mov
in
das
mov
inc
pop
mov
xchg
das
notb
in
fsubr
or
jge
lret
cwtl
js
hlt
adc
jb
jge
fiadds
inc
pop
adc
fwait
push
jae
add
xorl
ss
repnz
dec
lcall
pop
scas
dec
mov
test
xchg
aam
ja
jb
imul
xchg
js
and
out
and
jo
sti
xchg
cld
xor
sti
shrb
les
push
inc
fstpl
pop
mov
stos
pop
pop
add
adc
fucomp
inc
aam
mov
into
scas
ss
cmp
mov
adc
mov
sti
mov
push
dec
mov
sti
loop
sub
rcrb
loope
jecxz
outsl
sub
push
loopne
ss
pop
or
cmc
cs
subb
paddusw
fsts
sbb
in
movsl
push
xchg
jle
outsb
les
cmp
xchg
and
fbld
inc
sbb
daa
xchg
mov
clc
aas
dec
pop
out
loope
pop
in
scas
mov
leave
xor
adc
cli
cli
jnp
cld
cs
test
xchg
fnsave
dec
mov
fwait
xchg
and
int
jns
imul
scas
push
inc
jns
add
testl
pop
aam
mov
mov
inc
dec
ret
push
outsl
inc
lret
or
push
sbb
es
nop
fs
lahf
out
jb
mov
dec
hlt
mov
sbb
cmp
je
sub
adc
js
xor
adc
inc
cld
sbbb
inc
inc
rclb
loop
in
imul
ja
stc
push
jno
out
test
mov
jle
mov
mov
das
dec
gs
mov
into
jmp
cmp
mov
fs
xor
dec
mov
mov
gs
cltd
ss
jb
cmp
adc
outsl
jae
test
cld
fsts
inc
div
in
and
add
les
mov
aad
add
popf
cmpsl
test
push
jecxz
fdivrs
lret
and
push
pop
adc
shlb
sub
push
cwtl
jo
jmp
aad
push
and
cmp
arpl
out
cs
push
xchg
std
arpl
movsl
cmp
popa
dec
and
jecxz
inc
mov
push
test
or
int3
clc
cwtl
add
jnp
cmp
sbb
hlt
loopne
ja
sbb
add
sub
daa
or
addl
mov
mov
rcrl
stc
scas
push
shlb
mov
cmp
dec
mov
cld
jmp
cmpsb
cmp
mov
mov
lods
pop
fwait
stos
adc
insl
lods
cmpsl
inc
dec
pop
je
lret
cmpb
scas
stos
fabs
sub
add
jl
scas
adc
add
cmp
test
pusha
push
movsl
test
add
popf
ret
sti
imul
test
mov
and
push
orb
gs
pop
pop
ds
mov
out
mov
in
cmp
push
xor
cmp
push
mov
mov
sbb
or
xchg
adc
les
int
push
xlat
cltd
mov
or
loope
inc
push
inc
in
push
cmp
mov
ret
je
xchg
arpl
push
pop
int3
and
inc
inc
in
push
mov
or
ret
nop
xorb
fnstcw
lock
add
xor
aam
insb
clc
aas
push
push
fistl
int3
xchg
repnz
and
in
mov
xchg
lds
mov
ret
sbb
fwait
cld
add
push
addb
xor
dec
scas
loopne
les
jno
das
or
outsb
xchg
dec
outsb
repnz
out
dec
pop
and
adcb
jne
lods
inc
scas
lret
jb
test
pop
jmp
mov
jecxz
stos
pop
out
pop
and
xor
mov
pop
icebp
inc
inc
movsl
jno
mov
sbb
hlt
mov
dec
pop
cmc
push
daa
out
and
jb
into
push
push
push
pop
repnz
jnp
inc
push
mov
loopne
push
mov
pop
pop
sub
pop
push
out
cmp
daa
cmp
rol
inc
call
sbb
scas
sub
mov
push
inc
mov
xchg
adc
push
iret
sub
aad
enter
push
inc
jno
sbb
and
rcll
xor
xor
das
pop
stc
addr16
data16
cli
in
subb
xlat
in
xchg
std
xchg
cmp
push
insb
sbb
fwait
inc
out
or
xor
stc
pop
ret
push
xchg
xor
cmpsl
xchg
mov
daa
adc
or
sarl
jge
les
in
sarb
lock
fmul
push
std
mov
jae
icebp
inc
push
mov
aas
sahf
shl
movb
cmpsb
add
lahf
cli
xor
into
adc
and
hlt
scas
dec
es
and
add
pushf
andb
mov
xchg
cmp
js
mov
sbb
mov
jg
cmp
push
loop
mov
sbbl
xlat
cmc
std
add
test
lods
or
aas
sbb
jmp
add
mov
loopne
pop
adc
mov
insl
bound
xchg
clc
ds
stos
lret
loope
xchg
adc
insl
sub
adc
es
inc
inc
xor
pop
add
dec
add
aad
xchg
cmp
fmul
pop
mov
bound
pop
xor
in
loop
loop
cwtl
sbb
jg
enter
push
movsb
adc
push
dec
insl
xchg
enter
adc
test
mov
pop
inc
pop
add
insb
sbb
fdivrs
ret
sbb
cmp
mov
out
stc
and
and
mov
mov
cmc
mov
idiv
fdivrl
sahf
cmp
adc
inc
cmp
dec
fidivrl
ror
pop
imul
push
fnsave
push
lods
fisubrl
push
cmp
aam
or
push
ret
push
xor
and
adc
dec
lea
push
sub
imul
or
mov
int
add
cmp
stc
xchg
sahf
ss
jno
lock
outsl
int
add
ficomps
sbb
push
push
xor
push
cli
mov
rclb
icebp
icebp
mov
call
fsubr
out
add
pop
shr
pop
mov
dec
jo
loopne
adc
jnp
xchg
pop
push
push
jmp
push
loopne
je
adc
loope
incb
jge
mov
ficoml
push
dec
arpl
insb
fxch
pop
adc
jne
lods
ss
inc
pop
imul
lods
cmp
movsb
mov
ljmp
adc
add
push
out
aam
jb
scas
outsl
test
fisubl
sub
mov
stos
mov
mov
scas
push
cmc
push
test
pushf
daa
mov
xchg
sahf
stc
push
add
cli
scas
test
movsb
out
fldt
and
scas
and
cs
in
dec
inc
jae
repnz
loop
pushf
test
fs
sub
hlt
mov
subl
adc
inc
push
inc
icebp
lods
aas
mov
test
fistpll
test
sbb
jb
xchg
hlt
pop
adc
mov
fadds
inc
mov
aaa
das
or
icebp
xor
test
pop
push
xchg
sub
sti
jnp
leave
ljmp
loope
mov
call
and
push
out
iret
lea
dec
test
add
mov
jecxz
dec
loope
pop
dec
es
dec
cmp
imul
stos
dec
lock
mov
cmpsb
test
test
inc
mov
pop
les
or
int3
pop
and
in
idiv
cld
or
testl
lods
inc
sub
test
and
inc
jb
inc
pop
sarl
mov
lods
dec
sbb
mov
and
add
shrl
out
xchg
sbb
jmp
and
pop
mov
mov
insl
xor
dec
adc
sbb
adc
aad
pop
stos
fwait
jb
mov
test
jecxz
sbb
pop
sub
dec
ja
sub
adc
inc
mov
mov
xor
fdivr
or
pop
jg
dec
in
adcl
mov
int
ret
je
adc
mov
fs
test
ljmp
xlat
shll
ds
movsl
cli
push
or
or
lds
jns
and
lret
push
adc
lret
mov
out
sbb
ja
test
cmpsb
daa
jg
sub
push
xchg
sti
shll
lahf
mov
mov
sbb
sbb
xchg
push
mov
mov
decb
in
adc
mov
stc
push
out
enter
hlt
jae
jbe
adc
xor
adc
mov
sbb
aad
paddw
hlt
aas
in
insl
jnp
cmp
shll
dec
stos
sbb
push
negl
mov
mov
int3
inc
loope
adc
in
lock
aaa
xchg
cmpb
pop
shll
pop
pop
xchg
enter
sub
dec
repnz
cmp
rorb
icebp
daa
in
aam
out
mov
xor
or
sbb
repnz
loop
and
dec
push
cmpsb
push
xchg
xchg
mov
lahf
and
mov
sub
add
into
jecxz
pusha
xchg
push
in
nop
adc
clc
mov
test
aad
icebp
movsl
or
sbb
push
inc
sbb
and
std
test
shl
mov
cmpb
imul
cltd
ffreep
mov
hlt
negb
jge
xor
sub
sub
xchg
in
aam
cld
inc
cmp
xor
sahf
or
ret
addb
push
cmp
lcall
leave
mov
stc
adc
insb
jns
fcmove
and
rcl
sar
push
inc
aam
pusha
add
out
mov
jns
stos
dec
mov
enter
sub
in
adc
lods
incl
xchg
pusha
push
popa
add
push
jp
xor
inc
insl
cltd
inc
add
outsl
dec
in
mov
pop
nop
fwait
or
add
in
lahf
cs
cmp
push
mov
push
in
jp
cmp
lock
inc
cwtl
lds
adc
push
daa
and
mov
push
in
cli
xor
push
dec
dec
movsl
into
or
inc
mov
cli
aad
pop
xor
arpl
push
out
test
dec
aas
or
or
arpl
pop
xchg
inc
cltd
mov
mov
push
cmp
inc
test
dec
jmp
in
data16
ss
testl
mov
or
push
mov
mov
sbb
xchg
cld
fisttps
stos
adc
bound
aad
rcr
popf
ljmp
mov
lcall
push
mov
fsubr
pop
push
bound
imul
fsubl
xchg
pop
adc
sub
push
out
inc
mov
xlat
push
push
and
push
shrl
and
add
idivb
xor
mov
xchg
inc
cmp
mov
in
mov
inc
ret
repnz
push
repnz
xor
sbb
mov
sbb
push
pop
sub
stos
imul
xor
movsb
mov
fstps
imul
ljmp
sbb
nop
cmpsl
pop
pop
mov
inc
jo
popf
lret
ret
outsb
mov
test
xchg
and
fldl
adc
pop
mov
mov
xchg
add
pop
lret
pop
rcrl
jnp
cmpsb
scas
push
nop
lds
push
aam
stos
aaa
dec
cmpsb
ftst
mov
sahf
cmp
mov
stos
cltd
dec
or
push
dec
pop
scas
dec
cmpsl
fisttps
mov
inc
push
sbb
mov
xor
mov
sldt
adc
lods
sahf
mov
dec
je
push
dec
sbb
sub
je
xorps
lods
dec
and
add
sub
push
cmp
jecxz
pop
aad
add
mov
hlt
lock
xchg
cmp
pop
out
add
negl
adc
sbb
bound
dec
std
sub
add
xchg
mov
sbb
mov
mov
jmp
popf
xlat
call
cmpsl
fdivrp
out
subl
lods
inc
dec
xchg
add
rclw
shlb
loopne
gs
loopne
loope
push
sbbb
push
int
and
mov
inc
xor
pop
test
adc
push
mov
iret
add
icebp
dec
sahf
fcompl
mov
jne
cmp
movsb
cs
fiaddl
jnp
push
sbb
xchg
xor
das
xchg
push
adc
inc
and
xor
sbbb
fiaddl
mov
or
sbb
jmp
cmp
leave
fcomi
add
mov
and
lds
xchg
push
test
je
adc
imul
dec
ds
outsb
mov
mov
push
cmp
push
shl
mov
xchg
pop
leave
lods
call
fldl
adc
mov
pop
ftst
pop
sub
cmc
aaa
std
and
repz
in
or
dec
cmp
dec
icebp
xchg
pushw
je
mov
cmpsb
ss
je
pop
xor
push
cmpsb
je
xchg
popa
pop
and
pop
mov
add
aad
dec
adc
lret
cmc
pop
aad
sub
sub
bound
stc
out
push
dec
std
pop
insl
in
daa
fdivrl
mov
ja
mov
and
lods
aas
xor
mov
stos
out
test
jae
addr16
sub
aaa
add
mov
jae
xchg
cmp
jo
bound
mov
inc
mov
aaa
repz
in
call
stos
pop
push
mov
push
sub
push
out
xlat
jmp
jns
aam
mov
inc
cmpsl
test
mov
push
sbb
cmc
pop
pop
es
gs
mov
in
push
incb
repz
mov
pop
cmp
test
clc
xchg
xorl
es
sub
loope
jo
es
outsb
mov
push
and
sbb
bound
hlt
or
dec
jle
add
mov
cwtl
push
inc
flds
xor
and
arpl
pop
jnp
lods
and
mov
and
ja
pop
push
or
pop
push
jb
jle
pop
pusha
fldl
std
fistpll
scas
rcl
mov
das
pop
insb
jne
dec
add
cmp
xchg
mov
movsb
add
outsb
and
clc
rcll
data16
mov
cli
int3
fiaddl
shr
sub
cmp
pop
cmp
fsubl
stc
mov
insb
push
or
and
or
cmp
iret
loop
adc
ss
data16
rclb
fs
pop
mov
mov
and
int3
jne
stos
outsb
mov
jo
lret
repz
shlb
and
xchg
cmc
rdmsr
and
lods
ljmp
lret
inc
sbb
insb
add
xlat
jge
dec
adc
jle
cmp
mov
js
cmp
outsb
add
mov
mov
jb
pusha
push
mov
dec
mov
cwtl
jg
daa
lods
shlb
pop
xchg
sub
sbbb
stos
lods
mov
jmp
loopne
mov
nop
mov
pop
outsb
push
pop
jno
or
lcall
jg
jne
fistpl
or
mov
fs
jne
jge
xchg
mov
pop
rorl
xchg
pop
mov
xor
fadd
xorl
sub
adc
hlt
jae
leave
les
int
jmp
dec
lcall
idivb
mov
ficoml
popa
cli
fistl
mov
xchg
add
mov
mov
testl
out
fimull
sarb
hlt
iret
cmp
and
aaa
inc
mov
and
rclb
lods
push
mov
iret
arpl
out
pop
loope
add
xchg
xor
int3
cwtl
ljmp
divb
daa
adc
cmpl
addr16
ss
or
aas
xchg
out
jl
sbb
cmpsb
or
aaa
inc
sbb
dec
shlb
add
movsb
lcall
addr16
pop
ds
pop
xchg
xor
test
push
mov
jp
enter
xchg
lods
inc
sbb
fbld
mov
xchg
test
in
cmpsb
jae
int
mov
hlt
out
adc
mov
or
daa
mov
mov
rcll
xorl
dec
ss
xchg
add
adc
dec
and
dec
or
xor
add
data16
add
mov
rcrl
mov
into
inc
mov
sbb
mov
out
jb
and
lods
test
popf
xor
pusha
filds
push
lret
cli
jecxz
mov
dec
int
cmp
cmp
test
ljmp
ror
mov
fmuls
and
fisubs
mov
cld
in
xchg
lea
sbb
out
int3
fistl
sahf
sub
aad
loopne
fstps
inc
jb
sub
cmpsb
jns
xchg
repnz
sarb
leave
xor
lahf
adc
push
stos
std
jne
fstpt
cmp
push
add
xor
test
jp
push
lret
sti
nop
ret
jecxz
sub
fildll
dec
dec
mov
cld
es
pushaw
int3
insl
icebp
sbbb
pop
pop
bound
jb
jae
pop
scas
jle
in
psrlq
xchg
aaa
sar
fistpll
jle
sahf
jmp
in
pop
hlt
dec
subl
push
stos
movaps
dec
lock
xor
outsl
xchg
jne
xchg
inc
mov
ret
and
loop
xchg
aam
ljmp
iret
mull
or
pop
cmp
mov
mov
pop
cmp
arpl
outsl
mov
les
decl
test
jg
test
push
sahf
aaa
divl
xor
mov
xchg
aam
sbb
push
jecxz
in
and
push
sub
xor
inc
imul
mov
movsl
push
ds
pop
ds
mov
or
cmp
aaa
push
jl
nop
out
jno
pop
and
js
dec
test
add
pushf
cld
call
cmp
popf
and
not
mov
gs
dec
test
inc
mov
xchg
aaa
or
pop
movsb
push
or
mov
mov
push
outsl
jbe
add
or
repnz
adc
das
add
sub
mov
lcall
int3
xor
insb
xor
fnstsw
mov
mov
lcall
jge
aaa
out
ja
loope
cmp
dec
iret
push
dec
addr16
cli
scas
cmc
xor
pushl
dec
popa
sub
into
xchg
mov
fildll
dec
inc
mov
mov
inc
sahf
mov
adc
cmp
mov
pop
mov
lea
mov
iret
sub
fnstcw
xchg
scas
xchg
fisubrl
adc
arpl
adc
shlb
fnstcw
mov
xor
cmp
adc
pusha
push
mov
out
int
pop
cmp
inc
push
leave
adc
push
insb
jge
sub
and
clc
xchg
lret
out
mov
mov
dec
notb
pop
add
and
int3
ss
xor
call
rcr
push
mov
sahf
scas
mov
pusha
test
in
out
mov
adc
gs
sti
popf
lea
or
xor
push
je
mov
stos
cmp
cmc
rcr
outsb
add
into
stos
lock
scas
je
int3
xchg
jns
stc
jge
movsb
nop
js
mov
push
dec
add
cmp
das
add
cmp
mov
sub
sbb
sbb
subl
pop
and
int
add
stos
subl
jb
pop
sbb
aam
sbb
lahf
mov
lahf
pusha
and
pop
or
fisttpl
iret
jne
out
into
jnp
roll
int3
popa
xor
outsl
shlb
push
ret
outsb
mov
rcl
push
aad
decl
arpl
aam
sahf
outsl
test
fs
ljmp
inc
js
mov
adc
fwait
or
xchg
mov
test
fstpt
mov
lock
repz
leave
imul
jg
fisubrs
mov
push
adc
mov
icebp
pusha
ss
inc
insb
shl
cmp
aaa
adc
mov
cmpsl
icebp
xor
nop
and
in
stc
push
xchg
adc
jmp
or
cs
xor
jb
pop
divb
cmp
notb
mov
mov
sub
jno
push
ret
movsl
xor
inc
dec
xchg
imul
jne
and
mov
xchg
lahf
scas
cmpsl
xchg
jl
xor
push
add
push
xchg
idiv
fdivs
xor
test
jnp
push
xchg
fstpl
cmp
mov
cld
pop
lret
enter
inc
add
sub
lods
popa
stc
imul
mov
dec
ja
aaa
pop
sub
insl
add
adc
adc
stc
loopne
jno
xlat
fldcw
dec
pop
xchg
pop
out
shlb
fidivrl
out
int3
scas
es
add
shrb
sbb
inc
mov
not
test
daa
test
idivb
ds
insb
cmpsb
sub
push
jb
add
orb
mov
decl
pusha
xchg
mov
lcall
popa
sub
mov
outsl
mov
dec
xchg
mov
dec
inc
test
ljmp
push
dec
jmp
or
or
shll
jmp
test
jns
mov
in
mov
loope
rorb
push
or
aad
sti
xor
lea
outsl
dec
mov
lods
dec
popf
insl
mov
insb
lahf
jp
mov
inc
popf
aad
sbb
mov
dec
cmp
mov
mov
pop
lcall
mov
push
in
cmp
adc
cmp
cmpsb
push
imul
lahf
sbbl
inc
in
mov
andnps
pop
mov
bound
out
sub
stos
xchg
les
sbb
adc
sub
test
gs
dec
imul
insb
sti
repnz
xor
pop
rcr
adc
lahf
lahf
rcrb
mov
adc
ret
mov
js
cs
push
aad
int
adc
cmp
dec
push
pop
scas
pop
jmp
mov
lock
push
jo
ror
outsb
jle
add
pop
xchg
popa
fildll
jmp
sbb
pop
push
mov
lods
and
aas
and
cmpsb
shl
and
in
sarl
and
cmp
xor
add
jg
mov
add
pop
loop
pop
sbb
pop
xchg
daa
leave
rcrl
add
sub
lods
ja
xchg
divl
incl
or
mov
sbb
mov
ja
xor
or
mov
inc
ret
fcomip
jae
xchg
sub
sti
mov
adc
push
sbb
mov
scas
lods
sbb
loopne
mov
cmp
and
test
stos
xchg
dec
xlat
or
push
dec
dec
xorb
daa
xchg
pop
in
cltd
daa
cmc
adc
popa
cli
in
xchg
adc
aaa
jb
cmpsb
test
js
mov
add
scas
inc
or
xor
das
pop
fwait
test
out
sbb
mov
mov
xchg
aad
jmp
sbb
fs
sti
adc
jl
gs
push
sarb
inc
push
push
pop
std
adc
scas
mov
xchg
xor
xchg
push
lods
imul
loop
mov
xchg
popf
fs
cli
loope
push
lahf
pushf
pop
ljmp
and
ja
push
xor
pop
push
add
jne
sub
lds
ficomps
xor
xor
insb
cwtl
add
scas
out
push
cmpsl
rcrl
and
jo
mov
mov
xor
out
mov
push
mov
inc
xor
sarl
pop
sub
fisubl
push
mov
fists
add
dec
out
mov
fstpl
jge
mov
je
jae
movsl
and
leave
lds
cmp
loop
mov
sbb
sub
cli
lret
sbb
clc
icebp
cmpsb
lock
divl
lret
dec
and
push
cmp
mov
jo
mov
cltd
cs
xor
or
enter
mov
test
or
push
jl
mov
sub
stos
ja
cmc
sbb
ds
test
sbbb
ja
jmp
push
adc
fdivrp
sbb
jb
cmp
scas
adc
mov
sub
adc
int3
shll
adc
dec
stc
insl
rcll
mov
in
or
repnz
push
xor
addb
outsb
jl
pop
adc
in
and
sar
and
je
xor
cmc
movsb
fsubr
test
cmpsb
loopne
cmp
in
mov
mull
adc
fbld
outsb
dec
cmpsb
cmp
shrl
dec
add
gs
push
in
scas
push
jno
push
jns
sbb
sbb
vpsubsb
in
cmp
cmp
and
clc
test
and
jae
pop
ror
popf
lods
xchg
pop
lods
ficomps
mov
dec
stos
dec
jno
inc
pop
and
cmp
cmp
sarl
jp
jns
push
lcall
and
dec
sbb
xchg
sbb
push
push
lock
dec
xchg
inc
xor
sbb
cs
xchg
rol
nop
adcl
and
mov
mov
loop
cmc
sub
int3
movsb
xchg
fcmovne
jg
cmpsl
add
mov
cmc
in
cli
inc
mov
popa
jecxz
clc
fsubs
pop
push
xchg
enter
add
mov
shr
fs
loopne
mov
and
shll
xor
subb
icebp
push
cmpsb
dec
out
leave
out
leave
cli
push
imul
pusha
pop
mull
jl
fbstp
push
testl
xor
dec
test
and
testb
sti
ds
cmp
mov
popa
jle
jmp
je
add
pop
jg
movsb
sbb
dec
inc
cmp
xchg
in
aad
outsb
xchg
mov
rcl
fsub
es
bound
push
fcmove
std
sub
orb
or
jl
adc
push
jecxz
sub
adc
mov
mov
pop
mov
pop
movsl
mov
lret
ja
imul
out
lcall
popa
jae
lods
fsubs
rcrl
or
xlat
mov
popa
and
push
xor
fs
addb
ss
and
push
jge
jnp
jp
xor
out
lahf
cmp
icebp
sahf
dec
cmpsl
adc
inc
push
inc
push
mov
xor
stos
sub
mov
aas
ljmp
adc
lea
arpl
inc
imull
inc
bound
not
sbb
dec
inc
out
pop
add
and
and
sub
jg
xor
repnz
sub
xor
mov
mov
pop
pop
adc
xor
leave
cwtl
fdivl
or
hlt
dec
pop
dec
inc
leave
dec
sti
dec
into
sbb
out
cwtl
jo
fmul
push
data16
push
inc
push
hlt
push
into
outsb
xchg
xchg
sarl
leave
adc
ja
lret
dec
mov
out
je
sbb
cmpb
mov
dec
pop
nop
test
or
mov
and
dec
stos
lahf
sahf
std
repnz
fstpt
or
popa
push
imul
call
mov
sub
fmulp
shl
sub
sub
or
lahf
sub
pop
dec
cwtl
movsb
mov
movsl
mov
and
inc
fdivrl
cmpsl
cmp
add
mov
dec
clc
out
test
pop
mov
dec
ret
adc
mov
xor
xor
mov
pop
mov
iret
or
fcmovnu
lret
cmp
inc
outsb
sub
jbe
jp
lea
jns
or
and
es
xchg
loop
lret
stc
popf
dec
xchg
mov
leave
es
cmp
popa
cwtl
loop
les
incl
call
mov
loope
lods
push
loope
xlat
movsb
arpl
and
xor
mov
xchg
sti
lcall
lahf
add
mov
mov
sbb
adc
arpl
test
mov
cmp
adc
push
or
mov
loope
andb
push
push
dec
scas
jp
mov
das
gs
fsubr
stc
ror
call
mov
jecxz
adc
add
shll
cmpb
in
dec
adc
sbb
mov
fs
repz
cmp
aam
hlt
out
loopne
or
or
subb
dec
mov
inc
ja
int
imul
xor
pop
mov
cmpsb
test
testb
xor
bound
jmp
out
inc
dec
and
ljmp
pop
xchg
inc
xor
out
mov
adc
cmpsl
out
or
mov
aaa
dec
sbb
push
std
outsl
jge
movsl
jmp
cmp
push
testl
fcomp
sub
dec
and
repz
xchg
sbb
sub
fld
or
ret
sbb
push
sbb
push
cltd
enter
shl
push
aaa
xchg
insl
push
mov
push
cli
aas
dec
sub
pop
add
mov
icebp
mov
outsb
movsb
movsl
les
decb
fs
int3
movsl
sub
jmp
out
fs
mov
sub
cmp
out
lret
add
stos
cmpsl
test
mov
push
pushf
scas
xlat
mov
bound
mov
pop
scas
cmpsl
mov
push
sti
dec
ror
cli
shl
xchg
add
shrb
sub
xor
push
ret
or
dec
push
mov
fnstenv
into
xchg
out
shl
or
cmp
pop
mov
clc
sbb
mov
xchg
pop
or
mov
das
stos
mov
inc
xor
test
je
pop
jmp
testb
mov
fwait
dec
xor
fcompl
pop
xor
cmp
stos
mov
stos
jno
pop
subl
cmp
dec
inc
push
jl
test
push
add
push
stc
jnp
xor
sbb
jno
repnz
pop
sub
mov
xor
daa
clc
mov
xchg
jb
mov
out
aad
xchg
mov
fcmovnbe
in
loop
xor
inc
xchg
or
fwait
imul
lret
aas
bound
add
xchg
stc
jp
push
jbe
cwtl
cmc
mov
negb
xor
adc
adc
jl
sub
js
das
sbb
mov
mov
xor
dec
or
inc
mov
inc
push
aas
sub
insb
pop
subl
cltd
popf
pop
loope
ret
cli
mov
scas
xor
push
mov
push
xchg
fmull
cmp
stc
and
adc
movb
subb
inc
ds
je,pt
push
loop
sbb
xor
into
jo
mov
hlt
cmc
and
add
lods
pop
out
push
jno
mov
mov
cli
negb
jmp
mov
lcall
lret
mov
cld
cs
xor
adc
flds
mulb
lods
leave
jns
sahf
loop
mov
ljmp
sub
movsb
sub
push
std
in
pop
xor
jnp
push
mov
mov
shlb
xor
addr16
cmp
scas
gs
dec
push
pop
mov
sbb
adc
stos
rdtsc
jg
and
repz
jne
rorb
mov
scas
gs
xchg
movsl
mov
lods
push
inc
data16
pop
xor
sbb
or
cmc
cld
add
iret
mull
ret
xor
jg
lret
cmp
hlt
cmp
daa
jbe
cwtl
cmpsl
sub
fdivrl
aaa
xor
outsb
jle
dec
push
sub
nop
insl
outsb
js
roll
xchg
loopne
repz
xchg
cmp
lock
daa
sub
xchg
addr16
jns
cld
loop
arpl
imul
or
sti
mov
jno
dec
pmaxsw
xor
mov
inc
xor
xor
mov
in
mov
inc
adc
mov
cmp
ror
jp
pusha
push
mov
xor
lahf
push
hlt
fs
bnd
mov
mov
inc
in
ret
xchg
mov
jmp
jae
insb
loop
adc
jno
pushf
sti
sub
sti
pushl
pop
popf
loope
push
mov
out
mov
mov
movsl
dec
rcl
cs
scas
and
inc
mov
add
push
add
dec
adc
lods
cs
nop
faddl
lret
pop
mov
add
fistpll
stc
inc
push
pop
fnstsw
or
jmp
call
cmp
mov
lret
mov
out
test
jnp
cmp
icebp
aas
pop
jnp
xchg
mov
fucomip
xor
clc
cmpsl
mov
popa
fdivrs
xchg
cli
or
stos
inc
gs
jo
ljmp
push
cli
pop
stos
push
sub
dec
mov
or
inc
adc
data16
pop
stc
fwait
jp
sbb
hlt
ret
mov
in
std
mov
xchg
jl
mov
ret
aam
push
inc
cmp
mull
xchg
mov
sahf
fbld
xlat
push
and
xchg
mov
call
add
xchg
in
movups
push
popa
out
mov
cmp
flds
fsubr
mov
mov
iret
dec
xor
mov
mov
outsb
mov
xchg
test
aaa
daa
jo
sub
fldl
les
dec
jmp
jmp
dec
jb
jns
nop
sub
inc
and
idivl
subb
bound
inc
mov
bound
daa
mov
popf
loop
sbb
mov
adc
inc
lahf
mov
pop
xor
jnp
ret
mov
cmp
scas
or
cmp
mov
xrelease
pop
out
sahf
cmp
mov
shr
ja
adc
iret
pop
add
sbbl
xchg
dec
add
pop
lea
rcl
add
leave
mov
pop
pusha
repz
adc
mov
ja
ds
and
das
xor
add
xor
jp
movb
mov
ret
pop
mov
xchg
insl
or
test
mov
and
push
movsl
jl
loop
xchg
lret
dec
int3
sbb
mov
clc
mov
jne
cltd
mov
mov
enter
outsb
outsl
xchg
pop
add
lcall
shll
outsb
ret
out
enter
jge
sbb
imul
xor
adc
mov
stc
ljmp
call
lcall
popa
inc
xor
popa
jno
gs
and
in
add
jp
xlat
sbb
sub
xchg
in
dec
jnp
cmpsb
iret
das
out
cld
jnp
cwtl
or
dec
aad
outsl
mov
push
pop
jo
shl
and
lret
sub
cltd
inc
inc
mov
repnz
clc
cmc
dec
adc
lret
flds
mov
je
in
repnz
ja
mov
push
sahf
cmp
out
into
cmp
outsb
mov
add
int
insl
jge
cmpsl
jo
mov
in
sub
sbb
pop
mov
jbe
sahf
xchg
pushf
dec
gs
out
movsl
pop
mov
rorl
mov
cli
sub
push
fs
inc
add
pop
cltd
in
out
xor
dec
push
gs
inc
arpl
adc
scas
mov
sbb
roll
or
pop
fadds
and
daa
sub
mov
je
and
xor
stos
jo
faddp
aaa
lcall
dec
in
inc
jns
out
add
push
sbb
dec
mov
call
fildll
adc
stc
addr16
adc
mov
das
mov
mov
or
add
or
mov
sarl
aad
sbb
ja
mov
ret
xor
les
cmp
mov
add
mov
adc
outsl
std
xchg
add
sub
jmp
xchg
mov
rcl
out
sbb
data16
mov
sub
inc
das
mov
aas
mov
xor
cmpsl
inc
push
insl
imul
dec
pop
jno
scas
scas
sbb
pop
and
jp
mov
mov
lcall
scas
sti
adc
adc
lods
xor
mov
xlat
sbb
int3
pop
mov
out
imul
rcll
stos
jl
sub
fsubs
push
cmpsl
mov
pop
lcall
inc
sbb
xchg
stos
push
es
out
out
xor
mov
inc
es
push
loopne
out
fildl
sysexit
imul
es
mov
sub
xor
repz
sub
xor
mov
jo
or
mov
andb
cmc
xchg
jne
sbb
in
int
mov
cli
in
adc
add
rcl
ret
mov
into
loopne
adcb
sub
xchg
mov
mov
repnz
movsb
out
mov
add
imul
sar
dec
in
fiadds
or
sub
push
nop
test
pop
cmp
adc
stc
or
sub
or
test
mov
enter
dec
push
andb
sbb
fs
sbb
arpl
mov
stc
inc
mov
push
ds
out
mov
popf
fwait
jp
les
nop
xchg
push
pop
mov
xchg
movsl
and
add
or
sahf
push
mov
pop
insb
mov
outsl
xchg
cli
push
inc
inc
cmp
sub
subl
dec
push
fsubrs
sarb
push
lods
pop
insb
cmp
xor
cmpsb
lods
in
jo
aad
stc
mov
jbe
jecxz
sahf
xchg
sub
decl
dec
xchg
xor
and
and
orl
lret
push
pop
pop
dec
mov
fdivrp
mov
dec
mov
jo
cmp
cmp
cltd
mov
xor
pop
jp
inc
add
jbe
sub
mov
es
notb
xor
subb
xor
ljmp
fwait
es
cs
shrl
jae
cmp
sub
mov
mov
or
push
pop
in
mov
pop
daa
lcall
pop
int
decb
pushf
in
push
aaa
pushf
ljmp
push
pop
jno
pushf
ja
imul
ljmp
sbb
es
inc
dec
mov
mov
imul
xchg
pop
xchg
add
mov
and
and
inc
fwait
add
out
jb
or
push
mov
nop
aam
sub
vmread
mov
push
add
ss
jo
mov
pop
jb
ret
sub
lret
fucomip
incl
xor
mov
lock
adc
inc
gs
clc
mov
add
mov
call
jl
push
lds
int
js
dec
out
push
jb
push
scas
mov
jbe
mov
pop
xor
sub
cmpsb
mov
or
xchg
sbb
push
push
and
mov
pop
mov
add
or
mov
and
cld
mov
adcl
test
hlt
stc
cltd
cmp
inc
mov
push
jmp
or
cmp
aas
inc
or
mov
lret
sbbb
or
mov
pop
cmc
jmp
bound
mov
cs
jbe
mov
and
adc
call
jb
or
gs
and
inc
add
jnp
inc
mov
lahf
insl
mov
in
pop
pop
pop
pop
imul
cmc
fcmovnbe
dec
push
push
cmp
shrb
jno
add
xchg
push
imul
es
cmp
lods
lahf
jl
cli
pop
decl
cmpsl
adc
xchg
sub
push
mov
sahf
dec
adc
inc
inc
addr16
sarl
pop
xor
or
test
mov
lds
jno
or
sbb
inc
das
das
aam
rcl
das
mov
jae
lahf
push
out
mov
cmp
sbb
mov
dec
cmp
xchg
and
jp
xchg
add
call
in
push
sbb
hlt
adc
mov
loope
inc
cmp
scas
mov
push
cwtl
push
push
add
jns
mov
mov
ret
mov
jnp
add
pop
clc
push
out
lds
test
xor
lds
adc
add
or
leave
lahf
push
and
jle
out
movsl
lret
and
shll
jge
cmc
cmp
mov
hlt
cmp
dec
mov
rcll
sub
or
rclb
push
test
dec
fbstp
stos
sar
pop
inc
aas
adc
sub
mov
in
dec
cwtl
test
push
mov
push
jecxz
cmpsb
mov
enter
cmp
insb
jo
dec
mov
int
xor
cs
adc
mov
mov
adc
lods
or
lahf
rcrw
or
pusha
ljmp
mov
bnd
mov
mov
mov
shl
inc
call
fwait
out
mov
jno
fs
int
dec
std
pop
mov
aas
xor
or
and
aam
xchg
sbb
stos
dec
cmp
addr16
rcl
cmp
aas
cld
push
adc
aam
pop
mov
push
jb
adc
negb
jns
or
loopne
mov
outsb
insl
jle
add
cmp
mov
sub
fidivrl
enter
sub
inc
in
jg
mov
arpl
push
stos
imul
test
mov
dec
lcall
aad
daa
mov
cmp
pop
repnz
fnstsw
pop
adc
jno
mov
shlb
clc
cmpsl
pop
stc
dec
js
sbb
ss
fdivrl
aam
lea
push
pop
lods
adcl
push
push
adc
xchg
out
or
and
mov
loop
mov
and
xor
mov
xchg
pop
mov
ss
ffreep
jnp
cmpsb
jecxz
or
add
aam
scas
jo
jl
aas
shll
pop
cmp
pop
mov
mov
subl
repnz
mov
xchg
mov
cmc
test
scas
cmpb
imul
aad
fwait
imul
mov
jg
pop
xlat
ljmp
xor
pop
mov
das
out
xor
xchg
mov
or
stos
sub
fsubl
sbb
xlat
add
adc
dec
dec
in
insb
cs
fists
sbb
je
popf
into
lahf
push
sub
mov
stos
mov
repz
xchg
jmp
sub
sub
lods
fstpl
stos
stos
xchg
rcrb
mov
cwtl
lods
sbb
jmp
icebp
lods
xchg
popa
test
xchg
movb
and
lcall
push
cmpb
jno
lea
mov
fldcw
insl
sbb
les
lret
xchg
test
ljmp
sub
lods
pop
cli
test
mov
stc
mov
mov
scas
pushf
adc
jmp
fdivrl
les
pop
adcl
push
sti
adc
negl
in
xor
stc
xchg
jmp
repnz
aaa
jb
cltd
dec
adc
mov
lret
int
cmp
lods
addl
add
mov
mov
jb
sub
pop
addr16
mov
inc
dec
dec
ss
mov
jne
ret
fnsave
and
mov
add
lcall
jbe
adc
lods
lea
push
ss
in
leave
jl
insb
rcrb
aad
fidivrs
or
adc
xor
in
hlt
negl
sbb
xor
in
inc
fsts
xor
daa
aam
scas
jecxz
cld
scas
push
scas
fistl
pop
pop
sub
in
and
shrb
xor
mov
push
dec
and
mov
dec
imul
int3
push
cmp
movsl
push
push
mov
sub
sti
sbb
lods
jb
iret
add
mov
call
inc
das
pushf
outsl
cwtl
add
pop
call
loopne
repnz
add
push
mov
lcall
mov
mov
xor
test
xchg
xchg
daa
test
or
insl
mov
out
push
mov
inc
and
lock
jno
or
test
pop
jle
jb
or
std
adc
into
js
movsb
xor
mov
pop
pop
or
pop
push
dec
sarb
push
sub
movsb
and
mov
sub
mov
ja
cmpb
rcrl
and
pavgb
es
sub
sub
mov
lret
cltd
sti
ljmp
or
inc
mov
pop
sub
adc
shrl
jb
dec
pusha
out
int3
adc
out
popf
push
and
loope
jecxz
mov
leave
dec
jbe
adc
test
xchg
fwait
jb
push
cld
sbb
adcl
and
inc
jl
push
fsubrl
daa
mov
cmp
dec
dec
iret
lahf
push
scas
or
shll
lret
loop
pop
push
xor
xchg
cmp
aaa
or
popf
popa
shl
lret
stc
push
insl
cmpsb
js
mov
adc
in
mov
xor
mov
xor
outsb
shr
stos
pusha
jle
outsb
pushf
xchg
xchg
xchg
mov
lea
sub
cmp
test
push
repz
inc
pusha
add
add
adc
jmp
jecxz
filds
sahf
dec
shll
movsb
lods
mov
push
in
sbb
add
or
stos
ljmp
inc
xor
add
sub
push
lret
add
repz
popf
stos
push
bound
jge
xchg
jmp
je
movaps
cli
push
jns
js
push
mov
adc
jae
lahf
and
inc
pusha
dec
and
inc
popa
xlat
jae
adc
cmc
mov
mov
cmp
or
fisttpl
shll
mov
pop
sbb
test
jnp
out
pop
and
adc
sbb
and
cmpsb
rolb
test
fcmovnu
mov
movsl
sbb
cmpsl
jl
fisttps
subl
into
mov
outsb
out
ret
pop
mov
mov
cmp
inc
pushf
lret
fsubrl
mov
dec
jle
dec
cmpsl
test
mov
xor
mov
loopne
leave
rolb
out
pop
movsl
aaa
pop
or
mov
into
adc
mov
push
aam
imul
fcompl
aas
lcall
mov
pop
and
fldenv
inc
inc
mov
cmp
pop
test
dec
mov
out
xchg
dec
sbb
xor
add
jno
sbb
mov
jae
inc
push
or
inc
outsl
push
out
jbe
lahf
add
dec
fmuls
fsubs
mov
test
rcll
andb
das
lds
jae
sar
pop
sahf
in
sbb
ss
or
in
aas
or
mov
imul
sub
out
xchg
cmp
inc
call
rcl
test
out
mov
pop
test
mov
fdivl
iret
and
js
add
in
int
test
and
nop
gs
and
pop
lcall
mov
stos
cmp
imul
inc
popf
sahf
int
repz
or
mov
in
out
jnp
push
inc
cmp
das
pop
cli
cmp
cmpsl
ljmp
jns
xchg
jae
movsl
cmp
jg
mov
mov
fwait
ja
jb
out
push
dec
jl
push
dec
sahf
pop
push
int3
repnz
cli
jp
ljmp
ret
sbb
mov
push
sub
dec
adc
mov
rcll
mov
jne
pop
lea
aad
out
xchg
pop
push
xor
sbb
xchg
filds
testl
std
rol
or
shll
xchg
out
movhps
jae
popf
mov
cmp
mov
test
dec
test
test
lret
pop
ja
push
mov
and
gs
xchg
ret
push
lahf
sbb
nop
andb
jecxz
pop
jo
jge
cmp
fnstcw
movsb
jne
out
call
loope
sub
adc
outsb
dec
add
lds
lea
sub
jle
cmp
inc
pop
out
mov
lahf
jnp
push
ret
mov
push
dec
nop
add
dec
or
cwtl
mov
xor
inc
fwait
mull
adc
add
dec
mov
push
inc
out
out
adc
insl
cltd
dec
xchg
mov
cmc
bnd
xchg
pop
jl
sarb
sub
sbb
inc
scas
push
jae
mov
sbb
in
jne
movsl
pop
in
or
jmp
leave
dec
push
pop
popa
bound
loop
xor
xchg
icebp
pusha
sub
sbb
movsl
ja
lret
jmp
xchg
sbb
or
mov
dec
nop
hlt
pop
push
pop
add
cltd
mov
lods
push
test
test
mov
cld
xor
push
imul
or
movsb
filds
je
inc
sbb
fsubs
add
push
xchg
fs
jne
les
ficoml
sbb
leave
out
pusha
out
push
in
popf
scas
fdivrs
mov
sub
lods
sbb
movsl
insb
outsl
iret
xsha256
cmpsb
xchg
add
sub
push
xchg
sbbb
jb
shll
shlb
cmp
icebp
fs
test
mov
jmp
lods
jg
les
jnp
mov
movb
lret
scas
mov
push
aaa
pop
popf
fnsave
cwtl
stos
test
sbb
leave
and
mov
fnstsw
push
mov
ljmp
mov
push
sub
dec
and
adc
pop
xchg
stc
jle
dec
mov
cmp
loopne
mov
xor
enter
sarb
adc
adc
ss
mov
adc
mov
jo
push
xor
inc
or
cmpsl
inc
sbb
aad
mov
mov
cld
jns
outsb
push
inc
fcmovne
or
test
mov
movsb
data16
mov
cmp
pop
sbb
mov
inc
push
mov
pop
add
sbb
xchg
xchg
jp
lret
cwtl
push
cmpsl
aad
ljmp
jmp
dec
clc
jp
fistl
pop
dec
lahf
cld
hlt
lods
fidivrl
in
lds
das
dec
dec
mov
push
mov
adc
test
gs
jno
and
mov
pop
xchg
ud0
scas
outsl
mov
mov
fcompl
xor
pop
push
or
or
rolb
sub
push
loop
jne
loopne
aam
ljmp
dec
mov
fildll
mov
push
imul
std
test
test
gs
inc
pushf
push
pop
in
add
jbe
mov
mov
pop
test
add
jp
lret
lret
add
mov
dec
pop
outsl
in
cmp
and
sub
lods
push
aam
and
popf
fistpl
xchg
movsl
mov
mov
popa
pop
and
pop
test
rorl
sub
inc
popa
xchg
in
mov
add
cmp
cmp
bound
or
pop
xchg
mov
push
mov
xchg
fdivrl
mov
rcrl
cwtl
ss
xor
arpl
xor
sahf
loop
jge
pop
outsb
pop
xor
aas
subl
or
sub
dec
mov
sbb
stos
sbb
in
xor
jb
jbe
fildll
dec
cmp
xor
enter
stos
mov
push
cmp
mov
not
cmpsb
mov
insl
das
aas
jp
mov
repnz
into
or
sub
cmpsl
clc
push
fcmovnbe
mov
push
and
pusha
rolb
scas
sub
movsb
mov
inc
mov
adc
fwait
pop
push
fucomi
outsb
sub
rclb
jo
imul
ljmp
jge
int3
mov
add
sbb
adc
pushf
jge
push
aas
imul
pop
jg
out
ret
mov
xchg
mov
and
pop
popf
lods
ja
in
push
mov
inc
lret
mov
mov
addb
loopne
cmpsb
mov
ljmp
cmp
mov
mov
clc
hlt
roll
xor
jo
jmp
ja
cmp
xchg
or
movsl
sbb
mov
push
or
mov
arpl
daa
mov
sub
std
adc
adc
mov
int3
in
mov
push
mov
stc
push
iret
mov
dec
dec
lea
xchg
adc
and
mov
push
loop
add
lcall
aad
lock
xchg
fimull
mov
push
xor
in
decl
out
ljmp
mov
in
rclb
push
subl
fidivs
es
inc
sbb
or
in
loope
scas
xor
xchg
cs
nop
mov
mov
cmp
push
cli
push
nop
int3
ss
fldt
mov
sub
push
int
push
jb
xchg
call
arpl
adc
adc
lods
lods
in
mov
push
or
popf
pop
cmp
push
xchg
nop
sub
inc
gs
and
xchg
add
std
sub
inc
or
jmp
push
jl
mov
mov
inc
lret
sbb
xor
push
adc
inc
js
in
push
xor
dec
into
cli
jb
inc
and
jns
je
add
jae
nop
test
ss
lret
and
insb
sub
in
sub
mov
jo
mov
cmc
aas
cmp
addr16
sub
mov
lock
inc
mov
fnstcw
test
mov
pop
and
xor
ret
imul
pop
ficoml
test
ja
sahf
fsubrs
rcr
fstpt
scas
or
pop
mov
sbb
adc
cmpsb
or
jbe
mov
pop
scas
fsubrl
adc
sbb
jne
clc
and
or
push
xchg
pop
pop
movsb
xor
out
mov
insl
pop
shr
pop
or
mov
repz
loopne
mov
sahf
sahf
loopne
dec
lods
sub
cld
loopne
dec
fsubp
jns
scas
es
out
cmp
sub
push
jecxz
ret
pop
mov
outsb
ret
jbe
clc
mov
clc
add
pop
mov
pop
mov
jbe
xlat
roll
push
stos
rorb
movsl
shlb
leave
addr16
cld
jl
imul
fsubrs
lret
je
fwait
add
shlb
mov
ficoms
push
and
movsl
mov
fisttpll
into
and
cwtl
jmp
movsb
pop
push
cmp
stos
jno
sub
xor
dec
and
add
ds
mov
shlb
adc
xchg
xchg
and
add
xchg
jmp
fnstsw
mov
mov
sahf
pop
and
adcb
pop
mov
dec
sarb
and
js
inc
ja
pop
xor
jo
push
adc
pop
enter
xor
fisttps
into
add
fldl
je
aam
pop
push
iret
fildll
sub
jno
adc
xchg
adc
push
sbb
cmp
cli
test
stos
fsin
mov
push
enter
stc
xor
xchg
jecxz
test
stos
mov
cmp
out
mov
jmp
sbb
sti
int3
mov
insl
sbb
rclb
add
dec
aaa
stos
imul
push
or
or
mov
scas
rcrl
pop
testb
adc
scas
mov
loopne
inc
inc
shlb
add
rorb
push
mov
add
ljmp
cmp
mov
or
cltd
xchg
js
out
lahf
scas
cmovns
movsl
in
mov
mov
mov
lds
rolb
jecxz
add
movsl
ret
dec
scas
sub
lods
mov
jo
gs
inc
movl
enter
inc
std
inc
arpl
mov
sub
adc
sbb
out
das
cltd
push
fidivrl
push
jge
nop
dec
nop
xchg
push
jne
fs
bound
fnstenv
jne
inc
sub
aas
mov
or
xchg
sbb
push
aad
aas
xchg
dec
xchg
aas
inc
hlt
lret
add
shr
shrb
mov
bound
shll
insl
movsl
loopne,pn
pop
add
out
das
pop
popf
and
fisubrs
scas
addr16
hlt
xor
mov
iret
jge
push
stos
mov
mov
mov
jmp
in
mov
add
or
dec
mov
jge
mov
out
jecxz
dec
movb
int3
mov
daa
jl
xchg
push
pop
dec
jo
hlt
push
call
aas
in
bnd
xchg
sbb
outsl
std
sub
xchg
push
std
jne
pop
push
or
out
addr16
dec
cld
jno
adc
ss
inc
jb
adc
ficoml
jb
stos
inc
call
mov
fiadds
mov
js
mov
pop
dec
iret
outsl
xchg
push
sbb
mov
outsb
aad
arpl
or
mov
dec
add
inc
and
pushl
test
jnp
data16
mov
xchg
jno
jg
mov
sub
out
sbb
or
cmpsb
jno
or
idivb
adc
xchg
addb
inc
mov
jnp
cwtl
std
sub
dec
mov
inc
aaa
dec
mov
loop
sti
std
xchg
cmp
xor
push
mov
sub
ret
rcrb
inc
pop
or
cld
sbb
or
xor
sub
mov
pop
push
and
push
push
imul
mov
stos
push
bound
sahf
scas
mov
js
test
jge
arpl
insb
fcoms
repnz
mov
or
jecxz
sahf
movsl
push
in
inc
stos
push
lret
add
pop
faddl
mov
stc
sbb
nop
push
xchg
in
dec
mov
push
pop
inc
push
inc
xchg
xchg
adc
mov
mull
ss
outsb
add
movsl
push
jns
in
pop
imul
rcrl
xchg
stos
jle
shlb
cs
leave
adc
xor
pop
lcall
push
test
pop
sub
aam
pop
sarl
mov
add
scas
repnz
dec
aad
push
mov
cmp
xor
std
xor
jne
ss
imul
ljmp
fldenv
xor
mov
jno
mov
shll
mov
sub
lods
pop
imul
lods
pop
pop
cmpsb
in
jb
aas
mov
nop
fiaddl
les
xchg
aad
push
push
std
sub
sbb
test
enter
je
arpl
addr16
pusha
nop
imul
fs
sbb
jge
or
clc
popf
cmp
movups
daa
les
mov
mov
jle
jbe
test
add
push
loop
movsb
icebp
ror
shll
mov
mov
adc
adc
cli
xor
jo
add
ds
mov
lahf
iret
in
inc
icebp
pop
jbe
mov
jns
lods
cltd
push
push
test
inc
mov
sbb
fcomp
mov
int
addb
sub
push
and
pop
push
cmp
fs
fisubl
pop
and
sub
ljmp
fwait
or
dec
cmp
testb
fmull
bound
push
xor
fimuls
xchg
dec
or
out
sbb
jne
push
jne
out
adc
jge
mov
loop
or
gs
inc
jb
push
and
inc
leave
scas
orb
call
pop
test
out
jl
mov
cs
mov
cmpsl
jle
xchg
push
into
arpl
xorb
sub
inc
sbb
sbbl
out
jmp
int
push
jne
fistl
es
push
mov
xchg
pusha
out
dec
icebp
mov
adc
call
dec
jno
mov
fcoml
push
loope
push
cmpsl
dec
pop
push
cld
in
push
int3
mov
dec
sbb
fnsave
nop
pop
rcr
imul
jl
push
mov
add
xchg
sbb
movsl
lcall
pop
adc
push
cs
and
data16
int3
je
inc
jbe
sub
out
cmpsl
addb
or
scas
ds
mov
aas
lcall
fwait
ljmp
cmpsb
pop
and
sub
push
add
aaa
mov
dec
add
mov
imul
int3
decl
jge
dec
movsl
stos
loop
insb
sbb
jnp
pop
push
push
pop
orl
enter
imul
in
dec
cmp
dec
stos
arpl
outsb
lea
scas
jmp
iret
add
cli
ret
out
xchg
call
mov
call
or
pop
vfmaddsub213pd
inc
push
cmpsl
cli
xchg
pusha
inc
add
add
xlat
das
in
jo
popf
outsb
outsb
mov
aad
popf
xor
xorb
fildl
xchg
mov
addr16
aad
bound
fbstp
xchg
or
insl
imul
mov
and
dec
dec
xor
xchg
mov
adc
push
test
arpl
and
push
outsl
sbb
pop
cmp
jp
enter
xorl
dec
hlt
adc
add
mov
push
or
jae
roll
test
inc
sbb
jecxz
icebp
fidivrl
imul
aas
imul
jno
push
out
xlat
push
lods
in
dec
imul
inc
aaa
in
push
divl
add
jne
aas
xchg
xor
jns
cmpsl
cltd
mulb
int3
je
inc
mov
fwait
sbb
inc
sub
push
cmp
call
sbb
rorl
xchg
jmp
pop
rcl
lock
jo
xor
divl
cmp
dec
sub
call
repnz
cltd
dec
dec
dec
lahf
dec
icebp
loop
imul
addr16
pusha
in
imul
daa
fstl
in
cmp
push
iret
sarb
mov
push
hlt
js
movsb
ret
mov
nop
repz
jg
rorl
aad
imul
xchg
cmp
enter
jg
lea
test
repz
cli
je
inc
mov
repz
bound
dec
cmp
xor
outsb
push
jl
sbb
pop
out
loopne
inc
pop
addr16
movsb
std
push
clc
pop
sahf
int3
dec
lea
fwait
or
loope
xlat
push
adc
outsl
mov
mov
push
aam
jbe
cmp
fwait
jle
cmp
mov
sbb
sbb
sub
push
mov
inc
sub
xor
pop
cmp
push
xchg
test
dec
adc
xor
popa
cltd
out
int3
cmp
or
cwtl
adc
adc
pop
xchg
jae
or
loopne
xor
jbe
out
sub
sbb
scas
xor
cmp
xchg
lock
and
inc
test
xchg
loop
mov
imul
imul
int3
insb
ja
lods
jl
xor
out
xor
fs
out
adc
pop
outsb
xchg
sbb
jg
loopne
xchg
inc
and
rorb
add
dec
popa
jae
test
mov
xor
rcr
mov
pop
test
xchg
stos
and
jge
cld
or
test
test
mov
jmp
or
repz
mov
xor
int
stc
pushf
adc
lcall
xor
out
and
test
insl
sbb
mov
addl
xchg
rcrb
mov
outsl
ljmp
das
inc
push
mov
adc
add
and
xor
mov
jne
loopne
cmpsb
mov
push
pop
lock
shrb
jne
popa
pushf
dec
mov
jnp
xchg
jne
xorl
gs
mov
lock
decb
stos
pop
jb
rol
or
jle
cmp
sub
ret
mov
shr
loop
push
cwtl
hlt
ljmp
xchg
imul
nop
popa
sti
leave
xchg
mov
repnz
fcom
adc
jge
cmc
adc
fidivrs
sbb
leave
cmp
pcmpgtd
xchg
std
xchg
sub
popa
xchg
loop
adc
rcr
sub
jnp
icebp
in
sbb
dec
out
jo
mov
mov
mov
imul
mov
jle
push
mov
mov
xchg
adc
push
icebp
mov
loop
ffree
push
or
sub
push
jmp
insb
push
insl
insb
outsb
sarl
call
lds
jmp
and
fwait
scas
add
xchg
jge
cmp
cwtl
inc
mov
adc
xchg
push
in
and
mov
sbb
sbb
dec
jle
test
insb
mov
sub
push
jns
mov
out
mov
pop
push
mov
mov
adc
cli
cs
shlb
or
aad
mov
roll
jne
mov
add
mov
dec
mov
vmulps
jecxz
push
jns
cmp
mov
stos
test
outsb
add
ljmp
shl
call
mov
sbb
or
or
xchg
out
outsl
cltd
cmp
cmp
inc
aad
js
aad
mov
add
shrl
shrb
je
push
popa
idivb
pop
push
xor
jg
shrb
aas
xor
adc
push
xchg
ret
pop
jo
bound
daa
clc
push
test
in
xlat
push
sbb
sti
repnz
insl
inc
push
fs
notb
mov
xchg
mov
mov
sarb
cli
push
es
push
daa
das
sti
addr16
mov
inc
mov
xlat
inc
inc
outsb
jo
mov
push
in
push
push
mov
push
insb
adc
inc
pop
sahf
stc
cmp
lahf
inc
lds
mov
leave
fmull
neg
and
rcrl
inc
xchg
jo
cld
adc
iret
mov
jo
pop
leave
inc
xor
call
call
addl
mov
aas
insb
add
pop
ret
mov
cli
add
push
push
scas
mov
sbbb
cmp
mov
sbb
incb
xchg
cmp
xor
push
popa
das
push
loop
add
das
jb
fistps
js
dec
lahf
adc
cmp
cltd
cs
dec
and
les
inc
rclb
outsl
ficompl
inc
dec
ficoms
pusha
jbe
cli
lea
insb
dec
es
movsl
loopne
and
sti
popa
sarl
jb
aas
pop
push
inc
adc
popa
push
iret
xchg
mov
cmp
xor
xchg
aam
mov
test
sub
repnz
pop
push
xor
dec
jecxz
and
inc
aad
mov
arpl
clc
imul
idiv
dec
lods
or
push
aaa
xchg
mov
arpl
daa
stos
sarb
mov
and
or
shlb
cmp
adc
adc
test
pop
js
fisttps
aad
mov
hlt
push
mov
lret
pop
fnsave
sbb
jae
nop
incb
mov
pop
and
jnp
xchg
fsubr
divb
xchg
test
scas
mov
adc
js
sti
ret
daa
shlb
cmp
xor
scas
xchg
mov
dec
cmp
and
adc
add
mov
pop
pushf
push
pop
ficompl
hlt
inc
mov
jb
inc
xchg
dec
test
pop
push
adc
jb
insb
daa
sbb
out
adc
aaa
jbe
jmp
cwtl
inc
stc
faddp
pushf
cmp
scas
and
repz
lods
ret
cmp
mov
out
and
movsb
or
xchg
mov
push
divb
mov
jo
mov
inc
mov
dec
lcall
jae
out
mov
xchg
insb
dec
cmc
jecxz
xor
imul
test
add
jnp
insl
lahf
dec
mov
stc
jae
ds
in
in
mov
sbb
bound
ljmp
and
mov
test
jae
mov
int
outsb
cmp
xchg
push
adc
pushf
jmp
push
dec
jg
mov
or
xchg
repz
sti
pusha
add
dec
or
shll
jbe
fcmovnbe
mov
xlat
xchg
divb
xchg
xchg
movsb
mov
pop
pop
jge
ja
dec
jo
xchg
mov
cmp
sub
add
inc
fs
xchg
mov
dec
sub
xchg
fdivr
ds
inc
xor
ret
xor
shlb
imul
cltd
fdivl
xchg
int3
ret
std
bnd
mov
and
mov
ja
dec
jmp
sub
adc
xchg
and
imul
ljmp
xor
mov
aam
push
pushf
ss
xchg
jmp
nop
jno
sub
loopne
clc
push
or
add
pop
cmp
adc
xor
push
pusha
sub
push
clc
pop
push
fsubl
pop
ss
ds
pop
add
sbb
sbb
aad
orl
rcll
int
pop
adc
inc
jg
push
je
mov
dec
ljmp
std
push
push
addb
sub
adc
out
cld
lret
inc
call
jg
imul
bound
push
pushf
sahf
pop
popa
ficompl
jg
pop
test
and
cli
xchg
in
push
dec
test
or
push
jo,pt
out
pushf
push
jbe
add
fidivrs
dec
data16
mov
xchg
sbb
jnp
daa
and
adcl
call
add
ret
mov
mov
mov
adc
push
cmp
cmpl
xchg
mov
cli
gs
fdivrs
cmp
and
out
sub
pushl
inc
repnz
add
pop
dec
mov
pop
jae
dec
icebp
je
dec
ds
mov
lret
orl
nop
xchg
out
fildll
in
fwait
adc
xor
add
cmp
mov
in
push
xor
jmp
daa
jo
addb
rcrb
loope
cmp
lcall
xchg
lcall
mov
jno
inc
daa
je
iret
lcall
movsl
rolb
jnp
inc
icebp
pop
jp
mov
push
cmp
and
dec
les
scas
or
test
mov
inc
fimull
in
dec
test
pop
into
sub
arpl
in
mov
mov
rcrb
xchg
dec
arpl
pushf
sahf
loope
and
fisubl
xchg
mov
icebp
loop
xchg
inc
xchg
scas
shrl
stos
outsb
push
arpl
or
mov
jnp
dec
cs
std
aaa
shl
xor
loope
xor
sbb
fnstenv
lods
shlb
push
jb
or
jnp
sbb
test
push
jo
or
outsl
mov
fucom
and
aaa
lcall
fbstp
jl
cmp
mov
jp
adcb
fwait
mov
sahf
popa
mov
loope
filds
stc
xor
in
xchg
sbb
mov
mov
and
push
fidivrl
imul
xor
jne
les
pushf
test
sbb
aaa
test
dec
mov
mov
fwait
sarl
mov
and
sub
inc
test
movsl
or
cmp
cmpsl
inc
cmp
xor
dec
cmp
jne
loopne
jo
ficomps
fs
bnd
xorl
xor
insb
lock
pop
fists
xor
fnstcw
aaa
dec
scas
aad
imul
sub
sub
pop
sub
rcrl
xlat
shrb
call
push
and
testb
adc
fdivrl
add
nop
imul
sbb
insl
mov
pop
fists
cmp
or
in
inc
xor
mov
push
loope
dec
xchg
and
jne
mov
dec
adc
jecxz
add
xchg
mov
dec
inc
scas
js
inc
fsubl
jg,pn
xor
mov
lret
cmp
sub
ret
mov
add
lea
das
lds
ret
cmp
inc
jg
lahf
mov
mov
lret
shrb
notb
push
pop
cwtl
mov
lea
movsb
es
cmc
sbb
js
mov
sub
mov
dec
mov
ret
pop
cmp
mov
lret
mov
popl
dec
add
mov
pop
cmc
repz
int
movsb
sbb
cmpsb
add
pop
fists
in
cmpsb
sbb
mov
scas
cmp
filds
bound
jno
dec
fwait
mov
sbb
cmp
insb
pop
in
in
mov
movsb
adc
mov
dec
lret
adc
dec
and
repnz
push
dec
sub
adc
inc
iret
jns
mov
cmp
imul
mov
jle
mov
ljmp
dec
test
pop
ret
push
pop
mov
xchg
ja
dec
mov
xor
cmp
faddp
in
jge
pop
hlt
test
jb
pop
inc
jb
std
mov
sbb
sar
or
sbb
sbb
int3
mov
mov
xchg
lret
mov
mov
shrb
add
loop
xchg
inc
ret
jle
mov
inc
jp
pop
adcb
adc
lea
mov
pop
in
inc
movsb
or
jmp
cmp
fcoms
adc
mov
inc
mov
test
push
pop
rcl
fst
mov
jne
mov
dec
jp
shlb
adc
imul
inc
mov
aas
push
pop
xchg
jge
mov
cmp
cmpl
adc
jo
sarl
mov
lea
push
cwtl
movsl
jg
mov
inc
jp
push
mov
pop
aas
mov
sub
cwtl
data16
rdmsr
jge
push
adc
je
xchg
inc
out
pop
jo
inc
xor
ret
pop
adcl
sbb
mov
in
test
int3
add
xchg
or
sbb
mov
call
jp
sub
jbe
mov
mov
cmp
mov
mov
dec
scas
repz
shl
lds
mov
repz
in
xor
push
mov
stos
cmp
lahf
jb
paddusb
xchg
fs
jg
sub
push
dec
inc
push
aam
xchg
inc
scas
adc
xchg
push
dec
inc
sub
adc
xchg
or
std
popf
xor
dec
sub
hlt
repnz
in
scas
cmp
sub
in
mov
inc
mov
popf
push
push
jge
sub
xor
mov
lods
cltd
mov
mov
jbe
pop
or
imul
faddp
push
int
addl
inc
vmread
mov
add
icebp
je
hlt
in
inc
push
mov
out
ret
hlt
std
clc
xor
aas
sarb
rolb
and
jno
fisubl
in
dec
mov
rolb
aam
insb
les
popf
cmp
fcoml
or
lahf
call
into
and
dec
lahf
popa
or
aam
ljmp
xor
jnp
mov
gs
loopne
imul
popf
mov
or
mov
iret
jp
rol
aaa
test
int3
push
sub
mov
test
in
iret
dec
jns
cmp
ret
dec
inc
aam
adc
stc
pop
fsub
test
cs
cmp
inc
jmp
arpl
fldl
or
xor
xor
inc
out
fadds
dec
jne
dec
cmpsl
push
and
dec
fisubrs
fmull
leave
jnp
cmp
and
nop
movsb
ljmp
inc
das
dec
iret
add
shll
iret
lret
push
xchg
inc
and
sbbb
ja
aam
les
add
mov
dec
xchg
lret
xchg
mov
cmp
jbe
pop
sub
push
adc
in
and
push
sahf
cld
or
jns
loopne
sub
adc
ret
mov
adc
pop
hlt
inc
push
loop
cmp
push
xchg
sti
mov
dec
mov
push
jbe
and
pop
fdivr
jne
pop
repnz
jle
dec
cmc
xor
dec
cli
aad
add
mov
out
hlt
das
xchg
int3
push
jp
gs
adc
jo
jmp
and
stos
mov
dec
outsl
out
shl
xchg
xchg
pop
mov
es
sbb
mov
std
loope
sti
fadd
in
sbb
leave
movsl
addr16
popf
dec
adc
fisubrs
mov
pop
adc
sbb
movsb
rorb
jne
jnp
dec
pushf
rol
jae
pop
cmpsl
or
aaa
push
jne
es
addr16
out
fistpll
push
les
push
arpl
int3
pusha
mov
in
lcall
or
outsb
flds
jno
xchg
std
pop
mov
jmp
sarl
ror
inc
or
jle
cmp
ss
cmc
adc
out
mov
movq
fnsave
pop
sbb
sti
mov
test
and
jne
pop
push
aaa
xchg
sub
lahf
push
lcall
lahf
sub
pop
sbb
mov
and
sub
movsl
ficoml
shr
push
cmpsb
mov
dec
es
pop
inc
pop
test
ljmp
lods
jg
loop
cltd
mov
jae
and
es
in
lcall
jl
xchg
mov
stc
lret
sbb
test
adc
dec
dec
xor
cmpb
or
cmp
jl
les
adc
insb
jae
sti
xchg
xor
shl
in
les
imulb
scas
cld
add
cli
ret
in
aam
jge
pop
fs
inc
shr
arpl
nop
sub
jnp
push
pop
push
imul
testl
shrl
stos
idivl
divl
inc
add
fs
imul
or
mov
mov
push
xlat
xor
push
inc
test
pusha
fcompl
cltd
mov
and
push
jb
lret
jnp
rclb
bound
nop
into
shlb
ret
inc
ret
jmp
jae
jne
jmp
lods
dec
cmp
cltd
push
xchg
enter
fwait
lods
pop
sub
push
arpl
pop
jns
outsl
sub
and
jbe
or
lret
rolb
add
xchg
inc
mov
push
jno
xor
mov
into
bound
inc
sub
out
xchg
jns
pop
ss
fldenv
test
jae
iret
xchg
nop
cmp
xchg
subb
mov
cwtl
cmp
sbb
and
out
das
mov
ss
and
adc
in
hlt
clc
sbb
add
jns
inc
xor
mov
out
mov
xchg
fwait
insb
test
mov
xchg
jge
cmp
lds
ror
arpl
adc
js
add
pop
or
cmc
fstpl
int3
in
sbb
gs
dec
mov
mov
xor
aaa
jmp
push
mov
pop
add
cwtl
pop
jo
pop
pusha
testl
daa
jmp
in
or
push
outsl
out
and
mov
in
xor
cld
cmpsb
jge
sbb
pop
gs
in
scas
cmp
test
cld
jo
jno
test
dec
hlt
inc
xor
imul
fsub
dec
out
pop
sbb
into
push
adcb
cltd
subb
dec
jecxz
aad
push
mov
dec
pop
jmp
lret
bound
ljmp
sahf
loop
cmc
movsl
xchg
out
cmp
aas
aas
int
sbb
push
scas
xor
lahf
stos
cmc
xchg
call
dec
sbb
push
imul
stc
xchg
dec
add
daa
push
out
jne
xchg
mov
xchg
mov
scas
jb
pop
lods
icebp
mov
lods
insb
xchg
ss
movsl
mov
sub
in
loopne
pop
push
orl
adc
and
or
and
jecxz
dec
arpl
jns
push
movb
loopne
mov
and
rol
leave
mov
sub
adc
rclb
mov
jns
and
jp
lock
xchg
fwait
cmp
out
andl
jb
dec
jo
dec
adc
bound
lahf
divl
xchg
dec
aam
rcrl
sub
jb
xlat
push
lcall
cwtl
xor
clc
test
mov
not
cld
pop
sub
xlat
cmp
in
mov
testl
adc
movsb
inc
add
pop
fwait
and
push
xchg
add
scas
add
mov
bound
sub
das
jle
pop
js
xchg
inc
inc
in
push
imull
or
jns
shll
sbb
mov
hlt
clc
or
daa
inc
xchg
sub
dec
jno
adc
jle
mov
fwait
cltd
dec
push
fadds
add
inc
pop
xor
jg,pt
imul
aad
pushw
add
dec
dec
and
test
sbb
popa
sbb
adc
cld
mov
and
fwait
dec
xor
sbb
mov
movsl
jle
clc
xchg
xlat
cmpb
outsb
mov
shlb
divb
pusha
dec
popa
xor
es
jo
lds
insl
pusha
cmp
int3
ja
insl
adc
mov
xor
cmp
fdivl
jecxz
pop
loop
dec
jmp
stos
jg
jmp
cmp
push
fndisi(8087
bound
push
dec
sbb
inc
enter
pop
jp
jg
ljmp
std
dec
mov
mov
mov
pop
xor
rcll
loop
test
mov
cwtl
int3
sti
in
dec
arpl
mov
out
pop
dec
popa
xchg
cmovs
or
pusha
stc
outsl
sbb
out
dec
sbb
in
xchg
push
add
xlat
rorb
lods
or
mov
sub
pop
ljmp
adc
lock
mov
and
pop
div
mov
xor
and
leave
pop
andb
test
add
xchg
jl
lret
adc
int3
jmp
and
mov
mov
xor
fisubl
inc
jl
jg
stos
js
ror
xchg
stc
notb
shl
into
sahf
movsl
mov
jp
aas
out
pop
jno
sub
mov
jo
or
out
sbb
repnz
xor
sbb
loop
pushf
adc
dec
cmpsl
cmp
mov
lea
out
sub
sub
rolb
test
in
push
add
test
push
fbstp
or
and
movsb
pop
mov
pop
jmp
cmp
adc
sub
cmp
test
lahf
inc
push
movsb
push
jb
loop
mov
pop
out
test
xlat
cmp
in
cmpsb
push
mov
sti
or
xor
mov
imul
sub
and
mov
xor
ds
mov
jmp
xchg
jno
test
sarl
dec
fdivrs
std
cmc
out
stc
push
das
int3
lea
aas
dec
lea
xor
add
push
inc
xchg
mov
inc
out
nop
pop
jg
sti
push
xchg
inc
xchg
in
rorl
adc
imul
xlat
pop
cmp
dec
pop
push
out
in
out
add
add
pop
jge
dec
lock
pop
ds
notb
pop
sahf
mov
xor
bound
jmp
cld
and
test
cmp
mov
pusha
xchg
pushf
loope
xor
and
lods
sbb
or
and
scas
and
pushf
insb
cwtl
sub
leave
dec
inc
lods
pop
ret
push
push
insl
dec
jne
stos
push
enter
fisubs
lahf
jl
inc
mov
jne
inc
lret
xlat
cmpsb
test
imul
and
adc
mov
in
mov
mov
insl
dec
outsb
add
ja
dec
sbb
pop
fdivl
stos
bswap
jns
mov
aad
mov
mov
mov
ljmp
push
stos
xlat
sbb
hlt
mov
push
ror
insb
mov
nop
add
ja
and
mov
lret
add
idivb
pop
pop
repnz
cmc
push
sbb
inc
stos
ret
lods
add
push
subb
imul
subb
sub
sub
mov
outsl
adc
jg
stos
faddl
test
stos
lret
inc
dec
sub
movsl
mov
pusha
pop
xchg
xlat
shl
stc
test
jle
or
lock
push
jle
add
in
cltd
imul
pop
iret
mov
push
lea
nop
pop
xchg
mov
lcall
adc
sti
lahf
xchg
stc
nop
subl
mov
jnp
addr16
xchg
ret
lcall
mov
adc
je
and
mov
pop
jg
enter
mov
or
ja
mov
rclb
int3
cmpsb
pop
rdmsr
movsb
iret
lcall
mov
cld
and
xchg
pop
and
xorb
ds
cmp
movsl
mov
jo
xor
scas
aam
sbb
rcrb
inc
jge
add
cmp
xchg
adc
sti
loop
push
repnz
popf
js
ja
and
xor
fstpt
mov
movsb
jnp
push
mov
mov
pop
sbb
int3
mov
out
das
jl
inc
xor
push
jl
je
cmp
xor
xchg
hlt
mov
mov
mov
scas
pop
inc
iret
or
pop
xor
xchg
inc
aam
iret
push
nop
cmp
cwtl
shll
in
outsl
pop
sub
fnstcw
push
shr
adc
xchg
dec
cs
pop
rorb
out
sbb
push
cltd
inc
icebp
fldl
popa
iret
ret
xchg
mov
mov
mov
cmp
mov
dec
xor
adc
push
mov
aam
cmp
cld
scas
or
sahf
xchg
inc
sti
and
jg
mov
push
jmp
and
xchg
aad
pusha
mov
ret
or
jbe
push
mov
pop
inc
out
insb
arpl
mov
out
cmp
jge
adc
test
mov
xor
jae
pop
mov
nop
idiv
push
sub
and
mov
aad
and
or
mov
push
test
push
aam
lret
mov
enter
out
cli
into
aad
in
sbbl
jg
mov
fisubrs
out
adc
hlt
cmp
adc
dec
es
and
repnz
pop
inc
addr16
dec
insb
lahf
sti
lahf
or
into
pop
mov
xchg
mov
pop
xchg
cmp
aaa
les
push
pop
mov
movsl
mov
enter
inc
stos
icebp
jne
mov
fs
sti
inc
cmp
jns
or
jnp,pt
mov
inc
pushf
add
mov
jno
fcoms
mov
lock
jo
rolb
xchg
shrl
or
in
mov
in
loopne
mov
mov
fmuls
bound
jne
out
bound
mov
pusha
loop
add
icebp
orl
add
sub
inc
inc
push
ja
cmc
add
jae
daa
xor
jne
les
mov
addr16
mov
mov
test
cmp
test
xchg
ret
pop
sub
jle
xchg
sahf
pop
cmp
inc
fwait
mull
mov
jbe
loop
mov
push
sbb
cli
jmp
mov
xor
mov
mov
xchg
outsb
pushf
xor
xor
xlat
mov
and
jo
lret
loope
in
adc
cwtl
inc
aam
rorb
rcl
dec
out
repz
das
in
push
sbb
aaa
xchg
xor
xchg
pop
fcmovnbe
ret
insb
add
mov
push
repz
mov
fldcw
ss
fnstsw
or
inc
push
fs
adc
pusha
mov
add
xchg
scas
push
mov
pop
inc
inc
mov
jecxz
add
pop
jge
jb
es
lods
out
insb
in
mov
jae
andl
jmpw
clc
mov
sbb
rcrl
daa
xchg
inc
cmpsb
xchg
cmovnp
fimull
jbe
push
pop
movsb
fsubs
sub
pop
add
xchg
mov
lcall
adc
mov
cmp
je
push
mov
mov
stos
int3
sbb
pop
testb
mov
das
ficomps
cmpsb
lea
iret
adc
dec
icebp
fwait
out
aam
das
aas
mov
cmp
shlb
neg
cmpsl
add
out
lahf
lea
jae
xor
gs
pop
dec
sahf
ret
mov
mov
jge
mov
loope
sub
mov
aas
cmp
gs
jno
popf
xor
nop
push
adc
jecxz
jg
sarl
push
jge
pushf
xchg
jge
arpl
and
dec
sbb
js
cmc
mov
out
pushf
add
lret
aad
iret
inc
mov
loopne
lea
sub
out
pop
xor
cmovo
into
jl
jae
adc
lret
or
enter
stc
sbb
mov
add
lods
mov
push
pop
cld
push
mov
adcb
and
and
and
test
cmp
mov
sub
fsubs
jg
shl
imul
scas
ficomps
lods
xchg
sbb
inc
sub
pop
dec
push
fimull
out
data16
inc
je
mov
push
outsb
mov
mov
testb
enter
lret
cmpsw
push
lods
mov
iret
stc
lods
mov
cmp
lds
daa
mov
test
jl
test
xchg
mov
pop
xor
sub
mov
mov
mov
sbb
aad
hlt
insl
or
push
imul
lock
xor
mov
cwtl
jae
sub
mov
mov
out
cmp
ljmp
mov
and
decl
cmpsl
out
xor
mov
jae
test
lds
add
xchg
nop
ja
lret
call
mov
jmp
xor
push
sar
fs
sub
js
xor
or
pop
xchg
mov
pop
mov
das
test
int3
repz
pop
mov
mov
cmpsb
loope
cs
int
cli
nop
mov
dec
inc
mov
adc
sbb
repz
adc
add
fstpt
mov
lret
pop
rorb
lea
bound
jae
jne
sub
test
lods
mov
lcall
jl
cld
xor
jne
xlat
cli
in
clc
xchg
sub
fdivs
and
int
xorb
mov
push
ds
push
or
std
daa
pop
jg
inc
mov
push
xchg
sub
mov
lds
add
aad
inc
ret
leave
sub
sbb
push
pop
insb
fnstcw
test
add
xor
ja
dec
pop
sub
or
insl
pop
inc
mov
fld
test
push
icebp
pushf
push
rcll
sub
pop
daa
in
mov
hlt
push
lahf
or
pop
mov
das
push
imul
dec
mov
jo
push
mov
or
and
es
jg
add
sbb
pop
xchg
xchg
dec
mov
xor
aas
sahf
imul
inc
mov
dec
or
add
imul
jmp
xor
xor
add
mov
or
sbb
stos
repz
out
sbb
aas
add
pop
test
fidivrl
cmp
dec
cmp
or
aas
insb
test
lret
pop
push
add
in
push
push
push
mov
jecxz
inc
sub
mull
data16
mov
cli
mul
js
fsubrs
sarl
sub
xchg
out
mov
push
loope
stos
push
adc
out
out
cmp
das
lahf
jb
mov
mov
pop
lret
add
ds
dec
jbe
add
loope
sub
fidivrs
mov
adcl
test
icebp
push
inc
lock
add
or
dec
push
sarl
les
sbb
push
mov
cltd
cmp
shrb
mov
lock
or
pop
cmpsl
pop
and
test
xlat
scas
sub
aad
and
jno
push
loopne
in
pop
fs
out
cmc
inc
arpl
es
sub
fcompl
sub
fwait
or
das
out
jp
fwait
mov
mov
mov
cmp
test
push
adc
xchg
or
fidivrs
gs
push
add
ret
pop
pop
sbbl
in
in
out
inc
jecxz
cltd
push
mov
cli
in
add
repz
add
addl
sti
push
xor
in
add
in
mov
mov
cmpsb
out
loop
repnz
test
in
pop
je
and
inc
inc
cmp
loop
cmp
data16
in
in
ret
inc
adc
inc
pop
mov
jb
pushl
or
xor
mov
dec
mov
imull
jg
mov
std
fdivl
push
push
jmp
jmp
stos
lods
dec
add
or
cmpsb
in
pop
adc
mov
daa
mov
lret
and
popf
ss
jecxz
pop
sahf
rcrl
jnp
mov
addr16
sub
jbe
test
js
nop
std
stc
push
pop
and
sti
add
shl
mov
int
or
es
xchg
add
stos
idiv
or
dec
jnp
sbb
jmp
js
out
adc
jne
mov
add
dec
cmp
mov
rcr
lcall
lea
dec
imul
fcomp
shr
imul
jmp
int
stos
mov
mov
jp
fwait
cmp
nop
out
je
jno
adc
push
xor
xchg
dec
cmc
mov
cltd
fstps
xor
or
push
mov
jp
imul
add
mov
mov
xchg
dec
and
mov
fwait
pop
fimuls
loopne
scas
pop
and
pushf
sub
sbb
in
add
and
int3
inc
stc
sbb
imul
xor
stos
rolb
or
or
xchg
repnz
mov
cwtl
push
lcall
fisubs
dec
lcall
aaa
xchg
adc
dec
mov
add
scas
mov
and
aad
fdivr
popa
or
imul
movl
mov
out
dec
push
mov
pop
add
jg
shlb
aaa
iret
enter
cmp
jo
add
lea
in
mov
xchg
xor
push
or
adc
into
mov
dec
cwtl
sahf
and
jp
arpl
daa
icebp
jle
imul
insb
clc
adc
xchg
xor
push
and
lods
pop
xlat
push
sti
and
cmp
fmuls
mov
jae
out
hlt
pop
push
xor
xor
or
call
xlat
cmp
xchg
push
pop
clc
cmpsb
cmp
push
xor
ret
js
cmp
enter
out
sbb
loop
test
iret
xor
xchg
add
jns
fmuls
mov
mov
sbb
aaa
stos
dec
cmp
js
cli
shrb
push
xchg
scas
pop
xchg
inc
ljmp
sarl
adc
jmp
fmulp
cmp
lds
addr16
pusha
adc
jne
fists
pop
mov
ja
cs
jg
cld
adc
mov
mov
jnp
rorl
xchg
xchg
adc
xchg
sarl
jle
ljmp
insl
out
adc
frstpm(287
jg
xchg
push
rolb
jl
out
dec
lock
sub
cld
cmc
std
mov
cmp
xchg
dec
and
mov
fdiv
enter
int
popl
jecxz
sysexit
dec
idivl
and
mov
ud2
xchg
push
cmovne
and
ret
nop
fcoms
push
xchg
add
and
sub
int3
add
in
paddd
xlat
jns
pop
aad
mov
inc
adc
imull
bound
sahf
sbb
lahf
cmp
inc
mov
sub
mov
outsl
mov
cwtl
xchg
adc
lods
cmp
sbbb
mov
mov
pop
ret
push
inc
out
lock
cmc
mov
cmpsl
idivb
and
scas
adc
cltd
pop
push
pop
push
sub
sbb
fnsave
add
sbb
push
and
roll
fstl
cmp
dec
fwait
jns
lods
fistps
mov
mov
cld
lock
mov
cmpsb
hlt
cmp
mov
xchg
xor
mov
subb
test
xor
xchg
cmc
pop
xchg
lret
cmp
lcall
add
leave
push
cmpsl
cmp
inc
loop
lods
dec
mov
dec
test
push
mov
das
and
and
xchg
fnstsw
cld
rcl
pop
xchg
sub
pushf
rolb
pop
icebp
loope
add
test
jnp
into
fs
or
out
fnop
repnz
cli
or
popf
mov
rcrl
and
xchg
jo
xchg
pop
and
mov
stos
ja
jle
dec
enter
inc
mov
jp
and
cmpsl
aad
insb
pusha
cli
and
add
mov
into
gs
sbb
mov
aaa
pop
mov
test
movsl
hlt
lea
call
sbb
xor
lock
subl
loope
fwait
fwait
jo
cmp
test
aaa
andb
shl
lock
les
xor
nop
adcl
push
jb
loopne
mov
ljmp
test
pop
pop
cli
xor
icebp
xchg
enter
insb
mov
mov
les
cmp
cmp
cmp
inc
fsts
pop
and
dec
push
out
push
inc
in
ret
sbb
ja
inc
fwait
xor
jo
cs
xchg
push
ret
aam
and
testl
push
lret
or
mov
push
pop
repz
push
inc
ret
nop
scas
mov
inc
add
pusha
mov
sbb
sbb
movsl
inc
out
inc
daa
clc
cmp
pop
push
xor
xchg
jne
sahf
repnz
inc
ljmp
sbb
xchg
mov
jp
fdivl
dec
push
sbb
std
mov
jno
scas
gs
sysexit
add
sub
jmp
push
inc
add
push
gs
test
hlt
xorb
jl
out
divl
test
scas
cmp
dec
mov
jbe
outsb
mov
cmp
sub
popf
pop
pop
lret
iret
popf
xorl
es
mov
dec
cli
mov
jecxz
aam
cltd
int3
or
imul
sub
push
dec
add
std
mov
mov
pop
mov
sbb
push
jbe
out
mov
xorb
add
xchg
je
subb
mov
fwait
pop
shrl
xor
rolb
xchg
inc
loope
jo
xchg
and
fisubs
jno
mov
or
loope
jecxz
and
hlt
movsb
cs
pop
mov
outsl
and
popa
cld
cmp
xor
outsl
negb
cmp
out
out
jl
loop
pop
or
iret
and
test
cwtl
lods
jbe
aam
push
and
push
adc
dec
push
roll
inc
mov
stos
jecxz
jg
out
rcrb
movsb
push
xorb
pusha
sbb
inc
jp
mov
lds
enter
jns
cld
sub
mov
mov
out
addb
jnp
inc
lret
adcl
pushf
lret
lcall
in
cs
loopne
in
cs
xchg
inc
inc
xor
sbb
out
in
bound
push
rcll
adc
inc
jge
adc
adc
jge
lods
ds
jns
push
icebp
scas
sbb
dec
insb
jns
cld
pop
test
fstps
outsb
sahf
sub
imul
aad
pushf
xor
add
bswap
outsb
into
fwait
insl
jg
add
adc
inc
hlt
int
aad
out
clc
cmpsb
mov
iret
push
test
scas
lods
hlt
pusha
and
pop
pop
rol
scas
cltd
mov
daa
jnp
inc
test
shrl
data16
push
test
int3
fcom
push
dec
int3
xchg
int
push
gs
push
vmwrite
push
lahf
mov
ja
lret
imul
cmpsb
cld
repnz
ds
mov
inc
das
imul
dec
out
xchg
aaa
push
aam
sbb
neg
mov
mov
sbb
xlat
ret
jbe
lcall
adc
stc
mov
dec
jns
inc
or
cltd
push
fidivl
push
arpl
cmc
fidivs
pop
dec
fcomps
dec
sbb
jle
test
dec
fimuls
cmp
adcl
jp
repz
mov
push
bound
stos
cmpsb
jae
lret
jae
adc
inc
ret
dec
and
push
ljmp
aaa
push
pop
imul
clc
inc
xor
inc
sbb
ret
adc
sub
aaa
mov
ds
push
sbb
push
pop
push
icebp
lods
mov
mov
inc
mov
int3
stc
xchg
sbb
mov
sbb
adc
fimuls
iret
leave
adc
rcl
daa
insb
or
pop
jne
mov
push
push
dec
mov
aam
popf
jae
xor
and
xchg
ljmp
cmp
push
scas
outsl
adc
mov
sbb
into
cld
push
hlt
mov
jbe
addr16
out
jne
xchg
adc
inc
sub
mov
jge
pusha
and
jge
loopne
decb
outsb
pop
std
mov
mov
jge
jmp
cmp
mov
push
inc
adc
dec
mov
leave
fdivs
xor
loopne
out
push
mov
xor
mov
push
test
dec
xor
mov
mov
inc
mov
ret
fisttpl
in
loope
inc
xor
adc
in
sub
mov
adc
and
xor
pop
mov
jge
sarb
fisubl
and
divl
int
rorb
jb
rcr
dec
mov
sti
push
lock
mov
lret
sbb
inc
xor
enter
xor
out
or
and
testb
in
mov
ljmp
ret
stos
mov
negl
sub
pusha
mov
adc
and
and
imul
sub
jl
sbb
sub
mov
out
xorb
jbe
divl
mov
dec
loop
rol
mov
inc
mov
mov
scas
pop
shrl
jno
dec
push
add
sub
mov
mov
mov
adc
mov
sbb
popf
in
lret
out
shrl
int
add
inc
mov
cmp
jo
and
ja
stos
lods
addb
push
and
clc
sub
aad
xor
test
pop
sub
add
std
aaa
jl
jg
loopne
mov
sub
bnd
pusha
adc
std
lret
mov
pop
stos
andb
adc
mov
mov
pop
mov
jl
inc
pop
lret
push
rclb
pop
push
sub
push
aaa
cmp
dec
and
sbb
add
aam
pop
ret
sbb
andb
enter
push
fcomps
cmp
shrb
insl
xor
mov
jl
add
in
adc
leave
out
adc
sbb
aas
mulb
push
test
dec
int3
adc
xor
jb
push
jge
lcall
xchg
mov
adc
sub
and
rcl
xor
into
pop
dec
dec
mov
xchg
xchg
mov
sbb
sahf
pop
mov
mov
mov
inc
add
test
int
fs
sbb
pop
mov
push
shll
jge
lds
mov
cwtl
cltd
pop
pusha
jns
lea
shlb
movsb
in
setne
mov
lods
aam
mov
lock
int
faddl
mov
pop
lods
shll
lret
xchg
mov
jbe
pop
stc
aad
xchg
fs
fldcw
push
dec
aas
repnz
xor
sub
stc
mov
roll
test
ja
mov
push
stos
and
ljmp
iret
popa
call
sub
loopne
mov
jg
es
loop
push
ss
je
addr16
out
and
fmulp
pop
xchg
cli
push
push
xchg
ret
enter
aas
add
sub
and
pop
pop
loope
sub
aas
lds
push
popf
ret
hlt
inc
out
push
lahf
aam
adc
ret
xor
daa
xchg
sub
jb
fidivs
fistpl
push
int
pop
repnz
adc
dec
jg
popa
fsubs
dec
sbb
in
ret
sub
fcom
fs
pop
cwtl
mov
add
out
and
inc
loopew
popf
sbb
and
mov
mov
sub
sarb
inc
mov
xchg
cmp
cld
int3
sbb
mov
pop
inc
mov
mov
out
in
ret
xchg
dec
lods
xchg
and
aaa
mov
push
outsl
cmp
mov
sbb
cmp
and
sbb
leave
or
jp
nop
mov
pop
scas
hlt
test
mov
or
int
adc
jmp
pop
ljmp
mov
lock
add
mov
jecxz
add
stos
dec
sbb
out
orl
scas
aaa
dec
mov
lock
lea
push
xor
sbb
out
pop
adc
sbb
jg
frstor
xor
stc
sahf
inc
clc
push
lea
xchg
mov
aas
stc
and
fidivl
add
xchg
add
cmp
cld
aam
adc
push
insl
inc
mov
mov
dec
jg
jl
sbb
lods
cmp
ficomps
out
dec
jae
xchg
lret
dec
dec
mov
dec
es
loop
sub
or
dec
stc
xor
addr16
daa
outsl
or
repz
bound
movsl
lock
jb
add
pop
lret
jbe
jp
push
into
inc
sbb
outsl
push
adc
add
inc
adc
dec
nop
adc
test
es
int3
xchg
ret
notl
cmp
enter
add
outsb
cli
xchg
fbstp
mov
outsb
pop
lahf
divb
xchg
jo
fmul
lods
lahf
sbb
out
push
sub
mov
and
std
pop
out
out
sti
push
adc
out
cmp
xchg
sbb
testl
jge
sub
cmp
out
movsl
mov
inc
mov
push
out
hlt
cli
jle
inc
cmpsb
ret
cmp
rorl
decb
jne
pop
xchg
outsl
pop
ror
mov
mov
dec
repz
jge
sahf
lods
ljmp
je
add
mov
mov
adc
aam
test
sub
sub
imul
and
mov
out
mov
or
repnz
or
adc
xchg
dec
mov
adc
fs
fsubp
daa
sarb
sti
add
ret
leave
out
cmp
test
mov
push
mov
cmc
aaa
xor
jle
mov
cmp
mov
xchg
mov
jle
cmp
pop
aaa
add
les
aaa
movsb
imull
xor
mov
lods
out
fldl
xchg
pop
mov
idiv
jecxz
push
ja
clc
sub
rolb
inc
clc
mov
shlb
sub
dec
mov
xchg
add
sbb
xchg
xchg
lock
mov
sub
out
ss
cmc
or
xchg
lock
xchg
or
filds
bound
mov
mov
lods
lcall
dec
cmovb
mov
sub
in
xchg
arpl
out
in
push
shrb
aaa
cmp
jmp
shll
pop
mov
mov
xchg
sbb
mov
aad
adc
testb
lea
repnz
or
cld
push
gs
jne
cwtl
shl
mov
popa
cmp
sbb
aaa
loopne
mov
lea
arpl
sub
popf
test
fmuls
and
sbb
xchg
mov
xchg
sub
add
mov
sub
mov
adc
mov
movsl
jne
in
movlps
bound
sti
lea
mov
bound
imul
mov
lahf
outsb
xchg
mov
dec
push
test
addr16
xchg
rcll
stos
sub
cmp
shl
push
test
and
cwtl
test
and
pushf
mov
aaa
xchg
in
popa
cld
inc
leave
es
mov
in
jno
outsb
or
insl
ss
mov
cs
aaa
test
lahf
pop
stc
addr16
sbb
into
push
loope
or
mov
push
jbe
or
js
int3
xor
push
and
in
mov
sbb
divl
scas
repz
cld
test
fildll
popl
push
sub
cmpsl
sub
mov
sahf
sub
pop
mov
push
mov
dec
fnstenv
pop
sub
push
inc
aas
cwtl
mov
pop
lahf
or
xchg
iret
xchg
xchg
mov
mov
lea
sub
les
stos
jmp
xchg
adc
adcb
movb
xlat
sarb
ret
faddl
pop
and
lcall
sub
or
fs
push
pusha
or
mov
sarl
push
sub
push
dec
cwtl
dec
sub
in
ret
dec
out
jns
sbb
ret
mov
push
iret
xchg
lock
dec
rclb
push
ja
lret
subb
inc
icebp
loop
cs
mov
clc
es
adc
popf
dec
insl
test
xchg
inc
out
mov
fcompl
cmpsb
into
cmpsl
stc
adc
push
adc
and
add
shl
sti
pusha
xchg
pop
nop
mov
push
insb
add
subl
push
pop
ja
or
gs
jle
rcll
dec
cld
popa
lods
sti
shlb
sbb
jnp
shlb
into
shl
inc
and
mov
mov
insb
xchg
jb
jg
push
adc
sub
cmp
push
bound
cwtl
test
push
sahf
xchg
mov
cli
lea
jecxz
enter
xor
test
out
orb
sbb
sub
loopne
imul
fcomp
xchg
sbb
xor
sbb
mov
fcomps
ficoms
jecxz
int3
xor
mov
ja
call
pop
loopne
jg
mov
sbb
imul
and
sub
pop
pusha
aas
sbb
xorb
mov
lret
and
icebp
push
bound
lea
xchg
out
or
popw
jae
pushf
jecxz
loopew
xchg
sub
dec
or
ss
add
int3
xor
rorb
sub
repz
rcrl
pushf
jle
mov
mov
iret
out
push
xchg
adc
adc
jno
mov
push
mov
lods
fnstsw
jl
ljmp
inc
test
jns
dec
mov
mov
jnp
push
popa
cwtl
pop
adc
mov
dec
lods
ja
push
jne
loop
jo
dec
jbe
sbb
cmp
mov
xchg
sub
jbe
jno
scas
dec
movsl
call
loope
in
or
xchg
or
fisubrs
cli
insb
cmp
add
cmc
jbe
aad
mov
sti
in
sbb
jo
cmp
insb
loop
movsl
js
es
cmp
int
lcall
clc
adc
movsb
fst
inc
ss
xchg
sub
pop
pop
movhps
adc
leave
mov
inc
fs
add
xlat
clc
movsb
cwtl
inc
leave
out
popa
sub
adc
inc
pop
loop
rcl
and
jle
sub
lods
push
xchg
fists
cltd
pop
mov
dec
clc
arpl
pop
sbb
mov
sbb
sub
jns
aad
mov
enter
push
in
xchg
mov
and
pop
lds
movsb
sbb
push
xchg
daa
out
mov
and
or
mov
fldl
test
cmp
sub
into
mov
dec
dec
dec
pop
push
push
jmp
popf
fwait
cmp
pop
adc
dec
roll
adc
mov
xchg
xchg
pop
dec
ror
dec
mov
cmp
addr16
or
cld
jb
xor
rcll
mov
mov
add
cmp
mov
cmp
jmp
add
push
lret
inc
lea
cmpl
pop
rcll
push
test
cwtl
cmc
stc
cmpsb
fldl
mul
fwait
mov
lea
sub
daa
sti
shrl
jl
lods
fcomp
or
cmp
jae
fwait
or
pop
pushf
push
dec
pop
test
sti
push
and
mov
cmp
rclb
rcr
pop
mov
pushf
int3
pop
mov
lret
inc
jae
movsb
mov
pushf
jne
lea
pop
adc
clc
inc
mov
dec
out
cmp
outsl
in
jl
mov
int
push
jae
xchg
shrl
aad
repnz
push
or
mov
inc
xor
leave
mov
mov
or
cmp
or
dec
push
ljmp
mov
jae
xor
jno
rol
in
shl
xchg
lret
leave
mov
add
jecxz
jo
arpl
push
mov
mov
scas
xchg
ljmp
add
bound
or
jo
scas
inc
rolb
sub
addl
or
jecxz
gs
cwtl
mov
pop
and
test
dec
mov
repz
inc
repnz
iret
and
pop
repz
inc
pop
push
fists
or
pop
dec
arpl
test
inc
push
sub
pop
mov
movsb
inc
sub
adc
cmp
mov
ss
add
or
jb
xchg
rol
jg
nop
arpl
call
out
insb
jnp
fsubl
aaa
jmp
inc
push
mov
sbb
mov
lret
mov
push
mov
int3
in
and
ja
xchg
mov
notl
push
ljmp
mov
adc
xchg
push
cs
or
pushf
lea
mov
fwait
push
cwtl
cmpsb
sub
push
or
push
xchg
pop
fisttpl
mov
pushf
pop
mov
dec
sub
mov
cmp
inc
jbe
test
and
add
jge
add
adc
ds
lods
mov
faddl
in
loope
test
cld
push
fnsetpm(287
in
imul
test
cmp
jmp
mov
lea
fistpll
ja
mov
aaa
mov
stos
mov
pop
pop
jo
mov
push
and
pushf
cmp
xor
lahf
scas
data16
fidivs
outsb
nop
repz
pop
out
insb
xlat
inc
inc
cmpsb
mov
insb
sub
push
cmp
rep
pop
sti
inc
jmp
cmpsl
cli
repnz
cwtl
mov
jl
mov
out
jg
xchg
xlat
js
loopne
sbb
fstl
and
jp
inc
orl
jb
cmpsb
sub
sub
mov
add
add
jbe
dec
hlt
loopne
addb
add
inc
xor
aam
or
pop
pop
out
in
jne
push
jmp
add
fcom
adc
adc
jge
xchg
mov
out
cmpl
jo
inc
add
mulb
mov
mov
stos
or
and
popf
ret
outsl
add
push
sbb
cli
lods
xor
adc
mov
jmp
loopne
mov
push
xor
out
mov
fwait
insb
into
push
dec
sarl
mov
pop
iret
sarl
enter
bound
pop
rcll
lods
xchg
setnp
inc
fidivs
fildl
dec
xor
test
jo
mov
inc
fwait
ljmp
ret
les
jl
sub
jmp
loop
repnz
sbb
fstl
cwtl
jmp
outsl
shl
pop
stos
arpl
fs
sub
mov
or
dec
cltd
dec
outsl
pop
dec
fcomi
jns
mov
pop
test
aas
pop
das
add
and
les
xchg
dec
and
out
jnp
or
data16
aad
fisubl
mov
shl
idivb
jg
test
fdivl
xlat
inc
add
sub
mov
xchg
xor
jo
aad
psraw
cmp
and
fsubrl
pusha
mov
fdivrs
icebp
sti
test
mov
rcr
insb
cmpsb
cltd
mov
and
fimull
jno
cltd
test
jp
sub
mov
sub
cmp
js
cltd
jp
lods
pop
in
mov
lret
or
mov
fcmovne
and
es
inc
in
xor
jmp
mov
mov
cld
xor
jmp
add
and
ds
add
test
xchg
sub
data16
imul
add
leave
movsl
movsl
imul
pop
mov
fs
pop
dec
divl
das
frstor
pop
mov
dec
lock
mov
ljmp
mov
or
cli
and
sub
sbb
call
sbb
or
sub
addb
add
mov
mov
int3
cmpsb
sti
aad
pop
inc
sbb
cmp
cmp
cmpsl
or
sub
mov
sub
call
js
sbb
pushf
and
popf
jnp
add
aad
sub
cmp
adc
insb
std
add
dec
push
insl
mov
popa
push
sub
or
aad
out
xchg
insl
shll
je
imul
loopne
lea
push
addb
mov
outsb
loope
test
mov
ret
hlt
push
inc
mov
sbb
sub
in
mov
inc
ffreep
rcll
mov
mov
add
mov
xor
push
flds
push
push
ret
or
or
cmpsb
scas
daa
cmc
xor
add
jmp
xchg
inc
cli
insl
fsts
pop
subb
adc
pop
es
hlt
lock
mov
mov
mov
pop
js
les
fstps
fmuls
add
aas
test
mov
icebp
cwtl
cmpsb
pusha
scas
insb
mov
std
call
js
lds
lcall
jg
push
in
jp
mov
adc
cli
jb
lock
sbb
scas
fstl
jo
mov
fwait
mov
cmp
pop
leave
testl
xorl
andl
dec
mov
push
fistpll
inc
mov
mov
or
cmpsb
mov
repz
and
add
sub
and
das
loopne
pop
or
adc
shrb
push
xor
push
vmptrld
sub
out
mov
push
sbb
pop
lods
out
jle
jae
leave
outsb
xor
pop
mov
push
fs
mov
sub
and
inc
push
adc
and
mov
stos
jge
das
mov
jbe
and
xor
xchg
popa
xlat
mov
xor
fwait
mov
push
cwtl
inc
jmp
cmp
sub
jp
lods
outsb
fsub
cwtl
sahf
adc
pushf
ret
ljmp
adc
sbb
jge
sbb
iret
mov
pop
push
adc
movsl
push
push
sbb
mov
xor
or
xchg
cmp
test
mov
push
shlb
test
out
ds
addr16
outsl
xchg
push
mov
movsb
sub
xor
push
or
jns
and
repz
ja
std
stos
push
sub
dec
and
dec
cld
add
mov
add
ds
fwait
pusha
lret
aas
scas
and
xchg
clc
call
and
push
popf
test
aaa
jb
in
lret
lcall
rorl
jne
sbb
ret
mov
sbb
loope
or
inc
pusha
aad
out
pop
jne
add
dec
xor
test
mov
outsb
out
xchg
outsl
jb
das
inc
test
es
and
pop
mov
dec
scas
cmp
fsubrs
xor
sti
pop
xchg
sub
cmp
jnp
push
pop
loop
lahf
sbb
insb
rolb
pop
cmp
jmp
fwait
test
sti
push
daa
jnp
ret
xor
das
inc
ficoms
add
pop
aam
incb
clc
xlat
mov
pusha
adc
ret
cs
movsb
push
mov
ss
jecxz
push
aas
out
mov
icebp
inc
jb
sarl
movsb
in
mov
movl
fldcw
stos
inc
lods
int
out
fs
cmp
fstpl
data16
fsubrp
add
sub
jns
push
adc
lret
push
lcall
es
mov
fadds
cmpsl
fs
mov
cmp
ds
adc
and
lahf
out
dec
jo
xchg
std
lods
rclb
adc
push
outsl
xchg
in
pushf
jnp
pusha
push
popf
mov
mov
scas
js
push
pusha
push
and
jae
scas
push
or
sti
inc
sbb
ja
cld
add
and
xor
dec
stc
and
test
rcrb
dec
movsb
in
cwtl
xchg
lret
mulb
subl
ljmp
cmp
xchg
xchg
mov
push
pop
clc
repnz
addr16
mov
dec
ljmp
das
pop
mov
int3
cld
and
ficoml
sub
mov
adc
das
loop
jno
movsb
inc
or
sbb
xor
es
push
cs
jg
testb
add
xchg
pop
sub
dec
jo
adc
jge
rorl
outsb
inc
push
sbb
je
push
dec
rorb
push
mov
cld
incl
cmp
pop
test
decb
add
dec
mov
int3
leave
jbe
pop
bswap
jnp
cli
stos
hlt
test
mov
out
lret
xchg
fimuls
xor
pop
sbb
movsl
stos
add
pushf
inc
fstps
cmp
jb
daa
aaa
sbb
fwait
jb
dec
push
cmc
jne
mov
mov
rolb
cmpsb
inc
stos
ret
sub
mov
std
mov
dec
mov
rol
jge
xor
rorl
in
add
inc
cltd
sub
sti
jno
lcall
ret
fwait
cltd
or
fcompl
xchg
fwait
dec
adc
cs
sub
fisubrl
jmp
and
jnp
mov
repz
sub
pop
popf
mov
jne
xchg
lock
mov
or
cmc
das
or
mov
arpl
fistps
mov
call
push
in
lahf
mov
jns
movsb
xor
sarl
mov
and
fs
in
bound
rcl
mov
jecxz
inc
inc
bound
xchg
inc
fcomps
lret
es
or
lds
mov
pop
arpl
xchg
add
in
rclb
scas
lcall
iret
push
push
adc
dec
notb
pop
pop
stc
rcrl
jle
sbb
das
ret
lcall
lahf
push
pop
shlb
pop
popf
dec
lds
dec
xor
xchg
push
jbe
addr16
enter
add
ss
xor
sub
in
ret
jle
sahf
xchg
in
inc
or
in
pop
je
dec
cmpsb
mov
fnstenv
mov
sub
pushf
dec
fsubl
sbb
xchg
imul
test
mov
jg
repnz
or
je
inc
mov
add
in
imul
loopne
imul
jnp
add
int
sbb
scas
in
mov
icebp
aam
and
imul
movsb
mov
cmpsb
fildll
ss
nop
es
fisubrl
clc
dec
popa
orl
add
out
rorb
or
mov
mov
push
insl
add
movsl
mov
mov
pop
sbb
arpl
push
shl
int3
insb
sub
xchg
adc
fstl
std
adc
flds
xchg
je
pop
inc
cmp
xor
mov
loop
xchg
std
call
daa
mov
call
and
repnz
test
inc
jnp
daa
movsl
mov
int
cmpsb
sarb
or
repnz
dec
out
adc
cli
out
add
sub
and
idivl
jno
mov
fstpt
les
inc
lahf
aaa
into
andl
inc
and
xchg
and
jge
hlt
imul
sbb
jno
push
dec
aas
addr16
sbb
xchg
adc
clc
mov
lcall
das
out
fstpt
sbb
mov
add
mov
and
lret
mov
dec
adc
leave
add
ffreep
mov
das
mov
inc
outsl
andl
jle
jnp
addr16
pop
cmp
or
add
mov
enter
test
xor
lods
movsb
in
jmp
sbbl
or
repnz
mov
ss
test
mov
push
mov
pop
mov
xchg
cmpsl
fnstsw
push
adc
add
fldt
pop
inc
jle
into
inc
sbb
xchg
ss
mov
stos
adc
adc
inc
pop
adc
lret
push
shll
scas
stos
leave
push
or
sahf
nop
or
fsubrs
cmp
add
std
add
mov
imull
and
inc
inc
daa
cmp
fldcw
sub
mov
leave
sub
sbb
bound
xlat
fsubl
push
push
cmpb
sti
mov
repnz
adcl
inc
and
and
shl
out
push
add
push
gs
sbb
sbb
dec
pushf
sbb
sub
sbb
hlt
fldcw
aas
inc
xchg
sub
test
and
xlat
sbb
pop
push
add
adc
ljmp
dec
sub
into
test
inc
xchg
cmp
test
jnp
sbb
loop
pusha
lea
sbb
mov
imul
mov
add
xchg
int
push
loop
movsl
cs
xor
mov
gs
cmp
cmp
xchg
sub
test
mov
iret
stos
lret
inc
lock
lods
jb
xchg
xlat
cmp
sub
test
out
fadds
sbb
cmp
push
mov
loop
fcmovnu
mov
push
clc
out
paddb
jne
lock
push
push
stos
inc
pop
popf
or
lahf
xor
or
sahf
xor
push
or
pop
cmpsb
vmwrite
in
add
insl
cmpsl
rcll
out
jge
inc
or
inc
out
push
pushf
pop
and
enter
stos
jge
mov
imul
pop
orb
jmp
loope
imul
test
into
push
fmuls
push
std
sbb
jge
dec
mov
cmpsb
pop
push
sbb
sarb
pop
dec
inc
mov
aaa
xor
xchg
cmp
push
dec
dec
adc
push
shll
iret
shrl
sub
cmovp
daa
scas
fstl
inc
pop
push
mov
add
mov
push
mov
mov
shlb
inc
sub
test
mov
icebp
inc
lock
add
daa
mov
idivb
sarb
inc
xchg
fcoms
lcall
out
xchg
mov
jmp
jmp
int
lret
push
shr
add
mov
pop
mov
mov
dec
dec
push
out
lret
out
mov
xor
aaa
test
mov
mov
test
mov
lock
and
xchg
rcl
stc
jb
arpl
es
xchg
je
inc
aas
and
and
push
inc
mov
xchg
jns
dec
dec
sbb
fstl
ret
fnsave
dec
loope
fnsave
fcomip
xor
push
inc
xor
inc
jmp
xchg
dec
data16
adc
in
imul
push
andb
in
xchg
jno
mov
mov
sub
sub
jno
out
mov
sarb
stos
adc
lcall
out
aas
jno
xchg
xor
mov
mov
adc
cmpsl
xor
jae
in
mov
and
and
aam
int
int
movsl
xchg
aaa
cwtl
ja
imul
jns
int3
jl
movsl
add
xor
inc
mov
cld
scas
add
jmp
jmp
sbb
or
ret
jae
int3
inc
in
movsb
sti
data16
ss
scas
sbb
or
imul
xor
pop
and
adc
xorb
mov
jbe
dec
mov
bound
push
scas
xor
sub
shll
lods
pop
sbb
rorl
xchg
dec
pop
cmpsl
jmp
loopne
repnz
cli
mov
sbb
mov
int
push
cmp
xor
test
jae
mov
mov
outsb
insl
mov
mov
cwtd
out
dec
and
sbb
push
les
subb
dec
jmp
test
repnz
ret
das
xchg
icebp
shr
pop
test
loope
push
nop
jp
push
aaa
out
pop
int3
lahf
add
pop
pop
dec
cmc
clc
ljmp
nop
jns
jp
imul
add
test
or
mov
dec
insl
jns
lahf
xchg
pop
test
ja
push
out
je
push
xchg
movsb
sbb
mov
xchg
push
sbb
ret
push
cmp
adc
shlb
das
loopne
jne
jmp
xchg
addr16
mov
ljmp
ljmp
adc
push
add
mov
sub
aas
rclb
mov
es
mov
dec
mov
jp
jecxz
jnp
inc
shl
popf
adc
lea
or
pushf
out
lock
xchg
jb
popa
cmp
loop
xchg
loop
popf
js
pop
rcrl
gs
cmp
lret
fidivrs
push
mov
adc
outsb
adc
popa
mov
inc
imul
add
mov
call
push
nop
add
and
les
subl
push
lahf
adc
mov
mov
mov
clc
ret
xor
mov
push
mov
xchg
cmp
adc
push
ss
addb
aas
push
movl
xchg
mov
and
xchg
das
inc
xchg
xor
jmp
mul
mov
fst
or
cmp
lods
jp
insl
insb
negb
dec
subb
popa
adc
and
add
xlat
rclb
mov
jl
cmpl
in
in
lahf
fistpll
push
outsb
cmpsl
movsl
sbb
insb
fisttps
mov
or
int
jae
rol
lock
or
inc
xchg
lret
sub
aam
and
imul
fucomp
push
xchg
pop
adc
mov
enter
push
mov
jo
mov
mov
setg
push
inc
mov
sbb
pusha
jnp
dec
addl
lea
sahf
imul
xchg
dec
xor
mov
adc
test
test
das
sahf
push
sbb
adc
cmp
notb
and
out
js
lahf
sbb
or
ret
movsb
cmpb
jbe
push
mov
push
push
bound
xchg
or
cmpsb
test
int3
mov
sahf
push
int3
outsb
aam
mov
mov
adc
out
hlt
cmp
daa
inc
mov
xor
add
es
push
es
sub
xor
fidivl
add
cmpsb
jmp
lret
mov
cwtl
mov
je
pop
jae
fistpll
mov
push
fidivrl
lds
orb
mov
aad
les
mov
outsb
cmp
sub
and
shll
push
loopne
int
mov
jb
fldt
jmp
inc
out
and
ss
push
cs
and
leave
cmp
movsl
xchg
lods
ljmp
pop
dec
rol
xchg
inc
test
dec
xabort
inc
xor
pusha
jmp
hlt
jns
addb
fucomip
mov
jbe
movsl
adc
xor
lcall
cltd
test
insl
mov
loope
sub
mov
ds
shlb
aaa
dec
pmulhuw
jno
push
inc
scas
mov
jecxz
out
lahf
test
es
jmp
mov
sarb
in
mov
aam
test
out
add
mov
pop
sub
cmp
pusha
out
sti
out
jge
pop
cmp
out
enter
clc
mov
xor
enter
sar
shlb
push
and
mov
outsl
repz
imul
xlat
pop
andb
push
cmp
and
mov
inc
enter
adc
in
push
xchg
int3
aas
mov
mov
cmpsl
fnstcw
out
mov
loop
enter
cs
loop
outsb
in
bound
fmul
mov
rol
movsl
push
aam
add
outsl
enter
pop
adc
adc
loop
sysret
fwait
scas
or
dec
jae
cld
lret
out
out
inc
dec
out
mov
sbb
cmp
in
in
inc
xchg
outsb
sti
sbb
imul
cmp
add
stos
sub
icebp
cmp
ret
dec
sub
ds
lcall
data16
lds
xchg
push
mov
lret
iret
lds
mov
jnp
pop
sub
sub
pusha
movsl
ss
add
iret
adc
aaa
out
test
xchg
xchg
data16
into
dec
inc
xorb
aad
outsl
loope
mov
popa
fcoml
add
sarl
jb
and
add
push
aaa
mov
lret
jae
ret
dec
loope
xchg
add
loop
in
xrelease
outsl
and
cmp
aaa
mov
push
out
negb
fnstcw
jnp
jo
gs
xchg
out
cmp
test
adc
xchg
call
out
dec
je
ss
je
adc
inc
pop
cmp
cli
hlt
jmp
xchg
popf
fimull
inc
ss
cmpsb
adc
and
popf
outsl
push
mov
out
inc
aam
lods
sbb
sbbl
cli
mov
xor
xchg
popa
pop
cwtl
jo
shrl
mov
notb
or
popf
fucomi
and
ljmp
xchg
in
push
xchg
cmp
inc
pop
xchg
push
inc
lea
xor
fbld
or
cmp
push
lret
sub
paddw
aad
mov
sbb
mov
or
jge
xchg
outsb
xor
repnz
pop
xchg
addr16
push
sahf
andb
dec
cli
adc
mov
lock
scas
cmpsb
sub
cmp
jb,pn
fldl
test
push
mov
insb
jb
jno
mov
inc
fldt
cmp
push
or
pop
jmp
je
cwtl
cmpsb
imul
and
call
fxch
xor
sub
add
jbe
fmul
into
test
sbb
or
fmuls
pop
push
adc
ss
sbb
mov
mov
arpl
mov
fnstcw
inc
test
addr16
je
gs
xchg
lds
pop
jge
aas
inc
push
test
add
movsb
sahf
loop
movsl
enter
add
mov
xchg
cmp
subl
test
push
pop
daa
pop
push
lods
shrl
sbb
lods
and
dec
jae
jmp
add
mov
pop
xorl
in
fmull
int
xchg
jbe
stos
push
hlt
adc
xor
ds
push
insl
sub
cmpsl
test
cwtl
in
or
pop
and
icebp
push
push
pop
adc
insl
cld
or
icebp
pop
rcl
ljmp
push
jg
xchg
popa
nop
or
imul
cltd
mov
push
fistpl
insl
and
pop
insl
jb
jae
arpl
cmp
scas
adc
ljmp
add
sbb
and
stos
shll
testb
subl
jmp
add
mov
cmp
adc
rcl
lock
and
cltd
push
std
mov
mov
jle
push
loop
push
ret
add
sub
cmpsl
and
and
jmp
or
idivl
js
and
and
into
jecxz
dec
adc
dec
add
outsb
dec
inc
stos
inc
loop
and
add
cmp
push
scas
test
xchg
sti
jl
pop
dec
fstps
mov
push
out
add
mov
push
xchg
mov
and
nop
xchg
push
pop
xchg
aam
pop
push
mov
pop
rorb
xchg
test
or
sbb
fisubrl
mov
jne
loopnew
or
test
andl
sti
sbb
xor
cmp
daa
and
push
cltd
mov
roll
xchg
fwait
dec
lahf
xchg
sbb
xchg
dec
add
sbb
or
gs
cld
xchg
add
fsubr
inc
outsb
cs
xchg
loopne
mov
sahf
rorb
fldenv
cmp
int
mov
mov
inc
fdivrp
idivl
insl
mov
mov
stc
jg
mov
sub
ret
pop
inc
sub
aam
cmc
int3
dec
cmp
lcall
pop
xchg
out
lret
cld
dec
shll
sub
add
jge
xchg
sub
fstpl
iret
repnz
leave
shlb
outsb
push
or
aaa
cmp
and
xchg
push
adc
popf
dec
sbb
cmc
bound
and
rcl
pop
dec
cmpsl
adc
cmpl
xchg
dec
cmp
mov
or
xor
and
xchg
cmp
add
pop
mov
popa
lds
je
fnstsw
and
movsl
xchg
lods
inc
test
out
dec
sub
repnz
imul
scas
lods
inc
adc
data16
inc
les
insl
cmp
loope
inc
repnz
cmp
mov
test
pop
clc
scas
mov
xchg
sub
mov
fsubrs
and
test
rcl
outsb
adc
repnz
stc
xchg
scas
mov
fidivs
mov
inc
sub
popf
jns
cmp
xor
mov
sbb
sbb
loope
jno
jecxz
mov
or
adc
filds
lods
xlat
sub
test
cmp
add
pop
jmp
imul
in
mov
jecxz
stc
mov
push
call
test
mov
fldcw
sbb
mov
mov
lods
aas
cmp
push
push
cmp
jns
or
push
mov
movsl
sar
sbb
adc
inc
pop
or
imul
pop
xchg
cmp
push
repz
das
daa
adc
push
retw
shrl
adc
mov
fnstsw
ja
imul
int3
dec
int3
test
adc
fsts
int
nop
inc
lcall
add
adc
imul
xchg
mov
add
dec
sbb
int3
inc
in
mov
push
cmp
add
jne
inc
fldenv
sarb
aaa
mov
nop
cmp
sahf
in
sbb
sub
outsb
jp
dec
mov
negb
mov
xchg
mov
test
aad
inc
pop
leave
repz
mov
imul
sbb
sbb
jecxz
sbb
sub
push
xlat
mov
mull
or
or
sbb
cmpsl
and
pop
imul
adc
jmp
pop
cmp
mov
fadd
in
push
mov
sbb
fst
movsl
cmpsb
sti
aam
cmp
daa
aad
fs
cmp
push
sbb
cmp
inc
dec
pop
add
data16
sub
sbb
inc
ficoms
hlt
mov
lods
xchg
jns
or
jo
mov
pop
iret
xchg
add
sub
cmp
dec
lcall
sti
pop
adc
shlb
dec
repnz
sub
lds
mov
ss
pushf
into
imul
test
dec
cmpsl
imul
cmp
mov
add
mov
xchg
stc
jmp
fcom
aaa
iret
sbb
xchg
fmull
sbb
mov
dec
fisttps
fnstcw
cs
adc
adc
add
sub
mov
cmc
cmp
add
int
loope
int
xchg
movsl
pushf
repz
enter
cmp
cmp
mov
push
push
out
pusha
leave
and
mov
mov
out
xchg
aam
pop
loope
gs
mov
or
lcall
mov
int3
mulb
fwait
mov
sahf
sub
mov
ja
sbb
fyl2x
arpl
pop
adc
add
mov
aam
scas
xchg
std
test
push
jmp
andb
addb
cmp
sbb
lahf
mov
je
scas
mov
cmp
mov
jno
jne
fildl
lods
sub
dec
cs
ljmp
ss
xor
ret
push
xchg
mov
sti
add
push
xchg
test
inc
inc
xchg
test
add
pop
dec
gs
xchg
repnz
sbb
adc
dec
inc
inc
std
mov
rcll
dec
icebp
jno
push
stos
dec
pop
sbb
aam
dec
mov
mov
xchg
xor
loopne,pn
jb
popf
dec
jae
aad
mov
int3
enter
sti
out
and
xchg
sti
push
hlt
xlat
orb
jecxz
int3
inc
imul
ljmp
sbb
push
imul
xlat
push
mov
mov
stc
scas
pop
dec
gs
clc
shll
jbe
test
out
arpl
ja
dec
stos
push
cmpsl
ss
jno
add
movsl
bound
sahf
push
fwait
out
push
mov
dec
or
outsb
jb
mov
mov
call
leave
cltd
adc
stc
mov
stos
adc
dec
add
mov
ror
xor
rcrl
out
cmp
pusha
in
lret
inc
pop
sti
scas
loopne
or
inc
jae
and
sbbb
cld
fstl
push
dec
ja
mov
push
or
push
sbb
jo
fldenv
inc
cmpl
imul
mov
out
adc
divl
cli
int3
push
je
insb
fdivr
jmp
fnsave
mov
mov
stos
adc
bound
cmp
es
loop
mov
and
out
mov
pop
scas
jns,pn
mov
push
xchg
dec
sub
and
xchg
jge
mov
scas
add
adc
js
bound
ljmp
lret
lods
push
in
popf
lcall
inc
lock
pop
aad
mov
or
outsb
cli
jl
cmpsl
mov
push
js
sahf
push
loopne,pn
jl
jmp
lahf
test
loopne
lock
and
or
rclb
inc
les
test
cmp
mov
imul
lret
pop
and
sbb
mov
inc
imul
jmp
mov
jbe
mov
mov
inc
lret
pop
enter
cmpsl
test
dec
mov
jp
mov
fsubrs
popf
popl
sbb
jne
xchg
ffree
fsubrs
pop
dec
inc
pop
shll
xlat
lea
dec
mov
arpl
gs
fsubl
jle
rclb
cmc
fisubs
movsl
shrb
fistps
in
sub
stc
pop
sti
xor
js
mov
cmpsb
cmp
outsb
sbb
xchg
push
repz
jmp
out
add
add
rcr
add
lds
arpl
mov
popa
call
dec
dec
mov
test
or
test
hlt
push
add
pop
dec
fsubrs
push
push
orb
jno
test
sub
sarl
mov
sahf
por
cmpsl
gs
sbb
xor
data16
in
inc
clc
sbb
xchg
xchg
mov
inc
adc
xor
loope
mov
mov
jmp
call
mov
jecxz
lret
jb
mov
lock
push
add
mov
xor
cld
in
int3
mov
mov
mov
call
cmp
inc
pusha
cmp
test
adc
mov
dec
jmp
not
push
push
mov
aad
iret
ret
aaa
push
cmpsb
cltd
inc
dec
inc
je
shll
mov
cli
imul
add
insb
sarl
inc
js
mov
push
sub
mov
xchg
mov
dec
push
mov
divb
pop
fwait
sub
orl
push
cli
es
call
cmp
fidivs
fwait
sbbb
add
popf
cwtl
and
mov
in
push
push
pop
push
movsl
jmp
lock
pop
pop
sti
pop
inc
fsubr
mov
mov
adc
fisubrs
lret
dec
sbb
add
sbb
sbb
dec
loope
in
scas
mov
dec
pop
jae
jge
loopne
jle
jge
ret
stos
nop
mov
xor
pop
mov
fidivs
jno
mov
insb
enter
pop
cmc
mov
rcrb
and
jns
pop
or
mov
mov
incb
xchg
pusha
sub
out
sub
mov
sbb
enter
and
leave
std
mov
lret
add
int
out
lahf
mov
fidivrl
mov
lods
fdivl
dec
cmp
mov
and
and
lret
icebp
adc
dec
mov
popa
addr16
test
mov
add
leave
dec
les
sub
push
nop
shrb
pop
xor
dec
repnz
lods
xchg
test
push
pop
pop
cmp
add
iret
fs
daa
lock
jg
lret
std
xor
addb
jne
pop
adcl
nop
adc
std
jmp
aaa
out
imul
fiadds
or
maskmovq
movsb
inc
int
divl
in
lock
jne
push
mov
rorl
sbb
jo
ret
cmp
mov
cmp
imul
push
out
push
mov
push
popf
mov
cld
data16
jl
imul
nop
mov
jg
sbb
mov
cmp
cmpsl
jne
mov
or
jb
sar
mov
imul
jl
xchg
jp
cmp
xchg
xchg
cmp
hlt
es
push
mov
sub
imul
out
sbb
push
push
insl
push
cmp
stc
mov
shrb
int3
mov
fildll
inc
popa
or
imul
add
ljmp
data16
pop
pop
hlt
lret
pop
add
push
jae
rcrl
dec
std
imul
jp
mov
imul
ja
ffree
mov
and
out
jmp
adc
add
cmpsl
jl
cmp
sub
mov
aas
or
push
sbb
int3
fwait
and
adc
push
pop
out
in
int3
jmp
outsb
mov
scas
in
fs
flds
inc
loopne
dec
stos
das
xchg
fistpl
lds
out
mov
or
xchg
xlat
mov
test
stc
ljmp
out
movsl
insb
ret
mov
push
mov
fs
ret
pop
inc
ja
adcb
inc
sub
fnstsw
ret
ljmp
jmp
push
inc
cwtl
or
lcall
sub
into
adc
mov
cld
hlt
xor
mov
add
ror
push
out
push
pushf
mov
jne
xor
iret
addr16
pop
adc
sbb
stos
clc
data16
popa
add
and
xchg
push
out
xor
dec
or
sti
bound
out
sahf
ja
mov
mov
adc
shll
adc
xor
mov
mov
hlt
inc
dec
mov
int
rcll
jne
or
and
xchg
cmc
pop
outsb
pop
push
jp
pop
stos
rcll
out
repz
jns
shlb
aaa
daa
or
cmpsl
jmp
cli
outsl
loop
push
jp
in
pushf
in
adc
adc
dec
cs
xchg
test
inc
mov
je
sbb
dec
sub
sbb
cmpb
jb
xlat
inc
lock
scas
add
out
loopne
jns
inc
lock
out
lods
jg
xchg
repz
and
mov
test
movsb
jp
push
popa
sub
insl
aaa
and
dec
jbe
mov
ss
mov
aaa
test
push
adcb
pushf
sub
iret
jmp
sub
pop
sub
mov
pop
jmp
loope
dec
lea
add
or
add
cmc
cmp
mov
inc
adcl
and
enter
outsb
add
rcrl
sti
inc
add
lahf
push
ret
xor
or
push
xor
dec
jecxz
mov
push
push
jbe
cmp
jne
sbb
xor
daa
inc
lea
xor
nop
jecxz
and
push
add
cmp
cltd
insb
arpl
xorl
xchg
jle
jmp
push
push
and
xchg
dec
xchg
mov
sub
inc
out
xor
sti
sub
jmp
mov
outsb
fs
or
lods
fcomip
or
cld
jnp
ja
fwait
loopne
rcll
cmpsl
repnz
add
daa
clc
cli
test
cmp
shlb
stc
inc
ss
stc
aaa
push
cs
test
dec
rorb
pop
pop
bound
mov
mull
mov
icebp
cltd
mov
jl
push
xor
and
movsb
sub
pop
insb
jne
cmpsl
leave
and
xchg
hlt
into
push
cmp
jge
fdivs
fists
sub
popf
mov
fiadds
das
and
and
jb
mov
dec
or
add
cmp
out
in
mov
lcall
xchg
ret
data16
sbb
arpl
mov
pop
fs
mov
or
sbb
lahf
data16
mov
bound
adc
ficoml
mov
nop
rolb
std
mov
lods
jne
loop
jae
test
mov
mov
addr16
adc
outsb
push
rcrb
or
cs
test
jle
adc
rclb
cmp
ret
imul
sub
pminub
enter
push
and
mov
xor
sub
stc
or
sbbl
push
addb
sub
cmc
call
mov
repnz
mov
enter
mov
add
test
in
add
mov
and
xor
and
cmpsb
dec
sub
add
aaa
mov
cmpsb
in
dec
andb
stc
in
jmp
sub
pop
mov
cld
ss
and
fs
push
push
mov
or
stos
gs
inc
xchg
daa
push
mov
decl
xor
cmpsb
fwait
cmp
fisttps
cmp
or
ret
insb
jg
mov
fcoml
dec
fnstsw
push
insl
dec
push
and
insl
xchg
stos
and
cli
inc
test
xchg
int3
jecxz
lock
ljmp
mulb
jo
sub
loope
inc
cmpsl
mov
sbb
in
pop
pop
gs
out
fwait
scas
enter
std
imul
fsts
mov
test
cld
adc
sarb
into
outsl
mov
cmp
mov
mov
pop
ficoms
in
mov
outsb
arpl
xchg
movsl
cmp
sti
push
movsb
fs
orb
popf
rorl
out
inc
in
mov
rorb
jnp
xchg
inc
jmp
jne
adc
jns
bound
jo
lods
jmp
pop
jmp
jg
in
lock
mov
std
cmp
out
and
push
hlt
loopne
adc
nop
sub
lcall
les
lahf
push
fs
xchg
enter
cltd
test
xor
pop
or
push
aas
mov
xchg
in
ror
push
mov
push
mov
xchg
jmp
or
lds
lea
push
mov
mov
pusha
fcoms
mov
dec
ljmp
sbb
notb
xchg
dec
in
mov
lahf
jb
sbb
cmp
jg
jge
add
fnstsw
and
mov
lahf
xlat
and
into
and
rcll
mov
pop
test
sub
jg
pop
lods
mov
xchg
stos
cltd
dec
sti
fcoms
adcl
int
push
adc
sub
aaa
aaa
aad
adc
push
xor
or
inc
js
pop
add
xor
dec
sbbl
push
jo
add
pop
test
cmpsb
loopne
mov
test
shrl
add
outsb
popl
aam
push
mov
push
in
pusha
push
fnstenv
xor
mov
cli
and
cmpsl
fld
inc
test
pop
in
push
jmp
in
cmp
insl
pop
ret
test
sarb
fsubl
addb
push
out
sbb
mov
and
std
fsubrs
mov
xchg
shll
inc
inc
cli
inc
inc
popf
pop
sub
pop
cmpsb
pop
xchg
sahf
fucom
cmp
push
mov
jb
mov
inc
into
or
mov
pop
std
inc
mov
mov
sub
sub
cmp
inc
jo
sub
lahf
nop
mov
in
inc
sbbb
scas
repnz
mov
xchg
mov
inc
mov
outsl
ljmp
pop
push
pop
sbb
xchg
push
adc
pusha
jg
jno
sbb
mov
loop
add
mov
fwait
inc
cmp
sbb
cld
rolb
mov
xchg
hlt
push
je
pusha
enter
add
adc
sub
xor
sub
ljmp
mov
or
inc
push
cmp
cmp
imul
rolb
rorl
out
loop
jb
mov
dec
dec
inc
or
flds
and
xor
add
mov
notl
sti
push
sti
pop
mov
push
fadd
or
rclb
adc
aad
fsub
inc
mov
pop
inc
repz
ret
ss
mov
in
xor
jbe
sbb
mov
sbb
push
mov
cli
and
pop
hlt
mov
lret
dec
push
fcomi
pushf
out
cmp
xor
dec
cmp
stos
mov
mov
sub
sub
lahf
xor
dec
ja
out
xchg
jle
cli
mov
cmpsl
pop
cld
xchg
inc
dec
fnstcw
dec
data16
pop
aaa
les
or
sbb
mov
pop
rorl
lods
mov
fwait
jnp
push
aam
and
inc
in
lds
jmp
sub
jo
into
int3
cmp
nop
cmc
pop
jo
mov
test
inc
shll
paddq
movsb
adc
in
fisttpll
lcall
jb
or
jb
lock
push
data16
sbb
sbb
xchg
jle
imul
ret
fcompl
adc
ljmp
lods
push
sub
dec
add
aas
mov
andb
push
mov
mov
push
scas
sarl
inc
mov
imulb
xchg
std
lods
mov
dec
mov
sub
test
cmc
mov
call
lods
push
dec
push
ds
cmp
mov
lret
or
shll
dec
decb
push
fcmovne
js
lahf
leave
aaa
sahf
adc
stos
mov
push
rclb
sub
shrb
mov
nop
jo
testl
icebp
arpl
mov
mov
push
fiadds
mov
push
stos
clc
or
mov
mov
push
xchg
movsb
mov
jne
push
and
shl
fbstp
xchg
mov
mov
mov
and
xchg
std
int
and
jp
je
popa
or
and
repz
into
and
xchg
cltd
mov
cmovae
adc
jmp
outsl
jb
xchg
bound
lea
popf
pop
out
xor
repz
mov
add
adc
and
jp
mov
imul
push
push
repnz
add
idivl
loope
push
mov
es
sti
push
dec
pop
sbbb
adc
fmul
bound
fwait
sub
mov
mov
sub
repz
shlb
cmp
lods
cmp
ljmp
mov
inc
push
cld
out
mov
pop
jge
in
sbb
setns
or
daa
lret
pushf
pop
jbe
pop
add
inc
rorl
and
pop
mov
loop
setl
lahf
arpl
aas
jb
loope
scas
mov
mov
mov
dec
icebp
loop
test
hlt
mov
push
ss
cmp
pusha
imul
inc
movsl
inc
leave
add
out
sub
dec
xor
mov
add
and
xchg
jbe
mov
lds
mov
out
xchg
vmovddup
stos
jbe
jbe
xchg
insl
ss
mov
sub
jle
inc
pop
push
jge
icebp
xstore-rng
cmpsl
inc
shrl
or
inc
cs
pop
sub
call
xor
mov
pop
leave
xorb
pop
push
dec
mov
lods
imul
pop
out
fldt
ja
and
icebp
xor
mov
sub
cli
mov
out
ret
pop
push
leave
daa
adc
or
push
xchg
sbb
jnp
or
xchg
push
sub
dec
pop
scas
sbb
and
pop
insl
popf
xchg
int3
jge
inc
in
jp
jnp
mov
sti
mov
xchg
jo
jmp
lret
pop
push
pushf
dec
lret
aam
dec
mov
out
cmpsb
nop
inc
and
push
lcall
in
push
leave
in
scas
add
outsl
shlb
dec
mov
or
mov
jno
mov
xchg
pusha
es
xchg
pop
mov
aad
push
push
scas
in
push
insb
dec
dec
int
pop
push
pop
and
jp
sarl
ret
lods
mov
pop
pusha
adcl
adcl
inc
js
cmp
movsl
into
jecxz
out
xchg
mov
jo
mov
jl
push
icebp
add
add
inc
push
add
testl
sub
aad
mov
xchg
jae
scas
sarb
or
inc
test
pop
popf
sbb
mov
mov
daa
sub
orb
xor
cmp
push
rolb
or
sub
push
lret
cwtl
mov
daa
and
jp
jbe
js
cmp
mov
pop
or
mov
push
fwait
push
and
scas
repnz
inc
mov
dec
jmp
pop
pusha
vmovupd
into
dec
sahf
iret
jge
es
bound
mov
ret
mov
sbb
stos
iret
popa
fsubrs
int3
push
pop
out
sub
divb
sti
test
cmp
cmc
cmpsl
add
leave
adc
push
mov
das
add
cmpsb
in
stos
int
lds
xlat
stos
enter
popf
sbb
mov
int3
stos
movl
gs
addr16
movsl
ss
daa
clc
jp
jecxz
add
aam
and
jg
jp
push
stc
pop
mov
dec
loop
mov
cmp
lcall
arpl
or
inc
fbstp
call
cmpsb
in
aam
adc
call
int
cmp
scas
roll
jg
push
xor
push
in
aam
pop
cmp
and
xor
ret
inc
cmp
or
sbb
std
pop
inc
fwait
xchg
jnp
jecxz
hlt
inc
fiaddl
jle
sbb
adc
jmp
leave
jge
movsl
call
inc
rcrb
mov
sbbb
push
cmp
or
xor
shrb
adc
pushf
imul
lea
lea
and
and
iret
aas
jb
call
pushf
jge
dec
lret
cmp
sbb
popl
add
test
add
out
clc
into
xor
int3
mov
shlb
push
inc
cmp
scas
mov
pusha
movsb
xor
inc
mov
fsubrs
jbe
fcompl
dec
gs
jp
daa
out
jge
pop
sbb
arpl
inc
inc
popa
test
mov
out
and
jmp
and
sahf
sub
pop
sub
or
adc
loope
push
leave
dec
cmp
fstl
clc
xlat
dec
mov
jmp
test
dec
jbe
pop
fstpt
xor
mov
adc
cmp
jnp
stc
sub
aas
fldcw
jb
mov
push
push
push
repz
and
sub
out
in
add
clc
add
inc
cmc
or
jmp
sbb
fistl
jl
test
mov
flds
mov
fwait
mov
mov
sti
loop
aas
mov
fisttpll
jl
jge
mov
sbb
lods
mov
mov
mov
nop
mov
dec
stc
push
lret
add
rcrb
mov
mov
mov
sarl
movsb
das
mov
jg
out
stos
int
or
cmp
ljmp
mov
outsl
cmovbe
mov
xchg
jne
sbb
inc
xor
les
xor
rcrl
mov
or
xchg
mov
mov
xor
dec
jl
and
mov
mov
jmp
sbb
mull
dec
pop
mov
repnz
or
and
mov
loop
xchg
or
rorb
add
xor
add
mov
xor
mov
jnp
pop
and
mov
clc
lods
jmp
and
popf
inc
imul
mov
jmp
mov
inc
pop
into
push
or
icebp
cmpb
imul
inc
andb
dec
cmp
mov
sub
lret
loopne
jb
dec
xor
push
sbb
mov
aad
or
inc
jnp
xor
insb
sbb
lods
imul
enter
sbbl
pop
out
out
cmpl
iret
and
pusha
lret
cmpsb
push
fisubrl
and
ja
push
cwtl
add
jmp
fidivs
xchg
cmp
pop
push
ljmp
push
nop
xor
or
add
and
xor
xchg
fdiv
adc
push
inc
jnp
aaa
xchg
inc
dec
push
mov
cmpsl
push
movsl
or
sbb
mov
pusha
cwtl
or
lcall
adc
sub
pop
dec
jno
jno
ret
jg
fsubrp
push
in
inc
push
loope
lret
xchg
push
mull
xor
ret
scas
out
inc
push
repz
pop
lock
mov
or
pushf
mov
outsl
sub
xchg
pop
inc
mov
movsb
cmpl
test
fs
popf
dec
jp
dec
jae
insl
jmp
iret
setl
mov
lcall
inc
lret
test
insl
push
aam
mov
stos
pop
xchg
scas
ret
jge
fs
inc
xor
bound
mull
js
out
push
cs
sbbl
pop
xlat
push
addr16
lods
out
xlat
pop
popa
mov
mov
ss
xor
scas
std
addr16
repz
sti
test
sahf
sbb
jmp
dec
mov
lods
sbbl
sbb
nop
jbe
add
add
cmc
outsb
test
jnp
inc
sbb
xchg
xor
in
xor
mov
arpl
ret
popf
push
sbb
leave
mov
adc
push
cmp
fstps
sbb
imul
mov
sbb
icebp
pop
out
mov
aad
leave
test
mov
rclb
out
leave
aad
fs
clc
push
cmp
frstor
sub
insb
out
aas
push
hlt
rcrl
mov
in
xor
ds
mov
ds
xor
mov
in
into
fadd
xchg
pusha
sub
mov
add
sbb
xor
fcompl
lods
out
dec
push
add
insb
hlt
sub
or
or
shr
nop
ja
jmp
shll
push
or
inc
mov
mov
aam
push
mov
cmp
jne
mov
lods
fisubrs
call
pop
lods
shrb
push
out
stc
fcoms
inc
adc
inc
jb
stos
and
mov
cmc
cmc
call
adc
and
push
jbe
addr16
rcrl
popa
shl
dec
jge
xchg
test
stc
psrlw
fiadds
ljmp
imul
mov
movsb
rolb
push
or
mov
xor
sub
xchg
lock
loopne
pop
fstl
fcomps
xor
repnz
or
pop
push
add
mov
xlat
adc
jl
lahf
or
movsl
decl
or
jbe
pop
shlb
mov
mov
popa
dec
inc
xor
imul
mov
mov
jae
xchg
fs
xchg
aad
mov
push
aam
mov
jmp
mov
adc
pop
push
std
jmp
sbb
sub
dec
xor
lods
mov
or
push
add
sbb
push
mov
gs
addr16
mov
ss
xchg
je
cld
repz
mov
faddp
loope
sbb
xchg
mov
add
xor
repz
inc
cltd
mov
cli
outsl
fstpt
sub
xchg
movsl
sbb
xor
les
arpl
mov
push
pop
lahf
pop
push
mov
int
xorl
inc
push
mov
mov
adc
enter
cmp
or
cmp
sub
sti
dec
jb
adc
mov
test
fidivl
cmp
and
ss
int
mov
dec
push
dec
jge
jl
jns
popa
stos
mov
add
jno
push
jno
fcoml
fisubl
mov
test
mov
mov
cmovl
popa
or
pop
into
inc
mov
cwtl
push
outsl
mov
push
pop
xchg
inc
int3
xchg
lret
push
lds
pop
jae
fnstenv
pushf
lret
repz
mov
pop
mov
out
xchg
or
mov
pop
dec
mov
popf
jae
nop
arpl
cmpsb
adc
lea
sbb
mov
adcb
lahf
out
loop
lahf
mov
mov
push
push
inc
dec
xchg
scas
rcrl
xor
sub
jg
dec
fmuls
arpl
dec
dec
jno
movsb
mov
into
push
xor
shlb
push
shlb
filds
adc
mov
das
jae
or
in
xchg
std
mov
push
add
das
mov
popf
jo
in
into
xorb
adc
or
dec
mov
cs
mov
pusha
pop
aad
inc
das
in
push
and
add
jo
neg
jo
mov
sub
xchg
cli
xchg
leave
cmp
icebp
fsubp
jle
pop
jbe
xchg
cltd
mov
in
gs
mov
mov
jg
or
orb
push
xchg
sub
adc
xchg
or
hlt
enter
int
cmpl
fcomp
test
inc
cltd
push
jecxz
int3
mov
cmp
inc
ret
cmp
mov
xor
mov
xor
xchg
repnz
imulb
js
roll
stc
adc
jnp
and
or
jmp
pop
faddp
xor
decl
pop
out
aas
lea
mov
inc
pop
sahf
push
pop
push
adc
xchg
loopne
movsl
sub
mov
popf
xchg
enter
or
scas
call
mov
mov
cmp
cmp
cmpsb
jne
out
jbe
dec
adc
xchg
sub
mov
jp
shr
daa
add
shrb
xchg
int3
add
out
mov
xor
mov
lret
inc
adc
insl
mov
fisubl
cmpsb
and
push
mov
cmp
dec
fcmovne
mov
inc
mov
mov
fsubr
xchg
icebp
sub
sbb
xchg
add
add
and
pop
das
ror
sbb
sub
imul
adc
clc
mov
xchg
xchg
xchg
mov
xor
cmpsl
js
or
test
and
lea
leave
mov
in
cmpsb
sub
push
sti
test
mov
fldenv
sub
lods
mov
xchg
jnp
push
dec
mov
fsubrl
jb
loope
mov
test
add
test
push
mov
int3
sub
testl
popa
js
faddl
aaa
xchg
add
xchg
mov
ficomps
mov
repnz
mov
xchg
fadds
push
xor
pop
fnsave
loope
xor
cmp
imul
rcr
inc
push
and
js
mov
add
stos
dec
jmp
arpl
mov
jnp
lret
call
lds
into
mov
dec
fs
iret
mov
jmp
push
push
lret
gs
xchg
push
xor
test
in
js
fdiv
in
lock
lret
call
mov
mov
and
cwtl
fsubr
iret
iret
iret
xchg
lahf
adc
dec
sub
rorb
stos
int3
xchg
xor
xchg
push
pop
pusha
pop
push
dec
inc
mov
add
xor
fisubrs
cld
pop
hlt
imul
inc
or
jmp
lahf
leave
add
pushf
pop
hlt
shrl
push
and
pop
cwtl
or
outsl
loope
or
cmpb
lds
test
std
push
and
ficomps
xor
filds
mov
int3
clc
inc
mov
pop
ja
xor
test
jmp
aam
xchg
lcall
dec
mov
pop
cltd
jp
adc
gs
mov
lahf
call
fidivs
je
pop
dec
xchg
enter
vmovupd
jg
mov
adc
pop
xor
cmp
ret
push
add
xchg
jmp
je
jp
mov
lret
daa
and
rcll
into
push
jmp
xor
lods
insb
push
add
popa
add
shlb
int3
pushf
js
mov
mov
sbb
fisttpll
mov
cmc
in
ljmp
aaa
cmpsb
pop
gs
divl
add
aaa
dec
sbb
push
lea
dec
dec
fnstcw
mov
pop
xor
mov
shlb
ds
jnp
call
loopne
jge
xor
add
repz
pop
add
adc
ljmp
pop
jl
sbb
push
les
addl
das
xor
test
jg
outsb
xchg
sbb
sbb
inc
mov
push
mov
and
cmp
lock
pop
adc
frstor
out
xor
sub
notb
and
add
popa
push
insl
or
xchg
fstps
pushw
insl
stos
or
mov
fmulp
xchg
mov
mov
mov
aas
mov
push
inc
jmp
push
jno
cld
stc
and
int3
bound
jne
icebp
out
dec
mov
addr16
mov
aad
jl
ret
xchg
lahf
in
inc
add
std
mov
cmp
push
add
in
xchg
add
jmp
push
insb
or
inc
negl
mov
leave
jnp
das
and
repz
ret
push
int
mov
push
call
or
xlat
adc
mov
and
mov
movsb
lret
out
int
insl
or
incl
ljmp
mov
mov
jmp
or
inc
add
adc
dec
rol
add
inc
leave
push
cmpsl
pop
lcall
mov
lods
ret
cmp
int3
fdivr
dec
aam
aaa
mov
sbbb
xlat
and
jmp
test
vpshab
push
and
mov
mov
mov
inc
adc
ret
or
nop
xor
ror
test
into
and
jo
insl
jbe
xlat
aam
or
shlb
or
pushf
sti
xor
ficoml
push
outsb
int
add
sti
mov
mov
dec
mov
mov
orb
hlt
stos
cmp
or
incb
mov
jbe
cltd
sub
test
or
and
jne
popa
aad
or
add
sub
shr
inc
lret
mov
sti
icebp
mov
bound
in
cs
sbb
xor
push
xchg
pop
jle
mov
jae
push
into
mov
clc
jecxz
sbb
imul
jnp
int3
inc
int
fxch
sub
push
xchg
test
xor
in
into
jle
mov
dec
stos
stos
xchg
push
aam
lcall
inc
std
hlt
mov
mov
movsl
push
add
movsb
nop
cld
pop
cmpsl
sub
push
jecxz
cld
in
inc
test
je
insl
das
cltd
mov
sub
ljmp
imul
and
xor
in
pop
adc
imul
js
or
sti
js
xchg
dec
push
out
xor
mov
or
fs
sti
push
mov
popf
mov
lret
pop
ljmp
test
xchg
xchg
pop
pop
mov
xor
or
loope
add
lea
mov
ljmp
mov
ffreep
pop
mov
lods
out
sub
or
inc
xchg
inc
ficoml
inc
insb
divl
testb
xchg
dec
sub
lods
ss
out
xchg
cmp
shl
inc
push
cmpsl
pop
aas
mov
push
out
jmp
jnp
dec
mov
in
lods
shrb
mov
js
sarl
push
dec
dec
popa
ds
fs
dec
push
iret
lods
dec
clc
xchg
popf
cmpsl
dec
dec
adc
mov
push
lea
lds
mov
xor
cli
pop
mov
mov
rcll
aas
sbb
inc
mov
les
jno
nop
pop
aam
vpshld
jns,pt
cmp
in
push
data16
cltd
inc
ret
into
push
inc
aad
je
fisttpl
cs
mov
push
test
mov
dec
mov
test
mov
call
pop
fmulp
push
stos
fisubrl
loope
jns
imul
push
and
sbb
test
jmp
mov
test
pop
mov
xlat
dec
pop
xchg
jmp
cltd
mov
push
cmp
xchg
jo
fidivs
mov
mov
cld
mov
lret
das
push
xchg
cltd
sbb
add
mov
add
fcmovb
rolb
jg
loop
hlt
into
push
repz
mov
jg
push
mov
sbb
in
add
addr16
lcall
cmp
jmp
cmpsl
xor
ja
sbb
orps
shr
wbinvd
mov
aaa
sti
jmp
aas
es
adc
xchg
outsb
push
lret
fstpl
fnstcw
js
sbb
xor
fldenv
mov
lret
and
arpl
mov
or
aaa
add
lcall
adc
sub
push
mov
ja
insl
ficompl
jne
jno
sub
pop
add
or
stos
mov
pop
inc
push
in
imul
sbb
or
repz
push
jecxz
scas
mov
sti
lcall
repnz
cmp
je
pop
mov
fs
lcall
int
xor
in
bound
and
js
pusha
std
cld
jbe
enter
outsb
in
jae
clc
inc
push
lcall
movsl
enter
mov
cmp
adc
out
test
ljmp
loope
mov
imul
push
xchg
add
faddl
xor
adc
iret
rorb
insl
dec
jg
test
xor
clc
xchg
int
sub
sub
xor
mov
testb
scas
insl
pop
andb
cld
mov
add
movl
movsb
and
xchg
jp
and
xor
sbb
lods
cmpsl
cli
or
leave
outsb
mov
in
xor
ljmp
xor
push
test
mov
mov
pop
insl
adc
sub
loopne
mov
inc
in
adc
sbb
in
test
popa
jecxz
xchg
lret
out
mov
testb
movsl
in
inc
add
cmp
jle
jmp
jp
xor
scas
arpl
ss
orl
insl
xchg
cmpsl
cltd
cld
and
dec
lds
pop
and
addb
mov
add
ficomps
or
into
bound
cmp
in
shrb
scas
ret
data16
je
inc
divl
daa
adcb
lea
mov
xchg
add
xchg
cmp
pop
lret
jecxz
xlat
sub
bound
ss
jne
outsb
pop
pop
repz
ret
jb
sti
pop
loope
cs
push
dec
push
sbb
leave
adc
outsl
mov
cmpsl
je
push
test
mov
mov
xchg
popf
xchg
jg
mov
aaa
sub
jno
cmc
das
pop
lods
adc
lods
cmp
xchg
pop
inc
mov
pop
cmp
push
testb
dec
loop
testl
xor
adc
add
int
sbb
in
stos
adc
jl
icebp
add
outsb
or
rcl
mov
and
lods
leave
out
sarl
dec
xor
mov
sub
clc
sub
int
mov
jns
loope,pn
jmp
adc
lret
inc
nop
pop
sbb
adc
ds
cltd
dec
adc
push
aad
lods
in
push
xorb
int3
das
pop
xor
inc
xor
dec
or
int3
pop
lret
inc
xlat
mov
roll
rorb
fnclex
inc
gs
jmp
negl
mov
jo
and
outsl
xchg
adc
arpl
in
hlt
cmp
add
jle
sub
jp
pop
or
xchg
sbb
gs
inc
mov
and
shll
aam
aad
push
shl
loope
xor
lods
int3
movsl
mov
mov
xchg
aas
xchg
cltd
push
sbb
shrb
aam
iret
sbb
std
mov
fs
xchg
iret
fmull
leave
xchg
rcrb
xor
cmpsl
mov
sbb
pop
popf
xchg
push
or
mov
xchg
mov
addb
mov
push
fsubs
aaa
mov
cmpsl
rcrl
adc
jo
pop
scas
mov
mov
jp
mov
cmp
outsl
and
xor
shrb
cmc
inc
push
pop
addr16
faddl
mov
xor
aam
nop
aam
icebp
jecxz
push
rcrb
hlt
popf
xor
mov
rclb
add
dec
cmp
iret
cltd
cltd
fcmove
cmc
pop
cvttps2pi
mov
fnsave
adcb
std
push
inc
movsl
nop
fsubrl
dec
add
shrb
xor
cmp
jo
cmp
sahf
pop
jae
rolb
cs
imul
add
push
push
sub
sub
adc
scas
adcb
iret
pop
pop
lcall
into
das
push
xlat
and
rclb
nop
jge
mov
and
or
cmp
repnz
ja
sbb
sahf
aam
mov
int3
jp
jmp
in
pop
or
movsl
imul
pop
cmp
sub
sets
sarb
cmp
insl
and
push
fsubs
mov
shrb
mov
mov
flds
aas
cmp
add
lahf
mov
xorb
cli
cmp
xchg
pop
dec
push
or
xchg
or
and
inc
cmp
adc
in
pop
xor
jb
pop
mov
sbb
or
xchg
lea
xchg
leave
loop
or
sub
scas
push
cmpsl
arpl
push
cmp
popf
cltd
es
xor
ljmp
or
xor
add
aaa
fsubl
lea
xor
shlb
mov
pop
jne
mov
ljmp
mov
dec
aam
inc
dec
into
xchg
cmp
xor
push
nop
aaa
popa
nop
or
popa
outsl
dec
je
lods
fcomps
xor
cmc
push
jg
cmp
lahf
loopne
stos
jge
mov
xchg
sub
icebp
inc
icebp
imul
shll
fsubrl
xor
scas
pop
mov
pop
mov
leave
jmp
out
or
jmp
jbe
pop
jge
xchg
xorl
push
in
adc
cwtl
xchg
ror
pop
mov
or
pop
push
mov
push
pop
daa
xchg
daa
xchg
fsubrs
loopne
jmp
imulb
xlat
xor
cltd
push
nop
ja
pop
mov
rcrb
sbb
inc
dec
cltd
imul
popl
xor
repnz
mov
fcomps
xchg
data16
inc
clc
adc
andb
sbb
sbb
mov
js
mov
adc
lret
mov
mov
push
inc
xchg
or
leave
movsb
or
and
pop
push
jns
adc
mov
popa
mov
je
mov
repz
cltd
add
cltd
fldenv
mov
pushf
in
sbb
int
hlt
cmp
push
insb
xor
sub
mov
rcl
nop
enter
push
pop
push
data16
cwtl
scas
sbb
test
in
cmpsl
out
add
push
mov
fnstenv
dec
rorb
loope
pop
jae
add
push
out
dec
jnp
adc
adc
movb
stc
testl
popf
sbb
xchg
sub
das
imulb
jmp
test
mov
lds
mov
in
pop
int3
jecxz
xchg
cltd
popa
aad
or
fcmovbe
in
les
xchg
xchg
push
mov
call
enter
lods
das
lods
sbb
pop
lret
mov
xlat
xor
add
jmp
xchg
fimuls
mov
push
jbe
ret
stos
xchg
xchg
mov
nop
adc
sbb
mov
incb
imull
lret
js
and
loop
mov
sahf
mov
loope
push
loop
inc
cmpsl
sub
and
mov
and
mov
pop
dec
rcrl
lcall
push
mov
jb
cmp
divb
sbb
mov
mov
mov
sbb
push
sub
jge
xchg
pusha
and
mov
push
adc
in
inc
push
jno
clc
xlat
into
test
stos
mov
cli
aam
gs
dec
ss
adc
push
mov
and
clc
or
push
mov
stos
push
xchg
xor
add
push
das
imul
pop
repz
sbb
pop
mov
roll
popl
mov
das
data16
loope
call
leave
pop
and
dec
cmp
test
out
xor
pop
jne
jb
cltd
add
jae
ret
sbb
mov
aad
fldt
std
fs
cmp
lods
popa
inc
or
test
adc
push
xchg
imul
jno
lret
andl
mov
sbb
pop
jle
mov
loopne
jnp
aam
mov
sbb
add
loop
xor
xchg
shlb
add
arpl
les
shll
push
mov
dec
mov
jnp
loopne
add
sub
cmc
mov
jg
jne
in
xchg
stc
ss
mov
das
mov
cwtl
addb
pop
js
das
add
adc
push
pop
sbb
mov
sbbb
iret
push
add
adc
push
scas
pop
sub
push
pop
xor
cmp
mov
xor
xchg
mov
ljmp
mov
sub
mov
movsl
enter
jno
cmp
fs
notb
push
shll
ret
test
mov
cmp
adc
stos
or
and
cmp
sarb
data16
inc
push
dec
repz
push
addr16
push
dec
mov
lcall
jb
xchg
ja
mov
or
js
cmp
push
lcall
dec
xchg
mov
cmp
mov
popa
xchg
inc
sahf
ljmp
jbe
xor
mov
stos
mov
dec
fcmovnu
fcmovnb
or
add
test
fstpt
imul
and
push
mov
pop
jo
icebp
mov
jmp
sbb
push
setno
movzwl
push
pop
jecxz
pop
roll
pusha
or
jg
loope
xorb
ds
test
cmpb
sbb
inc
cmpsb
out
fs
not
dec
pop
call
and
lret
sub
mov
mov
dec
lahf
mov
mov
sahf
cmp
lret
fiadds
jne
sbb
jb
mov
add
xor
dec
push
xchg
cli
lock
enter
je
jl
fcompl
dec
push
push
scas
inc
sbb
sub
in
cltd
lock
xor
aaa
outsb
add
mov
push
jecxz
pusha
cs
mov
daa
cwtl
lcall
jmp
scas
int
mov
lahf
out
cwtl
pop
adc
and
ljmp
xor
and
add
mov
cmp
xchg
dec
mov
adc
test
shlb
stos
and
pop
xor
cli
push
mov
aaa
mov
add
mov
mov
sar
sti
xchg
push
xor
pop
ds
insb
imul
int3
mov
xchg
mov
sbbb
inc
push
pop
jae
test
in
mov
pop
sahf
pop
adc
mov
cmpsl
mov
lret
add
push
fsubl
dec
dec
faddl
loope
scas
movsl
je
call
hlt
pop
push
fstps
pusha
xchg
out
shrb
insb
mov
ljmp
mov
xchg
cmp
xor
or
fisttpll
ror
cmp
and
mov
xchg
sbb
push
shlb
cs
sarb
mov
jmp
repnz
xchg
jno
xchg
dec
ficoml
jp
sbb
push
xchg
das
loope
mov
xchg
xchg
lods
or
pop
push
xor
jnp
mov
mov
pop
inc
fldt
test
call
loopne
xor
sbb
sbb
sub
xor
mov
sarl
inc
loop
lods
add
lock
testl
rep
sti
inc
or
stos
xchg
pop
jne
push
je
fadds
mov
mov
xchg
sbb
add
add
jl
jmp
test
xchg
popf
addr16
xchg
push
call
xchg
inc
insb
fst
or
xor
enter
mov
pop
in
arpl
dec
and
lret
rcrl
pop
std
sub
rcll
adc
push
shl
lcall
or
loop
cmp
inc
hlt
ja
mov
xchg
in
mov
mov
dec
cwtl
stos
testl
aaa
mov
jp
jmp
sahf
hlt
shl
mov
into
ds
mov
mov
leave
mov
or
or
stos
xor
mov
pop
popf
testb
je
add
arpl
scas
cli
insb
push
fmuls
add
out
cwtl
punpckhbw
fnstenv
imul
sbb
pop
scas
in
add
inc
js
mov
cmp
popa
mov
jo
jo
hlt
prefetchwt1
or
bndstx
jp
xor
in
ljmp
push
popf
pop
pop
icebp
fisubrs
jle
js
stos
pusha
nop
xorb
ljmp
cmpsb
xchg
int
repnz
sbb
movsb
sti
pop
aaa
mov
mov
mov
xchg
inc
pop
lcall
dec
movsl
aas
out
gs
xorl
dec
or
testl
mov
out
mov
in
xor
scas
inc
mov
daa
stos
mov
adc
pop
mov
pop
int
rorl
mov
mov
or
jne
cli
xchg
mov
inc
push
jge
pop
xchg
cmp
std
inc
pop
shl
out
push
pop
lret
in
sbb
fstl
loop
aaa
mov
dec
add
scas
aam
mov
lods
xchg
pop
adc
jne
xchg
jne
mov
orb
call
jo
cmpsb
cwtl
or
ljmp
push
icebp
pop
sub
or
rclb
aam
cmp
and
scas
jge
xlat
dec
imul
clc
xlat
fimull
repz
rcrb
ss
cmpsl
adc
pop
fildl
add
jnp
xchg
and
push
sub
mov
adc
cli
pop
vpcomw
sti
xor
test
mov
leave
cmc
roll
test
fcoml
loopne
dec
cmpsb
sub
sub
xor
jae
jp
rol
mov
lret
xor
popa
into
enter
daa
adc
xchg
sub
pop
push
aas
dec
push
rorl
xor
add
in
sbb
in
shrb
inc
imul
cs
sbb
shlb
sub
shrl
and
sbb
dec
cld
hlt
mov
stos
adc
shlb
mov
adc
fdivs
dec
aam
mov
inc
nop
sarl
imul
test
push
pop
in
icebp
imul
adc
inc
jae
iret
jbe
ret
mov
scas
lahf
call
jbe
test
aaa
pushf
sti
mov
and
cmp
leave
pop
lds
lret
add
push
sti
mov
mov
out
ror
mov
cli
push
mov
mov
cltd
xor
dec
popf
bound
testl
imul
fdivrs
dec
jae
lods
xchg
dec
add
in
lcall
dec
cmp
adc
lret
imul
call
iret
lock
ja
insl
pop
leave
push
xchg
mov
mov
js
mov
lds
xor
das
out
push
ds
mull
pop
ja
fdiv
lcall
sbb
or
push
fistl
mov
rol
dec
jg
xor
loopne
dec
jnp
dec
lret
shll
jb
stos
xor
enter
jo
dec
jge
inc
sub
add
repnz
bound
fcoml
test
hlt
in
lods
cmp
cmc
fimuls
inc
inc
lods
jle
inc
arpl
fstl
xchg
sarl
cmpl
js
ss
andb
insb
adc
inc
movsl
jge
ret
adc
pop
test
push
jbe
inc
ret
push
test
loopne
fistpll
jno
call
cli
orb
leave
sbb
add
rol
or
xchg
and
cltd
and
mov
divb
fprem1
stc
shrl
enter
pop
adc
add
ret
xchg
sbb
inc
and
imul
mov
int
lods
ret
pop
jae
dec
dec
cwtl
sbbb
inc
cld
addr16
ds
arpl
jmp
mov
push
jno
iret
dec
sbb
insl
test
frstor
cmpsb
outsl
fimull
add
int3
and
hlt
push
add
and
enter
or
and
std
xchg
out
jle
fstpl
pop
mov
and
mov
inc
fwait
sbb
sub
mov
lahf
xchg
stos
in
movsb
add
sbb
xor
enter
and
es
loop
inc
mov
cmpl
fimull
aas
mov
dec
xchg
inc
add
and
jg
cmpsb
jno
push
and
cmp
lcall
insb
orb
fldcw
sbb
xor
lcall
js
lcall
cli
mov
inc
lea
xchg
lcall
divl
mov
pop
mov
in
rorb
adc
xor
mov
mov
mov
inc
addr16
pop
bound
push
outsl
adc
sub
pop
push
lret
jp
xor
cmp
mov
mov
sub
push
test
movsb
and
jnp
call
sbb
jbe
inc
jg
out
mov
testl
ja
stos
push
dec
into
xchg
scas
movsl
imul
addr16
fwait
mov
adc
mov
mov
mov
lods
lcall
dec
xor
out
mov
pop
xchg
fwait
jge
and
xadd
inc
call
std
lcall
out
and
mov
mov
mov
cmp
xlat
add
push
jle
cmp
cmpsl
mov
xor
inc
and
fcomp
bound
cmp
int3
popa
pop
das
inc
dec
mov
movsb
inc
scas
inc
movlhps
mov
mov
mov
rol
lahf
cmp
jbe
fmuls
xchg
mov
and
fstps
in
ret
scas
mov
cmp
sbbl
arpl
das
nop
dec
sbbl
sub
andb
pop
cmp
jne
cmp
or
scas
aam
popf
mov
lds
outsl
inc
push
sub
fdiv
adc
pop
inc
cmp
add
inc
jg
mov
mov
repz
daa
lret
or
ljmp
js
rorl
xchg
mov
inc
dec
push
call
shl
bound
int
push
adc
pop
xchg
in
fucom
sarl
mov
adc
jmp
adc
cmp
jbe
decb
fisubs
lea
addr16
int3
xchg
mov
push
pop
jb
mov
mov
sub
sub
sbb
les
xor
imul
shrb
int
lods
nop
xor
in
inc
ds
sbb
sbb
fdivrl
cmp
les
mov
lods
xor
or
push
sub
out
mov
sub
out
or
push
addr16
push
ljmp
add
addr16
imul
jns
movsl
loope
ficoms
pop
call
adc
lret
dec
mov
imul
movsl
pop
mov
xor
and
jne
mov
mov
pop
or
inc
je
out
add
and
popf
pop
outsb
xchg
mov
xchg
loope
incl
cli
fs
leave
mov
xor
jmp
dec
scas
xor
lahf
cmp
push
cmp
xor
and
idivb
sub
mov
les
roll
sahf
inc
popa
stos
jnp
lods
fidivl
aas
js
jl
xchg
outsl
sbb
movsl
push
jb
orl
add
repz
mov
or
cmp
or
insb
add
dec
scas
mov
cld
and
lcall
repz
and
imul
jmp
imul
ljmp
out
xor
fldcw
lahf
inc
gs
leave
pop
xor
outsl
mov
popa
pop
leave
and
sbb
lcall
pop
sbb
mov
gs
xchg
dec
lret
lcall
in
in
add
ret
sahf
xchg
shll
cmp
hlt
or
push
jg
mov
loop
cltd
jge
subl
xchg
mov
in
ficompl
cmp
xchg
jmp
pop
or
ja
in
mov
shlb
mov
fcompl
popa
cs
lahf
add
and
jle
xchg
out
pop
xchg
aam
and
subb
fwait
stc
and
call
cmc
cmp
leave
aad
xchg
jnp
mov
jnp
xchg
xchg
lods
mov
pop
sbb
or
pop
ret
inc
sbb
cmp
inc
xchg
nop
xchg
or
movsb
sub
inc
jmp
mov
xchg
mov
negl
mov
popa
lea
pop
or
popf
adc
xor
push
sbb
sbb
movsl
cmp
cmp
out
sub
sbb
adc
scas
mov
xchg
sbb
cmc
shlb
mov
icebp
push
leave
push
lods
sub
mov
push
nop
enter
dec
jecxz
insl
int
imul
fistps
dec
xchg
sbb
jae
mov
jne
lsl
fcompl
pusha
mov
xchg
inc
dec
imul
test
cmp
fdiv
xchg
int3
or
insb
test
dec
sub
mov
jp
inc
add
scas
pop
push
repnz
inc
icebp
in
lds
xchg
mov
cwtl
lods
lcall
mov
punpcklwd
pop
cmp
or
fimull
pop
push
or
cmp
inc
push
test
sub
imulb
mov
leave
clc
adc
cmp
out
das
ja
cmc
jb
test
mov
ja
outsl
mov
stos
in
adc
mov
jno
dec
loopne
mov
call
adc
stc
into
in
pop
mov
xor
xor
push
jo
or
mov
push
push
ja
dec
fwait
mov
jge
inc
lret
inc
mov
add
lret
pop
mov
aad
mov
gs
mov
push
cmp
bound
pop
xchg
and
sub
nop
pop
sbb
push
pop
mov
push
xchg
pop
jl
sbb
dec
data16
pop
sub
cltd
imul
jo
mov
cmc
das
jge
lea
dec
xor
cmp
cmp
push
stos
sub
loopne
cmp
inc
mov
mov
jb
sub
sbbl
lret
xchg
pop
sbb
imul
notl
out
inc
outsl
icebp
jl
xlat
or
xchg
scas
adc
adc
ret
ret
gs
mov
lret
iret
cwtl
cltd
hlt
insl
cmpsb
in
pop
add
pushf
jo
mov
ljmp
jae
lds
dec
xor
add
hlt
jle
scas
jecxz
add
das
dec
adc
lods
or
nop
sub
popa
add
lods
stos
sub
insb
in
or
enter
orb
adc
dec
pushf
repz
es
ja
popf
adc
insb
lahf
fdivrs
inc
out
popf
pop
testl
popf
mov
arpl
sub
inc
cltd
cmp
mov
mov
sbb
jae
pop
test
sarb
push
loopne
mov
adc
mov
nop
sub
mov
xor
xchg
rcll
jecxz
adc
inc
jo
or
inc
sbb
push
movsb
mov
mov
clc
inc
sub
in
jge
fimull
pop
push
inc
mov
cmpsl
push
icebp
fucomip
insl
aas
inc
cs
sti
repz
xor
test
pop
stos
sbb
fcomip
cmp
enter
aaa
not
xlat
sub
mov
ret
not
daa
mov
mov
jo
push
sbb
scas
loopne
push
dec
in
sbbb
int
scas
pusha
or
ret
jbe
mov
mov
pop
mov
cli
ss
jp
jp
fists
orl
pusha
in
fistps
stos
or
ja
adc
lret
inc
pop
hlt
shlb
add
incb
cli
arpl
scas
cmc
clc
push
repz
mov
nop
and
pusha
mov
idivl
mov
adc
xchg
std
cs
into
stos
rol
xchg
jo
ljmp
cs
pop
stc
ljmp
mov
sub
pop
mov
lret
clc
nop
in
sbb
test
fstpt
and
mov
mov
push
in
bnd
mov
xchg
sbb
das
sbb
orb
pushl
dec
cltd
and
out
shr
les
rcrb
stos
rcrl
sbb
jb
sub
jb
sarb
sbb
out
fiadds
or
jp
xor
scas
fxch
dec
adc
dec
out
mov
dec
dec
shl
xchg
xchg
sub
leave
dec
xor
adc
or
arpl
cmc
and
imul
cmp
mov
jne
sub
call
jle
xchg
sub
pop
ljmp
jb
and
or
mov
mov
pop
push
pop
cs
test
inc
lock
xor
and
loop
loope
inc
scas
inc
sbb
stos
mov
bound
popf
lcall
xchg
mov
add
push
pop
push
aaa
das
sub
mov
push
mov
inc
xor
cmpsl
test
mov
cwtl
inc
lods
shrl
daa
jge
es
sub
dec
add
pop
inc
push
mov
popa
push
aam
xor
lret
scas
dec
add
sbb
inc
lret
in
or
ja
shll
fdiv
mov
sbb
or
clc
mov
mov
xchg
sub
cmpsl
cmp
mov
lods
ja,pt
in
push
or
loopne
das
insl
ret
bound
mov
mov
mov
fdivrl
mov
push
and
sbb
mov
imul
add
pop
insb
aam
pop
push
mov
insl
mov
xor
and
in
inc
mov
pop
rcll
jne
pop
or
hlt
shlb
rep
outsl
rcrb
pop
jge
add
loopne
out
gs
cmp
mov
leave
adc
mov
xchg
cli
xor
and
into
sbb
insb
inc
sub
popa
dec
fstps
loope
enter
or
sub
dec
push
movsl
adc
mov
std
push
jecxz
lret
sbb
xlat
lcall
sbb
repz
pop
dec
out
jl
mov
jl
dec
shl
cwtl
in
sbb
dec
bound
xchg
cmc
pop
pop
cmp
int
loope
or
scas
dec
in
rcl
test
ret
mov
cmp
mov
rolb
adcl
icebp
mov
and
out
mov
loope
lods
mov
fcoms
adc
fmull
dec
shll
jmp
data16
ss
test
ss
mov
lret
insb
outsb
stc
je
call
into
push
lret
arpl
loopne
aas
xchg
adc
push
in
xor
into
ss
and
add
lcall
dec
ljmp
sti
test
adc
imul
fwait
add
push
shrb
scas
add
das
arpl
fisubrl
xorl
mov
addr16
ss
add
shlb
xor
cmpb
push
rorl
repz
dec
fdivrl
in
pushf
out
push
mov
xor
outsb
stos
inc
outsl
xchg
jg
cmp
sahf
loopne
sbb
push
mov
jle
int3
mov
inc
cli
mov
jge
fsub
add
cmp
stc
mov
js
lods
pushl
rorl
dec
dec
nop
xchg
mov
test
ds
push
mov
jp
jne
xchg
aaa
fdivs
test
pusha
and
loope
rcl
addr16
mov
xchg
and
xchg
dec
mov
adc
xchg
jl
mov
rclb
adc
jecxz
iret
xchg
lcall
movswl
add
jp
pushf
pushf
sub
mov
shl
mov
jnp
dec
lret
dec
and
ljmp
fistpl
arpl
inc
push
les
icebp
push
cmp
mov
or
mov
mov
jl
jnp
dec
adc
pop
adc
decb
daa
push
adcb
in
int
shll
jecxz
mov
aas
dec
adc
aas
fdivrs
sahf
pop
add
sti
xor
test
inc
in
nop
cli
sbb
pop
dec
data16
xchg
sbb
jb
jb
pop
mov
mov
xchg
inc
adc
mov
xchg
pop
push
lods
dec
push
mov
push
test
xor
andl
sbb
leave
pushf
loop
pop
flds
lock
testb
push
xchg
dec
pop
insl
mov
cld
pop
dec
jns
popf
iret
nop
xor
lods
repz
xor
out
out
es
mov
scas
por
push
dec
mov
insl
or
push
insl
pushf
pop
ja
sbb
mov
push
dec
in
pop
xor
mov
lret
pop
jecxz
outsl
adc
push
in
xor
push
or
shrl
xchg
xor
add
enter
daa
cmc
loop
aas
fst
push
jnp
bound
icebp
les
mov
mov
add
imul
test
les
dec
inc
psrlq
push
and
mov
stos
sbb
movsb
jle
pop
push
push
movsb
pop
mov
mov
movsb
jno
mov
mov
inc
loopne
cs
mov
icebp
sub
lcall
adc
fsubl
xchg
hlt
sbb
adcl
jbe
popf
stos
mov
fs
dec
jl
iret
jnp
sub
and
pushf
dec
or
sbb
jge
xor
sbb
xchg
es
call
std
mov
lods
jae
idiv
lods
xor
loopne
xor
or
mov
das
cmpsl
push
cmp
dec
sbb
xor
lods
fwait
icebp
nop
rorl
icebp
out
xchg
mov
lods
lds
stos
dec
pop
pop
das
shlb
cmp
out
pop
test
daa
sub
mov
sub
sub
lods
bound
pusha
aaa
jle
addr16
jbe
inc
mov
or
push
cli
xchg
fildll
cmp
in
xor
iret
cmp
xor
das
push
and
dec
roll
frstor
jge
mov
jae
jne
inc
pop
lds
nop
add
cld
inc
fwait
testb
pop
mov
jb
movsl
outsb
pop
xchg
cmpsl
shl
ret
pop
cmp
and
int3
or
sub
shlb
xchg
xchg
mov
xchg
sar
lcall
leave
adc
and
rclb
loopne
dec
xor
pop
cmpsb
xchg
jne
xchg
ja
jmp
in
xchg
stc
xchg
mov
dec
sub
dec
sbb
cmpsb
insl
lahf
fisttpll
adc
shll
xchg
imul
sbb
sub
xorb
mov
hlt
xchg
push
or
addb
mov
pop
pop
or
xchg
and
cmp
subl
sub
sahf
pop
fwait
cmp
dec
inc
jno
add
sub
xchg
mov
mov
add
loopne
jp
cmpsl
push
inc
out
jns
jno
sbb
jnp
in
pop
repnz
sbb
andb
inc
dec
iret
hlt
into
add
leave
sbb
dec
push
or
xchg
cmp
popf
cmp
sub
mov
and
fwait
shll
pop
clc
aad
shll
and
repz
and
dec
add
and
jne
ds
adc
pop
sbb
push
clc
popf
mov
inc
or
movsl
dec
mov
sub
sub
ss
mov
xlat
jmp
rorb
mov
xchg
in
dec
cs
rcrb
icebp
pop
sahf
adc
xor
faddl
fistl
cmc
aas
pop
out
add
jecxz
inc
cltd
or
sbb
cs
xchg
cmovl
pop
and
clc
inc
push
lds
xchg
outsl
pop
dec
sbb
mov
inc
in
pop
cmp
pop
sti
sarb
stc
mov
xchg
xor
xor
movsb
pop
add
aam
fisubs
pop
and
sbb
jnp
or
jae
pop
hlt
jl
out
sbbl
nop
sarl
add
cmp
mov
clc
and
jbe
dec
mov
clc
jnp
out
pop
adc
add
bound
daa
es
mov
rcrl
int3
and
pop
lret
or
mov
sbb
mov
mov
sub
into
test
jp
lea
adc
out
cmp
mov
sbb
ret
std
addr16
ret
push
jae
and
out
call
mov
mov
call
sbb
mov
mov
imul
mov
ljmp
test
or
in
insl
pop
loop
scas
in
lret
pop
cwtl
push
mov
mov
add
jne
inc
aaa
test
xor
stos
or
lods
dec
fwait
dec
add
testl
jecxz
mov
lcall
cli
je
iret
mov
add
add
jl
out
in
xchg
jecxz
stos
sbb
ja
mov
xchg
arpl
pop
xchg
or
cmpsb
push
int3
push
adc
jae
add
inc
sti
add
int3
and
shlb
lea
rclb
dec
inc
add
adc
or
sbb
outsb
sbb
int3
mov
pop
inc
mov
ljmp
or
mov
push
ljmp
mov
mov
dec
addb
jnp
or
es
rorb
mov
out
xchg
mov
shr
test
into
ja
popa
popf
jae
test
aam
in
loop
mov
stc
dec
and
imul
mov
pop
cmpl
inc
jno
add
out
mul
fcmovb
loop
cli
mov
psraw
stc
xchg
mov
xchg
xor
repz
or
cmp
pop
int3
das
out
xor
or
mov
in
lods
xchg
add
push
push
in
lds
and
adc
stos
pop
addr16
scas
fs
stc
fs
fs
adc
dec
movsb
push
jp
adc
push
data16
fcmovu
xchg
repz
cli
push
int3
lret
daa
call
scas
jb
cmp
gs
imul
std
jb
mov
dec
adc
int3
push
mov
mov
push
loop
mov
scas
sub
rorl
sbb
cmc
add
mov
scas
mov
lret
add
or
mov
push
xchg
aas
xor
mov
dec
dec
mov
xchg
xchg
dec
fdivp
cmpsl
xor
cmpsb
mov
jle
shr
or
xchg
pop
add
inc
jb
pop
repnz
mov
pop
adc
scas
jge
push
push
push
sbb
and
push
out
call
in
sub
arpl
fisubrl
dec
int
xor
jge
cmpsb
or
ret
lret
data16
xor
or
inc
gs
sbb
jl
cmpsb
js
mov
in
sbb
cmp
push
lahf
je
out
fbstp
add
adc
mov
adc
ja
xor
je
test
jbe
leave
and
add
fdivrl
imul
inc
mov
gs
aas
fcompl
in
dec
loop
neg
and
mov
ret
inc
iret
dec
or
fstpl
mov
xchg
inc
cmpl
in
inc
ficoms
xor
jnp
das
inc
orb
add
and
stos
loop
xchg
pop
in
loopne
sbb
aaa
mov
sub
mov
imul
scas
xor
rcrl
mov
dec
je
repnz
xchg
xor
das
or
lea
add
pop
xchg
lret
in
outsb
adc
lea
pop
scas
nop
xchg
and
jne
aad
lods
outsl
mov
mov
stos
imul
inc
stos
sbb
push
inc
jle
add
jp
mov
push
call
inc
push
dec
push
jmp
jne
shlb
lock
sbb
cli
xchg
faddl
cmp
mov
test
jnp
dec
mov
dec
les
sbb
mov
sub
cli
lea
push
movsl
adc
test
mov
scas
mov
mov
pop
mov
cmpsb
mov
push
and
ljmp
add
mov
cld
imul
sahf
pop
call
add
cmp
hlt
aaa
std
jecxz
pop
sub
mov
mov
rorb
or
test
in
pop
and
push
push
sbb
pop
movsl
sbb
adc
xor
aas
mov
mov
lret
jnp
pop
sbb
lds
mov
cmc
push
arpl
xor
add
nop
decb
mov
inc
inc
xchg
leave
into
pop
mov
add
and
fcompl
into
stos
pop
mov
cmc
int
mov
mov
andl
or
addr16
outsb
jno
jle
pop
xchg
scas
adcb
ret
cmp
aaa
add
jne
popf
arpl
sbb
pop
insb
mov
popf
roll
adc
push
js
pop
out
test
movsb
or
addr16
pop
test
movl
xchg
les
outsb
sti
inc
mov
ss
mov
push
js
test
inc
scas
cltd
cmp
inc
and
push
rcl
loop
test
jle
cmp
lds
leave
jge
inc
xchg
jb
mov
addr16
xor
ret
mov
sub
psubb
sti
mov
inc
inc
ljmp
std
aaa
out
in
out
sarb
in
cmpsb
mov
incl
cmp
adc
and
mov
mov
fs
adc
fstpl
add
jno
mov
repz
adc
sbb
push
dec
call
and
pop
cmp
cmp
negb
pop
das
outsl
stc
call
in
adc
daa
mov
lods
dec
popl
int
or
je
xchg
jb
adc
sub
cmp
outsb
pop
cmc
popl
sub
inc
cmp
arpl
movsb
ficoml
inc
jmp
aaa
stos
sbb
inc
cld
clc
cmpsl
cltd
cvtps2pi
mov
add
adc
cmpsb
sbb
push
lcall
mov
mov
mov
outsb
addr16
test
xchg
ja
adcb
and
test
sub
add
jg
imul
jp
cld
mov
sbb
mov
add
jg
xchg
add
mov
xor
cmp
shr
push
mov
loope
sbb
imul
fdivrs
lea
scas
lcall
cld
out
jge
rcrb
fcompl
dec
cmpsl
jbe
fwait
call
lret
stos
xchg
pushf
sbb
aam
daa
aaa
mov
jg
xchg
lahf
fisubrs
nop
dec
arpl
mov
das
cmpsb
hlt
mov
femms
clc
or
cmc
jge
sbb
pusha
mov
aad
push
cld
inc
negb
aam
or
dec
sub
loop
fistpl
mov
lods
xchg
subl
scas
lret
sbb
push
sbb
movsb
jns
sti
sbb
arpl
dec
scas
in
xchg
add
repnz
mov
in
into
fstps
cmp
inc
stos
or
xchg
sbb
or
insb
outsl
sub
cltd
sub
pusha
data16
mov
push
jb
jb
push
cld
dec
xchg
mov
dec
js
cmpl
lea
cmp
outsb
mov
xorb
sti
bnd
xchg
aaa
push
fcmovu
xchg
mov
call
and
xlat
jge
mov
in
ret
lret
push
mov
mov
add
arpl
or
mov
out
cmp
imul
inc
adc
cmpsb
lret
lret
fdivs
inc
jb
outsl
or
xchg
fdivrs
scas
cmp
jge
rol
sub
or
cmp
inc
clc
jp,pn
push
in
pop
inc
mov
loop
add
call
add
dec
xchg
cmc
sbb
lret
data16
pop
sar
mov
mov
push
std
sarl
das
out
les
ret
dec
push
mov
inc
xchg
and
adc
sub
aam
loopne
std
shlb
sbb
dec
adc
sbb
mov
out
mov
pop
inc
xchg
lods
mov
xchg
hlt
stos
andb
insb
jne
fmuls
loop
cmc
cwtl
push
jae
xchg
out
xchg
dec
fwait
cs
in
sub
mov
gs
sub
pop
out
sbb
mov
fs
or
incl
jl
pop
jle
jle
jo
push
das
and
jnp
sbb
pop
dec
hlt
into
out
test
xor
loop
adc
int
add
clc
sub
loopne
jecxz
and
in
and
das
add
adc
jo
cld
ret
pop
xchg
add
push
cld
aaa
pop
or
aaa
and
repz
ud0
mov
dec
outsb
cmp
add
into
mov
loope
add
out
das
or
push
hlt
insl
adc
adc
cltd
int
push
rol
and
into
leave
test
sar
cli
test
mov
jg
rorb
sbb
ss
inc
and
xchg
adc
dec
lock
dec
xchg
aaa
dec
idiv
and
or
inc
pop
pop
pop
lods
fs
jge
cmp
mov
cmpsl
mov
das
mov
decb
inc
fmul
xor
or
out
push
adcb
dec
and
xchg
orl
jg
inc
enter
xchg
and
dec
dec
leave
cmp
push
lods
jnp
push
jo
and
and
das
outsb
jmp
cwtl
push
mov
into
out
pop
add
loopne
add
xchg
and
mov
cmpsl
add
les
inc
aam
mov
cmp
xor
add
xor
movsl
xor
stos
adc
outsb
xor
ja
int3
dec
lcall
dec
lds
inc
xchg
adc
jne
out
jbe
or
push
outsb
mov
popf
clc
mov
mov
sub
ss
sub
inc
sahf
aad
mov
into
pop
or
lret
iret
pop
jns
mov
mov
pop
bound
nop
xchg
cld
cli
imul
pop
or
lret
mov
push
inc
or
xchg
into
test
leave
pop
cmp
mov
test
or
push
dec
push
jp
mov
rcrb
mov
loopne
push
xchg
xchg
aas
cmp
icebp
in
cmpsb
sbb
stos
jmp
and
lods
scas
inc
jge
mov
rclb
mov
loope
pusha
mov
add
mov
dec
icebp
mov
jge
cmp
jbe
push
xchg
hlt
add
andl
in
jl
inc
inc
test
icebp
data16
dec
push
movsb
stos
or
cmp
mov
mov
mov
dec
mov
xlat
sbb
ja
cli
js
mov
icebp
cmp
and
scas
int
fcmovne
clc
inc
fmul
ljmp
xchg
dec
mov
adc
dec
and
mov
jb
outsb
jmp
cmp
sbb
mov
xchg
addb
addl
mov
mov
icebp
insb
loope
pop
lret
js
add
mov
js
mov
lea
je
mov
mov
popa
pop
subb
push
loope
pand
cs
and
ffree
push
in
inc
stos
mov
js
push
fidivrs
fidivl
in
adc
sbbl
mov
sub
rclb
jo
mov
int3
sarb
adc
aaa
aam
scas
shrl
cltd
cwtl
xor
xchg
insl
cmp
push
jns
dec
fcomps
xor
inc
int
push
xchg
data16
mov
jmp
shll
test
ljmp
popa
cmp
stos
rclb
enter
inc
pushf
test
inc
pop
cmp
cwtl
cltd
sub
js
mov
cmp
mov
cmp
cmp
mov
stos
jmp
push
fldcw
adc
ss
call
sbb
xchg
sahf
cli
fsubrs
push
int
dec
call
push
das
add
test
adc
pop
add
or
lahf
leave
xor
or
fsubrs
ljmp
adc
ljmpw
fidivs
jmp
enter
add
mov
outsl
std
sahf
or
aam
xor
cmp
sarb
and
dec
popf
pop
add
in
stc
loop
add
fucomi
push
jl
test
cmp
aam
pop
jbe
dec
lret
pop
or
xchg
cmp
pop
js
jl
sahf
or
push
pop
sbb
mov
sar
dec
jp
xchg
cmpsb
mov
jo
sbb
dec
inc
mov
xor
lods
negb
mov
jbe
inc
imul
inc
mov
push
or
mov
inc
inc
add
mov
dec
outsl
jns
and
daa
mov
lret
jno
cmp
fbld
push
push
cmpsl
add
pop
pop
lahf
movsb
jns
push
sub
mov
dec
insl
fistpl
loopne
mov
cltd
pop
in
inc
xchg
loop
test
adc
inc
xor
mov
test
je
push
pusha
mov
out
add
ljmp
int3
dec
int
mov
aaa
mov
test
sbb
out
push
fsubs
cs
popa
lret
add
jbe
loopne
pop
pop
addr16
pop
pop
mov
push
jnp
mov
xlat
addr16
ds
leave
add
mov
inc
pop
or
cmp
mov
movsl
aad
dec
sub
push
orb
loopne
or
mov
rcrl
sub
leave
cmp
call
pop
int
jae
inc
pop
sbb
lret
popa
mov
icebp
adc
cld
pop
mov
dec
mov
cmc
inc
pop
push
push
cmp
frstor
pop
stos
sub
mov
das
mov
xor
add
pop
nop
cmpsb
lock
dec
mov
cltd
bound
cmp
pop
loopne
cmc
jp
and
pushf
jecxz
mov
cmpl
pop
push
mov
xchg
mov
xchg
jge
sbb
jne
xor
adc
inc
dec
fmull
pop
mov
mov
imul
xchg
cmpsl
mov
repnz
shr
push
mov
sbb
push
sahf
into
jb
cltd
jb
dec
call
leave
aad
lods
sahf
lods
xor
data16
aad
jg
inc
fistpll
mov
in
iret
lret
ljmp
fsubrs
lods
cmpsl
sbb
mov
insl
jns
jmp
add
mov
push
xchg
push
je
aam
into
in
add
pop
rorb
adc
mov
popa
push
je
xor
push
das
pop
mov
sbb
add
into
jge
ret
push
ret
adc
mov
repnz
jno
enter
cmpsl
neg
aaa
add
mov
inc
mov
or
outsl
lds
xor
push
push
ja
fdecstp
jo
lea
adc
aam
push
dec
add
movsl
enter
dec
in
sti
outsb
add
jmp
mov
lods
jb
call
sbb
or
cmp
cmpl
xchg
inc
stos
pop
loope
sub
push
sti
neg
push
testb
fnsave
lret
mov
inc
dec
cmp
movsl
cmp
push
jle
cwtl
popf
pop
sbb
or
lahf
fimuls
adc
sub
movsb
daa
xchg
insl
and
movsl
out
or
lcall
shr
inc
fstpt
out
mov
adc
push
bound
push
push
fildl
jg
dec
pop
add
and
adc
stc
enter
xor
xchg
adc
mov
pushf
sub
sbb
adc
dec
pop
xchg
mov
xlat
mov
mov
sub
inc
rcrb
cld
xchg
repnz
xchg
inc
xlat
xchg
jno
sbbl
lods
into
or
xchg
or
xor
clc
pushf
test
js
push
jnp
dec
cmp
cmp
jbe
cmp
sbb
popa
xchg
sub
sti
adc
dec
nop
inc
movsb
xor
mull
adc
call
and
aaa
mov
stos
add
cmp
data16
shr
scas
mov
xchg
loop
pop
mov
shlb
ret
mov
or
add
cld
jbe
push
sub
dec
push
push
pop
xor
mov
ret
test
in
scas
mov
or
out
les
xchg
mov
shll
mov
or
aad
lods
cmp
fisubrs
es
movsb
lea
add
repz
inc
xor
sub
iret
xchg
sub
imul
outsl
ret
inc
lds
test
sahf
pushf
add
dec
mov
ret
jle
mov
push
cmp
jmp
jmp
stos
daa
imul
inc
ds
lcall
pop
popf
xchg
inc
cmpl
mov
test
fidivrl
movsl
aam
lods
adc
jo
pop
dec
push
pop
adc
lds
mov
ret
fnsave
mov
shrb
inc
enter
jb
xchg
pop
out
xchg
stc
fs
pushf
adc
xchg
cmpsb
mov
mov
shrb
inc
out
jge
fsubrl
sub
jno
scas
daa
xor
push
push
inc
clc
jle
jle
shll
scas
mov
xorl
xchg
js
jmp
outsl
repnz
jno
pop
add
sbbb
aaa
loope
lods
in
cmp
mov
cltd
dec
and
outsb
xchg
sub
xor
sahf
mov
std
out
push
cltd
sub
je
cs
inc
pop
jne
test
jns
mov
mov
cltd
ja
xchg
add
nop
cwtl
mov
out
aad
enter
in
mov
out
sti
in
mul
lret
hlt
cmp
dec
inc
shrb
dec
pop
loopew
cmp
movsb
movsb
and
outsb
insb
mov
mov
cmpsl
sbb
mov
fwait
sub
aaa
and
leave
fmull
and
adc
cs
push
push
sbb
jo
inc
cmc
ljmp
int
lret
push
push
sbb
pop
pop
xor
lods
and
xlat
imul
insl
jg
xor
push
std
stos
fwait
dec
bound
js
cmp
push
outsl
loop
jo
and
xlat
or
mov
mov
arpl
jne
js
addr16
mov
xchg
adc
fisubs
mov
inc
lods
pop
rolb
cwtl
push
jns
pop
mov
sbb
mov
loope
rcpps
outsb
dec
jge
cmp
into
ljmp
sub
sub
hlt
add
inc
js
jecxz
lock
pop
sbb
push
or
shrb
push
sub
mov
in
repnz
lock
insb
lahf
loop
sub
mov
inc
notb
mov
add
pop
int3
adc
pop
jns
ds
leave
mov
jns
push
jnp
and
add
leave
sahf
in
mov
out
cmpsb
sahf
popa
dec
pop
divb
dec
dec
lahf
fdivl
ja
xchg
punpckhwd
nop
test
dec
dec
lcall
lcallw
xor
rclb
mov
cmp
push
into
add
out
adc
es
icebp
into
sub
fnstcw
in
stc
adc
inc
adc
push
pop
push
cmp
or
add
xor
dec
ss
mov
popa
and
mov
mov
ljmp
fcomps
scas
push
jo
aam
scas
or
dec
scas
movb
mov
repz
pop
std
adc
mov
shlb
daa
sbb
frstor
jg
mov
popf
mov
push
call
add
rclb
dec
sub
in
cmpsb
push
shll
fstpt
fsubr
push
mov
xor
mov
je
in
sub
mov
jbe
mov
and
sub
mov
shlb
push
sub
mov
push
andl
mov
enter
inc
jno
dec
test
mov
push
pop
cwtl
fldcw
dec
fmul
adc
sub
jg
fldcw
and
jns
je
hlt
aas
or
cwtl
push
mov
push
fdivrl
add
push
cmp
call
lret
dec
daa
add
mov
and
or
mov
nop
lock
movsl
std
stc
lret
mov
notl
pop
incb
and
addr16
dec
pop
ljmp
cmpsb
ror
mov
dec
jmp
std
push
es
push
pop
sub
mov
mov
out
lea
mov
jle
js
imul
repz
add
add
jns
or
jg
repz
adc
fldenv
push
cs
xchg
xchg
in
ljmp
add
jmp
loop
stc
jge
test
outsb
mov
lods
out
jge
loope
xor
arpl
add
lods
lcall
scas
pop
xchg
loopne
cld
and
or
scas
add
imull
pusha
xchg
inc
addr16
stc
jae
mov
or
adc
mov
or
jno
jne
cs
push
pop
dec
jle
mov
mov
sub
cmp
xchg
push
mov
mov
jg
mov
insb
inc
jg
sti
divb
xchg
lods
int
fwait
push
ret
sub
bound
mov
shlb
test
inc
and
dec
xor
xor
add
andb
push
icebp
shlb
cmp
jb
cli
in
daa
sub
stos
xchg
and
xchg
mov
cmpsb
pop
xchg
sub
movsb
mov
add
sub
push
nop
rclb
pop
dec
lods
adc
out
mov
ret
aaa
sub
dec
adc
or
aas
ret
mov
xchg
cmp
xchg
push
fwait
cltd
dec
lods
out
popa
mov
leave
dec
shll
push
gs
jmp
std
pop
xor
sub
ljmp
sbb
sbb
out
adc
mov
std
dec
cmp
add
stos
cmpsl
mov
pop
call
cltd
or
sti
mov
daa
aam
fidivs
popl
push
push
repnz
xorl
rol
pop
in
enter
inc
testb
push
mov
cmp
daa
sub
out
stc
push
cld
test
mov
cld
mov
cmp
push
bound
push
movb
push
dec
inc
in
push
mov
clc
mov
dec
sub
sbb
movl
cmp
mov
pop
mov
and
jg
fwait
lcall
lods
sub
mov
int3
addr16
dec
lds
loopne
dec
cli
popa
imul
jg
push
dec
push
add
fisubs
js
and
test
and
mov
pop
sar
push
xor
mov
push
cmp
pop
gs
sub
add
jne
aam
push
aaa
mov
scas
into
push
mov
push
lahf
rcll
xor
fimuls
std
jne
ds
sbb
ljmp
pusha
and
push
cmpb
je
fldt
lods
fstpt
or
adc
pop
je
mov
stos
sub
addr16
push
int
or
insb
xchg
cmp
mov
pushf
les
push
aaa
xchg
xor
lods
inc
dec
cld
hlt
dec
add
and
adc
lock
mov
ret
mov
hlt
dec
aam
notl
outsb
rcr
inc
push
pop
xchg
dec
push
xor
test
out
xlat
lret
sub
lret
sub
inc
fs
inc
cld
insl
xor
mov
mov
das
aas
mov
pushw
dec
and
push
dec
inc
shr
sahf
ljmp
sub
mov
dec
cmp
cmpsb
push
push
shlb
fcomps
imul
hlt
mov
andb
ljmp
cwtl
cmc
repnz
push
out
xchg
mov
mov
cmpsb
dec
testb
push
mov
mov
jb
push
mov
and
push
dec
add
sbb
dec
test
mov
sub
sub
jl
inc
or
add
sub
xchg
loope
shlb
je
gs
jge
inc
imul
fcoml
lds
dec
cmp
test
xor
cmpb
add
cli
bound
and
or
imul
mov
fbld
shlb
inc
pop
mov
ficompl
pusha
aaa
cmp
xchg
inc
insb
add
adc
shlb
int3
iret
cmp
in
xchg
aas
loope
inc
imul
add
and
add
aas
lret
int
rcl
sub
imul
xchg
repnz
pop
add
jne
shll
inc
out
loope
test
pop
xor
mov
xor
dec
adc
into
sub
jne
pop
sub
adc
pusha
xlat
dec
cmpsl
sub
lret
pop
icebp
ds
insl
mov
fwait
bound
ljmp
ret
cli
and
add
xchg
iret
enter
int
push
mov
out
pop
arpl
adc
movsb
push
insb
jle
xlat
stc
jl
mov
push
movsl
aad
xchg
dec
fbstp
loop
decl
push
pop
aas
cli
js
jl
jo
hlt
sbb
jecxz
pop
and
sbb
sub
mov
cmp
arpl
mov
std
mov
pop
test
dec
cld
adc
enter
dec
pop
outsb
orl
cs
sub
add
in
stos
lods
dec
jno
mov
mov
ds
aad
jnp
mov
jae
pop
shl
dec
cmp
mov
xchg
insb
mov
inc
roll
mov
fwait
sbb
rcr
inc
mov
aam
sub
inc
sbb
xorb
pop
pop
orb
push
aam
das
cli
mov
dec
popa
movsl
gs
in
or
mov
sbb
int3
jne
in
push
xchg
ds
jns
addr16
push
jp
cmp
lods
jl
push
push
shrl
int
jno
mov
out
js
rcll
ss
aam
xor
mov
sub
push
in
pop
fbld
adc
mov
lcall
add
ret
adc
dec
out
pop
fsts
int3
inc
dec
mov
lea
jne
cmpsb
mov
fidivrs
movsl
xchg
push
xor
fsubr
pop
mov
jle
mov
cld
bound
out
dec
negl
cmc
outsl
out
popa
jnp
cmp
push
orb
add
in
ficoms
adc
imul
lcall
out
add
fs
or
pop
pop
jne
cwtl
insl
sub
jnp
cmp
pop
loop,pt
mov
adc
cli
std
add
movb
inc
out
clc
into
cmp
lcall
xchg
adc
mov
xlat
hlt
cmpsl
iret
fidivs
mov
imul
imul
xchg
jne
xor
fwait
mov
iret
pop
iret
stos
lock
nop
fs
push
fcomps
cmpl
pusha
bound
pop
test
repnz
jmp
lds
add
mov
inc
cmp
xchg
mov
das
iret
jl
dec
mov
hlt
loope
adc
dec
push
gs
ficoms
xchg
sub
into
imul
pop
cmp
xlat
loopne
movsb
sub
add
arpl
mov
adc
mov
and
dec
clc
lcall
mov
jp
outsb
imull
or
shrb
mov
dec
in
je
jb
jo
or
push
push
fadd
test
orb
hlt
xor
sub
adc
cmc
rolb
xor
cld
lret
leave
das
or
dec
add
cwtl
mov
fldcw
jecxz
mov
sub
gs
mov
or
leave
adc
lods
outsl
mov
add
dec
jle
dec
mov
xor
les
push
aad
push
out
push
loope
call
inc
and
pop
inc
outsb
subl
adc
mov
popa
adc
fistpl
inc
add
addl
sahf
xor
xchg
or
mov
jl
lock
mov
lds
aad
adc
mov
inc
mov
cli
or
mov
sbb
mov
and
sarl
or
shr
dec
shlb
and
aas
subb
outsl
sub
xchg
xchg
mov
test
cmpsb
daa
aam
mov
inc
ds
sub
cli
cmp
lea
adcb
das
sahf
cmp
xchg
dec
mov
enter
inc
mov
flds
into
testb
push
or
cmpsl
cmpsb
sub
sbb
icebp
lock
mov
scas
mov
or
insl
prefetchw
or
sub
jb
cli
cmpsl
mov
adc
daa
sub
jmp
mul
cmc
lret
cmp
xchg
jl
mov
inc
push
lock
jno
in
ret
inc
adc
mov
mov
jo
adc
mov
fisubs
sbb
rcl
add
cmpsl
std
loopne
fmuls
fsubl
inc
adc
dec
cmp
xchg
cmp
rorl
sub
xchg
or
pop
jge
outsb
call
mov
sarw
movsb
popa
cmp
sub
mov
js
push
mov
hlt
ljmp
add
cmp
xlat
or
popa
push
sahf
inc
mov
jl
fstps
in
pop
cld
sar
cmpsb
jbe
jg
js
in
in
movsb
xor
push
les
scas
sub
push
xor
mov
mov
or
aad
xorb
and
mov
sbb
cmp
jno
sbbl
sub
das
xchg
fmull
jne
or
mov
cmp
xchg
movsb
lea
idiv
ds
mov
fsubl
pop
leave
movb
jge
lock
xor
add
adc
lret
mov
aam
mov
outsl
mov
xchg
jmp
inc
pusha
pop
add
adc
xchg
sbb
rolb
aas
sbb
test
rolb
inc
xor
xchg
inc
jl
push
notl
pusha
mov
cmc
xor
and
popa
ss
aas
popf
lock
iret
popa
xlat
imul
dec
fnstsw
sbb
jo
lea
and
lret
inc
inc
jp
enter
inc
fcmovnb
xor
gs
mov
aaa
sub
test
cmp
jae
sbb
push
mov
test
lret
popf
call
or
loop
cmc
pop
lahf
and
jae
pop
fsubrl
js
cli
mov
daa
mov
jl
ret
mov
arpl
xchg
es
lret
sub
int
push
mov
ror
jp
in
add
mov
sahf
fsubrs
fidivrl
inc
loopne
adc
les
ds
jge
subb
jb
mov
fldcw
cmc
fnstenv
push
outsb
sahf
xor
cmpl
outsl
fcoml
xor
js
mov
iret
add
push
push
adc
mov
leave
mov
in
mov
pop
jmp
pusha
cli
push
sbb
mov
pusha
mov
push
inc
push
repnz
push
mov
test
xchg
mov
in
fimull
cs
call
insb
sbb
not
mov
int
ds
adc
xchg
pop
shll
negb
jnp
xchg
pop
mov
push
hlt
cmp
sahf
and
and
dec
and
int3
pop
scas
xlat
negb
xor
lcall
and
lock
stos
clc
mov
jb
xchg
pop
mov
push
ja
das
out
jge
mov
xor
xchg
and
ds
adc
sbb
jge
xchg
and
out
stos
sub
pop
or
mov
pop
arpl
push
inc
into
and
inc
mov
ret
loope
pop
shrl
cmp
ds
cmp
sub
push
mov
sbbb
xlat
xchg
or
int3
sahf
fimull
add
or
jl
mov
mov
inc
sub
add
and
inc
je
cmp
jne
fwait
out
out
lret
fisubrl
outsb
or
mov
repnz
mov
adc
gs
mov
push
inc
add
stc
jge
mov
sbb
push
out
and
xchg
fcmovnu
mov
push
cwtl
inc
adc
jno
inc
ret
das
test
ss
cmpsb
or
out
jnp
sub
cld
xor
test
sbb
test
xchg
sub
adc
shll
push
addr16
mov
lea
add
fnstenv
in
push
push
jle
push
outsl
adc
push
sar
pop
adcb
mov
xchg
sbbb
xchg
xchg
xchg
icebp
inc
mov
cs
clc
and
insl
and
test
test
add
cltd
mov
and
in
lret
rcrb
or
cmp
test
inc
jecxz
mov
out
sbb
stos
pop
or
mov
push
mov
mov
push
sti
mov
inc
cmp
mov
cmpsb
cmp
xchg
mov
pushf
enter
mov
push
repz
and
push
inc
push
or
push
or
pop
fs
fwait
int
std
repnz
in
xchg
pop
xchg
movsl
int3
xchg
jbe
addr16
mov
xor
mov
shll
mov
jge
arpl
loope
sbb
subb
sub
fisttpl
pop
cmpsl
pusha
push
mov
aam
push
pop
cmp
push
call
in
movsb
hlt
mov
inc
cmpsl
and
mov
mov
adc
call
sahf
jmp
add
imul
dec
test
mov
and
pushf
ffreep
std
cli
pop
xchg
add
ja
cmpsb
push
jle
push
mov
mov
lock
subb
loop
push
sarl
icebp
mov
js
lods
dec
push
andb
xchg
es
cli
xor
dec
mull
xor
xlat
adc
ja
rorl
stos
std
push
ficoml
push
enter
inc
xchg
inc
sub
dec
ss
push
sub
mov
push
push
and
nop
cmp
sub
rcrl
adc
test
mov
jb
loope
mov
pop
push
xlat
scas
nop
xor
mov
dec
dec
mov
pushl
dec
xchg
pop
push
sub
outsb
wrmsr
pop
xor
mov
movsb
or
movsl
inc
jno
repnz
in
mov
scas
fwait
addr16
push
repz
push
jb
jl
jo
push
jge
pop
leave
push
ljmp
mov
jno
cld
dec
aam
mov
call
jg
or
jle
lahf
or
and
ret
ljmp
jb
dec
push
sahf
test
push
xchg
bound
jo
adc
inc
in
xor
adc
dec
aas
cs
mov
xor
mov
data16
ljmp
jo
and
je
xor
icebp
loop
sub
dec
adcb
sbb
jne
inc
add
lahf
das
addb
and
xchg
dec
xorl
mov
mov
iret
fidivrs
dec
push
lret
xlat
pop
mov
add
mov
cmp
pop
dec
loope
fs
xor
nop
jecxz
dec
fimuls
cmp
lret
mov
cwtl
stos
imul
mov
add
sbb
pop
add
fs
std
insl
stc
pushf
push
cmp
dec
fsubs
and
xor
xchg
mov
ret
sub
dec
inc
movsb
test
ror
jmp
bound
movsb
jmp
and
std
int3
jnp
out
testl
jnp
pop
dec
test
loope
add
insb
and
cmp
stc
adc
add
mov
cli
test
push
js
fucomi
pop
int3
leave
push
out
lcall
inc
out
lahf
sahf
movsb
fs
jp
scas
cwtl
push
outsb
cmpsl
lret
test
sub
pushf
push
movsl
cli
mov
xchg
test
sbb
xor
fmul
and
sarl
mov
push
or
addb
call
lds
in
or
cs
mov
and
sbb
and
or
jp
mov
sbb
stos
sbb
adc
adc
pop
dec
jnp
pop
cltd
xchg
or
or
cmc
js
inc
out
push
in
test
or
mov
lea
aas
or
xchg
scas
ss
cmc
addb
jmp
fcomp
xor
call
enter
les
pop
cmpsl
fdivrl
push
in
test
mov
js
jmp
leave
add
inc
jecxz
fistl
test
push
daa
mov
inc
jmp
dec
jmp
cld
cmpsb
push
jl
inc
or
lret
je
xchg
xor
sarb
in
xor
shll
nop
push
adc
gs
jns
pop
pop
shll
sti
pop
dec
mov
rclb
push
scas
icebp
adc
xchg
or
je
jge
xor
cwtl
push
sahf
arpl
jg
test
mov
or
icebp
scas
fistps
sub
ss
nop
jbe
sub
mov
shr
lock
scas
ljmp
dec
call
js
xor
sbb
fwait
xchg
sub
enter
lods
fldcw
mov
jle
out
popf
and
ret
cltd
ja
mov
xchg
cmc
or
sahf
and
sbb
mov
jns
dec
mov
addr16
movsb
xlat
dec
adc
sbb
scas
aad
mov
push
je
mov
dec
fildll
rcrb
sbb
add
xor
jp
pop
out
xor
dec
popa
jle
mov
jmp
faddl
and
cmp
jnp
lahf
xchg
add
xchg
mov
push
mov
sbb
orl
daa
xor
pop
push
or
dec
jmp
xor
or
std
cmpsl
adc
enter
mov
fldcw
mov
mov
icebp
jo
pop
adc
les
sbb
push
jge
jge
inc
das
iret
sbb
stc
nop
add
lret
sub
jecxz
jno
pop
inc
lods
ss
mov
je
xchg
dec
rorl
ljmp
and
hlt
pop
and
or
imul
ret
test
jl
pop
jmp
pop
outsl
push
mov
aas
fwait
bound
add
scas
or
jp
rol
jae
jp
lds
adc
pop
mov
ja
push
cmpsb
in
and
aaa
iret
inc
fstl
push
lcall
cli
imul
xor
xor
xchg
xor
fwait
lcallw
icebp
xlat
cmc
cmc
outsl
mov
and
mov
ljmp
out
xchg
or
or
movsb
imul
inc
mov
jo
mov
std
xchg
push
arpl
in
out
int
jae
inc
adc
adc
pop
mov
shll
jns
xchg
scas
mov
clc
pop
stc
sub
pop
mov
inc
sbb
and
inc
sub
and
sub
fdivs
je
inc
pop
imul
and
arpl
mov
fstps
inc
mov
adc
cld
test
inc
gs
add
push
fisubl
xchg
mov
pusha
lret
dec
mov
push
dec
into
testb
push
sbb
sub
in
mov
lret
xchg
pushf
xchg
jb
adc
push
and
imul
lds
cmp
cmp
rolb
aam
repnz
jne
or
rcr
call
mov
addr16
filds
cmp
cltd
das
cmp
out
dec
call
call
cmc
repnz
cltd
js
rorl
aaa
jp
insb
mov
mov
ljmp
push
into
jnp
int3
push
insl
mov
cmp
mov
cmp
xchg
mov
fistpl
loope
add
sub
daa
cmp
loop
pop
sbb
lret
insl
hlt
pop
in
xchg
orl
push
loopne
or
and
stos
aas
add
jle
movl
sub
push
ja
lret
add
movsl
nop
jmp
stos
pop
xor
fstps
incb
ljmp
sbb
xchg
loopne
dec
loopne
cmc
sub
xor
jnp
cli
jl
xchg
and
push
ror
inc
fcoms
ror
sbbl
imul
test
mov
pop
popf
mov
push
jge
out
sbb
incb
mov
pop
add
push
in
scas
sub
or
arpl
pop
adc
lret
loopne
int
sbb
mov
and
lea
sub
loope
mov
test
and
add
and
dec
les
pop
dec
mov
dec
push
or
sub
and
sbb
lahf
adc
sub
pop
outsl
rolb
mov
fnstenv
jnp
insl
in
push
movsl
pop
dec
mov
mov
mov
jmp
cmp
dec
pop
and
mov
adc
loop
lock
scas
enter
and
dec
mov
inc
xchg
testl
pop
fistps
jmp
add
jbe
xlat
add
pop
aas
cmpb
and
sbb
dec
in
sub
inc
aam
mov
cld
jae
mov
cmp
ja
mov
notb
imul
mov
mov
test
jo
mov
mov
and
pop
lret
xlat
imul
ret
add
adc
or
fwait
mov
push
in
insb
aaa
faddp
adc
inc
in
add
cmp
xor
xor
sbb
pop
sub
fs
loop
and
in
pop
aaa
addb
stos
nop
ds
std
mov
add
add
push
jb
jecxz
int3
sub
inc
sbb
repnz
mulb
nop
mov
pop
inc
movsb
sbb
jnp
mov
rclb
mov
sbb
imul
in
lret
cli
mov
ljmp
push
jl
cmpsb
imul
and
adc
daa
in
movsb
idivl
pop
ja
dec
ljmp
or
dec
loop
out
das
jge
push
mov
push
dec
imul
push
lods
jno
cmp
cltd
and
repnz
xchg
dec
stos
push
adc
xchg
sbb
arpl
test
or
mov
test
mov
add
dec
jbe
or
lcall
mov
cmp
outsb
js
sbb
mov
xor
pop
pop
add
adc
mov
movsl
jns
push
sbb
jge
fidivl
mov
scas
xor
mov
inc
cmp
popf
dec
out
cli
call
mov
push
mov
jg
add
xchg
jb
push
push
mov
push
or
push
mov
mov
mov
repnz
and
dec
xchg
insb
xchg
call
subl
xor
xchg
std
pop
out
adc
fwait
shll
dec
or
adc
out
adc
inc
adc
jno
mov
in
xchg
or
stc
and
xor
pop
xchg
pop
push
mov
loop
sub
in
mull
inc
lods
xor
dec
rorb
mov
test
and
fucomp
pop
es
mov
lahf
push
les
ror
lret
test
xchg
aas
cmp
pop
and
mov
xor
or
jecxz
hlt
push
cli
and
dec
or
ficompl
les
outsl
lret
cmp
push
adc
inc
pop
sarl
dec
nop
push
pop
sbb
sub
filds
lea
mov
jecxz
jno
je
cmp
out
mov
or
mov
js
neg
es
inc
popa
adc
mov
sub
mov
push
fstps
jo
lods
daa
dec
js
ret
bound
ja
push
shl
push
cmp
data16
lock
test
stc
push
cmp
xor
inc
imul
pop
jne
jmp
call
popf
insb
insl
inc
movsl
adc
or
cltd
mulb
mov
sub
call
daa
cld
test
mov
push
mov
mov
lret
cmp
mov
lcall
inc
and
mov
cmp
or
and
bound
or
cld
lds
pop
add
dec
pop
push
repz
int
or
subb
movsl
mov
pop
cmp
pop
jp
sub
xlat
cmp
enter
testl
cmpsb
adc
and
mov
jge
push
pop
sub
jecxz
mov
or
fadds
out
cmp
or
mov
push
adc
js
xchg
pop
jnp
aam
test
leave
xor
movsb
or
inc
daa
hlt
lods
aad
stc
out
xchg
mov
mov
in
cmpsb
iret
add
andl
insl
push
roll
cmp
cmp
bts
outsb
nop
jnp
xor
cs
call
mov
shlb
xchg
sbb
adc
xchg
push
mov
mov
inc
lds
xor
imul
mov
test
imul
test
mov
xor
push
or
loop
iret
xchg
xchg
inc
pop
lock
mov
es
fadd
pop
cmpb
jno
sahf
inc
test
sarb
jp
idivb
lods
movsb
push
jle
cmpsb
into
push
inc
arpl
mov
aam
mov
popf
cmp
add
out
pop
jp
popl
sbb
int3
dec
aaa
fisttpl
adc
sti
in
jle
clc
cmpsl
arpl
enter
mov
loope
mov
div
mov
mov
lds
xchg
popf
xchg
mov
cmpsb
xlat
pop
test
sub
stos
loop
repz
cmp
daa
inc
pop
cmp
ljmp
call
arpl
sbb
mov
add
mov
std
mov
cld
xor
fbld
out
repz
test
pop
lret
sub
arpl
scas
xor
icebp
inc
outsl
aaa
mov
mov
cltd
or
idiv
imul
push
fs
dec
mov
adc
imul
dec
sbb
ret
aad
and
or
loopne
into
pushf
call
cs
add
clc
lock
lahf
mov
sbb
cs
mov
push
ficomps
cs
mov
mov
nop
xchg
test
addr16
or
data16
shrl
insb
lds
xor
fisubs
jb
mov
mov
jnp
clc
loope
sarl
add
xchg
test
pop
xchg
outsb
mov
mov
pop
cmp
cmp
xchg
mov
arpl
sahf
movsb
inc
and
repnz
xor
jo
jnp
sbb
or
sbbb
jb
stos
outsb
dec
pop
cmp
lahf
add
pop
add
rorl
sarl
rcrb
or
mov
mul
cmpsb
scas
outsb
out
or
mov
int
adc
es
jmp
call
jl
hlt
lds
loopne
xchg
sbb
daa
bound
inc
xor
xor
ja
mov
lods
testl
pop
push
cmp
xchg
mov
imul
and
inc
mov
and
sub
cvtpi2ps
pop
mov
push
mov
mov
cmp
xchg
addr16
leave
push
or
pop
jmp
push
xchg
push
outsl
sub
lea
or
lds
add
or
data16
sbb
mov
inc
outsb
fucomip
cmp
inc
sub
mov
out
mov
dec
aas
add
push
adc
push
rcr
dec
xor
jo
adc
mov
addr16
cld
ret
ret
pusha
sarb
dec
xlat
and
int
lock
pop
je
pop
clc
mov
xorl
out
cmc
adc
lock
lea
imul
pop
xor
xchg
out
fisttps
cmp
imul
fdivrl
nop
mov
scas
sub
inc
movsl
out
mov
cmc
mov
push
fwait
lret
xor
or
sub
pop
ret
and
xor
fcmovnbe
xchg
push
and
cmp
xor
sbb
xor
push
jno
mov
push
repnz
cmp
out
pop
push
sbb
loope
push
xorb
inc
inc
nop
decl
fmul
cwtl
aaa
and
insb
push
movsb
fisttpl
adc
mov
cmpsb
out
arpl
fsubl
cmp
add
notb
movsl
fwait
or
inc
lret
xor
pop
push
mov
jbe
ret
daa
lret
pop
dec
sbb
mov
popf
cld
pop
mov
loopne
or
ljmp
dec
cmp
jmp
sbb
mov
sub
shlb
clc
subl
into
sub
incl
daa
test
out
jne
cmp
jge
cmpsl
jne
push
sbbb
gs
xchg
pop
or
jno
mov
movsb
cld
or
mov
fistpll
bound
dec
add
jmp
push
ds
incl
sub
movsl
call
pop
jmp
cmp
xchg
xlat
mov
mov
add
addb
insb
fwait
jnp
mov
andb
es
inc
ret
and
mov
inc
pop
inc
int
mov
psubw
loop
js
addb
leave
dec
test
mov
ljmp
sub
mov
lea
xchg
dec
ret
push
out
mov
adc
add
or
mov
cmpsl
pusha
shl
mov
stc
inc
aas
lahf
jbe
mov
rolb
ret
popa
addr16
inc
mov
add
les
sub
mov
mov
dec
xor
inc
shll
into
aaa
cmp
int
shl
jne
xchg
enter
jl
mov
ss
insl
xchg
cwtl
xchg
mov
push
xor
add
dec
push
mov
dec
xchg
ss
dec
sar
mov
loope
cmpsb
and
jecxz
mov
and
inc
mov
stos
sub
into
hlt
mov
dec
and
fildll
cmp
lods
lret
xlat
shlb
pushf
xchg
dec
mov
pop
je
fildl
nop
xlat
mov
cmp
aam
call
arpl
mov
jecxz
jae
sub
push
sub
push
fstpl
xor
mov
mov
fsubrp
mov
mov
scas
call
sbb
sbb
sahf
loopne
iret
movsl
dec
push
dec
ja
repnz
int3
mov
sub
mov
mov
call
cmp
mov
lahf
jnp
leave
test
xor
inc
fwait
les
cmovo
pop
push
test
out
xlat
imul
arpl
ja
ret
divb
lods
sub
lea
xchg
or
push
dec
fsubrs
mov
push
int
mov
push
xor
push
inc
or
scas
inc
cmp
mov
pop
dec
rcl
adc
lds
repz
mov
arpl
aam
mov
xor
rclb
mov
jle
sub
push
repnz
mov
or
mov
jne
pushf
inc
push
xorb
mov
xchg
test
movsl
stc
cmp
cmp
rcrl
push
aas
or
xchg
push
sub
scas
and
jl
ljmp
inc
insb
and
into
add
xlat
repz
out
loopne
mov
cs
loope
inc
ret
outsb
mov
cmovg
xchg
mov
int
mov
cs
into
xlat
cmp
movsl
sbb
mov
mov
or
xchg
sbb
mov
or
inc
sub
or
repz
push
adc
adc
lock
frstor
push
ds
fists
xlat
inc
int
lods
stos
sbb
lcall
jle
mov
jp
mov
int3
nop
dec
mov
jb
dec
push
scas
rolb
cmp
mov
cli
shlb
js
xor
lock
dec
out
sbb
mov
sbb
rorl
mov
stos
int
sbb
ret
push
pop
sub
jns
cltd
mov
fdivs
adc
fistpl
inc
mov
in
mov
shl
sarl
pop
nop
sbb
jo
test
cmpsb
bound
dec
xchg
mov
stc
insl
cwtl
and
sbb
scas
lret
jae
cli
lret
addr16
aas
mov
mov
mov
xor
mov
cs
lds
push
enter
loope
outsl
jo
adc
loop
adc
add
cmp
inc
dec
add
lcall
fsubrl
das
rorb
lds
push
test
std
pop
adcb
aaa
mov
test
xor
js
fadd
mov
ds
xchg
xchg
mov
adc
icebp
mov
or
dec
mov
das
xorl
cmp
fisttpll
ss
fldenv
jge
in
rcll
cltd
ljmp
pusha
xlat
andb
push
lds
nop
push
mov
pop
insl
fisubl
test
out
jae
adc
aaa
add
mov
and
stos
add
inc
inc
pop
fisubl
xor
ret
xor
push
fdivs
pop
add
in
cwtl
into
mov
movl
pop
inc
in
jne
xchg
scas
pop
in
das
inc
test
jnp
stos
push
jb
cmpsl
sub
lock
stos
sahf
cmpsl
sbb
popf
fwait
sbb
xor
inc
ret
mov
push
push
xchg
add
stos
adc
lods
mov
jne
jb
pop
lds
fwait
outsb
mov
push
mov
insl
in
lds
add
adc
dec
addr16
test
jge
jge
or
test
or
adc
pop
lds
sarb
push
fcmovbe
jns
adc
cmpb
dec
jb
sbb
in
fbstp
jo
xor
push
sbb
adc
repnz
pop
cmpsl
push
sbb
xchg
out
divb
jnp
push
push
xchg
push
jg
out
jno
gs
sahf
adc
sbb
lods
imul
jns
pop
das
xlat
lcall
nop
inc
fs
ret
xchg
cmp
cwtl
dec
jno
stos
dec
jbe
or
fistl
cld
xor
inc
mov
xchg
lret
arpl
jmp
fwait
mov
inc
add
lahf
imulb
pop
cmc
pop
xchg
jb,pt
sti
dec
push
jecxz
and
adc
mov
add
dec
es
and
pop
xor
jmp
dec
push
cmpsb
mov
test
test
imul
mov
jnp
pop
xchg
mov
bsf
xor
loop
xor
ficoml
add
movsb
add
xor
cmpsb
add
popa
clc
cmpl
push
repz
add
ss
outsb
stos
loope
out
loope
dec
cmp
inc
inc
mov
jp
add
cmpsb
adcl
push
arpl
outsl
xchg
mov
dec
daa
and
mov
into
dec
outsb
js
shrb
scas
push
les
out
js
rorl
mov
nop
pop
xor
arpl
pop
xchg
or
pop
fnsave
lcall
pushf
push
shrl
movsb
ficompl
pop
arpl
push
jg
inc
jae
inc
ficoms
xor
mov
adc
cmc
les
mov
sub
ljmp
enter
adc
into
or
lahf
std
push
adc
ds
mov
sub
daa
and
add
jge
loope
inc
pop
enter
sbbl
lods
hlt
call
mov
pushf
push
sti
repz
and
sub
and
mov
cmp
ds
jne
add
lods
push
xor
cli
xchg
lock
out
or
shll
cmpsb
clc
xchg
sbb
pop
divl
loop
out
push
es
rcrl
and
push
out
add
xchg
cmp
dec
mov
outsl
adc
outsl
repz
or
jo
jae
mov
or
lret
cmp
push
in
jno
enter
loop
pop
jae
scas
lcall
stos
pminub
les
dec
mov
jge
leave
dec
mov
call
inc
rorb
int3
push
xchg
popf
mov
loop
xor
scas
test
sub
push
ja
pop
mov
lock
fnstsw
push
dec
pop
dec
pushf
pop
icebp
add
jno
pushf
mov
or
insl
test
sbb
cmp
shll
rolb
std
insl
repnz
into
sub
and
addr16
and
pop
dec
adc
test
mov
or
mov
mov
pop
inc
xchg
test
inc
mov
mov
jbe
out
sbb
leave
sarb
mov
xor
popf
mov
jle
cmp
rcr
xor
repz
cwtl
je
inc
cmp
lea
sbb
push
inc
inc
push
inc
bound
inc
in
ds
or
mov
jnp
out
mov
adc
sti
xor
mov
fwait
ja
mov
int3
iret
cmp
fbstp
adc
pop
shrb
mov
shrl
in
out
nop
je
rcl
mov
cmp
xor
push
jne
add
jnp
or
cmc
or
mov
shlb
cmp
sbb
lods
push
add
jmp
pop
adc
or
aaa
and
scas
cmp
or
dec
xor
sarb
pop
idivb
mov
aam
fnsave
stos
inc
push
pop
or
pop
movl
loopne
ljmp
imul
jmp
call
mov
enter
js
push
ja
inc
test
pusha
or
movsb
aas
int
mov
adc
bswap
jmp
add
mov
jp
test
sbb
addr16
cltd
cs
sbb
ret
mov
mov
leave
ja
jg
leave
sub
mov
pop
movsl
cmp
arpl
cli
add
inc
jno
xor
shl
movsb
mov
mov
inc
das
push
adc
cld
sbb
fwait
add
mov
push
dec
xor
pop
mov
mov
mov
inc
adc
xor
dec
jecxz
into
addl
jl
inc
jae
cmp
popa
leave
xchg
add
mov
ret
pop
jge
jo
mov
fisubl
mov
sti
sti
fdivl
out
dec
inc
inc
popa
or
mov
push
mov
lds
xchg
ja
aas
lret
sbb
mov
pop
jge
mov
ljmp
in
cmc
mov
out
xchg
rorb
pop
xchg
jmp
pop
sarl
je
fwait
in
and
xchg
lcall
xor
les
imul
cltd
jp
or
xlat
or
icebp
js
fcompl
mov
mov
jnp
and
sar
int3
push
jbe
inc
int
and
lea
xchg
stos
push
gs
lods
iret
cld
scas
or
mov
insl
adc
jle
add
test
add
inc
gs
sahf
pusha
xor
std
xor
lock
cmc
lret
mov
aam
xchg
xchg
arpl
in
push
mov
rcll
jmp
sub
sbb
add
leave
inc
pop
fbstp
xchg
lea
inc
shrb
popf
ljmp
pop
repnz
mov
fdivrs
out
jmp
fldcw
add
adc
xor
cmp
inc
cmp
aam
xchg
pop
int3
jae
sbb
js
pop
sub
enter
popa
mov
jp
sbb
xchg
dec
inc
cmp
imul
inc
fdivl
int3
jns
into
outsl
lock
add
mov
push
xchg
mov
fisubrs
scas
repz
call
sbb
in
sbb
xor
or
andl
add
or
inc
ret
mov
sub
enter
cmp
cmp
inc
jle,pt
inc
cmpsb
stos
jge
push
mov
movzwl
jecxz
fldenv
pop
cltd
mov
fdivs
and
mov
or
fnstenv
dec
out
loopne
xchg
popa
jns
fldt
inc
ljmp
test
cmp
std
mov
sub
out
or
leave
or
loop
xor
adc
stos
fisubrl
repz
outsl
add
negl
pusha
lret
lods
mov
pop
insb
xchg
xor
or
popl
mov
cmp
sbb
push
cmp
and
test
out
outsb
jl
fistpll
sub
cli
adc
sbb
or
sub
xchg
loop
xchg
out
clc
leave
sub
shl
roll
cmc
nop
call
les
ja
scas
push
jns
dec
push
jmp
aas
loop
lret
es
or
ljmp
mov
push
push
cmpsl
stos
inc
into
in
call
fsubrl
cmp
ss
xor
fsub
add
ficoml
xchg
andl
jbe
mov
mov
insl
lds
sub
inc
mov
jl
sub
ss
imul
pop
das
jbe
jecxz
fsubr
pop
clc
popa
jg
mov
adc
or
test
testl
outsl
shl
enter
push
or
pop
jnp
cmp
jns
popf
loope
push
mov
mov
sub
leave
popa
mov
mov
add
jmp
jns
jne
pop
mov
ss
loope
or
jge
je
in
xchg
xor
addl
push
aaa
xchg
lret
scas
pop
cmp
dec
enter
jno
adc
test
fwait
or
pop
adc
fcoml
lret
xchg
jne
add
mov
jle
into
stc
pusha
fsts
dec
cmp
test
ret
dec
mulb
sahf
xchg
xorl
adc
mov
fnstenv
push
push
cmp
bound
negl
cmpsl
xor
xchg
xor
shr
adc
jne
rcr
addr16
pop
and
xor
jae
pop
pushf
es
lods
inc
fimuls
adc
in
jne
js
fsubrp
mov
pop
popf
cs
mov
adc
lret
nop
cmpsb
xchg
and
cld
rcrl
jg
mov
push
cmp
sbb
mov
cmpsb
mov
les
faddl
and
mov
mull
test
stc
mov
mov
lods
out
icebp
mov
pop
inc
das
add
xchg
jne
pop
out
jle
sahf
pop
aam
dec
cmc
mov
jl
lods
clc
icebp
imul
cs
dec
pop
add
sub
js
or
inc
push
mov
sub
or
mov
sbb
adcl
sub
mov
call
dec
aad
loope
fisubrl
sahf
shll
hlt
xor
and
jbe
loop
lods
sbb
in
pop
lret
mov
push
mov
cltd
fstps
icebp
mov
pop
fwait
jno
dec
andl
sub
insb
xchg
dec
ret
push
dec
and
popl
ds
ffreep
popa
cmp
mov
scas
fcoms
adc
cmpsl
pop
rorl
add
es
add
adc
bswap
push
int3
fildl
cld
push
aam
loope
jnp
add
bound
pushf
lock
fwait
mov
xor
outsb
leave
add
jno
adcb
dec
dec
fucomp
out
pop
dec
xor
std
andb
jmp
stos
ljmp
mov
mov
pop
mov
fld
out
mov
adc
inc
push
lds
in
cmpsl
in
and
out
fcmovnu
outsb
outsb
or
push
push
sahf
lock
xor
dec
ss
iret
jb
push
sub
mov
imul
dec
sub
aas
in
and
sbb
sbb
stos
jle
int
movl
inc
loopne
pusha
hlt
pop
mov
lret
pop
stc
fninit
lock
inc
aaa
notb
js
rcr
pop
jnp
fisttpll
neg
cmp
mov
out
add
stos
cwtl
or
test
out
nop
add
inc
cli
inc
sbb
repz
test
aad
int3
out
mov
lgs
pop
pop
fdivr
push
sub
add
mov
xchg
cmp
jecxz
fdivrl
leave
adc
idivb
stos
mov
test
mov
push
ds
addr16
movsb
lret
or
stos
pop
mov
xchg
mov
decb
jbe
jo
and
je
push
test
sarb
inc
jge
out
xchg
push
lds
sti
sahf
bound
and
dec
in
scas
js
rcrb
jge
mov
rcll
mov
es
clc
add
in
sub
mov
inc
xchg
cmp
test
addr16
pop
or
in
iret
xchg
lds
jl
push
arpl
xchg
push
aaa
push
pop
inc
in
iret
inc
ljmp
xchg
push
or
lock
and
push
test
and
mov
push
in
iret
scas
je
push
cmp
fnstcw
pop
add
adc
pop
cmp
lcall
lahf
out
daa
fistpl
std
inc
repnz
mov
fcoml
inc
inc
and
jmp
adc
xchg
out
imul
arpl
cmp
cmpsl
sbb
add
fcmove
ljmp
icebp
mov
push
jmp
push
stc
add
ret
outsl
fldl
shr
or
sbb
inc
pop
fcompp
sub
add
sbb
into
cmp
fadds
call
jb
or
and
loope
xor
add
push
mov
xadd
mov
inc
sub
push
cltd
xlat
dec
inc
arpl
imul
test
repz
inc
inc
jae
rolb
popa
in
lcall
mov
adc
nop
xchg
xchg
in
mov
pop
aas
inc
or
inc
xor
pop
out
push
aas
fprem
addb
mov
in
fdivl
pop
pop
lcall
sti
in
dec
imul
mov
push
sbb
pop
mov
add
and
mov
scas
ret
jp
sbb
or
sahf
push
inc
std
int3
lods
int
mov
sub
loope
sbb
lock
stos
ret
ror
add
pop
std
fwait
dec
xor
sbb
lret
roll
jno
mov
mov
xchg
mulb
sub
cmpl
sti
jo
ljmp
rcrb
jne
sahf
xchg
xor
out
push
mov
xor
mov
inc
mov
mov
pop
push
jns
mov
call
notl
sbb
lock
je
xchg
sub
scas
rorb
mov
les
rcrb
cmp
pop
jne
jnp
movsl
jae
xor
lods
mov
rorb
scas
jb
js
mov
or
add
fmull
hlt
sbbl
rol
xor
mov
inc
xchg
xor
mov
jl
pop
push
movsl
insl
sbb
scas
movsl
pxor
pop
jae
cwtl
int3
mov
out
hlt
or
mov
cltd
in
shlb
scas
sub
aaa
stos
in
push
in
mov
bound
pop
lahf
ret
or
inc
dec
fwait
loopne
mov
loopne
xor
xor
and
mov
in
lea
pusha
test
ds
inc
mov
daa
xchg
sti
fcmove
add
adc
ljmp
lea
leave
cwtl
repnz
lock
xlat
in
mov
out
mov
mov
lds
add
aas
xchg
inc
mov
sub
push
repnz
out
xor
mov
bound
iret
add
ss
movsl
mov
out
hlt
mov
sub
in
loopne
jae
inc
shll
iret
movhps
fs
pop
jo
cwtl
inc
cmc
fwait
int
jecxz
not
cmp
popa
scas
nop
dec
shll
shrb
iret
cmp
insl
movsb
mov
fldpi
rcl
xchg
jnp
sbb
repz
out
push
xor
inc
movsb
lds
test
mov
aaa
aam
mov
xor
xchg
out
xchg
mov
dec
pop
loopnew
fmul
cld
popf
sti
jbe
daa
cmpsl
and
push
push
jns
sahf
sub
inc
and
jae
xchg
test
test
pop
cwtl
push
mov
adc
pop
je
pop
sbb
idivl
push
fcomps
fcmovb
mov
jl
jnp
lahf
jl
mov
aad
imul
add
add
test
add
adc
cltd
mov
sbb
lods
mov
not
cwtl
add
sub
lock
mov
cmp
pop
add
mov
inc
and
movsl
or
outsb
xor
pop
adc
daa
fdivr
mov
movsl
xchg
mov
xor
lods
sub
mov
pop
test
cmp
jnp
or
in
pop
mov
inc
mov
ljmp
cmp
dec
aam
aaa
adc
mov
frstor
fstl
pop
mov
cwtl
push
cmp
xor
xor
lods
xor
lds
xchg
jge
xchg
sub
push
in
add
nop
push
and
mulb
test
and
imul
pop
je
sbb
and
push
adc
movsl
cmpsb
inc
mov
imul
mov
add
and
or
jae
pop
inc
mov
jb
std
sbb
dec
ret
dec
mov
add
andb
ds
sub
mov
jnp
sub
or
pop
inc
jnp
pop
test
addr16
lret
jle
sub
cmp
ds
int3
push
loope
inc
cld
daa
add
leave
imul
and
pop
rcrl
jo
jb
nop
mov
call
out
std
test
push
into
pop
xor
ja
push
mov
das
shlb
popa
shll
dec
push
sti
or
xor
sarb
imul
sub
stc
pop
sti
mov
push
push
mov
pop
push
mov
xchg
enter
fadd
mov
cltd
fs
push
push
inc
sbb
mov
mov
mov
out
cs
jp
in
dec
jb
lahf
xor
in
insb
and
jae
xchg
push
lods
cmp
imul
mov
and
mov
adc
mov
call
push
sub
xor
int
xchg
repz
mov
mov
scas
cwtl
xor
mov
int3
mov
xor
and
pop
dec
mov
std
inc
cltd
pop
imul
xor
pop
xor
mov
xchg
sub
movsl
lea
cli
ljmp
lds
mov
cmpsb
cmp
rclb
lcall
mov
and
add
dec
cmp
mov
in
inc
into
xor
jl
and
jbe
adc
cmp
rcr
std
push
ljmp
adc
cmp
leave
mov
pop
aaa
and
aam
cmp
adc
cs
jae
xchg
cwtl
mov
clc
cli
and
imul
aas
and
xchg
movsl
xchg
rclb
in
dec
outsb
adc
arpl
pop
sarb
lock
daa
jge
fdivl
cmp
push
jbe
lods
aas
adc
mov
cwtl
lds
cwtl
std
sub
lds
mov
scas
and
cmpsb
xchg
adcl
inc
testb
imul
lahf
sub
mov
cli
pop
ljmp
mov
cmp
cmp
ljmp
add
ret
fdivrs
and
outsl
loope
dec
jle
js
std
cs
inc
pop
fwait
push
ret
loop
inc
lahf
jbe
dec
pop
adc
sti
push
stos
les
push
loope
lcall
lods
pop
insl
sbbb
ret
aad
shlb
pusha
xor
lock
or
mov
dec
xchg
es
scas
cld
movlps
lods
adc
shr
pop
fs
xor
adc
dec
test
and
test
mov
push
jle
rclb
dec
dec
push
add
dec
aas
push
daa
jb
sbb
popf
mov
mov
aaa
or
adc
in
dec
xlat
mov
cmp
inc
test
cmp
mov
or
sbb
and
push
inc
inc
push
ret
std
inc
add
mov
or
fwait
mov
mov
jle
iret
push
adc
mov
movsl
cmp
jbe
popfw
aam
add
insb
fsubrl
pusha
sbb
ret
xlat
adc
xchg
xlat
gs
push
ret
jl
sub
shlb
xor
or
es
jbe
ficoml
int
lock
xor
pop
cmpsb
popa
and
push
leave
adc
cld
in
insl
xchg
mull
xor
fs
cmpsl
pop
leave
insl
dec
shlb
dec
ret
cmpsl
bound
jle
mov
mov
push
ljmp
pop
out
add
fwait
pop
push
dec
in
xlat
and
iret
fnstenv
push
insl
ds
and
mov
mov
arpl
enter
adc
cmpsl
inc
cmp
clc
ret
pop
pusha
aaa
and
push
sub
imul
add
jge
icebp
lods
mov
pop
icebp
push
sahf
aam
pop
aam
outsl
xor
sbb
mov
ljmp
hlt
inc
jne
mov
adc
fidivs
cmpb
cmc
adc
add
fstpt
ret
sub
ret
jbe
add
cmp
in
aaa
jb
mov
push
scas
int3
or
lcall
lods
mov
inc
xchg
out
jbe
mov
aad
mov
add
mov
adc
jmp
jns
sub
sub
mov
mov
fldl
jmp
mov
and
ficompl
xor
xchg
scas
imul
jo
test
test
fabs
push
inc
ljmp
arpl
filds
in
pop
daa
xor
adc
fmulp
adc
mov
in
lea
mov
invd
inc
js
mov
mov
mov
xor
enter
inc
das
push
test
xchg
adc
adc
dec
inc
sarl
mov
adc
mov
adc
int
aad
in
inc
add
mov
and
stos
mov
push
mov
cli
pop
bnd
xchg
das
div
xor
push
pop
mov
cld
push
dec
jbe
xchg
pop
inc
nop
mov
repnz
push
jb
push
lock
adc
xchg
scas
arpl
mov
out
sahf
ret
jmp
arpl
test
ljmp
fstpl
mov
add
cmp
xchg
xchg
test
xor
dec
sti
or
je
je
lods
call
mov
je
inc
bound
std
jnp
sahf
xchg
fsubl
rol
xchg
sbb
xor
fsubs
push
cli
xchg
dec
rsqrtps
pop
mov
idiv
mov
ja
push
jmp
mov
scas
or
pusha
in
xor
fs
lret
jnp
popf
push
std
xor
jns
adc
sbb
pop
or
mov
scas
xor
divl
aas
xor
fadds
fs
decb
cmpl
shll
add
mov
fsubp
fildll
adcl
pop
repz
push
push
push
movsb
out
jo
pop
mov
adc
sar
es
int
lods
es
pop
movsl
loopne
pop
pop
mov
xchg
fldcw
in
fstl
insl
cmp
in
xor
imul
push
sbb
adc
cwtl
pop
ret
inc
loop
adc
les
mov
jl
xlat
cltd
sahf
movsl
xlat
mov
cli
into
outsl
aaa
mov
popl
mov
mov
xchg
inc
dec
push
insb
fisttpl
dec
push
sbb
dec
gs
sbb
shr
mov
adc
pop
jb
pop
push
lahf
pop
sti
mov
lock
mov
fs
scas
jae
out
jle
xchg
or
daa
pop
movsl
inc
mov
push
loopne
popf
iret
and
and
sahf
xor
lods
call
mov
out
std
mov
inc
xchg
xor
push
mov
mov
stos
ja
adc
ret
sbb
leave
fidivrs
dec
repnz
inc
xchg
rcl
dec
push
xor
ror
aam
js
inc
in
sub
dec
and
test
in
xor
hlt
push
loop
sub
dec
repnz
adc
rcl
or
sub
test
cmp
cmp
push
pop
ret
sbb
filds
xchg
cmp
out
sbbl
adc
clc
cmc
jmp
lcall
movsl
loope
xchg
adc
divl
sahf
das
cs
lods
mov
xor
xchg
mov
dec
xchg
adc
jo
divl
xchg
add
push
roll
hlt
in
clc
and
mov
mov
fistpll
icebp
nop
addr16
daa
aaa
jecxz
mov
xchg
loope
ret
push
bound
pop
cwtl
fs
and
pushf
ret
adcb
sub
sbb
mov
outsb
jmp
and
addr16
pop
adc
or
leave
out
adc
ret
or
test
gs
sti
lcall
or
out
cwtl
lahf
out
fucomi
sbb
push
cmc
testl
jbe
fistps
imul
sbb
cmp
cmp
js
add
or
adc
je
jp
push
test
xor
scas
xor
xor
push
pop
stc
sbb
mov
lret
gs
jecxz
xchg
popa
lock
je,pt
test
lahf
sbb
adc
push
das
push
xchg
jge
repnz
fisubrs
push
aad
das
loope
jmp
outsl
cmp
mov
in
xchg
mov
aam
sti
insb
mov
sub
addl
jg
push
rorl
mov
xor
xor
adc
cmp
mov
mov
fcom
inc
xor
or
cmp
out
jnp
pop
mov
dec
or
outsl
lcall
push
test
sti
cmp
mov
xchg
fisubrl
mov
sub
mov
xorl
movsb
fsts
add
jns
lds
jmp
push
popf
imull
or
mov
loop
insl
movsl
fs
sbb
or
push
adc
push
sub
mov
mov
subb
or
roll
push
jp
lret
jae
sbb
cmpsb
mulb
mov
xor
ja
dec
lahf
and
outsl
cltd
jle
mov
call
jnp
pop
push
pop
xor
sub
ret
scas
jmp
jo
in
cli
aas
jge
in
push
add
sub
cs
les
sub
cmpsl
pop
cmpb
fists
lds
jecxz
test
loopne
dec
dec
adc
lods
scas
push
sub
movsl
cmc
push
sbbb
loopne
adc
mov
mov
adc
scas
add
ja
jg
and
add
insb
stos
outsl
iret
js
mov
stc
push
adc
xor
inc
nop
popf
enter
sub
ja
adc
xor
sbb
ljmp
mov
inc
ret
nop
push
cmpsl
cli
xor
fimuls
and
push
xchg
cwtl
mov
cvtps2pi
cmc
inc
dec
sti
imul
jno
lcall
cmc
arpl
add
dec
mov
inc
inc
data16
mov
push
push
in
mov
mov
jge
fs
fsubl
or
inc
and
lret
mov
repnz
repnz
shl
lock
cmpsl
cmc
push
insb
sub
jl
imul
sub
ljmp
mov
pop
dec
adc
push
push
mov
and
gs
dec
inc
incb
ret
rolb
xchg
pop
leave
scas
aad
repz
aas
cmp
xchg
push
mov
cmp
mov
inc
push
or
sbb
pop
push
lock
push
xchg
and
ret
mov
xchg
fdiv
pop
lcall
mov
inc
imul
pop
jae
scas
sub
xchg
adc
je
cld
cltd
jno
popa
cld
mov
pusha
inc
add
xchg
mov
dec
cmpsl
shll
fbstp
ret
inc
lods
lock
cmpsb
pop
sbb
or
and
push
push
in
push
mov
mov
xchg
cwtl
andl
loop
add
push
and
or
or
push
ret
or
jne
in
stos
jns
ss
or
mov
inc
pop
xchg
sbb
int3
add
ja
mov
push
pusha
sbb
enter
std
aam
push
jmp
into
add
pop
into
mov
out
add
daa
repnz
lock
fstl
les
jl
jmp
cmp
loop
xchg
mov
mov
fsubrl
and
sarl
add
repnz
mov
add
adc
and
pop
hlt
sub
cmp
pusha
cmp
lret
fcomps
fwait
cli
sub
mov
cmpsb
jo
jnp,pt
jmp
out
movsl
add
leave
xor
and
lds
icebp
inc
icebp
jge
loope
mov
mov
push
mov
idivl
scas
mov
or
or
dec
stc
jmp
inc
lret
fdivrl
xor
add
fwait
cmpsb
fs
arpl
ds
mov
sbb
add
push
push
adc
and
lods
lret
inc
xor
rclb
adc
mov
push
mov
scas
ss
clc
or
jecxz
jbe
and
aad
rorb
movsl
xchg
imul
pop
ss
sbb
out
imul
mov
out
xor
xchg
nop
je
and
test
test
sbb
imul
sti
stos
movsl
fildll
xor
ds
in
push
popa
or
cwtl
or
jl
push
movsl
sbb
push
dec
hlt
add
jne
cld
ds
jns
add
xchg
clc
insl
in
in
xor
add
push
ljmp
ja
lods
mov
iret
or
push
movsl
jae
push
daa
pop
cmp
dec
in
mov
nop
in
insb
cmpsb
push
sbb
or
pop
cmp
xchg
xchg
lcall
pop
ljmp
xchg
xchg
jecxz,pt
sub
ficompl
bound
xchg
mov
out
cmc
aaa
out
jae
stc
and
adc
data16
sub
popf
add
cli
popa
in
imul
fldcw
sahf
popf
pop
lea
dec
dec
insb
push
jmp
push
xor
pushf
les
ror
scas
fnstsw
movsb
daa
cmp
xor
dec
lods
or
xchg
popf
dec
ljmp
mov
cmp
and
sahf
and
jg
xor
push
inc
ret
jb
or
loop
mov
aaa
adc
push
pop
lods
inc
jnp
pop
xchg
push
inc
push
dec
cmp
mov
pop
dec
pop
mov
mov
lods
xor
xor
pop
rorl
out
adc
jle
adc
stos
lcall
shlb
jno
mov
das
pop
sbb
mov
int3
stos
cmp
xor
jmp
pop
test
dec
push
aaa
fcom
dec
and
popa
and
inc
cwtl
data16
xor
cs
push
icebp
mov
mov
add
add
in
shrl
testl
push
push
pusha
mov
push
aaa
fld
sub
jb
rclb
lds
mov
add
fdivs
mov
dec
hlt
xchg
outsl
rol
push
add
stc
cmpsl
movsl
cs
push
movl
pop
cltd
scas
rcrl
push
push
xor
and
push
icebp
and
jecxz
hlt
ja
ds
sbb
cmp
xor
jno
xchg
cmpsb
sub
xchg
movsl
lods
shl
or
out
fsubrl
stos
inc
push
outsl
out
sbb
adc
stos
mov
xchg
popf
adc
cmpsb
inc
insb
or
inc
sti
shrl
out
test
pop
mov
dec
add
sub
std
icebp
fdecstp
pop
xchg
ja
sub
scas
dec
xor
sarl
shr
into
loope
ljmp
sbb
pop
enter
xor
gs
inc
js
repnz
popa
mov
jns
pop
nop
and
ss
sub
into
out
mov
jbe
clc
arpl
arpl
outsl
insl
mov
push
loop
call
jecxz
sahf
loop
pop
loope
out
sahf
cmp
mov
ss
mov
dec
inc
sbb
and
es
cmc
out
orb
cmp
test
cmpsb
int
xor
xchg
and
mov
sub
movsb
mov
loope
pop
mov
xor
pop
jp
xor
int3
popf
shlb
popf
jns
stos
ja
push
sbbl
mov
loop
dec
decb
sub
leave
xchg
adc
pop
loopne
fs
pop
sahf
repnz
xchg
lods
xlat
fisttpll
subb
pop
pop
sub
adc
add
pop
repz
xchg
sub
cli
pop
add
stos
fs
dec
call
push
mov
divl
adc
inc
movsb
push
inc
inc
cmpsl
jge
aas
push
jae
test
int3
ds
adc
jae
mov
jo
xor
and
in
lods
xchg
stos
loopne
arpl
in
mov
cmp
dec
sbb
inc
mov
das
sbb
and
or
movsl
lds
xor
pop
ret
dec
mov
push
addl
fnstcw
pop
and
stos
fsubl
cmc
dec
fmulp
cmpsb
jno
jle
dec
jb
mov
push
adc
add
xchg
fidivl
ret
add
imul
xchg
pop
mov
or
dec
cmp
sahf
test
js
sub
rorl
inc
fs
fisubs
cmp
ret
lea
shlb
jp
mov
in
adc
mov
test
and
sbb
mov
fsts
leave
adc
pop
xor
add
call
sub
push
inc
inc
mov
out
shrb
mov
in
push
loop
push
jae
ja
je
out
out
dec
jb
sahf
xchg
imul
fiadds
pop
lds
das
add
add
mov
movsb
xchg
dec
out
inc
sahf
pusha
mov
cmpsb
xor
push
fmull
cmp
adc
mov
cld
xor
rcll
lahf
adcb
cmc
lahf
ds
repz
cwtl
shrl
xchg
call
cmpsb
sub
mov
leave
in
push
push
xchg
xchg
test
cmp
or
or
sbb
imul
or
sub
mov
enter
mov
mov
ds
fldt
adc
pop
ds
lahf
xor
cmc
imul
sbb
mov
pop
and
fbstp
mov
loope
add
and
das
cmp
xchg
int
jo
xor
inc
or
stc
data16
sub
lods
mov
adc
rorl
sub
xchg
xchg
mov
cwtl
in
daa
or
imul
loope
xchg
jle
into
sbb
scas
push
jecxz
pop
lods
shlb
sub
mov
mov
pop
push
in
pop
fidivrs
xchg
inc
mov
jecxz
cli
outsl
xchg
or
notb
add
adc
lret
mov
in
or
sub
gs
aam
mov
lea
sub
dec
lock
imul
jp
lret
jns
and
lods
push
jno
xchg
psadbw
xor
repnz
add
fbld
jg
xchg
fldcw
push
arpl
in
lods
mov
mov
xchg
jbe
push
push
in
cs
lahf
fisubs
jne
pop
loope
and
jle
fmuls
cmpsb
sbb
jle
and
sbb
jg
add
inc
fmuls
adc
out
push
add
lret
jl
adc
fmuls
ss
test
push
or
popf
and
outsl
call
mov
push
mov
pop
mov
mov
js
das
jg
out
pop
mov
cmp
icebp
cmp
fwait
into
sbb
aaa
insl
fists
sub
insb
clc
jnp
xor
orb
sahf
sahf
popf
ret
hlt
scas
sub
lret
or
mov
sbb
mov
roll
pop
sti
fcmovne
dec
dec
add
insb
add
mov
mov
es
jecxz
outsb
mov
fisttpl
sbb
dec
scas
pushf
xor
sub
inc
scas
addr16
movsb
js
push
clc
out
inc
sub
call
out
loope
in
iret
push
fcomip
roll
pop
dec
leave
sub
or
push
add
lret
pop
jge
gs
std
mov
std
add
test
cmpsb
sub
vpmovmskb
bound
jp
jbe
movsb
outsl
add
int
cmp
les
adc
adc
stos
in
jp
inc
pop
lret
pop
mov
jae
sar
sbb
sbb
adc
ljmp
sub
cmpsb
stc
std
adc
stos
negl
adc
or
loop
stos
or
sahf
xchg
fwait
pop
mov
pop
es
shll
add
xchg
mov
daa
stos
daa
push
cmp
sahf
and
in
dec
out
out
sub
mov
dec
and
or
popa
jge
andb
push
into
push
jmp
pop
out
arpl
adc
mov
cmpsl
cmpsl
jecxz
in
mov
jbe
test
mov
or
or
and
xchg
add
out
insb
orl
ret
test
cld
push
push
pop
pop
or
int3
arpl
mov
cwtl
mov
adc
cmpsb
ja
adc
inc
js
inc
sahf
rcrl
scas
mov
add
fildl
testb
nop
arpl
aaa
cmc
pop
fmulp
push
lret
mov
cwtl
add
aaa
jo
mov
jno
cs
push
cmpsl
ret
fwait
inc
xchg
mov
das
ja
leave
fldt
filds
inc
and
xchg
sbb
testb
xchg
daa
data16
inc
add
fdiv
out
xchg
sahf
sbb
mov
mov
movsb
add
loop
fwait
lahf
cli
pop
cld
xor
out
pop
rol
enter
xchg
or
fsincos
pop
xor
sub
and
mov
insl
ja
jecxz
test
loopne
pusha
lds
imul
clc
jg
cltd
cld
movsl
loopne
inc
xchg
cmp
xor
ret
andb
ds
sbb
shlb
pop
mov
add
xor
fisubl
mov
or
leave
pop
outsb
into
vcvtdq2pd
mov
push
mov
jne
jbe
pusha
lock
push
sub
push
gs
popa
dec
cmp
test
dec
sbb
in
test
xor
addl
and
xor
sbb
add
test
mov
or
decl
es
inc
cmp
sub
xchg
pop
sbb
mov
mov
mov
adc
jecxz
xchg
xchg
sarb
inc
imul
cmpb
clc
bound
fidivrl
aad
sub
aas
mov
int
adc
aas
pop
test
stos
pop
mov
push
imul
sub
fnstcw
and
jo
scas
loop
jge
push
in
add
mov
aam
push
pop
cmp
mov
mov
orb
adc
sbb
xchg
jne
dec
inc
mov
out
mov
repnz
and
mov
xor
or
addr16
sub
jns
push
repnz
into
mov
aas
mov
dec
adc
scas
and
sbb
outsb
orb
pop
mov
cmc
out
mov
stc
push
mov
cmp
fisubs
xor
arpl
cmp
cltd
iret
jp
add
test
mov
movsl
or
insl
dec
hlt
je
cmp
sub
adc
sarl
jnp
mov
jnp
sbb
jnp
in
cmpsl
cmpsb
icebp
xchg
js
pop
adcb
bound
dec
mov
outsw
push
aad
and
jp
js
aad
out
sub
imul
fwait
lahf
cmp
pop
dec
mov
jne
push
cmpsb
jb
inc
xchg
add
icebp
pop
or
bound
ret
mov
mov
hlt
mov
sbb
mov
or
std
xchg
in
add
out
jns
in
movsl
ja
push
ja
mov
add
jno
inc
dec
sbb
cmp
xor
push
jl
ret
shlb
push
jmp
fimull
insb
lahf
daa
push
insb
insl
sbb
in
lcall
and
in
popa
aas
mov
cmp
mov
jb
jbe
push
sbb
push
dec
sub
lahf
cwtl
addr16
mov
mov
push
pop
shr
sbb
mov
repz
pushf
jnp
adc
xor
int
loopne
orb
sarl
mov
cmpb
push
add
call
push
push
fsub
cwtl
mov
je
jmp
adc
mov
push
xor
cli
adc
mov
test
daa
mov
jge
aaa
push
scas
movsb
scas
mov
adc
xor
xor
or
adc
and
sub
lock
xchg
int
push
bound
outsl
or
int3
fwait
mov
mov
xchg
inc
cmpsb
imul
add
mov
popa
xor
inc
xchg
popa
xor
imul
inc
popf
cmc
aas
lret
idivb
out
sub
fsub
sahf
cli
js
fimuls
iret
cmp
or
or
mov
rolb
sbb
mov
sar
mov
or
pop
lea
adc
sar
mov
fcmovnb
mov
inc
insl
test
mov
xchg
mov
add
mov
dec
mov
xchg
inc
adc
dec
push
and
jp
lods
sbb
cmpb
xor
cmp
loopne
loop,pn
add
mov
cmp
enter
hlt
mov
pop
nop
adc
mulb
sub
jmp
xorl
mov
test
icebp
push
adc
jg
inc
mov
jne
sahf
and
lahf
popa
fmuls
jmp
cwtl
xchg
jne
mov
adcl
xor
inc
push
sbb
or
cmc
xor
out
aam
mov
andl
push
rep
jne
mov
mov
pop
pushf
mov
cs
jg
push
mov
jp
mov
mov
mov
mov
push
lds
in
add
ds
adcl
xchg
dec
mov
inc
sbb
cltd
arpl
or
fnstcw
pop
and
cld
mov
scas
test
dec
pop
jg
int
push
cs
add
mov
inc
mov
pop
cmc
neg
mov
push
out
mov
repnz
je
push
xchg
leave
adc
inc
les
cmp
pop
cld
mov
mov
testl
inc
into
test
cmc
in
add
push
ja
xor
fdivs
movsb
jmp
mov
rcll
mov
push
out
dec
lret
xor
ljmp
es
xor
stc
in
fwait
sti
inc
int3
mov
push
inc
mov
dec
lods
inc
mov
test
inc
bound
cmpsb
adc
cmp
xor
push
pop
mov
dec
punpcklwd
or
inc
sbb
sbb
mov
xlat
lea
jl
cld
cmpsl
decb
loop
push
fptan
mov
test
and
inc
lock
mov
lcall
loopne
outsl
pop
jo
push
sahf
adc
push
sahf
das
sarl
jge
xchg
in
xchg
imul
dec
loope
inc
ret
add
mov
stc
mov
pop
pop
push
ljmp
pop
pop
mov
xchg
sti
insb
pop
dec
jg
xchg
xchg
fucomp
pop
testb
cwtl
xchg
call
ljmp
dec
adc
mov
ret
sbb
inc
cmp
insl
xor
jo
mov
or
mov
mov
cmp
lret
cmpsl
jl
inc
rcll
out
lret
cmp
jo
hlt
fisttpl
pop
sub
daa
adc
addl
sub
aad
call
pushf
js
and
lret
es
xchg
pop
add
dec
sub
cmpsb
and
jle
inc
aad
sbb
out
int3
dec
jmp
xchg
push
inc
push
xchg
dec
inc
push
jecxz
dec
jo
cmp
aas
or
dec
inc
into
mov
sbb
loop
outsb
sbb
ret
loope
inc
movsb
fnstcw
addl
rcrl
mov
xor
ljmp
lea
repz
fsubs
lret
sub
out
in
and
jle
in
xchg
lock
addl
add
push
mov
in
mov
sbb
ret
sahf
and
push
lds
jb
ljmp
and
movsl
pop
push
mov
jecxz
xchg
enter
cli
in
pop
xor
add
orb
insb
outsb
adc
adc
sub
mov
cltd
jp
xacquire
lret
add
cmc
mov
mov
push
ds
mov
in
cwtl
adc
test
lods
scas
adc
outsb
mov
hlt
adc
shlb
sub
push
out
add
jg
addb
fwait
loopne
dec
push
int3
mov
rcr
les
ljmp
lods
repz
ljmp
dec
out
aas
cmp
lods
sub
dec
push
arpl
je
sub
jp
push
pop
xor
adc
roll
cltd
pop
repnz
sbb
add
jbe
pop
and
add
lret
stos
push
jp
mov
test
push
insb
xor
fdiv
stos
ret
push
cltd
jbe
adc
adc
pusha
mov
dec
jl
incb
dec
sarl
mov
push
mov
add
cmc
pusha
jp
xchg
outsl
mov
fldt
pop
xor
cld
popa
int3
lds
xchg
es
out
cld
sub
xchg
mov
sub
jnp
jb
ljmp
rclb
cmpsb
mov
sub
call
ret
mov
frstor
mov
dec
sub
jbe
adc
clc
mov
sub
out
lock
int3
mov
test
push
sbb
daa
fidivrl
ljmp
cmp
nop
sub
mov
cmp
in
sub
fisttpl
push
hlt
sbb
sbb
repnz
ficoms
dec
mov
push
dec
or
mov
sbb
adc
les
rcl
lcall
lods
andb
push
sub
push
pop
int3
ret
ficoms
fs
pushf
out
mov
xor
push
mov
dec
nop
sub
dec
fsubrs
jmp
outsl
aam
rcll
cltd
ds
adc
dec
mov
inc
xchg
cmp
stc
mov
and
insl
rolb
mov
pop
or
pop
and
int
mov
push
bound
in
push
je
xorb
pop
or
mov
push
push
sbb
in
xchg
sub
int3
sbb
push
add
mov
pop
and
leave
xor
push
push
jae
xor
std
mov
outsb
pop
andl
mov
daa
and
sbb
push
sbb
jo
loop
lods
stos
lret
jae
or
pop
bound
mov
lods
xor
dec
xor
jmp
adc
cmpsb
or
sbb
je
dec
pusha
lea
push
jns
mov
bound
out
inc
adc
adc
lret
call
fildl
dec
push
rcrb
mov
jecxz
scas
add
aam
sti
fcmove
jns
cltd
pop
ret
ret
into
xor
pop
cs
xchg
fwait
aaa
jmp
add
lods
mov
lret
fsubrl
sub
xor
negb
movsb
out
movnti
nop
cmpsb
add
xlat
fistps
cld
outsb
stc
fimuls
mov
push
ljmp
jae
add
cmp
adc
in
int3
outsl
insl
test
jp
jo
add
push
adc
jnp
and
cwtl
inc
jns
xchg
cmp
xor
mov
pop
adc
xor
and
retw
sub
jnp
push
mov
jne
in
adc
ror
out
jmp
mov
mov
imul
and
out
ficoms
sbb
inc
or
shrb
ss
test
shlb
vdivps
movsb
xchg
sub
pusha
daa
add
sub
sbb
pop
xchg
adc
push
xor
lods
adc
mov
rolb
fcomps
aaa
out
into
pop
jo
popa
dec
xchg
mov
or
push
inc
lcall
mov
inc
movsl
repnz
xor
notb
xchg
je
cmp
xor
pop
aaa
or
and
fistpll
sbb
mov
or
ja
cmp
add
out
mov
icebp
xor
lea
sub
fmuls
jnp
pop
and
movw
and
xchg
mov
mov
sahf
sbb
mov
dec
mov
shll
and
dec
push
fnstcw
cmpsb
or
sar
xchg
popl
jno
loop
dec
xor
insb
rclb
icebp
ljmp
stos
jecxz
xchg
mov
lock
sub
scas
jl,pn
ljmp
xor
adc
into
ss
loopne
pusha
adc
cmp
pushf
mov
pop
ds
and
pop
or
out
mov
adc
sub
popf
mov
imul
arpl
mov
arpl
je
pop
push
or
inc
test
inc
out
stos
nop
mov
dec
jns
repz
inc
cmp
jg
xor
sub
hlt
test
pop
dec
xor
sub
xchg
and
mov
aad
or
mov
mov
repnz
fnstenv
inc
sbb
inc
cmp
cmp
or
adcl
jo
inc
jl
cmp
mov
jp
scas
ja
add
ljmp
sahf
lea
xchg
sbb
dec
jae
xchg
iret
xchg
mov
icebp
les
mov
mov
mov
jle
out
jge
lds
in
jnp,pt
inc
pushf
pop
mov
lods
jb
out
pop
or
cmp
xor
test
adc
ffree
pop
pop
cmp
addr16
sub
andb
inc
icebp
dec
jno
cmp
cltd
cltd
push
dec
pop
dec
push
xchg
stc
lock
xchg
std
cmp
cmpsl
inc
mov
xchg
pop
jmp
je
dec
scas
test
and
stos
incb
shll
insb
ret
sub
out
xchg
rcr
ret
jg
xor
shlb
or
pushf
scas
mov
jo
les
xor
movsl
inc
sbbb
imul
jno
xchg
mov
lods
fimull
in
das
xchg
adc
xchg
popa
push
mov
clc
cmp
xor
inc
jne
inc
out
leave
jo
out
mov
inc
movsb
and
adc
push
cmpsl
dec
push
cmp
adc
jmp
dec
sub
add
in
pop
outsb
add
adc
lret
cmp
xchg
push
add
pop
mov
sbb
pop
cwtl
int3
mov
ret
inc
jmp
mov
shll
jae
sub
push
rcr
xchg
std
int3
popf
fcomps
mov
insl
cs
lcall
cmp
xor
push
xchg
ds
js
test
shl
push
jno
push
and
js
xlat
imul
fnstcw
daa
rcrb
dec
push
push
subb
jns
rcll
mov
adc
mov
mov
push
sub
add
xor
ficomps
jecxz
inc
inc
negb
xchg
cmp
xchg
pop
mov
test
stc
xor
insb
jns
divl
lcall
and
add
lods
mov
push
jnp
inc
hlt
mov
pushf
sub
jnp
sti
adc
lcall
add
arpl
loopne
rcrb
rcl
pop
mov
mov
push
push
lods
jo
adc
xchg
les
push
pop
adc
movsl
xchg
or
mov
scas
xchg
jne
fisubrs
daa
mov
mov
cmp
and
jno
jecxz
outsb
iret
pushf
jo
test
add
and
jl
pop
inc
cmp
loopne
lret
inc
in
daa
sub
dec
mov
in
aam
cmp
jg
scas
push
outsl
ja
andl
dec
inc
sbb
leave
in
sub
push
mov
sub
es
subl
mov
mov
pusha
jb
out
or
inc
cmp
imul
leave
aad
inc
and
movsb
jg
mov
in
jbe
out
hlt
popa
test
jns
jo
dec
lret
and
data16
pop
and
lods
fiaddl
ret
or
ror
push
and
mov
jg
pop
mov
sub
in
andb
push
lock
mov
mov
stos
iret
pop
dec
sti
mov
pusha
mov
mov
aas
xchg
ret
jne
ljmp
mov
leave
mov
sub
pushf
aad
pushf
cltd
cwtl
mov
nop
mov
ds
mov
rorl
inc
out
imul
xchg
pop
pop
mov
pop
jmp
nop
in
sub
mov
xchg
push
mov
dec
aam
stos
hlt
jg
jb
arpl
aad
mov
insl
pop
inc
add
pushf
or
mov
inc
sarl
fdivrs
lds
mov
adc
es
in
enter
mov
enter
dec
lahf
icebp
sub
insb
or
jo
repz
jge
lcall
lahf
or
mov
add
pop
mov
push
or
jl
pop
movsb
xchg
and
ds
inc
jecxz
mov
add
sbb
mov
mov
rclb
xchg
test
mov
pop
pop
mov
js
xor
add
adc
sub
mov
sub
divl
adc
pusha
jecxz
movsl
mov
push
mov
or
mov
icebp
mov
mov
mov
aam
fwait
rolb
lcall
in
out
inc
call
or
mov
mov
mov
mov
xor
loope
sahf
mov
or
test
clc
push
aas
push
mov
aad
dec
jmp
cwtl
into
inc
sbb
cmp
pushf
stos
cli
jmp
shlb
mov
adc
sbb
in
lds
jne
stc
rclb
sub
mov
push
mov
adc
jge
pop
test
xor
push
pop
push
sbb
inc
in
or
andl
dec
mul
push
cltd
push
add
pop
dec
rcrb
jb
dec
repz
mov
mov
pop
mov
rcll
bound
mov
inc
mov
cmp
jno
xchg
jnp
add
or
jp
and
jge
xor
lret
xor
sbb
stc
mov
pusha
fs
test
insl
fldenv
jno
leave
scas
push
sub
daa
cmp
ret
or
aaa
rorb
ret
push
and
mov
and
xor
loope
mov
jp
fidivl
pop
scas
loope
inc
les
sub
lock
sbb
mov
movsb
test
jb
mov
push
push
mov
lods
adc
mov
loop
jecxz
gs
jg
dec
ds
inc
sub
ficompl
adc
cwtl
enter
cmp
dec
dec
shlb
les
add
sub
aam
pop
sbb
push
aas
addr16
daa
int3
cmp
in
xchg
xor
outsb
dec
xor
xchg
jbe
push
rclb
and
push
hlt
sbb
clc
dec
loope
movsb
out
and
nop
fimuls
inc
jno
ficoml
mov
leave
jae
lds
cmp
insl
pop
jne
loop
incl
push
push
lcall
ret
ljmp
pop
dec
dec
adc
notl
dec
outsl
sbb
jbe
dec
stc
inc
lret
mov
cwtl
out
jg
icebp
loope
inc
push
inc
pop
rorb
xlat
pop
aam
cltd
and
loopne
inc
stc
xchg
add
fcmovnb
xchg
push
popa
sbbb
jae
out
push
and
or
adc
mov
movl
popa
ss
sbb
pop
mov
sub
jp
xor
mov
pop
adcl
fldt
test
sarl
push
pop
pop
cmp
mov
mov
hlt
ret
push
mov
dec
scas
jg
nop
test
mov
mov
lods
nop
sub
mov
scas
pop
lods
and
test
dec
aas
mov
enter
lods
mov
ss
mov
mov
pushf
out
push
xchg
xchg
inc
lds
mov
iret
inc
push
je
cmp
push
adc
ret
inc
into
pushf
dec
loope
cli
pop
in
mov
jnp
pop
stos
cwtl
aaa
pop
fildll
mov
sub
mov
je
loope
push
sbb
xor
sbb
out
sbb
iret
jge
aad
mov
pop
xchg
repz
mov
ja
jo
cmpsl
pop
stc
pop
or
loop
pop
les
pushf
ficoml
cld
or
out
addr16
jmp
scas
and
sbb
sbb
add
outsb
inc
add
stc
push
xor
aaa
leave
outsl
fiadds
daa
roll
cmp
mov
decl
xor
out
and
fldcw
push
loopne
cmc
gs
dec
pop
pop
xchg
push
sbb
mov
jp
cmp
popf
cmp
or
mov
cmp
lea
out
xchg
arpl
add
sbb
fwait
sbb
adc
fcmovnbe
outsl
cmp
inc
inc
sub
lds
lock
fimull
lods
mov
add
fstps
mov
and
icebp
add
mov
push
adc
cmp
xor
aaa
icebp
xchg
inc
test
test
call
stc
push
insl
and
lret
fstps
popf
mov
cwtl
stos
fadd
ljmp
cld
imulb
and
jp
into
xchg
lods
jnp
stos
cmpl
lea
inc
xchg
mov
mov
lods
cwtl
addr16
pop
adc
cmp
aaa
lcall
in
xor
divb
inc
gs
sbb
shll
lahf
or
addb
test
inc
mov
sub
insb
das
nop
nop
xchg
rcll
roll
jo
mov
mov
mov
xchg
pop
push
push
popa
add
mov
mov
jne
outsb
iret
dec
clc
mov
and
mov
in
inc
hlt
and
pop
add
pop
mov
gs
lods
or
out
jo
leave
jb
xchg
and
mov
push
dec
cmc
sbb
out
in
testb
test
fisubl
mov
icebp
testl
movsl
cli
push
mov
les
scas
lds
push
add
sub
cmp
push
ss
loop
sub
lods
push
push
imul
push
xor
cmp
push
cmp
and
inc
outsl
loope
adc
loop
mov
into
xchg
jae
push
call
repz
jne
pop
sbb
ja
nop
mov
pushf
sbb
add
or
or
adc
ror
sbb
jbe
cmp
aam
mov
scas
inc
cmp
jo
mov
js
imul
pushf
dec
daa
jnp
packssdw
lret
movsb
cmpsb
xchg
cmp
popa
sbb
ret
mov
pop
adcl
outsb
dec
or
push
test
push
xor
mov
dec
mov
in
mov
dec
jns
aad
shrl
insb
or
adc
pop
mov
push
push
mov
shlb
scas
enter
xchg
cmp
cmp
sub
mov
pushf
fiaddl
mov
arpl
sarb
xchg
insb
xchg
xorl
pushf
gs
imul
stos
gs
fisubs
mov
mov
sub
mov
mov
dec
or
xor
dec
bnd
mov
and
sbb
cmpsl
mov
fucomp
ret
mov
js
jo
mov
in
out
movsb
adc
mov
sarb
stos
nop
stc
pop
add
fsubrl
cwtl
xchg
jnp
sbb
lds
fldt
mov
and
cs
nop
jae
mov
jno
sbb
sbbb
xchg
fwait
movaps
xchg
xlat
push
inc
in
jo
jo
jl
mov
daa
inc
test
mov
and
pop
lds
pop
jmp
adc
les
lea
adc
les
pop
shll
ret
rolb
xchg
push
int3
mov
insl
sub
test
aaa
cs
pop
inc
pop
xor
lret
in
jo
mov
and
mov
pop
cmpsb
mov
dec
dec
pusha
inc
adc
out
lret
pop
cmp
sub
daa
xchg
enter
sbb
scas
mov
or
mov
pop
mov
xchg
imul
lret
fwait
push
cmc
sub
push
pop
mov
xor
pop
pop
pop
dec
out
xor
fwait
add
mov
mov
and
adc
mov
test
mov
sub
mov
push
daa
outsb
pop
dec
popa
in
jp
or
push
test
xor
subl
stos
xor
adc
ret
inc
cmp
fstl
dec
inc
adc
pop
pushf
lahf
or
or
out
pop
jle
pop
add
xor
adc
repnz
mov
mov
add
test
mov
mov
clc
fsub
lret
inc
lret
xor
ja
mulb
shrl
stos
push
mov
test
xor
add
sub
and
lcall
rcr
lret
hlt
mov
or
jo
pop
lods
iret
aam
rcrb
add
and
jo
mov
pop
jle
xlat
in
pop
ret
and
hlt
lock
scas
add
add
mov
ficoms
pop
enter
movsb
jl
or
mov
xchg
inc
xchg
ljmp
cld
push
push
insl
mov
jl
or
xchg
xor
mov
lods
xchg
xor
jg
sub
icebp
mov
in
sarb
mov
push
mov
adc
popf
cltd
mov
lods
mov
adc
sahf
movsl
mov
adc
fistl
jle
jmp
arpl
jns
mov
push
xlat
fcomps
loope
sbb
ss
adc
push
sbb
mov
incl
jns
mov
inc
popa
fwait
dec
mov
loope
outsb
jecxz
cmpb
fcoml
out
xchg
lahf
mov
pusha
and
pop
xlat
les
push
mov
jno
push
lret
sub
and
rcl
push
lods
roll
and
in
shrb
and
mov
pop
mov
ror
jae
mov
enter
jecxz
or
inc
stos
mov
xor
jg
shrb
xor
push
add
or
xchg
or
cmpsb
pop
lret
mov
or
or
mov
fimull
loopne
fcmovnu
jecxz
sahf
out
lcall
sub
inc
insb
xlat
mov
clc
xor
push
xor
dec
inc
in
cmp
mov
out
push
xor
dec
fxch
nop
arpl
ret
arpl
mov
sbb
stos
mov
pop
xchg
mov
mov
sub
sub
int
insb
lock
scas
stos
adc
and
mov
adc
sbb
cmp
cltd
aas
inc
push
insl
daa
int3
cmp
int
js
xlat
nop
mov
inc
dec
or
or
jp
pop
inc
outsb
inc
lahf
and
iret
inc
lds
ja
ss
or
inc
xchg
push
pop
adc
adc
mov
out
repz
jb
test
aad
popf
xchg
mov
in
jg
loope
mov
ret
lret
pop
cltd
xchg
mov
fwait
adc
jle
cmc
mov
sahf
lock
pop
and
push
pop
mov
push
loopne
out
roll
inc
loop
adc
inc
movhps
in
scas
dec
addr16
add
lock
in
popf
sbb
push
push
es
cmp
fst
jmp
mov
xchg
inc
mov
cld
and
jae
lret
cwtl
sub
adc
adc
gs
add
xor
add
fisttpl
and
in
out
sti
pop
xor
insb
call
xchg
scas
jae
add
in
das
lret
dec
sub
inc
ficompl
out
add
or
and
mov
in
lods
sbb
dec
push
sub
jmp
adc
pop
clc
push
fisttpl
push
cli
push
hlt
sbb
ja
pop
or
scas
inc
and
ljmp
adc
test
nop
cwtl
push
lods
add
fwait
clc
ret
out
clc
pop
inc
mov
mov
cmpsb
mov
adc
mov
and
cmpsl
adc
jmp
jns
and
icebp
imul
mov
mov
mov
xor
xchg
mov
enter
aad
in
lods
cmp
pushf
addr16
pop
or
or
inc
add
xchg
mov
faddp
mov
sti
and
xlat
xor
pop
ficompl
int
in
pop
loop
data16
xor
push
xchg
add
and
mulps
push
pushf
sub
push
int
movsl
leave
jp
adc
dec
ret
into
fdivr
out
jne
lds
sbb
sub
sub
imul
xchg
jp
mov
ljmp
stos
ljmp
fwait
gs
mov
xchg
pushf
mov
inc
int
mov
aas
arpl
das
sbb
popa
mov
or
xchg
iret
aaa
mov
ret
clc
pop
stos
lret
mov
mov
fsts
push
fildl
sbb
aam
mov
and
out
sarl
cmpsb
imul
add
sar
push
pop
mov
jecxz,pt
or
add
out
push
nop
add
lock
pushf
mov
js
out
pop
xchg
je
sub
fnstcw
lret
add
stos
mov
stos
dec
nop
xchg
add
mov
xchg
decb
mov
dec
lcall
mov
inc
test
jne
insl
aam
dec
das
fistpll
icebp
or
out
inc
loopne
aam
add
cmpsl
and
sbbb
inc
out
shl
mov
cltd
push
pop
sahf
mov
rolb
mov
dec
aam
mov
bt
movsl
jle
imul
push
stc
fildll
pop
add
cmp
xchg
cld
out
xchg
je
xchg
xchg
add
and
sub
pop
ss
roll
xchg
push
sbb
jno
cltd
jo
pop
iret
xchg
insl
cmp
inc
xor
icebp
ret
xchg
push
push
xchg
fnsave
ss
mov
and
jecxz
scas
adc
dec
sub
out
lods
mov
xlat
or
xchg
scas
jb
daa
push
xchg
ds
push
lods
xchg
lds
pop
add
adc
add
jne
cs
xor
arpl
jae
lahf
adc
inc
mov
dec
or
adc
adc
xchg
stc
cmpl
addb
xchg
xchg
adc
sub
push
push
out
sub
inc
cmc
cmp
shrb
sub
cmp
out
push
cmp
mov
lea
pop
mov
jae
dec
int
inc
test
mov
dec
pushf
add
je
call
sub
das
movsb
pusha
push
inc
xchg
subl
in
fnsave
dec
int
mov
sub
xor
repz
mov
je
lock
arpl
lcall
inc
push
sbb
push
mov
inc
scas
je
popa
fildll
loop
repz
xor
aas
and
mov
pushf
xor
xor
mov
test
aad
cltd
cmp
repnz
cmp
iret
sbb
out
cmp
insl
add
mov
mov
mov
adc
arpl
ror
fists
pop
in
jb
add
out
cmc
int
xchg
mov
push
cmp
push
push
and
inc
cltd
add
into
jns
nop
or
int3
repz
jp
aam
rorb
mov
pop
xchg
jge
mov
or
enter
roll
add
pop
rolb
jle
sbb
sbb
or
xor
inc
xor
gs
sub
sub
aad
dec
rcr
dec
scas
inc
fs
and
divb
scas
aaa
frstor
lods
inc
mov
insl
fldl
into
xchg
inc
in
jl
and
ret
dec
and
sub
ljmp
inc
pop
mov
add
cmpsb
cmpl
adc
jno
mov
mov
cld
and
jecxz
cltd
jns
lock
insl
nop
jne
iret
shl
rolb
jbe
stos
or
daa
jno
sub
out
jnp
adc
xlat
repz
adc
loop
notb
xor
test
out
xorl
addl
imull
movsl
add
sub
call
insl
lret
adc
fwait
sbb
push
or
insb
push
je
xchg
nop
jne
cs
jo
cmpsl
int
stc
xor
jmp
xchg
ret
cmc
lcall
popf
int
inc
cmp
xor
mov
mov
mov
jl
aam
cmpsb
sub
in
or
jg
fbstp
fistpll
loopne
ss
mov
out
pop
test
pushf
add
pop
out
sbb
sbb
arpl
jle
inc
movsl
pop
in
add
push
in
add
sahf
into
mov
jno
movsl
fadds
fdivrl
cmpb
fucomi
icebp
mov
mov
iret
mov
pop
jns
push
xchg
loopne
mov
push
int
pop
jl
xchg
cmp
and
cs
call
xchg
pop
push
gs
into
into
or
bound
pop
jae
stos
into
adc
test
jno
xchg
loopne
xchg
jo
xor
and
jecxz
scas
pop
pop
xchg
or
leave
push
cmp
or
dec
icebp
ljmp
insl
mov
in
mov
testl
jle
lahf
js
pop
imul
insl
sub
xchg
mov
cs
cmc
jo
test
movsb
outsl
dec
sahf
lods
icebp
std
adc
or
pop
inc
add
aad
loopne
sahf
stos
test
xor
sbbl
mov
in
loop
mov
sub
jmp
fcompl
loopne
or
mov
jl
lret
cmpsb
add
adc
cmp
shr
pop
sub
pop
ret
sbb
dec
movsl
stc
fwait
mov
mov
fs
pop
dec
sbb
das
cmpl
sbb
imul
or
and
cltd
std
cmp
push
adc
sbb
decl
fsub
vandnps
xchg
or
pop
fnstsw
fidivrl
jae
popf
xchg
daa
cmc
add
pop
shll
jne
mov
into
xchg
cwtl
dec
sub
in
dec
out
jp
xchg
and
inc
shll
nop
into
adc
mov
ss
andb
push
cli
push
sub
pop
mov
mov
xchg
aad
or
cmp
cmp
mov
cmp
pop
fistps
ljmp
sub
push
fbstp
lcall
jg
inc
ss
or
fnstcw
mov
lret
jae
stc
jmp
adc
lahf
push
sub
xchg
lret
push
loope
xor
cmp
or
xor
cmp
mov
gs
xor
clc
inc
idivb
jb
push
aad
inc
add
loope
cmc
mov
arpl
sbbb
je
shl
xor
dec
mov
stos
ljmp
fs
mov
push
push
stos
sub
mov
adc
ss
jmp
addr16
rclb
repnz
jge
jg
cmp
loop
dec
in
sar
bound
mov
stos
in
mov
roll
std
shll
rcll
movb
dec
xchg
and
test
loope
inc
popa
xchg
shlb
jmp
ljmp
xor
test
mov
cmpl
adc
mov
mov
es
xchg
stos
pusha
loopne
mov
adc
jp
pop
xor
in
imul
or
faddp
inc
out
jnp
adc
das
cmp
outsb
jnp
xchg
jnp
arpl
mov
jge
ret
cltd
imul
mov
mov
call
int3
mov
or
and
xchg
xchg
fwait
or
xlat
pop
sbb
or
mov
push
mov
insb
pop
rcrb
mul
repnz
popa
xor
pop
mov
mov
xchg
adc
cs
test
icebp
call
int
adc
int3
mov
shll
arpl
aas
and
or
jbe
aam
mov
stos
pushf
mov
lock
xor
and
data16
adc
sbb
and
mov
pop
fstpl
sbb
popa
xchg
cli
shlb
and
frstor
or
sub
fs
cmp
outsb
int3
mov
lods
loope
insb
pop
imulb
sarl
mov
mov
and
mov
and
cwtl
add
iret
pop
aaa
xchg
pushl
jecxz
mov
in
mov
mov
mov
and
mov
push
dec
nop
mov
xor
inc
pop
cmc
inc
fisubrl
and
arpl
out
test
arpl
push
jle
dec
in
lea
jno
push
andb
sub
cld
stos
movsl
dec
test
adc
dec
les
ret
je
dec
fnsave
scas
xchg
fidivrl
je
jno
jmp
test
or
push
pop
cltd
hlt
shr
jno
sahf
mov
push
mov
test
mov
data16
or
std
xchg
ljmp
stos
mov
mov
sbb
inc
popf
pusha
adc
or
test
fistl
cmp
pushl
ret
imul
iret
jb
and
out
sti
lock
leave
jae
adc
call
sub
or
mov
or
fsubl
outsl
nop
mov
dec
aas
push
dec
sub
inc
dec
cmpsb
sti
inc
add
jnp
mov
mov
ret
sbb
insl
sbb
out
ffreep
mov
mov
xlat
inc
jne
mov
pop
lods
je
movsb
mov
pop
repnz
insl
lods
addb
jle
adc
jge
shll
neg
xorl
stc
or
repz
pop
insl
sub
xchg
jae
arpl
loopne
mov
movsb
cmp
add
test
jae
cmpsb
pop
adc
cli
mov
jg
mov
dec
dec
mov
push
and
pop
rorb
movsb
gs
mov
inc
xchg
mov
cmp
sbb
aad
add
test
std
or
sahf
in
cmp
push
icebp
sti
sub
cmpsl
movsl
push
xchg
adc
mov
xor
aam
push
dec
mov
mov
data16
repnz
pop
addl
in
cld
dec
xor
lds
push
sub
jnp
pop
popf
lock
flds
sub
xchg
adc
xor
faddl
jmp
push
sub
in
stos
push
scas
dec
test
repz
jecxz
mov
push
cmp
call
ret
pop
dec
rclb
adc
insl
adc
imul
xchg
hlt
mov
in
lds
mov
inc
fsubs
pop
stos
mov
cmp
inc
or
xchg
lds
inc
push
mov
jo
std
loop
push
clc
rorl
test
pop
jns
mov
xlat
popf
out
pop
dec
sbb
xor
test
test
outsb
dec
repnz
loopne
jne
mov
mov
out
pop
dec
push
lock
mov
iret
cmp
lods
add
xchg
sbb
sti
mov
divl
scas
and
sti
sahf
in
dec
pop
inc
lret
sahf
sbb
adc
cmc
push
rclb
and
jmp
sub
das
mov
pop
add
sub
xor
hlt
add
xchg
push
or
mov
inc
negl
mov
dec
xchg
popa
pop
in
push
cltd
cs
sarb
adc
sub
adc
fsubrs
xchg
stc
fs
lret
push
rorl
and
imul
mov
sahf
movsb
or
pop
xor
dec
es
test
pushl
enter
mov
fincstp
jmp
pop
imul
int
test
cli
adc
lea
movsb
cld
outsl
hlt
cmp
repz
repnz
testb
cwtl
jne
xor
hlt
pop
mov
iret
sub
push
adc
inc
mov
mov
dec
mov
xchg
imul
cmp
cmp
imul
xchg
add
inc
mov
ds
adcb
aad
sbb
mov
in
lahf
pop
loop
lcall
pop
cmp
cltd
ja
pop
mov
jnp
inc
out
outsb
ret
pop
out
ret
inc
in
pop
xor
cmp
or
cmpsl
stos
out
mov
out
inc
repz
addr16
nop
xchg
jge
fbstp
add
dec
fwait
test
frstor
add
push
int3
negb
jl
cmp
jno
loopne
mov
cwtl
test
dec
fdiv
pusha
stc
cmpsl
incl
lret
jne
out
repnz
shll
inc
dec
inc
jle
dec
inc
pop
mov
jg
in
mov
aaa
out
cmpsl
jo
xchg
shl
adc
icebp
dec
jle
scas
dec
push
push
adc
daa
pop
out
or
ret
frstor
ss
leave
ja
dec
mov
ret
shll
lcall
rorl
dec
jno
int
push
out
push
mov
mov
xor
ret
lret
mov
xchg
test
fs
cmp
or
inc
and
jmp
sub
es
shll
adc
gs
inc
rorb
sahf
adc
ficoml
imul
adc
mov
mov
mov
dec
cmp
sbb
xor
in
fucom
mov
dec
add
test
shrl
mov
imul
fbld
lods
cmp
push
fsts
ds
jne
loop
rorl
add
fnstenv
hlt
inc
mov
adcb
pop
push
ja
sub
xchg
jmp
add
stos
mov
cmc
rclb
and
xchg
gs
test
and
inc
scas
xor
imul
movsl
addl
push
mov
in
mov
lea
inc
inc
imul
push
add
jns
inc
incl
sbbb
movsl
int
loopne
mov
sub
aam
add
ljmp
fidivrl
lahf
dec
mov
test
jns
pminsw
push
jbe
mov
xchg
mov
and
cld
in
sub
mov
jbe
mov
add
outsb
mov
js
ljmp
push
sub
dec
les
loope
daa
cmp
jne
and
xlat
or
fcoml
push
adc
stc
fsubl
sub
es
cld
aam
testb
push
mov
xchg
std
jne
push
cmp
mov
fsubs
add
or
insl
addl
in
mov
leave
fyl2xp1
cmpl
outsl
aas
mov
or
insl
jecxz
hlt
add
inc
sahf
cmp
in
push
rorb
mov
cmp
test
cmc
and
mov
mov
hlt
dec
rolb
sub
jns
ret
xchg
jno
out
xor
adc
lock
aaa
adc
mov
mov
jbe
stos
pop
scas
mov
xor
ljmp
inc
test
lods
out
push
hlt
inc
fcoms
fcomps
push
lret
push
mov
in
cmp
sbb
and
fwait
and
loop
out
repz
ds
xor
imul
lcall
and
movzbl
add
sub
test
cmc
fisttpl
push
inc
sbb
sub
or
stc
fs
mov
push
push
leave
mov
jo
sub
mov
sbb
cmp
pop
and
inc
es
sbb
cmpsl
xorl
ja
fs
adc
int3
jae
adc
loop
sub
in
js
mov
add
add
cmp
sub
es
in
call
push
daa
fimull
dec
loop
call
sub
mov
sbb
dec
pop
inc
dec
pop
pop
jnp
sbb
pop
push
cld
clc
push
add
repnz
daa
xchg
dec
xchg
ret
mov
lret
pop
and
inc
aas
sti
cwtl
test
call
shlb
add
test
ss
test
xchg
sub
or
rcll
loope
pop
jns
aaa
out
mov
loope
popf
jp
xor
lods
add
movsb
adc
outsb
or
xchg
cmp
test
add
push
loope
add
xchg
rol
out
inc
loope
ds
scas
sub
dec
and
jp
push
bound
inc
mov
insb
sub
aaa
xchg
mov
sbb
xchg
jne
dec
mov
pop
jmp
sbb
push
in
popa
js
cs
aas
xchg
insb
mov
rcll
inc
das
out
cmp
cld
adc
jnp
inc
or
js
xor
jae
pop
or
cmpl
flds
jp
lcall
int
push
pusha
faddl
out
ret
xchg
xchg
aas
adc
push
das
out
iret
mov
cmp
dec
xor
inc
addr16
ficompl
mov
pop
pop
cli
or
xor
mov
push
and
adc
inc
out
les
data16
lahf
or
push
fwait
imul
xchg
mov
ret
mov
mov
inc
int3
push
adc
jae
loope
pop
xchg
frstor
sbb
or
pusha
lcall
push
push
ficomps
leave
outsl
testl
shrb
mov
push
and
nop
lret
outsb
imul
jno
cmp
fsubr
inc
test
inc
sbb
and
push
xchg
jg
xor
jnp
test
shrb
or
add
ss
lods
push
pusha
dec
daa
xor
xchg
mov
sbb
cmpl
push
mov
pop
loop
push
pusha
push
test
ret
jge
mov
das
pop
xchg
inc
jne
cmp
repz
mov
pop
clc
mov
fst
adc
fimull
jo
mov
fdivp
adc
jnp
inc
cmp
cs
fwait
pop
dec
cmp
and
push
fimuls
push
call
mov
loope
adc
sbb
insb
add
mov
mov
cs
jno
mov
xchg
nop
jge
mov
dec
sbb
cmp
push
mov
jbe
test
mov
sbb
push
mov
std
mov
sub
adc
jae
mov
sbb
shll
movsl
add
or
popf
pop
adc
fimull
movsb
ss
int
mov
xchg
js
fchs
xchg
fcompl
sbb
test
cld
adc
xor
into
and
or
out
push
inc
mov
rcrb
fnstsw
jmp
ret
dec
push
pop
sarl
test
dec
es
pop
push
mov
in
mov
add
loop
rorl
movsl
loope
lods
jo
adc
push
mov
aaa
fistps
inc
aad
xor
test
jmp
pop
bound
jg
lret
pop
pop
je
adc
jae
into
jb
test
rolb
mov
mov
adc
push
loope
adc
sti
sbb
inc
movsl
fnstcw
jg
add
bound
xlat
mov
mov
cmp
jg
push
outsb
cltd
sahf
insl
data16
mov
lods
data16
mov
dec
mov
adc
pop
sbb
fistpll
sahf
ljmp
jb
xor
and
mov
inc
ret
jne
int
insl
loope
xchg
or
or
cmpsb
mov
aam
fwait
aad
fnstcw
adc
xlat
cwtl
sbb
shll
or
xchg
xchg
mov
pop
or
ret
add
cmp
scas
push
mov
repz
out
fidivrs
xchg
icebp
imul
pop
add
in
rcl
sbb
mov
sub
cmp
je
or
xchg
sarb
xchg
punpcklwd
inc
add
and
into
das
loope
xchg
std
mov
stos
loope
aas
loop
in
leave
dec
shl
cmc
add
mov
cmc
add
fwait
loop
jmp
cmp
mov
or
movsb
xlat
mov
lods
in
shrl
fs
adc
xorl
pushf
ss
ds
push
stos
xchg
ja
mov
add
sbb
jns
jmp
cmp
push
push
add
xchg
mov
movsb
cwtl
jle
cli
pushf
es
test
dec
sbb
into
cmpsl
inc
sbb
into
mov
loope
pop
push
jbe
push
push
std
inc
dec
add
jmp
cmpsb
jge
mov
lret
daa
jbe
sub
dec
push
adc
out
xor
sub
int3
jae
mov
add
xor
mov
cmpsb
out
xor
fstl
cmp
int
cltd
leave
aaa
sub
test
cmp
add
sbbl
cmp
dec
jmp
adc
fdivrp
jo
mov
data16
incl
push
aam
mov
fmuls
nop
push
and
push
test
inc
pop
lea
xor
les
aad
jge
xor
ljmp
inc
call
mov
addr16
mov
xchg
mov
popa
dec
pop
pop
lcall
inc
stos
in
mov
jnp
movsl
pushf
es
pop
je
aas
jns
xor
and
jno
jns
mov
cmp
or
les
jl
pop
lret
and
in
nop
inc
or
sub
stos
xlat
cltd
sbb
cmp
cmpb
xchg
dec
cmp
int3
cmp
xor
jnp
xchg
mov
add
out
add
and
mov
jp
lods
js
lret
jnp
sbb
dec
sar
fs
cmp
cmc
pandn
mov
push
mov
fdivp
sub
inc
lock
sub
and
pop
leave
mov
pop
in
lcall
adc
loopne
xchg
pop
mov
faddl
jbe
shll
add
fcompl
xor
sub
push
mov
pop
and
push
stos
pop
and
dec
xchg
dec
sbb
dec
pushf
shlb
jl
mov
lea
in
or
outsl
xor
js
fwait
and
out
pop
xchg
lahf
enter
dec
xchg
sbb
adc
sbb
test
jle
popa
inc
cltd
xchg
call
pushf
mov
insl
stos
bound
inc
ret
xchg
push
mov
adc
movsl
lahf
enter
rcrb
int
imul
repnz
lret
pusha
bound
xchg
or
decl
pop
cli
test
mov
inc
out
daa
inc
dec
es
insl
ret
add
cmp
ret
jo
xchg
fnsave
mov
aad
movsb
jno
or
into
out
xchg
fdivs
in
adc
adc
adc
xchg
xchg
xchg
orb
loop
fdivrp
inc
push
outsl
shr
pop
jns
inc
mov
test
rcll
or
xchg
push
dec
mov
xchg
lds
cli
shrb
pop
in
jmp
ficoms
fs
xor
jnp
das
std
int
mov
fadds
adc
aas
int
out
jp
sbb
sbb
das
cmp
idivl
push
add
pusha
xchg
inc
push
inc
push
push
jae
dec
out
clc
mov
mov
sub
outsb
lods
fistpl
mov
sahf
sbb
jnp
mov
and
aam
in
cmp
dec
cmp
rorl
popa
cltd
hlt
andl
push
jno
pop
outsb
sbb
dec
in
in
mov
lret
dec
pop
mov
sub
pop
test
outsl
fucomi
inc
into
aam
loope
out
or
push
push
or
rorb
pop
push
insl
sbb
jnp
stos
sub
cwtl
dec
push
mov
sbb
sbb
or
xor
movsb
js
lret
frstor
enter
xchg
enter
mov
repnz
dec
aam
mov
or
jmp
shll
sbb
popf
ss
test
dec
or
ret
scas
popfw
inc
mov
push
fnstsw
cwtl
pop
jl
and
sub
mov
pop
sub
int3
push
dec
xchg
cmp
leave
rcr
pop
dec
lds
xor
fldenv
stos
push
mov
ret
or
sub
nop
pusha
dec
sub
popa
pop
scas
push
mov
jne
xchg
pushf
bnd
mov
and
mov
jb
negl
or
push
popa
mov
scas
int
or
mov
cmp
push
out
int
aas
stos
mov
add
stc
je
add
test
pop
ret
aad
xchg
movsb
mov
test
and
cs
dec
std
xor
loopne
arpl
movsl
dec
cli
jl
movsb
or
sti
ret
inc
xchg
cmp
and
lcall
and
mov
push
outsb
pop
test
sbb
scas
jns
dec
shr
sbbb
rolb
sbb
shrl
xchg
pminsw
inc
data16
aad
fs
std
clc
out
sarb
xchg
add
dec
outsb
push
in
xlat
inc
in
inc
sbb
pusha
shlb
loope
addb
test
lea
daa
adc
sarl
push
adc
fwait
lock
out
push
movsb
push
in
gs
lods
ljmp
cli
pop
sbb
ljmp
addr16
xchg
push
into
sub
mov
aas
in
adcb
iret
adc
cli
popa
out
cmp
inc
mov
push
fwait
jl
push
pushf
out
sub
and
or
ss
loope
ljmp
imul
jns
pop
negb
xchg
sbb
sbb
in
in
pop
dec
cmc
or
icebp
bound
mov
lock
add
fs
xchg
js
mov
push
nop
or
sbb
pop
shll
inc
ljmp
xchg
push
mov
or
stc
pavgw
fwait
enter
fadds
add
sub
stos
jge
fs
ljmp
xchg
push
cmpsl
std
push
test
idivl
cmp
xchg
popf
je
outsb
mov
and
adc
jl
stos
push
movsb
mov
iret
ret
std
ret
pushf
sbb
push
int3
pop
push
jns
clc
or
jns
pusha
pop
and
dec
test
sub
mov
test
ljmp
outsb
pop
loop
fldt
mov
mov
sbb
dec
jbe
sbb
dec
jnp
add
jg
scas
add
dec
pop
add
insb
push
js,pn
outsl
xchg
xchg
or
xor
mov
ret
sub
xchg
aad
or
xchg
fistps
add
fmull
adc
jo
cmp
ret
repz
cld
pop
movsb
pop
sbb
lret
out
test
int3
arpl
jl
dec
adc
fildll
mov
mov
addr16
mov
outsb
pop
cmpsb
test
mov
push
arpl
je
add
jg
test
in
rcr
and
adc
sti
in
mov
dec
js
daa
rolb
mov
push
ret
jmp
bound
mov
xchg
pop
dec
sbb
stos
and
cltd
out
cmp
stos
loop
out
cmp
inc
hlt
mov
mov
add
jne
mov
and
scas
inc
xchg
into
push
xchg
adc
cli
insb
mov
xchg
push
arpl
es
add
and
sbb
stos
in
inc
inc
dec
nop
mov
sti
sbb
fsubs
jl
stc
mov
xor
iret
jmp
mov
inc
pop
scas
jae
xor
mov
fisttpl
fcomps
mov
jmp
insl
repnz
xchg
cmp
sub
pop
push
pop
lcall
sti
mov
mov
jae
outsb
mov
mov
jmp
xchg
sbb
ret
adc
pop
lods
push
sbb
aas
cmpsl
inc
jne
mov
pop
adc
and
aad
sub
rcrb
pop
cld
jne
or
or
mov
inc
in
pushf
loope
ja
mov
insl
cmp
addl
push
xchg
push
jno
mov
pushf
inc
jns
mov
out
jl
pop
imul
loopne
outsb
ret
xchg
and
jo
sbb
rcrb
icebp
push
dec
out
dec
subl
loopne
dec
push
sbb
lea
push
mov
mov
xorl
and
sub
aaa
dec
faddl
insl
xorb
ficoml
jb
outsb
stc
fisttpll
pushl
dec
dec
adc
mov
decl
inc
push
mov
inc
cmp
inc
lret
lods
jae
ret
push
xorl
jmp
or
lcall
push
lods
imul
ss
adc
and
push
lahf
pushf
dec
sub
lds
test
hlt
pop
sbb
fisttpl
xor
into
cmp
xor
std
push
jp
push
mov
fisubs
adc
test
push
xor
push
addl
cmc
orb
push
cwtl
sbb
mov
sbb
jg
dec
xor
sub
or
divb
pushf
popf
vxorps
decl
cwtl
push
in
fistpll
outsl
loopne
outsb
jbe
and
ds
sub
mov
jne
pushf
sub
mov
xchg
add
cmp
xor
cltd
lcall
jne
sbb
pop
mov
cwtl
lods
stos
or
xor
dec
bound
in
repz
call
lcall
xchg
add
mov
mov
imul
rcr
sbb
cmp
push
mov
movsb
or
mov
mov
mov
jmp
mov
jae
shlb
aaa
add
lret
push
data16
push
jecxz
mov
inc
out
dec
clc
or
sbb
in
pop
cmp
inc
push
sbb
sub
push
dec
adc
cmp
pop
loop
lea
xchg
ljmp
lahf
push
lods
and
xchg
iret
jne
cltd
cmp
push
dec
add
add
rorb
add
mov
jp
lds
test
stc
mov
jmp
xchg
adc
loop
pusha
cltd
ljmp
notl
push
dec
std
add
and
or
jae
push
jg
or
jb
fisttpl
jo
sbb
insl
push
cli
pop
pop
lret
sbb
out
pop
mov
shll
mov
nop
xorb
xor
gs
adcb
cmp
iret
lahf
out
gs
mov
cmp
add
clc
dec
mov
leave
and
inc
sti
or
call
push
mov
jnp
cli
outsl
dec
fcompl
and
lods
fimuls
fldcw
mov
add
hlt
mov
mov
push
popf
push
icebp
arpl
aad
in
loope
jbe
out
jmp
mov
xchg
xchg
test
bound
scas
insl
inc
fisttpl
insl
out
out
xor
dec
mov
sbb
mov
xchg
es
or
js
je
shl
outsl
jne
adc
lcall
mov
int
popa
sbb
inc
imul
cli
test
fdivrp
aaa
inc
jnp
call
pop
mov
mov
iret
sbb
vucomiss
push
jae
gs
push
jo
mov
mov
fs
mov
mov
lods
xchg
fwait
add
jg
insl
sbb
jb
push
xorb
cmp
insl
lods
mov
inc
dec
jl
xor
test
and
mov
cmpps
lret
pusha
cmp
mov
loope
xor
pop
add
xchg
push
dec
dec
sub
push
xchg
pushf
jmp
ret
loope
aad
jg
arpl
fs
and
xchg
aaa
sar
leave
cmp
add
push
cwtl
arpl
rclb
mov
pop
negl
aad
push
aaa
std
adc
mov
add
imul
cmp
pop
cmpsb
jns
loope
dec
xor
sahf
out
inc
push
fildll
mov
les
lahf
mov
hlt
js
daa
inc
mov
push
enter
loop
cmp
pop
mov
in
adc
fmuls
stc
pop
sti
add
xor
xchg
lock
mov
insb
test
or
mov
dec
out
stos
into
and
lret
fidivrl
xor
dec
mov
jno
fsubs
int
stos
cmc
fwait
inc
repz
daa
cld
cmp
mov
mov
mov
mov
popf
sub
rcrl
xor
lahf
in
les
mov
xor
pusha
iret
xor
xchg
pop
out
pop
addr16
push
push
dec
shl
aam
daa
cmpsl
sub
dec
inc
sarb
lahf
mov
arpl
in
mov
xorl
pop
or
jb
mov
push
pop
scas
adc
fstps
sbb
jp
jle
test
int
mov
bnd
mov
push
or
aam
fs
sbbb
and
mov
jne
or
aam
outsb
adc
sub
enter
in
movsl
inc
xchg
mov
xor
sub
and
cwtl
dec
and
lret
sub
repnz
inc
or
jo
dec
adc
popf
ret
test
lods
sub
add
pop
fldpi
in
xchg
aas
aam
cli
jp
shll
jnp
in
rorb
mov
mov
das
push
mov
fs
es
add
xor
jns
ja
mov
outsb
ja
icebp
sti
xor
jge
jo
jbe
repz
adc
mov
lret
iret
mov
sbb
push
mov
int3
adc
adc
ret
or
mov
and
adc
pop
leave
test
pop
mov
xor
dec
fsub
sbb
nop
mov
jmp
add
addb
cmp
and
pushl
and
inc
lcall
dec
xor
in
loop
aas
out
mov
lret
cmpsl
popf
pop
fsubs
push
shll
mov
imul
iret
and
cmpsb
adc
je
push
cmp
sti
out
mov
insb
fsubr
test
xor
mov
push
pop
das
mov
xchg
faddl
jo
and
lds
mov
int3
xor
in
or
push
mov
pop
xor
jno
or
ja
sbb
jg
movsl
push
bound
outsl
cltd
push
arpl
push
cmp
inc
cmc
mov
mov
mov
pop
in
xchg
imul
pop
dec
andl
jp
scas
addr16
test
jno
xlat
cmp
sbb
push
mov
loope
mov
data16
inc
mov
mov
pop
mov
hlt
lea
pop
lret
inc
sub
xchg
test
sbb
xor
jmp
aad
leave
pop
lcall
sbb
movl
popa
sbb
add
mov
cld
rcl
in
sub
out
orl
mov
inc
cs
outsl
mov
mov
shlb
adc
lret
leave
add
mov
in
xlat
xor
dec
mov
in
dec
test
add
jmp
pusha
adc
adc
in
repnz
loope
adc
and
sahf
cmpsl
lods
cmpsb
push
jmp
jg
aam
xor
pop
or
sahf
out
mov
ja
divl
in
lods
fstl
rcr
pusha
dec
xchg
inc
or
mov
jl
shlb
adc
out
out
push
pop
sub
repz
mov
dec
imul
lcall
xor
ret
stc
pusha
mov
inc
and
pusha
lods
cwtl
repz
pop
and
fsubl
xor
lcall
call
add
inc
and
pushf
repz
fcoml
and
dec
test
fisttpll
jl
push
fwait
xchg
push
mov
xor
sub
inc
xchg
cs
sub
divb
push
or
jno
pop
fdivrl
int3
aas
mov
pop
xlat
cmc
mov
out
leave
repnz
cwtl
stos
mov
cwtl
cs
jno
outsb
pop
pushf
xchg
aam
std
outsl
mov
testb
lahf
pop
cmp
sbb
sbb
aaa
dec
sbb
xchg
daa
das
arpl
repz
loopne
dec
jno
add
mov
aaa
push
xor
jno
sub
in
fcoms
clc
mov
xchg
adc
inc
and
data16
push
inc
mov
es
outsb
jle
and
add
mov
fsubrs
lcall
dec
js
aad
xrstors
pushf
sahf
inc
mov
mulb
sub
sbb
add
jle
xchg
movsl
cltd
jg
repz
xchg
jle
adc
cmpsb
in
sub
test
push
xor
add
fisttpll
mov
mov
out
push
pop
add
mov
mov
push
mov
imul
sub
dec
repz
push
addb
adc
test
cmp
adc
dec
ret
mov
pushf
in
xor
mov
jecxz
fcmovnu
rcl
rolb
mov
pop
lea
subl
mov
push
clc
iretw
lea
or
jns
or
lret
jbe
call
jg
insb
or
mov
push
sub
push
es
mov
shrb
fsubrs
aas
std
sub
push
or
mov
rcl
in
mov
pop
das
jmp
push
push
sahf
mov
mov
dec
adc
push
or
popa
pop
mov
out
sti
nop
xchg
or
pop
inc
push
shll
push
dec
mov
imul
xchg
adc
addr16
mov
cmpsb
mov
mov
mov
test
mov
mov
jg
popf
in
out
and
xchg
scas
scas
xchg
jb
inc
dec
jle
xchg
mov
adc
fnsave
mov
xor
pushf
mov
push
shrb
mov
xor
adc
mov
jne
ret
mov
inc
xchg
mov
jbe
or
fmuls
inc
sbb
lahf
repnz
mov
sbb
ret
and
mov
and
pop
mov
and
out
imul
cmp
push
sbb
and
aas
lods
ljmp
xchg
addb
movsl
scas
mov
and
pop
lahf
je
or
scas
in
xor
pop
and
loope
scas
adc
push
mov
outsb
push
pop
stos
jle
sbb
mov
and
jl
xor
jmp
les
repz
aaa
fsubl
push
rcrb
gs
out
inc
cmpl
mov
xor
sbb
dec
mov
jo
push
cmp
inc
out
sahf
jg
fs
test
mov
pusha
mov
idiv
andl
out
mov
int
dec
mov
jle
and
das
or
sub
jb
cmp
add
ret
pop
sub
pop
jg
push
cmpsl
adc
test
mov
ss
or
sbb
mov
push
jbe
mov
inc
mov
sahf
imul
incl
xchg
lea
mov
imul
add
push
mov
sub
cmp
jecxz
or
dec
fs
int3
mov
xchg
arpl
jo
shl
jle
fmull
enter
repnz
clc
ss
js
imul
enter
imul
cltd
jbe
xchg
sub
js
xor
jecxz
fisubrl
movsb
and
mov
daa
clc
popa
cs
jp
cmp
arpl
sbb
fcomi
pusha
call
mov
pushf
loopne
dec
mov
inc
ret
push
or
mov
and
divb
pop
sub
icebp
fwait
dec
push
aaa
in
or
push
pop
mov
mov
sbb
test
add
imul
mov
mov
lahf
push
mov
in
aaa
dec
leave
mov
dec
stos
rolb
mov
cmp
popa
sbb
adc
pop
add
mov
orl
mov
popf
call
out
popa
pushf
cmpsl
ficoms
xor
movsl
mov
push
adc
add
stos
sbb
pop
pusha
cmpsl
outsl
punpckhwd
mov
sahf
out
imul
xchg
cmpsl
lock
push
js
enter
sbbb
out
loopne
imul
daa
aam
push
outsl
js
xchg
pop
xchg
jge
sahf
dec
sub
pop
sahf
jnp
inc
pushf
outsl
or
jbe
cltd
movsl
int3
adc
inc
lock
aaa
test
nop
dec
ds
insb
add
jle
rolb
sbb
and
data16
js
cmp
lahf
push
lret
sti
pop
xchg
aas
jge
push
pop
or
aas
idivl
mov
push
xchg
shrl
inc
sarb
push
inc
pop
pop
jg
cmp
add
dec
pop
and
cmc
xor
lods
cmc
sbb
dec
dec
sti
imul
outsb
cmpsb
ret
jecxz
fdivs
sbb
mov
loop
add
push
out
lret
push
mov
pop
das
inc
xchg
arpl
jmp
cwtl
adc
insb
jne
sub
push
out
outsb
icebp
fisubl
jg
addr16
mov
scas
or
leave
insb
das
pusha
lods
punpckhbw
ds
stc
aad
dec
adc
jl
sbb
stos
icebp
xor
lcall
dec
insl
add
push
fsubl
adcl
imul
sbb
aad
int
test
shlb
mov
cmp
cmp
add
xchg
xor
orb
rclb
les
js
testb
pop
lods
inc
mov
nop
sqrtps
pop
icebp
lds
sti
imul
sub
pop
andl
xor
pop
leave
mov
test
jle
jo
mov
and
je
mov
adc
mov
fbld
in
fstpt
xor
push
iret
sbb
inc
rcrb
sbb
mov
stos
sbb
push
pop
xchg
dec
bound
mov
jbe
xor
inc
out
addb
notb
montmul
xor
ss
xchg
outsl
lahf
xchg
mov
add
jp
jnp
add
movb
cld
int3
outsl
mov
pop
test
or
mov
lcall
gs
scas
das
add
out
add
cmp
sbb
push
orb
rorl
add
ss
pop
cmpb
pushf
shll
fs
nop
out
es
loope,pt
pop
jno
xor
daa
add
fwait
push
idiv
xchg
sub
jle
pop
out
iret
sub
add
mov
dec
adc
mov
js
loope
sti
incb
int3
in
mov
popf
sbb
leave
nop
cld
addb
pop
cmp
loop
mov
pop
jo
push
cmpsb
out
insb
out
push
les
cmp
and
sti
add
jmp
pop
je
out
mov
or
add
test
popf
inc
movsl
jecxz
pop
shrl
test
in
jp
sbb
mov
test
aaa
insl
flds
push
int
inc
outsl
subl
mov
or
ret
scas
test
xor
dec
in
loop
jge
inc
jne
outsb
push
aad
dec
or
push
inc
adc
sahf
jne
or
cmpsb
xchg
xchg
mov
call
inc
xchg
js
sub
dec
or
rol
fwait
inc
notb
push
push
dec
xacquire
add
pop
addl
adc
fisubrs
xchg
jle
enter
dec
xlat
add
jl
gs
insb
sbb
bound
mov
scas
jmp
cltd
jle
inc
dec
lods
roll
dec
ds
sub
in
nop
pop
fisubl
sub
insl
jmp
jl
roll
in
push
aas
pushf
int3
scas
mov
push
adc
mov
dec
sub
xchg
out
scas
out
fists
pop
cmc
rorb
pop
sbb
pop
lea
mov
or
sbb
xor
sbb
sub
lods
add
pop
mov
aaa
push
sbb
fisttpll
adc
lock
or
add
imul
sub
cmpsb
and
punpckhwd
push
rcr
jae
addl
xchg
push
stos
mov
jle
mov
lea
sub
std
rorl
lahf
sbb
mov
fstpt
outsl
rclb
fsts
sar
mov
xchg
sarb
fdivp
lahf
push
rclb
dec
aam
popa
push
ljmp
imul
jp
movl
inc
mov
popa
ja
mov
sahf
mov
sub
adc
cltd
add
pop
add
xlat
repz
mov
mov
push
pusha
dec
fs
jp
xor
and
sub
call
xlat
or
jmp
and
xchg
cmc
dec
mov
push
and
test
leave
jle
out
into
dec
fisttpll
or
std
push
icebp
js
xlat
sahf
sbb
movsb
sub
dec
out
mov
es
shlb
jae
add
jmp
or
fnstenv
in
ror
loopne
cmp
xor
movsb
out
xchg
push
or
sbb
mov
mov
loop
xchg
in
mov
jmp
inc
dec
and
or
cwtl
rolb
push
mov
sub
subb
or
clc
mov
mov
fistps
push
call
add
sbb
or
sbb
pop
ss
pop
int3
dec
push
xor
sbb
loope
subl
pop
jg
push
dec
mov
dec
popf
inc
sub
xlat
and
mov
aad
jge
mov
xor
add
jo
sub
pop
mov
into
mov
sub
movsl
add
arpl
xlat
and
or
mov
out
leave
es
xor
pop
in
sahf
or
push
loop
je
hlt
sbb
jnp
add
in
repz
mov
push
and
push
mov
out
out
pop
push
xchg
push
xchg
into
push
mov
lods
pusha
js
cli
dec
test
fstl
ffreep
test
stc
pop
cmc
ss
xor
lock
add
fiadds
mov
popa
inc
push
sub
jl
add
push
fstp
jae
mov
std
pop
push
fisubrs
fucomip
xor
test
roll
mov
bound
outsb
imul
aad
mov
jne
push
xorb
sbb
mov
into
mov
ss
daa
mov
fs
dec
shrl
adc
push
adc
sbb
xor
inc
dec
dec
jns
add
or
rorl
sub
mov
nop
push
adc
cmp
dec
inc
xchg
jbe
fidivrl
test
cli
push
sub
lret
jl
adc
ret
push
popa
sahf
nop
in
fstpt
sbb
popf
add
cld
stos
add
ja
flds
jecxz
sub
repnz
push
pop
lret
fildl
sub
xchg
roll
stc
mov
inc
outsl
arpl
jl
mov
and
jns
pop
pop
mov
insb
int3
out
fdivs
in
push
sbb
sti
jo
push
daa
adcl
adc
hlt
jns
movb
mov
insb
into
pop
xchg
cmc
out
xor
cmp
jmp
test
out
mov
xchg
xchg
inc
fwait
inc
outsl
cwtl
sub
lods
insl
fs
mov
mov
mov
popf
bound
lods
cmp
jecxz
xchg
pop
jns
leave
mov
mov
aad
in
and
and
push
bound
addr16
sahf
sbb
stos
or
inc
cmpsl
popa
inc
mov
fcompl
lods
and
jecxz
pop
psubusb
into
xor
shlb
and
jmp
jns
ret
push
xlat
adc
iret
data16
dec
jecxz
sub
push
mov
mov
xor
dec
push
jno
arpl
or
test
lock
cld
es
std
lock
das
lahf
loop
mov
das
shrl
lea
fistl
inc
and
add
in
xchg
dec
push
outsb
enter
aad
das
jge
imul
xlat
loopne
addb
mov
insb
decb
xor
xor
sub
imul
sbb
adc
sbb
stos
mov
fs
push
test
inc
pop
ror
repz
loope
addr16
inc
cmp
xchg
out
out
sbb
fisttpll
and
ss
xchg
cmpsb
push
outsl
push
jecxz
adc
dec
daa
mov
inc
lock
sub
out
sub
adc
or
ffreep
mov
inc
fcmovnbe
cmp
inc
lock
test
out
mov
sub
cld
mov
inc
xchg
popf
scas
pop
mov
cmp
repnz
xchg
aas
stc
mov
mov
jbe
nop
inc
lods
sub
mov
inc
mov
pop
cmp
andb
lcall
iret
repz
sub
out
gs
cli
movsl
sub
and
imul
sub
jmp
xorl
pop
movsl
or
pop
fstpt
add
mov
arpl
xor
dec
jle
xchg
jmp
and
test
out
fstps
scas
aas
jne
push
push
sbb
dec
out
push
fldcw
icebp
ret
enter
mov
stos
xchg
fisubrs
leave
mov
in
pop
pop
xor
aas
in
in
outsb
rorb
imul
push
cmp
test
jne
jb
cli
mov
inc
jmp
shll
sub
scas
add
pop
ljmp
jne
imulb
cmpsb
lcall
arpl
pop
std
retw
fimuls
lret
imul
mov
cli
aaa
es
jmp
addr16
fisubs
lock
bound
fmuls
pop
js
pinsrw
aaa
mov
mov
adcl
adc
push
negl
sub
js
inc
dec
jecxz
jecxz
push
ret
pcmpeqw
outsb
mov
loopne
sub
jb
pop
xor
inc
or
xlat
cli
lret
and
jbe
movsl
outsl
xlat
cmp
mov
test
cli
sub
xor
jg
or
lock
push
outsl
leave
mov
cwtl
mov
xor
lods
mov
rcrl
pushf
icebp
mov
jecxz
pop
imul
cmpsb
into
lock
pop
out
lea
outsb
incb
push
jmp
lds
mov
sub
cli
mov
insl
inc
ret
add
sbb
sub
das
cmp
xor
push
out
clc
sbb
push
addr16
pop
test
jmp
fst
inc
fstpl
mov
imul
sub
dec
xor
mov
dec
ds
jnp
outsb
int3
cmpsl
cmc
ja
aad
jecxz
movsl
mov
xlat
repz
dec
aam
rorl
cld
xchg
sub
int3
lret
or
ffreep
push
aas
test
xchg
jge
inc
scas
in
cmp
into
adc
pop
repz
cmp
mov
or
inc
js
jne
inc
inc
push
addr16
dec
mov
mov
rolb
adc
push
add
shll
ret
jno
xorb
test
bound
int3
repz
cmp
test
xchg
push
test
fcmove
xor
xchg
dec
xor
arpl
push
lea
ds
pushf
push
addl
mov
lods
dec
xchg
out
fmull
dec
push
xchg
mov
mov
add
mul
push
xorl
jb
aaa
clc
ja
mov
aaa
cli
in
xchg
das
sti
pop
iret
sbbb
mov
xchg
popa
inc
inc
xchg
jb
arpl
mov
and
sar
ja
jg
pop
inc
int3
cmpsl
and
insb
jnp
sbb
xor
add
mov
fstl
mov
pop
pop
mov
sbb
xor
das
add
es
xchg
das
sbb
int3
lods
pop
test
jb
cmp
add
pop
xchg
adc
ret
jg
sub
outsb
adc
sti
mov
mov
data16
jle
ss
cmp
dec
movsb
cmpsb
les
mov
aam
push
xchg
test
popf
cmp
push
pop
add
or
ret
std
xchg
leave
mov
ror
pop
sub
outsb
icebp
xchg
sub
or
xor
pop
cmp
or
cwtl
jecxz
mov
mov
out
lahf
mov
insl
and
in
jp
test
jg
inc
jns
and
rolb
fdivs
mov
mov
xor
movsl
add
mov
cld
pop
aam
das
xchg
jbe
dec
lret
pushf
lods
test
popl
rorb
fwait
ss
cmp
mov
sbb
call
pop
inc
adc
cmp
std
mov
psraw
xchg
imul
pop
fwait
xor
jge
loopne
adc
popa
outsb
dec
in
jns
mov
fisttps
cltd
enter
and
clc
push
dec
adc
mov
ficomps
and
cmp
mull
sbb
jmp
mov
test
ja
iret
jge
aam
rcll
scas
jmp
push
xchg
pop
push
inc
adc
mov
add
sub
lret
xlat
jo
mov
jge
mov
je
in
cmp
mov
rorl
pop
loope
loop
push
test
fildll
popl
pop
cld
lds
add
jne
push
mov
scas
mov
push
push
or
es
sbb
adc
stc
add
lods
pop
into
cli
shrl
xchg
lock
push
pop
nop
test
jb
push
add
add
fistps
rolb
test
loopne
xlat
int3
mov
cmp
jmp
ds
dec
jg
notb
inc
adc
out
rolb
cmp
aam
mov
leave
ss
int3
xlat
adcl
pusha
outsb
movsb
xchg
les
pushf
pushf
in
cmp
inc
cltd
mov
jb
and
orb
fiaddl
scas
aaa
xchg
fistps
xchg
roll
push
push
xor
aas
iret
cmc
mov
inc
pop
sbbl
adc
aas
outsb
aaa
cmp
loopne
xchg
adc
and
mov
icebp
aaa
or
xor
ret
jge
xor
push
stc
adc
push
add
bound
popf
pop
jg
push
fs
xor
push
push
pop
push
aam
cmp
cmp
rcll
cmpsb
add
xchg
sahf
enter
inc
add
shlb
sbb
add
xchg
mov
fidivl
pop
ss
or
lds
cltd
sbbl
mov
inc
or
mov
shlb
add
stos
leave
pop
dec
cli
push
fadd
fsubp
sub
call
rol
or
jns
add
lods
pop
decb
sbb
fwait
sub
xchg
mov
adc
cmp
roll
mov
outsb
lcall
aas
sub
cmp
nop
pop
aad
or
jge
mov
idiv
jns
pop
sub
aaa
aad
int3
xor
cmp
scas
push
shl
sub
adc
test
int3
mov
loope
shll
mov
addr16
inc
cmpsb
jl
popf
xor
mov
adc
enter
and
es
cltd
or
shrl
hlt
or
sahf
add
subl
cmp
movsb
cld
sbb
rcl
mov
cmp
les
mov
test
cmp
popa
mov
insl
outsl
inc
ret
rol
pop
int
mov
fadd
or
pop
push
mov
lock
sub
mov
fstpt
pop
stc
les
hlt
ds
push
jb
xchg
mov
daa
cld
in
in
mov
or
in
and
dec
mov
into
ds
call
push
fsts
aam
out
std
mov
inc
mov
das
xchg
push
xor
loopne
cmc
sbb
mov
and
xor
sbb
dec
call
test
mov
je
and
jl
das
clc
push
sub
imul
xchg
xchg
cmp
jne
fstps
popf
dec
enter
push
lea
cmpsb
jmp
cmpsl
popa
gs
and
loop
test
loopne
imul
push
daa
subl
jbe
mov
sahf
push
out
inc
sub
dec
pop
add
mov
mov
shll
push
cs
roll
sbb
adcb
addb
insl
notb
scas
push
daa
popa
das
xchg
mov
sub
xor
sub
lret
xchg
push
pusha
popf
lods
rolb
repz
mov
cltd
mov
xchg
mov
push
fs
sub
mov
sti
int3
movsb
fwait
jo
push
repz
push
cmp
je
filds
jl
and
jae
stos
loop
loop
ret
xor
into
jmp
dec
mov
adc
mov
or
into
jl
dec
mov
repnz
mov
xor
lock
cltd
and
daa
cmp
add
into
and
jne
adc
add
les
int3
fldt
daa
mov
push
mov
adc
mov
sbbl
in
push
enter
jae
ss
insb
pop
jg
pop
and
or
xor
insl
pop
out
sbb
push
outsl
sbb
jnp
outsb
xchg
scas
addl
out
mov
in
movsl
cmp
inc
pop
stc
pop
out
jmp
es
imul
loope
push
lea
sbb
mov
adc
mull
sub
add
iret
pop
rcl
insb
push
and
nop
jb
jb
imul
pop
jb
sub
inc
loop
pop
fstl
mov
hlt
int
pop
dec
pop
stos
cmp
roll
lods
sub
xchg
arpl
pop
sbb
push
pop
mov
in
cld
jnp
roll
arpl
fnsave
or
stos
aam
cltd
iret
jle
sbb
jg
leave
xchg
js
push
mov
add
pmulhw
je
xor
iret
icebp
pop
pusha
int3
lcall
repz
out
dec
ret
cld
cmp
inc
sbb
divl
int3
rol
cmpb
outsl
xchg
jae
in
xchg
inc
pushf
and
sbb
aaa
or
xchg
inc
lods
sbb
rcl
nop
and
push
xchg
adc
mov
cmp
flds
mov
cmp
pop
jl
mov
fistpl
mov
mov
sti
nop
lds
mov
and
mov
cmp
sbb
pop
or
xchg
xchg
xchg
iret
dec
mov
scas
lock
fidivrs
sbb
data16
jae
aaa
cmp
lea
or
leave
dec
jnp
cmpsl
repnz
and
pop
push
gs
rcl
xor
fldcw
cmp
outsl
inc
jne
dec
push
mov
and
xchg
pushf
cmp
cltd
negl
call
mov
xor
pop
sarb
xor
andl
lock
pop
ret
rcr
or
les
xor
idivb
rcrl
addr16
mov
or
xor
addr16
pop
mov
jno
jg
rclb
shr
cmp
inc
mov
sbb
nop
add
aas
out
xchg
mov
es
jo
faddl
mov
sbb
inc
out
adc
adc
sub
lods
push
lret
movsl
fisubrl
xchg
lea
sbb
xchg
jbe
pop
inc
push
ficoms
rclb
std
arpl
pop
fmull
sbb
rcl
push
sbb
xor
call
pushf
xchg
fst
aad
dec
push
mov
sbb
push
daa
pop
xchg
adcl
cmp
dec
adc
xchg
cmp
mov
push
lcall
loop
inc
ds
jg
dec
mov
xor
in
dec
mov
outsb
add
mov
sbb
push
xchg
inc
shl
fistps
jg
mov
hlt
mov
mov
jbe
ret
andb
fs
sub
test
insl
imul
lods
cmp
ljmp
imul
outsb
xchg
pop
pop
cmc
push
adc
adc
pop
iret
lods
ss
rcl
or
pop
sub
dec
mov
iret
negl
fs
jl
and
adc
js
xlat
pop
sbb
push
jmp
push
inc
mov
pop
xor
es
lret
xchg
in
xor
push
rol
dec
mov
sub
or
jb
subb
loopne
fwait
mov
in
je
cmpsl
les
sbb
mov
push
std
js
push
cwtl
daa
addr16
shrl
insb
popf
adc
ds
out
xor
scas
mov
jge
pop
adc
mov
mov
mov
sbb
adc
test
in
std
stos
and
xorl
pusha
mov
jno
pop
dec
sbb
std
scas
mov
xchg
jp
mov
lret
gs
mov
jnp
decl
sbb
int3
xchg
cwtl
inc
sub
xchg
out
pop
or
test
loope
popa
in
lock
add
orb
mov
xor
mov
orb
clc
add
jg
nop
or
push
call
sub
cmpsl
dec
loope
jbe
push
ret
andl
inc
xor
aaa
les
icebp
mov
xchg
sub
cmp
shrb
push
in
inc
xor
push
stos
pushf
jle
push
ds
mov
test
rcrl
or
enter
inc
push
adc
xchg
arpl
sub
mov
xor
mov
xchg
gs
push
xchg
sti
sbbb
pop
jmp
sub
cli
das
outsl
addr16
sub
stc
cmp
jmp
dec
xchg
inc
mov
xchg
xchg
lcall
xchg
xlat
xor
push
cli
jns
das
and
and
xor
gs
daa
xchg
out
xor
lea
mov
pop
scas
insl
stos
fwait
push
inc
and
daa
in
sub
popa
in
hlt
movsb
and
cmpsl
stc
cltd
test
dec
loop
pop
mov
aam
out
sub
scas
push
or
stc
in
push
in
bnd
pop
or
lahf
inc
xchg
insl
call
mov
jo
lret
mov
lret
sbb
push
cli
ret
mov
repnz
xlat
mov
or
mov
add
cmp
movsb
push
ret
adc
cmc
testb
jg
jno
jmp
cltd
pop
mov
cmp
sbb
popa
sar
xchg
sub
push
cltd
add
lock
std
pop
icebp
push
cld
inc
sbb
shrl
sbb
sbb
pop
push
inc
stc
pop
and
jns
dec
out
fsubrs
rcrl
cltd
mov
jnp
fistpll
push
rcll
dec
push
enter
stos
inc
shl
or
gs
cmpsl
out
add
mov
or
insb
aaa
es
out
push
push
push
sbb
test
call
test
jns
data16
dec
shrl
adc
pusha
scas
imul
xchg
fwait
rcll
aas
addr16
mov
mov
lcall
add
icebp
movsl
daa
adc
adc
out
das
jmp
mov
shlb
inc
pusha
sub
ljmp
out
jnp
xchg
or
popa
imul
mov
mov
mov
pusha
call
sub
mov
add
lret
les
mov
popa
mov
jg
cmp
in
stc
add
jg
sbb
rcl
inc
push
or
sub
cmp
sbb
push
push
sbbl
mov
xchg
xchg
dec
sub
sbb
lods
mull
jg
imul
jmp
mov
mov
inc
rolb
test
movb
xor
pop
testb
and
pop
adc
shrl
jns
push
hlt
adc
pop
xorl
inc
mov
push
xor
fcompl
addl
subl
adc
xor
ficoms
repz
hlt
and
dec
mov
or
sbb
sahf
addr16
lcall
and
sbb
xchg
ret
sub
sbb
mov
int
push
xor
dec
fmulp
push
aad
cmp
adc
xchg
mov
inc
leave
lock
sub
stos
dec
xchg
das
mov
adc
test
aas
scas
rorl
sti
fnstsw
mov
xchg
jo
scas
sub
sub
jl
inc
std
dec
ja
mov
loopne
sub
pop
shlb
lds
popf
fildl
rclb
popf
push
jae
in
in
cli
addr16
inc
dec
sarb
insl
xchg
stc
imul
xor
in
leave
rclb
les
repz
mov
int3
mov
sub
pop
add
fisttps
sbb
mull
add
psubsb
mov
xchg
pop
pop
cmp
push
test
nop
push
lods
pop
je
rclb
adc
pop
cmovg
adc
dec
int
icebp
pop
iret
ja
jp
inc
jge
sahf
push
fisttps
cs
lahf
loopne
inc
xor
jmp
adc
adc
fnsave
and
or
mov
sbb
movsl
pop
test
pushf
mov
jnp
data16
lds
xor
mov
cs
hlt
jnp
lret
outsl
js
xor
and
stos
test
jg
outsl
push
push
xchg
cmpsb
pop
mov
lds
daa
sub
in
insl
sub
cmp
xchg
faddl
pop
mov
xchg
fwait
pop
dec
shrb
add
mov
addr16
lcall
add
les
mov
mov
dec
enter
aas
inc
in
xor
push
mov
ds
cmp
jno
rol
sub
or
push
and
push
fmul
addl
and
test
push
lret
xor
mull
rep
std
cli
cwtl
push
xchg
das
xchg
fbld
aas
cmpsb
into
mov
mov
sub
sub
push
or
cs
pop
cli
jle
xchg
jecxz
lret
jg
aaa
mov
enter
outsb
xorb
dec
shrb
inc
pop
sub
data16
rcl
inc
mov
sub
icebp
mov
andb
adc
and
jnp
mov
sub
push
gs
push
inc
test
jno
in
adc
jo
mov
les
test
mov
push
adc
lods
ljmp
stos
inc
jg
sbbl
xchg
loop
sbb
jne
xchg
sbb
mov
data16
jo
lods
insl
popa
in
push
fsts
lds
mov
jne
rorb
inc
jg
jp
imul
stos
cmp
mov
ljmp
inc
ret
loope
lods
ds
mov
enter
and
xchg
shld
mov
arpl
out
fisubs
sub
xchg
in
aam
pop
jne
repz
adc
daa
stos
push
daa
neg
or
adc
sbb
ss
mov
dec
inc
or
std
sub
jmp
cmpsb
cmp
loope
and
jne
pop
mov
ss
aam
ret
lods
popf
daa
mov
test
xchg
cs
adc
mov
mov
aam
stc
mov
dec
cltd
cmp
sbb
aad
jl
jno
mov
xchg
mov
js
incl
stos
es
iret
cmp
cmp
sbb
in
icebp
mov
popl
fsubs
aam
cmp
aaa
addl
or
fadds
sbb
scas
les
sbb
in
pop
mov
test
mov
xlat
sarl
js
xchg
js
push
sbb
push
scas
js
or
push
scas
iret
pop
mov
adc
mov
lret
test
lods
dec
and
out
jae
cmp
sbb
subb
lods
dec
jp
aas
into
mov
xchg
mov
adc
mov
dec
mov
int
sbb
fisubs
mov
pop
movsb
icebp
daa
cmp
cmpsl
add
lahf
loopne
mov
test
out
pop
and
sub
mov
aad
pop
mov
fildl
idivb
sbb
cld
outsl
js
and
jno
xchg
je
jl
ret
jo
push
jbe
mov
jne
fs
add
xchg
jge
leave
aam
inc
nop
addr16
pop
dec
add
roll
sbb
pop
cmp
adc
push
cld
pop
jle
jae
jne
cwtl
pop
das
pop
out
push
lcall
fs
push
std
pop
cmp
outsb
pop
xchg
xchg
inc
and
arpl
sub
ret
jbe
inc
out
addr16
test
test
jl
cmpsl
aam
daa
mov
jl
stos
ja
loopne
jae
imul
jne
xlat
add
out
out
outsb
mov
xchg
mov
cwtl
pop
imul
mov
cli
hlt
cmpsl
xor
mov
jb
mov
repnz
shll
sbb
adc
or
pusha
popa
jo
cmp
sbb
mov
cld
sub
pusha
hlt
daa
push
subl
dec
jg
stos
arpl
dec
ljmp
jns
dec
pushf
xor
push
lcall
push
mov
cmp
filds
cwtl
iret
es
adcl
lret
or
lock
mov
fsubrp
add
mov
in
sub
fwait
movsb
insb
fiaddl
sbb
es
lahf
int
mov
cld
sbb
dec
imul
mov
pop
movsb
xchg
and
xchg
aam
mov
jg
aad
xchg
cltd
fstl
aas
out
add
sbb
cmp
out
mov
int3
repz
adc
push
fcmovnbe
cmp
sub
mov
pusha
xchg
cmp
pushf
or
dec
xchg
fs
test
xor
jns
dec
inc
call
mov
ret
mov
inc
loopne
jno
fmulp
or
stos
dec
loope
add
push
in
mov
or
add
arpl
insb
xor
jae
icebp
xchg
jb
fs
imull
jecxz
mov
in
mov
xchg
mov
sbbb
sub
aaa
adc
cmp
push
out
push
add
mov
xor
mov
mov
or
push
ja
js
out
cmc
xchg
push
pop
mov
xor
imul
adc
push
cmp
loope
aam
jbe
pop
adc
aaa
aad
into
out
xor
cltd
cmpsb
dec
adc
mov
add
loopne
imul
cmp
sbb
out
jns
lock
jg
cmp
xchg
or
pop
ss
fdivl
xchg
jne
test
dec
fcmove
dec
in
addr16
mov
xorl
out
sbb
test
mov
cld
in
arpl
and
and
movsb
mov
mov
rolb
xchg
pop
mov
fisubrl
cmpsl
add
xor
stos
cli
jne
dec
stc
mov
std
pusha
sub
outsl
stc
xorb
or
add
ja
mov
push
in
cmpsl
stos
push
out
mov
out
rclb
pop
sti
int
xor
push
jg
repz
xchg
and
dec
outsb
xchg
fsubrs
testb
sti
loopne
sbb
aam
test
xchg
cmp
mov
divb
shll
mov
push
pop
lcall
mov
daa
out
andl
jno
icebp
lods
or
jmp
add
aaa
mov
jno
and
push
test
jbe
adc
stos
stos
arpl
push
imul
mov
or
call
push
je
add
adc
push
cld
push
pop
fmul
mov
adc
cli
inc
cmpsl
xor
pop
imul
gs
pop
jnp
xor
or
fadds
inc
jmp
fwait
cmpsb
in
push
cwtl
xor
jecxz
xor
xlat
jb
call
notb
mov
in
push
mov
stos
stos
mov
xlat
iret
xor
repz
push
cs
movsb
inc
jmp
inc
jl
push
fs
sysret
test
push
lret
stos
clc
je
test
movsb
insb
mov
je
je
or
gs
js
jb
mov
rorb
addr16
addr16
add
lcall
addl
xchg
rclb
cmp
add
jge
shll
ficomps
fdivrs
cmp
jmp
test
mov
and
sbb
push
mov
aas
dec
pop
cmpsb
fisttpll
inc
mov
je
xor
pusha
mov
jnp
loop
ja
insb
rorb
aam
ljmp
repnz
leave
sub
shlb
add
lret
mov
test
scas
push
fisttps
and
xor
mov
icebp
daa
push
push
ret
movsl
push
cmp
popa
in
lret
jnp
jns
ret
pop
pop
or
ret
cltd
or
pop
lods
and
gs
in
lret
arpl
xor
jae
pop
inc
dec
cmp
pop
jp
dec
into
addl
mov
inc
cmp
or
jecxz
inc
adc
aaa
fbstp
mov
cli
jge
xchg
mov
repnz
xor
sbbl
int
addr16
loope
xchg
data16
mov
inc
subl
lret
push
add
jecxz
loop
daa
icebp
mov
aaa
rorl
mov
sahf
cmp
push
out
jmp
lock
pop
daa
xchg
inc
mov
shrl
pusha
lcall
fdivl
dec
push
jbe
rcpps
fwait
ds
cmp
nop
inc
int3
test
rcrl
mov
add
sub
push
push
push
jb
fnstenv
hlt
dec
or
jno
insl
adc
fs
sub
pop
xor
inc
push
outsl
mov
add
adc
or
imul
mov
es
ffreep
movsb
pop
add
and
out
rorb
pop
mov
icebp
lret
jmp
shrl
fnstcw
cld
imul
imul
sub
loope
push
jmp
roll
xchg
xor
jl
lcall
cli
inc
xchg
xor
data16
mov
scas
ret
popa
aas
stc
nop
sbb
add
sbb
sbb
inc
add
mov
jl
fsubl
and
bnd
mov
xchg
xchg
addr16
sarb
fcomp
lock
xchg
stos
inc
push
push
fbld
or
mov
mov
xor
fwait
jg
fisubl
sarl
mov
rcrl
mov
mov
or
push
or
inc
iret
mov
pop
push
fbstp
nop
mov
cwtl
je
mov
adc
lahf
push
mov
cmp
mov
inc
push
adc
mov
jbe
nop
lret
ret
fistl
inc
sub
cmp
mov
cmp
roll
push
pop
xlat
pop
in
jl
and
and
popa
inc
mov
enter
mov
pop
iret
out
push
sarl
lret
and
or
das
je
dec
jb
pop
add
sub
dec
lahf
stos
xor
js
or
stos
stos
movsb
insb
ret
lret
and
dec
push
sub
adc
sti
xchg
sbb
std
push
cmp
push
movsl
mov
shlb
fmuls
adc
mov
adc
das
inc
jb
das
rcrb
push
xor
insl
jmp
xchg
rolb
pop
pop
loope
rorl
pop
push
jp
cld
lds
mov
add
inc
lods
inc
mov
ret
int3
push
clc
add
xchg
fs
dec
in
lcall
icebp
push
stc
add
mov
mov
ss
dec
mov
cltd
mov
jae
mov
dec
jne
lods
sbb
loop
mov
loope
add
push
mov
incb
xor
mov
adc
add
mov
icebp
add
dec
mov
gs
xor
or
inc
pop
mov
inc
lds
pop
dec
test
or
dec
inc
xchg
in
mov
ljmp
jo
inc
test
stos
cltd
sbb
pop
insl
push
out
iret
movb
dec
push
pop
adc
jmp
or
xchg
adc
inc
xchg
push
stc
popl
xor
in
cmp
fimuls
mov
ret
jo
ljmp
stos
icebp
jns
cwtl
cmc
gs
pushf
stc
xchg
cmpb
in
add
sahf
mov
mov
nop
xor
jmp
lret
xchg
stos
shr
mov
lock
mov
cmp
xlat
outsl
icebp
aam
movsl
dec
mov
xor
out
mov
enter
jl
mov
ja
sbb
lock
mov
mov
rorb
inc
sub
out
or
cmc
or
test
add
pop
mov
pop
push
inc
dec
mov
mov
push
test
dec
inc
sub
push
add
loopne
stc
shrl
out
pop
or
inc
scas
mov
mov
out
arpl
test
inc
pop
loop
fldcw
dec
in
fidivrs
add
loopne
out
or
cmp
lahf
shl
fdivl
daa
fwait
jle
stos
pop
add
or
lret
das
sbb
pop
scas
pop
icebp
je,pt
jg
dec
hlt
dec
inc
xchg
std
push
xor
cli
mov
jecxz
out
call
mov
inc
int3
gs
sbb
dec
cmp
xlat
add
or
lods
add
push
lahf
test
jo
mov
ja
cmc
ss
stos
outsl
cld
inc
adc
xor
cltd
cmp
mov
jmp
test
dec
movsl
push
leave
add
and
push
inc
js
mov
jmp
loope
orb
xlat
push
pop
rclb
push
pop
mov
lret
inc
cmc
mov
xchg
sbbl
xor
aas
add
pop
ficompl
inc
shrb
in
mov
add
ret
icebp
in
stc
cmp
adc
sbb
loop
getsec
dec
loop
dec
mov
ja
enter
in
mov
sbb
rorb
xchg
pop
push
sub
fbstp
imul
notb
push
mov
loop
jp
ljmp
dec
and
frstor
pop
je
or
and
scas
lahf
daa
dec
shrl
sub
push
cwtl
shl
cmp
mov
sub
xchg
add
das
cli
cmpsl
mov
dec
ror
daa
aam
sti
loopne
or
cmp
insb
rclb
out
jo
insl
or
ljmp
test
mov
loope
imul
and
adc
loope
inc
mov
clc
fisttps
add
inc
fistl
push
or
cs
jecxz
push
jle
jp
imul
dec
divb
dec
aaa
movsb
ficomps
test
push
ror
movhps
and
call
pop
imul
nop
call
ds
jae
pop
mov
mov
or
xor
lea
xchg
in
inc
mov
push
and
cmp
nop
xor
inc
sub
repz
xchg
popf
push
cmp
mov
push
xlat
jmp
repnz
popf
mov
cmp
jno
sub
fsubl
cld
inc
pop
push
mov
or
mov
sbb
popa
into
in
lret
popa
inc
int
mov
and
scas
pop
loop
jge
js
jge
pop
mov
in
mov
ljmp
inc
std
out
mov
dec
call
mov
stos
clc
push
shlb
and
mov
fs
orb
shrb
pop
cmp
fdivrl
xlat
mov
xchg
push
dec
pop
lret
adcb
imul
lock
daa
int
xor
inc
clc
and
pushf
pop
sbb
lret
mov
dec
outsb
test
inc
shll
pop
in
mov
outsb
lret
push
mov
aam
shlb
sbb
fbstp
dec
pop
xchg
pop
push
adc
ficomps
adcb
ljmp
jge
insb
fcmovnbe
dec
inc
orl
pop
add
xchg
ret
xchg
or
ffree
stos
ljmp
and
or
out
cmp
fldt
jmp
sbb
aad
shl
mov
inc
jae
aas
mov
pop
adc
adc
inc
shl
dec
subl
pop
fndisi(8087
shlb
add
dec
jl
addl
add
pop
cmp
out
js
dec
rcrl
leave
bound
leave
add
out
xchg
mov
outsb
sbb
fwait
inc
fstps
xchg
jle
orb
sarl
push
pop
popa
fstpt
cs
out
sub
leave
aad
inc
rolb
mov
aad
push
lods
add
pop
rcrl
push
gs
mov
in
mov
adc
and
repnz
pop
adc
out
cmp
jb
add
fildll
orb
repz
outsl
lea
pop
sub
stos
mov
inc
and
jecxz
test
push
faddl
add
notl
shlb
and
mov
mov
mov
notl
adc
mov
rolb
cmp
add
xchg
fmuls
stc
dec
ljmp
mov
mov
jo
push
dec
leave
int3
mov
adc
add
sbb
js
xor
sbb
jnp
or
xchg
push
jbe
aam
je
int3
cmp
cmp
call
hlt
jmp
or
or
mov
mov
fsubrs
add
xchg
rclb
or
sarb
test
jg
dec
push
cmc
imul
xchg
cmp
mov
js
sbb
ljmp
xchg
jge
mov
jmp
dec
lock
mov
mov
mov
cwtl
cmp
xor
mov
mov
or
pusha
sbb
cmp
push
les
cld
jg
in
xor
dec
std
lds
imul
pop
inc
jo
or
push
sub
dec
xchg
insl
dec
push
aam
ret
adc
in
pop
mov
push
test
notl
push
je
pop
pop
xchg
or
cmpsl
xor
outsl
dec
nop
mov
fsubrs
sbb
inc
int3
pop
ret
test
inc
leave
lret
inc
sub
nop
mov
mov
sbb
icebp
pop
and
movsb
sbb
ds
lret
imul
push
cltd
dec
dec
inc
cmp
mov
push
out
jb
xor
pop
and
or
sti
aad
pop
inc
cmp
scas
jp
sahf
mov
lret
xchg
add
cmpsl
mov
sbb
pop
mov
hlt
mov
xchg
data16
inc
jl
hlt
xchg
xlat
xchg
mov
ss
dec
mov
gs
add
jns
adc
push
cld
sti
inc
cmc
pop
fcompl
mov
pop
push
shlb
fdivrl
cmp
fisubl
adc
insl
andl
scas
mov
movsb
jnp
std
les
adc
jnp
mov
cmpsb
stos
je
call
adc
add
mov
insb
push
mov
out
andl
fldcw
jmp
movsl
pop
fsubrl
daa
jp
add
cmpl
dec
and
and
cmp
scas
pushf
jle
inc
push
clc
xchg
jae
mov
daa
std
cld
fs
jnp
pop
inc
ljmp
stos
mov
scas
jno
xor
or
or
movl
fidivrl
push
leave
sub
hlt
iret
mov
ud0
aam
adc
inc
xchg
cmp
inc
add
mov
sahf
mov
shr
jns
or
cmp
lods
in
pop
fisubs
aad
xchg
icebp
pop
fcomi
adcl
lock
jmp
mov
ret
subb
jmp
and
out
stos
loope
rcl
xor
lcall
std
sbb
push
fiaddl
lds
dec
sub
bound
xchg
adc
insb
jg
mov
and
cmp
ficompl
ret
pop
testb
inc
std
lods
pop
mov
das
ljmp
popa
dec
push
lcall
outsb
insb
icebp
push
lods
push
loope
clc
sub
leave
fwait
xchg
xchg
push
cld
push
lods
sar
fwait
sbb
mov
xchg
push
rcll
in
test
push
popf
cmp
mov
pop
push
sub
xchg
mov
faddl
pop
mov
insb
std
add
lahf
add
int3
insl
outsl
sbb
xor
lock
gs
out
out
lds
ret
xchg
pop
add
jns
xor
xorb
or
jno
aad
fs
lret
ret
cltd
div
loope
inc
int3
notb
mov
sub
mov
in
jge
daa
pop
push
or
jmp
xlat
dec
xor
inc
jp
xchg
mov
in
popa
push
sbb
add
push
test
sub
sbbb
out
test
jmp
mov
data16
decl
scas
js
test
pop
nop
popa
cmp
and
push
cmpsl
ficoms
in
pusha
cmp
mov
lret
add
mov
les
daa
scas
lahf
in
and
fs
add
jne
rep
xor
aas
js
frstor
fidivl
push
mov
jnp
pop
ljmp
loopne
outsl
mov
adc
mov
push
adc
push
mov
push
mov
or
dec
cmc
jge
lock
fs
push
in
stos
sub
jle
ja
dec
dec
icebp
cmpsl
pop
fldt
sahf
fcomip
push
adc
repnz
popa
adc
and
je
popa
xor
jb
cmp
rclb
pop
xchg
sub
fistpl
or
or
pop
xchg
test
push
xor
cmp
addr16
pop
mov
add
mov
jbe
inc
lahf
nop
push
aad
sub
push
fistpl
loope
cmp
add
pop
dec
arpl
mov
outsb
rcll
add
mov
je
out
cmp
or
imulb
sahf
div
pop
xchg
xchg
mov
sub
or
lret
inc
add
jecxz
cld
mov
fmuls
das
sbb
jp
push
mov
sarl
push
test
jb
ror
mov
sub
scas
out
jp
imul
rol
mov
lret
push
mov
fidivl
adc
and
mov
push
sbb
fwait
imul
pop
adc
adc
mov
jae
mov
adc
sbb
pop
imul
mov
pop
sub
adc
adc
xchg
mov
cmpl
jl
jae
ret
push
dec
mov
sub
mov
mov
and
or
daa
mov
aad
jmp
jp
cmc
and
adc
adc
pusha
popf
out
or
rol
xor
and
loop
shr
sub
fmul
shlb
enter
push
lds
jp
loope
inc
mov
sbb
icebp
xchg
jae
lahf
std
in
add
test
leave
ljmp
pop
loop
push
sarb
cwtl
xchg
imul
inc
loope
cmpb
xchg
repz
dec
mov
negl
rcrl
pushf
jns
scas
mov
flds
jno
fmull
aad
or
mov
jl
jmp
scas
lcall
or
leave
cmpsl
fs
insb
xor
dec
mov
ss
adc
mov
dec
mov
lret
jns
mov
shr
dec
add
bound
js
scas
and
inc
ja
rorl
mov
arpl
jnp
pushf
mov
ficompl
cmp
sbb
imul
fsts
inc
ss
push
inc
push
jne
inc
mov
mov
add
aaa
pop
outsl
dec
nop
mov
or
push
cmpsb
call
cmp
mov
cld
jmp
pushf
mov
lahf
jl
xlat
je
data16
add
jle
mov
mov
mov
adc
aad
or
out
ja
in
push
or
dec
push
jp
inc
je
sbb
out
addr16
jnp
daa
inc
call
cmpsb
cs
out
adc
sbb
enter
push
jmp
add
or
ret
xor
adc
jl
lea
rol
or
aad
cld
sub
testl
popf
adc
clc
jecxz
popf
cmc
sbb
gs
shlb
ds
add
fisttps
clc
and
and
sub
pop
seto
insl
out
fwait
aad
adc
fisttpl
in
xchg
and
loopne
mov
sar
jne
sbb
cmp
sahf
out
cmp
cli
jl
mov
jne
fstps
adc
insb
sub
push
in
jo
adc
and
lea
jae
ss
orb
icebp
stos
fnstcw
divb
es
dec
scas
add
adc
dec
fcomps
push
lods
hlt
dec
test
pop
shll
pushf
pop
push
pop
mov
adc
inc
in
scas
inc
xchg
xchg
or
xor
mov
push
std
arpl
ror
xchg
lods
sub
lahf
inc
aaa
lcall
and
in
sbb
insl
test
mov
inc
xchg
push
jl
rorb
jo
lret
mov
adc
mull
cmp
in
dec
test
add
jmp
xchg
adc
inc
mov
mov
outsl
push
adcb
fdivp
dec
lock
test
inc
or
mov
xchg
fdivrl
inc
repz
mov
xchg
push
lock
lea
add
daa
test
loop
ds
mov
pop
xor
jp
xchg
fwait
jmp
fiadds
bound
dec
loop
jge
or
lahf
das
cmc
in
and
stc
das
es
xchg
mov
loop
int3
jae
in
pop
or
inc
movsb
mov
enter
mov
pop
js
loop
xchg
mov
xor
push
xchg
les
insl
push
in
cmp
sbb
inc
lods
mov
jnp
ret
jp
outsl
in
daa
std
xchg
dec
into
cltd
nop
jge
sbb
sti
sbb
push
mov
add
enter
adc
out
loopne
sbb
sbb
sbb
cld
repz
into
roll
jns
pusha
and
or
mov
in
or
lea
cmp
and
mov
test
lcall
add
test
xchg
loope
adc
test
aad
cs
cmp
sub
flds
jns
std
jnp
roll
push
lret
jg
and
push
jnp
jmp
sbb
fwait
mov
insb
jmp
pop
xorb
mov
lcall
mov
cld
scas
jg
fimull
inc
mov
insb
lahf
cmp
push
push
ss
sub
or
lds
and
lcall
dec
xor
and
jmp
scas
iret
jae
add
cmp
mov
add
in
addr16
push
or
jg
xchg
das
push
test
mov
pop
jno
and
adc
sbb
pop
stos
mov
subb
mov
push
inc
fcomps
fdivrs
mov
sub
and
or
mov
pop
adc
lcall
xchg
out
lea
and
shll
fadds
xchg
jg
inc
jl
test
mov
movsb
push
inc
jmp
popa
xor
sub
cmp
paddusw
pop
push
mov
pop
popa
movsb
insl
outsl
mov
or
aam
pop
iret
hlt
jecxz
bnd
sarl
cmp
sbb
xor
cs
fstps
sbb
jno
xor
jge
roll
icebp
in
mov
and
insb
pop
ret
mov
pop
xchg
or
out
lea
lock
push
push
scas
imul
sbb
dec
cmp
mov
push
pop
outsl
leave
fadd
test
inc
xor
mov
cmp
sub
xchg
sub
adc
xchg
mov
xor
or
mov
push
fcmovnbe
or
sbb
cltd
dec
scas
jae
rol
or
pop
xor
cld
movsl
repz
and
xor
inc
or
pop
mov
xor
sahf
mov
xchg
or
cld
mov
popf
rcrb
aaa
std
sbb
mov
jl
negb
push
xor
xor
mov
and
mov
mov
mov
popa
sahf
add
add
xchg
sahf
mov
test
cmpsb
sbb
adc
shrb
shrb
jne
aas
adc
or
or
lock
ss
insb
jnp
or
out
clc
jbe
xor
adc
int
cs
mov
imul
dec
push
mov
xchg
fwait
sbb
dec
or
fnstsw
inc
aas
cmp
imul
mov
inc
out
inc
test
fsubs
jle
ret
js
icebp
cmp
aam
mov
test
xor
stos
test
cmp
inc
ds
fcomi
jns
iret
mov
faddl
out
fs
mov
mov
pop
outsb
jl
adc
shlb
stos
xchg
popf
adc
xchg
cmp
add
or
rclb
movsb
dec
or
inc
leave
push
push
aaa
jge
insb
jo
pop
jb
popl
jo
mov
xchg
or
push
and
sub
xor
pop
sbb
or
repz
out
rorb
xlat
repnz
movsb
and
out
lret
cmc
stos
fbstp
pop
hlt
push
mov
out
in
push
xlat
sub
dec
es
mov
mov
mov
xchg
mov
jae
test
inc
loope
cmp
cmp
push
inc
add
fdivrl
stc
scas
push
jnp
pop
repz
xchg
jmp
xor
push
je
loop
in
mov
sbb
push
push
enter
lds
or
ss
add
xchg
loop
jmp
add
fbstp
cmp
inc
push
aad
mov
scas
icebp
and
xchg
clc
mov
fiadds
inc
pop
and
loop
mov
sbb
push
adc
jle
xchg
mov
orb
sub
insl
cmp
into
adc
dec
sub
leave
or
xchg
lahf
sbb
and
or
lds
test
pop
jo
add
popf
rolb
sub
sti
xchg
mov
sahf
or
sbb
gs
loopne
cmp
nop
shll
and
ja
stos
stc
mov
in
mov
pop
xchg
dec
xchg
ror
mov
aam
xlat
pop
gs
shrl
cltd
jecxz
sbb
jns
lcall
scas
jno
imull
lods
loope
in
insb
adc
and
dec
xchg
fldenv
dec
iret
repz
push
mov
js
into
imul
mov
and
sti
repz
or
push
ret
nop
aam
xlat
aam
sahf
jge
adc
jmp
scas
lods
pop
mov
lcall
lea
jae
pop
out
jp
mov
push
in
inc
sbb
pop
mov
insl
ljmp
repnz
xchg
movsl
dec
rorb
xchg
mov
dec
push
pop
mov
cmp
pop
into
jns
aam
mov
mov
lcall
in
shld
dec
nop
orb
xchg
cmp
sbb
cmp
dec
movsb
inc
mov
sbb
lret
jae
mov
outsl
dec
movsl
sbb
cld
cmpsb
sbb
fldt
popa
jmp
int3
push
imul
out
fmuls
mov
or
fcoml
adc
sti
or
pop
testl
ret
mov
and
inc
pop
std
stos
inc
scas
std
inc
inc
sarb
movsl
add
add
or
iret
lock
lds
mov
and
pop
and
popf
popa
push
or
out
outsl
pop
cltd
les
or
mov
push
cltd
inc
cmp
mov
loop
pushf
lds
and
sbb
push
mov
xor
xchg
mov
or
icebp
maxps
inc
nop
sbb
pop
lret
push
pop
sbb
cmpsb
outsl
pop
imul
dec
cmp
aaa
lcall
ss
in
lods
xchg
std
pop
mov
orl
xor
minps
dec
lahf
mov
pop
hlt
dec
mov
pop
out
push
lock
jns
mov
sub
clc
add
jns
imul
cli
xor
mov
sbb
fmuls
jbe
inc
sti
mov
ss
pop
pop
jle
clc
sbb
jl
pop
out
mov
inc
mov
mov
mov
xchg
lret
fsubrl
paddw
movsl
pop
mov
out
push
call
mov
imul
and
stos
daa
out
inc
push
or
movsl
fimull
lock
push
aam
cmpsb
and
sub
adc
shll
pushf
jmp
leave
je
test
popa
popa
sub
jno
push
jnp
fs
popa
xchg
out
ret
pop
fists
int3
sbb
push
pop
jle
sahf
sbb
fwait
lods
shll
mov
lcallw
jmp
setg
fiaddl
loope
iret
mov
jp
aas
sarl
xchg
push
and
and
jno
aaa
repz
out
fwait
shll
cmp
arpl
lods
test
push
or
in
repnz
and
mov
out
mov
pop
lods
or
push
jns
xchg
lret
outsb
pop
dec
aas
mov
mov
jno
xor
fs
push
std
ficompl
mov
mov
icebp
add
insb
cmpsb
xchg
mov
popa
mov
pop
cmpsl
stos
mov
inc
inc
out
push
mov
aad
outsl
mov
mov
pop
mov
pop
adc
add
in
sbb
mov
idivb
xchg
rorl
sarb
add
cmp
movsb
jge
xchg
push
sub
jo
inc
mov
ret
lods
sub
lcall
cwtl
adc
bound
movsb
push
mov
loope
mov
sbb
cmc
mov
pop
out
inc
jbe
mov
fbstp
movb
add
cmc
adc
insl
add
lea
stos
cwtl
fcomip
mov
adc
dec
shrd
int
lcall
rclb
sbb
cmp
int
fcompl
push
cwtl
clc
jp
xchg
push
pop
cmp
ja
enter
mov
loop
test
and
es
pop
xlat
ret
sahf
sbb
or
cmp
and
xchg
ret
loope
fs
jo
in
sti
sbb
cltd
mov
sbb
or
mov
and
jae
fcmovne
scas
imul
stc
rolb
cmp
adc
push
cmp
loop
sbb
enter
mov
clc
hlt
adc
rorb
sbb
sti
mov
les
shrb
inc
cmp
sub
hlt
mov
dec
xlat
rclb
jb
sarl
idivb
push
repz
fmull
hlt
xchg
inc
push
lret
out
xchg
sbb
lea
and
lret
mov
adc
and
jbe
pop
mulb
inc
cli
mov
pushf
cltd
adc
and
mov
and
mov
ret
mov
cmp
xchg
or
insl
je
sub
push
cvtdq2ps
pop
and
aas
cmp
roll
insb
lock
and
jno
mov
shl
add
fsubl
cld
and
dec
lods
addr16
mov
rclb
mov
jge
xor
inc
jnp
jmp
xor
in
adc
in
andb
mov
add
xor
inc
mov
fs
jo
inc
mov
in
repz
jo
xchg
push
leave
js
insb
sbb
mov
xchg
int3
out
rclb
or
xor
and
out
fs
push
add
push
sti
mov
rorl
filds
mov
mov
pop
add
lods
outsl
data16
lods
pop
xchg
jae
mov
lahf
into
mov
outsl
in
xchg
outsl
es
add
daa
push
rcrl
mov
push
cmp
jne
jmp
sbb
or
bound
sti
es
xchg
nop
xchg
jmp
inc
das
out
iret
and
out
aad
iret
mov
stos
ljmp
and
mov
seta
add
imul
jae
cwtl
addr16
mov
sbb
mov
pop
jns
adc
aaa
data16
andb
mov
popf
aas
std
add
mov
into
int
sub
lock
push
mov
push
push
daa
enter
iret
out
cli
in
mov
cmp
lret
ljmp
js
shr
nop
jp
cmc
mov
in
jmp
arpl
sbbl
jmp
loope
push
pop
cvtpi2ps
mov
sahf
cld
test
fidivrs
xor
and
lods
inc
inc
push
icebp
cwtl
push
xchg
fistps
call
push
xlat
popf
mov
imul
xor
arpl
push
sahf
mov
or
mov
aam
dec
daa
imul
sarb
mov
xchg
mov
mov
push
es
enter
xchg
mov
lret
ds
stos
xor
jo
jbe
mov
addb
sbb
and
fmul
push
jns
mov
push
xchg
mov
scas
sahf
jl
jle
sbb
cltd
add
xor
xchg
push
mov
outsl
es
mov
jo
pushf
and
movsb
incl
xchg
add
aad
imul
or
cmp
or
sbb
ret
ret
adc
sarb
sbb
pop
pop
adc
mov
lret
enter
or
dec
iret
and
mov
mov
aaa
cmp
ret
int3
jb
movsl
data16
jecxz
in
imul
pushf
orl
jne
push
cmpsl
sbb
outsb
mov
dec
loopne
jge
test
cltd
add
mov
popf
adc
mov
rolb
int3
mov
scas
hlt
test
imul
jg
scas
cmpsb
shr
push
dec
jge
repz
std
ds
sub
pop
mov
js
shl
fisubrs
cmp
add
xchg
jo
mov
pop
ficoml
or
jno
pop
loop
fcmovnbe
nop
jne
sbb
or
pushf
js
rorb
jnp
sbb
lcall
sarb
insb
inc
mov
sarl
nop
mov
cltd
aas
scas
mov
jmp
pop
lea
fsubrl
repz
jle
push
add
in
sbb
and
aaa
mov
xor
and
ret
arpl
inc
jg
xorl
pusha
cmp
xchg
adc
or
fsub
js
mov
or
xorl
sub
cltd
fsubrs
mov
push
inc
push
jo
adc
or
jecxz
sti
out
insl
adc
test
and
stc
pop
leave
rol
gs
and
js
ss
repz
pop
xchg
push
lahf
mov
add
repz
pushf
aaa
jnp
leave
xor
xchg
inc
mov
std
cmp
sbb
imul
xor
out
inc
repz
pop
dec
mov
cmp
pop
test
lea
inc
push
test
mov
push
xchg
dec
mov
pop
mov
loop
or
and
mov
pop
sub
cld
test
and
mov
push
lcall
imul
sub
sbb
fadd
mov
flds
fisttpl
cmpsl
adc
sub
mov
pop
pusha
jecxz
popa
push
xor
pop
pop
lret
dec
pop
push
xchg
jns
xchg
cmp
pusha
pop
and
lds
push
in
or
fs
add
mull
hlt
xor
mov
les
mul
mov
mov
iret
mov
dec
pop
xor
orl
jae
subb
mov
in
mov
cld
in
dec
pop
fiaddl
int
fdivrs
push
xor
xor
mov
dec
mov
test
and
cmp
inc
cmp
mov
xor
cld
cmpsb
and
add
jmp
mov
and
sbb
ret
std
outsb
and
movsb
inc
mov
aam
inc
cli
xchg
pop
jmp
ds
mov
xchg
xor
sbb
or
jle
loop
add
test
out
mov
lret
mov
dec
sbb
add
dec
fwait
add
lcall
adc
rclb
icebp
loop
cli
push
int
mov
data16
jno
push
stos
leave
int
fs
mov
pop
fs
lcall
adc
std
xor
aaa
fstpl
fstpl
ud1
jl
pop
inc
popa
loope
dec
jno
cs
or
mov
pop
and
ss
leave
test
cmp
add
fs
outsb
loop
notb
adc
mov
xchg
jno
fxch
mov
test
and
mov
aam
insb
stc
ficoms
int
push
je
imulb
add
into
in
push
adc
cli
push
cli
xor
jecxz
mov
push
lcall
mov
mulb
inc
xchg
jbe
adc
or
jbe
jp
fcmovb
outsl
sub
mov
inc
xlat
mov
insl
adc
aad
jbe
jns
xor
mov
xchg
arpl
cmp
jno
jl
jo
jge
stc
adc
je
mov
fisubs
jle
push
test
xchg
sub
push
push
push
movsl
sti
ja
add
ret
jb
xor
in
inc
test
xchg
inc
or
les
jno
add
popa
mov
pop
test
pop
mov
jg
mov
shl
lods
xchg
mov
push
fcmovu
jbe
orb
push
inc
xor
sbb
push
test
out
push
or
orl
jne
js
leave
add
xor
dec
mov
mov
pop
and
sbb
ror
and
cltd
fdivr
xchg
adc
xchg
pop
subb
mov
and
loop
lret
sbb
adc
xchg
push
popa
xchg
in
pop
rcrl
push
int
mov
fmul
cmpl
lods
sbb
test
in
sbb
jge
lret
sbb
leave
mov
pop
cli
lods
push
sbb
cltd
in
ds
outsl
add
sbbl
add
push
xchg
dec
idivb
xchg
jbe
mov
scas
mov
andb
push
mov
lods
into
aam
test
mov
ljmp
dec
cmpsb
daa
mov
jo
out
movsl
mov
pop
dec
sub
addl
mov
xchg
movb
out
lods
or
ret
addl
or
int
shrl
or
xor
aaa
fsubl
fisubrs
fistpl
ficoml
adc
mov
fs
xchg
lods
fldenv
es
int
test
fidivs
repz
cmpsl
lea
cmp
ficomps
mov
lcall
popa
popf
cmc
pop
or
pop
iret
mov
pop
mov
test
divb
ss
fstpt
xor
daa
imul
cmpsl
ds
icebp
jmp
ja
add
ss
stc
pop
xor
add
cwtl
push
cmp
add
fnstcw
adc
out
mull
gs
sub
stc
stc
scas
dec
mov
pushf
movsb
push
adc
push
mov
add
xor
loope
in
dec
arpl
jle
push
adc
jg
stc
pusha
lahf
enter
dec
or
enter
and
pusha
fstl
mov
and
in
std
push
adc
pop
jnp
inc
jbe
ljmp
sbb
sub
popf
or
mov
mov
mov
iret
pushf
fndisi(8087
cmpsb
ret
inc
insb
outsl
outsb
and
repz
dec
js
popf
leave
jecxz
pop
push
mov
inc
movsl
pop
push
xor
fs
jg
stos
jo
and
lods
lock
xor
loopne
mov
popf
inc
mov
aad
jae
sbb
adc
insl
mov
jp
ror
mov
shlb
fwait
mov
xchg
or
and
push
jne
pop
mov
clc
or
and
sbb
inc
mov
in
and
jno
mov
adc
push
addr16
push
xor
xor
lret
in
sbb
add
mov
push
testb
dec
xor
sub
jno
mov
mov
or
lock
add
fcomps
jmp
inc
clc
xor
push
repz
dec
mov
rcrl
enter
pushf
pop
xlat
push
stc
addr16
dec
jb
sbb
fildl
push
xor
sbbb
ss
jae
cmpsl
nop
sub
popa
mov
js
popf
ret
lret
jmp
in
sar
sbb
aam
scas
push
aam
sbb
popa
fistpll
add
mov
pop
add
fidivrl
leave
cmp
pop
mov
lds
pop
inc
xchg
mov
push
sub
xor
mov
jg
in
mov
mov
loop
ljmp
and
xchg
aam
lea
inc
das
leave
jle
out
pop
jge
insb
shrl
jle
xchg
sbb
out
dec
clc
fwait
pop
jmp
test
and
add
in
stos
in
loope
std
enter
add
pcmpgtb
mov
adc
test
pop
xchg
pusha
stos
add
shlb
mov
aam
mov
inc
cli
mov
stos
adc
pusha
add
mov
dec
into
pop
stc
scas
pushf
fcoms
inc
scas
push
ja
and
pusha
jo
fsubrp
mov
sub
lods
loope
data16
cmp
lahf
jb
in
cld
enter
pop
cltd
sub
xor
jns
shlb
icebp
lds
jle
sbbl
sub
loope
test
mov
mov
xor
push
pop
or
mov
call
bound
insl
add
xchg
in
dec
movsb
pop
test
lcall
lahf
jno
mov
sbb
movsl
jle
pop
mov
in
push
inc
jne
xor
push
pop
testb
ss
stc
aam
pop
enter
cmp
hlt
inc
adc
in
jnp
sub
xchg
in
ds
in
lds
outsb
sbb
fldl
cmpsb
unpckhps
add
dec
push
cmp
fcmovne
mov
sbbb
add
mov
sub
addl
sbb
cmpsb
clc
xor
adc
push
xchg
fcmovb
mov
push
mov
fidivrl
sub
inc
jge
in
mov
xchg
dec
lods
cmpsb
push
xchg
pop
mov
mov
xor
stos
repz
test
cmpsb
inc
adc
sub
mov
js
dec
mov
mov
mov
cmp
test
xchg
gs
mov
push
cmp
ja
dec
repnz
movsb
test
leave
imul
dec
sub
lods
mov
pop
out
fsubp
ror
ss
xchg
arpl
adc
test
dec
fcoms
mov
inc
dec
mov
xorl
lods
clc
pop
jecxz
mov
xor
cmp
jns
icebp
andl
in
cmp
xchg
jne
mov
aaa
fs
shl
les
pusha
call
pop
add
lock
xchg
fists
mov
call
icebp
xor
call
xchg
shl
jne
cmpsb
mov
out
ss
adc
dec
add
mov
in
test
pushf
jle
inc
sub
dec
arpl
roll
push
int3
inc
nop
aad
push
iret
adc
mov
stos
repz
mov
mov
mov
pop
mov
outsl
out
sub
imulb
imul
shl
add
add
adc
mov
in
cltd
loop
pop
shrb
mov
sub
jns
sahf
bound
push
push
adcb
pop
ret
addr16
mov
cmp
sub
add
call
shrb
pop
pushf
clc
push
lds
loop
jp
xor
adc
test
fisubrl
movsl
pop
push
ret
xchg
nop
stos
dec
cmc
mov
xor
sbbl
cld
pushf
inc
push
leave
pushf
iret
mov
gs
pusha
in
pusha
xlat
lds
pop
pop
sbb
cmc
stos
fwait
jno
call
loopne
mov
mov
ss
xor
cmpsl
out
pop
call
aaa
dec
sarb
inc
pop
lret
add
sbb
es
mov
and
push
dec
mov
lret
mov
jmp
loope
add
and
mov
cmp
shl
out
xchg
jmp
mov
addr16
test
mov
cmp
jae
lret
pop
out
mov
fdivl
xlat
mov
imul
mov
ss
outsl
lahf
aam
or
fdivrs
mov
std
shlb
or
stc
es
das
es
inc
inc
dec
mov
cmp
jo
mov
mov
dec
lcall
jecxz
adc
sarb
daa
xor
shrl
leave
sbb
fdivrl
popf
test
xchg
xchg
xchg
daa
jge
das
push
mov
pop
insl
push
mov
push
fbld
loope
movd
lahf
in
lret
mov
int
xchg
jle
cmp
je
test
add
aam
out
xorb
popa
cwtl
mov
push
ret
inc
and
out
pushf
adc
fmull
pop
inc
fmul
cli
pop
mov
dec
inc
loopne
int3
out
xor
out
ficomps
mov
add
cmpsb
xor
addr16
test
dec
dec
movsl
jp
ret
mov
rol
xchg
inc
dec
int3
mov
cmp
cmp
loopne
and
cmp
rolb
insl
jp
sahf
jnp
int
xor
les
movsl
ficompl
lcall
pop
jno
stos
dec
jge
xchg
enter
enter
or
shll
xlat
call
push
movsl
orl
jge
push
and
cmc
jnp
inc
jnp
xchg
shl
push
push
ret
cmpsl
mov
push
fsubrl
jecxz
inc
lds
inc
mov
xor
jns
test
ljmp
out
call
pusha
cmp
mov
push
mov
adc
xchg
cld
dec
inc
sub
loopne
and
rol
in
dec
stos
jno
jb
int
gs
addr16
push
jge
jae
inc
xor
or
inc
mov
cltd
push
ret
sub
test
mov
and
sub
aas
inc
les
movsb
push
pushf
jbe
ljmp
lret
jmp
outsl
xlat
mov
mov
popf
add
inc
sbb
mov
out
lods
sub
mov
push
js
stos
mov
xchg
std
adc
jecxz
fcmovbe
shrl
inc
jno
mov
imul
imul
xorl
add
mov
xlat
xor
or
stc
jno
fsubs
xchg
jecxz
xchg
mov
jne
jl
dec
jmp
and
in
aas
mov
sub
mov
scas
mov
mov
cld
dec
in
into
mov
lahf
xchg
fiadds
push
xor
cmp
mov
imul
jmp
sbb
jmp
hlt
and
lret
pop
cli
test
mov
daa
cmp
cmp
pushf
adc
subb
std
jns
push
ds
jle
rorl
or
aas
pop
lret
repz
xor
dec
and
shll
sbb
bound
cld
adc
ficoms
cli
scas
and
mov
mov
pop
dec
pushf
mov
mov
testb
mov
aaa
inc
push
xchg
loopne
push
fildll
aad
or
movsl
sub
xor
xchg
xchg
jmp
dec
sti
sbb
lea
jecxz
mov
outsl
leave
mov
or
imulb
xchg
jmp
pop
fistpl
fs
popa
jecxz
or
pop
dec
out
inc
xorps
mov
or
popf
jbe
pop
test
rcrl
out
dec
mov
mov
push
jnp
cld
mov
test
mov
xor
adc
std
stos
add
popf
mov
mov
mov
ficomps
dec
mov
in
xor
hlt
inc
mov
and
shll
stc
adc
push
icebp
mov
mov
dec
mov
pop
mov
divl
push
pop
and
loope
js
lahf
fnstenv
arpl
lock
dec
cli
or
cmp
mov
xchg
and
fsubp
hlt
sahf
jne
incb
mov
mov
je
lods
pop
mov
ljmp
pusha
rolb
pop
and
incb
dec
push
adc
shr
pusha
cmp
add
pop
add
in
pop
mov
add
xlat
and
fld
cmpsb
mov
sbb
aas
pop
mov
cmpsb
mov
das
xor
unpcklps
test
cwtl
jo
imul
xor
into
enter
shl
push
push
pop
jmp
out
test
in
jns
adc
mov
xchg
cmpsl
cs
movsl
call
js
inc
mov
shlb
cmp
cmp
loope
aad
pop
mov
pop
xorl
mov
add
sbb
les
mov
jbe
subl
shll
cmp
in
and
xchg
adc
mov
jo
push
adc
mov
mov
xchg
clc
sub
loope
js
ds
pushf
repz
mov
aad
leave
jne
mov
mov
es
mov
mov
add
into
stc
jne
jg
xchg
mov
adc
shrb
or
and
mov
adc
jnp
push
jg
pop
jno
movsl
int
jns
movsl
adc
jo
rep
pop
xor
shlb
xor
sbb
sbb
jo
loop
movsl
cltd
mov
fwait
call
jo
rcrb
mov
add
into
push
filds
xor
je
in
rcrl
pusha
in
and
dec
lcall
insb
mov
push
sub
sub
dec
mov
icebp
push
mov
cmp
arpl
rorl
dec
std
mov
lcall
in
stos
adc
in
mov
xchg
mov
jge
mov
les
lcall
dec
popf
mov
push
push
fisttpl
scas
insl
xchg
pop
xchg
inc
ss
push
ret
mov
pop
lret
adc
mov
xchg
cmp
cmp
jl
jbe
adc
into
push
mov
loope
ss
cmp
stos
jl
ret
jmp
lods
xchg
xchg
inc
insl
jl
jne
out
pop
loopne
mov
les
stos
pop
or
int
cwtl
cmp
arpl
sti
add
jge
insl
popa
mov
cmp
pop
je
fistps
mov
lcall
xchg
shrl
fdivl
xor
int3
fildll
fistl
adcl
scas
xor
pop
inc
or
in
sbb
orl
je
sub
pop
jmp
mov
outsl
or
test
ljmp
push
ss
push
mov
lds
add
jl
jne
mov
xchg
jg
bswap
in
cli
adc
adc
pop
pop
leave
stos
mov
sub
sarb
mov
ret
adcl
pushf
aad
mov
cmp
out
nop
dec
aam
sahf
rcrl
sub
inc
mov
xchg
xor
cmp
xchg
mov
dec
cmp
add
mov
mov
dec
mov
cmpsb
and
push
push
insb
loope
adc
fsub
jb
mov
jle
scas
and
mov
nop
je
lret
mov
pop
incb
dec
cld
ret
cld
sub
cli
aas
sub
hlt
mov
loope
jno
mov
pop
and
jecxz
adc
jp
ficoms
out
mov
mov
dec
ret
imul
outsl
xchg
in
adc
outsl
adc
or
fucomp
xor
dec
and
loop
mov
push
inc
and
int
mov
push
lret
mov
ret
add
dec
dec
enter
jo
push
sbb
rorl
lds
out
insb
mov
xchg
push
and
pop
and
cmp
xchg
cltd
sbb
xrelease
push
adc
jb
fdivs
call
mov
dec
sub
or
gs
mov
mov
jae
mov
mov
jg
pop
cmpsb
popl
mov
push
jp
cwtl
push
imul
hlt
hlt
hlt
xchg
or
mov
ret
dec
cmp
push
jp,pt
sbb
mov
adcl
into
sbb
ljmp
add
pop
xchg
insb
ljmp
lcall
pop
subl
xlat
out
add
ljmp
inc
insb
push
es
cmp
xor
or
negl
repz
mov
insb
stos
sub
add
in
dec
pop
inc
stos
sub
lods
cli
jge
aad
cli
jmp
xchg
push
rorb
scas
dec
fistpl
scas
pop
dec
idivb
mov
mov
cmp
push
jns
jp
or
loopne
mov
xlat
and
jnp
daa
or
or
aaa
enter
fwait
push
dec
and
cmc
icebp
jp
mov
fwait
mov
sbb
cmova
dec
push
shrb
add
mov
jbe
std
or
push
lods
shrb
hlt
jno
hlt
outsl
lods
bound
dec
fistpl
out
mov
fisttpll
jmp
mov
pop
rcrl
jne
pop
push
jge
aam
cmp
dec
xchg
pop
dec
enter
ja
addr16
xorl
repz
and
pop
pop
aad
jecxz
cld
jno
sub
loop
push
cmp
mov
and
xchg
adc
and
fdivrs
push
inc
mov
jp
dec
ja
imul
add
push
xchg
xchg
lcall
out
in
xchg
jae
jecxz
imul
xchg
and
in
inc
jecxz
sub
mov
lods
add
gs
repz
fmul
sbb
mov
lods
bound
push
repz
jb
aam
pop
clc
insl
aas
arpl
sub
cmpl
lcall
out
and
xchg
insb
test
jnp
jecxz
mov
mov
sub
dec
mov
and
ja
jle
push
push
jbe
rorb
push
xchg
iret
test
hlt
cmp
dec
out
xchg
call
aam
push
mov
mov
xchg
jae
aaa
push
push
dec
fwait
sub
pop
int
cmp
cmp
repz
push
imull
les
fwait
fs
scas
pop
scas
out
mov
int3
sbb
cwtl
sbb
dec
or
lret
out
and
add
insl
stos
aad
and
jo
mov
loopne
inc
dec
out
adc
pop
dec
fwait
cmp
inc
or
mov
mul
in
xchg
clc
pop
test
mov
addr16
mov
int3
sbb
repnz
mov
push
xchg
xor
aas
aaa
push
xchg
xor
xchg
rcl
xchg
jg
xor
push
pop
fisttpl
xor
add
push
imul
ret
scas
adc
jp
xor
out
and
addr16
lods
dec
pushf
adc
or
mov
adc
or
nop
or
jns
mov
int
divl
and
cld
jo
lret
inc
inc
movsb
fisttpll
push
in
add
in
add
sub
outsl
int3
scas
xchg
and
fistpll
adc
int3
jge
loop
cli
cmpsb
insb
cmp
lahf
mov
and
and
test
inc
sbb
fwait
das
in
shlb
mov
rclb
jno
js
fdivl
ljmp
sub
bound
or
test
in
xchg
pop
xor
or
sahf
and
es
addr16
test
lea
fistl
mov
loopne
jo
sbb
in
mov
out
pop
into
xor
add
adc
mov
rcrb
int3
js
into
fstpl
adc
dec
cmp
and
and
iret
xor
pop
cmpsb
xchg
les
aaa
xor
popa
rol
push
insl
sbbb
jge
shll
repz
out
inc
and
xlat
pop
pop
push
xorb
fcoml
push
jne
shlb
cmpsb
pop
in
leave
mov
mov
pop
hlt
out
shl
out
movsl
jbe
mov
aaa
shr
jecxz
jge
push
rclb
sbb
fnsave
mov
pop
mov
orl
mov
filds
cli
cmpsl
jmp
ljmp
ror
jl
fwait
mov
jecxz
xor
repz
cli
cmp
add
faddl
mov
scas
fidivl
cltd
mov
xchg
dec
shl
fisubrs
das
popa
out
or
loopne
mov
cmpsb
or
push
adc
add
dec
inc
aam
inc
mov
push
popa
xchg
mov
pop
push
mov
idivl
pop
mov
out
dec
push
sub
clc
cmpsb
cld
arpl
push
sbb
adc
enter
and
jmp
sbb
mov
notrack
jns
dec
popf
push
mov
repz
ljmp
sbb
imul
ja
cmc
inc
jns
loopne
shrb
jo
es
imul
xorl
outsl
pop
push
outsb
call
test
popf
sarb
divb
out
sbb
cmp
aam
add
test
cs
outsl
jl
xchg
popf
mov
add
lahf
call
bound
sti
dec
fisubrs
rcrb
xchg
inc
rorl
imul
in
ljmp
jne
maskmovq
testl
sbb
std
dec
sbb
mov
sbb
dec
pop
lds
push
lea
popf
shrb
aad
mov
mov
loop
jae
xchg
mov
add
push
mov
fnstenv
sbb
shl
sbb
aaa
aaa
in
xchg
rcrl
stos
dec
cld
enter
out
mov
or
mov
mov
jl
fsubs
xor
out
ja
scas
sbb
imul
fdivl
test
cld
mov
push
lret
into
mov
dec
push
inc
test
out
sbb
and
mov
nop
addr16
popa
out
and
dec
in
xchg
mov
mov
cmc
adc
xlat
sarl
push
jae
mov
lds
sahf
test
mov
mov
in
int3
jl
pop
dec
push
mov
ljmp
fbstp
push
call
in
cmp
cmp
mov
icebp
add
rolb
outsb
arpl
dec
sub
jl
testl
pop
shl
mov
mov
dec
and
out
aas
movsb
movsl
xorb
mov
mov
dec
jb
roll
shlb
fnstenv
cli
push
in
dec
fsubs
popa
xor
into
pusha
cs
test
pop
mov
dec
inc
jnp
and
cmp
adc
les
xor
jmp
cmp
popf
dec
adc
xor
inc
dec
sub
fimuls
sti
fnsave
xor
shrb
cld
mov
mov
dec
test
mov
pop
jmp
mov
mov
stc
nop
inc
ja
std
add
xor
imul
iret
jns
mov
pop
adc
cld
dec
nop
or
clts
sbb
push
aam
mov
gs
imul
jb
mov
imul
shr
std
aam
out
pushf
daa
hlt
cmc
fstps
cmp
adc
cmp
js
dec
rcrl
push
xor
mov
lods
inc
das
jl
decl
cwtl
or
jge
std
fld
mov
add
jb
fwait
lahf
xor
out
lds
outsl
scas
inc
pushf
das
mov
jne
bound
ffree
add
imul
mov
imul
inc
mov
and
xor
lds
mov
xor
mov
dec
xorb
sub
mov
ret
lods
jb
mov
pushf
or
std
cvtps2pi
pop
mov
pop
bound
js
mov
aaa
add
adc
xchg
jnp
cs
scas
lods
movsl
add
mov
push
jnp
pop
ja
adc
adc
addr16
xchg
shrb
stc
ret
data16
cmp
sub
stos
mov
fistpll
roll
push
popf
gs
out
out
nop
inc
xor
jmp
jno
rcr
mov
mov
push
jne
mov
jb
and
test
sti
mov
mov
mov
mov
adc
push
nopl
cmp
pop
loopne
cmpsb
outsl
and
cltd
mov
inc
mov
in
inc
movsb
lock
ljmp
arpl
imul
sarb
fstpt
mov
adc
mov
hlt
in
cmp
es
insl
insl
sti
and
aaa
dec
xchg
sub
adc
ds
mov
sbb
lahf
jp
jno
push
inc
hlt
jae
stos
rclb
daa
jecxz
add
stos
andl
jbe
pop
push
sbb
out
dec
int3
cmpsb
xor
jmp
dec
inc
in
xchg
rcr
cmpsb
or
shl
fnstcw
pop
les
add
xor
ljmp
ret
pop
dec
mov
xchg
popf
cwtl
mov
pop
outsb
jle
mov
inc
cmp
jg
imul
andnps
mov
out
fists
xchg
dec
scas
fsubl
and
xor
lret
in
out
lods
inc
in
int3
cmp
scas
dec
xchg
pop
inc
repnz
movsl
or
cmpb
dec
lret
je
adc
push
test
mov
rorb
stc
mov
push
jecxz
add
cs
and
sti
add
cmp
cmp
push
cmp
les
out
mov
inc
cmpsl
xchg
pop
int
push
in
inc
int3
mov
xor
inc
not
movsb
xchg
fimull
jae
mov
pop
mov
pop
ds
inc
dec
sbb
pop
mov
ret
jp
pop
push
lds
cmp
cltd
inc
adc
cwtl
xchg
or
pop
sub
cmc
enter
pop
and
rcrl
pop
sti
outsl
out
stos
sbb
fbstp
add
and
dec
loopne
push
mov
xchg
mov
or
xchg
or
repnz
pop
pop
cs
dec
sub
xchg
inc
mov
insb
adc
mov
lahf
jecxz
ret
pop
mov
mov
push
jle
sub
mov
sub
pop
pop
xchg
and
push
jge
mov
paddw
in
les
dec
daa
test
inc
mov
je
sub
imull
pop
mov
stc
out
test
pusha
dec
aad
fwait
test
jo
pop
add
ds
jl
jp
mov
cmp
es
and
cmpl
jne
jns
mov
loop
pop
and
cmp
mov
lods
fnstcw
mov
fwait
cltd
movsb
int3
pop
cmpsb
mov
xlat
test
pop
push
pushf
test
addr16
mov
push
je
and
and
insl
jbe
jae
lock
mov
pop
cmpsl
xchg
push
js
adc
mov
cmpsl
rolb
sbb
cmpsl
mov
idiv
push
hlt
les
das
popl
lret
insb
inc
je
addr16
add
xbegin
add
aas
jmp
mov
jmp
je
mov
lret
stos
push
or
push
push
jg
xchg
scas
les
int3
cli
shrb
imul
insb
dec
clc
mull
xorb
xchg
sbb
push
rclb
add
icebp
inc
xor
mov
in
maxps
lcall
dec
inc
mov
scas
mov
inc
sahf
aad
cmpsb
xor
lods
add
jne
push
cmp
mov
iret
cmp
inc
sub
jo
push
pop
movsb
leave
cld
cmp
pop
jne
xchg
repz
lret
jl
xlat
notb
lds
mov
add
out
fs
mov
cmp
jge
mov
jbe
fcomip
inc
std
fdiv
xchg
jo
inc
das
repnz
js
test
lods
lahf
sahf
push
mov
xchg
or
fbld
ficompl
int3
rorl
mov
pop
mov
or
mov
iret
cld
adc
jg
ja
pop
sbb
das
cld
dec
je
mov
loope
cmp
jbe
repnz
scas
leave
jae
out
jge
lret
push
jle
ret
lods
stos
xor
sub
adc
or
jecxz
bound
push
fs
push
and
aaa
daa
and
daa
stc
ljmp
and
enter
xchg
mov
cmpsb
xchg
stos
aam
cmp
ret
mov
in
ljmp
rol
jb
jle
pop
ss
popf
test
andl
test
sarl
loope
stc
push
jecxz
les
xchg
sbbb
sbb
ljmp
jecxz
sub
in
sahf
ss
add
test
pop
jp
add
mov
and
leave
mov
sub
sub
pop
jne
cmpl
mov
mov
inc
inc
icebp
daa
dec
lret
lds
outsb
and
movsl
mov
push
in
adc
adc
sub
jo
cltd
mov
push
push
lea
das
xor
idiv
sbb
xchg
shlb
mov
mov
sar
imul
jg
in
loope
mov
inc
xchg
sbb
movsb
add
push
data16
dec
adc
pop
lret
pop
mov
mov
scas
negl
aam
lods
jmp
shrl
pop
lds
pop
sahf
das
mov
push
jg
sub
int3
bound
mov
lret
push
xchg
sbb
insl
loope
jnp
das
or
mov
push
push
rep
sub
inc
push
sarb
xor
xchg
fwait
mov
movsb
bound
push
ret
mov
mov
repz
cmp
xlat
insl
xlat
nop
and
xchg
lret
fcoms
jecxz
idivl
ja
loop
push
inc
mov
je
les
lret
pushf
adc
dec
push
push
and
je
ret
loope
shrl
addb
pop
std
mov
andb
aas
test
je
jne
dec
sbb
mov
and
and
mov
inc
adcl
aad
xorl
jbe
mov
repz
in
idiv
add
and
pop
and
int
jo
addb
xor
xchg
xchg
adc
adc
cli
sub
push
mov
mov
dec
cmpsb
pushf
fwait
or
xor
jae
stos
leave
push
cmp
test
shl
mov
std
mov
movsl
jno
and
push
test
push
sub
in
push
loope
pop
addb
sbb
clc
loop
or
or
push
jns
jnp
jg
lods
adc
fcomps
add
fcoms
add
out
push
rcr
dec
jmp
pop
push
fwait
mov
loopne
cmpl
repz
xchg
adc
mov
mov
js
push
sahf
hlt
inc
fldenv
mov
movsb
add
in
push
aas
sahf
dec
out
int
lret
sub
sub
sub
insl
mov
jae
push
sahf
adc
mov
fcomi
xchg
outsb
adc
and
xchg
add
fdivrl
dec
je
fsts
mov
dec
adc
jmp
xchg
and
sub
sar
shl
dec
std
loop
xlat
incb
test
mov
pop
mov
cmp
jg
xorb
cmpsl
cmp
cmc
bound
shl
xor
stc
mov
push
sub
or
int3
inc
outsb
movaps
addl
xor
sbb
inc
or
push
rcrb
or
push
and
int3
xchg
hlt
sub
outsb
iret
outsl
in
sbb
xchg
punpcklwd
std
ljmp
jmp
data16
xor
and
and
pop
lret
push
mov
repnz
push
push
or
addr16
in
push
inc
dec
or
pushf
and
mov
adc
adc
cmp
setl
dec
jne
pop
adc
les
add
aam
cmpsb
push
push
or
push
cwtl
js
push
add
inc
pop
xor
cmpb
test
xchg
pop
sbb
sbb
rclb
dec
call
adc
xor
andb
add
and
add
jge
rclb
js
sbb
xchg
pop
sbb
gs
push
lret
mov
fdivrl
loope
pop
lock
dec
mov
xchg
pop
in
sbb
jbe
outsb
lahf
xchg
movsl
hlt
sub
add
mov
aam
ljmp
fisubl
mov
stos
ds
adc
cwtl
mov
add
pop
xchg
fists
in
call
xor
adc
aas
mov
popa
loop
ret
rorb
dec
xchg
pusha
aaa
sbb
xor
add
hlt
xchg
leave
stos
pop
add
xchg
mov
and
xorb
dec
inc
mov
mov
xorl
add
fnstcw
push
sbb
add
and
pop
cmp
lods
push
jl
mov
lahf
and
movsb
sub
movsb
cli
lods
cwtl
in
scas
sbb
shrb
rcll
ffree
and
pop
out
js
je
repz
cmp
jmp
jae
adc
push
hlt
pop
test
add
xor
jmp
aad
cli
and
dec
lcall
jae
test
dec
arpl
sbb
mov
arpl
or
cmp
pop
stos
insl
and
jmp
and
scas
or
xor
mov
cmp
pop
jecxz
in
mov
mov
push
sub
xor
xchg
fstps
fbld
pop
cmpsb
push
movsb
dec
mov
push
jo
push
push
sbb
mov
fdivrs
test
mov
inc
addl
inc
fcoms
das
popf
mov
cmp
out
dec
je
shrl
xchg
inc
xchg
sbb
jmp
loope
jg
scas
or
outsl
repnz
sub
push
adc
adc
in
ljmp
in
in
push
adc
add
loop
jbe
jl
jne
add
inc
scas
or
cmc
mov
jo
ret
les
and
sub
imul
mov
inc
pop
pop
pusha
push
push
sub
push
leave
and
mov
mov
cmp
jp
add
add
mov
es
shrb
dec
mov
cmpsb
jecxz
ret
ficoml
jnp
push
cli
sub
push
mov
mov
jecxz
xorl
pop
jge
mov
fiaddl
loopne
pop
leave
push
test
clc
xchg
test
lock
or
xchg
clc
pop
ret
mov
sub
and
std
cmp
sbb
or
push
mov
in
sbb
adc
das
filds
sahf
mov
or
enter
mov
sbb
addr16
or
mov
rorb
jge
push
xor
inc
sbb
notl
push
icebp
add
inc
enter
scas
xchg
cwtl
cmp
cli
loop
inc
dec
adcl
dec
orb
pop
or
das
icebp
push
and
pop
mov
sti
cmp
xchg
sbb
fucomp
xor
stos
inc
stos
mov
add
push
add
incl
and
add
xrelease
mov
dec
sub
shll
ror
cmp
jle
sub
ret
pop
out
popf
adc
dec
rorb
mov
sub
orb
sub
call
xchg
fnsave
mov
mov
xchg
movsl
shrl
je
stos
inc
cld
into
jecxz
fsubr
test
pop
dec
sbb
inc
dec
jg
daa
mov
mov
mov
jnp
lcall
add
daa
push
sub
mov
add
out
push
pop
mov
xor
or
in
adc
lret
push
and
or
stos
outsl
movl
or
rolb
outsl
cmp
dec
xor
inc
xor
imul
dec
sub
fbld
hlt
dec
mov
push
cmovne
xor
aam
and
adc
in
adc
mov
mov
pusha
sub
cli
jmp
mov
add
jge
bound
push
int
push
rol
ficompl
out
xchg
stc
arpl
jb
xorl
mov
or
cmpb
and
mov
mov
xchg
mov
repz
lcall
leave
pop
and
pushf
sahf
mov
scas
add
test
mov
cmp
lock
pop
jge
lds
inc
jne
std
and
out
imull
adc
and
pop
jbe
dec
outsl
loopne
les
lods
cmp
cltd
in
adc
stos
insb
xchg
jmp
cmp
jae
push
sub
fdivr
repz
sub
mov
lahf
outsb
ficomps
or
mov
dec
xlat
jmp
ret
jb
jno
test
out
jmp
add
pop
lock
cmp
xchg
mov
aam
popa
outsl
pop
jg
dec
dec
inc
in
push
xchg
or
lret
in
jg
insl
xchg
fcmovb
test
in
fwait
mov
lret
rolb
test
addr16
lahf
pop
orb
dec
sub
xchg
push
adc
mov
fcomps
or
ljmp
aad
add
js
aam
rcrl
adc
mov
dec
or
out
cmp
sub
cmpsl
cmp
fdiv
divl
cmp
push
aas
inc
inc
xor
ffree
mov
in
adc
clc
ljmp
mov
xchg
mov
cld
nop
sti
cs
call
push
inc
cmp
pop
push
mov
add
outsb
popf
ficoms
imul
addr16
mov
loope
add
popf
xor
pop
dec
xchg
xchg
data16
or
and
sbb
fildll
pushf
nopl
cli
sbb
mov
data16
mov
aam
fcomps
stc
daa
stos
fs
pusha
push
daa
andb
daa
mov
aas
adc
xchg
loope
and
mov
std
stos
adc
leave
sarb
pop
xor
aam
loop
rolb
frstor
push
mov
jge
ret
cmp
cs
dec
imul
mov
push
and
xchg
out
je
push
push
ja
sub
dec
sub
popf
inc
addr16
fimuls
pop
xor
stc
stos
cli
addl
das
add
les
shll
inc
popa
pop
and
mov
pop
mov
leave
stos
fstl
mov
push
xor
rcrl
out
test
sahf
addr16
mov
ficomps
mov
fcoml
pusha
cmpsb
loop
add
daa
xor
jo
pusha
jnp
sbb
stc
cld
call
ficoms
popf
xchg
imulb
test
ss
dec
mov
fucomip
ret
cmp
fldenv
es
mov
jmp
scas
cmpsb
cwtl
sbb
mov
lret
inc
add
inc
push
cmovp
mov
xor
mov
test
sbb
adc
cmp
cmp
push
lahf
push
lahf
popa
ja
setnp
xchg
pop
pop
or
test
call
jge
pop
cmc
insl
pop
lds
pop
into
arpl
mov
xor
fcmovb
mov
fidivrl
addr16
jns
loopne
test
inc
push
lret
loop
imul
cmp
out
jmp
or
mov
fxch
mov
jbe
xchg
inc
pop
fstp
insb
stos
dec
imul
ret
out
test
aaa
fidivrl
cmpsb
or
aad
rcl
iret
and
pop
in
mov
xor
mov
sub
mov
pop
loop
or
adc
rolb
sub
fdivs
test
inc
xor
lea
icebp
jg
dec
jb
adcl
mov
mov
or
cld
mov
sub
push
sbb
push
sbb
sbb
inc
push
clc
daa
in
ljmp
into
pusha
imul
pushf
or
lds
adc
cmp
ret
lcall
mov
pop
ds
cmp
cmpsb
push
nop
ret
adc
mov
sub
push
adc
imul
sub
ds
adc
or
pop
sbb
cmp
hlt
sbb
fnstcw
add
cmpb
push
mov
insb
sub
rcrb
sub
inc
fucomi
push
jns
fcmovnb
pop
cmpsb
mov
adc
xchg
out
shll
mov
and
je
and
in
out
push
pop
pop
cmp
jae
add
mov
cmpsl
pop
imul
in
mov
test
push
in
nop
pop
and
sahf
shlb
push
adc
test
mov
js
mov
mov
jg
sub
mov
cs
push
leave
mov
fiaddl
xlat
shll
in
push
test
add
xor
gs
push
mov
insb
xchg
mov
pusha
and
mov
jae
pop
loop
in
fcomps
push
inc
gs
adc
and
cs
sbbb
push
xor
mov
push
fwait
cmpsl
or
lret
cmpsl
call
dec
mov
into
in
jne
jbe
dec
xor
or
insb
push
sbb
cld
mov
mov
cmc
bound
les
sub
jp
or
jmp
dec
dec
cmc
outsb
enter
icebp
out
xor
dec
fsubs
adc
lcall
das
cmpsb
lods
scas
cmp
test
stc
mov
pusha
adc
data16
jnp
fcmove
inc
push
sub
jl
mov
fisubrs
addr16
sti
clc
out
into
mov
jns
adc
cmc
push
mov
clc
mov
in
scas
pushf
adc
stos
dec
sbb
insl
pop
loope
add
loope
rcl
dec
popf
cmc
jge
cmp
in
neg
adc
adc
jns
mov
push
pop
movsl
mov
cmp
daa
fs
imul
mov
mov
mov
dec
dec
shlb
loopne
dec
sbbb
push
cmp
inc
lcall
jmp
jg
lock
dec
idivl
adc
clc
outsb
pushf
inc
cmp
adc
xchg
mov
ja
fsubrl
xchg
push
imul
inc
js
bound
adc
jo,pn
mov
lret
xchg
push
rorl
cmp
stos
mov
push
fsubl
jne
push
negl
sub
aas
and
enter
jmp
add
mov
inc
jl
insl
stc
pop
cmp
bound
cmpl
jno
fstpt
xchg
add
mov
mov
or
or
dec
push
push
mov
mov
pop
jbe
add
mov
call
add
pop
ja
pop
lret
xor
jns
mov
fsts
les
and
push
cmpsb
cwtl
mov
push
aam
cld
clc
aad
fstps
cmp
dec
and
in
movsb
inc
and
test
and
inc
mov
in
je
xor
push
push
or
cmc
and
jmp
popa
shlb
mov
sbb
dec
sub
xchg
xchg
arpl
movsb
xchg
cmp
lret
loopne
and
sub
inc
call
fisubrl
mov
movsl
movsl
rorl
popa
pop
daa
test
insb
mov
push
aad
addl
or
cmpsl
jmp
cmc
cwtl
cmp
fs
jb
inc
dec
in
cmp
movsb
push
imul
push
or
outsb
es
iret
cwtl
mov
outsb
adc
sub
dec
sub
rcrb
jae
sarb
mov
inc
fstpt
jge
add
mov
pop
es
sub
gs
cmp
xor
inc
xchg
and
es
test
mov
cmp
movsl
push
jb
repz
incl
lods
mov
mov
lret
pop
fidivs
adc
iret
pop
cmp
and
sub
push
scas
pop
sarl
push
iret
sub
add
out
out
cltd
sub
and
inc
push
and
xchg
lcall
jge
in
out
fstpl
std
push
jle
pop
pop
cmp
mov
sbb
fstps
or
int
fcoms
jo
jmp
mov
mov
repnz
and
add
jne
push
xchg
sarb
or
jmp
cmp
fidivrl
or
gs
iret
loop
sub
loopne
dec
addl
xchg
or
mov
push
loop
aam
and
push
and
outsl
mov
lret
and
mov
cmp
jmp
xchg
dec
and
shl
sub
out
call
mov
mov
jo
decb
das
pop
fsubr
xchg
ljmp
add
sbb
das
xchg
lret
enter
xchg
sbb
cmc
jnp
jae,pn
adc
dec
repz
xchg
xor
jg
mov
sbb
jge
add
fidivrs
ret
push
cmpsb
push
sbb
or
fstpt
gs
ljmp
addl
mov
lret
xchg
xchg
mov
mov
sbb
push
jno
lds
inc
rolb
push
loope
add
xchg
insl
cli
ds
inc
pop
aas
sti
pop
mov
mov
pop
and
fisubl
push
nop
hlt
aas
mov
cmpsb
in
adc
jg
repz
inc
in
pop
xor
inc
sub
fsubp
jmp
sub
add
mov
sbb
movsb
test
stos
and
cmpl
xlat
mov
xchg
nop
insl
fdivr
movsl
aam
shll
cltd
movsb
cmp
test
xchg
sub
pushf
sbb
push
xchg
dec
xchg
jge
gs
mov
xor
fstp
xchg
pop
imul
imul
mov
dec
dec
or
lock
xchg
das
movsl
pop
ss
shr
cmp
je
jb
mov
js
ret
jae
divb
std
je
pop
cmp
or
out
adc
adc
in
jbe
lds
les
add
xlat
add
iret
sarl
or
adc
cmp
and
in
push
fwait
rolb
js
push
jb
ljmp
movsb
sarb
jmp
sub
movsl
jl
pop
sub
inc
cmpsb
mov
stos
sub
xor
jno
pop
and
jb
mov
das
dec
loope
pop
cmpsl
push
dec
shlb
and
adc
mov
popa
dec
inc
dec
cwtl
inc
insb
jns
fcmovnbe
lea
sub
ljmp
fbstp
mov
jbe
lods
cltd
sarl
out
idivl
pop
push
sub
push
mov
jae
xchg
fnstenv
cmp
sar
out
in
dec
sbb
mov
addr16
jne
adc
sbb
popf
roll
mov
insl
add
jmp
pop
mov
or
xchg
sub
xor
xor
jl
cld
mov
leave
call
sti
pop
ret
lret
push
mov
and
mov
cmp
loop
sub
mov
mov
add
popf
and
sbb
xchg
clc
subb
pop
pop
fcompl
mov
data16
mov
sbb
xlat
dec
dec
out
enter
jo
cmp
and
shlb
lret
mov
pop
es
jb
sbb
mov
mov
pusha
mov
mov
notl
ficompl
cmp
xchg
call
hlt
jo
out
sub
or
outsl
mov
xor
mov
fs
sbb
es
xor
fwait
mov
test
lret
mov
push
cmp
xchg
std
sub
aas
xchg
addr16
dec
nop
ljmp
and
ljmp
dec
dec
xchg
mov
imul
mov
out
cmp
jge
push
scas
mov
pop
mov
jle
sub
push
adc
clc
int3
lea
cmp
les
aas
out
push
lds
add
push
das
sbb
rcll
out
or
scas
pop
push
addr16
sbb
fisttps
push
ja
test
movsb
and
adc
fwait
inc
jo
mov
or
ja
add
ss
add
outsb
lcall
push
call
scas
jo
int3
jp
call
popf
ljmp
imul
lahf
inc
sub
mov
sub
mov
sbb
dec
lret
movsl
into
jnp
pop
pop
aaa
mov
and
xchg
adc
push
sub
fsubrs
or
push
adc
sbb
data16
mov
inc
loop
cli
jecxz
into
adcb
shrl
test
pop
sub
push
xlat
outsb
adc
icebp
loop
push
dec
repnz
xchg
cs
xor
bound
pop
rcrl
in
fcomp
xchg
cmpsl
mov
jg
inc
mov
sahf
add
xchg
setns
inc
pop
data16
stos
mov
es
add
xchg
xchg
lea
cmpsl
sbb
fidivrl
arpl
movsl
xor
add
and
jbe
xchg
stos
stos
out
inc
imul
dec
mov
push
popf
dec
fs
test
jno
decl
sub
inc
sti
es
mov
shll
loopne
adcb
std
push
or
mov
sbb
and
inc
mov
scas
jp
cmpsb
dec
sbb
sti
pop
test
add
cs
mov
movsb
int
cld
icebp
inc
mov
lea
cld
add
icebp
mov
arpl
imulb
pushf
movsl
insb
dec
jle
leave
mov
and
adc
ret
cmp
xlat
mov
fwait
sub
fldcw
shlb
andl
dec
pop
sti
fucomp
je
in
xchg
movsb
mov
jge
js
mov
lock
rorl
movsl
sbb
js
int3
test
rclb
insb
dec
xor
or
mov
aas
cmp
adc
loop
stos
or
notl
mov
movsl
pop
cmp
addr16
or
insl
push
ret
out
jo
rcrl
int3
and
mov
out
cmp
pushf
mov
add
loope
inc
loope
rcll
xchg
xchg
mov
and
mov
cmp
mov
mov
xchg
and
or
jno
pushf
sub
jl
testb
cld
sarb
imul
ret
push
xchg
mov
cmpsl
sub
mov
push
inc
xor
les
mov
lods
dec
mov
pushf
aas
in
outsb
cmp
or
cmp
jno
rorb
and
iret
rcrl
stc
dec
sbb
cmc
push
scas
push
and
in
imul
mov
fs
aas
sub
enter
stos
cwtl
orl
jp
dec
lret
xor
and
loope
lods
dec
jnp
rorl
cmp
leave
pop
sbb
or
mov
xor
mov
inc
dec
xchg
stos
dec
arpl
nop
sbbb
xor
lods
fsts
bound
mov
jge
mov
fildl
mov
js
loope
pop
cltd
mov
jne
enter
das
jp
popa
adc
test
jp
pop
stos
pop
adc
jecxz
jbe
shlb
es
aam
hlt
or
mov
mov
pop
sbb
pop
adc
mov
push
sbb
dec
xchg
out
repnz
mov
push
aad
mov
push
xchg
and
stc
cmp
cli
jmp
aam
dec
gs
inc
pop
shrd
add
sbb
lahf
shlb
stos
sub
insl
xchg
lret
sub
mov
cmp
adc
enter
mov
fdiv
mov
cmp
pop
xchg
jmp
sbb
in
sbb
ljmp
push
nop
ja
add
cmpsb
sub
lds
ja
popa
xor
jne
cmp
push
insb
test
xor
jno
mov
add
insb
in
mov
inc
cmp
fsubs
mov
xor
stos
pop
jmp
cmp
jnp
jmp
iret
and
push
cli
pop
dec
mov
jnp
cli
pop
sub
adc
pusha
or
test
xor
push
mov
pushf
mov
imulb
jno
lods
xchg
jo
mov
test
stc
fs
lock
dec
jo
lds
dec
rolb
inc
fldl
scas
jnp
pusha
add
sub
shlb
xor
div
lcall
mov
jne
add
loopne
sub
cmp
xlat
mov
out
push
pop
pop
mov
rcll
pop
je
jnp
inc
jmp
and
pop
jns
adc
jnp
pop
adcl
mov
cli
clc
inc
ret
loop
pop
shrl
stos
fsubl
ror
or
xor
js
adc
fiadds
cld
dec
popf
lea
mov
icebp
pushw
xor
xor
sahf
outsl
rcrl
or
jp
xchg
adc
pop
sbb
jp
xchg
lds
test
jbe
or
sub
jmp
jp
inc
leave
xchg
jnp
js
xchg
nop
in
test
adc
shrl
cmpsb
imul
orl
adc
jge
mov
push
add
pop
mov
sub
pop
xor
jecxz
adc
cmp
xor
xchg
xchg
sti
shrb
cmp
dec
out
cmp
outsb
insl
jb
jb
fucomi
add
les
xchg
or
push
icebp
lret
test
jp
or
outsb
idiv
lock
cmp
movsb
ret
dec
push
mov
loop
xchg
jbe
lea
cli
xchg
std
out
mov
push
sbb
add
mov
lds
sbb
mov
cmpl
test
jnp
mov
mov
mov
mov
push
das
mov
jmp
jb
xchg
dec
and
stos
mov
sbb
lret
adcb
movsb
stos
sbb
add
lods
add
dec
xor
mov
xchg
nop
add
pusha
nop
adc
stos
mov
lcall
sbb
push
lahf
lret
cmpsl
jae
dec
push
cmp
pop
je
in
inc
mov
push
hlt
xor
test
lods
and
cmp
pushf
lods
adc
cld
fdivp
das
xor
pop
repnz
clc
push
loopne
sub
out
idivb
lea
sbb
lret
dec
repz
gs
adc
push
cmc
lret
push
mov
cwtl
push
sub
ficompl
shr
ss
dec
hlt
jns
pop
ss
test
push
cwtl
xchg
mov
sahf
xchg
jmp
arpl
xchg
xchg
into
fnstenv
cli
inc
jecxz
cmp
loopne
and
in
inc
cmp
jge
cli
xchg
xor
and
divb
jnp
adc
dec
es
or
add
fdivrs
xor
pushf
fdivrs
in
dec
cmc
or
xchg
dec
pop
sub
inc
pop
jo
mov
jae
push
mov
mov
std
push
dec
add
sti
mov
test
mov
js
mov
mov
sbb
push
out
cmp
add
sub
pop
outsb
xchg
jg
and
ror
cmp
lcall
lea
imul
lret
add
stos
sbb
mov
ja
outsb
adc
jge
inc
test
mov
rolb
pop
js
mov
popa
mov
das
pop
lods
xchg
push
dec
xor
shr
negb
mov
jmp
and
xchg
aaa
fwait
cwtl
lcall
test
int
fxch
and
jnp
dec
rorb
mov
pushf
loop
mov
dec
pusha
cs
je
mov
inc
jb
gs
lret
dec
dec
rcl
sbb
adc
xor
popf
jns
hlt
adc
dec
xor
add
js
sub
add
or
jb
ret
xchg
mov
dec
je
mov
jne
leave
and
mov
cmp
les
ucomiss
mov
sub
insb
and
cmp
mov
cmpsl
cld
jb
sarl
adc
cmpsl
pop
lock
mov
and
jge
mov
popf
andl
das
adc
loope
xor
jmp
in
adc
cmp
iret
sub
fdiv
mov
xor
int3
popf
and
cwtl
xor
hlt
sub
stc
fwait
scas
xchg
data16
mov
sbb
jle
jge
in
sub
mov
nop
or
loop
rolb
scas
mov
add
pop
cwtl
rclb
jne
iret
mov
outsb
sti
jno
or
mov
jle
adc
mov
pop
pushf
push
and
push
push
jle
jb
cld
int3
imul
stos
cli
push
jg
mov
scas
add
jnp
fists
push
out
mov
dec
add
push
lea
mov
stos
je
cwtl
aad
xor
mov
jge
mov
and
bound
mov
in
inc
jge
fcomps
addr16
fs
mov
adc
rcll
mov
sub
mov
add
stos
out
push
pop
mov
dec
xor
cwtl
push
xchg
or
movsl
std
and
hlt
std
lret
les
lahf
sti
sbb
jae
mov
test
int
shll
ret
push
add
aam
ret
inc
push
ljmp
jbe
int
lds
xor
loope
shll
rclb
fiadds
scas
ljmp
mov
xchg
stos
shrb
adc
xor
adc
jge
lods
mov
enter
jl
cmc
mov
ja
mov
jge
or
dec
add
lods
pop
mov
add
mov
inc
mov
pop
jle
fdivl
dec
fldt
daa
stos
jno
sbb
fmul
jnp
mov
xor
and
xor
xchg
and
mov
rcr
xchg
imul
jle
cmpsl
fadds
cwtl
inc
sbb
pop
rcrl
add
and
fcmove
jno
pop
and
mov
sub
adc
xor
and
xchg
loop
mov
or
or
cld
mov
xchg
lea
adc
mov
test
or
mov
adc
rorb
into
ret
mov
iret
std
repnz
out
dec
call
cmpsb
adc
mov
dec
inc
xorl
sbb
inc
aas
sub
mov
adcb
js
mov
enter
data16
gs
or
pop
mov
mov
daa
sahf
clc
mov
fmul
enter
out
pop
push
fcoml
and
or
out
sub
hlt
xchg
mulb
or
cmpsl
add
sbb
fidivs
adc
sub
dec
ret
out
aas
sahf
sub
out
or
mov
mov
fwait
ljmp
fs
mov
sub
notb
mov
in
and
scas
test
mov
pop
icebp
repnz
mov
ret
imul
cmpsb
inc
sbb
sbb
mov
and
push
or
mov
cmp
frstor
push
es
cwtl
fcomps
fs
clc
pop
jmp
and
mov
xchg
stc
pop
xor
mov
xchg
cli
clc
ffreep
fsubl
repnz
lock
fwait
imul
mov
xchg
mov
sub
mov
jmp
outsl
mov
xchg
jbe
repnz
xchg
sbb
and
fidivs
sbb
cli
sbb
mov
mov
scas
mov
mov
pop
bound
stos
test
sbb
and
xor
xchg
adc
jle
frstor
cmp
insb
jecxz
xlat
mov
sub
iret
fcmovne
mov
push
stc
lcall
leave
mov
xchg
cs
outsb
sbb
cmpsl
js
mov
adc
xor
push
fmull
out
and
cmpsb
popa
fs
mov
cltd
ficoml
add
lock
fistps
insl
enter
insb
xchg
imul
mov
outsl
jae
sbb
cmc
and
xor
jg
into
popa
mov
orb
call
pop
and
xchg
and
dec
cmpl
pop
pop
outsl
mov
in
xchg
and
xchg
mov
add
xchg
xor
sub
mov
jb
loop
dec
cmp
test
ficompl
dec
insb
fdivr
movb
inc
fisubrs
dec
dec
push
jne
mov
xor
jnp
out
sub
out
fldt
dec
popf
sbb
lahf
icebp
lcall
jg
ror
popf
stc
dec
xlat
aas
or
outsl
mov
push
insl
je
icebp
and
sbb
imul
aas
mov
xor
pop
adc
mov
rorb
mov
pop
jl
jno,pt
rorb
out
jge
out
pop
sub
and
lea
fstpl
fsubrp
mov
divl
cmp
leave
addr16
add
add
fdivrl
insb
mov
sbb
ja
inc
insl
stos
hlt
mull
je
and
push
xor
dec
lcall
mov
inc
loopne
movsl
pushf
pop
xchg
mov
and
ficompl
jbe
sbb
adc
or
rorb
call
mov
inc
cmpsl
ljmp
mov
and
dec
test
gs
xchg
arpl
or
mov
pop
aas
sbb
add
xor
ss
adc
leave
sbb
mov
scas
cld
cmpsl
add
add
dec
in
jmp
movsl
fisttps
repnz
mov
rcrl
icebp
mov
ds
popa
aad
pop
inc
dec
pushf
pop
leave
cmpsl
stos
xor
xor
dec
std
mov
les
jnp
jbe
or
sub
fidivl
fcom
xlat
mov
imul
mov
mov
dec
arpl
lods
mov
add
pop
movsl
scas
inc
pushf
push
adc
test
mov
ja
fs
in
dec
and
mov
pusha
and
jnp
ss
fisubrl
sub
sub
xchg
xchg
aas
ss
xor
push
sarl
xor
mov
xchg
mov
ljmp
sbb
loop
in
xchg
iret
and
bound
je
lods
xchg
push
lods
loope
shll
icebp
mov
adcb
sub
xor
insl
inc
inc
icebp
jae
fcmovne
lock
ret
or
popa
pushf
movsl
out
xchg
pushf
call
cmc
mov
mov
and
and
push
and
add
cmp
loope
jae
xchg
fisubrl
or
mov
pop
jecxz
js
inc
and
xor
xlat
test
xlat
gs
adc
sub
add
jb
dec
xchg
aam
das
inc
les
xor
sub
aam
cltd
scas
int
mov
xor
xor
movdq2q
cmpsl
jbe
loope
mov
sub
out
pusha
cmp
pop
sub
or
cmpsl
add
or
ret
lds
mov
add
inc
ret
loop
repz
test
add
and
add
fidivrl
push
adc
mov
lcall
repz
pop
and
mov
jns
adc
das
inc
loop
sbb
iret
push
mov
das
movsl
in
lret
add
dec
inc
stos
mov
pop
dec
pop
push
xor
js
scas
pop
or
mov
icebp
adc
push
jo
mov
sbbb
mov
sub
popf
inc
sbb
mov
outsl
cli
adc
xchg
mov
out
in
jmp
arpl
and
push
mov
cld
hlt
clc
fwait
daa
push
enter
inc
dec
pop
inc
mov
mov
pop
std
in
xchg
in
xchg
cld
ljmp
push
or
lock
pop
xchg
out
lods
pop
xlat
jno
rcrb
push
aaa
mov
mov
fistpll
mov
shrb
cmpsl
inc
sub
sbb
movsl
jne
mov
sub
cmp
daa
shrl
sbb
pop
pcmpeqb
or
cmp
out
stos
push
test
xchg
pop
cmpsb
popf
imul
add
xorb
dec
mov
les
shlb
shrl
std
lret
pop
cmp
popa
or
stc
sbb
jnp
inc
inc
repnz
xor
dec
pop
add
mov
push
jecxz
pop
mov
mov
jl
push
lret
add
sbb
cmp
or
add
push
shl
jnp
lock
add
xchg
stos
lcall
adc
inc
fmuls
jns
add
xor
clc
aam
negl
pop
imul
test
sub
cli
push
push
sbb
out
pop
cmp
jge
shlb
lds
or
pop
imul
cmpsb
xlat
int
push
add
jbe
mov
je
pop
aas
sbb
icebp
sub
pop
cltd
test
dec
in
and
sub
mov
sub
xchg
mov
call
mov
popf
push
xchg
push
and
lret
lea
scas
inc
popf
call
in
rorl
orb
rorl
jns
xchg
pop
pop
sub
mov
sbb
addl
pop
push
jne
call
add
aaa
mov
cmpsb
imul
cmpsb
add
addr16
stc
insb
pushf
push
mov
lock
mov
push
pop
es
bound
lock
inc
loop
unpckhps
dec
xchg
mov
mov
movsl
gs
mov
dec
popa
scas
jo
push
aam
lock
cltd
mov
pop
addr16
inc
mov
int3
daa
test
imul
xchg
sbb
or
inc
dec
fidivrs
inc
xlat
jbe
dec
add
push
loopne
shrl
data16
movsb
lret
pop
in
outsl
popf
arpl
dec
jg
sbb
icebp
rorl
in
jo
enter
inc
mov
sti
lods
jmp
subl
and
das
mov
outsb
out
push
sub
sti
loope
lods
or
pop
in
lds
out
les
cmp
push
loop
loop
inc
adcl
or
cmp
popl
repz
xchg
fs
popf
pop
or
dec
int
push
out
mov
sub
inc
movsl
xchg
inc
outsb
test
pushf
das
scas
js,pt
and
dec
push
rolb
cwtl
push
xor
and
cmp
insb
push
mov
clc
sub
pushf
pop
jnp
add
cli
movsb
push
insb
lods
cs
mov
push
testb
shl
scas
cmp
cmp
jecxz
inc
add
pop
daa
sarb
scas
int3
pop
xor
dec
aad
mov
sub
dec
sbb
push
cmp
dec
push
lea
std
cmp
mov
das
mov
je
mov
test
xchg
add
clc
insl
lds
adc
sub
adc
fidivs
add
mov
fmull
popa
mov
dec
hlt
mov
jmp
rcrl
adc
imul
jl
aad
pop
ret
mov
mov
sahf
fbld
ja
dec
mov
aam
test
fmull
call
and
cli
jnp
dec
adc
in
sbb
push
test
cmp
js
push
ja
in
pop
cld
push
pop
xchg
pop
sahf
pop
jns
add
and
inc
js
in
cld
pop
jg
popa
pusha
sahf
mov
sbb
xchg
cmc
out
push
inc
iret
sbb
shlb
add
fcmovbe
icebp
pusha
inc
loop
adc
test
cld
jb
test
loope
or
cmp
push
mov
mov
test
pop
mov
aaa
je
ljmp
and
mov
dec
and
push
int
add
lods
dec
push
lret
filds
movsl
jecxz
jno
mov
sub
add
push
xor
pop
call
imul
pop
xchg
jp
lds
add
mov
popa
sbb
push
add
jmp
jl
and
test
inc
test
fistps
jne
push
xchg
jge
notl
dec
jno
mov
rcll
das
ror
inc
out
push
gs
jmp
mov
mov
or
dec
lea
out
test
jp
adc
in
xor
mov
iret
mov
fistps
mov
subb
ds
rcr
imul
test
and
xchg
jge
dec
addr16
scas
insb
cmpsl
adc
push
imul
mov
in
inc
or
xor
insb
xor
pop
adc
ret
bound
fwait
add
lock
fwait
pop
bound
mov
xchg
stos
fmull
push
insl
jno
xor
js
nop
data16
adc
sub
ljmp
jno
mov
and
dec
adc
pop
mov
into
jne
pop
push
inc
sub
pop
jmp
pop
adc
cwtl
nop
ret
mov
lea
cmp
sub
or
mov
cs
test
mov
mov
sbb
dec
push
xor
stc
mov
imul
adc
jle
movsb
shlb
les
imul
inc
jmp
lahf
jmp
sub
je
insb
call
in
push
mov
jmp
je
mov
mov
subb
jg
mov
ss
jns
cmp
cs
lea
bound
and
or
jne
xor
in
mov
out
pushf
stc
mov
or
xor
in
mov
mov
xchg
loope
test
cmpl
loop
clc
push
out
pop
sbb
push
xchg
in
mov
jmp
xchg
jmp
dec
rcll
ret
lods
ljmp
mov
jo
mov
or
mov
maxps
mov
sbb
xor
stos
xchg
loop
lret
decb
cmc
or
out
cmp
cwtl
stc
stos
lahf
xchg
sarl
sahf
mov
daa
dec
jmp
xor
or
repz
inc
sti
and
mov
pop
aam
decl
and
cli
xor
cmc
push
mov
lea
jle
fisubrl
mov
sub
add
inc
xchg
cmp
jge
dec
sbb
jb
shr
imul
dec
push
shlb
and
ljmp
das
gs
jne
dec
add
sahf
xchg
pop
rclb
lods
or
gs
dec
xchg
test
aaa
lret
mov
int3
lret
lea
ja
mov
add
xor
jnp
jb
daa
or
jge
sub
arpl
cli
jl
cmp
inc
test
fs
hlt
xchg
push
pop
mov
mov
nop
test
mov
pop
pop
pop
lret
adc
adc
jge
mul
xor
cli
and
jle
mov
and
mov
fcmove
jmp
inc
lret
push
jl
cltd
cmp
sub
add
std
lcall
mov
cmpl
adc
jl
push
aad
push
call
xchg
arpl
jp
mov
xchg
and
mov
andb
or
iret
ss
fcomps
out
dec
mov
push
popf
and
add
or
pop
mov
add
jns
mov
lods
jb
add
div
or
and
pop
fimull
adc
pop
mov
div
std
data16
idivb
ret
jo
ret
sarb
stos
cwtl
mov
jmp
sub
push
xchg
je
loope
inc
je
dec
xor
out
push
es
addr16
stos
lds
insl
push
aam
and
outsl
adc
adc
bound
sbb
mov
das
jno
aaa
dec
inc
mov
and
into
mov
jns
icebp
decl
sbb
cltd
fsin
mov
cltd
popa
leave
cmp
jg
movsb
lcall
sub
cmpsb
mov
pop
mov
ss
jb
scas
in
xor
out
jl
pop
cltd
shll
or
mov
mov
mov
mov
rcll
or
scas
ficoml
jle
sahf
ljmp
push
or
fwait
xchg
inc
xor
pop
not
movsb
mov
add
push
mov
push
cltd
incb
dec
test
aas
divl
pop
pop
shrl
fsubr
xchg
test
push
and
int
mov
jle
inc
fcmovb
ja
sbb
int3
iret
jne
and
mov
mov
syscall
and
test
mov
push
cli
dec
cli
xlat
dec
scas
lods
js
jne
leave
mov
adc
and
push
nop
stos
xor
xchg
inc
shlb
movsl
out
in
je
adc
pop
and
inc
push
cmp
mov
push
adc
inc
pusha
mov
cmp
shl
push
mov
lret
pushf
shll
mov
push
nop
mov
lret
xchg
shlb
mov
and
fsubl
push
jge
dec
rolb
xchg
sbb
aam
insb
dec
lahf
jnp
das
adc
inc
loopne
add
jge
adc
mov
repnz
sbb
insb
xor
xchg
aad
inc
cltd
cwtl
in
xchg
into
mov
mov
out
sub
mov
mov
mov
roll
dec
push
xor
ret
inc
pop
sub
inc
inc
cmp
cwtl
repz
push
testb
daa
xchg
test
xchg
add
shll
jnp
mov
jp
add
cmp
cmp
fbld
cmc
hlt
sub
inc
ret
and
xor
jecxz
addr16
mov
test
jge
or
pushf
push
enter
pop
fdivl
jno
lahf
loope
imul
xlat
xor
lret
and
sbb
pop
test
push
fistl
js,pn
mov
les
push
js
std
dec
lcall
ds
movsb
shlb
mov
jecxz
jbe
sub
es
and
mov
insl
cmc
fistl
movsb
mov
je
pop
aad
add
or
and
sbb
jecxz
ja
mov
xlat
mov
dec
inc
lds
fcmovb
or
cmp
push
lret
xor
jo
lcall
push
lcall
fildll
js
dec
test
testb
push
hlt
mov
sub
gs
mov
pusha
lret
ds
xlat
popf
mov
or
in
cmp
inc
or
enter
je
mov
push
sub
ljmp
sub
fcmovne
pop
xchg
cmp
ss
nop
fidivrs
lock
test
loop
out
shrb
faddl
sarb
stos
orb
das
push
mov
jbe
mov
mov
sbb
or
dec
push
add
call
and
cmc
scas
mov
jo
js
loopne
sub
in
push
repz
mov
lcall
into
cmp
push
cltd
wrmsr
and
xchg
pusha
js
enter
leave
pop
mov
push
xor
ficompl
cltd
es
mov
inc
stc
add
mov
pop
call
fildl
testb
fsubrs
push
mov
mov
mov
dec
shrl
mov
and
mov
fsubs
outsb
shll
mov
dec
inc
add
mov
jo
sub
cmpsl
push
es
popf
xchg
mov
dec
test
out
int3
cwtl
std
icebp
lcall
jo
xor
jg
out
push
cld
jle
sub
outsb
out
test
xchg
loopne
inc
pusha
shlb
sub
sub
int
fdivr
cmp
xchg
test
push
jg
cli
add
push
jae
add
push
fidivrl
inc
lds
adc
pop
inc
push
jge
xchg
cmp
mov
inc
or
mov
push
ret
movsb
add
pop
jns
jbe
mov
scas
or
lret
sub
clc
lret
sub
ror
push
leave
call
lea
push
push
int3
lahf
mov
pop
cmpsl
push
ljmp
sbb
dec
stos
cmp
inc
pop
inc
mov
cmp
outsb
xor
pop
call
cmp
mov
sbb
cmpsb
sbb
lds
cwtl
sub
scas
and
mov
popf
push
stos
xchg
pop
js
mov
or
pusha
movsb
lret
fdivr
mov
mov
imul
mov
inc
sbb
push
sub
inc
fiadds
fisubl
daa
sbb
js
addr16
test
outsl
or
sarl
push
adc
repz
lods
add
sbb
cwtl
in
and
mov
ja
jb
pop
add
cmpsb
stos
orb
test
cmpb
and
pop
xchg
repz
adc
sbb
mov
test
leave
repz
mov
xchg
xchg
push
xlat
xchg
stc
jne
and
jbe
push
cld
fimuls
and
rorb
pop
lds
stc
mov
insl
hlt
jmp
mov
sub
shlb
add
add
xchg
xor
cs
sbbl
xchg
fsub
adc
fwait
sub
clc
and
cmp
adc
sbb
add
xor
jg
bound
pop
ffreep
imul
rorl
ret
testl
je
push
adc
sub
cmp
pop
and
pop
or
insl
mov
ror
cmpsb
test
rorl
jns
fucom
ljmp
movsl
mov
fucom
and
cld
pop
into
inc
jle
fimull
sbb
pop
mov
inc
push
jp
out
bound
pop
cli
out
sbb
xor
in
mov
or
dec
mov
mov
xchg
movsl
les
mov
or
cmp
sub
mov
sbb
insb
mov
loope
jns
add
stos
in
int
sahf
in
mov
imul
outsl
dec
das
pop
scas
xlat
pusha
jl
adc
xorb
pop
sub
mov
lea
popa
xor
adc
cld
int
scas
inc
mov
jo
xor
sbb
repz
scas
pop
mov
mov
iret
xchg
mov
dec
ret
lcall
mov
pop
push
movsb
lods
mov
mov
ljmp
add
dec
inc
in
popa
loop
mov
dec
scas
mov
insb
cltd
or
loop
test
xor
scas
out
arpl
leave
xchg
loope
sub
xlat
jg
xor
jge
in
jb
aam
es
test
repz
in
int3
or
sub
sti
sub
cmp
fwait
test
add
out
dec
scas
int
inc
ja
mov
mov
pop
adc
mov
cmp
ret
test
aam
cmpsb
outsl
out
fldcw
mov
and
xor
jne
and
cmp
mov
fld
jne
inc
push
icebp
inc
lret
xchg
add
cs
in
mov
cmp
hlt
add
and
push
sbb
notl
mov
dec
cmp
xor
jnp
adc
out
test
jo
mov
dec
loop
cltd
pop
fsubp
dec
jne
mov
lock
mov
xor
dec
fwait
cmp
in
xlat
stc
mov
sbb
rorl
enter
sbb
pop
lds
push
in
xchg
inc
xchg
push
addr16
leave
adc
das
sub
or
add
xor
lret
scas
add
jne
les
mov
mov
add
sub
incb
outsl
adc
dec
mov
and
inc
popa
nop
loope
xlat
in
pop
int
push
loope
stos
push
mov
push
or
fwait
push
push
cwtl
push
jmp
and
sbb
cmp
adcb
pop
sub
mov
mov
test
shl
push
jmp
xor
mov
insl
add
std
int3
mov
scas
bound
sbbb
dec
subb
daa
lcall
lock
scas
adc
shll
int3
pusha
and
cmp
inc
xchg
xor
cmpsl
stc
iret
pop
push
sbb
rorb
xchg
adc
xchg
test
scas
js
mov
daa
dec
hlt
repz
ss
add
mov
push
cmp
pop
xchg
push
sbb
shlb
and
shrb
int3
daa
push
push
repnz
jl
mov
ret
mov
int3
rcrw
arpl
push
xchg
nop
movsb
pushf
jb
dec
sub
adc
repnz
push
xchg
inc
ud1
mov
mov
enter
cmp
bound
adc
and
xchg
push
mov
and
or
out
ja
add
add
mov
dec
lret
enter
mov
loopne
mov
les
push
mov
xchg
gs
cmp
lahf
pusha
ret
cmpsb
mov
stc
jae
in
movsl
fisubl
iret
jmp
xchg
push
adc
inc
xchg
xchg
mov
xchg
add
pop
loope
jno
out
xchg
stc
jg
lretw
cli
pop
push
repz
roll
pop
aas
sti
cmp
aam
repz
add
jae
jle
push
cmp
and
movsb
das
arpl
cli
mov
lret
cs
popf
gs
lahf
test
orb
xor
cmp
mov
daa
xlat
cltd
popa
outsb
jle
addr16
int
in
xchg
and
bound
xchg
jecxz
ja
push
pop
dec
push
and
pushf
cmp
rcrl
int
adc
lds
bound
aam
or
pushf
inc
add
push
repz
dec
out
mov
cmp
jae
mov
mov
or
xor
sub
mov
stc
aaa
cmp
and
xor
jae
sub
mov
pop
nop
ret
adc
icebp
jg
xchg
fst
test
jbe
mov
sub
sti
mov
pop
outsb
mov
mov
xor
or
shll
daa
and
inc
call
imul
lock
adc
push
pop
daa
enter
xchg
add
xchg
mov
stos
mov
ficoml
mov
add
and
cmpsl
stos
jmp
cmp
adc
push
test
in
mov
test
int3
pop
push
cli
jne
test
cli
fimuls
loope
dec
leave
loop
jbe
adc
test
pop
lea
and
arpl
sub
add
and
lds
lcall
mov
out
popa
inc
pop
inc
jo
lcall
inc
dec
or
loop,pt
sub
pusha
in
arpl
mov
adc
addr16
popf
jp
and
fadds
stos
decb
mov
push
imulb
adc
inc
dec
add
push
in
xlat
jo
adc
cmovns
and
adc
lods
daa
push
and
out
into
outsb
daa
lods
pop
ret
xor
repnz
inc
jae
mov
pop
test
call
add
and
pop
lahf
dec
shll
sbb
lahf
sbb
loop
sub
push
dec
aad
mov
mov
into
fstpl
insl
movsl
data16
test
sbb
jae
ljmp
push
fidivrs
and
pop
call
rcll
inc
cmp
lahf
sbb
jmp
int3
mov
push
call
fwait
cs
cli
xchg
sbb
cmp
and
jle
cs
out
cmc
dec
insb
movsb
sahf
out
xor
out
lods
pop
xchg
mov
std
xor
xchg
add
dec
in
mov
movsb
ljmp
sbb
jecxz
xchg
cmc
fstl
xor
aam
xchg
cmp
ficoml
outsb
outsb
idivl
push
push
pop
dec
fcmovu
dec
ret
clc
stos
mov
flds
pop
out
push
sub
out
mov
nop
add
into
out
js
pop
mov
dec
test
ds
test
xor
add
push
popa
movsb
fsubp
das
jg
int
subl
jp
orl
mov
call
cmp
push
pop
es
xchg
cld
in
inc
xor
and
and
andl
sub
imul
xchg
sbb
dec
xchg
and
push
and
sub
rcrb
dec
fdivs
mov
dec
cmp
daa
jns
loop
call
mov
popa
push
enter
mov
out
outsl
jnp
imul
cmpb
sub
scas
cltd
rcrl
jmp
sysexit
mov
lds
sbbb
push
mov
lahf
and
hlt
mov
jbe
add
std
dec
lea
movd
xor
out
jge
int3
outsb
mov
mov
cmp
dec
ret
pop
ret
aad
arpl
daa
jmp
out
fwait
test
and
aaa
or
scas
lods
sbb
gs
std
lret
mov
sbb
jp
pop
rcr
mov
inc
mov
push
clc
or
loop
push
movsb
lret
jns
lahf
sub
fwait
jle
cmp
mov
add
sub
or
sbb
or
in
aas
push
adc
fs
xor
xchg
insl
inc
loopne
mov
sbb
sbb
xchg
rcl
stc
adc
sbb
pop
inc
mov
jl
or
sub
jbe
gs
jbe
cwtl
fs
dec
popa
or
nop
inc
or
inc
enter
out
jmp
fistpl
hlt
loope
lea
xchg
sub
insl
or
inc
stc
aaa
push
push
pop
or
ror
sub
jbe
dec
and
sbb
mov
lret
dec
jbe
in
arpl
adc
pop
in
fldt
cmc
outsb
mov
std
xchg
shrl
mov
and
dec
das
or
xchg
pop
movsb
adc
mov
adc
pop
and
rcll
sub
stc
aad
cmpb
mov
scas
scas
sbb
mov
outsb
stos
xchg
je
jae
outsb
call
call
cmc
mov
or
xchg
inc
dec
arpl
js
fildl
pop
pop
loop
push
lock
sub
ret
adc
adc
jo
cmp
lods
sbb
xchg
mov
jle
sub
mov
pop
push
ktestb
fwait
dec
cmpsb
dec
test
cmp
and
xchg
jmp
xlat
sub
adc
push
mov
add
call
fldl2e
shrb
dec
or
sub
mov
dec
hlt
sbb
jle
lahf
cmp
ja
dec
stc
sbb
fstpl
test
inc
add
sub
popl
ja
cld
sahf
loop
sbb
in
enter
pushf
stos
dec
pop
xchg
repnz
sub
mov
xchg
inc
cld
ret
sarb
push
sbb
rcll
pop
mov
cmc
mov
es
pop
out
and
add
adc
jnp
add
fdivrp
dec
mov
adc
jecxz
jle
ss
es
xchg
inc
mov
sub
xchg
enter
int
fs
fnstenv
mov
mov
lock
sti
out
add
dec
jg
cmp
push
fisubs
jbe
ret
addl
out
adc
xchg
std
pop
adcb
cmpl
mov
pop
cmp
mov
add
out
cmp
xchg
xor
sti
sbb
mov
sub
imull
or
cmp
push
push
test
and
aam
arpl
sub
xor
push
xor
sub
daa
or
cmp
sbb
loope
push
lds
mov
sbb
test
stos
fs
out
aam
sbb
fwait
daa
ljmp
mov
add
adc
mov
pop
outsl
cmpsb
add
subl
adc
push
into
mov
push
cmp
push
imul
xor
mov
std
out
dec
clc
push
shll
add
cmp
jne
test
shlb
stc
adc
fwait
push
xor
lods
cmc
je
stc
sub
add
push
lea
sub
stc
sub
mov
decl
lea
or
cwtl
fnstenv
ja
lret
pop
inc
roll
test
push
pop
pop
pop
rorl
push
sub
pop
test
dec
pusha
pop
cmp
sbb
adc
dec
xchg
stos
xchg
test
xlat
mov
fbstp
mov
ds
pavgw
push
jno
lret
sbb
xor
stos
mov
mov
dec
jmp
pop
inc
adc
push
add
hlt
or
leave
and
mov
inc
mov
sbb
ljmp
adc
push
loopne
mov
in
loope
mov
addr16
mov
scas
shll
enter
fxam
movsl
inc
push
sub
push
scas
aas
jge
scas
and
xor
xchg
and
xchg
scas
push
loop
inc
push
movsl
fmulp
vmovsldup
fbstp
cld
ja
daa
adc
std
mov
pop
xchg
adc
lret
outsl
mov
addr16
sub
aas
push
sbb
pop
and
pop
pop
nop
add
push
inc
mov
dec
mov
addb
into
pop
xchg
test
mov
js
and
loop
push
inc
pop
scas
cld
add
mov
mov
pop
cmp
pusha
mov
aaa
leave
pop
nop
adc
test
mov
pop
aad
xor
mov
push
ljmpw
fidivrs
inc
mov
jne
sahf
dec
fsubp
pop
or
lret
arpl
adcb
mov
and
xchg
scas
inc
and
rorl
test
fucomi
sub
jbe
mov
das
cltd
mov
sub
pop
mov
adc
sbb
jle
push
inc
popa
popa
cmp
mov
mov
hlt
in
jb
aas
sbb
cmp
cmpsb
or
xchg
jp
sub
dec
aas
and
jns
scas
movsb
add
push
pusha
lods
into
sub
cmp
stc
out
sar
popa
out
call
and
xchg
in
ret
xchg
mov
pop
dec
add
and
mov
jmp
pop
xchg
in
xlat
addb
cmp
iret
cld
aaa
and
add
xor
arpl
or
inc
add
incl
sub
jns
adc
sub
inc
in
pop
int
adc
xchg
test
jno
shrb
sbbl
fdivrs
add
lods
sbb
inc
insb
and
int
push
or
fsubp
and
pop
xor
xor
push
testl
mov
repnz
xchg
jns
xchg
inc
xchg
xchg
ja
mov
pop
mov
cld
inc
sub
inc
cmpsb
rolb
setae
int3
xor
add
mov
lea
jb
pusha
ljmp
js
test
popf
in
inc
jae
cmp
pushf
jno
fcmovnbe
movsl
nop
iret
insl
fildll
push
push
sbb
out
jl
jae
sbb
cltd
mov
mov
pop
mov
shrb
arpl
into
inc
cmpsl
and
hlt
ret
xchg
push
daa
divl
mov
sbb
std
jl
stos
xor
push
int
sub
clc
aaa
ss
sbb
add
pop
cld
test
cwtd
xchg
xorl
jmp
inc
adc
imul
fcomp
lock
jb
lods
sub
test
mov
inc
sbb
hlt
lea
push
ror
movsb
mov
sbb
dec
xor
lds
stos
inc
test
mov
cli
mov
sbb
in
cmpsl
loopne
ds
scas
push
cwtl
or
push
pop
faddp
mov
aaa
cltd
push
pop
fcmovb
cmp
mov
lcall
pop
or
inc
ret
pusha
adc
mov
adc
in
xchg
pop
ja
xchg
mov
dec
cmp
dec
dec
test
jnp
sbb
in
cwtl
popf
mov
cmp
sbb
xor
loope
push
sti
loopne
jnp
mov
pop
dec
push
popa
adc
clc
pop
xor
lret
push
repz
lret
push
subl
addr16
xor
test
inc
mov
icebp
lds
repnz
pop
mov
cmpsb
xbegin
pop
mov
jns
mov
and
andb
or
sub
pextrw
and
cmp
sub
inc
pop
popf
stc
jo
jae
leave
mov
jl
shrb
xchg
aad
mov
pop
addb
mov
inc
out
pop
sub
inc
mov
ret
adc
leave
fldcw
sub
pop
cs
jecxz
and
inc
sub
xor
popf
test
ret
movb
into
notb
loop
pop
xchg
jl
pusha
mov
lcall
dec
ret
out
add
test
mov
jmp
ds
pop
cmc
mov
scas
stc
jae
ret
fs
pop
bound
cmp
pop
aas
out
mov
dec
xchg
cmp
shl
lock
test
in
jbe
mov
sub
btl
and
arpl
add
xlat
push
mov
flds
sbb
iret
push
loope
xorb
lds
xchg
pushf
out
movb
inc
ljmp
sarb
push
imul
mov
cli
ret
out
adc
fsub
sbb
dec
aam
sbb
jl
pusha
and
and
xchg
inc
in
andb
cmc
mov
fildl
stos
ja
gs
pop
inc
dec
mov
cmpsl
mov
jle
mov
ds
cmpsl
iret
in
mov
lock
jle
mov
cld
add
jne
dec
movsl
mov
in
out
inc
imul
les
int
imul
imul
scas
and
mov
popa
insb
xor
mov
mov
push
mov
or
sub
sub
xchg
pop
xchg
mov
xchg
jae
ret
pop
mov
fwait
aas
push
xchg
xor
inc
inc
shrb
ds
mov
inc
mov
push
call
cmpsl
cld
mov
aad
arpl
lcall
jno
or
mov
mov
dec
test
into
dec
mov
pop
sub
or
pop
sbb
insb
mov
loopne
in
shlb
cmp
mov
cmp
ljmp
sarl
xchg
add
jb
in
ss
push
cmp
stos
xchg
arpl
cltd
into
ret
xabort
add
in
stc
negl
dec
imul
lea
jns
sub
pusha
repz
mov
scas
pop
jb
andb
push
outsb
mov
jle
lock
test
mov
test
pop
lods
adc
push
aad
test
jl
pushw
jecxz
insb
bound
dec
comiss
test
sar
jle
fwait
das
jmp
insl
leave
inc
js
cmpsb
arpl
mov
ja
xchg
pushl
shrl
out
and
movb
sbb
adc
sub
sub
xchg
inc
mov
push
mov
cmp
push
xchg
mov
jne
dec
fsub
es
test
insb
or
jmp
mov
lcall
mov
into
dec
std
in
xor
jo
lcall
inc
ss
push
iret
cmpl
mov
out
push
sbb
lret
rcrb
outsl
rcrl
scas
sub
pop
scas
mov
dec
jecxz
fcmovnb
leave
fsubs
sbb
out
mov
or
mov
subl
fs
add
popf
fcmovnbe
inc
rcrb
test
ficoms
sbb
xchg
aaa
ret
fidivs
jae
mov
cs
pop
jle
adc
and
or
jmp
mov
arpl
js
jns
inc
roll
gs
gs
subb
mov
int
cli
pop
cs
clc
jecxz
adc
in
in
leave
sub
repnz
dec
pop
inc
pop
xchg
and
imul
test
xchg
cmp
mov
mov
fstpl
sbb
cmp
aad
jns
mov
andb
sbb
fs
mov
jnp
fwait
push
jge
xor
stos
in
mov
enter
adc
notb
jno
pop
jno
push
mov
rorb
lret
dec
dec
adc
scas
inc
iret
int
inc
lds
sub
call
xor
mov
popa
mov
jp
cmp
sbb
scas
shlb
rclb
mov
mov
cmp
or
out
out
lahf
mov
mov
inc
cmp
cmpsl
xchg
in
mov
loop
push
les
dec
or
aad
cld
mov
mov
jmp
ret
sbbl
dec
subb
shlb
out
lret
push
or
push
jp
adc
testb
add
add
inc
stc
popa
inc
sub
test
push
ds
mov
addr16
push
cmpsb
jb
data16
push
loope
mov
jo
jnp
xchg
xor
pop
cli
aas
dec
push
xor
arpl
pop
jecxz
inc
mov
stos
sbb
cmpsl
xlat
insb
fdivs
pop
dec
xchg
pop
lcall
jecxz
in
psubusb
fdivrs
repnz
lret
shrb
test
shll
add
pop
jg
out
out
and
enter
lea
subl
sub
stc
cli
dec
pop
mov
jae
mov
bound
or
jae
xchg
cmpb
push
ja
ret
cld
in
ret
clc
xor
lds
xor
hlt
cmpl
repz
and
xchg
test
rcr
in
das
jb
sbbb
dec
fcompl
in
sub
fidivrl
pop
adc
adc
inc
dec
inc
ficoml
push
jge
nop
push
rcll
pop
inc
push
cmp
add
sahf
fs
jp
sub
mov
lcall
scas
push
cld
mov
jge
movsl
mov
mov
iret
xchg
shr
or
xchg
rol
jecxz
jne
bound
and
bound
inc
mov
lret
cmp
and
mov
pop
xchg
pop
cmp
or
out
mov
icebp
loopne
cmpsl
xchg
dec
mov
add
leave
and
int3
repz
push
pop
adc
stc
mov
and
ja
xlat
add
push
add
sub
loopne
mov
jecxz
lods
add
push
add
xchg
dec
icebp
ret
inc
ja
jge
push
jne
mov
inc
std
mov
xor
enter
lds
jl
outsb
sub
jge
sub
cli
inc
sbb
mov
and
lock
cld
popa
or
inc
stos
or
jl
fiaddl
out
jecxz
incl
inc
lds
ficompl
lds
mov
or
clc
daa
std
outsb
mov
dec
std
inc
outsl
data16
mov
shlb
mov
les
xor
jns
ljmp
and
andps
rcrl
dec
mov
jp
push
dec
sub
mov
add
rorl
inc
or
xchg
sbb
adc
out
out
push
mov
shll
inc
xchg
int
lcall
out
scas
cmp
aad
or
fsubp
jmp
pusha
fldt
jo
cmp
xchg
popf
fcmovnbe
pop
inc
mov
cmp
mov
inc
inc
mov
fcoms
xor
cmp
int3
iret
xchg
xchg
or
jge
in
lods
pop
sbb
inc
mov
sti
ja
repz
call
pop
push
pop
xor
mov
dec
xchg
cmpsl
sub
jle
std
sub
sahf
dec
jge
pop
jb
rcl
xor
test
adc
add
int
int3
in
cmp
fcmovnu
sti
out
int3
pushf
or
and
cmp
pop
mov
mov
jb
lahf
jbe
jae
mov
mov
jns
pop
hlt
xlat
cmp
sub
or
xor
inc
xor
dec
sahf
cmp
jno
push
popf
jb
divl
sub
inc
add
pop
repnz
push
in
adc
loop
adc
fwait
jne
mov
popf
mov
das
shll
mov
mov
movsl
push
xor
mov
mov
mov
fstps
outsl
mov
into
mov
mov
sbb
fcmovne
repz
add
andb
int
ficomps
cmp
mull
int3
jecxz
xchg
jbe
push
dec
inc
pop
aam
mov
scas
jb
jnp
sbb
in
fstpl
xchg
jecxz
scas
inc
jp
mov
dec
dec
incb
in
loop
pop
add
and
jg
bnd
push
mov
inc
add
inc
xor
adc
or
push
mov
push
sub
movsb
cltd
pop
scas
jbe
push
pushf
and
sti
xor
or
inc
mov
test
xchg
sti
negl
popl
jbe
xchg
popa
mov
sbb
std
cmp
aaa
cmpsb
xor
adc
pusha
xchg
imul
push
in
pop
mov
jno
test
dec
mov
mov
xchg
movswl
inc
push
jg
pop
inc
cmp
sbb
sbb
rcll
clc
arpl
lea
inc
js
inc
xor
cmp
add
xchg
xor
sahf
add
loopne
mov
pop
addl
mov
mov
add
std
pop
cmp
and
lahf
fmul
jno
insl
push
mov
and
ss
jb
sbb
pop
rolb
inc
jo
testb
test
popaw
mov
aad
push
cmp
js
adc
inc
iret
inc
mov
cltd
sbb
sbb
es
jp
icebp
ret
add
pop
push
outsl
mov
in
das
jge
cmc
sub
cli
push
mov
push
pop
dec
aad
mov
insb
fmul
les
push
mov
xchg
ret
ljmp
and
int3
or
clc
sub
jae
pop
inc
pushf
syscall
and
scas
inc
test
push
aam
pop
sub
mov
fwait
aam
pop
jl
int3
mov
inc
and
pop
scas
cmc
sahf
xchg
mov
mov
lcall
fcomps
mov
fidivrs
icebp
cmp
test
clc
lds
cmpsl
sub
cltd
adc
int
enter
or
xor
aad
inc
ret
inc
push
sub
test
pushf
dec
mov
aas
push
jae
ss
inc
sbb
xchg
mov
mov
mov
jg
seto
stc
jle
jo
shl
push
adc
cltd
out
fcomp
mov
inc
xor
dec
outsb
aam
outsl
pop
fstpl
pop
cltd
jnp
addr16
fwait
mov
hlt
push
mov
push
mulb
and
aas
pop
add
arpl
jbe
sbb
xor
repnz
lret
push
outsl
das
sub
cwtl
repnz
add
push
je
or
lods
fs
or
adc
punpcklbw
xchg
test
or
pop
push
cmp
or
js
inc
xor
adc
stos
ljmp
imul
sti
loopne
sub
pop
mov
mov
mov
xchg
dec
arpl
mov
je
fcoml
mov
repz
mov
ljmp
pop
movsl
or
cmp
jecxz
or
notb
out
std
icebp
pusha
or
mov
cmp
xchg
mov
testb
nop
rcll
out
js
mov
push
js
inc
mov
sbb
push
cmp
insl
insl
sbb
jmp
mov
es
sbb
popf
push
int
int3
mov
daa
or
jge
push
or
movsl
arpl
add
sbb
fcmovbe
mov
push
mov
cld
mov
shrb
ss
out
out
dec
test
xor
push
movb
sbb
xor
int
fwait
sbb
push
ss
leave
jo
pop
mov
jno
mov
mov
mov
stc
lret
xor
xchg
mov
mov
ds
hlt
stos
gs
lret
xor
mov
cmpsb
sub
enter
xchg
das
nop
adc
cmp
inc
es
xchg
shlb
loope
rorl
lahf
xor
xor
cs
cmp
sub
pop
xchg
sbb
int3
orl
sbb
das
stos
xlat
hlt
mov
les
imul
push
enter
push
imull
insb
push
mov
incb
insl
push
pop
fwait
aad
mov
jne
pop
iret
popf
mov
mov
call
sub
movsl
mov
push
dec
in
aad
mov
add
adc
cmp
lahf
jno
pop
sub
sub
iret
lret
xor
xchg
push
jle
loop
xor
sahf
nop
icebp
outsb
fidivrs
rorl
imul
stos
pop
pop
cmpl
pop
cmpsl
mov
pop
mov
xlat
adc
sbb
mov
dec
lahf
popf
cld
mov
or
adc
inc
add
push
popf
sub
jecxz
into
or
scas
push
and
out
jae
call
in
push
outsl
test
rep
or
andb
push
mov
insl
andl
fs
lea
movsl
repnz
repnz
push
js
movsl
icebp
cmp
fcmovnbe
lea
shrb
pop
dec
sub
incl
scas
push
clc
mov
fmuls
dec
std
pop
xor
inc
idiv
cmp
xchg
sbbl
mov
arpl
mov
mov
lock
cmp
ret
mov
sub
gs
aam
inc
mov
loopne
xchg
pop
xor
xchg
jne
jmp
sbb
jne
lods
in
push
lock
fwait
xor
dec
ljmp
and
sbb
cmc
into
idivl
popf
adc
and
mov
fsubrs
jb
jo
inc
mov
fldl2t
cmp
sbb
imul
repnz
jp
insl
mov
sbb
push
mov
cmpsl
and
lahf
dec
arpl
int
cmp
and
mov
sbb
in
mov
subl
mov
jg
xorb
out
in
fsubrl
xchg
pusha
fsubs
in
mov
out
test
testl
add
xchg
call
dec
jo,pn
jae
cmp
xor
inc
popf
dec
in
js
aam
sti
lods
subl
dec
aad
mov
cmp
xchg
movsl
aam
pop
inc
inc
xor
test
mov
insb
lahf
pop
push
movsl
add
mov
leave
enter
test
jne
push
lock
xchg
fnstenv
push
les
push
or
and
push
popa
dec
test
std
pop
xor
icebp
mov
xor
dec
xor
bound
xchg
fstl
ss
leave
lret
mov
mov
pop
clc
xchg
xor
test
adc
cmp
fsubl
push
popf
and
sub
mov
in
cmpsb
enter
rolb
fs
mov
cmp
jp
loopne
in
iret
lahf
dec
cmc
cmpsb
jns
sub
loope
lods
dec
lret
js
mov
add
mov
lret
je
push
cmp
add
jns
ds
cmp
scas
hlt
lahf
mov
out
aaa
inc
inc
in
aaa
das
dec
sar
dec
push
pop
inc
cmp
insl
add
pop
gs
fcomps
mov
idivb
orb
mov
pushf
icebp
call
adc
sbb
das
xchg
jl
das
push
lret
movsb
jno
loope
mov
jns
shrl
xor
outsb
adc
jle
lea
fsubrl
pop
std
jne
cwtl
jnp
fdivrl
inc
iret
aad
xchg
ljmp
pop
add
jle
int
subl
sub
bswap
cmpsb
sahf
push
call
push
push
mov
dec
push
std
test
insb
in
icebp
inc
mov
clc
scas
out
pop
fnstenv
push
sbb
add
gs
cltd
cmc
fidivs
movsl
mov
inc
inc
nop
xlat
push
or
int3
and
xchg
mov
lock
inc
add
mov
outsb
mov
or
lret
inc
mov
das
inc
pop
xlat
or
and
cmpl
imul
push
add
dec
pop
je
mov
pop
adc
cmpsl
pushf
pop
pop
mov
and
jl
inc
xchg
loopne
mov
lds
addr16
dec
fdivs
imul
call
xchg
sahf
pop
pop
mov
in
out
sbb
ror
lret
push
push
int
push
push
std
rorl
mov
mov
push
inc
outsb
in
test
sahf
in
push
push
xchg
fldenv
fnsave
mov
shll
std
icebp
call
xchg
stos
push
test
push
pop
or
popa
jle
mov
in
mov
xchg
mov
sub
cmpsb
add
andl
inc
hlt
cwtl
inc
sahf
std
outsl
repz
icebp
push
sub
xor
xchg
in
jbe
mov
cmp
es
sbb
jmp
xor
inc
push
scas
sbb
cmp
mov
inc
mov
sti
dec
aas
aaa
mov
sub
sbb
mov
loopne
stc
or
ficoml
test
xchg
das
jl
push
hlt
xor
add
push
int3
pushw
mov
lds
enter
and
jg
sub
inc
mov
pop
repz
iret
xchg
insb
cmpsl
xchg
push
data16
pop
clc
add
ret
rcrb
dec
subb
mov
int
dec
dec
add
and
ja
cltd
es
mov
add
rcl
or
jecxz
add
pop
mov
in
pop
jmp
mov
jbe
jbe
dec
sbb
js
cld
jns
mov
test
sbb
fwait
loopne
mov
mov
iret
dec
add
rcll
inc
sub
shll
inc
lea
jl
inc
aas
push
fidivs
pop
ss
jnp
cltd
inc
push
jne
out
imulb
outsb
xchg
add
scas
std
ja
inc
push
fistpl
pop
cli
lret
add
fwait
inc
aam
pop
jae
leave
popf
test
jecxz
lock
cmpl
mov
movsl
in
mov
and
inc
ljmp
enter
sub
jg
lock
decb
and
xchg
ss
dec
sahf
or
sub
orw
mov
fcmove
jae
cld
sub
push
lret
lods
loopne
mov
dec
push
add
xchg
add
sub
and
cmp
jle
push
lea
mov
adc
sbb
jbe
ja
jb
sarb
mov
mov
mov
add
fistpll
mov
gs
int
or
pop
loopne
divb
fsubs
mov
push
leave
inc
pop
js
mov
lods
outsl
cmc
xor
add
dec
outsb
or
sub
mov
fucom
mov
scas
out
push
adc
dec
ja
xchg
cmp
pop
cmc
adc
testl
aad
lds
pop
je
jmp
sbb
xor
dec
icebp
stos
xchg
ljmp
fimuls
ds
pop
ljmp
jne
in
xchg
push
and
rorl
fcompl
cli
lahf
js
lret
loope
ss
jge
pop
adc
loopne
mov
sub
outsl
repnz
and
idiv
push
out
jbe
rclb
das
jp
lcall
lcall
pop
mov
pushl
nop
pop
inc
dec
push
and
movsl
jg
rcrb
mov
adc
jo
or
aam
cs
rorl
mov
rcrb
xor
inc
clc
pop
in
mov
xchg
pop
les
mov
out
or
fstpt
push
das
pop
lock
mov
sub
into
add
xchg
inc
xor
iret
cltd
xchg
roll
push
std
ficompl
jle,pn
ja
dec
push
pop
decb
sub
movsb
adc
mov
sub
add
aaa
cmpsl
out
sub
shlb
fdivl
lret
jne
or
mov
icebp
pop
xor
push
adc
pop
mov
add
cmp
and
out
mov
mov
in
addr16
sti
adc
inc
nop
mov
sub
and
jmp
stc
fwait
and
int3
inc
fidivs
mov
push
test
sub
icebp
daa
lret
pop
enter
rclb
decb
jl
xor
push
jb
fs
pop
adc
jmp
mov
sbb
jne
std
mov
test
sbb
xchg
inc
ret
or
repnz
push
sbb
inc
out
mov
add
pop
mov
pop
or
xor
imul
jno
sti
cs
xor
pop
ror
insb
cmp
cmpsl
aas
and
push
jge,pt
xor
jecxz
pop
ret
fwait
lock
adc
xchg
push
movsl
or
dec
sbb
jnp
adc
fistps
out
inc
fildll
ret
in
push
push
test
mov
popf
ja
loopne
add
es
mov
mov
loopne
mov
iret
pmaddwd
jmp
push
daa
push
idivl
in
sarl
cltd
out
mov
mov
jp
jmp
jl
push
mov
inc
or
outsb
pop
aam
loope
iret
mov
shl
xchg
mov
dec
stos
loope
adc
xchg
lea
mov
adc
fwait
sti
mov
jmp
fildll
push
test
ja
push
sub
mov
mov
push
fstpt
adc
xchg
dec
nop
mov
xchg
cmc
push
fwait
loop
or
xchg
xlat
scas
sbb
xchg
lods
scas
jae
or
fstl
dec
add
mov
or
ja
and
gs
or
jae
pop
call
lock
mov
test
add
imul
or
jmp
fisttpl
jno
lods
pop
cwtl
mov
sbb
cmp
sub
sti
addr16
pop
enter
std
jo,pn
and
pop
sahf
gs
enter
mov
nop
dec
xchg
cmp
mov
jmp
ror
xchg
rcl
out
jg
cmpsl
ja
sbb
test
dec
xchg
addr16
daa
daa
pop
adc
sahf
mov
popa
mov
and
ljmp
adc
or
xchg
pop
shlb
pop
dec
cmp
sub
lret
sbbl
xchg
jp
sti
cmpsb
push
sti
push
mov
int
js
testb
cmp
insb
loop
jnp
and
out
les
add
pop
stos
dec
fisttpl
dec
xchg
scas
pusha
dec
mov
ret
add
mov
mov
sub
loope
cwtl
xchg
aas
sbb
orps
popf
and
xchg
pop
stos
xrelease
pop
pusha
aam
out
cmc
push
aam
mov
mov
rcll
pop
jns
lea
sub
js
xchg
fwait
or
jae
sub
xchg
sub
lds
jns
sbbb
add
mov
lret
das
imul
out
mov
lcall
inc
dec
xlat
cmp
imul
dec
lcall
pop
xchg
shlb
push
push
out
js
jbe
push
sub
add
or
fidivrl
in
mov
sub
mov
fdiv
or
xchg
mov
ljmp
call
xchg
mov
mov
mov
dec
mov
lret
adc
fidivrs
dec
jp
jne
lock
test
lock
cli
lods
cmp
inc
jge
push
jl
aaa
xor
jno
sub
push
add
and
pop
push
sub
xor
stos
rcrb
add
jb
ljmp
sub
sbb
imulb
lds
sti
pop
testb
push
mov
xor
lahf
xor
push
fcomip
jg
testb
fmuls
mov
cltd
lret
add
pop
rclb
mov
leave
xor
and
aam
mov
mov
data16
pop
test
sbb
xchg
pop
mov
sarl
mov
jmp
jb
jp
gs
pop
inc
pop
cmp
mov
xor
in
jecxz
orl
cmpsl
inc
sub
pop
xchg
push
sti
pop
and
inc
lret
aam
dec
shrl
push
or
iret
into
repz
mov
xchg
mov
mov
adc
sub
or
push
sub
lcall
xchg
aas
pusha
aam
out
mov
mov
push
cmp
sbb
cli
dec
aam
ljmp
and
enter
mov
fwait
loopne
les
xor
lret
mov
push
xor
and
dec
pop
cwtl
nop
fcoms
es
enter
adc
sbb
sbb
outsl
mov
adc
mov
push
xor
hlt
mov
sbb
xchg
push
add
ficompl
inc
imul
pop
lods
ja
inc
push
imul
ljmp
cmp
dec
aas
jmp
jo
flds
out
mov
cltd
dec
fidivs
rol
jle
das
xchg
std
inc
xlat
in
push
mov
jl
jno
and
bnd
fwait
push
fs
mov
arpl
mov
xor
dec
neg
inc
nop
out
cwtl
test
or
and
inc
cld
sub
lahf
popf
lcall
pushf
mov
in
dec
pop
dec
dec
mov
or
pmaxub
pop
cmp
inc
push
popf
jg
aam
imul
fdivp
frstor
mov
mov
and
pop
pop
in
inc
aam
outsb
jae
std
dec
rcrl
push
add
rcrb
jae
ret
rcll
xchg
test
es
mov
pop
sub
mov
xor
mov
cmc
rcrb
shrl
mov
pusha
mov
cmpb
lret
and
lret
imul
and
mov
outsb
pusha
and
mov
mov
ds
cmp
aam
jecxz
test
mov
pop
int3
pop
xor
scas
call
aam
fcoml
and
push
ja
cld
jle
loopne
inc
mov
in
cmp
test
repz
scas
leave
add
insb
xchg
mov
inc
inc
mov
add
push
ljmp
movsl
adc
xchg
jmp
iret
loop
mov
andl
cmc
dec
inc
push
xchg
fadds
adc
xchg
mov
or
or
pop
shrl
mov
mov
push
mov
pop
insb
in
mov
mov
push
sub
mov
xchg
xchg
jne
shl
sbb
sbbb
push
aad
outsb
fmuls
or
xchg
dec
and
mov
gs
push
push
imul
push
inc
in
sbb
mov
xchg
pop
cmp
iret
push
mov
jo
lret
arpl
push
insb
ljmp
fidivl
pop
add
adc
xchg
sub
mov
cmpb
fmuls
bound
xchg
dec
xor
aam
add
cld
lods
and
lret
sub
insb
ss
push
mov
push
cwtl
andl
ds
cmp
jbe
mov
pop
iret
stc
jmp
or
iret
mov
pop
jo
fnstcw
mov
fadds
incl
orb
scas
iret
push
or
dec
je
lods
jno
ficompl
icebp
add
ljmp
sahf
lret
testl
mov
ror
jg
xchg
cltd
roll
loopne
sub
cmc
and
sbb
imul
mov
sub
pushf
outsb
mov
imul
xor
cmc
jecxz
cvtpi2ps
push
and
or
fdiv
dec
in
in
xlat
lods
lret
cmc
leave
sbb
lock
in
pop
inc
test
das
inc
jnp
xchg
jno
xlat
or
sar
xchg
pusha
sbb
jl
jae
push
int3
sbb
jb
fs
mov
and
push
adc
decb
lock
imul
push
jns
pop
and
fs
es
push
fildll
mov
mov
pop
mov
xor
stc
mov
cs
add
imul
movsb
or
adc
xor
iret
and
js
inc
mov
cmp
or
cmp
movl
xor
mov
lods
leave
dec
addl
dec
dec
leave
xchg
xchg
aam
adc
jbe
mov
adc
ljmp
pusha
push
into
inc
fsubrp
dec
dec
cmp
and
pop
cmp
arpl
mov
mov
inc
mov
lods
and
dec
iret
push
int3
pop
xor
cmc
ljmp
lcall
pop
scas
add
out
inc
sbb
rorl
fcomp
sub
mov
clc
in
dec
jecxz
rcll
fimull
mov
cmp
outsb
int3
xchg
gs
jecxz
xchg
ror
jecxz
cli
shll
cli
sub
add
jle
test
fists
test
xor
inc
subb
mov
test
jp
negl
cli
imul
dec
clc
lret
arpl
out
aam
push
mov
int
cld
add
xor
cltd
gs
iret
mov
mov
out
push
test
cmpsl
std
lret
mov
fwait
loope
jle
daa
jmp
outsb
test
lcall
les
loop
inc
mov
imul
jb
xor
pop
cwtl
and
ss
popa
rorl
jg
daa
mov
movsb
xchg
mov
xchg
push
jge
out
jo
daa
test
fxch
repz
dec
adc
dec
sub
stc
xchg
fisttps
fcompl
push
adc
pop
sub
xor
cmpsl
test
sub
mov
insb
inc
sbb
xor
lods
mov
testl
lea
xor
push
js
xor
popa
pop
out
lds
loope
mov
icebp
sub
movsb
lahf
and
adc
out
xchg
insb
movsl
xchg
cs
inc
int
sti
jmp
mov
mov
pop
sarb
push
pop
fidivs
aad
icebp
push
jnp
push
mov
add
rcr
inc
shll
in
adc
fildl
dec
clc
daa
lods
push
ja
sarb
pop
pop
sbb
jp
cld
jno
adc
clc
arpl
test
ficoml
xor
idivb
jb
jecxz
lret
andb
xchg
adc
xchg
iret
fdecstp
mov
ds
xor
pop
dec
cmp
xor
mov
mov
push
dec
and
mov
inc
outsb
pop
aas
adc
xor
mov
pop
bound
cltd
ljmp
sub
sub
data16
jns
hlt
push
adc
and
fadd
and
push
push
out
mov
and
lock
push
adc
stos
pop
lcall
lcall
mov
jns
push
lods
lret
push
jbe
push
jle
cld
push
sub
push
dec
fldenv
aaa
js
shlb
push
fwait
push
push
repz
sbb
outsl
call
xor
sbb
pop
icebp
jg
js
xor
cmpsl
dec
inc
enter
and
outsb
lods
filds
push
and
add
and
add
hlt
xchg
jp
lea
jmp
dec
fsubl
jnp
cmp
ds
xchg
push
test
mov
popf
push
sbb
jecxz
negl
dec
ljmp
mov
mov
sub
mov
sbb
loop
push
inc
jae
gs
xor
cmp
loopne
negb
push
and
and
loop
popa
fstpl
dec
shl
aad
cmpsb
xchg
ret
ror
enter
mov
pop
cmpsl
imul
enter
in
jae
movsb
shlb
mov
stos
inc
shrl
enter
sub
clc
cmp
adc
icebp
jge
adc
xor
sti
jle
add
enter
xchg
stc
std
adc
je
popf
leave
pop
fcmove
in
xchg
add
sub
inc
hlt
ds
out
dec
ds
mov
js
gs
aaa
mov
push
sub
ret
cwtl
xchg
enter
adc
mov
es
loopne
insl
sbb
bound
mov
pop
add
in
clc
fadds
dec
fsubl
mov
rcrl
enter
pop
push
or
cmp
hlt
sub
cli
push
xchg
stc
push
dec
inc
xchg
jns,pt
jns
jge
push
adc
repz
je
ss
hlt
in
fcmovnb
push
push
adc
ret
in
mov
movsb
xchg
cmpsb
xlat
and
fdiv
add
outsl
icebp
mov
ja
inc
inc
imul
test
pushf
mov
adc
cltd
inc
and
mov
leave
mov
add
pop
loop
pop
or
cmp
sbb
jns
scas
mov
xlat
jp
lret
sbb
jp
insb
sub
fistps
in
or
inc
in
out
and
push
ret
inc
int3
pop
or
ljmp
or
xor
loope
cli
js
push
adc
pop
and
inc
rcrl
scas
subl
fcmovb
stos
or
hlt
push
js
sub
insb
cmp
imul
or
mov
dec
div
popf
mov
push
repnz
imul
sub
jp
mov
into
daa
pop
pop
je
test
mov
adc
ret
aad
cmp
dec
ret
pushf
mov
xchg
adc
xchg
mov
add
lods
xor
pushf
sub
jle
aad
pop
and
pushw
push
xor
inc
test
out
pop
push
adc
xchg
pop
mov
negl
jae
ret
dec
imul
jp
or
ljmp
rolb
sub
stos
push
test
loopne
and
aad
scas
in
cmp
jne
in
iret
jle
mov
mov
test
andl
and
push
es
imul
cltd
cmp
jb
sbb
push
jge
ds
iret
mov
jns
out
push
bound
ss
adc
stos
cmpl
loope
mov
mov
push
test
cmc
and
ret
enter
fisubl
fnstcw
fisubs
movsb
or
mov
mov
lock
cmpsb
push
mov
inc
orb
fiadds
push
push
pop
fmuls
cmp
icebp
pop
xor
sbb
pop
das
or
pusha
out
btc
add
test
mov
jnp
mov
std
loope
push
dec
cmp
xchg
mov
dec
push
inc
and
inc
pop
mov
pop
data16
mov
test
daa
mov
add
fdivrl
and
mov
movl
or
leave
xchg
scas
mov
lret
out
inc
dec
cld
jmp
icebp
adc
xlat
mov
pop
jno
jno
add
dec
fwait
imul
arpl
push
int
mov
mov
je
test
xchg
sti
dec
pop
jb
fcoml
fs
movsl
inc
sbb
into
xchg
jne
ljmp
aas
mov
cli
imul
adc
ret
sbb
lahf
jg
ror
in
jne
loop
dec
out
mov
jmp
pop
mov
out
test
les
mov
icebp
hlt
xor
or
and
rorl
fisubl
push
mov
sbb
out
fsubrs
repnz
push
mov
test
or
test
inc
out
lahf
iret
nop
push
loop
xchg
aaa
sahf
scas
xor
push
pop
lret
cmp
dec
int
inc
mov
popf
jl
das
fwait
sub
cmp
mov
loope
and
jg
jecxz
sub
pop
mov
mov
cmp
push
out
imul
cmp
xchg
aad
cld
repnz
lret
inc
sub
jl
imul
cmpsb
scas
and
mov
xchg
leave
sub
dec
rcrb
sub
cltd
test
insb
mov
popf
mov
cmp
jns
ss
scas
jbe
jl
adc
lahf
inc
pop
jns
sahf
xchg
jl
scas
test
inc
test
and
sbb
movsl
xorb
or
rcrl
jae
imul
mov
cmpsl
xchg
sarb
xor
insl
in
data16
cmpl
xchg
mov
jg
data16
out
mov
sbb
sbb
in
leave
dec
hlt
and
mov
xchg
jbe
add
or
int
cmp
das
pop
or
push
iret
call
in
inc
push
inc
aaa
xchg
jmp
cwtl
adc
insl
pop
xor
pop
test
xor
cmpsb
inc
jg
push
mov
dec
mov
push
and
mov
inc
and
add
cmpsl
mov
lds
mov
mov
test
pop
sbbl
gs
lock
repnz
add
xor
adc
test
cmp
adc
js
push
repnz
pop
mov
pushf
int
or
adc
movsl
or
inc
xchg
cli
cmp
aas
mov
lea
jge
int3
mov
xor
dec
pop
scas
jle
sti
pushf
dec
jb
adc
bswap
scas
into
add
insl
cmc
mov
jne
sbb
fbstp
jb
inc
pop
cmc
dec
daa
dec
sub
data16
ss
xor
popf
jno
mov
nop
xor
decb
push
icebp
in
jle
lret
out
push
inc
mov
xchg
fidivrl
dec
push
daa
xor
pop
or
inc
jle
das
push
loope
adc
outsb
nop
jp
jecxz
or
and
popa
loopne
in
shl
int
cwtl
decl
mov
lret
decb
and
push
sarb
jge
stos
xorl
rcrl
sub
fisubrl
les
mov
pushw
xchg
aaa
add
cltd
xor
gs
inc
mov
or
cld
xchg
addr16
aam
xchg
cmp
jae
mov
lods
jl
lret
mov
imul
stos
int
adc
lds
add
sti
sub
daa
cld
enter
push
dec
pop
lods
pop
xchg
mov
insl
int
shll
pop
jmp
cmpl
xchg
sbb
clc
call
je
addr16
fld1
jae
cmp
lret
jp
loopne
xor
je
jb
mov
mov
inc
popf
lcall
dec
or
dec
inc
movsl
lcall
pop
test
push
sub
nop
xor
ss
inc
xor
cmpsl
popf
lock
cmp
repz
push
mov
jnp
push
fidivrs
xchg
iret
pop
not
or
mov
inc
mov
fcmovne
mov
adc
jecxz
sub
jbe
or
mov
pop
and
xor
xor
lods
mov
mov
xchg
popl
pop
jp
sub
xor
mov
movsb
push
cmp
cltd
ds
cli
mov
out
test
clc
sbb
push
pop
jno
and
lock
lods
cli
movd
in
mov
sbb
outsb
and
adc
mov
cld
cmp
fcoml
or
xor
cmpsb
ds
out
out
les
inc
cld
jp
cmp
mov
xor
test
sub
cmp
sub
add
xor
inc
cltd
ja
xchg
cmp
inc
fisubl
in
in
push
pushf
lret
pop
mov
loope
bound
daa
xchg
arpl
loopne
dec
dec
and
sbb
test
and
fdivp
mov
mov
mov
jge
cmpsb
pop
push
pop
jnp
pop
xchg
outsb
pop
leave
sbb
daa
push
std
push
cmp
repnz
xchg
daa
stc
in
hlt
adc
lret
sub
push
in
mov
or
and
ds
xor
outsl
rorl
sbb
mov
lock
lcall
ss
fxtract
sub
xlat
pop
mov
xchg
sub
cmpsl
out
xchg
repnz
sub
pop
xor
std
je
pop
sub
dec
xor
sub
xchg
inc
ja
dec
and
sbb
sbb
jl
or
ret
xor
or
jmp
cltd
mov
psrld
in
sti
jne
cltd
in
dec
sbb
mov
pop
inc
shrb
es
cmpsl
fdivr
dec
imul
inc
pop
aas
pop
xor
xchg
sbb
sar
leave
dec
or
fbstp
sbb
xor
dec
popa
repz
jns
mov
ret
or
popf
lret
lds
adc
dec
jns
cmp
je
xor
dec
sbb
scas
mov
in
pop
stos
out
dec
je
ret
pop
sub
push
add
lahf
cmp
cmp
test
mov
pop
inc
aas
loop
cmc
outsb
and
daa
sbb
sub
je
popf
nop
sub
clc
jnp
cmp
movsb
mov
xchg
adc
cwtl
test
lea
loope
sub
inc
mov
jmp
int3
lods
sbb
jecxz
jae
sbb
cmpsl
repnz
sar
ficoms
mov
cltd
pushf
call
pushw
adc
dec
cmp
sbbl
mov
das
push
and
mov
rcrb
mov
data16
hlt
test
mov
out
sbb
jns
fcoml
dec
cmpsl
sbbb
loopne
mov
add
xchg
les
sub
mov
xchg
test
pop
test
int
sbb
sbb
pop
mov
test
into
stos
mov
aaa
pop
pop
sti
pop
in
aam
out
mov
cmp
mov
stc
fisubrs
lds
je
cmc
mov
es
mov
mov
das
and
xchg
jae
xor
push
lcall
mov
aam
jl
lcall
and
xor
pop
inc
test
imul
and
add
mov
rcrb
sbb
add
lods
xor
aaa
mov
dec
pop
push
dec
repz
lcall
loop
mov
std
sbb
bound
xchg
iret
sub
in
inc
or
pop
pusha
cwtl
pop
popf
gs
arpl
mov
bound
adc
dec
inc
push
into
sbb
std
arpl
sarl
jmp
dec
ljmp
push
fldcw
jecxz
pop
mov
sub
dec
xchg
test
jg
pop
sahf
adcb
sub
mov
imul
out
sbb
xchg
sarb
es
ffree
arpl
mov
mov
nop
pop
push
inc
inc
push
and
sub
or
pop
push
mov
xchg
mov
cmpsb
mov
test
adc
clc
cmp
cmp
movhps
stos
push
adc
fidivrs
daa
call
in
lret
mov
dec
mov
push
push
in
jne
sbb
mov
int3
roll
rcll
and
pop
jno
dec
jb
aaa
scas
push
and
add
sbb
pop
push
adc
mov
arpl
dec
cmpl
dec
jl
add
and
in
and
add
popa
lret
roll
inc
mov
mov
xchg
xchg
xor
mov
pop
and
mov
inc
jns
push
push
mov
and
ret
sbb
mov
sub
cltd
and
stos
pop
or
add
fcomps
fwait
pop
inc
xchg
adc
xorl
hlt
or
into
xchg
mov
bound
sbb
sbb
fdiv
rolb
rcrb
xchg
or
test
bound
repz
dec
push
adc
loopne
outsl
aad
test
arpl
mov
sbb
dec
push
fs
adc
cmp
ja
push
xchg
and
jne
cmp
sbb
lahf
adc
inc
sbb
cmpsl
mov
push
jae
sbb
xchg
or
icebp
adc
push
add
jb
and
mov
jle
push
xchg
loope
std
mov
sbb
jp
pop
scas
pop
aam
jo
and
push
dec
repz
fisubrs
sub
sbbl
movsb
cs
xchg
imul
repnz
das
adc
int3
sub
notb
add
pop
mov
and
add
push
data16
loop
jbe
jmp
mov
pop
and
cmp
adc
aad
inc
sahf
mov
fnstsw
sbb
xchg
fisubrl
aam
pop
fstps
pop
adc
jne
and
sbb
rclb
outsb
sub
pop
jo
rorb
xorb
sbb
push
pop
mov
pop
andb
jg
popf
pushf
sub
xor
mov
inc
or
popf
sbb
mov
jae
int
mov
bound
movsb
cmp
sub
sbb
jbe
in
mov
je
inc
mov
xchg
inc
cs
rcl
imul
push
out
mov
adcl
jns
pusha
leave
rcrl
mov
jl
xor
dec
mov
mov
add
mov
popf
addr16
je
fcos
loopne
aad
lods
or
fstps
enter
imul
in
adc
inc
out
aad
aad
and
sub
shll
mov
ja
lahf
add
lcall
cld
jle
scas
enter
js
loope
addb
mov
pop
jno
movsb
ret
add
jae
idivb
andl
add
lahf
sbbb
push
xor
lock
sub
sbb
ss
in
popa
or
adc
pushf
stc
push
in
pop
cmpl
cmp
popf
sbb
lret
cs
stc
stos
cmp
stc
insl
lock
imul
aam
popf
cld
cmpsb
bnd
and
mov
adc
xor
insb
arpl
in
adc
xchg
repz
popl
idiv
out
and
mov
push
adc
cs
pop
rcrl
dec
xchg
loop
negb
lock
fidivrs
lcall
pop
inc
std
push
enter
mov
dec
push
push
pop
push
pop
dec
ret
lods
mov
mov
test
shl
push
js
popf
sbb
mov
pop
lret
ja
mov
dec
xchg
test
mov
imul
inc
sbb
and
push
cmp
std
fldcw
mov
fsubs
pop
sub
cmp
xchg
jb
push
dec
testl
pop
cmp
xor
loope
ja
mov
enter
mov
xchg
inc
fbstp
inc
inc
xchg
aas
aas
movsl
fimuls
jp
xchg
fnstsw
mov
aaa
xchg
imul
movsl
nop
daa
pop
sti
add
jo
xor
ficompl
stc
sahf
pop
movsl
out
xchg
push
dec
dec
pop
jo
xchg
sub
lret
imul
jae
movsl
gs
push
adc
jno
sahf
cli
stos
stos
sarb
mov
mov
lds
jp
xchg
insb
pop
outsb
jns
and
xor
lea
push
lahf
stc
scas
adc
inc
push
call
fcoml
adc
mov
dec
and
outsl
sub
push
cmp
push
sbb
arpl
mov
push
insb
rol
inc
int3
dec
mov
scas
fiaddl
dec
jecxz
gs
pushf
aad
cltd
pushf
rcrb
and
dec
test
jo
or
jge
rolb
mov
xor
das
icebp
jg
or
aaa
nop
mov
add
sub
and
movsl
mov
or
jp
jno
xchg
in
add
cs
sbb
pop
jmp
adc
iret
movsl
and
mov
xor
jbe
icebp
call
pusha
loope
lcall
or
adc
mov
pop
leave
dec
in
mull
cmp
popl
je
ret
add
idivl
ljmp
rorl
xchg
adc
sar
dec
and
shll
pusha
or
pop
sbb
cmp
imul
data16
xchg
xor
inc
xchg
jb
jecxz
pop
dec
xchg
stc
mov
or
xchg
scas
jbe
rcll
adc
fisubs
movl
insl
push
adc
mov
mov
jle
pop
xchg
jmp
sbb
test
mov
test
es
mov
icebp
loopne
xlat
rorl
mov
pushf
jle
ljmp
mov
notl
popa
mov
sub
dec
stos
jns
xchg
or
leave
push
mov
cmpsb
or
adc
push
jle
sub
jno
insb
push
aas
push
lds
stos
mov
mov
adcl
cmp
adcl
mov
pop
xor
sar
mov
adc
sti
push
and
pop
mov
repz
mov
add
xorb
in
sbb
loopne
inc
add
std
mov
mov
sub
mov
or
adc
sub
cmpsl
clc
ja
daa
dec
cmp
cmpsb
out
mov
push
and
jns
jno
add
xor
push
sub
mov
pop
mov
fisttpll
jg
add
mov
mov
lods
mov
lea
mov
stc
push
shrl
xchg
test
lock
inc
hlt
dec
out
insb
enter
iret
mov
arpl
jl
nop
sahf
dec
sbb
lock
bound
enter
out
inc
xor
cmpsl
popf
arpl
repnz
out
in
hlt
lret
pushf
lods
imul
add
iret
jbe
out
shl
jne
cmp
sbb
pop
lock
sbb
test
jb
lcall
xchg
push
push
sub
test
repnz
mov
adc
or
int
jno
inc
ds
sub
rcrb
shll
and
pusha
add
clc
jp
xor
pop
loopne
push
inc
fistpll
mov
pop
int3
inc
incl
mov
xorl
mov
push
popf
in
add
stc
addl
sti
into
dec
out
cmp
mov
mov
and
pop
leave
adc
ds
imul
cmpps
cmp
xor
and
mov
fstps
test
push
sarl
inc
mov
nop
sbb
or
es
pusha
pusha
negb
insb
push
out
jb
das
es
mov
test
lahf
data16
rclb
out
or
mov
mov
push
rcrl
and
jbe
pushf
pusha
pop
outsl
in
pusha
sub
hlt
lret
out
push
out
add
movsl
pop
mov
test
insb
fistl
jo
out
ds
shlb
push
add
and
movsb
push
mov
repnz
test
xor
mov
push
cmpsb
mov
xor
out
inc
mov
fiaddl
je
sub
sbb
mov
enter
test
sbb
pop
in
mov
daa
scas
xchg
inc
ss
dec
fdivrl
inc
out
xor
mov
sahf
mov
popf
ret
les
pop
cmc
jno
gs
int
fmull
repz
cmpsb
sbb
mov
cmc
cmp
fildl
dec
cmp
mov
mov
ret
xor
cmpsb
push
xchg
pushl
cmp
cmp
std
pop
push
shlb
adc
aam
jns
lcall
test
jl
cmp
fadds
ja
into
push
outsl
jne
sbb
leavew
les
pop
je
push
ss
xor
cwtl
roll
push
xchg
scas
add
sub
xchg
pop
jb
lods
jnp
mov
aad
or
jnp
test
loope
pop
fmul
dec
pop
sbb
push
adc
imul
scas
std
xchg
int3
dec
lret
pop
adc
jns
mov
imulb
int3
test
mov
mov
xchg
ja
add
pushf
repnz
sub
xchg
sti
nop
pop
test
cmpsl
add
rorl
aas
pop
sbb
sbb
orb
ret
movswl
sub
sahf
out
cmpl
test
decl
cmp
sub
scas
lcall
push
adc
outsl
pop
lret
fildl
add
sbb
or
cli
pop
test
mov
lds
lds
test
push
loope
sbb
xchg
mov
sbb
pop
fisttpl
sub
jne
imul
push
xor
inc
ds
mov
mov
inc
imul
push
xor
nop
mov
jle
jecxz
push
xchg
cwtl
enter
xchg
movsb
lods
repz
daa
fwait
aam
xor
dec
cmc
adc
je
dec
int
test
pop
mov
push
fwait
call
inc
mov
add
sbb
leave
std
ja
mov
jge
sti
cld
dec
pop
fsts
rolb
out
mov
cwtl
mov
pop
fimuls
repnz
jg
jne
cltd
aam
out
add
pop
mov
xlat
sub
popa
mov
push
mov
add
inc
repz
dec
mov
scas
fnsave
add
push
dec
dec
mov
dec
in
jecxz
jecxz
mov
or
push
movsl
dec
push
rcll
sbb
paddq
in
inc
fsubr
fwait
popf
add
pop
decb
xor
adc
push
in
out
aad
testb
push
jecxz
idivb
and
jno
fs
adc
cld
mov
test
fisubrl
cmp
sub
outsb
pushf
stc
aad
dec
int
mov
inc
adc
xorl
mov
pop
ds
fcmovnu
and
shrl
jb
lcall
push
out
daa
inc
dec
inc
cmp
xchg
in
repnz
pop
popa
mov
xchg
repz
cmp
hlt
pop
jbe
sbb
in
testb
or
rcrl
cmp
mov
punpckldq
pop
jl
and
call
or
pop
jb
dec
rcr
jae
lock
add
xchg
in
fiadds
bound
cwtl
inc
xchg
arpl
stc
mov
jecxz
or
mov
incb
mov
mov
and
les
test
in
enter
cmc
add
xchg
scas
sbb
imul
xchg
inc
push
push
in
sti
sahf
cmpsl
cmp
mov
xor
fistpll
into
sti
and
aad
daa
inc
mov
inc
adc
dec
adc
shrb
mov
pop
inc
in
daa
push
shll
sub
cmp
in
pop
mov
aam
addr16
mov
mov
jp
jle
iret
or
jne
lods
or
adc
sbb
add
mov
stos
push
mov
xor
or
sarl
dec
xchg
sahf
pop
xchg
cli
ret
jge
hlt
imul
jno
xchg
cmp
popa
mov
clc
inc
xchg
mov
dec
ret
out
test
mov
adc
test
test
cmc
incb
lahf
pop
push
cmc
pop
test
and
div
push
arpl
ja
add
inc
xchg
add
pushf
add
ljmp
jns
or
test
out
test
jbe
mov
inc
cmp
push
stc
testl
sbb
ret
stc
xlat
sub
lds
test
lds
xchg
pop
mov
int
cmp
and
mov
pop
jns
pusha
adc
test
inc
ja
mov
and
fbld
lods
inc
imul
es
out
int
and
xlat
add
icebp
mov
icebp
rolb
in
inc
aaa
cmc
movq
jmp
add
pop
and
mov
jg
xor
and
inc
cli
lods
or
test
movsb
hlt
dec
push
jg
push
outsb
jle
jecxz
push
sub
push
cs
dec
xlat
test
enter
mov
negl
imul
insl
sbb
sahf
repnz
mov
iret
addb
psubsb
sub
add
fldt
filds
adc
xor
mov
cmp
or
orb
mov
imul
or
mov
mov
sbb
ja
pop
push
mov
pusha
fsts
bound
push
scas
mov
mov
fcoms
arpl
jnp
inc
sub
lret
or
push
jbe
repnz
js
and
aas
xchg
fs
jb
and
sbbb
xor
xchg
rorb
loopne
and
in
xchg
cmc
decl
inc
daa
pop
pop
sub
repnz
iret
test
and
mov
das
sub
inc
stc
mov
clc
cwtl
xor
mov
mov
push
sahf
or
rorl
das
nop
lahf
mov
xchg
out
out
add
scas
and
sti
lret
decl
leave
push
push
lock
lods
cli
shl
fiadds
pushf
jg
push
mov
mov
or
outsl
adc
loopne
sub
jg
insb
jo
arpl
imul
not
cmp
fdivrl
hlt
clc
ja
add
int3
test
stc
lcall
mov
jo
xchg
and
mov
or
jge
or
sbb
stc
cmp
std
mov
je
mov
add
adc
mov
mov
push
sub
or
sbb
adc
mov
divl
iret
push
in
fs
sbb
pop
push
mov
in
in
or
loope
es
adc
xor
xchg
jp
js
and
xor
xor
xchg
iret
je
inc
and
push
test
mov
repz
div
int3
jns
mov
addr16
mov
scas
adc
lret
lock
lcall
and
jb
dec
scas
popa
fildll
daa
les
mov
leave
mov
addr16
mov
insl
inc
enter
cmpsl
in
adc
fs
mov
jecxz
das
mov
rclb
out
lds
sub
mov
hlt
jl
addr16
xor
sub
test
imul
jb
shufps
icebp
sbb
into
push
xor
ret
fsubrl
mov
testb
add
lret
imul
js
in
push
adc
pop
clc
jbe
mov
lock
or
adc
jbe
push
lret
cmp
ret
mov
xor
mov
jecxz
jb
test
mov
addr16
jmp
pop
xor
ja
pusha
lahf
sub
stc
fcomps
xchg
or
dec
aas
add
ljmp
dec
lcall
cwtl
inc
and
in
add
fbld
shlb
les
or
sub
dec
and
inc
pusha
jp
cmp
dec
mov
sub
fdiv
inc
mov
test
and
adc
lcall
mov
les
data16
push
jae
clc
adc
cmp
add
jnp
out
lahf
scas
cmp
rcll
sub
cmp
ja
in
sbb
es
lods
orl
outsb
cmp
mov
add
jmp
movsb
daa
push
mov
push
cmp
cmp
xchg
xor
push
push
mov
cmp
int3
fs
sar
frstor
adc
sbb
mov
lods
cs
addr16
pop
leave
or
cmp
cs
xchg
sub
or
or
insl
insb
enter
xchg
out
mov
sahf
movsb
mov
out
dec
dec
aas
scas
xor
push
je
adc
inc
push
outsl
cmc
addr16
shll
arpl
outsl
xor
lret
sahf
cmp
shlb
mov
in
shrl
dec
popa
cmc
xchg
xor
dec
andb
mov
jbe
imulb
add
bnd
mov
pop
nop
ljmp
rorb
mov
aas
into
bnd
stos
push
fstl
pop
repz
mov
xchg
in
mov
inc
xlat
scas
fistl
add
and
stos
test
mov
sbb
lea
push
inc
push
cs
cmp
loopne
cld
out
daa
pop
jmp
iret
rclb
pop
lret
or
icebp
add
push
mov
mov
pop
lahf
popf
adc
dec
cmp
loop
in
push
jl
fcomip
xchg
insl
orb
icebp
mov
ja
leave
lret
mov
dec
nop
lods
mov
imul
xor
or
and
addr16
sbb
mov
sti
aas
xchg
pop
shlb
and
pushf
mov
jno
cld
repnz
movsl
out
dec
lret
negb
ror
push
add
jecxz
mov
adc
mov
cmp
xchg
mov
mov
imul
jnp
in
or
jle
pop
out
cwtl
pop
xchg
lods
orb
dec
mov
cwtl
sub
es
lods
pop
dec
cmp
inc
dec
and
in
loopne
cmp
add
jno
push
xchg
insl
test
sbb
push
sbbb
add
dec
fdivr
adc
push
nop
mov
lea
popa
dec
or
mov
imull
mov
lea
addr16
fwait
das
into
jo
negl
push
shr
out
inc
mov
test
movsl
push
sbb
adc
test
sahf
inc
jo
xor
stos
cmpsl
push
shlb
pop
pop
jmp
mov
fsts
fs
inc
xlat
clc
add
ret
into
int3
or
icebp
adc
int
aad
xchg
bound
in
lahf
in
xchg
push
inc
cmc
add
push
push
xchg
and
popa
pop
arpl
cmpxchg
add
shl
xchg
jns
fstl
cli
out
mov
int3
enter
sbb
subl
dec
cmp
in
xor
movsb
adc
push
sbb
sbb
mov
xchg
das
pop
mov
sbb
icebp
std
aad
mov
push
and
xor
sub
cmp
ret
test
clc
lea
add
mov
popf
fnstenv
adc
jo
pop
shl
sbb
sbb
xchg
xor
mov
rcrb
mov
sbb
xor
rcrl
sbb
lods
stc
dec
jg
aam
inc
lds
scas
jp
cmc
jns
inc
sbb
sub
mov
adc
dec
pop
fildll
rorl
dec
ss
popa
jae
pop
scas
mov
stos
pop
pop
ret
xchg
push
sbb
loop
out
xor
int
daa
mov
dec
xchg
test
jg
sahf
rclb
stos
popa
jae
je
xor
mov
into
daa
mov
sub
xor
sbb
out
lahf
les
xor
mov
push
pop
cwtd
js,pt
ss
loope
mov
popa
push
adc
inc
mov
aas
inc
jge
pop
sbb
lret
add
mov
stc
fs
xchg
adc
ja
lods
das
xor
push
sti
jle
jmp
pop
enter
add
movsb
push
add
add
repz
mov
xchg
inc
dec
shll
lret
fstl
mov
subl
ffree
arpl
mov
repz
inc
and
jecxz
pop
leave
out
insb
pop
shll
lret
mov
ss
pop
pushf
mov
jg
pop
mov
add
sbb
sti
scas
xchg
imul
cwtl
add
mov
out
dec
js
nop
hlt
mov
jbe,pt
jmp
imull
mov
inc
icebp
in
rorl
mov
jge
cmp
cmp
pusha
and
jo
repz
xor
or
add
pop
dec
mov
repz
jno
lahf
xor
or
les
xchg
mov
icebp
push
push
mov
fs
aad
mov
lret
adc
add
add
fdivs
pushf
cli
test
mov
mov
and
inc
sbb
cmp
mov
imul
jecxz
popa
adc
hlt
stc
movsl
andb
daa
inc
push
cmp
sti
jbe
cmpsb
fisttpl
push
xorl
pop
out
stos
jmp
push
sbb
pop
jg
mov
repnz
jp
loop
testb
lret
xchg
es
sbb
jbe
insb
stos
mov
lock
dec
adc
imul
jo
sti
hlt
jbe
dec
xchg
dec
pop
and
gs
mov
jbe
test
stos
dec
lods
cmp
fistl
push
gs
fsubrl
push
mov
lods
ljmp
mov
shrl
mov
dec
ret
das
or
push
cmp
icebp
jmp
sub
mov
cmpb
or
leave
out
pop
inc
lock
arpl
ljmp
cmpsl
adc
rclb
push
lahf
pop
adc
pushf
test
rcrb
mov
xor
push
pop
adc
lods
out
add
stc
lock
roll
sarl
imul
or
popa
pop
test
jmp
rcll
pop
lods
ds
xchg
leave
inc
sahf
sub
sub
add
pop
mov
repz
xlat
or
imul
subl
fcmovnu
scas
mov
jae
das
and
and
and
testl
lods
sbb
add
fdivrl
fsts
fcmovnu
stos
pop
xchg
mov
clc
fstl
xor
addr16
in
jae
jmp
inc
inc
xor
and
mov
dec
push
or
enter
jmp
rcrl
jecxz
negb
scas
ret
inc
jnp
sbb
inc
loop
test
ja
and
sti
xor
les
leave
mov
push
mov
notl
push
sarb
pusha
lret
push
jns
adc
cmpb
dec
lret
pusha
imul
addr16
lock
adc
add
inc
scas
es
fs
out
sbb
rclb
mov
mull
lahf
xchg
stos
or
mov
pause
iret
mov
mov
scas
dec
sub
cmp
or
sti
int
leave
daa
pop
cmp
adc
andl
pop
xor
jmp
fiaddl
mov
jge
sub
in
int
xor
mov
fld1
cwtl
pmulhw
mov
shrl
ss
dec
mov
addr16
loopne
cmp
pop
mov
xchg
mov
xchg
pop
fldt
cwtl
sub
pop
pop
pop
sbb
test
jle
xor
jnp
scas
mov
pop
mov
fwait
pop
ljmp
pop
push
mov
lret
ficoml
and
xchg
and
add
pop
adc
pop
cmp
and
sbb
add
jmp
sahf
cli
in
jmp
pop
testb
push
xchg
xchg
aas
cmp
adc
mov
addr16
cltd
test
add
adc
push
xsha1
cmpsb
push
insb
aam
cwtl
cmp
loopne
jmp
push
sub
and
rorb
outsb
cli
cli
andb
push
or
inc
xor
shrb
sub
aas
xchg
shll
and
mov
rcl
mov
arpl
mov
xchg
lahf
sbb
leave
jge
xor
popf
dec
dec
mov
jg
into
xchg
cmc
and
mov
das
loop
pop
push
pop
ret
loopne
xchg
dec
call
test
jbe
pop
cmp
mov
pop
ljmp
lahf
xor
pop
pop
sahf
jp
adc
mov
adc
nop
out
lods
push
sbb
lods
sub
jl
mov
mov
jbe
pushf
lds
cmp
adc
inc
subl
out
push
push
mov
rcr
fisubl
cmp
xor
lods
xor
outsb
mov
pop
sbb
jg
shll
mov
pop
out
mov
push
shlb
mov
cmpsl
in
mov
mov
cmova
cwtl
bound
xchg
aas
pop
cmpsl
inc
inc
pop
inc
or
mov
es
inc
pop
into
cmp
fiadds
ret
add
push
shll
or
sti
popf
jb
fistpll
repz
mov
sbb
sub
inc
insb
mov
push
add
cmp
push
or
adc
ret
inc
int
ret
outsl
xorb
iret
xchg
mov
int
popa
and
add
outsl
popf
test
lods
sub
incl
jno
cmpsb
mov
fstpl
js
mov
cs
jle
repz
lock
xchg
push
xchg
ret
jbe
jge
iret
mov
bound
adc
pusha
mov
fwait
pop
xchg
xor
fwait
js
lock
pop
and
repnz
rcr
add
lods
mov
or
dec
inc
fcompl
sbb
dec
mov
std
mov
sahf
or
inc
arpl
stos
mov
jl
jo
mov
and
push
mov
cmp
sub
push
stos
pop
es
mov
jbe
inc
xchg
cltd
icebp
xchg
and
or
jle
pop
fstpt
or
jl
int3
mov
imul
fnstcw
cli
into
lahf
sti
pop
dec
leave
leave
insb
xchg
sub
jl
fwait
push
pop
aam
int
xchg
and
adc
imul
xor
and
xchg
mov
mov
rcll
sub
mov
cmp
mov
push
push
movl
test
sahf
pop
mov
leave
cmp
cmp
repnz
insl
xchg
rcll
mov
pop
inc
cmp
inc
cs
mov
adc
mov
mov
sub
es
pop
aam
pop
ror
loopne
jnp
cmp
jb
iret
fistl
and
das
jnp
cltd
mov
pop
scas
cmp
js
cmpsb
jp
ss
loope
pop
push
xchg
push
ljmp
mulb
cmpl
or
pop
roll
add
push
adc
jg
adc
inc
jns
call
mov
mov
add
mov
jl
cmpb
mov
iret
jns
or
adc
push
add
sti
loopne
mov
stos
inc
mov
into
inc
jo
dec
xor
push
into
in
sbb
mov
push
les
inc
mov
pop
xor
in
xor
sub
mov
add
iret
xchg
sub
inc
or
test
mov
cmp
out
pop
pop
repnz
sub
add
xchg
dec
push
inc
mov
push
scas
fwait
inc
or
movsb
adc
inc
dec
outsl
push
jns
and
ljmp
lret
sub
mov
xlat
pop
and
enter
nop
arpl
xchg
fstps
push
mov
lock
call
dec
push
pushf
pop
xchg
rol
adc
movsl
or
add
jg
aas
test
cld
or
std
xor
pop
arpl
frstor
popf
inc
inc
rcrb
jge
xchg
sbb
pop
ja
lret
rcrl
jb
mov
xchg
xchg
xor
out
mov
sahf
mov
aam
or
cmp
cli
inc
js
or
aas
inc
mov
movsb
stc
fiaddl
cwtl
jp
insb
mov
push
inc
outsl
lods
xor
ret
int3
or
or
adc
lcall
sub
in
decl
lds
cld
ds
push
jg
cmc
adc
jecxz
lds
adc
hlt
push
rorb
jmp
sub
test
fnsave
popw
jmp
sbb
push
cmp
sub
push
sbb
jne
sbb
aaa
fsubp
lods
lret
mov
add
cmp
outsl
or
adc
je
ret
and
or
adc
push
out
inc
das
out
push
rcll
sti
lahf
mov
int3
std
sar
cmp
paddd
inc
fcoms
pop
push
dec
mov
movsb
cmc
and
push
cmc
pop
mov
xor
fnstcw
ja
or
and
and
jmp
les
ret
loopne
test
bound
add
mov
inc
inc
addr16
lahf
iret
scas
cmp
cmpsl
ljmp
outsl
outsl
lods
loop
popa
or
or
dec
fidivs
adc
adc
into
pusha
cli
and
int3
lods
dec
mov
mov
testl
in
mov
xchg
adc
xorl
adc
mov
push
pop
stos
sub
pop
and
mov
add
inc
lcall
and
mov
mov
cmpsb
sub
xor
decb
lods
cmp
adc
in
pop
mov
jns
insb
mov
rcrl
push
mov
mov
dec
jns
lods
insl
imul
pop
pusha
movsb
ds
clc
dec
es
xor
insb
in
push
jbe
jmp
test
dec
das
xor
jge
push
int
rcrl
and
es
xchg
sub
arpl
enter
inc
scas
out
insl
mov
call
aas
or
lret
in
aam
fmul
hlt
popf
ljmp
rclb
in
add
push
mov
jne
mov
in
and
or
stos
ficompl
mov
push
mov
mov
mov
sbb
mov
mov
xchg
xchg
std
xor
add
or
inc
repnz
les
pop
sti
jmp
adc
jbe
push
pop
and
mov
dec
and
inc
es
push
dec
jae
mov
pushf
fistpll
sub
mov
aaa
dec
sahf
movsl
jecxz
mov
xor
arpl
mov
adc
das
mov
das
stos
ret
and
pop
adc
cmpsl
push
notl
mov
adc
and
ficompl
sbb
jbe
adc
out
pop
mov
add
cmpb
push
movl
jb
rdtsc
hlt
les
popf
push
sub
rorb
add
fwait
sub
stc
sub
and
shl
aam
test
sahf
jg
sarl
sbb
inc
push
cmp
loop
adc
jb
mov
mov
pusha
sub
inc
into
rolb
fstps
xlat
mov
sahf
adc
pop
mov
and
leave
pop
cld
rclb
mov
mov
pop
nop
cmc
stos
push
xlat
mov
mov
loopne
notl
push
ret
scas
ss
xorb
and
xor
stc
cmp
stc
clc
adc
sub
push
ror
mov
push
std
stc
ljmp
cli
icebp
cld
pop
icebp
pop
pop
fmull
pop
push
xchg
sbb
mov
stos
test
or
jb
push
mov
add
insb
shlb
jbe
push
push
sar
jns
cld
add
stos
adc
leave
mov
pop
int3
sbb
sub
mov
pop
sbb
in
stos
jle
push
mov
mov
sbb
dec
lods
or
movsl
f2xm1
inc
mov
push
and
repnz
adc
mov
push
cltd
mov
pop
popa
fsubr
jb
into
push
mov
fbld
fwait
jmp
sub
dec
imul
ja
xlat
arpl
xor
xor
sub
pusha
dec
push
nop
repz
jae
add
gs
cli
int
cltd
mov
ja
adc
daa
insl
mov
add
fldlg2
les
sti
rolb
xchg
sub
mov
jge
mov
rolb
sub
aad
jno
push
lret
push
lret
adc
into
mov
aas
lea
lods
or
enter
sbb
inc
xlat
pop
or
loope
js
out
bound
xchg
mov
and
xchg
mov
sbb
pop
adc
push
push
push
gs
cltd
sarl
jmp
mov
sbb
loope
push
add
ss
insb
sti
xchg
cmp
fdivs
sub
add
cmp
pop
push
sbb
sbb
mov
add
sub
inc
and
ret
jp
pop
aam
mov
shll
and
inc
xchg
aaa
nop
int
pop
mov
cmp
adc
aas
cs
test
shlb
pop
push
mov
sub
idivl
mov
pop
jns
mov
dec
aas
mov
add
add
mov
mov
adc
pop
push
push
mov
nop
mov
xchg
rclb
sbb
outsl
outsl
push
sbb
es
mov
dec
test
js
iret
inc
xchg
xor
imul
cmc
mov
xor
cmp
cmp
in
jo
push
sbb
call
inc
adcb
jne
cmp
dec
iret
lahf
push
push
rcrb
cld
retw
xor
pop
adc
pop
stos
and
jle
push
js
jp
cwtl
into
xchg
push
cmc
inc
fwait
cltd
icebp
xchg
out
addb
jno
pop
sub
and
mov
movsl
adc
sarl
pop
jg
push
sub
sub
in
inc
rcr
call
inc
ss
in
xchg
insb
testl
and
pop
nop
lods
sub
movsb
and
shll
push
add
push
adcl
orl
inc
inc
out
mov
std
out
sarl
jle
scas
mov
rorb
dec
push
aad
pop
das
insl
dec
sub
jmp
test
lea
test
test
sbb
int
popa
repnz
mov
xchg
xchg
adc
pusha
add
jp
jecxz
jnp
push
in
inc
divl
cmp
imul
sub
mov
stc
pop
mov
rcrb
in
fwait
jns
and
mov
push
out
xchg
mov
daa
incl
mov
cmp
inc
add
jecxz
sbb
int
scas
cli
pop
ljmp
xchg
int3
subl
add
enter
jns
dec
xor
hlt
test
mov
add
dec
xchg
lcall
and
decl
test
pop
icebp
rcrb
aam
and
sbb
pop
lret
jns
add
ljmp
inc
pop
mov
adc
pushf
xor
cwtl
cwtl
xor
sub
add
dec
imul
mov
cmp
add
mov
out
out
xchg
mov
std
data16
jge
dec
movsb
pushf
dec
mov
test
mov
ss
test
iret
out
mov
or
mov
js
test
sbb
mov
xor
adc
or
mov
lods
hlt
mov
pop
lock
loopne
test
jbe
push
outsl
outsl
push
lcall
cmp
xor
das
mov
fsubs
xchg
cltd
and
lret
jnp
mov
and
stos
inc
das
or
and
cmpsl
stc
outsl
shll
and
fs
rolb
int
enter
pop
loopne
adc
gs
mov
sti
into
cs
add
pop
push
hlt
fcmovb
adc
bound
cmc
sub
pop
inc
xchg
mov
sub
push
icebp
sbb
and
inc
clc
sti
xchg
jl
pop
inc
rorb
stc
loope
js
lret
imul
mov
in
daa
orl
leave
jne
cmp
pop
sahf
mov
inc
and
xchg
je
push
push
rcl
repnz
mov
popl
mov
movsl
and
xchg
mov
icebp
lret
pop
push
dec
arpl
jae
in
stc
sbb
sar
cwtl
pop
pop
inc
mov
adcb
sub
in
in
hlt
mov
inc
negl
fwait
lret
rclb
out
mov
outsb
adc
jle
xchg
sbb
dec
dec
inc
out
repnz
das
jle
adc
mov
sbb
ljmp
aaa
ret
outsb
dec
xchg
adc
js
hlt
filds
jo
mov
pop
addb
or
xchg
cmp
cmpsb
sbb
sub
mov
icebp
scas
movsb
aam
leave
insb
stos
push
cmp
mov
cmpsb
pusha
add
clc
jmp
lcall
sar
mov
sbb
imul
movsb
shrb
sbb
out
push
add
ret
out
or
xor
jno
mov
or
or
or
mov
add
jns
cs
test
xchg
mov
nop
sub
jl
bound
inc
std
and
add
push
sbb
mov
outsl
pop
pushf
outsl
pop
and
or
xor
adc
xor
scas
xor
mov
mov
loope
dec
push
push
or
out
cld
mov
fxtract
cmp
clc
ficoml
dec
lret
and
inc
aam
jbe
int
pminub
sub
or
xor
jb
cmp
cmp
pusha
call
mov
loop
enter
mov
mov
loopne
cmp
lods
sbb
test
pop
cmpb
jo
ret
mov
out
and
fsts
sub
insl
incb
mov
clc
or
jnp
in
or
or
daa
ja
movl
adc
inc
sub
push
repnz
xchg
in
cmp
cmpsb
xor
jo
nop
stos
pop
mov
test
pop
cmp
rcll
push
jg
outsl
out
fs
aad
imul
sarl
scas
jl
pop
lsl
mov
mov
lahf
xchg
pop
xchg
xor
push
jno
into
scas
fistpl
idivl
mov
add
lock
and
fstpl
mov
rorl
enter
out
jecxz
cs
xchg
negl
pop
inc
hlt
mov
adc
stos
jg
or
scas
pmullw
icebp
rolb
xchg
add
xor
decl
out
pop
fcomp
sub
sbb
lret
hlt
xlat
jmp
in
mov
xor
mov
cwtl
and
sub
fistl
int3
into
pop
mov
or
xchg
scas
jl
dec
aad
addl
adc
sub
iret
stos
mov
mov
dec
fistpl
push
fcom
ja
cmpsb
jge
xor
push
pop
cs
into
daa
rcll
and
fs
push
add
mov
scas
xchg
jge
or
xchg
cmp
ds
xlat
movsl
dec
lret
nop
push
xor
or
dec
inc
stc
adc
pop
fldl
dec
pop
in
out
stos
mov
hlt
mov
out
cwtl
cmp
lds
add
and
pop
fmull
test
insl
dec
lds
pop
pop
or
fwait
pop
xor
pop
lock
cmp
mov
repz
and
dec
or
nop
sti
push
pop
fistl
bnd
repnz
repnz
xchg
xchg
and
push
mov
je
push
inc
add
push
xchg
mov
enter
or
mov
hlt
bound
sub
ret
imull
cmc
into
icebp
mov
daa
or
insb
jp
enter
ret
cwtl
mov
mov
rorb
lods
push
clc
jg
pop
push
loopne
jbe
outsb
jmp
hlt
push
idiv
shrb
pop
imul
push
in
inc
ficoms
mov
fisttpll
sbb
and
and
in
push
insl
in
jno
lret
push
adc
nop
ret
or
adc
call
imul
movsb
sbb
xor
xchg
mov
mov
xchg
mull
lea
mov
ficoms
sub
push
aas
push
loop
jge
mov
push
sub
mov
adc
filds
xor
cld
fcompl
stc
nop
loopne
or
test
dec
pop
pop
inc
hlt
mov
jmp
mov
dec
loop
mov
add
shll
mov
adc
mov
outsb
pop
cmp
dec
inc
rorb
rorl
shll
faddl
xchg
pop
mov
outsl
dec
cwtl
fistpll
ret
pop
dec
data16
fdivs
mov
call
and
push
add
mov
pop
mov
cmc
cwtl
ret
pop
ficoml
jne
jnp
jns
adc
jnp
add
rcr
jp
fldenv
cmp
jle
inc
hlt
push
pushf
xor
push
cli
mov
push
or
dec
loope
clc
pop
mov
fs
sub
xor
into
divb
pop
stos
sub
dec
jg
fst
mov
popa
sahf
bswap
lret
lods
sub
gs
pop
daa
mov
pop
lea
insl
jge
sbb
sbb
out
and
loope
jecxz
hlt
inc
sbb
jbe
lret
push
orb
pop
xor
pop
mov
aaa
mov
and
pusha
or
xor
push
loop
jp
flds
shl
lret
cmp
sbbl
test
xor
insl
mov
lcall
lods
fs
arpl
imul
pop
xchg
fcomps
and
decl
xchg
mov
cltd
jle
mov
mov
aaa
mov
mov
or
lahf
outsb
fstpl
push
mulb
mov
mov
xor
dec
mov
pusha
jo
stos
and
cmp
mov
jbe
pop
mov
mov
sahf
pop
sub
arpl
xor
popa
adc
adcb
sar
daa
pop
dec
cmp
xchg
sahf
cwtd
sbb
mov
lock
in
mov
or
dec
pushf
imul
xchg
push
sub
jne
daa
or
mov
in
xchg
xchg
add
xchg
hlt
pop
andb
xor
movsl
fnstsw
lods
sub
jb
or
adc
mov
mov
decl
mov
add
add
repz
mov
and
je
pop
fsubr
push
or
outsb
adc
sarb
mov
dec
lods
xchg
adc
test
test
jne
roll
js
jbe
inc
pop
cmp
push
popf
fisttpll
sbb
pushf
aam
xor
push
lods
in
pop
adc
aas
or
mov
jbe
dec
mov
gs
jp
into
clc
stos
icebp
mov
sbb
loop
push
ljmp
lahf
or
into
push
mov
and
aas
fcomps
mov
cmpsl
or
jb
out
insb
dec
adc
sbb
fdivrp
jns
ss
mov
mov
xchg
ret
dec
ja
popf
mov
add
adc
jo
sti
sbb
test
inc
cmpsb
push
and
sbb
xchg
dec
insl
cmp
shll
lds
fldl
push
mull
jmp
xor
enter
fsubrs
fcomps
rol
iret
inc
mov
lods
jle
rolb
sarl
mov
jns,pt
cmp
dec
mov
adc
jge
mov
rorb
scas
hlt
pop
add
in
sub
add
dec
out
cmp
cs
adc
adc
mov
jle
mov
xchg
xor
cmp
push
sub
cld
in
divl
scas
pop
dec
pushf
in
stc
daa
mov
outsl
pop
loope
xor
std
out
sub
test
add
cmp
pop
mov
dec
sbb
and
in
inc
or
xchg
lea
test
dec
lret
arpl
mov
lcall
icebp
test
imul
jecxz
ret
in
jmp
cmp
out
lahf
adc
daa
lock
fmull
pop
or
out
inc
mov
sub
cmp
or
jmp
jno
ljmp
ljmp
hlt
pop
out
mov
or
pop
fmull
pop
ficoml
dec
insb
hlt
pop
sbb
inc
add
cmp
dec
fstp
xchg
inc
dec
mov
scas
in
inc
cmp
mov
and
mov
cmc
and
lods
pop
xchg
pop
mov
xchg
jae
addr16
clc
lock
insl
hlt
out
jbe
cmp
adc
ja
mov
mov
xchg
fildl
roll
add
sbb
test
xor
dec
loopne
jge
jg
xlat
out
movsb
ret
add
xchg
xor
mov
xor
insb
jbe
cmp
fsubrs
xlat
jne
pop
jb
ds
mov
cs
shll
int
shll
push
push
flds
dec
incl
enter
inc
popf
mov
packssdw
push
lret
sbb
fnop
inc
mov
mov
lret
push
xor
add
pop
stos
or
ret
add
pop
jb
jb
dec
mov
sbb
xchg
lods
xor
data16
mov
sbb
mov
imul
cmp
jb
sarb
outsb
cmp
sar
mov
out
adc
add
mov
stc
mov
bound
shlb
and
push
sbb
notl
cld
inc
mov
jno
aad
ljmp
ds
mov
rol
push
xor
mov
addr16
pop
and
pop
shl
in
mov
adc
mov
lea
stos
xchg
xor
push
fadds
outsb
mov
lret
cmp
orl
mov
and
sub
sbb
adc
mov
das
adc
outsl
in
lds
sub
mov
testl
in
mov
mov
and
add
dec
jg
jne
adc
pop
adc
test
test
jne
xchg
stos
pop
test
mov
xor
test
mov
xor
cmpsl
sbb
aas
and
xchg
mov
es
xchg
test
cmp
repnz
shr
cmc
or
data16
repz
lahf
pop
in
js
repnz
jae
fs
jp
sahf
es
jl
loope
xchg
jno
add
adc
aaa
lods
cmc
add
xchg
cmp
pushf
sub
inc
lcall
lods
sub
stc
lea
fsubrl
jle
imul
cmpsl
daa
ss
mov
jae
mov
fldcw
repz
xlat
fdivp
jo
sub
insl
repz
ficompl
mov
or
test
call
or
cli
dec
sub
aas
mov
pusha
stos
cltd
sti
cmpl
cmp
addr16
pop
inc
jecxz
aaa
hlt
ficomps
out
les
rcll
jecxz
cs
cmp
imul
mov
or
inc
xor
cwtl
cmp
mov
pop
xchg
and
mov
push
push
and
hlt
xchg
outsb
aas
movsl
inc
stos
dec
sbb
mov
or
insb
push
push
xlat
lahf
push
cmp
in
call
loope
mov
push
add
inc
inc
jg
mov
xor
xor
pop
xor
dec
xor
jp
dec
jmp
repz
push
push
push
enter
or
mov
fistps
rorl
mov
cmpsl
in
int3
pop
mov
outsl
pop
dec
pop
xor
notl
iret
sbb
js
sub
cmp
repz
adc
and
stc
mov
jecxz
xchg
repz
mov
in
sub
loopne
mov
es
mov
or
test
xchg
sbb
movsl
xchg
xor
imul
add
sbb
and
inc
dec
pop
outsl
in
test
push
arpl
loopne
loope
and
push
loop
std
scas
leave
push
lret
mov
cmp
dec
pop
arpl
sbb
ret
lods
push
inc
jg
push
lret
mov
push
rol
xchg
xchg
push
popa
jo
sbb
cli
mov
popa
lods
negl
pop
insb
lods
add
sub
movsb
adc
lds
mov
lods
leave
shr
stos
xchg
arpl
fidivl
int
aaa
push
mull
sub
test
sbb
xor
cli
pop
sbb
hlt
push
lods
and
ficoml
movsl
adc
mov
or
mov
scas
sub
stos
pop
lods
mov
les
inc
fsubrs
sub
xor
fs
or
in
cmpsb
mov
movsb
shl
cli
or
push
ds
test
les
dec
fs
fcompl
int3
fmull
icebp
pop
lock
jle
add
cmp
jg
sub
cmp
enter
arpl
addr16
scas
lret
addb
int3
inc
stc
cmp
add
fdivrl
hlt
aaa
out
cmp
int3
stos
or
cltd
sar
movsl
xchg
mov
loop
ljmp
mov
fmuls
inc
jns
outsb
or
testl
les
and
mov
ds
jns
push
dec
int
scas
loopne
and
pusha
shl
testb
xchg
rcrl
push
ljmp
insl
bound
fpatan
push
lahf
xchg
jmp
dec
jno
pop
cmpsb
xor
inc
sti
insl
jmp
lods
dec
dec
add
dec
punpcklwd
rcll
pop
scas
fcmovnu
pop
push
mov
xchg
sbb
fildl
xchg
les
inc
jo
out
cs
pop
or
dec
cwtl
popf
fs
push
push
adcb
es
cmp
arpl
lea
bnd
pop
fwait
mov
stos
addb
xchg
jae
cmpsb
add
sbb
dec
out
lret
add
cmc
cwtl
xchg
cmpsl
and
test
sub
and
ja
dec
mov
das
jns
inc
pop
mov
outsb
or
adc
shlb
sbb
cltd
mov
enter
int
jb
out
pop
push
mov
insb
test
mov
aaa
les
add
scas
sub
sbb
std
int3
enter
cmp
or
je
push
out
and
ljmp
xchg
mov
xor
jmp
arpl
cmc
add
sub
dec
xlat
stos
pop
in
rorl
andb
andl
mov
pop
int3
inc
int
dec
int3
sbb
orb
test
bound
inc
or
int
stos
adc
aad
cmp
xchg
cmp
and
sub
in
test
pop
je
xorl
testb
mov
loope
mov
push
fwait
in
mov
jl
and
iret
mov
xor
inc
int3
test
add
in
push
lods
sub
imul
dec
mov
int3
aam
jne
pop
mov
mov
pop
cld
push
icebp
sbb
dec
jae
xlat
fisttpl
add
jp
xchg
pop
pop
out
push
loop
mov
jnp
shr
add
je
and
inc
out
addr16
cli
in
pop
stc
daa
test
sub
es
sahf
mov
ss
fiadds
pushf
mov
ljmp
data16
out
sub
adc
fmull
sbb
je
lock
decl
push
and
insl
jg
xchg
in
popa
out
add
lods
and
or
cs
add
jmp
mov
and
jp
adc
push
scas
es
xor
jne
out
adc
mov
jl
stos
adc
popf
in
jg
fbld
cmp
scas
mov
in
mov
sub
and
push
and
int
loopne
cmp
dec
jmp
add
test
xor
push
push
sbb
xor
lock
imul
or
xchg
jo
jnp
sub
pusha
push
andl
sub
in
jle
lea
addr16
mov
lock
mov
adc
dec
ljmp
push
inc
xor
pop
xor
iret
dec
jecxz
inc
adc
imul
mov
xor
sti
or
or
cmpsl
push
lahf
mov
enter
pushl
adc
push
test
stos
adc
orl
fnstenv
inc
jmp
fs
orb
arpl
pop
test
data16
pop
repz
xchg
xchg
outsb
pop
pop
and
leave
push
jle
pop
enter
cmp
popf
cwtl
subb
aad
sbb
fwait
out
cmc
sub
push
and
stos
or
xor
pop
dec
lret
jge
mov
cmp
orl
in
popf
pop
ja
les
fidivrs
sarb
enter
mov
cmp
xchg
in
mov
mov
xchg
shlb
stos
ret
daa
or
orb
cmp
push
das
mov
movsl
aam
adc
jle
insb
jns
and
mov
outsb
and
pop
mov
add
pop
sarb
cs
ja
or
mov
sub
dec
rolb
andb
in
pop
loop
enter
das
data16
inc
test
ds
scas
jge
aas
push
lds
push
hlt
sahf
lahf
dec
xchg
inc
push
adc
mov
fmulp
push
mov
int
cmp
enter
aam
shl
push
cmpsb
in
and
aad
aam
das
pushl
lret
jle
cmpsb
mov
cmpsl
dec
and
adc
fistps
pop
arpl
lret
pop
adc
cld
xchg
ljmp
pop
movsl
dec
ljmp
jns
ds
inc
pop
int3
and
in
lods
xchg
jne
mov
cli
inc
lods
pop
in
xchg
sbb
sub
mov
pop
int
adc
push
add
jnp
and
push
cs
ja
mov
mov
outsb
std
push
mov
fmul
cmpsb
mov
jno
add
mov
fcoms
push
mov
data16
xchg
psubusb
mov
push
push
adc
pushf
push
aad
mov
cltd
mov
cmp
mov
add
dec
idivw
jae
add
jp
bound
jge
or
lds
dec
cld
leave
aaa
orl
pop
pop
icebp
enter
xchg
rorl
repnz
stos
xchg
adcb
cmp
and
jno
mov
scas
movsl
fistpll
pusha
inc
pop
das
mov
lret
inc
loopne
mov
mov
cmp
in
adc
mov
lret
cwtl
jp
push
das
call
sub
mov
dec
fs
cmp
lods
push
out
notl
push
sub
test
inc
lds
je
jb
in
sub
xchg
sarl
dec
or
test
sub
adc
push
mov
inc
mov
imul
sub
xchg
inc
cwtl
lock
push
dec
push
jge
fcomps
mov
push
adc
xlat
sub
push
fisttps
mov
jo
roll
ds
adc
push
sub
jb
test
lock
outsl
dec
dec
jle
or
mov
enter
in
cwtl
lds
xor
dec
xchg
mov
mov
mov
movd
pop
xor
insb
xor
dec
insb
sub
adc
pop
jmp
fdivs
add
cmpsb
mov
add
js
test
or
push
mov
aas
pop
and
in
mov
and
inc
mov
je
cltd
or
adc
daa
popa
loop
dec
mov
cmp
jbe
sbb
mov
jl
and
jb
push
loop
lret
push
cmp
add
inc
iret
xor
addb
aaa
rolb
or
scas
cmp
ss
push
xchg
jne
jl
stos
dec
int3
adc
aad
xor
aam
or
jne
das
and
fistl
push
xor
out
popa
test
call
push
adc
aas
add
enter
enter
fstpt
pop
in
es
mov
sub
pusha
or
sub
aad
and
sub
lahf
push
imul
push
push
popa
shr
shll
cmpsb
shlb
fcoml
aaa
test
xorb
cmp
fcmovnb
or
and
sti
repz
adc
jge
pop
es
or
bound
xor
adc
iret
mov
scas
ffree
sbb
fisttpll
pop
sub
daa
lock
xor
cmpb
or
int
hlt
repnz
ret
add
push
inc
push
and
xchg
pop
loop
and
jmp
int3
fs
js
nop
loopne
cmp
mov
das
gs
sub
outsl
insb
xlat
push
imul
push
jmp
int
das
push
lea
push
mov
lea
subl
js
je
stos
test
fcomi
jg
lods
pop
ljmp
pop
in
pop
push
inc
cli
test
jne
pop
movsl
pop
mov
test
in
and
dec
jae
out
lds
inc
lahf
mov
fucom
add
lahf
pop
dec
cmp
fsubrl
or
xchg
lcall
jl
lods
inc
mov
arpl
fdivrs
mov
sbb
gs
add
insb
out
fwait
adc
fsubrl
push
test
std
mov
movsl
test
popf
xchg
cmp
adc
mov
mov
shl
pop
push
pop
or
popf
rol
sahf
imulb
sub
lds
imul
lcall
jmp
cli
sarl
and
pop
mov
sbb
sahf
push
mov
int3
mov
mov
add
mov
xchg
call
inc
jns
adc
push
mov
test
movsl
sbb
jp
mov
push
push
inc
mov
jmp
insb
mov
incl
pop
cltd
mov
xchg
lret
dec
das
mov
mul
mov
imul
jp
int
lock
insl
int
jle
ret
xchg
dec
inc
mov
jp
xchg
xor
leave
aad
pop
orb
fldcw
shll
cmp
push
sti
jge
rol
test
pop
call
cmp
or
in
scas
dec
jns,pt
dec
rolb
push
enter
jb
mov
adc
enter
fmul
or
and
adc
inc
xchg
push
sahf
push
data16
pusha
pop
je
leave
scas
or
pop
cs
jl
pop
mov
repnz
mov
add
dec
xchg
fs
cwtl
mov
fidivrs
sbb
xor
jnp
cmpsl
mov
or
je
jns
or
js
dec
cld
and
shrl
xor
mov
add
rorl
nop
fs
fidivl
jecxz
in
incl
push
xchg
xchg
push
bound
imul
jo
add
js
negl
xor
dec
lock
les
mov
push
int
leave
sahf
pop
jae
out
and
das
dec
adc
push
xchg
fsubs
mov
jp
sub
out
daa
push
mov
ficoms
rcrl
sub
mov
lods
pusha
inc
xchg
sbb
push
cmc
jle
add
pop
fnsave
sub
push
push
rolb
jbe
dec
dec
lcall
cmp
sti
adc
jl
push
fadds
rorb
inc
loope
jae
enter
lods
jne
add
std
rcll
and
mov
pop
faddl
xlat
and
setbe
add
icebp
push
push
int
out
push
sbb
test
loope
sbbb
adc
sbb
jno
movsl
jp
js
pop
dec
mov
push
xor
fwait
sti
ss
pop
jne
pop
mov
iret
bound
jp
popf
or
mov
adc
jmp
dec
cmp
xchg
fldt
xchg
and
into
pop
or
pop
jge
adc
sbb
test
notl
sahf
mov
ss
adc
and
out
sbb
pop
add
cli
out
lds
inc
mov
adc
inc
inc
repnz
cmpsl
inc
xchg
sub
out
pop
loop
dec
int3
test
dec
inc
fisttps
out
dec
stos
mov
out
icebp
mov
sbb
push
mov
pop
into
add
inc
fstpt
pushf
sbb
fwait
aad
out
jecxz
insl
nop
cwtl
mov
arpl
jbe
stc
int
pop
dec
jno
cmpb
dec
shll
ja
cmpsb
mov
or
mov
push
popa
jne
jge
pushf
inc
push
jns,pt
out
gs
insb
sahf
sti
add
popf
or
xchg
out
ficoml
lret
inc
xor
dec
sub
outsl
dec
repnz
cmp
loope
sbb
mov
loop
cmp
sbb
sbb
or
xchg
and
mov
xor
arpl
psubusw
mov
sbb
arpl
sbb
and
imul
xchg
sbb
clc
pushf
stos
adc
stos
divb
imul
ret
cmp
sbb
test
or
dec
ja
push
iret
inc
call
sub
cmp
mov
popf
in
sbb
cmp
pop
mov
mov
stc
dec
sub
cmpl
loopne
popa
xchg
and
sbb
mov
incb
mov
fmuls
cltd
jmp
lret
and
jmp
mov
jo
and
cltd
pop
xor
xor
sahf
std
lret
add
xchg
scas
mov
inc
enter
pop
cs
push
pop
and
dec
pop
push
jb
sub
inc
and
hlt
pop
and
jb
xchg
bound
push
adc
mov
outsl
dec
jge
xchg
or
or
je
pop
imulb
call
adc
insl
add
push
mov
jl
pushf
insb
or
loope
jb
inc
xchg
popa
fidivs
xor
jo
into
and
add
mov
jge
lea
cmp
fsts
dec
lea
mov
shrb
xor
pop
adc
scas
in
dec
or
in
aaa
push
out
sbb
gs
cmp
cwtl
cs
dec
outsb
stos
cmc
adc
cmp
fdiv
push
in
fs
mov
lods
adc
sub
or
push
mov
fidivl
lods
sbb
pop
cmp
movsb
insl
sub
shll
xchg
iret
ss
pushf
inc
push
jne
and
xor
mov
testl
test
imul
aad
pop
push
mov
inc
pop
test
iret
cmpsl
fsubr
sahf
adc
fs
or
icebp
sbb
das
mov
adc
pushf
dec
punpckhwd
cmp
sbb
dec
cwtl
icebp
int3
xor
iret
push
add
ds
pop
das
cli
jno
outsl
das
jae
popf
inc
out
negl
faddp
fldenv
lods
mov
push
cwtl
in
fcomp
imul
lds
or
mov
jns
lret
fucom
jno
xor
sahf
pop
je
inc
cmp
sub
mov
or
fistl
mov
daa
dec
outsb
cmp
sbb
dec
adc
push
pop
cmpsl
jbe
jp
sbb
fcoml
mov
and
mov
rcr
inc
mov
out
or
cs
roll
jns
and
or
push
and
mov
cmp
adc
inc
in
mov
sbb
xor
scas
dec
xor
or
add
adc
sahf
pop
stos
or
test
fnstenv
int3
mov
xor
xlat
xor
sbb
in
stos
cmp
mov
mov
addr16
mov
fsubrl
aas
pop
mov
or
scas
jge
in
sub
cmpsl
pop
in
test
push
jg
call
cmp
xchg
pop
jmp
icebp
jmp
std
call
jno
jecxz
les
mov
mov
pop
orl
sbb
lods
fs
jg
inc
das
test
mov
xchg
mov
lcall
xlat
add
xor
mov
pop
mov
loopne
cli
mov
out
pop
repz
call
cmpsb
mov
mov
sbb
rcl
and
inc
subb
cs
jecxz
dec
js
dec
repz
fldl
push
or
cmp
xchg
push
pop
adc
cmp
jnp
in
shrb
stos
pop
aad
inc
movb
jns
lcall
sarb
sti
inc
jg
jl
mov
lock
cmp
jmp
dec
outsb
adc
popa
sub
xchg
int
test
push
movsb
ficoml
popa
lods
or
push
ss
movsb
aad
hlt
jbe
lods
push
out
pop
insl
and
xchg
cmp
push
adc
sbb
or
sub
lds
mov
mov
mov
xor
cmpl
sub
enter
mov
loopne
imul
xor
nop
ds
adc
outsl
pop
dec
jmp
dec
pop
xchg
clc
popa
mov
push
jecxz
sbb
sub
ret
mov
push
or
lods
mov
push
sub
push
push
ljmp
imul
sub
sub
push
inc
loop
push
idiv
inc
inc
push
arpl
cli
pop
jmp
or
xchg
xchg
pop
and
jo
jg
rcrb
decb
push
mov
cltd
sarb
movsb
jecxz
or
mov
jnp
inc
cwtl
data16
mov
fcmovnb
mov
pop
test
test
popa
pop
in
mov
bound
adc
sbb
in
pushf
push
mov
bsr
pop
pop
add
sub
stc
pop
sbb
das
lahf
leave
mov
int
jl
push
xchg
fdivr
aas
xchg
ja
sub
in
sbb
lods
xor
iret
or
ror
push
xor
aad
add
adc
adc
add
and
sahf
or
sbb
cld
rorl
inc
movl
jecxz
lret
jp
mov
mov
fdivs
mov
mov
fisttps
mov
jp
inc
cmpsb
mov
hlt
in
test
les
and
jmp
xchg
lahf
push
xor
je
dec
insb
inc
xor
pop
mov
inc
bound
out
fdivs
jns
ljmp
loope
clc
pushf
xor
sbb
mov
and
stc
xor
xor
in
xchg
xor
js
pop
lods
loopne
adc
ja
dec
sub
lods
push
stos
push
jmp
and
sahf
mov
push
mov
sbb
or
mov
or
mov
scas
imul
into
pop
mov
mov
inc
inc
outsb
jne
jge
and
cmp
or
sbb
in
inc
jmp
jne
mov
mov
mov
imul
mov
push
jecxz
das
cmp
push
cmp
jb
aas
pop
cmc
aam
insl
add
cmc
pop
pop
adc
sbb
das
xchg
mov
sbb
xor
incb
int3
loop
loope
clc
cmpsb
pushf
mov
xor
cmpsb
outsb
fiadds
mov
std
cmc
aam
push
add
int3
loop
test
outsl
int3
stos
es
xchg
lea
movsb
mov
aas
jmp
push
repnz
xlat
addr16
xchg
movhps
hlt
neg
cwtl
movsb
in
dec
or
sti
dec
in
pop
pop
push
xor
inc
pop
sbbb
out
push
enter
in
scas
scas
xor
sub
cmpl
stos
mov
adc
cmc
imul
mov
add
aas
scas
mov
lds
sub
mov
stos
lret
shrb
fbstp
adc
xor
xchg
inc
mov
xor
mov
mov
movsb
mov
mov
pop
and
sub
mov
xchg
hlt
sbb
sti
or
insb
imul
icebp
mov
sbb
jnp
jo
xchg
int
inc
ret
test
addr16
jp
xchg
xchg
fimuls
cmp
pop
imul
dec
mov
in
mov
aaa
inc
xchg
mov
pop
push
bound
pop
dec
call
fdivl
dec
mov
pop
or
lret
pop
nop
adc
sbb
cmpb
push
jno
sbb
movsb
loop
push
or
cmpsb
mov
clc
cli
testl
mov
xlat
mov
xchg
les
jns
xchg
inc
cmpsl
or
mov
cmc
call
lea
daa
mov
into
push
cmp
sahf
sti
jmp
scas
sarb
jbe
lcall
mov
sub
mov
pusha
push
and
jne,pt
in
xchg
enter
into
inc
lds
outsl
mov
mov
push
out
bound
jg
mov
push
pop
ret
incl
add
stos
mov
fsts
mov
repnz
out
jge
push
orl
cmpsb
and
frstor
fldenv
rcrb
lcall
out
lock
popf
xchg
xchg
mov
or
in
push
imul
mov
outsl
adc
lock
and
les
sbb
xor
adc
sbb
aad
mov
mov
stos
xchg
push
mov
jne
repnz
loopne
ret
lret
loop
cmp
cmpb
mov
bound
push
int3
ret
shr
enter
mov
pop
ret
or
mov
fucomi
xor
push
sub
jne
fstpl
mov
and
push
jge
adc
pusha
jg
in
mov
movsb
mul
mov
ret
push
mov
test
sub
pop
or
xor
pop
pop
idivb
mov
clc
stos
cmp
cmp
rorl
leave
mov
sti
test
mov
jno
fs
jns
icebp
leave
das
pop
cmpsl
das
jns
out
dec
sbb
or
inc
out
sbb
enter
or
push
test
ja
cmp
xchg
pop
insb
adcb
in
lea
adc
jg
stos
lcall
enter
xchg
add
or
fbld
lods
or
push
ror
out
divl
mov
nop
xchg
sbb
hlt
int3
stos
sub
les
cmp
cmp
in
dec
inc
jbe
hlt
add
xchg
sbb
jns
pop
test
dec
fisttpll
nopl
in
jo
xlat
enter
data16
out
fimuls
cmpsb
es
push
aad
mov
mov
ljmp
xchg
out
loopne
xor
out
push
ret
sub
addr16
ret
testb
ret
mov
xlat
xor
in
cwtl
imulb
push
lock
jmp
sub
jg
lea
xor
jne
nop
mov
inc
lret
test
gs
lods
fadd
inc
mov
sub
les
js
sub
xchg
shr
scas
mov
test
jmp
mov
add
pop
inc
lods
xchg
test
xor
cmp
stos
jns
pushf
xchg
mov
stc
int
aad
and
xor
cmc
mov
pop
icebp
ss
cvtdq2ps
or
mov
stos
add
xor
add
lahf
roll
lods
fadds
sti
jge
sbb
sbb
ljmp
dec
out
xor
subb
mov
or
scas
jae
out
addr16
ret
leave
ds
pop
movsl
sbb
mov
mov
push
inc
sub
sub
dec
xor
notl
jo
xor
movsl
push
cmp
and
bound
fadd
mov
mov
dec
rolb
pushf
push
add
dec
std
repnz
or
out
out
and
leave
test
or
ljmp
cmp
jns
add
xor
sub
pop
ds
adc
pop
pop
xor
incl
lods
ror
push
pop
loope
imul
fnsave
fcmovbe
addr16
xchg
ja
rorl
mov
fisubrs
repz
data16
mov
lea
jb
jg
stos
jle
mov
jnp
xor
mov
sbb
gs
add
cli
mov
cmp
fdivrl
mov
in
repnz
aaa
mov
or
xlat
push
mov
push
in
cmp
in
hlt
aas
adc
aas
mov
cmp
adc
stos
mov
std
vpaddsw
notb
xor
mov
push
pop
jmp
jge
adc
rclb
xlat
test
mov
jbe
lea
leave
pop
enter
pop
jle
sarl
outsl
les
fcomps
aaa
push
mov
fcmovnbe
cs
in
jg
mov
push
push
jb
int3
out
sub
lcall
add
jp
mov
rcl
or
adc
push
inc
cmp
loop
sub
cmp
loop
cmp
cmp
xor
xchg
inc
jmp
dec
ret
lock
dec
mov
push
das
aas
hlt
jns
push
mov
inc
imul
dec
adc
out
add
imul
push
test
mov
or
rcll
ja
pop
repz
or
xchg
and
test
test
and
in
sbb
jae
mov
xchg
test
push
inc
jo
push
sub
adc
shlb
ret
test
lds
dec
out
and
ret
je
and
and
add
jle
adc
and
jp
je
pop
xchg
insb
icebp
cmc
loopne
dec
jo
jl
jp
in
dec
pop
pusha
jl
push
andb
ud0
ret
outsl
push
fs
aas
std
pop
aad
pop
pop
push
lcall
and
imul
cmp
mov
adc
in
mov
inc
push
push
scas
popf
ret
scas
notl
mov
inc
fsubrp
addr16
jne
pop
loop
lret
iret
xchg
or
ror
jno
aaa
mov
add
cmc
mov
sahf
pop
and
aaa
jno
dec
jl
repz
sarl
jmp
push
xchg
incl
inc
mov
out
test
push
sbbb
inc
fadds
adc
mov
stos
xor
repz
dec
mov
cmovo
push
sarb
mov
lock
mov
add
data16
ljmp
loop
xchg
popf
xor
sbb
push
js
push
insl
mov
mov
fsubr
je
into
test
add
cmpsl
ret
xchg
mov
lahf
adc
pop
jge
insl
mov
push
fs
inc
test
xor
mov
jo
adc
sub
daa
push
lahf
adc
cmp
xchg
test
or
push
sbb
cmp
add
mov
dec
push
xchg
or
ss
add
call
shll
enter
insb
adc
in
lahf
movsl
xchg
movsl
hlt
pop
lods
add
ja
mov
das
mov
and
jge
sbb
sub
imul
pushf
das
mov
push
bsf
and
and
jne
aam
push
adcb
cmp
mov
xchg
lret
mov
jge
xor
ret
test
xchg
jne
xchg
adc
frstor
inc
mov
btc
cs
jno
je
in
fisttpll
insb
mov
stos
sub
pop
add
les
xchg
xor
push
dec
jb
loopne
shrb
add
shr
fmuls
jl
repz
pop
notb
aad
push
mov
sbb
sbb
stos
or
push
or
xchg
jg
in
xchg
lds
jp
divl
jnp
hlt
aad
loopne
test
sub
or
mov
aaa
sub
pop
push
add
sub
sub
cld
sbb
mov
jl
and
sbb
add
push
mov
pop
add
fdivrs
nop
loope
insb
out
iret
insb
movsb
or
out
lcall
fnsetpm(287
sti
mov
dec
cli
dec
jbe
xor
loopne
cmovno
mov
xchg
xchg
mov
inc
push
sahf
pushf
ss
jmp
cli
dec
out
and
fwait
dec
add
and
adc
and
aad
mov
and
jae
cli
fiaddl
aas
int
mov
mov
xchg
pusha
mov
mov
mov
dec
jmp
add
cli
mov
rcll
adc
and
jae
daa
mov
inc
out
hlt
sub
or
hlt
lcall
insl
nop
int3
adc
dec
xchg
sbb
aad
out
jo
addr16
pop
cwtl
aas
sahf
push
popa
pop
xor
xchg
lret
inc
enter
xchg
mov
mov
sarb
rclb
cmp
push
mov
js
pop
inc
add
jmp
cltd
sub
pop
push
subl
mov
out
mov
mov
fdivs
inc
jmp
dec
and
push
clc
pop
adc
xchg
sar
insb
lahf
orl
fs
or
jmp
cmp
and
hlt
jmp
jns
xchg
mov
sahf
popf
ret
ljmp
pop
fistpl
sti
mov
adc
xchg
or
stc
inc
test
jae
cwtl
out
jl
xchg
cmpsb
lds
inc
and
cmpsb
cs
adc
call
xchg
push
cli
imul
and
dec
xor
in
inc
xor
mov
out
stc
imul
addr16
jne
stos
repnz
popa
push
add
jecxz
pop
push
cs
int
std
xor
cli
mov
jecxz
test
lret
mov
cltd
cmpsl
mov
mov
lea
out
pop
inc
mov
out
mov
scas
aas
xor
repnz
loop
js
mov
or
call
shl
and
dec
bound
mov
mov
test
mov
and
repz
adc
or
cs
je
fiaddl
mov
mov
pop
std
rcrl
mov
adc
cltd
add
into
inc
jge
clc
ds
sub
lds
jl
inc
or
and
mov
adcl
xchg
push
jl
xor
pop
es
fcmove
sub
bound
jge
cmp
add
mov
inc
push
jp
fisttpll
mov
push
xchg
loop
repz
stos
pop
pop
mov
mov
sbbl
dec
pop
mov
xor
ret
data16
outsb
or
cs
mov
xlat
mov
and
int
add
pop
lcall
das
add
adc
jl
out
jmp
out
out
mov
lods
mov
lock
sbb
inc
or
cmp
arpl
loop
push
and
mov
inc
sbbb
add
fld
stc
out
mov
arpl
negb
push
inc
lods
adc
mov
adc
inc
sub
sub
adc
dec
cmpsb
push
xor
sbb
push
in
cli
or
in
mov
jne
cmc
xlat
dec
cmpsb
das
shlb
cwtl
insb
aas
aas
rorl
insl
test
ret
mov
int3
bound
sub
jmp
cli
popa
cmp
add
les
dec
sahf
bound
push
outsw
ret
aam
ffree
mov
pusha
mov
add
dec
fcompl
sub
xor
mov
lcall
aad
add
les
test
inc
lods
sbb
cwtl
sub
xchg
mov
add
add
pop
push
lret
test
enter
movsb
dec
cltd
inc
mov
sahf
test
loop
xor
cwtl
lods
addl
stc
in
shl
and
je
jne
inc
jg
jg
lret
in
jae
std
xchg
test
lods
out
mov
adc
push
in
rcrl
fmul
fisttps
test
aam
sub
xchg
rcrl
repnz
std
dec
stos
call
pusha
sub
or
xor
mov
sub
pop
add
shll
out
or
pop
hlt
jg
xchg
ja
ret
dec
je
sub
mov
mov
mov
pop
or
adc
test
adc
push
rcrb
popa
subl
mov
outsb
lcall
sar
call
mov
xorl
pop
gs
mov
and
test
mov
clc
repnz
dec
cltd
std
dec
in
push
pop
jns
lcall
xchg
adc
rcll
fiaddl
test
lock
mov
mov
pop
mov
les
enter
in
xchg
jge
xchg
shrb
lret
js
pop
call
mov
sti
nop
jne
std
sub
sbbb
lods
js
out
lahf
and
cld
adc
xchg
xor
sub
add
add
mov
in
ficompl
out
in
stos
cmc
and
mov
lods
outsb
movsb
mov
jns
adc
push
lcall
xor
xchg
mov
cli
out
mov
jecxz,pt
add
stos
push
jae
xor
or
inc
out
bound
lret
and
aaa
xor
push
aaa
sahf
xchg
fisttps
loop
and
icebp
and
cwtl
sub
mov
or
adc
mov
js
jmp
lock
movsb
and
push
aad
ss
stos
std
xchg
mov
pop
dec
cmp
cmp
fdivs
lahf
jge
or
push
mov
repz
pop
jae
in
push
dec
cmpsb
jmp
fisttps
test
pusha
xor
or
and
roll
sbb
cwtl
iret
inc
mov
jnp
fs
imul
pop
push
adc
sbb
lcall
push
sbb
sub
ds
movsl
add
inc
sbb
stos
sahf
mov
sub
adc
mov
rcrb
mov
fs
notl
xchg
mov
dec
or
jl
sub
neg
xchg
pop
inc
arpl
add
outsl
jp
call
jae
insl
sub
push
cs
adc
fst
dec
aam
mov
fcompl
mov
rorb
dec
xor
es
mov
xchg
or
movsl
pop
aam
jg
jnp
mov
pop
adc
cmpb
or
rorl
xor
sbb
in
push
mov
shll
cmp
test
repz
repz
pushf
int
ja
dec
xchg
fisubl
push
fcmovnu
pop
loopne
test
xchg
clc
stos
adc
int3
in
dec
jl
aad
data16
sahf
mov
mov
mov
fnstenv
into
inc
mov
aaa
jo
outsb
pushf
cmp
shr
cmpsl
lahf
push
jno
adc
sbb
adcl
scas
test
push
mov
jl
rorl
pop
inc
pop
mov
mov
lretw
add
out
fmull
pop
incl
ja
xchg
fs
nop
ljmp
push
fcmovnu
mov
jb
jb
out
mov
pop
arpl
insb
gs
movsb
or
mov
dec
cld
shlb
into
fwait
sub
cmp
mov
testb
sahf
frstor
jmp
push
pop
sbb
arpl
push
mov
data16
or
lods
faddl
push
gs
aaa
fs
into
inc
loope
mov
xor
push
cmpsb
cld
lret
mov
mov
movsb
insb
adc
scas
xlat
sarl
cmp
add
dec
jge
scas
rcll
xor
add
in
popa
inc
or
push
lods
jmp
dec
mov
jnp
push
outsl
fstl
push
jl
or
lds
pop
jp
outsl
shl
mov
inc
xorl
shlb
imul
pop
cmpsb
sub
stc
out
cmp
mov
jmp
xchg
add
ljmp
stos
orl
sub
movsb
arpl
outsb
sub
mov
jbe
ja
push
mov
subl
lret
inc
out
sub
inc
dec
int3
or
fmuls
mov
sub
mov
mov
in
inc
fsubrs
jle
out
mov
cmpsl
add
sub
sbb
orl
pop
lods
lea
adc
pop
jae
iret
lcall
xor
add
or
rorb
fildl
pop
stos
dec
push
and
stos
xor
outsb
adc
popa
lahf
and
rcr
push
into
test
xchg
dec
and
das
lea
shl
js
movsl
movsb
add
sub
lods
cmpsl
shlb
aas
adc
lcall
sbb
std
push
sbb
arpl
sahf
les
lods
mov
arpl
and
mov
push
movsb
int
popa
cmp
mov
inc
inc
pusha
outsl
mov
orb
lods
jge
sbb
add
das
push
repnz
dec
and
or
push
push
outsl
sub
sbb
mov
sbb
jg
cmpsb
push
and
mov
cli
fwait
inc
sbb
and
into
jg
mov
stos
cltd
popa
jne
addr16
xor
cmpsl
ficoml
sub
and
sbb
std
lret
faddl
cmpsb
push
inc
pop
pop
push
pop
movsb
cmp
icebp
jae
dec
push
fs
ret
mov
popf
fistpl
test
add
loop
into
outsl
into
sub
dec
adc
xchg
arpl
aad
cltd
lods
dec
ffree
std
shl
xchg
push
or
adc
mov
xchg
lcall
xchg
push
xorb
mov
cmp
xchg
xchg
movsl
jne
or
xchg
sbb
xor
or
jp
push
popf
enter
je
xchg
test
sbb
cmp
jg
dec
gs
sub
jl
lret
add
inc
add
pop
or
mov
push
add
jmp
inc
xchg
in
or
sub
mov
pop
pushf
cwtl
sbb
cmp
sbb
dec
mov
rcrl
nop
xchg
repnz
inc
jle
xor
push
divb
in
push
cmp
push
mov
jne
movsl
jle
in
sbb
gs
fpatan
dec
and
out
sub
scas
xor
test
xor
lea
fmulp
xchg
sbb
lcall
fidivl
pop
andl
hlt
pop
cmp
mov
test
pusha
nop
out
sub
jmp
jne
push
out
mov
mov
imul
sbbl
ss
dec
add
add
repz
mov
idivl
jae
mov
inc
push
xor
push
mov
adc
and
sub
push
daa
ret
das
in
or
dec
insl
test
ja
insb
divl
test
dec
stos
mov
dec
scas
fisubl
mov
test
add
mov
ja
add
dec
mov
fnstsw
inc
inc
cli
aas
and
subl
xor
aam
mov
jmp
lods
and
gs
aas
push
or
or
mov
pushl
cmpsb
js
aaa
xchg
jns
cmpsl
iret
adc
pusha
inc
xor
cmp
fistpl
inc
sarb
jne
mov
leave
push
mov
add
push
mov
ljmp
out
jg
int
inc
xor
pop
lcall
fwait
push
aaa
leave
mov
dec
stc
jno
sub
call
pop
xor
sbb
aam
cltd
mov
les
xchg
adc
mov
pushf
xor
mov
pop
outsb
sbbb
into
cmp
in
jae
push
mov
scas
into
repnz
jnp
mov
jo
mov
les
pop
jge
and
jno
jo
fmull
mov
mov
mov
iret
lds
daa
das
add
or
and
repnz
sbb
daa
pop
mov
icebp
mov
push
into
adc
lret
pop
les
sbb
ljmp
shrb
xor
jl
fcoms
xchg
or
mov
arpl
cmpsl
outsb
test
xchg
jbe
jecxz
xchg
or
jb
mov
pop
push
mov
fcoml
cli
cmpb
jp
inc
inc
lss
cmpsb
mov
cmc
inc
aad
xor
daa
sub
mov
fnstsw
cmp
sbb
pusha
call
sub
push
push
popa
clc
out
clc
mov
imul
mov
lret
or
enter
leave
stos
xchg
cli
push
push
xchg
xchg
push
daa
xorl
movsb
es
cmp
arpl
pop
inc
test
mov
je
test
iret
mov
mov
pop
push
inc
fisubs
jo
int
push
movsl
pop
push
push
rcl
mov
fdivrl
lret
xor
fcmovbe
dec
push
cmp
icebp
movsl
xchg
shlb
cs
dec
add
cmpsb
mov
cld
mov
push
movsb
dec
sbb
imul
mov
mov
pop
push
test
shl
inc
sub
push
jae
xchg
cmp
adc
ja
aas
sub
xchg
das
sahf
add
mov
outsl
dec
es
fimull
jo
push
sbb
popa
frstor
repnz
frstor
push
sbb
cmp
push
mov
repz
dec
pop
pop
xchg
ret
mov
scas
xor
aaa
data16
pop
out
xlat
mov
in
mov
repz
pop
popa
adc
add
jp
imul
aaa
or
inc
lock
xchg
lcall
loope
daa
fwait
jge
les
test
and
fs
mov
inc
pop
iret
push
fisubrl
pop
xchg
aas
dec
inc
orb
jae
cmp
adc
mov
jo
lea
or
mov
movsb
leave
sub
fsts
push
jne
adcl
xor
in
inc
or
and
daa
sbb
rcl
xchg
push
inc
adc
or
enter
or
add
arpl
movsb
cmp
jg,pn
jge
cld
je
or
imul
xchg
mov
fcoml
push
pop
push
mov
jge
add
pop
push
jb
xor
into
mov
scas
xchg
sbb
into
movsl
cs
mov
insl
inc
pop
dec
test
or
inc
aad
adc
shrl
mov
sub
mov
sbb
pop
ja
fists
sub
rcrb
adcb
dec
call
int
add
decb
adc
mov
lahf
push
push
pop
mov
xchg
inc
add
xchg
cs
xchg
mov
jns
stc
ret
test
dec
add
xchg
rcll
push
adc
add
sub
into
cmp
mov
mov
and
outsb
xchg
adc
in
pop
daa
lret
mov
dec
fwait
clc
pop
imul
cmp
push
fmul
push
int
sub
outsl
add
scas
gs
xchg
sahf
jns
xchg
inc
fcmovnbe
int
cmp
in
pop
cmp
scas
adc
cmp
mov
cmp
jp
or
xchg
nop
rol
xchg
push
push
cmp
pop
cmp
cmp
add
pop
movl
push
lds
pop
mov
lret
mov
or
cmc
dec
stos
ror
clc
sub
pop
mov
push
ss
jle
shlb
fisttpll
pusha
lock
mov
cli
fists
sub
sbb
sbb
lods
adc
imul
mov
rolb
mov
jo
mov
xor
mov
int3
in
out
cmp
pop
mov
cmc
ret
mov
or
fdivrl
push
sub
push
sub
pop
or
js
ret
jne
and
and
push
popf
sarl
rclb
add
jne
mov
imul
jmp
sbb
je
int
inc
mov
sbb
or
out
rcr
add
je
xor
push
push
rcll
or
push
subb
notrack
mov
pop
xchg
ja
mov
out
xor
repnz
es
cmp
test
insb
les
or
aaa
or
dec
xor
or
loopne
dec
cmc
lods
shlb
mov
ja
scas
mov
pop
mov
hlt
imulb
femms
jae
pop
cmpsb
lahf
inc
test
mov
pop
sub
mov
popf
cltd
repnz
mov
jns
xor
cmpb
insb
faddp
cmp
cltd
ds
enter
adc
gs
and
aas
std
fdivl
jno
shrl
pusha
test
push
inc
js
call
cmp
mov
jne
adcb
insl
jns
test
stos
xor
jecxz
jno
cmc
stos
pushf
sbb
and
mov
pushf
fdivrs
mov
or
mov
dec
sub
jo
dec
mov
ja
pop
bound
int
and
negb
das
mov
mov
or
les
mov
shll
jge
xor
iret
pop
ss
enter
jge
sbbb
sub
iret
jmp
rol
cmp
sub
sbb
cwtl
push
ljmp
adc
push
das
fnstenv
xchg
sbb
shrb
and
pop
xor
stos
hlt
inc
pop
andb
mov
mov
push
mov
xor
in
inc
testb
arpl
les
mov
nop
sub
aaa
stos
std
icebp
test
inc
sub
scas
adc
jo
cmp
dec
add
test
dec
mov
ss
lcall
push
pop
js
clc
add
mov
lds
call
enter
shlb
repnz
cltd
cmp
sti
pop
in
lds
push
pop
fidivrs
jbe
pop
mov
sahf
inc
dec
push
pushf
sbb
jae
mov
jne
add
out
fstl
jmp
stos
xchg
call
or
js
sbb
jno
push
je
pop
sbb
into
loopne
mov
inc
push
adcb
stos
inc
jbe
repnz
fisubrl
call
push
mov
in
inc
int3
dec
and
push
adc
aam
cmc
mov
jns
sub
iret
loope
outsl
xor
xchg
clc
scas
xchg
mov
loope
push
cmc
mov
sbb
fcompl
ljmp
test
push
inc
mov
sbb
out
insb
push
jle
fcomps
sub
sbb
dec
dec
adc
adc
fisttps
add
mov
jb
or
mov
dec
bound
dec
mov
or
mov
fsubs
dec
mov
sub
dec
sub
inc
cmpsb
ficoml
inc
enter
sub
mov
dec
aad
dec
jo
leave
sbb
push
mov
xor
sahf
mov
jmp
mov
aaa
sub
mov
sub
loop
pop
adc
jle
xchg
add
push
xchg
cmp
cmp
out
ficomps
xchg
stos
in
xor
xchg
addr16
xchg
xor
lret
in
fs
lock
lcall
pop
stos
dec
leave
ljmp
xor
sub
pop
adc
cltd
bound
xchg
inc
cmp
lret
fdivl
xchg
ret
pop
arpl
mov
stc
pop
sub
movsl
inc
fcoms
and
jo
sbb
inc
mov
cmp
imul
jg
daa
add
jo
sub
sub
rcll
dec
mov
jnp
frstor
mov
movsb
mov
fcomi
mov
jl
rorl
lahf
out
cltd
pop
sbb
shrl
jne
xchg
cmpsw
pop
jbe
push
xor
mov
push
and
or
ret
adc
push
repnz
lahf
add
inc
jl
or
aad
pop
mov
rorb
lret
sti
xorl
aad
int3
aas
sti
push
loop
push
pop
mov
fisubrl
xchg
jg
pusha
ds
bswap
insl
sbb
flds
adc
test
and
push
addr16
int3
pop
fdivrp
pop
es
insb
xlat
jg
cwtl
pop
jmp
fmuls
fsubrp
pop
les
fistl
xchg
pop
jnp
xchg
shrb
insl
push
mov
adc
aam
push
or
fbld
aas
outsl
add
addr16
stc
or
pop
int
lcall
cmpsl
test
insb
adc
rcrb
cmp
pop
mov
xor
filds
mov
ss
mov
xor
pop
dec
inc
sbbb
lret
inc
xchg
test
movsw
fsubs
mull
out
adc
std
mov
xor
xchg
addl
pop
iret
popa
mov
lods
in
in
dec
push
iret
loopne
add
aaa
and
pop
xor
out
punpcklwd
lock
dec
mov
fs
lret
loope
iret
gs
pop
inc
out
mov
or
add
jbe
stos
fstl
pop
cmpsb
ret
cmpsb
push
jle
imul
out
je
jl
push
pop
xchg
arpl
das
sub
cmpsb
int
cwtl
cwtl
in
xchg
out
cmp
push
popa
pop
inc
movb
mov
xchg
mov
xor
rolb
mov
adc
cmp
inc
pop
mov
dec
push
aaa
xchg
call
xchg
xchg
add
std
addl
out
in
or
pusha
cld
popl
add
or
arpl
mov
jl
push
loope
aas
scas
add
sti
fcmovnu
jb
imul
jp
mov
mov
adc
pop
fistpll
cmp
inc
sub
push
scas
inc
ja
mov
dec
push
jge
inc
test
sbb
gs
push
mov
and
mov
hlt
stc
inc
adc
jno
mov
gs
ljmp
popa
push
jl
lret
sub
dec
ljmp
and
fwait
jae
cmp
pop
jbe
cli
or
cwtl
xchg
add
arpl
push
inc
push
mov
pop
mov
lret
ds
pop
add
leave
xchg
adc
imul
mov
cld
hlt
dec
outsb
outsb
test
daa
je
mov
rcl
jbe
jecxz
loopne
vsqrtpd
arpl
push
push
add
lcall
and
or
mov
out
pusha
mov
lods
lds
jge
or
lods
xor
jo
aad
dec
xchg
mov
int
push
fs
outsl
xchg
dec
add
pop
jmp
fbld
or
pusha
mov
lods
jae
cmpl
js
mov
dec
and
mov
jnp
ss
pop
mov
push
push
and
je
jne
sbb
push
outsl
pop
xor
sahf
adc
add
xchg
add
push
and
lahf
and
pop
fwait
cmpsl
push
xor
jecxz
pop
or
cmp
inc
addr16
ret
mov
fadd
mov
push
inc
out
inc
mov
sub
and
test
pop
or
rorb
pop
mov
mov
mov
rcrb
add
add
aaa
jae
xchg
cwtl
loop
push
andb
ljmp
das
jp
push
push
mov
das
sub
outsb
pop
pusha
adc
jbe
mov
sbb
push
call
pop
imul
loop
sub
jae
inc
pop
xor
out
cltd
movsb
jmp
xchg
jbe
and
xchg
cli
mov
pop
push
cmc
pop
xchg
push
mov
hlt
jmp
cmpsl
adcb
push
outsb
rcl
popa
jmp
es
dec
fwait
cs
roll
mov
lcall
orb
stc
mov
cmc
jecxz
lods
mov
sbb
ret
inc
or
lahf
xchg
sub
lcall
mov
mov
je
and
pop
aad
dec
xchg
test
into
and
cmp
clc
rolb
or
das
ja
inc
mov
sbbl
xor
imul
push
pop
dec
test
sbb
ljmp
mov
call
sub
mov
push
enter
push
repz
fldenv
or
mov
pushf
scas
add
jecxz
fcompl
mov
test
fmull
clc
cmp
pop
pusha
sub
push
sub
daa
cli
imul
mov
out
inc
xor
aaa
or
test
sbb
cmp
sahf
add
pop
sbb
sbb
or
out
jne
cld
nop
or
cld
iret
xchg
test
int
inc
dec
pop
mov
lds
push
in
repnz
mov
cmp
shll
js
adc
push
mov
push
lds
pop
out
lods
or
std
adc
xchg
sub
mov
jo
mov
and
lods
inc
and
mov
sti
xchg
mov
and
push
out
in
sbb
ljmp
dec
int
mov
lret
insl
test
hlt
gs
dec
xor
pusha
pop
push
mov
inc
shr
mov
aad
pop
push
mov
psllw
push
adc
mov
mov
pop
loope
adc
negl
jns
push
aas
insl
sub
sbb
gs
loop
stos
je
push
int
nop
addb
mov
in
mov
jecxz
ret
clc
adc
pop
cmp
cwtl
scas
stos
sub
and
into
movlps
insb
add
push
icebp
cld
lds
mov
add
adc
iret
ret
flds
dec
cld
push
cmp
and
mov
aam
cmpb
idiv
fldenv
mov
fiaddl
cmp
jbe
int
sbb
mov
sub
push
hlt
ljmp
aaa
repnz
inc
inc
add
test
mov
mov
jae
sub
or
cwtl
pusha
xor
push
pop
push
push
cmpsl
add
int
addb
push
sub
dec
jae
sub
cmp
mov
jl
or
push
fildl
adc
dec
xchg
shl
cmpsb
push
fistpl
xchg
dec
and
adc
xor
div
std
cmpsl
out
bound
cmp
pushl
movsb
push
fisubrl
or
sbb
js
cmp
bound
ljmp
dec
insl
adc
arpl
mov
call
mov
push
pop
jecxz
or
es
adc
in
or
jge
xchg
dec
int
out
nop
aaa
mov
sbb
jo
jge
push
xor
dec
ds
ret
imul
cltd
jmp
es
sar
mov
and
mov
mov
cmp
xchg
mov
bound
adc
adc
test
sar
push
xchg
lds
inc
or
xchg
sbb
jge
lds
aaa
lahf
sub
sbb
mov
or
out
fdivr
subb
mov
push
sbb
jmp
repz
cmp
push
dec
inc
push
and
dec
bound
loope
sub
notl
pusha
adc
add
fwait
push
xor
ljmp
push
lahf
push
pop
pushf
pop
cmp
pop
mov
pop
out
ret
sub
in
orl
shll
mov
jg
test
xor
ffree
push
imul
mov
dec
xchg
push
rcrl
xchg
xchg
push
jae
movsl
pop
cmp
push
mov
xor
pop
inc
jne
int
or
jno
adc
outsl
dec
sbb
js
jecxz
add
pop
jnp
call
sub
outsl
int3
cmp
xlat
cmpsl
loopne
sbb
popa
clc
dec
shll
or
dec
into
fsubrp
add
adc
push
sarl
cmp
imul
cmp
pop
std
ret
outsb
int
cmp
loope
pop
loopne
xchg
cmp
lahf
test
jo
mov
mov
cld
jle
add
fidivrs
repnz
sti
incl
dec
sbb
loopne
mov
jno
dec
mov
mov
lds
ror
and
lods
arpl
and
dec
shr
xchg
in
mov
mov
dec
lock
cmp
mov
inc
lret
mov
test
push
outsl
jns
pop
mov
or
repz
repnz
mov
pop
and
push
test
push
jae
imul
pop
lods
jns
pop
leave
fldcw
or
cmp
push
jge
xor
sahf
pop
adc
add
jnp
arpl
arpl
push
roll
icebp
fsubs
mov
mov
push
dec
shlb
mov
jo
adc
cmp
int
rcrl
test
xchg
fwait
jmp
fstl
shll
popf
mov
xor
cmpsl
sbb
sbbl
dec
or
mov
mov
shrl
movsl
stc
jb
xor
push
xor
dec
stos
mov
sarl
jbe
mov
stos
ss
nop
sbb
sbb
sti
xlat
sarl
mov
nop
scas
imul
scas
out
hlt
mov
popa
fwait
cmc
cli
xchg
lods
call
pop
lret
xchg
xor
mov
insb
mov
cltd
call
test
hlt
push
fwait
xchg
xlat
dec
test
and
jno
leave
ljmp
fmul
sub
pop
push
jbe
test
push
ja
adc
sahf
cmp
inc
stc
bound
pop
xor
mov
and
fildl
inc
xor
divl
mov
movsl
sbb
xor
sub
push
dec
hlt
pushf
push
mov
dec
mov
inc
pusha
add
aad
inc
ss
ficomps
addb
jae
insl
mov
push
cmp
pop
inc
out
insb
cmp
sbb
push
pop
into
add
in
push
inc
inc
lds
xchg
push
sub
out
and
dec
and
jp
mov
adc
sti
scas
ljmp
lds
imul
ds
shll
test
mov
fs
outsb
fdiv
adc
pop
dec
cmpl
pop
xor
sbb
pop
jp
ja
rcrl
xchg
lods
jp
pop
shl
and
cmp
aad
fistl
int3
sub
mov
inc
xor
rorl
out
and
sbb
sbb
scas
jge
mov
out
bound
inc
and
xchg
xchg
inc
and
push
arpl
add
test
cld
push
jae
repnz
push
insl
pop
fsubr
cwtl
add
push
or
ja
mov
sbb
mov
mov
les
js
push
push
add
mov
fbstp
repnz
jno
cmp
mov
mov
jle
xor
dec
repz
lahf
int3
jns
sub
loop
push
das
cmp
pop
movl
int
jge
es
insl
das
pop
outsb
lods
cmp
rcrl
repz
add
sbb
mov
fidivs
stc
movl
popa
xlat
jmp
add
add
das
inc
sbb
jp
int3
xchg
ret
jb
addb
es
pop
mov
lock
jmp
pop
cmpsl
mov
cmc
in
out
or
data16
inc
sbb
sbb
pop
pop
mov
into
cmp
cmpb
scas
out
add
rcrl
ljmp
jp
out
sti
je
push
shl
adc
mov
mov
or
fcoml
out
in
fisubrl
mov
clc
mov
cmpl
push
or
inc
jae
lret
pop
cmp
mov
mov
add
mov
test
or
sub
add
xor
adc
repnz
sub
lret
lock
cmc
mov
iret
fdivs
bound
enter
lock
test
jp
mov
sbb
in
xor
mov
xchg
in
jmp
cmc
mov
clc
xchg
rcll
mov
test
mov
mov
sbb
mov
adc
xchg
inc
sbb
les
sbb
leave
cmpsb
adc
jae
jnp
lods
push
push
mov
jns
cmp
jne
fstl
into
xchg
gs
jbe
fsts
daa
xchg
sub
addr16
cmp
inc
pop
fwait
adc
shl
jmp
push
shr
pop
pop
sbb
sub
mov
repz
inc
lods
jp
cmpsb
cmp
cmp
shlb
std
cmp
xchg
adc
xchg
leave
add
mov
push
xlat
push
int3
mov
jae
mov
das
shrl
adc
in
pop
push
inc
sub
outsl
or
je
imul
sbbl
adc
std
je
call
neg
cmp
lock
call
lods
outsl
jge
or
addr16
nop
mov
or
sub
pushf
jnp
dec
jge
in
add
adcb
mov
insb
syscall
insb
scas
repz
inc
push
mov
inc
or
lcall
out
push
rcrl
sbb
mov
cmp
rcr
add
sub
outsl
shrb
jne
loop
loopne
cld
dec
sub
mov
mov
xor
mov
test
push
sbb
enter
jl
push
xchg
lret
les
outsl
icebp
sub
xor
dec
jg
les
stos
jle
mov
mov
and
ds
das
inc
push
xchg
sbb
mov
ja
jo,pt
xlat
int3
incb
imull
add
jne
clc
jle
push
xor
in
or
aas
mov
fnstsw
iret
adc
adc
ss
sub
sahf
mov
inc
fistl
or
mov
dec
inc
sahf
jl
mov
sub
sub
mov
icebp
push
cltd
cmp
and
dec
test
cmpsb
cmp
pop
pop
and
lea
mov
insl
out
cmpsl
fidivrl
ljmp
mov
roll
daa
popf
jmp
xchg
jmp
ret
add
jge
mov
repz
shlb
lret
scas
les
pop
adcb
mov
xlat
xlat
jnp
cmpsb
idivb
cmp
fadd
dec
pop
mov
xor
jbe
adc
cmc
cmp
div
and
ficompl
cs
inc
out
cmp
arpl
xorl
push
dec
incb
dec
push
add
pop
iret
sbbb
jns
or
loop
es
pop
cwtl
out
or
inc
cmp
decb
fnstenv
cltd
loop
insb
stos
pop
int3
orb
in
aad
and
into
popf
jnp
jge
adc
sbbb
mov
mov
xchg
popf
pop
mov
out
or
mov
push
pop
jmp
data16
lods
loopne
je
xchg
xchg
mov
jle
daa
cli
push
int
out
outsb
loope
ljmp
xchg
imul
jp
or
cmc
add
roll
mov
mov
mov
mov
fcompl
outsl
data16
mov
mov
mov
pop
cmp
fcoms
mov
and
mov
repz
fidivrl
add
and
arpl
jle
fstl
and
aas
xor
pushf
or
insl
push
stos
lahf
jg
sbb
jl
fimuls
inc
xchg
lcall
shlb
fadds
cltd
jnp
push
out
xor
xor
popa
mov
xorb
adc
push
shll
aad
scas
aad
stos
fisubrs
out
popf
jl
push
mov
lods
or
jo
dec
sub
adc
orl
dec
push
inc
mov
jne
js
iret
xor
jne
pop
dec
int3
or
xor
inc
pop
lds
jne
aaa
mov
punpckldq
add
or
push
xor
xchg
ss
out
mov
cmc
inc
shlb
sbb
push
loope
mov
pop
pop
xlat
rorb
fsts
cs
mov
lcall
mov
loopne
or
xlat
sub
rorl
adc
mov
push
clc
test
sahf
push
mov
rol
je
mov
js
adc
and
cmp
es
fs
adc
pop
repnz
push
sub
inc
adc
push
mov
ja
test
ret
aaa
hlt
jmp
mov
push
cli
inc
mov
imul
sub
jl
dec
add
mov
stc
imul
rolb
outsl
repz
jbe
aaa
inc
stc
add
push
jl
mov
stc
push
push
ljmp
jnp
imul
rcl
add
popa
cs
rclb
push
loop
in
ret
outsb
pop
xor
lods
loopne
or
adc
stos
mov
mov
or
aaa
in
in
imul
imul
jae
mov
push
add
dec
loopne
xor
out
jb
sub
mov
sti
mov
sub
xor
stos
adc
les
mov
fbld
jg
xchg
lret
pop
jl
pop
add
or
mov
cmp
add
outsl
xchg
popf
mov
mov
cmp
cmc
bnd
adc
outsb
outsb
dec
test
pop
mov
arpl
mov
sub
lcall
pusha
sub
mov
pusha
shll
xchg
enter
ret
xorl
repz
mov
js
repz
sbb
mov
movsl
ja
das
faddl
data16
sahf
or
push
int
adc
mov
loopne
mov
subb
jbe
call
mov
jae
sub
inc
dec
shlb
loopne
stc
xor
call
jo
loopne
in
cmp
rol
repz
add
dec
fimull
psrad
mov
mov
sbb
jno
jl
mov
xchg
pop
test
pop
into
shll
clc
mov
jle
xor
jae
jnp
adc
movsb
mov
push
add
lds
into
dec
insb
mov
add
xor
mov
pop
sub
xchg
xchg
les
cmpsl
mov
lret
incb
sahf
hlt
mov
xchg
pop
inc
fs
mov
and
cld
mov
and
jecxz
mov
sahf
mov
ror
push
lds
scas
fprem
xchg
inc
mov
inc
pop
cltd
adc
mov
and
xchg
sbb
mov
push
in
sbb
xchg
inc
aam
pop
hlt
jne
inc
stos
scas
ja
mov
mov
repnz
outsl
cli
ror
out
mov
sub
loop
notb
aam
cmc
in
daa
mov
and
leave
cmp
mov
sbb
or
fwait
stc
mov
les
mov
mov
jno
jecxz
gs
repnz
int3
lods
xchg
gs
hlt
pusha
xchg
lret
mov
loop
sub
sti
arpl
mov
insb
std
pop
cmp
subb
xor
bnd
and
jae
mov
es
imul
sub
cmc
mov
int
adc
fistpl
jnp
xchg
mov
jno
sahf
outsb
jge
xchg
jle
popa
xor
sbb
jp
enter
pop
and
mov
inc
or
ja
shlb
out
sbbl
insl
test
test
add
xor
xchg
js
es
scas
pop
filds
pop
sub
dec
outsb
lret
dec
sub
mov
test
aaa
dec
test
fsubl
adc
fwait
dec
popl
arpl
cld
or
lea
leave
mov
add
push
test
in
mov
mov
adc
iret
and
push
mov
adc
or
xchg
add
jnp
adc
mov
fcomi
jns
scas
pop
cmc
js
rcll
shlb
jle
cmp
cmc
sub
push
aam
jmp
jp
mov
dec
xor
jle,pt
cld
sbb
push
inc
push
push
dec
mov
jle
pop
aaa
leave
inc
daa
lcall
fs
popf
in
out
ss
cmp
dec
aaa
loop
or
addr16
sub
test
cmp
jmp
or
push
cld
mov
mov
lea
or
cmc
mov
mov
shll
pop
inc
ss
fildll
leave
xor
cmp
jno
push
jne
add
mov
call
shrb
stos
dec
sti
aam
jmp
ret
lret
sbb
inc
mov
inc
push
clc
mov
xor
push
dec
loopne
outsl
xor
mov
xchg
sbb
divb
jo
stos
jmp
mov
mov
inc
ret
dec
xchg
out
dec
adc
aad
push
xlat
mov
or
push
sahf
mov
pop
cmp
sbb
inc
shrb
xorl
pop
adc
lods
pop
dec
bound
push
popf
gs
add
mov
flds
pop
stos
xchg
outsb
push
divb
add
ljmp
xlat
fimull
dec
mov
inc
pop
jbe
dec
fisubrs
aad
jno
jmp
ret
and
add
hlt
xor
test
inc
pop
or
pop
sub
aam
sbb
mov
ret
mov
mov
ja
sbb
inc
xor
ds
popa
fidivrs
outsl
mov
aas
leave
jl
repnz
negb
mov
sub
aam
in
lods
xchg
mov
mov
cmp
xchg
mov
mov
lds
ss
dec
ror
jb
lcall
mov
call
and
lret
jne
enter
jnp
cmp
push
cmpsb
imul
lods
imul
pop
icebp
js
out
pop
mov
dec
cmp
xor
arpl
dec
ds
pop
mov
or
sub
sub
add
invd
out
fdivl
and
pop
or
xor
cmp
xchg
fs
ljmp
pop
sbb
into
add
push
popf
out
fimuls
cmp
sbb
repz
and
ljmp
jns
and
popa
xchg
lods
in
rorl
jnp
mov
push
mull
cmp
sub
leave
mov
out
jne
lock
imul
xchg
fsincos
mov
jmp
pop
mov
scas
mov
jp
xlat
lahf
xchg
xchg
jbe
in
aaa
jae
arpl
scas
je
push
rol
pop
mov
loope
lds
xchg
adc
mov
sbb
mov
push
dec
jnp
cltd
cmp
repz
or
cmp
xchg
inc
xor
not
jl
fwait
scas
adc
ja
cmp
push
mov
cmp
xchg
inc
lock
sahf
outsb
je
inc
ret
dec
inc
das
hlt
jb
lock
ja
push
lds
push
in
dec
dec
shlb
jb
stos
int3
jae
pop
cmp
lea
pop
mov
lds
inc
add
cmp
jae
sbb
inc
mov
xchg
push
xchg
xor
leave
leave
aas
sub
jle
repnz
enter
add
lret
fwait
inc
call
addr16
mov
lret
jo
mov
fldenv
movsl
fs
jp
out
mov
mov
div
loope
iret
out
ss
sbb
adc
mov
jne
adc
jnp
push
es
subl
sub
fsts
push
or
mov
or
push
push
lods
add
push
mov
fs
jae
mov
xchg
or
data16
int
in
sbb
jbe
dec
dec
mov
shl
inc
aam
cmp
lret
das
leave
sub
xchg
movsb
xchg
sarb
hlt
daa
add
in
jp
add
aas
pop
xchg
mov
mov
sahf
adc
jbe
pusha
xchg
add
add
std
jl
lahf
cmpsl
jns
idivl
mov
mov
hlt
jnp
mov
adc
lods
push
or
popf
jg
int
lds
push
lret
sbb
mov
ja
mov
xchg
pop
cmp
mov
andb
test
fstl
mov
fildll
cmpsl
shrb
mov
sbb
xchg
mov
in
add
dec
adcl
adc
out
andl
or
out
mov
mov
xor
popa
bound
cmp
out
cld
nop
xchg
xor
lds
pop
imul
loop
cmp
out
cmp
stos
pop
xor
fcoms
push
jae
into
push
adc
push
orb
or
add
stos
sbb
mov
inc
daa
xchg
sbb
rcrl
imul
in
sbb
stc
jle
xor
push
loope
adc
leave
es
pop
sub
es
push
inc
into
mov
stos
dec
sbb
enter
lds
sarl
mov
fistpll
jecxz
scas
ss
stos
mov
mov
aaa
xchg
sub
insb
push
fs
sub
arpl
pop
or
rclw
mov
cmp
call
ja
add
jno
outsl
out
ja
mov
cmc
in
enter
adc
cmpl
lret
mov
ffreep
out
sub
cli
push
jecxz
lahf
xchg
popf
jo
mov
jnp
sub
pop
adc
hlt
sbb
cmp
jne
mov
mov
add
out
push
test
mov
sbbl
xchg
push
mul
insb
xor
ret
mov
scas
movsb
inc
pop
adc
movsl
push
jnp
add
dec
outsl
jbe
adc
sub
ds
movsb
lcall
cmp
rcrb
and
hlt
xor
jecxz
out
insb
pop
mov
adc
jb
int3
adc
xor
notl
mov
fisubrs
inc
push
mov
rclb
sbb
sbb
mov
repz
lahf
add
les
xor
mov
mov
inc
mov
mov
fstpl
lods
dec
mov
adc
dec
loopne
popa
pop
mov
xchg
and
dec
inc
in
xor
sti
mov
cmp
xor
sbb
mov
aaa
pop
ret
mov
hlt
or
push
jb
aad
xor
inc
nop
xchg
xchg
outsb
adc
push
mov
inc
lret
insb
mov
cmpsl
xor
pop
xchg
enter
das
cmpsb
outsl
mov
fidivrl
mov
xchg
fisttps
cmp
push
das
cs
in
ret
popa
fbstp
xchg
aas
adc
and
ret
arpl
shrl
adc
test
pop
test
pop
aaa
dec
jo
clc
icebp
in
jmp
leave
fadds
imul
es
pushf
or
mov
inc
xlat
fsubrl
mov
pusha
mov
movsb
mov
rcrb
add
sar
or
cmp
push
jne
into
push
in
sbb
sbbb
fildll
jg
loop
dec
int3
fwait
movsl
sarl
push
sub
xor
cmpsl
filds
addr16
sub
or
stos
xchg
ljmp
mov
xchg
mov
sti
data16
add
xor
pmuludq
and
cmp
cmp
xchg
or
rorb
sbb
ss
ret
push
push
xchg
ds
aaa
jmp
js
xor
sbb
add
ss
lds
and
xlat
mov
sti
xlat
mov
cld
out
leave
push
fisubrl
fildl
inc
lea
imul
add
sbb
stos
lret
int3
push
rorl
in
scas
mov
repz
ds
inc
out
mov
clc
stos
scas
out
es
sbb
sbb
xchg
sub
sub
out
sbb
mov
dec
sub
add
jl
or
hlt
xor
pop
sbb
ror
std
xchg
add
shl
push
sub
mov
jmp
sub
add
xchg
fstps
js
pop
push
xlat
and
xchg
jecxz
jmp
jecxz
in
imulb
dec
jp
mov
lods
daa
imulb
jp
push
sbb
int3
xorb
mov
sbb
icebp
scas
jmp
aaa
ds
pop
xor
jl
into
jle
push
mov
insb
loopne
rol
int
cmp
mov
ljmp
popa
jae
lds
fs
in
cltd
mov
imul
mov
stos
bound
cltd
test
mov
repz
adc
mov
xor
decb
aad
cmp
movsl
test
jmp
daa
shll
pop
fsub
inc
cli
insb
ja
or
hlt
mov
adc
scas
inc
sub
xchg
cmc
and
dec
xor
ret
mov
cmpb
jmp
dec
jge
cwtl
and
ljmp
dec
pushf
push
mov
fisubs
in
mov
mov
call
ret
push
roll
xor
clc
mov
and
mov
or
mov
or
pop
push
pop
add
ljmp
inc
fbld
jno
pop
mov
hlt
jl
adcl
mov
sbb
sbb
or
out
jmp
and
ja
pusha
sub
sbb
pop
out
push
jecxz
mov
jl
mov
adc
out
data16
inc
jle
adc
push
inc
andb
cmp
das
adc
aam
fdivp
lock
js
sbb
xchg
mov
loop
inc
mov
adc
imul
mov
sbb
imull
lods
add
xor
mov
in
lods
inc
push
mov
adc
pushf
sub
rcl
lds
jle
pop
mov
push
scas
or
in
mov
cmc
stc
das
aas
ret
dec
jg
rcll
mov
inc
mov
rclb
sbb
inc
test
mov
add
test
dec
ljmp
xlat
sbb
add
adc
lods
je
fimull
sbb
sbb
jg
lret
sarb
lahf
push
outsb
sub
push
ret
pop
scas
sub
mov
addl
xchg
stc
out
jmp
outsl
fldl
popf
loopne
cld
sahf
sub
movsl
pushf
icebp
cld
mov
test
mov
push
push
clc
add
add
into
mov
pushf
insl
dec
arpl
fadds
mov
cmpsl
jle
pop
cmp
or
imul
dec
addr16
popa
mov
mov
push
pop
cmp
lcall
cwtl
cmc
add
jae
lcall
add
pop
loopne
or
pop
add
xorl
daa
sbb
mov
out
push
pop
clc
dec
out
test
subl
sub
mov
sub
cmp
shlb
addr16
sahf
pop
fwait
hlt
je
and
push
jne
in
jge
cmp
cli
adcb
enter
mov
in
scas
add
popf
add
mov
lahf
dec
insl
push
test
push
cltd
imul
aad
outsb
cld
pop
stos
enter
test
mov
push
mov
aas
ds
sub
dec
mov
loopne
dec
mov
adc
jge
add
popa
shl
sets
mov
inc
jno
icebp
pop
scas
mov
cmp
inc
sbbl
mov
outsb
rclb
addr16
shrb
push
or
sbb
inc
add
jno
sub
or
cmp
out
popf
fstp
int
adc
fdivrl
outsl
subl
add
fstps
inc
ret
sbb
nop
pop
or
dec
cmpsb
inc
dec
sbb
sbbl
dec
mov
mov
ficoms
pushf
mov
jmp
mov
lahf
mov
push
loope
test
inc
cvtps2pi
push
xor
pop
shl
data16
dec
addr16
inc
outsl
test
xor
ljmp
fadd
jg
jo
repnz
or
sarl
jg,pn
repnz
add
test
sbb
scas
inc
daa
lret
push
inc
lods
shrl
add
jl
mull
xor
shrb
cmp
ds
jg
pop
push
incl
xchg
aas
nop
push
pop
cmpsl
and
xorps
ret
out
mov
cmpsl
push
lds
jecxz
add
xchg
add
xlat
fisubrs
or
dec
call
das
jp
pop
xchg
cmp
nop
lea
or
movsb
mov
aad
add
xchg
mov
xchg
scas
mov
sbb
stc
jb
sub
cmpsl
mov
enter
xchg
add
int3
in
and
xchg
das
xor
lret
fdivl
jb
fistpll
das
cmp
cmpsl
and
fbstp
lret
test
icebp
ret
jecxz
jo
iret
cmpb
call
xchg
sub
and
lahf
adc
jge
ljmp
push
add
jnp
sahf
loopne
push
pop
xchg
shlb
mov
add
xor
adc
cmc
inc
push
inc
xchg
adc
or
pop
rcrb
and
ror
add
cmpb
dec
lods
xchg
movsb
loop
xchg
push
sub
mov
scas
cmp
das
jae
clc
mov
jmp
pop
hlt
sbb
iret
sbbb
sbb
sbb
and
add
or
sub
mov
out
lods
dec
fcomps
and
mov
cli
cltd
mov
mov
inc
loopne
popl
addr16
jg
inc
xchg
imul
sbb
xchg
inc
lea
xchg
xchg
mov
sti
shrl
jg
or
ljmp
push
fildl
dec
cmp
or
test
jmp
push
cmp
adc
pop
add
insl
sti
jb
int3
test
sbb
adc
push
jl
sti
add
dec
test
xchg
arpl
pop
movsl
aam
push
inc
jno
mov
fsubrs
xor
cmpsb
shl
cld
sub
sbbb
adcb
lock
mov
negl
push
push
icebp
cmp
jle
mov
fildl
fisubs
andl
inc
in
push
iret
cmp
adc
out
mov
cmpsl
and
mov
pusha
cmpsl
nop
popf
inc
into
add
push
sbb
test
push
mov
adc
sarl
dec
hlt
jecxz
and
push
test
ss
icebp
lds
repnz
ljmp
repnz
pop
iret
nop
mov
fadd
push
aas
test
push
cmp
movsb
inc
or
ds
mov
mov
testl
or
div
js
leave
mov
mov
mov
in
dec
mov
sbb
movsb
jp
sbb
mov
cli
inc
push
mov
int3
test
sbb
out
cmp
or
rclb
fidivrs
test
mull
jle
mov
cmp
daa
xchg
mov
mov
jns
icebp
jmp
fincstp
push
cli
xchg
inc
and
mov
imul
out
mov
pushf
sbbb
sub
fisttpll
ss
push
xchg
sub
faddl
jae
and
xor
sbb
xchg
ret
cwtl
mov
dec
xchg
pop
sub
push
rcll
sub
std
mov
gs
mov
jle
jge
sub
sub
add
xchg
mov
in
mov
mov
mov
lahf
jge
inc
test
scas
jno
in
adc
mov
pop
fwait
mov
stc
push
cmp
testl
ljmp
mov
add
jecxz
lcall
cs
and
adc
sbb
pop
push
cmp
dec
in
push
mov
jg
or
fsub
mov
sbb
mov
push
outsl
popf
test
push
or
sbb
mov
and
insb
jle
loopne
scas
test
adc
dec
movsl
cmp
xchg
in
jl
adc
pop
mov
jb
aad
sub
popf
pop
int
xlat
rcll
dec
ficompl
ror
js
andl
xor
pop
test
push
mov
pop
push
xchg
dec
mov
push
test
sub
mov
push
bound
add
add
and
insl
mov
test
popf
xor
xor
push
das
pop
aas
test
push
dec
and
sub
repz
pop
pop
test
mov
adc
sub
sub
cmovne
cmp
mov
sbb
pop
dec
jecxz
inc
jmp
xor
leave
iret
imulb
xor
pop
jl
lds
push
jno
in
stc
sub
xor
dec
pop
repnz
add
pop
aas
push
jbe
outsb
cmp
faddl
insb
and
push
xchg
add
adc
loopne
in
dec
mov
adc
das
ss
pop
stos
loop
adc
sub
push
add
push
dec
bound
aad
in
push
mov
mov
sti
jl
add
or
std
loop
mov
or
xchg
and
movsb
adc
mov
stc
outsb
popa
in
call
ret
lods
xchg
mov
testl
hlt
mov
xchg
fstps
testb
xor
push
sbbb
call
pop
sub
fcmovne
ss
jno
incb
push
int
and
xchg
neg
jo
aad
sub
stc
gs
push
mov
fcmovu
push
scas
mov
mov
and
enter
scas
pop
loope
subb
cli
add
rcl
fmul
mov
jecxz
dec
leave
sbb
leave
shr
add
jbe
jne
shld
sti
sbb
pop
cmp
xchg
jae
jo
imul
out
sarl
lahf
popf
xchg
inc
pop
adcb
lret
inc
jno
fdivp
test
inc
addb
es
push
or
leave
inc
xor
mov
pop
cwtl
push
add
cld
enter
fadds
daa
xor
jmp
int
mov
push
lea
clc
jo
iret
inc
sbb
xor
stc
test
cli
xor
sbb
cli
sub
xlat
cld
ficoms
push
add
and
lods
xchg
mov
mov
pop
into
in
pop
out
jmp
loope
aam
sahf
xchg
cld
adc
mov
jno
xor
push
int3
add
and
push
lds
sub
or
movsb
shll
sub
xchg
add
push
jg
stc
testb
jg
imul
enter
adc
in
sti
xor
lds
shll
jle
popa
xchg
push
or
mov
pop
pusha
add
stos
xor
pop
ja
push
loope
pop
leave
xor
dec
mov
repnz
xchg
push
xor
adc
ret
ret
inc
cld
lret
in
mov
lahf
pop
fildl
dec
dec
jmp
add
cmp
lahf
xor
daa
ss
jno
sbb
adc
jp
cmp
sub
adc
test
jnp
int
lods
pop
cli
cli
pop
cmpsb
pop
adcb
je
push
insl
movsl
movsl
fldcw
hlt
lds
jmp
push
mov
mov
adc
gs
das
inc
and
push
inc
inc
push
js
xchg
adc
enter
ljmp
cmp
dec
addr16
movsb
icebp
dec
push
pop
shr
jns
je
sbb
pop
sbb
inc
inc
dec
shlb
cmp
roll
ss
dec
je
shlb
and
xchg
push
cmc
xchg
lods
xchg
out
push
adc
push
fisubrl
xchg
movsw
mov
shlb
push
or
mov
inc
in
inc
in
inc
mov
imul
mov
cwtl
jmp
aam
mov
out
inc
jnp
mov
scas
jg
clc
push
jl
sub
xchg
dec
das
mov
ds
mov
mov
ret
orps
andb
jge
jae
pop
nop
ss
pop
jle
in
mov
fsubs
push
pop
test
or
into
cli
movsl
stos
xlat
xchg
adc
call
xchg
dec
dec
mov
stc
and
ror
jl
adc
inc
addr16
int3
and
mov
sbbb
pusha
dec
adc
pop
lcall
sub
aam
sbb
popl
xor
xchg
test
jle
fstl
xchg
call
mov
mov
dec
mov
sub
jne
inc
sub
push
pushf
or
add
xchg
mov
jae
push
roll
addb
loope
mov
dec
xchg
out
rcrb
mov
pop
cmpsb
stc
adc
sbb
lods
test
inc
mov
adc
setnp
sbb
xchg
or
in
popf
xchg
push
mov
int3
adc
lds
fidivrs
cltd
push
sbb
xchg
cmp
fucom
adc
cmp
mov
dec
adcb
push
jne
loop
out
mov
push
sbb
lcall
lret
sarb
stos
xor
loop
gs
pop
out
icebp
roll
ret
sbb
mov
mov
movsl
fcoml
pop
loopne
lcall
jae
and
push
push
stos
pushf
xchg
stc
xchg
xor
mov
ret
add
pushf
and
and
addr16
pop
stos
cmp
out
xlat
ja
lahf
adc
loope
pop
mov
jne
sub
out
sbb
insb
cli
dec
out
mov
dec
xor
pop
sbb
add
sub
jae
push
cmp
and
mov
fnstenv
outsl
pop
cmp
loop
inc
bound
push
pop
mov
lcall
jle
sub
movsl
adc
pop
andb
cmp
sarb
arpl
cmp
cltd
mov
cwtl
orb
push
xlat
out
sub
dec
mov
out
rcr
and
mov
aaa
insl
lods
lret
push
mov
xor
je
int3
sar
out
pop
dec
lahf
movsl
and
or
fisttpll
adc
push
inc
shll
cld
push
sbb
mov
dec
jb
jbe
jbe
inc
scas
movsb
outsl
jbe
fistl
cmc
or
daa
or
fsubrs
psraw
test
push
cmpsl
jb
or
popf
in
stc
pusha
lahf
lds
push
mov
cwtl
sub
cld
leave
push
mov
sbb
pop
loopne
mov
adc
outsb
sub
imul
sbbb
imul
pop
dec
scas
mov
and
push
xchg
cmp
and
or
movsl
cmp
imul
gs
add
pushf
js
cwtl
shll
adc
pop
or
xchg
shll
sbb
dec
cmp
ljmp
test
or
movsl
mov
dec
pop
inc
in
mov
xchg
xchg
and
mov
ds
in
cwtl
cmpsb
add
or
orb
ficoml
and
arpl
jo
mov
int3
sub
push
jge
ret
movsl
pop
inc
add
sahf
insb
sbb
xchg
pop
insl
dec
cltd
fst
mov
jmp
out
repz
fmuls
out
mov
shlb
adc
and
pop
jne
adc
xor
sub
inc
cmpl
cli
repnz
lret
adc
orl
movsb
push
orb
sti
jge
rcll
cmp
jo
mov
adc
int3
cmp
js
ret
pop
out
mov
pop
mov
mov
aas
sahf
inc
int
mov
pop
fnsave
inc
pop
cmc
mov
rcrl
push
test
mov
sub
dec
pop
popa
outsl
daa
inc
les
ja
fldenv
div
or
aam
jecxz
pop
loope
add
inc
push
fwait
sti
ljmp
push
lea
add
adc
enter
adc
clc
rclb
dec
ret
arpl
jmp
push
inc
ret
push
das
cmp
cmp
jle
adc
pushf
jecxz
imul
xor
fdivrs
xchg
fcomps
dec
repnz
mov
shrb
inc
xor
sub
out
outsb
xchg
xor
cmpsl
push
push
sbbb
pop
xor
xlat
repnz
imul
pop
push
jecxz
jg
fwait
jnp
mov
pop
movsl
mov
mov
mov
cmp
clc
pop
adc
lret
push
lods
mov
push
and
xor
mov
cltd
sbb
mov
pop
roll
ret
inc
fidivrs
repnz
fisubrs
sub
pop
pusha
testb
xchg
out
mov
movsl
jp
mov
mov
ret
clc
dec
and
std
clc
mov
imul
mov
xchg
sub
fwait
push
xchg
or
daa
xor
add
add
mulb
out
mov
cmp
sahf
add
in
xor
ds
movsl
rep
leave
dec
mov
xor
cmp
mov
stos
push
and
sqrtps
and
xor
sbb
fstps
inc
adc
pusha
jnp
add
pop
das
push
xor
mov
js
or
div
mov
jl
test
dec
fcomps
es
sbb
into
sub
pop
xor
aas
and
mov
push
mov
jl
test
mov
out
rolb
in
mov
dec
jmp
and
add
inc
sbb
ja
xchg
pop
iret
call
dec
sub
sub
sarb
in
out
rcrl
xchg
mov
mov
lods
lret
xchg
xchg
cvtpi2ps
xchg
mov
push
out
jns
mov
push
xor
movsl
repnz
cmp
mov
js
xor
inc
lock
iret
cmpsl
adc
int3
push
sbb
add
sbb
insl
adc
push
xchg
sub
mov
mov
cmp
cmp
dec
jp
push
test
xor
pop
lret
lods
cwtl
mov
imul
and
in
or
xchg
or
xor
shrl
mov
sbb
and
pop
sub
mov
jecxz
out
pushf
ja
les
xor
cltd
test
bound
push
fnsave
cmc
lfs
mov
dec
das
nop
fnstenv
push
xchg
imul
mov
adc
inc
dec
pop
adc
jns
pop
or
mov
daa
out
lret
jb
adc
xchg
jg
pop
dec
jo
mov
clc
cmp
dec
sub
test
sub
pushf
mov
insl
cmc
outsb
stc
mov
xor
or
cli
shl
push
jae
add
push
rcll
mov
mov
xchg
test
test
mov
or
push
mov
aam
adc
dec
outsl
and
lods
pushf
jno
inc
pop
mov
loopne
and
inc
add
dec
sti
or
scas
sbb
push
pop
shrl
sbb
and
mov
loop
or
insl
in
jo
rclb
je
push
or
pop
mov
clc
and
nop
mov
and
jno
add
int3
push
mov
stos
cmpsb
inc
popl
or
and
fdivrl
je
icebp
inc
insb
addr16
and
pushf
push
fwait
mov
sub
dec
add
inc
sbb
sbb
arpl
pop
cmpsl
ss
in
or
js
cmp
iret
cmp
enter
or
in
enter
lcall
and
jbe
daa
pop
mov
dec
cmp
xchg
inc
aam
or
movsb
jle
add
test
jbe
cmp
cmp
adc
sbb
mov
mov
cmp
stos
adc
loopne
jge
sub
repnz
lock
cmp
enter
lret
cmp
and
mov
scas
divl
cmpsl
lock
or
aad
int
push
or
sbb
push
xchg
inc
or
fdivl
dec
movsl
call
cmp
and
mov
shl
adc
ja
xor
dec
jmp
and
push
mov
xchg
insb
jecxz
sub
mov
int3
fisubrs
test
jnp
jecxz
fwait
daa
insb
pop
mov
aad
adc
jecxz
xchg
lds
cmp
sbb
lcall
dec
mov
loopne
jbe
fwait
std
xchg
imul
push
ret
pop
push
lret
daa
int3
pop
xchg
push
mov
sub
jmp
add
xchg
sub
and
rcll
and
sbb
sub
add
ds
enter
dec
xchg
inc
mov
mov
mov
pushl
push
add
push
jnp
xchg
mov
cmc
jecxz
popa
int
arpl
pop
fwait
add
inc
xchg
out
ja
sarb
push
mov
add
dec
repnz
lods
pop
rolb
insb
jne
inc
ljmp
jmp
inc
jle
flds
icebp
out
lods
mov
jl
dec
dec
cmp
inc
cmpl
cmp
fnstsw
push
out
mov
aad
out
and
dec
jno
push
cmp
repnz
jns
lock
sbb
into
test
div
shlb
mov
mov
cmp
pop
or
ds
pop
xchg
mov
out
jns
xchg
shrl
mov
andb
ret
and
xchg
xchg
fisttpl
sbb
xor
xchg
add
fimull
and
jb,pt
mov
data16
daa
jle
mov
lea
scas
mov
cmp
fs
insl
fldl
faddl
lds
add
inc
or
pop
pop
in
pop
add
mov
mov
xor
push
roll
loop
push
mov
lds
rcrl
fmuls
pop
push
rcrl
add
scas
inc
pusha
aam
jae
movsl
andb
mov
mov
je
daa
int
and
test
ret
pop
add
add
mov
jno
xchg
mov
repnz
faddp
lods
or
ss
ss
adc
xor
jno
aas
add
mov
pop
je
ja
out
enter
outsl
sbb
std
mov
mov
and
dec
stc
outsl
inc
xchg
xchg
push
push
sbb
cmpsb
outsb
adc
add
lahf
gs
lds
aaa
inc
insl
mov
fs
fildl
enter
dec
sub
mov
pop
pop
or
push
movsb
sbb
or
xchg
jle
inc
mov
xchg
shrb
sti
push
fsubrs
icebp
cli
cmp
mov
out
test
outsl
int3
jmp
or
push
pop
add
push
xlat
repnz
mov
ljmp
ja
mov
mov
repz
pavgb
push
or
fdivs
addb
lahf
stos
sub
xor
imul
and
rorb
pop
nop
ss
jno
cmp
out
mov
icebp
test
mov
inc
mov
in
jge
cld
cmpsl
mov
repnz
aam
in
push
test
leave
inc
jnp
or
and
xchg
sbb
jge
arpl
cmp
xchg
cmp
aaa
adc
out
pop
mov
dec
ja
loope
aas
pop
ljmp
pop
inc
out
xchg
push
js
xchg
jp
jb
adc
loope
dec
pop
leave
push
mov
test
dec
popf
adc
or
insb
jbe
orb
fisubl
mov
aas
fsts
mul
daa
repz
movsl
pop
xor
bound
lock
outsl
add
divl
jmp
sbb
mov
xchg
cwtl
cld
movsb
aaa
mulb
cmp
mov
sbb
pushf
sti
sub
fs
test
clc
adcb
daa
aas
push
imul
jmp
mov
inc
bound
mov
xchg
lahf
cmp
and
ljmp
push
andb
inc
mov
subb
scas
loop
inc
shll
movsb
sarb
adc
stc
mov
dec
add
roll
nop
dec
push
add
mov
jns
aam
push
daa
mov
sub
mov
in
out
sbb
sbb
pop
popa
sub
xchg
sbb
push
sahf
loope
jle
mov
push
push
clc
adc
jl
push
push
or
lret
jp
xorb
repnz
outsb
jno
push
cmp
cmpl
lcall
loopne
jbe
popa
sub
dec
xor
enter
aad
inc
ret
in
dec
push
cli
sarb
jnp
mov
int
cmpsl
xchg
or
ret
fbld
popa
push
dec
mov
mov
stos
popl
mov
add
mov
ret
sbb
adc
pop
dec
insb
push
mov
int
sbb
es
mov
imul
inc
adc
lcall
adc
and
fimull
and
cmpsb
sar
mov
jl
mov
mov
fmul
xor
inc
je
aas
pusha
inc
ret
xchg
movsb
lahf
iret
insl
mov
cld
fucomi
jae
and
mov
xchg
std
pop
mov
imul
jecxz
popl
push
aas
jb
orl
out
cli
inc
sti
xchg
xchg
cmc
mov
add
jecxz
js
rcr
pop
adc
cmp
inc
jo
cmpsl
xchg
adc
dec
push
xlat
and
xorb
mov
mov
add
pop
mov
mov
ret
scas
adc
adc
cmc
adc
movsl
popf
mov
loop
mov
sbb
mov
into
inc
roll
jae
adc
int
mov
pop
mov
jbe
lods
mov
xchg
dec
shll
aad
ret
loopne
cltd
scas
dec
inc
aad
inc
mov
push
inc
fdivs
xchg
lock
adcl
add
cmp
clc
dec
cs
out
out
mov
pop
outsb
dec
shrb
dec
mov
aad
fstps
cmp
and
aad
push
and
mov
mov
mov
mov
mov
cltd
popa
arpl
nop
mov
andb
jo
shr
cmp
xchg
cwtl
push
imul
lret
jp
rorb
dec
in
adc
mov
int3
xchg
outsb
sbb
xchg
cmpsl
pop
mov
and
nop
ret
ret
ljmp
xchg
push
out
mov
test
stos
mov
sti
imul
jns
jae
xchg
fidivrl
out
cli
testl
loop
jne
aad
push
push
adc
dec
mov
jae
shll
imul
jnp
rcrb
aad
mov
jmp
mov
lods
push
lahf
movsb
ss
arpl
aam
pusha
into
sbb
mov
fmuls
outsl
cmp
lods
shl
divl
adc
jecxz
jae
int3
nop
lret
test
into
imul
jb
push
sti
xor
lock
push
adcb
cmp
insl
sub
sbb
addr16
imul
aad
cmpsb
push
cmpsb
cmp
sti
xchg
lods
xchg
cmp
testl
sti
push
inc
adc
ljmp
sti
xchg
or
aas
inc
cmp
arpl
frstor
inc
pop
daa
pop
test
out
xor
out
xchg
iret
inc
pop
jbe
push
iret
dec
addl
push
sub
xlat
data16
sbb
cmp
popa
int
jmp
in
fsts
dec
adc
mov
mov
clc
mov
xchg
xchg
mov
fnstenv
dec
add
cmp
cli
and
xchg
and
or
filds
sub
push
inc
das
int
mov
push
sbb
ja
movsb
adc
xor
popf
jmp
addb
xchg
lock
jne
lret
jo
sub
stc
imul
mov
inc
hlt
loop
jl
dec
movb
cmp
add
xchg
cmc
sbb
imul
jb
test
test
lock
xorl
mov
or
leave
xchg
lahf
mov
add
pop
xor
adc
out
jle
mov
addl
sti
push
sub
cs
stc
mov
aad
xchg
adc
xor
and
jle
sbb
inc
xchg
mov
or
fistps
sub
negb
push
cs
jle
add
mov
jg
pusha
cmc
inc
repz
sbb
sub
pop
idiv
cmp
mov
leave
pop
inc
mov
in
push
jb
aaa
push
jo
cmp
or
inc
lods
and
xor
iretw
sbb
jno
lods
jge
jno
mov
pop
scas
pop
mov
in
jecxz
adc
add
mov
addr16
lret
in
cmpsl
test
sub
sub
cmp
in
pusha
cmp
push
cmpl
out
jp
pop
mov
sub
jle
insl
test
insb
idivb
outsl
dec
sub
loopne
or
outsl
imul
sbb
push
rorl
or
inc
mov
pop
inc
roll
and
fcomps
lcall
sbb
mov
jecxz
or
aas
sub
jmp
repnz
dec
add
fldlg2
inc
sub
cmp
les
or
and
inc
leave
sub
jmp
sbb
outsl
icebp
mov
add
rcl
out
les
sub
sub
scas
mov
mov
fcompl
rolb
or
rcr
lds
and
add
or
xchg
xchg
xchg
mov
flds
jmp
call
xchg
mov
add
and
sub
dec
jp
or
ds
inc
scas
mov
test
push
jnp
les
pop
icebp
es
in
sbb
mov
jae
stos
xchg
ljmp
cmpsl
xchg
adc
mov
push
add
hlt
lcall
mov
sbb
add
aaa
mov
sbb
clc
daa
jne
cmp
push
fs
push
inc
loop
pop
cmp
and
clc
out
scas
je
and
pop
stc
sbb
fbstp
aad
and
popf
inc
movsl
test
cmp
pop
pop
cmp
push
icebp
push
sub
cs
int3
fnsave
xchg
sbb
push
xor
cld
push
scas
imull
or
mov
inc
fstl
xchg
jbe
sub
cli
mov
mov
das
cmc
or
ljmp
jle
sahf
cli
and
fwait
outsl
std
mov
pusha
adcb
gs
fnsave
push
fwait
push
int3
push
cmp
cmp
inc
popf
lahf
inc
testb
mov
mov
cld
into
mov
fildl
pop
push
mov
add
mov
bound
mov
inc
dec
pushf
pop
pop
fidivrs
aad
out
sahf
mov
subl
adc
ja
aad
jp
and
adc
or
neg
adc
or
shlb
sub
or
sbb
mov
cmp
mov
dec
in
stc
mov
pusha
lods
stos
xor
jbe
movsl
movsb
cs
sbb
add
fdivrl
sti
pop
out
in
mov
fdivl
sbbb
mov
sbb
xor
push
test
mov
sub
in
mov
and
test
ljmp
push
sub
sub
arpl
cmp
cltd
fadds
or
ret
pop
loope
repz
sbb
xor
ds
mov
outsb
cmp
dec
sbb
popa
cmp
inc
inc
and
imul
mov
ret
adc
insb
out
cmp
pop
xor
sub
jnp
rclb
push
aad
arpl
dec
pop
stc
arpl
or
mov
xor
inc
sti
ds
addr16
imul
sbb
add
push
pop
and
dec
mov
in
xchg
popl
jg
pop
aam
pop
enter
mov
xchg
dec
or
dec
cmp
out
fimull
popa
enter
in
aam
fcmovnu
lock
inc
pop
lahf
and
jae
jle
dec
xor
push
movsb
ds
adc
mov
add
por
push
movsl
das
mov
dec
xchg
dec
inc
or
push
movsb
fdivs
dec
movsb
hlt
sbb
ja
or
dec
cmp
gs
jle
xchg
and
cmp
adc
push
or
fucompp
loop
or
daa
or
adc
cmp
push
mov
jae
mov
xor
mov
push
in
xor
shll
pusha
sub
fcoms
mov
jae
cld
imul
xchg
pop
jo
sub
xchg
nop
adc
add
sub
ja
xchg
leave
add
out
int
xchg
add
push
and
jmp
hlt
mov
cmp
or
xchg
xchg
push
add
inc
mov
inc
dec
fidivrs
repz
jb
das
pop
xchg
insb
xchg
fsubr
gs
inc
push
loopne
movsl
movsb
mov
aas
aad
ds
mov
cmp
and
xor
mov
xor
je
add
nop
adc
adc
jne
fisubrl
dec
clc
out
ja
mov
movsl
jl
push
in
fnstsw
mov
add
xchg
push
iret
xchg
mov
mov
adc
xor
nop
xlat
fisttpl
cs
push
adc
add
in
mov
and
stos
repz
outsl
or
iret
sbb
cmpsb
mov
jno
popa
faddl
lret
mov
popa
jnp
les
sarb
mov
adcb
push
lods
mov
jle
bound
repz
mov
fmull
pop
push
and
pop
jg
xchg
icebp
in
pop
jno
roll
movsl
and
push
or
arpl
xchg
push
sub
out
add
sbb
push
daa
push
push
jae
pop
inc
rcl
shlb
and
ljmp
int3
mov
jge
sub
lods
int3
sbb
pop
ja
imull
int
outsb
mov
cmp
ja
das
fisubrs
rcrb
movsb
add
inc
push
xchg
orl
sub
std
mov
adc
fisubl
mov
jae
pop
mov
jl
xor
ret
pop
testb
sbb
iret
xchg
lods
sbb
and
xchg
pusha
sahf
xor
or
sub
popf
sub
xchg
push
sbb
sbb
dec
sub
aad
xchg
jge
addr16
sub
arpl
and
sti
and
sub
push
mov
insb
ljmp
xor
and
pusha
pop
popa
iret
lret
push
sub
pop
es
and
jo
js
jmp
xchg
aam
iret
push
mov
adc
cmp
dec
and
shlb
mov
sbb
push
aas
mov
lds
imul
xchg
loop
mov
pusha
es
and
and
hlt
fldenv
or
pop
xchg
icebp
xor
ja
das
out
adc
shll
fs
pop
imul
mov
pop
sub
dec
cmp
lret
push
dec
sbb
mov
or
icebp
js
test
dec
push
rcll
dec
jne
mov
cmp
or
sbb
lcall
inc
xchg
and
scas
js
ror
ljmp
mov
popf
push
and
ds
xchg
pop
adc
cmp
adc
xchg
dec
mov
in
jb
add
mov
xor
push
pusha
push
mov
mov
insl
sub
je
xchg
inc
dec
mov
mov
dec
insl
xchg
repnz
decb
mov
shlb
cld
insl
jbe
or
push
sar
xchg
and
cmp
inc
cmp
push
lea
ljmp
loop
leave
xlat
test
mov
fldenv
dec
pop
fucompp
dec
xor
add
fbstp
mov
rcrl
push
xchg
inc
andb
lret
js
jg
dec
mov
sbb
jnp
cmovne
inc
sbb
adc
mov
pcmpeqb
dec
imulb
adc
push
jge
or
dec
shl
shlb
aas
outsb
test
ret
push
in
and
sub
xchg
cmc
jb
mov
mov
mov
into
rol
sub
mov
mov
sbb
in
mov
in
dec
stos
scas
xchg
push
cld
iret
xchg
je
dec
nop
mov
mov
pop
popa
repz
push
in
sbb
into
pop
cmp
in
adcb
mov
jg
test
iret
fwait
icebp
mov
repnz
pop
test
sbb
sbb
cmpsb
sbb
push
dec
cwtl
push
bound
xchg
das
xor
xchg
mov
ss
mov
dec
inc
jle
lcall
aad
mov
rcr
mov
mov
add
xor
mov
xchg
dec
lret
adc
insb
xchg
clc
ljmp
add
sub
ss
cmp
or
xlat
pop
test
sbb
pop
xchg
sub
ficompl
and
adc
fsubrs
scas
in
adcb
test
in
into
mov
pop
hlt
jmp
popf
out
jne
faddl
pushf
mov
cld
mov
jbe
xchg
inc
enter
mov
cli
lcall
adc
jb
shr
mov
mov
mov
divb
push
clc
mov
lods
xchg
xchg
into
xor
in
pop
addl
cmpsb
stos
into
fbstp
cld
or
mov
sahf
jbe
xor
pop
fcmovb
dec
adc
aam
cltd
sub
imul
scas
add
ret
sahf
lds
mov
iret
push
jle
mov
fsubl
pop
fwait
xor
cs
pushf
and
jecxz
in
xchg
seta
es
out
arpl
cmp
adc
pop
pop
mov
lret
ret
push
decl
lock
pusha
aam
aaa
outsl
adc
pop
push
rcrb
inc
pushf
adc
lds
out
cmpsl
jmp
ret
fnclex
gs
mov
adc
filds
push
sub
and
jl
notl
pop
shrd
sub
cmp
dec
lret
xchg
and
jmp
loop
xor
cs
mov
and
repnz
or
sbb
inc
cmp
adc
push
js
sbb
mov
scas
fdivs
dec
and
les
cmp
fmulp
cwtl
mov
jecxz
lods
jnp
jb
mov
sahf
mov
ret
je
mov
mov
addb
fisubrs
test
idivl
pusha
dec
es
lret
jo
imul
je
cmpsb
fistps
leave
sub
ret
cmp
inc
stos
aad
lds
add
in
fistpl
sub
jae
xor
cmp
lahf
lahf
pop
das
or
push
dec
cld
loop
add
and
enter
movsb
jl
cli
adc
mov
call
pushf
out
call
cmp
js
test
xchg
lock
push
fwait
inc
out
and
icebp
pop
lret
hlt
es
or
mov
lcall
insb
sub
or
push
inc
xchg
lcall
fldl
outsl
push
jge
jl
repnz
repz
pop
scas
or
cmpsl
les
and
mov
lods
xchg
add
dec
sbb
or
and
push
push
subl
pop
addr16
fisttpll
push
dec
push
sub
and
pop
aas
cmp
out
in
jno
mov
mov
cmp
cmpsb
dec
dec
scas
sbb
mov
shll
mov
or
adc
add
dec
es
cmpsl
xchg
in
mov
adc
push
or
add
aas
xlat
mov
dec
jmp
xor
inc
je
jbe
mov
xchg
sub
fwait
fs
pop
mov
xor
cld
test
dec
push
jnp
pop
fistps
push
mull
imul
jp
mov
mov
jmp
fidivs
xor
xor
ja
sub
inc
stos
pop
pushf
jg
hlt
sub
push
add
psrld
in
xchg
aaa
jo
push
push
jmp
andb
and
adc
mov
add
mov
sbb
add
stos
dec
aad
push
mov
lahf
test
and
jp
jge
jp
rcrb
fsubl
jno
ljmp
dec
add
sahf
jecxz
mov
pushf
ret
push
cmp
cmp
push
xchg
mov
aam
cli
enter
stos
sahf
scas
addl
add
dec
test
cmp
push
int3
insl
mov
aad
push
and
pop
mov
daa
push
push
jecxz
lods
mov
sbb
push
cs
aaa
shll
mov
mov
jl
cmp
out
sub
xchg
test
sbb
xor
or
sub
push
stc
enter
mov
mov
jnp
out
push
jae
pop
inc
mov
dec
int3
add
pop
lcall
xchg
aaa
bound
iret
xor
mov
mov
jecxz
cmp
in
test
push
lds
setge
movsb
cmp
mov
cwtl
and
rcrb
loop
adc
nop
pop
xchg
sub
cmp
stc
lods
or
pusha
push
sbb
outsl
add
aad
adc
mov
xchg
stos
add
jb
stos
rcl
dec
dec
in
and
adc
adc
mov
add
scas
sbbb
jae
xchg
not
dec
cmp
mov
push
incb
idivl
inc
push
sbb
sub
and
mov
insl
bound
pusha
add
mov
sahf
sahf
adc
mov
mov
sbb
ror
pop
cld
xor
or
and
sub
stos
hlt
std
push
adcb
jns
jp
or
dec
cmc
bound
int3
aaa
mov
push
in
jno
fs
mov
rcll
push
orb
jns
fcomps
pop
in
inc
pop
or
push
and
pop
mov
sub
add
xor
jo
fcomps
test
fidivl
inc
sub
inc
jge
stos
sub
rcll
xchg
jne
bound
dec
xchg
dec
or
repnz
jp
js
cmp
loop
mov
pop
sbb
cmpsb
aad
scas
pop
out
mov
pop
call
and
sbb
xorb
mov
and
mov
and
stos
adc
lds
cli
aad
mov
cltd
popa
fcoml
dec
mov
jb
mov
or
adc
sbb
xchg
and
das
cld
mov
mov
repnz
or
or
mov
and
notl
sub
lret
cmc
jne,pt
mov
mov
push
ja
sbb
mov
mov
fs
mov
xlat
inc
mov
jae
jp
mov
repnz
loop
shll
jns
mov
es
call
adc
std
xchg
and
xor
lods
mov
add
push
add
jecxz
repz
mov
adc
test
jle
sahf
out
xor
popf
shrl
add
sbb
ret
or
adc
mov
xchg
jle
inc
push
and
bound
pop
mov
jb
mov
and
mov
push
aad
fadds
js
fbstp
stos
ret
mov
popa
fisttpl
mov
xchg
xchg
lahf
jns
aas
mov
stos
sub
mov
leave
cltd
sbb
add
in
add
and
or
cmp
in
xchg
pop
aas
pop
xor
xor
mov
xchg
inc
imul
add
aaa
test
int
leave
cmc
xorl
jge
mov
cmpsb
lea
pop
xor
inc
popf
pop
dec
and
and
add
xchg
or
mov
dec
xor
test
mov
xchg
fcom
lock
movsb
repz
sub
lahf
mov
cmp
jnp
insb
lcall
or
insl
sbb
pusha
mov
out
test
orl
adc
adc
fisubs
jl
mov
pop
sbb
fiaddl
stos
aas
jg
push
push
mov
call
xchg
mov
mov
je
or
inc
sub
or
insl
push
shrl
stos
xor
andb
stos
jmp
mov
pop
xchg
jle
jle
je
fnstsw
popa
pop
bswap
mov
jb
mov
inc
insl
mov
mov
lret
push
fcompl
addr16
xlat
movsl
ljmp
lcall
mov
mov
popa
xchg
jae
ss
ficomps
arpl
sbb
and
mov
jns
mov
fsin
subl
pop
lret
adcb
dec
icebp
jmp
xor
fsubl
push
xor
negl
cmp
push
andl
inc
int3
mov
outsb
mov
pop
lods
test
mov
sub
inc
daa
xchg
lock
or
lcall
aas
jle
mov
jecxz
cmp
mov
xor
inc
iret
inc
pop
adc
or
call
movsl
jb
stos
sbb
push
shll
popf
lcall
mov
repnz
andl
test
call
pop
pop
xor
mov
out
pusha
mov
mov
popa
insb
adc
ds
ret
ret
lds
xchg
sti
xchg
cmp
cmp
mov
mov
test
push
adc
mov
jp
cltd
lock
out
lahf
mov
sbb
fisttps
sub
movsb
pop
sub
jmp
xchg
lret
jg
xchg
add
cltd
xor
daa
pop
fisubrl
pop
adc
test
aaa
cld
popf
sti
adc
fs
les
push
push
add
pop
jb
xor
test
clc
jae
popa
shr
ret
test
pop
lods
scas
lods
test
xchg
aam
cmp
ds
jl
call
insl
pop
pop
shll
test
out
ror
push
mov
or
subl
out
lcall
repz
or
movsl
pop
fdivs
xor
mov
adc
xchg
out
adc
lret
mov
nop
dec
mov
pop
loop
insb
mov
dec
inc
mov
sbb
std
xchg
xor
push
out
dec
and
fisttpll
sbb
rol
or
pushf
outsl
arpl
sub
pop
insb
jge
pushf
lahf
insl
sub
sbb
mov
cmp
cmc
dec
pop
push
loop
fstp
pop
add
insb
mov
mov
adc
adc
xchg
out
push
mov
ret
out
mov
cmp
gs
xor
mov
push
shld
xlat
sbb
mov
mov
and
rcl
inc
mov
aas
adc
push
jecxz
dec
or
inc
enter
out
gs
and
sub
stc
aam
sub
adc
outsb
aad
push
lods
pop
adc
push
mov
dec
xchg
mov
xor
pop
arpl
sub
mov
loopne
loopne
sub
push
pop
in
sub
push
mov
xchg
faddl
adc
or
cmp
or
mov
push
jb
sub
jo
pop
lret
imull
jno
ja
lahf
out
jnp
add
push
das
std
pusha
cmc
aam
repnz
and
pop
xchg
cld
push
les
aad
rorl
adc
data16
cwtl
repz
loope
pop
mov
jp
pop
fs
imul
push
mov
idivb
pop
hlt
outsl
je
ret
scas
pushf
jg
jge
dec
dec
xor
mov
add
lret
lods
in
push
rol
ret
xorb
add
cmp
pop
mov
lahf
jg
mov
mov
push
xchg
adc
cmp
pop
in
jbe
add
sub
lahf
shlb
cmp
mov
pop
insb
repnz
sbb
sub
xchg
or
ss
xor
and
sbb
or
rcrl
dec
stos
jne
jnp
je
ja,pn
das
in
xor
cs
enter
push
fdivrs
jo
mov
rolb
xor
xor
sbb
jp
dec
enter
dec
dec
push
lods
into
add
sub
and
push
inc
mov
mov
int3
out
arpl
ljmp
fcos
mov
jno
mov
ljmp
adc
mov
jmp
push
push
push
jl
mov
idivl
xor
inc
dec
call
xchg
rcll
adc
ljmp
bound
jg
lahf
fmull
out
fildl
stos
das
stos
pushf
sub
mov
int
aad
jle
pushf
jg
sbb
cmp
jns
shll
cld
mov
out
cltd
add
cmp
cmpl
iret
mov
cld
jg,pt
rcl
fiaddl
xor
out
cmp
gs
jle
addr16
pop
cmc
out
mov
jp
faddp
sbb
into
mov
clc
stos
cmpsb
fisttps
dec
pop
sar
jno
movsb
leave
or
repnz
xchg
push
lds
push
or
scas
push
inc
jle
mov
hlt
cli
xlat
mov
mov
daa
js
jae
fcmovu
sbb
cmp
mov
lret
imul
cld
and
mov
enter
and
mov
std
daa
and
stc
cmp
pop
out
pop
les
jne
push
mov
es
mov
loopne
or
stc
mov
gs
es
sbb
mov
aaa
push
ss
lret
add
push
dec
inc
push
mov
cmpsb
jle
pop
xor
jge
mov
dec
insl
cmp
xchg
insb
dec
dec
jnp
mov
cwtl
pop
les
jge
movsb
and
call
push
scas
lret
imul
add
rol
jbe
aas
cmc
shll
and
add
pop
sbb
into
dec
mov
inc
or
xchg
insl
in
mov
pop
dec
adc
inc
xor
aaa
xor
add
lods
ror
int3
in
loopne
xchg
aaa
lds
adc
orl
and
or
mov
mov
push
xchg
mov
cmc
mov
in
movsl
aam
adc
out
jbe
scas
inc
jle
das
push
ljmp
mulb
jnp
cltd
jnp
pop
push
xchg
orb
das
jae
jne
mov
js
shll
fdivrs
sbb
push
or
popf
jae
mov
aad
mov
insb
mov
xchg
pusha
xor
dec
jle
fldl
push
cwtl
jno
jb
pop
imul
ret
sub
xor
sahf
push
rorw
mov
popa
je
inc
cs
data16
jmp
imul
sub
inc
rcl
mov
nop
mov
arpl
xor
pop
shr
cmpsl
mov
cld
scas
pop
cli
xchg
inc
mov
mov
mov
insl
push
push
or
cltd
lds
pusha
cmovp
xchg
icebp
int
dec
icebp
das
push
xchg
sar
push
and
lea
adc
inc
ror
imul
pop
pusha
xchg
cmpsl
push
std
mov
mov
dec
mov
dec
mov
mov
lret
push
mov
push
aas
sub
popf
jl
ret
and
icebp
push
sbb
add
ror
dec
test
mov
sub
icebp
xchg
or
push
les
shrl
cmp
push
cmp
les
and
push
pop
lcall
adc
mov
mov
outsl
fsubp
xlat
pop
adc
hlt
pop
inc
fdivp
aas
mov
sub
sar
cmp
adcb
and
das
sub
in
ret
js
and
and
jnp
enter
daa
das
test
or
or
mov
repnz
inc
imul
adc
and
xor
mov
xchg
or
xlat
or
push
adc
add
imul
pop
iret
test
sub
stos
pusha
mov
in
mov
dec
stos
dec
mov
shll
call
jg
mov
pop
xchg
loopne
mov
pop
je
lahf
into
xchg
loopne
adc
inc
inc
jle
lods
adc
je
inc
sub
jae
mov
cmc
sbb
loopne
and
sbb
loop
mov
mov
lds
lock
xchg
ror
push
mov
test
adc
ret
or
pop
xor
sahf
nop
lcall
cmp
and
sbb
xor
ljmp
pop
cltd
push
lds
push
mov
lret
scas
cmp
cmp
adc
aad
xchg
sub
popf
aam
cmpsb
pop
inc
mov
or
inc
fisubs
notb
and
and
ret
fsubs
aas
or
xchg
adc
or
sbb
mov
aaa
mov
lds
sub
adc
outsb
mov
or
rcl
pop
xchg
pop
jbe
and
call
jns
cmc
mov
jae
aad
mov
push
cld
mov
xchg
idivb
jle
ljmp
out
loopne
out
outsb
test
xlat
mov
and
negb
out
ficomps
out
mov
pop
mov
adc
pop
mov
push
add
je
jo
xlat
sub
test
rcll
test
cmp
test
mov
sub
nop
negl
inc
dec
sub
inc
rcrl
xor
repnz
adc
sbb
mov
sti
sbb
lret
mov
aam
push
sbb
xchg
js
or
cmp
lcall
movsl
xchg
adc
mov
cli
jne
lds
repz
or
mov
pop
adc
xchg
mov
mov
cltd
mov
in
jecxz
insl
rcrb
loope
ds
outsl
pop
jmp
rol
pop
lock
and
cld
mov
fcomi
cmp
and
jge
sub
jo
sub
mov
adc
inc
inc
xor
cmp
es
sbb
jecxz
jmp
sub
stc
jp
xchg
les
in
fildll
sbb
xchg
cli
push
inc
shrl
pop
adc
jns
xor
iret
movsb
lret
xchg
lock
clc
mov
or
push
mov
xchg
adc
push
dec
xchg
add
inc
ljmp
mov
fnstenv
dec
rcll
mov
cmp
mov
movsb
sbbl
mov
push
lcall
loope
inc
out
xchg
ss
inc
jnp
xor
mov
jae
mov
lahf
add
xchg
dec
add
pop
or
out
sub
adc
xchg
sub
out
js
cmp
lock
out
jge
pop
jmp
lock
push
adc
aam
out
ljmp
mov
ficoml
sbb
push
sub
test
das
xchg
or
cmp
fstl
mov
inc
jecxz
add
mov
add
dec
inc
mov
popf
xchg
insb
jecxz
inc
subb
jmp
push
cmp
sub
addr16
int
and
mov
inc
hlt
in
xor
jns
jmp
or
and
shlb
arpl
arpl
sbb
push
shl
xchg
gs
sub
jno
jge
dec
push
lea
mov
cli
stos
push
lret
cld
mov
sbb
mov
fsubrl
fs
push
sbb
lret
fxch
jne
in
add
jmp
stos
adc
jle
jecxz
jno
push
sub
or
or
dec
popf
and
pop
inc
push
iret
push
fdivl
pop
sbbb
xchg
mov
inc
jecxz
cmp
sbb
lods
pop
xor
pop
sbb
out
pop
cli
cmpsb
push
sub
aam
push
fnstcw
pop
pop
push
mov
jns
push
scas
mov
push
push
scas
repz
aad
xor
jecxz
iret
inc
adc
scas
mov
out
rclb
psubq
and
sbb
pop
mov
add
mov
adc
jge
sbb
out
outsl
xorl
lods
cmpl
int3
fwait
das
lods
inc
sete
popa
xlat
dec
dec
dec
dec
adc
loop
mov
mov
test
aad
push
in
jae
mov
mov
mov
cmp
mov
mov
pop
test
gs
jbe
inc
xor
outsb
shlb
das
test
insl
cmpsb
hlt
jnp
lods
fldenv
aas
jg
cli
pop
dec
es
xlat
andl
scas
mov
dec
aad
scas
push
or
push
ret
ljmp
push
adcb
xorb
or
addr16
jmp
jb
cld
push
shr
sub
out
xor
pusha
xchg
pop
push
and
cmp
popf
fs
jmp
into
or
je
lret
and
mov
jns
mov
add
in
push
mov
jge
pop
jge
sbb
outsb
dec
call
mov
push
idivb
mov
xor
sti
out
lods
mov
inc
jns
mov
loop
scas
inc
dec
push
jmp
or
cmp
gs
mov
jge
in
and
lds
or
xlat
mov
inc
xor
es
mov
in
pusha
pop
gs
divb
mov
xchg
mov
test
jle
call
dec
push
jp
xor
rorl
xchg
sbb
xchg
clc
xchg
xchg
cmpsl
call
mov
adc
insb
lret
mov
nopl
test
imul
sub
or
adc
pop
sbb
insl
jne
fdivl
lret
xorl
leave
cmpsb
scas
cmpl
fsubl
fstl
inc
loopne
pop
jp
or
add
jg
in
cld
sub
cmpsl
enter
cmp
adc
adc
mov
and
push
jp,pn
cmp
inc
push
push
in
jp
pop
jp
insl
in
pop
dec
aaa
fwait
pusha
jl
aam
mov
cld
fcompl
push
outsl
cs
cmp
dec
push
popf
jb
or
and
cwtl
cmpsb
dec
imul
fs
insl
outsb
loop
dec
pop
sub
lcall
fldl
aaa
xor
mov
mov
cmp
repnz
jnp
imul
sbb
mov
imul
scas
aam
jecxz
aam
mov
ljmp
inc
pop
mov
pop
jae
mov
and
roll
and
adc
inc
test
inc
lahf
movl
adc
push
sbb
fcompl
mov
fwait
hlt
addl
lock
push
dec
mov
paddd
hlt
std
jnp
lret
js
add
pushw
lods
mov
insl
xor
leave
std
lods
cltd
jl
repnz
inc
add
pushf
inc
xorb
dec
jle
ja
test
mov
sti
or
adc
hlt
leave
or
sub
jecxz
pop
dec
js
xchg
pop
push
mov
dec
lods
inc
mov
in
movsb
test
cmp
das
cmp
mulb
sbb
sbb
mov
aam
cld
and
xchg
stc
ds
cmp
ret
loopne
subb
push
xchg
jmp
lds
dec
stc
imul
aas
mov
rcll
pop
inc
popa
cmp
pop
jb
mov
repz
push
scas
dec
dec
mov
icebp
cmp
pop
rcrb
lahf
gs
in
sbb
mov
and
lcall
sub
test
xlat
cmp
fidivrs
imul
mov
shlb
int3
push
outsl
push
test
leave
jl
leave
cld
aas
or
xchg
mov
or
les
fsqrt
and
xorl
xchg
stos
dec
lcall
mull
lret
call
mov
lcall
mov
ds
adc
out
jmp
cltd
sub
mov
push
pop
or
dec
jns
sub
mov
icebp
aad
push
cwtl
ficomps
or
sti
inc
or
mov
sub
gs
cmpsb
lret
popa
xchg
and
cmp
adc
jle
pop
gs
sub
sbb
xor
mov
mov
popa
shl
dec
push
pop
imull
xor
xor
ret
cld
test
adc
mov
add
push
add
stos
fstpl
dec
addb
cld
cmp
mov
andb
jnp
jae
icebp
add
cmpxchg
arpl
jb
out
in
and
rclb
ljmp
test
xor
or
ficoml
test
sbb
shl
add
inc
xchg
mov
adc
mov
add
gs
pop
cmpsl
push
lds
les
cs
repnz
sub
add
jns
ds
pop
sbbl
movsl
xchg
mov
enter
cltd
or
imul
adc
imul
mov
sub
sbb
fdivs
inc
and
addr16
inc
rcl
sbb
outsb
out
cs
mov
fwait
cvttps2pi
ljmp
mov
out
mov
jne
out
adc
add
mov
xor
dec
sub
mov
subb
out
or
sbbb
push
clc
cs
adc
rolw
jne
xchg
jno
subl
fs
cmpsl
cmp
fists
cltd
inc
fwait
bound
les
imul
add
add
dec
out
aad
cmp
out
inc
out
stos
xchg
dec
jp
dec
and
scas
xchg
mov
sub
mov
xchg
lock
lahf
mov
lods
push
cmp
pop
imul
scas
repnz
shll
sti
insb
mov
push
leave
pop
mov
mov
and
jg
sub
fs
iret
aam
dec
stc
out
inc
dec
sbb
clc
xchg
lret
cmp
loop
mov
arpl
mov
jmp
out
and
into
jle
inc
je
and
cmpsb
cmpsb
mov
or
shlb
or
sub
dec
scas
push
into
push
push
sub
pop
fnsave
je
test
mov
mov
pop
xor
xor
nop
lret
inc
repz
sbb
add
adcl
dec
add
hlt
dec
mov
sbb
xchg
xor
mov
mov
popf
addr16
outsb
push
call
cmpl
loopne
pop
inc
lods
and
xlat
loope
ss
mov
cs
mov
push
mov
xchg
repnz
and
sub
jnp
dec
shrl
jle
lea
and
and
dec
inc
out
sub
jle
addr16
dec
in
cld
sbb
popf
in
sub
repz
insb
jmp
cmp
xchg
fldt
fldt
lods
pop
pop
shr
inc
add
push
mov
cmp
lret
xchg
lea
leave
inc
sub
dec
ret
aam
gs
pusha
xor
loop
stos
push
out
das
loope
test
add
popf
out
jmp
stos
dec
je
shlb
clc
and
dec
and
movsb
pop
rol
cmc
pop
mov
dec
sub
cmp
out
sbbl
mov
int
lea
dec
inc
xchg
fcompl
cli
divb
jns
cltd
sub
clc
lods
pop
pop
cmp
or
js
xchg
imul
mov
jge
push
ret
pop
dec
sub
or
cmp
mov
mov
xchg
push
test
push
push
jg
popf
mov
mov
mov
aas
mov
mov
mov
inc
mov
addr16
popf
add
rcl
lret
push
fwait
test
loop
ret
adc
add
push
mov
add
enter
inc
mov
movsb
push
pop
add
inc
jbe
inc
faddl
rcll
sbbl
repnz
dec
ffreep
push
mov
mov
xchg
mov
xchg
inc
xor
dec
insl
cmp
and
mov
mov
rolb
inc
add
adc
ja
ds
scas
push
add
and
dec
xchg
aam
shlb
int3
sti
sti
es
loopne
jne
lods
mov
dec
push
xchg
mov
pop
imul
mov
xchg
orb
xlat
rcll
lds
scas
jecxz
sbb
mov
gs
ffree
push
leave
lea
popa
cmc
ss
and
push
clc
mov
mov
add
test
test
add
ss
mov
mov
icebp
lods
pop
outsl
repnz
insb
stos
mov
inc
icebp
adc
cmpsl
sub
sbb
mov
mov
xchg
movsl
movl
nop
cmpb
sub
icebp
repnz
fnstsw
mov
add
or
mov
scas
fidivs
dec
mov
fwait
push
mov
fcompl
pop
jae
xchg
leave
dec
xlat
mov
scas
mov
mov
stos
fldl
js
mov
sub
rcll
les
xor
insl
shl
xor
xorl
xchg
roll
out
cmp
push
xchg
dec
xchg
and
dec
jecxz
cmpsb
mov
xchg
lock
outsb
sub
lret
dec
and
cmp
mov
hlt
inc
cmp
cmc
push
in
aas
push
mov
jmp
scas
adc
clc
mov
out
xor
aad
jne
sub
cwtl
fistl
je
pop
mov
sahf
out
movsb
pop
imul
dec
jae
mov
movsb
mov
push
aas
in
outsl
mov
adc
leave
push
jne
xor
mov
and
jecxz
subl
sub
inc
jle
jns
popf
jnp
cmpsl
vmwrite
loop
xor
std
scas
daa
clc
dec
pop
mull
pusha
lds
or
push
mov
add
shlb
mov
mov
lods
mov
jnp
mov
cld
and
push
sub
xchg
jb
xchg
sub
in
mov
iret
inc
repnz
scas
in
jnp
mov
stc
add
dec
mov
fsincos
lock
dec
maskmovq
testl
repz
cmpsb
stos
mov
sub
mov
out
push
movsl
inc
sbb
aaa
adc
jno
mov
in
mul
fidivrs
pop
jge
out
test
stos
add
dec
add
jg
inc
mov
xor
int
inc
incb
in
jo
hlt
rcrl
push
push
adc
pop
ret
push
mov
xchg
sub
outsl
lret
daa
jl
xor
mov
mov
adc
lret
je
cmp
rcl
frstor
popa
mov
sbb
cmp
dec
push
push
popa
das
imul
mov
or
sbb
xor
inc
and
addr16
push
loope
dec
int3
mov
imul
cmp
hlt
sub
jecxz
dec
push
pop
pop
xchg
fisubl
fs
mov
add
adc
lret
mov
mov
loope
in
cmp
pop
mov
cs
jns
lock
push
rolb
dec
roll
xor
clc
adc
push
es
or
inc
stos
fildll
sub
inc
push
jle
xchg
or
lods
div
xor
popf
mov
loopne
std
pusha
add
jg
movsb
aaa
mov
dec
lahf
cltd
leave
aas
and
pop
lock
leave
popa
decl
pop
leave
and
sti
mov
mov
add
daa
pop
mov
aam
adc
xor
pop
stc
jp
cmp
push
or
xchg
and
ret
insl
sbb
cmp
movsb
imul
clc
xor
sub
test
loopne
mov
ret
repz
add
psllw
jecxz
mov
movsb
test
aaa
adc
mov
repz
sub
adc
push
shrl
mov
lcall
mov
mov
lods
aaa
rclb
aaa
cmp
jb
inc
cmp
add
inc
lods
adc
stos
dec
imulb
jno
andb
inc
inc
mov
scas
loope
popa
or
call
push
gs
cltd
mov
out
inc
imul
scas
outsl
aam
loope
incw
jb
xchg
dec
dec
cli
je
dec
je
jno
jg
loopne
lret
sbb
shlb
sahf
mov
pop
or
and
inc
push
mov
dec
insb
xchg
or
mov
cmpsl
mov
rorb
stos
xlat
aas
inc
je
rorl
push
popa
cmpsb
popa
sbb
dec
lcall
stos
fwait
xchg
hlt
ja
xchg
xchg
mov
adc
insl
mov
adc
add
fcomps
xor
mov
jmp
cmp
push
loope
push
lcall
ss
and
mov
loop
sbb
out
sub
and
sub
dec
dec
jl
test
aad
ret
push
fwait
ljmp
inc
xor
insl
test
pop
cmp
ss
movsl
jmp
pushf
scas
stos
adc
and
fstpl
ss
mov
lret
incb
pop
aas
int
lahf
pop
icebp
dec
cwtl
mov
pop
xor
ljmp
push
aam
pop
xor
stc
cmpsb
jecxz
mov
push
pusha
xchg
cltd
js
leave
scas
add
jmp
leave
adc
inc
int
pop
fwait
push
xchg
push
gs
fcomi
fwait
stos
cltd
mov
push
pop
xor
jo
add
cmp
ljmp
in
mov
mov
sub
add
in
mov
rorl
pop
pop
or
jns
jo
xor
xor
lahf
add
sbb
lock
imul
sub
push
mov
scas
inc
sti
and
mov
mov
out
les
sbbl
and
fsubs
nop
pop
jmp
dec
push
xchg
outsb
in
lcall
ss
loope
in
testb
pop
pop
push
scas
out
add
or
jae
cs
push
gs
push
jge
out
ds
jg
pop
push
or
cmp
out
mov
mov
fiadds
subl
pop
or
add
and
in
push
jg
inc
loopne
pushf
fisttpl
inc
xchg
sahf
sti
jmp
xchg
mov
stc
jne
pop
or
pop
insb
movsl
sub
aas
sarb
xor
mov
sub
mulb
aad
adc
outsb
insb
pop
das
xor
ja
pop
fcomp
ja
xor
int
jnp
shlb
insb
sub
sbb
xor
sbb
clc
mov
xchg
mov
mov
mov
nopl
inc
mov
xchg
shrl
add
cltd
ret
jbe
xor
iret
shl
sbb
pop
incb
mov
insl
xchg
shlb
cli
loop
sub
std
cld
push
jno
adc
adc
shl
scas
cmpsb
lret
aas
test
js
decl
fcmovbe
rcll
cs
xor
cmpsb
mov
pop
filds
dec
insl
jns
cmp
adc
std
push
add
divb
jno
push
stos
and
bound
loope
ret
push
fwait
test
mov
jp
gs
out
and
ret
daa
push
mov
adc
sahf
pop
jno
test
mov
inc
add
aas
jne
dec
mov
sub
les
repz
call
inc
rcl
sbb
scas
xchg
sbbb
dec
and
add
out
jnp
ret
cmp
insb
lahf
sbb
push
testl
mov
aam
aad
inc
out
inc
imul
addr16
fs
cmp
sub
adc
in
mov
xchg
push
mov
jl
mov
movsb
test
pop
and
and
mov
int3
or
cmp
push
negl
push
xor
lods
mov
subb
mov
sbb
xchg
scas
icebp
cmp
jmp
cwtl
push
cltd
dec
pop
aam
insl
and
jns
inc
sbbl
pop
in
pop
jge
jno
call
add
adc
sub
lahf
repnz
push
addr16
movsl
mov
add
xchg
inc
push
ficompl
imul
aas
push
xchg
out
add
loope
gs
popf
cli
or
orl
mov
inc
cmp
gs
or
pop
mov
xchg
jge
jb
cmpl
jp
in
js
add
in
dec
add
sahf
cmpsb
mov
shrb
paddsb
sub
dec
mov
xchg
ds
or
mov
cmpsl
repz
ret
lret
dec
xchg
cmp
xor
pushf
shlb
jecxz
push
jns
cmp
add
jl
fs
mov
cltd
pop
inc
pushl
jbe
aaa
adc
sub
adc
add
into
in
fsubr
lods
mov
jae
cmpsl
lock
jo
dec
or
and
into
jl
test
test
xchg
and
pop
dec
jae
daa
dec
jecxz
pop
push
cmpsl
xlat
in
into
rep
sbb
clc
jns
dec
mov
cwtl
pop
dec
jb
jmp
aam
pop
loop
mov
loop
add
cmp
inc
outsb
ljmp
xchg
pop
add
imul
and
and
xor
cld
shrl
arpl
adc
inc
pop
fcom
cmp
das
pop
mov
sahf
xchg
enter
repz
xchg
adc
in
mov
ja
ja
loope
xchg
cmp
xlat
xlat
ret
jae
js
jo
in
cltd
jnp
inc
sbb
jecxz
jb
mov
xor
cwtl
lock
xor
inc
scas
jo
mov
shll
sub
mov
xchg
sbb
or
mov
fildl
loop
shlb
pop
and
aad
jge
sub
inc
cmp
xor
push
adc
es
lock
lods
js
jb
jg
es
xchg
push
inc
inc
lret
push
fwait
and
test
dec
and
iret
mov
xchg
gs
xor
fwait
jl
xor
pop
ljmp
rcr
pop
sub
ret
pop
fs
dec
pop
inc
ret
sahf
mov
call
rcll
sbb
pop
idivl
outsl
xlat
mov
rclb
xchg
mov
cmp
mov
dec
xchg
into
fwait
dec
adc
push
push
nop
out
mov
mov
lcall
test
movsl
loopne
mov
clc
sub
ret
mov
mov
push
fmuls
out
xor
fiadds
mov
hlt
pop
nop
mov
inc
in
mov
insl
imul
inc
dec
jne
lea
sar
das
jmp
xchg
arpl
push
lcall
jecxz
vmread
sub
sbb
lahf
inc
mov
jae
jns
cmp
jle
add
add
and
sahf
jno
mov
cmpsb
in
pushf
mov
js
and
inc
dec
mov
mov
negl
push
pop
lock
or
push
fsubs
cltd
jns
xchg
add
lret
push
or
in
lods
leave
pop
popf
lock
nop
or
les
mov
std
sub
sub
cmp
es
pop
sub
mov
sub
pop
ds
adc
fs
hlt
push
push
cmp
pop
xchg
or
pusha
lahf
pop
xor
pop
adc
insb
fmul
outsb
fnstcw
inc
xchg
xor
pop
push
sub
cmp
rorl
xchg
std
repnz
mov
pop
scas
ds
mov
or
cmp
pop
lods
frstor
xor
add
leave
push
sbb
aas
pop
je
dec
mov
cmp
lcall
mov
mov
cmc
mov
mov
push
mov
or
mov
shll
cs
inc
das
rorl
push
jl
loop
sbb
mov
xchg
rcrb
bound
out
pop
bound
dec
cltd
xchg
push
ds
mov
jg
mov
movsl
into
jle
in
test
push
fisubrs
je
sub
aaa
das
mov
test
xchg
jb
mov
xchg
iret
ret
jbe
stos
cmp
ljmpw
and
mov
push
clc
jo
jo,pn
mov
int
xchg
xchg
inc
jbe
sub
insb
or
cmpl
subb
in
xlat
in
sahf
sbb
xor
cld
out
lea
notb
nop
movsl
daa
xchg
dec
ret
int
pop
mov
leave
jo
icebp
inc
leave
xchg
sub
mov
aaa
bnd
dec
ss
cs
mov
scas
nop
sti
cmp
popf
sarl
dec
xchg
xor
pop
loop
adc
mov
in
movsb
and
dec
sbb
xor
popa
std
les
xchg
or
push
lret
cmp
cmp
lds
psubusb
mov
sarb
fcoms
fs
shlb
lcall
sbb
jne
rorl
pop
cmp
inc
xchg
insb
cmc
jne
pop
stos
pop
xor
fs
std
push
mov
push
rorb
loop
push
lods
out
add
cmp
jne
jne
pop
lea
push
or
in
imul
popa
inc
icebp
pushf
cmp
sarl
and
push
loope
xor
mov
mov
jmp
mov
cmc
jb
dec
fwait
lods
jne
cmp
ficompl
mov
xor
add
subl
popa
inc
aaa
movl
jo
xchg
pop
jo
lods
andl
cmp
adc
xor
xchg
sahf
ss
std
mov
pop
cmp
sbb
adc
fdivl
fmull
insb
test
jecxz
jo
test
cli
sarl
mov
sub
or
nop
mov
aaa
xchg
popa
inc
rclb
das
in
xor
ret
push
and
pop
mov
mov
add
mov
sbb
pop
repz
in
jnp
cmp
inc
adcb
sbb
and
fmull
sti
popa
jo
mov
cli
loope
lock
ja
ret
icebp
inc
jmp
shl
dec
fistl
and
adc
test
outsb
fidivrs
addl
mov
inc
mov
pop
fs
add
popf
lcall
sbb
sbb
repz
mov
fnstenv
xchg
mov
shlb
stos
icebp
shlb
js
mov
cmp
sub
fidivs
pop
stos
mov
mov
or
jmp
imul
mov
mov
pop
repz
cmc
test
test
je
ret
inc
or
pop
ljmp
lods
cltd
mov
cld
in
xor
xchg
sbb
hlt
push
adcb
shrb
mov
je
xchg
in
dec
mov
push
cmp
cmp
jg
add
andb
nop
int3
dec
movsb
arpl
mov
xchg
mov
nop
add
mov
push
and
adc
ja
in
push
cmp
push
ficoml
je
ja
mov
sahf
fidivrl
sbb
sub
or
imul
mov
repnz
adc
and
mov
fs
xlat
mov
push
cmp
ret
cmp
cmp
dec
cmp
adc
popa
inc
xor
pop
xor
hlt
out
xchg
sub
add
xchg
int
or
sbb
xorl
push
xchg
cmp
mov
dec
sub
insl
sbb
ss
and
dec
outsb
outsl
inc
hlt
sbb
xlat
pushf
pop
add
rcll
push
cmp
adc
or
lds
sbb
fdivl
sti
testl
cli
loopne
jl
sbb
test
bound
jecxz
lcall
cs
std
sahf
and
je
adc
and
in
push
and
add
xchg
and
cmp
cmp
mov
stos
xor
mov
pop
add
imul
lds
outsb
nop
rclb
sahf
cmp
outsb
push
or
sub
and
sti
hlt
inc
mov
icebp
sahf
incb
pop
or
out
pop
scas
adc
sub
hlt
cmp
mov
lea
push
rcll
lds
inc
jne
mov
dec
xor
aam
lds
adc
cltd
fwait
jmp
jl
sahf
shll
sub
pop
cwtl
lcall
in
pop
insl
mov
mov
xchg
inc
mov
pop
push
fs
lret
into
add
and
adc
cli
out
or
je
mov
push
and
in
das
icebp
xor
int3
bound
stos
adc
push
movsb
xchg
gs
in
inc
scas
pushf
mov
bound
arpl
mov
mov
andl
add
mov
int3
mov
and
imulb
pusha
push
lret
lds
xchg
loope
pop
sbb
je
mov
in
and
jno
cld
xor
mov
dec
cmp
daa
stc
lahf
xchg
or
dec
fildll
pop
imul
inc
mov
test
fbstp
movsb
arpl
cwtl
or
sbb
mov
imul
sbb
jne
mov
fisttpll
pop
jle
inc
fcomip
push
jmp
pop
mov
sbb
xchg
ret
jg
mov
mov
dec
xor
pop
mov
mov
inc
lahf
repz
fildl
push
insb
cmp
cmp
test
pusha
js
shlb
push
pop
aad
ret
push
mov
cmp
roll
enter
fucomip
dec
ficomps
mov
loope
push
push
xchg
mov
jl
je
xor
in
nop
and
test
adc
mov
negl
not
insb
xor
xchg
ret
rorl
ss
jno
stos
in
add
lret
out
movsb
sbb
dec
ljmp
test
repz
and
sbb
add
lods
lea
mov
mov
and
cmp
iret
cwtl
sub
push
mov
add
sti
loop
das
push
mov
and
push
inc
out
je
inc
imul
icebp
xor
dec
insb
push
sbb
pop
notl
sub
mov
stos
hlt
aad
xlat
cld
test
fstp
loopne
cltd
mov
dec
fsubs
fwait
push
popa
xorl
aam
jmp
jl
pop
or
jnp
and
mov
sbb
and
inc
mov
mov
push
adc
ljmp
mov
jne
enter
mov
repnz
jge
jp
add
lods
mov
not
mov
inc
adc
out
mov
and
jnp,pt
xor
into
xchg
jns
aad
push
jns
adc
inc
leave
push
fcmovnu
aaa
into
addr16
jmp
dec
pop
repnz
fyl2x
loope
sbb
into
mov
lds
or
cmp
stos
pop
fistpl
insb
adc
mov
inc
aaa
in
shll
add
push
jns
icebp
ja
lret
and
hlt
test
cld
add
das
icebp
mov
push
add
rorl
and
sub
push
rorb
clc
push
xchg
mov
add
mov
div
in
pop
xor
outsl
fdivs
fbstp
dec
cwtl
mov
inc
imul
adc
pop
loop
mov
inc
loop
xchg
pop
aad
pop
stos
pop
dec
loope
ficoml
dec
push
mov
imul
int3
jge
inc
call
loope
lcall
mov
pop
and
pop
push
pop
rol
jnp
mov
clc
jbe
fistl
add
mov
fnstcw
arpl
imul
mov
out
roll
sub
call
xor
add
out
push
mov
pop
xchg
mov
sub
and
rcrl
movb
movsl
and
adcb
pop
xlat
sti
aaa
xor
cmp
mov
cmp
repnz
bound
push
xchg
ljmp
mov
ret
inc
jns
jno
ret
cmp
ss
cmp
sub
sarl
xor
das
aas
fldlg2
push
push
lock
push
and
test
in
clc
inc
popf
jmp
mov
aad
movsb
mov
test
jae
xchg
mov
cmpb
out
and
fiadds
in
insb
pusha
mov
jmp
daa
jmp
out
cmpsb
mov
add
sbb
sbb
add
ja
jae
inc
ljmp
insl
inc
xorb
or
xchg
loope
lcall
push
push
es
mov
sti
out
cmpb
les
jnp
pop
popa
fnstsw
add
push
sbb
cmp
sub
dec
not
pusha
mov
jae
scas
pushf
and
cwtl
mov
cmp
test
in
add
xchg
jg
push
xchg
daa
mov
xchg
addr16
adc
xchg
fs
or
pop
popf
popa
daa
and
bound
mov
sub
and
outsb
dec
xchg
xor
pop
enter
jb
cwtl
cmp
pop
ficompl
hlt
and
gs
stos
dec
test
mov
popf
lahf
and
jl
xlat
into
es
bound
xchg
xchg
mov
cmp
push
test
cltd
push
mov
mov
jle
mov
mov
cmp
vmulps
bound
jle
divl
lret
dec
pop
loop
push
xchg
enter
mov
fsubs
mov
jg
jp
xlat
mov
les
movsb
or
repnz
inc
cmpsb
xchg
push
sub
movsb
jmp
cmp
pop
inc
jno
dec
rorb
mov
imul
mov
xchg
cwtl
out
fs
adc
aaa
sub
mov
pop
sbb
nop
inc
mov
add
stos
xor
inc
adc
out
push
rorb
lock
push
push
shlb
outsl
fdivl
lds
sub
sahf
add
mov
out
sbb
stos
movsb
cli
outsl
jno
das
insb
push
and
out
outsl
imull
xchg
add
int3
in
adc
pusha
lea
dec
not
mov
sbb
repz
push
sbb
cwtl
sti
xor
and
lods
mov
sub
jle
mov
stos
push
in
ja
lret
scas
std
fdivrl
sarb
pop
int
fwait
fwait
pop
add
cmp
lds
out
mov
and
test
orb
adc
bound
into
test
loope
cwtl
ficoms
rolb
mov
pusha
mov
repz
dec
inc
addl
adc
outsl
fldt
out
ficomps
mov
sbb
xor
mov
mov
rorb
mov
sbb
jb
js
ret
jnp
popa
out
sbb
mull
int
jnp
call
pushf
pop
push
js
sbb
mov
cmp
pop
push
in
ret
nop
fsubrp
shrl
mov
sbb
repnz
out
mov
add
jle
mov
jl
xor
insb
clc
cmp
xor
loopne
xchg
add
mov
xor
das
cmp
fdiv
orb
ja
test
cli
punpckhbw
cld
ja
inc
push
cmp
inc
and
adc
jne
sub
mov
orl
jmp
dec
pop
xchg
sub
icebp
leave
inc
xchg
and
aad
push
ret
inc
cmp
mov
in
mov
out
ja
push
and
pop
stos
pop
jmp
stos
dec
shrl
imul
test
jg
xchg
lahf
sub
inc
sti
inc
cmpsb
int
pusha
out
aam
and
cli
ljmp
int
sub
xor
mov
icebp
push
push
in
shlb
mov
outsl
cmpsb
dec
lods
sbb
aaa
gs
xor
lock
into
pop
mov
adc
ret
mov
ljmp
daa
les
fcoml
mov
in
fwait
xor
int
js
sti
gs
loopne
shr
mov
sbb
bound
lea
xor
or
addr16
xor
jns
mov
xchg
jp
jns
fs
ss
ss
fmuls
push
negb
mov
jo
lret
sbb
divb
mov
cltd
or
dec
mov
in
mov
addr16
jne
scas
int3
data16
cwtl
in
imul
loop
jl
loope
outsb
loope
jl
push
cwtl
push
outsl
push
mov
or
test
js
and
into
or
outsb
pop
nop
xchg
bound
lret
add
mov
sub
fsubrs
decl
mov
in
cmpsb
mov
dec
dec
test
inc
push
dec
ret
cmp
adc
add
lret
sarl
filds
loopne
jge
xchg
pop
idiv
mov
iret
int
cs
push
inc
iret
inc
dec
mov
jb
divb
add
push
leave
mul
hlt
mov
sub
sarl
sbb
mov
into
lahf
ljmp
scas
pop
mov
cmp
int3
mov
mov
out
stos
cs
pop
pop
adcb
aam
lds
mov
xor
stc
dec
sbb
mov
mov
fucomp
sub
fiadds
and
icebp
and
mov
push
scas
shrb
stos
push
mov
orl
push
lcall
shrl
scas
jp
adc
outsl
inc
jge
inc
addl
test
xor
xchg
les
push
cmp
push
pop
stos
into
and
mov
dec
pop
into
and
fildl
adc
push
stos
add
add
cli
loope
je
jbe
pop
dec
pop
jl
add
jg
roll
mov
in
xchg
ljmp
jl
icebp
stos
xor
leave
gs
insl
mov
insl
lods
addr16
or
ljmp
sub
mov
inc
adc
jmp
testl
push
sbb
sbb
mov
cmp
jle
sbb
test
cmpsb
std
inc
les
pop
xor
mov
jb
dec
cmpsl
jae
push
aaa
sar
push
push
fs
ret
cmpsl
push
mov
inc
push
push
test
or
loopne
and
std
fcmovne
and
sti
stc
jg
iret
cmp
mov
je
jg
js
mov
add
pushw
mov
mov
adc
adc
cmp
iret
xor
mov
pop
popa
push
lahf
pushf
dec
test
push
ret
fscale
sub
stos
pop
mov
inc
and
adc
cltd
inc
or
sub
cmp
inc
daa
and
jecxz
pop
mov
lret
outsl
jge
or
in
scas
push
shr
cli
xor
outsb
pop
sarl
mov
mov
sbbl
jo
xchg
xchg
jg
pcmpgtw
loope
push
loope
data16
jle
arpl
je
lahf
in
or
or
cld
xchg
sub
ret
xor
xchg
in
iret
loop
jns
lret
pop
sub
movsb
nop
xchg
push
cld
push
add
es
cmc
pop
mov
inc
cmp
imul
push
adc
ja
lock
dec
pop
mov
or
pand
add
cmp
imull
mov
sub
addr16
lcall
mov
jmp
pop
into
mov
jns
xor
cmp
adc
push
leave
sbb
mul
or
clc
xor
and
add
dec
mov
mov
sub
jo
mov
out
jnp
dec
divb
pop
fdivr
add
subb
xchg
jge
dec
mov
sbb
jp
repnz
jl
stos
xchg
test
dec
add
cmp
push
xor
sti
addl
inc
arpl
aaa
decl
fnstsw
sub
xchg
xchg
ljmp
push
and
cmp
aas
and
mov
out
lcall
xlat
cmp
sbb
inc
imul
outsl
and
add
mov
mov
xor
jbe
add
fcoml
xchg
fists
cmp
aaa
jp
das
ja
mov
ret
mov
or
ljmp
mov
mov
or
lret
pushf
xchg
popf
sbb
mov
push
jb
push
adcl
imul
sbb
sbb
cmp
push
test
mov
mov
lods
cs
mov
stc
fistpl
andb
cmp
pushf
or
and
daa
push
popa
push
add
push
or
pusha
stc
sbb
sub
xor
xchg
jbe
jbe
push
xchg
xchg
dec
into
xor
lods
sbb
clc
push
mov
popa
lret
imul
push
pusha
push
push
pop
push
adc
mov
mov
push
scas
add
dec
or
ja
adc
xchg
sub
lock
adc
ret
add
outsl
sub
adc
sub
xor
mov
fstpl
xchg
or
cmc
pop
sbb
inc
cmpl
fnstsw
sti
mov
ja
test
xor
mov
mov
inc
ret
cltd
jne
inc
inc
push
adc
pop
sbb
mov
push
sub
imul
gs
stos
into
mov
sbb
mov
jle
xor
pop
movsl
jo
sbb
pop
icebp
lahf
ret
sub
stos
mov
inc
mov
adc
bound
pushf
and
sub
mov
sbb
ljmp
out
arpl
push
xor
dec
popf
dec
daa
cmc
aad
mov
gs
iret
scas
lods
fwait
jge
inc
loopne
xchg
jmp
imull
negl
clc
lahf
jns
dec
outsl
out
pusha
sub
jae
sbb
test
pop
jnp
mov
jnp
mov
add
xor
js
dec
sub
aas
xlat
outsl
adc
dec
stos
imul
add
inc
add
aas
add
lods
pop
les
pop
or
pop
stc
fs
std
inc
lods
lods
mov
add
dec
aaa
cld
jmp
shr
pop
daa
pop
push
int3
mov
mov
add
add
cmp
nop
shr
and
lock
or
pop
adc
inc
xor
loopne
insl
mov
imul
push
loop
xor
shl
dec
mov
xchg
lahf
and
dec
rcl
jne
inc
push
ret
leave
jo
jno
popa
int
lds
and
mov
enter
ror
in
push
xor
inc
fstps
loop
mov
fnstcw
mov
sub
in
jne
cmp
mov
mov
cwtl
sub
cmc
fnstenv
sub
push
enter
mov
cltd
repnz
mov
adc
pop
jo
xchg
and
shrb
adc
imul
or
dec
out
mov
cmp
add
popf
jno
call
pusha
ret
sub
dec
ss
les
push
in
ret
loop
lea
cld
ljmp
je
rcrl
mov
mov
loop
sub
push
adc
dec
imul
cmp
imul
ficompl
sub
pop
adc
loop
pop
cmp
in
jae
lret
jno
sbb
fdivrs
sub
ds
adc
test
and
mov
ret
mov
orl
in
push
cvttps2pi
mov
cmp
pop
pushf
adc
test
and
mov
js
sub
mov
xchg
push
ret
cmp
ror
and
dec
jp
mov
inc
call
xchg
cmp
push
dec
shlb
mov
popf
pop
shrb
in
imul
fidivs
sarl
add
cmp
xor
inc
or
fnstcw
add
xchg
sbb
pop
mov
mov
jns
jle
cmpsl
push
call
in
cmpsb
mov
pop
adc
in
repnz
nop
sbb
push
jnp
cmp
call
inc
adc
fmuls
int
mov
arpl
orl
push
cmp
cltd
sub
clc
fcmovu
test
or
imul
xlat
cmp
sub
mov
pop
leave
mov
daa
jl
xor
mov
push
aaa
cltd
lea
cld
jge
adc
mov
loop
sti
dec
fisttpl
pop
pushw
int
mov
in
sub
std
je
adc
pop
shlb
call
ljmp
incl
lock
jo
and
subb
sub
inc
lret
mov
push
and
sub
xchg
push
adc
inc
mov
mov
sub
sbb
or
mov
lods
ret
or
adc
adcb
lret
mov
test
push
sub
lock
aad
add
jmp
push
ss
nop
out
push
push
mov
outsl
or
stos
mov
jl
cmp
aas
std
sub
loopne
sub
ret
pop
cmp
inc
aaa
cld
mov
js
and
scas
sar
cmp
and
xor
or
int
shrb
mov
sti
gs
gs
or
arpl
fdiv
scas
inc
loopne
adc
les
push
pop
jmp
ds
add
push
lret
jo
pop
add
imul
into
aaa
aad
push
xchg
lahf
mov
xor
xchg
add
fidivrs
fimull
inc
out
xlat
movsl
stc
leave
sub
das
jne
int
fbld
push
push
pop
ror
mov
and
mov
push
js
sub
dec
push
dec
fadds
loop
pushl
das
fwait
jne
clc
dec
cmp
subl
jno
cmp
push
data16
sbb
pop
lret
xorl
fadd
lock
or
aad
xchg
out
in
mov
insb
pop
push
pop
sbb
or
call
fsubrl
jbe
aam
jno
xchg
adc
in
adc
stos
test
jns
and
ffreep
mulb
jmp
jmp
mov
sahf
mov
add
fmull
sbb
orl
jp
test
loope
arpl
xchg
push
cmp
test
and
mov
test
shr
enter
mov
out
and
add
scas
test
test
movsl
mov
fdivrs
call
cmp
ja
daa
lds
in
pop
push
stos
xlat
pop
sub
jno
in
int3
xor
divb
lret
cwtl
in
pop
jg
ds
mov
push
icebp
lock
cmp
andb
dec
mov
inc
stos
sub
jle
mov
dec
lahf
les
mov
imul
mov
nop
inc
iret
rorb
add
iret
insb
xor
and
xchg
lcall
rclb
jmp
js
pop
test
test
test
in
es
cli
mov
fs
mov
pop
mov
and
popa
addr16
out
adc
mov
fists
pop
in
out
lret
std
test
mov
jae
cli
mov
into
jno
lret
inc
ss
ret
pop
iret
xchg
jo
or
and
cs
sub
mov
mov
push
or
testl
addl
push
mov
push
jae
inc
mov
lret
rcr
out
pop
fcoml
sub
push
cmp
jns
addr16
bnd
cmpsl
push
xchg
fstpl
roll
into
ret
movntq
dec
inc
iret
xchg
cmp
std
sahf
ret
adc
hlt
jno
or
pop
xchg
cmpsb
clc
lods
jns
dec
lods
aad
test
sub
pop
cmpsb
sti
push
outsl
lea
dec
in
sbbl
push
stc
js
pop
push
pop
test
push
int
sbb
push
push
pop
mov
in
jns,pn
xchg
inc
cwtl
dec
repnz
or
pop
mov
out
inc
rcrw
dec
jae
pusha
mov
loop
mov
mov
frstor
bound
pop
push
icebp
mov
inc
add
adc
cmp
lret
fwait
outsb
and
imul
mov
pop
mov
mov
push
cmp
jle
dec
jo
or
add
cmc
sbb
cmp
jl
pop
sahf
lret
rcl
stos
mov
jmp
outsb
add
jnp
sub
mov
pop
test
push
outsb
sub
ss
es
arpl
in
rclb
popf
push
xchg
into
add
pop
inc
scas
loope
push
xor
rclb
jae
jne
jno
sbb
test
rcr
sti
lods
xor
push
pop
sarl
lahf
sub
mov
out
push
insb
or
mov
or
xor
adc
ficompl
adc
js
mov
mov
dec
push
pushf
rcrl
movsb
mov
dec
xchg
dec
aad
out
test
mov
ret
xor
shl
outsl
lret
aad
xor
in
xor
mov
xlat
inc
scas
mov
sbb
gs
test
mov
fistl
test
push
jbe
aam
xchg
les
mov
sti
nop
lahf
xor
les
add
sbb
jne
arpl
inc
or
sysexit
arpl
sub
sub
mov
fildl
faddl
ret
sub
pop
lcall
adc
or
ds
push
adc
sarl
popa
xchg
pop
inc
out
ss
cld
sbb
xchg
fimull
and
mov
push
sub
lcall
xchg
sbb
subl
adcb
pop
cltd
inc
shlb
push
cmp
iret
in
movsl
sbb
push
in
push
jp
push
pop
pop
call
sbb
mov
push
std
stc
cwtl
mov
cmpsb
repnz
repnz
fldcw
jne
mov
xchg
xchg
or
subl
mov
pop
adc
sub
and
mov
int
lret
scas
sahf
pop
mov
mov
add
jmp
inc
sub
daa
aaa
sbbb
mulb
ja
jo
xchg
test
fcom
jl
fsubp
call
mov
js
fiadds
aam
or
push
pop
in
jg
and
fs
test
mov
retw
movsb
jnp
xchg
and
gs
in
hlt
adc
leave
sub
jmp
cmp
jp
mov
xchg
ss
fucomip
movsl
mov
cmc
push
adc
mov
jb
stos
ja
cltd
mov
mov
sbb
clc
or
gs
push
sub
jmp
xor
movsb
lret
mov
popf
xchg
or
jb
into
mov
iret
pop
push
mov
mov
adcb
lcall
ret
sub
jb,pt
add
inc
lahf
cmp
push
cltd
test
push
push
stos
push
sub
inc
call
aad
sbb
movups
nop
and
imul
or
pop
and
js
inc
mov
dec
sbb
adcb
out
insb
shlb
stc
fs
inc
sbb
roll
pop
xor
cltd
scas
aaa
cmp
pop
xor
sbb
adc
mov
sub
cmp
aam
inc
movsl
inc
rorl
cmp
in
loopne
pop
jnp
int
scas
or
adc
push
pusha
cmp
mov
inc
imul
rclb
das
jp
dec
dec
fiaddl
pop
push
xor
jbe
jno
or
enter
out
cmp
sub
test
jg
jbe
pop
ljmp
push
repnz
dec
mov
das
mov
std
xor
push
xchg
lods
stc
aaa
jbe
cmp
pop
mov
sub
mov
in
jge
shr
mov
shr
lock
mov
xchg
js
ja
push
push
xchg
xchg
push
repnz
das
push
mov
add
push
lcall
jne
cmpsl
xchg
adc
and
js
pop
mov
cli
cwtl
mulb
cmp
in
shlb
fcomip
into
xor
fisubrs
pop
setl
xchg
jno
mov
mov
mov
cmc
es
mov
stos
xchg
in
shll
inc
fiaddl
mov
popf
jge
dec
cwtl
sbb
insl
out
push
or
mov
lods
sbb
arpl
aaa
sub
add
fdivrl
sub
jmp
mov
iret
std
or
das
ja
leave
mov
les
push
iret
out
test
add
test
cmpsl
outsl
loop
sub
in
test
xor
call
cwtl
lock
dec
xchg
addb
inc
cmpsb
int3
loopne
in
sbb
adc
test
icebp
dec
bound
mov
xor
add
jo
and
mov
insl
dec
mov
icebp
inc
stos
repz
fdivl
mov
ljmp
sub
sbb
enter
mov
imul
fstpl
mov
pop
xchg
sbb
popf
lret
mov
fsubr
arpl
out
jl
notb
ds
adc
cmp
ret
push
pop
xor
aad
int
pop
lock
movsl
xorl
dec
test
push
rcr
add
cli
dec
mov
and
xor
adc
add
sub
dec
and
mov
push
out
sbb
push
int
cld
test
cmp
mov
rorb
mov
enter
outsl
and
orb
or
fisubs
xchg
jecxz
outsb
pusha
mov
or
jg
pusha
enter
dec
xchg
cld
mov
adc
lods
adc
add
lcall
js
pop
popa
std
jecxz
xor
fadds
pushf
pushw
int
and
lea
xor
jne
inc
fneni(8087
mov
push
push
and
xchg
add
mov
stc
pop
cli
xchg
lahf
ficoml
mov
inc
clc
or
mov
outsl
int
xor
and
sub
sub
dec
pop
mov
das
inc
imul
call
dec
cmp
or
jg
xchg
ss
and
cmp
pop
xor
inc
push
add
xchg
inc
mov
jecxz
and
pop
push
popa
push
mov
pop
push
xchg
mov
aaa
outsl
push
sub
jo
push
jmp
sbbb
imul
cmp
es
jo
adc
inc
cmp
stos
mov
dec
lret
fdivrs
lahf
inc
mov
fldl
push
mov
mov
cwtl
mov
mov
push
movl
sub
mov
icebp
fistpll
lret
sbb
mov
mov
test
jbe
stos
mov
aad
or
pop
mov
dec
mov
sub
inc
lcall
lock
lods
jl
lods
dec
fdivrs
iret
mov
xchg
call
xchg
hlt
sub
mov
sbb
lahf
inc
xchg
dec
ljmp
pop
dec
das
inc
mov
popa
enter
push
xchg
adcl
popa
or
cmp
dec
jl
adc
frstor
xacquire
fstpl
add
dec
rcrb
aas
ljmp
jge
pop
mov
push
xchg
les
adc
mov
cmp
pop
aam
popa
lods
mov
jne
insl
rcrb
sub
icebp
and
dec
and
sar
lock
adc
xchg
add
shl
out
dec
jle
add
in
mov
movsb
outsb
jo
pop
jl
dec
into
in
inc
fcoml
cmp
jbe
ror
cmc
cmp
cmpsb
inc
stc
out
aas
xchg
push
in
repz
jno
mov
push
je
jbe
fldl
not
xchg
stc
dec
xchg
ds
dec
mov
push
mov
jg
das
push
pop
das
xchg
pop
push
jg
rcr
jb
pop
cs
cmpsb
add
pushf
lcall
lds
xorb
adc
dec
pop
lods
xor
leave
push
ficoml
mov
out
lahf
jbe
movsb
js
cwtl
cmp
aam
out
sub
out
cmp
sbb
dec
bound
pop
or
cmp
jnp
lea
xchg
rorl
idiv
xor
test
jnp
sub
shlb
push
cmpl
dec
cmp
dec
cmc
fwait
cld
rcrl
fs
mov
in
cmc
out
sti
jo
and
mov
xchg
add
daa
mov
loopne
dec
cmpsl
xchg
daa
jmp
icebp
adc
cmc
clc
fldenv
lcall
loop
aaa
lods
sbbb
jg
cld
sub
cmpl
ficoml
adc
je
pop
in
rorl
and
jl
out
stc
push
cld
xor
repnz
cli
sub
add
add
fwait
ret
test
lock
pop
inc
sarl
mov
sub
lea
and
insl
aad
cmpsl
sub
hlt
loop
subb
or
mov
or
jl
arpl
lea
test
adc
jle
cmp
xor
daa
iret
jecxz
xor
sarl
sbb
push
dec
scas
test
inc
in
and
stos
or
cmp
into
hlt
add
idivb
into
dec
ror
xor
movsl
cmp
xchg
xor
xchg
jno
leave
jle
fisubl
mov
xchg
push
inc
jl
call
dec
hlt
mov
push
push
mov
cmp
sbb
sub
sbb
mov
repnz
inc
scas
fadds
fnsave
ret
dec
gs
sbbl
sbbb
adc
inc
mov
es
mov
cmp
and
inc
cltd
cltd
enter
push
push
xor
int3
mov
cwtl
push
cltd
out
mov
xchg
jnp
call
push
add
sbb
cs
mov
jecxz
insl
hlt
xor
out
xchg
add
mov
cmp
xor
lds
cld
rcl
cmp
sbb
push
out
aam
lcall
sbb
pop
pushf
mov
jnp
mov
jb
push
movsl
in
arpl
sbb
jp
mov
outsl
mov
ljmp
jno
mov
nop
sbbb
jnp
push
xor
loope
jle
fadd
push
test
jno
or
inc
jo
jo
jg
xlat
add
fldcw
mov
out
in
addb
mov
sbb
sbb
inc
xchg
gs
loope
mov
insb
addr16
add
out
aas
add
xchg
dec
mov
mov
lahf
xor
lods
add
cmp
fsubp
sbb
inc
leave
es
mov
and
das
mov
gs
int
flds
pushf
std
fisttpl
add
mov
push
cmp
test
jecxz
or
ja
mov
mov
popf
cltd
fnsave
adc
add
cmp
jo
sbbb
xchg
rcrl
daa
sub
sahf
in
sub
jne
aas
xchg
inc
enter
jle
rcrl
cmp
jne
or
xor
mov
int
or
jae
mov
adc
fistps
in
push
adc
xor
clc
ret
daa
filds
and
or
test
test
mov
mov
push
xchg
inc
pop
add
mov
outsb
pop
mov
std
in
push
mov
std
imul
dec
inc
or
jo
js
sbb
data16
and
pop
sub
inc
call
idivl
sbb
cmp
push
or
lock
sbbl
imul
and
mov
js
dec
mov
lret
cmpsl
adc
fdiv
xor
adc
out
mov
cmp
std
shll
jbe
xchg
mov
mov
jg
daa
aaa
js
pushf
shrb
mov
jl
insl
sbb
es
cwtl
cli
out
js
mov
sar
test
mov
jno
mov
mov
add
dec
adc
not
xchg
mov
dec
mov
sbb
inc
les
xchg
adc
lods
mov
xor
xchg
ds
xlat
cmc
cmp
mov
mov
and
mull
fwait
mov
and
xchg
jecxz
ja,pt
fcoml
jns
sarl
mov
sub
mov
sbb
push
fsubrp
pop
mov
aaa
mov
fisubrs
mov
mov
or
pop
mov
adc
aas
jl
push
cmp
xchg
dec
mov
and
loop
aas
add
jae
loope
xchg
pop
jae
arpl
push
cmpsb
sbb
enter
adc
xchg
std
fstps
sub
pop
mov
inc
jp
movsb
xlat
jns
call
adc
mov
stos
push
popa
imul
shll
cmp
mulb
xor
pop
pop
cld
enter
pusha
xlat
push
add
leave
dec
cmp
add
jbe
jmp
and
fistps
stos
or
mov
pop
xchg
stos
pop
adc
test
int3
ja
in
stos
xchg
cmp
sub
mov
js
outsl
adcb
outsb
repz
insl
sar
push
jne
cmp
pusha
arpl
rorl
xchg
mov
sar
and
push
fistl
push
or
ss
and
stc
inc
popa
call
lock
cmpb
pop
out
and
jbe
imulb
pushf
inc
add
pop
out
mov
cmpsb
fstpt
sbb
js
xor
cmpsl
loop
out
ret
inc
xlat
cmp
fdivl
repnz
sub
repnz
fdivp
hlt
in
dec
pop
push
sahf
lock
cmp
mov
or
or
add
enter
cmp
rorl
xchg
pop
aaa
xchg
jbe
adc
in
push
mov
repnz
xchg
les
sbb
pushw
mov
in
fcompl
inc
mov
lahf
cmp
and
cwtl
mov
bound
push
adc
push
nop
int
orb
jmp
cmp
sbb
sub
dec
out
jmp
xor
mov
push
cli
pusha
xlat
pop
lods
adc
mov
pop
mov
cmpsl
rcl
sbb
mov
ficomps
mov
shlb
out
mov
aaa
mov
lret
scas
add
lods
movsb
in
test
adc
xor
hlt
mov
stc
loopne,pn
cmp
xorb
in
push
aam
flds
aas
xchg
push
pusha
lret
test
stc
shll
aaa
jle
mov
jns
cld
ja
movsb
paddusw
mov
add
insb
xchg
mov
adc
jl
xchg
js
aad
sbb
dec
and
mov
or
mov
ret
mov
add
xchg
nop
mov
fdiv
faddl
fcomi
imul
loope
jb
rclb
andl
pop
out
jle
pop
stos
arpl
mov
pop
mov
xchg
je
xchg
lea
add
fs
xor
iret
icebp
mov
aam
adc
cmp
pushf
xchg
mov
iret
push
inc
mov
flds
pavgb
dec
add
hlt
out
sbb
xor
push
addr16
mov
lcall
jne
out
popa
add
jle
add
ret
je
sbb
sub
mov
repz
mov
pop
adc
enter
das
and
lds
and
cmp
mov
and
jle
inc
pop
out
or
scas
into
fstl
fiadds
pop
sub
jecxz
fs
xchg
jno
xor
lods
rorb
cmpsb
add
cmpsb
push
jb
pop
xor
in
sbb
call
sahf
cwtl
std
test
jo
dec
mov
xor
or
lods
rclb
shlb
jb
out
int3
pop
xchg
inc
push
fs
mov
icebp
loope
xchg
xchg
cs
pop
inc
enter
cs
jmp
in
out
bound
lret
cmc
pop
xchg
push
mov
mov
inc
int3
fwait
mov
sbb
and
ja
arpl
out
nop
and
lcall
mov
ljmp
sbb
dec
lret
dec
push
das
cmp
je
mov
enter
orl
popa
mov
sbb
mov
cli
sahf
in
in
scas
repnz
or
fsubrs
xchg
or
es
cmp
test
enter
mov
outsl
ja
lea
mov
push
lret
loop
sub
insb
sub
stos
xchg
in
mov
mov
xor
out
ss
cmp
jecxz
adc
fisttps
cmp
jg
fxch
add
sahf
add
add
and
lods
fisubs
insb
add
or
dec
scas
shrb
mov
mov
xor
scas
add
fsubs
jae
jge
push
pop
in
sbb
mov
mov
in
mov
js
hlt
or
das
mov
add
xor
mov
stos
adc
ficoml
das
jmp
push
lods
add
pop
jl
xchg
adc
sub
push
pop
cmp
cmp
pusha
mov
pop
cmp
pop
jns
data16
popl
test
add
push
stos
sbb
ja
andb
loopne
js
bound
idivb
lahf
outsb
jg
cmpsb
sbb
bound
in
adc
dec
mov
stc
add
addr16
insl
fiadds
ficompl
push
icebp
cmpsl
xor
cmpsl
push
pop
rep
js
cmp
scas
and
int
xchg
add
pop
hlt
imulb
mov
xchg
push
leave
sbb
ds
cli
mov
sub
les
adc
fiaddl
popf
sub
xchg
mov
test
jg
mov
loop
pop
sub
xor
dec
mov
jne
int3
push
ds
clc
inc
jp
and
cltd
push
jb
dec
inc
call
test
test
aad
hlt
jp
add
xchg
sub
pop
jl
stos
lahf
push
mov
out
iret
and
mov
mov
dec
shl
jmp
les
sub
int3
xchg
mov
hlt
or
adc
xchg
sub
sbb
imul
ss
mov
and
ja
lret
stos
and
lods
lahf
and
push
jecxz
or
in
lret
lea
mov
mov
rcll
xchg
mov
faddl
popa
out
add
adc
jno
inc
xchg
jns
std
adc
sbb
cltd
fidivrl
jg
xchg
hlt
fbstp
out
loop
out
lods
mov
pushf
repz
decb
bound
dec
jp
mov
mov
mov
push
icebp
pop
mov
insb
pushf
push
push
fbld
sub
ja
add
mov
mov
mov
loop
sbb
xlat
in
and
or
outsb
mov
lea
dec
pop
ja
jle
imulb
js
mov
cmc
fwait
cmp
dec
lcall
or
and
fisubrl
outsb
bswap
aaa
loopne
sbb
loopne
dec
filds
or
int
push
mov
out
jecxz
rcl
shlb
shrl
daa
repz
jnp
ja
lock
out
js
xchg
cmp
je
inc
je
jg
mov
mov
test
inc
sbb
ja
xchg
lret
fldt
shl
dec
inc
aam
jo
xchg
cmpl
lret
inc
cmp
xchg
lahf
sub
push
or
mov
js
icebp
pop
jne
ficoms
inc
xor
xchg
xor
mov
outsb
adc
stos
pop
add
insb
cmp
jbe
sbb
mov
pop
sbb
fcomps
pop
int
out
sbb
rorl
loope
popf
popa
test
fcomip
inc
inc
es
into
lret
jl
xchg
outsb
mov
sti
jmp
sub
cmp
inc
push
mov
push
xchg
dec
hlt
ljmp
jns
cld
fildl
loope
lret
dec
insb
xchg
push
fstpl
movsl
sbb
xorb
sbb
iret
outsb
repz
dec
shr
and
push
or
lahf
test
aaa
sahf
adc
push
scas
fs
mov
push
or
jle
fincstp
adc
lcall
sbb
add
cwtl
cmpsl
arpl
loopne
adc
iret
dec
xchg
push
arpl
in
andl
in
sbb
clc
and
and
push
in
and
test
stos
pop
clc
add
xchg
pop
and
pushf
sbb
ds
test
lahf
add
push
pop
lea
cmp
sub
pop
sbb
jns
in
inc
inc
rolb
out
rcl
xor
push
and
mov
jno
cltd
cmc
mov
pop
cmp
and
push
bswap
jne
jle
or
mov
es
jecxz
fsts
mov
mov
scas
mov
popa
push
std
cmp
mov
hlt
clc
rcll
imul
add
pop
sbb
add
bound
sub
repnz
sahf
mov
fs
or
orl
pop
aaa
loope
push
inc
imull
pop
call
repnz
insl
dec
xchg
dec
ljmp
cwtl
and
sti
sub
mov
addr16
pop
and
xor
aam
lret
rorb
or
aam
xor
push
stos
push
enter
cmc
sub
inc
lods
pop
jmp
insb
fs
aas
subb
test
rol
jg
jb
rclb
int
std
jno
scas
das
xlat
dec
jge
sub
mov
pop
loop
testl
adc
loope
push
sbbl
dec
je
imul
sbb
adc
movsb
rcll
mov
repz
or
dec
fadds
loope
push
aam
jns
out
sbb
div
shrl
cli
cmp
es
sbb
dec
mov
js
mov
andl
jb
js
sbbb
sti
cmp
out
add
dec
add
push
lret
jo
insl
pop
popa
mov
add
lcall
xchg
stos
fdivl
divl
sbb
ja
xor
and
popa
enter
dec
sbb
cwtl
pop
push
mov
cmp
dec
shrl
aas
pop
mov
mov
jae
push
mov
ficomps
sub
inc
mov
inc
into
xchg
lods
ret
sti
ret
cld
sbb
aas
and
xlat
in
test
stos
dec
inc
jns
push
mov
into
pop
into
mov
adc
pusha
ret
pop
fs
cmp
dec
stos
or
inc
loop
sub
aad
mov
ss
push
sbb
push
lods
mov
shll
jae
push
inc
mov
in
popa
and
fsubrl
enter
push
mov
shlb
addb
push
xor
jns
popf
inc
dec
lcall
and
lods
insb
xor
mov
mov
sub
push
insb
mov
into
sti
imul
cli
jmp
sbb
jmp
inc
push
cmp
movb
and
or
repnz
loope
movsb
add
les
imul
inc
pop
cmp
cmp
repnz
or
test
mov
pop
mov
sub
shlb
jb
xchg
inc
test
cs
test
push
cmpsb
push
jno
aaa
cs
test
cmp
xor
mov
push
insl
push
gs
je
dec
iret
daa
and
adc
sbb
daa
lods
jb
xchg
in
lcall
gs
sub
mov
gs
sbb
push
cmp
push
xor
jbe
aad
or
cli
dec
lea
or
xor
pop
lock
daa
and
add
or
movlps
or
sub
or
je
pop
scas
imul
mov
and
popa
mov
push
pop
jp
arpl
inc
mov
iret
out
fwait
shrl
in
dec
jne
mov
xchg
test
pop
sbb
add
vpsrld
fldl
xchg
in
in
fstpl
inc
xchg
hlt
pop
pop
xchg
mov
in
mov
jns
cli
jl
adc
push
adcl
pop
cli
loop
je
jns
mov
xchg
ljmp
aam
jge
test
test
insb
jnp
push
imul
push
push
cwtl
push
rcll
add
loope
pop
push
xchg
in
icebp
jns
test
mov
cmc
cmp
xchg
xchg
sbbb
call
subl
mov
mov
leave
lock
mov
push
ljmp
shl
popa
cmp
dec
gs
push
jno
inc
pop
fiadds
cmp
je
pop
sbbl
imul
and
xchg
or
mov
fisubl
enter
test
mov
popl
push
aad
dec
or
and
mov
cltd
xor
fwait
jb
cmp
jmp
loopne
adc
arpl
bound
fwait
cmp
lods
cwtl
arpl
and
popl
pop
cmc
sbb
lcall
add
xchg
jae
test
inc
xchg
arpl
mov
pop
shll
fcmovnu
sub
repz
jbe
xor
jecxz
mov
ficoml
fwait
outsl
outsl
xchg
out
xchg
sub
jmp
aas
in
and
jae
mov
xchg
loope
jp
je
or
stos
inc
enter
insl
fs
adc
inc
mov
das
es
ja
push
jno
test
data16
xchg
xor
sub
mov
inc
call
int3
or
sti
pop
push
inc
lahf
inc
sbb
mov
jno
test
add
fsubr
pop
lret
mov
pusha
dec
out
sahf
mov
test
inc
leave
push
dec
orb
push
pop
mov
cli
bound
inc
jecxz
inc
sahf
ss
leave
popf
adc
xor
add
sbb
loop
mov
ljmp
jae
and
pusha
outsb
mov
jmp
xor
movsb
inc
push
je
push
fcoml
pushf
jnp
std
or
iret
rclb
mov
add
addr16
and
dec
repnz
std
push
inc
xchg
neg
data16
aaa
test
pop
xchg
lret
adc
cmp
xchg
sub
ljmp
stos
mov
pop
movsb
outsl
aaa
pusha
xlat
sub
jge
ljmp
mov
shrb
into
inc
out
in
es
and
push
inc
mov
or
rolb
jp
pop
or
sub
xchg
ds
roll
loop
inc
mov
xchg
dec
mov
rcrl
mov
hlt
adc
std
xor
add
scas
ret
leave
pop
cwtl
clc
mov
daa
mov
daa
repz
xchg
cmc
jo
sbbb
push
loope
arpl
pop
movsl
imul
ret
jl
int
fdivr
test
inc
mov
jg
xchg
jne
cs
jmp
clc
add
mov
flds
sbb
mov
sti
and
jmp
pushf
cs
mov
adc
add
adc
dec
daa
mov
in
lods
push
cmc
and
inc
sti
xchg
sar
mov
sar
lahf
mov
outsb
xchg
dec
fcmovbe
and
xchg
cwtl
adc
push
jmp
fcompl
sub
cli
sbb
xor
lahf
int
fldcw
lahf
negl
and
notb
jg
nop
scas
dec
stc
xchg
rcll
stos
adc
mov
mov
fisubs
add
hlt
neg
mov
cwtl
push
add
mov
xchg
addr16
add
jl
addl
addl
loop
lret
push
jns
sub
std
repnz
xchg
addb
pop
cmp
in
dec
adc
lods
fnstenv
or
mov
aad
jecxz
push
mov
jbe
js
mov
cld
mov
fisttpl
dec
pop
pop
arpl
xlat
xchg
fnstenv
xchg
jle
jecxz
in
push
mov
repz
cmp
adc
inc
cmp
mov
pop
cli
stc
and
and
mov
out
fcmovnbe
jl
push
mov
das
sub
movsl
cmp
into
aaa
repnz
pop
sbb
xor
jno
ljmp
in
popa
pop
xchg
jecxz
jae
sub
aad
jmp
or
jle
ljmp
xor
adc
jo
adc
jns
xchg
lods
cld
mov
mov
mov
push
or
loop
bound
scas
insl
xlat
popa
inc
dec
out
xchg
sbb
and
stc
gs
mov
cmp
jns
and
cmp
lods
rorl
fsubl
cmpsl
cwtl
je
mov
enter
cmp
mov
mov
movsl
sti
sbb
sahf
xor
push
icebp
pop
shlb
mov
jno
lret
fsubrs
mov
icebp
rclb
roll
mov
divb
lahf
scas
mov
aas
lea
xlat
mov
cld
xchg
cmp
addb
es
inc
js
adc
pop
mov
pop
mov
jae
cmc
subb
inc
stc
inc
mov
cmpsb
daa
mov
cmp
sub
jecxz
xor
sbb
cwtl
aad
push
jp
cmc
daa
bound
movsl
inc
push
pop
jb
movsb
movsl
ja
sub
sarb
jb
mov
nop
push
jb
enter
inc
adc
inc
loop
sub
pushf
stc
test
addr16
mov
adc
mov
ss
dec
xlat
test
stos
imulb
leave
popf
adc
lret
xor
mov
mov
push
xchg
ret
sub
stc
xor
loopne
aad
add
and
les
filds
push
push
add
pop
mov
xor
push
rcrb
cmp
fisubs
cwtl
and
test
dec
or
inc
cmp
arpl
cmp
out
inc
sbb
cld
shl
cmp
jecxz
and
xor
push
jmp
cwtl
mov
hlt
cmpsb
arpl
dec
jae
lods
jne
cwtl
notl
outsl
mov
jmp
lods
test
stos
jnp
imul
jle
insb
insb
lret
stos
push
js
mov
lret
cs
mov
outsb
sbb
imull
stc
in
mov
xchg
or
sbb
mov
scas
aas
push
push
ljmp
mov
ds
push
and
sub
les
push
pop
rolb
nop
in
cwtl
cld
xor
and
mov
jmp
mov
ret
mov
mov
push
daa
mov
push
mov
call
fisubl
sub
push
dec
xlat
rclb
dec
cmp
dec
mov
push
in
lea
adc
iret
lahf
xor
subl
mov
daa
xchg
dec
fcompl
cmp
ja
push
push
repz
pusha
inc
out
pop
icebp
push
mov
inc
dec
test
push
or
les
xlat
mov
mov
cltd
repz
lcall
pop
sbb
push
jb
cmpsl
pop
pushf
movsb
out
cmp
sub
scas
pop
aad
mov
xor
jno
or
test
dec
xor
sbb
sub
in
lock
ret
jmp
pop
pop
fildll
dec
pop
ss
mov
pop
aaa
outsl
mov
push
jg
rclb
mov
add
xchg
in
orb
inc
push
add
daa
lret
or
adc
jno
ret
pop
xor
mov
lock
ret
mov
mov
fs
and
adc
test
and
outsl
lea
imul
jbe
xor
sbb
sbb
jl
add
ja
cmc
test
jnp
int
test
fimull
lock
pop
je
pop
or
xorb
push
pop
int
ds
sub
inc
aas
push
repz
and
sbb
cmp
cmc
shl
out
xorb
jno
adc
imulb
mov
push
fldcw
jne
jbe
in
push
xchg
mov
pop
add
lods
adcb
shl
jmp
adc
cmp
out
imul
ss
pushf
in
jmp
sahf
xchg
push
cmc
jbe
das
mov
pop
sbb
inc
lret
stos
dec
mov
mov
nop
push
mov
mov
inc
xchg
cmpsb
mov
sbb
mov
cld
fsincos
testb
mov
jp
pop
popf
ljmp
mov
xor
scas
ret
call
pop
int3
push
popa
mov
mov
sbb
and
xchg
sbb
pushf
stc
dec
cmp
ret
jge
stos
jp
addl
lcall
add
jecxz
sub
insb
adc
out
test
push
jge
add
or
mov
or
mov
in
ficompl
and
es
mov
ret
dec
xchg
mov
lds
jbe
sub
cmp
mov
imul
data16
pop
std
inc
inc
sbb
loope
xor
insl
ret
inc
push
repnz
xlat
and
inc
sub
out
hlt
std
cld
js
sub
adc
loopne
add
inc
adc
adc
xor
scas
mov
xchg
pop
and
les
popf
cs
dec
cmpsl
cmpsb
jns
imul
mov
dec
je
jno
ret
and
bound
insl
add
sbb
lock
inc
pop
push
jbe
mov
jo
sub
xor
pop
arpl
stos
out
std
push
adc
push
hlt
jne
jg
mov
xlat
or
or
mov
jmp
xchg
jecxz
and
cmp
mov
shll
add
adc
cmpsb
mov
imull
lret
fisubl
shlb
and
out
adc
add
add
and
sbb
xchg
fimuls
xor
inc
push
cld
leave
loope
mov
mov
out
test
push
lret
imul
adc
xor
dec
cmc
xor
rol
add
xchg
repnz
faddl
iret
imul
loop
add
fsubrp
popa
imull
outsb
outsl
xor
es
imul
xor
cwtl
push
adc
push
bsf
pop
dec
or
sub
adc
pushf
daa
in
mov
inc
mov
mov
loopne
stos
and
add
xor
scas
loopne
push
insb
jmp
push
mov
push
int
popf
xor
shlb
mov
andl
cmp
xor
xor
xchg
sub
sbbl
mov
and
and
and
stos
or
jnp
cs
mov
sbb
popf
stc
push
int3
shll
mov
test
bnd
jecxz
hlt
enter
or
subb
negb
mov
in
jle
enter
jecxz
adc
or
cs
dec
jno
jo
leave
cmp
ret
push
add
mov
fstpt
pop
ficoml
jle
pop
jns
outsl
mov
and
mov
enter
stos
filds
dec
movsb
mov
jno
sub
orb
mull
sub
loop
shlb
cmp
ds
int
mov
lds
loopne
pop
and
mov
mov
or
cmp
mov
cmp
loope
mov
loopne
pop
jb
scas
adc
jl
gs
adc
inc
fidivs
insl
push
lcall
insb
xchg
and
icebp
mov
out
in
cmpsl
sbb
loope
insl
loopne
pop
mov
fcom
xchg
push
cmp
jnp
mov
popf
data16
cmpsl
fwait
mov
xor
fldenv
aam
push
mov
xchg
add
xor
rolb
outsb
dec
outsb
cwtl
xor
in
rcrb
daa
sbb
cli
push
push
adc
in
mov
int3
adc
imul
mov
aas
dec
xor
adc
flds
fiaddl
popf
insb
cmpsl
sub
add
inc
sbb
adc
shlb
fcomps
out
inc
adc
mov
xchg
cltd
fsubrl
insl
rcl
sbb
dec
fcoms
mov
addl
jmp
or
pop
stos
mov
mov
and
cmpsl
jp
dec
and
cmp
shrl
lods
fs
pop
fsubr
imulb
repz
xorl
pop
xor
sbb
cmp
and
sbb
mov
add
out
sti
das
int
push
inc
sub
inc
loope
sbb
sub
lods
aaa
stc
mov
mov
lret
sbb
iret
cmp
mov
xchg
aaa
jecxz
pop
repnz
mov
and
mov
pop
inc
fld
rorl
adc
sub
fs
mov
popa
pop
in
xor
pop
testb
cwtl
lret
jecxz
sub
hlt
inc
lods
lret
xchg
push
cwtl
mov
mov
pop
outsl
rorl
lods
stos
sbb
add
lock
jne
jmp
lahf
or
xchg
popf
inc
cmpsl
test
arpl
test
das
dec
mov
cmp
jns
pop
add
lods
xor
sbb
into
aad
mov
mov
std
sbb
or
pop
pop
call
int3
inc
mov
xchg
clc
adc
shr
mov
iret
sub
mov
mov
and
imul
dec
mov
iret
in
leave
mov
movsl
ret
push
cltd
pushf
orl
cld
push
pop
orb
call
inc
mov
jb
mov
orl
dec
mov
inc
lds
in
jmp
lret
enter
and
cmp
scas
mov
scas
mov
scas
out
sbb
testb
push
add
test
es
fstpt
cmp
fistpll
or
cmpsl
jae
shlb
mov
push
sar
jns
jecxz
mov
sbb
jecxz
cmp
lds
ret
jno
jbe
movsb
pop
inc
dec
in
push
mov
mov
lds
repnz
jmp
pop
mov
shlb
flds
inc
and
xchg
jp
int3
aam
test
das
fimull
jns
mov
sahf
add
pop
add
or
stos
xchg
adc
mov
add
cmp
sbb
or
push
sti
mov
push
mov
mov
aad
mov
mov
mov
lds
aad
fs
xor
pushf
shlb
test
and
repnz
mov
xlat
cmp
mov
pop
sbb
out
call
jg
rolb
leave
fildl
lods
mov
xchg
jecxz
fs
add
sbb
adc
push
and
ja
popf
in
invlpg
in
add
inc
add
nop
notb
fisubrs
inc
lret
pushf
in
stos
aad
stos
xchg
in
ret
xchg
jmp
cmp
in
and
inc
mov
leave
mov
adc
mov
inc
ss
fstpl
lods
aaa
subl
sub
dec
inc
loope
loopne
xchg
jb
ret
jge
cmc
dec
mov
sbb
jns,pn
int3
push
push
jle
cmpsb
inc
mov
test
out
popa
ficoms
xchg
inc
cltd
test
add
jnp
xor
pop
and
mov
scas
rorl
andw
popf
test
jno
xor
lock
stos
mov
jns
mov
movl
inc
lods
sar
std
xchg
inc
mov
ljmp
bound
mov
nop
int3
xor
push
and
cmp
jge
out
inc
andb
inc
ds
jne
jmp
stos
xchg
cs
jg
lods
mov
ds
pop
call
scas
mov
xor
mov
inc
repz
ja
cmp
and
outsl
lods
xor
fwait
pop
lcall
lods
into
popf
iret
push
pushf
cmp
mov
jbe
or
es
inc
outsl
daa
into
cmp
mov
sbb
push
fisubs
fimull
dec
cmpl
jp
rcrl
dec
adc
pop
les
pop
ror
mov
jb
xor
ja
negl
jp
cld
mov
jno
mov
adc
xchg
add
mov
xor
sahf
fiadds
adc
imul
lods
push
and
lods
aad
add
scas
test
xchg
sbb
or
das
xlat
add
xchg
insl
enter
or
xchg
jae
dec
aam
sbb
mov
test
lahf
aaa
dec
xchg
cmpb
mov
xor
in
mov
mov
test
inc
stc
stc
inc
lods
mov
xor
mov
mov
sub
data16
btc
sub
ret
pop
xchg
and
fbld
fnstcw
mov
mov
shll
mov
lahf
cmp
aaa
cwtl
lret
and
iret
ds
imul
sbb
imul
cld
ljmp
mov
ss
sti
shlb
mov
sbb
lods
xchg
pop
mov
sarb
mov
lcall
sbb
dec
lahf
add
xor
cmc
mov
mov
dec
pop
stos
and
roll
sahf
jae
add
pop
in
inc
imul
test
adc
pop
adc
ss
and
mov
and
aaa
and
lret
or
rcrb
push
sti
sbb
lahf
xchg
cwtl
pop
pop
sbbb
shll
insb
sub
xlat
push
ds
popf
and
test
in
hlt
nop
push
stos
inc
mov
sbb
jae
shr
add
fisubl
jg
mov
push
dec
xchg
js
xlat
daa
mov
cmp
pop
leave
call
dec
mov
pop
popf
shll
sbb
nop
xchg
add
test
xlat
jp
and
mov
fnsave
cmpsb
in
dec
nop
clc
push
je
cmp
adc
sub
insb
dec
xchg
push
inc
adc
and
mov
shlb
js
jae
sub
icebp
int3
cs
loope
fidivrs
dec
mov
adc
pop
or
mov
jmp
adcb
lcall
add
test
movsw
outsl
clc
mov
arpl
mov
inc
push
dec
adcb
mov
add
jno
or
enter
js
xchg
adc
adc
fwait
mov
dec
lock
sbbb
arpl
xor
jno
push
ds
adc
mov
lea
lods
jge
in
lret
or
cmp
inc
mov
cmp
rol
sbb
loope
rcl
push
out
cmpsl
sbbb
mov
bound
inc
lahf
adc
adc
or
sbb
sub
adcl
jle
cltd
xchg
cmp
mov
aas
inc
push
ljmp
aad
push
push
std
sbb
ret
movsb
cmc
aaa
xchg
leave
inc
in
pop
push
rorb
in
xor
lds
daa
test
fwait
loope
push
mov
xchg
jae
push
mov
loope
shr
push
mov
jecxz
inc
cmp
jp
dec
push
jmp
stos
cmp
jp
mov
jae
mov
xor
mov
int3
jmp
test
jns
jo
or
test
insl
inc
mov
push
push
popf
cmp
test
movsb
scas
push
dec
and
out
inc
inc
imul
out
cmc
mov
cmp
sbb
sub
pop
movsb
inc
insl
imulb
adc
dec
pop
push
inc
daa
mov
mov
rclb
sub
inc
inc
push
testl
lea
leave
push
pop
jae
outsb
imul
inc
imul
clc
xchg
movsl
sahf
movsl
lcall
xor
or
xchg
in
sub
jl
mov
mov
inc
or
adc
and
ret
cmp
fdivr
cs
jmp
js
jl
rorl
or
mov
enter
fisubs
dec
pop
push
notb
jl
push
in
xchg
imul
mov
cmp
cwtl
ficoms
aad
adc
sub
pop
sbb
mov
jbe
push
add
mov
push
cltd
cmp
pop
jb
les
lds
adcb
std
xchg
sahf
addr16
xor
jp
add
sub
jge
push
stos
cmp
out
and
cmc
popa
adc
pop
enter
dec
jns
cmp
pop
and
shll
cmp
shr
sub
pop
cmp
adc
and
lahf
add
xor
push
lcall
push
xchg
jo,pn
hlt
xchg
push
pop
std
ffree
cmp
out
iret
loop
push
pop
loop
cli
and
adc
subl
xchg
or
cmp
dec
jno,pt
aas
sti
sub
push
imul
lds
in
or
cld
mov
add
adc
ret
pop
mov
iret
je
cltd
inc
xchg
dec
mov
fwait
inc
mov
cwtl
sbbl
cli
sub
push
jp
or
sub
pop
dec
fidivrs
fsubr
jnp
mov
lret
push
jp
and
in
mov
aad
or
aad
sbb
xor
or
lret
ret
mov
sub
mov
daa
fisubs
jnp
push
rcrl
insl
inc
jl
fimuls
insb
jno
pop
sub
xor
es
push
or
loop
inc
mov
pop
sub
adc
movsb
pop
sub
xor
inc
sbb
or
push
inc
mov
fidivrl
mov
xchg
int
dec
pop
jg
cltd
mov
mov
sbb
repz
push
inc
mov
nop
dec
icebp
pop
out
ret
sub
punpcklbw
cmp
out
roll
mov
shl
add
xchg
test
sahf
xor
popf
test
int3
rclb
add
into
inc
mov
sbb
or
arpl
adc
jp
xlat
bswap
loop
sbb
jecxz
add
xchg
dec
out
ja
call
mov
mov
movsb
rcll
cltd
and
in
sub
arpl
aaa
xchg
or
repnz
jl
icebp
rorl
pop
dec
inc
stos
sbb
ljmp
mov
jb
das
imul
jb
jmp
clc
mov
sub
mov
cmpsb
mov
xchg
mov
popa
sub
xorb
push
pop
fcomi
mov
jge
cmp
sub
adc
repnz
fwait
push
jae
jmp
dec
inc
dec
out
dec
sub
jbe
scas
mov
and
jne
mov
in
scas
push
jle
mov
or
insb
xor
mov
adc
data16
add
xor
stc
rorb
in
into
cwtl
nop
stos
call
push
outsb
lods
xchg
movsl
mov
test
and
in
xor
cmp
movaps
inc
pop
hlt
jge
iret
sub
jae
icebp
lea
scas
mov
cmpsb
mov
mov
xorb
mov
fisttps
cmpsl
pop
jnp
jno
ret
jns
pop
aad
push
nop
out
cmpb
cwtl
cmp
mov
jae
arpl
push
sbb
dec
and
push
jg,pt
hlt
xor
mov
movb
bnd
cwtl
outsb
xchg
pop
cmp
jle
push
inc
sarl
push
loop
lahf
scas
in
mov
cs
nop
mov
inc
sub
imul
psubsw
mov
arpl
add
xchg
fwait
push
movl
cs
je
aad
addr16
add
dec
outsb
pop
push
dec
pushf
cs
mov
loopne
xchg
jno
sub
std
push
sbb
xor
or
push
jbe
inc
inc
ret
rep
shlb
loop
pop
xor
jge
aaa
daa
add
cmp
loopne
cltd
dec
aam
and
mov
push
sbb
loope
rcr
cmpsl
repnz
popf
rcr
pushf
cmc
inc
mov
ss
pop
add
mov
mov
or
js
push
cmp
mov
push
mov
and
faddl
xchg
cmp
xorl
fnstsw
dec
xor
mov
test
xlat
inc
inc
daa
or
ret
xchg
sbb
les
mov
push
mov
jns
cmp
test
xor
and
lds
mov
dec
push
add
out
sbb
lret
stos
fnstsw
mov
pop
hlt
les
xchg
mov
pop
cltd
push
xchg
push
repz
ljmp
push
adc
adc
inc
popf
sbb
cmp
xchg
stos
int
xor
out
xchg
lock
shr
mov
push
icebp
mov
pusha
hlt
add
nop
out
pop
add
sbb
lcall
lret
ja
lahf
push
cmp
xor
mov
and
aam
cwtl
jl
cmc
jecxz
sub
imul
js
ret
scas
pop
test
mov
das
inc
inc
pusha
adc
cs
into
or
es
call
mov
fisttpll
jns
cltd
ljmp
or
sub
iret
mov
or
ss
test
sbb
mov
nop
mov
lahf
inc
sub
xchg
ds
or
into
fisttps
fstl
test
les
pop
gs
je
mov
scas
cmp
insb
and
aam
sar
xchg
test
test
fadd
and
es
dec
pusha
out
sbb
movsb
test
cmp
cmp
rorl
test
mov
pop
push
imul
dec
xor
sub
loopne
pop
push
cmpsl
mov
arpl
lret
je
shr
icebp
lret
test
pusha
mov
adc
adc
cmp
mov
jg
pop
in
push
mov
and
leave
add
bound
scas
data16
popf
pop
cmpsl
cmp
cmp
sub
movsb
out
sahf
or
sbb
fs
scas
add
aad
ret
jnp
je
jge
sbb
ret
mov
mov
xor
push
adc
xchg
dec
repnz
mov
mov
fiaddl
jmp
mov
out
mov
push
mov
xor
fwait
cmpsb
lea
jbe
inc
mov
addb
leave
lret
pop
sub
mov
add
push
xchg
xchg
push
jbe
movsl
push
loope
fistpl
lahf
subl
sbb
stc
ss
out
and
sbb
sub
jns
mov
push
push
cmpsl
insl
inc
sbb
es
push
ds
push
mov
sub
sbb
sbb
jmp
jmp
push
in
cltd
push
enter
mov
mull
outsl
arpl
add
mov
add
xorb
daa
push
aad
cs
outsb
push
fnstsw
int3
jns
scas
push
pop
jne
lahf
stos
push
je
mov
sbb
inc
scas
or
sbb
inc
sub
in
pusha
xor
in
lock
add
sub
fs
jmp
movsl
jnp
leave
into
subb
inc
cs
push
mov
inc
pop
jno
mov
jmp
loop
cwtl
fsubr
insb
clc
adc
icebp
inc
xchg
xchg
pop
aas
and
push
jae
pop
call
push
cmpl
xchg
arpl
cmpsl
js
jp
test
ret
jle
negl
imul
jecxz
cmp
rcrb
stos
in
sahf
pushf
imulb
cmp
ret
lret
jmp
lret
popa
insl
in
or
in
push
addl
fsubr
or
outsl
outsb
mov
jge
mov
cmp
push
fisttpll
lcall
dec
mov
xchg
xorb
mov
out
aas
lret
pop
dec
sub
mov
mov
mov
outsb
xchg
scas
in
cld
stc
sub
std
inc
out
xor
jge
faddl
mov
inc
pop
pop
inc
mov
xor
cli
push
cmp
or
sub
pop
addr16
hlt
pop
inc
sub
or
pushf
mov
outsl
ja
stos
sbb
bound
xchg
mov
mov
insl
int
cli
rolb
jns
cmp
xchg
out
mov
shll
push
icebp
cmp
test
andl
aam
rolb
ds
xchg
and
repnz
pop
mov
lea
pop
out
mov
loop
int
dec
cmp
lea
ficomps
cld
mov
mov
xchg
and
and
sarb
add
clc
mov
mov
pop
xchg
ret
int3
mov
out
lahf
xor
sub
shrb
cltd
mov
repz
aad
in
and
andb
repnz
jle
js
cwtl
movd
outsl
outsb
aas
in
sub
icebp
shlb
lds
cmp
pushf
or
pop
cwtl
lock
mov
dec
cmpsb
rcr
adc
and
aad
sub
popa
jle
or
fs
fmull
outsl
dec
pop
cmpb
adc
jl
nop
ljmp
push
or
add
jge
cmp
gs
cmpsb
stos
leave
movsb
mov
cli
cmpsb
or
push
mov
add
push
cmp
or
insl
and
push
dec
push
cmp
fsubrl
fcompl
ljmp
sub
and
and
imul
or
enter
or
outsl
fs
adc
mov
mov
jl
mov
cli
movl
or
mov
add
xchg
push
jl
sub
daa
lcall
les
push
orl
mov
sbb
and
inc
outsl
mov
push
pusha
mov
scas
popa
lods
xor
insl
and
xor
fists
in
fnsave
adc
mov
sbb
scas
das
or
inc
fcomps
or
mulb
push
dec
fdivs
popa
or
sbb
sar
push
mov
mov
push
outsb
push
or
or
xor
orl
test
pushf
jmp
jne
mov
ret
arpl
sub
mov
mov
popf
pop
lock
ficompl
pop
adc
out
sub
cmpsl
push
jp
pop
int
fs
sbb
or
xchg
jbe
inc
inc
js
sub
lods
pop
xor
rolb
out
cmc
push
xchg
cwtl
xchg
xor
out
push
fstp
mov
push
lds
push
enter
outsb
pop
fs
outsl
xor
hlt
out
in
lret
xlat
cmp
pushf
jp
xor
test
mov
add
jbe
xchg
mov
in
sbb
dec
push
in
adc
dec
xchg
outsb
hlt
and
into
fwait
mov
mov
stos
mov
pop
aad
add
inc
popf
lret
cmp
mov
mov
mov
cmc
push
icebp
jl
insl
push
rorb
push
sbb
fxch
pop
fucom
aaa
jns
notb
rcll
js
in
fiadds
outsb
jl
sbb
je
and
in
jo
test
mov
xchg
testl
sbb
mov
dec
cmp
fcoms
jp
jne
xchg
out
ficoml
or
push
xchg
xor
movsl
cwtl
les
mov
in
add
pusha
mov
int3
into
lds
fldcw
aaa
push
jae
das
push
mov
cmp
and
dec
decl
mov
fadds
sub
fsubr
xlat
leave
addr16
lods
xchg
arpl
pop
into
and
or
popl
nop
lret
add
mov
fimuls
into
mov
xchg
inc
fiaddl
and
or
push
mov
and
xor
jmp
cmpsb
mov
loopne
pop
jno
adc
jnp
movsb
addr16
add
mov
cmpsl
shll
inc
xchg
in
jns
repz
push
cmp
cwtl
movsb
movsl
xchg
rolb
ja
data16
out
out
push
add
out
incb
mov
enter
push
or
mov
pop
cs
jl
jne
gs
add
sub
jb
mov
int3
les
dec
adc
scas
dec
shr
fsubrl
movsl
test
add
shlb
lret
rcrb
icebp
push
push
and
or
repnz
sahf
sub
sub
or
cwtl
pop
pop
loope
mov
mov
and
xchg
and
std
pop
jmp
xlat
jb
pop
repz
idivl
into
je
jle
out
and
loop
dec
pop
sarl
sub
pop
icebp
push
sbb
mov
stc
jle
sub
es
test
inc
loop
aad
leave
mov
pop
cltd
scas
xor
lds
popa
jbe
pushf
mov
jp
clc
adcl
lods
jp
addl
and
add
mov
inc
pop
out
ss
inc
mov
jecxz
jp
and
nop
inc
push
mov
mov
sub
out
inc
jg
pop
aam
add
inc
dec
cmp
push
pop
notb
xchg
jae
sub
add
ret
xor
addl
sbb
pop
std
push
scas
stos
xchg
fdivl
rorl
dec
movsl
pop
clc
loopne
add
pminub
mov
fs
cmp
pop
ret
fcom
fnstcw
cltd
sbb
fldcw
aas
pop
in
adc
cmp
xchg
in
nop
testb
pop
cmp
sbb
lahf
mov
imul
pop
fwait
cmpsl
mov
xchg
fmuls
mov
xchg
stos
mov
movsl
iret
jno
shll
inc
jle
mov
lahf
mov
stos
ss
sbb
aas
and
out
fcomip
push
call
lahf
push
cs
repnz
jo
mov
dec
mov
mov
out
or
sub
mov
jg
cmpsl
das
loop
cmpsb
mov
sub
test
xchg
test
adc
cmpsl
pop
ret
push
das
or
mov
add
xorl
cli
lret
mov
gs
and
pushf
mov
mov
sbb
ret
xor
push
push
test
int
add
push
jp
push
repz
pop
and
cmp
inc
xor
cmp
in
scas
xchg
test
ljmp
mov
mov
inc
fiadds
push
mov
sub
sub
popa
inc
js
cs
mov
jnp
add
out
lcall
jo
lcall
xor
xor
mov
ja
in
pop
lds
cmp
and
ficompl
dec
test
vorpd
outsl
pop
mov
and
adc
cmp
inc
jne
cwtl
mov
std
les
lret
in
lahf
jecxz
aam
cmp
mov
lret
dec
aas
jbe
add
pop
movsl
jmp
xchg
fsubrl
xchg
ss
mov
cmp
inc
fists
sti
ljmp
cmpsb
das
or
push
jo
jecxz
add
les
insl
ljmp
lret
add
call
hlt
or
adc
imul
push
and
mov
fld
xchg
xchg
dec
test
push
lock
cwtl
sbb
pushf
jbe
test
adc
or
push
in
shlb
jp
jbe
adc
and
clc
mov
scas
or
test
sub
lds
pop
out
xchg
sbb
xlat
dec
in
add
lcall
cmpsl
mov
sahf
xor
sbb
gs
sub
or
cwtl
pop
imul
cmp
cmp
rcrb
test
pop
xchg
jae
out
movsb
jle
push
inc
sub
xor
jo
push
into
push
dec
shrl
insl
pushf
outsl
push
sbb
mov
mov
std
into
mov
test
dec
mov
adc
dec
sti
ljmp
dec
imulb
xor
cmp
pop
shlb
int3
and
push
sbb
jp
or
lret
adc
xor
cmpsb
xor
int
jno
loope
in
aaa
mov
cld
adc
jle
and
sub
call
movsl
sarb
adc
aad
in
cli
pop
cmpsl
pop
mov
jge
enter
inc
sahf
aam
jb
jne
ja
mov
jns
rcll
stos
int3
subb
cli
mov
lret
dec
cs
ret
sub
push
mov
in
or
test
shlb
cwtl
les
push
mov
inc
jns
jecxz
mov
fdiv
lahf
adc
fiadds
fdivr
jle
rcll
adc
sbb
es
sub
mov
jecxz
imul
test
xor
fidivrs
inc
mov
andl
mov
loope
stc
xor
sub
dec
daa
aam
add
xlat
mov
pop
and
inc
loopne
fsub
orl
mov
xchg
inc
subb
lds
lock
xor
andl
and
mov
mov
aam
mov
push
jmp
out
out
jno
xchg
lret
pop
out
cld
dec
mov
jp
pop
push
out
out
mov
add
addr16
imul
add
dec
dec
jp
call
scas
mov
roll
mov
jno
mov
add
pushl
das
pushl
xchg
push
ret
mov
or
or
mov
mov
test
push
fimull
pop
insl
test
xchg
mov
filds
add
aas
stos
lret
enter
mov
dec
and
sub
and
movsl
xchg
fs
hlt
je
iret
mov
popa
mov
leave
lret
ljmp
std
js
xchg
cmp
insl
jne
fisttpll
outsl
movsl
inc
sbb
push
push
xor
cwtl
out
sbb
lret
push
sbb
sub
nop
out
out
mov
cmpsl
fs
sub
add
stc
cmpl
shrb
outsl
jl
imul
mov
jno
sbb
sbb
cmpsb
shrb
mov
sub
pop
insl
dec
pop
notb
loop
orl
repz
in
stc
dec
sub
hlt
scas
insb
daa
popf
and
stos
rcll
aaa
pop
xor
loop
cltd
cmp
sahf
add
inc
mov
xor
sbb
mov
inc
and
sbb
jge
jge
stos
mov
das
xor
insb
js
push
xor
jg
adc
adcb
add
or
sub
popf
jo
lods
jg
cmc
jno
pop
test
fmull
mov
mov
push
inc
rcll
insb
xor
cltd
sbb
mov
out
and
add
loope
pop
int
jno
iret
mov
lods
pop
inc
in
jno
mov
add
dec
call
pushf
mov
jbe
sub
int
inc
dec
nop
sahf
dec
cmp
pop
xchg
cltd
cli
mov
xlat
ss
test
aas
sbb
mov
repz
ljmp
adc
mov
xor
sti
cmpsl
lods
mov
mov
cmp
aad
hlt
mov
sub
add
js
jno
push
scas
ljmp
mull
mov
mov
jnp
jb
loop
fs
sub
mov
rol
sbb
cmp
loop
mov
sarb
dec
sbb
pushf
into
add
out
je
jae
xor
xchg
sbb
std
test
lods
jle
mov
add
or
adc
inc
jae
pop
fisubrs
xlat
hlt
push
lret
fsubl
xchg
inc
arpl
jne
lea
mov
call
out
mov
cmp
and
adcb
outsl
add
add
and
popf
cmp
cli
fmul
out
xor
aad
out
mov
addr16
sar
lret
dec
or
pop
stos
aaa
push
in
decl
rclb
mov
mov
push
pop
add
cmc
mov
mov
nop
in
fmull
sbb
mov
pop
jge
push
dec
adc
push
in
addr16
mov
movsl
cmp
mov
pop
adc
ja
push
sahf
cmp
insl
iret
iret
cmp
pop
fildl
imul
push
mov
sub
cmp
enter
mov
mov
lock
mov
xor
mov
lcall
fwait
outsb
xor
or
loop
adc
mov
xor
movsl
cmp
pop
mov
hlt
scas
aas
adc
ja
mov
fsubrl
pop
cmp
fnstenv
xchg
repnz
jge
adc
xchg
mov
stos
daa
push
jo
mov
xor
js
movsl
sub
mov
les
stos
iret
jnp
cmp
pop
jo
sbb
popa
arpl
stos
ss
scas
aaa
cld
adc
xor
cmpsb
adc
cmpsl
pop
mov
jge
inc
dec
daa
jb
shl
cwtl
jns
jp
sub
iret
insb
into
mov
or
jp
ja
cltd
xor
and
aad
jl
iret
or
adc
mov
cmpsl
push
jno
cmpsl
nop
ljmp
pop
mov
shrb
jnp
popfw
sub
lcall
arpl
mov
dec
aas
cmc
and
jecxz
cwtl
cmp
add
mov
dec
mov
add
repnz
mov
xchg
dec
adc
ds
adc
and
pusha
lock
idivl
sbb
push
stos
xchg
or
pop
hlt
inc
sub
dec
in
xchg
mov
loop
cmp
cmp
dec
and
push
cwtl
dec
mov
pop
not
or
ja
add
sbb
mov
aaa
cmc
iret
daa
rcll
add
loope
stos
orb
xor
test
inc
leave
cltd
sbb
fiadds
push
mov
sub
aad
push
shlb
adc
data16
hlt
fs
adc
in
sti
pop
cwtl
sub
imul
dec
jmp
adc
mov
sbb
pop
jmp
cmp
sti
mov
outsl
push
push
mov
cmc
xchg
gs
lret
mov
mov
xchg
adc
xor
push
xchg
outsb
sub
shl
icebp
lcall
scas
es
lods
fdivl
jl
pop
rcll
mov
xor
jg
sub
sub
aam
loop
cltd
mov
stc
mov
insb
arpl
lret
or
cltd
test
add
in
mov
cld
pushf
push
mov
pop
cmp
jns
jbe
xchg
xchg
fs
loope
sub
jb
adc
nop
mov
pop
ret
sbb
loopne
mov
jne
cmpb
adc
repz
das
jnp
mov
inc
stos
xorb
std
leave
mov
or
scas
dec
sub
and
rol
idivl
dec
mov
ret
rcll
jb
dec
mov
push
push
loope
push
xor
push
add
pusha
mov
jmp
stos
inc
lret
rcr
sub
pop
insb
mov
sar
mov
sti
jno
mov
xorb
rorl
sub
repz
rorb
and
push
mov
mov
dec
mov
mov
sub
add
mov
push
lcall
imul
sub
mov
cmpsb
cmpsl
xchg
push
test
hlt
dec
int3
fcmovbe
getsec
fs
ljmp
xlat
or
into
mov
pop
dec
pop
dec
ja
sbb
and
mov
push
sub
call
sti
shlb
lods
sbb
fsubr
lahf
mov
mov
neg
push
lock
jecxz
xchg
jbe
pop
rcr
nop
rclb
push
imul
outsl
in
pop
in
in
push
les
cmp
pop
imul
push
or
inc
jb
push
sbb
xor
pop
xor
popf
xor
sbb
in
dec
push
jno
lret
xor
pop
mov
pop
aas
dec
push
mov
xchg
rorb
les
xor
lcall
add
or
add
sub
arpl
imul
jo
jle
stos
inc
insl
mov
cmp
and
nop
sub
aaa
cmp
jns
cmpsb
ret
pop
lret
dec
adc
lret
ds
or
pop
add
sbb
lcall
fstps
mov
xchg
sahf
fwait
xchg
clc
mov
imul
mov
rorl
xchg
lods
aad
mov
cmp
pop
sbb
xor
lea
jecxz
pop
or
repnz
pushf
incb
cmpsb
lds
pop
loop
cltd
cmp
push
jg
push
xchg
sub
xor
stc
cmc
inc
add
popf
xchg
jl
xchg
mov
in
dec
adc
pop
push
pop
pop
or
xchg
cld
fnsave
out
jbe
sbb
test
mov
je
dec
addr16
aaa
ds
lcall
leave
stc
icebp
ret
icebp
sub
pushf
dec
jmp
pop
mov
scas
cltd
in
adc
sahf
movsl
push
outsb
push
fiadds
fdivr
and
jg
mov
xchg
cmpsl
bound
xchg
xor
xchg
lea
or
dec
sub
add
xchg
sub
imull
dec
hlt
leave
mov
and
jns
cli
subb
imul
in
roll
test
sar
test
inc
lea
fidivl
in
mov
icebp
dec
mov
loope
pandn
sub
aaa
jb
push
push
shrb
in
mov
and
push
inc
push
stos
push
cmpl
gs
xor
cmp
mov
jae
xchg
mov
dec
adc
int3
imul
push
adc
test
stos
cltd
sti
and
fists
loope
sti
nop
test
cmpsb
sub
adc
mov
sbb
cmp
mov
adc
mov
mov
and
sbb
es
ss
xor
in
xorl
lret
outsb
int
in
aam
ror
push
mov
sub
aas
lahf
hlt
fwait
jb
cmc
xchg
lret
aad
je
or
lods
ds
inc
lock
psubsb
fiadds
mov
scas
repnz
and
dec
sbb
adc
adc
pusha
mov
inc
mov
mov
loope
lahf
mov
or
out
icebp
or
xchg
mov
push
mov
pop
xor
or
and
mov
cwtl
jb
negl
adc
scas
ficoml
xor
test
aam
mov
pop
xchg
pop
and
xor
out
sub
xchg
ret
cmc
mov
inc
dec
pop
out
xchg
into
ret
and
lods
mov
sub
ret
and
and
xlat
xchg
mov
popf
adc
nop
inc
cs
jecxz
ss
mov
xchg
and
mov
or
out
popf
mov
repz
sbb
insl
stos
dec
repz
dec
stc
lock
mov
jno
jns
sub
clc
add
adc
insb
mov
repnz
dec
cmp
dec
and
lods
movsb
cs
inc
lea
dec
jg
cmpsl
fimuls
popf
push
add
pop
adc
xchg
mov
in
pop
xchg
stos
push
imulb
dec
jg
push
mov
push
into
sbb
jp
xchg
jae
cmpsb
out
stc
lea
sub
xorb
jg
push
mov
mov
push
inc
pop
jno
lret
out
mov
into
fs
xor
inc
mov
mov
cld
xlat
and
cmp
dec
mov
rorb
inc
out
xchg
pop
lret
mov
ja
mov
inc
xor
movsb
lcall
test
dec
ja
pop
test
fsubr
jbe
jns
std
out
mov
addr16
dec
jbe
dec
daa
mov
push
es
gs
push
stc
xor
test
and
mov
push
es
int
sub
push
pop
loopne
out
push
mov
jle
mov
out
outsb
jg
mov
xor
pop
fisubl
cmp
sbb
mov
xchg
popa
jne
jno
cmp
mov
dec
test
jns
dec
rcll
ljmp
ja
out
jge
movsb
ret
out
jnp
fcoml
xor
adc
xor
outsb
pop
xor
jo
lret
cs
dec
hlt
xchg
subl
cmp
fistps
mov
std
jns
dec
and
mov
push
add
sbb
mov
add
and
jge
lcall
jae
adc
mov
in
inc
mov
scas
cli
jae
and
bound
pop
mov
aad
fmull
pop
or
mov
enter
xchg
outsl
adc
lret
pusha
lock
mov
pop
push
lock
adc
pop
push
add
mov
repnz
or
mov
ljmp
dec
inc
out
jnp
icebp
cmp
sahf
in
fucom
icebp
shll
inc
jb
xor
shll
inc
jnp
fs
push
mov
inc
in
lret
clc
repnz
lahf
xchg
test
flds
sbb
imul
xchg
cmp
adc
adc
cs
mov
jg
mov
inc
jo
pop
out
cmp
sti
sub
xchg
sbb
stos
es
outsl
lahf
mov
call
xchg
aad
mov
mov
pop
dec
test
pop
sub
pop
fisttpl
jns
hlt
xchg
xor
sub
mov
adc
mov
mov
lds
jbe
mov
out
sbb
sub
pop
jecxz
mov
lods
in
cmp
ja
popf
mov
movsl
push
movsl
jp
roll
push
mov
dec
out
lods
and
addl
xor
jae
test
pop
adc
fistps
in
mov
out
test
sbb
mov
psrad
testl
loop
lea
stc
jmp
inc
jo
cltd
pushf
pop
or
mov
into
hlt
push
mov
scas
jnp
xchg
lods
test
out
adc
cmp
mov
call
mov
and
aaa
pop
daa
shrb
adc
fstps
jns
mov
pop
cmp
and
mov
mov
jbe
jno
imul
fsubrl
jle
inc
push
pop
pop
jle
sbb
or
mov
leave
inc
lahf
push
subl
test
pusha
test
outsb
mov
xor
inc
dec
pop
pusha
or
fwait
push
mov
mov
aam
or
popf
pop
clc
push
fwait
mov
lcall
xchg
js
or
jno
cmp
cs
sbb
call
jge
cmp
dec
hlt
shll
jecxz
jb
jne
dec
int3
jecxz
pop
out
or
push
inc
mov
movsl
repz
rorl
or
sahf
mov
sbb
frstor
lret
int3
jb
jb
clc
outsb
ss
push
pop
sub
xor
nop
or
push
popaw
popf
push
mov
lret
loopne
push
mov
pcmpgtd
insl
popa
inc
adc
shll
pop
jne
xor
push
inc
mov
es
adc
fstp
pushf
sbb
mov
jbe
lret
rcl
in
cmp
and
pop
repnz
test
mov
jl
pop
mov
loope
pop
stc
stos
jecxz
out
xchg
sarl
rorb
test
mov
shlb
mov
mov
dec
lea
jnp
xor
jg
mov
mov
xorl
pop
jo
cmpsl
mov
push
fldenv
pop
jge
sbb
sbb
mov
movsb
ds
sub
loop
movsb
in
jge
push
roll
arpl
mov
cli
pusha
not
pop
mov
and
dec
jne
into
cmpsl
jns
jb
xor
mov
iret
decl
mov
loop
cli
out
jecxz
mov
mov
mov
dec
sahf
dec
adc
mov
or
cmp
xor
mov
imul
sub
lds
out
lock
mov
xor
jg
adc
test
mov
sbb
jge
dec
cmc
clc
pop
neg
or
add
cmc
dec
jle
fisttpll
divl
fwait
mov
dec
sbb
in
test
in
testb
in
ds
popa
push
rolb
inc
jge
pop
ficompl
js
addr16
scas
xchg
inc
mov
sbb
mov
movsl
aam
mov
cmp
or
xchg
sub
pop
test
leave
hlt
jae
sub
icebp
pop
and
inc
mov
je
mov
jbe
sbb
mov
pop
xchg
push
jmp
mov
cld
out
and
shlb
mov
xor
insb
aas
xlat
mov
subb
adc
lret
mov
sub
jne
push
in
push
fistpll
cwtl
inc
shll
sub
call
pop
push
int
int
cmp
add
mov
jg
das
push
leave
daa
lock
aaa
xchg
or
repnz
mov
xchg
push
into
or
movsl
mov
test
and
lds
or
cmc
mov
imul
sahf
test
dec
movsb
aas
in
mov
adc
das
push
or
inc
jecxz
pushf
pop
sti
movsb
mov
fcmove
xlat
or
mov
movsl
imul
es
int3
cmpsl
and
aaa
std
movsl
imul
push
sub
ds
cmp
xor
xchg
mov
push
jp
pop
rorb
push
mov
cli
movsb
push
lahf
in
xchg
cmpsl
les
xchg
add
or
mov
imul
add
push
mov
sub
push
xor
iret
cmp
jecxz
mov
mov
mov
shrb
in
add
add
and
mov
pop
lods
push
or
mov
pop
dec
in
out
mov
pushf
mov
arpl
pop
xchg
in
or
push
push
test
push
pop
sahf
mov
mov
xor
int
sub
mov
insl
or
popf
jae
and
testb
cmp
sub
xchg
adc
sub
adc
inc
xor
mov
lea
fldcw
popf
jmp
ja
in
dec
xor
cmpl
mov
in
pop
inc
stc
xor
inc
cmp
dec
dec
jp
push
into
fnstenv
loope
sarb
or
push
pop
shl
cmp
ffreep
ret
push
or
insl
pusha
arpl
je
mov
rcrl
adc
andl
pop
test
jecxz
decl
fisubl
mov
lea
popa
add
mov
popf
daa
sbb
jne
pop
push
inc
sub
rcrb
int
out
das
cltd
test
push
std
out
int
inc
push
scas
dec
mov
dec
js
in
test
sti
sbb
lods
cmp
lret
nop
push
ret
loop
idivb
sub
mov
ds
lret
arpl
lahf
pusha
xor
push
ret
jb
out
xor
mov
cmp
scas
adc
cmpsb
int3
pop
push
bound
mov
xor
repnz
jmp
aaa
cmp
dec
movsl
jae
mov
pop
out
fwait
repnz
adc
pop
test
xor
push
mov
jne
das
xor
loop
push
xchg
mov
out
xchg
push
inc
push
dec
jle
sti
xchg
sahf
xlat
aas
cmp
sub
dec
repnz
in
dec
rcr
js
repz
pop
sbb
arpl
push
xchg
push
nop
pop
inc
dec
mov
mov
pop
and
lcall
jns
popl
adc
scas
faddp
les
out
nop
sti
dec
subps
jne
in
in
icebp
loope
and
jle
ja
mov
push
adc
ds
addb
aam
mov
in
aam
mov
aad
inc
sbb
inc
dec
mov
inc
or
lods
mov
xor
sub
adcl
inc
lock
push
inc
lret
or
pop
orb
in
or
pusha
nop
xor
cmp
shlb
adc
invd
sbb
fdiv
sbb
stos
jns
xchg
inc
mov
loop
fucom
and
push
sub
pop
jne
mov
jle
ss
adc
cmp
pop
cltd
jbe
cmp
addr16
mov
cltd
ja
xchg
mov
xor
rclb
cwtl
aaa
cmpsb
mov
push
movsl
sbb
sub
fmull
in
mov
mov
roll
nop
jmp
pop
push
cmp
add
mov
xchg
xchg
lods
push
fiadds
lret
rcrl
and
push
mov
lds
xor
stos
inc
scas
or
cwtl
push
je
and
mov
inc
sbb
sbb
cwtl
rorl
out
repnz
mov
out
sbbl
pop
dec
sarl
lea
pop
sub
fwait
and
outsl
mov
leave
xchg
lock
addl
call
ret
mov
repz
andl
jmp
int
mov
lcall
inc
enter
popa
repz
ja
in
lahf
sbbl
pop
push
cmc
dec
ret
add
jecxz
insl
inc
movsl
stc
mov
inc
or
sub
into
cmpl
push
add
cmp
and
add
rol
testl
pusha
daa
addr16
pushf
fstl
jge
test
mov
loopne
adc
push
popl
aaa
cli
inc
sbb
pop
push
stc
xchg
call
fwait
hlt
cmp
hlt
xchg
leave
mov
addb
push
cwtl
enter
xchg
dec
popa
xchg
lds
lds
push
les
scas
adc
stc
aaa
loopne
imul
fsubp
in
mov
mov
fcomps
fsubrs
int3
cmpsb
push
inc
mov
mov
test
inc
adc
inc
xor
out
das
fmull
sbb
push
movsl
and
pop
fldt
dec
mov
lods
sbb
loope
jne
xchg
jmp
mov
cmp
xchg
pop
rcrl
mov
xchg
dec
adc
out
repz
xlat
push
sahf
adc
cmp
arpl
push
aam
push
inc
add
fwait
adc
lret
mov
mov
pop
mov
cli
and
mov
sbb
sub
push
cmp
mov
jo
daa
jmp
outsb
xlat
mov
jmp
xchg
or
sbb
xchg
adc
pusha
mov
mov
and
jle
cmp
pusha
cmpsb
mov
lret
pop
inc
insb
lret
add
inc
adc
pop
fmulp
inc
pop
loopne
or
outsb
or
insl
stos
arpl
mov
in
adc
adc
andl
add
xchg
mov
lret
lea
xlat
in
add
int
das
bound
mov
inc
xchg
cmc
sahf
aad
ret
loop
xor
pop
dec
es
hlt
jnp
cwtl
notb
les
pop
xor
mov
xor
jno
call
push
fildll
xor
pop
pop
inc
mov
push
xor
test
mov
or
sub
mov
and
scas
decb
push
jbe
cmc
dec
test
add
aaa
or
clc
lods
sub
fs
xchg
leave
ror
adc
mov
sbb
inc
cmp
xchg
cltd
dec
sub
insb
jne
and
cwtl
std
mov
push
inc
mov
dec
mov
lcall
add
jecxz
shl
insb
adcb
dec
ljmp
icebp
cs
mov
and
pop
push
insb
mov
and
pop
inc
call
pop
add
adc
daa
popa
mov
ja
jg
loopne
insl
sti
xchg
scas
stos
push
jns
shl
insb
push
inc
xchg
adc
and
xchg
mov
mov
bound
jnp
imul
test
loopne
testl
and
insb
jbe
fwait
mov
dec
add
xchg
mov
add
shrb
repz
mov
sbb
xor
jbe
and
addr16
push
or
xchg
std
aad
jo
mov
in
jmp
out
dec
inc
bound
and
in
jecxz
inc
add
pop
repnz
xchg
xchg
fisubs
mov
inc
pop
add
pop
aas
push
xchg
jae
dec
jecxz
call
push
mov
ljmp
cmp
fsubl
std
aas
out
or
xchg
in
mov
frstor
or
push
xor
sub
mov
ss
or
mov
fdivrs
shrl
add
fmulp
sti
dec
int3
fxch
inc
or
push
push
out
mov
cmp
inc
mov
dec
mov
cmp
dec
sahf
xchg
cwtl
push
push
jo
sub
andb
cli
das
insl
ljmp
cs
movsl
xacquire
call
dec
cmpsb
pop
adc
ret
std
cmp
cmp
jns
mov
cmp
jle
adc
test
stc
movsb
push
xchg
mov
xchg
icebp
fidivl
mov
or
add
sbb
in
icebp
cmp
push
mov
push
or
js
adc
bt
cmp
popf
icebp
fcmovne
lods
sbb
fcomp
mov
cli
fldenv
xchg
push
push
rcr
pusha
xchg
adcl
mov
es
inc
ds
jnp
nop
pop
jl
std
pop
cmp
jmp
xor
dec
lods
fwait
int
sbbb
ret
aas
sub
or
lods
cmp
rorl
dec
iret
mov
lds
ret
int3
test
ds
mov
int3
mov
aad
cmp
arpl
mov
push
and
dec
jecxz
jle
push
mov
in
add
mov
pop
cmp
pop
pop
repnz
cmova
outsb
push
and
mov
mov
testl
insb
inc
cli
inc
fwait
fbld
adc
mov
sbb
mov
mov
sbb
dec
jmp
rclb
hlt
rcll
popf
stos
mov
xlat
clc
inc
push
lret
sub
jne
adc
push
iret
mov
push
out
pop
cwtl
jge
mov
je
xlat
pop
push
decb
xor
jb
xchg
xor
out
pop
inc
adc
add
cltd
xchg
rcll
xchg
cld
lods
scas
hlt
sbb
mov
data16
mov
pop
sbb
shrb
or
loope
jle
jb
mov
fisubl
lds
lret
push
in
inc
ds
incb
daa
mov
jb
dec
shll
les
jne
js
rorb
outsl
sti
repnz
int3
stos
xchg
add
xchg
jp
ss
sbb
lock
push
dec
enter
jg
lock
jne
enter
or
xchg
jbe
xor
ret
mov
lods
fmull
mov
rcrl
mov
jo
sub
mov
dec
and
es
hlt
xchg
mov
dec
mov
pusha
andl
bound
lea
stos
outsl
push
inc
imul
or
inc
aaa
aaa
aas
cmc
or
or
adc
sti
das
shll
push
ficomps
cld
dec
jge
in
xchg
sub
lds
movsb
stc
adcl
jmp
scas
popa
push
lea
mov
mov
dec
xor
xlat
pop
xor
fmul
outsl
sub
cmc
repz
pushf
push
lods
loopne
push
ror
push
daa
xor
jae
mov
mov
sbbb
adc
sub
pop
pop
push
out
jo
push
cmp
test
punpckhbw
stos
subb
rol
lret
ret
std
sub
or
xchg
stc
fwait
xlat
mov
mov
mov
std
mov
faddl
mov
xchg
sub
jl
pop
sub
adc
push
cwtl
and
in
jl
or
scas
pop
into
enter
jmp
jecxz
mov
loopne
scas
test
xor
dec
xchg
in
clc
mov
ja
ret
push
icebp
jae
add
adc
xchg
dec
out
and
add
lock
mov
cmpsb
sub
adc
and
xor
popf
mov
outsb
sub
rcrl
add
dec
aaa
inc
mov
lea
cmc
pop
movsl
pop
push
cmp
lea
mov
mov
jmp
dec
aas
roll
dec
loope
or
xchg
mov
adc
jb
jbe
or
or
gs
lret
daa
push
push
sahf
outsl
sub
mov
pop
xor
lcall
int
push
xor
ja
dec
call
push
insl
jns
inc
dec
mov
adc
pop
movsl
xor
rcrl
popf
adc
or
adc
dec
bound
movsl
mov
push
jle
dec
dec
adc
lcall
pop
in
sub
arpl
frstor
and
jge
aaa
sub
iret
sbb
fwait
mov
jns
adc
ja
bound
push
data16
push
popf
jno
out
push
mov
sbb
jecxz
andb
add
imul
roll
loope
ret
bnd
repz
sbb
aad
or
pop
jp
pop
jno
and
adc
fwait
inc
cmp
push
xchg
iret
clc
lahf
dec
ljmp
imul
xchg
sbb
mov
pop
lods
cmp
pcmpeqw
push
cmp
xor
pop
xor
jmp
sub
loope
rcll
push
insb
add
pusha
inc
jo
scas
adc
sti
int
jnp
jns
lds
rorb
mov
push
cwtl
xchg
cli
xlat
pop
dec
adc
mov
sbb
mov
mov
inc
and
pop
jge
and
dec
or
ds
push
nop
mov
xchg
xor
xlat
movsl
fiadds
mov
cli
push
jnp
stos
dec
cmpsl
mov
mov
shrl
scas
loop
filds
dec
or
fwait
scas
jmp
sbb
or
popa
mov
pop
stos
or
add
push
fwait
sub
inc
pop
push
fcomps
and
cli
cmp
gs
out
dec
sub
mov
fiadds
fdiv
and
lods
lock
dec
jb
and
les
inc
jecxz
ret
xchg
fsub
enter
repz
dec
lods
sbb
cld
push
js
lret
dec
arpl
mov
addb
inc
lret
adc
dec
shll
cwtl
mov
scas
xchg
and
adc
lods
leave
sarl
test
adc
into
popa
push
inc
jne
not
fcompl
fsubs
cmp
sahf
adc
cmp
lahf
sub
mov
xor
pop
or
call
or
gs
pushf
mov
outsl
inc
out
cmc
add
sub
fwait
les
orl
in
or
dec
in
stos
sub
sub
xchg
pop
pop
xchg
mov
fdiv
ret
scas
rolb
out
xor
pushf
aad
xor
subl
pop
inc
rclb
aad
cli
vmread
fs
pop
mov
call
notb
clc
pop
ret
into
aad
jno
lds
inc
jae
popa
cltd
push
pusha
jecxz
fnsave
fisttpl
shr
jbe
stc
fdivr
out
orl
ja
cmpsl
iret
test
inc
testl
adc
mov
sbb
dec
push
dec
ds
push
sub
fdivrl
mov
outsb
push
or
lcall
mov
xlat
jg
push
cmp
and
pop
jle
jmp
ss
test
movsl
testl
iret
inc
ljmp
dec
jmp
ret
nop
jns
push
ljmp
sbb
mov
inc
aam
push
sahf
cmp
push
xor
repz
aaa
lret
lcall
adc
stos
inc
push
loope
jo
fidivl
add
mov
ret
stos
dec
call
xchg
ret
cmp
jecxz
or
fimuls
lret
xchg
jle
fwait
xchg
rol
sub
adc
dec
fs
sbbl
ficomps
cmp
push
mov
xchg
les
cli
je
cli
repnz
mov
fmul
outsl
adc
xchg
xchg
fs
adc
divl
gs
adc
push
nop
dec
test
inc
jp
cltd
sub
mov
mov
les
push
pop
mov
xchg
cmp
and
pop
jmp
pop
xchg
xor
or
test
int
pushf
mov
int3
xorb
pop
dec
push
movsl
add
jg
sub
add
jg
dec
inc
je
ljmp
out
std
dec
loop
xor
xor
pop
notb
xor
mov
push
sbb
movsb
push
push
lret
cmp
clc
push
cs
push
sbb
loopne
test
std
sbb
mov
adc
push
call
outsl
sahf
xchg
sub
mov
mov
fdivr
out
lahf
pushf
jo
in
movsb
daa
push
cli
out
inc
mov
cmp
dec
sti
ret
arpl
or
cmp
jnp
lea
sub
mul
movsl
clc
push
ss
dec
mov
fbld
and
aad
add
fsubl
pop
xor
adcl
sub
xchg
lock
xlat
sbb
int3
mov
mov
xor
xchg
xor
inc
add
pop
cmpsb
lock
xor
outsb
and
push
pushf
adc
sar
ret
jl
movsb
lods
xor
cmp
fsubl
add
jne
sbb
lods
pushf
cmp
repnz
xchg
lahf
jl
ror
jae
rorl
push
xchg
sbb
mov
mov
je
lea
jecxz
movsb
sbb
negb
pusha
xor
int
xchg
loopne
or
lahf
aad
jo
xor
adc
push
and
jmp
mov
fnstsw
insb
mov
dec
aam
fisubrl
fdivrl
adc
jno
cmp
add
movsl
dec
icebp
int3
jl
pop
xorb
and
jnp
jp
xchg
inc
cmp
test
lea
xor
add
fisttps
dec
pop
idivl
mov
inc
cmpsl
and
enter
cld
enter
xor
adcl
cmp
rcrb
sti
push
and
dec
mov
mov
push
mov
mov
je
in
iret
jl
cwtl
scas
mov
movsb
mov
loope
fldenv
adc
sbb
dec
in
sub
mov
push
pop
xchg
aad
push
scas
fs
push
cmpl
xlat
and
jecxz
icebp
jecxz
fdivr
fldt
xchg
lcall
cmp
mov
js
icebp
and
std
in
in
and
ds
push
xchg
addr16
fldl
f2xm1
jmp
push
push
dec
add
xchg
test
lock
stos
cmp
sbb
cmp
pushf
push
scas
pop
clc
inc
cmp
sub
mov
cmp
xlat
fsts
mov
mov
call
dec
stos
fcmovbe
movsb
test
sub
push
cmp
pop
xchg
popf
mov
jp
aam
and
test
ljmp
jnp
sub
dec
stc
arpl
add
bnd
push
aaa
xor
cmp
outsb
movsb
mov
sub
sub
push
inc
mov
mov
cmp
les
sub
dec
jl
loop
outsl
jge
inc
scas
sbb
aam
and
rol
push
mov
adc
mov
enter
mov
out
lret
cmp
or
or
pushf
pop
test
cmp
push
das
and
cmpsb
int3
int
xchg
jo
push
in
xor
jmp
adc
dec
add
pop
rcr
mov
aad
int
jns
out
in
movsl
and
in
add
adc
lock
scas
les
push
cmp
xor
xorb
inc
sbb
sub
fdivp
enter
iret
xchg
pop
push
pop
shll
mov
aam
xchg
lret
popa
nop
sub
into
fsub
xchg
call
movd
mov
dec
leave
push
jl
repnz
addl
dec
outsl
pusha
in
cmc
xchg
jle
mov
mov
add
js
call
mov
sub
jmp
jbe
leave
sbb
and
les
mov
lea
jmp
or
jbe
es
pop
leave
stos
ror
out
fisttps
loope
xchg
pop
testl
or
and
in
sub
imul
pop
sub
dec
cltd
jae
mov
stc
cmp
inc
pop
cwtl
out
pushw
inc
xchg
out
fwait
mov
xchg
xorb
jns
insl
in
ljmp
in
cs
gs
leave
ja
and
cli
addb
mov
inc
sar
fsubrs
mov
jno
cmp
arpl
test
cld
in
jbe
push
or
jmp
cmc
data16
ret
cs
mov
push
out
cmpl
and
add
fwait
les
cmpsb
jge
xor
jns
insl
cs
jle
ja
lock
jmp
orl
and
jae
and
mov
ret
sbbl
cltd
dec
lcall
inc
mov
jne
pop
std
sub
pop
cmpsl
jno
imul
repz
add
inc
pop
mov
ficompl
xor
push
ljmp
ds
pop
adc
scas
xor
sarb
int
ss
lcall
mov
test
mov
ds
ret
add
sbb
gs
stc
sub
ljmp
fcmovnbe
xorb
dec
mov
into
sub
popa
xchg
jo
out
or
cld
sub
push
push
pushf
popa
sub
dec
push
xchg
js
cmp
mov
sbb
loope
xchg
fdivrs
popf
xchg
in
cmp
ficomps
mov
mov
in
add
cltd
cmp
testb
leave
in
mov
addb
sbb
lock
dec
das
divb
in
jbe
jne
push
pop
mov
sbb
out
je
leavew
fbstp
adc
hlt
jne
push
cli
imulb
mov
xchg
cli
js
pop
dec
adcl
test
popf
mov
daa
mov
dec
shlb
pop
push
or
or
dec
push
adc
or
xor
pop
enterw
jns
sub
push
aaa
mov
and
inc
mov
jecxz
jae
ss
outsb
jns
jl
orl
mov
sbb
lods
sub
or
rcrl
xor
out
test
aad
testl
mov
mov
add
mov
push
fstpt
fisubl
pushf
cmc
pop
inc
jmp
fcoms
xchg
rcll
inc
rorb
mov
mov
sbb
cmp
pop
jo
sahf
mov
movsl
mov
stos
inc
btcl
dec
mov
pop
adc
shl
scas
mov
test
xchg
movsb
cmp
push
xor
test
and
idivl
gs
fiadds
inc
orb
xor
xchg
test
ss
jl
jb
test
mov
dec
xchg
mov
bound
push
pop
dec
mov
fsubrl
ljmp
out
icebp
out
test
and
cld
pop
push
aam
add
out
pop
push
pop
cmc
lret
cmp
cli
xchg
cmpsb
scas
dec
cmp
jl
fucomi
jb
hlt
ljmp
fidivrs
pop
sub
pop
nop
mov
daa
sbbb
sbb
mov
xchg
add
cld
mov
jl
test
cmp
dec
fnstsw
dec
fistpll
mov
ret
xchg
dec
fmulp
mov
js
add
xor
sub
lahf
add
out
imulb
xchg
imul
cmp
int3
push
jle
dec
mov
or
mov
ss
sbb
jecxz
or
repz
dec
sarb
mov
shll
mov
adc
bound
push
scas
or
bound
outsb
and
jecxz
cmc
std
dec
xchg
ds
insl
xlat
xchg
in
jnp
stc
cltd
fisttpl
adc
lcall
xor
sti
outsb
ljmp
xorl
adc
lcall
arpl
or
fld
or
jle
cli
push
adc
push
imul
and
sub
mov
adc
mulb
jbe
pop
push
lods
popl
xor
sub
idiv
sbb
fwait
aaa
add
popf
hlt
sahf
sbb
xor
pop
aad
and
sub
jecxz
stc
aaa
int
inc
xor
adc
push
add
lar
xchg
xchg
xor
inc
pop
xchg
in
ficoml
cwtl
jb
or
sarb
sahf
test
sub
les
mov
sub
mov
push
dec
mov
scas
fistpll
aam
imul
xor
addr16
fldenv
mov
sbb
aaa
jecxz
cld
cmpsb
stc
movsl
pop
subb
mov
fdivs
lea
cmp
test
dec
dec
dec
xlat
out
pop
js
fldt
sbb
xchg
fstp
mov
lahf
push
cmp
mov
out
mov
xor
cmpb
jnp
pop
push
lret
aas
push
cld
mov
rcll
cld
inc
or
inc
scas
pusha
mov
inc
fs
pop
push
dec
and
nop
cmp
aaa
pop
lcall
cmp
jp
dec
lock
rorb
fldt
jp
out
jle
mov
hlt
insb
arpl
scas
daa
xchg
je
cmpsl
pop
aas
push
mov
ds
xor
add
stc
adc
lahf
jmp
ret
push
popa
adc
mov
jl
xchg
testb
xlat
popf
fcoms
push
int
shlb
imul
stos
cmpsb
mov
xchg
and
mov
xor
push
jnp
cwtl
fdiv
and
mov
jmp
cmp
adc
aad
enter
jno
jne
lea
push
pop
aam
aaa
xchg
adcb
decl
push
sahf
int3
dec
mov
and
shll
iret
push
push
cs
or
pop
int
jmp
inc
call
dec
push
testl
scas
mov
pop
scas
inc
lcall
sti
jno
add
jb
repz
outsb
mov
mov
xchg
mov
shll
orl
mov
test
int3
fdivl
adc
outsl
lea
rorl
cli
in
adc
sub
stc
cmp
mov
and
mov
out
mov
xchg
testl
sbb
inc
cld
push
movsl
mov
dec
push
lret
cmp
adc
dec
xchg
into
mov
stos
pop
outsb
popf
jecxz
mov
xorl
inc
pop
pop
fwait
or
cmp
jns
loopne
sub
out
out
mov
orl
jp
pop
and
xlat
imul
in
lahf
test
pushf
rolb
inc
pushf
pop
fwait
xor
cmp
mov
call
outsl
sbb
ficoms
sbb
and
call
dec
add
jns
sbb
in
dec
fldl
stos
ljmp
mov
out
fdivl
sbb
sub
aas
std
xchg
mov
repz
jbe,pt
ds
inc
pop
movsb
and
sti
cmp
in
fdivs
sub
add
je
mov
roll
add
cmp
pop
pop
call
loope
insl
cmc
cmp
inc
cld
addr16
outsb
nop/reserved
mov
fstpl
into
lret
leave
dec
cmpsb
sbb
mov
hlt
dec
xor
insb
sub
jae
fwait
sbb
mov
in
xor
movsl
ss
jge
cmp
in
lcall
adcl
lahf
xor
xor
rcrb
xchg
stc
mov
adc
mov
cltd
rcll
fildl
mov
in
and
scas
jmp
add
mov
ret
cmp
or
adc
hlt
mov
ss
sub
pop
imull
ret
inc
out
mov
mov
loop
das
pop
test
clc
jbe
lcall
push
sbb
push
adc
jle
in
mov
mov
or
dec
pusha
jg
jmp
push
xchg
adc
roll
adc
jbe
mov
dec
inc
xorb
push
adc
loopne
jecxz
std
pop
add
or
pop
sbb
mov
dec
icebp
inc
icebp
pusha
cmp
inc
cmp
daa
and
xlat
enter
fcmove
movl
and
jbe
and
adc
sbb
setp
into
push
popf
in
out
test
adc
dec
adc
repz
adc
ja
in
pop
inc
sbb
mov
mov
xchg
stc
push
jmp
out
mov
mov
repz
pop
cmp
vmread
mov
scas
repnz
lock
cmpsl
jg
push
aaa
or
xor
cmp
cmp
mov
ljmp
xchg
pusha
test
sub
ret
mov
ja
mov
and
andb
sbb
adc
sbbb
xor
sub
and
lcall
movb
cmp
loope
xchg
mov
push
and
adcl
imul
fstl
cwtl
aam
mov
ret
adc
fdivs
aaa
mov
adc
out
mov
outsb
add
and
stos
lret
or
dec
test
mov
adc
sbb
inc
cmp
and
jo
push
fisubs
dec
push
xchg
sbb
shl
xchg
xchg
xchg
jb
xor
dec
jmp
insb
int
push
adc
mov
fmulp
jl
adc
sub
mov
insb
popa
loopne
scas
push
pusha
stos
dec
in
jnp
movsb
jecxz
adc
pushl
push
mov
pop
sub
clc
lret
inc
pop
lock
mov
mov
das
inc
loopne
rorb
mov
or
addr16
dec
movsb
mov
and
xor
hlt
xchg
cltd
add
pushf
in
dec
mov
mov
fstpt
aad
mov
cltd
or
mov
dec
inc
sbbl
arpl
lds
dec
scas
aam
lret
repz
adc
push
ja
gs
sbb
js
in
add
ss
cwtl
mov
sti
sti
xchg
pop
mov
outsl
aas
mov
inc
mov
pop
xor
rolb
or
sub
scas
fldl
pop
lret
dec
xchg
mov
lea
popf
dec
rcrl
lea
fnstcw
mov
fimull
orl
mov
mov
sub
and
adc
sub
loop
xchg
ret
lahf
ljmp
pop
mov
mov
ljmp
in
rolb
jbe
lcall
jo
push
pop
test
sbb
fcomps
sar
pop
fwait
cli
psubusw
js
mov
sbb
dec
push
mov
shll
xor
inc
jp
imul
jecxz
hlt
repz
out
push
push
filds
movsb
mov
adcl
sub
test
aam
bound
sub
loope
dec
inc
or
push
idiv
ret
xor
pop
lea
cld
lea
jl
or
cmp
sbb
lods
cmp
lret
ja
daa
sbb
xor
sub
imull
pop
addr16
jmp
cmp
xor
push
into
stc
mov
add
test
jne
fsubrl
xor
dec
push
xchg
and
addr16
mov
mov
mov
scas
jnp
cli
mov
lret
pop
popa
out
and
subl
cmpsb
add
and
paddusw
inc
call
sub
mov
cwtl
insb
xchg
js
mov
pop
ja
mov
dec
push
mov
lock
lret
push
xor
addl
icebp
inc
aas
push
push
movsl
xor
int
je
leave
aas
fwait
mov
jmp
loopne
push
fcmovne
mov
dec
dec
int
fdivs
pusha
dec
mov
into
xor
stos
ljmp
push
out
in
outsl
call
test
push
mov
loope
repnz
daa
adcb
mov
pop
dec
fstl
aas
inc
fcmovnu
mov
pop
out
push
lret
ss
jmp
loopne
loopne
dec
pop
outsb
dec
movsl
subl
in
lea
into
out
pop
cmc
mov
adcb
push
test
test
scas
cmp
ds
pop
mov
inc
sti
enter
dec
sbbb
mov
cli
jo
inc
xchg
lcall
mov
cli
cmp
std
std
push
addr16
mov
xchg
daa
pop
mov
or
in
pop
adc
push
je
pop
jne
outsl
lds
inc
inc
add
mov
scas
mov
pop
or
cmp
scas
xchg
mov
out
outsl
aad
or
hlt
leave
xchg
add
gs
lret
popf
lcall
xlat
cmp
sarb
and
les
push
jns
mov
lret
in
pusha
and
paddsb
cmp
ljmp
push
mov
std
popa
mov
aaa
lcall
scas
or
mov
imul
dec
ret
fmul
mov
fdivrl
pop
leave
hlt
mov
test
cmp
push
arpl
push
nop
adc
jns
add
sbb
mov
stos
cwtl
xchg
or
adc
sub
fidivs
js
ret
add
fdivrl
adc
stos
in
xor
loop
push
adc
fsubs
es
mov
and
mov
stos
pop
push
repnz
repz
add
rorb
and
mov
mov
clc
push
xchg
push
jmp
ss
sti
test
sar
xorb
push
repz
cmp
dec
insl
clc
es
add
sar
ss
lods
fcoms
jae
inc
data16
iret
add
repz
or
mov
shll
or
shl
mov
pop
cs
and
ds
lcall
inc
xchg
and
iret
fcmovnu
rcrl
popa
adc
xchg
jp
inc
idivb
add
imul
js
add
mov
cwtl
mov
sti
and
and
adcb
das
scas
or
bound
add
inc
pop
or
cld
rcrl
xchg
in
shl
mov
push
filds
push
jo
movb
mov
pop
adc
and
dec
shr
mov
add
iret
xchg
jno
xchg
sbb
stos
nop
arpl
clc
out
mov
add
rol
sub
jl
mov
mov
dec
lds
lock
pop
jbe
mov
ja
imul
mov
cltd
xor
stos
mov
cmp
lcall
mov
pusha
sbb
cmp
jmp
aaa
mov
xor
sub
pop
sbb
lret
adc
test
rcl
out
push
out
push
sbb
push
test
lock
ds
les
clc
sub
int3
movsl
jmp
add
add
dec
filds
pop
inc
jbe
in
add
and
and
loopne
mov
or
lods
lea
lea
push
add
insb
inc
dec
mov
cmp
push
adc
js
arpl
aaa
adc
inc
jg
jnp
daa
cmp
add
in
mov
notb
pop
sub
imul
mov
and
sub
vorpd
sbb
mov
xor
lret
out
pop
jns
mov
push
pop
lods
es
call
xchg
insb
xchg
cmpsl
test
cld
xorb
add
scas
or
fwait
rolb
sarl
mov
or
flds
lret
sbb
dec
pop
scas
addb
sahf
xor
dec
xor
mov
dec
push
pop
cmp
pop
pop
push
ficoml
ja
pop
cmpsl
jb,pn
paddusw
enter
ljmp
imul
mov
ss
mov
or
jl
sbb
jl
ss
outsb
dec
adc
fcomip
fmul
jbe
loopne
scas
push
cs
or
repnz
mov
stos
add
movsb
dec
cli
mov
push
stos
cltd
fcompl
jge
ret
cld
dec
rcr
pop
mov
dec
pop
xor
int3
dec
pop
xchg
lods
addr16
hlt
icebp
jns
xchg
pop
mov
mov
je
or
fnstsw
cwtl
out
popl
lcall
jge
pop
add
fs
xchg
fistpl
xchg
push
stos
addr16
and
scas
ljmp
cmp
push
xchg
aam
pop
movsl
stc
mov
adc
decl
or
mov
jns
out
push
testl
pop
lods
imul
mov
call
je
lcall
pop
pop
or
ja
jge
clc
leave
mov
ret
int
clc
mov
es
loopne
mov
and
cmpsb
aaa
cmp
imul
into
xor
shl
stc
mov
dec
scas
pop
outsl
lods
test
xor
hlt
mov
dec
shlb
inc
sarb
lods
and
mov
les
pop
in
pop
sub
fistps
or
ret
cwtl
test
sub
cmp
or
testb
fstpl
pop
push
call
shr
mov
dec
stos
inc
add
push
xor
test
pop
out
jb
pop
movl
adc
aaa
insl
lods
pop
orb
pop
or
push
cwtl
fisubrl
outsb
xor
mov
xchg
adc
fidivrl
idivl
mov
je
cmp
add
xor
bound
loop
gs
cmp
push
jbe
repz
cwtl
cmp
enterw
int
fildll
mov
xor
dec
or
sbb
cli
cmpsl
adc
jne
movsb
cld
adc
and
int
out
mov
jle
push
leave
mov
push
mov
dec
push
pop
sbb
out
addr16
repnz
xor
and
jae
adc
call
add
mov
pop
mov
icebp
jb
or
and
jae
setne
add
data16
inc
pushf
jp
xchg
mov
hlt
xor
or
cmp
test
outsb
cmp
dec
mov
dec
loopne
pop
cmp
sbb
sar
insb
cmpsb
in
lret
fucomip
adc
dec
lods
jle
mov
sahf
add
shl
push
jo
sbb
shlb
scas
ret
in
and
loopne
pushf
ret
inc
xchg
aam
dec
sbb
vshufps
jo
in
jge
ret
ljmp
add
test
add
add
push
or
in
fwait
push
adcl
pop
inc
mov
lods
divl
je
adc
sbb
stos
or
and
jmp
jb
mov
dec
test
and
push
push
mov
mov
cli
loop
mov
xchg
repz
pop
xor
and
push
jg
mov
dec
movsb
push
adcb
cmpsl
add
push
iret
inc
push
or
aam
dec
subb
mov
imul
sbb
bound
cld
sub
shrb
cmpsl
sbbl
dec
xor
cmp
cmp
movsl
dec
pushf
or
daa
xor
mov
xor
enter
inc
negb
call
sub
add
xor
clc
test
data16
fistps
push
dec
push
fsts
ja
and
cmc
scas
dec
scas
adc
sahf
sub
mov
movsb
mov
sub
loope
and
adc
push
jae
xchg
mov
lret
jns,pn
sbb
repz
icebp
push
enter
mov
pop
subb
jge
sub
push
out
loope
loop
pop
test
mov
or
or
adc
adc
fptan
out
ljmp
push
cld
sti
imul
aam
pop
sbb
scas
mov
std
sbb
mov
rorl
or
mov
push
or
sub
push
adc
rorl
push
and
push
jge
in
addr16
xchg
add
icebp
scas
js
lcall
pop
dec
adc
xor
movsl
lods
inc
stos
bound
ret
sarl
xor
iret
dec
or
cmp
repnz
inc
or
leave
jns
jne
arpl
adc
pop
inc
sarb
sub
pop
repnz
jb
add
xor
mov
idivl
mov
add
fwait
jg
bound
aad
sub
popf
lods
testl
das
push
mov
test
and
add
adc
das
dec
cli
nop
mov
mov
pushf
lcall
mov
scas
sub
gs
je
icebp
sub
ja
out
das
jno
xchg
mov
hlt
pop
mov
and
sub
in
jle
gs
sti
testl
loop
std
inc
lock
push
adc
in
push
pop
repnz
out
or
out
ljmp
ret
jmp
pusha
cli
xlat
and
fldcw
lods
scas
mov
lret
sbb
mov
ja
mov
and
test
repnz
jbe
mov
xor
ljmp
inc
jecxz
cltd
daa
adc
add
xchg
xchg
mov
adc
insb
dec
push
cs
push
xor
sbb
mov
and
cmp
fdivs
inc
ja
ljmp
rorb
mov
aam
push
lods
insb
data16
sub
fadd
loope
popa
fbld
aad
xchg
sahf
jge
cld
int
and
inc
push
adc
testl
xchg
outsb
and
sbb
adc
and
mov
push
aas
add
xchg
mov
pop
add
push
fisubl
fdivr
pop
mov
push
push
in
xor
or
fcom
add
sahf
stos
shrb
into
adc
and
pop
outsb
mov
pop
sahf
lea
adc
and
nop
cmp
dec
sub
xchg
sbb
adc
repnz
sbb
imul
scas
pop
lds
das
push
insl
pop
cwtl
and
cwtl
outsl
enter
inc
test
cmc
out
popf
cwtl
fldcw
arpl
push
imul
pusha
jmp
inc
push
cmp
clc
mov
stos
pusha
loope
sbb
or
jg
mov
adc
push
data16
lock
mov
lock
lret
movsl
pop
roll
adc
clc
inc
inc
lock
push
xor
out
repz
dec
pusha
fs
or
mov
inc
fbstp
xchg
inc
call
repnz
xchg
inc
ret
dec
cmc
mov
mov
imulb
add
cmpsb
xor
push
cmpsb
xchg
sarl
stos
repz
mov
insl
and
jmp
mov
push
fisttpl
xchg
xchg
mov
push
mull
jnp
daa
inc
pusha
mov
add
cmp
sbb
fnstsw
mov
dec
sub
mov
das
cmpsb
xchg
pop
setno
stos
dec
xchg
sub
push
mov
pop
sub
repnz
lret
push
cmp
jle
in
test
incb
sub
loope
xor
les
sahf
movsb
test
popf
int
inc
mov
sub
movsl
ret
mov
bound
cltd
insb
arpl
and
xlat
jmp
add
call
or
sub
into
sahf
mov
lods
cmpsb
call
push
fisttps
jns
arpl
xchg
aam
jb
stos
shrl
sbb
sbb
ds
outsl
mov
inc
cmp
or
push
shl
call
add
jae
mov
mov
dec
push
pop
mov
xor
sub
and
loope
push
xchg
daa
jnp
dec
inc
sbb
pusha
lcall
mov
xor
test
fucomi
push
and
jnp
imul
jp
movsl
push
test
pop
xor
mov
ret
iret
and
sbb
dec
out
fwait
jbe
popa
scas
ljmp
and
jns
inc
mov
add
imul
mov
mov
dec
ret
mov
shlb
pop
imul
movsl
and
mov
fdiv
stos
inc
adc
inc
movsl
lcall
insb
add
jl
out
sbb
mov
out
test
push
jg
rcll
xor
rcll
fildl
sub
mov
and
and
sub
ja
xor
aaa
es
adcb
mov
out
out
pop
jo
ja
cld
test
insl
push
dec
adcl
mov
sbb
stos
xor
fisubrl
movsb
repz
push
push
pop
or
cld
in
iret
stos
xchg
pop
enter
mov
cmp
into
sbb
and
or
inc
lahf
add
sahf
cmp
int
dec
stos
mov
jge
push
inc
dec
andl
pop
jge
mov
mov
mov
daa
add
call
or
addl
xchg
fucomip
mov
cmp
add
popa
popf
push
sbb
in
inc
xchg
sub
push
rcrb
mov
xchg
or
xchg
bound
mov
sub
cmp
mov
sbb
adc
inc
xlat
out
repz
lods
je
and
dec
xchg
ret
sbb
push
xchg
jno
aas
inc
sti
cmp
aad
fstpt
and
pop
jno
pop
fldt
and
or
push
inc
cmpsl
nop
mov
decb
push
sub
test
dec
mov
jo
cmpsl
bnd
rcrb
or
mov
jecxz
or
js
dec
or
jae
frstor
rcrl
sbb
mov
ljmp
inc
xor
sahf
xchg
pop
into
sbb
hlt
sub
out
xlat
add
and
pusha
and
jg
push
sarl
and
xor
sarl
nop
subb
sbb
insb
int3
push
ret
jb
add
mov
lea
sub
pushf
cmp
mov
jnp
jge
xor
cmp
loop
jbe
lahf
jl
rcrl
mov
cli
push
mov
inc
ss
sub
dec
sbb
jp
clc
or
pushf
je
in
subb
in
jnp,pn
adc
mov
pop
mov
pop
and
sbb
and
adc
inc
push
fmulp
pop
xchg
faddl
xchg
and
outsl
sbb
and
call
inc
xchg
out
das
mov
dec
arpl
loop
push
dec
mov
popa
sbb
inc
mov
std
xor
cmp
mov
into
inc
jl
nop
cmp
insl
push
sub
sbb
int3
aaa
jg
push
push
xacquire
movsb
jp
xchg
repz
popf
loop
testb
out
adc
mov
jae
xor
xor
jo
aad
mov
addl
push
mov
shl
push
mov
fstl
dec
jbe
lods
cmp
cmp
mov
aaa
pop
callw
mov
cli
and
stos
aaa
cmp
mov
lret
sub
arpl
mov
scas
mov
pop
in
pop
arpl
jp
rolb
bound
pop
push
and
dec
lret
pop
out
mov
fstpl
outsl
sub
orl
bound
xchg
je
add
mov
cmpb
orb
jb
int
jno
arpl
adc
icebp
sub
add
cmp
ds
xor
sub
push
jnp
data16
daa
mov
push
sbb
push
push
and
lods
int
roll
jle
loope
or
outsb
sbb
popa
aam
stos
out
or
inc
addl
pop
cmpsb
pop
int
inc
cmp
jbe
adc
lahf
pop
cmp
mov
sbb
xor
cli
inc
fmul
aaa
mov
cli
decb
mov
fprem1
das
subb
out
xchg
ds
mov
xchg
mov
icebp
or
pop
mov
mov
mov
jle
inc
push
fsubs
jae
xchg
pop
loope
incb
ret
inc
mov
movb
fwait
inc
addr16
xchg
sub
dec
stos
dec
imul
bound
loope
jmp
jg
jae
mov
cs
daa
push
fcomi
ret
push
or
push
pop
or
or
ret
xchg
push
fbstp
or
jae
inc
repnz
cmpsl
or
mov
push
xlat
imul
popf
adc
popa
out
mov
jno
jae
inc
dec
jo
add
push
pop
xchg
lock
dec
sub
jg
and
insb
fbld
cmp
out
push
mov
cmp
mov
daa
xor
cwtl
mov
jge
pop
inc
push
adc
lcall
dec
aas
sub
fisttps
sbb
clc
push
push
insl
mov
dec
lock
sti
or
out
xor
jge
frstor
jno
mov
mov
sbb
clc
pop
mov
stc
sbb
aaa
sbb
add
repz
out
sub
push
jl
ffree
jl
insl
mov
inc
mov
pushf
push
xlat
xor
outsl
mov
mov
push
jmp
cmc
xchg
adc
fisubl
xor
jecxz
jl
xchg
cli
mov
int
jo
or
or
subb
jnp
mov
mov
adc
mov
imul
mov
enter
mov
lods
pop
push
lahf
pop
pop
aam
icebp
sbb
shl
mov
dec
pushf
lahf
xor
nop
movsb
inc
pop
dec
cmpsl
inc
addr16
imul
lcall
adc
cmp
shll
jbe
pop
repz
jne
scas
incb
scas
inc
xor
inc
lea
xchg
rorb
cld
cs
jne
push
add
gs
test
add
lods
adc
mov
sbb
push
xor
add
sti
adc
push
imul
out
xchg
push
cmpsb
dec
inc
out
sub
fsubl
pop
push
icebp
addr16
jo
popf
inc
jmp
mov
jnp
pop
call
sarl
pop
into
cmp
xchg
mov
xor
pop
std
mov
push
sub
lcall
cmp
ja
push
sbb
fwait
and
and
mov
inc
scas
rclb
test
shrl
add
cli
dec
inc
xor
dec
lea
hlt
inc
hlt
mov
int
and
flds
imul
cltd
and
fidivs
cmp
scas
ret
stc
in
adc
ds
cmp
mov
in
jge
xchg
bound
add
adc
inc
mov
in
mov
pop
xchg
repz
nop
fisttpl
cmp
jmp
mov
inc
shlb
cmp
scas
mov
sahf
int
or
xchg
sub
movsb
dec
xchg
icebp
push
nop
scas
int3
cmp
mov
sub
mov
mov
mov
cltd
jnp
repz
mov
lahf
inc
xchg
xchg
gs
ficoms
imul
fldlg2
cmp
fwait
add
shrl
inc
jo
mov
jnp
jns
addb
nop
pop
std
inc
aad
dec
fldcw
dec
in
jmp
fdivrl
push
ret
add
es
or
push
pusha
push
jne
push
fldenv
mov
loop
lods
call
cmp
adc
aaa
sbb
sahf
gs
imul
daa
xchg
in
lcall
lods
jb
and
subl
or
jg
out
loopne
push
xor
jl
insl
ret
shrl
adc
andb
or
in
push
inc
sub
aaa
cmpsl
xchg
xor
mov
dec
ret
arpl
push
dec
xchg
or
leave
mov
xor
fwait
or
and
loope
test
jno
inc
jmp
sahf
rcrb
fimuls
jecxz
stos
cmpsb
imul
lret
cld
sbb
outsb
mov
mov
leave
or
cmp
ret
dec
xor
mov
mov
and
hlt
call
push
fwait
js
mov
sbbb
dec
popf
test
scas
js
adc
stos
in
sub
ja
pop
mov
or
outsl
js
loopne
jb
fld
in
test
pop
rorb
mov
loopne
outsb
test
data16
pop
lods
cmp
and
js
test
xorl
test
cmc
pop
fimuls
and
dec
pop
pop
nop
stc
or
adc
scas
xor
adc
cmpsl
cwtl
sub
adc
in
cpuid
dec
xor
rcrl
jge
push
mov
out
pop
enter
addl
push
call
sub
fs
adc
sub
neg
into
pushf
inc
add
cmp
stos
lret
push
ret
mov
sahf
je
ret
and
jno
fs
xor
sub
jae
das
jmp
mov
dec
push
arpl
mov
cmpl
mov
and
movl
in
mov
shlb
pop
xor
mov
add
test
jno
mov
idivl
mov
les
pop
pop
into
jne
sbb
mov
and
sbb
pop
mov
sbb
mov
sar
xor
fdiv
nop
cmp
stos
add
add
xchg
adc
nop
jo
mov
popa
insl
push
push
and
pushw
jae
push
xorl
mov
pusha
pop
mov
das
rol
repnz
pop
sti
mov
push
lahf
mov
movsl
mov
or
outsl
push
push
dec
push
sbb
push
and
test
jno
ret
inc
and
repnz
xchg
in
jne
pop
lret
jnp
dec
jae
jp
adc
mov
lods
cmp
popa
bound
test
dec
mov
idiv
bound
cmpsb
push
mov
insl
or
loop
popf
movsb
xor
loop
stc
sbb
cmp
aas
bnd
out
cwtl
scas
out
je
add
in
or
add
fildll
movsb
jae
cltd
lahf
aam
fmuls
mov
cmp
lods
rolb
je
inc
out
mov
cmpl
pop
imul
sbb
fiadds
repz
js
xchg
pop
mov
mov
out
push
fwait
adc
daa
testl
icebp
push
xchg
ljmp
xchg
mov
dec
popa
mov
xor
xchg
stc
call
dec
outsl
push
cmpl
mov
xor
leave
push
outsb
test
in
inc
adc
loopne
lods
mov
stos
push
mov
orb
cmp
rcr
jae
cltd
pop
mov
in
int
mov
aas
mov
sub
cwtl
xchg
cmc
mov
mov
sbb
cmc
jae
pusha
test
and
mov
in
jb
aam
xchg
sub
ficoms
icebp
pop
adc
cmp
lds
jb
stos
in
sub
adc
xor
add
icebp
out
push
daa
xchg
dec
lcall
in
gs
dec
inc
les
daa
pop
stos
ss
dec
jp
dec
icebp
adc
adc
mov
adc
lret
mov
inc
xchg
pop
mov
xchg
adc
mov
fidivrs
test
out
xor
inc
addr16
btc
aas
lods
fidivs
push
pop
rclb
xor
xchg
adc
stos
xlat
pop
dec
repnz
pop
shlb
ds
loope
imul
push
adc
test
dec
inc
insl
lock
call
mov
clc
push
jns
sbb
movsb
ret
xchg
pop
aas
adc
push
and
and
int
adc
cmpsl
jo
jl
add
aam
stc
lahf
inc
mov
jle
ljmp
inc
cmpsb
out
sub
loope
mov
into
mov
xchg
inc
xor
inc
movsl
xor
mov
int3
sahf
mov
gs
into
je
imul
lret
sbb
repnz
les
cmc
jmp
pop
dec
jle
mov
les
push
lret
test
test
xor
sub
jne
mov
xor
dec
jl
push
loop
pusha
rorb
xor
lods
divl
jl
cli
push
enter
loope
out
loope
xchg
addr16
jns
pop
mov
and
mov
xchg
push
loopne
xchg
std
repz
es
jp
adc
push
pop
mov
jno
fsubrp
pusha
cwtl
cmpsb
jbe
sbb
rorl
cs
and
ljmp
mov
rolb
xchg
call
sahf
fldl
ror
push
int3
movsb
xor
pop
shlb
ss
int
lea
outsb
sbb
sahf
lds
dec
cmp
mov
dec
lret
mov
cli
mov
mov
push
std
dec
addr16
in
cmp
icebp
cwtl
sti
sbb
mov
sbb
sub
rcrb
xchg
and
fsubrl
cmp
xor
ficompl
roll
xchg
aaa
nop
into
mov
mov
sahf
pushf
lock
push
fisubrl
ss
out
push
xor
gs
or
sub
cmp
xchg
add
arpl
inc
rcll
outsb
jns
jo
push
icebp
fisubrs
xchg
sbb
int
call
jo
dec
mov
xchg
pop
into
movsb
inc
or
xchg
ret
dec
rcll
stos
nop
repnz
mov
sbb
leave
out
mov
lret
divl
arpl
push
xchg
cmp
outsb
ret
jb
xchg
xchg
mov
and
jae
repz
mov
push
sbb
hlt
add
cwtl
aad
int
mull
or
ljmp
in
pop
cmp
dec
adc
cmp
pop
jns
xchg
or
xchg
xchg
packsswb
cmp
adc
sbb
sahf
xor
lahf
inc
ljmp
sub
xor
cli
jnp
mov
rclb
out
ljmp
adc
movsl
inc
test
js
sar
xchg
sbb
jp
lcall
out
pop
movsl
mov
outsb
and
out
adc
xor
add
es
andl
ret
mov
daa
aad
sub
push
repnz
xor
push
out
ret
and
cld
inc
insb
or
inc
pop
and
push
aad
dec
addb
push
and
push
pop
adc
divb
pop
xor
push
insb
xor
inc
dec
mov
pop
xor
stos
mov
popa
lods
pop
sub
iret
mov
pop
mov
xorl
test
xchg
mov
js
sahf
jp
stos
cmp
push
dec
sbb
js
out
int3
fnstsw
push
and
and
js
je
mov
jae
mov
and
lret
sub
add
xlat
dec
rcll
imul
add
cwtl
mov
xchg
sbb
popa
add
xchg
rcll
test
jge
cwtl
dec
push
pop
pushf
pop
les
mov
xor
cli
subb
insb
es
add
pushf
in
outsb
push
cmp
adc
add
mov
push
cwtl
xchg
call
and
lods
or
repnz
bound
xor
ljmp
mov
js
les
and
cmp
sti
xorb
push
movsb
ss
add
je
jmp
push
testl
pop
mov
insb
mov
inc
lods
aaa
out
jg
pop
jnp
mov
loopne
dec
or
cwtl
mov
je
jo
and
lock
lds
adc
sbb
dec
mov
gs
push
mov
aad
outsl
outsl
mov
movsl
xchg
shr
mov
addr16
out
cmp
insl
lock
mov
jnp
adc
std
xor
ljmp
fcoml
inc
and
xor
or
dec
insl
pop
inc
jmp
jo
loopne
adc
fs
xor
xchg
sbb
aas
fidivrl
adc
adc
mov
bound
add
mov
test
xchg
fs
lods
outsl
je
jo
xor
mov
nop
jae
je
sahf
dec
in
les
pop
cli
mov
test
add
xchg
or
mov
pop
call
add
frstor
xor
mov
pop
adc
std
pop
dec
mul
push
or
dec
test
inc
cs
movsb
jne
sar
insb
jmp
notl
fcmovnu
stc
sbb
shll
jmp
lahf
mov
int
insb
mov
lret
xlat
inc
adc
mov
bswap
test
movsb
das
es
mov
test
adc
or
xchg
test
das
or
cmp
jecxz
pusha
lock
and
inc
pop
aam
out
cmp
xor
sbb
cs
jbe
push
cld
cld
cld
xor
mov
sete
pop
int3
into
sbb
pop
ror
scas
xor
fdivr
in
popa
insb
pop
push
sarb
dec
loopne
dec
out
pop
dec
andb
mov
jnp
xchg
mov
loop
push
ret
movsl
xchg
jmp
lods
mov
movsl
cli
iret
inc
lds
pop
jne
sbb
sbb
sbb
js
das
xchg
mov
mov
and
repz
inc
mov
add
jne
add
lahf
pop
shrb
mov
xlat
cltd
aad
cmc
stc
scas
mov
mov
mov
lret
jnp
cmp
lret
add
out
jae
scas
xchg
xor
test
jmp
imul
cmp
jmp
jmp
gs
mov
gs
lea
dec
shr
cs
xor
lret
enter
mov
mov
mov
cltd
xchg
in
notb
mov
or
xchg
movsl
and
cld
sub
sub
sbb
int
movsl
mov
jae
push
and
fxch
add
fwait
ljmp
fstpt
add
inc
mov
mov
pop
inc
dec
cmovg
in
jge
sbb
adc
push
mov
loop
push
adc
leave
cmpsb
imul
and
pop
push
test
jne
hlt
repnz
imul
cli
cmp
leave
pop
jno
loop
or
push
pop
push
or
test
fwait
sbb
inc
negb
mov
sti
mov
outsl
and
daa
stc
mov
ja
push
or
add
cmp
xor
pop
push
popa
mov
movsl
inc
dec
dec
lock
sti
inc
jns
jmp
jo
or
lcall
dec
sub
push
sub
rorl
push
stc
lea
popa
jl
sub
dec
dec
lahf
fmuls
xor
repz
pop
div
or
pop
jb
shll
sub
dec
xchg
xor
push
je
adc
mov
mov
repz
or
adcl
movsl
adc
jecxz
xor
ret
addb
inc
stc
mov
bound
cmp
popa
inc
fbld
insl
cltd
imul
jg
test
or
int
sbb
rcrl
int3
movsb
xchg
push
jp
jl
inc
jmp
fisttpl
push
ds
out
adc
test
push
mov
and
jb
push
mov
inc
iret
xor
push
push
mov
dec
fbld
frstor
dec
push
adc
dec
push
hlt
push
imul
or
ljmp
inc
shlb
ret
mov
aam
test
mov
test
std
push
sahf
lret
push
lods
jnp
push
cmpsb
enter
icebp
mov
pop
out
cli
dec
les
inc
push
sbb
add
sub
and
adc
lret
js
arpl
sub
mov
out
lods
in
push
fwait
testb
in
and
orl
cltd
frstor
gs
ljmp
adc
das
inc
shll
pop
jp
outsl
repnz
pop
jnp
jb
sub
popf
push
imul
ds
add
out
mov
or
push
xchg
sub
sub
je
fcomip
rcrb
loope
ljmp
out
add
xor
out
add
in
mov
dec
sbb
or
pop
add
js
std
sbb
sub
jl
xor
lea
jae
jecxz
fldt
loop
sbb
repz
cmp
insb
lods
pop
in
into
push
cltd
adc
jecxz
pop
pop
outsl
dec
lock
int3
push
add
rcrb
leave
pop
cli
xchg
or
mov
push
in
stos
movsl
enter
gs
icebp
les
insl
dec
sbb
push
jp
push
test
fdivrs
rorb
xor
pop
fildll
and
or
negb
aas
sub
xor
xor
pusha
inc
inc
push
mov
leave
or
aam
je
pusha
mov
cltd
lret
dec
cmpsl
mov
or
xlat
ljmp
xor
pop
cmc
pop
and
adc
cwtl
dec
mov
xor
or
loop
hlt
mul
clc
lea
aad
shlb
daa
call
or
xchg
jmp
pop
push
roll
hlt
sub
cli
or
sub
shrb
test
mov
add
pop
pop
pop
and
cld
mov
pop
outsl
sub
jae
jb
lahf
adc
fisubs
shrb
push
and
je
adc
pop
push
ds
sub
testl
bound
roll
jns
test
fbld
mov
imul
xor
call
add
dec
sbb
cmpl
cmpsl
cmp
lahf
daa
lods
subl
ret
fdivrl
je
lds
je
push
jge
iret
mov
or
mov
sub
enter
xchg
outsl
lret
pop
gs
inc
pop
sub
push
in
lahf
push
lods
lds
dec
in
pop
pop
sbb
mov
das
adcb
mov
or
mov
adc
dec
mov
repz
jg
int3
faddl
mov
ja
test
fsubl
stos
data16
adc
cmc
dec
pop
push
ret
jo
dec
aaa
add
pusha
jns
sbb
in
hlt
cwtl
roll
sbbl
and
in
cmp
roll
mov
out
in
dec
cltd
pop
movsl
nop
add
or
scas
add
jge
daa
sub
jmp
sbb
mov
imul
aam
add
add
iret
adc
in
inc
add
pop
jno
adc
xchg
shlb
mov
or
jmp
daa
shr
xchg
mov
movsl
test
testb
loopne
mov
inc
add
push
pop
out
inc
dec
popf
sub
or
pop
sub
sbb
stos
cli
enter
js
popa
pop
lahf
popa
std
adc
inc
out
mov
xor
push
jp
pop
sbb
mov
jne
push
sub
popa
or
cmp
ja
movsb
xchg
popa
mov
outsl
dec
cmp
shlb
xor
xor
fidivs
and
dec
lock
jmp
push
out
fs
rolb
repnz
ror
and
pop
insb
pushw
ss
cmp
jle
in
fmull
mov
lret
out
jbe
lods
scas
inc
aad
inc
stos
inc
mov
pop
inc
pop
aas
cmc
cmc
cmp
adc
mov
mov
mov
lods
adc
lock
mov
xchg
lret
test
clc
pop
sub
cs
test
fisttps
jno
sbb
push
adc
out
stos
ret
adc
xchg
inc
jo
inc
repz
push
mov
push
or
aad
in
out
mov
jbe
mov
inc
push
int3
xchg
add
mov
inc
push
cwtl
pop
loopne
repnz
push
mov
icebp
ljmp
inc
mov
aad
pop
repnz
push
push
movzbl
fmull
sbb
std
dec
cmp
aaa
pop
or
mov
mov
mulb
pop
jl
push
add
ret
xor
out
xor
jg
mov
jg
xor
cmp
lahf
outsb
sub
pop
jmp
loope
stos
dec
inc
test
push
into
mov
jae
cli
addr16
jl
je
clc
cwtl
das
decl
stos
outsb
cmp
scas
sahf
add
repz
add
ret
and
ds
xor
push
in
call
cmp
jae
sub
xor
subl
int3
pop
imul
icebp
insb
mov
outsl
fistpll
cmp
sub
sahf
push
cmp
lret
pcmpeqb
in
dec
rorl
fdivrs
adc
dec
mov
mov
dec
test
into
es
pop
addl
test
pop
orb
mov
int3
or
lahf
out
stos
or
rcrb
shrb
lods
sbb
scas
scas
push
hlt
jb
arpl
jnp
mov
sub
fcompl
sbb
loopne
outsl
add
and
nop
js
rcll
mov
or
jecxz
and
loope
adc
adc
int3
fsts
mov
ljmp
cmp
jns
add
aam
lcall
push
jmp
mov
gs
int3
mov
mov
push
test
rcll
pop
add
xchg
aas
pop
adc
xor
cmp
push
and
cltd
loopne
loopne
lret
mov
dec
add
sbb
jae
inc
repnz
mov
outsb
sub
mov
inc
and
cmp
jo
shlb
loopne
ljmp
xorl
adc
xor
jo
mov
aam
arpl
inc
sub
test
mov
mov
fisubs
push
adc
movsb
sbb
in
mov
adc
cld
xchg
mov
mov
popa
mov
aad
adc
daa
sbb
and
test
xor
or
dec
ljmp
cmc
stos
fcomps
add
mov
jnp
mov
jnp
in
xlat
test
mov
dec
addr16
xor
add
call
jns
popa
add
push
adc
fidivrl
je
imul
push
jmp
sbbb
xlat
inc
outsl
cmpl
mov
push
mov
jmp
sub
ficoml
push
mov
mov
int
sub
jp
jnp
sahf
mov
xchg
mov
aas
iret
inc
mov
jb
pop
out
push
xchg
mov
jbe
add
ret
sbb
add
popf
mov
jge
sbb
addr16
mov
pop
jno
sub
sub
roll
shrb
jb
adc
mov
adc
cmp
out
adc
out
push
lea
dec
sbb
pop
aaa
mov
mov
testl
into
add
jo
lcall
and
adcl
pushf
mov
inc
call
repz
inc
or
xor
outsl
lea
and
cmpsb
sbb
push
pushf
mov
and
test
xor
pop
inc
xor
jle
pop
shrb
popa
adc
jbe
mov
jo
cmp
popf
cmpsl
pop
jle
in
adc
lea
adc
xchg
pop
pop
jo
lahf
stc
or
pop
push
and
and
lret
ficoml
push
mov
inc
jo
rcrb
lret
fldenv
scas
mov
xchg
inc
adc
adc
repnz
movsb
mov
int
inc
jecxz
push
mov
inc
and
insb
cld
add
xor
xor
dec
pop
cli
inc
mov
sub
dec
insb
lahf
xchg
andl
pause
pushf
fistpll
enter
insl
iret
int
lea
mov
or
mov
enter
shlb
les
fisubrl
cmp
pop
push
movsl
or
mov
xor
fisubrl
aad
push
dec
dec
insb
data16
popa
out
inc
push
push
push
in
mov
or
dec
cmp
inc
or
lods
xor
in
gs
and
loope
cmp
adc
pop
sti
mov
inc
or
rep
xor
loopne
jmp
out
dec
or
fiadds
insl
vcvttsd2si
clc
stos
add
jns
fs
xchg
sbb
lret
into
mov
jg
les
pop
xlat
push
jb
dec
adc
and
bound
pop
loopne
mov
adc
mov
mov
stos
mov
loopne
and
pop
pop
mov
fwait
xchg
add
and
out
movsb
xor
or
icebp
dec
cs
ficompl
add
js
inc
xchg
inc
xchg
mov
into
lahf
hlt
mov
jae
test
push
insl
mov
aas
aam
fs
mov
scas
push
mov
rclb
ret
mov
out
mov
and
pop
pop
xor
inc
mov
xchg
cmp
icebp
fcom
mov
sub
bound
clc
int
les
gs
mov
mov
sarl
repz
fwait
mov
inc
push
leave
cmp
das
sbb
enter
enter
aad
jne
pop
and
das
inc
jge
sub
insl
lcall
lea
pusha
pop
and
xchg
sub
mov
jmp
insb
push
bound
test
fisubrs
shr
and
addr16
xor
fisubl
pop
ja
repz
lds
mov
fsts
pop
in
aaa
dec
sub
mov
mov
mov
mov
ljmp
and
fldl
fidivrl
fsubl
sub
out
negl
in
mov
hlt
stc
dec
adc
jg
add
add
repz
and
stos
enter
test
in
and
xchg
out
loopne
adc
adc
rorb
sub
cmp
out
pop
and
sub
and
mov
in
push
inc
add
int
mov
loop
xor
loope
sbb
data16
xchg
push
icebp
jl
adc
xchg
push
cmp
movsb
test
add
add
push
popa
xchg
cltd
lcall
into
je
dec
jne
mov
adc
pop
inc
call
jae
test
jb
dec
inc
movsb
das
add
nop
sub
jae
mov
push
dec
mov
cwtl
cmc
xor
mov
xor
das
int3
test
pop
jle
out
addr16
xabort
or
fwait
dec
nop
repnz
push
push
fcom
jnp
jle
sbb
outsl
imul
mov
out
std
test
jno
and
cltd
mov
pop
and
jg
imul
movsl
sbb
pusha
dec
jp
and
mov
ret
addl
lret
pop
call
loop
dec
sbb
inc
push
xchg
test
shr
dec
repz
sti
push
mov
inc
loop
sahf
pop
xchg
scas
push
cmpsl
mov
lea
pop
fucomp
sbb
in
fisubrl
shll
lret
jo
sbb
ds
inc
leave
out
shlw
ja
bound
es
pop
aaa
mov
push
lret
test
fs
lahf
das
xchg
dec
mov
shrb
mov
jge
sub
mov
test
or
push
mov
mov
fwait
cmp
ret
xchg
push
dec
sub
idivl
xchg
outsb
dec
mov
iret
cmpsl
loope
sbb
cmp
cmp
clc
gs
pop
js
lea
push
out
test
mov
dec
dec
iret
rcr
scas
jo
insb
mov
mov
xchg
push
rorb
movb
test
and
mov
jae
dec
sti
jnp
sbb
fcmovb
jae
cwtl
mov
dec
adc
mov
mov
inc
mov
adc
mov
jmp
addl
stc
xchg
rorb
sub
jbe
add
mov
filds
cmp
inc
inc
push
cmp
xchg
adc
xchg
fildl
das
sub
jmp
xchg
out
lahf
inc
repz
mov
lea
dec
inc
cmp
sbb
mov
ror
mov
mov
adc
and
into
mov
fdivrp
pop
cmp
fs
mov
mov
cmc
pop
sahf
mov
rcll
sub
xchg
fildl
imul
sbb
sub
lods
hlt
xchg
fs
loopne
outsl
imul
xchg
xchg
lret
lock
aam
ret
sahf
test
mov
push
xchg
jb
icebp
push
mov
mov
clc
fisttpll
xlat
push
xchg
dec
lods
xchg
add
jg
ljmp
test
fwait
push
pushf
ds
daa
fwait
loop
icebp
inc
rcll
lret
imul
into
arpl
jg
push
outsb
or
lahf
mov
or
inc
lds
mov
enter
into
or
jge,pn
add
mov
jno
xchg
cmpsl
mov
add
cmpsl
in
sub
jno
xchg
push
jmp
jecxz
das
mov
dec
sbb
in
sahf
addb
inc
or
jl
aas
pop
and
xor
out
and
pop
les
sub
jb
jecxz
lock
xchg
push
jmp
inc
and
rcll
ja
jl
aad
loopne
push
into
out
adc
fs
push
ss
cs
jmp
je
push
iret
add
mov
movsl
inc
lret
pop
inc
xor
push
sbb
pop
inc
xchg
jp
fstpt
adc
mov
sub
cmp
nop
imul
frstor
ljmp
cmpsb
xor
and
xorb
je
sub
notl
popa
mov
dec
pop
inc
xchg
lods
jnp
pop
aad
push
fdivrs
ss
lods
or
insb
pop
aad
loop
jne
cmpsb
inc
or
rol
mov
xor
roll
mov
jne
out
push
loope
cwtl
adc
test
outsb
and
cld
in
lea
inc
test
mov
push
sbb
dec
loop
fsts
mov
insl
outsl
leave
lods
lahf
mov
or
insb
call
filds
jg
jmp
pop
stos
add
fisubs
in
jo
pop
push
sub
mov
rcrb
dec
dec
hlt
movsb
dec
xor
push
lea
scas
adc
xlat
loopne
mov
xor
xlat
test
jo
add
sub
movsb
inc
mov
sub
roll
mov
repz
xchg
jo
fcmovbe
repnz
cltd
mov
cmpl
nop
adc
mov
lret
arpl
pop
dec
mov
mov
sahf
jl
inc
jl
outsb
mov
enter
adc
push
xchg
sub
mov
pop
pop
fcomps
xchg
dec
lods
push
repnz
inc
lods
sub
or
sbb
xchg
xchg
add
lods
andl
jle
xchg
fldcw
out
pop
int3
in
push
leave
fistl
mov
pushf
adc
push
orl
icebp
dec
sbb
adc
adc
xor
pop
mov
arpl
insb
mov
imul
jmp
mov
movsl
aaa
repnz
lock
jmp
push
mov
mov
test
fidivrs
jmp
or
xchg
cmp
and
sti
insb
xlat
cmpsl
pop
jne
or
das
jns
mov
loopne
in
or
adc
sbb
fwait
jb
mov
pop
decb
push
cmp
push
inc
sub
push
cmp
xlat
inc
divl
push
xor
fsubrl
out
xor
xchg
in
adc
stc
and
mov
aas
mov
jl
movsl
inc
dec
aam
mov
jne
lret
dec
flds
je
into
add
jnp
mov
inc
add
loopne
addr16
xor
or
sbb
in
xchg
mov
popf
jne
in
les
pop
jge
adc
jo
aam
aas
mov
mov
push
xor
popf
mov
jbe
ljmp
outsl
sarl
xor
out
sub
mov
push
movsb
jno
dec
adc
jmp
push
movb
fs
lret
int3
insl
xor
jp
add
mov
adc
stc
imul
cmp
arpl
jp
sbb
mov
les
sbb
sub
stos
outsb
out
lcall
outsb
lahf
adc
or
je
mul
nop
or
lret
fwait
adcl
or
xchg
xlat
aam
movsl
je
sbb
gs
mov
push
shll
shl
pop
pusha
xor
dec
xorps
mov
pop
pop
mov
mov
xchg
lods
fcomps
jl
js
push
inc
cmpl
dec
je
fnstenv
jb
xor
jbe
push
jp
cmc
test
pop
xchg
xor
je
daa
inc
cmp
test
es
add
cld
cmp
mov
out
into
jmp
cmovns
cmpsb
jmp
outsb
fcompl
hlt
sub
mov
sbb
fcmovnbe
js
aas
mov
nop
ss
push
inc
inc
popa
sub
add
rorl
push
sub
jne
or
adc
bound
and
xchg
lds
sbb
cltd
inc
dec
fistl
xchg
out
test
test
fwait
lret
in
adc
xchg
scas
arpl
xchg
fs
pop
jne
sub
jp
adc
call
jbe
aaa
jns
xchg
add
popa
insb
movmskps
jnp
fsubl
jb
xor
sbb
xlat
mov
jae
leave
shrb
xchg
push
loopne
cmp
sar
xchg
fiaddl
orl
arpl
in
cmp
jge
xor
xor
inc
jno
add
pusha
xchg
cld
sti
add
xchg
inc
xchg
push
stc
cli
arpl
xchg
mov
mov
jecxz
lods
mov
lahf
jp
push
mov
xor
mov
push
fcomps
out
insl
lods
xor
sbb
lods
xor
ret
mov
jmp
xchg
jge
fwait
insb
pop
mov
out
xor
mov
popa
cmpsb
pop
adc
sub
push
sbb
int
repz
stc
jns
adc
mov
sti
int3
inc
xchg
popa
cmpsb
fwait
dec
sbb
data16
or
adc
adc
mov
push
rol
in
gs
test
and
pop
sbb
jle
push
aam
test
and
inc
ret
mov
jnp
mov
push
dec
lock
stc
sbb
xchg
add
arpl
scas
or
or
aas
xor
sbb
popf
push
mov
filds
aam
sbb
xchg
mov
inc
idivb
mov
lret
sbb
mov
movsb
roll
mov
dec
mov
push
out
sub
out
push
loopne
cmp
pop
jl
les
test
popf
pop
sbbl
lret
cwtl
shrl
and
mov
imul
dec
and
ret
xchg
sbb
daa
fisubs
cmp
cmp
clc
sahf
fldl
mov
xor
test
addr16
clc
dec
jae
jmp
rcll
cmpsl
add
dec
cmp
test
test
std
out
push
mov
repz
push
les
out
cmp
push
je
cld
xchg
mov
adc
dec
cmpsb
mov
cmc
dec
push
inc
mov
sub
adc
mov
xor
in
push
into
add
xlat
adc
fisubrs
dec
inc
mov
jne
dec
std
dec
pop
sbb
dec
and
inc
sub
inc
or
sbb
push
arpl
inc
repnz
cmp
sbb
ret
pop
pop
mov
xor
adc
inc
call
or
xchg
mov
pop
je
pop
loopne
xchg
int
cli
inc
js
lcall
push
lds
into
jmp
lds
or
lea
sbb
push
fiaddl
movsb
scas
out
test
mov
insl
dec
sbb
into
and
adc
inc
add
orb
iret
stc
sub
adc
es
in
dec
jbe
jns
mov
mov
lret
test
data16
in
std
adc
push
popf
and
xchg
out
jno
cmpsb
cmp
sbb
pop
sub
repnz
sbb
int3
lret
cmpsb
int
adc
mov
pop
cmc
rolb
sbb
dec
xor
dec
iret
lods
jo
adc
jne
xchg
into
movsb
inc
and
aad
mov
shlb
pop
or
shll
mov
sarl
mov
outsl
cmpsl
pop
xor
dec
sub
xchg
inc
fimull
jp
movsb
sub
sbb
repnz
aad
inc
jle
pop
rclb
add
cltd
pop
int
xchg
xor
dec
sub
add
mov
int
or
mov
iret
sub
xchg
jo
fcomps
gs
inc
mov
pop
xchg
js
jo
xor
pop
jg
fwait
shll
scas
fwait
into
pusha
rcrb
cli
ss
pop
push
cmp
cs
outsb
sahf
push
mov
push
movsb
repz
mov
inc
mov
add
loope
sub
jne
push
lahf
cld
aas
es
out
lods
jnp
mov
xor
cmp
push
cmp
ljmp
call
loope
mov
loope
sbb
repnz
cmp
pusha
cmp
push
mov
scas
stos
adc
mov
stos
dec
inc
pushf
jmp
xchg
adc
movsb
ds
out
sbb
and
jp
les
lahf
mov
jo
adc
and
push
test
xchg
xlat
add
popa
dec
fists
jno
push
mov
and
xchg
fadd
inc
ja
mov
inc
sbb
xchg
cli
ffreep
mov
cmp
leave
and
scas
scas
rcrb
inc
in
ret
out
shlb
sti
mov
into
sahf
inc
scas
push
mov
sbb
mov
movsl
dec
test
pop
xchg
and
xor
lds
add
inc
fs
sub
icebp
into
shlb
and
pop
pop
dec
push
and
mov
adc
sbb
mov
ljmp
leave
inc
ss
sti
ja
loope
lea
push
inc
lock
fs
jl
push
mov
leave
bound
or
or
push
lcall
mov
pop
xchg
mov
insl
lahf
mov
sub
jl
and
test
mov
leave
xchg
movsb
adc
cmp
pop
mov
and
adc
adc
add
xor
enter
rcr
les
repz
pusha
jmp
dec
cld
jge
and
jmp
jecxz
push
push
fiadds
fwait
out
loop
movsb
fisubrl
daa
ret
and
fidivl
sub
test
inc
mov
cmp
mov
inc
adc
out
in
in
gs
cltd
mov
and
iret
cs
movsl
and
jnp
xchg
pop
fs
jb
and
or
stos
sbb
fcoms
and
repnz
int
pushl
cmp
add
mov
jl
addr16
ja
ret
test
push
cmp
push
adc
cmpsl
pop
push
subl
jno
lock
mov
and
sahf
dec
lock
sub
repnz
mov
mov
lret
pop
aad
lock
or
rcrl
dec
xchg
sub
and
mulb
pushf
fsubr
int3
daa
movsl
jle
jne
xor
aad
scas
sarb
aas
addb
bound
sub
ret
repz
ret
mov
push
fdivr
mov
xchg
push
lods
dec
push
push
push
pop
rorl
cmc
icebp
jge
sub
sub
push
mov
xor
push
sbb
cmpsb
shlb
sbb
pop
mov
pusha
in
gs
and
out
push
movsb
sbb
int
inc
out
jnp
gs
pop
mov
ja
cs
pop
adc
rolb
xorb
jnp
rolb
xchg
inc
aad
or
dec
fidivrl
push
popa
xchg
js
push
fistpll
pop
fisubl
rcrb
ja
inc
and
or
xor
mov
jge
cwtl
mov
mov
xor
or
inc
lcall
mov
inc
stos
dec
sbb
fildll
out
ffreep
xchg
fcoml
pop
sub
setl
cmp
in
cmp
popf
mov
and
loopne
jbe
adc
out
jne
xor
mov
mov
mov
jecxz
fbstp
pop
inc
pop
enter
fwait
cwtl
cli
icebp
arpl
jns
cld
jmp
inc
aad
mov
fistps
push
sub
repnz
in
fmull
insb
nop
xchg
xor
stc
lea
aas
add
fildl
sub
subb
dec
adc
in
mov
push
cli
dec
mov
cmp
aad
push
cs
bound
sbb
mov
fiaddl
sub
pop
pop
mov
mov
inc
jmp
xchg
pushw
jns
dec
test
iret
lds
sub
decb
or
aaa
cld
movsl
rorl
push
pop
sbb
test
ja
mov
cmp
enter
es
mov
sbb
divb
inc
jl
cmpl
or
out
fbstp
lcall
sbb
jle
call
push
int3
je
adc
xchg
iret
adc
ja
movsl
push
jne
stos
add
mov
xor
lds
sahf
push
mov
fyl2xp1
cmp
mov
outsl
jmp
dec
cld
faddl
cltd
pcmpgtb
mov
ss
in
sbb
pop
xlat
xchg
add
push
pop
adc
dec
aad
mov
movsl
adc
loop
loopne
mov
inc
push
lahf
inc
sbbl
jno
ljmp
dec
add
mov
and
loop
dec
mov
and
pop
call
jae
sbb
fiaddl
pop
dec
adcl
push
inc
pop
cs
sub
cli
jnp
xchg
bound
pop
push
clc
sbb
aad
jg
sbb
fdivrl
inc
ja
pop
arpl
jnp
ja
jl
and
aaa
xchg
jo
push
pop
mov
and
loopne
xchg
xor
fsub
sbb
in
insl
rolb
jmp
mov
movsl
push
imul
loope
fs
pop
add
cld
mulb
out
cmc
jecxz
sbb
movsb
fcompl
cmp
ja
or
push
xchg
sub
and
outsl
cmp
enter
cmpb
and
ja
cmpsb
adc
add
and
addr16
clc
cmp
daa
daa
xlat
dec
rcll
clc
push
daa
movsb
pop
mov
jp
in
dec
out
and
sahf
dec
mov
gs
mov
sub
pop
add
add
dec
cmp
aam
lods
out
cwtl
imul
fwait
xor
int3
cwtl
and
rcll
mov
rclb
pop
test
test
stos
repz
ret
shll
jae
enter
popa
out
cmp
sub
and
or
sar
shlb
cmp
pop
lea
xlat
int
xchg
mov
or
popa
jne
xchg
pop
push
mov
sbb
xor
rclb
inc
mov
negl
adc
pop
and
sbb
mov
lahf
test
dec
lahf
sub
mov
rclb
nop
scas
sbb
jb
add
lret
or
pop
ret
push
xchg
imul
cmp
cmc
xchg
int
fstps
imul
mov
mov
cmc
add
or
scas
and
scas
movsb
mov
shrl
loopne
movsl
fsubs
add
cmpsb
in
sbbb
je
fdivp
mov
mov
lods
xor
loop
es
iret
jle
dec
dec
fwait
jo
lds
nop
negb
into
mov
in
lock
mov
push
fistpl
pop
sub
sahf
je
into
sub
ret
mov
cli
lcall
push
rcr
daa
pusha
jecxz
aad
jle
fcoms
sbb
mov
gs
fdivrs
psrld
aam
fdivr
push
xchg
pop
xchg
outsl
jmp
xor
and
jb
mov
test
rcrb
xorb
lret
sub
sub
adc
xchg
leave
or
xchg
aaa
push
pop
aaa
int
lea
xchg
cmpb
inc
cs
sbb
outsb
cmp
lahf
rorb
rorl
jnp
test
mov
mov
xor
xor
jg
int3
sub
push
mov
push
repnz
fbstp
dec
xchg
lcall
add
iret
fsubrl
adc
rol
repnz
xor
jb
sbb
mov
ds
movsb
adc
add
scas
sarl
std
or
jb
loopne
add
or
cmp
adcl
enter
fs
cmc
jno
mov
mov
cmp
sub
dec
xor
ss
inc
lret
pop
sbb
outsl
lea
fidivs
notl
fistpll
data16
gs
jnp
lret
cld
andb
std
js
jmp
je
leave
leave
popl
jae
dec
sbb
ljmp
dec
fsubs
testb
mov
std
and
es
push
jne
mov
pop
mov
mov
jg
xor
inc
rcr
cwtl
and
xchg
inc
cmp
gs
int3
cmp
inc
orb
daa
xchg
push
dec
scas
aad
fiaddl
sub
rorb
pusha
add
sbbb
mov
pusha
jbe
inc
xlat
pop
or
dec
pop
scas
insb
pop
outsl
pop
lret
pushf
sub
insb
pop
test
testb
mov
js
icebp
mov
inc
inc
daa
push
stc
push
popa
inc
and
mov
ds
lcall
xchg
in
loope
and
in
jmp
ss
sahf
xchg
fidivrs
mov
repnz
xchg
iret
inc
pop
fwait
xchg
cmc
pushl
jp
adc
ss
mov
movb
dec
mov
jne
cmp
pop
fwait
xchg
lahf
or
sbb
push
insb
imul
in
fbstp
sbb
and
mov
sbb
pop
jg
aas
cmp
dec
jp
mov
leave
in
jg
test
divb
ret
lahf
lods
int
sbb
fdivl
xlat
int3
jl
bound
xchg
push
inc
pushf
test
pop
mov
out
outsl
lcall
stos
scas
cli
or
clc
sti
inc
lock
mov
fs
adc
jp
repz
cmp
mov
inc
lock
popf
xchg
outsl
ja
ficomps
or
dec
loopne
or
jae
insb
jmp
lahf
popa
push
in
push
lret
xchg
adc
daa
stos
mov
test
lahf
mov
sub
out
aam
cmpsl
mov
jns
pop
push
add
loope
cmp
out
bound
call
imulb
in
jns
mov
out
lock
enter
pop
pop
std
ljmp
lods
or
pop
jbe
jge
or
mov
fyl2xp1
xchg
cmp
pop
mov
inc
in
aaa
mov
pop
cmpsl
cmp
stc
jns
mov
out
pop
in
aaa
and
jae
pop
push
push
stos
mov
stc
int3
lret
xchg
in
mov
sub
cmc
sub
fidivl
loopne
lahf
mov
dec
sub
enter
into
in
jne
add
push
mov
jp
dec
jmp
std
in
imul
prefetch
or
dec
fmuls
push
push
sub
pop
clc
mov
scas
je
loopne
test
lock
cld
cld
inc
push
loop
popa
out
cmp
sub
jl
pop
xchg
in
cmp
shl
xchg
and
in
enter
sbb
push
and
sbb
dec
lds
sbb
sti
stc
cmp
out
lods
movsb
outsl
pusha
imul
sub
mov
lods
xor
int
popf
mov
fs
dec
sub
and
or
sub
xor
inc
inc
les
gs
mov
cltd
and
fidivl
comiss
scas
jb
mov
lret
dec
scas
les
test
repnz
sub
inc
mov
and
inc
nop
jno
pop
pop
hlt
out
push
mov
push
pop
imull
cs
pop
das
sub
xor
fcmove
adc
push
ja
shll
add
sub
fistl
shlb
lcall
lods
xchg
xor
sbb
push
daa
imul
mov
inc
lcall
stc
aad
bound
inc
inc
push
jns
cvtpi2ps
lds
scas
aas
add
mov
mov
sbb
enter
mov
pop
mov
shlb
xchg
inc
and
mov
push
dec
in
or
mov
mov
xchg
mov
repz
jbe
lahf
addl
lret
shlb
stos
aam
mov
sub
jo
add
jp
sti
mov
imul
imul
out
dec
mov
inc
xchg
aad
loope
mov
lods
push
mov
and
sbb
mov
mov
pop
insl
dec
dec
adc
insl
movsb
sub
adc
pop
jne
out
pop
out
pop
sti
sub
xchg
mov
or
add
not
ljmp
lock
je
test
push
testb
push
sub
daa
insb
mov
imul
loopne
dec
cs
addr16
aas
mov
mov
das
fidivl
cmpsl
and
or
aad
inc
scas
jp
scas
sti
or
push
sbb
adc
dec
das
fistps
in
push
cld
adc
mov
jo
push
dec
call
push
loope
adc
test
dec
xchg
in
shrl
into
loope
and
hlt
or
sub
frstor
add
dec
repnz
faddl
dec
push
cwtl
ds
add
test
push
loope
lcall
lret
xor
and
dec
xor
mov
xchg
push
stos
adc
or
mov
dec
xor
adc
add
mov
mov
mov
out
ror
enter
sbb
and
mov
mov
es
lods
cmp
mov
cmc
xor
xchg
fistpll
loop
sub
fimuls
or
or
sub
fdiv
xchg
cmc
loope
cmp
jnp
in
xchg
scas
push
cmpsl
mov
aas
sbb
sub
xchg
and
addr16
aas
in
sbb
sti
push
es
lcall
mov
adc
ret
das
arpl
push
push
xor
sbb
mov
scas
sub
shlb
push
xchg
mov
or
call
mov
push
ret
ret
jb
xorb
repz
lds
lods
daa
pop
lahf
push
push
out
and
loop
jns
lea
jecxz
mov
push
pop
hlt
loop
inc
add
mov
pop
scas
imul
push
xchg
mov
aam
cld
inc
dec
sbb
nop
and
stos
xchg
xlat
xchg
mov
in
ffreep
cmpsl
xchg
add
std
mov
add
or
cli
repz
les
pop
jge,pt
push
jae,pn
or
mov
push
xchg
aad
cmp
mov
shl
test
or
mov
test
jae
mov
dec
repnz
push
jns
pop
cli
aas
push
orl
faddp
cmp
inc
lods
test
scas
in
dec
mov
dec
cmpsb
jb
stos
daa
mov
rorl
jb
fs
shl
or
push
and
jg
and
xorb
cmpsb
sbb
cli
out
fdivl
pop
int
add
fcoms
inc
lret
int
out
lcall
mov
pop
cwtl
outsl
push
sbb
sbb
shl
lock
cmp
cmc
inc
push
fnstcw
sbb
incl
add
xor
mov
aas
ficoml
jnp
mov
out
ror
push
cli
in
cs
adc
inc
inc
das
out
pop
js
mov
popf
push
push
jnp
push
roll
lea
mov
mov
shrb
adc
adc
hlt
js
mov
mov
inc
dec
xchg
inc
xlat
cmp
jp
adc
cs
dec
fdiv
adc
dec
xor
bound
je
in
lods
push
xchg
popf
jbe
lock
jb
add
pop
arpl
mov
fisubl
mov
and
push
jae
push
xor
jle
or
in
mov
mov
cmp
mov
fisttpll
sahf
cmp
cmp
mov
push
inc
into
cmp
or
dec
mov
sbb
sahf
and
dec
adc
add
jno
cmp
rol
aaa
cmpl
iret
in
or
mov
mov
test
movsl
test
xchg
jp
sbb
stos
subb
pop
out
or
movsl
setnp
stos
cs
push
xor
jl
push
ljmp
cmpsl
xchg
rclb
popa
mov
sarl
lds
jle
stos
xor
popf
xchg
sub
stos
mov
sbb
popa
popf
sbb
jno
call
dec
pop
mov
push
sub
leave
xor
stos
mov
dec
insb
mov
jb
mov
jecxz
out
mov
dec
iret
sub
lds
sub
inc
xchg
jl
sti
or
add
aam
push
pushf
cmc
sbb
loope
mov
popf
xor
push
and
out
sbb
idiv
stc
cmp
sbb
jb
dec
jge
out
outsb
dec
inc
jne
repz
jnp
pop
repz
popa
sub
mov
mov
jp
and
mov
mov
cmpsb
cld
or
push
popa
gs
mov
rcrb
popf
lcall
cmp
stos
xor
sub
xor
addr16
xchg
test
xor
fstsw
sub
repz
hlt
push
data16
mov
addr16
xchg
and
cmp
iret
xchg
mov
and
mov
ret
test
sahf
data16
aas
jmp
or
inc
xlat
es
vandnps
or
test
jle
stos
jae
xor
sbbl
out
data16
cmp
stos
xchg
loopne
int3
mov
lods
dec
addl
lcall
sbb
pop
pop
inc
icebp
cmpsl
icebp
add
outsl
inc
or
xor
jo
mov
ret
push
stos
lds
mov
stc
push
pushw
fstpt
sbb
cmp
popf
into
aaa
pop
xor
sbb
push
iret
sub
clc
sbb
cltd
outsl
inc
mov
fistpll
inc
outsb
or
push
lret
pop
sbb
cwtl
dec
movd
test
jno
jmp
jmp
lret
lock
mov
xchg
in
xchg
xor
cmpsb
stc
popf
or
adcl
pavgb
stc
test
jb
push
and
xchg
mov
jnp,pt
orl
adc
andl
lock
repnz
jns
inc
mov
pop
movsl
jl
xchg
mov
sub
pop
arpl
pop
mov
sub
inc
out
xor
lea
stc
and
lds
clc
push
mov
cmpsl
pop
fiadds
sahf
stos
into
xchg
adc
movsl
insb
sub
std
sbb
pop
mov
rorl
pop
jo
mov
andb
mov
inc
neg
mov
or
xor
outsb
mov
jne
sub
js
push
into
inc
daa
inc
wrmsr
sub
push
push
js
cmp
fnstenv
test
or
sbbl
in
mulb
adc
jo
aad
jae
aam
dec
dec
rcl
sbb
clc
sub
xor
pusha
push
testb
dec
mov
lahf
aam
xchg
nop
cmp
inc
inc
popa
cld
dec
pusha
xchg
pop
sub
inc
cmc
adc
in
push
add
enter
in
loope
xchg
and
cld
popf
jle
orb
out
outsl
add
jb
cli
shrb
sbb
and
mov
call
icebp
add
aad
jne
out
enter
cld
xchg
fadds
in
xchg
imul
scas
and
sub
xchg
sti
sbb
addr16
xchg
mov
leave
pop
jmp
mov
jmp
jno
adc
jmp
xor
xor
inc
outsl
cli
add
aad
roll
mov
add
jp
pop
push
jg
daa
cmp
xchg
fsubrl
repnz
add
popf
or
testl
js
into
jecxz
shll
push
mov
mov
xchg
mov
and
stos
inc
cs
dec
rolb
mov
adc
data16
mov
and
or
in
xor
push
int3
mov
push
cld
mov
icebp
xchg
mov
pusha
fcoms
xchg
mov
cld
mov
pop
lret
mov
les
ret
jp
jae
out
outsb
mov
xchg
out
stos
pop
popf
dec
movl
jmp
inc
lods
mov
pop
mov
pop
cmp
ja
or
cmp
inc
movsl
or
aam
and
pop
or
dec
sub
fistps
pop
imul
sub
cltd
pop
jnp
cltd
in
sub
loope
fidivrl
add
push
and
jl
stos
push
es
outsl
xor
cli
mov
into
loop
scas
icebp
sub
insb
inc
sub
add
mov
xchg
sbb
outsl
fiadds
daa
lcall
fistl
and
pop
mov
stc
jbe
dec
cmpsb
dec
cli
lcall
ret
xlat
jno
jmp
sbb
jl
mov
test
push
pushf
mov
xor
mov
nop
dec
dec
mov
lods
lea
pop
dec
mov
jae
and
mov
sahf
sub
jne
sub
enter
loopne
popf
push
fucom
nop
push
add
sbbb
mov
adc
add
cmp
rclb
inc
shl
lret
bound
adc
rcll
scas
js
jmp
xor
add
jp
jge
jo
mov
pop
ret
pop
dec
sbbl
fisttpll
add
jns
js
mov
push
jns
dec
sub
sub
jbe
and
cmp
daa
fsin
mov
sub
push
jecxz
mov
ficoms
repz
dec
jbe
jmp
lahf
pop
jne
ljmp
dec
iret
push
into
mov
imul
sbb
in
mov
mov
fistpl
out
and
je
mov
jmp
push
mov
sarl
es
sub
test
jle
call
pop
inc
pop
gs
cmp
jbe
fcomps
in
pushf
cmp
mov
mov
pop
pop
ljmp
rol
mov
or
out
stos
pusha
lret
cld
sub
into
sbb
scas
mov
dec
je
pop
xchg
inc
pop
data16
dec
rol
cmpb
mov
xor
clc
ljmp
push
dec
push
pop
pop
ja
pushf
sub
dec
jge
test
daa
sbb
and
mov
das
les
fdivrp
mov
cmp
popf
xchg
movsl
sahf
pop
push
lahf
xor
fwait
les
jg
mov
insb
mov
loopne
popa
pop
lock
xor
ret
sbb
lock
dec
xor
aaa
push
mov
and
mov
dec
scas
fdivrs
jb
pop
bound
clc
lods
inc
test
cmp
mov
aad
add
lds
in
hlt
lock
push
ret
pop
dec
xor
mov
sub
inc
scas
push
push
push
dec
mov
insl
add
sbb
sub
mov
lock
dec
push
loopne
nop
sti
bound
hlt
out
mov
cmp
aam
xchg
cmc
add
rol
xor
push
je
add
push
mov
cmp
ror
gs
mov
js
dec
cltd
add
dec
xor
movsl
adc
jecxz
pop
popa
jbe
or
lret
data16
xor
test
sbb
cmpsl
adc
and
inc
stc
cmp
hlt
daa
cmp
rolb
add
lret
mov
cmpb
lahf
sbb
imul
mov
mov
insl
aad
sub
and
mov
mov
into
stos
and
loope
push
jbe
fstpl
loopne
hlt
xor
pop
dec
test
mov
daa
xor
mov
mov
fldcw
gs
sub
in
inc
push
and
sbb
inc
in
imul
mov
flds
roll
rcl
dec
inc
lods
in
daa
mov
or
xchg
push
dec
mov
nop
in
jno
pop
push
movsb
mov
scas
inc
push
xor
lahf
jne
add
xor
popa
mov
nop
into
int
mov
imul
xchg
and
sarb
pop
cmp
pop
sbb
je
adc
icebp
lods
push
std
push
loopne
xchg
outsb
dec
test
ret
fstps
bound
jl
fmuls
adc
pop
shl
mov
lret
in
adc
dec
inc
and
cli
fwait
aad
jg
sub
jge
push
xchg
or
dec
lret
lret
bound
jmp
jg
xchg
scas
sbbl
sti
test
data16
inc
pop
hlt
xchg
jae
mov
out
std
adc
addr16
loopne
push
and
std
fcom
pushf
dec
pop
je
ret
movsb
fwait
cmp
add
pop
xor
xchg
loop
test
sbb
cld
adc
mov
sub
pop
pop
inc
ss
clc
pop
rolb
test
adc
xlat
mul
imul
lods
push
in
cld
movsl
int
jmp
mov
push
xor
cltd
jp
movsl
cmpsb
adc
xchg
mov
jnp
test
adc
push
xchg
daa
dec
or
stos
dec
test
and
inc
scas
xor
inc
scas
cli
int
pop
adc
fsub
add
jae
push
lcall
pop
mov
shrl
rorb
and
mov
dec
int
bnd
cmpsl
cld
out
mov
incl
dec
cmp
xchg
imul
adc
stos
push
push
or
sbbb
fisubs
jno
inc
ror
cwtl
mov
ja
push
and
gs
fiadds
mov
into
mov
sbb
std
sti
outsl
in
dec
mull
aad
cwtl
das
dec
mov
addr16
gs
mov
mov
ds
fstpl
fcmovbe
ret
inc
das
cmp
test
shrl
scas
jnp
sbb
sub
lock
adc
add
loopne
adcl
les
cmp
sarb
mov
scas
cmp
popf
test
jb
xor
push
mov
mov
dec
data16
adc
push
dec
adc
imul
add
fxam
mov
lret
loope
pop
adc
fcmovnbe
pop
push
movsl
test
andl
loopne
lcall
sbb
movsl
loop
std
shl
ret
pop
mov
out
xchg
pop
lods
call
aad
cltd
pop
cmc
inc
outsl
fcompl
pop
data16
adc
fdivr
mov
add
adc
pop
inc
cli
xchg
add
jge
sbb
aas
mov
mov
dec
inc
stos
popa
shll
sti
sub
sub
into
adc
shll
inc
inc
and
dec
call
push
cmc
mov
outsb
das
mov
or
push
loope
loop
lds
fidivl
pop
lea
mov
jnp
pop
ret
orb
out
insb
dec
orb
adc
outsb
mov
aad
stos
jle
xor
in
movsb
and
or
xchg
popf
mov
rcrb
ja
stos
push
or
clc
adc
dec
mov
fstpl
ja
int3
mov
stos
pushf
ret
je
test
inc
inc
and
adc
mov
scas
out
aas
loopne
aad
stc
aad
inc
pop
xchg
hlt
or
dec
repz
lret
mov
data16
pop
cs
je
sbb
stc
pop
or
mov
mov
cmp
enter
jmp
arpl
dec
cmpl
out
mov
rorl
dec
mov
packuswb
pop
outsb
mov
adc
outsl
adc
fcoml
mov
iret
xchg
push
sub
add
lock
testl
movsb
jg
mov
fimuls
push
outsb
aam
test
and
fisttps
mov
jge
mov
int
mov
push
adc
or
int3
or
jecxz
xchg
test
js
pushf
ljmp
push
sub
insl
popf
jns
adc
loop
or
js
mov
mov
lock
pop
lahf
mov
inc
add
cld
idiv
roll
pop
or
pop
js
das
ss
cmp
dec
lea
pop
shl
mov
mov
add
dec
popf
out
ja
cld
and
push
cmp
fidivl
xor
jae
adc
mov
inc
imul
add
int3
orb
cli
push
pop
fcmovnb
inc
jp
repz
in
and
scas
jo
mov
dec
cmp
lods
lock
in
push
lret
mov
dec
or
in
cmpb
test
add
mov
and
adc
dec
jae
in
mov
out
notl
sbb
cmp
mov
fcomps
test
adc
es
movsb
lret
out
fstpt
mov
bound
xor
dec
pop
mov
fwait
push
and
popf
daa
sub
jg
mov
xorb
inc
fidivrl
push
jbe
out
test
cmp
mov
jmp
push
aaa
mov
out
sub
sub
xor
mov
lods
frstor
push
addr16
push
or
adc
cmp
in
cmc
ds
cmp
pop
scas
lea
addr16
mov
mov
clc
inc
int3
xlat
or
fwait
icebp
xchg
push
ss
fcoml
ds
mov
cmpsl
inc
sub
cmp
int3
test
dec
push
cmp
inc
es
mov
ja
mov
sarl
insb
mov
xor
fxch
js
cmp
decb
sbb
push
ja
sub
mov
cwtl
out
outsb
jge
push
rcrl
add
xor
xor
sub
or
fldl
xchg
sbb
int
push
mov
push
mov
jns,pn
mov
and
mov
push
mov
lcall
repnz
sbb
or
and
shrb
ds
sub
mov
and
js
pop
sub
sti
ds
inc
imul
cs
inc
bound
xchg
lret
popf
pushf
sub
lcall
loope
repz
fwait
repnz
lock
or
add
xor
push
mov
test
cltd
dec
testb
xor
mov
cmc
ljmp
test
jmp
and
outsb
add
loope
add
fs
add
leave
imul
dec
xchg
cmpsb
xor
cmp
test
aam
lret
lods
lcall
sub
mov
pop
push
scas
shlb
mov
xor
pop
cltd
mov
sbb
dec
push
xorl
bound
inc
jmp
aaa
push
mov
add
jl
lds
add
push
lahf
sbb
mov
ja
stc
pusha
in
cmp
sub
fsubp
jge
sub
sahf
pop
pop
cwtl
aas
mov
sub
sub
loopne
cmp
mov
imul
insl
mov
dec
out
cmc
fstpl
movsb
add
cmp
pop
adc
and
stos
in
clc
aad
sbb
stc
in
out
or
pushf
pusha
lcall
and
adc
pop
jge
sahf
scas
pushf
fwait
aam
lods
mov
addr16
xchg
mov
push
jl
push
sahf
mov
insl
in
andl
sub
sarb
scas
std
lds
mov
push
lds
ss
testl
ret
add
icebp
mov
xor
cmp
pop
mov
or
cmp
rcl
outsb
dec
xchg
arpl
aad
sarl
mov
in
xlat
mov
sub
stc
loopne
adc
clc
popf
xchg
mov
jno
xor
aam
out
insb
sbb
xchg
imul
notl
jmp
push
jl
inc
pusha
cmp
xor
jg
into
push
call
out
int
mov
outsb
dec
mov
sbb
in
jmp
dec
jno
mov
pop
int
add
and
pushf
aas
jmp
push
jmp
test
mov
aas
push
mulb
cs
mov
add
add
cmpb
pop
insl
xor
mov
push
ss
test
or
add
cmp
enter
xchg
mov
nop
inc
popl
lods
mov
xchg
cwtl
fistpll
andl
arpl
adc
sbb
mov
and
pop
xchg
rcrb
ret
mov
cli
jmp
shll
push
test
push
cld
daa
sub
cld
cwtl
iret
sbb
and
mov
add
out
sub
xchg
xor
xor
inc
or
bnd
sar
jne
inc
pop
iret
iret
add
fnstcw
cli
jbe
addr16
sbb
xor
xor
hlt
cmp
add
pushf
cmp
aam
in
mov
push
fimull
or
or
outsb
leave
sbb
xchg
out
movsb
popw
insl
pop
mov
fistl
sub
out
sub
enter
fldcw
clc
iret
pop
popf
xchg
test
mov
out
or
sbb
pop
pop
mov
inc
out
mov
mov
ja
xor
or
mov
leave
cmp
sub
xor
adc
and
xor
out
call
cmpsb
scas
sahf
push
jecxz
test
mov
nop
movsl
int3
mov
xor
imul
jecxz
xor
in
loop
xchg
jmp
mov
mov
inc
jge
xchg
pop
pop
fildl
cld
cmp
mov
iret
test
lods
jle
sbb
xchg
add
push
push
dec
outsb
stc
stos
jge
ficomps
mov
sahf
push
push
jae
mov
add
inc
lret
in
sub
das
lcall
push
add
loopne
scas
icebp
mov
xor
mov
fcmovne
or
jae
out
or
mov
cli
sbbl
repnz
mov
addr16
adc
mov
lret
mov
dec
mov
lahf
sub
imul
mov
stc
inc
fdivs
and
pop
and
dec
adc
cmp
cs
loop
dec
push
mov
inc
cld
push
pop
cs
pop
daa
mov
push
das
and
popf
ds
sarl
adc
pop
test
cld
push
and
cmp
loop
pop
mov
lods
lds
inc
jecxz
shll
and
and
arpl
lcall
daa
scas
insl
jb
aaa
pop
shll
aam
mov
jmp
xor
clc
or
pushf
fidivl
leave
mov
and
loop
rol
push
in
mov
dec
ret
mov
jl
rorl
jns
shlb
cmp
xor
pop
cli
and
or
outsb
jb
add
jnp
push
cmp
cld
pusha
sub
inc
inc
mov
loope
movsl
ret
imul
faddl
scas
je
sbbb
das
mov
mov
and
fimull
pop
adc
push
mov
imul
pop
xor
sahf
jg
orl
push
mov
loope
cmp
push
aaa
jle
shl
dec
ss
sarb
jle
stos
add
jnp
and
ficompl
push
xchg
scas
scas
fbld
out
incl
cmp
cmpsb
jno
or
sub
add
movsl
movsb
xor
data16
fbld
pop
leave
insb
fiadds
pop
test
pushl
pop
and
add
adc
popf
filds
rcrl
mov
xor
rcll
and
fdivr
add
jge
loope
mov
lahf
xor
test
lret
xchg
dec
xchg
or
aaa
mov
mov
lock
hlt
pusha
pop
xlat
xchg
mov
lock
jp
pop
fimull
push
outsl
aad
jno
sub
aam
and
xchg
sub
jge
fsubl
adc
dec
test
sbb
test
jmp
mov
jb
push
mulb
hlt
xor
pop
cs
ret
bndstx
sub
aaa
fisttpl
sub
mov
in
and
jmp
pop
push
cmpsb
ds
pop
sub
int
or
nop
jns
dec
inc
mov
jp
dec
add
insl
sbb
sbb
pushf
pop
mov
push
jnp
cs
adc
adc
jle
fdivs
cmc
xor
popf
xchg
roll
and
jae
fsubp
xchg
lds
aam
mov
out
pusha
mov
sub
lock
adc
lret
xchg
add
pop
add
aaa
movsl
repnz
xor
and
mov
xor
and
sbb
clc
orb
mov
xor
push
mov
mov
nop
jnp
es
mov
sbb
pop
xorb
add
addr16
xchg
jp
or
setno
sbb
adc
fwait
jmp
inc
mov
das
mov
lret
dec
aaa
loopne
arpl
pusha
push
sub
jle
daa
pop
dec
std
xor
jl
orl
icebp
aad
int
out
add
cmp
sub
mov
pop
push
mov
add
xor
pop
add
rorl
mov
jbe
data16
pop
pop
add
in
xor
fiaddl
pop
outsb
imul
adc
out
int3
notb
push
or
mov
fldcw
in
stos
push
stos
out
dec
sub
cmc
push
sub
and
sahf
cmc
stc
pop
lods
sub
add
push
add
adcl
and
addb
cmpsb
mov
adc
sub
in
and
push
xchg
es
xchg
repz
fbld
bound
popf
mov
push
les
je
pop
adc
or
sbb
jl
xchg
stc
test
gs
add
fsubs
sub
and
jg
addr16
cli
cmp
xor
sub
cld
ror
ja
push
insl
out
sbb
push
add
adc
nop
lret
les
enter
movsl
loope
push
lds
lcall
jle
out
mov
add
inc
xor
xor
sahf
addr16
arpl
jo
sub
mov
jge
push
ja
add
push
testb
push
mov
dec
cmp
pop
lahf
cmp
mov
inc
es
fisttpl
push
mov
pop
fwait
test
repnz
data16
inc
xor
lret
mov
fwait
jns
sbb
fwait
inc
dec
xor
shrl
xchg
aad
adc
add
std
sahf
sbb
call
popf
out
fisttps
sub
icebp
stos
popf
outsl
dec
inc
sbb
and
push
pop
out
push
xchg
dec
movsl
mov
cwtl
jnp
mov
push
jne
int
mov
mov
fwait
and
pop
test
mov
xchg
in
mov
into
add
fwait
dec
and
adc
xor
mov
popf
test
jmp
nop
outsl
jnp
sarb
xchg
call
mov
xor
push
dec
call
mov
xchg
repnz
gs
xor
gs
mov
mov
inc
stos
fdivrl
or
xchg
or
lods
pushf
inc
mov
jmp
cmp
mov
and
dec
or
mov
shrl
push
out
cli
xorb
cmp
int3
jecxz
in
pop
das
and
mov
imul
test
outsl
dec
gs
inc
sbb
adc
jmp
leave
inc
sub
inc
loope
aaa
and
out
in
js
mov
dec
sti
repnz
clc
sub
xchg
int3
movnti
mov
test
sbb
add
pop
movsl
push
mov
cmpsl
imul
xchg
mov
daa
outsl
sbb
pop
jge
pop
lock
push
out
divl
xor
mov
xor
push
lds
imull
and
dec
lahf
or
call
or
inc
imul
loopne
pop
sub
mov
movsl
insl
cmc
mov
pop
shll
mov
mov
dec
sbb
lock
sbb
mov
int
and
ret
jno
jae
gs
dec
dec
lods
out
insl
int
imulb
xor
aam
movsb
push
xor
fisubrl
test
into
out
lock
outsb
pusha
enter
clc
ja
cmp
mov
ja
lods
pushf
xchg
aaa
xchg
data16
rclb
insl
jb
mov
mov
jno
or
divb
filds
mov
push
xchg
sub
or
addr16
xchg
xchg
jb
jnp
mov
sbb
mulb
fdivl
repnz
out
pminsw
mov
mov
mov
rcrb
pop
xchg
mov
pop
dec
out
xchg
data16
add
jle
and
sbbl
lret
lret
sti
lods
mov
insl
mov
mov
adc
bswap
dec
xchg
iret
pop
fs
pop
test
jg
mov
pop
sbb
out
clc
xlat
inc
gs
add
idivb
inc
inc
xor
dec
jne
xchg
dec
xchg
and
push
stos
outsb
fldenv
add
pop
push
loop
adc
es
jnp
sarb
sahf
jg
sub
xor
adc
push
movsl
aad
or
and
ss
or
mov
cmpsb
cmp
out
imul
scas
push
jle
cmpl
clc
and
mov
mov
cld
aam
or
sbb
jne
jno
jg
sbb
or
cmp
mov
or
mov
pop
iret
fidivs
cmp
insl
scas
jo
inc
idivb
pop
pop
inc
in
jnp
mov
jge
mov
arpl
cmc
insb
mov
dec
sbb
pop
pop
repnz
dec
add
sub
outsb
test
xchg
ss
sub
push
loopne
sub
test
les
mov
dec
xlat
mov
lods
mov
aam
repz
jp
ss
cmp
ljmp
lods
or
xchg
leave
fsubrl
test
push
out
stos
pop
gs
and
mov
mov
push
cmp
mov
sub
inc
cmp
out
test
cmp
in
test
cs
push
lahf
stc
mov
inc
jne
push
sbb
test
lods
adc
lret
mov
mov
popa
or
andl
lret
mov
push
out
outsl
inc
push
into
scas
mov
lcall
mov
xchg
insb
sbb
scas
jmp
adc
pusha
mov
daa
fbstp
cwtl
je
lcall
inc
orl
aas
add
xchg
lods
xchg
test
ds
fistps
mov
or
dec
jg,pn
imul
sbbb
mov
dec
add
pop
sahf
aam
outsb
loopne
sbbb
mov
dec
jecxz
movb
push
mov
daa
inc
or
push
les
jno
inc
rorb
push
push
rcll
stos
pusha
fwait
imul
enter
sub
dec
push
mov
outsl
int
cmp
sahf
mov
xchg
outsb
fsubrs
mov
nop
jnp
jg
addr16
pop
loop
js
ds
clc
cmp
outsb
test
lock
data16
and
sbb
jns
push
scas
jg
sub
jmp
fcmovnb
pop
lahf
cmp
inc
adc
mov
idivb
mov
fsubrs
test
jmp
cmp
dec
iret
sbb
push
or
push
xchg
mov
push
repz
push
lahf
add
add
es
scas
fsubrl
adc
jne
sbb
sub
jmp
add
negb
pop
jecxz
sbb
inc
jp
pusha
in
hlt
mov
push
sub
inc
popf
jnp
adc
mov
clc
sub
dec
xchg
sub
mov
adc
mov
adc
xorb
xchg
sub
orl
jo
lret
mov
fidivs
pusha
adc
or
xchg
mov
gs
pushf
out
push
notl
mov
dec
call
aad
stos
sbb
jno
mov
or
iret
clc
les
popf
jne
push
cmp
pop
fs
push
sbbb
inc
dec
dec
fnstenv
add
push
mov
sti
lods
fsubr
xor
cltd
iret
dec
xor
cwtl
sbb
into
push
mov
cmc
psubusw
into
fmuls
or
and
call
push
sub
into
test
loop
subl
mov
or
idivl
outsl
jl
decb
push
out
js
sbb
cmp
fnstsw
and
out
jbe
adc
lahf
mov
adc
ss
lea
add
xchg
hlt
sub
leave
clc
push
add
pop
mov
add
jp
movsl
dec
mov
add
cltd
jnp
inc
sarb
sbb
in
xlat
enter
int
jl
dec
dec
cmovne
test
mov
mov
mov
and
mov
and
lods
xchg
enter
jp
cmpsb
add
xlat
pop
pushf
fimull
cmpl
mov
fnstcw
sti
pop
and
fstpt
scas
or
xchg
xchg
mov
cmp
lods
cmp
push
cwtl
push
inc
mov
fsubrl
sbb
loope
mov
sbb
jbe
fwait
insb
cld
mov
adc
insb
pusha
mov
cmp
xor
test
jo
jl
cmpsb
xor
in
xor
mov
inc
subl
aad
out
ss
rcl
shrl
dec
arpl
mov
mov
repz
outsb
int3
add
lods
shll
sbb
adc
sbb
xlat
inc
rorl
mov
ret
adc
loopne
scas
xor
xchg
fidivs
pop
mov
add
ss
mov
push
mov
clc
xchg
xchg
pop
dec
cwtl
mov
or
mov
repz
push
inc
stc
jns
mov
stc
cmp
rolb
fs
pop
test
outsb
pop
push
dec
mov
push
inc
mov
jp
imul
nop
cmc
xchg
cli
insb
lcall
mov
jo
adc
je
test
mov
cld
xrelease
jl
or
push
pusha
test
movsb
pop
push
mov
std
inc
xor
mov
inc
pop
jmp
lcall
out
adc
lea
push
xor
aaa
xchg
mov
fdivrl
cli
adc
mov
in
jae
out
mov
dec
je
xchg
inc
test
mov
jo
pushf
sub
xchg
and
sub
xchg
ljmp
icebp
mov
mov
xchg
and
mov
sub
test
jns
cwtl
and
and
enter
movsb
jb
pop
fadd
sub
jmp
ja
out
lds
pop
int
popf
fs
ss
fdivr
pop
mov
xchg
mov
iret
das
xlat
shll
xchg
fimull
jb
std
testl
sahf
lcall
out
cltd
xchg
push
inc
mov
fsts
mov
jnp
je
jns
fists
movsb
push
mov
test
clc
or
stos
sbb
loope
lea
jo
or
push
cmp
sub
sbb
add
mov
mov
jp
sub
lods
pop
dec
das
sbb
neg
mov
sahf
push
adc
lods
shlb
dec
movsl
pop
popa
aam
lock
cmp
andb
or
out
xchg
dec
fstps
inc
push
aas
inc
and
lret
mov
sub
mov
push
push
lcall
lods
lods
cmp
mov
or
sbb
pusha
lret
adc
push
cmp
lcall
sbb
inc
xor
push
sub
adc
movsl
in
push
inc
shlb
dec
xor
xchg
daa
test
rorl
cmpb
cld
xchg
cmp
mov
test
test
sbb
mov
stos
cmp
popf
pop
scas
inc
or
jge
lods
dec
scas
inc
imul
je
in
add
inc
ret
incl
cld
popf
cmp
popa
movb
mov
jno
and
jmp
les
push
in
mov
cmpsl
push
mov
and
and
push
push
dec
nop
xor
scas
cmpb
insl
mov
jo
pop
bound
neg
cli
out
sbb
adc
xlat
mov
mov
arpl
fnstsw
std
decl
sub
lret
push
push
insb
and
sub
xchg
jno
mov
xor
lret
mov
sub
rolb
loope
jo
push
test
mov
cmp
test
incl
sbb
into
cmp
sbb
call
pop
stos
shl
in
xchg
dec
int
or
adc
cmp
out
scas
inc
mov
cmp
or
add
inc
jge
test
nop
pop
insb
sbb
jne
xor
stos
push
ljmp
ja
xchg
popf
add
aas
pop
je
and
mov
pop
bound
mov
push
shlb
sbb
xchg
cmp
mov
mov
jne
xchg
dec
fs
out
xorb
cwtl
aas
pushl
flds
cmpb
pop
inc
jl
frstor
mov
cmp
mov
cmp
cmp
leave
cmp
out
rorl
cmpsb
daa
movsb
out
mov
inc
adc
sub
mov
adc
xlat
mov
dec
lods
subl
shll
enter
xchg
jmp
sbb
add
push
pop
push
and
adc
dec
int
stos
push
xchg
mov
clc
pop
fs
fwait
cmc
sahf
stos
lods
push
xchg
cmpsb
lea
jg
fstl
jmp
sub
jge
outsb
xorl
shr
ret
fstps
hlt
and
dec
add
ficomps
lods
popf
mov
ficomps
insl
mov
movsl
jge
hlt
push
and
mov
cmp
add
sarl
scas
in
out
shrb
pop
jg
and
pop
pop
rolb
jb
frstor
sub
jl
cmpsb
ljmp
push
nop
out
inc
out
fisubrl
jb
mov
add
sub
add
ja
lods
fcoml
ret
pusha
lock
sub
jg
adc
popa
test
into
fstps
or
and
cmp
jp
sub
dec
clc
cltd
xchg
subl
mov
ja
sbb
sbbb
jne
repnz
in
lods
int3
or
test
out
lret
jg
sub
and
das
jge
stos
je
fnstenv
push
hlt
xor
cltd
mov
push
push
xor
xor
imul
scas
aam
mov
jae
hlt
dec
cmpl
mov
cmp
push
mov
cmp
or
insl
out
xor
in
mov
shlb
push
scas
popa
jae
ffreep
sbb
sbb
shlb
dec
or
fidivrs
out
push
push
mov
sbb
cltd
cmp
pop
cli
inc
push
xchg
xor
loop
mov
stos
dec
mov
push
int
mov
push
inc
or
arpl
mov
js
add
dec
int
loop
out
ss
jb
and
cmpsl
adc
mov
pop
mov
cltd
js
mov
add
xchg
flds
sbb
and
jb
cmp
scas
in
adc
cmp
cwtl
gs
jp
or
sbb
mul
adc
cmp
jle
rorb
xchg
test
ljmp
test
xor
inc
iret
js
cmp
adc
inc
mov
push
xchg
mov
sub
jg
and
add
inc
dec
js
jmp
jns
data16
mov
mov
fidivrs
push
dec
mov
sub
add
ficompl
dec
sarl
outsl
cmpsb
mov
jo
mov
ljmp
pusha
pop
lods
ljmp
cmpsb
mov
push
stos
shrb
adc
js
fists
add
or
push
ljmp
in
xor
ret
push
push
adcl
test
int3
int3
or
jne
imul
xchg
dec
mov
lock
mov
rorl
add
sbbl
rorb
and
or
xchg
int
pusha
or
or
pop
incl
loopne
outsl
jecxz
lret
js
in
gs
or
dec
push
lret
jno
sbb
cli
xchg
cli
xor
pop
and
fstl
outsl
xor
decb
xchg
jle
pop
sub
loopne
dec
outsb
mov
das
cld
mov
outsb
mov
les
insl
or
mov
and
add
adc
push
push
stos
ret
add
imul
cmp
lds
sub
inc
test
jmp
fs
rcrl
push
pusha
inc
loop
leave
ja
push
dec
push
cs
inc
push
xchg
ret
loope
addr16
popa
mov
ds
in
ja
insl
cs
xchg
fistl
fists
sbb
scas
aas
pop
jle
inc
jmp
add
sbb
scas
fadd
test
adcl
fnstenv
daa
add
fnsave
repz
aas
and
fdivs
add
sub
jmp
jo
mov
fcompl
leave
push
sarl
lret
ss
ja
push
ja
addr16
sbb
push
jae
sbb
xchg
rcrb
inc
add
jbe
int3
sub
popf
stos
xchg
rcl
mov
sub
fdivr
jno
gs
movswl
pusha
lock
rorb
stc
fstpt
sbb
xchg
pop
faddp
mov
sbb
sbb
and
mov
lock
lret
xchg
iret
adc
or
jle
pop
pop
cltd
jp
int
aas
sub
cmp
jmp
xor
into
jb
addb
aad
sbb
je
fdivp
insb
mov
jge
fbstp
or
pop
mov
inc
scas
xor
insl
sub
out
dec
xchg
and
push
pop
cs
sub
mov
fs
mov
or
out
fs
stc
mov
inc
push
or
push
filds
or
leave
mov
mov
sbb
mov
adc
adc
mov
je
jns
dec
out
icebp
aas
pop
xor
xchg
ss
shrl
pop
cli
mov
aaa
inc
outsl
stc
jnp
sub
add
push
jmp
pop
dec
andl
mov
pop
arpl
xchg
std
gs
rolb
sub
cmpsl
lcall
sbb
jno
mov
mov
mov
in
mov
arpl
add
or
inc
test
cmp
mov
lock
and
pop
sbb
in
xor
iret
cmp
push
cmp
rcll
sti
sbb
shrb
push
aam
leave
mov
rcrb
leave
decb
dec
das
in
dec
lahf
cmpsl
loope
fcos
outsl
push
dec
loopne
cmp
aaa
cwtl
jp
xchg
rorl
dec
add
push
loop
outsb
inc
mov
imul
jle
or
gs
lahf
test
xor
fs
pop
into
jl
or
andb
jno
rcl
push
push
xchg
aad
je
sub
sbb
adc
mov
loopne
xor
shll
and
ljmp
mov
or
aas
sub
pop
add
lock
jae
mov
xor
mov
dec
xchg
dec
sub
negl
mov
pop
data16
ljmp
cld
movsb
pushf
adc
and
leave
fs
lahf
cmpsb
popa
inc
xchg
push
dec
xchg
sub
mov
jno
fbld
rolb
mov
leave
or
inc
dec
pop
out
popf
fcompl
push
int
pop
orb
insb
add
xchg
imul
adc
clc
sti
das
pop
push
ljmp
outsb
xor
insb
push
xchg
mov
mov
movsb
leave
filds
pop
xchg
add
ljmp
jbe
popa
repz
into
push
mov
jnp
jae
sbb
fdivrs
repnz
adc
or
push
mov
mov
iret
jb
push
loope
push
xchg
movl
jbe
pusha
lahf
shl
mov
xor
jnp
and
cmp
jmp
ss
dec
rorb
out
or
pop
jo
fwait
jl
xor
enter
jg
fcmovb
adc
sub
jo
bnd
lret
mov
jp
or
fdivrl
push
lret
mov
lahf
in
dec
test
sbb
add
daa
mov
sahf
pop
adc
iret
mov
adc
les
push
mov
mov
adc
xor
adc
aas
adc
stos
or
mov
or
stos
daa
mov
outsb
and
dec
leave
inc
sub
shl
push
push
inc
mov
stc
mov
jb
fwait
jne
xchg
push
js
adc
push
and
insl
mov
dec
mov
xchg
jl,pn
repz
cmp
pop
dec
and
jecxz
aad
sahf
dec
popa
out
pop
cwtl
jno
add
pushf
dec
cmp
ret
mov
rolb
leave
fidivl
adcb
mov
inc
dec
popf
add
pop
jecxz
pop
pop
dec
cli
fcmove
test
mov
pop
aad
out
lds
cvtdq2ps
movsb
jbe
jae
lahf
xchg
jecxz
fcmovbe
fiadds
sbb
rorb
xor
loope
sbb
or
lret
iret
in
rcrl
mov
into
imul
xchg
inc
fwait
je
sbb
addr16
inc
gs
inc
cmp
aas
gs
ja
les
ljmp
fsub
push
xor
adc
cmpsl
repz
jge
insb
push
pop
scas
scas
test
stc
dec
je
xchg
adc
sub
rorb
fists
adcb
stos
movsb
outsl
dec
fdivrl
loop
mov
testl
daa
sti
mov
xchg
fsin
clc
mov
iret
xchg
lock
fistl
lret
cli
push
xchg
jmp
cmp
jl
lret
in
jl
sti
pop
les
out
add
scas
addl
mov
in
mov
sbb
pop
bswap
mov
and
cli
hlt
pop
jnp
xor
or
je
or
or
enter
stc
stos
xor
adc
xor
in
pusha
and
adc
stos
xor
sub
pop
shll
pop
sub
addr16
popa
rcr
pusha
into
test
test
aas
sub
sub
adc
mov
icebp
cmpsl
dec
cs
loope
jl
and
inc
sub
sub
inc
inc
out
mov
push
ss
jge
stc
loop
hlt
scas
mov
es
add
nop
fisttpl
inc
add
shl
cs
mov
pop
outsl
scas
iret
add
rcr
dec
imul
add
mov
jbe
inc
sub
dec
cli
xchg
dec
out
mov
repnz
dec
jle
dec
dec
in
in
xchg
dec
arpl
jecxz
mov
cmc
repz
popf
out
mov
mov
push
mov
cltd
adc
jno
test
movsl
cwtl
int
test
sarl
lea
in
cmp
mov
inc
pushf
mov
mov
jbe
shrl
lea
pop
in
movsb
xchg
mov
or
fsubrs
sub
jp
jns
xchg
sub
pop
add
xchg
xchg
fs
xchg
ret
lahf
jb
mov
cld
xlat
jns
out
punpckhwd
jb
pop
push
call
insb
scas
rorb
mov
cwtl
sahf
rorl
rcll
popa
inc
or
lret
jmp
les
pop
push
daa
jle
lcall
push
les
adc
or
mov
fistl
add
sbb
movsb
push
fcoms
loopne
adc
ret
pmaxub
std
xchg
outsb
aas
mov
scas
mov
cmpsb
loope
decb
repz
cmc
pop
push
cwtl
adc
fisubrl
mov
inc
into
scas
or
inc
xor
outsb
push
ss
and
cmpsl
sbb
int3
stc
insl
inc
and
arpl
push
and
pop
cmp
rorb
fs
shl
das
loop
adc
jmp
sbb
leave
xor
arpl
sbbl
rolb
in
sbb
js
add
cmpsb
popl
mov
jbe
xchg
movb
std
in
lahf
pop
pop
sbb
adc
lock
dec
jl
leave
insl
data16
sub
negl
pushf
out
push
jmp
adc
xchg
sub
pop
sarl
adc
sbb
xchg
xor
aad
inc
sar
cmpsb
sub
insl
roll
ja
stc
mov
adc
dec
fmuls
lret
inc
mov
sarl
repnz
dec
jge
sub
adc
ds
sbb
cmp
imul
xor
push
imul
add
xor
adc
cltd
fisttps
pop
stc
lret
sbb
add
cmpb
mov
xlat
jns
mov
pop
jbe
in
add
dec
orb
adcb
xor
jle
xchg
into
loop
enter
js
or
xor
sub
mov
sub
pop
cmpsb
push
call
sub
jge
dec
loope
add
mov
mov
out
mov
in
out
pop
mov
pop
lds
mov
icebp
jge
xor
out
pop
sbb
push
jmp
cltd
jae
jbe
adc
cwtl
add
adc
mov
mov
loope
stos
je
shrl
ret
xchg
test
or
dec
iret
cli
adc
loope
call
push
xor
insb
sub
dec
jle
cmp
sahf
pop
dec
imull
aad
fimuls
movsb
ret
and
fcmovnbe
fcmovbe
std
pop
outsb
sub
mov
inc
call
add
dec
ja
dec
mov
sub
out
popf
cld
gs
dec
push
jecxz
push
dec
cmp
add
lods
outsb
cs
mov
aaa
les
stc
mov
jmp
cmpsb
jae
push
xor
sub
inc
mov
mov
test
jbe
andb
xorb
addl
adc
adc
insb
jl
mov
adc
fwait
or
scas
lahf
cmc
addr16
xor
cmpsl
push
rcrb
aad
outsl
stos
jnp
inc
xlat
cmp
push
mov
push
mov
dec
adc
pusha
cld
int3
adc
sahf
jp
ljmp
sbb
dec
push
sbb
daa
xchg
sub
lahf
adc
ja
ss
mov
sbbl
cld
ret
mov
mov
sbb
scas
ret
mov
push
mov
sahf
xlat
inc
jnp
fidivl
mov
int
xor
test
imul
vrcpps
inc
ficoml
out
call
and
mov
std
loope
mov
mov
pop
jb
cmp
ret
nop
rep
mov
add
mov
xor
into
adc
or
mov
test
ficompl
xchg
stos
sub
push
push
imul
jb
inc
subb
dec
cmp
pop
stos
or
or
mov
sub
adc
adc
add
xchg
pop
adc
sub
mov
sarl
lock
adc
mov
out
enter
sbb
add
repz
cmp
mov
sub
stc
pusha
cmp
nop
pop
cwtl
stos
lock
xor
divl
cmpsl
mov
or
testb
pop
dec
scas
fidivrs
inc
pop
cmp
adc
jmp
fcoms
mov
jae
push
xor
fstl
adc
cmpsb
xlat
loop
icebp
jnp
sub
rolb
push
inc
imul
stc
cmpb
jb
pop
andl
imul
test
aas
mov
xor
jg
sbbb
and
arpl
push
scas
lret
jecxz
dec
movups
or
or
inc
mov
jmp
ja
push
mov
int3
add
in
loope
data16
mov
repnz
xchg
cli
repnz
aam
aaa
lds
pop
or
cmc
jl
ficoms
movsb
pop
adc
ljmp
add
push
or
cmpsl
shlb
outsl
sub
pop
fdivrp
and
jl
cmp
cmpsl
int3
inc
lcall
je
insb
test
int3
cmp
cmp
test
lea
scas
std
popa
mov
js
ljmp
mov
adc
or
cld
dec
jnp
add
iret
and
jmp
jge
shl
mov
popf
push
into
stos
lret
mov
xchg
push
mov
dec
mov
ss
sbb
inc
sub
pop
cmp
pop
jle
add
and
xor
and
inc
out
or
jae
and
mov
imul
sarl
iret
pop
push
shrb
cmp
shlb
xor
and
test
fsubr
push
mov
mov
mov
pushf
shrb
mov
xor
lods
cmp
adc
xchg
cmp
cmp
add
ja
sub
sahf
mov
pop
mov
andb
cmpsb
arpl
sbbl
xchg
stos
push
dec
fcmove
jl
mov
cli
movsb
sbb
add
imul
out
sbb
mov
mov
pop
movsl
sbb
push
lea
jnp
hlt
dec
push
loop
fisttps
stc
loopne
test
repz
out
xor
xor
jb
xchg
xchg
inc
daa
adc
add
mov
and
jbe
mov
int3
or
adc
push
rcll
xor
and
mov
mov
sub
mov
push
inc
add
mov
or
xchg
dec
adc
fldl
pop
das
add
std
lcall
dec
sub
mov
xlat
xchg
push
dec
xchg
push
mov
jl
sbb
fstps
dec
fs
fmul
push
xor
sub
std
push
je
lock
test
or
ss
cmp
je,pt
pop
pop
ret
in
sbb
xor
adc
daa
inc
jl
in
lret
push
icebp
xchg
jmp
jmp
rorl
pop
div
inc
test
ds
jbe
mov
mov
jge
adc
mov
scas
mov
insl
and
scas
adc
leave
mov
test
inc
push
sbb
out
jb
pusha
ljmp
mov
popf
push
sbb
push
or
xor
dec
pop
jp
js
cmpsl
cmp
cltd
imul
sub
xlat
adc
fadds
dec
cs
insl
lea
mov
in
mov
jp
mov
out
cmc
aaa
int
inc
jbe
scas
inc
and
mov
adc
or
loope
leave
push
pop
mov
cmp
and
push
xchg
cltd
push
cli
in
hlt
jmp
dec
mov
sbb
rcll
dec
push
dec
in
sbb
xchg
sub
fs
lea
loope
mov
jbe
dec
dec
iret
cmp
repnz
mov
mov
pop
cmp
insl
ret
andb
repz
mov
mov
scas
pop
cmpsl
jno
imul
in
icebp
sub
mov
sbb
addl
inc
in
out
xor
les
sbb
mov
jge
pushf
mov
pop
inc
pop
mov
mov
xchg
mov
hlt
mov
mov
ret
je
pop
adc
gs
dec
and
mov
push
mov
adc
data16
gs
in
lea
stos
cmp
stos
jbe
clc
mov
les
jo
imul
ja
lds
sub
stos
mov
xchg
xchg
repz
scas
in
fsubrs
xchg
faddp
add
leave
insb
dec
jno
mov
pop
arpl
orl
js
or
or
pop
test
adc
mov
mov
or
rolb
shrl
addr16
repz
xor
imul
jb
mov
or
mov
fiaddl
loop
jecxz
stos
mov
pop
enter
addr16
push
add
hlt
sahf
push
or
xchg
jp
rcl
pop
ljmp
xor
outsb
fcoml
jno
fsub
ss
or
fwait
jb
aad
push
repnz
popf
movsb
fnstenv
sbb
jns
adc
aad
stc
gs
sbb
mov
insb
cmp
or
push
cmp
add
cmpb
inc
cmp
cmp
mov
sbb
mov
adc
nop
mov
jp
xchg
in
out
mov
mov
fstps
into
add
ror
mov
or
rclb
dec
xorl
mov
neg
mov
push
sbb
cmp
in
pop
out
neg
jl
arpl
bound
std
xorl
fmuls
pop
and
es
push
sub
aad
cltd
inc
rol
cltd
dec
pusha
cmpsb
xchg
xorb
iret
push
jle
push
adc
std
mov
lahf
and
dec
test
fdivl
and
lcall
into
test
mov
jbe
jl
jnp
cmpsl
daa
add
or
imul
cmp
dec
jg
lods
scas
negl
pop
jl
cmpsb
push
inc
pop
inc
test
mov
test
sub
mov
ljmp
cmp
andb
xchg
sahf
lcall
les
and
push
or
adc
sahf
or
insl
stc
mov
sub
loop
sub
call
lods
bound
iret
inc
repnz
adc
add
arpl
pop
jb
fs
mov
lods
xorl
aas
into
int3
cmpl
stos
out
push
mov
inc
out
fs
cld
lock
and
lods
sahf
pop
test
lods
pop
aad
xchg
fstps
cmpsb
stc
ds
daa
lods
fistpl
nop
scas
and
push
les
cli
sub
rolb
clc
enter
testb
in
add
aaa
push
and
mov
xchg
iret
add
mov
mov
mov
xor
test
cmpsb
lret
data16
lea
push
mov
sub
mov
inc
in
mov
sahf
mov
or
mov
unpcklps
sub
pop
popa
insb
push
push
jmp
xchg
and
xlat
pop
adc
leave
jmp
sub
nop
adc
jmp
sbb
jae
mov
ss
imul
jae
loop
popf
sub
add
sub
pop
ret
cltd
add
push
cmp
inc
xchg
fnstenv
mov
dec
mov
sub
popf
data16
or
arpl
xor
fs
in
test
add
dec
xorb
xchg
xchg
mov
insl
rol
repz
lahf
fwait
shrb
outsl
xor
and
jnp
ret
pop
sarb
mov
xor
loop
fsts
out
cld
mov
add
push
fistps
into
insl
repnz
pop
mov
push
or
or
xchg
jge
add
push
xchg
xor
ret
test
mov
pop
inc
clc
dec
out
js
cmp
lock
iret
lods
inc
jb
arpl
or
pop
fbld
fnsave
mov
xor
aam
cmpsl
imul
or
xchg
push
cmc
mov
ljmp
mov
les
xchg
lods
fiadds
fldl
sbb
out
sbb
jae
mov
xor
or
lods
pop
fbld
dec
imul
jl
inc
and
mov
mov
lods
push
mov
cltd
dec
leave
jb
adc
mov
sub
xchg
loope
aaa
adc
ja
sbb
push
lret
inc
stos
stos
xchg
xor
stc
test
fidivl
mov
out
insb
fwait
insb
imul
shll
inc
cld
or
dec
push
fwait
shrb
and
in
push
sbb
std
xor
lds
mov
sub
stc
stos
push
xchg
in
or
adc
jp
imul
push
push
push
in
push
and
sti
bound
insb
jne
mov
pushf
or
inc
pop
pushl
stos
cmc
mov
sti
push
and
adc
sub
icebp
hlt
shll
xchg
inc
xor
or
dec
pop
push
neg
andb
fisubs
ljmp
cmp
pop
xchg
xor
xor
loop
test
jb
push
fs
mov
pop
lahf
loopne
mov
pop
push
mov
stc
push
mov
gs
sub
ss
aad
cmp
imul
cmp
or
or
mov
mov
idivl
push
loop
negl
cmp
rcrl
inc
inc
div
and
jnp
sub
sub
mov
pop
jle
xor
sahf
scas
loop
pop
push
shl
test
bound
push
adc
xchg
imul
out
jae
lods
mov
inc
pusha
stos
outsl
pop
ficomps
iret
push
or
icebp
adc
mov
cwtl
ds
dec
push
adc
out
cmp
cli
lea
pusha
sbb
add
shll
popf
pop
cmpsb
pusha
negl
pop
lock
inc
jbe
add
test
jno
js
movsl
mov
pop
mov
lock
jno
push
pop
ja
push
dec
repnz
and
mov
or
loope
in
icebp
inc
aas
insb
sub
dec
bound
mov
ret
bnd
das
stc
in
fildll
ja
enter
or
jnp
mov
mov
mov
push
pop
inc
adc
loopne
push
and
mov
jae
push
sub
sarl
iret
neg
adc
dec
pop
pop
je
daa
cmp
nop
mov
adc
cmpsl
push
bound
fiadds
iret
test
rcrb
xlat
jb
inc
mov
sbb
es
imul
out
into
mov
adc
mov
dec
mov
xchg
test
ds
out
jmp
lret
and
adc
test
cmp
loopne
add
mov
cmp
pop
pop
insb
mov
mov
adc
and
fists
mov
in
adc
scas
cwtl
sbb
lahf
fbstp
cmp
popa
inc
or
cmp
sub
add
push
shr
loope
xor
xchg
pop
cmpsl
int
mov
insl
mov
insl
pop
push
pop
xchg
pusha
fsubrs
pop
sarb
push
inc
xchg
cli
outsb
cmpsb
bound
jle
sub
cmp
das
divl
sbb
pusha
dec
dec
aaa
push
adc
inc
loop
adc
push
mov
shlb
inc
inc
inc
enter
das
dec
mov
ja
or
shll
test
pop
mov
jns
mov
test
cmpsb
aaa
mov
out
andb
es
enter
clc
mov
movsl
daa
insl
xor
mov
dec
ficoml
inc
pop
int3
and
dec
bound
and
popf
dec
ret
bound
enter
addb
cmp
sbb
xor
out
mov
sar
out
jo
ror
orb
dec
ss
rol
bound
aas
negb
stos
test
mov
and
fiaddl
mov
pop
mov
in
popa
jl
pop
dec
pop
jnp
sub
mov
sbb
inc
pop
and
int3
add
pop
and
stos
rorb
xor
mov
cltd
jo
or
popa
mov
sbb
int
mov
in
ror
inc
mov
xchg
sub
jl
xor
outsb
pop
bound
call
cmp
push
out
shr
or
ds
mov
iret
fwait
gs
cmpsb
adc
cmp
insb
fists
out
bound
add
dec
jne
and
cmp
int3
mov
pop
mov
adc
and
pop
addl
dec
daa
aaa
and
inc
and
mov
inc
sub
and
in
and
pop
insb
inc
add
inc
add
mov
xor
popa
daa
lcall
jno
shlb
adc
jmp
adcl
fs
out
cld
lret
and
movsb
xor
add
loop
push
jl
clc
loop
sbbl
aas
into
push
mov
lcall
in
ror
sbb
mov
hlt
pop
xchg
pop
daa
jb
push
daa
adc
mov
mov
dec
jb
lcall
adc
insl
xchg
lret
lock
fucomi
xchg
inc
sub
js
inc
andb
hlt
inc
leave
outsl
add
out
jg
push
jo
lods
mov
loopne
dec
xor
lods
adc
xor
xchg
pusha
adc
clc
cmpsb
dec
daa
cli
sbb
cmp
loop
rclb
es
lcall
xor
inc
lds
and
iret
dec
enter
setl
sub
sarb
jns
inc
popf
xchg
iret
or
push
xchg
mov
mov
stos
xor
inc
ds
cld
outsb
mul
dec
inc
insl
or
dec
jnp
jmp
stos
or
inc
inc
lock
pop
and
in
out
cmp
ror
cld
test
mov
pusha
prefetch
xlat
pop
adc
jae
pop
outsl
xchg
enter
lock
shrb
ret
imul
test
dec
rorl
xor
rcll
jne
jo
sub
mov
and
outsb
std
or
xchg
jno
jl
cli
clc
push
mov
in
xor
lcall
loop
rolb
push
lods
and
cmp
mov
xor
cmp
cmp
inc
mov
pop
pop
aas
cmp
cli
mov
cmp
push
pop
lret
cmc
mov
sti
jp
cmp
xlat
stos
mov
gs
ljmp
or
cld
sub
push
fisttpl
lahf
fdivrs
nop
and
fcoms
xor
inc
sub
or
xor
or
xor
nop
cmp
pop
jmp
insb
jo
mov
pop
pop
out
jmp
sbb
ffreep
sbb
jmp
dec
arpl
cmp
push
aad
outsb
or
mov
push
pop
pop
and
divb
inc
out
push
das
sarb
inc
shlb
add
xchg
mov
add
outsb
sbb
movsl
subl
std
sbb
xor
xorb
xlat
ret
push
ficoms
lods
add
push
push
mov
sub
and
push
mov
mov
repz
mov
out
imull
das
ds
fsubl
pop
stos
push
and
sbb
mov
inc
xchg
sbb
lods
adc
stos
sub
data16
lret
cmpsb
xor
into
in
iret
push
pop
xor
or
and
jle
in
imul
jo
push
push
in
or
popa
es
stos
out
xchg
mov
adc
sub
inc
mov
mov
add
cmpsl
pop
mov
das
into
add
and
jmp
sbb
lock
cmp
sbb
ljmp
nop
fcomp
test
and
aaa
fsubs
cmp
ss
xor
sub
xchg
scas
scas
popl
lea
mov
mov
bound
sbbl
pop
jno
mov
hlt
jne
adcl
jnp
ja
adc
dec
movsl
loopne
shll
push
data16
testl
xor
mov
pop
inc
adc
mov
out
inc
mov
mov
data16
movsb
mov
cmp
inc
sbb
dec
xlat
cld
cmpsb
in
ficompl
gs
mov
cvtpi2ps
ret
pop
mov
clc
sub
loopne
inc
or
fildl
jl
nop
adc
pop
ret
or
das
fincstp
cmp
call
mov
ror
popa
jl
fs
adc
lea
ss
idiv
cmp
sub
sbb
out
es
pop
imul
xor
xchg
dec
push
add
shrl
jge
mov
stc
xchg
lret
mov
dec
and
in
mov
sbb
insb
dec
mov
mov
loope
sar
dec
movsl
jp
ret
and
xchg
add
sbb
or
fldt
ja
rorb
out
pop
jne
cmp
hlt
insb
clc
mov
xor
jb
out
test
dec
je
fucom
xchg
test
adc
jnp
xchg
and
ja
mov
repnz
ja
mov
mov
cmc
push
mov
xor
pop
or
mov
imul
shlb
add
arpl
lcall
lret
cmpsl
mov
movsl
mov
mov
sub
jp
jecxz
mov
fsubl
mov
fisubrl
mov
mov
mov
lods
lahf
imull
jl
movsb
push
jp
xchg
sub
cmp
push
mov
loope
xchg
vmptrld
std
sub
push
ficoml
xchg
data16
daa
jp
orl
inc
sbb
test
adc
sbb
imull
jo
jbe
sub
nop
ret
xchg
cmp
repz
negb
jecxz
aaa
shlb
sbbb
push
cmc
pop
inc
push
lods
fdivrl
lea
stc
inc
xchg
xor
int
or
cli
pop
sbb
pop
addl
stos
repnz
pop
das
mov
xchg
sub
jge
outsl
loopne
clc
enter
cmp
bound
xlat
push
push
push
iret
fwait
lea
out
cmp
loope
add
ds
lock
fwait
test
sysret
testb
jg
inc
jns
test
add
scas
mov
sti
jnp
add
mov
xor
mov
lods
jne
dec
in
leave
pop
adc
xor
imul
xor
lds
loopne
mov
clc
push
clc
dec
or
dec
fs
jnp
repz
cmp
and
xchg
pop
xchg
pop
sbb
cmp
mov
sbb
ficomps
mov
or
xchg
lret
dec
mov
mov
add
or
adc
adc
jp
dec
adc
mov
xor
lret
jg
aad
mov
dec
add
jae
adc
add
jb
mov
imul
jl
and
cwtl
jnp
or
bound
cwtl
std
xchg
sbb
sarl
push
pushl
shl
and
lret
lret
add
pop
mov
test
jo
repz
ds
push
jmp
lcall
add
jae
mov
xor
push
out
add
mov
movsb
adcl
testl
idivl
mov
adc
push
cli
add
mov
popa
push
jne
jo
or
cs
addr16
add
dec
cld
add
aad
push
add
xor
jne
mov
inc
iret
adcb
xor
mov
mov
xor
jnp
or
jl
clc
int3
fbstp
jecxz
inc
push
insb
mov
mov
and
in
mov
sbb
mov
xlat
mov
enter
cltd
imul
insb
rorl
or
dec
enter
cmp
xchg
pop
inc
add
idivb
pop
xor
mov
in
sub
popa
rcll
lds
jnp
daa
mul
rcr
jne
adc
mov
push
adc
xor
cmp
mov
sub
or
aaa
cmp
dec
mov
adcl
jnp
add
cmp
ds
adc
adc
movsb
enter
pop
mov
jge
les
inc
cld
movsl
sbb
sub
pusha
xchg
fldl
mov
add
mov
cld
je
fidivs
clc
fistpll
pusha
and
iret
pop
lret
xor
jle
fbstp
xor
insl
dec
ds
lret
xchg
lock
lret
mov
mov
or
sub
jecxz
rcr
cmp
and
jecxz
lahf
sbbb
out
rep
nop
ja
xor
shll
stc
mov
cld
sahf
dec
test
test
xchg
dec
add
test
fnsave
and
adc
lea
mov
ffree
push
fbstp
cmp
xor
adc
add
push
jbe
addl
insl
jne
fwait
inc
xor
adc
test
dec
dec
in
xor
fdivrs
and
iret
sbb
sub
or
xor
cmp
mov
pop
mov
pop
jae
int3
ret
cmp
jnp
dec
xchg
int3
dec
imul
leave
push
lds
bound
pop
sub
add
mov
mov
imul
mov
xor
addl
mov
xchg
mov
aam
push
pop
in
dec
push
shlb
jl
loope
pop
inc
lret
push
cmp
loopne
sub
xor
fidivrs
dec
push
push
ret
bound
xor
rolb
dec
addl
scas
dec
adcb
mov
push
sub
mov
lret
out
ljmp
data16
lret
call
imul
mov
mov
xchg
pop
pop
and
stos
cld
pop
push
mov
in
incl
sub
jnp
pop
xor
sub
call
pusha
rcr
ficoms
jecxz
gs
ljmp
sti
xchg
push
mov
jle
pop
lret
aam
in
add
clc
dec
pop
xchg
sub
fs
mov
fs
mov
insb
js
cmpsl
push
aam
pop
and
mov
dec
out
testb
mov
jmp
mov
ja
push
xor
lods
les
or
inc
push
aas
movsl
or
ret
loop
jns
mov
loope
adc
mov
addr16
mov
mov
pop
push
lret
mov
sub
mov
mov
pop
clc
xchg
jecxz
push
inc
outsb
cmp
mov
stos
js
push
mov
mov
jo
sub
lahf
adc
lret
jae
lods
mov
mov
fldl
fucomip
jne
stos
into
adc
fsubrl
dec
bound
sub
hlt
add
dec
sbb
insb
and
cmp
lret
jg
add
aaa
in
loop
mov
jl
adc
rorl
mov
cmp
js
lock
adc
pop
cld
mov
mov
ljmp
sbb
add
xor
bswap
lcall
sub
jge
pop
pop
xchg
out
fldl
push
in
lret
xchg
divl
lret
imul
mov
pop
cmp
loope
aam
je
or
sbb
int
lea
inc
jo
mov
fsts
fstpl
jbe
add
mov
sub
ret
cld
inc
repnz
aaa
mov
inc
popf
dec
dec
dec
push
fistps
inc
push
add
push
test
inc
vpavgb
loop
dec
fcoml
jno
call
cwtl
enter
imul
push
sbb
jg
es
xchg
popf
push
fninit
ret
mov
in
cvtps2pd
lods
mov
call
lea
outsl
out
out
cmp
mov
sbb
pop
loope
sub
test
mov
cli
imul
push
pushf
adc
cmp
decl
push
cmp
cmpsb
ss
sbb
xchg
rcrb
test
push
xchg
sub
lods
inc
cmp
cwtl
adc
in
jae
mov
lcall
loop
lds
dec
ja
dec
cltd
dec
sahf
js
ja
out
enter
push
bnd
in
jns
mov
into
cld
xor
popf
daa
pop
mov
data16
fucomip
andl
push
sub
jecxz
push
bound
add
leave
cmp
xlat
lret
pop
add
into
cwtl
xlat
cmpsb
xor
pop
fisubl
xchg
fsubrl
test
dec
scas
jae
ss
hlt
xor
jae
mov
push
popa
sarb
outsb
or
fsubs
iret
or
in
test
push
movsb
out
lea
fsubs
and
pop
jnp
test
mov
mov
fwait
mov
jnp
ffreep
outsb
movsl
jp
or
nop
mov
aam
push
sti
pusha
push
adc
iret
hlt
push
icebp
fstp
ljmp
stc
xchg
cmpsl
std
push
in
mov
jl
repnz
repz
fincstp
test
dec
cmp
add
lcall
xor
jnp
cmp
pop
cmp
aas
popa
or
mov
pop
cmp
mov
loope,pn
adc
bound
adc
fcom
mov
incb
lds
push
jbe
sbb
lds
jns
add
adc
xchg
pop
jecxz
cmp
loop
std
cltd
pop
or
mov
std
mov
aam
ucomiss
test
pop
sub
lret
in
sub
pusha
cmp
xchg
testl
fcoml
fnstenv
js
cwtl
mov
or
ret
jmp
jg
add
inc
sub
ret
js
or
fsubp
aad
and
and
lcall
dec
in
leave
data16
mov
lock
repz
mov
das
loop
fildl
pushf
push
cli
insl
or
mov
jo
aad
rolb
xchg
add
dec
xor
in
lahf
mov
fsubs
pushf
or
sbb
imul
ljmp
or
aad
incb
sub
jmp
mov
sahf
xchg
ret
bound
mov
mov
jle
pushf
dec
movl
adc
int3
xchg
mov
pop
push
sti
outsl
sti
in
loopne
fldcw
pusha
call
pop
out
mov
rcrl
fcompl
in
mov
jmp
xchg
or
aad
pop
ficomps
test
dec
xchg
flds
mov
jns
mov
jbe
dec
lcall
pop
scas
push
pop
mov
fcomps
and
push
sti
ds
dec
ja
xchg
sbb
jp
xor
ret
mov
jne
lahf
jbe
xchg
add
pop
inc
js
sub
sbb
lock
sbb
push
push
cwtl
mov
dec
push
in
les
push
mov
xor
adc
popf
xchg
mov
sbb
cmc
jl
testb
data16
jb
xchg
popa
dec
push
hlt
adc
and
cli
pop
dec
cmp
adc
pusha
fcompl
jo
dec
out
jmp
shr
adc
ljmp
jge
hlt
arpl
sub
arpl
and
mov
xor
gs
jo
jno
icebp
lock
mov
cwtl
subl
lahf
sarl
enter
lds
add
dec
les
push
aad
jne
pushf
ret
fsubrs
jbe
iret
stos
call
jp
call
sbb
leave
jnp
xchg
mov
negl
js
test
call
add
inc
jae
scas
adc
lret
xchg
sti
push
out
nop
push
loopne
ss
or
sbb
inc
movsl
fbstp
push
ljmp
shlb
sbb
push
lods
xchg
outsl
adc
inc
pop
and
sbb
in
divl
test
push
loope
mov
addl
sbb
out
push
fdivrs
push
outsb
pushf
mov
push
jns
pusha
clc
mov
ljmp
pushf
mov
cmp
mov
inc
dec
xor
or
insl
mov
adc
ds
sub
ret
sti
add
repnz
icebp
sti
imul
cmp
sbb
outsl
pop
xchg
pop
push
xchg
add
scas
pop
enter
fistpll
push
fwait
cwtl
xchg
mov
imul
std
push
sub
movsb
les
pop
sti
lods
push
push
dec
add
pop
aad
xor
sbb
bound
lahf
cmp
xchg
iret
xor
mulb
xor
push
cmpsl
xchg
sahf
pushf
push
xchg
stos
call
mov
loopne
int3
sub
cmpsb
into
lcall
jno
movb
aad
mov
pop
inc
sbb
mov
and
fbld
xchg
cmc
cltd
adc
push
inc
adc
fsubrl
cld
das
dec
jmp
mov
cmp
mov
popa
add
jg
and
mov
cmpsl
loop
mov
mov
imul
mov
pop
idiv
scas
or
mov
lcall
mov
xchg
cmp
ja
mov
std
mov
mov
ret
negb
mov
xor
jb,pt
cmpsb
call
xor
int3
addr16
mov
popf
xor
mov
push
lods
pop
xchg
fsubp
push
pop
lods
jp
into
inc
or
sarb
test
or
xor
lock
xchg
adc
iret
mov
sub
sub
mov
andl
cld
in
xchg
xor
push
xor
scas
push
call
push
hlt
aas
cmp
or
stc
cmp
inc
dec
cld
cmp
mov
shlb
lds
jae
adc
cs
das
js
ret
dec
aad
sbb
test
xor
dec
or
decb
sti
pop
fs
jg
mov
rep
push
icebp
lcall
and
inc
pop
stc
rcrl
loopne
xchg
test
imul
call
xor
movaps
dec
push
push
jnp
and
push
adcb
sbb
jbe
adc
inc
lock
xor
inc
push
fwait
sub
aad
pop
shll
ljmp
data16
adc
test
arpl
cmp
mov
testl
ss
mov
cli
push
push
in
jp
js
andb
nop
lods
add
xlat
cltd
and
cmp
pushf
int3
insl
in
sbb
and
fidivl
arpl
mov
xchg
mov
scas
xor
inc
scas
hlt
aam
fists
dec
dec
dec
dec
pop
jge
xor
test
aas
sarl
sub
adc
mov
mov
mull
fwait
xorb
shlb
out
mov
fcoms
add
daa
and
pop
push
into
mov
sbb
ds
cmp
jb
cli
pushf
out
xchg
lahf
test
clc
dec
arpl
push
xchg
pop
or
ret
cmpsl
into
ret
rol
pop
ret
or
scas
pop
and
xor
int3
dec
and
dec
xchg
jne
fldz
mov
sbb
xchg
push
sub
ljmp
push
jmp
lods
xlat
out
int3
loop
mov
lret
lcall
divl
mov
mov
out
jo
out
xchg
pushf
mov
dec
mov
sbb
sbb
or
daa
xchg
jmp
mov
repnz
dec
sub
cld
push
add
pusha
and
imul
add
stos
sub
repz
mov
jae
arpl
sahf
inc
dec
cwtl
clc
jb
call
fldt
dec
fcoml
mov
and
cmpsl
addr16
jno
mov
jmp
cwtl
mov
loop
out
push
lods
inc
mov
cli
dec
stos
xor
or
jle
jl
nop
cmpb
xchg
or
sbb
notl
test
mov
sbb
lcall
cltd
jae
sub
enter
aam
js
scas
push
mov
pop
dec
gs
mov
mov
cwtl
mov
shl
xchg
and
fistpll
pop
outsl
int3
push
aam
add
leave
or
es
int
out
mov
xor
movsl
pshufw
les
jnp
leave
fists
jge
inc
divl
call
inc
adc
repnz
xchg
lods
aas
call
xor
insb
xor
xor
cs
xor
sub
mov
push
int3
aaa
je
add
inc
cmpsl
sbb
xor
xorb
movaps
push
lret
sbb
inc
xor
cli
stos
mov
fldlg2
out
xor
or
xchg
pop
dec
aas
push
aam
mov
bound
push
int
clc
and
sbb
mov
add
push
popa
es
enter
pop
lret
scas
push
je
js
sahf
in
call
inc
rol
pop
je
cwtl
stos
mov
insl
cld
ret
lds
jnp
lahf
add
lar
call
pop
pop
dec
outsb
rorl
mov
inc
aaa
daa
and
insb
cld
sbb
sub
xchg
sub
xchg
sbbb
lcall
cmp
fwait
outsb
clc
pop
addb
pop
in
jb
out
mov
test
movsl
adc
mov
push
popa
fdivs
or
pop
and
pop
cmp
jo
iret
bsr
call
pop
fcoms
std
add
sarl
xchg
jnp
xor
push
fdivrs
je
inc
sbb
les
sbb
cmp
pushf
pop
and
cwtl
xchg
pop
fmuls
mov
aam
xchg
out
aas
jmp
addr16
imul
inc
mov
cmp
mov
jp
into
mov
sbb
adc
lock
stc
dec
sbb
nop
jb
negb
dec
pop
mov
rcr
push
dec
add
jbe
test
aas
or
sahf
push
xchg
lods
mov
cmp
repnz
push
inc
jmp
imul
or
pop
inc
stos
push
pop
test
mov
mov
testb
fldt
xor
icebp
test
adc
popf
cmp
xor
pop
mov
jge
adc
shll
out
jo
movsl
adc
xor
dec
inc
data16
rcr
mov
dec
dec
fs
insb
mov
iret
and
add
cmp
outsl
mov
fs
xchg
pop
mov
rcl
dec
xor
imul
loopne
outsl
jmp
shll
jecxz
lret
lret
fwait
sub
jge
std
lock
stc
aam
sahf
mov
jmp
cli
adc
mov
loope
out
stos
hlt
test
int
pop
test
jle
out
jb
scas
ja
lock
mov
negl
shlb
cmp
dec
sbb
mov
sub
addr16
popa
nop
hlt
pop
inc
jae
pop
sahf
inc
sub
lret
add
adc
jae
lods
aad
cwtl
xor
fmuls
mov
xchg
scas
push
or
cs
shll
inc
lock
sub
push
mov
sub
jmp
mov
ret
insb
push
pop
sub
or
jg
ret
sub
mov
mov
out
jbe
and
sbb
pop
adc
jecxz
jge
fwait
pop
jns
push
xchg
aas
pop
cmp
pop
or
insl
inc
lret
jae
inc
leave
inc
push
mov
ficomps
adc
mov
out
xchg
pusha
inc
sbb
inc
push
jecxz
push
mov
scas
mov
bound
xor
nop
xchg
cmp
cmp
inc
mov
lahf
jbe
or
ret
xchg
mov
pusha
or
add
mov
adc
push
add
mov
mov
pushl
push
xchg
sarb
xchg
adcl
xlat
fxch
hlt
pop
mov
lds
div
cld
arpl
xchg
ret
cmp
jg
add
imul
lcall
xchg
out
jbe
sub
pop
xlat
and
mov
adc
fs
ljmp
cmpsl
xchg
adc
popf
insl
sbbl
mov
add
inc
sbb
orb
dec
sbb
sub
jae
or
movsl
lods
pushf
push
adc
xchg
je
cmpsl
paddusw
sub
pop
pop
add
inc
hlt
sub
jp
sbb
movsb
lret
push
inc
cmp
jp
pop
pop
cmpsb
std
push
inc
push
or
or
xchg
icebp
mov
cltd
jmp
xchg
or
lahf
lret
pop
cmpsl
push
xor
sub
popa
loope
lds
adc
mov
fisubs
and
pop
into
out
imulb
std
insb
adc
outsl
test
add
movsb
out
lock
orl
jb
movsb
ret
dec
lods
ficoms
xlat
sub
lea
or
inc
out
mov
or
lock
mov
cmp
loop
fdivrl
add
out
jbe
and
sti
orb
and
pop
pop
fcom
out
sub
sub
in
aam
lret
or
mov
inc
sbb
in
mov
adc
add
jg
push
ja
jbe
sub
mov
test
mov
addr16
pop
out
push
push
imul
pop
mov
fnstcw
pop
mov
and
cmp
shl
sub
lahf
insb
clc
xor
insl
popaw
add
fidivrs
imul
push
js
fld
or
push
xor
outsl
mov
or
sub
lods
add
loop
inc
aas
jecxz
sbb
pop
std
push
popf
ds
mov
gs
add
xorb
mov
test
jge
data16
push
push
xchg
test
push
ljmp
dec
in
push
mov
scas
out
jne
mov
dec
icebp
cmp
mov
mov
sahf
mov
xchg
stc
pop
mov
or
mov
push
das
jns
xor
inc
mov
sbb
mov
jo
or
inc
adc
adc
loope
sbb
xor
sub
aaa
cmp
inc
adc
sbb
sub
xchg
xor
mov
repz
and
mov
cmc
popl
dec
pop
jae
movsb
xchg
pop
sbb
adc
mov
popa
pushf
fidivl
movsb
in
push
repnz
fldt
jnp
ret
mov
xchg
dec
pop
dec
pop
pop
cmp
push
pop
pushf
mov
cld
inc
pop
decb
shl
jno
imul
xor
xor
pusha
and
loop
dec
pop
pop
cli
mov
in
aam
inc
cwtl
aad
fcoml
add
jecxz
outsb
movsb
xchg
data16
testb
add
push
negb
fs
pop
pushf
lock
push
adc
sub
push
sqrtps
mov
adc
or
mov
pop
ljmpw
xchg
mov
fcmovbe
jo
jnp
xchg
push
push
idivl
outsb
dec
mov
push
mov
sbb
sbb
and
fcoml
arpl
pushf
cmp
or
dec
cmpsb
mov
add
das
xchg
iret
xor
pushf
cmpsb
leave
mov
jg
loop
cmpsb
lds
xor
jae
pop
jge
scas
fnstcw
mov
negl
repz
in
cmpsb
dec
jmp
stc
loope
cmpsl
divb
cld
jcxz
mov
movsb
inc
addl
push
idivb
and
ljmp
subb
movsb
adc
push
insb
bound
lods
pop
inc
mov
pop
cmpsl
push
and
ret
inc
aas
les
imull
inc
jmp
pop
lds
jp
addl
dec
rorb
fmuls
pop
call
pop
popa
dec
dec
mull
scas
pop
mov
bndldx
iret
lret
enter
dec
fsubrs
and
and
addr16
sbb
adc
push
jecxz
sbb
stc
cltd
adc
pop
jno
leave
mull
and
inc
fsubrs
ret
and
push
lret
xchg
pop
popf
xchg
jae
inc
in
scas
fsubl
inc
push
shr
sbbl
into
in
lock
push
adc
ret
lcall
sbb
outsl
push
inc
test
or
in
adc
cmp
xchg
jmp
sbb
sub
mov
jmp
inc
xor
lds
fs
mov
mov
dec
adc
insl
sbb
aad
push
aam
cld
and
or
adc
in
cld
push
xorl
dec
std
aas
pusha
or
stos
xchg
xchg
adc
fst
test
jle
cwtl
mov
inc
ljmp
mov
sbb
cmpb
aad
dec
xchg
mov
xor
mov
xor
shl
dec
popa
add
jle
pop
sti
fcoms
and
lret
xor
pop
cltd
clc
push
lock
cmc
mov
sub
subb
fst
sub
sub
inc
pop
cli
ljmp
fadds
or
inc
xchg
inc
pop
lods
jle
sbb
xchg
pop
push
fsubrl
or
rorb
js
cmp
push
shll
popw
lret
adc
inc
inc
jne
sbb
jbe
std
loopne
fmuls
shll
sbb
cmpl
dec
sbb
test
add
aaa
insb
jns,pt
iret
imul
mov
js
mov
shll
pop
cs
enter
sub
clc
inc
ljmp
hlt
mov
scas
addl
jp
out
ret
mov
push
cltd
js
inc
sub
mov
stos
sub
xchg
iret
or
jne
xor
xor
sbb
lret
les
pop
jl
bound
out
push
jmp
inc
ret
lds
push
adc
jge
mov
stos
xor
mov
pusha
ficomps
mov
cs
comiss
repnz
cli
xchg
cmp
mov
arpl
scas
xor
push
lds
cwtl
jnp
popf
call
push
icebp
jnp
lret
into
into
int3
jg
aaa
lock
add
xor
xor
jle
cmp
cmc
xor
jecxz
dec
cld
rorb
es
lock
mov
mov
scas
jg
pop
ficoms
add
or
dec
inc
push
pop
dec
xchg
pop
adc
int
push
lds
daa
jns
dec
arpl
pop
loope
arpl
jmp
add
jns
xchg
pop
mov
out
sbb
test
addr16
jp
jnp
push
inc
lods
sti
jecxz
mov
cmp
mov
dec
out
lds
xor
js
scas
dec
fsts
inc
out
pop
and
jg
sub
xchg
sbb
dec
pushf
add
stos
popf
push
sub
dec
mov
pop
sub
cmpsl
mov
repz
rorl
pop
dec
test
std
lea
xchg
test
into
push
push
push
xchg
xchg
loope
ret
jecxz
jmp
and
adc
dec
xchg
add
push
sub
loopne
pop
dec
xchg
cltd
call
and
xchg
jmp
xlat
dec
jle
sahf
sub
mov
push
sti
mov
cli
xchg
inc
cmp
fwait
inc
data16
add
mov
push
inc
stos
xor
jl
push
repnz
scas
fstpl
pop
pushf
imul
aas
aad
xor
cld
dec
test
jo
xlat
mov
lock
mov
leave
inc
mov
adcb
test
loope
pop
idivl
sub
bound
xchg
mov
push
daa
sub
repz
or
adc
sahf
xchg
inc
insb
into
ljmp
imul
jnp
xor
andl
lret
jns
mov
loope
and
inc
add
repz
pop
adc
jbe
push
add
or
cli
xchg
arpl
mov
imul
test
loopne
xchg
leave
enter
jle
add
xor
sub
fcoms
loop
call
jge
in
inc
or
testb
xchg
dec
dec
inc
xlat
xor
push
mov
adc
push
xor
inc
xlat
stc
pop
sbb
leave
mov
mulb
and
imul
test
ljmp
ds
subb
fwait
push
popf
in
mov
pop
sub
cmp
test
test
int
mov
sbb
sbb
dec
dec
adc
jmp
aas
jb
push
cmp
cmpsb
scas
repnz
pop
cmp
inc
lret
mov
mov
push
mov
pop
push
divb
dec
pop
mov
not
ret
js
imul
jg
fsubl
test
icebp
inc
btc
push
loopne
jp
mov
mov
mov
push
mov
imul
clc
add
sbb
aas
leave
push
xchg
pusha
leave
push
in
or
xor
and
push
push
inc
gs
sub
add
lahf
popf
inc
int3
out
inc
lds
push
imul
xchg
int
jge
mov
mov
loop
cmovno
push
fmulp
mov
and
mov
cmp
call
into
cmpsb
cmp
mov
xchg
xor
adc
push
mov
les
mull
in
or
call
ljmp
sub
dec
sahf
outsl
jg
push
dec
sub
push
dec
addl
xor
sbb
jmp
in
sbb
test
inc
movb
lods
jnp
pop
icebp
cmp
imul
sbb
adc
add
push
test
sarb
imulb
jp
lods
leave
sub
xor
jp
push
jg
in
ja
inc
pop
sbb
mov
les
mov
push
mov
stc
mov
jmp
sahf
sub
jp
push
in
sbb
pusha
jl
adc
cli
cld
test
xor
in
ret
mov
in
inc
add
std
leave
push
xorl
xchg
xchg
sbb
movsb
repz
inc
pop
aad
stc
idivb
test
int3
icebp
divl
daa
decb
pop
fcmovbe
cmp
out
gs
jecxz
mov
lahf
leave
dec
xchg
cmc
sbb
lds
sbb
pop
inc
pop
jg
inc
xorl
mov
imul
push
lea
subl
rcrb
fidivl
std
sub
mov
dec
dec
push
in
push
mov
cmp
ja
xchg
xor
cvttps2pi
sbb
sbb
mov
cmpsl
mov
leave
pop
andb
mov
dec
jne
lret
adc
push
cmc
outsl
in
in
call
outsb
fldl2t
pop
add
or
xchg
mov
into
pushf
adc
lods
pusha
sbb
int
icebp
fistps
and
mov
mov
addr16
dec
xor
sbb
inc
jmp
push
and
addr16
mov
orl
pop
sbbb
ret
lock
mov
test
dec
and
shrb
push
push
pop
cmp
jmp
loope
pop
xlat
fcomps
adc
dec
lret
dec
rcl
test
sub
push
and
inc
das
stos
add
popf
pushf
xor
cwtl
pusha
sub
pop
ss
add
cmc
sbb
cwtl
stos
jae
lahf
mov
shlb
cmp
xchg
ss
ret
addr16
or
rcrb
dec
gs
repz
ret
aad
xchg
mov
push
mov
push
sbb
dec
pop
stc
in
mulb
fstpt
jns
test
push
inc
idiv
iret
repz
in
jnp
cmpsl
cmpl
mov
push
mov
add
mov
inc
fadds
cwtl
dec
cmpb
scas
mov
fadd
sub
mov
pushf
in
inc
inc
sub
test
and
sarb
int
jb
fsubp
sbb
enter
mov
add
stos
stc
mov
push
add
cltd
negb
pop
popa
fs
sahf
fcomps
add
adc
mov
adcb
in
dec
into
cmp
mov
pop
or
les
xchg
mov
adc
and
cltd
les
mov
mov
xchg
pop
pushl
mov
jns
orb
sbb
enter
imul
movsb
ljmp
inc
adc
or
loope
jo
cmp
fs
pop
in
rorl
subb
fimull
jbe
shl
ljmp
xlat
cwtl
xchg
cmp
jge
push
jecxz
push
js
jne
sti
mov
ds
jecxz
fisttpll
mov
shlb
in
sub
test
or
or
pop
push
je
out
sbb
test
cmp
loope
insb
testl
and
jnp
out
mov
mov
cmp
ljmp
mov
icebp
or
test
inc
stc
repz
dec
fcmovnbe
mov
sub
lds
inc
pop
leave
xchg
in
in
insb
adc
jb
mov
repz
sbb
js
and
fadds
push
push
sarl
push
pop
dec
ss
adc
mov
in
insb
jne
in
in
mov
rcrl
cmp
mov
and
xchg
cmp
je
pop
popf
mov
push
push
pop
lcall
push
push
es
lret
je
xchg
jo
data16
ret
rcll
push
bound
cli
ret
int3
mov
mov
mov
xchg
fsubl
cmp
xchg
fcompl
loop
inc
sub
jp
std
fisttpl
popa
movsl
out
aas
adc
mov
adc
sbb
cwtl
cmp
cmc
push
jns
inc
mov
lods
sarb
inc
push
addr16
ret
imul
xchg
push
int3
inc
negb
lret
mov
call
imul
inc
bound
test
xchg
lret
das
shlb
jne
lock
mov
cmp
out
addr16
mov
in
cli
movsl
xlat
sbb
jge
std
and
mov
das
mov
rolb
sub
fistl
or
jb
inc
sbb
pop
pop
push
pop
add
inc
ljmp
fisubrs
jbe
pop
repnz
cmp
ja
call
mov
outsl
imul
pop
cmc
pop
insl
lret
scas
xor
ljmp
pop
in
xor
cmp
mov
bound
nop
xchg
ljmp
fisttpll
xor
inc
sub
mov
jno
push
and
and
or
fsubr
xchg
stos
jns
std
sub
shl
leave
add
insb
xor
call
js
int3
xor
pusha
fcmovnbe
and
inc
repz
dec
xrelease
cmc
mov
addr16
jle
loope
xor
loop
mov
xor
dec
inc
in
ret
das
mov
dec
outsl
sbb
outsb
lds
bnd
cwtl
in
movl
nop
push
jg
push
sub
xchg
jp
dec
xchg
xchg
xchg
sub
loop
movsl
imul
pop
xchg
push
bnd
pop
movsb
mov
mov
in
dec
lock
fldt
lret
fsubr
inc
cmp
movsb
cmp
inc
out
cltd
xchg
sbb
inc
jbe
pop
sub
sub
mov
jbe
adc
mov
pop
scas
xchg
iret
dec
pop
mov
rorb
stos
popf
test
sbb
mov
int3
pop
sbb
call
add
cmp
push
cmpsb
jno
xchg
lds
sbb
sbb
shl
inc
mov
imul
lock
sti
jecxz
cmp
add
cs
mov
in
test
int
jge
inc
adc
stos
int3
int3
cli
ja
push
sbb
jnp
add
cmp
sub
ret
xor
push
xlat
jl
das
push
cli
pushf
inc
rcr
negb
xchg
adc
negb
movsb
pop
outsb
imul
xor
push
cmc
add
imul
mov
enter
or
and
pop
test
int3
add
cmpsl
sbb
mov
adc
push
pop
cmp
mov
sub
js
idivb
jo
shlb
pop
call
xorb
arpl
pop
jg
cmp
mov
out
mov
adc
arpl
pop
mov
xor
sub
pop
mov
aad
mov
pop
or
mov
data16
out
aam
push
mov
popa
mov
arpl
std
xchg
hlt
inc
inc
repz
out
int3
test
mov
dec
pop
jns
adc
mov
and
adc
pop
dec
out
fcoml
pop
and
sbb
outsb
push
xchg
cltd
and
stos
dec
in
push
scas
or
or
jo
fmull
cmp
mov
fdivrs
loopne
mov
movsl
imul
ss
cli
dec
xchg
xchg
stos
pop
sbb
int
push
cmp
sub
xlat
repnz
das
ja
sbb
sbb
loope
dec
popl
lods
scas
fyl2x
mov
ja
mov
xchg
jnp
dec
hlt
sub
test
mov
push
jp
add
xor
shlb
push
pop
fidivrs
lcall
xchg
xor
sahf
vunpcklps
daa
mov
mov
push
or
stc
loope
pop
stc
bound
jnp
mov
inc
stos
sub
not
out
mov
in
jg
mov
xor
test
jne
inc
enter
outsb
jae
dec
ret
cmpsb
fidivrl
mov
and
xor
mov
mov
lret
popa
jno
pop
or
add
sub
cld
mov
and
mov
or
scas
add
cltd
adc
popa
mov
mov
lock
les
or
dec
daa
xchg
sub
pop
push
dec
sub
mov
or
sub
loopne
inc
xlat
arpl
fucom
adc
jl
sub
mov
mov
pushf
add
jp
scas
and
fiadds
or
add
xchg
stos
xor
test
add
jmp
rclb
inc
imul
push
and
inc
mov
ss
adc
push
lds
mov
das
xchg
clc
jns
push
xor
adc
sbb
mov
xchg
xchg
push
jns
insl
mov
cmpsl
rcrl
lahf
jne
adc
fistps
scas
and
lahf
mov
imul
mov
push
mov
mov
fwait
mov
jns
add
bound
pop
sub
aas
loop
movsl
cmp
xchg
and
pop
inc
shll
pushf
xor
cmp
cmp
test
cs
test
jle
adc
testb
testl
xchg
push
or
xchg
mov
lret
adc
cmp
push
setg
or
add
push
mov
cwtl
mov
fistps
dec
mov
dec
mov
xchg
and
sub
sbb
pop
add
and
and
iret
das
push
push
add
movsb
push
into
mov
sbb
jnp
jb
and
loopne
adc
dec
cld
and
bound
push
xor
dec
lret
pop
xlat
rclb
push
or
movsl
std
jae
mov
mov
dec
inc
push
cmp
stc
mov
pop
shrl
stos
test
repz
xchg
dec
push
pop
hlt
sarl
mov
jae
leave
jns
sahf
xchg
jae
pop
xor
icebp
jl
add
or
push
mov
mov
inc
addr16
aam
es
jne
pusha
shlb
push
or
sub
out
jae
loopne
fimull
imul
test
push
sbb
cmc
mov
cmp
adc
fimull
mov
out
cmp
mov
neg
xchg
out
mov
mov
adc
pop
add
push
mov
xor
test
fmuls
pop
andb
adc
std
add
divb
mov
daa
inc
push
pop
cmpsb
test
sarl
sub
inc
mov
xor
pop
aaa
xchg
pop
push
cmpsb
bound
out
cmpsl
pop
add
loopne
imul
out
dec
add
adc
jmp
sahf
jno
xlat
jge
mov
push
lret
jne
daa
cmc
sub
jecxz
inc
rorl
push
test
mov
mov
pop
inc
ja
or
es
hlt
mov
in
and
stos
rclb
jp
inc
cmp
sbbl
jne
cmp
lds
xchg
mov
fsts
mov
cmpsb
push
pushl
cmpsb
cmp
repz
dec
call
push
mov
sar
adc
std
fcmovb
mov
or
lcall
in
in
pop
fildl
push
lahf
push
adc
cmp
inc
jmp
sub
hlt
test
adc
push
mov
sbb
lods
xor
sbb
cmp
cmp
xchg
dec
adc
iret
into
and
push
popa
test
jp
xchg
cmc
out
adc
mov
add
pushf
loop
push
fwait
dec
cli
jg
cmp
push
lock
xlat
mov
out
lea
adc
loopne
ret
loop
adc
in
dec
adcl
xor
mov
mov
jge
jmp
out
das
or
inc
jge
cmp
clc
xchg
arpl
data16
nop
push
cmpb
jno
sub
mov
inc
out
sbb
pushaw
push
call
xor
nop
in
test
ret
fsubrp
xor
nop
hlt
repnz
xor
repz
je
aad
lret
mov
jl
dec
pushl
sti
popf
lret
dec
xor
lahf
jns
pop
mov
data16
int
int
mov
dec
mov
call
jbe
pop
inc
idivb
shr
and
imul
movb
pop
movsb
or
jbe
pop
outsl
add
pushf
sbb
sub
sbbl
xchg
and
movsb
cmpsb
into
adc
cltd
daa
out
push
daa
repz
subb
movsb
fs
imulb
lods
push
sbb
sahf
adc
xchg
cmpsl
lcall
xchg
push
ds
int3
jbe
scas
sarb
or
fsubl
jecxz
mov
hlt
mov
hlt
sub
cmp
subb
adc
add
rcll
test
sbb
call
js
pop
inc
mov
aaa
add
sub
dec
adc
add
jnp
das
out
mov
fucomip
sub
cld
add
popa
xor
lahf
lcall
das
pop
negb
xorb
inc
fstps
jno
jle
push
xor
sub
mov
push
sub
mov
pop
mov
mov
mov
pop
stc
iret
jmp
xor
dec
cs
jb
int
pop
cmp
add
sbb
pop
dec
adc
int3
fnstcw
pop
aas
mov
cmpsb
jnp
cmp
int3
adc
mov
into
dec
imul
mov
arpl
andb
cwtl
sahf
hlt
cmpsl
sti
inc
aaa
call
dec
shll
aad
loope
xchg
push
loope
adcl
xor
daa
orb
or
push
mov
mov
and
lret
testl
push
aaa
flds
imul
xlat
push
push
adc
ljmp
and
mov
and
lods
imul
outsb
lods
or
cld
sbb
jno
pusha
mov
or
rcr
mov
mov
int3
pop
lock
iret
cltd
cwtl
pop
sbb
inc
mov
xor
jbe
cli
outsb
repnz
xchg
movsl
faddp
push
pop
push
and
int
dec
out
cmp
jno
dec
data16
cmpsb
xchg
xor
inc
fisubl
scas
sbb
inc
or
add
les
aaa
cmpsb
push
cwtl
aas
push
pop
rclb
or
repnz
pop
and
outsb
xor
stos
sbb
notl
insb
out
cmp
and
scas
mov
mov
loopne
ret
icebp
or
adc
mov
xchg
pop
jmp
dec
add
push
in
insl
pop
loope
pusha
mov
stos
aad
xchg
stc
mov
and
dec
pop
sbb
push
aas
ffree
sti
out
jb
pop
xor
imul
pop
orl
aam
jb
or
shlb
xor
cltd
lret
jle
push
sub
movsb
cmp
int
xchg
es
cmpsl
cmpsb
pop
mov
inc
xor
hlt
loop
popa
dec
mov
add
stos
insb
fwait
jl
lahf
mov
imul
int
into
push
sbb
push
in
jo
dec
pushl
pop
ss
std
inc
rcrb
mov
ficoms
js
sahf
pop
loop
movsb
ror
add
and
push
les
jne
pop
sbb
add
pop
outsl
push
add
mov
or
into
fildll
sub
scas
fwait
cli
test
shlb
lock
mov
sbb
cld
ret
outsl
imul
lret
jmp
xchg
adc
in
dec
jb
and
and
xorl
xor
add
cmp
add
or
enter
pop
rolb
inc
xchg
stos
les
test
pop
or
xchg
dec
jle
lret
dec
stc
js
add
xchg
mov
xchg
repz
push
dec
push
stos
xor
adc
lea
jecxz
cmp
out
xchg
pushf
pop
les
mov
ds
jbe
jbe
shlb
outsb
sub
mov
pop
xchg
dec
sub
in
adc
dec
push
sub
dec
fdivrl
cmp
jecxz
int3
ljmp
shrl
cmp
ja
inc
loop
movsl
pop
xchg
xchg
dec
mov
out
mov
pop
orl
xchg
mov
sarb
iret
pop
mov
mov
or
lcall
cltd
dec
jns
enter
sub
in
cmp
inc
xor
cmc
je
daa
cltd
or
pop
xchg
imul
xor
and
cmp
shlb
inc
rcll
xchg
hlt
cmp
jecxz
into
push
sar
sub
pop
add
sbb
les
lea
pop
lock
dec
xchg
add
push
mov
dec
push
mov
cmp
ja
out
lock
mov
push
mov
and
sub
add
insb
arpl
mov
rclb
push
mov
dec
icebp
ret
dec
jbe
cltd
and
sub
xchg
cltd
cmp
sti
lods
jnp
and
jp
pop
and
loop
andl
cmp
daa
faddl
popf
or
sbb
jp
jmp
pop
pop
pop
fcmovnb
enter
sub
push
in
push
xor
dec
or
ja
outsb
sbb
je
je
or
fcompl
xor
int
and
ds
repnz
mov
mull
sub
sub
add
ja
push
addr16
insl
add
xor
fisttps
xor
je
cwtl
adcl
jae
cmp
dec
test
imul
sti
decb
jne
in
icebp
dec
int3
inc
or
push
mov
std
and
pop
push
jecxz
jo
dec
in
lret
dec
push
ficompl
mov
inc
test
mov
pop
addb
sub
insl
stos
pop
fsubs
das
add
lea
shl
rclb
inc
mov
addr16
loopne
repz
test
hlt
push
sahf
sub
xor
push
dec
sub
jnp
mov
sub
adc
dec
test
addb
outsl
inc
sbb
cmp
dec
inc
dec
mov
or
popa
mov
scas
fisttpll
aad
mov
jo
ss
push
mov
add
ja
pop
inc
xor
sbb
dec
push
mov
cltd
mov
out
into
mov
into
lret
cmpl
or
mov
inc
inc
clc
cwtl
and
mov
pop
and
push
dec
rcll
nop
xor
fwait
call
inc
pushf
mov
mov
js
test
les
add
adc
jmp
xchg
imul
aad
mov
adc
xor
ret
insl
pop
aas
sbb
loop
jle
insl
mov
repnz
sub
test
daa
inc
and
aam
xor
mov
mov
or
cmp
outsl
inc
lret
addr16
or
mov
sar
loopne
and
xchg
roll
push
pop
movsl
jle
rorb
mov
incb
push
or
sbb
mov
es
sbb
mov
jle
pop
jns
in
sahf
pop
sub
ljmp
int3
mov
outsb
orl
rcrb
and
lahf
and
aaa
adc
jmp
xchg
outsb
mov
in
fdivs
cmpsb
pop
icebp
aam
xor
add
sub
ja
adcl
or
inc
lret
dec
addl
add
add
stos
xchg
xor
mov
pushf
test
testl
jl
gs
xor
pop
cmpsb
xchg
mov
insb
clc
mull
push
outsb
sbb
daa
gs
mov
pop
add
mov
sarl
or
lcall
test
jp
lcall
testb
mov
adc
aas
dec
fcompl
roll
xchg
lcall
and
jp
push
imul
nop
or
ljmp
adc
imul
jae
push
mov
cmp
cmpsl
xchg
or
icebp
mov
es
pop
sbb
jbe
outsb
xchg
mov
pop
aad
in
lea
sbb
inc
leave
ret
lock
mov
cmp
dec
sbb
lcall
mov
cli
pop
push
mov
xor
push
pushf
jle
jbe
in
in
push
push
mov
test
fwait
cltd
mov
pusha
dec
in
mov
mov
mov
popa
ret
xchg
xor
movsb
push
stos
imul
imul
pop
sub
movsl
in
pushf
aas
lahf
push
into
sub
xchg
fs
adc
jo
lds
pusha
adc
sub
xchg
adc
gs
mov
divps
mov
push
leave
stc
out
dec
jp
int3
iret
fcoms
lret
std
mov
or
test
shrb
mov
aam
movsb
pop
cld
cmp
je
outsb
sub
pop
mov
sub
pop
cmpsb
mov
adc
xchg
mov
mov
push
mov
sbb
aad
sbb
popa
jge
ljmp
jg
movsb
inc
add
and
out
cmp
jg
mov
cmp
loope
adc
mov
dec
rcll
sub
mov
cmp
dec
jmp
adc
cli
ret
add
fwait
inc
cmpb
dec
jmp
push
ftst
xorl
ficoms
aam
test
jne
outsl
mov
push
hlt
cmp
das
sbb
xor
loope
sub
sbb
rcll
lahf
test
and
jmp
lahf
insl
std
add
call
lret
scas
lds
jle
and
lods
lahf
add
sahf
or
xchg
lret
test
inc
scas
stos
mov
movsl
stos
gs
add
fstps
xchg
mov
push
mov
lahf
jno
je
inc
scas
and
scas
movsl
fsubrl
mov
jne
push
insl
adc
sarl
sub
lds
cmc
addr16
loopne
push
sub
js
in
or
pop
mov
xchg
jb
pop
fmull
ss
mov
dec
out
mov
xchg
scas
mov
icebp
dec
mov
sbb
xlat
stc
lret
push
popf
ret
pop
ljmp
lods
ja
push
sbb
movb
enter
iret
jb
fwait
xchg
xchg
lods
fisubrs
jno
push
mov
mov
inc
mov
repz
scas
xor
ret
jo
pop
or
pop
daa
inc
leave
cwtl
cmp
pop
push
inc
enter
imulb
mov
inc
xchg
cltd
adc
push
push
addb
push
out
dec
jmp
push
es
adc
cmpsb
xlat
stc
push
mov
insb
xor
inc
mov
jnp
sbb
test
push
out
inc
mov
pop
cmp
adc
and
mov
mov
xor
jge
push
cmp
ljmp
cmp
or
sbb
mov
pop
cli
outsl
pop
mov
testl
sbb
mull
lret
jnp
inc
push
in
mov
mov
or
push
or
jno
push
les
loope
push
mov
and
lods
enter
in
or
sub
aam
pop
sbb
shlb
jno
mov
jnp
cmpsb
xchg
sbb
add
sbb
sub
mov
xchg
dec
and
xchg
incb
mov
test
rclb
pop
jnp
inc
adc
jnp
ds
pop
inc
insl
adc
fsave
stos
mov
xchg
mov
sub
in
mov
push
aaa
and
add
lret
cmp
adc
hlt
sub
in
adc
mov
ljmp
pusha
hlt
int
adc
ja
push
cld
aam
out
lret
aaa
rcll
hlt
or
dec
scas
jae
or
push
cmp
xor
xor
or
and
sbb
lahf
das
addb
mov
xor
pop
mov
jbe
aad
roll
sbb
inc
into
sbb
leave
mov
adc
ss
mov
jno
lods
cli
je
or
xchg
xor
or
add
add
ss
out
insl
ret
out
pop
push
pop
rolb
cmpsl
cmp
dec
cmp
pop
xchg
push
outsl
leave
les
sub
or
adc
or
test
ror
cmp
mov
sbb
negl
mov
xchg
push
jbe
aad
arpl
popf
popa
adcb
xchg
pop
xchg
jge
sbbl
push
mov
gs
cltd
loop
dec
pop
and
mov
movsb
xlat
inc
jb
xchg
xor
cld
orl
jecxz
pop
xchg
movsb
xchg
clc
mov
hlt
push
fbstp
mov
adc
call
cmp
es
push
es
xor
mov
sub
movsl
mov
sbb
sbb
mov
xor
negb
hlt
push
and
dec
push
cmp
in
sub
mov
rolb
test
test
mov
sbb
pop
scas
xor
sbbl
daa
mov
aaa
mov
adc
je
inc
scas
out
inc
call
pop
imulb
add
push
push
xchg
sbb
mov
stos
test
xlat
push
cmp
jno
xlat
mov
jns
push
xchg
lea
div
pop
push
dec
les
mov
jg
or
mov
xchg
add
cs
adc
into
lds
rorl
push
iret
mov
push
xor
sbb
mov
fdivrl
cmp
cmpsb
and
sbb
fisttpll
or
in
out
cmp
xor
dec
pop
mov
xor
cmp
sub
lds
leave
data16
int
cltd
leave
std
pop
fldenv
cmpsb
hlt
arpl
cmpsb
inc
jl
stc
mov
test
call
and
mov
sub
push
xchg
in
mov
push
and
sub
jl
out
popa
mov
aas
add
mov
pop
stc
push
xchg
mov
popf
scas
les
outsb
xor
jecxz
outsl
push
cmpsl
fiadds
je
loop
cmp
push
jb
dec
jno
pop
ljmp
test
sar
stos
add
cltd
ficoml
cmp
call
lock
lock
loopne
push
or
out
xchg
pop
push
mov
xchg
mulb
xchg
fdiv
popa
pop
cld
xchg
loopne
call
icebp
loopne
rcll
jne
xor
cmp
push
test
shll
addl
sub
mov
pop
sbb
ret
iret
or
lcall
roll
mov
js
jp
ret
fucomi
stos
gs
jl
and
inc
nop
cmp
gs
inc
daa
ds
ljmp
mov
add
movsb
jmp
daa
jl
imul
xchg
negl
fcmovu
pop
push
ja
sbb
jg
loope
sbb
lahf
movsb
mov
xchg
mov
fdiv
and
sar
flds
test
pop
and
and
aaa
inc
cmp
cli
pop
mov
loopne
fdivs
mov
sub
mov
mov
sbbb
rorb
lcall
cmp
mov
xor
dec
mov
pop
scas
dec
cmp
mov
imul
add
pop
or
mov
out
nop
cltd
in
test
push
loopne
movsb
fs
add
scas
push
mov
mov
adc
ficoml
jp
or
or
cwtl
mov
mov
imulb
cmpsb
js
or
mov
icebp
inc
sub
fwait
and
xchg
jge
mov
cmp
xchg
stos
sbb
cli
in
inc
iret
fdivl
in
adc
push
imulb
xor
jle
repnz
push
xor
hlt
mov
mov
clc
mov
ror
add
inc
ffree
das
les
clc
xor
xor
mov
cmp
mov
movsb
sbb
imul
and
scas
jmp
jp
jae
scas
cmp
and
mov
or
imul
mull
sub
dec
push
xchg
sbb
pop
push
shrb
or
adc
rcll
dec
sbb
push
add
mov
mov
imul
add
in
icebp
repz
mov
idivl
adc
jg
data16
xchg
nop
or
das
addr16
bound
sub
pop
cmp
test
mov
adc
rorl
xchg
or
pop
in
stos
lret
pusha
fwait
pop
fwait
pop
push
cmp
lcall
in
fstp
addr16
xor
sarl
scas
inc
shll
dec
lods
pop
sub
xchg
lret
xlat
stos
nop
stos
loopne
cli
into
xchg
jmp
sub
les
pop
sbb
notb
and
mov
lds
jno
add
hlt
dec
push
shlb
push
sub
shlb
mov
les
jbe
xchg
cmp
add
mov
hlt
pop
cmp
fs
icebp
add
popa
lcall
outsl
dec
xor
sub
cltd
outsb
xchg
in
xor
cmpl
cmp
xlat
movsl
out
rolb
stos
std
je
and
mov
sub
or
xchg
aad
outsb
or
ret
mov
movsb
mov
test
loop
mov
loopne
clc
daa
sti
icebp
jae
lods
dec
movsb
clc
and
dec
test
les
aaa
lods
idivl
push
adc
testb
lcall
jo
push
bound
jg
push
push
xor
xor
pop
pop
mov
sub
mov
sub
jmp
or
aam
jno
pop
popa
mov
adc
cmp
cld
adc
cmp
push
into
popf
test
pminsw
int
inc
repz
dec
sbbb
xchg
add
popa
scas
cmpsl
add
fnstsw
inc
in
xor
push
add
out
adc
xor
pop
jmp
add
jp
ljmp
scas
add
aad
movsl
sub
inc
out
test
push
and
mov
scas
pop
mov
repz
cld
pop
in
add
xor
mov
inc
jl
mov
dec
mov
push
xchg
and
push
mov
inc
inc
ret
sub
ret
sbb
adc
adc
inc
js
loope
in
cs
daa
scas
jge
xchg
jbe
bound
xchg
addl
into
mov
incb
jo
shrb
data16
cmp
ftst
aam
xor
dec
lock
or
and
out
test
jecxz
daa
mov
add
xchg
inc
xor
xor
imul
xchg
or
cltd
jecxz
mov
sbb
inc
sahf
lret
lret
pop
loopne
sub
cmpsb
sbb
cmp
mov
xchg
xchg
fcmove
inc
fsubrl
aaa
out
addr16
shrl
mov
pop
lods
xchg
scas
ret
dec
fst
add
rolb
andb
roll
mov
jmp
jecxz
out
in
in
jecxz
push
mov
pop
mov
mov
stos
jo
mov
cmp
mov
fbld
ret
inc
cmp
pop
hlt
sbb
in
xchg
inc
push
nop
xchg
bound
ss
jg
stos
pop
fistl
call
dec
into
lods
gs
inc
in
push
aaa
std
fcmovnbe
dec
dec
daa
cmp
and
cmc
dec
jnp
mov
and
cs
dec
stos
test
imul
mov
ljmp
shrb
xor
loop
into
dec
dec
iret
pop
cmp
cli
add
xchg
mov
dec
mov
jge
scas
rcrl
leave
jo
inc
clc
daa
call
faddl
out
dec
or
fiaddl
mov
in
out
sub
pop
ret
jo
jp
or
jecxz
pop
shl
jo
dec
pop
mov
dec
jmp
fidivl
aaa
push
mov
lahf
push
and
js
call
xor
add
loopne
lahf
loopne
xor
mov
fiadds
mov
mov
orb
fdivrl
sbb
pop
jns
or
adc
nop
xor
out
xor
sub
lcall
mov
loope
mov
jns
std
xchg
cld
xor
xor
test
pop
in
cmpsb
aaa
xor
cli
test
ret
or
push
adc
sub
xchg
mov
cld
sbb
or
pop
test
inc
jecxz
rorb
and
sbb
xchg
pusha
sahf
ror
jmp
sti
xor
dec
test
cmp
test
push
xor
sub
test
cmpsl
test
not
scas
arpl
jnp
inc
js
scas
mov
jbe
push
rclb
cmp
das
test
orb
inc
fmull
adc
mov
add
mov
dec
push
test
ficoml
push
adc
andl
cmpsb
xor
jno
sarb
sbbb
pop
pop
or
push
fadd
mov
out
ficoml
pop
adc
into
fists
dec
or
sbb
mov
scas
in
inc
sbb
mov
mov
cs
adc
in
push
pop
sahf
jecxz
jecxz
push
test
adc
sahf
repz
mov
mov
mov
mov
fisubrs
sbb
dec
inc
or
jle
sub
mov
iret
jae
fdivr
xchg
push
inc
mov
lods
add
push
jne
ficomps
mov
fiadds
in
cmp
jo
jbe
outsl
out
adc
mov
cmp
jns
paddusb
mov
icebp
push
pusha
imul
lock
mov
pop
arpl
cli
push
ret
repz
dec
or
arpl
lea
add
es
add
jge
push
ret
sti
mov
mov
dec
jge
inc
bound
repz
inc
mov
and
aaa
xchg
add
mov
xchg
test
xchg
imul
push
cmpsl
sub
cmpsb
jno
jnp
aad
faddl
bound
repnz
add
inc
add
xor
js
mov
pop
rorb
xor
je
scas
inc
inc
cld
sub
jp
repz
or
push
fistpll
or
xchg
nop
cli
fcoml
dec
and
insb
in
push
cltd
or
jns
idivb
scas
jle
dec
mov
cmp
lock
push
cli
xor
dec
jmp
add
dec
mov
cmp
int3
mov
jl
or
mov
cmpsb
mov
shlb
cmp
mov
xchg
jne
dec
mov
orl
test
decl
mov
ljmp
sbb
movsl
ja
fxam
adc
push
outsb
mov
imull
test
pop
not
mov
in
sets
xchg
repnz
nop
insl
mov
aam
imul
xchg
pusha
insl
xlat
mov
testb
call
jns
out
xor
ret
push
inc
test
test
pop
pop
aaa
xchg
push
roll
das
mov
dec
cmpsb
and
xchg
imul
icebp
mov
cli
cmp
mov
or
or
dec
cmp
loop
and
fs
push
repnz
mov
sahf
mov
or
scas
in
add
add
inc
std
fildll
jae
shr
sub
fcom
jge
out
pop
push
pop
adc
mov
lea
add
add
fxch
test
lret
fsub
sub
lahf
pop
aaa
addr16
dec
and
xchg
divl
mov
sbb
lods
sbb
ja
add
data16
gs
or
std
mov
es
fldcw
mov
pop
push
sbb
and
inc
in
jle
mov
xor
shrb
lcall
aad
push
popa
or
dec
lock
loope
xor
insb
popf
mov
in
fisubs
xor
repnz
ss
adc
adc
pop
lahf
cmpsb
or
ret
jl
adc
ret
mov
inc
push
jno
xchg
push
arpl
mov
std
jns
inc
pusha
fisubl
cwtl
xor
mov
push
shlb
ret
dec
push
fiadds
stc
mov
aaa
rcrl
insb
shrl
push
mov
stc
rcl
in
mov
pop
arpl
imul
test
cwtl
pop
sub
xor
xor
pusha
sub
xchg
dec
mov
test
inc
cmpsb
inc
popa
daa
pop
cmp
arpl
jl
movsb
icebp
ss
adc
shll
mov
out
ja
mov
in
push
push
lret
jmp
xor
and
aad
add
mov
inc
sbb
aas
ret
and
in
jb
enter
cmp
rcrl
push
cmp
mov
pop
lret
dec
addb
dec
mov
aam
movsb
arpl
into
pop
inc
mov
cmp
mov
lods
push
out
cmc
xchg
pusha
test
test
xor
mov
test
subb
pop
adc
add
out
aam
imul
xchg
jg
je
fwait
movsb
stos
bound
fdivrp
arpl
movsl
hlt
dec
test
inc
int3
ja
dec
and
pop
arpl
mov
scas
ljmp
repz
mov
cwtl
mov
sahf
fdivrs
jbe
into
xchg
sub
pop
xchg
lahf
gs
push
sbb
xchg
out
inc
loope
or
inc
push
les
je
mov
mov
xlat
pop
aam
das
lea
dec
jb
push
insl
sub
aaa
cli
sbb
add
imul
pop
push
out
jae
stc
add
inc
jmp
mov
dec
cmp
jbe
enter
xor
lock
sbb
int3
mov
pop
fdivrp
iret
mov
push
lock
pop
and
pop
pop
add
mov
jmp
cld
jle
pushf
sbb
mov
aas
mov
sahf
jecxz
mov
push
subl
cmp
push
es
int3
jbe
cmp
notl
jp
fcmovb
add
cmp
jmp
daa
enter
mov
daa
ss
xor
mov
sbb
scas
add
leave
lock
lcall
and
mov
in
fldl
imul
leave
push
stos
jg
in
adc
gs
mov
and
jne
das
sub
mov
mov
dec
sbb
lahf
mov
daa
mov
mov
out
mov
lea
dec
ljmp
dec
in
sub
xor
xor
mov
in
fs
popf
and
pop
push
sbb
ficomps
xchg
push
sub
xor
mov
mov
das
jp
jbe
loopne
call
in
ja
and
xchg
ss
js
add
out
push
js
cmpl
test
cmp
lret
cs
sahf
cltd
and
xor
not
mov
xor
xor
lods
jl
jo
xchg
lret
mov
fidivs
sahf
adc
ds
pop
mov
stos
jae
repz
add
movsl
faddp
mov
pop
cmp
aad
xor
stos
imul
inc
cmp
xchg
or
dec
bound
or
gs
call
inc
repz
inc
pop
shl
inc
push
and
hlt
imul
or
lods
push
xchg
mov
repnz
add
add
cld
out
mov
shlb
mov
into
xorl
sub
cmc
cwtd
cmp
movl
mov
mov
push
rclb
ds
enter
cmp
mov
int
sub
xchg
add
repnz
pop
outsl
in
dec
clc
repz
push
repnz
decb
push
repnz
jle
aad
adc
add
jmp
fildl
hlt
cmp
lods
fiadds
movsl
adc
adc
xor
js
mov
mov
test
jmp
addr16
or
pushf
enter
jo
mov
fidivl
cltd
cmp
sbb
sbb
pop
inc
js
jnp
add
aam
imul
mov
js
test
aas
test
ds
push
dec
pop
jg
pop
dec
mov
arpl
daa
xor
popf
and
pop
mov
mov
test
lret
insl
mov
mov
incl
bound
addr16
xor
fwait
insb
dec
xchg
sti
pop
cltd
test
cwtl
mov
xchg
pop
cmc
xchg
inc
mov
aam
mov
ja
pop
cmp
imul
jnp
cmp
in
loopne
inc
pop
jo
stos
jae
or
stos
xchg
push
in
rol
mov
sbb
loop
push
cmc
fwait
mov
fnstsw
and
push
sub
push
xor
lahf
scas
repz
int3
push
enter
adc
xchg
add
ror
js
inc
out
imul
add
mov
or
cmpsl
jnp
rol
add
leave
mov
pop
mov
push
fisubs
pop
jbe
xchg
fsubrs
std
lea
or
push
es
fs
cwtl
imul
repnz
xchg
fdivs
repz
mov
aas
cmp
sbb
in
imul
mov
dec
sub
leave
pop
pushf
div
lcall
sbb
idivb
push
incl
movsl
jg
adc
mov
fdivl
scas
shlb
cmc
outsl
ficompl
mov
mov
sahf
xor
mov
call
mov
out
movsl
and
insb
lods
adc
cld
inc
mov
xor
dec
jle
iret
std
int3
cmc
ja
test
cs
cmp
cs
cmp
mov
pop
mov
jmp
push
cmp
push
dec
xchg
xchg
stc
std
dec
shll
cmp
ds
mov
or
cld
out
xchg
mov
jns
dec
jae,pt
mov
push
push
js
mov
das
subl
mov
fstpl
mov
push
xchg
imul
lret
xchg
xchg
jmpw
addr16
jl
mov
mov
push
out
ja
aas
and
rorl
cld
xchg
mov
add
pop
std
lods
ja
aad
mov
adc
mov
les
movsl
lock
sbb
xchg
mov
int3
je
lahf
jb
add
mov
jnp
adc
cli
fucomip
or
inc
cld
into
clc
pusha
sub
roll
mul
insl
movsb
lret
mov
movsb
cmp
idivb
push
mov
ret
shlb
daa
ret
xchg
mov
ja
inc
xlat
scas
push
sbb
push
mov
cwtl
sbbb
jmp
lea
test
fistpll
push
fsubs
sbb
pop
leave
dec
sahf
jle
and
pop
in
fsubs
jmp
daa
mov
movsb
sbb
mov
and
repnz
pop
xor
or
xchg
out
movsb
aad
adc
or
imul
mov
stos
shl
pop
xor
scas
adc
aam
mov
out
insb
xor
push
adc
pop
sub
test
add
mov
jmp
outsl
dec
mov
cmp
push
ret
push
ss
pop
jle
out
fucomp
and
mov
das
pushf
xchg
pushf
mov
cwtl
sub
pop
sub
pushf
pop
fmuls
in
jl
jle
adc
push
out
inc
push
push
adc
jns
cmp
fcomip
jp
cwtl
cltd
dec
bound
test
ret
inc
shr
mov
cmpsb
lret
loopne
jnp
inc
in
fdiv
xchg
xchg
or
mov
hlt
xchg
nop
jecxz
or
xchg
ret
jbe
mov
call
iret
mov
loopne
sbb
cmpsb
ret
gs
out
dec
dec
xor
xlat
pop
sti
in
rclb
pop
xor
rcl
lods
ficomps
mov
loop
pop
xchg
push
mov
mov
xchg
mov
lock
int3
pop
insl
or
and
mov
cmc
adcl
mov
sbb
lea
mov
jge
mov
imul
mov
cmp
inc
clc
cld
add
sbb
xchg
adc
pop
mov
sub
mov
push
jne
xchg
xor
cmp
sub
test
sub
cld
adc
cmp
add
inc
adc
inc
sbb
cmp
fisttps
stc
pop
cmpsl
int
push
sub
mov
xlat
in
aas
push
test
cmp
addr16
mov
or
popa
push
fldl
popf
imul
mov
pushf
shr
rorb
mov
aad
or
in
mov
add
inc
sub
ja
adc
mov
pop
jle
inc
mov
into
and
inc
cmp
cmp
push
popf
test
out
add
pop
mov
and
arpl
lods
shr
mov
push
pusha
add
loopne
dec
pop
inc
cwtl
xchg
push
xchg
mov
mov
pop
es
xor
jbe
lret
mov
jl
push
dec
jns
add
popa
pushf
or
pushf
scas
cmp
sar
or
loopne
push
mov
pop
sbb
dec
es
xchg
push
fs
mov
ja
and
xor
mov
shrb
test
or
mov
movsl
inc
mov
xchg
pop
data16
sbb
jg
mov
sub
fistps
pop
mov
mov
repz
nop
adc
rolb
push
adc
arpl
rorb
mov
cmp
xor
shlb
loop
adc
jle
pop
sub
jp
fldt
mov
bound
in
inc
mov
lret
gs
frstor
aaa
inc
sti
or
jnp
xchg
pop
mov
sti
dec
adc
xchg
mov
lds
xorl
dec
cmp
jmp
in
pushf
lret
in
aaa
rorl
in
ret
sbb
mov
stc
scas
pop
or
pop
cmc
fdivl
movsb
fsts
add
pop
pop
outsl
inc
fs
xlat
sbb
loope
aad
jae
add
icebp
mov
stos
mov
imul
pop
inc
loop
lret
test
mov
inc
jae
sti
mov
sahf
stos
je
jnp
push
inc
xchg
xor
rcll
in
sub
or
adcb
mov
mov
jns
inc
xlat
leave
dec
dec
daa
jl
mov
jle
outsb
movsl
imul
stos
push
or
and
mov
jne
std
or
mov
sub
pop
lock
stos
jne
addl
in
mov
out
mov
insb
das
jmp
sub
fwait
xor
pop
or
test
jmp
push
repnz
xchg
frstor
sbb
in
int
pop
mov
std
pop
dec
or
out
xor
dec
arpl
es
xchg
add
mov
addb
subl
pop
lret
das
lods
out
shl
push
daa
mov
sbb
sbb
cli
fisttps
es
sub
xchg
sub
jge
lock
popa
sub
push
sub
pushf
loope
lcall
inc
push
outsb
or
outsb
xchg
inc
pop
push
je
icebp
jb
and
xorl
xchg
sbb
sti
xor
xor
in
jle
xchg
inc
sarb
ret
into
arpl
ss
or
fmul
and
jb
push
dec
push
push
stc
xchg
lods
push
and
int3
mov
and
xor
aam
dec
dec
inc
or
xchg
jp
xchg
pop
dec
lock
dec
ret
mov
je
sahf
sub
xchg
shl
inc
lods
aaa
add
leave
dec
mov
aad
lret
cs
xchg
adc
inc
cmp
jo
sbb
sub
xchg
aad
add
cmc
cmp
push
inc
xchg
fcoml
mov
aam
out
lock
scas
icebp
adc
xchg
movsb
int3
in
xlat
sbb
push
or
pop
sbb
dec
and
cmc
sbb
jbe
test
or
aas
pop
lock
adc
in
rcl
xor
in
pop
adc
fstpt
scas
enter
add
sbb
ja
scas
leave
push
faddl
mov
mov
lea
mov
clc
cs
fidivrs
cmc
scas
int3
jbe
mov
sarl
adc
mov
out
mov
sbb
sbb
cmp
sub
and
imul
xor
decl
jle
or
xlat
test
jle
test
adc
push
mov
cmp
mov
mov
ss
es
mov
mov
test
xor
inc
repz
test
mov
icebp
jns
pop
pop
add
aad
int
adc
sbb
dec
push
dec
jmp
aam
dec
cld
or
push
cmc
dec
pop
push
mov
xor
movsl
mov
or
xchg
jg
data16
cmp
jo
push
adc
in
cmp
dec
movsb
add
xchg
adc
xchg
outsb
jmp
out
xchg
adc
and
dec
push
xchg
iret
adc
sub
mov
jmp
cld
lods
je
pop
lret
or
arpl
test
mov
ror
xchg
jne
push
scas
ja
subl
repz
nop
mov
out
orb
sbb
and
outsl
popa
data16
gs
addr16
out
xchg
push
pusha
mov
sub
fsubl
mov
ljmp
insl
cmpsb
or
loopne
mov
mov
out
jecxz
aaa
jno
xlat
scas
push
jne
loop
xor
fidivrl
push
pop
adcb
pop
shrb
inc
inc
std
adc
test
sub
ffreep
mov
pop
loop
and
add
ja
into
stos
inc
pop
addl
pop
int3
rcrl
jl
adcb
adc
arpl
je
leave
pop
outsl
cmp
in
sub
insb
popa
xchg
imul
push
lods
movsb
mov
xor
data16
stc
std
orb
mov
sub
cmc
push
jle
mov
aad
mov
xor
mov
gs
pop
incl
mov
imul
loope
mov
jle
filds
gs
hlt
cmp
sbb
sub
hlt
xchg
ss
ljmp
mov
pop
inc
insl
popf
pop
xchg
sbb
dec
loop
sbb
orl
xor
out
popf
push
enter
dec
lret
sbb
movsb
shlb
push
inc
std
jg
movsb
add
test
jmp
xchg
adc
in
repnz
cmc
daa
mov
pop
bound
pop
adc
dec
and
nop
mov
cli
xor
shlb
jae
jnp
stc
test
and
mov
out
push
mov
mov
inc
shll
mul
and
jb
push
mov
inc
scas
xchg
cmpsb
fistps
and
stos
mov
pop
lods
lods
insl
mov
sbb
sbb
xor
test
popf
loope
stos
jne
lcall
sub
cmp
je
cs
mov
push
add
into
mull
mov
repnz
mov
or
imul
daa
outsb
jmp
mov
inc
pop
xor
or
dec
lcall
mov
sbb
xor
adc
stos
sbb
add
push
cmp
xchg
cld
cmpsl
daa
rcr
pushf
clc
outsl
sub
mov
mov
or
mov
mov
mov
adc
aam
push
subb
inc
clc
ja
loop
sti
sbb
shr
aaa
mov
daa
cltd
fwait
pushf
jb
jno
mov
flds
xchg
bound
or
adc
adc
mov
pop
xchg
dec
sub
xchg
div
jge
mov
inc
mov
push
push
xchg
test
sbb
mov
inc
repz
mov
fimuls
and
dec
jmp
scas
xor
xor
lods
imul
push
jo
dec
pop
push
push
mov
bound
loope
std
adc
dec
inc
xchg
dec
adc
rorl
cmp
outsb
cwtl
into
movsl
xor
stc
sbb
int3
adc
xchg
sbb
movsl
push
aam
and
push
cmpsb
mov
pushf
adc
push
dec
stos
jo
lret
push
loopne
sahf
neg
sbb
jae
mov
jge
inc
inc
and
pop
insb
aas
in
xchg
xchg
hlt
jp
mov
pop
leave
push
clc
pop
push
jp
push
or
mov
enter
lea
adc
sub
or
dec
enter
cld
adc
cmp
psllq
push
lds
jl
sti
mov
add
bound
sub
aas
arpl
call
movsl
popf
jbe
push
ljmp
xorb
push
xlat
mov
mov
pushf
ds
sbb
mov
push
adcl
lcall
pusha
sub
in
pop
jb
std
outsl
icebp
lods
jmp
xor
pop
imul
mov
mov
mov
xchg
push
jecxz
jbe
ret
or
test
rorl
outsl
scas
cmpsb
call
je
mov
cld
cmpsb
dec
dec
dec
mov
cwtl
orb
cmpsl
adc
add
ja
mov
in
sub
cs
cmp
push
cld
jmp
mov
adc
jmp
ret
or
push
jecxz
inc
ljmp
add
mov
mov
ljmp
mov
dec
sbb
addb
scas
mov
and
ret
xchg
sbb
pop
adc
popf
lods
or
mov
mov
lods
ja
in
xlat
shlb
icebp
int3
sbb
xchg
jne
push
out
ss
push
js
shrb
gs
cmp
dec
sub
aam
in
or
enter
mov
pop
pop
notb
nop
movsl
cmp
bound
cmp
test
int3
sub
testb
and
lea
lds
jne
mov
cmp
das
jmp
push
ds
repnz
inc
test
imul
outsl
add
lahf
inc
sbb
test
imul
sbb
push
push
out
push
or
notl
outsl
xor
sbb
aad
mov
addr16
mov
push
add
cltd
push
push
pop
and
mov
cmp
cs
cmp
inc
mov
gs
jae
cmp
mov
push
and
xlat
jl
mov
sbbb
push
ljmp
jl
mov
or
add
cmpsl
and
xor
push
addb
push
cli
pusha
aad
mov
aas
push
push
sbb
ss
dec
xchg
pusha
pop
xor
xchg
inc
outsb
loope
push
cmpsl
mov
push
and
cmpsb
ficomps
and
sub
ja
sub
ljmp
lock
mov
lock
aaa
mov
push
ret
call
pop
loop
mov
adc
add
fdivl
enter
jle
xor
and
push
mov
jb
xchg
cmp
pop
imul
mov
inc
cmp
push
push
popa
push
in
into
adc
or
out
icebp
jl
mov
mov
cmp
sbb
xchg
lret
mov
lods
and
sbb
pop
bnd
das
sub
fincstp
ret
add
scas
pusha
sarl
movb
cwtl
dec
push
adc
pop
movsb
faddl
mov
jecxz
dec
mov
xor
jae
pop
int3
call
jmp
pop
clc
inc
loop
mov
stos
fdivs
iret
mov
popl
aas
leave
fsts
push
scas
jl
scas
insl
ds
jo
pop
roll
cmpsl
jmp
xor
push
mov
pop
sarl
aaa
jl
stc
fwait
into
dec
aaa
push
enter
sti
mov
fwait
nop
ret
pop
nop
lods
jmp
push
aam
mov
loop
jl
dec
test
lret
xchg
out
loope
and
fcoms
cmpsb
sub
je
add
adc
shlb
xchg
or
lds
lea
inc
mov
mov
xchg
lea
repz
icebp
mov
into
cmp
dec
and
and
addl
add
jecxz
xor
sbb
inc
fs
push
fimuls
je
push
mov
test
pop
test
and
xlat
and
subl
rcrl
or
das
imul
jmp
pop
xor
inc
int3
add
nop
sbb
jns
mov
imul
dec
mov
popf
fsubrl
or
outsb
ss
adc
lcall
inc
inc
lea
cmp
sub
ret
jmp
pop
cltd
lods
outsb
sub
sub
filds
push
fcom
loopne
mov
and
scas
cmpb
pop
adc
in
xor
ret
cld
lcall
add
or
inc
mov
pop
movsl
push
xchg
iret
dec
xchg
rorl
lea
xchg
fsub
mov
loopne
test
push
adc
hlt
loop
and
nop
dec
test
loope
es
push
adc
imul
cltd
mov
lret
popa
cli
fwait
mov
hlt
cmp
jl
mov
mov
les
inc
loop
sub
stos
jecxz
push
out
inc
js
add
movsb
sbb
outsb
mov
sbb
stos
outsl
pop
imul
in
mov
mov
cltd
cmpsb
mov
jno
mov
fs
mov
adc
or
orb
es
cmpsl
and
push
mov
out
jne
push
or
cmpsb
mov
stc
mov
cmp
push
pop
pop
sbb
adc
dec
cmp
sub
cltd
shl
sahf
fwait
pushl
pop
mov
xor
inc
sbb
xor
sbb
scas
pop
cmp
inc
nop
lret
pop
out
movl
lret
adc
cmp
in
fsts
subl
incl
xchg
outsl
js
data16
lds
popl
leave
pusha
adc
aam
lods
and
leave
xchg
push
and
scas
int3
psubb
inc
or
lods
cmp
inc
push
and
inc
and
outsb
xchg
cmp
fnclex
int
add
fs
xchg
imul
hlt
or
mov
cmp
sub
mov
jo
int
out
xor
push
punpckhbw
in
dec
js
sub
mov
mov
outsb
mov
jmp
cmp
je
pop
and
into
out
pop
inc
jne
mov
hlt
lock
pop
out
xor
cs
mov
jecxz
push
in
outsl
sbb
scas
insl
xchg
sub
adc
add
mov
mov
test
ljmp
cmp
cs
push
mov
inc
icebp
jge
das
lods
pop
je
sbb
bound
mov
xorb
xchg
repz
adc
andl
iret
insl
sub
inc
sbb
popa
sbb
lods
movsl
lods
sub
ljmp
sub
lods
fistpl
fsubrl
stos
fnstenv
jecxz
dec
ljmp
mov
repz
or
push
lahf
subl
pop
pushf
and
repz
cli
xchg
mov
movsb
mov
mov
sahf
outsl
cmp
outsl
cmpb
xchg
xlat
pop
int3
xor
mov
xor
xchg
sub
inc
out
jge
or
stos
vcvtsd2ss
adc
xchg
aaa
out
xchg
lcall
mov
repz
adc
cmpsb
out
ret
or
call
and
stos
mov
std
mov
pop
jmp
mov
inc
jcxz
push
das
movsl
sub
mov
and
mov
out
das
lea
lcall
mov
push
push
sub
cmpsl
hlt
sub
in
or
out
fwait
outsl
adc
pop
sbb
js
sbbb
pop
inc
sbb
jb
lret
movl
je
push
push
adcb
xchg
jle
outsb
dec
push
jp
push
cld
and
and
pop
or
loopne
pop
xchg
sub
sub
shrb
jge
cltd
cld
push
out
aas
push
test
outsl
leave
test
mov
in
fs
movsl
test
es
js
clc
int3
mov
jb
fistps
jno
call
mov
mov
and
in
rol
mov
nop
shlb
dec
jae
add
imul
push
in
mov
shl
jmp
mov
inc
stc
and
sub
add
mov
ret
lds
filds
shll
sub
cmc
icebp
xor
sahf
es
popa
inc
lods
xchg
inc
call
pushl
mov
fimull
outsb
and
xchg
cmc
xor
pop
push
dec
arpl
sbb
xchg
mov
xlat
daa
mov
iret
out
cwtl
repz
stos
pop
in
fwait
push
pop
pop
fiadds
jnp
cmpb
sarb
jo,pt
mov
repz
xor
pop
and
int3
sub
jecxz
mov
fistpll
or
pop
mov
and
fs
cld
mov
jl
jmp
mov
mov
test
stos
outsb
sahf
fistl
fwait
xor
aaa
xor
sbbb
cmp
xchg
mov
in
mov
or
mov
data16
fsubl
or
sub
mov
push
jne
lcall
push
dec
sbb
mov
lret
jmp
mov
and
imul
or
xchg
mov
sbb
enter
push
xor
scas
test
cmpsb
dec
ds
mov
adc
imull
testb
rclb
or
jo
imul
insb
stos
call
insb
sub
movsl
mov
mov
in
cli
lret
fbstp
in
stos
or
sbb
stos
ret
int
lret
mov
add
enter
fisubs
adc
mov
iret
jmp
and
or
xchg
movsb
stos
or
push
out
shr
in
out
fsubrs
and
mov
and
out
push
clc
sbb
sub
inc
push
loopne
mov
pop
loope
rolb
outsl
stc
int
int
mov
push
jp
in
jle
lea
dec
and
add
mov
pop
fstps
stos
sar
inc
rcr
outsb
popa
jns
or
fistps
xor
sub
xchg
inc
cwtl
sahf
nop
ss
loopne
cwtl
jae
cltd
ret
enter
mov
inc
adc
jge
pop
or
xchg
imul
jge
scas
dec
fimull
cmpsb
jmp
in
jbe
cltd
jno
mov
jns
rol
dec
xchg
sbb
mov
mov
pop
push
ret
out
dec
daa
pop
or
pusha
jl
inc
adc
cmc
dec
arpl
fdivs
mov
lahf
stos
loop
pusha
shll
mov
push
xchg
fnstcw
lods
inc
cmovbe
jp
sub
ret
ret
mov
movb
ret
daa
jns
pop
in
mov
test
xchg
jbe
icebp
in
imul
or
cmp
or
sub
fiaddl
cld
inc
xchg
lods
fxam
mov
inc
enter
lret
xor
incb
jg
sbbb
loop
inc
stos
push
movl
dec
mov
jle
and
inc
pop
mov
rcr
inc
fdivl
inc
mov
vpmacswd
iret
cmpb
pop
test
mov
and
xchg
imul
cwtl
push
sbb
mov
jno
in
pusha
in
or
sub
cmp
gs
rolb
or
jp
pop
xor
or
flds
jno
mov
lock
dec
sub
insb
mov
popf
pop
ret
mov
jbe
hlt
mov
cmp
gs
cmpsl
adc
loope
fidivs
jno
or
cmpb
aaa
or
ud0
sbb
loope
sub
dec
lea
pop
or
inc
int
pushf
out
sti
out
mov
cltd
roll
aas
pushf
push
sub
xor
mov
xchg
mov
ret
mov
mov
call
aas
fdivp
pop
popa
jns
jmp
clc
fsts
cmpsb
jge
out
outsb
sbb
jns
imull
in
xchg
das
cli
outsl
jge
js
movsb
shrb
jbe
je
loopne
cmp
sbbl
mov
and
mov
xorl
pop
mov
into
retw
or
xlat
inc
idiv
in
inc
ss
fldcw
dec
shlb
mov
jecxz
jno
push
sbb
icebp
and
add
jne
out
andl
mov
lcall
mov
mov
mov
pop
sahf
sbb
sub
or
loop
mov
rolb
dec
sbbl
shl
stos
or
enter
and
or
dec
fwait
mov
out
mov
gs
sbb
jno
scas
adc
push
push
movsl
or
test
jae
repnz
enter
stos
push
adc
xchg
or
dec
add
adc
test
daa
push
daa
test
xor
inc
fsubrl
and
lock
lods
xor
pop
cmpl
test
mov
and
rcr
sbb
cs
cmp
call
xchg
jne
cmc
and
cmpsb
inc
movsb
movsl
andl
cmpsb
push
cmp
mov
jmp
movsl
int3
xchg
xor
xor
jmp
sbb
add
out
stos
sbb
mov
popa
lret
test
add
xchg
mov
pop
push
inc
add
aaa
ret
icebp
pop
pop
sbb
sarb
inc
stos
mov
add
xchg
sub
out
push
movl
enter
cs
xchg
pop
cmp
dec
dec
inc
iret
jb
jbe
fisttpl
aaa
sahf
fscale
daa
int3
addr16
inc
xor
cmpsb
cmp
cmpsl
fdivrs
jnp
cmp
xchg
int
dec
fst
bound
mov
outsb
mov
pop
lock
push
cmp
adc
fdivrp
outsb
lahf
test
repnz
movsl
subl
dec
mov
cwtl
test
insl
sbbb
mov
cmp
jo
sti
and
mov
push
push
cmc
enter
iret
jg
inc
xlat
pop
jp
je
or
sahf
jno
dec
and
ret
push
stos
cmpsl
xor
js
cmp
pop
pop
sbb
cwtl
subb
cmp
mov
pop
lods
sahf
add
hlt
lds
push
and
lahf
cmpsb
add
mov
hlt
xor
sbb
xchg
and
into
push
int
lds
and
stos
std
push
jl
dec
cmpsl
sub
call
and
fists
ljmp
pushw
xor
cmp
mov
aas
dec
jb
lret
cmp
sahf
sbb
aaa
and
das
clc
clc
test
mov
sbb
add
add
and
fsubs
sbb
push
out
inc
mov
fsts
mov
sub
imul
or
repz
xchg
je
out
mov
push
push
int3
pop
mov
inc
mov
aas
int3
shll
in
jmp
ret
fimull
ror
into
mov
inc
stos
rolb
aaa
sub
sub
test
xchg
fisubl
and
xchg
mov
adc
mov
pop
insb
xchg
jle
push
sub
push
rcl
push
pop
or
xor
inc
or
xor
fucomip
icebp
xor
in
sub
dec
jns
insb
shrb
cs
sub
in
push
movsb
and
dec
push
jg
mov
outsb
push
or
mov
push
xchg
xchg
andb
jle
xor
or
pusha
cwtl
adc
in
popa
fists
mov
bound
insb
sahf
inc
outsb
push
jmp
inc
adc
push
in
je
adc
fdivl
jo
cmp
fwait
loope
xchg
lret
xchg
sub
sar
shlb
sbb
nop
out
mov
out
xchg
dec
add
imul
dec
movsl
movsl
jbe
outsl
jbe
cltd
dec
hlt
mov
lahf
dec
add
push
sarl
insl
mov
les
and
jne
arpl
xor
inc
xchg
in
hlt
movsl
lock
movsb
jecxz,pn
mov
fadds
mov
sub
sti
cs
cmc
and
imulb
sbb
frstor
movb
dec
sahf
mov
loope
outsl
fdivrl
out
or
or
cltd
dec
mov
imul
mov
jb
int
dec
inc
repz
cmc
sbb
sub
adc
and
mov
aad
mov
sbb
in
cmp
stc
rol
inc
stos
lret
mov
adc
inc
xchg
out
xchg
mov
cmpsb
xor
pop
scas
xchg
pop
lods
leave
div
or
xchg
mov
dec
mov
sbb
push
in
mov
inc
fstl
jp
jmp
jle
sahf
mov
aad
stos
loope
and
push
addr16
and
push
inc
out
mov
xchg
add
mov
test
jbe
ret
push
xor
in
es
lds
ficompl
hlt
aam
loope
fcomps
pop
fstpt
bound
pusha
loop
jo
fdivl
jmp
mov
mov
movaps
xchg
inc
inc
idivl
aam
sub
hlt
repz
mov
stos
rcrb
cmp
lahf
imul
cld
fdivl
cmp
adcb
loop
cmp
xor
jmp
cmp
push
in
mov
and
xor
cmp
xor
mov
in
cmp
adc
adcl
add
fldl
inc
fcmovnbe
loop
es
xchg
mov
nop
bound
pop
lcall
js
add
adc
push
fs
outsl
js
out
daa
pop
xor
inc
sti
clc
iret
inc
test
arpl
daa
xchg
or
mov
mov
fldcw
mov
int
lods
xor
xchg
ret
aad
repnz
lret
inc
rorl
and
pop
orl
and
cmc
add
mov
test
inc
mov
push
pop
inc
out
bound
sbb
cmpsl
arpl
or
lods
lcall
pop
mov
mov
sbb
mov
jb
jle
adc
outsb
inc
cwtl
adc
jge
add
js
jl
sbb
addb
pop
or
sub
sbb
xor
pop
in
pusha
cltd
and
clc
inc
pusha
mov
jmp
sbb
or
ret
push
fisubrl
js
je
push
inc
out
lds
ror
sbb
inc
rcr
push
push
jae
jo
addr16
in
lret
or
nop
out
mov
inc
mov
stc
daa
fistpll
push
gs
jp
mov
out
add
xor
test
outsb
xchg
repnz
mov
mov
dec
cmp
adc
sahf
aam
or
mov
lea
rorl
divl
nop
lods
push
jmp
jge
cmp
imul
add
mov
jp
mull
sub
dec
or
mov
or
mov
sbb
mov
inc
loopne
pop
or
xor
sub
pusha
mov
sbb
iret
imul
cmpsl
xchg
in
pop
rorb
mov
shlb
pop
xor
jns
test
push
cwtl
sbb
jecxz
cvtps2pi
jae
adc
ljmp
or
dec
push
sub
sti
fisttpl
mov
mov
les
pushf
xchg
pop
dec
test
xchg
addr16
scas
adc
js
jo
es
xchg
adc
jb
dec
loop
aaa
push
pop
adc
pop
push
push
fisttpll
mov
mov
jecxz,pt
inc
and
push
mov
arpl
int3
xor
in
sub
add
lods
sbb
pop
or
sub
adc
call
out
and
push
fyl2xp1
pop
push
mov
mov
icebp
push
push
dec
repz
mov
xlat
enter
sub
jno
in
adc
xchg
cmc
jge
in
mov
aaa
ficoms
pop
or
test
test
fwait
xchg
pop
mov
adc
xchg
popf
bound
bound
clc
sbb
mov
addr16
sub
scas
pop
jp
out
int
and
push
xor
or
and
and
push
dec
test
jno
add
aam
pop
out
xor
pushf
pop
push
test
push
sbb
imul
mov
sbb
jbe
jnp
mov
push
adcb
pusha
jl
mov
xchg
dec
testl
xor
inc
lds
int3
lock
test
sbb
inc
xchg
push
jmp
or
sbb
pop
mov
dec
or
out
push
les
cmc
push
cmpsl
std
sub
jp
rolb
jmp
js
notb
scas
stc
lcall
iret
shll
dec
subl
or
sbb
into
push
hlt
mov
mov
lret
push
frstor
jle
cmp
cmp
push
nop
cs
adc
push
mov
xchg
inc
or
pop
lret
rcrl
mov
js
add
mov
inc
xchg
and
dec
dec
dec
insl
push
mov
dec
shr
fsubp
push
push
xlat
fmull
xchg
daa
lods
pop
clc
sbb
xchg
push
add
jg
mov
sbb
push
shlb
add
push
loop
iret
and
gs
pop
and
mov
sahf
out
leave
pop
push
aaa
xor
xchg
and
ja
jns
in
xchg
add
cs
cmp
adc
add
push
mov
xchg
ret
sub
mov
ds
or
out
push
ficompl
xchg
in
mov
or
fwait
int
mov
out
xchg
push
into
push
fnstcw
subb
pop
sbb
sub
dec
pusha
mov
jne
add
icebp
jno
pop
repnz
cmp
mov
inc
mov
dec
arpl
push
jno
std
inc
test
sbb
xor
nop
or
in
adc
mov
rclb
clc
xor
aad
or
fistpl
mov
dec
dec
push
sahf
movsl
xchg
cmpb
ret
inc
cmc
adc
add
pop
mov
dec
sbb
nop
push
and
fwait
jmp
mov
orb
cmp
jl
xchg
mov
les
js
das
jge
xchg
test
addr16
arpl
and
xchg
in
cmp
mov
xchg
sub
test
sub
testl
add
push
or
add
push
imul
xchg
mov
cmp
jecxz
je
mov
dec
test
pusha
int
mov
xchg
mov
inc
lds
or
push
sub
inc
jne
cltd
ss
or
rcrb
mov
pushf
or
ret
test
sbb
cmp
out
sti
notl
push
mov
cs
inc
cltd
mov
add
jnp
fldt
xchg
add
sub
in
sti
adc
repz
sbb
aaa
mov
sub
xor
in
int
jecxz
call
jle
jmp
in
js
adc
add
sub
xchg
mov
cmp
or
pushf
fdivrs
popf
add
fwait
nop
cwtl
js
adc
stos
leave
sbb
jne
add
fisubs
pop
frstor
out
xchg
clc
stos
mov
xchg
das
test
shrl
gs
mov
test
jp
adc
orps
xchg
ljmp
sub
in
enter
fs
dec
ret
outsb
movsl
dec
and
xchg
stos
insb
neg
mov
loopne
les
or
scas
ss
movsb
cmp
push
mov
pushf
cmp
adc
je
into
fucomi
clc
out
pop
push
popl
mov
daa
and
incb
mov
push
jbe
jecxz
aad
dec
addr16
shll
dec
and
addr16
mov
test
movsb
jmp
or
add
cmc
xor
dec
cmp
add
cmp
jno
test
adc
outsl
adc
sbb
push
inc
adc
bound
jl
movsl
je
mov
call
cmp
sbb
scas
out
dec
lods
aad
addl
sub
pushf
aad
push
dec
lret
mov
push
and
js
outsb
sub
cmp
int3
pop
pop
jnp
test
ret
pusha
cs
cmp
aaa
jae
mov
loopne
in
mov
add
adc
icebp
popf
pop
mov
rcl
cmc
loop
sahf
daa
in
mov
jne
xchg
push
fsts
xchg
sbb
rorl
and
ljmp
rorb
pop
push
int3
dec
inc
or
jg
add
inc
sbb
ret
mov
lret
fstl
inc
mov
mov
pop
and
testb
xchg
sbb
dec
jns
mov
hlt
sbb
lret
sbb
repz
push
int
mov
or
inc
pop
rorb
sub
push
repz
mov
mov
ret
push
outsl
push
and
cmp
dec
xor
lret
mov
lahf
fldenv
cmc
insb
jno
dec
jno
imul
arpl
push
push
cmpsl
push
je
mov
cmp
adc
das
push
arpl
mov
int
arpl
cmp
hlt
push
pop
sub
ret
insb
popf
jne
fsub
jge
sbb
push
arpl
imul
adc
adc
lret
int
clc
xchg
dec
inc
pop
sti
or
mov
mov
pop
nop
les
cld
pop
mov
sub
push
sahf
xchg
xchg
mov
xor
out
dec
jmp
shll
aaa
adc
inc
fidivrl
iret
adc
push
cmp
icebp
mov
mov
fwait
jns
mov
loope
ljmp
sub
popl
bound
jmp
pop
xbegin
jne
shll
mov
arpl
hlt
cwtl
sub
xchg
sti
mov
cmp
mov
add
daa
add
push
push
mov
fists
push
insb
imul
add
jbe
fadds
pop
dec
imul
inc
loope
sbb
into
pop
mov
rcrb
outsl
ja
test
lods
dec
pop
pop
daa
or
mov
and
and
mov
inc
add
jmp
stos
into
enter
jo
lahf
sbb
in
dec
pop
mov
add
jmp
fcoms
fsub
pusha
cmp
ret
dec
jnp
xor
mov
std
push
clc
mov
inc
jge
pop
cmp
and
mov
cmpsl
das
dec
xchg
push
js
lock
or
mov
xor
jcxz
pushf
aas
and
arpl
cmpsl
imul
adc
xchg
jp
stos
scas
xchg
lods
adc
das
movsl
fistps
pop
adc
and
inc
mov
mov
std
lcall
pop
sbb
mov
je
lds
int3
push
je
jp
ret
xchg
add
aas
inc
sbb
sub
mov
xchg
sub
fimuls
cmp
fnsave
pop
fwait
xor
insb
or
mov
lods
gs
jne
adc
xchg
push
add
mov
loopne
sub
insb
andb
xor
in
cmp
mov
jge
inc
and
into
ss
and
jne
daa
and
mov
mov
push
sbb
lcall
or
sbb
mov
icebp
push
stc
scas
cmc
mov
lods
or
mov
or
jnp
push
inc
neg
int
mov
and
roll
cmp
pop
and
dec
idivl
test
outsl
push
pop
into
lret
loop
rcr
out
gs
shlb
popa
clc
test
pop
mov
push
push
das
xor
stos
cmp
xchg
jle
incb
adc
data16
mov
mov
psubusw
stos
jl
push
inc
call
jne
les
adc
and
pop
add
mov
adc
lods
mov
es
mov
cmp
data16
inc
dec
bound
sub
popa
gs
cmpb
imull
popa
cmp
or
push
and
ljmp
dec
enter
jg
jmp
jge
out
jo
les
popf
notl
xor
sahf
sbb
inc
cmp
ret
push
fdivr
cmp
pop
inc
out
lock
add
jecxz
imul
inc
loope
popa
sahf
jmp
ret
or
dec
xlat
pop
xor
aad
mov
loopne
inc
mov
pop
mov
dec
cmp
dec
lods
js
leave
adc
inc
insb
and
cmp
mov
out
jne
test
cld
sarb
xor
cmp
pusha
in
sub
push
loope
dec
pop
jnp
jl
imul
iret
mov
xchg
mov
ljmp
cmc
imul
test
add
pop
sbb
add
daa
hlt
loop
xchg
rcrb
lea
stos
or
sti
cmp
out
cmpsl
loope
outsl
fwait
xchg
xchg
jecxz
dec
mov
ja
sub
test
cmp
scas
fwait
push
jge
subb
sub
jmp
mov
push
outsb
push
bound
aaa
orb
aaa
das
mov
cmpsl
fsubs
jmp
xchg
test
pop
cmc
push
xor
adc
adc
pop
jnp
out
mov
mov
xor
jle
into
jb
mov
stos
and
push
jnp
cld
sub
adc
and
stos
and
cwtl
jl
adc
jp
pusha
test
push
in
std
and
xor
jg
jg
pop
imul
lahf
inc
mov
pop
outsb
pop
push
lea
jp
push
les
out
call
inc
mov
cmp
mov
mov
mov
dec
out
push
sbb
add
cmp
pop
loop
cmp
sbb
lods
leave
mov
roll
push
push
dec
ret
cmpsb
inc
or
adc
ficomps
test
dec
sub
addl
pop
pushf
push
lret
sbb
inc
nop
pop
lret
scas
mov
mov
xor
test
mov
and
xor
and
push
pop
cmpsb
into
push
push
es
mov
cmpl
insl
movsl
dec
jnp
push
aad
inc
rorl
lret
test
xchg
or
adc
daa
mov
jae
fstp
sbb
pop
insb
and
ja
loope
xchg
mov
adc
out
mov
jbe
popf
je
mov
cwtl
adcl
fistpl
cmp
inc
repz
addr16
mov
add
inc
mov
add
cmp
rclb
inc
mov
lcall
cmpb
out
mov
adc
sti
mov
xchg
lods
fistl
int3
mov
cs
cs
dec
xor
mov
daa
mov
sbb
gs
push
lods
adc
pop
cld
shll
xchg
or
xchg
add
xor
into
les
sub
scas
aaa
cltd
bound
shrl
and
mov
imul
push
shll
outsl
leave
enter
sbb
mov
xor
repnz
add
xchg
cmp
xchg
push
and
int3
sbb
mov
gs
cld
cltd
cli
ret
push
mov
sbb
stos
pop
int
lret
cmpsl
dec
mov
inc
sbb
xor
shlb
pop
mov
call
cltd
and
inc
xchg
jno
aas
das
sub
pop
pop
sub
xor
jno
out
daa
pop
and
dec
aam
out
fs
and
into
bound
les
in
fmul
imul
mov
das
aad
inc
xchg
cmp
or
adc
lcall
lret
cltd
or
ror
mov
fldenv
sbb
sbb
xor
mov
inc
xor
out
jno
cmp
inc
add
mov
pause
cld
mov
fisubrs
or
mov
mov
fs
rolb
jp
mov
xor
mov
outsl
mov
xchg
jle
pop
dec
ss
es
dec
jne
imul
ss
cltd
dec
cmp
mov
pop
mov
out
es
loope
lock
mov
shl
lea
mov
out
cltd
push
stos
xorl
pusha
mov
fildl
jae
fdivrs
int3
movsb
lods
jecxz
imulb
mov
mov
and
cltd
lret
int3
sbb
out
icebp
inc
jle
mov
xchg
jecxz,pt
int
push
pop
popa
daa
jg
push
repnz
push
xchg
lahf
and
pop
adc
sub
loope
sbb
sahf
mov
mov
aaa
popf
bound
hlt
roll
mov
loope
pop
out
enter
jno
xor
or
sbb
pop
imul
test
jge
xchg
adc
pop
add
sub
je
mov
test
ror
inc
aaa
jbe
bound
cmpsl
mov
roll
arpl
popf
push
sub
leave
adc
mov
mov
mov
inc
iret
sub
fwait
mov
add
push
sti
mov
ss
mov
mov
jmp
stos
rolb
or
add
sub
stos
jle
push
cs
in
cmp
inc
std
sarl
jns
out
jl
icebp
mov
and
sub
push
cmp
adc
dec
xchg
data16
repz
mov
mov
push
arpl
scas
int
sahf
inc
cmp
dec
xor
test
scas
lock
fnsave
xchg
jmp
scas
mov
stos
loopne
loop
lods
out
and
outsl
clc
cmc
mov
loop
dec
cmp
jg
add
jb
ret
jle
pusha
je
mov
sub
add
dec
dec
popf
or
push
xor
in
pop
add
or
mov
pop
xchg
jno
cld
mov
test
and
pop
ret
xlat
fldenv
stc
mov
dec
cmp
lods
out
sbb
adc
inc
aad
fisttps
cwtl
or
mov
sub
pop
je
mov
jno
add
mov
aaa
add
mov
jo
ffree
sbb
faddp
fdivrl
mov
int
jne
pop
lret
and
push
mov
in
mov
push
rcrl
and
fcom
pop
pop
movsb
push
push
lret
rcll
mov
mov
aam
jecxz
sub
rcll
push
sub
iret
fistps
in
test
dec
mov
push
rolb
popf
rorl
enter
es
stos
cmp
mov
enter
xchg
repnz
call
dec
push
cmpb
repz
lret
add
push
pop
test
mov
mov
jecxz
inc
rorl
or
call
inc
idiv
pop
fstl
jne
fdivs
push
push
ret
fwait
push
jo
dec
int3
mov
and
jp
repz
icebp
movsb
shl
mov
inc
mov
xchg
addl
mov
cs
pusha
push
sub
xchg
sbb
inc
cltd
mov
add
out
pop
mov
subl
in
daa
mov
push
and
ret
loop
imul
or
add
push
repz
mul
mov
xor
mov
in
das
mov
mov
ret
scas
mov
push
ds
enter
lret
int
inc
sbb
cmp
inc
dec
iret
inc
inc
jns
jb
pusha
jnp
call
pop
dec
in
jbe
mov
enter
pop
jno
dec
add
adc
dec
mov
mov
inc
loop
xor
inc
shlb
test
inc
or
mov
mov
dec
ja
fdivp
or
jbe
and
mov
lahf
cmpsl
rcll
sbb
xor
xchg
test
movsb
data16
push
popa
pop
packssdw
dec
adc
adc
push
mov
xchg
jle
insb
cmp
jns
in
jbe
jge
mov
and
sbb
test
out
dec
push
adc
lret
mov
dec
insb
aas
cmp
mov
aas
push
ja
outsb
pop
das
cmpb
clc
and
fdecstp
dec
xor
lods
dec
inc
test
dec
test
push
arpl
stos
mov
xchg
lcallw
xchg
jge
int
in
mov
ret
cmpsl
xchg
addl
test
push
in
mov
sub
test
or
xchg
movsl
sub
xchg
mov
xlat
out
dec
jo
aad
aas
adc
aam
and
std
mov
xor
xor
push
sbb
sub
rcll
inc
jae
repz
cltd
mov
popf
jl
insl
sub
stc
inc
ret
out
out
fwait
mov
sub
ficomps
clc
aaa
pop
repz
pop
mov
out
dec
xchg
cltd
sarb
shr
or
adcb
fbstp
fisttpl
leave
mov
jl
shrl
nop
mov
mov
mov
ds
cmpsb
imul
add
pushf
fstpt
jmp
adc
lcall
add
enter
rorl
rorb
push
das
loopne
xor
popa
fdivs
loope
jne
push
mov
push
lret
lret
in
mov
push
int3
mov
orb
cmpsb
dec
and
jmp
in
test
push
add
add
divl
pop
push
and
xor
dec
or
cwtl
das
mov
dec
mov
cld
inc
and
inc
stc
adc
dec
fistps
imulb
and
xor
enter
popa
popf
mov
xor
test
rcrb
cmp
repnz
or
icebp
jne
mov
test
sti
pop
sub
mov
cmp
push
cmpb
pushf
and
cmp
jbe
add
cmp
imul
inc
mov
test
lahf
inc
cltd
jle
push
out
mov
jp
cmc
sbb
add
lods
push
mov
shll
sbb
jne
add
xor
sbb
xlat
scas
sbb
push
mov
std
jge
and
enter
lret
push
ja
ffree
loope
add
rol
push
lret
dec
jmp
hlt
cmp
sbb
lahf
xor
xchg
jno
jno
out
sahf
jno
sbb
mov
inc
push
pop
add
xchg
fbld
lods
jae
dec
adc
lret
lock
inc
mov
or
jmp
pop
loope
add
loopew
mov
popf
adc
dec
js
xor
push
jnp
lods
xchg
mov
fcomps
inc
sbb
inc
jmp
or
pop
lret
stos
sbb
xor
ret
xorl
mov
pop
dec
push
and
xor
fidivs
inc
jge
push
inc
adc
push
cmpsb
in
add
adc
ret
aas
and
xchg
mov
jne
mov
bound
rcll
popf
scas
cmp
adc
xorl
adc
sub
mov
dec
imul
xor
add
fnsave
popf
mov
push
ror
jbe
sbb
ss
jne
xor
inc
inc
cwtl
daa
jnp
ret
sbb
mov
in
dec
jb
jle
mov
xor
stos
jp
pusha
pop
xor
popf
cmpsl
hlt
fidivrl
push
jo
push
inc
xlat
or
mov
mov
mov
dec
inc
cmpsl
data16
inc
sbb
add
in
or
xor
cs
adc
mov
fdivr
cld
orb
lahf
mov
aad
dec
and
add
adc
lcall
or
xchg
shll
push
insl
ljmp
hlt
stos
cltd
ret
xor
mov
sbb
cmp
inc
mov
sub
scas
fisubs
add
jns
push
ret
dec
adc
test
pop
addb
testb
pop
push
adc
jnp
bound
std
fistps
shl
adc
mov
arpl
daa
repz
push
push
rol
ja
jne
imul
xlat
outsb
mov
dec
pop
cs
and
mov
push
push
adcb
mov
add
mov
adc
lods
ret
and
stos
ljmp
mov
mov
sub
adc
ss
mov
loop
adc
out
out
call
fidivrl
jge
arpl
mov
xchg
adc
cmpsl
cmc
jo
jnp
je
rol
in
cld
int
xchg
cmc
out
popa
mov
arpl
dec
dec
push
js
mov
xor
out
mov
adc
fcmovbe
sbb
dec
clc
bound
sbb
pop
pop
pop
iret
mov
jbe
adc
cli
mov
in
je
arpl
dec
cmpl
mov
xchg
inc
sbb
xchg
add
cmp
xor
push
add
scas
sti
adcb
jecxz
test
mov
cmp
sub
push
jp
out
add
pop
cmpsb
mov
mov
sbb
outsl
inc
and
jne
mov
or
not
ljmp
xorb
popf
sbb
cmp
ljmp
pusha
int3
or
aad
ja
mov
loop
push
mov
stos
lea
or
repnz
sti
out
cwtl
jno
xor
sti
sub
pop
adc
dec
inc
fimuls
pop
test
rolb
sub
fisubrl
aaa
jno
sbb
pop
mov
pop
mov
push
sahf
jecxz
mov
in
mov
xchg
mov
or
xor
cmpsl
repnz
js
lret
out
adc
mov
movsb
xchg
inc
push
arpl
xchg
lods
jae
mov
inc
fnstcw
add
sahf
out
fwait
pop
mov
and
in
cmpsb
fldl
lock
cs
inc
and
cmp
dec
js
shl
xchg
std
and
lahf
out
inc
ljmp
ret
sbb
sub
scas
cmp
aam
push
pop
nop
or
xchg
jnp
fcmovbe
push
cmc
push
cmp
mov
sahf
cmp
aad
sbb
adc
push
and
lea
rcrb
iret
rolb
xor
cmpsl
xor
fwait
lcall
adc
sbb
add
add
icebp
mov
mov
jbe
mov
loope
nop
rcl
or
lret
ds
mov
mov
sahf
fwait
sbb
pusha
jg
pop
test
sub
int3
mov
and
pop
xlat
bound
inc
sub
cmp
enter
sbb
xor
lcall
mov
out
or
xor
pusha
mov
sub
sub
mov
lea
jle
outsb
adcl
xchg
test
lret
push
jg
jl
jb
jns
lock
aaa
mov
fsubp
insl
ds
fldl
xchg
out
mov
pushf
mov
jge
fmuls
mov
out
movsb
push
pop
sub
xchg
xlat
std
addr16
xor
in
and
mov
jecxz
out
sahf
mul
jne
js
stos
cmp
mov
and
mov
test
jbe
mov
aaa
xlat
fs
cmpsb
jle
loop
scas
in
dec
pop
nop
cmp
jbe
jae
or
rcrb
aad
lds
pop
and
fistpll
jne
jecxz
add
inc
xor
xchg
sub
pop
push
push
cmpsb
or
xlat
sub
in
jne
aam
scas
push
aas
rcl
xor
mov
cmpsl
push
lds
iret
jp
sbb
fsubp
inc
inc
jle
dec
mov
mov
push
sbb
imul
xor
cmp
pop
inc
adc
push
and
iret
cmpl
xor
gs
cmpsl
call
lret
sarl
shll
mov
sub
dec
or
or
and
daa
nop
push
in
sti
sub
lret
outsb
call
adc
lods
mov
movsb
lds
fwait
call
cli
shlb
inc
xchg
xor
mov
mov
and
js
jg
mov
sbb
cmp
xor
sar
sar
and
lock
xchg
insl
les
and
lea
shrl
push
out
xchg
sub
xchg
adc
mov
mov
aad
bound
cld
cmc
inc
dec
leave
loope
stos
xchg
fcmovnb
addr16
mov
sbb
insb
push
js
lret
outsb
aad
dec
xor
sbb
rcrl
ficomps
cld
fcmovne
xchg
xchg
insb
adc
and
mov
jp
push
nop
addr16
fdivrs
out
call
push
andb
mov
mov
subl
pop
jmp
push
xor
mov
mov
mov
push
push
add
sbb
lods
mov
mov
push
loope
push
in
or
sub
cli
leave
test
leave
and
mov
sub
and
jns
cmp
sub
enter
xor
jecxz
jno
xchg
aas
fwait
std
insb
repz
sub
lahf
movsb
sub
ljmp
lock
sub
mov
or
jo
pushf
xor
loop
scas
stos
xor
sub
adc
or
je
lahf
fmul
cs
aad
test
into
xor
add
fsubrl
cmpsb
sbb
stos
icebp
cmp
ja
dec
jle
movsl
in
stc
jb
and
das
pop
xchg
jnp
jge
sbb
cmp
or
pop
loopne
sub
dec
mov
sbb
mov
mov
je
arpl
add
je
push
jmp
fldcw
sub
or
arpl
cltd
mov
sarl
in
add
mov
into
or
int
in
testb
scas
xchg
add
jecxz
hlt
jb
fnstsw
testl
aam
mov
dec
jg
mov
push
mov
fwait
ljmp
loop
es
dec
pop
pop
and
arpl
ficoms
mov
mov
mov
or
rclb
pop
ror
adc
jecxz
inc
xor
mov
xchg
test
test
dec
pushf
std
cmp
sbb
gs
addr16
rcrl
jb
sbb
mull
add
xchg
and
fnstsw
pop
push
mov
mov
sbb
adc
sub
mov
insl
addr16
adc
pop
xchg
lret
adcb
push
mov
pop
xor
jo
pop
lea
xor
mov
cli
adc
clc
sbb
push
fldenv
or
jl
hlt
pop
inc
xchg
mov
pop
xor
in
cmp
jmp
daa
push
push
out
mov
mov
out
int
out
data16
mov
sbb
pop
cs
push
pop
push
push
or
data16
push
xchg
mov
jecxz
and
rorl
int3
xchg
mov
and
nop
incb
scas
push
jae
xchg
xcrypt-cbc
cmpsl
xchg
repnz
mov
xor
leave
leave
mov
fisttps
sbb
repz
ljmp
mov
jno
lahf
jecxz
adc
push
jbe
cmp
arpl
add
sti
xchg
aam
pushf
push
and
inc
repnz
mov
sub
add
or
sahf
outsb
pop
ds
sub
fdiv
xchg
adc
jmp
in
repz
add
cmc
fidivrl
popf
xchg
out
dec
mov
xor
push
push
dec
push
xchg
pop
adc
mov
es
movsb
jb
mov
mov
mov
stos
inc
jge
int3
mov
out
ficomps
out
adc
mov
rdmsr
or
mov
pushf
pop
es
sub
dec
out
sub
aas
sahf
xchg
or
subl
pusha
cmp
int
dec
mov
in
mov
in
jecxz
mov
pop
lea
daa
mov
push
lcall
push
dec
dec
movsl
ret
rclb
pop
rolb
hlt
fwait
cli
pop
xchg
cmp
or
movsb
out
sub
lcall
xchg
fsubs
xchg
out
nop
or
mov
sbb
out
sbb
pop
push
imul
mov
jg
sbb
adc
dec
xlat
aam
mov
mov
lcall
sbb
jge
cmp
mov
inc
mov
add
mov
into
pop
xchg
incb
loopne
popl
pop
pop
js
popa
orps
cmp
std
dec
leave
lcall
add
lahf
cwtl
xchg
fsubrl
xchg
cmp
je
in
cld
hlt
or
push
mov
jbe
ljmp
xchg
int3
add
sbb
mov
xchg
inc
pusha
add
xor
jne
jle
fisubs
imul
in
test
and
cmc
daa
daa
imul
stc
push
ret
xor
dec
lahf
movsb
adc
rep
rclb
xchg
cmpps
imul
fmulp
ficompl
test
frndint
xchg
call
flds
es
or
mov
icebp
pop
and
or
mov
bound
mov
cmp
nop
cmc
sti
pop
mov
xchg
cs
mov
scas
adc
cmc
jle
cmpsb
ret
insl
adc
sbb
js
xor
mov
bound
and
repz
dec
cmpsb
xor
cmc
inc
inc
jns
out
sbb
pop
mov
dec
rolb
cmp
and
or
add
jbe
jbe
cld
mov
and
repnz
mov
ljmp
inc
cld
dec
lret
xchg
push
inc
jo
clc
stc
push
mov
repz
jge
lahf
fidivl
or
mov
in
sbb
pop
and
or
jmp
cld
pop
ja
mov
and
jmp
jp
nop
inc
inc
dec
ret
cmpsb
scas
jecxz
sarl
cmp
fisttpll
sti
aaa
ljmp
aas
mov
xchg
divl
push
fstpt
sbb
mov
sub
inc
xor
inc
xchg
decl
cmpb
push
icebp
nop
leave
and
jns
aad
int
scas
mov
insl
lods
push
ficomps
sarb
std
xor
jno
jbe
jnp
and
call
xor
stos
xor
and
lret
rcrl
mov
push
mov
rcr
push
popa
es
loopne
stc
cmpsb
add
and
pop
cmpsl
insl
jmp
pop
xadd
int3
imul
insl
xor
aaa
mov
push
mov
inc
mov
or
sbb
cmp
dec
sti
imul
int3
cmpsl
loopne
ss
cmp
test
adc
jmp
cs
xorb
pop
aad
sub
sub
stc
std
je
dec
stos
js
cld
pusha
mov
pop
mov
jno
stc
inc
inc
push
and
ds
xlat
jl
fistpll
rorb
in
das
sbb
in
int3
mov
inc
ss
sub
shlb
shrb
xchg
mov
mov
jb
das
das
mov
mov
popf
inc
push
stc
mov
in
es
aam
aas
movsb
mov
arpl
mov
fiaddl
dec
mov
js
fs
mov
and
cli
popf
push
int3
push
lcall
fnstenv
fnsave
cwtl
scas
dec
lahf
ljmp
outsl
stos
fisubrl
cmpsb
pop
loope
mov
ja
mov
xchg
dec
dec
pop
mov
test
push
and
xchg
mov
loopne
push
jge
dec
cs
out
xor
or
add
cmp
mov
sub
dec
clc
mov
adc
push
sarb
clc
push
jle
add
inc
std
insb
sahf
fidivs
js
mov
ss
fildl
pusha
or
lcall
js
and
inc
out
pop
ret
sub
inc
cmpsb
sarb
cmp
cmp
outsb
pop
push
imul
jno
mov
repz
loop
and
repz
lea
mov
stos
or
pop
lods
clc
pop
fstl
insl
mov
jb
cmp
sbb
xlat
pusha
cmp
pop
jl
clc
sahf
jl
cmp
or
cli
mov
pop
loop
mov
adc
sub
jnp
or
mov
xchg
out
aaa
or
xchg
dec
inc
inc
xchg
lock
cmpsb
xor
ds
pusha
jbe
mov
or
jg
dec
push
test
push
xchg
xchg
mov
lahf
mov
pop
xor
xor
add
popf
mov
sarb
inc
gs
push
stos
sbb
xchg
fidivrs
push
mov
notb
repnz
pop
push
pushf
movsl
dec
ds
cmpsl
stos
xchg
mov
or
arpl
cli
add
mov
pop
bound
adc
loope
repz
push
lcall
mov
jmp
dec
fwait
in
xor
pop
mov
out
movsb
push
repnz
pushf
fdivr
xor
pop
and
popf
ds
push
lea
cmp
lahf
add
sahf
inc
call
orl
xorb
arpl
stos
shrd
imul
jg
fmuls
or
or
pop
and
mov
mov
adc
add
outsl
push
stos
mov
inc
pop
mov
ret
add
int3
and
pusha
inc
cltd
icebp
les
std
add
sub
inc
insl
int3
out
bnd
cmpsl
add
sub
inc
je
rorb
sbb
pop
fwait
xchg
adc
es
cmc
pop
stos
nop
cmp
pop
lods
aas
sti
lcall
adc
insb
mov
pop
pop
sbb
bnd
ljmp
aam
cmp
sahf
inc
and
push
and
popf
inc
fidivrs
add
mov
mov
lods
xchg
out
fwait
mov
mov
push
lret
sub
jg
pop
push
adc
test
ja
cmp
add
dec
jo
ret
cmpsl
sub
or
call
or
dec
mov
pop
adcb
cmp
sub
inc
inc
stos
lret
cmp
xorl
nop
or
test
mov
mov
lcall
jg
pop
push
scas
cmpsl
shlb
jns
leave
cmp
mov
pop
mov
addr16
and
cmp
negb
jne
push
clc
or
aam
call
nop
cmp
mov
aas
fistpll
nop
jge
fnsave
mov
shrb
mov
daa
fwait
push
pop
jg
push
arpl
inc
stos
pop
inc
or
je
lcall
lahf
ljmp
add
inc
add
pop
dec
icebp
and
jge
daa
pop
sub
aad
push
or
push
pop
sti
loope
adc
lahf
sbb
push
loop
and
cmp
mov
mov
loop
stos
inc
adc
rcrb
movsl
iret
sti
sti
and
push
jecxz
sbb
xlat
adc
mov
in
jbe
cmp
sbb
pop
rorl
push
or
or
inc
movsl
sbb
pop
jb
jmp
lcall
fisttpl
push
cmpsb
pop
inc
push
inc
test
rcll
sti
jecxz
adc
pop
mov
cwtl
push
fisttps
sub
shlb
dec
fdivrs
mov
mov
push
aaa
cmp
mov
push
pop
sti
mov
arpl
push
pop
ljmp
outsl
xchg
pop
cmp
outsl
or
mov
mov
or
adc
mov
jp
pushf
mov
jecxz
scas
push
out
and
test
rolb
rcl
cmpsl
and
xor
scas
adc
aaa
mov
scas
loopne
adc
daa
jae
aas
scas
aas
orb
push
arpl
and
mov
inc
lahf
or
push
mov
cmp
inc
inc
fmull
dec
sub
inc
mov
iret
movsb
dec
xor
movsl
in
stos
mov
repz
icebp
jl
push
jmp
xchg
inc
dec
xor
and
inc
jle
insb
mov
stc
setbe
andl
and
jmp
stc
ret
lea
jne
jns
rcrb
mov
fistpl
divb
pop
inc
mov
subb
xor
add
push
jmp
into
pop
jmp
iret
jl
lret
mov
jl
sti
ljmp
fstpt
lods
loop
or
mov
push
lods
repz
fwait
sahf
sub
jo
into
fidivs
xor
fucom
mov
adc
jo
mov
mov
mov
faddl
fwait
hlt
or
imul
jge
mov
xchg
test
sub
xor
or
xor
pop
inc
int
mov
stos
mov
roll
add
and
into
adc
in
clc
loop
mov
cmp
push
pop
dec
mov
leave
or
ds
pushf
ljmp
fimuls
aam
dec
fistl
stc
mov
pop
mov
dec
jnp
cmp
mov
in
icebp
out
jnp
push
stos
push
pop
push
xor
insl
xchg
xchg
sbb
fisubl
into
je
loope
out
sbb
adc
jg
lret
out
and
and
insl
pop
das
nop
shl
test
lret
jle
add
imul
pop
mov
add
insl
jmp
clc
mov
jns
or
push
jns
push
mov
pop
dec
jbe
push
out
mov
fsubrl
sub
xor
adc
xchg
push
ds
dec
xchg
movswl
adc
test
and
cmp
into
sub
call
xor
xor
dec
leave
push
cmp
xchg
stc
or
popa
sbb
jbe
or
jmp
inc
sbb
adc
ss
scas
sti
xchg
inc
in
daa
pop
leave
aas
mov
cli
out
sahf
mov
add
push
or
or
mov
test
or
inc
push
pop
or
push
xchg
cmovo
int3
psubusb
push
mov
aam
jb
pop
or
adc
outsl
and
out
lea
call
jmp
lods
add
inc
cltd
pusha
jo
aam
pop
int
sti
lods
mov
enter
cmc
fcmovne
xchg
pushf
jg
dec
test
fcoml
ret
or
stc
inc
push
nop
sbb
insb
sbb
cmp
mov
movsb
jb
aas
adc
test
in
arpl
mov
rclb
and
mov
das
ja
insb
or
jl
popa
std
out
xchg
jmp
ret
popf
clc
pop
insb
and
int
cs
dec
cmp
sbb
test
ljmp
orl
das
cmp
arpl
adc
xor
mov
mov
fdivrs
and
out
in
xchg
das
loop
stos
xchg
pop
leave
imul
insl
bound
mov
add
mov
dec
sub
out
sub
inc
add
sub
outsl
mov
xor
mov
dec
ret
push
fistps
adc
mov
cmc
add
sub
fmull
add
pop
xchg
push
mov
insl
mov
int3
adcb
lea
mov
or
movsb
dec
ret
xor
mov
cmp
sbb
cmp
data16
sub
repz
mulps
push
data16
les
cld
lahf
add
xchg
sbb
jl
pop
mov
inc
lock
imul
fbld
loope
push
mov
stos
mov
ret
shlb
sarl
int
pop
xorb
xor
addr16
loop
nop
out
je
sub
insb
jg
dec
js
or
xchg
repnz
daa
ja
mov
xor
imul
fadds
add
pop
leave
sub
adc
out
ret
ss
mov
mov
insl
mov
mov
inc
mov
test
lods
gs
lahf
xlat
adc
cmp
adc
cmp
inc
dec
fcompl
add
sub
aaa
lods
and
sbb
incl
outsb
xchg
ficoml
movsl
jecxz
xchg
aad
std
push
add
scas
jns
xor
fwait
into
mov
int
xor
inc
and
fisubs
xchg
fstps
cmpsl
sbb
insb
je
in
insl
inc
ja
sbb
push
push
lds
or
fnstsw
ljmp
push
push
rcrl
mov
mov
aas
test
in
jns
popa
xchg
aaa
and
or
lahf
test
cmp
aaa
and
in
cmp
fisttpl
mov
pop
sahf
lret
pop
adc
mov
jge
in
cmc
dec
popf
pop
arpl
out
push
xchg
idiv
daa
jb
fsubs
push
aam
loop
push
pusha
xchg
xchg
movsb
fbstp
mov
sbb
loop
faddl
jp
xor
xchg
js
mov
jmp
mov
jg
jnp
stos
cmp
mov
mov
mov
fcoms
xor
or
or
push
push
xchg
and
fstl
cmpsl
movsb
imul
lods
jp
stos
cmp
arpl
daa
fwait
push
xchg
sbb
in
stos
xorb
in
and
ljmp
cmpsb
insl
stos
cwtl
dec
jbe
push
cmp
mov
bound
pushf
stc
imul
aad
or
mov
jmp
ret
hlt
insl
inc
jb
xor
fisubrl
je
enter
loope
inc
push
xchg
push
nop
pop
cmp
lcall
pop
sub
jl
mov
stos
jbe
push
or
dec
mov
and
aam
lret
and
orl
cld
call
mov
mov
outsb
inc
stos
shl
cmc
pop
js
add
xlat
pushf
sbbb
aas
cmp
and
arpl
negb
mov
test
xchg
frstor
fwait
jns
inc
clc
outsb
sbb
outsb
pushf
jno
xchg
add
adc
pop
loop
mov
je
in
xchg
xchg
cmp
ret
in
movsb
dec
cmpsl
rol
pop
cli
jo
sbb
cld
aad
std
cmp
ret
bound
dec
sub
inc
pop
and
icebp
testb
mov
push
pop
pop
subb
int3
mov
cmp
pop
sub
aas
lods
push
push
xor
cmp
sbb
loopne
loop
lcall
mov
aaa
pop
fs
aad
xor
or
daa
xor
mov
fdivl
inc
fs
lret
xor
addr16
rolb
cmp
dec
mul
xchg
mov
hlt
stos
xchg
mov
ret
push
aaa
fnstenv
js
or
pop
shr
out
hlt
testb
xor
mov
push
int
ds
andl
je
repnz
test
outsb
fsqrt
fwait
push
outsb
sbb
jb
out
mov
das
dec
in
adc
cmp
ja
cmpsl
inc
leave
pop
es
add
aam
pusha
sbb
inc
push
rorb
ljmp
arpl
sbb
fstpt
iret
jg
out
jp
adc
or
mov
and
cmpsb
adc
add
inc
and
stc
dec
lods
and
das
jne
out
jg
stos
aas
fildl
xorl
xor
jp
outsb
pop
jno
cli
imul
lret
mov
iret
nop
in
lret
xor
scas
icebp
lcall
inc
insl
jle
pop
ficoms
pop
es
dec
cmp
cmp
xchg
icebp
inc
push
shl
lds
je
and
xchg
jnp
arpl
adc
push
sbb
movl
insl
xor
xor
ja
cmc
loope
or
dec
xchg
rolb
pop
shll
fmulp
inc
in
cmp
ret
xor
aad
imul
dec
repnz
int3
ds
xchg
loop
xchg
xchg
mov
sub
lods
and
popa
mov
es
sbb
xor
jge
daa
or
das
or
testb
cli
sub
fmull
shrb
add
mul
push
mov
adcl
xor
popf
subl
cs
xchg
out
sbb
enter
mov
push
push
cmpsb
add
loope
mov
or
lret
sbb
cmp
cs
inc
ss
xchg
fldt
rcrl
mov
mov
pusha
mov
adc
les
ljmp
mov
mov
xchg
dec
add
mov
adc
pop
mov
jbe
sub
adc
repz
arpl
in
sahf
aas
fwait
push
jl
outsl
sub
push
or
sti
xchg
and
cltd
push
das
loop
dec
in
cmpsb
fdivp
sub
dec
enter
mov
pop
nop
mov
pop
ljmp
cmpsb
or
jecxz
icebp
xchg
mov
iret
or
add
xor
mov
popf
loopne
xor
push
lret
pop
sbb
adc
inc
test
inc
scas
jo
push
mov
add
popa
inc
mov
sub
or
inc
push
imul
mov
lcall
out
xor
xchg
push
sub
dec
call
push
cmp
mov
xor
sub
sub
adc
addr16
test
xor
jmp
insb
fwait
cltd
jno
pop
icebp
insb
mov
mov
cmc
and
std
mov
xor
or
in
dec
or
sbb
and
dec
sub
xchg
mov
inc
xchg
sub
cltd
add
jb
addr16
aad
sub
inc
lods
int3
ljmp
mov
pop
push
xchg
scas
cmp
ret
push
sbb
or
xchg
lahf
out
fists
aad
mov
out
adc
jns
jmp
push
aad
cli
jnp
sarl
and
add
sbb
adc
fstps
gs
push
dec
fwait
dec
xorl
aas
vsqrtps
push
mov
adc
gs
enter
lahf
mov
sub
sbb
pop
sub
cmp
mov
cmp
jl
scas
cmp
dec
movsl
xchg
xor
add
jg
mov
lock
mov
push
jb
push
jno
push
add
or
int3
arpl
inc
cmp
cmp
ljmp
in
cmp
jg
xor
pop
mov
fsubs
stos
mov
mov
dec
adc
mov
stos
aas
pop
and
test
pop
fisubrl
sbbb
mov
mov
push
dec
lret
adc
fdiv
jnp
pop
pushf
popf
test
fisubrs
rol
and
fistpll
jg
push
add
cmpsb
fcomip
pusha
aas
mov
lret
cltd
faddl
xchg
or
jp
sub
sub
out
cs
aam
loopne
sbbb
push
xor
lahf
xorl
dec
and
mov
xor
add
outsb
aas
lret
scas
adcb
inc
daa
sbb
xor
dec
loop
int3
mov
or
mov
pop
sbb
fimull
scas
push
sub
lods
push
xchg
into
or
rorl
lds
test
xor
sub
inc
mov
cmp
test
out
mov
into
imul
cltd
addr16
mov
mov
aas
mov
addr16
bound
loopne
js
xlat
dec
mov
and
and
jb
jae
test
add
adc
mov
xor
dec
pop
mov
add
test
pop
test
xchg
or
fisttpll
icebp
int3
int
aad
sti
jns
mov
jb
sub
xor
cmpsl
sub
repnz
or
fbstp
sub
and
outsb
es
fisttps
or
arpl
test
shll
lcall
not
fldcw
jl
push
push
iret
push
xchg
jb
aas
or
push
cmp
jne
cmp
and
faddl
mov
ds
mov
push
xor
pop
test
jle
mov
and
out
vmread
add
or
outsl
push
add
or
jmp
jne
and
scas
ja
push
movsb
lret
sbb
outsb
mov
je
aam
aas
mov
lods
icebp
lds
xor
adc
mov
add
pop
es
pusha
lahf
cld
push
popf
rorl
jns
sub
stc
cmpsb
pushf
adc
push
cs
cmpb
mov
sbb
push
cmpsb
inc
popf
inc
jg
dec
push
mov
mov
push
lea
inc
loope
inc
scas
add
inc
das
dec
es
lock
enter
inc
add
testl
test
mov
xor
xor
pop
cmp
lods
scas
fs
jo
jae
fs
arpl
daa
inc
fdivl
test
and
sahf
add
out
xchg
cmpsl
fsub
and
push
sbb
or
dec
xor
add
fldenv
cwtl
cld
add
sub
mov
push
mov
cmp
icebp
push
inc
stc
fisttpl
mov
jmp
lea
sti
add
loop
mov
inc
pop
out
sarl
idivl
lret
lds
adc
lcall
dec
fdiv
pop
lds
stos
int3
cmp
xchg
jecxz
jno
cld
lods
mov
js
jle
xchg
insb
lahf
inc
imul
mov
dec
mov
xorb
cld
lret
std
mov
and
mov
mov
or
jae
dec
add
jb
adc
jae
xchg
leave
add
xchg
into
pop
int3
xchg
or
scas
add
push
inc
jo
fcomps
xchg
mov
in
pop
sub
or
insl
imul
push
stos
jae
or
xchg
insb
mov
pop
mov
and
and
sbb
dec
clc
mov
aaa
popa
fbld
repnz
pop
fisttps
mov
dec
sar
lret
xchg
jp
lcall
aas
adc
inc
shrb
push
adcl
cwtl
cwtl
sub
mov
xor
sub
adc
fsts
int
pop
mov
ja
stc
dec
mov
xchg
cmp
fnstsw
arpl
sbb
fwait
incb
scas
push
mulb
xchg
ret
cld
nop
xchg
dec
repz
jge
in
pop
mov
and
or
add
mov
push
pop
ret
orb
sub
cmc
icebp
ss
dec
cmp
mov
and
loop
pusha
inc
lods
xchg
sub
das
nop
popf
jnp
std
mov
rclb
mov
push
sbb
mov
and
sbbl
out
lret
push
dec
in
lods
push
inc
popf
out
mov
cli
push
lret
hlt
push
call
sti
jl
stc
jle
ja
xor
pop
xor
in
inc
jnp
mov
and
mov
jg
call
sub
rcr
je
bound
xchg
into
mov
push
addr16
push
xor
dec
negl
int
xor
movsl
mov
cs
jo
hlt
or
ss
jmp
add
dec
iret
rcl
jns
mov
loop
lret
or
in
inc
scas
and
xchg
subl
mov
arpl
scas
rorb
mov
sub
jge
cltd
popa
enter
pop
dec
push
inc
pop
loop,pt
movsb
sub
or
iret
loopne
cmp
dec
popa
ss
test
dec
add
inc
cs
fwait
daa
sar
xchg
xchg
cmpsb
out
aam
mov
subb
xor
inc
jmp
mov
cmp
mov
add
fwait
adc
std
inc
insl
pop
loope
fcmovb
pop
xchg
rol
inc
lea
or
xchg
lret
xchg
lock
outsl
in
pop
push
stos
mov
dec
pop
mov
sahf
pop
xor
and
mov
shrl
and
mov
out
stos
mov
sahf
jmp
jne
pop
inc
jmp
or
lds
mov
daa
adc
jge
push
bound
add
daa
xchg
add
xor
jge
cmc
shl
or
in
lret
jle
jbe
sti
jmp
push
fdivrs
inc
cmp
outsl
daa
push
subl
jl
call
mov
inc
aam
aam
pop
xchg
jno
popf
pop
int
mov
push
imul
int
pop
jns
out
sbb
arpl
and
jg
xor
add
cmp
jo
mov
addb
loopne
lea
mov
sub
jae
dec
inc
hlt
sub
call
mov
js
sbb
mov
adc
adc
bound
sbb
push
lcall
xlat
movsl
das
mov
xorb
jo
outsl
pop
movsb
jmp
mov
fs
jecxz
aas
lea
add
cmc
scas
ficompl
je
sarl
test
mov
in
mov
inc
mov
inc
pop
or
dec
ja
mov
inc
cmpsb
mov
cmp
add
and
sahf
pop
mov
push
cmc
lret
dec
fs
lcall
xchg
icebp
cmp
testl
das
fsubr
dec
dec
push
cmc
dec
cmp
cmpsb
gs
cli
adc
xchg
pop
and
fs
sbb
push
fnsave
xchg
je
call
rcrb
int3
leave
addr16
bound
mov
in
shrl
inc
xchg
adc
cmp
mov
ficomps
inc
hlt
fiadds
dec
sub
pop
pop
sarb
jl
loop
test
jnp
mov
sahf
sub
mov
fucom
int3
insl
mov
inc
push
or
shll
daa
xor
pushf
jl
inc
psubsw
lock
sbb
add
mov
jg
imul
xchg
cwtl
pop
xchg
.byte
cltd
