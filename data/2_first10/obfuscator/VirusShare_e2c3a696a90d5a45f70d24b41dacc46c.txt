daa
in
outsb
pop
xchg
popa
pushf
test
cmpsb
mov
test
js
sbb
in
mov
jle
loop
mov
sbb
lods
cltd
xchg
adc
pop
push
movsb
leave
aad
int
movsb
pop
lods
in
sbb
fwait
out
popf
mov
leave
adc
aad
ja
mov
je
ss
mov
stos
inc
push
fsubs
out
dec
ljmp
test
xchg
rcrl
aad
push
insl
xchg
sbbl
inc
or
scas
mov
push
dec
pop
pop
scas
repnz
cwtl
dec
outsl
cmp
lret
cmp
sub
lret
cmc
stc
cmp
xchg
rorb
push
mov
lcall
sub
cmp
pop
leave
push
dec
push
cmp
cmp
arpl
in
test
ds
inc
sbb
out
lods
and
sbb
pop
inc
cmc
scas
ret
shr
sub
mov
jae
test
stc
push
xor
lea
pusha
jmp
adc
lea
pushf
jmp
or
add
add
stos
add
add
mov
add
scas
lcall
xchg
mov
add
inc
ret
popa
insl
mov
scas
in
adc
sbb
cmp
push
mov
adc
insb
icebp
sbb
mov
dec
js
dec
popf
sbb
ret
add
enter
and
nop
stc
ret
pusha
insb
lds
hlt
inc
and
daa
push
lea
mov
cmc
or
push
sub
lea
cmp
dec
push
sbb
test
adc
push
stc
mov
cmc
test
push
movb
lea
je
dec
inc
mov
lea
cmp
bswap
add
xor
btc
mov
jae
call
inc
call
jmp
pushf
lea
call
pusha
pushl
pushl
jmp
lea
jae
push
pusha
xor
pushf
pushf
lea
call
pushf
pusha
pushf
movw
lea
jae
push
jmp
enter
mov
loope
test
stos
sbb
js
cmp
push
scas
lds
fistps
jb
jmp
mov
jno
xchg
lds
add
xchg
inc
cmpsl
jl
xor
cmp
push
inc
xchg
dec
mov
add
jbe
and
pop
or
add
dec
add
inc
jmp
push
pushf
lea
je
cmp
jmp
das
insl
cwtl
mov
roll
jl
outsb
jbe
sbb
mov
cmp
adc
jne
jne
out
in
iret
or
les
pushf
jmp
hlt
jmp
jne
inc
cltd
mov
xor
or
and
lea
dec
icebp
mov
push
loopew
lcall
sbb
and
pop
inc
in
scas
and
es
sub
inc
nop
mov
jge
rcr
xchg
nop
inc
push
insl
mov
lods
push
cmp
push
gs
xor
pop
inc
dec
pop
popa
lcall
call
jnp
sub
push
dec
js
pusha
or
ljmp
out
ss
pop
repz
mov
jle
mov
dec
xchg
sbb
ds
ficompl
jg
mov
sbb
mov
and
sarb
mov
cltd
sbb
arpl
ss
ficompl
and
cli
aaa
xchg
xor
sub
into
scas
xorl
fisttpl
pusha
or
cmp
inc
pop
push
test
sub
jbe
in
lcall
sahf
ljmp
lahf
and
inc
fcoms
xchg
cmpsb
sbb
xor
xchg
lock
and
rclb
push
hlt
jbe
push
push
pop
or
pop
test
imul
popa
sub
jns
sbb
xchg
xor
xor
dec
inc
in
inc
cmpsb
inc
xor
push
jmp
jle
fstps
mov
pop
xor
push
into
pop
movsb
ficoms
iret
adc
sub
inc
and
pushf
call
stos
pusha
pushf
pushf
lea
jmp
stc
ror
neg
not
mov
dec
call
outsb
enter
mov
sub
pop
imull
mov
addr16
mov
notl
add
mov
pop
ret
add
or
inc
icebp
rorl
aad
adc
sub
mov
dec
cmpsb
nop
mov
mov
nop
inc
push
bound
fs
aam
inc
adc
inc
scas
jns
or
mov
std
push
push
add
xchg
cmpsb
andl
leave
jne
gs
xor
fs
insb
add
stos
and
call
in
out
cmp
dec
adc
ficompl
mov
bound
shll
addr16
push
add
jne
bound
push
fstpl
stos
mov
inc
outsl
sbb
xchg
cltd
out
imul
push
fcompl
adc
stos
insl
pop
lret
loopne
inc
in
sbb
jp
cs
and
andl
xchg
fbstp
adc
or
dec
aam
add
push
dec
xchg
adc
out
push
xchg
hlt
loopne
mov
bnd
shll
int
dec
sbb
or
fnstenv
jmp
andb
xchg
mov
outsl
data16
lret
js
addr16
push
mov
les
test
in
out
insl
dec
mov
push
push
popf
cmp
add
sub
sbb
rorl
pinsrw
cmp
jae
xchg
inc
cmp
mov
mov
jmp
ret
sbb
adc
subb
jnp
cmp
loope
mov
adc
cld
sbb
cmp
adc
repnz
mov
repnz
mov
inc
mov
mov
fcomps
out
sub
adc
in
mov
and
stos
gs
push
in
xor
pop
hlt
pop
inc
aas
add
pop
xchg
dec
jno
imul
and
popf
dec
sub
xor
pushw
jb
ret
mov
inc
and
movl
jmp
movb
lods
cmc
movb
clc
rol
movb
dec
call
mov
adc
push
into
sti
sarb
lods
daa
pop
push
dec
fildl
ss
mov
mov
sbb
dec
mov
pop
dec
stos
pop
jo
repnz
ret
hlt
and
jl
cmc
xchg
hlt
xchg
push
fld
or
xchg
add
cmp
inc
stc
fisubrs
sbb
push
das
mov
push
and
aad
xchg
dec
xorb
jge
ret
arpl
repz
aad
and
call
mov
bt
cmp
pushl
pushf
lea
je
bt
cmp
pushf
jmp
cmpsb
xor
fwait
loope
aam
sub
daa
inc
xchg
out
add
or
cmp
xchg
xchg
popa
movsl
dec
movsl
add
test
inc
out
rcrb
push
xor
dec
divb
outsb
ja
cltd
sub
lock
test
pop
movsb
loope
cmpsl
add
sahf
jp
rcll
cwtl
std
les
dec
cmp
mov
loopne
lret
imul
push
push
push
nop
add
lret
aas
stos
jae
mov
std
gs
inc
and
lods
pusha
pop
cwtl
dec
inc
inc
pop
pop
pop
dec
inc
pop
cwtl
pop
inc
dec
inc
dec
cwtl
dec
inc
pop
inc
dec
cwtl
cltd
pop
cwtl
pop
inc
dec
inc
pop
cwtl
inc
inc
dec
cwtl
push
pop
cwtl
inc
inc
pop
push
dec
pop
pop
cwtl
pop
inc
cwtl
dec
pusha
pop
cwtl
pop
dec
inc
push
inc
pop
pop
cwtl
inc
pop
inc
inc
cwtl
inc
pop
push
inc
push
inc
dec
cwtl
cltd
dec
clc
jl
push
sbbb
ret
add
adc
daa
sarb
inc
in
push
xchg
aam
pop
dec
sahf
cwtl
int3
cmp
cli
popa
ret
push
daa
shrl
lock
xor
mov
dec
push
shlb
jl
jmp
fdivrl
ret
rcrl
or
inc
addb
dec
out
mov
cmp
jno
dec
and
push
or
adc
lahf
sbb
sub
jge
movsb
push
pop
mov
mov
jle
inc
pop
test
in
gs
xchg
outsb
inc
or
jle
mov
je
cld
test
insb
cmpl
ret
lahf
xor
push
push
cmp
aad
fwait
sbb
arpl
les
psubd
aaa
pop
cmp
lock
push
or
sbbl
or
mov
mov
pop
add
dec
fldenv
jecxz
std
mulb
and
in
inc
adc
repz
sbb
out
loopne
push
adc
pop
sbb
jns
addb
into
nop
cmp
push
push
or
aam
sub
add
outsl
mov
dec
mov
out
rol
fimuls
dec
xchg
adc
mov
pop
lea
jns
cmpsb
lahf
ds
inc
cld
mulb
aam
inc
jle
cmpsl
sub
ficoms
cmp
scas
mov
loopne
pop
mov
jno
mov
fabs
fildll
mov
and
sub
jns
mov
adc
mov
fildll
test
addr16
sbb
dec
jp
fistps
sti
call
pop
mov
jb
loopne
fdivr
fsub
out
pop
test
outsl
xchg
sbb
shrb
arpl
icebp
xor
test
cmc
push
xorl
or
movsb
call
dec
pop
add
pop
cmp
cmpl
mov
and
imul
stos
roll
jmp
xchg
jne
icebp
mov
cmpsl
shr
pop
popa
stc
insl
push
fldt
in
leave
mov
mov
lcall
and
out
and
adc
mov
sbb
das
xchg
cmp
test
fidivs
cmp
xchg
jp
sarl
out
movsb
inc
or
mov
pushf
ljmp
fiadds
ss
dec
pop
andl
adc
pop
push
cltd
adc
icebp
cmp
xor
mov
cwtl
insb
adc
int
jb
or
inc
mov
pop
scas
test
popa
dec
leave
les
fsubr
xchg
sub
andb
jno
pop
push
dec
ficomps
push
pop
sar
xchg
sub
fnstsw
mov
icebp
inc
test
rcrb
jb
stos
and
in
pop
mov
cmc
imul
call
adcl
push
cmc
mov
fistpll
and
mov
inc
test
test
test
sbb
gs
test
sub
call
pop
xchg
rcrl
in
fldenv
lock
pop
rol
jmp
xor
jmp
pop
inc
cmp
jb
mov
and
mov
jmp
icebp
dec
mov
adc
sarb
add
fnstenv
popa
shlb
gs
pop
sub
ljmp
test
pop
fucomip
repz
test
iret
stc
mov
push
mov
fcomps
sub
inc
lahf
push
pop
dec
ret
fxam
adc
cmp
pop
cmp
push
fsubrp
out
pop
mov
addl
cwtl
insb
cmp
mov
out
outsb
push
adc
out
lcall
xchg
dec
pop
adc
push
lods
out
std
or
aaa
call
sbb
mov
jno
pop
and
or
pop
int3
dec
sub
push
lea
mov
imul
aam
push
out
out
testb
cmpsl
mov
sub
daa
xchg
mov
repz
icebp
jo
fidivrl
lds
mov
mul
sub
stos
nop
or
sub
leave
int
cmp
jbe
ja
shrl
int
push
mov
subl
mov
lea
jle
add
lods
push
sbb
insl
adc
mov
or
in
jae
andb
pop
sub
lods
or
outsb
lods
mov
cmpsb
sarl
adc
loop
inc
loop
jmp
push
cmpsl
push
pop
xor
sub
lcall
pop
and
fcompl
insl
mov
jmp
hlt
stos
mov
pop
inc
dec
xlat
arpl
std
lcall
cmp
sub
cmpsb
and
imul
inc
nop
call
int
pusha
push
mov
pusha
fcompl
shl
aam
call
out
sub
cmc
lcall
cmp
test
mov
push
dec
add
pop
push
mov
dec
lea
iret
shlb
data16
aad
nop
push
in
inc
xor
jmp
cld
dec
shrb
test
ljmp
pop
push
pusha
neg
mov
cmp
mov
xchg
aas
and
fdivrl
ret
subl
push
xchg
lods
call
test
jae
mov
adc
or
push
lock
pushf
gs
and
dec
pusha
xor
push
fsub
and
push
sti
adc
push
sub
lods
lods
fsubrl
xchg
add
pop
test
jecxz
push
mov
in
lea
jns
lcall
call
ljmp
and
iret
popa
test
popa
int3
outsb
inc
shlb
jecxz
aad
cmpl
out
and
xchg
and
push
mov
out
cmp
and
int
ljmp
imul
scas
lahf
js
dec
fst
out
in
add
cmp
add
les
xor
lods
pop
addr16
lret
add
sbb
addr16
push
mov
imul
imul
cmp
imul
loopne
jl
pop
add
stc
addr16
leave
pop
adc
stos
fucomi
mov
outsl
stos
or
pop
inc
xchg
xchg
push
xlat
xchg
cltd
pop
call
adc
movsl
imul
xor
hlt
mov
and
sbb
inc
insl
dec
outsl
fsubs
inc
insl
jnp
testb
mov
cmpsl
es
jmp
pop
push
imul
xor
and
ljmp
cmp
fucomi
fwait
cmc
pop
gs
push
call
xor
mov
mov
pop
fnstcw
js
jmp
scas
or
adc
mov
jb
mov
cwtl
add
dec
xchg
dec
jbe
data16
ss
xlat
mov
test
les
add
sub
pop
pop
xorl
imul
add
incl
inc
push
loopne
mov
aas
loope
icebp
xchg
sub
movsb
mov
jp
sub
sub
xchg
stc
imul
and
loope
fcomps
lea
fisttpl
sub
ss
rcl
pusha
stos
cmpsb
dec
hlt
sbb
or
adcl
dec
xor
imul
rcrb
mov
sub
loope
gs
cmp
pop
bound
ret
shll
add
xchg
outsb
sti
mov
xlat
inc
dec
xor
imul
lea
pop
outsl
mov
std
test
mov
cs
mov
cld
push
push
pop
push
mov
gs
sub
or
es
jnp
dec
inc
icebp
and
imul
push
cmp
lods
mov
mov
or
dec
mov
clc
mov
or
inc
push
mov
insl
sbb
push
xor
inc
hlt
jmp
fwait
mov
ljmp
pop
sbb
adc
add
ret
imul
cmp
imul
loope
or
sub
mov
xchg
pop
in
dec
push
push
mov
data16
push
imul
filds
js
in
dec
mov
aas
jns
xor
ljmp
test
xchg
imul
inc
sub
insl
lahf
push
leave
or
push
lcall
adc
dec
ss
mov
call
or
stc
stc
subl
sbb
lcall
and
mov
mov
cmpsl
sbbl
or
sbb
fs
jbe
cltd
ftst
lcall
andl
fs
gs
sub
sub
jnp
test
shl
in
or
jmp
stc
leave
and
stos
ljmp
cwtl
sbb
dec
mov
and
adc
sub
adcl
jbe
pop
aam
adc
push
fs
mov
movsl
jge
adc
sbb
or
cmp
in
das
cli
xchg
test
or
es
fwait
jb
fidivl
mov
mov
cmp
pop
clc
cmpsb
call
inc
dec
cli
inc
push
cmc
xor
pop
ret
mov
dec
movsb
arpl
or
clc
pop
cmp
pop
mov
inc
les
js
subl
fiaddl
inc
es
jae
dec
test
out
push
cmpsb
cmp
pop
mov
or
clc
dec
aaa
ret
push
mov
adc
xor
adc
dec
push
pop
in
dec
xchg
push
xor
mov
stc
push
or
dec
xchg
xchg
inc
clc
xchg
shlb
fistl
sbb
aaa
dec
xor
add
movsl
pop
pop
dec
lcall
cli
stos
shr
dec
and
and
imul
lcall
pop
xchg
psubusb
dec
sbb
cmp
sbb
xor
in
sub
sub
adc
pop
mov
pop
test
loopne
mov
and
fwait
add
ret
sub
dec
shrl
push
adc
cli
mov
std
mov
mov
outsl
gs
adcb
cmp
pop
hlt
dec
mov
push
scas
idivl
xor
add
xor
ret
fwait
push
dec
push
add
and
lret
cmp
cmp
and
push
jmp
dec
jmp
shrb
fmuls
cmc
test
mov
inc
daa
pop
dec
inc
inc
addb
pop
aad
movsl
jo
mov
lds
sub
jecxz
outsb
mov
mov
ss
stos
ror
shrb
push
add
push
jge
insl
pop
dec
jb
bound
leave
jmp
addr16
lock
or
push
subb
scas
daa
push
dec
inc
sub
cmp
testl
and
jecxz
push
fisttpl
jnp
cwtl
and
mov
sti
cmp
or
je
mov
insl
inc
sub
add
and
dec
in
mov
sbb
xchg
push
fisttps
cmp
in
dec
test
nop
das
in
bound
rcrb
inc
cmp
cli
and
lods
cmp
xor
xchg
and
dec
leave
or
jmp
dec
push
xchg
push
outsl
push
mov
addr16
or
in
or
insb
repz
ljmp
cmp
ljmp
int
lods
add
cmp
adc
dec
dec
std
cmc
ss
jecxz
cmp
outsb
dec
sub
imul
aas
sbb
cmp
out
mov
popf
test
jl
test
fdivr
push
pop
inc
popa
int3
lea
and
sub
sub
sbb
std
push
jb
outsb
nop
mov
xorb
out
std
dec
dec
pushf
popa
or
mov
cli
push
or
gs
leave
jo
or
sbb
mov
pop
mov
push
dec
push
sbb
cwtl
insl
fdivrs
scas
clc
movsl
dec
arpl
pop
pop
stc
cmp
movsl
cltd
push
dec
pop
sbb
cmp
xchg
mov
aas
loop
xchg
add
xor
lea
mov
test
mov
push
mov
push
xor
cmp
mov
mov
or
cmp
dec
or
mov
dec
mov
insb
jge
cli
sub
fcmovbe
jnp
aad
jno
mov
pop
mov
test
xor
dec
push
call
popa
or
sti
cmp
fistpl
jnp
scas
mov
cmp
or
sbb
call
fisubrs
stc
inc
xchg
in
aad
or
add
into
xchg
dec
mov
gs
sti
lret
in
out
push
mov
or
test
cwtl
or
enter
lods
and
inc
imul
xchg
dec
data16
daa
js
test
pop
fisttpl
pop
or
addr16
add
das
push
dec
dec
mov
cwtl
and
popa
lock
pop
adc
jmp
adc
xchg
lcall
fstp
xchg
or
sti
inc
test
jne
enter
or
jmp
ljmp
sub
mov
out
fldenv
cmp
rcrl
pop
leave
dec
xchg
xchg
or
icebp
lret
jp
cwtl
in
sbb
adc
imul
pop
loop
ja
outsb
and
sbb
push
xlat
cmp
pop
and
movsl
xchg
adc
xor
xchg
sbb
rcrl
hlt
test
outsl
pushf
pop
dec
and
dec
mov
lcall
dec
push
negl
add
sub
inc
test
fwait
in
jp
jne
cmp
dec
shl
push
pop
lock
inc
ja
dec
mov
cmp
or
pop
ja
dec
adc
mov
sub
stc
lds
sub
mov
mov
ljmp
push
sbb
sub
or
dec
daa
or
test
dec
movsl
aad
mov
notb
jo
jo
jecxz
mov
bound
lock
icebp
loope
imul
movsb
cli
sub
jl
out
fsub
mov
cmp
cmp
loopne
lcall
pop
clc
mov
cmpsl
pop
ret
mov
stc
xchg
mov
out
mov
subl
outsl
sub
insl
jmp
pop
in
push
sub
in
insl
das
outsl
aam
sbb
push
sbb
mov
repz
outsb
fyl2xp1
dec
sbb
dec
cmp
pop
cmp
cmp
fwait
scas
xor
imul
xor
adc
inc
shl
insb
add
push
push
xor
sub
gs
add
add
push
mov
cmp
stos
daa
insl
movsl
mov
imul
icebp
add
int
fcomps
jbe
mov
data16
stos
cmp
stc
sub
cmp
outsl
jnp
mov
leave
xorl
xor
div
imul
cmp
loopne
jo
add
mov
sub
inc
sub
popa
rcr
sbb
and
test
jae
mov
lods
sub
push
imul
call
test
lea
sub
jmp
clc
push
ljmp
movsl
adc
jno
sub
and
cmp
xor
inc
cmp
shll
mov
mov
in
cmp
clc
push
ret
repz
xor
std
mov
cmp
cmp
loope
add
jp
cmp
mov
pop
jb
or
insl
xchg
repnz
imul
rcl
adc
jb
ljmp
mov
fldenv
aaa
mov
jg
jae
fsubr
sub
lea
fucomi
insl
jmp
dec
or
loopne
dec
scas
insl
pop
pop
outsl
dec
dec
push
shrl
dec
dec
dec
cmp
xor
push
inc
inc
js
mov
sub
push
cmp
mov
mov
jg
stos
lods
sub
out
stos
fcoml
mov
test
inc
push
cwtl
imul
cli
push
fcmovbe
jmp
push
or
or
test
dec
jl
insb
xchg
push
mov
sub
lret
es
inc
xchg
mov
inc
xor
ljmp
fs
mov
dec
sub
addr16
xlat
notl
lods
dec
pop
jno
stos
mov
hlt
cmp
rorl
push
insl
jne
sbb
xchg
sub
pop
sub
push
cmp
jmp
imul
xchg
mov
lahf
arpl
jno
cmpsb
jae
push
call
imul
mov
in
dec
sbb
mov
call
outsb
js
in
stc
insl
push
test
jno
andb
sub
sub
add
pop
outsb
fwait
sbb
fwait
push
inc
and
sti
mov
xor
or
inc
push
xchg
pop
in
ds
jno
data16
insb
pop
cli
sub
dec
cmp
and
mov
loope
mov
cmp
imul
ss
idivl
hlt
push
cmpsl
std
mov
pop
aaa
mov
lret
jbe
push
aas
xlat
push
pcmpeqw
push
xchg
leave
aam
orb
inc
sbb
aas
dec
leave
xor
push
mov
and
and
sub
xchg
jno
pusha
cmp
pop
jo
dec
pop
jmp
pop
jl
push
dec
jo
pusha
jbe
dec
popa
testb
icebp
xor
and
imul
inc
push
ss
pop
xchg
pop
movsb
jle
es
movsl
movsl
stc
data16
lds
mov
adc
insb
ds
sbb
xlat
jmp
push
inc
and
inc
pop
enter
iret
std
cmp
sbb
pop
jnp
stos
jno
jge
jae
xlat
push
push
mov
pop
out
es
data16
push
adc
imul
scas
sbb
adc
cmc
dec
xor
sbb
sbb
cmp
jbe
jmp
jp
jae
test
leave
stos
xlat
fldt
test
arpl
lret
das
pop
fldt
fs
stc
dec
push
sub
outsl
cltd
xchg
xor
imul
xchg
leave
push
repz
pop
push
lea
movsl
push
flds
cmpsl
sub
adc
sub
lret
push
xchg
xchg
in
scas
es
inc
sub
dec
call
dec
cli
dec
cmp
add
jmp
stc
fldt
xchg
mov
mov
arpl
in
arpl
push
pop
inc
aad
call
dec
sbb
cmp
sub
sbb
or
xlat
xchg
pop
inc
pop
mov
stc
jmp
popf
pop
cmp
es
mov
and
pusha
jg
jns
sub
sub
mov
add
xor
aad
test
jmp
and
shll
subl
jns
out
jmp
jmp
popf
insb
jo
sub
clc
insb
hlt
adc
cmp
jae
fmull
leave
or
and
scas
sub
test
cli
pop
jbe
imul
testb
sub
fldenv
mov
mov
nop
pusha
in
leave
dec
mov
xchg
pop
pop
add
inc
mov
cmc
outsb
mov
jns
mov
out
pop
scas
lds
aad
pushf
out
jb
cmpsb
adc
cmpsb
and
sub
cmc
in
add
test
jmp
and
loopne
sbb
push
jmp
jg
clc
sub
pop
jo
fiadds
fisttpl
mov
enter
mov
dec
push
stos
fnstenv
ljmp
mov
lret
inc
jo
iret
es
cmp
in
and
pop
js
rcll
mov
stc
mov
cli
or
jno
sub
imul
pusha
fnstenv
cmpsb
dec
sub
imul
or
mov
mov
jno
xchg
inc
cmp
movsl
loop
mov
out
inc
adc
dec
jbe
pop
dec
sub
in
mov
fsub
in
mov
movsl
dec
pop
in
divb
inc
daa
test
ja
mov
lret
mov
cmp
sbb
cli
sub
fiaddl
lock
repnz
lret
push
out
push
push
les
push
incb
jmp
adc
call
mov
xor
daa
jb
in
pop
adc
mov
lock
pop
fistps
dec
fisttpl
dec
sub
cmpsl
xlat
adc
mov
dec
bound
jae
sbb
outsl
cwtl
addl
sbb
xlat
daa
xor
push
inc
jnp
stos
jmp
add
sti
or
pop
push
and
jmp
fs
dec
hlt
in
scas
and
jl
inc
sbb
mov
pop
sub
xor
push
and
push
and
cmpsl
inc
ss
test
jp
popa
aas
sbb
pop
pop
inc
dec
pop
jo
hlt
dec
or
stos
sub
es
sub
push
addr16
sub
cli
pop
jmp
movsl
lret
push
xor
ljmp
dec
es
addr16
pop
enter
push
jmp
in
pop
bnd
mov
dec
jne,pn
push
imul
mov
ljmp
stos
clc
gs
lods
sub
icebp
scas
sub
ljmp
adc
sbb
dec
and
inc
mov
ror
sbb
shll
test
inc
sub
inc
repnz
inc
sbb
jnp
and
int3
mov
sub
xchg
push
and
dec
cmpsl
sub
insb
aas
out
enter
pop
fsub
add
daa
push
out
cmc
subl
test
push
hlt
xor
dec
xchg
loopne
scas
push
pop
das
fldt
insl
xor
cmp
xor
pop
mov
jmp
sub
sub
outsl
arpl
dec
dec
push
jmp
sub
pusha
mov
cmp
pop
pop
inc
xchg
lret
stc
jbe
aaa
stc
push
stc
xchg
stc
pop
sub
in
pop
push
sbb
pop
daa
xor
movsl
xlat
pop
neg
sbb
or
pop
pop
mov
popf
cmpsb
pop
shlb
lock
push
or
in
mov
je
push
testl
insb
jae
data16
pop
test
ljmp
xor
test
pop
fsubs
xchg
add
inc
in
in
xor
pop
shlb
incl
adc
push
loopne
or
int
mov
push
jge
push
jecxz
test
pop
pop
push
jno
mov
and
inc
popa
and
out
cmovb
insl
jo
sbb
test
mov
gs
dec
cltd
into
cs
sub
lds
imul
mov
addr16
stc
add
pop
sub
or
and
faddp
cmp
sbb
dec
sub
push
pop
adc
pop
jmp
fcompl
sub
sbb
aam
push
rcrb
or
jmp
lret
dec
push
mov
dec
jmp
gs
aad
out
xor
or
lea
rcll
cmc
data16
out
jb
rorl
fldenv
pop
add
leave
sub
jno
insl
je
sbb
jne
add
add
imul
and
std
mov
push
or
imul
push
imul
pop
pop
cmp
and
inc
xor
push
clc
mov
jno
test
mov
or
push
sub
pop
or
imul
or
push
iret
mov
inc
and
cwtl
stos
cmp
jnp
test
in
inc
cmp
fistpll
pop
dec
cmpsl
sub
in
pusha
out
push
loopne
pop
into
dec
mov
cmp
jns
sub
or
jmp
and
dec
cltd
sub
testb
aas
popf
cli
or
and
dec
jno
sahf
add
push
cwtl
fldpi
cmc
in
bound
push
daa
xor
and
nop
xlat
dec
pop
xor
mov
daa
cmpsl
mov
mov
mov
jmp
jno
call
es
das
test
shl
daa
inc
push
repnz
call
jmp
xor
sub
fisubl
ljmp
jmp
cmpsb
inc
sub
outsb
xchg
mov
repz
pusha
push
out
stos
test
add
daa
lods
cmp
jb
sub
mov
mov
out
push
das
out
mov
in
sub
out
imul
sub
jae
in
push
daa
test
xchg
cmp
pop
mov
and
inc
call
pop
mov
icebp
out
stos
push
das
callw
sahf
test
add
and
xchg
outsl
xchg
mov
mov
and
xor
out
das
call
jo
cmc
and
xor
movsl
push
scas
xlat
call
pop
sub
xor
data16
cmp
pusha
pop
test
xor
add
push
stos
test
ljmp
push
loope
cwtl
lods
add
push
enter
dec
jo
sub
jp
lret
js
lds
mov
mov
mov
lods
mov
mov
aaa
arpl
inc
call
lods
dec
addr16
sub
adc
and
xchg
call
es
in
xor
jmp
addr16
in
out
sub
jmp
stos
insl
add
pop
fisubl
test
dec
out
jno
call
ljmp
fidivrl
test
in
leave
out
add
and
jnp
inc
pop
imul
lods
imul
push
in
push
out
pop
jo
sub
test
in
push
xor
jmp
cmpsl
sub
lds
lea
pop
dec
stos
jmp
loope
dec
sub
call
pop
mov
stos
in
outsl
call
pop
scas
fistpl
jmp
xor
icebp
xor
xor
daa
dec
sub
jmp
push
adc
popa
jmp
test
add
int
call
inc
stc
mov
in
aam
sub
jo
jb
test
mov
pusha
xor
jmp
and
test
xor
jmp
jmp
dec
repz
call
cltd
stos
and
gs
xchg
xor
cmpsb
sub
jmp
stos
cmpsb
xchg
xor
call
pop
jo
sbb
movsl
push
repnz
xchg
call
imul
repz
das
insb
movsl
mov
test
jmp
push
pop
in
sub
jg
dec
jo
pop
sub
in
test
add
outsb
movsb
sub
lods
dec
fs
mov
stos
xchg
pop
sub
call
fsts
sub
in
pusha
jns
test
or
shrl
xchg
push
lock
icebp
gs
inc
xchg
jmp
in
inc
pop
cmpsb
inc
jb
mov
in
in
adc
je
rcl
jmp
xchg
daa
mov
mov
out
sahf
jo
jns
in
not
adc
sub
je
scas
call
iret
repz
adc
pushf
xchg
jmp
xchg
mov
jo
jecxz
test
xor
movsb
mov
inc
test
mov
outsl
daa
mov
xchg
clc
outsb
jmp
sub
mov
in
das
jno
or
test
pop
jo
mov
add
sub
out
frstpm(287
movsl
push
jo
ret
xacquire
inc
insl
jle
out
mov
inc
popa
sar
and
cmc
and
icebp
leave
adc
xchg
cmc
ds
add
test
xor
fs
jecxz
pop
jge
stos
add
js
sub
call
les
cltd
cmc
mov
mov
adc
adc
in
repnz
imul
lods
jae
sub
dec
jg
mov
je
dec
jnp
dec
mov
sbb
xor
outsb
addr16
xor
add
les
and
movsw
and
out
jo
clc
pusha
pop
sub
inc
add
push
sub
sub
aaa
xor
fistl
jae
cmc
pop
pop
sub
inc
and
xor
jmp
jmp
inc
jb
pop
jp
scas
shrl
daa
out
repnz
jp
sub
push
lock
mov
in
pop
in
insb
jo
mov
cmp
pusha
das
pop
js
pushf
jge
push
in
lock
adc
mov
daa
fs
loope
cmpsb
iret
ljmp
add
call
sub
movsb
aas
stos
enter
jecxz
lret
mulb
cmpsb
xchg
xchg
jno
jmp
call
les
imul
clc
inc
outsl
test
popf
cltd
push
movsb
cltd
xor
dec
sbb
aad
lods
xchg
push
fmuls
xchg
lcall
pop
pop
sbb
and
mov
out
fsubrs
xor
fcmovnbe
int
inc
push
insb
or
push
jmp
dec
jecxz
xchg
mov
test
mov
lds
dec
inc
push
insl
or
aam
xchg
stos
imul
fndisi(8087
add
mov
add
sbb
test
mov
push
addb
addr16
into
jae
flds
ljmp
pop
inc
xor
imull
xchg
imul
xchg
pop
aaa
imul
es
test
lahf
imul
mov
movsl
jbe
out
mov
out
adc
pop
sub
jae
mov
stos
test
mov
int
adc
inc
push
sbb
ljmp
xchg
mov
icebp
out
lret
mov
test
xor
xchg
cmp
mov
repz
xor
xchg
inc
mov
xor
and
inc
test
cmp
inc
mov
dec
push
dec
inc
repz
flds
sti
add
mov
push
fwait
out
cli
mov
jecxz
mov
sub
movsl
add
pop
insl
in
arpl
mov
std
mov
shrl
pop
daa
lods
pop
mov
repz
jmp
dec
fisubs
cmp
jmp
pop
int
cmp
je
xor
ss
shr
push
or
cmp
repnz
dec
add
in
repz
iret
xchg
cld
mov
adcl
push
xchg
gs
idivl
in
into
insl
mov
das
sub
sbb
test
sub
cmp
and
repnz
mov
and
das
flds
neg
dec
sub
mov
daa
call
insl
sbb
dec
jns
out
movsl
cltd
repnz
pop
insb
and
stos
gs
or
mov
inc
push
data16
and
sub
pop
in
push
lock
mov
or
movsl
cmc
lock
and
ja
jbe
push
push
pop
outsl
das
movsl
gs
mov
mov
pop
das
gs
sub
icebp
lods
pop
das
mov
pop
dec
test
es
and
icebp
outsb
push
data16
cmp
inc
pop
fs
stos
xchg
ljmp
inc
repnz
test
dec
in
addr16
add
insb
mov
int
dec
adc
xor
idivl
push
or
sub
dec
fldt
cs
test
xor
xchg
movsl
fldenv
jno
shlb
cmp
mov
push
lea
out
xor
ficomps
push
fldenv
xchg
divl
sbb
or
fdiv
pop
mov
sub
dec
lock
cltd
sub
int
jbe
mov
dec
enter
or
imul
sub
out
leave
stos
aam
icebp
mov
mov
in
jo
in
xor
jmp
xchg
pop
adc
mov
or
stos
dec
jno
mov
in
sub
sub
stos
jmp
ljmp
adc
mov
movsl
out
gs
cmp
jle
test
mov
icebp
adc
data16
sub
jb
cmpsl
stc
pop
push
into
mov
lret
adc
push
ret
xor
mov
pop
push
push
xor
leave
loopne
test
jb
sub
int3
imul
leave
sub
pop
jmp
stos
imul
fsub
lock
and
loope
out
shlb
or
jns
ss
es
mov
cmp
jmp
push
or
movsb
xlat
sub
push
aaa
add
lock
sbb
es
dec
in
enter
xor
enter
in
test
mov
mov
loopne
jbe
and
fs
mov
cmpsb
in
aas
mov
mov
push
icebp
ljmp
addr16
and
jecxz
in
xor
sub
mov
sti
in
sub
jl
push
cmc
mov
dec
lods
push
lods
loopne
in
pop
fs
xor
add
mov
aad
vaddss
mov
and
movsb
mov
mov
das
lock
ss
jbe
data16
in
cmpsb
das
addr16
add
mov
pop
inc
adc
notb
sub
movsl
cmc
in
cmp
andb
jg
icebp
sub
sub
fld1
cmpsl
pop
stos
push
cmc
and
in
push
pop
insb
and
push
jmp
push
movsb
inc
and
xor
xor
push
shlb
push
cmpsl
test
xchg
out
dec
in
xor
jo
lock
xor
jo
xchg
cmp
cmc
pusha
in
scas
pusha
mov
xor
std
inc
sbb
or
bnd
test
in
sub
test
and
push
pop
push
rcl
pop
in
cmpsb
in
xor
cmp
cmpsl
push
scas
fnsave
ss
jbe
insb
and
sub
test
jnp
fnstcw
in
out
ss
lods
enter
sub
dec
insl
es
add
fwait
adc
movsb
in
in
out
add
dec
mov
or
inc
in
xor
in
enter
xor
add
sub
dec
fisubrl
pop
out
fnstenv
push
je
inc
lret
arpl
ljmp
or
and
mov
cmp
cmpsb
or
or
test
pop
jmp
mov
inc
pop
stos
out
push
je
inc
outsl
push
bound
push
add
push
daa
mov
push
ss
push
pop
imul
cmp
jl
fxtract
push
xlat
aad
xor
adc
je
mov
nop
jmp
out
add
dec
cltd
pop
in
mov
and
sub
loopne
xlat
in
movsl
in
mov
mov
push
push
mov
and
stos
push
and
div
repnz
repz
loopne
fs
out
test
inc
cmpsb
shlb
movsb
out
add
dec
dec
inc
fistpl
ja
jo
cs
and
inc
jmp
push
push
pcmpgtd
dec
mov
cmpsl
jl
mov
arpl
xor
dec
movsb
sub
or
jbe
xor
data16
test
push
cmp
xor
cmp
test
xor
popa
and
push
pop
fstpl
adc
cmp
test
mov
out
jbe
add
and
xor
xchg
mov
daa
xor
shrb
icebp
xor
cmp
pop
ja
xchg
dec
shl
sub
sub
repnz
test
inc
inc
outsb
std
test
sub
inc
dec
in
outsb
fsubr
adc
sub
mov
dec
mov
and
sub
scas
aad
inc
sbb
sub
jecxz
mov
popa
adc
outsl
adc
pop
enter
push
enter
jno
in
mov
enter
in
mov
sub
in
out
cmp
call
pop
jno
pop
inc
xchg
xlat
xchg
push
es
inc
popa
movsl
in
cwtl
fucomp
js
test
fwait
xor
scas
aaa
pusha
push
idivl
jae
sub
sbb
test
sub
and
shll
mov
or
jns
mov
adc
push
cmpsb
movsl
movsb
test
push
and
xor
push
in
add
push
in
xorb
scas
insb
fists
cmp
sub
in
stos
test
imul
movsb
lock
push
ss
xor
orl
sub
cmc
dec
cmpsb
dec
jae
in
enter
jb
mov
push
std
sbb
xor
jnp
out
scas
dec
inc
push
push
fistl
ss
out
in
in
mov
out
mov
leave
mov
icebp
stos
out
daa
out
add
dec
dec
cmp
ss
aas
sub
fs
push
sbb
jb
loopne
enterw
mov
mov
add
sub
lds
sub
in
enter
das
cmpsb
pop
mov
push
push
loopne
or
add
lods
dec
test
pop
icebp
test
pop
xor
sub
sub
test
ret
fs
mov
jb
jae
repz
dec
mov
xlat
ss
das
movsl
in
mov
dec
mov
ret
add
nop
jge
addr16
aas
push
mov
test
cmp
dec
insl
test
jnp
cmpsb
xor
test
jae
in
enter
jb
sbb
repnz
ret
and
push
lods
jmp
out
cmp
ficompl
inc
lods
pop
test
push
in
imull
mov
and
lds
adc
ljmp
call
and
dec
fwait
data16
les
mov
daa
out
out
add
mov
pop
jbe
pop
push
outsl
fisubrl
enter
scas
cmpsb
jmp
mov
cmpsb
fisttpll
push
fsubrp
jle
bound
dec
push
movsl
out
call
dec
out
xor
sti
in
jmp
cmp
and
fistps
adc
cmpsl
push
mov
cmc
scas
cmpsb
mov
xchg
dec
out
mull
xlat
xchg
popa
push
fsqrt
cbtw
xlat
out
pusha
jo
mov
call
push
daa
mov
test
xor
and
push
repz
mov
inc
cmpsl
sub
mov
outsl
in
in
add
dec
mov
add
add
fsub
and
movsb
test
ss
movsb
cmpsl
loopne
addr16
cmpsb
cmpsb
test
es
or
sub
xor
add
ss
push
jmp
out
jno
jmp
mov
inc
add
sub
inc
or
gs
and
outsl
mov
ja
push
lds
pop
add
les
loope
xor
cmp
lock
mov
in
outsb
adc
add
push
jno
movsl
add
mov
add
cmpsl
sbb
daa
arpl
jno
repz
dec
mov
movsl
stos
xlat
hlt
in
icebp
in
xor
test
lock
stos
ja
mov
int3
dec
in
fisubrl
pop
in
lea
out
jbe
hlt
adc
call
dec
sub
sbb
popa
and
add
filds
dec
pop
pavgw
sub
jecxz
mov
fmuls
cmc
xor
cmp
cmp
das
pop
scas
mov
insb
pop
push
add
jmp
push
jmp
mov
cmp
aaa
pop
jge
xor
movsl
fs
scas
xlat
sahf
enter
das
enter
testl
cmpsl
sbb
ss
imul
jo
dec
repnz
sub
fldt
pusha
sub
test
inc
pusha
push
das
xchg
jmp
jmp
sbb
cld
xor
data16
cmpsb
aaa
pop
out
in
jmp
test
movsl
out
xor
in
dec
push
les
mov
cwtl
pop
push
cmp
repnz
dec
adc
jno
xor
xor
scas
outsl
ja
mov
dec
leave
push
push
dec
repnz
frstor
push
in
clc
cmpsl
outsl
stos
add
in
divl
pop
jbe
xchg
xchg
dec
or
sub
sub
stc
leave
inc
sub
xchg
or
test
or
pop
movsb
push
mov
mov
fmuls
xchg
fsubs
pop
stos
ja
fmul
jge
aad
shr
sbb
movsb
movsl
sub
das
lret
daa
fcmovu
aad
push
sub
loope
cmp
cs
test
gs
aam
adc
mov
add
mov
scas
sub
and
add
lret
jmp
xor
and
in
test
loope
cmp
sbb
or
int3
dec
pop
gs
cmp
daa
xchg
cmpsl
int
sub
dec
call
pop
inc
aad
fsubr
iret
add
xor
stos
xor
ljmp
mov
test
hlt
pop
popa
xor
imul
daa
test
pop
in
imul
and
das
add
fstpl
movsb
pusha
es
sub
add
xchg
push
testb
mov
dec
inc
dec
addr16
mov
stos
imul
shr
test
mov
imul
push
pop
mov
fidivl
mov
sub
imul
dec
xor
inc
adc
xchg
dec
xor
shlb
pop
xchg
test
sub
in
hlt
lds
xor
neg
jne
dec
sub
out
xchg
inc
daa
push
jo
xor
shl
ret
add
push
sub
leave
mov
es
dec
fldcw
xlat
pop
test
mov
movsl
adc
adc
mov
scas
push
inc
jo,pn
fisttpll
lods
lods
in
adc
xchg
pop
cmc
sub
lods
xor
lret
bound
lret
xor
adc
push
xlat
jno
loopne
add
push
loopne
dec
das
adc
adc
inc
and
xchg
pop
outsl
xchg
imul
sub
sub
test
aam
adc
dec
hlt
imul
and
and
sahf
push
jecxz
push
pop
sub
mov
stc
out
jbe
cmp
lock
xchg
sub
push
lock
movsl
xlat
ss
push
and
fisubrl
add
imul
pusha
test
adc
pop
aad
daa
xor
add
push
cmp
adc
les
mov
cwtl
or
test
adc
test
fcomi
dec
fs
xor
adc
mov
cld
and
stos
sub
outsb
das
mov
cmpsl
mov
xor
in
insb
das
lods
lea
mov
sub
adc
jbe
jmp
pop
imul
jmp
das
add
test
xchg
cmc
ret
pusha
mov
inc
int
std
test
xchg
cmc
mov
xchg
cmc
pop
cmp
xor
jmp
inc
lahf
fcmove
test
xchg
cmc
scas
cmp
das
cld
inc
in
fisubrl
cmp
pusha
jle
pop
das
dec
inc
fisubl
push
cmp
pusha
in
fisubrs
inc
sahf
fcmove
test
xchg
cmc
scas
cmp
das
arpl
ficoml
je
xor
in
aad
adc
adc
aam
add
pusha
mov
inc
pop
fisubrl
sbb
sub
ficomps
jo
dec
push
mov
fistpll
out
das
into
stos
scas
add
dec
dec
mov
pop
js
aas
das
das
stos
pop
outsl
fiadds
adc
int
inc
push
push
stos
jle
jo
dec
pop
mov
aas
js
icebp
icebp
jbe
pop
call
push
add
dec
dec
mov
pop
js
aas
out
xor
js
add
jo
push
adc
xchg
xor
lcall
xchg
xor
lcall
fcmovnu
test
add
dec
jl
xor
in
js
int3
das
lods
stos
mov
pop
mov
cmp
adc
add
dec
sbb
xor
pop
js
insl
das
sbb
xor
fidivrs
add
jo
in
mov
lcall
jle
in
mov
lcall
pop
jle
in
mov
stos
or
xchg
xor
in
aam
cmpsb
add
dec
fistpl
ljmp
or
in
push
daa
rcr
jo
sub
daa
je
pop
loop
xchg
or
test
dec
or
and
and
xor
push
sub
stos
in
add
sub
and
and
ljmp
ljmp
xchg
adc
inc
dec
sbb
and
in
sub
xchg
cmpsl
out
fcmovb
insl
rcrl
jo
pop
jo
popf
inc
arpl
mov
xor
fs
add
imul
xor
pop
cmp
adc
ja
mov
dec
daa
out
dec
mov
pop
mov
cmpsl
push
test
icebp
jecxz
int3
jg
add
sub
fs
loopne
pop
xchg
shl
push
ja
jno
mov
dec
xor
test
hlt
test
cwtl
push
mov
jo
and
out
pop
imul
and
xor
pop
insl
push
fdivs
and
aam
ljmp
aam
xchg
adc
out
push
or
iret
loopne
xchg
sub
test
push
iret
movsb
cmpsb
and
push
dec
dec
loopne
pop
lret
sub
sub
outsb
push
es
mov
add
nop
in
push
cmp
pop
push
in
fs
dec
push
pop
or
sbb
jecxz
ljmp
xchg
adc
addr16
push
fs
mov
sub
movsl
cmp
pop
call
in
repz
add
inc
ret
dec
fwait
and
pusha
pop
repnz
xchg
push
aad
lret
movsb
pusha
push
lods
push
add
scas
fnstsw
adc
push
or
outsl
jge
lds
stos
divl
ret
dec
pop
packuswb
mov
inc
stos
cmpsl
mulb
pop
sub
inc
mov
mov
sbb
mov
push
icebp
ror
adc
inc
sub
mov
adc
sahf
inc
data16
call
in
fldenv
mov
addr16
adcb
push
jno
out
xchg
mov
negb
pop
mov
movsl
test
enter
jno
sub
and
sbb
test
and
aad
xchg
push
gs
lret
sub
jo
sbb
pop
jmp
sub
fildl
ret
out
call
aad
mov
pop
xor
jg
mov
testl
jmp
and
jecxz
in
pop
sub
xchg
push
push
adc
xor
xlat
xchg
add
sbb
jle
out
inc
inc
sub
jmp
arpl
fcompl
test
adc
push
cmp
sub
test
lret
xor
inc
sbb
pop
pop
fcomi
ljmp
call
inc
dec
fidivl
sub
test
xchg
ljmp
icebp
sub
stos
push
or
test
shrl
sub
das
jb
stos
sub
ss
and
and
data16
arpl
in
fs
mov
adc
cltd
dec
jl
je
xchg
pop
cs
sub
push
mov
sbb
lock
push
xchg
push
mov
push
add
movsl
dec
stos
inc
push
dec
movsl
jmp
cmp
out
jno
filds
movsl
pop
repnz
cmpsl
pop
mov
lods
lahf
out
shl
out
sub
mov
mov
sub
mov
repnz
leave
add
sub
test
push
shr
sub
mov
xchg
nop
mov
cmc
test
push
cmpsl
xchg
or
fwait
stos
jae
inc
pop
in
ljmp
test
stos
or
imul
jmp
xlat
pushw
adc
cs
iret
xor
jbe
out
in
aad
or
in
movsl
rcrl
sbb
push
or
dec
sub
pop
inc
push
mov
jbe
outsl
aad
stos
push
shr
sub
jecxz
or
jmp
stos
fisttps
pop
outsl
lods
stc
idivl
test
pop
mov
loopne
mov
or
push
mov
adc
push
inc
sub
push
mov
test
sub
imul
or
mov
jo
pop
fs
mov
dec
adc
and
dec
les
daa
lods
pop
insb
lods
arpl
in
test
out
test
mov
or
stos
test
dec
addr16
mov
enter
xchg
mov
dec
fldt
sub
push
jo
ret
dec
push
xchg
xchg
sbb
push
jmp
xor
jo
cmp
addr16
fnstenv
call
f2xm1
test
mov
jg
push
fnstenv
call
test
jmp
fs
test
loope
test
loope
sub
mov
fs
stos
jg
xor
push
fbstp
lods
outsb
adc
scas
inc
inc
sti
test
daa
arpl
pop
shl
sbb
xor
hlt
jno
cs
adc
stos
cmp
xchg
scas
mov
push
jmp
sub
test
outsl
or
pop
inc
outsb
push
out
mov
xchg
lea
cwtl
out
movsb
scas
out
cs
in
adc
dec
push
inc
add
dec
fwait
pop
mov
jge
in
xor
outsb
fsubrs
adc
push
loope
out
sub
xor
jno
leave
push
out
cmp
roll
fs
jns
lahf
jae
push
leave
xchg
scas
ja
inc
push
pop
xchg
dec
push
cwtl
jo
pop
add
adc
or
loope
cmp
jnp
mov
fsubrl
add
lea
cmp
call
lret
cld
scas
pop
mov
gs
jmp
test
jns
test
shrb
fldt
sub
mull
fdivl
loope
ror
lods
jb
jae
dec
das
gs
inc
jecxz
das
ret
test
mov
mov
stc
das
fists
fisubrl
pusha
inc
jbe
adc
insb
inc
dec
in
stos
inc
ja
sub
testb
fs
popa
push
pop
shr
jecxz
sarl
adc
sbbb
mov
cmc
mov
xor
sbb
sub
arpl
stos
mov
loop
inc
inc
xchg
mov
push
into
push
mov
mov
mov
dec
jb
dec
mov
subl
andl
outsb
in
fisttpl
gs
add
xchg
es
rdpmc
cmpsl
inc
icebp
jl
adc
inc
lcall
cmp
sub
in
scas
or
pusha
xor
push
sbb
out
adc
insl
cmp
ds
push
sbb
enter
cmp
and
in
stos
daa
ljmp
adc
mov
push
imul
inc
jnp
mov
inc
divb
push
js
cmc
xchg
loope
cmp
hlt
and
insb
pop
out
mov
mov
jmp
shlb
xchg
movsl
lcall
cmc
push
sub
or
pop
jmp
cli
push
or
cmc
clc
in
and
inc
jmp
inc
xchg
jmp
gs
cmp
mov
shlb
lret
dec
and
lcall
js
inc
int3
loop
out
pop
and
push
xchg
hlt
clc
sub
repz
xlat
mov
aas
inc
add
mov
shlb
sub
adc
pop
sbb
push
sub
pop
dec
rcrl
inc
dec
jp
push
sub
mov
imul
push
cmp
or
cmp
xlat
das
mov
in
sub
movsl
mov
adc
push
push
add
loopne
jg
lods
cmc
leave
out
dec
insb
popf
jmp
test
push
inc
call
push
mov
ja
push
and
mov
push
mov
pop
mov
xor
insl
sub
in
add
jno
rcrl
es
dec
fdivrs
int3
test
out
mov
mov
sub
movsl
push
pop
mov
aaa
out
pop
cmp
inc
js
and
sub
cmp
sub
push
cltd
jp
sarb
icebp
pop
sar
dec
js
jns
pop
pusha
cmpsl
outsb
in
enter
jmp
cltd
ljmp
out
imul
mov
insb
cli
dec
js
das
pop
sub
addr16
inc
mov
or
pop
cmp
call
dec
cwtl
inc
lret
mov
and
subb
imul
icebp
call
xchg
out
leave
dec
out
mov
enter
test
jg
sub
cmpsl
dec
fs
es
call
sbb
into
push
push
sti
gs
out
shrb
fidivs
pop
fsubrl
mov
std
xlat
bound
imul
mov
and
inc
sub
pop
call
js
int
sub
mov
repnz
mov
cmp
pop
or
outsl
les
xor
or
jo
cmp
dec
icebp
ljmp
xor
test
ret
sub
in
cld
inc
sti
loop
cmp
dec
in
adc
sti
sub
jo
lds
inc
out
push
pop
gs
cmp
inc
push
sub
sub
clc
daa
and
movsl
adcl
and
clc
inc
push
and
int3
loop
je
nop
popa
or
cmp
pop
popa
jecxz
test
test
gs
out
in
inc
pop
imul
dec
sub
lcall
sbb
dec
xor
xchg
mov
pusha
loope
jmp
stos
stos
in
mov
enter
gs
outsl
in
xlat
test
mov
stos
xchg
push
popa
mov
mov
or
inc
lcall
xor
and
dec
jle
lods
push
cmp
dec
push
inc
mov
xchg
fimull
into
fsubrs
mov
xor
xchg
enter
push
je
cmpsb
stos
add
pop
sub
stos
lret
add
out
insb
cld
inc
sub
add
lock
sbb
gs
xchg
into
mov
adc
in
sbb
cmp
dec
test
cmpb
and
fimull
jge
xchg
das
orb
outsl
adc
mov
aad
jae
scas
dec
cmp
dec
icebp
repnz
xlat
dec
or
dec
aaa
mov
popa
mov
and
push
fwait
lods
inc
or
mov
out
xor
inc
sub
fwait
cli
call
dec
clc
dec
jb
ljmp
xchg
loope
push
lret
insl
and
adc
outsl
mov
dec
sub
jg
mov
jo
push
in
mov
jp
pop
dec
lods
pop
cwtl
cmpb
pop
sahf
cwtl
inc
lock
jb
mov
jnp
dec
pop
std
sbb
fstl
cmpsl
scas
out
mov
daa
mov
and
jbe
pop
push
sub
lret
out
fldenv
pop
rcrl
stos
test
push
dec
lret
lret
adc
jb
test
icebp
add
inc
popf
or
inc
leave
jecxz
imul
push
lock
js
out
scas
mov
outsl
imul
mov
mov
mov
push
sub
out
inc
or
cmpsb
jo
push
pusha
or
lods
mov
jo
adc
outsb
loop
int3
ljmp
mov
push
fcmovnb
fnstenv
sub
sub
loopne
imul
xchg
lods
or
add
sub
xor
movntq
dec
xchg
mov
mov
test
cmpsl
mov
stos
mov
xor
cmp
cmpsb
arpl
fdivl
jmp
in
andb
std
mov
hlt
insl
cwtl
cwtl
rcrb
inc
loope
inc
movsl
rol
cmp
out
cmp
and
add
dec
jl
mov
fcom
lods
cmc
outsl
daa
or
pop
sbbb
mov
and
xor
push
sub
xchg
pop
mov
mov
out
pop
xchg
adc
mov
jmp
inc
jno
sub
icebp
inc
pushf
data16
cmpsl
or
sub
sub
ds
repnz
push
stos
int
or
ds
hlt
or
mov
nop
aad
mov
push
sub
js
ja
mov
and
outsl
push
cmpsl
int3
inc
xlat
inc
pusha
sbb
ljmp
xchg
lods
adc
jo
inc
popf
xchg
mov
outsl
push
aaa
pop
sub
and
jne
hlt
loopne
ljmp
sub
mov
fidivs
push
hlt
inc
stc
jns
fisubs
push
mov
or
rclb
loopne
outsb
xor
jb
pop
sub
enter
aaa
mov
mov
lock
cwtl
hlt
push
push
dec
xchg
out
xor
cwtl
mov
loopne
cmp
adc
shlb
sub
cmpsl
jbe
cmpsb
popa
push
shlb
mov
sub
clc
push
lods
imul
rcll
inc
insb
daa
xchg
in
xchg
int
mov
in
jne
daa
fistpll
daa
inc
push
pop
insb
nop
in
imul
push
dec
aas
shr
jmp
jbe
imul
push
fsubs
jb
push
out
pop
clc
ljmp
addr16
out
dec
xor
push
sub
leave
gs
arpl
cmp
sbb
xor
iret
in
call
scas
cli
fisttpl
add
sub
dec
sub
xchg
outsb
out
lcall
js
or
mov
jmp
mov
repnz
sbb
or
mov
aad
mov
push
jl
shl
add
cmp
and
cmp
pop
sub
jb
dec
pop
test
arpl
xor
int3
ror
insl
pop
clc
sub
xor
xor
out
mov
out
bound
xchg
int
lods
icebp
jb
adc
push
dec
mov
dec
call
loop
mov
lock
rcrl
lock
mov
xchg
out
or
outsl
popa
lods
dec
in
sbb
shrb
aad
push
sub
ret
mov
mov
adc
ret
call
shr
dec
pop
pop
das
adc
adc
dec
push
lods
pop
pop
sbb
jl,pn
bound
or
jle
pop
stos
jl
push
aad
movsb
cmpsl
sbb
fdivl
fs
fnstcw
mov
jns
sbb
mov
clc
sbb
mov
sbb
mov
sub
icebp
out
loopne
mov
in
adc
mov
into
xchg
fs
adc
jecxz
push
fisttpl
rorb
out
cs
mov
repz
icebp
mov
lret
cmp
pop
mov
aad
xlat
inc
fs
scas
cmp
pop
repnz
test
mov
push
dec
lods
or
dec
xchg
pusha
cmp
adc
das
nop
sbb
outsl
xor
outsb
out
imul
repz
inc
nop
inc
outsl
stos
mov
jmp
rclb
pop
lcall
add
jae
mov
xor
dec
jo
fsubr
or
push
push
pop
push
test
rorl
dec
push
movb
xchg
and
scas
data16
xor
shlb
fldcw
ret
push
xor
jmp
jo
cmp
jne
mov
jb
push
and
ljmp
icebp
sbb
dec
xor
cltd
push
js
shlb
pop
stos
repnz
xchg
das
push
gs
and
or
shll
cmp
cmp
sub
dec
in
or
sub
jmp
out
fsub
fstps
inc
or
fsubr
test
push
daa
in
dec
in
fdiv
test
mov
push
mov
clc
ljmp
xor
ds
ja
xor
mov
stos
xor
cwtl
mov
frstor
pop
mov
xchg
sub
fstpt
sub
or
idivb
movsb
push
push
pop
adc
pop
xchg
fldl
cmp
mov
push
in
nop
inc
mov
aaa
xchg
clc
sub
enter
out
mov
inc
subl
repz
mov
repnz
dec
cmc
pop
aaa
repz
fiaddl
mov
rorl
repz
repnz
adc
ss
sub
test
xor
in
and
dec
mov
pop
outsl
push
outsl
mov
mov
mov
out
loope
fs
insb
pop
fldenv
orl
lods
inc
in
push
cwtl
push
arpl
inc
aad
sbb
insb
inc
push
lods
pop
lock
in
lock
xor
in
dec
jo
jo
fisubs
and
std
fstl
jo
testb
cli
mov
lret
mov
cmp
dec
jno
movsb
out
push
sub
ja
out
mov
popf
pop
jae
lret
stos
dec
out
daa
cmp
in
idivb
mov
sarb
jmp
call
mov
pop
popf
xor
fistps
pop
cmp
lock
inc
jmp
call
icebp
or
fisubl
pop
lods
sub
sti
shlb
mov
test
in
into
addr16
push
and
out
push
inc
ljmp
dec
or
sub
shr
sbbl
pop
xor
push
fs
sub
loope,pn
inc
lret
insb
dec
adc
mov
leave
mov
jle
dec
outsb
inc
sub
push
in
out
xor
movsb
jl
lock
psllw
mov
mov
test
mov
js
imul
xchg
pop
jmp
int
push
inc
call
adc
inc
xor
out
repnz
pop
or
or
push
out
adc
cmc
sti
inc
and
fneni(8087
mov
hlt
push
je
sti
or
out
jge
sub
and
sbb
repnz
mov
stos
mov
and
xor
dec
xor
movsl
xchg
xor
and
xchg
inc
movsb
or
icebp
out
hlt
sbb
scas
test
and
bound
fbld
jo
inc
out
xor
pop
test
mov
in
xchg
in
sti
pop
stos
inc
pop
fildll
cmp
int
pop
jae
dec
clc
push
std
in
repnz
pop
in
xorl
mov
outsl
dec
cmp
insl
lcall
popf
std
xor
dec
add
cmp
inc
sub
mov
mov
push
in
sbb
in
jo
out
push
aad
leave
add
scas
cwtl
xor
daa
in
leave
cmp
fcomi
movsl
cmpsb
loopne
push
and
xchg
and
es
dec
fs
jo
test
popa
mov
add
mov
ffreep
mov
nop
sbb
je
pop
stos
dec
lahf
and
xchg
sbbl
pop
xorb
int3
push
bound
pop
jnp
xor
fucom
and
or
pop
jo
mov
or
mov
test
jecxz
negl
jae
stos
add
mov
xlat
and
sub
fdivl
pop
pusha
out
cmp
push
push
sub
sub
cmpsl
mov
fcmovb
mov
repz
add
mov
pop
mov
sub
mov
out
jp
fsts
stc
xchg
sub
pop
lds
jbe
xchg
mov
es
clc
aam
mov
aaa
fnstcw
mov
mov
filds
scas
add
pop
pop
inc
jmp
cmpsl
repnz
rcr
loope
add
pop
in
in
cmp
xor
icebp
fucom
push
sbb
pop
in
and
lds
enter
sub
out
icebp
int3
in
imul
lret
push
jg
jle
push
lret
add
push
ja
xor
test
push
pop
cmp
movsl
mov
sbb
mov
inc
call
enter
and
stos
dec
cld
cmp
xchg
cmp
add
and
xchg
push
mov
nop
icebp
jle
sarl
xor
iret
enter
push
cwtl
xchg
repnz
and
adc
push
gs
sti
adc
call
test
adc
jp
sub
push
stos
inc
shll
cld
scas
subb
xor
mov
pop
push
jb
mov
dec
jne
push
ds
test
daa
mov
pop
fs
lods
ds
adc
in
mov
push
dec
outsb
mov
or
xchg
mov
cmp
out
dec
add
jae
pop
jmp
loop
int
sbb
sub
xchg
daa
jo
jae
cmp
repz
or
bound
test
or
in
leave
ss
leave
out
sub
test
and
loope
and
jmp
xorb
adcb
pop
insl
clc
dec
into
aas
adc
gs
negl
int3
sub
out
jbe
lods
inc
mov
adc
loop
adc
mov
cld
cld
fadds
adc
sub
push
pushf
cmp
testb
mov
cmpsb
in
mov
mov
sub
xchg
ds
sbb
lahf
add
inc
pop
loope
jnp
bound
pushf
dec
adc
test
pop
in
mov
icebp
dec
in
movsb
xchg
outsl
fstpl
data16
mov
pop
adc
inc
xor
inc
int
inc
and
int3
lret
movb
mov
ljmp
sub
lods
lock
rorl
jmp
jp
push
sub
lret
inc
aam
iret
push
xorb
mov
dec
mov
xchg
or
sub
in
push
popa
sbb
jmp
nop
repz
sub
fldenv
and
push
in
inc
fs
in
xor
stos
enter
fxch
add
mov
nop
dec
push
pop
scas
orl
sarl
fs
inc
lret
ds
mov
test
iret
lea
dec
jno
and
hlt
add
push
in
out
inc
out
cmpsl
jnp
jo
test
pop
dec
sub
and
fnstsw
sub
xor
pusha
outsl
jo
pop
pop
jecxz
in
loopne
mov
out
sti
xlat
inc
jo
xor
inc
sub
or
insl
roll
and
mov
sbb
sub
jp
pop
mov
ss
pop
dec
pop
sbb
into
jmp
dec
mov
stos
jp
cmpsb
add
movsl
mov
dec
pop
sti
xchg
js
int3
push
jg
push
adc
scas
mov
dec
cmp
or
jg
xchg
mov
jge
xlat
xor
dec
outsl
jle
mov
outsl
and
aam
mov
pop
stc
fsubp
outsl
and
lret
sub
sub
leave
sub
dec
pop
in
and
jnp
fsubrl
cmp
pusha
sub
les
int3
inc
jmp
outsl
icebp
cmpsb
inc
fs
sbb
xor
movsl
ds
pop
fstpl
add
pop
push
push
pop
and
shll
push
pop
shlb
fs
mov
or
cs
cmp
test
or
movsl
sub
jg
adc
scas
add
push
lds
inc
dec
mov
out
aam
nop
sbb
dec
sbb
mov
adc
aas
pusha
pop
inc
dec
sbb
rclb
lcall
sub
lcall
mov
mov
mov
lahf
cmp
cmp
push
adc
push
aad
pusha
adc
pop
mov
pop
rorl
inc
fstpt
sub
in
dec
xor
shlb
outsl
roll
cmp
lahf
enter
adc
and
call
mov
sub
ds
jecxz
icebp
stc
mov
hlt
rcrb
int
sub
clc
sbb
pushf
outsl
scas
insb
pop
mov
xlat
adc
jle
aad
sahf
je
arpl
das
cmp
movsl
in
inc
cmpsl
fwait
insb
xchg
fistl
or
lods
cmp
sub
push
popa
sbb
cmp
movsl
jmp
jne,pn
loope
dec
in
pop
nop
inc
push
stos
and
loopne
fisttps
mov
jbe
lock
cmp
scas
gs
pop
sub
in
jge
mov
gs
imul
test
sub
mov
mov
fnstenv
mov
push
loopne
mov
jns
mov
jae
das
dec
adc
sbb
data16
repz
out
cmpsb
and
sub
notl
jp
inc
mov
out
test
push
loope
cld
ja
sbb
sub
jbe
mov
adc
xchg
sub
int
push
push
dec
imul
insl
jns
imul
std
in
cmp
sbb
rcll
mov
test
fcompl
insb
dec
cmp
imul
gs
rcll
adc
test
call
mov
jnp
loope
push
jnp
add
and
push
addr16
push
scas
sub
or
rclb
dec
mov
loope
adc
das
sti
pop
fidivrl
or
add
sub
xor
mull
and
mov
stos
cmp
pop
sub
shr
sahf
inc
dec
dec
aad
lds
cltd
push
sub
mov
outsl
or
fcoml
xor
push
lcall
repnz
out
addr16
sbb
test
jp
outsb
or
mov
push
and
inc
or
inc
fs
out
inc
mov
pop
push
test
jg
scas
int
adc
push
fcoms
ret
outsb
push
js
add
inc
dec
in
fcompl
sub
pop
dec
rcr
push
mov
mov
pop
inc
cmpsb
movsb
cmpsb
and
pop
xlat
cmp
xchg
es
and
rclb
aam
cltd
cld
and
or
out
call
cmpsb
scas
inc
sub
inc
sub
pop
push
aaa
out
mov
leave
ret
push
pushf
in
mov
pop
out
push
xchg
jnp
push
xchg
js
out
jns
das
push
xchg
addr16
idivl
add
or
cwtl
push
jo
stos
lods
sub
push
rol
out
and
pop
in
out
std
sub
js
jge
in
imul
lds
xchg
test
movsb
clc
fisttpll
push
and
in
cmp
mov
pop
jmp
push
mov
inc
leave
int3
mov
repnz
and
out
iret
mov
test
test
out
fldt
sub
pop
pop
mov
mov
mov
mov
in
fldcw
mov
aam
loope
das
pop
test
test
dec
jecxz
outsb
sub
outsl
fsubrl
jmp
cmp
out
movsl
insb
mov
lods
and
pop
test
test
adc
imul
inc
je
pop
and
out
push
or
in
cmp
mov
lods
add
sarl
xchg
mov
jge
jmp
roll
imul
xor
sbb
movsl
inc
pop
and
inc
sarb
jmp
jmp
xchg
sub
push
and
imul
dec
pop
insl
push
out
and
xchg
out
sbb
adc
jae
insl
push
into
jo
addr16
jmp
fimull
in
jns
cld
fucom
or
pop
fldcw
cmp
data16
lock
pop
push
jno
mov
add
and
pusha
cmp
or
fldl
lahf
inc
jb
hlt
or
fbld
arpl
jo
int3
xlat
cmp
pop
xor
jmp
or
int
xor
or
xor
movsb
mov
mov
sarl
scas
mov
in
in
lahf
into
enter
cmp
movsb
xchg
aaa
dec
jae
outsl
decb
call
pop
and
cmpsl
jo
test
in
jae
sub
repnz
xchg
in
fidivs
dec
adc
xchg
sbb
dec
ret
xor
out
dec
push
sub
inc
or
in
popa
push
push
push
lahf
jno
mov
jmp
mov
mov
mov
out
into
shrl
xchg
or
and
icebp
stos
cmp
add
sti
mov
jl
sub
fistpll
pop
pop
xor
repnz
push
out
push
roll
push
inc
pop
pop
leave
mov
jl
out
loope
cld
in
shlb
sub
scas
stos
mov
adc
pop
repnz
in
adc
fdivr
jb
out
push
add
lahf
cmc
shrb
push
loopne
daa
mov
jae
jbe
dec
pop
shl
into
pop
mov
push
or
pop
lods
dec
mov
mov
sub
cmp
dec
cmp
jge
and
xchg
lds
jge
pusha
mov
and
test
dec
es
pop
out
or
shlb
jg
adc
aam
mov
stos
adc
mov
insb
sub
bound
repz
stos
mov
mov
ret
shrl
cmpsl
mov
mov
jmp
push
mov
in
inc
mov
cmp
addr16
aam
repnz
push
xchg
add
ljmp
out
js
data16
xchg
cmp
lret
outsl
pusha
fsub
xor
adc
pop
push
push
movsl
lea
loop
inc
xchg
and
in
add
cmp
cmp
arpl
inc
mov
or
test
mov
xchg
fs
insl
mov
mov
inc
inc
sub
cwtl
cwtd
inc
mov
pop
jb
movsb
clc
out
call
cld
sub
xchg
adc
and
fldl2t
popa
mov
cmp
xor
mov
mov
ds
xor
and
lods
popa
mov
or
mov
push
cmpsl
test
xor
and
dec
sub
or
pop
cs
das
adc
sub
subb
dec
xchg
xor
push
sub
out
jae
cltd
mov
icebp
or
frstor
outsl
xchg
and
fcoml
sbb
or
cmp
les
shll
mov
loope
stc
test
or
call
and
aas
pop
push
in
jnp
loope
scas
repz
push
inc
or
ds
ficomps
clc
sub
test
fsubr
sub
leave
daa
aad
jp
shlb
or
lahf
xlat
aam
sub
xor
es
sbb
enter
fisttpl
xchg
arpl
and
and
sbb
in
ljmp
fcmovne
xchg
fisubs
mov
lock
dec
xor
sub
lods
inc
inc
movsb
in
mov
inc
inc
mov
movsb
jb
fisttpl
test
out
adc
inc
repz
pop
les
inc
mov
lock
push
pop
add
jnp
les
and
jb
arpl
cmpsb
filds
push
add
jo
inc
mov
xor
mov
leave
orb
out
sbb
sub
jne
mov
icebp
and
out
and
ja
test
sti
sysret
mov
loopne
aad
push
xchg
mov
aaa
inc
fwait
inc
iret
sub
dec
ret
jae
push
push
test
insb
pop
sub
gs
and
push
mov
or
pop
xor
pop
daa
push
ljmp
stc
mov
mov
imul
dec
xor
pop
popf
fldenv
dec
sub
cwtl
mov
push
dec
jb
out
adc
loopne
adc
movsl
in
add
and
jb
fs
cmp
pop
xor
out
xlat
out
lods
andl
es
pop
mov
xor
ljmp
dec
add
lret
dec
js
dec
push
mov
pop
xor
jb
js
shrb
lret
into
or
adc
out
push
pop
lret
aad
xlat
out
or
push
sub
jbe
xor
sarl
pop
lret
mov
sbb
mov
push
mulb
sarb
repz
ficomps
push
loopne
pop
jmp
aad
push
data16
and
mov
jmp
adc
push
push
lret
loope
jmp
jmp
dec
mov
iret
mov
adc
jmp
jae
into
subl
pop
scas
push
pop
mov
stc
shrb
into
push
cmpsl
out
or
insl
sub
dec
sbbl
pop
mov
out
cmp
mov
jg
dec
xchg
mov
mov
roll
loope
push
insb
or
aam
cli
mov
push
mov
pop
out
js
xor
xor
fld
xchg
pusha
out
mov
push
aad
jo
mov
cmp
imul
sub
sub
jg
add
mov
sub
insl
lock
sub
jecxz
out
into
push
lock
sub
mov
xor
pop
and
cmp
mov
mov
shll
xchg
and
test
adc
in
pop
test
stos
test
loope
sbb
movsl
xor
sbb
popa
dec
scas
cmp
fdivs
hlt
das
mov
jmp
xchg
scas
ja
xorb
in
repnz
aam
rcr
jno
jae
test
adc
rcll
pop
xor
inc
inc
js
cmp
xchg
jae
pop
mov
pop
push
inc
xor
jne
fld
cwtl
pushf
push
xor
and
inc
add
xor
push
and
xor
pop
mov
pop
sbb
js
jle,pn
addr16
mov
rcll
fwait
push
xchg
adc
iret
in
push
cmp
fwait
in
fcmovnu
mov
inc
mov
insl
sub
pop
jo
gs
mov
xor
cltd
mov
and
xchg
out
data16
inc
ja
test
push
outsl
imul
int
inc
mov
push
push
imul
shll
hlt
adcb
adc
mov
jecxz
movsl
movsl
repnz
in
lcall
shrb
push
lods
test
mov
ret
pop
lcall
outsl
pop
and
mov
dec
loope
negb
xor
enter
pop
inc
pop
js
mov
sbb
pop
xchg
ljmp
or
mov
out
jl
fcoms
icebp
push
add
gs
call
jbe
xor
in
cmp
sub
xor
push
shll
and
into
test
iret
xchg
roll
cmpsl
pop
xor
adc
mov
fnstcw
mov
fidivrs
cmpsl
sub
sub
cli
ret
in
add
adc
push
sbb
inc
movsl
sub
mov
int
fmuls
in
iret
lret
push
jae
cmp
mov
rorl
int3
cmp
sub
cmp
push
stc
ret
lret
insb
mov
in
jg
das
stc
jmp
outsl
adc
ds
push
mov
or
shrb
fwait
or
bound
dec
xchg
cs
pop
sub
stos
mov
dec
push
int
imul
push
mov
rolb
aad
test
cmp
mov
aam
test
inc
jmp
push
aad
xchg
stos
push
cmp
and
cltd
arpl
out
test
mov
popa
inc
cmpsb
pop
dec
out
call
cld
push
sub
xchg
pop
and
cmp
insb
push
lahf
test
dec
adc
mov
sub
xchg
arpl
xchg
mov
fiadds
ret
inc
mov
mov
push
inc
cs
push
out
mov
out
fcomp
and
fistpll
push
in
dec
mov
in
or
sub
jmp
and
mov
push
daa
xor
and
jae
lcall
inc
jmp
inc
sbb
out
lahf
fcompl
jmp
jbe
std
shlb
pop
jo
stos
adc
sbb
xor
loope
stos
aas
mov
or
scas
or
fidivs
out
push
cmp
jbe
popa
stos
sub
xchg
cli
push
in
push
sbb
out
push
pop
mov
xor
and
loopne
out
scas
xchg
out
loope
jge
add
js
mov
insb
push
adc
jle
shll
mov
sti
jb
loope
jbe
rorl
imul
pavgw
rcr
insl
out
dec
mov
or
pushf
xchg
dec
jns
add
adc
fsubrs
and
fwait
sbb
mov
adc
xor
mov
xor
jmp
sub
xor
fwait
push
xchg
xor
xor
lods
xor
enter
out
jns
std
mov
or
fs
lds
xor
gs
lret
add
adc
adc
mov
in
out
dec
shrb
cmp
test
lods
add
xor
cmp
lods
test
and
cmp
nop
mov
imul
add
and
dec
rcr
repnz
insb
pusha
outsl
dec
push
imul
and
pop
loop
insl
jno
lods
pop
add
loope
cmp
sbb
xor
loope
cmp
dec
and
dec
loope
dec
lds
in
cmpsl
pusha
cmpsb
dec
shll
loopne
repnz
int
sub
or
fldenv
loopne
cltd
cmp
pop
mov
fs
daa
fnstenv
fsubs
xchg
daa
nop
fnstenv
in
pusha
lea
and
dec
loope
dec
mov
inc
in
pusha
pop
dec
and
loope
loopne
in
fnstenv
fsubrs
dec
pop
fldcw
pop
pop
out
fstps
or
jmp
or
xor
and
add
pop
flds
sub
in
pusha
push
dec
lcall
pusha
into
ljmp
fxch
loope
dec
movsl
sub
in
pusha
cmpsb
cmp
push
rorl
out
adc
dec
pop
lea
mov
pop
pop
out
fldl2t
mov
in
pusha
gs
fs
xlat
xlat
in
xor
sti
xor
clc
pop
push
stos
mov
mov
adc
sub
inc
in
xor
pop
xor
shrl
mov
in
fs
jp
cwtl
imul
shll
mov
push
cli
addr16
pusha
inc
sub
or
movsb
mov
inc
incb
test
sub
or
jge
rclb
jo
cmp
adc
adc
mov
xchg
add
or
call
js
rorb
push
popa
in
out
jne
push
lods
pop
jbe
xorb
sub
cltd
mov
xchg
mov
jmp
push
out
cmp
popf
hlt
mov
iret
xchg
call
in
sub
xchg
nop
fmuls
ljmp
jmp
pop
decb
std
inc
out
inc
jns
or
cmp
cmpsl
out
test
and
dec
mov
cmp
sub
dec
or
outsb
cmp
cmp
push
sub
imul
in
mov
in
dec
adc
in
cmp
or
aad
mov
jle
jne
fbstp
loopne
enter
push
jns
pop
sub
mov
pop
stos
pop
ja
cmp
hlt
addr16
mov
or
sti
jmp
lret
pop
xchg
sbbl
aad
lret
mov
lods
jns
dec
pop
add
icebp
test
ret
icebp
adcb
in
jmp
out
adcl
cmp
dec
pop
jns
loope
scas
sbb
insl
mov
or
or
icebp
sbb
insb
lret
cld
inc
imul
fisubrl
out
push
fistps
fists
pop
fistl
out
dec
out
in
pop
jmp
je
loopne
loope
push
dec
dec
jb
in
ret
out
insb
daa
add
cmpsl
adc
lret
in
mov
lds
shll
cmpsb
cltd
xchg
inc
stc
push
xor
and
xchg
pop
jae
repnz
out
cs
insl
leave
sub
inc
int
xor
fstps
mov
hlt
std
push
inc
pop
adc
orb
pop
pop
test
shlb
or
in
test
dec
call
mov
test
aad
mov
jecxz
fs
fs
push
mov
insb
int
dec
and
in
insl
sbb
and
dec
pop
cwtl
rcll
dec
out
js
insb
push
popf
ja
test
addr16
push
test
sarb
gs
inc
cld
push
imul
add
push
or
fisubl
out
pusha
stos
dec
xchg
adc
insl
mov
jae
add
dec
fadd
and
out
ret
test
xor
and
lret
mov
loopne
or
ret
icebp
addb
add
jb
xchg
fdivrs
in
fstp
inc
stos
sbb
gs
pop
out
sbb
std
out
mov
icebp
imul
jno
lods
and
xor
sub
xor
dec
sub
imul
sub
xchg
mov
js
aam
addr16
cmp
sbb
lods
pop
sub
pushf
mov
mov
stos
mov
push
cmp
dec
sbb
fsts
stos
sbb
adc
pop
push
push
mov
test
push
in
pop
mov
sub
aam
scas
adcl
adc
fldenv
fistps
xchg
xor
mov
push
push
orb
std
jo
mov
cmp
jmp
or
es
popa
or
sub
jae
push
pop
fsubrs
addr16
push
jmp
sub
gs
cmp
fnsave
sahf
in
sub
pop
jg
shl
aaa
xchg
cmp
icebp
sti
push
es
gs
fbld
fmul
mov
insl
dec
sahf
imul
dec
xor
sarl
xor
out
sub
mov
inc
out
icebp
out
and
adc
fcmovu
adc
outsb
add
jno
mov
in
shrl
xor
and
push
popf
and
icebp
aaa
push
lods
jecxz
gs
xchg
scas
and
lret
inc
cmp
mov
roll
scas
loope
fistpll
and
gs
insl
pop
xor
fstps
fdivl
sub
mov
repz
jae
addr16
xchg
xor
subl
outsl
data16
push
lock
arpl
insb
nop
pop
js
call
bound
fsubs
popa
popa
js
add
xor
mov
out
jmp
imul
mov
lea
jp
jg
outsl
sbb
push
push
mov
imul
mov
js
out
cmpsl
loopne
ljmp
mov
push
shr
push
adc
add
pop
ljmp
lea
mov
fnsave
pop
into
add
bound
jecxz
lret
adc
test
xchg
fstl
add
subl
cltd
decl
test
sub
add
mov
call
jmp
jmp
call
sub
lret
xchg
bound
sbb
sub
rcrb
mov
cmc
test
add
jmp
adc
dec
outsl
nopl
mov
cmp
jle
or
sub
inc
and
mov
bsr
mov
xadd
stc
push
mov
bt
call
sub
clc
stc
bt
push
cmp
movsbl
pushl
lea
not
not
mov
jmp
insb
push
lea
or
fstpt
movsb
push
push
mov
notl
aaa
fisubs
jo
ja
pmuludq
arpl
cld
pop
push
pop
xor
aad
jg
aad
and
stos
test
and
sbb
js
scas
in
adc
jne
pop
mov
and
and
gs
movsl
xor
pop
pushf
mov
inc
sub
push
inc
xor
cmp
leave
xor
je
push
dec
pop
scas
lea
mov
push
xlat
test
loope
inc
xchg
nop
xchg
sub
out
xor
mov
or
xchg
dec
mov
daa
inc
pop
scas
lea
in
pushf
xchg
cmp
mov
fisubrl
jmp
inc
adc
cmc
repz
push
pop
gs
outsl
rorb
adc
xchg
mov
add
jnp
lds
mov
push
roll
jge
cmp
mov
cmp
imul
into
add
and
push
inc
add
inc
outsl
bound
filds
mov
je
sub
xchg
push
mov
cmp
and
sbb
mov
rol
xor
mov
lock
push
in
test
aam
push
cmpsl
mov
pop
jbe
xchg
mov
and
insb
pop
push
dec
push
ret
std
jbe
cmp
ljmp
nop
pop
pushf
jne
push
xor
repnz
xchg
sub
sub
and
cld
xchg
lret
outsb
insl
mov
decb
jo
orl
xor
icebp
les
mov
fwait
or
xchg
jg
cwtl
fwait
ret
mov
cmp
lahf
data16
call
fdivl
loopne
and
nop
and
aaa
xchg
and
sub
cmpsl
cmpsl
stos
ret
jp
xor
push
test
cmp
jne
idivl
ret
test
cmpsb
bound
add
ret
xchg
or
leave
data16
notl
inc
inc
call
call
jmp
not
clc
pusha
pushf
xor
jmp
shrl
inc
xor
xor
shll
sarb
sbb
xchg
in
mov
mov
scas
mov
in
xchg
cmpsb
rorb
jmp
out
adc
inc
mov
mov
jo
icebp
ss
mov
daa
in
jne
mov
out
stos
loopne
add
jl
sub
or
jle
imul
mov
jns
or
addr16
add
jle
mov
add
shl
cs
jmp
mov
je
shlb
sbb
inc
out
arpl
mov
adc
xchg
and
mov
cltd
jnp
fsubr
sub
pop
pop
lods
jl
aaa
addb
fs
and
stos
fcoml
dec
outsb
loop
addr16
mov
orb
jmp
lea
push
jbe
loopne
dec
add
mov
dec
jo
iret
add
mov
add
add
es
inc
dec
loop
sub
and
push
std
xchg
je
fwait
add
pop
outsl
or
in
jbe
lea
jne
jmp
push
pushf
movl
lea
jne
call
inc
dec
test
clc
bt
xchg
and
add
mov
jmp
lea
jae
bt
jmp
lea
jae
cmc
pushf
pushf
add
pushf
mov
mov
movb
lea
jmp
test
clc
add
clc
stc
clc
cmc
mov
pushl
test
pusha
lea
je
pushf
add
jmp
call
not
bt
neg
lea
jb
test
cmc
stc
sub
pusha
cmp
movzbw
not
lea
call
sub
pop
cmp
fnstenv
adc
aas
jle
mov
arpl
scas
loopne
pop
or
lods
cmp
out
mov
sbb
sahf
lods
cmp
cmp
lcall
lods
push
outsb
mov
sbb
jg
ror
fidivrl
enter
and
xor
lods
or
adc
cmp
hlt
xchg
rcrb
ficomps
fisubl
rorb
and
lds
or
xor
ss
fwait
out
pop
inc
ljmp
and
fadd
dec
xor
addb
data16
jo
adc
lock
push
jb
inc
or
add
stos
outsl
mov
push
mov
lret
orl
fnstsw
repnz
inc
xor
add
xchg
xchg
inc
inc
push
jmp
inc
loop
pop
sub
cs
jae
lret
add
jne
ss
in
movsl
imul
mov
cmp
xchg
enter
sbb
not
lods
push
push
call
lea
je
clc
cmc
pusha
cmp
mov
push
lea
jne
pusha
push
inc
jmp
adc
sub
test
xor
cmp
stos
push
jecxz
sub
cltd
cmc
jp
int
or
pop
lock
js
add
lea
fsubp
jecxz
shrl
enter
add
stos
dec
mov
out
add
sbbb
test
insb
sbb
scas
iret
pop
push
das
and
inc
adc
sbb
icebp
mov
fbstp
pop
mov
scas
insb
mov
mov
and
pusha
pusha
movl
push
call
pushf
pusha
mov
movl
pushf
pushl
lea
jmp
lods
xchg
xchg
xlat
cmp
add
cmp
mov
out
push
cli
xchg
cmc
data16
ja
cltd
xlat
adc
fs
lods
dec
hlt
push
mov
xchg
mov
mov
iret
adc
mov
mov
jae
jge
addl
pop
dec
xchg
fcomp
cmp
sub
sbb
inc
pop
ficoms
jns
cli
pop
sbb
fs
cs
in
xor
arpl
jnp
dec
repz
into
pop
gs
push
xchg
imul
xchg
inc
mov
cmovae
data16
inc
sub
mov
jge
mov
cmp
push
mov
jmp
cmp
and
xchg
pusha
lock
stc
pop
adc
dec
xor
fildll
dec
inc
loop
xor
js
pop
cmp
test
mov
adc
mov
mov
xor
adc
inc
imul
loop
xor
inc
and
jmp
mov
push
inc
pop
dec
push
dec
pop
inc
inc
cwtl
pop
inc
inc
inc
inc
cwtl
cltd
dec
cmp
cmp
jmp
inc
jmp
push
lea
je
pusha
mov
pushf
lea
jmp
repz
pusha
jmp
pushl
popl
pushl
pushf
push
pushl
ret
pusha
dec
call
ljmp
ja
outsb
push
and
mov
and
and
xchg
mov
mov
fwait
mov
imul
adc
push
pop
or
mov
push
and
je
or
push
push
cmpsb
enter
insl
mov
mov
mov
sahf
sbb
dec
push
ret
lcall
inc
xlat
out
or
push
mov
push
roll
cmp
call
call
cmp
push
movb
pusha
push
pushl
ret
pushf
mov
mov
pushl
movb
pushl
ret
aad
sbb
xchg
or
mov
adc
into
cmp
push
jbe
and
mov
xor
jl
sub
jns
imul
mov
mov
adc
in
lods
pop
push
decb
xchg
ret
cmpsl
jne
xorb
pop
sbb
ret
sbb
or
shlb
lods
cmp
cmpsb
std
pushf
lea
add
mov
mov
aaa
ja
cmp
jno
mov
loope
int3
sti
pop
cmp
add
popa
inc
sahf
push
push
sarl
clc
and
fidivrl
scas
rolb
dec
movsl
inc
inc
xor
sub
xchg
cmp
push
sub
lods
cmp
inc
add
add
dec
cmp
xor
inc
adc
fnstenv
mov
ljmp
jbe
add
dec
or
push
clc
sahf
inc
xchg
cmp
jbe
sub
push
sbb
inc
push
fldl
shlb
test
fsubp
insl
jg
push
js
pop
add
fnstsw
lcall
out
loopne
or
sbb
addb
push
fidivrl
enter
aas
inc
in
das
and
push
in
add
lcall
cmp
push
enter
dec
adc
pop
pusha
inc
and
dec
cmp
cmp
adc
test
shll
dec
movsl
sub
rorl
mov
divb
push
rorb
test
sub
and
cld
mov
jb
leave
adc
cmpsl
xchg
ffree
nop
mov
or
jne
lds
xchg
pop
xor
call
pop
cmp
mov
gs
in
pop
push
out
lsl
cld
addr16
dec
ja
xchg
jbe
mov
jmp
cli
imul
cltd
inc
test
lods
inc
imul
adc
and
ljmp
xor
lds
lcall
pop
cltd
cmpl
filds
imul
aad
jnp
cmp
test
in
insb
addr16
and
imul
mov
fsubrs
shll
inc
and
jmp
movsl
push
imul
xchg
cmp
lcall
shrb
shl
scas
popf
mov
cmp
jne
sub
sarb
and
bt
call
setb
pushl
call
jno
cmp
and
push
inc
push
arpl
imul
stos
mov
lcall
lock
stos
sbb
mov
dec
rolb
sbb
fdivl
jle
test
stos
shl
mov
cltd
pop
dec
faddp
lds
cmp
fsts
pop
inc
loop
das
les
push
dec
inc
xchg
aas
push
stos
dec
cmp
int
das
inc
imul
negl
aad
outsl
call
imul
fsubl
jg
jno
arpl
add
ds
cwtl
stos
xchg
or
sbb
push
es
popa
rcrl
inc
cmp
adc
adc
loopne
fnstcw
sub
mov
mov
outsl
jmp
out
mov
dec
xchg
dec
mov
jmp
mov
rclb
cli
in
or
xor
in
js
cmpsb
mov
nop
or
xchg
test
jno
out
mov
or
lods
out
je
ret
jo
cmpsl
std
scas
mov
lcall
scas
jne
movsb
jecxz
iret
or
loopne
and
lock
aas
jmp
xor
pop
inc
xor
sbb
inc
and
jmp
push
movw
lea
call
call
btc
mov
push
test
stc
clc
cmp
pusha
lea
ja
mov
pop
pushf
pop
movsbw
xchg
pop
setae
pop
movzbl
lea
je
pushf
mov
jmp
mov
call
lea
jb
call
pushf
mov
lea
jne
call
jmp
add
push
xor
add
jle
add
add
xor
add
xor
add
add
add
je
add
add
imul
mov
jge
push
data16
stos
mov
lods
dec
mov
inc
jno
inc
jecxz
or
dec
shll
leave
mov
mov
pop
xlat
je
addr16
loop
test
or
xchg
xchg
insb
cmp
sub
xchg
sbb
jp
add
inc
and
pusha
lea
jne
aam
aad
call
fidivl
sarb
loopne
mov
sti
orb
pop
pushf
xchg
mov
fimull
mov
jb
and
hlt
in
fsubrs
andps
jp
and
cmp
or
push
sbb
aam
jge
dec
mov
xor
in
mov
xchg
lods
inc
in
fidivrl
int3
imul
and
lea
call
pusha
pushf
adc
call
pause
lods
loope
mov
xor
fs
aaa
out
cmpl
push
inc
lahf
xchg
jae
loop
movsb
scas
mov
xchg
push
push
shrb
fnstcw
pop
lods
xchg
inc
pop
inc
lock
cmp
xor
xor
mov
ss
inc
mov
cld
ss
fisubrs
add
xor
dec
icebp
bound
fs
out
dec
inc
frstor
loopne
dec
jmp
xchg
sbb
mov
sar
fidivl
test
and
arpl
mov
xor
pop
clc
xor
loop
pop
xchg
lcall
out
loope
jge
adc
lcall
xchg
loop
add
sbb
lret
hlt
int
sbb
fstpl
lea
pop
rorb
jbe
push
pusha
aaa
xor
mov
fistpll
shr
sub
incl
mov
dec
mov
lret
iret
jbe
lret
sbb
push
fdivl
outsl
mov
dec
xchg
inc
cmp
inc
and
pusha
lea
call
push
pushf
push
jmp
pushf
call
stc
sub
jmp
jmp
call
inc
xchg
pop
movsb
xor
add
dec
xor
push
and
and
aaa
sbb
dec
pop
adc
mov
jge
loope
cmpsb
das
outsl
cmpsb
lods
cld
sbb
push
movsb
shr
aas
pop
ret
mov
dec
push
adc
in
lret
mov
sub
adc
cmpsl
rorl
icebp
pop
xor
lret
jp
mov
fsts
pop
mov
mov
repnz
loope
inc
inc
mov
inc
dec
or
xchg
mov
outsl
lods
sub
jo
pop
ret
cmp
je
sub
scas
loopne
gs
pop
mov
add
lahf
sbb
movsb
mov
or
xchg
enter
mov
mov
in
and
iret
mov
inc
pop
aad
jbe
push
dec
mov
mov
inc
sbb
and
xor
pusha
stc
jmp
sbb
mov
dec
test
rcll
repz
dec
fcmovbe
xchg
cli
add
jecxz
scas
dec
xchg
mov
cwtl
push
mov
and
xchg
jno
inc
scas
lcall
ffreep
insl
or
inc
out
mov
stc
imul
and
lret
fcomi
dec
inc
add
or
xor
cmp
mov
test
push
scas
dec
icebp
xchg
sbb
cltd
dec
and
pop
stos
adc
inc
pop
aam
adc
insb
notb
mov
insb
outsl
pop
dec
push
scas
popf
ret
test
js
sub
sub
inc
and
push
movl
push
call
mov
lea
je
jmp
enter
jmp
aad
repz
mov
aam
jle
xchg
lret
int
ret
sub
xchg
add
rorl
arpl
das
cltd
mov
std
cs
inc
rcrl
add
jle
inc
inc
xchg
cltd
push
loope
pop
push
jl
xchg
fwait
sub
lret
mov
lock
add
test
test
pop
arpl
nop
mov
leave
aad
hlt
jno
cmp
xchg
cld
xchg
and
push
inc
and
xchg
push
pop
mov
dec
sbb
push
dec
js
sbb
push
pushf
pusha
in
sbb
mov
pop
and
push
push
mov
pop
scas
rol
rclb
xchg
rorb
mov
aam
cmp
add
aaa
add
mov
data16
gs
cmp
sbb
jecxz
mov
enter
test
and
adc
pop
rcr
mov
hlt
ljmp
cltd
sbbl
out
imul
inc
xchg
inc
nop
fidivrs
jle
clc
inc
and
sbb
bound
cmp
cld
repz
mov
dec
and
ret
dec
cli
cli
leave
adc
mov
inc
sub
mov
mov
inc
jp
sbb
mov
filds
mov
xchg
popa
jbe
mov
notb
ss
aaa
push
sbb
and
gs
mov
ljmp
inc
subl
cmpsl
adcl
lea
and
fcom
icebp
ret
pop
jl
dec
lock
or
push
test
lahf
loope
fcomp
pop
add
decl
mov
imul
cmc
push
sub
dec
push
pop
jl
test
xorps
inc
and
cs
sbb
fbld
push
gs
repz
xchg
stos
js
mov
incl
jmp
mov
adc
icebp
pop
and
mov
mov
inc
inc
mov
mov
adc
into
adc
xchg
xchg
mov
jl
mov
in
inc
addr16
leave
call
sub
cmpsl
add
cmp
pop
dec
jmp
mov
add
imul
flds
hlt
imul
stc
pushl
popl
cmc
cmp
pushf
lea
ja
jmp
cmp
popf
filds
int3
jne
dec
ret
dec
mov
int
push
stos
add
loopne
pushf
es
mov
mov
lds
jae
sub
hlt
xlat
inc
test
subl
xchg
jnp
jmp
and
pushf
bswap
mov
pusha
mov
jmp
call
add
movw
pushf
movb
mov
lea
jmp
aam
jns
mov
nop
daa
pop
insb
daa
xchg
loop
jp
ret
aaa
sarb
jecxz
dec
pop
aad
fisttpl
jbe
xchg
adc
inc
mov
mov
xchg
lock
jno
push
push
bound
in
mov
ja
hlt
loop
mov
jge
push
sub
inc
repz
pop
test
push
push
das
and
in
jp
sub
pop
xchg
out
inc
jge
mov
sub
frstor
push
xchg
cmc
add
je
add
lea
jmp
gs
js
mov
popf
cld
inc
nop
sbb
push
and
adcl
in
les
xchg
add
ds
loope
cmpsb
mov
or
inc
and
push
push
lea
jne
movzbl
mov
pusha
lea
jmp
pushl
lea
lea
xchg
mov
movzwl
push
pushf
lea
jmp
lea
je
jmp
cmp
call
pushl
lea
jb
push
push
push
pushl
ret
push
mov
movsbw
mov
pushf
pushf
mov
movsbw
call
lea
jae
pusha
call
mov
mov
mov
pusha
push
pushl
ret
push
pusha
adc
push
lea
jae
pushf
jmp
adc
xor
cmp
push
pop
xchg
mov
stos
ret
scas
sub
std
inc
das
hlt
sub
outsl
mov
xchg
sub
leave
lods
mov
or
test
mov
imul
mov
push
mov
inc
ss
sub
shl
push
mov
fbld
jmp
inc
sub
or
loope
jge
mov
pop
sbb
and
pop
and
insl
mov
das
fwait
stos
dec
mov
cltd
test
mov
ror
and
dec
dec
andl
aam
jae
sti
mov
mov
sub
arpl
mov
jg
or
jae
mov
and
ljmp
mov
xchg
imul
subb
xchg
mov
ja
push
imull
mov
push
and
stos
cld
movsb
mov
stos
xchg
out
jb
jno
icebp
cs
cltd
cs
and
mov
mov
adc
movsb
int3
inc
push
add
scas
jle
mov
mov
fs
add
aaa
fs
xor
pop
pop
xor
jp
fists
insl
les
sbb
dec
pop
xor
out
stos
pop
pop
mov
jg
or
popa
pop
fidivrl
jae
inc
and
xor
jo
fcmovb
pop
out
inc
and
insb
inc
les
inc
loop
inc
sub
or
inc
insb
jle
or
mov
inc
cmp
sub
orb
jbe
mov
pop
cmp
or
jne
dec
adc
imul
add
cmp
push
lods
outsw
lea
repz
arpl
notb
mov
jne
repnz
mov
fs
jno
packssdw
mov
popf
sbb
fwait
xchg
arpl
lds
jecxz
shrl
inc
and
mul
jg
mov
lea
cmp
sahf
lcall
iret
lods
xchg
jle
outsl
pop
dec
dec
cmpsb
cmp
inc
ret
fbstp
and
jno
ret
rol
int
sub
mov
mov
test
outsl
jb
push
insb
pop
int
cli
mov
adc
sub
fs
push
dec
mov
dec
xor
fs
std
adc
rorb
lret
out
cmc
rorb
movsb
ds
jne
xchg
movsl
xchg
xor
push
jo
cmp
inc
ss
push
cmp
add
mov
mov
aaa
dec
xchg
xor
lock
sbb
lahf
lahf
sub
loop
enter
pushf
lahf
out
out
inc
mov
mov
les
and
add
cmp
pusha
cmc
stc
movzwl
ror
movsbw
mov
stc
bt
add
clc
movb
call
jae
loopne
outsl
push
sbb
inc
es
pop
push
ljmp
push
push
push
or
lret
dec
mov
ja
pusha
mov
mov
lods
fs
and
pop
out
or
push
adc
scas
test
out
adc
enter
cmp
add
std
fisubrs
aam
ljmpw
lods
push
push
inc
inc
and
mov
mov
movl
pushf
push
pusha
pushf
lea
jmp
and
and
ds
pop
inc
xchg
sub
imul
hlt
and
push
lods
out
xchg
cs
lret
add
mov
jmp
adc
pushf
cwtl
movsl
addr16
aas
xor
scas
stos
mov
loop
inc
sub
test
mov
fwait
leave
fs
popf
inc
xor
leave
xchg
jg
jge
adc
aam
lock
push
sbb
and
call
fldenv
inc
cli
int
jnp
mov
dec
fsubs
push
add
push
xchg
jmp
push
push
sbb
mov
scas
sub
cmp
scas
xor
jb
pushf
dec
mov
ljmp
xchg
pop
test
divb
fsts
cltd
inc
movsw
sbb
jmp
test
pop
bound
subl
icebp
push
cmp
insb
outsl
or
inc
and
cmp
cmp
aam
mov
sub
shll
mov
inc
pushf
or
popf
cmp
popa
bound
lea
or
out
xor
jmp
in
sbb
jnp
aam
sbb
fs
dec
and
leave
adc
cli
daa
jp
xor
mov
mov
xor
leave
jne
inc
and
pusha
call
pusha
lea
call
push
call
cmp
not
test
bt
neg
cmp
jmp
xor
shl
bsf
push
ror
not
mov
movzbw
inc
push
inc
push
and
jmp
into
mov
mov
xor
pop
mov
icebp
or
push
push
into
jmp
int3
adc
mov
or
mov
pop
loope
and
lret
cmc
jns
mov
int3
addr16
lret
sbb
add
pop
rorl
clc
std
test
add
cli
push
addr16
rcrb
stos
sti
stc
int3
cmp
xor
pop
cwtl
xlat
imul
inc
in
mov
inc
sbb
shrb
mov
int
push
xchg
push
and
icebp
loop
inc
and
inc
mov
xchg
pop
cmc
xchg
sub
adc
loop
insl
jno
adc
or
xbegin
or
jnp
mov
out
xor
out
push
adcl
ret
in
aad
jbe
sbb
xchg
das
pop
shll
hlt
mov
out
jne
jno
pop
orl
mov
mov
popf
xchg
aam
imul
mov
dec
std
push
test
push
sbb
add
mov
push
ja
imul
pop
mov
aad
aad
out
sub
testl
jl
popf
mov
stos
inc
in
mov
mov
imul
nop
xor
or
pushf
pop
jnp
cmp
dec
xchg
aas
xor
lock
or
cmpsb
outsl
pop
mov
mov
cli
sbbb
dec
mov
jno
mov
andb
icebp
mov
jmp
pusha
push
movl
pushf
mov
lea
jmp
xchg
clc
add
int3
jne
dec
lds
inc
ja
inc
xchg
cmp
roll
test
jl
fimuls
shll
lds
mov
jnp
addb
sub
ret
add
pop
push
test
inc
and
pusha
sar
clc
bsr
mov
cmp
jmp
xor
insb
movsb
jl
mov
adc
xor
xor
jno
sbb
cmp
sub
fistps
sahf
mov
xchg
movl
mov
and
push
mull
mov
pushf
movb
push
add
sbb
push
outsb
movsl
ds
or
bound
pop
les
cmp
imul
mov
cmp
dec
inc
ds
cs
fs
enter
xchg
mov
das
int3
clc
push
int3
or
and
lea
ja
jmp
mov
fcmove
jne
xchg
mov
and
mov
mov
add
arpl
mov
aam
scas
lcall
ljmp
popf
rorl
push
leave
cmpsl
mov
out
scas
or
movsl
xor
mov
je
mov
popf
fisttps
pusha
fiaddl
movsl
dec
pop
les
push
cmc
loope
aaa
mov
and
aaa
cmc
mov
xchg
daa
lea
mov
mov
cs
xchg
cmp
and
int3
mov
xchg
xorb
mov
jne
mov
or
sti
sbb
sub
pop
sub
xchg
mov
movsl
xchg
lea
dec
outsl
lods
lods
or
aam
hlt
icebp
std
cmpsl
sub
addr16
pop
fsub
enter
pop
jne
imul
gs
xor
cs
insb
add
mov
and
test
jns
sarb
std
dec
shll
xchg
mov
pusha
jl
jnp
jmp
xor
inc
or
xor
cmp
pop
mov
push
sbb
xchg
xor
ljmp
mov
popa
in
inc
push
adc
orw
add
ror
xchg
lods
pop
push
cli
dec
xor
mov
int3
scas
lret
rorb
ficoms
mov
xchg
aam
mov
pop
cmp
jp
daa
fsubrl
xchg
hlt
repz
stc
insb
out
and
add
cli
andb
fisubl
insl
and
xchg
lock
int3
jb
dec
fbstp
cmc
xchg
xor
fsubl
inc
es
cltd
bound
outsl
and
mov
and
fs
jns
jae
bt
bt
jmp
pushf
pushl
call
and
add
push
jns
les
jmp
and
loopne
iret
pusha
call
clc
shrl
repnz
push
xor
pop
sahf
xchg
test
ret
mov
xchg
aam
pop
mov
sub
xchg
mov
jb
mov
mov
jecxz
stos
xchg
fwait
fwait
ds
icebp
push
fadds
and
cli
push
add
push
jmp
sub
aad
mov
lock
inc
test
add
jb
cmp
movsb
hlt
xchg
insb
mov
fdivr
xchg
mov
push
std
lcall
iret
test
pop
pushf
cmc
sbb
adc
daa
xchg
ds
int
cmpsb
and
iret
inc
add
fwait
mov
add
mov
jp
mov
icebp
push
ret
xlat
cmp
scas
or
adc
fstl
es
pop
sti
test
lock
sbb
mov
lret
xchg
sarl
movsb
seta
push
mov
xor
add
rol
call
pop
or
repnz
jge
les
inc
and
daa
adc
and
push
insb
adc
xchg
test
gs
jne
and
mov
int3
imul
in
jle
loopne
sbb
aad
mov
in
imul
add
jae
daa
sbb
cmp
out
jmp
loop
push
xchg
mov
ljmp
fidivrs
inc
push
scas
in
sbb
inc
lock
inc
add
dec
outsl
push
lret
pop
jb
orb
or
test
jmp
in
sub
mov
inc
pop
je
repz
inc
notl
push
pop
aad
or
push
leave
sarb
outsb
mov
mov
fs
dec
add
insb
ja
sbb
inc
pop
adc
jle
adc
or
aaa
mov
inc
add
and
push
repz
sahf
pushf
lea
jmp
lea
je
stc
pusha
cmp
pusha
lea
je
pushf
push
pusha
lea
jmp
aas
lahf
jbe
mov
jg
cltd
xchg
mov
add
lret
loop
loop
push
incl
sahf
gs
add
and
int3
and
les
movsl
mov
xor
mov
ja
push
btr
sub
sbb
or
jg
ret
out
ljmp
lock
inc
sbb
dec
xchg
outsl
lds
es
dec
andb
pusha
pusha
lea
jmp
bound
adc
push
xchg
shlb
loop
rcrb
adc
in
lret
jmp
out
addr16
xchg
push
ljmp
lahf
insb
pop
pop
xor
pushf
les
mov
leave
jg
mov
fs
xor
add
jbe
jg
out
mov
ret
sahf
imul
mov
cmc
adc
dec
aad
mov
in
pop
pop
test
jb
xor
enter
mov
or
ficoms
xor
mov
pop
pop
add
cmp
sbb
jb
inc
mov
aad
popw
xchg
fistpll
mov
jle
mov
test
insl
test
and
dec
in
ret
enter
in
incb
add
rcr
xor
sub
adc
mov
int3
push
incl
js
mov
cmp
jb
push
int3
xor
popf
and
es
inc
xlat
jae
fldenv
push
mov
ret
fwait
adc
imul
add
inc
adc
pop
pusha
and
pcmpgtb
incb
fdivs
mov
or
lods
pop
js
sub
sub
add
xor
adc
cmc
in
push
jge
les
popa
push
or
add
loop
test
add
cmp
fisubrs
loopne,pn
add
jae
xchg
repz
mov
shlb
or
pop
mov
cmpsb
mov
cmc
outsl
jns
pop
rep
outsl
int3
mov
aaa
enter
mov
pop
cwtl
notl
mov
icebp
ret
pop
sub
dec
adc
push
push
sbb
mov
add
cmp
int3
jae
sbb
test
and
jns
loop
xchg
push
ds
add
dec
xchg
aad
push
mov
pop
xlat
fs
push
fadds
mov
jne
daa
dec
cmp
pop
jl
in
xor
lret
sub
push
lock
shl
inc
es
cmpl
sub
incl
ret
dec
shr
not
sbb
movl
inc
mov
pusha
call
mov
pushf
mov
push
pushf
lea
call
jmp
setae
call
lods
pushf
dec
cmc
call
lock
orl
adc
inc
fwait
daa
or
add
fnsave
mov
pushf
sbb
sti
and
xor
sbbl
test
aad
cmpsb
jecxz
dec
testb
jge
loopne
xchg
imul
mov
xchg
loop
jne
xor
inc
lret
mov
push
xor
mov
cmc
shll
in
sub
shrb
jnp
xor
xor
cmc
cmp
imul
cld
sbb
mov
add
add
add
sbb
das
ror
push
shld
rcl
shrd
call
pusha
jmp
pushf
inc
sets
pushf
pusha
call
lea
pushf
movl
call
pushfw
popw
setbe
mov
mov
call
movl
pusha
pushf
lea
jmp
call
stc
test
sub
pushf
repnz
mov
pushf
lea
jne
pusha
mov
ror
adc
rcr
sub
dec
clc
cmc
movzbl
lea
add
cmp
cmp
clc
call
pushf
movb
lea
je
sub
add
xor
bts
and
btr
mov
pusha
pushf
add
test
jmp
xsaveopt
jmp
hlt
xorl
cmp
ja
popf
ja
sti
test
xor
or
mov
outsl
adc
in
fs
adc
stc
add
in
sbb
add
mov
test
movsl
jae
sbb
dec
sahf
mov
sti
sub
pop
leave
mov
leave
dec
fstps
in
shrb
idivl
test
dec
and
es
test
fcmovb
pop
clc
popf
cmc
sbb
je
aad
sub
adc
gs
fnstenv
xor
cwtl
fucomi
movsl
jmp
sbb
sub
fsubr
push
add
flds
xchg
ljmp
cld
dec
subb
sbb
lcall
pop
adc
fxch
shll
cmp
test
push
sahf
mov
in
fidivrs
jns
data16
test
or
push
pusha
dec
rcl
rol
stc
shl
neg
xor
add
not
shl
dec
neg
rcr
xor
inc
inc
xor
cmc
neg
seto
call
lea
jbe
cmp
adc
sbb
sub
shl
mov
shrd
shl
mov
dec
cmp
shl
stc
mov
push
not
add
xchg
rol
or
rcl
shr
adc
sbb
and
mov
movsbw
inc
movzbw
add
movzbw
pushf
push
bswap
mov
lea
pushf
pushl
mov
movb
push
pushf
pushf
lods
mov
pusha
dec
call
pop
loop
adc
fwait
and
sub
push
aad
push
dec
pop
sbb
pushf
mov
loop
push
in
ljmp
pop
jae
jb
jo
out
jnp
pop
insl
jge
and
jbe
test
inc
xor
out
ds
rolb
les
cmpsl
inc
jae
daa
push
test
mov
test
gs
pop
es
push
xchg
add
pop
adc
mov
cmp
stos
jmp
and
mov
aas
addb
adc
push
jmp
jmp
mov
dec
setne
ja
setne
inc
pusha
pusha
mov
mov
pushf
jmp
clc
pushl
cmp
mov
pusha
lea
jae
pusha
pushf
pushf
lea
jmp
call
call
mov
jmp
adc
pusha
pushf
pushf
lea
jmp
call
into
cltd
pop
add
cmpsb
and
out
movsb
or
mov
dec
sub
jbe
ss
sahf
fwait
data16
mov
xor
jle
mov
fcompl
xchg
push
in
fmull
push
fdivs
fs
or
ret
jge
repz
aad
push
inc
push
das
or
mov
test
push
push
xor
mov
frstor
dec
aam
or
push
inc
inc
or
dec
mov
test
push
cmp
adc
mov
out
jno
pop
stc
and
gs
fisubrs
dec
ja
daa
or
or
test
lahf
call
jmp
push
jp
cmpl
inc
lock
mov
adc
ds
mov
mov
xchg
movsb
in
mov
ret
add
lcall
iret
jge
stos
lcall
popf
insb
push
cmpsb
lret
lahf
fwait
out
cltd
outsb
pop
shl
sub
add
xchg
inc
es
add
cmp
pop
test
les
mov
cmp
outsb
sub
push
cmpsb
lret
xor
inc
out
cltd
cmpsl
xchg
xchg
out
mov
orl
out
adc
popfw
push
cmpsb
lret
sub
xchg
pop
out
lcall
cltd
mov
inc
mov
add
stc
cs
and
pop
inc
mov
pop
lcall
ror
repnz
cmpsl
loop
repnz
cmpsl
xchg
jp
and
push
in
lock
xor
call
mov
and
subl
cmp
inc
push
push
jne
cli
mov
int3
fstpt
mov
scas
popf
ficomps
aaa
cwtl
pop
rcrl
push
cmpl
scas
cmp
and
dec
cmp
or
push
into
ret
mov
cwtl
iret
pop
mov
push
sbb
sar
mov
fmulp
out
stos
clc
xchg
pop
push
movsb
xor
pop
xor
and
mov
pushl
mov
hlt
in
mov
loope
mov
out
sbb
out
movsb
xchg
in
mov
and
aas
cmpsb
fldt
add
sbb
ret
js
add
shl
cwtl
repnz
insb
enter
sub
aad
lods
push
xchg
cltd
shlb
cmpsl
in
scas
inc
es
aas
pop
xchg
xchg
inc
cmp
insl
mov
loope
cmpsl
int
pop
inc
inc
loop
daa
sbb
negl
fs
cli
rol
cmp
dec
adc
mov
pause
pop
stc
icebp
adc
sbb
mov
mov
mov
add
and
adc
je
mov
jl
loop
and
inc
es
xchg
mov
neg
jmp
jmp
lea
movsbw
pop
pushf
push
push
pushl
ret
jmp
ret
sbb
js
loop
or
and
add
pop
push
jne
cmp
test
pop
shrl
imul
push
cmp
jle
pop
mov
cwtl
lret
or
or
or
dec
sbb
and
repnz
push
xor
fucom
pop
roll
add
movsl
cltd
out
pop
or
xor
xchg
scas
sub
and
dec
lds
adcb
pop
or
mov
inc
es
inc
jg
jmp
bt
or
push
movl
pushf
push
lea
je
neg
add
bts
sub
pushf
rol
neg
pushf
shr
movzbw
mov
cmp
add
shr
add
add
pushf
neg
bswap
btr
mov
cmc
pusha
movb
stc
shr
cmp
lea
jg
cmp
pushf
pushf
call
cmpsb
cmp
xchg
cmpsb
sbbb
pop
cmp
arpl
pop
daa
mov
aad
adc
xchg
sub
ss
fildll
mov
mov
cmpsl
xchg
call
ret
inc
adc
or
jg
adc
jp
decb
aaa
into
lock
push
adc
add
rol
loop
xchg
in
subb
jno
icebp
dec
push
stos
popa
sub
aad
test
pusha
mov
aaa
inc
sub
test
xchg
mov
out
mov
jne
xor
mov
stos
movsl
inc
psadbw
insl
mov
sub
sub
pusha
mov
test
dec
lods
sbb
push
in
insb
ficompl
fwait
ljmp
ja
cmp
arpl
leave
adc
add
adc
pop
add
call
mov
mov
pushf
stos
setne
mov
jmp
seto
bswap
lea
push
movzwl
bswap
bswap
lea
jmp
pushf
jmp
movl
call
lea
jae
not
not
dec
mov
pusha
inc
pushl
pusha
jmp
arpl
shlb
xchg
insb
mov
call
sbb
cmpsb
arpl
push
pop
xchg
adc
cs
jnp
test
pusha
jne
or
inc
adc
push
leave
or
push
push
pushf
pushl
lea
je
jbe
lea
mov
movzwl
movsbw
lea
call
push
movl
pushf
lea
jb
push
pusha
pusha
movb
pushf
lea
jmp
call
push
lock
std
std
xchg
xchg
insl
and
inc
mov
sub
mov
pop
add
xor
pop
pop
int3
lods
jge
leave
in
cwtl
dec
dec
or
jbe
push
pop
iret
add
in
sub
push
mov
mov
add
pop
movsb
inc
xor
push
test
scas
dec
pop
mov
mov
jo
jmp
adc
push
sbb
stc
loope
add
pop
bound
add
pop
movsl
ja
cmp
rcr
cmp
xor
cltd
sub
dec
mov
jnp
cmpsl
fcoms
cs
aaa
sub
or
push
or
mov
sti
jp
mov
fidivs
test
add
stc
fs
mov
out
jnp
pop
js
cmp
aad
movl
repz
inc
adc
or
and
xorl
cmp
in
adc
pop
cs
clc
sub
fstps
repz
dec
add
mov
shll
pop
test
jecxz
xchg
ljmp
fcomi
xchg
cmp
lahf
mov
fisubrl
add
jmp
push
add
add
loope
and
adc
cmp
cmp
and
loope
cmp
fstpt
inc
adc
dec
dec
shr
mov
call
dec
dec
loope
pop
mov
sar
fidivrs
mov
int3
sub
rcrl
jl
ffreep
mov
cmc
mov
mov
jg
dec
shrl
dec
lret
loop
mov
jae
xchg
sbb
xchg
jbe
mov
scas
lcall
mov
bt
cmpb
push
pusha
push
call
es
outsb
subb
out
cmpsb
mov
mov
add
or
loope
loopne
in
sarl
cmp
bound
cltd
mov
inc
push
cmp
pop
inc
xchg
outsl
rcl
in
rclb
xor
aam
lahf
orb
stos
subl
out
bound
pop
scas
and
repnz
push
out
jb
push
fstpl
sbb
xor
xorb
in
sbb
jnp
mov
inc
dec
shr
daa
les
lods
mov
cwtl
xlat
adc
leave
call
in
push
push
in
xor
pop
out
and
push
sti
mov
jne
mov
ljmp
dec
pushf
in
test
insl
fcom
pop
mov
es
jb
aam
xchg
insl
mov
sbb
or
xor
mov
int3
mov
jmp
popa
xchg
push
jae
sbb
imul
test
mov
loop
movsl
xchg
dec
ds
fiadds
gs
cmpsb
push
aas
ljmp
jecxz
push
lret
add
js
out
lret
inc
inc
cmp
inc
es
imul
fs
pushf
call
dec
not
rol
or
sub
xor
not
not
stc
sub
xor
setnp
inc
stc
neg
dec
movb
push
lea
jbe
dec
pushf
call
lods
adc
pop
shrl
les
add
roll
pop
inc
mov
mov
inc
push
xchg
orb
xor
out
jecxz
jns
xchg
push
out
or
cli
jb
mov
cld
loop
lahf
inc
mov
pop
mov
dec
in
or
xchg
push
xor
push
mov
mov
outsl
fs
lds
popf
mov
mov
inc
and
lods
cmp
das
pop
fwait
pop
cmpsl
lret
inc
es
fs
jb
pushf
cmpb
pushl
lea
jne
bsf
shrd
btr
lea
mov
call
push
mov
cmp
call
jmp
repnz
push
lea
jne
sets
pusha
pop
movb
bswap
push
pop
lea
mov
not
lea
push
movl
call
push
add
lods
add
add
dec
pop
push
clc
aaa
into
add
fcomps
addr16
mov
add
rorl
cmpsb
popf
clc
cmp
arpl
mov
mov
jno,pn
dec
mov
outsl
push
dec
popa
lock
xchg
xchg
fnstenv
mov
xchg
sahf
addr16
stc
addb
push
out
or
xor
or
ljmp
imul
dec
jecxz
jp
fs
push
je
fld1
shrb
and
scas
popf
out
int
add
int3
mov
push
inc
es
xchg
rol
stos
jle
int3
inc
lret
decl
xchg
fsubl
shll
add
and
fildl
mov
mov
push
mov
and
inc
fistpl
adc
and
dec
push
addr16
idivb
push
mov
mov
push
fstpt
adc
push
stos
mulb
cmpsb
inc
jg
sub
lret
jmp
ret
push
lret
es
cmc
xor
or
scas
int
add
jmp
call
mov
fldt
cmp
jp
inc
aam
lahf
shl
jmp
popf
jbe
jne
xlat
dec
and
imul
xor
dec
fwait
sub
std
aaa
sub
cmp
lds
subb
fildll
and
sub
out
mov
stc
lock
arpl
fimuls
sbb
or
jl
cmp
xlat
mov
rcrb
cmp
sbb
mov
mov
testb
lea
jae
and
cmp
lret
xchg
je
in
lds
and
jl
lahf
and
xchg
cmp
jmp
das
sti
or
int
inc
ror
scas
jge
jmp
insl
mov
or
and
push
sti
in
mov
and
cmp
cltd
in
sbb
out
shrb
or
scas
xchg
sbb
add
fwait
mov
xchg
lods
pop
imul
lock
mov
jge
les
or
leave
jne
adc
das
insb
cltd
adc
test
mov
cwtl
call
lods
das
int3
push
push
xchg
cli
dec
pop
mov
daa
scas
jno
xor
push
rol
stos
lods
dec
mov
cltd
mov
pop
lods
in
jecxz
sbb
xlat
xchg
call
cli
jns
mov
push
sbb
stc
fsubs
adc
ret
inc
xchg
addl
jno
push
scas
push
stos
mov
jb
arpl
mov
pop
sbb
into
push
mov
out
or
idivl
rolb
mov
and
js
lods
ljmp
fdivrs
jns
mov
movb
lods
test
pop
data16
xor
aas
mov
les
clc
xor
js,pt
out
pop
mov
lret
jb
mov
divl
inc
shr
jno
iret
push
xchg
lods
jmp
arpl
cmpl
dec
xchg
fcoms
cmp
fisttps
push
dec
jb
dec
jge
lret
push
cmp
sbb
inc
popa
insl
cmp
and
test
cmp
in
iret
insb
push
dec
and
fdivl
cmp
jb
push
pop
mov
aad
and
adc
dec
loop
fistl
scas
pusha
into
push
push
mov
lods
test
dec
xlat
fimuls
pusha
rcrl
cmp
xchg
addr16
jecxz
out
push
adc
sub
jle
lds
cmp
std
test
aaa
jno
sub
nop
fistpl
aad
fwait
inc
mov
cmp
mov
dec
in
mov
mov
leave
sub
push
test
inc
mov
scas
sub
adc
dec
mov
push
arpl
inc
imul
pop
sbb
adcb
mov
or
dec
je
out
dec
aaa
add
cmpl
xor
scas
cmpb
stos
lock
sub
test
imul
sub
jne
mov
insb
sarl
into
push
daa
sahf
cmp
stos
cli
inc
cmp
push
aaa
pushf
push
mov
fiaddl
jge
js
sub
addr16
mov
cmp
fwait
mov
rcrl
stos
addb
push
mov
mov
push
and
pop
lea
bound
add
outsb
clc
dec
fsubrs
jno
jg
cmp
jge
push
dec
movsl
dec
xchg
xor
movsl
push
fldl
and
xor
icebp
dec
in
mov
xchg
mov
and
push
or
dec
dec
sahf
mov
cs
mov
xor
outsl
push
add
xchg
call
outsb
loop
add
mov
and
jmp
movb
or
adc
adc
and
mov
mov
aas
ljmp
mov
jne
cs
repz
hlt
push
leave
push
mov
es
cmpsb
stos
add
call
add
stos
inc
lret
or
and
clc
sub
lcall
mov
testb
push
sbb
xor
cmpsl
paddw
mov
shl
aam
push
and
push
sar
and
clc
sub
xchg
or
adc
repnz
adc
ret
inc
sub
mov
test
adc
rcrb
icebp
lcall
xchg
dec
or
cwtl
lock
adc
xchg
in
movsb
scas
and
jp
sbb
cmpb
add
or
sbb
pop
or
xor
adc
xchg
rolb
xchg
cmpsb
jnp
icebp
sarl
ret
mov
mov
sbb
adc
and
sbb
xchg
gs
insb
push
mov
xor
sub
sub
je
orl
push
sbb
sti
fcoms
andl
jmp
repz
fistpl
add
dec
fsubrs
add
mov
fld
mov
sub
insb
das
int3
je
adc
ja
or
pop
push
hlt
decl
mov
sbb
ja
and
adc
inc
xor
inc
xor
mov
add
addl
mov
push
xor
aam
mov
xor
ret
pop
es
ss
or
data16
and
lea
inc
sub
jp
mov
aaa
adc
outsl
lcall
rorb
out
inc
sub
iret
in
pop
repz
loop
push
pop
dec
fsubr
xor
jle
xchg
pusha
ljmp
push
pop
insl
xor
xchg
push
and
mov
hlt
cld
push
push
daa
cmp
xchg
loop
jne
mov
pop
xor
loop
push
push
mov
mov
cmp
sti
xchg
mov
sti
fisubl
sub
cmpsl
and
sbb
mov
cmp
jl
into
lods
cli
inc
js
stos
aaa
mov
jo
rorl
xchg
and
xchg
das
sti
maxps
sbb
mulb
sbb
push
movl
cltd
inc
xchg
negb
and
and
fldt
jne
push
jecxz
loop
mov
mov
jne
mov
nop
or
xchg
or
testl
ljmp
mov
jl
aaa
jg
stos
test
addr16
cli
inc
pop
loopne
shrl
mov
adc
dec
xchg
dec
mov
jno
mov
fisubs
out
out
addl
mov
fidivrl
or
stos
push
lea
pop
jp
aaa
dec
xlat
xor
jb
loopne
fstl
sub
or
and
cmp
lods
call
or
jl
jae
orb
xchg
fcmove
movsb
inc
es
adc
sub
test
negl
pminsw
int
inc
mov
xchg
push
imul
mov
mov
mov
pushf
in
sub
dec
mov
es
sbb
cmpsl
jg
mov
cltd
or
mov
fucomi
aas
jl
push
inc
push
fs
mov
cltd
jmp
push
stos
xor
ficoms
jae
pushf
lds
inc
add
fnstcw
dec
aad
cld
pop
cmpsl
pushf
cmp
cmp
push
pop
outsb
insl
movsl
sbb
enter
xor
lcall
inc
mov
popa
arpl
fsubl
inc
pop
es
mov
sub
ret
mov
xchg
mov
lret
test
scas
lret
sahf
cmpsb
lret
adc
hlt
mov
fmul
incl
jns
pop
outsl
int
push
xchg
int3
mov
hlt
inc
out
push
ror
and
sub
repnz
lret
fildll
insb
sub
lock
xor
cmpsb
negb
lea
enter
dec
sub
jl
js
mov
lcall
out
mov
stos
adc
popa
jne
mov
lea
inc
push
bound
gs
vpsllq
fidivl
cmpsl
push
and
xchg
inc
out
out
cmp
rcrl
jno
loopne
xor
lea
notb
lret
xchg
les
jl
pop
imul
inc
mov
dec
cmc
and
dec
divl
mov
adc
shlb
ret
sbb
mov
inc
mov
movsl
push
hlt
add
loopne,pn
fadds
cmp
daa
aas
adc
jge
lcall
imulb
jno
xchg
fsubs
dec
xchg
add
daa
push
cmpsl
fsubr
and
and
and
shrb
or
dec
mov
dec
pusha
mov
enter
sahf
sub
sbbb
scas
mov
pusha
cltd
outsb
loopne
mov
mov
lods
jnp
int3
jnp
out
inc
push
popa
std
dec
adc
mov
imul
xchg
pop
fists
lret
test
and
mov
popf
inc
inc
dec
add
cld
jne
insb
mov
push
stos
sub
mov
xor
xor
and
mov
add
jo
mov
mov
xchg
pusha
sbb
popf
sbb
das
shlb
subl
adcl
pop
mov
mov
add
pop
mov
int
stos
out
adc
rcll
push
movsl
fmul
add
mov
mov
popf
pusha
inc
pop
sti
ror
fsts
imul
jecxz
ficoml
xchg
add
jle
pop
arpl
mov
xchg
sub
push
aad
cmc
notb
sbbb
ljmp
mov
dec
dec
jb
push
jnp
bound
adc
add
mov
push
mov
add
scas
add
xor
sti
mov
fmulp
push
ljmp
sub
mov
cmpsb
sub
jg
fdivp
data16
jae
jg
shll
in
xor
dec
in
push
adc
cmpb
imul
test
adc
out
rclb
in
loope
js
pop
test
push
stos
inc
xchg
sub
and
bnd
mov
xchg
sbb
xchg
adc
repz
inc
jecxz
rclb
inc
dec
dec
xchg
push
imul
sbb
sbb
stos
stc
push
mov
hlt
and
push
adc
in
mov
inc
lret
mov
mov
cs
mov
pop
loope
repz
mov
or
jnp
rorb
mov
rorl
dec
cmpsl
je
mov
ret
or
xor
mov
into
loope
repnz
pop
loope
fdivl
pop
orb
mov
ja
sub
cli
test
lods
outsl
cmp
dec
loope
and
mov
rcrb
icebp
out
sbb
mov
rcll
sub
aaa
xchg
add
xlat
pop
pop
add
lcall
cmp
xor
aas
push
inc
xchg
cmc
cmp
cmc
in
stos
hlt
js
popa
lcall
push
sub
mov
jb
ret
and
push
out
flds
and
cmp
mov
aaa
stos
popf
push
add
and
test
hlt
in
rcll
negb
cmp
xor
mov
rorb
add
push
or
cmp
xchg
lods
jmp
aam
movsb
cmp
adc
xor
ret
xchg
subl
jns
es
push
data16
cli
fidivrl
div
add
add
adc
inc
scas
xchg
dec
sbb
addr16
sub
ds
pop
push
mov
jae
stos
push
cmpsl
or
adc
and
loope
std
pop
pop
stc
dec
xor
call
adc
mov
mov
fmulp
cmpsl
mov
nop
xchg
lods
addl
mov
pop
xorl
adcb
adc
into
loopnew
mov
mov
inc
fidivrs
fbld
andl
mov
and
mov
movsb
jnp
adc
int
lahf
cltd
hlt
rorl
xor
or
insl
out
inc
flds
ljmp
sahf
xlat
jle
push
jb
xchg
mov
jmp
jp
loope
jecxz
dec
or
push
mov
loope
cld
pop
inc
cwtl
test
inc
lret
rol
dec
xor
xchg
test
add
int3
mov
fstl
scas
scas
fldcw
push
push
dec
sbb
cmpsl
adc
cmp
out
adc
int
js
movsl
dec
lods
dec
or
pop
sbb
pop
lahf
cmp
push
add
push
sarl
arpl
xchg
jmp
cmp
test
mov
fstp
das
int
ds
cmp
in
cmp
arpl
mov
inc
je
jne
into
xlat
icebp
mov
jle
sbb
xor
xchg
nop
pop
sub
or
aad
cmp
loopne
test
rclb
addr16
lock
push
mov
dec
test
test
or
testl
mov
and
or
call
xchg
dec
jmp
adc
and
repz
ss
and
lea
pop
repz
aam
push
cmovbe
repz
hlt
xchg
test
jmp
mov
imul
inc
sub
testb
fxam
dec
sbb
stc
addr16
or
shr
inc
xchg
es
xchg
aas
outsl
fisubs
loopne
adc
es
in
pusha
pushf
pushf
lea
jne
sub
lahf
sbb
shrd
xor
and
ror
mov
sub
shr
add
test
mov
clc
bt
test
pusha
movw
push
lea
je
jmp
clc
add
pusha
lea
jne
call
test
jmp
sub
ss
dec
call
mov
cmp
inc
lock
nop
cmpsl
ss
or
aad
cs
pop
jmp
and
mov
mov
mov
ret
and
pusha
cld
add
loope
pop
dec
pop
xchg
push
cli
arpl
loope
xchg
mov
xlat
popa
xor
inc
jle
and
push
or
lret
imul
pop
mov
rcrb
je
pop
sbbb
sub
movsl
jmp
cli
cmp
pavgw
rcrl
sbb
outsb
in
mov
les
imul
jmp
add
add
insb
and
pusha
pushl
pushl
ret
ret
and
or
es
jno
jle
test
dec
insl
add
pop
divl
in
icebp
xchg
dec
cmpsb
mov
nop
ret
adc
ja
clc
insb
xchg
cmp
dec
mov
xor
into
jecxz
or
ja
sub
dec
push
mov
push
maskmovq
idivl
scas
dec
push
stos
mov
fdivrl
lret
push
cmp
inc
pop
pop
cmc
mov
mov
movl
jl
mov
dec
push
imul
icebp
and
mov
jne
and
push
mov
adc
lds
ret
mov
mov
sbbb
jns
adc
and
into
jnp
mov
jb
jo
jnp
ljmp
notl
sub
adc
jp
push
bound
and
int
das
adc
and
mov
std
adc
lcall
jb
out
inc
add
or
cwtl
jl
dec
lds
test
sbb
mov
fistpl
jge
push
jno
adc
xchg
in
jp
mov
pop
xchg
jo
test
sub
pop
cmp
adc
xor
and
push
xor
mov
fcom
and
test
sbb
scas
mov
jecxz
mov
inc
adc
dec
sbb
insb
rcrl
call
sub
mov
ret
sub
and
push
scas
mov
jecxz
sbb
adc
pop
ror
cmp
out
adc
or
test
scas
push
jae
movups
out
cltd
imul
pop
push
jle
repnz
add
pop
mov
sbb
cmp
sub
inc
cld
ret
push
fisubrl
sub
mov
loopne
mov
aam
adc
es
add
rol
pushf
xor
call
jmp
stc
cmc
add
push
pushf
pushl
lea
jmp
stos
add
int
xchg
cs
rol
mov
mov
or
xor
subl
add
dec
lods
outsb
ljmp
loopne
popa
int3
jbe
or
jg
sbb
enter
add
mulb
rorl
or
push
fs
push
pop
std
jecxz
ret
pusha
cltd
or
lahf
aam
sub
jno
shr
loop
add
push
js
xchg
cmpsl
and
pop
orb
pop
or
xor
in
ficompl
test
sub
not
adc
movsl
inc
ss
mov
dec
add
mov
sbb
addl
dec
imul
aad
rcrb
jg
dec
notb
add
test
sbb
xor
shlb
ret
outsb
addl
bnd
inc
and
jmpw
xor
pusha
and
pop
adc
inc
cwtl
aad
arpl
or
sub
fwait
lret
call
insl
mov
sbb
sbb
decb
mov
push
push
push
mov
xchg
loopne
mov
cmp
push
inc
sub
jmp
and
in
lret
sub
dec
push
pop
jmp
movsb
cld
nop
pop
dec
addb
fisttps
pop
cmp
cmp
mov
pop
das
push
mov
das
int3
add
icebp
aam
cmpsl
fcoml
iret
test
rcr
arpl
lret
sbb
push
repz
mov
inc
sub
hlt
out
ljmp
mov
xchg
rolb
popa
and
xchg
cli
rorl
jnp
mov
dec
lahf
xchg
inc
loopne
pop
aas
out
pushf
xor
scas
xchg
jns
mov
lds
dec
xchg
jecxz
arpl
cmp
cli
loop
inc
pushf
and
xchg
jnp
sbb
sahf
dec
add
xchg
es
or
or
test
leave
add
push
movb
stos
push
pushf
movw
pusha
lea
jmp
movzbw
jmp
mov
not
movsbl
mov
bswap
mov
not
mov
pusha
pushf
call
ret
sub
mov
stos
mov
cli
or
xor
gs
inc
shll
mov
sbb
ss
pop
outsb
int
xchg
sti
or
into
and
movb
lret
popf
lods
outsl
sub
stos
jbe
outsl
jmp
rol
mov
inc
cli
push
scas
dec
fisubrs
test
inc
inc
push
cs
fidivrs
movl
lods
int
dec
imul
lods
fs
es
adc
lea
call
push
jmp
jmp
std
add
mov
pop
js
xor
enter
mov
sub
push
xchg
ret
pusha
aaa
into
cmp
imul
rcrb
nop
rcrl
movsl
jno
rcl
testb
popa
aam
gs
loop
cmpsb
push
lret
jl
xchg
stos
lock
fs
das
push
stos
adc
enter
xchg
leave
pop
and
loope
scas
iret
jp
out
cmpsb
fwait
jnp
add
inc
es
lret
mov
pusha
call
ss
xchg
xlat
adc
ja
test
pop
inc
inc
leave
pop
sbb
adc
es
lds
mov
ret
mov
xchg
daa
bound
es
shlb
xchg
xchg
xor
xor
mov
add
jno
sbb
fwait
test
or
xchg
div
int
outsb
xchg
xchg
pop
push
cs
roll
or
fsubp
out
mov
scas
js
ja
mov
jecxz
insb
dec
push
sbb
sub
inc
and
fistpl
inc
add
movb
pushl
popl
movw
push
pushl
ret
shrd
push
dec
shr
push
shl
push
movzbw
mov
shld
shl
xchg
rcl
mov
sub
movzbw
btc
mov
cmc
cmp
test
or
push
pushf
pushf
lea
je
call
sub
mov
and
clc
mov
lea
cmp
jmp
xor
pushl
jmp
push
lods
mov
call
popa
repz
add
cmc
add
outsl
push
cmp
lods
mov
movsl
push
cmp
push
shlb
stc
mov
cs
fldenv
xchg
xchg
shrb
mov
mov
pop
in
and
outsb
push
pop
or
fsubs
add
xor
or
pop
push
sub
ret
cmc
fldt
in
cmp
xor
ja
xor
mov
sbb
sub
repz
notl
int3
xchg
push
enter
imul
adc
dec
loope
dec
hlt
mov
mov
cmp
mov
fldt
movsb
mov
les
cmp
test
xor
bt
or
call
adc
mov
and
lds
jmp
repnz
int
pop
jno
or
mov
popa
mov
mov
adc
cld
lods
xor
lcall
sti
mov
inc
test
aas
and
sbb
scas
mov
add
mull
push
mov
cld
dec
xchg
ja
xrelease
inc
fisttpl
sub
xchg
dec
sbb
jb
adc
adc
mov
popa
incb
ss
fistpll
mov
testl
add
cs
add
stc
cmp
fimull
or
xchg
jnp
scas
fucomp
stos
lret
sbb
adcb
sbb
mov
movsb
lahf
and
sbb
jmp
mov
call
pusha
movb
pushl
pushf
movl
push
call
jmp
arpl
cld
ficoml
add
push
mov
leave
mov
mov
push
cli
xchg
jae
jecxz
fdivrs
mov
subl
arpl
leave
data16
pop
mov
sub
push
sub
xor
or
clc
ds
mov
cmc
push
int
movsl
in
push
outsb
loop
aas
dec
or
add
add
or
test
lcall
daa
dec
sbb
sahf
inc
leave
rorl
inc
xor
cltd
mov
adc
mov
xchg
int
test
xchg
aaa
xchg
mov
movsl
and
xchg
or
fs
xlat
shrl
popa
fstl
mov
mov
and
outsb
jne
lds
pushf
inc
sub
outsl
adc
fbld
imul
or
push
cmpsl
push
xor
insl
lock
nop
ds
fisttpl
push
sub
inc
es
mov
xchg
mov
daa
mov
push
cmc
sbb
dec
jge
cld
je
jmp
mov
sbb
xchg
insb
aas
xor
sahf
add
xchg
and
dec
inc
adc
fwait
int3
int
sarl
aas
stos
pushf
jmp
popf
jl
in
decb
aaa
aam
fs
adc
shll
or
sahf
bound
dec
hlt
nop
mov
xchg
xchg
mov
xor
lea
loopne
jae
sbb
popf
xor
pushl
test
mov
js
sbb
adc
sar
mov
add
cmp
mov
push
int
cmp
cld
out
popf
sahf
stos
sti
mov
inc
push
std
lcall
xor
push
lcall
ds
add
psubq
and
jns
jo
jl
inc
popf
cltd
sbb
xor
call
cli
fbld
shlb
out
mov
mov
xchg
movsb
loopne
je
les
ja
repz
sub
cmpsb
cwtl
push
fnsave
mov
xchg
add
test
and
push
cmp
and
xor
inc
xor
popa
sub
jb
mov
rorb
stos
lods
pop
mov
imul
lahf
in
popa
cmp
xchg
das
sub
fsubl
xor
and
bound
scas
cmpsl
movsb
stos
ja
pop
pop
rcrb
test
int3
jbe
cs
test
xchg
cwtl
std
cmpsl
xor
cltd
push
js
popf
insb
das
stos
lock
cmpsl
and
add
mov
scas
in
mov
and
xlat
adc
sub
jmp
push
lea
je
pushf
test
call
mov
in
iret
fdiv
clc
dec
out
mov
push
adc
mov
adc
cltd
sbb
jns
cltd
xchg
sub
mov
shrb
pop
push
xchg
in
es
shr
push
movsb
push
cltd
clc
xchg
popf
imul
mov
fstpt
mull
imull
pop
int
jmp
pushf
test
mov
add
mov
and
lock
xor
je
adc
ret
pop
pop
mov
adc
jmp
not
push
setno
mov
pushl
jmp
pushf
lea
call
push
cmc
sub
mov
pusha
lea
jne
call
imul
clc
call
lods
fs
decl
jnp
pop
out
incb
das
push
shl
jno
es
or
push
mov
xor
rclb
ret
iret
add
mov
add
inc
xlat
arpl
pushf
sahf
jae
shll
push
test
leave
xor
stos
outsb
dec
jmp
hlt
imul
ret
fs
mov
adc
or
add
pop
movsb
push
sar
inc
sar
test
mov
mov
icebp
call
movl
pusha
push
lea
jmp
or
pushf
pushf
lea
jne
movzbl
mov
call
inc
xchg
leave
sahf
stc
js
xor
or
outsb
mov
push
adc
mov
sti
push
xchg
and
inc
add
mov
pushf
lahf
cli
incb
mov
adc
mov
sarb
push
leave
in
sub
xor
sbb
xor
pop
mov
mov
mov
and
pop
mov
jae
add
push
cmp
bound
es
bnd
out
xchg
push
or
pop
xlat
mov
jl
stos
ljmp
int
sbb
ret
daa
and
push
int3
pop
std
shrl
fidivs
bound
mov
hlt
jne
pop
jg
mov
mov
cli
enter
sbb
iret
jbe
mov
mov
cmc
xor
inc
es
sets
rol
pusha
setns
call
cmp
repnz
and
sbb
stc
jge
dec
xchg
fdivrs
stos
mov
mov
in
mov
adc
mov
aam
loop
adc
in
bound
push
pop
or
xor
push
inc
push
ret
mov
call
push
loope
mov
in
cltd
nop
xchg
out
jnp
fidivrs
js
shrb
inc
loope
push
subb
inc
gs
inc
es
scas
ss
push
adc
call
call
aas
in
cltd
in
push
xchg
jns
jo
mov
rcrb
sub
xorb
inc
stos
int
loop
fs
adc
inc
lret
mov
repnz
add
mov
inc
cli
xor
adc
mov
shlb
out
xchg
prefetcht2
loopne
in
test
or
pop
cmpb
jbe
fs
adc
lea
insl
mov
inc
mov
push
mov
cs
out
cld
sub
ss
pushf
stc
cmp
cmp
pushf
mov
pushf
lea
jbe
jae
sub
add
neg
mov
push
mov
movsbl
btc
shl
add
lea
pushf
shr
movsbw
mov
and
not
sar
add
lea
movzbw
bswap
mov
movl
pusha
call
int3
test
imul
xor
push
cmp
add
mov
or
fcmovnb
rolb
sti
jl
fadds
mov
pop
xor
sbb
sbb
add
push
cmp
xchg
push
push
mov
mov
jl
cmpsb
mov
jl
into
inc
enter
sar
mov
jl
jns
mov
inc
scas
fiaddl
lahf
dec
or
bound
mov
fdecstp
adc
push
cltd
jle
aad
jg
mov
mov
repz
adcb
imul
mov
mov
loopne
mov
sahf
repnz
mov
adc
movups
aaa
pop
int3
push
loope
and
mov
inc
xor
xor
mov
jg
insb
ret
cmp
aaa
mov
sbb
jae
add
add
add
add
add
add
add
dec
lock
push
lock
push
lock
add
add
add
push
lock
or
cld
mov
xor
inc
scas
inc
and
adc
or
les
pop
mov
sbb
push
or
and
mov
cmp
xchg
sti
scas
xchg
imul
int3
hlt
in
daa
in
xchg
insb
int3
test
in
jnp
testl
adc
jecxz
xor
sahf
adc
int
xor
dec
and
pop
xor
repz
sbb
pop
sub
pop
jmp
insl
inc
pop
cs
loope
notb
mov
pop
pop
add
add
adc
mov
js
jge
insb
insl
imul
pop
push
push
ss
js
cmp
sahf
cmp
adc
inc
les
jl
adc
or
mov
xor
dec
popa
pop
push
movsl
aam
xchg
push
adc
mov
xor
lret
lar
add
jb
data16
jl
icebp
dec
test
leave
dec
mov
sbbl
xchg
push
cmc
cltd
cltd
mov
cwtl
mov
push
fbstp
jle
jbe
cmp
xlat
xor
pushf
pop
mov
inc
call
jle
movsl
push
sahf
fsub
dec
dec
cmp
dec
jne
stos
nop
std
cmp
add
dec
mov
ljmp
scas
cmc
ror
das
es
idiv
les
sub
lods
ljmp
pop
sbb
jl
xchg
push
je
mov
sbb
scas
mov
sti
cmp
loope
adc
repz
mov
fmull
pop
lret
or
sahf
add
mov
testb
fsubs
test
add
sub
xorb
das
fidivl
push
fistpl
xchg
mov
pop
dec
push
sbb
mov
sbb
mov
hlt
and
xorb
jo
enter
xor
push
mov
mov
xor
fsubrs
js
cmp
mov
andl
loopne
sbb
jo
jmp
cmp
subb
stc
stos
insl
popf
pop
mov
adc
or
mov
mov
test
mov
push
add
xor
aaa
dec
cmp
fsub
ficomps
sub
push
aam
loop
and
push
pop
mov
push
jns
sub
xchg
push
std
iret
out
adc
mov
xchg
push
xor
cmp
rol
into
andl
inc
mov
and
loope
pop
push
mov
outsl
xchg
xchg
cmc
push
push
xor
jecxz
push
push
ret
mov
ficomps
push
adc
int3
clc
or
and
cmc
dec
push
imul
xor
pop
pop
cmpsl
mov
mov
mov
sbb
mov
pop
dec
and
rcrl
test
mov
add
jno
aad
pop
xchg
mov
and
jnp
clc
ja
jle
cmp
jle
in
xchg
cmp
icebp
sub
xchg
icebp
scas
xlat
cmp
sub
mov
repnz
sub
jg
call
inc
mov
cmc
rcrb
les
xor
jae
es
jnp
pop
test
jno
adc
adc
fwait
std
arpl
mov
addr16
lock
outsl
mov
jp
dec
test
fisttpl
sti
enter
adc
ret
ret
sub
movsb
sahf
ss
lret
orl
out
fwait
cmp
push
adc
enter
pop
ss
cwtl
std
xorl
mov
cmp
xor
fidivrl
and
cld
sbb
loope
repz
hlt
xor
pop
leave
xchg
push
xchg
enter
push
cmp
mov
negb
test
das
adc
dec
xor
inc
sub
lea
jmp
idivl
lea
inc
into
test
sahf
stc
insb
bsf
iret
push
icebp
daa
into
aaa
ds
and
inc
mov
cmp
push
sub
xchg
inc
and
scas
into
fdivl
fwait
int3
xor
pop
pop
jns
mov
add
inc
dec
iret
inc
pushf
xchg
jl
lcall
mov
sbb
je
lcall
fadd
fnstenv
std
leave
sbb
in
xchg
clc
scas
mov
filds
push
add
lea
mov
jecxz
dec
jl
xchg
gs
mov
or
daa
lods
sub
fwait
xor
and
mov
dec
sti
loope
sahf
lcall
xor
or
jno
sub
stos
rclb
mov
addr16
ret
jg
mov
or
popf
call
jle
push
mov
lcall
or
loopne
mov
test
in
rclb
hlt
push
test
fisttpll
push
dec
pop
cwtl
or
inc
mov
dec
or
push
call
mov
xchg
mov
sar
hlt
mull
test
sub
pop
push
adc
dec
jno
test
xor
mov
gs
jp
popa
xchg
or
and
dec
popf
insl
sbb
lcall
xchg
sbb
pop
ljmp
sbb
je
jo
and
lahf
popa
loope
mov
add
inc
fwait
subb
xlat
mov
mov
push
xchg
fistps
add
daa
jecxz
inc
daa
sahf
xor
fidivl
or
cmp
adc
mov
shr
cltd
jns
icebp
add
mov
pop
lds
mov
mov
arpl
mov
jae
xchg
mov
aam
pop
jg
adc
inc
mov
rorb
je
xor
sub
push
jg
lret
and
dec
divb
sub
aas
pop
out
and
out
dec
cmc
arpl
jg
shrb
cs
jge
mov
mov
gs
dec
mov
sbb
adc
ret
imul
sbb
lcall
mov
sahf
cmpsl
daa
mov
loopne
and
insb
rorl
ror
jb
hlt
std
mov
sahf
xlat
add
sub
jae
sub
and
jno,pt
mov
scas
out
ficomps
or
xor
enter
inc
sbb
outsb
test
mov
or
xor
and
ret
loope
imul
aas
sub
jecxz
sahf
ret
lret
lahf
jb
jns
into
sub
test
pusha
ss
mov
lahf
leave
inc
sub
jo
sbb
inc
dec
push
or
rorb
mov
mov
push
cmp
popa
xchg
sub
mov
jo
int
add
test
jne
in
pusha
imul
xor
imul
mov
push
fmul
dec
insl
psubb
and
daa
cmp
inc
fistl
cmp
jbe
ret
mov
push
push
incb
adc
arpl
das
add
xchg
fwait
mov
dec
ja
sub
mov
lcall
xchg
mov
stos
js
scas
jbe
gs
cmp
std
insl
dec
cmp
lods
sub
out
cmpsb
stos
sbb
out
std
sbb
mov
lods
mov
inc
mov
por
jecxz
call
push
loope
sub
adc
shr
xor
jl
ja
jb
hlt
or
je
sahf
push
int
mov
or
adc
and
mov
mov
ret
mov
pop
add
inc
lods
jmp
jp
sub
jno
subb
rcrb
ja
mov
pop
fists
loope
test
repnz
mov
ljmp
jnp
push
test
and
subl
mov
jb
adc
sub
psubusw
push
xchg
sbbb
fisttpl
rolb
cmp
xorl
mov
test
push
lock
cmpb
push
test
xchg
xchg
xlat
dec
jno
ds
jbe
fnstenv
adc
stc
xor
mov
xchg
jae
sbb
cmpsb
test
loope
movsl
testl
out
mov
or
jno
lahf
jno
push
int
add
in
mov
es
add
xor
inc
das
sbb
outsb
sbb
sbb
fs
bound
fsub
or
ret
mov
push
lds
pop
scas
aam
pop
loopne
enter
adc
mov
ds
ror
xchg
add
jnp
pop
xchg
outsb
ficoml
idivl
dec
mov
loop
rcrb
mov
mov
arpl
push
add
add
or
mov
incb
pop
dec
cmpsb
fildl
inc
fcmovne
xchg
pop
sbb
into
jl
mov
sbb
cwtl
xchg
push
pop
test
aaa
lds
push
dec
pop
negl
jno
ljmp
in
lods
leave
jne
in
push
fstpt
mov
out
inc
fs
lret
push
movsl
sbbb
or
add
or
mov
ljmp
and
frstor
jle
mov
ds
gs
pop
fcmovnbe
loope
xor
leave
inc
jns
test
ret
or
or
enter
les
add
xchg
or
add
in
inc
or
sbb
loope
int
decl
enter
push
movsl
jmp
scas
aaa
xlat
pop
pusha
out
fistpl
adc
jae
fsubrl
xchg
out
repz
shrb
stos
push
popa
sbb
dec
int3
inc
arpl
xor
inc
dec
incb
popa
pop
scas
and
test
testl
out
sbb
jnp
add
pop
insb
mov
leave
add
aaa
mov
add
loopne
negb
aad
jne
bound
popf
mov
and
add
rdmsr
cwtl
sub
pop
push
out
clc
and
jnp
outsb
cld
leave
fists
push
jp
mov
dec
pop
jae
fcmovnb
or
mov
aad
les
ss
inc
jno
jmp
imul
jle
sahf
cli
loope
sbb
dec
mov
repz
test
pop
into
cmp
sbb
jbe
pop
rcrb
jnp
js
xchg
leave
sub
cmp
fdivl
roll
or
lahf
push
xchg
and
mov
xchg
mov
mov
ret
lcall
adc
cmp
push
sub
sbbl
sub
int3
ret
add
add
movl
pushf
push
lea
jmp
xor
insl
and
ss
pusha
sbb
xlat
fidivrs
rolb
inc
xor
mov
shlb
pusha
adc
mov
int
inc
or
add
in
stos
into
fidivrs
or
daa
cltd
push
imul
mov
ret
mov
rorl
iret
inc
push
dec
imul
dec
test
cli
mov
push
adc
clc
jne
xor
mov
out
in
sub
jne
test
inc
loope
arpl
out
aas
push
faddl
scas
stos
pusha
das
mov
xchg
push
ljmp
sub
dec
dec
mov
sub
xor
loopne
adc
scas
adc
cmp
add
ja
les
jb
push
ss
lea
jne
sub
xchg
mov
add
add
es
xchg
mov
push
call
cmc
stc
sub
pusha
call
pushl
jmp
dec
scas
jnp
dec
stos
push
shl
frstor
push
fiaddl
out
add
mov
jle
inc
jbe
and
jge
ss
add
xchg
pop
fisttpll
daa
or
adc
lock
pop
stos
test
mov
repnz
imul
push
adc
pop
xor
xchg
inc
es
and
inc
cmp
insb
push
or
mov
push
orl
or
jno
orb
mov
out
cmp
jno
cli
xorl
pop
inc
jecxz
sarb
das
mov
mov
pop
and
xchg
aas
nop
push
push
pop
dec
lret
push
push
outsb
test
xlat
and
xchg
push
ja
ljmp
imul
add
sub
fcomp
int3
cmpsb
inc
dec
out
sbb
push
imul
iret
mov
dec
push
jl
rolb
push
mov
movl
lea
call
pushf
mov
pusha
lea
jmp
jae
test
mov
ss
test
add
lahf
lcall
inc
or
jnp
pusha
pop
incl
lahf
cli
dec
pop
stc
sti
scas
adc
push
repnz
test
pop
inc
jo
in
pop
nop
out
subb
inc
int
in
pop
push
xchg
fistpll
into
dec
cmp
jmp
jno
mov
test
lds
sbb
mov
scas
mull
jge
push
aaa
mov
insb
les
or
sbb
sub
loope
mov
sbbl
cmp
es
push
outsl
jne
lock
scas
outsl
jecxz
jp
in
movsb
cmp
xor
pushw
jecxz
lret
pop
cld
jne
sahf
pop
movaps
jb
or
scas
sbb
mov
push
mov
insb
add
cmpsb
je
xchg
mov
jecxz
add
ret
add
pop
sbb
push
sub
or
insl
scas
cltd
sahf
cmp
aam
mov
shlb
pop
mov
stos
loop
in
test
inc
inc
aad
popf
xchg
outsl
inc
mov
popl
jmp
shrb
inc
scas
jl
aaa
shll
pusha
mov
das
sarb
rcl
out
push
or
or
jge
aas
and
mov
push
inc
add
clc
out
mov
nop
out
clc
cltd
and
inc
scas
mov
adc
ret
or
or
xchg
adc
ret
sub
inc
and
adc
dec
int
daa
mov
pop
ficoms
js
jmp
jno
or
out
iret
dec
ds
push
popa
ja
and
fidivrs
dec
mov
adc
sti
testl
cmc
cmp
inc
sbbb
mov
add
inc
outsb
lods
dec
das
ja
dec
cld
inc
mov
xchg
push
stc
out
inc
mov
nop
sub
jnp
mov
xlat
mov
jae,pt
cltd
add
outsb
or
fistps
loope
add
iret
dec
ret
add
xor
push
inc
es
mov
adc
lods
adc
jns
pop
rorl
out
push
mov
jbe
clc
lods
daa
mov
mov
inc
out
mov
js
pusha
push
out
fs
das
inc
outsl
or
iret
imul
pop
inc
and
shll
mov
sti
sbb
fldt
sub
adcl
das
les
pop
ss
stc
pop
push
xor
pusha
test
mov
mov
mov
iret
shrl
add
or
int
mov
or
push
cs
pop
sbb
mov
jmp
test
sub
dec
rorb
mov
inc
es
mov
adc
push
xchg
add
jb
push
pusha
pushf
lea
jmp
sbb
jae
sub
mov
clc
xchg
iret
jg
rcll
leave
or
leave
dec
cmp
jns
ret
pop
dec
repz
ds
stos
cmp
pop
cmpsb
cmp
adc
imul
js
mov
gs
fadd
dec
push
and
add
cmp
pop
fdivl
sub
xor
xor
insl
in
je
inc
es
push
mov
and
add
out
cmp
call
push
and
push
bsf
push
setg
xadd
sub
add
mov
bsf
bsf
or
mov
clc
bt
test
call
lods
lock
test
std
mov
jg
inc
loop
add
push
ret
or
clc
xchg
cmp
and
imulb
jo
jb
add
mov
push
jmp
jbe
jno
jnp
cmpsl
insb
add
test
pusha
xchg
mov
jecxz
add
pusha
lahf
icebp
add
out
pushf
ret
dec
sub
push
push
sbb
sbb
je
or
mov
dec
pop
sbb
std
dec
mov
cmp
ret
inc
dec
aad
ret
lds
fildll
adc
mov
jmp
cmc
fisttpll
mov
sbb
in
das
nop
xchg
cmp
fidivl
adc
mov
sarl
ret
jmp
xor
mov
repz
negl
popl
nop
mov
js
sub
mov
arpl
shl
and
cwtl
adc
xchg
jo
add
lock
idivb
inc
sbb
das
lret
jg
jmp
ficoms
cwtl
out
mov
cmp
sbb
push
push
sar
cmp
push
out
addr16
mov
mov
daa
pop
int3
mov
sti
push
xchg
iret
sub
shr
ret
jg
popa
mov
cltd
inc
pop
ja
repnz
fnstsw
popf
test
ljmp
test
lret
jne
cmp
mov
enter
jo
dec
and
sub
je
cmc
loopne
cmp
test
das
jg
das
fwait
lahf
dec
sub
pop
fdivr
pop
je
push
push
mov
add
dec
out
jnp
ljmp
in
mov
jmp
out
mov
push
and
sbb
jo
iret
mov
mull
arpl
inc
cmp
dec
adc
fdivl
mov
jno
adc
jle
jl
mov
inc
outsb
vpcmpgtb
jg
rorl
mov
cmpsl
in
rorb
repnz
mov
mov
jns
cmp
unpckhps
insb
int
sub
adc
icebp
sub
jmp
fstps
push
xor
sub
insb
cli
pop
dec
adc
sti
mov
ljmp
jle
mov
mov
ffree
stc
mov
adc
repz
pop
sbbl
xchg
or
aas
nop
jb
test
je
es
add
fidivl
fisttpl
xchg
ret
call
mov
cmp
pop
mov
hlt
xchg
fnstsw
adc
and
xchg
ljmp
ds
inc
or
pop
xchg
loopne
pop
shll
repnz
push
inc
xor
cmp
cld
in
imul
stos
cmp
sub
xor
arpl
push
and
test
out
push
sti
cmp
in
cmp
fimuls
jp
bound
jns
es
lret
test
pushf
pushf
pusha
lea
je
and
add
rcr
and
setbe
movsbw
mov
push
cmc
bt
cmc
add
test
clc
cmc
clc
mov
shl
mov
cmc
push
test
call
xchg
pushf
jmp
not
clc
call
loopne
outsl
jmp
loope
dec
sbb
aam
out
cmp
push
push
or
jbe
icebp
scas
stos
push
outsl
and
aas
pusha
fiaddl
sbb
js
call
sub
js
mov
adc
sbb
jnp
push
ret
inc
pop
mov
call
cmp
lods
scas
pop
jp
mov
in
in
fs
sub
push
xchg
xchg
fs
popf
imul
in
aam
push
cltd
mov
lock
mov
cmp
movsl
jge
push
pop
cmp
inc
or
xor
stos
or
xchg
imul
movsl
aaa
push
cmpl
mov
aas
sarb
negl
out
sbb
scas
mov
fildll
sbb
sahf
sbbb
leave
pusha
xor
sub
std
movsl
scas
jmp
sub
fists
outsb
sbb
jne
inc
es
sub
push
add
sub
push
mov
or
call
push
lods
setns
pusha
rol
mov
not
not
dec
setle
rol
adc
rcl
ror
xor
pushf
test
setns
sub
not
rcl
shl
cmp
jmp
pushf
movb
movb
mov
movl
pushf
lea
jmp
movsl
or
jo
add
pop
cs
dec
mov
in
adc
inc
jle
sbb
mov
and
popl
stc
pop
pop
movsb
jno
add
fldpi
mov
loopne
imul
fcoms
sarl
leave
loope
mov
xchg
xchg
jle
mov
stos
sub
setle
add
sub
fwait
incb
push
mov
pushf
dec
cmc
pushw
popfw
call
jmp
movw
pusha
movl
pushf
push
mov
lea
jmp
push
lea
jae
pushf
lea
jne
push
pusha
stos
push
pushl
pushf
movw
lea
jmp
or
nop
in
push
insb
jle
fwait
cmp
and
call
mov
addr16
add
pop
pcmpgtb
jle
loop
mov
repz
int3
jno
xchg
fildl
out
jmp
fwait
xchg
data16
loopne
ss
sub
imul
lea
popa
in
xor
mov
mov
adc
ja,pt
test
idiv
mov
cltd
cmp
and
lea
inc
dec
jge
inc
es
mov
loopne
mov
faddp
inc
and
xchg
loope
mov
cmc
pushl
test
pushf
lea
je
push
test
movw
pushf
add
clc
test
pusha
cmp
pushf
pushf
mov
pushl
lea
jb
clc
stc
clc
test
cmp
pusha
lea
jae
pushf
mov
pushf
pushl
lea
jmp
jmp
call
call
push
lock
std
std
mov
pushw
mov
ret
jl
xor
dec
and
pushf
mov
pop
jl
xor
cmpl
in
or
scas
and
aam
pop
ret
add
jmp
and
cmp
pop
fstl
add
mov
xchg
in
xchg
push
jbe
hlt
movsl
mov
shrl
adc
and
jmp
push
rorl
xchg
add
call
pushf
movsbw
mov
movb
lea
call
pushf
lea
jne
lea
mov
mov
pushf
movb
mov
pusha
lea
jmp
pusha
movl
call
cmp
jmp
cmp
or
jmp
fadds
jle
and
xchg
and
xor
out
js
add
imul
or
cmp
cmpsl
mov
movsl
fcoml
fistps
fmuls
leave
mov
lcall
dec
idiv
leave
mov
arpl
mov
jbe
js
mov
neg
jg
loopne
inc
ret
mov
dec
lcall
jnp
fsubrl
push
out
adc
xor
mov
jmp
repnz
in
test
cwtl
loope
xchg
lods
lret
add
inc
ret
sub
mov
mov
gs
test
jbe
push
add
test
mov
rorl
and
loop
pop
ror
int3
cmpsb
fwait
pop
addl
jns
xor
sbb
xchg
or
xor
mov
xchg
popa
sti
mov
js
int
push
gs
call
outsl
iret
inc
or
pop
sub
xor
data16
shrb
mov
push
sub
jb
arpl
ret
lret
jmp
cmpsb
in
clc
or
or
imul
xchg
dec
dec
lcall
rcll
pushf
int3
sub
inc
dec
add
or
lea
inc
xorl
es
aad
push
add
push
lea
or
fwait
cmp
or
addr16
xor
mov
pop
daa
push
test
shll
mov
inc
fmuls
mov
sub
aaa
sub
pop
push
in
lods
je
mov
dec
fnstcw
cmp
repz
sarl
push
shrb
xchg
adc
scas
jno
mov
test
and
push
or
mov
inc
es
in
add
mov
jns
mull
test
push
fidivs
sub
lahf
and
imul
popf
clc
add
sub
call
ret
mov
aam
mov
rorb
mov
sbb
je
xorl
out
jno
mov
test
testb
push
mov
rcll
sub
sub
popa
repz
sti
mov
jg
int
fisubs
cmpsl
call
outsl
adc
and
cmp
jecxz
push
ljmp
in
fs
push
and
sub
sbb
pop
loope
pop
lods
out
adc
fucomp
or
xchg
clc
jne
cmpsl
or
sbb
push
or
outsb
jno
pop
ret
rcrb
push
inc
or
lahf
cs
push
mov
push
sbb
xchg
imul
push
nop
out
pop
inc
es
in
lahf
push
insl
mov
scas
xor
sti
fcoms
fdivrs
or
enter
adc
mov
mov
dec
in
inc
xchg
loopne
and
pushf
xor
test
fmul
movsb
bound
and
jns
sbb
out
sub
popa
jg
ja
mov
je
dec
div
or
or
adc
daa
lahf
cmp
jae
cmp
pushf
push
mov
aas
cmp
push
rcl
mov
out
push
and
pop
ficoms
outsl
lea
mov
sahf
add
push
push
pop
stos
ja
lea
push
cmp
or
inc
ds
cmp
jge
shrb
sbb
sub
jne
mov
sbb
xor
scas
cmp
es
or
loop
sub
clc
test
test
cmc
cmp
push
pushf
movb
lea
jae
pushf
lea
jmp
mov
and
jl
mov
movsb
iret
pop
sbb
xchg
into
inc
sub
test
daa
mov
popf
xchg
cmpsl
lods
sahf
fnstenv
gs
pushf
inc
or
push
out
add
repz
aad
mov
adc
in
cli
and
inc
add
fstps
ja
jno
jmp
jge
or
push
dec
xor
insl
hlt
popf
pop
fldl
xchg
inc
sbb
push
jb
or
call
pop
shll
jae
cltd
shrb
sbb
scas
sahf
daa
mov
push
inc
xchg
xchg
nop
cmc
pop
hlt
cmovno
push
cmpl
jp
arpl
sti
push
xchg
mov
out
scas
jecxz
in
mov
or
pop
shlb
inc
call
xlat
jmp
stc
pop
xor
std
sbb
push
fdiv
push
sub
mov
in
ficoms
cmpsl
push
inc
mov
jecxz
mov
stc
xor
mov
outsb
jb
out
fildl
pusha
dec
cmpsl
sbb
lods
dec
in
jge
xlat
int3
push
mov
es
or
mov
cmp
call
lea
jne
movzbw
mov
pusha
pusha
push
pushf
lea
jmp
inc
push
bt
cmc
neg
jmp
lea
ja
jmp
mov
call
shl
call
bt
call
jmp
add
add
mov
daa
inc
cmp
testb
dec
gs
es
adc
setno
sbb
cs
cld
icebp
cli
xor
pop
int
cmpsb
into
mov
mov
ljmp
fidivl
dec
nop
arpl
outsl
pop
sub
adc
cmp
or
lret
fs
add
sti
mov
dec
sbb
jnp
test
arpl
add
push
push
shlb
inc
es
pop
jbe
lea
jae
stc
clc
test
cmp
jmp
inc
jmp
stos
xchg
mov
out
icebp
pop
imul
dec
jb
cmp
xor
inc
dec
outsl
fdivl
movsl
leave
xchg
popa
daa
mov
mov
lods
ljmp
ljmp
cmp
dec
xchg
jge
pop
repz
xchg
data16
dec
pop
or
push
mov
pop
test
cmpsl
pop
sub
xchg
pop
mov
sub
aaa
out
cwtl
jmp
dec
jo
xor
push
pop
sbb
pusha
mov
arpl
es
cmc
adc
in
mov
push
rorl
repz
xchg
insl
out
xlat
movsl
lcall
pop
jb
frstor
call
mov
stc
testl
movsb
add
imul
stos
or
insl
add
cmp
subb
xchg
stos
or
adc
sub
inc
cli
scas
pop
arpl
xchg
fisttpll
and
loopne
or
call
clc
inc
es
mov
shl
shll
and
call
pusha
lea
jae
cmp
stc
xor
call
lea
call
jmp
push
pusha
lea
jmp
call
jl
push
loop
int3
jne
push
fs
dec
or
int
mov
test
loopne
repnz
mov
mov
and
dec
sub
push
xor
out
adc
sbb
inc
cld
pop
add
shlb
sub
mov
mov
gs
mov
push
push
movl
pushf
push
lea
jmp
dec
jmp
push
jbe
scas
inc
lcall
es
mull
imul
push
cmpsl
adc
mov
xor
or
insl
lds
out
out
push
das
outsl
mov
decb
loopne
cmpl
xor
sbb
pop
stos
enter
movl
and
imul
xor
cmc
test
call
push
pusha
movl
call
dec
mov
xor
loopne
xor
cmpsl
and
lret
xor
test
add
js
popf
xchg
push
mov
mov
stos
dec
aas
mov
fidivl
out
lret
mov
mov
cmp
sbb
dec
pop
js
lea
push
popa
push
imul
dec
add
sub
ss
mov
aad
out
pop
aad
or
cmp
lcall
xor
ret
jmp
call
out
ficoml
sahf
sub
push
mov
xchg
es
xchg
mov
movsb
lret
cmp
xchg
jne
in
pop
add
mov
dec
pop
mov
pop
les
movsl
sub
mov
push
clc
sub
out
inc
es
pop
or
je
jae
pusha
pushf
adc
pusha
push
push
push
lea
jmp
lea
je
push
mov
bswap
mov
mov
cwtl
lea
pushf
pushf
movl
pushf
pushl
popl
pusha
pushl
ret
sbb
sub
subl
icebp
sti
xchg
loope,pt
fsubs
sbb
mov
in
and
cli
aad
push
inc
and
out
inc
push
inc
arpl
mov
sub
and
push
lods
inc
frstor
add
testl
ss
sbb
fsubr
out
outsb
test
cmp
cli
sbb
mov
test
dec
jne
adc
mov
into
and
jb
leave
xor
xor
mov
cltd
inc
sbb
fs
cltd
out
inc
inc
or
push
mov
orps
roll
in
mov
cmp
lea
je
adc
push
scas
cmc
mov
cli
push
jne
dec
stos
stos
lea
rorb
inc
inc
lcall
rorl
xchg
or
push
mov
cli
shl
repnz
mov
mov
mov
ret
mov
xchg
into
lret
in
out
push
je
adc
and
pop
xor
sbbl
les
jnp
jb
cmp
and
jno
mov
outsl
roll
mov
and
stos
je
rolb
dec
fs
aas
les
ja,pn
insb
mov
ljmp
es
xor
mov
xchg
xor
scas
stos
and
insl
hlt
add
imul
ret
lds
pop
xor
push
xor
sahf
sub
pop
mov
int
jae
add
inc
es
dec
dec
jns
xor
push
call
setp
xchg
cwtl
movzbw
mov
jmp
pop
shrl
and
pushf
xor
jnp
mov
mov
dec
mov
adc
mov
adc
adc
roll
mov
push
ljmp
bound
lock
cmpl
sub
imul
xor
cli
dec
mov
sbb
jl
mov
add
add
fcmovu
cmp
pop
mov
mov
es
sbb
xchg
dec
lods
fldt
inc
int
xchg
lcall
les
push
sub
xor
cwtl
mov
repz
mov
pop
sti
lds
int3
sbb
testl
and
scas
lahf
inc
daa
fs
lods
roll
inc
es
fs
sub
add
loopne
testl
lea
jmp
movl
push
movb
mov
lea
jmp
call
scas
in
xchg
mov
mov
jne
push
outsb
rcl
sti
bound
mov
std
aam
sub
add
vcmppd
mov
stos
push
repnz
enter
fs
mov
adc
dec
fdivp
cmp
in
adc
inc
es
jmp
scas
mov
xchg
insb
jnp
add
aad
xchg
jl
sub
fdivl
popa
loopne
js
push
notb
mov
shll
ret
inc
pop
out
cmp
imul
cmp
ss
mov
xor
sub
scas
jnp
nop
orb
pop
pop
arpl
sbb
ret
sbb
mov
push
int
stos
mov
mov
ds
rorl
mov
cmp
lods
or
push
dec
or
mov
addb
out
cld
dec
adc
ja
fsubrs
ljmp
jbe
movsl
outsl
lahf
mov
mov
push
scas
outsl
mov
jmp
std
sarl
fcomps
std
aaa
and
pop
sub
aas
mov
inc
pop
push
jp
cmp
out
adc
gs
out
push
add
pop
repnz
mov
push
in
jp
es
movsb
cmp
mov
inc
es
sbb
lret
jns
jno
and
popf
and
add
jl
aaa
mov
and
andb
fmuls
mull
cmp
jno
inc
fisubl
mov
xchg
xchg
test
popa
xchg
pop
rep
js
repnz
mov
lods
cld
aas
push
aam
push
leave
adc
jb
xlat
cld
lcall
mov
dec
xchg
add
adc
mov
lret
jns
mov
inc
es
int3
jmp
pop
mov
inc
mov
popf
aam
pop
aad
hlt
mov
js
mov
or
add
jg
push
lods
dec
jne
iret
loop
lcall
mov
es
iret
subl
decl
test
add
pusha
pusha
call
mov
call
sub
mov
test
mov
pushf
clc
mov
mov
stc
add
pushf
jmp
sub
pusha
lea
call
push
lea
jae
push
mov
call
jne
rcl
sbb
jp
fucomi
adc
rcrl
jle
js
hlt
mov
sub
and
cmp
xchg
jge
xor
mov
clc
je
mov
cli
cmpsl
push
popf
inc
imul
sub
ss
sub
mov
jg
pop
test
fsubs
dec
test
mov
adc
iret
mov
ljmp
ficoms
mov
mov
inc
es
shll
sbbl
mov
aas
roll
fs
mov
jmp
mov
ljmp
mov
mov
je
add
fs
out
push
shlb
mov
jae
and
mov
push
out
mov
mov
bound
std
cmp
cmp
pushl
pusha
lea
jb
pusha
cmp
pusha
clc
cmp
call
imul
or
xchg
jmp
test
add
mov
push
jle
xor
push
pop
loopne
jmp
lds
icebp
push
pop
imul
ja
test
int3
push
jmp
adc
jle
or
or
cmc
aas
cwtl
mov
ljmp
popa
adcl
xchg
push
out
cmpb
push
inc
loopne
outsl
xlat
dec
adc
pop
repnz
shl
nop
dec
mov
jecxz
pop
jle
loope
inc
bound
test
shlb
int3
pop
mov
call
mov
imul
sub
enter
in
pusha
sbb
lcall
sar
fsts
dec
je
mov
andb
push
ret
pop
or
mov
xlat
notl
gs
xor
jb
mov
sbb
push
outsl
fldenv
mov
inc
arpl
ljmp
test
arpl
loope
sar
ljmp
cmp
xor
cmp
imul
arpl
stc
pop
pop
aam
std
rcl
push
adc
adc
into
js
pop
xchg
xchg
lock
divl
js
ss
jo
xor
push
mov
leave
mov
sub
fxch
inc
es
cld
movsbw
push
setnp
push
pushf
pushf
mov
cwtl
lea
jmp
pushf
movl
lea
je
pushf
movl
pusha
pushf
pushl
lea
jmp
cld
push
sub
mov
mov
shll
aad
aam
dec
adc
pop
aad
and
xchg
repz
ljmp
mov
push
mov
pop
inc
push
aaa
jle
daa
and
jo
loopne
cmp
lret
imul
fldenv
inc
inc
fcmovb
mov
pop
add
pop
fs
adc
fs
push
sub
repz
jp
loope
test
adc
cmp
cmp
leave
xchg
enter
arpl
lock
ds
jns
push
fistpll
add
inc
inc
stos
adc
mov
adc
push
mov
xchg
sub
xchg
cltd
xlat
iret
or
mov
pop
or
scas
sbb
jno
jge
mov
imul
jp
fs
jb
push
lea
call
jmp
test
mov
mov
out
fdivr
push
out
jge
fsubs
pop
xchg
mov
cli
pop
popa
repz
jge
push
pop
inc
dec
bound
xchg
lock
repnz
outsb
rclb
out
outsl
lods
dec
cmp
jmp
pop
jge
adc
mov
pusha
jo
add
lods
js
mov
std
add
or
rorb
jno
insb
jecxz
pop
xor
lock
sahf
movl
or
rcrb
gs
into
int3
mov
inc
or
add
inc
idivb
rcll
inc
mov
mov
addb
mov
pop
xorb
pop
stos
push
xlat
mov
std
push
push
cmp
cmpsb
jb
sub
lret
inc
leave
ret
push
in
push
xchg
stos
cs
test
pop
mov
mov
cmp
inc
es
and
in
cltd
jle
rep
gs
lret
dec
bound
and
in
mov
xchg
aad
filds
movsb
and
push
outsl
lods
fbld
mov
inc
fdivrs
lret
test
and
dec
popa
pop
roll
in
lds
cmpsb
arpl
adc
jne
xchg
xor
or
and
mov
inc
data16
pushf
movl
pushf
call
mov
lea
jae
inc
call
call
pusha
jmp
jge
xor
cmp
aad
sti
jne
push
mov
cmp
subb
outsb
iret
mov
lret
movsb
js
pop
inc
aaa
inc
jb
cs
fwait
aas
fsubl
push
adc
ficomps
insl
adc
sahf
adcl
cmp
sbb
jecxz
lcall
and
ret
dec
push
hlt
rcll
sub
push
mov
adc
xlat
and
test
pause
pop
or
addb
xchg
iret
adc
lock
lea
add
je
sub
xor
or
mov
bt
mov
sub
movl
call
push
test
cmp
jmp
mov
sub
pop
mov
inc
dec
pop
pop
lock
dec
adc
loopne
dec
mov
xor
jmp
rcrb
adc
ja
fdivr
pusha
sub
inc
in
xchg
mov
faddp
lcall
hlt
mov
sbb
pushf
fs
mov
mov
xchg
or
call
pop
lahf
cmp
jae
lret
mov
inc
pusha
arpl
and
add
add
not
cwtl
lea
push
lea
jnp
pusha
movl
mov
pushl
popl
pushf
pushl
ret
push
jmp
pop
pusha
pusha
movb
pushl
ret
xchg
lea
jns
pusha
lahf
pushl
popl
pushf
lahf
mov
bswap
movl
pusha
jmp
call
stos
movb
pushl
pushl
lea
jmp
mov
push
cmp
mov
pushf
stc
add
stc
stc
jmp
stc
stc
neg
movw
jmp
les
lock
xor
xchg
popf
or
pop
mov
jg
test
mov
fcmovb
xchg
pop
and
dec
jmp
xorl
push
out
inc
sub
lea
add
add
es
pop
pop
out
bound
decb
push
mov
jmp
xchg
dec
and
iret
xor
repnz
inc
add
dec
fisttps
jns
aad
mov
cwtl
adc
mov
inc
adc
inc
imul
dec
xor
leave
dec
sub
icebp
fdivl
dec
push
inc
jl
jg
ror
fsin
dec
pop
mov
lret
add
cwtl
adc
lock
insl
test
stos
and
mov
hlt
out
sar
in
stos
into
leave
lret
pop
out
dec
je
je
mov
xchg
fwait
ret
and
sbb
mov
xchg
cmp
mov
les
adcl
cmpsb
mov
mov
orb
adc
add
fs
xor
das
call
fisttpl
xlat
xor
inc
mov
dec
repnz
cmp
inc
fisttps
pop
pop
jne
xchg
mov
gs
pushf
xlat
fcoms
ret
xchg
add
enter
mov
mov
sbb
inc
adc
daa
xor
cmp
mov
push
jecxz
xchg
sahf
lods
stc
lock
bound
movsl
add
cli
movsb
scas
inc
mov
cmp
adc
push
stos
enter
insb
out
mov
inc
scas
sahf
cmp
pop
mov
jmp
cmp
imul
sub
sub
jbe
xor
mov
sub
dec
ds
or
sub
push
cmpsl
loopne
data16
inc
dec
lahf
out
inc
repnz
inc
push
push
into
mov
inc
adc
movsl
lcall
fs
adc
push
xchg
leave
pop
push
mov
mov
or
out
dec
test
in
imul
pusha
mov
call
sbb
fisttpl
xchg
pop
icebp
mov
cmpsb
repnz
hlt
pop
ljmp
mov
into
outsl
out
shl
adc
jb
jp
add
dec
fwait
mov
dec
jnp
sub
pop
js
aaa
lcall
orb
and
cmc
pop
iret
push
jge
sbb
xor
mov
mov
mov
or
lret
shll
inc
es
cmp
ljmp
sbb
outsl
movb
lea
jae
pushf
jmp
in
lret
xorb
cmpsl
push
and
dec
pop
aaa
cwtl
jge
jne
sbb
xlat
pop
jns
dec
arpl
jbe
add
cwtl
and
in
insl
sahf
es
jle
push
fcoms
cmp
lock
inc
adc
dec
or
sub
adc
stos
testl
scas
jp
repnz
inc
es
inc
pop
fs
pushf
movl
pushf
mov
pushl
popl
mov
pushf
pusha
pushl
ret
lret
dec
xor
mov
adc
leave
popf
mov
mov
pusha
jle
sbb
sbb
aad
cmpsb
adc
mov
loopne
xchg
movsb
push
test
push
cwtl
lock
add
repnz
dec
popa
ljmp
mov
inc
jmp
shrl
into
xor
mov
xchg
push
sub
dec
fs
jo
stos
inc
sbb
stc
popa
sbb
push
lods
mov
stc
mov
daa
adc
es
sti
sbb
lret
jmp
jmp
outsl
jne
dec
or
jno
push
and
and
or
or
and
in
inc
adc
pop
test
cmp
cmpsb
aas
add
bnd
in
inc
mov
mov
mov
add
insl
fs
cwtl
loop
movsl
fisttpl
cs
cwtl
call
dec
or
test
es
lods
pop
not
lea
push
push
call
shrd
push
btc
sar
shl
movsbw
mov
lea
sub
stc
jmp
movl
push
jmp
cmp
pushf
push
jmp
call
and
sub
jno
out
sub
add
stos
sbb
mov
movsb
adc
xor
push
scas
and
aad
movsb
mov
cwtl
stc
sbb
sub
sti
in
xlat
addb
fsubrl
cmpl
cmovo
inc
xor
bound
mov
notl
dec
fiadds
pop
pusha
je
test
test
test
rep
jns
stc
in
lds
inc
into
mov
xlat
mov
cmp
popa
jle
mov
ja
mov
sbb
dec
lds
aaa
push
out
test
xor
popf
mov
push
out
gs
out
daa
les
stc
cmpsb
fs
pop
test
mov
add
cmp
inc
xor
lds
lret
cld
xchg
sbb
xchg
in
sahf
and
cltd
gs
int
addr16
jno
or
mov
mov
adc
mov
js
cmc
shr
jle
mov
addr16
in
jl
add
xchg
and
stos
push
aas
cmp
inc
outsb
mov
loope
or
imull
and
pop
out
shll
in
adc
and
jae
dec
or
mov
adc
out
repz
push
cmp
mov
lret
inc
cmp
dec
mov
sbbl
sahf
out
adc
jmp
adc
lock
outsb
mov
push
outsl
into
cmp
add
fdivs
leave
xchg
fcomi
clc
bswap
sarb
dec
jmp
fsubr
mov
not
fldt
xchg
enter
push
ret
lret
inc
outsl
pop
or
jge
out
push
stc
jae
ffreep
sub
jl
sarb
cs
xor
in
punpcklwd
int3
adc
pop
neg
adc
push
push
pushw
xchg
arpl
xor
mov
scas
test
les
add
in
ror
outsb
cmp
gs
test
int
jl
mov
or
mov
or
popa
sub
mov
jo
pop
roll
ret
insl
pop
fldl
lret
cmp
fmul
sarb
gs
push
fsubr
xor
sbb
ja
jo
loop
dec
scas
adcl
sbbb
mov
xchg
ljmp
test
add
or
hlt
dec
lods
mov
call
stos
lea
jge
jbe
push
mul
inc
es
test
jmp
cld
add
call
out
test
sub
mov
movsbw
call
mov
cmp
sar
call
xor
jmp
xor
out
out
and
fdivs
ss
int
pop
xor
fucomi
mov
push
aam
xchg
add
dec
data16
adc
js
mov
je
push
adc
and
bound
pop
jg
xor
add
inc
bound
sahf
imul
outsb
out
xlat
fstps
ljmp
sti
xor
jb
addb
sub
loop
dec
jge
jle
fadd
ds
sahf
inc
adc
sub
std
lcall
push
adc
jno
jg
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
jmp
lea
call
pusha
pusha
push
pushf
adc
push
jmp
xor
call
call
lea
jb
jmp
push
push
rep
push
mov
mov
lea
jmp
call
dec
not
jmp
lea
call
push
pusha
pushf
adc
pushf
jmp
ror
add
cltd
and
xlat
mov
lret
push
push
push
jecxz
jbe
lods
stc
testl
movsb
lods
inc
xchg
and
sbb
sar
add
mov
add
add
push
push
outsb
mov
insb
or
mov
push
mov
adc
adc
sub
aaa
ficoml
fsubrp
test
jbe
cmp
xlat
aas
fsubrl
lcall
in
pushl
pushf
dec
clc
test
pushf
test
shr
push
call
jmp
add
add
inc
add
inc
add
and
mov
inc
add
add
add
test
jmp
add
inc
mov
out
js
push
js
mov
cmp
das
xchg
jecxz
inc
pop
lea
in
icebp
das
lods
out
orl
insb
sbb
sub
icebp
in
inc
mov
nop
repnz
mov
mov
and
and
xchg
dec
enter
fs
fmul
pop
shrl
int
mov
jo
inc
repnz
sbb
xchg
lods
inc
es
inc
loopne
inc
leave
pop
add
pop
xlat
pusha
jae
or
popf
push
outsb
adc
push
mov
fstpt
push
cmp
ss
xchg
xchg
and
jecxz
xchg
mov
push
fimuls
pop
lcall
adc
pop
lds
xchg
pop
mov
xor
int3
jae
out
das
push
cltd
loop
push
jg
les
fcmovnbe
pop
sbb
sub
fisttps
mov
lret
fiaddl
adc
es
sbb
js
lea
insl
sbb
cmp
idivl
je
jg
dec
xchg
pop
test
les
jae
popf
push
fsubrs
dec
or
pop
dec
push
jae
lret
cltd
dec
cmp
outsl
mov
dec
scas
rcrl
fs
mov
jbe
add
inc
add
xchg
mov
mov
jbe
ss
and
inc
es
mov
movw
movb
push
lea
jmp
mov
mov
vpandn
popf
stc
call
xchg
xor
aas
add
movsl
pushf
push
inc
sbb
fidivl
cmp
pop
lahf
adc
pushf
shlb
push
xchg
int3
movsb
xor
mov
out
shlb
inc
lock
pop
mov
mov
neg
bound
testb
mov
add
into
xchg
and
cmp
mov
cmpsl
hlt
mov
flds
xor
ljmp
pop
inc
jno
ja
dec
dec
pop
mov
popa
adc
in
dec
jecxz
add
ljmp
fucom
push
jns
loopne
hlt
pop
cmp
push
inc
es
loopne
call
pushf
push
imul
cmc
add
movb
lea
jmp
mov
not
cmp
mov
pushf
push
stc
cmp
pushf
push
lea
jbe
neg
ror
mov
not
btc
add
xor
add
shrd
adc
mov
cmp
pusha
jmp
pusha
clc
call
loope
sub
add
mov
adc
jb
fs
cwtl
loope
sub
imul
aaa
push
fnstcw
mov
mov
hlt
outsb
pop
jl
lods
push
cmp
add
mov
jns
in
sub
andb
lahf
std
callw
xor
inc
push
shll
in
jns
popa
outsb
fs
out
jmp
adc
lea
xchg
js,pt
xor
or
dec
out
insl
xchg
call
mov
ficoms
std
popa
scas
jae
cmpl
out
mov
push
cmp
pop
inc
xchg
int3
loope
fidivs
dec
mov
cmp
jnp
mov
push
xchg
mov
adc
jns
orl
add
iret
sub
into
ret
fists
inc
push
dec
int
adc
mov
in
cmp
cmp
test
inc
scas
jmp
popa
out
shr
push
cli
insl
xchg
push
jmp
cmp
aaa
adc
sub
stc
shrl
push
push
test
fisubs
push
push
leave
out
push
cmp
mov
insl
mov
out
pushf
adc
in
jmp
insb
push
insl
orl
out
jmp
pop
cs
jmp
mov
addr16
mov
dec
or
into
subl
push
ja
cld
adc
rorl
add
push
jns
sbb
stos
test
and
scas
fs
dec
sub
test
adc
jno
bound
inc
scas
sub
iret
icebp
cmp
out
xorb
push
test
inc
lahf
sub
adc
icebp
stos
sub
mov
daa
jo
filds
mov
test
stos
js
and
imul
pop
fimull
popa
aas
outsb
and
mov
imulb
adc
mov
and
mov
xchg
fcmovnb
sarb
jno
mov
int3
sbb
sub
push
dec
add
push
xor
out
adc
fucomi
ljmp
add
sti
clc
xor
jo
out
jbe
fsubs
fisubrl
out
pop
jb
call
push
pop
push
mov
xchg
lcall
das
dec
test
jmp
int3
xor
out
cld
sub
push
test
or
push
scas
or
jne
mov
gs
or
xor
insb
shll
dec
mov
and
ror
push
subb
fisttps
addr16
rorb
cmp
mov
mov
dec
mov
mov
out
mov
and
imul
sub
fs
andb
push
mov
inc
imul
iret
hlt
adc
call
out
out
and
cltd
fdivs
aad
cmp
push
pop
es
lock
insb
out
sub
popa
inc
sbb
lcall
gs
clc
lods
dec
in
dec
jmp
fucom
fs
push
test
sub
xor
insl
push
cmp
and
shll
mov
fs
int
pop
or
jne
ja
pushf
dec
sub
push
jmp
xor
in
out
jne
jg
jecxz
imul
and
sub
sbb
sbb
jp
sbb
sbb
push
dec
inc
sti
cmp
jle
pusha
pop
inc
nop
ret
addr16
popa
pop
dec
sub
faddl
mov
xchg
pop
jmp
add
fcoms
scas
mov
jo
pop
pop
out
mov
push
inc
push
sub
das
xor
mov
cmpsl
popa
xor
dec
mov
cmp
ja
cmp
sub
std
icebp
movsb
iret
inc
stos
cmpsl
lcall
pusha
mov
adc
sti
ljmp
jae
jmp
daa
repnz
test
push
test
scas
sahf
push
imul
addr16
or
push
cli
aas
cmp
shrl
stos
adc
jmp
push
sahf
dec
adc
add
mov
outsl
jne
xchg
jo
aas
lock
jmp
cli
xor
mov
sub
fcomip
dec
dec
adc
jae
arpl
sarl
nop
out
call
loope
jb
adc
loope
jmp
and
xchg
push
mov
add
inc
subb
insb
cltd
loope
pop
sub
adc
add
fsubrl
imul
xor
in
mov
stc
mov
xchg
scas
jno
outsl
add
out
jg
xor
dec
and
mov
sbb
in
jae
out
dec
or
ds
out
inc
jbe
in
cmp
sub
or
pusha
sub
add
imul
dec
scas
and
push
ljmp
xchg
test
mov
mov
call
sbb
mov
jge
cmp
out
pop
fstps
imul
inc
or
pushf
test
movsl
bound
rorb
std
sub
movsb
push
inc
sub
sub
and
push
xchg
sbb
mov
out
push
mov
push
fistpll
outsb
pop
in
icebp
repz
jns
cmp
hlt
jno
lods
inc
jnp
or
pop
insl
adc
fmul
sbbb
scas
cltd
addr16
jo
outsb
sbb
push
faddl
lcall
mull
lock
orb
sbb
fmull
adc
fabs
push
push
mov
dec
out
cld
rcll
test
pop
or
fdivrs
add
sti
popa
test
push
clc
jg
fcompl
pop
stos
push
in
loop
push
dec
sub
dec
lea
mov
out
mov
mov
mov
mov
xchg
mov
jmp
sbb
adc
pop
pop
pop
out
cmp
int3
sarl
inc
popa
dec
jno
ljmp
test
in
mov
xor
insl
and
sub
xchg
cltd
in
jmp
stc
mov
sub
jle
xor
repz
in
adc
mov
mov
dec
sbb
mov
mov
imul
lret
shr
or
mov
mov
push
or
cmp
inc
xor
jge
jae
adc
repnz
pop
cmp
or
addr16
out
ss
pop
out
test
add
sub
and
inc
popa
sti
or
int3
xor
fdivrs
in
fcom
jb
in
repnz
inc
ja
mov
out
stos
test
sub
cltd
xor
sub
mov
fisubrs
mov
adc
adc
inc
or
fsubrl
sub
filds
inc
push
mov
popa
inc
sbb
and
sub
icebp
sub
aaa
or
inc
dec
call
dec
xor
or
fcomp
ret
bound
outsl
mov
lods
push
mov
popa
sub
stos
es
pushf
jo
imul
add
scas
std
dec
ret
or
mov
jnp
icebp
push
movsl
sbb
mov
shll
out
pop
adc
imul
pop
dec
lcall
jb
insb
outsl
shll
pop
add
sub
and
imul
js
push
push
leave
inc
shrl
inc
sub
outsb
test
xor
jnp
test
jbe
cmpb
jl
std
adc
je
popa
jle
mov
inc
lcall
cmp
out
insl
imul
pop
inc
dec
xchg
mov
sub
iret
ret
dec
cmp
ret
mov
daa
bound
and
sbb
out
pusha
rorl
icebp
inc
fldt
sbb
mov
lea
inc
xor
push
sbb
sbb
icebp
push
sub
lret
stos
jmp
movsl
xor
push
jl
sbb
das
fwait
pop
stc
push
mov
sub
subl
out
push
jno
mov
les
jbe
pop
movsl
addr16
pop
test
not
xchg
mov
lret
out
lock
out
in
aam
sarl
addr16
adc
lahf
out
sub
jle
inc
bound
cmp
fadd
sbb
shlb
aaa
lcall
rorb
pop
xor
scas
sub
lods
xchg
add
movsl
in
jmp
ss
mov
or
fiadds
mov
call
rcrl
inc
call
push
jge
aam
pop
imul
mov
cmpsl
adc
cmc
pop
and
sbb
pop
out
rorl
xor
lock
push
aad
push
sub
dec
arpl
movsl
loopne
push
adc
outsb
push
sub
mov
dec
mov
dec
jmp
shll
inc
pop
cmp
cltd
cli
fldcw
in
xor
out
test
divl
sbb
jle
pusha
js
dec
sub
in
in
dec
pusha
rorb
into
mov
dec
loope
stc
jns
out
mov
add
mov
sub
sub
cmp
movsl
mov
pop
lret
xlat
cmp
lock
movaps
fnsave
mov
or
pop
push
fcmovnu
push
xor
call
fbld
inc
sbb
decb
gs
fbstp
ja
cwtl
fs
sbb
jp
jge
scas
push
cmp
push
sti
daa
cmp
dec
rcrb
dec
icebp
xchg
push
stos
movsb
insl
lods
imul
dec
gs
xchg
out
dec
dec
sub
shrl
jge
clc
fisubs
adc
std
inc
filds
and
push
cmpsl
scas
pop
out
stos
ret
mov
jl
insl
fcompl
pushf
adc
inc
shll
xor
sub
pop
insl
popf
stc
dec
fisubs
out
insb
add
jno
fsubrs
fwait
out
mov
sub
xor
mov
or
push
in
in
mov
xchg
inc
push
out
push
ret
mov
sub
lds
hlt
fimull
cmp
xchg
popf
dec
js
ljmp
les
fucomi
dec
in
negb
loopne
dec
jae
in
jecxz
gs
dec
jecxz
dec
outsb
insl
in
movsb
sbb
and
or
push
std
test
outsl
test
into
adc
or
push
inc
push
out
pxor
rcrb
iret
jae
and
insb
call
sub
sbb
out
into
out
jmp
insb
and
push
out
aad
adc
in
std
subb
test
xchg
sbb
xchg
rolb
xchg
sub
out
pop
stc
loope
or
gs
sahf
movsl
cs
test
imul
sbb
ucomiss
sbb
lods
cltd
stos
xor
or
out
ljmp
test
and
repz
dec
mov
xor
dec
je
cmpsl
ss
pop
test
xor
lods
subl
fimull
xchg
movsb
pop
pop
pop
test
xchg
mov
mov
les
mov
aam
sub
decb
in
mov
lret
or
and
out
mov
fldl
push
mov
mov
imul
cmp
jb
push
dec
dec
push
pop
nop
mov
xchg
dec
test
addr16
std
pop
movsb
aad
inc
push
mov
xor
jns
mov
je
push
ret
push
or
jmp
dec
jnp
mov
stos
ret
fld
push
fidivrl
call
mov
jg
and
inc
mov
cld
rorl
leave
push
out
fisubrs
and
pop
pop
mov
push
shl
and
dec
xorb
pusha
lret
mov
aad
and
into
outsl
adc
adc
ds
fldenv
dec
jmp
stos
mov
repz
fs
cs
sbb
roll
in
fisubrs
insb
and
push
out
and
rcrl
push
cmp
imul
push
enter
test
jmp
enter
add
test
dec
inc
or
popf
add
enter
push
addl
or
in
stos
js
xchg
inc
push
popa
out
mov
cmp
jne
xchg
mov
mov
pop
pop
inc
xor
hlt
fdivr
sahf
push
jl
std
push
leave
jmp
mov
mov
cmc
fs
dec
das
dec
daa
in
mov
aad
inc
jmp
inc
sub
out
ja
daa
js
pusha
dec
xor
sbb
push
inc
jo
cs
mov
add
loope
xor
cmp
sub
mov
ret
lods
xor
push
nop
lods
fnstenv
mov
xor
pop
repnz
orl
or
push
rcrb
dec
pop
lock
call
in
jno
dec
push
cmp
mov
lock
push
imul
mov
pop
scas
mov
dec
inc
cmp
xor
mov
insb
shll
sbb
lock
jmp
outsb
xchg
sub
test
out
inc
jnp
in
mov
outsb
sub
push
sub
iret
inc
jns
lods
sbb
jecxz
inc
mov
out
stos
insl
cmp
xor
cmp
fildll
or
rorb
out
rolb
es
loope
and
outsb
xchg
dec
inc
mov
sbb
clc
hlt
push
out
or
icebp
repz
addr16
sahf
jno
cmp
fistpll
xor
jmp
ljmp
movsbl
sub
push
sbb
push
ds
push
sarb
push
fists
lock
xor
outsb
cmp
jmp
xor
icebp
xor
jl
js
pop
adc
push
jmp
cmp
push
xor
repz
or
les
into
xor
movsl
dec
fs
and
fmuls
push
mov
push
out
les
sbb
fnsave
ja
cmpsl
mov
or
and
cs
cmpsb
call
push
test
fcmovnu
enter
addr16
sbb
outsl
sbb
shrb
mov
or
sbb
push
push
cmp
push
dec
jne
pop
and
add
std
jle
push
jno
pop
pop
aas
fisubl
out
inc
push
int3
ret
inc
mov
and
sbb
into
sub
imul
pop
in
cltd
fists
arpl
in
or
out
dec
push
int
push
out
and
fnstenv
push
cmp
or
adc
shrb
js
jae
lds
cwtl
inc
inc
out
out
pusha
inc
loope
scas
mov
cmp
lods
jecxz
popa
test
or
mov
cmp
or
xchg
adc
loop
out
icebp
mov
popa
or
outsl
sbb
xchg
cmp
inc
test
push
xchg
sub
sbb
rcll
cltd
push
shlb
lea
xlat
icebp
push
add
loopne
test
sti
lock
push
sbb
sti
dec
pop
mov
sbb
adc
loope
lcall
fstps
dec
mov
test
out
sub
jns
mov
pop
jno
add
jne
and
ret
mov
dec
and
dec
sub
test
xor
sbb
push
shlb
test
lock
enter
imul
popf
popa
dec
mov
adc
inc
mov
in
cmp
rcrl
pusha
or
xor
insb
jae
out
xor
jecxz
shrl
push
ret
cmpsl
pop
push
push
fcomip
xor
push
sbb
loope
pop
or
push
stos
mov
test
jo
inc
or
push
pop
sub
cli
imul
std
add
jne
dec
dec
push
psrlq
out
push
pusha
js
insb
in
popa
fsubrp
inc
mov
mov
pop
xor
jns
add
movsl
loope
mov
dec
imul
mov
arpl
dec
ret
inc
sbbb
xor
test
leave
fidivrs
mov
loopne
cli
xor
fidivl
sbb
push
imul
or
and
in
xchg
and
push
fnstenv
insl
scas
sti
hlt
inc
in
test
xchg
sub
xchg
shrl
jnp
arpl
leave
in
in
in
sbbl
not
sub
pop
xor
out
mov
out
xor
sbb
mov
pop
pop
fldcw
push
sub
jmp
imul
outsl
xchg
lahf
push
call
enter
or
out
fwait
or
inc
push
gs
icebp
and
dec
push
call
xchg
or
pop
push
call
addr16
sbb
pop
fs
push
outsb
cwtl
dec
pop
gs
push
push
stc
sub
mov
jmp
and
pop
imul
mov
loopne
jnp
je
xor
cmc
push
imul
pop
addr16
test
xor
cmc
jae
inc
outsl
xchg
push
and
push
rclb
xchg
mov
push
jae
jnp
out
pop
jmpw
dec
jae
push
imul
imul
in
jbe
pop
in
das
push
imul
cmp
imul
outsl
js
add
outsl
in
push
leave
insb
out
xchg
outsl
xchg
sub
scas
mov
sub
sub
in
pop
in
xor
imul
pop
out
xor
xorb
gs
outsl
in
fucomp
mov
imul
jo
aad
jmp
aad
sub
and
jl,pn
sub
xor
shll
call
repnz
addr16
pop
jno
mov
push
out
insb
pop
call
test
in
mov
adc
ljmp
outsl
out
xor
fs
mov
push
sub
arpl
stos
mov
lods
aam
or
mov
xlat
pop
leave
xor
iret
cs
cmp
sub
sub
push
cmpsl
push
or
push
sub
daa
jmp
je
cmp
mov
loope
dec
insb
inc
gs
push
lret
mov
addr16
icebp
out
int
daa
fstp
movsl
sbb
out
and
jb
repz
data16
sub
push
jmp
jo
out
mov
add
push
call
in
jmp
push
push
dec
mov
adc
popa
mov
push
lds
scas
jo
fdivl
ss
xor
sbb
in
sub
mov
sbb
mov
movsb
nop
lods
test
push
popaw
lods
js
sub
mov
pop
mov
js
lock
fs
jb
stos
add
sti
dec
pushl
stc
dec
xor
insl
insb
test
adc
or
lds
sbb
push
les
out
jp
fldcw
filds
and
pop
inc
and
add
testl
jae
imul
pop
add
cmp
mov
std
and
imul
jle
imul
pop
push
into
leave
xchg
in
cmp
sarl
test
and
push
imul
pop
dec
stos
sub
or
icebp
daa
imul
out
sub
imul
pop
sub
fldcw
in
js
mov
test
in
jmp
jno
mov
lds
jne
icebp
dec
jmp
jno
pop
xchg
push
adc
dec
or
pop
cmp
pop
cmc
cmp
std
pop
dec
or
lods
mov
imul
adc
pop
xor
in
cmp
enter
addr16
add
mov
cmp
mov
pop
and
iret
push
cltd
testb
scas
imul
or
sub
int
dec
ror
dec
lahf
dec
repnz
in
cmp
inc
pop
and
sbb
mov
test
int
sbb
jmp
pop
mov
loope
sub
ss
push
adc
xchg
out
cmp
cmp
pop
pop
and
push
out
aaa
mov
popa
jns
jle
test
pop
jnp
into
dec
leave
sub
loopne
popa
setnp
mov
adc
mov
leave
insb
mov
lret
mov
dec
ret
xchg
sub
xor
sbb
sub
aad
andb
mov
gs
pop
cwtl
ret
popf
leave
testb
sub
pop
jge
js
dec
pop
shll
cs
cmp
sub
push
xchg
adc
xchg
jae
and
cmpsl
xchg
add
cltd
dec
lea
add
xchg
cmp
sbb
jecxz
cmp
add
or
push
gs
mov
rolb
cmpb
inc
push
mov
pop
cmp
inc
movsb
aam
push
scas
outsb
loopne
nop
mov
xchg
insb
and
jmp
cwtl
out
pop
mov
push
adc
fisubrl
dec
jne
aad
mov
outsb
jae
mov
repnz
mov
sub
insb
mov
sub
add
or
cmpsl
sub
mov
sbb
mov
jg
adc
sbb
mov
cmp
sbb
mov
adc
test
imul
decb
popa
jg
outsl
jp
mov
fistl
movsl
dec
inc
addr16
fisubrl
pop
mov
stc
jle
into
loope
js
imul
mov
clc
xchg
push
out
scas
sbb
divb
movsl
sub
mov
hlt
dec
imul
cmp
mov
movsl
in
dec
push
mov
jmp
daa
push
pop
cmpb
adc
jno
jo
mov
imul
imul
loope
in
jg
lcall
mov
ja
mov
sbb
imul
dec
mov
aas
pop
jno
sahf
xor
bnd
gs
mov
fisttpll
xchg
scas
out
jns
cmp
mov
cs
pop
out
mov
cmp
xchg
dec
push
push
es
je
cmp
inc
test
ja
add
xlat
icebp
or
sub
mov
jno
jp
pop
dec
xor
icebp
push
movsl
jnp
jno
ficomps
fistps
xor
dec
decb
jo
xor
cmpsb
mov
xchg
and
adc
pop
push
or
push
xor
adcl
int
and
and
lcall
push
gs
sub
cli
ja
push
sarl
add
and
fidivrl
push
jae
dec
fldcw
adc
lret
jne
lods
movsl
mov
loope
ret
lret
inc
push
mov
je
gs
add
movsb
mov
fs
je
sub
xor
fwait
mov
jo
nop
lds
jmp
rcll
fcomip
into
cmp
jbe
fldcw
rol
aad
inc
test
add
xchg
sar
push
mov
jge
inc
inc
mov
adc
aad
push
addr16
js
sub
lods
jmp
mov
xor
out
push
popf
pop
sub
pop
lcall
pop
lods
xor
movsb
jle
call
out
dec
mov
addr16
jle
js
roll
xchg
int3
inc
in
jbe
icebp
subb
sub
jmp
loope
push
jns
mov
leave
add
inc
shll
inc
fs
pusha
cmpsl
in
jo
leave
pop
aaa
jo
inc
jmp
mov
stos
jo
aad
sti
gs
inc
xlat
imul
out
and
in
mov
mov
cmp
mov
add
pop
scas
gs
sahf
xchg
idivl
gs
inc
push
mov
popa
mov
mov
imul
cmc
sub
jo
imull
xor
loope
inc
stos
js
mov
adc
or
or
ljmp
xor
xor
xchg
push
jo
rol
dec
test
js
add
dec
sub
or
cmp
xlat
xchg
xor
sarb
push
shll
pop
sbbl
fbstp
xchg
test
sbb
cmp
jne
shlb
mov
cmp
imull
add
into
mov
mov
inc
lods
repz
pop
sbb
ficoms
jno
in
in
stos
and
fcoml
sub
inc
fsts
std
lock
int3
mov
add
and
sub
and
inc
xchg
mov
repnz
inc
xor
adc
sub
addl
push
loop
pop
push
cmc
call
pop
fdivrs
imul
adcb
xor
stos
mov
call
adc
inc
lods
sbb
je
push
jo
pop
mov
or
pop
lock
inc
dec
and
sbb
push
jmp
pop
call
sbb
je
pop
jnp
jl
loop
insl
shrb
out
jp
or
push
xor
cmp
fs
xchg
faddl
int
vmovntps
jo
std
xor
cmp
out
sbb
stos
sub
gs
push
in
data16
sub
jnp
dec
adc
jne
push
clc
testb
cmpsb
icebp
call
popa
js
imul
mov
call
fistpll
or
push
cmp
gs
out
js
out
mov
push
int3
push
jne
fisttps
adc
dec
popa
sub
adc
out
testl
scas
mulb
clc
sub
or
and
inc
fsts
inc
imul
aad
and
or
adc
cmp
sub
dec
fs
insl
in
es
gs
rol
mov
pop
into
fnstcw
adc
stos
out
cmpsb
cwtl
scas
xor
les
stos
pop
inc
or
imul
adc
jp
pop
adc
loope
fs
push
cld
imul
daa
mov
test
into
or
mov
loop
testl
scas
sub
pop
test
lock
jg
and
jbe
movsb
mov
pop
xor
adc
mov
jne
stos
or
lock
lea
test
jecxz
in
sub
out
scas
cmp
sti
adc
jmp
aad
test
addr16
add
filds
out
dec
pusha
enter
inc
loope
rcrb
call
xor
mov
pop
pusha
mov
mov
or
nop
out
lds
fbstp
jb
incb
and
mov
call
push
fnstenv
add
ja
adc
lcall
cmc
add
sub
xchg
pop
adc
lea
push
imul
fdivr
in
insl
aad
out
bound
jmp
or
xchg
sbb
stc
loopne
xchg
add
push
inc
inc
test
jno
repnz
dec
lds
jno
ds
mov
stos
aaa
cli
pop
cmp
daa
fcoml
fildll
jecxz
lret
or
xor
gs
fsubl
mov
loop
jo
pop
pop
pop
aaa
mov
pop
mov
rorl
pop
sbbb
out
clc
inc
ljmp
or
lret
cmp
push
cmp
aad
pop
cmp
and
xor
aas
imul
add
or
ljmp
outsl
call
pop
ljmp
jle
inc
xor
stos
daa
cmp
push
adc
push
pop
xor
hlt
sbb
icebp
xor
sbb
fldenv
fbstp
icebp
mov
adc
jl,pn
or
or
mov
cmp
xchg
inc
mov
lret
or
xor
imul
inc
or
ficoml
dec
sar
scas
xchg
popa
adc
sub
lods
push
stos
ljmp
movsl
xchg
mov
inc
leave
fsubs
and
push
cld
shll
fs
push
loope
out
inc
shll
or
jg
mov
adc
jo
xor
stc
out
arpl
aad
lods
jne
inc
push
mov
jo
enter
gs
cmp
jecxz
sub
inc
push
aad
pop
jno
sbb
push
test
call
inc
add
out
sub
fidivrl
loop
mov
std
mov
or
and
or
and
and
sti
mov
cmp
out
dec
sti
lods
pminub
cmp
sbb
sub
dec
jnp
clts
imul
outsb
insb
imul
sub
loope
and
and
adc
and
roll
sbb
sbb
sbb
xor
pushf
pop
repz
dec
call
clc
sbb
in
push
in
stos
ret
sbb
addr16
insb
mov
pushf
and
pop
mov
push
xor
int3
lea
dec
rorl
mov
cld
call
dec
fs
cltd
pop
dec
dec
je
in
rcrl
inc
enter
push
sbb
sub
les
jo
out
or
je
pushf
sub
decl
les
inc
xlat
inc
jo
jae
pop
sub
imul
arpl
pop
sbb
addr16
mov
dec
cmp
jge
dec
xor
out
psrlq
std
adc
loop
mov
cs
mov
movsb
hlt
addr16
aas
pop
push
sub
insl
pop
xchg
bound
fnstenv
dec
xlat
jecxz
xor
mov
jmp
das
xchg
cwtl
push
cmp
mov
jae,pt
xchg
xchg
adc
and
jno
loop
test
iret
push
xchg
cmp
iret
sbb
cmp
leavew
sbb
sbb
test
popa
leave
adc
ja
out
clc
mov
cmp
push
lret
cmpsl
add
ljmp
jbe
out
out
dec
sbb
fldt
stos
fistpll
sub
imul
loop
or
aad
mov
jo
stos
js
loopne
call
push
loopne
repz
imul
out
or
xchg
jne
inc
mov
jno
ret
push
fimull
lods
jp
gs
push
cltd
pop
dec
jmp
sub
sub
xlat
mov
cmp
hlt
les
idivb
xor
data16
pop
mov
mov
jge
mov
inc
inc
jmp
push
or
or
jp
sub
push
dec
jbe
jmp
movsl
pop
fwait
mov
dec
les
cwtl
data16
ja
jl
inc
mov
jns
jp
lret
sbb
jp
cltd
lret
adc
or
sti
stos
mov
push
jge
cmp
pop
mov
xor
stos
mov
inc
inc
sub
mov
or
pop
test
imul
push
dec
dec
jecxz
shrl
mov
adc
pop
lahf
lock
insb
in
bnd
ficoms
jns
xchg
cmp
repz
xor
xchg
inc
popa
out
int3
shll
cmp
mov
stos
into
add
jmp
sbb
inc
les
xchg
rcll
in
xchg
push
out
rcr
xor
mov
pushf
or
fs
xchg
push
fnstenv
daa
inc
daa
xor
pusha
movsb
je
push
xor
mov
xor
pop
ret
cmp
sbb
inc
out
enter
in
push
cmpsl
dec
inc
pop
lret
pop
mov
ds
rclb
out
jge
bound
gs
insb
mov
out
and
pop
and
and
sub
fdivr
mov
push
int
push
mov
leave
push
aam
and
and
adc
cmp
rcl
pop
stos
js
std
fbstp
in
sub
sub
stc
in
movsb
fxch
mov
movsb
jp
mov
inc
insl
sbb
cmpsl
sub
push
rcrb
inc
sub
mov
js
int
pop
shll
ljmp
cmpsl
test
fstpl
push
dec
dec
jmp
push
jecxz
push
xor
push
cs
lds
jecxz
shlb
dec
jb
ja
mov
lds
fbstp
cmp
std
stc
sbb
add
test
sub
and
pop
shll
stc
sub
into
shrl
cmpsb
dec
shlb
stc
and
and
push
loopne
int
nop
faddl
addr16
inc
hlt
bound
repz
sbb
imul
lock
test
and
mov
enter
dec
or
dec
cwtl
sbb
and
loope
sbb
pop
sarl
inc
mov
lcall
xor
sub
ret
pop
lret
fs
mov
arpl
enter
imul
out
clc
jmp
repnz
mov
lds
sbb
jecxz
int
pop
iret
xor
inc
ja
arpl
mov
push
dec
aad
fs
insl
sub
fsubrs
mov
fprem1
mov
sbb
push
outsl
out
push
rolb
jmp
adc
shrl
mov
cltd
dec
xchg
xor
push
andb
xor
jae
aaa
xor
sbb
inc
ret
xor
lret
pop
adc
out
push
jno
loope,pt
add
fsubr
test
or
ret
imull
out
clc
aad
out
fsubl
xchg
and
lds
ret
sub
pop
cmpb
xchg
jbe
cld
out
dec
jmp
lock
xlat
adc
inc
gs
aad
jmp
out
mov
stos
dec
fadds
cmc
ret
dec
test
adc
pop
push
movsl
es
sub
test
inc
jo
mov
out
mov
xlat
and
fsubs
imul
jmp
xor
enter
lcall
or
inc
insb
sub
sub
lods
repnz
xlat
pop
jne
lcall
cmpb
push
push
outsb
stos
or
or
jo
and
mov
and
inc
jl
nop
sti
std
andb
add
xchg
out
pop
sahf
popa
fistps
mov
or
add
fildll
cmp
or
dec
call
mov
in
jmp
or
sbb
js
mov
xor
shll
jecxz
pop
loope
pop
xchg
mov
iret
fstps
xchg
xchg
je
das
add
enter
sbb
out
loope
pop
arpl
daa
ljmp
cmc
xchg
dec
dec
imul
jmp
stos
fisttps
mov
lahf
jecxz
mov
dec
cmpsb
aaa
out
pop
imul
sub
gs
xchg
cmp
lods
loopne
and
or
and
es
imul
pop
and
stos
push
inc
sbb
loopne
adc
lahf
adc
test
pop
fsubs
mov
arpl
cmpsl
out
push
cmp
jge
sub
push
xchg
jnp
xchg
dec
ds
sbb
out
loope
sub
adc
fisubl
pop
adc
mov
sub
cmpsl
cmc
mov
imul
sub
push
bnd
or
dec
cld
fcomip
out
cli
pop
add
jmp
scas
or
inc
stos
dec
sub
sbb
incl
add
stos
repz
mov
nop
ds
cmp
and
out
int3
jge
rorl
mov
push
xor
adc
and
test
imul
fldenv
sbb
add
andb
inc
in
sti
xchg
jne
addr16
cmp
in
and
hlt
out
ljmp
fisubrs
aas
adc
mov
pop
cmpsl
in
lea
mov
cs
mov
sub
pop
addr16
pop
movsl
out
adc
pop
loop
fldt
por
insb
movsb
addr16
cmp
out
xchg
out
fildll
mov
js
in
aam
rcrl
xchg
pop
or
dec
fbstp
jno
bnd
inc
push
movsb
jo
in
xchg
dec
mov
pop
insl
pop
push
insb
mov
and
in
dec
out
pop
mov
jo
js
in
xor
sub
add
gs
add
ljmp
push
pop
mov
loop
frstor
adc
dec
dec
cmpl
ja
adc
ret
into
mov
ss
pop
sub
cld
ret
loope
mov
das
jb
push
mov
icebp
xor
orl
loope
ret
das
mov
shll
leave
cmp
sub
pop
adcl
movsb
lahf
aam
or
fsubr
rcrb
rcll
out
mov
dec
inc
sti
push
in
int3
gs
cmp
or
cmpb
pusha
mov
gs
shll
mov
pop
ret
lret
es
fldcw
or
sub
arpl
out
sub
mov
jo
stos
cmp
sub
scas
xor
push
mov
and
jnp
in
dec
iret
sub
das
sbb
cld
lret
push
stos
mov
pop
movsl
or
or
lods
aaa
sub
mov
loopne
pop
adc
aad
mov
js
dec
mov
in
hlt
in
stos
inc
lea
int3
sub
in
iret
sub
fwait
bound
xchg
orl
rorl
add
sub
pushf
cwtl
imul
mov
or
and
les
lahf
push
dec
hlt
mov
mov
and
ret
pop
xor
jns
out
xchg
jae
mov
pop
add
test
orl
stos
pop
leave
push
nop
das
push
ss
and
push
and
add
push
arpl
gs
loop
fists
rorl
in
inc
out
dec
jnp
shll
sub
mov
dec
jno
out
inc
iret
pop
cli
cmp
add
push
insb
inc
sarl
fs
mov
xor
jge
inc
sub
arpl
jno
adc
inc
aas
call
repnz
add
les
in
xchg
mov
js
sbb
out
adc
sbb
fstpt
jecxz
pusha
or
cmp
stos
es
xchg
jbe
mov
cltd
or
in
fstp
fs
jge
push
add
sbb
jo
jg
enter
insl
or
subl
aam
in
adc
fcomip
push
mov
sti
mov
fldcw
cltd
lods
mov
xlat
dec
or
inc
cmp
push
stc
or
outsl
xor
xchg
hlt
imulb
imul
mov
cmp
mov
or
dec
inc
mov
push
subl
dec
push
dec
mov
lcall
lea
cmp
icebp
cwtl
pop
adc
fistpll
cmpsb
and
icebp
xchg
imul
lea
jae
push
out
push
pushf
jae
cmc
cmp
jae
fildll
xor
mov
incb
xor
fistps
cltd
out
add
sbb
add
hlt
loop
sub
imul
pop
test
and
imul
out
mov
dec
test
loope
xchg
and
daa
sbb
stos
xchg
push
lods
dec
ljmp
or
and
push
ret
lret
adc
or
movsl
test
mov
loope
daa
mov
push
or
mov
adc
loope
fs
push
gs
jmp
or
mov
dec
xor
push
push
sub
sub
jmp
pop
sub
jecxz
cmp
les
test
xchg
sub
daa
mov
les
inc
pop
jns
fwait
sub
cmp
cld
loopne
push
test
lret
or
cmp
inc
out
jmp
mov
ror
push
dec
aad
sbb
mov
jmp
loope,pt
jne
and
pop
jg
mov
fucom
lahf
add
addr16
push
cmp
and
out
test
inc
in
push
fistpll
sub
dec
pop
push
pushf
push
xor
sbb
cmp
imul
mov
xchg
lods
mov
push
call
or
mov
adc
or
js
aad
shll
hlt
lods
sbb
mov
in
cmc
fst
push
sub
push
idivb
repz
jp
es
fwait
adc
adc
dec
sub
in
dec
jmp
fsubp
orb
adc
mov
jbe
push
sbb
lods
bt
push
sub
push
jge
inc
in
ret
push
mov
out
and
jae
stc
xor
imul
je
cmc
and
pop
mov
jge
mov
jp
daa
lret
lods
je
icebp
push
adc
xchg
inc
test
out
cs
std
out
jo
test
adc
fsubl
fldl2e
inc
in
or
and
cmp
sub
adc
lret
and
inc
mov
les
dec
sbb
add
call
mov
fwait
fchs
sub
dec
out
test
jp
addb
pusha
mov
cmp
movsb
inc
jcxz
jmp
ja
and
sub
push
mov
xlat
dec
ret
inc
xchg
jnp
ds
pushf
icebp
push
ljmp
add
sbb
lret
inc
loope
push
push
xchg
lea
push
add
aad
add
add
push
mov
hlt
cs
call
inc
stos
xchg
jge
jae
dec
and
dec
sahf
loopne
popa
out
xor
fcomps
sbbl
sti
gs
mov
mov
inc
adc
das
into
mov
cmp
sbb
loop
cmp
addr16
pop
jae
push
loope
rorb
fbstp
pop
and
mov
xchg
incl
filds
mov
pop
lds
and
jo
push
scas
jle
arpl
lcall
fwait
int
push
adc
icebp
nop
push
sbb
fadds
xchg
jp
test
outsb
xchg
fs
lock
je
push
stos
push
gs
and
jno
js
dec
stc
repz
inc
nop
sti
movsl
popa
dec
mov
push
daa
or
popa
pop
dec
adc
mov
out
jo
pusha
sahf
dec
sarl
out
adc
or
imul
cmp
scas
les
test
xchg
insl
lret
sbb
cld
das
mov
fistpll
ljmp
in
or
in
xchg
inc
dec
aad
add
clc
js
sbb
push
sbb
pushf
sub
in
mov
leave
fsubs
push
mov
xor
test
aad
sbb
lds
add
jne
xchg
ret
or
movsb
or
pop
mov
sti
out
pusha
into
sbb
mov
and
jge
and
mov
sbb
in
sub
sbb
subb
cmc
shl
mov
mov
mov
jo
jbe
jge
mov
mov
push
icebp
pop
movsb
and
pop
daa
out
sub
mov
mov
pop
push
icebp
scas
rol
dec
sub
push
add
jp
and
arpl
mov
enter
les
jae
shll
xor
fstps
stos
push
mov
jno
cmp
cld
or
push
pop
push
add
es
fsubr
test
xor
in
sub
imul
fbld
mov
rclb
jne
mov
in
daa
ja
cltd
sbb
scas
jb
sbb
fs
stc
pusha
mov
popa
sub
xchg
fidivrs
fldenv
cmp
jne
mov
sbbb
out
cmp
add
daa
stos
xchg
in
lea
shlb
mov
jns
mov
adc
es
loope
mov
cmp
add
jns
movsl
fcoms
push
jge
out
mov
add
mov
fldpi
fbld
xor
cwtl
incl
inc
xor
sbb
xchg
jbe
sub
sbb
out
gs
push
cwtl
mov
mov
dec
pop
jne
dec
push
add
in
gs
mov
mov
data16
std
dec
xchg
and
push
outsb
pop
fnstcw
jbe
sbb
jg
jo
mov
imul
mov
jmp
jo
sti
rcll
mov
dec
popa
cmpsl
fcompl
shrb
xchg
gs
inc
pop
adc
push
pop
ret
xchg
hlt
mov
jbe
pop
jge
inc
add
push
mov
stos
cs
out
shr
mov
cmpsb
insb
or
cmp
sbb
cmp
clc
pop
mov
add
push
lret
jge
dec
shrb
es
dec
push
inc
add
sub
clc
pop
fistl
lds
iret
pop
add
push
fwait
jecxz
pop
nop
stos
push
test
repnz
fscale
or
push
xor
fisttps
sub
mov
gs
lahf
dec
sbb
sti
jno
fistpll
dec
mov
sahf
movsl
mov
movsl
in
dec
jg
push
fmuls
mov
sbbb
push
or
inc
jnp
out
arpl
dec
je
and
mov
dec
sar
insb
xor
cmp
loope
push
stos
add
lods
and
into
dec
or
adc
adc
fisttps
pop
or
mov
aad
imul
add
das
nop
leave
clc
out
adc
icebp
xchg
jmp
adc
movsb
jnp
push
push
mov
cmc
stos
lret
cmp
xlat
rorb
filds
pusha
and
jo
xchg
repz
pop
in
lret
sbb
xlat
test
mov
push
cmp
mov
push
push
push
or
lret
cli
sbb
add
push
jp
loope
or
out
leave
mov
xor
sub
push
xchg
insl
sbb
imul
mov
push
pop
sbb
fists
push
pop
or
dec
push
cs
lods
jo
sub
hlt
test
sbb
mov
outsb
pop
add
fs
lock
mov
call
lods
in
xor
pop
pop
xchg
fbstp
stos
lret
push
lea
sub
bound
fildll
cmpsb
pop
lcall
popf
mov
repnz
dec
shll
push
add
dec
fsubrs
jb
dec
inc
inc
outsl
dec
pop
ret
leave
pop
mov
sbb
daa
cmpsl
dec
mov
movswl
in
ja
ja
push
adc
xchg
mov
gs
ffreep
adc
repnz
mov
aad
xchg
mov
gs
in
add
and
mov
outsb
out
mov
inc
fidivs
insl
mov
xlat
loope
into
fsts
test
dec
out
sub
xor
roll
dec
and
xchg
fcomps
pop
fs
cmp
jnp
incl
rcrl
call
adc
ret
or
call
xchg
mov
and
push
or
xor
lcall
out
sbb
adc
sti
or
push
xchg
mov
insb
sbb
xlat
xor
shrb
iret
push
or
test
dec
sti
and
cmpsb
filds
jnp
out
out
pop
out
add
enter
add
fldcw
or
stos
addr16
dec
pop
cmp
lods
sbb
dec
mov
addr16
xchg
inc
pop
mov
hlt
pop
lret
popf
inc
push
in
and
inc
sub
mov
and
pop
sbb
add
out
lds
push
rol
inc
roll
scas
jmp
xchg
test
inc
push
lahf
loope
daa
pop
leave
int
adc
aaa
outsl
jnp
stos
mov
adc
pop
push
int
out
or
and
mov
mov
push
jns
dec
call
push
cs
out
pop
daa
dec
fwait
mov
imul
arpl
xor
sbb
jmp
lret
shrl
cmp
in
dec
int
pop
stos
repnz
adc
or
test
push
add
fwait
pop
scas
push
ror
jb
mov
in
fldl
icebp
fcomi
jmp
jl
lret
scas
ja
shl
aas
cli
popf
lds
stc
mov
lea
lds
mov
ret
mov
sub
jcxz
mov
in
mov
in
sahf
fcoml
mov
aad
jno
aaa
out
sub
xor
xor
jbe
mov
incl
add
push
insl
inc
mov
push
enter
in
dec
mov
cmpsl
dec
and
out
inc
or
adc
movl
stos
xchg
and
inc
jae
pop
jle
js
popa
clc
pop
push
mov
mov
stos
ss
leave
dec
xchg
sbb
es
out
jge
sub
mov
mov
jge
movsb
and
mov
or
arpl
pop
aas
mov
mov
and
cli
pop
jecxz
daa
mov
pop
loopne
mov
in
jp
inc
mov
outsb
clc
pop
dec
ficompl
xor
aad
and
loope
sub
lods
pop
insl
rol
stos
mov
in
xor
xor
lds
mov
inc
mov
mov
out
pop
sbb
mov
or
push
sbb
fcomi
ja
pushf
pop
add
addr16
js
xor
out
dec
and
jle
add
lock
mov
cld
xchg
repnz
mov
js
xlat
iret
xchg
dec
out
sub
or
out
push
mov
add
adc
sbb
ret
es
test
in
adc
xchg
repz
enter
aas
rolb
out
adc
ss
mov
or
push
shll
insb
lds
push
sbbb
add
sub
lds
out
push
lret
sbb
push
loop
push
mov
mov
movsl
fildll
push
fucomi
mov
mov
sub
sbb
jge
xor
ljmp
xor
adc
xor
int3
sub
in
hlt
inc
aad
sub
pxor
and
jle
mov
and
adc
push
pushf
mov
into
adc
mov
dec
pop
outsb
shlb
nop
or
std
shr
mov
je
jecxz
out
stc
lcall
loope
jle
inc
add
in
icebp
jmp
dec
out
mov
stc
push
int
outsl
dec
dec
mov
js
push
in
sub
mov
je
imul
iret
gs
hlt
out
fstps
jge
sbb
mov
fnstcw
dec
das
mov
mov
fs
aad
imul
adc
jo
addr16
in
fcmovne
shrl
out
sub
imul
jo
sbb
sahf
cmpsl
ret
test
sbb
ds
jb
gs
out
cli
aad
cmp
inc
cmpsb
and
js
sub
adc
ret
popa
shrb
jp
adc
jle
push
sub
jmp
out
scas
ja
adc
rcr
clc
out
fistl
cld
fs
icebp
mov
mov
sub
fistpll
pushf
push
lods
pusha
add
loopne
xchg
loope
imul
dec
test
jl
pop
adc
lea
push
pusha
nop
xchg
dec
fstpt
in
js
adc
mov
pop
ficomps
sub
inc
nop
sub
fmull
shlb
mov
jmp
repnz
cmp
adc
add
bound
jmp
pop
cmpsl
rclb
jno
gs
test
shll
sbb
pop
pop
sub
jb
push
jge
inc
mov
sub
aaa
ljmp
mov
ss
mov
in
dec
xchg
lds
jp
and
and
popf
cmp
into
imul
add
insl
lret
add
movsb
push
mov
pop
mov
xchg
loope
push
jg
in
dec
cmp
filds
sbb
stos
loope
push
mov
adc
jo
fdivl
sub
int3
mov
loope
addr16
mov
cltd
je
cltd
fwait
out
mov
js
subl
mov
mov
and
xchg
jecxz
mov
in
test
ss
mov
mov
std
inc
lret
mov
lret
mov
ja
imul
sarl
push
cmp
lods
ret
into
imul
out
xchg
dec
cmp
jne
mov
add
stos
ljmp
mov
cmp
mov
iret
sub
pop
and
xchg
push
pushf
push
lods
add
jae
data16
clc
or
loope
push
mov
cmp
mov
shrb
and
test
and
xchg
sub
dec
add
and
pop
dec
and
loope
mov
call
inc
lds
into
add
push
ret
or
mov
test
pop
popf
mov
loope
jmp
inc
jmp
fildll
in
inc
jnp
into
test
pop
sarb
jo
pop
dec
fnsave
xchg
fisttps
jecxz
xchg
das
fcomps
sbb
enter
je
push
mov
mov
ret
and
repnz
filds
into
pushf
decb
pusha
xor
jnp
repnz
loope
dec
xlat
jmp
out
imul
je
out
jl
mov
cmp
mov
mov
add
push
inc
jae
xor
sahf
mov
inc
push
adc
mov
jne
inc
les
xor
daa
shll
sub
inc
test
pop
fidivl
sbb
and
xchg
pop
in
rcr
and
scas
cmp
push
pushf
sub
cmp
sbb
aad
ror
out
fimull
pop
lods
jp
and
lcall
dec
inc
gs
icebp
js
xchg
out
cltd
in
or
arpl
gs
fbstp
lds
and
sbb
or
xor
jl
jmp
inc
push
xchg
sub
loope
out
cmp
rorb
sbb
push
jne
out
test
sbb
movsb
out
rorl
xor
cmp
movsl
or
mov
push
enter
out
fistl
call
sbb
push
fildll
dec
pop
dec
adc
subb
pop
pop
push
mov
push
addr16
addr16
and
xor
nop
adc
or
vcvtsi2ssl
std
mov
test
andl
cmp
icebp
dec
adc
mov
scas
cmp
in
daa
jmp
xor
bound
mov
dec
insl
test
dec
mov
xchg
cmp
pop
cwtl
dec
out
cltd
mov
imul
or
movsb
loope
hlt
loop
mov
sti
dec
push
jne
loope
stos
mov
repnz
pop
inc
pop
push
insb
push
imul
jge
pushf
and
out
sahf
popf
jmp
mov
xor
xchg
cmp
mov
imul
and
cmpsb
dec
popf
pop
movsb
inc
cltd
pop
test
xchg
ja
sbb
sub
fmull
inc
xchg
mov
cmp
shll
loope
sub
xor
sbb
insb
sub
movsl
int
push
dec
cld
pop
shlb
jb
pop
fistps
mov
fisttpll
pop
or
mov
movsb
faddl
fbstp
in
mov
lock
xor
jge
jl
jne
sub
fstl
imul
fs
mov
jbe
xchg
movsb
sbb
add
mov
sti
test
pop
push
repnz
pop
movsb
roll
mov
dec
test
dec
jmp
mov
jp
sub
mov
lds
cmp
or
imulb
rcll
loopne
mov
jl
test
cs
les
dec
mov
jmp
popa
sbb
xchg
mov
push
mov
loopne
scas
subb
mov
ss
stos
lret
addl
ss
sbb
sbb
fwait
in
scas
adc
inc
and
int
iret
es
dec
or
mov
leave
orl
dec
xchg
mov
frstor
pop
movsb
adc
push
fwait
in
mov
out
popa
out
mov
xor
sub
jmp
iret
and
xchg
xchg
in
mov
xchg
fimuls
aam
and
cli
cli
fs
test
cmc
lds
arpl
leave
ljmp
xor
jecxz
jo
xchg
mov
xchg
pop
mov
mov
push
out
das
je
mov
out
jnp
xor
dec
fcoml
bound
testl
add
fstp
add
adc
ror
scas
mov
xchg
cmpsl
pop
mov
xchg
add
and
push
and
xchg
inc
cmpsb
loopne
ljmp
cmp
fcompl
insl
mov
add
mov
pop
call
mov
or
jo
daa
icebp
dec
push
outsl
mov
cmp
ja
fst
sub
sub
mov
xchg
movb
shl
aad
loopne
ljmp
mov
sbb
xor
mov
lods
pusha
sub
ljmp
stc
imul
sub
out
lcall
add
lock
cmp
xchg
mov
jecxz
test
in
fucomip
cmp
out
mov
adc
ja
sbb
xchg
jo
mov
cmc
jb
lds
sahf
imul
movsl
pop
das
shr
addr16
and
test
fdivs
sub
jecxz
jno
dec
ljmp
fbstp
jge
into
mov
out
aad
push
scas
adc
test
mov
cmp
xchg
movsb
push
mov
aad
sbb
ficompl
and
fistps
loope
dec
mov
aas
adc
repnz
pop
sbb
pop
inc
dec
xor
pop
icebp
das
sub
shlb
xchg
push
in
sbb
push
incl
fildll
mov
cld
test
push
or
mov
add
push
filds
push
rolb
sbb
loop
shr
pop
sub
je
cmp
cmp
jo
lahf
sbb
call
cmp
imul
sbb
xor
ror
je
push
mov
in
dec
insl
mov
cmp
cmp
sub
and
add
call
xchg
mov
push
sbb
mov
out
sub
aas
mov
mov
popf
lahf
xor
dec
sbb
jmp
xor
mov
movsb
and
jg
es
lret
or
ds
pushf
pusha
mov
nop
inc
stos
mov
push
in
addr16
stos
jmp
add
loope
sub
les
ljmp
insl
mov
push
mov
dec
mov
sub
loop
add
adc
imul
pop
pop
fdivrs
add
and
daa
popa
mov
pop
lret
inc
stos
repnz
sbb
push
call
out
movsb
in
mov
cs
lods
out
ja
arpl
out
dec
outsb
sub
sub
loope
mov
fdivrp
push
cli
sbb
sbb
ljmp
mov
fsubrl
jp
add
fistpll
sti
xlat
shrb
stos
aaa
push
mov
dec
addl
jo
jmp
mov
cmp
imul
add
adc
sarb
loop
lds
cltd
mov
fildll
mov
fidivrl
mov
xchg
out
add
jle
shrl
jp
pop
mov
les
push
xchg
push
dec
fucomip
repnz
xchg
xchg
dec
ficoms
or
stos
mov
ja
das
add
xlat
fildl
push
xchg
test
rcr
push
sbb
mov
mov
jne
dec
mov
mov
sub
insb
dec
xor
stos
push
test
push
fldl
sub
js
out
push
mov
jae
push
stos
mov
sub
int3
fwait
scas
mov
add
repnz
icebp
sub
lret
or
add
inc
ret
sti
pop
jmp
dec
int
sbb
or
imul
ret
pop
and
cmpsb
dec
jmp
inc
jae
loope
test
add
adcl
inc
scas
aam
push
and
xor
mov
shl
add
ret
or
xchg
pop
out
and
inc
dec
cli
inc
push
mov
add
in
sub
je
adc
loope
and
rorl
mov
mov
push
loope
enter
push
out
mov
imul
fildll
cmp
repnz
mov
dec
mov
add
enter
gs
into
cld
and
lds
out
adc
stc
push
jae
out
loopne
test
xchg
jbe
pop
dec
jae
or
push
mov
out
out
stc
hlt
scas
xchg
dec
push
mov
sbb
arpl
mov
xchg
out
insb
aam
mov
xor
add
movsl
jo
out
xor
out
into
js
and
pop
inc
sbb
notl
push
loop
mov
ss
lret
xchg
push
mov
inc
sbb
mov
hlt
push
int3
cwtl
ss
or
mov
adc
push
test
out
test
push
sahf
sbb
inc
push
push
mov
fprem
push
inc
mov
adc
aaa
popa
or
leave
sub
mov
cs
call
pop
popa
xchg
cli
push
out
push
aaa
loope
out
mov
dec
test
sti
jnp
lock
addr16
insl
mov
cmp
std
outsb
movsl
mov
and
icebp
sbb
iret
sbb
push
cmp
sub
sub
in
shrl
arpl
ret
jae
pop
push
aaa
jmp
loopne
out
and
sbb
ljmp
xchg
fs
inc
loope
push
push
outsb
xchg
fsubrl
or
sub
xor
push
sahf
aad
xchg
test
mov
cmp
adc
arpl
dec
push
shrb
fbstp
push
mov
sarl
xor
fbstp
cli
mov
jge
les
fstl
mov
daa
xor
loopne
mov
jmp
sub
push
mov
xorb
cld
enter
sub
pop
and
mov
fistpl
sub
call
shl
or
add
mov
out
mov
fcoml
adc
inc
lcall
mov
int
sbb
adc
or
out
loope
test
insb
xor
xor
mov
fwait
in
ret
fistps
xor
shrl
adc
rolb
daa
xchg
sbb
mov
out
out
stos
call
fldenv
sbb
sbb
outsb
sbb
loope
inc
pop
loope
movsb
and
dec
mov
push
scas
data16
push
dec
ficoml
in
push
jmp
cmp
gs
mov
fbstp
or
cmp
je
mov
or
xor
jbe
nop
in
dec
and
mov
dec
xchg
pop
rorl
fldenv
adc
mov
loope
jle
fists
pop
xchg
inc
mov
daa
in
aam
mov
icebp
int
out
pop
lret
add
dec
push
push
or
das
lret
ret
shll
xchg
pop
jp
call
out
and
sbb
dec
rcl
scas
mov
shll
pusha
fs
cmp
repnz
sub
cmp
cmp
xorl
jl
nop
xor
xor
jecxz
roll
sub
call
xchg
and
cld
xor
fxch
adc
test
fs
jge
popa
and
daa
jg
jecxz
sbb
call
rsm
or
lock
cwtl
lret
lahf
mov
sub
gs
jecxz
out
call
pop
xchg
ja
or
xor
ret
adc
sbb
sbb
jge
sti
adc
cmpsl
ljmp
and
scas
clc
mov
jmp
mov
movsl
sub
cmp
cmp
je
out
out
cld
xchg
and
popa
mov
stos
stos
dec
mov
mov
jle
push
jbe
testb
and
jg
push
clc
ffreep
movsb
shll
dec
out
push
outsb
fisttpll
sub
or
rcr
mov
cmp
lods
into
out
sbb
and
icebp
sub
or
lea
out
aas
mov
data16
outsl
int
bound
and
sahf
lret
xchg
push
rcr
mov
sbb
and
fucomip
xchg
ss
and
aad
adc
dec
push
adc
pop
mov
popf
jne
mov
lods
movsb
or
adc
mov
cmp
pusha
imul
js
sbb
xchg
mov
mov
std
mov
fs
cmp
jno
mov
sub
xchg
pop
dec
fistpl
scas
repz
ret
addr16
dec
imul
or
shrl
jnp
push
add
xchg
pusha
imul
es
subb
stc
std
lahf
add
ss
adc
ret
mov
imul
add
lahf
sbb
xor
test
loop
xchg
push
movsb
imul
cwtl
inc
inc
push
imul
fdivrl
xchg
pop
das
icebp
out
lcall
insb
enter
movsb
xchg
xor
gs
fisttpll
andl
ss
mov
and
sub
or
imul
bound
push
add
shrb
call
imul
lret
push
loope
add
insb
dec
imul
mov
push
mov
insl
push
rcrb
insl
cmp
adc
mov
push
sub
pop
fmuls
repz
imulb
aas
cmp
jbe
mov
jp
mov
test
lock
in
pop
out
dec
imul
sub
push
add
imul
mov
push
hlt
insb
push
jae
ret
pop
test
xchg
jno
outsb
push
imul
sbb
lcall
xor
or
inc
test
loope
mov
lret
fwait
add
imul
pop
pop
pop
push
fwait
ljmp
mov
mov
nop
sarb
sub
das
inc
sub
out
std
ds
push
dec
inc
mov
pop
fs
cli
lods
loope
imul
pop
mov
mov
scas
imul
rcr
icebp
or
sarb
mov
or
sbb
out
shrb
imul
popa
shl
vphaddwd
jae
nop
pop
test
or
push
jle
add
mov
pop
inc
test
xchg
andl
and
es
outsb
icebp
imul
and
lods
pop
add
cmp
jbe
imul
pop
cwtl
rolb
popa
lock
push
stos
scas
in
inc
mov
repz
or
imul
repz
mov
insl
lret
inc
mov
xchg
jmp
pop
hlt
in
sub
js
lds
sub
push
xchg
bts
lret
adc
inc
mov
dec
sbb
imul
movsb
xchg
int3
sub
mov
out
stos
cmp
jno
add
cmp
lret
pop
add
lods
popa
notb
in
sar
cmpsb
stos
outsl
test
fistpll
call
imul
push
adc
gs
dec
sub
and
fnstenv
push
imul
sbb
pop
test
jns
adc
xchg
cmovno
fsub
sub
nop
ljmp
pushf
push
out
jae
add
mov
movsl
imul
pusha
add
xlat
dec
adc
insb
mov
cmp
jnp
cld
ds
icebp
xchg
sbb
in
push
iret
sbb
dec
xchg
fdivr
jb
fldt
cltd
cmp
xchg
pop
xor
pop
ja
xchg
inc
loop
sahf
lods
scas
leave
pop
rcll
shl
lock
movsb
dec
mov
loope
je
xchg
stc
mov
popw
ds
adc
out
xchg
jb
mov
dec
sub
push
mov
fstp
popa
jno
outsb
mov
lock
jne
dec
fldenv
cmc
shrl
sub
imul
inc
jl
in
lods
mov
cmpsb
aam
in
cltd
lds
orb
adc
dec
sub
inc
or
jle
imul
mov
addr16
cmp
cli
dec
imul
ljmp
into
sti
mov
repz
arpl
stos
mov
pop
aaa
mov
sbb
xchg
push
jbe
aas
pushf
or
sbb
pop
mov
test
add
xlat
push
add
scas
jp
mov
mov
andb
push
in
imul
xchg
mov
adc
jnp
mov
out
cmp
stos
hlt
in
mov
into
xorl
mov
and
adc
fsubrs
sahf
mov
cmp
inc
pop
enter
rclb
mov
jne
xlat
ret
jle
xchg
outsl
call
inc
shr
sub
cwtl
push
test
fdiv
imul
pop
hlt
sub
in
in
test
pop
xor
cs
dec
mov
push
pcmpeqb
adc
jnp
int
adc
mov
push
add
pop
insl
add
ja
test
cmp
fldcw
and
call
xchg
int
sub
jnp
adc
outsb
js
mov
imul
pop
insl
mov
mov
and
and
out
xor
mov
dec
mov
cltd
jle
inc
and
imul
jo,pt
jp
arpl
subl
sbb
inc
dec
and
dec
xchg
in
in
sbb
icebp
cmp
push
int3
fs
cmpsb
imul
gs
xchg
imul
adc
in
sbb
mov
sbb
pop
adc
inc
mov
xchg
jbe
mov
mov
lods
daa
sahf
imul
add
imul
ret
push
imul
dec
mov
inc
mov
pushw
scas
orl
cmpl
fidivl
test
imul
add
or
imul
or
dec
pop
jmp
push
add
aas
aaa
inc
repz
cmp
aad
or
dec
imul
ret
rcrb
sub
imul
dec
and
cmpsb
mov
mov
cmp
imull
cwtl
jae
scas
enter
mov
data16
jno
in
lcall
xor
daa
ss
repnz
or
stos
imul
xlat
and
push
lods
and
imul
jmp
cmp
xor
sub
orb
and
cmp
mov
or
fs
cli
testl
jecxz
dec
pushfw
pop
imul
push
push
popf
or
sbb
mov
sbb
sub
mov
jle
test
pop
stos
fisubrs
pop
lods
sti
fidivl
xchg
std
sub
out
xor
fldenv
fists
sub
sub
stc
add
or
adc
xor
stos
sbb
dec
stos
dec
adc
sbb
mov
pop
jno
xchg
xor
bound
in
into
ja
cmp
imul
and
jne
cwtl
pop
cmp
shlb
mov
sbb
cld
cmp
gs
imul
movsb
in
imul
ficoms
inc
ffree
out
push
xchg
imul
dec
daa
sbb
lea
sbb
imul
imul
js
lcall
mov
add
popa
imul
adc
mov
mov
xchg
jo
icebp
pop
mov
nop
mov
call
es
or
add
jo
stos
imul
sub
out
pop
ss
test
dec
nop
jno
mov
cmp
aam
sbb
stos
add
ds
lds
cmpsb
push
xchg
mov
jno
sbb
xchg
sub
fs
mov
scas
mov
push
xchg
insl
nop
sub
aaa
js
sub
je
popa
leave
mov
fsubp
mov
push
scas
add
xor
mov
mov
jno
std
fs
push
imul
xor
mov
cld
negl
push
ljmp
jae
cmc
popa
sahf
sub
mov
out
dec
imul
loopne
imull
xchg
insb
in
push
ret
fwait
lods
cmp
mov
outsl
les
int3
pop
rcrb
into
inc
and
test
xchg
inc
adc
lret
outsl
and
and
lea
or
push
jb
jl
imul
js
test
imul
push
jno
or
jle
jl
out
pop
or
cmc
push
and
leave
lahf
mov
cmp
jae
xor
movsb
jp
cmp
imul
and
mov
mov
out
sbbl
js
jecxz
pop
imul
test
loopne
fstps
scas
sub
insl
mov
test
mov
adc
mov
stc
cmp
out
repz
out
jae
inc
xor
sub
cmpb
sub
cmp
push
cld
js
addr16
xchg
test
push
fmull
cwtl
test
push
fistl
in
aas
cmp
mov
lods
in
fisttps
gs
and
in
jp
or
mov
test
push
idivb
lret
fucomip
push
pop
inc
mov
add
sbb
scas
fsubl
mov
push
pop
xchg
sub
xor
mov
hlt
dec
rorl
dec
cmp
es
repnz
fs
icebp
mov
mov
sbb
into
jo
shr
movsb
jp
jmp
pusha
scas
fdivl
and
push
dec
push
inc
rcrl
ret
lret
add
dec
xchg
dec
xchg
lods
add
xchg
inc
sub
iret
and
leave
gs
xchg
subl
fucom
dec
push
jg
inc
cmpsb
rcll
addr16
lds
sub
xchg
xchg
pop
xchg
call
inc
jmp
ds
or
xchg
mov
mov
jecxz
pop
xor
lds
push
jg
in
lahf
test
in
sbb
adc
jnp
shlb
pop
inc
pusha
stos
out
and
mov
jno
shll
mov
pop
movsb
lret
lods
lret
sub
loope
out
xchg
inc
sbb
addr16
test
pop
add
mov
and
shrl
stc
daa
test
lods
pop
push
jnp
dec
xlat
dec
cld
jo
hlt
pop
xchg
mov
popf
shl
sub
cli
push
and
add
test
cmp
lret
aas
mov
out
fwait
mov
fcomps
fld
popf
mov
mov
and
cmp
adc
or
pop
test
dec
in
and
sbb
or
fucomi
int3
dec
mov
ret
movsl
shl
mov
push
imul
fmul
mov
or
mov
imul
loop
xchg
add
in
mov
jecxz
data16
fsubrs
push
rcl
jns
mov
flds
in
xchg
jo
dec
push
mov
in
out
out
ljmp
mov
aas
popa
or
nop
dec
jno
dec
or
out
les
and
insl
je
enter
cld
sub
lods
je
or
js
aas
sbb
jl
in
jp
inc
xchg
push
fstps
mov
je
jecxz
sub
out
jns
stos
sbbb
push
cmp
dec
aas
jp
in
pop
and
jno
sahf
inc
mov
cmpsb
jmp
inc
pop
es
mov
or
dec
inc
aas
popf
hlt
jne
mov
data16
push
repnz
push
bound
push
in
in
imull
inc
pop
repz
xor
lea
test
pop
jae
dec
mov
out
aas
inc
jg
ret
adc
adc
test
pop
mov
icebp
sub
sbb
pusha
mov
sub
mov
xchg
shr
mov
dec
std
shll
ret
mov
and
mov
lret
mov
aaa
or
aas
inc
jo
and
cmpsl
lock
dec
out
dec
or
test
jnp
addr16
sbb
hlt
adc
fwait
pusha
das
dec
push
add
mov
dec
xor
mov
stos
lods
xchg
frstor
pushf
mov
dec
push
mov
in
cmp
hlt
adc
mov
imul
dec
mov
sti
in
mov
fcmovnb
loope
sti
pop
out
mov
mov
mov
cmpb
cmp
inc
loope
call
pop
test
packssdw
out
testb
fwait
ljmp
shlb
pusha
jecxz
adc
push
jge
sub
lcall
loop
push
xlat
jo
out
xchg
jecxz
mov
mov
dec
add
sbb
aad
lods
mov
and
int3
lret
into
in
adc
iret
jp
scas
daa
fadd
jmp
inc
or
das
lahf
mov
or
fbstp
xchg
shl
jb
sub
cmp
push
roll
call
and
jb
push
ds
jnp
mov
imul
fldl
sti
icebp
test
cmc
mov
mov
push
movsb
adc
mov
inc
in
out
and
dec
xor
inc
stc
leave
addr16
insl
icebp
pop
in
add
jmp
mov
jl
roll
callw
rcll
popa
notl
test
mov
repnz
jo
das
inc
stos
dec
and
adc
cmpsl
je
arpl
subl
in
mov
add
pushf
lock
pop
dec
hlt
lret
sbb
or
or
xor
lea
and
add
push
lds
out
sbb
in
sbb
fwait
xchg
push
popl
jo
ffreep
ficomps
pop
stc
ret
ret
jo
fcomps
stc
fdivrs
mov
test
jge
out
pop
xchg
ficoml
in
xor
scas
inc
fwait
mov
lods
inc
js
jp
stos
xor
mov
dec
dec
hlt
repz
lahf
sbb
pusha
pushf
dec
push
jns
push
filds
repz
jmp
roll
dec
add
add
mov
mov
pop
test
push
jmp
jae
sbbl
adc
ds
lea
sub
aas
sub
out
js
jl
test
mov
xlat
int3
ret
fptan
in
add
call
pushf
mov
and
out
adc
or
lds
cmc
xor
out
lret
ja
jo
ss
cli
imul
push
inc
inc
stc
push
lret
test
insb
lea
adc
xchg
pop
fistpll
sub
xchg
test
lods
jns
or
jae
out
sti
and
outsb
int
mov
das
addr16
js
mov
addr16
imul
hlt
aaa
mov
repnz
clc
repz
sub
gs
stos
xchg
js
popa
scas
insb
add
jo
jge
or
mov
mov
dec
fbld
jmp
mov
mov
es
xchg
mov
xor
and
push
add
push
push
push
sahf
pusha
addr16
stos
fsubr
mov
cmpsb
dec
cmp
xchg
jns
sub
push
sbb
cld
gs
loope
insl
fwait
push
shll
adc
scas
mov
stos
dec
mov
nop
in
test
xchg
imul
loopne
mov
sub
sub
sbb
xchg
xchg
mov
push
imul
and
ja
fistpll
out
test
ret
sub
and
cmc
test
inc
adc
sbb
and
pop
push
outsb
dec
mov
mov
insl
idivb
pop
mov
outsl
inc
mov
pop
mov
insl
xchg
push
jmp
ret
jp
imul
out
lds
sub
push
jne
sub
dec
sbb
loope
push
and
or
stos
popa
outsl
sub
mov
dec
lods
iret
ds
mov
loope
fs
lods
aas
mov
jecxz
or
sti
sub
leave
mov
ljmp
adc
fbld
shr
sub
cmp
mov
adcb
adc
movsb
and
fdivs
and
xor
lret
dec
add
nop
test
rol
push
inc
dec
pop
cwtl
mov
pop
sbb
mov
and
xchg
sti
int
ja
push
push
sub
xchg
mov
sub
ljmp
xchg
out
jl
xchg
pop
iret
outsl
jnp
hlt
fistpll
daa
jge
push
cs
sub
movsb
ljmp
repnz
in
sti
push
out
cmp
scas
jge
addr16
ja
test
cmp
test
sub
sbb
test
lret
and
inc
mov
add
loopne
out
adc
add
fcomps
sub
cmpsl
ret
pop
push
add
data16
in
imul
sarb
andl
ficoms
xchg
and
xchg
mov
les
and
nop
dec
push
pop
bound
out
repz
dec
ret
or
cwtl
xor
or
mov
inc
push
push
data16
cmp
sub
or
loopne
lret
pop
cltd
fs
push
sahf
lds
xor
repz
loopne
dec
lcall
aas
test
outsl
pop
js
sbb
add
fbld
jecxz,pn
mov
loope
push
mul
bound
fistpll
sarl
push
in
mov
adc
push
pop
jae
sub
inc
loope
add
jns
mov
mov
loope
cmp
fidivl
fisubrl
pop
and
jl
sub
das
jno
js
adc
packssdw
loope
into
adc
filds
clc
sbb
decl
xchg
aad
pop
andl
fnstenv
imul
inc
push
in
mov
aaa
out
pop
ljmp
and
jge
add
adc
mov
sbb
test
and
das
fldenv
out
push
sub
push
sub
xchg
mov
fistpll
dec
xchg
push
jno
jo
jns
outsb
jno
popa
inc
xchg
push
in
ja
in
ds
rcrl
mov
jo
negb
sbb
ficompl
lds
rolb
arpl
xor
les
mov
repnz
dec
movsl
out
lret
popf
out
and
xorb
imul
push
enter
sbb
sbb
js
notb
fs
sti
shr
loop
out
repnz
lret
add
cmp
test
lret
push
mov
call
out
dec
jo
fisttpll
scas
imulb
aas
ja
pop
xlat
ljmp
sub
push
mov
jp
fldl
fnstsw
dec
dec
inc
jns
js
xchg
xor
xchg
out
mov
imul
pop
dec
jp
push
fs
mov
mov
cmp
sub
mov
shll
jge
scas
fnstenv
lock
imul
mov
jmp
popf
gs
faddl
gs
sbb
add
out
in
pusha
dec
gs
cwtl
dec
cmp
data16
test
loopne
iret
jmp
lea
filds
dec
pop
adc
js
adc
jecxz
mov
and
lea
lret
movsb
sbb
mov
ja
push
add
adc
clc
daa
ljmp
out
xchg
rcrb
arpl
sub
test
gs
push
and
testb
sub
mov
mov
imul
mov
push
rorl
insl
push
or
dec
dec
xor
lods
icebp
pop
adc
mov
fldt
fnstenv
stos
jp
in
stos
push
jae
push
int3
xor
jne
sub
jle
sub
push
or
fcomip
sbb
hlt
mov
cld
and
and
aas
push
cmp
les
cltd
or
pop
mov
gs
repz
push
das
push
stos
push
xchg
sbb
xchg
pop
out
fcompl
add
pop
pop
jmp
mov
xchg
in
and
aaa
xchg
and
daa
cs
dec
inc
mov
pop
mov
xchg
pop
pop
add
and
jno
and
loope
out
pop
jb
xor
jle
out
shll
mov
scas
adc
icebp
shlb
xchg
xchg
jns
or
in
cmp
or
pop
loop
hlt
push
dec
dec
lret
out
xor
sub
js
das
stc
dec
fidivrs
negl
aam
cmp
or
aam
mov
stos
push
xchg
cmp
sub
mov
dec
jo
push
les
insl
icebp
scas
sub
sub
xor
pusha
sti
dec
fdivrs
sbb
sub
popa
and
xor
xor
push
cmc
push
or
add
push
mov
filds
mov
sub
shrl
popa
shlb
xor
pop
pop
mov
lds
adc
mov
jae
pop
lods
iret
dec
popa
xor
out
imul
adc
insl
pop
mov
movsl
ret
loope
imul
test
test
sbb
mov
add
inc
sbb
jmp
ffreep
cli
sub
add
fistps
insl
aas
out
and
sub
mov
out
js
push
std
imul
dec
rolb
stos
jo
enter
test
xor
out
addr16
out
cmp
cmp
sbb
clc
jl
mov
fnstcw
sub
push
je
scas
xchg
sub
outsb
andl
cmp
mov
cli
cs
and
xor
mov
fdivrp
add
xchg
pushf
dec
lahf
aam
push
in
fbstp
inc
jne
notl
cmpsb
xorl
loop
movsl
imul
sub
out
push
bound
mov
mov
sbb
adc
adc
cltd
and
stos
xchg
sbb
shr
push
ret
dec
lcall
adc
xchg
mov
cmpb
fsubl
inc
mov
stc
cmp
gs
out
mov
imul
push
jp
cmc
sub
sub
sbb
inc
sub
adc
inc
in
or
inc
in
mov
adc
jmp
jo
and
jno
incl
dec
cmp
xor
jl
loopne
outsb
mov
add
mov
xorb
sub
pop
and
mov
cmc
or
and
cli
insl
out
adc
fisttps
sub
push
jno
sti
dec
std
ds
subb
inc
xchg
jle
in
repnz
imul
dec
cmp
jbe
push
scas
fistl
sub
andb
aaa
sbb
push
outsb
loopne
xchg
pop
fldenv
pushf
inc
mov
dec
jno
out
cmp
sub
out
sti
dec
push
inc
gs
or
imul
arpl
enter
jg
push
cld
fsubl
add
mov
pop
push
push
repnz
mov
dec
push
push
push
mov
je
xlat
xchg
mov
fucomip
clc
push
and
and
pop
inc
pop
pop
lret
fldenv
fstps
daa
xchg
addb
jl,pn
and
outsl
cs
addr16
in
out
cmp
jns
in
adc
mov
push
sbb
pop
cmp
or
pop
mov
ja
sub
lock
addr16
push
xor
push
leave
push
repz
pusha
and
aam
mov
movsl
jno
jae
jecxz
pop
dec
adc
loop
push
cld
and
and
cmp
in
test
in
insb
jno
bound
loop
bnd
mov
pop
out
cmp
sub
xor
push
push
sub
lds
or
sahf
xchg
sbb
insb
and
jno
stos
pushf
push
dec
inc
test
xor
push
insl
call
sub
or
ss
std
stos
mov
mov
ja
fisttps
jmp
gs
pusha
push
push
xlat
mov
das
sub
cmc
leave
mov
mov
ljmp
mov
pop
sahf
imul
in
sub
and
or
push
popf
adc
jbe
vmwrite
sub
dec
aam
sub
push
sbb
ljmp
dec
jae
das
sub
leave
inc
adc
xchg
imul
fistps
test
pop
sahf
pop
xchg
mov
mov
inc
and
mov
and
or
test
mov
pop
icebp
hlt
fwait
in
sub
and
jne
push
jge
and
icebp
mov
inc
ja
push
std
pop
dec
push
jecxz
jne
xchg
out
adc
mov
in
stos
out
fstl
mov
mov
mov
test
lods
jecxz
jle
mov
and
sti
pop
es
jl
mov
mov
add
mov
lahf
ljmp
ss
adc
xchg
cmp
out
es
dec
stos
sub
xor
push
call
int3
adc
and
test
xor
mov
fidivrs
xor
out
icebp
cmpsb
mov
and
je
in
mov
mov
xchg
push
loop
mov
aad
jmp
mov
clc
ret
repz
adc
mov
sbb
adc
pop
xor
add
call
js
jno
mov
aaa
mov
pop
mov
out
push
fs
cs
int
cmc
rorl
xchg
movsl
lods
mov
ret
loopne
das
fbstp
dec
ret
mov
fisubrl
adc
jmp
aam
xchg
je
mov
xor
lds
fildl
ret
dec
pop
lret
xor
lds
sub
adc
jmp
test
sub
jno
out
movsl
add
sub
mov
mov
pop
jp
push
out
fistpl
pop
loope
dec
push
aaa
add
jg
in
ja
ficompl
sbbl
xchg
repz
sbb
daa
int3
add
push
insl
fbstp
sub
inc
negb
rol
es
leave
adc
cmp
fists
jmp
jmp
or
sbb
mov
xor
enter
adc
insl
fwait
mov
mov
and
xor
push
add
es
push
xlat
mov
mov
push
push
sub
mov
cwtl
mov
pop
out
adc
mov
stos
gs
int3
xchg
and
adc
or
jns
fdivrs
push
fst
add
lods
rcll
sbb
fnstenv
inc
in
jle
imul
mov
nop
inc
jbe
dec
fcompl
hlt
adc
adc
imul
sbb
js
push
aad
insl
add
scas
enter
mov
shr
imul
rorl
ret
cmp
cld
mov
outsb
data16
dec
adc
cmovae
shl
add
fmuls
daa
imul
cmp
js
jo
out
jae
dec
mov
cli
sub
xor
jge
dec
js
jno
mov
ret
rcr
leave
int3
bound
cwtl
cwtl
mov
adc
xchg
add
push
test
loope,pt
mov
xchg
fs
js
imul
xchg
out
nop
insl
cmp
rcr
inc
imul
push
cld
jnp
pusha
push
aas
push
call
dec
imul
loop
mov
shll
adc
lea
test
jae
dec
je
sbb
nop
imul
mov
mov
jnp
stos
rcll
cs
imul
push
push
bound
insl
xchg
inc
cwtl
and
cmp
int3
xor
and
add
es
imul
imul
mov
mov
lret
push
adc
stos
mov
ret
push
pop
inc
add
jp
mov
push
dec
jl
and
push
xchg
aaa
mov
mov
fs
push
in
cld
cmp
fsub
aad
std
dec
xchg
jbe
imul
nop
inc
fidivl
push
jnp
ret
imul
mov
dec
test
sbb
lret
or
pop
mov
outsb
sbbl
imul
mov
mov
imul
dec
cltd
imul
sub
cmp
ret
adc
shll
and
movsl
stc
xchg
jle
out
inc
sahf
lret
fisttpl
or
insl
xchg
in
jnp
imul
int
xchg
gs
lods
or
imul
jbe
out
adc
push
add
pop
cmpl
sbb
cs
imul
lock
js
ret
and
imul
divb
mov
ret
sub
insb
pop
call
imul
flds
fildll
dec
bound
mov
nop
dec
push
fs
lock
mov
xchg
ljmp
mov
pop
adcb
cmpsl
imul
xor
cmpl
daa
sub
out
test
clc
imul
jae
cmp
sbb
int3
imul
jbe
iret
lret
jno
lods
cs
inc
arpl
mov
xchg
pop
je
jle
aad
out
mov
pop
movsl
cli
popa
sti
loopne
add
lret
inc
inc
ss
scas
pop
push
mov
imul
sbb
add
xchg
leave
cmpsl
insb
xchg
in
mov
xor
xor
pop
addr16
jne
dec
jno
pop
pop
cmp
push
sbb
mov
imul
es
imul
notb
stos
mov
jnp
es
sub
das
imul
enter
ss
cmp
lret
mov
inc
imul
add
scas
fwait
int
shrl
dec
jno
andb
cmp
xor
xor
add
sarl
fildl
lock
inc
sbb
jmp
cmpsb
ljmp
call
or
imul
xchg
frstor
jg
sbb
inc
shlb
push
xor
imul
and
and
andl
cmc
push
ds
test
ss
imul
dec
stc
push
imul
mov
fbstp
xor
sarl
mov
lds
lahf
xchg
frstor
pop
jecxz,pn
jge
gs
and
inc
mov
mull
push
out
in
jp
inc
enter
test
push
scas
dec
into
out
inc
xlat
scas
mov
stos
jae
addr16
out
push
aas
aas
mov
push
mov
in
jbe
sub
pop
mov
cs
insb
pop
dec
jp
mov
add
cld
ret
and
call
cmp
clc
je
adc
das
loope
insb
sbb
cmp
sub
or
jns
mov
xchg
leave
shll
add
out
pushf
clc
push
mov
insb
pop
out
cwtl
inc
dec
lret
cltd
fists
fcompl
sbb
xor
adc
mov
sbbl
pop
int
filds
cmp
cmpl
mov
nop
inc
inc
andb
pop
out
adc
jne
xchg
mov
add
neg
mov
lds
addb
mov
lahf
loopne
popa
and
rcll
xlat
enter
inc
mov
imul
inc
and
rcr
insl
rclb
push
lock
lahf
mov
jnp
out
sti
imul
sti
sub
out
mov
push
add
push
sahf
loope
add
test
fsubrs
repnz
dec
mov
outsl
xchg
fwait
dec
and
pop
jne
test
imul
out
and
fs
mov
mov
movsb
jmp
lret
jle
movsl
push
and
int3
vcvtsd2ss
push
mov
sub
loope
fmulp
sub
mov
mov
icebp
cmpsl
ljmp
das
inc
aam
adc
aas
loop
and
out
push
dec
sbb
loope
mov
add
or
jge
push
add
out
jge
cmpsl
hlt
xor
stos
xchg
lahf
push
sub
sub
lea
jp
inc
jmp
addb
stc
mov
test
xchg
js
mov
movlps
dec
and
insl
cmc
bswap
jnp
inc
hlt
hlt
cs
gs
mov
out
jo
sbb
in
fwait
es
dec
aam
sub
xchg
loope
movsb
paddusw
dec
imul
cmpl
and
mov
jb
push
scas
and
pop
mov
cmp
repnz
push
mov
and
or
jne
or
jp
fistpll
xchg
ds
enter
inc
icebp
loop
sbb
and
xchg
mov
inc
dec
mov
stc
sbb
loopne
jge
dec
inc
sbb
idiv
jo
pusha
add
test
cmp
and
xor
jge
outsl
lret
imul
xlat
jo
dec
lods
cs
adc
mov
cwtl
push
pop
pop
xorb
mov
icebp
lds
jnp,pt
dec
int
jp
xchg
dec
pop
test
and
inc
push
aad
gs
call
test
insl
movsl
rcll
dec
or
push
out
mov
pop
mov
loope
into
imul
out
ja
das
fisttpl
sub
or
out
push
cld
and
sub
scas
xchg
out
je
out
cs
inc
adc
std
sti
push
pop
sbb
loopne
popa
dec
xchg
outsb
out
loop
lret
imul
push
fldenv
mov
inc
adc
dec
inc
push
add
mov
lock
and
das
test
nop
lcall
sub
lods
cld
repnz
dec
jo
jecxz
cmpsl
dec
gs
cmpsb
jbe
pushf
adc
mov
imul
repnz
ja
push
or
outsb
xor
push
stos
mov
mov
pop
pushf
sbb
xor
mov
dec
inc
lret
out
addr16
sbb
sub
mov
ljmp
pop
adc
loop
inc
popf
jg
cmp
int3
call
push
in
fadd
rcl
fldl
inc
cmp
mov
fucomip
enter
lock
icebp
jno
mov
andb
jmp
xorl
scas
push
mov
sarb
into
mov
test
fisttpll
movsb
dec
out
mov
adc
js
test
xchg
call
add
aam
push
push
aad
test
dec
ja
sub
loop
test
test
jg
sbb
fnstsw
add
movd
jnp
scas
shl
ja
in
adc
or
add
sbb
imul
lods
fnstsw
add
mov
dec
sbb
bnd
out
out
xor
push
adcl
inc
dec
add
jmp
pushf
and
sarb
sub
lea
and
cmp
pop
push
sbb
jbe
or
pop
sub
xchg
sbb
cli
shll
fildl
mov
sahf
mov
lock
dec
sbb
gs
out
mov
dec
xchg
dec
mov
jecxz
cmp
jge
fcoml
xchg
xlat
mov
jg
imul
sub
jae
mov
pop
les
mov
addr16
push
mov
jge
out
repz
dec
add
scas
idivb
lods
into
lods
cmc
pushf
pusha
movsb
jp
mov
addr16
gs
push
mov
xchg
ret
add
dec
ljmp
ss
mov
xchg
push
adc
mov
adc
xchg
dec
pop
mov
adc
lcall
mov
test
iret
or
lret
ret
inc
fbld
pop
jge
hlt
add
mov
sbb
rcll
and
pushf
test
adc
daa
aas
add
lcall
sub
gs
outsl
pop
fldl
fs
mov
add
pop
mov
and
bound
dec
icebp
clc
popa
sti
sub
out
pop
lds
sbb
add
fwait
sbb
icebp
jecxz
jmp
pop
or
xor
lock
adc
xchg
push
cmpsl
lret
or
jo
cmp
shl
out
movsb
mov
adc
cmpsb
popf
push
sub
jne
push
xchg
movsb
in
xor
pop
call
dec
mov
fmull
data16
xor
sub
int
or
and
ret
scas
stc
mov
mov
xchg
jnp
out
mov
pop
adc
pusha
movsb
xor
js
call
pop
or
adcl
inc
cmp
sub
push
stos
test
mov
adc
add
inc
add
jl
imul
ret
repz
jno
and
stc
cmp
and
mov
daa
inc
shlb
addr16
pushl
scas
lods
inc
subb
je
mov
cs
push
xchg
pop
push
rcl
xor
gs
dec
addr16
fisttps
cmpsl
xlat
xchg
mov
xor
push
xchg
ret
shrb
rcrb
iret
int
xchg
enter
in
jmp
mov
fsubl
fnstcw
push
cmpl
pop
aaa
loope
aad
adc
mov
xlat
pop
test
pop
push
mov
add
shl
add
stos
sarl
imul
sbb
or
and
movaps
repz
mov
push
fwait
adc
lods
mov
ret
inc
rclb
roll
out
sbb
rcll
outsb
adc
insl
rol
dec
imul
ret
stc
push
adc
jno
jl
cmp
out
es
push
xlat
mov
sbb
scas
sub
add
les
sbb
xlat
pop
bound
sub
xchg
aas
daa
test
mov
jne
dec
dec
ret
in
jbe
movsb
aad
cmpsb
cmp
jp
rclb
fcompl
cmp
shr
jo
ja
es
push
negl
mov
in
lods
fwait
xchg
fbld
popa
loopne
pop
outsl
andl
test
sub
gs
mov
jno
shr
out
lods
inc
andl
fwait
add
scas
mov
fstl
lret
loope
jns
mov
ss
jbe
fs
pop
adc
and
loop
cmp
clc
negb
out
adc
xchg
cmpsl
leave
stos
and
mov
jo
xchg
mov
sub
lcall
cmp
mov
in
loope
aas
ja
mov
dec
dec
pop
sbb
cmp
inc
sbb
lds
into
dec
addr16
cmp
sub
out
mov
sub
cmpb
push
push
repnz
out
cli
ret
mov
xor
out
cld
mov
push
dec
pop
mov
loop
push
js
cmp
addr16
out
push
das
fxch
repnz
adc
mov
lret
mov
mov
jecxz
test
cwtl
inc
aad
loope
adc
sub
filds
mov
je
out
out
jo
mov
fmull
ret
inc
adc
aam
es
mov
les
jg
ljmp
aam
shrl
mov
pop
and
call
je
scas
push
push
stc
dec
into
push
je
mov
out
das
sti
inc
jo
dec
push
push
pop
pop
pop
sub
bnd
into
fwait
int
sbb
into
push
fists
xchg
lret
xor
int
daa
sbb
adc
inc
iret
push
loope
sub
pop
jne
sub
and
cmp
dec
xchg
push
push
fwait
stos
add
cwtl
jno
das
push
xor
cs
negb
aad
lock
jge
xchg
adc
sti
pop
cli
cmp
pop
dec
jle
cmpsb
dec
inc
test
fistl
lret
dec
popa
out
faddl
xchg
fwait
dec
sbb
test
cmp
sub
jmp
cmpb
xchg
sti
std
cmp
hlt
shrb
lock
push
jmp
mov
data16
or
adc
test
scas
mov
xchg
out
out
inc
jnp
pop
add
lock
cmpsl
xchg
mov
adc
mov
mov
in
out
push
push
cld
daa
imul
jo
dec
test
ret
dec
pop
xor
xor
cmp
mov
jo
cmp
test
aam
fbstp
fwait
push
fcompl
ljmp
leave
es
mov
insb
mov
pop
addr16
push
push
adc
loope
popf
add
dec
jae
jp
lret
or
sub
xlat
mov
imul
fbld
fadds
mov
stos
mov
test
inc
in
es
out
mov
xor
pop
daa
push
push
addr16
pop
pusha
push
stos
push
push
sub
iret
out
jns
mov
out
fwait
pop
inc
scas
cmp
sbb
mov
loope
pusha
int
lret
clc
loopne
xor
pop
test
out
addb
in
mov
mov
xchg
inc
sahf
or
test
lahf
mov
dec
addl
pop
andb
or
subl
pop
pop
xchg
push
jo
addb
inc
test
out
dec
aad
sub
push
imul
loopne
rcrl
lods
mov
inc
jle
push
scas
ljmp
out
dec
nop
cmp
jo
sub
jno
movsb
rolb
repz
mov
out
jnp
out
ret
rolb
les
sarl
jle
push
aam
jmp
imul
dec
pop
push
cmp
mov
cs
gs
sbb
enter
arpl
out
mov
adc
filds
pop
loope
out
fsubl
push
xchg
cmpsl
mov
mov
daa
shr
addr16
fisttps
pop
sub
jns
jnp
icebp
ret
sti
test
add
movsl
lret
sti
mov
test
push
faddl
push
testb
mov
out
dec
loop
jae
flds
sub
push
fbld
lcall
xlat
dec
leave
fildl
mov
jno
test
inc
xor
sbb
jle
and
push
jo
lahf
out
lahf
sub
cmp
jo
notb
jle
push
and
sbb
or
xchg
dec
add
cmc
sahf
subl
mov
fwait
jne
cs
sti
add
add
es
mov
xor
cmp
out
sti
jnp
std
rcr
les
and
ljmp
dec
stos
pop
mov
mov
icebp
pop
aas
push
les
dec
mov
shlb
loop
push
xchg
cwtl
das
fstl
call
ffreep
and
jbe
iret
loope
out
out
ljmp
cld
sbb
imulb
inc
decb
insl
cs
movsb
lods
sub
or
xchg
loope
loope
out
repz
pushf
pusha
mov
addr16
cltd
test
push
lret
frstor
popa
out
popf
sbb
lret
push
mov
out
inc
cmp
fcmovnu
and
dec
lods
movsb
inc
in
in
and
cld
sbb
cmpl
inc
add
ffreep
stos
pop
fcomip
fmulp
daa
xchg
fistpll
aad
push
out
push
add
pop
pushw
push
cs
fstl
jge
mov
fistpll
daa
xor
bswap
mov
fcomps
movsb
lret
pop
ds
xor
cmpsl
push
xchg
loope,pt
pop
jle
push
fs
lds
movsl
xchg
xchg
rcrl
sbb
xor
xor
test
xlat
push
cmp
xchg
sbb
push
fisubl
imul
push
test
into
data16
out
inc
mov
dec
test
pop
dec
mov
ljmp
icebp
push
jo
out
and
out
pushf
sahf
test
push
sub
scas
and
xor
push
sarl
pop
sbb
push
rcll
inc
sbb
dec
popf
mov
adc
scas
mov
out
sub
mov
popf
push
fsubl
outsb
mov
out
sahf
in
fwait
mov
mov
adc
add
mov
mov
scas
xor
or
pop
and
decl
fwait
mov
rolb
push
out
sar
mov
jecxz
inc
adc
mov
fistps
sbb
pop
jae
test
fdivs
shrb
xchg
sub
and
adc
xchg
imul
adc
outsl
gs
sbb
and
fsubl
das
scas
outsb
mov
dec
mov
std
shl
ljmp
xlat
and
shlb
push
mov
enter
outsb
pop
push
outsl
pop
jmp
sbb
sbb
dec
inc
dec
dec
mov
xchg
push
inc
cmp
add
stc
pop
sti
jl
mov
aad
dec
rcrl
shlb
imul
jp
dec
ffreep
je
scas
cld
mov
popa
mov
arpl
test
out
stos
push
add
popa
sub
inc
adc
iret
dec
push
push
jnp
loope
es
test
pop
push
pop
filds
inc
and
repnz
jb
dec
and
jl
sub
sbb
jae
push
popf
je
lock
pusha
nop
test
cli
addr16
in
fcmovb
mov
cltd
mov
enter
test
jp
lods
pop
out
ret
js
cmp
andl
cmp
loope
outsb
push
mov
fistpll
jmp
xor
mov
in
and
test
jmp
cli
stos
stc
loope
les
gs
aad
sbb
jmp
jmp
in
ja
adc
xlat
add
inc
in
mov
pop
out
adc
mul
mov
es
sbb
mov
fsub
mov
and
xor
push
jns
xor
xor
and
loop
mov
push
dec
icebp
sti
pop
pop
dec
mov
mov
leave
lahf
fwait
popa
les
in
and
outsb
mov
push
mov
rorb
push
fdivl
lock
and
dec
and
adc
xchg
inc
scas
imul
push
push
mov
adc
imul
push
push
cwtl
fisttpl
jno
mov
fbstp
mov
mov
mov
cmp
adc
nop
jae
lret
ja
lahf
mov
scas
or
loop
stc
or
mov
pop
test
je
loopne
hlt
inc
mov
test
lahf
jp
sub
out
jmp
in
mov
inc
lret
add
push
add
out
fwait
enter
in
jl
fistpll
mov
rcr
bound
cs
inc
mov
loope
je
movsl
es
out
loopne
xchg
mov
subl
ret
adc
lods
dec
stos
ljmp
jne
fstpl
loope
loopne
inc
addr16
repnz
aam
or
cmp
dec
out
out
outsb
mov
out
aas
sarb
jp
pop
mov
push
inc
test
fsubl
out
clc
push
jp
add
dec
or
cmp
pop
fdivr
adc
out
mov
sahf
inc
jge
out
cmpsl
xchg
sub
inc
lcall
mov
inc
fcmovu
push
mov
aad
inc
jle
pop
push
repz
add
mov
mov
lock
inc
dec
pop
sbb
pop
out
xchg
adc
mov
add
lock
shld
lock
sbb
dec
sub
cmc
movsl
push
lods
jp
xlat
mov
lret
xor
mov
gs
loope
imulb
sarb
pop
call
or
bextr
stc
add
jns
pop
mov
xchg
jmp
inc
movsb
xchg
dec
fidivs
xchg
jg
hlt
push
mov
test
xorl
add
mov
pop
xor
enter
cmpl
fists
and
mov
inc
imul
mov
fld
stos
push
addr16
mov
cmovne
inc
pop
cld
call
sbb
xchg
mov
lret
or
inc
sbb
jecxz
jb
sarb
push
push
in
gs
dec
repnz
test
sub
pushf
push
xor
push
daa
xor
out
inc
jecxz
icebp
stos
and
aad
hlt
div
mov
add
xor
fldcw
les
mov
loope
das
outsb
cmp
push
fsts
test
xor
popa
les
sbb
rcrl
sub
lahf
nop
out
and
sub
add
mov
mov
lcall
pop
sbb
and
fistps
mov
adc
xchg
pop
mov
mov
mov
inc
mov
addr16
icebp
test
in
testb
or
mov
cmpsl
mov
fbld
icebp
xchg
pop
sarl
mov
test
fstl
cld
push
sub
push
dec
mov
jmp
xor
daa
mov
and
and
and
ret
sarl
pop
ret
lods
xchg
loope
out
es
and
loop
rcl
add
subl
rorb
cld
repnz
test
jnp
xchg
lods
xorb
push
mov
mov
into
loope
jo
in
out
dec
rclb
jle
sub
mov
mov
insl
cmpsb
dec
popf
out
mov
int3
mov
inc
loopne
mov
cwtl
clc
loope
sub
aam
icebp
add
sub
xorw
scas
mov
jnp
out
cmp
mov
inc
push
loope
fs
inc
dec
addr16
out
jo
jp
push
addl
sub
jl
jns
repz
or
loope
stos
inc
stos
mov
push
pop
sub
aad
jecxz
dec
imul
sub
mov
out
mov
jle
inc
in
out
adc
push
cmpsb
push
jmp
xor
pop
fidivl
fwait
inc
push
push
mov
cs
inc
test
mov
xchg
sbb
pop
jbe
dec
sub
out
dec
out
out
and
scas
push
pusha
stos
orb
mov
repz
push
pop
outsl
mov
lea
jp
cltd
and
in
loopne
rclb
xchg
sub
int3
mov
stos
mov
iret
cmp
jno
int3
setnp
filds
fldl2e
out
pop
inc
aad
pop
dec
jmp
jg
jle
cltd
gs
imul
dec
je
lret
loope
lods
fucompp
push
pop
xor
fsubrp
adcb
xchg
jmp
or
xchg
in
icebp
push
jecxz,pt
imul
repnz
and
and
push
push
jae
dec
sub
ret
sub
repnz
jmp
mov
andl
fld
adc
gs
nop
jno
jge
out
stc
movsl
dec
or
inc
xchg
xchg
dec
in
jne
clc
popa
aad
sbb
mov
loop
ljmp
enter
xchg
mov
loope
addr16
out
call
xor
jmp
push
inc
push
loop
xchg
movsl
and
dec
inc
mov
xchg
sbb
xor
xlat
xchg
mov
arpl
and
push
add
and
mov
add
push
stos
loope
out
das
adc
xor
push
push
lret
lods
jle
cmpsb
fwait
jmp
sbb
xchg
jb
pause
push
push
mov
imul
or
jle
mov
mov
and
shrb
adc
sti
jns
add
lock
ja
mov
xor
xor
or
xchg
sti
dec
sub
xor
fwait
leave
mov
mov
xlat
inc
xor
cmpsl
push
push
test
test
stc
xchg
jmp
stos
shlb
fistps
and
mov
out
lcall
shr
mov
dec
fildll
setb
mov
addr16
enter
fstps
dec
or
sbb
iret
in
xor
sub
inc
loope
inc
pop
mov
mov
add
fisubl
jne
icebp
pop
xchg
pusha
repnz
dec
mov
ret
pushf
mov
scas
out
fidivrs
mov
cmp
add
pop
xchg
pop
mov
mov
xchg
pop
xchg
in
jb
aad
mov
pop
lods
sub
and
repz
popa
shrl
cs
inc
andl
gs
sbb
fmuls
sbb
out
mov
aad
in
mov
outsb
xlat
loop
addr16
aam
mov
push
fdiv
popa
hlt
out
xor
mov
out
sbb
push
fisubrl
iret
fists
ret
out
xor
nop
loopne
jmp
data16
and
sub
ret
cld
mov
out
cmc
les
lret
mov
add
test
inc
jno
repnz
cmp
gs
insl
stos
js
push
pop
push
lret
fwait
dec
outsl
push
pop
ret
jge
jle
ffreep
outsl
imul
ljmp
or
xchg
sub
add
clc
gs
gs
ja
inc
inc
into
mov
and
xlat
inc
fldenv
and
sarl
inc
mov
orb
or
mov
out
jmp
inc
shl
lret
test
xor
les
out
outsb
xchg
and
out
lret
pop
mov
cmp
in
mov
sahf
cltd
cmp
or
dec
adc
popa
and
push
xchg
add
paddw
and
pop
ja
lock
jno
mov
push
insl
ss
push
xchg
lds
jae
lcall
clc
insb
inc
sbb
mov
aad
add
sbb
xchg
int
dec
es
addb
js
popf
mov
or
inc
in
jmp
dec
xchg
in
push
adc
das
or
sarb
insb
repnz
and
pop
mov
push
mov
lock
pop
out
push
sbb
imul
sub
aas
loope
jns
leave
and
sbb
out
ja
repz
scas
xor
push
rcll
loope
xlat
rcr
into
lock
ret
mov
mov
push
lret
xchg
out
sahf
and
rcrb
dec
jle
fwait
and
mov
lret
pushf
adc
mov
comiss
sbb
push
xor
xchg
insb
mov
mov
popf
test
add
mov
jbe
dec
hlt
iret
mov
inc
loop
jle
mov
jl
fstl
dec
push
fwait
fs
pop
xchg
dec
sbb
inc
cld
dec
sbb
adc
push
or
cld
fs
pop
lcall
fisubl
push
sub
jge
pop
jae
orl
and
enter
lock
add
loopne
lret
call
gs
lods
ljmp
mov
xor
xor
iret
jecxz
inc
adc
aaa
cld
stos
sti
sbb
gs
outsl
dec
adc
add
xor
loope
ret
sub
push
hlt
mov
jmp
push
fbstp
dec
fcomi
mov
test
add
sti
jo
mov
pop
popa
xchg
out
add
sti
out
scas
pop
cmp
cmp
mov
pusha
shr
jb
loope
clc
out
sub
test
sbb
pushf
jo
jge
mov
adc
es
xchg
pop
push
mov
dec
cmpb
jge
mov
or
imull
call
icebp
pop
std
addr16
inc
fsubrs
mov
inc
mov
cmp
adc
add
dec
sub
push
inc
stos
out
adc
imul
test
scas
inc
test
add
test
call
addr16
addr16
lret
cmp
and
test
mov
stc
mov
push
popf
mov
scas
inc
lock
filds
fidivrs
ret
shlb
daa
and
out
dec
sub
and
cmp
push
fsubrs
and
mov
movsb
sbb
push
push
lock
push
inc
adc
jg
les
xchg
in
sub
fcomps
fisttps
into
and
push
jno
out
sbb
jne
std
fmull
pop
push
test
xchg
pop
xor
push
adc
add
je
mov
xchg
xor
ficoml
and
xor
jae
fchs
dec
repnz
or
test
loope
mov
aaa
gs
repnz
push
inc
mov
call
jo
cmpsl
xchg
adcl
jp
aad
call
ret
fidivl
cmpsb
movsb
push
stos
js
mov
jns
outsl
lock
out
lods
das
xchg
lahf
stos
movsb
cmp
or
popf
sub
imul
icebp
ret
xor
leave
push
orb
dec
in
push
lock
rorl
xlat
movsb
xchg
jp
mov
adc
jns
cmp
ret
les
fildll
iret
ljmp
shlb
scas
jle
into
stos
push
add
mov
inc
ja
push
lea
jno
je
in
xchg
jmp
push
outsl
sbb
lock
imul
add
pop
in
jmp
xor
mov
or
push
int
mull
adc
cltd
xor
xor
mov
sub
push
fucomp
jo
ja
and
jg
dec
fildll
and
push
addr16
pusha
stos
jno
dec
mov
icebp
nop
jmp
mov
push
aam
mov
cmp
movups
sbb
and
or
hlt
mov
lods
roll
cmc
fucom
jp
push
dec
loope
push
jb
cmpb
mov
test
push
pop
ja
repnz
test
loop
sarb
and
aad
sti
sti
push
in
pop
pop
icebp
mov
jp
mov
adc
xchg
and
dec
rcrb
sub
clc
xchg
jb
mov
ljmp
push
and
cs
sub
daa
xchg
push
int3
jp
jnp
pop
mov
sarl
jns
sbb
mov
mov
stos
sub
out
ss
mov
mov
and
push
mov
js
dec
into
ljmp
aam
xchg
mov
mov
push
xor
lds
or
aas
fbstp
sub
inc
insb
mov
or
xchg
lcall
mov
scas
add
jae
add
xchg
dec
adc
out
pushf
xchg
dec
dec
add
nop
cmp
mov
ljmp
add
les
xchg
test
les
dec
push
mov
push
fucomp
out
pop
imul
shll
ljmp
pop
xchg
lret
jg
dec
xor
push
cltd
sbbb
xor
lea
fiadds
cmp
jle
and
push
out
mov
sub
dec
addl
aad
jle
stos
pop
hlt
xchg
dec
adc
adc
mov
shrl
xor
push
aad
movsb
sub
test
loope
movsl
dec
xchg
aas
xor
test
out
dec
and
out
mov
loope
lods
sbb
or
cltd
aam
jb
sub
add
dec
jmp
or
movsb
call
fs
inc
mov
popa
xchg
and
inc
aas
out
popf
loope
pop
dec
sbb
pop
xor
push
enter
mov
ja
es
pop
das
std
mov
sub
imul
sub
mov
or
mov
xor
fwait
add
xlat
pusha
adc
dec
dec
fldcw
fildll
jecxz
jg
addr16
sub
insb
cmp
cmp
icebp
mov
pop
dec
sbb
xchg
jg
test
out
inc
pop
aas
emms
out
push
sub
push
repnz
pop
cltd
loope
cmpsb
je
push
fmull
add
add
lret
lock
leave
faddl
pop
ljmp
xchg
push
jo
inc
repnz
out
gs
fildl
arpl
sub
lods
in
std
rcll
cmp
out
mov
mov
or
sbb
subb
scas
push
mov
sub
ret
fisubrl
or
fcomp
cmpsb
inc
mov
sti
cmp
icebp
xor
mov
xchg
cmp
and
push
insb
jge
and
sti
adc
mov
fs
push
es
or
vpsllw
shll
jb
adc
lds
pop
push
fsubs
xor
stos
scas
out
cmp
sub
mov
pusha
les
pop
mov
pop
mov
cmp
push
xor
mov
mov
mov
out
mov
int3
jo
shrb
leave
call
cmp
ja
lods
sbb
es
in
repz
out
popf
dec
xchg
icebp
pop
ficomps
xor
inc
shl
rorb
cmc
cmp
dec
gs
inc
jo
push
lretw
xchg
and
lock
cmp
and
add
inc
xchg
outsb
add
popa
in
popf
iret
sbb
loope
mov
cld
or
jmp
cwtl
sti
imul
adc
insb
cmp
test
out
iret
inc
and
mov
pushf
cltd
ljmp
js
and
pop
outsl
mov
mov
imul
out
cltd
xchg
scas
xchg
push
push
and
jns
das
push
and
int
pop
sbb
cltd
out
das
push
jnp
movl
movsl
mov
in
js
or
push
sbb
lea
fistpll
or
nop
lds
dec
xchg
xor
dec
mov
loope
inc
jecxz
jb
push
push
pop
clc
cs
push
call
fistps
push
daa
ret
movsb
jmp
js
jecxz
xor
imul
adc
aam
fyl2x
int3
out
xor
xchg
sbb
and
xchg
hlt
xor
orb
cmp
dec
xor
inc
jp
aas
negl
mov
mov
pusha
movsb
sub
cmp
cmp
and
dec
lods
lret
mov
fbld
and
pop
rorb
aam
repz
movsb
inc
xchg
jmp
inc
mov
outsl
and
sub
xor
sbb
fucomi
out
sub
sbb
mov
fucomip
jo
lods
mov
arpl
jno
dec
mov
cmpsb
fstps
je
pusha
out
jp
dec
outsb
mov
sbb
arpl
jae
cltd
ss
out
lret
sub
imul
xchg
sti
ja
and
je
cmp
in
out
dec
ljmp
mov
sbb
dec
loopne
dec
loopne
into
jge,pn
aaa
push
push
gs
adc
lcall
gs
adc
pop
es
lcall
popf
enter
push
xchg
lds
jecxz
psrld
imul
loop
inc
lret
sbbl
xchg
insl
popf
rcr
fwait
in
iret
daa
sahf
xchg
sbb
divb
dec
aad
pop
push
icebp
jl
mov
je
mov
sub
aaa
mov
out
fbstp
and
in
cwtl
add
jg
fwait
shlb
fldcw
mov
mov
push
fwait
out
daa
push
sbb
pop
lods
cmp
xchg
stos
xchg
arpl
xchg
and
pop
and
cld
dec
lea
mov
and
orb
stos
and
mov
daa
movsb
push
pop
outsl
fisttps
adc
lret
int3
sub
aaa
add
movsb
mov
xor
enter
and
loope
push
and
jne
mov
or
icebp
loope
stos
mov
lret
mov
cltd
mov
fwait
and
out
adc
sar
je
cli
or
cmc
push
sbb
imul
sbb
xor
out
dec
gs
mov
in
aam
sbbb
mov
add
nop
push
dec
pop
and
nop
iret
dec
sbb
out
jle
stos
js
sub
adc
dec
addr16
fsts
or
adc
adc
jecxz
xor
filds
add
mov
inc
xchg
pop
mov
sub
lods
jmp
cmpxchg
dec
or
mov
fidivrs
decl
gs
push
dec
out
pop
jp
add
push
push
jae
mov
mov
push
lret
test
fs
test
sti
xchg
jb
xchg
out
adc
outsb
loopne
movsl
push
jmp
hlt
cmp
inc
jl
enter
inc
ja
movsl
nop
mov
jae
pop
dec
xor
xchg
test
xchg
pop
fimull
call
inc
in
add
dec
addr16
dec
enter
js
mov
aaa
push
shr
add
fwait
daa
or
mov
add
cmp
imul
ret
fldl
or
xchg
mov
mov
push
in
imul
xor
stos
sub
lock
xor
inc
pop
imul
mul
sub
mov
push
inc
cmp
imul
xchg
mov
scas
out
out
aad
gs
jo
std
mov
imul
jmp
and
sti
sub
imul
or
push
out
mov
sbb
jne
inc
out
cmpsb
imul
notb
jb
xor
repz
cwtl
fwait
adc
es
imul
mov
imul
mov
ret
in
repz
push
cmp
add
iret
sub
sub
aam
xchg
xor
data16
sarb
insl
adc
pop
dec
fs
movsb
sub
inc
scas
mov
arpl
jno
scas
movsl
das
inc
imul
les
imul
fdivrl
lock
pusha
insl
imul
lods
scas
mov
cmc
xor
insl
ljmp
mov
push
arpl
mov
mov
int3
and
xchg
test
es
cmpsl
into
std
imul
adcl
and
dec
imul
lcall
icebp
bound
sbb
and
dec
out
adc
cs
and
loop
cli
pop
jno
call
inc
imul
xlat
aas
cmc
imul
clc
movsl
not
ljmp
fists
inc
or
pop
outsl
inc
cli
xor
imul
outsl
nop
mov
xchg
dec
jb
loopne
adc
fldcw
sbb
pop
lods
and
push
test
or
fdivrl
push
nop
mov
pop
imul
or
cmp
adc
outsb
pop
fldenv
inc
testb
test
xchg
inc
push
addr16
je,pn
add
xor
xchg
cmc
popa
lret
ret
jbe
gs
or
imul
mov
lcall
pop
pop
and
imul
js
testl
jb
lock
sbb
int3
or
mov
cs
xchg
outsb
xor
adc
imul
gs
push
test
push
pop
nop
gs
cmpsb
jne
pop
subb
sbb
add
mov
aas
cmp
pop
loopne
imul
add
fidivs
movsb
arpl
jg
test
les
pop
imul
mov
fisttpll
sbb
je
mov
push
in
add
mov
aad
pop
push
sbb
insb
jb
imul
cmp
mov
or
jo
in
xorl
imul
push
mov
imul
dec
lods
dec
imul
xor
imul
hlt
xchg
or
enter
dec
imul
push
inc
xchg
cmp
out
insl
mov
push
iret
data16
fs
fsubrs
imul
scas
add
imul
mov
aam
lahf
addr16
mov
lock
insl
in
pop
imul
xchg
inc
punpckhwd
sub
aaa
imul
popa
xlat
lahf
lock
flds
pop
and
adc
inc
mov
mov
movsl
out
jo
imul
add
out
pop
sub
iret
andb
adc
daa
mov
movb
push
inc
jle
mov
repz
sbb
cmp
pop
andl
pop
ss
cmp
pop
in
pop
mov
out
cmp
imul
popa
mov
mov
xchg
bound
dec
daa
and
leave
pushf
imul
and
adc
std
add
jno
sar
fldcw
faddp
push
imul
test
dec
imul
lods
pop
cwtl
xchg
push
lods
jns
sub
mov
insl
clc
lret
sub
mov
ss
or
pop
cmp
jno
lock
enter
insl
imul
push
or
inc
js
outsb
cwtl
cmc
xlat
clc
insl
stos
nop
mov
jbe
cmp
das
inc
ret
mov
push
into
andl
cmp
add
inc
xor
imul
sbb
cwtl
in
aam
fildll
pop
sub
imulb
in
fwait
in
fldcw
jge
imul
pop
dec
pop
pusha
stc
lcall
xor
push
jl
adc
pop
cmp
lods
addr16
insl
repz
dec
into
imul
movsb
cmp
imul
mull
push
and
cmc
outsl
fsubrs
push
or
cmp
cmpsl
pop
mov
bound
xor
inc
ficoml
and
call
mov
push
sbb
lock
push
xchg
in
into
ja
inc
imul
scas
movsb
sbbl
roll
mov
adc
xlat
pop
aas
or
movsb
jge
cmp
push
outsl
inc
jne
inc
pop
cltd
push
mov
pop
sub
imulb
out
cli
jmp
or
and
je
ds
subl
jns
jb
add
movsl
insb
stos
xor
subb
mov
sub
sub
enter
movsl
adc
imul
stos
xlat
dec
fnstcw
call
mov
imul
out
sti
js
or
lods
imul
dec
pop
cmc
imul
outsb
adc
jg
out
inc
xlat
popf
jne
dec
inc
sahf
xchg
stc
jo
and
cmp
or
stc
movsl
mov
mov
pop
jmp
pop
cmovo
insl
inc
dec
movsb
hlt
imul
sub
cld
pop
in
inc
aad
pop
push
pop
add
imul
in
shrb
sub
mov
pop
ds
mov
imul
cmp
insb
xchg
pop
push
mov
jb
add
loope
out
or
push
fadds
mov
jnp
outsl
lret
mov
sbb
imul
cld
inc
jo
cmpsb
push
dec
xchg
inc
enter
lret
outsl
xchg
fcompl
mov
pushf
imul
arpl
or
leave
jbe
jecxz
xchg
imul
mov
mov
lret
or
push
jp
xor
popf
cwtl
sub
out
movb
push
imul
in
js
test
mov
scas
lret
jnp
imul
jo
jne
inc
fld
imul
subl
stos
lcall
das
mov
je
pop
push
cmpsb
incl
aad
in
and
std
ss
mov
push
inc
arpl
aas
loop
cmp
pusha
stos
mov
jns
lock
pop
fdivs
mov
shlb
jg
out
hlt
dec
ds
mov
inc
into
xor
lods
andl
imul
int
imul
stos
adcl
mov
push
sbb
stc
adc
push
in
jnp
jb
imul
xchg
mov
add
cmpsl
xchg
push
mov
test
inc
stc
add
mov
insl
add
lds
fsubrp
ret
sub
xchg
imul
daa
push
scas
negb
jg
repnz
arpl
and
leave
das
repz
dec
int3
mov
je
imul
cltd
dec
imul
pop
xor
dec
cmp
outsl
shrb
test
ds
jno
lods
mov
psubusw
mov
fcoml
xor
jecxz
pop
pop
mov
mulb
mov
stc
push
ret
imul
repnz
movsl
inc
fsubrs
add
cmp
out
jb
and
and
sbb
lcall
and
mov
jb
mov
cmp
shrl
mov
outsb
or
sarl
pop
movsl
sub
xchg
cmpsl
stc
clc
jb
mov
test
jg
mov
call
cwtl
imul
out
sbb
repz
cs
add
add
stc
outsl
ljmp
pop
repnz
outsb
add
imul
call
sbb
mov
jae
out
loopne
xor
mov
cli
popa
mov
stc
or
jae
in
imul
pop
pop
shrb
lret
int3
pop
movsb
insb
jo
stos
dec
lods
popa
ss
popa
cmp
aad
stos
les
mov
inc
jbe
or
repz
xor
pop
push
sub
pop
fidivrs
fwait
std
inc
sbb
pop
shrl
gs
push
pop
inc
repnz
mov
mov
push
loope
repnz
cmpsb
push
and
cmp
and
sub
subl
fbstp
lods
rorb
push
iret
js
and
pop
xor
cmp
dec
cs
mov
leave
add
inc
sub
js
out
outsl
addr16
jnp
shrl
mov
mov
mov
mov
xchg
cmc
or
addr16
dec
push
mov
mov
daa
jg
ja
fists
test
lcall
filds
arpl
repnz
cmp
lcall
mov
mov
pop
pushf
rol
cmc
add
hlt
adc
mov
mov
out
fucomip
and
js
lcall
call
out
shl
mov
fldcw
test
adc
mov
cmpsl
dec
js
rcrb
jg
sarl
shlb
push
pop
mov
xor
mov
jge
ljmp
lock
xor
mov
jp
add
push
outsb
sub
mov
fistpl
sbb
dec
addr16
bound
mov
xor
inc
fwait
ja
hlt
lds
inc
call
movsb
inc
mov
mov
fwait
sub
pop
or
fwait
and
shrl
in
xchg
fists
mov
add
out
ja
sahf
in
or
or
jmp
pop
add
out
fisubl
sub
inc
in
arpl
dec
pop
nop
push
cmp
or
xchg
bnd
xor
andl
divb
sbb
pushf
jae
sub
movsl
pop
shrb
inc
out
sti
sub
aam
xchg
sbb
mov
in
cmp
adc
filds
inc
imul
out
push
push
xlat
test
pop
in
sti
jne
mov
dec
cwtl
pop
mov
sbb
pop
ret
dec
xorl
mov
inc
pop
je
mov
sub
jp,pn
scas
add
inc
popa
fldcw
jbe
jnp
mov
fists
inc
sub
fisttpll
cmpb
sub
outsb
fisttps
mov
push
xchg
pusha
mul
cmpsb
into
fucomp
jg
rcll
jo
imul
mov
mov
cmp
mov
in
dec
daa
clc
stos
xchg
pop
lods
ds
fistps
in
lods
xchg
clc
mov
and
dec
jbe
lcall
mov
mov
out
add
jo
out
pushf
fwait
inc
push
mov
jbe
shlb
iret
out
pop
dec
cwtl
idivl
pop
xchg
xlat
fisubrs
rclb
daa
sbb
and
mov
into
hlt
sahf
imul
xor
push
fbstp
jge
pop
xchg
cmpsb
scas
aad
fstp
test
sbb
dec
push
push
xchg
xchg
push
mov
pop
out
mov
jno
mov
std
or
pop
lret
loop
rcrb
aaa
jo
in
push
mov
pop
repnz
and
into
lret
cmpsb
addr16
xor
sub
jecxz
push
ljmp
bound
stos
ja
inc
jl
and
ljmp
out
imul
xor
fistpll
int
int3
inc
cltd
jle
jecxz
or
and
lret
test
out
outsl
aam
fcmovu
push
mov
mov
pop
iret
mov
dec
movsl
sbb
mov
jge
out
fldt
jb
out
pusha
adc
pop
lret
in
mov
push
xchg
xor
repnz
cmpsb
xchg
sti
inc
outsb
mov
add
cmp
push
pushf
push
pop
push
bound
dec
enter
gs
aas
shr
add
jae
pushf
dec
jge
fdivl
js
movsl
fucom
push
fstl
push
pop
add
mov
mov
and
xor
dec
jge
push
adc
test
enter
sbb
sub
lods
cmc
jb
mov
jp
and
mov
rorl
imulb
adc
jge
lds
cltd
push
mov
jo
loopne
fwait
mov
jge
stc
xor
and
or
std
fmuls
jne
shll
fs
fmul
xchg
adc
aaa
xchg
xor
jle
add
fldenv
jle
lock
xchg
inc
adc
pushf
dec
repz
movsb
fsubl
adc
mov
mov
mov
adc
adc
jo
jne
pop
fwait
lds
cli
jmp
test
and
push
jnp
shlb
mov
push
dec
jmp
lret
pop
jne
stc
add
sbb
test
jns,pn
js
jp
das
xlat
mov
addr16
cmp
jo
sub
imul
ljmp
out
popf
icebp
iret
mov
adc
mov
stc
adc
push
adc
in
jns
repnz
stos
cltd
and
lds
add
in
test
andl
sub
fucomip
mov
faddp
fst
push
jmp
js
insl
push
and
repnz
xchg
mov
jg
sarl
loope
es
pushl
popa
shr
and
add
mov
mov
and
andb
or
movl
test
xchg
dec
push
pushf
hlt
push
in
xor
jo
popa
push
out
mov
fcmovnb
jns
fidivrs
jno
lds
es
test
popa
test
test
and
or
push
and
repnz
out
insl
sub
cmp
mov
xchg
cmpsl
mov
xchg
jo
cmp
test
jmp
adc
arpl
in
shlb
mov
movb
inc
push
out
les
xor
call
mov
add
in
cmpsb
pop
jno
sbb
cltd
movsl
push
mov
cmp
dec
sub
out
stos
test
out
dec
xchg
test
pop
inc
divl
out
cli
sub
repz
sub
movsb
lcall
lahf
sbbl
test
and
ret
sbb
push
xchg
mov
sub
pusha
sub
not
fcompl
aas
icebp
gs
mov
lahf
out
fsts
scas
shlb
cmc
dec
imul
mov
pop
pop
aas
repnz
lea
mov
mov
fs
inc
sub
popf
jbe
orl
pop
push
das
add
jo
out
fidivs
push
jo
into
inc
imul
dec
fcmovnbe
clc
insl
shr
popa
ja
mov
xchg
test
aas
mov
jno
fnstcw
mov
dec
es
out
lock
out
ficoml
fildll
push
push
jg
push
cmp
jo
scas
pop
push
xchg
in
adc
sbb
outsl
mov
or
jmp
popa
fisttps
dec
jle
inc
adcl
das
lods
mov
mov
xchg
mov
sub
mov
mov
filds
mov
xor
in
out
jp
jb
pop
je
or
and
adc
and
mov
and
mov
movsl
lea
xchg
mov
sub
jae
dec
les
push
jl
in
mov
jmp
or
pop
and
xor
jno
mov
popa
ror
inc
cmp
leave
mov
pop
mov
cmp
and
add
sbb
xor
and
lea
mov
fildll
in
inc
mov
pushf
pop
ljmp
cmp
out
inc
mov
aaa
repnz
push
pop
jnp
and
cmp
in
mov
les
movsl
out
mov
aad
cmp
bnd
xor
sub
xchg
dec
fwait
adc
loope
sbb
push
insb
rclb
fwait
xor
fbstp
daa
dec
aad
stos
or
mov
movsb
dec
inc
pop
xor
or
push
or
imul
add
ror
sahf
testl
imul
mov
inc
pop
shrb
lea
adc
lock
push
fistps
pop
mov
rcrl
stos
add
js
push
mov
shl
sub
insl
push
mov
pop
cmp
mov
sbb
std
dec
push
dec
mov
bound
dec
sbb
out
dec
add
sub
lock
fldl
sub
jl
or
lcall
out
adc
frstor
or
push
push
dec
sub
ret
sti
movsb
ret
sub
pop
ljmp
mov
mov
into
sbb
ret
test
sub
fisubs
out
xchg
dec
inc
push
pop
ljmp
and
mov
sarb
jmp
pop
outsb
mov
mov
ret
push
icebp
jecxz
mov
rcll
and
push
shrl
adc
dec
pop
fwait
adc
or
xchg
popf
or
lock
daa
add
out
jp
jae
push
inc
lret
in
scas
lock
test
ret
xchg
in
mov
mov
sub
mov
neg
pushf
sbb
in
pusha
or
push
adc
mov
dec
out
and
mov
or
es
mov
push
jge
sbb
fdivl
jnp
ficompl
push
add
jnp
jne
xchg
xor
enter
fidivs
mov
mov
nop
fldenv
inc
mov
xlat
mov
mov
sahf
lods
gs
clc
fnstenv
dec
adc
pop
jmp
clc
cmc
repnz
jmp
lock
rcrb
rcl
ret
outsl
ffreep
mov
jo
inc
hlt
fiadds
addr16
push
jo
out
adc
xlat
fistps
enter
lret
icebp
cmpsb
test
and
dec
filds
loope
add
sub
jle
enter
pusha
sub
inc
out
add
repnz
je
pop
xchg
add
scas
dec
sub
aaa
inc
sub
inc
mov
int
cmp
jo
repz
push
movsb
insl
inc
ss
push
adc
push
aad
stos
out
dec
lods
pushf
xchg
icebp
and
and
mov
or
mov
push
adc
jp
jle
mov
push
stos
jl
jecxz
xchg
addr16
fisubrs
mov
or
lock
cli
adc
lea
repnz
rolb
jno
jmp
gs
and
lret
add
pop
add
in
in
shll
pop
cmpsb
xlat
fisttpl
stos
inc
sub
std
hlt
gs
lock
sbb
shl
stos
add
loope
mov
es
rcll
out
scas
mov
sbb
push
xor
inc
test
mov
stos
or
pop
inc
lcall
jecxz
push
decb
scas
pop
mov
adcb
mov
cmp
pop
scas
xor
enter
push
dec
cmp
fcompl
lcall
xor
add
mov
lahf
or
xchg
lods
imul
mov
mov
dec
cs
test
jle
jle
test
das
and
inc
dec
add
and
pushf
shld
xor
and
icebp
jle
fwait
cmpsb
push
out
flds
leave
data16
lock
dec
fisubl
mov
lret
inc
xor
imul
adc
movsb
fldenv
fdivp
xchg
xchg
aaa
mov
mov
dec
xor
repz
xchg
xchg
andl
cmpsl
mov
negl
sar
sub
xchg
mov
dec
jae
cli
mov
stos
inc
dec
push
insl
test
add
fldcw
jmp
jge
notl
pop
xchg
testl
push
aad
aam
loop
sarb
cmp
or
cltd
shlb
and
in
in
aam
push
pusha
out
mov
mov
mov
pop
mov
sti
call
cs
jp
rcl
mov
pusha
jp
inc
and
pop
hlt
fyl2xp1
sub
in
repnz
sbb
lock
int3
jge
pop
pop
dec
jmp
inc
mov
push
data16
xor
scas
mov
ret
out
mov
orl
mov
push
cmp
out
testl
push
inc
imul
pop
fld
mov
or
popf
nop
push
dec
inc
fidivl
sbb
out
sbb
inc
pop
loopne
inc
dec
movsl
scas
lret
jl
addb
jae
fildl
dec
out
insb
mov
cmp
pop
repz
repnz
filds
hlt
xorb
shlb
sbb
xlat
movsb
rol
and
lods
icebp
xchg
je
scas
arpl
mov
push
addr16
sub
leave
out
fsubrl
jne
jae
or
std
mov
test
inc
vpandn
xor
adc
jo
ret
and
js
pop
inc
cwtl
out
scas
or
push
pop
and
loope
out
sub
addr16
addl
mov
out
call
aad
cmp
adc
notl
mov
sub
repz
lock
cmp
icebp
in
jecxz
inc
add
fisubrs
or
repnz
nop
imul
insl
imull
fdivl
sub
imul
sbb
lock
cli
orl
xorb
test
imul
aam
shrl
jl
inc
add
mov
arpl
jle
pop
xorb
imul
or
dec
sub
imul
xchg
push
xchg
addr16
inc
adc
rcrl
lcall
std
mov
or
js
mov
jae
imul
mov
push
push
pop
sub
cs
imul
lcall
int3
fwait
lods
test
insb
andl
ret
stc
push
popa
mov
mov
sahf
imul
sbb
stc
std
xchg
ret
insl
adc
in
pop
pop
add
mov
sti
cmc
in
xchg
jnp
push
adc
sub
sbb
das
shrw
sarl
sub
or
push
cmp
fnsave
pop
aad
and
xor
out
pop
or
inc
adc
pop
sbb
movsl
dec
mov
fbld
add
mov
fwait
jmp
out
mov
xchg
push
popa
or
or
and
test
and
ret
jno
sarl
adc
cld
fidivrs
ljmp
mov
insl
aas
push
ja
shrb
fldl
lcall
hlt
std
push
jecxz
hlt
xor
or
out
aas
stos
repz
cmp
in
sti
or
push
loope
jns
jnp
fbld
add
dec
icebp
enter
inc
sbb
dec
mov
in
cmpsl
fucomp
xor
mov
dec
mov
sub
lret
insb
sub
loop
mov
mov
adc
pop
mov
hlt
mov
cs
inc
and
insb
push
pop
out
jp
inc
test
mov
fdivl
daa
icebp
test
sub
faddp
stos
cld
daa
mov
fs
sbb
add
out
xor
xchg
adc
mov
and
movsb
or
sahf
jae
incl
add
xor
out
xor
inc
jp
inc
lds
and
icebp
lret
insl
in
les
addr16
jne
pop
and
test
cld
mov
jae
adc
insb
stos
push
les
sbb
imul
xchg
add
outsl
test
xchg
push
lods
fcomip
in
stos
stos
mov
lock
insl
cmp
adc
jnp
pop
mov
loopne
inc
fwait
push
and
in
mov
out
out
cltd
sbb
fcompl
movsl
jno
xchg
clc
push
add
xchg
je
pop
fldl
shll
mov
mov
xchg
lods
lcall
mov
decb
xor
or
mov
cmp
mov
int
clc
inc
add
js
or
loopne
lahf
push
sub
imul
lea
fisttpl
test
popf
outsl
sahf
mov
rol
dec
gs
insb
sub
pop
sahf
cwtl
loope
pop
lock
leave
kaddb
jmp
scas
push
mov
mov
sti
mov
pop
push
test
addr16
pushf
push
push
addr16
stos
icebp
aam
sbb
gs
xchg
fisttpl
push
and
push
fisubrl
addr16
lock
fcomip
cmpsl
or
shll
fists
data16
mov
mov
mov
cmpsb
push
xor
nop
fs
dec
gs
out
out
sbb
dec
xor
gs
cltd
ja
dec
out
stos
ror
imul
jge,pt
imul
in
popa
out
sbb
jo
push
xor
pop
or
jne
lds
xchg
lock
imul
in
mov
out
fldt
lods
loope
mov
sub
cli
cmp
pop
mov
and
scas
push
mov
ffreep
fcmovnbe
mov
jg
rclb
cmpsb
jns
iret
jns
push
jne
test
pinsrw
push
or
cmc
ds
aad
orl
inc
push
sbb
adc
jo
pop
adc
movsl
mov
sub
pop
andb
push
pushf
fwait
cmp
dec
sub
pop
xchg
ds
cmc
sbb
neg
cmp
dec
ficoms
xchg
lret
inc
mov
out
andl
mov
scas
mov
lret
jne
and
and
into
xchg
fists
inc
xor
mov
pop
mov
stos
jecxz
jno
mov
and
dec
stos
sbb
mov
mov
xchg
dec
fdivs
hlt
rclb
add
mov
mov
jns
rcrb
jbe
loopne
and
loop
std
repnz
sub
inc
xchg
jmp
cmpsb
pop
sbb
add
jnp
inc
mov
stos
frstor
popf
mov
add
out
cli
shrl
pop
sbb
filds
mov
les
sub
mov
mov
aam
xchg
aaa
pop
mov
mov
jp
or
inc
sbb
xor
jb
push
out
repnz
ja
inc
xorl
les
scas
push
dec
push
iret
push
or
sbb
nop
sbb
lret
inc
add
sub
jp
nop
addr16
shl
lock
rcr
es
jp
mov
or
cmpb
dec
cmpl
push
or
sarb
out
jbe
xchg
and
shlb
sub
inc
jle
jne
add
or
ret
fildll
loope
aam
mov
fwait
clc
mov
gs
out
in
shl
lock
subl
out
stos
add
popa
mov
mov
les
cmpsb
ret
sbb
push
out
jp
push
out
inc
dec
scas
sbb
mov
loope
jp
inc
cmp
out
ds
xor
sahf
xor
imul
adc
xchg
mov
out
daa
xchg
add
push
outsl
clc
in
inc
sub
sbb
inc
jge
test
mov
outsb
mov
roll
inc
fs
ja
inc
inc
pop
jle
xchg
pop
mov
sub
xorl
mov
add
gs
pop
push
test
jo
aam
dec
sub
out
cwtl
fcomps
lods
sbbl
xchg
sti
and
je
out
xor
sub
insb
out
loope
push
cltd
sti
into
test
adc
and
out
sbb
out
mov
clc
sbb
adc
push
rcl
cmc
sti
in
int3
js
arpl
ljmp
adc
leave
xor
addr16
out
xchg
mov
sub
or
jb
xor
addr16
sub
mov
shr
lcall
call
mov
jb
xchg
cltd
js
icebp
jle
es
imul
add
dec
shr
ret
xchg
cmp
xchg
adc
sub
ficoml
imul
loop
mov
jle
cmp
out
push
cmpb
dec
push
pop
push
ret
xor
cwtl
inc
and
out
inc
cs
cmp
mov
loopw
shrb
call
roll
ret
or
into
xor
cmp
fwait
xchg
push
or
jle
xor
inc
inc
adc
dec
pop
cmp
sbb
cmp
ja
inc
mov
sahf
aad
mov
out
jb
add
gs
clc
sbb
pop
aaa
push
jo
jbe
push
jnp
ret
mov
push
out
adc
repnz
xorb
push
or
sbb
push
pop
loop
sbb
sub
les
int3
jl
sbb
dec
jnp
enter
jg
or
mov
imul
out
jp
hlt
push
mov
mov
cwtl
psraw
sub
in
cmp
inc
inc
out
add
ss
mov
or
fnstcw
dec
sub
or
jae
sti
aaa
mov
adc
xor
movsl
cli
or
jne
fsubs
and
lahf
sbb
mov
mov
dec
adc
jns
adc
stos
and
icebp
sbb
scas
xor
mov
inc
dec
push
int3
add
jg
mov
push
pop
dec
add
lods
out
mov
loop
jmp
push
xchg
adc
push
dec
fisttps
stos
icebp
adc
xor
aam
andl
std
add
pushf
pop
ret
mov
cmp
jne
outsl
jp
imul
mov
mov
stos
xchg
repnz
ficoms
insl
and
aam
icebp
mov
fildll
sub
pop
xchg
cmp
popa
loop
test
outsl
push
sbb
test
inc
fstl
sub
dec
push
push
adc
jmp
out
mov
loop
dec
push
push
dec
pop
inc
sub
mov
int
out
pop
in
push
mov
adc
lods
ja
mov
pop
insl
fwait
sub
or
and
inc
mov
movsl
loop
fwait
mov
mov
push
ja
pop
xchg
push
clc
push
mov
fimuls
cmp
call
pop
stos
cld
sub
out
fsubrl
mov
sti
mov
inc
pop
ss
sahf
sbb
ja,pt
jo
sbb
and
in
or
ret
push
nop
jmp
jge
adc
inc
fcomps
xchg
dec
comiss
push
mov
bnd
mov
and
shrb
sbb
dec
pop
cwtl
inc
addr16
test
or
fldcw
sbb
jmp
lods
sbb
addr16
push
cli
mov
lcall
sbb
mov
add
imul
leave
xor
jae
fwait
test
and
scas
sbb
inc
aas
in
fwait
aad
inc
inc
pushf
add
test
not
and
xor
enter
or
and
int
dec
and
mov
fisubrs
aad
sbb
clc
mov
push
jb
mov
cmc
ljmp
faddl
xor
mov
out
inc
push
jle
mov
dec
mov
repz
mov
cmp
stos
sbb
lahf
adc
inc
lods
mov
nop
xchg
lods
es
mov
js
jo
jo
inc
dec
gs
imul
insl
mov
adc
out
mov
sub
flds
and
fwait
popf
decl
inc
filds
out
xchg
adc
fsubrl
xchg
xlat
cmc
arpl
cmpb
adc
adc
push
sti
push
push
int3
push
insl
mov
pop
mov
adc
or
sbb
inc
flds
sahf
push
mov
dec
mov
push
int3
incl
fsubp
sarb
stos
inc
call
test
mov
lock
cmpsb
xchg
xor
ljmp
cmp
mov
or
xor
pop
jge
addr16
stos
sbb
dec
dec
xor
ja
add
jnp
cmp
sahf
add
or
mov
fdiv
mov
mov
orb
mov
adc
and
scas
int3
xor
mov
jno
inc
rorb
in
xchg
insl
stos
mov
pop
and
outsl
insl
out
xor
mov
rcl
ret
jmp
pushf
inc
cli
pop
mov
sbb
mov
mov
arpl
out
hlt
push
inc
xchg
std
in
jp
jne
xor
mov
ljmp
xchg
sbb
push
sahf
mov
mov
jp
push
add
sub
addr16
enter
insb
add
jp
arpl
ss
in
push
pop
sub
mov
cmp
dec
pop
add
sub
mov
outsb
sub
mov
push
inc
mov
bound
mov
scas
inc
lret
pop
jg
sub
mov
push
popa
out
jne
push
fs
adc
lods
outsb
fstps
pushw
push
xchg
push
lds
popa
add
mov
in
xchg
xor
test
lods
jmp
sub
jl
cmp
adc
bound
sahf
ficompl
ja
adc
fdivp
fs
out
cmc
test
cmp
cmpl
pop
addr16
sbbl
icebp
pop
jl
mov
sub
imul
cwtl
adc
dec
mov
push
push
sahf
mov
addr16
push
out
cmpsl
adc
sbb
scas
loope
shll
mov
pop
push
ret
lret
popf
mov
lahf
inc
sub
popf
arpl
imul
mov
add
jge
mov
imulb
mov
iret
xchg
push
push
pop
jmp
fldl
jp
int3
hlt
jecxz
push
xor
in
lea
jp
mov
out
mulb
push
data16
std
ret
cli
adcl
xchg
xchg
or
adc
mov
ljmp
int
push
cmp
fsubr
or
add
or
popf
loopne
mov
in
aas
push
add
stc
imul
shrb
repz
xlat
sti
mov
push
addr16
jge
mov
mov
xchg
xor
dec
xchg
push
mov
out
fdivrs
sub
sub
ja
cmp
or
cmp
shll
dec
dec
mov
adc
sarl
sub
icebp
pop
push
mov
and
mov
jmp
push
ficoml
pop
ja
les
sub
flds
out
les
sub
ja
jecxz
adc
pusha
mov
mov
scas
mov
inc
gs
dec
xor
repz
lcall
adc
push
sbbl
lret
xor
dec
mov
ljmp
rcrb
mov
push
mov
scas
mov
sbbl
sbb
arpl
dec
and
test
inc
xchg
icebp
adc
out
imulb
ss
icebp
sub
inc
cld
fcomip
movsl
in
ja
and
out
or
cmpl
jo
inc
mov
xchg
in
and
lret
xchg
daa
push
xchg
js
sbb
in
jmp
adcl
out
in
sub
leave
add
mov
add
mov
jmp
loope
sbb
and
sahf
movsb
jno
adc
fidivrl
inc
adc
pop
jo
cmp
arpl
adc
aam
push
mov
or
push
nop
push
leave
lods
xlat
jb
mov
sub
and
stos
mov
fidivrs
test
movsb
or
mov
in
push
cmp
repz
jge
push
push
xchg
jno
je
push
adc
lahf
xchg
sbb
mov
outsb
push
jg
xchg
daa
mov
aaa
adc
cwtl
fistl
fucomp
jno
ret
sbb
sar
add
sub
out
mov
je
mov
cmp
cs
sbb
ret
sub
jns
pop
iret
adc
cmpsb
sbb
rcll
jne
cmp
es
add
ret
pop
jmp
inc
in
stos
bound
fildl
inc
dec
ret
arpl
add
pop
mov
sti
xchg
xor
out
js
mov
mov
movsl
adc
mov
pop
mov
jae
add
mov
icebp
mov
imul
adc
push
mov
mov
adc
jnp
sbbl
dec
rcrb
outsb
fmulp
and
mov
push
push
insl
dec
mov
pop
loope
test
sub
stos
out
mov
sub
mov
fdivl
mov
test
push
sbb
sub
add
icebp
cwtl
mov
xchg
sub
push
dec
out
inc
into
fld
int3
mov
insb
adc
dec
jle
pop
ret
adc
push
xchg
jp
es
ds
loope
js
pushf
in
mov
lods
xchg
call
out
inc
std
in
mov
test
or
imul
stc
addl
and
nop
mov
dec
adc
sub
inc
or
mov
inc
push
push
jp
and
and
aaa
adc
xor
inc
lahf
jne
clc
dec
les
imul
inc
or
push
cmpb
lcall
xor
shlb
aas
sbbl
ss
sbb
inc
jns
fsubrs
aad
pop
cmp
loope
add
idivl
ja
jecxz
jmp
inc
dec
out
xchg
pop
das
add
dec
leave
sub
push
daa
mov
push
fucomi
sahf
cmc
or
fldcw
nop
mov
subb
dec
adc
lods
in
call
sub
lret
inc
pop
shrl
std
cmp
loope
push
imul
inc
movsb
adc
int3
add
fwait
hlt
or
mov
xor
icebp
push
out
add
xchg
jp
fsts
test
cld
or
clc
xor
out
out
cmc
push
out
ljmp
gs
cmp
out
and
je
jle
pop
sbb
push
test
xor
lahf
sub
push
out
testl
dec
xor
sbb
pop
fneni(8087
outsb
sub
cmp
lods
fldt
movsl
loope
test
inc
test
or
and
add
out
xchg
out
sub
mov
popa
push
push
or
in
out
imul
aam
je
push
mov
out
or
xchg
sub
mov
imul
xor
out
fists
push
dec
out
test
xchg
loope
pop
dec
jne
push
or
mov
repz
dec
fs
inc
adc
fildl
xor
add
push
imul
js
movsl
std
outsb
push
imul
movsl
or
mov
out
insl
mov
out
daa
jecxz
mov
test
bswap
xor
push
popa
mov
sub
gs
push
loope
and
lret
adc
int
addb
adc
push
cwtl
add
in
shll
ja
push
dec
pop
push
adc
les
out
cmpsb
mov
xchg
ja
inc
clc
add
push
or
inc
out
stos
loop
jmp
out
jp
ret
ret
dec
fildl
movsb
mov
daa
xor
rorl
test
into
sub
out
mov
daa
push
sub
out
clc
pop
mov
shl
imul
fsubs
mov
ret
jmp
dec
adc
pop
int3
fidivl
jb
jmp
pop
add
enter
icebp
and
jno
out
aad
cmp
lret
shrb
pop
out
into
sub
movsl
mov
scas
sub
js
out
stos
cwtl
sub
addr16
out
adc
pop
inc
mov
push
arpl
pusha
xchg
add
repnz
jnp
lret
js
push
xchg
pop
sti
sub
test
fndisi(8087
inc
outsl
cmp
sbb
or
loopne
sbb
test
mov
or
out
jno
and
shll
and
xor
jae
mov
popa
and
popa
shll
ret
cmp
pop
hlt
stos
jl
gs
push
push
lods
js
add
jmp
dec
mov
jmp
imul
mov
xchg
sbb
push
stos
decb
jb
insl
out
jae
dec
or
lret
pushf
mov
inc
xchg
or
in
stc
loope
mov
push
adc
xor
xor
or
sub
mov
inc
mulb
pop
mov
mov
jmp
aad
jge
xchg
stos
sbb
adc
mov
and
dec
add
out
pop
cmp
add
push
sbb
xchg
int3
sub
push
out
xchg
sbb
dec
jecxz
xchg
and
and
aas
stos
frstor
cmpsl
flds
leave
and
movsl
sub
add
mov
dec
cmp
fisubrs
mov
cmp
jo
out
loop
mov
in
add
jecxz
mov
adc
sbb
out
int
jg
sub
push
aam
gs
or
sub
repz
das
inc
mov
push
or
xor
mov
sub
es
fwait
hlt
xor
inc
adc
dec
add
pop
cmpb
in
xor
cmpsl
dec
shl
das
ret
icebp
add
and
xchg
mov
xor
mov
ret
test
ds
out
pop
dec
rolb
sub
daa
sbb
int
jbe
dec
testl
test
and
push
mov
ret
push
roll
movsb
or
dec
xchg
outsb
add
mov
jle
leave
fwait
icebp
ret
fxtract
out
cmp
bound
aas
and
sbb
pandn
cld
cs
dec
sti
cmp
mov
cwtl
sub
jl
sub
out
lea
rolb
cmp
and
mov
and
daa
sub
dec
repz
lds
scas
inc
mov
scas
dec
ffreep
xor
stos
loopne
ja
out
xchg
lods
cmpsl
cltd
cs
out
add
dec
or
flds
push
fsubrl
adc
push
fcmovnb
pop
lret
pushf
int3
or
ret
inc
xchg
xchg
loopne
jp
mov
sahf
je
mov
dec
push
fisubrl
pushf
xchg
add
scas
cs
sub
mov
iret
xor
jns
lock
xorl
pop
mov
lock
fisttpll
dec
iret
jle
jge
xor
imul
cmc
in
mov
or
fists
mov
ja
push
mov
aaa
dec
test
jnp
dec
neg
mov
sbb
xor
out
jo
rcll
push
pop
inc
fbld
sub
sbb
add
out
mov
leave
add
js
pop
jecxz
hlt
imul
out
inc
sti
outsl
and
mov
dec
jmp
add
cmp
cmc
add
push
cld
jg
shl
and
or
sbb
rol
in
sbb
test
hlt
sub
push
cmpl
in
push
aam
insb
add
aaa
sbb
push
push
or
shrl
fwait
scas
dec
icebp
push
sub
pop
or
dec
jle
sarl
dec
mov
or
outsl
shlb
jge
mov
psllw
mov
popf
xchg
pusha
sti
xor
add
dec
scas
pop
aam
mov
mov
cli
mov
mov
filds
aad
mov
mov
xor
in
sbb
mov
cwtl
out
hlt
hlt
xchg
mov
shlb
or
imul
add
clc
fwait
aam
popa
out
jb
inc
mov
pop
push
and
mov
cli
ficomps
mov
xchg
je
adc
jo
dec
out
bound
jbe
fisubl
ljmp
stos
jns
ret
test
inc
shll
jmp
out
mov
dec
pushf
enter
shlb
outsl
scas
lahf
ror
movsb
jmp
fwait
rcll
loopne
hlt
fwait
adc
dec
or
jo
stos
icebp
std
sbb
cwtl
push
test
mov
pop
xor
sbb
or
fcomi
hlt
mov
lea
or
jmp
sbb
out
and
dec
das
jo
sbb
dec
add
jbe
adc
ffreep
sbb
faddl
mov
pushf
cmpsl
or
scas
sti
pop
fstl
sbb
push
inc
push
insb
in
mov
imul
fdivrl
fbld
sub
data16
out
xchg
and
mov
pop
push
ret
mov
jb
fld
jo
pop
out
push
pop
cmc
cld
cmp
movsl
mov
fnstcw
out
fidivrs
push
adc
dec
call
push
or
sub
fwait
jecxz
and
test
mov
sti
inc
fs
mov
sbb
js
into
out
sbb
loop
sti
mov
fildl
sbb
in
std
xchg
add
sub
mov
sub
sbbl
imul
push
mov
sub
mov
pop
or
hlt
push
mov
in
ds
lret
xor
jnp
icebp
aad
ljmp
arpl
rolb
mov
add
jmp
and
or
pop
mov
insl
into
add
and
jnp
or
sar
in
daa
cmp
stos
sbb
neg
xchg
push
mov
outsl
xor
xor
loope
sub
repz
je
dec
out
cld
xor
mov
jns
icebp
cmp
outsl
adc
sbb
inc
out
mov
or
movsb
jbe
loop
loope
lahf
sahf
lock
fists
push
cmc
pop
mov
adc
and
call
fists
mov
cmp
shll
andl
popa
fcoml
mov
js
mov
pushf
daa
jno
lret
and
inc
add
fwait
icebp
pop
jb
stos
mov
push
fistps
mov
leave
and
out
std
data16
sar
popa
and
fiadds
push
into
mov
rcrl
gs
adc
es
mov
fdivs
lods
xorl
pop
movsb
xor
adc
sub
mov
insl
inc
fistpll
push
push
repnz
mov
xor
insl
lret
fwait
lods
sti
cli
outsb
sbb
push
sbb
shll
and
iret
icebp
stos
out
dec
fwait
add
jp
imul
mov
mov
inc
xchg
push
dec
push
flds
sub
rorb
dec
push
hlt
fimuls
xor
and
ljmp
push
sub
in
xor
jle
sbb
test
fdivr
mov
xchg
fs
loope
mov
icebp
and
jne
sub
mov
cmpsl
and
lock
rclb
xchg
dec
mov
fs
sahf
sub
aaa
adc
adc
in
push
inc
loope
and
xchg
js
aas
outsl
or
ja
inc
jl
push
dec
fs
fbstp
jb
mov
out
cmp
inc
jne
mov
pop
call
out
test
test
pop
out
test
jmp
pop
filds
xchg
icebp
inc
jmp
mov
into
fwait
fs
arpl
out
pop
xor
pushl
xchg
inc
jb
sarb
xchg
loop
fsts
lcall
adc
js
cmp
mov
and
rclb
js
pop
cmp
in
loopw
fucomip
mov
lret
imul
in
push
fwait
pop
xchg
sbb
out
shl
push
dec
push
hlt
lock
or
push
xor
pop
out
add
ret
out
jns
xorb
ja
shl
fdivrl
mov
cld
hlt
pop
xor
lret
mov
push
sub
test
andb
jno
cmp
out
xchg
flds
mov
pop
lds
movsb
jb
sbb
mov
sub
xchg
out
hlt
out
call
aad
movsl
or
pop
out
mov
dec
pop
mov
insb
scas
sbb
sbb
shl
jmp
les
push
rcll
adc
push
adc
mov
movsl
cli
mov
pmuludq
imul
lds
imul
jno
mov
sbb
gs
push
dec
and
inc
xchg
mov
fstl
mov
inc
fisubl
cmpsb
mov
sbb
sahf
out
mov
dec
rorb
mov
dec
scas
push
out
dec
push
cmp
sub
andb
mov
or
es
and
cld
cmpsb
pop
iret
mov
in
shll
push
movsb
subb
inc
inc
lds
in
xchg
mov
pop
fsubs
js
mov
in
loopne
mov
clc
movsl
out
fisubs
pop
pop
and
sub
push
xchg
mov
pop
cmp
push
insl
mov
xchg
xor
movsb
xchg
in
mov
dec
or
jnp
sub
gs
push
sbb
mov
test
in
shl
push
add
dec
test
mov
jge
dec
cmp
fistps
iret
add
dec
jae
inc
sbb
inc
cmp
mov
xchg
aam
repz
push
push
cmpsl
sbb
pusha
mov
sbb
iret
lret
mov
popf
and
ds
fildll
cmpsb
cmp
adc
std
jno
out
and
push
je
cli
xchg
push
scas
pop
xor
into
mov
inc
push
out
scas
arpl
or
fildll
and
mov
dec
repnz
gs
add
data16
sbb
jmp
loope
jb
sahf
shr
and
dec
addr16
add
int
hlt
shlb
push
sub
xchg
iret
or
popa
dec
loopne
inc
push
sti
out
push
jg
dec
aad
cmpsb
in
or
mov
into
insb
mov
mov
jp
faddl
adc
stos
mov
lods
xor
jp
notb
shlb
test
jp
jae
sub
insl
mov
out
fidivl
ds
or
mov
stc
xchg
fldenv
jns
xor
and
mov
repz
addr16
cmp
icebp
sbb
and
and
mov
lret
mov
inc
inc
inc
jo
jp
dec
and
pusha
pop
mull
js
and
add
fs
out
call
jp
lds
ret
push
inc
push
cwtl
and
pop
cmp
int
out
flds
or
test
mulb
mov
fbstp
push
test
dec
xor
inc
fcmovbe
mov
add
test
imul
xchg
imul
add
iret
leave
cmp
mov
sahf
sahf
xor
sbb
add
pop
xlat
idivl
andb
add
ds
and
out
arpl
jp
fxch
jge
pop
cmp
es
test
divl
fnstenv
mov
push
fidivs
lds
push
adc
xchg
test
xor
mov
mov
int3
iret
lock
call
in
cmp
sub
mov
inc
test
lods
sbb
pushf
adc
addr16
xor
shrb
mov
cmc
jmp
ja
push
or
aad
cmc
popf
cmp
subb
test
rclb
jge
out
adc
f2xm1
adc
mov
pop
fdivs
cmp
mov
loop
and
inc
lds
cs
push
dec
mov
imul
push
cwtl
xor
pop
cld
filds
sbb
push
out
push
dec
scas
lahf
sub
shl
dec
filds
xchg
jg
add
ja
mov
arpl
adc
lret
dec
hlt
cmpsl
jp
sti
lds
rolb
daa
loopne
out
in
imul
jmp
cmpsb
out
dec
sub
lods
push
mov
xchg
rclb
sbb
push
dec
push
or
ljmp
push
aas
mov
cs
xchg
pop
add
or
dec
mov
and
fistl
add
push
js
sub
push
cmp
rcll
pop
lds
push
sub
adc
jmp
pusha
pop
jbe
mov
std
repnz
std
jmp
or
insl
test
xor
push
jl
jg
jg
insb
cmp
adc
sub
iret
rcrl
xor
and
fldl
stos
adc
add
adc
pusha
hlt
xorl
sub
jmp
adc
xorb
iret
adc
fcmovne
pop
dec
out
jle
sub
dec
push
cmp
mov
in
mov
sub
leave
jecxz
ss
aad
xorl
imul
sbb
faddl
fwait
in
jb
loop
dec
fsubrl
shrl
xor
sbb
and
js
mov
out
std
dec
jmp
xor
pusha
jle
xchg
loope
push
stos
leave
add
push
sbb
ret
sub
outsb
sub
ja
arpl
pop
cmp
roll
fs
xor
pop
rorl
xor
fnstcw
sti
repz
sub
dec
inc
popf
shrb
pop
ja
lock
lds
lods
fnstenv
jo
fdivs
fs
cmp
in
fstl
fstps
icebp
das
loope
push
and
rcrl
pop
jo
lret
mov
pop
fucomip
xor
call
xchg
lds
xor
filds
mov
xlat
rol
mov
lods
shl
add
js
xor
fwait
test
packsswb
dec
shrl
add
filds
and
inc
add
test
fs
ljmp
lea
int
push
add
or
addr16
aas
mov
cmc
sub
push
pushf
dec
sti
fstl
push
or
mov
sbb
movsb
into
dec
cltd
cmp
jno
push
push
jne
sarb
mov
cmp
push
inc
pop
sbb
and
mov
inc
cmp
cmp
mov
ficomps
push
clc
out
dec
cltd
xchg
cmp
push
in
xor
insl
inc
lret
rcr
sarl
push
sub
sub
inc
jo
ds
js
das
xor
les
dec
mov
in
lock
je,pt
loope
out
xchg
scas
or
push
push
je
mov
add
adc
repnz
mov
mov
movsb
dec
xchg
xor
in
jge
mov
rclb
or
inc
mov
shl
mov
sbb
ljmp
add
xchg
mov
cmpsl
and
add
xchg
jns
sbb
in
shlb
lock
pop
mov
push
jae
push
cmpsl
fwait
call
ds
out
movsb
aam
push
xchg
pop
cltd
iret
jo
loope
jo
push
loope
and
mov
mov
mov
adc
test
pop
outsb
stc
xor
mov
jg
jg
mov
pop
ss
inc
push
mov
adc
mov
inc
xchg
push
movsl
out
or
pop
dec
inc
mov
ret
gs
inc
or
shrd
ja
outsb
int3
push
jmp
cld
test
mov
fistpl
movsl
lcall
and
or
je
fwait
aam
jo
adc
out
test
xchg
sub
xor
ret
push
inc
xchg
movsb
nop
addr16
pop
cmp
push
add
sub
sbb
sbb
inc
icebp
push
fdivrl
mov
cmp
mov
hlt
loopne
repz
sar
imul
dec
cmpsl
fdivp
push
fistpll
mov
cmp
pop
je
pop
inc
mov
dec
mov
mov
in
pop
push
xorb
mov
or
scas
fildl
sub
in
aad
aam
sbb
jge
push
dec
jmp
sarl
xchg
fdivrp
bound
icebp
pop
cmpsb
jg
inc
fwait
push
cmp
add
sub
fildl
jp
ds
inc
dec
or
push
and
xor
and
femms
insb
sub
xor
push
xchg
dec
push
sub
mov
push
mov
sub
inc
sbb
int
sbb
in
sbb
inc
in
lret
fwait
or
xor
mov
ret
imul
push
test
js
sbb
xchg
gs
push
cmp
and
sub
js
add
andb
call
push
insb
rorl
pop
neg
push
fbstp
cmp
jmp
out
loop
or
mov
sub
or
xchg
adc
push
pushf
enter
andb
push
push
cmp
scas
in
mov
out
andb
sbb
sub
xchg
jb
loope
test
filds
push
sub
dec
push
inc
push
sbb
loope
fcompp
dec
ja
inc
jnp
pop
dec
inc
outsb
cmp
sbb
and
scas
nop
call
and
outsb
lcall
decb
gs
xor
push
hlt
push
bound
jp
hlt
pop
movsl
xchg
adc
clc
loop
sti
or
data16
sar
sti
out
push
in
jbe
and
sub
dec
ret
lahf
jns
subb
inc
jecxz
mov
in
out
repnz
jle
dec
loope
xchg
jae
repnz
lds
dec
sub
cmpsb
pop
xchg
push
xchg
faddp
jp
fnclex
jae
sbb
fwait
sub
and
clc
icebp
int3
inc
aad
leave
sbb
out
xchg
sbb
bound
sbb
xor
fiadds
mov
or
call
push
xchg
repz
pop
ffree
fldcw
ret
call
lock
pop
or
xor
cmpsb
pop
xlat
ror
ds
in
fstpl
pop
mov
sbb
jle
mov
ljmp
fnstenv
sub
fnstenv
add
push
loop
mov
jge
inc
outsl
mov
mov
xor
je
xor
pop
data16
repz
lahf
ljmp
jp
out
xchg
fistpll
lret
dec
pop
addr16
xor
into
xlat
icebp
hlt
push
repnz
inc
or
adc
mov
inc
in
fbld
push
jno
push
imul
js
xor
stc
ffreep
xor
punpcklwd
fistpll
sub
out
xor
daa
cmp
test
test
daa
out
rep
in
mov
cmpl
xor
dec
enter
jns
ffree
add
imull
or
mov
out
push
cmp
push
in
mov
dec
dec
fldln2
lret
jmp
icebp
test
push
inc
hlt
rclb
push
jae
hlt
out
mov
push
xor
in
aad
aam
int
enter
mov
rcll
sahf
xor
xor
nop
inc
aad
pop
or
ja
popf
cmpsl
xchg
imul
fistps
pop
jno
rcrl
gs
scas
clc
push
ret
imul
dec
loop
mov
dec
sbb
sub
repz
mov
dec
std
fs
jbe
push
inc
sub
push
dec
jp
pusha
in
cmp
cs
jne
jne
or
sbb
nop
imul
xchg
push
imul
ja
mov
pop
sbb
xchg
mov
es
sub
sub
push
fstp
pop
mov
lea
dec
mov
pusha
stos
mov
push
fisttps
and
xor
sub
pop
data16
iret
adc
lea
ret
push
test
fwait
dec
inc
test
addr16
cmc
sub
shlb
and
jb
call
out
pop
and
push
test
adc
xchg
push
jge
pop
push
lock
cmpsl
jg
scas
andb
fwait
and
adc
lret
xchg
add
je
inc
sbb
mov
je
mov
lds
pop
dec
stc
adcb
cmp
out
lret
and
fwait
xchg
or
dec
shl
xor
insl
lcall
addr16
jbe
and
and
imul
dec
mov
sbb
sti
ljmp
push
jge
ss
dec
test
fistpll
cmpsl
in
xchg
or
sub
ss
insb
imul
and
into
push
sub
ret
cwtl
fmul
mov
loope
sbb
pop
pusha
sub
test
orl
mov
mov
mov
fsqrt
push
xor
call
cmpb
mov
sub
cmpsl
xor
test
push
inc
rorl
adc
fidivs
popf
xchg
push
and
js
mov
insb
fildll
mov
hlt
js,pn
and
movsl
loopne
jae
outsl
cmpsl
jae
cld
outsb
hlt
mov
mov
pop
push
int
adc
sbbb
out
jl
pop
das
mov
aaa
pop
lcall
push
test
hlt
imul
jo
jecxz
popf
lds
pop
add
ss
dec
mov
dec
jge
pop
push
sahf
sbb
repnz
mov
ffreep
lret
das
pop
imul
jge
lea
jbe
and
inc
or
sub
das
fildll
cmpl
loop
push
fmuls
imul
push
lret
imul
repz
mov
pop
add
adc
push
push
lret
cmp
imul
ljmp
ret
adc
scas
lds
and
adc
cmp
mov
imul
cmc
das
imul
sub
mov
out
mov
loope
sub
pop
mov
dec
and
cmp
push
dec
push
xchg
and
push
fwait
pop
dec
es
jmp
jmp
dec
inc
repnz
push
sub
mov
xor
jge
sarl
push
sbb
frstor
push
insb
loopne
aas
gs
bound
and
push
sbb
mov
fldcw
push
mov
rcrb
pop
imul
pop
add
push
or
fisttpll
out
addr16
add
and
mov
sbb
scas
hlt
sub
adc
jnp
leave
fidivs
push
mov
cli
push
jo
cmp
out
jno
shll
push
addb
addr16
mov
cmp
xchg
hlt
sub
stos
mov
cmpsb
jo
test
test
mov
jg
icebp
mov
stc
out
mov
mov
mov
imul
adc
mov
xchg
cmp
push
addr16
rclb
add
notl
bound
bound
pop
cltd
loope
mov
mov
push
shll
imul
sub
shl
mov
adc
sub
sub
movsl
loop
dec
jo
jge
negb
xchg
sub
pop
or
out
fbld
pop
out
in
mov
pop
cli
ja
jmp
mov
int3
and
mov
out
fwait
push
xchg
cld
repnz
hlt
jne
and
aad
xchg
insl
jmp
shrl
xchg
insb
in
inc
fcmove
test
xchg
dec
dec
cmp
mov
add
fldcw
push
in
or
xchg
fcoml
popa
mov
inc
lret
dec
jo
dec
jo
pop
push
rolb
jmp
jne
mov
fbstp
std
outsl
adc
daa
mov
adc
lock
out
pop
dec
iret
sbb
add
ret
dec
add
inc
dec
xchg
xor
test
cmp
sub
int
jecxz
push
pop
das
shr
and
fnstsw
xor
data16
mov
inc
jg
pushf
cs
shld
sub
daa
shll
dec
jne
inc
adc
das
nop
mov
sbb
cmp
jnp
mov
in
mov
mov
xlat
ret
hlt
sbb
mov
clc
dec
jbe
and
lret
dec
stos
add
mov
jae
add
pop
mov
andl
leave
jb
push
dec
sahf
hlt
sub
sub
mov
add
cld
add
les
out
aaa
and
cli
loopne
inc
out
sbb
repz
in
iret
and
add
sub
xor
dec
or
mov
and
arpl
jge
xchg
and
push
fiadds
imul
jl
sbb
jns
mov
xor
std
addr16
pop
out
or
and
push
insb
add
mov
mov
out
lods
leave
add
fldpi
sbb
decb
rcll
push
jno
and
fsubrs
push
or
andl
push
in
fadd
mov
cld
mov
ret
mov
out
pop
pop
push
sbb
nop
pop
daa
push
lret
jno
subb
js
cmp
cmp
mov
out
gs
sarb
dec
out
cmp
xor
bound
jecxz
mov
enter
jnp
lcall
std
out
xor
sub
stos
test
adcb
pop
lahf
xchg
icebp
sbb
sbbl
jge
cmp
ljmp
outsl
call
stos
scas
bound
add
and
pop
dec
dec
pop
xchg
push
xor
pop
sbb
cpuid
test
mov
les
imul
jp
lods
mov
dec
out
fistps
mov
sub
or
or
inc
repnz
xchg
sub
mov
aas
je
repz
dec
push
xor
loope
std
pop
jbe
mov
addl
lea
lods
fistps
lock
mov
bound
add
dec
icebp
movsb
sahf
sbb
fcmovnu
xchg
sbb
sbb
sbb
mov
cmp
scas
xorb
or
cmp
xchg
add
mov
sub
push
out
xchg
sub
mov
js
insl
aaa
nop
dec
and
bound
daa
add
jae
in
and
not
cld
jb
out
test
mov
nop
add
mov
xchg
leave
jo
sbb
or
sbb
rcrb
call
add
test
insb
out
cmpsl
sub
mov
hlt
push
mov
push
push
push
add
fs
push
int
xor
sub
mov
sub
mov
sub
inc
jae
outsb
add
jp
or
std
outsl
imul
pop
inc
outsb
sub
dec
add
push
cld
in
adc
insl
jb
sub
test
sub
fmul
push
dec
jo
into
push
cs
fisttps
mov
or
fpatan
imulb
cmp
es
aam
fst
push
ret
sti
xchg
ja
fcoms
mov
jecxz
gs
xchg
pop
push
push
push
ret
loopne
mov
xor
inc
mov
inc
mov
sarb
lds
and
dec
add
inc
scas
jmp
mov
loopne
mov
and
pop
mov
mov
inc
mov
in
push
ds
enter
xchg
mov
push
cmp
das
sub
mov
lock
and
divb
jg
sbb
fdivr
xchg
sub
pop
test
xor
xlat
shlb
jne
js
dec
addr16
ljmp
mov
fildll
in
insb
jo
imul
dec
es
aad
jne
cmp
out
ja
push
lock
push
add
ja
cmp
mov
mov
adc
jl
ret
lcall
andl
aaa
and
fsts
test
dec
js
or
ret
adc
in
out
cmp
mov
jp
imul
out
repz
inc
xchg
push
sbb
mov
sti
outsl
scas
lock
loope
lods
xchg
dec
test
iret
hlt
xor
ja
sub
aam
bswap
sarl
loopne
mov
cli
sub
and
jp
in
repnz
sub
pusha
lock
xlat
stos
leave
ja
and
mov
inc
or
add
xchg
lcall
mov
and
or
jge
xor
sbb
cmpsb
cmp
mov
shr
jg
sbb
repnz
sti
push
or
and
sub
into
fistpll
in
lock
in
loopne
sti
ss
int3
mov
mov
add
clc
aad
xchg
mov
adc
jo
mov
mov
add
sbb
xchg
cs
sub
cltd
sahf
sahf
jne
pop
xchg
xor
jecxz
sbb
loope
in
jp
mov
cmp
xchg
jecxz
and
iret
jmp
repnz
loopne
mov
repz
imul
shr
jmp
ja
sbb
push
fistpll
gs
fmuls
icebp
daa
movsb
in
addr16
movsb
fistps
shlb
out
int3
das
mov
mov
lret
adc
pushf
popf
push
sub
sub
or
sub
shr
or
xor
inc
sub
mov
xor
jp
out
lds
xor
inc
dec
mov
cmp
mov
mov
xchg
iret
sbb
aas
xor
scas
fwait
sbb
cld
lret
daa
mov
inc
sbbl
jnp
mov
sbb
ss
cmp
push
and
lods
cs
mov
push
mov
aad
add
out
pop
pop
jae
adc
sahf
jb
out
outsl
mov
test
pop
adc
cmp
decb
xchg
push
push
dec
filds
add
test
cmpsb
mov
sahf
jb
out
clc
or
mov
xor
loope
pop
adc
in
es
shlb
test
pop
jmp
inc
nop
mov
and
adcl
xor
gs
fildll
pop
jecxz
push
outsl
jnp
mov
fcos
inc
ja
pop
dec
lock
ret
call
movsb
and
daa
mov
jno
es
xchg
fsubrp
xchg
jp
in
iret
js
or
push
je
add
ret
test
xlat
pop
or
lods
sarl
mov
imulb
jno
dec
dec
test
sbb
add
outsb
inc
test
data16
fmull
fistpll
test
scas
mov
dec
jl
pop
dec
iret
decl
add
xchg
insl
lds
mov
loope
jp
mov
push
out
fwait
hlt
xorl
xchg
inc
je
ret
ror
lods
jp
cmp
push
xchg
pop
mov
fucomip
sbbl
dec
movsl
and
fcomp
and
sub
xchg
xor
sbb
into
mov
add
rorl
push
mov
jns
call
out
pop
lea
add
leave
fs
mov
mov
or
mov
push
adc
cs
inc
hlt
dec
stos
mov
lods
lret
je
push
mov
sub
inc
mov
cltd
cmp
mov
sub
clc
jo
inc
pop
cmpl
add
add
sbb
mov
pop
cs
repnz
andb
daa
add
mov
mov
out
out
or
daa
mov
lock
sbb
aam
fnstcw
push
mov
cmc
xchg
ret
je
lcall
imul
adc
or
pop
mov
cmovs
or
and
leave
fldcw
or
mov
push
xlat
int3
decl
mov
addr16
xor
pop
out
out
sub
imul
ret
mov
push
loopne
jmp
sub
scas
pop
fmuls
fcomip
sbb
lcall
imul
out
mov
push
icebp
sbb
cmp
jno
insb
xchg
nop
xchg
mov
push
sbb
loopne
icebp
sbb
bound
cld
mov
sbb
cmp
imul
pop
test
jmp
in
mov
icebp
inc
mov
enter
lds
out
test
add
in
ja
out
cmpl
xchg
sti
xorb
jl
jge
out
dec
jge
ret
sub
sub
out
mov
insl
ljmp
xor
pushf
ds
addr16
fcomps
fmuls
ss
stc
xor
out
pop
les
inc
dec
push
iret
cmp
push
sti
data16
rolb
jbe
push
pop
in
int
mov
jl
inc
sub
pop
les
mov
ja
iret
loope
pop
outsl
xchg
dec
test
imull
sub
sahf
push
push
andb
mov
mov
mov
filds
and
insl
add
maxps
mov
xlat
mov
inc
ja
aas
xlat
rol
xlat
fimuls
xchg
out
fwait
mov
iret
dec
sub
scas
and
mov
xchg
dec
or
repnz
aad
loope
std
jae
and
add
shrb
fistpll
sbb
mov
fildll
dec
push
sbb
lock
jl
push
or
mov
mov
enter
sbb
add
add
ret
out
or
fcoms
xchg
jmp
testb
mov
mov
sub
lock
imul
loope
sub
pop
jge
addr16
push
xchg
fstps
rorl
adc
mov
stos
stos
test
test
pop
inc
or
outsl
movsl
int
jnp
ret
sbb
jbe
mov
pop
shl
jb
or
jb
mov
sbb
adc
out
xor
aad
ja
sub
push
test
rcrb
sub
clc
sbb
js
out
ja
xor
sbb
hlt
xor
mov
js
mov
sub
add
icebp
xchg
cmp
sub
add
out
xor
push
jge
sub
xchg
filds
pop
scas
lods
daa
push
sub
pop
lds
movsb
push
out
lret
or
lret
lods
test
leave
mov
xchg
inc
filds
jp
iret
lock
xor
push
sub
xchg
imul
mov
aad
popa
adc
xchg
lahf
aas
push
test
filds
jns
aas
xchg
je
cmp
fstl
nop
in
xor
arpl
lret
dec
jmp
inc
sbb
push
shl
cmc
mov
mov
out
pop
pushf
or
stos
inc
sbb
adc
pop
mov
mov
jae
hlt
add
push
addr16
sub
push
xchg
pop
dec
out
xor
add
xchg
inc
jg
xchg
pop
add
out
decl
dec
add
loop
int
pop
xchg
movlps
and
shll
fistps
scas
push
xor
icebp
lds
insl
pop
fistpll
cmpl
repnz
outsb
lea
fistpll
iret
dec
je
aas
push
push
sub
and
lock
xor
mov
loopne
shll
ja
xchg
fnstenv
adc
mov
ret
dec
out
push
xor
jb
jmp
out
in
and
sbb
pushf
or
dec
aad
xor
push
jne
dec
ljmp
and
mov
movsb
mov
xor
sti
call
addr16
push
imulb
sbb
push
in
jns
dec
inc
mov
mov
mov
adc
push
xlat
addr16
add
out
int
movsl
mov
jo
lcall
mov
fsubr
lahf
xchg
pop
ss
jnp
rolb
jl
sbb
dec
pop
sahf
push
out
fisttps
cmp
ret
xor
jge
jg
push
and
stos
xor
jo
daa
mov
mul
push
outsl
loopne
sbb
std
xor
push
mov
in
std
sub
xor
test
fs
call
sub
add
mov
iret
sbb
inc
inc
mov
addr16
xchg
jo
out
pop
test
popf
movd
pop
fiadds
subl
jo
sub
cmp
mov
ja
xchg
ffreep
stc
sbb
subl
ss
jp
aam
test
sbb
lcall
dec
aas
jne
pop
jmp
dec
cmp
rolb
pop
sbb
mov
mov
stc
out
scas
test
pop
movsb
push
insl
scas
mov
ja
inc
loop
rolb
mov
out
mov
inc
stc
das
stc
fildll
into
sub
jle
mov
pop
mov
iret
subb
add
mov
jb
rclb
loop
xor
lds
adcl
sub
xchg
xor
imul
push
incb
in
gs
shlb
inc
loop
adc
adc
inc
add
std
mov
ja
sahf
push
mov
rep
xor
fs
daa
stc
xor
add
es
mov
pop
andl
addr16
sub
fwait
pop
inc
test
push
jno
push
xchg
insl
call
mov
in
fnstcw
sbb
popf
cwtl
imul
icebp
dec
int
fisttps
ja
pop
ja
fsubl
hlt
imul
jbe
test
scas
ficoms
or
add
stos
push
test
xchg
adc
and
cmp
int
jl
mov
mov
das
jne
hlt
mov
adc
clc
xor
and
cmp
mov
and
ret
insl
int3
mov
out
jnp
add
test
je
ja
ds
stos
mov
ret
cltd
fists
xchg
mov
push
dec
mov
xor
in
sub
adc
jne
scas
test
test
adc
dec
sbb
paddusw
nop
ds
jnp
xlat
push
sbb
mov
pop
xchg
fucom
jg
fistpll
pop
xor
and
gs
sbbb
adc
inc
or
clc
lock
mov
pusha
sub
sub
les
mov
call
mov
bnd
int
or
jo
movsl
ds
cmp
je
icebp
stos
lods
mov
aam
and
imul
cmpb
push
mov
xor
dec
std
add
int3
test
push
jg
sub
out
xchg
int
imul
fbstp
lods
cmp
sti
test
enter
xorb
inc
imul
push
push
aam
inc
dec
scas
and
insl
stos
fs
lods
popf
test
inc
cmp
push
insb
mov
imul
stc
jno
sub
add
xor
mov
xchg
pop
pushw
xchg
push
or
dec
xchg
inc
sub
fists
rolb
movsb
adc
hlt
mov
inc
and
iret
push
imul
xchg
jge
push
xor
je
repnz
inc
xchg
ljmp
loope
push
push
jecxz
enter
fwait
sub
inc
cmp
insl
mov
out
mov
icebp
mov
jecxz
or
rcl
push
ffreep
sbb
lods
test
pop
and
out
push
lds
rcrb
push
mov
scas
xlat
pop
add
icebp
int
imul
fistps
pop
sahf
dec
dec
fldcw
outsl
movsb
add
mov
inc
or
mov
aas
dec
inc
push
sbb
pusha
lock
add
push
orb
sbb
cld
aam
pusha
fcoms
dec
mov
xchg
adc
imul
out
rorb
xchg
and
in
or
movsb
bound
out
xchg
ja
dec
push
sub
mov
xor
mov
jmp
stos
repnz
and
sub
and
xor
shlb
add
or
shlb
cld
pop
js
out
loopne
into
mov
ss
sub
push
mov
imul
mov
jo
daa
cmp
mov
ret
fstp
xchg
sub
bound
loop
or
scas
out
aaa
mov
les
jge
aaa
pop
insb
hlt
fs
sub
jle
ds
mov
scas
mov
je
lcall
jp
lret
fucom
lods
lret
outsb
push
scas
test
aad
mov
ds
inc
iret
je
cmpsl
adc
and
adc
test
popa
fs
pop
xor
out
sub
out
test
andl
pop
sbb
add
sete
pushf
push
push
mov
and
call
repnz
push
jo
adc
nop
fwait
fwait
xchg
in
and
imul
push
add
in
call
jnp
push
rcl
and
dec
mov
aaa
xchg
arpl
mov
xchg
inc
jecxz
push
xchg
lods
jne
push
mov
mov
imul
clc
out
inc
xor
sub
fimuls
mov
adc
inc
fsts
mov
push
cmp
mov
dec
insl
out
ljmp
testl
inc
out
inc
in
sbbl
scas
lock
sbbb
out
loopne
out
pop
ja
and
jl
push
arpl
cmpl
arpl
in
lcall
cmp
xor
lods
stos
imul
xor
shr
bound
mov
out
cmp
fstps
inc
fisttps
adc
push
cmp
pusha
and
jmp
push
arpl
or
mov
in
imul
mov
push
inc
lcall
cld
dec
sar
mov
fmull
scas
sahf
lds
mov
cli
and
lock
cmp
rol
test
push
out
insl
xchg
jle
call
out
ror
cmp
arpl
pusha
mov
jae
add
dec
and
mov
push
pushf
insb
mov
jp
je
aam
inc
int
hlt
pop
repz
aaa
pop
test
inc
and
loopne
cs
mov
out
add
cmp
sub
lcall
inc
subl
jle
int3
or
movl
inc
fnstcw
imulb
adc
xchg
mov
and
or
out
test
mov
out
out
push
and
sub
adc
fs
into
and
clc
in
adc
aam
dec
add
sub
aaa
out
mov
adc
in
ljmp
mov
pop
fs
push
sbb
je
decl
pop
leave
inc
arpl
mov
out
idivb
pop
push
call
mov
push
sbb
std
out
or
jmp
lods
pop
push
sub
and
sahf
push
insl
adc
filds
gs
inc
in
and
cmp
je
loop
insb
adc
repz
sub
inc
lds
lret
xchg
sub
movsl
int
push
ja
shlb
inc
dec
leave
out
and
add
cmp
pop
test
push
sub
les
ljmp
popa
outsl
jb
dec
loope
cs
jno
out
xchg
push
sahf
jecxz
cmp
push
cmp
add
iret
fcmovnb
mov
mov
scas
push
out
and
pop
cmpsb
add
cmp
dec
pusha
cld
push
fs
popf
int3
rol
jmp
fbstp
int
sbb
addr16
jmp
cmp
jno
sti
dec
jl
inc
xor
inc
mov
sbb
adc
dec
out
pop
xor
test
outsl
imul
pop
fisttps
cmp
jns
cmp
sbbb
sbb
jb
rclb
ja
fidivrl
dec
out
mov
popa
orl
and
mov
push
xor
dec
push
sub
lcall
dec
or
or
aad
lea
jo
xor
sbb
enter
mov
push
decb
pop
out
sbb
inc
jno
mov
or
ja
dec
mov
adc
and
and
adc
mov
test
in
and
add
stos
test
ret
jo
fwait
push
xchg
jo
fisttps
je
dec
imul
sti
sub
hlt
cmpsl
hlt
pop
ss
push
or
fildl
lret
push
adc
test
fst
daa
xchg
mov
negl
dec
test
cmpsl
xor
adc
jecxz
lret
int
sti
out
int3
pop
cmp
mov
pop
or
mov
iret
out
lds
dec
lret
das
xchg
jb
dec
rorb
in
mov
dec
and
testb
out
sub
inc
cmp
or
mov
filds
insl
les
ds
mov
inc
cmc
adc
jge
stc
lods
push
movsl
jp
jl
fdivs
arpl
in
add
clc
fisttps
sub
pop
mov
jbe
shll
stc
sbb
loope
xchg
and
insb
or
in
iret
out
inc
movsb
jg
rorb
movsl
adc
lods
inc
jmp
icebp
lods
mov
inc
adc
cltd
push
rcrl
push
imul
mov
out
sti
xchg
or
pop
sbb
ja
mov
lcall
sbb
pop
test
fwait
testb
sbb
subl
push
ret
in
jb
xor
jp
mov
testb
adc
jbe
je
cmp
mov
mov
mov
addr16
xchg
out
inc
outsb
fldl
loop
dec
mov
fnsave
fistps
pop
lods
adc
pop
inc
cmp
dec
sub
xor
sbb
loop
insl
out
mov
dec
aad
cmp
repnz
nop
inc
icebp
cmp
mov
pop
xchg
fidivrs
mov
jae
adcl
aad
xor
mov
sahf
sbb
mov
popa
call
les
fbstp
sub
cmp
mov
dec
push
lods
out
repz
addr16
aas
lcall
mov
sub
addr16
cltd
jmp
fs
mov
jmp
fcomps
sub
mov
push
divb
jb
or
fildll
test
cld
sub
f2xm1
mov
lea
and
dec
adcb
cmpsb
lahf
mov
jge
mov
push
rclb
jp
and
mov
loope
test
mov
in
ss
mov
inc
je
cmp
mov
rcrb
xchg
dec
lds
adc
add
adcl
movsb
xor
inc
cs
inc
ror
inc
lahf
jge
push
sti
out
sahf
subl
jae
loopne
mov
mov
push
je
pop
mov
dec
or
pop
icebp
push
loop
add
xor
xchg
int
hlt
push
jae
fcomip
lds
movsb
adc
bound
out
push
sub
or
lret
arpl
or
fsts
fmuls
mov
mov
loope
adc
cwtl
fcompl
out
fists
or
ffreep
pop
aaa
or
xchg
popf
sarb
dec
scas
in
adc
loopne
add
mov
jmp
outsb
call
pop
sub
lret
arpl
cmp
insb
es
jb
fstps
push
sbb
pushf
aad
add
cmpsb
icebp
xor
push
js
inc
je
dec
pop
xchg
xlat
gs
in
fadds
int3
push
xchg
pop
or
aam
pop
imul
sti
mov
fucomip
popa
mov
dec
push
nop
insb
data16
push
adc
je
sahf
lcall
jmp
lcall
push
push
jo
mov
scas
adc
push
inc
pop
dec
stos
sarl
loopne
jmp
mov
insl
pshufw
dec
leave
push
clc
loop
jo
int
jg
insb
sbb
jl
test
add
in
sub
cmc
or
jecxz
je
or
stos
jmp
fidivl
fucomp
out
sbb
jp
sbbl
sti
out
fidivrl
mov
or
and
inc
sub
mov
out
pop
jp,pt
push
and
inc
dec
pop
sub
out
lret
xchg
fcompl
add
les
push
xorb
out
mov
dec
xor
into
fbstp
xor
sbb
xchg
xchg
pop
xchg
lret
mov
in
fistps
cmp
adc
add
daa
xchg
out
xor
jecxz
and
inc
jnp
lock
out
in
pop
mov
fistps
or
mov
std
cmpl
or
sub
ror
imul
je
shrb
or
adc
dec
sbb
sub
sbb
and
in
jp
and
imulb
mov
and
test
popa
xor
pop
jmp
fldt
lods
dec
jl
dec
stos
cmp
out
test
push
fists
adc
shlb
sub
pop
mov
sti
out
lods
sbb
xchg
aas
xchg
cltd
rorl
sbb
lret
fistps
mov
jbe
dec
add
xor
data16
push
cmp
jmp
movsl
cmp
mov
sbb
scas
cwtl
mov
inc
cmp
jbe
xor
and
mov
lret
sbb
pushf
inc
jmp
jp
mov
push
iret
cmp
gs
fistps
ret
mov
inc
sub
rol
fbstp
xchg
pop
loope
pop
mov
gs
mov
xchg
pop
push
fsubrs
jecxz
shrd
idivb
lcall
inc
fld1
xor
mov
xor
mov
cmp
adc
mov
and
fiadds
dec
xchg
cmp
cmp
aad
add
movl
push
sbb
cmp
stos
lds
out
rolb
hlt
test
mov
dec
adc
xchg
jmp
push
add
mov
aad
stc
inc
pop
push
stc
pop
mov
cwtl
xor
in
fadd
iret
mov
fcmovbe
inc
xchg
clc
sub
jmp
mov
add
push
insb
js
xorl
jge
inc
icebp
stos
mov
xchg
jae
jge
rclb
lcall
es
orl
out
test
lods
pushf
fildll
dec
insl
fmuls
fcoms
scas
hlt
xchg
xor
sbb
std
out
and
loopne
add
fisttps
movsb
push
inc
dec
mov
insb
inc
cmc
je
fsubs
add
cmp
inc
fs
adc
sub
mov
inc
mov
jle
clc
fbld
je
xor
dec
out
push
in
ffreep
aad
mov
push
sbb
mov
mov
and
lret
jbe
cmp
add
test
sti
enter
or
in
and
xlat
es
xchg
mov
je
rclb
dec
push
add
mov
aas
ret
out
inc
jle,pt
xor
aad
out
dec
out
nop
xchg
mov
add
in
sbb
mov
fsubl
clc
push
fildll
cmpsb
jbe
insl
cwtl
xchg
and
push
lds
adc
je
push
lock
fiaddl
cli
jo
inc
ds
mov
pop
or
imul
push
cmp
lret
dec
inc
jb
xchg
inc
pop
fcom
sbb
leave
push
push
sarl
and
insb
mov
imul
xchg
ffreep
xor
bound
cltd
mov
ljmp
pusha
sub
leave
xor
imul
inc
fnstsw
inc
fdivrl
in
push
push
call
pop
out
mov
dec
dec
cmp
in
test
pusha
insb
push
or
ss
mov
insl
into
jmp
jbe
out
call
pop
call
rcrl
int3
jmp
inc
jo
rorl
mov
fsubp
mov
jb
sbb
jno
xchg
jbe
aad
scas
fadds
add
fnstenv
mov
push
mov
movsb
push
mov
popa
dec
add
xor
push
iret
ds
mov
imul
ljmp
call
and
cmp
jnp
push
cltd
data16
mov
push
imul
andb
pusha
mov
push
js
inc
enter
mov
adc
push
jno
and
and
cmp
sbb
pop
xorl
push
dec
mov
sbb
in
lcall
fsubrs
push
cmpsb
lea
call
fdivrl
pop
adc
cmp
dec
jmp
lret
fdivrl
imul
call
add
imul
call
out
or
shl
enter
pusha
out
adc
mov
xchg
mov
outsb
push
mov
jo
enter
outsb
xor
imul
mov
or
mov
rcll
push
pop
addr16
ret
pop
imul
aaa
and
xchg
mov
jmp
or
dec
mov
xor
inc
pusha
js
xchg
sbb
mov
pop
pusha
dec
jmp
jo
sbb
push
sbb
push
dec
xor
adc
call
jae
icebp
jno
push
fsubr
xchg
xchg
cmp
lods
push
sub
jno
and
mov
adc
aas
jae
popa
inc
cmp
call
cs
rcrb
pusha
jmp
xchg
in
push
inc
icebp
add
mov
pop
mov
lock
dec
call
mov
test
sarb
lret
lods
pop
imul
cmp
outsb
mov
arpl
sub
lea
daa
icebp
es
out
insl
add
pop
sub
cmp
outsl
sub
rcrb
movl
outsb
call
dec
sub
test
aad
jo
pop
mov
cmp
test
int
xor
xor
idivl
mov
outsl
mov
sub
mov
jae
jno
rcrl
int3
divl
addr16
adc
test
inc
pop
dec
ds
out
lret
rcll
jno
hlt
or
lods
icebp
pop
sbbb
subb
aad
loop
aam
call
adc
cmp
aad
dec
pop
xor
adc
sbb
jecxz
push
scas
imul
add
imul
push
add
sbb
js
dec
cmpl
fcmove
out
inc
cmp
icebp
leave
or
xor
push
cmp
jno
xor
loop
push
dec
cmp
jo
push
jmp
cmp
sbb
addr16
outsl
imul
xlat
gs
shrb
cmp
mov
sbb
add
scas
jmp
andl
dec
aam
jb
icebp
push
outsb
dec
shlb
mov
out
scas
mov
lods
inc
inc
shlb
push
aas
sub
sbb
add
mov
in
mov
inc
pop
mov
int
jae
stos
scas
or
jno
aas
bound
shr
out
aad
inc
loop
dec
push
sub
mov
mov
mull
dec
insb
sub
lret
jmp
icebp
test
pop
movsb
lds
xor
lea
inc
lods
rorl
push
mov
push
aad
jbe
pop
push
insl
dec
repnz
cmp
mov
jbe
das
or
mov
imul
inc
mov
adc
cmp
call
bound
mov
addr16
lret
loop
repz
dec
inc
dec
dec
imul
xchg
mov
sbb
insl
aad
fwait
xchg
add
jmp
mov
repz
mov
push
movsb
lods
addr16
dec
and
push
rep
cmp
xor
ss
pop
fdiv
mov
push
cmp
loop
aad
xchg
mov
aam
or
inc
movsb
or
loopne
sub
sub
inc
vmovntps
mov
aaa
xchg
adc
in
call
cmp
pop
call
fwait
adc
push
sub
dec
dec
xchg
call
popa
dec
cmp
or
imul
pop
push
fldl
jno
loope
pop
outsl
and
fsubrs
xchg
les
test
call
popa
out
bound
dec
mov
in
push
scas
xchg
addr16
inc
sbb
fs
ljmp
daa
push
insb
xchg
int3
sbb
fstpt
loope
mov
clc
test
stos
or
mov
lret
push
or
sahf
pop
add
xor
inc
mov
mov
xor
pop
mov
push
aam
sbb
aad
aad
push
mov
imul
cmp
dec
xor
push
out
test
lret
movsb
or
adc
jns
adc
xchg
add
push
fs
test
addr16
dec
or
push
pop
mov
imul
sbb
addr16
push
dec
and
popa
mov
out
xor
icebp
stos
jle
push
das
push
mov
jle
mov
clc
popa
out
fcomps
mov
cmp
pop
out
jae
mov
sub
pop
movsb
or
mov
fdivl
pop
mov
mov
cwtl
push
popa
xlat
aam
pop
insl
out
add
add
inc
xchg
inc
xor
add
jno
cltd
xchg
in
enter
pop
mov
cld
das
add
xor
nop
fisubrl
ja
jle
pop
lcall
cltd
add
add
xchg
lods
loop
inc
jmp
jg
fidivrs
adc
jp
movsb
test
shlb
clc
add
icebp
mov
test
es
out
dec
cld
addr16
lret
mov
pushf
out
pop
repnz
in
xchg
mov
cmp
loop
jmp
dec
add
scas
lods
repnz
lods
int3
sbb
lods
imul
fsubrl
mov
aaa
mov
scas
inc
xor
jp
pop
addr16
loop
daa
insb
sti
jae
out
js
cmc
mov
filds
test
mov
push
adc
mov
pop
cmp
xchg
rclb
inc
or
cmpsl
adc
adc
daa
jmp
jno
loope
test
arpl
sub
out
pop
cmpsl
and
sbb
and
add
in
mov
cmp
pop
inc
out
icebp
jne
push
pop
out
xor
scas
mov
ss
jle
xchg
sbb
push
adc
loopew
cmp
out
data16
mov
push
xor
push
sub
mov
xor
gs
lds
js
iret
aas
ss
inc
je
or
and
dec
sti
aam
fisttps
mov
mov
mov
ret
mov
push
jg
mov
pshufw
jecxz
dec
rcll
add
sti
dec
pop
adc
nop
std
addr16
dec
sbb
or
pop
out
add
lret
dec
xlat
jp
add
cmp
loopne
cli
mov
into
jmp
inc
jge
arpl
movsl
push
jns
aas
popa
cltd
test
lret
sub
push
fcoms
popf
imul
out
cmp
cltd
div
in
std
jmp
dec
shlb
xor
ds
jge
fistpll
sbb
xchg
nop
or
fs
cwtl
mov
mov
addr16
jl
leave
out
sarl
add
sub
mov
pop
fnstenv
or
call
rcr
test
pop
mov
mov
scas
and
jle
mov
and
mov
sbb
jp
pop
lcall
sbb
nop
test
rorb
fcomip
scas
mov
sti
pop
fcoml
add
mov
fistps
mov
mov
fldl
cmc
push
outsb
adc
inc
and
sti
xchg
andl
xchg
dec
mov
es
push
outsb
cmpsl
xchg
out
sbb
fmull
push
insb
mov
das
outsl
lock
add
jno
push
lret
push
inc
jb
icebp
jne
mov
inc
adc
jmp
push
pop
and
je
mov
mov
ret
pop
das
mov
xchg
xor
test
mov
or
hlt
and
ret
fistpll
adc
pop
mov
mov
mov
arpl
add
jmp
or
sbb
mov
lock
sub
std
mov
jno
loope
mov
sbb
fs
fidivrl
sbb
push
push
inc
inc
jp
add
dec
sbb
movsb
xchg
dec
sub
mov
push
dec
rcll
test
xchg
mov
xchg
aad
pop
mov
jno
addb
dec
jno
mov
es
iret
jo
xchg
scas
add
adc
sbb
inc
or
je
fstl
cmc
clc
out
push
arpl
addr16
out
sbb
push
push
jecxz
hlt
test
dec
mov
lods
fwait
dec
loope
push
int
aam
and
xor
in
in
pop
fs
mov
fisttps
xchg
icebp
xchg
movsb
and
push
pop
or
adc
out
and
notb
jecxz
mov
pop
sub
cs
shll
push
sub
or
imul
jecxz
gs
jbe
mov
jno
jns
ss
inc
loop
xchg
jg
sub
and
mov
push
pop
xorb
xchg
or
sub
xchg
and
loope
call
cmp
dec
in
push
fsubs
pop
cmc
jl
mov
jnp
fbld
pop
adc
in
sub
jno
inc
add
insb
aam
cltd
push
push
pop
cmc
sarl
mov
call
adc
ja
mov
fisttps
sbb
cmc
movsb
push
lds
mov
and
jge
ss
js
cmc
cmp
shrb
fcomip
mov
stos
and
push
loope
mov
adc
out
mov
cmp
stc
out
adc
shrl
dec
xchg
pushf
sub
add
push
and
cld
cmpsl
test
sbb
mov
lock
out
repz
nop
dec
fsubl
test
hlt
fwait
dec
mov
fisttps
out
data16
sub
jo
pop
sub
jnp
ret
inc
sbb
adc
mov
inc
add
fisubrl
outsb
mov
fistps
mov
ret
out
push
ret
imul
lret
mov
sbb
fs
sti
inc
jae
out
lock
std
xor
out
xor
clc
or
or
xchg
cltd
lds
rorb
adc
lea
mov
sub
xor
fldenv
inc
ret
scas
xchg
sbb
divps
movsb
xchg
inc
into
lods
mov
or
push
and
js
dec
mov
lods
inc
outsl
icebp
mov
jae
jae
out
or
push
in
or
mov
push
iret
xor
fcmovnbe
or
mov
pop
and
pop
pushf
xor
sahf
and
idivb
into
subl
jp
push
pop
push
xor
repnz
cltd
pavgw
pop
pop
in
lret
xchg
add
inc
popf
jne
jl
aaa
hlt
subb
jne
dec
sti
mov
or
in
ffreep
std
inc
lret
out
xor
push
pop
mov
mov
repz
inc
call
imul
dec
xor
push
push
jp
sub
jp
nop
xor
popa
fmull
inc
dec
pop
aam
sti
out
xor
or
inc
insb
mov
lahf
je
shll
dec
loop
jecxz
cld
enter
loopne
scas
and
cmp
push
jo
scas
divb
mov
insb
jge
popa
xchg
ffreep
mov
pop
das
sbb
sub
cmc
dec
xchg
cmpsl
xor
inc
mov
scas
adcl
xchg
scas
cmp
sub
mov
lock
inc
int
or
dec
dec
pop
xor
imul
dec
movsl
sbb
pop
cmp
bound
cmpl
adc
push
dec
ljmp
inc
rcr
sbb
push
into
push
xor
mov
push
test
add
bound
je
hlt
fimuls
or
insl
add
popa
mov
cmp
fnsave
push
mov
scas
mov
dec
imul
mov
ret
addr16
rol
in
xchg
je
mov
xor
mov
out
clc
adc
xorb
xor
filds
sub
addr16
js
push
mov
pushf
fcmovnu
cld
in
add
ror
adc
in
fnstcw
mov
icebp
mov
pop
shl
jno
jne
xchg
nop
xor
test
jb
sub
repz
test
mov
jg
rcrb
xchg
movsb
out
lahf
lcall
jns
cmpsb
fs
mov
inc
lods
sbb
in
mov
mov
xor
aas
mov
pop
mov
mov
mov
out
push
sti
mov
xor
jmp
or
adc
xchg
les
pop
imul
wrmsr
cmp
mov
test
lock
out
push
mov
stc
lret
or
push
mov
outsl
dec
cltd
fsubrl
add
les
into
js
insl
lds
int3
je
dec
sub
xor
imul
repz
filds
in
xchg
movl
or
sub
clc
mov
ss
sub
mov
cmp
mov
movsl
push
xchg
mov
lcall
mov
mov
imul
mov
jo
xchg
iret
xchg
sbb
add
inc
push
cmp
lret
mov
out
dec
out
in
iret
cmpsb
addl
sub
and
movsl
push
int
insl
add
or
fsubrl
xorl
cld
movzwl
cmpsb
and
xor
push
fimull
mov
inc
leave
cmpl
add
adc
js
lret
push
lods
cmp
xor
and
das
test
ja
inc
inc
enter
pop
sbb
inc
adc
cmp
outsb
fldl
inc
push
lds
dec
mov
pop
dec
outsb
push
pop
push
sbb
ljmp
popa
inc
cs
jp
mov
mov
push
adc
jge
and
dec
dec
cmp
hlt
jl
lahf
pop
or
mov
repnz
dec
pop
lret
gs
mov
sbb
jnp
adc
lods
mov
aad
loopne
fnstenv
pop
scas
pop
or
fistps
adc
ffree
push
dec
jge
test
lods
lds
mov
adc
mov
mov
test
jp
or
pop
aas
sub
dec
cmp
inc
jecxz
pushf
xlat
pop
into
mov
mov
push
fists
jb
xchg
fwait
mov
aas
cmp
jecxz
mov
dec
push
aas
add
or
movsl
out
hlt
and
shr
int3
loopne
and
hlt
mov
shl
xchg
pop
jp
ja
jns
setl
aaa
fistps
in
fwait
mov
pop
pop
out
or
shlb
xchg
scas
test
stc
mov
js
insl
lock
in
xor
mov
xchg
scas
inc
jo
call
shr
xor
hlt
mov
imul
clc
aas
leave
pusha
cmp
rcll
and
jo
addb
adc
shl
subl
and
aam
dec
repz
je
lock
jg
int
sub
insb
xor
lods
inc
addr16
out
int
hlt
lods
or
or
mov
xchg
xchg
pop
jno
push
jle
out
xchg
clc
fwait
dec
into
mov
dec
in
test
xchg
lret
shll
call
jbe
dec
inc
stc
mov
or
pop
shr
fs
fisubrl
push
addl
jno
scas
mov
repnz
add
dec
repnz
dec
lock
leave
xchg
inc
cmp
bound
aad
sub
loope
aam
sub
sahf
xchg
sarb
sbb
repz
mov
jle
pusha
out
scas
lods
shr
dec
add
adc
scas
mov
jae
jp
dec
cs
shl
mov
hlt
mov
jae
push
hlt
test
jp
mov
insb
inc
push
jo
adc
ret
mov
mov
add
jmp
mov
jnp
fwait
shll
shlb
ret
dec
adc
push
cld
jo
push
xor
movsl
and
in
ret
jmp
add
push
loope
in
je
sbb
jno
mov
adc
lcall
sub
stos
es
arpl
cmpsl
push
lcall
sub
xchg
shlb
arpl
out
pop
loopne
jne
addb
mov
stos
push
call
xchg
sbb
push
push
push
aad
jp
cld
arpl
xchg
lea
ss
adc
sbb
out
pop
lahf
notb
loope
lods
jb
in
jno
and
dec
clc
popf
daa
pop
loopne
addr16
clc
and
and
or
xor
arpl
mulb
jl
adc
cmp
fistps
fs
sub
and
ja
ret
mov
add
sti
stc
add
ja
mov
mov
int
lods
push
and
cmp
sub
jo
cs
ljmp
test
icebp
fnstsw
mov
bound
lret
add
cmp
fdivp
pushf
imul
sub
cmp
icebp
rclb
xlat
pop
stc
push
stos
dec
adc
daa
cmp
xlat
sub
xchg
mov
jae
mov
imul
inc
filds
add
clc
loope
out
adc
divb
aad
push
pop
jne
imul
addr16
jo
fnstcw
daa
inc
sbb
add
shlb
fistps
mov
mov
adc
fstpl
pop
addr16
add
shll
inc
dec
std
idivl
mov
int3
push
push
sarb
pop
pop
add
fisttps
xor
mov
into
dec
jmp
mov
pop
lret
mov
idivl
add
dec
fbld
imul
add
adc
xchg
cs
popf
fcomip
cmpsl
mov
out
cs
insb
out
mov
in
and
sub
lock
lods
xor
push
sbb
sub
ja
rcrl
sub
addr16
push
dec
repz
loope
lret
scas
mov
out
mov
movsb
gs
jno
ret
insl
push
out
aaa
fldln2
push
fs
pop
iret
sbb
mov
mov
jno
js
cmp
push
or
cmp
icebp
movsb
scas
mov
fwait
or
inc
mov
lods
jae
jp
repnz
push
in
mov
aam
shl
out
in
add
push
jb
mov
popa
out
xor
jmp
and
lds
jo
xlat
shll
test
bound
filds
or
xchg
lods
pop
mov
pop
jl
sti
jp
icebp
and
js
and
jp
rol
and
jmp
sahf
andl
sbb
sbb
mov
fisubl
xor
mov
addr16
cmpsb
outsb
mov
insl
repz
fsts
pop
xor
lret
popa
popa
jmp
out
jg
adcb
cmp
or
lret
pop
cmc
stos
test
push
mov
sub
jo
dec
inc
push
and
pop
stos
fiadds
cmpsb
pop
leave
push
sbb
mov
cmp
not
fcmovb
sti
pop
ss
mov
fldl
mov
loop
sub
out
cwtl
nop
xchg
fmuls
jmp
mov
pop
stos
stos
in
sti
mov
mov
jp
cli
and
inc
out
add
test
push
mov
aad
ret
fwait
lock
pop
xlat
cmpsb
sbb
mov
mov
ja
scas
inc
push
xor
lret
je
push
xchg
adc
loope
in
jmp
push
leave
addr16
gs
and
mov
cmpsl
lods
sub
pop
daa
push
and
dec
ret
cmp
and
repnz
aad
jo
nop
in
movsb
shlb
sub
xlat
dec
mov
sub
shll
xlat
sbb
test
lcall
fstps
sub
imul
insl
test
pushf
call
jno
out
or
out
dec
xor
or
jp
dec
jns
outsb
aas
mov
push
and
test
lret
int
add
sbb
xchg
pusha
call
ja
outsl
sbb
fistpll
clc
lret
in
fxch
jb
imul
and
cmp
adc
push
aad
test
pop
jb
inc
jne
shlb
fchs
ret
pusha
imul
add
cmp
push
mov
xor
adc
fwait
xorb
or
xchg
pop
push
sub
mov
jmp
and
push
rcll
mov
mov
cld
jle
movsl
cmc
or
sub
imul
in
sti
imul
push
mov
cmp
je
repnz
xor
mov
and
pop
mov
fisttps
je
aas
dec
push
out
add
movsl
xor
adc
addr16
cmp
cmp
loope
or
out
sub
insb
mov
int
lahf
in
andl
push
aam
loop
cmp
and
shrl
leave
sahf
jmp
notb
neg
or
subl
sarl
inc
out
mov
mov
push
popa
mov
pop
add
inc
mov
xchg
pop
sub
mov
ja
aaa
es
call
xchg
inc
dec
cmpsl
pushf
pop
jo
jnp
test
dec
inc
dec
xchg
pop
dec
imul
xor
daa
out
or
hlt
rcr
cmpsb
idivb
or
mov
sub
push
push
loop
js
push
pop
testb
mov
push
loop
jg
mov
jl
mov
xchg
pop
es
add
rcll
mov
mov
pop
popf
push
lahf
loope
sbb
lock
call
sub
xor
insb
mov
xchg
dec
clc
xchg
ljmp
ret
sub
jbe
sub
sub
gs
subl
and
rcrl
vpaddusw
jbe
stos
xchg
test
shlb
or
xor
test
imul
test
sub
cmp
out
lret
scas
ret
repnz
js
and
sub
fs
add
jp
pop
dec
inc
or
icebp
xchg
push
out
mov
add
push
xor
cmc
ds
mov
mov
mov
add
or
fsts
xor
jns
xchg
nop
sub
add
add
stos
mov
push
mov
lret
or
inc
rcr
dec
sbb
xor
or
aad
adc
or
shrb
push
ja
pusha
dec
pushf
es
int3
test
out
mov
pop
mov
rorl
pushf
jo
fcomip
test
mov
insl
cmp
out
es
aas
mov
inc
jb
pop
out
xchg
shll
mov
jge
aaa
and
cmpsb
jo
xchg
ffreep
add
int
push
xchg
test
jns
icebp
push
adc
xchg
jmp
dec
fcomip
scas
jmp
adc
xchg
dec
cmp
test
sbb
inc
jae
xchg
pop
mov
cmpsl
sub
cmc
fisttps
sub
mov
and
cltd
mov
jo
fsts
sub
inc
outsl
stos
push
pop
bound
jbe
dec
mov
or
push
dec
dec
inc
sahf
imul
xchg
push
test
push
xchg
pop
scas
daa
out
sbb
outsl
mov
xchg
xchg
sub
xor
push
inc
mov
inc
dec
loopne
inc
inc
sbb
jno
and
out
xor
or
fmul
jecxz
push
sub
and
mov
pop
sub
add
sub
mov
shlb
or
xor
imul
add
push
lret
scas
lret
adc
pop
lock
add
inc
rolb
lds
or
mov
loop
loop
out
aad
jbe
adc
loope
das
fldl
sub
ffreep
leave
pushf
enter
jbe
cmp
insl
adc
out
std
in
xchg
adc
insl
aaa
out
add
inc
arpl
xchg
mov
scas
fwait
enter
or
mov
fwait
sbb
sub
cmpsb
sub
xchg
mov
lahf
xchg
std
xor
repnz
sti
pop
mov
adc
adc
ret
and
mov
or
pop
mov
ja
push
add
pop
xchg
jns
cmpsl
push
xor
stos
xor
mov
adc
imul
ret
movsl
test
or
nop
cmp
add
push
jmp
fptan
in
gs
stos
and
mov
jnp
out
pop
mov
push
add
pop
dec
push
xchg
cmp
fisubl
fnstsw
xchg
scas
jnp
out
test
shll
in
add
in
sbb
out
std
imul
mov
in
dec
ljmp
or
ja
push
cld
mov
pop
push
test
add
std
add
clc
adc
addr16
inc
xchg
adc
or
repz
stos
idivb
push
xchg
mov
mov
js
dec
hlt
push
pop
mov
pop
inc
ja
cld
loop
mov
sti
lahf
out
jns
aam
fnstcw
jp
lock
sub
arpl
das
cmp
lcall
out
test
and
push
push
add
xor
cmpsl
push
out
adc
add
rorl
or
jns
or
out
add
jge
loopne
push
mov
adc
pop
inc
ror
es
cwtl
aad
cmc
or
push
inc
xchg
dec
out
jnp
and
shll
hlt
sbb
int
out
out
sbb
aam
xor
inc
popa
test
add
jno
out
addl
jb
pop
ja
hlt
sti
jge
sbb
push
push
mov
call
addr16
iret
out
xchg
jge
sti
adc
sub
cs
sub
test
std
pop
ret
mov
jo
dec
dec
and
lcall
push
out
leave
dec
in
inc
push
repnz
push
cmc
out
cmp
or
outsl
out
repnz
cmp
out
pop
sbb
mov
jg
mov
sub
pop
push
les
movsb
into
inc
push
sub
data16
mov
das
mov
lahf
jmp
shrl
fidivs
pop
push
sbb
dec
xchg
sbb
mov
shrb
lahf
mov
insb
adc
xor
fldenv
adc
sahf
call
stos
call
dec
fildll
iret
or
sahf
xor
les
sbb
adc
lods
cmp
insb
ret
out
sub
mov
cmp
out
push
push
mov
adc
pop
push
jle
test
ret
dec
loope
out
je
pushf
mov
ja
je
xor
pop
mov
aad
iret
out
fisubrl
out
sub
xchg
stc
das
xor
mov
jecxz
scas
sbb
mov
imul
imul
shlb
push
hlt
lea
push
in
test
jecxz
jmp
mov
in
mov
dec
test
mov
pop
shl
test
jge
shlb
mov
sarb
popa
mov
xchg
pop
fs
imul
push
gs
addr16
lock
jo
out
loope
and
arpl
popa
push
push
and
faddp
mov
jno
popa
push
pop
and
mov
add
out
cmpsb
sti
mov
mov
fbld
push
jge
or
shrl
dec
pop
outsl
adc
mov
dec
aas
cltd
adc
pop
insb
add
mov
add
adc
outsb
mov
add
fistps
clc
fildll
pop
sahf
sbb
xor
mov
loope
repnz
push
mov
fwait
stos
movsb
mov
fistpl
cmp
test
sahf
addr16
xor
jmp
popf
hlt
movsb
fs
and
or
or
scas
push
fwait
lods
mov
pushf
pop
sbb
cmp
ja
das
xor
imul
inc
ds
and
add
iret
inc
dec
out
add
in
fldcw
pop
pop
test
mov
rclb
cmp
add
xor
je
out
das
ret
or
mov
and
dec
sbb
insb
xchg
push
cmp
jmp
loopne
fists
rcrb
xor
mov
aas
pop
aam
mov
bound
out
test
scas
stos
jo
xor
movsb
mov
sbb
dec
xor
insb
mov
push
push
adc
jmp
imul
push
dec
inc
movb
pop
mov
in
ficompl
jae
pop
sbb
xlat
fbld
lods
jle
test
push
inc
and
out
xor
imul
filds
push
jle
out
jp
push
stos
inc
clc
xchg
pop
loope
inc
jno
push
push
in
mov
sub
neg
cld
icebp
ret
mov
jae
outsb
into
shlb
mov
pop
or
sbbl
out
pushf
mov
push
cmp
jle
inc
lret
sub
mov
aad
push
in
push
pop
cmp
andb
bound
in
aaa
adc
add
pop
mov
pop
inc
add
push
ljmp
push
push
mov
adc
loop
or
adc
jp
sub
xchg
dec
outsl
jo
mov
dec
ljmp
je
inc
arpl
or
push
out
imul
scas
aad
xchg
mov
pop
fldenv
test
arpl
fisttps
mov
cvtdq2ps
je
mov
mov
rolb
push
lods
push
ds
fs
push
fidivrl
pusha
or
out
jp
pusha
cmp
frstor
es
stos
fs
sbb
mov
clc
dec
scas
add
xchg
mov
hlt
je
push
scas
jmp
mov
es
test
xchg
imul
iret
sub
sahf
cmp
adc
leave
xor
mov
mov
pusha
xlat
lods
fs
shll
mov
inc
outsl
out
hlt
lds
xchg
mov
imul
xor
std
out
cli
xor
inc
das
push
loopne
jmp
stos
cmpsb
sbb
addl
sbb
int
pop
and
jo
mov
dec
out
shlb
out
pop
mov
mov
lods
adc
pusha
adc
aaa
sar
loopne
mov
fwait
mov
mov
ljmp
mov
adc
push
cs
jmp
lahf
fs
dec
xchg
and
cmp
clc
scas
xchg
insl
mov
mov
shrb
add
inc
bound
cltd
xchg
icebp
xchg
popa
mov
pop
jl
dec
sahf
aam
imul
imul
jg,pn
inc
sub
xchg
mov
or
test
add
push
push
loope
int3
xor
sbb
dec
out
adc
addb
int
aad
call
push
xchg
push
repz
jae
push
sub
das
lods
xlat
fs
xchg
scas
lahf
lds
adc
popa
xchg
repnz
lods
push
mov
jecxz
sub
sub
fildll
aam
mov
dec
push
add
pop
out
mul
mov
loope
xor
cmovnp
mov
push
lcall
popf
pushl
dec
addr16
stos
icebp
cmpsl
movsl
imull
pop
push
cmp
sti
pop
adc
mov
cmpsb
insl
sub
jp
inc
repnz
push
jae
js
or
mov
int
lods
pop
xchg
inc
loope
fdivl
out
pop
inc
test
pop
jecxz
outsb
jae
fnstenv
out
fwait
push
icebp
mov
or
es
push
enter
mov
inc
imul
sub
dec
aam
xchg
push
xchg
test
les
in
arpl
stos
inc
les
aad
xor
push
or
in
push
out
stc
pop
cld
pop
xor
jp
testl
add
xchg
gs
sub
movsl
dec
or
mov
daa
fwait
mov
xlat
or
lock
xchg
xchg
jne
mov
fwait
push
dec
scas
dec
lret
cmpb
pop
popa
mov
aad
adc
sbb
push
rcrb
cwtl
fisubs
popa
sbb
stos
cmp
sub
addr16
push
in
lock
movsl
mov
imul
push
dec
daa
ds
xchg
mov
inc
push
and
or
dec
mov
out
sahf
xor
jmp
mov
ds
pushf
xor
fcmovnu
cmp
push
insb
fiadds
push
xchg
insl
repz
cltd
xor
fbld
cmp
jecxz
ror
sub
addl
addr16
push
loop
or
add
jmp
add
mov
out
ret
out
call
sub
push
add
xor
insl
sub
or
push
lock
and
sub
adc
out
flds
fucomi
xchg
icebp
mov
ja
adc
frstor
mov
push
movsl
cltd
xchg
xor
push
sub
mov
in
or
or
test
or
repz
jno
in
and
test
sbb
test
pop
cmpsl
roll
mov
jmp
dec
mov
xchg
aam
sti
xchg
jae
out
das
push
les
mov
mov
add
push
adc
out
pop
fidivrs
ret
mov
cmp
push
pop
lods
ljmp
sub
mov
jmp
push
cli
xchg
testl
test
aam
cmp
stc
shlb
mov
imul
shll
push
xchg
in
outsb
imull
mov
fists
push
iret
push
and
inc
cwtl
nop
or
ja
scas
ja
shrl
cmp
jle
jae
loope
jo
adc
bnd
stos
out
cmpsb
mov
xor
push
pop
dec
xchg
jle
add
loopne
dec
sahf
ror
mov
pop
addr16
ljmp
jo
out
js
ss
ljmp
sbb
xchg
test
xchg
std
jns
addr16
aaa
pushfw
mov
lret
aam
repnz
shrl
add
lods
pop
pop
mov
push
or
xchg
bound
sahf
popa
int3
shll
rolb
or
sbb
mov
ljmp
pop
loope
enter
shll
jns
icebp
and
and
cmpl
dec
xor
xor
imul
pop
adc
dec
in
imul
cmp
into
loopne
and
loop
call
mov
xchg
push
xchg
mov
mov
leave
sub
push
cmpsl
imul
movsb
push
inc
aas
sub
lahf
dec
dec
popa
into
sbb
mov
and
inc
rolb
insl
popf
out
ds
imul
aas
imul
out
pushl
orl
jle
cmpsl
in
sti
sbb
mov
scas
lock
jge
xor
std
jecxz
jno
pop
mov
add
push
hlt
dec
sbbl
pop
icebp
pop
lods
sub
andl
add
xchg
jne
xor
and
std
push
pop
ret
rorl
sbbb
sbb
lds
int
rcrb
arpl
mov
test
mov
jbe
aad
jge
testl
cmpsb
cmc
shll
repz
gs
mov
int
fxch
add
fldpi
and
sub
pop
in
xor
mov
daa
loopew
mov
inc
jg
stos
out
xchg
push
add
adc
out
mov
adc
inc
fbld
test
sub
xor
cli
add
mov
rcl
out
push
add
clc
imul
decb
inc
jb
sbb
into
nop
push
push
icebp
lock
mov
out
dec
insl
xor
or
aad
xchg
jno
mov
add
out
jl
mov
pusha
lods
xor
fsubr
sti
int
and
fnstsw
aam
sbb
adc
fistps
mov
loopne
repnz
aad
es
filds
out
sub
and
mov
ljmp
out
push
loop
cltd
fsubl
push
pop
sbb
push
sub
shlb
push
xor
cmc
iret
and
mov
aas
scas
lds
cmp
sub
pop
or
aam
stc
ja
jae
xor
push
popa
cwtl
fisttps
fsub
adc
push
and
mov
xorb
mov
mov
add
stos
mov
shr
out
inc
push
jle
imul
and
inc
pop
movsl
ret
inc
mov
cmc
jb
push
mov
sbb
mov
loope
xchg
fimuls
fistpll
mov
inc
stos
pusha
sarb
shlb
lret
movsl
nop
in
into
fsubp
clc
fs
addr16
mov
jo
xor
jp
loope
loop
jg
pushf
push
insb
addr16
or
aad
xor
shl
outsb
test
push
movsb
leave
sub
mov
mov
xorb
inc
inc
add
loopne
insl
out
aas
lds
scas
bound
sub
jmp
imul
mov
shrb
cwtl
sbb
popf
out
jb
imulb
daa
lea
fadds
rcll
push
imul
jge
xchg
mov
sbb
fisubrl
push
mov
pusha
xor
cmp
cmp
ficoms
pop
imul
ret
imul
inc
call
subb
jnp
imul
mov
sbb
xchg
imul
ror
mov
imul
iret
je
push
mov
ds
imul
pop
aaa
inc
stc
adc
xchg
inc
fldt
das
or
dec
push
outsl
and
xchg
sub
imul
pop
arpl
inc
lods
fs
fidivs
addr16
rcrl
imul
jl
pop
stc
or
into
adc
addl
or
pop
arpl
imul
dec
mov
push
bound
mov
xor
jnp
std
nop
mov
jecxz
mov
pop
icebp
fadds
imul
addr16
sti
das
add
and
pop
loop
into
das
stc
jo
call
or
sti
imul
push
enter
mov
mov
push
adc
out
imul
and
add
jg
call
lahf
aad
testl
orps
out
lock
dec
fst
imul
int
xor
sub
mov
push
imul
scas
nop
rol
imul
fdivrs
fstpt
xchg
ret
repz
mov
jg
subl
adc
imul
sub
pop
cli
setl
sbb
daa
sbb
pop
mov
test
outsl
push
mov
xchg
cmpsl
int3
insb
imul
lret
xchg
sub
idivb
xor
je
jge
aaa
mov
fucomi
imul
enter
xor
adc
mov
push
pop
inc
mov
mov
mov
lret
mov
push
xlat
imul
add
push
dec
jecxz
sbb
aas
ja
dec
adc
hlt
into
dec
outsb
scas
jl
add
jle
or
xor
pop
ss
js
inc
mov
mulb
push
dec
imul
pop
jb
loope
jne
push
sub
imul
mov
sbb
aam
in
jnp
adc
mov
nopl
mov
push
mov
lret
imul
das
mov
sub
mov
push
inc
roll
stos
test
imul
push
lds
mov
outsl
loop
cmc
in
sub
int3
and
jmp
mov
fmuls
pop
lods
pop
jmp
cmp
fmull
cmp
pop
mov
shl
out
sub
add
mov
mov
cmc
pop
jecxz
push
lods
jnp
pop
cltd
xor
es
sbb
jae
loop
sub
or
subb
lret
lds
adc
aaa
popf
gs
xchg
unpckhps
and
es
pop
inc
or
mov
aad
dec
icebp
sbb
or
jecxz
or
and
xchg
ret
das
mov
fwait
repnz
idivl
push
jno
ds
imul
in
leave
lds
xlat
sub
mov
std
in
mov
jge
enter
jecxz
mov
jnp
test
stos
or
mov
arpl
lret
mov
test
add
sbb
call
lods
cmp
cwtl
rol
jp
xchg
js
mov
dec
and
pop
adc
sub
mov
daa
push
jne
cmpsb
mov
add
xor
xor
mov
mov
pop
xchg
test
push
in
pop
dec
imul
pop
mov
fsubl
or
lods
int
imul
push
lcall
imul
andb
lahf
arpl
mov
out
std
cmp
cs
jl
xchg
xor
js
inc
push
loope
fs
mov
mov
xor
xchg
push
ds
ret
cld
sbb
push
sbb
jecxz
add
and
push
jp
mov
ret
inc
je
pop
pop
icebp
jbe
pop
jp
mov
sahf
inc
hlt
xchg
enter
pop
add
adc
lahf
sub
push
fdivs
add
or
add
lret
and
add
pop
jno
imul
mov
aaa
cmp
pop
ds
dec
addb
call
ret
pusha
and
push
mov
out
imul
test
mov
std
addr16
mov
insb
push
out
mov
jne
call
xor
mov
sub
inc
mov
adc
gs
cwtl
andl
sub
fildll
aam
lea
out
xchg
pop
loopne
cmp
pop
das
rorl
fldcw
mov
cld
add
icebp
jne
sti
cmp
jp
sub
mov
push
mov
gs
dec
mov
das
gs
push
adc
sub
sbb
fstp
add
sbb
lods
les
cmp
jno
out
movb
enter
adc
cmp
clc
fildll
lahf
addr16
sti
lds
test
mov
stos
fbld
fwait
jo
fnstsw
mov
cmp
inc
insb
icebp
jno
mov
rclb
ja
cmp
jmp
fnsave
sbb
push
jge
push
ja,pn
imul
fists
jns
pop
or
sub
scas
adc
add
and
ja
addr16
out
cld
shrd
and
mov
addb
push
mov
push
cli
test
cmp
xor
out
fisttps
mov
mov
mov
push
lahf
js
cmp
add
xchg
add
stc
out
jg
js
test
jo
sub
and
jmp
sbb
shl
mov
push
cmp
dec
dec
lds
adc
imul
rorb
js
les
iret
push
insb
call
repnz
arpl
adc
and
js
dec
lret
movsb
jns
inc
clc
jmp
fimull
and
sbb
les
sub
pop
inc
jecxz
stc
iret
es
stos
sbb
popf
outsb
outsb
xor
sub
fildll
ficoml
enter
ds
fmulp
mov
jecxz
out
lock
sbb
sub
push
addr16
mov
sub
int3
int
in
xlat
xchg
insb
cmp
and
cmc
addr16
not
mov
leave
add
xor
repnz
inc
scas
ret
pushf
pop
xchg
enter
or
push
xchg
push
jb
sbbb
mov
pop
aaa
and
xlat
cs
mov
xor
add
movsl
fisubl
push
test
jmp
xor
dec
mov
cwtl
cltd
add
xchg
sbb
insl
addl
in
xchg
push
mov
scas
dec
ja
lret
movsl
cmpsb
popf
pop
mov
in
std
mov
sbb
lock
sbb
push
add
and
fnstenv
mov
repz
out
adc
add
xchg
test
pinsrw
mov
mov
jmp
mov
out
lds
lcall
repz
pop
xchg
add
jge
in
out
pusha
or
ja
adc
and
cmp
adc
and
or
pop
outsl
jecxz
insl
out
lahf
jl
jb
imul
cmp
outsl
bound
mov
xchg
in
mov
js
mov
mov
dec
ljmp
adc
jp
pop
fwait
lret
rorl
pop
xlat
push
sahf
pushf
das
xlat
sbb
popf
js
pop
mov
in
popf
lahf
push
mov
mov
scas
dec
mov
cld
push
out
cld
sub
fdivrs
leave
movsl
xchg
daa
jmp
jmp
cli
aas
enter
push
pop
leave
xchg
pop
fbstp
sbb
imul
sbb
stc
mov
dec
cmpsb
inc
fildll
sahf
fildl
xor
inc
push
mov
out
shrb
leave
sbb
mov
xor
out
arpl
out
add
out
and
mov
and
push
dec
js
dec
mov
xlat
pop
gs
stos
movsl
mov
bound
icebp
pop
mov
sub
mov
sub
and
je
shrl
ljmp
push
cwtl
inc
fadd
sub
xor
adc
aaa
or
imul
fcomp
mov
xchg
pop
flds
popf
jo
xchg
inc
mov
mov
mov
inc
and
imul
mov
or
aad
sbb
popa
xor
out
insl
or
push
sti
shrl
xor
jae
je
mov
jbe
sbb
cmpsb
sbb
add
addr16
mov
push
fisttps
jb
jno
loop
movsb
je
in
sub
mov
icebp
mov
mov
into
loope
xchg
flds
mov
mov
and
xchg
inc
dec
cmpsb
push
add
fbstp
fiadds
adc
inc
jmp
jo
ja
xor
mov
xrelease
jge
out
je
xchg
test
fldt
loop
pop
ds
adc
loop
aad
jbe
adc
addr16
add
jle
sbb
sub
and
fs
mov
jl
dec
add
ja
push
dec
adc
sub
push
insb
adc
in
mov
leave
dec
loope
mov
or
mov
push
add
and
pop
ja
mov
inc
test
cmp
push
fldenv
loopne
adc
cmp
ror
jbe
jbe
ret
dec
popf
xlat
aas
cmp
cmpsl
mov
adc
sub
out
scas
mov
andl
xor
mov
xchg
push
in
xchg
and
ficoml
mov
loopne
lret
test
nop
imul
addr16
cwtl
dec
cmp
filds
adc
or
shl
inc
mov
inc
std
jge
dec
add
mov
imul
mov
add
sub
push
fcompl
xchg
dec
in
mov
and
imul
cltd
or
xchg
adc
inc
sub
mov
fisttpl
sbb
stos
fbld
xchg
orb
inc
push
ljmp
jns
inc
mov
adc
add
pop
out
pop
test
movsl
sti
cmp
dec
jo
cmp
adc
decb
push
sti
repz
int3
or
push
and
icebp
add
das
jp
push
push
mov
ffree
gs
mov
and
or
add
xchg
movsl
inc
add
sqrtps
dec
inc
and
and
sub
sub
mov
xchg
push
shll
lea
sbb
loope
sbb
mov
rcll
fstps
inc
int
push
dec
mov
das
lds
pop
outsl
push
xor
into
dec
test
out
and
out
fdivp
mov
das
inc
fistpl
add
inc
out
inc
lret
add
push
mov
test
pushf
scas
addr16
sbb
neg
cmpsl
adc
cmp
lods
jnp
or
push
push
or
popa
push
mov
out
cmpsb
inc
aad
push
fildll
out
cmp
rcl
pop
adc
push
add
sub
repnz
add
fucomi
pop
pop
cmp
jo
ljmp
icebp
or
add
adc
dec
inc
out
mov
push
push
test
test
mov
pop
or
jnp
in
push
fs
lods
jo
fisubrs
cmp
xchg
mov
or
inc
sub
sub
fcmovu
das
lret
fmuls
fidivl
lds
adc
xchg
push
repnz
push
ret
sbb
jno
addl
mov
out
or
lcall
lock
imul
jno
ror
xchg
dec
addr16
xchg
cmp
mov
mov
sti
bound
sub
sub
cld
call
fisubrl
stos
push
out
jo
int3
outsl
mov
xchg
pop
push
push
shl
hlt
jns
je
mov
and
test
js
out
pop
ret
rolb
decb
icebp
add
shll
add
pop
lock
inc
test
sub
dec
push
lcall
out
sub
sub
mov
fwait
hlt
sub
movsl
or
and
ret
sub
ret
enter
loopne
cld
push
pushf
push
data16
shrb
addr16
stos
mov
xchg
fists
es
mov
and
adc
jge
popa
out
cmpsb
rcll
pop
sbb
push
jno
sub
inc
and
fdivl
xchg
mov
stc
test
inc
dec
sub
shrb
inc
ret
gs
or
ljmp
cmp
cmpsb
and
dec
mov
fisttps
ret
mov
pop
cmp
insb
push
imul
loope
jo
fs
sbb
push
aad
push
mov
jl
mov
lds
xchg
fndisi(8087
sbb
shll
pop
js
ja
shl
mov
sbb
int3
out
mov
popf
pop
jmp
loope
xchg
mov
mov
pop
mov
mov
inc
push
loop
cmp
mov
aaa
adc
mov
jecxz
out
mov
scas
sub
rcrb
subl
push
cmp
je
ret
mov
sbb
pop
je
pop
sarl
and
add
test
dec
xorl
mov
addr16
fnstcw
inc
sub
les
rcll
add
dec
scas
and
iret
sbb
fcomip
sub
mov
xchg
scas
inc
scas
ss
mov
lock
in
out
push
inc
in
insb
imul
sti
movsb
push
mov
push
loope
lock
push
loope
call
repnz
sub
out
stos
loope
pushf
sbb
dec
icebp
inc
add
mov
sub
loop
mov
jmp
icebp
cld
stos
or
sub
dec
and
mov
das
jo
out
adc
cs
out
and
addb
adc
mov
stos
jae
aad
aam
out
mov
ficomps
out
cmp
stos
jnp
xor
je
sarl
and
or
cmpsb
and
mov
ja
pop
testb
ja
in
std
daa
fbstp
or
mov
dec
insl
inc
mulps
aam
fistpll
cld
jge
cltd
sahf
mov
mov
jmp
xor
pushf
and
jg
subl
cmp
pop
dec
bound
inc
clc
fists
leave
loope
mov
sbb
mov
jns
pop
xor
and
jp
add
cmp
mull
in
push
frstor
cmp
ret
test
sub
test
sbb
faddp
add
es
push
aas
jnp
icebp
sbb
daa
call
xlat
lret
xor
inc
pop
ljmp
pushf
push
js
cmp
mov
add
sahf
aaa
jne
add
jmp
push
sub
dec
cmp
flds
faddl
pop
mov
jp
cmp
call
lea
adc
loopne
and
lahf
xchg
clc
push
and
push
fcomps
filds
cmp
and
shlb
dec
out
mov
add
cs
fildll
pop
sub
xor
xchg
mov
push
popf
sbb
std
mov
movsb
mov
mov
mov
add
jo
les
dec
insl
es
inc
por
xorl
sbb
outsl
ja
inc
addr16
cltd
mov
test
bound
lret
add
adc
add
lret
dec
stos
and
in
add
nop
gs
dec
fistl
lock
adc
test
inc
movsl
pop
shl
cmp
fbld
mov
movsl
push
rcrl
sbb
jo
std
icebp
or
outsb
inc
test
and
testb
ss
dec
in
mov
loopne
pop
out
dec
sub
fwait
xchg
lock
or
push
cli
movsb
mov
or
dec
out
xor
push
ret
daa
jmp
test
sub
push
inc
mov
inc
lcall
in
mov
or
inc
add
mov
cmp
push
cmp
lcall
sahf
xchg
les
xchg
xlat
pop
hlt
lcall
loope
insl
sbb
jnp
xchg
lcall
add
mov
testb
pop
mov
std
daa
sbb
add
xchg
mov
mov
cmp
pop
fistpl
mov
sub
lds
dec
outsb
dec
and
jns
shlb
scas
mov
mov
dec
pushf
ficompl
cmpsb
jge
mov
int
adc
xchg
test
adc
mov
cmpsb
xchg
sbb
cmp
jmp
out
xor
adc
cmc
ret
enter
imul
outsl
stc
pop
cvtdq2ps
jmp
push
jo
inc
es
pop
lret
hlt
pop
mov
imul
push
in
popa
jb
xchg
dec
mov
or
pop
sub
outsb
cmp
pop
pop
mov
push
imul
jns
pop
lcall
add
hlt
push
stc
je
lds
insb
cmp
loopne
imul
sbb
add
jecxz
sub
ret
mov
scas
cmp
mov
jb
push
popa
imul
scas
shl
jg
call
imul
push
sub
mov
lret
or
imul
adc
mov
lock
ficomps
clc
dec
gs
scas
jae
aam
les
dec
mov
call
cmp
push
sahf
out
subl
and
stc
fmuls
cltd
jns
dec
out
repnz
movsb
ret
out
pop
mov
inc
jmp
dec
jp
out
pop
xlat
cmp
popa
adc
decb
je
mov
inc
fists
push
pushf
and
into
orb
dec
in
mov
mov
ret
xchg
fildll
mov
jecxz
push
adc
loope
inc
add
mov
lds
into
inc
sub
jl
mov
fcoms
jne
sbb
hlt
sub
rcll
dec
xor
sub
mov
pop
jns
lock
scas
inc
jg
ss
ret
push
loope
lods
xor
xor
xchg
and
fildl
inc
sub
loope
ficoms
fwait
xor
addl
movsb
fdivl
mov
stos
sbb
mov
mov
cmp
idivl
sar
pop
inc
nop
stos
pop
and
out
xlat
cmp
sahf
jno
add
xchg
add
jo,pt
jmp
add
sub
out
frstor
push
popa
sub
xchg
flds
and
inc
fistps
inc
clc
xor
loop
ficoml
in
jnp
es
jmp
mov
jo
loope
lods
and
loopne
sub
sbb
aaa
and
out
pop
push
mov
mov
and
jecxz
cltd
fistpll
shlb
js
jbe
fs
xor
xchg
addr16
dec
sub
pusha
fwait
in
fs
adc
mul
add
call
pop
mov
dec
out
jge
out
sahf
mov
xor
jo
push
mov
jmp
and
mov
sbb
and
inc
std
lds
xor
push
mov
sti
push
inc
push
pushf
ror
inc
je
jecxz
jg
cmc
mov
orl
dec
popa
push
mov
jg
orl
cmpl
jge
jo
gs
and
sbb
push
sub
gs
out
xchg
jle
je
or
push
xchg
ljmp
out
shr
in
les
xchg
das
js
clc
movsl
jge
clc
in
rclb
stos
addr16
inc
mov
in
pop
sub
jle
and
cli
mov
lahf
jg
call
push
icebp
lret
push
shrl
and
xchg
mov
mov
les
shlb
es
push
mov
sub
adc
mov
xchg
dec
cmpsl
test
pop
xchg
and
call
mov
pop
sti
mov
sbb
cmp
loop
scas
xor
out
push
ret
sub
ss
rorl
in
out
movsl
cmpsl
add
push
nop
add
rolb
loop
sub
loope
xchg
add
filds
ret
sahf
in
jmp
xor
xchg
in
mov
xchg
inc
sub
xchg
cmp
mov
inc
push
jbe
adc
mov
mov
xlat
dec
pop
stc
ret
out
scas
out
sub
mov
dec
xchg
movsb
icebp
mov
rcll
push
out
test
mov
and
cwtl
xor
push
lahf
mov
addr16
enter
nop
imul
inc
out
shlb
push
push
repnz
out
cmp
outsb
es
sub
push
ret
dec
scas
cs
imul
pusha
mov
fchs
dec
add
mov
jno
push
sahf
xchg
out
pop
arpl
test
int
das
sub
lods
jne
loop
jg
sbb
push
or
imul
pop
pop
mov
cmp
mov
add
js
mov
inc
gs
sbbb
imul
gs
sbb
xchg
imul
push
and
jl
xchg
pop
cmpsl
push
popa
mov
clc
add
roll
imul
push
xor
and
insl
imul
xor
cwtl
shlb
xchg
push
mov
lock
pushf
or
and
out
jno
jle
or
dec
imul
xlat
mov
out
mov
repz
sub
mov
pop
jmp
insb
jne
mov
pop
push
stos
fldenv
jmp
mov
lock
divb
imul
xor
cmp
push
xor
push
fs
lods
mov
xor
rcr
cld
dec
imul
movsl
mov
dec
push
neg
xor
dec
push
gs
inc
mov
lods
cmp
stc
clc
ds
jg
mov
pop
push
in
test
ja
shr
sub
adc
gs
call
xor
mov
xchg
lahf
cmp
add
dec
cmp
jae
xchg
lods
imul
xchg
push
cmp
movsb
push
mov
mov
cmp
in
sbb
jbe
imul
lds
jno
clc
inc
inc
imul
fwait
xchg
imul
test
mov
out
mov
std
sub
mov
adc
xor
bound
popa
cmp
js
add
push
sbb
inc
int
pop
dec
packssdw
fsubrs
shl
push
imul
stos
test
sub
jbe
lds
pop
fnstcw
scas
mov
inc
push
lods
push
dec
outsl
je
hlt
cli
les
dec
lock
rcrl
mov
cmp
push
daa
push
add
add
sbb
push
in
sub
mov
mov
jg
test
jbe
xor
dec
cmpsb
imul
mov
imul
clc
dec
pop
xor
lods
jno
pop
repz
mov
ljmp
out
mov
movsl
imul
imull
add
adc
pushf
sbb
sbbb
gs
test
arpl
notb
push
xor
dec
mov
xchg
sbb
popf
jp
sub
pop
dec
test
jmp
jp
lcall
test
sub
jle
mov
or
xor
lahf
push
push
push
nop
sub
xchg
insl
sub
or
sbb
test
inc
sarb
cmp
mov
int3
mov
pop
mov
push
ss
lcall
dec
push
in
add
out
mov
inc
dec
push
imul
fwait
add
imul
lea
imul
fsubs
pop
mov
andl
xor
fsubrl
adc
call
mov
and
mov
out
mov
mov
pushf
adc
push
in
insl
mov
imul
mov
cmc
mov
out
mov
jecxz
lea
sbbl
outsb
dec
popa
lahf
mov
loope
addr16
mov
push
ss
inc
dec
sbb
dec
xor
jge
push
lret
xor
cmp
pop
push
insb
out
or
jg
out
inc
int3
add
sbb
xor
mov
mov
inc
std
sahf
ljmp
add
push
mov
inc
cmp
ds
add
outsb
or
jno
mov
sub
pusha
stc
cltd
mov
sub
jmp
xchg
imul
hlt
push
in
push
pop
imul
add
imul
in
adc
pop
sti
test
inc
mov
loopne
aam
sub
popf
jb
sub
stc
repz
fildll
daa
popa
cli
out
push
push
mov
xor
cmpsl
js
xrelease
xor
jle
dec
sub
clc
out
imul
cs
arpl
in
add
bnd
jbe
decl
sbb
imul
lret
imul
push
out
push
jae
mov
inc
pushf
fisubrs
sbb
aas
xchg
mov
in
ljmp
hlt
pop
push
inc
fwait
imul
push
cwtl
imul
shrb
xor
or
int
cwtl
mov
dec
cli
mov
add
lock
imul
push
mov
inc
xor
aad
adc
mov
outsl
sub
loopne
imul
jmp
and
aaa
push
push
push
adc
xchg
sbb
dec
push
in
or
jmp
xchg
sub
jo
imul
fildl
dec
sub
enter
cmp
imul
push
inc
stc
cmpsl
fld
xor
jmp
xor
mov
ja
and
fbstp
sub
imul
out
dec
imul
les
sti
call
lds
jo
scas
fdivl
adc
je
sbb
les
jbe
dec
js
pop
jnp
cmp
xlat
in
ficomps
mov
push
outsb
repz
sbb
add
xorl
inc
push
xlat
imul
call
xchg
mov
aas
jnp
mov
jne
shrb
jne
mov
imul
push
xchg
mov
add
adc
mov
ja
subl
mov
mov
lock
pop
dec
aaa
fisubrl
dec
adc
adc
xor
stc
shlb
and
out
or
lea
cltd
js
enter
loopne
dec
inc
adc
jb
sub
cmp
aam
xchg
push
ljmp
inc
cmp
push
jno
imul
adcb
dec
sub
imul
fidivs
imul
insb
aam
mov
push
cld
imul
mov
inc
sbb
push
imul
adcb
test
pushl
inc
jle
adc
pop
xchg
clc
push
cmp
jbe
sahf
imul
push
out
popa
out
add
push
cmp
in
cmp
jns
mov
cli
mov
push
stc
inc
std
dec
ljmp
aad
imul
xorl
sbbb
sbb
scas
shlb
and
mov
jb
ret
js
enter
cmc
stos
lret
push
jno
pop
fbstp
ljmp
daa
adc
sarb
rclb
sbb
jo
dec
dec
in
pop
or
cmp
push
imul
fldl
xchg
cmp
cltd
daa
pop
dec
cmc
cmpsb
mov
aas
subl
in
mov
pop
dec
imul
scas
stos
xor
sub
and
pushf
shll
pop
mov
xlat
mov
outsl
in
xor
lret
jne
add
sbb
sbbb
nop
scas
aad
inc
loopne
test
pop
insl
jge
mov
imul
mov
xchg
ljmp
sub
pop
sub
push
stos
xor
xor
xchg
mov
or
in
inc
imul
adc
popa
imul
stos
mov
in
or
in
xchg
icebp
and
and
push
fstps
sub
xor
cmpl
jl
imul
imul
mov
imul
aaa
ds
imul
imul
sbb
dec
pop
pop
or
fisubs
sbb
js
mov
dec
or
les
xchg
dec
pop
aaa
xlat
mov
dec
mov
cmp
xchg
insb
and
ja
dec
scas
sub
add
scas
inc
jecxz
lret
xor
ja
xchg
imul
jmp
push
stc
dec
push
lds
xchg
xchg
imul
push
mov
push
sbbb
jno
hlt
movsb
xlat
cmp
in
leave
outsb
dec
stc
roll
ljmp
and
push
sub
xor
dec
imul
pop
imul
xchg
fildll
xor
loope
jne
mov
dec
pop
mov
pop
jmp
imul
push
popf
gs
jge
nop
aas
cmc
imul
sub
loopne
cmp
outsb
rcrb
imul
add
jbe
jne
repnz
and
push
imul
movaps
shl
stc
adc
mov
std
add
imul
orl
gs
inc
outsl
lea
aas
inc
fcomps
ja
dec
inc
out
divb
xor
outsb
and
ja
loopne
lods
in
fstps
push
scas
jl
sub
push
pop
or
ljmp
and
jl
lds
sbb
xchg
in
cmp
orl
cmc
imul
or
idivb
sarl
outsb
fwait
cs
imul
pop
mov
pop
aas
es
sti
pop
imul
push
test
adc
mov
xor
icebp
lret
dec
fidivrl
in
mov
sbb
cmpsl
adc
in
cmpl
mov
js
and
jno
ds
mov
loopne
fcmovb
imul
fistpl
jge
dec
les
repnz
jmp
pop
xchg
mov
int
push
sbb
addr16
nop
divb
cmp
shrl
push
jo
insl
sub
loopne
cltd
lea
cmp
lahf
jbe
cld
mov
ss
cmpsl
dec
mov
xor
pushf
push
in
jp
scas
rdpmc
imul
in
jl
xlat
inc
imul
in
mov
sbb
insb
in
jl
jmp
imul
mov
fimuls
push
insl
mov
or
adc
push
jo
int
sub
sub
scas
cwtl
mov
out
outsl
and
push
xchg
sbb
jmp
imul
cld
repz
xchg
or
mov
insb
sub
mov
in
or
in
inc
xor
lock
sub
lcall
ds
and
mov
cmp
ret
sub
dec
dec
pop
sub
add
dec
pop
xorl
aaa
push
gs
hlt
pop
jns
mov
or
xor
pushf
adc
sub
cmpsb
lret
xchg
ljmp
loope
out
bound
stc
sub
outsl
mov
mov
cmp
dec
push
test
push
add
mov
mov
sub
lret
inc
pop
data16
inc
ljmp
insl
in
push
lret
fimuls
sub
xchg
mov
add
mov
jno
and
jae
cmpsb
pop
or
ljmp
xchg
inc
out
inc
inc
lea
sbb
mov
push
mov
rolb
mov
outsb
insb
test
or
outsl
test
mov
test
adcb
inc
frstor
rorl
shlb
icebp
push
dec
stc
mov
push
cmp
sub
clc
or
mov
jnp
in
fists
mov
inc
mov
js
aam
xor
popf
mov
add
and
mov
inc
mov
cli
dec
jo
cmp
mov
inc
sbb
or
das
adc
xchg
mov
aaa
lret
incb
mov
xchg
das
inc
ficompl
ss
test
inc
test
imul
adc
das
mov
fidivrl
pop
lret
sarb
lcall
sub
in
popa
fs
mov
ficompl
mov
lea
aaa
inc
outsl
jb
sub
ficompl
outsb
mov
test
fwait
ljmp
lret
fsubrs
adc
mov
cmp
dec
sub
push
shrb
test
fisubrl
inc
cwtl
lar
cmp
mov
mov
jno
shlb
push
push
pop
sbb
test
outsb
pop
mov
rorl
sub
outsl
sbb
or
imul
fiaddl
cmp
imull
inc
jne
fldenv
push
jo
stc
lret
dec
js
inc
sti
push
sbb
mov
xor
push
outsl
adc
inc
mov
arpl
dec
fisttpll
insb
fldl2e
inc
pop
test
fidivrl
mov
fsubrl
inc
push
iret
jne
xlat
mov
push
ficompl
ljmp
cld
mov
jge
xchg
add
and
divl
or
das
movsl
in
insl
sub
dec
add
imul
lcall
lock
cli
in
push
mov
jb
test
mov
inc
push
rolb
jle
mov
fmuls
adc
shlb
imul
add
pop
mov
test
add
push
cwtl
cmp
sti
fcmove
jbe
pusha
mov
sbb
test
jl
cmp
cli
or
das
dec
fcmovu
lret
dec
stos
stc
lcall
test
insb
push
sub
fdivs
pusha
fs
mov
cmp
das
xor
sub
jnp
sbb
lret
fisttps
cli
mov
dec
mov
jp
ja
cmp
clc
stos
xor
xlat
ficompl
es
pop
jne
lds
in
pop
call
pop
inc
jge
rorb
add
cmp
lret
ljmp
lahf
push
push
test
add
cli
lods
fstp
insb
inc
ljmp
lret
jns
pop
stos
test
lret
inc
fs
push
fimull
lret
jg
cmp
icebp
test
inc
cmp
dec
inc
mov
fimull
cmp
mov
sub
ljmp
bound
adc
lret
sbb
enter
xor
call
dec
test
pop
roll
dec
add
lods
push
lret
in
fwait
sub
sbb
sbb
cltd
add
add
int3
addr16
adc
inc
or
jle
xor
test
jae
mov
aad
inc
ljmp
pop
not
adc
mov
das
shr
scas
dec
jo
ficompl
or
and
fcmovb
in
mov
xchg
mov
aas
cmp
stos
add
lcall
test
pop
sbb
in
clc
pop
inc
mov
dec
pop
cmp
sbb
sbb
adc
stc
movsb
ljmp
inc
lret
xchg
es
lcall
inc
and
imul
fisttpll
lds
outsl
xchg
cltd
cmp
cmc
push
addr16
sbb
or
cmp
stos
mov
in
in
popa
adc
dec
stos
fstl
pop
ret
sbb
sbb
fildll
pop
mov
cli
ljmpw
in
movsl
pop
mov
in
adc
inc
xor
mov
dec
jb
in
jmp
addr16
xchg
and
adc
sub
sbb
or
aam
outsl
fidivl
repnz
std
lret
dec
fisubrl
push
test
lahf
dec
clc
mov
iret
add
push
and
bound
sub
in
mov
sti
xchg
push
sub
jmp
lds
into
aas
jno
ljmp
adc
call
xchg
inc
stos
inc
shrl
mov
icebp
mov
push
inc
jae
pop
addr16
pop
test
in
out
sub
mov
mov
das
inc
mov
pushf
mov
test
data16
push
pop
mov
push
xchg
les
lcall
fstpl
cli
lea
push
inc
rcr
adc
dec
movsb
pushf
test
das
xchg
out
cmpsl
fidivl
mov
cmpsl
icebp
test
outsl
mov
mov
test
inc
push
lcall
dec
add
or
imul
add
add
rorb
cli
sub
push
shl
jb
push
btc
cmp
btc
movsbl
push
btr
xchg
mov
or
mov
shl
shl
jmp
lea
jae
push
call
mov
inc
jl
mov
scas
cmpsl
mov
adc
sub
stc
add
and
out
mov
gs
lock
jo
mov
push
nopl
addb
rolb
mov
cmp
cwtl
jb
test
add
xor
push
inc
push
sub
pop
adc
sbb
cli
aaa
mov
jbe
repz
cli
dec
outsl
dec
jmp
imul
and
test
and
popf
mov
push
sbb
jo
fstl
mov
cltd
addr16
les
ret
ds
xchg
xchg
cmpsl
pop
jb
bnd
cltd
cmp
push
push
aad
sub
loop
xlat
xor
mov
pop
inc
lahf
xor
jb
pop
stos
mov
stos
fadd
inc
scas
orl
jecxz
mov
mov
jbe
or
pop
pop
iret
stc
in
cli
and
sub
lods
cld
add
out
sub
sub
in
insl
fldt
dec
ljmp
xchg
iret
cmp
fs
jl
push
pusha
lea
jmp
cmp
enter
and
push
vmaxpd
xchg
fwait
dec
rolb
pop
repnz
pop
adcl
cmpb
lods
addr16
hlt
hlt
or
pop
cmp
outsb
mov
inc
fstps
and
lcall
pop
dec
cmp
xchg
test
xor
pushl
dec
mov
mov
arpl
scas
pop
jne
push
fsubrs
lret
inc
daa
les
sbb
fisttpl
orb
or
pushf
lea
je
aam
dec
aad
xor
adc
bswap
btc
cmp
mov
das
bsf
and
mov
movsbw
setb
shr
sub
shrd
btr
movzbw
mov
call
cmp
push
jmp
movb
call
inc
lea
jmp
pushf
lea
call
pushf
mov
lea
jae
bt
xor
call
movb
jmp
mov
or
adc
pusha
lock
clc
test
jno
cmp
ds
jmp
pop
and
sbb
out
or
add
sbb
adc
jne
mov
sbb
add
push
sahf
dec
cmp
inc
fstl
lea
cltd
inc
sub
daa
lds
sub
call
ljmp
loope
loopne
sub
pop
mov
mov
sbb
push
hlt
in
mov
add
xor
sbbl
dec
repnz
fisttpll
es
xchg
xor
orl
popf
dec
adc
std
sti
stc
mov
mov
jmp
sbb
adc
jb,pn
clc
imul
push
xor
shll
mov
mov
movb
sbb
xchg
xor
out
mov
aaa
inc
xchg
push
mov
orl
mov
ds
sti
in
push
push
jno
daa
movb
das
call
mov
lea
je
push
bt
cmp
add
bt
pusha
cmp
push
mov
lea
jp
pushf
lea
jb
clc
clc
cmc
cmp
push
pushf
pushf
lea
jae
push
mov
pusha
lea
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
inc
fcoml
js
scas
push
inc
shlb
push
mov
mov
sub
dec
pop
dec
jg
stos
adc
fmull
pushf
fildl
stos
jbe
jge
ljmp
jl
ficomps
jns
lods
cli
lcall
xor
test
shll
adc
fldenv
outsb
cmp
fs
inc
xchg
dec
or
sahf
loop
int3
iret
insb
scas
loopne
sub
push
js
xchg
scas
daa
or
inc
daa
pop
jl
add
push
inc
cmp
sar
jmp
add
inc
gs
outsl
fs
gs
imul
add
daa
loope
repz
inc
rolb
xor
inc
cld
test
and
out
std
pop
sbbb
sbb
test
leave
sbb
jmp
adc
xorl
pop
mov
sbb
jle
outsl
lea
fs
inc
lcall
jmp
sbb
dec
mov
sti
leave
push
fistpl
push
or
xor
jmp
test
test
stc
sub
test
cmp
push
call
in
cmp
stos
out
xchg
cmp
mov
dec
test
movsb
icebp
das
mov
jnp
xchg
mov
in
adc
push
fwait
cld
cmpsb
jbe
xchg
or
sbb
dec
sub
cltd
pop
ljmp
inc
daa
enter
pushf
pusha
movl
mov
pusha
call
inc
movb
jmp
mov
or
pushf
lea
je
seto
mov
lea
lahf
call
pusha
lea
call
jmp
sti
shl
mov
int3
js
xchg
imul
rcr
std
cmp
jge
jle
repnz
push
mov
jecxz
jg
ljmp
jbe
lds
mul
mov
loop
and
add
push
fmulp
clc
dec
test
pushf
sub
push
pop
cmpsb
inc
addb
daa
leave
xchg
into
rorb
mov
call
shr
lahf
pushl
cmpb
jecxz
ja
jnp
in
dec
mov
outsb
xor
lret
es
cmp
loop
mov
addr16
mov
cmp
or
imull
enter
mov
push
xchg
fs
inc
in
cwtl
es
adc
leave
pop
leave
xchg
movl
push
movb
pushf
push
lea
jmp
arpl
and
repnz
dec
testl
gs
and
xchg
lcall
in
xchg
pop
cmpsb
inc
jl
jb
and
icebp
add
mov
sub
lret
xchg
sub
inc
lock
out
jns
pop
cld
mov
out
or
xor
hlt
add
xlat
and
mov
ja
dec
jmp
xchg
xchg
sarb
push
cmc
cltd
mov
dec
dec
adc
cmp
inc
daa
lret
inc
jmp
push
push
movl
call
push
call
push
jl
test
cmp
les
test
mov
dec
pop
mov
mov
and
xor
cmp
insl
mov
jno
and
pop
mov
jb
xchg
pop
pop
xchg
fidivl
addb
jmp
dec
nop
sub
push
add
mov
cmp
lahf
lahf
imulb
lret
inc
xchg
icebp
sbb
xchg
fs
inc
jne
mov
xlat
leave
mov
push
andl
subl
mov
inc
inc
daa
leave
shr
dec
and
daa
lcall
jge
mov
mov
pusha
repnz
into
lock
xor
lcall
pusha
jbe
nop
ds
mov
jnp
mov
push
jo
test
cmpsl
lcall
ljmpw
dec
scas
jl
lcall
jnp
adc
mov
pop
lcall
push
rclb
jl
lcall
jg
mov
mov
jnp
lret
sbb
jl
lcall
jl
scas
ss
xchg
and
test
inc
gs
push
hlt
mov
jnp
mov
push
jo
mov
jl
cmp
nop
in
xorb
push
inc
xchg
pop
pusha
test
cmpsl
lcall
jp
leave
fcmovu
cwtl
daa
es
lcall
jp
lods
js
mov
es
pop
lcall
jp
arpl
jnp
push
es
lcall
jge
sub
das
push
mov
jnp
ljmp
cmpsl
lcall
pusha
ss
movsb
jl
lcall
jle
test
mov
adc
xchg
push
in
inc
test
pusha
sub
stc
repz
je
cmpsl
lcall
imul
es
adc
imul
jp
clc
dec
mov
daa
lcall
jnp
mov
cltd
jo
imul
bound
fbld
test
jl
sbb
pop
mov
jl
lcall
jp
mov
jl
lcall
outsl
xor
loope
test
jl
lcall
pop
pop
dec
icebp
lods
pop
mov
jp
lds
lcall
jnp
sahf
or
jl
lcall
jnp
ss
pop
clc
imul
add
and
jl
lcall
jnp
mov
sarb
icebp
adc
scas
jl
lcall
imul
xchg
jnp
mov
pop
lock
arpl
jmp
adc
mov
cmpsl
lcall
jnp
xor
cmpsb
jl
lcall
outsl
fdivp
inc
dec
insl
int3
push
jb
rcr
out
and
push
fsub
mov
scas
adc
testl
mov
in
inc
xchg
xchg
cmp
stos
and
ljmp
mov
jno
pushf
lcall
mov
dec
adc
jp
rcll
dec
mov
dec
mov
mov
int
ja
xchg
ret
aad
push
xor
and
pop
and
ja
idiv
mov
data16
lods
stc
jno
shlb
mov
iret
mov
xor
je
movsb
pushf
leave
mov
out
in
orl
jae
fistps
movsb
stos
cli
shr
negl
fisttps
cmp
addr16
adc
nop
push
and
cld
cmp
jmp
xor
sub
aaa
push
jns
inc
test
push
sub
cltd
sahf
add
aad
mov
int3
aad
fimuls
iret
insl
movsb
pop
push
fmull
add
iret
enter
jns
inc
add
adc
sub
test
or
jmp
and
and
jb
sahf
sub
das
pop
or
sub
mov
jns
sbb
inc
daa
into
sub
mov
jmp
lods
int
pop
jb
and
addl
dec
xlat
dec
stos
aam
pop
dec
lcall
dec
xchg
mov
adc
repz
aas
nop
dec
add
adc
inc
pushf
pop
or
mov
es
dec
add
addr16
cmp
sub
repz
sbb
or
jne
pop
shlb
mov
repnz
daa
into
inc
ds
pusha
pushl
cmc
cmc
add
push
lea
je
pushf
mov
pushl
add
pusha
lea
jmp
or
lds
mov
push
push
push
pop
xchg
mov
orl
push
cwtl
xor
dec
dec
leave
rorl
push
and
lods
mov
movsl
rol
data16
fdivrl
int3
lea
mov
lods
popf
mov
mov
pop
cli
loope
movsl
test
clc
inc
repz
out
and
xchg
jae
and
pop
fidivs
outsb
jnp
xchg
or
orl
adc
or
arpl
jns
jns
lods
stc
out
jge
rolb
pop
sub
outsb
fidivrs
lahf
int
jns
inc
lock
cmp
jmp
aad
daa
iret
gs
movsb
testb
movsb
and
push
dec
stc
rcrl
mov
outsb
nop
arpl
mov
dec
pause
das
inc
test
idivl
jle
or
sub
sbb
and
push
fwait
cmp
test
mov
push
inc
dec
lret
cmp
mov
orl
mov
pop
das
xlat
int3
add
sub
mov
mov
data16
ja
mov
into
pxor
movsb
cmpsb
das
pop
sbb
xlat
lret
add
xchg
mov
mov
dec
push
jl
lds
lcall
jns
call
ja
repnz
mov
cld
sub
pop
inc
daa
iret
in
call
add
subl
jmp
shlb
mov
pushl
cmpsl
add
dec
aas
push
jmp
shll
das
out
lods
jbe
leave
dec
inc
imul
jecxz
scas
or
jno
pop
mov
shlb
fdivs
nop
inc
test
imul
loope
add
iret
jmp
loop
stc
cmpsb
insl
jle
adcl
ret
adc
sub
cmp
in
push
adc
stc
fidivl
das
outsb
int3
cli
dec
sbb
xchg
cli
out
enter
xchg
js
insl
ret
lahf
adc
outsb
dec
ret
mov
fs
lahf
mov
push
test
and
cld
cs
ja
roll
shll
arpl
lret
nop
mov
in
cmp
cmc
sbb
mov
sub
sahf
sbb
test
or
mov
sarb
xchg
sahf
sub
mov
jns
aas
lsl
pop
test
or
in
pop
inc
inc
jle
or
lds
inc
xchg
stc
xchg
sti
icebp
push
pushf
sbb
jnp
push
ja
fmuls
arpl
jge
mov
loope
fstpl
xchg
inc
pusha
or
inc
fldt
in
lcall
lahf
pop
jns
int3
adc
fucomip
and
hlt
jl
and
mov
lahf
imul
loop
pop
jnp
push
inc
daa
shl
add
adc
movsb
and
out
outsb
xor
jo
mov
cmpsl
movsl
mov
out
movsl
jecxz
lods
std
sub
icebp
data16
test
mov
push
xor
stos
bound
mov
xor
push
or
fdivs
adc
push
mov
jmp
fmull
insl
movsb
and
outsl
mov
fimuls
stos
and
sub
dec
xchg
out
mov
mov
pminub
push
mov
test
cwtl
test
outsl
push
xor
push
adc
ret
repnz
mov
insb
jge
sahf
sti
enter
mov
daa
rolb
fwait
test
push
call
and
stc
stc
add
pushf
push
lea
jmp
pushf
bswap
movzbw
mov
setl
seta
lea
mov
pusha
mov
movb
call
arpl
sbb
xor
jle
lock
push
inc
or
test
pop
push
icebp
lea
popf
inc
adc
or
add
enter
outsl
std
jb
lods
cmp
lahf
leave
inc
cmpsl
lds
mov
cmpsl
icebp
push
jne
mov
or
lcall
hlt
fmuls
mov
out
popf
mov
leave
stos
loope
lret
adc
popf
sbb
outsb
mov
jne
and
add
xchg
jmp
adc
add
aas
in
loopne
mov
lret
jecxz
jne
int3
push
js
add
or
xchg
sbb
shl
sti
test
add
cmp
fidivrs
push
pop
mov
addr16
mov
inc
daa
sarb
and
or
repz
inc
and
call
popl
movl
movl
mov
pushl
ret
movw
pushf
jmp
not
inc
call
idivb
shrl
bound
test
out
or
mov
jp
xlat
fisubrs
sbb
mov
movsb
pop
add
sbb
mov
aad
lock
mov
mov
cltd
mov
js
jg
xchg
pop
cmp
rcll
jno
ja
dec
add
lods
and
gs
cmp
cmp
and
cltd
mov
cmp
xchg
lds
pop
sub
daa
aam
adc
fs
jae
pushf
pusha
pusha
pushf
lea
jne
jmp
jae
pusha
pushl
mov
movl
pusha
movb
call
call
lea
lea
add
sub
and
das
ror
push
adc
push
test
setne
push
bswap
sub
pushf
pusha
lea
call
std
push
dec
ja
xor
xchg
or
pop
mov
sbb
inc
in
pop
bound
sub
lds
cwtl
cmc
adc
push
int
cld
shrl
fildll
jmp
int3
inc
jbe
push
jbe
call
lret
jne
clc
cmp
jo
push
andb
outsl
in
push
ret
shr
push
loopne
ss
and
add
mov
lahf
movsl
in
imul
dec
popf
leave
adc
ror
inc
daa
aad
jge
stos
movw
lea
jmp
fsubrl
ja
dec
cmpsb
das
popf
rcl
fwait
sbb
adc
cs
mov
idivb
ja
push
cltd
push
lds
rcrb
push
cltd
jmp
cmc
mov
ds
cltd
and
loope
inc
mov
xchg
xchg
jo
stc
sbb
daa
aad
adc
lret
call
in
hlt
aad
shl
pop
add
jle
push
fcmovbe
add
test
sbb
cwtl
lret
xor
xlat
and
sub
repz
je
ss
inc
aad
pcmpgtb
hlt
xchg
ret
mov
out
sub
fmul
cmpsl
int3
test
movsb
or
inc
fs
xor
inc
rcrb
int3
std
pop
iret
adc
popf
gs
dec
adc
movb
daa
aad
int
pusha
mov
inc
setl
mov
pushl
lea
call
pushf
mov
adc
jmp
loope
fs
mov
cmp
push
push
sub
jecxz
dec
adc
dec
jge
addr16
pop
and
out
xchg
movsl
ret
add
sub
adc
inc
inc
mulb
hlt
divb
xor
cmp
jne
xchg
xchg
sbb
pop
xor
std
aaa
inc
pop
jp
and
mov
cmc
inc
fs
pop
cld
mov
push
faddp
sbb
lods
movsl
dec
sbb
cmpl
mov
and
dec
jne
cmpsb
lds
adc
out
adc
mov
pop
jge
lock
jb
jmp
pop
mov
hlt
mov
sbb
arpl
pop
imulb
aad
cmpl
in
lock
mov
daa
mov
aam
jae
dec
cmpsb
jno
subl
or
pop
or
scas
push
fnstcw
into
pop
fiadds
fmul
movb
clc
jl
push
stos
fsts
inc
repnz
aam
adc
pushf
sub
mov
inc
xchg
add
add
mov
cmp
ljmp
cmpsl
cmp
and
bound
in
xor
push
addb
notb
mov
inc
and
push
xor
pushl
pushl
lea
jmp
pop
inc
jb
jge
sub
sub
cmp
jmp
sub
xor
jg
jmp
add
lcall
and
ds
addl
xor
nop
mov
xchg
sub
xchg
fimuls
xor
mov
pop
and
mov
divl
pop
sbb
loopne
xchg
pop
pusha
shll
mov
jb
int3
lahf
ss
or
ret
dec
lahf
in
je
add
ljmp
mov
mov
or
ficomps
jmp
xchg
std
push
in
jl
movsl
dec
in
aad
call
push
sarl
pop
mov
testl
and
mov
test
in
mov
dec
lret
scas
lahf
in
iret
jmp
adc
js
xor
push
pushl
movl
lea
call
pushf
mov
jmp
call
int3
fsubl
out
mulb
cmc
cli
xchg
xchg
lock
lds
stos
mov
and
xchg
push
dec
sbb
es
outsl
xchg
ja
adc
flds
lds
inc
popf
fildll
push
mov
sbb
sahf
mov
lcall
xchg
add
xchg
fs
xor
stos
cmp
nop
test
xchg
and
inc
pop
arpl
fdiv
adc
lea
call
pusha
movb
call
mov
rcr
xor
add
neg
and
pop
xor
shr
bts
bts
sub
add
mov
xor
movzbw
ror
btr
add
movzbl
pushf
bswap
mov
pushf
pushf
pusha
mov
movb
call
xor
dec
pop
adc
sbb
xchg
sub
rcl
into
test
sahf
xor
xchg
loop
xchg
mov
push
sbb
mov
cmpsb
pushl
inc
jle
gs
jns
xchg
push
jg
pop
loopne
lea
jmp
test
add
sahf
out
pop
repz
adc
cmp
mov
movups
lock
sbb
cmp
pop
dec
adc
enter
jno
inc
inc
daa
ficoml
mov
push
lea
call
pusha
adc
pusha
lea
jae
jmp
jae
add
lock
push
cmp
call
sbb
in
inc
adc
popf
stc
push
mov
mov
cmp
and
jmp
shrl
cmpsl
xchg
data16
lret
or
inc
daa
push
jbe
push
mov
pushf
pushf
push
pushl
ret
movl
movw
mov
mov
pushf
lea
jmp
inc
adc
aas
icebp
sbb
in
shl
sub
cvtpi2ps
mov
inc
jmp
inc
out
ss
ffreep
sbbl
mov
add
outsl
inc
inc
in
pop
imul
mov
ds
lahf
jae
mov
test
ss
rclb
les
mov
mov
std
adc
es
out
mov
call
shlb
xchg
movl
movb
pushf
push
lea
jmp
call
pop
push
pop
outsb
xor
into
inc
enter
dec
repz
outsl
lret
or
in
ret
mov
testb
and
push
pop
xlat
cltd
iret
jecxz
addr16
repz
inc
aam
enter
inc
loopne
and
mov
sahf
popa
inc
daa
fcomi
mov
and
movsb
cs
mov
fidivs
and
aam
inc
fistl
in
imul
push
test
xchg
inc
pop
pop
repz
ja
in
xor
cmpsb
xor
fnstsw
and
jbe
xor
pop
dec
in
loop
int3
or
xchg
push
lea
daa
add
mov
jae
lahf
dec
fstpt
aad
daa
inc
xor
out
dec
dec
bound
cmp
pop
cs
negb
inc
mov
aad
mov
sub
lods
mov
jmp
sub
add
fs
cmp
lret
es
test
adc
jmp
sub
push
int3
inc
daa
fldl
fldenv
fstp
jne
mov
lahf
dec
hlt
mov
xor
std
int3
scas
ljmp
mov
faddl
sub
inc
push
lds
add
inc
test
rcl
jb
fstpl
mov
and
arpl
pop
jns
inc
daa
fldl
xor
inc
and
icebp
lcall
or
popf
lahf
or
dec
bound
mov
pop
and
add
outsl
in
inc
and
lock
aas
and
mov
or
jle
outsl
mov
ret
mov
aad
lods
and
inc
and
fsubp
push
mov
sbb
adc
sbb
add
and
ljmp
jg
fnstcw
dec
adc
sbb
inc
daa
fidivrs
inc
xor
mov
lea
pop
rolb
movsl
jle
ss
mov
or
push
popa
mov
std
sti
and
scas
es
mov
push
clc
jmp
xchg
aad
jnp
sub
adc
loop
cmc
inc
add
dec
xchg
or
push
mov
and
into
lock
je
insl
push
push
mov
outsl
sbb
icebp
xchg
push
mov
movsb
insb
inc
sub
outsb
pop
cli
jmp
mov
lahf
mov
ret
add
xchg
shl
sarl
in
inc
daa
fidivrs
cs
add
rorb
and
mov
jl
scas
loopne,pt
mov
int
dec
mov
sbb
jno
ljmp
pop
pop
xchg
inc
and
sbb
xor
cmp
inc
daa
fildll
mov
cmpl
and
mov
stos
call
mov
loop
pcmpeqw
fisubrl
adc
pop
dec
push
jo
mov
ss
into
xor
rcll
clc
outsb
adc
dec
adc
inc
aam
imul
push
mov
inc
hlt
add
subb
cmpsl
adc
xchg
push
das
enter
adc
lock
pop
hlt
pop
add
xor
fwait
dec
xchg
sbb
daa
fbld
push
lock
push
mov
inc
dec
ret
pushf
inc
cmp
cmp
int
lahf
sub
imul
xorl
mov
xorl
dec
fmuls
or
mov
push
or
mov
popf
cmp
and
out
mov
and
popf
sti
mov
and
fstpt
pop
int
sahf
fwait
push
mov
adc
out
movsl
cmc
jge
pop
fisubrs
mov
cmp
xchg
xchg
in
dec
in
repz
sub
pop
das
jmp
ja
dec
or
push
shll
add
ret
test
adc
xchg
in
int
jle
icebp
inc
mov
lahf
pushf
adc
pushf
inc
int3
lcall
je
movsb
icebp
push
dec
mov
cmp
rcr
test
in
mov
adc
adc
mov
xchg
cwtl
repnz
xor
cld
mov
mov
push
stc
adc
cli
cmp
in
cmp
mov
mov
jbe
xchg
ljmp
mov
jmp
fldt
cmp
mov
mov
icebp
xor
sbb
jo
inc
cs
cmp
pop
xor
cmp
xor
fmul
icebp
xchg
xlat
or
xchg
shrl
sub
arpl
daa
loopne
ret
rolb
dec
bt
bt
stc
cmc
rol
jmp
movzbw
mov
pusha
stc
pushf
call
pusha
lea
call
push
jmp
out
cmpsb
inc
push
mov
dec
ret
cmp
cltd
mov
in
push
inc
mov
mov
push
test
aam
xor
popf
adc
jb
fdivl
stc
jb
cmp
scas
add
jbe
jmp
lods
mov
jns
jmp
mov
movb
xchg
icebp
jmp
xchg
pop
add
mov
andl
pop
push
inc
daa
loopne
ljmp
lea
call
pusha
movb
jmp
jmp
lea
jb
bt
pusha
cmpb
pushf
jmp
mov
xor
je
mov
repnz
mov
sub
jle
jmp
sbb
pop
cmp
and
pop
jno
and
sbb
or
adc
pop
je
mov
je
and
shll
nop
adc
inc
add
push
and
xor
lods
cmp
jns
cld
jbe
pop
mov
outsl
inc
mov
paddb
sub
inc
or
arpl
pop
cld
shrb
test
ret
scas
lahf
mov
popa
rcl
pushf
iret
adc
push
mov
enter
daa
loop
add
add
dec
outsl
arpl
inc
jb
gs
je
or
je
das
add
movl
pushf
lea
jmp
mov
lds
jl
cmp
add
mov
fwait
mov
mov
push
xor
xchg
int
cmp
les
test
sbb
mov
aad
shl
lahf
mov
sbb
jg
inc
pop
in
mov
sahf
or
rcl
push
add
xor
pusha
mov
loop
andl
jo
jbe
dec
sbb
sbb
mov
mov
pop
stos
clc
sbb
movsb
bound
mov
pop
inc
daa
loop
out
clc
xor
jmp
xor
setge
setle
jmp
push
lea
call
jmp
push
pushf
push
pushl
lea
jae
pusha
xor
mov
lea
call
pusha
lea
jae
xchg
mov
dec
not
not
pusha
inc
jmp
cmp
push
call
call
push
lea
jne
call
movl
mov
call
pushf
jmp
cs
xor
sbb
mov
pop
leave
mov
not
out
mov
loop
movsb
movsl
add
or
std
fcomi
dec
inc
adc
push
push
shl
fsubl
movsb
dec
pop
mov
jp
xchg
les
jmp
push
mov
xchg
inc
pop
xor
popf
push
movl
jmp
mov
pusha
call
mov
cmpsb
inc
mov
int3
jne
cmpsb
ds
xchg
and
enter
and
and
loopne
out
sub
and
out
std
dec
xor
lds
imulb
in
xor
xor
pusha
xorl
aad
daa
bnd
inc
mov
sbb
scas
int3
mov
mov
out
out
cld
call
inc
ja
sahf
jo
out
add
loope
inc
push
add
mov
sbb
dec
push
lds
not
fisubrs
addr16
out
std
xchg
int
cmp
mov
push
push
pop
cmp
fs
daa
in
mov
jmp
mov
push
call
stc
cmp
sub
pushf
cmp
cwtl
jmp
push
jmp
pusha
adc
push
lea
call
jb
pushf
lea
jb
pushf
pushl
ret
xlat
nop
xchg
inc
rcrb
xchg
mov
xlat
push
lret
xchg
inc
mov
push
jae
test
das
cmc
call
mov
xchg
hlt
hlt
adc
dec
jp
cli
add
ret
mov
pop
fnstenv
lcall
xchg
leave
pop
jb
aam
lret
or
dec
fs
cs
movsb
mov
inc
scas
inc
insl
test
sti
ret
jno
fisubrl
push
addb
shr
mov
mov
sub
pop
mov
add
cmc
pusha
not
add
shl
shl
xor
sub
mov
cmp
add
jnp
pusha
test
test
pusha
call
lea
jae
pusha
pusha
lea
jne
jmp
pusha
movl
movw
mov
jmp
call
or
add
add
stos
add
add
mov
add
scas
lcall
xchg
mov
add
add
add
add
in
lcall
pushf
movl
pusha
pushf
pushl
movl
mov
lea
jmp
str
call
pushf
pusha
pusha
push
movl
movb
jmp
lea
call
pusha
mov
push
lea
jae
jmp
stc
rol
clc
pushf
bt
bt
xor
pusha
stc
bt
call
xchg
into
lods
js
inc
cmp
mov
out
xchg
psrlq
lods
sbb
dec
dec
push
and
test
cmp
shrl
sub
je
jp
dec
mov
ficoml
repnz
outsb
in
bound
push
das
and
sbb
sbb
rorb
adc
out
fmul
cs
imul
mov
dec
shlb
push
pop
out
and
movsl
pop
jle
lea
icebp
out
cmp
mov
pop
or
shrb
push
add
addr16
das
iret
hlt
cs
daa
out
xor
insb
push
ret
xchg
loope
fcoml
dec
sbb
inc
add
movsb
mov
shr
fprem1
mov
sub
shrl
push
jno
mov
mov
sbbb
lret
pop
adc
jo
fnsave
or
add
es
sub
xchg
pop
cli
sub
lea
xor
mov
repnz
xchg
pop
mov
sbb
popa
mov
mov
mov
push
divl
xorl
shlb
mov
or
or
mov
test
or
imul
into
pop
mov
in
and
insb
mov
popl
push
rcrl
int
es
adc
test
fsub
cmp
dec
xor
jns
pop
movsl
fcoml
pop
cmpsb
mov
sbb
xlat
and
loope
bswap
sbb
mov
jae
imul
pop
adc
cmovs
jbe
das
xor
popa
pop
sub
lods
insl
movsb
cmp
sti
cld
push
loop
fisubrl
mov
jbe
clc
test
inc
fisubrl
xchg
inc
jp
sarb
bound
sub
mov
movsb
in
xor
gs
cmpsb
dec
inc
imul
unpckhps
lret
imul
xor
xor
clc
dec
loop
inc
adc
shr
into
mov
call
fs
ja
rol
sbb
add
mov
inc
cmp
mov
cmc
cmp
pusha
lea
jb
cmp
cmp
jmp
push
add
inc
jp
mov
push
and
arpl
xchg
ret
dec
jne
xchg
mov
sub
ret
mov
pop
stos
in
jbe
push
insl
sbb
cli
clc
int
mov
fs
mov
xor
in
jne
pop
int3
mov
js
pushf
lock
cmp
pop
mov
mov
and
test
cli
clc
adc
addr16
add
int
pop
adc
lock
mov
mov
cs
pop
push
push
xchg
push
sbb
cli
push
xor
push
inc
stc
ds
repnz
and
inc
pop
cli
fmuls
push
popf
pusha
test
xchg
xor
enter
mov
jecxz
sbb
lcall
out
jp
hlt
call
fs
and
push
xor
inc
fistpll
fmull
dec
pop
add
cli
xchg
pusha
cmp
hlt
adc
fwait
out
int3
jl
les
push
leave
int3
adc
je
pop
cmc
jp
stos
mov
push
push
or
ljmp
ret
inc
push
pop
enter
imul
add
dec
outsl
popa
fs
imul
add
pusha
jbe
leave
jne
lcall
xchg
fistl
and
loopne
inc
xchg
das
in
rorb
cmp
dec
and
push
scas
pop
dec
add
lods
repnz
xchg
rorl
fdivl
adc
lods
int
fs
sub
push
xor
adcb
cmpsl
inc
fcomps
or
xor
mov
mov
push
inc
daa
jmp
push
mov
dec
mov
stc
clc
pop
pop
in
xor
sahf
outsb
xlat
or
loope
icebp
test
jae
inc
and
sub
in
dec
add
cmc
inc
mov
mov
nop
mov
clc
aaa
out
fwait
add
mov
push
pop
repz
call
cmp
test
sbb
lods
cli
xor
inc
daa
jmp
je
jb
arpl
jae
pushf
mov
push
push
mov
push
pushf
lea
pushf
mov
lea
not
push
not
lea
pushf
mov
pushf
pop
movsbl
lahf
movl
call
cli
dec
mov
test
adcl
das
mov
jp
or
testb
jg
and
hlt
inc
nop
in
xchg
or
popa
sub
imul
push
int3
mov
mov
iret
pop
ror
pop
mov
xchg
rcrb
xor
pop
jnp
jns
es
filds
sbb
sub
mov
inc
stos
fbld
in
pop
jbe
mov
add
adc
imul
xchg
movsl
dec
aaa
inc
test
fcomps
sbb
sbb
inc
addr16
xchg
inc
in
es
imul
lcall
xchg
sarl
fidivrl
data16
daa
out
pop
cli
adc
out
hlt
add
or
xor
out
aas
or
add
fdiv
dec
lea
je
cmp
test
pusha
cmp
call
dec
pushf
bt
xor
cmp
pushf
not
cmc
neg
call
cmp
shrd
mov
cmc
cmc
cmp
bt
and
cmc
jmp
pusha
mov
mov
mov
jmp
pushf
mov
pushf
pushf
pushf
lea
jmp
test
mov
pushf
test
push
and
clc
test
add
movb
lea
jmp
dec
push
pop
push
xor
int3
jne
sub
adc
cmp
mov
push
add
rclb
jle
add
mov
sbbl
notl
adc
lret
scas
adc
mov
xor
xor
push
aad
xchg
stos
arpl
in
mov
mov
fcoml
decl
cmp
sbb
push
add
out
jge
je
fldl
xchg
iret
in
jecxz
sub
lahf
gs
cmc
loop
mov
add
mov
push
push
jb
push
daa
sub
outsb
lcall
pop
mov
adc
or
ret
cmpsl
push
shlb
repnz
imul
ds
lret
pop
incb
sub
in
lds
mov
lea
jb
clc
test
cmp
pusha
pusha
lea
jae
pusha
pusha
lea
jmp
pop
roll
push
nop
jb
xchg
out
addr16
jl
or
pusha
mov
jmp
xor
sub
pop
insb
mov
xorl
loope,pt
inc
nop
mov
sub
xchg
inc
adc
addb
rorl
arpl
clc
movsl
jmp
pop
stos
adc
fwait
test
mov
xchg
dec
lds
das
sbb
xchg
sbb
popa
sub
adc
sti
out
insl
ljmp
daa
out
and
inc
cmp
bt
jmp
xchg
xor
in
test
mov
stc
or
pop
push
int3
enter
orl
jns
hlt
push
adc
aaa
pop
add
movsl
mov
std
mov
sub
imul
ret
cli
adc
sbb
sbb
push
xchg
sub
xchg
pop
nop
out
sbb
add
mov
xchg
inc
daa
out
and
mov
jo
dec
jne
sub
dec
out
das
pop
andb
popf
cmc
cmpxchg
sbbl
lods
add
adc
imul
faddp
stos
inc
insl
mov
lcall
jnp
and
scas
cmpl
push
fdivrl
cmp
lcall
out
idivb
fistpl
push
cwtl
popa
and
clc
mov
cmp
dec
in
repnz
jne
fmul
movsl
lret
pop
push
xor
cwtl
mov
xchg
inc
daa
lock
rcrb
movl
pushf
pusha
movl
movb
pusha
lea
jmp
out
sbb
test
jne
inc
shl
sub
lds
lock
add
mov
fidivrs
leave
in
sub
mov
sub
lret
push
popa
int
fstpl
sahf
addr16
aas
push
mov
fimull
daa
lock
or
cs
movsl
mov
int
rorl
push
lret
xchg
lea
fldl
dec
or
dec
pop
mov
cli
xor
fnstenv
ror
pop
mov
mov
inc
aam
cmp
leave
loop
mov
aam
aam
mov
mov
ret
stc
xchg
lds
cmpsl
fs
sbb
add
es
fisttpl
xorb
jb
pusha
pop
push
ljmp
ret
daa
icebp
or
inc
and
mov
pushl
mov
movb
lea
jmp
inc
in
std
pop
pop
dec
int
shlb
mov
dec
ret
pushl
test
xchg
mov
arpl
bound
addr16
jg
pop
mov
pop
mov
xor
push
xchg
xadd
push
jne
add
and
adc
and
or
les
in
sahf
pushf
push
cmpsb
scas
xchg
push
mov
push
orl
lods
xor
inc
jl
out
mov
cmc
sub
add
in
lahf
dec
mov
mov
sbb
in
push
cmpsl
negb
ret
clc
dec
inc
in
push
and
clc
adc
and
ret
pushl
bt
add
cmp
pushf
movzwl
sub
bts
call
jmp
bts
aam
mov
clc
shl
push
lea
je
pushf
mov
pushf
xchg
pushf
jmp
add
dec
gs
popa
addr16
outsl
js
add
test
call
mov
movb
lea
jmp
stos
jmp
sub
fcoms
pop
divl
cmc
aas
int
push
fiaddl
sbb
dec
mov
loopne
aas
out
sbb
jmp
sbb
mov
cli
adc
jno
xchg
or
insl
clc
out
ficoms
fwait
sahf
pop
cmp
sbb
lds
xchg
adc
imul
rcrl
sbbb
in
lods
dec
data16
stc
xchg
jno
repnz
std
adc
mov
xor
pushf
jmp
out
add
pop
mov
push
dec
cmpb
xchg
pop
cmp
aad
lret
dec
mov
or
lret
xor
jb
xchg
mov
jo
inc
daa
repnz
mull
cmc
push
movb
or
pusha
push
lea
jne
push
sub
mov
bt
call
pop
pushf
pusha
pushf
pushf
call
movb
lea
je
cmp
sub
cmc
test
cmp
cmp
push
pusha
lea
ja
cmc
call
repz
in
jae
mov
xor
jb
fs
inc
in
xchg
pop
push
xchg
jmp
shll
ds
leave
cli
mov
push
mov
jle
out
out
outsb
mov
aad
ret
bound
icebp
mov
call
mov
lcall
fs
pop
outsl
xchg
pop
fcoml
out
add
loope
cs
or
fnsetpm(287
sbb
daa
hlt
jnp
ret
mov
jmp
std
mov
inc
add
lcall
sbb
mov
or
xchg
repnz
fiaddl
pop
or
pop
xor
inc
jo
das
xchg
mov
cmp
and
pop
lret
sti
and
fidivs
adc
mov
adc
retw
sub
push
lret
shll
mov
add
in
sub
mov
daa
test
cmp
adc
fnstenv
test
insl
fcoml
mulb
cli
and
js
cmp
incl
xor
pop
mov
mov
add
adc
movsb
rcr
mov
sarl
cltd
pop
dec
push
mov
push
or
or
push
cmpsb
xchg
dec
xchg
ds
xchg
sub
stos
jp
pop
std
scas
lahf
les
fwait
mov
cmpsb
decl
fscale
insb
xor
inc
daa
repz
hlt
or
mov
into
ficoms
inc
push
cmpsl
xchg
mov
lret
ror
mov
repnz
leave
xchg
xor
xlat
in
adc
inc
xor
repnz
shr
ret
test
sbb
inc
add
fistps
mov
fildl
mov
mov
adc
jl
cld
cmp
xchg
mov
fs
adc
cmp
sub
ret
stos
rolb
bound
xlat
pusha
sbb
cmc
jle
fldcw
not
pushf
not
mov
lea
jmp
pusha
pushl
test
push
jmp
pusha
lea
ja
dec
ja
inc
inc
push
mov
pushf
pushf
inc
add
sbb
xchg
pushf
dec
sar
mov
shl
shl
rcr
sbb
mov
sub
pusha
cmc
bt
pusha
xchg
sar
bsr
mov
test
sub
push
push
jmp
nop
pushf
lcall
mov
in
pop
jnp
icebp
cmp
mov
and
adc
jg
mov
loop
aam
sub
push
es
jp
push
scas
nop
push
sub
in
add
daa
negb
sub
mov
subl
push
fs
loop
dec
inc
ds
jmp
push
scas
loope
and
xchg
and
int
lds
sti
adc
movsl
push
or
ret
add
adc
mov
xor
cmp
mov
inc
ret
sub
divl
fnstsw
add
mov
nop
jecxz
add
rol
jl
mov
rorb
mov
bound
xchg
sbb
iret
in
inc
dec
call
inc
adc
int3
jne
data16
xchg
mov
cmpsb
pop
xor
mov
loopne
lods
scas
cmp
nop
mov
adc
and
sub
push
inc
jnp
decb
xor
sub
dec
cmp
in
shlb
movsb
inc
daa
divl
jecxz
jno
aas
or
sbb
or
push
adc
jge
leave
xchg
in
pop
movsl
and
gs
and
inc
loope
arpl
lcall
das
fwait
sub
cmp
xchg
repz
xchg
jecxz
imul
and
lcall
sub
pusha
bound
jne
mov
xchg
shrb
test
gs
lahf
scas
push
pop
sbb
fsubrs
je
test
insl
inc
daa
test
or
je
add
inc
and
js
dec
stos
pushf
pushf
movw
mov
lea
jmp
pop
test
rcr
push
push
adc
in
xor
sbb
dec
fcmovbe
shlb
cmp
test
mov
in
dec
cld
inc
aam
sarl
pop
test
mov
add
inc
outsb
jp
add
push
push
push
cmp
outsb
push
adc
scas
mov
jne
mov
add
add
por
xor
dec
in
sbb
adc
adc
xchg
in
data16
ljmp
lea
jne
pushf
stos
push
lea
jmp
add
test
stc
stc
add
call
xchg
xor
jb
mov
xor
popf
xchg
pop
jae
mov
cmp
fwait
lods
mov
adc
sbb
sbb
jp
jae
add
aam
dec
je
xor
fsubrs
fdivs
blcs
repz
sub
xchg
adc
fldenv
mov
dec
icebp
insb
add
mov
push
jb
cmp
jae
test
jns
inc
daa
stc
popf
dec
out
sub
push
stc
dec
push
mov
add
jg
addr16
pop
mov
aad
scas
sbb
stc
or
call
enter
inc
pop
shrb
sbb
data16
andl
clc
imulb
and
jae
stc
xor
jbe
call
jp
pusha
movb
lea
jae
jmp
out
pop
pop
or
or
mov
pushf
mov
out
cltd
jno
xor
mov
scas
or
movsl
add
mov
pop
hlt
rolb
adc
sti
dec
xor
jl
ds
mov
pop
push
lods
push
inc
ss
mov
jns
add
xor
cwtl
add
xor
cmp
clc
gs
inc
daa
stc
jge
jecxz
inc
and
dec
ret
dec
jno
mov
pushf
lea
jmp
xchg
adc
int
add
push
mov
cwtl
mov
cs
push
shrb
mov
xchg
cs
or
cmp
adc
push
in
mov
mov
pop
adc
rorb
jle
dec
popf
mov
pop
aad
fnsave
in
sbb
loopne
push
test
daa
cli
adc
stos
lea
ja
cmc
stc
call
mov
jmp
lea
jne
add
mov
pusha
pusha
add
stc
movzwl
cmp
mov
jmp
jmp
in
call
push
cmc
imul
jbe
pop
adc
cmp
fiaddl
cld
pop
mov
popf
mov
loopne
inc
lods
data16
jl
sbb
fistpl
movsl
sbb
cmpl
outsb
cmp
es
iret
lea
fisttps
int3
out
or
push
iret
inc
daa
sti
and
add
or
lods
repz
or
lods
add
inc
jp
lea
fidivrl
dec
adc
out
jecxz
insb
stos
call
jle
testl
ja
or
scas
lahf
int
ret
pop
jle
sub
aad
dec
xor
flds
sti
imul
mov
jmp
movb
pushl
movl
push
mov
push
pushl
lea
jmp
cmpb
pushf
mov
lea
jne
clc
pushf
bsr
pusha
mov
pushf
stc
add
movb
cmc
cmc
movzwl
pushf
rcl
cmp
pushl
mov
push
stc
cmc
call
call
pushf
movl
call
mov
testb
sahf
jb
shlb
fwait
mov
xlat
sub
sbb
xchg
dec
mov
xchg
mov
insb
addr16
dec
or
sub
cld
mov
rorb
jge
lds
sti
std
pop
cmpsl
jecxz
nop
shrl
fs
push
aad
fidivs
in
loop
or
and
sarl
mov
cmp
pop
xchg
cmp
lcall
movsb
clc
or
mov
lea
je
stc
push
sub
jp
cmp
push
pushl
ret
pushl
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
push
pusha
mov
imulb
xor
kandw
pop
movsb
lds
divl
cwtl
lds
movsl
dec
inc
imul
jo
push
sub
add
into
xchg
inc
xor
xchg
inc
daa
std
and
jp
into
lods
adc
outsb
xchg
or
jnp
test
dec
cmp
lcall
cltd
inc
mov
dec
lret
mov
dec
xor
cmpsb
ret
leave
pop
push
add
jmp
jl
ret
push
add
xchg
push
lods
xchg
popf
gs
ror
inc
daa
cld
cmc
xor
pushf
rep
lea
mov
movb
lea
jmp
cmpb
jmp
data16
adc
or
lods
pop
sub
sub
and
mov
clc
addr16
inc
pop
sub
xor
xor
push
sbb
hlt
out
sar
mov
mov
shrb
add
sahf
out
sbb
mov
ljmp
inc
add
sahf
pop
cltd
fdiv
xchg
shrb
push
jns
or
adc
adc
mov
das
js
jmp
inc
into
dec
ds
xchg
push
push
pushf
cmp
pop
filds
inc
daa
jae
lahf
sti
cs
pop
push
mov
outsl
xor
lret
mov
test
out
int3
lcall
dec
ljmp
cli
aas
push
in
call
xchg
cmc
push
jns
mov
mov
sbb
je
add
test
and
pop
inc
mov
inc
scas
mov
jmp
mov
sbb
fisubrs
bound
aam
inc
and
movw
lea
ja
pushf
lea
jb
bt
call
cld
lret
xchg
mov
add
imul
notb
adc
sbb
lea
or
out
fs
cmp
jb
sbb
test
imull
scas
jnp
dec
lock
or
lds
ror
adc
inc
fisttpll
outsl
pop
shrl
subb
dec
lock
inc
or
mov
loopne
sbb
call
push
rcrl
data16
mov
xor
jmp
add
in
dec
push
sbb
mov
lret
sbb
mulb
xor
addl
sub
xchg
push
xor
adc
cltd
mov
and
stos
pushf
add
cmc
pop
add
pop
cmp
add
xor
and
nop
xchg
xor
jge
dec
add
and
shlb
daa
mov
rcll
lea
jb
pusha
pusha
call
jmp
push
mov
mov
jmp
pusha
jmp
cmc
sbb
jmp
icebp
imul
fsubr
push
xrelease
mov
stos
std
int3
cmp
mov
jp
push
dec
sti
dec
dec
jge
sbb
pushf
push
repnz
jge
movsb
adc
mov
mov
fiaddl
pop
repnz
lock
or
mov
testl
sub
inc
xor
dec
push
loopne
jl
es
push
mov
pop
ret
add
xchg
rorl
leave
mov
mov
sbb
fld
mulb
push
xchg
pop
xlat
sub
lea
cmp
or
sub
pushf
mov
test
imul
jg
mov
nop
sbb
in
adc
adc
lret
xchg
and
pusha
inc
clc
sub
in
inc
addr16
rcrl
mov
inc
jmp
lcall
movsl
xchg
sbb
orl
fsub
fwait
jmp
loop
popf
imul
rclb
mov
and
je
arpl
and
jle
jne
test
xor
push
mov
xchg
sub
push
sub
adc
xrelease
push
mov
in
popa
pop
sti
fwait
mov
pop
cld
insb
stos
mov
pop
cli
lds
xorb
std
dec
loope
repz
sbb
push
jg
stc
cmp
enter
jecxz
xor
hlt
ja
add
cmpsl
sbb
jno
lds
daa
jge
fisttps
ss
aam
and
in
pop
add
sub
lods
pop
xchg
mov
xor
jno
mov
mov
xchg
cmpsb
fcmove
icebp
or
xchg
fimuls
mov
pop
cld
cmp
testl
mov
rdpmc
inc
test
ret
ljmp
loop
insl
sbb
insl
in
adc
fildl
pop
nop
sub
stos
cmp
aad
hlt
mov
lcall
sub
mov
xor
mov
movsb
sbb
mov
test
pushf
jbe
sbb
mov
out
cmp
or
dec
rclb
add
jecxz
push
lcall
ret
add
sbb
mov
sub
pop
js
loopne
in
shll
jb
cmc
lret
arpl
icebp
pushf
cmp
lea
sbb
cmpl
jge
lds
out
pop
shll
sub
orl
xor
adc
inc
or
je
leave
lods
cmpsl
cmp
pop
cltd
roll
push
or
test
inc
data16
sub
and
js
jae
dec
in
js
stos
pushf
in
cmp
lods
and
test
je
lea
jne
push
push
push
call
lea
jae
cmp
cmc
jmp
dec
mov
jmp
pushf
mov
call
sar
sar
sub
bts
add
xor
mov
clc
rcr
add
add
mov
cmc
pusha
mov
call
call
and
iret
test
scas
rorl
test
mov
jmp
mov
sbb
add
shll
int3
mov
imul
mov
jmp
xor
scas
pop
jnp
cmp
adc
xchg
insb
dec
lea
repz
cs
pop
notb
imul
lea
call
stc
cmp
pusha
jmp
push
enter
or
cli
xchg
inc
pop
nop
cli
or
cltd
and
aad
rorl
cmp
mov
sahf
xchg
xchg
std
stos
test
mov
sub
dec
imul
scas
and
jno
push
or
inc
push
mov
mov
mov
loopne
add
mov
mov
iret
in
inc
sub
sub
loop
ljmp
sbb
push
pushl
mov
movl
pushf
push
pushf
movw
movl
pusha
mov
lea
jmp
mov
addl
push
scas
push
push
movsl
sti
add
mov
add
mov
jbe
nop
leave
mov
sub
add
pop
mov
mov
or
sahf
in
std
cmc
cs
mov
add
out
cmp
dec
dec
jecxz
test
mov
inc
sub
iret
mov
insb
and
pushf
jmp
jmp
mov
dec
add
repnz
sub
mov
xchg
sti
xor
enter
mov
aas
cmc
fcompl
sbb
mov
clc
push
pop
inc
cwtl
mov
xchg
int
xlat
pop
push
mov
pop
mov
bound
adc
and
fs
fdivr
fwait
ds
and
adc
or
icebp
jne
rcrb
xor
cmp
outsl
push
mov
sub
and
lcall
scas
loop
push
xchg
in
push
mov
jo
sahf
fs
cltd
push
sbb
cmpsl
inc
push
or
mov
lds
les
cmp
and
jl
adc
shl
out
lahf
orl
xchg
fldcw
loopne
pop
es
call
ljmp
push
or
dec
insl
enter
jge
movsb
xchg
mov
fcmovb
stos
fsubs
shl
add
imul
sub
mulb
negl
mov
adc
stos
mov
sbb
aas
mov
ret
loope
fwait
jmp
sub
jbe
test
pop
addl
loopne
add
lock
jge
pop
fsubl
es
out
dec
les
xchg
lahf
in
sbb
push
pop
mov
shll
sbb
lahf
jp
sti
mov
mulb
lahf
lock
lods
add
mov
jecxz
lock
sbb
push
cmc
mov
dec
in
aad
adc
inc
jecxz
push
roll
sahf
lods
inc
loopne
movsl
push
lods
in
push
into
int
sti
pop
push
xor
shlb
dec
mov
cmp
cs
popa
push
cmpsl
lods
stc
rorb
insl
lret
sub
in
inc
xchg
push
cmpsl
dec
or
lret
sbb
ret
pusha
cld
pop
scas
mov
xchg
sysexit
mov
cmp
mov
or
jo
inc
jns
xor
sahf
loopne
lock
cmp
jl
inc
inc
fmul
int3
jae
movsb
pop
jno
icebp
xor
mov
sar
enter
cwtl
inc
stos
cmpb
lock
xor
push
sub
ja
repz
clc
sbb
mov
incb
test
dec
out
mov
sub
mov
sub
push
dec
xchg
das
sbb
inc
pop
aaa
cmp
pop
xchg
mov
pop
dec
imul
or
cmpsb
jmp
push
jb
sub
mov
cltd
cltd
mov
sbb
shr
add
push
cwtl
je
mov
pop
loop
repz
js
and
pop
xor
xlat
fisubrl
outsb
mov
imul
pop
cwtl
leave
lods
out
mov
inc
sarl
xchg
fsubrs
sub
xchg
hlt
clc
jb
stos
imul
test
in
decl
jbe
mov
cmpsb
gs
xorl
imul
rolb
cmp
scas
aas
insl
fs
add
in
xchg
lock
imul
pop
lods
pop
mov
mov
xlat
inc
out
sub
pop
adc
dec
add
push
push
jne
add
mov
lods
sub
push
subb
scas
jne
fnstcw
test
jg
push
xor
pop
mov
in
rcll
dec
or
out
repnz
cmp
subb
das
add
add
addr16
lret
inc
int
inc
inc
or
ret
sbbl
jne
out
faddl
or
pop
vucomisd
xchg
lds
sub
or
imul
cwtl
lret
arpl
add
aas
movsb
mov
out
cwtl
out
and
mov
adc
mov
mov
jle
add
inc
mov
test
stc
cmp
testl
dec
mov
in
ja
test
fdivr
inc
movsb
adc
in
das
add
mov
rcrl
push
or
push
dec
ja
jo
cld
mov
inc
daa
insb
jb
clc
sbb
or
push
daa
adc
pop
cmpsl
mov
cmp
pop
ljmp
inc
lcall
mov
xor
outsb
xchg
lahf
or
scas
sbb
jmp
sub
lret
test
jne
into
fnsave
in
mov
push
adc
movb
inc
xchg
push
fldl
dec
movsb
lds
lret
mov
out
mov
hlt
stos
ljmp
xchg
xchg
ds
dec
clc
cmc
mov
or
and
jmp
je
jo
aad
in
lds
cmpl
mov
in
push
bt
sahf
outsb
inc
mov
jnp
shlb
es
adc
push
cwtl
imul
xor
mov
addr16
jmp
cmp
and
adc
push
rcrb
dec
out
mov
jp
imul
je
inc
fadds
out
sti
jns
sbb
fsubs
sti
inc
test
pop
jecxz
lods
pop
jp
cmp
adc
xor
inc
pop
lock
pushf
lea
call
jmp
sub
pop
daa
mov
add
mov
notb
lds
mov
mov
cmpb
sub
cmp
mov
sub
stc
pop
lods
dec
gs
mov
push
mov
push
out
xchg
push
repnz
jl
or
mov
rolb
into
jbe
imul
or
dec
nop
sahf
movsb
bound
adc
lods
neg
int3
mov
inc
sub
loopne
cmp
pop
pop
inc
push
inc
cwtl
cltd
dec
cwtl
pop
inc
dec
inc
pop
cwtl
inc
inc
dec
cwtl
push
pop
cwtl
inc
inc
pop
push
dec
pop
pop
cwtl
pop
inc
cwtl
dec
pusha
pop
cwtl
pop
dec
inc
push
inc
pop
pop
cwtl
inc
pop
inc
inc
cwtl
inc
pop
push
inc
push
inc
dec
cwtl
cltd
dec
clc
jl
jl
xor
push
fnstcw
in
mov
sbb
icebp
arpl
call
lret
fcmovu
mov
adc
and
xor
xor
mov
push
rcrl
jb
inc
xor
jnp
imul
leave
jg
dec
ds
test
and
ss
mov
xlat
cmc
inc
sahf
adc
pushf
pop
test
ds
pop
mov
inc
movsb
mov
cmp
and
fwait
shrb
les
subl
push
mov
dec
push
mov
sahf
movsb
mov
inc
sub
mov
shl
bnd
std
je
jg
jo
jg
xor
pop
fistps
std
xchg
int
mov
mov
cld
cmpsb
sarb
or
fbstp
xchg
push
cmp
enter
push
pop
jmp
xchg
jbe
sbb
or
enter
pushf
jmp
cmp
mov
sub
push
cmc
cmp
cwtl
lea
movzbw
lea
not
setbe
mov
mov
lea
ja
call
push
jl
fcompl
dec
mov
aas
je
push
push
pushf
adc
sub
testb
jbe
imul
outsb
mov
std
pop
add
pop
popf
xor
or
ret
movsb
jb
xchg
testb
xchg
cltd
jnp
insb
sti
push
jno
jae
pushf
ret
lret
loop
dec
das
pop
mov
push
sbbb
loopne
inc
jl
ja
mov
inc
pop
cmpsl
std
ret
rclb
test
mov
push
xchg
xchg
adc
mov
pop
cmc
push
fsubl
and
aaa
cld
nop
movsb
daa
mov
faddl
lcall
pop
pop
je
arpl
repz
jno
jmp
lret
frstor
xor
test
sub
stos
pop
xor
pushl
xchg
lods
bt
jmp
call
scas
push
movsb
pop
push
out
adc
insb
aaa
sub
rcl
cmpsb
pushf
lock
inc
test
sbb
outsb
mov
lahf
fldl
dec
mov
movsl
popa
inc
sub
mov
jns
mov
cli
dec
mov
mov
lahf
sub
loopne
jnp
or
outsl
inc
pop
out
push
lret
lds
roll
sub
xor
dec
aad
lods
fisttps
jno
sarb
imul
inc
sub
fs
ja
pushf
push
pusha
call
pushl
jae
pop
ret
and
gs
ret
fldt
jge
negl
push
rolb
sti
sbb
cmc
adc
cmp
rcr
mov
lret
and
xchg
nop
insb
or
ret
sbb
cmpsl
and
add
les
shrl
jmp
sti
jbe
mov
add
nop
dec
and
in
shrl
ret
rcl
ja
hlt
sbb
idivb
test
lods
aaa
lahf
pop
xchg
xchg
push
adc
pop
dec
loopne
jmp
pop
test
cs
add
push
push
outsl
pusha
sti
leave
cmpsl
ljmp
bnd
sbb
les
mov
lret
sbb
js
push
outsb
push
icebp
or
ss
mov
cmp
mov
in
adc
jae
insb
arpl
xchg
pusha
fmuls
or
and
inc
sub
cmpsl
les
es
mov
decl
mov
iret
xchg
jmp
cwtl
out
jo
push
sub
xchg
xor
xchg
xor
pop
loopne
inc
lock
in
sarl
fucomp
jg
mov
and
shrb
push
xchg
cs
out
std
cmp
sbb
pop
pop
ljmp
jns
mov
fld
out
mov
sahf
sub
fs
mov
push
cli
sub
je
cmpb
jmp
pushf
mov
mov
call
pop
xor
and
cmp
pusha
pop
add
addl
stc
lcall
jns
repnz
pusha
aaa
ds
ljmp
pop
loope
pop
cmp
or
ds
mov
jb
pop
add
mov
mov
int
cmp
push
out
dec
cmp
orb
pop
mov
scas
inc
scas
jle
int3
je
out
or
out
movsl
cs
mov
cli
outsb
sbb
ror
rcr
push
shrd
clc
ror
push
jmp
jae
not
call
imul
call
bswap
cwtl
lea
not
mov
call
aam
mov
stos
pop
push
test
es
loopne
rcl
test
leave
out
test
rcrb
jecxz
jl
subb
mov
lahf
in
push
shll
or
pop
outsl
cli
cs
sahf
aam
fwait
push
mov
repz
ret
rcr
sub
bsr
xor
add
mov
not
neg
mov
call
pushf
movl
jmp
lea
jae
btr
mov
movsbl
movsbl
shl
mov
ror
inc
mov
cmp
jmp
movl
pusha
call
call
xchg
xchg
xor
cmp
fcoms
dec
into
sub
jne,pt
imul
clc
lock
fs
je
or
mov
pop
repnz
add
std
pop
fmuls
fstps
mov
push
pop
or
push
inc
cs
mov
add
sub
mov
bound
ret
add
into
sub
ds
ja
cld
push
mov
inc
push
shlb
and
pop
push
inc
xorb
movsb
cmp
jno
jg
nop
scas
daa
mov
adc
das
arpl
rcrb
mov
mov
pop
inc
push
dec
xchg
mov
lahf
xor
pop
fisubl
pop
out
cmpl
mov
andl
cltd
jge
sbb
neg
xor
push
iret
pop
punpckhwd
clc
mov
out
popf
jne
cli
cld
popa
ret
inc
cmp
pushf
pop
inc
sub
scas
popa
daa
stc
call
lea
jae
clc
bt
jmp
push
lea
jae
push
seta
mov
pushf
dec
mov
mov
inc
pusha
movb
jmp
pushl
call
pop
sbbl
push
sub
inc
pop
lods
pop
inc
ret
mov
fidivrs
insb
sbb
arpl
xchg
adc
mov
push
pusha
xchg
outsl
dec
icebp
mov
rcr
mov
in
add
jne
mov
or
jae,pt
dec
fwait
pop
test
ljmp
es
xchg
push
cmp
rclb
in
mov
xor
fsubl
adc
inc
inc
sub
shr
pushf
pusha
movw
lea
jbe
shrd
pusha
mov
and
xchg
add
btr
pushl
bt
cmc
mov
btr
bt
xor
lea
add
not
bts
btc
movl
btc
sbb
setnp
mov
sub
cmc
push
cmp
pushf
push
jmp
not
stc
mov
cmc
xor
mov
jmp
movl
push
lea
jmp
mov
pusha
mov
pushf
mov
mov
pushl
lea
jmp
jmp
movl
mov
mov
mov
pushf
push
lea
jmp
jmp
bt
rol
push
mov
cmp
mov
clc
cmp
mov
cmp
sub
bt
cmp
bt
pushf
shr
jmp
jmp
lea
jae
push
mov
std
bswap
mov
jmp
rep
inc
mov
sbb
clc
mov
pushl
call
shld
pusha
mov
clc
stc
stc
or
mov
pusha
clc
add
jmp
call
jmp
add
dec
pop
add
dec
pop
add
push
pop
add
add
add
sbbl
andb
add
fstps
adc
add
out
add
sub
pop
add
loop
add
sbb
mov
pop
pop
add
dec
pop
add
pop
pop
add
insb
pop
add
cmpsl
pop
add
add
add
lock
add
lock
add
sbb
sarb
pop
add
lret
pop
add
xor
pusha
xor
pop
add
scas
pop
add
add
add
xor
pop
add
ret
lock
pop
add
pop
pop
add
cwtl
pop
add
xchg
pop
add
cs
add
and
add
lock
add
in
pop
add
sbbl
add
pop
add
add
pop
add
outsb
pop
add
in
pop
add
xor
pop
add
daa
pop
add
in
pop
add
pop
pop
add
and
add
cmp
pop
add
int
add
and
add
ret
inc
in
pop
add
scas
pop
add
and
add
sbbl
adc
pop
add
and
add
sbb
inc
in
pop
add
cmpsl
pop
add
and
add
out
add
in
pop
add
sub
lock
add
fstps
inc
in
pop
add
jmp
add
and
add
pop
pop
add
in
pop
add
sbb
lock
add
push
pop
add
in
pop
add
into
pop
add
and
add
dec
pop
add
in
pop
add
and
lock
add
ficompl
inc
in
pop
add
xchg
pop
add
and
add
adc
inc
in
pop
add
cmp
pop
add
int
add
in
pop
add
add
pop
add
insb
pop
add
test
add
or
inc
ret
and
pop
add
push
pop
add
sbb
pusha
cs
add
int
add
xor
pop
add
sbb
pusha
cs
add
ret
pusha
test
add
xchg
pop
add
outsb
pop
add
ret
pusha
xor
pop
add
cld
pop
add
pop
pop
add
mov
add
lret
pop
add
sub
inc
ret
lock
pusha
cs
add
test
pop
add
scas
pop
add
lret
pop
add
insb
pop
add
add
pop
add
lock
add
mov
pop
add
pop
pop
add
add
pop
add
sub
pop
add
sub
pusha
mov
pop
add
test
add
sub
pop
add
adc
pusha
cs
add
cs
add
mov
pop
add
mov
add
sub
rclb
add
sbb
rclb
add
push
pop
add
sub
nop
insb
pop
add
insb
pop
add
lret
pop
add
xchg
pop
add
ret
mov
rcrl
add
pop
add
rcrl
inc
ret
inc
ret
and
pop
add
aad
add
scas
pop
add
cwtl
pop
add
and
inc
pop
pop
add
aad
add
into
pop
add
add
shrb
pop
add
daa
pop
add
cmp
pop
add
mov
add
pop
pop
add
or
sarb
pop
add
lock
add
cld
pop
add
xor
add
pop
add
xor
pop
add
jmp
add
jmp
add
lret
pop
add
adc
rcrb
pop
add
sbb
and
pop
add
outsb
pop
add
aad
add
push
pop
add
daa
pop
add
inc
pop
add
sub
pop
add
rcrl
and
pop
add
lock
add
aad
add
insb
pop
add
ficompl
adc
add
sbb
adc
add
adc
subb
add
sub
rcrb
pop
add
pop
pop
add
sub
pop
add
and
adc
add
ret
sbbb
add
xchg
pop
add
pop
pop
add
mov
add
cmp
pop
add
cwtl
pop
add
aad
add
sbb
shrb
pop
add
into
pop
add
cmp
pop
pusha
mov
pusha
lea
jmp
jmp
cmp
cmc
xor
mov
call
cld
cld
push
cld
push
pushf
jmp
cmc
bt
shl
push
pushf
mov
push
pushf
pushf
pushf
popl
call
lea
sub
lea
sub
cmc
movzbl
clc
clc
seto
pop
mov
call
cmc
movl
movb
sub
cmc
pushf
lea
call
cmc
sub
pusha
mov
mov
push
pushf
lea
jmp
mov
pushl
pushf
mov
pushf
mov
pushf
pushf
mov
mov
pushl
pushf
lea
jmp
movb
push
mov
movb
mov
push
lea
jmp
mov
clc
mov
shrd
bts
mov
call
mov
mov
push
pushf
lea
jmp
rcr
mov
bt
bswap
stc
pusha
pusha
sub
jae
sub
call
jmp
push
movb
mov
pushf
pushf
lea
jmp
lea
jne
pushf
pusha
mov
movw
lea
jmp
adc
mov
shrd
cltd
mov
cmp
setnp
bt
or
mov
call
pushf
mov
lea
jb
pusha
mov
pushf
lea
jle
push
pushf
popl
call
mov
pushf
pusha
movw
lea
jmp
jmp
setno
push
jmp
mov
push
mov
push
mov
movw
pushf
push
pusha
lea
jmp
xor
add
push
lea
sub
sbb
neg
neg
jmp
mov
lea
js
mov
pusha
pushf
pushf
popl
pushl
pushl
popl
mov
lea
jmp
neg
mov
bt
pushf
mov
test
sub
push
jmp
cmp
movb
add
pushf
call
pushf
lea
jo
mov
pusha
pushf
lea
jmp
push
push
pusha
mov
pushl
lea
jmp
push
xor
push
stc
cmc
mov
pushf
clc
pushf
push
sub
call
pushf
jmp
mov
cmc
sub
pushl
test
shr
jmp
movzbl
test
mov
cmp
or
push
push
call
call
shrd
shl
xadd
movzbl
push
xor
movzbw
rol
pushl
dec
shld
inc
and
not
pusha
clc
pushl
rcl
sub
shr
shrd
adc
stc
xor
adc
push
mov
add
ja
add
pushf
jmp
sub
cmp
push
and
jmp
movb
call
call
ror
movzww
pusha
movb
xchg
movb
jmp
lea
push
jmp
mov
pushf
push
push
mov
lea
jmp
jmp
cmp
push
bt
cmp
jmp
call
ror
bt
call
sub
stc
pusha
shr
movb
mov
push
pushf
popl
mov
pushl
popl
pusha
push
lea
jmp
mov
pushf
pushf
pusha
lea
jmp
sub
call
pushf
mov
push
lea
jmp
add
bsf
adc
and
lea
mov
call
pusha
mov
mov
mov
pusha
lea
jmp
pushf
xor
pushl
mov
bt
xor
stc
rol
movb
test
test
jmp
mov
not
movsbw
pusha
mov
call
mov
bts
rdtsc
bt
cmc
sub
pusha
mov
pushf
jmp
mov
movb
jmp
sar
mov
ror
rcr
add
mov
mov
jmp
jmp
pusha
movb
jmp
mov
mov
pushf
lea
jmp
push
mov
pop
mov
pushf
pushf
pushl
pushf
pushl
ret
mov
pushf
pushf
pushf
pushl
ret
cmp
jmp
pushf
cmc
clc
add
pusha
mov
movw
lea
jmp
call
add
jle
pushf
mov
mov
pusha
pusha
lea
jmp
btc
bswap
inc
mov
ror
jmp
mov
pushf
pushf
pusha
lea
jmp
bswap
bt
bswap
aam
mov
pusha
xor
mov
call
pushl
popl
push
movb
movw
pushf
lea
jmp
pushf
popl
pushl
movw
pushf
mov
pushl
popl
movl
lea
jmp
push
jmp
sub
mov
sub
jmp
pusha
bt
bt
not
test
push
pushf
and
movw
pushl
call
push
jmp
mov
mov
pushl
mov
pushf
lea
jmp
bt
rcr
rol
shld
xor
movsbw
pushl
sar
pushf
not
xor
sub
test
not
setb
neg
mov
bt
cmc
add
call
sub
bt
mov
stc
push
sub
mov
push
lea
jmp
mov
push
mov
mov
pushf
pushf
mov
pusha
push
pushf
lea
jmp
pushf
popl
mov
pushf
pushl
popl
pushf
lea
jmp
mov
xchg
lea
push
mov
push
bswap
mov
seta
sete
not
push
not
repz
bswap
xadd
push
adc
shl
push
dec
pusha
shr
pushl
popl
add
movl
test
btr
mov
dec
sub
push
xchg
ror
movsbw
shld
bswap
shr
shl
bts
lea
pushf
stc
and
sub
btr
bsf
pushf
clc
lea
not
sbb
movsbw
mov
stc
setae
pusha
shl
add
shrd
inc
lea
mov
setg
pushf
bswap
sub
pushl
dec
rcr
bts
bts
bts
not
ror
bts
movsbl
ror
rol
bt
shld
sub
add
bswap
cmc
sub
setge
pushf
movzbl
bts
ror
bswap
bswap
mov
bt
stc
stc
bt
ror
cmp
call
push
mov
movb
pusha
jmp
call
xor
jmp
pushf
pushf
mov
pushf
pusha
lea
jmp
divl
jmp
pusha
pusha
jmp
jmp
call
mov
inc
push
neg
call
mov
pushf
pushf
jmp
add
pushf
pusha
call
pushf
call
lea
ja
rdtsc
lea
adc
mov
shl
lea
cmp
inc
sub
rcr
lea
or
dec
sub
and
btr
add
sbb
sub
lea
movsbw
mov
call
pushf
mov
mov
push
lea
jmp
pushf
popl
mov
pushl
popl
pushl
pushf
movb
pushf
lea
jmp
pushf
popl
pushf
pushf
pushl
popl
mov
pushf
mov
lea
jmp
btr
and
rol
bts
mov
test
test
pusha
add
pushf
pushl
lea
jmp
pushf
popl
pushf
pushl
popl
movb
push
pusha
lea
jmp
mov
call
pushf
popl
push
jmp
pushl
mov
movw
pushf
lea
jmp
pusha
pusha
mov
call
jmp
movw
pushf
pushf
popl
movw
jmp
sub
bt
shl
call
decl
call
pushf
lea
jne
bts
rcl
btc
xorb
setge
jmp
pushf
popl
call
lea
mov
or
neg
adc
mov
jmp
pusha
or
bswap
aam
mov
jmp
bsr
rcr
mov
xchg
mov
add
bts
add
rcl
ror
rol
sub
call
pushl
popl
pusha
pushf
push
pushl
lea
jmp
shr
adc
sub
movzbl
push
xor
stc
pushl
pushl
mov
rol
pusha
not
jmp
bsr
call
xor
bt
xor
mov
pushf
sub
mov
movl
pusha
pushf
mov
push
push
lea
jmp
push
jmp
call
pushf
mov
pusha
mov
jmp
lea
jne
pusha
not
mov
cmp
cmp
and
stc
bt
stc
push
cmp
jmp
pusha
pusha
jmp
pushf
mov
call
mov
or
clc
clc
stc
stc
xor
push
inc
pushf
mov
jmp
bt
stc
pushf
pusha
mov
pushf
pusha
jmp
lea
js
pushf
movw
pushl
popl
pushf
pusha
pushf
lea
jmp
pushf
popl
movw
pushf
lea
jge
pushf
pushl
popl
pushf
pushl
pusha
lea
jmp
pusha
mov
push
movb
lea
jmp
add
pushf
jmp
jbe
pushf
mov
pushf
pushl
pusha
pushf
mov
movb
lea
jmp
cmp
cmp
pushf
bt
cbtw
mov
cmp
pushl
cwtl
cmp
bt
sub
call
mov
pushl
push
lea
jmp
not
mov
pusha
call
popl
pushf
push
movw
push
lea
jmp
test
not
cmc
clc
cmp
cmp
sub
pushf
clc
test
jmp
bsr
cmc
lea
call
pushf
pushf
push
pusha
mov
pushf
jmp
call
mov
pusha
pushl
mov
pusha
jmp
push
mov
pushf
mov
push
push
mov
push
pushf
mov
lea
jmp
push
mov
pushf
jmp
pushl
popl
mov
lea
jmp
seto
mov
movzbl
push
pushf
setp
mov
setl
mov
pushf
jmp
sar
shl
mov
dec
rdtsc
shr
mov
mov
neg
mov
mov
sub
jo
popf
jmp
movl
jmp
lea
mov
jmp
jmp
aad
cmc
sbb
movzww
bt
stc
clc
push
xchg
bt
xor
mov
push
inc
bt
push
push
add
stc
rol
jmp
mov
pushl
pushf
movw
pushf
lea
jmp
push
mov
div
call
pusha
jmp
sub
call
jmp
bsf
lea
movsbw
mov
cmc
sub
jb
pusha
movw
pushf
mov
push
lea
jmp
pushf
pushf
lea
jne
jmp
inc
bswap
mov
push
pushf
mov
push
add
jmp
pushf
stc
mov
rol
push
clc
clc
xor
clc
pushf
test
pushf
not
bt
clc
cmp
xor
clc
cmp
cmc
sub
jge
cbtw
push
cwtl
push
sub
pusha
mov
push
mov
movb
pushf
lea
jmp
sub
add
sar
or
neg
cmc
setb
add
push
and
ror
bsf
btr
mov
jmp
call
mov
pushf
call
btc
mov
bsf
mov
cmc
mov
cmc
add
pusha
cmc
shld
call
pusha
pushf
mov
pushf
push
push
mov
lea
jmp
mov
mov
movb
mov
movb
lea
jmp
pushf
popl
pushl
pushl
popl
pusha
movb
mov
pushf
lea
jmp
push
mov
movb
pushf
pushf
lea
jmp
cltd
rdtsc
pop
pusha
setno
movzbw
mov
movsbw
mov
movzbl
xchg
call
pushf
call
rdtsc
jmp
pushl
popl
push
push
lea
jmp
push
push
pushl
popl
mov
pushl
pushf
lea
jmp
pusha
pusha
jmp
pushl
popl
pushf
push
lea
jmp
jmp
cmc
mov
clc
pusha
add
pushl
pushl
movb
lea
jmp
pusha
jmp
shr
bsf
stc
notl
sbb
aas
das
mov
pushf
cmc
call
mov
mov
push
mov
call
mov
call
pushf
mov
mov
xor
clc
pushf
xor
ror
lea
stc
cmc
rol
rol
call
shrd
rol
jmp
mov
push
movb
movb
pushl
ret
mov
sar
movzbw
lea
btc
add
shl
cmp
mov
stc
sub
mov
not
dec
btc
sete
bt
not
rcl
ror
call
mov
mov
push
pushf
repz
popl
push
xchg
neg
ror
lea
push
inc
cmc
btc
pushl
adc
push
sbb
stc
mov
lea
sub
call
not
test
cmc
call
neg
pushl
ror
pushf
sub
push
pushf
lea
jno
sub
push
movb
pushf
push
mov
pushf
lea
jmp
pusha
mov
push
mov
pushl
popl
pusha
cmc
add
pushl
test
pushl
popf
push
lea
jmp
lea
cpuid
cmp
pushf
cmp
sub
bt
cmp
stc
test
cmpl
pushf
mov
pusha
movw
pushl
mov
movb
mov
call
pushl
popl
pushf
pusha
push
push
lea
jmp
call
dec
mov
pusha
jmp
lea
je
stc
sub
push
pusha
xchg
add
jne
cmp
push
cmc
sub
jmp
mov
jns
movzbw
push
bswap
push
mov
pushf
mov
call
sete
jmp
lahf
jmp
xchg
push
pushf
pushf
movl
pushl
pushf
pushf
mov
pushf
pushl
ret
pusha
jmp
mov
push
pushl
ret
jmp
add
inc
inc
inc
mov
sar
shr
xor
push
mov
test
clc
add
jmp
call
jmp
rcl
mov
rcl
jmp
adc
pusha
inc
add
mov
bt
clc
add
jle
sub
pushf
test
pushf
add
mov
call
pushf
pushf
mov
push
mov
jmp
mov
lea
je
pushf
pushf
popl
jmp
sar
mov
neg
inc
mov
pusha
pushl
stc
pushl
sub
cmc
bt
shl
call
cmc
clc
not
bt
push
pusha
xor
cmp
push
sub
pushf
jmp
mov
bts
xchg
mov
bts
adc
bts
pushl
mov
pushl
sub
jge
sub
jp
push
movw
pushl
div
push
jmp
call
setae
not
pusha
mov
pushf
lea
mov
pusha
mov
push
push
pushl
mov
lea
jmp
pusha
pushl
popl
push
movb
lea
jmp
push
push
mov
pushf
pushf
movb
pushf
popl
lea
jnp
push
pushf
pushl
popl
movb
pusha
movb
lea
jmp
movl
mov
jmp
call
setne
ror
inc
shr
bswap
btr
sub
lea
movzbl
sub
btr
shrd
mov
jmp
cmp
add
pushl
call
pushf
dec
cmc
xor
pushf
cmc
bt
not
clc
clc
sub
pusha
mov
bt
push
sub
jmp
push
pushl
mov
pushl
pushf
jmp
pushf
popl
lea
push
cld
mov
jmp
mov
jmp
setp
mov
cmc
pusha
test
sub
jmp
ror
cmp
add
pushf
pushl
call
mov
call
pushf
lea
jl
xchg
pushf
movl
call
call
mov
cmp
sub
pushf
call
mov
call
mov
push
mov
pushl
pushf
pushl
ret
pushf
mov
call
cmc
cmp
pusha
add
pushf
call
pushf
jmp
push
mov
mov
pushf
lea
jmp
clc
sub
clc
test
push
sub
pusha
pushf
pushf
inc
test
bt
jmp
movsbw
mov
jmp
call
cld
pushl
popf
pusha
lea
jmp
dec
pushl
call
bswap
mov
push
cmp
jmp
push
mov
pusha
call
lea
jae
push
pusha
movw
mov
jmp
xor
bsr
btc
rcr
not
not
rcr
movzbw
dec
sbb
xor
neg
bswap
sbb
call
jmp
pushl
popl
pushf
pusha
lea
jmp
pusha
push
pushf
popl
movb
movb
pushl
popl
mov
push
lea
jmp
mov
mov
mov
pushf
mov
pushf
pusha
movb
lea
jmp
mov
mov
pusha
lea
jmp
das
neg
bt
mov
stc
push
test
add
pusha
mov
movb
call
rdtsc
mov
jmp
pushf
popl
lea
jge
push
pusha
mov
pushl
popl
mov
movw
lea
jmp
pusha
mov
cld
mov
lea
jle
push
pushf
rep
sub
btc
pushf
mov
clc
pop
rcl
bsr
mov
cmp
pushl
popf
movb
pushf
lea
jmp
jmp
pushf
popl
mov
pushl
popl
movb
movw
movw
movw
lea
jmp
mov
pusha
mov
mov
lea
jmp
jmp
pushl
movb
mov
movw
lea
jmp
rcl
mov
clc
cmc
sub
cmc
mov
movb
push
mul
call
pushf
pusha
pushl
mov
movb
pushl
call
call
shld
mov
rcl
neg
mov
cmc
pushf
clc
sub
call
call
mov
mov
lea
jmp
sub
mov
pushf
push
mov
pusha
pushf
mov
pushl
lea
jmp
div
movw
jmp
push
mov
movb
push
pushf
popl
pushl
push
pushl
popl
pushf
lea
jmp
push
pushf
pusha
jmp
pusha
mov
pushf
pushf
pushl
lea
jmp
add
pusha
pusha
push
mov
mov
pushl
pushf
lea
jmp
mov
movb
lea
jmp
pushl
popl
mov
push
movb
lea
jmp
pushl
popl
push
movb
pushf
lea
jmp
call
pushf
mov
mov
pusha
pushl
mov
push
lea
jmp
pusha
mov
jmp
lea
mov
and
sar
cmc
not
mov
clc
jmp
call
mov
lea
pop
mov
push
seta
mov
not
setg
mov
mov
pushf
mov
pushf
mov
pushl
ret
adc
not
bswap
mov
stc
jmp
mov
call
mov
jmp
jle
div
jb
mov
jo
mov
call
pushf
pushf
pushl
popl
pushf
push
pushl
lea
jmp
add
add
sub
jmp
test
shl
pusha
pushf
pushf
shr
cmp
call
mov
xchg
shl
popf
movzbw
push
xchg
rdtsc
mov
call
and
clc
mov
cmp
add
mov
mov
mov
mov
call
pushf
pushf
popl
mov
movb
movb
jmp
not
call
movsbw
shrd
mov
clc
bts
mov
pushf
cmc
pusha
jmp
pushf
xchg
movl
push
movw
movl
pushf
push
call
jmp
call
push
push
pushf
mov
push
push
pushl
lea
jmp
push
jmp
jmp
mov
mov
mov
jmp
mov
pushf
lea
jmp
call
lea
mov
not
lahf
mov
jmp
and
pushf
mov
mov
movb
jmp
push
push
pusha
mov
push
movb
movw
lea
jmp
clc
clc
jmp
inc
movb
cmc
push
rol
mov
test
xor
clc
mov
xor
clc
clc
movb
bt
cwtl
jmp
jmp
call
movsbw
bswap
mov
push
mov
call
sub
rcl
clc
btr
pushf
lea
call
call
push
lea
jne
push
xor
pusha
push
push
call
rcr
shld
push
mov
pusha
jmp
push
jmp
pushf
popl
call
call
bt
cmc
xor
call
pushf
call
movb
pushf
popl
pushf
movb
jmp
jmp
pushf
push
call
bswap
mov
pusha
lea
jmp
popl
pusha
lea
jmp
mov
push
lea
jmp
pushf
pushf
popl
call
pushf
popl
mov
pushl
popl
pushf
pushl
lea
jmp
bt
add
pushf
jmp
pushl
pushf
pushf
mov
pushf
mov
pushf
lea
jmp
ror
push
aad
mov
shr
test
mov
stc
pusha
shl
mov
stc
add
clc
shrd
movb
pushl
call
not
xchg
inc
mov
aad
rcr
movsbw
pop
xadd
call
pushf
push
mov
pushl
lea
jmp
lea
jg
dec
push
movb
xor
stc
call
and
mov
mov
cmp
sub
clc
push
rol
mov
jmp
call
call
aaa
test
not
mov
js
cmc
add
pusha
pusha
pushf
popl
pushl
movb
pushl
pushl
pushl
popl
push
lea
jmp
rcl
das
shl
mov
pushf
stc
bswap
mov
bt
cmc
add
mov
pusha
mov
pusha
pushf
lea
jmp
pushf
popl
jmp
test
pusha
cmc
pushl
add
pushf
jmp
movb
dec
jmp
jmp
mov
mov
pushf
popl
movb
call
rep
btr
bswap
mov
bsf
rcr
mov
clc
cmc
cld
movb
pushl
popf
pusha
pushf
push
lea
jmp
pushf
pusha
pushl
popl
pushf
movb
lea
jmp
not
mov
pusha
clc
clc
sub
stc
stc
mov
cmc
movb
sub
pushf
push
jmp
push
pusha
bswap
lea
jmp
jmp
mov
bt
stc
jmp
mov
pushf
pushl
mov
jmp
jmp
lea
jne
pushf
sub
jmp
call
pusha
push
mov
call
clc
call
push
sub
mov
stc
add
pusha
pushf
jmp
