sbb
add
add
mov
js
pop
out
idivl
xchg
out
jnp
imul
adc
fnstsw
mov
sub
fs
inc
jne
outsb
xor
cmp
test
pop
nop
jl
in
inc
shll
push
das
inc
mov
cmp
andb
movsw
dec
adc
xor
test
outsb
movsb
sub
mov
xchg
ret
mov
sub
adc
arpl
ret
adc
sti
in
scas
inc
jnp
xor
cltd
cmpsl
add
in
sar
cmp
mov
jle
push
test
add
mov
std
popf
push
lock
jecxz
jge
mov
bound
or
jnp
sub
cltd
ror
negl
sbb
loope
aas
aaa
je
ret
mov
push
push
inc
pop
push
or
in
cmc
fs
lock
mov
out
pop
xlat
ret
movsb
pop
xor
paddusb
push
mov
loope
loop
dec
xchg
movsl
mov
inc
cmp
xchg
lods
pop
or
mov
cwtl
addb
jno
and
and
sbb
fistl
in
outsb
adc
insl
addl
jne
pop
adcb
and
mov
les
mov
mov
add
sbb
adc
sbb
call
rorb
xchg
std
mov
and
gs
movsb
pop
neg
add
xchg
leave
jge
in
mov
cmpsb
xor
cmp
lahf
repz
out
fcompl
xchg
mov
jp
jno
dec
pusha
je
sbb
icebp
xchg
cmp
lea
in
adc
sub
pop
pop
sbb
inc
lcall
and
xchg
mov
lret
sbb
fadd
mov
sub
jecxz
pop
ficoml
out
xchg
ja
inc
scas
mov
in
cmp
loop
push
aas
jmp
sahf
addl
sbb
loope
pop
mov
mov
cmpb
mov
lock
pop
add
cmp
lcall
inc
shlb
in
inc
inc
and
nop
nop
cmc
push
fidivrs
je
adc
int
outsb
xchg
xchg
push
push
sahf
mov
xchg
jmp
loopne
stos
rcrl
test
adc
add
sub
mov
xor
mov
dec
sbb
dec
push
sub
pop
imul
or
arpl
insl
scas
inc
mov
fimuls
mov
sub
rcrl
outsl
sbb
stc
jg
xor
and
pop
and
push
or
xorl
inc
mov
xor
outsb
add
inc
hlt
inc
adc
js
cltd
call
ret
in
cmpsb
ret
mov
mov
pop
andl
mov
mov
clc
pop
mov
into
xchg
fimull
mov
fidivrs
lcall
loopne
xor
lods
test
das
sbb
arpl
stc
mov
mov
mov
lret
xor
push
jp
pop
in
sbb
test
xor
adc
ret
int3
mov
or
mov
push
int
das
mull
or
or
pop
in
movsl
sarb
aas
js
push
inc
negl
fimuls
ficompl
stc
cmp
pop
adc
inc
push
std
jg
stos
sub
mov
inc
lret
mov
fsubp
mov
cld
adc
out
clc
test
mov
sbb
xchg
dec
popf
sbb
scas
test
jmp
xor
imul
adcl
xor
push
mov
jp
lahf
xchg
dec
sbb
lods
and
jmp
aam
les
jmp
pushf
mov
mov
not
push
jl
or
xchg
out
popa
jp
in
push
std
mov
push
lods
jle
loop
rol
adc
aam
insb
xchg
dec
cmp
xchg
js
fmull
int
js
dec
lods
dec
lock
inc
jns
pop
stos
push
aad
push
in
andb
in
adc
mov
dec
out
pop
and
lea
movsb
pop
movsl
xlat
das
leave
push
pop
out
dec
fnstenv
sbb
jge
lock
mov
push
pop
xchg
mov
pop
sbb
or
sbb
ror
mov
add
adcl
shrw
push
jne
shrl
and
xor
mov
sarb
es
mov
insl
loopne
and
and
dec
mov
sbb
pop
or
add
imul
add
sub
jl
xchg
mov
mov
xor
sub
sub
cld
adc
lret
imul
mov
add
pop
mov
sbb
mov
loop
inc
xchg
mov
cmp
xor
push
mov
stos
imul
lds
push
pop
inc
cmc
jb
pop
inc
movsl
push
in
les
pop
jae
push
addl
push
or
mov
es
inc
enter
push
mov
fildl
dec
and
ja
add
ljmp
je
imul
inc
repnz
call
das
sbb
dec
add
add
aam
push
int3
xor
daa
dec
inc
loope
pop
or
sbb
cs
les
roll
outsb
pushf
dec
je
mov
aaa
fs
mov
mov
pop
add
jbe
jle
cwtl
mov
mov
and
sbbb
inc
pop
jb
push
jne
mov
in
sub
and
or
ds
pop
loopne
sub
sub
ja
mov
popl
fwait
push
mov
sub
dec
mov
pop
cli
shll
rorl
or
pop
mov
mov
shlb
movsl
outsb
scas
or
push
xor
cld
push
cmpb
inc
imul
repnz
sarb
add
lock
pushf
sbb
sub
test
lods
sbb
xchg
ja
jno
stos
fmull
out
int3
push
push
push
test
icebp
and
fstp
mov
inc
test
ret
mov
mov
or
aas
cs
xor
add
into
mov
sub
mov
sub
js
push
ret
hlt
mulb
dec
xor
hlt
and
xchg
outsl
xchg
lahf
les
inc
cwtl
test
lret
push
shrb
leave
in
cltd
iret
loope
adc
jge
add
cli
imul
cmp
stos
and
inc
cwtl
jae
stos
stc
fsts
dec
lcall
jle
xchg
lcall
mov
and
or
cmp
out
and
arpl
mov
out
fldenv
xchg
addr16
push
xchg
push
nop
inc
ret
and
jo
sub
arpl
dec
push
hlt
cmpsb
jmp
mov
aaa
mov
clc
aam
repz
out
or
lds
jno
mov
inc
decb
or
mov
orl
cmc
xchg
int3
stos
or
push
js
js
mov
in
ret
pusha
cmpsb
out
push
fwait
jp
xchg
movsb
push
ds
insl
dec
rorl
mov
inc
mov
inc
mov
xchg
inc
or
call
aaa
inc
jg
add
in
cmp
mov
sbb
add
mov
pop
arpl
cmc
lea
mov
dec
gs
in
orl
push
adc
sub
xor
pop
pop
mov
pushl
popa
mov
sub
mov
mov
adc
mov
inc
jbe
or
daa
int
mov
pop
cmp
lock
mov
or
mov
mov
push
addl
mov
jl
jbe
dec
fisubrs
in
dec
sahf
inc
es
frndint
aaa
fwait
ljmp
cmpsb
nop
jecxz
addr16
add
sub
pop
mov
pop
das
cmp
loop
shl
mov
addb
or
adc
repnz
roll
std
jmp
in
push
int
loope
xchg
fstpl
ljmp
xor
insb
pop
mov
and
mov
mov
inc
cmp
mov
outsb
sbb
cmp
add
cmp
mov
jae
adc
push
lret
or
xchg
jns
xchg
das
mov
pop
sbb
inc
adc
dec
adc
push
js
mov
int
shll
xchg
dec
sbb
inc
or
mov
ret
add
push
jbe
out
dec
fidivrl
inc
and
push
insl
mov
sbb
inc
out
dec
jo
cld
sub
testl
pop
adc
xchg
rcl
cli
call
lret
or
ljmp
js
jg
or
xchg
outsb
inc
mov
and
xor
mov
inc
test
lret
cmc
loopne
mov
pop
in
jge
aas
inc
xlat
dec
pop
loopne
and
adc
ja
les
out
inc
lods
loopne
dec
pop
gs
aas
outsl
lds
mov
mov
pop
push
or
and
scas
popa
daa
popa
inc
inc
push
sub
adc
pop
aaa
in
movsl
adc
je
mov
mov
aam
cmp
or
sub
cltd
mov
pop
shlb
fsubr
cmp
mov
loopne
xchg
mov
out
lret
push
es
mov
jae
and
mov
repz
mov
out
ret
inc
ret
push
inc
sub
inc
jg
pop
jl
and
push
insl
xchg
inc
mov
loope
pop
xor
adc
ss
enter
xor
cli
jmp
mov
cmpsb
xchg
jg
xor
pop
xor
aam
loop
icebp
push
jbe
push
sub
fidivrl
lods
xor
mov
cmp
push
fisttpll
test
rclb
sti
push
mov
sbb
rolb
call
rcll
in
adc
push
mov
adc
sub
sub
and
cmp
mov
xor
mov
pmulhw
ficoms
out
aad
or
sub
daa
je
popa
push
adc
cmpsl
push
mov
or
pop
push
push
adc
pusha
mov
repnz
adc
mov
cmpsl
cmc
xor
scas
xchg
mov
cmc
xor
sbb
mov
sarl
fidivs
adc
jmp
cmpsl
std
dec
shll
pusha
outsl
push
inc
mov
scas
sbb
push
stc
jg
jl
int3
lea
addr16
cld
stos
jae
dec
andl
pusha
xor
and
jns
cmp
int3
pop
cmpsl
mov
insb
leave
mov
daa
adc
in
lock
lock
push
and
lods
cmp
addps
fidivl
push
adc
xchg
push
in
imul
pop
in
cmpsb
aam
ret
xchg
ror
xchg
sub
cmp
jbe
mov
fistpl
out
pushf
call
xchg
jo
push
loope
xchg
sbb
add
mov
sahf
call
adc
ljmp
jbe
add
mov
xor
ljmp
cmp
sarl
sbb
xor
inc
lret
sub
loope
in
movsl
inc
cwtl
lret
jg
adc
or
xchg
push
xchg
ja
bswap
sub
testb
push
add
or
ljmp
sub
sbbb
fs
xchg
jnp
movsl
movl
in
dec
dec
shlb
shl
repnz
xor
mov
pop
and
add
in
lahf
and
je
mov
cmpsl
push
jl
mov
in
jl
push
aad
test
imul
pop
push
stos
xor
mov
in
jge
adc
push
mov
sbb
mov
das
std
mov
shll
lahf
cmpsl
or
les
push
cmp
std
mov
push
adcb
pop
lret
popa
mov
lea
mov
std
aaa
mov
push
mov
cwtl
xlat
lods
jne
adcb
xor
sub
aas
into
add
in
rolb
addb
stc
leave
or
and
or
jg
mov
jno
pop
adc
jae
icebp
insb
inc
incb
out
mov
loope
insb
loope
sub
jl
cltd
sti
cmp
fnsave
and
mov
in
and
and
mov
icebp
or
in
cmp
xchg
cmp
out
jp
xchg
movsb
pop
pop
dec
cmp
pop
imul
test
stos
cmp
pop
jb
sbb
call
call
popf
push
pop
cmpsl
mov
lea
dec
xor
inc
cmpsl
in
test
aam
cmp
stos
subl
pop
test
xor
push
iret
mov
ds
or
loope
leave
sbbl
movsb
jle
inc
dec
outsl
jge
jg
test
lods
fisubs
sbb
je
mov
lahf
and
subl
iret
jo
dec
push
inc
push
jl
push
xor
bound
push
js
xchg
xor
movsl
pop
in
jae
adc
inc
aam
les
sbb
inc
jae
daa
in
enter
mov
mov
in
stos
jae
cmpsb
out
jp
or
adcl
mov
push
jbe
jns
xchg
jge
mov
dec
aaa
cmpsb
or
mov
lcall
xor
push
adc
iret
fsub
mov
movsb
in
adc
jo
xchg
xchg
lods
in
push
test
cwtl
movsb
inc
es
test
test
dec
pop
or
iret
sbb
ret
push
lret
loopne
shl
mov
sbb
es
mov
dec
rcr
xor
pop
aas
andl
jecxz
inc
cli
leave
and
pop
add
adc
pop
add
xchg
jns
outsb
add
loope
ss
push
jmp
and
sbb
dec
dec
or
out
sbb
pusha
ret
xchg
loopne
je
push
mov
addr16
push
xchg
or
jmp
or
mov
sbb
cli
in
pusha
xor
and
loop
and
dec
jno
sub
push
lahf
sub
in
idiv
imul
mov
adc
inc
and
out
mov
push
xor
sub
movsl
jp
lahf
and
xchg
push
mov
test
cs
jmp
sub
ds
jge
fistpll
push
test
stos
mov
fxsave
pushw
adc
add
lret
jmp
mov
inc
inc
dec
xor
push
push
outsb
leave
fimuls
scas
push
mov
fisubl
jg
pop
lret
stos
mov
push
inc
int3
sbbb
negb
push
std
push
xchg
cmc
rcrl
scas
mov
lahf
pop
mov
nopl
clc
movsl
pop
ret
jnp
aad
loop
pop
pop
pop
notl
mov
int3
out
jnp
mov
hlt
xchg
aas
aad
mov
sub
stc
inc
mov
fcmovnbe
mov
call
je
inc
ss
mov
mov
pop
push
out
aas
push
pop
lock
data16
jnp
lock
push
lods
lods
cmc
push
xchg
rclb
and
ss
or
push
mov
mov
pop
jge
jns
push
stc
and
mov
nop
cmp
jae
mov
cld
xor
jge
adc
cld
in
and
push
mov
out
inc
inc
mov
daa
pop
out
das
imul
es
ss
mov
xor
movl
into
popf
sub
push
in
in
pop
lea
ds
or
mov
pop
pop
jo
jb
scas
icebp
push
adc
push
push
mov
or
xchg
mov
mov
mov
push
sbb
inc
cmp
adcl
dec
mov
ss
daa
je
aam
mov
ljmp
adc
lret
nop
call
cld
xchg
xor
jno
leave
imul
cli
push
cmpsb
and
sub
pop
je
lock
dec
enter
outsl
sub
lock
dec
jg
std
push
mov
divb
cmpsb
cwtl
mov
hlt
dec
sbb
mov
and
jbe
test
popa
cmp
xor
repnz
fcomps
xor
inc
and
dec
push
and
jecxz
inc
outsl
stc
idivb
or
andl
adc
movsl
sahf
hlt
repz
push
jo
sub
xchg
into
mov
mov
mov
dec
mov
repnz
cmp
std
jo
and
mov
negb
adc
inc
jno
add
mov
jl
arpl
ret
scas
sbb
inc
insl
pop
sub
pop
pop
pusha
andl
out
sub
mov
icebp
pusha
add
push
xchg
dec
fucomip
outsb
subl
imul
push
mov
psubsw
and
mov
int
negl
push
test
inc
insl
stos
mov
arpl
xchg
mov
push
lock
js
and
jp
inc
pop
lods
lcall
cmp
dec
cmp
ds
les
push
sbb
ret
mov
xchg
adc
mov
dec
xchg
jnp
cli
cwtl
jecxz
or
loop
movl
push
dec
icebp
xor
push
cmpsb
cmp
mov
xchg
xchg
insb
jae
and
mov
es
movsb
bound
jmp
xchg
pop
pop
adc
rorb
pop
es
inc
ret
in
test
inc
push
pop
add
adcl
push
push
mov
hlt
mov
push
cwtl
jp
leave
shll
ja
add
outsl
sub
call
popf
popa
pop
mov
mov
or
jmp
test
adc
lods
dec
xor
in
das
call
fs
inc
xor
mov
jae
xor
in
add
mov
movsb
out
data16
mov
int3
cmpsb
push
jmp
test
lahf
or
push
mov
adc
add
cli
cs
stos
mov
sub
xor
cld
cld
and
sti
jl
out
adc
nop
adc
rorb
data16
or
add
cmc
jne
sub
sub
dec
mov
ds
stc
cmp
mov
sub
scas
cmp
jne
xchg
mov
cmp
aaa
dec
add
or
dec
and
xchg
mov
bound
fsubrp
add
lret
lahf
lcall
sti
bound
sti
cli
mov
adc
cmp
rcr
mov
popa
sub
lds
jge
cmp
mov
sti
xor
jge
int3
les
into
jg
and
out
clc
hlt
leave
rcrb
xchg
jmp
inc
pop
and
hlt
lds
jnp
add
inc
pop
xchg
fst
pushf
cmpsl
inc
add
aas
mov
addl
xchg
mov
popf
and
scas
xchg
lret
adc
rorb
adcl
push
cs
xchg
insl
mov
add
adc
mov
dec
xor
mov
jecxz
or
mov
loope
jg
inc
jmp
lret
jae,pn
adc
fldenv
fadds
mov
adc
inc
dec
inc
stos
jae
sbb
jg
cltd
stos
pushf
inc
int
fsubrs
cmp
pop
add
test
outsb
pop
fwait
push
psrad
bound
or
dec
repz
xchg
aam
das
hlt
inc
pop
add
mov
cmc
in
push
inc
sub
push
outsl
pop
jle
and
mov
andl
push
add
leave
xchg
push
cwtl
test
hlt
inc
sbb
outsl
inc
cmp
push
sarb
push
jge
je
imul
popa
fdivl
jns
lds
pand
decl
lret
pop
add
fwait
test
outsb
andl
jmp
mov
lahf
les
popf
inc
sbb
cmpsb
int
stos
inc
jb
mov
js
and
add
or
hlt
xor
movsl
push
mov
stos
sbb
inc
jo
sbb
jge
rcrl
xchg
rorl
jo
ja
incl
and
sbbl
test
scas
cltd
stc
mov
jae
pop
xchg
fidivs
scas
xchg
aad
jmp
xchg
mov
out
repz
popf
shl
jns
push
dec
ja
push
mov
lahf
pop
fadds
pop
mov
call
test
icebp
repnz
jbe
jno
mov
and
fisubrs
mov
jl
jne
lahf
dec
insb
push
push
mov
ds
jecxz
jae
jecxz
cmp
stos
imul
and
sbb
add
das
inc
mov
repnz
fimuls
mov
ss
imul
cs
loopne
dec
cld
cmpsb
aaa
ret
and
les
and
pop
lahf
sbb
fcmovu
sub
jle
test
add
test
fcom
rcr
test
add
and
data16
into
adc
rorl
inc
jmp
bound
ret
xchg
xorl
xchg
shl
mov
ja
pop
mov
jae
in
daa
push
cmp
xchg
insl
pop
cmpsb
mov
scas
test
inc
xorl
sub
jo
push
andl
mov
rorb
push
push
and
sti
sub
stos
in
in
jecxz
pop
xlat
jno
lcall
xchg
mov
in
jbe
xchg
in
call
mov
cli
fisttpl
aad
jno
jo
jg
mov
or
dec
repz
xlat
sbb
rcr
mov
fisttpl
mov
xchg
addb
adc
xchg
mov
inc
lret
xchg
jne
mov
sub
loopne
inc
sar
aaa
cmc
fsubl
mov
add
lahf
lcall
ret
enter
inc
push
mov
enter
pop
cli
sub
adc
xlat
sarl
fsubrs
jecxz
jo
ret
pop
inc
ss
fucomp
in
pushf
mov
or
movsb
jp
inc
test
or
mov
hlt
sbb
xlat
scas
jnp
mov
ja
cs
rolb
xlat
mov
cs
test
xchg
pop
out
aas
adc
pop
add
jmp
pop
addl
das
xor
add
testb
out
push
faddl
xor
ss
mov
or
cs
and
or
add
inc
mov
out
faddp
mov
aam
das
push
and
mov
cmc
cmp
fidivs
bound
nop
or
cmpsb
sub
and
insb
nop
es
cld
cmp
cmpsl
pop
mov
aas
dec
mov
or
xchg
mov
adc
jae
in
sub
cmc
sub
lahf
inc
or
cmc
jo
xchg
push
jmp
sbb
jge
push
mov
add
fxch
jae
data16
insl
and
cltd
sub
dec
pop
dec
pop
pop
pop
jae
ret
lds
sbb
lods
out
add
push
add
add
jb
scas
out
insb
lahf
or
mov
call
enter
cli
scas
xor
lods
mov
and
std
adc
movsb
cmp
in
and
jg
cltd
and
push
add
out
xchg
out
xor
sbb
bound
dec
ret
sbb
imul
mov
clc
pop
mov
push
mov
or
aam
fs
push
scas
xor
mov
cld
or
push
fbstp
mov
fldt
shrb
mov
dec
mov
xchg
add
loopne
rcr
iret
push
dec
daa
xor
adc
addr16
inc
jmp
or
aaa
or
scas
jnp
push
push
pop
cwtl
leave
or
stos
mov
inc
sub
jg
in
or
iret
push
in
or
xorl
gs
mov
and
or
roll
les
add
adc
jecxz
stos
outsb
xlat
in
out
add
pop
pop
mov
repnz
adc
push
push
sub
mov
mov
jmp
mov
add
in
mov
into
jge
push
push
fs
push
mov
fisubs
jo
nop
xor
imul
out
in
outsl
in
enter
mov
mov
fiaddl
add
pushf
pop
out
mov
adc
iret
sub
mov
and
dec
lock
or
pop
sub
ljmp
sbb
xchg
and
into
xchg
xchg
repnz
jmp
jb
pop
and
cmpl
orb
mov
addr16
cmp
sub
dec
push
inc
xor
sahf
xchg
xchg
xchg
cmp
or
loop
imul
adc
pop
aaa
cwtl
push
adc
das
and
fwait
jo
add
imul
dec
icebp
xlat
lcall
add
push
scas
push
in
cmpsb
std
push
sub
aam
xor
sub
or
es
jne
cmp
mov
inc
aaa
sbb
and
scas
mov
dec
pop
or
loope
add
repz
mov
incb
mov
add
jno
push
pop
push
cmp
xchg
jmp
cmp
fcoml
push
inc
clc
sub
hlt
std
ret
fnstcw
sbb
push
test
hlt
pop
jo
add
cmp
pop
inc
push
fisttpl
dec
mov
pop
out
inc
jno
pop
aad
daa
in
jl
jmp
cld
gs
es
aad
mov
stos
jns
cltd
fcompl
outsb
lcall
inc
leave
lret
mov
mov
push
push
adc
pop
sbb
adc
icebp
leave
mov
fcomps
adc
divb
sbb
lret
das
and
lds
jb
inc
mov
arpl
xchg
je
subl
mov
scas
push
imul
xor
cmp
orb
addr16
mov
imul
pop
in
mov
add
sub
fcmovnu
cmp
mov
inc
sub
shrl
ja
pop
xchg
cmpsb
lcall
lcall
inc
xchg
lock
xchg
pop
movsb
add
add
fnstenv
inc
ret
nop
and
test
add
daa
mov
cmp
mov
cli
aam
jg
cmp
cmpsb
mov
stc
movsl
jmp
das
push
push
push
nop
rorl
mov
sbb
cmp
lcall
push
xchg
inc
pop
scas
and
cmpsb
shll
mov
incb
sbb
into
jno
shll
xchg
negl
push
inc
jp
push
bound
in
xchg
mov
les
mov
or
shrb
icebp
xchg
cwtl
inc
inc
sub
mov
push
mov
push
xchg
int
dec
outsl
push
jmp
pop
int3
scas
out
jecxz
sbb
cmpsl
jne
scas
fwait
cs
mov
daa
jbe
adc
adc
push
nop
pop
movsl
clc
outsb
das
xor
int3
fmull
rclb
mov
push
mov
mov
jge
gs
push
inc
dec
fdivs
test
fwait
es
les
les
mov
mov
jae
adc
rcrl
in
inc
push
xorl
in
cltd
or
arpl
jb
gs
pop
cld
nop
das
scas
add
in
lahf
icebp
mov
insb
ds
cmp
in
lcall
pop
js
loop
int3
test
shlb
or
or
fildll
jp
push
add
out
sbb
addr16
mov
xchg
adc
add
loopne
push
iret
jle
mov
or
adc
pop
mov
adc
mov
daa
lcall
and
inc
in
cmp
sbb
shll
cld
add
lret
xor
mov
dec
xchg
repnz
test
addr16
pop
bound
jnp
dec
add
dec
or
or
jl
ret
mov
jb
cmp
cmp
fwait
daa
xchg
arpl
xchg
mov
stos
or
imulb
movl
insb
loop
mov
cmp
xchg
xorl
fnsave
sbb
stos
rcl
pushf
cltd
int3
sbb
lahf
pop
mov
sbb
and
dec
fs
xorl
xchg
in
scas
cmp
movsl
rcrb
int3
lret
int3
push
cmc
clc
testl
lock
jl
in
je
add
mov
mov
addr16
outsb
fcmovne
xor
sti
pop
fs
cmc
dec
mov
inc
dec
les
jle
jmp
jae
mov
add
pop
and
push
inc
aam
imul
jnp
loop
inc
inc
in
push
dec
repz
add
js
es
sbb
sbb
xor
stos
or
jnp
addr16
jo
mov
or
cwtl
out
push
inc
sti
pop
dec
cmpsb
mov
sbb
dec
jl
xchg
fstpl
xchg
clc
sub
imul
insl
xor
cld
es
out
loopne
xchg
mov
sti
out
notb
mov
sbb
es
shlb
or
push
bound
frstor
test
add
imul
dec
dec
inc
xor
icebp
cli
ret
ds
repnz
aaa
leave
fcoms
jmp
rclb
scas
mov
mov
jne
loope
mov
sub
mov
sbb
stos
mov
pop
adc
shll
push
pop
or
sub
jne
push
test
inc
sbb
jp
sub
test
or
out
cmpsb
fsubr
out
insl
mov
dec
xlat
out
sti
add
cmp
push
and
and
ja
fcoms
pop
es
dec
cmp
test
fucom
shlb
jbe
push
shl
rorb
sub
push
cmpl
outsb
out
cmp
mov
ss
sbb
paddsb
cld
popa
fsts
aad
cmp
sub
cmp
ljmp
pop
add
mov
sub
xchg
push
dec
mov
and
ficoms
xchg
mov
or
mov
test
mov
sbb
jp
jae
xchg
test
sti
mov
incb
adc
lds
in
adc
inc
sbb
loop
jo
icebp
sbb
add
aas
mov
insl
push
aaa
lret
xor
adc
and
ds
enter
inc
add
mov
inc
sub
pop
iret
loopne
xchg
push
mov
sub
dec
bound
test
mov
pop
jnp
pop
mov
mov
cltd
push
sbbl
cs
lods
mov
pop
pop
adc
pop
scas
mov
in
mov
dec
sarl
add
push
fiaddl
jle
in
pop
mov
adc
mov
ja
clc
adc
add
iret
andl
pop
dec
leave
ss
xchg
icebp
pop
insb
rcrl
or
lods
push
in
mov
out
pop
push
dec
stos
mov
hlt
sbb
sub
xor
mov
stc
fimuls
popa
mov
movsl
arpl
repnz
add
daa
jno
xchg
push
push
movsb
shll
cmp
jo
add
cld
sub
sub
out
les
jmp
lea
inc
push
add
xchg
mov
xor
mov
inc
roll
insl
scas
enter
sub
push
test
ret
lds
push
sbb
mov
jae
stc
dec
cmp
aad
mov
xchg
push
adc
shll
loop
jle
stos
movsb
stc
fs
mov
push
outsb
shlb
arpl
jmp
dec
mov
pop
push
pop
sub
pop
adc
mov
push
add
xor
push
arpl
and
xchg
fcmovnbe
sub
mov
mov
push
gs
hlt
jbe
push
imul
mov
scas
fwait
popa
adc
lods
bound
and
icebp
mov
fdivrl
mov
pop
push
sub
lcall
adc
dec
or
imul
cld
cs
out
and
fmul
bnd
sub
pop
xchg
mov
repz
sub
mov
int
add
adc
sub
in
aaa
xorb
pushf
jg
push
adc
mov
xchg
imul
scas
loop
cmpsb
fadds
mov
aam
scas
hlt
or
sbb
incb
fildl
not
into
jns
mov
xchg
sub
fdivl
push
adc
xor
push
push
cltd
or
enter
test
mov
insl
add
or
cmp
sub
mov
sub
dec
fs
mov
iret
xchg
dec
in
test
in
test
lods
dec
int3
push
inc
aam
out
and
xchg
test
push
or
je
xor
mov
sub
jle
push
sarl
data16
cmc
xor
jnp
pop
call
imul
xchg
xchg
icebp
mov
adc
adc
adc
testb
es
cmp
scas
std
adc
lret
ret
cs
enter
add
xchg
sbb
mov
int
jge
xorl
lock
mov
inc
jnp
call
xor
mov
inc
fwait
call
icebp
dec
mov
sbb
aaa
cmpsl
sub
push
xchg
dec
and
jp
int3
sar
test
hlt
sahf
pop
jne
es
push
aas
push
sub
adc
call
das
inc
cmc
js
test
add
push
leave
aad
icebp
in
jle
js
add
rorb
ret
in
jb
inc
add
ret
lea
jo
jnp
out
pop
ret
lea
fisubl
lret
and
jg
fstpt
daa
mov
fstl
jecxz
enter
mov
xor
pop
pop
test
insb
cwtl
mov
movsl
push
xor
mov
shlb
jns
dec
ret
bound
loop
out
decl
loope
fcos
ret
xor
pop
xchg
out
jns
fscale
xchg
add
jb
iret
ret
mov
adc
cltd
aas
push
jae
inc
pusha
aaa
jbe
dec
test
mov
lret
mov
data16
add
cs
push
subb
dec
mov
movsl
in
shrl
sbbl
hlt
sub
scas
es
dec
sbb
sbb
daa
sbb
dec
test
or
jmp
cwtl
sub
stos
sti
fcomps
stos
cmpsl
pushw
fiadds
and
fldt
mov
pop
aas
dec
das
nop
cmp
iret
inc
scas
xchg
popf
mov
aas
bnd
mov
int
xchg
or
mov
lea
icebp
mov
les
scas
fldcw
fadd
aaa
movsb
push
inc
clc
daa
add
dec
sbb
mov
add
add
loopne
mov
rcrb
orb
sub
addr16
mov
adc
dec
xchg
aam
fsub
int3
das
fs
xchg
mov
lret
xor
shlb
fiadds
cmp
loope
int
cltd
rcrl
mov
call
jo
mov
enter
out
js
mov
fs
adc
mov
or
or
in
add
jmp
sub
aam
and
mov
or
push
adc
and
xchg
orb
in
mov
call
cmp
gs
les
mov
addr16
enter
out
mov
or
lcall
pop
cmp
xor
jne
inc
xchg
shlb
pop
ds
sahf
in
imul
mov
iret
xor
sbb
adcb
dec
inc
mov
sbb
shlb
std
jle
orl
jp
test
pop
fs
sbb
mov
cmp
cmpsl
subb
mov
dec
inc
jno
mov
aam
cmp
shll
rcl
adc
sub
les
lahf
fnstsw
imul
sahf
popf
mov
negb
or
mov
inc
cmp
pop
add
les
inc
or
add
fs
in
scas
dec
add
sbb
jle
adcl
ficompl
test
cltd
jge
mov
ljmp
dec
scas
jnp
aaa
mov
ss
out
add
lcall
pop
out
sub
push
lods
pushf
aas
orl
mov
sub
add
test
outsl
adc
mov
daa
jno
sbb
bound
cs
gs
jg
icebp
fwait
je
inc
and
jae
push
adc
mov
fwait
loop
sub
mov
adc
clc
test
lods
insb
mov
adc
les
jae
mov
add
in
sub
or
mov
sub
sub
push
adc
push
aad
fisubrl
cmp
ss
in
pop
jno
inc
outsb
sarb
in
mov
sbb
push
mov
js
add
cmp
fldt
sub
repnz
stc
call
aaa
mov
int3
mov
shll
dec
test
push
in
ss
cli
push
dec
pushf
sub
cltd
rorb
mov
jns
in
cmp
xchg
sbb
cmpsb
std
xchg
mov
out
loope
mov
and
icebp
rolb
pop
cwtl
lods
repz
aam
jecxz
cmpsb
and
fdivs
xor
push
lret
in
lahf
sarb
xor
push
ret
bound
sbb
pop
daa
xor
inc
stos
mov
and
or
add
in
out
xchg
push
cmp
scas
fldz
mov
mov
mov
movsl
add
or
test
lea
sub
mov
mov
dec
adc
push
cmp
pop
cmp
dec
adc
rcrl
rolb
mov
ds
or
lcall
cwtl
and
mov
or
cmc
jl
xchg
push
fstpl
shlb
jo
jbe
mov
mov
push
in
gs
test
xchg
xchg
test
push
and
incb
dec
jbe
or
jge
mov
repnz
int
pop
sub
mov
out
test
dec
mov
xor
pop
dec
xor
pop
and
mov
fisttps
shll
imul
mov
movsl
mov
je
pushf
pop
loop
mov
push
and
insl
sub
sbb
lock
adc
cld
loopne
adc
leave
jge
dec
cmp
das
lcall
lods
orl
jg
jnp
mov
xchg
das
adc
jle
xchg
push
dec
mov
fcoms
push
cs
pop
inc
fisttpl
and
aad
out
cwtl
repnz
stos
mov
dec
mov
mov
inc
sub
inc
aam
stos
jo
dec
out
pop
mov
idivl
mov
add
mov
repnz
push
xor
or
sbb
cwtl
or
inc
xor
decb
adc
stos
xchg
cmp
fdivs
cmp
xchg
cmp
data16
decb
or
inc
cmp
out
fistps
out
mov
xchg
insb
pop
mov
xchg
cltd
pushw
inc
mov
movsb
movsl
dec
mov
rclb
mov
fisttpl
xchg
movsb
cmpsl
clc
xlat
imul
bound
cmp
or
aas
in
pop
insb
dec
dec
sbb
mov
pop
push
and
and
mov
ss
ja
std
jl
loopne
sbb
out
xchg
jno
jne
or
sti
dec
movsb
adc
xchg
fwait
imul
mov
mov
mov
ret
push
jge
fwait
lds
dec
rcrb
push
jbe
pop
je
xor
mov
fdivrs
ret
cmpsb
jmp
outsb
in
sub
popa
out
movsb
add
lds
mov
fwait
push
mov
xchg
fs
cmc
popaw
shrb
mov
pop
aaa
repz
push
repnz
gs
add
sarb
push
loop
mov
cmc
cmp
inc
mov
scas
or
mov
in
mov
cltd
mov
inc
icebp
aam
dec
mov
out
and
nop
ret
mov
xchg
add
repnz
ss
xchg
mov
cmpsb
add
rcrl
mov
pushf
or
cltd
jl
call
add
adc
adc
push
imul
icebp
fisubrs
pop
xor
mov
pop
leave
dec
cmp
sbb
mov
mov
inc
adc
call
pop
xor
push
shrb
adc
push
push
lea
sbb
test
andl
leave
add
pop
scas
mov
jmp
cmc
xchg
jl
pop
and
and
out
loop
subb
or
clc
aas
outsl
dec
pop
dec
pop
lods
cmpb
imul
mov
inc
add
aaa
ds
adc
scas
pop
sbb
jo
xorl
pop
adc
lcall
sbb
into
shl
inc
mov
or
hlt
outsb
push
push
xor
lods
shl
or
adc
or
pop
sbb
cltd
rorb
pop
or
push
lods
popa
mov
and
mov
daa
scas
arpl
xor
sbb
hlt
sub
pop
cltd
xchg
aas
addr16
xchg
pop
test
xchg
ss
adc
dec
cmovg
xchg
arpl
ljmp
fs
add
rcrl
mov
add
cmc
fidivl
sub
flds
adc
push
pushf
adc
inc
pop
out
jns
push
pop
jmp
div
adc
clc
jbe
inc
mov
test
cmp
inc
cli
cwtl
mov
ret
mov
mov
int
inc
mov
mov
in
std
dec
pop
int3
dec
ljmp
stos
je
std
sub
jl
outsl
adc
nop
and
mov
push
xchg
xchg
ss
dec
jge
fstl
rcrb
pop
loopne
and
mov
pop
jp
xor
xor
fsubs
push
repnz
cmp
in
mov
fs
lds
lea
push
lcall
movsb
dec
pop
mov
mov
das
jl
int3
pop
jmp
pop
ss
or
jne
mov
xlat
sbb
lcall
mov
cmpb
call
ret
enter
iret
lret
andl
dec
sbb
testl
rcpps
mov
lahf
lret
xchg
push
int
loop
mov
mov
inc
inc
xchg
add
jno
sbb
mov
stos
int3
mov
scas
out
ja
sub
push
rorl
iret
jns
int
scas
jecxz
cmc
lahf
shl
cmc
xchg
cmp
idiv
xor
or
mov
xchg
add
imul
popa
jmp
imul
es
mov
jbe
cltd
loope
cmc
dec
adc
mov
dec
push
insb
xchg
orb
aad
sbb
and
mov
pop
pop
xor
xchg
js
imul
popa
mov
or
and
data16
cs
push
ljmp
or
filds
mov
pop
adc
jp
lret
mov
fwait
inc
sub
cmp
enter
pop
repnz
mov
mov
loopne
fmul
pop
adc
jno
add
push
out
ret
xor
test
xlat
push
mov
out
mov
inc
mov
adc
sub
enter
loope
lea
push
jb
lahf
mov
xchg
jnp
inc
pop
pusha
mov
dec
addb
adc
dec
pop
int3
pop
rcrl
sub
cmp
pop
out
iret
sahf
mov
cld
xchg
dec
dec
out
pop
dec
dec
imul
push
xor
inc
mov
cmc
movsb
adc
out
jle
clc
icebp
lcall
sarl
mov
mov
pop
and
mov
cmp
das
lret
mulb
aas
lcall
fiadds
mov
popa
into
insb
loope
xchg
add
mov
mov
jmp
es
and
pop
pop
jae
stos
xor
movsl
ret
jb
xor
jnp
xchg
mov
xor
xlat
push
sbb
xchg
sbb
jmp
pop
sti
xor
lea
add
adc
sahf
or
hlt
gs
out
push
in
push
test
or
pop
and
mov
enter
bound
xchg
rcrb
imul
jo
sub
sbb
ret
gs
cmp
lods
add
out
xor
int3
push
mov
outsl
pop
ret
pop
cwtl
dec
aaa
nopl
repz
shlb
rorb
adc
outsl
xor
fwait
xchg
sub
xor
mov
sub
push
bound
lret
jnp
int
adc
sbb
jne
shrb
xchg
popf
jnp
mov
stos
dec
mov
mov
mov
xor
adc
ljmp
stos
subl
mov
dec
cmpb
pushf
mov
push
ds
xorb
cld
fdivs
rol
outsl
pop
pop
cmpsl
jno,pt
out
inc
movsl
mov
imul
push
inc
stos
orl
cmp
pop
js
push
call
outsb
js
mov
pusha
sub
cmp
or
fabs
xchg
test
mov
cmpsb
inc
sub
mov
push
and
stc
push
enter
shl
push
xchg
xchg
loop
mov
stos
int3
mov
dec
cltd
jnp
sbb
mov
push
call
out
cld
je
push
out
fiaddl
inc
lods
sub
out
dec
arpl
sarl
add
je
aaa
jge
inc
push
adc
in
or
dec
push
out
pop
call
xchg
pop
fs
sti
into
popa
add
divb
pop
push
imul
xchg
std
pop
jne
pop
outsl
jmp
cmp
int3
lahf
into
cld
push
je
jge
iret
mov
mov
adc
dec
pop
ja
dec
test
mov
outsl
ss
xor
ja
push
frstor
mov
inc
push
outsl
xor
std
jge
cmp
jbe
lods
push
mov
add
testl
gs
pop
jg
or
and
dec
outsl
pop
add
or
jl
lock
sbb
test
subl
pop
cwtl
cmc
sub
test
pop
jnp
xchg
mov
mov
pop
leave
rcrl
and
mov
out
mov
addl
push
sub
out
ret
sbb
fisubrl
add
inc
out
push
jns
popa
inc
sbb
scas
arpl
fnstcw
jo
mov
mov
neg
mov
push
gs
push
das
mov
push
pop
xor
loopne
enter
test
outsl
jge,pn
push
jnp
testl
jp
out
jo
cmp
sti
popa
jbe
mov
xchg
sbb
dec
mov
mov
or
mov
fistpl
repnz
rorl
das
sahf
ds
in
aam
sarl
mov
cmc
cmp
aam
mov
repz
repnz
pop
nop
cmpsb
push
das
or
popa
insb
push
je
scas
sbb
adc
pop
les
loopne
or
jle
fwait
shll
rol
pop
aad
aam
mov
jmp
outsl
popf
imul
fwait
enter
add
and
dec
cmp
mov
and
jp
pop
popf
xchg
push
out
inc
stos
aad
inc
in
in
int3
dec
rcl
aas
ret
leave
mov
adc
xor
ja
sbb
out
inc
jp
mov
cmp
popf
mov
dec
mov
xor
rep
adc
fsubr
adc
sub
add
jno
je
outsb
inc
mov
ret
daa
xor
aas
or
sub
inc
loopne
sub
out
lea
js
imul
test
push
mov
mov
and
inc
mov
or
enter
js
aas
ljmp
push
dec
pop
pop
mov
xlat
inc
test
push
fisubrs
fldl
imul
cmc
int
add
jecxz
xchg
cld
ds
pop
cmpsl
mov
jb
xor
lcall
movsl
sub
into
out
fdiv
out
push
ret
aaa
pop
das
stc
andl
fldenv
iret
fcompl
test
inc
adc
cmpl
int3
cld
mov
popa
movb
loope
stc
xchg
jge
xor
xor
es
imul
inc
rcrb
fildll
pop
cmp
out
push
mov
lock
sarb
loop
repz
int3
les
mov
rol
es
mov
jo
out
test
push
arpl
xor
imul
enter
int
push
add
pushf
sti
out
pusha
sbb
sbb
mov
test
inc
stos
add
mov
fbld
fcmove
jbe
ljmp
ja
in
in
fwait
jecxz
outsb
lds
ja
mull
jno
mov
add
in
iret
test
lods
fistpll
insb
mov
in
sbb
xor
xlat
popa
xchg
cmp
call
fiadds
dec
lds
into
decb
nop
sahf
jae
es
popa
leave
add
and
cmp
fmuls
lea
out
cmc
adc
mov
nop
ds
xchg
es
lods
mov
repnz
imul
lods
and
push
xchg
pop
into
mov
mov
iret
sub
andl
inc
mov
mov
fcmove
mov
cmpsl
jmp
push
dec
dec
dec
lea
mov
cmc
lods
das
pop
decb
push
outsb
sbb
and
jecxz
ds
xor
xchg
inc
daa
imul
and
push
aad
ret
or
inc
int3
push
hlt
es
and
or
xchg
nop
stos
dec
rcr
pop
push
push
cmp
dec
pop
je
push
xorl
mov
inc
and
xchg
test
sub
mov
dec
jg
lret
or
push
jg
popa
cld
mov
jae
mov
ds
sarb
push
pop
mull
jecxz
roll
iret
movb
mov
mov
lods
pushf
in
mov
loope
aas
ds
xchg
test
je
sub
scas
fimuls
jp
movsb
mov
push
ret
movsb
mov
test
dec
aad
lea
daa
aaa
inc
push
es
sub
pop
push
mov
cmpsb
jns
mov
and
pop
inc
mov
pop
out
repz
jp
push
fldcw
in
out
cmp
lcall
test
or
ljmp
pop
pop
dec
jns
adc
push
inc
psubusb
push
pop
push
in
sti
shlb
addr16
repnz
add
dec
jnp
js
imul
lods
mov
loop
outsb
push
out
popa
push
xchg
or
jmp
jge
sbb
mov
jg
dec
in
xor
ret
insl
adc
fsub
xchg
xor
ror
daa
lcall
nop
push
popf
inc
es
cmc
and
mov
lret
adc
fwait
test
ja
mov
or
mov
inc
mov
mov
jo
pop
cmp
mov
fcomps
mov
stos
imul
xor
pop
mov
iret
jb
fwait
dec
fdivs
xor
in
aas
push
aam
popa
out
sbb
sub
mov
sub
in
ret
ficompl
sbb
and
arpl
xchg
in
mov
adc
mov
pop
nop
repnz
sub
fidivs
aad
call
mov
pop
mov
inc
ret
enter
mov
nop
sub
push
leave
push
push
bound
ljmp
xor
jecxz
dec
nop
mov
push
mov
insl
cltd
xchg
mov
dec
push
adc
and
and
and
aad
xor
outsb
rcll
aaa
adc
fnsave
lea
insl
mov
mov
dec
push
pop
xchg
mov
shl
aaa
test
jecxz
iret
add
in
test
or
mov
cmpsl
mov
mov
mov
dec
mov
mov
push
lcall
insb
cmp
xor
arpl
pop
mov
inc
leave
es
arpl
dec
out
jecxz
cmp
loop
jae
or
ljmp
cmp
jo
stos
lret
sub
shlb
shr
push
jmp
fistpll
enter
mov
pop
arpl
das
sub
dec
xor
adcl
push
popf
out
int
and
jne
fstl
flds
loop
nop
into
jns
or
mov
push
cmpsl
stc
push
push
sbb
in
fwait
enter
in
adc
inc
dec
data16
sub
mov
cmpsl
cmp
and
rolb
ja
imul
movsl
movsl
pushf
and
movsb
cli
cmp
and
mov
cmc
xchg
movsb
xchg
push
int3
pop
pop
push
aaa
xlat
sbb
inc
addr16
sbb
or
outsb
out
sub
mov
cmc
push
dec
aad
outsl
in
cmc
xchg
add
pusha
pop
ret
popa
cmp
int
dec
adc
mov
call
jae
dec
push
lods
pop
push
fdivrs
enter
push
cmp
loop
mov
push
jl
cmp
dec
les
or
mov
xchg
adc
es
jnp
dec
adcl
mov
pop
lahf
aaa
test
pop
and
fidivrs
sbb
iret
jbe
ret
lock
movsl
stos
xor
pop
hlt
sbb
outsl
fiadds
dec
or
mov
mov
sahf
and
enter
mov
sahf
in
dec
adc
push
fwait
inc
in
lock
pop
push
inc
ja
inc
jne
aad
fs
dec
xchg
ret
shl
rorl
xchg
aaa
pop
icebp
xchg
mov
pop
lock
int
imul
fisubrl
jecxz
aaa
popf
add
in
aaa
lret
mov
addr16
push
lds
push
adc
mov
and
fwait
xor
leave
out
or
pushf
lret
push
insl
xlat
mov
cld
inc
adcb
mov
test
fimuls
sbb
enter
pushf
fiaddl
int3
xchg
loop
cmp
sub
dec
mov
jle
push
cli
sub
cld
ljmp
int3
jns
lahf
cmp
dec
es
psadbw
cmp
pusha
sbb
add
inc
cwtl
inc
push
dec
dec
xchg
outsb
adc
ror
pinsrw
mov
jbe
mov
xorb
clc
jecxz
sahf
dec
xor
out
mov
cwtl
jl
add
mov
scas
sbb
test
outsb
andb
xchg
in
push
or
aas
pop
cmp
ret
adc
and
es
mov
lods
icebp
adc
cltd
in
pop
mov
jae
iret
sub
out
popf
and
and
in
xchg
hlt
adc
loope
xchg
xchg
xchg
bound
mov
sbb
xchg
jecxz
sarl
jne
test
xchg
pushl
sarb
aas
mov
and
add
and
sub
mov
dec
mov
mov
push
fs
push
psrlw
stos
scas
in
dec
add
lods
rclb
orb
imul
and
dec
leave
cld
repnz
insl
or
sub
pushf
dec
jnp
jle
jb
xchg
jle
icebp
es
outsb
xchg
scas
cmpsb
cmp
cwtl
sub
dec
pusha
mov
cmpsl
gs
ret
mov
sbbb
roll
mov
sbb
sub
mov
and
adc
dec
sahf
fs
and
lahf
jp
in
sbb
fdecstp
sub
push
pop
repz
push
data16
std
jecxz
push
or
and
mov
lcall
adc
pop
mov
xchg
je
sub
out
loopne
pop
test
scas
sub
mov
cwtl
sbb
inc
push
dec
mov
jne
daa
lahf
pop
mov
imul
aaa
mov
adc
cmp
es
fistl
add
inc
add
cmp
mov
nop
xlat
push
mov
js
pop
pop
jo
fwait
sub
push
push
sbb
mov
mov
gs
dec
int3
push
ret
and
xchg
repz
repnz
add
fildll
mov
or
scas
sahf
pop
lahf
xor
xchg
fisubrl
adc
push
mov
xor
xchg
mov
jno
ja
fsubs
ds
and
or
push
mov
clc
lods
jl
sub
or
dec
push
mov
lods
and
sub
pop
pop
testb
push
mov
jge
outsl
inc
loope
les
inc
rcl
mov
fldcw
push
or
inc
in
fnsave
sti
ds
test
inc
jmp
mov
push
pop
pop
das
shl
push
in
inc
fldt
loope
add
int3
jge
jnp
xchg
push
test
in
std
cmp
addl
pop
fst
jo
mov
repnz
test
cs
stc
jl
std
jnp
lcall
mov
leave
dec
ja
jecxz
dec
pop
arpl
push
out
and
lock
insb
cli
add
push
add
nop
adc
xor
xchg
xchg
int
mov
mov
imul
adc
bound
xor
in
imul
sub
mov
inc
add
add
push
push
jecxz
jns
add
jbe
jp
hlt
mov
mov
push
xlat
loop
lds
aas
orb
aaa
lahf
inc
cmpsb
sbb
xlat
pushf
into
repz
cmp
add
pop
push
ja
sub
sub
cs
mov
aaa
ds
lods
push
repz
pop
mov
out
cmp
jae
sahf
lea
aam
xor
lret
into
pushf
push
pusha
add
dec
pop
mov
test
aas
pop
rcr
jno,pt
cli
sbb
mov
jecxz,pt
ljmp
scas
or
sub
or
xchg
movsl
arpl
jg
mov
push
lods
dec
push
jmp
xchg
leave
ljmp
push
inc
fistps
cwtl
xor
xchg
jmp
popf
clc
cmp
sbb
loopne
fstp
inc
dec
push
lea
pop
movsl
cs
ljmp
push
nop
mov
or
aaa
stos
into
pcmpgtw
mov
jns
xchg
xchg
add
leave
scas
push
mov
addl
out
cmp
dec
inc
jp
xchg
out
push
sbb
dec
or
arpl
jns
cmpsb
mov
mov
addr16
movsb
mov
lcall
or
shll
fwait
push
sub
add
jg
pop
inc
dec
subl
call
loopne
lock
sahf
sub
mov
popa
pop
js
in
mov
dec
fisttpl
call
mov
fwait
dec
push
movb
xchg
add
add
mov
daa
mov
in
movsb
sti
je
xor
clc
or
sbb
xchg
sub
je
or
mov
shlb
cltd
pop
pop
jne
in
fsubrl
add
in
ret
cli
cltd
mov
pop
cmp
pop
mov
or
lods
out
mov
push
clc
add
stc
jecxz
xchg
bound
jns
adc
movsb
jmp
inc
jne
lds
mov
dec
or
and
test
pop
sahf
mov
hlt
hlt
cwtl
jle
cmp
stos
mov
ds
call
mov
dec
cltd
push
lods
and
insb
jp
aaa
aad
sbb
sub
pop
add
xlat
cmpsl
cmp
cli
cltd
inc
push
dec
imul
push
rolb
ret
ljmp
stc
lods
jo
inc
xchg
adc
and
mov
or
in
aam
sub
xlat
shll
mov
jg
movsb
gs
ljmp
movsl
rep
enter
fisubl
mov
push
aas
in
clc
sub
popa
sbb
stos
jnp
dec
mov
enter
xchg
push
call
arpl
lcall
cmpsl
addb
jle
pusha
mov
aaa
mov
xlat
mov
gs
xchg
cmp
or
xor
or
into
add
mov
into
jle
cld
dec
dec
push
jmp
out
inc
push
loopne
insl
sub
cld
jg
push
ret
loope
fwait
and
sbb
xor
jns
out
repz
inc
sbb
sbb
mov
ljmp
sub
mov
insb
subb
sub
inc
popf
sahf
push
cmp
or
xchg
fcmovnb
push
icebp
push
out
pop
dec
push
scas
dec
pop
vdivss
cld
dec
pop
xor
popa
rclb
je
and
mov
sub
pop
rclb
cmpsb
mov
daa
pop
jno
popl
je
and
je
push
xchg
push
out
or
adc
pop
ja
imul
into
mov
adc
lock
dec
push
xchg
xchg
jle
in
mull
sub
xchg
sub
stos
sahf
dec
lods
and
mov
and
es
mov
mov
jp
mov
and
add
shrb
dec
pop
add
int
inc
movsb
decb
mov
push
xchg
jmp
in
bound
push
ret
cs
dec
jl
mov
push
push
mov
sar
fidivl
in
movsb
jb
imul
jle
fmulp
roll
lea
dec
mov
hlt
scas
imulb
std
leave
or
mov
lods
cmp
cmpsl
or
shrb
lea
jge
and
sub
shrl
call
mov
mov
jo
imul
mov
and
popf
popf
lret
out
fcoml
xor
xchg
or
shr
ds
aaa
mov
jecxz
popa
std
cmp
jns
andb
add
jg
jbe
inc
pop
push
inc
icebp
movsb
inc
movsl
push
icebp
inc
imul
data16
jecxz
sbb
cmp
cmp
mov
scas
js
xor
js
lods
cmp
add
sub
adc
scas
movsl
push
xchg
movsl
push
pushf
mov
adc
fiadds
in
xor
lcall
jbe
push
sbb
xor
mov
mov
mov
sub
jns
or
mov
das
adc
je
push
stos
mov
loope
movsl
popf
and
xor
inc
and
ja
xor
jbe
inc
lcall
cmp
fdivrs
cmp
xchg
xlat
sti
cmp
pop
loope
out
fs
in
mov
push
insl
mov
pop
jnp
inc
addr16
pusha
test
fidivrl
test
inc
mov
mov
arpl
sbb
jmp
sub
sahf
jne
push
xchg
les
mov
mov
mov
mov
xchg
std
loop
push
or
clc
adc
icebp
cmp
aas
dec
pop
jno
das
movsb
pop
rcrb
rcr
repz
repnz
lretw
cmc
add
arpl
lea
xor
mov
mov
shlb
sbb
mov
push
loopne
xchg
dec
fdiv
ljmp
fisttps
and
enter
jne
repz
insb
sbb
jo
pop
fdivp
scas
adc
jp
ret
es
popf
mov
sub
dec
sub
or
dec
repnz
repz
adc
cltd
scas
int3
cmp
jbe
pop
mov
mov
dec
stos
cmp
pop
mov
dec
adc
popa
push
imul
rolb
stc
mov
mov
insl
mov
sbb
mov
cmpsl
dec
addl
xchg
push
arpl
imul
xchg
repz
and
pop
pop
sahf
ret
mov
inc
ds
inc
xor
neg
andl
ljmp
dec
or
inc
jnp
sub
lds
and
scas
inc
sahf
xchg
mov
mov
push
cmp
out
sub
repz
cmp
mulps
push
stos
hlt
ja
aas
sbb
adc
or
dec
cmpsb
les
sbb
push
mov
adc
sbb
lods
jnp
lcall
mov
and
cmp
andl
cmp
jno
push
add
xor
out
test
std
inc
xor
out
xorl
ret
cmp
mov
adc
fistps
dec
test
imul
add
in
pop
int
pop
int
imul
hlt
pop
xor
test
xor
das
sbb
fdivs
adcl
cmp
scas
scas
mov
cmpsl
jp
xor
rcll
stos
cmp
aaa
and
in
add
pop
aaa
mov
in
out
hlt
je
xchg
jge
les
mov
lret
xor
scas
cwtl
push
mov
clc
test
push
add
or
jp
dec
into
notl
sub
dec
sub
adc
push
mov
mov
mov
push
mov
outsb
pop
outsl
jmp
pop
pop
xor
lods
mov
xchg
cmpsl
jbe
mov
adc
pop
sbb
inc
scas
sub
imul
inc
out
lea
insl
pop
sahf
lods
ds
pop
in
mov
lods
or
jb
outsb
std
cmp
out
sub
loop
stos
mov
mov
mov
es
and
xor
out
ret
movsl
xor
push
jb
cmp
sub
jo
lock
mov
mov
push
cmc
mov
lahf
stos
mull
xor
sub
imul
jns
out
cmp
inc
sbb
inc
shl
test
lahf
mov
adcl
ja
mov
imul
cmp
dec
les
pop
test
cltd
jne
xorl
movsb
fbld
gs
mov
lds
push
adc
pop
adc
and
sti
mov
jg
jmp
push
notb
push
cwtl
sahf
daa
pusha
mov
adc
or
xor
popa
test
ret
pop
pop
ffree
shrl
repz
outsb
sbb
jb
rorl
inc
pop
sub
sbb
hlt
cltd
jmp
cmpsl
aas
inc
sbb
dec
out
push
cmp
pushf
int
hlt
into
pop
mov
adc
andl
into
jp
aaa
inc
mov
dec
push
jecxz
sbbb
xlat
insb
aas
insb
insl
sti
js
mov
add
dec
mov
idiv
pop
push
pop
out
sbb
mov
or
sub
sahf
or
scas
xlat
cwtl
xor
out
inc
lock
jnp
dec
dec
xchg
push
sbb
mov
insb
fs
ret
cmp
and
mov
mov
sbb
or
dec
xlat
push
sub
dec
loope
sub
adc
adc
outsl
add
test
add
mov
outsb
push
cs
add
js
scas
shll
and
xor
ljmp
outsb
sahf
inc
lea
jg
lods
ds
xchg
repz
fidivs
xchg
sbb
out
lock
jecxz
icebp
iret
ds
xchg
pushf
rcl
xchg
pop
shlb
repnz
xor
jg
ret
cmpsl
movsl
push
fcmovnb
mov
mov
loopne
jno
pusha
fbstp
jns
fs
inc
sbb
inc
sub
fistps
cwtl
lret
cwtl
cmp
xchg
xor
xchg
pop
jp
int
sbb
lods
add
mov
push
scas
push
clc
push
stos
adc
pop
cld
xor
push
fmul
fcomps
jb
pop
je
cmpsb
fnstenv
jge
outsb
sub
mov
mov
out
loop
cmp
outsb
loopne
movsb
push
popa
dec
cli
jecxz
pop
cs
js
xor
ljmp
or
stc
popf
adc
testb
and
pop
mov
xchg
jae
call
or
jns
jp
lock
lock
pop
inc
mov
rorl
xchg
cmp
sbb
fsubs
mov
adc
cmp
jmp
repnz
fcmovnbe
movsl
mov
sub
mov
cmp
addr16
mov
gs
daa
xor
sbb
roll
dec
mov
shll
fstpt
mov
mov
push
lock
ret
or
xlat
dec
fwait
xchg
lods
setno
mov
or
daa
stos
stc
and
or
mov
lds
cli
js
mov
mov
js
std
inc
fsubrl
mov
imul
jge
sub
add
push
inc
rcr
insl
lcall
mov
imul
jge
mov
mov
mov
sti
mov
lret
mov
xor
in
push
sub
inc
xchg
aad
jg
test
fisubrs
fwait
push
lods
pop
dec
cmp
imul
jbe
add
out
in
clc
jle
pop
sub
lret
pop
sub
arpl
das
inc
rcll
nop
or
push
add
sbb
fstpt
in
jo
pmullw
ret
aam
mov
frstor
fistpll
mov
aas
insb
xchg
add
jae
nop
jmp
cmpsb
in
das
adc
mov
cmpsb
and
iret
lret
and
rcll
push
inc
add
adc
jp
in
dec
dec
xchg
sub
in
cmp
scas
imul
stos
insb
int
mov
inc
loopne
push
pushf
subb
scas
dec
sub
cmp
or
mov
pop
cli
cltd
and
pop
xor
dec
sub
inc
dec
and
data16
dec
stc
fistpll
inc
pop
inc
lods
adc
icebp
lret
jns
push
sub
cli
test
jae
jmp
hlt
dec
sub
cs
inc
cs
xchg
aad
push
sbb
cmp
gs
sub
sbb
xor
iret
and
jae
xchg
jle
inc
mov
stc
stc
inc
icebp
je
inc
mov
and
pusha
pop
jo
push
out
inc
sbb
xor
xchg
push
in
pop
lds
into
pop
movsl
mov
sbb
cmpsl
lods
mov
popa
dec
ss
sub
aaa
jl
add
push
subl
dec
add
aaa
mov
mov
xor
lcall
ss
xchg
dec
and
fldl
aas
test
sbb
push
std
or
mov
subb
inc
fstl
jmp
test
push
adc
dec
mov
add
pop
jmp
std
xchg
sub
pavgb
scas
jp
dec
mov
ja
out
or
std
repnz
pop
shll
inc
cmpb
lods
mov
push
mov
nop
adc
cmc
pop
dec
stos
mov
lea
iret
popf
leave
mov
sbb
sub
sbb
cmpsb
push
add
add
jge
inc
in
lret
dec
fstl
lods
push
inc
mov
fs
cs
fs
dec
pop
es
xor
cmp
xor
outsl
xor
call
loop
jp
ficompl
insl
arpl
int3
aad
loop
mov
dec
popa
and
enter
mov
pop
test
cld
hlt
fsubl
push
clc
cltd
mov
push
loope
push
cmp
movsb
or
sub
decb
lahf
shl
dec
cs
fdivrl
jbe
jp
aam
cmp
insl
rorl
andb
mov
mov
int
movsb
jae
pushf
push
sbb
inc
pop
dec
push
clc
test
imul
xchg
cmp
sbb
pusha
push
xchg
in
pop
ss
and
test
lods
jmp
sbb
imul
adc
or
icebp
and
xchg
cmp
adc
rclb
dec
jne
addr16
out
push
rorb
pop
int3
loop
test
jno
gs
sahf
popa
xchg
mov
hlt
inc
call
jnp
pop
lcall
adc
sub
jmp
jl
pop
mov
mov
cmp
jnp
mov
push
js
lock
je
push
mov
sbb
fs
adc
int
test
leave
cmp
das
pusha
inc
orb
scas
and
inc
aam
xlat
cmc
cmpb
and
sti
jnp
xchg
stc
cli
mov
cmp
or
bound
mov
pop
lret
or
subl
ljmp
int3
pop
jp
movsb
cwtl
scas
sbb
xlat
js
cmp
inc
std
and
add
push
jae
push
mov
iret
jg
pop
sub
and
data16
in
arpl
dec
pop
adc
pop
dec
xchg
mov
xor
ja
adc
add
inc
test
jno
lcall
stos
pop
inc
jb
adc
or
mov
xchg
fs
sbb
jle
add
fistpll
jb
lret
xchg
inc
mov
push
stos
push
aad
inc
sbb
mov
sbb
jg
mov
hlt
test
jmp
push
and
pop
out
loope
insl
hlt
rcrb
in
pop
rep
mov
ja
mov
jo
mov
das
call
aas
lahf
pop
jno
sbb
push
pop
add
das
mov
sbb
addr16
cs
inc
or
pop
out
jbe
dec
or
jne
flds
gs
jmp
out
mov
cmpsb
inc
cmp
outsl
jp
repnz
pop
inc
mov
in
movb
sahf
es
int3
cld
jbe
cmp
adc
shlb
xchg
sbb
mulb
scas
pushf
mov
adc
stos
pop
mov
fiaddl
jecxz
jg
sbb
adcb
inc
adc
adc
daa
in
pop
je
orl
adc
cmp
scas
fcmovnbe
add
and
outsb
stos
notb
sbb
and
and
dec
mov
mov
mov
inc
cmpsb
ds
hlt
loopne
mov
jbe
scas
xlat
dec
loop
push
leave
pop
sbbl
jp
mov
cmp
aam
mov
std
aam
pop
ficomps
icebp
sbbl
inc
lcall
int3
mov
jmp
lcall
idivl
cwtl
pop
arpl
mov
mov
mov
push
popa
adc
pushf
fwait
mov
lock
in
adc
xor
cmp
add
pop
and
or
and
int
pop
int
xor
loopne
push
enter
nop
rcrl
andl
pusha
rcrl
sbb
add
sbb
scas
mov
pop
inc
adc
pushf
mov
inc
push
stc
dec
jbe
or
or
lret
mov
arpl
pop
mov
or
fstpt
pushf
push
push
sbb
jae
insb
mov
adc
dec
std
out
int3
or
test
cmpl
mov
das
mov
lods
mov
mov
sbb
out
xor
or
test
sub
pop
mov
push
fdivl
jne
mov
ffree
pop
popf
mov
jae
in
cmpsb
popf
xlat
scas
push
dec
mov
fiadds
dec
mov
xor
cmpsl
pop
and
iret
jae
mov
cli
add
shll
and
loopne
in
sub
addl
sbb
add
or
sub
mov
das
shrl
incl
xchg
repz
inc
sbb
les
mov
movsb
adc
lock
push
mov
cmp
xor
das
sbb
and
sahf
into
dec
cmp
bound
incb
movsb
push
fwait
stos
and
jl
xlat
int3
pop
cmp
push
bound
cmpsb
inc
add
inc
mov
xor
hlt
sub
add
jno
mov
sub
rcr
push
and
arpl
test
loope
jmp
mov
enter
ret
jmp
test
scas
test
lret
push
cmpsb
std
ds
cmp
inc
sbb
es
insb
xchg
push
stos
adc
cli
les
stos
mov
jp
cmp
idivb
imulb
jle
inc
mov
cmp
iret
sub
and
xchg
sub
lock
lock
stc
mov
fnstenv
mov
add
push
imul
adc
inc
loop
add
out
cmp
pop
in
loop
jmp
mov
js
in
push
cmp
movsl
or
cs
jp
cli
scas
jge
inc
cmp
subl
cltd
jo
xor
pop
rorb
mov
mov
mov
and
or
test
cli
enter
mov
bound
cmc
test
jnp
xchg
mov
pop
fs
shlb
mov
in
inc
pushf
sbb
sbb
movsl
fs
daa
movsb
xchg
and
sub
and
cltd
popf
xchg
push
and
in
mov
call
ja
sub
inc
cmp
daa
jne
mov
je
push
lahf
test
test
test
add
inc
push
shrb
cmp
xchg
xchg
xor
adc
or
xchg
inc
imul
insb
sub
gs
mov
sahf
xor
mov
mov
mov
in
notb
scas
dec
xor
popa
pop
iret
mov
jle
lret
dec
clc
rorb
jae
jecxz
out
les
ja
in
js
sbb
pop
lock
ficompl
pop
jns
sub
or
shlb
sub
mov
mov
fwait
jl
push
sbb
inc
mov
lret
sarb
jp
sarb
out
mov
aad
and
xchg
dec
leave
inc
leave
mov
mov
scas
rolb
lcall
into
cmpsb
test
insb
xorl
jns
loop
mov
mov
icebp
iret
movl
jp
mov
rcpps
scas
aaa
imul
mov
mov
push
adc
mov
test
jno
jecxz
mov
insb
sbb
pop
mov
xor
call
stos
mov
push
cmp
xchg
mov
xchg
inc
test
mov
flds
push
sub
cmc
xor
push
push
movsb
xchg
sbbl
imul
jge
sbb
and
xrelease
jne
fwait
jecxz
fwait
mov
popf
notl
sbb
dec
outsb
ret
mov
mov
xor
mov
cld
dec
mov
xchg
push
dec
mov
imul
jnp
sbb
sub
addl
sub
push
jns
dec
test
out
push
mov
movsb
mov
inc
sahf
xor
dec
xor
call
sbb
add
sub
dec
adc
rorb
and
mov
dec
imul
or
mov
mov
pop
stos
jg
mov
test
btr
add
cmp
push
dec
lahf
jmp
mov
scas
sarl
xchg
sbb
cmp
imul
imul
or
sub
mov
or
sbb
jl
mov
mov
or
push
icebp
xor
popf
movsb
mov
int3
lock
insl
sub
loopne
cmp
push
je
daa
popa
mov
pop
rclb
sbb
mov
pop
jge
mov
outsl
and
jl
fisubl
mov
loope
push
or
push
or
xchg
pop
sbb
jnp
inc
aas
sbb
fmuls
and
jno
jl
dec
lret
lcall
fs
xor
out
push
insl
lods
imul
scas
dec
ljmp
arpl
pop
out
lea
or
sarb
nop
mov
inc
addr16
mov
sub
ror
sbb
jb
mov
ss
jno
cltd
pop
clc
inc
or
shlb
ss
pusha
cmp
push
sti
mov
push
cli
cs
outsl
sub
es
sbb
stos
outsb
dec
or
inc
pop
dec
xchg
add
add
push
mov
mov
inc
jb
sbb
in
sub
out
shlb
push
adc
sbb
jge
orl
movsl
push
aaa
pop
push
dec
lahf
daa
xor
jg
fstl
sub
mov
jle
loopne
andb
push
pop
movsb
push
ret
push
dec
enter
lcall
mov
outsb
mov
aaa
push
cmpsb
cwtl
test
push
mov
andl
out
xchg
gs
cmpsl
in
call
dec
xchg
adc
inc
jb
call
xor
jp
addl
add
int
clc
inc
xchg
faddl
jle
adc
sbb
test
mov
push
xlat
iret
fwait
mov
mov
in
ja
mov
push
xchg
pop
mov
sub
and
stc
push
mov
into
imull
cmpl
mov
or
jp
mov
xchg
pop
scas
push
add
and
ret
mov
fs
iret
or
call
mov
sarl
inc
cmp
sbb
xchg
mov
or
mov
xchg
and
mov
movsl
push
adc
xchg
push
sbb
lods
inc
adc
data16
mov
stc
cmpsl
arpl
push
pop
out
mov
out
cmp
repz
and
push
shr
enter
or
cmp
lea
pop
movsb
push
jne
repz
jae
pushf
mov
rcrl
scas
mov
repz
je
push
add
lcall
push
in
scas
add
adc
fdivr
cmp
mov
jbe,pt
popf
icebp
push
cmp
jae
icebp
and
idivb
sub
frstor
inc
shlb
push
xor
push
adc
pop
xor
cmpsb
jecxz
mov
mov
or
outsl
inc
test
add
jmp
push
fs
inc
subl
jae
or
adc
and
outsb
in
mov
ds
mov
cmp
negb
jmp
sub
sub
mov
xchg
adc
sarl
xchg
stos
mov
jle
mov
and
inc
lret
gs
loop
out
push
xchg
xor
sbb
mov
mov
lods
xchg
pop
mov
jge,pn
fs
dec
inc
fsubrs
pop
test
ljmp
cli
xor
repz
icebp
xchg
pop
fisubrl
mov
stc
pop
ljmp
enter
lret
push
dec
mov
leave
push
adcl
out
mov
and
mov
fsubrs
add
mov
xchg
pop
sbb
aas
mov
mov
movsb
out
pop
and
jg
orl
add
or
mov
jecxz
jge
scas
sahf
push
shr
sub
addr16
js
fistpll
mov
fwait
pop
xchg
fwait
mov
push
test
mov
lret
mov
push
rcl
mov
jmp
ss
test
add
add
dec
sbb
mov
jno
dec
sbb
push
or
mov
jo
cmc
call
sub
outsl
add
movsb
cmp
ret
loop
loope
clc
les
add
jmp
xchg
mov
fistpll
js
mov
movb
imul
pop
cld
rorb
jb
adc
stc
sub
sub
aas
jo
xchg
mov
inc
repz
lcall
repz
cltd
fwait
roll
out
scas
dec
mov
or
shlb
jno
jnp
adc
pop
aad
movsl
insb
add
in
adc
ret
mov
jns
jl
test
and
mov
xchg
mov
or
add
inc
mov
mov
cmp
and
xchg
push
jne
stc
negb
idiv
jp
cltd
push
inc
add
add
lcall
jnp
scas
fidivrs
fucomp
test
dec
adcl
aad
dec
ds
sub
stos
and
push
sbb
jo
imull
sahf
aas
sub
push
cwtl
fldcw
xchg
mov
inc
jle
push
clc
aaa
nop
aaa
data16
clc
out
loope
mov
stos
or
or
jge
mov
jae
repz
mov
xchg
jmp
cmpsb
subb
fcomps
mov
sub
fnstenv
jno
outsl
pusha
push
push
ds
mov
xchg
mov
xchg
dec
mov
ljmp
mov
jo
mov
stc
aad
call
shlb
mov
pop
bound
call
iret
push
or
insl
xchg
aad
pusha
ror
std
xor
xlat
mov
or
mov
sub
ss
fstl
jno
pop
enter
gs
mov
lods
xchg
cmp
xor
dec
jp
or
adc
into
pop
jecxz
iret
cld
cmp
jg
push
mov
scas
pop
jmp
and
js
xchg
loop
add
cmp
gs
dec
out
pusha
push
push
sahf
out
in
jecxz
mov
aad
cmc
xchg
shlb
cmpsl
sbb
and
push
out
out
and
insb
iret
iret
lcall
fsubl
mov
xor
push
mov
test
inc
in
xchg
in
push
pop
and
lds
xlat
mov
je
aas
mov
mov
mov
out
adc
mov
cld
xchg
pop
push
sbbb
jmp
sub
aam
scas
daa
or
arpl
cmpsb
aad
out
pop
push
stc
int
aaa
je
aad
and
ja
or
or
not
movsb
adc
cmp
jg
fdiv
int
jo
aaa
pop
pop
mov
mov
pop
lods
test
test
cmp
pop
aas
or
mov
add
mov
stc
jp
mov
lock
and
ljmp
or
movsb
insb
dec
add
cmp
adc
xchg
jbe
cmp
jns
or
pop
dec
dec
int3
add
aas
stos
insl
mov
add
js
adc
push
leave
and
cmp
cli
insl
sbbb
and
rolb
mov
inc
ret
pop
hlt
fs
pop
xor
dec
or
jo
ljmp
inc
add
xchg
mov
mov
inc
xchg
xchg
xchg
push
adc
loope
nop
xchg
jl
sbb
cmpsl
int
sub
add
mov
sti
push
inc
mov
jae
and
and
and
mov
insl
add
pop
or
imul
lcall
movsl
inc
out
sub
popf
lcall
jbe
icebp
rcrb
lea
mov
loopne
pop
and
xorb
pop
into
hlt
daa
add
mulb
cmp
nop
repnz
in
scas
out
dec
dec
inc
ficoml
sbb
cmp
or
flds
adc
enter
adc
mov
mov
repnz
push
push
hlt
fs
rclb
sbb
jp
out
iret
jle
sti
mov
cltd
mov
pop
xor
adcb
ss
sbb
xchg
pop
and
inc
icebp
movl
divb
sahf
cmpsb
inc
xor
cld
pop
sbbl
loopne
mov
jp
and
add
js
out
xor
sub
or
mov
iret
xor
loop
jns
inc
sbb
pop
arpl
and
cmp
xor
test
sub
dec
push
fwait
inc
pop
in
cltd
mov
pop
lods
pop
sub
mov
out
jge
stc
fld
mov
dec
sarb
jmp
inc
dec
jge
sbb
sub
mov
cmpsl
mov
cmpsb
outsl
mov
sbb
test
inc
mov
int3
hlt
clc
fidivs
ljmp
inc
sbb
xor
js
jp
hlt
jle
cmp
mov
ret
sub
mov
and
jne
daa
cmp
ljmp
mov
daa
jne
emms
adc
mov
imul
clc
and
imul
pop
fsubl
repnz
dec
or
jl
pop
fs
cmp
dec
jnp
pop
xchg
insb
xchg
and
inc
sbb
jnp
sbb
adc
dec
lock
and
fs
insb
sub
mov
adc
dec
cli
push
push
mov
ljmp
lret
roll
push
mov
ds
test
sbb
sub
sub
mov
jns
orl
xor
test
mov
dec
lret
outsl
xchg
mov
sbb
popf
sbb
outsb
push
dec
addr16
jae
mov
fcoml
xchg
bound
inc
mov
xor
pop
pushf
daa
mov
andb
pushf
pop
pop
rol
sub
out
inc
insl
sub
outsb
les
xor
outsl
loope
add
jmp
jnp
dec
or
lods
cmc
iret
call
mov
xor
fnstsw
mov
int
lea
pusha
stos
popf
popa
jb
test
js
ds
dec
jb
pop
pop
mov
in
sbb
push
jbe
insl
popa
mov
stc
adc
ds
lds
sub
es
sub
hlt
or
out
cld
negb
inc
hlt
mov
in
std
ss
and
fsts
push
test
adc
dec
push
cmpsb
mov
mov
fwait
sub
cld
dec
sahf
fnstcw
jmp
icebp
cltd
testb
shl
pop
and
repnz
xchg
jno
cwtl
bound
xor
sbb
mov
mov
jne
jecxz
lods
dec
or
jbe
xor
sub
sub
repz
inc
adc
jl
fildl
mov
rcrl
fbld
pop
xor
ficoms
push
psrld
repz
fmuls
int3
sbb
or
scas
rol
mov
push
test
push
mov
lea
cli
ds
stos
neg
cmp
jns
js
mov
ljmp
inc
cmc
ret
and
adc
xchg
mov
gs
or
leave
lahf
cmp
repnz
adc
sub
xor
out
xchg
rcrl
mov
xchg
pusha
iret
dec
inc
mov
pop
push
add
cltd
xor
jne
test
addr16
jnp
or
jge
js
and
jge
jo
mov
inc
arpl
out
aam
sub
loope
popa
fiaddl
inc
lret
mov
mov
fiadds
jle,pt
addb
dec
aad
push
mov
and
lods
mov
and
cmpsl
ret
cmp
repnz
xor
sbbb
stos
incb
mov
adc
xchg
add
mov
cli
imul
inc
mov
sub
inc
outsb
cmp
dec
fdivrl
or
mov
mov
cmp
mov
mov
xchg
or
mov
adc
cmp
push
sbb
aam
jmp
push
ret
gs
movsl
movsb
sbb
imul
adc
inc
mov
das
sahf
mov
sbb
jle
or
add
push
popf
arpl
push
sbb
rolb
cltd
inc
pop
and
addr16
jecxz
ljmp
sbb
cmp
test
rorb
mov
ret
mov
in
cmp
sbb
xchg
xor
adc
or
push
scas
xchg
fimull
in
or
xchg
or
adc
ficoms
adc
jo
mov
aaa
loop
xlat
jns
or
sub
int
daa
lods
mov
loop
xor
dec
mov
cli
mov
popa
pop
sub
pushf
decl
mov
fistpl
pop
mov
xchg
lcall
mov
adc
loope
test
test
cmp
int3
pusha
popf
mov
adcl
cwtl
cmp
int3
sti
mov
pop
adc
mov
rcll
cwtl
push
xorb
jb
jle
push
push
pusha
out
cmc
adcl
jle
fidivrl
andl
loope
dec
notb
cmp
insl
mov
testl
bound
mov
mov
or
cmp
mov
add
dec
lahf
aaa
cmp
xchg
inc
aaa
push
cmp
pop
ret
mov
dec
and
int
data16
shll
jbe
popa
enter
es
ret
outsb
sub
pop
aad
stos
sub
scas
fdivrs
mov
mov
roll
jecxz
leave
lret
lcall
jae
cli
mov
cmp
mov
jae
xchg
push
icebp
dec
jg
js
sbb
sbb
stos
cmp
or
dec
aad
fsubs
nop
and
test
enter
inc
jl
inc
test
cmpl
mov
sbb
sbb
nop
push
pop
rcl
inc
add
loope
adc
cmpsb
out
sub
and
jns
loope
popf
outsl
add
or
xlat
xor
rcrb
rcrb
adc
xchg
in
loop
mov
shrl
popa
arpl
lsl
out
lcall
jb
sarb
adc
cmpb
and
jno
push
sub
pop
cmp
leave
repnz
das
xorl
je
jo
push
cmpsb
mov
bound
mov
into
mov
inc
fisubl
sarb
xchg
xorl
in
ret
out
dec
daa
sbb
stos
mov
fiaddl
sarb
loopne
lods
movb
cmp
test
mov
push
pop
sti
int
in
inc
jmp
cmp
fcoml
dec
lret
inc
leave
mov
fistpl
xchg
sbb
and
lods
inc
xchg
inc
and
sbb
dec
and
shrb
lret
mov
mov
mov
and
and
pusha
arpl
stos
gs
notb
mov
lods
and
imul
pop
xchg
sahf
addr16
pop
add
inc
xchg
cli
fidivs
repz
dec
js
aaa
test
sbb
add
sbb
cwtl
test
inc
dec
movsl
loopne
pop
pop
add
jp
loope
sbb
jmp
lcall
add
push
scas
in
sbb
sahf
push
sbb
cld
push
std
arpl
adcl
call
sbbb
dec
movsb
sub
xor
push
nop
xchg
jmp
and
mov
movsb
or
push
or
mov
outsb
add
pop
adc
mov
xor
or
daa
cmp
loopne
ret
fadd
xchg
dec
cmp
rcr
aad
adc
les
insb
mov
ja
imul
inc
jecxz
std
dec
in
jp
xor
xor
adc
and
iret
in
cmpsl
stc
movsb
xchg
stc
in
cmp
dec
lcall
xor
mov
jecxz
xor
xor
xchg
fidivl
pop
repnz
pop
mov
mov
jns
rclb
orl
inc
inc
push
mov
mov
mov
add
loopne
cld
pop
sbb
aad
push
lds
jnp
ja
mov
stos
inc
test
xchg
or
dec
add
mov
cmp
xchg
or
jle
hlt
and
aas
aas
xchg
jne
pushf
pop
jo
or
inc
in
mov
mov
jno
and
pop
mov
leavew
dec
mov
add
mov
cli
cld
pop
xchg
mov
pop
repz
gs
inc
or
ret
add
or
lea
cmpsl
arpl
popa
pushf
stos
cmc
cmpb
sbb
call
lahf
leave
push
cmp
je
ret
adc
movsb
or
cmp
jbe
cmp
mov
scas
add
loopne
loopne
fnstsw
xchg
mov
mov
out
in
lods
mov
xchg
int3
mov
scas
shlb
jo
fbld
sub
inc
mulb
insb
and
sbb
cmp
xchg
jecxz
inc
xor
dec
push
or
pushf
loope
push
and
aam
xchg
fbld
ret
test
fwait
rclb
test
cs
push
mov
fcmovnu
mov
add
daa
ss
mov
add
inc
fwait
stos
xchg
xchg
mov
shll
sub
cmp
ret
jo
pop
fs
xor
add
mov
dec
dec
and
or
pop
sbb
ret
int
cmp
mov
fimull
mov
mov
jecxz
cltd
shrb
cmp
mov
pop
cmp
ja
loop
lcall
xchg
test
inc
nop
popa
fwait
push
mov
dec
mov
cmpsl
mov
jp
adc
mov
sbb
adc
in
cmpsb
add
cld
cli
adc
int
pusha
mov
cmp
aas
inc
enter
pop
dec
sbb
cwtl
psubq
lea
mov
fmull
adc
je
stc
xchg
xor
mov
sbb
mov
shr
push
test
xlat
pop
f2xm1
sub
xchg
ret
adc
cs
mov
out
notb
frstor
sbb
call
adc
fnstcw
bound
pusha
jb
mov
sbb
push
in
scas
pop
lret
sub
gs
mov
adc
adc
dec
xchg
test
insb
or
test
imul
xor
cwtl
leave
lret
jbe
sub
cmp
or
mov
cld
xor
mov
pop
pop
pop
jns
out
repnz
mov
lret
and
flds
mov
in
jge
add
fsubr
push
push
stos
mov
fimuls
inc
mov
xchg
iret
mov
sbb
push
jb
push
std
bound
mov
cmp
pop
mov
push
push
mov
adc
jae
in
add
mov
pop
imul
daa
sbb
push
pop
scas
gs
gs
push
xchg
iret
cld
and
fmuls
sbb
sbb
dec
sbb
roll
bound
mov
mov
lods
add
std
cmpsb
dec
dec
je
pop
mov
movl
or
lcall
cmp
imul
fiadds
mov
cwtl
shll
es
in
jg
iret
nop
out
and
loopne
fwait
xchg
pop
add
xor
inc
adc
mov
rorb
dec
ret
leave
push
mov
xchg
mov
xor
jnp
cli
hlt
in
mov
fst
lds
pop
roll
mov
sub
jg
xor
rcl
imul
icebp
mov
test
popf
loope
mov
popa
add
ja
jae
mov
mov
adcl
inc
mov
and
cmp
mov
inc
mov
insl
stc
jle
sbb
adc
mov
imul
nop
mov
hlt
and
cmp
enter
jb
hlt
repz
xor
mov
cmp
xchg
push
pop
cmp
test
and
fistpl
sahf
sbb
mov
lds
xlat
sbb
movsl
mov
jno
push
adc
in
fcoml
pop
cltd
xchg
adc
lock
push
lahf
arpl
xor
movsb
ja
repz
pop
mov
pusha
cmp
xor
arpl
push
dec
cmc
mov
aam
cs
insb
push
clc
or
hlt
popf
jle
push
or
inc
loop
mov
and
call
or
gs
punpckhdq
loope
les
incb
nop
dec
mov
fdivrl
mov
outsb
push
sbb
jns
and
imul
adc
mov
xor
addr16
lods
lret
test
sahf
lea
int
and
enter
add
inc
loope
mov
mov
mov
mov
mov
sbb
mov
jl
fwait
sbb
mov
popf
cmp
cli
sub
mov
in
xchg
shrb
jb
xor
mov
adc
xchg
stos
mov
mov
scas
xchg
icebp
insl
push
lds
cli
xchg
xlat
dec
es
inc
xchg
std
jmp
int
adc
mov
mov
cmp
scas
pop
shrb
addr16
push
mov
movsl
in
dec
mov
daa
inc
into
ret
mov
dec
lahf
addr16
dec
fisubs
xor
pop
cmpsb
rcrb
pop
sub
outsb
loope
pop
test
add
test
es
pop
testb
add
sbb
mov
lcall
cmpsb
movsl
movsl
mov
mov
and
sub
push
aaa
mov
sbb
push
xor
out
and
shll
and
dec
insb
pushf
push
or
out
fdivl
and
stos
push
dec
mov
les
arpl
js
leave
mov
adc
ja
add
inc
test
jo
in
shl
outsb
fwait
rorl
push
gs
xor
dec
out
inc
aaa
cli
cs
adc
sarb
or
ljmp
fnstcw
stc
pop
sub
and
stos
in
pop
rcll
in
sarb
jge
test
clc
dec
push
sbb
or
insl
lret
push
cmpsl
xor
and
psubw
dec
sbb
adc
cltd
enter
or
popl
xor
cmpsb
push
inc
xchg
cs
mov
pop
mov
fstps
xchg
cmp
clc
andb
lods
data16
lcall
shlb
add
enter
lcall
and
push
fs
dec
ficompl
xor
cmc
push
lret
and
imul
cmpsb
out
in
jge
push
aas
add
dec
sub
xchg
fidivl
push
xchg
popf
movl
test
outsl
icebp
jmp
xor
imul
or
push
cltd
mov
cld
pop
cmp
fdiv
das
jbe
jb
pop
jno
add
clc
inc
adc
add
testb
mov
aas
pop
int3
mov
jno
jecxz
jae
imul
ss
pop
lret
imul
cmp
xor
nop
mov
and
mov
dec
inc
sbb
fdiv
test
rorl
sbb
jg
push
add
loopne
xlat
bound
or
xor
inc
lret
scas
aam
lcall
outsb
cmp
xchg
sbb
gs
mov
dec
ficoms
mov
out
lods
dec
mov
xchg
sbb
dec
mov
jge
pop
fsubs
popf
jge
or
or
xor
mov
out
ror
data16
push
mov
loop
cmp
xlat
cwtl
stos
add
jne
xor
scas
sbb
mov
ret
inc
add
sub
ret
xor
dec
cs
add
dec
jecxz
sub
shll
mov
mov
mov
movsb
xchg
add
inc
fadds
cltd
xchg
js
pop
in
xor
jnp
add
movsb
jp
stc
cmp
and
fs
fmull
fs
out
adc
adc
cmp
xchg
mov
icebp
mov
je
mov
xchg
mov
fldenv
pop
xchg
xchg
sbb
in
notl
mov
sti
mov
out
lock
aaa
movsb
mov
and
cmp
pop
sub
mov
nop
das
fs
iret
testb
scas
jae
mov
pop
aas
je
jmp
push
cmp
ljmp
mov
jae
pop
sbbb
sub
adcl
lods
pop
push
cmpsl
out
sti
xor
sub
jns
add
cli
pop
test
jp
out
jp
aas
out
test
add
into
or
inc
mov
inc
in
lret
mov
add
out
inc
cmp
pop
inc
jg
inc
xchg
aaa
sbb
inc
sub
imul
and
mov
mov
or
inc
jno
mov
inc
lock
jno
mov
sbb
out
xchg
add
or
push
rcrb
sbb
adc
pop
inc
mov
mov
jg
push
loopne
jl
lods
fsubl
jbe
mov
adc
adc
clc
or
adc
pop
das
in
inc
cwtl
insb
aad
adc
dec
jmp
push
subb
icebp
or
xchg
orl
outsl
cmp
and
enter
and
jg
xchg
out
fsubl
leave
adc
lods
pop
and
nop
mov
add
or
xlat
xchg
jb
dec
popf
das
lcall
imul
cmpsb
jo
not
in
lock
jecxz
cmp
add
cmpl
dec
insl
daa
push
push
cmpsl
dec
aad
cs
mov
dec
dec
mov
movsb
mov
pop
loope
xlat
js
rep
xor
es
push
ret
xor
int3
repz
fcompl
hlt
mov
ds
adc
lods
adc
dec
mov
pop
inc
clc
sub
mov
add
push
repnz
iret
ljmp
xchg
jmp
stc
push
jle
push
mov
mov
mov
pop
fiaddl
iret
mov
cmpsl
movsl
js
lea
sbb
mov
inc
sarb
fs
adc
xchg
and
mov
adc
xor
pop
fdivs
out
jns
add
inc
mov
scas
sbb
mov
rol
mov
pop
ss
int3
scas
fwait
jge
jbe
pop
shl
push
scas
gs
filds
int3
pop
les
addr16
mov
and
jg
xchg
push
ja
movsb
cmp
leave
or
enter
sub
jns
repz
call
sar
jbe
dec
cmp
sti
or
inc
lods
fcompl
adc
dec
call
cmp
xchg
ss
fisubrs
mov
sub
mov
inc
add
inc
pop
lods
pop
stos
aad
pop
cwtl
cmpsb
lcall
clc
inc
mov
jbe
add
mov
pop
push
dec
cmp
loop
stos
mov
or
arpl
movsl
pusha
add
mov
out
mov
xlat
out
xchg
in
ja
scas
dec
cwtl
mov
fwait
repnz
roll
xor
hlt
aad
fistpll
sarb
addr16
dec
std
scas
frstor
in
adc
pushf
xor
loope
fildl
add
hlt
jg
sbb
xchg
sti
in
push
mov
nop
inc
test
leave
ds
xor
lret
jb
xor
fwait
xlat
xchg
out
fldt
psubb
xor
pop
sub
pushf
inc
mov
xor
jo
xchg
pop
lea
pop
add
dec
sbb
sbbb
mull
jg
push
out
sbb
cmp
andb
or
fcompl
sti
daa
push
sbb
jno
jae
mov
dec
inc
fbld
dec
or
mov
test
rorl
jb
add
call
cmp
ret
inc
scas
sub
aaa
lock
cmc
mov
sbb
dec
and
mov
mov
cmp
push
jb
lret
cltd
outsb
jnp
xor
push
and
push
cmpsb
and
cli
xchg
mov
cmp
xchg
sbb
push
in
add
push
ret
dec
lret
xchg
jge
call
test
add
fwait
inc
mov
loope
lahf
in
lcall
aaa
outsl
add
aad
cmpsl
xor
adc
mov
jo
adc
dec
sbb
out
pop
sbb
jmp
xor
mov
fs
add
imul
xchg
clc
imul
xor
sbb
loope
jl
adc
mov
std
sub
outsw
inc
push
call
xorl
testl
ljmp
movsb
xor
pop
sbb
adc
and
push
adc
data16
cltd
and
jecxz
sahf
or
sub
jnp
mov
shr
scas
jno
sar
xchg
frstor
xchg
loopne
into
mov
sbb
xchg
popf
ss
push
sub
cmp
repz
xor
enter
pop
xor
popa
lods
xor
or
cmc
and
rcrb
xchg
out
pushf
add
inc
push
xchg
or
cltd
mov
sarl
adc
jne
sbb
sub
inc
in
inc
popf
pop
fisttpl
popl
mov
xor
clc
add
adc
ss
sub
mov
fsubs
xor
mov
sbb
pushf
cltd
aas
fidivrl
fstpl
ss
sbb
orl
inc
cmpsl
ja
lret
dec
and
pop
xor
add
aas
dec
test
arpl
outsl
and
push
xlat
jo
xor
xor
cmp
inc
fnstsw
imul
or
repnz
sub
les
clc
push
mov
push
cs
dec
add
aaa
xor
into
pop
aaa
leave
nop
lahf
push
xchg
cmpsl
jg
arpl
or
xchg
sbb
jmp
sub
lock
push
xchg
xor
insb
mov
ja
mov
xor
sub
pop
div
or
sub
or
dec
inc
mov
sti
push
fdivrp
fwait
imul
ja
divb
lret
scas
mov
push
pop
hlt
push
imul
mov
xchg
shlb
sub
mov
or
clc
in
jle
cmpl
imul
or
xchg
jmp
fstpt
stc
out
push
dec
and
adc
incl
or
pop
inc
insl
push
scas
es
lahf
pop
adc
adc
xchg
sbb
dec
lahf
push
dec
sub
push
std
dec
cli
adc
push
in
imul
popl
cmp
mov
jg
and
mov
inc
pop
mov
call
pushf
sub
sbb
xor
orl
xchg
mov
xor
fwait
out
mov
sti
inc
leave
inc
call
cmp
ljmp
fsubl
cs
and
or
mov
dec
mov
push
insl
hlt
dec
jp
jb
leave
fsubl
pushf
inc
xchg
ret
cwtl
les
leave
sarl
ljmp
sbb
and
dec
and
aas
out
push
es
iret
xchg
add
lret
push
jno
inc
or
jl
fnstenv
out
lahf
lods
xchg
and
mov
out
out
inc
sbb
xchg
lcall
xor
leave
punpckhbw
rorb
test
adc
mov
fnstsw
lods
stc
out
adc
cmp
add
out
pop
cwtl
or
notb
daa
inc
inc
pop
adc
jg
scas
cwtl
adc
fisubrs
sbb
push
mov
rclb
popf
xor
jmp
mov
repz
test
jl
popa
sub
bound
sbb
mov
sub
ja
stc
aam
mov
and
aad
ret
out
movsl
into
lcall
lods
pushf
ja
xlat
shlb
test
cmp
xchg
cs
jp
mov
test
ljmp
or
das
out
push
or
xchg
mov
shrb
daa
ret
in
mov
in
push
cmp
or
and
fisubl
mov
mov
mov
push
pop
jge
sub
leave
fildll
pop
push
mov
mov
mov
inc
insl
xor
and
inc
loope
sti
mov
xchg
xor
lea
mov
mov
push
inc
xor
mov
adc
mov
fwait
bound
insl
lods
out
mov
jo
repnz
inc
ficoms
arpl
xchg
shl
pop
and
inc
lock
sub
scas
mov
or
xchg
mov
inc
or
push
loope
adc
loop
sub
jno
push
add
xor
sub
sahf
mov
sbb
mov
mov
maxps
jp
cmpsl
cmp
lods
fsubl
sets
inc
cmc
mov
mov
pop
enter
fdivrs
and
mov
ja
incb
lret
int3
xchg
xor
dec
pop
dec
ret
sub
inc
adc
fisubrl
ja
jb
jno
add
decl
test
imul
insb
lods
es
inc
jmp
or
mov
xchg
lea
testl
add
xchg
mov
inc
int3
sub
mul
cmp
push
pop
dec
xor
popa
or
movsb
fcoml
xor
aaa
mov
dec
test
sub
mov
pop
insl
loopne
insl
popf
rol
cli
popl
hlt
aaa
outsl
movsb
mov
xor
cli
sub
fstpl
jp
gs
adc
dec
cs
clc
fistpl
loopne
pop
push
movsb
pusha
dec
int3
into
pop
imul
inc
rcrb
daa
inc
sub
add
mov
lret
cmp
push
insb
xor
jae
mov
sti
test
fwait
pop
cmpsb
shll
dec
xchg
outsl
mov
cs
ljmp
fs
cltd
or
out
push
sbb
sbb
xchg
cmp
xorb
sub
xchg
cmpsb
dec
or
cmpsb
shlb
mov
adc
repnz
out
xlat
lock
xor
xor
mov
inc
mov
mov
ret
outsb
movsb
mov
xchg
inc
movsb
addb
stos
cmp
loope
ja
add
sbb
movsb
imul
cli
dec
nop
xor
ljmp
pop
les
or
sti
inc
insb
out
mov
and
out
xor
inc
pop
cmp
ret
je
sbb
pop
stos
mov
pushf
sub
push
dec
push
push
inc
leave
insb
int3
mov
pop
ss
pop
imul
shr
icebp
xchg
dec
in
test
mov
pop
bnd
das
xor
js
and
lods
rcrl
jae
repnz
cmpsl
testl
xor
jb
lds
cld
dec
test
mov
cs
sarb
jnp
push
jl
test
mov
and
shrb
movl
cld
xor
pop
sub
dec
test
inc
mov
sbb
cmp
mov
fdiv
lock
push
jmp
int
int
int
std
or
add
jae
scas
rcr
dec
in
ss
or
and
xor
push
sub
stos
or
pushf
jnp
jo
popa
xor
ficoms
push
jp
dec
les
stc
cwtl
popa
xchg
mov
cld
cli
pop
sbb
cmp
jb
xchg
syscall
pop
gs
mov
mov
fistpl
push
mov
mov
iret
mov
loopne
sbb
sub
incb
mov
sbb
jno
add
leave
pushf
jns
pop
out
sbb
sbb
pop
pushf
mov
inc
inc
les
push
xor
xchg
adc
es
mov
mov
movsl
inc
add
xchg
jae
mull
popa
mov
adc
inc
add
subl
lds
inc
in
stos
aaa
sbb
ret
sbb
ret
nop
cmp
sbb
add
mov
sub
mov
add
iret
outsb
les
add
mov
fdivrs
out
xchg
shrl
pop
sub
outsb
testb
in
inc
clc
fdivl
add
out
add
lods
fdivrl
insl
mov
inc
cli
and
call
scas
inc
out
rcrb
ret
rol
test
xchg
pushf
sbb
out
lret
mov
sbb
sbb
mov
loop
jmp
xchg
faddp
cmp
into
mov
dec
push
push
inc
and
jb
pushf
sarb
mov
push
or
pop
jp
pop
imul
and
xchg
and
cmc
outsl
decl
std
cmpsb
push
fstps
jbe
cmp
mov
rcrb
sub
mov
shll
scas
xchg
or
fisubs
mov
insl
adc
leave
xchg
lock
dec
adc
fstps
inc
addr16
xchg
mov
jns
pop
insb
sbb
insb
loop
xchg
lret
pop
imul
jb
mov
mov
push
sub
xchg
movsl
rcl
push
sub
packuswb
popa
in
cltd
rolb
sub
lret
imulb
cmp
or
sbb
and
rcl
jle
lret
push
repnz
xlat
insl
mov
and
fidivl
rcrl
jmp
xchg
dec
sbb
stos
loope
xchg
mul
pop
mov
lcall
mov
xchg
mov
ret
stos
pusha
mov
lret
inc
xor
add
inc
mov
mov
push
daa
inc
mov
imul
pushw
dec
out
jp
shll
int
push
sub
add
pop
outsb
push
test
in
push
arpl
push
pop
jns
iret
fidivrs
mov
insl
movsb
push
and
rorb
and
jne
mov
xchg
pop
cwtl
inc
push
iret
lret
ret
sahf
or
mov
mov
lods
test
xchg
repnz
sub
xor
fwait
fwait
jg
mov
repnz
sub
inc
xchg
in
dec
adc
aaa
arpl
addr16
pop
inc
add
jle
cmc
sub
jb
add
cmp
or
stos
les
orl
sbb
inc
stc
arpl
push
push
fbld
and
jb
or
fsubl
pop
cwtl
inc
gs
lcall
xchg
cmp
lret
xchg
push
add
rolb
int
fisubrl
popa
out
js
and
adc
sbb
xor
jecxz
push
push
jb
xchg
popf
into
fisttpl
out
and
sub
mov
mov
pop
fidivrs
loope
mov
cmp
mov
mov
mov
and
pop
adc
sub
adc
scas
mov
jle
sub
js
je
fldcw
cmpsl
les
mov
movl
int
cmp
xor
sub
dec
arpl
jmp
mov
es
rclb
or
data16
mov
sub
call
add
mov
inc
xchg
or
push
xchg
int
pop
sub
aam
xor
inc
nop
out
add
xchg
xor
gs
cmp
jbe
mov
lahf
jp
icebp
mov
mov
adc
jg
mov
push
aam
in
push
pop
movsl
push
inc
fdivrl
jae
xor
mov
adc
out
scas
and
out
mov
test
ret
pop
scas
and
into
push
ret
mov
push
dec
fdivr
sub
in
sahf
sub
jae
push
inc
fcoms
push
sbb
pop
mov
dec
movsb
inc
add
lret
xor
and
lea
cmp
push
cmp
negl
xor
out
adc
xlat
xor
test
popf
adc
push
mov
sub
icebp
int
pop
xchg
xchg
in
and
stos
mov
mov
mov
mov
mov
pop
mov
fs
push
sbb
call
push
sub
je
hlt
ljmp
xchg
mov
ljmp
outsl
aaa
cs
cmp
imul
divl
ja
enter
sbb
fsubrs
lds
fsts
and
mov
mov
sbb
and
dec
sub
ret
jno
imul
in
cmp
adc
push
fstpl
mov
les
in
pop
ret
sbb
mov
inc
fwait
pop
and
pop
sbb
jle
xor
outsl
or
mov
xchg
mov
adc
shlb
jae
add
adc
xor
adc
mov
mov
in
out
in
popa
lds
push
dec
mov
or
xor
mov
adc
fcmove
getsec
leave
scas
inc
adc
adc
ret
mov
scas
fimuls
mov
add
mov
inc
ret
add
subb
loopne
fs
test
mov
sarl
aad
mov
and
sar
inc
shlb
lret
testl
in
pop
outsl
adc
xlat
xchg
mov
mov
xchg
rclb
outsb
popf
pop
sub
test
pop
fistps
push
jg
cltd
in
sub
pushf
xchg
pop
int3
xchg
xor
and
mov
lods
push
pop
mov
pop
cmp
inc
cli
or
xor
push
or
sub
in
push
lret
xorb
add
adcl
push
icebp
or
aam
mov
sbb
jae
outsb
lds
loop
adc
cmp
jle
mov
in
popf
add
jne
pop
dec
cmpsb
or
out
push
pop
cmp
icebp
dec
js
push
jno
repz
add
pop
mov
and
cwtl
stos
cmp
cli
sahf
scas
pop
aad
stc
test
sbb
fldenvs
lcall
fimuls
in
insb
cmp
data16
lea
int3
xor
ret
jno
add
pop
mov
int
dec
and
lods
push
or
xchg
xchg
flds
push
pusha
lret
xchg
mov
dec
cmp
dec
imul
push
scas
cmp
mov
das
lret
pop
test
sbb
push
xor
test
jmp
xchg
mov
push
sub
sbb
xchg
out
add
push
fsubrl
in
or
in
adc
leave
pop
insb
data16
pop
xor
repnz
loopne
aad
add
negb
test
xchg
and
lea
add
inc
add
hlt
jo
pop
clc
data16
push
ss
popf
push
fistpl
pusha
inc
shlb
xorb
add
mov
xchg
mov
xor
mov
repz
ret
jmp
mov
fwait
dec
mov
push
outsb
pop
adc
ss
pop
in
xor
mov
addl
or
xor
jno
sbb
adc
xchg
insb
mov
mov
imull
cld
shll
into
idivl
cmpsl
dec
jno
xchg
push
sbb
xchg
xor
icebp
push
cmp
inc
lret
xor
jle
cwtl
pushf
jmp
inc
loope
shll
adc
push
push
cmpsl
arpl
mov
out
cs
adc
lds
mov
shrb
cmp
es
rolb
mov
scas
sbb
or
clc
int3
inc
clc
adc
jae
lock
pop
sbb
dec
sbb
lahf
leave
pop
nop
mov
mov
inc
mov
fs
ret
fildll
jne
mov
test
js
push
decl
cld
mov
leave
pop
jp
xchg
jb
mov
dec
imull
xorb
loopne
cmp
bound
pop
pushf
xor
xchg
cli
fdivs
push
xor
enter
and
push
jmp
ja
xchg
push
xchg
mov
stc
inc
sub
dec
stos
daa
mov
roll
or
add
es
lcall
fistpll
mov
test
lahf
fisttpll
or
out
lods
inc
stc
out
jge
fcoms
mov
push
sbb
mov
pop
pop
and
rcl
mov
xchg
in
test
adc
xor
inc
jle
mov
addb
int3
sbb
mov
data16
repz
lret
mov
stos
jmp
aad
or
stc
pushf
adc
rcr
mov
xchg
scas
or
scas
jbe
pop
dec
fs
je
aad
cmp
loopne
sub
icebp
cmp
add
mov
or
cmp
jo
mov
insl
or
mov
incb
fimull
in
push
xchg
cs
sbbl
mov
lret
dec
adc
push
movsb
test
cld
sub
aas
push
out
adc
cmp
ret
fnsave
or
inc
stos
adc
mov
mov
jecxz
push
icebp
shll
push
xchg
xchg
mov
shll
inc
pop
add
mov
aam
pop
sub
std
aaa
shlb
mov
push
mov
xor
pop
lea
adc
roll
mov
or
inc
movsl
dec
xchg
push
mov
scas
sbb
loop
push
dec
imul
mov
int
aaa
jp
mov
clc
enter
into
loop
push
push
dec
xchg
xor
add
stos
in
pop
into
subl
fcoml
xchg
cmpb
adc
jnp
fucomp
add
mov
add
dec
loopne
xchg
jge
pusha
xchg
sub
pop
inc
fsts
lds
cmpsb
clc
sbb
cmpsb
dec
popa
int
xor
aaa
clc
mov
mov
mov
sbb
xchg
test
loopne
xlat
mov
mov
faddl
mov
or
roll
adcl
movsb
jae
arpl
add
data16
test
dec
in
sbb
stos
jnp
sbb
pusha
mov
and
push
sbb
rcl
inc
xor
daa
inc
mov
sarl
xor
std
out
inc
stc
addr16
insl
cmp
add
fwait
inc
and
idivl
cmc
or
and
cltd
loope
dec
pop
cmpsl
ficomps
xor
stos
inc
lods
sti
inc
jne
sub
and
leave
lea
mov
jge
clc
mov
and
iret
adc
out
lcall
inc
aaa
mov
test
sbb
out
xor
cmp
repz
aad
les
out
mov
dec
and
push
push
into
aas
jp
jge
cld
pop
or
dec
or
jl
pop
xchg
cld
jmp
daa
inc
sub
and
shl
mov
and
xchg
jg
xor
jb
mov
pop
jecxz
in
les
adc
push
rorb
lock
enter
orb
sub
loop
xchg
push
loope
push
inc
aaa
call
das
shrb
ret
sbbb
or
jb
mov
adcb
push
test
aaa
and
xchg
ja
mov
lock
lret
ss
inc
cld
xchg
mov
out
or
insl
hlt
inc
jmp
jg
das
pop
int
gs
push
mov
pop
or
sub
inc
xchg
insb
sti
pop
imul
jae
cmp
adc
cld
hlt
sbb
fldl
inc
out
loopne
insb
xchg
aad
fcmovne
fwait
stc
add
inc
aas
or
scas
stc
fisubs
jns
test
inc
mov
xor
es
jmp
add
insl
push
mov
ljmp
pop
or
in
jno
jb
jnp
or
dec
loop
jnp
stc
inc
push
daa
dec
pop
add
fisttpll
divl
dec
imul
mov
push
cmc
movsb
mov
jl
cmp
pop
jge
ss
jo
add
aad
jle
inc
je
loopne
cmpsl
idivb
int
jb
adc
ja
jb
out
cmpb
mov
mov
xlat
mov
outsb
fcoml
xchg
psubsw
push
dec
in
test
cmc
push
negb
repz
cmpsb
incl
mov
test
int
popf
outsl
ss
mov
subl
adc
imul
or
fs
stos
neg
insl
cli
sub
loope
pop
cmp
out
hlt
insl
xor
xchg
cmp
hlt
insb
xor
stos
out
movsb
dec
pop
adc
test
shlb
fs
sub
or
std
outsl
popa
scas
loope
mov
or
mov
xchg
sub
cwtl
ljmp
movsb
cmp
push
jo
das
das
adc
testl
dec
cli
sarw
sub
xor
xor
rcrl
cmc
adc
add
inc
jmp
xor
leave
mov
adc
mov
ss
add
inc
mov
fwait
pop
out
testb
and
pusha
fadd
icebp
adc
lods
ds
xor
push
mov
testb
pop
jo
sbb
xor
lods
gs
pusha
mov
mov
jb
push
shll
jecxz
das
out
fcompl
mov
cwtl
fdivs
scas
sbb
flds
repnz
lock
cltd
addr16
movsb
lahf
loope
ror
lea
inc
loopne
hlt
fildl
mov
pop
and
jg
ljmp
rorb
in
adc
push
cmp
cmp
and
jge
pop
xchg
cmp
sbb
sti
xchg
sarb
inc
push
jge
cs
pop
ret
pushf
and
out
fldl
jae
in
arpl
sub
shl
jnp
and
mov
jnp
loope
idiv
mov
adc
add
daa
pusha
fwait
dec
pusha
pop
fdivl
mov
call
cmp
adc
out
or
icebp
insb
jnp
movsl
cmc
es
mov
inc
xchg
out
pushw
jecxz
add
sub
pop
pop
cltd
jmp
xor
nop
push
icebp
jo
arpl
loope
or
adc
xchg
mov
cmp
xlat
mul
pop
lock
pop
imul
lea
jmp
jg
mov
adc
push
sbb
mov
pusha
push
jns
outsb
out
push
xor
mov
mov
cmp
aaa
adc
xor
mov
leave
lret
les
idiv
push
testb
cmpsl
out
or
mull
pop
xor
rclb
mov
out
jle
fs
mov
xchg
jnp
lock
xchg
imul
adc
mov
jle
jmp
in
inc
movsb
stc
xchg
push
cmpsl
mov
or
icebp
sub
cmp
or
pop
jne
and
lret
pop
rclb
jp
jae
mov
mov
test
frstor
push
test
ret
imul
lret
js
dec
pop
add
and
mov
inc
call
add
stc
in
call
stc
sbb
fisubs
xchg
cmp
mov
or
cmp
rcr
pop
stos
sbb
pop
shl
fs
cli
inc
cmp
dec
xor
jmp
jge
jl
jp
hlt
movsb
mov
push
xchg
nop
ret
inc
jg
lcall
test
xchg
push
ret
es
in
ja
or
out
adc
pop
pop
addr16
ja
dec
popa
inc
pop
mov
int
roll
xchg
fs
pop
rcr
js
xor
mov
cmpsb
xchg
cmp
arpl
mov
iret
je
sbb
dec
fcmovne
es
cltd
push
std
pusha
divl
sub
pop
repnz
popf
lea
arpl
cmp
jmp
sbb
pop
lcall
decb
xchg
jae
ss
or
gs
lock
add
jne
jne
hlt
and
sbb
mov
inc
mov
inc
xchg
cmp
mov
int3
or
loope
jb
lcall
mov
std
mov
stos
inc
loope
jb
sbb
or
mov
mov
stc
cld
ss
imul
pusha
outsl
and
in
mov
imull
scas
pop
and
imul
jmp
inc
call
stos
out
adcb
and
out
cmp
addb
cmpsb
filds
or
push
cmp
jp
mov
es
dec
pop
jb
insb
lret
out
jbe
aas
jo
fwait
and
jp
movsl
loope
flds
pop
gs
jge
ret
pop
cwtl
lcall
xchg
rcrl
sbb
cmp
push
inc
inc
pop
mov
lock
rcr
xchg
mov
rcll
cmp
rcl
fisttpll
cmp
dec
push
adc
out
jecxz
enter
cmp
add
mov
aas
call
aaa
out
fstps
je
and
or
repz
adc
jb,pn
aam
push
push
sub
mov
mov
inc
lods
gs
pop
loop
add
and
cmp
mov
nop
fstl
mov
movsb
push
fstpl
in
fisttps
movsl
out
pop
pop
dec
lret
cmc
jno
sub
push
push
mov
push
adc
adc
jno
add
push
push
pop
mov
imulb
ja
cmp
inc
inc
test
stos
and
and
push
icebp
mov
ljmp
push
fstl
push
stc
ja
js
sub
imul
ret
out
or
cmp
ds
cli
into
push
stc
cmp
aam
mov
fldt
cs
jl
dec
ret
cmpsl
mov
imul
std
mov
sub
mov
clc
les
sbb
pop
bts
lea
rolb
push
push
rcrb
adc
scas
xchg
fs
jae
loope
mov
aas
cmp
add
test
push
jmp
mov
and
rcr
repnz
mov
cs
jp
ljmp
imul
mov
mov
jmp
icebp
dec
dec
xor
adcb
into
cli
push
lea
jmp
ss
and
fwait
adc
lret
into
ljmp
test
stos
jl
dec
and
jg
iret
jle
out
and
push
je
adc
sbb
sbb
daa
fsts
push
mov
sbb
push
xchg
jmp
inc
cmc
insb
scas
pop
pop
xor
in
pusha
jl
fsubl
jns
sub
push
mov
cmp
dec
roll
test
outsl
lods
cwtl
sti
fbld
jg
mov
out
inc
pusha
bound
inc
stos
mov
push
out
lahf
push
repz
aam
pop
in
xor
stos
pop
push
adc
pop
push
aaa
push
xchg
cmc
xchg
and
xchg
and
sbb
push
xchg
jecxz
or
push
aam
mov
or
dec
call
les
inc
movsl
leave
mov
fs
aas
shll
adc
or
bsf
int
lret
test
call
pop
or
xchg
ficomps
and
push
push
aam
push
daa
icebp
imul
and
iret
sbb
sub
mov
mov
push
add
cmp
jp
pop
xor
scas
jne
cmp
xchg
test
fisubrs
add
sarl
mov
icebp
mov
imul
jl
mov
add
or
es
cli
out
and
dec
push
jle
pop
call
jecxz
loopne
inc
dec
arpl
pop
dec
add
push
fs
cmpsl
sub
cmp
js
imul
lock
xchg
mov
jo
loopne
aad
sub
ffreep
in
lods
cmp
cmpsb
into
mov
cltd
push
lahf
inc
xlat
in
repnz
adc
jo
mov
pop
jns
push
sarl
out
sbb
jns
jge
lcall
mov
push
cmp
cld
fldl
inc
cwtl
xchg
test
lods
adcb
inc
xchg
loope
cmp
dec
cmp
cmp
pop
test
fimull
jp
xchg
lock
lcall
incl
xlat
jp
cmpsl
je
out
xchg
mov
sub
xchg
hlt
jno
sahf
ljmp
popa
adc
fisubs
imul
sub
mov
sbb
lds
cwtl
xchg
out
adc
cwtl
jecxz
lds
addb
sub
mov
xchg
scas
xchg
add
push
les
popa
scas
adc
pop
mov
out
cli
mov
pop
hlt
inc
cmpl
sub
mov
iret
sbb
popa
dec
xlat
inc
jl
test
xlat
cs
pop
rol
out
jb
sub
lahf
cmp
inc
ja
xor
fcomps
int3
cmp
gs
push
stc
mov
inc
xchg
fwait
popa
inc
push
mov
mov
repnz
mov
scas
add
and
jg
hlt
jne
add
bound
pop
nop
push
fistpl
jle
pop
inc
adc
dec
push
shll
mov
lahf
ret
in
mov
nop
and
enter
iret
popf
lret
icebp
bound
mov
dec
mov
movsb
popa
lret
dec
mov
out
adc
js
cmp
mov
cmp
pop
jmp
mov
add
lods
mov
inc
mov
enter
sbb
pop
lods
lcall
and
sti
mov
lret
xchg
inc
sbb
dec
sbb
fiaddl
je
daa
mov
cmpsb
mov
sbb
dec
iret
push
lock
mov
aas
jae
pop
jg
inc
notb
push
push
movq
imul
xchg
dec
push
mov
add
shl
lods
xchg
cmp
xchg
test
iret
sbb
stc
aaa
fdiv
aam
popa
fistps
mov
stos
pusha
adc
je
aam
sbb
lds
cmc
stos
xor
xchg
test
sub
inc
outsl
sbb
cmp
and
or
mov
xchg
stos
adc
sbb
js
push
shr
pushl
adc
and
mov
sub
lds
lcall
loop
les
stos
mov
jg
daa
push
lret
jo
daa
mov
pop
lret
xor
nop
mov
push
out
stos
cmp
lret
mov
cltd
and
mov
test
call
push
xor
enter
cmp
xchg
dec
enter
inc
pop
pop
mov
mov
fisubrl
cli
negl
lahf
mov
adc
jl
repz
inc
test
pop
fs
aaa
xchg
imul
lds
outsl
add
hlt
outsb
test
or
jae
mov
outsb
in
bound
and
pop
pop
fsubrs
inc
push
pop
or
cmp
pop
stos
sbb
mov
mov
cmp
mov
mov
imul
lea
addr16
movsb
mov
fsubs
lahf
pop
and
int3
jge
mov
xor
int
mov
js
cmpsb
sub
mov
cld
or
leave
ffree
xlat
cmp
dec
jne
in
mov
jnp
sub
cmc
mov
mov
xchg
pusha
in
dec
dec
pop
sbb
lods
lcall
xchg
cmpsb
jns
jp
out
mov
or
sbb
fcomps
sub
push
shl
rorl
fs
mov
and
lock
mov
mov
fdivrl
imul
jbe
out
mov
sbb
or
cli
pop
lods
or
push
inc
orb
add
pop
cmp
mov
lods
insl
hlt
xorb
das
mov
adc
jae
xchg
stos
lock
pop
std
xchg
sbb
adc
push
cmpsb
push
dec
jg
dec
sti
int3
nop
push
or
rcr
cwtl
mov
adc
adc
out
test
cmp
inc
ljmp
mov
sub
cs
cmp
push
xor
aam
fwait
clc
sahf
mov
ja
or
addl
imul
dec
cmp
shl
xchg
lock
xchg
push
push
xchg
sbb
addb
jecxz
adc
daa
idivl
outsl
add
xchg
daa
xchg
push
lcall
pop
imulb
adc
push
outsl
cld
sahf
dec
xchg
shll
cmc
add
adc
jae
sub
mov
je
push
aaa
movsl
xchg
cmp
call
and
testl
or
inc
iret
stos
adc
aas
inc
jbe
pop
pop
test
sbb
adc
xor
push
mov
mov
push
pop
jp
lret
mov
jno
add
mov
sbb
dec
pop
arpl
adc
dec
jl
js
pushl
inc
jb
in
jns
lds
data16
mov
icebp
loopne
shll
mov
or
repz
sti
jne
sti
pusha
jge
jbe
cmp
cwtl
stc
adc
sbb
xor
add
xchg
sub
xor
push
or
pop
sub
mov
insl
dec
fwait
or
and
movsl
and
push
mov
mov
scas
mov
fdivl
sarl
jmp
sbb
add
nop
cmp
dec
push
movsl
mov
rclb
popa
mov
lods
cmc
ret
adc
jl
lods
jle
and
xor
rolb
push
adc
daa
mov
daa
mov
les
das
mov
fstp
sub
push
test
lret
push
and
and
mov
aad
test
mov
xchg
in
mov
mov
jnp
call
pushf
rcrl
add
sub
cmp
inc
add
and
cmpl
les
daa
push
and
xchg
sbb
pop
mov
jb
mov
mov
fcoms
loopne
inc
mov
sbb
dec
out
xor
insb
sti
push
push
ds
pop
pushf
adc
enter
out
jae
sti
je
push
nop
orl
aas
cmp
shll
mov
pop
lods
rcrb
movsl
aas
xor
fs
ja
inc
fwait
mov
dec
xchg
imul
inc
in
rcrl
cld
popa
fdiv
push
test
int3
jne
test
cmp
pop
aaa
loop
sub
cli
aas
outsb
sub
lods
inc
add
les
jnp
jecxz
call
sti
inc
aaa
jge
push
les
dec
inc
sbb
mov
pop
inc
xor
lods
into
in
xchg
jae
inc
mov
data16
mov
subb
jecxz
dec
aad
jns
inc
fdivr
jp
mov
or
xor
cmp
nop
stc
pop
bound
sbb
dec
loop
add
fnsave
cmp
int3
xchg
pushf
cmpsb
mov
into
jl
dec
push
fists
rolb
mov
loopne
into
out
push
in
enter
jg
mov
aam
xchg
dec
sub
or
jnp
cltd
cmc
mov
xor
push
rol
movsb
xor
mov
inc
int
add
jmp
insb
push
jle
push
pop
mov
fists
aam
xor
inc
cmpl
dec
gs
sarl
pop
clc
loop
roll
or
dec
mov
and
xor
jge
cltd
mull
push
add
mov
dec
rcl
das
mov
popf
std
xor
test
dec
pop
mov
mov
cmp
shrl
pop
sahf
jge
scas
pop
mov
setae
movsb
in
mov
push
inc
in
or
movsb
ret
loope
je
test
std
jp
or
pop
xchg
cli
mov
je
ljmp
mov
mov
cmc
scas
daa
xchg
inc
sti
std
in
pop
les
pusha
cwtl
out
xchg
mov
pop
mov
push
dec
outsl
mov
repnz
hlt
scas
cld
or
mov
mov
fbstp
lret
into
mov
push
movsl
js
les
decl
dec
dec
fnstsw
lods
mov
push
icebp
mov
cmp
or
adc
sbb
test
outsb
push
add
xacquire
dec
jp
clc
out
jg
pusha
or
adc
mov
add
push
xchg
addb
mov
aaa
fdivrp
sahf
cmp
loopne
test
sub
shrl
jae
xlat
into
mov
add
mov
dec
mov
call
jge
paddusw
scas
bound
jne
cmp
imul
push
push
daa
inc
jno
and
roll
jg
mov
rorb
add
pop
negl
push
xchg
inc
jp
cli
pusha
call
jg
mov
sbb
pop
scas
mov
adc
loop
inc
ss
int3
rcll
leave
adc
popa
int
popa
mov
in
jo
fmull
xor
pop
lret
pop
ljmp
leave
and
out
xor
stos
lods
stos
ficoml
sti
aam
xchg
popf
inc
test
add
je
jl
ret
adc
fldl
shll
cltd
mov
cli
inc
ret
push
fwait
add
jmp
and
dec
lahf
inc
and
cmp
ja
mov
int
mov
mov
jg
pop
push
dec
lock
push
jl
in
frstor
inc
mov
sub
and
pop
jg
inc
adc
les
sbb
ds
or
cs
in
enter
xchg
cmp
loop
sub
cmp
and
xor
aaa
test
xor
lret
test
sti
inc
lds
or
jecxz
cltd
or
loop
pop
xor
xchg
sub
push
push
mov
lret
movsb
mov
jo
dec
rsm
xchg
fxch
add
sub
es
outsb
data16
mov
mov
adc
push
gs
jge
repz
lods
jno
inc
loop
shrl
dec
in
xchg
jecxz
push
lcall
fcmovne
movsl
das
out
mov
dec
movsl
lret
out
xchg
repz
mov
cwtl
mov
sub
and
and
js
push
xor
pusha
rsm
mov
data16
inc
jne
call
enter
push
xor
je
scas
pop
add
jmp
xlat
or
lock
out
cmp
in
or
cmpb
loope
fisubl
js
outsl
push
decb
shrb
data16
gs
mov
in
sarb
out
cmpsb
fsts
push
imul
in
ljmp
inc
int3
mov
cmpsl
push
pop
notb
and
fidivrl
cltd
or
sub
dec
movsb
aad
xchg
or
xchg
sahf
sbb
and
mov
mov
jo
inc
and
jbe
shl
mov
jmp
or
es
push
xor
shll
cli
mov
movsb
orb
mov
ljmp
into
xchg
dec
je
sub
pop
or
rcrb
jp
adc
fcomp
lea
movsb
lret
mov
je
mov
pop
mov
mov
sub
or
iret
out
push
xor
test
pop
xchg
sahf
pop
xchg
dec
call
in
getsec
sub
pop
cld
loopne
shll
and
pop
inc
cmpsl
mov
aas
dec
push
repz
jae
add
out
outsl
cmp
aas
sahf
popa
push
cmp
in
jae
leave
lahf
test
pop
loope
dec
out
push
dec
fisttps
loop
dec
pop
xchg
les
pop
and
repnz
inc
mov
adc
out
push
and
fidivrl
ret
outsl
mov
pop
pop
fwait
mov
or
pop
pop
aad
and
xchg
mov
and
imul
add
cwtl
sbbb
sub
sub
mull
pop
mov
mov
adc
dec
jecxz
shlb
lea
inc
cmp
fwait
mov
and
shll
in
rcl
mov
enter
scas
fisubs
sub
cmpsl
add
addr16
xchg
and
imul
cmp
mov
mov
mov
or
lods
stos
lea
dec
sbb
outsl
push
movsl
sti
int3
push
jle
cwtl
in
int
aad
shll
lret
popa
enter
test
js
loopne
dec
jo
xchg
adc
jns
lret
push
jmp
xor
nop
out
mov
mov
mov
shl
jle
xchg
mov
stc
xchg
movsb
adc
mov
xchg
lret
and
pop
inc
outsl
das
jo
loopne
jmp
jbe
orb
lcall
cmp
ljmp
aas
pop
bnd
or
sbb
mov
xlat
fcompl
sbb
cmp
mov
xchg
or
mov
nop
mov
inc
sbb
lods
mov
lret
lcall
jg
sarb
or
pop
mov
xor
pop
movl
xchg
mov
daa
cli
xor
movsb
fildll
pushf
jmp
inc
mov
bound
es
adc
test
leave
cmpsl
test
mov
add
dec
cmp
scas
in
add
scas
pop
and
cmp
xchg
enter
hlt
pusha
jl
xlat
xor
inc
leave
add
mov
pop
movsb
pop
xchg
xchg
imul
push
jae
sub
hlt
aad
cmp
mov
mulb
mov
cwtl
xchg
xchg
es
jp
std
movsl
iret
outsl
inc
cmp
or
dec
out
add
dec
aam
cmp
les
mov
in
cltd
sarl
xchg
fldcw
das
rcr
lds
je
stc
jbe
sbb
mov
fs
out
fwait
cmp
or
xorl
outsl
dec
hlt
mov
movhlps
pop
ret
cmp
adc
pop
push
sub
xchg
jo
sub
mov
pusha
add
jo
xor
push
addb
imul
push
dec
and
loopne
push
stos
xchg
cmpb
test
or
ror
xor
pop
pop
std
jbe
rcrb
xchg
pop
mov
pop
negb
pop
cli
jb
mov
xrelease
and
fdivrs
jmp
int3
movsb
jns
xor
jo
jbe
fiadds
in
outsl
xor
jl
insl
rorl
and
push
mov
push
xorl
cmp
dec
aaa
pop
cmpsb
xchg
mov
fstps
leave
mov
cmpl
push
inc
jmp
sbb
into
pop
mov
lahf
loope
adcl
int3
mov
add
add
sbb
mov
mov
testb
adc
hlt
dec
int
loope
sbb
sahf
sti
push
rcrl
and
insl
data16
std
in
pop
cltd
dec
adc
test
imul
popf
add
mov
dec
lret
int
sub
sub
or
gs
rolb
insl
xchg
outsb
test
cmp
pusha
insl
adc
cltd
test
jno
lcall
cwtl
fmuls
pop
shll
sarb
cmp
cmpsl
lcall
jo
dec
or
pop
divb
lret
and
out
lock
ret
pop
icebp
insl
test
and
mov
imul
call
cmc
fstpl
sbb
push
jmp
lods
mov
pop
mov
movsb
int3
xchg
lret
dec
inc
imul
pop
push
or
lret
mull
aas
push
jb
insl
testl
int3
inc
dec
push
and
push
inc
dec
cmpsb
fmul
pop
or
and
mov
dec
test
xorl
shrb
cmp
jbe
push
sbb
jno
inc
pop
lods
fcoms
cmp
popf
icebp
jle
lcall
outsl
insl
fadds
les
repz
push
cmpsb
rcrl
int3
fildl
xchg
cmp
int3
or
lret
cmp
pushl
push
movsb
or
lods
es
inc
test
sarb
adc
pop
ret
adc
mov
mov
lcall
add
shl
in
pop
sbb
sbb
mov
rorb
data16
sbb
mov
mov
jb
js
push
js
cli
mov
rorl
filds
mov
mov
imul
lea
mov
fcmove
mov
js
sub
push
add
mov
sbb
or
fstpt
xchg
and
movsb
adc
repz
xchg
adc
jge
cmp
adc
mov
mov
inc
sbb
mov
mov
arpl
xlat
pusha
cmp
xchg
sbb
add
xchg
dec
mov
jbe
sub
imul
mov
std
mov
push
shrb
fsubrs
fisubrs
cmp
stos
xorl
leave
sarb
mov
mov
sub
jns
rcl
into
lea
cmp
sbb
cmp
adc
hlt
shlb
sahf
int
jle
jnp
pop
push
push
imul
and
fadds
sub
mov
and
mov
scas
pusha
mov
ss
add
xchg
mov
movsl
mov
idivl
fnstsw
push
out
mov
mov
scas
and
iret
jbe
add
cmp
lahf
imul
das
daa
dec
movsb
test
sub
pop
movsb
and
sbb
call
rol
adc
or
shll
push
btcl
cwtl
mov
int
rcrb
bound
cmp
jae
fidivrl
sbb
stos
cmp
fst
mov
jo
fwait
dec
mov
into
or
cli
mov
push
fsubl
ds
out
ret
mov
in
bound
cs
push
stc
sub
out
std
xchg
dec
shlb
filds
inc
mov
push
push
cmp
push
shll
std
push
mov
pop
pop
jno,pn
rcrl
cmpsb
inc
dec
iret
mul
dec
jecxz
dec
sti
subb
out
adc
pop
lahf
movl
push
pop
cmp
xchg
cmp
xlat
stc
jns
outsl
cli
cld
aas
mov
jmp
mov
in
cs
xor
fcmovne
shlb
push
lock
ss
push
test
or
push
cltd
lods
sub
mov
cmp
cmp
fmuls
xor
fcom
mov
mov
mov
loop
adc
out
cmp
push
cmpsb
ret
pop
mov
push
int3
fmull
xor
mov
sti
push
lcall
loope
mov
inc
dec
mov
dec
jnp
loopne
jmp
popl
add
pop
push
pop
mov
xor
and
xchg
xchg
imull
leave
dec
inc
cmp
es
jae
fsts
cmpsb
push
sub
xchg
sub
test
adc
lret
xchg
cmp
ret
push
cmp
lods
jp
mov
or
enter
add
lret
call
adc
jmp
in
je
int
push
icebp
std
movsl
test
jns
js
mov
fsubrs
ss
cmpsl
mov
cmp
es
mov
add
cmp
insb
jae
sub
out
sub
xchg
fsub
pop
loope
lea
mov
and
push
adc
popa
xchg
dec
in
les
aaa
lock
leave
pop
jmpw
mull
pop
testb
fldl
cwtl
sti
xchg
test
je
jb
test
jno
inc
xor
xor
out
jl
xor
mov
sbb
inc
push
bound
popf
sub
ret
fadd
imul
jne
test
ljmp
sbb
pop
enter
rorl
in
out
bound
push
pop
loopne
fwait
add
or
mov
push
into
add
lds
sub
loopne
ja
shrb
mov
fxtract
mov
fwait
loope
pop
add
lret
nop
inc
adc
push
jl
or
iret
add
mov
mov
adc
std
ss
dec
sbb
push
mov
dec
cmpsb
ljmp
sub
das
mov
mov
rorb
fisttpll
out
push
test
dec
popf
mov
xchg
inc
pop
movb
pusha
jns
mov
mov
packssdw
and
iret
cmp
mov
sbbb
lahf
pop
lods
mov
stos
out
and
popl
cmp
fcoms
add
jl
jmp
bound
sti
jmp
dec
cmpsb
pop
lds
dec
jns
and
das
ret
dec
sbbl
nop
push
and
xchg
pop
rolb
cwtl
ds
xchg
cmc
je
ret
mov
mov
jnp
xchg
repnz
ljmp
sti
loopne
arpl
aaa
ja
fisubl
sahf
jp
add
lahf
xor
mov
jg
arpl
and
test
mov
into
pop
lcall
sbb
sahf
lea
rcll
cwtl
jmp
push
icebp
jp
loopne
inc
mov
imul
cld
incb
cmp
inc
adc
jbe
and
pop
lods
xchg
ljmp
xchg
jo
scas
cld
mov
dec
and
aam
jb
or
and
call
lods
mov
cli
push
es
insl
jmp
cmp
outsb
mov
pop
rorb
cmp
jp
inc
sarb
js
insb
sub
push
add
push
push
les
cltd
lahf
out
dec
dec
imul
lods
xor
lret
divb
mov
push
mov
scas
test
dec
popf
adc
push
cwtl
testb
mov
arpl
sub
arpl
das
int
les
sub
dec
out
pusha
sub
int
dec
dec
xchg
sarl
in
ret
cld
inc
or
out
shlb
xorb
rcrb
lock
jmp
pop
cltd
pop
arpl
adc
push
inc
add
sahf
lret
sbb
outsl
dec
sub
lods
xchg
jns
pop
sbb
test
jno
and
inc
fwait
lret
aad
andl
pop
push
push
pop
std
movsb
fisubl
aas
pusha
push
push
js
sub
bound
das
push
ret
push
push
int3
jo
jbe
sub
fmull
mov
or
mov
push
pop
jne
fdivrl
push
lds
and
movsbl
out
enter
rcl
clc
aas
inc
sub
lea
xchg
add
inc
mov
pop
jo
push
fstps
shll
mov
test
pop
dec
dec
es
push
adc
and
aam
push
lea
and
xchg
mov
ds
jbe
insb
jp
je
adc
lds
xlat
sub
aad
fbstp
es
cli
xchg
jae
stos
sub
inc
pop
push
iret
inc
aad
jmp
or
addb
arpl
sub
sub
xchg
test
lock
in
xor
cs
movsb
repnz
jecxz
push
mov
xor
jb
pop
cbtw
gs
mov
stc
sti
sarl
cmc
dec
cwtl
cwtl
jo
ljmp
cmpsb
test
lahf
ror
push
xor
sub
sahf
add
xchg
xchg
adc
stc
jmp
inc
daa
cmp
xor
mov
cwtl
les
jae
icebp
pop
dec
mov
xor
cmp
jb
xchg
jp
packsswb
icebp
xchg
lcall
cmpl
je
dec
pand
mov
dec
xchg
dec
lock
jne
cmpl
xchg
notb
out
cmp
mov
imul
div
sub
out
add
pop
pop
enter
outsl
mov
mov
repz
insb
push
popf
out
aad
inc
insb
or
aaa
push
xor
fimuls
mov
insb
cs
in
lahf
lahf
jmp
cmp
sub
loopne
int3
pop
imul
mov
lods
out
and
push
mov
mov
jge
fidivrl
jo
cmpsb
clc
rcrb
mov
mov
mov
and
sbb
mov
aam
test
or
imul
scas
jecxz
cmp
lods
test
cmpsl
push
cmp
scas
sub
subb
sub
cld
push
mov
adc
sub
test
cmp
cli
or
stos
xchg
lods
sub
and
insb
sub
mov
mov
daa
inc
pop
ss
repz
add
sbb
push
mov
ret
sub
or
pop
movsb
inc
lds
push
out
aad
inc
in
out
arpl
rolb
mov
jno
mov
arpl
testl
out
and
lds
int
dec
js
loope
out
pmulhw
ja
not
and
fdivrp
cmp
adc
cli
dec
arpl
sub
sub
sbb
jbe
add
test
sarw
mov
ror
xchg
xlat
out
mov
or
aas
dec
push
cmp
mov
bound
popa
push
push
xor
icebp
jmp
ljmp
ds
ljmp
push
mov
adc
mov
shlb
sbb
popa
lock
and
cmp
shrb
mov
push
cs
pop
cld
sub
jecxz
jmp
cwtl
cld
pop
dec
xor
jns
icebp
mov
xchg
outsl
mov
adc
dec
daa
pusha
jecxz
pop
bound
fimull
cmc
test
mov
leave
xor
ja
or
mov
mov
test
xor
addr16
cmc
jl
jge
mov
outsb
mov
cli
sub
sbb
xchg
xchg
xchg
bound
jbe
push
push
sub
ss
das
ds
aad
and
sub
adc
and
stos
arpl
arpl
dec
jl
fsubr
repz
jle
dec
xor
stc
jnp
pop
fs
insl
pushf
stos
sbb
dec
pop
in
xchg
push
pop
out
cltd
mov
jmp
jp
arpl
jns
sahf
jl
pusha
mov
sub
or
fwait
mov
int3
dec
ja
and
out
or
cmp
sahf
pop
out
push
cmp
mov
pop
add
sti
dec
and
cmpsl
mov
fwait
xorl
mov
into
mov
xor
das
add
push
pop
pop
and
add
rcrb
mov
xchg
ss
sbb
xchg
or
popa
ds
lock
sub
xchg
cmp
test
mov
cmp
push
es
pop
shll
jg
scas
mov
lods
cmp
les
je
sahf
adc
cltd
jmp
fsubrl
iret
out
jecxz
das
xchg
mov
sbbl
mov
movsl
xlat
ret
negb
sti
cld
cmpb
dec
std
lods
lods
inc
dec
mov
pop
and
xor
sahf
dec
pop
test
imul
add
rcr
lret
roll
jne
jmp
inc
je
mov
push
inc
outsb
in
sar
in
data16
loop
gs
fbstp
xrelease
xor
mov
inc
mov
cs
push
sbb
cmpsb
repz
add
and
add
cli
pop
or
out
push
xchg
divl
dec
das
sub
inc
xchg
je
mov
mov
mov
movsb
test
mov
pop
adc
stos
dec
mov
bound
xchg
mov
mov
cmp
or
cwtl
jmp
dec
push
pop
pop
frstor
das
pop
jbe
movsb
out
inc
pop
cmpb
sbb
xchg
jo
stc
and
pop
repnz
fiadds
sti
movsl
aad
push
imul
push
sub
aad
stos
mov
sbb
mov
insl
jl
push
cmp
sub
mov
jb
movsb
add
sbb
lret
xchg
arpl
aas
das
adc
mov
push
imul
out
repz
stc
loope
sub
fwait
mov
adc
sbb
mov
and
movsb
gs
pop
sbb
test
arpl
jne
fimull
pop
pushf
xor
pop
into
aas
and
hlt
and
filds
cmpb
pop
push
add
sub
movsb
es
add
data16
jno
sti
aas
cmpsb
pop
pop
pushf
repnz
repnz
xorl
pop
cltd
xor
outsb
lcall
pop
mov
sarb
mov
mov
xchg
pop
aad
push
mov
leave
jnp
frstor
sahf
xchg
arpl
mov
sti
dec
fwait
fwait
into
call
jg
add
jecxz
mov
cli
jns
jnp
mov
push
add
sub
and
je
xchg
cmpl
push
fldenv
dec
out
jl
xor
sub
aaa
lcall
pop
aaa
mov
add
aas
jle
inc
sbb
push
jno
scas
ss
mov
insb
sub
jae
js
enter
or
sbb
pop
push
std
shlb
movsl
pop
pop
pop
sub
lcall
mov
xchg
add
scas
jecxz
add
mov
fcomip
jbe
or
lret
mov
int
hlt
lcall
ret
inc
push
and
repz
ret
pop
cmpsb
test
lret
cmp
jno
push
imul
fsubr
sbbb
faddl
scas
aas
shlb
add
add
and
fs
rorb
xor
fimull
ret
lret
rcrl
leave
jnp
lcall
adc
lret
fwait
jb
aam
lahf
mov
in
daa
insl
adc
and
lods
sbb
sahf
mov
sbb
push
mov
ja
sbb
push
cmp
mov
mov
movsb
inc
push
pop
adc
and
inc
add
nop
mov
subb
sbb
xor
sbb
add
push
sbb
xorl
mov
and
add
jmp
out
out
movsb
aam
pop
dec
ret
inc
stos
push
in
dec
dec
pop
add
fisttpl
inc
add
adc
popa
adc
ss
popf
mov
ror
pop
sbb
add
add
shll
inc
loop
outsl
sbb
jae
cli
leave
stc
jg
fldl2t
jg
iret
adc
jp
add
mov
popf
fldt
jmp
inc
pop
adc
pop
pop
xor
xor
call
out
xchg
inc
sub
fadd
cld
and
ljmp
adc
cli
adc
mov
jl
inc
pop
dec
mov
mov
cmp
lods
sbb
out
or
fs
in
aaa
xlat
vmovsd
or
sbb
fstpl
jecxz
imul
lock
add
adc
add
and
sbb
notb
xchg
dec
mov
and
in
mov
out
mov
in
aas
sub
cmp
xchg
fcoms
jnp
xlat
inc
js
inc
aaa
sarb
xchg
mov
cmc
or
xor
add
push
roll
in
lret
fwait
cmp
adc
cli
frstor
jne,pt
mov
pop
fldl
enter
dec
out
stos
out
add
iret
popa
add
fisttps
je
or
test
stos
popf
fstpl
or
push
or
subb
ja
mov
xor
insb
icebp
ss
pushf
mov
xlat
mov
aam
rcpps
fidivrl
into
scas
shlb
aam
rcll
mov
xchg
lea
fstl
cmp
pop
cmp
shl
cli
mov
ss
rolb
in
aad
pop
inc
push
mov
dec
xchg
cmp
imul
mov
enter
gs
fidivs
sbb
ret
or
mov
push
inc
sbb
imul
js
push
jae
xor
mov
jmp
add
xchg
lret
cmc
dec
pop
sub
push
mov
adc
sar
out
sti
fisubrl
les
and
mov
shrb
jno
cmpb
popa
or
jbe
jle
in
rcll
lret
lea
daa
popa
repnz
jle
jb
ja
or
xchg
dec
jne
ret
lods
sar
sbb
andl
lret
test
lcall
jno
cmp
movsl
or
dec
nop
mov
add
icebp
testl
fidivl
sub
imul
mov
call
add
pop
adc
fdivs
push
jp
and
adc
push
mov
push
xlat
jg
cwtl
lcall
les
insb
cmp
in
repnz
in
push
mov
sti
xor
dec
aad
and
hlt
inc
out
mov
jns
les
fmull
mov
mov
dec
jl
int
mov
ss
push
shll
xchg
test
jae
out
insb
and
repz
mov
pop
dec
rolb
and
insl
jle
and
outsb
jo
mov
sbb
test
notb
in
jne
adc
mov
adc
out
xor
pop
sub
jl
pop
pop
rcll
out
ljmp
out
imul
cld
mov
jns
mov
or
sub
add
mov
mov
enter
rcr
and
sbb
add
cmc
ret
push
leave
cmpsb
xchg
lds
add
cltd
ljmp
or
and
and
sub
mov
sub
repz
sbb
testl
adc
shll
pop
out
popl
xor
sbb
ret
in
shl
lods
push
push
or
xchg
mov
fwait
test
dec
call
push
ret
ficoms
push
pop
dec
mov
je
dec
and
jge
mov
and
ret
shlb
mov
mov
rcrl
mov
pop
add
xchg
cmc
push
ret
xchg
iret
out
xchg
addr16
push
pop
popa
das
insl
popf
sub
and
scas
orl
push
sub
mov
jne
idivb
lahf
jg
sahf
loope
jl
aam
es
in
mov
imul
popa
fidivl
adc
mov
push
push
notb
daa
mov
cwtl
loop
jbe
jl
xchg
pop
sub
xchg
mov
and
push
and
enter
mov
aam
imul
mov
cltd
sbb
mov
xchg
sub
inc
xchg
jno
mov
sbb
mov
fisubs
jmp
adc
sbb
std
mov
add
aaa
mov
imul
push
mov
sub
or
fcmovne
andl
stc
pop
fldenv
mov
imul
cmp
enter
subl
inc
pushf
xchg
clc
and
mov
dec
cli
stos
int3
mov
addb
pop
push
dec
sbb
cmp
insl
lret
sub
xchg
or
push
add
pop
adcb
bound
nop
sub
add
push
mov
and
lods
cmp
stc
int
arpl
es
xchg
rcrb
out
clc
adcl
jmp
dec
ret
sbbb
outsl
sbb
push
fwait
sti
lahf
scas
outsb
mov
int3
inc
es
mov
sbb
cmp
iret
popa
or
arpl
mov
jo
clc
out
data16
cmp
jmp
push
mov
cmc
cld
jge
and
xorl
adc
jbe
dec
hlt
fistps
cwtl
and
insb
inc
cmp
push
in
pop
mov
push
cmpb
xchg
push
push
lods
jo
pop
sti
mov
sbb
adc
dec
sbb
fistl
cmp
movsl
pop
mulb
xor
sarb
mov
xchg
mov
ret
test
dec
push
inc
jmp
add
nop
shlb
pushl
or
mov
and
cld
inc
sarl
repz
test
jb
mov
mov
adc
aam
mov
pop
xchg
test
insb
dec
and
pop
fcmovnbe
lret
aas
repz
addr16
cltd
rcl
cmc
clc
mov
and
scas
push
neg
cmp
sub
sbb
enter
outsb
dec
xlat
and
sub
add
popa
mov
add
insl
mov
lahf
xor
shl
xchg
scas
mov
out
pusha
push
jae
sub
cmp
mov
or
das
pop
jg
cmc
cltd
pop
sub
cmpsl
jbe
adc
jmp
xchg
loope
stos
add
inc
loop
or
lock
cld
push
inc
add
call
push
sub
call
mov
lcall
sbb
dec
sti
push
jbe
aam
ficompl
inc
ja
repz
call
mov
fildll
mov
ret
mov
loope
aad
je
cmpsb
js
cmpsb
xchg
mov
push
jle
inc
aaa
fcoml
icebp
jp
dec
or
inc
idivl
adc
insb
andb
pushf
xorb
dec
pop
mov
dec
add
mov
or
cmp
inc
jmp
sahf
insl
cmpsb
xchg
fs
and
popa
mov
or
jnp
cli
and
in
dec
cvtps2pi
clc
adc
cmovae
jns
mov
mov
jo
mov
xor
adc
mov
cltd
xor
cmp
fnsave
xchg
lods
insl
jmp
imul
sub
setae
scas
push
aam
sbb
mov
aaa
adc
xchg
in
in
and
ss
xor
pop
adc
not
sti
pop
iret
mov
mov
cltd
and
pop
xor
ja
sbb
cmp
push
in
ret
or
jbe
adc
popf
cmp
mov
dec
stos
add
inc
sbb
xor
lret
mov
jg
sbbl
xchg
lods
out
fildll
inc
or
mov
jo
mov
add
pop
les
loopne
lock
mov
mov
mov
mov
cmpsl
call
cmp
sbb
sbb
mov
xchg
push
mov
sbb
mov
jno
jnp
and
push
push
fisubrl
xchg
mov
imul
jl
nop
or
aad
aam
lret
mov
mov
adc
fs
mov
and
adc
ds
adc
outsl
mov
push
cmp
aaa
jmp
pop
sbb
xchg
divb
pop
in
out
outsl
inc
rclb
scas
sub
fs
enter
mov
aam
in
cmp
in
sub
push
xchg
add
lods
cmp
ret
out
xor
jmp
cvttps2pi
sub
in
ret
es
sub
inc
leave
stos
jmp
or
shrb
testl
rcl
xchg
xchg
pop
jae
popa
jp
jl
cmpsl
mov
jns
clc
outsb
jo
jns
mov
xchg
push
gs
insl
xchg
mov
and
cs
loopne
sbb
xor
or
jge
cmp
cld
mov
mov
jle
cmp
fwait
xchg
hlt
cltd
inc
adc
in
imul
jp
aam
mov
mov
pop
cltd
repz
ret
jbe
jecxz
pusha
stos
ljmp
ret
adc
pop
das
std
scas
adc
jge
mov
push
and
cli
jns
fiadds
pop
jns
aam
shr
mov
es
inc
push
jge
sub
adc
sbbb
mov
in
jne
aam
add
loop
ficompl
mov
sbb
xor
xchg
mul
mov
cmp
adc
fs
fwait
cmp
out
xchg
stos
inc
jp
pop
dec
clc
pop
fcmovbe
insb
fiadds
cltd
inc
hlt
xor
or
inc
mov
cmc
inc
or
or
mov
ret
pop
mov
push
fsts
dec
pop
and
xchg
add
lods
inc
or
mov
inc
pop
push
call
jp
movsb
inc
outsl
xchg
xchg
inc
out
bound
mov
jo
xor
popf
pop
fbstp
test
sbb
arpl
pop
and
cli
add
punpcklwd
lcall
movsl
sbb
and
in
popa
in
jbe
lret
sub
into
stos
cld
xor
int
xor
add
or
or
movsb
cmp
cmp
inc
sarb
adc
mov
mov
adc
out
test
mul
mov
cmp
xchg
rol
ja
jbe
lods
fbstp
gs
lret
pop
xchg
xchg
aaa
sbb
and
adc
rol
popf
jbe
pop
jge
dec
outsl
mov
fwait
sbb
stos
cwtl
mov
div
cld
mov
push
lds
xchg
icebp
dec
fmull
sbb
cmpb
mov
loop
imul
dec
sbb
and
lcall
dec
pop
xchg
in
lret
sahf
inc
cmp
test
lea
xor
pop
xchg
popf
add
dec
inc
dec
add
push
loop
clc
in
dec
inc
fnstenv
ja
nop
push
movsb
fisubrl
lea
xor
pop
sbb
fldcw
sti
fwait
test
mov
jg
pop
cmpsb
xorl
inc
pop
mov
xchg
mov
les
xchg
and
data16
or
mov
ret
outsb
push
sub
pushf
ret
adc
stos
mov
scas
sbb
sub
insl
sub
xchg
xor
and
xor
pop
int
sbb
mov
test
mov
mov
adc
mov
jp
leave
cs
fs
fstpl
ds
imul
mov
pop
xchg
sub
and
cmp
jmp
dec
inc
pop
jbe
insl
xchg
pop
mov
setnp
adc
and
iret
xor
bound
xchg
pop
xor
jb
dec
jne
test
rorl
jmp
dec
out
pusha
pusha
leave
dec
xor
and
leave
sbb
cli
mov
fimuls
testl
jl
outsl
xchg
sbb
bound
push
xor
shrb
cmpb
mov
mov
repz
mov
add
sarl
shrb
popa
shl
jno
fs
fsubrl
push
aaa
inc
daa
sub
test
int3
jns
int3
out
or
pop
mov
sub
fmuls
mov
mov
mov
pop
pop
cltd
daa
dec
ja
into
insl
lods
and
dec
cs
js
pop
movl
sarb
fildll
xchg
stos
push
shll
sar
push
add
or
in
js
mov
cltd
loope
cmp
mov
outsb
inc
mov
test
mov
push
lock
loopne
and
and
xor
pop
or
or
pusha
stos
leave
mov
cmp
sbb
das
std
add
pop
mov
jb
push
fimuls
cmc
imul
lods
push
les
shrb
roll
and
ds
inc
out
or
shrl
movsl
xchg
cwtl
cmpsb
dec
mov
cmpsl
lea
sub
dec
fbld
pop
xlat
jne
aad
adc
sbb
inc
cmp
sub
pop
jmp
nop
shl
addl
sbb
or
into
call
cli
lock
inc
xor
jge
fidivrl
movsl
sbbb
test
add
fs
xchg
fwait
sub
sti
insl
and
addl
popf
aas
shl
mov
call
cmp
xor
flds
fdivrs
cmp
inc
lods
add
adc
jb
ret
test
scas
jbe
clc
lret
gs
xchg
nop
or
insb
adc
int
in
int3
cmp
jb
push
inc
cmpsl
mov
dec
fndisi(8087
mov
cmp
lds
cmp
ror
frstor
mov
mov
push
int
ljmp
xchg
sub
in
mov
or
cmp
faddl
loopne
pusha
sub
lcall
fdivs
imul
bound
push
xchg
ss
les
cmp
sbb
ljmp
mov
movsl
daa
cmpsb
mov
decb
push
xor
or
pop
lcall
call
jmp
push
sbb
in
stos
addr16
int
clc
jb
xlat
hlt
inc
sarl
dec
bound
cmpsl
sbb
mov
popf
adc
mov
mov
cmp
roll
lods
aam
mov
or
adc
ret
cmp
lods
pop
cmp
mov
dec
push
mov
add
add
fimull
hlt
ss
push
mov
aam
xor
jno
jl
dec
data16
mov
lods
int3
xchg
fs
cltd
cmp
mov
jbe
push
mov
addr16
cmp
xor
clc
imul
fwait
and
lea
lods
xchg
inc
adc
gs
add
dec
sbb
mov
jbe
mov
dec
adc
aad
and
lds
add
cmp
test
cmc
pusha
sti
lahf
jge
shll
nop
pop
adc
xor
daa
cmpb
ret
leave
push
xchg
daa
jne
aad
mov
jns
popf
in
cmpsb
adcl
cmp
mov
mov
sbb
and
mov
fiadds
pop
sbb
jo
push
out
mov
stc
notl
dec
add
mov
addr16
mov
das
xor
dec
cltd
aam
outsb
movsb
out
enter
scas
pop
inc
lods
sti
popa
and
aaa
adc
scas
xchg
ljmp
xor
sahf
ss
inc
call
and
fwait
inc
in
mov
xchg
push
jnp
inc
xchg
adc
xchg
pusha
pinsrw
sub
cwtl
movsb
ficoms
stc
jnp
clc
xlat
lret
dec
or
cmpsl
paddw
cwtl
aam
int
push
les
test
sbb
into
inc
fs
fistl
push
in
aas
lds
inc
int
jo
sbb
adc
mov
mov
mov
in
sbb
pop
xchg
leave
pop
inc
cwtl
sbb
jecxz
inc
aam
mov
pop
scas
or
sub
dec
and
dec
pmuludq
jnp
sbb
or
aas
cmp
push
push
inc
pop
xchg
aad
iret
mov
mov
add
fcmove
inc
jnp
fbstp
jl
aam
nop
iret
lcall
cmp
es
dec
jmp
mov
enter
inc
or
movsl
jb
hlt
mov
mov
and
ja
shrb
arpl
inc
push
daa
das
pop
inc
popa
cmpsb
or
aas
mov
xchg
mov
cmp
enter
cld
xor
jg
push
popa
out
dec
dec
sti
mov
dec
push
jno
sub
int3
mov
aad
cmp
mov
cli
mov
sub
cmpsl
inc
mov
mov
and
out
sub
cmp
xor
or
fyl2xp1
pop
outsb
push
cmp
popa
pop
jne
mov
and
int3
xor
scas
cmpb
mov
iret
and
insb
test
aaa
xchg
pop
mov
std
test
push
rorl
add
sub
mov
inc
xchg
out
sub
dec
mov
lea
add
rep
push
xchg
sbb
adc
add
adc
movsl
pop
cmpsl
lret
imull
xchg
pop
std
lret
or
adc
ss
popf
jne
testb
pusha
das
dec
in
and
or
das
fimull
hlt
ret
or
lret
repnz
jecxz
int
shl
adc
adc
jp
xor
call
ficoml
jp
adc
jb
in
ds
jne
pop
insl
pop
mov
ds
and
xchg
lds
xchg
push
push
inc
in
cmp
cmp
jns
or
push
out
icebp
cmp
mov
test
popa
mov
xor
imul
jb
mov
jmp
jae
dec
pop
adc
push
or
xlat
push
or
sbb
cmp
and
mov
xor
imul
repz
adc
or
adc
cvtps2pd
popa
nop
testl
and
sbb
shlb
hlt
aad
test
fwait
cmp
jmp
mov
push
cmp
sti
mov
ds
or
cmpsb
and
pop
fwait
stc
dec
in
data16
stc
cmc
xchg
cmp
pop
cmp
inc
cmp
ficoms
leave
pusha
in
js
jb
in
inc
lret
scas
test
cmp
in
mov
and
or
cltd
sbb
cmp
leave
add
lret
mov
pop
xchg
mov
lds
int3
mov
pop
test
xchg
stc
aas
sub
push
jg
call
in
jns
jo
stos
adc
mov
adc
mov
aad
or
xchg
xchg
out
add
xor
into
lock
rcrb
lret
stos
fldt
inc
xchg
repz
in
in
enter
xchg
xchg
out
inc
in
stos
adc
iret
xchg
in
add
sbb
inc
out
js
movsl
mov
pop
pop
or
pusha
stos
or
and
scas
jns
adc
pop
scas
xchg
mov
push
test
adc
enter
enter
jno
mov
pop
lcall
js
in
add
cmpsb
xchg
mov
push
pop
divl
add
cs
loope
push
xchg
out
mov
xchg
mov
test
mov
and
sub
ret
jne
inc
test
lret
push
xchg
in
aas
in
jl
jb
jge
sbb
cmp
flds
ret
call
add
test
and
xchg
pusha
lods
push
push
mov
inc
add
imul
mov
and
jle
int
sbb
addl
sbb
push
ret
inc
push
mov
addl
sbb
lret
push
inc
pushf
mov
cmpsl
push
sarb
fbstp
and
xor
das
mov
enter
ss
add
mov
imul
xcrypt-cfb
cmpsl
mov
sbb
popl
das
fildll
cmpsb
xchg
pop
rsqrtps
cltd
test
mov
ljmp
sbb
and
add
ja
mov
into
cmp
xchg
inc
out
pushf
fnstenv
inc
imul
xor
stos
push
stc
in
pusha
clc
adc
bound
lds
icebp
repz
imul
scas
out
xchg
scas
mov
adc
dec
daa
mov
call
mov
lret
push
xchg
lcall
dec
and
xchg
in
shrb
add
shll
sub
dec
movsl
shrb
adc
jno
pop
jne
xchg
xchg
lds
ljmp
xlat
cmp
dec
add
add
test
push
sti
out
mov
pop
push
xchg
mov
or
jnp
or
pop
lock
lods
iret
inc
bound
jmp
outsl
andl
scas
jg
jecxz
insl
sahf
sub
dec
outsl
mov
pop
sub
jge
mov
test
cmp
ljmpw
xchg
ljmp
inc
dec
test
xorl
mov
sbb
mov
iret
and
out
in
push
push
push
or
jns
adc
addr16
loopne
pop
jbe
xorb
mov
adc
xchg
mov
imul
les
stc
add
push
add
in
and
not
mov
nop
cli
mov
into
xchg
out
cmp
lret
push
push
std
xchg
xor
adc
push
insb
sarb
outsl
cmp
mov
in
js
mov
ret
fnsave
add
push
popa
push
xchg
jae
rol
or
xchg
xchg
aam
pusha
fsubl
adc
jno
adc
sub
or
shl
jp
mov
scas
push
inc
cmp
pop
mov
stos
in
or
xchg
imul
add
xchg
bound
jle
or
jns
cli
std
stos
sub
pop
pushf
stc
or
mov
divb
add
ds
jmp
lahf
inc
dec
andl
push
adc
pop
popa
stc
xor
mov
aas
movlps
mov
fldl
movsb
xor
and
add
pop
and
out
cmp
xchg
std
clc
mov
mov
nop
in
jo
test
or
rolb
mov
jmp
push
movl
das
jno
pop
popa
in
lea
push
sub
shr
pop
and
cmc
pusha
xchg
insb
mov
pop
lahf
xlat
jb
insl
jge
xor
clc
jg
aaa
dec
push
cwtl
add
mov
fimull
lahf
cs
mov
mov
sbb
or
xor
jge
cmp
movsl
stc
push
scas
pop
adc
and
xlat
sarb
cld
sub
cmp
pop
mov
cmp
leave
cmp
adc
daa
bound
cmp
rol
pop
inc
pop
dec
in
cmpb
cmp
push
adc
and
add
or
push
stos
push
cmpsl
adc
jo
outsb
xchg
ja
stos
adc
into
cmp
mov
dec
movsl
aam
test
in
xchg
dec
jle
das
lds
shll
jno
leave
xor
test
mov
movsb
and
repnz
pop
pop
cmp
cmc
inc
out
imul
cmp
shr
mov
or
jno
ljmp
sub
pop
push
mov
je
cmp
mulb
push
test
mov
je
jne
fs
sub
add
mov
mov
adc
cmp
repz
mov
stc
lcall
pop
decl
std
aad
push
pop
mov
scas
push
sahf
inc
xchg
sub
xchg
or
pushf
aad
add
ret
fsubrp
leave
in
lret
sub
jo
mov
cwtl
jp
incb
mov
pop
pusha
ljmp
dec
loop
push
push
mov
mov
jmp
out
hlt
add
xchg
push
inc
stc
cmp
pop
inc
dec
in
pop
dec
movsl
stos
shrb
rcr
xchg
or
hlt
ljmp
sub
adc
lea
daa
out
mov
cmpsl
repz
jne
push
test
fisttpll
xor
subb
jmp
pop
rsm
test
jno
dec
pop
ficompl
or
add
stos
call
sbbl
mov
dec
ret
out
mov
xchg
mov
stos
mov
fs
jb
stc
jp
xchg
cli
stc
imul
jns
shll
mov
push
fsubrp
loope
inc
lret
fmuls
fdivp
jnp
pop
lcall
add
jecxz
mov
sbbb
icebp
jl
cmp
inc
scas
loop
enter
lods
mov
fcmovnbe
xor
divl
mov
xchg
loopne
fs
fmull
push
adc
data16
sbb
outsb
fmuls
ret
or
mov
mov
xchg
icebp
mov
sbb
inc
push
xchg
test
xchg
mov
and
jno
lea
xlat
mov
mov
push
sub
or
cmp
fsubrs
mov
sbb
clc
into
jmp
mov
mov
xchg
cmp
popl
dec
aad
fidivrs
dec
pop
xorl
call
and
mov
out
cmpsb
pop
mov
xchg
pop
mov
test
loopne
incb
pop
and
lea
cmpb
insl
add
mov
add
jl
pusha
cs
jns
fs
pop
leave
xchg
cmpsl
mov
push
and
inc
adc
icebp
mov
cld
mov
fsub
int
stos
xchg
xchg
mov
jmp
aam
sti
into
pop
mov
mov
inc
push
test
sub
push
dec
cmp
idiv
adc
mov
aaa
fstpt
fmuls
cmp
pusha
dec
xchg
push
pop
dec
push
xor
das
daa
mov
cs
negl
cld
xchg
arpl
sub
dec
adc
mov
add
adc
cmc
scas
movsl
es
aas
cmpsl
pusha
xchg
and
lahf
inc
cs
pop
jbe
mov
mov
mov
sub
insl
add
inc
pop
dec
cmpsb
nop
cmp
clc
xlat
jb
lret
cmpl
xchg
movsb
test
nop
cltd
sbb
xor
aaa
jmp
cmp
int
mov
push
pop
mov
push
loop
call
mov
push
and
mov
data16
push
jb
push
ss
mov
jb
push
jge
into
add
scas
popf
sub
sarb
mov
out
add
or
int3
das
pusha
jae
sbb
push
lock
outsb
or
fwait
adc
mov
rolb
imul
test
push
jg
mov
aaa
jmp
or
mov
sub
add
jmp
fldenv
mov
cwtl
jecxz
subl
mov
lahf
push
mov
xorb
xor
fst
lret
jp
push
ret
jg
push
jecxz
inc
push
incb
xchg
mov
mov
bound
int
lods
xor
inc
cmc
or
sti
add
dec
cwtl
mov
in
sbb
jo
mov
xor
sahf
pusha
inc
xor
je
loope
push
or
xor
inc
mov
in
dec
sbb
or
xchg
jmp
push
in
push
insl
aam
jnp
add
stc
cmpsb
fwait
movsb
xchg
leave
push
je
mov
and
mov
xor
cmp
hlt
jp
jmp
pop
mov
and
xchg
sarb
ret
lds
mov
push
and
dec
xchg
pop
mov
lret
pop
cmp
out
push
lret
xchg
dec
xchg
mov
pop
cld
clc
fdivrl
pop
jg
mov
enter
ret
and
sbb
dec
test
add
test
shll
aad
icebp
das
jno
ret
fsubrs
xchg
jbe
ss
into
mov
push
or
rcll
push
test
cli
out
push
lods
stos
and
cmp
pop
mov
xchg
outsl
push
inc
xor
test
clc
jns
mov
or
andl
lods
cmp
lea
and
movsl
jae
mov
fwait
cmpsl
cmp
inc
mov
push
push
dec
pop
push
fnstenv
adc
sbb
push
cmp
insl
push
das
lcall
cwtl
adc
xchg
sbb
rcrl
mov
cmp
sub
cmpsl
xchg
mov
dec
incl
int3
data16
cmc
mov
inc
add
mov
and
dec
cmp
or
loope
fldcw
sar
das
mov
in
jl
pop
aad
loope
add
xor
mov
test
jmp
or
and
popf
mov
pusha
and
jg
stc
push
and
rcll
cs
xchg
imul
test
xchg
pusha
js
adc
shlb
mov
and
or
push
ja
lret
xchg
repz
xlat
push
mov
test
stc
xchg
xchg
cwtl
add
ds
hlt
push
rolb
jp
cltd
shr
push
xchg
adcl
xchg
mov
pop
in
dec
scas
shrl
add
sti
iret
and
mov
mov
jle
lods
jge
mov
adc
das
mov
fiaddl
jns
cwtl
fs
mov
sbb
sbb
rcrb
out
in
mov
push
sbb
adc
and
pop
push
sub
xchg
data16
xchg
outsl
sub
sbb
pop
xor
sbb
inc
rcll
popf
mov
movsl
mov
or
popf
clc
mov
or
mov
jb
bound
outsl
je
pop
lock
pop
scas
xor
add
hlt
test
mov
inc
cmp
stc
push
leave
iret
ficoml
movsl
insb
into
pop
cmp
data16
fwait
sub
mov
jae
mov
pop
ficoml
sbb
mov
xlat
std
sub
mov
insl
andl
stos
cmp
ljmp
aam
add
cmp
jp
jle
aaa
dec
dec
aad
sbb
push
repnz
lods
jns
loope
or
cmpsl
lcall
loopne
addr16
sar
jecxz
rcl
cltd
mov
xorl
jecxz
lods
xor
fucomp
imul
ljmp
inc
push
dec
xor
out
fcoml
icebp
stos
sub
jns
sbb
lcall
adc
test
mov
mov
or
js
enter
cmpsl
rcrb
pop
push
push
notl
xor
negl
xor
jle
push
inc
leave
in
jecxz
mov
shrb
adc
mov
daa
xchg
xchg
std
cmpsl
in
push
xchg
test
push
xchg
lea
ljmp
or
aam
cmp
orb
and
jb
mov
mov
push
inc
outsb
mov
ret
and
jl
push
adc
imul
and
adc
cmp
mov
stc
dec
push
add
jge
fcoms
xchg
dec
push
pop
xor
cmp
jo
lods
push
or
and
arpl
cmp
push
lds
mov
mov
push
pop
pop
jnp
fcom
xchg
mov
fwait
insl
aas
lock
sbb
inc
fs
adc
int
gs
daa
jge
xor
imul
testb
nop
fs
dec
jnp
stos
arpl
cmp
cmp
mov
int3
adc
pop
out
inc
idivl
test
fsubrp
xor
pushf
in
adc
add
mov
pop
icebp
inc
adc
cwtl
or
and
dec
cmpsl
add
xor
sub
jns
lods
inc
clc
mov
push
scas
mov
dec
inc
pop
ss
cmpsb
inc
mov
not
push
insb
pop
test
cmp
js
xchg
pop
sub
mov
pop
and
adc
popl
jl
sar
orb
popa
adc
es
mov
cwtl
sub
and
push
pop
jl
imul
xorl
push
push
mov
frstor
adc
scas
jns
and
mov
icebp
rcl
fidivl
imul
call
ret
sub
push
mov
test
sub
dec
mov
pop
mov
xchg
xchg
ljmp
jmp
loope
jecxz
mov
dec
jo
add
stos
fdivrs
cwtl
sub
xchg
ret
or
es
push
out
test
jmp
push
dec
sub
jp
inc
add
pop
sub
mov
mov
ret
enter
loop
filds
fisubrs
repnz
cmp
cmpb
hlt
cmp
nop
add
cmpb
leave
jae
and
xchg
test
push
jmp
lea
mov
shrl
xorb
je
sbb
jbe
in
dec
xor
adc
ja
xchg
lret
sbb
xchg
out
or
ds
inc
add
jno
xor
jno
mov
loop
popa
js
cltd
adcl
negb
jo
push
cmp
popf
stc
std
xorl
imul
lods
in
sti
and
dec
pop
das
jmp
inc
pop
xchg
mov
jl
cmpsl
or
inc
dec
loope
add
or
bound
add
adc
popf
inc
out
jb
mov
xchg
sub
dec
ljmp
xchg
inc
mov
pop
popf
clc
xchg
or
cli
adc
daa
sahf
fidivs
xchg
sbb
xchg
cmp
mov
pop
popf
mov
out
xor
repnz
in
cmpsl
adc
add
pmuludq
aad
push
push
es
jl
inc
lods
repnz
adcb
sbb
cmp
imul
sbb
lcall
test
cmp
addl
es
sub
xchg
sti
inc
out
out
sarb
jns
clc
ds
cmp
ret
push
loop
xchg
dec
xchg
andl
xor
and
push
cltd
mov
sahf
movsl
in
add
sarl
add
bnd
add
jl
mov
push
ficompl
test
push
shlb
mov
outsl
iret
mov
or
aam
mov
int
push
adc
jb
sbb
imul
in
push
mov
jb
adc
add
cmp
add
pusha
outsb
jno
pop
sub
js
jns
sub
cli
push
cmp
icebp
push
les
arpl
notb
hlt
mov
daa
popf
mov
fcomi
cld
faddl
mov
dec
xor
xchg
push
daa
scas
push
push
and
rorb
clc
pop
das
xor
arpl
sahf
fxch
add
test
pop
xor
or
iret
sub
push
out
dec
adc
mov
push
xchg
jl
lea
out
sub
pop
cmc
pop
xlat
cltd
add
lods
mov
dec
ret
lret
pop
imul
lcall
jns
adc
mov
imul
jb
stc
in
xchg
out
stos
dec
mov
imul
cmc
repz
push
ficomps
xchg
pop
addr16
mov
int3
mov
xor
into
mull
inc
sbb
rorl
dec
in
addr16
pop
dec
mov
mov
sbb
hlt
les
divb
add
jmp
ret
ljmp
and
add
dec
mov
stos
xor
xor
nop
mov
data16
mov
ret
dec
dec
mov
pusha
negl
dec
aad
into
mov
adc
push
shrb
lock
in
insl
in
mov
mov
imul
and
subb
fldcw
and
adcb
popf
pop
sbb
mov
jmp
lcall
das
ret
stos
push
cmpsl
outsl
jo
cwtl
movsb
sub
jne
aad
pusha
mov
hlt
mov
mov
xlat
sub
ret
sti
dec
aas
sbb
icebp
test
repnz
popa
xor
outsb
lock
jp
rcrb
ja
cmpsb
out
popa
inc
movb
in
sub
orb
sbb
aam
cmp
mov
mov
aad
xchg
adc
jecxz
enter
shrl
sbb
xor
mov
in
add
push
cs
adcb
jp
mov
aas
push
adc
mov
mov
dec
jg
xchg
ss
pop
cmp
lret
or
mov
insl
scas
and
sbb
je
sbb
imul
jnp
sbb
mov
out
inc
aam
lea
adc
movsl
mov
sahf
leave
lret
bnd
or
insl
xchg
xchg
in
sub
mov
adc
sub
xor
rcl
dec
mov
mov
mov
mov
ljmp
dec
dec
add
dec
jg
scas
sub
pop
mov
add
push
pop
lea
cs
dec
ds
jg
inc
adc
stos
mov
lret
iret
das
push
cwtl
dec
cmpsl
mov
cmp
sarb
sbb
add
bound
xlat
pop
rorb
push
sub
adc
dec
fs
stos
or
sub
xchg
add
outsl
repz
jo
pusha
xchg
call
and
jo
pusha
cmc
add
sahf
sub
mov
jns
stos
nop
outsb
sub
jns
fdivrs
pusha
in
xor
call
fcoml
jo,pn
jb
sub
nop
xchg
add
js
in
into
movb
clc
shll
pop
lods
dec
mov
stos
clc
in
ret
cmpb
mov
xchg
dec
and
dec
inc
dec
in
xchg
xlat
cmp
mov
cltd
cmp
pusha
cmp
xchg
js
andl
mov
cmp
mov
iret
inc
cmpsb
rcrl
push
add
dec
into
loopne
pop
pop
cld
rcrb
push
pop
xor
hlt
jmp
rorb
aaa
cltd
adc
cmpsb
lods
or
add
sahf
mov
mov
mov
lock
jmp
mov
push
add
cli
dec
ret
scas
push
imul
mov
lret
xchg
popa
mov
xchg
out
cmpsb
test
and
fs
and
pop
inc
int3
test
mov
and
out
xor
aaa
add
push
subl
jle
cltd
bnd
ret
and
aaa
and
imul
jne
test
std
lcall
pop
ficoms
mov
push
ds
add
push
push
pop
and
dec
xor
popa
sub
lods
adc
lock
xchg
mov
push
inc
out
insl
pop
jne
add
call
mov
mov
jp
dec
les
jne
in
cmpsl
sar
xchg
les
mov
pop
mov
xor
icebp
fstps
inc
xorb
adc
repz
psubw
dec
ss
sub
or
lcall
pop
dec
pusha
scas
mov
out
dec
adcl
cmc
fdivrs
in
ret
xor
adc
fisubrs
mov
lds
xor
mov
or
test
aam
inc
arpl
dec
cs
push
hlt
shr
mov
fwait
ret
and
leave
mov
loop
into
sahf
fwait
test
pop
mov
jbe
xchg
fwait
addr16
in
movsb
dec
mov
push
dec
aam
decb
inc
popf
xor
mov
add
or
into
xlat
push
insl
fs
add
testl
sub
cmp
test
adc
int
push
cmp
sub
js
push
push
jecxz,pn
in
mov
sbb
lcall
inc
jbe,pn
pop
or
cmp
bound
fdivl
push
aas
mov
data16
adc
inc
add
cld
jns
pop
sbb
in
loop
xchg
call
mov
popa
adc
bound
adc
hlt
repz
mov
mov
insl
das
jecxz
loopne
out
jmp
cmp
sub
in
xor
push
jno
call
gs
mov
xor
popa
adc
mov
mov
xor
push
inc
repnz
lods
sub
andl
cmp
push
inc
daa
jge
movsb
push
xor
call
scas
rcrl
dec
out
push
add
lahf
mov
pop
inc
or
pop
or
fcmovb
adc
lcall
sub
pop
push
cltd
stos
pop
ljmp
ljmp
push
mov
mov
fldenv
mulb
loop
inc
mov
idivl
outsl
add
out
dec
jg
jg
ret
call
jp
add
inc
stc
mov
jae
sub
sbb
pop
fistpl
xorl
and
cmp
test
in
jnp
push
scas
push
in
cmp
lret
mov
mov
fs
mov
pop
and
vmwrite
jne
nop
or
cmp
test
cmc
movsb
jg
xor
std
cld
aaa
sahf
lds
out
enter
xor
xchg
jg
jae
dec
scas
cltd
sbb
test
xor
pop
push
jle
mov
dec
jo
adc
xchg
mov
cmc
sbb
mov
cmp
push
dec
xchg
sbb
pop
scas
enter
sbbl
mull
fwait
inc
flds
data16
add
xlat
rorb
pop
or
shl
aaa
lcall
inc
and
sbb
shlb
mov
adc
outsl
jmp
sub
sub
aas
cmp
in
loope
shrl
pop
mov
hlt
and
jge
push
nop
lock
std
scas
mov
pusha
sub
dec
push
add
inc
xchg
fistl
pop
push
roll
or
adcl
push
lock
push
pop
stos
and
push
mov
test
je
jb
icebp
in
pop
jae
fnstsw
mov
jo
mov
jbe
sbb
lods
insb
xlat
lahf
mov
insb
in
adc
mov
je
lds
ja
das
cmp
mov
mov
pop
and
test
hlt
dec
inc
mov
inc
iret
jb
jb
mov
shlb
mov
dec
std
push
and
mov
push
popa
popa
daa
dec
ret
jbe
insl
add
imul
inc
xor
lret
inc
push
enter
icebp
push
ds
fdivrs
pushf
adc
cmp
stos
idivl
ret
and
outsb
mov
test
std
mov
xlat
xor
and
push
scas
lret
mov
test
push
xchg
sub
in
push
pop
or
jp
cld
mov
lcall
push
loop
and
push
shrl
aam
and
lock
push
je
movsb
cwtl
add
rolb
insl
push
repnz
insb
pop
mov
mov
jge
adc
xor
fbstp
ror
icebp
inc
pop
popf
stos
iret
shr
js
movsb
adc
loop
pop
inc
xor
dec
lea
andb
pop
inc
xchg
mov
jb
adc
fistl
mov
sbb
xchg
mov
sti
sub
adc
mov
mov
cld
ljmp
pop
daa
mov
jge
imul
dec
aaa
aaa
xor
les
inc
push
mov
roll
cmp
pop
inc
adc
xchg
push
or
and
pusha
cmp
negl
jbe
mov
jae
fldcw
aad
inc
pop
xchg
ja
sti
dec
push
int
ljmp
jge
sbb
pop
xchg
into
sbbl
xor
fsubrs
and
scas
mov
mov
inc
add
mov
mov
lret
daa
andb
jg
inc
sub
add
push
inc
outsb
push
das
lahf
sub
sarb
push
xchg
or
xchg
and
push
out
jb
je
push
inc
roll
xchg
push
les
pusha
daa
out
jne
cmp
out
imul
dec
mov
loopne
pop
cmp
shl
add
das
xchg
adc
in
cmpsb
add
add
pop
aam
and
fwait
adc
fsts
gs
or
mov
cs
jge
roll
or
sahf
push
test
mov
frstor
negb
adcb
pop
imul
jbe
js
or
scas
icebp
cwtl
arpl
xchg
adc
aaa
arpl
and
mov
and
fildll
hlt
sub
jge
shll
fcomps
cmpsl
sbb
and
int
rorb
add
mov
mov
xor
aad
adc
popa
lahf
adc
adc
cmpsl
adc
adcl
mov
fwait
inc
in
push
shl
mov
imul
sbbl
test
int
jnp
jle
shlb
add
pop
sbb
gs
add
je
jne
xchg
in
dec
pop
pop
pushf
sub
fs
fsubs
leave
int
lods
negb
inc
repnz
mov
push
mov
jae
mov
movsb
xchg
pop
insl
addr16
arpl
clc
shl
jae
dec
stos
push
lcall
rolb
insl
mov
rorl
es
jb
mov
repnz
movsb
or
sub
jnp
xchg
push
lcall
pop
xchg
lds
fdiv
push
ds
cmc
outsl
jo
pop
div
jno
jnp
lea
or
and
cmp
add
push
pop
push
xchg
xchg
pop
sbb
push
jmp
xor
ss
in
in
sbb
push
mov
ja
out
push
cmpsb
sti
stc
mov
les
adc
pushf
loop
aas
add
mov
jbe
gs
popf
add
lret
xchg
push
scas
or
mov
les
mov
sub
sarl
fabs
dec
push
xchg
popf
sub
divl
inc
es
out
rcll
pop
arpl
scas
or
aas
adc
int
nop
mov
outsl
sbb
and
ja
xchg
dec
jle
mov
int3
xor
jge
dec
cmp
ja
mulb
xor
jns
xor
into
jne
xchg
ret
xchg
push
inc
jne
jne
aas
mov
sub
dec
pusha
or
rcrb
js
sub
sahf
aam
jle
xchg
push
mov
push
stos
pushf
movsl
push
arpl
aas
jbe
movl
ljmp
or
repz
xchg
adc
fnstcw
xorl
int
fstps
stos
mov
and
dec
loop
cmp
gs
jns
mov
xchg
jecxz
mov
and
pushf
test
stos
mov
mov
sbb
dec
shr
dec
int
push
mov
add
call
sbb
dec
rolb
sbb
mov
jb
or
xchg
dec
inc
or
add
test
xor
pop
ljmp
orb
sbb
out
cwtl
fcomps
sub
add
mov
xchg
cmp
popa
xor
push
hlt
fcoms
std
mov
push
fbstp
mov
fstl
sub
aaa
jnp
rcrb
mov
stc
popa
inc
or
and
pop
xor
jnp
push
pop
cltd
mov
xor
push
inc
addr16
mov
cmpsl
sbb
inc
fwait
jne
lock
cmpxchg
scas
pop
lcall
xor
fisttpl
sbb
bound
mov
adc
data16
out
inc
sub
jno
xor
cmp
xchg
push
fidivrl
jl
aaa
loope
ja
movq
mov
dec
pushf
adc
inc
lcall
inc
test
sub
shll
and
pop
jo
sahf
aas
xchg
cmp
and
mov
jb
icebp
jmp
or
sbb
inc
nop
sbb
popf
or
add
cltd
jbe
cli
into
sbb
lret
test
sub
out
xchg
mov
jo
inc
jmp
test
mov
push
add
push
loope
out
pop
test
fldenv
xlat
mov
push
inc
push
fisubrs
insb
jae
popf
arpl
push
imul
addb
or
ret
xor
les
std
xchg
es
cmp
and
push
cmpsb
sbb
jno
test
jbe
out
gs
mov
jb
iret
out
cltd
xlat
xor
mov
repz
mov
xlat
outsl
out
fcmovnbe
mov
ss
movsb
inc
je
add
ljmp
or
cmpsl
movsl
mov
and
mov
sub
mov
rorl
cmp
repnz
sub
jne
aad
mov
sbb
stos
xchg
pop
div
fdiv
cld
sbb
in
xlat
lar
pop
xchg
arpl
push
cmp
popf
pop
test
add
imul
cmp
daa
in
shlb
and
cmp
inc
scas
js
lret
outsb
sbb
rcll
jmp
movsb
xchg
lea
lods
inc
sub
jnp
xchg
clc
jl
stos
sbb
add
mov
sbb
fwait
popa
add
mov
addr16
mov
xchg
dec
sahf
xor
jge
aaa
jbe
push
orb
xchg
mov
bound
ljmp
jo
lods
cltd
leave
xor
dec
adc
sbb
push
ret
fisubs
test
cltd
mov
loope
repnz
pop
and
jo
and
push
out
in
pushf
adc
inc
addb
mov
pushf
nop
out
pop
mov
adc
jnp
pop
imul
aam
test
mov
insb
sarb
addr16
je
cmp
fstpl
aas
adc
sbb
pushf
pusha
jp
mov
cltd
in
jno
mov
jge
arpl
mov
arpl
lcall
push
pop
and
push
xchg
idiv
mov
addr16
push
lea
testb
pusha
addr16
mov
fwait
cmp
sbb
pop
push
lcall
adc
inc
or
loopne
mov
ret
xor
cmp
dec
pop
stos
push
sbb
outsb
repz
dec
push
or
mov
aas
or
adc
sub
stos
das
push
jae
sub
ss
mov
pop
daa
sub
add
and
fcoms
hlt
cmc
test
and
ja
aad
xor
lcall
sub
outsb
xchg
push
jmp
mov
scas
outsl
jl
xorl
int3
fs
adc
mov
sarb
push
mov
aad
xchg
adc
cmp
adc
sahf
fwait
push
mov
inc
aad
imul
out
xchg
in
mov
dec
pop
aam
sub
sahf
and
push
cli
cmc
inc
inc
pusha
ljmp
xor
mov
out
add
dec
or
jae
loope
pop
add
add
cwtl
jl
adc
cmp
cmpsl
pop
mov
lcall
sub
insl
inc
insb
xor
cwtl
xchg
shl
xchg
jo
lds
xor
push
cli
xchg
cli
mov
arpl
mov
stos
ret
call
cmpsb
test
dec
mov
cmp
int
jl
mov
enter
insl
in
push
aam
pusha
fmul
pop
xlat
sbb
pop
std
repnz
push
icebp
pop
pop
mov
div
jge
imul
push
inc
nop
into
and
lea
ret
arpl
das
mov
xchg
cmc
jmp
mov
pushf
add
cmp
cmp
mov
rcrl
cmpsb
mov
imul
cmp
add
fstpl
dec
lret
adc
fwait
sbb
sub
jne
testl
jno
and
sub
pop
dec
in
ds
pop
out
mov
cmp
std
push
shl
cmp
and
stos
inc
lods
repnz
int
icebp
pop
popf
pop
pop
movsb
xchg
call
stc
mov
ljmp
and
sub
mov
sub
push
cmc
testl
cld
daa
mov
aam
and
lret
mov
mov
mov
mov
and
inc
push
mov
pop
xlat
enter
mov
pop
xchg
jmp
loop
mov
hlt
loop
loop
sub
cli
movsb
jo
into
fwait
rcl
icebp
push
or
mov
jb
repz
sbb
push
stc
mov
add
inc
add
test
xchg
pop
cmp
sti
fistpl
jo
jne
cmp
ficompl
xchg
into
mov
mov
xor
push
fmul
mov
adc
mov
jle
test
fcoml
xor
imul
and
add
jae
push
lret
cmp
jp
cmp
loope
daa
mov
stos
mov
imul
sub
aam
or
sbb
cmp
mov
or
nop
loope
xchg
js
and
jno
mov
mov
xor
std
int
aas
cmp
xlat
mov
or
add
mov
out
bound
sbb
dec
lret
fwait
sub
adc
lods
inc
push
pop
mov
sbb
lods
insl
mov
popa
imul
ret
inc
mov
mov
faddl
filds
xchg
and
iret
cmpsb
bound
mov
fnstsw
adc
adc
xchg
mov
push
xchg
sbb
iret
testl
mov
das
test
imul
lods
push
cmp
pop
into
xor
int3
jmp
repz
cltd
jnp
mov
push
inc
pop
lahf
adc
pop
mov
lods
ds
and
fiaddl
jne
and
repz
lods
mov
pop
mov
loop
ret
pop
or
je
aam
inc
decl
dec
lret
enter
incb
rorl
mov
xchg
inc
insb
mov
push
xchg
movsl
xor
push
xlat
fs
adc
fcmovnbe
jmp
mov
add
xchg
push
pop
mov
aad
subl
mov
pop
loope
flds
mov
or
xchg
sub
sbb
fdivrs
or
xchg
test
insb
clc
mov
scas
cli
dec
jp
inc
sbb
int
jnp
adc
std
addr16
mov
inc
in
pop
lods
loope
add
and
fwait
fwait
call
out
push
push
gs
movsl
inc
mov
pop
or
sarl
call
and
leave
aam
mov
cmpl
dec
adc
jecxz
cmp
mov
test
push
sbb
loop
mov
rcll
ror
or
push
mov
sbbl
push
mov
mov
in
cmp
adc
test
mov
es
dec
or
xchg
fwait
lahf
ss
dec
or
ficomps
das
jg
mov
or
addr16
sub
lods
data16
fnclex
insl
insb
xchg
inc
lcall
movsb
mov
or
cs
mov
cli
pop
pop
loopne
bound
cmpsb
cmp
incb
xchg
vsqrtsd
ljmp
fldenv
or
ret
jbe
test
daa
test
inc
mov
and
call
int
mov
aad
ljmp
cli
out
shrb
mov
pop
jno
shlb
xchg
loope
stos
mov
shrb
adc
mov
lods
dec
fmulp
jecxz
fildl
add
sub
push
xor
fmuls
mov
mov
inc
insl
jp
out
jo
sbb
loope
mov
or
ja
ja
dec
adc
xor
push
clc
scas
lods
dec
jae
adc
pop
jno
out
pop
fimuls
arpl
lods
rorl
les
mov
insb
jp
dec
jmp
imul
xor
and
mov
shll
je
adc
dec
js
cli
sbb
test
adc
nop
cmc
inc
jge
jl
in
push
out
xchg
loop
push
imul
mov
add
adc
outsb
scas
or
stos
dec
add
xchg
into
sbb
add
fs
emms
push
out
imul
cmp
testb
mov
mov
sub
mov
xchg
insb
aas
rorl
lret
sbb
adcb
rorl
jmp
adc
inc
sbb
pop
sbb
sbb
cmp
sub
push
aad
jns
daa
mov
in
jno
push
push
outsl
add
cmpb
lahf
cwtl
repnz
push
mov
lret
aad
arpl
xchg
enter
mov
xor
xor
cwtl
aas
sbb
in
cwtl
push
jns
decb
test
out
mov
in
push
jae
stos
test
pop
xor
adcl
cmp
pop
imul
inc
dec
xchg
outsl
aaa
in
xchg
cmp
mov
xchg
and
push
cli
movsb
test
aam
sub
out
adc
cwtl
add
mov
stos
jae
mov
or
sahf
loope
movl
gs
dec
pop
sub
mov
sbb
sbb
movsl
iret
mov
jp
clc
push
outsl
adc
outsl
lcall
mov
dec
or
inc
data16
pop
pusha
imul
xor
jge
faddl
push
cltd
adc
mov
arpl
fadd
stos
jae
jl
enter
ljmp
adc
mov
fildl
and
dec
xchg
iret
cs
add
fs
sbb
insb
sbb
loop
adc
loopne
imulb
mov
xchg
cwtl
pushf
xchg
xchg
sub
sbb
rorl
mov
cltd
cld
pop
xchg
dec
xor
lret
andb
shll
popa
insl
cli
mov
jmp
lret
movsl
popa
bound
push
inc
fs
aaa
cmp
pusha
pop
in
rolb
mov
xchg
sub
xchg
test
pop
mov
mov
sahf
leave
dec
leave
sahf
test
into
adc
data16
mov
mov
mov
push
pop
hlt
pusha
loope
pop
movsl
xor
jne
xchg
setno
adc
cmp
loopne
adc
fistps
mov
sub
enter
or
sahf
pop
or
lret
xchg
push
test
clc
loopne
pop
cmp
fmuls
outsb
jne
pop
movsl
hlt
pop
das
jl
enter
lahf
insl
adc
mov
out
out
cmp
lcall
icebp
adcb
into
adc
sub
insb
lret
jb
loop
gs
into
dec
xchg
mov
and
sub
pop
fdivp
xchg
sub
lods
addl
addr16
push
add
or
out
sub
jb
pop
aaa
and
mov
dec
mov
js
sub
dec
sahf
sub
repnz
and
mov
or
dec
imul
jge
sub
rcrl
or
and
adc
push
sub
mov
fimuls
xor
ja
dec
push
nop
mov
aad
inc
sbb
mov
out
pop
lahf
sti
sbb
add
divb
xchg
add
sbb
mov
mov
mov
xchg
mov
cli
mov
loopne
pop
add
xchg
stc
inc
popa
idivl
and
sar
dec
cltd
sub
daa
movsb
sahf
stos
or
repz
lock
jg
stos
sub
pusha
mov
sbb
mov
hlt
push
mov
dec
cmp
add
push
ds
shll
outsl
ja
popf
xchg
inc
xchg
shll
fldenv
gs
sahf
pop
int
arpl
jge
dec
mov
dec
stos
lret
cmp
cmc
lret
sub
mov
icebp
mov
std
aam
or
fmuls
push
scas
leave
xchg
ret
and
out
cmp
loopne
mov
inc
bound
mov
push
in
fildl
mull
scas
push
dec
push
xchg
push
imul
out
std
fcoml
mov
mov
dec
cmp
sub
out
jb
pop
outsb
xchg
push
xchg
pop
movsl
jle
stos
or
add
fsubrl
fistpl
jb
xchg
outsb
xchg
aad
fs
std
jns
push
daa
inc
rcr
inc
lret
js
push
sub
test
adc
aas
and
sub
ds
pop
andb
pusha
jne
rcrb
popf
es
mov
mov
xor
jns
mov
mov
pop
jb
mov
dec
mov
iret
aas
push
push
inc
jg
enter
jg
mov
cmp
mov
mov
mov
imul
jecxz
add
sti
pop
push
xchg
inc
and
in
jno
pop
xor
push
call
jg
push
cmc
mov
pop
or
fiaddl
mov
and
jae
mov
ret
insb
addr16
inc
pop
xchg
mov
repz
dec
sbb
mov
sub
add
rcrb
adc
lock
xor
push
inc
inc
cmp
fcompl
stc
mov
jne
and
shl
sbb
or
mov
mov
cmp
test
mov
push
bound
call
test
inc
hlt
mov
ljmp
pushf
lods
xchg
inc
or
push
push
pop
mov
fsubrp
or
sub
jmp
pusha
out
pop
pop
mov
sub
lea
lret
sti
jae
mov
lods
fidivl
push
lcall
popa
imul
push
negl
lahf
aaa
rclb
test
xchg
push
push
imul
cmpsb
sub
push
xor
dec
mov
das
out
push
cmp
push
rolb
mov
jp
popf
jns
enter
sbb
mov
mov
popa
xchg
adc
sub
mov
lea
paddusb
lods
int
xchg
jg
lcall
cld
clc
xchg
fcomip
mov
xor
jecxz
mov
sub
iret
test
fldenv
cmp
xchg
sub
aas
sub
ja
inc
push
div
inc
mov
xor
xor
mov
in
insl
divl
mov
jno
lods
sub
inc
sub
stc
shl
xchg
xor
jns
push
sahf
adc
adc
fbld
orl
cmpsl
leave
mov
js
nop
mov
dec
add
adc
stos
fs
cmp
jg
loop
cmp
lahf
mov
and
stc
fsubl
imul
mov
xchg
icebp
pop
mov
imul
and
ficoms
jno
retw
pop
lds
mov
pushf
and
pushf
iret
bound
mov
sbb
rcrl
push
arpl
push
sbb
out
mov
out
or
invd
fs
pop
outsl
lea
cmp
or
inc
hlt
push
gs
and
ds
nop
push
push
push
lcall
xchg
jmp
mov
mov
in
outsl
stos
cld
ljmp
testl
loopne
cmpb
adc
movsl
sub
cwtl
sbb
push
nop
mov
xchg
push
fidivs
scas
rol
mov
jb
jge
mov
cmpsl
outsl
stc
mov
mov
fnstcw
enter
pop
repz
fldl
test
mov
daa
mov
jl
jp
dec
outsb
adc
inc
fimull
sarl
insb
stc
sahf
loop
lock
clc
and
outsl
ret
dec
scas
mov
cmp
push
xlat
stos
aad
hlt
pushf
fisubrl
leave
gs
mov
inc
stos
jo
stc
inc
daa
mov
mov
int
and
and
shll
add
sbb
add
jae
sub
inc
xchg
jecxz
dec
test
and
add
sbbb
jg
pop
mov
fs
aaa
fstpt
dec
push
lds
jg
mov
test
mov
negb
mov
popa
mov
fisubs
pusha
addr16
imul
cmp
sbb
xchg
add
lods
sti
pusha
or
daa
pusha
inc
add
inc
insl
ds
notl
sbb
and
mov
das
cli
jne
in
jmp
pop
and
mov
and
jp
pop
jg
fs
xor
movsb
adc
inc
aam
pushf
push
xor
je
jl
and
cmp
inc
cmp
sbb
adc
xchg
mov
movsb
sub
xchg
add
jle
push
pop
jg
jge
inc
jnp
mov
les
mov
add
lock
fs
adc
jmp
adcb
pop
daa
stos
jecxz
loope
sub
imul
sbb
clc
adc
aas
mov
ljmp
cmp
test
sbb
mov
int3
ljmp
lcall
imulb
adc
pop
data16
addr16
outsl
aaa
dec
jno
xchg
js
out
adc
notb
imul
fisttps
sbb
shl
jo
xchg
ret
push
cmpsb
clc
mov
and
arpl
push
cmp
in
movsb
xchg
loop
push
icebp
mov
popa
int
ret
shlb
ret
lds
out
je
mov
sbb
lods
stos
clc
jge
push
mov
mov
push
popf
inc
sub
outsl
iret
push
mov
into
or
rcrl
dec
pop
ds
pop
stos
int3
rcll
jns
sahf
roll
loop
aaa
mov
fisubl
and
dec
inc
pop
popf
rcll
cmp
ret
mov
or
sbb
lds
adc
inc
and
sub
cmp
mov
pop
das
mov
dec
decl
jl
arpl
fs
xchg
inc
pop
or
orb
in
test
popf
jo
rol
cmp
dec
repz
xchg
jne
pop
mov
stos
lods
inc
or
out
call
outsl
sbb
push
add
and
mov
lea
gs
sti
ljmp
cmp
and
fcompl
jns
fwait
cmp
inc
ficoml
lods
xor
sti
push
ror
inc
add
sub
mov
loop
jbe
dec
std
xor
lcall
pop
lock
pop
jle
out
sbb
mov
pop
pop
lret
mov
xchg
pop
and
aam
inc
jp
mov
jle
fisubl
iret
notl
and
cli
add
mov
fcompl
mov
call
or
pop
and
lods
ja
in
cld
das
jns
pop
pop
data16
cs
mov
jno
dec
pop
and
xlat
or
leave
lods
lock
leave
ja
add
cmc
scas
arpl
jbe
dec
test
push
push
cli
mov
testb
and
mov
or
cwtl
push
xchg
sahf
aaa
sbb
cli
das
inc
cmp
add
mov
cltd
add
fsubrl
or
outsb
loop
cld
in
ljmp
xchg
mov
ss
aam
lcall
mov
fstpl
pop
in
or
inc
insl
or
outsl
xor
inc
sbb
mov
rorl
jbe
xchg
and
ljmp
dec
popa
loopne
out
adc
into
adc
xlat
lds
cmp
sbb
lcall
aad
xlat
xchg
jb
cmp
dec
inc
outsb
addr16
je
dec
andl
jle
jne
pusha
das
hlt
push
mov
mov
or
sub
xchg
cltd
das
hlt
and
jbe
jnp
add
into
and
xor
mov
xor
movsl
mov
cmp
fistpll
test
mov
fs
xor
in
and
push
frstor
data16
fldenv
sbb
xchg
inc
in
add
out
jmp
mov
xor
xor
mov
mov
sbb
outsl
or
mov
pop
add
int3
mov
or
in
aam
mov
jge
cmp
adc
cmpps
ljmp
and
aad
lods
ret
pusha
sbb
cli
cmpsl
mov
out
adc
fs
lea
xor
bound
sub
lock
mov
fisubrs
xchg
test
jnp
and
loop
jbe
sahf
jmp
push
ljmp
pop
push
lods
mov
cmpl
inc
out
cmp
dec
inc
lock
data16
jae
and
pop
inc
pop
mov
inc
mov
rclb
jge
iret
stc
nop
sub
loope
mov
fistpll
sbb
jnp
imul
or
mov
insb
pop
xor
xor
std
loopne
scas
shrl
cltd
xchg
mov
inc
adc
lods
mov
mov
cmc
pushf
call
mov
ss
call
push
and
add
pop
out
test
push
lea
mov
ja
lods
and
dec
lods
out
shlb
pop
pop
jbe
cwtl
mov
ret
pop
mov
lret
lret
subl
cwtl
enter
jmp
mov
pop
add
adc
or
call
stc
aad
cmp
pop
push
pop
mov
repz
aam
nop
jp
mov
dec
loop
adc
mov
shr
cmp
pop
jno
mov
pop
pusha
fwait
scas
xchg
lds
mov
jae
daa
adc
rcl
lahf
addb
test
into
xchg
popf
cli
sub
adc
aaa
or
mov
push
cwtl
xchg
das
jecxz
out
test
insl
stos
leave
xchg
sub
push
push
cmp
mov
jp
lock
mov
mov
sarl
jge
out
sub
sub
and
add
arpl
mov
out
push
les
inc
lea
mov
loop
xor
aad
push
outsb
dec
adc
mov
clc
inc
fstps
mov
subb
jo
jae
xchg
dec
push
repz
sub
lret
xlat
in
dec
inc
push
push
and
mov
sub
lahf
adcl
xor
paddsw
pop
push
jl
lea
xor
scas
insb
fdiv
stos
test
push
mov
jg
sub
std
push
jmp
mov
inc
sub
popa
test
add
pusha
sbb
cmp
jnp
inc
shr
pushf
jae
lret
inc
adc
popa
or
std
cmp
pop
jl
js
adc
inc
stos
mov
mov
dec
mov
flds
xor
dec
jo
or
push
loop
push
rcll
push
divb
pop
stos
pop
sbb
jbe
rcrb
mov
mov
lcall
or
int3
or
push
lret
movsl
jne
in
pop
mov
arpl
in
mov
xor
fcoml
sti
mov
lock
ja
and
sbb
pop
adc
dec
jbe
fiadds
cmp
jge
sarl
jge
andl
out
push
and
sub
inc
fiaddl
cmp
pop
enter
pop
pop
and
scas
rcl
mov
xor
cld
in
scas
rcrl
in
or
adc
fcmovbe
mov
fldcw
jb
popa
cmp
inc
daa
push
repz
scas
ss
xor
push
imul
outsl
dec
mov
mov
push
cmp
inc
test
inc
sbb
dec
mov
int3
hlt
test
and
clc
mov
add
jp
nop
push
sbb
dec
sub
cmpsb
pop
cmp
pcmpgtd
jp
mov
repnz
loope
je
fdivrp
fs
inc
push
jg
adc
loop
loopne
adc
cmp
cld
divb
pop
fdivrl
mov
dec
jo
lds
pop
js
cmp
cmp
jecxz
lret
inc
push
mov
push
clc
xchg
sbb
mov
inc
imulb
adc
clc
or
sbb
pop
out
imul
ja
sbbl
icebp
pop
adc
push
fadds
add
xor
push
xor
das
outsb
das
and
hlt
mov
jbe
jno
xchg
ss
add
fmull
pop
dec
push
lea
fnsave
inc
loopne
xchg
push
stc
or
icebp
stos
sbb
xchg
jle
cwtl
in
or
sub
jle
pop
ljmp
stc
imul
orb
iret
sub
cli
incl
je
aaa
pop
pop
push
test
lret
fbstp
cmp
sbb
mov
test
imul
add
adcb
loope
jno
mov
push
mov
add
xor
in
mov
loopne
mov
mov
test
lcall
push
jg
add
lcall
push
or
fbstp
dec
dec
mov
out
jle
test
mov
fsubrl
cli
cwtl
jl
add
dec
xchg
mov
cmp
cmp
and
loopne
cmp
enter
pop
xor
fists
push
sbb
sbb
sbb
and
cli
and
sahf
jle
or
scas
sbb
jo
roll
dec
cld
or
sub
fneni(8087
mov
push
jg
nop
movsl
not
jge
pop
dec
xor
adcb
dec
jp
sub
aas
or
jbe
das
pop
xor
add
test
sahf
cmp
repz
inc
arpl
es
in
call
inc
mov
call
add
inc
cld
jmp
sahf
lcall
add
and
sti
scas
shll
icebp
jle
inc
shll
lahf
xchg
adc
jo
int3
in
aam
ljmp
push
popa
pop
lds
mov
cmp
mov
addl
mov
xchg
mov
lock
mov
push
daa
sub
jns
icebp
mov
mov
scas
mov
adcb
data16
pop
lds
xor
inc
cmp
rcl
mov
mov
imul
leave
sbb
shll
xorb
lock
shrb
mov
sbb
add
movb
add
push
mov
xchg
mov
sti
addl
aaa
aas
fcomps
pop
push
pop
dec
jle
scas
mov
testb
jp
sti
inc
cmp
inc
cmp
data16
push
je
shrl
aad
test
pop
lea
push
fbstp
iret
sub
ss
adc
loop
or
cs
cs
xchg
ljmp
xchg
and
inc
std
sub
inc
sub
fimull
repz
lahf
scas
data16
scas
lret
xchg
cmp
sub
out
mov
ss
pop
adc
enter
icebp
inc
push
add
sub
sub
xorl
mov
xchg
push
sti
iret
and
ror
fs
jmp
insb
int
ds
je
pop
fs
push
sub
clc
mov
or
adc
sub
cmpsb
xor
inc
fwait
push
and
bound
iret
test
repz
or
mov
cmp
pop
and
mov
icebp
inc
ficompl
xchg
int3
adcl
scas
ud0
xor
cmp
ret
adc
xchg
xchg
popa
imul
jmp
scas
test
mov
mov
xchg
pop
add
mulb
in
sbb
cltd
jecxz
mov
xlat
and
push
xorb
repnz
popa
std
fildl
sarl
mov
push
ret
pushf
jnp
pop
push
or
or
cwtl
cs
add
push
fsubr
in
dec
sti
cmp
xchg
push
loop
test
jno
ja
or
pop
das
je
add
cmc
loop
xlat
test
lods
bound
int
test
push
sbb
dec
jp
push
fdiv
xorl
out
push
fldcw
loopne
adc
jle
pushf
dec
push
and
fadd
rolb
dec
sbb
sahf
or
loopne
xchg
cmp
inc
xor
mov
and
inc
orl
jno
pop
add
in
pop
pusha
sub
jge
movsb
in
fwait
mov
sbb
aas
rclb
pop
in
call
sub
and
rcrl
jecxz
mov
mov
jl
sbb
gs
add
xchg
in
add
dec
stos
mov
cmp
leave
daa
pop
out
lods
addr16
dec
push
aaa
js
jnp
and
dec
cwtl
call
inc
add
jb
sub
loope
mov
data16
mov
js
in
insb
xchg
xchg
or
cmp
je
out
insl
js
mov
push
and
sbb
or
lret
pop
jno
int3
push
int3
add
mov
cwtl
or
jns
pop
sub
dec
sahf
mov
adc
mov
in
mov
inc
jmp
scas
and
rcrb
addr16
in
das
stos
xchg
aas
sub
adc
mov
push
aam
arpl
pop
push
stc
inc
daa
mov
scas
sbb
push
mov
inc
sub
cli
cmpsl
push
pop
mov
testb
int3
int3
add
mov
push
pop
cmp
in
aad
xor
in
gs
js
outsl
xor
sub
test
pop
and
jle
mov
mov
push
dec
sbb
arpl
leave
cli
cli
rol
add
outsl
stos
ficompl
push
in
mov
imul
insl
jae
ss
lcall
xchg
mov
pop
ss
das
mov
mov
fisttps
xchg
mov
pushf
call
or
ss
lcall
fnstenv
xor
add
adc
mov
push
add
sub
jae
add
inc
lea
mov
sbb
mov
ljmp
je
and
leave
popl
iret
sar
cmp
adc
jecxz
test
jns
pop
cli
xor
cmpb
add
and
mov
pop
add
out
clc
inc
jne
ret
adc
rep
sbb
mov
add
in
je
sub
ret
mov
jmp
mov
push
dec
dec
or
xchg
push
pop
dec
lods
addr16
push
cld
jno
lods
inc
cmp
stos
aas
mov
fwait
mov
add
outsl
mov
pop
cmc
lods
repnz
cmp
xorl
cmp
inc
lahf
pop
ret
fldl
data16
jmp
sbb
push
jmp
sbbb
lahf
pop
mov
insb
sbb
mov
and
dec
push
push
cmp
cmp
loope
test
sub
popf
scas
adc
mov
les
pushf
and
mov
orl
dec
add
bswap
les
int3
push
outsb
xor
push
into
fcmovnu
in
adc
std
add
xchg
push
pop
shl
mov
ror
fnstenv
in
icebp
std
adc
xor
sub
mov
jbe
mull
fstl
xor
ret
xor
xor
push
jg
mov
stc
movsb
push
hlt
outsl
sti
cwtl
xor
mov
loop
dec
lcall
xchg
add
sub
dec
inc
sti
push
roll
int3
sbb
cmp
jmp
out
cmp
jecxz
out
cmp
gs
clc
and
adc
cmp
xchg
lods
lods
stos
repnz
cwtl
fisubl
jge
push
push
lods
dec
mov
daa
dec
mov
mov
movsb
adc
add
adc
lods
cmp
and
shlb
cli
arpl
cmpsb
push
outsb
imul
adc
xchg
add
lods
addl
test
add
pop
xchg
stos
adc
insb
stc
lods
push
cmc
pop
bound
and
clc
pop
shl
or
aas
lea
adc
xor
pop
mov
gs
sti
pushf
jbe
sub
popa
pop
xchg
aaa
mov
leave
pop
cmp
int
jnp
mov
mov
ret
pop
es
mov
inc
xchg
mov
test
aaa
adc
dec
cmc
jb
sbb
insb
jg
mov
mov
nop
pop
xchg
call
arpl
scas
stos
inc
lret
mov
sub
frstor
mov
jle
cmpsl
cs
pop
dec
jp
retw
test
dec
push
pop
lds
outsb
pop
jns
mov
mov
in
inc
addr16
aad
mov
inc
xchg
push
das
mov
xlat
cmc
loop
inc
jmp
lret
inc
movsl
cmc
push
outsl
movsb
movb
mov
hlt
push
popl
xchg
mov
jne
xor
or
pop
mov
cmp
add
aas
out
addr16
jo
shlb
pop
cs
out
mull
sub
bound
lret
jl
or
arpl
adc
fimuls
in
mov
mov
fxam
mov
dec
mov
xor
sahf
jge
mov
ss
pop
js
lds
aad
xchg
or
lahf
mov
pop
fisttpll
xchg
call
ror
and
rorl
push
mov
int
jmp
arpl
insb
iret
inc
xor
stos
mov
inc
push
dec
lret
mov
les
fstps
cli
adc
std
outsl
mov
aad
fsub
cs
mov
pop
mov
cmc
inc
push
adc
and
pop
std
popa
sub
xchg
jecxz
sbb
movsl
push
lahf
jmp
jle
mov
adc
in
outsb
mov
jno
je
ret
and
pushf
pop
xlat
into
dec
pop
aad
adc
loopne
clc
push
push
mov
mov
in
inc
mov
stos
loope
scas
mov
sub
fsubr
xor
sbb
ja
xchg
mov
xor
adc
cltd
push
ja
cli
popa
data16
xor
loope
push
mov
mov
lret
inc
bnd
mov
cmp
sbb
jle
sub
add
push
movsb
mov
push
push
pop
push
or
popa
cmpsl
aam
or
ja
sub
ret
mov
jp
gs
push
push
int3
fwait
adc
push
aad
cmp
sub
add
test
fadds
pop
movsl
or
sub
or
test
ljmp
pop
or
push
aad
out
lods
loop
int3
sub
push
mov
cltd
mov
xchg
cmpsb
sub
decb
sub
daa
iret
fiaddl
and
sub
das
cmp
push
popf
mov
and
add
cmp
add
mov
push
aam
repnz
pop
jp
inc
pop
jb
push
cs
addr16
out
dec
jg
jge
mov
mov
divb
jbe
pop
cmp
mov
lods
ficompl
xor
cli
and
inc
outsl
out
xor
fsub
and
pop
iret
inc
jmp
pop
ja
inc
mov
ds
aaa
imul
mov
inc
push
mov
jecxz
jmp
es
jns
mov
xchg
or
mov
push
movsl
push
test
xor
insl
fidivs
stos
push
ds
cmp
push
rcll
sbb
int3
xor
repz
cwtl
jns
lea
xchg
lcall
inc
cmp
xor
sahf
sbb
jmp
loop
mov
or
xchg
push
push
hlt
dec
sbb
into
lcall
add
mov
add
and
dec
adc
mov
cld
or
adc
lahf
add
loop
int3
add
fs
out
mov
mov
sub
daa
sub
nop
ret
pop
push
fisubrs
mov
shrl
fbstp
push
push
fnstsw
sbb
or
fnstcw
and
sahf
mov
xchg
rclb
pop
cld
bsr
jge
cmpsb
sahf
out
mov
xchg
inc
lea
daa
nop
add
lods
sub
adc
mov
mulb
insl
pusha
cmp
pop
jb
jl
cwtl
int3
sarl
push
repnz
in
dec
insl
xor
xchg
pop
enter
mov
add
popf
inc
pop
stos
add
jle
mov
xchg
daa
sbb
lock
scas
pop
scas
movsb
es
mov
cmc
gs
data16
pushl
pop
or
dec
push
or
repnz
push
mov
daa
jnp
xchg
call
jge
inc
mov
je
into
hlt
movl
or
inc
sbb
outsl
loope
push
or
in
mov
mov
mov
cmpsl
mov
fisubrl
xchg
aas
sbb
add
xchg
jecxz
fnstsw
shrl
sti
pop
jle
jno
jl
out
lods
adc
jae
and
xor
sbb
cwtl
iret
mov
adc
inc
pop
mov
fstpt
lret
leave
call
aad
cmpsb
dec
xchg
xchg
xor
mov
inc
leave
icebp
push
sar
in
sti
cwtl
sbb
ss
in
pop
or
dec
pop
push
jne
out
xchg
xchg
cwtl
test
scas
sbb
and
push
adc
rcrl
mov
test
test
xchg
xor
sub
mov
and
mov
movsl
scas
adc
jp
adc
inc
lds
push
xchg
add
adc
in
sub
cmpsl
mov
mov
jle
stos
clc
mov
insb
fisttpl
mov
cmc
pop
mov
insl
jmp
mov
js
add
scas
or
mov
adc
jecxz
cs
sub
pop
inc
clc
call
ljmp
dec
pop
nop
popa
in
xchg
xchg
je
sub
dec
mov
mov
shlb
adc
fiadds
push
incl
scas
sbb
xor
and
xchg
adc
lds
push
inc
and
adc
dec
std
mov
lret
cmc
cmp
sub
jb
cmp
cmp
push
filds
rcl
mov
xor
int3
aas
jb
xchg
inc
ljmp
jl
xchg
test
jo
mov
jae
movsb
cwtl
push
inc
sub
hlt
out
stc
daa
ss
cli
add
mov
adc
adc
and
jle
scas
sbb
lcall
sbb
std
mov
add
mov
push
mov
cmc
in
mov
mov
lods
shr
xchg
jle
pop
dec
and
xor
out
imul
inc
xchg
lea
mov
lods
pop
adc
in
sub
mov
jbe
mov
fdivs
jg
data16
pop
dec
ds
jp
mov
lret
gs
outsl
xchg
cwtl
mov
push
es
imul
cmp
jbe
mov
pop
in
xor
xchg
mov
mov
xchg
popf
jmp
mov
loopne
mov
mov
xchg
mov
sub
xchg
repnz
mov
cmp
push
cmpl
lcall
outsb
jecxz
cld
mov
ret
lods
adc
into
xor
rclb
jge
cwtl
movsb
dec
test
out
pushf
daa
and
lods
repz
fldenv
dec
xchg
mov
pusha
lret
into
int3
xchg
not
sbb
in
movsb
or
lock
lahf
rcll
inc
xchg
fcmovu
out
push
push
jl
sub
push
sbb
xchg
or
das
movsb
mov
cmp
mov
scas
inc
inc
mov
fs
psubw
mov
dec
push
cld
push
xor
movsl
jne
mov
rcl
pusha
pop
fildll
xchg
cmp
pop
mov
push
add
push
ret
icebp
pop
bound
inc
daa
xor
sub
stos
push
out
jnp
cmp
pop
ret
rorl
or
into
insb
ret
les
fnstenv
out
call
out
in
jbe
into
andb
xor
mov
in
sti
inc
aad
aaa
lret
mov
ljmp
xor
test
xchg
stos
dec
imul
bound
xor
imul
ljmp
sbb
mov
xor
gs
or
out
sbb
xchg
adc
out
insb
out
cmp
sub
xor
mov
movb
aas
adc
cmp
fisttpl
sbb
repz
test
loop
call
out
in
cmp
inc
cs
add
insb
pusha
rcrl
jne
insb
or
jnp
imul
xlat
xchg
imul
xchg
sbb
add
push
sbb
push
idiv
cmp
sub
fdivrl
lret
shl
mov
add
push
add
mov
jns
in
jne
loopne
mov
dec
subb
sahf
je
push
cmp
mov
sarb
movsl
test
mov
pop
test
fsubs
rol
aad
xorl
ds
xchg
add
jne
out
mov
jbe
jmp
add
pusha
mov
mov
xor
fwait
mov
lcall
jns
mov
inc
mov
add
add
push
jle
out
loop
sbb
lahf
dec
mov
fiadds
iret
xchg
lcall
inc
xlat
jne
pop
sbb
or
rcrl
xchg
enter
xchg
sub
ret
xchg
cwtl
mov
leave
jmp
mov
xchg
pop
fisubl
pop
cmp
mov
fnstsw
inc
xor
xlat
call
out
pop
cmp
in
rcrl
jo
push
sbb
out
mov
inc
jno
ljmp
out
js
sbb
pop
mov
insl
test
pop
enter
movsb
cmp
mov
and
repz
inc
adc
adc
dec
rclb
fcomps
push
ds
inc
lcall
push
in
shlb
rol
dec
jo
fxtract
movsl
ret
lcall
adc
adc
test
lret
andb
in
test
or
fwait
push
mov
fsubl
sahf
scas
sahf
jne
or
pop
imul
jae
gs
or
insb
fnstenv
lds
sti
mov
and
sbb
jb
xchg
push
adc
push
inc
daa
sub
out
cli
or
mov
pop
xchg
rcrb
pop
cmpsb
int3
je
xor
pusha
mov
cmp
push
push
sbb
data16
call
sub
sbb
cwtl
cmp
in
push
jb
mov
push
xor
ja
insl
mov
push
sarb
fisttps
idivl
fs
movsl
and
fsubr
mov
cwtl
rcll
fdivl
jns
jb
adc
inc
inc
adc
cltd
fwait
and
cmp
xchg
push
inc
lods
inc
cmc
mov
pop
dec
inc
jp
sbb
cld
add
jae
or
scas
push
out
jecxz
sub
mov
add
test
sarl
enter
sub
andb
inc
out
gs
cmp
pop
push
xor
jecxz
in
stos
cli
mov
jmp
xlat
cwtl
mov
jmp
incb
das
dec
or
les
test
mov
jle
and
movsb
sti
xor
lods
repz
jae
mov
pop
pop
js
jp
ret
pop
fldt
das
and
and
mov
out
stc
or
cwtl
scas
test
xor
mov
lock
scas
jl
mov
dec
pop
dec
test
lods
lahf
dec
arpl
or
fistpl
push
inc
and
iret
faddl
fstp
aas
ss
jmp
fsubrs
ret
jl
arpl
jb
add
shrb
dec
inc
cmpsl
pop
cli
clc
and
hlt
gs
jae
fimull
push
mov
push
pop
shll
jle
inc
add
jne
jae
jb
test
lret
fadds
lds
pop
inc
fs
pushf
jmp
jecxz
fstps
sbb
dec
and
addb
or
or
mov
xchg
and
lods
push
fsts
ret
inc
jp
sub
xor
shrb
jo
das
cmp
pusha
pusha
idivb
jp
lds
cmp
add
cmp
in
dec
cld
xor
jno
lods
cmpl
pushf
or
and
inc
leave
add
mulb
test
or
stos
aam
gs
mov
pop
pop
mov
xchg
lock
lds
mov
inc
sbbl
mov
push
fbstp
sbb
daa
sub
and
stos
add
dec
lock
aam
lea
iret
decl
out
imul
fstpt
sti
das
lock
cmp
dec
push
mov
sbb
push
fstpl
jne
jle
jno
mov
pushf
push
ret
out
mov
cmpsl
inc
and
mov
jo
ljmp
mov
mov
sub
lcall
cs
sbb
fldt
clc
aaa
xor
dec
sub
aas
dec
ljmp
jbe
or
mov
sub
mov
mov
les
mov
xchg
stos
sub
ds
in
test
and
inc
repz
jle
ret
loop
repz
cmp
jg
add
out
mov
int3
jbe
loop
add
insb
inc
andb
movsl
add
nop
inc
and
lods
cmp
cmp
shl
or
std
je
push
cltd
sti
call
add
test
sbb
dec
repz
ficompl
sub
xor
sbb
mov
adc
jge
cs
int3
jns
int
mov
dec
mov
lods
test
dec
dec
or
fdivr
cltd
roll
outsb
sbb
mov
movsl
sub
movl
pusha
into
mov
add
lret
fisubs
aad
cwtl
xor
pop
nop
stos
js
out
icebp
pop
fistps
xor
add
lods
and
mov
pop
sbb
mov
sub
cmp
xor
or
fsts
fwait
orb
cmc
and
sti
in
sub
hlt
xor
loop
ds
cmp
andl
das
loope
dec
lods
inc
add
mov
rolb
cli
mov
bound
push
jmp
or
or
loopne
sahf
movsb
int
insl
jle
insb
lods
push
xchg
repz
les
add
cmc
loopne
test
pop
imul
or
mov
lea
push
shr
jnp
mov
or
lahf
xchg
out
dec
or
dec
push
inc
pop
or
sti
jns
adc
dec
or
test
sub
adc
outsb
popf
loope
pop
lock
push
fsubl
mov
mov
fistpl
mov
and
sbb
jnp
or
out
cli
in
jge
fildl
fsubp
add
hlt
iret
negb
cltd
call
adc
cmpsb
ljmp
cmp
loopne
add
fwait
test
jns
xor
push
enter
lea
add
mov
cmp
in
jecxz
pop
mov
push
fists
clc
orl
push
lds
mov
sub
sbb
imul
or
xadd
popa
or
and
pusha
and
push
cmp
cmp
inc
ss
sti
adc
mov
sahf
hlt
adc
jl
xchg
lcall
cmp
imul
das
inc
iret
fs
andb
cmpsl
xchg
aaa
dec
fst
jns
pop
push
xchg
push
sub
stos
jge
js
or
xor
fcomps
xor
pop
inc
in
sbb
pop
sbb
jecxz
stc
ss
jae
pop
lods
or
xchg
cmpsb
and
sbb
cmp
ds
leave
hlt
outsb
xchg
pusha
cmpsl
pusha
pushf
lcall
mov
xor
pop
jle
lods
mov
fiaddl
ss
push
jle
mov
pop
sub
in
inc
shl
cmp
push
fsubl
cmp
dec
movsl
push
pop
mov
cmc
add
icebp
test
cwtl
sti
fldcw
xor
arpl
adc
jae
fistl
cmpsb
and
aas
cmp
cmp
enter
enter
loop
push
xor
iret
xchg
and
gs
es
jne
stos
movb
mov
data16
add
lret
test
int
lret
test
sbbl
push
and
push
cmp
jle
or
mov
enter
mov
repz
les
sti
push
popa
fcomps
or
imul
fs
or
ret
clc
cmpsl
cmp
cmp
adc
fimull
xchg
cltd
mov
xchg
movsl
pop
sbb
pop
adc
xor
iret
pop
adc
rcll
scas
ret
jp
pusha
xor
hlt
mov
test
into
inc
add
pop
aas
dec
pop
mov
xor
je
jle
or
fidivl
mov
stos
xchg
ret
jns
lea
or
idivb
shll
inc
mov
out
fildll
sarl
adc
mov
cld
data16
sti
rclb
xlat
or
xchg
push
inc
pop
icebp
dec
adc
lods
std
inc
mov
inc
inc
sub
jge
sub
shlb
cmpsl
or
cwtl
shld
sub
cwtl
jno
js
or
addb
fiaddl
mov
add
pushf
sub
add
mov
mov
or
adc
daa
imul
mov
cmpsl
mov
dec
sahf
add
leave
mov
inc
lock
jo
outsb
and
adc
sbb
mov
mov
in
outsl
xlat
mov
add
sbb
xchg
or
cwtl
push
stc
or
mov
out
je
inc
push
les
or
icebp
dec
leave
xchg
jbe
mov
dec
es
push
fdivl
lods
stos
mov
fidivl
inc
icebp
mov
push
arpl
iret
mov
rcr
std
fucomi
add
mov
outsl
negb
inc
inc
movsb
ud0
test
xor
aad
pop
call
enter
nop
clc
xchg
sbb
fiadds
and
dec
cmpsb
out
mov
loope
add
ror
cli
dec
addl
add
cmc
mov
leave
ret
pushf
jl
mov
and
out
mov
shrb
and
andb
or
mov
mov
jecxz
and
xor
sub
mov
in
hlt
sbb
xor
fisubs
push
sub
shrl
mov
xchg
push
inc
xor
test
push
cmp
leave
and
mov
test
popa
ret
add
sub
sbbl
out
mov
insl
pop
mov
out
cli
push
mov
mov
jo
sub
xor
jae
lock
jp
mov
sahf
sbb
and
enter
push
and
loop
jns
cmp
data16
dec
mov
inc
in
shrl
in
adc
jg
test
je
sbb
cmpsl
call
push
inc
or
jnp
mov
xor
movsb
mov
sub
dec
mov
leave
or
test
cmp
cmp
dec
adc
mov
mov
xor
daa
ljmp
imul
or
enter
ret
cld
jle
push
in
push
cmpsl
cwtl
jae
push
mov
mov
hlt
test
in
cltd
les
std
jmp
lcall
stc
mov
stos
scas
mov
push
mov
sub
pop
out
sbb
pop
insb
fcompl
aas
or
dec
fadds
lahf
and
mov
dec
pop
push
pop
cld
mov
push
sti
mov
sbb
testl
dec
inc
outsb
xor
xchg
fsubrl
jns
leave
cld
mov
jl
int
or
test
jb
in
push
pusha
rorb
cld
aas
or
js
xchg
lret
xchg
mov
not
fstl
mov
xchg
or
push
jne
loopne
fs
out
push
mov
mov
or
fisubs
xchg
pop
adc
or
pop
mov
data16
addr16
jno
movsl
frstor
fcompl
out
std
int
cmc
mov
aad
xchg
inc
and
movsl
in
or
popa
cld
mov
push
imul
push
sbb
mov
jo
adc
outsl
cmp
repz
stc
ret
mov
sub
fmull
mov
jae
inc
pop
out
lods
sub
add
or
int
popa
adc
or
cmpsl
outsb
test
nop
sbb
shl
mov
push
mov
hlt
orb
outsb
test
pop
or
jle
add
popf
jno
cwtl
in
push
dec
xchg
and
inc
mov
dec
sbb
xchg
in
stos
loope
popw
leave
push
hlt
push
aam
pushf
in
pop
icebp
push
jb
inc
and
inc
mov
out
push
jmp
leave
xorl
movsb
stos
rcrl
sub
pop
cmp
std
mov
les
mov
ljmp
dec
sbb
xor
test
cli
cmpb
shlb
cmc
repz
xor
loope
dec
jp
add
sbb
or
fcmovb
cmc
es
or
out
out
dec
xchg
adc
mov
lods
pusha
out
lods
xor
out
sub
or
cmp
adc
repnz
pop
mov
xor
push
ljmp
dec
mov
fistpl
mov
mov
aad
sti
lret
sbb
jmp
mov
andb
test
add
addr16
xchg
cmpl
xchg
aam
push
jne
loopne
into
adc
enter
gs
mov
add
jno
movsb
rorl
cmpsl
int3
jb
pop
push
aam
dec
cli
push
dec
nop
lods
xchg
sub
and
jae
push
dec
iret
sub
pop
dec
xchg
int3
xor
stos
mov
sbb
ret
cli
mov
je
xchg
mov
sub
fdivl
ret
data16
jnp
xchg
addr16
icebp
mov
inc
aad
jnp
cmp
rcr
mov
loop
test
add
ror
popa
mov
scas
and
cmp
test
push
in
bound
lea
and
inc
mov
int
sahf
cmc
xor
jl
rcll
lret
icebp
jl
lret
jmp
adc
mov
cli
dec
push
mov
mov
pop
test
jbe
mov
into
mov
push
rol
push
or
sbb
in
cltd
jl
or
dec
ljmp
je
push
or
cli
repz
sbb
sar
add
push
movb
or
jne
inc
lods
xchg
lret
je
movsl
jbe
adc
out
cli
loopne
lock
inc
inc
mov
mov
fistpl
push
xchg
mov
xchg
sbb
rol
pop
js
stos
mov
adc
fdivrl
jle
and
add
inc
cltd
repnz
outsb
or
and
ret
test
dec
cmpsl
add
and
lods
jbe
pusha
jnp
sub
ja
negl
lret
mov
adc
jbe
cmp
iret
cld
sub
sbb
and
cli
mov
movsb
dec
hlt
jbe
or
inc
pop
jl
imull
or
stc
cmpb
jo
inc
out
outsl
xchg
inc
jmp
js
pop
cmpsl
ss
cs
adc
int3
ja
push
push
in
mov
adc
pop
adcb
repnz
mov
sub
jge
cwtl
imul
in
sbb
lret
mov
adc
lock
jmp
pop
adc
clc
sub
nop
xchg
xor
daa
out
jno
xor
stos
aam
test
mov
push
xchg
pop
pop
push
adc
and
nop
xor
xor
aam
lahf
loopne
jnp
jns
pop
pop
iret
iret
cmc
rclb
pop
push
movsl
xlat
dec
lret
pop
mov
sub
iret
stos
ss
bound
lea
mov
inc
out
lock
sub
push
pushf
call
push
pop
mov
xorb
jecxz
xor
push
mov
mov
int3
fstp
dec
out
xchg
mov
xor
mov
adc
sti
push
imul
popf
xor
sahf
movsb
mov
rcrb
adc
cltd
mov
sbb
stos
rcl
dec
icebp
dec
hlt
push
cmpsb
xor
lea
sub
inc
jne
dec
dec
loopne
mov
and
jmp
pop
pop
dec
in
jg
repz
lcall
daa
seta
mov
in
into
xor
cmp
or
test
aam
mov
clc
jle
push
les
xchg
adc
in
xchg
ds
mov
push
lcall
bound
pop
add
and
stc
add
enter
xor
daa
rsqrtps
xchg
mulb
sbb
pop
scas
add
dec
cmc
sub
rorl
cmp
sub
mov
and
and
aad
xchg
and
imul
cmpsl
jl
add
or
repnz
jecxz
sahf
ffree
aaa
ja
sar
rolb
inc
repz
mov
arpl
movsb
add
data16
sti
jmp
xlat
push
jg
jnp
out
gs
or
xor
pop
in
mov
cld
movsb
stos
cmp
call
pop
lea
and
lret
sbb
out
adc
cld
pop
cmp
lods
inc
xlat
pop
fcmove
push
popf
mov
jbe
leave
mov
subl
and
pop
outsb
pop
or
repnz
adc
iret
push
lea
mov
sbb
pop
sarb
mov
xchg
inc
incb
mov
inc
aad
jne
pop
into
cmpsl
jnp
mov
andb
les
pop
cmc
xor
push
std
mov
and
cs
ret
jecxz
pushf
aad
out
bound
pop
xchg
push
adc
lret
xchg
in
mov
mov
iret
jne
or
push
pop
clc
or
pop
lcall
push
cs
scas
dec
fiadds
xchg
scas
pop
repnz
adc
lcall
mov
and
scas
call
nop
movsl
js
dec
testb
fmuls
push
stos
lods
shrl
hlt
dec
fisttpl
les
adc
xchg
rorb
call
mov
xchg
pop
push
jae
push
test
icebp
std
sbb
mov
sub
fiaddl
pop
pushf
push
shrd
sbb
shrl
pushf
lock
mov
push
inc
pop
xor
jg
jge
test
or
and
add
sbb
in
inc
add
adc
movntq
push
outsl
jecxz
or
pusha
pop
sbb
mov
jb
test
popl
in
cmp
pop
out
lret
push
xor
es
mov
hlt
dec
mov
xchg
insb
aaa
subb
outsl
mov
mov
cs
xchg
dec
loop
inc
or
inc
mov
out
push
jmp
pop
scas
fbstp
lret
les
sbb
mov
xchg
out
sbb
jp
mov
inc
cwtl
jmp
or
punpckhdq
cmp
fcom
mov
xchg
jbe
sub
mov
and
jl
sarb
nop
popl
call
test
pop
ds
fcmovnu
add
cs
aad
or
xchg
push
fsubl
pop
incb
xchg
sti
mov
shl
add
xor
notb
lret
push
mov
pop
cmp
sbb
jae
jns
sub
je
jne
dec
cmp
cltd
loope
or
mov
sbb
icebp
ljmp
imul
cld
push
or
and
mov
mov
mov
addb
ret
mov
rcll
jl
or
inc
dec
sub
add
add
fsubl
fcompl
cmp
imul
mov
pop
dec
jnp
bound
repz
repnz
pop
mov
testl
scas
leave
cltd
out
in
dec
add
sbb
cmp
or
pop
hlt
dec
scas
ret
pop
inc
jge
out
mov
xchg
add
mov
jne
mov
cmp
mov
rcll
mov
test
xor
cmp
stos
aad
mov
push
out
xor
mov
ja
fstl
ror
cmpsb
and
pop
pop
lds
xchg
std
push
xor
mov
inc
xchg
jmp
push
rorl
gs
push
xor
pusha
stos
lahf
lods
addr16
adc
push
jl
outsb
pop
mov
jns
cld
sbb
dec
std
push
lcall
lock
outsl
mov
adc
lret
in
mov
xor
xchg
mov
in
stos
loop
push
cltd
jns
inc
lds
popf
mov
mov
sub
jecxz
mov
mov
sbb
fldenv
pop
dec
add
jmp
pop
pop
shlb
cmpsl
sbb
adc
bound
aas
mov
pop
aas
arpl
out
mov
outsl
mov
inc
and
hlt
outsb
jns
adc
pop
bnd
push
cld
adc
add
mov
inc
movsb
push
cmp
aaa
fdivl
mov
fistl
fwait
cmp
loop
enter
repnz
and
fsubrl
in
loop
scas
mov
fnstcw
inc
sahf
ds
movsl
or
aad
shl
cld
xor
test
jge
mov
scas
inc
jb
pop
mov
push
add
shrb
in
out
fisttpll
in
orl
mov
add
xchg
sub
adc
jnp
lock
ficomps
hlt
pop
adc
xchg
fnsave
add
xor
and
pop
testl
mov
xor
push
mov
movsl
pop
shr
pop
cli
movsl
scas
test
das
nop
mov
inc
adc
sbbb
jl
inc
divl
add
push
xor
dec
jmp
mov
inc
cwtl
xchg
jmp
mov
jne
in
pop
jns
jle
lea
std
xor
push
jg
xchg
pop
not
xchg
sahf
adc
into
inc
mov
sub
push
daa
roll
push
sub
and
test
ret
repnz
out
inc
jl
push
jle
inc
orb
push
sub
adc
outsl
or
mov
push
cmpsl
fnstsw
and
dec
leave
dec
mov
test
ljmp
movsb
inc
and
outsb
shll
xor
pushf
pushl
in
sbb
scas
movsb
pop
lods
in
ret
ljmp
insb
jg
xor
adc
scas
sarb
xor
or
repz
dec
in
lret
cmp
lcall
mov
mov
cmp
or
jbe
lds
adc
insl
jne
jbe
ret
pop
mov
jecxz
cltd
and
ret
orl
sti
add
fimull
push
push
dec
xchg
scas
mov
ljmp
repz
mov
jbe
imul
jge
imul
jb
aas
aas
sub
dec
leave
jne
jmp
lahf
adc
lret
inc
add
mov
fstpl
mov
lock
cmpsb
cmc
lods
xor
xchg
xchg
dec
lock
or
pop
xchg
pop
xor
cmc
push
sbb
enter
push
ss
ljmp
or
cmp
push
ffree
mov
sbb
add
xchg
or
mov
adc
adc
or
inc
ds
jbe
jo
cld
mov
outsl
fists
mov
pop
les
roll
gs
ret
mov
push
ljmp
inc
jbe
aad
test
sahf
cmpsb
jmp
dec
xor
sarl
xchg
and
pop
popa
ljmp
jbe
lds
movsl
mov
mov
outsb
test
dec
inc
clc
test
jmp
inc
inc
dec
and
jl
pop
out
jae
dec
clc
jae
adc
imul
pop
pop
fwait
cwtl
insb
inc
jbe
mov
or
inc
push
add
pop
push
es
mov
into
sub
xlat
mov
dec
and
xor
ret
call
pop
es
repnz
jg
jmp
nop
sbb
insl
adc
mov
test
xchg
in
bound
mov
outsb
mov
xor
pop
shrl
pushf
adc
gs
and
ret
xchg
push
mov
js
mov
lahf
sub
inc
ja
cltd
push
or
xor
lods
lods
xchg
mov
cmp
lock
rcl
jmp
gs
in
ficompl
jmp
jp
stc
popa
stc
int
mov
insl
sub
in
xor
adc
test
push
es
cmp
xlat
fisubrl
mov
repnz
in
aaa
fdiv
jae
mov
push
data16
xor
push
pop
fldcw
adc
sbb
push
sbb
gs
enter
pusha
ret
repnz
sub
fidivrs
lret
dec
movl
vmwrite
bound
cld
hlt
repz
cmpb
cmpsl
mov
imul
dec
pop
clc
xor
mov
rcll
mov
stos
test
mov
aad
sti
mov
outsl
inc
sub
filds
mov
sub
or
xor
push
add
adc
inc
mov
xor
jle
sbb
arpl
stos
adcl
pop
push
je
sbb
dec
loope
dec
mov
bound
cmp
bound
jmp
mov
lahf
fistpll
int
xor
sarb
data16
xor
inc
aam
sarb
jnp
stos
sbb
fcmovnu
out
mov
jne
mov
int3
inc
pop
in
bound
jnp
cmp
adc
push
fs
fsin
je
ljmp
mov
dec
xchg
pop
cli
mov
flds
or
or
stc
lea
inc
pop
outsb
sub
rolb
add
mov
aad
mov
in
dec
inc
add
test
mov
sub
and
test
mov
out
cmp
jae
jmp
daa
adc
adc
and
sub
xchg
and
inc
jecxz
and
mov
mov
adc
or
sbb
stos
or
or
add
xchg
pop
bound
lds
lcall
inc
mov
lahf
jo
cmp
ja
jmp
out
dec
xchg
mov
addb
jne
daa
fadd
or
jecxz
dec
mov
mov
add
xchg
lret
out
test
mov
xlat
and
inc
fists
and
mov
sahf
jg
push
xchg
andl
test
out
lahf
sub
adc
xor
mov
dec
pushf
xchg
movsb
cmp
std
or
std
movsb
pop
jne
and
push
stos
clc
shrl
add
aas
sub
lahf
xor
mov
aaa
fmulp
push
mov
mov
fildll
movsl
lock
xchg
add
imul
rol
aam
out
sbb
scas
lods
jno
iret
pop
outsb
or
lahf
cmpsl
mov
lret
bound
push
pushf
sub
jp
popf
cwtl
ret
pusha
orl
jbe
and
jmp
popf
push
scas
sub
aaa
in
lahf
test
data16
imul
pop
ja
dec
aad
cmp
cmc
or
popa
jae
cmpsl
or
xor
push
xor
clc
cld
xor
or
incl
lock
cmp
xchg
pop
inc
je
test
movsb
xchg
movsl
int3
mov
add
mov
xchg
add
xor
in
jecxz
sbb
mov
mov
cmp
cmp
cmp
fldenv
add
and
out
xorl
out
jl
jecxz
sub
out
inc
adc
clc
movsl
lods
stos
push
mov
pshufw
jb
aad
cmp
xlat
test
and
dec
xorl
getsec
inc
loopne
mov
lea
pop
mov
inc
mov
sbb
mov
cmpsl
or
les
pusha
mov
push
pop
add
insl
mov
inc
mov
jne
add
out
and
adc
out
cmp
mov
mov
ret
lock
xor
or
in
mov
and
js
les
dec
orl
cs
roll
xchg
repnz
lods
gs
inc
jne
movsb
mov
outsl
inc
sub
mov
add
scas
cmp
lock
fwait
call
leave
imul
stos
movsb
in
inc
push
push
stos
xchg
lret
or
pop
rolb
add
imul
xor
leave
adc
les
popf
push
and
imul
xchg
mov
add
adc
dec
lret
jb
mov
sbb
sar
mov
xchg
test
jae
cmp
aad
dec
int3
xor
in
lods
add
into
mov
nop
cmp
mov
or
cmp
jge
cmp
mov
add
xor
xchg
ret
cmp
cmp
movsl
mov
or
repnz
dec
aas
ret
jmp
or
inc
xor
adc
push
mov
dec
into
fxch
or
jge
jge
mov
rol
test
xor
push
inc
clc
add
push
pop
push
fwait
dec
lds
xchg
or
sub
fildll
insb
sahf
mov
sbb
fistps
sub
or
fucomi
out
icebp
jge
cmpsb
loopne
xor
adc
ljmp
shlb
daa
push
xchg
jo
sbb
test
pop
in
pop
into
sbbl
push
xor
sbb
jmp
sti
and
std
inc
mov
std
lret
ja
aas
inc
vcomisd
adc
ds
les
sbb
mov
push
shll
fwait
test
xor
mov
sti
mov
out
pop
aaa
fs
xor
mov
pop
jae
adc
pop
outsb
out
sbb
cmp
sub
and
test
rcrl
ret
pop
movsb
cmp
shll
mov
jbe
push
xchg
push
sbb
rcrl
jno
add
cmp
add
leave
insb
push
out
fiaddl
push
xchg
out
movsb
jp
stos
adc
add
repnz
mov
movsb
adc
cmp
in
dec
enter
adc
push
mov
ja
mov
lock
cs
ret
and
ud0
insb
lret
lret
fstpl
addr16
xor
dec
pop
sub
sbb
cli
mov
pop
pop
rolb
ja
push
xor
mov
cmpsb
push
mov
repz
push
popf
mov
or
mov
sub
push
and
xor
pushl
xor
jmp
aad
add
sbb
xlat
push
imul
pop
cltd
xor
js
mov
jbe
pop
cmp
bnd
mov
push
sbb
mov
adc
bound
cmpsb
sub
insb
sbb
ss
pusha
test
int
sete
mov
ret
es
cmp
movsl
popa
test
jp
mov
mov
mov
icebp
xor
add
aam
adc
inc
test
xchg
das
or
push
jne
test
mov
add
cli
jbe
jne
jo
sub
scas
adc
mov
mov
inc
mov
jmp
xchg
out
cltd
loop
pop
or
fldl
sub
xchg
sbb
testb
xor
adc
movsb
fwait
test
push
in
mov
or
and
push
jecxz
sbb
call
jbe
sub
xchg
dec
mov
mov
mov
pop
add
adc
test
mov
repz
cmp
push
mov
leave
sub
bswap
pop
xchg
xor
sub
movsb
inc
dec
pop
sub
or
icebp
lea
out
movsl
cmp
lods
sub
fstps
push
push
pop
mov
mov
or
stos
addr16
cli
sub
xor
push
cmp
adc
test
gs
mov
jne
addr16
leave
mov
lcall
iret
dec
push
xor
dec
jne
into
push
loop
inc
dec
pop
arpl
sbbb
inc
pusha
mov
add
add
lahf
cmpsb
mov
loope
outsl
xor
test
inc
or
aas
imul
test
fwait
int3
icebp
aam
jmp
xor
adc
jne
push
mov
xor
outsb
or
dec
dec
push
fiadds
inc
add
aad
or
mov
pop
mov
xchg
cmp
mov
jmp
lods
out
stos
hlt
mov
jp
mov
and
scas
xchg
and
and
xchg
inc
js
in
dec
jns
cmp
add
mov
dec
pop
repnz
jno
loop
repz
or
jmp
insb
out
xlat
or
iret
lods
imul
fidivl
add
cmc
fcoms
mov
fstps
push
cmpsb
cltd
out
xchg
movl
decl
movsl
jl
mov
js
pop
adc
pop
xchg
insb
xchg
xor
pop
mov
push
shrb
cs
lcall
jecxz
faddl
out
add
pop
addr16
lock
fld
sti
pop
add
or
bound
test
mov
scas
mov
inc
lods
or
nop
xor
mov
ret
sub
push
add
ljmp
sbb
pop
lret
jmp
in
fmulp
rep
mov
xchg
pop
pusha
sbb
ljmp
lret
mov
mov
mov
loop
cmc
add
jne
cmp
mov
and
popa
faddp
out
loopne
and
lcall
and
insl
cmp
bound
stos
fwait
push
sbb
fadds
insl
imul
jbe
nop
je
mov
cwtl
xchg
lret
leave
aam
stos
pop
mov
cli
xchg
mov
and
dec
mov
loope
pop
or
xor
dec
dec
sbb
out
mov
xchg
xor
push
cmp
adc
xchg
lods
jnp
stos
push
test
push
jbe
xor
cmp
dec
mov
aam
push
mov
push
punpckhbw
sub
sub
push
and
mov
insb
adc
fsubl
ljmp
mov
and
lods
mov
pop
sub
inc
mov
jl
cmp
xchg
dec
and
or
sbb
movsl
mov
lock
inc
jne
aad
mov
mov
hlt
jle
fisubrs
inc
xchg
adc
popf
or
xchg
in
mov
cmp
sub
xor
pop
jg
mov
push
enter
jnp
sub
mov
mov
cmp
jnp
jg
mov
add
aas
xor
aaa
or
cvtdq2ps
xor
add
push
mov
xchg
jae
sbb
stos
or
scas
test
pop
int3
mov
cmp
xor
in
dec
mov
jl
jge
mov
cmp
or
rcrl
or
out
ret
shlb
pushf
cld
adc
cld
xchg
push
adc
xchg
out
iret
jmp
lock
add
js
icebp
jno
fisubrl
stos
ljmp
push
std
jno
or
mov
aam
imul
cltd
imul
sub
shll
out
push
pop
mov
cmpsl
add
inc
inc
aad
stc
repz
idivb
call
icebp
orb
je
enter
roll
popf
sub
inc
add
sub
aad
pop
stos
insb
imul
movsb
js
aam
mov
sub
mov
push
fwait
sbb
cltd
mov
mov
lret
xchg
lret
cmp
movsl
call
lods
mov
popf
inc
or
jmp
lcall
push
jbe
jns
add
adc
xor
push
mov
inc
add
lods
insb
cli
in
adc
jg
leave
sub
and
jmp
jb
pop
and
je
lcall
sar
orl
rclb
jle
lods
js
sti
jbe
mov
fidivl
inc
mov
adc
mov
dec
out
mov
pop
jmp
fstps
data16
es
xor
jg
enter
sti
lock
pop
adc
sahf
leave
fwait
or
and
pop
xchg
mov
and
pop
adc
movsl
std
sub
jecxz
pop
xor
xchg
repz
xchg
decl
out
sbb
mov
cwtl
insb
out
mov
or
stc
addr16
vmread
aaa
add
inc
int
sbb
mov
mov
push
jecxz
cli
mov
sti
mov
mov
shll
adc
test
neg
or
jno
push
addr16
pop
push
mov
lret
loope,pn
movd
dec
clc
movl
cmp
mov
shrb
push
mov
push
pop
and
lret
sub
add
and
ds
pop
loope
add
or
pop
sub
or
iret
popf
or
mov
cmp
pop
inc
sbb
dec
push
and
inc
xchg
and
cmp
add
sub
mov
enter
stos
cmp
insl
mov
xchg
loop
pop
ss
sub
cmp
inc
add
fstpt
sub
add
aam
inc
sbb
sahf
shll
push
sbb
jb
add
shrl
in
sbb
sbb
add
adc
jbe
mov
push
dec
cmpsb
jmp
popa
cmc
dec
es
std
mov
lret
push
jmp
or
stos
loope
js
xchg
mov
fldt
imul
ret
mov
cmp
dec
or
fwait
out
add
and
ss
fcmovne
out
inc
pop
xchg
lcall
sub
cs
sti
xlat
repnz
das
ret
push
pusha
gs
inc
push
orb
iret
cs
icebp
xchg
xchg
lcall
dec
pop
and
xor
or
or
cs
aas
pusha
push
or
adc
call
idivb
rolb
xor
lahf
add
fisttpll
loopne
mov
mov
into
repz
inc
jae
pop
cmc
xor
scas
jns
add
in
xchg
dec
mov
xchg
xorb
and
enter
lcall
mov
divl
inc
ret
incl
sahf
das
push
sbb
arpl
movsb
lods
enter
xchg
std
cmp
mov
pop
sub
aad
pusha
pop
or
fdivrl
push
aaa
mov
sub
sub
jbe
imul
push
cmp
mov
push
jmp
pop
iret
ljmp
inc
fs
pop
cld
mov
mov
fistpll
mov
arpl
sub
std
lret
sbb
mov
ljmp
mov
cmp
lods
sub
das
xchg
sbb
arpl
test
pushf
xchg
cmp
loop
std
mulb
xchg
std
sti
sahf
sbb
out
xchg
jmp
jge
nop
mov
xor
push
fwait
nop
enter
lret
sub
dec
cld
ljmp
scas
enter
loop
and
adc
adc
dec
int
adc
ljmp
or
mov
mov
jge
xor
add
jb
scas
mov
cmp
adc
jl
stos
add
push
xchg
jo
ljmp
fdivs
int3
fists
lahf
cmpsl
rorb
test
inc
pop
pop
ja
mov
pop
test
lahf
leave
adc
mov
push
cmp
test
clc
pop
int
push
je
cmp
addl
ret
les
cmpsl
jle
inc
mov
sub
mov
or
sub
repnz
into
push
mov
fists
and
bound
cli
int3
mov
lcall
jmp
and
enter
jl
js
clc
mov
mov
sti
mov
daa
jecxz
xor
mov
aaa
es
xchg
push
out
scas
int
negb
shrb
jae
aaa
lcall
mov
pop
and
push
repz
roll
insb
fwait
call
nop
push
jbe
add
clc
sahf
mov
jg
mov
inc
fwait
sub
adc
push
inc
mov
nop
lods
or
addr16
loop
add
aaa
jno
mov
pushf
dec
dec
inc
jmp
pop
cmc
cmp
pop
sbb
pop
in
sbb
scas
xchg
mov
mov
fisubl
sub
dec
adc
imul
out
xchg
lds
jae
jp
pop
jnp
jp
ljmp
hlt
mov
pusha
jb
mov
push
shrl
adc
js
add
adc
mov
je
in
push
fs
xor
rcrl
sub
cmp
adc
inc
xchg
jmp
mov
int3
pop
scas
inc
jbe
sub
xor
sbb
adc
and
jbe
xlat
sub
sbb
inc
push
sti
sub
mov
daa
xor
pop
ret
shrb
mov
icebp
scas
and
icebp
pop
pop
int
loopne
cld
and
and
aaa
int
sbb
mov
lods
test
movsb
xchg
jle
int
mov
mov
push
loope
popa
xor
cmp
pop
sbb
xchg
movsl
outsb
dec
in
ret
cmp
cmp
rol
pop
sub
xchg
cmp
sbb
mov
sub
hlt
add
jo
fwait
adc
and
mov
aaa
xchg
add
jbe
mov
adc
int
cmovp
push
pusha
into
aad
pop
imul
xchg
lock
lahf
sbb
in
mov
xchg
or
jbe
mov
xor
stos
fs
ss
and
push
dec
in
cltd
xor
push
jmp
test
es
popa
cmp
ljmp
mov
clc
fstp
lret
pop
inc
adc
lods
insl
mov
sarl
ds
andl
repz
xlat
mov
fbstp
in
sbb
add
mov
xor
mov
movsb
sub
mov
xor
adc
add
push
pop
or
cs
jl
jg
hlt
out
sbb
popa
int
icebp
int3
mov
das
ljmp
jns
or
inc
mov
sbb
out
sbb
mov
or
xchg
xchg
shll
test
cmp
ljmp
cmpsb
hlt
pushf
cmpsb
jp
pop
dec
xor
aas
imul
bound
lahf
lock
xchg
mov
aas
add
imul
jb
jl
mov
dec
lods
loopne
mov
pop
add
mov
mov
push
ss
push
shrl
popa
les
loopne
fsts
test
jmp
adc
push
push
sbb
push
fstpt
pop
pop
or
ret
xchg
repz
add
out
andl
fs
push
outsl
ja
lods
test
bound
adcb
stos
hlt
fildll
addr16
outsl
xchg
adc
jl
inc
enter
add
call
xchg
inc
into
xor
mov
loope
pop
adc
jns
sub
xor
out
scas
push
adc
insb
mov
mov
xchg
fildl
mov
jbe
xor
xorb
or
sub
cmp
xlat
adc
fimuls
xor
movsb
mov
sbb
inc
cmpsl
in
js
mov
shl
fwait
inc
mov
mov
dec
sub
adc
dec
pusha
adc
cmp
js
data16
vcvttpd2dqx
loope
fs
mov
push
push
frstor
or
lods
xor
pop
inc
fdivl
jne
mov
imul
into
sbb
or
adcb
lahf
sub
xchg
es
mov
push
stos
mov
cmpsb
lret
fmuls
mov
jno
scas
jp,pn
pop
pop
add
enter
cmp
or
cs
mov
iret
pop
fwait
inc
mov
inc
xlat
fisttps
out
out
xchg
pop
xchg
inc
dec
daa
fadd
notb
or
sahf
or
hlt
adc
ja
test
outsb
jb
pushf
push
mov
dec
sbb
jne
cmc
cmp
decb
sub
gs
inc
enter
cmp
cmp
jmp
xor
bound
xor
or
outsl
imul
stos
jmp
xchg
jb
dec
mov
loop
aam
cmp
mov
push
nop
adc
ljmp
insl
ja
fdivrp
push
push
mov
jle
jbe
daa
xor
mov
xchg
mov
add
adc
aas
push
push
orb
cmpsl
in
adc
cmp
daa
out
fwait
aad
or
dec
pop
das
addb
rcr
outsl
gs
imul
xchg
mov
push
cmp
pop
push
cmp
rorb
fs
ret
add
rorl
std
das
cmpsb
out
mov
and
push
jle
mov
push
push
das
stos
add
pop
adc
and
or
xor
fsubl
xchg
sub
mov
pop
lret
jg
iret
or
adc
loope
sub
mov
add
pusha
mov
pop
les
add
cmc
mov
sbb
out
inc
test
sub
xchg
sarl
insb
sub
out
enter
lods
repnz
das
scas
aad
sub
test
or
sbb
cmpsl
lcall
sahf
insl
or
dec
fnstenv
and
adc
enter
ret
testl
or
bound
xor
fwait
sbb
fcmovu
mov
iret
stos
jmp
push
adc
lahf
loope
cs
xlat
lock
mov
lret
mov
fiadds
mov
push
sbb
cmp
scas
jb
pop
cmp
enter
test
imul
inc
fimull
xor
mov
ss
movsl
fsubr
push
lds
push
sarl
jns
push
and
aaa
add
mov
jo
jnp
mov
cmp
sbb
dec
jmp
sub
shll
es
push
add
xor
inc
aaa
mov
inc
call
lahf
ret
cmp
sbb
fisubrs
stc
and
sete
mov
call
stos
seto
xlat
outsl
sbbb
fldcw
aas
jl
fs
outsl
inc
icebp
mov
or
jmp
push
popf
psubb
jge
scas
xor
inc
inc
fistpl
inc
mov
xchg
fwait
xlat
and
cmc
mov
adcb
jne
ja
push
icebp
fbld
es
xor
xor
cmc
lret
or
jo
mov
call
or
pop
mov
ds
loopne
clc
mov
xchg
mov
lods
lods
mov
roll
je
jg
jge
and
aas
push
lock
mov
xchg
mov
lds
or
in
das
inc
and
lcall
in
out
repnz
mov
mov
loop
int3
cmp
mov
and
and
push
test
push
shrl
mov
divb
ds
pushl
mov
pop
mov
cmc
push
movsl
loopne
mov
addr16
mov
sub
ss
lods
fisttps
sbb
sub
sarl
test
rorb
mov
out
mov
test
or
push
insb
stos
pop
in
aas
add
cmp
inc
js
dec
lahf
mov
mov
pop
mov
sti
and
add
movsb
add
loope
cmpsl
xchg
lret
adc
pop
cmp
pop
push
adc
xchg
jp
cs
repz
out
divb
push
ss
fdivl
fists
fsts
cmp
inc
pop
lret
mov
push
sar
mov
xor
mov
xlat
mov
aas
cmp
push
inc
jbe
push
cli
lock
jns
sub
testb
dec
in
pop
sbb
fcomps
pusha
cmpsl
dec
push
je
lcall
sub
xor
clc
cwtl
jmp
pop
stos
pusha
int3
fwait
imul
negl
and
inc
sub
imul
testl
movsl
aad
rcrl
dec
sub
scas
push
les
popf
jo
jo
aas
in
push
pop
mov
and
mov
mov
inc
sbb
das
ljmp
shr
pop
fdivr
das
icebp
xor
negb
std
ret
jb
mov
or
sub
cmp
pop
ret
adc
adc
adcl
sub
xor
mov
cmp
add
fcmovnb
jbe
sub
jmp
dec
jae
test
dec
cwtl
dec
sbb
pop
iret
ret
lds
cmc
mov
int
ret
sub
test
or
push
add
inc
xchg
sbb
aad
nop
jle
mov
xor
int3
cld
test
cmpsb
iret
outsl
hlt
and
adc
push
xor
push
sti
mov
lock
fcmovnbe
pop
icebp
push
lahf
sub
dec
insl
pop
pop
mov
cli
gs
jp
push
cli
cmp
dec
inc
in
mov
bound
pop
cmp
adc
iret
jl
xor
shll
pop
lea
xchg
adc
cs
imul
dec
pop
lret
jle
repz
inc
jae
rolb
sar
orl
loopne
outsl
fistpl
les
adcl
push
pushf
jmp
jne
insb
xchg
ss
and
es
cmc
cmp
icebp
and
and
sub
inc
mov
ss
dec
scas
or
lds
je
jne
push
jne
mov
sub
addr16
icebp
cmp
addr16
or
clc
out
add
dec
sti
inc
nop
in
push
or
and
rcl
movsl
push
test
mov
inc
xlat
sahf
xchg
rcrb
and
ds
repz
out
fbld
pop
in
and
or
add
xchg
test
jecxz
sbb
andb
bound
lods
stos
mov
sbb
adc
rol
stos
into
stos
fs
call
pop
data16
mov
cld
cli
xor
jle
xchg
mov
insl
enter
dec
mov
adc
push
cli
imul
imul
mov
lahf
mov
repz
scas
sbb
shlb
cmp
mov
xor
ja
in
cmc
outsl
fistpl
push
repnz
mov
sti
test
inc
addb
or
div
xor
imull
mov
pop
and
add
xchg
mov
in
or
sarb
rcll
jle
stos
in
and
out
cmp
lret
and
addb
xor
push
stos
xchg
mov
xchg
dec
sub
or
faddl
or
lods
ljmp
jecxz
cld
daa
aam
sbb
in
mov
mov
sub
aam
push
xchg
shr
stos
jl
rcl
jecxz
ret
add
pop
xlat
push
xchg
imul
xchg
sbb
pop
push
addr16
flds
dec
pop
fdecstp
adcb
outsl
inc
mov
mov
inc
repz
jbe
jge
sbb
fs
push
mov
popf
test
add
mov
mov
les
inc
movsb
rol
cld
fsts
xchg
xchg
adcl
scas
cmp
in
cmp
add
in
filds
imul
in
hlt
sbb
out
or
sbb
sbb
pop
sahf
dec
rolb
mov
ficoms
je
adc
fidivrs
pop
mov
pop
push
pop
and
clc
mov
xchg
push
xchg
outsl
inc
cmp
or
js
sub
cmp
sahf
mov
enter
loop
loop
or
xchg
sbb
les
sbb
cmp
mov
pop
push
dec
divl
andb
test
mov
mov
mov
cmp
mov
mov
adcb
adc
or
daa
jg
push
insb
adc
hlt
mov
loope
test
outsb
lods
sub
xor
mov
cmp
sub
cmp
xor
and
or
pop
xchg
cmp
mov
pop
or
outsl
addl
xchg
popa
sti
pop
add
in
lds
mov
adc
inc
ds
mov
lock
push
sbbl
mov
inc
stos
or
and
fs
inc
lods
idivl
idivb
insb
mov
pop
mov
cmc
cli
cli
sbb
jo
xor
add
push
stos
fwait
mov
and
jmp
xor
int3
fwait
icebp
stc
int3
push
mov
outsl
adc
jb
cwtl
dec
sub
ds
pop
repz
jo
imul
repnz
and
dec
xor
lock
out
cltd
sbb
and
fcompl
js
fwait
inc
mov
sub
mov
xchg
lcall
out
push
in
repz
adc
movsb
arpl
xchg
jecxz
mov
fisttpll
aad
xor
and
push
movsb
daa
dec
cld
inc
or
ret
orl
mov
test
aaa
xchg
aaa
mov
cmp
insl
hlt
sbb
cmpsb
lret
xchg
jmp
sbb
frstor
push
xchg
xor
stos
dec
inc
cmp
cmp
aad
aam
mov
out
insl
dec
hlt
in
scas
popf
sub
push
mov
dec
push
movb
shl
ret
xchg
pushf
inc
mov
mov
sub
filds
outsl
or
mov
ss
dec
neg
sbb
pop
and
mov
inc
ret
mov
sub
js
subl
in
sub
sub
add
mov
push
mov
mov
icebp
mov
jns
rcrl
jae
test
int3
das
fisubrs
mov
mov
dec
int
push
add
mov
cltd
es
fcmovb
nop
orb
jnp
icebp
fwait
sub
stos
pop
inc
je
pop
rorb
loope
lahf
pop
sbb
aad
xchg
sti
fs
jne
adc
je
mov
adc
inc
jne
push
outsl
int3
int
sub
inc
or
cmc
test
jg
icebp
sub
cmp
punpckhdq
xor
cmp
pop
pop
cltd
xchg
stos
add
repz
pop
push
xor
das
inc
pop
lods
and
hlt
loopne
pop
lods
into
enter
and
outsl
gs
xchg
insl
fwait
pop
addr16
push
push
stc
sub
push
add
je,pt
in
jp
ret
repz
pop
mov
cltd
data16
lret
cmc
rolb
cmp
or
es
enter
insl
inc
sbb
enter
sub
out
push
std
pop
insl
sub
mov
loopne,pn
bound
add
sar
mov
jg
stc
sbb
sub
ret
add
fisttpll
pop
fistps
pop
daa
outsb
push
mov
enter
loopne
cmp
dec
ret
xchg
aas
and
adc
test
mov
and
enter
inc
xchg
pop
push
lea
cmp
mov
adc
nop
ja
mov
sahf
mov
or
aad
cmp
insl
stc
fstpt
xor
ljmp
or
adc
test
cs
jae
out
out
test
jo
sbb
xor
sbb
pop
sub
ss
orl
addr16
aaa
insl
mov
push
lods
sub
cmp
stos
mov
std
mov
or
cmp
push
add
mov
jnp
aas
sub
jno
mov
shlb
mov
or
enter
jbe,pn
jge
popa
and
dec
dec
inc
adc
dec
ljmp
cs
repz
scas
xlat
popf
lds
push
and
stc
push
ret
dec
push
inc
mov
sbb
imul
bound
push
andl
loop
nop
mov
cli
movsb
xchg
push
scas
lds
and
jns
add
mov
fcmovne
xor
sub
pop
scas
cmpsl
and
in
xchg
das
roll
fidivs
and
pop
sti
call
arpl
faddl
sub
sbb
xchg
call
imul
mov
fidivl
pop
or
sub
add
cwtl
andb
test
scas
clc
leave
lretw
rorb
mov
aad
in
sbb
pop
int
lret
mov
dec
popl
inc
out
in
cmp
xlat
pushf
add
cltd
mov
inc
cmp
cmp
pop
out
xchg
inc
sub
adcl
pop
frstor
sbb
scas
cmp
rorl
jo
decb
dec
nop
cwtl
mov
in
fucomi
cmovno
ret
jg
sarb
and
dec
push
aam
cmpsb
inc
std
clc
pop
adc
jmp
or
pop
and
push
ret
mov
pop
and
cmp
mov
jl
jmp
popf
cmp
and
pop
xchg
test
pop
insl
jg
andb
leave
ret
pop
xor
dec
jo
mov
cmp
and
xor
ficompl
and
mov
outsb
data16
setle
or
lods
jl
imul
test
movsb
outsb
pusha
fbstp
dec
shlb
gs
sub
adc
xor
popa
push
dec
cmpsl
mov
jne
add
cmpl
nop
sub
movsb
pop
adc
insb
dec
xchg
jle
jge
hlt
lods
add
or
dec
iret
or
lock
jo
sub
outsl
imul
and
sahf
insb
test
outsl
xor
mov
in
xor
mov
test
lcall
xor
das
cmp
pop
pop
ret
jno
out
adc
movsb
xchg
inc
loope
mov
or
gs
rolb
push
shll
fistpl
xchg
inc
insl
mov
out
lods
mov
shr
test
out
cmp
faddp
and
not
mov
call
push
or
add
sub
xlat
cmp
outsb
popa
out
cld
xchg
sub
jle
daa
mov
jne
xchg
test
adc
mov
loop
cmp
xor
dec
cmpsb
dec
xchg
out
scas
aam
lock
xor
shlb
popf
insl
out
xchg
mov
imul
loopne
aad
movsb
add
outsl
fwait
les
cltd
or
pusha
sbb
aad
jp
mov
in
push
pop
inc
dec
lock
pop
in
jae
inc
dec
call
jecxz
stos
jp
pop
mov
inc
leave
aaa
sub
sub
xor
data16
mov
cmp
mov
test
in
aam
mov
sti
push
push
out
sbb
stos
cmp
and
sbb
xlat
mov
sub
push
and
mov
jb
lods
lret
or
rorb
dec
shl
adc
add
scas
pop
xor
fnstcw
adc
stc
add
pushf
std
cltd
cmpsb
rcl
jl
aad
out
mov
lods
and
push
loope
ret
xchg
lds
sub
fdivrs
jne
or
jno
in
add
cmpsb
gs
mov
std
aad
mov
mov
xchg
cmp
mov
jecxz
mov
xchg
mov
cmp
xchg
xchg
mov
aad
inc
push
out
imul
sub
imul
xor
push
dec
aad
add
mov
jle
inc
imul
pop
les
sub
xchg
mov
pushl
pop
or
outsl
lahf
cmp
sub
dec
mov
sbb
xchg
cmp
fwait
mov
orb
sub
nop
mov
jne
shl
cwtl
lods
sar
cld
mov
imul
xchg
stos
aad
out
fs
add
push
test
icebp
enter
xchg
test
lcall
sub
xor
out
adc
jmp
mov
out
mov
int
mov
add
mov
cmp
imull
sbb
sub
cmp
js
jb
inc
push
lcall
cmp
mov
mov
sahf
shlb
and
and
mov
ds
xchg
mov
lods
xor
scas
mov
and
lds
pushf
sarb
sub
lods
dec
lods
and
mov
insl
jp
jo
lock
clc
mulb
xchg
jno
jne
xor
scas
test
mulb
dec
jle
jns
push
add
jg
add
fwait
sarl
mov
mov
lods
xchg
loop
pop
mov
test
jo
pop
add
push
or
xchg
sti
sbb
inc
pop
aam
std
loop
push
scas
sub
jbe
pop
fldcw
add
dec
out
mov
and
ret
cmp
xor
fdivrl
pop
adcl
lods
cmpsl
mov
push
in
jl
loopne
push
push
sbb
cwtl
out
or
jne
lahf
out
test
lods
jno
gs
out
dec
daa
mov
xchg
push
xchg
int3
jp
pop
sbb
aad
mov
mov
jae
es
insb
push
fisubrl
push
or
and
fbld
sub
xchg
bound
in
subb
jmp
mov
push
scas
jne
pop
jns
sahf
xor
lds
and
cwtl
mov
dec
and
test
stos
mov
imul
insl
mov
dec
cmp
jle
or
in
std
scas
daa
test
xor
cmc
or
insb
xchg
in
add
add
cld
jns
jae
aas
push
stc
inc
ds
dec
inc
out
mov
jmp
xor
lods
and
cmp
adc
mov
mov
imul
pop
mov
les
cmpsl
rclb
sbb
push
pop
into
clc
xor
shlb
cmp
pop
sub
dec
aaa
sub
adc
cwtl
jle
mov
cltd
add
pop
adc
jae
popf
aam
inc
xor
or
mull
mov
push
arpl
outsl
or
popf
push
xchg
or
imull
jmp
add
xor
mov
push
iret
movsb
arpl
mov
and
adc
xlat
or
ss
jge
push
dec
loopne
sub
cwtl
pushl
insb
mov
leave
call
adc
bound
int
out
test
adc
jg
dec
and
inc
mov
xor
mov
xchg
or
fldl
adc
stc
clc
cmp
add
mov
sub
pusha
lea
into
cmp
add
in
inc
mov
xor
xor
push
mov
fildl
out
aas
cltd
mov
loope
jns
push
pop
dec
cli
pop
mov
sbb
jo
push
pop
cmp
mov
int
adc
xchg
data16
js
mov
and
out
push
xchg
mov
pop
adc
rol
addl
mov
out
adc
movb
enter
jnp
movsl
and
push
jne
sbb
loopne
push
enter
and
mov
jae
inc
add
add
pop
stc
je
mov
dec
cmp
and
test
sbb
sbb
pusha
xor
mov
mov
sub
roll
lods
shl
xor
mov
stos
xor
test
pop
ss
lock
dec
leave
push
push
out
adc
cld
lret
rclb
jge
adc
arpl
xor
add
push
pop
adc
lcall
cmp
xchg
sbb
pop
cmp
aas
stos
dec
inc
xchg
jmp
out
sub
inc
pushf
dec
subb
mov
pop
cmp
gs
sbb
xlat
mov
repz
inc
add
fld
dec
xor
cmpsl
imul
scas
mov
pop
xchg
ret
mov
sbb
pop
inc
cmp
ret
lock
mov
out
inc
add
sbb
movsl
lahf
test
ds
lea
sbb
cmpsb
push
pusha
mov
mov
lea
fmull
push
add
jo
test
movsb
cmp
add
sbb
jle
jo
mov
clc
push
jns
das
cs
mov
jmp
div
adc
std
sub
rorl
xor
movsb
xchg
cmp
xor
push
aad
out
xor
in
mov
fs
popa
cmp
push
push
jae
xchg
jb
outsb
mov
das
js
push
xchg
lret
outsl
dec
rolb
sahf
fwait
mov
mov
inc
andl
cld
fwait
imul
and
push
jno
fwait
loope
fidivrl
cmpsl
inc
ljmp
adc
push
in
push
push
out
outsl
enter
mov
mov
jb
pushf
fsubs
insb
dec
push
pop
pop
lret
push
or
add
or
loop
shl
dec
pop
dec
and
jmp
aaa
xchg
jae
sbb
movsl
mov
shld
int
stos
add
mov
adc
popf
inc
push
mull
rcrl
pop
test
pushf
aaa
xchg
in
jb
sub
jno,pt
shll
outsb
lret
mov
cmpsb
das
fidivrs
loopne
out
pop
decl
pop
lods
dec
mov
cld
lcall
or
in
sete
adc
cld
cmpsb
mov
cmp
push
mov
mov
test
popa
scas
add
int3
and
cmp
fldl
adc
loope
int
xor
mov
fildll
repz
popa
mov
mov
xchg
hlt
mov
fs
fwait
xchg
cmp
subl
fstps
xor
mov
mov
les
lods
or
mov
jae
mov
rcll
fsubs
dec
out
jne
rcll
push
mov
jge
sarl
sub
mov
pushf
scas
shll
lock
das
jmp
fimuls
aaa
sbb
push
dec
xchg
xchg
dec
int
fidivl
mov
aas
pusha
ss
fbld
popa
je
adc
xor
ret
in
xchg
dec
pop
mov
mov
sub
and
jge
test
popf
in
inc
mov
dec
insl
lea
sbb
popf
inc
pop
lds
in
test
aad
scas
cmp
mov
adc
and
push
in
mov
dec
fdivrl
adc
sub
or
adc
imul
inc
dec
mov
subb
sarl
daa
hlt
out
cltd
fdivrs
cmpsb
les
inc
add
mov
jl
fisttpll
jecxz
ljmp
popa
imul
les
pop
xchg
pop
pop
sub
sbb
cmp
hlt
inc
cmc
js
pop
jns
pop
in
mov
jns
les
sarl
lcall
push
sbb
fidivs
cli
shlb
stc
rolb
loopne
jo
nop
push
push
repz
outsl
mov
subl
push
icebp
scas
push
fdivrs
das
mov
dec
frstor
aad
adc
shl
push
jmp
popa
mov
stos
mov
inc
add
pop
cmpsb
stc
les
sub
inc
pop
or
stos
int3
fiadds
push
xchg
ret
pop
mov
xchg
mov
sbb
fidivs
adc
sbb
cltd
dec
xchg
add
out
sub
mov
dec
arpl
aad
dec
cmp
aam
add
js
test
xchg
ret
lret
leave
mov
cmp
dec
xchg
ljmp
mov
push
shr
dec
inc
mov
testb
mov
es
mov
fnstsw
int
shll
dec
or
add
mov
xchg
ljmp
gs
fadd
inc
sbb
add
pop
xor
add
dec
stos
je
daa
lcall
mov
mov
enter
add
pop
jns
mov
shrb
push
imul
add
inc
outsb
test
repnz
pop
repz
mov
push
inc
sbb
insl
adc
in
test
xchg
daa
sbb
mov
je
mulb
push
out
repz
fsubl
hlt
mov
mov
jg
push
and
sti
pop
insb
or
xchg
mulb
fisubrl
inc
insb
xchg
mov
fdivrs
and
push
std
scas
ds
bound
stos
xchg
mov
out
into
mov
repz
and
pop
jge
ret
jo
sub
mov
pushf
mov
cltd
mov
pushf
inc
out
aad
inc
test
imul
ja
cmp
inc
jnp
test
cs
pop
jae
mov
jp
lea
cwtl
sub
xchg
xor
lds
mov
jo
test
aaa
add
mov
dec
cmp
sub
dec
xor
adc
cmpsb
pop
pop
repz
mov
pop
pop
mov
test
xchg
jmp
jno
inc
pop
push
adc
jmp
cmp
jns
bnd
pop
add
cmp
idivl
arpl
xor
cmc
cmp
or
cmc
scas
push
xor
iret
inc
imul
aaa
es
fdivrs
lcall
mov
and
mov
fcompl
or
pop
mov
lods
std
ds
fisttpl
adc
xor
out
jmp
xchg
pop
loope
sub
sbb
xchg
sti
leave
fildl
ja
cmpps
ja
int3
sub
loop
out
aaa
xchg
pop
adc
sub
insl
inc
or
sub
sti
sarl
int3
cmp
or
mov
cmp
das
and
adc
stos
shll
lods
sarl
jnp
cli
sbb
mov
push
or
add
jp
sub
leave
add
test
push
je
sbb
push
ljmp
mov
aas
insb
push
jae
xor
mov
cmp
jl
inc
mov
not
push
cmc
push
dec
shrl
mov
popf
mov
ss
mov
aas
or
lods
mov
outsb
or
fnstsw
add
cmpsb
cmpsl
xchg
push
fidivl
in
orb
dec
mov
push
jg
mov
roll
cmc
mov
and
stos
lcall
xchg
std
cmp
loopne
push
adc
fcomip
test
in
fildl
int
adc
dec
stos
dec
int
cmp
test
mov
int3
out
xor
add
push
into
mov
inc
inc
idiv
sbb
sbb
jmp
test
push
fwait
sub
pusha
jns
bound
pop
adc
xor
dec
jmp
jne
test
push
mov
adc
sub
push
mov
jecxz
dec
xchg
pop
pushf
addr16
lea
sub
out
xor
addl
cwtl
jnp
inc
inc
xor
push
sbb
inc
inc
xor
addb
cmp
insw
scas
shll
mov
inc
jnp
dec
or
int3
dec
imul
mov
cwtl
jns
sub
movsb
test
xchg
dec
cmp
enter
hlt
ret
hlt
dec
ja
push
arpl
push
jecxz
jp
arpl
xor
insl
xchg
movb
jnp
cwtl
sub
pop
adcb
out
dec
ret
movsl
fcomi
fs
sti
repnz
pushf
mov
fidivrs
xlat
xchg
sbb
xchg
mov
cli
aad
scas
je
mov
push
data16
subl
ja
push
jl
stos
sbb
jns
jno
stc
mov
sbb
xchg
repz
add
push
arpl
loope
test
sbb
subb
inc
jmp
pop
jge
loop
push
push
ljmp
stc
mov
sahf
icebp
sub
stos
cmp
mov
inc
sbb
jle,pt
ds
push
xchg
int
imul
cltd
sub
cmp
jae
lds
stc
push
pop
aaa
iret
ret
call
add
dec
mov
push
push
popa
mov
sahf
cli
daa
inc
lcall
xchg
or
mov
and
inc
pop
add
lea
mov
aad
lret
sbb
add
mov
inc
insl
fs
inc
jle
ljmp
ljmp
mov
dec
add
lock
cli
sbb
push
mov
jmp
mov
sbb
sub
insb
insb
gs
mov
or
push
add
jo
add
xchg
int3
mov
jo
mov
jp
les
or
pop
xor
call
shrb
shrb
xchg
mov
jae
lret
adc
rcl
sti
mov
pop
bound
inc
call
sub
and
sbb
or
insl
loope
adc
dec
pop
xchg
xchg
pop
dec
arpl
mov
test
dec
and
daa
rolb
test
lret
aas
sub
or
adc
shlb
pop
jecxz
mov
push
adc
push
cmpsl
icebp
lret
push
mov
push
mov
sub
pop
dec
jne
pop
gs
enter
aam
or
lock
push
js
repz
xchg
cmp
inc
lock
aaa
jmp
xor
sub
loopne
mov
loope
xor
lahf
jecxz
gs
xchg
add
dec
xchg
push
clc
xor
push
fdivl
push
push
bnd
lods
fimuls
cmp
jecxz
in
fsub
mov
hlt
or
push
cmc
dec
pop
xchg
addr16
sbb
repnz
xchg
jle
adc
sbb
daa
pop
mov
mov
mov
sbb
jnp
push
std
lcall
lahf
repnz
in
mov
hlt
ret
and
je
imul
int
nop
add
adc
mov
mov
mov
stos
or
aaa
ds
enter
fwait
and
shll
cmp
fdivr
sbb
adc
ret
add
jbe
or
add
fiaddl
inc
xchg
sarl
shll
enter
mov
mov
lret
fisttpll
jg
cli
mov
mov
inc
cmp
nop
pop
sub
rcll
add
lret
pusha
and
add
dec
jle
jge
add
and
sbb
subl
fisubrs
sbb
out
cltd
scas
popf
sub
jbe
cmc
jmp
or
mov
push
scas
dec
sub
mov
xor
lcall
add
push
sub
call
jecxz
fs
dec
inc
jae
sbb
add
push
mov
int
xchg
push
leave
jbe
jbe
push
loop
xchg
add
dec
gs
cmp
dec
adc
add
cli
sbb
jbe
xor
das
popa
mov
enter
test
push
scas
dec
mov
dec
or
jmp
sub
mov
in
sbb
leave
sub
aas
insb
js
xchg
mov
clc
stos
cmc
pusha
dec
jo
in
ljmp
sub
out
cwtl
lods
pop
xchg
push
push
mov
xor
cs
cmp
ror
decb
jnp
les
sbb
jne
mov
iret
push
out
lahf
les
clc
push
popa
clc
push
push
sbb
adc
lahf
sbb
std
ret
dec
aad
dec
popf
jbe
mov
icebp
jne
xchg
arpl
push
icebp
dec
in
int3
lock
rcrl
xor
push
cmp
or
push
data16
frstpm(287
movsl
push
sub
jbe
sbb
inc
out
out
sbb
jno
daa
pusha
test
pop
adc
inc
jns
cmpsl
xlat
test
cltd
rorb
stc
or
xchg
sahf
add
xchg
mov
outsl
leave
pop
in
jmp
scas
mov
sbb
test
mov
out
jmp
into
or
cmp
xchg
ret
jae
pushf
jo
push
mov
enter
mov
mov
fists
test
je
xchg
mov
mov
decb
dec
adc
int3
push
mov
mov
jae
jl
add
xor
pop
xlat
lret
data16
sbb
into
rcrb
xor
neg
ss
xchg
jns
cmp
inc
popa
mov
xor
xchg
and
movb
scas
stc
leave
and
cmp
arpl
inc
popf
mov
mov
lret
inc
and
xlat
xchg
dec
and
jmp
dec
mov
push
inc
cmp
cmp
add
sub
cld
pop
jbe
pop
inc
jg
mov
stos
popf
jbe
shrl
mov
push
mov
xchg
sub
cmpsl
outsb
cmpsb
cmp
dec
mov
cs
stos
xor
cmpsb
pop
and
lcall
repnz
mov
mov
aad
sbb
mov
orl
lods
push
pushf
push
cmp
sahf
jecxz
cmpl
or
lds
cltd
mov
cld
inc
sub
arpl
lret
icebp
inc
jle
pop
dec
movsb
dec
push
negl
test
stos
int3
sbb
or
fcmovnu
xchg
pushf
frstor
xchg
jle
orl
push
hlt
jmp
cmp
fsubrl
pop
fsubrl
cmp
mov
mov
icebp
out
and
adc
sub
outsb
push
out
das
add
xchg
jecxz
out
loopne
pop
frstor
adc
cli
and
shlb
shll
push
mov
mov
rcrl
mov
stc
mov
xchg
movsl
loopne
cmp
adc
shll
xchg
outsl
movsb
jmp
daa
pusha
push
lods
sti
mov
inc
push
dec
insl
imul
cmp
hlt
adc
sbb
popa
popa
mov
jecxz
fstl
arpl
rcl
jl
sti
int
outsl
and
pop
aam
sub
test
inc
dec
mov
mov
iret
stos
pop
ficoms
out
iret
fsubl
xchg
lods
jge
push
push
mov
mov
aas
fstpl
insl
call
loopne
cmp
sbb
or
lcall
sub
and
mov
mov
and
lcall
sub
nop
aad
xchg
shrb
rcr
inc
lahf
mov
fwait
in
xchg
fists
pop
scas
pop
shll
dec
push
addr16
jno
loope
push
xchg
push
movsb
inc
and
jecxz
aad
sub
jae
mov
cmpsb
and
mov
sub
and
pop
test
inc
push
jno
imul
push
push
mov
mov
cmp
jnp
adc
xchg
pop
dec
sub
and
iret
popf
lods
aas
cmp
incl
dec
and
stos
popf
scas
push
jge
xchg
mov
sahf
or
jnp
pop
icebp
cmpl
push
inc
outsl
andb
fstl
and
fistpl
and
lcall
ror
imull
in
dec
add
mov
add
push
cmp
inc
pop
or
repnz
sarb
cmp
roll
inc
or
pop
mov
mov
push
out
ljmp
int3
xchg
xchg
mov
jp
add
fisttpll
xor
mov
pop
idiv
ficomps
rolb
repz
sub
fldcw
xor
repnz
jg
add
lret
ret
sbb
loop
pop
mov
dec
mov
pop
insl
or
xchg
hlt
enter
push
test
add
xchg
dec
pop
inc
cmpb
mov
stos
cmp
test
xor
dec
imul
dec
ds
out
and
in
aas
ljmp
daa
push
insb
push
cmpsb
popf
add
ss
repnz
cmpsb
inc
loop
mov
les
dec
andl
sub
in
jge
mov
fdivrl
sub
mov
popa
rcl
loopnew
mov
pop
xchg
cmpl
fsub
mov
jg
sarl
stc
sbb
add
xorl
push
outsb
jb
shlb
mov
mov
ficomps
dec
jb
cmp
jle
mov
xchg
arpl
iret
hlt
cwtl
mov
ret
arpl
movq
jae
arpl
popf
sub
dec
imul
jle
jns
add
add
cmp
push
jl
pop
jb
data16
add
lock
mov
push
add
xchg
xlat
xchg
mov
mov
mov
mov
sahf
mov
sbb
cmp
loop
sbb
loop
mov
xchg
pop
sarl
test
xor
call
sbb
fldenv
mov
sti
sahf
imulb
mov
pop
adc
ljmp
je
shlb
test
in
add
inc
sub
jno
repnz
inc
cmpsb
aaa
pop
push
rorb
mov
mov
jmp
jle
jnp
jmp
ret
loope
insb
jmp
fucomip
jmp
push
cmc
sbb
push
in
jb
xchg
aam
hlt
popa
in
mov
fdivl
and
mov
fsubl
ja
and
mov
bound
sbb
or
xchg
jmp
ss
push
loope
mov
xchg
test
aam
add
fimuls
push
xchg
mov
jns
into
sar
adcb
rcll
addr16
mov
repnz
mov
add
and
push
xlat
jb
data16
push
daa
inc
xchg
jmp
xor
jo
ss
jb
mov
loope
fwait
stos
ret
aad
add
inc
xor
rclb
inc
movl
jmp
bound
ret
dec
jbe
mov
xlat
push
dec
mov
pop
xchg
sub
mov
icebp
mov
sbbb
dec
push
pusha
dec
mov
fsubl
jbe
sarl
mov
ljmp
jp
fdivl
mov
movsb
lahf
pop
popa
mov
lea
call
mov
sbb
mov
not
test
test
stc
and
add
mov
test
popl
xchg
xchg
popf
pop
add
or
out
pop
adc
sub
pop
xchg
inc
pop
add
mov
add
mov
je
mov
xchg
cmp
mov
ret
addr16
jmp
pop
in
orb
pop
mov
lcall
cmp
pop
ficoml
enter
cmp
jbe
je
mov
call
bound
or
aam
repz
aad
and
jbe
ds
xor
in
xchg
jp
inc
pop
test
ss
aad
nop
arpl
mov
mov
out
adc
shlb
cmc
cld
sub
xor
sbb
mov
cs
mov
inc
dec
dec
mov
sbb
adc
stos
inc
push
loop
pop
dec
enter
arpl
fidivs
add
mov
or
subb
aaa
adc
mov
fcmovne
cmpsl
xlat
andb
mov
xor
mov
push
inc
add
lea
mov
in
popa
cmp
pop
int3
lods
pop
decb
ds
imul
out
stos
dec
mov
add
repz
sbbl
divb
sbb
and
xorb
insl
sbb
in
daa
repnz
shlb
xchg
adc
stc
adc
or
mov
mov
ret
test
or
rcrb
or
lea
inc
sub
and
out
shlb
ret
popa
addr16
fwait
jge
loope
rcll
iret
hlt
popf
mov
icebp
push
mov
push
stos
aas
push
idivb
mov
sbb
or
push
jge
jecxz
enter
cmp
andl
sub
cwtl
fsubrs
jb
inc
ret
insl
xor
mov
add
jno
rcrb
adc
inc
or
xchg
and
notl
sub
xor
notb
jp
test
imul
fcompl
inc
push
aad
jno
cltd
pop
adc
fwait
mov
push
mov
pushl
dec
cmp
bound
pop
mov
gs
jp
fists
add
mov
fdivr
int3
data16
xchg
xchg
dec
ret
mov
ljmp
push
push
mov
cltd
insl
pushf
mov
xor
aaa
mov
dec
aaa
sub
sbb
or
ja
xlat
lret
pusha
jp
adc
push
lret
lods
sbb
xchg
jle
aaa
adc
cmp
dec
mov
mov
aaa
mov
shr
add
xchg
sub
popa
leave
imul
repz
mov
out
sbb
fs
dec
mov
les
cli
gs
sub
int3
sub
mov
and
jge
adc
mov
mov
mov
out
jnp
hlt
inc
xchg
stos
sub
fcmovnu
sbb
xchg
out
push
sub
dec
out
cmp
pop
and
mov
xchg
sub
cmp
dec
fcmovu
dec
mov
loope
add
push
xorl
adc
movsb
out
jo
sbb
je
addr16
in
ret
in
inc
push
popa
dec
out
insb
pop
or
test
arpl
pusha
push
test
and
xchg
mov
or
jge
ffreep
gs
call
in
cmp
xchg
cmp
fs
mov
mov
xchg
mov
and
movsb
push
mov
cld
dec
ret
jns
inc
push
add
and
mov
cs
xchg
arpl
sti
int3
push
bound
jmp
loope
ret
mov
mov
jg
loope
test
push
call
push
stc
xlat
ret
stc
mov
pop
mov
imul
mov
mov
mov
mov
jecxz
lcall
sar
jecxz
jg
dec
adc
sub
inc
xchg
add
insl
testb
sti
jns
mov
test
sub
xchg
and
out
sub
jnp
das
iret
push
aas
or
loop
push
bnd
sbb
in
adc
leave
xchg
lods
dec
mov
inc
scas
out
fsubl
in
sbb
cmpsl
mov
sub
enter
inc
xor
adc
adc
pop
inc
sub
stc
push
push
aas
xchg
ds
xchg
int3
testb
lret
pop
pop
lds
scas
sbb
cmpsl
fwait
mov
mov
xor
pusha
xchg
scas
jno
mov
jl
inc
lods
or
pop
aaa
ret
je
mov
imul
adc
push
dec
cmp
mov
and
aad
rcrb
dec
daa
mov
mov
pop
cwtl
mov
sbb
pop
leave
lahf
out
sbb
add
mov
xchg
mov
and
sub
stos
lods
jle
call
or
test
mov
add
ljmp
mov
inc
movntq
ljmp
ds
clc
xchg
sahf
test
push
cmp
dec
data16
je
push
mov
repnz
ret
js
xlat
mov
aad
xor
idivl
out
dec
cmp
mov
mov
pop
push
inc
dec
lahf
jnp
xor
xchg
push
daa
sarl
nop
addr16
mov
dec
insl
mov
cmpsb
pusha
loopne
lock
jp
lods
xor
sbb
mov
scas
pushf
fsubrl
ja
ja
mov
or
mov
insl
mov
mov
imul
mov
and
jge
and
movsl
fisubl
movntps
push
jecxz
movsb
addr16
xchg
inc
filds
lret
das
cmp
add
rolb
out
xchg
inc
mov
cmpsb
sub
xor
dec
lret
sbb
lods
xchg
fwait
push
jg
or
mov
repnz
mov
adc
mov
idivl
test
mov
and
test
xor
push
xchg
rolb
push
xchg
movsl
pop
jp
js
push
and
push
xchg
add
sub
xlat
pop
iret
pop
pop
nop
loop
mov
int3
movsb
cltd
jmp
movsb
and
test
lret
jbe
xor
cli
push
fcoms
lea
fistpll
pop
test
loopne
je
cmp
repz
add
pop
je
mov
jle
stc
in
jp
leave
add
push
gs
adc
cli
dec
cmc
push
xchg
aaa
push
push
mov
jb
addr16
fldcw
stos
cmp
je
jl
xor
in
in
xor
and
insl
lock
or
out
add
mov
or
cld
insl
push
add
in
mov
test
xchg
lea
int
lds
ret
pop
pop
push
mov
pop
pusha
pushl
push
and
outsl
lret
clc
and
dec
fsqrt
imul
roll
test
enter
xor
aad
repnz
xchg
sarl
inc
aaa
sti
or
js
and
mov
sbb
fstl
add
and
jno
nop
add
mov
add
inc
dec
xchg
mov
mov
sbb
jae
xor
and
les
push
pop
inc
imul
out
jecxz
pusha
cmp
les
mov
add
and
pop
cmp
lcall
mov
jge
jp
std
xchg
inc
xlat
cltd
es
mov
mov
cltd
popa
es
stos
lock
aaa
and
sub
jge
jbe
add
pop
or
scas
jno
add
mov
sub
inc
int
xor
or
lds
fistpll
out
jnp
pop
sti
out
dec
arpl
cld
pop
cltd
mov
sub
add
outsb
mov
out
jp
popf
lods
or
mov
push
test
jno
or
pop
push
ret
mov
mov
filds
fs
push
mov
xorl
xchg
pop
mov
sub
sub
subl
cmpsb
push
push
xor
repz
fstpl
daa
les
cmpsb
xchg
gs
cmp
jnp
add
shrl
test
je
cmp
cmp
or
lret
sub
lds
add
and
mov
mov
pop
pop
pop
pusha
and
in
inc
mov
cmp
mov
bnd
pop
sbb
gs
jno
inc
mov
jge
mov
icebp
xor
add
fdivrs
xchg
mov
cli
sti
dec
dec
loopne
cmp
leave
mov
cmp
mov
fs
jo
mov
rcrl
jle
gs
lea
and
test
ret
pop
pop
add
cmpsl
fwait
dec
enter
or
inc
into
mov
sahf
add
scas
gs
popa
aaa
pop
sbb
rcll
cmpsl
test
xchg
xchg
sbb
mov
rorl
cmpsl
lcall
sti
mov
rorb
push
xor
sbb
hlt
cs
push
and
pushf
icebp
sub
test
lods
inc
jnp
sbb
cmpl
mov
pop
mov
nop
sub
mov
sbb
in
lods
je
dec
negb
cmp
cmp
pcmpgtb
push
clc
into
daa
cmpsl
fimuls
mov
push
push
pushf
or
sbb
rorl
ret
stos
mul
outsl
or
in
rclb
mov
mov
xorl
sbb
cmp
leave
outsb
jp
mov
pop
sbb
push
jae
jecxz
and
rorb
sti
aas
sub
aaa
out
mov
ja
jge
fsubp
mov
outsl
lret
jnp
push
arpl
leave
into
sbb
mov
jb
mov
pop
xor
ja
pop
mov
jge
add
cmpsl
ret
mov
mov
xchg
pop
pop
fsubl
mov
movb
push
test
xchg
jno
out
push
stos
imul
sbb
mov
aam
lret
and
and
mov
and
shlb
cwtl
daa
and
cmp
sub
rcrb
and
mov
pop
lcall
jge
rorl
and
mov
fs
and
mov
lahf
call
jbe
sbb
outsl
jmp
fnstenv
repz
shll
cltd
add
xor
mov
aam
test
push
icebp
add
jp
jge
mov
and
shrl
xchg
sbb
ret
jl
mov
and
jns
xor
xor
mov
mov
adc
pusha
movsb
adc
and
gs
aad
aam
orb
pop
testl
ja
aad
jnp
ljmp
int3
xchg
dec
lret
cmp
add
push
jae
mov
sbb
outsb
mov
mov
fisubs
out
nop
sbb
sbb
or
sbb
stc
sbb
jno
das
adc
pop
jne
loop
test
adc
stc
fsubrs
adc
stc
cmp
je
fwait
scas
cmpsl
or
adc
sub
cli
pop
test
pop
scas
loop
fwait
lods
ror
jg
and
cmpsb
xor
mov
push
jne
jp
mov
sub
arpl
mov
pop
dec
loop
mov
out
sub
jle
enter
mov
mov
mov
out
cwtl
add
push
add
jbe
lcall
cmp
xchg
out
mov
lea
test
push
sbb
fninit
dec
mov
add
or
out
mov
lods
mov
setg
shrb
add
idiv
js
daa
imul
jle
xor
jmp
pop
push
inc
push
movsl
adc
mov
das
hlt
pushf
mov
sahf
and
xchg
pop
or
iret
icebp
mov
incl
dec
mov
aad
sbb
and
in
xchg
iret
bound
or
popf
push
fwait
mov
mov
add
xchg
or
jnp
mov
jae
cmp
hlt
mov
cltd
and
push
idivl
inc
cli
ret
xlat
fxch
in
test
leave
jecxz
pop
int
xsave
outsl
adcl
jmp
adc
dec
inc
les
subb
or
ret
rclb
movsl
aad
iret
fwait
cmp
cwtl
sub
sub
repz
movsb
stc
xchg
into
cld
bound
mov
ret
pop
mov
pusha
ds
pop
mov
call
notl
inc
jge
lods
jns
nop
inc
loope
pop
stos
and
mov
dec
aam
notb
cltd
stos
lods
adc
jecxz
aaa
lea
outsb
mov
xor
imul
mov
sbb
icebp
sub
mov
rcll
jnp
ljmp
jno
jnp
lods
xchg
push
mov
mov
mov
inc
cmp
fs
ss
pop
xor
mov
jnp
xor
add
inc
mov
idivl
sbb
movsl
int
fimuls
inc
jo
mov
adc
mov
lahf
mov
or
push
mov
gs
stos
stos
dec
mov
subl
loope
xor
lcall
push
pop
mov
push
cwtl
mov
gs
cmp
xchg
stos
out
sub
loope
push
lahf
sub
push
xchg
xchg
dec
push
sub
ss
push
movsb
dec
int
nop
cmp
mov
cmpsl
and
inc
or
in
sub
dec
int
inc
cli
mov
aam
pop
or
push
je
mov
loop
cmp
or
push
ret
movsb
add
add
fistpl
imul
stos
divb
bsr
shlb
inc
repnz
mov
mov
inc
pushf
out
stos
xchg
jmp
call
push
mov
mov
fildll
dec
push
stc
xchg
aad
sub
dec
lods
rcll
pusha
mov
pmulhuw
fistpl
iret
loopne
addr16
sbbl
jae
xor
outsl
ss
mov
cmp
mov
rcrb
fdivs
insl
or
sbb
das
mov
adc
xlat
movsb
outsl
jmp
cmp
repnz
cwtl
sub
addb
call
gs
push
xchg
push
or
dec
mov
popa
sub
sbb
or
mov
push
out
push
jae
inc
popf
adc
pop
out
add
pop
ja
subb
fidivs
mov
jns
fcompl
push
testb
lock
lds
hlt
aaa
sahf
mov
inc
add
adc
in
mov
mov
cld
lds
int
dec
push
and
dec
inc
sbb
fndisi(8087
imul
push
sbb
add
cmp
daa
pushf
dec
jmp
sub
lods
fmuls
xchg
ret
push
mov
test
andl
jns
test
xchg
and
cmp
sbb
pop
out
jb
fsave
jmp
loope
mov
faddl
arpl
jbe
cmpsl
dec
xor
inc
sbbb
adc
push
test
mov
push
xor
stc
push
xor
mov
ret
fistps
xchg
fwait
jne
xchg
imul
aaa
mov
cld
mov
sti
and
or
pop
cmp
ror
push
jne
mov
lds
mov
daa
cmp
test
xor
out
mov
and
popf
and
enter
aad
cld
mov
mov
mov
sbb
aaa
dec
push
bswap
repnz
and
and
jmp
imul
enter
xchg
insb
addb
mov
loop
push
call
insl
aaa
test
sub
mov
cmpsb
mov
mov
mov
in
mov
adc
fs
leave
push
mov
test
lahf
popa
fadd
int
test
mov
push
adc
pop
and
jae
inc
push
mov
or
int
cmp
aad
repnz
dec
fmull
movsl
jae
sub
leave
jle
xchg
add
pop
call
adc
inc
inc
gs
sbbl
orl
pop
sbbb
inc
mov
in
cmpsl
insl
hlt
mov
inc
loop
and
pop
fnstsw
sub
cmp
push
cmpsl
mov
xchg
clc
rol
push
inc
test
xchg
addr16
jnp
mov
xchg
pop
jmp
fucomip
mov
rorl
mov
inc
push
fistpll
sti
mov
adcl
mov
xchg
pop
sub
mov
mov
sub
bound
lret
mov
push
rcl
lahf
mov
xor
insl
or
push
xor
lock
lods
inc
sub
push
sub
xor
pop
pop
cmpsl
push
ds
adc
adc
dec
fs
arpl
enter
jnp
mov
jb
shll
sbb
in
mov
leave
cmp
jne
push
sub
xchg
mov
out
pop
jmp
hlt
cmpsb
pop
fcom
ds
add
mov
pushf
or
mov
mov
jo
sahf
decb
xor
jmp
or
stc
mov
push
movsl
mov
pop
jp
fisttps
inc
mov
mov
adc
sub
mov
fcompl
mov
sbb
inc
lret
lods
jmp
sbb
mov
mov
mov
adc
mov
cwtl
push
pop
jne
adc
lods
fstpt
das
cmp
lods
aaa
sub
pop
movsl
test
loop
jecxz
cmp
xor
jo
nop
pop
ret
pop
shlb
sub
jmp
push
xchg
in
test
insl
outsb
in
ss
adc
in
testb
push
fs
inc
cwtl
pop
or
mov
fcomps
inc
je
cs
xchg
test
sub
jg
push
or
aas
idivb
int3
jp
or
icebp
pop
or
lock
adc
loop
xor
rorb
std
fstl
push
loope
jbe
mov
adc
cmp
ja
cmp
cmp
jge
mov
cmp
sbb
sub
mov
xorb
cmc
push
or
mov
pusha
xor
or
out
std
dec
pop
sbb
dec
scas
mov
pop
nop
js
outsb
cld
not
leave
pop
je
int
daa
push
pusha
aam
and
pop
cli
int3
daa
pop
mov
sar
inc
or
and
dec
xlat
push
mov
loopne
sub
inc
fistpll
lds
jbe
jge
daa
andb
jno
outsb
or
rclb
sahf
lcall
mov
popf
push
mov
inc
inc
negl
jns
iret
test
mov
jl
mov
push
rcrl
mov
scas
outsl
jg
in
mov
xor
inc
dec
sub
les
jle
mov
push
push
xchg
xlat
jmp
cmp
or
add
shll
sbb
xlat
pop
push
lahf
xor
pop
cmpsb
and
xlat
adc
ficompl
xchg
movsl
xlat
mov
xchg
jno
dec
cmp
add
xchg
pop
push
inc
repz
in
push
pop
mov
xchg
les
leave
sbb
mov
mov
dec
xchg
mov
push
loope
in
sbb
pop
cwtl
cmp
popf
cs
lahf
rcrb
inc
mov
enter
pop
push
dec
push
mov
loop
out
pusha
fstpt
xor
adc
or
mov
or
mov
outsb
sahf
push
lret
jmp
adc
fistpl
cmp
cltd
ss
cmp
sahf
xor
out
ds
dec
xchg
inc
sbb
shrb
mov
das
adc
jns
lea
or
sbb
lods
repz
sub
sub
lock
std
ds
inc
jp
fisttpll
cmpsl
lcall
call
rcr
jo
test
cmp
mov
cmpsb
frstor
sahf
mov
cmpl
sarb
sbb
bound
fbld
inc
mov
adc
test
test
mov
enter
add
rcrl
push
adc
push
inc
xchg
lret
fwait
insl
cltd
lcall
cmp
lds
clc
mov
mov
data16
lds
test
adc
push
inc
aaa
sbb
inc
or
mov
test
jae
daa
and
faddl
cld
sbb
sbb
jmp
es
jae
xchg
sub
mov
adc
or
stos
add
data16
arpl
mov
out
flds
scas
jae
cwtl
xchg
jne
out
push
and
lods
or
adc
push
inc
arpl
add
add
ja
ljmp
fistpl
inc
sbb
or
sbb
lods
and
adc
pusha
pop
sub
dec
rolb
movsb
lock
sub
dec
mov
testb
outsb
push
push
cs
out
lods
ja
jnp
repz
dec
testl
mov
movsl
flds
test
jge
adc
adc
push
and
xchg
ficomps
icebp
push
ret
test
loope
bnd
sub
or
stc
xor
negb
mov
cmp
cmp
fwait
dec
dec
cmp
xchg
scas
fidivrs
mov
je
fs
xchg
lret
push
and
rcrb
nop
push
jp
jg
aaa
sahf
or
cmp
popa
cmp
stos
sbb
inc
fs
mov
repnz
lret
adc
adc
sub
mov
mov
mov
sub
out
pop
aam
negl
outsl
and
mov
push
nop
pop
dec
jbe
and
ret
or
dec
dec
daa
ret
fwait
pusha
rcrl
dec
sub
imul
icebp
pushf
daa
xchg
pop
pop
jg
aad
aad
dec
mov
out
adc
push
mov
jl
jp
imull
sbb
mov
repnz
roll
or
ret
test
enter
and
jg
xchg
popa
loope
cli
arpl
sbb
jp
push
lahf
gs
and
in
add
cltd
mov
mov
inc
or
pusha
lods
fidivrl
cwtl
push
les
lcall
sbbl
inc
xlat
jge
lock
jg
popf
xchg
and
push
mov
xlat
add
cmpsl
or
gs
mov
sbb
repz
jne
aad
stos
push
cmpsb
xchg
sbb
jns
pushf
sarl
jmp
mov
ret
out
out
orb
push
das
ds
sahf
ja
sub
sbb
and
or
inc
test
xor
push
mov
or
push
sub
aam
inc
sub
mov
or
test
test
xlat
pminub
or
call
fstpt
and
or
stos
jp
outsb
outsb
cmp
xchg
fstpl
sahf
pop
nop
xlat
adc
lds
arpl
push
and
clc
xchg
cli
pop
sbb
insl
adcl
xor
dec
mov
mov
cmp
push
adc
cmp
push
pop
sti
pushf
sbb
sarl
sti
jmp
pop
out
gs
push
in
jo
cs
pusha
xor
mov
decl
push
in
sub
xor
divl
fadds
jbe
sub
pop
arpl
add
dec
aad
aad
insl
test
dec
jne
jmp
cmp
pop
add
mov
and
ja
add
mov
push
mov
stc
std
ds
sahf
scas
push
or
xlat
cmc
cmp
jge
push
stos
in
cmp
pop
mov
pop
ret
xchg
fcoms
mov
push
xor
out
adc
dec
cmpsb
xchg
jo
stc
fisubrs
xchg
lds
mov
adc
jl
sti
cwtl
cmc
push
arpl
out
je
ret
jp
daa
xor
jne
push
aaa
or
mov
pop
out
aad
jno
push
mov
xchg
pop
aaa
loopne
push
pand
jl
in
in
int
icebp
stos
add
lds
jo
and
and
loop
mov
pop
mov
jmp
xchg
scas
hlt
in
mov
push
movsl
inc
push
mov
aas
ds
out
adc
dec
cwtl
in
lea
shlb
jne
in
mov
pop
inc
test
jp
movsb
inc
aaa
xchg
xchg
in
fsubrs
pop
push
cmp
cmp
cs
or
aam
stc
popf
xorb
inc
dec
outsl
out
aaa
test
iret
in
je
mov
sbb
lock
push
jno
sbb
jns
add
data16
mov
test
loop
pop
mov
mov
nop
hlt
inc
stos
xchg
cmpsb
lcall
push
es
lods
cmc
push
jge
add
dec
dec
xor
sub
inc
daa
in
push
xchg
sbb
mov
jne
nop
dec
nop
je
inc
dec
in
cld
mov
add
push
and
jmp
mov
mov
imul
scas
lods
lea
push
or
or
and
lea
mov
int3
into
or
shl
rorb
xchg
std
int
push
ja
int
movsb
xor
and
lret
hlt
sbb
jle
push
adc
cmp
outsl
pop
mov
xchg
pop
pop
cmp
xchg
mov
sub
jno
jle,pn
jne
nop
pushf
call
aaa
stos
cmp
ds
xchg
lcall
cmovle
mov
outsb
lcall
test
sbb
fdivs
int
or
arpl
scas
dec
imul
das
sub
loope
adc
or
xchg
leave
int
stos
nop
xchg
cwtl
sbb
pop
push
dec
cmpsb
cld
or
push
cs
ror
pop
mov
popf
es
push
cmp
aam
dec
adc
cwtl
add
inc
je
ja
pop
das
push
sub
dec
cmpsb
inc
cmp
mov
cmpsl
stos
dec
adc
sub
inc
in
mov
rcrl
inc
test
bound
in
movsb
xchg
add
adc
or
stc
jns
or
daa
mov
cmpsl
rorl
mov
clc
inc
out
xor
mov
call
jle
or
popf
sbb
cmpsl
testl
sbb
add
xchg
jae
xor
lahf
scas
in
mov
sub
cmp
loope
push
pop
or
jp
ret
jmp
dec
inc
or
sub
daa
fdivs
imulb
push
ret
inc
inc
pop
pop
xlat
mov
mov
cmc
xor
adc
dec
ds
jb
xchg
sbb
jg
mov
test
out
push
add
imul
enter
adc
icebp
pop
cmp
mov
add
jle
and
test
aaa
scas
in
jge
icebp
dec
dec
divb
xchg
dec
jmp
hlt
mov
stos
xchg
roll
je
iret
enter
pop
stc
cld
cmp
push
sbb
lods
mov
std
jecxz
sub
add
inc
fildll
dec
cmpsl
dec
dec
pushf
icebp
pop
scas
lds
jg
mov
lods
mov
dec
aaa
je
idiv
iret
mov
xor
cmpsl
push
bswap
test
cwtl
and
jno
pushf
inc
das
xor
xor
mov
cmpsb
add
shl
mov
or
pusha
jge
cmpl
ds
subb
jmp
std
jnp
mov
shl
or
mov
xchg
fldcw
fmul
vgf2p8affineinvqb
decl
adc
inc
dec
mov
push
add
add
dec
test
jns
rcrb
jle
ret
loope
jnp
outsl
fisubl
loope
mov
icebp
xchg
push
xchg
adc
jge
cmp
mov
cmp
xchg
xchg
mov
fimull
mov
adc
adcl
pusha
cwtl
jnp
scas
arpl
pop
and
gs
push
popa
popa
pop
push
mov
sbb
add
ret
sbbb
notl
pusha
inc
or
push
fwait
mov
mov
std
or
andl
xlat
mov
enter
xchg
iret
jae
imul
ljmp
pop
mov
ds
ds
ljmp
clc
sub
lods
insb
push
cmp
gs
adc
mov
jmp
std
and
into
and
mov
and
cmp
push
pop
call
cmp
mov
xchg
inc
popf
inc
sbb
subl
stc
mov
push
mov
jnp
xchg
add
cmp
mov
adc
and
adc
sti
push
mov
mov
push
mov
icebp
orl
xlat
arpl
pop
sbb
js
fbld
in
aas
inc
xor
daa
fcomip
cli
js
ljmp
and
and
ss
test
movsb
js
adc
addr16
rcll
inc
and
mov
inc
cmp
out
push
imul
les
mov
or
cs
hlt
lret
sbb
outsl
nop
push
ja
out
shll
and
stos
jmp
dec
and
cmpsl
rorb
imull
loopne
adc
or
call
fsts
outsl
rolb
lods
mov
ljmp
mov
pop
bound
cld
les
jbe
ja
cmp
outsl
aam
pop
bound
flds
scas
fdivrl
push
jl
adc
mov
std
adc
mov
push
leave
ja
cld
xchg
push
adc
sahf
jl
pop
pop
pop
and
push
sbb
xor
xchg
daa
test
movsl
cld
out
jmp
ja
jae
pushf
sti
push
aaa
adc
lds
out
incb
add
sub
movsl
pop
xor
sbb
les
out
fadds
push
push
lcall
push
dec
xor
lcall
mov
xchg
push
in
jmp
mov
lea
into
jne
add
clc
pop
dec
shlb
or
push
push
and
ja
xchg
xchg
clc
out
loopne
push
test
test
add
xchg
or
and
incb
xchg
pop
inc
and
je,pn
cmpsb
jns
mov
jbe
pop
fwait
push
test
loope
in
mov
enter
mov
lahf
mov
jns
iret
xchg
jl
push
adcl
cmp
cmp
insl
ljmp
jmp
repnz
sbb
test
xchg
jnp
jo
push
mov
xchg
fcmovbe
fsubrl
popa
jne
cmpsb
jmp
pop
insb
hlt
ret
sbb
movsl
pop
std
add
rcr
add
iret
popf
mov
ret
outsb
push
daa
jns
movsl
adc
das
cmpsb
lcall
sbb
inc
sub
mov
movsl
and
cmp
test
lea
dec
sub
pop
inc
fisttpl
aam
sbb
cmc
stc
fcmovu
rolb
push
add
lret
andb
outsb
out
pusha
mov
adc
insl
js
jle
push
cmpsl
in
dec
imul
mov
jmp
adc
cli
push
sub
fnstenv
and
jb
test
add
popf
xchg
push
adc
iret
mov
mov
pushf
cltd
adc
mov
stos
xchg
aad
les
xchg
xor
or
mov
stos
cltd
clc
imul
dec
test
stos
dec
ds
movsb
aad
jmp
or
pop
mov
inc
lahf
jb
xor
incl
call
inc
inc
pop
cmp
enter
mov
enter
stos
das
push
fwait
cltd
popa
inc
fmuls
sbb
cmp
jne
jmp
shlb
js
bound
mov
scas
push
jbe
adc
loope
outsl
pop
xchg
sbb
push
and
inc
sub
and
xchg
cmpsl
mov
aas
lock
dec
mov
xor
arpl
test
fwait
fs
jne
scas
xor
pop
aad
aam
xchg
sbb
pop
sub
sub
adc
sub
sub
inc
rclb
les
mov
and
mov
lea
adc
xor
shll
dec
cwtl
popf
and
push
and
jnp
push
lret
jmp
fs
inc
sbb
cltd
mov
sub
xchg
mov
jae
mulb
add
notb
mov
cmp
mov
or
es
mov
nop
adc
rolb
iret
lock
sbb
dec
mov
das
nop
xchg
mov
cmpsb
and
mov
int
cmp
out
cmc
cmp
loop
mov
push
orl
dec
cmp
js
lock
sub
xchg
subb
push
jge
xchg
jp
mov
jg
adc
cmpsb
in
add
into
mov
or
sub
pop
xlat
mov
loop
inc
shl
and
or
sti
in
imul
dec
movsl
loope
jmp
pop
subl
mov
pop
outsl
mov
xchg
call
push
xchg
xor
dec
jle
cmp
bound
pop
ljmp
mov
push
movsb
jnp
out
daa
add
push
push
push
ret
push
shll
je
xchg
xchg
xor
insb
pop
mov
data16
fmuls
sub
cmp
ret
out
xchg
lock
mov
mov
cmpsl
dec
jg
adc
jo
jo
push
pop
jl
ljmp
inc
mov
lahf
jle
sub
sub
push
call
outsb
dec
push
imul
pop
mov
jmp
xor
loopne
adc
fs
sub
mov
or
adc
pop
fs
lret
lret
adc
mov
neg
add
mov
loope
add
aaa
scas
int3
mov
pop
aam
xchg
daa
xor
pop
xor
mov
mov
arpl
int
test
pop
pop
test
adc
lret
fcmovnu
leave
clc
xchg
ror
lcall
adc
or
cltd
xchg
mov
mov
divb
inc
leave
cmp
pop
and
mov
pop
cmc
add
inc
mov
mov
pop
imul
pop
push
lock
mov
sub
mov
test
push
sti
xchg
mov
in
push
inc
movsl
gs
mov
fndisi(8087
push
pop
jecxz
add
fistpll
aas
imull
jp
addr16
data16
mov
pop
js
out
fwait
cmpsb
sub
loopne
push
jbe
sbb
nop
in
out
xlat
jnp
push
or
sti
push
cmp
sub
stos
cwtl
cmp
mov
int3
jl
ficompl
movsl
in
cli
inc
movsl
lds
mov
lret
inc
imul
rorl
cmp
stos
mov
jae
mov
jo
int3
dec
cmp
decl
shll
sub
inc
push
inc
pop
mov
mov
cmc
or
in
mov
hlt
fbld
sub
xchg
inc
aam
sub
dec
pop
jmp
inc
xchg
hlt
pop
and
notl
mov
ja
xchg
out
sbb
mov
out
insl
movsl
inc
pop
ljmp
lahf
push
jp
scas
xlat
in
testb
xchg
stos
sub
mov
mov
test
iret
jbe
idivl
int
out
push
jmp
cmc
xchg
popw
ds
int
data16
dec
fsubs
mov
mov
pop
adc
rorb
fcmovbe
inc
mov
inc
in
mov
or
push
and
mull
ljmp
pop
or
call
pop
mov
pop
sbb
std
mov
mov
fbld
cmp
imul
dec
mov
cmp
scas
lahf
ja
sbb
lahf
or
sahf
jno
fwait
or
jle
mov
lods
rorl
daa
or
fldt
fs
push
mov
pminsw
mul
cmp
sbb
aas
mov
adc
cmp
imul
imul
mulb
sub
xor
lods
mov
adc
into
pop
xchg
fs
mov
mov
repnz
pop
jle
dec
mov
and
ds
inc
in
out
std
lock
test
cmpsb
inc
mov
insb
push
adc
mov
add
mov
shlb
dec
xchg
lcallw
mov
cmp
lods
movsb
push
sub
popa
mov
test
cs
cltd
cmp
dec
and
aas
fimull
int
xor
hlt
mov
icebp
pop
test
inc
push
adc
lock
mov
popa
outsl
int3
dec
sbb
into
int
push
jb
ds
lret
pop
jae
or
push
lods
in
sub
cltd
repnz
fnstsw
xor
cmp
cmp
das
les
pop
mov
ja
mov
and
aad
mov
sub
inc
int
pop
adc
sti
jae
inc
mov
in
mov
addr16
aam
pop
mov
lret
ret
mov
inc
div
stc
xchg
test
inc
loopne
and
cmp
out
out
push
lods
cmpsl
out
pop
jecxz
sbb
popf
scas
inc
pop
and
lret
mov
loopne
aam
mov
orl
stos
sub
and
and
sbb
mov
or
mov
inc
inc
adc
add
push
mov
fdiv
shr
insb
pop
jg
cmp
in
ja
mov
mov
push
add
inc
mov
rcr
out
stc
bound
loope
xchg
inc
lods
scas
aam
arpl
sbb
mov
shrb
fsubp
mov
pop
xchg
mov
addr16
in
xor
inc
test
jmp
loop
into
cmpsl
sbb
mov
pop
sub
out
arpl
cmpsb
mov
add
repnz
mov
lea
testl
int
leave
in
subb
xchg
inc
push
and
or
sub
xchg
jns
xor
lret
and
sub
sbb
jns
stos
lahf
push
dec
inc
dec
std
lahf
test
int
popf
pop
lahf
adc
add
add
ljmp
push
call
pop
aas
cmp
and
lods
and
imul
jg
xchg
mov
jp
sbb
lret
lods
lret
popa
xor
loop
es
and
test
outsl
repnz
pop
shll
insl
int
repnz
test
inc
fidivrl
sbb
sub
cmc
aaa
adc
xchg
fstps
jb
push
aas
cwtl
adc
hlt
cs
std
dec
add
test
dec
jecxz
xchg
jg
jge
loop
sahf
mov
lods
cmp
push
test
ficomps
add
mov
push
inc
sbb
mov
dec
and
inc
icebp
imul
sbb
pop
es
outsb
xchg
int3
aam
fists
adc
jnp
in
rclb
cmp
lcall
idivb
inc
jmp
and
loop
arpl
xor
sub
cld
mov
cmp
pushf
jae
imul
les
push
or
hlt
or
sbb
in
push
adc
push
mov
adc
arpl
pop
stc
mov
lods
pushf
xchg
ret
dec
lret
decb
aad
inc
push
dec
push
xor
rorl
inc
mov
push
mov
add
sub
pop
push
sub
bound
bound
leave
imul
push
pop
pop
cld
fucomip
mov
ja
dec
inc
xchg
shlb
sbb
fnstsw
push
iret
push
cmp
aas
or
xor
push
dec
scas
pop
lods
leave
mov
sbb
push
lds
jmp
mov
iret
pop
mov
rcrb
xor
pop
pop
gs
add
arpl
push
icebp
pop
hlt
xchg
lds
mov
cmp
adc
jp
jecxz
cli
icebp
jbe
inc
and
adc
cmpb
jmp
jo
and
outsb
aad
gs
add
mov
xchg
loope
jmp
add
mov
cs
mov
jge
fisubl
dec
fiaddl
gs
pop
jbe
mov
xchg
repz
push
sbb
add
cmpsl
mov
pop
push
sbb
pop
pop
mov
inc
cld
pop
and
sub
cs
ret
int
xchg
pop
xlat
mov
icebp
jo
loopne
inc
fidivl
imul
xor
jbe
xor
movsb
pop
iret
push
loop
xor
mov
push
dec
mov
pusha
dec
mov
mov
clc
addb
les
clc
stc
add
push
jnp
dec
jbe
push
jnp
cmp
xchg
jnp
gs
arpl
add
lds
movsl
push
outsl
pop
mov
std
into
cmp
push
jmp
out
dec
mov
nop
add
lock
leave
adc
dec
je
mull
sub
pop
or
mov
or
mov
sbb
add
scas
xchg
push
sti
and
test
push
jl
imul
inc
das
and
cld
fisubrs
lahf
mov
ds
xor
xchg
imul
int3
xor
mov
testl
sbb
xchg
xchg
in
cmp
dec
add
sub
ljmp
stc
iret
mov
pop
and
ds
js
mov
bound
pop
xor
leave
aas
out
sbb
fwait
test
daa
shll
arpl
iret
cmpsb
mov
add
cmp
sbb
or
pusha
mov
mov
les
ds
daa
jae
cli
or
inc
cmc
insb
roll
sar
cld
adc
push
xor
lcall
push
push
push
pop
push
jle
cltd
jbe
push
dec
int3
ret
push
sbb
lahf
mov
mov
jns
push
sbbb
loopne
xor
cmpsl
hlt
repz
pop
jecxz
xchg
ja
sti
cwtl
loope
pop
and
leave
jnp
int
xchg
stos
inc
mov
nop
mov
mov
mov
push
fidivs
mov
mov
xor
fcomp
inc
mov
xchg
scas
nop
pop
mov
lods
pusha
sti
arpl
imul
in
shlb
shr
and
in
and
lock
iret
test
ficomps
je
popf
call
cmp
xchg
clc
cmp
in
es
xor
out
push
inc
rcrl
sti
cld
aas
inc
xor
mov
mov
add
lret
arpl
push
adc
mov
int
xor
pop
pop
test
cmp
sarb
inc
cmc
scas
fisubrl
push
test
idivl
fldcw
adc
mov
dec
shlb
cmp
jae
test
jne
mov
jne
sub
and
popf
dec
mov
cmpsb
adc
mov
jge
mov
stos
inc
jg
cmpsb
inc
push
loopne
and
mov
mov
and
clc
and
es
add
lea
push
push
addb
dec
mov
or
mov
or
xchg
call
mov
jp
xchg
mov
out
inc
cwtl
ficompl
nop
push
shl
add
sahf
jge
out
cli
stc
into
pop
fadd
add
sub
push
xor
aad
sbb
stos
outsl
jp
mov
int
adc
xchg
stos
cmp
jbe
mov
in
pop
push
ret
loop
adc
push
mov
insl
mov
push
in
cmp
jl
cmp
bnd
repnz
clc
cld
aaa
mov
inc
adc
push
sbb
das
and
lret
mov
cmp
push
fucomi
mov
addr16
mov
loope
adc
push
pop
stos
out
mov
insb
loopne
out
popa
and
mov
xchg
push
imul
loop
jmp
mov
jbe
lea
insl
scas
sub
jge
xchg
movsl
inc
dec
movsb
xor
jne
push
xchg
icebp
and
mov
sbb
adc
or
jecxz
xbegin
js
mov
fsubl
adc
shrb
push
mov
add
iret
push
jne
ja
popl
imul
push
jne
adc
sub
inc
add
icebp
push
or
rcrl
ss
jl
pop
leave
pop
rcrl
mov
jo
cmpsl
dec
sti
mov
leave
push
push
lea
inc
cmp
shrl
add
outsl
fsubrl
mov
mov
aam
xor
insb
sub
mov
daa
pop
sbb
jb
fcoml
and
add
movsl
adc
enter
lcall
xchg
test
cltd
adc
lahf
stc
lea
fmuls
sub
imul
test
popa
addr16
cld
test
xorb
push
inc
ror
lea
push
cmp
sbb
add
jae
hlt
data16
movsl
test
pop
push
xchg
mov
cmp
cwtl
sbb
movsl
stos
dec
jae
call
push
fnstsw
int3
xchg
add
fwait
imul
movl
sahf
and
shlb
dec
es
movsb
mov
popf
pop
leave
push
pop
clc
cmpsl
dec
inc
push
push
xor
add
push
shl
pop
dec
push
jl
call
outsb
shrl
loop
pusha
sbb
push
rep
outsb
jb
stos
pop
jae
xchg
pop
les
jae
xchg
xchg
mov
jp
cwtl
insb
mov
xor
xor
mov
ret
popa
jns
mov
and
sub
loope
mov
inc
repz
fstpl
lock
add
mov
dec
xchg
inc
inc
xor
ljmp
or
jb
and
adc
fidivrs
and
xchg
repz
data16
mov
and
daa
mov
ret
lods
pop
nop
add
clc
data16
cmp
lods
test
lods
or
arpl
std
test
add
cmp
dec
out
icebp
adc
shr
dec
loope
icebp
rcr
insb
cwtl
dec
xchg
rcrb
pop
sarl
mov
fwait
push
lret
sbbl
inc
int3
or
packsswb
cwtl
jmp
fidivl
xor
fcomps
sub
lods
mov
sbb
in
test
insb
pop
mov
sub
xlat
mov
repnz
mov
and
das
add
pop
jmp
fcmovu
mov
movsl
and
mov
push
daa
arpl
mov
pop
cmpsb
movsb
cmc
in
jg
xor
rol
das
and
adc
dec
sub
lods
xchg
or
mov
xchg
pop
std
mov
outsb
scas
inc
out
mov
pushf
mov
mov
enter
mov
pop
into
push
clc
sahf
cmp
mov
sub
mov
lahf
mov
aaa
pminsw
sti
jle
jns
and
or
cmpsb
xor
and
int3
mov
xor
ret
adc
mov
lods
lock
imul
and
xchg
lods
popf
cmp
ficomps
clc
std
xchg
mov
int
ret
pop
movsb
lods
cmp
xchg
ds
aaa
outsb
jne
dec
lods
lret
and
and
pop
push
xorb
xor
and
add
insb
mov
popf
sbb
add
inc
loope
leave
jle
das
inc
ljmp
add
ret
dec
fistpl
push
pop
in
xor
fcmovnb
jmp
fucomi
out
sbb
mov
sbb
imul
inc
int
pop
pop
xchg
out
repz
xor
pop
dec
jmp
jecxz
rolb
pop
sti
xchg
xorb
sub
xor
js
dec
mov
jmp
mov
pop
js
bound
stos
dec
sbb
push
lea
xor
jmp
jb
fsubl
xor
aam
and
inc
pop
jg
xor
push
mov
imul
sarb
sbb
or
xor
mov
aam
push
and
imul
scas
sub
movsl
xor
aam
push
mov
pxor
xorb
dec
je
out
insl
xor
push
push
jl
idivl
cmp
pop
stc
jb
das
push
inc
call
and
repnz
or
aaa
or
iret
out
loopne
mov
ret
shll
loop
fisubrs
dec
push
push
imul
and
pop
inc
xchg
fldl
push
movsl
dec
mov
aaa
idivb
pushf
xlat
jbe
ret
jl
hlt
add
pop
jns
aam
push
push
push
jge
ds
rcll
cld
int
gs
add
dec
andb
dec
adc
movsb
cmp
xchg
sbb
ds
sbbl
shll
jno
and
pushf
sbb
sbb
repnz
push
mov
fisubl
out
mov
scas
cmp
mov
mov
and
mov
cs
jp
loope
jns
jl
fucomi
fdivrl
mov
fcmovbe
das
adc
in
ret
mov
lcall
clc
negb
idiv
inc
je
lds
pop
in
adc
jmp
inc
or
shlb
mov
pushf
cmc
nop
sbb
outsl
or
push
and
test
pop
dec
sub
andl
sar
sub
pusha
fistps
push
ret
cmp
jno
cmp
rcrl
pop
xchg
cli
cs
aad
lret
in
mov
and
cmp
push
aam
ja
dec
xchg
mov
mov
cmp
adc
push
js
imulb
pop
cmp
push
es
add
dec
push
loop
mov
jl
aad
sbb
jb
push
scas
rorl
cli
adc
call
push
mov
pop
jnp
test
inc
cwtl
out
dec
lods
inc
movsl
mov
and
pop
cmpsl
mov
cmp
mov
push
cmpb
mov
add
test
pop
in
scas
add
dec
inc
sub
movsl
cmc
mov
lret
into
lcall
mov
or
jnp
push
xor
or
adc
andb
and
pop
aam
lds
ljmp
insb
xchg
es
aam
jne
dec
pop
in
shll
in
and
mov
xchg
inc
sbb
pushl
cmp
push
cs
cmp
inc
fs
lret
outsl
and
jns
xor
mov
insl
inc
addr16
push
jnp
add
cmp
lret
fildll
cmp
fildll
jg
aas
hlt
enter
pop
leave
cli
lcall
outsl
outsb
lahf
cli
mov
mov
pop
xor
mov
shl
rclb
push
scas
push
fdivl
jns
or
fs
push
xor
xor
sbb
mov
cmc
loope
mov
cltd
sbb
ret
sbb
add
fmuls
cld
fiaddl
push
add
mov
xchg
lods
mov
or
inc
mov
jns
xchg
mov
cwtl
lds
movsl
inc
mov
stos
popf
cltd
icebp
fwait
adc
sbb
stc
lahf
xlat
je
shll
dec
test
mov
jmp
stos
sbb
mov
add
sahf
sti
outsb
mov
jo
in
push
outsl
add
loope
jmp
popf
add
sbb
mov
aam
or
or
test
inc
shll
or
test
insl
das
jl
pop
add
cmpsl
arpl
mov
movsb
sbb
push
rcrb
cli
adcl
sbb
jg
sbb
jecxz
jg
stos
pop
mov
mov
movsl
lods
daa
adc
in
mov
xor
sub
mov
sub
lods
xchg
arpl
movsl
add
lcall
insl
inc
jb
daa
pop
cld
pop
jo
jl
dec
jae
je
cmp
push
or
xchg
pop
inc
iret
and
mov
mov
rcrl
pop
push
fnstsw
cmpsl
loope
inc
lods
nop
arpl
sub
iret
inc
xchg
mov
sub
ficoms
cmp
mov
adcl
inc
jl
loopne
mov
test
iret
dec
mov
cmp
adc
and
sub
jns
adc
mov
out
orl
in
int3
scas
iret
jb
adc
mov
pop
jp
mov
imulb
push
adc
pop
mov
jbe
insb
add
andb
push
sbb
test
dec
or
arpl
loopne
dec
in
or
ret
in
push
jne
add
dec
xlat
in
cmp
ffree
add
xor
sub
add
or
xor
push
and
jne
bound
cmpsb
sbb
out
negl
lret
testl
aam
test
or
shl
scas
jo
pop
mov
xlat
push
cli
or
or
fisubs
js
lods
imul
inc
pop
in
pop
out
adc
pusha
mov
push
daa
push
or
jl
flds
lahf
or
icebp
sarl
lea
sahf
gs
outsb
push
popa
ficompl
inc
sarl
roll
xchg
cmpsb
adc
inc
roll
out
adc
xor
xchg
inc
lea
lods
sbb
inc
enter
jne
insl
imul
mov
repnz
notb
inc
sbb
nop
jo
inc
mov
mov
mov
mov
inc
xchg
sub
or
lahf
stos
in
mov
out
and
ret
xlat
mov
orl
sbb
inc
insb
cmp
add
lahf
cmpsl
lahf
jp
ffreep
inc
push
pop
repz
insb
icebp
xchg
mov
pop
cmpsb
aam
inc
mov
das
pushl
sbb
cli
or
stos
mov
or
addb
or
pop
fwait
dec
inc
loopne
sbb
mov
scas
sbb
scas
leave
pop
fisttpl
lret
mov
sbb
cwtl
sbb
adc
ljmp
xor
dec
movsb
sub
cs
jbe
xchg
jp
mov
sbb
sbb
push
setle
ja
xchg
inc
jb
lret
xor
jae
mov
cmpsl
jecxz
add
fidivrs
sbb
mov
fdivr
adc
sahf
push
test
sbb
outsl
into
in
jge
mov
push
mov
stos
ljmp
lcall
dec
sbb
addr16
inc
pusha
adc
fistl
scas
cmpsl
out
dec
cs
inc
sbb
ret
inc
adc
std
popa
or
clc
xor
push
jle
in
jecxz
push
xchg
or
sarb
ficompl
inc
cs
mov
scas
bt
out
and
ret
and
ret
dec
inc
mov
and
dec
call
and
loope
mov
fucomi
push
push
pop
and
or
cwtl
ds
pusha
pop
and
cmpsl
pusha
mov
out
push
pop
xchg
stos
pop
pop
fcmovb
iret
push
sub
jb
mov
pop
into
cmp
mov
inc
dec
and
in
stos
fldt
fmuls
mov
sub
fstpl
out
decl
xchg
in
cmp
pop
or
loopne
das
js
mov
dec
xchg
ret
ljmp
rorl
sbb
subb
test
mov
mov
fsubrs
push
scas
push
inc
adc
dec
push
jl
sbb
or
mov
mov
push
or
mov
mov
lret
stos
add
mov
gs
or
repnz
mov
aad
repnz
addr16
leave
arpl
mov
mov
add
nop
js
mov
mov
scas
enter
push
loope
jecxz
test
mov
mov
push
xor
in
jno
ja
mov
add
cmpsl
lea
mov
aad
sarb
add
jg
ret
scas
les
loop
clc
pop
loop
add
mov
sbb
stos
test
les
insb
bound
sub
orl
leave
into
sti
fistpl
stos
pop
jb
repz
sub
xor
jns
test
mov
iret
lds
mov
push
loopne
hlt
imulb
mov
je
fisubrl
stos
sub
mov
enter
hlt
mov
lods
cld
adc
jp
es
and
aad
outsl
dec
adc
js
mov
sub
mov
in
dec
xchg
fnsave
out
lcall
xchg
les
insl
lahf
fs
inc
xor
mov
jmp
sbb
or
lcall
xor
pushl
test
jmp
jl
bound
test
add
or
test
dec
mov
xlat
or
and
std
das
mov
xchg
ret
orb
cmpb
movsb
or
inc
out
adc
and
xchg
dec
cmp
test
hlt
scas
int3
mov
sbb
pop
cmpl
andl
hlt
lahf
jnp
jnp
sub
add
outsl
mov
popa
mov
sub
mov
arpl
sbb
rol
cs
jmp
or
mov
mov
mov
jno
out
push
cs
aam
jnp,pt
sub
inc
sbb
stc
sub
test
fcomps
loop
adc
push
hlt
inc
fldt
cwtl
clc
int
cmp
das
out
mov
and
fxch
inc
sbb
xor
add
mov
push
sbb
push
icebp
ds
pop
aad
imul
sub
sub
or
jns
cli
addr16
cmp
push
jbe
pop
xchg
daa
andnps
in
mov
mov
push
std
xlat
mov
mov
mov
lods
mov
adc
push
fistpll
push
sub
sub
ret
testb
mov
shll
cli
push
lods
fcoml
shl
int
adc
pop
cs
inc
mov
lcall
bound
js
sub
test
mov
xchg
lods
movsl
jl
mov
pop
les
push
sbb
mov
pusha
fcmovnu
push
sub
dec
iret
jp
jl
shrl
shlb
insl
nop
mov
loope
jno
sbb
sub
or
sbb
repz
std
das
ret
jge
add
cmpb
jmp
mov
and
push
repz
cltd
xchg
jbe
mov
jns
mov
daa
cmp
jg
add
js
cli
push
add
xchg
mov
je
rep
test
aad
lds
into
mov
fs
ja
pop
mov
add
cwtl
jecxz
sbb
mov
mov
in
shlb
sbb
add
and
xchg
jmp
in
inc
cld
sub
js
adc
jecxz
arpl
sub
xchg
fisubrs
shlb
push
fldt
mov
mov
mov
mov
in
jno
jl
test
cmp
jns
push
rcrb
into
pop
in
mov
shlb
int3
sbb
dec
pushf
push
subb
fldt
lods
jg
and
pop
and
out
lahf
cmp
or
and
push
adc
js
inc
mov
popf
pop
or
cltd
push
sahf
les
adc
jns
jne
rdpmc
popa
cmp
or
and
or
popa
and
push
test
lods
das
clc
dec
cmp
pshufw
cmp
loopne
inc
xchg
adc
lahf
loop
rcll
fsts
test
testb
aaa
mov
sbb
dec
and
in
push
les
mov
lahf
pop
mov
or
xchg
loopne
xor
pusha
fs
sbb
ficompl
outsl
push
nop
jb
push
mov
pop
subl
clc
out
loop
jmp
call
mov
push
or
sar
inc
push
mov
fldl
add
repz
daa
testl
jecxz
fdivl
mov
dec
sub
and
xor
or
adc
int
mov
sub
or
xchg
push
xchg
ss
imul
sbb
mov
cmpl
jge
mov
lock
ret
mov
out
push
sbb
xchg
test
adc
sbb
jnp
jo
loop
ja
in
mov
popf
sub
mov
cmpsl
shlb
cmp
scas
jo
popa
pop
testl
in
rolb
xchg
cmc
add
add
or
jae,pt
lret
aam
fnstenv
pushf
ljmp
dec
fcomps
jmp
stos
sub
das
lret
cmp
aam
sub
or
js
jle
mov
pop
mov
stos
fiadds
xchg
fldcw
pop
ret
ds
insl
cld
add
ja
xchg
jmp
in
add
mov
imul
or
push
sbb
dec
and
test
rol
ret
add
aad
test
mov
jmp
das
in
mov
bound
inc
pop
adc
loop
outsb
testl
and
xchg
sbb
cli
jnp
sbb
dec
and
sub
aad
push
aas
mov
call
and
jne
jl
test
mov
mull
dec
mov
notb
lret
cmp
ss
mov
cld
jecxz
sub
mov
mov
cwtl
mov
or
ja
ja
cld
mov
or
xchg
test
pop
push
out
rclb
sbb
pushf
orb
popa
mov
je
inc
push
lret
jmp
mov
or
push
nop
dec
aam
subb
or
stos
xchg
movsl
insb
fstpl
repz
sahf
adc
xchg
push
sti
push
xor
sbb
inc
xchg
sub
mov
cmpsb
pop
sbb
leave
in
test
fidivs
push
je
or
mov
push
lea
adc
std
fdivs
dec
mov
sbb
dec
sbb
insl
mov
fisttpll
loope
scas
pusha
push
sub
sbb
mov
test
mov
push
mov
or
pop
fidivrs
cs
scas
ljmp
jp
aad
sub
mov
ret
xchg
inc
mov
cmpsb
and
jb
xor
insb
insb
push
popa
popf
jmp
mov
sbb
push
fists
add
jmp
sahf
aam
cmp
xchg
sub
out
scas
xchg
leave
lahf
bound
ret
push
sub
rcl
insb
fisubrs
and
test
xchg
mov
xor
pop
or
scas
cld
mov
push
lret
dec
cmpsl
sbb
mov
out
or
and
mov
cmp
daa
or
addr16
and
mov
cld
xchg
inc
inc
adc
sbb
pop
pop
add
inc
stos
mov
cmpsb
inc
mov
fs
dec
bound
xchg
xchg
sahf
imul
in
movsw
test
ret
test
push
fcoml
sub
imull
scas
sbb
mov
loop
fsubl
jecxz
mov
sub
dec
fwait
mov
inc
cmpsb
push
adc
and
rorb
mov
jge
mov
dec
mov
lret
pop
jge
es
daa
or
xor
mov
jl
sub
add
mov
pop
lods
and
ret
ds
dec
imul
movsl
fsubl
aaa
aaa
xchg
mov
cmp
push
scas
fadds
inc
xchg
fidivrs
or
loop
dec
mov
in
lock
out
jmp
sub
mov
int3
aaa
push
sbb
mov
dec
inc
sbb
dec
jb
xchg
outsb
xchg
xorb
std
scas
ljmp
add
inc
sub
stos
push
int
fildll
xor
or
sub
rolb
jno
in
test
inc
or
shlb
test
aaa
xchg
or
pop
mov
xor
outsl
add
pop
popf
inc
push
nop
cltd
fistpll
mov
cmp
fs
cmp
mov
arpl
mov
sarb
test
out
fimull
adc
ds
loopne
cmp
mov
stos
fmulp
mov
repz
cli
push
pop
jmp
cmp
sbb
stos
mov
wbinvd
aaa
imul
mov
fidivs
rorb
mov
aad
sub
xor
adc
cld
cld
xchg
out
fisttpll
jmp
addb
mov
sbb
out
sub
leave
xchg
mov
push
cmpsl
cltd
repnz
inc
mov
cli
add
inc
lods
or
popf
ds
xchg
inc
lret
adc
push
inc
and
out
je
jge
inc
xor
call
test
subb
xor
mov
mov
push
dec
clc
sub
xchg
pusha
mov
je
jmp
xchg
push
cmp
pop
pop
imul
popf
clc
pushf
mov
mov
hlt
lahf
sub
mov
test
xor
add
mov
sub
push
push
or
test
jg
in
popa
flds
les
mov
push
imulb
dec
daa
dec
pop
arpl
into
xor
xchg
cwtl
jb
sub
sbb
sbb
adc
sbb
push
xchg
sbb
and
xor
int3
js
aam
std
add
inc
push
adc
or
mov
and
cmpsl
insl
push
scas
dec
add
fsub
popf
ljmp
sub
cmp
iret
shlb
scas
pop
xchg
jl
out
cwtl
mov
mov
adc
test
inc
bnd
movsl
in
ds
enter
sub
pop
decb
aas
jb
mov
cmp
lods
out
int3
aas
pop
cmp
push
pop
test
shll
scas
sahf
inc
mov
xor
dec
loope
cmp
mov
mov
jg
fldenv
add
sahf
xorb
jge
add
cli
maxps
imull
and
jle
cmpsb
sbb
push
popl
test
arpl
leave
jmp
cwtl
adc
mov
mov
dec
js
or
cmp
mov
xor
xchg
add
xchg
lcall
test
inc
pusha
nop
mov
add
mov
mov
or
push
fisubs
adc
push
and
mov
inc
cli
push
jb
aad
pop
mull
xor
cmpsb
stc
mov
push
in
mov
xchg
and
lock
push
outsl
cs
and
aas
mov
popa
outsl
xchg
push
pop
push
lock
xor
les
xchg
fs
adc
div
mov
rclb
js
mov
xor
xchg
loope
test
or
seto
and
jecxz
cltd
jmp
pop
and
pop
xchg
push
dec
or
in
jge
pusha
dec
pushw
mov
xchg
sahf
addl
clc
xchg
dec
sbb
sbb
jg
iret
mov
jne
popa
mov
daa
in
test
movsl
in
notb
stc
xlat
and
sbb
jge
mov
call
lods
or
jmp
insb
dec
repnz
scas
push
outsb
or
or
xor
adc
adc
dec
mov
and
xchg
stos
xor
dec
adc
sbb
adc
add
cltd
sub
inc
not
inc
sub
fnsave
xchg
pop
ficomps
cwtl
mov
mov
mov
pop
xor
add
mov
xchg
cmp
pushf
push
jbe
mov
lret
aas
and
jmp
jp
mov
ja
cmpsb
loop
mov
jle
mov
icebp
ss
adc
testl
insb
cli
mov
cmp
xor
jmp
popa
fnsave
ss
adc
mov
orl
scas
lods
dec
dec
imul
push
xor
xchg
mov
inc
stos
mov
push
shrl
arpl
shll
xor
movb
dec
sub
pop
repz
andb
imul
mov
xchg
movmskps
sbb
lock
and
cmp
mov
lods
arpl
adc
repz
arpl
faddp
scas
inc
jmp
lret
xchg
push
into
nop
out
jecxz
aas
push
ret
add
xchg
out
jl
push
sbb
xor
xchg
pusha
cmpsb
mov
clc
out
dec
mov
test
call
jle
stos
std
or
pushf
and
pushf
fmulp
pushf
test
xchg
daa
testl
stc
gs
sub
loopne
jmp
and
jle
cmp
mov
and
mov
jg
jl
cmpsb
cmp
aam
jmp
testb
adc
and
pop
jmp
push
and
movsb
pop
jmp
mov
sub
mov
into
jno
jnp
fwait
adc
xchg
or
add
jmp
mov
orb
xor
gs
andb
adc
cs
sahf
incb
xchg
add
or
xor
mov
pop
rolb
ja
xchg
les
pop
mov
sub
sti
outsl
pop
jp
enter
ja
ret
jp
cmp
popa
in
mov
stos
rol
push
pop
jo
add
cmp
imul
add
fimull
mov
jmp
shll
sub
cli
ljmp
pusha
insb
pop
divl
out
pushf
sub
divl
sbb
repz
clc
nop
sbb
loopne
in
lods
or
lahf
test
sbb
fidivrl
aaa
popf
inc
and
jle
lods
jl
popf
in
cmp
inc
sbb
sub
fidivrl
pusha
lcall
ret
jle
xchg
pop
push
clc
rcrb
inc
test
jl
icebp
data16
pusha
lahf
jmp
dec
les
inc
sub
jle
sbb
loope
pop
cmp
pusha
push
inc
xor
leave
cmpb
and
push
pop
jp
jp
cld
sbb
cmpsl
mov
push
mov
cmp
mov
jge
xlat
imul
cmp
imull
roll
cmovae
scas
mov
loope
push
pushf
stc
fists
xchg
js
hlt
jmp
sub
xor
daa
xor
and
mov
inc
pop
out
xor
and
in
insb
shll
adc
sub
mov
mov
or
fstp
in
mov
das
repnz
jb
rcrl
inc
push
icebp
mov
mov
jge
pop
jmp
fsubs
aas
insb
fwait
imul
data16
and
jge
mov
adc
push
and
into
cmp
iret
jmp
sbb
xlat
adc
mov
js
add
inc
mov
pushf
adc
jle
add
sti
out
imul
dec
scas
cmp
fistps
mov
nop
stos
stos
mov
imul
leave
jns
cwtl
xchg
mov
bnd
int3
and
out
push
inc
in
enter
sub
and
stos
fucomi
das
fwait
enter
negl
orl
mov
mov
cmpsb
jg
pop
add
lock
cli
add
movsb
pop
jge
xor
imul
stos
fstl
mov
movsb
addr16
sub
mov
sbb
negl
pop
lds
cltd
and
pop
xchg
pop
loopne
xor
lcall
push
add
pop
or
mov
daa
push
repz
enter
mov
addb
pop
subb
sub
stc
icebp
repnz
push
sub
mov
insb
test
test
cli
mov
dec
dec
out
loope
pop
jle
mov
mov
push
out
nop
dec
repz
mov
out
ss
sbb
loop
insb
cmp
and
sbb
test
out
test
cmp
aaa
ja
xchg
lcall
add
or
movsb
sub
lods
dec
rcl
fst
mov
scas
jne
mov
add
out
mov
jne
es
cltd
mov
fs
jp
rorb
in
pop
cmp
lods
mov
shlb
add
lods
push
sahf
cli
les
popf
ja
or
or
sub
aaa
popf
repnz
and
sub
push
and
rol
xchg
push
loop
pop
loopne
push
loop
sub
adc
bound
pushf
call
adc
mov
jb
dec
mov
inc
cs
sbb
aam
out
lods
js
jns
xor
xchg
push
stos
addr16
push
xchg
dec
dec
xor
push
sub
cmpsl
mov
dec
mov
negb
addr16
lret
sub
outsb
mov
pusha
dec
xor
cld
insl
jnp
mov
xchg
clc
xchg
daa
fs
mov
std
cmpsl
and
sub
push
jg
int
cmpsb
sub
mov
inc
mov
das
dec
leave
insl
pop
jo
jns
cmp
js
repz
aas
or
cs
loop
cmp
into
xor
imul
jl
or
popa
scas
repnz
pop
xor
aaa
sbb
out
ret
jg
xlat
mov
fucomip
push
or
cmp
imul
mov
test
inc
push
fmul
xchg
jno
rdpmc
and
inc
test
or
or
adc
jne
push
repz
lcall
adc
xchg
pop
sub
dec
movsb
cli
shrl
test
push
das
xchg
hlt
fstpt
sbb
jns
jg
pop
jbe
mov
sbb
js
mov
pusha
and
lcall
rclb
jge
out
adcl
mov
into
xor
test
jmp
shrb
shl
movsb
push
rorl
mov
or
mov
mov
outsl
xchg
cmp
mov
mov
mov
add
mov
pop
sub
icebp
lret
dec
lcall
push
std
push
pop
imul
push
js
sbbl
in
sbb
fidivrs
mov
in
lcall
lret
and
shlb
dec
lods
mov
pop
mov
cli
pop
cs
movsb
dec
ja
repz
roll
out
push
xor
jg
mov
xchg
repz
xchg
push
cmpsb
jns
js
aas
fcoms
pushf
testl
and
xchg
cmp
and
pop
push
insb
push
aas
pop
lea
in
push
inc
dec
pop
fldt
jnp
add
cmc
ds
in
adc
test
jae
outsl
popf
xchg
mov
pop
out
dec
jg
lods
pop
loop
je
outsb
int3
add
cmp
mov
mov
pushf
shl
arpl
call
cmovbe
push
and
fs
rcl
sbb
or
mov
bnd
pop
mov
mov
xor
push
lds
in
xchg
push
rdpmc
mov
loope
jne
mov
push
rcr
pop
mov
push
fdivrl
sbb
fnsave
outsb
pushf
stos
cmpsb
cmp
stc
rclb
jns
fst
call
aam
out
mov
cmp
pop
es
mov
ds
aas
xchg
arpl
mov
testl
pop
out
mov
and
outsb
mov
iret
sar
pop
or
dec
mov
sub
pop
incb
mov
sub
dec
jo
add
adc
mov
pop
xchg
sti
inc
mov
fcomps
dec
aad
loop
orb
push
jbe
pushf
sbb
sbb
mov
mov
inc
mov
dec
int
pop
ljmp
imul
repz
aam
cmpsb
out
je
xchg
aad
lret
push
mov
int
subb
or
cltd
loopne
loop
loopne
adc
mov
dec
cmp
gs
sub
dec
dec
jle
dec
test
jp,pn
outsl
addr16
jno
in
ret
mov
lcall
dec
or
mov
orl
mov
jnp
leave
mov
pmulhw
mov
cmp
sub
dec
lcall
jecxz
mov
mov
cwtl
xor
rolb
cmpsb
jne
sub
pop
lcall
adc
add
cmp
mov
les
cltd
or
jnp
and
push
out
xchg
in
aad
pop
popf
cmpl
sub
mov
lret
jmp
jb
mov
cs
in
sbb
inc
lods
push
js
cwtl
gs
mov
cmp
in
shll
jb
nop
push
mov
and
popa
fcmovne
int3
push
lds
sub
insb
mov
push
xor
adc
iret
or
aas
xor
sbb
aad
fldenv
paddd
jge
jae
xor
addb
cmp
movsl
sub
bnd
push
out
mov
in
mov
mov
inc
mov
jne
fdivrl
push
cmc
aas
hlt
dec
pop
cld
divl
iret
sbb
add
addr16
test
push
lret
push
mov
push
sbb
outsl
mov
adc
int
pop
fwait
xor
pop
xor
test
push
test
rclb
addr16
or
add
mov
fwait
shlb
fwait
icebp
mov
or
icebp
sub
jb
push
xlat
push
fisubrs
and
popf
xor
jns
in
pop
push
pushf
and
testb
xchg
movb
add
push
xchg
mov
ret
in
lahf
cmp
movsl
cs
aaa
int
or
jp
rcrb
jp
pushf
xor
out
bound
push
xchg
test
jp,pn
dec
xchg
cld
jnp
roll
imulb
orl
cs
xchg
addr16
cmp
call
xor
shlb
imul
inc
xlat
cmp
fidivrs
xchg
imul
lds
sahf
mov
pop
mov
fwait
or
jge
nop
push
les
sbb
sbb
aaa
xor
xchg
sbb
aas
adc
inc
adc
into
enter
fsub
sbb
loope
dec
and
loopne
data16
sarb
fs
in
and
jmp
js
or
stos
push
repz
out
xchg
ret
shl
or
xlat
loop
and
pop
jg
mov
clc
fwait
es
adc
ffree
lret
mov
sub
pusha
sbb
enter
jns
or
xor
push
out
mov
push
movsl
jecxz
mov
loopne
jmp
xchg
lea
int
mov
std
jb
or
cwtl
and
pop
adc
adc
lcall
popa
mov
sbb
mov
aaa
outsb
stos
imul
sbb
sub
pop
mov
sti
xlat
and
dec
fstpt
and
outsb
aaa
pop
stos
andb
imulb
lcall
adc
sbb
into
nop
filds
mov
imull
and
sahf
mov
inc
mov
mov
mov
cmc
rclb
sti
lcall
sub
test
pop
test
lock
roll
xchg
mov
pop
inc
adc
xor
cli
mov
mov
ret
movsb
mov
addl
adc
jg
mov
push
sub
sbb
inc
cmp
push
js
in
bound
sti
inc
push
jecxz
arpl
addb
jl
push
scas
push
pop
dec
pop
or
cmpsl
clc
inc
fisubrs
shl
jp
outsb
sub
xchg
or
lock
ds
call
push
dec
pop
pushf
sub
stos
push
lods
mov
sub
cmpl
jns
sub
lods
shrb
lods
out
leave
mov
decl
adc
mov
movsb
pop
cld
adc
xchg
push
les
cli
pop
sub
movsb
lods
aad
stos
mov
addr16
pop
popa
adc
pop
jbe
les
sarl
xchg
mov
cmp
push
es
sub
sbb
mov
inc
push
faddp
xchg
daa
inc
aaa
aam
mov
lods
sub
cltd
repz
test
jne
lret
pop
test
add
mov
xchg
dec
faddl
imul
cmc
push
push
scas
push
mov
jb
and
jg
jle
mov
sub
sub
mov
in
xchg
in
fildll
sbb
into
das
orb
inc
es
and
xchg
jns
stc
xor
dec
out
mov
rcll
jge
rorl
adc
add
lret
test
loopne
es
das
shll
and
jo
movsl
push
sti
pop
cli
mov
mov
jo
sub
mov
jg
adc
cmc
xor
int3
mov
out
adc
ficompl
addr16
fwait
dec
popf
insb
mov
insb
cmp
loopne
stc
push
mov
sub
lret
xchg
test
test
jns
shl
xor
fwait
stc
ja
jmp
out
int3
mov
xor
mov
testl
push
lahf
fimull
pop
cmp
lahf
sbb
dec
lock
jns
sub
shll
mov
sbb
mov
mov
dec
aas
or
in
aam
imul
insl
popf
fwait
in
sub
sarb
cmp
les
rcrb
mov
iret
ret
and
cmpsl
pop
insl
out
daa
mov
out
jle
adc
in
movsb
xor
lret
pop
cmp
flds
or
inc
pop
lret
or
push
mov
xor
push
sbb
push
mov
das
sub
jg
pop
push
cmp
rcrl
ret
adc
ss
nop
mov
into
mov
pop
in
xchg
stos
fimull
out
push
neg
push
enter
mov
add
out
mov
movsb
ss
and
adc
jmp
push
pop
mov
mov
adc
jb
das
push
sub
mov
das
sub
inc
leave
scas
mov
cwtl
inc
mov
xor
sahf
nop
pusha
inc
std
popf
sub
rcll
xchg
jns
xor
pop
clc
outsl
and
daa
js
imul
cmp
xchg
jg
cmp
add
jae
sbb
insl
icebp
int
inc
or
data16
loope
dec
and
dec
je
pop
mov
adc
scas
scas
sub
xor
and
sub
sbb
jmp
dec
stos
dec
mov
or
lds
mov
ret
pop
and
push
mov
xchg
pop
hlt
adc
dec
cmpb
popl
loope
aad
or
or
mov
xchg
sbb
sub
push
jl
push
and
lock
xchg
push
and
jle
filds
cmp
xorl
lahf
nop
adc
test
xchg
int3
ds
loope
xchg
repz
mov
xor
sbb
fisttpll
cmc
in
je
dec
faddp
ficompl
mov
dec
dec
nop
fisubrl
mov
scas
push
stos
mov
inc
iret
mov
mov
bound
push
pop
sbb
and
dec
cltd
scas
xorb
ljmp
bound
sbb
mov
addr16
es
std
mov
adc
xorl
or
repz
and
jo
es
das
and
sub
sbb
vmovlps
push
mov
dec
xchg
lret
adc
xchg
inc
and
subb
test
montmul
cmpsb
xchg
mov
cltd
enter
ss
jg
es
cmp
mov
lret
loopne
push
push
jg
addl
pop
insb
inc
sbb
cmp
cs
xchg
push
xchg
in
cwtl
mov
mov
pusha
xchg
cld
in
cmp
fmul
add
lret
pop
aas
cli
daa
pop
cmpsb
fmul
mov
das
mov
mov
and
pop
in
lcall
leave
push
fldl2t
push
addl
pop
in
aaa
data16
jo
dec
jo
cmpsb
stos
sti
dec
xor
inc
std
es
lret
mov
das
sub
in
pop
cmp
stos
fmul
push
pop
int
pop
xorl
dec
leave
mov
test
out
xor
mov
inc
iret
in
into
addr16
add
cltd
inc
sarb
xchg
add
stos
cmpsb
cmc
js
push
jbe
xor
cs
adc
fwait
cmpl
pop
cmp
aad
mov
lds
mov
testb
or
lret
jb
xchg
aam
adc
jecxz
mov
mov
jne
inc
add
xor
mov
adc
jnp
ret
push
jl
sti
ret
mov
mov
fs
sbb
out
mov
and
mov
sbb
cmp
bound
stos
jbe
sbb
rcrl
jle
jo
mov
cmp
and
xor
jecxz
mov
out
es
or
mov
loopne
sub
pop
jecxz
out
xor
sbb
sbb
es
mov
mov
out
cmp
gs
sub
inc
cwtl
in
repz
loop
xchg
or
ret
adc
bound
cld
addl
lods
rcl
ss
outsl
push
mov
into
clc
fisubrs
mov
add
mov
push
cmp
shlb
sbb
xchg
xchg
pusha
popf
xchg
mov
les
push
and
xorl
test
mov
adc
or
mov
dec
adc
mov
mov
fwait
lret
lock
mov
and
push
push
xchg
push
jns
scas
bound
in
mov
and
cmp
cwtl
and
pop
dec
mov
cmpsl
pop
xchg
aad
dec
outsb
or
xchg
push
xchg
loope
pop
shrb
xor
pop
sbb
aam
testl
lods
aad
sub
jae
sahf
repz
daa
xor
cmp
sub
icebp
repz
or
jo
sub
mov
in
into
cmp
stos
aaa
and
mov
es
pop
ja
push
or
aad
sub
cmpsl
cmp
scas
dec
nop
and
xor
push
js
out
push
jp
adc
andl
mov
push
ror
push
frstor
scas
and
and
pop
test
imull
fnsave
daa
popf
lcall
push
mov
adcl
fisttpl
cmpsl
in
insb
fwait
pop
or
hlt
mov
push
leave
and
mov
cs
lods
xchg
mov
mov
repnz
mov
out
push
cs
xchg
jl
and
pop
rcrb
push
lea
mov
lods
in
inc
push
iret
mov
sar
rcrl
rorb
mov
inc
push
aam
mov
data16
jnp
cltd
clc
mov
sahf
ds
popa
mov
adc
jge
adc
popa
push
cwtl
add
cmp
jmp
pop
and
call
in
shll
test
dec
fcomps
or
cmp
roll
sbb
xchg
orl
lods
ds
fdivrl
add
stos
cmp
jle
push
inc
adc
adc
aam
jg
mov
pop
mov
push
ja
popa
and
xor
repz
dec
jmp
xor
and
movsl
push
ret
ds
lods
data16
cmp
push
out
fisubl
jbe
jmp
and
ljmp
jo
mov
inc
push
fidivl
mov
xchg
dec
cmpsl
jbe
and
dec
and
sbb
cmpsb
lods
and
pop
push
insl
pop
lods
sub
pushf
xchg
sbb
pop
push
mov
push
xchg
popa
jbe,pt
loopw
int3
aam
in
jecxz
ret
stos
mov
enterw
cmp
xchg
roll
cmp
mov
ret
dec
sahf
and
dec
std
int3
and
sarb
mov
push
cwtl
xchg
cld
imul
ds
movsb
lods
pop
jg
flds
jg
cmpsl
cld
in
mov
sbb
call
push
call
dec
insl
dec
jb
dec
imul
shrl
gs
pushf
test
iret
sub
sub
pop
in
xor
rol
test
je
setg
mov
aas
cmp
sub
imul
out
dec
jb
cmp
rolb
or
add
mov
add
jae
fmull
adc
pop
in
push
int
lods
fwait
mov
dec
push
dec
scas
mov
push
mov
dec
xchg
mov
pop
sub
add
dec
adc
pop
gs
cmc
jecxz
call
pushf
into
outsb
fisttpl
in
imull
loopne
mov
lods
mov
sarl
pop
pop
je
aad
xchg
pop
pushf
ja
and
in
jo
stos
mov
cmpsb
jbe
divb
sub
push
cwtl
and
jbe
inc
mov
stos
inc
orb
iret
adcb
lods
xor
xor
jge
nop
pop
and
dec
rcl
out
mov
mov
mov
andl
and
movsl
jno
iret
es
sub
cmp
pop
repnz
test
or
push
clc
inc
dec
bound
mov
sarb
test
out
scas
int3
dec
push
cwtl
movsb
test
fcmovne
mov
mov
mov
insb
ret
inc
mov
xchg
out
cli
push
adc
jmp
imul
mov
cwtl
cmpsl
mov
lret
cmc
faddl
andl
mov
mov
mov
cmp
add
push
jne
ljmp
xchg
mov
or
stc
icebp
aaa
mov
loop
fs
and
jle
leave
popf
in
push
or
mov
fnstenv
xchg
out
adc
sub
mov
sti
adc
mov
push
push
popa
mov
mov
cmpb
popa
dec
add
jecxz
mov
dec
mov
push
imul
and
outsb
ret
mov
mov
mov
xor
xchg
insb
xchg
ret
push
fisttpl
and
das
addl
lods
dec
pop
in
pop
jmp
es
mov
add
jns
sbb
dec
faddl
pop
ret
mov
dec
mov
popf
loopne
add
inc
mov
cmp
roll
xchg
fildl
jle
sbbl
dec
js,pn
test
pop
and
push
fidivrl
adc
popa
or
repnz
xor
add
jnp
loope
cmp
push
adc
mov
dec
fsubp
xchg
aas
jle
jle
leave
int3
or
hlt
mov
xchg
mov
lods
in
sti
adc
xchg
mov
sti
icebp
push
dec
lret
xor
outsl
clc
xor
lret
insb
lods
aas
xor
aas
xor
leave
pop
mov
nop
aam
push
inc
inc
cmp
sti
mov
nop
addr16
sbb
cmp
mov
pop
ret
xor
shlb
jg
loopne
enter
aaa
repnz
mov
lcall
dec
pop
xchg
rcl
pop
push
lahf
outsl
les
ss
mov
xlat
dec
xchg
stc
jno
repz
int
mov
daa
jp
or
insl
pop
xchg
cltd
pop
in
pop
inc
clc
lahf
adc
ret
adc
pusha
mov
stos
mov
out
push
mov
lret
out
jbe
filds
arpl
pop
mov
rcll
pop
sbb
mov
addb
xor
inc
xlat
jmp
out
mov
dec
inc
lea
ss
movzwl
xchg
popf
in
cmc
jmp
out
in
push
add
aaa
gs
mov
mov
lods
mov
xchg
test
repz
stc
pusha
imul
mov
movsl
xor
xchg
or
adc
mov
shll
test
sub
icebp
enter
js
dec
and
xor
pushf
adc
or
jp
pusha
jns
lcall
clc
cmp
xchg
or
inc
cmpsl
fdivl
int3
dec
jno
fs
dec
sub
popf
cmpl
mov
push
lds
sbb
popf
push
push
jo
and
mov
cs
adc
scas
inc
sbb
xchg
or
xor
xor
fidivs
fsubrl
jmp
push
and
sahf
shlb
jae
push
or
xchg
sub
mov
rcll
xorl
in
inc
push
insl
sub
dec
push
rorl
xor
pop
movsb
out
mov
cwtl
pusha
imul
push
jl
arpl
cltd
mov
dec
movsl
iret
int
push
jne
sti
push
adc
int3
std
data16
je
fcoml
flds
shrl
jbe
fldl
fisubs
cld
jl
movsb
outsb
mov
test
mov
loop
mov
nop
cmp
adc
pop
add
dec
pop
cli
xchg
lods
aam
test
int3
cli
int3
mov
mov
iret
mov
or
lret
mov
mov
loope
push
mov
cwtl
pop
lret
and
sbb
add
mov
stos
inc
xchg
inc
fbld
push
sbb
add
sahf
inc
xchg
and
test
or
jne
push
and
jae
jl
push
lahf
js
mov
jge
fs
and
popf
xorl
push
adc
pop
mov
pop
jl
push
pop
jnp
int3
sbb
sbb
sub
push
scas
sbb
mov
cmp
sarb
mov
pushf
mov
xchg
mov
ret
scas
push
popa
orl
jno
lret
cltd
pop
lock
cmp
jg
popa
arpl
pop
jmp
jmp
pop
inc
outsl
lcall
test
jle
std
pop
and
add
and
int3
xchg
fdivl
test
fnop
mov
nop
sbb
jns
mov
jne
adc
shr
push
or
shll
inc
orb
enter
mov
cs
jo
sbb
sub
in
cmp
mov
loope
fists
les
adc
rclb
push
push
data16
movsl
leave
xchg
lock
addr16
cmpsb
lea
mov
decb
mov
add
mov
pushf
fildl
icebp
inc
test
mov
or
adc
pop
mov
loopne
sti
imul
mov
sti
push
push
jb
notb
inc
dec
cld
and
data16
adc
bound
jb
call
jne
andb
imul
dec
and
out
mov
push
scas
xorl
call
aas
call
jg
or
add
xchg
xlat
pop
mov
jae
stc
jge
jne
lods
mov
adcb
or
cmpsl
das
sub
stc
sbb
call
clc
test
test
stos
outsl
pop
xor
add
push
ss
repz
gs
shl
cmpsl
and
pusha
rorb
mov
mov
movsl
in
adcb
inc
dec
in
inc
mov
fisttps
cmpsl
sub
push
fisttpl
insl
sbb
mov
mov
pop
sub
add
or
lods
lahf
xchg
mov
lock
pop
adcb
test
adc
mov
cmpsl
out
std
and
xor
mov
insb
or
ret
adc
imul
mov
xchg
std
add
out
scas
repz
addr16
mov
push
pop
mov
jle
push
std
insb
lret
shll
jae
sbb
faddl
sbb
mov
mov
subb
sub
inc
out
lret
testl
out
js
or
rorl
fwait
and
jmp
jnp
jae
aas
cmp
mov
rcrb
cmpsl
lahf
xchg
push
xchg
or
mov
pop
dec
in
aaa
sbb
stc
sub
mov
pop
lcall
dec
enter
stos
inc
lcall
xor
xor
dec
pusha
cwtl
inc
jecxz
insl
jp
push
nop
int3
cltd
in
dec
xchg
loopne
adc
cmc
push
adc
lea
mov
repz
orl
lock
mov
add
inc
add
xchg
fwait
ja
xor
adc
adc
inc
movsb
add
mov
push
pop
cs
cmc
push
test
inc
mov
xchg
scas
cmp
sub
mov
inc
hlt
sbb
popa
insb
stos
cmp
pop
lods
fwait
arpl
add
adc
fcoml
push
shr
jbe
leave
fisubl
mov
mov
and
mov
dec
adc
insl
push
mov
sbb
shrb
test
pop
mov
xchg
ror
xor
push
insb
repz
or
cmc
ficoms
cs
imul
xchg
jae
mov
pusha
loopne
ret
js
scas
lret
jge
arpl
jg
outsl
leave
subl
mov
loopne
jecxz
ja
and
lret
xchg
imul
mov
push
je
rcr
push
ret
push
dec
movsl
jle
sub
push
lahf
cmpsb
test
std
and
or
or
ret
dec
fsubr
mov
loop
push
inc
or
push
dec
xchg
dec
sbb
in
test
cmpsb
ficoml
xor
lea
into
hlt
cmpsl
mov
cwtl
inc
rorb
icebp
push
ror
cmpsb
mov
push
loopne
xlat
pop
pop
lahf
cltd
add
leave
sbb
clc
inc
test
push
push
shlb
mov
out
inc
movb
adc
insb
cmpsl
lock
insl
in
cmp
push
and
scas
or
cs
inc
loop
scas
test
sbb
xchg
pusha
or
pop
dec
ljmp
in
dec
repnz
xlat
xchg
sbb
popa
jl
sarl
ja
xchg
push
cmc
scas
or
aaa
es
jbe
andl
addr16
lahf
insl
cwtl
mov
pop
jae
and
pop
inc
ljmp
pop
loop
ss
mov
mov
cmpsl
xchg
inc
ret
out
data16
jp
jmp
pop
push
movsl
and
mov
dec
sbb
cmp
or
cli
stc
xor
and
mov
cltd
jl
cmp
shrl
hlt
arpl
mov
clc
or
sub
mov
ds
lahf
mov
hlt
adc
mov
mov
call
lea
aad
es
int3
into
ret
sbb
pop
rclb
cmp
push
stos
sbb
inc
cmc
scas
ret
adc
lahf
or
dec
jecxz
add
inc
ljmp
mov
and
lds
cmp
sahf
nop
jge
outsl
cmp
aas
sub
imul
lret
lret
leave
js
mov
pusha
inc
adc
mov
loop
movsb
es
add
xchg
jae
xor
adc
mov
bound
xor
loop
fldt
loop
add
mov
sub
outsl
xchg
push
jg
scas
loope
xchg
push
mov
mov
xor
push
gs
mov
dec
addl
jnp
mov
xchg
flds
sbb
xor
in
add
repnz
ss
sbb
fiadds
dec
stos
push
aad
cltd
mov
mov
in
scas
xchg
sar
push
data16
sahf
dec
or
scas
insl
xchg
shl
mov
sbb
negb
add
sbb
jecxz
loope
inc
xor
mov
sbb
lds
fwait
pusha
in
cmp
pusha
jo
js
shl
dec
add
add
xlat
push
mov
and
lcall
adc
push
sbb
stos
cli
test
push
aaa
mov
or
scas
jle
xchg
aam
rcr
push
fiadds
arpl
mov
sub
mov
dec
mov
sub
cwtl
arpl
hlt
cs
fistpl
mov
sbb
gs
in
sub
aas
fsin
push
mov
xor
loop
adc
inc
cwtl
xor
test
popf
pop
inc
push
pusha
sub
outsb
sbb
adc
jmp
inc
insb
int3
mov
jmp
xor
insl
pop
adc
jge
movsl
out
xchg
inc
in
pushf
bound
repnz
cmp
and
push
cli
je
adc
push
inc
dec
sarb
icebp
or
inc
and
xchg
es
cmp
dec
jbe
imul
dec
jnp
and
xchg
aad
lds
dec
dec
rol
das
mulb
cli
and
or
test
popa
sub
adc
adc
push
insl
mov
cmp
repz
adc
mov
test
cltd
pop
sahf
gs
fisubl
pusha
in
movsb
sbb
aaa
push
push
andl
addb
cmp
out
rorb
sub
and
adc
iret
imul
outsl
push
mov
test
pop
mov
adc
fistl
push
xor
add
outsb
sbb
mov
mov
clc
xchg
jmp
jg
loope
imul
xchg
sub
dec
cmc
in
inc
sahf
mulps
xor
lret
push
iret
jle
xor
mov
cmp
jp
fdivrl
mov
dec
inc
mov
les
and
int3
scas
cmp
test
xor
push
mov
inc
insl
repz
sub
xchg
loop
or
lret
lea
insl
xchg
cmpsl
or
jno
push
xor
stc
and
mov
add
lcall
xor
das
dec
fdivrs
inc
mov
mov
jnp
outsl
lock
push
addr16
fisubrs
xchg
cmc
mov
ret
stc
fsubrl
mov
out
mov
add
push
sbb
add
or
pop
das
stc
es
xor
sbb
aad
pop
ror
lahf
adc
mov
pop
or
lcall
inc
pop
mov
push
xor
fbstp
fcmovb
pusha
sbb
int
les
dec
divl
sbb
js
ja
scas
lret
mov
lds
test
jno
movsbl
mov
fmuls
fs
and
jmp
fisubl
call
cli
push
mov
mov
ss
call
inc
xchg
sbb
pop
or
es
sub
mov
loope
call
jecxz
cli
pusha
mov
ret
inc
fldl
ljmp
and
mov
sub
mov
jg
ljmp
repnz
cs
int
inc
pusha
jecxz
es
scas
sub
push
stos
add
jne
cli
and
inc
lahf
das
fsub
jae
adcl
xor
add
inc
cmp
stc
loop
dec
lcall
and
inc
mov
pmaddwd
popa
js
lock
pop
test
push
repnz
cmc
cmp
pop
rcrl
inc
xor
cmp
push
pushf
add
popf
inc
or
add
xor
or
cmpsl
push
add
fs
mov
cmpsb
lds
adc
mov
enter
fwait
in
cmpb
test
fld
mov
lods
sub
xchg
mov
push
int3
mov
iret
pop
movsl
mov
in
lcall
mov
int3
call
andb
test
in
push
push
or
pop
push
addl
stc
cltd
imul
jae
mov
nop
rcl
dec
sbb
insb
dec
ret
sub
mov
aad
lods
in
test
jle
dec
sub
mov
and
enter
mov
mov
push
mov
ss
or
notl
andl
sub
jge
test
xor
add
nop
or
sahf
mov
adc
test
adc
jno
or
aad
and
pop
lret
enter
mov
je
xchg
inc
mov
imul
add
test
cmp
mov
sub
adc
iret
jecxz
mov
and
add
xchg
jns
dec
jge
jmp
dec
outsl
mov
popf
pusha
std
mov
mov
sub
pushf
sahf
andb
call
dec
hlt
loope
insb
out
test
imul
cli
xor
mov
rcrb
mov
xchg
lahf
aas
sahf
cs
or
push
jae
pushf
dec
test
test
mov
sahf
or
popa
gs
and
repz
es
push
lods
subb
std
loopne
gs
sub
int
mov
std
mov
js
cmp
lods
xor
hlt
xchg
xor
outsb
outsb
xchg
hlt
push
pop
ja
xchg
add
sbb
pop
jmp
jo
mov
scas
repnz
movsl
mov
mov
jo
pop
dec
jmp
int3
mov
retw
je
shrb
sbb
jp
adc
lods
xor
push
addr16
jp
stos
sub
test
sti
push
fdiv
mov
lret
mov
xchg
push
dec
mov
jne
jmp
out
xor
mov
mov
push
push
popa
into
pop
mov
sub
dec
nop
test
mov
mov
xor
inc
pop
cmpsl
out
mov
or
and
mov
nop
cld
jp
or
xchg
mov
repz
stos
inc
and
cmp
jnp
xchg
or
inc
das
jge
rclb
pop
pop
jbe
lods
xor
imulb
adc
incb
int3
addb
outsl
mov
stos
std
mov
mov
fldenv
mov
ret
dec
push
stc
mov
or
mov
mov
xor
shll
inc
cmp
aad
jno
test
fwait
lods
cmp
pop
rcrl
add
into
cmc
stos
sub
scas
mov
in
pop
sbb
ret
pop
mov
jl
mov
jl
mov
xor
jne
push
xchg
ljmp
scas
aaa
jge
arpl
test
xchg
cld
jl
std
xor
sbb
mov
enter
mov
mov
xchg
aaa
repnz
and
jg
out
sub
xor
mov
jb
lret
inc
add
divb
movsl
into
int
rcr
mov
dec
call
push
fnsetpm(287
test
jbe
jle
pop
insl
xchg
outsl
mov
sub
or
inc
xchg
xor
clc
scas
add
and
das
or
mov
xchg
mov
pop
rolb
stos
shlb
mov
in
repnz
pmaxsw
mov
fnstcw
sbb
into
loop
rcrb
mov
inc
fisttps
inc
mov
sub
adc
inc
mov
pop
pop
mov
jg
mov
dec
or
mov
cwtl
inc
mov
pop
sub
push
jbe
incl
ja
sub
jnp
outsl
mov
mov
std
test
js
int
js
mov
test
ss
push
mov
add
sbb
rorb
pop
rcrl
in
lcall
mov
sbb
and
xchg
arpl
jecxz
dec
xchg
cmc
and
mov
lods
xorb
and
sbb
push
adc
jo
rorl
push
xchg
jp
pop
jle
int3
mov
inc
add
add
fs
xor
cltd
cltd
dec
je
push
push
lret
call
and
das
push
mov
dec
leave
inc
fisttpll
gs
in
or
in
pop
stos
fisubs
mov
nop
inc
aaa
sbb
cli
sti
jmp
adc
jecxz
xchg
adc
pop
std
pop
dec
mov
pushf
mov
je
and
sysexit
and
push
gs
mov
cwtl
jle
bswap
pop
xchg
popf
roll
cmp
in
mov
ja
call
push
inc
jbe
jnp
fldt
adc
push
outsl
pop
data16
js
cltd
movsb
sub
popa
dec
jbe
fdivl
and
or
test
xor
pop
adc
movsl
mov
sub
jbe
xlat
fistpll
enter
test
inc
gs
popa
negl
lahf
arpl
push
inc
mov
push
enter
pop
mov
jp
adc
mov
mov
cld
lret
mov
mov
dec
mov
sbb
dec
les
test
fs
int3
aam
sub
enter
inc
das
jg
in
aad
sbb
outsb
adc
inc
pop
into
inc
test
add
dec
and
lret
hlt
push
inc
je
sub
mov
popf
stc
sbb
mov
pop
nop
js
mov
mov
fisttpll
lcall
jl
cmc
dec
xchg
inc
xchg
pop
loopne
faddl
pop
inc
jb
inc
pop
pop
stos
push
dec
lds
sbb
test
out
cmpsl
dec
mov
push
cmp
cmp
adc
push
sbb
pop
popf
push
test
sub
icebp
jl
xor
aam
clc
sub
mov
mov
test
shlb
loop
ret
push
push
cmp
arpl
xchg
in
roll
orb
push
mov
dec
mov
mov
into
jl
push
dec
cmpsl
fsubrp
mov
lds
rclb
mov
aad
or
mov
inc
loopne
stc
out
inc
mov
imul
push
xchg
add
ljmp
fbstp
mov
mov
mov
and
pop
inc
push
mov
loopne
psubusb
pusha
out
push
lods
jbe
pop
ret
mov
cmp
fstps
and
lea
add
jns
mov
jo
pop
mov
push
pop
jno
es
mov
test
pop
inc
mov
mov
ret
repnz
loopne
xchg
jl
and
adc
sub
outsb
mov
lahf
repnz
loop
rcll
adc
sub
imul
add
pop
inc
fwait
lods
cwtl
inc
in
sahf
sub
dec
xor
sbb
inc
lock
popf
outsl
adc
je
xchg
xchg
mov
push
push
inc
mov
dec
xchg
mov
cmpsl
shll
ret
jecxz
cmp
rcrb
xor
sti
sbb
jo
cmpb
and
cmp
call
loop
xlat
jecxz
mov
push
push
xor
pushf
jns
cs
inc
inc
xor
push
into
clc
mov
fwait
and
shr
mov
sub
sub
xor
mov
mov
sti
mov
pusha
dec
repnz
push
push
xchg
xchg
aam
xchg
mov
xor
popa
lret
popf
mov
fs
add
jg
jb
add
push
and
inc
push
add
jno
stos
add
push
orl
ja
fmull
pop
aas
pop
xor
push
inc
cltd
inc
inc
lods
aad
add
jo
hlt
imul
cmp
inc
adc
pop
dec
clc
out
jmp
xor
cmpsl
mov
sbb
icebp
add
adc
sbb
stos
push
adc
sub
dec
cltd
jle
imul
js
mov
jecxz
cmpsl
ljmp
adc
mov
pop
mov
ljmp
hlt
jae
mov
sbb
add
sbb
xchg
push
jge
imul
xchg
daa
cmc
ficoms
repnz
mov
clc
repz
orl
jbe
jbe
sar
xchg
fcmovne
dec
or
loop
scas
fcmovnbe
sub
enter
fs
push
dec
or
inc
int
xor
adc
popf
add
das
into
leave
cwtl
popa
cld
stc
js
sbb
xchg
mov
pusha
ret
xchg
mov
adcb
daa
mov
push
mov
dec
or
dec
mov
adc
addr16
shll
sub
cmpsb
out
movl
xor
mov
outsb
mov
filds
imul
jns
xchg
inc
insb
enter
mov
xor
fldcw
loopne
popf
hlt
loope
pop
popf
jl
divps
insl
lods
enter
fildll
and
hlt
arpl
push
in
movsl
mov
mov
mov
popf
xchg
in
xchg
fwait
jg
jno
addr16
inc
aas
sbb
mov
push
out
mov
or
xor
push
or
and
addr16
lcall
loope
mov
insl
or
aam
mov
je
dec
shlb
testl
gs
mov
jae
cltd
mov
push
jmp
into
adc
adc
jmp
fildl
pop
and
sub
int3
cmc
movsl
and
pop
mov
movsb
les
mov
push
cmp
sub
fstpt
pop
mov
arpl
jae
aas
jge
dec
dec
sbb
je
imul
mov
in
jae
adc
xchg
sbb
xchg
lods
sbb
in
std
rclb
mov
cmc
insl
shlb
mov
xor
test
or
in
mov
xorl
push
fcmovnb
inc
loopne
sbb
xor
call
outsb
xor
jo
fnsave
mov
scas
mov
dec
pop
testb
pop
stos
mov
cmp
xor
or
lods
sahf
lcall
ss
mov
ret
push
sub
inc
movsl
cli
mulb
and
and
pop
sti
in
add
fstl
dec
pop
mov
adc
scas
mov
sbb
or
jp
mov
dec
pusha
or
mov
sti
mov
dec
fnstenv
int3
std
jle
dec
jmp
xor
mov
and
ret
ljmp
mov
fs
push
push
arpl
xchg
addb
push
inc
xchg
stos
xchg
mov
cmp
add
inc
adc
test
leave
sbb
jo
shll
sub
pop
push
jmp
mov
push
add
lahf
mov
inc
push
xchg
mov
sti
push
inc
jno
movsb
rolb
pop
addr16
fists
stos
push
cld
out
push
subb
add
sbb
pushf
or
aam
mov
dec
sub
mov
sti
in
test
mov
xchg
jb
je
ljmp
into
cwtl
hlt
or
inc
inc
push
xchg
leave
lahf
xchg
addl
mov
fstps
div
filds
sub
inc
fsubrs
mov
cli
call
pop
insb
add
add
jg
out
addr16
popf
out
lret
pushf
data16
lods
movw
xchg
push
jmp
jg
xor
xchg
xor
or
orl
cli
fmulp
clc
xchg
insb
popa
sbb
mov
icebp
mov
pushf
sub
jecxz
es
cltd
sbb
fcoml
cli
lods
jne,pn
mov
jecxz
dec
test
xor
dec
push
imul
cmpsb
xor
gs
push
cld
fdivrl
xchg
inc
push
mov
in
dec
mov
inc
jnp
push
arpl
insl
inc
dec
adc
test
push
inc
loope
add
addr16
xchg
mov
jbe
bound
and
mov
xchg
xlat
mov
or
add
mov
pop
sbb
out
jl
cltd
pop
cmpsb
or
jo
jle
leave
xchg
xor
arpl
stos
jge
mov
inc
sbb
dec
dec
xchg
adc
lret
pop
or
pop
outsb
mov
push
aaa
xorl
andb
jl
test
sti
scas
pushf
xchg
sub
xor
xor
jl
inc
fwait
xor
popa
inc
push
std
push
pushf
inc
sub
mov
jg
cs
cmp
sbb
dec
nop
lahf
dec
movsb
sub
inc
call
jg
stos
icebp
sbb
lret
jns
dec
lods
mov
mov
aad
mov
sub
adc
inc
cmp
lahf
xchg
cmp
or
mov
pop
setne
rolb
mov
mov
add
cld
cmpsl
push
imul
jl
lcall
lods
inc
sub
iret
mov
aam
xchg
inc
stos
dec
sbb
out
pop
xchg
aas
aaa
and
pop
cmpsl
or
fldcw
push
adc
stc
xor
pop
jp
add
mov
inc
mov
scas
mov
incl
pop
imul
push
pop
out
push
scas
dec
nop
add
sar
sbb
xchg
aas
mov
insl
shl
sbb
movsb
loopne
test
int3
push
repz
and
jle
lret
testb
pop
ret
dec
call
mov
jmp
pop
cmp
adc
or
insb
pop
fimuls
aas
xor
mov
cli
test
push
and
out
xor
or
in
xlat
add
and
fildl
and
pop
sub
add
jmp
aaa
in
mulb
pop
xchg
fwait
xor
jg
out
dec
adc
mov
pop
cmpsb
aaa
sub
loope
mov
repz
dec
addr16
cmc
or
mov
fyl2x
pop
pop
arpl
stc
movsb
mov
lock
movsl
push
jl
jae
je
pop
bswap
imul
fimuls
push
rcll
xor
dec
lock
or
jb
lock
jecxz
sub
cltd
insb
out
sbb
inc
ret
jmp
dec
push
cmp
mov
aad
jmp
imul
and
cs
loope
or
shl
cli
jne
popl
fs
mov
loope
pop
push
popa
xchg
mov
fbstp
dec
lahf
mov
repz
pop
xchg
andl
pop
imul
dec
sub
sti
inc
dec
and
fiadds
call
iret
movb
sbb
fldt
push
stos
mov
les
dec
jns
ret
or
dec
push
mov
mov
jns
addr16
jp
test
push
iret
in
xor
idivb
mov
das
cmp
leave
and
sahf
int
mov
popf
jbe
lea
jge
sarl
xor
mov
mov
mov
push
fcoms
push
or
and
mov
subb
and
out
pop
imul
add
push
mov
jle
ja
imulb
mov
rcr
cmp
add
xchg
and
insl
or
inc
xchg
sbb
ja
gs
into
mov
jns
test
std
insb
sbb
xchg
data16
adc
movsb
cmp
mov
cmp
sbb
sbb
push
stos
push
sbb
pop
jg
dec
adc
mov
cmpsb
pusha
inc
sti
pop
rcll
test
push
ds
inc
mov
mov
arpl
jl
sarb
mov
loop
sub
push
out
jmp
sub
sahf
sub
mov
mov
out
mulb
xchg
xchg
pop
pusha
dec
xchg
jnp
bound
fdivrl
mov
loop
in
mov
lock
lcall
les
mov
out
cli
pop
in
push
mov
sbb
enter
adc
into
cltd
das
sbb
outsl
movsl
hlt
sahf
ret
add
add
xchg
mov
pop
stc
and
sbb
or
sbb
jl
push
jns
add
cmp
sti
mov
out
xor
test
out
vprotw
pop
fcomps
fistpl
mov
mov
or
push
call
jo
popf
fscale
fwait
jbe
sbb
sub
ficomps
add
stc
or
adc
sub
mov
and
jne
clc
mov
sbb
jno
pop
mov
sti
jg
add
clc
mov
shrl
pop
add
or
sahf
dec
jae
xchg
aas
cmp
mov
sbb
jbe
stos
test
das
int
cmpsl
mov
mov
jnp
roll
push
sub
xor
xchg
ficoms
pop
push
pop
or
mov
out
xchg
push
mov
push
lds
hlt
call
insb
mov
shll
mov
sbb
in
add
es
add
jge
jge
or
sbb
jb
adc
movsb
sbb
jl
loopne
adc
test
cmp
dec
or
cmpsb
sbb
mov
stc
adcl
aas
adc
mov
loope
fistl
ret
jmp
push
add
fdivrp
dec
jbe
repnz
addb
ja
stos
or
mov
inc
hlt
aad
push
and
popf
jmp
loope
or
icebp
xor
inc
adc
fistl
xchg
pop
adcl
pop
das
jbe
xchg
sub
adc
mov
xor
inc
mov
cmpsb
inc
int
push
push
and
mov
iret
cmp
mov
sbb
out
dec
inc
fildl
int3
jg
sub
in
in
sub
rcrl
mov
inc
mov
movsl
push
mov
scas
adc
pop
mov
ja
adc
fisttpll
rep
push
and
mov
fadds
pusha
xchg
pop
adc
dec
pop
daa
sub
mov
cmp
int3
scas
aam
pop
daa
enter
out
push
cs
scas
movsb
cli
inc
dec
mov
sti
sub
mov
sub
cs
mov
xchg
fbstp
sti
lea
mov
xchg
jnp
cmp
scas
aaa
and
mov
add
pop
nop
xor
jne
loopne
jmp
outsb
enter
cld
push
xor
insl
fldenv
lds
loope
lret
rolb
mov
sub
push
gs
xchg
push
testb
and
iret
push
fisubrs
repnz
scas
rcll
lods
xchg
inc
movsl
ja
test
inc
lahf
or
sub
pop
lahf
add
mov
lods
adc
mov
lods
xor
push
mov
mov
sub
adc
sub
mov
mov
xchg
dec
in
enter
mov
adc
iret
sub
push
repz
stos
adc
lock
out
and
pusha
inc
call
and
sbb
sbb
mov
cmpsl
or
in
or
nop
das
sbb
sbb
jb
sub
and
push
mov
pop
mov
jg
gs
adc
mov
mov
outsl
in
mov
and
and
mov
xor
enter
je
test
loopne
in
lret
gs
push
inc
addr16
ss
push
push
sbb
dec
outsl
mov
mov
pop
scas
mov
inc
adc
jnp
and
addr16
aaa
adc
and
loope
cltd
sbb
cltd
outsl
inc
andl
insb
pop
and
pusha
push
fsub
in
insb
push
aam
and
mov
pushf
fistps
in
jo
mov
nop
rorb
imul
insl
cmp
loop
sub
xor
or
notb
lahf
jl
pop
lret
inc
xchg
orb
aad
in
mov
xor
xchg
jns
push
repz
leave
adc
gs
lea
cmp
inc
xor
sahf
inc
int3
mov
mov
jecxz
mov
and
iret
fmulp
aas
adc
lcall
inc
lods
fs
dec
test
pop
movsb
in
mov
cmpsb
xor
fdivr
pop
mov
dec
xor
cmp
mov
orb
add
cld
out
flds
xor
mov
dec
sbb
mov
roll
mov
rclb
cmp
test
jb
xor
insb
inc
jle
clc
aas
mov
mov
jecxz
movsb
push
push
cmp
cmpb
sbbl
xorb
test
popf
nop
mov
mov
cmc
xchg
in
dec
lock
aad
pop
mov
in
je
xor
sbb
push
push
mov
dec
jo
iret
test
mov
xchg
shll
in
or
mov
das
and
sbb
lcall
incb
mov
aad
xor
and
lods
dec
and
mov
mov
out
bound
jge
mov
in
sub
outsl
xor
stos
pop
stos
les
hlt
pop
mov
sti
xchg
dec
xchg
jmp
out
mov
jo
xor
mov
jb
jne
icebp
mov
pop
ror
shrl
test
insb
fstps
mov
jmp
sarl
pop
rorl
dec
icebp
push
into
push
adc
mul
aad
cld
cltd
mov
stos
out
cmpb
addr16
pop
rolb
push
in
push
add
add
test
push
sbb
mov
mov
stos
ret
push
cmpsb
lods
push
dec
repz
xor
mov
add
outsb
nop
les
imul
insb
add
scas
pop
and
jnp
adc
add
into
test
sub
xlat
jge
cmp
stc
insl
adcl
fstps
loopne
push
test
sti
push
dec
or
aam
imul
pop
xor
xchg
sbb
scas
mov
inc
imul
or
testb
data16
ja
mov
xor
add
leave
mov
pushf
int3
movsb
mov
in
ds
xchg
and
pop
fidivs
dec
fisttps
jbe
mov
enter
and
or
dec
pop
aad
negl
shll
pop
inc
xchg
mov
mov
add
fwait
jmp
jb
xchg
push
add
mov
jle
incl
dec
pop
jge
sbb
push
lods
sarl
mov
dec
adc
lahf
jmp
les
add
push
arpl
pop
inc
sarb
out
inc
jb
gs
call
aas
lock
mov
and
pop
sub
loopne
cli
test
inc
jl
and
int
pop
nop
fidivl
mov
xchg
sbb
mov
stc
dec
xor
mov
std
shll
lock
in
xor
cmp
inc
push
jge
fnstcw
shrl
cwtl
in
data16
inc
lret
cmp
pop
aaa
pop
mov
cmc
jbe
arpl
pop
push
mov
adc
stos
or
or
filds
es
icebp
push
stos
flds
xchg
adc
mov
jecxz
jg
xor
xor
xor
push
sahf
call
adc
jns
inc
jp
mov
in
pop
into
mov
sub
stc
xchg
pop
sahf
xor
les
cmc
test
mov
inc
adc
int3
xchg
sbb
mov
or
mov
sub
jnp
mov
jnp
fwait
cltd
imul
int
js
cmp
ss
mov
test
test
mov
lahf
bound
xor
test
movsb
cmp
pushf
and
fisubrl
and
xchg
push
sti
jge
aad
out
xchg
xchg
mull
inc
xchg
sub
ja
xchg
cmp
sub
stc
cltd
movl
andl
ljmp
adc
dec
xor
push
xor
mov
sbbb
mov
xor
dec
xchg
out
sub
cmp
mov
dec
imul
mov
push
dec
out
lods
subl
in
xchg
stos
dec
cmp
push
dec
std
sub
or
out
enter
fwait
dec
push
cmpsb
pop
push
cmp
in
xlat
jns
sbb
dec
bound
cmp
gs
xchg
jbe
ss
and
push
out
push
push
pusha
xchg
andb
or
fistps
call
iret
aad
fcoms
and
ljmp
adc
js
incl
pop
add
mov
jns
pop
cli
mov
movsl
add
xchg
push
sbb
dec
movsl
stc
push
test
mov
dec
or
xchg
dec
lods
xchg
mov
mov
test
add
cld
xchg
adc
inc
mov
sub
sbb
sbb
lods
sub
sbb
iret
enter
jp
cmp
dec
stos
lods
jo
push
and
jne
popa
mov
mov
outsl
std
out
ds
cmpsl
add
cld
push
and
rclb
cwtl
adc
call
in
jnp
mov
cli
lods
jl
aam
loope
pop
inc
int
lcall
pop
add
aaa
loope
push
ljmp
mov
lret
fsts
outsb
loop
pop
rorb
fisttps
cmp
test
enter
cli
out
sbbl
ds
fisubl
aad
jne
inc
and
pushf
nop
ficomps
in
les
in
ret
imul
and
shrl
aam
jge
xchg
into
jbe
repnz
leave
aas
and
stos
xor
push
mov
aam
sbb
lods
pop
scas
dec
pop
insb
xchg
cmp
lret
jmp
cmp
dec
fldenv
pop
loop
mov
inc
jg
loop
mov
cmp
popa
movsl
aas
add
in
xchg
pop
stos
fidivrs
lock
xchg
dec
movsb
arpl
jge
jbe
icebp
adc
call
xchg
add
popa
cld
scas
xor
iret
mov
orl
sbb
lret
mov
mov
cmp
cli
cmpsb
pop
les
mov
and
cmp
lret
mov
leave
add
push
sub
xor
adc
add
sub
cmpsl
lock
mov
insb
mov
mov
testb
adc
cmp
xchg
jno
insl
sub
pop
clc
lcall
movsb
jmp
or
stc
adc
in
mov
in
cli
cltd
push
mov
adc
lcall
cmp
jno
xor
pandn
pushf
xlat
dec
fdivr
or
pop
mov
hlt
lret
nop
push
xor
sub
fcoms
cmp
push
les
cld
call
cmp
test
notb
stos
aas
lds
pushf
pusha
xchg
dec
push
add
sarl
mov
enter
push
pop
xorl
jb
jmp
icebp
sbb
adc
mov
push
fcmovu
out
js
ret
push
iret
cmp
adc
push
jmp
dec
sub
fwait
lea
or
adc
push
add
inc
outsl
adc
scas
jns
jo
cltd
add
es
arpl
jno
or
dec
lret
mov
ds
sbb
hlt
into
lcall
leave
scas
adc
shll
or
pop
stos
inc
orb
out
clc
lret
mov
mov
ret
jns
je
test
pop
sbb
push
mov
mov
ds
xor
pop
fstps
imul
orb
aaa
mov
mov
rorl
loopne
mov
pop
div
fmull
in
cmp
jl
mov
test
sbb
dec
inc
jmp
fidivrs
add
aam
xor
push
es
xchg
xlat
dec
popf
lret
out
xor
es
inc
adc
or
add
inc
sub
cmc
lock
xlat
dec
in
pushf
sub
aam
mov
nop
into
test
pop
cmp
orb
std
xorb
mov
pushf
leave
fwait
adcl
sbbb
or
enter
enter
cmp
pop
sub
sar
push
jmp
inc
sti
stos
push
cmp
xor
je
jecxz
xor
clc
add
fisttpll
movsl
fsubrs
ret
sub
jmp
xor
iret
mov
fldcw
pop
test
outsl
push
xchg
ret
imul
mov
mov
cs
aad
inc
incb
push
xchg
rorb
sub
aam
push
aad
ljmp
scas
mov
repnz
xchg
xor
push
ret
repnz
and
ljmp
jno
cmp
adc
aaa
shll
andb
pop
add
push
fbld
jl
lods
mov
lcall
dec
addr16
in
mov
bound
xchg
insb
outsl
out
adc
inc
pop
idiv
and
sub
sub
out
test
je
mov
hlt
jae
jmp
add
movsl
lret
popf
repnz
xchg
enter
arpl
les
ret
bound
dec
sub
loopne
sub
pop
das
ret
ja
adc
shll
cmc
in
mov
jl
sbb
mov
inc
push
jecxz
sub
addr16
andb
aas
addr16
sar
or
mov
pop
dec
adc
test
and
lea
xlat
imul
xorl
cs
sbbl
sub
out
xchg
mov
aaa
arpl
lret
inc
in
xorl
xlat
jo
cmpsb
popf
mov
xchg
insb
sub
jbe
jbe
xor
ds
roll
mov
fidivl
lret
popa
test
stos
fsubl
mov
cmp
jmp
nop
out
cmpsb
lods
xchg
gs
shll
les
cmpsl
lods
xchg
rcll
in
mov
insl
bound
sbb
add
std
inc
push
inc
mov
and
xor
lret
mov
lcall
shll
icebp
cmpsl
jmp
shrl
mov
bnd
jo
sbb
movsb
in
lahf
test
jnp
push
sub
mov
push
push
dec
in
and
add
int
xchg
push
xchg
dec
ds
repz
insl
jl
popf
adc
jns
inc
inc
data16
jb
or
push
mov
sub
ljmp
pop
jge
in
addr16
loop
push
cmpsl
or
xor
dec
xchg
push
dec
fisubrl
orl
repz
icebp
outsl
ret
inc
mov
lea
test
xchg
popa
icebp
ret
push
into
nop
in
and
fdiv
mov
mov
sub
dec
add
adc
mov
push
fisubrs
rolb
sub
mov
adc
pusha
test
xchg
or
mov
loope
outsb
push
std
icebp
dec
repnz
dec
add
je
movsb
or
mov
pop
mov
pop
ljmp
push
cmc
mov
in
std
ja
imul
dec
shrl
mov
adc
shrl
stos
pusha
fcompl
fdivrl
ffreep
and
dec
and
fldl
mov
movsl
add
cmpsl
hlt
jns
add
icebp
sub
jno
cmc
shlb
dec
mov
repnz
inc
dec
jns
push
int
shr
test
sbb
add
mov
mov
lods
add
and
xchg
push
lcall
push
inc
push
jbe
shrb
pop
sahf
test
add
add
mov
or
and
sti
adc
pop
sub
mov
or
xor
or
inc
mov
movsl
call
cmpsl
ud1
mov
xor
lea
dec
into
daa
cmpsb
roll
out
inc
movsl
repz
push
cmp
aaa
xlat
aaa
sub
mov
push
or
cmp
sahf
fistps
test
pusha
pop
mov
sbbl
aam
gs
jnp
insl
mov
and
dec
xchg
mov
test
mov
stos
rorb
cmc
sbb
push
iret
xor
sbb
add
or
pop
jo
push
pusha
push
dec
sahf
xor
pop
or
cmpsb
jb
pop
push
xor
push
fdivrp
mov
sub
cmp
jecxz
push
xchg
mov
ret
sahf
jno
and
test
mov
cltd
std
sbb
in
dec
jmp
mov
adc
jbe
add
pop
dec
xchg
cmc
iret
cld
sub
xor
or
aad
aaa
cmp
jmp
cld
pushf
mov
mov
adc
notb
roll
cmp
add
outsl
popf
mov
jecxz
out
sbb
insb
xor
insb
stos
ljmp
lods
sub
test
pop
adc
mov
add
jns
lods
into
sbb
dec
push
and
mov
jge
mov
mov
mov
xor
test
cmp
jne
add
daa
pushf
mov
ja
mov
shlb
pop
dec
push
bound
jmp
or
inc
icebp
lea
and
adc
outsl
mov
cwtl
lea
out
dec
idivb
shrl
outsb
mov
scas
inc
fs
clc
mov
sahf
cli
sbb
js
jno
ret
mov
dec
lret
mov
add
xor
or
and
out
or
pop
aaa
add
adc
div
cmp
inc
dec
ret
adc
in
lahf
jbe
test
out
movsb
jmp
pop
cmp
push
sbb
out
enter
lea
loop
lods
punpckhbw
mov
jb
sbb
and
push
cmp
dec
shll
cld
fstpt
cmp
add
scas
inc
mov
pop
or
out
mov
pop
push
in
fldenv
in
sbb
out
push
les
mov
data16
jbe
repz
je
adc
mov
add
xor
sbb
aam
jle
mov
into
lret
sbb
lds
popf
fincstp
push
xor
push
iret
stos
or
hlt
lods
movsl
pop
adc
push
adc
mov
subl
cmp
out
pop
mov
sub
xor
mov
fwait
pop
pushf
jp
pop
cmp
push
test
sub
xor
xor
dec
mov
cmp
aam
mov
add
push
js
or
dec
xor
inc
push
fisttpll
lcall
or
pop
xlat
fwait
int3
pop
es
mov
sbb
clc
pop
mov
fmulp
xor
pop
mov
inc
xchg
or
repnz
cmp
cwtl
dec
push
imul
rcl
xlat
js
sarb
and
jnp
cmpsl
xor
lods
inc
push
xor
out
out
enter
sbb
icebp
or
mov
popa
cmp
aam
test
enter
inc
jp
mov
or
in
push
mov
add
in
and
inc
push
movsb
push
lea
scas
mov
test
adc
lds
fadds
adc
mov
fisttpl
into
pop
aas
fmul
pop
lcall
in
or
cli
jle
mov
or
shl
mov
cmpsl
pop
mov
daa
jo
add
decb
sbb
imul
or
stos
icebp
cld
aam
inc
mov
mov
dec
pop
sub
ficompl
in
int3
mov
xorl
mov
xchg
lret
and
jns
adc
mov
or
les
jns
sbb
cmp
rcr
lods
adc
rolb
mov
test
je
ret
shl
lret
test
adc
or
les
adc
rcl
mulb
and
sarl
mov
jecxz
jne,pn
popa
lret
addb
jne,pt
push
std
mov
cs
dec
out
push
or
add
imul
cmpsl
andb
mov
lcall
jl
iret
xor
xor
mov
int
dec
shlb
loope
fnstsw
adc
fst
pushf
imul
mov
jno
addr16
push
and
dec
int3
jle
lock
add
jp
mov
clc
aad
adc
xlat
or
push
and
sub
ret
and
cmc
das
and
add
int
push
mov
jbe
push
enter
adc
push
imul
repnz
pop
aaa
cmp
out
pop
push
aam
fstpl
mov
nop
into
dec
cmp
mov
pop
and
das
push
pop
std
stc
or
jo
adc
arpl
cs
fwait
jns
loope
or
xchg
outsl
sbb
add
movsb
push
jle
ret
test
jae
clc
divl
lahf
or
ss
lret
out
vmwrite
test
fbstp
push
lea
adc
xchg
lcall
and
jo
fisubrl
lahf
stc
das
arpl
pop
add
imul
std
mov
and
cmp
fbstp
cli
sbb
inc
xor
iret
xchg
push
push
movsl
out
shrb
mov
push
ret
fldt
inc
loopne
aas
sbb
adc
push
pop
xor
ljmp
lods
mov
jg
loop
xchg
push
dec
lds
nop
shll
nop
xchg
dec
pop
lret
add
loopne
inc
loope
mov
pop
fsubrs
or
int3
mov
add
orl
hlt
jmp
push
test
jg
mov
and
les
ret
idivl
mov
adc
loopne
mov
test
aam
les
jecxz
test
xor
dec
lcall
or
adc
push
mov
lods
sub
ljmp
cmp
adc
lea
fistpl
xchg
lretw
xchg
js
and
jbe
cmp
add
insb
ds
rclb
sbb
cwtl
ljmp
jmp
jge
insl
sbb
scas
dec
dec
sub
iret
xchg
sbb
fs
xor
xchg
lret
jnp
and
dec
xchg
fs
or
cwtl
mov
push
test
ss
jo
cmc
add
inc
cmp
sarl
xor
sbb
add
pop
sahf
mov
sbb
fdiv
iret
and
addl
cmp
mov
lea
jl
mov
mov
dec
ljmp
mov
inc
call
push
scas
or
jae
cmp
or
mov
pop
push
test
or
inc
adc
inc
divl
xchg
filds
cmp
pop
aas
popf
outsl
cwtl
nop
icebp
jge
fwait
xor
int3
lods
xor
mov
mov
hlt
mov
aas
xor
push
cmp
mov
es
mov
jbe
mov
inc
movsl
divl
jecxz
mov
xchg
out
xchg
and
call
cli
orb
fsubrl
inc
jne
and
jmp
fsubrl
lcall
dec
icebp
push
cmpsl
inc
lods
aad
jns
shll
daa
and
pop
cld
out
mov
jle
xchg
sarb
push
popa
lods
pop
inc
insl
fsubs
inc
enter
jmp
add
movsl
mov
test
fsubs
push
add
mov
jne
dec
scas
jno
aam
shll
aas
mov
in
mov
popa
push
rorl
rorl
out
pop
and
fbstp
adc
dec
fwait
or
jne
mov
gs
xchg
mov
mov
pop
dec
inc
xlat
imul
add
push
fwait
jb
or
stc
lea
mov
mov
mov
xor
fwait
mov
mov
mov
xchg
adc
and
lds
in
popa
pop
int
lcall
shlb
and
xchg
pop
mov
in
sub
mov
pop
lahf
or
jge
add
cmp
push
sub
mov
sbb
lds
loop
cmp
add
xchg
into
cmp
sub
jmp
inc
ss
arpl
inc
jns
shr
loope
mov
jb
and
arpl
xor
nop
xlat
jns
sahf
push
push
loop
daa
aas
mov
lret
lock
ror
outsl
andl
fisubrs
pop
adc
or
fstpl
mov
or
inc
pop
imul
mov
and
fs
test
xchg
ja
cmc
fstps
mov
dec
cmp
mov
jle
incl
mov
jns
js
lds
pop
inc
and
stc
rcrl
sti
arpl
fistpll
mov
scas
pop
push
rolb
fstp
in
scas
and
push
adc
xor
aaa
aad
lock
jbe
jle
pop
sub
cmpsb
cltd
in
xchg
jmp
stos
lea
dec
lcall
mov
cmpsl
sbb
adc
or
sub
das
lcall
fldcw
dec
inc
call
ret
inc
mov
xor
push
sub
xor
hlt
test
and
cmpsl
jnp
hlt
adc
or
dec
adc
pop
pop
cmp
in
mov
cmpsb
pop
ss
shlb
mov
lcall
xchg
idivb
push
xchg
movsl
outsl
stc
cmp
pusha
out
cwtl
sbb
cs
mov
adc
inc
pop
cmp
cli
inc
pop
xchg
dec
lahf
out
xchg
adc
fs
sub
push
arpl
mov
and
and
aad
int
add
clc
leave
into
cmp
js
cmovne
gs
jmp
pusha
cmc
xchg
cmpsl
mov
fmull
cmp
jae
bound
stos
mov
cwtl
stos
pop
loope
xor
dec
and
loopne
daa
fmuls
jnp
mov
adc
mov
or
fbld
xorb
mov
sbb
sub
rclb
and
sti
js
mov
mov
mov
or
or
test
push
testb
mov
pop
adc
xor
adc
mov
jne
int
loopne
and
jo
fildl
lea
aad
aas
fldcw
clc
inc
and
insl
cs
cwtl
lret
xor
les
insb
add
mov
iret
in
out
jp
xchg
jp
stos
jne
xor
movsb
xor
fdivrl
xchg
pop
xchg
cli
jne
enter
and
mov
cmp
lock
mov
stc
and
daa
fsubrs
icebp
call
aam
mov
sbbb
xchg
addr16
lahf
rorb
and
pop
xor
jno
lret
sbb
lock
or
and
add
scas
pop
mov
xchg
stc
mov
push
ljmp
or
cmp
subb
lods
or
cli
and
mov
dec
push
xchg
mov
or
es
lods
pop
hlt
sbb
cmpsl
pushf
and
in
js
pop
lock
stc
push
xchg
cmc
xchg
inc
dec
aam
jecxz
fsubl
pop
test
mov
in
add
test
or
cmp
int3
inc
or
stos
inc
pop
mov
iret
stos
imul
subb
jecxz
in
xchg
lret
adcb
cmp
jle
jne
push
dec
or
ljmp
jmp
lods
jae
jmp
push
orl
adc
mov
mov
dec
adc
push
int3
bound
scas
pop
enter
sahf
iret
sub
lea
ret
add
jecxz
jge
ror
push
imul
cmp
imul
push
lods
movsl
pop
inc
xor
pop
pop
movsl
ja
ret
iret
or
outsl
push
cli
cmp
fldenv
mov
clc
dec
push
inc
add
add
or
and
imul
inc
jg
out
daa
les
out
ret
dec
inc
nop
in
sahf
push
lea
and
pop
testl
movsl
adc
nop
push
cmp
lret
add
cmp
push
lcall
pop
std
lahf
cmp
scas
in
jge
data16
sbb
pop
cltd
xchg
sub
std
mov
imul
addb
jge
mov
and
xchg
clc
pushl
test
jae
fiadds
int
xchg
test
inc
mov
cmc
das
sub
xchg
gs
mov
xchg
inc
fmull
orb
addb
jmp
outsb
sub
xor
mov
xchg
ljmp
mov
jmp
ret
jae
int3
jns
push
cmpsl
in
sub
push
xchg
jecxz
jmp
leave
ds
mov
mov
daa
mov
lock
pop
sub
data16
xor
ficompl
xchg
jl
pop
lahf
cmp
mov
lea
inc
mov
inc
ret
mov
dec
push
dec
push
neg
push
pop
sub
jecxz
std
push
inc
pop
mov
and
sbb
pop
mov
xchg
rcrl
jb,pt
ret
mov
or
sub
lahf
push
nop
sub
idiv
stc
inc
xchg
cmpsb
dec
enter
sbb
xor
pop
arpl
shlb
push
jae
fstpt
add
push
test
mov
push
imul
mov
mov
mov
std
sbb
std
jl
inc
adc
ficoms
imulb
xor
pop
mov
out
mov
sub
addl
imul
cwtl
inc
cld
mov
stos
shrl
aas
lret
fiaddl
imul
sub
out
inc
inc
xor
cmpsl
int3
sti
push
in
ficoml
add
push
jmp
push
pusha
mov
je
dec
mov
and
pusha
sahf
or
adcl
mov
aam
fucomi
xchg
out
dec
shlb
push
mov
rcr
sbb
decb
or
xchg
sahf
sub
jae
jns
in
mov
sbb
xor
mov
xchg
xchg
lock
lods
cmp
adc
les
mov
add
sbb
popf
je
in
repz
cld
test
cmp
addl
js
jbe
mov
sbb
pop
pop
dec
jl
mov
and
push
cmp
or
lds
test
call
add
ficoms
ret
mov
adc
dec
pop
pop
inc
enter
push
shll
sub
pop
sub
jo
mov
adc
call
sbb
sbb
pop
stc
jmp
aad
jle
fdivrs
xor
js
addr16
fldl
sahf
or
dec
movsl
adc
lret
inc
push
inc
call
and
nop
out
pop
pusha
jmp
sbb
dec
insl
lahf
push
outsl
lret
out
xchg
cmp
adc
clc
iret
push
sub
repz
pop
pop
mov
jns
cmp
stc
out
mov
and
test
imul
testb
dec
jge
mov
in
jae
ficomps
cmpsl
lds
clc
pop
stos
cld
and
jb
push
movsb
icebp
js
xor
mov
jne
es
cmp
int3
or
jle
shll
fdivrs
icebp
xchg
aad
ret
mov
cmp
sbb
mov
lock
cmp
ljmp
outsl
sub
sbb
or
aaa
fldcw
pop
arpl
push
and
sbb
inc
adc
test
enter
subb
mov
push
movsb
shlb
icebp
stc
xchg
ret
inc
push
mov
push
test
daa
fcmovne
push
dec
push
xchg
lds
sub
jbe
sub
sbb
push
adc
mov
aam
out
roll
ljmpw
or
scas
jmp
leave
jne
bound
subl
or
jmp
push
aaa
cmpsb
dec
outsb
push
fnstcw
xchg
xchg
or
ret
rolb
mov
shrb
adc
or
js
or
or
cmc
sarb
js
xchg
int3
sub
sarb
cmp
sub
rcrb
popa
hlt
stos
cmp
cwtl
push
inc
adc
inc
mov
std
aam
pop
popa
cld
xor
test
in
dec
adc
inc
mov
add
sub
jbe
mov
mov
jb
jecxz
inc
mov
cmp
or
mov
jne
inc
inc
lods
push
or
cmpl
filds
mov
loopne
lret
loopne
stos
in
inc
mov
inc
xchg
fcoml
mov
sahf
movsb
cmp
fmull
cltd
mov
sbb
mov
push
cwtl
cmpsb
cmp
inc
inc
clc
or
sahf
jae
push
incb
mov
jne
dec
sbb
scas
adc
imul
mov
xor
mov
or
je
and
cltd
push
jb
cmc
xchg
push
add
xchg
lcall
daa
loopne
data16
push
jnp
in
push
adc
mov
and
fsubl
jno
mov
std
mov
out
dec
call
es
pop
aaa
in
in
add
movsb
xor
xor
inc
insl
adc
andl
pop
je
mov
out
lods
ss
jge
test
dec
mov
add
xchg
leave
add
mov
jno
int3
xor
dec
imul
stos
push
sbb
or
sub
lret
scas
mov
mov
scas
mov
add
fistpll
out
jns
push
add
nop
sub
xchg
insb
lock
repnz
push
icebp
movsb
push
inc
fidivrl
fisubl
xchg
nop
push
sub
imul
loope
popa
out
shlb
jbe
std
add
in
movsb
roll
mov
jecxz
in
lcall
push
xlat
pop
push
and
push
scas
std
scas
cmpl
cmpsb
push
imul
jl
cmp
pop
push
xchg
aas
outsb
jge
xchg
inc
sub
imul
insl
test
dec
pop
in
jle
cmpxchg
adc
mov
inc
add
mov
pusha
inc
inc
push
or
mov
sti
sarb
pop
arpl
mov
adcl
test
xor
mov
loop
ljmp
in
jns
and
and
fwait
xor
js
dec
lret
je
push
jecxz
cmp
adc
push
lret
mov
cmp
pop
xchg
loop
and
aas
or
ss
mov
hlt
into
and
push
inc
in
lods
ret
or
ds
xchg
jle
aad
push
jg
inc
bound
xchg
in
in
outsb
test
in
push
test
or
and
push
adc
ss
fisubs
repnz
les
fstps
test
lds
imul
negb
xchg
lahf
inc
and
push
dec
jb
imul
sbb
pop
inc
inc
adc
test
jecxz
pop
loop
add
fistpll
cmp
mov
and
rcrl
imul
hlt
clc
cwtl
ret
cmp
es
jb
xchg
mov
jne
jecxz
and
mov
movsb
pop
mov
mov
inc
pushf
lret
lock
sarb
or
bound
pop
sbbb
adc
dec
inc
mov
jge
mul
mov
pop
notl
adc
jecxz
out
std
pop
ret
aad
test
scas
test
cmc
cli
adc
sub
lods
mov
add
cmp
sub
sbb
xor
mov
push
stos
test
aaa
addb
lahf
jg
rcrb
mov
addr16
add
popa
das
cmp
xchg
inc
lds
and
xor
in
das
int
or
add
mov
and
jns
jecxz
test
sahf
mov
pop
inc
xor
sbb
dec
daa
cmc
mov
aas
lock
or
pop
mov
aaa
pusha
push
cmp
fldt
int
inc
dec
hlt
mov
lds
cld
rolb
out
arpl
cmp
cmc
dec
xor
pop
rcll
imull
cmpsb
add
xchg
fnstsw
leave
cmp
inc
xchg
lret
or
sahf
xor
in
lahf
sub
pop
mov
repnz
and
loopne
test
int3
in
add
imul
xor
repz
lds
in
std
push
push
sbb
pusha
into
or
mov
mov
dec
test
jmp
fwait
js
mov
push
mov
adc
add
addb
mov
mov
add
int3
daa
mov
loope
sbb
mov
loope
fisubrs
subb
pop
mov
xor
or
xchg
roll
shrb
jl
inc
movsl
loope
lahf
mov
xchg
cwtl
dec
pop
sub
and
mov
add
ret
sub
fdivrs
fsubrs
add
pop
cld
pop
push
or
mov
ror
mov
shll
adc
mov
pop
fstp
or
push
pop
fisubrs
xor
and
hlt
fnstcw
ret
push
push
or
int
bnd
dec
push
pop
dec
sbb
sbb
jmp
or
in
jne
push
les
cld
aaa
popf
cmpsb
xchg
xor
adc
fcmovu
jge
call
xchg
mov
outsl
fsubl
mov
rolb
out
inc
loop
push
xchg
mov
popl
pop
jno
sbb
inc
and
daa
fucomip
jmp
stc
pushf
repnz
lea
lret
sbb
push
and
fcmovnb
dec
fsubs
lahf
ret
pop
push
sub
sbb
xor
push
insb
je
mov
cwtl
cmpsl
add
mov
sub
mov
iret
sti
mov
jle
mov
pop
lret
push
jne
mov
repz
lret
mov
nop
ret
outsl
jp
mov
push
or
int
ret
pop
pop
enter
mov
pop
outsl
sti
out
jo
adc
movsb
adc
xor
sbb
cmpsl
roll
or
mov
in
cltd
in
or
or
jge
xor
pop
repnz
xor
mov
inc
xchg
popa
xor
mov
mov
and
xchg
jno
inc
test
je
movsl
and
xchg
sti
push
mull
movsl
lcall
pop
dec
jb
repz
pop
fidivs
push
fstpl
xor
xor
cmovnp
test
cltd
push
ljmp
mov
mov
sub
mov
jnp
jge
test
cmp
pop
lcall
popa
sbb
test
insl
push
test
mov
hlt
std
jnp
aam
cwtl
stos
sbbl
mov
sbb
sbb
or
std
mov
pop
pop
sub
jg
mov
lahf
dec
cmp
imul
std
inc
xor
xchg
sbb
xor
mov
pop
sarl
ja
add
vpmulhuw
add
sbb
pop
inc
jno
daa
or
adc
ret
outsb
repnz
ja
pop
and
out
mov
fimull
icebp
jne
sub
jne
mov
sub
mov
xor
push
adc
hlt
mov
adcb
dec
lock
lods
out
pop
nop
aaa
add
xlat
filds
jae
and
xor
cltd
inc
scas
or
fnstenv
lcall
cmpsl
mov
gs
lds
jb
push
into
xor
push
inc
sarb
loopne
jecxz
pop
orb
mov
mov
sub
hlt
mov
stc
sub
xchg
stc
jns
pop
lds
mov
in
dec
test
xchg
inc
adc
xchg
aas
stc
add
add
jmp
lds
sti
dec
mov
repz
daa
in
adc
movsl
aad
pop
sub
faddl
pop
movsl
push
cmp
enter
imul
cmp
leave
popf
lea
xor
inc
loop
cmp
inc
inc
push
xlat
add
cmp
test
or
mov
orb
rolb
mov
push
aam
stc
lock
daa
mov
push
jp
mov
loop
cs
dec
sub
add
dec
and
setg
test
dec
sbb
push
test
xchg
subl
sahf
outsb
mov
pop
push
js
addl
repz
scas
lcall
mov
push
xchg
je
inc
dec
push
nop
enter
fldl
test
out
xchg
imul
hlt
loope
pop
inc
popa
jle
mov
dec
rorb
sub
sub
fdivl
es
loope
pop
mov
xor
mov
addr16
lds
lods
jno
add
jg
fwait
mov
xor
cmp
inc
dec
add
mov
push
outsb
loopne
xlat
pushf
insb
sbb
pop
shll
ret
xchg
push
sub
add
stc
imul
in
cli
outsb
mov
negb
and
cmp
mov
mov
clc
das
inc
stos
jbe
cltd
xchg
mov
loopne
sub
sbb
ret
rorl
scas
aam
push
js
fadds
xor
int3
xlat
sti
jl
in
and
xchg
mov
out
ret
out
cmpsb
xor
rcrl
decl
mov
lret
cwtl
cwtl
xor
mov
fidivrs
mov
sbb
add
loopne
or
add
fistl
mov
popf
sub
inc
adc
and
cmp
sbb
ss
vcmpsd
sahf
jae
mov
dec
fsubrs
frstor
imul
adc
cmp
cmp
popf
xchg
pop
push
mulb
out
stos
mov
xchg
sub
push
mov
sub
cltd
ss
mov
popa
mov
dec
dec
inc
shrb
add
and
stos
subb
push
mov
stos
xchg
jl
ljmp
daa
or
ficoms
xchg
into
fists
mov
jecxz
adc
outsb
dec
xlat
jnp
sti
je
or
mov
dec
movsl
xor
pop
mov
fisubs
int3
ffreep
and
psrld
mov
push
in
inc
shlb
js
addr16
fsts
jns
mov
call
int3
xor
cmp
adc
rolb
lds
xchg
jg
adc
adc
sti
jo
hlt
add
inc
mov
fidivs
in
push
lahf
xlat
and
adc
or
pop
push
push
aam
cmp
add
aas
cwtd
push
push
pop
inc
mov
aaa
push
out
stos
fnstsw
into
mov
mov
cmp
mov
push
sub
imul
rorb
fidivs
jcxz
xor
es
mov
filds
fidivrs
lods
or
or
scas
dec
lea
aad
into
adc
jge
lock
movsl
xor
shrb
les
add
mov
cmp
aad
ja
cltd
jne
jecxz
xchg
int
mov
cs
xchg
repz
test
mov
shlb
shlb
push
cwtl
mov
or
mov
push
mov
stos
mov
inc
adc
mov
scas
pop
pop
cmp
cmp
push
adc
jb
push
mov
or
cmp
xchg
sub
adc
mov
xchg
ret
sti
movsl
xor
fistps
loope
pop
or
add
pop
jl
dec
cltd
and
shll
addb
call
sbb
imul
add
into
dec
cli
cmp
dec
push
or
ds
mov
idiv
and
int
in
pusha
fstps
mov
mov
outsb
adc
cmp
jp
les
into
xchg
cmc
fbstp
push
xlat
lds
push
shl
mov
cmp
or
adc
shlb
push
inc
dec
mov
stos
cld
xchg
je
mov
cwtl
add
mov
cmp
jo
lret
insb
int3
test
sub
mov
adc
test
push
or
and
fsubrl
je
mov
jb
jne
repnz
imul
orl
hlt
sbb
aad
lcall
mov
xchg
enter
movsl
mov
mov
jmp
push
jp
insl
in
dec
pop
or
sbb
cmpsl
insb
fnsave
nop
jbe
jp
test
and
dec
shl
jmp
lock
dec
jecxz
pop
rcrl
jge
ss
je
jno
pop
shl
movsb
ljmp
fcmovne
mov
mov
stos
jne
insl
add
fdivl
adc
xor
dec
movsb
imul
pop
jb
mov
mov
adc
cmp
movsl
je
sbb
xchg
or
xchg
out
sti
cmp
mov
sub
mov
inc
ds
lods
pop
pop
mov
inc
xchg
loope
push
test
sub
call
or
adc
outsl
sti
push
sbb
pushf
inc
outsl
mov
xchg
add
data16
daa
add
int3
sub
dec
dec
jae
sbb
add
mov
fcomps
pushf
sbb
outsb
inc
insb
subl
mov
scas
push
adc
je
jge
mov
sub
sub
mov
xlat
jecxz
add
mov
enter
xchg
or
insl
xlat
jnp
push
jne
addr16
leave
inc
pushf
fwait
cmp
mov
outsl
les
lods
and
sbb
cwtl
and
lret
ret
push
add
pusha
sbb
cmpsl
adc
xor
movl
lods
imul
xor
mov
fdivl
add
adc
ljmp
in
movsl
sbb
movl
in
push
outsl
jge
mov
dec
xchg
shl
pusha
sbb
lds
sahf
insl
adc
les
sub
mov
inc
mov
int
fwait
hlt
sbb
lahf
outsb
nop
andb
insb
shll
cwtl
jecxz
mov
daa
icebp
mov
lea
movsb
das
test
cltd
sub
mov
dec
sti
shrb
loopne
mov
mov
pusha
cmp
lock
push
ret
dec
cmpsl
mov
scas
negb
mov
sbb
adc
sti
jge
dec
icebp
or
stos
stos
add
loop
mov
hlt
pop
loop
pop
out
cld
pop
push
inc
in
in
jg
or
jle
dec
xor
push
sarb
or
xor
scas
or
outsb
add
ss
out
xchg
xor
ja
sbb
xor
lods
aam
mov
out
insb
cld
pop
mov
pusha
dec
pop
mov
fisubrs
adc
mov
push
fildl
dec
mov
daa
sub
insl
adc
add
ret
out
and
repz
std
lret
mov
inc
inc
jge
leave
arpl
mov
jb
mov
push
je
scas
fldenv
cmp
aam
pop
fsts
insb
xchg
inc
adc
sbb
and
jp
pusha
mov
mov
mov
xchg
and
test
mov
hlt
insb
jns
push
or
add
sarb
inc
jae
adcl
stos
aas
fisttps
imul
add
xchg
mov
pop
insl
int3
sahf
xchg
or
and
popf
pop
test
andl
push
imul
lods
mov
dec
mov
pushf
sbb
outsl
xlat
fbstp
push
inc
cltd
cmc
aaa
popa
addr16
dec
push
mov
mov
cmp
mov
cmp
fimull
test
mov
adc
ds
data16
mov
std
movsl
fs
xchg
enter
mov
int3
in
mov
cmpsb
ret
xor
cmpsb
jge
push
or
xchg
and
xchg
imul
xchg
rcll
out
lock
and
push
dec
mulb
sbb
popf
int3
adc
inc
sub
jge
sbb
xchg
lahf
in
xchg
lds
or
xor
dec
idivb
cltd
add
pusha
cmpsl
mov
cmp
jg
mov
push
lds
push
jne
jbe
clc
push
push
std
xorb
xchg
test
sbbb
pop
pop
cmpsl
aas
aaa
cmpb
aaa
cmp
sub
mov
xor
or
mov
int
aam
test
xor
inc
xchg
cmpsl
loop
loopne
xor
jp
movsl
rcll
or
or
clc
lret
test
test
adc
mov
pushf
cmp
in
repz
cmp
xchg
jo
ret
adc
arpl
mov
dec
and
cmp
fsubs
or
adc
pop
scas
cmp
jno
pop
inc
int
mov
xor
xor
test
pop
and
push
loop
mov
sbb
inc
mov
test
mov
rclb
int
enter
push
icebp
mov
ja
aam
pop
imul
loopne
lret
adc
push
sub
mov
lds
cltd
push
adc
or
sbb
pusha
pop
pop
mov
dec
pop
or
insl
mov
daa
stos
push
mov
cmpsl
insb
xchg
mov
adc
out
xchg
add
mov
push
mov
xchg
jl
mov
ret
mov
dec
imul
xchg
aaa
jecxz
xor
sub
cld
mov
add
mov
xor
aas
out
jb
and
shl
iret
cmpl
outsb
outsl
aas
addl
cli
or
push
xor
test
jecxz
or
bound
mov
fs
mov
in
fsubrs
xor
cmp
lcall
cmp
xchg
inc
inc
arpl
mov
xor
test
rcr
pop
mov
nop
js
jmp
es
and
int3
iret
aad
andl
jb
push
ror
std
out
stos
adc
dec
in
push
rolb
fadds
adc
out
out
add
ss
sub
pop
in
imul
ss
lea
mov
xchg
into
rorb
movsb
aad
fadd
ret
fcmovb
mov
lods
mov
or
sbb
inc
ret
inc
push
jae
pop
aas
xor
call
sbb
shrb
popa
jl
mov
dec
pushl
xor
imul
push
dec
sbb
and
setg
repnz
mov
lds
mov
push
stos
iret
cmp
fwait
ficompl
and
or
xchg
rclb
mov
cltd
push
cld
mov
movsb
cmc
cli
jnp
or
mov
ds
dec
into
in
dec
pop
pop
arpl
and
in
cwtl
iret
mov
jne
outsb
sub
xchg
arpl
daa
cmp
sub
push
jle
test
pop
push
shrb
orl
xchg
cmp
dec
decl
stos
icebp
fisubl
sbb
push
loopne
pop
mov
cltd
sub
xor
mov
push
cwtl
enter
in
push
jmp
pop
pop
scas
xlat
dec
jge
gs
sbb
int
xor
test
insb
daa
out
pop
add
jae
stos
sbb
in
xor
in
push
mov
jne
jge
stos
mov
mov
mov
jmp
pop
mov
cmp
and
cmpsb
xchg
dec
popa
scas
mov
shr
sub
sahf
sti
jno
sub
dec
dec
aam
das
xchg
or
xor
xor
insl
ret
lock
mov
push
inc
les
cs
popa
jmp
std
push
sub
lock
stos
es
inc
cmp
mov
rcl
xchg
or
inc
insb
outsb
out
cmpsl
push
add
shrb
mov
ret
shlb
mov
pushf
enter
js
mov
mov
and
xchg
jae
fcomps
pop
jle
decl
xor
push
inc
mov
fdivl
add
and
cmpsl
repz
mov
add
xlat
in
xchg
iret
jbe
addr16
insl
dec
int3
pop
insb
or
icebp
pop
arpl
and
pop
mov
or
movsb
es
push
sub
inc
ljmp
xchg
mov
mov
mov
jne
mov
sub
push
sahf
scas
dec
jg,pn
cmp
daa
push
cmp
jp
xchg
mov
mov
mov
fsubr
inc
jb
out
cmc
lret
sarb
sbb
and
mov
into
cmp
cmpsb
push
fsubl
mov
mov
add
pop
loope
mov
push
jbe
ret
adc
nop
sbb
sar
jns
pop
inc
loop
or
jns
inc
scas
sti
imul
mov
sub
mov
fdivp
inc
daa
in
mov
push
fs
lds
addr16
mov
cmc
lea
ljmp
lea
sbb
jg
mov
lret
pop
dec
adcb
ret
pop
out
lahf
pop
gs
push
jmp
cmp
loop
push
das
cs
repnz
insb
jmp
shl
jl
add
or
mov
into
or
xorl
adc
loopne
mov
add
jecxz
mov
imul
das
dec
mov
pop
pop
cli
ja
push
sarb
fldl
in
faddl
xor
mov
and
imul
gs
mov
fxch
jns
test
jb
jmp
mov
movsb
and
or
cmp
pop
sub
xor
add
lahf
or
add
shlb
lcall
into
stos
xor
mov
inc
pop
outsb
in
pop
call
movsl
loopne
jle
shll
jle
push
dec
push
dec
jmp
pop
mov
dec
scas
xchg
outsb
popf
lahf
movsb
dec
add
fwait
cli
cld
das
pop
icebp
leave
jecxz
jmp
sahf
mov
nop
insb
pop
sbb
ja
mov
sub
int
sub
mov
imul
mov
push
adc
jge
mov
or
and
xchg
inc
push
imul
sbb
push
nop
and
xor
pandn
pop
inc
sbb
and
and
push
dec
sub
or
mov
or
inc
push
and
lea
mov
scas
inc
jge
xor
and
inc
cmp
jle
jno
push
popf
das
lahf
adc
push
jl
add
pop
adc
lcall
adc
push
test
or
add
lea
inc
test
fmuls
pop
popa
xchg
jp
jae
xchg
out
scas
test
ds
in
mov
dec
arpl
xchg
and
sbb
mov
pop
test
jno
movsl
or
in
pop
jnp
sub
jmp
pushf
fprem1
lcall
sbb
sbb
xor
loopne
lret
pop
std
in
ss
inc
jo
dec
dec
leave
xor
jb
fcmovnb
int3
jae
add
or
mov
xchg
pop
fs
push
lcall
insb
in
mov
add
cmp
cmpsl
into
or
inc
push
sub
sub
enter
call
push
jne
push
lahf
mov
gs
and
fistpl
add
mov
sub
cmp
kmovb
jmp
aad
sub
pop
jnp
mov
add
fsubrp
dec
ret
pop
xor
fsubrs
xchg
mov
jmp
cwtl
jo
and
or
gs
cmc
enter
jmp
sub
add
mov
or
pop
cmp
sti
leave
xlat
fdivs
dec
mov
xchg
sub
pop
pop
push
mov
pop
decl
ja
rcrl
arpl
addr16
cmp
mov
in
jmp
dec
jge
sbb
jae
rclb
mov
mov
xor
xchg
inc
adc
sub
mov
lret
adc
mov
out
mov
add
mov
sbb
imul
jo
jg
imul
sbb
ret
outsl
mov
mov
jg
dec
cltd
push
js
stos
dec
lea
stos
or
pop
xor
and
repz
addl
mov
fs
shll
sub
inc
or
sbb
cltd
mov
lock
int
mov
insl
xchg
lcall
loope
arpl
cmp
dec
jmp
cmc
mov
xor
jecxz
insl
jmp
push
or
mov
xor
xchg
xlat
add
mov
cmpsb
mov
mov
lods
cwtl
aaa
xorb
stos
jno
or
add
rolb
push
mov
xor
fdiv
ret
aad
jmp
loope
pop
jp
or
subl
fdivrl
push
mov
int
sub
mov
cmpb
push
out
xchg
lea
insb
dec
outsl
fcmovnbe
iret
inc
int3
jecxz
ss
sbb
cmc
sbb
aas
or
jecxz
test
adc
mov
sbb
jno
mov
mov
je
aas
movsb
shrb
sbb
mov
sub
enter
imul
aas
mov
dec
mov
mov
icebp
or
cld
jecxz
negl
enter
int
and
test
pop
cmp
test
movsl
and
mov
daa
add
je
daa
sub
xchg
enter
imul
test
mov
enter
pop
push
push
sti
sahf
fsubl
jne
and
jmp
pop
in
mov
mov
push
dec
push
jae
fnstsw
pusha
out
inc
clc
icebp
je
mov
push
mov
sbb
cli
call
sar
jp
sub
es
clc
mov
cmp
out
fdivrs
sbb
lret
mov
push
dec
lret
and
xchg
add
or
mov
lds
imul
pop
mov
out
and
xchg
pop
jnp
je
test
mov
jp
and
push
pop
push
arpl
loope
cmp
ret
jp
cmpsb
mov
xchg
push
mov
mov
dec
xchg
sarb
add
dec
pop
cmp
cmc
cmp
pop
fs
or
pop
aam
bound
enter
faddl
jmp
push
shll
scas
ret
in
xchg
jmp
fidivl
mov
mov
fiadds
mov
jb
shrl
add
dec
xchg
test
lds
outsb
sar
imul
pop
xor
lds
add
push
push
lret
lea
sbb
cld
sub
jb
ss
loopne
cld
fbld
inc
jo
adc
sti
test
fnsave
icebp
iret
mov
pop
sti
cld
mov
lcall
sub
mov
push
out
mov
lahf
push
clc
adc
icebp
mov
fnstcw
outsl
fs
lea
leave
add
or
or
and
lods
push
mov
xor
jae
pop
insb
js
push
mov
dec
xchg
fsubl
dec
into
ret
outsb
je
inc
rolb
icebp
je
sbb
aam
xor
dec
call
addr16
sbb
pop
sbb
in
jmp
enter
test
mov
idivb
pop
cmp
aam
dec
mov
out
sbb
les
into
xchg
popa
data16
or
mov
lahf
adc
sub
negl
push
jg
cmc
and
inc
mov
mov
icebp
xor
inc
pop
sub
stos
test
cmpsl
jmp
push
aas
sti
pop
mov
push
sub
push
std
repz
push
inc
add
xor
cmc
xor
inc
mov
mov
jp
ljmp
mov
cmp
je
hlt
arpl
mov
xchg
mov
sti
inc
std
sbb
cmp
xchg
pop
xchg
adc
cs
addb
inc
ret
mov
jg
arpl
adc
inc
sub
and
mov
cmp
push
mov
mov
nop
adc
std
pop
push
shll
ja
xor
add
mov
dec
xlat
mov
add
ret
and
push
xchg
pop
mov
push
hlt
push
adc
push
push
xchg
data16
test
mov
jb
lds
push
or
xor
bound
stos
cmpsb
imul
or
dec
aam
in
fyl2xp1
adc
ret
enter
cmp
fcmove
lea
xchg
xchg
add
icebp
inc
mov
and
sarb
inc
mov
jbe
mov
pop
shr
lods
ret
push
out
push
push
jp
xor
xor
cmp
or
cmp
xor
mov
mov
repz
cmp
rorb
loopne
icebp
xchg
adc
cli
add
test
fldenv
jmp
push
das
shlb
adc
sbb
dec
popa
or
xchg
mov
xor
movsl
xor
fcomps
inc
xlat
bound
and
dec
lahf
iret
pop
nop
ja
pop
in
mov
sbb
insl
push
lcall
inc
xchg
push
xor
xor
xchg
xchg
sbb
xchg
out
pop
and
cmc
jnp
add
jl
add
and
jle
inc
leave
cwtl
lret
cmp
rep
out
into
jo
loope
and
inc
pop
ret
mov
stos
je
mov
jmp
ss
icebp
es
shl
inc
push
mov
mov
mov
jo
pop
xor
int3
rorl
and
push
xchg
jg
adc
xchg
loope
int3
pop
movsl
into
nop
cmp
clc
inc
loopne
leave
and
adc
enter
iret
xchg
loop
cwtl
cmp
ds
repnz
push
in
fcoms
push
adc
jl
jg
int
add
repnz
addr16
addr16
push
sub
adc
xor
cmc
sub
and
in
mov
inc
into
rcrb
xor
fldcw
lret
inc
sbb
jmp
es
and
ss
pop
or
lds
adc
insl
push
xlat
loop
jl
lcall
cmp
mov
fnstsw
imul
daa
and
rcrb
inc
jnp
jmp
movsb
stos
ret
rcrb
inc
sub
or
call
scas
into
ret
push
stos
mov
or
pop
stos
xchg
adc
movsb
dec
push
or
sbb
mov
into
stos
inc
cs
and
enter
outsl
jbe
daa
or
fmull
js
gs
mov
imul
and
mov
sbb
hlt
dec
adc
ret
dec
movsb
push
pop
imul
bound
dec
sub
adc
inc
cld
outsb
cwtl
rorb
out
andl
add
xor
dec
inc
rorb
cli
dec
push
in
push
rcrl
dec
insl
out
cmp
sti
jb
outsl
dec
aas
mov
pop
jbe
mov
out
nop
inc
xchg
popf
push
mov
ret
mov
inc
dec
cwtl
ljmp
add
filds
push
xchg
int3
push
cmp
cmpsb
mov
and
lds
popa
ljmp
fcmovb
nop
cmp
shll
fucomi
adc
test
sub
push
or
mov
sbb
push
pop
push
cmp
xor
mov
enter
fwait
iret
cmpsb
jl
mov
xor
mov
and
das
cmp
inc
sbb
imul
call
xchg
cwtl
pushf
ret
add
aas
sbb
psllq
test
mov
nop
mov
push
pusha
iret
popa
pop
pop
sub
andl
outsl
xchg
jmp
shrl
ret
jg
or
sbb
rcrl
dec
popa
js
inc
aam
repz
imull
daa
mov
daa
push
scas
mov
repz
xorb
pop
push
daa
or
shlb
jne
and
out
sti
push
sbb
xchg
in
add
aad
jne
dec
mov
jg
aam
lcall
pop
jg
adcl
sub
out
or
jmp
les
mov
imul
xor
sbb
leave
mov
lods
addr16
push
adc
cmp
and
ds
jae
aas
adc
mov
cmpl
cmp
cmp
inc
fcoml
mov
dec
jbe
outsb
test
decl
pop
xorb
shll
in
mov
push
mov
xor
mov
loope
je
mov
ds
bound
pop
imul
mov
insb
nop
fs
jns
out
xor
dec
stos
dec
add
sahf
or
jmp
stos
in
and
sub
test
or
test
push
getsec
mov
es
daa
push
mov
cmp
pop
outsb
jne
rcrl
leave
jnp
xchg
stos
mov
js
repnz
sub
dec
jp
add
pop
mov
test
jmp
jae
movsb
jmp
in
loopne
xchg
in
arpl
fistpll
pop
jge
xor
xchg
mov
icebp
stc
int
pop
mov
sbb
data16
lret
fcoms
stc
sahf
icebp
jne
sub
sub
cmpsb
gs
cmp
jle
in
insb
pop
dec
std
push
jle
call
enter
in
mov
mov
enter
sbb
lcall
cmp
sub
cmp
cmp
shl
loope
or
ljmp
lods
xchg
adc
fnstsw
cmpsb
or
insb
stc
sbb
in
or
or
test
push
and
cmp
lahf
add
mov
jg
pop
or
jae
mov
push
outsl
fnstcw
pop
xchg
cmp
dec
jg
xor
ljmp
bound
cmp
or
cli
or
push
push
pop
mov
lcall
and
stos
push
icebp
add
pop
leave
push
cli
xor
out
pop
js
movsl
xchg
mov
sahf
pop
xor
push
rcr
lret
jecxz
lahf
mov
add
pop
inc
mov
gs
enter
or
push
ficoml
dec
inc
lsl
push
mov
mov
ret
xchg
fisubl
popf
add
sub
jge
stos
add
and
mov
dec
cs
mov
jmp
xchg
andl
and
adc
jbe
repnz
insl
push
push
sahf
jno
pop
out
test
daa
pop
xchg
fists
push
xor
jg
ss
xor
pushf
cld
mov
xchg
jns
adc
test
and
ret
or
or
les
repnz
xchg
mov
sbb
pop
daa
xor
pop
sub
cmp
sahf
push
std
lock
sbb
ds
mov
stos
lock
mov
push
sub
stos
sbb
clc
dec
pop
push
mov
or
xlat
jne
out
mov
filds
negl
sub
shlb
mov
hlt
mov
out
and
sbb
ror
repz
cmp
dec
out
ja
std
and
out
and
or
xchg
shll
mov
jne
push
xchg
push
mov
test
push
pop
mov
sti
push
inc
in
idivl
mov
adc
inc
ss
mov
in
rcl
adcl
lret
fcmove
pop
cmp
int3
inc
out
ds
ds
dec
je
sbb
mov
adc
shlb
clc
push
dec
arpl
popf
push
and
xchg
fcoml
iret
test
imul
jne
cld
bound
inc
cmp
adc
dec
fldl
insl
adc
add
mov
xchg
test
call
movsl
aaa
xchg
mov
test
mov
outsl
lods
jge
subl
adc
add
jne
std
cltd
adc
mov
sub
stos
push
in
ret
push
dec
mov
jnp
mov
rep
pop
loop
mov
stos
inc
lock
pusha
jb
pusha
lea
stos
addl
in
push
cmp
test
icebp
cmp
fidivl
je
loope
or
mov
xor
popa
push
dec
test
idivb
jne
aad
push
inc
jo
sbb
movsl
scas
std
pusha
add
stc
xchg
rcl
adcl
sbb
xor
push
aam
and
repz
sub
idivl
fmulp
aaa
pop
xor
les
mov
add
inc
scas
ss
xchg
sub
push
movsb
push
test
push
enter
mov
mov
xorb
jbe
cmp
xchg
stc
lods
shlb
orb
loop
push
scas
xor
cmp
shrl
dec
sbb
les
out
data16
movsl
out
or
bound
cmc
xchg
pop
jno
bound
not
inc
clc
or
rol
inc
xchg
aam
xor
or
test
pop
ja
xchg
xor
jge
mov
lret
lahf
xchg
inc
mov
cmp
movsb
inc
or
cmpsb
xor
xor
hlt
inc
add
fistpll
cmovo
push
push
dec
scas
mov
or
xchg
insl
push
mov
mov
call
loop
mov
sbb
test
mov
in
outsb
xchg
cli
out
shrl
mov
lahf
insb
ret
les
iret
sarb
aam
mov
cmp
cmp
pop
aas
sbb
repnz
xor
xor
es
sub
mov
movsl
movq
mov
shrl
inc
sbb
ret
bound
fdivl
cld
xchg
inc
and
in
cltd
xchg
or
push
sbb
clc
cmpl
push
jl
out
sbbb
ret
push
and
sbb
add
pop
andl
ret
popa
nop
adc
gs
mov
cltd
xor
cmp
cmp
push
sarb
add
imul
pop
outsl
lods
cmp
xor
sub
sbb
ret
and
mov
mov
mov
hlt
sub
ror
xchg
dec
pop
orl
and
and
xchg
std
in
dec
sub
push
call
sti
pop
xlat
lods
pop
and
mov
sbb
xor
jne
test
or
dec
in
aas
push
into
mov
jle
lock
adc
loope
mov
mov
pop
mov
or
std
mov
std
xor
push
shlb
cs
adc
and
gs
pop
xor
and
jno
mov
mov
cmp
stos
push
cmp
dec
and
xchg
fildl
or
inc
call
mov
fs
sub
mov
mov
xor
push
xor
push
ja
in
lock
ss
push
outsl
cmpsb
dec
lea
pop
dec
movsl
data16
cs
cmp
add
pusha
jle
mov
push
sub
lcall
shld
mov
dec
js
enter
inc
bsr
push
in
faddp
and
or
js
js
mov
imul
cs
mov
fnstenv
pop
pop
aam
pusha
fldz
adc
nop
fiaddl
jl
pop
pop
jb
jge
fwait
mov
inc
cmp
neg
jmp
jne
push
jnp
test
ret
cmp
test
fldcw
les
fnstenv
mov
pop
push
or
addb
in
jns
and
shrl
popa
jg
xchg
ja
or
shlb
out
aad
xor
out
ficomps
insl
and
pop
dec
in
cmp
decl
xor
xor
xchg
xchg
push
sbb
ret
xchg
clc
adc
xlat
rclb
xchg
out
dec
aas
adc
jns
loope
jnp
cwtl
dec
cmp
add
mov
sbb
cmp
clc
into
dec
mov
call
negb
sbb
jle
cmp
rcr
mov
xor
dec
sbb
data16
fucomip
lds
mov
fstpt
jnp
push
fcomip
adc
jns
pop
add
outsb
push
popa
and
out
sub
scas
and
mov
hlt
cmpb
cwtl
cmpl
sbb
sahf
push
pusha
not
ret
adc
mov
push
inc
dec
mov
js
out
and
divl
shll
idivl
mov
jmp
daa
pop
add
clc
movsb
call
cmc
sub
adc
sarl
lods
fdiv
sbb
fsubrs
mov
xchg
mov
push
sub
das
xor
mov
cld
mov
adc
push
cmpl
push
push
in
adc
data16
lcall
mov
ret
xchg
jbe
rcrl
loop
adc
inc
test
push
mov
add
cmpsl
jbe
mov
mov
add
es
cmp
outsb
into
fisubrl
js
int
pop
xorl
rcll
loopne
in
xchg
xor
bound
inc
movsb
add
inc
xchg
dec
in
addl
mov
test
inc
sub
xchg
jp
lret
jo
jbe
movsb
jg
int
dec
or
cld
ds
push
mov
pop
push
dec
call
xlat
ret
lret
loop
pop
pop
xor
push
add
aam
xchg
dec
fdivr
sub
loop
xor
cwtl
jmp
or
dec
push
sbb
add
out
test
cmp
movsl
mov
movsl
mov
pop
mov
push
sbb
negb
out
out
push
mov
push
pop
mov
sar
cmpsl
stos
adc
adc
xor
push
add
fldt
sbb
scas
add
fistpl
inc
and
xchg
js
ljmp
outsb
sbb
mov
push
dec
push
dec
xor
or
ret
sub
mov
jg
push
xchg
inc
mov
scas
and
push
ficompl
fbstp
or
fcmovbe
ret
das
dec
arpl
sub
outsb
icebp
add
jmp
leave
int
xchg
push
xor
and
iret
ror
shrl
lock
xchg
cmp
clc
mulb
cs
inc
adc
mov
xor
jae
testl
xchg
jnp
aad
fimull
adc
pandn
hlt
jg
cmp
inc
insl
enter
ret
jae
mov
out
cmp
add
and
mov
enter
push
sub
mov
xchg
outsb
inc
xor
dec
mov
xor
ds
inc
cli
xor
adc
lock
xor
xor
mov
test
arpl
ljmp
aad
mov
mov
push
push
dec
mov
enter
sub
pop
push
dec
sbbb
jmp
jb
mov
cmp
mov
mov
out
arpl
insb
outsb
leave
shr
xor
adc
sbb
pop
in
mov
push
cmp
mov
fstpt
fimuls
int
ds
adc
cmp
stos
out
xchg
dec
movsl
adc
sub
cmp
xchg
jge
cmp
dec
adc
insb
ljmp
or
sahf
fmulp
movsl
sub
jne
scas
stos
in
xchg
sub
push
in
push
dec
push
sahf
ss
mov
mov
mov
push
sub
jecxz
jg
lods
xor
push
jl
cmp
push
inc
incb
in
in
loopne
fcomps
ljmp
imul
jns
popa
test
sub
add
into
ret
add
fsubl
jmp
cmpsl
mov
popaw
iret
inc
mov
push
push
push
and
cmp
push
in
dec
sbb
inc
aam
andl
iret
cmp
and
les
lods
mov
rcll
mov
jo
enter
cmp
xor
cs
mov
cs
sub
adc
dec
xor
nop
and
mov
lods
lret
xor
icebp
shrb
pop
rcll
test
jne
fwait
sbb
jns
pop
in
add
xchg
das
sahf
pushf
fsubrp
pop
imul
enter
add
add
daa
lret
aam
xchg
popa
jns
std
fildl
inc
fmuls
cltd
arpl
std
ret
outsb
push
cmc
movsl
addr16
imull
or
daa
sbb
inc
jne
dec
lods
roll
cmc
cmp
add
sbb
mov
sbb
test
inc
pop
mov
daa
and
add
pop
outsb
loopne
shll
pop
pop
pop
cmp
bound
lock
in
push
xlat
adc
push
inc
xchg
pop
push
cwtl
repz
in
test
jle
pop
or
rcr
dec
movsl
mov
pop
pop
sti
test
cmp
popa
mov
jg
add
addb
fmull
push
mov
cmc
test
shlb
mov
loop
dec
dec
add
pop
movsb
aad
in
mov
aaa
adc
mov
clc
mov
stc
xor
ret
mov
add
dec
pusha
data16
add
dec
lods
sub
xchg
sarb
lds
pop
jg
mov
cwtl
mov
cmpl
enter
outsb
sbb
mov
test
adc
mov
mov
pushf
out
cmp
mov
ljmp
push
or
xor
xchg
push
mov
or
inc
inc
in
fsubs
sub
or
xchg
xchg
add
repnz
orl
rorl
in
fs
mov
fidivrs
pop
loopne
jb
aad
or
inc
iret
pop
pop
insl
and
pushf
mov
cli
testb
jno
or
mov
js
jns
xchg
mov
pop
dec
cmc
and
inc
push
adc
mov
mov
and
pop
sbb
or
jg
jp
add
push
jbe
inc
inc
adc
lods
push
jge
lret
scas
sub
and
pop
clc
push
jns
jle
or
lret
ffree
out
and
dec
dec
mov
cmpsl
or
aad
subb
cmpsl
push
jge
jae
mov
call
loop
sub
fisubs
or
cs
nop
daa
seta
int
in
ret
cmp
imul
addb
push
cmp
jb
addr16
ficompl
cwtl
cmpsb
sti
adc
pop
xchg
das
in
mov
add
push
lret
dec
out
fwait
pop
js
cmp
jne
sbb
adc
jns
dec
or
dec
repz
js
out
mov
jb
inc
xchg
das
pop
out
les
adc
push
sbb
popa
stos
and
ljmp
test
pop
pusha
jmp
jnp
mov
scas
addr16
psubw
ljmp
add
repnz
dec
repnz
xor
movsb
movsl
jge
sar
aad
lds
xor
lcall
xchg
xlat
xor
dec
js
push
lods
bound
cld
lahf
cli
rclb
aad
xchg
add
mov
js
push
out
dec
sub
sub
ret
push
outsl
shll
cltd
imul
outsb
xor
fadds
out
push
pop
mov
mov
cltd
std
cmpsb
je
push
sbb
out
je
xor
cwtl
jne
push
imul
rorb
sub
add
ret
ret
mov
rcrl
cmc
adc
mov
dec
out
or
fnstcw
sub
xchg
xor
pop
or
dec
adc
add
jbe
or
dec
fcmovbe
xor
mov
cmpsb
xor
mov
push
int3
dec
es
adc
xorb
shrb
push
xchg
cwtl
push
push
mov
lea
xchg
stos
mov
lods
sub
pop
pushf
fcmovnu
and
out
ljmp
cmpsb
push
lcall
lea
test
aad
out
in
fwait
icebp
xchg
add
push
lock
fs
mov
scas
sub
aad
cmpl
pop
test
mov
cltd
xchg
mov
inc
pop
push
shll
scas
sub
fmul
out
mov
push
mov
in
xor
aas
jecxz
push
inc
sub
vpaddq
stc
fdivs
test
mov
negb
icebp
imul
adcb
or
jns
jmp
jo
popa
xchg
dec
xchg
push
xor
or
arpl
lcall
lods
lock
aad
movsb
shll
mov
pop
jl
and
test
loope
lds
xchg
insl
out
adc
js
add
test
dec
adc
jnp
ret
cmp
fcmovnb
dec
mov
ja
imul
sub
xchg
iret
cmp
fmull
push
aas
xor
lret
push
pop
push
lret
loope
xchg
and
mov
pop
xor
xchg
xchg
imulb
jle
das
subb
push
sti
out
sbb
jno
mov
add
pop
pop
adc
fs
push
jns
add
fsubrl
jbe
mov
pop
das
pop
fildl
inc
push
jne
and
mov
jmp
cs
outsb
loopne
or
aaa
lahf
insb
xor
push
xchg
aaa
test
stos
fdivs
ss
jecxz
ss
mov
mov
pop
add
cmpsl
sbb
loopne
or
push
jbe
push
jne
movsb
scas
xchg
jns
jecxz
sub
dec
aas
or
sub
pushf
std
repnz
sub
dec
mov
lea
mov
loop
xchg
push
dec
mov
loopne
iret
ret
add
int
lcall
jbe
popa
xor
out
pop
lcall
int3
sub
rclb
imul
mov
push
ja
add
pop
popa
rolb
dec
into
push
enter
aas
adc
sbb
andl
cmp
jbe
mov
rcr
addr16
pop
in
mov
ret
mov
jge
in
iret
dec
cmpsl
sbb
cmp
rorb
mov
or
mov
es
pop
pusha
sub
data16
stc
aaa
dec
mov
and
dec
and
mov
out
aad
mov
push
test
sarl
aas
aas
sub
jne
and
lods
adc
jg
dec
mov
ret
sub
mov
sbb
aam
dec
lret
xchg
pop
push
mov
inc
pushf
out
mov
xchg
push
add
cmpsl
mov
jnp
pushl
fdivs
pop
sub
xor
aaa
push
or
push
fwait
inc
or
insb
in
rcll
inc
add
xor
pop
sub
sub
test
js
sub
mov
mov
xchg
xor
fiadds
or
pop
sbb
add
ja
jnp
fsubs
jae
jecxz
sub
out
nop
push
xor
daa
iret
push
stc
mov
mov
cmpsb
and
adc
and
inc
cli
jae
lret
orb
cmp
stos
dec
xchg
xchg
pop
lret
cwtl
xchg
outsb
dec
jae
push
inc
ljmp
iret
repnz
mov
pop
push
or
mov
jl
xlat
cmp
ss
sbb
push
xor
mov
ja
daa
mov
int
icebp
xor
pop
xchg
daa
stos
mov
test
outsl
test
sbb
xor
xor
jg
xchg
hlt
adc
pop
leave
pop
jne
cmp
jbe
jae
stos
out
enter
xor
cmp
arpl
cwtl
fwait
ds
cmpsl
outsl
cmpsb
outsl
xchg
pop
out
sub
push
sub
cltd
rol
jbe
jno
icebp
jle
imul
xchg
push
cmp
ljmp
inc
pusha
and
push
test
aam
shrl
or
mov
aas
leave
or
int3
cltd
xchg
fsubrl
jge
out
mov
pop
scas
stc
cmpsl
sbb
push
or
sbb
data16
ret
mov
cmp
adc
push
adc
xchg
mov
fstpt
inc
rol
out
adc
popa
data16
mov
mov
pop
and
and
pop
les
push
xor
iret
xchg
sbb
repz
call
stos
cmc
fwait
jb
sti
outsl
cli
pusha
jo
cmp
adc
ja
aam
ljmp
cmp
jbe
shl
pop
adc
sub
jg
inc
adc
movsl
lods
test
mov
add
jns
inc
popf
add
bound
loopne
pop
push
add
inc
cmpsb
outsb
add
add
cld
xor
mov
fmul
jmp
sub
sub
pusha
out
sub
aad
stos
test
lea
aad
mov
das
test
int3
cmp
pop
popa
jg
and
lahf
mov
jmp
movsl
jbe
lret
orl
popf
cltd
sahf
push
test
and
rcrb
and
cld
sti
orl
add
mov
sub
andl
mov
and
mov
cmpb
outsl
jo
hlt
aas
pop
mov
cmp
mov
in
iret
and
mov
jnp
rol
sbb
inc
imull
jp
out
stos
std
inc
mov
inc
and
mov
push
scas
mov
or
dec
bound
les
mov
in
mov
mov
inc
out
stos
or
lret
and
jg
inc
jnp
jne
andl
mov
push
dec
add
pop
js
cmp
add
je
test
daa
jge
addr16
push
jp
xor
jb
test
adc
pop
mov
pushf
sub
mov
loope
xchg
mov
dec
dec
add
xor
xchg
test
cli
mov
cmp
add
fsubl
out
aad
test
out
pusha
adc
jg
sti
imul
jge
divb
mov
icebp
pop
out
push
sub
fs
or
shll
hlt
call
sub
pop
mov
xor
ss
inc
or
adc
push
movsl
adc
dec
add
pop
sbb
insb
sub
test
cmp
inc
add
dec
push
leave
cmp
enter
cld
sahf
movsb
xor
xchg
bound
jmp
fdivl
sub
inc
repnz
or
jb
jo
mov
cld
ljmp
and
mov
shrb
ds
jno
repnz
movsb
lret
lds
stos
dec
pop
testl
mov
aam
movsb
and
push
ja
leave
pushf
cmp
jmp
or
mov
push
mov
xor
push
sub
mov
adc
pushf
sub
sbb
cwtl
mov
daa
fldl
cmc
or
cld
dec
or
data16
insb
pop
xchg
fsts
xor
jg
and
mov
pop
pop
inc
adc
dec
or
arpl
stos
pop
push
loopne
xlat
pop
mov
or
fcomps
addr16
mov
pop
xor
and
cmp
dec
add
loop
scas
inc
scas
cmp
rcl
pop
add
or
cmp
pop
sub
push
jg
xor
das
cmpsb
es
dec
je
data16
mov
mov
mov
sahf
jnp
inc
sbb
mov
inc
mov
mov
dec
ja
sub
in
adc
sar
jno
push
jmp
lcall
loopne
jg
or
cltd
sub
fnstsw
shrl
pop
stc
mov
xor
xorl
daa
or
inc
xchg
int
xchg
cltd
or
jbe
inc
xor
mov
in
icebp
cmp
fiaddl
or
fs
pop
orl
test
or
push
sub
mov
lahf
pushf
rcrb
aam
sub
imul
jg
cltd
cld
adc
test
cmp
ss
jmp
pop
jno
in
and
xchg
loopne
cs
mov
addr16
mov
inc
mov
into
cmp
jl
mov
imul
xchg
cmp
pop
je
mov
shl
adc
mov
popf
insb
xor
pusha
dec
mov
int3
les
sbb
insl
imull
das
mov
sbb
sbb
fdivrs
sbb
dec
cmp
pop
dec
std
xchg
fwait
sbb
pop
mov
xchg
scas
ja
es
adc
mov
dec
lret
ds
and
inc
sub
out
sub
dec
cwtl
xchg
mov
mov
test
cmpsl
xor
dec
popf
jnp
xor
push
fistl
into
in
cmc
adc
adcb
sub
sahf
aas
mov
leave
or
out
inc
push
sbb
mov
mov
sbb
pop
sbb
add
and
mov
lds
outsb
les
hlt
pop
jo
movsb
adc
cmpsb
mov
arpl
and
dec
pop
movsb
enter
ja
push
ja
push
xor
sbb
aas
sub
iret
jge
mov
push
cmp
pop
or
jnp
idiv
shll
movsb
lea
jne
push
dec
inc
imul
inc
stos
ja
clc
pushw
mov
insl
jns
ficompl
pop
stos
sti
iret
mov
call
enter
push
fisttpl
inc
dec
xchg
test
adc
push
stc
int3
enter
pop
inc
or
fwait
js
fistpl
je
mov
cmc
cmp
add
jl
adc
or
mov
xor
mov
cmpsb
mov
imul
roll
sbbl
lods
mov
sub
mov
jmp
leave
ds
inc
movsb
sahf
pop
sbb
lock
icebp
leave
stos
cmp
fcomip
mov
pusha
xor
jbe
adc
movsl
lret
mov
shrb
ds
das
pop
fldenv
pop
stos
arpl
adc
in
int
jmp
aas
inc
and
test
push
hlt
arpl
fwait
cmpsl
pop
in
fcomp
lcall
mov
call
jmp
xchg
aam
pop
jae
pop
test
dec
in
cmp
pop
add
ss
cmp
das
jbe
or
mov
xor
gs
push
xchg
daa
ret
mov
push
sbb
pusha
or
outsb
int3
out
shr
fldenv
mov
or
lods
sub
push
in
mov
xchg
iret
xchg
in
cltd
sub
dec
jle
int3
push
imul
in
cmp
xchg
cmpsl
out
cmp
shrl
fadds
mov
mov
es
outsl
push
pop
push
mov
mov
clc
pop
sbb
rclb
in
int
shl
pushf
enter
arpl
mov
stos
cmpsb
lods
mov
add
xchg
pop
out
mov
fcmovnb
mov
pop
in
dec
aaa
daa
xlat
mov
mov
stos
pop
mov
hlt
inc
movb
mov
outsb
mov
or
push
push
adc
inc
int3
push
cmpsb
sub
fistpl
fsubl
push
punpckldq
push
add
pop
fwait
dec
pop
pop
inc
int3
push
adc
add
sahf
ss
aam
jg
das
pop
lret
in
cmp
mov
mov
pop
ret
stos
sub
cmp
mov
ud1
jl
ss
stos
test
pop
or
insl
mov
and
fstpl
add
int3
jae
test
movsb
addr16
loop
adc
xor
inc
mov
jmp
test
jecxz
fs
or
ds
aad
das
xchg
xchg
in
xor
outsl
sub
xchg
fsubrl
lret
sbb
jnp
or
sbb
pop
mov
dec
lods
js
add
fcoml
jp
xchg
add
dec
sahf
cmp
jb
mov
xchg
pop
pop
sub
sbb
mov
ss
outsb
lahf
mov
lcall
sahf
cmpsl
mov
es
les
daa
inc
push
imul
inc
sti
cld
mov
repnz
lods
arpl
out
call
or
xor
pushf
mov
adc
scas
xchg
icebp
xorl
and
or
xchg
push
pusha
mov
rcrl
dec
mov
jo
inc
sbbl
and
push
nop
movsb
loop
mov
scas
clc
in
insb
inc
cmp
push
or
pusha
sbb
adc
push
jno
outsb
inc
js
test
leave
jbe
not
push
mov
pop
in
sub
dec
jo
in
inc
mov
test
adc
adc
and
and
movsb
add
sbb
lret
mov
xor
pop
jb
jbe
sbb
arpl
cmp
repz
xor
fists
push
sub
sub
cmpsl
fnstsw
mov
cmp
and
push
mov
mov
sub
jo
addr16
jne
inc
dec
xchg
or
mov
mov
and
cmp
push
inc
cltd
pusha
pop
inc
js
scas
insl
lret
xor
dec
xor
jmp
xchg
push
mov
sub
push
cld
shl
sub
fdivrl
sub
popf
mov
aaa
xor
and
inc
test
in
les
sub
sbb
out
sbb
aas
xchg
cltd
lods
mov
mov
inc
push
ja
xlat
xchg
sbb
out
push
sub
mov
hlt
into
xor
lret
cmp
stos
cltd
lock
cmp
pop
ds
xchg
inc
adc
stos
jge
sub
out
sbb
push
mov
xchg
fdiv
outsb
add
pop
and
sbb
imul
lock
inc
jp
sti
movsb
pop
ret
daa
pop
test
lods
shl
cmp
adc
pop
pop
mov
push
or
rcll
cmp
sbb
rcrl
testb
in
mov
sub
leave
loop
mov
jg
div
dec
push
jge
fsubrl
mov
repz
and
jbe
decl
mov
shrb
mov
jnp
mov
mov
mov
test
in
add
stos
cmpsb
adc
in
cltd
sub
ret
cmpsb
adc
out
push
adc
mov
sub
push
cmp
mov
imul
scas
sub
popl
mov
loopne
sar
out
jo
push
and
cmpsb
mov
pop
dec
or
dec
and
mov
mov
sub
or
inc
or
negl
or
mov
mov
xchg
pushf
inc
pop
xor
fsubl
mov
mov
adc
dec
ja
mov
sub
andl
pop
jmp
gs
nop
aas
std
mov
pusha
mov
mov
je
xchg
jl
pop
imul
mov
mov
mov
pop
xchg
enter
iret
std
inc
popa
or
ret
arpl
jae
xlat
mov
lock
xchg
ds
imul
add
sbb
add
jl
std
icebp
negl
pop
pop
mov
adc
cltd
lods
push
cmp
ja
mov
jno
ficoml
pop
inc
sbb
adc
adc
lahf
mov
mov
punpckldq
insl
ss
mov
mov
and
jle
push
jae
ret
sti
ds
movsb
cmpsb
pop
adc
or
mov
icebp
loope
lret
sub
in
mov
lods
mov
pusha
or
ja
cmpb
enter
or
bound
imul
test
push
jmp
cs
add
leave
scas
xchg
lock
aas
sbb
dec
dec
jne
pop
cmp
cs
adc
push
dec
sub
xor
inc
daa
push
mulb
adc
add
sub
push
arpl
testb
iret
jb
pop
icebp
and
bound
cmpsb
clc
shll
clc
pop
xor
call
pop
into
sti
pop
dec
push
push
jbe
mov
mov
jae
adc
add
or
sub
xor
fs
add
lea
xor
loop
ja
subb
xchg
push
mov
loop
jns
jge
pop
mov
xchg
pushf
push
mov
arpl
je
aaa
adc
loopne
cwtl
fildll
insb
adc
test
jl
or
les
shll
outsl
xlat
stos
loopne
and
jecxz
sub
lret
lods
imul
cmp
xor
test
dec
fistl
jecxz
push
sbb
hlt
pop
jecxz
mov
dec
pop
fldcw
mov
mov
imul
sub
cmpl
jle
cwtl
repz
shrl
call
fadd
push
lcall
test
xor
inc
fiaddl
int
jnp
hlt
adc
push
xchg
and
mov
mov
inc
pop
push
dec
inc
fwait
xor
dec
call
aad
sbb
sub
push
icebp
stc
mov
loope
or
aam
iret
in
aad
lahf
mov
bound
cmpsb
aam
in
jecxz
cli
push
xor
mov
or
sbb
mov
pop
ret
test
sub
out
mov
lods
mov
mov
cmc
rcrl
repnz
dec
mov
in
inc
aad
mov
mov
arpl
cmp
and
insb
repnz
xor
fstpl
mov
das
mov
sbbb
push
ds
push
cld
inc
pushf
xor
add
cmp
cmp
data16
pop
int3
xor
xor
sbb
pop
sbb
adc
cld
rcrb
inc
mov
cs
mov
js
mov
ja
dec
xchg
add
pop
loopne
js
lea
icebp
sub
dec
xor
mov
xchg
inc
mov
std
popf
mov
fcmovbe
push
cltd
aam
lret
cmp
shrl
inc
scas
addb
js
push
push
shrd
xchg
jno
cmp
mov
fcmovnbe
jno
outsl
scas
addr16
mov
loope
pop
mov
push
lret
pop
inc
icebp
imul
and
cmp
jge
pop
jne
out
cltd
std
sbb
int3
or
outsb
rorb
mov
mov
sti
jne
in
cmp
lret
xchg
test
add
and
or
je
mov
pop
and
cmove
call
add
test
aam
pop
pushf
gs
cltd
xchg
pop
cld
push
inc
cmp
mov
lret
mov
sub
sbb
cmpsl
frstor
or
mov
loop
push
test
ret
adc
fucomp
jb
out
mov
pop
cli
pushf
push
call
adc
cltd
hlt
jno
dec
jg
jmp
ds
lods
fstps
adc
lahf
nop
mov
jp
pop
dec
addr16
pushl
jecxz
jno
mov
and
shlb
sbb
dec
outsl
daa
ret
rolb
cmc
push
jg
dec
ljmp
cli
inc
dec
fidivs
jmp
fidivrs
fsts
xchg
sbb
jo
cltd
fwait
and
int3
scas
int
pop
outsl
or
xor
mov
in
insb
mov
xor
push
out
aad
pusha
sbb
cmp
jbe
cmovno
push
dec
test
mov
subl
or
adc
les
pop
ret
xor
loop
jo
xchg
ds
add
sub
lods
jae
cmp
pushf
cmp
movsb
adc
jmp
mov
sbb
test
lock
pop
inc
add
into
pop
cmp
cmp
and
leave
jmp
insb
movsb
dec
divb
cmp
es
xchg
icebp
pop
ret
sbb
lock
adc
mov
mov
add
ss
test
push
push
fistpl
or
insb
mov
repnz
pushf
cmp
pop
lahf
dec
lds
adc
add
sbb
pop
stos
mov
scas
or
je
aam
mov
adc
jne
pop
cmp
adc
mov
fisttps
xlat
ja
push
fiadds
inc
les
lahf
fcoms
mov
jl
popa
fbld
insl
jmp
addr16
loop
jne
mov
push
into
jo
cmp
and
in
push
popa
and
aam
mov
xor
sbb
mov
mov
cmp
out
scas
cmp
add
pop
xchg
mov
sbb
andl
jp
cmp
pop
adc
int
and
imul
pop
dec
test
dec
stc
daa
cmpsl
aas
sbb
les
in
lahf
es
cli
dec
fsubrl
lret
mov
xlat
sub
fadds
jecxz
dec
and
daa
sbb
scas
jp
dec
dec
ss
mov
ja
push
pop
push
or
loope
pop
pcmpgtb
jo
cmp
pop
mov
dec
pop
imul
shrb
dec
sbb
scas
dec
pop
loopne
aam
out
adc
mov
ret
cli
out
and
inc
and
mov
mov
mov
pusha
adc
jle
adc
es
loop
lcall
rcrl
pop
shll
cmp
push
mov
push
mov
sbb
add
sub
jg
xchg
icebp
cwtl
outsb
lahf
xchg
stc
icebp
popa
fiadds
jle
dec
adc
or
not
add
sar
xor
mov
cmp
dec
repnz
js
clc
xor
sti
pop
movl
and
daa
outsb
mov
aaa
mull
pop
xchg
cmpsl
in
into
hlt
shr
dec
xor
jl
and
insb
sub
xor
and
imul
mov
in
mov
sbb
jns
test
pop
ret
inc
and
dec
scas
mov
addr16
xchg
test
sbb
inc
lods
ret
int
test
test
push
bound
jg
cmpsb
arpl
mov
shll
imul
fisubrs
icebp
add
mov
enter
push
adc
sub
push
push
or
rcrb
xchg
adc
idivb
push
and
inc
aam
mov
call
xchg
and
adc
lods
aas
lret
pop
dec
js
fs
cli
mov
mov
stos
enter
mov
mov
idivb
iret
add
cmp
inc
stos
and
mov
xor
out
inc
arpl
imul
xchg
adc
in
imul
cmpsb
xchg
mov
push
and
dec
mov
mov
mov
mov
cld
mov
icebp
imul
loope
mov
sub
lock
popa
inc
test
adc
jl
mov
insl
jp
jg
ja
mov
call
mov
daa
mov
dec
repz
imul
incl
testl
aas
and
je
push
push
dec
xor
push
adc
mov
out
outsb
jns
cltd
mov
and
jmp
mov
cltd
gs
out
test
repnz
jae
insl
jg
in
lock
shrl
daa
sbbl
sbb
aaa
push
add
pop
outsl
enter
adc
inc
out
insl
push
test
shrl
pop
or
jne
cmpsb
jg
ss
dec
clc
fadd
xchg
pushl
lahf
sub
mov
mov
inc
mov
inc
fsubrs
lods
push
scas
hlt
insl
fildl
xor
mov
outsb
jge
jmp
fidivrs
cmc
sbb
test
mov
flds
jle
pop
rorl
mov
out
into
mov
push
insb
loop
popa
xor
pop
sub
test
sub
add
xor
fadds
jbe
and
adc
xchg
cmp
icebp
inc
push
xchg
dec
in
popf
jne
shrl
mov
xchg
dec
iret
push
pop
jns
and
xchg
cmp
out
fnsave
shrb
repz
aaa
mov
fbstp
clc
xchg
xlat
adc
pop
or
rcrl
mov
cmp
mov
dec
stos
lret
bound
and
push
loopne
cmp
sbb
pop
mov
dec
test
inc
shll
and
mov
popa
jmp
imul
loope
inc
mov
sti
scas
sti
ja
mov
lods
sbb
pop
sbb
xchg
outsl
in
sbb
scas
adc
push
or
mov
pop
rcrb
leave
add
jp
cld
inc
sbb
add
pop
mov
push
stos
mov
sbb
out
repz
xchg
jns
ror
push
bound
cmpsl
loope
mov
sbb
mov
push
daa
sbb
push
inc
std
sbb
clc
push
pop
ret
shlb
pop
fidivl
testl
cmp
or
addr16
dec
push
inc
xchg
cmp
rcrl
mov
loop
or
sti
cmp
inc
movsl
aam
or
dec
add
test
cmp
inc
mov
negl
pop
cmpb
mov
sub
loope
movsb
testb
mov
pop
jnp
cmp
pop
adc
test
sbb
push
xchg
pop
in
clc
push
cltd
leave
sbb
mov
sarb
inc
add
jo
out
sbb
inc
sti
cmp
push
mov
add
js
xchg
mov
negl
int3
xor
mov
scas
nop
and
and
dec
adc
add
push
cmp
sbbb
lcall
xor
pusha
mov
mov
ret
xchg
xchg
subb
lods
negl
xorl
mov
enter
mov
mov
stos
leave
mov
aaa
or
insb
jno
mov
adc
pop
ljmp
cltd
inc
push
mov
push
aaa
mov
adc
aam
cli
or
fildll
push
add
ficompl
xor
clc
fstpl
cwtl
repnz
sbb
jnp
pop
mov
aam
xchg
loope
mov
jg
jle
sbb
lret
or
jns
jo
push
mov
and
dec
mov
and
adc
popf
push
mov
jecxz
mov
xor
sbb
rclb
and
mov
xchg
mov
fwait
mov
pop
js
xchg
in
inc
mov
repz
nop
xchg
push
fimuls
movsl
mov
pop
enter
in
ja
enter
push
enter
cmp
not
mov
push
xor
adc
or
mov
daa
mov
push
frndint
xchg
outsl
rcr
sbb
xor
jle
pop
xchg
daa
mov
pop
push
test
les
repnz
and
mov
int3
idivl
rcll
lock
push
cwtl
xchg
sbb
push
cwtl
bound
fisubl
mov
pop
je
cmp
sbb
pop
xchg
stc
shl
out
stos
mov
adc
mov
and
xchg
lret
cmp
out
adc
push
xor
call
cmp
inc
iret
inc
mov
mov
adc
or
cmp
push
sub
or
lods
xchg
xlat
xor
sbb
and
jo
pop
fwait
jae
fsubl
sub
mov
or
mov
shll
in
rcrl
lret
pop
das
add
cmp
dec
mov
sub
pop
jl
icebp
out
rclb
pop
outsb
pop
ret
scas
sbb
push
mov
inc
jne
inc
jae
xor
adc
lods
cmp
xor
lret
int3
mov
in
pop
add
cmp
pusha
cmpsl
xor
mov
jle
imul
push
inc
mov
lea
ret
pop
data16
ret
push
lock
cmp
ja
test
xchg
enter
test
orl
pop
xor
incb
out
imul
movsb
out
xor
inc
jmp
bound
push
mov
cli
sbb
pop
dec
jns
push
outsl
sbb
andb
sar
xchg
sub
insb
adc
cmc
adc
je
jno
stos
jns
dec
into
stc
inc
inc
mov
stos
sub
in
daa
insl
push
and
cmpsl
dec
jecxz
outsl
cmpsb
dec
mov
mov
pop
popf
icebp
es
pop
lea
rorl
das
sub
pop
ss
fcoms
lcall
hlt
test
or
xchg
sub
sbb
shrl
mov
sub
das
pop
cmpsl
inc
jbe
sbb
adc
cmc
inc
jbe
es
lock
cld
xchg
pop
pop
add
scas
ds
xor
movsb
sub
or
pop
mov
push
push
jmp
hlt
and
pushf
stc
mov
fwait
dec
test
popf
call
inc
fstpt
jb
int3
dec
push
rcl
insl
out
fisubs
pop
cmpsl
inc
push
xchg
addr16
jb
repz
or
icebp
mov
cwtl
testl
adc
insb
jmp
jns
xor
jmp
mov
sub
sub
fs
add
sbb
jbe
inc
lcall
mov
push
scas
cmpsb
aad
adc
jl
xor
loope
in
fidivrs
mov
mov
rep
pop
pop
dec
ficoms
jae
xor
mov
in
enter
into
aas
mov
jo
push
incb
rcl
loopne
inc
mov
jne
imul
jnp
mov
out
pusha
and
pop
loopne
inc
push
mov
sahf
orl
push
out
out
jle
adc
test
fcmove
ret
popf
adcl
pushf
data16
sbb
mov
push
lret
mov
fwait
add
lahf
stc
sbb
add
or
test
lret
cmp
mov
enter
testb
jae
xchg
stos
push
dec
aad
sbb
jecxz
inc
jle
cmp
pop
dec
push
rclb
pop
push
pop
dec
adc
xchg
subl
jno
pop
sub
jnp
mov
fdivrs
mov
sub
into
inc
cli
test
outsl
mov
cmp
inc
pushf
cmpsl
sub
mov
bnd
cmp
mov
ja
cmp
scas
adc
bound
mov
test
push
insb
xchg
or
fists
and
shlb
adc
add
lret
sub
or
dec
ret
fists
cwtl
push
shrl
mov
fldl
fadds
xor
daa
mov
and
sbb
jle
pop
push
push
popa
cmpsl
xchg
cmpsb
out
sbb
push
shll
push
push
pop
mov
std
sub
inc
inc
shlb
xlat
adc
push
addr16
jg
jno
pop
addl
adc
sahf
jb
inc
lret
ret
pop
pop
int
xor
xchg
outsb
sti
pop
sbb
imul
bound
outsb
add
xchg
inc
jno
adc
xor
or
call
ja
call
lock
pop
lret
in
sub
or
push
adc
xor
outsl
in
outsb
pop
js
cmpl
cwtl
ja
or
push
int3
sbb
or
std
inc
enter
sbb
aam
dec
movl
hlt
adc
xchg
insb
hlt
gs
lret
vmovmskps
insl
subb
jp
xor
and
fcomp
das
pop
les
fsubr
sbb
rol
mov
cmp
outsl
mov
add
fldt
insl
mov
clc
std
jmp
cs
inc
xor
xchg
dec
addb
and
nop
scas
push
scas
in
aas
push
int
cmpsl
jae
jecxz
ljmp
lods
into
mov
mov
xchg
inc
xor
push
lock
dec
adc
cmp
scas
ja
lret
inc
shll
out
sub
ja
cmp
xchg
push
mov
mov
mov
in
pop
jne
lret
in
rclb
in
pop
xchg
popf
aas
adc
push
inc
ljmp
inc
mov
dec
and
in
push
push
fs
lock
sahf
ret
jbe
fmuls
rcll
jns
xchg
pop
ljmp
cltd
xchg
adc
scas
inc
add
jnp
cmp
xchg
lcall
sub
or
sub
pop
lahf
cld
cltd
mov
sub
aam
das
insl
les
jg
ljmp
je
sbb
clc
cmpsl
mov
or
lret
cwtl
cmp
or
ficompl
out
push
xlat
add
mov
xchg
inc
enter
mov
mov
sub
aaa
mov
repnz
sti
dec
and
push
sarb
addr16
or
fbstp
ficoml
pop
popf
dec
xchg
out
popf
xor
rolb
inc
andl
cmp
dec
mov
testl
mov
idivb
movsb
out
adc
fs
lock
xor
les
pop
outsb
sarb
jl
js
push
mov
add
loope
push
inc
dec
hlt
push
imul
imul
iret
loop
arpl
mov
sub
jo
xor
aad
stos
outsb
xor
jns
imul
js
xchg
sbb
int
fwait
mov
cmp
hlt
sahf
dec
cmp
add
jecxz
lret
addr16
fldt
fdivrs
add
jmp
pop
xchg
mov
mov
push
in
sar
sti
xor
es
enter
cmp
xchg
sub
pusha
mov
pusha
sti
jnp
inc
scas
sub
outsl
ret
xchg
adc
ljmp
iret
iret
push
adc
fdiv
jg
sub
and
cmp
arpl
adcb
xchg
adc
in
in
sahf
or
repz
fcmove
dec
sbb
inc
ja
mov
mov
lahf
inc
mov
mov
in
stos
pop
lock
daa
mov
xor
and
mov
fstpl
nop
out
or
xchg
enter
mov
dec
fwait
xchg
adc
out
sbb
iret
mov
cmp
sti
shlb
loopne
sub
xchg
dec
orb
adc
lods
sbb
xor
fsubrp
enter
outsl
mov
test
mov
xchg
pop
mov
gs
push
pop
pop
std
add
xchg
es
pop
cld
scas
mov
nop
in
imul
add
idivb
outsl
mov
mov
cltd
leave
xchg
insb
pop
sub
fildll
scas
std
into
lret
xor
jge
dec
shl
mov
out
jmp
jecxz
or
cmp
push
push
jmp
iret
ss
adcb
pop
mov
lock
or
adc
sbb
mov
out
push
rolb
mov
sti
add
mov
sub
xchg
xor
hlt
dec
mov
or
or
in
fs
jnp
in
test
sbb
mov
ret
push
push
inc
add
pop
mov
sub
ret
jp
subl
add
cwtl
or
pop
shll
jmp
sub
repz
mov
nop
pushf
dec
lock
clc
add
mov
test
cmp
or
sahf
xchg
dec
sbb
dec
jbe
in
sbb
sahf
outsb
inc
cmpsb
inc
aam
jle
pop
push
cmpsl
popa
cmpb
sub
testl
inc
rcr
popa
icebp
or
mov
loopne
cld
test
dec
add
addl
sub
imul
stos
lea
test
or
sbb
hlt
outsb
fcoml
xor
frstor
lret
cmp
ret
sub
sti
test
or
in
leave
mov
add
pop
sub
mov
dec
rdmsr
jae
fisubrl
jae
adc
hlt
popa
test
add
es
je
lcall
dec
mov
add
sub
pop
and
inc
xchg
jns
xchg
adc
mov
aas
push
xchg
mov
xchg
fwait
cmp
addb
inc
fwait
jae
cwtl
lret
jno
xchg
sbb
jb
js
aad
mov
cmp
xlat
mov
jg
xchg
sbb
iret
pusha
test
adc
scas
adc
cmp
lods
pop
cmp
cmpl
test
inc
xchg
pop
xor
sbb
ret
cltd
testb
pop
ret
test
fcmovb
testb
mov
mov
fprem1
mov
aad
inc
test
jp
push
fs
mov
jle
cmc
sub
mov
icebp
outsb
mov
adc
popa
cmp
sarb
lahf
lret
or
and
stc
mov
sub
sbb
jns
aas
xchg
fdivrl
push
out
push
ja
cli
outsb
mov
aaa
jbe
ret
or
sbb
push
or
pop
icebp
mov
sbb
hlt
out
mov
addr16
sub
mov
hlt
popf
dec
sbb
pop
daa
fistpll
mov
and
jp
sbb
into
ret
mov
sub
movsb
call
pop
sbb
cmp
mov
jnp
test
xor
movsl
pop
jg
cld
outsb
inc
aas
sub
xor
es
push
shrb
xorl
clc
dec
test
add
out
cs
js
clc
sub
dec
sti
mov
jbe
outsl
or
sub
or
sub
aaa
sub
cmp
push
loope
add
out
inc
rorl
insl
pusha
sub
xchg
sbb
jg
ret
lcall
es
enter
xchg
xchg
pop
stos
inc
cmp
fnstenv
cmp
mov
aad
mov
pop
nop
mov
dec
mov
push
ja
outsl
repnz
xorb
mov
pop
ds
mov
dec
test
fmuls
sub
lds
insl
mov
add
ljmp
stos
std
cs
cmc
data16
pushf
xor
js
es
push
mov
mov
outsl
sub
rol
jmp
cmp
cmp
jge
pop
sub
test
mov
mov
call
push
push
mov
sbb
das
int
push
fcmovnb
pushf
mov
sbb
pusha
jmp
mov
xchg
orl
pushf
xchg
inc
int3
dec
cs
adc
pop
pushf
mov
cmc
and
pushl
dec
cmp
xor
or
outsl
inc
test
pusha
adc
stos
dec
and
fcoml
fsubrs
shlb
test
jl
fidivrs
adc
sbb
orb
cmc
mov
and
lock
push
cmc
lods
adc
or
in
mov
push
out
cmp
insb
jno
mov
lret
les
iret
inc
cmpsl
adc
inc
into
out
dec
dec
shrb
adc
leave
pop
insl
fistps
sahf
pop
in
jb
rorb
or
jmp
and
adc
jmp
dec
mov
mov
lret
fsubrl
gs
cld
pushf
test
inc
loopne
imul
ret
mov
loopne
pop
push
leave
push
lods
adc
push
addr16
repz
imul
lock
adc
or
pop
sub
jle
leave
into
neg
adc
sbb
push
addl
sub
and
idivl
arpl
mov
sahf
int
test
fisubrs
or
push
test
pop
icebp
sub
mov
je
push
or
mov
arpl
dec
lret
lods
cmc
icebp
imul
mov
and
xor
ds
add
aaa
pop
pusha
xor
push
and
adc
adc
mov
push
cmpsb
pop
mov
sub
cld
push
xor
imul
cs
stos
pextrw
xor
mov
sbb
mov
das
ret
stos
mov
mov
inc
subb
leave
jmp
cmp
hlt
pop
int3
adc
push
push
out
test
leave
mov
inc
bound
and
inc
call
movsb
lcall
sahf
mov
into
xor
lds
sbb
loop
fcom
push
imul
outsl
xlat
inc
or
and
cwtl
jge
data16
inc
jb
or
pop
sbb
add
mov
cwtl
pop
and
lret
inc
add
in
mov
cmpb
inc
fwait
mov
jmp
inc
scas
aad
stos
hlt
adc
and
scas
mov
dec
inc
xchg
in
lret
cmpsb
add
dec
out
icebp
mov
adc
adc
add
imul
mov
push
mov
cmp
mov
mov
pushf
push
mov
inc
pop
aaa
inc
push
fcompl
xlat
jo
aad
sub
aam
ficoms
mov
pop
push
in
pop
dec
sbb
mov
fsubrl
and
mov
mov
sub
je
jnp
sub
int
inc
pop
add
adc
pusha
or
jae
repnz
int
xlat
add
mov
adc
mov
sbb
out
dec
sahf
js
push
gs
dec
in
in
bound
popa
insb
inc
inc
jne
add
xchg
ja
ret
divl
mov
sub
aam
pop
mov
jo
fs
push
mov
or
mov
mov
cmp
xchg
fwait
mov
bound
lret
push
mov
jle
test
rcl
scas
cwtl
aam
push
mov
cmp
lcall
and
mov
leave
lcall
sub
mov
dec
loope
inc
je
xor
rorl
repz
stc
xchg
pop
or
mov
fwait
enter
pop
out
jge
xor
dec
pop
test
and
fsubl
xchg
out
in
lock
in
popf
xchg
add
unpcklps
out
cmp
mov
sarl
int
in
in
cli
loope
cmpsb
mov
mov
cwtl
call
cwtl
jg
cmp
in
xchg
push
cmp
imul
mov
mov
dec
jle
lcall
pop
push
leave
inc
ljmp
jae
loope
cmpsl
mov
add
sarl
jo
xor
jae
sub
call
call
mov
gs
add
outsb
jne
int3
jnp
ja
cmc
xchg
cli
out
aad
ficompl
cmpsl
xlat
cmpsl
inc
insl
out
mov
mov
mov
test
stos
jnp
sarb
call
jo
cmp
gs
xorl
js
call
dec
out
mov
lahf
cmp
shl
dec
gs
stos
aas
mov
jecxz
lea
lcall
add
xchg
shl
int
lret
mov
jle
mov
cwtl
mov
pop
and
cmc
push
adc
fwait
push
lock
mov
dec
imul
cmp
adc
pop
addr16
cwtl
inc
addb
jle
imul
into
push
add
adc
pop
add
jne
insl
inc
aaa
add
add
xlat
stc
xor
fadds
daa
mov
out
fisubl
add
dec
out
mov
fmull
pop
or
mov
icebp
push
xor
xchg
outsl
dec
popa
push
in
loope
test
push
ret
lcall
inc
or
adc
out
fidivrs
sub
lods
xchg
lret
and
test
add
inc
inc
insb
mov
fwait
scas
out
cmp
dec
mov
inc
rcll
adc
sub
dec
adc
pop
outsb
push
xchg
sti
pop
mov
cmpsl
fnstcw
xor
and
lahf
cmpb
das
daa
jne
popf
push
cld
or
mov
out
fldcw
sti
jo
es
inc
push
enter
fwait
sbb
ds
cmpsb
enter
fistl
btc
jecxz
nop
inc
bound
mov
sub
inc
or
jecxz
adc
xlat
shrb
adc
dec
jmp
movsb
xchg
push
aad
imul
je
mov
fwait
in
dec
push
notl
in
ret
and
cmp
orl
xchg
stos
fstps
rcl
push
xor
inc
add
add
aaa
and
fwait
lea
frstor
jns
xchg
je
cmp
adc
pop
mov
sbb
mov
mov
cmp
loopne
pop
jle
mov
mov
scas
lods
pop
push
into
push
repz
in
sbb
xchg
test
sub
ss
movsl
cmp
insl
test
fmull
pop
dec
dec
outsl
sbb
jno
idivb
adc
fmull
imul
mov
mov
es
scas
jnp
rcll
into
add
adc
ret
mov
sbb
call
dec
mov
popa
cmpsb
std
int
ds
sti
adc
xor
fwait
sahf
imul
jbe
push
or
add
sbb
inc
int3
aaa
cmp
popa
stos
lds
push
mov
or
and
mov
sbb
or
dec
stos
stos
shlb
mov
std
shlb
insl
js
stc
push
rcrb
mov
pop
inc
push
into
ljmp
mov
hlt
cmp
xor
arpl
jp
outsb
and
xrelease
cmpsl
mov
sahf
pop
icebp
insb
call
outsb
bnd
insl
push
mov
inc
xchg
cmpsl
lods
in
xchg
jmp
lock
push
lds
and
aas
ror
stc
das
xor
mov
sti
pushf
mov
inc
das
jno
and
dec
cmpsl
ljmp
push
add
jb
cmpsl
adc
xor
shll
jb
jno
cli
or
and
and
mov
push
sub
shlb
ficoms
and
jle
or
mov
jg
adc
adc
int3
xchg
adc
cmpsl
mov
and
jecxz
ljmp
mov
xchg
nop
sub
mov
lahf
adc
std
add
fsts
aad
icebp
xchg
xor
mov
push
fldcw
in
pop
aaa
imulb
js
pop
adc
das
stc
dec
int3
jno
mov
xchg
pop
inc
test
fcomp
sub
mov
lds
mov
pop
imul
imulb
in
out
daa
xor
mov
cmc
xor
mov
je
hlt
inc
lods
lret
pop
lods
add
jb
sbb
rorb
mov
cli
sbb
lahf
fistl
mov
ds
iret
xchg
dec
sbb
jno
xchg
andb
mov
xchg
mov
orb
cmp
leave
jae
fucomi
shrb
std
aaa
mov
negb
cwtl
jl
dec
nop
mov
lcall
aaa
paddw
and
xchg
lret
adc
in
xchg
xchg
inc
xor
stc
fsts
test
stos
sbb
dec
lahf
icebp
mov
lods
cmc
fwait
int
inc
cmpsb
xor
xor
jp
mov
sub
dec
sbb
inc
es
mov
cwtl
sbb
repz
and
and
sti
insl
fcmovu
mov
out
outsb
cmc
and
xchg
inc
adc
dec
add
cs
sub
xchg
fnstenv
xor
pop
xor
mov
fwait
mov
sahf
insl
les
pop
inc
jne
push
aaa
sub
push
outsl
push
push
cmp
dec
cmpsb
jbe
dec
push
mov
sbb
sub
es
xchg
aam
test
or
pop
mov
xorb
pop
add
pop
jg
test
je
and
icebp
in
dec
fmul
icebp
mov
push
pop
movsl
dec
mov
ficoms
inc
push
lods
lret
sbb
enter
cli
lea
sbb
clc
mov
clc
sarl
mov
dec
sub
fldenv
xchg
sbb
dec
hlt
mov
enter
adc
gs
sbb
lcall
subl
pop
mov
mov
push
cmc
rorl
add
jns
mov
insl
pop
loopne
ja
lcall
int3
psrlq
sub
dec
lods
test
mov
xchg
xor
xor
fsubs
sbb
mov
cld
paddq
sub
ficomps
mov
sbb
sbb
das
cli
jmp
ret
push
adc
std
add
push
add
clc
sbb
and
test
test
sbb
clc
call
inc
inc
xchg
popa
mov
mov
xchg
mov
cmpsb
fldl
add
lret
adc
cmp
aam
jo
inc
loope
pop
lret
xor
out
jns
inc
sbb
shr
rclb
mov
jl
jecxz
or
mov
cmp
cmp
out
fcmovb
punpcklbw
scas
shlb
arpl
pand
dec
sub
cmp
scas
imul
pop
lea
ret
cmp
stos
add
mov
cmp
jp
jnp
mov
inc
aad
mov
lods
mov
stos
mov
sub
jge
mov
insl
cmpsl
loope
mov
mov
in
scas
xor
nop
pop
insb
mov
lods
sub
inc
xchg
xor
ja
fldcw
ds
sbb
push
gs
inc
out
mov
fdivl
push
cs
lock
sbb
ss
sbb
nop
divb
aad
fsubrl
inc
pop
fsubrl
pop
jnp
into
add
fcom
add
fcomps
decb
dec
pusha
cmpsl
adcl
mov
pop
pop
dec
pop
jne
sbb
in
pop
cmpsl
out
lcall
adc
pop
sub
into
xorb
xor
das
push
mov
sbb
rol
data16
out
mov
icebp
and
out
lods
push
jnp
sbb
mov
push
shrd
popa
aam
xor
cmc
xor
mov
adc
sti
push
xchg
cmp
rorl
cmpsl
xchg
ss
cmp
cmpsl
js
mov
fsubrs
jns
ficomps
lret
dec
ljmp
and
xlat
shrb
add
popa
or
pushf
and
clc
dec
xchg
jmp
pusha
inc
jl
stos
jno
adc
arpl
cmp
push
mov
or
test
push
rcl
into
gs
lds
movsl
xchg
movl
mov
scas
add
inc
jb
lret
es
and
lret
fxrstor
pop
add
sub
inc
cmpsb
leave
mov
sbb
cltd
movsl
mov
jae
mov
xor
mov
outsl
stos
sarb
jnp
sbb
movsl
arpl
incl
jle
pop
pusha
add
bound
cld
in
lret
jmp
stos
push
pop
movsb
xor
cltd
stc
test
loop
push
mov
sub
scas
pop
mov
sbb
push
sub
inc
hlt
stc
adc
and
xchg
out
adc
test
ds
inc
mov
pop
mov
adc
leave
pop
cmp
sbb
xchg
mov
daa
shlb
loop
pop
sahf
and
add
pushf
mov
xor
fbstp
adc
sub
sub
cmp
cltd
pop
mov
into
jno
push
pop
sbb
loop
mov
clc
lods
pushl
pusha
jge
adc
cmp
xchg
ss
sbb
sbb
outsb
rclb
sub
xchg
xor
fildll
mov
pop
xor
stos
dec
mov
xor
and
lea
or
pushf
xor
iret
data16
je
pop
in
aam
push
cltd
jle
shll
in
rcr
notb
xor
lret
add
mull
dec
and
outsb
mov
inc
out
orb
fdivrp
mov
lds
fistl
jp
mov
aas
cmp
mov
fisubrl
fists
jb
insb
xchg
in
dec
and
jbe
add
pop
pop
push
call
sahf
out
ret
mov
cltd
inc
xchg
addb
cmpsl
outsl
mov
bound
fwait
xchg
movsb
int3
movsb
imul
adc
mov
push
pop
sarl
mov
lds
das
cmp
orb
movsb
cltd
sarl
stos
jne
lea
lods
shl
dec
dec
xor
sbb
jnp
dec
lcall
int
insl
xchg
aaa
or
add
sub
and
popf
lds
push
jo
lcall
jb
je
pushf
pop
jecxz
jg
xor
dec
mov
sbb
mov
mov
sub
clc
inc
sbb
xor
jle
push
incl
jp
enter
sub
ret
lret
popf
xchg
call
repnz
inc
enter
loopne
jne
jge
push
subb
and
repz
and
rcrl
mov
in
xlat
adc
sti
int
cmp
xor
mov
sbb
mov
aam
or
xchg
add
xchg
sbb
nop
adc
ret
or
mov
into
loop
fistps
rclb
or
xor
xchg
mov
adc
in
and
test
mov
mov
cmpsb
sbb
aad
jne
cld
leave
push
aas
ret
lods
sub
or
pop
inc
pop
lahf
adc
in
mov
push
jecxz
daa
and
adc
subl
in
mov
sub
stc
mov
nop
je
fprem
cwtl
movsl
sahf
cmp
cmp
aad
fwait
into
ret
enter
movsl
imul
cmc
xorb
and
sbb
test
add
mov
cmpsb
push
push
fucom
mov
mov
not
mov
in
mov
cltd
into
aas
aas
fcmovnu
in
fiadds
arpl
push
xor
pop
pop
mov
jbe
fdivrl
sahf
repz
xchg
fwait
mov
jb
ret
xchg
shlb
rcr
scas
ret
repnz
stos
ds
mov
test
ss
outsl
jle
lods
movsb
lret
xor
sbb
mov
add
jmp
jmp
xchg
sbb
imul
cmp
cmpsb
outsb
ret
hlt
cmp
lret
push
aam
cmp
les
inc
test
xor
out
pushf
dec
test
adc
inc
jnp
or
scas
xchg
in
sub
ss
mov
add
jmp
push
imul
pop
lret
in
sub
jmp
out
fsubrl
bound
jl
call
test
std
cmpsl
adc
sub
pop
sub
ds
cmpsl
or
add
push
popf
aad
outsl
and
jg,pn
sub
sub
outsl
hlt
cmp
mov
mov
mov
leave
negb
clc
or
mov
filds
fidivrs
out
aad
cmpsb
adc
div
iret
mov
pusha
xchg
mov
arpl
enter
fisttps
scas
xchg
or
fisubl
sbb
sarl
pop
lret
mov
andl
fwait
mov
pushf
call
in
adc
inc
mov
mov
orl
mov
push
pop
inc
fcomi
xchg
int3
ljmp
rcll
stos
push
mov
cs
xchg
mov
and
or
icebp
fdiv
mov
inc
mov
aaa
push
imul
nop
mov
mov
push
and
daa
pop
scas
jns
shlb
and
xchg
cmc
sarl
mov
mov
pop
fisttps
int3
pop
ret
xor
lret
pop
fsubrl
or
mov
adc
negl
sub
out
and
inc
sbb
stc
es
mov
les
fists
jp
movsb
test
mov
movsl
jno
jecxz
cs
je
push
fnsave
outsb
jecxz
fwait
jne
pop
das
ljmp
cs
jl
daa
xor
sub
scas
inc
and
inc
mov
push
jne
shrb
and
pop
pop
cmpsl
xchg
cld
mov
bound
popf
fnstenv
sub
int3
add
cmp
lret
mov
popa
pop
or
adc
and
popf
lods
popa
cmp
lea
stc
insl
mov
sub
lahf
cmp
cmp
nop
hlt
dec
push
enter
jo
or
inc
dec
lods
outsb
dec
in
sbb
negb
aaa
rcrl
aas
movsl
and
add
aad
lcall
scas
jnp
push
fists
fimuls
xchg
icebp
push
pop
mov
nop
into
mov
std
in
adc
sahf
jmp
sub
pop
pop
mov
fwait
adc
dec
push
adc
insb
dec
addr16
pop
loopne
and
push
insl
mov
jb
daa
les
add
je
mov
xorl
jge
leave
fs
sbb
push
lods
fwait
or
mov
mov
jl
pop
sbb
and
out
shll
pop
jmp
mov
lret
sbb
lret
out
pop
cmp
outsl
icebp
mov
inc
add
adc
inc
sub
xor
pinsrw
mov
dec
adc
into
cmp
xchg
addb
dec
cmp
hlt
out
cs
lret
out
mov
arpl
cmp
sbb
repnz
test
xlat
sbb
or
mov
loop
push
push
sbbb
pusha
std
outsb
scas
pop
push
icebp
sub
stos
imul
push
mov
xlat
mov
hlt
scas
fisttpl
push
adc
popf
jecxz
out
into
imul
cld
pop
insb
fsubrs
loope
std
rol
enter
adc
lret
sbb
repz
fistpll
or
andl
cmp
xor
dec
cld
sarl
mov
test
mov
mov
addb
stos
push
jnp
sub
xlat
mov
sbb
lahf
pop
push
loopne
out
inc
call
cmp
or
std
nop
mov
ret
dec
cmp
cmp
cmp
ret
loope
inc
popf
aad
mov
jmp
stc
ror
js
and
or
xor
in
movsb
or
fcomi
es
in
into
and
decl
or
add
add
and
jb
outsb
fs
in
sbb
xor
sbb
dec
jbe
clc
dec
add
mov
jno
insb
in
cmp
cmp
fsubs
jmp
jge
inc
and
pop
sbb
xchg
cmp
lods
leave
fucom
icebp
inc
mov
xchg
sahf
je
fs
popa
loop
adc
insl
cmp
xor
cmp
cli
adc
or
mov
xchg
enter
scas
xor
xor
rolb
cwtl
mov
sbb
rcll
scas
jl
cmp
inc
inc
fildll
xor
push
push
sub
xchg
fnstsw
lods
cld
icebp
jge
adc
mov
or
or
cli
inc
enter
ljmp
dec
fxch
and
into
sbb
xor
push
ss
mov
dec
xchg
shlb
or
jo
cli
lods
pushf
enter
lock
sub
mov
jns
sub
orb
push
daa
arpl
mov
cli
or
xor
xchg
sbb
or
mov
adc
sub
pop
jle
xor
scas
cmpsb
xchg
jnp
lods
fstps
or
mov
dec
inc
dec
pusha
sahf
out
push
test
jecxz
shlb
idivl
sub
stos
adcb
jb
sbb
or
lods
test
es
insb
pop
insb
aam
dec
adc
pop
dec
clc
aad
icebp
cmpsl
push
scas
mov
xchg
mov
mov
add
add
lcall
sbb
dec
mov
cmp
mull
push
push
mov
mov
fcom
mov
cli
repnz
push
xor
sub
push
mov
cwtl
sbb
cmp
lret
cld
cli
sbbl
out
out
hlt
je
test
shll
loopne
ljmp
fucom
lods
movsb
inc
fldenv
into
jne
cmp
cltd
shrb
cmp
mov
dec
jl
rcll
dec
test
add
xor
or
push
repnz
xchg
frstor
mov
ljmp
sub
or
push
adc
lds
push
popa
fcmovbe
mov
sarl
ja
xchg
xor
mov
inc
mov
fcomps
xlat
das
cs
leave
out
aas
ljmp
pop
pusha
lods
xor
push
int3
loop
push
push
mov
lahf
roll
shr
bswap
lods
cltd
sub
mov
aas
out
xchg
mov
mov
jne
jecxz
outsl
bound
add
sbb
nop
outsb
xor
jo
jno
xchg
fs
gs
add
rol
cmp
pop
cmp
jp
mov
push
int3
cmp
sub
loop
xor
push
push
and
arpl
xor
and
pop
ljmp
mov
push
cltd
stos
and
push
cmp
loopne
notb
clc
adc
xor
adc
jbe
in
fcomps
aas
sub
jnp
stc
test
or
sub
mov
mov
xchg
insl
movsb
sub
in
movsl
sbb
or
push
adc
lcall
out
inc
shrb
mov
lcall
mov
cld
sub
xchg
ret
mov
xlat
scas
mov
lods
sub
out
or
sub
jo
mov
shrb
out
mov
scas
insl
shrb
push
cltd
xor
mov
andl
adc
gs
add
push
inc
mov
lock
sbb
and
aad
xor
xor
jnp
mov
mov
ret
pop
lds
das
mov
mov
sbb
clc
cmpsb
push
mov
cmp
xchg
mov
sbb
fmull
mov
dec
xorb
xchg
popf
data16
lods
orl
lahf
mov
js
ljmp
call
test
jl
xchg
lds
push
stos
xchg
sbb
add
adc
fists
and
out
loopne
sarl
mov
and
mov
sbb
mov
sbb
imul
mov
call
xchg
mov
add
lahf
cmpsl
in
clc
sti
mov
sbb
es
fcmovb
clc
popf
xor
push
or
adc
mov
call
xchg
cmp
pop
dec
stos
rcl
jno
repz
xlat
dec
aad
enter
ljmp
enter
add
sbb
out
sbb
sbb
mov
and
pop
fst
shlb
mov
jle
outsl
rcrb
adc
dec
sbb
mov
push
mov
or
sub
inc
stos
pop
or
cltd
mov
test
je
rcrl
fcompl
cld
push
mov
sub
lds
movsb
loop
dec
adc
addr16
ret
fdivr
ds
xchg
iret
leave
std
push
sbb
popa
push
push
adc
jns
addr16
push
pop
mov
jle
add
mov
sub
xor
push
adc
mov
dec
cmp
pop
pushf
sub
js
xor
stc
jle
adc
leave
dec
dec
dec
es
sub
jecxz
movsb
lods
dec
rol
push
test
mov
adc
std
inc
xchg
out
pop
ret
jge
pop
pop
cmp
je
mov
lds
mov
shl
lock
daa
cmp
jns
daa
xchg
aad
cmc
pop
mov
adc
xor
push
xor
mov
stos
sbb
mov
pop
bound
mov
bound
cli
adcl
call
add
leave
jno
bound
add
adc
in
or
scas
add
icebp
lods
xchg
bound
pop
jnp
adc
insl
mov
fsts
inc
inc
jnp
sub
cmp
mov
dec
xlat
lods
sub
xor
cmpsl
je
pusha
lods
push
lahf
jb
cli
or
outsb
das
in
repnz
fsubrl
push
cmp
and
andb
sub
mov
pusha
pop
jnp
mov
fmuls
jmp
mov
imul
push
fwait
sub
outsb
cmpsl
mov
jl
pop
push
inc
xlat
pop
fwait
es
pop
jbe
xchg
lods
scas
push
and
jnp
cmp
add
pop
call
cwtl
mov
xchg
adc
xlat
ljmp
dec
or
test
or
out
pop
cltd
adc
mov
imul
jmp
jne
mov
mov
dec
push
pushf
repz
cwtl
fimull
test
jo
ror
dec
pop
in
pop
push
jmp
pop
mov
scas
aas
popf
lahf
sbb
mov
sbb
push
push
sub
pop
pop
inc
mov
jbe
sahf
ret
mov
fistpl
cmp
xor
or
clc
inc
cltd
mov
loop
inc
lcall
xchg
push
popa
clc
in
mov
ret
sub
sarl
fdivp
in
loop
pop
jle
sub
stc
jne
popa
adc
bound
call
int3
loopne
lcall
cmp
pop
jp
sbb
mov
mov
dec
call
imull
inc
or
cmp
sbb
out
or
or
mov
sub
pop
pop
mov
sti
pop
sub
adc
int
lods
stos
adc
mov
les
ret
jb
bound
gs
jle
out
fists
repnz
sbb
testb
and
loop
push
jnp
mov
cmp
or
xlat
pop
cltd
lcall
mov
or
sbb
stc
outsl
xor
aaa
test
dec
ret
jnp
iret
jo
inc
pop
pop
movsl
sbb
push
shlb
fucom
cmp
lret
mov
push
mov
popf
push
sub
adc
jnp
dec
mov
lea
jp
jbe
fdivp
gs
inc
ljmp
popf
add
cld
sbb
dec
push
fstl
ficoms
xchg
cld
notb
sbb
push
and
pop
je
fdivp
and
jg
dec
and
mov
cwtl
jp
pop
movb
ds
xor
mov
mov
pop
repnz
es
sbb
int3
leave
jp
imull
fwait
out
call
movsb
je
adc
imul
sahf
mov
or
and
adc
mov
rcl
add
inc
sub
mov
jp
insb
out
lods
xchg
dec
push
or
repnz
fisttpll
pushl
mov
out
test
scas
fldt
fcmovnbe
ja
push
jle
bnd
mov
scas
sarb
fstl
pop
mov
aad
inc
jg
xlat
rcrl
mov
int3
addr16
shlb
sbbl
dec
enter
fisubs
xor
sbb
loop
mov
adc
cmc
mov
push
shl
push
mov
dec
pop
sub
int3
in
sti
fldenv
aam
sub
mov
push
stc
add
adc
out
jg
call
pop
adc
fistps
popa
xor
mov
movsb
adc
out
orl
mov
mov
xchg
mov
adc
and
sbb
pop
in
shlb
pop
adc
or
jno
rcrl
add
cmc
cli
out
inc
cmp
xchg
lahf
test
xchg
or
inc
push
andb
push
sbb
es
pop
js
mov
sbb
push
imul
sub
dec
sahf
jae
and
lret
mov
ljmp
add
stos
jl
and
icebp
xchg
xchg
movsl
aad
sarb
jmp
pop
sti
adc
mov
fstp
fs
pop
and
js
popf
in
mov
into
ljmp
add
jae
pop
mov
adc
lock
loope
in
in
js
or
out
jae
mov
outsb
inc
dec
test
hlt
es
sbb
pop
cld
movb
out
fildl
mov
mov
inc
in
bound
push
pop
mov
cmovs
push
les
leave
push
jmp
lods
in
or
imul
lods
shll
comiss
sub
sarb
inc
popa
mov
jae
es
mov
sbb
xchg
stc
stc
mov
ja
loopne
pop
cmp
sahf
cmpsl
jns
lock
aad
xchg
cmp
dec
fistpll
sub
idiv
sarl
push
xchg
xor
mov
mov
cmpsl
popa
dec
dec
jbe
sub
out
xorb
mov
xchg
pop
xor
inc
inc
xor
test
xchg
jo
push
xor
test
test
sti
scas
inc
push
xchg
out
inc
clc
out
sbb
cmova
cltd
xchg
stos
sub
jne
mov
fistpl
xchg
popf
ja
imul
xor
or
fistps
insl
test
aam
add
push
mov
jns
das
dec
inc
les
cltd
in
pop
lret
and
pusha
addb
cli
or
mov
push
imul
popf
ja
inc
inc
sbb
outsb
sahf
push
push
xchg
stos
pushf
inc
and
dec
mov
negl
frstor
pop
mov
sahf
push
inc
inc
adc
inc
inc
sahf
lcall
sbb
stc
icebp
mov
jae
jns
jmp
add
mov
sbb
and
or
and
push
loop
inc
dec
aas
popf
andl
xchg
int
das
mov
test
sbb
mov
mul
std
adc
scas
jp
outsl
sahf
adc
mov
jp
pop
dec
test
insb
jp
pop
mov
jno
xor
or
or
add
js
testb
add
dec
leave
cmpsb
dec
popf
insb
int3
sbb
fnstenv
mov
into
das
loope
insl
xchg
push
shrl
xor
test
pop
repnz
scas
xchg
dec
es
pop
or
enter
jg
pop
cmp
gs
xchg
xor
inc
mov
cmc
dec
adc
movzbl
inc
fcomps
adc
xor
enter
shrb
inc
sub
jns
xchg
mov
addr16
cmp
cmc
call
sbb
mov
outsl
mov
xor
add
sbb
add
push
xchg
imul
jecxz
cmp
lock
ud0
test
in
xor
mov
and
mov
add
mov
xchg
test
mov
aad
mov
jge
sub
mov
pop
dec
pop
mov
daa
clc
insl
mov
sub
dec
xchg
mov
push
fcomps
int
fnsave
lods
fsubs
lods
jb
daa
mov
cmp
jle
jae
mov
lods
and
mull
arpl
pop
stc
pusha
mov
lds
cmpsb
push
popf
push
pop
mov
fs
sub
lods
cmp
sub
pop
sbb
jg
or
inc
mov
and
fidivs
sub
test
mov
add
out
in
pop
mov
dec
sub
pusha
out
cmp
jle
jecxz
jl
push
push
and
jo
cmc
xchg
in
cmpsb
daa
mov
js
jle
in
pcmpgtd
or
sbb
fisttps
int
pop
jno
inc
test
cltd
pop
pushw
daa
push
or
mov
xchg
xor
dec
ja
sbbl
xchg
out
loope
mulb
mov
test
mov
cmp
lods
xor
mov
xor
dec
mov
and
pop
dec
mov
in
xlat
mov
push
jmp
out
cmpsb
sbb
outsl
das
mov
sub
and
jle
mov
pop
sbb
inc
sti
sub
push
jle
scas
pop
ljmp
sahf
jge
jne
repnz
jecxz
xor
loop
mov
xor
pop
push
push
jb
cli
xchg
test
mov
fcomps
icebp
stc
dec
jne
imul
roll
stos
int
push
shrl
fcoml
and
loop
in
stos
ljmp
mov
psrad
mov
adc
pop
mov
outsb
sub
rcr
sarl
je
mov
xchg
and
aas
nop
rolb
call
adc
repnz
adcb
jo
mov
pop
add
dec
dec
sahf
xor
mov
sbb
sbb
adc
push
std
push
fwait
push
stc
cmpsl
ljmp
nop
ficomps
and
jmp
and
insl
into
nop
daa
fistl
push
outsb
mov
jl
mov
and
push
scas
jmp
lock
mov
jns
and
mov
jge
aad
mov
sbb
ljmp
mov
inc
cmp
dec
es
lcall
int
push
jno
pop
xchg
mov
loope
push
push
mov
xchg
jg
or
mov
cmpsb
sub
jge
cmc
xor
inc
fs
pop
push
sub
xchg
dec
inc
push
pop
xchg
in
insb
mov
inc
nop
rol
lds
dec
lds
aam
jb
xor
adc
xor
sbb
and
mov
int3
and
jne
push
test
and
jns
insl
fdivr
mov
scas
and
mov
cmp
push
xchg
and
cmpsl
pop
popa
insb
clc
stos
arpl
lcall
imul
idivb
mov
push
mov
fsts
shlb
outsb
jbe
jl
and
adc
push
and
sbb
or
outsl
popf
and
mov
push
cwtl
rcrl
lret
test
push
outsl
adc
dec
sbb
lds
mov
rorb
nop
les
movsl
push
sbb
pop
add
imul
not
das
out
scas
jg
mov
dec
mov
je
pop
cmp
ret
jp
xor
xor
jnp
std
inc
data16
push
sahf
shll
jo
lea
sub
push
lds
add
in
jmp
ret
fdivs
sub
sbb
les
mov
sbb
xchg
xor
jp
mov
pusha
cltd
xchg
sub
pop
inc
call
xchg
mov
lods
outsb
cltd
leave
cwtl
mov
xchg
hlt
dec
jp
div
cld
daa
cmp
dec
jne
dec
add
cltd
dec
popf
aam
adc
jge
dec
popf
cmp
sub
jno
dec
mov
jns
jno
mov
mov
sarl
imul
in
mov
dec
jb
mov
dec
cmp
out
jns
adc
mov
aaa
cmp
movsl
sub
std
imul
mov
or
loop
js
push
mov
push
ja
xor
lret
dec
push
adc
ret
jge
xlat
movsl
sbb
les
pusha
jbe
push
mov
popl
testl
scas
test
xor
sub
mov
jb
jge
push
mov
lea
jb
das
cld
cwtl
in
mov
pushf
decb
aam
stos
mov
jmp
xchg
xor
pop
scas
xor
cmp
xor
mov
adc
fists
lods
mov
sbb
mov
mov
push
lods
es
in
popf
adc
popa
mov
push
dec
xor
out
test
xor
push
loope
fs
or
insl
mov
mov
cmp
push
leave
stos
fdiv
or
imul
scas
aaa
lcall
adc
mov
enter
pop
xor
push
mov
ljmp
mov
dec
xor
aad
lods
ret
hlt
or
jb
scas
jle
out
pusha
sbb
xor
shl
scas
sub
mov
fiadds
dec
pop
sarl
pop
cli
jl
sub
popa
xor
das
pop
lods
mov
inc
sahf
lahf
jns
and
cld
aam
jl
xor
daa
ret
movzbl
xchg
or
or
and
bnd
icebp
xor
popf
stc
push
push
stc
adc
sub
fisubrl
jb
cld
pop
pop
inc
sbb
std
xchg
leave
mov
mov
inc
roll
push
dec
fcmovu
adc
icebp
mov
aaa
pop
ss
mov
lods
fsub
cs
cs
ret
and
pop
sub
lds
mov
and
and
dec
sub
stc
push
pop
mov
dec
cs
insb
adc
pusha
shll
test
pop
inc
sbb
push
add
sub
loope
adc
mov
jnp
ficomps
jnp
out
nop
mov
sbb
xchg
mov
clc
mov
outsb
xchg
jne
mov
loope
jcxz
ret
movsl
mov
xor
add
or
push
jno
repz
out
ss
ret
push
mov
lret
add
fisubs
mov
cli
xchg
hlt
push
cli
sti
mov
adcl
cmp
or
mov
cltd
sub
push
cmc
shr
shr
cmp
fisubl
inc
or
dec
mov
jno
fildll
sub
push
or
pop
jecxz
frstor
sbb
mov
xchg
lods
into
add
test
xor
mov
outsl
add
aad
arpl
cmp
mov
jbe
inc
sub
out
lret
push
add
pop
repz
and
inc
add
inc
and
icebp
xor
xchg
int
outsb
inc
mov
lds
or
xchg
xor
mov
push
xchg
adc
jo
cmp
pop
sub
cmovp
and
aaa
xor
push
adc
mov
jle
lcall
push
shrl
lods
mov
adc
sbb
xchg
jne
inc
imul
mov
ret
movsb
in
sbb
fstl
insl
pop
adc
mov
add
adc
mov
jns
enter
incb
aas
dec
push
imulb
push
dec
pop
dec
lods
add
test
out
mov
aas
xor
jb
cmp
jo
pop
mov
mov
daa
xchg
inc
adcb
push
jg
call
addr16
call
repz
jl
and
jne
call
cs
sbb
xchg
je
subl
ljmp
data16
loop,pn
call
sti
in
nop
enter
jnp
fbstp
adc
ret
mov
insb
js
rorl
inc
enter
jne
jae
xor
mov
ds
imul
lahf
clc
and
push
push
cmp
and
into
mov
adc
idivb
fnsave
dec
sbb
loopne
and
popa
mov
scas
imul
arpl
mov
inc
mov
imul
inc
fildl
mov
arpl
adc
cmp
repnz
mov
pop
bswap
outsb
leave
dec
inc
loope
push
and
jno
clc
jle
jl
insb
adc
xlat
ds
and
scas
push
and
rclb
in
xor
jp
add
cwtl
jp
inc
movsb
sub
pop
mov
in
cwtl
popf
xchg
or
cmp
or
pop
out
and
aaa
jmp
push
stc
sub
arpl
mov
movsb
adc
xchg
xlat
mov
test
cmc
xor
js
or
mov
ja
push
and
push
lret
adc
fistpl
icebp
insb
pusha
jmp
adc
aaa
push
add
in
lock
movb
lret
xchg
mov
mov
sbb
adc
int
sub
test
pop
orb
gs
nop
ja
sub
mov
jg
cmp
sti
fildl
sbb
jae
xor
mov
mov
xchg
cld
ret
lds
xchg
xchg
lahf
push
popa
xchg
orl
in
push
push
hlt
movsb
add
lcall
sub
cmp
mov
xor
jecxz
push
test
mov
out
xlat
dec
in
mov
inc
pop
call
cmp
outsb
mov
inc
cld
mov
xlat
data16
mov
jle
or
loope
mov
mov
mov
stos
outsb
inc
in
inc
pop
cmp
mov
pushf
ficoms
fists
mov
into
lret
fsts
loop
add
dec
mov
xor
dec
adc
scas
decl
adc
push
add
nop
add
xchg
pop
out
shrl
fstpt
incb
lds
in
inc
lock
xor
push
pop
adc
jbe
scas
daa
mov
out
cmp
scas
sbb
mov
daa
push
in
dec
repz
fbstp
jns,pn
sbb
sbb
xor
push
cmp
jb
call
dec
stos
push
inc
xchg
adc
inc
mov
jb
lock
test
xchg
dec
xrelease
aad
lret
push
insl
out
fcomi
stos
aad
push
ljmp
movsl
push
mov
mov
stos
jne
cmc
lods
pop
sub
mov
lock
lahf
adcb
add
jbe
sub
fabs
xor
or
mov
mov
pop
popf
stc
pop
mov
mov
fidivl
xchg
loop
lcall
or
mov
ds
mov
or
xchg
xor
add
jbe
adc
jle
sbb
lods
push
nop
dec
and
cmp
xchg
stos
repnz
out
mov
sahf
jge
stc
push
les
mov
aaa
jns
lods
push
mov
int
aam
jge
adc
incb
or
mov
test
pushf
dec
add
shlb
iret
xor
jge
inc
in
jae
cmc
jl
shll
jbe
sbb
or
mov
lret
fdivr
js
dec
inc
push
or
pop
hlt
sti
inc
inc
js
out
in
jle
sub
ljmp
jb
ja
adc
ds
div
push
mov
mov
loop
fsub
lea
cmpsb
fwait
lods
jecxz
xchg
dec
addb
lods
push
jle
push
mov
inc
add
sub
movsl
jge
loop
xor
push
xor
nop
mov
cli
and
lea
shl
je
rol
jl
jecxz
push
lret
cmpsl
mov
outsl
jge
and
scas
mov
das
sub
push
mov
shrl
mov
dec
ror
ss
mov
jmp
xor
add
into
and
sub
daa
xor
inc
dec
addb
cmp
mov
pop
das
pop
jmp
ds
push
jno
rcr
or
fisttpll
je
and
aaa
cmp
shll
jg
in
stos
adc
pusha
lea
leave
aas
pop
and
imul
push
push
inc
scas
arpl
cmp
int
movsl
or
pop
add
sti
mov
in
jp
mov
jns
jae
add
jp
mov
xor
push
loopne
repnz
mov
popf
inc
add
pop
mov
stc
in
pop
pop
dec
and
jo,pn
sti
mov
fistps
push
cmpsl
rcll
or
sub
mov
test
add
out
mov
push
sbb
icebp
dec
cmpsb
int3
andl
arpl
ficoms
adc
cs
dec
adc
insb
shlb
or
inc
cmp
test
mov
ljmp
aas
jae
shrb
mov
and
jmp
test
frndint
jb
push
pop
pushf
sub
mov
mov
outsl
adc
push
in
push
push
daa
jp
pusha
cmpsl
sahf
jl
xor
insb
popf
hlt
fildll
jmp
mov
adc
jno
imul
inc
out
mov
mov
jbe
mov
push
in
adc
inc
mov
ret
sbb
pop
ret
cmp
mov
adc
lea
and
icebp
leave
sbb
into
or
and
inc
outsb
mov
xor
in
and
jp
pop
adc
xchg
out
bound
and
mov
sub
mov
push
jbe
ljmp
pop
js
scas
and
xor
cmpsl
mov
in
sti
leave
adc
fsubl
les
testl
daa
jae
test
arpl
jb
je
or
ljmp
jp
cmp
adc
pop
sahf
and
pop
adc
xor
push
js
pushl
ret
xor
push
int
jmp
cmp
cs
sarb
push
pop
mov
push
lcall
adcl
dec
mov
xcrypt-ofb
cmpsl
lods
fcmovu
adc
push
and
cmp
jbe
push
clc
dec
cltd
xor
adc
sub
int3
mov
fnstsw
inc
mov
popf
ficompl
nop
rorl
bound
test
aam
stos
mov
in
or
push
vpmullw
aas
aas
push
jmp
pop
xor
jb
mov
push
xchg
lods
cli
cld
push
sub
mov
in
mov
aaa
insl
mov
sbb
jae
adc
jp
test
lahf
push
clc
jge
pop
out
jle
xchg
push
xchg
jns
popf
cmpsl
lcall
in
mov
jp
es
push
sahf
xchg
jmp
xor
push
jmp
jns
xor
and
ficoml
movb
pop
push
jb
and
pop
or
cmp
shr
in
icebp
stc
imul
pop
dec
adc
aad
mov
adc
sub
sub
lds
es
mov
dec
xchg
test
mull
inc
xchg
xor
cwtl
push
into
mov
mov
mov
or
testb
dec
ljmp
or
jp,pt
mov
jecxz
pop
ss
jle
nop
dec
movsl
xor
inc
lods
pop
jcxz
pop
or
sub
mov
mov
push
sub
fists
mov
xchg
fcomip
dec
cmpsl
mov
popf
or
dec
hlt
dec
in
sub
addr16
movb
aam
insl
aas
loope
inc
xchg
push
mov
inc
ljmp
sub
jp
xchg
cmp
ljmp
cmpsb
inc
mov
outsb
cmc
sbb
mov
cld
jmp
mov
stos
scas
xchg
mov
sahf
mov
ret
cltd
xchg
jo
mov
inc
std
scas
mov
xor
or
cwtl
push
ret
pop
mov
cmp
das
push
daa
adc
push
jne
jo
insl
push
mov
adc
arpl
inc
mov
loop
or
aad
fwait
int
jmp
pop
inc
mov
and
lret
adc
fstpt
push
stos
push
cmpl
and
movsb
jmp
pop
cmp
push
daa
add
dec
jle
xchg
adc
ja
daa
repnz
mov
scas
jcxz
les
lea
stc
adc
iret
adc
pop
aam
xchg
les
out
sbb
cltd
push
jl
dec
dec
push
jg
cmp
fsubrl
cmp
inc
xchg
cwtl
pop
xchg
pop
lret
sub
adc
lcall
sub
or
and
mov
inc
mul
gs
cmp
xchg
cmp
jp
adcl
rcr
lahf
mov
mov
stc
dec
into
test
fwait
push
je
add
cltd
incb
sub
mov
fsubrs
push
stos
jmp
mov
hlt
mov
bndldx
movsl
mov
adc
je
push
out
subl
popa
repnz
inc
bound
jns
xor
pop
jle
out
inc
push
sub
sub
imul
inc
and
cmp
and
sub
mov
test
mov
push
mov
int
or
jnp
and
mov
inc
jmp
arpl
jle
mov
mov
shlb
mov
xchg
push
inc
and
jecxz
jge
repnz
imul
adc
test
int
mov
mov
adc
xchg
in
and
loopne
aam
mov
or
sbb
inc
sbb
addr16
ret
cs
or
pop
bound
xlat
aam
mov
out
and
mov
cmc
xchg
xor
leave
insl
leave
data16
fnstenv
push
lret
adc
mov
aas
rorl
pop
inc
les
in
cmpsb
or
jle
sub
mov
pusha
mov
adc
cwtl
fidivrs
cmpsl
fwait
push
jmp
fabs
lock
mov
push
add
lret
cmpsl
inc
and
jg
aaa
xchg
ja
jmp
pop
into
and
mov
jne
hlt
dec
pop
cwtl
pop
test
push
test
mov
pop
decl
dec
push
push
lret
inc
or
inc
sbb
das
mov
lea
add
rcl
stos
cltd
insb
in
and
and
addr16
add
push
in
stos
ficoms
push
cmp
xor
push
faddl
nop
sti
loop
lret
cmc
and
shr
repnz
add
dec
adc
jge
mov
imul
xor
jo
dec
mov
cmp
pop
enter
lcall
inc
das
outsb
aam
jp
sbb
xchg
inc
jmp
outsl
xchg
lahf
sti
xchg
fbstp
dec
lahf
test
inc
stos
dec
jmp
mov
sbb
fldenv
sub
movsl
je
mov
dec
jo
dec
loope
loope
mov
add
mov
mov
pop
bndldx
xchg
sub
ret
jo
mov
and
test
jmp
sub
sbb
mov
ljmp
sub
sbb
popf
cmp
dec
scas
loope
xchg
pusha
sub
inc
xor
pop
fnstenv
mov
inc
cmpsl
sub
push
leave
mov
mov
pop
out
sahf
cld
sub
arpl
jne
xor
mov
and
lock
loope
cmpsl
jp
xor
mov
mov
xlat
mov
cli
imull
insl
mov
cmpsb
ror
nop
cs
cmpsb
cmp
sub
clc
xlat
jb
movsl
jbe
loopne
cmc
mov
int3
xchg
mov
mov
push
call
icebp
movl
mov
push
xchg
and
out
push
cmp
xor
cli
and
pusha
pusha
es
stc
out
mov
insl
enter
enter
mov
aas
mov
je
push
sbb
sbb
push
xor
xchg
or
dec
js
cmpsb
icebp
mov
cmpsl
ljmp
xchg
mov
mov
add
dec
push
mov
jae
js
stos
dec
xchg
jo
inc
lea
leave
pop
shl
inc
jb
stc
rcr
push
xchg
call
daa
pop
jo
fstpl
pop
ss
bound
xor
mov
push
bound
pop
mov
push
add
cmp
lret
into
pop
push
int3
rcrb
sub
push
scas
fimull
pop
js
xchg
or
pop
ljmp
dec
lahf
mov
scas
enter
cli
shlb
sahf
jb
mov
fwait
in
xchg
or
movl
cmpsl
repnz
clc
das
aaa
xchg
pop
dec
rcll
daa
sbb
popa
inc
mov
icebp
popa
pop
test
jo
pop
mov
ljmp
mov
pop
pop
dec
push
iret
mov
sbb
fdivrl
lea
clc
mov
jp
lahf
mov
cli
push
pop
adc
mov
jg
mov
cli
adc
outsb
cli
and
fists
jp
xchg
rolb
cmp
test
movb
lods
stc
xchg
jle
ja
aas
push
mov
enter
push
and
shlb
or
jmp
sahf
imul
scas
sarl
fistps
or
dec
mov
cmp
and
insl
pop
mov
add
loope
xor
popa
jnp
imul
jg
repz
adc
fistl
ficoms
out
mov
dec
mov
lret
movsl
jp
mov
je
hlt
fldt
sub
jae
repz
sahf
cmp
add
sbb
dec
add
es
call
test
daa
push
inc
lcall
shlb
stos
jne
mov
push
es
and
aam
jle
ret
adc
andl
jp
imul
pop
mov
pushf
int
and
sbb
dec
out
sbb
jle
mov
mov
es
bound
add
sbb
lret
aaa
or
loop
dec
add
fnstsw
xor
mov
jle
xchg
jp
popf
js
sbb
shlb
les
ret
cmp
in
out
cwtl
addl
cmp
fcoms
cmp
or
subl
xchg
sbb
test
cli
mov
jle
jae
test
int3
rcrb
lcall
fimull
mov
adc
mov
sbb
lock
adc
loopne
pop
das
jge
nop
jp
outsb
cmpsl
ret
sub
jns
inc
sbb
push
cmpsl
idiv
fldenv
cmp
xor
insb
jle
test
push
mov
sbb
repnz
jle
add
push
insb
xchg
shlb
dec
cmpsb
and
sar
xor
dec
mov
and
mov
es
imul
iret
push
dec
push
arpl
dec
or
sbbb
stos
repz
mov
insl
adc
cwtl
rorb
in
dec
fwait
cmp
outsb
and
cmp
cmp
inc
and
pop
dec
aas
xor
push
iret
lcall
xchg
lea
mov
cmp
mov
hlt
pop
or
xchg
xchg
insb
lods
loop
insl
xchg
or
pop
fsub
test
insb
inc
or
xchg
mov
loop
pop
fcomp
mov
lret
jg
mov
mov
or
cmp
pop
xchg
mov
jle
popf
jle
add
mov
cmc
sbb
mov
add
or
push
add
stc
mov
push
push
adc
in
pop
pop
dec
inc
test
cltd
test
dec
inc
and
leave
test
lods
sti
imul
mov
test
test
std
mov
sar
popa
sarb
fidivrs
call
sti
decl
sbb
movsl
and
mov
test
cmp
in
push
adc
mov
pop
imul
aad
mov
fcoml
push
and
cmp
push
lret
sub
les
xchg
scas
daa
cmp
mov
mov
mov
and
test
cltd
scas
jno
cli
mov
mov
jp
mov
push
mov
fldl
mov
dec
stc
dec
cltd
push
jmp
stos
xorb
iret
ds
dec
dec
mov
xchg
jge
push
leave
adc
jns
lcall
leave
fistl
mov
pop
mov
test
sarl
pop
xchg
and
lret
mov
fsubr
filds
fnstsw
xlat
and
subb
loopne
std
mov
repnz
test
in
jae
mov
ds
mov
mov
popf
lds
or
lea
lock
jb
leave
dec
addr16
fxch
cmc
outsb
addl
aad
inc
loope
lcall
add
icebp
jb
test
dec
xor
bound
mov
jmp
dec
scas
mov
mov
mov
fwait
ret
pop
fimuls
sar
sarb
xchg
dec
sub
and
jno
nop
imul
pop
bound
and
lret
jmp
or
filds
hlt
clc
lods
inc
lods
fucompp
sbb
popa
jns
ja
add
cmp
jnp
dec
orl
je
sbb
mov
mov
xchg
nop
in
jp
scas
shll
repnz
mov
adc
movsb
pop
push
mov
fcomi
ret
faddl
es
adc
adc
aas
xor
add
out
pmulhuw
mov
mov
push
push
mov
out
xchg
mov
xchg
lahf
cmp
ret
push
adc
jbe
add
mov
mov
jbe
pop
outsb
and
push
enter
push
mov
lea
sarb
add
aam
int3
dec
fwait
inc
mov
lret
fildll
cld
ljmp
and
or
test
adc
mov
rcrb
cmpsb
mov
and
or
jnp
mov
mov
pop
sti
test
pop
sub
not
inc
mov
push
mov
sbb
in
clc
popf
sub
je
push
cmp
inc
mov
pusha
sti
out
popa
jl
mov
aas
int3
xchg
inc
ffree
dec
imul
ficompl
cmc
or
pop
les
jl
inc
sahf
call
pop
ds
mov
pop
out
scas
rcll
mov
test
clc
stos
imul
jmp
pop
push
xchg
ficomps
add
or
push
push
adc
inc
add
adc
cmp
jmp
sub
mov
mov
les
push
loopne
xchg
mov
arpl
dec
fdivs
jnp
mov
loop
adc
rolb
aaa
and
jae
jle
cs
jl
addr16
sbb
xchg
xchg
mov
in
jge
push
fcmovnu
cmp
fsubr
pop
fidivs
inc
mov
xchg
cs
mov
xor
mov
lock
adc
mov
lcall
movsb
sti
sbb
scas
lret
fucomip
scas
mov
and
pop
pusha
mov
add
repnz
into
pop
sub
ja
iret
xchg
inc
push
ljmp
in
les
stos
adcl
fsub
mov
inc
sub
dec
mov
fmulp
push
mov
leave
icebp
and
and
movsl
cmpsb
mov
add
subb
arpl
shlb
call
or
adc
cmpsb
inc
jecxz
sub
sti
push
daa
mov
cmp
jg
xlat
xrelease
jns
outsl
testb
xchg
test
popa
mov
es
pop
jb
mov
pushl
sbb
dec
daa
in
cmp
mov
inc
mov
push
add
dec
scas
test
xchg
out
bnd
adc
ret
xor
add
scas
jno
std
hlt
mov
add
scas
inc
xchg
or
xchg
pop
scas
xchg
in
sub
pop
loope
add
sub
jnp
adc
cmpsb
cmp
les
xor
push
out
testl
repz
mov
scas
mov
in
mov
adc
pop
add
inc
fwait
and
ds
cli
inc
mov
lock
cmp
adc
jp
js
push
jo
jns
fnstsw
dec
dec
ret
pop
stos
clc
push
sbb
pop
scas
jnp
sub
pusha
fidivs
mov
pop
insl
insb
scas
dec
pop
xor
add
insb
into
cmp
push
or
test
and
sbb
pusha
and
jae
lahf
ljmp
mov
scas
lds
sbb
call
xor
or
sub
pop
and
xchg
movsb
leave
push
loopne
xor
pop
rcrl
pop
test
or
push
inc
outsl
movsb
cs
js
mov
scas
sbb
lds
pop
js
ljmp
incb
stos
cmc
inc
pop
cmpl
pop
xor
in
adc
popa
out
mov
ret
or
sub
ret
aaa
popf
cmp
sbb
ret
and
push
mov
xlat
mov
xor
inc
aas
je
movsb
fisttpl
int
cmc
mov
dec
decl
mov
sub
jecxz
js
lds
fwait
adc
xchg
ret
jno,pn
jmp
jmp
xor
lds
stos
xchg
cltd
push
mov
in
or
sbb
outsb
pop
cmpsl
lock
pusha
and
push
mov
inc
add
pop
inc
outsb
inc
lea
jg
sub
outsb
aad
pop
cmp
cltd
and
xchg
jp
add
add
clc
cs
shrl
idivl
dec
mov
cwtl
sub
adcb
fcoms
jl
add
mov
popf
dec
ds
gs
and
add
lds
into
xor
cld
js
fs
adc
stos
adc
or
cld
xchg
stos
cmpsb
sub
jo
out
dec
rclb
add
jle
push
imul
imul
mov
mov
xlat
leave
or
pop
scas
jecxz
and
xor
push
sub
ds
push
xor
and
in
andl
clc
notl
inc
jno
sbb
mov
jp
pop
daa
dec
aad
push
xchg
in
je
adc
pusha
xchg
sti
add
pop
jnp
xchg
and
subl
cmp
stos
mov
lea
adc
enter
dec
outsl
cltd
stos
xlat
dec
mov
xor
ret
insb
pushf
or
mov
xchg
mov
xchg
cmc
in
sbb
ret
cld
adc
inc
outsl
sub
and
mov
icebp
addr16
jbe
cmc
dec
dec
mov
leave
push
adc
sub
lods
jnp
push
outsl
lods
dec
mov
in
stos
in
test
fwait
arpl
pop
out
jl
push
sub
stos
pop
inc
pop
mov
xchg
push
lock
dec
xor
push
fcomip
jmp
mov
inc
xor
sbb
push
pop
xchg
enter
jnp
nop
cwtl
stc
or
inc
push
jmp
fdivl
mov
sbb
adc
sahf
xchg
call
mov
stos
push
dec
dec
mov
mov
push
movl
pop
adc
and
sub
int3
popf
aam
push
nop
dec
push
aaa
insb
push
mov
pop
add
mov
mov
inc
sub
inc
push
adc
xchg
outsb
addl
clc
dec
leave
sbb
test
mov
dec
repz
out
mov
and
xor
or
cmp
les
call
push
loope
jo
cltd
push
xchg
cmc
add
pop
into
mov
ja
ffree
imul
lret
adc
call
dec
mov
add
insb
jecxz
std
aam
ss
xlat
pop
bound
xor
in
pop
pushf
sub
fistl
push
dec
and
fbstp
mov
adc
movsl
mov
pop
jbe
js
scas
adc
test
cli
dec
cmpb
mov
xor
dec
shll
or
xorb
xchg
scas
imul
or
and
stc
pop
and
xchg
outsl
jg
push
sti
dec
subb
fisubrl
xchg
mov
out
inc
lahf
jbe
and
int3
ljmp
jge
dec
lcall
jbe
sub
cmp
cmp
loop
movsl
aam
mov
int3
cmp
mov
jns
out
cmp
adc
jo
jge
mov
ret
mov
jb
popa
pop
std
aad
mov
pop
jp
dec
fists
mov
pop
and
xor
inc
ret
cmp
xchg
rcrl
jne
jecxz
xlat
sub
mov
add
push
cmp
in
and
in
sahf
out
inc
lods
adc
inc
addb
pop
ja
xor
gs
out
sub
movsb
das
adc
scas
fisubrs
pop
enter
mov
cmp
in
sbb
nop
es
jns
pop
push
add
je
dec
jle
xchg
mov
pop
xchg
lret
push
jecxz
std
xchg
jmp
dec
pop
push
push
or
jecxz
and
xorl
scas
push
cld
arpl
neg
jns
or
mov
cli
sub
shlb
xor
xchg
mov
jp
or
push
ljmp
xchg
sbb
xor
sbb
loopne
sbb
in
mov
es
jns
imul
inc
testl
pop
and
jno
or
jbe
das
in
int3
subb
cmpb
jmp
xchg
aaa
push
mov
scas
xchg
inc
pop
out
inc
sub
xor
push
mov
cld
jle
into
cmp
dec
in
mov
sarb
dec
ficoms
je
outsb
cmc
rcrl
cmpsl
push
imulb
xor
fldt
in
jo
xchg
or
adc
sbb
inc
enter
popf
adc
test
xchg
mov
lea
inc
xlat
xor
push
jo
inc
inc
mov
xor
stc
out
in
sahf
sti
test
flds
nop
in
stos
inc
hlt
stos
pop
divl
jo
out
push
or
jmp
push
xorl
stc
pop
sti
nop
aad
data16
subl
adc
inc
loope
dec
dec
nopl
or
xor
cld
sbb
out
xor
icebp
adc
push
cmp
cmp
jle
sbb
out
xchg
pusha
call
in
test
or
push
mov
out
pop
popa
addl
jo
repz
or
add
sub
imul
int3
leave
jge
xchg
mov
je
shlb
cwtl
sbb
clc
fildll
aas
add
jo
cltd
cli
ret
imul
adc
pop
mov
hlt
and
pushf
pop
cmpsl
aas
push
imulb
add
ret
mov
out
int
pop
mov
sub
adc
roll
push
pop
push
cli
shlb
push
xor
test
cli
pusha
push
add
pop
xorl
adc
or
or
es
pop
das
fdivrl
aad
xchg
call
lret
push
fidivs
and
mov
push
dec
addl
cmp
lcall
mov
cmpsb
mov
pop
and
push
mov
cmp
shll
dec
and
mov
xor
jo
xchg
mov
add
cmp
pop
pop
loop
aas
push
xchg
dec
push
cltd
jg
icebp
gs
add
mov
add
out
lock
fisubrl
mov
mov
movsl
sub
inc
ljmp
test
or
arpl
into
push
iret
ss
and
xor
fstpt
inc
pusha
or
imul
mov
fnstsw
jmp
shrl
lret
push
cwtl
outsb
adc
push
jnp
xor
int3
out
pop
push
pusha
jmp
dec
clc
xchg
ljmp
adcb
fiaddl
dec
in
or
nop
sbb
xchg
dec
adcl
stc
or
push
jge
js
inc
in
enter
pop
push
rcll
idiv
xchg
scas
into
dec
out
cmp
jne
nop
mov
popa
sub
sub
push
fxch
adc
jmp
and
xchg
inc
add
or
push
int3
outsl
jg
and
xor
test
imul
xchg
lds
add
mov
repnz
pop
sti
shlb
mov
incb
aam
push
rorl
xor
push
or
mov
pop
or
jbe
xor
cld
cmp
and
and
not
or
rolb
pop
lock
mov
cld
ja
push
ret
negb
xchg
pop
shrl
push
or
les
add
xor
arpl
inc
push
popf
xchg
cmpb
lret
sti
cld
cmpsl
roll
sub
ret
or
pusha
movsb
pop
insl
ret
sti
popf
add
xchg
mov
sti
sbb
xchg
test
and
push
mov
sub
and
dec
das
jnp
outsb
jp
rcll
loope
mov
jne
push
mov
rcrl
pop
jne
mov
sub
scas
shl
lahf
add
hlt
enter
mov
jb
out
pop
pop
sub
or
pop
xchg
mov
pop
arpl
jns
shrl
icebp
lahf
in
ja
adcl
sbb
call
and
sbb
into
mov
and
and
jno
das
stos
or
bound
out
or
sarb
jbe
cli
push
lcall
lea
les
mov
pop
pop
stos
push
lea
test
push
fidivrs
and
ret
xor
fcmovu
pusha
and
imul
or
cli
repz
cmp
and
ret
sbb
sub
insl
out
sbb
aad
inc
sbb
outsb
inc
inc
mov
aam
dec
sahf
imul
rcrb
sbb
or
lahf
push
xchg
jns
mov
inc
sbb
push
mov
js
mov
movsl
dec
stc
inc
popa
mov
dec
scas
hlt
cmp
rorl
or
paddusw
es
movsl
cmp
in
xor
mov
sti
jecxz
daa
cli
mov
add
shll
out
pop
cmp
outsl
dec
or
lds
mov
pop
test
jecxz
cmp
fcmovne
mov
cs
insl
cmpsb
dec
sub
cmp
sahf
out
icebp
cmpsb
out
or
jge
fwait
insl
std
hlt
popf
pop
stc
lods
mov
call
jns
pop
insb
adc
jne
sahf
sbb
lods
push
push
scas
call
ficoml
test
sub
dec
lahf
sub
mov
mov
dec
adc
ds
cmp
jl
repnz
cs
sub
xor
push
imul
data16
popf
xchg
sbb
xchg
cmp
ret
add
jns
loope
push
inc
in
push
stc
adc
subb
dec
push
orb
aad
xchg
ret
pop
sti
push
sub
jmp
or
cmp
mov
imul
xchg
stos
lods
idivb
int
dec
sbb
sbb
xchg
cld
adc
push
mov
mov
int3
mov
aaa
icebp
imull
movsb
cs
imul
pusha
in
and
or
outsl
insl
testb
cmp
xor
mov
xchg
jl
ficoms
xor
mov
xchg
adc
push
das
or
xor
idivb
je
in
stc
and
xchg
push
les
jge
push
testb
cmp
xor
icebp
std
xor
push
pop
fnsave
push
pop
test
fwait
ljmp
mov
inc
or
idiv
aad
in
scas
push
arpl
inc
int3
and
lcall
inc
push
test
inc
stos
sti
nop
dec
jne
test
xlat
es
out
push
mov
jae
mov
fs
arpl
inc
inc
mov
mov
sub
jp
pusha
sub
cwtl
fdivp
scas
mov
push
mov
stos
sub
sbb
jg
sbb
out
shrl
jb
jbe
mov
mov
adc
jbe
xchg
and
std
aas
and
aaa
out
cmp
mov
pusha
inc
add
jnp
scas
pop
xchg
divb
push
jmp
pop
jl
lods
lahf
jae
pop
sub
pop
fdivs
pop
insb
and
je
sub
sub
clc
daa
pop
rcll
aad
pop
mov
jecxz
mov
gs
pusha
outsl
js
jp
and
stc
jg
mov
push
ljmp
arpl
roll
push
jl
repz
sbb
daa
jo
mov
cmc
mov
in
mov
stos
jns
sub
scas
sahf
mov
sbb
rcrl
int
add
jbe
int
cmp
jae
pop
jb
outsl
mov
xchg
mov
lcall
lea
stc
dec
emms
scas
test
aas
lret
imul
xchg
sub
or
sub
dec
jg
out
jp
rcrb
mov
dec
xor
fmul
fs
jbe
ja
in
push
fdivr
int
int3
call
cmpsb
cwtl
or
push
pop
push
into
mulb
and
mov
cs
loop
push
test
xchg
mov
xchg
or
shlb
add
xchg
sub
inc
aam
test
imul
sub
xor
scas
cmp
mov
and
xchg
scas
pop
mov
mov
shl
or
dec
cli
dec
mov
xchg
jo
mov
imul
sub
shl
mov
insb
mov
pop
cmp
jmp
fidivl
xchg
pop
mov
mov
mov
jne
loope
movsl
dec
sbb
test
jne
inc
sti
mov
loop
icebp
rorl
fs
ljmp
adc
fcmove
cmp
mov
pop
std
xor
aas
mov
fst
inc
add
and
xchg
bound
mov
repnz
add
mov
stc
das
fwait
push
mov
stc
out
es
inc
stos
outsl
push
loopne
push
jl
bound
mov
daa
movd
out
cltd
mov
ret
jg
into
xchg
xchg
es
mov
imul
test
in
xor
xchg
movsb
inc
lods
add
xor
in
in
stc
xchg
xchg
inc
mov
pop
out
fsts
shrb
arpl
sbb
fsubr
and
lret
movzbl
dec
pop
js
aas
push
mov
daa
out
or
adc
mov
pop
sahf
outsl
jns
int
push
push
repz
inc
xchg
insl
shl
pop
out
xlat
lods
aaa
adc
or
pop
sbb
movsl
xchg
pushf
arpl
loop
lock
xor
ficomps
mov
bound
sti
cmpsb
and
xlat
rcll
push
mov
xor
cld
xadd
and
shll
stos
push
mov
and
pop
nop
das
mov
les
pushl
inc
jle
jmp
sbb
sti
cld
push
mov
mov
and
cmc
inc
and
or
cmc
sbb
out
pop
mov
mov
stos
push
insl
cmp
repnz
cmpsl
dec
js
adc
adc
pop
push
loop,pn
mov
adc
dec
xchg
cmp
shrl
mov
jne
dec
arpl
jb
in
inc
test
mov
lock
fdivs
mov
jnp
out
jne
rolb
addr16
stos
fistl
or
jnp
sub
insb
pop
add
testb
push
push
push
stos
xor
test
and
maskmovq
mull
jno
cmc
cmpsl
pop
cltd
pop
sti
das
outsl
fimull
mov
fistpl
ret
jnp
add
fiadds
jb
addb
jne
test
lea
pop
xorb
call
enter
jle
insl
sbb
adc
pushf
cmp
test
scas
cmpsl
aas
cmp
inc
push
js
push
daa
inc
mov
inc
cmpsl
arpl
jo
mov
fs
mov
mov
xor
pop
inc
mov
xor
cld
movsl
fdivrs
and
sbb
sub
mov
or
sub
fs
sub
adc
test
loop
cmpsl
push
stc
andnps
push
jp
in
pop
lret
cmpsb
jns
ljmp
out
mov
aam
add
movq
mov
sbb
inc
into
pop
test
adc
mov
mov
and
cmp
movsb
je
inc
repz
aam
jne
sub
imull
mov
and
aad
stc
add
adc
enter
cmp
test
dec
incl
mov
mov
add
fidivs
dec
mov
or
and
add
push
push
stos
jbe
xor
inc
cmpxchg
sub
jae
aas
jg
ja
aas
add
sbb
push
xchg
imul
fnsave
out
cmp
fcoml
and
adc
sbb
cmpsl
ficoml
test
dec
xor
cmp
and
mov
mov
jnp
test
out
rclb
je
xor
inc
adc
mov
out
xchg
dec
cmp
iret
mov
push
xor
adcl
lret
mov
sub
cmp
fwait
shlb
movsb
ret
pushf
insb
xchg
adc
xchg
mov
negb
cwtl
push
or
les
pushf
icebp
inc
and
mov
int
cmp
push
or
or
push
push
xor
mov
mov
adc
push
mov
mov
rorb
sub
int
or
dec
cltd
dec
mov
loope
das
rorb
test
fisttpll
dec
inc
outsb
rcll
ss
es
mov
aaa
out
repnz
ja
jns
ffree
or
xlat
popf
mov
cmpl
fildl
addr16
xor
mov
adc
jbe
pop
adc
call
mov
cld
cmpb
cmpsl
xchg
out
add
sub
test
mov
sub
popa
mov
cmp
mov
pop
or
or
sti
lahf
dec
addr16
xlat
mov
inc
in
or
push
and
ds
stc
enter
popf
popa
xchg
cmp
sub
cmp
xchg
daa
mov
cld
xchg
xchg
fists
setae
mov
cmp
int3
fcoms
push
sti
and
out
out
into
out
xchg
sbb
xlat
shl
pop
int
mov
mov
cmc
lret
inc
pop
rclb
pop
int
adc
sbb
adc
lahf
add
dec
les
adc
negb
sbb
cwtl
pop
es
mov
sbb
fiaddl
dec
rcll
jo
dec
cmp
pop
movsl
insb
push
lock
and
ret
imul
adc
mov
mov
aam
test
addr16
and
sub
add
push
jbe
xor
xor
test
jo
pop
xlat
hlt
test
mov
mov
jbe
sarb
xchg
outsl
int3
pop
push
shll
dec
cmp
sbb
les
adc
stos
sbbl
aaa
pop
outsb
scas
adc
popf
mov
inc
or
xor
insl
imul
mov
pop
adc
lock
cmp
les
adc
xchg
push
sbb
jge
mov
jnp
std
jnp
icebp
sub
imul
hlt
outsb
jns
mov
cs
mov
movsl
lods
jge
adc
lods
es
dec
arpl
fiadds
scas
sub
or
cwtl
mov
decl
not
push
cmp
sub
int
lcall
mov
das
les
adc
pop
mov
popf
js
shlb
add
repz
xchg
pop
adc
or
xor
and
sbb
mov
sarb
cmp
pop
addl
push
adc
std
hlt
les
fwait
push
das
dec
push
push
shl
cmp
mov
lods
dec
scas
push
mov
mov
arpl
popf
iret
test
addr16
cli
nop
sbb
add
and
jbe
and
repz
ja
rcrl
pop
add
sbb
mov
lea
iret
call
dec
push
out
add
std
cmp
loopne
jo
ret
pop
xchg
adc
dec
pop
push
jecxz
jp
fs
repnz
lods
pop
sbb
xchg
ret
scas
xor
in
dec
pop
into
fdivrs
or
mov
fistps
adc
andb
stos
jbe
aam
imul
nop
sub
ljmp
push
cmp
add
push
dec
mov
das
pop
cmp
xchg
xchg
imulb
mov
and
lret
cli
jge
dec
aaa
push
pop
adc
sbb
notb
xor
fldt
fs
lahf
and
xchg
xor
jp
loopne
aaa
popw
cmp
mov
scas
pop
pop
outsb
inc
test
add
cltd
cli
mov
ror
sti
les
dec
jne
repnz
out
add
popf
mov
lcall
je
mov
out
and
hlt
lods
cmp
das
js
inc
xchg
cmp
or
push
or
orl
je
rorb
xchg
repnz
fdivrp
pushf
arpl
pushf
add
sub
call
inc
leave
test
mov
ss
daa
rclb
cmpsl
lret
jae
adc
xchg
xchg
rcr
jmp
add
insb
xchg
scas
shll
fdiv
and
es
push
jp
push
xchg
das
mov
addl
ret
cltd
cs
inc
hlt
or
mov
xchg
xor
push
jae
sahf
jo
js
in
jmp
adc
arpl
cmpsb
subl
mov
outsl
adc
cwtl
cmc
ficomps
out
xor
dec
xor
push
insl
push
insl
fldcw
int
rcr
pop
fimuls
lahf
mov
or
pop
pushf
mov
fucom
arpl
fbstp
push
dec
insb
pop
das
dec
xor
enter
jecxz
push
repz
mov
mov
iret
lods
test
or
shrb
aad
es
xchg
push
or
xor
push
ds
shll
jb
mov
mov
add
mov
xchg
stos
mull
mov
es
inc
jne
clc
xchg
es
and
test
xchg
orb
test
rorl
adc
outsl
clc
jle
shrb
cltd
insb
lahf
pop
jle
les
sub
in
data16
or
test
pop
ror
add
mov
outsl
cld
push
je
pop
cmpsb
jnp
xor
repnz
xor
les
sbb
jmp
imull
cmp
out
aad
ds
stos
xor
cmc
ds
outsl
jmp
loope
push
mov
fwait
outsl
mov
mov
imul
lods
mov
cltd
repz
xlat
cli
fbld
cwtl
scas
movsl
sar
in
rol
add
lock
mov
pop
mov
dec
rcll
rcrb
ret
xchg
jns
xor
pop
and
mov
mul
add
xchg
fsub
xchg
andnps
fsubrs
arpl
test
or
icebp
arpl
sbb
pop
insb
add
orb
fxtract
jns
dec
repnz
push
or
and
xchg
testl
dec
cmpsl
cmpsb
xor
lock
sbb
test
xchg
xchg
mov
pusha
inc
dec
jnp
sti
push
lods
hlt
lret
xor
in
repz
stc
fwait
dec
mov
jle
jg
push
jmp
jo
xchg
dec
scas
inc
mov
mov
mov
ja
xchg
or
pusha
xor
mov
aas
shl
lret
fbld
ds
push
sbb
and
in
mov
push
jae
mov
pop
lods
mov
add
pop
pop
dec
add
mov
mov
aam
inc
push
lods
jle
adc
jnp
jno
add
or
cld
lock
push
cmpl
ror
loopne
mov
je
push
mov
scas
cltd
je
lock
sub
stos
cmp
xchg
nop
jae
cld
xor
loopne
cmp
adc
mov
mov
mov
and
js
fdivs
pop
jmp
in
dec
jp
clc
push
clc
stc
movsb
inc
or
dec
or
shlb
add
xor
lcall
push
xor
jbe
pop
xchg
jmp
mov
sub
pop
sbb
decl
dec
pop
add
sarb
mov
add
xchg
fnsave
inc
lods
js
adc
test
inc
cmp
ja
loopne
dec
jle
sub
xchg
xchg
repz
jg
jmp
dec
xor
inc
dec
xchg
adc
cmpsl
cmp
mov
je
movsl
jmp
lcall
jnp
add
ficoml
pop
int
in
xchg
pop
aaa
xor
cmp
push
dec
cmc
fscale
pop
add
imul
inc
ja
jecxz
aam
fisubs
adc
fwait
into
lods
xchg
pop
jle
or
outsb
in
mov
aas
pop
add
pop
fxch
sub
push
into
cmp
adc
stos
xchg
mov
push
imul
mov
int3
popf
insl
rcll
push
js
jle
js
lahf
xor
inc
stos
scas
sbbl
lock
xlat
jg
and
scas
stc
test
cmpsl
ret
hlt
sub
repnz
xchg
push
icebp
insl
push
xchg
cmp
rclb
call
sbb
dec
mov
mov
pop
jbe
and
dec
int
cmp
dec
lret
mov
cmc
inc
xor
out
stos
mov
fistl
mov
bound
sub
mov
xor
jb
xchg
das
ljmp
and
mov
dec
xor
or
lcall
adc
xor
and
jg
leave
pop
loope
dec
mov
jo
inc
mov
push
xchg
cltd
hlt
test
dec
cld
adc
pop
pop
cs
fcmovne
mov
cltd
mov
mov
icebp
dec
or
sub
jecxz
into
add
pop
test
add
pop
out
or
inc
loopne
hlt
iret
jb
aaa
dec
out
add
mov
scas
mov
lcall
pop
je
in
ljmp
adcb
outsb
aas
or
stos
add
sbb
icebp
cmp
pop
lods
mov
sbb
mov
xor
push
insl
movsb
je
pop
out
in
in
add
sbbl
movb
sbb
jns
mov
jb
push
fbld
call
jl
mov
std
mov
adc
adc
cmp
nop
ss
clc
cld
push
pop
inc
fadds
icebp
cmp
lods
xor
ret
push
mov
add
fisttpll
add
das
aam
cmp
rorb
shlb
repz
arpl
fiaddl
scas
xchg
rcl
jmp
xchg
pop
mov
push
pusha
insl
inc
mov
sub
jecxz
or
test
out
imul
jl
outsl
xchg
pusha
stc
sbbb
lods
mov
mov
cltd
push
xor
xlat
test
push
rolb
ds
or
test
mov
jecxz
out
mov
insl
outsl
imul
fld
lret
sub
xor
inc
xchg
outsb
mov
jb
xchg
xor
mov
cs
adc
aad
add
push
add
cmc
and
pop
les
pop
cltd
jp
xchg
in
mov
mov
cmp
loopne
mov
loopne
mov
ja
lret
jo
pop
adc
inc
mov
nop
pop
call
ret
cmpsb
popf
fdivl
or
scas
mov
das
pop
imul
xchg
ficompl
xchg
push
jl
xchg
mov
repz
mov
outsb
adc
fmull
dec
in
push
xor
enter
add
out
popa
xchg
stos
test
mov
adc
sub
lods
nop
pushf
out
push
pop
pop
ret
leave
sbb
push
mov
imul
sbb
dec
aaa
jp
mov
cmpsl
or
push
lret
hlt
sbb
cmpsl
mov
push
sbb
pop
push
adc
jge
sbb
rcrb
dec
add
sub
mov
rcrb
out
or
or
sub
fbstp
out
pop
dec
pushf
stc
sbb
icebp
push
addb
mov
iret
add
les
adc
loope
or
and
in
and
ret
lds
outsl
je
shll
xchg
cli
sbb
iret
test
xor
mov
sub
pop
jns
dec
jno
push
outsl
pop
inc
sub
mov
fbld
subb
xchg
sbb
sbb
push
xchg
mov
sahf
xchg
and
out
mov
or
push
int
or
inc
xchg
and
dec
mov
dec
jnp
pop
test
add
inc
dec
push
bound
inc
sub
shrl
inc
sti
repnz
mov
xchg
add
clc
push
hlt
dec
mov
pop
adc
lret
dec
pop
int3
orb
push
fs
loop
jecxz
push
std
or
mov
shl
xchg
ljmp
roll
sbbl
rcl
cmp
mov
pop
xchg
lahf
and
cmp
mov
and
xchg
lds
lahf
push
push
shll
push
pop
addl
mov
jecxz
inc
repz
in
jo
jge
lahf
xor
test
aad
jo
loope
stc
test
inc
mov
push
xchg
idivb
xor
pushf
mov
push
insb
push
popa
cmp
cli
pop
lret
mov
push
jge
stc
push
mov
and
cwtl
lcall
add
mov
idivb
cltd
lods
push
in
ja
mov
adc
in
in
stc
cmc
jl
pop
mov
xor
xor
lods
cmpsl
pop
iret
mov
pop
sub
shlb
jo
int3
jge
clc
push
clc
pop
std
fs
xor
rolb
sbb
dec
js
test
arpl
inc
sub
add
adc
push
or
sbb
ljmp
call
fstl
add
add
xor
inc
xchg
pusha
or
enter
pop
jge
lahf
mov
adc
jmp
in
sbb
jns
cmpsl
xchg
cmp
inc
lret
imul
lods
js
ret
add
add
pop
pop
jp
mov
mov
add
xor
xchg
shll
in
movsb
sub
dec
dec
xchg
lds
adcb
inc
popa
xchg
xchg
xchg
sub
aam
and
fmull
fiaddl
dec
je
movnti
ret
sub
fwait
sbb
ror
xor
mov
xor
in
mov
cmc
mov
ficoms
stos
je
fisttpll
mov
jae
or
and
into
fldcw
sub
pusha
scas
sahf
ret
cmpsl
lret
sbb
out
out
fs
sbb
mov
sub
aas
jl
lret
pop
or
inc
sbb
cmp
lea
repz
rclb
push
fdivl
cmp
dec
roll
inc
push
idivb
mov
cmp
in
outsb
aaa
fidivrs
scas
testb
decb
pop
iret
hlt
out
mov
jnp
test
xlat
mov
insl
pop
push
push
sar
insb
xchg
mov
stos
jb
cmpb
rcr
and
aad
int3
lea
divb
lret
sub
cmp
cmp
add
mov
adc
imull
push
orb
cmp
fcmove
stos
gs
xchg
xchg
rorb
cli
hlt
pop
lcall
clc
stc
xor
sub
cmp
les
inc
test
sbb
das
pop
cmpsb
lahf
jl
adc
xchg
adcb
stc
jno
imul
int3
in
push
popf
cmpb
andl
dec
pop
xor
mov
popa
mov
shrb
mov
cld
jle
push
das
fs
sbb
popf
dec
sub
loop
mov
xor
mov
or
incl
cmp
or
lcall
das
bound
push
adc
popa
daa
dec
pop
jae
mov
ret
scas
scas
push
test
push
dec
test
cltd
loop
xchg
xchg
and
out
jbe
mov
stc
es
mov
mov
test
cs
mov
leave
or
out
inc
jo
pusha
ss
imul
jbe
int
sbb
cmp
je
popl
mov
cli
push
push
and
clc
sar
pop
lds
nop
xchg
imul
call
inc
test
addr16
sub
sbb
xchg
jno
dec
in
push
and
jmp
lret
ret
sub
xorb
lret
or
pop
dec
xor
cltd
fldenv
jmp
xor
mov
rcl
cmpsb
sahf
test
cwtl
std
add
lock
clc
in
aas
ja
ret
sbb
lock
clc
sbb
stos
ja
in
cmp
int3
mov
or
lret
sub
cmp
jae
mov
dec
mov
cmpsl
lds
mov
push
mov
push
dec
lret
aam
mov
sub
loopne
insl
mov
jg
mov
stc
sbb
xor
inc
mov
add
insb
ds
call
xor
add
fwait
sub
ror
dec
iret
icebp
pop
push
cli
adc
push
orl
push
sub
mov
clc
cmpsl
cmp
cmc
mov
aam
loop
andb
stc
dec
mov
and
mov
cmpsl
call
jge
cmp
aad
push
jno
jmp
mov
lods
mov
add
daa
outsl
pop
pop
loope
es
sub
xor
jge
inc
jl
sbb
fistps
push
iret
xor
xchg
fidivl
xchg
pop
gs
or
jmp
push
movsl
add
nop
inc
pop
push
push
xor
xor
insb
loop
arpl
roll
ret
cld
mov
in
ja
or
pop
mov
repnz
mov
mov
out
scas
rcr
inc
xlat
cmp
divl
out
pop
mov
add
int3
aaa
out
sub
push
call
and
inc
cmpsl
mov
add
je
add
sub
aad
or
push
inc
outsb
shlb
mov
sbb
js
jg
sub
icebp
sbb
pop
jb
jae
mov
xor
aaa
icebp
or
mov
mov
dec
jne
mov
pusha
faddl
out
scas
gs
arpl
and
cmp
stos
into
and
sbb
jno
push
fs
test
xchg
push
adc
xchg
jnp
invd
jl,pt
or
or
cmp
inc
popf
mov
xchg
cmp
shll
loopne
stos
add
cld
dec
fcoms
jecxz
xor
das
pop
pop
aaa
or
enter
iret
fadds
push
push
adc
loop
stos
in
and
inc
pop
mov
mov
sub
mov
roll
mov
popa
je
dec
mov
xchg
std
test
pop
popf
cmp
ja
jmp
ret
xchg
jge
cmp
in
jmp
inc
rcrb
adc
adcl
pushf
rorb
shr
inc
push
or
loopne
cmp
dec
mov
sarl
shl
movsb
pop
stos
mov
xor
int3
xor
push
cmc
subb
jnp
imul
xor
sahf
out
sbb
jae
repz
push
jecxz
in
cmp
cltd
js
cmpsb
inc
pop
lahf
jge
sub
ficoms
lea
cmpsl
xchg
or
or
rorl
jmp
push
mov
cwtl
push
pop
enter
jno
xor
push
mov
adc
leave
cmc
out
mov
add
scas
fimuls
mov
cmp
sbb
mov
jge
out
sub
out
cmp
int
mov
pcmpeqd
inc
or
rclb
ret
jne
lahf
addl
decl
lods
xchg
adc
shl
push
push
call
jg
jmp
je
sub
cli
and
in
xor
cmp
vrcpss
aam
call
adc
mov
lahf
popf
fiadds
das
incl
gs
mov
jle
mov
mov
jg
mov
js
lods
icebp
das
push
or
lcall
adc
xchg
sbb
mov
xor
in
dec
dec
jne
cltd
xchg
or
or
xchg
add
xchg
outsb
and
dec
pop
cmc
push
cmp
lock
or
filds
jno
in
cmp
dec
movsb
fldt
je
cs
mov
mov
notb
pop
push
pop
pop
incb
loope
push
or
and
cmc
dec
ja
mov
cs
pop
lahf
mov
std
mov
fcmovu
jecxz
insl
or
pop
leave
or
and
push
and
inc
adc
adc
adc
aad
gs
and
andl
pop
int
imul
ret
popf
lods
xor
cmp
xchg
data16
lds
data16
xor
outsl
inc
inc
addb
hlt
xchg
xor
out
xor
cmpsl
dec
repnz
mov
sbb
pusha
add
sbb
sar
push
iret
pushf
mov
idivl
cld
lcall
idivl
fbld
data16
ja
es
push
adc
dec
ret
lcall
and
rorl
push
sub
je
push
add
mov
mov
repnz
ret
andb
xchg
outsb
pop
pop
mov
das
xchg
sbb
cmp
xor
xchg
and
cmp
mov
lretw
pop
clc
call
ret
inc
cld
xor
push
aam
lcall
hlt
cmp
repnz
and
adc
cmp
mov
sti
cmc
ja
push
mov
mov
inc
mov
movsl
xchg
fwait
xor
js
sbb
sbb
sub
ret
add
xchg
enter
or
imul
dec
push
cmp
add
push
imul
lret
scas
ret
jp
pop
or
fldl
pop
mov
in
sbb
jo
lcall
popf
stos
lret
ljmp
pop
repnz
in
jge
xchg
add
mov
mov
or
leave
xchg
pop
xchg
inc
mov
push
jle
xchg
in
pop
les
xchg
xchg
nop
or
popf
aas
push
sbb
lcall
sbb
int3
push
loop
mov
jbe
std
pop
and
cmp
push
adc
test
jbe
fwait
jge
std
or
sti
shll
ret
cmpsl
push
mov
test
lret
sbb
out
pushf
jo
cmp
push
popw
xchg
popa
testb
out
or
mov
pop
sbb
pop
lock
stc
cltd
das
in
mov
xchg
jl
pop
data16
jbe
sbbl
imul
aam
lcall
jp
jne
dec
and
subps
scas
or
aaa
pop
out
pusha
sub
cmp
mov
ret
adc
add
sub
push
or
pop
cltd
mov
sbb
std
sub
sbb
dec
or
in
or
lea
test
or
mov
xchg
inc
dec
mov
scas
pop
jge
fstl
jb
sbb
and
outsb
mov
fmuls
mov
jo
jg
mov
cmp
dec
in
jno
cmp
add
sbb
sbb
fwait
int3
mov
data16
fwait
sbb
lret
sub
enter
xor
fldenv
sub
cs
jle
mov
sub
lods
movsb
push
fwait
pop
bnd
cwtl
arpl
idivl
leave
xchg
dec
sbb
or
xchg
mov
cli
or
out
push
sbb
adc
cltd
add
and
push
inc
stc
jmp
data16
add
dec
leave
test
mov
enter
dec
lea
scas
pop
test
sbb
sbb
jge
jno
xor
dec
push
and
push
das
mov
jo
std
jmp
adc
dec
inc
xlat
les
fbstp
pop
push
push
jo
ret
out
es
and
insl
xor
cmpsl
xor
repz
mov
scas
aas
cmp
stos
sub
jo
pop
loope
pop
add
jg
push
mov
or
pop
push
andb
cld
cltd
inc
ror
lods
repz
daa
imul
scas
pop
mov
lods
inc
insb
sbb
lret
dec
int3
dec
push
add
mov
push
out
fdivrl
les
lods
ss
mov
sub
mov
shlb
outsb
push
stos
pop
xlat
xor
int3
popf
lahf
nop
fsubl
add
roll
add
nop
adc
mov
outsb
push
lret
mov
pop
inc
push
and
in
xchg
cli
mov
outsb
int
shll
mov
cmp
push
or
nop
cmp
jno
repnz
dec
and
add
sti
and
inc
sub
xchg
nop
push
testb
mov
nop
or
and
pop
pop
imul
mov
adc
cmpsl
mov
mov
test
mov
mov
into
je
sub
or
add
dec
mov
jne
or
mov
gs
out
fmull
and
mov
push
rol
mov
fisubl
mov
pop
in
imul
adc
xchg
cmc
lds
pop
push
aaa
test
adc
dec
sub
xchg
jge
add
daa
mov
adc
inc
add
outsb
out
addr16
add
fistpl
mov
arpl
cmp
sub
jb
ljmp
adc
push
cmpl
sahf
add
push
add
test
mov
dec
aas
pop
ret
sahf
jns
mov
shll
ljmp
fstpt
cli
fucomi
enter
dec
add
mov
lods
adc
pushf
ja
jae
add
and
dec
sbb
mov
jg
or
in
xchg
mov
arpl
and
mov
inc
dec
xor
mov
dec
ret
cmc
jbe
rol
pop
mov
adc
mov
mov
adcb
push
imul
mov
push
add
cmp
adc
mov
dec
mov
mov
jnp
pop
out
shlb
or
in
int3
aas
jl
jo
inc
aaa
mov
out
pop
lea
push
fidivrs
cmp
sub
mov
and
testb
pop
mov
lods
scas
add
testb
imul
dec
pushf
fsubrs
repnz
xor
mov
jge
mov
clc
sub
xor
dec
repz
adcb
push
scas
sub
xorl
xchg
jnp
cmp
dec
xor
loopne
jne
mov
gs
sbb
sti
out
xor
outsl
aam
sub
je
add
jle
das
inc
inc
in
push
sub
sbb
xor
outsl
pop
out
and
sbb
inc
daa
fstpl
push
lds
mov
mov
test
mov
aas
fs
sbb
cwtl
dec
jmp
divb
repnz
fwait
ret
push
mov
cmpsl
pushf
cld
jg
push
or
pop
ds
pop
rorl
add
and
cmp
aad
dec
xchg
ret
mov
push
lods
xchg
aas
mulb
enter
mov
data16
dec
jp
inc
data16
dec
xchg
sahf
aad
mov
aas
rcrl
xor
inc
fildll
xchg
cmpsl
fs
aam
sub
les
mov
push
mov
js
movl
fnsave
xlat
mov
add
jle
add
inc
imul
ficompl
pop
mov
sbb
xchg
nop
in
lcall
inc
mov
adc
add
xorb
sub
ficoms
pusha
imul
cltd
sbb
dec
sbb
or
pop
int
ljmp
or
insl
ljmp
cmp
sarb
shll
jns
pop
push
test
jb
sbbb
add
or
mov
or
cmp
in
enter
rcrl
dec
imulb
mov
jb
ljmp
mov
iret
inc
inc
and
mov
inc
movb
jmp
sbb
xlat
sbbb
into
or
xor
jae
sahf
test
cmp
inc
adc
lret
jmp
aam
mov
push
icebp
incb
or
adc
out
cmp
in
inc
test
in
dec
cmpsb
cltd
cwtl
movsb
or
sub
clc
fistl
std
inc
mov
sti
xor
lret
data16
mov
xlat
adc
xor
push
lods
stc
clc
orb
andb
dec
or
mov
inc
inc
iret
in
stos
sbb
insl
imul
xchg
mov
mov
xor
push
lret
xor
in
lcall
lret
sbb
cld
add
lds
jne
mov
insl
mov
xchg
jecxz
mov
hlt
cld
mov
add
arpl
add
pushf
mov
push
stos
icebp
ds
add
mov
pop
adc
sub
or
push
aaa
bound
mov
aas
sub
sub
mov
mov
ficoml
cmp
jo
imul
aaa
push
add
push
fwait
mov
mov
mov
adc
ficompl
xor
fsubs
push
sbb
add
cmp
mov
scas
push
jns
in
inc
xchg
cmpsl
xchg
fiaddl
sbb
daa
jno
jo
lods
inc
mov
adc
or
mov
jbe
jle
or
mov
rorb
ret
jo
test
mov
rcrb
sub
xchg
pop
xchg
out
jmp
add
add
jecxz
ret
or
test
loop
dec
dec
loopne
mov
cmpsb
mov
pop
jmp
cwtl
inc
rclb
fdivrl
push
xchg
in
mov
mov
call
mov
test
jp
or
inc
subl
test
test
pop
into
sahf
inc
add
and
add
sbb
inc
sbb
mov
sahf
pop
add
in
lods
mov
sbb
xchg
imul
xor
lcall
mov
jg
cmp
mov
cmp
adcl
jp
xchg
or
bound
jl
rolb
sub
push
fdiv
sbb
sub
cltd
add
mov
gs
push
push
xchg
addb
das
shlb
shrl
sub
in
push
loope
sbb
daa
mov
pop
div
in
mull
mov
mov
cs
mov
pop
int3
mov
cs
add
cmp
ret
loopne
jns
mov
insb
push
xor
sbb
add
ret
insl
lret
in
push
cmpsb
cmpb
lret
mov
cltd
les
ja
push
mov
push
movsb
mov
std
sub
notb
lods
fldcw
xchg
xlat
mov
jnp
dec
inc
jle
test
adc
xchg
rorl
data16
and
ret
or
cmpb
pop
nop
movsb
icebp
cli
in
cmovo
fistpl
xchg
mov
sti
sahf
data16
jns
imul
dec
and
inc
inc
and
jne
les
pusha
movsb
out
jmp
push
jmp
pop
rcll
sbb
mov
push
mov
arpl
int
mov
inc
adc
xor
and
pop
lret
imul
mov
test
pushf
lds
jecxz
push
outsb
mov
sbb
push
push
xor
sti
out
mov
mov
xchg
popl
lahf
pop
and
add
mov
mov
in
push
mov
cltd
xchg
pop
imul
mov
loop
inc
xchg
je
cmp
aam
sbb
fldl
xchg
pop
leave
in
xor
sub
jb
jb
push
lds
enter
negb
mov
push
fucomp
mov
adc
fildll
negb
out
cmpsb
xor
frstor
into
lods
dec
inc
out
fisttpl
loope
mov
dec
mov
push
jnp
inc
adc
ds
push
lods
out
cli
push
icebp
lods
jnp
pop
mov
pop
mov
stc
push
fmull
loop
push
out
pop
sbb
mov
cmc
enter
lods
arpl
insl
jno
sub
xchg
inc
in
push
pop
and
adc
mov
add
popa
jnp
shl
sbb
or
mov
fs
les
outsl
xorl
movsl
ret
xchg
or
pop
and
or
push
sbb
xchg
xlat
jae
iret
mov
or
pavgb
fcom
jecxz
lea
lahf
lods
xchg
ds
push
cmp
xor
decl
ljmpw
imulb
cmc
xor
mov
jle
inc
and
push
push
jmp
sbbb
mov
and
packsswb
fnstenv
enter
jns
add
and
lcall
push
push
leave
xchg
jo
dec
push
in
add
mov
sub
sub
sub
adc
pinsrw
test
xchg
mov
insb
js
pop
test
bound
xor
pop
cwtl
jecxz
or
mov
std
jbe
int
xlat
jbe
ret
inc
push
push
xchg
mov
and
das
ja
push
leave
scas
mov
insb
mov
dec
mov
or
test
or
and
or
mov
outsb
mov
add
sahf
xor
insb
mov
cmp
xchg
sbb
dec
ljmp
icebp
mov
or
inc
xchg
mov
iret
mov
mov
vpmovdb
xchg
punpckhdq
fnstsw
pop
movb
mov
jns
adc
aaa
push
aam
nop
or
mov
sbb
jb
push
inc
cmc
mov
and
lock
mov
mov
std
rorl
cmpsb
and
subb
jb
fsubrl
add
lea
pop
ficoml
sbb
jb
cmp
push
and
aad
xor
lds
cld
sbb
shrl
mov
xchg
int
cld
js
mov
ret
ds
mov
mov
adc
lea
aaa
pushf
mov
jo
xor
xchg
pop
cmp
stos
jle
rcrb
add
in
aaa
mov
mov
mov
pop
sub
add
shlb
and
sub
gs
jg
jae
inc
adc
insb
test
mov
sbb
cmc
test
popa
xchg
cld
push
inc
push
sub
lahf
out
sbb
push
pop
lock
jo
jb
outsb
sub
ds
gs
cmpsl
jle
scas
js
movsl
mov
mov
stos
mov
into
sbb
loope
jp
jb
mov
lret
cmp
adc
addr16
scas
push
adc
mov
cmp
test
lret
movsl
iret
dec
shll
out
and
xor
into
outsb
add
mov
push
push
fnsave
inc
cmp
enter
pop
xchg
cmp
mov
add
cmp
rcll
xor
push
push
mov
gs
cltd
loope
fwait
mov
cld
out
mov
or
ss
jno
lods
sub
pop
xor
je
inc
inc
cmp
data16
sbb
insb
dec
push
sbbl
sti
xor
dec
clc
mov
mov
rolb
xchg
mov
push
cmc
inc
ret
xor
or
add
or
mov
ss
dec
out
sbb
push
push
mov
xor
inc
xchg
enter
leave
xor
jle
mov
hlt
cli
sub
xchg
xchg
mov
add
mov
inc
cli
or
out
sub
adc
fidivl
insl
push
retw
stc
ljmp
bound
add
outsb
ljmp
pop
lret
sbbl
call
incb
mov
mov
dec
call
mov
and
jae
out
shl
sbb
sub
pushf
xorb
popa
and
mov
jmp
in
out
push
jge
dec
cltd
and
sahf
and
xchg
and
mov
mov
push
sub
cmp
lds
jg,pt
push
or
jns
stc
mov
mov
shrl
xor
xchg
cwtl
or
std
cmp
or
mov
mov
fmul
add
nop
adc
mov
xlat
mov
stc
pushf
hlt
push
mov
jns
leave
jmp
dec
incb
adc
mov
and
hlt
push
sub
push
fistl
jl
loop
mov
xchg
scas
inc
fsqrt
mov
inc
xor
call
js
cld
jg
or
push
in
cmp
jle
xchg
add
hlt
push
push
mov
jge
cwtl
addr16
mov
xchg
adc
mov
lret
adc
insl
dec
pop
mov
dec
add
push
push
xor
daa
fldenv
xchg
sbbb
mov
enter
push
sbb
inc
dec
cmpsl
aam
shll
call
and
imul
inc
mov
stc
sub
pop
add
leave
imul
add
pshufw
add
jle
in
mov
adc
pop
aaa
outsl
fisubs
mov
push
mov
nop
js
pop
push
lods
pop
in
xchg
test
pushf
or
flds
jle
add
cmp
cmp
dec
mov
insl
call
xor
sub
mov
call
dec
outsb
iret
sub
mov
aaa
div
push
fildll
jbe
pop
jge
insb
ret
out
pusha
ljmp
lahf
jmp
iret
dec
fwait
push
fistpll
pop
imul
mov
rcll
stos
dec
psubsw
xchg
dec
stc
shrl
je
jb
mov
xchg
fldenv
xor
push
dec
call
xchg
push
jbe
and
mov
mov
inc
mov
push
in
xor
in
imul
adc
bound
inc
add
rcrl
xchg
stos
lret
orb
dec
jb
incl
pop
sub
in
mov
xchg
cmpsl
movsb
jne
cmc
std
loope
pop
lock
dec
das
dec
xor
fs
int
sti
and
out
mov
out
fmul
bound
ror
sar
ja
push
lock
decb
xchg
xor
in
aam
movsl
push
push
jno
sti
je
fwait
pop
lods
push
pop
outsl
enter
or
fcoml
cmp
mov
push
mov
xchg
inc
inc
pop
pop
cmp
mov
lods
stos
inc
jne
push
inc
add
jno
dec
sbb
or
push
stos
mov
xor
test
lock
mov
ret
adc
iret
mov
call
je
cmp
int3
out
int3
add
push
lret
cmp
aaa
mov
cmp
jns
dec
cwtl
or
jmp
xor
mov
in
dec
stos
jge
adc
test
fstl
pop
push
loope
dec
and
xchg
and
cmc
cli
mov
iret
pop
insl
jno
lods
adcl
insb
mov
les
lods
shll
push
pop
insb
xchg
fbld
stos
xorb
add
jnp
sbb
sbb
rorb
sbb
mov
mov
mov
mov
pop
fstpl
push
outsl
and
inc
shlb
adc
faddl
out
sbb
xor
pop
jmp
test
pop
sbb
pusha
dec
addr16
mov
int3
cmp
and
aaa
je
movsb
mov
pushf
cmp
das
or
les
pop
imul
addr16
icebp
mov
lods
dec
mov
mov
shrb
lea
mov
cmp
cwtl
outsb
outsb
cwtl
popf
cwtl
std
dec
sti
pop
pop
xor
into
idiv
jne
leave
sbb
iret
push
cmp
push
rorl
dec
rorl
test
out
and
mov
mov
mulb
pop
mov
dec
rclb
scas
out
mov
pop
inc
pop
nop
lea
or
pop
iret
pop
pop
nop
push
out
adc
add
or
fldln2
into
ljmp
mov
add
mov
dec
sbb
scas
mov
cltd
push
pop
and
pop
push
jae
push
inc
stos
add
inc
sbbb
negb
or
sbb
lea
jns
inc
add
addr16
cmp
sub
cmp
test
fcoms
jl
pop
inc
imul
call
mov
dec
rorb
je
xor
hlt
or
fsubrs
ss
andl
push
dec
push
sbb
lods
sub
insl
push
lahf
xchg
lds
iret
aas
aas
add
mov
ja
dec
adc
sub
sbb
pop
add
mov
shlb
fdivs
fdivr
xchg
push
ret
push
iret
arpl
jns
test
mov
sub
sarb
pop
lret
sahf
jno
bswap
or
pop
adc
jbe
stc
xor
in
out
adc
xor
or
sub
jp
xchg
das
mov
push
ja
sub
or
pop
cmpsb
adc
xchg
and
sub
xchg
adc
xorl
pop
in
jmp
and
out
inc
lds
push
mov
jno
cmp
or
pop
sub
insl
loopne
push
mov
push
scas
push
adc
xor
stos
mov
push
and
cmp
nop
sahf
shll
pop
add
aaa
rcrl
mov
pop
or
push
ret
sbb
sbb
in
push
adc
cmp
into
add
mov
mov
cli
mov
jae
mov
aas
dec
pop
imul
shrl
and
push
rcrb
jb
test
out
jo
stos
cld
test
xor
pusha
rcr
inc
and
in
inc
adc
popa
mov
out
sub
xchg
sbb
add
cli
call
lea
xchg
outsl
sahf
loopne
das
pop
pop
sub
push
sub
stos
mov
lcall
mov
and
data16
out
lcall
add
aaa
and
std
push
xchg
push
das
dec
mull
cld
dec
xor
dec
cmpsb
sub
testl
negl
loop
cmp
test
push
jge
sbb
mov
icebp
je
jne
inc
out
imul
daa
sti
pop
jmp
test
in
stos
push
pop
daa
test
sbb
sub
jne
lret
icebp
mov
sbb
ret
jne
and
ss
lcall
xchg
les
out
cli
test
push
jle
xlat
or
jp
insl
cld
fcompl
inc
cmp
cmp
fildl
cmp
jg
pop
add
dec
sar
inc
mov
pop
xchg
pop
adc
sbb
dec
notl
neg
jle
mov
push
mov
xchg
imul
mov
daa
xchg
mov
stos
add
sub
inc
nop
cmpb
inc
sub
fldenv
jae
leave
jo
out
dec
das
pop
lret
sbb
sbb
cltd
ss
lcall
iret
cmp
ja
fstpl
rcll
xor
add
add
das
cmp
push
dec
repz
sarl
fwait
fwait
ret
mov
sub
xor
cwtl
imul
push
nop
mov
and
scas
sbb
and
pop
insl
or
mov
mov
xor
popf
xor
and
pop
sahf
fidivs
sbbb
cmp
rorb
pop
xchg
cmpsb
in
sbb
or
dec
out
or
iret
mov
inc
in
pop
mov
pop
add
cmp
sub
insb
dec
cmp
add
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmpb
je
sub
cmp
ja
cmpb
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
adc
cmp
dec
add
pusha
inc
add
add
cld
out
incl
add
add
add
add
add
add
jb
push
in
cmp
inc
jae
loopne
jb
call
add
add
jae
xchg
pop
jb
jnp
xchg
cmpsl
push
pop
add
jmp
mov
cmpl
stc
jmp
jne
je
jb
rorb
sbb
nop
pop
mov
mov
arpl
or
inc
mov
mov
jmp
stos
aaa
out
mov
jae
imul
add
or
iret
inc
negb
sub
add
std
add
jmp
cld
insb
push
sub
jmp
out
jne
jmp
mov
jmp
rorl
add
jmp
pop
jne
jae
ret
aad
push
add
add
add
inc
jmp
xor
jb
lods
mov
or
xor
xchg
lods
and
stc
notl
pop
pop
mov
je
sbb
repnz
sti
pop
aas
cmc
cld
or
or
shl
add
xchg
or
dec
test
xor
xor
mov
push
repnz
xor
jb
mov
ficoms
sub
lock
jp
sub
icebp
add
fisttps
mov
decl
push
mov
fstps
in
add
mov
std
xchg
fistpl
push
xchg
cmp
push
sub
decl
stc
or
cmpsl
cmp
or
data16
mov
cmp
xor
dec
sar
xchg
fistpl
lods
xchg
dec
sbb
out
or
addb
sbb
or
mov
or
or
loop
in
push
repz
push
jp
stos
push
insl
shrl
aaa
xchg
sbb
push
